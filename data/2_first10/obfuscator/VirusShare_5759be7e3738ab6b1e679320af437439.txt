push
call
ret
ret
pop
int3
sub
outsl
cltd
popf
sub
sub
cmpsl
add
and
aas
dec
xor
dec
fsubs
lods
mov
push
rcrl
lsl
xchg
push
jecxz
and
test
ficoml
aaa
or
int3
and
fs
pop
pushf
jns
mov
addr16
les
jo
add
cltd
sbb
mov
inc
scas
sbb
pushf
mov
negb
mov
jle
sbb
mov
repnz
ret
add
mul
outsl
popa
gs
das
xchg
mov
mov
inc
xchg
dec
xchg
lods
std
sbb
je
xchg
ljmp
sub
fs
je
je
dec
repz
fcmove
add
jae
icebp
scas
cmp
jae
pop
sar
mov
fwait
addr16
aaa
test
cmc
out
sub
lock
lea
xchg
outsb
aas
bound
sbb
lahf
mov
dec
repz
adc
or
sbb
cmp
cmc
mov
xor
jmp
int
jns
cs
lahf
iret
scas
mov
cltd
nop
cmp
and
inc
xchg
out
outsl
mov
push
dec
js
test
out
cmp
xchg
testb
loop
scas
test
js
or
mov
loop
and
out
stos
lds
xlat
push
decb
jmp
sbb
sbb
daa
notl
faddl
adc
pop
sbb
jp
scas
repnz
enter
dec
adc
lea
xchg
mov
popf
lods
cmp
sbb
addr16
pop
push
jg
mov
jge
std
dec
inc
xchg
pop
push
push
xchg
push
jns
lea
pop
decb
in
icebp
lret
iret
ljmp
subl
call
jge
mov
in
mov
cwtl
push
aam
mov
push
adc
push
cld
xchg
icebp
sbb
dec
call
pop
out
ficomps
test
nop
mov
and
test
in
sbb
int
aas
mov
inc
and
sar
cmp
fcoms
push
add
into
ljmp
into
jle
mov
loop
mov
and
mov
addr16
inc
cmp
js
cmp
mov
mov
jbe
jl
mov
cmpsl
inc
out
sub
lret
jecxz
shrl
gs
jb
push
lcall
xor
aad
fstpt
xchg
jno
pop
movsl
das
sbb
int3
push
outsl
enter
cmp
pop
inc
jle
mov
push
dec
mov
aaa
hlt
xor
dec
orb
cmp
jo
jge
cmp
add
and
jae
in
lahf
jnp
ljmp
iret
lss
cmp
loopne
lcall
data16
bound
mov
mov
sub
or
dec
es
inc
pusha
test
mov
push
or
sar
ljmp
xchg
or
inc
outsb
push
xchg
sbb
ds
stos
jge
inc
ret
test
dec
iret
sbbl
sbb
imul
shl
shll
fldcw
mov
cmp
lea
sub
sbb
fwait
sahf
stos
mov
xchg
mov
inc
fnsave
or
pop
fisubl
sbb
inc
jo
stos
jle
mov
xor
dec
inc
xchg
in
je
mov
sub
inc
xor
lcall
cmp
je
or
out
jno
enter
and
ret
add
dec
gs
jg
ljmp
std
dec
int
mov
insl
cwtl
mov
push
je
int3
lret
inc
filds
sub
mov
adc
cmp
or
xor
adc
sbb
arpl
mull
add
lock
inc
cs
adc
stc
jb
sub
sbb
jmp
fstps
enter
rclb
adc
cmp
pop
jo
rorl
lea
outsl
add
jbe
bound
fidivl
insb
imul
repnz
cli
pop
out
popa
andl
xchg
outsl
cwtl
add
aad
xchg
rolb
lods
xor
lods
or
cmp
cmc
subb
dec
inc
sub
mov
and
icebp
jecxz
inc
or
lahf
dec
mov
push
es
jbe
sbb
pop
cmpsl
xorb
daa
jbe
rclb
add
out
and
lcall
inc
xchg
sub
in
jl
mov
add
shll
insl
cmp
jb
mov
xchg
or
popa
lods
xchg
bnd
cmp
jecxz
sahf
je
ret
ffreep
inc
popa
pop
mov
lahf
pop
nop
xchg
mov
or
pop
lock
cmp
rorl
imul
jo
loope
sub
add
rcr
cltd
ds
icebp
mov
rolb
mov
ffree
dec
sub
inc
pop
arpl
mov
les
adc
lods
or
pushf
mov
test
and
je
dec
sbb
pop
jne
mov
test
jnp
mov
in
pop
les
outsb
stos
stos
inc
imul
add
pop
hlt
fisttpll
sbb
or
push
and
xchg
sub
and
mov
xchg
ds
mov
ret
std
add
ss
and
outsb
jg
add
mov
adc
imull
stos
mov
mov
cmpsl
test
jbe
cli
cli
pop
nop
insl
adc
dec
cltd
mov
cmpb
mov
ds
outsb
ljmp
inc
daa
les
sti
popf
scas
out
sarl
and
cmp
inc
arpl
dec
fstpt
or
push
inc
mov
cltd
pop
pop
push
repz
fs
mov
data16
push
sub
outsl
loop
adc
test
aam
lret
xchg
xor
leave
xor
xchg
jo
fistpl
sbb
push
out
roll
jno
dec
in
hlt
inc
or
inc
inc
adc
outsb
inc
sahf
or
cmpsb
ljmp
shrl
jbe
dec
adc
sub
or
add
test
adc
jp
cmp
into
dec
cs
mov
ss
jg
jmp
popa
jns
outsb
jmp
jp
rorl
stos
pop
out
into
adc
pop
in
inc
pop
or
rsm
add
aaa
aam
xor
lea
icebp
repnz
and
fnstcw
adc
pop
or
aad
xor
jl
and
hlt
fmul
fcoms
test
js
fstps
jno
sbb
mov
inc
mov
out
xchg
imul
inc
lahf
cmp
mov
xchg
push
and
push
or
mov
stos
push
add
sbb
add
mov
jl
arpl
mov
jb
xor
inc
stos
ljmp
shl
sub
mov
pop
pop
or
lock
xchg
cmp
hlt
xlat
inc
mov
add
or
test
sbbl
mov
sbb
dec
aas
outsl
cmpsl
push
and
xchg
ret
xor
mov
push
adc
stos
inc
mov
rcrl
pop
push
out
fbstp
mov
mov
aaa
sti
ljmp
ds
inc
scas
push
incb
sbb
xchg
cmp
movsb
arpl
fcos
jns
lock
ja
mov
aam
sbb
leave
outsb
movsl
lock
data16
ja
popf
dec
stos
pusha
mov
mov
cwtl
dec
sbb
shll
fistpll
adc
cli
sbb
in
cld
insl
je
rcr
adc
test
cmpsb
adc
mov
repnz
mov
mov
sub
push
cmpl
cmc
cld
jnp
mov
adc
adc
push
aad
es
inc
sub
adc
dec
stc
xchg
sub
and
test
negb
aaa
out
lods
iret
in
jp
sti
out
xchg
push
cmp
js
sbb
out
les
cmp
sub
lock
mov
pushf
add
mov
mov
cmpsb
ja
sbb
add
cli
push
testb
cld
push
sub
cmp
add
xchg
aas
out
clc
popa
jno
mov
movsb
jbe
adc
fadd
mov
decl
or
dec
push
adc
out
scas
test
xchg
lea
xor
push
jmp
jmp
push
ret
fwait
adc
xchg
xor
mov
mov
insb
fcompl
push
add
lret
sbb
sbb
cs
xchg
jnp
and
xor
sbb
inc
push
cmpsl
jbe
mov
mov
ljmp
je
cmpl
adc
push
ljmp
adc
jle
lock
xchg
inc
in
fsubrs
test
cmp
in
xor
repz
insb
mov
inc
add
and
dec
or
add
push
cmp
into
inc
test
xchg
clc
push
shll
pop
ljmp
adc
ss
sub
mov
adc
in
int3
in
shlb
out
test
aaa
scas
test
ljmp
loope
fsubl
push
mov
pop
push
aam
addr16
dec
cmp
mov
jl
in
and
aad
jg
test
daa
les
das
cmp
jo,pt
es
aad
scas
mov
imulb
jns
push
sub
mulb
cmp
and
lcall
nop
fs
and
inc
sti
add
pop
outsb
pop
mov
into
add
es
sub
flds
xchg
inc
xchg
mov
jns
fimull
insb
and
cltd
jg
adc
xchg
dec
aaa
mov
jnp
adc
fwait
pop
mov
mov
inc
sub
lret
mov
ffreep
mov
scas
pop
or
adc
and
shlb
mov
push
or
sub
ss
mov
mov
stos
repnz
test
sub
popa
mov
xchg
or
add
mov
mov
jge
jg
or
rcrl
mov
push
add
cltd
jae
dec
sbb
jns
stos
repz
jg
scas
add
push
mov
sbb
ret
dec
add
mov
int
scas
push
and
sub
pop
addr16
sbb
les
rolb
cmpsl
ret
imul
inc
je
sub
mov
gs
popf
sub
pop
cwtl
movsb
scas
mov
inc
sub
and
dec
aas
or
stos
cmpsb
movsl
sub
jge
and
or
daa
fs
lods
sub
cltd
push
pop
xor
sub
cmc
mov
sbb
xorb
mov
iret
or
vrcpps
pop
mov
dec
xchg
inc
cmp
mov
mov
mov
adc
mov
and
mov
xor
pop
pop
cld
xor
cltd
adc
xchg
cmp
mov
cmp
xchg
jmp
mov
sti
and
loop
push
pop
add
cmpsb
xchg
adc
pop
sbb
or
lods
add
pusha
cmp
push
dec
gs
or
das
sar
mov
pop
adc
in
mov
jle
ds
xchg
sub
lcall
jns
inc
push
int
je
mov
jns
mov
cmpsb
shl
das
fcomps
or
les
pop
inc
push
jle
mov
fcompl
ss
sete
mov
gs
sahf
xor
sahf
pop
xlat
jo
faddl
jp
addr16
orb
pop
adc
jno
sti
xchg
orb
shlb
adc
int3
int
scas
pop
pop
or
fs
jmp
jmp
inc
stc
push
clc
mov
dec
jg
sub
mov
fistpl
pop
sub
mov
pop
in
xchg
xor
stc
or
cmp
scas
out
mov
pop
mov
test
jecxz
and
push
xchg
cltd
stos
int3
js
aas
cmp
int3
not
cmp
mov
dec
xor
in
adc
push
out
int
push
out
inc
xchg
daa
andb
nop
dec
mov
loope
aas
cmc
addr16
and
sahf
idiv
cmpb
sub
mov
and
pop
or
rorb
loopne
pop
daa
xor
pop
enter
gs
sbb
inc
and
test
cmp
push
in
or
jns
or
mov
jecxz
jo
push
cmpb
es
jl
neg
inc
and
je
jno
lods
mov
xor
dec
daa
dec
mov
ss
loopne
inc
sbb
push
or
fs
adcb
lods
ficompl
fildll
or
movsb
jmp
jbe
xlat
jl
inc
in
dec
arpl
push
popf
lods
arpl
fdivr
xor
popf
and
fdivrl
test
mov
pop
pop
cmp
mov
and
mov
insl
int3
jmp
lcall
lea
sbb
fdivrp
mov
cmp
test
sbb
lret
mov
iret
xchg
dec
xor
imul
jmp
in
dec
cmp
jl
pop
xor
test
in
leave
and
pushf
outsb
jae
imull
lds
xchg
loop
insb
cs
and
xchg
mov
and
pop
or
test
stos
push
push
mov
inc
repnz
add
inc
iret
jnp
jle
int3
add
dec
fsub
inc
rorl
and
sub
sub
loopne
popf
mov
hlt
cmpsl
jb
sbb
in
sub
outsl
mov
imul
iret
or
xchg
inc
loop
pop
loope
lret
pop
push
dec
aam
jae
test
push
popa
aam
push
sahf
pop
std
inc
xor
push
mov
mov
pop
add
sbb
scas
and
pushf
pop
ja
inc
lret
push
push
fsubp
sbb
mov
or
addr16
fstl
inc
imulb
mov
out
add
int
andb
and
lods
inc
and
xor
mov
adc
adc
popf
test
dec
loopne
add
icebp
sub
fdivl
push
push
inc
idivl
je
or
movsb
xchg
jle
int
enter
sbb
dec
sarl
push
pop
arpl
ret
cmp
cltd
add
out
or
mov
xchg
je
in
idivb
shrb
rorl
adcl
imul
dec
insl
lret
or
mov
pushf
mov
mov
adc
int3
test
mov
mov
inc
loop
jmp
xchg
fxam
in
xor
fistps
fmull
rorb
adc
lcall
mov
int
push
out
out
mov
or
mov
inc
pusha
dec
stos
add
adc
cmp
out
pop
dec
inc
cmp
fldcw
psubsb
je
mov
aad
lea
sbb
sbb
out
jae
cltd
cmp
xor
out
sar
sbb
popa
sbb
test
sbb
jo
mul
xor
dec
lds
ret
xchg
push
popf
test
xchg
xchg
movhlps
jg
mov
mov
sub
nop
push
mov
push
bound
aam
mov
mov
sbb
xlat
fsubs
add
daa
inc
mov
sarb
es
outsl
cvtps2pi
aaa
ret
cmpsl
movsl
sub
or
or
inc
mov
and
mov
inc
cltd
mov
aad
sbb
cmp
stos
inc
sbb
cmc
xlat
repnz
dec
push
fcmovnb
xor
mov
lret
mov
jns
pushf
pop
js
dec
jg
cmc
and
mov
bound
mov
out
ror
mov
push
mov
sub
cli
mov
and
imulb
xchg
stc
ret
int3
jmp
inc
and
out
inc
jl
mov
push
enter
pop
mov
repnz
mov
loopne
adc
out
and
push
xor
add
jne
adc
push
fucom
neg
iret
insb
sub
rcrl
insl
add
orb
push
fst
mov
popl
push
frstor
sbb
sub
dec
xchg
mov
or
xchg
test
cmp
ljmp
mov
push
lods
fwait
cmc
mov
lcall
or
add
imul
fisubrs
jmp
pop
inc
lea
out
and
lret
insb
das
shlb
daa
out
xor
inc
imul
cmp
mov
inc
and
sub
xor
jne
imul
jnp
lret
loopne
cmp
jmp
stc
pop
test
xchg
scas
push
std
mov
cmp
pop
pop
dec
jle
xchg
into
stos
adc
inc
dec
popf
imul
aam
push
sahf
dec
xchg
pop
push
int
andl
mov
jbe
cmp
fcomip
inc
jecxz
outsb
das
mov
sbb
shlb
pop
sbb
sub
cmpsb
adcl
xor
adc
cmpsl
movsl
addl
cld
scas
lea
cs
jmp
mov
mov
dec
fsts
mov
mov
mov
scas
test
rol
movsl
scas
addl
ficompl
jns
mov
mov
xchg
call
adc
xchg
aam
mov
shll
mov
dec
cmp
das
jnp
rorb
adc
xchg
imul
negb
rcl
scas
jge
mov
fmuls
dec
lret
inc
cmp
scas
sbb
mov
lods
sti
shrb
mov
xchg
addl
pop
mov
jp
jge
out
pop
aaa
icebp
cmp
shl
xlat
lea
jmp
mov
imul
and
sbb
push
mov
enter
inc
int3
mov
rcl
pop
cmp
and
pop
adc
sahf
ret
jge
dec
mov
int3
xor
mov
iret
pop
xor
leave
icebp
dec
addr16
cmp
pop
shlb
add
sbb
mov
mov
inc
cmp
rcll
jg
out
aaa
popf
int
jae
fsub
adc
sti
dec
lea
pop
pop
push
iret
add
mov
sbb
dec
ror
stos
mov
inc
scas
rcr
xor
or
jnp
out
je
aad
mov
jge
neg
out
and
test
mov
icebp
jge
lods
out
dec
push
test
aaa
dec
nop
jg
jecxz
sbb
or
jo
fmul
clc
out
cmp
sbb
enter
decb
mul
das
pop
adc
mov
sub
testl
xchg
pop
dec
dec
in
xor
inc
push
imul
movsb
pop
and
jo
dec
std
add
xchg
sub
xchg
in
stos
mov
pop
sbbb
lods
lret
pop
sbb
not
jno
bound
or
icebp
test
sbb
fwait
sahf
data16
in
lcall
push
add
outsb
push
and
push
cmpsl
mov
push
out
jae
dec
iret
inc
dec
mov
push
xor
mov
adc
xchg
inc
jmp
cmpsb
fucomp
mov
popa
scas
inc
sti
or
punpckhdq
xor
jmp
inc
push
lea
push
lret
js
mov
add
ljmp
aas
mov
movsb
sbb
cli
gs
rcrl
ret
xchg
jae
lods
cmp
sbb
cwtl
nop
in
fldt
mov
addps
fisubl
add
outsb
inc
addr16
push
les
ss
imul
xor
bound
jns
pop
mov
xor
out
test
add
scas
inc
xchg
and
xchg
cmp
call
and
aas
mov
mov
pop
es
int
cld
ret
enter
mov
inc
push
inc
ja
sub
mov
push
jp
lea
out
jle
mov
inc
insb
jg
xor
test
adc
or
xchg
lea
nop
sub
xor
stc
mov
sub
xchg
and
xchg
lea
out
insb
fistpl
sub
and
xchg
test
fstps
stos
int
adc
and
add
lret
in
sarb
mov
xchg
jl
imul
mov
out
rcll
sub
loopne
mov
xchg
icebp
pop
out
and
jns
stos
push
mov
push
mov
lock
xchg
inc
aas
test
lret
fisubrs
inc
dec
std
and
adc
xchg
dec
mov
cmp
ljmp
push
fimull
call
adc
mov
push
gs
and
subl
or
test
mov
mov
sarl
pop
subl
xchg
or
arpl
test
pop
dec
mov
outsb
adc
push
loope
jno
popa
cmp
not
lea
dec
jnp
shll
frstor
aaa
lods
je
cs
fisttpll
insb
fs
add
fcmovnb
hlt
lahf
nop
cmp
cmp
stc
sarb
push
insl
js
fyl2xp1
jecxz
call
jbe
push
jne
js
jmp
stc
daa
lods
mov
lret
imul
dec
in
insl
into
and
ja
add
sbb
aaa
ljmp
xor
xor
and
stos
mov
sbb
pop
test
mov
sti
cmp
js
mov
xor
gs
adc
push
push
cwtl
adc
xchg
jl
inc
jo
call
push
jo
adc
push
scas
mov
roll
sub
test
cmp
lret
cld
fxam
inc
les
or
lahf
aas
push
in
sub
lock
inc
inc
dec
test
ret
inc
sar
das
inc
stc
or
pop
movsl
adc
add
shl
pop
push
mov
in
popf
adc
and
subl
aas
aaa
imul
shll
pop
fldl
sbbb
push
fnstcw
ret
add
les
dec
and
lds
cltd
push
loopne
push
cmp
sbbl
cli
sbb
mov
mov
cmp
mov
inc
lods
dec
xchg
out
filds
or
gs
rorb
or
in
mov
pop
push
or
pop
daa
cmp
or
push
add
adc
inc
movsl
and
add
and
push
insl
push
sub
cwtl
repz
or
ljmp
push
cmp
or
mov
and
mov
rcrl
mov
shr
scas
es
sbb
rcll
push
push
lods
and
push
ljmp
or
imul
testb
mov
int
pop
ss
fmuls
adcl
ss
cld
pop
xchg
xchg
enter
std
sub
pop
adc
cli
add
jp
cwtl
sub
out
or
fstps
add
fucomi
movl
jo
shl
dec
sub
out
ljmp
and
lods
adc
jo
rorl
mov
and
lods
outsl
stos
les
cltd
pop
xchg
les
sub
or
pop
add
push
push
in
sub
mov
fs
mov
mov
mov
ret
jmp
hlt
pop
mov
mov
movsl
test
xchg
test
jne
sbb
dec
cli
lock
and
in
push
dec
jae
cmp
outsb
jb
and
sbb
aam
sbb
int
pop
mov
lods
cli
sbb
adc
or
repz
fiadds
sub
xor
pop
loope
sbb
cmp
bound
mov
mov
andl
sahf
mov
lods
mov
add
cmc
mov
mov
shrl
repnz
js
push
popa
mov
add
test
cmpl
mov
push
adc
in
mov
sbb
jb
mov
loopne
cmp
fstpl
push
ret
pushf
pop
pop
pusha
sub
lea
cmc
int3
repnz
adc
sbb
pop
out
fldt
push
lock
call
sahf
or
dec
lret
hlt
les
ljmp
mov
cmp
pop
leave
jne
or
ja
sarb
mov
push
pop
sbb
cmp
adc
push
int
or
cmp
add
mov
mov
inc
mov
adc
in
mov
lods
pop
ficoms
sbb
or
jbe
inc
test
and
pop
inc
lahf
push
push
add
out
out
das
xchg
lods
mov
dec
push
adc
icebp
mov
cwtl
cmc
in
or
pop
mov
test
or
dec
mov
movsl
aad
xor
cmc
push
lods
in
jbe
push
dec
fwait
test
push
clc
mov
fstpl
xlat
dec
xchg
xchg
sahf
notl
adc
loopne
movsb
dec
cwtl
in
in
jnp
jecxz
mov
jl
fwait
jg
push
dec
cld
pushf
mov
inc
dec
mov
cmpsb
imul
mov
subb
testl
test
in
cmpsl
jno
lcall
sub
add
lea
or
adc
add
cmp
xchg
lret
xor
mov
cmp
stc
push
nop
and
adc
stc
push
fld
xor
outsl
pop
shrl
js
lahf
add
lds
ljmp
adc
cld
mov
cltd
adc
dec
dec
push
mov
mov
inc
mov
imul
sbb
xchg
add
mov
push
jecxz
rclb
dec
pop
pop
sbb
xchg
jl
pop
mov
and
mov
dec
cs
mov
addl
mov
and
fbld
mov
xor
mov
mov
dec
jmp
dec
nop
in
dec
hlt
stos
inc
imul
mov
movb
xor
jecxz
cld
jnp
imul
pop
aam
jecxz
mov
inc
or
popf
xor
outsb
push
rolb
xchg
sbb
in
and
cmp
jg
mov
popf
cmpsl
bound
lret
data16
lds
xchg
negl
adc
or
add
push
out
xchg
dec
stos
stc
insl
xor
sarl
sahf
add
adc
call
outsb
out
pop
sbb
leave
in
cmp
mov
mov
pop
pushf
or
jge
daa
les
scas
sar
dec
xchg
adc
test
clc
cmpsb
sub
cmp
mov
out
js
pushf
push
cmc
out
cmp
xchg
mov
xlat
es
or
xchg
lcall
pop
mov
pop
shl
add
lret
xchg
xor
shrb
iretw
aas
mov
call
mov
xor
pop
mov
sub
push
xchg
mov
xchg
xchg
jne
enter
mov
cmp
cli
adc
xor
inc
rcrb
cmpsb
in
mov
jg
inc
bound
add
std
and
filds
cld
shlb
stc
push
sub
repz
add
fcoms
xchg
pop
mov
into
or
popf
lret
add
cmpsl
in
mov
mov
loope
pop
sbb
cmp
int3
push
cmpsb
mov
mov
call
aaa
jnp
jp
mov
dec
mov
dec
dec
jge
imul
clc
mov
add
rcl
cli
cmpsb
cmpsb
pop
adc
push
jne
sbb
pop
xchg
dec
outsl
and
sbbb
fwait
shll
push
xor
dec
loopne
sti
fldcw
inc
subl
xchg
out
loope
xchg
mov
push
pop
pop
outsb
int3
xor
rorl
sbb
js
pushf
mov
xor
cmp
imul
subl
ljmp
xchg
loopne
adc
xlat
insb
test
pop
mov
dec
mov
cld
aas
jne
jmp
push
lods
xchg
mov
inc
movb
sub
pop
inc
inc
in
outsb
outsb
mov
push
dec
lods
in
fildl
mov
mov
or
cmpsb
cld
mov
rorb
add
movsb
sahf
out
adc
add
test
scas
movsb
cmpsb
jle
popf
adc
int
sahf
setg
bound
jns
mov
ds
ds
mov
jmp
mov
outsb
jns
lcall
cli
adc
stos
mov
dec
mov
mov
add
or
pop
outsl
jae
jmp
movsb
lods
mov
add
mov
push
fsubrs
sbb
out
mov
mov
test
shrl
or
or
test
pop
fadds
inc
inc
pushf
push
lock
push
scas
jl
in
lock
push
xchg
push
call
sbb
jo
jb
dec
mov
push
subl
cli
outsl
mov
inc
mov
mov
cmp
out
pop
inc
adc
add
xchg
xor
xchg
subb
adc
adc
xor
les
add
and
popf
fidivl
mov
xor
movsl
xor
rclb
jns
aaa
into
jmp
aas
out
popa
adc
gs
stos
mov
and
gs
mov
mov
sub
test
out
test
mov
fidivrs
imul
inc
flds
scas
aas
inc
dec
push
jge
cmpsl
add
std
pop
repnz
popf
sbb
sub
iret
ret
push
ljmp
insl
fcmovnu
xorl
or
push
stos
stc
and
nop
sbb
popa
mov
xchg
sub
and
xlat
in
mov
xor
ss
mov
or
mov
and
daa
sub
cli
pop
je
fists
mov
jb
lock
cmpsl
shll
push
dec
lock
icebp
in
mov
and
and
adc
inc
js
jo
insl
addb
shll
call
or
jmp
aad
cmpsb
cld
es
mov
and
lods
sbb
jg
push
imul
add
mov
pop
sub
iret
push
jno
popf
hlt
aas
and
cmp
jg
pop
xor
cmc
sub
jl
lret
add
mov
xor
xchg
add
fninit
xchg
mull
or
test
adc
lods
cmp
jnp
add
mov
mov
xchg
sbb
xor
and
xchg
cltd
ds
and
movsb
dec
pop
or
xchg
or
out
repnz
mov
cld
movsl
cwtl
cmp
or
jge,pn
fstp
lock
mov
popf
test
cwtl
or
sbb
cwtl
mov
aad
xchg
lea
rcrb
and
mov
pop
pop
orb
out
push
cltd
cs
ret
test
test
or
mov
adc
dec
jecxz
mov
ret
scas
add
jbe
and
imul
pop
xchg
scas
aaa
ret
jg
mov
outsl
or
cmp
xchg
cs
cwtl
or
sbb
push
dec
inc
lock
pop
inc
cmp
push
jns
sub
imul
mov
bound
jne
mov
mov
pop
mov
bnd
out
iret
jno
int3
test
xor
sbb
sbb
pop
or
pop
in
ja
lahf
mov
inc
in
pop
xchg
cmpsb
cld
sbb
add
ds
daa
test
test
sbb
je
jp
cmp
push
or
lods
xor
ljmp
xchg
fisubs
mul
out
mov
pop
aas
sbb
lret
mov
daa
xorl
lcall
and
cld
in
sub
xchg
pop
adc
jno
mov
sbb
stos
shlb
mov
insb
xchg
jmp
incl
aaa
inc
stos
and
mov
ljmp
ja
fisubrs
jge
lock
call
and
xor
cld
scas
dec
xor
cwtl
gs
stos
test
lcall
js
out
cmp
mov
or
fcmove
loop
std
inc
push
xchg
flds
cmp
out
push
add
and
lahf
and
xchg
mov
ret
push
xlat
sbb
out
testl
ss
push
lea
push
ds
iret
decb
sti
repz
push
cli
rorb
test
cmpsl
dec
pop
mov
test
shl
or
adc
inc
mov
mov
into
jmp
hlt
jns
std
icebp
fdiv
pop
or
xlat
imul
adc
leave
adc
jge
gs
xchg
cld
in
xchg
cmp
dec
mov
test
js
repz
mov
pushf
inc
fsub
mov
test
or
into
les
jne
mov
movsl
lcall
and
sbb
cmpsl
sub
test
push
cmpsb
adc
out
and
sub
mov
cld
jno
leave
mov
notb
subb
fidivl
out
outsb
inc
rolb
mov
jp
pop
cs
xchg
fdivs
push
lret
ret
data16
cld
cmp
sub
ja
xor
arpl
sub
ror
push
mov
stos
xorl
mov
add
cmp
imul
fsubrs
dec
jecxz
jne
mov
mov
xor
mov
push
cmp
jne
cli
or
idiv
ret
outsb
lock
jb
mov
out
xchg
mov
lret
into
stos
jb
fwait
and
dec
imul
inc
stc
rsqrtps
std
in
push
lock
mov
and
mov
shlb
mov
or
xor
cmp
sub
xor
stos
lahf
sub
cli
popf
cltd
adc
popf
mov
in
sbb
sub
adc
mov
sahf
out
jecxz
aas
aad
and
xchg
fdivrl
jmp
popa
jbe
mov
cs
aaa
je
adc
add
dec
ds
ja
mov
cmp
jne
movups
jge
rclb
and
mov
add
xor
inc
xchg
pop
rcrl
das
in
push
in
stos
inc
idivl
fiaddl
or
sub
push
repz
xchg
nop
cli
pop
fldl
mov
ljmp
sub
mov
xchg
push
mov
mov
test
push
mov
mov
mov
fstpt
xor
and
xchg
push
pop
aaa
mov
jnp
mov
aas
negl
roll
gs
pushl
repnz
and
clc
es
lock
jp
mov
and
or
jae
inc
xchg
xchg
fcmovu
or
cmp
ret
mov
lcall
mov
sar
mov
in
xor
jp
loop
bound
xorl
leave
insl
enter
fwait
or
xchg
sub
repz
into
xorb
jecxz
dec
test
push
hlt
xor
testl
sub
and
push
sbb
lret
cs
mov
push
mov
cmc
jns
add
xlat
xchg
addb
pop
xchg
jle
lods
add
es
mov
xchg
jnp
fists
cmc
fidivrs
mov
gs
addr16
outsl
xor
insb
jae
inc
ret
and
ficompl
push
cli
roll
pushf
popa
jmp
xchg
cmc
cmp
sub
fmull
and
sbb
mov
jo
icebp
sub
int
cmpsb
mov
mov
adc
ja
xchg
es
adc
leave
and
push
and
pusha
or
jle
arpl
cmpsl
cli
in
cmp
bound
sahf
jne
shr
mov
movsb
out
cmp
xor
repnz
add
in
clc
std
fnstenv
jae
jle
push
add
test
jg
js
call
das
or
fstpt
sub
inc
mov
sub
add
or
in
mov
pop
adc
lods
bound
xchg
call
or
cli
dec
loope
add
mov
mov
mov
push
xchg
icebp
push
jo
lds
mov
or
test
adc
ja
jns
xor
jae
adc
jnp
in
push
hlt
outsl
push
and
mov
fs
loopne
scas
or
cmp
push
mov
sbb
arpl
pop
xchg
lret
and
dec
and
fimuls
shl
or
mov
push
sub
out
xor
je
insl
or
movsl
xchg
lods
pop
lret
jle
test
popa
mov
mov
dec
adc
jecxz
pop
jae
jbe
mov
out
xchg
dec
cmp
int
nop
or
test
jecxz
shlb
fwait
xor
fisubrl
lods
shr
cwtl
adc
loopne
xchg
push
nop
fstps
or
inc
pop
push
shrl
adcl
or
je
mov
pop
and
sti
xorl
xchg
sar
lock
sub
push
or
mov
bound
cmp
testl
dec
mov
arpl
mov
scas
push
mov
and
cmp
mov
mov
xor
mov
dec
jmp
jbe
push
sbb
leave
mov
mov
pop
lret
lahf
pop
add
sbb
js
cmp
arpl
jns
jl
mov
cmp
sub
cmpsb
cmp
xor
xchg
faddp
les
or
aad
fwait
movq
or
imul
cmp
stc
lds
out
scas
xchg
or
aad
pop
mov
lret
cmp
mov
inc
ja
xchg
push
xchg
mov
mov
push
xchg
sbb
push
inc
jbe
fsubr
xchg
sar
ss
mov
hlt
push
mov
adc
xchg
mov
es
mov
mov
imul
mov
mov
fwait
add
shlb
mov
push
fs
mov
es
in
loopne
and
inc
sbb
adc
pop
sar
scas
sub
gs
pop
and
pop
loop
mov
enter
and
dec
pop
push
loope
and
fwait
adc
cmp
push
test
punpckldq
inc
or
rcrl
and
out
jl
jp
out
pusha
fistl
in
in
inc
cmpl
fists
xchg
js
xor
das
xor
and
bound
loope
and
insb
mov
insl
imul
sub
lods
adc
fisubl
pop
and
subl
iret
lds
cmp
add
mov
xchg
stos
xor
inc
ret
mov
int3
ret
mov
adc
xchg
sbb
mov
dec
dec
mov
mov
das
insl
jno
pushf
xchg
jmp
bound
rorl
cmp
adc
test
dec
push
or
mov
shlb
dec
sti
test
inc
inc
fadds
push
and
jg
pop
cld
sbbb
fidivrl
jnp
xchg
aaa
lret
mov
pop
adcl
xor
push
outsl
and
fbld
sti
int3
xor
shld
dec
adc
imul
into
into
mov
push
or
loope
fsubrl
adc
push
mov
fwait
add
dec
pop
mov
rorb
inc
in
dec
pop
jg
leave
mov
inc
pop
or
fldcw
sbb
mov
imul
or
lods
add
lcall
mov
arpl
mov
sub
lods
pop
jbe
ljmp
sbb
cwtl
push
adc
les
loop
dec
pop
adc
shll
jnp
ret
jae
jg
mov
sub
add
out
cmc
add
mov
add
sub
xor
mov
add
das
icebp
mov
addr16
pop
xchg
cmp
hlt
push
lods
sub
adc
repz
sbb
xchg
mov
lea
pop
repz
das
and
out
mov
dec
out
flds
pop
and
icebp
mov
or
xchg
jns
dec
dec
sbb
dec
mov
popf
add
stos
dec
sub
mov
fxch
inc
xor
add
cmp
cmpsl
sar
int
add
mov
sbb
mov
xchg
sub
ja
mov
mov
or
sub
loop
jne
xchg
pop
push
cmp
sahf
sub
xor
jne
in
movsb
repnz
lret
sbb
mov
inc
pusha
pop
bswap
push
adc
mov
cmp
pop
and
or
push
loopne
mov
and
cmc
lret
std
xor
pop
shll
ljmp
jle
fs
out
sti
adc
jecxz
or
fwait
insb
dec
push
mov
xchg
aaa
xor
xor
pop
addb
mov
les
dec
jb
push
jg
fwait
dec
mov
rolb
or
xchg
rclb
lock
fsubrp
dec
xor
cwtl
lcall
pushl
aas
cmp
jp
xor
cmp
mov
add
mov
push
mov
adc
ljmp
jp
push
les
mov
cwtl
ss
aam
stos
sarl
adc
pop
fdivp
pushf
push
mov
jne
xor
cli
lds
push
scas
and
pop
roll
scas
les
jecxz
imul
mov
adc
inc
out
sub
xor
sub
ret
dec
mov
mov
jno
jns
aad
sub
es
jmp
add
clc
xchg
sub
leave
ret
dec
icebp
scas
sub
hlt
repz
cmp
dec
sbb
sub
mov
xor
imul
sub
scas
out
and
mov
outsl
inc
pop
shl
push
fs
imul
pushf
add
dec
stc
xchg
movsb
lods
push
aad
mov
imul
imulb
mov
pop
ret
jmp
xor
push
sbb
enter
push
inc
sbb
outsb
push
incb
mov
dec
sbb
push
scas
mov
fmull
jne
lock
fldt
lds
jbe
and
in
dec
push
dec
sub
sub
jl
cmpsb
or
adc
mov
sbb
loope
mov
leave
or
cld
xchg
push
mov
xchg
cmp
inc
filds
jl
mov
mov
aad
enter
out
aaa
jnp
leave
test
imul
scas
in
sbb
add
les
sub
stc
movsb
add
stc
repnz
sub
ret
jo
xor
xor
in
mov
pop
fs
test
mov
push
pop
lods
xorb
jmp
aas
jae
xlat
sbb
lahf
sti
sub
mov
pop
pop
and
xchg
pushf
fwait
cmp
aad
sbb
popf
clc
dec
lock
add
adcl
imul
stos
in
jmp
or
lods
xchg
push
add
or
insl
outsb
mov
sbb
xor
cmpsb
cmpl
xchg
adc
xchg
lea
add
xchg
mov
popl
pop
idivb
sbb
mov
daa
int3
mov
or
sbb
jle
pop
push
outsl
cmp
inc
sub
push
cli
jl
push
mov
pop
inc
daa
cmp
sub
mov
mov
cmp
int
jnp
cmovp
dec
add
inc
push
pop
push
dec
lcall
fdivl
add
stos
add
mov
xor
pop
mov
lock
sbb
sbb
test
mov
cli
lcall
inc
in
pop
stc
inc
lods
test
xor
pop
dec
push
sti
loope
es
in
cmp
mov
mov
cli
pop
jge
les
xchg
dec
ror
cmpsl
dec
pop
ja
dec
add
sub
xor
jp
aam
scas
imul
pop
cltd
dec
adc
mov
neg
test
add
daa
adc
pusha
jp
jbe
xchg
std
dec
ja
push
loopne
hlt
pushf
jmp
inc
insl
mov
shll
adc
add
fnstcw
in
ss
adc
jns
add
sti
shll
or
cmc
mov
hlt
xchg
bound
int
pop
repnz
rorb
dec
insl
fisubs
or
ror
sahf
or
pop
iret
aad
sarb
lock
movb
sub
mov
mov
pop
test
jns
mov
xchg
xor
inc
cmp
adc
cli
enter
push
add
daa
jecxz
push
and
iret
mov
pushf
fs
imul
sahf
mov
pop
xor
nop
push
test
add
rorl
add
lret
mov
test
sahf
and
lcall
adc
xor
int
test
call
cmp
outsl
mov
iret
out
xchg
xchg
cmc
dec
dec
push
xchg
mov
dec
dec
pusha
mov
leave
insb
sbb
push
cli
inc
sbb
or
imul
rcrl
sarl
dec
jle
pop
int3
lds
adc
cmpsl
mov
xchg
dec
aas
popf
add
in
push
xor
mov
lcall
js
arpl
mov
in
clc
dec
fwait
add
popa
test
lcall
pop
roll
lahf
ret
xchg
addr16
dec
cmp
movsb
and
or
fldenv
adc
mov
mov
or
out
sub
stc
adcb
add
stos
jle
xor
stos
or
addr16
sub
mov
popf
adc
imul
inc
in
test
stc
jl
outsb
push
inc
and
xor
bound
cmp
in
inc
fabs
ret
js,pt
inc
or
repnz
lods
lcall
das
shl
ss
fistps
int3
out
test
sti
inc
add
rcrl
mov
movsb
xchg
mov
aad
adc
bound
loope
cmpsb
repnz
and
stc
xchg
and
mov
sahf
clc
iret
into
cmp
ficoml
jae
int
dec
sub
mov
or
int
or
cmp
mov
into
mov
jecxz
fwait
xchg
fisubs
das
add
push
enter
mov
popa
inc
and
imul
jmp
js
mov
mov
aas
jge
adc
les
add
roll
call
mov
mov
sti
cmp
lock
or
dec
pop
inc
mov
fdivs
pop
lahf
insl
dec
sbb
cmp
push
stos
push
xchg
test
int
test
add
adc
js
imulb
mov
push
push
inc
int
fs
imul
dec
call
pop
lahf
push
hlt
adc
lods
add
pushl
and
mov
xchg
inc
jl
xor
lods
in
add
int
or
xlat
mov
lock
push
loopne
or
cwtl
out
jno
fisubrs
je
test
fisubrl
aas
int3
mov
or
loopne
lahf
or
push
popf
jl
daa
in
xor
jnp
mov
stos
dec
push
data16
popa
sbb
cmpsb
mov
bound
int
out
test
pop
dec
xor
mov
jb
addr16
push
mulb
push
adc
push
jecxz
mov
ret
or
mov
pop
sbb
test
popa
jle
fnstenv
add
jl
pop
sarl
aam
lds
fwait
and
jge
fldt
push
ss
xor
shlb
sar
cmp
scas
loopne
add
test
pushl
xor
inc
mov
add
adc
sbb
pop
sbb
cmpsb
mov
cwtl
imul
lcall
xor
cmp
adc
push
lret
xchg
add
aaa
adc
pop
push
adc
or
aas
mov
pop
cltd
sub
add
ds
gs
add
call
fabs
xchg
add
leave
mov
loopne
jle
xchg
popf
jge
inc
and
in
shl
mov
xchg
hlt
xchg
lahf
fdiv
pop
js,pn
pop
adc
pop
mov
in
xchg
push
mov
cmp
call
ret
jae
fbstp
and
mov
inc
add
aas
mov
idivl
test
imul
inc
cmp
cmp
fnclex
sbb
mov
imul
pop
ret
sub
inc
sti
arpl
mov
imul
xchg
fs
divb
push
les
push
bound
lock
xor
add
or
insb
repnz
xchg
stos
adc
hlt
gs
jge
std
jp
into
call
inc
push
jle
ret
inc
scas
mov
xor
stos
jp
int3
push
outsb
int3
xchg
int3
add
outsb
sbb
lods
lret
and
mov
push
ret
repnz
cmpsl
shr
cmpsb
imul
add
inc
mov
adc
js
aad
or
ljmp
mov
fcompl
mov
ss
lods
or
call
lods
lods
loopne
out
push
cmpsl
cmp
bound
pop
out
jo
insb
xor
pop
pop
out
cmp
jne
jne
das
push
jmp
pop
stc
movsl
lea
mov
add
sbb
popa
or
and
out
sub
and
adc
rcll
int3
imul
add
mov
mull
into
jmp
cmpsb
gs
or
pop
push
mov
jmp
mov
push
and
gs
pushf
mov
sti
xchg
sbb
pop
push
sub
xchg
inc
and
in
xor
insb
xor
sbb
mov
scas
push
addl
jmp
mov
daa
jp
sti
mov
shrb
inc
or
fs
xor
dec
sbb
lahf
mov
fcoms
cmp
scas
sbb
xchg
cmpsl
popa
idivl
jp
lret
inc
lcall
inc
mulb
add
sbb
cmc
out
cmp
xlat
inc
jl
aaa
loop
shl
dec
jno
inc
sbb
bound
das
mov
cs
jl
test
mov
xchg
cli
pop
adc
stos
iret
lret
sbb
cmp
movb
push
inc
mov
lahf
mov
es
xlat
pop
xchg
mov
int
or
jle
lcall
jno
push
mov
push
mov
iret
inc
xchg
ret
das
jne
push
icebp
mov
insb
fldt
cmp
cld
scas
xor
xchg
dec
fucom
out
xchg
push
stos
sbb
aad
dec
sbb
cmc
xor
rcrl
fldt
cmp
adc
ret
test
out
flds
faddp
xor
inc
cmpsb
mov
and
psubw
out
cmp
pop
gs
jne
stos
ja
adc
xchg
xor
les
scas
in
popf
sub
mov
ds
jecxz
dec
jg
push
and
mov
jge
add
insl
sub
bound
movsl
adc
mov
fbstp
inc
aad
push
adc
push
xchg
ds
dec
dec
sarb
scas
stc
fsts
stos
mov
fidivrs
push
jnp
adc
pop
mov
cmp
add
cmpsl
push
jge
xchg
in
loopne
cld
xor
mov
loope
scas
das
scas
imul
test
das
sbb
sbb
in
xchg
jne
rorb
mov
jmp
cltd
xor
ds
repz
cld
and
jo
fdivs
repz
test
popf
cmp
mov
mov
xchg
add
adc
jno
push
hlt
and
xor
icebp
dec
sarl
sbbl
jb
inc
cmp
sub
imul
notb
jmp
test
roll
lods
mov
xchg
stos
adcl
xorb
das
cmp
bound
fists
stc
xor
jo
sti
daa
test
mov
cmp
add
cmp
jp
jo
jns
cmp
add
addr16
outsl
pop
inc
add
sbb
sub
stos
insb
jbe
orl
leave
in
and
sbb
imul
xchg
jl
push
shl
stos
idivl
mov
outsl
xchg
clc
aad
popl
or
test
pushf
outsl
int
int3
mov
aas
mull
cld
jns
dec
in
xlat
arpl
jo
sub
repnz
dec
mov
and
sbb
fcmove
cmc
das
cmp
rcrb
rorl
sbb
into
dec
mov
lret
push
and
mov
mov
hlt
dec
inc
sub
mov
sbb
ljmp
sti
fiadds
addl
ds
cli
sbb
jno
lahf
adc
ljmp
mov
loopne
notb
sbb
adc
xor
js
cmovl
mov
cmp
mov
ljmp
notb
cld
sub
data16
xor
inc
mov
mov
scas
mov
outsl
cmpsb
mov
mov
jecxz
push
inc
add
xchg
movb
inc
ror
popa
fcomp
pop
and
sbb
lods
aad
out
cld
and
lret
inc
data16
jp
jmp
or
xlat
or
dec
test
cmp
das
and
jmp
add
xchg
push
mov
loop
ret
xor
ds
arpl
mov
fdivs
add
xchg
pop
inc
mov
jg
mov
outsl
lds
jp
js
jge
clc
xor
and
mov
bound
shrb
mov
out
jl
jp
lcall
bound
idivb
adc
ljmp
gs
xor
fs
aad
loopne
loop
jecxz
leave
xor
out
sti
adc
inc
mov
call
push
mov
mov
je
fmull
xor
arpl
std
das
ffree
mull
cmpsb
xchg
xor
cmp
out
arpl
mov
dec
xchg
test
ret
ret
iret
ss
test
push
push
aam
dec
and
scas
or
imul
mov
adc
push
pop
outsl
push
xchg
aad
ljmp
mov
out
shl
or
mov
or
fists
js
imul
jae
imul
add
jns
inc
loop
movsl
lea
push
mov
jbe
pop
jle
pop
aas
and
mov
jl
or
cwtl
orb
mov
inc
cmp
pop
loop
mov
inc
bnd
stc
iret
aam
ret
add
push
inc
mov
or
mov
clc
inc
lret
cltd
ja
ss
or
fsubs
and
aad
xchg
icebp
out
addr16
mov
pop
sub
adc
jne
or
xchg
pushf
jg
or
mov
scas
xchg
sbb
test
faddl
push
popa
inc
lods
sub
lret
cmp
dec
sub
mov
stos
dec
push
rcll
iret
mov
jl
sub
xor
movsl
ja
pop
gs
hlt
adc
arpl
test
jns
inc
sub
loopne
cmpsl
loop
pop
or
inc
shlb
dec
push
scas
xchg
cld
cltd
pushf
cmp
cmp
sub
push
imul
xor
sahf
jns
mov
xor
push
mov
aaa
lahf
hlt
cld
adcb
in
outsb
call
adc
or
cmpsl
inc
int
cltd
mov
loopne
dec
fs
or
xor
jo
cmp
fadds
mov
leave
mov
or
or
adc
pop
and
in
rorb
cmp
cwtl
xchg
push
xor
scas
push
out
pushf
or
sbb
aas
jecxz
inc
xchg
aam
sbb
cld
scas
sbb
lcall
mov
lock
sti
sub
add
pusha
mov
dec
push
adc
jo
pushl
leave
ror
fidivs
adc
sbb
push
jecxz
push
sub
inc
and
rol
fistpl
es
fwait
or
call
jge
js
clc
insb
push
adc
popf
imul
adcb
pop
scas
jno
and
pop
call
mov
and
aas
or
lds
fs
fwait
testl
dec
pop
dec
aas
ret
mov
js
jmp
pop
lahf
roll
push
xchg
jl
testl
test
sbb
fdivrl
sub
rcrb
ret
dec
sahf
rcrl
pop
cmp
pushf
sti
inc
jp
mov
adc
popa
xor
adc
jl
aad
push
xchg
mov
ja
mov
and
cmpb
test
jecxz
in
pop
clc
cmc
loopne
adc
mov
or
jl
into
push
shrl
mov
in
sub
mov
xchg
pop
pushf
sti
invd
dec
sub
pop
sbb
and
loopne
and
xlat
in
js
aam
cmpsb
pop
mov
xor
cltd
into
lods
jmp
or
mov
addr16
pop
jae
jg
cmp
std
aaa
stc
xor
mov
std
movsb
mov
cmp
and
mov
sub
in
ret
inc
mov
mov
pop
int
dec
aaa
push
dec
ret
jnp
inc
gs
int3
addr16
scas
imul
cmp
adc
repz
jle
push
jo
adc
mov
mov
sbbl
inc
cmp
cld
add
inc
pusha
push
push
pushf
loop
push
push
rolb
idivl
daa
xor
clc
lcall
ret
mov
pop
or
inc
mov
iret
push
repnz
lret
and
sub
ret
mov
pop
je
add
mov
and
stos
xor
xor
add
push
pop
aam
clc
pushf
mov
jmp
ror
push
call
or
idiv
jmp
std
push
push
mov
pusha
inc
sbb
lods
pop
sub
adc
stc
icebp
je
or
mov
pop
aad
pushf
filds
andl
call
pushf
mov
adc
decl
cmp
mov
push
movb
icebp
mov
or
adc
mov
mov
shll
out
cs
sahf
mov
pop
lret
pop
pop
xchg
out
ret
test
stc
arpl
push
in
inc
pushf
sbb
test
rcrl
mull
lds
loope
pop
push
aad
pop
ja
adc
xor
lock
xor
adc
out
je
xor
and
fcmovnbe
inc
pop
xor
out
in
loope
lret
aad
cmpsl
adc
shrb
adc
jns
jo
jnp
jae
mov
sub
sahf
daa
loopne
mov
mov
mov
sub
stc
daa
rolb
sub
adc
xchg
scas
fimull
jge
dec
xlat
push
arpl
icebp
push
dec
mov
sbb
xchg
outsl
add
add
add
cmpsl
and
ret
vmread
pop
out
scas
sbb
push
jnp
dec
arpl
imul
mov
and
mov
add
jge
pop
out
subb
lahf
fwait
test
stos
or
pop
push
or
push
fsubrs
stc
push
rorl
sub
je
cmpsb
fs
ds
in
pop
cmpsl
scas
js
jl
push
lods
jg
jo
lods
hlt
lds
jmp
push
or
xchg
adc
lcall
shrl
mov
pop
sub
jnp
out
cwtl
lahf
xchg
insb
mov
in
push
mov
add
enter
mov
jbe
es
sub
sbb
mov
jns
add
cld
mov
adc
in
jecxz
sub
mov
xlat
push
ret
mov
mov
mov
scas
fbld
fnstsw
enter
add
or
push
jns
mov
fcomps
push
cltd
jecxz
aad
js
mov
es
pop
and
jns
push
jmp
dec
call
or
sub
sahf
lcall
mov
pop
mov
xor
aaa
dec
jp
in
lahf
jne
mov
sti
mov
es
insl
cmpl
aam
inc
sbb
test
pop
cmpsl
into
in
dec
lret
addr16
cwtl
loope
lcall
mov
mov
add
push
cmp
pop
push
or
ss
cmp
push
lds
cmpsl
push
pop
iret
cmp
outsl
push
jno
jne
and
mov
jo
sbb
nop
push
scas
arpl
mov
sub
sub
xor
test
nop
rclb
cld
jp
mov
imul
je
pop
loop
cltd
inc
lock
cmp
dec
dec
push
aad
pop
dec
inc
scas
jmp
mov
and
add
dec
shr
add
cs
ds
jno
mov
jmp
mov
pop
je
mov
xchg
ja
push
cld
inc
pop
mov
movsl
je
fwait
lcall
popa
push
std
mov
sub
push
rcll
hlt
add
lret
cs
arpl
xchg
jge
dec
fisttps
mov
shl
filds
sub
dec
push
les
and
cs
and
jecxz
outsb
fstpt
xchg
pop
addr16
popa
and
popa
sub
mov
mov
mov
xor
fdivl
push
loop
mov
in
aad
fs
pop
sub
jne
testb
fimuls
int
out
lock
addl
inc
jo
gs
cmp
pop
inc
std
sub
shlb
in
divb
sub
jmp
fs
pop
xchg
popa
and
add
outsb
in
inc
repz
mov
addb
stc
jno
jb
jp
pop
inc
ja
adc
mov
or
repz
bound
cli
adc
pop
sarl
ss
imul
jb
scas
mov
stc
lds
inc
adc
jmp
mov
aad
movsb
imul
cltd
add
pop
dec
loop
andb
mov
clc
and
inc
adc
repnz
add
dec
push
xor
sarb
cmp
std
mov
jl
repnz
push
or
mov
cmpsl
inc
cwtl
fdiv
cmp
test
sbb
sub
xor
and
or
gs
sarl
push
xchg
bound
std
fld
lcall
ds
inc
pushf
cmp
repnz
and
push
sti
jbe
or
pop
sbb
xor
sbb
lcall
mov
pop
fisttps
ret
mov
pop
aaa
stc
xor
mov
mov
in
lret
adc
or
or
sbb
sub
movsl
jnp
sbb
test
shll
rcl
mov
xor
sbb
sbb
std
xor
aaa
push
pop
arpl
test
cld
ret
jle
add
mov
mov
lret
dec
pop
jo
cld
pop
testb
fcmovnb
xor
int
pop
stos
cmpsl
subb
fidivl
cmpl
dec
bnd
mov
jp
mov
test
jb
cmp
push
stos
or
jae
sahf
jno
andb
les
jp
scas
mov
adc
or
andb
inc
ret
not
clc
imul
pop
push
fucomp
xchg
iret
faddl
dec
jecxz
mov
test
sub
xchg
pop
lea
add
and
push
sub
shll
mov
daa
lods
and
or
cmp
shrl
lods
mov
pop
adc
dec
and
or
hlt
sbbl
push
xor
push
and
inc
push
mov
jae
js
mov
pop
lock
inc
pop
lds
roll
aad
mov
sub
push
sar
lcall
cmp
jp
mov
fsts
pop
fdivrl
imul
aam
push
ret
repnz
stc
les
ret
adc
sarl
test
mov
mov
out
out
mov
add
ret
pop
inc
popa
jl
adc
lcall
jg
jbe
push
pop
popa
fdivl
repz
rolb
shr
mov
jno
dec
inc
mov
xchg
cld
mov
add
ret
push
in
jle
sbb
fcomip
pop
mov
jle
or
cmpsl
out
out
mov
mov
sbb
push
mov
std
cwtl
adc
cmp
lock
mov
insb
in
test
mov
xchg
sti
pop
popf
push
cmp
jle
hlt
aaa
pop
xchg
mov
out
fnsaves
call
and
mov
xor
xchg
lret
icebp
loop
insb
sarb
xchg
add
sahf
push
in
mov
cmp
test
in
das
sub
andb
inc
mov
fxch
jp
stos
std
adc
ss
and
push
jp
lods
jmp
in
fstl
ljmp
in
test
pop
insl
cmpxchg
int3
and
cmpsl
sub
add
mov
xor
fcompl
cmc
push
clc
sbb
mul
cld
les
cld
jne
cld
mov
xchg
ficoml
cmp
outsl
pop
and
clc
subb
pop
je
and
clc
aaa
out
lods
into
out
lahf
testb
cli
test
cmp
sbb
xor
ret
shl
and
xorl
popa
sbbl
jge
adc
call
jecxz
sbb
jo
imul
pop
mov
flds
sbb
mov
jecxz
push
jns
jb
les
xchg
inc
out
sbb
data16
xlat
cmp
inc
shl
movsl
scas
pop
mov
data16
cmpsb
in
sub
sub
add
fxch
add
cmpsb
pop
repnz
mov
out
fbstp
cmpsl
aad
leave
jae
lahf
test
sbb
dec
lods
xor
mov
jecxz
xchg
stos
and
lahf
popl
jae
cmpsb
out
add
roll
inc
lcall
loop
pop
lahf
and
repnz
xchg
xchg
mov
cmp
popf
mov
mov
insl
mov
cmp
icebp
xchg
sarl
aad
mov
das
and
push
sti
pop
dec
inc
outsb
into
mov
stc
jmp
xor
jge
fcomps
jle
sub
lahf
sbb
aas
je
sub
lret
xor
add
sub
xor
pop
adc
jb
xor
jp
or
xchg
clc
dec
pop
test
jns
and
imul
or
fisttpll
leave
call
rol
enter
xchg
jecxz
rcll
cmpsb
out
popf
in
loop
int
xchg
fisttps
pop
je
loop
cmpsb
fxch
neg
cmpsl
cli
or
mov
and
mov
pop
cmp
out
inc
fimull
or
pop
ds
mov
add
push
outsl
or
sub
and
inc
test
mov
scas
cmp
xchg
jb
fnstsw
pop
std
sbb
mov
xor
clc
jle
sbb
cmp
pop
loope
sub
sub
jle
inc
test
or
dec
jmp
repz
fisubrs
pop
sbb
cli
or
xor
sti
mov
inc
mov
test
xchg
lahf
pop
jp
ja
data16
test
rcrl
push
aas
jecxz
lahf
inc
pop
shrl
loopne
daa
int3
lods
mov
ljmp
jae
rorl
mov
testl
xor
push
cmp
shlb
push
fpatan
or
pop
sub
sbb
outsl
movsb
ljmp
sbb
imul
push
mov
into
test
test
push
das
fstpl
mov
cli
shlb
testb
icebp
xchg
sbb
mov
xor
mov
push
mov
testl
jge
cmp
stc
xor
or
fwait
mov
fcompl
jmp
or
das
add
xor
mov
sti
adc
add
lahf
ficomps
jb
pop
imul
jl
cmp
push
xchg
push
add
in
pop
dec
and
inc
sbb
cmp
fs
sub
jecxz
sub
push
cmp
ss
and
mov
dec
mov
jp
jae
scas
mov
xchg
rolb
std
push
add
in
lods
xchg
push
xchg
repz
sub
repnz
jne
jge
cmp
mov
test
adc
sub
xchg
ret
imul
shll
adc
jnp
movsl
pop
adc
mov
jno
cwtl
inc
jecxz
push
jb
sub
test
pop
xor
cs
add
ret
add
orps
popf
push
js
add
adc
mov
mov
pop
xchg
mov
mov
dec
iret
rcl
xchg
xchg
xor
pop
js
sbb
jmp
jnp
nop
dec
ds
fdivs
loope
jnp
xor
loope
mov
mov
movsl
outsb
fadds
andl
dec
roll
xchg
or
aad
inc
pop
lcall
jmp
jno
inc
push
rorl
mov
std
inc
cmp
lahf
pusha
std
or
pop
mov
int3
mov
dec
mov
dec
imul
lcall
cmpsl
push
das
jmp
popa
repnz
mov
pop
insb
fsubr
insb
fmulp
mov
or
pop
std
sbb
xchg
sub
add
xor
inc
in
pop
and
ljmp
push
inc
into
mov
stos
sub
loope
pop
adc
jmp
xlat
fisttpll
pop
in
jae
das
sarl
into
lods
test
sbb
push
sub
xchg
mov
cmpsl
ds
popa
inc
mov
ret
ja
and
mov
les
fwait
xchg
mov
dec
xchg
shrb
loop
outsl
jmp
add
push
adc
sbb
sub
mov
push
xor
stos
jmp
cld
mov
out
rcrl
jbe
sti
push
xchg
mov
insl
sbb
testb
test
sarl
sub
inc
pushl
cmp
mov
rcl
inc
push
xchg
cs
roll
cmp
sbb
cmp
mov
jne
fwait
out
push
mov
xor
cmpl
xchg
cmp
and
mov
push
in
mov
or
pop
add
xchg
ja
shlb
rolb
adc
repnz
adc
pop
mov
push
push
xlat
or
mov
movb
xchg
pop
nop
add
dec
add
xchg
xchg
cmc
sub
push
or
call
test
das
out
push
iret
clc
cltd
shrb
xchg
aaa
inc
cmp
mov
xor
xor
inc
add
xchg
cwtl
test
enter
dec
icebp
jbe
imul
xor
cmp
and
scas
iret
sbb
pop
pusha
jno
fadds
mov
mov
das
xchg
fidivrl
iret
dec
cmp
inc
xchg
icebp
out
adc
and
or
dec
xchg
adc
cld
stos
test
jmp
inc
mov
xchg
in
inc
jbe
dec
cmp
lea
inc
push
jge
sbb
pushf
aam
clc
es
sbb
cmpsb
xor
sbb
pop
or
or
nop
xor
out
jmp
lret
or
lods
icebp
xor
sbb
cmp
mov
or
mov
jg
add
jp
or
sub
movsl
scas
stos
push
out
adc
inc
and
adc
ret
addb
bound
jl
arpl
mov
fcoml
daa
inc
pop
cmpb
cmp
test
cltd
dec
out
sbb
sbb
and
aam
pop
mov
dec
sbb
jns
ss
pop
shl
das
jmp
enter
mov
or
cmp
es
shl
scas
icebp
dec
aaa
jnp
lahf
in
push
dec
fcmovnb
ljmp
jbe
jb
jbe
mov
add
and
jecxz
lods
dec
jns
inc
xor
outsb
pop
test
jp
mov
in
int
add
aam
pop
sub
int3
in
fucomi
inc
or
xchg
aas
mov
lock
movsl
xchg
push
xchg
in
cmp
rclb
in
sbb
fldt
lea
test
xlat
aam
and
das
mov
sbb
xchg
es
jbe
adc
iret
sub
fwait
js
lds
test
cmpsl
ss
push
addr16
dec
shr
lds
xchg
sub
subb
scas
dec
in
xchg
in
inc
test
frstor
mov
pop
jle
mov
or
mov
int
lret
std
in
jl
jg
push
or
mov
inc
sbb
pushf
testl
mov
cmpsb
push
bnd
iret
jmp
popa
or
ljmp
scas
fnsave
pop
loopne
mov
fisubrl
ds
inc
imul
insl
jno
rcrl
jb
insl
testb
add
lret
dec
in
mov
and
xor
or
jb
sbb
in
sub
insl
and
xor
shlb
mov
or
loopne
inc
nop
fdivrs
jne
add
and
lods
insl
outsl
repz
scas
pop
outsl
pusha
mov
sbb
div
xor
jg
jmp
loope
xchg
inc
mov
les
sub
roll
int
and
dec
sbb
jecxz
enter
pop
pushf
dec
jp
xchg
subl
inc
xor
paddb
outsb
mov
xor
cltd
push
jl
lock
imul
sub
cltd
and
roll
or
xor
loopne
cld
je
push
cmp
mov
cmp
fs
icebp
jns
jns
pop
dec
cmp
ja
or
pushf
dec
cmp
adc
mov
fdiv
jbe
ljmp
mov
xchg
repz
xor
pop
add
jg
inc
cmc
ret
cli
mov
add
dec
sbb
addb
jmp
test
xchg
imul
das
inc
xor
insb
push
cmpsl
fidivl
xchg
cltd
lahf
sub
xchg
pusha
mov
cli
aaa
fcompl
sbb
mov
add
cmp
mov
dec
dec
enter
out
loopne
cmp
imul
jo
or
fwait
fwait
lds
mov
mov
inc
inc
lock
mov
je
mov
mov
inc
add
mov
cmpsl
in
scas
mov
add
cmp
xor
xchg
xor
fcomps
pavgw
adc
ret
je
int
cmp
cwtl
imul
xchg
or
cmp
mov
arpl
and
xchg
std
lcall
adc
test
sub
pop
xchg
sahf
ljmpw
hlt
icebp
and
imul
inc
cld
jne
inc
mov
ret
add
fwait
inc
cmp
outsb
fsubl
mov
cmpsl
push
in
dec
sahf
jl
mov
push
and
in
lds
ret
rcr
jecxz
leave
hlt
adcl
jp
test
arpl
sarb
popf
jmp
mov
mov
or
adc
inc
dec
pop
fisubrl
mov
mov
sbb
orb
mov
out
xchg
xor
pop
xlat
or
mov
jle
gs
cmp
or
lahf
add
xchg
jno
cmpsb
inc
and
add
dec
xchg
add
adc
dec
pop
in
sbb
insb
or
mov
sbb
push
std
mov
mov
pop
int3
inc
add
data16
lret
clc
adc
dec
cmp
lret
and
sub
xchg
and
out
mov
rcrl
jp
out
mov
mov
mov
or
sbb
lods
mov
fldcw
sbb
inc
arpl
sti
lcall
pushf
in
inc
push
jnp
fwait
leave
push
popf
icebp
enter
pushf
ss
shlb
adc
out
cvtpi2ps
es
mov
in
sbbl
aaa
xorl
lods
iret
xor
push
fidivl
rorb
inc
sarb
gs
icebp
clc
je
inc
sub
push
or
pop
mov
and
sbb
cmpsb
lret
push
sbb
mov
cmpsl
jb
shlb
test
clc
into
jl
inc
cmp
out
sbb
jnp
and
pushf
scas
and
lea
rcrl
test
push
add
mov
jp
call
adc
popf
jne
mov
pop
pop
push
mov
hlt
sbb
jp
bswap
imul
inc
into
pop
mov
clc
push
inc
dec
pop
pop
scas
or
pop
sbb
clc
les
fidivs
rclb
mov
inc
jno
in
test
push
jns
fisubs
dec
or
or
sarb
out
xor
sbb
adc
sub
pop
out
jecxz
mov
cmp
nop
pop
mov
andb
std
sub
sbb
inc
jl
sahf
rcl
in
nop
adc
scas
add
xor
jns
jns
test
and
jbe
call
int3
xchg
popf
mov
lock
rorb
add
ljmp
mov
pushf
mov
sub
sub
imul
ss
or
jae
and
cltd
mov
sub
xchg
add
jbe
jmp
mov
cmp
inc
lcall
xchg
mov
add
lret
sbb
xchg
gs
aas
inc
sahf
pop
push
lock
lea
or
pop
adc
insb
pop
xlat
mov
mov
inc
push
inc
ljmp
decl
dec
xchg
repnz
ds
ja
jge
aam
mov
in
mov
stc
stos
push
push
ja
out
test
mov
inc
fdivl
shlb
jo
mov
cmp
mov
pop
fs
mov
cmp
dec
outsl
dec
cld
mov
stos
cmp
out
not
fwait
add
add
jb
ret
inc
ss
rorl
mov
fisttpll
inc
adc
mov
in
in
mov
and
jno
iret
jmp
sbb
or
or
add
or
jge
aaa
pushf
mov
in
stc
inc
push
repnz
hlt
loop
mov
mov
xor
xchg
cmp
roll
jmp
pushf
sti
add
aas
dec
daa
lea
or
sti
hlt
mov
and
mov
int
je
bound
out
adc
pop
push
pop
fstpl
lret
lret
nop
jecxz
lods
cs
mov
test
insb
mov
mov
or
fld
or
mov
xor
icebp
aam
add
jge
mov
int3
das
in
dec
lret
mov
jb
inc
push
push
test
cmp
dec
sub
jnp
rcl
pop
movsb
add
xchg
xchg
inc
arpl
push
es
jns
mov
subb
dec
mov
mov
add
aad
push
fucomp
cmpsl
lea
cmc
adc
xchg
sbb
ficoms
test
mov
testb
or
and
stos
mov
lods
leave
int
xchg
movsb
adc
or
pop
push
fsincos
adc
inc
sbb
add
xor
fcomps
lret
mov
jmp
xor
imul
decb
jbe
mov
jp
orl
dec
scas
xchg
dec
mov
jnp
sub
testl
mov
fsubrl
add
dec
add
sti
addl
dec
cmp
popa
fistpl
push
shl
loope
push
ljmp
and
dec
mov
xor
push
sbb
or
shl
push
adc
dec
adc
xor
test
mov
ja
mov
mov
pop
dec
not
sub
lahf
bound
add
je
jbe
inc
and
jno
fildll
adc
imul
xchg
push
jp
in
into
jp
nop
push
lret
dec
cld
mov
sub
mov
das
es
inc
or
ds
xor
jae
stc
or
rdmsr
out
mul
rol
add
lahf
test
cmp
ret
cmp
xchg
scas
repnz
mov
cmp
cmp
jns
xchg
xor
fiadds
xor
jle
fldl
dec
pop
cwtl
iret
dec
aam
adc
ds
mov
xchg
adc
jne
dec
mov
addr16
and
cmp
das
divl
xchg
jg
fdivl
imul
cld
gs
je
mov
dec
dec
push
sahf
mov
mov
push
pop
in
add
inc
sbb
jne
dec
sbb
push
adc
insb
test
out
iret
add
adc
movsb
stos
outsb
push
pop
mov
pusha
inc
mov
icebp
jp
into
and
sbb
sbb
outsl
cmp
xchg
or
nop
dec
enter
aaa
cmp
sbb
fstpl
jl
adc
sarb
fisubrl
lret
out
cmpl
jbe
xor
push
paddb
xchg
pop
sub
adc
push
mov
push
push
xchg
sbbb
dec
lds
ds
sub
inc
cmpb
or
ss
sbb
loopne
sti
icebp
fwait
imul
movsl
test
push
enter
jp
and
in
je
sbb
xor
or
adc
adc
xor
aaa
push
mov
std
mov
jns
imul
test
ret
addr16
out
add
jl
push
icebp
outsl
mov
inc
leave
xor
fildl
mov
dec
sahf
xchg
jecxz
ret
xchg
mov
rolb
out
shll
mov
int3
fwait
dec
dec
pop
add
movl
lahf
push
mov
add
mov
test
and
and
dec
add
in
je
std
movswl
jnp
xchg
add
add
mov
push
ret
mov
into
dec
stos
xchg
inc
cs
mov
dec
or
movsb
mov
adc
popf
jle
and
push
rcll
shr
cmp
xor
jns
sub
shlb
in
sarb
xchg
imul
pop
lea
jne
loopne
jp
fistpll
add
xchg
xchg
fstl
mov
stos
jnp
in
dec
shlb
out
sbb
dec
xor
mov
cld
adc
xlat
in
and
and
cmp
mov
push
mov
inc
mov
stc
xchg
cltd
data16
push
jb
es
gs
testb
cmp
ljmp
stos
inc
js
sarl
cvttps2pi
enter
arpl
xor
jns
icebp
mov
in
sahf
xchg
fmuls
jb
xor
lret
inc
xchg
andl
xchg
ja
inc
pop
ret
dec
shrb
idivb
in
in
ljmp
mov
mov
fistpl
dec
addr16
xchg
popa
mov
jecxz
repz
adc
andl
nop
cmp
incl
dec
sub
repz
jns
adc
pop
dec
popf
cli
call
add
shll
mov
out
sbb
or
leave
cmc
testb
dec
push
pop
add
mov
imul
add
mov
mov
out
sbb
xor
lahf
add
dec
sub
gs
mov
jo
shlb
mov
daa
lahf
fcmovbe
test
adc
push
cs
mov
bound
subl
repz
adc
push
gs
daa
es
pop
test
adc
adc
scas
pop
int3
lock
push
mov
mov
adc
mov
or
aaa
jbe
shll
fsubrp
mov
rorl
jne
pop
cmp
and
dec
scas
pop
mov
je
or
push
test
enter
out
jg
scas
sub
cmp
push
popa
cmp
nop
add
add
sub
lahf
loope
ja
out
subl
dec
insl
ja
adc
xchg
mov
sbb
push
sbb
cmp
fldt
loop
lret
rclb
mov
stc
push
cmp
sahf
mov
cld
cs
xchg
and
xor
mov
mov
push
aam
clc
cltd
jg
sub
or
into
pushf
sbb
jae
inc
bound
ret
or
lcall
xor
test
in
inc
add
ret
imul
movsb
sbb
aas
xorl
pushf
push
mov
mov
xlat
mov
mov
xchg
xchg
mov
cmpsb
popl
add
std
xchg
sub
hlt
mov
or
fsubr
fcom
andb
shlb
cmp
mov
cmp
int3
cmp
mov
mov
dec
xchg
nop
xor
stc
daa
js
jg
inc
loop
stos
gs
pop
jnp
push
ret
fcomps
test
dec
lahf
adc
in
les
sbb
push
inc
mov
iret
push
xor
addb
ret
nop
aaa
sub
jbe
popa
inc
shlb
sbb
rolb
or
add
cmp
icebp
add
pop
mov
sub
push
xor
add
fs
sbb
dec
mov
push
pop
ds
sub
mov
fcomp
in
lods
adc
popa
in
cmp
jecxz
adc
nop
mov
leave
jecxz
nop
jno
daa
sahf
arpl
rcrl
test
mov
adc
mov
notl
idivl
in
xchg
xor
cld
imul
cmp
int3
xchg
push
mov
mov
add
mov
mov
dec
lods
dec
in
dec
push
jge
stos
xchg
add
dec
push
sbb
pop
dec
mov
mov
push
bswap
lret
es
sub
jmp
inc
mov
lods
cmpsb
jmp
dec
lahf
jno
mov
leave
in
xchg
lods
inc
jns
arpl
jl
scas
pop
in
in
outsl
push
jns
add
mov
jg
inc
out
out
push
dec
adc
movsb
xor
imul
or
int
fwait
dec
out
xor
sub
ficoml
add
mov
jle
adc
cmc
cs
xor
and
jmp
in
sbb
mov
pop
es
ja
nop
repnz
mov
adc
sbb
xchg
xchg
addr16
les
pop
je
inc
sub
sub
cld
lcall
jle
icebp
aas
inc
xchg
mov
xor
cmc
mov
fldl
stos
cmp
mov
sbb
or
paddb
test
pop
lods
sbb
lods
jmp
loope
pushf
cltd
cmp
fstpl
int
sbb
lret
or
sub
in
cli
clc
arpl
mov
mov
pop
sub
push
ret
pop
outsl
ja
adc
lahf
jp
sub
pop
sbb
fdivrl
int3
mov
test
inc
lahf
xor
jecxz
stos
sbb
cmpsl
dec
mov
scas
inc
push
mov
jnp
cmp
or
xor
fdiv
mov
add
adcb
push
mov
test
xchg
cmp
outsb
shr
cmpsb
adc
pop
sub
jb
outsb
pop
and
rolb
sbb
lock
xor
insb
mov
in
jb
rcrl
xlat
in
jle
icebp
cltd
out
fistps
out
outsl
icebp
jbe
test
clc
sti
jbe
push
push
push
xchg
mov
xor
push
es
mov
out
adc
ficoml
lret
jb
enter
jle
adc
int3
ljmp
cmp
jo
cmpsl
ds
mov
pop
xchg
call
push
aam
push
xchg
jae
xor
lcall
stos
pushf
push
in
pop
insb
and
fsubrl
scas
adc
movsb
dec
push
push
data16
nop
and
lahf
pop
mov
mov
adc
mov
xor
into
cld
out
shll
push
enter
sub
sahf
inc
push
call
imul
mov
or
xchg
and
lret
cmp
cmpsb
jmp
jns
nop
mov
out
insl
and
movsl
popf
stos
dec
mov
xor
or
mov
mov
mov
mov
jns
sub
sahf
leave
test
out
mov
xchg
aaa
or
mov
stos
mov
jmp
loope
cltd
or
adc
xor
stc
or
jecxz
fmull
pop
loopne
adc
imul
js
inc
aam
mov
pop
adc
out
pop
push
ficoms
cmp
xor
loope
xor
mov
popf
into
xchg
xor
mov
jbe
mov
cli
rcrb
cld
mov
fimuls
faddl
sub
aaa
popf
push
add
ss
iret
mov
adc
sti
jne
add
mov
arpl
notb
sub
pop
and
popf
add
repnz
jmp
or
test
xchg
add
mov
imul
icebp
rcl
mov
movsl
fstpl
lods
mov
aas
bound
rol
mov
inc
sub
imul
data16
aam
dec
xor
test
repnz
dec
mov
mov
dec
ret
dec
inc
cld
imul
jb
adc
mov
or
adc
or
pop
mov
xchg
push
xor
andb
mov
inc
ljmp
and
ret
lock
push
int3
outsb
cwtl
inc
sbb
xchg
popf
push
add
inc
sbb
jae
idivl
mov
cld
jp
jle
cmp
je
pop
mov
pop
cmp
stc
enter
pop
dec
jecxz
inc
lcall
xor
insb
mov
test
in
mov
ds
das
addl
addb
imul
pop
inc
popf
jb
mov
push
js
mov
loopne
cmp
cmpsl
adc
mov
mov
inc
sbb
fs
inc
int3
mov
in
shlb
mov
pop
call
mov
lahf
imul
rorb
vunpcklps
nop
aas
les
jp
pop
mov
mov
mov
dec
repz
leave
lahf
test
cmp
fbld
fnstsw
pop
sbb
push
xchg
push
sbb
test
dec
push
je
and
pop
icebp
ret
nop
push
adc
mov
xchg
push
xchg
fs
leave
fadds
mov
xchg
mov
xor
jmp
mov
xor
pop
push
stos
lret
insb
lcall
das
aam
push
ss
out
mov
xlat
adc
into
das
sahf
push
or
and
arpl
mov
dec
lret
outsl
lahf
in
mov
call
js
or
sti
sahf
outsb
sbb
enter
aam
addb
cmc
out
pop
mov
push
xlat
add
dec
add
inc
mov
stc
xlat
jns
outsl
sub
xchg
sti
jmp
and
mov
stos
pop
loope
mov
mov
iret
lcall
cmpsb
std
mov
ds
mov
push
push
in
std
outsl
sbb
push
fs
pop
ret
mov
dec
mov
sub
dec
loopne
add
and
popf
addr16
cmp
loopne
repnz
ret
add
lds
and
rorl
fists
pop
inc
lds
paddsw
cmp
cli
mov
data16
mov
scas
sub
fmuls
sub
mov
lods
adc
lcall
lret
cmpsl
mov
push
jno
setge
popf
and
scas
stos
xor
xchg
dec
jo
mov
cli
jge
dec
jns
push
test
cld
adc
push
cmp
sbb
mov
or
and
fwait
mov
inc
negl
cmp
das
mov
inc
mov
jns
insb
iret
jge
stc
scas
and
mov
sub
xor
sbb
cli
jns
add
inc
sub
dec
xor
sub
aam
mov
fstps
push
mov
adcl
cltd
test
mov
mov
ss
loope
or
sub
ret
iret
popa
cltd
jg
cli
imul
add
jb
in
pop
bound
inc
push
dec
lret
add
cmpsb
sbb
inc
cmpb
movl
rolb
repz
hlt
xor
lcall
add
jnp
sub
insl
out
lea
fstps
adc
test
or
jae
xor
or
xor
sti
ja
and
mov
add
add
cltd
jmp
lahf
outsb
pop
andb
stos
shlb
mov
dec
rcl
sarb
xor
dec
dec
cmpsb
sbbb
xor
mov
cmpsl
in
sub
sbb
inc
sbb
mov
push
pop
insl
and
pop
cwtl
pop
xchg
ja
jecxz
pop
movsl
outsb
stc
inc
repnz
imul
mov
pop
lock
sarl
mov
bound
inc
out
loopne
cmp
jmp
dec
sub
jmp
pusha
adc
xchg
in
test
push
lods
sub
repnz
bound
mov
insb
mov
and
mulb
test
mov
popa
loopne
fbstp
shlb
add
cli
jmp
es
pop
call
fildl
cmp
popf
jo
out
cmp
or
pop
addb
sbb
and
mov
xor
insl
dec
cli
loope
jae
mov
in
dec
pop
ds
adc
cwtl
jns
sub
mov
jbe
mov
cld
sbb
hlt
mov
xlat
mov
dec
lret
push
into
or
pop
movsb
ja
fcompl
or
outsb
mov
sbb
int3
je
cmpsl
and
imul
repnz
push
movsb
mov
insl
lret
in
insb
fstl
out
insl
mov
sub
cli
roll
imul
cld
cmpsl
mov
pop
lcall
test
pop
call
fwait
xchg
lods
sbb
inc
lcall
cmp
daa
xor
dec
sbb
push
outsl
push
fcomip
sbb
sahf
js
xor
lret
jns
out
fildll
push
jecxz
std
inc
fidivrs
push
inc
enter
call
inc
inc
out
mov
push
pop
cwtl
cmp
shl
cltd
bound
loop
xchg
push
lods
sub
sub
pop
jge
sub
add
cmpsl
jne
ljmp
out
inc
shl
push
jbe
imul
mov
test
add
sahf
jmp
dec
sub
loopne
mov
loopne
pop
add
and
ljmp
cs
push
inc
cmpsb
pop
jl
adc
imul
andb
cmc
data16
push
pop
hlt
fwait
dec
xchg
push
lock
and
xchg
inc
jmp
push
mov
lcall
dec
mov
dec
fcoml
stos
push
dec
nop
push
aas
fbld
pop
cmp
pop
mov
cmp
in
cmp
jl
addr16
repnz
iret
es
sub
cmpsb
pop
cld
xchg
xchg
inc
xor
in
xor
add
cmp
adc
ss
add
lods
xchg
ret
mov
push
inc
sbb
es
jl
push
out
jle
dec
xchg
movsl
dec
es
imul
mov
cli
xchg
or
push
and
aad
rcll
and
sti
stos
and
popf
pop
mov
sarb
sbb
subb
popf
xchg
adc
mov
rcrl
adc
and
mov
aas
or
xchg
int3
mov
fwait
mov
enter
and
dec
stc
pop
jmp
sub
xor
add
fwait
scas
jno
cld
ss
xchg
mov
icebp
cmpl
inc
hlt
push
shrb
insl
scas
rolb
pop
loop
movsb
je
adc
jb
push
sti
int3
repnz
xchg
xor
hlt
xor
adc
and
xor
xchg
lods
or
mov
stc
arpl
adc
or
pusha
push
loop
lods
mov
cmpsl
or
push
jmp
and
fnsave
jno
xor
dec
or
push
mov
xchg
and
lret
movsbl
mov
out
les
ret
and
xchg
cs
mov
mov
lret
imul
out
repnz
xchg
cmp
xor
dec
xlat
xor
movsl
fistpl
xor
outsb
sbb
xchg
xchg
leave
pop
jb
fiaddl
frndint
popf
dec
ss
lss
neg
pushf
sbb
mov
fwait
rcrb
xchg
ret
leave
jge
cmpsb
test
iret
cmp
add
clc
lahf
add
push
clc
insl
dec
addr16
ficoml
ret
push
jecxz
jns
pop
in
enter
jno
into
xlat
push
loope
pusha
rcll
daa
clc
and
cwtl
inc
shrl
loop
loopne
enter
shrb
and
pop
lcall
inc
cmp
add
in
inc
push
sarl
daa
cmova
dec
jmp
jmp
fsubs
jno
cmp
cmp
or
lcall
mov
xor
repnz
gs
add
pop
and
xchg
jbe
lahf
adc
mov
sub
sbb
js
fsubrs
mov
mov
in
add
mov
int
add
and
and
lcall
fcomp
in
pop
or
pushf
xchg
fwait
xor
stos
xchg
inc
popa
pop
xor
testl
xorb
push
nop
sub
je
add
mov
sub
out
mov
adc
xor
nop
cmp
push
data16
nop
add
in
jae
stc
add
popa
inc
inc
add
lds
jp
cli
cld
jle
xorb
iret
add
pop
sti
jp
pop
aam
pop
xchg
repz
or
and
movl
add
add
mov
jge
insb
mov
stos
hlt
jmp
in
xor
outsb
sbb
data16
les
inc
leave
xchg
mov
leave
sub
and
notb
xchg
repnz
js
insb
cmpb
jnp
pop
in
je
mov
dec
jp
adc
push
imul
vcvtss2sd
and
mov
andb
mov
mov
mov
movsl
sahf
or
scas
outsb
js
xchg
in
add
repnz
es
cmp
jl
mov
mov
push
ret
add
outsl
xor
test
adc
lret
adc
dec
jp
fwait
adc
jbe
cld
inc
and
xchg
add
mov
test
mov
lret
sbb
cltd
js
subl
fists
sub
adc
pop
push
in
sbb
push
outsl
popa
ret
loope
mov
mov
mov
std
or
dec
sub
jg
es
loope
sbb
out
aam
aaa
cmp
or
push
mov
scas
mov
ja
pop
push
mov
sahf
aas
cmp
idivl
in
out
addr16
dec
xlat
fsubs
pop
in
insl
sbbb
push
test
sbb
mov
xchg
sub
loope
xor
and
fwait
lahf
imul
cmpsl
gs
add
pop
js
mov
ja
hlt
std
nop
lahf
jmp
jns
cltd
push
lcall
popf
and
rcrl
in
data16
cwtl
cmc
insb
inc
out
outsb
fdivrp
add
or
mov
cli
jg
cmp
je
cmpsl
in
sti
outsb
push
mov
xor
fistpll
outsl
jecxz
enter
jnp
cmp
pop
cwtl
mov
sbb
std
inc
movsb
or
adc
pop
cwtl
jecxz
pop
hlt
jle
or
test
into
adc
adc
xchg
pushf
jne
jns
inc
mov
fstpt
xor
xchg
jns
popa
push
into
and
mov
es
fst
es
fnsave
inc
cmp
jbe
push
pop
out
addr16
mov
add
adc
in
mov
je
pop
cmp
rcrl
inc
insb
jmp
loope
out
sbb
cmp
pop
and
mov
cmp
dec
adc
xor
adc
hlt
mov
cwtl
cwtl
dec
mov
test
movsl
test
sub
negb
mov
mov
push
test
xor
cmp
jg
jne
bound
and
hlt
sub
push
inc
pop
cmp
or
insl
mov
test
mov
sub
and
test
xor
insl
repz
roll
push
lret
cmpsb
mov
jns
jb
idivb
repnz
lods
mov
into
jl
cmp
jb
adc
mov
or
sub
scas
in
mov
mov
fs
sub
sbb
lock
dec
stos
int
aas
gs
inc
std
adc
mov
ja
pop
js
call
fwait
xchg
adc
rcll
mov
aaa
adc
dec
gs
jbe
sbb
sti
dec
scas
insb
lock
xchg
jle
lds
mov
push
jecxz
dec
pop
test
mov
push
jg
jle
push
lock
push
jge
std
jl
mov
test
jecxz
xchg
or
aas
add
adc
call
pushf
add
xlat
test
cmp
pop
shll
lds
test
cmp
scas
in
inc
stos
cmp
or
cmpsl
ja
mov
sub
ds
xchg
bound
fsub
push
and
xorb
ret
popf
outsb
ss
and
xor
cmp
add
mov
leave
add
add
insl
push
pop
xchg
jnp
scas
sub
push
dec
pop
mov
xor
add
scas
lret
dec
cmp
mov
lods
pop
jp
xchg
fucomp
jb
cmpsl
movsl
inc
ds
cmc
jbe
sbb
push
movsl
sti
mov
movsl
cmpsb
cld
scas
faddl
fs
out
jg
jmp
test
and
fisubl
les
int3
xor
ret
mov
mov
xchg
xor
clc
inc
jns
je
pop
fisttpll
pop
xchg
xor
cli
lock
adc
dec
jno
lret
subb
jge
add
adc
xchg
fsts
pop
clc
lock
mov
daa
jo
icebp
fs
mov
test
fidivl
je
in
ret
adc
jl
fdivs
mov
mov
mov
loop
mov
out
rorb
jl
or
mov
sub
fstps
push
add
fmulp
and
and
jp
dec
sub
xchg
cltd
dec
cmp
cmpsl
fs
push
add
pop
test
cmc
sahf
shll
cmp
mov
je
stc
push
sub
sbbb
lods
movsb
lea
cld
jno
aas
sub
pop
fwait
inc
pop
add
pusha
sbb
imul
int3
into
lahf
pop
or
jge
je
lods
mov
and
fdivs
mov
add
xor
jl
or
push
pop
push
adc
insb
dec
push
inc
add
test
ja
sbb
mov
mov
mull
xchg
add
lds
test
push
jnp
mov
sti
ja
add
lret
imul
lahf
pop
iret
jle
push
mov
pop
stc
roll
cs
dec
insb
push
cld
jecxz
inc
pop
lahf
mov
fxam
lcall
or
arpl
addl
ret
dec
and
int
mov
movsb
jns
pop
push
fists
shll
push
mov
test
nop
enter
cs
push
test
js
stc
xor
es
cmp
inc
in
inc
push
dec
xchg
push
test
lds
aad
sbb
sbb
push
sub
mov
xchg
out
test
inc
pop
add
pop
into
sbb
dec
inc
arpl
sub
sub
push
mov
and
adc
rorl
xor
lods
and
jb
mov
jle
pop
xor
ja
fsubr
movsl
push
cmp
or
sarb
gs
inc
adc
jge
cmc
cld
inc
lret
push
xchg
and
push
cmpsb
pop
scas
je
rcr
aas
inc
scas
stos
cmp
ljmp
mov
mov
mov
and
fadds
cmp
out
add
push
mov
mov
loopne
adc
jbe
lods
xor
ds
je
shl
xorb
fnstcw
dec
mov
mov
sbb
inc
into
inc
mov
shll
mov
shll
mov
test
shll
xor
sarb
js
and
mov
dec
push
sub
out
or
arpl
jbe
and
dec
fistpll
pop
or
push
pop
lret
pop
out
aas
mov
xchg
in
xchg
lds
ds
push
addr16
lret
sub
adc
mov
jnp
call
mov
xor
daa
arpl
mov
and
jo
cmp
test
ret
pop
lods
inc
mov
pusha
inc
mov
mov
cmpsb
addr16
cld
mov
scas
mov
data16
xchg
cli
or
testl
loopne
push
imul
sahf
xor
insl
lea
ret
cmp
jecxz
add
fldt
push
jno
jae
inc
movsb
cmp
adc
in
aas
xchg
stos
cld
inc
test
xchg
adc
call
rolb
or
cli
jg
int3
dec
jmp
pop
rcrb
outsl
inc
hlt
push
cmp
sarl
jb
xorl
arpl
pop
cmc
mov
or
stos
mov
ret
mov
mov
add
add
mov
push
not
cmp
or
popa
into
aam
adc
push
scas
imul
lcall
push
dec
xchg
sub
leave
negl
insl
test
outsb
int
pusha
inc
mov
inc
mov
jae
je
fwait
aam
jns
jp
sbbb
sub
or
or
cmp
imul
jne
cltd
sub
sbb
mov
popf
notb
icebp
popa
loop
test
sahf
mov
sbbl
sub
lods
gs
jecxz
add
shrb
repz
nop
lahf
and
cmp
pusha
int
jl
stos
pop
mov
imul
leave
or
mov
cld
push
dec
jo
subb
gs
in
xchg
in
mov
sbb
cmpsl
sarl
ja
push
push
movsl
push
mov
enter
or
test
mov
mov
jle
jecxz
dec
mov
sti
pop
lds
mov
dec
jle
out
mov
aad
fisubrs
aaa
push
out
mov
xchg
mov
jecxz
push
popf
bound
test
xchg
inc
stc
cmpsb
iret
sub
es
add
pop
dec
mov
adc
sti
jo
jg
jp
mov
lahf
repz
push
aas
sub
pop
pop
in
sbb
mov
jae
test
cld
shlb
dec
jmp
jb
adc
mov
out
imul
inc
leave
adc
arpl
pop
adcl
jecxz
jge
sub
mov
movsb
dec
inc
push
xchg
jg
es
mov
push
daa
cwtl
fs
enter
push
loope
and
fnstenv
fldcw
push
stos
nop
lret
lahf
jle
sbbl
sub
xlat
cmp
insb
gs
pushf
mov
fcompl
xchg
imul
mov
dec
out
cwtl
in
pop
adc
fiadds
daa
stos
sbb
ss
mov
pushf
or
xchg
mov
out
out
pop
loopne
sub
or
inc
pop
loop
mov
lock
je
jbe
js
in
into
gs
bound
jns
rcl
iret
cmp
jnp
test
enter
sahf
sub
lret
iret
pushf
mov
jmp
fnstcw
mov
push
mov
mov
outsb
es
mov
repz
ljmp
jbe
iret
inc
sti
js
cld
mov
shl
js
ljmp
cmp
pop
lret
add
push
int3
and
mov
cmp
dec
xor
and
xchg
sar
pop
icebp
out
ret
lods
addb
xchg
pop
pop
scas
inc
push
leave
add
decb
xchg
leave
enter
sbb
push
rclb
xchg
cwtl
aas
cli
or
jp
pusha
xor
aam
sub
mov
cwtl
lds
push
cmp
andl
lret
addr16
aaa
jnp
sbb
stos
mov
ljmp
imul
mov
mov
mov
mov
or
adc
lea
leave
lds
inc
adc
bound
inc
shlb
je
jmp
mov
ret
push
inc
sub
addr16
cmp
pop
jl
jne
sbb
ljmp
sub
rcrl
mov
and
and
lea
mov
mov
outsl
inc
setle
cmpsl
sbbl
mov
mov
dec
fildl
inc
sub
xadd
shl
fisttps
xchg
mov
in
and
call
dec
jo
add
mov
push
xor
call
and
push
ljmp
subb
or
sahf
mov
jp
jecxz
sbb
or
inc
ljmp
pop
stc
into
pop
ds
pop
inc
pop
xor
add
inc
shlb
gs
js
pop
or
enter
shlb
inc
call
test
and
and
std
nop
xor
mov
test
incb
add
inc
sub
mov
sub
fisubs
sbb
hlt
fcomi
xchg
adc
insb
imul
add
pop
fs
out
xchg
lods
inc
dec
hlt
in
cmp
cli
sbbb
cmc
test
push
lods
int3
pusha
adc
push
xchg
inc
imul
mov
insb
loop
push
and
xchg
mov
and
stc
or
dec
push
ret
jbe
clc
mov
mov
gs
outsb
inc
icebp
mov
fistl
enter
and
bndldx
imul
outsl
mov
sysexit
mov
jne
mov
jnp
dec
iret
loopne
fadds
cmp
adc
mov
shll
mov
loope
testb
ret
cs
adc
es
mov
cmp
loope
je
lds
les
clc
adc
mov
test
xchg
dec
iret
add
ror
lahf
mov
gs
xlat
sti
in
loop
pop
dec
sbb
enter
add
enter
ficoml
stos
jae
cmp
adc
jl
sbbl
jecxz
sbb
add
ret
mov
xlat
push
mov
xchg
ficoml
sti
dec
sbb
call
aaa
xchg
dec
push
das
fldcw
or
shll
sub
bound
jno
cmp
jae
outsb
add
std
xor
pop
out
hlt
loop
std
hlt
adc
sub
or
enter
xor
fisttpll
mov
repnz
pop
xchg
adcb
jno
hlt
addl
xchg
stos
fs
ljmp
mov
mov
div
push
fwait
rcll
mov
push
inc
les
popf
orl
jmp
iret
fstl
push
mov
repz
dec
cwtl
les
scas
nop
out
push
cmp
dec
mov
in
stos
push
insl
mov
push
xor
cmp
push
bound
dec
mov
shlb
outsb
add
inc
cs
iret
hlt
xchg
popa
ljmp
mov
mov
daa
das
cmp
cmc
sbb
scas
cli
xchg
xchg
imul
inc
xchg
repz
jg
add
adc
mov
lock
cmpl
or
cwtl
push
xchg
ss
dec
cmp
sub
test
cmpsb
daa
cltd
xor
xchg
xchg
mov
sbb
icebp
xor
pop
pop
and
arpl
jo
mov
sub
ret
mov
fildl
jl
idiv
cli
dec
es
jle
push
lcall
into
push
mov
or
out
adc
push
mov
nop
mov
shll
jb
or
stos
cld
pop
mov
xor
js
loop
mov
pushf
mov
jo
adc
lahf
push
inc
adc
pop
adc
mov
inc
add
jae
test
enter
xor
ds
mov
and
cmp
fidivl
mov
in
ficompl
push
and
loopne
out
push
xchg
test
sbb
jl
clc
out
pushf
decl
gs
push
or
jg
mov
mov
mov
cli
mov
push
imul
scas
and
mov
cmp
mulb
inc
pop
jg
add
out
adc
and
pop
loopne
lret
repnz
repz
test
movsl
or
jbe
loop
orb
cmc
lea
scas
fnstcw
inc
xchg
cmp
jne
cwtl
out
jbe
ret
popa
inc
fstpt
cmpb
imul
jno
sbb
push
fs
pop
mov
scas
int3
movsb
addr16
sbb
lcall
rcrl
popa
add
xor
xchg
xchg
pop
sub
out
jns
mov
pushf
cmp
sub
mov
dec
add
lea
jbe
xchg
icebp
int
or
mov
ror
add
or
xchg
das
adc
pushf
mov
in
xor
aad
xchg
push
mov
sub
or
mov
add
imul
aam
push
inc
mov
pop
ss
add
addl
fwait
inc
testl
arpl
pushf
icebp
sbb
adc
cltd
pop
aas
loope
cli
push
insb
mov
dec
or
push
pop
out
rolb
mov
shlb
enter
adc
repnz
shl
jecxz
dec
sarl
cltd
cmc
sahf
sub
aas
notl
fsubr
xchg
push
roll
addb
xchg
out
cmp
dec
mov
cmp
mov
pop
mov
fisttpl
sahf
mov
in
les
bound
cwtl
mov
loope
daa
icebp
mov
out
mov
pop
and
in
test
insl
push
sahf
fmuls
and
stos
push
push
lea
push
sarl
daa
jecxz
mov
dec
mov
jle
mov
mov
adc
lods
and
sub
loopne
int
or
test
loope
mov
or
push
mov
mov
mov
inc
lahf
scas
or
jecxz
and
mov
rcrl
aaa
ja
pop
pop
push
add
into
mov
arpl
sub
mov
xchg
in
cmp
iret
cmp
push
cmp
nop
sti
dec
add
outsl
scas
aas
rcrl
repz
and
jmp
xorb
stos
xchg
popa
test
dec
ficomps
icebp
jnp
push
mov
leave
xor
addr16
inc
adc
or
and
pop
push
and
stos
pop
in
jnp
cwtl
sbb
jb
mov
xchg
pop
lods
roll
xor
and
push
flds
sbb
xchg
and
dec
mov
adc
jb
sbb
fildl
cmpsl
lock
xor
clc
mov
ds
push
or
cld
xchg
outsb
cs
mov
inc
lret
mov
mov
mov
cltd
xor
scas
adc
inc
pusha
in
outsl
xchg
lea
loop
mov
ss
cmp
shrl
repnz
fwait
jg
xchg
jge
lret
fcoml
test
and
push
sub
add
xor
or
dec
sarl
adc
repnz
pop
xorl
out
in
dec
and
pop
or
jb
out
aam
or
ds
and
pop
sub
in
cmp
lret
jp
inc
inc
hlt
out
cmpb
loope
cmc
xchg
pop
xchg
arpl
mov
xchg
inc
push
cli
jle
sbb
xchg
push
mov
rcrl
mov
bound
mov
sbbl
pop
lret
subl
pop
repz
dec
jge
adc
shlb
mov
mov
or
pushf
xor
xchg
cs
mov
cld
jnp
insb
inc
enter
push
mov
pop
xorl
sbb
das
pop
lock
jmp
lret
inc
aas
stos
pop
mov
cmp
and
xor
mov
pop
xchg
push
lea
or
push
xlat
jo
nop
or
adc
cmp
mov
mov
jmp
insb
test
adc
mov
daa
fcomp
mov
cmpsb
test
push
loope
jge
jbe
or
xchg
lock
sub
inc
dec
mov
or
mov
call
adc
into
div
xchg
ret
push
daa
sub
push
jo
cmp
sub
sbb
cmp
out
imul
lahf
dec
sub
lods
push
push
sbb
jno
xlat
push
push
leave
mov
pop
repz
jae
out
fdiv
add
gs
push
cltd
outsl
xchg
xor
jo
ljmp
roll
fmul
int3
fadds
xchg
lret
cmpsl
cld
outsb
jne
popa
cmpsl
int3
jns
mov
sub
lock
dec
and
push
out
and
fidivrs
xchg
fs
imull
xchg
js
add
mov
mov
lahf
mov
popl
mov
movsl
pop
cmp
jge
mov
mov
ja
mov
sarb
dec
push
add
psllw
jmp
test
hlt
dec
mov
movsb
adc
mov
enter
dec
shll
rorl
iret
or
pop
out
pop
pop
int3
fwait
out
pop
sub
out
cmp
cmp
mov
test
iret
sbb
test
mov
and
pop
inc
or
sub
pop
nop
leave
ret
push
rcll
cmp
orl
and
pop
pop
jmp
pop
inc
int3
imul
push
stos
bnd
xor
jle
movsl
mov
pushf
iret
xor
xlat
add
mov
add
xor
sarb
push
adc
cmp
hlt
add
cltd
inc
jne
icebp
and
pop
movb
pushf
push
mov
sbb
cmpsb
fsubrl
call
hlt
hlt
sarl
imul
push
sbb
xchg
push
mov
int
dec
sub
pop
jns
inc
pop
scas
push
iret
data16
adc
out
jp
inc
sbb
jle
jbe
pop
stc
xchg
arpl
jle
or
mov
pushf
test
add
mov
daa
or
les
ret
cld
push
and
push
xchg
lds
shll
mov
repz
in
jbe
push
les
push
loop
pop
sub
pop
pop
mov
jp
stos
xchg
cltd
push
xor
pop
inc
les
xchg
pcmpgtd
add
cltd
push
jns
dec
jbe
add
or
and
sub
in
push
jns
xor
sbb
xchg
ljmp
inc
inc
fwait
in
pop
lret
xchg
jno
xor
inc
sti
inc
cmp
sahf
add
pop
movsl
in
int
or
sbb
mov
fdivr
jne
fs
cmp
mov
into
popf
sets
inc
mov
negb
add
push
pop
xchg
into
push
ds
xor
inc
xor
pop
cmpsl
shlb
cmc
insl
out
lea
or
fwait
sets
sbb
xor
xchg
mov
jp
fstpt
out
cld
push
lock
and
rorb
int3
test
pop
stos
inc
mov
fs
mov
inc
cmp
xor
sub
xchg
fildll
adc
mov
jl
pop
or
fldcw
and
mov
cltd
xchg
mov
scas
inc
or
and
inc
jle
jne
loop
hlt
jle
addb
sti
cmp
dec
xchg
addl
or
arpl
andb
cli
ljmp
mov
or
xor
pop
jne
movsl
stc
js
dec
sub
lret
add
mov
jge
test
setae
cld
jne
push
out
scas
and
out
int3
adcl
dec
add
fidivl
mov
jp
inc
push
mov
xchg
out
leave
sahf
int
xor
outsb
xchg
or
mov
sahf
cmp
pop
sub
rorb
lock
pop
jle
rcr
stos
sarl
stos
stos
push
faddl
or
pop
xchg
push
in
or
mov
inc
test
mov
sbbl
ret
jl
mov
mov
rorb
inc
cmp
idiv
mov
sbb
adc
into
ss
dec
xor
sti
pop
jne
cmc
cwtl
ss
push
sub
repnz
jmp
mov
sub
or
imul
mov
jge
jle
sub
mov
pusha
popa
adc
dec
sarl
xchg
xchg
jmp
inc
sar
mov
lret
fdivr
std
inc
mov
mov
xor
xor
iret
adc
sbb
int
mov
mov
outsl
loopne
in
js
and
mov
add
xchg
bswap
and
repz
sbb
cltd
stos
cmp
push
sub
in
pop
idivb
ja
mov
or
mov
mov
sbb
popf
xor
imul
mov
jl
xor
mov
and
dec
sub
mov
hlt
loope
inc
cmpsb
call
testl
mov
lods
pop
inc
pop
shr
adc
hlt
mov
dec
pop
enter
movsb
push
cmpsl
dec
lock
lret
xor
pop
xchg
scas
jmp
mov
int3
ret
xchg
iret
stos
cwtl
cmp
call
xchg
loopne
test
dec
das
push
xchg
xchg
pusha
inc
test
jne
dec
jae
adc
loopne
out
lds
or
xor
push
ljmp
push
sbb
inc
sbb
cltd
cmp
mov
xor
int
sub
or
je
jp
lret
inc
arpl
outsb
aad
mov
leave
aam
ljmp
test
loope
sahf
jb
pop
outsb
mov
add
fsubrs
mov
lret
pushl
inc
sub
xor
and
jle
out
xchg
dec
or
repnz
pop
je
add
gs
out
xor
cmp
je
mov
add
addr16
mov
pop
dec
xorb
pusha
sub
and
sbb
jbe
repz
mov
scas
adc
cmp
fisubl
js
fstl
int
fmul
data16
pop
ss
rcrl
aaa
addr16
xchg
rorb
mov
fisubl
mov
push
sbb
fcoms
pop
xchg
das
out
icebp
xchg
imulb
test
and
sahf
arpl
or
pop
xor
movsb
sbb
movsb
xchg
ljmp
mov
jl
fidivrs
push
test
adc
pop
jnp
lahf
cmpsb
rcl
nop
jbe
adc
shrb
pop
adcb
and
imul
loope
sarb
test
movl
repz
lea
jo
iret
sub
pop
mov
loopne
mov
fwait
stos
ljmp
enter
icebp
loopne
cld
pop
aam
add
mov
push
into
int3
mov
nop
xor
lds
por
ret
iretw
mov
mov
xchg
inc
xor
add
pop
es
xchg
xor
dec
sub
jne
negb
adc
push
pushf
adc
sbb
test
aam
or
out
and
mov
sub
mov
xorb
xor
shll
adc
lds
pop
sbb
arpl
pop
push
imulb
adc
arpl
xchg
jb
jmp
mov
mov
leave
xchg
icebp
stc
adc
sub
cmp
mov
cltd
cmp
clc
jbe
xlat
push
push
divb
xchg
leave
andl
inc
hlt
loop
push
pop
pop
dec
sub
mov
lds
inc
stos
sbb
add
cmpsb
jle
inc
jnp
pusha
loop
ljmp
ret
loope
inc
sub
xorl
dec
inc
sub
and
dec
in
inc
and
add
mov
pop
pop
sub
ficomps
xchg
insl
scas
adc
and
arpl
addb
pop
sub
inc
dec
int3
in
mov
cmpb
xor
in
jbe
insb
mov
jno
jae
fisubrl
test
cmp
dec
inc
in
leave
mov
adc
xor
inc
test
lcall
icebp
lock
mov
jl
pop
mov
decb
cmp
dec
dec
and
and
je
mov
add
icebp
jecxz
and
and
movsb
pop
cmp
sbb
aam
inc
insb
push
enter
xchg
rcr
cmp
and
dec
add
push
js
sbb
xchg
mov
lds
mov
mov
push
pop
fcompl
popf
test
stos
inc
or
fcoml
cmpsl
xor
cs
loop
das
jb
add
addr16
mov
scas
lret
xchg
js
push
push
sbb
xchg
cmpsb
mov
in
sub
repz
scas
inc
popl
test
mov
jae
jns
mov
pop
jne
jae
adcb
les
add
add
sbb
inc
jne
mov
mov
dec
mov
pop
xchg
leave
xchg
adc
sbb
movsb
sahf
add
aad
in
adc
dec
fldcw
lahf
adc
cmpb
jb
push
pop
fimull
cmp
loopne
push
loope
loopne
xchg
xor
mov
icebp
popl
in
pop
push
mov
jbe
nop
repnz
ds
aaa
test
pushf
nop
sub
mov
out
push
push
xchg
daa
test
jbe
jo
mov
imull
in
mov
lock
pop
addr16
xlat
loopne
les
pop
mov
scas
dec
jp
pop
xorl
lret
mov
mov
outsl
sub
jns
add
mov
lret
dec
mov
outsl
mov
fistpl
xchg
xchg
scas
out
cmpsb
out
addb
mov
cltd
js
mov
pusha
add
dec
gs
fistps
xor
imul
idivb
adc
push
pop
stc
bound
pop
cmp
jno
dec
lea
jp
sub
pop
ja
sahf
loop
mov
and
rcl
xor
dec
mov
push
insb
push
sbb
movsl
int3
xlat
mov
cltd
rorb
or
inc
ret
ljmp
lahf
mov
notb
sub
mov
clc
imull
fs
mov
push
fwait
pop
inc
iret
xor
int
push
mov
cmp
cltd
jnp
out
scas
pop
jnp
iret
xor
xchg
cmpsl
mov
inc
imul
inc
out
scas
xchg
test
cmp
push
and
pop
or
mov
mov
cmp
inc
push
sub
xor
xor
and
int
ja
dec
orps
inc
mov
or
mov
mov
mov
loope
cmovno
sub
and
pop
lods
mov
cmp
sti
mov
dec
or
sub
mov
cmp
pop
ds
jge
sub
out
leave
pop
test
sti
call
icebp
sbb
sbb
negb
mov
popa
loopne
dec
call
mov
int3
cmpsl
or
inc
test
fldt
cmpsl
scas
movsb
daa
pop
mov
or
inc
pop
inc
cmp
leave
test
into
lods
jmp
fisubs
ss
pop
rcrb
xchg
cmp
pop
mov
scas
int
sub
lds
std
movsl
fdiv
popa
xchg
adc
loop
lahf
mov
cmc
pusha
cwtl
add
out
push
sbb
hlt
jno
mov
mov
mov
js
push
mov
push
pop
rorl
cmpsb
mov
dec
lret
sub
dec
cltd
cwtl
seto
leave
imul
xchg
jmp
out
jmp
xor
lret
mov
fsubp
bound
inc
sub
push
xor
jo
sbb
imul
int
out
nop
push
cli
and
or
add
dec
mov
push
leave
adc
mov
adc
add
mov
outsb
xchg
clc
mov
lcall
mov
inc
xchg
mov
push
icebp
mov
aaa
pop
cmpsb
jae
cmp
mov
ss
mov
push
pop
loopne
test
push
jb
out
clc
stos
xchg
cmpl
sarl
jo
lea
jmp
mov
call
xor
mov
sub
mov
cmpsl
xchg
mov
lret
inc
and
mov
sti
jnp
inc
stc
popa
mov
aas
lret
aad
push
dec
xor
mov
jp
mov
jmp
lock
lret
into
cmc
cmpsb
inc
lcall
aam
pop
cmc
insb
add
push
dec
fists
popa
mov
data16
sbb
pop
sbb
leave
push
xchg
nop
fwait
xchg
inc
mov
ret
jo
ret
repz
push
jne
sub
ror
or
pop
dec
out
repnz
jne
lods
ret
mov
push
test
fbstp
mov
dec
loopne
je
cmp
ret
and
xchg
mov
sbb
sub
adc
and
aas
inc
mov
push
cld
sbb
popf
outsl
xor
inc
cld
xor
adc
sub
or
inc
jp
pop
or
jg
int3
dec
xor
xor
pop
sbb
xor
cmp
addr16
xchg
cmc
lea
lahf
adc
fisttpll
outsb
test
or
cmc
dec
out
pop
mov
cmc
xchg
dec
adc
ret
or
stos
faddl
adc
cmp
pop
xchg
sahf
dec
and
idivb
pop
movsb
and
dec
push
inc
dec
aam
imul
dec
fisubs
insb
aas
outsl
flds
je
push
sbbb
cmp
mov
into
fcomp
imul
mov
leave
and
mov
push
pop
xor
jp
cmp
sub
push
inc
js
mov
lods
outsl
daa
and
das
mov
mov
mov
push
lahf
xor
mov
jge
pop
cmpsl
fsubrs
dec
adc
inc
fiaddl
popf
lds
loop
or
pop
popa
mov
mov
or
push
mov
dec
xor
jg
or
jmp
fwait
stos
xchg
cltd
inc
inc
pop
xchg
call
sbb
sbb
addl
call
pop
jl
in
orl
loopne
mov
sub
or
pop
pop
imul
aam
push
gs
jbe
out
mov
mov
nop
sub
lock
neg
iret
cld
xchg
stos
out
xor
xorb
mov
cmpsb
int
jg
xor
mov
pop
imul
sbb
jns
pop
fdivl
pop
push
sti
sub
jl
add
push
xor
dec
sbb
movsl
repz
and
in
repz
loopne
xchg
jnp
test
sar
xchg
fcompl
je
jo
call
cmp
insb
loopne
jae
sub
jecxz
adc
push
xchg
dec
and
xor
lret
mov
cmp
sbb
fstp
cltd
add
xchg
repnz
into
notb
repnz
std
ljmp
sbb
push
dec
mov
xorl
adc
in
mov
ret
sbb
pop
test
or
sub
sub
mov
cmpsl
ss
push
dec
cmpsl
dec
test
sub
xor
not
mov
hlt
movsl
mov
mov
dec
jo
mov
mov
dec
fistps
cli
ret
add
call
or
outsl
jne
imul
lods
aad
mov
add
pop
sub
jo
add
fcoms
dec
push
adc
addr16
push
sahf
lock
sub
xor
rcll
jle
pop
test
aad
adc
mov
push
lcall
in
pop
mov
adc
adc
inc
mov
adc
cmpsl
movsl
jl
or
push
mov
data16
and
aas
div
pop
pop
add
adc
leave
adc
and
jne
mov
test
loopne
shll
cmp
dec
popa
in
dec
scas
test
xor
andl
xchg
hlt
fwait
mov
xor
es
lods
and
mov
lock
mov
arpl
xor
and
dec
jne
fwait
mov
ds
add
shlb
je
jns
aad
es
cs
test
sub
jb
cmp
ss
sub
dec
in
mov
pop
mov
or
int
pop
mov
test
fimuls
mov
cmp
scas
stos
insb
loop
push
neg
aaa
xor
mov
pushf
ds
mov
jle
and
inc
cld
sahf
or
andps
repnz
mov
cmc
scas
dec
aaa
imul
cmp
add
mov
repz
mov
inc
add
popa
lods
inc
fs
push
xor
outsb
jnp
fldenv
aad
js
cs
nop
inc
jns
mov
int3
sbbl
mov
sbb
inc
or
dec
out
pop
aaa
in
jnp
and
mov
jmp
adc
cmpsl
aad
ret
bound
rcl
std
sbb
cmp
in
adc
mov
push
sahf
sbb
sub
ret
popaw
xchg
mov
pop
xchg
inc
jp
push
adc
jno
das
or
pop
fstl
fiadds
pushf
push
arpl
loop
lds
xor
or
loope
mov
bound
cld
mov
push
stos
icebp
xchg
push
outsb
cmp
mov
and
xor
daa
xor
les
outsl
cmp
and
cmpsb
mov
dec
mov
adc
xor
jle
stos
rolb
out
cmp
xchg
xchg
dec
fmuls
and
inc
fcomps
dec
mov
mov
push
mov
cmp
lea
pop
lods
mov
push
sub
aaa
push
nop
xor
adc
daa
addb
xor
in
adc
ficoms
cld
adc
xor
pop
mov
cs
shlb
test
nop
cmp
lods
fildl
movsb
imul
mov
xchg
ljmp
cmp
jg
in
dec
sub
mov
leave
and
mov
shll
rcrl
test
js
sbb
jb
fcompl
sbb
add
imul
loope
daa
inc
jmp
push
andl
dec
mov
add
outsb
aas
mov
test
jb
add
push
pop
fstpt
cmpsl
mov
and
mov
add
cwtl
mov
hlt
xchg
adc
pusha
push
push
mov
add
sti
cmp
push
scas
int3
sub
clc
outsl
mov
ffreep
movsb
popa
fcmovb
or
mov
add
int
fistl
or
aam
pop
xchg
scas
push
repnz
addl
push
or
jp
pop
adc
mov
fisttpll
mov
fildll
stos
shl
in
iret
sbbl
aaa
dec
xorl
std
or
out
cli
daa
xor
vmwrite
insb
xor
sub
or
xchg
and
fstpl
mov
sub
push
ret
rorb
or
stc
dec
xlat
xlat
addb
incb
jb
cmpsb
add
adc
or
and
push
mov
stos
cmpsb
je
sub
jecxz
sahf
xchg
dec
lret
rorb
xor
nop
push
shrl
jae
push
jbe
lret
jno
xchg
pop
in
jb
rcrb
mov
add
hlt
fistl
xlat
lret
test
sub
push
or
dec
sub
fidivrs
in
xchg
fucomp
cmpb
push
stos
fildl
mov
mov
jg
je
dec
test
jne
daa
cmpsb
xchg
loopne
cmp
jge
js
and
push
shll
orb
xor
xchg
aaa
jp
mov
xor
jnp
mov
sbb
cli
ret
adc
dec
mov
in
loopne
cld
mov
adc
mov
scas
mov
mov
in
stos
js
out
xchg
cmp
movsl
jmp
aas
push
pushf
xor
gs
and
push
lods
mov
out
jge
gs
inc
fs
jg
mov
or
mov
sub
roll
sti
cli
testl
scas
sbb
fwait
or
mov
call
leave
jge
outsb
test
push
mov
lds
nop
xorb
fisubs
into
mov
xchg
ret
shlb
bound
mov
hlt
scas
sub
xor
xchg
sti
inc
adc
insb
push
or
add
xor
js
jp
repnz
push
sbb
jnp
inc
inc
lret
enter
mov
xchg
or
aad
mov
dec
or
cmp
pop
sarl
cld
xor
clc
in
jmp
stc
nop
stos
inc
dec
and
jge
sub
icebp
shl
mov
adc
popa
mov
ljmp
popf
lcall
pop
mov
mov
mov
pushf
cmp
in
imul
xchg
shll
movsb
sbb
xchg
cwtl
arpl
add
test
dec
hlt
loopne
and
xchg
pop
inc
out
cmp
push
dec
stos
popf
xchg
push
dec
xchg
cmp
adc
jg
js
imull
pop
into
cmp
aad
lahf
adc
call
xor
xchg
mov
pop
scas
aad
inc
sbb
mov
into
and
es
stc
xchg
pop
test
mov
sbb
mov
outsb
xor
mov
adc
fs
mov
or
out
arpl
cltd
leave
shl
cmp
dec
push
adc
and
pop
mov
adcb
inc
jbe,pn
mov
adc
xorb
insb
xor
int3
xor
add
jnp
and
movd
rcrl
dec
std
nop
sbb
cmpsb
pop
aas
adc
and
aad
arpl
jg
lcall
js
in
sbb
xchg
pop
fcoml
adc
add
sub
ja
mov
mov
repnz
fcoms
frstor
jge
mov
jbe
in
faddl
xchg
or
es
lcall
pop
arpl
shll
js
dec
lods
jmp
test
dec
push
mov
daa
dec
dec
sub
into
test
sbb
cmp
add
dec
or
scas
lahf
pop
sbb
jnp
loop
fcmovbe
jge
sub
jg
movsl
in
cmc
fnstsw
inc
bnd
sub
shl
mov
mov
add
push
pop
sub
jnp
test
in
mov
dec
movsb
mov
push
in
daa
lods
cmp
mov
addr16
push
xor
int
fmul
push
dec
or
dec
fcompl
daa
cmp
pop
mov
push
call
jns
test
bound
sbb
push
push
dec
sub
orl
sbb
jb
push
pop
xchg
cmp
dec
and
int
js
aad
inc
fdivr
cwtl
rorl
cmpsl
add
icebp
adc
sahf
inc
movsl
mov
mov
rol
sub
fistps
std
push
cmp
inc
or
add
js
repnz
pushf
cmp
cltd
lods
dec
imul
pop
push
loopne
std
fdivs
jmp
mov
mov
sbb
mov
cmp
movsl
mov
xor
mov
mov
loope
xchg
sub
andb
jnp
in
mov
out
repz
mov
jmp
outsl
je
bswap
outsl
add
test
out
mov
out
add
stos
cmp
fs
jmp
loope
jge
mov
or
xchg
int
scas
cmc
rclb
cmp
mov
out
and
popf
ss
fstpt
loopne
cmc
and
repnz
ljmp
fbstp
mov
mov
push
lock
mov
aad
mov
xor
outsl
dec
sub
jno
lahf
call
cmc
cmp
out
test
push
jge
out
xchg
xchg
xchg
jb
ret
adc
cmc
lcall
add
divl
lret
fiadds
add
shlb
fwait
cmp
rcrl
cmp
popa
push
cmp
cmp
sbb
xchg
or
push
mov
mov
sub
pop
or
in
xchg
mov
inc
push
and
xchg
jbe
mov
adc
sbb
mov
xchg
sub
push
ds
lahf
pop
pusha
lea
mov
lcall
stos
out
ret
and
mov
cmc
xor
mov
or
lock
mov
jns
and
shr
movsl
mov
mov
sub
je
mov
enter
das
pop
or
and
sbb
popf
push
pop
push
mov
lcall
cvtdq2ps
cmp
or
aam
fldt
sbb
xchg
lahf
push
sarl
movsl
xor
mov
or
test
outsb
or
mov
jns
dec
pop
push
shr
xchg
and
add
mov
jns
scas
xor
jge
ss
sbb
mov
cmpsb
imul
loop
mov
cli
or
cmpsb
or
adc
mov
ret
outsb
jmp
push
xchg
cwtl
cmpsl
aaa
push
ret
es
mov
test
enter
cwtl
ljmp
addr16
loop,pn
dec
add
cmp
pop
inc
or
out
mov
push
xchg
jbe
ja
imul
dec
add
cld
idivb
and
pusha
push
adc
push
pop
ss
je
mov
jo
push
ret
sub
add
shrl
pop
into
cmp
mov
popa
scas
insb
and
mov
sub
xchg
rcll
int3
cltd
sarb
mov
aam
and
clc
fistpl
dec
loop
int3
test
inc
xor
push
push
mov
adc
inc
icebp
cli
jne
or
sbb
jge
stos
mov
stc
jmp
mov
je
in
ss
jo
mov
pop
mov
insl
lods
in
push
sbb
orl
mov
movsb
jmp
test
cmp
inc
fldl
adc
mov
int3
push
dec
imul
addb
sub
cmp
ds
rcrb
pop
push
pushl
sub
mov
je
hlt
push
pop
jb
lods
xchg
jno
pop
mov
stos
lcall
xchg
add
nop
orl
mov
cmp
in
push
push
loop
into
neg
arpl
xor
sbb
xlat
pop
cmpsl
jg
pop
sub
and
outsl
mov
inc
enter
in
cmpb
cmc
mov
mov
nop
xlat
push
cmp
sub
fwait
lea
cmp
sbb
gs
in
icebp
fwait
enter
cmc
inc
adc
lods
and
inc
push
imul
xchg
mov
adcb
pop
or
adc
cli
mov
repz
call
add
ret
lret
sub
or
lret
xchg
leave
inc
stos
imul
add
and
lret
punpckldq
stos
aad
sbb
push
dec
outsl
add
in
mov
out
jnp
push
shrb
int
add
test
fdiv
shr
pop
out
push
mov
pop
jmp
dec
test
adc
jl
imul
adcb
jecxz
adc
mov
pop
iret
loope
mov
ds
ja
push
push
or
cmp
sub
mov
outsl
xor
imul
or
dec
hlt
adc
sub
push
jae
call
and
iret
xchg
xor
je
inc
pusha
xorb
inc
es
rcr
sub
dec
jecxz
cmp
lret
test
sbb
daa
mov
js
addl
cs
xchg
cmpb
arpl
push
sub
or
pop
sbb
mov
xor
mov
jne
nop
inc
sub
sbb
mov
mov
lahf
cs
scas
ja
bound
out
repz
xchg
stc
cmp
xor
popf
cmp
aaa
push
nopl
xor
xor
inc
bound
sbb
and
sub
cwtl
xor
push
push
adc
aas
into
sarl
jge
mov
imul
cld
pop
lea
cmc
sbb
testl
test
xor
push
push
lret
adc
flds
lods
xchg
nop
inc
xor
sbb
push
xchg
sbb
lods
dec
xchg
sbb
push
push
gs
and
fs
test
aad
stos
data16
xor
jno
ds
mov
inc
add
mov
ret
pop
in
addb
push
insb
xchg
fistpl
push
sti
lret
mov
cli
in
push
sbbb
and
sbb
ret
in
subb
xchg
arpl
aas
mov
stc
test
imul
cmp
jl
push
pop
pop
xchg
andb
fs
pushf
mov
aam
xor
mov
leave
jb
inc
jmp
jns
adc
ljmp
xor
mov
jmp
jmp
sbbl
push
cs
fdiv
mov
push
fisttpl
dec
fcomps
fdivp
and
andl
lock
mov
rcr
cli
jl
in
iret
fildll
pop
cmpsl
sti
ds
test
mov
ja
and
add
inc
xchg
push
dec
fidivl
test
rcr
and
xchg
cs
lea
dec
rcll
ss
jecxz
pop
cmp
shll
xor
jb
add
sbb
xchg
jns
cs
insl
push
ljmp
stos
mov
imul
xchg
and
fs
outsb
dec
sub
sahf
adc
mov
jmp
les
ss
push
add
mov
cmp
fwait
mov
dec
in
dec
jge
jecxz
rcrb
dec
leave
lea
ljmp
or
jmp
je
dec
cmp
sahf
into
xor
mov
xor
adc
or
pop
mul
ja
and
lock
push
test
in
testl
mov
xor
fwait
js
out
test
jno
loope
xchg
sahf
jmp
les
call
mov
or
mov
mov
dec
cmpsb
jae
sti
cmp
mov
clc
and
aam
out
mov
push
dec
pop
les
xacquire
jo
jecxz
and
fwait
jae
mov
pop
jno
shll
out
cwtl
dec
adc
adc
sahf
dec
lret
sbb
push
mov
inc
fucomi
xchg
in
push
add
dec
add
int
adc
sub
fwait
out
cwtl
mov
xor
fisubrl
push
cmpsl
pop
out
imulb
pop
sbb
sbb
sbb
and
imul
mov
pop
or
sbb
lods
dec
lds
ds
sbbl
jno
jp
sub
add
fsubs
sbb
lret
push
in
or
iret
pop
bound
sub
mov
movsb
imul
jge
sbb
inc
pop
enter
fstps
test
in
jo
rclb
dec
hlt
jbe
push
test
add
cli
inc
dec
fwait
popf
push
and
mov
mov
dec
addr16
push
in
jge
mov
das
cmp
pushf
aaa
push
ss
sub
ret
mov
mov
sbb
gs
or
lcall
sbb
enter
push
cltd
dec
and
rorl
push
add
or
jp
out
add
ljmp
mov
call
sub
mov
mov
jb
repz
dec
jo
and
xchg
sub
cmp
std
jp
pop
push
dec
int
pop
push
insb
xor
fcompp
rclb
outsb
sarl
sbb
sbb
sbb
jo
sub
pusha
sbb
icebp
sbb
jno
sub
cmovae
test
add
cmpsb
mov
or
xor
loopne
pop
adc
pop
pop
lods
pop
add
dec
sbb
jp
adc
mov
jecxz
add
incl
sub
addr16
xor
call
test
sbb
xor
lea
xor
mov
into
imul
hlt
in
repz
mov
jg
ss
mov
insb
stos
arpl
push
rclb
icebp
xchg
fnstsw
mov
sahf
scas
mov
adc
mov
insl
fadds
scas
dec
adc
sar
sbb
cld
mov
in
mul
and
fiadds
inc
jge
jmp
out
cld
xchg
xlat
aaa
cwtl
dec
in
add
and
aaa
jmp
std
jo
jne
scas
addr16
mov
into
dec
sbb
mov
es
imulb
pop
push
pop
cmpb
jns
mov
mov
dec
out
nop
sbbl
xchg
mov
and
clc
dec
sub
cmp
sub
mov
cmp
in
mov
lods
xor
inc
mov
in
mov
sbb
daa
adc
cmp
push
adc
add
mov
inc
prefetch
in
rclb
stos
sub
mov
out
add
or
ds
in
xchg
sbb
jmp
jg
jae
add
inc
push
xor
es
and
mov
fistps
add
imul
lods
popf
add
push
pop
pop
push
adc
mov
and
push
call
callw
pop
inc
cmc
mov
or
and
hlt
dec
mov
xor
mov
lods
rolb
mov
dec
shll
rorb
xor
jecxz
inc
mov
movsl
popf
shrl
dec
cwtl
sahf
sbb
scas
dec
sahf
fs
shll
hlt
ret
iret
mov
xchg
push
pop
negb
insb
in
mov
push
mov
or
pop
xor
int3
fists
jae
fimull
cmp
ret
push
test
lret
adc
xchg
mov
adc
cltd
mov
iret
xor
mov
push
xor
sub
xchg
push
xor
sub
inc
les
mov
mov
mov
and
mov
cmp
sub
fstpl
sub
mov
ss
jle
cmpsb
sbb
dec
mov
mov
negl
sbb
insb
shll
xchg
xchg
rep
fbld
dec
pop
gs
movsl
out
push
aad
in
cltd
shll
pop
or
out
mov
call
inc
jns
cmp
adc
and
xlat
bswap
rorl
shll
stos
xor
cli
xor
or
inc
lods
daa
sub
pop
leave
xor
inc
cld
inc
int3
pop
les
push
jno
adc
pop
ffreep
mov
lahf
inc
sbb
mov
mov
push
loop
xchg
pop
or
or
adc
xchg
and
cld
add
sbb
dec
testb
xor
or
pop
neg
sub
out
popf
and
mov
ljmp
mov
int
cmp
mov
je
inc
lods
out
inc
adc
mov
mov
add
lds
mov
inc
popf
add
test
adc
testl
or
outsb
cmpsb
add
cwtl
test
pop
decl
cld
cmc
nop
incb
rolb
loopne
push
sbb
in
divl
fmul
ljmp
cwtl
fdivrs
stos
adc
mov
jb
ret
movsb
icebp
gs
sub
and
stos
push
add
mov
sbb
jo
mov
gs
es
outsb
out
es
loopne
pop
aaa
fstpl
lea
mov
stos
shrb
push
mov
jo
push
scas
jge
filds
jmp
sbb
in
rorl
add
jge
imul
into
jmp
push
sub
add
and
inc
mov
lret
bnd
fsubl
lcall
jb
aad
bound
idivb
xor
fnstsw
or
mov
mov
fistps
jle
sti
lcall
pop
push
cwtl
into
rclb
aad
jp
xor
xchg
test
mov
in
mov
jnp
lcall
je
push
leave
loope
in
mov
xorb
imul
loope
push
out
pop
aas
les
xchg
lock
xlat
add
xchg
lcall
fucomi
jb
jl
int
mov
mov
ss
xchg
outsl
mov
inc
scas
cbtw
mov
xchg
and
fistpl
out
std
stc
pusha
mov
daa
dec
jb
rol
aaa
push
popa
cmc
inc
adc
cmp
mov
or
lock
in
push
inc
and
inc
roll
clc
mov
dec
inc
push
mov
movsl
xor
int3
popf
add
std
push
mov
cmp
in
scas
cmp
int
pop
pop
cmpsb
out
clc
push
repnz
sti
mov
out
or
lret
push
sar
mov
push
mov
mov
xchg
in
arpl
xor
in
in
and
mov
jbe
fnstcw
in
out
sub
mov
lret
push
pop
mov
nop
std
xor
outsb
mov
pusha
cmp
aam
fdivrp
insb
dec
ja
std
sub
push
test
pop
test
jno
lahf
mull
adc
je
bound
shrl
push
imul
adc
cld
xor
mov
dec
add
pop
testl
mov
cmp
movsl
sub
adc
mov
mov
lahf
add
jmp
int
fwait
out
cmc
mov
cmp
or
xchg
mov
cmc
enter
sbb
cmpsl
dec
mov
out
mov
add
roll
push
cmp
jmp
bnd
jg
clc
push
cmpsl
or
shll
or
icebp
clc
enter
es
in
pop
mov
push
jge
jo
movsb
ja
and
out
xchg
add
cli
test
lods
lds
cmp
jae
lcall
mov
sub
into
add
mov
pop
inc
sub
pushf
mov
pop
scas
cmpsl
or
in
jbe
cmc
pop
test
adc
pop
lret
jmp
pop
rcll
rorl
inc
push
xlat
fucomip
add
push
or
xor
lods
inc
pop
shlb
inc
sahf
cld
adc
icebp
xchg
clc
add
cmp
or
shll
call
and
push
cmp
push
movsl
dec
aam
xchg
pop
repz
xchg
lahf
leave
imul
sub
cmpsb
push
xchg
mov
xor
mov
adc
ss
ja
mov
insl
sub
lds
push
fpatan
xchg
je
fsubrl
fmulp
std
insl
fs
jg
fwait
dec
jmp
fbstp
push
jmp
cmp
or
orb
cmp
into
subb
pop
mov
xchg
fabs
loope
push
xor
out
xchg
aad
push
mov
dec
xchg
test
push
in
adc
xor
stos
push
bound
out
xlat
pushf
loopne
mov
arpl
cli
aaa
push
cmc
jo
mov
dec
rcrb
inc
movsb
filds
push
lret
in
mov
hlt
jne
adc
xor
add
jmp
inc
jl
xchg
les
test
inc
cwtl
rcl
pop
jbe
sbb
push
push
and
fsubs
mov
pop
inc
dec
sbb
jnp
imul
fisttpll
cmp
jb
stos
cmp
dec
stos
hlt
jmp
daa
xchg
and
inc
popa
cld
inc
cmp
fdivs
push
jl
mov
mov
sbb
sbb
pextrw
mov
mov
sbb
ja
inc
adc
and
mov
sti
sahf
into
arpl
xchg
adc
add
outsb
movsl
xchg
rcrb
movl
xchg
repz
xchg
insb
pop
adc
mov
ret
add
bound
aas
inc
int3
dec
andb
mov
push
leave
pusha
imul
rcll
lods
xor
pop
sbb
and
jl
out
insw
and
test
or
je
into
mov
call
in
mov
xor
adc
in
inc
repz
jecxz
jp
mov
cwtl
push
jle
inc
insb
sbb
lret
sahf
jo
lods
mov
call
cwtl
jmp
mov
scas
sub
mov
inc
sbb
or
xchg
leave
es
test
mov
mov
lock
in
xchg
xchg
sbb
int3
adc
aaa
shlb
das
lret
jns
mov
mov
sbb
stc
out
jmp
test
and
popa
sub
xor
jl
fisttpl
cltd
pop
mov
push
xchg
inc
aad
pop
xchg
pop
roll
mov
mov
and
stos
jecxz
sarl
daa
sbb
cmp
enter
xlat
xor
lret
lahf
sub
pop
cmp
andb
lods
dec
out
jmp
cmc
push
sub
clc
sbb
inc
pusha
outsl
sbb
movsl
clc
mov
pop
cld
mov
or
lods
jge
test
jne
cmpsb
outsb
adc
int3
jg
adc
je
sub
jp
daa
das
or
add
test
xchg
fs
xchg
adc
lds
xchg
enter
mov
lcall
rcll
lahf
stos
mov
shlb
adc
cmp
je
jge
leave
mov
ja
lea
mov
std
imul
test
pop
mov
and
xor
lcall
loope
dec
daa
std
pusha
adc
sub
cmp
in
mov
sub
aam
jge
mov
sub
cmpl
subb
fmuls
bound
stos
sbb
fisubrl
adc
clc
icebp
pop
dec
movsl
loop
mov
cmp
xor
fimull
hlt
push
sbb
xchg
mov
or
cmp
test
mov
cld
or
stos
aad
fistpll
or
lea
in
lahf
push
jp
adc
push
jecxz
movsb
ss
mov
loope
mov
sbbl
clc
mov
dec
shl
std
into
pusha
or
jp
andl
pop
jns
adc
sbb
popa
jmp
pop
popa
test
xchg
dec
enter
test
aad
repz
xchg
inc
inc
lret
jg
inc
push
fadds
fiaddl
out
bound
lret
cmc
push
mov
mov
mov
mov
xchg
inc
sahf
sbb
mov
rclb
lock
mov
dec
xchg
or
imul
xchg
inc
stc
adc
aad
and
fs
inc
cmpsb
int
mov
jnp
xchg
mov
adc
pop
and
mov
push
xor
push
sahf
pop
push
imul
jle
scas
movsb
insl
sbb
pop
repz
dec
adc
sub
cld
adc
jnp
add
adc
xlat
dec
icebp
mov
leave
arpl
movsb
js
ss
cmp
adc
das
mov
jecxz
stos
es
cltd
mov
mov
jge
adc
das
cmp
xchg
sbb
cmpsb
test
and
or
test
cmp
outsb
dec
add
pop
out
mov
popf
lods
mov
ret
cmc
jns
pop
mov
inc
cltd
cs
xor
repz
negb
ret
jmp
fwait
test
push
ss
adc
stos
mov
out
cli
push
lret
jo
push
les
pop
cmpsb
xchg
popf
mov
adc
xor
or
pop
xor
movsb
dec
adc
loop
rcr
xor
push
lahf
add
mov
testb
xchg
pop
xor
es
movsb
rcrl
xchg
loopne
decb
mov
xor
ja
xchg
shll
punpcklbw
je
jecxz
inc
and
cld
mov
sbb
enter
jle
jecxz
rclb
popa
fnstsw
jmp
jo
inc
push
xchg
sbb
js
int
jnp
xchg
repnz
sarl
inc
test
sbb
dec
mov
push
fwait
dec
push
lods
data16
mov
lcall
scas
cwtl
icebp
xchg
inc
dec
fisttpll
mov
and
pop
fs
inc
push
das
xchg
iret
cmp
adc
jp
enter
adc
sbb
mov
cmp
xchg
clc
push
jb
movsb
xor
inc
std
adc
pop
dec
fwait
dec
cmpsb
fs
sbb
jmp
or
ds
sbb
mov
in
pop
dec
imul
sahf
std
sub
xchg
popa
lcall
insb
mov
movsb
sti
pop
push
outsb
movsb
push
lcall
fistpll
mov
dec
out
xchg
jnp
movsl
aas
daa
insb
fcom
push
jge
inc
mov
sub
stc
loop
rcrl
call
in
and
mov
es
call
repnz
inc
jecxz
xor
in
scas
mov
sbb
stc
bound
cmp
mov
loop
xlat
push
jne
js
out
out
xor
fcomi
hlt
pop
loope
loop
rorl
andb
sub
gs
in
leave
call
sub
inc
mov
cli
mov
jnp
je
pop
fisubrs
sub
iret
cmpl
sti
fistpll
xchg
add
call
xchg
sub
addr16
loope
jbe
lea
or
add
push
sub
int
sub
cmp
lahf
lods
pop
push
cmpsb
popa
jns
jl
push
cmp
jae
cltd
push
sbb
inc
rorl
popa
sbb
hlt
repz
stc
inc
ljmp
in
push
cmp
jge
arpl
mov
xor
ror
rcl
repz
outsl
xor
xchg
sub
and
movsl
bound
cli
arpl
inc
or
mov
shr
mov
push
mov
pop
inc
push
mov
add
fucomip
repnz
mov
mov
clc
push
inc
inc
mov
lahf
add
ljmp
sbb
dec
arpl
test
dec
shr
testb
sbb
outsb
cmp
fs
push
pop
and
mov
add
movsl
loop
inc
faddl
inc
sbb
hlt
movsl
out
dec
imul
and
gs
dec
dec
gs
mov
add
sbb
rorl
push
movsl
sbb
mov
lock
sub
ret
cs
arpl
lahf
stos
iret
subb
stos
aad
bnd
push
xchg
in
push
dec
cmp
clc
in
into
mov
icebp
xchg
scas
xlat
rclb
scas
mov
scas
repz
cmp
mov
push
test
lods
sbb
jbe
xchg
sbb
test
dec
in
adc
sub
in
fistps
mov
adc
sahf
int3
inc
jnp
mov
and
in
mov
mov
mov
mov
loope
lods
iret
test
rorb
jb
pop
scas
ret
cmp
mov
rol
add
sub
pop
push
outsb
xor
ds
ret
loope
pop
push
push
xor
popa
inc
popa
push
pusha
adc
xor
push
dec
aas
test
flds
out
orb
popf
aas
outsl
mov
push
mov
popf
xor
jns
int3
xlat
lret
lea
xchg
inc
je
lret
inc
xchg
out
fwait
dec
cmc
scas
add
fdivl
loope
xchg
int3
in
xor
sarl
js
adc
sbb
scas
out
cmp
shr
std
in
push
icebp
dec
lret
lods
jnp
xchg
ds
mov
xchg
loopne
dec
pop
jns
aam
sbb
clc
inc
jb
nop
jecxz
repz
shlb
xchg
push
jl
mov
inc
pop
add
andl
jae
pop
std
xchg
movsb
insl
adc
push
add
js
jecxz
mov
lods
xor
clc
icebp
leave
ficoml
adc
fs
leave
in
adc
jnp
inc
nop
and
xchg
dec
add
fwait
sbb
jp
dec
xchg
adc
push
xchg
sub
out
mov
jg
repnz
and
fnop
pop
call
mov
imul
test
fidivs
cmp
mov
mov
arpl
xchg
inc
iret
repz
ds
lods
or
jl
and
dec
pop
xchg
lret
inc
mov
and
in
and
mov
cmp
jbe
mov
push
adc
xor
dec
pop
add
imul
fs
imul
mov
mov
mov
shll
push
inc
sbb
cs
mov
jge,pn
pop
fwait
lcall
xor
insl
in
dec
adc
xchg
shl
test
int3
stc
insl
dec
jbe
sbb
pop
push
jecxz
mov
jge
fistpll
add
rcl
out
adc
sbb
xchg
shlb
mov
or
insl
xchg
pushf
xchg
dec
xchg
lcall
dec
in
test
je
jle
jge
sub
insl
cwtl
xor
lds
mov
int
inc
jbe
subl
pop
fprem1
arpl
dec
js
ret
sahf
and
mov
mov
ds
sbb
cmp
cld
arpl
pop
xchg
and
sti
js
push
js
cs
enter
lret
pop
mov
subl
sti
cwtl
pop
xorl
out
or
jp
stos
movsb
push
repz
cmp
cltd
popl
int3
in
xorb
lds
mov
rcrl
or
xor
cmp
or
sbb
divb
lahf
dec
mov
mov
xchg
lods
mov
sbb
lods
pop
xor
mov
sub
arpl
icebp
pop
push
and
adc
sbb
fcmovne
add
pop
inc
cld
hlt
test
adc
enter
mov
cmp
popf
int3
rorb
jno
or
jno
insb
cmp
lods
fs
ret
mov
in
loope
jb
out
push
mov
rcrb
mov
paddsb
jne
inc
dec
xlat
jle
or
pop
lret
mov
mov
std
jmp
and
pop
lcall
stos
lea
sub
pop
pop
jecxz
ficomps
mov
sub
push
imul
call
jl
jb
sub
pop
fdivl
mov
sahf
ss
sub
dec
mov
push
dec
cmpsl
jne
loope
sbbl
int3
lods
push
outsl
sahf
mov
xlat
sbb
std
jb
dec
mov
mov
loopne
push
dec
push
jecxz
dec
aas
inc
cmp
pop
std
notl
inc
or
addl
jle
xor
pop
lahf
jb
sub
fcmovne
sub
aam
cmp
lahf
movsb
jbe
ret
fnsetpm(287
arpl
or
daa
adc
sbb
rcll
mov
push
pop
xchg
xchg
mov
and
shrl
sti
adc
lret
xchg
sbb
and
mov
sti
cmp
arpl
mov
mov
mov
push
fisttps
dec
xchg
lret
adc
icebp
cmp
hlt
out
rol
dec
jl
inc
js
jo
jne
scas
mov
insb
mov
lea
rcrb
adc
xor
cwtl
or
xor
daa
inc
sub
int
cmp
scas
mov
jno
stos
pop
or
add
mov
mov
daa
cmp
dec
sbb
daa
inc
cltd
movsb
pusha
enter
outsb
jecxz
das
sub
pop
pop
subb
push
cmp
mov
adc
adc
mov
out
rclb
sbb
jecxz
mov
rcll
sbb
out
call
leave
xchg
inc
mov
andb
out
push
insb
mov
mov
add
fs
insb
jnp
pop
sar
jp
in
imul
in
pop
fwait
xlat
iret
xchg
hlt
call
incb
clc
testb
mov
out
jecxz
out
xor
repnz
insb
rorl
mov
mul
and
mov
jb
push
xchg
leave
mov
sub
mov
push
leave
pop
int3
gs
jecxz
imul
lcall
jns
mov
loope
dec
and
jecxz
mov
mov
push
adc
mov
mov
out
push
inc
lds
and
xor
in
sbb
mov
movsb
mov
arpl
and
out
xchg
cmp
out
pop
stos
gs
mov
sub
aam
mov
leave
test
fiaddl
icebp
bound
aad
xor
pop
inc
mov
sub
lahf
mov
mov
test
arpl
fldcw
popa
xchg
leave
inc
push
fstpl
xor
xor
jo
pop
insl
cli
imul
push
out
inc
adc
fldcw
push
pop
stc
mov
ss
jl
and
sub
or
repz
lods
cli
sub
push
sbb
xor
inc
filds
std
pop
jno
mov
pop
xchg
rorl
xor
jle
mov
cmp
and
mov
mov
sbbb
shrb
testb
push
lcall
adc
loopne
scas
jnp
test
adc
add
outsb
sti
xor
push
jmp
adc
mov
dec
or
pop
mov
inc
subl
jg
xchg
cmp
stos
pushf
rcrl
in
mov
jbe
add
int3
dec
inc
enter
cmpsb
push
adc
add
or
xchg
sub
lret
jne
stc
mov
jg
pop
aad
mov
imul
enter
push
shlb
inc
mov
sub
add
js
pop
cmpsl
mov
add
cmp
pop
std
push
int
cli
pop
in
xor
movsb
mov
mov
and
out
dec
popf
mov
iret
inc
push
push
add
sbb
pop
mov
cwtl
add
inc
inc
xlat
sub
add
add
mov
adc
cmp
mov
notb
pop
sub
xchg
jecxz
inc
pop
test
push
fbld
lock
jno
dec
mov
xchg
stos
inc
sbb
sbb
test
nop
jo
enter
xchg
jo
insl
push
mov
and
into
sub
or
rol
pop
aas
mov
pop
or
or
mov
stos
xchg
add
push
ja
pop
les
push
data16
rorb
loopne
pop
lods
sahf
cmp
dec
and
and
cmp
aas
pop
aaa
cs
sbb
in
adc
imul
mov
jecxz
dec
cmp
cmpsb
adc
jp
in
cmp
mov
mov
lock
jno
sbb
cwtl
inc
bswap
das
shll
ret
add
call
mov
outsl
aas
aas
sbb
out
dec
adc
mov
mov
frstor
mov
sbb
xor
adc
pop
jle
test
adc
cmp
lcall
push
or
pop
mov
lock
sbb
xlat
pop
push
repz
out
sbb
cli
mov
push
insb
ja
sbb
das
lret
add
jo
inc
mov
clc
cmc
sub
sbb
jo
mov
mov
sbb
inc
movl
in
mov
push
sbb
mov
enter
and
aas
test
add
out
popa
push
mov
add
push
insl
sbb
sub
mov
mov
mov
rcr
jb
lods
mov
fwait
mov
std
sbbl
subl
pop
push
cmpb
test
gs
pop
mov
ja
jl
jp
in
fiadds
out
inc
mov
sub
jle
cmp
aad
lahf
push
call
sbb
or
scas
sbb
mov
subb
imul
jmp
jno
cmp
mov
aas
gs
rclb
dec
inc
mov
movsl
and
orb
gs
pop
cmp
mov
pop
sub
dec
mov
mov
mov
hlt
or
push
mov
imul
jno
mov
xor
fiadds
lahf
aas
adc
push
cmp
cmp
pop
das
mov
inc
sbb
es
pop
dec
pop
mov
repnz
dec
shrb
icebp
inc
adc
and
fwait
lcall
pusha
loope,pt
cmpsb
pop
aam
rcrb
jmp
pop
add
orl
cmp
mov
mov
cltd
mov
fistl
lahf
add
sti
test
out
pushf
jge
mov
mov
clts
dec
ss
scas
lods
lock
aas
pop
outsb
inc
fcmovnu
sbb
fistps
sbb
imul
mov
mov
xorb
arpl
push
xchg
push
add
mov
scas
rolb
mov
or
pop
sub
jb
daa
xor
mov
je
ljmp
adc
hlt
xchg
aam
outsb
xchg
lods
test
push
fldcw
inc
adc
ret
pop
aas
fwait
push
and
or
dec
sub
inc
xor
push
mov
out
leave
rclb
xor
xor
pop
jle
push
mov
xchg
pop
lret
jae
add
mov
inc
inc
ror
sbb
scas
xlat
xchg
cmc
pop
adc
fiaddl
sub
stc
push
lea
mov
mov
cmp
push
xchg
ret
dec
inc
cmp
fimuls
je
mov
jne
cmpsl
push
push
pop
negb
push
pop
push
xchg
or
call
inc
sbb
out
lock
imul
xchg
rclb
fldl
or
or
fstpl
add
scas
push
mov
icebp
sbb
adc
inc
mov
sti
xchg
push
mov
pop
test
xor
fwait
jl
fwait
sbb
and
mov
jle
pusha
mov
pop
pop
movsl
xor
adc
jnp
pusha
fadd
mov
fstpt
xchg
lret
mov
insl
dec
push
pop
mov
push
xchg
les
or
ret
pop
jmp
jge
mov
add
les
int
addr16
cmpsl
rcll
pop
mov
int3
fstp
sbb
mov
sub
fxch
jno
int3
pop
imul
pop
stc
pusha
adcb
inc
fldcw
aam
loope
sti
pop
sbb
xchg
xchg
out
loop
loopne
fcmovb
sub
aad
ret
push
in
sub
in
add
notl
or
jno
jp
pop
or
xchg
out
in
fidivl
pushf
sbbb
sub
imul
xor
pushf
jbe
pop
fistpl
and
xor
mov
inc
xor
cmc
scas
and
mov
sub
mov
sub
testl
and
hlt
imul
rcll
fisubrs
adc
mov
popf
insl
les
and
jl
xor
mov
push
fsubs
xchg
mov
mov
add
orb
add
loop
push
cmp
add
mov
jge
push
inc
mov
add
jb
outsb
mov
ja
xchg
pop
pop
mov
mov
adc
pop
gs
sub
adc
test
push
test
lods
pop
shlb
push
sbb
xor
aaa
sub
xchg
jge
adc
mov
and
mov
je
lea
ret
bound
cmc
adc
cltd
push
rol
rorl
ja
jmp
dec
mov
mov
dec
xchg
xchg
hlt
push
mov
cmp
ja
loope
and
je
mov
fadds
test
mov
jns
mov
lahf
adc
cmpsb
mov
mov
xor
pop
loope
fs
rolb
pop
push
mov
daa
shrl
nop
stos
ret
cltd
std
jno
cmp
sub
test
scas
add
xchg
clc
push
scas
ret
inc
pop
push
push
rcr
pusha
add
push
je
outsb
stc
insl
pop
rcrl
add
subb
adc
insl
pop
pop
jb
push
and
mov
fisubrs
cs
daa
fldt
jo
push
popa
jno
mov
mov
xor
push
sbb
and
fcoms
mov
push
or
sub
test
pop
lret
mov
mov
push
lahf
mov
push
popf
insl
outsl
jae
add
iret
jmp
cmp
mov
mov
push
push
repnz
sub
ljmp
stos
jb
mov
pop
xchg
push
xchg
cmp
in
into
xchg
mov
sahf
dec
fildl
inc
push
mov
rcrb
jo
iret
ds
outsl
dec
imul
mov
sbb
sub
clc
add
mov
cltd
mov
shr
adc
add
mov
in
mov
or
sbb
push
int
push
out
ja
movsl
and
incl
mov
cmpsl
xlat
or
pop
xchg
push
sbb
push
sahf
and
inc
imul
jnp
push
decb
out
or
jge
cs
pop
test
call
shll
fnstenv
or
dec
cs
xchg
sbb
ljmp
cmpsl
clc
adc
mov
in
clc
pop
lock
icebp
push
xorl
and
jecxz
aas
rclb
aam
enter
aam
in
ror
inc
movsb
inc
cld
push
inc
xlat
in
test
std
insb
push
leave
sbb
fwait
jmp
or
jb
inc
jge
mov
adc
xchg
hlt
sub
mov
add
mov
cli
mov
idiv
test
cltd
loop
inc
pop
ljmp
call
aas
pushf
mov
xchg
call
pop
mov
adc
push
pop
xor
mov
mov
pop
and
out
mov
cmc
or
xchg
shll
dec
sbb
cs
mov
int
repnz
leave
imul
imul
cmp
pop
and
add
in
jns
xchg
jl
in
dec
mov
dec
fisttps
fsubrl
pop
sub
inc
mov
jp
mov
lock
mov
cs
scas
push
hlt
add
or
hlt
cmpsl
mov
mov
jge
cs
pop
frstor
cmp
xchg
sub
mov
fimull
ret
hlt
stos
mov
pop
inc
xchg
push
mov
movsb
lahf
add
sahf
pop
imul
sub
lea
inc
and
sbb
daa
in
mov
mov
popa
and
pop
fnstenv
loop
into
rcrb
sub
mov
jns
repnz
xor
fbstp
test
cwtl
add
fists
subb
or
xchg
xchg
add
out
cmp
inc
insl
stos
mov
lahf
dec
xlat
or
rcll
jmp
out
jecxz,pn
out
mov
mov
repnz
cmpl
mov
mov
jl
test
push
push
jl
and
loop
or
jge
stc
movb
jg
shrb
lahf
cwtl
pop
ljmp
xchg
sub
xor
pushf
cld
mov
cmp
jp
movsl
and
rclb
es
and
mov
xchg
push
xchg
adc
push
mov
jb
lret
std
aaa
pop
xchg
adc
push
ss
cmp
aaa
mov
icebp
mov
insb
xchg
sbb
ret
test
xchg
add
dec
fdiv
repnz
add
lds
ds
xor
push
test
adc
mov
inc
jecxz
js
push
fidivrl
loop
in
jecxz
out
negl
mov
sbb
dec
outsb
xchg
sub
mov
into
jb
ds
es
fistps
add
cltd
xor
pop
cmp
pop
xchg
sub
out
xchg
adc
push
push
idivl
pop
inc
imul
stos
add
fsubrl
lock
data16
incl
cmp
js
jp
jns
jbe
mov
jecxz
into
shlb
pop
adc
insb
pop
fmull
shr
jb
cmp
xchg
fsts
xchg
repnz
fsub
aaa
cwtl
movsb
call
add
stc
movsb
adc
mov
dec
jmp
push
rolb
lret
cwtl
outsl
test
icebp
fstps
xor
inc
std
inc
push
loope
mov
movsl
test
out
mov
jne
outsl
pop
pop
shr
std
pop
mov
pop
popf
lock
int
sub
push
xor
pop
lea
push
mov
or
jp
sahf
clc
fdivs
adc
imul
mov
mov
push
dec
dec
cmpsb
pop
mov
test
faddl
popa
xchg
xor
shll
orl
push
fiaddl
idivl
int3
scas
sahf
push
mov
adc
mov
cli
sahf
jnp
call
and
popf
sub
mull
iret
mov
ds
jecxz
pushf
mov
inc
sub
and
cwtl
and
movb
in
div
aad
fisttpll
mov
daa
sub
mov
sbb
ret
mov
push
cwtl
sub
ja
les
pop
mov
jle
test
fistps
sub
dec
js
or
ret
data16
int
mov
lods
push
push
adc
fcom
pusha
dec
stc
and
clc
test
fwait
mov
push
jge
adc
dec
and
cli
jecxz
xchg
cmpsl
sbb
movsb
int3
jb
adc
stc
shrb
pop
imul
mov
and
add
xchg
adc
mov
negl
cmp
pop
pusha
lods
fcoms
sbb
mov
repnz
pop
xor
mov
mov
dec
out
cmp
or
mov
pop
jae
xor
pop
in
dec
in
mov
imul
mov
pop
dec
aad
outsl
xor
fisttpl
cld
insb
popa
shll
repz
mov
xor
and
into
dec
add
mov
stos
sbb
lea
adc
mov
pushf
stos
jno
xchg
and
push
adc
lea
mov
hlt
adc
mov
outsl
fldl
pusha
xchg
enter
rcll
inc
jg
dec
jo
sbb
lret
jae
pop
pop
dec
rolb
std
adc
cmp
add
adc
dec
mov
fdivs
sarl
sahf
xchg
call
je
xchg
xlat
sbb
xlat
shlb
movsl
jbe
stos
aaa
xor
mov
ret
sbb
mov
outsb
lret
add
mov
lret
mulb
leave
loopne
add
sbb
je
jne
sti
ljmp
push
js
mov
int
ret
jns
lretw
and
cmp
cmpsl
jns
cmc
decb
and
push
xchg
cld
es
repz
sbb
icebp
roll
cld
daa
ss
insl
push
mov
push
out
sub
mov
test
inc
or
mov
adc
jg
scas
push
mov
adc
sub
in
sub
xchg
cmp
xchg
pop
lret
outsb
xor
dec
jl
jle
jg
mov
xor
add
add
and
mov
std
pop
fistl
jmp
inc
jns
pusha
pop
ftst
push
lret
mov
sbb
pop
loope
stos
scas
dec
les
push
mov
add
dec
ljmp
movsl
mov
push
ss
sub
test
punpckldq
push
and
or
mov
insl
ficoml
es
fwait
fbld
stos
in
ret
iret
mov
repnz
aas
sahf
push
fdivr
fsubrp
cmp
or
pop
and
mov
jmp
xor
push
std
push
div
mov
push
pushl
xchg
mov
rorb
int
xchg
and
dec
sub
xchg
ds
jb
out
aaa
adc
mov
popf
test
shlb
push
sbb
and
inc
icebp
xchg
push
dec
jmp
enter
popf
scas
xchg
pop
add
dec
les
xchg
loop,pn
pop
push
inc
mov
leave
outsb
and
dec
push
adc
and
cmp
or
jg
dec
gs
test
je
push
dec
cmp
fists
mov
enter
jb
js
xor
jne
dec
in
int3
ja
inc
mov
out
repz
sub
pusha
adc
dec
and
sub
hlt
nop
dec
je
pusha
inc
out
int
pop
daa
pop
rclb
loope
sbb
stos
or
or
jae
mov
les
inc
jae
jno,pn
xor
shrb
jb
jecxz
popf
cli
fwait
push
fcmovu
hlt
cmpsb
sub
or
test
mov
mov
mov
jae
xor
out
cmp
fimuls
push
mov
push
repnz
xchg
sub
fistps
sahf
jbe
sbb
sbb
mov
xor
pop
xor
daa
or
push
push
pop
sbb
daa
lahf
push
pop
inc
cltd
out
and
test
and
xor
andb
mov
clc
daa
hlt
out
adcl
add
mov
mov
xchg
sti
and
mov
outsb
jecxz
or
fnstsw
sub
jb
int3
gs
inc
popa
xor
ss
and
pop
fsts
pushf
mov
jecxz
shll
push
jno
sub
shr
lods
data16
stos
enter
xor
jmp
adc
mov
pop
out
add
pop
test
call
popf
lods
test
pop
xchg
jmp
jecxz
int
jae
outsl
insb
arpl
dec
aas
xchg
push
js
imul
imul
sbb
lods
cwtl
xor
cs
fmuls
idiv
stc
xchg
mov
jb
rorl
push
push
mov
fistpl
test
rolb
in
outsb
aas
jns
sbb
popf
push
dec
mov
mov
sub
out
in
dec
testb
in
push
adc
xor
push
pop
std
shrb
inc
jns
xor
push
mov
loopne
mov
or
push
adc
sbb
pop
sub
jl
fnsave
pop
sub
dec
xchg
popa
stos
dec
xor
aas
cmp
xor
inc
outsl
adc
push
lret
lahf
fnstenv
das
stos
or
std
dec
mov
hlt
pop
in
mov
out
adc
adc
into
nop
bound
mov
mov
or
pusha
in
add
ss
pop
std
xor
nop
pop
and
dec
js
xchg
sub
xchg
fnstcw
scas
add
add
rorb
imul
inc
sahf
cltd
inc
pushf
add
and
or
es
daa
mov
xlat
loope
in
ret
loopne
repz
sbb
xor
cmp
ss
add
pop
mov
roll
imul
arpl
pop
sub
sbb
std
gs
mov
ljmp
sbb
sbb
arpl
mov
test
push
je
mov
es
scas
daa
lcall
mov
int
bound
jno
sar
and
mov
sahf
andb
mov
subb
sbb
bound
test
adc
cltd
pop
pop
cli
and
xor
movsl
fsubp
push
frstor
std
xlat
xchg
out
jb
xlat
and
jmp
dec
jns
ds
addl
xor
sub
lahf
ja
and
outsl
stc
adc
inc
sarl
fucom
stc
push
push
dec
lods
mov
jecxz
cmp
xchg
addb
hlt
push
bound
push
jl
lock
test
mov
pop
popf
aad
mov
xchg
aas
and
jbe
pop
out
mov
mov
jno
or
iret
in
jno
icebp
mov
int
shll
push
xor
dec
test
test
js
out
and
ret
jnp
cltd
ljmp
jbe
push
mov
cmpl
adc
jnp
inc
jae
enter
jl
sbb
not
or
insb
test
enter
shlb
inc
ljmp
rorl
outsb
inc
mov
add
out
mov
push
or
jp
dec
insl
dec
in
mov
add
inc
sub
mov
aam
pop
inc
mov
mov
mov
movsl
std
les
cmp
cmp
jg
mov
cmp
test
mov
xor
cmp
lea
cld
xchg
imul
mov
xchg
fsubrp
cwtl
cmp
nop
mov
in
test
sub
jno
inc
jle
outsb
mov
ja
inc
sbb
out
in
pop
sbb
jbe
and
leave
repnz
negb
mov
in
in
sub
outsb
or
or
and
mov
mov
aaa
mov
xchg
xchg
jle
push
sub
int
mov
mov
imul
scas
add
js
popa
das
addr16
daa
testl
sub
mov
test
sbb
and
jne
rol
pop
rcrb
call
pop
dec
pop
adc
xchg
jbe
into
dec
jnp
mov
bound
rorb
in
inc
sub
lock
fildll
cwtl
popl
mov
xor
lds
rol
push
cld
sbb
push
push
mov
mov
rcrl
std
cli
mov
into
and
sub
and
notl
mov
mov
mov
jns
and
xor
int3
jl
cmp
in
and
xor
repnz
sbb
xor
jne
mov
addr16
stos
cli
pop
or
pop
push
lret
cmp
insl
repnz
inc
pop
pop
lods
jae
shrl
jo
jb
aaa
and
rclb
inc
icebp
sbb
lcall
imul
roll
xchg
data16
fadds
xor
fildll
dec
sbb
iret
adc
mov
cmp
sarb
jno
mov
jo
cmp
dec
mov
scas
mov
pop
jge
popa
push
adc
lret
jmp
pop
mov
mov
mov
inc
jge
outsb
int
mov
addr16
inc
adc
mov
dec
js
cmp
movsl
cmp
imul
mov
mov
mov
and
stos
adc
sbb
mov
or
push
mov
jge
sub
cmp
out
jbe
sahf
test
mov
lea
fsubl
scas
out
sbb
push
filds
sarl
pop
test
jmp
mov
xchg
or
sbb
fisubs
jg
pusha
push
es
xchg
jne
pop
or
cmpsw
jns
imull
xlat
mov
pop
dec
test
repz
mov
mov
scas
sub
sahf
incl
inc
scas
sbb
xchg
dec
insb
bound
push
shld
push
data16
addr16
int
jnp
pop
mov
adc
pop
fcmovnu
jb
add
cmp
xor
movsl
ret
jmp
inc
insb
ficoms
dec
inc
ja
pop
inc
jo
xlat
push
xor
cmpsb
arpl
push
loopne
cwtl
cmpsb
xorb
inc
add
lods
pop
and
cs
cmpsl
int3
orb
pop
femms
jecxz
es
ljmp
fs
jae
inc
pop
push
enter
jecxz
std
xlat
jg
fwait
adc
mov
mov
ficomps
dec
out
out
test
or
cli
jecxz
cmc
dec
cmp
out
inc
in
sub
inc
cmc
lods
lock
pop
sbb
mov
call
pop
add
and
pop
inc
out
cmp
sub
imul
fmull
and
sub
inc
imul
dec
cmp
jmp
push
cmpsb
test
leave
sub
js
stc
jno
push
cli
lea
xor
movsl
imul
fistpl
push
inc
and
cmpsl
mov
sub
ds
sbb
push
sahf
push
js
mov
adc
add
lock
in
mov
cmc
ret
stos
lret
nop
jb
jne
xor
xorl
in
add
insl
stos
pop
icebp
and
loop
loope
sbb
push
imul
pop
sbb
clc
cmp
cmp
stos
rorl
push
xor
movsb
mov
adc
push
push
lret
add
scas
jecxz
and
sbb
jge
cmp
mov
xchg
inc
mov
bnd
sub
ljmp
lcallw
dec
or
sti
insl
or
xchg
sub
xchg
lcall
jle
mov
out
mov
adc
lds
rorl
and
mov
pop
mov
stos
inc
lahf
fwait
sbb
pop
leave
cld
pop
dec
je
outsl
xchg
filds
loopne
adcl
cmp
int
push
mov
fs
push
xchg
mov
shl
fwait
adc
push
scas
cmpl
xchg
dec
rcll
and
sahf
insl
mov
outsl
out
lods
mov
mov
cmp
je
mov
shll
jne
fnstsw
xor
sti
outsl
push
push
mov
test
fisttpl
loope
js
pop
sti
cmpsl
or
mov
je
fwait
aas
lea
clc
xchg
movsl
xlat
lds
pop
cmpsl
mov
xor
cmp
jecxz
xchg
fwait
xor
sti
loopne
pop
mov
or
pop
push
mov
dec
sbb
mov
sbb
in
mov
xor
mov
fwait
mov
jbe
and
mov
outsl
cmp
sahf
lods
loop
movsb
xor
mov
pop
pop
inc
int
aaa
jecxz
push
adc
push
push
xchg
into
jl
mov
mov
or
fisubl
cmp
jns
bound
inc
stos
pop
add
fdivrs
cli
faddp
xor
cld
jno
add
dec
xchg
aad
in
xor
dec
push
jb
lea
push
ret
lods
jbe
push
jb
xor
xchg
jge
imul
xchg
or
cs
push
repz
adc
and
inc
sub
cmp
cmp
mov
mov
sahf
mov
dec
xchg
add
into
jno
movsb
mov
and
push
xor
das
xchg
cmp
cs
jl
insl
adc
aad
popa
mov
stos
ret
sub
jae
sbb
in
mov
cli
xor
ja
jno
cltd
stos
jno
sbb
in
inc
lock
movb
sub
call
in
push
inc
push
lcall
jb
test
and
sbb
sbb
mov
or
mov
push
and
mov
fsubp
xchg
jo
sbb
dec
in
sbb
push
xchg
pop
add
sarb
mov
or
lret
xchg
test
inc
stc
mov
push
enter
mov
shll
lock
fcos
push
pop
pop
cs
push
pop
movsb
idivb
push
movsl
lret
repz
xchg
fwait
sub
test
fildll
nop
or
push
ret
mov
adcb
shll
xchg
push
add
jp
arpl
daa
mov
rorl
mov
outsl
aam
jns
les
shlb
scas
dec
rclb
jno
lock
in
mov
popa
shlb
lods
and
aas
gs
mov
mov
mov
cld
add
pop
push
rolb
lahf
outsl
pop
and
mov
xor
repz
dec
mov
mov
int
ror
call
push
sub
data16
pop
jnp
mov
mov
mov
movsb
xchg
cmpsb
stc
push
add
pop
les
scas
pushf
test
das
bnd
imul
int3
cltd
push
hlt
stc
mov
cmp
data16
cmpsl
mov
arpl
xchg
ret
js
ja
test
jae
cld
mov
arpl
out
or
out
push
jmp
jmp
stc
scas
fisttpl
stos
and
cmp
lea
push
test
add
jge
sbb
add
mov
cmp
imulb
andps
outsb
jno
or
jl
fists
jmp
sub
mov
mov
aad
mov
scas
push
xchg
outsl
pop
fimull
sbb
sub
xchg
leave
xor
sbb
stos
aad
pop
push
mov
clc
pop
ds
pop
jb
aaa
ja
cmpb
ss
mov
fidivs
in
ret
stos
adc
mov
loope
mov
dec
aas
cmpsb
mov
adc
rol
imul
xor
adc
lds
xchg
or
add
or
cmp
repnz
lahf
imulb
push
cltd
xlat
in
mov
in
fdivrp
int3
adc
sbb
dec
push
pop
pop
jge
je
xorl
pop
mov
lcall
mov
add
xchg
cltd
jo
mov
orb
and
xor
xchg
movsb
xor
jae
add
gs
sbb
mov
pop
ljmp
sbb
rorl
into
mov
pop
movntq
adc
xor
mov
push
dec
adc
fiadds
dec
xchg
cmp
push
or
cltd
xor
xchg
ret
movsl
data16
repz
dec
pop
mov
out
scas
int
sti
std
push
xchg
loope
es
jne
pop
add
shr
das
push
es
sti
and
cmp
add
es
enter
call
push
repz
xchg
repz
pusha
xchg
push
loop
cltd
add
int3
sbb
inc
test
icebp
mov
xor
addr16
adc
pop
insb
js
dec
hlt
movsb
lahf
lock
xchg
push
sub
xchg
gs
cmp
sub
inc
pop
sub
imul
xorl
fwait
xor
orb
stc
cmp
fwait
or
rcrb
jne
pop
lds
std
in
push
push
push
or
ds
dec
sbb
xor
int
out
xlat
xlat
add
mov
push
or
cmpsb
mov
mov
xchg
adc
xchg
cmp
mov
mov
pop
lahf
inc
xor
jne
cmp
or
mov
idiv
mov
clc
enter
mov
addr16
dec
pop
and
lods
sbb
push
cmp
repnz
loope
lods
test
arpl
and
jns
mov
cwtl
xchg
add
sbb
mov
fdivrp
test
outsb
add
fs
and
lods
and
push
lods
jae
xor
fsts
mov
add
inc
lret
pop
jg
das
int
movsl
xor
jle
jmp
jle
sahf
fnsave
dec
pushf
fs
jg
mov
pusha
incb
popa
in
aam
mov
sbb
in
imul
jl
fs
dec
test
jbe
sub
fcomip
movsl
jo
call
sub
test
xchg
fldl
and
clc
in
movsb
repz
imul
in
repnz
sbb
cmp
popa
js
cmp
adc
insb
lret
fstpt
mov
jp
pop
xor
jo
ss
stos
xchg
mov
in
sbb
pop
insb
loope
pop
xchg
sahf
es
dec
out
mov
mov
aad
cmc
aam
jbe
mov
inc
nop
jmp
mov
mov
dec
cld
xchg
cltd
scas
stos
dec
mov
pop
push
sti
mov
or
jmp
nop
sahf
inc
in
jge
push
mov
add
sarl
movsl
imul
shrb
dec
loope
jle
pop
rorl
push
xchg
xchg
add
rcl
loop
push
sbb
test
notl
sarl
jle
lods
scas
daa
pop
icebp
jbe
inc
adc
mov
inc
sbb
pop
ds
xchg
es
mov
dec
mov
mov
shr
sub
push
stos
dec
or
enter
jae
arpl
sbb
pushf
mov
les
xor
sbb
outsb
sub
and
xchg
dec
jmp
sbb
or
cmp
or
iret
call
hlt
add
pusha
xor
or
xchg
sti
mov
mov
scas
rclb
call
mov
mov
and
sbb
xchg
cld
lods
add
mov
dec
xchg
push
ret
imul
loopne
dec
scas
fcomip
daa
pop
cmp
mov
addr16
movsl
mov
incl
mov
cmp
scas
mov
sub
dec
xor
inc
out
jmp
jo
inc
adc
sbb
scas
add
das
loop
loopne
cmpsb
push
xchg
lods
andb
mov
packssdw
lods
ja
or
shl
sbb
add
dec
out
pop
sar
mov
std
mov
imul
sub
pushf
test
push
mov
adc
call
pop
or
mov
lods
sbb
push
mov
mov
pusha
sbb
fnstcw
in
xchg
insb
sbb
or
inc
movsl
mov
pop
addl
lods
je
stos
pop
sbb
cmpsb
mov
aaa
das
popl
cmp
test
push
shlb
pop
xor
dec
stos
pop
leave
addr16
and
xchg
push
pop
or
sbb
mov
xchg
jg
shlb
push
in
fs
cmp
mov
push
aam
aaa
xadd
insb
test
loope
pop
incl
jg
out
xchg
jno
jnp
scas
mov
or
push
mov
adc
pop
call
in
pop
mov
inc
fs
pop
dec
pop
push
push
test
and
xchg
test
jle
out
enter
and
xchg
jle
and
dec
jne
rcr
movsb
sub
mov
mov
cmpb
rcrl
add
cmpl
scas
std
inc
outsb
icebp
mov
add
or
movsl
mov
call
loope
dec
fisubrl
rcrb
aaa
xlat
and
mov
mov
lcall
push
bound
iret
aam
in
mov
inc
pop
jp
push
addr16
xlat
js
in
sarb
cmp
xchg
das
loope
scas
sarb
mov
push
es
imul
ds
dec
inc
movsl
mov
lock
pop
push
jbe
jnp
inc
mov
xor
adc
xlat
mov
fidivrs
pop
sbb
mov
enter
rclb
add
add
push
cwtl
lahf
cmp
or
add
into
ds
mov
call
mov
hlt
pop
dec
pop
jmp
cs
pop
outsb
repnz
mov
mov
dec
test
inc
adc
inc
push
ficomps
ja
mov
aaa
test
push
mov
in
ljmp
mov
in
jg
sbbb
inc
adc
sbb
lds
call
dec
dec
mov
mov
jb
insb
or
int
pushf
addr16
or
lcall
jecxz
mov
mov
pop
sub
xor
mov
dec
cmpsl
popa
jnp
cmp
movl
gs
mov
les
scas
pop
outsl
sub
data16
cltd
test
js
and
jnp
xchg
xor
mov
push
and
xchg
fwait
add
adc
ds
mov
enter
xor
dec
leave
sbb
push
mov
mov
jmp
mov
enter
push
dec
hlt
loope
push
ss
enter
inc
sbb
add
xor
hlt
mov
lea
int3
or
pop
push
ds
nop
push
fbstp
imul
aam
in
lea
mov
mov
push
adc
pushf
xchg
je
mov
outsb
xchg
mov
jge
pop
test
cwtl
scas
adc
int3
adc
into
mov
int3
push
std
add
mov
out
inc
jbe
lret
shlb
lret
or
ret
ret
xchg
push
aaa
mov
mov
loope
and
testl
pop
pop
mov
push
dec
aam
scas
mov
sbb
sbb
inc
and
mov
add
insl
int
push
ljmp
cmp
xor
insl
dec
scas
mov
dec
pop
adc
xchg
jno
aam
or
ja
ljmp
pusha
loop
lahf
mov
mov
int
fsubrl
sub
jge
iret
nop
jnp
es
push
int
cli
xor
inc
jnp
insb
loop
fwait
outsl
ficomps
adc
imul
in
rcll
cmpsl
int3
xor
test
int3
js
xor
in
mov
mov
xchg
sarl
int
fs
push
out
fmuls
push
xlat
cmp
int3
int
xor
fcomps
sahf
sbb
cmpsb
pop
into
add
mov
or
xchg
stc
mov
jb
jl
daa
fimuls
mov
jb
and
out
imul
push
repnz
cltd
xchg
movsl
push
push
into
iret
xchg
loop
xor
lcall
adc
jbe
dec
mov
scas
jno
inc
adc
pop
adc
sbb
movl
xchg
or
pminsw
pop
adc
clc
jae
dec
test
jno
lods
pop
push
pop
js
push
ss
inc
jne
idiv
pop
stos
mov
dec
jb
mov
mov
nop
mov
push
cli
mov
and
jmp
clc
cmp
xlat
inc
scas
inc
add
dec
jmp
xchg
gs
mov
in
add
sbb
ss
aad
clc
push
out
test
adc
loope
sbb
les
push
loop
imull
pop
sbb
lock
loopne
std
fcoml
push
fistps
sub
pop
lock
mov
mov
mov
adc
cmp
daa
cmp
dec
icebp
xchg
mov
test
fsubp
lret
pop
xchg
mov
inc
in
pusha
out
cmp
xrelease
jle
adc
ljmp
and
xchg
cmp
xor
test
lret
sarl
repnz
push
xchg
xor
aad
jmp
inc
addl
loop
cwtl
pop
add
fildl
adc
mov
aaa
sbb
aas
leave
rcrb
push
ljmp
imul
mov
stos
in
add
popa
inc
jp
mov
jns
add
jle
call
fwait
iret
fucomp
insl
aad
fstl
cmp
xchg
mov
add
jp
jg
popf
mov
pop
mov
xchg
cmp
add
int
push
roll
sub
mov
cmp
imul
jp
push
adc
ja
cmpb
repnz
jnp
push
shrb
pop
gs
popa
add
fwait
sub
mov
pop
mov
fldl
xchg
pop
jmp
out
mov
sub
outsl
add
insl
xchg
movsl
pop
pop
xor
hlt
mov
js
fcomps
imul
pop
bound
cwtl
inc
add
cmpsl
fcmovnb
xor
bound
and
out
push
xor
flds
cmp
sbb
inc
sub
fldcw
xor
xchg
mov
or
iret
mov
loope
mov
addr16
mov
gs
xlat
mov
xor
cmp
ja
dec
stos
out
test
in
xor
lcall
fisttpll
lahf
adc
in
and
adcb
andl
idivb
fsts
cmp
xor
and
rol
or
es
mov
fdivrs
pop
cmpsl
pop
roll
in
je
cmp
std
dec
test
pop
dec
adc
out
xor
mov
fisttpl
add
cmp
hlt
imul
lock
lcall
std
lret
lcall
leave
stos
std
jb
xchg
clc
cmp
cmp
outsl
adc
jg
ja
sti
xor
jecxz
ljmp
test
inc
mov
xchg
loopne
das
sti
outsl
sbbl
sub
notb
pop
inc
test
mov
sbb
push
enter
pop
lret
xor
mov
enter
mov
mov
pop
mov
gs
xor
push
mov
pop
jae
lds
outsb
mov
xchg
movsl
push
cmp
mov
pop
in
mov
mov
out
sbb
call
mov
xor
das
out
ljmp
push
lcall
loope
inc
xchg
or
call
add
cmp
hlt
clc
xlat
add
mov
mov
dec
ja
or
and
es
jae
dec
mov
adc
xor
or
mov
lret
jg
and
and
pop
lret
mov
jae
cmp
add
sbb
cmpsb
mov
adc
shlb
enter
jl
in
mov
mov
imul
push
sbb
lcall
rcll
cli
mov
mov
aas
mov
xor
mov
add
lret
data16
hlt
nop
xchg
int3
cmp
test
repnz
mov
and
inc
mov
push
mov
decb
leave
dec
mov
mov
cmpsb
push
cmpl
aaa
jne
inc
icebp
test
and
inc
push
loopne
push
mov
dec
aad
dec
xchg
pop
fwait
mov
repnz
push
scas
hlt
fsts
loopne
test
pushl
call
insb
ss
mov
dec
jg
cmp
js
jae
pop
outsb
add
bound
xchg
fildll
or
imul
mov
sub
loop
sbb
xlat
daa
adc
and
add
mul
dec
add
mov
jae
mov
push
and
or
in
push
mov
add
xor
xchg
xor
jne
fwait
dec
push
ljmp
mov
dec
cli
lahf
cwtl
sbb
je
loopne
adc
pop
dec
xchg
adc
mov
sbb
xor
jne
sub
lods
cmp
lea
pop
stc
push
je
push
sub
jle
adcb
fcom
mov
test
negb
rcr
pop
or
jns
inc
popf
sub
data16
ficompl
inc
mov
xorl
ffree
add
in
shrb
dec
movsb
mov
ret
fmuls
xlat
push
dec
jmp
mov
stos
sub
mov
xchg
idivb
test
pop
xchg
jmp
repz
dec
xchg
sbb
cmp
jle
jae
add
and
gs
adcb
imul
sbb
shlb
or
enter
test
fidivrl
mov
mov
mov
ds
push
ljmp
sbb
xchg
add
inc
pop
aas
int3
sbb
sub
inc
rorl
xor
rcl
sub
sub
jl
aad
pushf
mov
roll
xchg
inc
fists
push
jle
pop
icebp
sbb
fstl
pop
shlb
into
aas
xchg
shl
or
sahf
rorb
fdivr
push
stos
lcall
mov
std
shrb
lea
addb
xor
adc
sarl
and
aam
cmpsl
rclb
or
mov
xchg
in
lods
and
out
xchg
cltd
int
arpl
pop
pop
add
xchg
or
aam
or
xchg
inc
outsb
add
rcrl
rorl
lods
jmp
xlat
sub
and
dec
call
lock
ljmp
mov
push
xor
mov
mov
test
sub
stos
dec
lods
sbb
mul
jecxz
and
ja
jbe
lods
push
jge
out
push
fistpll
push
mov
cmp
stos
shl
dec
test
pop
outsl
js
imul
inc
sbb
or
and
ja
xor
xor
sbb
cmp
pop
addr16
dec
pushf
pop
sahf
in
les
fstl
nop
and
out
jecxz
jge
xor
ret
jne
adc
jecxz
add
inc
mov
dec
or
push
hlt
cmpsb
xor
popa
cmp
mov
inc
in
shrl
divl
scas
addr16
repz
pushf
push
sbb
sbb
xchg
lret
push
mov
fwait
and
in
pushf
cs
jle
popf
iret
aas
iret
sbb
int3
add
popf
inc
movsl
push
xchg
pop
cmp
shrb
repnz
out
in
std
in
dec
xlat
dec
std
lret
and
sbb
andl
mov
hlt
aad
adcb
push
frstor
movsb
fs
mov
scas
mov
xchg
out
pop
sub
mov
jp
mov
xor
xchg
jne
icebp
push
shrl
push
push
movsl
das
cmpsb
loope
stos
mov
jle
lcall
sbb
inc
push
lret
cld
dec
rcl
or
push
negl
cmp
sbb
data16
sub
loopne
xchg
mov
and
mov
inc
mov
ret
or
inc
sbb
ficoml
jns
in
insl
adc
jmp
test
push
aas
jge
jle
dec
imul
xlat
inc
je
pop
leavew
int
divl
sbb
mov
and
dec
popf
punpcklwd
sti
inc
xchg
ret
adc
push
lods
mov
popa
adc
inc
pop
pushf
mov
sub
data16
sub
lret
and
xchg
cmpsl
das
push
sub
imul
or
imul
xor
testl
or
add
add
mov
movsb
xchg
sub
orb
scas
mov
lods
inc
popf
es
inc
pop
fisubrl
lods
test
dec
sbb
dec
imul
out
loopne
inc
in
rclb
or
outsb
adc
imul
jmp
or
es
xchg
imul
fcomp
shlb
jb
cmpsl
pop
sbb
dec
ret
dec
add
sub
imulb
repnz
cmpsl
jmp
pop
mov
cmp
inc
pop
cmc
push
or
push
inc
popa
aas
arpl
mov
je
pop
mov
test
dec
push
ds
cs
in
pop
icebp
pop
sbb
clc
inc
xchg
adc
or
push
sbb
shlb
mov
xchg
push
push
scas
scas
sub
jbe
jg
aaa
pop
es
or
mov
xor
sbb
into
or
rcrl
jge
subl
outsl
mov
and
and
or
jns
int
test
push
push
je
cmpsb
sub
mov
lods
aas
test
cmpb
ja
hlt
fwait
xor
mov
icebp
mov
ds
cmp
inc
fpatan
cmpsb
adc
popf
hlt
add
mov
je
out
cmpsb
mov
sbb
mov
dec
push
int
pushf
fs
sub
jmp
sbb
pop
mov
and
pop
movb
repnz
repz
jp
add
or
ret
adc
jmp
pop
sbb
or
int
in
fldenv
and
cld
mov
movsl
adc
jbe
sti
inc
adc
aaa
sahf
push
push
fs
sbb
arpl
xor
push
stos
fldenv
dec
jl
incl
jne
pop
mull
sub
jp
imul
adcb
push
sub
cmpsb
inc
cmp
jmp
rcr
pop
xor
dec
push
push
push
shlb
frstor
mov
mov
lret
xchg
mov
cltd
out
sbb
xchg
xchg
adc
jle
push
mov
or
sti
mov
adc
mov
dec
scas
push
or
insl
push
outsb
jecxz
fldt
cld
ja
dec
bound
push
sub
inc
xor
and
stos
test
lcall
adc
mov
test
inc
inc
add
sub
ret
pop
xchg
inc
daa
inc
jns
mov
rclb
pop
or
add
cltd
cmpsl
test
push
mov
stc
cmp
add
imul
and
jnp
test
and
fiadds
addl
jno
fwait
pop
cmp
pop
popa
movsl
push
add
popl
xchg
mov
lahf
loope
mov
inc
push
dec
leave
lods
cmpsb
or
push
sub
test
int
xor
push
mov
ror
dec
push
xorl
bnd
mov
or
dec
and
ficoms
das
loop
movsb
sti
insl
sub
push
sub
xchg
add
xor
mov
mov
fnstsw
xchg
movsl
repz
pop
and
test
scas
scas
mov
das
mov
xchg
out
sbb
sbb
xor
outsl
mov
les
cmp
insl
xor
push
test
and
mov
pop
lahf
push
repz
or
hlt
xchg
cmp
std
sub
mov
cs
cmp
aaa
test
sbb
and
mov
pop
test
or
pop
xchg
arpl
call
adc
add
dec
mov
movsb
movsl
mov
mov
push
add
ljmp
test
jp
das
mov
movb
mov
ds
pop
sub
popf
xchg
in
fwait
jecxz
inc
jge
cmpsl
leave
data16
nop
jns
xchg
pop
arpl
mov
add
lds
loope
push
dec
lock
lods
dec
int
movsl
jg
xor
sub
or
dec
cwtl
cmp
scas
in
or
mov
xchg
jg
and
add
in
and
call
fiadds
xchg
sahf
xchg
jmp
cwtl
and
sub
xor
jp
or
sub
aaa
mov
dec
in
xor
arpl
xor
in
in
mov
lods
add
and
mov
mov
xchg
push
cmp
rorb
jo
pop
jnp
or
sbb
cmc
movb
in
in
jae
fwait
jecxz
pop
mov
mov
aaa
adc
push
data16
dec
mov
insl
xchg
mov
add
mov
lret
inc
add
outsl
seto
cmpsb
and
push
adc
outsb
aam
sbbl
test
xchg
inc
dec
incb
mov
sub
inc
lds
xchg
fdivrs
repnz
and
mov
fstp
jge
jno
sahf
andl
lahf
and
aad
mov
imul
lahf
cwtl
and
sbb
enter
popa
mov
push
test
hlt
lret
hlt
push
or
sub
jg
jb
or
cs
dec
mov
jecxz
jo
jecxz
pop
or
dec
fcoms
pop
dec
cmp
xor
jmp
push
movsb
push
mov
push
pusha
mov
mov
fneni(8087
stos
and
xchg
notb
mov
cld
sbb
lcall
sub
or
dec
imul
push
inc
push
ja
stos
and
movsl
fdivrl
out
ss
lods
popa
mov
jns
push
mov
fdivrl
mov
jl
sarb
jnp
rorb
adcl
and
inc
fiaddl
repz
dec
aad
loop
pop
in
xor
in
push
sub
pusha
mov
fadd
push
test
popa
cmp
add
push
adc
mov
fwait
xor
pop
sahf
xchg
dec
push
sbb
jbe
nop
dec
dec
add
fidivrs
jge
in
and
push
pop
ss
mov
mov
sbbl
rolb
fucomi
sub
push
or
orl
dec
dec
insl
ret
add
lds
lods
shlb
jl
cmp
inc
dec
pop
lods
adc
jb,pt
subl
cmpsb
mov
sub
in
jl
mov
inc
imul
jle
cmp
rorb
dec
xor
add
into
in
pop
test
negl
push
push
aaa
add
out
push
aam
adc
xchg
pop
scas
mov
inc
shll
add
icebp
adc
mov
mov
inc
pop
pop
or
lahf
mov
or
dec
daa
adc
inc
imul
ja
aad
and
cwtl
sub
cmp
jno
add
std
fcoml
ret
data16
into
push
insl
mov
bound
scas
gs
sti
xchg
cmpsl
jge
test
fistps
xchg
ds
or
scas
push
aad
mov
jae
popa
cltd
outsl
mov
xor
sbb
stos
ss
push
rcl
push
mov
dec
lret
call
and
pop
les
nopl
push
stos
push
pop
sarl
push
aas
repz
jmp
rolb
mov
mov
jb
mov
out
movsl
push
ffree
inc
dec
sub
pop
shl
cltd
sbb
dec
adc
popf
ljmp
pop
fnstsw
fistps
xchg
lods
mov
dec
mov
je
mov
pop
adc
and
and
adc
mov
jle
mov
cmp
lcall
sahf
sbb
inc
out
cmpl
or
pop
jmp
cmp
or
pop
rcll
sbb
push
jmp
inc
lods
inc
or
push
lahf
or
mov
cld
xchg
adc
sub
dec
pop
push
mov
jg
inc
xchg
dec
pop
nop
idivb
aas
orl
or
push
and
scas
out
mov
xor
movsl
loope
outsl
mov
mov
leave
jmp
xor
repz
or
pop
jne
adc
lods
adc
aas
or
mov
jg
pop
jge
arpl
loopne
cmc
mov
mov
daa
cwtl
jle
mov
pop
inc
mov
icebp
loope
jo
jno
jmp
popf
into
push
rol
push
cmp
pop
pop
out
icebp
das
jecxz
lods
fdivr
aas
lret
or
lcall
lret
into
in
leave
lea
jg
mov
inc
pop
push
or
lds
xor
sti
dec
mov
ja
mov
cmp
sbb
push
scas
adc
cli
xor
fwait
in
dec
or
dec
mov
dec
orb
notb
or
repz
jmp
sbb
loopne
jp
repnz
pusha
jb
lods
dec
xchg
dec
sub
aam
jecxz
xchg
jnp
mov
rclb
sbb
inc
mov
out
je
ret
adc
push
xor
popf
pop
mov
out
cmp
adc
rcrl
ljmp
aas
icebp
cli
sbb
push
inc
sub
ret
movsl
mov
xor
pusha
insb
mov
stos
mov
insl
mov
ficoml
arpl
jnp
mov
inc
pushf
push
lods
jmp
pop
cmp
adc
aaa
icebp
leave
mov
or
or
js
fs
adc
xchg
mov
mov
fdivrl
sub
push
mov
pop
fidivs
cld
lea
mov
test
icebp
enter
inc
repz
inc
cltd
push
sbb
test
in
jns
and
cmp
xlat
ds
and
lods
movb
inc
es
sbb
das
mov
decb
ret
adc
mov
aaa
jl
mov
aad
rorb
pop
stos
xor
enter
mov
cmp
cmpsl
js
adc
add
gs
sahf
mov
loope
mov
dec
jl
insb
jecxz
loopne
mov
loop
or
mov
xchg
push
mov
push
cmpsb
je
inc
push
div
dec
sbb
shll
test
and
xchg
jae
mull
mov
test
repnz
cltd
shl
cmp
sub
jo
push
mov
dec
inc
repz
xor
out
daa
jmp
sarb
andl
leave
lahf
cmp
ret
jge
ljmp
mov
popf
jno
scas
movl
lods
mov
cld
sbb
rcrb
or
xchg
add
fsubs
mov
add
out
pop
mov
pop
sub
push
dec
test
stos
es
xor
jg
dec
test
ffree
or
aam
cmpsb
push
addr16
xor
cmp
orb
lcall
or
cltd
arpl
xor
xor
jnp
jb
sub
mov
out
push
lods
inc
add
ret
push
inc
in
adc
xchg
dec
jecxz
ljmp
mov
sti
cmp
jae
je
lds
shrl
push
and
call
repz
test
inc
or
push
outsb
jbe
sub
bound
pop
xchg
iret
call
lock
pxor
fs
mov
aas
shrl
add
sbb
sbb
ds
jmp
clc
or
les
cmp
lret
xor
jmp
cmpsl
addr16
jns
or
cmpsb
xor
cmp
imul
addr16
mov
sub
fdivs
stos
sahf
mov
pop
arpl
xchg
dec
iret
int3
sbb
in
fisubrs
mov
insb
xchg
fadds
jae
das
and
pop
div
sub
out
sbb
mov
inc
xor
in
and
pop
repnz
outsl
or
pop
push
mov
fwait
sbb
sub
in
std
dec
js
orb
ds
xor
sbb
das
or
or
or
int
xchg
out
shr
push
mov
lds
popf
mov
inc
mull
sub
flds
mov
and
test
and
jbe
or
xchg
dec
mov
push
inc
inc
addb
jecxz
cltd
sub
sub
out
xchg
push
lahf
pop
inc
int
mov
xor
mov
clc
icebp
jb
lock
sub
jnp
push
mov
push
or
xor
aam
js
lods
jbe
clc
cmp
out
int3
or
sub
leave
stc
in
sub
jne
leave
mov
dec
inc
xchg
movsb
iret
test
stc
imul
stc
push
and
lcall
push
jbe
dec
cmp
cltd
mov
iret
lods
insl
data16
daa
jae
testl
pop
or
pushf
rorl
insb
imul
mov
and
cmp
jns
pushf
je
test
inc
xor
repnz
gs
arpl
int3
rcrl
data16
sub
jp
sub
jnp
js
mov
ss
push
test
jno
sub
mov
bound
sub
int3
jecxz
pusha
mov
cmpsb
inc
outsl
jae
xlat
adc
xor
dec
and
xorl
leave
sbb
cmc
inc
pop
sahf
pop
lock
cmp
cmp
and
loope
mov
mov
xchg
cmp
loopne
sbb
mov
mov
out
pop
dec
inc
dec
push
cmc
push
pop
dec
sub
addr16
daa
push
adc
jb
add
iret
ja
out
sbb
push
add
or
dec
fmuls
jmp
cmp
loop
in
popa
pop
int
scas
adc
aam
stos
cmp
lcall
push
ss
stos
mov
push
push
adc
dec
jge
jge
or
lds
mov
and
mov
in
arpl
cli
xchg
pop
adc
jne
ret
mov
mov
jl
push
test
sbb
jle
aaa
xchg
and
das
push
test
push
outsb
jno
nop
aaa
rcrb
and
in
movsl
cmpsb
or
cmp
xchg
pusha
xor
or
xchg
pop
insb
mov
mov
lock
push
xchg
fildll
arpl
stc
test
in
push
push
fisubrs
enter
jae
fdivrs
mov
inc
jb
sbb
xor
and
push
scas
scas
nop
cld
push
stc
dec
arpl
into
test
adc
xlat
or
cmp
xor
mov
mov
aaa
aaa
mov
fdivrl
add
pop
inc
fs
scas
insl
idivb
mov
roll
repnz
adc
mov
mov
aad
mov
lahf
popa
ja
pop
jb
lret
fisubrl
push
rcr
push
xchg
repz
inc
push
cmp
nop
sarl
mov
movsb
outsl
jg
add
xchg
xor
add
add
inc
jg
fldl
repnz
cmpsb
ljmp
sahf
ss
inc
mov
pop
jae
pusha
cmove
or
xchg
divl
mov
jnp
scas
push
popa
lcall
push
adc
cmp
mov
push
mov
lock
rol
in
jp
fidivl
movsb
cmp
faddl
push
aaa
pop
punpckhdq
jo
or
outsl
push
jno
mov
push
fadds
fnstenv
cmp
lock
mov
mov
xchg
out
rclb
sub
mov
push
mov
lea
adc
xchg
stc
jecxz
popa
cmpsb
xchg
jmp
in
cmc
push
adc
jo
popa
into
jg
dec
repnz
loop
sbb
call
add
cmp
pop
xorb
sbb
pop
lods
mov
xchg
dec
push
dec
mov
movsl
inc
mov
icebp
test
xchg
mov
popa
adc
ss
xor
add
arpl
lret
push
mov
xor
into
add
rcrb
sbb
xchg
out
pop
fistpl
es
out
sub
mov
mov
mov
sbb
xor
jo
jbe
sub
gs
cmp
add
xor
lret
mov
push
jns
jecxz
mov
adc
adc
xchg
sbb
pop
sub
xor
or
jne
cmp
cmp
mov
push
lods
sub
sub
divb
mov
push
outsl
dec
mov
push
cmp
push
cmp
cld
mov
adc
jae
cmp
mov
stos
mov
rcrb
dec
add
insl
test
cmc
jae
mov
lret
in
hlt
in
pop
sub
dec
add
in
sbb
xor
push
sub
mov
cmp
or
sub
lds
push
mov
push
jle
cli
outsb
mov
pop
jmp
scas
loopne
in
xor
insb
aas
lods
fmuls
pushf
mov
xor
dec
jne
jmp
outsl
testl
loope
rcl
in
or
dec
fildl
xchg
and
xchg
sbb
lcall
dec
adc
pop
pop
loope
shrb
fucomp
fimuls
lock
inc
out
aas
dec
cltd
pop
pop
shrb
pop
in
mov
or
cmpl
or
fwait
mov
fcoms
lods
fbld
adc
in
fcmovne
imulb
lcall
fimuls
xchg
pop
lret
cs
arpl
adc
mov
pop
mov
cs
push
push
sub
inc
mov
stos
pop
inc
loopne
sti
jnp
cmpsb
pop
and
ret
lret
mov
mov
iret
cmc
fcomps
fwait
movb
cmp
data16
ja
sbb
fmuls
fs
mov
aad
test
lods
dec
addr16
jns
aad
ficompl
dec
add
mov
mov
mov
mov
out
xor
push
aad
repnz
int
mov
mov
sub
jns
jbe
mov
int
mov
add
movsl
cmp
jae
cld
out
pushf
repz
pop
iret
pop
mov
fbstp
aas
fs
incb
mov
mov
fnsave
aad
jge
sbb
xlat
adc
inc
mov
mov
test
js
xchg
pop
add
or
mov
pop
sub
push
sbb
xchg
outsb
mov
pop
xlat
inc
imul
jns
sbb
cmp
js
leave
push
push
cs
mov
or
cmp
int
ljmp
daa
aaa
notl
out
xor
add
in
dec
lock
cmp
adc
cmp
push
fidivrl
popf
inc
inc
stc
mov
adc
pop
jp
aaa
add
xchg
lahf
popa
mov
repnz
imul
and
cmp
lahf
jnp
loop
ja
push
or
dec
into
insb
or
loopne
inc
or
lcall
in
lods
es
sub
pop
outsl
sbb
fdivrp
ret
fucom
pushf
movsl
or
mov
jae
xchg
fistpl
xor
push
dec
out
jp
scas
add
sbb
fstpl
sbb
xor
loope
stos
add
ss
cmp
shll
clc
inc
push
xchg
icebp
push
add
mov
dec
jno
dec
xor
icebp
pushf
arpl
xchg
sub
lods
loop
lods
xor
cmp
mov
jg
push
push
imulb
lods
adc
mov
enter
movsl
xchg
or
adc
mov
mov
cld
pop
jno
cmp
cmp
dec
sub
jno
push
pop
mov
ljmp
xchg
inc
mov
insb
ljmp
loope
and
sbb
mov
mov
pop
inc
fistpl
fcompl
subl
push
movsl
scas
sbb
cld
faddl
je
cmp
xor
mov
inc
add
pop
adc
je
test
les
dec
jae
mov
js
sahf
add
aas
repnz
imul
out
loop
jae
shr
xchg
adc
mov
enter
xchg
ret
push
lcall
out
xchg
mov
addr16
mov
insl
rorb
mov
jecxz
sub
repz
jge
pop
pminub
xchg
or
mov
subl
aas
xor
lea
adc
mov
imul
pop
xchg
pop
inc
and
clc
insl
cli
mov
aad
lods
in
cltd
jne
sbb
punpcklwd
inc
pop
in
imul
aad
fnstsw
stos
das
push
inc
adcl
adc
cld
enter
add
rorl
pushf
ja
pop
sbb
dec
out
lret
adcb
fldcw
sub
in
sbb
roll
xchg
repz
xchg
cmp
jle
adc
js
pushf
mov
jbe
jae
add
idivb
xchg
enter
cmp
add
mov
fmul
mov
loop
push
filds
dec
cmp
cmp
daa
mov
xlat
sub
cmp
jmp
or
jae
test
sbb
movsb
mov
inc
lods
out
mov
fnstcw
test
sahf
cmp
fidivrl
xchg
lods
adc
cmp
fdivp
and
xchg
in
mov
xlat
and
push
dec
rorb
dec
int
dec
popa
cmp
out
cmpsb
jbe
shld
cmp
popa
push
outsb
aad
pop
lods
rol
xor
pop
cltd
iret
dec
mov
xchg
sub
jns
negb
inc
push
cld
insb
loop
call
xchg
push
sub
sbb
lods
fcoms
aaa
mov
sbb
pop
fstps
fcmovb
xchg
xchg
movsl
push
sub
loope
dec
mov
outsl
out
fidivrs
add
pop
fwait
call
out
cmp
outsb
mov
pop
mov
nop
inc
xor
insl
movb
sub
stc
arpl
xor
test
stos
dec
ret
ss
mov
push
lret
test
push
fs
push
push
call
and
cmp
dec
loopne,pt
push
leave
xchg
es
iret
mov
sbb
in
ror
lret
add
dec
test
pusha
das
push
int3
dec
sahf
pop
movsb
mov
lret
orb
lds
sub
int
ja
pop
inc
cwtl
pushf
in
jge
xlat
jl
dec
jg
add
or
xchg
mov
cmpsl
or
mov
mov
add
movsl
rorb
add
lret
inc
push
movsl
js
sbb
loopne
notl
pop
fistpl
sbb
lret
dec
push
call
dec
add
into
rclb
sub
mov
dec
das
cld
cli
sub
push
cmp
push
inc
or
adc
cmovnp
push
ja
arpl
shrb
pop
call
add
adcl
std
ja
push
loope
insb
cmp
out
xor
xor
addr16
std
push
mov
outsl
pop
mov
ljmp
pop
lahf
cmc
lret
inc
in
mov
mov
mov
jbe
pop
jecxz
push
leave
pop
clc
adc
jge
sbb
sub
sbb
jne
leave
xor
mov
cmp
ljmp
mov
mov
out
inc
dec
cwtl
popf
lcall
nop
jne
testl
jo
fisttps
jae
mov
push
int3
jp
xchg
sub
sarl
dec
and
mov
xchg
add
out
shll
mov
pop
and
cmp
push
movsl
sub
push
sub
mov
or
aam
mov
lret
mov
test
cwtl
addb
pop
pushf
iret
ja
mov
and
mov
push
fdivr
sub
jae
dec
xchg
into
test
ljmp
stos
les
movsb
repnz
jo
pop
fwait
xchg
dec
sbb
dec
add
fwait
mov
nop
mov
mov
stc
jge
les
lahf
inc
call
sti
sub
test
sbb
push
jae
xor
cmp
cli
sbb
cwtl
shrl
fnstsw
dec
xchg
fsubrp
adc
jnp
popa
mov
cmp
dec
je
inc
lock
mov
and
sbb
ljmp
lret
cmpl
xchg
outsl
sub
and
xchg
inc
leave
xor
loopne
xchg
mov
loope
dec
mov
sar
push
out
push
jbe
mov
test
cmp
adc
test
push
mov
out
dec
lret
loopne
popa
imul
xchg
xchg
and
mov
pop
test
call
xchg
fldenv
add
push
jne
cwtl
mov
hlt
repnz
inc
mov
dec
es
push
dec
jae
jecxz
cmc
mov
repnz
cmp
jg
sbb
and
movsb
xchg
and
inc
iret
mov
lea
sahf
mov
mov
dec
subb
scas
imul
add
dec
dec
shll
pop
jne
push
dec
ror
incl
mov
mov
and
jle
dec
inc
out
cli
imul
in
pop
mov
loopne
xchg
aam
xor
out
mov
aad
cld
add
jo
repnz
leave
xchg
jle
icebp
sbb
pop
sub
adc
test
icebp
push
lahf
xor
movsb
cmpsb
push
mov
xchg
mov
sub
xchg
mov
ljmp
leave
push
sti
enter
jbe
pop
inc
mov
mov
repz
pop
fs
das
pop
rcr
sti
or
dec
jle
xchg
add
insl
mov
iret
adc
xlat
shll
scas
cmpb
dec
pop
push
out
push
pop
mov
mov
jne
jmp
mov
inc
sub
xchg
jp
sarb
jg
shll
ds
jp
xchg
inc
cmp
enter
and
aad
shlb
mov
inc
int3
pop
aaa
out
dec
mov
push
inc
aaa
lock
dec
int3
sbb
lea
movsb
pop
dec
add
mov
repnz
and
pop
pop
je
les
call
mov
mov
mov
cmc
push
pop
in
push
xor
jnp
push
cs
push
hlt
push
in
mov
pop
jge
inc
dec
popa
xor
stos
add
div
sub
cmp
repz
jo
jnp
stc
xchg
call
push
and
dec
shrb
cmp
rorb
int
jb
mov
enter
cmc
pop
or
push
lock
insb
mov
aam
adc
into
xlat
sub
jmp
mov
sub
out
mov
lods
out
les
cmp
jge
pop
push
aad
push
out
adc
out
cmpsb
sahf
xor
lcall
adc
lret
sub
sub
pop
jae
adc
int
push
jge
pop
insl
bound
jecxz
mov
lds
and
repz
imul
push
sti
ret
inc
repz
popf
sbb
sbb
fs
push
and
fdivrl
xor
lret
jae
ljmp
rorl
daa
and
mov
cmp
cmpsl
call
and
jmp
dec
sbb
lcall
inc
dec
xchg
loop
enter
and
dec
mov
xor
out
repnz
inc
rorb
pop
xchg
lret
mov
adc
movsl
mov
out
rcll
cltd
xchg
jbe
push
xor
test
test
repnz
adc
ljmp
mov
mov
ret
and
lret
stos
aaa
cli
scas
mov
and
mov
addr16
int
cwtl
or
jno
and
mov
push
push
adc
aas
scas
lods
jp
cmp
cmc
imul
bound
push
repnz
lods
das
rol
lods
xor
out
xchg
mov
addr16
xor
int3
jnp
leave
xor
hlt
add
jecxz
rcrb
xorl
mov
add
out
lret
xor
incb
dec
aas
lret
and
inc
out
add
dec
popa
call
subl
xor
int3
mov
xor
xor
mov
in
jle
mov
cmp
mov
call
push
lock
push
xor
add
dec
pop
xchg
jl
hlt
out
mov
lret
rorl
pop
imul
or
adc
xchg
sub
xlat
cmpsb
ljmp
xchg
push
mov
or
ret
lock
sbb
add
inc
add
dec
popf
inc
sub
or
push
cmp
leave
sub
inc
loopne
xchg
rcrl
or
insl
sub
pop
sbb
adc
cmpsb
ret
subl
adc
lods
jne
lds
les
std
xchg
or
repz
mov
out
insl
mov
push
jmp
fstps
icebp
sbb
mov
shl
pop
xor
mov
xor
mov
mov
mov
loope
cmp
rcrl
add
arpl
out
sbbl
fwait
lods
and
pop
mov
mov
loope
movzwl
ja
pushf
hlt
and
mov
inc
stc
roll
repz
adc
push
dec
ds
dec
not
mov
int3
dec
nop
pop
in
enter
fadd
xchg
sub
xor
xlat
and
sbb
insb
push
adc
jns
pop
ja
xabort
dec
imul
and
out
lcall
adc
imul
xlat
jmp
mov
scas
inc
ljmp
dec
xor
loopne
push
push
lea
inc
addl
pop
push
test
out
mov
in
lahf
xchg
int
mov
sub
xor
fstpl
pop
pop
repnz
in
push
ret
pop
jae
push
adc
mov
sahf
rorb
push
inc
cmpsb
mov
andb
sbb
clc
insb
mov
sahf
jbe
dec
js
mov
rcrl
mov
mov
ds
push
in
in
cmp
call
lret
push
notl
cmp
fcompl
dec
testb
mov
arpl
lahf
push
in
and
jp
fiadds
mov
dec
or
icebp
cmpb
ds
mov
add
mov
jmp
sub
pop
jae
push
xchg
cs
std
popa
rorb
in
sbb
pushf
inc
sub
inc
mov
xchg
test
pop
pop
adc
add
xchg
mov
xchg
cld
lds
cmpsl
cmp
incl
sbb
dec
or
fst
jle
movsb
mov
jle,pn
lds
push
push
outsl
cltd
fwait
adc
and
xchg
repnz
je
leave
pop
mov
add
aam
out
loope
cmp
pop
cmpsl
lret
in
loope
pop
push
popa
push
mov
pop
pop
push
push
xchg
sub
inc
in
mov
inc
mov
or
mov
js
xchg
cmp
or
sbb
cld
andl
mov
idivl
cmp
pop
inc
jno
sub
jmp
fsubrs
xor
mov
push
or
jge
popf
mov
scas
push
insb
mov
outsb
sbb
addr16
mov
jmp
cmp
in
xor
pop
push
fcomps
xchg
mov
loope
lds
insb
push
pop
in
outsb
and
sub
sarb
movsb
push
jb
pop
pop
stos
sti
into
je
adcl
ds
cs
and
xchg
jbe
xor
push
sti
fdiv
ja
inc
xchg
cmp
pop
in
pcmpeqd
push
dec
add
fstps
jecxz
mov
cmpl
pop
cli
sub
dec
js
std
orb
cltd
mov
mov
xchg
inc
mov
jecxz
pop
lret
into
into
loopne
icebp
mov
cltd
push
into
mov
inc
loop
lcall
push
push
jecxz
clc
inc
out
stos
mov
js
inc
sub
shl
cmp
push
inc
inc
mov
push
popa
mov
pop
test
in
lea
add
cmovge
push
cli
mov
fists
push
fs
test
xchg
test
scas
loopne
ljmp
out
push
dec
std
pusha
mov
lea
stos
dec
pusha
lcall
add
jmp
jmp
mov
flds
sub
mov
sub
popa
js
push
nop
lret
cwtl
xchg
ljmp
xlat
orb
adc
sbb
lret
movsb
roll
sub
dec
mov
jle
loop
fstps
fldt
jnp
adc
xlat
mov
sub
les
js
lods
pop
das
adc
fs
mov
sbb
js
shll
add
shll
dec
and
frstor
aad
jecxz
into
adc
push
mov
enter
xchg
xor
xchg
fcoml
mov
xor
jge
push
xor
les
adc
inc
sbb
jecxz
mull
push
sbb
scas
xchg
dec
sti
cmp
cld
call
push
pop
mulb
aad
aam
xchg
imul
ds
out
pop
adc
sub
scas
mov
push
adc
mov
gs
cmp
popa
adc
dec
lret
xor
insl
das
dec
pop
dec
mov
addr16
xchg
test
inc
mov
dec
xchg
cmp
cmp
xchg
cli
movb
inc
outsl
outsl
adc
mov
adc
mov
push
sub
inc
mov
xchg
je
sbb
cmp
clc
jo
scas
or
xor
jb
mov
or
insl
and
inc
mov
xor
mov
jns
sub
test
rcrb
mov
xor
jmp
pop
dec
cmp
cmp
js
mov
inc
inc
cli
jg
xchg
loopne
ds
fmuls
mov
enter
and
jmp
pop
mov
mov
dec
mov
and
cmpsl
arpl
add
xchg
sub
lret
push
push
add
jmp
sbb
inc
push
xchg
js
xchg
pop
stos
inc
adc
push
inc
jmp
jge
push
pusha
mov
adc
movsl
sub
lock
leave
push
mov
and
pop
shll
aas
in
enter
push
inc
stos
daa
mov
jno
inc
dec
or
pop
test
and
xor
mov
jp
sub
sbb
jns
fnstenv
adc
dec
ljmp
pop
popa
mov
in
mov
fcmovne
jb
xor
mov
xor
add
inc
sub
aad
pop
dec
incb
dec
leave
sbb
adc
add
out
mov
add
pushf
or
shrb
lock
cmp
int3
xchg
out
cmovg
push
std
outsb
push
cmp
les
sub
mov
jns
inc
daa
jle
or
mov
xchg
hlt
stos
lock
sub
or
xor
gs
mov
in
hlt
adc
dec
jmp
addb
and
dec
add
add
inc
imul
out
lock
sub
jp
incl
fnstcw
popa
push
shr
pop
scas
aam
push
mov
std
pusha
cmpsb
fs
aaa
mov
mov
xor
sbb
jnp
or
push
aad
ss
add
or
ja
dec
rcl
movsb
xor
mov
inc
xchg
pop
cmp
icebp
inc
xor
jne
aam
pop
lret
cwtl
xchg
nop
sar
mov
stos
xor
add
pop
or
cmpl
aad
mov
jbe
inc
push
add
mov
ja
ja
or
pop
fwait
inc
mov
xor
es
outsb
sbb
add
mov
sbb
pop
cld
jo
dec
repnz
push
aaa
gs
add
ror
mov
cmp
sbb
xlat
arpl
push
xorb
inc
inc
xchg
lret
inc
cmpsl
add
cltd
xor
sbb
iret
out
xor
push
notl
pop
cmpsl
out
or
dec
pop
jo
mov
and
xor
and
mov
leave
lods
xor
clc
inc
jmp
loopne
xor
pusha
mov
jl
jne
sbb
into
xlat
fcmove
cwtl
push
mov
loopne
fs
lret
jnp
into
or
orl
sub
pop
mov
pop
daa
ja
je
movsb
test
or
adc
fst
lahf
inc
shlb
stos
push
jno
je
cmp
js
shr
movsb
jp
pop
shlb
xchg
notl
jge
lret
push
pop
jno
mov
loopne
addr16
jle
pop
pop
dec
daa
test
mov
das
inc
rorb
jle
xchg
xchg
inc
clc
sbb
andl
jmp
mov
ret
sbb
adcl
jp
mov
addr16
out
vpshaw
pop
sbb
out
ficoml
xchg
scas
xchg
shrb
je
iret
gs
clc
cwtl
test
fsubrl
std
and
sub
push
outsl
in
insb
sbb
cmp
fistps
inc
mov
psubsw
cmp
xchg
rcr
hlt
shr
jecxz
pop
aam
jle
in
lods
stos
stos
or
sarl
mov
mov
or
rorb
les
pop
aam
sti
jo
es
cwtl
push
xchg
mov
and
stos
cmp
dec
sub
xchg
aam
jecxz
adc
insl
in
mov
xor
lret
add
adc
pop
jnp
rcrl
dec
jmp
mov
sub
lock
call
pop
popf
push
mov
stos
dec
or
adc
ds
jecxz
pop
cwtl
stos
mov
scas
and
arpl
sbb
fcomi
cmpsl
pop
lcall
lret
sub
call
adc
and
test
fildll
jbe
xchg
fiaddl
sub
popf
or
mov
push
mov
jb
xchg
adc
mov
lahf
fdivrp
jle
cmp
mov
dec
or
rcrl
sahf
pop
pushf
sarb
cld
enter
push
cmp
into
negb
stc
jne
sbb
repz
jle
das
mov
cwtl
xchg
or
push
movsb
push
addr16
imul
mov
pop
xchg
mov
adcb
loop
hlt
xchg
jmp
push
addr16
adcl
into
xchg
popa
push
les
push
sahf
xchg
pop
bnd
fcoms
test
outsl
repz
int
jge
mov
movsl
pop
mov
cmpsb
imul
iret
inc
push
out
cmpb
fld
mov
jno
mov
repz
es
add
xor
sahf
clc
sbb
ss
lods
shlb
xlat
or
enter
pop
mov
adc
pop
mov
movsb
ficomps
jb
pop
xor
pusha
jbe
mov
dec
ret
mov
adc
stos
adc
cmp
jbe
insb
or
dec
xchg
shr
add
inc
daa
cwtl
mov
add
in
xchg
sahf
test
adc
mov
mov
push
repz
cmp
lahf
pushl
lods
mov
clc
lods
sub
sub
xchg
shrl
int3
test
mov
insb
xchg
sub
mov
mov
jnp
mov
fnstcw
pop
pop
dec
repz
add
pop
loopne
jge
adc
insl
pop
cwtl
inc
mov
insb
mov
imul
addr16
inc
dec
or
jg
pop
sbb
jns
ljmp
sub
daa
pusha
fisttps
mov
adc
mov
loopne
pop
jecxz
xchg
adc
add
clc
cmpsl
pop
sub
cmp
xor
mov
ljmp
xchg
or
dec
cmp
pop
fcompl
pop
mov
adc
pop
lods
js
jbe
cmpsl
cmpb
and
jnp
rcr
inc
mov
xchg
jmp
ljmp
daa
test
cmp
mov
mov
sub
push
sub
jb
loop
xorb
sbb
ja
cmpsb
mov
and
rcrl
test
mov
pop
push
lods
fidivrl
sub
xchg
or
test
imul
pushf
cli
fdivrs
out
cmp
jecxz
imul
inc
pop
cmovnp
pop
adc
stos
jp
inc
push
stc
pop
scas
test
int3
rclb
mov
cmp
push
hlt
pop
push
adc
mov
pop
mov
lahf
sbb
int
jecxz
pop
addb
mov
icebp
movsb
sbb
sarb
fs
inc
fyl2xp1
or
cmp
movsb
pop
fsub
and
sbb
pop
aam
hlt
adcl
inc
sbb
popf
mov
jg
and
jo
test
rorb
add
std
xchg
pusha
js
aaa
push
cmp
rolb
or
mov
push
or
jno
and
lahf
xlat
iret
in
enter
out
scas
loopne
mov
xorl
push
adc
mov
incl
or
push
fistpl
and
mov
fisubs
push
cmpsl
cmp
dec
aam
and
out
movsl
int3
dec
pop
dec
xchg
popf
stc
sbb
pop
pop
rcrl
dec
mov
xor
sub
add
xchg
subb
mov
rcpps
mov
cmp
and
es
loope
rcr
imul
fldenv
inc
ficoml
push
js
adc
ret
int
rcr
xchg
pop
adc
sti
add
je
inc
nop
xor
idivb
int
xchg
insl
xor
rolb
mov
in
idivb
fiaddl
push
icebp
scas
lds
or
xchg
pop
xchg
fwait
dec
inc
mov
dec
inc
nop
insl
ds
cli
mov
adc
pop
jnp
ss
bound
add
or
dec
pop
jae
loope
mov
out
mulb
or
pop
cmp
push
and
sbb
adc
out
stc
fstps
mov
rolb
loopne
pop
lret
xor
cmp
into
into
sti
push
sub
int
bnd
jnp
mov
mov
pop
mov
out
out
jb
jne
insl
mov
jne
and
push
pop
ret
sub
jo
sub
enter
add
and
cmp
loopne
fwait
and
jne
aas
lret
iret
addl
xor
orb
lea
mov
stos
shrb
mov
aaa
add
addr16
lea
in
jp
pop
popf
subl
aad
sub
iret
in
dec
inc
hlt
xor
sarb
in
call
add
inc
xlat
sub
imul
sub
cmp
xchg
xor
push
sbb
dec
movsl
jmp
cmp
cmpsb
or
lds
mov
lods
mov
jno
fisubrl
bnd
into
out
sbb
out
xchg
mov
in
std
stos
aaa
popf
add
outsb
inc
in
sbb
xorl
ja
in
xor
mov
in
mov
fistpl
dec
stos
lahf
orb
push
jle
je
frstor
aad
push
lock
cmpsl
xor
and
jecxz
stc
int
mov
mov
push
sub
loope
add
ret
dec
in
cmp
orb
and
pop
les
sbb
adc
ficoms
xchg
bound
cmp
cmpl
ljmp
pushf
lods
or
dec
or
mov
xorl
mov
inc
push
bnd
aas
dec
stos
add
mov
std
ljmp
cmp
sahf
inc
and
sti
xchg
in
test
mov
stos
push
add
imul
inc
shlb
jns
sbb
cs
mov
pop
arpl
repz
mov
jo
addr16
dec
iret
out
nop
nop
pop
lea
mov
dec
movsl
dec
std
mov
jo
sbb
scas
mov
mov
movsb
andl
mov
push
jo
mov
xchg
arpl
out
lods
ret
lahf
test
stc
xchg
imul
iret
fstl
xchg
push
mov
sbb
not
dec
rolb
xchg
ss
dec
pop
xchg
sub
pop
add
imul
js
adc
pop
mov
dec
lcall
and
movsl
adc
and
insl
sub
lea
or
cltd
jecxz
push
fldcw
pop
shlb
stos
add
gs
lret
push
jnp
xchg
sahf
loop
or
inc
xchg
rcrb
dec
xor
fstpl
cmp
outsb
out
dec
les
jb
test
inc
sbb
dec
aaa
adc
decl
cmp
pop
sbb
adc
fcmovb
pushf
test
add
dec
xor
aad
sub
push
cmpsl
out
adc
mov
loopne
xchg
in
push
jle
sbb
mov
lret
jmp
ret
mov
dec
lret
mov
in
shlb
lods
cmc
xchg
dec
movb
in
inc
xor
inc
xchg
adc
mov
mov
jg
scas
iret
cmpsl
cs
mov
cmc
and
fdivrl
dec
mov
mov
sahf
mov
out
jle
aas
jae
jmp
scas
cltd
stos
into
inc
or
in
in
scas
jle
loope
pop
push
call
aad
sti
mov
adc
das
sahf
repz
push
inc
rorl
xchg
popf
xor
mov
inc
pop
and
fcomi
push
into
hlt
fwait
call
mov
and
sub
jg
xchg
inc
ret
cmc
gs
pop
mov
mov
cmp
xor
mov
sub
clc
insb
std
cli
std
orb
inc
xchg
loop
push
ja
aad
gs
fsubl
mov
loop
ficoml
and
push
push
or
lock
or
cmp
push
xchg
jo
jge
sbb
mov
test
dec
repz
sbb
call
add
stos
mov
dec
sub
add
aaa
and
push
dec
jbe
inc
xor
cmpl
test
pop
pop
sub
loop
sbb
shr
mov
pop
jns,pn
jnp
mov
repz
loop
xchg
cltd
iret
shrb
sbb
imul
in
jno
inc
sub
in
clc
popf
mov
sti
repnz
pop
dec
adc
push
repz
mov
jne
in
inc
push
daa
mov
imul
jno
into
sbb
lcall
xchg
push
mov
mov
inc
cmp
or
call
dec
pop
xlat
scas
popa
lret
or
cwtl
shlb
cmp
arpl
push
into
je
lods
shll
es
or
inc
push
xchg
cmc
inc
pop
pop
lcall
das
push
cmp
sub
mul
mov
xlat
inc
xchg
adc
cli
lods
push
test
lahf
jmp
mov
mov
jecxz
mov
push
in
hlt
sahf
sub
jecxz
mov
or
out
add
fwait
pop
sarl
outsl
mov
in
lret
adc
push
rcrl
cs
outsb
aaa
or
or
xor
dec
fwait
xor
jecxz
xlat
and
repz
test
or
and
xchg
test
xor
or
test
xchg
sub
cmpsb
mov
sbb
mov
nop
gs
push
cltd
lea
popf
jbe
test
cmpsl
add
xor
jle
mov
insb
sub
lret
dec
and
mov
int3
or
inc
popf
sahf
nop
mov
xchg
jmp
popa
pop
daa
inc
incb
in
test
adc
mov
pop
aaa
jecxz
mov
pop
shlb
or
add
bound
mov
mov
aaa
dec
mov
repnz
sahf
dec
push
lahf
rorl
stos
dec
jno
jmp
mov
sub
gs
fmuls
mov
shrb
xchg
jmp
cmc
addr16
pop
sbb
xchg
jnp
dec
jb
cmpsb
or
lret
xchg
pusha
push
mov
adc
not
or
sub
lock
hlt
or
repnz
dec
lcall
rcrb
lahf
icebp
repz
xor
pop
add
in
sub
imul
xor
clc
nop
xlat
inc
mov
xchg
scas
cmpsl
dec
pop
enter
mov
or
repz
sbb
or
ret
mov
jns
scas
addr16
aas
mov
pop
jmp
aam
mov
mov
aas
ja
inc
mov
and
xchg
push
shrl
mov
push
enter
fsubrs
inc
and
ret
sub
jle
sbb
inc
sti
aas
imul
enter
out
mov
jg
cli
sbb
imul
nop
mov
imul
fisttpl
xchg
pminsw
adc
sbb
jne
push
xchg
adcl
cld
cwtl
in
dec
sbb
xor
cmp
filds
xorb
sub
testl
outsl
psadbw
jb
mov
fimuls
std
add
pushf
jmp
loope
ret
les
outsb
pop
fmull
xor
popf
cli
cmpsl
sub
outsl
and
mov
xchg
gs
mov
popa
lods
sbb
and
outsl
pop
fimull
scas
inc
mov
push
sbb
lcall
inc
test
jp
jmp
xlat
sub
dec
sbb
push
jnp
scas
fdivs
rcrl
sbb
mov
pushf
cmp
jns
xchg
mov
mov
test
mov
xchg
mov
test
add
repz
adc
xchg
jle
pop
push
enter
push
push
xchg
mov
inc
xor
outsb
push
rolb
loopne
mov
rcrl
dec
rcll
mov
sbb
and
sub
mov
xor
data16
ret
fcmovu
inc
push
push
adc
leave
push
sar
dec
pop
ret
sub
xchg
rcrb
xchg
xor
shlb
add
or
sbb
aad
rcrb
cmp
push
push
inc
and
es
sbb
out
xchg
mov
fwait
pop
dec
jmp
mov
outsl
jmp
xchg
cld
push
rcrl
int
push
jne
fs
enter
scas
dec
repz
sbb
dec
ud1
adc
mov
dec
mov
movsl
sahf
fidivl
jo
or
iret
aad
cwtd
mov
aam
xor
push
push
fwait
into
fistl
pop
lahf
sub
addl
jno
into
fwait
loope
lods
push
mov
xchg
aam
xchg
push
cmp
aaa
mov
neg
cmp
std
testb
xor
mov
push
dec
loope
ret
mov
and
repnz
xor
cs
mov
adc
ret
push
sub
imul
test
pop
jbe
inc
insb
mov
test
xchg
add
ret
sub
jb
cli
stos
adc
xor
pop
and
lea
sbb
shrl
aad
jmp
int
mov
pop
dec
stc
inc
xchg
mov
cltd
push
push
popa
ljmp
mov
xor
mov
mov
xchg
push
outsl
push
ret
loop
cmpsl
inc
or
addr16
cmc
ret
jo
xchg
inc
fs
outsl
pop
cmp
add
clc
mov
sub
lock
int3
inc
jecxz
jne
sbb
mov
pop
jle
jb
popw
and
fcomip
pop
rol
imul
sbb
mov
cli
scas
int3
pop
push
enter
sub
std
test
shlb
mov
leave
or
lret
out
test
pop
and
lea
cwtl
sub
cwtl
pop
pop
cmp
sbb
lds
jns
std
lds
xchg
sbb
iret
fldcw
push
mov
jbe
xor
adc
add
adc
push
mov
lret
xor
pop
xor
jnp
cmp
add
mov
mov
jg
out
inc
inc
mov
aas
push
adc
data16
mov
push
test
xchg
adc
cmpsb
fidivl
xlat
pop
push
loop
push
enter
rolb
add
hlt
jae
or
pop
inc
jp
fidivs
in
pop
cmp
mov
fsubrp
movsb
dec
sub
out
roll
mov
inc
jecxz
scas
mov
ficoml
xor
rorl
or
xchg
pusha
mov
pop
dec
add
aaa
pop
and
ss
push
pop
lds
mov
xchg
test
sti
inc
add
out
jg
dec
icebp
sti
push
or
cwtl
dec
shl
xor
mov
bound
call
xchg
push
sbbl
dec
cmc
xor
fld
int
or
cmp
jno
xchg
leave
jecxz
adc
xor
add
sub
pop
imull
dec
add
ja
hlt
stos
add
xor
fists
mov
push
addl
out
mov
test
pop
inc
aad
xlat
subb
xchg
mov
cltd
mov
aam
pop
jno
aam
ret
adc
cmp
imul
setp
ror
psadbw
js
sbb
cmp
mov
pop
xchg
scas
data16
sbb
and
inc
loopne
into
pop
pop
cmp
mov
rclw
ret
pop
push
repz
hlt
fstps
mov
mov
fs
ret
mov
dec
addr16
add
pop
xchg
pop
fildl
inc
pop
mov
xchg
mov
add
xchg
out
jecxz
jmp
push
leave
in
repnz
sbb
jge
pop
pop
add
sub
sub
jae
jns
ret
je
push
sub
adc
aad
mov
fwait
mov
xor
add
roll
lret
jb
mov
sti
mov
and
repz
cltd
int
mov
jnp
jmp
fs
inc
mov
pop
loop
sahf
xor
pop
jbe
movsb
negb
jge
mov
rorb
sub
pop
icebp
jb
dec
adc
fcoms
mov
loopne
cwtl
pusha
xchg
inc
mov
hlt
adc
mov
and
mov
repz
cmp
mov
jae
mov
cmp
rclb
xchg
mov
mov
adc
xor
ret
shll
aas
jle
out
dec
push
enter
push
mov
pop
jbe
daa
test
dec
xlat
lahf
and
push
xor
adc
lcall
sbb
outsl
add
mov
cwtl
aaa
cltd
aam
je
call
add
iret
xchg
pop
mov
shll
mov
or
cmp
and
pop
adc
out
jmp
pop
f2xm1
outsl
inc
jns
or
daa
push
aas
out
popf
inc
test
inc
stos
stos
pop
fstpt
jl
or
xchg
lret
push
scas
mov
cld
inc
cmp
add
mov
and
rcl
ret
jae
push
imul
scas
jns
push
add
rolb
movsb
in
push
mov
inc
mov
stos
fidivrl
cli
jmp
jmp
data16
inc
cmp
cltd
sbbb
mov
pop
mov
das
ljmp
sub
faddl
movsb
cltd
loopne
push
pushf
add
test
push
mov
das
mov
pop
mov
jne
shrb
pop
sub
jnp
jecxz
mov
cmp
mov
scas
adc
xchg
ret
pop
lds
push
repnz
in
and
inc
mov
cmpsl
outsb
test
rcll
sbb
inc
mov
shll
push
add
jmp
sbb
cwtl
sbb
ljmp
push
test
lea
xor
push
insl
xor
xchg
pop
push
lcall
call
insb
mov
ss
mov
or
jns
mov
adc
xchg
cmp
mov
data16
mov
mov
cmpsl
cmp
inc
xor
cmp
xchg
jp
test
or
push
int
iret
jno
mov
in
gs
call
arpl
fstps
ret
mov
in
and
ds
dec
push
shlb
int
hlt
mov
push
mov
sbb
addb
pop
test
outsl
add
test
mov
cmp
cmp
sub
fmul
das
into
inc
sub
pop
int3
push
xor
and
jo
fisubl
in
push
cmc
setp
xchg
sub
pop
fmull
or
cli
adc
daa
das
mov
outsb
cli
inc
cmp
lcall
inc
dec
xor
sahf
sbb
fbstp
push
jg
lods
inc
and
pop
push
xchg
mov
inc
addl
xchg
push
adc
mov
mov
or
daa
mov
inc
cmc
dec
lock
lds
and
out
xchg
in
pop
shll
lret
imul
xlat
and
popa
push
xor
push
out
aaa
pop
xor
sub
dec
inc
loopne
sub
scas
push
jmp
sbb
adc
lcall
int
cmpsl
cmp
stos
inc
imul
push
lds
mov
pop
rcl
add
daa
xlat
mov
ds
mov
fisttps
cmp
fists
pop
rcll
push
push
jle
mov
subb
jo
cs
jmp
push
mov
xchg
inc
lock
jno
cmp
popa
jl
ret
jmp
mov
lods
xchg
add
mov
sub
movl
fcmovu
in
fs
inc
loopne
aaa
jmp
les
jnp
pop
das
mov
pop
pop
fs
fdivr
cltd
pop
out
enter
xchg
mov
dec
mov
inc
mov
andl
bound
gs
imul
bound
nop
cmpsb
pop
sub
inc
movsb
jecxz
and
mov
cmp
imul
pop
xchg
int3
xor
push
sti
dec
outsl
xchg
xchg
fimull
cwtl
cmp
test
aas
jne
cmp
mov
or
test
mov
ds
orb
int3
mov
jns
sahf
int
mov
movsl
jns
mov
add
push
inc
bound
cli
and
insb
dec
xor
pop
sahf
jle
jl
lods
mov
aad
mov
mov
mov
pop
das
ja
hlt
add
sarb
gs
ja
in
mov
sbbl
scas
jae
push
and
xor
add
jecxz
repnz
push
mov
jge
sbb
adc
lcall
imul
xchg
sub
test
leave
adc
add
mov
insl
ja
aas
lods
iret
sbb
aad
jns
dec
aaa
mov
sbb
inc
enter
cmp
rcrb
cltd
test
or
pop
enter
sbb
xchg
pop
sub
push
push
xchg
sbb
mov
lock
outsl
cmp
sub
mov
jp
xor
sbb
or
sub
into
lods
mov
faddl
push
out
jb
push
pop
pop
imul
push
mov
aas
pushf
mov
cwtl
push
lods
add
stos
orb
test
pop
sbb
bound
sbb
jge
mov
popa
rcrb
dec
jb
xchg
ret
pop
ss
xchg
sub
stos
popa
stos
adc
mov
pushf
clc
mov
mov
pop
enter
push
dec
into
in
inc
inc
and
stos
lods
mov
and
jecxz
xor
mov
loope
push
fldl
mov
sbb
stos
cld
enter
jl
into
imulb
and
nop
xchg
add
push
pop
ret
xor
clc
inc
xchg
jb
fidivl
xchg
inc
loope
shlb
cmc
ret
push
cltd
out
cmc
clc
add
js
and
lock
aaa
stos
lret
xchg
mov
push
ja
mov
and
mov
dec
insb
add
lcall
cli
cmpl
sbb
sub
jmp
pop
xor
outsl
insb
fcoms
repz
jle
sarb
sbb
mov
gs
mov
sbb
bound
sbb
aas
dec
addl
stc
in
dec
or
popf
mov
shl
movsb
pop
shrl
outsb
pop
xchg
inc
inc
cmpsb
xor
adc
out
and
cmp
mov
dec
mov
mov
fmuls
or
cwtl
cltd
mov
xchg
xor
adc
lret
or
sub
sub
stos
iret
xor
jecxz
cwtl
jecxz
gs
xchg
sub
movsl
pushf
jecxz
sbb
mov
push
ljmp
mov
movsb
insb
bound
add
cld
cli
ljmp
imulb
rorl
dec
and
scas
sbb
pop
fimull
loope
stos
push
out
adc
or
xchg
inc
or
add
and
jns
sti
mov
daa
dec
or
dec
in
movsl
push
jne
mov
cs
daa
xchg
ljmp
mov
mov
adc
xchg
sub
xchg
jb
int
addb
dec
movsl
in
lret
xchg
sbb
roll
pop
insb
inc
push
xchg
subb
test
shlb
or
or
mov
test
dec
mov
xor
scas
popw
dec
mov
fildl
pop
movsb
push
out
pushf
les
pushf
dec
jb
jnp
adc
mov
add
movsl
addl
adc
pop
push
pop
add
imul
stos
and
pop
pop
sub
push
icebp
jg
sub
or
fdiv
hlt
fwait
lret
adc
push
push
push
xchg
push
lahf
mov
orb
mov
mov
repz
jp
dec
fstpl
and
mov
out
jbe
es
mov
popa
in
adc
cmpsl
sub
sahf
iret
fdivs
push
cmp
das
idiv
add
xchg
bound
push
dec
or
mov
inc
sbb
mov
mov
dec
dec
xorl
and
sahf
sahf
mull
sub
adc
adc
push
jp
lahf
insb
xchg
stos
sti
push
push
push
test
xor
pop
sub
jl
cli
iret
aam
mov
ljmp
push
hlt
xor
aas
pop
add
aaa
into
cmc
or
jno
jl
imul
xchg
xchg
cmpsl
mov
aad
jmp
ss
sub
push
mov
push
jg
jo
rorb
dec
ret
movsl
clc
push
sub
dec
aad
jmp
fs
mov
sahf
dec
cmp
mov
and
jnp
inc
mov
jae
xchg
outsl
mov
fidivrl
pushf
mov
scas
xchg
filds
fs
pop
mov
jecxz
daa
gs
subl
jg
xchg
incb
in
mov
repz
inc
sub
mov
jno
pusha
mov
push
and
jno
mov
inc
arpl
shlb
js
pop
scas
sbb
subl
mov
cmp
jnp
movsb
cmpsl
lods
lds
mov
repz
and
adc
negl
ljmp
clc
fstps
test
pop
adc
inc
mov
in
mov
sbbb
cvtdq2ps
adc
mov
lret
cvtdq2ps
les
ret
xlat
push
fmull
hlt
imul
dec
pop
dec
dec
rcrl
xor
mov
aam
push
mov
clc
int3
jl
cli
arpl
and
jae
cmpsb
into
lret
cmp
adc
jmp
cltd
pop
mov
ficoms
and
subl
mov
jns
xor
leave
mov
xor
and
test
push
ljmp
mov
push
push
test
movaps
cmc
mov
stc
push
adc
in
xchg
mov
int3
push
dec
sbb
cmp
lock
add
push
add
icebp
xor
pop
adc
mov
and
daa
or
fsubs
cmpsb
add
dec
in
add
push
iret
mov
xchg
add
pop
js
sahf
outsb
xchg
daa
shll
adc
in
fimull
mov
dec
inc
jbe
lret
inc
push
lret
sub
jmp
stos
dec
jae
shll
je
sbb
sbb
dec
daa
fildl
xor
hlt
scas
in
mov
lret
jmp
cmp
and
jbe
pop
enter
movl
xor
adc
loop
push
mov
nop
push
fldenv
mov
into
rorl
and
sahf
and
mov
shll
mov
sbb
xor
dec
out
inc
mov
cwtl
pusha
push
rclb
les
stos
and
mov
in
xor
pop
jmp
incl
sbbb
sub
dec
enter
xchg
push
cs
cli
jl
pop
jb
xchg
fsubr
jo
loope
icebp
mov
dec
xor
sbb
ljmp
aam
xchg
sahf
imul
mov
pop
sbb
loopne
push
xor
shlb
imul
add
pusha
cmp
cltd
out
or
stc
xchg
and
mov
dec
scas
cmp
pop
mov
sub
icebp
jecxz
or
mov
ss
js
repz
test
mov
push
mov
inc
into
mov
push
loope
std
jecxz
das
push
inc
out
ficoms
push
mov
xlat
mov
and
mov
int
mov
jno
loop
adc
or
mov
jl
out
pop
pop
das
jbe
inc
dec
mov
aam
out
sti
lret
inc
push
xlat
sbb
jle
add
dec
push
cli
mov
mov
testl
popa
scas
mov
mov
jmp
sbb
add
icebp
inc
xor
in
xor
adc
pop
and
pop
mov
dec
jnp
and
fmuls
mov
in
ljmp
arpl
pop
jno
popa
pop
mov
scas
lea
clc
xchg
mov
jne
adc
adc
and
add
fidivl
hlt
cwtl
sbb
pop
add
mov
xchg
ds
push
pop
jb
outsl
mov
sbb
int
mov
xchg
or
pop
inc
scas
fistl
gs
stc
and
mov
dec
and
or
cld
lcall
inc
loope
addl
mov
data16
push
dec
pusha
cmpsl
sbbb
adcb
mov
data16
jl
jg
mov
pop
shrl
inc
cmp
push
pop
pusha
inc
mov
and
sbb
leave
fsubrl
mov
mov
and
test
cmpsb
adc
inc
shrb
sbb
ljmp
pop
and
sbb
loopne
push
add
and
lock
adc
push
cmp
push
out
cwtl
mov
jae
inc
or
or
sub
daa
sahf
shl
in
aas
movsb
cmpsl
popf
sub
cmc
pop
and
popa
or
add
jp
cmp
pcmpeqb
and
mov
push
push
mov
out
dec
cmp
aam
ds
push
mov
pop
roll
movsl
dec
in
in
xchg
test
or
mov
addr16
jge
rcr
pop
roll
sti
lcall
test
cmpsl
cmc
pop
sbb
mov
and
xor
push
or
adc
lds
movsl
inc
dec
stc
std
mov
fidivs
push
loopne
xor
mov
aad
stos
out
fcoml
mov
test
jg
test
jne
lods
cld
stc
jle
cmpsl
xchg
pop
icebp
les
and
jge
push
movsb
das
mov
or
push
pop
leave
mov
add
and
jb
int3
inc
hlt
leave
arpl
xor
out
sbb
mov
ret
and
jge
pop
nop
test
xor
mov
sarl
ja
sbb
lds
cmp
dec
jge
jae
into
adc
add
mov
daa
subl
lods
enter
out
add
es
lea
inc
push
push
dec
je
bound
dec
mov
push
push
push
jmp
adcb
mov
adcl
mov
sti
movl
sub
cltd
imul
lldt
adc
inc
lahf
mov
mov
mov
sub
and
or
pop
xchg
jnp
jmp
ljmp
xchg
xor
sahf
in
jbe
enter
push
or
push
add
fsubrs
jle
arpl
push
or
dec
loopne
jle
jge
push
dec
sbb
push
popf
je
dec
fistpl
in
js
test
or
les
scas
outsb
fdivp
push
mov
mov
xor
cmpsl
jae
sarb
ret
push
and
xor
xor
dec
and
inc
inc
adcb
xor
cmpsb
mulb
sub
dec
daa
imul
outsb
or
ss
sbb
scas
ret
mov
scas
or
add
cmp
add
insb
inc
or
sbb
inc
dec
pop
movsl
push
shll
mov
or
sub
fists
pop
test
adc
jge
hlt
and
arpl
test
lds
sbb
inc
pop
stos
inc
pop
sub
sahf
push
iret
fucomi
cs
sbb
add
addb
imul
adc
cmovb
mov
fs
rcrb
insb
cmp
cmp
repz
inc
pop
shll
sbb
cmp
dec
ljmp
cld
ja
insl
pop
push
pop
out
mov
xlat
in
mov
xlat
or
xor
dec
lock
push
mov
int3
mov
js
push
enter
sbb
pop
mov
jns
push
ret
test
mov
sbb
cli
js
repz
adcl
xchg
bound
cmpsb
in
leave
mov
jecxz
jp
adc
mov
das
int3
pop
popa
add
mov
push
or
in
xor
sub
mov
mov
bound
pop
inc
jae
cmp
arpl
mov
fmull
cld
cmp
in
adc
iret
sub
test
loopne
mov
out
dec
call
out
fwait
and
js
repz
clc
les
cmp
dec
scas
hlt
jmp
adc
imul
adc
fmuls
pminub
xchg
aam
push
enter
jns
mov
jmp
push
pop
loopne
int
clc
pop
dec
pop
out
mov
cmp
add
imul
or
sbb
sub
push
and
mov
mov
and
sbb
test
xchg
cmc
pand
imul
mov
inc
inc
mov
das
dec
fwait
imul
adc
mov
mov
in
out
lods
jmp
loop
in
sbb
aas
lret
or
ficompl
sti
mov
adc
movsl
mov
and
or
orb
popa
arpl
xor
xor
pop
cmp
inc
cmp
jnp
fdivs
stos
dec
jge
ljmp
je
out
movsl
mov
or
sbb
in
jo
cmpl
addl
ret
mov
cmp
sbb
arpl
or
mov
aaa
dec
leave
jmp
std
and
push
test
filds
stos
ljmp
ror
aad
lahf
add
sti
scas
cli
dec
jne
mov
scas
add
sbb
outsb
push
xchg
push
addr16
shrl
cs
movsl
rorl
jmp
into
cmp
cmc
push
sbb
dec
cmc
loopne
std
jno
adc
pop
mov
mov
aad
clc
das
cmp
fcmovnu
or
or
imul
shlb
scas
jl
xor
adc
outsl
add
jnp
adc
pop
in
lret
sbb
sti
cld
push
or
hlt
mov
mov
stc
hlt
leave
xor
pop
pushf
pop
fistl
inc
ljmp
and
shll
arpl
or
mov
out
mov
pop
jns
dec
lcall
in
aaa
les
xchg
pop
sbb
sbb
inc
int3
sahf
mov
iret
dec
loope
aas
outsb
in
popa
daa
loop
mov
lret
aaa
loopne
push
jae
out
enter
cmpsl
cmc
sbb
daa
and
pop
pop
test
lret
fiaddl
aam
int
fisubs
test
jmp
ret
test
lcall
or
enter
out
pushf
loopne
sbb
dec
jnp
dec
out
xchg
or
rcll
mov
cmpsl
jbe
adc
test
cltd
in
jge
mov
out
stc
jb
jmp
inc
into
cmp
add
jmp
jp
push
out
inc
sbb
and
aaa
pushf
xchg
insl
cmc
ffree
pop
sarb
push
or
jle
add
lcall
jae
mov
or
daa
push
mov
fsubl
push
jg
jle
add
sbbb
adc
sbb
pop
mov
cmc
mov
and
adc
aaa
mov
or
outsl
cld
xchg
mov
dec
repz
in
cmp
xlat
mov
add
sub
xor
xchg
ret
out
test
je
pushf
scas
filds
popa
ljmp
cltd
out
sarl
add
insb
jo
fwait
decl
dec
jae
les
iret
loope
add
dec
mov
arpl
orl
inc
scas
lock
cmpsl
out
in
cld
inc
cmp
dec
pop
jo
cmp
dec
dec
pushf
mov
cli
cmp
sahf
inc
push
push
or
test
cmp
push
inc
fnsave
mov
xor
les
mov
std
push
adc
jbe
lret
dec
jns
hlt
repnz
mov
adc
loope
fsubrs
adc
iret
jnp
inc
pop
push
xor
cmp
test
jnp
cs
sbb
sbb
sbb
dec
test
loop
stc
pop
jge
into
lock
xor
jo
pushf
imul
mov
sbb
adc
jb
inc
sbb
inc
dec
sub
dec
mov
or
stos
pop
js
jecxz
mov
ds
mov
xor
pop
sub
push
push
mov
push
aad
loope
flds
fstpt
bound
xchg
loop
repz
out
xor
sub
mov
scas
es
push
mov
pop
or
repnz
mov
adcl
jecxz
sub
push
mov
dec
mov
cwtl
mov
outsb
push
iret
inc
push
mov
js
jmp
mov
mov
in
adc
les
add
push
add
mov
cli
xorl
sub
mov
aam
cmp
movsl
xchg
cmp
xor
out
rorl
repz
sub
cmp
jecxz
cli
lock
xlat
dec
pop
dec
xor
cs
clc
mov
push
cmp
dec
jns
or
lds
lcall
sbb
rorb
out
out
jg
jecxz
add
lahf
mov
clc
push
push
enter
jbe
sbb
repz
mov
pop
adc
es
xchg
xlat
xor
mov
iret
out
orl
jnp
xor
push
negl
jno
adc
je
mov
mov
mov
mov
mov
ss
mov
sti
push
xor
xchg
into
and
pop
and
jne
adc
inc
dec
subb
jae
and
mov
push
pop
outsb
inc
lcall
lcall
hlt
pop
inc
inc
or
add
inc
outsl
dec
lea
nop
inc
add
popf
xchg
cltd
pop
mov
shl
xor
xchg
add
sub
adc
movsl
cwtl
cwtl
jle
jb
repnz
push
sbb
push
hlt
jecxz
xchg
dec
popf
lds
addr16
rorl
adc
push
fs
lods
mov
push
mov
mov
jmp
push
push
dec
imul
and
pop
push
inc
and
pop
or
int3
test
jns
adc
mov
adc
xor
ja
mov
dec
fsubrl
pop
pmaxub
hlt
pop
cmp
out
pavgw
in
arpl
dec
pushl
add
sbb
movsl
cmp
dec
mov
out
test
mov
ds
dec
mov
xor
push
leave
je
shll
stos
scas
push
add
push
pop
stos
or
lea
test
addr16
out
jnp
lret
das
stos
and
mov
inc
gs
lods
push
inc
add
in
and
pop
and
adc
ror
jb
sub
sub
pop
push
jl
call
cmp
xchg
ret
sub
mov
add
mov
adc
lods
loopne
and
jl
or
mov
jbe
imul
scas
out
iret
pop
sbb
es
inc
mov
xchg
xor
in
je
movsb
cmp
nop
pop
sub
mov
lds
push
lods
xor
addb
mov
andb
bound
movsl
cmpl
int3
and
jge
aas
xorl
movsl
adc
imul
pop
xadd
jmp
mov
icebp
out
ret
out
and
adc
data16
push
test
call
testb
inc
xchg
das
movsb
mov
bound
push
sbb
pusha
or
mov
loopne
inc
loop
into
gs
es
fcom
jnp
repnz
cld
push
out
cmp
xchg
cmc
xchg
mov
xchg
cmpsl
bound
mov
test
popf
dec
inc
jo
test
mov
leave
clc
dec
push
mov
cmpb
aas
mov
pop
nop
mov
and
pop
loopne
and
or
scas
xor
sahf
fiadds
lock
test
lods
int3
inc
cmp
ljmp
mov
fmuls
sbb
sub
out
stc
mov
loope
loopne
cmpsb
push
clc
pop
xchg
hlt
cmp
roll
add
inc
mov
ret
xchg
adc
repnz
mov
add
movsl
cmp
or
popa
xchg
fildl
js
std
pop
ss
into
mov
lock
cmp
icebp
adc
dec
mov
mov
subb
fwait
stos
cltd
pop
xchg
call
pop
or
xor
push
adc
push
mov
push
in
leave
sbb
adc
inc
insl
sbb
ret
inc
sbb
xchg
data16
push
insl
aaa
test
dec
rorb
and
push
cmp
lods
daa
pop
fwait
push
sub
jle
dec
xor
xor
adc
fistl
ret
xor
push
out
aam
cmp
sti
adc
faddl
orl
pop
in
push
out
mov
mov
xor
and
adc
mov
test
aad
sub
cmpl
and
xlat
mov
cs
jmp
aaa
insb
mov
insl
xchg
cmp
movl
adc
pushf
test
fs
movsl
fisttps
mov
out
test
test
arpl
enter
movsb
inc
xchg
outsb
lds
or
stos
mov
call
xchg
dec
gs
popa
outsb
clc
mov
dec
or
ljmp
cld
fisubrs
xchg
mov
dec
scas
inc
add
jl
cmp
out
inc
js
push
dec
jmp
scas
test
lods
lods
xchg
mov
sarb
mov
inc
sbb
sahf
jno
mov
cmp
cmp
pop
lds
inc
jnp
cld
aad
les
mov
xorl
dec
aaa
pop
pusha
inc
mov
add
mov
mov
xchg
mov
decl
xor
mov
jo
pop
ljmp
inc
int
popa
and
sarb
and
jmp
push
add
jo
into
and
add
std
andb
mov
xlat
mov
inc
cld
lcall
sub
aad
cmpsb
lock
fwait
outsl
or
aam
ja
pop
movsb
push
xchg
rorb
adc
push
inc
jne
and
std
jg
std
adc
popa
push
lds
sbb
pop
outsb
mov
loop
scas
cmpb
mov
cmp
dec
addr16
jp
mov
test
xor
lods
jo
cmp
jbe
sbb
aas
or
cmc
int
fstpt
sti
flds
sub
rcrl
out
jno
mov
ds
sbb
adc
jns
outsl
push
jg
lods
mov
sub
les
jns
aad
mov
dec
add
call
lea
pop
repnz
dec
jmp
dec
adc
add
or
js
dec
dec
test
xchg
sbb
push
sti
shl
adc
movsl
dec
or
div
dec
cmp
aam
es
cli
push
jmp
in
insb
loopne
mov
cmp
cli
mov
les
scas
iret
icebp
mov
std
ret
insl
sbb
lds
jo
sbb
and
fcoml
aad
lret
shr
jae
cmp
pushf
fcom
mov
fcoml
or
int
push
jle
mov
add
cwtl
jle
cli
add
mov
js
jg
aaa
orb
fsts
xchg
push
push
daa
test
inc
mov
arpl
inc
test
dec
insl
push
add
xor
mov
xchg
xchg
push
xor
hlt
pusha
out
in
call
sbb
inc
outsb
jno
in
jae
subb
pop
or
jne
arpl
cmp
push
add
movsb
leave
xchg
loope
mov
lds
outsb
outsl
mov
pop
push
xlat
mov
xor
enter
stos
ja
hlt
xchg
lcall
xor
insb
mov
fdivs
rorl
cmp
adc
cwtl
lock
in
sahf
aas
sbb
lcall
insl
into
sub
in
pop
xor
sbbl
xlat
mov
jb
xor
inc
js
rcll
mov
xor
add
add
test
pop
call
xchg
add
push
mov
je
jb
push
imull
and
and
pop
mov
dec
leave
inc
dec
mov
adc
out
inc
pop
jp
xchg
fwait
xor
add
testl
or
loop
inc
lock
fwait
in
jae
outsb
cmpb
cltd
fwait
rcrb
mov
jp
inc
jg
jg
mov
ret
sbb
cmpsb
dec
insb
dec
mov
sub
fwait
and
je
out
inc
jo
mov
out
repnz
fmull
fsubrl
out
clc
inc
shr
in
inc
jle
sbb
lock
add
add
pop
xchg
push
out
jmp
cmp
or
pusha
cmp
or
test
pop
push
ret
loopne
or
sahf
sub
mov
adc
stos
imul
jge
push
test
mov
pusha
int
movsb
mov
jecxz
shlb
out
test
xchg
mov
xor
adc
sub
popf
mov
mov
sub
cmp
mov
or
popf
and
das
xor
inc
fldz
std
lods
je
stos
xor
inc
sub
jl
mov
mov
pop
outsl
popf
stc
mov
or
sbb
ficomps
iret
cld
inc
aad
push
stos
aad
iret
jno
vpermt2q
shll
sbb
addr16
popa
fdivrl
movsb
dec
mov
dec
lcall
sarl
jne
sbbb
cmpl
xor
inc
sub
xchg
xor
frstor
cmp
inc
adc
adc
je,pn
sbb
loope
nop
adc
sar
mov
enter
dec
push
cmp
lock
mov
pop
test
lcall
pop
jl
inc
xchg
push
mov
and
and
lock
sbb
imul
push
ja
mov
inc
sbb
in
into
cmp
call
jns
jbe
jmp
add
lea
push
mov
mov
jmp
xchg
aas
shrb
sub
jbe
imul
lahf
cmc
xor
push
cmc
imul
out
adc
or
xchg
pop
inc
xchg
test
mov
andb
jae
std
call
inc
jle
sub
lods
mov
es
add
lret
popa
cmp
cmpsl
inc
fwait
xor
cmc
call
out
out
cmpsb
sub
fstl
mov
lret
cmp
test
rcrb
sti
call
repnz
pop
xor
jb
adc
push
push
lret
lcall
mov
dec
push
inc
ds
or
mov
shrl
jg
fildl
lea
in
vpmulhw
ljmp
or
pop
pop
and
inc
out
push
mov
pop
xchg
jo
stc
mov
out
aam
add
mov
outsb
cmc
dec
inc
mov
and
cs
jl
loope
mov
mov
int3
mov
mov
jle,pn
es
cs
in
fbld
ficomps
popf
daa
sbb
cmpsl
mov
jmp
jae
incl
cmpsl
cmp
mov
cwtl
std
and
push
jne
mov
in
add
imul
mov
xor
inc
add
jg
jns
push
insb
mov
dec
cmpsw
mov
shll
daa
push
cmpsb
fdivrs
or
ret
dec
subl
rcrb
xor
pop
test
in
cli
lahf
out
pop
push
add
pusha
leave
ja
cmp
mov
inc
mov
add
xor
imul
mov
mov
and
out
jmp
les
notb
stos
sbb
jo
push
cmp
fstpl
adc
push
loopne
imulb
mov
or
push
filds
cmpsb
iret
pop
imul
xor
insb
in
add
push
jle
leave
add
jle
cmp
and
cmpsl
shlb
sbb
cmp
lcall
pop
jecxz
mov
and
cmpsl
push
mov
mov
or
outsb
cmp
or
sbb
pushf
hlt
add
lock
es
lret
bound
dec
or
push
xor
lds
daa
add
jmp
lock
jo
sbb
mov
mov
push
neg
sbb
mov
xchg
cld
int
jl
inc
hlt
or
dec
cmpl
scas
cs
add
fbld
scas
push
enter
push
xor
cmp
pop
pop
push
fstl
ja
mov
add
sbb
ret
stos
fdiv
jmp
and
into
adc
daa
test
adc
dec
inc
inc
inc
adc
or
pop
into
xor
cwtl
stos
jo
mul
dec
or
add
in
seto
or
xchg
adc
int3
enter
push
and
imul
sahf
inc
sarb
mov
or
mov
stos
pop
test
iret
cmp
add
scas
push
pop
push
sbb
stc
sbb
push
sub
ret
cmp
push
divb
repz
in
mov
mov
or
cltd
hlt
cmp
cmp
neg
or
ret
sbb
push
adc
loopne
add
shll
push
cmp
sub
mov
popa
std
popa
test
mov
mov
in
xor
fnsave
jle
add
xchg
sbb
xor
ds
jo
jne
jo
sub
and
inc
mov
adc
cwtl
out
mov
movsb
sbb
nop
lods
xchg
cmp
ja
addr16
loopne
adc
in
xor
je
mov
add
sbbl
mov
aad
clc
arpl
cltd
out
mov
mov
lcall
shll
rcll
jmp
cs
sub
mov
xor
call
subb
cmp
pop
loopne
or
cmp
pop
out
out
pop
testl
jno
cli
adc
mov
dec
les
fdiv
dec
inc
ss
sahf
xchg
cmc
dec
lea
pop
jb
mov
add
push
push
popa
cld
hlt
sbb
pop
imull
in
stos
das
push
inc
insb
push
lret
sub
dec
sahf
inc
mov
add
mov
inc
fisubrl
scas
je
sahf
push
rorb
cmp
daa
mov
cmp
imulb
adcl
js
pop
mov
xorl
rcl
cwtl
ljmp
test
add
fstps
inc
dec
push
or
inc
jp
dec
push
jle
repz
cmp
insb
rol
cmpsb
cmp
jne
ds
fiaddl
adc
and
pop
repnz
fs
mov
neg
jmp
cmpsb
notl
fstpt
mov
jno
data16
lret
mov
into
cmova
ja
ret
pop
xchg
jbe
imul
fldenv
cmpsb
dec
pop
out
jbe
lock
push
sub
add
cmp
enter
fimuls
mov
scas
or
jne
adc
pop
xchg
ja
mov
inc
dec
movsl
and
int3
into
and
cltd
pop
jns
mov
aas
lcall
dec
popa
rclb
cld
add
xchg
inc
mov
cmpsb
enter
mov
fstl
mov
pop
lret
stos
sbb
pusha
scas
in
mov
icebp
aad
shll
fisttps
pusha
insl
mov
push
out
pushf
rclb
push
loope
hlt
sub
scas
inc
pop
fnstcw
mov
ret
inc
in
sbb
jmp
je
enter
push
adc
in
sbb
out
arpl
and
pop
imul
or
pushf
sbb
call
insl
mov
cwtl
mov
incb
sub
push
in
adc
mov
aas
imul
pop
sbb
mov
mov
imul
popf
packsswb
or
push
add
xchg
jbe
dec
jle
int
leave
sahf
roll
mov
and
cmc
rcr
outsl
outsl
decb
xor
pop
into
or
bound
lods
jbe
ljmp
hlt
test
pop
ds
nop
adcl
adc
imul
dec
inc
mov
jne
fldl
mov
cmp
sbb
xlat
and
movsl
enter
icebp
xchg
test
rorl
pop
xor
sub
fisubrs
jne
call
pop
in
pop
pop
les
push
sub
sti
sub
rcrb
jb
ljmp
in
cli
pop
ss
test
mov
cmp
sbb
pusha
cmp
ret
mov
xchg
cmp
cli
cmp
push
pusha
loope
sub
aas
shll
lea
ficoml
add
inc
sub
mov
ficompl
cmpsl
fisttps
mov
mov
mov
sahf
cmp
test
and
imul
and
rorb
rclb
call
jg
mov
inc
insl
mov
and
xchg
lods
jns
lret
cmpsb
mov
sti
mov
into
or
lods
adcl
dec
add
jno
shll
lahf
adc
ret
movsb
jp
in
aam
lods
push
out
mov
rcrb
or
enter
adc
cmp
lcall
inc
out
std
sbb
std
push
shll
jns
insl
imul
pop
aas
dec
mov
add
sub
mov
dec
movsl
cmp
fsubs
mov
adc
repz
add
sub
mov
dec
mov
ds
nop
sbb
lods
jno
and
sub
pop
mov
in
sub
lods
mov
ret
popa
mov
and
cltd
mov
push
lods
fsub
cli
sbb
and
inc
xor
cmp
inc
sti
add
outsl
roll
rorl
addr16
repnz
pop
and
lret
mov
xor
dec
mov
mov
imull
push
sbbl
jo
arpl
dec
inc
imul
insb
push
cmp
sbb
mov
std
mov
popl
pushf
inc
ret
out
out
or
fsts
inc
mov
clc
xor
xor
ror
mov
out
clc
pop
cmp
mov
loopne
lea
inc
test
cld
jmp
push
idivl
jbe
stos
cmp
pop
fcompl
jbe
mov
outsl
loop
iret
fsts
sahf
into
dec
or
repnz
clc
mov
loop
fadds
cmpsb
pusha
out
sub
bound
roll
push
xchg
dec
loopne
add
inc
rorl
jl
xchg
or
adc
dec
xchg
dec
mov
cmp
mov
push
test
fdivl
mov
xor
cmp
add
fwait
xlat
testl
pop
adc
cltd
mov
xor
mov
xchg
mov
jns
xor
lods
loop
cmp
outsl
push
inc
ret
cld
or
incb
and
data16
xor
gs
cltd
push
xor
or
ficompl
push
adc
jbe
xchg
adc
adc
lret
sarb
push
ja
in
in
inc
sbb
xchg
sahf
add
and
insl
inc
test
ret
xchg
xor
add
mov
adc
pushf
cld
mov
jg
test
pop
adcl
inc
clc
movsl
xchg
es
dec
or
fcoms
lds
rcrl
dec
test
fwait
jb
sub
add
sbb
mov
shl
pushf
xchg
subb
mov
pop
test
adc
sub
inc
or
hlt
pop
cmpsl
pushf
inc
int
dec
pushf
inc
loope
adc
push
lea
or
mov
mov
lods
shlb
fisttpl
mov
ds
xchg
adc
jne
nop
sub
sahf
add
jae
or
push
cmc
jecxz
mov
lods
and
mov
sbb
gs
das
aad
imul
mov
mov
mov
dec
add
sbb
aaa
and
arpl
popa
pop
push
mov
mov
pop
xchg
jnp
sbb
in
ss
sti
aam
cmp
push
and
sti
gs
pop
out
sbb
into
shlb
daa
dec
les
jae
fwait
mov
inc
mov
mov
stc
imul
and
rcrb
jg
jle
lcall
faddl
call
ror
mov
pushf
sub
fisubl
dec
inc
fucomi
sti
sbb
and
push
mov
cmp
sub
adc
aaa
and
mov
inc
and
fimuls
inc
jmp
stos
js
mov
das
adc
xchg
je
xorb
sbb
fcoms
adc
ss
cmp
xchg
add
push
adc
int3
stos
mov
push
sub
scas
aaa
loopne
jmp
cmp
loope
push
ds
in
lods
cmpsl
sub
mov
repnz
stc
testb
test
test
in
lds
add
pop
jb
sub
and
cli
jge
jle
idivb
cltd
stos
dec
fisttpl
mov
lods
push
mov
add
fidivl
jp
pusha
mov
hlt
int3
xor
xchg
cltd
xor
dec
xlat
jnp
mov
jne
sbb
rcrb
movsl
sub
loope
cs
mov
stc
call
sbb
out
adc
push
dec
inc
les
adc
and
sub
xor
mov
fcmovne
xor
adc
repz
outsb
jl
jge
add
sbb
xchg
xchg
pop
cs
arpl
pop
sub
fwait
and
data16
in
fisubl
stos
repz
jle
scas
jnp
sbb
fs
sub
fildll
push
lods
inc
xor
and
stos
mov
loopne
push
pop
add
jo
hlt
lea
lock
cmpsb
fmull
lahf
xchg
movb
dec
ret
jle
lcall
cli
ja
shl
daa
repz
orl
cwtl
lea
adcl
testb
or
imul
cmp
xor
xor
jecxz
and
in
cmp
imul
test
popa
xchg
mov
sub
or
in
push
into
popf
cltd
pop
xchg
inc
ss
jno
stos
pusha
test
int3
jecxz
stos
shrb
call
das
inc
repz
sbb
and
stos
enter
sub
fsts
sbb
push
cmc
or
aad
jo,pt
mov
xor
cmp
out
xchg
dec
lahf
mov
fistpll
and
cwtl
out
testl
sbb
nop
xchg
notb
xchg
adc
mov
xor
or
inc
adc
adc
jno
push
mov
loope
les
mov
mov
outsl
pop
xor
or
push
movsb
push
jmp
sub
push
cmpsb
test
dec
mov
pop
aas
cld
popa
shr
mov
lahf
jle
cmp
jp
mov
sub
pop
ret
addl
aas
out
fsqrt
sbb
mov
outsb
sahf
popa
xor
in
jge
jecxz
pushf
jnp
or
enter
pop
pushf
mov
fdivrp
add
push
push
dec
pop
aaa
adc
or
imul
nop
xchg
loopne
movsl
fimuls
push
jb
mov
das
jmp
push
cmp
inc
inc
stos
rolb
imul
mov
jae
flds
aas
push
mov
imul
in
jmp
xchg
and
push
inc
mov
xchg
je
push
movsl
or
sarb
icebp
int
call
enter
adc
mov
mov
xchg
lock
or
imul
xchg
addb
mov
je
jnp
inc
add
aam
bound
fdivs
jg
cmp
jae
add
jno
mov
dec
xchg
ja
pop
dec
hlt
int
lds
scas
sbb
xor
les
and
addb
out
xor
lds
dec
test
cmpsb
inc
les
push
and
mov
xchg
jmp
lahf
jo
lea
lret
les
rolb
jne
add
and
sbb
inc
daa
mov
js
mov
pop
pop
jg
cld
push
sbb
add
xchg
push
mov
or
fwait
ljmp
ljmp
outsb
add
fwait
pop
out
mov
repz
mov
add
xor
pop
scas
bound
cmp
mov
mov
jns
ds
xchg
adc
cmpsl
jmp
leave
aam
int
in
fldt
fxch
lcall
sub
cmpsb
and
jp
mov
popa
adc
pop
sub
fdivl
in
or
or
rcrb
cmp
sub
or
lock
test
jmp
and
rcrl
mov
xor
negb
loop
inc
mov
popf
cmp
out
or
or
in
int
fadds
dec
pop
ret
pushf
int
fiadds
les
fcmovbe
xchg
xchg
cwtl
out
xchg
inc
xor
pop
iret
xor
out
cmp
daa
outsl
and
sti
inc
adc
jle
daa
sbb
jp
cmp
movsl
jb
test
fucomip
mov
pop
aaa
add
sub
and
mov
add
sti
orb
aad
xor
or
mov
cmp
aam
cld
cmp
hlt
xlat
lds
fldcw
inc
dec
xor
xchg
pop
mov
ret
push
jle
int
fprem1
add
xchg
fs
push
jg
aad
fcompl
aam
pop
dec
aad
lcall
lds
das
and
sbb
adc
push
scas
scas
sbb
cs
and
push
int3
pop
dec
data16
cwtl
nop
add
xor
aas
mov
popf
inc
sbb
adc
ljmp
xchg
sbb
in
test
inc
loop
test
ret
inc
lock
scas
cmc
sub
out
rorb
adc
dec
int3
xor
adc
xchg
dec
pop
cmp
jge
xchg
mov
cltd
stos
sub
repz
mov
cli
stos
data16
aas
out
mov
jno
imul
cltd
divb
lods
mov
hlt
pushf
iret
push
xchg
ja
jo
adcb
cmp
repnz
lret
inc
pushf
fbstp
or
lcall
jp
dec
enter
test
mov
xor
or
dec
mov
xchg
jns
out
jmp
fimull
xchg
mov
xchg
add
mov
mov
mov
aas
fcomp
fsubr
xchg
adc
nop
sbb
jg
imul
and
in
movl
icebp
push
dec
sub
xchg
jnp
mov
jle
fadds
mov
inc
sahf
fwait
jmp
lret
jmp
in
adc
adc
test
dec
test
mov
pop
fmul
mov
arpl
inc
mov
push
out
lcall
shrl
adc
xor
dec
std
dec
cld
mov
pop
jo
or
adc
adc
mov
push
stos
xchg
xchg
jns
cmp
mov
pushf
jp
inc
xchg
std
into
pop
xchg
data16
mov
or
decb
pop
push
lret
icebp
loope
cltd
inc
gs
dec
cmpl
ja
insl
cmc
cmpb
cltd
add
mov
adc
inc
sbb
imul
mov
cmp
sti
andb
bound
iret
imul
fldcw
mov
sti
mov
dec
sti
mov
je
psubusw
jecxz
ret
test
cld
xor
cmp
mov
push
sarl
lahf
shlb
frndint
xor
fxch
jg
leave
cmp
inc
mov
out
jnp
add
cmp
push
cmp
addr16
adc
add
shr
sbb
movsl
mov
sarl
ficoml
dec
test
stc
fwait
sub
clc
cs
cmp
lahf
inc
out
jecxz
aaa
testl
pop
insb
sahf
or
testb
mov
jge
aaa
sub
test
sbbl
inc
push
or
dec
cmp
sub
and
scas
cmp
int3
mov
xchg
inc
push
pop
imul
cmp
ret
test
add
clc
pop
pop
data16
sub
incb
movsb
fidivrs
lcall
loopne
jle
idivb
mov
out
incb
in
cmp
xchg
xchg
in
rolb
cmp
clc
aad
inc
or
and
mov
cmp
mov
inc
and
inc
add
call
fimuls
jmp
push
push
mov
pushf
pusha
or
cld
mov
shrl
sub
jo
adc
add
loope
push
or
push
or
iret
and
movsb
sbb
sub
or
int
or
out
ja
mov
pushf
int
outsb
fistl
mov
mov
jmp
sbb
adc
pushf
pop
shll
jo
mov
sub
rcrl
fidivl
and
sbb
andl
adc
adc
sahf
fwait
sbb
push
repz
shr
addr16
cli
rcrl
mov
inc
add
les
dec
sar
cmp
add
cmp
roll
mov
inc
push
fld
adc
push
xchg
fmuls
sbb
cmp
shrl
mov
sti
insl
mov
inc
jp
jl
lods
xchg
mov
sbb
and
jne
fnsave
lcall
sub
jo
push
lock
loop
and
cmpsb
test
sub
add
xchg
dec
mov
pop
adc
jnp
and
shrl
fwait
pcmpgtd
cmpsl
or
fstpt
sahf
dec
call
mov
imul
or
insl
push
inc
test
xor
sbb
int3
hlt
sbb
add
jbe
mov
cmp
jle
xchg
pop
xor
dec
mov
sahf
and
pop
cld
sbb
push
pop
ffree
push
xorb
adc
push
pop
test
dec
jecxz
sub
cs
fistps
mov
leave
imulb
sub
int
dec
fnstenv
ljmp
pop
out
jmp
mov
mov
fsubr
loop
sub
push
jge
inc
push
mov
push
out
repnz
mov
xor
outsb
jl
test
xor
jb
push
jno
push
jnp
clc
cwtl
out
icebp
xor
or
ror
or
fisubl
mov
in
cmp
inc
xor
imul
faddl
testl
xor
fucomi
fsubrl
add
jle
push
out
mov
sahf
icebp
xor
fmulp
aad
xor
jl
icebp
lret
mov
jecxz
and
inc
sbb
xchg
jmp
mov
in
stos
leave
jne
mov
test
xchg
xchg
mov
gs
inc
mov
rcl
cmp
xchg
pop
shll
mov
inc
test
sub
xor
ret
fdivrs
pop
cld
lea
or
arpl
add
inc
mov
add
or
subl
mov
xchg
mov
movsb
or
jbe
lods
mov
sub
and
adc
xlat
sarb
add
lahf
push
fdivl
xor
push
fwait
and
repnz
cwtl
adcb
adc
lcall
sub
push
push
xchg
mov
or
outsl
repz
icebp
mov
clc
push
sysret
in
sub
ret
mov
mov
je
insb
scas
outsb
arpl
mov
loop
stc
mov
mov
in
pop
push
dec
dec
adc
repnz
jnp
jecxz
lahf
call
ret
adc
pop
mov
fldt
divl
xlat
repnz
outsb
jae
pop
in
sahf
dec
push
in
icebp
xchg
mov
stos
in
into
cmc
mov
push
pop
icebp
shl
xchg
sar
xchg
xor
out
dec
movsb
mov
sub
outsb
aam
hlt
jns
add
jge
jp
insb
mov
jge
dec
test
dec
jne
sub
push
btr
pop
push
stc
gs
mov
xchg
push
ret
test
jle
into
out
mov
push
int
lret
jle
outsb
add
cmp
sbb
cld
mov
push
pop
out
and
adc
pop
aad
jp
jns
cwtl
in
pop
xchg
xchg
push
pop
lcall
cmp
shlb
pop
jnp
ja
push
cmp
jns
jle
js
lods
out
push
aam
iret
fs
loope
enter
xchg
in
leave
pop
sub
mov
movsb
jae
fidivrs
sbb
das
bound
xlat
push
sub
add
push
pop
jl
mov
xor
push
mov
sub
pop
jmp
push
dec
xchg
in
icebp
add
sbb
shlb
sub
pop
call
push
jbe
pop
push
inc
dec
idivl
lea
fs
sbb
pop
inc
inc
and
mov
xor
add
test
mov
xchg
push
push
out
or
fisubs
andl
xchg
xor
pusha
pop
cli
inc
cmp
cmpsb
cwtl
jnp
adc
adc
into
fdivl
xchg
cmp
mov
jbe
push
jne
dec
leave
repz
push
mov
cs
clc
inc
xchg
sub
roll
xchg
inc
call
mov
pop
test
es
xor
dec
ret
jmp
sbb
xor
and
scas
or
repz
ds
xchg
inc
adc
fadd
stos
add
decb
imul
outsl
mov
pop
insb
jg
mov
stos
loop
repnz
xchg
jp
xchg
sti
rcrb
pop
push
pop
mov
fisttpl
loopne
ljmp
mov
fstl
cld
pop
fisubs
mov
mov
push
xor
push
cs
push
icebp
xor
fiaddl
jle
std
insl
aam
cld
addr16
ss
mov
arpl
adc
pop
xor
jge
sbb
cmp
mov
sub
dec
aaa
xlat
testb
adc
or
and
mov
add
push
pop
pop
in
pop
jno
and
lds
cs
jne
mov
ror
dec
mov
addr16
leave
inc
xchg
jmp
pop
aaa
inc
inc
mov
insl
aaa
sbb
jl
pop
cmp
add
push
test
mov
rorb
push
movsl
xchg
mov
sbb
mov
push
sbb
lods
mov
sbb
cmc
paddsw
dec
push
clc
dec
loope
out
pop
fbstp
lret
insl
outsl
sbb
rclb
jo
push
mov
rcrw
ss
dec
mov
popf
fsubrs
jl
mov
lret
scas
xor
mov
inc
rorl
movsb
pushf
pop
jmp
ds
push
xchg
fs
int
ljmp
mov
fucomp
and
mov
div
pop
pop
xor
fmulp
mov
xor
dec
push
pusha
xor
stc
push
lea
sub
mov
lret
mov
adc
push
dec
jmp
mov
icebp
fildl
inc
arpl
xor
dec
jle
sahf
aaa
mov
aas
or
mov
sbbl
lcall
pop
lods
mov
jbe
daa
push
sub
mov
movsb
or
test
cltd
int
cmc
xchg
sub
addr16
dec
sub
gs
pop
aad
inc
out
cltd
movsb
mov
jo
inc
fistps
push
cmp
or
imul
inc
xchg
or
sbb
daa
ljmp
lods
addr16
aas
jle
or
out
sbb
call
shlw
push
clc
cld
cwtl
popa
dec
arpl
mov
sub
push
test
jl
addr16
pop
outsl
test
cmp
cmp
rcr
popa
adc
sub
and
call
leave
lea
loopne
daa
ja
xchg
or
xchg
adc
sahf
std
lret
mov
adc
test
out
dec
dec
push
je
cmpsb
mov
shrb
das
movsl
push
lods
cmpsb
jp
wbinvd
sbb
in
into
popf
ja
mull
inc
aad
add
das
cltd
scas
push
cmc
int
cld
sub
inc
push
pushf
arpl
sbb
gs
ja
out
in
dec
pop
push
cld
xchg
repnz
std
xchg
jno
mov
dec
lds
jecxz
cmpb
lea
aad
fmull
mov
jb
sbb
fwait
mov
ret
mov
add
pop
sbb
lods
fstpt
xor
hlt
clc
andb
cli
mov
flds
test
pushf
sbb
xchg
mov
fisubs
xchg
addr16
movsl
mov
cmp
jo
mov
xor
lahf
adc
push
pop
push
cmp
and
adc
lahf
mov
jp
inc
mov
xorl
js
dec
addb
sub
dec
mov
adc
scas
push
adc
xor
loop
stos
cmc
jl
pushf
mov
mov
fnstenv
popf
shll
mov
cmp
inc
loop
jl
adcl
addr16
jmp
stos
cmp
dec
mov
push
mov
stc
enter
je
lods
add
sarl
test
jl
rorl
and
mov
cmp
mov
xchg
add
mov
repnz
sbb
mov
test
pop
fcmovne
xchg
mov
or
fldcw
or
stos
cmpsb
pop
movsb
leave
push
xchg
fmuls
cmp
loope
jb
mov
jmp
out
cli
mov
push
out
add
ret
add
adc
inc
jb
out
mov
in
pop
icebp
xchg
add
xchg
ss
fidivrs
sub
aad
jle
inc
or
sub
mov
pop
mov
mov
mov
leave
ja
lahf
out
push
pusha
pop
lods
and
rcrb
cmp
fistpl
jmp
shlb
sub
lret
in
and
xor
push
or
dec
jg
es
lods
inc
lea
addl
sbb
add
frndint
cmp
jg
insb
insb
adc
bound
sbb
les
test
movsl
lcall
inc
xchg
dec
mulb
jmp
dec
jmp
int3
pop
aam
adc
addr16
mov
jns
mov
or
xchg
lods
and
lret
out
jle
lret
out
enter
and
movsb
ret
adc
sub
pop
jb
dec
in
imul
insb
jecxz
leave
adc
or
jo
mov
sbb
bound
gs
lahf
imul
roll
adc
jno
mov
mov
jae
and
mov
test
inc
mov
add
pusha
stos
jmp
repz
sub
inc
repz
sub
pop
and
cmpsl
aad
or
popf
cmp
push
popa
sub
xor
mov
push
stos
sbb
in
fs
jg
test
aas
lret
push
jo
fwait
mov
push
jne
pop
sbb
jp
mov
mulb
aam
call
jp
cmp
bound
xchg
addr16
add
mov
ficompl
mov
lods
add
cmp
add
data16
dec
leave
push
cmpb
out
mov
adc
jno
and
inc
and
dec
lret
sbb
aaa
xchg
mov
dec
into
mov
movsb
jge
pop
jp
bound
adc
sub
sbb
xorb
and
mov
xchg
inc
arpl
addr16
cmc
mov
inc
pop
xor
daa
pop
leave
das
ss
xchg
ljmp
scas
dec
stc
jg
cld
mov
mov
arpl
pop
push
lret
lds
dec
aam
ljmp
cmpsl
push
cmp
jb
dec
or
and
inc
sbb
jg
in
dec
ja
jae
imul
cs
cmp
scas
add
xor
sbb
push
aaa
or
out
add
inc
in
test
addr16
enter
cmpsb
cltd
add
adc
pop
lods
dec
add
mov
inc
outsb
jmp
cmpsb
in
repz
out
out
xor
mov
adc
pop
dec
xor
mov
movsl
xor
mov
lea
cmp
jae
cmp
dec
ljmp
inc
das
mov
icebp
bound
cmp
jne
out
add
xor
fnstcw
lret
inc
inc
daa
scas
jge
mov
lds
mov
adc
or
xchg
dec
ljmp
xlat
pop
mul
push
ds
lret
xchg
mov
nop
out
add
ror
mov
rorb
daa
das
xchg
in
lods
loope
sub
xlat
aam
cmpsl
aam
dec
jmp
cmp
or
xchg
sub
sbb
mov
and
mov
ret
jns
fwait
or
adc
test
sbb
sbb
imul
inc
dec
inc
ds
pop
lcall
es
mov
add
ret
in
ror
dec
into
test
xlat
and
lcall
test
scas
sbb
cmpl
xor
jecxz
fisubs
iret
xor
push
loop
sbb
icebp
xor
arpl
insb
cmp
add
movsl
aaa
mov
adc
mov
clc
into
ss
aam
jno
hlt
rcrl
loopne
or
mov
jno
leave
pop
mov
sahf
loope
cmpsl
shlb
or
xchg
mov
out
mov
sub
mov
or
and
out
aam
or
test
fidivl
fiadds
and
ret
jbe
adc
jne
mov
gs
xor
fistl
lods
imul
imul
loope
scas
jecxz
jbe
jnp
fidivs
and
lods
stos
int
push
inc
mov
sbb
std
fidivl
daa
inc
lret
add
int
add
dec
pop
imul
pop
add
mov
fdiv
lods
addr16
sbb
shlb
outsb
das
popa
loope
add
adc
mov
add
mov
mov
add
andl
pop
jp
pop
lret
xor
sbb
push
adcb
add
out
daa
iret
int3
push
out
sub
cwtl
sub
stc
xchg
cmp
xchg
sarl
shl
mov
mov
mov
lock
in
xor
inc
ds
shll
sti
outsb
imul
fldl
mov
movsb
daa
adc
mov
xchg
fs
notb
test
movsl
jp
mov
inc
cltd
add
dec
in
inc
sbb
or
push
push
push
mov
pop
aaa
aam
in
int3
popf
outsl
push
jo
fcoml
and
dec
and
or
push
clc
xchg
push
test
dec
ja
dec
add
and
cmpsb
xlat
das
add
pop
ret
ljmp
mov
divl
xchg
insb
aaa
adc
decb
std
pop
fdivs
jg
inc
ret
or
mov
push
cli
or
and
inc
xchg
adc
xor
mov
push
pop
and
xor
mov
and
pusha
mov
je
in
xchg
cmp
jae
ljmp
jb
fistl
xorb
outsb
xchg
in
lods
jmp
xor
aam
mov
lds
jle
ret
xchg
inc
jle
cmc
imul
add
sti
jmp
aam
ret
in
out
enter
sub
cld
lea
ret
es
xchg
sub
fistps
nop
or
js
fcom
scas
int
mov
or
lea
sahf
jp
cmpsl
mov
loopne
icebp
sbb
notl
push
jge
sub
jp
jne
stc
or
mov
bound
shl
jge
ss
fisttpll
pop
addr16
popa
add
dec
gs
mov
lods
aad
jbe
das
js
mov
movsl
aaa
dec
xchg
pop
push
push
or
sub
mov
jmp
std
test
adc
mov
nop
dec
cli
push
in
push
scas
inc
lret
cli
pop
dec
mov
jp
cld
push
inc
xchg
scas
push
lods
cs
out
cmp
pop
adc
cwtl
mov
jb
cli
in
sbb
out
pop
jo
sub
mov
or
fwait
fs
push
mov
mov
ljmp
cli
cmp
xchg
outsb
xor
call
push
jns
xchg
sub
add
sub
dec
in
sahf
dec
fs
pop
pop
cli
dec
pushf
pop
xchg
lret
adcb
js
jne
shrl
sub
cli
scas
lret
xor
mov
rolb
jne
test
adc
lret
mov
mov
int
jge
sub
or
jb
les
dec
testb
out
out
mov
cmp
dec
test
rcrl
push
loopne
ret
cmp
lock
pop
int3
xor
sbb
test
and
andb
jb
inc
sub
or
jle
in
xor
push
sbb
mov
rcl
pop
push
push
pop
lcall
cs
insl
cmp
daa
jbe
ja
lret
inc
add
xchg
in
add
test
dec
mov
pop
push
sbb
lock
les
lret
mov
test
pop
fsubl
sbb
mov
cli
loope
in
loope
add
in
mov
ret
adc
outsb
add
fldt
jmp
jle
push
ret
scas
fsts
rcrb
dec
push
bound
movsl
cmpsl
mov
xor
dec
mov
shrb
sbb
xor
push
and
inc
rcr
call
cwtl
stos
pop
popf
jne
sub
out
cwtl
xor
push
cmp
mov
cmp
push
xchg
fmull
les
mov
mov
sahf
inc
mov
lock
scas
push
insl
scas
dec
mov
shrl
or
jo
pusha
cmovl
fdivrl
jno
jnp
mov
ljmp
sbb
ds
or
push
stos
jns
inc
add
cmc
repz
mov
adcb
xor
lods
mov
mov
add
sub
shl
insb
xlat
push
sub
jp
xchg
add
sti
add
cmp
call
nop
and
xchg
jne
push
or
jns
data16
push
cmc
mov
adc
sbb
dec
and
mov
enter
xchg
jg
test
andl
into
and
push
xchg
pushf
mov
adc
fimull
leave
mov
aas
sub
cmp
arpl
pop
or
inc
cmp
jb
inc
ret
vmwrite
lds
sbb
add
or
or
xchg
fwait
daa
testb
jle
xchg
xor
ja
enter
pushf
cmp
cmpsl
pop
mov
ret
adcl
in
fistl
sahf
push
faddl
jns
cmp
hlt
mov
scas
push
cld
pop
mov
pop
pushf
dec
inc
add
sub
lds
dec
xor
push
cld
xchg
out
bnd
adc
pop
leave
inc
into
inc
inc
inc
xchg
xor
scas
imul
ds
jge
or
or
jae
cmp
icebp
adc
push
cwtl
inc
sub
sbb
imul
sub
xchg
mov
mov
fwait
mov
shlb
in
mov
xor
mov
jmp
stos
xchg
testb
nop
cld
push
or
mov
rolb
inc
lods
gs
or
test
inc
mov
mov
dec
into
inc
xchg
mov
test
sub
mov
or
insl
or
fcmovnb
lahf
mov
pop
dec
cmp
in
popa
test
cld
lahf
test
cmp
aad
out
dec
pop
cmp
pop
lds
xchg
mov
pop
sbb
push
stos
push
add
push
mov
pop
out
pusha
ret
inc
mov
add
out
stos
sbb
ljmp
clc
in
lods
arpl
cld
fidivrs
pushf
mov
sub
ja
and
out
pop
sub
mull
arpl
pop
in
mov
lock
mov
rcrb
and
pop
inc
push
out
lahf
push
mov
mov
jne
adc
ja
xchg
das
outsl
or
mov
pop
sub
aad
outsl
mov
cmp
push
mov
mov
adc
addr16
jmp
cmpsl
filds
sbbl
lods
mov
inc
lods
shll
sub
mov
andl
xor
add
cmpps
mov
jo
or
addb
sbb
lret
dec
insb
or
and
rclb
mov
fnsave
add
and
loopne
cltd
lds
xor
movsl
sub
daa
cs
xchg
sub
inc
sub
push
data16
mov
add
rol
mov
and
sub
cmpsl
aam
or
push
lret
xchg
ja,pn
adc
shl
aas
std
or
jno
push
xorb
inc
pop
stos
popf
pop
push
fwait
mov
mov
dec
cmp
mov
and
jmp
pop
xchg
das
add
dec
je
dec
repz
loope
pop
lods
add
lahf
repnz
adc
mov
insb
sbbl
and
xchg
mov
mov
imul
cmp
xor
lods
sbb
push
cmp
test
mov
pop
into
or
loopne
fmuls
inc
mov
cwtl
fsubr
inc
lahf
add
dec
cmpsl
xchg
mov
enter
jo
add
bound
int
push
pop
jno
sub
push
lahf
inc
xchg
fistps
insl
sbb
adc
negb
ds
int3
in
cmc
lods
gs
xchg
xchg
and
pop
jmp
xchg
jae
lea
ret
je
mov
imul
push
or
decl
into
inc
shl
cld
xchg
sti
xor
add
cs
push
bound
adcb
sbb
inc
xchg
fistps
js
mov
adc
jne
lcall
push
sub
loopne
lock
jbe
add
clc
push
pop
fwait
ret
adc
and
pushf
pop
aam
cmp
in
or
pop
je
mov
push
push
or
lret
outsl
mov
shlb
hlt
sub
pop
cli
lahf
movsb
pop
mov
mov
jle
pop
jle
fcomps
adc
mov
and
push
test
ret
sub
popa
inc
stc
repnz
push
jle
jb
mov
push
andl
jecxz
pop
data16
dec
dec
imul
sub
inc
clc
jne
aad
testl
push
out
out
jg
cmp
enter
je
push
shlb
nop
cmp
xchg
out
jno
sbb
cmpsl
mov
outsb
sbb
xlat
jecxz
add
dec
mov
nop
gs
jg
test
cmpsl
adc
cmp
scas
sbb
cmp
fimull
dec
sub
xchg
jle
lods
dec
xor
ret
lea
jne
inc
xchg
rcr
xorl
orb
add
pop
adc
stos
pop
aaa
ljmp
stc
sub
jmp
rolb
jb
jbe
shrl
sbb
pushf
insl
mov
and
jb
dec
mov
mov
sarl
aam
vpshldq
pop
add
dec
inc
fisttpl
pusha
fidivrs
pop
popf
cmc
pop
and
push
call
jge
lret
call
jb
incl
xchg
dec
les
imulb
out
inc
shlb
or
fcoml
push
sub
int3
cmp
mov
aad
push
push
invlpg
movl
push
dec
jle
add
scas
xor
mov
mov
mov
lret
push
jne
add
cmpb
sub
aas
push
adc
ret
data16
or
mov
je
push
xchg
shll
and
jl
mov
rolb
loopne
mov
aad
sub
jo
inc
mov
fdivrl
popf
fldl
imul
outsl
push
mov
push
icebp
sbb
je
jecxz
mov
dec
push
aaa
ret
ret
shlb
mov
jns
pop
mov
sbb
lret
das
or
dec
fs
inc
inc
sbb
int
test
ret
rclb
or
jmp
lds
aas
enter
popf
jl
xlat
pop
push
mov
mov
in
and
imul
xchg
pop
insl
int3
fxch
stc
add
ljmp
negb
inc
fwait
jo
loope
cld
lods
fiaddl
sahf
daa
insl
rolb
aas
jge
jns
in
clc
jnp
inc
xor
mov
xchg
and
or
cmpsb
cli
clc
shrl
sbb
rorl
xchg
lret
cmp
andb
mov
lds
xchg
cli
or
cs
movsb
push
lods
sub
xchg
in
pop
xlat
xchg
cld
xor
loope
xchg
lahf
mov
adc
iret
mov
jmp
adc
jg
or
lfs
adc
in
pop
mov
scas
xor
sub
stos
pushl
pusha
iret
xchg
and
dec
fwait
addr16
int3
push
subb
mov
add
push
rcrb
xor
pop
ror
outsl
fidivl
xchg
pop
out
es
mov
and
pop
mov
add
sub
or
mov
dec
sahf
adc
xor
mov
out
aas
mov
sub
insl
int
or
push
popf
into
sbb
dec
clc
das
imul
addr16
ss
in
xor
jmp
xchg
daa
sahf
lret
or
loopne
xor
pop
xchg
sub
cltd
mov
dec
push
filds
push
fs
xchg
in
xchg
add
cmp
push
sub
cmp
sub
mulb
cmp
and
adc
incb
jae
in
add
jbe
hlt
mov
add
add
ret
sbb
sbb
xchg
ficomps
sub
jnp
int3
or
lahf
cmpsb
scas
push
popf
daa
inc
fsts
add
daa
loopne
xchg
hlt
mov
cmpsl
jecxz
js
sahf
sub
stos
inc
mov
mov
int3
test
bound
into
stos
lds
popf
jle
mov
pop
icebp
pop
pop
add
leave
add
xor
pop
push
push
mov
into
add
xchg
push
push
imul
jno
lds
sub
push
enter
mov
imul
dec
sub
pop
dec
shlb
xor
xor
xchg
push
jno
xchg
mov
bound
fldenv
inc
xchg
out
push
ret
xchg
push
cmp
inc
out
rolb
inc
jmp
adcl
fstl
loope
or
stc
test
dec
dec
test
jmp
dec
loope
mov
and
mov
jns
adc
and
pop
add
lods
stc
adc
pop
clc
pop
cmpsl
jb
int3
push
call
and
das
and
dec
js
fsubr
test
jbe
pop
cmp
fdivr
add
in
test
lcall
hlt
dec
ja
lods
outsb
and
insb
int3
test
in
int3
xchg
adc
fdivrl
xchg
lahf
lret
mov
mull
popa
popa
xor
sahf
fisubl
jge
sub
xor
in
fucom
call
sarl
shl
push
inc
or
push
js
call
or
ret
dec
xor
scas
jle
loope
mov
dec
pusha
push
adc
pushf
add
push
mov
or
push
test
jmp
repz
repz
lret
jae
out
shl
sbb
in
cld
mov
mov
ret
pop
popf
sub
cmp
push
xchg
xchg
jmp
int3
jns
mov
rol
xchg
jge
xchg
imul
mov
pop
xchg
int3
subb
push
repz
jno
jecxz
call
repz
jg
je
add
xchg
faddl
push
sub
js
jp
hlt
aaa
mov
fimull
lock
mov
test
xlat
jge,pn
clc
mov
loope
pop
test
test
jge
les
shll
sti
das
mov
sti
adc
push
ret
scas
add
mov
sub
cli
xchg
or
call
push
ficompl
cmp
sub
xchg
mov
add
insb
dec
aas
jecxz
cmp
shl
xchg
inc
repz
dec
stos
fistps
cmp
cmp
xchg
jbe
xchg
shl
jb
rorl
jne
mov
ss
xchg
loope
lock
cld
test
and
mov
in
push
test
popa
daa
mov
data16
call
push
inc
xor
sbb
dec
xor
mov
mov
or
mov
insl
test
std
popl
mov
fmul
dec
push
test
sbb
push
ds
push
jns
inc
fmull
into
test
adc
dec
lcall
inc
inc
or
xchg
or
repz
mov
sub
repnz
or
push
adc
divb
and
push
xor
inc
dec
mov
hlt
mov
sbb
mov
addb
mov
mov
icebp
test
aaa
xchg
das
cmpsb
outsb
mov
sbb
mov
or
mov
jl
pusha
fldenv
fcomi
pop
pop
xor
mov
pop
dec
popf
sbb
sbb
adc
icebp
dec
xchg
mov
addr16
cmpsl
sbb
fsubs
mov
and
inc
inc
and
mov
push
push
jp
cwtl
test
and
mov
inc
subb
push
cmp
clc
xor
insb
aad
scas
jbe
mov
adc
mov
test
dec
xor
cmpsb
and
adc
in
lock
jno
fwait
movl
lods
add
mov
xor
dec
add
cmp
jmp
lods
jbe
xchg
addr16
out
mull
je
add
in
pop
dec
fadds
mov
add
movsb
cmpsl
mov
rcl
sarl
jno
push
jp
mov
addr16
mul
dec
pop
es
sti
cli
aas
add
jns
mov
dec
adc
decl
inc
mov
mov
and
or
cmpsl
aas
and
adc
std
inc
sti
sub
inc
sbb
rol
cmovae
dec
fildl
cs
repnz
push
mov
lods
jae
jbe
test
dec
fists
fidivs
ljmp
and
mov
mov
mov
cli
ljmp
pop
dec
cmpsb
xchg
mov
cltd
mov
stos
fstpl
rol
mov
cmp
mov
jns
in
mulb
nop
jg
movsb
mov
push
out
daa
js
enter
mov
rcll
enter
jo
pop
gs
insb
jecxz
out
xorl
sub
es
dec
ficompl
shll
and
loope
jne
lcall
stc
ficomps
outsb
dec
scas
add
bound
pushf
iret
pusha
mov
mov
lock
xchg
cmp
dec
jp
out
test
jp
sub
mov
rclb
adc
adc
jp
pop
insb
cmp
in
in
pusha
push
xchg
xor
mov
hlt
inc
insl
pusha
loopne
sub
jne
loop
in
pop
daa
jne
xor
mov
out
pop
je
push
add
jbe
cmp
lret
movsl
xchg
cli
ds
das
aas
push
jecxz
sbbb
xchg
cwtl
aam
lret
imul
mov
int
jb
fs
cmpsb
insw
xlat
push
and
or
movsl
cmp
outsb
push
inc
dec
std
pop
out
dec
adc
fsts
ss
lods
ss
push
cmpsb
xchg
sbb
jnp
rcrl
mov
mov
pop
fmull
aam
add
add
cld
cwtl
fisttpl
push
add
pop
sub
pop
xchg
inc
mov
mov
pop
add
movl
lds
mov
adc
shlb
jmp
daa
repz
fnsave
test
cs
lods
in
cmp
dec
mov
je
pop
mov
inc
and
mov
mov
pop
insb
pushl
inc
xor
adcl
jno
dec
mov
sub
daa
aaa
std
xchg
iret
loope
dec
mov
test
int3
or
push
lahf
and
fwait
mov
cmp
add
mov
je
push
ds
fcos
inc
mov
adc
addr16
jge
arpl
sbb
xor
xor
pop
mov
push
cmp
xor
push
lret
test
xor
dec
fs
out
mov
inc
int3
scas
push
inc
jns
inc
mov
or
and
out
xchg
cld
int3
sbb
cwtl
xchg
shlb
scas
test
and
cmpl
bound
mov
cltd
in
movsl
pop
push
adc
push
xchg
push
mov
jne
cmpsl
push
add
pushf
adc
rorl
cmc
adc
inc
cwtl
dec
dec
push
push
mov
xchg
sahf
and
bound
lahf
daa
xchg
and
ffreep
cwtl
sub
out
cmp
mov
leave
jno
jle
and
iret
mov
ss
pop
mov
sbb
inc
xchg
lds
push
fwait
cmpb
and
pop
cmp
movb
adc
inc
clc
mov
lahf
mov
add
lcall
fs
mov
stc
daa
lods
fcmovnu
mov
pusha
push
mov
hlt
aam
sahf
mov
inc
shlb
aam
ret
jmp
out
adc
lcall
into
cld
loope
ds
jbe
dec
sub
push
mov
mov
push
fldcw
shlb
push
mov
pop
xchg
subl
pushf
int3
bnd
add
das
inc
dec
adc
adc
aas
mov
pop
push
in
pop
lods
inc
lcall
jbe
in
inc
dec
das
clc
les
lods
in
push
fisubrl
cs
dec
les
mov
xor
fs
add
add
xor
push
lods
sbb
mov
or
inc
sbb
jg
out
cmp
inc
adc
xor
sbb
or
mov
aaa
sbb
sbbb
js
and
dec
in
adc
inc
mov
popf
repnz
cmp
mov
or
jbe
sar
sub
stos
ds
adc
int
ret
jns
jb
push
cltd
push
sbb
and
mov
add
push
or
fld
rol
push
add
push
lahf
sbb
sti
lds
mov
fwait
mov
cltd
push
movsl
inc
sahf
fwait
es
in
mov
mov
jo
mov
jbe
mov
scas
push
mov
out
pop
outsl
mov
pop
xor
or
sti
add
dec
xchg
imul
pop
imul
xchg
sub
lods
add
shrb
stc
movlps
stc
push
mov
aas
cld
inc
push
cmp
adc
pop
daa
xchg
pop
das
addr16
jbe
jmp
mov
mov
push
sbb
gs
sbb
push
inc
mov
shlb
mov
inc
in
lock
cld
cmp
sbb
jg
jnp
dec
push
call
xor
insb
pop
and
xchg
mov
lea
xor
sbb
into
pop
gs
add
ret
je
mov
xchg
iret
mov
fs
fwait
and
lea
dec
iret
jle
pop
loop
test
dec
imul
test
xorb
sbb
xchg
cmp
xchg
rol
xchg
xor
jnp
imul
lods
jo
fisubs
pop
ds
paddd
sti
shll
loopne
std
jnp
mov
cmp
push
bound
push
xchg
sbb
push
lea
pop
ljmp
inc
imul
jg
sub
jne
je
ffree
dec
sbb
lods
aaa
fsubrs
xlat
std
shlb
icebp
or
sti
jb
fdivrs
cmc
jmp
or
cmpsl
jecxz
sbb
ss
out
push
pop
jno
inc
cmp
hlt
mov
das
test
add
loopne
push
lea
stc
cmpsl
pop
movsb
mov
mov
dec
out
add
arpl
mov
outsb
or
stos
or
jb
iret
pop
or
imul
inc
or
lods
xor
std
in
jno
mov
loopne
aam
addr16
push
andl
insl
dec
pop
test
xor
fidivl
call
into
stos
int
jg
je
mov
into
or
pusha
fadds
cli
lock
pop
xlat
addr16
jmp
add
mov
rcrb
ret
les
test
mov
ljmp
add
outsb
inc
loop
jnp
xorl
scas
push
repnz
icebp
add
mov
xchg
sub
popa
mov
ss
in
push
dec
add
push
test
aam
dec
pop
cs
inc
cmp
jp
stos
mov
jno
movl
sub
sbb
xchg
sub
sbb
fidivrl
add
push
out
push
sbb
sbb
fdivl
inc
leave
rcrb
insb
inc
mov
das
jl
jb
enter
div
aas
sbb
sbbl
dec
sbb
xchg
repz
movsb
shll
pop
sbb
mov
pop
dec
movd
fnstcw
sbb
into
movsb
mov
stc
dec
pop
jmp
pop
jo
dec
xlat
jne
ss
jae
mov
inc
arpl
sub
jne
xchg
mov
cli
rcrl
bswap
push
dec
ret
add
std
aad
sti
mov
out
lods
int
das
sub
add
adc
jmp
fimull
popf
adc
inc
jecxz
push
lods
mov
mov
inc
pop
push
xchg
int
and
data16
fiaddl
insb
push
xchg
neg
jge
fadd
data16
xlat
jb
jne
fcoml
lds
sbb
cltd
nop
mov
jg
lret
jecxz
insb
sbb
sbb
or
inc
stos
mov
loope
xor
mov
mov
xor
lcall
jl
xchg
popf
dec
mov
outsl
mov
sbb
xchg
sbb
in
cli
sahf
push
bound
mov
addr16
mov
pop
aas
push
pop
cmp
jp
jmp
in
sbb
dec
or
jne
bound
adc
cmp
sahf
shll
mov
aas
outsl
cmpsl
movsb
sub
mov
hlt
and
push
nop
fistpll
stos
shrl
add
xor
enter
jg
adc
add
push
incb
pop
std
mov
jmp
test
mov
or
pop
cmp
mov
nop
inc
mov
mov
test
sub
xchg
lea
lahf
sbb
mov
add
int
std
mov
icebp
ja
cmc
int
lea
fcoml
movsl
pop
xor
icebp
xor
cmp
xor
xor
pop
or
sbb
test
in
sahf
push
aad
popf
mov
inc
jecxz
je
stc
cmp
push
mov
fdivl
xorl
sarb
mov
xor
mov
xchg
loopne
addr16
adc
xchg
push
les
inc
inc
inc
inc
imul
in
mov
xchg
push
add
cmp
jns
popa
roll
mov
ret
lret
xchg
imul
icebp
mov
imul
push
out
fidivrs
out
xchg
pop
jge
sbb
iret
mov
jg
jl
sar
mov
jb
mov
imul
xlat
sahf
insb
popa
xlat
pextrw
jl
xchg
imul
xchg
inc
pop
jne
int
adc
and
jl
mov
dec
decb
lock
fdivs
jg
test
pop
mov
in
add
fucomp
or
pop
mov
add
jae
inc
repz
jecxz
cmc
cmp
and
ret
pop
mov
mov
push
pop
and
setle
push
ror
mov
jecxz
scas
xchg
mov
popf
ret
and
sbb
ja
pop
movsb
add
mov
mov
push
test
sbb
push
pop
xchg
dec
test
cmp
mov
loopne
and
loope
out
cmp
je
sahf
int3
test
loope
ss
gs
sub
push
imul
xchg
sub
mov
xchg
outsb
cmp
cmp
add
std
jne
dec
or
mov
out
enter
fprem1
sbb
lret
sub
and
hlt
inc
loop
xchg
mov
bound
dec
jb
cs
xchg
push
mov
inc
insl
enter
sub
fldt
lods
xor
mov
or
mov
mov
jg
mov
add
nop
add
pop
jb
sub
or
mov
incl
mov
out
repnz
insb
add
lock
popf
and
lock
rol
xchg
xor
mov
movl
or
add
lock
mov
dec
sahf
push
push
mov
pop
pop
aas
push
pop
and
mov
xlat
loope
or
out
or
shlb
fisttps
cli
popa
mov
sbb
cmpsb
jbe
mov
dec
cmp
mov
je
jge
fisttps
aaa
push
and
add
fsubs
push
mov
xlat
ss
mov
sub
pop
mov
cli
ds
bound
mov
lret
dec
or
xchg
adc
pop
movsl
cmp
cmpb
push
cmpsb
push
cmp
push
and
stc
sub
mov
inc
pushf
fdivs
lcall
fidivl
mov
xchg
sub
addr16
mov
xor
cmpl
adc
lea
jmp
jne
movsl
jg
sbb
cwtl
xchg
push
inc
or
addb
dec
rorb
out
dec
jb
mov
aaa
iret
repnz
mov
mov
pop
js
fmul
xor
or
jo
xchg
mov
jno
add
in
out
mov
mov
jmp
scas
fcompl
add
add
xchg
es
cs
lahf
inc
orb
pop
jo
jmp
in
outsl
popl
js
hlt
shrb
push
mov
fwait
mov
ja
lods
sub
mov
jno
sub
rcrl
fwait
lret
in
lret
fcmovb
and
mov
mov
cmc
pop
adc
lea
fcomps
loope
cmp
divl
pop
aam
pop
adc
jp
mov
repz
ljmp
mov
xor
push
js
sub
insb
add
dec
sbb
aam
mov
mov
repz
push
or
mov
xchg
jno
fldenv
ja
push
lahf
out
cli
out
stos
xchg
dec
js
xor
hlt
pop
mov
clc
cwtl
push
rcll
imull
ljmp
fwait
ss
add
adc
lahf
mov
dec
mov
mov
xchg
push
iret
cmp
jns
push
jne
stos
xchg
testl
out
cli
ss
sti
push
jg
add
pop
mov
cltd
dec
xchg
movsl
out
and
jnp
inc
int
sub
leave
dec
mov
lods
icebp
out
inc
imul
filds
daa
cmpsb
inc
ret
jb
and
push
in
mov
mov
aam
stc
fs
daa
neg
scas
inc
loope
dec
pop
inc
mov
mov
adc
pop
inc
sbb
pusha
sarl
mov
mov
mov
cmp
shll
xchg
jmp
cmpsl
pop
inc
mov
dec
rcl
out
pop
sub
in
jecxz
lret
mov
rol
int3
mov
in
push
add
lret
xor
js
movsl
pop
jl,pt
pop
daa
sub
sarl
cmc
shl
pop
push
sub
sbb
subl
mov
push
aad
cmp
xchg
and
gs
sbb
xor
inc
jno
decl
das
sub
fmul
jns
sahf
data16
lock
jecxz
nop
cmpsl
popa
jo
jb
cltd
push
jg
pop
repz
push
or
mov
enter
aaa
test
xchg
insb
inc
addb
ja
pop
cmp
sub
mov
rcll
mov
cwtl
dec
jo
or
and
jle
jbe
and
cmp
pop
rcrb
sarb
sbb
pop
add
xor
cltd
repnz
push
jne
sub
test
push
sbb
arpl
out
inc
mov
mov
fiadds
dec
in
push
pop
in
sti
enter
sti
imul
lods
test
aas
repz
adc
stc
test
fsubrl
mov
xchg
imul
inc
cmpsb
or
mov
jno
fidivrs
or
inc
push
cmpsb
or
sbb
test
out
jl
jge
fiadds
or
jle
sub
int3
orb
cs
mov
aas
sbb
jb
ljmp
xchg
lock
iret
gs
movsl
les
cwtl
jmp
push
mov
push
lock
cltd
leave
cmp
adc
js
jno
xchg
out
mov
mov
sbb
sbb
scas
mov
xchg
pop
adc
sbb
das
sub
rorb
aaa
das
mov
mov
adcb
test
sbb
aad
fdivrl
inc
sub
loope
xchg
fs
aas
mov
jnp
out
lods
fists
mov
loopne
stc
scas
test
decl
pop
mov
sti
aaa
jae
add
pop
hlt
adc
adcl
rol
mov
and
mov
lcall
mov
fwait
lret
iret
adc
lods
loop
cmp
and
movl
mov
add
stos
mov
mov
test
out
ljmp
leave
sub
aas
and
jl
xor
mov
mov
adc
mov
cmc
adc
dec
mov
rcl
int3
cmp
xor
and
cmp
add
jnp
fcmovbe
or
popa
xchg
dec
js
aam
inc
add
fcoml
pop
iret
cmpsb
cmp
or
cmpsb
or
enter
ljmp
ret
mov
or
popa
push
rorl
jle,pt
lret
dec
cmp
push
imul
pop
popf
xor
jmp
jnp
dec
mov
lret
xchg
xor
jmp
cld
cmp
in
sbb
jae
sarl
inc
jmp
mov
in
cmpsl
jmp
popa
and
cmp
repz
repz
adc
sbb
cmp
mov
int
idiv
cmc
or
ds
and
repz
sub
mov
sahf
in
orps
xor
std
lahf
bound
sahf
cmp
mov
ljmp
fs
addr16
stos
mov
adc
fists
cli
mov
lods
sub
push
sbb
lods
insl
dec
push
add
push
and
outsb
repz
jmp
aas
or
push
leave
fiaddl
les
inc
xor
test
cmp
movsl
mov
jl
mov
popa
lods
pop
cld
cmc
pop
xchg
testl
hlt
sbb
lods
xchg
lret
push
dec
add
adc
jns
ljmp
dec
ja
testb
mov
out
leave
and
into
dec
mov
in
cmpsl
adc
imul
mov
je
or
mov
sbb
and
cmp
pop
mov
test
push
lods
pop
pop
fisttpl
cmpsb
cmp
nop
inc
or
lret
pusha
xchg
mov
dec
jbe
fldl
stos
bnd
imulb
sbbb
cmpsl
repnz
sub
lea
gs
mov
mov
and
xchg
imul
scas
popa
push
jmp
push
in
lods
jl
test
add
mov
pushf
add
dec
mulb
add
pop
cmc
leave
nop
addr16
jbe
rorb
jnp
push
jp
fwait
adc
cltd
lea
dec
repz
mov
mov
inc
xchg
shl
push
fisubrl
xchg
cmp
lock
xchg
scas
hlt
push
fistl
xor
xchg
je
insb
xchg
sbb
cmpl
mov
xor
es
loope
pushfw
jae
pushf
lock
inc
push
loopne
scas
fnstenv
push
cmpsb
cwtl
mov
repnz
adc
mov
pop
pop
lods
mov
push
dec
mov
lods
iret
push
xor
pop
push
xor
jle
rolb
ja
mov
in
cmp
ficompl
jl
int3
test
mov
insb
jns
sub
pop
mov
add
sbb
mov
loope
push
jne
dec
dec
es
dec
lcall
int3
xchg
lret
adc
jns
cmp
int3
pop
xchg
sub
pop
daa
movsb
fstp
stc
sub
int3
cltd
movsb
mov
xchg
cmp
daa
cmp
cwtl
adc
push
repz
cmpsl
js
inc
rcl
xor
mov
fs
int3
xchg
cmpsl
iret
jns
pop
jns
mov
into
fdivrl
push
mov
adc
xlat
outsl
jno
icebp
jp
push
loop
fisttpll
sub
adc
roll
mov
fcomps
jle
std
cmpsb
mov
mov
pop
and
in
mov
andl
dec
jge
inc
dec
jbe
xor
xor
sbb
sbb
shll
push
pusha
divps
sbb
add
jmp
pop
cmpsl
jo
icebp
pushf
data16
aad
add
pop
popf
xor
adc
cmc
xchg
jno
adcb
aas
in
xchg
outsl
cli
sbb
pop
cld
pop
xchg
lods
cmp
sahf
imul
xor
mov
pop
jb
lahf
dec
mov
inc
into
inc
dec
pop
mov
mov
fldt
mov
lods
stc
xor
xor
in
ret
sahf
jp
adcb
into
in
mov
mov
adc
out
mov
and
sbb
je
mov
das
out
xor
lds
lcall
sbb
jbe
mov
push
call
fwait
sbb
xor
addr16
loop
xchg
push
ja
xchg
stc
mov
push
jge
subb
rcll
sbb
test
mov
shrl
jbe
dec
stos
cmpsl
jecxz
rorl
sbb
and
mov
dec
fwait
mov
pop
jae
sub
add
mov
fistps
sub
xchg
cmp
inc
mov
adc
nop
sub
out
sahf
das
jns
push
mul
inc
out
pop
shr
and
inc
ds
jle
mov
add
adc
sub
aas
mov
test
push
push
cwtl
fildl
icebp
js
push
inc
movsl
ja
pop
in
stos
insb
mov
mov
inc
ja
ficomps
and
or
pop
mov
inc
pop
in
mov
or
fistpll
mov
loop
in
fs
push
xor
fwait
int
adc
out
lea
cmp
mov
xor
cs
lret
mov
cwtl
jno
imulb
adc
mov
or
pop
push
push
rcll
dec
push
call
mov
ss
mov
jbe
inc
rcrb
sub
or
mov
pop
popf
movsb
stos
nop
fidivrl
mov
mov
icebp
adc
cwtl
cs
dec
out
nop
ret
add
lds
shll
movsb
insb
aas
xor
mov
fldt
fsubl
ret
sub
push
nop
scas
xor
daa
in
ret
push
lret
mov
dec
js
pop
mov
mov
push
sub
mov
or
sbb
fbstp
jp
int3
sbb
or
inc
or
add
and
inc
and
ret
push
jns
orl
mov
mov
xchg
arpl
xor
das
xchg
scas
xchg
enter
mov
popa
ljmp
push
ret
nop
cld
pop
jg
lods
fs
xchg
sub
pop
clc
out
sbbl
adc
jno
dec
and
ja
fisubl
shlb
fwait
mov
mov
sub
test
adc
pop
mov
xor
or
jecxz
push
adc
sub
and
mov
push
fsubr
add
inc
pushf
aam
mov
mov
sub
cltd
out
stc
rcll
and
lea
hlt
cmp
test
mov
pop
xchg
sbb
pop
mov
sub
out
ret
push
addr16
jnp
pop
out
leave
rcrl
xor
inc
or
and
or
mov
fcomip
in
imul
push
sarb
mov
data16
sbb
je
mov
fsts
sub
shr
notl
test
mov
add
je
je
or
lods
int
xchg
sbb
bound
mov
add
in
pop
fnstenv
mov
pop
andl
ljmp
call
addr16
add
jmp
or
and
stc
imul
movsl
daa
mov
iret
call
lds
call
pushf
xor
movhlps
xor
cmp
pop
in
inc
int3
xchg
push
cwtl
into
push
addb
sbb
aad
sbb
lahf
movsb
pop
xlat
cmp
mul
mov
stc
rclb
out
jne
mov
xor
fidivrl
xchg
or
mov
lock
sar
sbb
xchg
lret
sub
and
pop
fildll
repz
xchg
mov
mov
test
cmp
mov
jp
aad
jo
rclb
xlat
fnstcw
rcrl
test
nop
movb
or
nop
icebp
stc
nop
push
mov
and
insl
jno
arpl
mov
push
lds
adc
mov
pusha
icebp
cli
cld
sub
lea
jb
push
sub
xchg
out
sbb
sbb
mov
repz
cli
movsl
mov
cwtd
ljmp
repnz
inc
mov
pop
pop
test
rcl
or
in
or
sarl
jp
std
rcrb
xlat
or
dec
add
cmpsb
aad
stos
mov
jno
inc
scas
xor
cmp
mov
push
jecxz
cmp
sub
int
es
pusha
lods
mov
or
dec
insl
jl
mov
or
and
arpl
jns
lods
xchg
sub
or
cmpl
mov
repnz
or
sbb
push
add
clc
fstps
and
idivl
pop
xchg
loopne
fdiv
dec
cwtl
popa
movsb
sub
jbe
unpckhps
mov
sub
push
jnp
mov
dec
scas
jnp
cmc
inc
in
cmp
lea
dec
xchg
adc
inc
pushl
out
test
jecxz
cwtl
cmp
mov
pop
aad
or
jle,pt
inc
cltd
cmp
xor
je
jns
ret
pop
fdiv
rcrb
pop
push
popf
and
xchg
outsb
fidivrs
xlat
in
inc
mov
fists
dec
cltd
push
int
pusha
outsl
loop
mov
and
and
push
add
cmp
mov
popf
mov
mov
jb
add
dec
pop
xchg
mov
mov
inc
inc
dec
scas
pop
les
cmp
fxtract
adc
cmp
push
inc
fistpl
pop
pop
lcall
inc
bound
xor
mov
sbb
xchg
popf
jg
adc
push
aam
add
out
inc
hlt
jp
add
mov
insl
xchg
xchg
rclb
fdivrl
mov
pop
sbb
jae
nop
ljmp
insb
inc
jnp
out
mov
loop
leave
scas
and
xchg
or
test
sarb
sub
stc
mov
xchg
icebp
out
pusha
adc
xchg
mov
push
into
jne
leave
insb
pop
dec
popa
xchg
add
popa
add
mov
js
push
or
xchg
mov
mov
push
and
dec
sub
sub
test
and
cmp
out
mov
fisttpl
xchg
pushf
pushf
push
data16
fisttpl
jo
in
push
mov
jecxz
mov
stc
push
inc
dec
stos
push
ret
cvttps2pi
jne
pop
add
lcall
movb
push
sub
test
shlb
sti
push
jle
xlat
out
cs
jge
mov
push
pushf
inc
fmull
push
out
hlt
sbb
pop
cld
add
cmc
std
sub
pop
cmc
pop
shll
orl
bound
and
leave
les
xchg
icebp
cmp
inc
inc
or
scas
mov
cli
mov
dec
xchg
push
bound
or
xchg
push
mov
sbb
or
stos
mov
mov
stos
push
and
mov
fucomip
add
jecxz
sbb
pop
sti
xchg
ja
push
out
scas
add
arpl
xchg
pop
mov
dec
cwtl
adc
mov
pop
ret
cmp
insl
xchg
mov
in
test
movsb
mov
testb
in
pop
mov
pop
cltd
sub
and
pushf
pop
xchg
sbb
repz
add
cmp
imul
xchg
imul
andb
mov
mov
lcall
leave
inc
std
push
imul
call
into
push
negb
jmp
jl
mov
mov
and
lcall
inc
xchg
movb
push
jae
xlat
and
sbb
iret
gs
out
pushf
xchg
dec
and
ror
repnz
out
call
xchg
out
push
ss
or
dec
dec
mov
inc
maxps
mov
xchg
jp
sub
jo
add
out
leave
popf
cmpsl
or
cmp
stc
or
loop
mov
out
les
pop
aas
addr16
jb
mov
push
mov
aas
xor
push
jnp
add
dec
dec
aam
jmp
inc
sahf
xor
pop
test
xor
mov
rolb
fimull
mov
outsl
shr
add
fisubl
sarb
mov
jo
ds
ret
cmpsl
inc
pop
aam
enter
lods
adc
repz
mov
test
test
cs
sbb
ljmp
mov
sti
xchg
fldt
jge
pushf
adc
push
xor
test
mov
je
iret
dec
sbb
jne
dec
inc
loopne
push
xor
into
arpl
daa
scas
in
pop
jnp
cwtl
call
adc
cmc
mov
inc
stos
push
scas
push
jns
int3
sbb
xchg
mov
sbb
dec
xor
push
adc
clc
jmp
cmpsl
icebp
scas
repnz
sbb
pop
inc
pop
imul
pusha
pop
xchg
out
add
fdivr
adc
lcall
ret
dec
pop
adc
add
sbb
out
pop
cli
and
xchg
sub
jnp
lret
test
data16
adc
adcb
lea
sub
and
xor
xor
xchg
adc
movsb
daa
sub
or
popa
in
jmp
mulps
fidivs
mov
pop
pop
fs
push
stos
sub
leave
mov
int
lahf
mov
add
and
dec
cli
iret
test
and
ds
pop
lea
sub
dec
jmp
push
or
fiadds
jmp
popf
andl
xor
in
sub
mov
pushf
and
push
mov
dec
test
outsb
lret
lds
mov
sub
daa
mov
cmc
cmpsl
dec
pop
jle
mov
mov
push
cmp
jle
int3
lock
andb
adc
cmpb
jmp
jno
push
push
sub
imul
xor
or
mov
ja
daa
testl
inc
scas
mov
filds
movsl
nop
clc
pushf
fisubrl
ret
std
xchg
cmp
or
jl
enter
clc
or
repz
mov
mov
ds
dec
xlat
adc
xor
ret
and
mov
cmp
out
scas
adc
or
movsl
jns
sbb
dec
jno
call
into
add
lods
gs
ret
inc
xchg
adc
shll
test
lds
idivl
scas
push
and
in
mov
aas
xchg
movsl
push
jmp
iret
pop
xor
test
push
fstl
adc
cmpsb
test
inc
pop
dec
cmp
cs
push
and
cmp
cmpsl
lahf
sbb
xor
push
add
inc
jbe
xor
xor
js
je
ss
sbb
stos
inc
xor
ret
idivl
mov
fs
jmp
fs
pop
out
sub
int
stos
pop
xor
jns
and
cmp
push
addr16
inc
push
add
stos
pop
icebp
inc
leave
cmp
insl
xor
xchg
or
pop
es
sub
pusha
stc
mov
imul
call
xchg
into
pushf
andb
insl
mov
dec
push
adc
mov
test
fstl
in
mov
in
aam
cmpsb
mov
jns
aaa
nop
cmpsb
pop
sbb
adc
setg
push
outsl
int3
mov
push
mov
outsl
test
cmp
cmp
sub
add
mov
xchg
pop
sbb
and
jecxz
popa
or
aad
xchg
xchg
or
mov
push
cli
popa
mov
dec
and
fistl
push
test
sub
inc
lcall
jl
lea
dec
nop
xchg
sub
out
fdivrs
lods
sbb
fiaddl
shl
je
mov
fcomp
scas
xor
inc
leave
add
or
mov
jge
mov
jl
aas
repz
pop
bound
sub
pop
test
sarl
jg
mov
std
sarl
aam
xchg
lea
outsl
stos
inc
and
inc
movb
lods
out
push
mull
mov
sti
imul
call
mov
arpl
mov
jle
gs
mov
fwait
mov
pop
and
repz
push
loopne
cld
inc
inc
scas
daa
fwait
out
mov
dec
xchg
mov
pop
shrb
jne
cltd
mov
inc
test
and
or
mov
outsb
mov
js
andb
inc
xorb
into
xorl
sbb
sbb
das
stos
je
cmc
pushf
pop
jo
lds
cmp
loop
sahf
jecxz
push
mov
lahf
repz
movsl
lods
dec
mov
std
inc
fstl
xchg
adc
hlt
enter
pusha
pushf
pop
lods
dec
fsubrl
jae
in
add
int3
or
sbb
notb
dec
popa
lcall
mov
iret
sbb
outsl
or
clc
sbb
push
daa
fdivrp
adc
fldl2e
fcompl
pop
xlat
aas
scas
pop
in
leave
pop
fcomp
ficompl
xchg
stos
mov
mov
punpckhwd
mov
and
cmpsl
xor
repnz
mov
fistpll
gs
neg
out
inc
jne
cwtl
out
leave
xchg
mov
or
or
sbb
inc
push
or
push
jae
mov
cmp
jmp
lcall
daa
mov
repnz
hlt
das
jge
mov
sub
cmp
sahf
dec
sub
in
icebp
jne
jmp
lods
cli
and
inc
or
cwtl
pop
add
movsb
lods
push
cmp
lods
lret
xchg
pushf
add
test
pop
andl
idivb
add
inc
and
dec
sub
sbb
imul
or
loopne
xchg
call
rcll
mov
fwait
dec
jp
rcll
jnp
js
rcrl
aam
jae
push
lea
jo
dec
mov
ret
lea
int3
loope
pop
mov
leave
mov
dec
pop
stos
jmp
je
movsb
fcompl
cmp
inc
scas
dec
int3
nop
mov
xor
or
mov
pop
sub
push
dec
push
cs
cmp
or
adc
lds
je
inc
inc
adc
pop
std
mov
sub
ds
sub
addr16
or
xor
push
pop
stos
in
mov
dec
std
frstor
add
mov
ljmp
jnp
dec
mov
cld
pop
in
adc
mov
pop
pop
jp
shrb
jno
xchg
rep
mov
repnz
out
pop
js
pop
rcl
pop
jnp
xor
mov
pop
inc
push
subl
dec
sub
lods
mov
pop
stos
sbb
mov
and
loopne
inc
loopne
cmp
shlb
aad
stos
pusha
jbe
das
cmpsl
les
mov
rorb
mov
das
gs
push
shl
push
sbb
insb
inc
cmc
pushf
add
dec
cmp
gs
push
fwait
fwait
pop
adcb
sbb
jb
and
mulb
dec
cmp
mov
imul
dec
sbb
dec
and
mov
mov
imul
dec
push
xlat
loop
or
cltd
mov
and
cmp
ret
pop
out
inc
scas
rcrl
testl
jmp
dec
adc
ret
cmpsb
fs
sbb
cmp
push
jne
movsl
xchg
and
divb
test
adc
jle
dec
push
scas
push
add
mov
into
jns
inc
insb
sub
mov
loope
in
and
mov
mov
pop
shrb
mov
mov
rcrl
or
insb
icebp
mov
fwait
iret
icebp
inc
push
cli
mov
or
scas
or
mov
loopne
ljmp
sub
testb
inc
inc
in
add
out
or
jns
mov
gs
mov
fists
jmp
mov
in
mov
sub
add
inc
addr16
out
pop
add
jge
jb
cltd
or
lods
jbe
fisubs
mov
and
xchg
pop
sbb
sub
mov
add
pop
xor
xchg
add
test
subl
in
mov
data16
pop
mov
adc
or
jbe
sub
lds
adcb
scas
lcall
xor
jne
mov
in
jne
pushf
jl
out
in
sbb
inc
ss
sar
stos
shlb
mov
mov
mov
jnp
lea
cmp
lea
pushf
mov
and
cld
out
call
gs
outsb
and
imul
mov
and
lahf
mov
bound
mov
pushf
mov
movsl
movsl
xchg
dec
pop
mov
imul
cmpsb
out
push
dec
lret
inc
mov
sahf
ja
or
das
jge
bswap
push
add
fwait
loope
push
test
test
jne
int3
sbb
hlt
pop
and
subl
jo
sub
xchg
pop
jp
lret
sub
cmp
fdivrs
adc
addl
in
andl
cs
cli
dec
xchg
add
jl
stos
xlat
outsl
jp
adc
clc
jmp
jmp
inc
mov
push
movsl
mov
inc
xchg
mov
fsubrl
sub
out
push
fcoml
loope
cli
mov
mov
lea
adc
fildll
ss
push
test
loop
dec
pusha
jmp
pcmpeqw
or
xchg
mov
aam
jp
aam
push
ja
out
adc
adc
push
in
ljmp
shl
int3
push
inc
push
jns
jmp
adc
out
fidivrs
xor
pop
loope
sub
or
jle
movsl
xor
adc
in
push
testl
ret
into
js
xchg
js
and
dec
out
fs
jmp
adc
test
pop
jno
outsb
mov
test
and
dec
and
sub
and
arpl
jns
xchg
subl
dec
mov
mov
es
fildl
rolb
shrb
dec
jp
loop
xchg
inc
scas
cwtd
inc
insl
fdiv
ret
add
test
dec
mov
sbb
xor
in
ficoms
mov
mov
aaa
hlt
ret
mov
xchg
int3
adc
mov
dec
shlb
fmulp
in
pop
adc
cmp
pop
mov
loope
dec
int
xor
jnp
outsb
cmp
push
dec
dec
leave
aaa
xchg
dec
inc
sub
rcll
mov
xor
mov
popa
lahf
sbb
cwtl
cli
and
xlat
sub
aas
mov
and
cmp
aas
rcrb
pop
jae
pop
roll
or
in
cmp
jle
inc
add
mov
xchg
inc
inc
xor
fs
mov
cli
sub
scas
sahf
dec
or
push
xchg
mov
push
inc
and
push
in
adc
test
dec
or
mov
test
ja
or
cmp
inc
xlat
jl
jge
xchg
lcall
or
aas
pop
sti
inc
xchg
adc
and
lock
es
jge
aam
pop
in
cmc
dec
and
std
pop
cli
call
cmpsb
inc
sub
nop
test
mov
cmpsl
jmp
je
dec
lods
mov
dec
dec
outsl
sahf
cmp
jp
inc
out
es
xor
or
sub
fmulp
sbb
mov
inc
push
sbb
dec
insb
fimuls
sub
cld
prefetch
add
and
ficoml
jns
sub
xlat
cmc
arpl
xor
jbe
pop
les
pop
imul
out
test
push
lret
repz
sti
sbb
dec
pop
inc
imul
and
sub
andb
int3
aad
push
ret
pop
imul
or
jl
sub
dec
lahf
jmp
fxch
cld
and
pusha
mov
pop
xchg
jno
cmp
jns
adc
mov
sbb
jns
adc
in
das
pop
dec
pop
es
ss
push
pop
fwait
cli
dec
jbe
fistps
or
imul
cld
daa
push
ds
push
xchg
mov
scas
aam
sbb
dec
pop
lret
or
stos
call
clc
cmp
outsb
cli
cld
inc
dec
arpl
mov
andb
rsqrtps
lret
sti
xlat
out
leave
jnp
xor
lock
pop
dec
scas
add
inc
cli
sbb
std
fs
outsl
mov
shrl
jle
push
xchg
in
lock
mov
mov
es
adc
aam
jmp
inc
dec
loop
pop
sub
cmpsb
sbb
sahf
mov
mov
xchg
pop
jl
dec
gs
in
movsl
out
nop
jmp
mov
add
pop
cmpl
test
fisttpl
mov
notb
cmp
ror
test
adc
add
mov
add
shlb
shrl
pop
lret
jbe
rorl
and
cmp
push
sti
xlat
push
insl
mov
jno
std
shrb
mov
xor
aam
jbe
mov
sahf
test
cmp
aas
push
cwtl
cwtl
fistps
xlat
mov
pop
sti
xor
sbb
mov
mov
sbb
pushf
daa
aad
and
or
pop
stos
xchg
aaa
mov
ss
outsb
xor
cld
and
xor
xor
pusha
stos
dec
fsubs
adc
in
nop
and
clc
pop
sti
fs
push
mov
pop
or
testb
pop
xchg
arpl
dec
cmp
inc
inc
hlt
jp
inc
xchg
sub
nop
push
aam
cwtl
fisubs
dec
mov
insl
lret
sub
sub
or
out
cli
add
or
lret
jl
ljmp
push
mov
jp
mov
cmp
test
icebp
mov
mov
jle
jno
es
enter
push
xor
outsb
and
mov
bound
dec
inc
mov
sbb
rolb
popf
repnz
push
gs
jmp
shl
mov
fsubs
jb
sbb
mov
lahf
cld
roll
lods
push
in
jno
movl
fsubl
mov
cmpsl
sub
lds
mov
aad
sti
or
aas
push
je
and
xor
roll
scas
xor
jge
lods
inc
mov
adc
lahf
jmp
shl
dec
mov
jmp
adc
orb
and
xorl
arpl
in
daa
jge
pop
push
and
outsb
xlat
mov
outsl
clc
pop
fsubl
arpl
pop
addl
jb
mov
jg,pt
lock
stos
out
ror
jne
mov
data16
jecxz
movsl
out
rcrl
ds
sub
in
cmp
xchg
out
fisubl
roll
inc
pop
imul
push
test
cli
mov
sbb
and
xchg
add
lcall
test
mov
lcall
rcl
sti
sub
and
xchg
icebp
cmp
cwtl
and
sub
ret
jbe
mov
xchg
aas
xor
mov
sbb
sbb
sub
dec
or
xchg
repnz
imul
imul
in
mov
lret
outsl
jns
addr16
pop
test
je
xchg
jbe
cwtl
mov
mov
adc
sahf
xor
cltd
add
fucom
lds
and
mov
cmpsb
sub
mov
jle
add
sbb
lds
pop
mov
push
ljmp
lea
ror
addb
fists
data16
stos
imul
lods
loopne
xor
jb
stos
lods
inc
mov
mov
xor
mov
cwtl
add
scas
sbb
test
test
insb
xchg
out
and
cmp
ja
mov
daa
sub
ljmp
xor
add
pop
mov
fwait
cmpb
fisttpl
jmp
adc
rcr
mov
jg
dec
clc
test
xchg
fs
push
loope
popa
mov
in
and
sbb
sarl
es
sub
jmp
test
and
sub
xchg
roll
add
mov
mov
mov
xchg
pop
pop
out
insl
mov
dec
add
inc
andb
das
negl
arpl
or
or
fildll
inc
jne
xchg
das
mov
mov
cmovnp
sbb
cmp
into
cld
aaa
dec
mov
mov
mov
xchg
pop
std
inc
xchg
repz
cltd
dec
xor
xchg
stos
pop
adc
out
test
aaa
cmpl
in
gs
adc
mov
leave
andl
repnz
in
push
xchg
mov
sbb
fs
push
test
arpl
xchg
jns
sbb
shrl
int3
push
test
jmp
mov
popf
push
inc
pusha
sti
lret
adc
mov
push
sbbb
cld
mov
lret
lds
test
movl
xor
jne
leave
push
or
in
data16
push
adc
lds
inc
repz
xchg
std
cwtl
jge
push
ret
adc
push
fisttpll
js
sbb
sarl
xor
call
imul
jmp
addr16
nopl
inc
insl
mov
fbld
add
into
xchg
adc
stos
cmpsl
pop
push
mov
xchg
push
into
popl
shrb
mov
cmp
sahf
fnstcw
push
orl
jo
add
mov
out
sub
push
das
fistpll
dec
scas
cmc
pop
jg
push
or
mov
aaa
cmp
inc
push
fs
jno
stos
mov
outsb
jb
in
mov
adc
mov
sub
add
loope
movsl
xor
dec
pop
repnz
loope
pop
sarb
cmp
stc
xchg
arpl
jnp
jp
fists
movsb
pop
mov
sub
xchg
inc
jne
sub
ljmp
jl
bound
inc
push
mov
or
fbld
jmp
test
mov
cwtl
push
scas
mov
mov
adc
sub
sub
rorl
cmp
dec
pop
int3
out
adc
mov
adc
pusha
jmp
sti
out
xchg
jne
cmpsb
xor
jbe
insb
hlt
hlt
dec
push
in
jl
std
jbe
in
cmp
push
jmp
xchg
cmp
fstl
ret
pop
pop
rclb
cld
in
mov
xchg
cld
clc
or
inc
add
xchg
mov
addr16
jmp
or
shr
adc
in
flds
sub
jo
and
mov
cmpsb
sbb
mov
scas
add
xchg
pop
xchg
xor
xchg
jbe
inc
loop
imul
fnstsw
dec
jns
pop
rcll
cmp
insl
sub
sub
repnz
hlt
cmpsl
movsl
into
out
pop
add
mov
cmpl
out
test
jg
push
rcrb
push
xchg
jle
arpl
ljmp
push
loopne
push
jg
xchg
mov
xlat
xchg
cmp
push
popa
xchg
lcall
lahf
imull
sbb
mov
jmp
arpl
mov
das
dec
ficomps
sar
and
adc
mov
shll
das
out
push
mov
movsl
cmp
sub
arpl
popa
xchg
test
cs
pop
outsb
pop
xor
cmc
xor
pusha
push
aas
ret
pop
push
push
fistps
into
fisubs
adc
and
repnz
stc
inc
pusha
and
decl
cmpsl
notl
dec
sub
sti
sbb
dec
test
icebp
addr16
add
mov
sahf
lret
push
clc
ljmp
jne
rcll
out
ljmp
mov
xchg
sub
adc
dec
enter
pushf
adc
adc
pusha
mov
xor
ds
loopne
shll
movsl
outsl
subl
mov
in
pop
jb
aas
jo
leave
mov
lahf
sbb
mov
outsl
outsb
jne
and
ds
pop
movsb
cmp
sti
sub
pop
cmp
test
in
andl
pop
inc
pushf
push
dec
dec
lahf
push
test
scas
iret
test
sub
dec
mov
adc
dec
fdivrs
loope
sbb
sub
or
mov
mov
enter
int
or
test
scas
add
mov
pop
outsw
sbb
int3
pushf
insb
jbe
stos
dec
cli
fs
pop
xorl
sti
aam
inc
movsl
inc
mov
mov
push
les
xor
jns
ret
pop
sbb
call
cmpb
fisttpll
sbb
out
ret
mov
inc
roll
fwait
sahf
gs
mov
jbe
movsb
dec
cmp
and
idivb
repz
int
inc
mov
pop
jecxz
inc
mov
fnsaves
dec
fisttpll
andl
fcoms
andb
sub
push
out
test
and
rcll
or
repnz
add
shr
mov
cmpl
xor
and
mov
idiv
adc
xchg
and
into
jbe
mov
test
push
cmp
inc
enter
jecxz
mov
rorb
add
rolb
push
add
mov
js
test
mov
xchg
jge
arpl
imul
and
cmp
xor
aaa
inc
je
xchg
jnp
pop
out
push
cli
or
stc
xchg
scas
adc
push
std
cmp
add
arpl
ss
addl
adc
xor
jnp
add
iret
mov
sbb
adc
xchg
dec
and
and
pop
add
call
mov
lds
in
fucomip
push
inc
fdivs
ds
jecxz
pop
mov
mov
inc
push
ds
popl
out
out
mov
je
test
insb
xor
mov
fnclex
sub
pop
ret
mov
add
adc
dec
stos
test
jmp
in
ret
push
subl
adc
shl
pop
adc
mov
cvttps2pi
dec
cmpsb
jl
jge
and
fwait
sti
test
adc
and
arpl
jecxz
mov
jbe
or
out
inc
rcrl
push
popf
inc
cmpsb
cld
movsl
fs
push
dec
sbb
test
sbb
mov
out
cmp
xor
cwtl
scas
mov
cltd
push
push
pop
adc
cltd
or
in
int
sbb
adc
xor
stc
mov
push
mov
lods
jmp
popf
pop
in
loop
dec
jmp
mov
cld
orl
and
leave
jns
fs
jns
jo
xchg
mov
mov
stc
mov
xchg
and
cmp
das
jnp
pop
stc
mov
lret
pop
cli
lret
andl
lret
addr16
add
or
inc
mov
xchg
in
pop
ret
loopne
jno
mov
test
mov
std
sub
jg
inc
push
push
aam
fmuls
add
iret
add
aas
xchg
and
out
jmp
stos
por
inc
aaa
icebp
ljmp
jmp
cs
dec
mov
jmp
cld
pop
add
movl
fwait
arpl
push
aaa
stos
incl
cs
mov
sbb
add
ds
insb
js
push
pop
push
adc
adc
dec
out
or
adc
rorl
mov
adc
fisubs
or
add
in
js
movsb
inc
loop
and
mov
sub
lahf
push
mov
sbb
cwtl
call
push
xsaves
add
in
call
mov
xchg
add
mov
mov
cs
lods
div
mov
xchg
jns
xlat
cmp
fcomps
push
or
into
test
les
jl
inc
es
lds
pushf
shll
outsl
jle
xchg
out
seta
dec
std
sbb
rclb
scas
and
mov
dec
ljmp
test
mov
lock
pop
sub
fcomps
mulps
pop
pop
cmp
push
or
pusha
decb
mov
jmp
mov
lock
loop
into
fidivs
mov
cmp
pusha
out
add
adc
ret
cmp
jnp,pn
shlb
bound
adc
rolb
in
push
cwtl
fdivrl
add
push
cli
inc
fcoms
pop
mov
mov
aaa
inc
or
imul
push
push
call
pop
xor
mov
in
lcall
mov
jbe
or
lock
mov
and
imul
mov
add
pop
xchg
popa
dec
mov
inc
xchg
adc
enter
lahf
mov
out
sbb
iret
das
rorb
adc
push
xchg
and
fistps
jbe
cltd
shl
cmp
jecxz
mov
mov
mov
imul
cmpsb
test
push
dec
pop
xchg
mov
int3
jp
xor
lods
fbstp
adc
lret
stos
test
inc
pop
ret
cmp
and
mov
push
xchg
fsubs
pop
stos
jnp
or
add
pop
sbb
sbb
jne
in
and
lds
in
add
arpl
mov
cwtl
movsb
cld
ret
das
inc
int
cltd
loope
xor
ljmp
fimull
cli
ljmp
scas
xor
loope
adc
push
ds
xchg
pop
jecxz
and
add
test
adc
push
aas
jg
add
inc
mov
push
sbb
mov
sbb
inc
xor
scas
sub
sub
lret
cmc
rorl
sub
sbb
fisubl
push
in
push
xchg
mov
push
xchg
add
je
inc
jmp
repnz
jb
cmp
dec
mov
sti
aas
es
push
cmp
jmp
mov
mov
fsubrs
ret
xor
enter
pop
jecxz
xchg
and
mov
mov
and
cmp
or
add
pop
xchg
mov
sbb
xor
jge
adc
push
pop
fadd
pop
sub
ret
lods
lds
lcall
sub
xor
inc
jl
inc
xor
dec
andb
repnz
test
pop
add
pushf
jle
fidivrs
or
pop
out
js
dec
push
sbb
cmp
cmp
xchg
cmp
imul
mov
add
out
push
lock
jnp
xor
cltd
dec
mov
call
das
mov
rol
and
push
fstpl
cmp
test
out
out
adc
push
daa
xchg
shll
fldl
adc
daa
jno
ror
out
stc
es
push
inc
sub
ret
sbb
xchg
in
shrb
inc
rorb
popa
lds
test
lahf
fidivrs
xor
test
pop
dec
mov
jle
fbld
jle
dec
cmc
bnd
in
adc
jg
mov
sbb
loopne
xor
push
sarb
xchg
dec
in
cmp
fs
xchg
xchg
sbb
outsb
mov
sbb
pop
je
cld
das
pop
dec
mov
xor
imul
popf
cmpsl
jo
xorb
jg
and
stos
jns
loope
aad
mov
fwait
insl
jb
das
nop
ret
mov
in
push
or
loope
hlt
add
dec
loopne
popa
fwait
popa
lock
fdivrl
pop
scas
pusha
movsl
mov
mov
jne
xor
repnz
orl
adc
mov
xchg
jge
push
call
movsb
and
xchg
fdivrs
jg
inc
mov
sbb
jnp
loopne
rcrl
ficompl
pop
adcb
jo
add
mov
scas
out
inc
cmp
sub
pop
pop
inc
subb
andl
int3
jmp
add
lods
int
adc
jnp
dec
out
mov
ja
adc
es
movsb
push
cmp
in
aam
mov
xchg
sbb
or
jg
push
xor
ret
das
outsb
sub
sar
xchg
cmpsb
fst
lods
xchg
jge
mov
add
xchg
mov
fisubs
push
fwait
jg
pop
pop
jne
cmpsb
fs
aas
imul
incb
icebp
mov
inc
imul
dec
and
xchg
call
imul
jle
popa
push
ss
ror
les
sbb
cli
shl
in
mov
test
test
sub
subl
mov
mov
or
mov
fs
popf
cmpsl
push
sbb
test
mov
adc
out
aam
iret
adc
inc
add
cs
inc
mov
outsl
push
add
cmc
adc
and
ret
cmp
out
mov
mov
jae
xor
push
adc
push
or
dec
fsubrp
fidivs
push
enter
mov
push
cltd
insl
pop
rcrb
fbld
xor
adc
mov
adc
scas
leave
ljmp
mov
stos
mov
add
aaa
sbb
sub
or
stos
push
mov
lret
stos
sbb
jb
sti
scas
xor
das
mov
or
jnp
call
insb
xor
sub
int
ss
pop
cwtl
sbb
mov
mov
or
subl
push
pop
xor
cmp
loopne
push
loope
mov
pop
fldt
pop
rcr
pop
fs
pop
shrb
lods
sbb
in
cs
sti
sbb
shll
pop
les
mov
lret
cmp
daa
pop
jecxz
ja
inc
adc
add
pop
push
xor
insb
testl
insl
outsb
ret
pop
xchg
lds
jle
xchg
inc
bnd
loop
mov
sub
popa
jmp
dec
ss
jecxz
xor
cs
ret
adc
aam
dec
int3
mov
or
insl
dec
or
or
xor
xchg
and
xor
xchg
lods
push
pusha
pop
stos
jle
xchg
fwait
xchg
addr16
mov
mov
mov
xchg
cmp
sub
aad
loopne
inc
and
dec
xchg
push
xchg
push
inc
xor
add
pop
cmp
and
xor
stos
gs
inc
sbb
aaa
addr16
jle
push
sysexit
jnp
inc
out
xor
cwtl
and
cmc
lahf
leave
adc
mov
pop
ja
inc
cmp
out
in
or
jg
sbb
loope
fcoms
nop
pop
loopne
xchg
push
scas
jp
gs
push
xor
into
or
xor
loope
inc
sub
pusha
cmp
sub
inc
std
push
cmpsb
lds
push
inc
mov
mov
inc
leave
aaa
ss
xlat
or
in
outsb
dec
and
out
adc
arpl
pop
gs
inc
sarl
jae
daa
push
adc
jmp
xchg
pop
mov
add
andb
adc
jae
xchg
orl
pop
ss
idivb
movsl
jns
jo
adc
cmp
sbb
lret
inc
dec
outsl
mov
xor
jo
push
mov
push
dec
cltd
test
cmp
add
mov
shlb
lods
loopne
es
pop
pop
jae
shrl
mov
enter
je
inc
xor
mov
xor
pusha
je
fs
dec
sbb
leave
loopne
sbb
stos
add
insb
push
lock
clc
dec
es
insb
push
sub
jle
adc
into
in
and
dec
or
jmp
cltd
pusha
pop
movsl
jns
cmp
clc
out
out
nop
loop
lds
inc
lds
mov
push
and
push
and
outsl
cmp
sub
pop
in
loop
xchg
push
movsl
push
add
out
inc
leave
hlt
xlat
in
clc
stos
mov
cltd
xchg
sub
dec
jl
mov
jl
lcall
icebp
cmp
scas
sub
jbe
aas
xchg
sub
or
and
sbb
and
hlt
sub
mov
adc
dec
sbb
ret
cmpsl
inc
mov
out
push
subl
sti
fmuls
jno
repnz
nop
xor
lret
xchg
arpl
popa
imul
jmp
mov
cmp
xor
addr16
mov
jmp
in
push
ljmp
fdiv
ret
push
test
push
shl
sarb
in
mov
mov
frstor
jae
cmp
and
sub
lock
test
jg
bound
jg
scas
push
pop
lock
stc
scas
pop
jmp
sbb
into
push
push
popa
jge
pushf
out
ret
inc
fdivrl
sub
clc
leave
test
fmull
fwait
push
jb
orl
icebp
xor
inc
fstl
stc
jns
lahf
dec
lret
fwait
dec
mov
pop
in
push
les
inc
jnp
jl
cmpsl
rol
push
lret
les
dec
jb
push
mov
in
or
pop
dec
and
mov
push
and
cmc
adc
push
outsb
push
into
adc
lods
jbe
xor
imul
cli
pop
cs
push
lods
aad
mov
bound
xor
sbb
nop
pop
scas
inc
dec
sbb
or
gs
pop
jae
cli
sub
das
sub
sbb
add
nop
adc
fldl
xchg
mov
xchg
xlat
imul
sub
lods
lods
mov
mov
and
sub
fldcw
ret
gs
xchg
pusha
insl
dec
sbb
add
push
pop
xchg
cmp
frstor
out
xchg
inc
sbb
add
cmp
push
xor
add
xor
jecxz
jle
in
jnp
add
xor
or
fldt
push
aad
and
aas
sub
jbe
pop
jecxz
ret
icebp
sub
push
ret
psubsw
inc
in
inc
mov
lea
sub
xor
pop
imul
cmc
dec
cwtl
mov
pusha
iret
shlb
cmp
es
pushf
mov
jo
stos
sti
repz
or
mov
sti
cmp
lret
fisubrl
mov
pop
sub
push
stos
lods
sbb
lret
sbb
or
aad
push
and
and
aad
sbbl
cmp
or
movb
mov
sar
int
in
lods
dec
jns
mov
test
fmulp
fnsave
push
push
imul
add
pusha
mov
and
add
push
les
pop
stc
or
push
out
pop
push
fcmovnbe
mov
mov
pop
jo
mul
xor
mov
push
in
pop
leave
jno
int3
js
mov
inc
xchg
test
lret
sub
adc
cmp
je
push
sub
repz
lret
imulb
sahf
int
inc
ja
int
mov
test
sub
adc
xchg
adc
ja
test
iret
cmp
pop
dec
outsb
negl
cld
xorb
stos
fnstsw
test
sub
xor
inc
cmpsb
out
aam
push
adc
mov
pop
mov
fwait
repz
or
notb
aam
xor
mov
push
leave
cwtl
jp
sarl
mov
popa
pushf
adc
pop
mov
sbb
add
iret
outsb
popl
hlt
daa
loop
sub
sub
scas
sbb
std
adc
and
cmc
test
not
jo
push
jnp
movsb
rcrb
ljmp
loop
mov
sub
xchg
and
comiss
std
xchg
xchg
ja
cld
js
fsubl
xor
es
lret
aaa
sub
arpl
aam
imul
mov
incb
sub
pop
adc
fidivl
mov
clc
mov
xor
push
or
push
pop
sbb
negl
inc
mov
sub
mov
bnd
loopne
pop
jbe
fmulp
jns
cmp
xlat
lea
imul
dec
cld
mov
cmpsb
cltd
mov
clc
mov
pop
ficoml
adcb
mov
mov
test
xor
popa
xor
out
popa
pop
sbb
and
out
rorb
into
in
sti
mov
out
xchg
sub
popf
in
test
mov
jp
xchg
mov
loop
ret
mov
in
test
call
cwtl
iret
jae
xor
pop
mov
inc
sub
and
push
xchg
jge
dec
or
sub
scas
insl
inc
jle
icebp
cmp
mov
dec
xor
mov
testl
enter
jmp
push
sbb
pusha
xchg
inc
or
pop
cmovs
lahf
clc
call
xchg
test
nop
jbe
or
popf
mov
mov
mov
inc
mov
lcall
sti
sbb
pop
sbb
js
aam
rcll
fs
cmc
inc
test
cmp
mov
xchg
dec
imul
not
mov
fsubrl
movsl
push
mov
pop
in
jmp
add
pop
and
cltd
inc
jae
mov
dec
rorl
iret
out
scas
ds
repnz
je
or
addr16
nop
xor
cs
popa
mov
jae
push
push
dec
or
out
mov
add
adc
jo
nop
dec
mov
xchg
cld
pusha
jle
pushl
lds
movsl
sub
lret
sub
repnz
lret
or
dec
pop
xchg
inc
mov
popa
xor
and
outsl
mov
push
and
lcall
pushf
daa
fdivrs
pop
xor
mov
lret
hlt
mov
jne
dec
es
addb
stc
jg
sub
jae
xlat
les
stos
in
and
xor
das
push
jp
xor
push
fistl
pop
jp
sbb
ret
mov
lods
int3
cli
or
sbb
pop
rcrl
aas
jg
mov
push
mov
inc
call
jle
stos
xchg
cmpsl
pop
inc
jl
sbb
xor
add
xchg
inc
cli
js
cmp
or
hlt
push
jnp
test
cwtl
fsts
icebp
shl
mov
aaa
mov
mov
repz
pop
arpl
movsb
sbb
out
push
sbb
frstor
mov
lock
push
sub
cltd
and
scas
jns
adc
mov
push
inc
adc
xor
pop
lahf
loop
repnz
jo
and
mov
adc
insl
fiaddl
jg
jg
int
jecxz
mov
adc
cmp
iret
sub
pusha
pop
ret
sbb
push
movl
das
rcrl
add
fnstsw
sbb
xor
mov
xchg
cld
popl
push
sbb
cmp
lret
mov
sbb
cs
roll
mov
sahf
call
mov
stos
scas
jo
lcall
cmp
sbb
mov
call
jp
xchg
enter
loop
pop
pusha
jne
int3
mov
sub
lods
and
insb
dec
xor
cld
push
call
jnp
filds
mov
inc
aam
aad
stos
sub
and
lods
test
loop
fs
lods
sub
not
and
pop
cld
jle
mov
leave
xor
jno
je
ret
ss
xlat
jne
xchg
and
and
jg
mov
js
pop
aad
dec
xchg
sbb
and
mov
inc
rcl
aam
fnclex
cmc
mov
pop
inc
lods
push
aas
outsl
pop
fxch
mov
mov
add
push
je
mov
cmp
sub
mov
cmp
icebp
dec
sub
mov
add
pushf
addr16
ds
pushf
mov
xchg
loop
cld
mov
push
in
fs
cld
lock
test
lret
push
jmp
pop
sub
lea
call
cmp
mov
scas
push
pop
rorl
dec
sub
pop
jnp
mov
outsb
inc
pop
fidivrs
push
aas
or
ds
sub
pusha
and
push
sub
pop
rcrb
or
pop
xchg
mov
loope
imul
out
stc
push
adc
pop
fdiv
das
into
es
add
pop
inc
aaa
stc
inc
out
or
push
pop
xor
rorb
dec
jl
fmuls
cmp
div
fnstcw
inc
je
cltd
mov
fs
adc
adc
add
or
xchg
scas
cmp
xlat
xor
hlt
dec
out
sahf
lret
dec
push
dec
push
nop
pop
mov
arpl
in
adc
jns
jg
push
xchg
daa
stos
repnz
jne
dec
mov
mov
cmpsb
jmp
out
into
cs
mov
out
mov
outsl
push
rcrl
xor
test
bound
fsubrp
mov
lcall
xor
xor
ret
jae
jp
mov
clc
sub
add
pop
fcomps
test
push
push
dec
mov
popl
gs
xor
orl
and
out
dec
stos
cld
xchg
sub
xor
leave
inc
inc
adc
mov
stos
add
movb
jo
lods
stos
sbb
sbb
xchg
pop
in
sbb
test
cs
mov
stos
mov
mov
nop
aam
or
sub
mov
xor
or
call
out
call
loopne
xchg
jle
adc
xor
daa
mov
repnz
jmp
dec
inc
lcall
sub
loop
mov
popa
clc
mov
es
les
adc
inc
add
imul
mov
jecxz
aas
xor
dec
imul
xchg
mov
jl
push
pop
fs
in
aad
cmp
push
dec
test
mov
or
inc
shll
scas
pop
sub
lcall
cmp
mov
or
fmuls
fs
adc
fsubrs
pop
int
pop
xchg
xchg
shr
or
cmpsl
jnp
mov
sahf
fadd
jp
or
pop
mov
sub
mov
cmpsl
mov
mov
or
mov
and
push
fmuls
xor
js
outsb
jb
jns
add
andl
in
or
mov
mov
incl
mov
loop
dec
addr16
jae
insl
cli
fwait
xor
or
std
fwait
jae
and
mov
cmc
mov
call
jbe
xor
lret
pop
lret
imul
and
adc
je
mov
movb
fmul
lock
insl
mov
adc
scas
dec
movsb
or
in
inc
jge
leave
dec
xor
sub
mov
sbb
add
adc
mov
xchg
xchg
fisttps
mov
lods
rsqrtps
gs
inc
pop
push
and
gs
xchg
lahf
ret
movsb
cmpsb
leave
mov
test
data16
sub
shl
sbb
sub
push
cmp
or
jno
cmp
popa
je
push
loope
sbb
fildll
add
cmp
into
ret
xchg
pop
xor
mov
fs
iret
imulb
sbb
rcr
insl
pop
dec
js
mov
test
iret
jo
or
js
insb
add
jb
fs
shll
out
jmp
dec
sbb
popf
push
jp
or
sub
mov
notl
add
cwtl
std
test
fcoms
ss
push
cmp
jb
in
lds
xor
insb
cmpsb
testb
xchg
adc
dec
iret
rcrl
mov
jnp
cmp
andl
sbb
fwait
inc
xlat
cmp
mov
pop
jg
and
filds
pushl
adc
push
fs
push
pop
shll
daa
adc
xchg
ja
movsl
pop
add
scas
sbbb
lods
and
out
ss
adc
sbb
test
mov
mov
or
in
mov
in
push
lret
das
cs
js
addl
or
add
pop
cmpsl
ja
lcall
cmp
cmpsb
cmc
cmp
cli
jnp
add
loopne
xchg
sub
push
sbb
mov
cmp
cwtl
dec
cli
pop
ljmp
lret
push
imul
adc
jnp
pop
popf
fisttpll
xlat
bound
xchg
mov
sub
dec
fildll
mov
ja
div
iret
adc
sbb
cltd
dec
adcl
sub
fnstsw
or
or
mov
jmp
incb
loopne
cmp
insb
lret
and
adc
dec
xor
or
fnstsw
mov
loope
jnp
lcall
inc
xchg
sahf
outsb
dec
sub
test
sbb
xor
cs
dec
movsb
movsl
test
sbb
aas
clc
cmp
out
jp
cmp
inc
jae
daa
cmp
das
adc
popf
xor
adc
aaa
mov
ja
mov
pop
push
cmp
mov
incb
jae
mov
lds
and
mov
mov
rcll
mov
inc
hlt
fisubs
fists
mov
xor
scas
iret
pop
and
mov
call
sub
adc
cmc
cmp
lcall
jecxz
cmp
ja
out
mov
rorl
jge
mov
jbe
mov
fsubrl
mov
sbb
jmp
adcl
pop
xor
popf
dec
push
cs
aas
pop
cmpsl
mov
xchg
adc
xchg
je
sti
addr16
std
cmc
test
iret
inc
or
pop
sbb
or
mov
int3
pop
sub
adc
xchg
add
das
push
pushf
int3
inc
xchg
mov
or
stos
push
sub
mov
pop
mov
int
mov
dec
les
xor
icebp
lods
flds
fwait
dec
mov
out
xor
jns
add
enter
cmpsl
and
sbb
lahf
pop
inc
sbb
xor
pushf
adc
shll
insl
clc
in
int
call
lods
popf
sub
cmp
mov
mov
jo
sub
cmp
jl
push
mov
lea
pop
loopne
inc
aaa
jge
es
mov
insb
ret
dec
fs
push
xchg
jmp
lods
xchg
xor
mov
dec
test
add
test
adc
insl
mov
mov
inc
mov
aaa
fstpl
filds
insb
xor
shl
std
adc
pop
rolb
or
loop
loop
in
out
orl
and
hlt
and
ss
aam
emms
pushf
mov
jl
and
fwait
add
inc
fiadds
fidivs
in
fsubr
fldt
data16
xchg
je
push
add
inc
lahf
fnstcw
add
jecxz
jns
sbb
sub
sub
sbb
ljmp
les
es
in
xchg
iret
sub
adc
push
insl
sub
jg
fadds
aas
ror
ljmp
scas
jb
lcall
mov
mul
add
jns
nop
dec
push
and
xlat
sbb
jnp
roll
imulb
or
call
fidivrl
sbb
inc
pop
add
push
xor
sbbb
add
mull
adc
and
push
pop
or
gs
mov
ljmp
or
stos
les
push
jne
mov
adc
dec
loopne
notb
loope
push
add
repnz
in
cmp
sbbl
ja
add
push
mov
in
rcr
pop
xor
int
dec
mov
fbld
mov
mov
sub
mov
sub
cmp
jbe
lock
or
inc
movsl
mov
lahf
aad
push
mov
sub
pop
hlt
inc
mov
roll
xorb
frstor
cmpsl
push
cmp
adc
mov
push
rcl
int3
sub
xlat
call
mov
ret
push
mov
fmull
das
add
push
cmpsl
and
out
out
test
pop
daa
inc
sbb
add
mov
int
movsb
adc
and
mov
cwtl
in
mov
push
pop
mov
mov
addr16
test
sub
loope
stos
lods
pop
mov
out
loopne
es
cmp
test
pop
pop
sub
sbb
jb
push
sub
xor
or
fcompl
xchg
sub
sub
fcoml
inc
cmpsb
fnstenv
jbe
sbb
adc
loope
sarl
ljmp
mov
jmp
mov
stc
outsb
pop
pop
pushf
test
in
push
xor
mov
cmp
sbb
cmpsl
lods
sub
hlt
xor
rcr
iret
in
in
scas
inc
in
out
push
dec
adc
adcl
cltd
mov
loope
xchg
jecxz
and
jge
ds
in
ret
xor
push
call
sub
mov
aam
xchg
rcrl
out
popf
and
xor
sbbl
xchg
mov
inc
pop
arpl
in
mov
stc
pop
jbe
fchs
sbb
xchg
inc
dec
inc
mov
cmpsl
push
not
cltd
sub
inc
push
sbb
test
pusha
in
and
push
sub
dec
xor
and
ljmp
push
je
aas
pslld
decb
fisubs
sahf
enter
ficoms
inc
je
loopne
pop
adc
icebp
sar
adc
mov
and
dec
inc
addl
push
call
sbb
adc
xchg
sbb
dec
loop
pushf
cmp
nop
and
fisubl
cli
les
mov
mov
test
mov
sub
sub
cld
mov
mov
test
repnz
xchg
test
add
dec
adc
adc
mov
adc
xor
inc
out
lods
mov
loop
pop
rcr
div
mov
es
xchg
adc
loop
lods
sbb
jmp
xor
and
cmpsb
and
mov
ja
test
sub
mov
incl
xchg
xlat
iret
pop
inc
pop
pop
enter
cmp
push
insb
jnp
push
fs
out
ret
jae
call
rorl
cmp
movsl
xor
mov
push
fcmovbe
mov
push
or
jns
jb
in
arpl
sbb
mov
mov
push
in
mov
enter
rorl
or
out
sti
pop
pop
fdivr
pop
mov
ja
cmp
mov
gs
scas
ss
sbb
add
fimull
jns
jp
test
jbe
sub
test
xchg
inc
subl
or
call
or
sbb
cwtl
mov
jb
test
stos
insl
dec
call
nop
jnp
mov
sahf
stos
dec
jmp
adc
inc
ljmp
xacquire
mov
jns
push
cmp
faddl
imul
dec
cmpsb
cwtl
in
sbb
lods
test
pop
jmp
push
inc
movsb
mov
dec
and
xlat
adc
in
xchg
dec
test
jo
sub
inc
imul
stos
lds
mov
and
or
and
adc
sbb
push
sub
int3
and
sub
xchg
jge
inc
out
and
xchg
xchg
mov
cmpsl
add
mull
pop
mov
push
aad
push
pop
dec
scas
sub
jmp
mov
clc
popa
and
xchg
xor
xchg
sti
int
lock
push
mov
lret
mov
cmp
imul
pop
dec
lahf
sbb
fstpt
cld
add
xor
push
es
call
jno
jnp
loopne
pandn
add
arpl
mov
dec
cmp
adc
mov
push
dec
je
dec
mov
rorb
lcall
int
and
movsl
inc
inc
push
mov
xchg
jecxz
xchg
insl
fdivs
dec
dec
gs
dec
in
dec
shrb
and
popa
fdivs
imul
inc
bound
mov
push
adc
mov
xchg
lods
pop
jae
dec
popa
adc
sbb
fldz
xor
dec
subb
pop
xchg
nop
ljmp
fcmove
sub
hlt
lcall
lock
xchg
and
inc
mov
jl
mov
mov
addl
mov
pop
fxtract
pop
cld
fildll
sbb
adc
push
in
xor
sbb
jl
mov
jnp
sbb
xchg
out
and
mov
xchg
add
out
cld
dec
mov
repnz
mov
push
imul
cmp
inc
push
pop
rcrb
mov
shrb
popf
cmp
fnstenvs
adcl
fildll
cmp
push
repnz
outsl
mov
sub
jbe
pop
cwtl
sbb
movsl
imul
ljmp
mov
sub
pop
out
jl
xchg
cmp
sbb
in
push
push
add
mov
repz
es
jmp
dec
add
std
fscale
sbb
cmc
fists
push
inc
jg
sbb
shr
cmp
dec
xor
push
dec
out
jecxz
aam
jmp
rcll
out
lret
divl
mov
mov
push
add
test
mov
pop
lahf
not
cmpsb
movsb
gs
arpl
fwait
push
inc
jp
cli
xchg
cmpl
lods
push
nop
loopne
dec
or
push
fwait
dec
out
sbbb
in
dec
mov
in
jae
rorl
jl
mov
dec
push
mov
jl
xchg
fmuls
push
daa
fwait
push
push
and
nop
adc
cmpsl
pop
xchg
push
cmp
mov
idivl
fcmovbe
xchg
shrb
and
pop
dec
mov
and
gs
pop
jg
inc
mov
aam
or
lea
or
jbe
mov
add
add
xchg
aad
sub
std
ss
mov
xor
sub
sbb
fcoms
imul
inc
push
add
sbb
jl
cltd
cld
pop
insl
cmp
fwait
addl
adc
sbb
sahf
loopne
push
pop
mov
or
xchg
push
aad
sbb
mov
stos
pop
pop
iret
inc
cmp
jecxz
sub
push
mov
lahf
and
or
ficompl
pop
cmp
test
cmpsb
lahf
decl
jmp
or
and
cmp
dec
cmpsb
sub
loop
and
cmp
jg
jecxz
repz
jb
out
lahf
xor
pop
je
and
mov
or
icebp
cs
lret
ljmp
icebp
sub
xor
add
fcmovnb
cld
cmp
mov
add
pop
dec
xchg
mov
cmc
jne
outsl
jns
rcll
and
arpl
in
addr16
cmp
push
mov
lahf
nop
inc
and
popa
mov
flds
xor
push
dec
stos
mov
push
jo
test
addr16
xor
insb
lea
int
pusha
pop
and
sbb
pop
mov
xchg
sub
outsl
cmpl
jmp
in
js
adc
int
pop
gs
enter
push
repz
push
mov
or
shlb
push
pop
test
mov
repz
and
push
movsl
jmp
ret
mov
sub
cmp
aam
lcall
push
rcrb
fidivs
adc
dec
add
push
or
xor
jmp
stos
adc
or
js
repnz
sub
fsubrs
insb
stc
sbb
out
dec
out
out
sub
sahf
lds
ret
scas
icebp
lock
lds
xchg
dec
jno
jmp
inc
jl
lret
or
xchg
fisubrl
into
loopne
mov
jno
sub
or
mov
push
and
popf
inc
sbb
das
popa
leave
sub
mov
stos
xchg
test
ficompl
fldcw
mov
dec
cmp
jo
outsb
aam
sub
loop
dec
xchg
add
mov
dec
mov
loope
lea
mov
inc
jo
xchg
xor
sub
mov
sub
mov
mov
mov
outsl
jo
inc
test
nop
js
add
push
ret
inc
pop
js
mov
mov
and
xor
bound
shrb
pop
pushl
shl
xchg
mov
imul
mov
mov
lds
xor
pop
sub
mov
hlt
cmp
scas
jb
mov
loop
shl
add
sub
dec
and
sub
cld
stos
mov
cmp
das
mov
and
cmc
dec
fidivl
in
sub
shll
jo
insl
rorl
insl
jb
adc
sub
and
in
jns
arpl
ljmp
loopne
int
dec
aas
scas
popf
movsb
popf
inc
pop
cmovp
insb
and
loope
cmp
and
out
xchg
mov
fildl
mov
jg
mov
sub
outsl
into
dec
in
lcall
cwtl
in
mov
fstpt
add
mov
push
xchg
aad
daa
aas
add
fld
add
adc
stos
inc
or
xchg
push
aaa
cmp
mov
addb
mov
or
mov
ja
xor
aas
in
sub
mov
push
frstor
fcompl
mov
fcoms
cmp
push
mov
data16
popf
shlb
jns
pop
bound
cmpsb
or
incl
gs
push
arpl
adc
out
push
fisttpl
call
push
cmp
mov
ror
cmp
inc
jbe
lock
push
sti
mov
push
jl
int
arpl
sbb
aam
pop
mov
dec
leave
sub
lcall
loop
pop
out
jns
and
das
dec
push
adc
rcrl
jl
xchg
jecxz
cli
roll
mov
paddw
scas
cwtl
cli
mov
push
jo
dec
jp
adcb
sti
int3
loope
js
push
xchg
outsb
push
cmc
and
sub
mov
mov
in
sub
aam
mov
push
xchg
shll
adc
dec
cld
hlt
sbb
cmp
ficompl
fistps
mov
loopne
mov
hlt
cmp
adc
test
test
in
ret
mov
xchg
in
mov
call
lret
inc
dec
lds
mov
cmc
and
jmp
sub
and
loopne
pop
and
les
push
lret
cmp
mov
fisubl
xchg
inc
mov
insl
call
push
shrl
repnz
lds
lods
or
and
jl
fists
dec
call
or
xor
lret
popf
insb
adc
jae
fiadds
lods
xchg
mov
out
lods
sbb
pop
xchg
cmp
imul
rolb
orb
nop
lods
in
lcall
mov
adc
mov
test
mov
lods
cmp
loop
inc
dec
mov
xchg
mov
ljmp
jb
push
dec
sub
sti
lcall
xor
aaa
lret
repnz
lods
insl
hlt
in
out
cmp
aad
icebp
mov
push
sub
mov
pop
sub
lods
arpl
pop
sub
ljmp
cli
sub
add
and
dec
testb
loopne
xor
mov
cltd
mov
or
scas
inc
sahf
and
jmp
jge
mov
aaa
pop
ljmp
mov
push
clc
mov
inc
bnd
sbb
lahf
xchg
jo
add
ljmp
sbb
jge
add
lahf
fwait
cmp
fdivs
cmp
pop
cmp
xchg
popa
push
jp
sub
ljmp
loop
orl
cmp
pop
addb
clc
outsb
sub
pop
push
xchg
hlt
sbb
scas
les
cmp
fcom
or
mov
sub
js
fnstenv
sbb
jb
and
iret
hlt
push
push
sub
fidivrs
lods
data16
jl
mov
lcall
sub
data16
add
or
or
sbb
add
ret
xchg
lahf
adc
clc
lds
cmp
dec
mov
fs
dec
loope
out
popf
outsl
imul
cmp
jp
inc
imul
jnp
sbb
cmp
pop
iret
ja
aad
ljmp
xchg
mov
xchg
and
xchg
aas
adc
xchg
sbb
jmp
sbb
inc
testl
xor
xor
orl
mov
or
leave
xor
aad
outsl
jp
imul
and
sub
mov
movsb
sar
jae
mov
push
mov
nop
in
sahf
mov
jg
mov
imul
pop
cli
lahf
in
jnp
loop
bound
push
mov
enter
jmp
dec
decb
loope
adc
or
or
xchg
jmp
mov
sbbb
cltd
orl
ret
or
lock
adc
je
and
int
lret
rorb
xlat
sub
push
dec
mov
xor
and
and
adc
ret
mov
or
sahf
push
nop
enter
sbb
dec
adc
enter
shlb
incl
mov
shr
and
dec
jmp
stos
je
dec
icebp
jge
lret
mov
scas
cld
lods
insl
adc
cmp
adc
iret
sub
lahf
mov
ja
andb
imul
jbe
push
mov
std
shlb
fdivp
fcoml
and
js
dec
fnsave
mov
cmpsl
mov
mov
fstl
or
mov
vmovsd
jge
and
ss
mov
aas
sbb
sbb
jb
mov
mov
sub
loopne
fwait
in
insb
into
and
dec
es
push
xchg
lret
push
lret
fisttps
push
mov
es
sub
push
vpackssdw
cmp
in
mov
xchg
lret
push
mov
mov
pop
pop
ljmp
jne
lret
out
jne
pusha
ja
inc
dec
rcr
xor
lock
or
pop
cmp
nop
dec
insl
scas
or
xchg
dec
mov
xchg
xchg
dec
aas
pop
in
bound
adc
push
repz
xor
ror
mov
stos
scas
jb
mov
rorl
sbb
mov
mov
jo
mov
fs
dec
pop
sbb
shll
xchg
cmpb
into
xor
sbb
pop
sub
mov
pop
por
test
cli
test
push
mov
xchg
hlt
mov
pushf
cmp
out
loopne
dec
mov
scas
or
or
xlat
seta
rcrl
sub
xchg
lea
mov
mov
push
adc
in
cld
dec
fcom
jl
test
sub
dec
ret
insl
mov
repz
xchg
outsl
push
adc
inc
push
xchg
mov
cmc
xchg
mov
imul
xor
fnstcw
push
outsb
jne
in
lret
in
loop
push
mov
add
loopne
pop
ret
int3
out
call
sbb
test
sbb
sbb
icebp
sub
lock
dec
fstl
loop
call
sbb
jl
add
enter
rorb
xor
sbbl
test
scas
dec
stos
movsl
sar
mov
iret
fucomip
sti
fnstenv
xor
dec
idiv
xchg
or
push
jecxz
push
popf
fs
out
sub
cmpb
mov
dec
push
lahf
pop
ljmp
mul
and
adc
sbb
cs
adc
sbb
lods
or
stos
fisubl
fs
push
cli
cmpsl
jg
adc
test
imul
mov
push
addr16
mov
lahf
or
sahf
mov
sub
jle
loop
jle
sub
repnz
xchg
stos
and
int3
and
pusha
mov
mov
cmp
mov
pop
popa
test
adc
mov
jns
inc
mov
add
mulb
outsb
ret
pop
jg
sub
xchg
sbb
and
and
dec
and
dec
mov
cltd
rclb
in
mov
fstl
ljmp
stos
mov
xor
scas
movsl
sub
dec
ds
test
rorb
mov
pop
sbbb
fs
mov
cltd
sysret
mov
data16
mov
daa
pop
push
popf
push
add
jmp
jno
mov
adc
insl
iret
iret
push
lods
andl
or
fidivl
roll
mov
clc
mov
jge
inc
jg
sub
stc
mov
movsb
or
movsb
ss
mov
mov
push
les
data16
je
and
cmp
mov
lahf
mov
jp
jae
popf
ret
mov
lds
mov
ljmp
cli
sub
jge
mov
pop
ret
pop
out
mov
xor
insb
aad
mov
xor
arpl
pop
out
in
test
out
jb
test
xor
mov
cmc
pusha
adc
decb
mov
int3
inc
arpl
cmp
pop
int
mov
sbb
push
xor
jnp
mov
pop
push
cmc
push
rcrl
sbbb
sbb
lcall
push
mov
xchg
clc
jo
test
push
lret
add
sbb
sbb
ss
xchg
push
ss
pop
sub
hlt
lods
jl
dec
arpl
ror
sbb
fdivs
sbb
or
sahf
sub
je
das
push
and
or
jae
mov
push
cli
sbb
adc
dec
pop
mov
or
arpl
xchg
mov
xor
testl
pop
jmp
mov
jns
popf
mov
mov
cli
push
lds
dec
push
cs
xor
outsl
mov
xor
rolb
inc
adc
add
lret
and
and
sahf
mov
push
cmpsb
out
sbb
xchg
xor
xor
or
lcall
cmc
mov
mov
mov
add
mov
int3
aaa
sbb
pop
pushf
fimull
xor
cmp
or
cwtl
xor
xchg
cmp
sub
pop
daa
int
mov
test
xorb
les
mov
dec
adc
fisubl
jns
fistps
mov
frndint
pop
cmpsb
jnp
test
hlt
push
inc
mov
jl
loopne
xor
pop
cmp
mov
adc
lret
lea
lods
sbb
stc
mov
or
lods
mov
and
cltd
pop
mov
aas
ss
icebp
mov
jmp
fwait
movsb
dec
pushf
push
add
aaa
insb
jno
loopne
mov
fimuls
repnz
or
pop
pop
bound
hlt
dec
mov
and
xchg
dec
ss
inc
inc
ret
aad
call
mov
cwtl
and
sbb
lea
repz
shrb
ss
pop
lahf
sti
and
sarl
mov
loop
sahf
jno
sbb
adc
push
icebp
mov
inc
xorl
pop
adc
sub
dec
stos
jo
stc
mov
lret
repnz
xchg
xor
mov
xor
jmp
adc
shlb
or
fndisi(8087
pushf
dec
test
pop
or
loope
push
push
call
lods
and
inc
nop
sbb
pusha
jl
fidivs
mov
jl
xchg
fmul
iret
fsubl
adc
push
sub
lods
lahf
push
nop
xchg
cld
daa
mov
cmc
ret
push
jno
xchg
scas
cwtl
movsb
cmp
pop
dec
pop
sarb
jg
jbe
adc
mov
int3
jnp
std
dec
aaa
fcmovnbe
and
out
scas
test
mov
movsb
cwtl
dec
dec
push
xchg
xchg
rclb
leave
test
push
and
rol
stc
xlat
pop
jns
cmp
pop
out
insb
js
pushf
jle
loope
jo
xchg
sub
xlat
int3
fdivr
jnp
xchg
cmp
inc
out
scas
lea
lahf
jecxz
adc
lock
loop
mov
icebp
and
cmp
xchg
or
dec
and
mov
xchg
dec
mov
iret
filds
in
add
sbb
xchg
lea
loopne
mov
mov
adc
xor
les
jle
dec
sbb
jecxz
dec
call
aaa
jnp
sarb
clc
aad
xor
xor
xor
mov
ljmp
lds
adc
lock
push
cmp
pusha
jne
or
mov
xchg
sbb
ficoml
dec
lods
cmp
sub
enter
jno
push
fcomi
xchg
pusha
pop
and
xlat
shl
cld
shl
pop
pushf
sub
dec
mov
lock
test
rcr
jae
push
push
std
notl
mov
jae
aas
jge
add
jle
call
mov
pop
sub
mov
mov
pop
sbb
stc
push
jle
pop
mov
fwait
lock
sub
pop
mov
xchg
ret
lret
sub
adc
test
sahf
subb
imul
add
jns
ss
test
loope
sub
dec
lcall
dec
movsl
call
in
xchg
femms
xchg
stos
jne
aam
out
repnz
or
sbb
mov
push
pop
mov
inc
adc
push
mov
sbb
xor
arpl
aad
jmp
fistps
xchg
jmp
lea
hlt
push
das
lret
clc
pop
or
cmp
and
mov
and
ret
arpl
fimull
push
scas
mov
and
mov
inc
outsb
and
sbb
repz
aad
cmc
lock
mov
xor
repz
xchg
or
or
sahf
in
xchg
cmc
fsubr
jb
add
pop
mov
cmpsl
jns
push
out
or
stos
xor
sub
dec
pop
dec
imul
popa
xor
in
lea
in
mov
mov
repnz
ficoml
cmpsb
lcall
mov
mov
dec
xor
dec
je
jo
add
xor
in
std
shl
mov
loop
sub
or
es
push
repz
dec
xchg
and
jnp
std
mov
les
adc
insl
pop
xchg
cltd
xchg
dec
push
adc
sub
cmp
or
adc
xchg
mov
xchg
flds
fstpt
or
sub
dec
cmp
pushf
loop
test
dec
loopne
testl
dec
shll
jbe
scas
outsl
add
xorl
fstps
pop
hlt
mov
pop
xchg
cmpb
sbb
and
xchg
sbb
loope
xchg
inc
and
adc
inc
or
sahf
insb
xacquire
dec
sub
mov
cmpsb
in
rolb
lcall
adc
and
sti
bound
or
addb
cmp
mov
lret
ja
jg
sub
inc
outsb
aam
jge
sysenter
scas
daa
or
mov
inc
stos
cwtl
push
jge
mov
aaa
cmpsb
cmpsb
movsb
dec
push
fmul
jg
mov
loopne
mov
mulb
movsb
sub
adc
push
mov
push
cmpsb
xchg
pop
daa
adc
in
fistps
pop
enter
push
iret
into
dec
movsl
mov
add
xor
insb
push
push
popa
test
ret
xlat
push
int3
xchg
ja
aaa
test
mov
fisubrs
sbb
clc
repnz
mov
icebp
mul
cld
lcall
or
mov
das
insl
push
pop
inc
pop
mov
stc
xchg
shlb
sti
test
sub
cmp
sub
dec
faddl
arpl
add
arpl
insl
push
xlat
mov
mov
fldenv
push
xchg
es
aas
or
xor
int
rclb
mov
inc
mov
das
movsb
add
std
nop
data16
fdivs
pop
and
das
maxps
push
lret
outsb
out
mov
aam
cmp
jge
ror
outsb
pop
add
push
js
js
repz
pop
mov
dec
mov
cwtl
sub
sub
add
aad
jg
inc
xlat
popa
or
fcmovnbe
cmp
pop
test
pop
cltd
push
cs
stc
out
stos
imul
jle
lret
ret
mov
sub
popa
xchg
outsb
mov
inc
pop
jae
test
lgdtl
into
ret
sub
inc
dec
jecxz
mov
xor
add
clc
mov
sbb
mov
test
cltd
xchg
push
mov
cmp
mov
sbb
es
fists
mov
jle
testb
and
cmp
push
dec
jae
lret
xor
and
push
xor
fwait
cmp
cmp
mov
out
pop
jo
out
add
aas
sub
xchg
stc
leave
cli
lock
pop
mov
xchg
xchg
inc
add
add
orb
out
fnsave
cltd
push
mov
aad
inc
mov
ret
mov
cld
push
sbb
icebp
mov
pushf
mov
pop
test
inc
outsl
pop
cmpsl
adc
popf
dec
cltd
testb
dec
cld
lret
push
cmp
mov
lea
sbb
add
aas
movl
or
mov
dec
xchg
test
mov
dec
mov
daa
andl
in
sub
out
xor
push
testl
fisubrl
lods
mov
dec
jg
mov
mul
inc
or
icebp
dec
addr16
vpsrlq
inc
in
or
xchg
mov
je
lcall
inc
lret
jnp
insb
fmulp
mov
sbb
adc
push
mov
mov
jg
out
rorb
jecxz
movsl
adc
jbe
mov
pusha
push
mov
scas
stos
pop
add
scas
push
aas
inc
and
mov
jge
repz
jle
int
es
mov
movsl
ret
lds
into
or
mov
dec
xchg
fwait
xlat
pop
popf
xor
pop
and
pop
mov
lahf
add
call
repz
aas
shrb
or
mov
out
call
add
out
cmpsb
push
in
pop
or
or
dec
sub
lret
loope,pn
inc
sbb
cwtl
adc
cmp
lret
dec
xchg
sbb
mov
fucomi
mov
fcompl
mov
xchg
cmp
xor
mov
or
cwtl
xchg
xor
and
cmpsb
inc
stos
inc
inc
pop
mov
lret
xchg
xor
test
sub
and
fidivrs
or
lds
daa
or
imul
xor
pushf
sub
push
hlt
push
cmp
push
xorl
ret
pushf
outsb
xchg
sub
mov
xchg
ret
push
xor
mov
loop
xchg
loopne
push
sub
inc
mov
mov
rorl
or
cmp
and
fcmovb
cmc
lea
or
add
sbb
testb
adc
add
ficoml
mov
jnp
xor
and
dec
xor
arpl
adc
loop
sub
sub
je
loope
inc
pusha
pop
test
xchg
stos
and
jge
cmp
into
mov
inc
pop
pop
in
xchg
icebp
lahf
cltd
cmp
shll
sbb
loop
push
jp
pop
add
sar
mov
or
mov
xor
push
popf
cwtl
sbb
dec
cmp
mov
icebp
jne
and
xor
mov
push
lods
cmp
cmp
xchg
stos
ffreep
dec
adc
cwtl
add
cmp
scas
lret
pop
jbe
mov
push
imul
xor
sub
aam
cmp
lcall
or
dec
loop
in
jp
add
sbb
jle
mov
lea
mov
out
ljmp
inc
mov
xchg
aam
mov
xor
xchg
mov
sahf
scas
pusha
push
xchg
fists
lret
inc
std
mov
sbb
or
push
mov
negl
add
xor
je
dec
sbb
imulb
xchg
jno
sbb
or
shrl
jno
test
mov
out
in
push
repnz
fcoml
cltd
lock
cmp
cmp
es
fisttpl
dec
lcall
sub
and
fsubrs
xor
mov
je
or
sbb
xchg
pop
mov
sub
lcall
clc
pop
cld
scas
adc
push
jno
cltd
enter
fdivs
enter
xor
movaps
and
shr
cmp
pusha
sub
mov
flds
dec
cld
or
push
repnz
int3
mov
mov
mov
xor
inc
enter
rorb
or
loopne
sbb
xchg
xchg
movsb
out
xchg
jo
push
jne
movsb
pop
jmp
sub
ds
mov
cmpsb
clc
out
jl
jp
imul
inc
repnz
popf
mov
dec
and
jbe
aam
push
push
dec
loop
pop
cmp
test
or
cmp
les
mov
loopne
test
mov
push
xchg
mov
stos
sub
int3
cmp
sbb
enter
out
loope
insl
outsl
xchg
movsl
aaa
gs
popf
mov
call
and
mov
mov
aaa
loopne
rclb
imul
pop
cmpsb
and
adc
xchg
and
mov
sahf
mov
xor
clc
scas
xlat
xchg
and
mov
mov
dec
lea
and
popf
icebp
loop
xchg
pop
sbb
fists
mov
xor
aam
test
adc
cmp
xor
push
addr16
and
push
inc
sub
and
lock
clc
jbe
xor
movsl
pop
pop
jbe
testl
and
lods
ljmp
xor
out
add
xor
pop
cmp
mov
stos
and
adc
mov
mov
fisttpll
insb
aam
sbb
ss
inc
cmp
adc
icebp
bound
es
ss
push
es
cmp
adc
ficoms
movsb
das
and
push
jae
mov
sub
pop
inc
mov
xchg
lods
cmpsb
sbb
add
adc
imul
and
arpl
push
insl
cmp
dec
mov
mov
loopne
aad
ja
enter
rclb
aam
xchg
cs
mov
shrb
jle
sahf
inc
ror
inc
xchg
mov
push
scas
fs
xlat
cwtl
sbbl
pop
inc
mov
das
xor
and
arpl
lahf
push
or
push
pop
aaa
cld
and
jne
or
xchg
jae
shrb
jbe
xlat
aas
in
xor
pop
les
add
call
inc
lods
push
imul
xchg
out
imul
pmulhuw
imul
inc
xchg
pop
aam
pop
pop
lea
clc
pinsrw
and
or
sub
and
stos
filds
mov
std
push
outsl
cwtl
ret
dec
lea
or
or
sub
test
stc
aaa
pop
pop
or
fwait
mov
pop
mov
lds
sarb
jbe
sbb
pop
dec
mov
adc
test
mov
inc
arpl
sub
or
mov
call
sbb
insb
imul
in
jle
insb
pop
mov
mov
add
les
xchg
outsl
mov
sub
outsb
dec
jae
pop
xor
xor
cmpsl
into
lea
mov
jp
mov
add
es
pop
mov
jo
mov
and
dec
dec
mov
or
insb
mov
es
add
lret
aaa
aas
je
iret
dec
jecxz
int
push
lcall
adc
and
mov
dec
scas
out
jp
fcmovnu
push
icebp
mov
pop
and
adc
xor
xchg
mov
pop
outsb
and
das
or
mov
out
into
lcall
call
in
into
repnz
dec
imulb
out
mov
stc
cltd
les
popa
mov
loope
xchg
mov
xchg
push
dec
insl
sub
icebp
stc
sub
pop
dec
or
sti
and
dec
mov
cmp
test
dec
xchg
into
out
add
mov
push
into
jge
lods
sub
scas
lahf
or
ja
loop
movsl
fmuls
xor
repnz
pop
jl
clc
aaa
enter
push
cwtl
add
sarl
jg
sub
in
and
push
test
jne
ds
shl
push
ja
pop
adcb
add
sbb
push
lcall
repnz
mov
movsl
mov
mov
mov
push
bnd
mov
lahf
lods
xchg
cmp
xchg
lock
mov
sbb
rorl
ret
xchg
mov
push
inc
add
mov
cs
xchg
push
lcall
or
aaa
lahf
les
in
jl
mov
shlb
xchg
push
xor
arpl
aad
jl
add
popf
fsub
stos
jge
push
cmpsb
mov
mov
popa
jo
icebp
sahf
je
test
push
mov
cmp
test
hlt
in
popa
pop
fwait
mov
inc
shr
jae
dec
push
push
cmp
push
cwtl
or
data16
jp
push
adc
push
inc
adc
push
or
ret
push
hlt
add
adcb
mov
pushf
add
ljmp
cmpsb
mov
insb
jnp
xchg
fyl2x
incl
mov
fistpll
lahf
insl
xchg
push
movl
xor
dec
test
out
cmp
adc
iret
int3
or
pop
lret
fs
stos
int
lret
mov
xor
mov
jb
mov
cmp
out
nop
and
arpl
push
clc
dec
cs
mov
mov
ficomps
sbb
adc
cli
sti
cltd
pop
push
and
daa
adc
push
clc
dec
inc
inc
jbe
dec
data16
ljmp
das
stos
add
out
or
push
lods
in
jl
dec
xlat
sub
add
xchg
mov
mov
fucomip
mull
arpl
out
shl
scas
ficomps
pop
fsubr
mov
aaa
rclb
and
dec
stc
fwait
sbb
push
test
and
ds
sub
test
cltd
aad
rclb
jl
lea
lahf
pop
push
test
lcall
icebp
mov
push
mov
or
add
inc
cmp
stos
jns
or
mov
xchg
gs
sbb
mov
sahf
adc
xor
add
xchg
mov
xor
adcb
xchg
pop
adc
bound
mov
xchg
lcall
sub
lret
jle
dec
in
ds
lods
scas
test
mov
xor
xor
movsb
clc
dec
or
and
sub
xlat
lock
sbb
pop
add
jg
repz
rcrb
outsb
sub
pop
and
mov
add
cs
stos
fdivs
stc
popf
test
es
sbb
xchg
xlat
mov
inc
mov
mov
cmp
or
cmp
mov
shll
push
rclb
add
push
scas
xchg
leave
and
jle
push
out
mov
sbb
dec
ficoml
into
xchg
xlat
push
mov
xor
mov
cld
inc
fst
pop
pop
fsubl
imul
test
sbb
pop
mov
sahf
sti
daa
ret
es
add
cmp
aad
ja
sbb
roll
test
aam
cmc
cmp
pop
testb
ds
rorl
es
inc
adc
push
cs
push
mov
push
jl
inc
in
ds
xor
sub
and
pop
repnz
ljmp
fisubs
mov
xor
ja
push
mov
xor
pop
cmp
mov
pop
add
les
cmp
push
fstpl
stos
xor
add
cmpl
rolb
and
daa
scas
cmp
add
and
gs
jb
lea
jl
scas
dec
mull
outsl
adc
repz
jo,pn
daa
test
stos
add
ja
add
sbbb
in
mov
push
add
pop
jb
aaa
jne
pop
icebp
repnz
imul
inc
and
dec
clc
mov
cli
sub
outsl
andb
ret
cmpsb
loopne
push
add
pop
sbb
test
pop
cmp
std
cmp
xor
mov
lret
mov
pusha
movsb
sbb
cmp
fists
outsb
test
lods
push
lea
cld
jp
mov
cmp
dec
stos
sahf
jmp
ljmp
pop
cltd
sbb
sti
fcmovnu
jp
iret
pushf
jle
sahf
rcrb
add
jle
ret
xchg
mov
iret
mov
xor
ret
jnp
repz
mov
jg
xor
add
adc
data16
dec
jl
sbb
arpl
jnp
and
add
push
mov
push
add
cmp
rcll
jmp
jmp
cmp
xchg
xchg
cmp
mov
mov
divl
xchg
call
xchg
sahf
daa
test
clc
dec
or
sbb
adc
shrl
fisttps
or
or
mov
hlt
mov
test
fwait
repnz
lds
jl
movsb
imul
mov
out
imul
pop
rcrl
xchg
and
into
sbb
push
inc
and
adc
lock
jae
cmc
dec
xchg
mov
cltd
jp
rolb
pop
gs
loope
xor
inc
add
lods
stos
push
movb
cmp
adc
push
xchg
add
sub
adc
xor
notl
push
pop
dec
mov
gs
jbe
outsb
mov
jmp
int3
int
or
push
lock
mov
imul
jbe
leave
cmp
xor
mov
xchg
xchg
mov
mov
adc
stos
dec
and
dec
test
lret
sub
jl
dec
and
inc
jmp
or
roll
es
mov
lds
js
xchg
ds
and
fldenv
xchg
lahf
lret
jp
nop
sub
mov
jmp
in
xor
cmp
loope
test
in
out
push
pop
cmp
in
daa
inc
dec
and
lret
shll
push
movsb
add
xor
mov
mov
push
dec
stos
repnz
cmp
call
fcmovbe
fists
dec
adc
popf
push
mov
gs
fisttps
mov
push
iret
sbb
jle
mull
out
leave
je
outsb
and
fbld
pop
jbe
lcall
in
ret
dec
fwait
jo
mov
es
lods
jbe
push
sbbb
ficoml
fistl
shrl
enter
les
fs
cmpsb
js
fcmove
mov
lods
fldl
lahf
cmp
aad
jns
xchg
popa
xchg
pop
dec
test
mov
cli
je
pushw
rorb
xchg
testb
addl
btr
sub
shr
pop
movsb
pop
repz
sbb
aas
rep
cs
inc
leave
movsl
push
mov
push
push
je
inc
fwait
sub
mov
iret
ss
cmp
dec
add
push
cmc
ret
mov
leave
xor
push
data16
jae
fnsave
lret
adc
lcall
cmp
jbe
ror
jb
cwtl
jecxz
push
jne
ficompl
notb
lods
mov
orl
leave
pop
les
pop
fsubr
rcl
adc
es
movsb
scas
or
pop
cmp
mov
stc
inc
sub
pop
inc
gs
stos
shlb
mov
mov
sub
out
push
xor
rol
mov
fistpl
lret
jl
pop
or
cli
outsb
mov
es
ret
add
gs
repz
repz
repnz
sbbl
popa
into
adc
mov
leave
aaa
outsb
inc
jnp
imul
jle
fs
out
mov
jecxz
fwait
sub
hlt
pop
repz
inc
and
movsl
iret
popa
and
aas
div
popa
nop
jmp
stos
insb
rcr
pop
and
in
sbb
xor
or
pop
iret
cltd
adc
std
lret
daa
dec
pusha
cwtl
ret
cmp
or
bound
sbb
sub
scas
mov
dec
aad
sub
xor
and
cmp
out
push
cmp
mov
push
or
push
frstor
pop
out
icebp
movsl
in
cmpb
push
scas
mov
push
hlt
push
out
sub
sub
mov
aaa
xchg
movsw
in
cld
add
xor
dec
push
add
pop
xor
mov
mov
or
out
and
jle
gs
mov
imul
xchg
cmc
jp
lods
and
xor
and
aas
push
outsl
mov
fisttpll
fwait
stos
fs
pop
aas
adcl
lret
push
fidivl
mov
fucom
adc
cld
xchg
aas
movsb
repz
hlt
es
pop
shr
cli
dec
jmp
pop
jb
sbb
lock
xlat
daa
mov
sub
ret
pop
mov
ret
or
pop
jmp
sub
adc
mov
movsl
push
or
jae
movsb
subb
inc
movsb
xchg
mov
jp
cmpsb
test
mov
adc
insl
fbstp
mov
in
or
push
mov
push
push
sbb
and
add
pop
js
ljmp
orb
pop
loope
sti
mov
cld
pop
dec
subb
negl
adc
or
jns
inc
lods
into
mov
pop
mov
les
bound
add
cmp
aad
mov
repz
sbbb
push
mov
mov
jmp
jnp
adc
shr
xor
dec
or
mov
pop
mov
xchg
lcall
mov
das
enter
out
push
xchg
cmc
les
sbb
push
jo
nop
jecxz
add
addr16
jns
loopne
and
sub
lods
popf
push
out
sbb
fcmovu
sbb
adc
and
mov
andb
out
adc
fistps
xchg
push
inc
jne
js
popa
rcll
mov
sarl
ficomps
test
add
pop
call
cltd
iret
loop
push
stos
pop
clc
pop
mov
stc
outsl
push
sqrtps
pop
clc
sub
cld
jecxz
and
push
cmp
test
stos
push
mov
push
and
inc
sub
stos
mov
imulb
push
int3
test
sub
cmp
and
or
mov
inc
test
adc
sbb
push
pop
pop
in
adc
int3
cmp
lock
andl
inc
sbb
sbb
ret
dec
jg
xlat
cmp
sbb
adc
or
push
push
leave
es
insb
inc
mov
int3
adc
aaa
bound
inc
lods
jle
cmp
mov
aad
add
pop
or
inc
rcl
imul
cmc
xchg
imul
cld
call
dec
rep
jnp
ja
in
jecxz
mov
xchg
pop
dec
outsl
sub
sub
adc
in
and
ds
insl
dec
mov
stos
icebp
out
scas
xchg
push
cwtl
mov
test
pop
lret
xor
mov
xchg
cmpsl
sahf
xchg
sub
cmpsb
jp
dec
lock
push
adc
push
inc
dec
mov
cli
mov
cld
scas
jl
cmp
sbb
pop
lea
or
rcll
cmpsl
cmpl
das
mov
and
lret
pop
cmp
inc
mov
adc
out
push
insb
mov
cmpsl
out
leave
aam
sub
es
sti
ja
mov
aad
test
jno
push
cmp
or
test
clc
aam
stc
xor
inc
insb
je
out
jp
or
call
in
or
push
or
sbb
mov
es
ficomps
rorl
pop
rclb
ret
sub
test
pusha
sbb
leave
mov
cwtl
add
decb
dec
mov
xor
jae
lret
je
leave
data16
sbb
cmc
and
sub
rorl
fldl
std
stos
jb
cmp
jb
leave
xor
test
cwtl
pop
daa
jp
gs
subl
xor
add
stos
cmpsb
adc
push
aad
and
mov
lahf
push
push
xchg
inc
dec
je
mov
jae
stos
fisubrl
jecxz
dec
adc
es
xor
and
cmc
sar
xor
cmp
xor
mov
pop
jne
jle
pop
sbb
shl
int
push
jl
mov
scas
into
rcr
into
jb
test
or
xchg
cmpsl
jns
pop
dec
pop
mov
daa
pop
stc
out
or
inc
adcl
stc
sbbb
les
rorb
adc
mov
push
cmp
movsb
insb
scas
fnsave
cmp
rcrb
movl
aad
sbb
lea
pop
repnz
aas
mov
mov
mov
mov
cmc
adc
subb
dec
testl
adc
dec
scas
pop
xor
xchg
or
adc
aaa
lods
gs
push
xor
xchg
arpl
pop
stos
inc
shrb
dec
andb
dec
mov
add
pop
dec
lock
outsb
gs
int3
inc
lahf
push
or
mov
test
shl
std
push
pop
mov
and
cwtl
adc
xchg
stc
stos
sub
test
lahf
xacquire
repnz
test
xor
dec
rorb
ret
add
pushf
repz
sub
jg
cmp
add
out
pop
jl
and
xchg
mov
xor
cmp
fwait
sbb
sbb
loopne
mov
mov
dec
push
test
aaa
cmp
jbe
clc
mull
fsubs
call
cltd
push
push
pop
pusha
jle
mov
in
or
clc
cs
adc
cmp
push
xor
sbb
mov
mov
adc
jbe
inc
mov
mov
les
adc
out
movsb
repz
out
jb
adc
adc
leave
stos
sub
loope
cmp
xchg
cmc
imul
sbb
mov
push
or
popa
lock
scas
jg
cs
push
mov
jl
jmp
dec
mov
jnp
pop
cmp
jmpw
cwtl
into
adc
sti
adc
out
pop
es
inc
fdivrl
inc
bound
push
nop
cmpsb
adc
dec
sub
in
pop
fisubs
jo
je
adc
mov
xor
pop
iret
jbe
xor
pop
outsb
cmp
cli
lock
jl
into
pop
imul
sbb
aas
ljmp
jnp
ja
cmp
adc
aas
inc
push
sbb
cs
aas
pop
inc
cmp
or
mov
cmp
mov
xor
mov
in
xlat
shll
testb
outsb
and
scas
jle
sbb
das
inc
mov
pop
int
movsl
rcl
lcall
repnz
mov
in
jns
call
cwtl
cmp
push
xchg
inc
les
mov
popf
pop
fxch
dec
sub
xchg
push
fsubp
adcb
jl
stos
adcb
stos
cli
test
lcall
xchg
scas
mov
out
fxch
pop
insb
add
fst
fbld
inc
cld
fimuls
into
daa
mov
mulb
adc
addr16
lret
outsb
add
popf
mov
jl
mov
cmp
arpl
popa
mov
adc
ds
clc
pop
add
daa
loopne
lock
loopne
jno
push
mov
mov
in
push
or
fsubrl
mov
enter
mov
fsub
mov
dec
out
adc
mov
jl
and
shlb
mul
add
xchg
mov
xor
pop
jno
cli
lret
scas
sbb
stc
mov
imul
repnz
push
mov
jno
jne
add
xor
lret
adc
outsb
pop
gs
jbe
loop
jnp
xchg
scas
sbbb
jno
sub
imul
cmp
mov
xor
loopne
shl
jbe
movsb
sbb
fmull
dec
jg
jnp
sbb
mov
addr16
outsb
dec
jg
add
sbb
arpl
hlt
lret
xor
rcr
adc
repnz
rcrl
mov
mov
cwtl
mov
pop
and
in
jge
sub
divb
xchg
inc
and
cld
xchg
lret
adc
mov
pop
sbb
adc
cmp
inc
xor
fidivs
cmpsb
dec
cmp
inc
cli
sub
jns
dec
les
repnz
pop
or
xchg
push
dec
push
jecxz
jns
inc
daa
fnstcw
leavew
dec
pop
mov
jo
ljmp
mov
pop
scas
hlt
lods
aaa
jmp
xlat
sbb
cmpb
xchg
adc
lcall
incb
daa
xchg
xchg
or
movsl
mov
add
pop
sahf
sub
enter
inc
enter
mov
incl
sti
leave
push
mov
cmp
xchg
cwtl
roll
imul
clc
jg,pn
pop
adc
cmpsb
loopne
bound
xchg
stc
mov
popf
mov
out
xchg
pop
mov
arpl
outsl
into
loope
adc
mov
xchg
pop
or
push
call
mov
lea
sub
rcll
int3
subb
dec
test
mov
xor
outsl
inc
mov
jnp
cmp
cmp
inc
insb
cmpsb
rcrl
popa
aaa
out
insl
add
cld
add
xchg
jbe
test
insl
dec
faddl
iret
ja
or
or
push
sbb
xlat
sbb
jnp
fidivrs
sbb
pop
xchg
repz
push
xor
xor
xor
pusha
bound
pop
daa
mov
pop
sub
hlt
lret
xchg
dec
mov
or
mov
jecxz
sbb
out
pop
jae
insl
in
mov
dec
jo
sbb
mov
sub
mov
js
pop
daa
sti
cmp
jmp
pop
push
push
inc
push
cmpsl
arpl
mov
aas
scas
imul
aaa
ret
test
ret
and
jl
ss
enter
xorb
mov
mov
int3
sar
cmc
pop
cli
out
xor
pop
dec
in
setno
push
adc
mov
push
out
jp
loopne
stc
adc
mov
in
or
mov
out
ljmp
dec
inc
sbb
jns
orl
cmp
ja
or
jg
insb
cltd
pop
adc
stos
imul
push
inc
nop
cld
xchg
iret
cmp
add
adc
aas
pop
cmp
add
adc
add
inc
jmp
cwtl
clc
loop
cmpsb
in
cmc
lds
cmpsb
xor
push
testl
xor
aam
out
lods
and
xchg
pop
add
shlb
imul
cmp
testl
xchg
xor
hlt
xchg
das
mov
lcall
mov
mov
mov
cmpsl
jmp
inc
subl
arpl
pop
xchg
cmp
mov
movl
sbb
test
cmpsl
test
fcomps
push
mov
repz
rcr
aas
pop
or
jp
dec
pop
ret
mov
bound
dec
daa
jns
ds
dec
xor
cmp
dec
lods
xchg
mov
idivb
movsb
stc
push
nop
xor
sub
push
pop
ja
test
cmpsl
ret
xor
pop
lods
mov
mov
cmp
dec
mov
aaa
clc
mov
adc
les
enter
cmp
jmp
jp
mov
mov
cmp
inc
xchg
inc
fs
or
sub
ret
mov
mov
fimull
or
fldl
cmp
push
lcall
test
sarl
mov
divl
jecxz
or
in
or
mov
jae
mov
mov
pop
pop
shl
scas
mov
cmp
push
xchg
inc
rcr
pop
je
add
popf
adc
mov
aas
imul
bound
push
and
in
pop
jle
cmp
ds
mov
negl
cltd
pop
repz
movl
das
sbb
movsl
fnstcw
xor
jno
or
add
cmp
add
std
mov
sbb
testb
mov
scas
mov
cwtl
push
lods
les
or
imul
out
out
notb
adc
push
lret
mov
inc
ds
test
movsl
sub
sbb
jo
sarl
fldl
loope
xorl
loop
mov
jl
aaa
pop
insb
idivb
fcmove
add
fdivrs
mov
and
mov
push
fldl
repnz
add
pop
jmp
fs
mov
mov
aaa
or
shll
xchg
dec
repnz
repnz
ret
test
int3
pop
movsl
xor
xlat
adc
push
cmpl
sub
aam
stos
add
adc
mov
pop
sahf
push
push
cmp
push
lds
dec
xor
xor
dec
pop
xor
daa
push
loopne
loope
fs
inc
inc
pop
jnp
mov
ret
cmpsb
popf
addr16
mov
insl
mov
add
in
or
lds
pushf
add
jp
popw
xor
and
lret
popa
push
or
jmp
scas
cli
popf
mov
push
adc
cld
jno
inc
pop
lods
pushf
outsb
lret
pop
out
dec
rclb
jl
xchg
add
lret
das
add
aam
mov
xor
ficoms
call
in
xchg
jne
sbb
xchg
add
mov
aad
inc
jecxz
test
int
cmp
movsl
xorl
mov
movsb
xchg
adc
inc
stos
jo
sar
add
inc
inc
mov
shlb
sub
inc
js
cmp
leave
add
mov
add
push
ret
mov
xchg
jmp
mov
test
ss
cmp
out
xor
lcall
dec
jge
aad
ror
enter
mov
addb
scas
pop
out
and
pop
push
in
pusha
arpl
lahf
outsl
arpl
popf
mov
jecxz
pop
add
mov
fistps
push
sbb
jno
mov
jae
jmp
inc
ljmp
cmp
insb
jb
mov
cmp
lret
xorl
jo
mov
jmp
scas
lods
orl
xor
jno
mov
and
push
or
das
pop
jecxz
push
xchg
aam
out
add
rcpps
inc
addr16
cmp
lods
lock
xchg
dec
adc
adc
xorb
mov
ror
and
dec
into
inc
pusha
pop
adc
addb
push
lods
mov
cld
cmp
fcmovne
rcrl
sbb
and
fwait
mov
popa
les
shlb
out
ds
xchg
nop
mov
in
bound
dec
mov
aas
dec
jb
or
rol
loope
and
nop
aaa
mov
inc
cmp
rcll
xlat
ljmp
test
or
jae
loope
test
stc
push
cmp
dec
aad
js
dec
or
jg
and
sahf
lea
aas
mov
add
mov
adc
lock
push
aam
mov
aas
arpl
mov
and
sti
ss
test
mov
sbb
push
and
int3
sub
mov
lahf
jbe
mov
mov
ja
fsub
jge
xor
cli
adc
das
inc
fmuls
cmp
sbb
outsb
pop
mov
sbb
ret
outsl
pop
xchg
popa
je
xor
iret
std
movsb
mov
sub
pop
out
sub
and
add
mov
test
cs
or
lock
mov
pop
inc
testl
in
int3
fiaddl
push
mov
xchg
add
cmp
jle
out
pop
push
pop
cwtl
adc
push
or
push
adc
je
insb
pop
mov
cmp
push
andb
notb
mov
lods
pop
movsb
and
leave
vpaddw
sub
mov
fcos
sbb
adc
jg
xchg
xchg
or
cwtl
push
outsl
fstpl
dec
pop
xor
inc
jns
push
xchg
sub
cmp
lock
or
jb
pop
mov
add
fidivs
xor
js
fnstcw
add
xor
mov
imul
jl
pop
imul
fsts
addr16
adc
cmc
sahf
add
test
out
inc
mov
fisubrs
adc
dec
inc
jp
jae
xchg
mov
and
jmp
lret
lods
pop
sub
pop
xchg
mov
push
sbbl
mov
cmp
xor
mov
inc
cmpsl
jb
mov
adc
push
ja
push
test
je
mov
pop
int
in
or
imul
jg
imul
xor
push
int3
mov
push
xchg
dec
orl
sti
aas
jbe
mov
adc
sbb
hlt
stos
xchg
int
sub
incb
in
std
mov
cmp
pop
xchg
push
inc
xor
out
push
jno
cmp
xchg
outsl
jl
mov
jle
xchg
jle
movsb
push
clc
mov
bound
push
in
push
and
xchg
inc
rol
ret
pop
pop
pop
xor
ret
pop
cmp
or
inc
pop
ja
jno
add
mov
push
mov
repnz
aas
lahf
xor
gs
repnz
push
lcall
jae
test
cmp
pop
push
nop
mov
dec
addb
and
mov
stc
repnz
mov
or
and
add
and
add
stos
inc
adc
test
movsl
sub
sub
imulb
cmp
jle
in
lods
mov
neg
leave
aaa
xchg
jb
and
rorl
mov
mov
pop
sbb
pop
dec
and
xor
mov
mov
arpl
sarl
insb
aaa
and
fstl
call
sbb
dec
lahf
lret
mov
push
mov
jns
push
and
out
flds
inc
mov
shrb
loopne
js
les
imul
lea
mov
jbe
or
and
xchg
test
mov
shll
add
fs
ds
imul
cmpsl
xchg
jnp
and
adc
jge
xor
lcall
adc
adc
sahf
test
cmp
mov
add
dec
mov
mov
adc
sub
or
mov
fcom
mov
in
sbbb
sbb
icebp
mov
js
lods
xchg
adc
out
dec
push
imul
sub
icebp
stc
jae
jae
mov
pushf
mulb
and
call
mov
mov
negb
or
push
xor
dec
loop
sbb
xor
ret
xor
mov
pop
mov
int
cltd
sub
stos
push
push
push
mov
mov
push
int
mov
and
mov
cmp
sub
xchg
jge
negb
add
fstpl
pushf
test
test
mov
push
rorb
jmp
lret
fmul
push
in
push
js
inc
jg
mov
mov
aam
roll
mov
out
aam
popf
test
stos
jb
cmp
data16
and
shrl
pop
adc
outsb
adc
inc
aas
inc
dec
jle
push
xchg
xchg
xlat
stc
add
mov
popf
icebp
leave
adcb
imull
mov
into
or
stos
ja
mov
lret
xchg
cmpsl
push
xchg
add
inc
je
pop
dec
popa
pop
stos
adc
pop
xor
sub
fwait
jg
icebp
mov
mov
adc
jl
jmp
xchg
push
fnstcw
push
fnsave
or
pop
movl
sbb
daa
or
roll
and
inc
cmpsl
mov
pop
add
adc
mov
mov
xor
dec
fwait
ss
fs
or
dec
popa
push
dec
fistps
dec
je
mov
imul
jge
inc
clc
pop
sub
int
or
aam
xor
sbb
pop
mov
or
notb
ret
lcall
xchg
out
jns
push
pop
push
cmpb
pushf
or
pop
dec
lea
push
cs
ss
ss
je
jmp
iret
cwtl
or
pop
dec
aas
mov
cmp
lods
aam
dec
sub
xchg
xchg
push
enter
jle
jnp
les
xchg
fldl
cltd
xchg
orb
int3
ljmp
sub
mov
jne
sbb
insb
sbbb
push
mov
or
in
imul
movsb
push
outsl
sub
jbe
mov
clc
sub
scas
adc
ljmp
and
and
pop
cltd
pop
scas
jnp
inc
hlt
xchg
pusha
sidtl
dec
cmp
add
mov
mov
cld
mov
inc
sbbl
mov
sti
dec
sbb
shlb
cwtl
xor
ss
add
mov
pop
sbbb
adc
imul
fs
pop
in
pop
inc
mov
push
push
dec
or
inc
mov
mov
dec
dec
xchg
xor
push
in
sbb
push
lahf
jecxz
cmc
stos
movsl
mov
push
add
sahf
xchg
xchg
loopne
cs
test
pop
popa
xor
pop
dec
xchg
je
sbb
outsb
es
das
fistpll
adc
push
jle
xchg
shl
jl
es
adc
or
mov
jecxz
xchg
gs
pop
lret
cmp
push
mov
bswap
test
stos
push
aam
or
mov
rol
sub
adc
mov
pushf
add
mov
xor
mov
mov
add
ss
xor
cmp
cld
adcl
dec
lds
je
inc
les
mov
int
mov
gs
mov
cli
sub
sub
dec
lock
pop
and
fisttpl
add
scas
xor
cmp
outsl
add
push
andl
icebp
sbb
sbb
add
adc
dec
xor
test
sub
push
subb
push
cmc
dec
shrb
and
in
mov
jno
insl
pop
jmp
aas
add
push
int3
into
cltd
mov
cld
lock
das
sbb
icebp
sbb
daa
lods
jnp
push
jge
sahf
inc
pop
push
sbb
lea
loopne
xor
mov
add
push
mov
and
cmpsl
xlat
mov
sbbb
lds
and
hlt
sbb
loopne
das
dec
jbe
pushl
and
mov
lret
push
and
jle
fnstenv
mov
dec
lcall
mov
ljmp
jge
enter
xor
cli
ss
sub
jae
aaa
js
rorb
lock
nop
addr16
lds
jns
imul
or
mov
cs
test
sarb
fcomip
add
jb
cmpsl
push
dec
roll
inc
pop
rol
mov
mov
test
mov
pop
push
mov
adc
adc
ret
cld
cmp
adcb
or
mov
je
rorb
inc
fldcw
mov
dec
mov
inc
std
pop
call
in
xor
mov
pop
push
jl
iret
les
cmpsl
or
es
aad
pop
mov
stos
xchg
mov
orl
movsl
in
aad
lods
mov
sbb
mov
push
or
mov
in
cs
mov
ljmp
fists
mov
cmp
sti
sub
lea
push
cli
cli
mov
and
inc
dec
inc
arpl
mov
decb
mov
lea
mov
in
mov
dec
add
repz
lods
enter
dec
stc
std
in
inc
test
adc
stos
mov
scas
jmp
sti
pop
mov
mov
bound
push
or
adc
push
or
negb
arpl
add
sbb
aas
xchg
shl
fldt
js
push
sub
cmpsb
cmpsl
into
cwtl
aas
and
jl
mov
lcall
cmp
fwait
insl
ret
test
fwait
lods
mov
xchg
jecxz
dec
negl
es
enter
outsb
sti
adc
hlt
lea
pop
in
xlat
or
mov
sub
sub
xchg
add
out
push
dec
bound
clc
mov
push
dec
xchg
fcmovu
pop
mov
jbe
insl
xor
fsubrl
fstl
jae
xor
cmp
js
lods
sbb
ss
xchg
into
loope
or
jnp
push
pop
in
inc
daa
shrl
jl
lock
fldcw
fwait
xchg
sub
fidivrs
jo
outsb
sahf
mov
cwtl
aad
dec
fldenv
mov
pop
lods
mov
mov
adc
pop
jecxz
popf
and
cmp
inc
addr16
mov
loop
in
dec
bound
cld
bswap
and
jno
sahf
mov
into
sub
jmp
mov
dec
and
jns
pushf
xchg
jmp
imul
lret
pop
cmp
or
std
lods
xor
jns
je
inc
pusha
lahf
or
sub
enter
mov
dec
inc
xor
jno
dec
sbb
mov
bound
mov
iret
jge
fwait
shrb
mov
mov
or
jmp
out
mov
clc
shlb
clc
push
in
cmp
inc
inc
push
or
sbb
ffree
sub
xchg
movsb
dec
out
mov
stos
xchg
fadd
cmpsb
stos
loope
xchg
fidivs
scas
push
push
movsl
cltd
xchg
inc
jl
push
mov
push
cld
sarl
movl
punpckhdq
sub
fistpll
out
pop
lcall
ret
das
add
sbbb
arpl
les
sbb
mov
in
rcl
in
and
xchg
scas
push
in
scas
into
cltd
insl
pop
dec
orb
es
pop
and
movsb
addr16
shll
bound
add
sbb
push
mov
jle
and
outsl
test
push
xchg
fcompl
pop
das
mov
inc
add
sbb
test
and
cs
cli
sarl
and
nop
push
imul
or
jno
sbb
lahf
repnz
adc
loopne
sbb
mov
and
and
add
cmpsb
sub
push
cmc
adc
or
sub
call
jnp
outsl
add
cmp
and
and
scas
lods
mov
fisttpl
lss
ss
sahf
mov
movsb
arpl
and
iret
clc
pushf
push
sub
loop
xchg
cmp
lcall
loopne
xor
xchg
ja
jp
lods
xchg
jge
js
loopne
mov
push
inc
mov
sub
push
mov
insb
push
fs
sahf
mov
pop
pop
stos
scas
ljmp
pop
mov
mov
sbb
iret
das
mov
dec
daa
jbe
mov
or
push
stos
fldlg2
andb
pop
mov
outsb
ss
cwtl
mov
fisubrl
jb
cltd
ficoms
dec
loopne
int3
fsts
ds
fisttps
xor
in
pusha
pop
pushl
xchg
inc
mov
das
dec
das
out
ds
mov
mov
dec
je
jns
push
xor
aad
andb
add
xor
dec
pop
jp
in
lahf
outsl
cmp
pushf
flds
aaa
xor
mov
jne
push
sbb
prefetcht2
movsb
mov
aam
dec
mov
orps
jae
add
aas
dec
mov
inc
adc
push
push
push
mov
add
popf
mov
push
add
push
sahf
mov
sub
pop
sub
mov
out
scas
clc
ljmp
add
or
movsb
dec
add
xchg
int3
xor
push
and
js
aad
repz
test
push
or
sub
lret
push
mov
fsts
cli
out
call
xchg
and
pop
xchg
push
sub
sbbb
lret
pop
test
das
jnp
jle
mov
pop
xor
imul
mov
push
sarb
lret
adc
pop
xor
out
clc
jae
and
push
dec
fs
je
mov
arpl
xor
aam
or
insb
stc
sub
in
xlat
ljmp
mov
xor
cmp
fs
add
test
mov
mov
mov
pop
cmp
cmpsb
dec
xchg
inc
mov
lods
dec
lock
mov
push
jns
push
cmp
mov
push
leave
dec
es
cmp
cmp
dec
or
outsl
stos
imul
inc
aad
lds
mov
xlat
add
mov
mov
inc
in
and
out
add
mov
int3
push
hlt
loopne
aaa
sbb
jns
jl
pop
mov
ljmp
inc
rcrb
xor
push
mov
out
pop
inc
mov
mov
into
popa
nop
out
add
sti
and
je
dec
push
mov
and
mov
es
jmp
enter
repnz
sub
stos
mov
pop
add
cmc
cwtl
adc
inc
push
pcmpeqd
sbb
xchg
nop
dec
lcall
push
push
sub
int
arpl
jmp
out
aaa
mov
enter
or
jbe
adc
cmp
mov
out
sub
sub
mov
add
mov
enter
push
cmp
mov
adc
in
in
into
icebp
add
inc
mov
push
dec
xchg
sbb
arpl
adc
mov
enter
ljmp
or
xor
xchg
jp
call
jl
add
and
fwait
mov
add
pop
cs
fsubl
gs
aas
scas
and
push
stos
addr16
bound
mov
lock
daa
bound
andb
cmp
pop
or
loope
pop
repnz
jmp
adc
cs
pop
mov
jae
add
addb
xchg
arpl
lret
dec
insl
idivl
jns,pt
int3
scas
mov
mov
xchg
enter
or
inc
add
ljmp
mov
mov
jmp
sub
loop
aas
mov
insb
call
ret
jnp
test
rcl
iret
pop
jp
xchg
adc
mov
scas
sbb
cmpsl
ljmp
inc
sbb
js
dec
test
ret
xchg
xchg
dec
in
mov
shrl
es
pop
clc
mov
jb
pop
sbb
xor
repnz
xor
mov
imul
mov
jl
mov
add
mov
add
gs
idivl
dec
mov
adc
sub
inc
flds
push
out
or
inc
test
xchg
and
lea
mov
mov
push
into
jne
jo
rorb
aaa
dec
lds
fistl
into
test
mov
repnz
std
xchg
lds
add
push
es
jecxz
int
pop
pop
cmpsl
ret
sub
push
pop
fsts
mov
jns
rcll
mov
movsl
mov
cmp
or
rcll
fdivl
aad
insb
cmpsl
sub
xchg
cld
stos
inc
xchg
pop
or
daa
or
xchg
rcrl
sti
sub
add
sub
mov
pop
test
lds
fistl
sub
push
add
push
mov
adc
inc
out
xor
jge
ret
repnz
lret
xchg
mov
arpl
aas
sarb
lahf
sti
in
and
mov
scas
fsubs
mov
adc
mov
push
sbb
pop
jmp
push
jmp
jg
or
sbb
mov
ret
test
lock
imul
lahf
mov
rorb
repnz
jecxz
insl
cmc
aaa
hlt
bound
add
jp
and
rcrb
stc
jmp
push
sbb
lcall
add
sahf
cmp
adc
es
test
push
mov
pop
push
loopne
stos
jnp
imull
lds
test
push
cmp
lret
cwtl
pop
pusha
pop
cs
scas
test
je
mov
aam
dec
inc
aad
push
insl
xor
bound
pop
xchg
jl
lcall
xchg
fdivrs
out
adc
mov
ja
sub
enter
xchg
inc
mov
add
lret
xchg
leave
xchg
test
imul
leave
scas
xorb
ss
iret
jns
mov
xchg
push
push
jl
dec
push
subb
stos
fidivs
aas
sbb
inc
subb
fs
pop
fldt
inc
mov
push
mov
icebp
notl
movsl
sbb
mov
lahf
and
das
jle
xchg
lea
mov
outsb
inc
mov
or
dec
call
loope
roll
sti
push
outsb
popa
cmp
cmp
lret
dec
insb
ja
and
ret
aam
les
and
rclb
mov
int3
cmp
push
sub
dec
pop
inc
sub
call
pop
insl
fdivl
aaa
and
sub
inc
xor
jo
cmp
lret
mov
adc
lcall
or
je
cmp
cltd
daa
cwtl
pop
scas
movsl
mov
call
jp
outsb
jbe
stos
out
je
into
jnp
cmp
cmpsb
cmp
pop
pop
inc
xchg
cmpsl
lret
icebp
outsl
push
xchg
test
jg
jno
shrl
je
fbld
lcall
pop
xor
jmp
into
ror
mov
sbb
xlat
mov
cwtl
inc
mov
inc
xchg
and
jbe
add
mov
adc
and
ljmp
je
xchg
dec
cli
sub
mov
mov
xlat
scas
or
lods
lock
lret
adc
xchg
ja
mov
fs
mov
mov
in
adcb
mov
mov
sti
mov
pusha
push
mov
sub
jne
and
in
pop
loop
or
xchg
jo
jns
mov
pop
test
push
das
inc
outsb
xor
pop
aam
xchg
jne
fsubrl
xchg
loopne
jne
xor
jle
mov
push
xor
jecxz
adc
mov
mov
dec
loop
lar
mov
fcmovnb
mov
icebp
pop
mov
mov
outsb
sub
shll
fdivrl
pop
les
scas
stos
es
sbb
sbb
imul
or
adc
jo
pop
mov
sub
shll
and
push
and
cmp
jns
dec
cmp
outsb
lods
fildl
push
lcall
rcrl
and
gs
pushf
repnz
jno
scas
cmp
adc
movsl
pusha
xor
pop
sahf
push
or
and
std
mov
insl
mov
jmp
fstpt
jb
inc
adc
repz
stos
inc
icebp
pop
jo
out
pop
outsl
xor
pop
cld
repnz
mov
orl
js
fnclex
xor
add
inc
mov
in
out
std
arpl
out
lret
pop
mov
pop
ja
cmp
aad
call
fildl
dec
add
xchg
cmp
imul
lret
jo
push
adc
in
pop
pop
or
dec
push
cmp
xchg
push
mov
mov
mov
inc
insl
adc
fistl
clc
push
xor
pushf
les
jmp
sub
mov
in
sub
sub
aad
loope
cmp
jmp
jns
rcr
sbb
jmp
nop
mov
mov
stos
movsl
pop
push
insb
jae
stos
outsb
fstpt
aad
push
jge
push
mov
push
inc
inc
insb
inc
cmp
lret
das
inc
in
int3
jbe
test
push
xchg
cld
lret
popf
fnstenv
aam
int3
stos
inc
mov
lahf
insl
scas
cmp
pusha
dec
xchg
add
push
sub
push
and
sbb
inc
ror
cmpsl
inc
cmp
mov
push
sahf
or
xchg
push
repz
mov
and
rcl
ds
mov
popf
fiaddl
arpl
into
out
ficoml
fnop
mov
xor
or
stos
ficoml
ja
pop
jbe
insb
jnp
ficompl
sti
cmp
ss
pusha
pop
adc
or
push
scas
mov
rcrl
and
jbe
fidivrl
pop
sbb
inc
pop
xor
call
cld
ds
pop
out
pop
lcall
daa
roll
popf
mov
pop
or
aaa
in
cmc
sub
mov
inc
in
popa
pop
dec
nop
mov
testb
lcall
push
fadd
cmpsb
push
add
stos
sub
shrl
pop
and
jp
fisttps
mov
out
xchg
xor
shlb
je
dec
subb
cmc
or
mov
xor
and
xor
xchg
movsl
les
mov
cmp
fs
xchg
mov
idivb
lahf
jecxz
call
data16
and
fildll
inc
dec
jle
in
stos
adc
push
pop
dec
in
cmp
lods
pop
daa
inc
pop
pop
lods
sti
pop
repz
in
push
loope
cs
popf
mov
insb
and
das
mov
lock
int
repz
test
inc
arpl
testl
fwait
aam
std
xor
jno
das
mov
popa
add
mov
mov
ret
rorb
jl
gs
clc
test
gs
jnp
mov
inc
sbb
pop
sub
pusha
or
cwtl
filds
shll
aad
adc
stc
adc
or
data16
inc
dec
out
fstpl
mov
addr16
mov
mov
imul
mov
pop
mov
push
das
xor
sbb
into
ret
dec
jb
aam
jge
sub
hlt
enter
mov
xchg
or
pop
jo
jp
jb
cmpsb
inc
xchg
pcmpgtw
in
daa
fmuls
shrl
add
xchg
icebp
xor
xchg
stos
sub
clc
jns
rcll
add
jg
adc
mov
inc
addr16
loop
outsl
and
inc
xchg
jbe
cmc
cmp
sbb
mov
rcr
stc
mov
lea
iret
xor
ljmp
sbb
xchg
out
test
lock
adc
sbb
loop
adc
xchg
hlt
push
xor
test
jl
lods
cmp
or
xchg
in
push
call
sbb
test
sbb
std
roll
imul
and
ljmp
pop
lret
ret
dec
ret
hlt
xchg
shlb
mov
inc
scas
test
pop
scas
sub
mov
jo
jae
xor
cmp
add
loope
notb
inc
lock
or
test
jg
xor
add
inc
pop
jecxz
mov
mov
clc
mov
movsb
adc
test
data16
in
fisttpl
sbb
push
add
cmp
push
ja
push
mov
dec
or
or
cmp
and
cltd
xchg
dec
push
add
dec
dec
addr16
stc
adc
call
aam
test
cs
data16
add
jne
mov
pop
and
mov
sub
push
jbe
popfw
dec
add
push
lahf
and
mov
lret
rolb
repz
xchg
xchg
mov
xor
cmp
lds
test
andl
sbb
dec
xchg
mov
je
lcall
mov
mov
pusha
cmpsl
in
jae
pushl
mov
mov
sbb
ficoml
into
testb
rcr
shll
adc
push
sub
aam
cmpsl
mov
dec
insb
mul
test
stos
or
sahf
es
cmp
rcl
dec
or
and
pop
lods
push
mov
jbe
aaa
xchg
pop
fisttps
imull
and
out
pop
mov
mov
mov
push
dec
sub
pop
lock
and
fldl
bswap
adc
adc
jne
lods
loope
sbb
test
xor
insb
pusha
fwait
pop
enter
ret
cmpsb
mov
xchg
inc
mov
push
dec
adc
sbb
xchg
lods
inc
jns
bound
mov
popf
jae
pop
pop
int3
inc
les
adc
scas
outsb
arpl
inc
jg
aam
inc
push
stos
adc
or
mov
scas
pusha
xor
push
call
xchg
xchg
jbe
lock
xor
push
mov
aam
pusha
jl
fsubl
xor
push
push
lds
mov
pop
daa
ds
pop
pusha
insl
hlt
mov
mov
dec
rolb
inc
vcvtss2si
sahf
dec
xor
loopne
test
xchg
push
mov
fidivrs
loope
cld
mov
sahf
xchg
adc
in
leave
add
jne
push
xchg
mov
lods
xlat
daa
cli
nop
mov
outsl
xchg
in
adc
xchg
in
and
cmp
imul
sbb
loope
and
mov
nop
mov
mov
xor
pop
inc
inc
mov
punpckhwd
fs
sub
sbbb
sub
hlt
or
pop
bound
fsts
mov
cld
mov
nop
add
je
pop
leave
jge
fildl
loope
pop
mov
fstps
mov
mov
pop
in
cld
push
fcmovnu
ret
mov
xchg
cld
add
and
repnz
outsl
and
sbb
aam
call
jl
jl
shlb
scas
cld
xchg
mov
cmp
xlat
sar
lods
mov
or
push
or
adc
mov
test
adc
dec
mov
inc
jle
stc
jmp
sub
dec
loope
insb
lods
and
imul
and
lret
pop
cld
data16
fisttps
lret
add
jae
leave
inc
fmulp
pop
nop
sahf
and
xchg
inc
loopne
xchg
push
shrl
aas
cmp
ss
cmpsb
fisubrl
sahf
test
push
add
nop
xor
js
jb
test
sbb
mov
xchg
mov
push
aam
lods
xchg
sbb
push
std
inc
or
cmp
mov
out
xchg
sahf
jmp
dec
repnz
cmpb
mov
rcll
jno
cmc
fidivrl
ljmp
shlb
jno
or
lods
test
bnd
add
mov
dec
iret
or
push
fbstp
xor
cmpsl
idivl
inc
and
fcompl
cmp
push
mov
clc
std
push
stos
push
in
ds
cli
cmp
inc
in
sub
jle
cmp
pop
push
into
lcall
mov
push
loope
insb
and
jle
push
les
mov
xor
imul
inc
loopne
inc
mov
xchg
leave
add
cmp
and
clc
movsb
mov
movsl
ja
loop
pop
sub
loop
dec
mov
mov
cltd
sub
pop
inc
push
xchg
pop
mov
mov
les
addr16
into
mov
ret
test
fwait
sahf
xchg
mov
clc
cwtl
sbb
xchg
dec
sbb
mov
adc
std
scas
mov
stc
jno
out
xchg
or
xor
mov
out
rclb
jnp
xchg
in
mov
out
jo
jo
mov
mov
mov
cmc
fstpt
leave
dec
mov
mov
pop
ret
jge
in
xor
pop
pushf
sub
inc
lods
fucomp
lahf
lods
add
sbb
ds
lods
pop
lods
js
ljmp
cltd
inc
pop
sbb
adc
test
sahf
fwait
mov
subb
icebp
insb
iret
pop
nop
push
div
or
jne
sbbb
test
int3
lcall
or
outsb
cltd
movsl
xchg
push
add
mov
inc
out
out
std
push
in
pmuludq
test
xor
jl
bswap
sub
comiss
mov
inc
inc
jp
jmp
mov
jb
add
movsl
push
cwtl
sahf
push
fcmovu
arpl
inc
mov
or
lds
sbb
mov
stos
mov
pop
or
and
xchg
pop
imul
insw
loope
mov
ljmp
mov
mov
cmp
iret
cmp
negb
rclb
or
xchg
cmp
mov
cld
and
loopne
gs
fisubs
cwtl
and
jg
and
leave
push
adc
test
mov
lcall
test
hlt
adc
xor
int3
pushf
insl
mov
jb
push
pop
daa
mov
fisubs
sub
jge
addb
out
dec
sub
ret
mov
in
repnz
mov
mov
test
iret
fwait
mov
mov
jmp
jmp
xchg
rcll
or
push
push
iret
pop
daa
rolb
jp
pop
push
rclb
lcall
mov
icebp
ljmp
aad
add
xchg
push
mov
inc
ja
mov
mov
jge
dec
inc
pop
pop
sub
push
mov
movsl
gs
pop
jmp
iret
jb
inc
jp
pop
cli
lods
out
pop
xchg
cmc
or
test
mov
lret
daa
or
pop
mov
cmp
ja
adc
xchg
les
in
mov
test
cmp
jnp
pop
dec
ficoml
flds
jmp
outsb
aad
scas
pop
ret
cld
mov
test
dec
jae
push
xor
stos
sub
out
jle
mov
cmp
insb
imul
in
cmp
daa
clc
loope
daa
and
and
xchg
jle
scas
xchg
or
fistpll
adc
dec
mov
insl
and
imul
es
ja
ror
or
xchg
push
push
cs
shlb
jae
loope
cmp
std
and
cld
cs
xor
push
into
mov
add
cltd
imul
out
loope
mov
cmp
aaa
sbb
dec
inc
rorl
arpl
or
lcall
jne
in
xchg
pusha
stc
jg
mov
xchg
jns
push
or
xchg
add
outsl
imul
test
bound
aam
pop
js
pop
cmc
mov
ljmp
pop
lret
mov
or
add
es
movsb
rclb
dec
aas
bound
test
sbb
jo
xchg
loopne
pop
lcall
iret
and
lcall
andl
in
pop
imul
jg
or
push
dec
popa
dec
inc
push
movsb
sahf
das
call
inc
add
shrb
enter
pop
add
sbb
adc
jnp
jnp
xchg
test
loopne
test
sbb
xchg
fs
aaa
mov
xchg
jbe
stos
push
dec
mov
push
or
sahf
bound
xchg
cs
je
iret
lock
pop
inc
sbbl
daa
jge
cmp
push
jbe
aad
adc
push
mov
inc
andl
pop
clc
pusha
bound
sub
aad
inc
int
outsb
test
sub
fcomip
adc
xor
xor
ficoms
fwait
pop
pop
or
dec
jne
repnz
add
out
inc
cmpsb
xchg
push
outsb
inc
fiaddl
in
jl
dec
xchg
lret
xchg
les
dec
xor
std
call
add
arpl
shr
jae
into
push
adc
jae
aam
sbb
lds
cld
std
sub
pop
push
pop
xor
fiaddl
call
lods
mov
lds
sub
xlat
adc
nop
mov
xchg
and
mov
xlat
sahf
xor
sub
mov
shlb
xor
js
mov
push
cmp
cmpl
psrld
push
adc
xchg
aad
and
icebp
xor
insl
cmp
icebp
pop
pushf
jne
scas
xchg
mov
outsb
mov
mov
or
les
dec
arpl
lret
xchg
adc
inc
dec
divl
pushf
in
mov
inc
add
call
test
push
dec
cmp
ret
test
sub
divl
sbb
lods
pop
jge
jbe
js
jns
rol
fistps
loope
jno
and
push
push
or
inc
mov
lea
add
push
cmp
mov
push
inc
enter
inc
pop
bound
scas
popa
bound
icebp
and
mov
inc
into
xchg
mov
mov
cmp
or
iret
outsl
fidivl
xor
les
add
stos
sub
pop
cmp
movsb
sbb
sub
jle
daa
in
out
xor
push
insl
mov
fadds
ljmp
sbb
cmp
scas
xor
stos
or
daa
jne
aad
popf
test
fcoms
push
insb
repz
or
sti
mov
sub
data16
scas
or
pop
rorl
scas
lods
and
sar
dec
add
js,pt
xchg
into
in
ret
arpl
in
lds
xor
lock
sub
jns
ret
lds
fiaddl
mov
sbb
push
xchg
bound
xorl
fnstsw
mov
xchg
daa
sbb
xlat
lcall
push
mov
sbb
notb
cld
sbb
jp
or
add
mov
outsl
push
mov
je
leave
and
enter
test
fs
push
pop
sti
or
xor
arpl
xor
test
sarb
mov
sbb
fisttpll
mov
dec
jp
adc
jmp
addr16
arpl
es
nop
into
sbb
jb
sub
divl
sub
sahf
or
add
popa
jns
xchg
js
inc
scas
fisttps
jmp
sub
push
outsl
inc
sbb
clc
idiv
aad
hlt
inc
xchg
ds
jno
push
jge
rol
adc
orl
repz
push
xchg
mov
sbb
or
stos
or
lods
aad
adc
insl
sub
cmp
sti
std
xor
ret
pop
or
rclb
pcmpeqd
mov
jge
pusha
sub
xchg
clc
rcrb
imul
dec
cmp
std
fsubr
dec
lock
and
arpl
out
in
xchg
jl
cmpsb
mov
pop
jp
aaa
cmp
sti
mov
xor
sbb
add
mov
push
std
loop
out
xchg
pop
in
mov
xchg
fidivs
repz
adcb
outsl
jne
push
xchg
or
pop
sub
push
mov
in
mov
pop
push
fisubs
sub
cmpb
jmp
mov
dec
adc
or
into
imul
ja
iret
push
test
clc
cli
xchg
xchg
jecxz
int
mov
adc
rcrl
add
mov
jo
test
xlat
rcrl
push
sub
loope
sbb
inc
das
xchg
imul
push
imulb
cltd
scas
enter
adc
insl
je
mov
popw
push
fldpi
and
pusha
test
in
pop
push
leave
test
add
mov
sub
push
leave
repnz
push
inc
cmp
imul
pop
pop
lahf
mov
iret
pop
test
add
popa
xbegin
js
xchg
pop
or
popf
js
adc
js
cmpsb
pop
push
and
pop
or
subl
int3
insb
ljmp
or
sbb
movsl
dec
call
popa
xchg
inc
cmc
xchg
xchg
jle
dec
push
jp
call
clc
sahf
xchg
loop
push
fmul
adc
dec
pop
in
stc
loop
push
fmul
in
in
adc
push
fwait
mov
out
aaa
scas
xchg
lods
imul
das
jge
lahf
push
lea
int3
lcall
pop
outsl
or
jg
xor
pushf
xchg
pop
es
xchg
lahf
pop
out
lea
mov
xchg
int
cmp
jmp
dec
das
fwait
mov
cli
fildl
movsl
les
xor
ss
in
fnsave
push
and
mov
adc
hlt
fistl
jae
xlat
jnp
push
inc
inc
xor
sbb
xlat
mov
in
stos
repz
jg
fwait
dec
mov
fildl
sbb
subb
and
mov
je
movsb
mov
sbb
xchg
sbb
inc
sbb
push
adc
xor
or
std
fcoms
and
out
cmp
or
ljmp
imul
data16
xchg
enter
inc
adc
adc
dec
enter
movsb
fnsave
jb
mov
push
xchg
je
aaa
push
sbb
mov
out
push
jb
xchg
push
sbb
mov
enter
add
insl
test
xchg
pop
xor
les
cli
pop
sti
add
sub
cmp
push
hlt
dec
loopne
cmp
pop
adc
movsl
or
xchg
rorl
cmpsl
movsl
mov
nop
mov
les
dec
mov
cmc
in
ret
push
xor
lcall
xor
pop
add
lret
aam
dec
cld
pop
loope
mov
mov
add
mov
pop
or
out
in
push
pop
daa
scas
cltd
popa
pop
add
mov
mov
xchg
in
adc
and
inc
push
inc
fucomi
mov
dec
outsb
dec
adc
dec
inc
dec
gs
lahf
loop
in
sub
outsb
jo
in
nop
hlt
sbb
pop
call
xor
jp
pop
repnz
idivl
int3
and
mov
sub
orl
jne
in
push
call
jle
inc
xor
mov
mov
bnd
xor
adc
dec
inc
sahf
pushf
mov
add
loop
outsl
pop
push
fidivs
xchg
sub
daa
lret
jno
insl
lods
rorl
push
rcrb
fst
mov
outsb
mov
push
mov
add
stc
clc
sub
mov
xor
cmp
add
imul
push
fcmovnb
mov
or
in
orl
sub
and
iret
ja
add
mov
out
test
loope
jle
xor
adc
or
sub
cmp
pop
inc
mov
push
int
js
addr16
cmp
out
xchg
outsl
adc
mov
aas
add
int3
ja
add
mov
aam
push
rclb
xchg
out
inc
pop
out
outsl
mov
mov
ljmp
call
movsb
pop
je
aad
icebp
push
dec
mov
sub
jle
push
gs
mov
sub
aad
dec
or
repnz
sti
add
sub
cmpsb
and
and
or
jno
stos
test
add
adc
cltd
or
dec
mov
jo
xchg
aam
inc
pop
out
sub
int
cli
sub
add
and
aas
pop
push
fbld
popa
pusha
pop
mov
clc
push
je
or
ds
cwtl
add
jge
jae
mov
mov
lret
cmp
add
jns
dec
gs
inc
xlat
les
mov
repz
jg
rcrb
lsl
or
mov
test
sub
sbb
mov
lock
lods
outsl
push
test
mov
and
push
ficompl
fwait
test
jns
in
popa
xlat
mov
in
ficoml
lods
push
pop
out
and
adc
jmp
iret
fwait
mov
popf
addr16
xor
mov
mov
mov
das
push
repnz
inc
jmp
xlat
push
and
pop
jne
setg
nop
lea
pusha
sbb
jge
les
pop
repz
pop
add
adc
out
cmp
test
shrb
daa
dec
add
lods
mov
cld
xchg
mov
mov
sbb
adc
test
or
in
jno
jne
xor
out
xchg
pop
add
add
mov
repz
daa
cli
roll
in
dec
push
mov
cmp
roll
fcoml
ret
pushf
mov
inc
xchg
pusha
and
inc
mov
cmpb
popa
repnz
inc
cmp
daa
mov
sub
adc
loopne
cmp
mov
mov
pop
xchg
xchg
push
sti
mov
out
xor
pop
test
out
sbb
cmp
inc
mov
int3
push
repz
mov
cld
xor
pop
or
jae
cs
loope
out
loopne
and
loopne
movsb
fnstcw
sub
inc
leave
xorb
sub
dec
xor
nop
pop
pop
test
sub
shrl
enter
xorl
mov
lea
jne
pop
cmp
aas
push
cmp
mov
in
fisubrl
add
ret
cmp
cmpsb
icebp
jo
icebp
out
and
ljmp
leave
popf
jo
outsb
mov
push
lret
cwtl
adc
js
into
jno
pusha
jb
dec
xchg
and
sub
sbb
call
aam
pushf
adc
and
mov
inc
dec
neg
out
xor
adc
xor
xor
xor
dec
xchg
call
dec
in
pop
add
stc
jns
int3
sarb
out
jl
mov
pop
or
outsl
testb
adc
stc
adc
mov
out
repz
stos
dec
and
inc
fstpt
fcoms
enter
scas
sbb
movsb
push
jecxz
fstl
push
xchg
bswap
jo
or
jp
pop
sub
fsubp
jns
or
sti
lret
testb
adc
mov
dec
fldt
jnp
call
idivb
ljmp
push
cmc
add
dec
inc
shll
mov
out
loop
push
mov
sub
int3
push
pop
sahf
outsl
mov
test
adc
mov
je
ret
imul
xor
sbb
push
fwait
sbb
pop
das
inc
pop
xorb
aaa
daa
enter
add
out
pop
stos
inc
pop
mov
mov
mov
xchg
sbb
pop
iret
shrb
mov
xor
dec
std
repnz
jbe
lock
fistl
dec
ja
mov
ret
dec
rorl
xor
xchg
sub
jle
test
mov
in
jl
scas
mov
mov
jmp
mov
rclb
jb
jbe
leave
cmp
popf
sti
fstpt
adc
mov
mov
test
cs
sbb
cltd
gs
mov
jg
fs
cmpsb
loopne
add
adc
ljmp
jle
cmpsb
fists
scas
pop
dec
clc
clc
add
pop
int
push
and
out
subl
out
mov
mov
sub
sbb
andb
lds
ret
dec
or
xor
add
mov
mov
mulb
cmc
cld
dec
mov
notb
cmp
mov
int3
pushw
sub
mov
je
fistpll
enter
dec
mov
inc
std
push
leave
mov
pop
out
das
add
push
popa
hlt
test
test
and
xor
xchg
in
or
aam
aas
das
mov
stos
test
jge
mov
div
and
xchg
enter
incb
pusha
mov
push
mov
or
add
jbe
xor
xchg
mov
movsb
mov
xorb
fmuls
pop
leave
lea
aaa
imul
lods
sbb
push
adc
or
enter
dec
stos
mov
dec
mov
pop
lds
in
in
inc
incb
fiadds
in
dec
es
fwait
ror
dec
pop
xchg
inc
and
icebp
stc
aam
out
cld
cwtl
call
pusha
iret
sar
leave
push
pushf
leave
sti
iret
mov
gs
push
pop
sahf
ja
xchg
jo
sub
add
add
add
mov
cld
dec
jo
cmpsl
das
mov
fimull
jno
dec
mov
stos
xchg
jg
pop
sahf
es
and
xchg
test
or
mov
lods
in
and
and
xlat
repnz
notb
push
sbb
push
shrl
out
cli
add
out
aam
das
cmpl
jg
ret
sahf
lds
xchg
sti
ja
test
and
test
mov
mov
andl
push
cwtl
mov
subl
inc
dec
aas
enter
dec
outsl
mov
sbb
lret
sti
pop
jae
mov
pop
mov
lret
mov
in
jle
imul
mov
push
dec
insl
loop
into
out
sub
push
or
inc
lcall
pushf
cmpsb
aam
int
shrb
lock
push
pop
add
pop
into
stos
je
or
xchg
iret
imul
ret
sbb
xchg
mov
sbb
jmp
and
jp
in
les
adc
inc
outsb
xchg
adc
fwait
mov
pop
fidivl
enter
adc
cmp
mov
in
xor
jg
cmpsl
iret
cmpsb
pop
mov
test
filds
jg
mov
cmp
dec
push
stc
push
adc
xchg
cld
sub
push
cmp
xchg
iret
lods
in
jle
icebp
mov
shlb
lds
cmp
leave
and
push
push
fcoms
movsb
push
std
ret
sbb
adc
or
inc
adc
push
cmp
mov
push
daa
out
adc
fnstsw
pop
jbe
icebp
iret
std
pop
adc
aaa
push
cmp
sub
inc
imul
mov
cmp
inc
mov
clc
mov
call
cltd
mov
lock
cli
out
insl
dec
adc
pop
xor
push
test
lods
fisubl
aad
jb
hlt
cmpl
dec
int3
cld
mov
jns
sub
adc
xor
es
mov
addb
jnp
sahf
lea
sbb
dec
mov
es
test
cmc
jge
ljmp
pop
adc
cmc
dec
mov
add
jg
pop
sbb
lds
mov
int
sub
xchg
pop
dec
stos
jbe
ret
dec
test
mov
sub
dec
jne
cmp
cmpsb
jae
sub
dec
sub
and
mov
ret
lahf
int3
push
jne
in
ja
adc
adc
jle
repnz
mov
insb
push
test
nop
mov
xor
mov
adc
cltd
lock
call
inc
adc
ret
mov
jno
and
add
mov
add
lods
lcall
addb
jp
ret
inc
and
mov
pop
cltd
repnz
clc
es
std
stos
cmp
mov
push
cmp
jb
incb
pop
sub
lcall
shrb
lret
roll
or
pop
xchg
mov
lcall
jge
call
imul
pop
testb
test
into
adc
add
mov
aas
sub
mov
push
arpl
mov
cmpsb
lea
xchg
mov
dec
stos
xchg
push
andl
xor
cmp
jl
mov
cltd
fcoms
mov
test
push
jle
xchg
in
pop
or
ss
aaa
stos
imul
pop
cmp
adc
fiadds
inc
jl
notl
stos
addr16
nop
fiadds
sahf
adc
dec
add
inc
mov
in
jg
or
hlt
iret
mov
xchg
pop
push
enter
jb
dec
mov
fbstp
push
aas
sarl
aas
and
cmpsb
xchg
xchg
sbb
jns
sarl
xor
adc
in
stc
mov
addr16
in
mov
loopne
push
insb
xchg
sbb
mov
je
in
inc
adc
cmp
ret
pcmpgtb
or
cmp
inc
jno
and
lods
pushf
push
mov
scas
dec
mov
into
leave
dec
push
jno
cwtl
pop
xchg
or
loop
out
pop
ss
and
ss
mov
xchg
aad
rcr
mov
mov
jmp
rorb
jbe
je
insb
testl
sbb
rcr
insl
add
in
ds
push
adc
lea
jecxz
mov
cwtl
jb
divps
rolb
icebp
adcl
mov
mov
and
mov
int3
cmp
cmp
mov
pop
mov
xor
sti
inc
std
inc
out
rcrb
cmp
jmp
and
mov
movsl
xchg
adc
lahf
lea
inc
out
jg
rorb
push
cld
lret
add
adc
cmpb
or
dec
filds
sub
ja
movsb
inc
mov
adc
cs
lods
cwtl
data16
stos
jle
dec
les
subb
arpl
cmp
adc
or
mov
sbb
aad
pushf
sgdtl
cmpsl
inc
in
xlat
sub
add
sarl
lret
mov
sub
scas
aad
pop
or
test
incl
fistps
and
pop
push
mov
sti
iret
popf
push
outsb
jge
xchg
ljmp
mov
scas
adcl
adc
xor
shll
outsl
mov
in
cmp
xor
hlt
sub
inc
test
aas
js
out
jmp
xlat
inc
insl
rep
inc
cli
pop
cmp
inc
ja
mov
pop
push
insl
sub
or
push
out
arpl
subl
mov
into
loopne
mov
shl
sbb
sub
mov
popf
adc
jae
add
lahf
das
push
fwait
nop
stos
cmpsb
sbbl
dec
jae
jae
repz
negb
pop
cmp
out
lds
adc
push
pop
call
fidivrs
pop
in
xor
adc
repz
loop
stos
jle
lea
mov
sbb
adc
nop
jne
jmp
clc
xor
call
lcall
sbb
sub
pop
cmp
pop
mov
inc
in
addr16
ss
shr
xor
insl
sbb
cmp
xor
adc
scas
enter
loopne
push
jns
adc
add
jl
stc
lahf
rcl
xor
loop
pop
push
cli
dec
mov
int
cltd
mov
inc
or
mov
adc
ror
or
pop
ret
pop
mov
pop
scas
xor
bound
cld
mov
adc
test
and
xchg
sbb
gs
mov
les
out
fcomps
add
shll
adc
mov
or
cmp
xor
arpl
sbb
mov
testb
mov
addr16
sahf
push
ljmp
adc
sub
sbb
insb
andb
mov
jnp,pn
push
aas
mov
push
xor
jle
addr16
add
or
fstpt
push
push
dec
movl
lea
mov
sahf
ja
clc
mov
add
sbb
int
bound
pop
adc
stc
ss
xchg
jnp
stos
dec
sbb
repz
push
out
dec
dec
mov
mov
jge
adc
aaa
scas
jns
enter
or
andb
aad
add
adc
pop
js
lods
pop
jl
clc
sbb
mov
sub
mov
push
aaa
cmpsl
mov
pop
mov
enter
into
push
jbe
and
mov
enter
lods
push
and
cli
out
rep
mov
mov
clc
nop
sbb
mov
sbbl
setae
add
push
jb
push
ljmp
arpl
sub
push
sbb
xchg
fldt
sbb
mov
mov
jae
adc
pop
xor
lock
push
cmp
and
or
adc
sub
or
sti
mov
movsb
mov
jnp
adc
andl
sarb
dec
mov
add
call
es
sub
push
shr
loope
sub
cld
pop
ret
data16
adc
stc
pop
adc
out
ss
inc
lea
mov
push
repnz
divb
adc
mov
dec
sub
push
lret
aas
adc
fsubl
or
mov
stos
test
sub
prefetch
xor
repz
arpl
and
int
sbb
in
lret
mov
mov
mov
std
iret
pop
repz
inc
jnp
movsl
out
jge
add
jmp
jae
test
lea
push
cmpsb
ja
clc
daa
pop
test
add
add
jmp
mov
dec
sbb
jecxz
jo
pop
lret
and
xchg
jl
xor
jp
aas
cs
movsb
out
mov
insb
xor
or
xchg
cmp
divl
inc
stos
icebp
mov
fadd
mov
push
dec
call
push
inc
out
cmc
cmp
push
cmp
sahf
in
sbb
in
adc
mov
aas
je
mov
fistps
pop
rorl
loopne
inc
mov
leave
fisubs
mov
les
dec
jge
mov
bound
jns
scas
xor
sub
pop
sub
cld
das
fsubp
sbb
jnp
jmp
and
aam
cmpsl
xchg
test
cmpsl
das
jg
in
push
into
and
jp
xchg
pop
les
outsl
fadd
lcall
adc
gs
clc
jbe
mov
jo
pushf
sbb
add
hlt
and
adc
mov
insl
jl
and
clc
js
loop
fdivrl
test
mov
repnz
inc
lahf
mov
jne
shrl
bnd
mov
in
rorl
iret
repnz
gs
inc
and
test
sahf
loop
xchg
mov
or
xlat
mov
mov
in
add
inc
mov
es
push
lock
fs
add
sar
adc
jo
dec
push
mov
ffree
push
rol
ret
xor
xchg
sub
xchg
lods
or
mov
cmp
sahf
roll
cmp
mov
pop
push
mov
out
je
movsl
ja
daa
add
mov
icebp
les
icebp
out
jns
jg
or
rcr
adc
xchg
ret
adc
push
int3
push
pop
icebp
mov
mov
out
and
push
jecxz
mov
loop
mov
popf
arpl
das
cmp
mov
movsb
imul
mov
inc
out
xchg
push
mov
iret
sbb
inc
ret
xlat
das
arpl
sub
xchg
int
mov
icebp
fwait
rcrb
adc
cmp
cmc
mov
sub
inc
dec
pop
inc
lods
lret
pushf
jl
pop
jns
pop
adc
jbe
mov
out
sub
orb
cmp
repz
call
pop
sbb
or
mov
dec
cmp
jle
push
inc
xor
faddl
outsl
out
jnp
test
cmpsl
jnp
mov
cmpsb
movsb
out
and
repz
jo
push
rclb
shll
xchg
popf
mov
xchg
js
sub
pop
xchg
adc
jb
fs
sbb
iret
xchg
and
sub
sub
pop
mov
int3
mov
lds
js
inc
inc
mov
push
sahf
jp
sub
je
dec
roll
mov
dec
pushl
hlt
imul
int3
push
mov
inc
cmp
es
xor
test
rcrb
into
mov
sbb
jg
lret
bnd
mov
popf
aad
push
int3
test
fsub
fwait
cmp
jecxz
push
jns
jno
xchg
push
outsb
jle
nop
dec
cmc
inc
pop
into
or
pop
inc
add
jge
out
pop
inc
leave
add
das
test
int
mov
loop
into
std
and
xchg
pop
inc
sub
dec
pop
cmpsl
xor
add
jmp
sbb
dec
rcrb
lret
and
or
js
scas
mov
xor
rorb
push
sbb
jmp
in
in
pop
stc
fwait
divb
lods
enter
in
mov
or
mov
xchg
pop
insb
adc
out
dec
repz
pushf
cmp
adc
xchg
addb
in
xor
scas
ljmp
lcall
test
inc
push
cmp
addr16
das
pusha
mov
add
and
lock
mov
pop
loopne
mov
fstpl
sub
out
push
pop
jne
pop
mov
ret
cli
jo
jno
lret
mov
loope
and
sub
or
sub
dec
mov
adc
fstpt
xlat
adc
lock
xor
rcr
jle
popa
gs
mov
adc
shrl
sbb
push
push
push
xor
xchg
aas
mov
jmp
xor
mov
stos
add
xor
push
jg
ss
clc
inc
into
cmpsl
fildl
mov
mov
jmp
jae
sarl
lock
cmc
xor
sahf
pusha
data16
fbld
mov
aad
pop
insl
pop
repz
sbb
lock
xchg
cmpb
dec
test
ja
xchg
hlt
pushf
jecxz
test
popf
mov
jno
dec
iret
mov
cmpsb
xchg
adc
xlat
sbb
out
push
mov
iret
arpl
test
mov
mov
jb
je
cmp
mov
sub
push
jmp
scas
jp
xchg
fwait
dec
sti
in
sti
jo
push
aas
push
imul
stos
fs
mov
push
mov
popf
jmp
loope
sahf
int
aaa
out
ret
ret
test
arpl
iret
aam
pusha
test
push
shll
insl
jle
jnp
dec
mov
shrb
cmp
in
adc
jo
stos
hlt
loope
lcall
push
sub
xchg
xchg
mov
shl
mov
jnp
test
scas
mov
sub
cmpsb
inc
fdivrl
mov
inc
inc
mov
dec
jnp
add
aaa
xchg
mov
add
xor
test
lret
rolb
out
lret
lock
xlat
sub
inc
popa
cli
stos
adc
jg
and
dec
aad
mov
sahf
rcrl
adc
lcall
cmp
jbe
add
adc
fs
mov
or
out
push
test
push
xchg
leave
mov
int3
cltd
mov
testb
mov
fisubl
in
xchg
pop
stc
push
in
stos
sbb
ficompl
xor
push
sbb
xchg
jle
out
in
loopne
xchg
out
sbb
mov
aas
sub
outsb
xor
add
lret
cmp
lcall
ja
cmp
push
adc
mov
jae
nop
inc
out
movsb
jnp
cltd
add
shll
ret
adc
xchg
and
fisttpl
std
jne
in
in
xor
mov
repnz
push
pusha
pop
icebp
ror
orl
lds
mov
sub
call
sub
aas
cmc
out
repnz
fildl
mov
lds
pushf
mov
and
aaa
jae
adc
jp
sbb
push
fisttps
je
aas
pop
aaa
in
mov
mov
addr16
fstpl
sub
jo
adc
adc
cmp
arpl
xchg
push
add
js
hlt
cmp
cmp
push
xchg
pop
in
push
aad
cmpsb
adc
pushf
sbb
pcmpeqd
rcrl
jecxz
jp
or
pop
pushf
mov
jle
mov
dec
jne
sub
mov
mov
lock
in
push
hlt
lods
sbb
sarb
or
mov
cmp
cmp
test
hlt
les
ffreep
inc
pushf
mov
repnz
inc
or
mov
or
imul
mov
xchg
pushl
stos
sarb
push
loopne
outsl
nop
pop
jns
cmpsb
iret
mov
xchg
push
out
cmp
xor
shr
mov
mov
lret
scas
sub
or
jmp
ret
push
sub
xchg
outsl
in
repz
push
inc
dec
js
sub
xchg
mov
jae
dec
cmp
add
lcall
push
repz
sbb
xchg
scas
adc
rol
repz
sub
xor
in
mov
jns
mov
adc
addr16
xchg
out
sub
cmovae
cmc
fcoml
and
sbb
dec
pop
adc
test
inc
xchg
ds
std
mov
dec
sahf
cmpsl
inc
out
pop
xchg
jbe
dec
xchg
sti
loope
leave
outsl
mov
mov
add
sbb
or
loope
cltd
dec
jnp
lock
loopne
test
adc
idivl
ret
call
mov
jb
sbb
loop
repnz
mov
cmp
shl
repz
enter
pop
in
mov
or
addl
aas
clc
push
mov
pop
or
enter
lret
fcoms
push
inc
das
sub
scas
aaa
sub
ds
mov
out
pop
int3
cmp
mov
stc
jno
cmp
mov
les
adc
cmp
push
lods
cmp
push
xchg
push
fmul
dec
adc
pop
sub
jl
call
cmp
arpl
jnp
sbb
sub
xchg
pop
mov
test
xchg
orb
rorl
lock
repz
sti
xchg
idivb
aam
out
inc
mov
mov
xor
push
enter
push
inc
mov
adc
or
dec
dec
ds
clc
data16
iret
sub
mov
imul
dec
sbb
fxch
pop
cmp
mov
push
popf
mov
jecxz
sub
xor
xor
outsb
dec
push
add
insl
sub
xchg
push
out
inc
aaa
mov
fnsave
ds
pop
jns
add
xchg
jp
scas
cmpsl
and
out
out
fistpl
enter
xchg
adc
sahf
and
xchg
mov
add
xlat
inc
scas
outsb
stos
stc
gs
flds
sbb
daa
lock
insl
mov
mov
jle
sahf
push
mov
xchg
in
cmc
lds
sub
jg
out
mov
cmp
lock
jb
pop
mov
imul
jmp
lahf
fldt
ds
data16
aas
push
mov
bnd
jmp
icebp
andl
ljmp
leave
fcmovb
out
inc
cmc
or
inc
xor
cmp
out
push
xor
add
ljmp
ja
mov
jg
xchg
pop
sbb
push
aaa
ret
push
mov
pop
leave
pop
add
mov
xor
andl
adcl
sbb
pop
xchg
outsl
fwait
jecxz
sbb
clc
data16
lods
and
add
mov
cmp
push
fldt
ja
mov
mov
xchg
push
add
fdivrs
adc
scas
out
or
lahf
in
popf
mov
dec
out
sahf
dec
jle
sub
xor
jne
adc
xor
mov
mov
push
mov
xchg
mov
sub
and
dec
inc
xchg
inc
andl
cs
mov
xchg
je
fs
mov
xchg
insl
movsl
and
add
jmp
and
or
or
mov
js
pop
loope
push
adc
inc
and
arpl
lret
jg
rol
ss
mov
ret
sti
sbb
adc
pop
jno
jae
xlat
mov
add
jle
cmp
push
out
rorb
sahf
jns
xchg
xlat
mov
data16
mov
call
mov
mov
aad
sbb
out
mov
lret
mov
mov
shlb
cmp
in
stos
fildll
mulb
adc
les
pop
mov
mov
or
inc
xchg
in
cmp
sbb
dec
insl
lods
in
into
push
pusha
pop
jg
cmp
push
sub
sahf
push
ret
pushf
sbb
jge
outsl
mov
lock
inc
test
in
enter
and
divb
in
or
mov
mov
sbb
mov
movsb
pusha
sahf
cmp
jmp
orl
dec
adc
push
push
cltd
mov
out
ljmp
pop
add
mov
int
xor
mov
jp
and
cmp
sbb
pop
jp
out
fstl
add
inc
or
pop
cmpb
ds
xchg
add
add
jae
sub
cmpsl
cs
sub
hlt
mov
lods
loopne
and
adc
wrmsr
inc
cmp
popf
out
mov
jb
mov
push
imul
stos
addr16
lahf
lds
add
fimull
inc
mov
sbbl
jmp
ss
mov
add
pop
push
inc
sub
test
pop
pop
inc
mov
shr
and
imulb
push
ret
je
jbe
add
outsl
test
addl
sub
daa
call
int3
loop
push
sbb
inc
loopne
jecxz
out
mov
push
push
insb
cld
push
lret
mov
adc
ret
int3
faddl
cs
imull
pusha
mov
dec
mov
sti
sub
xor
clc
nop
shl
fldl
stc
icebp
fwait
incb
jo
test
repnz
jecxz
sub
insl
and
ror
fwait
xchg
inc
mov
jo
clc
adc
int3
mov
mov
repz
ficoms
out
lret
movsl
sti
mov
imul
adc
mov
aas
scas
mov
pop
push
dec
pop
bound
pop
sub
das
mov
xchg
test
pop
add
and
fildl
mov
sbb
or
xchg
lds
jbe
lcall
popf
std
add
or
push
add
aas
sub
movsb
adc
cmpsl
push
jb
cwtl
mov
jecxz
and
xchg
push
addl
add
mov
fcompl
gs
push
addr16
or
ds
adc
test
mov
mov
cli
loope
dec
xor
dec
leave
shll
shll
xchg
pop
push
rorb
pop
orl
add
in
xchg
mov
int3
jne
mov
jl
lds
pop
or
pop
mov
push
pop
ja
gs
pop
jb
push
adc
xchg
add
leavew
or
xchg
shrl
ja
mov
xchg
js
movsl
cmp
xchg
jne
mov
pop
jmp
fsubs
subb
mov
sub
sbb
orl
inc
and
fidivrl
push
fldt
mov
cmp
pop
inc
roll
aas
mov
scas
out
lret
nop
push
or
fnstsw
push
sub
cs
mov
popa
cmp
inc
ja
aaa
inc
inc
cmp
or
jp
add
inc
add
adc
out
iret
mov
adc
adc
and
cltd
push
in
xchg
fwait
dec
in
jge
push
sbb
mov
fnsave
loopne
mov
jne
nop
insb
ljmp
mov
ds
rcr
aaa
and
out
adc
loopne
push
fcmove
cmpsb
push
fcompl
loop
aam
fidivs
jge
fiadds
loope
jmp
push
push
mov
dec
hlt
pop
mov
je
dec
scas
loope
fistps
mov
aam
cmpsl
int
sahf
push
sbb
xchg
into
cwtl
jp
aad
push
sbb
popf
lret
cmp
dec
je
adc
dec
fwait
stos
sti
jnp
loop
mov
jecxz
adc
gs
test
fisubl
fidivs
imul
push
pop
and
sub
leave
pop
mov
adc
sbb
mov
insl
inc
jnp
pop
lret
xor
mov
pop
jb
out
dec
jb
leave
xchg
add
enter
mov
push
adc
cmpsl
mov
lea
icebp
pop
loop
lods
int3
adc
lock
xchg
mov
mov
jo
jns
adc
push
jo
push
inc
adc
fbld
push
pop
mov
inc
jne
int
daa
mov
dec
hlt
sbb
fucomp
fildl
test
into
into
sub
jo
out
sub
in
mov
jno
lret
xchg
stc
xchg
pop
push
mov
jmp
repnz
jp
push
or
psrlq
mov
adc
pushf
or
push
clc
in
xchg
cld
loopne
xchg
dec
mov
jae
in
push
dec
dec
jg
ss
pop
dec
jl
fnstenv
cmp
pop
xor
subb
sbb
call
and
mov
and
test
adcb
dec
push
out
mov
les
js
fnstenv
push
push
inc
sbb
imul
cmp
ficomps
or
xchg
jne
int
lods
pop
adc
cwtl
pop
sbb
mov
mov
cmp
add
fcomip
lods
std
inc
add
xor
mov
jmp
adc
mov
outsl
push
sbb
sub
pop
ljmp
sbb
test
test
inc
js
dec
aad
push
outsb
fwait
insb
xor
cli
mov
pop
or
adc
jle
jecxz
mov
mov
dec
xor
ja
jecxz
rcr
pop
lods
push
jecxz
mov
mov
add
stc
enter
adc
push
sbb
xor
cmp
and
addr16
mov
repz
je
dec
cli
push
sub
iret
decb
cmp
ljmp
jae
adc
out
sub
cs
jo
and
or
jle
gs
nop
test
mov
daa
adc
shrb
jnp
adc
mov
insl
mov
and
jb
add
push
into
iret
pop
jb
add
test
leave
xchg
add
ds
and
mov
clc
pop
js
jne
inc
mov
aaa
sahf
dec
jmp
popa
pushf
aas
lds
insb
lret
and
es
test
xor
cmpsb
fstpt
push
pusha
cltd
inc
ja
jne
dec
adc
push
incl
jae
lret
fwait
mov
jge
rol
jne
sub
cmp
shlb
ljmp
vcvttss2si
divb
inc
subl
movsb
pushf
mov
cmp
fcmovne
or
mov
lock
mov
fidivs
jae
push
test
arpl
out
mov
call
std
cltd
sahf
xchg
lods
mov
les
jge
enter
adc
jbe
jecxz
sbb
jp
clc
or
shll
mov
add
fisubrs
inc
mov
sarb
daa
ret
mov
jle
outsl
outsl
adc
ds
mov
fnstcw
insw
sub
dec
fstps
push
loopne
shrb
paddusb
ret
xor
push
xorl
mov
sti
sbb
push
pop
mov
loopne
xlat
fsubs
bound
loopne
mov
pop
sub
nop
inc
stc
dec
lods
jbe
inc
gs
in
dec
adc
xchg
or
adc
aaa
daa
dec
dec
nop
lret
movsb
pushf
outsl
xchg
inc
dec
or
cmpsb
adc
mov
mov
repz
int
ficoml
and
lcall
mov
pop
das
adcl
adc
scas
xchg
add
imul
dec
push
add
jae
jge
adc
fwait
call
jl
push
cmpsl
jbe
mov
mov
int3
test
movsl
cmp
mov
sbb
push
idivb
repnz
and
mov
out
in
loop
xor
push
sahf
hlt
sbb
push
adcb
mov
iret
scas
dec
movsl
std
lret
and
out
data16
out
fildll
pop
cmp
mov
bound
movsb
mov
cmpl
test
sub
adc
push
aam
add
inc
push
cs
add
jo
xor
imul
and
jle
aad
and
addr16
mov
or
and
inc
adcl
mov
filds
mov
xor
stos
jl
xlat
xor
out
js
pop
xor
test
push
pop
push
movsl
in
test
mov
pop
cli
mov
movsl
insl
or
in
lret
dec
jmp
push
adc
push
add
jecxz
dec
add
repz
ja
mov
adc
aas
lods
repnz
gs
xchg
je
adc
push
std
sub
shll
push
pop
bound
lcall
push
push
aad
pop
xorl
adc
in
pop
add
rcr
mov
push
lret
add
jge
inc
out
xor
int3
jb
lcall
dec
test
mov
push
hlt
out
mov
xchg
and
loop
push
jmp
nop
scas
fs
das
mov
test
inc
lret
rorl
scas
jno
sbb
add
loop
xlat
dec
pushfw
je
mov
pop
leave
add
lods
xchg
or
sbb
mov
mov
add
cs
mov
addr16
sbb
push
scas
aas
jp
cmp
adc
inc
stos
pop
orb
adc
orb
and
xchg
mov
loop
push
pop
sarl
pop
jns
fs
std
imul
inc
xor
das
dec
jb
sub
cld
sti
in
in
jp
xor
movsb
add
ljmp
jns
les
in
sbb
daa
adc
out
ret
int
pusha
mov
inc
sub
jne
popa
inc
stos
mov
pop
inc
add
pop
ret
sbb
push
add
dec
in
xchg
loop
xchg
or
in
aam
bound
test
and
inc
pop
je
sub
mov
cmp
xchg
mov
aaa
mov
setae
push
lcall
sub
lcall
scas
lret
pop
in
insl
cmp
sub
adc
in
dec
sub
test
movsb
dec
pop
jl
adc
lcall
pop
addr16
ljmp
dec
pop
adc
sub
dec
insb
xchg
xchg
outsl
sbb
or
movsl
movl
adc
lods
pushl
or
or
push
cmp
filds
stc
pop
cmp
int3
adc
faddl
adc
nop
jmp
cmp
hlt
or
lds
iret
or
inc
f2xm1
mov
divb
and
xchg
jns
out
xlat
out
sbb
aaa
repz
daa
pop
js
clc
mov
jbe
push
jns
xchg
xlat
in
out
rolb
pop
pusha
xchg
jno
cmpsl
lds
frstor
xor
or
fisubl
cmpb
loop
clc
jne
push
mov
pop
mov
xor
sub
dec
and
pop
js
mov
dec
or
xchg
repz
sub
outsb
pop
cmp
sbb
fcmovbe
cld
inc
repz
icebp
and
push
sbb
inc
push
xchg
mov
lea
jmp
add
cmpsb
jecxz
sub
out
push
push
dec
es
cli
pop
mov
sbb
xchg
sahf
shll
and
fldl
lret
jmp
repnz
cmp
jp
cmpsb
mov
inc
dec
pop
pusha
mov
pop
out
addr16
cmpsl
xchg
lea
push
add
mov
lods
pop
lea
das
cmp
mov
test
lret
ret
adc
jae
cli
lea
dec
ret
shll
jg
scas
sbb
testb
push
pop
leave
daa
inc
push
dec
jb
into
btc
fwait
jg
cmc
and
repnz
in
aam
add
and
jge
sbbb
mov
les
out
or
sub
add
sub
fldenv
das
xor
enter
aaa
scas
int
mov
push
dec
mov
imul
data16
icebp
mov
out
pop
lds
lahf
out
fistps
xchg
sarb
push
das
mov
hlt
fdiv
mov
lret
lea
push
std
pop
pop
and
insb
cmpsb
add
sub
outsl
gs
fisubrl
sbb
add
ret
adc
mov
push
sub
cmp
cld
xchg
daa
pop
outsb
xchg
mov
jae
mov
ljmp
fwait
loopne
xchg
ss
and
test
adcb
cltd
fcoml
sti
sbb
insl
pop
jne
pop
out
ss
insb
jno
out
or
popf
xchg
loope
xor
sbb
sahf
dec
cmp
xchg
rorl
cmpsb
pop
xchg
frstor
jmp
into
je
mov
lahf
stos
inc
or
out
cmp
sub
xor
or
xor
fiadds
lds
insb
dec
js
xchg
sbb
cmp
adc
dec
icebp
mov
dec
xchg
out
mov
mov
jne
mov
mov
cmp
das
rcl
popa
call
mov
ja
add
or
out
adc
lahf
pop
fwait
mov
mov
test
fstpl
movsb
push
pop
jecxz
xchg
stos
jge
adc
cmpb
and
rolb
in
cmpsl
jle
mov
popa
lods
adc
dec
jge
or
aas
arpl
and
push
cmp
sub
and
xchg
imulb
jae
fidivrs
fadd
fisubrs
cmp
pop
test
jno
mov
cmp
adc
out
and
in
popa
in
and
and
stos
and
subb
sti
adc
sub
cmp
add
imull
push
ja
jbe
and
xor
and
lret
mov
dec
insb
or
xchg
add
repnz
aaa
dec
or
jnp
jg
or
daa
test
mov
test
push
scas
stc
mov
mov
xor
mov
rcrb
xchg
xchg
sysexit
pop
mov
jae
mov
cmp
inc
jecxz
test
sbb
fimull
add
aad
or
sbb
inc
in
push
dec
mov
lea
sub
mov
movsl
mov
push
inc
dec
loopne
mov
data16
or
inc
sarb
add
push
popa
std
js
xor
popa
jge
jnp
xor
lods
cmpsb
mov
cmp
in
lods
mov
cmp
fsts
or
inc
mov
sub
jnp
push
sub
int
adc
outsl
cld
mov
dec
dec
xchg
es
dec
ds
adc
ss
jge
xchg
cli
shlb
mov
or
aam
xor
enter
jb
aaa
mov
lods
sti
mov
nop
cmc
mov
cwtl
lds
push
xor
call
xchg
mov
mov
xchg
jge
jp
dec
sahf
shrl
icebp
dec
mov
cli
cmp
movsb
insl
push
pop
jnp
movsb
sub
sub
cmpsb
mov
leave
fsubrl
idiv
gs
nop
repz
xor
xor
add
xlat
add
lock
jge
push
inc
xor
hlt
xor
sahf
in
mov
jno
leave
push
int
nop
cltd
fidivrs
leave
push
addl
jne
lock
leave
fisttpll
fmul
roll
cld
sub
mov
ficomps
orb
add
pop
test
adc
js
jb
pop
insl
repz
lods
fwait
scas
outsb
pop
aam
clc
idivl
repz
mov
lahf
pop
xor
mov
outsl
add
sub
stos
loope
cmpsb
rorb
cmp
adc
and
fwait
hlt
in
pop
or
ret
inc
pop
jo
jl
es
adc
rcll
ror
pusha
xor
inc
jb
or
jg
inc
testb
mov
aad
sub
push
jp
xor
or
nop
icebp
ret
add
xchg
mov
sub
add
leave
fwait
push
xchg
mov
daa
xchg
clc
pop
or
mul
mov
jo
movsb
js
data16
dec
dec
mov
push
orl
popf
mov
inc
mov
shll
cli
shll
pop
adc
aas
pop
fstpl
and
fdivr
popf
xchg
add
jp
pop
lock
or
aaa
cmpsb
jmp
pop
jno
ret
frstor
mov
adc
scas
xchg
fs
push
add
push
cmp
pop
jge
mov
nop
stos
popa
int3
push
shlb
loopne
xorl
fsubl
jno
mov
movsb
inc
test
mov
mov
lcall
jnp
xchg
test
jno
mov
aaa
jl
dec
cs
push
cld
icebp
pop
push
push
lea
push
mov
xchg
mov
movsb
dec
push
test
aaa
sub
test
sbb
fwait
push
adc
cwtl
aad
pop
inc
fstpt
cmp
xchg
jp
pop
shrl
mov
xchg
jne
pop
data16
and
js
ss
ja
mov
ror
jecxz
insl
shrb
sbb
jg
jns
pop
cli
xlat
jmp
push
in
sarl
pop
and
inc
mov
iret
int
data16
ret
dec
lahf
cmp
pop
in
mov
xchg
aas
pop
enter
aas
fists
movsb
ret
fcompl
and
push
xchg
xor
add
lea
movsl
cltd
cmp
lea
pop
fsubrl
rol
mov
dec
push
xor
iret
sbb
mov
icebp
pop
push
sbb
jmp
repz
int3
pop
mov
jo
xchg
fpatan
int
sbb
movsl
arpl
sti
pop
or
push
xor
jecxz
and
fldt
ss
push
jecxz
out
xchg
lock
fwait
negl
addr16
jmp
test
adc
xor
cmc
movsb
push
cld
dec
pushaw
movsb
inc
lret
adc
and
out
sbb
pop
ret
pop
mov
rcrb
cli
div
iret
pop
sub
es
or
movsl
xor
jle
ficompl
xorl
sbb
cmp
pop
test
hlt
jg
js
ljmp
mov
fimull
cli
lods
jecxz
add
mov
loop
mov
fwait
mov
mov
dec
mov
and
test
mov
and
push
or
jbe
lock
cmc
rolb
push
js
mov
mov
cmp
or
popf
insb
sbb
pusha
or
dec
sbb
outsl
jnp
mov
out
adc
jne
test
fisttps
push
adc
cmp
jno
pop
repnz
ret
push
and
adc
or
orl
aaa
repz
daa
shll
xlat
ss
movsb
pop
arpl
call
pop
xchg
push
dec
mov
xor
test
aas
aas
iret
mov
and
lea
xor
xor
mov
mov
loope
pop
loop
xor
jecxz
andb
dec
dec
test
mov
cmpsb
inc
fnstsw
and
lock
push
fidivs
mov
or
cmp
hlt
xchg
jp
mov
nop
ret
das
inc
pop
negb
and
aaa
mov
je
pop
js
cld
xor
sahf
loop
mov
in
sti
idivl
hlt
jbe
and
std
fucomi
cmpsb
xchg
in
test
lcall
insb
push
adc
inc
pop
mov
or
enter
movl
sub
ret
cltd
pop
mov
insl
cmpsb
lea
jno
mov
add
sub
lods
inc
pop
or
lds
mov
push
pop
lret
xor
movsb
movsl
ror
xchg
aam
jb
jge
jnp
shr
pop
repz
in
stos
loope
leave
sbb
jnp
dec
dec
sahf
jg
lea
push
sahf
inc
aaa
fisubl
sub
sahf
inc
lcall
push
push
or
cltd
fmuls
popa
fldt
mov
sbb
xchg
fstl
outsl
xchg
std
sqrtps
enter
sahf
cmpsl
fnstcw
addl
nop
pop
outsb
jl
xchg
inc
cwtl
pop
nop
sub
inc
and
lret
cmp
imul
push
test
sub
xor
sbb
std
stc
jp
daa
mov
push
mov
inc
mov
addb
js
jo
dec
out
mov
cmp
test
xchg
arpl
push
leave
mov
hlt
ds
xor
pop
mov
pop
sbb
sbb
vcvttps2dq
das
repnz
lods
mov
pop
adc
add
sbb
stos
jg
pop
loope
push
xchg
lret
fisttpll
cmc
or
dec
sti
pop
decb
push
cmp
mov
push
insl
lods
or
xchg
jns
xor
mov
loope
cmp
fstps
push
std
fildll
inc
cmp
xchg
aad
mul
pop
orl
ja
add
sbb
mov
mov
cmpsl
and
test
jg
cmpsl
sub
std
sub
mov
cs
xor
lods
scas
ret
cli
cltd
cmp
sbb
mov
jo
ret
lahf
daa
imul
jecxz
push
xchg
sbb
int
push
add
mov
cmc
fcoms
cmovno
imul
mov
add
xchg
sub
jp
les
test
dec
enter
jae
adc
out
adc
jl
dec
jecxz
iret
pop
cmp
sbb
lock
das
es
jg
test
sub
ja
cmp
loopne
mov
sbbl
fwait
std
cmp
iret
movsl
rolb
push
decl
gs
imul
popa
das
and
xchg
adc
mov
push
incb
movsl
jns
pop
out
pop
push
pop
mov
arpl
js
out
push
xor
jo
mov
cmp
cmp
outsb
sti
jg
cmp
dec
xor
or
jnp
movb
rcll
dec
call
fwait
cld
fbstp
push
rorb
mov
sub
movsb
xor
sahf
jnp
dec
add
in
mov
mov
jmp
sbb
inc
and
bound
xchg
ret
push
daa
pop
sub
adc
mov
int
test
adc
loopne
orb
int3
pop
and
shrl
fsubl
sub
jno
adc
mov
inc
les
leave
jg
and
cwtl
scas
mov
inc
loopne
rcrb
mov
xchg
fcmovnb
lcall
mov
addb
push
sbb
decb
aad
xlat
mov
pop
pop
ds
push
fisttpl
pop
and
jg
pop
lahf
cltd
push
cld
loope
adc
mov
push
push
repnz
adc
sti
lret
sub
loopne
xchg
jecxz
subl
insb
cmp
dec
dec
iret
mov
pop
lock
jo
out
dec
adc
in
add
mov
in
add
add
pop
aam
xchg
cli
jo
push
jo
out
pop
push
in
adc
sbb
stos
jbe
cmpsb
mov
in
movsl
std
xor
sub
sbbb
and
and
movl
xorl
cltd
mov
xchg
pop
addr16
aaa
mov
pop
dec
jno
scas
das
outsb
pop
push
xchg
dec
or
xchg
jg
out
outsl
loop
fldcw
out
leave
cld
push
test
hlt
daa
xchg
in
insl
push
pushf
loopne
inc
jb
xor
faddp
test
pop
cmp
jmp
fcompl
push
pop
add
mov
pop
icebp
or
in
in
xor
loop
mov
lods
adc
outsl
jg
mov
or
mov
cmp
mov
inc
das
or
cmp
push
negl
das
jmp
ficoms
icebp
dec
add
mov
xchg
shll
push
lea
js
movl
pushf
imul
xchg
or
lahf
lods
pop
cmp
mov
and
mov
cmp
sub
dec
mov
mov
addl
jp
xchg
loope
loope
pushf
cld
pop
push
push
fsub
mov
adcb
rcrl
out
repnz
lea
loopne
xor
arpl
xchg
or
xchg
movsb
xchg
lahf
scas
cltd
xchg
jecxz
es
xchg
dec
data16
dec
jge
push
add
pop
jb
adc
ret
dec
pop
daa
aaa
out
ljmp
addl
in
scas
das
xchg
movsb
imul
shrb
inc
pop
pushl
push
ss
jne
jmp
icebp
xor
lock
add
adc
or
imul
jl
sbb
adc
jge
stos
in
add
lds
clc
pop
imul
int
or
mov
xor
les
inc
inc
xchg
ret
cltd
xor
push
sbb
popl
orb
mov
repnz
inc
fstps
js
sbb
pop
push
outsb
test
fisubrs
inc
jne
cmp
pop
inc
rolb
inc
jl
mov
dec
mov
sbb
adc
arpl
adc
outsb
add
js
jge
add
cld
cltd
out
push
enter
lahf
jns
test
imul
xchg
add
leave
push
loopne
sti
inc
add
jmp
stc
loope
jmp
insl
sbb
clc
or
xchg
ficoms
imul
ret
dec
jnp
mov
fs
mov
xor
stos
negl
repz
lods
lock
inc
dec
insb
out
stos
cmp
test
mov
cmc
sti
cs
hlt
cld
push
repz
movsl
fisttpll
mov
ds
mov
lods
sti
sbb
loop
je
sbb
push
cmp
jecxz
xchg
jns
xor
push
cmc
xchg
shlb
imul
ljmp
lret
out
xchg
push
fstpl
rclb
int
js
rorl
inc
outsl
ljmp
lods
mov
jle
mov
sub
loope
divl
or
rcrl
aas
dec
cmpb
mov
test
pop
cmc
jns
sbb
sub
sbb
sti
js
lock
sub
xchg
xor
cmp
int3
dec
sub
or
shl
jne
inc
sub
xor
outsl
ja
jo
add
ljmp
les
or
out
aaa
add
int3
cmp
jmp
scas
in
xchg
xor
mov
jno
mov
cmp
mov
or
jmp
push
xor
inc
out
fdivr
adc
ljmp
mov
sbb
mov
push
add
pusha
dec
xchg
sub
ss
push
sti
aam
enter
movsb
mov
dec
fdivrl
add
lcall
iret
mov
mov
dec
sbb
or
adc
add
ja
rol
fimull
and
lcall
xchg
testl
jb
push
outsb
mov
cmpsb
out
dec
mov
mov
xchg
cmp
pop
pop
mov
jle
mov
fiaddl
jae
ja
loope
es
add
rcrb
fs
lock
call
enter
movsl
lods
push
cmp
and
mov
xchg
hlt
scas
cmpsl
mov
scas
jl
stc
and
push
jnp
jae
mov
mov
inc
enter
pop
or
inc
jge
adc
adc
outsb
aaa
pop
cmp
jge
jge
lods
mov
push
pushf
lods
mov
push
mov
fadds
fiaddl
dec
outsb
mov
and
sahf
jge
push
outsb
push
mov
sbb
hlt
push
cli
push
adc
xchg
bound
or
xchg
test
dec
mov
add
nop
iret
insl
adc
out
jae
fwait
loope
xchg
sub
sub
clc
aas
pop
mov
testl
mov
movsb
xchg
stos
insb
in
gs
stc
aad
data16
sbbl
sub
mov
dec
adc
and
sahf
jp
inc
leave
xor
or
dec
int3
push
jnp
xchg
push
and
add
mov
fcmovne
bound
xor
int
enter
cmp
daa
sti
hlt
pop
ret
jo
jle
cwtl
adc
ret
cmp
aad
arpl
stos
push
add
sbb
bnd
cmp
stos
dec
mov
repnz
add
pop
imul
jl
or
push
mov
fdiv
mov
xor
mov
sub
movsb
jno
push
test
lcall
mov
hlt
fdivl
jle
xor
add
aaa
dec
stc
and
negb
frstor
out
aas
or
xor
divl
pop
aam
icebp
push
pop
push
notb
ljmp
add
in
cmp
cmp
imul
call
mov
iret
icebp
adc
scas
js
adc
dec
push
in
push
mov
push
insb
sbb
mov
stos
mov
fldcw
mov
stos
cmp
xor
sarb
fldenv
xor
fsub
push
xorl
not
cwtl
sti
jmp
mov
stos
repnz
insl
lock
jecxz
repnz
xchg
add
negl
pop
mov
add
pop
mov
bound
xlat
inc
jno
adc
and
jle
jns
cmp
js
call
adc
xor
adc
push
mov
mov
mov
sub
adc
cmp
jmp
sub
jmp
jl
xchg
cmp
jno
dec
mov
lds
xchg
mov
cltd
adc
pop
mov
leave
pop
add
xor
sub
xchg
sbb
adc
or
inc
mov
loopne
and
in
cld
push
outsb
imul
dec
test
out
push
add
cmpsb
jae
scas
add
fdivl
fnstenv
or
and
mov
mov
pop
pushf
in
pop
add
ljmp
lret
or
or
dec
jb
push
mov
mov
shrb
or
lods
mov
sbb
sbb
rorl
aam
pop
or
mov
jnp
pop
xor
test
out
and
sbb
cwtl
bound
jb
xor
pushf
mov
aaa
jecxz
add
popa
fsubrs
int3
aas
jnp
insl
jecxz
xor
adc
ja
out
xor
test
adc
cmpsb
or
pop
xchg
int
mov
push
imul
dec
push
cmpsb
fstl
ret
mov
jl
cltd
cmp
jl
push
add
fsubl
lods
cmp
in
mov
or
sarb
jae
pop
outsl
dec
pop
xor
sahf
jge
cli
rorl
push
aaa
into
sarl
push
data16
test
or
inc
stos
sarl
jp
jge
scas
cli
je
sahf
sub
movsb
mov
push
sbb
or
inc
scas
adc
fldcw
push
aad
or
leave
popf
and
adc
jmp
sti
fwait
pslld
add
and
jge
xor
mov
mov
sbb
addb
shlb
lahf
inc
cld
fnstcw
pop
in
das
push
jae
leave
cltd
sub
dec
shll
mov
fisubs
ljmp
jae
fdivrp
add
sub
sbb
xor
dec
stc
and
xor
pop
xorb
mov
mov
stos
xor
hlt
imul
adc
sbb
mov
push
sbb
jecxz
das
pop
sub
sub
popa
outsb
add
mov
sar
push
mov
sbb
stc
and
ljmp
stc
repz
das
or
and
inc
sahf
lds
pushw
test
mov
test
cmpsb
lcall
dec
mov
jge
sbb
scas
in
leave
xchg
sbb
add
iret
cld
stos
cwtl
arpl
sub
es
arpl
mov
fst
lret
mov
int3
out
and
jnp
cmp
xchg
addl
lcall
sti
mov
mov
add
into
cmp
inc
ja
addl
ds
outsb
js
mov
repnz
inc
imul
pop
in
js
xchg
in
push
or
lret
aad
jecxz
addr16
aas
leave
mov
mov
lret
movsl
xor
pop
inc
jns
mov
data16
pop
or
xchg
or
out
mov
divl
xchg
ret
cmp
out
fistpll
movsl
lahf
out
pop
adc
adc
jmp
pop
mov
stc
mov
sar
jmp
inc
scas
loop
cmpsl
mulb
jmp
xchg
xor
ss
fldenv
fiadds
dec
dec
xchg
xchg
push
or
xchg
dec
leave
lock
and
jecxz
jno
sar
sub
xor
dec
mov
push
push
lock
jp
sahf
push
imul
imul
lock
data16
sahf
or
adc
insl
cmp
adc
ss
inc
arpl
xor
sar
cmp
sub
and
das
cs
mul
xlat
testl
repnz
cmp
stos
enter
data16
cs
adc
dec
xor
cmp
test
xchg
sahf
jae
addr16
pop
or
mov
cmp
test
or
leave
loop
xchg
lea
and
xor
movsb
pop
mov
fcoms
sbb
sub
arpl
sti
inc
arpl
bnd
lock
push
or
mov
in
cltd
out
loope
cmc
pusha
add
push
int3
scas
mov
mov
xlat
push
call
cmp
cld
jmp
pop
push
pushf
negl
xor
inc
xor
xor
xchg
add
les
repnz
stos
or
mov
fdivl
stc
xchg
sahf
outsb
iret
push
jp
test
sbb
ficoml
mov
sub
pop
or
pop
outsl
pop
arpl
lret
aam
adc
loopne
test
adc
sub
sbb
fsubs
xchg
push
and
pop
iret
aad
shrb
les
jno
negl
push
outsb
arpl
int
mov
adc
nop
xor
jle
mov
ficoml
popf
filds
mov
jecxz
test
xlat
int3
into
push
sahf
xor
pop
pusha
std
daa
jle
mov
cli
call
dec
shrl
mov
cmpsl
sub
dec
push
insl
cmpsb
fwait
test
mov
sub
push
xor
outsb
lock
sub
dec
xrelease
mov
dec
les
add
sbb
jle
pop
dec
aaa
and
out
adc
jecxz
in
xchg
sub
bound
mov
cmp
mov
das
out
push
repnz
jo
push
fwait
imul
adc
mov
sub
mov
xor
xchg
xchg
mov
movsb
pushf
pop
inc
je
jnp
xchg
cli
sbb
pop
xor
popf
xchg
stos
mov
lock
pop
int3
and
stos
or
ret
jnp
scas
loope
cmp
xchg
pop
rcr
lahf
test
repz
dec
cmp
pop
jae
adc
lret
clc
push
dec
cs
pushf
add
jmp
push
loop
cmp
loope
inc
cmc
adc
xor
adc
sub
lcall
inc
lret
sub
iret
jne
ret
insl
jp
adc
or
lret
sub
jle
outsb
daa
jg
cmc
dec
xor
inc
lahf
mov
xlat
dec
adc
push
cwtl
cmp
pop
mov
in
xchg
mov
xor
les
or
mov
stos
xchg
sbb
pop
jbe
or
jno
xor
cld
inc
mov
push
xchg
inc
fidivs
cmp
pop
fistl
inc
or
popaw
push
jecxz
mov
cmp
movl
dec
jb
dec
leave
std
pop
adc
shl
inc
mov
sub
mov
pop
fcmovnbe
or
push
jo
pusha
xchg
repnz
std
push
imull
ljmp
loope
cmp
jno
cs
push
push
jle
nop
addr16
pop
xor
dec
aam
arpl
xor
adc
test
cmp
sbb
dec
adc
add
leave
fcompl
stc
in
sub
int3
pushf
vmovddup
sub
xchg
mov
pop
mov
xchg
sahf
lea
shll
lcall
dec
push
pop
addr16
cmp
ficompl
loope
jb
and
or
push
in
cmp
nop
adc
dec
mov
mov
lret
push
icebp
jb
sbb
testl
inc
adc
sub
ja
fstl
mov
sub
push
das
fwait
repz
mov
call
in
sub
push
sub
pop
xor
xchg
adc
aaa
mov
testl
or
mov
or
add
addb
or
xor
push
stos
push
shrl
sub
push
jge
xor
cwtl
dec
testb
lds
mov
pop
data16
scas
jecxz
popf
push
daa
int3
push
leave
pop
pop
clc
xor
push
push
mov
orl
dec
push
test
std
aad
hlt
sbb
push
inc
and
scas
and
fsubs
inc
jge
cmpl
mov
add
fisubs
add
push
sub
jae
test
psllq
fidivrl
nop
outsb
jecxz
mov
dec
jno
rorl
cmpsl
push
or
mov
and
scas
add
nop
into
lock
lds
xchg
add
mov
loope
mov
cmpsl
adc
ds
jp
pinsrw
push
mov
cmpsl
xchg
rolb
jle
outsb
inc
loop
sahf
andb
pop
dec
sbb
std
mov
cmp
int3
inc
mov
mov
es
movl
loopne
mov
fbstp
stos
jns
int
fwait
pop
jno
gs
mov
jecxz
xor
insl
popf
jl
or
out
call
popa
dec
outsb
jmp
mov
cs
jg
push
jg
fdivrs
test
stos
add
mov
aas
inc
xor
mov
mov
iret
enter
pop
jmp
mov
mov
fstps
arpl
push
pop
mov
pop
dec
testb
out
xlat
dec
fwait
adcl
push
jle
inc
scas
jne
sub
sti
push
insl
pop
in
xor
repnz
lea
lcall
jnp
add
ficoml
push
dec
push
lods
repz
sarb
fistps
fldt
rol
jecxz
sub
into
scas
outsb
popf
loop
ljmp
gs
mov
jge
xchg
popf
out
outsb
fdivs
cmpsb
xor
les
cwtl
test
aad
jno
inc
jl
or
gs
sub
add
dec
fidivrl
cmp
jp
xchg
sbb
push
mov
popf
and
pushf
fnstcw
xor
shll
rcrb
stc
hlt
in
sub
loopne
insl
ret
mov
xchg
in
shrl
and
mov
mov
mov
mov
add
mov
inc
adc
sub
inc
in
pushf
loop
sbb
cmp
stos
das
aaa
ss
sub
adc
jo
dec
push
xchg
push
ljmp
inc
mov
in
iret
loope
adcb
sub
ret
in
hlt
shr
sub
sub
adc
pop
or
lds
inc
mov
vcmpngtsd
adc
leave
jmp
sbb
push
fdivl
adc
xor
pushf
jae
xchg
js
mov
loop
adc
in
gs
inc
push
cmp
pop
ret
adc
xchg
sbb
lods
xlat
sub
icebp
xchg
xor
cltd
add
push
pop
xor
xchg
push
cmpsb
stos
mov
into
cs
dec
testl
fmul
movsl
or
outsb
cmpsl
and
xchg
outsl
xchg
adc
cmpsb
out
or
inc
inc
sub
push
std
push
into
cmp
dec
sbb
push
test
lret
push
sub
sbb
js
sbb
dec
rcrl
xorb
push
mov
lock
cwtl
pop
das
mov
div
lods
fwait
pop
and
and
out
outsl
xor
or
mov
xor
jnp
movsl
movsl
hlt
mov
icebp
push
push
scas
jl
adcb
inc
shlb
jp
xchg
xlat
sub
gs
popa
sub
dec
xchg
pop
sub
and
xchg
scas
jecxz
ds
in
jne
inc
lea
sub
out
lcall
adc
mov
sbb
mov
dec
cmp
push
xchg
movsb
jns
sub
or
cmpsb
sub
andl
ret
gs
shrb
dec
mov
inc
and
mov
and
dec
es
cli
comiss
cmpsb
mov
aam
shll
mov
or
or
out
xor
int
cmp
mov
or
cli
loope
push
xchg
lret
lret
nop
fwait
popf
decb
ret
adc
or
imul
lea
push
pop
loopne
mov
mov
cmp
adc
hlt
ja
rcl
push
aas
lods
inc
ljmp
shlb
inc
decb
mov
lock
aam
pop
jmp
aad
xchg
lret
inc
dec
xchg
push
or
adc
and
in
dec
mov
addl
dec
push
fidivrs
inc
cld
loopne
xchg
out
std
jne
or
xchg
mov
jmp
pusha
scas
repnz
das
dec
adc
arpl
popf
jae
push
add
in
dec
scas
pop
insb
movsl
mov
sbbl
cli
enter
pop
ficomps
pop
loopne
xchg
and
cld
xor
dec
mov
pop
mov
fmull
lock
leave
ret
inc
int
dec
dec
roll
push
xor
mov
mov
dec
fwait
mov
mov
mov
pop
xor
es
negl
shll
scas
mov
and
mov
pop
dec
jns
clc
aam
leave
lcall
mov
inc
adc
and
subb
pop
mov
leave
push
cmp
hlt
sbb
mov
mov
sti
cmp
loopne
push
shrb
add
mov
pop
cmpb
adc
movsb
push
rorl
mov
dec
clc
or
jae
cmp
js
aaa
mov
sar
call
scas
nop
and
movsb
repnz
fcoms
fdivs
adc
or
popf
movsl
cmc
inc
jp
jo
in
sub
pop
lahf
addb
inc
int
push
imul
cli
add
popa
mov
loopne
xor
sbb
cmp
jl
shr
pusha
ret
popa
pop
adc
lods
add
or
cmp
cmp
fwait
into
fisubs
insb
xorl
bound
cmc
mov
mov
fadds
or
outsl
sub
pusha
xor
sub
out
sbb
popa
repnz
out
push
mov
cmp
xor
stos
ret
sub
adc
ffree
outsl
lret
imul
or
test
ret
ds
fs
push
mov
rorl
mov
in
aas
aad
aad
cmp
mov
mov
fs
push
mov
shrl
dec
add
test
stos
pop
dec
adc
lea
js
arpl
inc
in
add
add
test
xchg
inc
inc
icebp
ror
jmp
or
mov
jne
mov
mov
and
mov
xchg
rolb
push
iret
or
les
dec
add
call
xorb
or
test
lock
out
in
cmp
cmc
xchg
wrmsr
fnstsw
stos
sub
aam
stos
push
or
adc
xor
mov
jle
push
xor
push
and
xchg
inc
dec
fninit
jmp
cwtl
neg
jnp
xchg
mov
leave
mov
cli
loop
scas
push
sub
mov
mov
inc
pop
mov
and
jb
hlt
iret
sub
and
push
addl
add
lods
fnstenv
lcall
mov
adc
test
arpl
sbb
rol
mov
pop
mov
int3
push
and
inc
jns
mov
cli
mov
les
loope
sbb
adc
mov
mov
push
inc
clc
adc
insl
push
xchg
lahf
add
test
arpl
mov
std
outsl
ror
loopne
xchg
dec
add
std
lds
in
popl
pop
push
int
mov
popa
aas
cwtl
fcomp
and
js
sbb
cmpsb
pop
rclb
xlat
dec
inc
leave
mov
mov
mov
inc
into
jp
mov
sbb
push
sbb
sub
ret
popa
subl
ss
iret
xchg
sub
faddp
rcll
mov
and
dec
aam
push
insl
push
dec
dec
popa
cwtl
mov
aas
aad
add
aam
shrl
xchg
je
xchg
cld
inc
inc
fbstp
push
arpl
scas
cltd
mov
gs
dec
pusha
xchg
xchg
or
jae
test
jb
cwtl
jo
adc
jae
inc
sbb
sbb
subb
sub
fmull
adc
or
sbb
into
dec
sub
imul
add
add
lds
sub
mov
sub
xor
lods
aaa
sub
pop
aad
xor
les
jb
xor
and
cmp
push
push
add
push
adc
or
pop
daa
je
inc
add
fsubp
ficompl
shl
scas
ret
mov
test
add
cli
and
jecxz
imul
loopne
pop
ss
jmp
sub
sbb
icebp
fldcw
addr16
lods
imul
faddl
aaa
outsb
mov
push
leave
scas
mov
push
sbb
dec
add
jg
js
xchg
sub
dec
and
and
nop
xchg
test
pop
xor
add
push
fstpl
sbb
pop
jle
mov
fs
xchg
push
arpl
add
cltd
sub
cmp
jno
pop
loopne
dec
test
inc
add
dec
push
test
sub
iret
in
mov
mov
sbb
xchg
mov
push
mov
je
pop
sbb
daa
dec
imul
out
add
mov
fstpl
mov
aam
xchg
icebp
push
test
fmull
add
out
loopne
loopne
fs
test
jbe
or
les
clc
das
sbb
push
and
std
pop
psadbw
jmp
shlb
outsl
in
inc
fdivr
push
xlat
inc
and
nop
jl
mov
sbb
mov
xlat
or
daa
add
loop
mov
add
shrl
inc
sbb
add
out
sub
out
push
add
std
mov
repz
or
inc
jge
jb
in
push
and
jae
dec
mov
outsl
hlt
cs
shr
rolb
aad
or
mov
outsl
xchg
dec
push
add
nop
pop
push
es
out
sti
mov
into
int
push
add
iret
call
stc
test
das
inc
adc
in
cmp
andl
clc
sbb
stc
inc
mov
cmpsb
sbbb
mov
hlt
adcl
and
sarb
arpl
sbb
pop
outsb
out
not
leave
push
lcall
ffree
sbb
pop
or
shl
imull
xchg
imul
jb
seto
xor
inc
ret
movsb
es
adcl
xchg
imulb
lods
and
enter
xor
stos
xlat
and
push
xchg
insb
mov
mov
ja
jmp
pop
or
lret
gs
es
mov
dec
icebp
cmp
pop
or
or
inc
dec
sub
into
lcall
xlat
dec
dec
sarb
js
adc
add
ja
dec
mov
stos
stos
sar
cmp
popa
push
loopne
and
out
shlb
xor
sbb
test
mov
adc
jge
jp
fidivs
repz
shlb
rclb
jmp
fadds
and
fstpt
jmp
ss
jns
or
mov
sub
mov
adc
stos
sub
inc
or
jns
dec
sub
roll
xchg
popf
test
fisttpl
popa
cmp
pop
cmc
fmul
fs
pop
in
or
mov
sti
inc
and
and
adc
nop
lea
call
mov
lea
sub
xor
pusha
ljmp
fsubrs
dec
push
aaa
push
hlt
clc
aas
push
push
fistl
cmpsb
lahf
pop
xor
repnz
vpabsw
out
call
cmp
sub
jno
imul
pop
lret
aad
mov
fisubl
std
popf
cmc
inc
dec
fstl
xor
inc
jns
lahf
sub
movsl
jno
xchg
enter
push
xchg
insl
xor
sub
lods
scas
fstpt
sbb
and
pushf
adc
in
mov
add
adc
push
rcr
js
pop
push
sbb
jecxz
or
cld
mov
fadds
sbb
or
jle
bound
es
or
pushf
in
xor
std
shlb
and
sub
and
and
xor
cmpsb
push
repz
pop
pop
mov
dec
cld
gs
jmp
pop
jge
adc
mov
and
imul
loop
mov
addr16
pushf
scas
jge
outsb
and
xor
pop
ljmp
imul
ficompl
add
cwtl
jne
pop
mov
rorb
add
mov
cs
sub
jp
jns
incl
ds
sbb
loopne
push
push
fwait
push
mov
jl
repnz
test
sub
mov
pop
leave
pusha
pop
adc
call
lcall
cmc
movsb
ds
loopne
outsb
xchg
adc
dec
lock
mov
fsubs
addr16
icebp
rorb
inc
jmp
add
data16
xor
dec
cmp
xchg
dec
andl
push
movsl
pop
ret
or
jl
lahf
loop
xor
divl
sub
push
pop
cmp
add
shll
inc
cld
pop
fiaddl
insl
movsl
mov
dec
add
cmpsl
mov
pop
add
inc
inc
or
cwtl
pop
and
cmpsb
pop
mov
push
push
aaa
push
dec
rclb
mov
fisubl
test
pop
repz
or
les
mov
sbb
jg
mov
cmp
push
adc
mov
sbb
movsb
sbb
xor
inc
jmp
adc
mov
dec
pop
shrb
lahf
push
jl
mov
push
xor
push
xchg
cmc
inc
int3
stos
mov
mov
cmp
inc
imul
repz
pushf
cmp
pop
fisubrl
out
or
fstl
mov
popa
popf
pusha
cmp
mov
inc
je
push
lahf
pop
in
cmp
int3
sub
lcall
mov
xchg
add
and
ret
push
sbb
push
and
xor
movsb
inc
je
gs
fmuls
sbbb
out
mov
push
sar
ja
mov
in
jne
mov
test
sbb
sub
movsl
cmpsb
add
repz
fs
inc
popa
jp
rcrl
xchg
mov
adc
mov
hlt
aaa
mov
ja
icebp
mov
inc
popa
jge
xchg
jle
jns
xlat
xor
xchg
iret
jp
mov
mov
ljmp
loop
xchg
push
cmp
adc
es
mov
shrl
movsb
out
push
adc
data16
lock
sti
adc
mov
mov
cmpsb
outsl
jbe
push
jl
daa
and
cmp
in
cmp
in
incb
leave
mov
add
jns
jmp
xor
test
xor
mov
cmp
icebp
pop
icebp
mov
mov
fldenv
dec
jbe
dec
mov
fildl
inc
stos
je
xor
xchg
sub
xor
stos
sub
in
fwait
out
test
push
loope
lock
jns
sub
mov
mov
jns
xor
sahf
sub
ficoms
aaa
dec
jo
aaa
les
stc
aam
jp
cmp
mov
lock
sub
pop
fcomps
jl
mov
adc
pop
push
inc
mov
stos
push
lds
test
cmc
pop
aam
pop
inc
inc
fs
popa
flds
sahf
jnp
popf
aaa
cmp
pusha
fdivl
push
clc
jo
pop
push
cmp
inc
xchg
test
cltd
add
push
or
je
jle
das
mov
frstor
adc
scas
and
add
add
push
in
pop
cwtl
pop
mov
inc
xchg
xchg
jbe
or
mov
cmp
jne,pn
lret
sub
shlb
mov
leave
xchg
jns
aaa
jmp
std
cld
out
jno
pop
and
mov
dec
popf
cmpsb
clc
push
mov
and
daa
mov
adc
popa
mov
mov
ds
sub
mov
jl
inc
fisubl
adc
cmpsb
lahf
xchg
cmp
call
xchg
mov
leave
ja
mov
fisttps
sar
dec
mov
push
pop
insl
push
pop
repz
divl
inc
ret
xchg
icebp
and
int
lds
add
pusha
lahf
adc
mov
or
rorl
inc
mov
cmp
cmp
dec
mov
mul
fwait
adc
mov
popl
cmpl
aas
push
jle
jbe
cmp
test
ljmp
addl
je
fistl
cwtl
mov
mov
pop
inc
cmp
mov
or
xchg
clc
sub
cli
cmp
loop
cmpsl
aam
jbe
std
jbe
orl
add
fldenv
lea
je
xor
adcb
push
inc
jmp
hlt
inc
mov
mov
cmp
pop
mov
push
lea
mov
mov
notb
xchg
movb
mov
or
mov
dec
in
push
clc
push
or
subl
push
xchg
push
mov
adc
popf
dec
leave
push
sti
cmp
into
std
xchg
cmp
jnp
lret
dec
aad
pop
push
ljmp
push
stos
sub
sbb
and
push
pop
push
fisubrl
pop
mov
xor
mov
mov
sbb
scas
add
in
mov
cwtl
jge
pop
jo
hlt
cmp
jg
pop
sbb
or
xlat
mov
push
ds
push
dec
mov
fwait
imull
mov
mov
xor
addl
out
add
in
in
lcall
ret
clc
sub
negl
xchg
fs
pop
lahf
repnz
jo
and
movsb
adc
cwtl
ja
in
imul
jne
pop
lods
jp
pop
push
jmp
lea
xor
gs
fbld
out
dec
push
ret
add
fiaddl
insl
adcl
cmp
cmpsb
out
jb
cltd
sbbb
pop
mov
inc
shlb
pop
test
or
cmpsb
mov
enter
add
dec
sarb
inc
les
ret
das
xor
cmp
push
loope
mov
cmpsl
aaa
fistpl
mov
fidivrs
jmp
pop
cmp
aad
fiadds
fsubrl
or
add
push
pop
loop
mov
pusha
inc
fs
xlat
movsl
scas
adc
cmpsl
arpl
inc
lahf
aad
filds
and
aad
cmp
add
or
jmp
sahf
pop
sbb
pop
sbb
sbb
or
call
sub
pop
int
js
sbb
aam
adc
jns
insb
or
insl
push
adc
fmul
dec
movsl
add
shl
xor
xor
fidivrl
insb
call
data16
fildl
ds
into
sub
in
xchg
ja
fnstcw
pop
pop
pop
sbb
push
mov
sub
pop
pop
sub
ret
push
leave
adc
aaa
and
incb
les
and
mov
loop
jne
and
push
lahf
cmc
xchg
ljmp
mov
outsl
loopne
dec
mov
jnp
fadd
mov
mov
pop
mov
cmp
enter
lods
les
dec
cmp
jae
fisttps
sti
push
push
pop
push
icebp
popa
loop
fs
stos
int3
push
ljmp
pop
nop
sbb
adc
or
in
aas
add
pusha
daa
sub
movsb
fdivs
hlt
insb
jge
inc
shr
mov
add
lods
imul
jecxz
lret
loop
lahf
out
pushf
rcrb
aaa
jg
int3
inc
xchg
imul
dec
popf
dec
ret
scas
daa
inc
icebp
cmp
jae
jne
xor
popf
and
test
inc
outsl
cmp
leave
test
mov
jns
movsl
test
imul
push
sub
sbbl
mov
push
icebp
and
mov
jmp
subl
fisubrs
icebp
scas
das
mov
imul
adc
lea
daa
add
mov
pop
mov
or
cld
dec
cwtl
and
punpcklbw
dec
pop
rorb
ret
loopne
aaa
mov
jmp
sarl
loope
andb
in
daa
in
lds
xchg
in
fisttpl
mov
and
ljmp
jmp
push
fbstp
mov
push
push
sub
and
bound
aad
push
dec
push
mov
data16
addr16
xchg
mov
xlat
scas
adc
mov
cmpsl
add
lods
push
add
iret
jp
dec
repnz
adcb
ja
rcrl
das
fs
dec
sahf
sub
sbb
stos
xchg
xchg
ret
repnz
adc
pop
xchg
leave
dec
cltd
pop
data16
or
lret
lea
rolb
cmpsw
and
inc
mov
xchg
mov
shlb
jmp
out
inc
lea
cmpb
cld
cmc
dec
lock
xor
pusha
jb
loope
icebp
je
mov
sbb
jns
sub
xor
push
jbe
cmp
mov
sub
push
lock
scas
out
test
mov
rcr
mov
daa
ja
push
inc
imul
pop
fmull
loop
pushf
xor
arpl
and
inc
dec
lahf
dec
outsb
call
insl
nop
dec
imul
movsb
cld
scas
dec
test
out
ficoms
or
out
mov
and
nop
insl
scas
rol
icebp
or
loopne
in
stc
inc
aaa
sarb
inc
mov
test
aas
fwait
out
xchg
addb
xchg
sub
in
cmp
jecxz
sbb
sti
inc
or
stc
lret
push
shrb
inc
fdivrl
imul
mov
push
push
jno
vmwrite
aaa
ja
xchg
mov
xchg
sbb
inc
cmp
cmc
enter
mov
inc
out
jmp
xchg
fiaddl
rcl
es
sub
subb
inc
jmp
pushf
js
outsb
lcall
jp
xlat
cmp
jns
je
arpl
add
or
and
fwait
adc
std
out
mov
and
sbb
xchg
rorl
add
pop
lds
mov
loopne
dec
rcrl
nopl
mov
rol
lock
pop
loopne
cmp
leave
cwtl
mov
pop
lods
mov
insl
mov
popf
imul
adc
xor
or
mov
rclb
xor
inc
int3
push
adc
push
lcall
pop
pop
inc
cmp
imull
mov
fildl
xor
daa
fwait
icebp
pop
stc
nop
push
cmc
fcmovnbe
ds
xchg
add
aas
push
push
jecxz
jp
push
sbb
scas
scas
xchg
push
inc
xor
jle
xlat
push
not
xor
xchg
ret
ficoms
dec
xchg
cmp
pop
push
dec
jp
ret
shll
mov
bound
jae
in
mov
aam
xchg
xchg
in
cmp
outsl
add
xor
stos
pop
divb
seta
shr
mov
jns
xor
dec
add
inc
js
jo
jns
xchg
sub
mov
sbb
sbb
mov
lahf
and
sbb
sbbl
insb
in
test
testb
mov
in
int
call
call
test
mov
cltd
xor
shlb
xchg
fcoms
loop
inc
sahf
std
int3
pop
pushf
mov
inc
out
mov
andb
inc
out
push
loop
mov
enter
jo
aas
xlat
test
sahf
push
adcl
test
and
out
push
or
mov
xor
add
jle
adc
pop
pushf
stc
jle
arpl
fdivrs
mov
pop
cltd
mov
xchg
mov
jle
pop
ret
insl
sbb
jle
mov
movsl
jne
fwait
sbb
sub
test
pop
xchg
mov
icebp
cmc
dec
mov
jae
lret
into
adc
aam
shll
jle
sbb
scas
ds
mov
mov
and
enter
mov
pop
inc
cs
xchg
inc
loop
inc
adc
jno
xchg
mov
into
jp
rcrl
xchg
jnp
xor
adc
gs
push
out
xor
dec
xor
imul
adc
movsb
jge
lods
mov
xor
mov
sub
gs
in
inc
data16
inc
and
adc
in
xchg
sbb
loope
popf
sub
xchg
bound
xchg
nop
adc
bound
insl
jl
sbb
add
out
mov
fildl
call
dec
xorl
ret
js
imul
mov
or
lods
cmc
add
dec
cmpsb
mov
inc
sbb
orb
adc
adc
mov
xchg
test
cmp
inc
pop
push
arpl
adc
xchg
std
lret
jbe
jns
jnp
pop
fsubs
pop
stc
pop
lcall
pop
mov
and
jae
sub
push
je
pusha
loop
add
faddl
dec
pushf
test
cmp
adc
sti
shlb
inc
sti
pop
xor
loopne
fcompl
push
mov
popl
jle
cli
sbb
xchg
pop
out
push
or
aad
push
test
cmp
daa
fld1
dec
mov
fnstcw
in
push
push
outsl
pushf
lcall
gs
ja
pop
xchg
or
mov
cld
sbb
xchg
pop
xor
fmul
dec
call
adc
lock
fucomip
or
push
or
sub
aam
push
pop
ds
lods
jg
mov
pop
popa
mov
jmp
in
mov
inc
or
in
add
cmc
xor
dec
sub
and
hlt
xor
mov
push
out
sub
inc
dec
jo
popa
jns
fwait
sbb
push
push
rcr
repnz
or
or
out
cmp
cld
jnp
lcall
xor
icebp
insb
and
stos
sub
roll
inc
js
mov
mov
fiadds
jnp
aaa
push
std
cmp
out
jno
adc
test
into
inc
or
push
popf
xchg
pop
xor
mov
inc
idivb
adc
mov
into
call
sub
mov
inc
ret
and
jp
dec
xor
xor
inc
push
out
pop
cs
fimull
repnz
repnz
jl
ja
pop
jb
cld
jne
adc
fs
mov
lods
pop
fsubl
add
inc
and
into
lahf
dec
daa
xor
mov
iret
popf
rorb
and
outsl
jmp
xlat
or
into
add
inc
stos
push
push
aaa
or
mov
sahf
xorb
pusha
or
push
out
pop
sbb
ja
dec
push
xor
stc
mov
out
pop
lret
stos
bound
jo
pop
xor
xor
jmp
daa
cmc
and
mov
cmp
cmpsb
lret
outsl
sahf
push
dec
or
scas
mov
push
xor
dec
iret
xchg
mov
add
test
pmaxub
ss
add
cli
les
or
shlb
mov
cmpsb
or
repnz
stc
mov
jl
xor
out
data16
jmp
sbb
sbb
push
and
jnp
icebp
insb
inc
arpl
mov
pop
lods
sbb
loopne
sub
mov
lret
scas
push
pusha
adc
stc
xchg
cmp
or
jne
jmp
rcll
jmp
arpl
fbld
dec
loop
mov
shl
aad
push
repnz
test
sub
mov
fwait
xchg
and
and
push
cmpsb
adc
scas
movsl
ret
leave
or
xlat
and
mov
pop
rcll
jge
dec
and
inc
mov
mov
pusha
push
xchg
mov
js
and
lea
out
jne
out
mov
pop
flds
arpl
out
leave
ss
rorl
das
imul
les
and
cmp
inc
insl
add
in
enter
in
in
dec
lods
call
pop
popf
fiadds
aas
frstor
sbbb
or
cmpsb
lods
xchg
ret
cld
rclb
iret
out
jmp
dec
push
mov
pop
cmc
xchg
out
add
mov
ret
xor
in
pop
adc
push
sbb
and
fdiv
lret
add
scas
adc
loope
jle
pop
xor
adcb
iret
push
lea
lret
cwtl
cld
ja
popa
bound
cmp
addr16
in
pushf
sub
movsl
push
or
xor
rcrl
mov
insb
nop
xchg
mov
push
pop
or
push
ret
movl
cld
cltd
adc
lcall
lahf
jle
stos
dec
adc
pop
pop
push
and
stos
sub
cmpsb
lock
and
lods
addb
out
je
mov
mov
add
sbb
jecxz
mov
adc
loopne
pop
fldcw
mov
stc
add
pushf
dec
xor
jns
inc
sub
lea
ss
fldl2e
push
mov
test
imul
sahf
adc
in
push
sub
aam
pusha
in
into
fidivrl
clc
ds
sbb
or
push
shll
loop
jecxz
dec
sbb
les
fdivrl
ja
inc
dec
xor
mov
or
jp
xchg
dec
xor
sub
rcrb
jbe
fs
xor
pushl
cwtl
fsubrl
sbb
hlt
shlb
and
insl
repnz
xor
mov
push
adc
and
add
fsts
xor
fsts
mov
scas
push
inc
pop
cmc
pusha
fwait
test
xchg
arpl
sub
es
pop
mov
dec
jnp,pn
sbb
mov
dec
inc
ret
push
and
mov
pop
jp
jno
aam
mov
pop
outsl
push
xchg
sub
hlt
clc
int3
popf
mov
pushf
jbe
push
jo
sub
mov
popa
xor
ret
push
das
xchg
nop
pusha
lret
or
adc
xchg
addr16
mov
aad
cmp
movsb
clc
cs
pop
sbb
push
mov
jb
fldz
icebp
jg
xor
in
mov
scas
sub
adc
test
inc
sarl
or
pop
push
fs
jae
sahf
sbb
sbb
out
ret
addb
mov
mov
pop
sub
sbb
mov
or
lret
out
test
popa
bnd
mov
lahf
imul
mov
cld
xchg
adc
adc
stc
jmp
jmp
jle
insl
mov
mov
push
adc
add
cld
sbb
push
xchg
in
mov
and
jge
lret
sub
test
pop
pslld
adc
lahf
mov
or
jb
mov
add
bound
pop
cmp
jmp
mov
es
push
pop
mov
test
test
push
leave
icebp
adc
cmp
xor
cmp
sub
dec
adc
int3
scas
in
inc
sub
and
xor
fisubrl
cwtl
test
int3
mov
repz
and
lds
je
sub
dec
inc
add
mov
popa
test
mov
addb
ret
mov
loope,pt
test
je
cmpsl
fstl
jo
xchg
xchg
cmp
fsubrp
push
mull
jae
loopne
ror
push
testl
in
repnz
sbb
xchg
inc
fidivs
dec
inc
inc
aam
xlat
xchg
jge
add
repz
fsubrs
icebp
out
push
and
dec
ds
jno
std
dec
gs
inc
and
jp
outsb
or
sbb
cmpb
jo
or
mov
push
shrl
repnz
test
jp
icebp
mov
hlt
ficoms
cmc
int3
je
hlt
pop
pop
inc
sbb
sarl
mov
lret
aad
test
jne
xor
sub
push
pusha
mov
push
pop
imul
dec
popa
lret
push
xor
adc
mul
stos
inc
cmp
adc
ficoms
cmpl
lahf
clc
sbb
std
pop
push
ret
jl
xor
mov
dec
mov
jmp
lret
fcoml
xchg
xchg
in
dec
xchg
in
xchg
faddp
repnz
std
mov
or
adcb
hlt
lret
sbb
subl
sbb
les
push
push
lock
cwtl
testl
inc
jp
add
leave
mov
stos
mov
mov
bound
xchg
cmp
sbb
negl
or
lock
test
je
nop
icebp
xchg
inc
lret
push
push
push
inc
sahf
adc
das
lahf
in
test
pop
cli
push
push
xchg
insl
sbbb
aad
js
xchg
and
add
xor
xchg
shll
int
inc
das
mov
fidivrs
mov
mov
in
js
pop
mov
mov
adc
pop
js
xchg
mov
push
inc
or
push
cli
add
sbb
in
adc
lods
jl
lret
mov
dec
push
enter
add
or
xlat
fnstsw
pop
push
cmc
pushf
xchg
in
test
call
leave
or
jmp
mov
cwtl
dec
fwait
lea
add
mov
and
bound
jle
ficompl
push
ja
jl
and
mov
cltd
cmp
leave
sti
pop
push
jae
fdivr
in
inc
repnz
loop
sahf
sarb
mov
int
sub
jo
cs
lods
inc
in
icebp
movsl
bound
hlt
outsl
adc
add
pusha
mov
daa
fnstcw
loope
lret
sub
xchg
icebp
xchg
pop
movsl
dec
sbb
stc
test
xor
sahf
rcrb
jno
imul
and
in
sbb
mov
push
popf
pop
fucomp
punpckhdq
mov
sub
inc
notb
sub
popf
sub
subb
scas
in
in
mov
orl
push
pusha
jb
sarl
xor
jnp
stc
pop
jns
into
xchg
sbb
aad
in
jg
std
or
imul
mov
push
jbe
flds
push
jnp
or
cld
in
imulb
leave
and
mov
adc
adc
icebp
mov
dec
xlat
mov
gs
xchg
or
or
sub
dec
jmp
add
xchg
mov
and
lahf
or
cmc
iret
ljmp
fs
cltd
xchg
mov
cmp
mov
add
sub
or
test
popa
mov
xchg
andb
xchg
xchg
shr
js
aas
shlb
and
pop
xchg
add
jp
pop
push
jge
adc
xor
or
cmp
add
sub
push
lret
cmp
and
ja
xchg
lret
sti
ret
mov
sub
idivl
mov
outsl
fsubs
xchg
jns
jo
xchg
inc
leave
call
pop
fcom
ljmp
aaa
lcall
mov
je
dec
pusha
cmpsl
out
pop
inc
sbb
dec
pop
fbstp
hlt
out
shlb
fs
mov
aam
lcall
dec
dec
pop
push
loop
sub
jnp
adc
dec
xor
jp
mov
scas
testl
mov
dec
nop
fwait
sbb
cmpsb
lds
dec
jmp
add
mov
clc
mov
mov
jle
adc
cltd
aad
jge
imul
sub
jl
dec
mov
cmp
sub
push
test
lret
lcall
hlt
fwait
stc
rolb
test
jp
xchg
sahf
clc
jecxz
or
add
loope
repz
jne
pop
lds
push
outsl
adc
xor
dec
fdivr
aad
fmull
xchg
stc
dec
pusha
mov
movb
gs
and
or
xchg
adc
popaw
mov
add
aad
dec
jmp
flds
mov
or
test
movw
dec
faddl
sub
fcmovu
mov
or
in
gs
dec
xor
inc
add
dec
push
inc
aam
lret
dec
les
jne
sbb
push
icebp
aaa
cmp
jmp
pop
aaa
test
jl,pt
cmp
cwtl
push
aam
push
out
xchg
dec
ss
xchg
addl
shrl
ret
fs
ficompl
in
xchg
leave
push
jp
jno
lahf
adc
orb
test
add
popf
out
push
fnstcw
shrb
cwtl
add
mov
mov
dec
or
lretw
push
in
push
out
in
cmp
or
adc
dec
pop
cs
stc
and
xchg
xor
mov
mov
inc
call
rclb
jl
and
scas
fiaddl
xorl
subl
mov
ljmp
push
mov
sub
mov
std
call
rcrb
sbb
mov
out
mov
and
sbb
add
nop
js
jns
xchg
mov
mov
sahf
stos
inc
xorb
aas
movsl
xchg
andb
and
pop
jae
mov
sbb
stos
adc
push
push
aam
xlat
dec
lret
enter
pushf
sub
repz
mov
dec
add
and
aam
jp
mov
cltd
dec
jne
and
push
arpl
mov
lret
ljmp
mov
in
cmp
inc
push
push
aas
negb
fs
jle
jmp
insb
pop
std
pop
add
loopne
dec
lret
add
cwtl
lock
ret
ffree
es
adc
mov
dec
mov
mov
daa
cmp
shll
ret
lret
dec
mov
lea
mov
cli
daa
cli
pop
mov
sbb
sbb
add
shll
push
xor
aad
in
loope
pop
or
xchg
loop
out
sbb
inc
gs
mov
aad
add
fidivrs
mov
inc
jge
inc
or
icebp
inc
mov
test
ss
popf
hlt
std
mov
push
push
stc
dec
subl
mov
xorl
pop
outsl
inc
out
cmp
aad
ss
fldenv
jno
mov
fsubrl
std
add
pop
mov
orl
adc
gs
xchg
dec
mov
ss
xchg
mov
push
enter
hlt
sbb
sub
add
les
clc
inc
push
mov
push
jmp
push
mov
jbe
cmp
jmp
inc
das
in
xlat
pop
js
cs
cmpsb
mov
and
loop
divl
pop
popf
outsl
xchg
pop
xchg
mov
fstps
jge
cmpsl
add
fsubrp
pushf
in
inc
xchg
movsb
pop
scas
stos
pop
jmp
test
inc
inc
jnp
test
setnp
iret
mov
jnp
mov
scas
add
jge
mov
mov
loop
cmp
mov
fildl
je
stc
add
push
movsb
cmp
and
movsl
inc
cmp
jno
jge
xchg
jae
pop
adc
mov
push
push
mov
cmp
push
lods
pop
pusha
pop
sbb
out
mov
cmpsl
jb
pop
dec
xchg
fs
mov
cmpsl
ret
stos
sub
mov
mov
sbb
test
adc
loope
ret
cmpl
inc
ret
sbb
loope
movsb
mov
adc
rcll
imulb
cmpsl
loope
adc
inc
cmp
outsl
fbld
rcl
jmp
or
int
push
jno
int3
mov
inc
mov
xchg
or
jne
cmp
or
lea
xor
inc
insl
pop
insl
adc
mov
push
leave
and
imul
pop
testb
or
cs
arpl
add
mov
adc
das
adc
mov
das
dec
adc
jnp
fisttpl
cmpsb
adc
in
mov
icebp
pop
ficompl
mov
sub
daa
and
loop
and
ret
jmp
negb
cmp
jecxz
push
push
dec
clc
mov
fcmovnbe
xchg
rcrl
aaa
sub
mov
mov
sub
jl
cmp
dec
sbb
ss
pushf
repnz
rcrb
xor
xor
fnsave
xor
inc
push
mov
jecxz
in
pop
mulb
cmp
out
fldl
jmp
push
in
cmp
mov
adc
mov
xchg
push
xor
jge
and
sub
lcall
inc
jecxz
loope
scas
push
in
in
rcl
loopne
enter
add
pop
lret
sbb
js
sbb
push
cmpsl
add
test
xor
cmp
jl
stc
push
xor
ret
xchg
push
push
xchg
cs
enter
das
adc
stos
mov
push
or
and
mov
insb
cmp
or
mov
in
bnd
jbe
in
adcl
hlt
xchg
fiadds
mov
outsb
and
in
repz
inc
in
aam
xchg
pop
pop
cld
push
ss
sub
xor
dec
icebp
lods
stos
in
mov
inc
out
jmp
push
cld
std
mov
jl
add
movzwl
push
cmp
std
ja
sbb
push
or
and
aad
jmp
mov
sub
inc
xchg
out
mov
cmc
xor
cmp
sub
inc
inc
push
xchg
cmp
into
clc
test
dec
jne
ret
cmp
mov
dec
jnp
test
jl
ljmp
lahf
bound
lds
mov
or
addr16
jge
leave
push
repnz
pushf
imul
jmp
cli
cmp
and
mov
stc
movsb
in
in
loopne
ret
sub
mov
push
or
mov
mov
pop
sub
add
xor
sub
xor
outsl
push
hlt
out
sbbb
je
lods
xlat
dec
adc
das
sub
mov
popf
iret
push
jge
in
lret
dec
pop
ja
mov
sub
push
ljmp
test
jge
or
das
daa
pop
push
xor
je
insl
adc
in
or
mov
adc
jge
test
fidivrs
repnz
mov
test
inc
cmpsl
or
push
jno
fdivl
inc
fildll
mov
nop
mov
xor
dec
ret
ss
je
in
lcall
test
outsb
adc
int3
sbb
mov
in
aaa
mov
and
loop
mov
dec
jl
jp
mov
push
dec
cmp
lds
and
mov
ret
pusha
mov
xor
into
or
daa
into
dec
pop
xchg
cmp
dec
cmp
test
jmp
cmpsl
nop
lahf
arpl
push
jle
je
lea
stc
loope
sub
jnp
outsl
xchg
mov
addb
add
cmp
rcll
mov
aaa
push
outsb
add
jg
pop
xor
scas
out
aas
ret
gs
cmp
cs
mov
loop
xor
lods
leave
pushf
mov
mov
fcomps
or
push
sahf
sahf
xor
mov
cmp
sbb
scas
mov
sahf
xchg
pop
xchg
and
dec
mov
ret
or
adc
repnz
sbb
in
cmp
mov
jg
jmp
cmpsb
push
repnz
push
cwtl
pop
leave
sti
dec
xchg
sub
xchg
xchg
fdivrs
mov
mov
pusha
xor
mov
jo
fisttps
pop
loopne
dec
in
add
jne
add
in
lcall
push
push
and
movsl
fistpll
cld
pop
and
push
adc
lahf
dec
push
sbb
sbb
test
mov
mov
sub
cmp
cld
or
cmc
add
jb
pop
mov
adc
mov
mov
sti
out
or
and
xchg
jmp
jp
insl
xchg
sahf
add
adc
mov
cmp
push
dec
adc
pop
xchg
xchg
data16
int3
out
insb
cmp
shlb
jl
pop
push
sub
out
mull
adc
mov
xchg
sti
stos
or
push
stc
sub
mov
insl
shlb
iret
aas
lods
aam
mov
add
sbb
loopne
push
test
in
inc
shl
mov
pushf
xchg
add
cli
jns
lds
xor
push
in
sahf
pushf
arpl
daa
fists
xor
mov
sub
adc
mov
js
dec
sarb
cmpxchg
and
bound
inc
or
paddw
mov
nop
jmp
and
scas
iret
pop
cmp
push
push
stos
jae
das
mov
scas
cmp
cmpsl
lock
test
jno
stos
pushf
pop
xchg
or
mov
ljmp
mov
adc
push
pop
hlt
in
mov
pushl
adc
push
fs
repnz
js
mov
repnz
and
cli
es
mov
xchg
mov
jge
rolb
jbe
xchg
pop
out
aam
mov
daa
jae
add
mov
push
adc
pop
push
add
inc
cld
xchg
push
push
pop
push
lcall
push
jmp
and
mov
cmp
roll
xor
mov
jae
dec
push
dec
sub
inc
push
lds
test
cmp
pop
mov
fadd
js
idiv
pusha
sbb
pop
mov
cmp
xor
cwtl
dec
inc
out
jo
test
push
dec
sub
mov
or
lret
jno,pn
shlb
xchg
xchg
pop
mov
xchg
inc
mov
xchg
mov
cld
movsb
pop
jnp
push
int3
pop
ret
lcall
mulb
stos
xor
inc
jg
xor
nop
test
cmpl
mov
and
and
dec
cwtl
das
jecxz
push
mov
dec
lods
mov
or
cmpsb
sbb
fdivrs
cmp
lret
xor
ss
sti
and
out
adc
das
push
out
dec
aas
movhps
jo
leave
cmp
lcall
or
lahf
push
nop
sbb
inc
stos
sub
adc
aam
or
add
and
aad
jo
pop
fmuls
loope
xchg
nop
stos
in
push
das
adc
in
das
insl
jecxz
fsubs
cs
lods
cltd
inc
jp
xor
pop
pop
push
adc
mov
sub
pop
pop
xchg
mov
pop
cmc
aam
fwait
aad
xchg
inc
mov
push
fcoml
dec
das
xor
in
pop
mov
lds
daa
in
stc
and
fimuls
daa
scas
pop
icebp
dec
mov
cs
sub
push
xchg
mov
xchg
jmp
es
fucom
jg
adc
cmp
das
xchg
sarb
movsl
pop
mov
xchg
stos
push
rclb
ret
dec
inc
rorb
repz
scas
popf
inc
push
adcl
add
outsl
mov
dec
mov
clc
mov
sub
jle
int3
or
lods
cltd
xor
inc
mov
repnz
cmp
stc
cmc
mov
or
mov
push
jle
in
pop
xchg
aad
fnstsw
dec
jmp
adc
push
mov
adc
imul
int
out
mov
and
mov
call
ja
ss
jae
sbb
dec
notl
add
jne
test
mov
sub
movsb
jl
out
sub
hlt
outsb
add
pop
cmp
lods
dec
aaa
sbb
mov
jp
mov
in
out
pop
mov
pop
js
sub
or
add
xchg
pop
pop
jge
push
mov
inc
lock
jecxz
and
mov
and
adc
mov
movsl
sub
cmc
mov
mov
cmpsl
fs
inc
or
jmp
jae
inc
inc
jo
adc
adc
push
cmp
xchg
vcvtps2pd
andl
ret
adc
cmp
xchg
fmuls
sub
movsb
notl
hlt
sbb
insb
orb
jl
and
mov
flds
jns
xor
or
cmpsl
pop
andb
loopne
in
sub
xorl
mov
cmc
mov
cmp
inc
pushf
sahf
fwait
or
add
and
xchg
add
push
imul
mov
jecxz
mov
lods
pushf
inc
lcall
ficompl
nop
fisubl
jge
cmp
adc
jl
sbb
cli
dec
sbb
push
stos
jecxz
push
outsl
xchg
cmp
popf
out
or
push
jl
cmp
jle
mov
addr16
jns
xchg
ja
jle
cmp
or
rolb
mov
les
cmpsb
insl
jae
pop
mov
mov
push
sbb
mov
pop
mov
jmp
loop
or
or
pop
push
jno
cmp
testl
repnz
cltd
add
test
sbb
add
lea
aas
sub
xchg
inc
xor
movsl
in
loopne
cwtl
fistpl
xor
cmp
lahf
add
fdivr
mov
int3
out
outsl
pop
and
stos
mov
in
xor
push
push
jmp
mov
dec
xchg
jge
cmp
lods
dec
pop
mov
xchg
sti
inc
mov
stos
sub
jnp
inc
mov
inc
ret
mov
int3
jo
shl
imul
xchg
mov
loope
iret
loopne
std
add
push
dec
loope
adc
js
lret
imul
and
inc
sbb
xchg
roll
in
mov
idivb
or
jnp
push
cmp
movb
mov
jle
fstl
sub
pusha
movsl
inc
lock
pop
sbb
repz
imul
rolb
cmpsb
push
or
pcmpgtd
imul
movsb
xchg
mov
cwtl
add
xchg
rcl
sarl
aam
push
pop
adc
adc
out
xor
add
mov
or
loop
into
jne
fs
jnp
jge
mov
or
mov
lods
xor
enter
jmp
mov
movsb
fmul
into
pop
adc
xchg
cmp
into
or
xor
jge
sbb
cld
add
addb
or
jl
into
xchg
clc
cld
clc
lea
subb
mov
add
inc
pop
push
mov
nop
in
inc
xlat
out
mov
insl
push
hlt
aad
cmp
mov
sbb
shll
mov
int3
or
mov
xchg
int3
sbb
lcall
bswap
in
add
test
sub
xchg
dec
mov
mov
sbb
les
jge
in
cwtl
ret
pop
hlt
mov
iret
ss
lcall
ret
outsl
pop
psraw
add
adc
mov
mov
cs
enter
mov
in
dec
xchg
pop
jecxz
or
pop
mov
decb
add
shrl
xor
jb
mov
out
shl
push
push
cwtl
mov
mov
mov
cmc
testl
shrl
pop
jecxz
mov
jecxz
mov
xchg
out
shl
stos
leave
aaa
ss
fwait
ret
and
xor
test
pop
addr16
das
lea
lcall
or
cmp
push
inc
push
cwtl
stc
push
inc
mov
pop
push
mov
mov
inc
subb
shufps
in
mov
adc
fsubrl
dec
or
xlat
arpl
rorb
cmp
popa
int
sti
mov
imul
inc
test
adcl
push
enter
push
pop
cmc
mov
push
pop
insl
int
shl
std
mov
xor
popa
and
or
mov
aam
sub
push
in
mov
jb
cmp
in
pop
sub
xchg
fnstenv
and
fidivrl
popa
sahf
rcll
fimuls
push
add
cmpsl
mov
add
popf
out
push
xor
push
bound
nop
imul
leave
xor
xchg
rol
out
add
inc
enter
mov
cmp
mov
inc
loope
fwait
call
addr16
cmp
aas
testl
cmp
packuswb
and
in
mov
adc
movsl
sbb
lret
aam
lods
sub
xchg
es
lea
lret
xor
cmpsb
mov
mov
testb
shrd
cwtl
xchg
push
popf
stc
jp
fiaddl
popl
push
xchg
xor
jmp
bound
ret
xlat
ja
out
cmpsl
sub
fdivl
cmp
je
inc
dec
adc
mov
jno
cmp
popf
pop
popa
test
xor
popa
jge
arpl
aam
notl
ja
jb
insb
flds
out
repnz
ljmp
cltd
sub
rcrb
jnp
ret
mov
popa
arpl
aaa
scas
or
jge
cmp
push
pop
push
add
sub
add
cmpsl
insb
xor
or
ds
xorl
xor
and
rclb
push
jae
pop
inc
rol
andb
jp
jo
xchg
lcall
lods
jp
and
mov
pop
int3
bound
jge
xchg
jle
rorb
nop
mov
mov
jg
jb
jo
or
repz
mov
xchg
jo
mov
fdivs
add
dec
inc
addb
movsl
adc
into
inc
out
out
int
sub
int
xorb
sbb
inc
pop
dec
jmp
mov
ret
cli
mov
add
mov
ljmp
dec
jp
lods
add
int
pushf
xchg
mov
fs
testb
loop
pop
pop
fwait
scas
enter
adc
dec
or
mov
mov
insb
cs
daa
dec
cmp
adc
jo
xor
cmp
flds
jno
fnstenv
cmp
lds
cld
sahf
movsb
cmp
enter
lahf
mov
pushf
xchg
jle
loop
sub
jmp
jp
data16
mov
mov
scas
xchg
mov
mov
insl
sbb
sub
xchg
inc
clc
pop
mov
jg
inc
mov
jne
add
pinsrw
jle
adc
shrb
adc
sahf
es
mov
sub
sbb
ficompl
fisttpll
cwtl
jns
popl
mov
pop
hlt
out
fisubrs
xchg
dec
lret
lcall
popa
mov
cmp
push
inc
dec
cli
gs
les
mov
ss
packuswb
mov
xchg
loope
mov
dec
jne
cmpl
inc
sbb
cmpsb
aaa
and
in
jno
sub
xor
push
daa
movsl
xchg
xchg
imul
xchg
popa
in
mov
mov
jnp
test
pop
sarl
inc
fdiv
loope
inc
fldcw
rclb
aad
inc
push
mov
cmp
enter
sti
mov
in
imul
out
shll
mov
aas
xchg
xchg
xor
ljmp
enter
inc
aad
stos
adc
jle
push
sub
sar
jae
jecxz
fld
sti
jmp
inc
lds
push
cmpsl
aam
movsl
iret
xlat
jmp
push
mov
jbe
sub
fisubs
repz
push
mov
lea
sti
js
adc
push
push
mov
jnp
pop
xchg
lret
in
and
mov
mov
stos
dec
pop
outsl
out
ja
lods
push
add
mov
mov
out
pusha
ficomps
divl
sarl
sti
pop
in
iret
mov
dec
std
incl
xor
adc
jnp
xor
cli
insl
inc
cmp
push
xchg
mov
aaa
mov
pushf
dec
cwtl
push
je
dec
outsb
arpl
jns
ss
lret
and
push
push
mov
aam
add
sbb
shl
add
subb
mov
jmp
cwtl
jae
fsubrs
mov
fs
scas
jmp
xchg
in
push
mov
test
clc
pop
repz
test
das
adcl
out
cmp
shrb
inc
push
inc
xlat
mov
add
fs
fsubrs
and
rcrl
es
push
pop
xor
fsubr
sbb
mov
movsw
shrl
dec
lods
das
mov
aaa
fs
insl
add
push
add
jno
test
push
pop
aam
add
add
inc
push
fstpl
out
push
stc
insb
test
int
test
inc
pop
jbe
and
and
aad
neg
dec
and
mov
jnp
out
xchg
bswap
and
mov
or
xchg
ljmp
into
sub
ja
fisubrl
push
pusha
pop
mov
sub
mov
add
decb
ret
test
xchg
cmp
cmp
mov
mov
pop
add
mov
sbbl
sarl
hlt
and
inc
stc
pop
push
inc
inc
push
jno
or
or
lods
out
popf
or
sar
sbb
loop
sbb
insl
ret
dec
loop
pop
pushf
pusha
xchg
jg
js
movsb
ljmp
test
bound
and
mov
fbld
xchg
jp
ljmp
mov
and
loop
fnstenv
fildll
pusha
mov
pop
mov
cmovae
pop
inc
pop
ret
sti
mov
in
sub
adc
push
lock
popf
and
jbe
shlb
std
mov
je
cmp
bound
pop
mov
mov
adc
popf
int
sbb
jmp
out
pushf
fdivs
loopne
jmp
mov
cld
dec
push
cmpsl
fsts
popf
pop
inc
addr16
shl
pop
push
adc
loope
jns
cmp
add
rclb
cmp
out
xchg
xor
mov
insb
mov
sub
mov
les
lock
push
pop
bound
adc
cmpsl
jge
arpl
sbbl
rorb
mov
jmp
clc
test
adc
cmpsb
je
pop
fcoml
jge
jbe
add
xor
pop
mov
push
ds
dec
mov
lahf
pop
shrl
imul
stos
push
sub
cmp
jb
pop
jl
ss
mov
lods
jnp
add
fmull
fisubs
lea
cmp
into
mov
push
mov
popa
dec
int3
push
popa
add
jle
fs
sub
in
es
testb
pushf
dec
scas
inc
daa
push
fcomps
rorl
push
cmp
and
cmpl
jno
inc
mov
jnp
repnz
daa
mov
shlb
sti
mov
out
inc
dec
mov
movsb
pop
jne
pop
cs
andb
es
aam
pop
pop
mov
fidivrs
push
dec
ja
cmpsb
pusha
jp
loopne
scas
and
ss
lea
push
divb
push
push
add
in
andl
dec
fistps
push
mov
mov
dec
adc
filds
push
inc
dec
jb
mov
adcb
cmp
inc
jl
lods
sub
xchg
mov
call
push
mov
test
cmpsb
pop
int
testl
sbb
mov
lods
jg
xchg
rcll
sbbb
ret
cmp
jecxz
adc
addr16
dec
sbb
sub
add
dec
mov
mov
mov
xor
or
daa
cs
sbbb
les
cltd
mov
inc
xor
sub
dec
mov
inc
or
push
mov
pop
inc
movsb
pop
imul
mov
mov
mov
inc
sbb
lretw
inc
sbb
cmpsb
jo
mov
xchg
inc
adc
lcall
enter
cmp
ds
mov
mov
mov
loope
mov
xchg
mov
cmc
xor
adc
xchg
push
aas
into
adc
sub
clc
mov
and
lret
add
push
adc
cmc
aaa
pop
jle
mov
xchg
mov
mov
mov
fnsave
dec
out
inc
jo
test
mov
outsb
fsubp
mov
push
or
push
jbe
nop
mov
mov
push
fists
shr
push
mov
dec
mov
add
nop
and
outsb
xlat
insb
push
fwait
adc
mov
xor
fmuls
nop
les
pop
jnp
sub
arpl
push
mov
lods
xchg
andl
or
inc
mov
scas
push
jecxz
jbe
and
inc
outsb
fcoml
cmp
xchg
xchg
in
sti
inc
xchg
cmpsb
pop
or
out
ss
and
sub
or
or
rcrb
pop
scas
pop
idivl
orb
jns
insb
loopne
xor
mov
sahf
call
push
and
subl
icebp
dec
pop
fbstp
arpl
popf
sahf
lods
mov
mov
movl
jecxz
xor
out
xlat
mov
add
and
js
xchg
and
adc
ret
mov
jns
push
insl
or
push
mov
pop
pop
popa
xor
mov
or
aam
aam
jae
aam
shll
dec
mov
mov
filds
or
inc
inc
sub
int
xchg
adc
and
repz
iret
mov
xchg
out
mov
pop
daa
pop
mov
xor
call
adc
sbb
test
xor
xorl
push
data16
ret
push
stos
sarl
dec
or
rol
rcll
fisttpll
pop
pop
cmp
clc
frstor
xchg
andl
dec
ret
jmp
jl
jo
xchg
pop
xor
lret
or
rorb
inc
pop
fld
adc
rcrl
arpl
adc
pop
cmp
lret
adc
jae
sub
push
dec
adc
test
push
mov
pop
or
jbe
mov
jg
adcl
jp
sub
lret
cmp
mov
pop
sub
mov
mov
xor
imul
mov
push
arpl
icebp
fwait
cli
mov
xchg
pusha
adcl
fnstcw
xchg
pop
pop
mov
stos
pop
add
cli
jno
mov
ja
xor
sbb
dec
repnz
adc
sbb
ror
sahf
xor
or
sub
aaa
inc
orl
ret
repz
in
inc
dec
jecxz
jbe
push
pop
and
sahf
outsb
jg
jle
loope
xchg
pop
jno
incb
mov
pop
in
sub
adc
adc
lods
movsb
jb
inc
cltd
push
mov
sbb
lods
sub
adc
cmpsl
out
in
mov
inc
enter
pop
jg
lret
jns
pop
fmull
lahf
pop
mov
arpl
xlat
mov
pop
fnstcw
aas
jl
shrl
xor
into
lods
jg
push
shrl
clc
xor
inc
mov
lods
mov
fstl
sbb
jecxz
xor
sub
outsb
inc
or
pop
add
xor
jecxz
or
push
inc
jne,pn
int
popa
jmp
and
negb
lret
mov
repnz
xor
mov
scas
scas
daa
xor
repnz
repnz
pop
shlb
out
xor
mov
js
xor
rep
in
mov
in
add
popa
aad
loopne
bound
das
sub
jnp
pop
push
push
pop
xchg
rcrb
aad
insl
cmp
cmp
fstpt
or
fwait
and
mov
enter
and
ret
cmp
lds
mov
lret
mov
adc
dec
lock
adc
xchg
pop
xchg
push
lret
inc
insb
adc
jg
nop
call
inc
sbb
sbbb
inc
push
pop
push
add
test
jno
mov
sbb
xor
lret
mov
sti
shrl
xchg
add
cmp
xchg
psubb
lds
ror
nop
add
rorl
int
cmp
adc
aas
fs
sub
mov
repz
loopne
dec
test
dec
mov
and
stos
or
jns
xchg
push
std
mov
push
decl
dec
jb
mov
push
mov
insb
clc
pop
xor
call
dec
xchg
mov
andl
sub
scas
push
jecxz
sub
sahf
dec
xor
ror
dec
sbb
pop
negl
jp
sub
inc
test
lret
or
mov
incb
mov
adc
pop
and
aam
in
dec
loope
nop
xor
repnz
mov
push
xor
in
xor
imul
inc
in
iret
in
insl
cmp
lret
cli
movsl
cmpl
pop
xchg
ret
lods
dec
movsl
lahf
lret
push
sbb
jne
and
cs
jecxz
cmp
push
mov
jb
adcl
call
sbb
lcall
sbbb
dec
sbb
inc
mov
in
ss
and
cltd
stc
pop
fiadds
in
mov
rep
cmpsb
bnd
mov
iret
dec
rorl
push
nop
jne
cmp
arpl
mov
dec
enter
inc
sbbb
in
push
push
xchg
roll
test
mov
push
imul
adc
mov
add
xor
xchg
push
dec
int
jo
inc
add
jmp
addr16
inc
loopne
pop
leave
outsb
mov
ljmp
jl
cs
clc
cvtpi2ps
cltd
cmpsb
arpl
cli
xchg
icebp
push
cmpsl
loope
jns
fwait
add
ljmp
shlb
mov
mov
insl
enter
mov
push
pop
cmp
mov
jae
push
in
mov
sub
int
in
mov
dec
jge
call
daa
mov
mov
out
dec
cwtl
inc
lret
ret
pop
jae
push
mov
outsl
sti
imul
mov
mov
ret
inc
xorb
xchg
negl
lods
cmpl
push
push
stos
push
int
sub
dec
call
pop
xor
jbe
dec
sbb
and
sbbb
dec
fimuls
mov
jmp
stc
or
xor
xor
movl
cltd
inc
arpl
int
add
aaa
cmp
loope
jecxz
xor
cld
dec
mov
pop
sub
xor
push
sbb
xchg
inc
mov
ljmp
popf
cmc
mov
add
jo
add
imul
in
jae
je
xor
ficomps
sbb
and
sahf
fwait
pop
popa
cmp
in
mov
add
nop
pop
dec
mov
test
ja
push
add
stc
sbb
es
mov
mov
mov
adc
mov
scas
es
xor
pop
lcall
adc
in
push
sbb
aas
or
xchg
clc
test
stc
mov
ret
and
stos
mov
inc
sbb
mov
paddusb
rcrb
hlt
es
lds
enter
xchg
loopne
sbb
sbb
pop
push
mov
arpl
scas
xor
call
cmp
adcl
insb
pop
xlat
jne
jmp
dec
push
mov
cli
adc
lahf
mov
std
pop
loopne
mov
int
fwait
enter
outsb
mov
ljmp
add
push
mov
push
sbb
out
bound
adc
xchg
or
dec
lret
lods
push
inc
mov
leave
push
xor
pushf
sub
pop
das
arpl
inc
adc
rorl
sbb
out
loopne
jl
lahf
ret
xchg
les
add
inc
cmp
mov
mull
mov
add
inc
sbb
inc
out
xchg
lcall
sbb
cmp
in
imulb
hlt
sub
fwait
sub
notl
jae
scas
inc
aad
fs
sbbl
cmp
je
add
shll
shlb
sub
jmp
int3
je
enter
cmpsl
jl
pop
test
push
ret
xchg
and
sub
pop
outsb
inc
fldt
fcomi
sbbb
add
outsl
fs
dec
sub
pop
push
push
mov
movsl
loopne
gs
sbb
dec
and
aam
mov
mov
jmp
and
xchg
mov
int3
add
jp
xchg
xchg
std
push
or
and
arpl
mov
subl
in
add
into
mov
popf
sti
cmp
lds
out
es
xchg
insl
add
push
cltd
pop
add
stos
std
cmpsl
jne
xchg
push
idivb
cld
pop
mov
jbe
call
dec
lea
cmp
aad
jns
pop
pop
call
enter
pop
push
inc
jae
cwtl
and
pop
jb
mov
jo
push
xchg
out
pop
int
out
adc
repnz
fsubrl
push
loopne
xchg
out
xchg
daa
xchg
lea
fstps
and
in
inc
pusha
stos
rclb
pop
shlb
adc
and
in
xchg
sbb
out
sbb
jle
jo
test
add
lcall
sub
sti
dec
adc
std
push
xchg
xchg
jge
faddl
add
or
mov
call
insb
pop
or
jb
and
inc
push
out
jne
js
sbb
icebp
outsl
jge
lds
mov
mov
or
mov
xchg
dec
sub
sub
dec
xor
mov
lea
je
mov
or
mov
out
ss
or
dec
jbe
fsub
int
outsl
jmp
sbb
jle
lret
xchg
xor
xchg
fimuls
jbe
push
jns
loop
mov
enter
cmp
movsl
cmp
cmpsb
pushf
adc
scas
mov
aad
dec
inc
popa
ds
dec
outsb
sbb
dec
insl
mov
jecxz
mov
rcrb
sbb
push
hlt
lcall
jne
push
or
in
add
pop
mov
fildl
subl
dec
test
lock
lret
fmuls
dec
mov
shr
fisubs
pop
and
cs
cs
pop
pop
orl
call
shlb
inc
push
fildll
loope
rclb
insl
icebp
scas
loop
pop
pop
pop
movsl
ja
push
aam
mov
add
sub
fdivr
mul
jb
cwtl
out
jl
xor
push
fimuls
adc
ficoml
pop
test
sub
stos
imul
inc
adc
loopne
sub
ret
mov
dec
out
dec
fstpt
xchg
push
aad
sahf
repnz
stc
cmc
xchg
add
push
aam
aam
mov
cmpsl
fldt
mov
cwtl
xchg
push
mov
movsb
lea
addw
aaa
cs
decb
cltd
xchg
stos
les
hlt
dec
pushf
loop
pusha
and
mov
jle
jbe
pop
xchg
xchg
cmp
icebp
rorb
mov
add
push
lret
dec
int
sahf
js
dec
enter
xor
cmp
jo
out
mov
insl
sbb
imul
incl
xor
repnz
lods
sub
jecxz
out
sub
cmc
cmp
ret
daa
in
push
je,pn
outsb
mov
sbb
lahf
cli
fs
mov
or
xorb
cmovae
mov
mull
xchg
sub
pop
ret
mov
ss
push
dec
add
sbb
pop
cld
jne
ret
dec
push
lods
or
push
jno
mov
scas
or
push
xchg
mov
cmp
sbb
sarb
imul
out
sub
fdivrl
insl
cmc
cli
inc
xchg
ror
pop
push
mov
repnz
stc
cmp
mov
aaa
or
sub
add
pop
jl,pt
mov
jecxz
pop
xchg
jg
jb
lret
dec
popf
or
lock
fwait
test
or
in
cmp
fistpl
scas
sti
fiaddl
fwait
outsl
popa
jb
dec
jp
xchg
mov
in
ja
adc
test
jae
dec
jb
cmp
shlb
cwtl
insb
leave
jno
sarb
loope
sub
leave
inc
shrb
cmp
sub
xabort
push
add
pushf
mov
es
call
push
das
int
loope
jae
adc
imul
out
xchg
in
int
and
lahf
popf
sti
test
mov
push
add
push
pop
push
testl
pop
or
popf
jo
insb
or
into
aas
aad
je
aad
inc
and
ljmp
andl
push
dec
cli
lock
adc
arpl
jne
sbb
pop
lods
pop
daa
adc
lds
scas
xchg
loope
push
fnsave
aad
push
sbb
cs
lock
fisubrl
int
push
mov
add
movl
out
ss
inc
and
out
cmpsl
mov
xchg
pop
adc
cld
push
add
mov
jne
cld
das
scas
jle
je
sbb
mov
mov
pop
fidivl
add
sbb
inc
and
js
push
sub
mov
jg
aas
jg
in
xor
add
dec
dec
cmpsb
push
xchg
add
jmp
ficoms
adc
push
popa
mov
loopne
pop
stos
xchg
jno
dec
scas
push
xor
cli
sbb
mov
push
lea
jge
xchg
mov
popf
lods
push
dec
mov
out
sub
stos
mov
cmp
and
lock
add
pop
jge
fwait
test
ds
jg
pop
lahf
dec
out
inc
daa
sti
add
clc
jg
std
pop
xor
mov
jbe
dec
js
xor
repz
push
mov
ret
xorb
mov
scas
cmpsl
arpl
inc
cld
mov
or
xor
imul
push
mov
arpl
subl
gs
jl
cld
ds
dec
fiaddl
cmp
mov
mov
mov
dec
inc
pusha
push
push
fcom
push
xor
cwtl
sub
add
adc
dec
orb
bound
dec
or
adc
cmp
add
scas
push
or
push
loop
jae
add
addl
mov
rcrl
scas
xchg
test
pop
ret
adc
push
and
insl
xor
scas
sub
dec
and
pop
push
repz
test
add
in
enter
test
lcall
out
jmp
push
jg
adc
in
jo
dec
sbb
ja
sbb
jmp
jnp
pushf
daa
iret
inc
pusha
cmp
jbe
mov
sbb
bnd
mov
cmp
popa
sbb
arpl
aaa
andl
push
sbb
test
xor
and
repnz
nop
xchg
cmp
stc
mov
cmpsb
fisttpll
addr16
and
cltd
lret
sbb
int3
adc
or
or
xor
pop
pop
jo
adc
inc
ds
das
jb
cmp
push
ficoms
aam
jle
ret
sbb
xchg
ret
cs
xchg
test
add
leave
jb
mov
jo
push
mov
popa
pop
mov
lret
or
pop
pop
inc
sbb
pop
mov
xor
outsb
out
mov
pop
fstl
fucomp
rcll
stos
jbe
jns
test
cli
cltd
jmp
and
jmp
ja
push
lock
push
jecxz
jle
mov
daa
sbb
scas
and
inc
not
call
out
in
mov
cltd
into
push
jb
rcrl
mov
pop
clc
mov
test
add
imul
in
mov
aam
enter
sbb
pop
mov
inc
je
nop
jne
das
pop
sbb
fimull
push
pop
mov
cmp
adc
mov
jp
cltd
imul
sqrtps
sbb
add
jbe
out
sub
inc
aam
jne
sbb
pop
ds
or
dec
not
jns
cmp
dec
into
pop
or
fidivrs
xor
xchg
ja
inc
das
rcl
lret
mov
adc
aas
add
es
lret
roll
mov
clc
testb
loopne
cmc
out
clc
adc
cmp
inc
cltd
and
cmp
lods
sub
ret
xchg
mov
jmp
popa
aad
ss
cmp
aaa
notb
mov
movlps
js
add
sub
addr16
dec
out
mov
xchg
add
jno
lods
imul
push
lahf
fwait
cli
imul
sar
shll
sub
push
and
push
or
xchg
dec
pop
jle
andb
repz
jae
sbb
inc
insl
mul
cld
and
inc
inc
sahf
stos
sub
mov
loop
xchg
adc
pop
leave
or
mov
mov
aaa
sahf
je
mov
arpl
clc
icebp
adc
mov
popf
jl
aad
add
ljmp
dec
rcr
leave
pop
dec
inc
in
jb
dec
xor
add
dec
and
pop
jo
adc
pop
mov
fildll
mov
sbb
inc
cmp
arpl
js
xchg
clc
call
jp
push
in
shrl
out
push
nop
add
xor
jnp
sub
mov
cmp
inc
repnz
xchg
lods
loop
xchg
shlb
in
ficoml
insl
ss
xchg
add
jl
sti
cmp
push
out
cmp
das
xor
in
lods
add
sub
in
cmpsl
in
call
sub
jns
jecxz,pt
insb
aas
add
cltd
xor
push
push
and
push
xlat
sub
insb
jnp
sbb
cmp
sbb
shll
xchg
add
dec
and
cld
mov
mov
in
or
call
lock
dec
pop
call
sbb
xchg
cmp
cld
ds
outsb
push
sub
ret
inc
xchg
fcoml
fimuls
test
insb
sar
mov
mov
mov
mov
push
test
push
mov
inc
and
fnsave
jp
jne
lods
xor
cmp
lods
mov
lcall
mov
sbb
stc
or
xor
mov
in
cwtl
fldenv
sbb
test
loop
rclb
mov
adc
rolb
pop
pop
arpl
jne
push
xor
nop
pop
sti
nop
mov
fcoml
cmp
addb
cltd
js
cs
and
xor
sub
ret
mov
in
pop
iret
lahf
push
pop
repnz
xchg
push
inc
lods
sti
inc
adc
aad
cmc
xchg
push
sbb
mov
push
or
mov
popa
dec
mov
xchg
pop
push
in
mov
mov
push
mov
jnp
int3
rcr
jns
shlb
inc
inc
or
mov
pop
aad
sub
sarl
add
adc
dec
dec
dec
pop
in
push
stc
pushf
push
lcall
sub
pop
rclb
cmpsl
jns
sub
sbb
mov
lret
enter
ds
xchg
xchg
add
call
mov
pop
fisttpl
and
sbb
lds
cwtl
insb
enter
jmp
or
jnp
cli
cmp
sti
sbb
mov
jne
daa
stos
jns
int
fadds
leave
pop
setle
sub
pushf
movsb
push
pop
xchg
xor
cmpsb
add
fisubrs
enter
and
push
mov
lds
or
pop
mov
std
and
mov
test
popl
add
sbb
scas
push
in
cmp
dec
cmp
mov
into
xchg
dec
dec
inc
pusha
in
mov
pop
dec
mov
or
push
push
aad
popf
js
dec
movsb
mov
mov
inc
inc
push
sub
and
inc
sub
cwtl
and
std
or
pop
inc
adc
popa
dec
fidivrl
aaa
rolb
dec
push
or
ds
call
cmc
shl
stos
and
mov
jns
in
pop
xor
add
pop
mov
jno
nop
xor
mov
arpl
cmp
xor
dec
cmp
repnz
pop
mov
mov
nop
cmp
lods
aam
push
inc
xchg
ss
and
pop
or
pusha
pop
mov
sbb
xchg
xlat
rcl
mov
sbb
xor
in
mov
jno
out
out
test
cmc
adc
cwtl
sub
push
push
fbld
xchg
jl
add
cmc
incb
or
dec
cmp
or
addr16
pop
rcr
xorb
call
push
orl
repnz
mov
pushf
fnstsw
cmp
dec
call
iret
xor
outsl
jns
mov
scas
xchg
sub
inc
loopne
insb
push
push
enter
cli
jno
pop
cmp
test
clc
or
je
xor
test
pop
scas
sub
adc
jo
mov
int
lcall
fdivrl
div
or
imul
fldt
dec
pusha
lea
jnp
add
lock
push
faddl
enter
mov
jmp
sahf
sbb
sub
js
inc
push
mov
dec
cmpb
out
pop
adc
mov
lahf
gs
pushl
test
insb
gs
xchg
lock
push
popa
pop
mov
lods
cmp
orb
lods
popf
cld
test
imull
adc
push
pop
ja
mov
ret
and
mov
insl
xchg
ds
sbb
sub
pushf
outsb
je
test
sbb
adc
push
fbstp
fcomps
bound
es
pop
popf
arpl
ret
ljmp
ficompl
repz
fistpll
data16
xchg
pop
fadds
sub
fcoml
lcall
test
push
sub
or
je
inc
or
and
mov
mov
fmuls
jl
std
nopl
mov
ret
add
pop
dec
fwait
cmpsl
outsb
push
enter
rcl
jo
int
hlt
cmpsb
dec
popa
call
inc
test
sub
mov
push
fcmovb
gs
and
dec
mov
and
in
pop
add
pop
enter
mov
aam
dec
enter
ret
fisubrs
into
sub
push
nop
lods
jo
add
cmp
notb
jae
jns
fs
rclb
mov
push
pop
mov
iret
xchg
add
lahf
aad
or
bnd
pop
pop
sub
jl
sahf
xchg
mov
mov
cmpsl
into
stos
call
inc
negb
mov
arpl
dec
repnz
jl
lahf
popf
jno
ljmp
add
or
xchg
sahf
inc
loope
sub
inc
dec
stc
push
sti
and
insl
or
out
sub
inc
add
test
popf
mov
ss
sbb
push
bound
repnz
pop
pop
mov
repz
int
dec
mov
push
imul
js
xor
inc
outsb
test
xorl
mov
or
mov
int
jnp
mov
popa
mov
sbb
lods
and
test
and
xor
rcl
nop
jb
xlat
xor
sub
into
lret
stos
pop
jbe
call
test
cmpsl
add
add
xchg
pushf
scas
in
outsb
mov
sbb
out
lret
mov
mov
add
mov
movsb
out
and
mov
xor
or
cmp
lods
in
into
test
mov
jmp
pop
fwait
pop
ffreep
lret
repnz
or
js
cmp
push
imul
and
jnp
addr16
push
xor
mov
cld
aam
icebp
or
test
icebp
xchg
mov
jge
mov
fs
outsl
mov
xchg
xor
push
sbb
push
cmp
or
add
mov
leave
push
test
imul
xchg
add
mov
cs
push
add
mov
mov
into
push
lods
xor
add
cs
je
sbbb
das
inc
push
addr16
jecxz
imul
sub
bound
in
jp
dec
or
jae
inc
cmp
mov
out
adc
out
in
cmp
add
adc
ret
dec
repnz
push
into
push
dec
outsl
sub
push
sbb
mov
push
or
insl
aad
test
bnd
push
jecxz
jg
rolb
xor
shrl
cmpsb
loope
mov
fmuls
imul
lds
icebp
aas
divl
inc
or
dec
push
out
outsl
mov
insl
fcomp
or
jnp
jnp
orb
adc
and
adc
sub
sbb
mov
cmc
xlat
lock
loopne
stos
sub
pop
loopne
jp
push
or
divl
push
das
pop
jl
adc
iret
stc
xlat
xchg
punpcklbw
xor
sbb
xchg
inc
push
add
pop
xor
jb
pop
insl
into
imul
xor
std
inc
scas
stos
stos
js
mov
mov
jecxz
fwait
cmp
cmpsl
pusha
mov
dec
fs
dec
call
pop
cmovne
imul
mov
xor
sub
out
in
ss
mov
xchg
xchg
bound
fldt
mov
jae
test
test
arpl
popf
push
or
popa
xor
lret
scas
cmc
inc
ret
ja
inc
movsl
jl
lea
xchg
sbbl
in
arpl
pop
cmp
pop
cmp
adc
xor
push
mov
mov
pushf
fisubs
adcl
pop
clc
cmp
or
push
fdivrl
jmp
push
jno
add
mov
sti
mov
addb
fldl
xor
mov
loopne
sub
test
daa
or
inc
movsb
inc
arpl
jb
cwtl
bound
je
add
pop
popf
scas
pop
mov
lock
arpl
cmp
in
and
push
adc
fs
aas
mov
push
xchg
dec
lret
fsub
or
push
mov
loop
fldt
cmp
out
add
sbb
int
mov
push
xor
ljmp
xor
mov
push
xchg
imul
inc
insl
sbb
xchg
cwtl
mov
and
ret
inc
orl
add
cmp
jle
pop
cmp
ficoms
fmull
or
sbb
pop
fistps
pop
shrl
sarl
and
lods
cmp
stos
pop
movsl
dec
aad
dec
outsb
shll
shll
repz
pusha
mov
mov
xor
lea
shrb
cmp
js
andl
aaa
sahf
out
orl
pop
jmp
mov
dec
and
sub
and
test
jns
imul
sahf
les
and
daa
nop
inc
mov
bound
inc
sbb
stc
push
cmpsb
mov
call
out
push
sbb
jbe
ljmp
outsb
mov
mov
pop
fmuls
mov
icebp
inc
inc
lods
ret
cltd
aam
inc
mov
daa
sbb
fisubs
popa
test
adc
pop
mov
push
ret
pop
scas
mov
into
std
cmp
xchg
xor
addl
shll
fs
jmp
icebp
or
inc
leave
imul
ss
pop
mov
in
pushf
mov
push
popf
fnstenv
sarl
mov
in
lret
xor
rep
xor
mov
pop
mov
mov
repnz
and
es
leave
rcrb
push
iret
xor
movsb
push
pop
adcb
jge
and
addr16
addl
jge
push
xchg
mov
enter
addb
push
jecxz
mov
lahf
jnp
or
pop
push
arpl
out
add
push
adc
pushf
mov
ret
daa
test
insl
out
lahf
dec
outsl
dec
shll
cmc
btr
pop
mov
sub
je
jmp
dec
cltd
sbb
push
out
mov
and
jl
xlat
add
mov
stos
push
xor
add
pop
test
lea
cmp
add
push
cmp
adc
ljmp
sahf
fcoml
shll
ss
inc
mulb
out
sbb
out
add
or
rolb
mov
imul
adc
mov
pop
lds
mov
icebp
add
ud1
push
jo
and
mov
les
iret
push
inc
cwtl
dec
out
loop
mov
jge
push
out
mov
jb
stos
test
out
popa
push
sbb
or
sub
push
imul
jno
jecxz
popa
and
jl
inc
jae
lret
lret
lea
xchg
jb
insb
outsl
lock
ficoml
push
scas
clc
mov
cwtl
push
in
mov
push
and
es
xchg
adc
mov
es
or
dec
sbb
setnp
repz
cmpsb
ljmp
jae
sbb
mov
mov
xor
cmpsl
mov
mov
sahf
mov
rclb
aaa
lea
dec
lock
imul
leave
shrl
jns
mov
cmp
inc
addr16
cmpsb
in
jnp
imull
lret
mov
push
fiaddl
pop
test
lods
cmpsb
push
lcall
pop
pop
mov
inc
out
gs
fldcw
repnz
lods
stos
or
movsl
out
rorb
cmp
out
xchg
cmpsb
in
int3
mov
mov
xchg
jge
ror
fwait
xchg
jne
push
in
or
mov
out
fstps
or
dec
out
sahf
xor
daa
sarl
sbb
adc
cmpsl
bnd
push
pop
notb
xor
pop
in
push
fdivp
adc
jne
out
xor
xor
and
dec
adc
pop
mov
or
testl
push
stc
push
mov
mov
aad
xor
mov
hlt
jp
pop
popf
push
jmp
scas
cs
test
mov
xlat
sti
xchg
push
fsubr
mov
mov
in
mov
xchg
xor
push
cmp
or
add
xchg
dec
bound
pop
push
xor
movsb
in
outsb
xor
shlb
pusha
imul
add
cmpsl
pop
push
sbb
mov
in
inc
jmp
dec
negb
push
jl
jbe
out
pop
les
rcll
orl
shll
add
iret
dec
fldt
pop
lret
adc
xchg
cmc
jp
inc
int
inc
popa
repnz
rcl
pop
inc
or
xchg
gs
lods
jae
cmp
jge
clc
dec
imul
pop
mov
out
xchg
jb
adc
sbb
add
arpl
bound
cmp
sub
dec
scas
sbb
orb
sub
sbb
push
sbb
push
dec
stc
push
btc
lds
push
jg
jge
in
sti
add
dec
cmp
pop
dec
xchg
ja
repz
and
loop
push
dec
inc
jecxz
mov
xor
fists
mov
xlat
rolb
and
cmp
cmpsl
mov
and
mov
mov
mov
adc
enter
addb
rol
add
mov
xchg
jp
je
icebp
jae
pusha
shll
adc
mov
cmc
fyl2xp1
add
add
cmp
cltd
ja
outsb
inc
pop
mov
out
sbb
arpl
int3
sbb
data16
aad
bound
mov
push
fstps
push
push
es
ja
xor
xor
add
push
xchg
mov
mov
and
mov
cmpsl
inc
pusha
mov
movsl
pop
xchg
jp
std
pop
and
pop
stc
push
push
addl
nop
cmpsl
mov
jmp
sub
xor
popf
inc
js
movsl
ljmp
mov
orb
dec
push
jp
cmp
fstpt
add
ficoms
mov
mov
test
stc
jnp
sub
imul
or
cmp
sarb
adc
adc
xchg
fisubs
push
test
and
inc
fnstenv
loop
push
mov
mov
pusha
inc
aad
or
pop
pop
jnp
fs
adc
call
cmp
xchg
adc
xchg
mov
mov
ljmp
jb
mov
ss
jg
outsl
ficompl
or
cwtl
dec
cs
inc
jb
sti
push
test
popf
aad
lods
lea
inc
in
lahf
mov
mov
jge
fstpl
and
pop
mov
fisubl
mov
cmp
test
mov
cmp
das
inc
sbb
out
xor
sub
imul
jmp
in
addr16
mov
xchg
jne
into
jnp
mov
lea
stos
mov
push
imul
push
clc
adc
pop
push
cmovs
mov
mov
add
xor
ljmp
insb
pop
fnstenv
icebp
dec
fcomip
js
call
scas
and
mov
xchg
mov
aas
push
je
adc
hlt
jbe
push
mov
sub
dec
dec
fadds
add
icebp
insl
scas
fldenv
mov
mov
fldt
les
xlat
pop
jns
sti
mov
movsl
mov
divl
aas
and
int3
cmpsl
mov
jns
popa
inc
data16
inc
mov
enter
in
loopne
scas
lods
dec
scas
sbb
push
cmp
shr
xchg
out
insb
popf
mov
xlat
sbb
outsb
fldt
outsl
sub
pop
fisubrl
js
pushf
test
in
aas
pop
stc
ficoml
adc
lret
loopne
in
mov
pop
mov
hlt
sbb
aaa
fildll
cwtl
cwtl
jnp
cli
pop
cli
pop
or
xlat
cli
pop
mov
lods
pusha
mov
dec
pop
xor
xor
mov
sbb
mov
repnz
mov
jno
pop
inc
cs
repz
sub
data16
sbb
or
int3
mov
daa
push
ds
mov
mov
sub
xor
mov
cmp
movsb
pop
jnp
inc
in
adc
add
or
jp
pop
adc
jge
jno
jp
push
mov
test
mov
push
mov
faddl
cmp
mov
cmpsb
mov
shr
mov
movsb
inc
cmp
push
ljmp
rorl
add
inc
mov
movsb
or
jmp
stc
and
sub
addb
call
cld
push
btl
mov
mov
ds
cmp
mov
adcb
int3
aad
hlt
addr16
test
xchg
push
adc
cmp
push
mov
lods
cmc
jns
fs
movsb
dec
daa
or
mov
jns
mov
add
pop
int3
pusha
cmc
repz
xor
in
jecxz
cli
xchg
inc
mov
insl
ljmp
stc
rclb
test
cmp
push
outsl
inc
jne
inc
lahf
mov
movsl
mov
xor
mov
lea
dec
xor
push
mov
add
out
pop
dec
add
hlt
sbbb
or
sbb
pop
jle
jmp
push
cwtl
pop
dec
mov
lock
stos
loope
push
jp
jl
push
mov
inc
nop
cmp
pop
xlat
aaa
lock
out
mov
mov
test
lods
mov
jns
push
add
cwtl
cltd
pop
jns
sar
and
and
not
xchg
test
sub
xchg
xchg
add
cmp
sub
lcall
dec
push
out
fstps
or
jge
mov
fwait
mov
repnz
cmp
mov
add
inc
add
ds
dec
in
loope
jb
jg
pop
sahf
test
pop
mov
jb
or
sarl
leave
mov
popa
add
xchg
mov
push
jne
mov
xchg
mov
mov
insl
mov
push
jmp
enter
negl
stos
jno
xchg
jno
jl
mov
dec
inc
push
mov
icebp
shlb
xchg
outsl
cli
adcb
inc
sub
sbb
sbb
push
mov
pop
lds
aas
enter
mov
add
or
shlb
cmp
jmp
mov
push
imul
cwtl
scas
xor
jecxz
fmull
test
test
lods
adc
pop
and
adcl
inc
sbb
scas
shrb
sub
notb
or
mov
mov
add
jmp
subb
cmc
and
xor
and
cmpsl
hlt
adc
mov
mov
xchg
clc
mov
jo
cmp
xor
sub
das
cmpsl
in
push
xchg
xchg
imul
cld
gs
mulb
pop
sub
orl
test
lahf
dec
icebp
clc
mov
adc
cltd
pusha
or
mov
cwtl
cmpsb
adc
mov
ds
xchg
cld
sahf
jne
movd
lret
adc
mov
loop
or
enter
inc
mov
xchg
lahf
hlt
xchg
ds
cmp
sub
mov
xchg
imulb
mov
fsubr
jae
popf
xor
dec
cmp
and
sahf
ret
push
add
pop
sub
or
dec
shl
outsb
push
dec
aad
fwait
mov
push
imul
jmp
xor
jo
mov
shrl
sahf
adc
jnp
pop
call
mov
sbb
aad
and
inc
adc
movl
pop
out
cwtl
fucomi
test
cmp
mov
xor
sub
mov
add
sti
cmp
dec
mov
arpl
aam
mov
fs
xchg
mov
bound
jae
cs
shll
sbb
scas
mov
dec
bound
test
mov
adc
andb
mov
int
sub
pop
xor
es
xchg
mov
sbb
mov
xchg
ficompl
sub
js
mov
inc
fadds
xchg
adc
dec
sub
push
jbe
popa
dec
out
sub
aam
pushf
xor
aas
sbb
mov
sbb
xor
pop
cmp
xchg
inc
and
rolb
and
xchg
mov
jge
ror
sbb
cmc
lods
dec
dec
outsb
mov
adc
cmp
jle
jg
sahf
imul
test
mov
lret
mov
lret
pop
sub
aaa
insb
outsb
ss
ret
mov
inc
mov
lea
dec
stos
jmp
and
mov
xor
lods
jo
jbe
adc
mov
pop
xchg
pop
iret
mov
fnstcw
ficoms
jbe
pusha
js
mov
mov
mov
aam
sbb
ds
and
and
add
les
push
icebp
jecxz
cmc
scas
les
fidivs
sti
pop
jg
lods
push
pop
mov
and
dec
test
cmp
add
cmp
scas
in
jbe
jge
pop
mov
loop
mov
arpl
add
xor
std
sahf
push
mov
loope
mov
add
in
out
dec
jg
jb
cmp
insb
ds
scas
or
cmp
jnp
fildl
inc
jo
push
fidivrl
jg
rolb
aas
daa
adc
loopne
sbb
dec
mov
jecxz
cld
inc
xor
data16
mov
xor
mov
es
addl
push
jae
stos
insb
in
leave
pop
inc
aad
pop
jo
addr16
test
add
pop
rclb
mov
aas
ds
std
xchg
cli
inc
adcb
andb
popa
fwait
pop
cmc
pop
xor
cld
or
xor
in
mov
clc
clc
or
test
in
stos
xchg
jl
xchg
cmp
add
sbb
inc
mov
add
mov
ret
add
mov
enter
push
rorl
xchg
and
add
pop
jl
mov
lds
js
xor
enter
pop
movsl
shll
mov
in
jae
push
cmpsl
inc
data16
cmp
into
mov
jge
roll
mov
add
and
dec
pop
insb
aaa
sbb
mov
in
pop
lods
fs
fwait
in
hlt
rcll
lods
movsl
das
mov
out
data16
sub
adc
xchg
sub
daa
inc
aaa
add
push
mov
scas
and
dec
mov
fldl
xchg
jae
mov
xchg
mov
ja
and
shrl
cmp
cltd
ljmp
repnz
jge
es
jae
das
adc
xor
outsl
rorb
push
mov
xorl
jne,pn
shlb
mov
out
sub
pop
cwtl
cmp
ja
imul
loop
sub
mov
mul
hlt
mov
sbb
fsubs
jecxz
sub
ret
pop
loope
js
lock
fwait
iret
pop
push
mov
out
in
cmpsl
mov
mov
lret
loopne
jne
xor
scas
sti
notb
sarb
inc
int3
mov
jbe
cmc
ljmp
cmp
sub
cltd
jb
out
adc
jg
dec
mov
mov
mov
jmp
repnz
cwtl
push
test
xchg
pop
push
lods
sbb
push
inc
and
inc
jno
pop
sub
push
insl
mov
hlt
jo
dec
sub
pushl
push
xorb
or
xchg
gs
jns
out
jg
mov
jnp
mov
push
insl
daa
xor
xchg
std
bound
push
repnz
popa
push
pop
and
andl
xchg
sbb
pushf
inc
jnp
sub
daa
stos
lahf
cmp
es
and
sti
loopne
cs
outsl
lret
fdivl
and
sub
aaa
lret
movsb
adc
cmp
sahf
in
call
fxch
rcr
sbb
and
jne
mov
je
cwtl
sbb
xor
adc
movsl
adc
loope
stos
jb
mov
je,pn
push
pop
dec
or
and
dec
xchg
leave
inc
hlt
cld
inc
and
movsl
repnz
pop
push
repnz
push
fadds
repnz
gs
or
or
push
shrl
mov
xchg
pop
sbb
stos
jne
sub
jnp
xlat
shrb
xchg
mov
mov
cmpl
sub
outsl
fdivrs
nop
rcrl
mov
dec
int
cmp
inc
ret
ds
loopne
test
mov
sbb
or
insl
adc
inc
stos
and
sbb
stos
adc
frstor
dec
in
push
or
shrb
scas
andb
jb
outsl
cmpsl
popf
adc
inc
sarb
xchg
and
call
push
pushf
mov
add
adc
inc
lock
jnp
cmc
outsl
out
inc
hlt
aad
iret
cmpsl
mov
jno
popf
adc
mov
stc
daa
xchg
push
or
movsb
xlat
and
jno
inc
sbb
in
push
out
jo
ds
fisubs
outsb
rcrb
jo
and
iret
inc
fdiv
cmpsl
test
aad
cmpsl
hlt
jmp
testb
iret
fwait
or
mov
push
fstp
and
xchg
pop
dec
mov
dec
xchg
in
mov
push
mov
mov
imul
add
pop
jp
push
or
cmpsl
xor
mov
mov
adc
sbb
xchg
inc
pusha
inc
adc
test
add
nop
pop
inc
test
fwait
cmpsl
pop
scas
neg
rcrb
adcb
mov
xor
mov
lds
cmp
inc
push
rclb
sarb
add
int
push
decl
aam
lahf
and
lea
fisubl
shll
push
scas
xchg
sar
adc
test
xchg
cwtl
ret
test
pop
xor
add
mov
loopne
push
jmp
push
cmp
shrb
cmc
insl
or
frstor
jp
xchg
cmp
pop
sbb
sub
xor
arpl
xor
les
sbb
adc
dec
cwtl
scas
rcl
aam
push
pop
mov
dec
sahf
nop
add
sbbb
imul
clc
xor
mov
mov
adc
mov
xchg
add
icebp
mov
jg
xchg
stos
out
out
mov
mov
ja
movsb
imul
and
enter
stos
mov
jns
push
ret
ret
jns
in
stos
xchg
or
aas
orl
hlt
sub
mov
jo
mov
adc
test
rorb
push
adc
lret
xchg
mov
mov
xor
or
imul
sub
adc
out
fs
pop
icebp
lahf
addr16
stc
and
inc
dec
aam
mov
mov
int3
jmp
sbb
jno
cmpsb
fadds
iret
xor
adc
fistps
inc
data16
fmull
out
push
push
call
adc
xor
jne
inc
ret
and
ss
mov
sub
andb
or
cli
popf
push
ds
mov
fidivl
out
push
dec
sub
xchg
pusha
sub
cld
insl
dec
fnstenv
aad
xchg
or
mov
dec
into
aas
jmp
push
and
jbe
lahf
fs
xlat
rclb
imul
cmpsb
cld
lods
repnz
jne
push
mov
movsb
fdivl
inc
sub
or
call
inc
stos
std
sub
fildl
xchg
ficoml
sub
pop
mov
inc
xor
xchg
pop
stos
add
test
push
cmp
push
lods
sarb
inc
or
push
in
xor
cs
pop
cmp
add
int3
dec
je
sub
jnp
bound
dec
push
dec
sahf
sub
xchg
adc
fidivs
and
pop
movb
fstps
or
pushf
pushf
or
iret
cli
pop
test
and
fadds
cmp
icebp
dec
dec
cmp
cmp
movsl
lcall
imul
xchg
add
dec
lods
push
push
add
push
push
imul
sti
andl
xchg
dec
rep
pusha
fldt
or
pop
enter
mov
in
popf
repz
inc
jmp
ja
pushl
sbb
movsl
lods
jle
or
cmp
mov
sub
push
arpl
push
and
scas
repnz
ss
inc
lods
mov
lds
dec
je
and
jp
imul
jl
jo
push
outsl
dec
enter
fisttpll
loopne
test
dec
mov
push
daa
icebp
cmpsb
in
int3
add
sub
add
sub
imul
jne
or
add
loop
dec
jle
lahf
jne
stc
pop
inc
mov
mov
cmp
adc
xchg
ss
and
inc
dec
in
mov
push
bnd
dec
das
pushf
mov
mov
cmp
loope
xor
push
mov
jo
bound
cld
jne
jge
push
dec
cmp
adc
xchg
scas
gs
xchg
js
loope
movsl
idiv
mov
mov
cmpsl
xor
cld
jns
mov
add
push
or
outsb
inc
and
or
xor
popa
jmp
mov
xor
mov
les
xor
sbb
xlat
scas
sti
xchg
dec
lahf
dec
loop
dec
in
imul
mov
cmc
inc
lret
xchg
int
stos
cmp
xchg
outsb
scas
push
adc
cmp
xchg
inc
mov
adc
addb
pop
inc
pop
fldt
dec
mov
cwtl
push
xchg
rclb
mov
nop
cmp
enter
int3
clc
inc
divl
loop
jle
test
jae
sti
sbb
lds
xchg
cld
cld
sbb
clc
rolb
lods
xor
cmp
in
in
rcrl
xchg
mov
xor
les
popl
xor
cmp
in
mov
jmp
xor
push
jbe
or
dec
add
adc
adc
jle
clc
call
mov
and
repnz
scas
lea
xlat
sti
dec
loope
negl
sub
pop
mov
stos
inc
into
push
hlt
movsb
stos
cmpsl
and
fwait
rclb
lods
jns
or
std
or
fisttps
ja
je
and
add
and
cmp
cmp
pop
lea
test
xchg
mov
maskmovq
add
dec
jae
xor
jle
mov
sbb
add
or
fmull
sub
mov
hlt
xor
cwtl
dec
aas
cwtl
sub
push
dec
jns
roll
sbb
dec
in
sub
int3
xor
negb
jbe
mov
xchg
movsb
ret
fistpll
mov
fwait
mov
jne
js
int
sbb
out
int
jnp
int3
jnp
jne
mov
mov
adc
sbb
jbe
push
lahf
data16
mov
jo
mov
mov
cmp
clc
lret
jle
andb
xchg
stos
xchg
call
pop
xchg
push
inc
rorb
xlat
call
pushf
movsl
jg
jle
inc
push
sbb
or
mov
js
mul
out
test
pop
inc
fmulp
sub
mov
push
xlat
fsubrs
andb
cmpsb
cmp
sbb
sahf
mov
mov
dec
rcrb
adc
loope
cmp
push
or
sbbl
or
movsl
xor
push
push
xlat
jge
lea
or
aad
adc
negb
stos
fdivs
cmpsl
sub
adc
adc
xchg
add
mov
or
xor
mov
xor
sub
cli
fwait
mov
xchg
test
add
lods
fucomip
subl
ja
dec
jge
shl
push
aaa
imul
out
sub
lcall
xchg
sahf
arpl
sahf
ffreep
sbb
ret
mov
inc
insl
aad
iret
sti
add
cmp
repz
scas
push
sub
cmp
dec
cmp
push
mov
xor
xchg
divb
mov
lods
mov
and
add
sub
bound
mov
rclb
dec
pop
bound
pop
int3
jp
fcoml
cltd
and
ror
push
outsl
mov
pushf
add
jmp
lock
movsl
fnsave
and
mov
mov
loop
aas
lret
jae
fst
fmulp
mov
jp
add
dec
movsb
cli
in
sbb
ljmp
add
push
in
movsb
outsb
sbb
loop
lahf
pop
xchg
leave
add
mov
add
mov
sar
adc
testb
popa
inc
insl
xor
es
adc
push
mov
leave
fmulp
add
in
sbb
data16
scas
xor
cmpsb
fxch
ljmp
cmc
pusha
xchg
mov
imul
mov
mov
cmpsl
ficompl
divb
gs
daa
scas
jb
inc
sub
sbb
push
inc
stos
jmp
xchg
rcl
and
xor
or
xchg
int
cmp
dec
jp
std
icebp
imul
mov
mov
xor
mov
js
sub
jne
jge
ret
sub
call
xor
push
add
or
push
pop
gs
daa
adc
xchg
add
daa
sub
sub
inc
fcmovu
mov
pop
xchg
mov
es
call
mov
push
mov
xchg
cmp
lret
aaa
xchg
fnstcw
js
stos
mov
dec
ds
dec
sub
gs
pop
jp
jns
cmp
sbb
xchg
mov
add
add
rcl
cmc
pop
mov
outsl
pop
fildl
repnz
ljmp
mov
push
cmp
xchg
dec
cmc
inc
jg
movsb
and
pop
sub
xor
popf
out
lds
jl
mov
popl
test
sbb
ficompl
xor
icebp
or
cwtl
push
push
mov
subb
xor
outsl
sbb
jae
nop
inc
dec
bound
sub
in
cmp
out
sub
sbb
ja
outsb
xchg
adc
in
xchg
loopne
jne
les
insb
xchg
outsl
in
pop
jmp
dec
in
fbld
loope
sbb
lea
repz
ja
or
aaa
mov
gs
mov
jno
ja
das
dec
jae
adc
add
sbb
notl
pop
lods
xchg
test
leave
add
gs
aaa
add
inc
sub
push
pop
lahf
in
or
loope
fists
jne
mov
pushf
lret
cli
xchg
mov
jmp
add
cmpsb
loope
jge
filds
jmp
jl
and
adc
push
adc
dec
mov
xor
data16
sbbb
mov
scas
aam
pop
sti
xchg
or
push
rorb
mov
fs
jecxz
hlt
pop
and
or
pop
es
js
inc
les
test
jno
jmp
lock
push
xchg
addr16
mov
fsubs
add
test
xchg
in
popl
push
jl,pn
and
iret
adc
jle
push
ljmp
inc
addr16
push
jg
jp
outsb
shrb
mov
imul
fisubrl
jecxz
sub
jmp
mov
adc
jo
fidivl
imul
lret
daa
xchg
xchg
or
push
sbb
inc
fisubrs
and
mov
rcll
hlt
mov
cltd
arpl
fucomip
xchg
inc
enter
les
dec
sub
mov
clc
hlt
push
xchg
pop
pop
xor
shl
sub
inc
lods
test
mov
std
pop
jne
adc
pop
jae
stos
ficoms
push
hlt
loope
scas
add
sbb
loop
jb
lret
mov
dec
mov
xor
gs
test
por
hlt
test
push
lods
xchg
loop
and
add
push
xlat
and
pop
fldcw
ret
jmp
add
jb
jle
movsl
and
xor
lods
jecxz
enter
push
xor
add
shl
scas
mov
cwtl
fs
enter
mov
mov
jmp
decb
addb
bound
lcall
clc
mov
cmp
mov
sub
add
jl
data16
lcall
rolb
cltd
push
pop
mov
out
adc
or
cs
les
jns
pop
fimull
xchg
imul
sbb
jbe
push
repz
mov
loopne
out
cmp
pop
push
js
imul
xlat
in
out
cmp
pop
sbb
aad
xchg
fimuls
jo
and
fwait
aaa
out
or
cmp
dec
out
or
sbb
push
ficompl
testb
cmpsb
xorb
data16
repz
push
stos
cmp
pop
cmp
insb
int3
sti
sahf
cltd
in
sbb
clc
in
pop
pop
aam
dec
push
fwait
scas
add
add
pop
add
sbb
cmp
in
gs
stos
sbb
stos
mov
repnz
out
pop
jo
insb
sti
das
stos
inc
cmpl
xor
faddl
dec
int
add
subb
js
lods
in
outsw
push
xor
xlat
jb
and
sbb
insb
cmp
mov
and
add
arpl
add
out
cmp
imul
data16
lds
dec
fmull
pop
and
aaa
je
ss
in
inc
mov
mov
mov
inc
aam
xchg
xchg
fisttpl
mov
inc
out
inc
fdivl
lods
bound
mov
push
scas
int
lcall
sbb
xchg
inc
or
aad
xor
jae
mov
in
testl
sbb
gs
cmc
pop
pop
cmp
pop
jle
pop
push
outsl
aad
lcall
mov
and
fldl
push
adc
ret
jae
rolb
inc
js
pop
sbb
outsl
cmp
jne
xchg
shll
fadd
aas
pop
lds
xchg
data16
cmp
and
aas
gs
push
in
lods
xchg
in
scas
pop
insb
pushfw
pop
iret
jno
sbbl
push
cmp
xor
hlt
mov
add
insl
mov
xchg
jo
iret
daa
in
in
push
insb
mov
sbb
imul
dec
and
mov
xchg
mov
xor
dec
scas
fcomps
iret
lods
mov
test
insb
fisttpl
sub
fwait
push
flds
mov
or
jg
or
adc
adc
xor
mov
push
pop
push
fidivrl
stos
pop
stos
dec
or
rcrl
arpl
xor
imul
push
pushf
xchg
out
idivb
in
lret
cmc
xchg
push
js
lods
cmpsb
xor
insl
dec
in
iret
and
sbb
notb
sahf
loop
push
cli
ficomps
jl
mov
aas
jg
lods
div
xchg
sub
and
sti
jo
mov
cmpsl
xchg
mov
roll
jge
int
enter
lret
fwait
mov
mov
lret
mov
lods
sbb
sti
cmc
imul
jmp
push
jp
and
inc
inc
popf
cld
mov
fadds
inc
jg
popa
loop
not
cmp
add
pop
mov
xlat
mov
loope
or
mov
dec
arpl
movsl
insb
xor
jno
into
xchg
lods
push
xor
inc
mov
adc
add
push
movsb
fidivrs
xchg
xor
mov
sub
ret
mull
fnstenvs
sbb
or
inc
clc
sub
iret
lods
jb
cmp
aam
jecxz
inc
addl
fisubrl
nop
or
ret
cmc
jl
mov
loopne
dec
xchg
pushf
ffree
shlb
push
aaa
add
aad
btc
xchg
and
jmp
dec
cmpb
push
mov
popf
pop
xchg
addr16
push
sahf
cmp
mov
mov
lock
and
in
es
out
adc
clc
or
mov
scas
out
pop
clc
rorb
xorl
imul
xor
jbe
cmpsl
sub
scas
mov
inc
push
adcl
stos
rcll
dec
push
nop
mov
mov
lea
and
nop
adc
sahf
mov
sub
fstpt
and
clc
lods
pop
pop
out
inc
dec
xor
pushf
xchg
loop
jg
lea
mov
sbb
test
pushf
push
scas
and
sbb
cmpsl
leave
add
xlat
lahf
cli
or
gs
xchg
add
icebp
push
mov
inc
inc
cmp
shl
push
xor
push
xlat
xor
xor
dec
add
and
pop
mov
fmul
pop
into
lods
insb
sub
pop
stc
inc
pop
je
sbb
loope
pop
lea
scas
movsl
ljmp
jmp
push
into
dec
in
aad
jne
movsl
xor
lret
jb
in
adc
lahf
movsb
stc
arpl
addr16
and
js
xchg
jp
popa
inc
loopne
adc
movsb
sahf
cmp
adc
pop
popf
out
mov
mov
xchg
dec
xchg
movsb
and
jp,pn
mov
sbb
push
lea
out
repnz
ljmp
insl
xlat
call
hlt
xor
adc
xchg
cmp
xor
and
loop
and
jecxz
push
lds
xchg
sti
stc
mov
or
xchg
dec
xor
fst
mov
lret
inc
scas
or
ret
adc
jge
lcall
mov
or
and
xchg
imul
jo
in
jo
mov
inc
faddl
pop
movsl
loope
jnp
lods
imul
mov
jle
outsl
pop
ret
pop
jne
mov
ss
test
pop
movsl
xlat
mov
push
xor
es
sahf
push
insl
dec
movl
mov
and
int
stos
mov
bound
inc
mov
testb
xchg
inc
mov
daa
adcl
jmp
outsb
lea
add
and
and
adc
bnd
fstpt
mov
jo
sub
adc
scas
adc
mov
or
mov
xor
fs
bound
sbb
ror
mov
add
mov
pop
incl
add
dec
push
fidivl
stc
mov
mov
push
jp
dec
sbb
add
and
ret
push
mov
sbb
push
rcll
adc
sub
outsl
insl
movsb
rorb
xchg
add
movsb
lds
pop
push
or
jg
mov
jl
rcrb
test
loop
in
in
inc
jge
mov
and
data16
call
insl
xchg
cld
add
push
imul
dec
out
clc
movsb
insl
call
pop
ljmp
cmc
xchg
fsubrs
add
adc
in
sub
sub
jbe
fcomps
cwtl
rcll
lret
icebp
adc
scas
fisubrs
pusha
filds
lods
sub
addr16
loopne
repnz
cmp
icebp
das
cmp
dec
jne
push
xorl
repz
sbb
sbb
sti
inc
fists
pop
xchg
lock
ret
aad
push
fcoms
insl
cmp
pop
test
lods
fsts
sub
add
adc
pop
fcmove
jo
pop
lcall
subb
xchg
sahf
add
xchg
mov
inc
or
jl
pslld
data16
mov
movsl
jle
in
scas
and
data16
cmp
push
or
mov
cli
add
lods
cmpsb
jb
fistpl
sbb
arpl
pushf
int
int
pop
mov
inc
in
mov
fistl
sti
das
mov
push
dec
popa
push
ret
and
add
lock
in
out
sbb
or
and
add
rcrb
int3
mov
pop
cmp
scas
scas
xchg
mov
scas
mov
sbb
loopne
mov
cmp
stos
je
test
out
adc
sub
out
jno
cmp
shr
pop
mov
mov
fmuls
bound
and
dec
add
lock
or
insl
or
orl
shr
adc
movsb
pop
loop
imul
push
jbe
pop
adc
aaa
icebp
shrl
push
sub
jg
enter
or
adc
out
into
fstpt
sub
pop
in
xor
and
movsb
mov
test
push
and
cmp
fidivl
or
fimull
adc
mov
mov
push
cmpsl
hlt
lret
mov
cmp
pop
repz
jl
leave
push
outsb
add
jmp
cwtl
inc
pop
jp
jae
imul
int3
pop
out
add
sub
test
gs
dec
mov
and
sub
arpl
stos
push
daa
cmp
inc
mov
pop
scas
sbb
push
iret
xchg
sbb
roll
push
cmpsb
pusha
repnz
sub
jns
xchg
add
cmp
xor
inc
push
jmp
push
addr16
or
iret
sub
inc
dec
testb
sti
mov
adc
xor
adc
mov
movsl
mov
scas
dec
je
jle
or
stc
scas
mov
jb
mov
cs
and
stos
cmpsb
out
add
popf
pop
xchg
push
jmp
js
stc
sbb
jecxz
add
mov
inc
test
sbb
sti
loope
aam
shll
lret
test
xorb
inc
xchg
add
clc
scas
les
lds
xor
rclb
mov
mov
sub
lret
cmp
pop
fldcw
ret
dec
fsubrp
mov
movsb
fwait
push
pop
jg
stc
adc
mov
jb
add
stc
popa
mov
mov
cmpsl
adc
das
ret
cmp
data16
cmp
cwtl
sbb
push
out
movsb
cmp
fnop
lock
xor
mov
push
stc
sbb
fcomi
lods
cmp
icebp
outsl
outsl
rolb
into
mov
cld
in
push
pop
add
int
mov
movsb
xchg
aaa
fdivl
mov
gs
fnsave
insl
loopne
cwtl
cmp
cmp
mov
frstor
mov
ss
dec
mov
test
icebp
enter
cmpsb
cld
cmc
mov
xlat
adc
mov
cmp
jns
ret
out
or
mov
call
inc
xchg
roll
sbb
jl
xor
enter
and
sar
jg
js
movsb
mov
leave
mov
nop
xor
and
loop
mov
adc
pop
ret
dec
repz
jne
xchg
ds
es
jnp
enter
rcl
iret
push
divl
rol
insl
gs
flds
bound
arpl
pop
jne
jnp
test
popf
lock
xchg
inc
mov
jge
outsb
int3
cmp
lods
jb
jp
ljmp
or
imul
jb
xchg
icebp
les
lea
cmpsl
shrb
bound
xchg
inc
cmpsb
mov
adc
xor
inc
mov
or
mov
decl
pop
and
shll
scas
aas
pop
mov
sbb
loope
jmp
sbb
sub
sbbb
or
dec
dec
sbb
imull
cmovs
xchg
loop
ret
lret
mov
push
cmp
outsl
xchg
mov
mov
cmpsl
adc
jp
aas
push
and
push
aas
inc
jno
bound
or
sbb
mov
mov
cmp
andb
cmp
add
sub
loopne
jge
push
pop
xor
fwait
test
xchg
call
cmpsb
inc
xor
cmp
push
or
dec
add
inc
mov
push
pop
jmp
stc
aam
jp
lahf
mov
mov
iret
adcb
mov
jnp
cmc
test
mov
jp
pusha
cs
add
add
and
lds
adcb
cwtl
sub
sub
hlt
mov
lock
lcall
fwait
cmp
pushf
sbb
mov
sbb
stos
sub
push
into
xor
out
mov
popf
jge
ret
push
push
mov
sub
sahf
lahf
jns
aad
mov
or
mov
xor
jnp
sbb
push
pushf
mov
int3
rcrb
jne
sub
cmp
lods
push
sbb
insl
inc
mov
adc
mov
dec
adc
push
pop
xchg
icebp
in
das
fnstcw
jnp
nop
sti
loope
filds
pop
pop
hlt
loope
fadd
arpl
inc
or
popa
dec
push
aam
fimuls
xor
jno
in
mov
and
push
add
inc
arpl
adc
imul
push
ret
std
sahf
inc
mov
movsb
jge
shlb
shlb
push
pop
xor
sbb
mov
jnp
adc
mov
cmp
pop
ret
mov
jmp
daa
xor
push
push
xchg
push
push
cmpsl
filds
jae
call
shll
xchg
add
das
out
xor
pop
cmp
inc
jp
or
or
push
dec
sub
jns
mov
out
clc
push
xchg
xlat
cli
or
sbb
filds
adc
xchg
and
insl
rolb
lcall
xchg
fisubrs
fldt
and
mov
daa
iret
xchg
cmpsl
sbb
bnd
cli
dec
clc
es
sahf
fs
mov
xchg
aad
outsl
ret
jp
dec
sbb
lcall
xor
adc
sti
cmp
inc
xor
test
cld
jmp
lcall
adc
lock
loop
movsl
cmpl
sub
mov
add
sbb
out
jl
call
mov
loopne
mov
subl
ret
mov
stos
cmp
lds
sbb
push
scas
or
ja
hlt
loopne
add
out
inc
sbb
int
fbstp
cmp
test
clc
inc
xlat
repz
jl
inc
loope
rorb
dec
sarl
mov
pop
lods
cmp
sub
je
inc
imul
in
sbb
jnp
subl
iret
repz
das
test
mov
inc
push
inc
testl
sbb
in
ficompl
mov
les
ja
pop
mov
add
push
setno
push
xor
xchg
insb
adc
add
addr16
rcl
xor
jecxz
popl
mov
add
jecxz
mov
mov
push
mov
push
jbe
hlt
xchg
fistps
sar
ja
dec
cmp
test
dec
les
fisttps
out
sub
out
xchg
or
iret
enter
or
jno
or
fwait
jl
enter
add
fs
popa
shlb
pusha
lea
sbb
mov
gs
jnp
and
js
outsl
cmp
jno
push
leave
mov
test
sub
pop
lea
mov
mov
cmpsb
test
roll
fs
leave
sbb
or
mov
aad
inc
es
loope
jne
push
sbb
sub
jb
adc
ror
subb
mov
cld
mov
pop
jb
sub
and
out
imul
xor
sbbl
ret
pop
rep
jg
jo
or
and
xchg
mov
fbld
mov
mov
cld
stos
cmp
jo
pop
lea
outsb
ljmp
mov
jp
fildl
jge
cmpsb
inc
pop
in
xchg
arpl
jno
pop
cmp
or
dec
jno
push
pop
or
and
aaa
add
sahf
or
fcomps
popf
xor
stos
and
aam
shrb
cwtl
jecxz
mov
xor
mov
dec
les
arpl
dec
sbb
and
cmc
dec
or
push
cmpsl
inc
push
pushl
roll
jle
lock
mov
mov
and
cmp
movsb
sub
int3
pxor
ret
pop
ja
sbb
push
lahf
lea
push
mov
into
cmp
adc
jp
or
xchg
movl
pop
cltd
scas
inc
inc
kmovb
stc
insl
adc
bound
pop
popa
inc
sub
adc
mov
imul
or
roll
std
das
push
xor
jecxz
notl
or
cwtl
add
in
xchg
into
add
dec
push
orl
pop
mov
or
test
lea
sbb
xor
xchg
xchg
mov
leave
inc
pop
adc
sub
sub
adc
cli
lret
dec
cmpb
outsb
pushf
lds
pop
mov
push
out
xor
jl
data16
dec
ret
xor
cmpsl
and
inc
dec
pop
sbbl
mov
cmpsb
xlat
add
cmp
push
call
sbb
inc
mov
jne
ja
push
adc
push
jmp
fimuls
xor
push
cmpl
dec
out
lds
pop
cmp
mov
repz
dec
cwtl
inc
sub
mov
lods
jb
mov
scas
daa
insb
jae
out
loopne
push
scas
add
rcrl
jo
xlat
cmpsb
cmp
pop
jl
cmp
push
dec
mull
pop
xorb
cmp
sbb
sbb
cli
nop
std
adc
mov
mov
lcall
sub
popf
mov
cmp
popf
mov
subb
stos
adc
lahf
mov
dec
adc
add
loop
mov
mov
insb
or
mov
or
sub
shll
dec
add
sbb
in
add
jp
enter
mov
cmp
aad
jnp
push
push
and
outsb
jp
push
rcr
out
clc
sub
movsb
loop
dec
clc
outsb
push
cltd
icebp
push
and
shlb
mov
inc
add
dec
insl
xchg
cmp
jg
pop
add
add
aas
pop
sub
fs
mov
pusha
lea
xor
shlb
inc
je
iret
mov
insb
out
lret
mov
data16
js
jg
or
addr16
sbb
repz
orb
mov
out
fmuls
cld
adc
filds
mov
jl
andl
jae
or
aam
ficompl
iret
bound
mulb
dec
scas
in
xor
fs
sarb
es
dec
xchg
xor
dec
roll
js
aaa
push
mov
add
add
mov
pusha
push
mov
pop
js
xor
mov
dec
pop
mov
mov
adc
push
repnz
outsl
sbb
pop
jg
stos
ret
test
inc
sub
push
or
hlt
ja
pusha
pop
aam
lods
push
or
jbe
xchg
ret
sub
mov
add
inc
popf
outsb
pop
push
ret
xor
cli
mov
int3
mov
cmp
inc
popf
loop
out
xor
cmpsl
dec
pop
adc
jecxz
push
and
std
add
cmpsb
int
jp
lret
lods
lahf
cmp
ja
stos
pop
movsl
cmp
cmc
jecxz
outsl
lret
sub
sbb
mov
loopne
pushf
jmp
loope
sub
cmovl
pop
add
pop
shrb
dec
jp
push
push
add
pop
cmp
flds
movl
in
or
in
clc
inc
hlt
lods
cltd
mov
adc
stos
mov
push
adc
add
mov
pop
inc
pop
loope
adc
int
mov
adc
mov
cmp
imul
inc
fsubrp
xchg
jno
pop
pop
mov
pop
adc
lods
mov
mov
sub
sbb
outsb
and
or
inc
in
xchg
out
mov
xchg
dec
movsl
int3
fistl
and
mov
ja
insb
mov
jmp
shl
xor
pop
or
or
pop
or
call
aam
sbb
inc
xchg
push
cmc
lea
scas
push
dec
aaa
jge
pusha
in
shlb
inc
mov
or
vpsrad
pushf
inc
aaa
ja
roll
jbe
sar
popf
movsb
xchg
xor
and
divb
inc
cmpsb
ret
dec
sahf
cli
cltd
pop
mov
pop
mov
cltd
mov
mov
adc
fimull
mov
lods
hlt
bound
stc
stos
sub
and
xchg
loop
sti
mov
cwtl
mov
pop
pop
and
mov
cmpsl
push
fsts
std
inc
out
and
in
inc
jbe
sbb
imul
push
flds
xchg
in
cs
xor
mov
lret
xor
pop
or
lahf
and
dec
ds
andb
or
lods
pop
pop
mov
jnp
jmp
cmp
nop
icebp
xchg
seto
sti
or
les
add
out
jg
pop
rcrl
fsubrp
bound
js
call
sbbb
inc
push
enter
mov
mov
loope
pushf
sbb
push
or
subl
xchg
loope,pt
mov
aas
or
add
pop
movsb
cmp
xchg
sub
xchg
mov
adc
dec
xchg
sti
and
mov
popa
lock
inc
sub
loop
imul
repnz
cs
daa
push
outsl
mov
pop
insb
or
lds
cmp
inc
sarl
xlat
bound
add
pop
push
xlat
mov
out
inc
insb
fstps
ss
nop
in
popf
mov
and
jne
pop
mov
mov
and
and
popf
mov
xchg
adcb
and
cmc
jecxz
cwtl
sbb
repz
cs
jge
in
out
js
in
clc
pop
jns
push
cmp
je
call
pop
loop
push
xchg
std
ds
push
dec
stos
cmp
or
jo
sub
clc
and
add
gs
inc
sub
daa
arpl
scas
adc
lret
push
and
push
popf
inc
add
lret
subl
ljmp
fs
push
xchg
ja
or
xchg
inc
imul
push
aam
movsb
add
sbb
mov
fst
sbb
ljmp
xchg
pop
adcb
and
push
inc
enter
sub
push
push
insl
outsb
or
pop
rcrl
fs
rol
test
icebp
push
sbb
cmp
sahf
cmc
loopne
std
test
dec
pushf
scas
add
sub
nopl
fisttpll
mov
test
popa
or
mov
pop
mov
mov
or
ss
fwait
jmp
mov
and
jmp
inc
loopne
out
xchg
push
and
lea
pushf
mov
das
inc
pop
fcmovne
lods
test
orb
mov
add
movlps
clc
cmp
cltd
or
std
scas
or
negb
adc
daa
in
aaa
mov
cmp
daa
popf
and
dec
mov
fcmove
pop
sbb
push
push
or
push
clc
repz
dec
pop
orb
xchg
inc
out
in
mov
and
pop
xchg
roll
loope
sub
cmpb
push
shlb
push
sub
adc
push
insl
lret
repz
addb
mov
dec
movb
loop
xchg
add
aad
adc
call
pop
lods
pop
loopne
lret
push
mov
daa
int
mov
stc
xchg
dec
add
ret
add
lahf
xor
cmp
dec
rcll
jecxz
shlb
xor
or
dec
or
dec
or
sbb
cli
mov
and
rcll
aaa
cmp
movsb
aas
sbb
pop
or
in
pop
ss
push
lcall
jae
popa
insl
mov
repnz
stc
cmc
push
adc
and
out
push
xor
add
and
lods
dec
push
loopne
mov
xchg
outsl
stc
fs
int3
call
aaa
bound
xchg
mov
outsl
xchg
sbb
sbb
mov
dec
dec
lock
dec
push
popf
pushf
imul
fnsave
cmpsb
dec
fcmovnu
pop
test
pop
xchg
dec
mov
popa
sbb
jne
aas
fsubl
sub
sub
fldenv
dec
mov
popa
cwtl
and
jne
stos
icebp
xchg
mov
add
movsl
outsb
clc
bound
enter
jl
mov
jecxz
enter
mov
in
xor
mov
push
xor
in
cmc
push
sbb
cli
test
out
mov
jbe
push
mov
jne
jns
mov
or
push
adc
int
xor
add
xor
rorl
xchg
int3
cmp
jnp
lods
loop
in
sbb
cmp
sarl
pop
pop
inc
inc
cmpl
jle
mov
cli
rcr
aaa
inc
cmpsb
andb
adc
sub
push
push
js
cmp
pop
push
push
or
mov
xor
cmp
insb
es
rclb
cmp
mov
sbb
stc
fsubr
mov
into
sub
mov
mov
mov
cwtl
jae
push
jle
mov
gs
leave
movzbl
sub
xlat
jle
xchg
sbb
inc
mov
or
shrl
loop
fst
adc
stc
pushf
mov
xor
xor
int
mov
add
jb
jge
jmp
fwait
xchg
sub
jecxz
imul
js
xor
mov
call
push
scas
ja
pusha
adc
xor
aad
or
mov
push
test
sub
cli
jo
push
jo
mov
cmc
pop
adc
fnstenv
popf
mov
pop
cltd
sbb
clc
adc
or
jmp
clc
negl
xchg
or
push
mov
mov
and
sub
cmp
adc
mov
aaa
jae
insl
test
rcrl
adc
ljmp
lods
mov
sub
test
popa
dec
dec
sub
xchg
and
les
rolb
daa
shll
lods
pusha
popa
inc
aam
stc
pop
mov
pop
aam
push
push
inc
xor
mov
cmp
loopne
iret
stos
pop
xlat
imul
test
call
fsubrs
daa
mov
ljmp
subl
dec
jbe
jle
lret
inc
inc
or
push
fsubrl
mov
repnz
dec
out
cmpb
jl
int3
inc
mov
inc
out
insb
sub
mov
pop
out
loope
pushf
mov
xchg
mov
sbb
std
rcll
movsb
dec
out
xchg
push
sub
jns
add
xchg
inc
add
enter
xchg
dec
and
mov
jb
insb
popf
push
or
enter
cmp
pusha
adc
leave
add
lods
jge
cmp
dec
jmp
shl
add
orb
mov
int
xchg
mov
push
sub
sti
mov
pop
sbbb
aam
jnp
dec
push
cmc
sub
loope
fdivl
inc
call
test
add
scas
rorb
or
jg
jmp
insl
lock
adc
adc
mov
fistl
jge
xchg
sub
lock
jecxz
pop
imul
ja
push
xchg
lock
mov
or
mov
addb
sti
scas
and
lock
xor
mov
adc
test
mull
xchg
lahf
mov
hlt
popa
jg
xor
jg
shll
or
and
sbb
jecxz
push
lods
decb
and
jg
sbb
pusha
enter
mov
movsl
cmpsb
mov
push
stc
xchg
dec
shll
test
lock
lds
jmp
or
pop
jmp
mov
mov
mov
add
sti
mov
mov
enter
fs
sbb
or
repz
fistps
mov
xchg
sbb
je
lcall
ljmp
cli
lock
int3
xchg
in
insb
adc
mov
scas
fnsave
in
add
lods
mov
add
jge
stc
sub
sub
fmuls
xor
fsub
and
hlt
lds
and
push
cmp
sbb
or
test
dec
fldenv
hlt
pop
push
push
pushl
push
leave
in
pop
mov
orb
pushf
iret
movsl
dec
adc
xchg
lock
dec
mov
outsb
mov
mov
jb
mov
xchg
icebp
mov
mov
cwtl
xchg
push
jb
into
sub
jecxz
sti
and
sahf
mov
call
movsb
cmp
pop
push
subb
imul
out
or
mov
inc
push
adc
add
and
dec
rol
cli
xor
dec
dec
shll
pop
arpl
adc
mov
pop
test
movl
fwait
incl
cltd
mov
adc
lods
fidivrl
inc
pop
mov
fisttps
dec
jl
jp
filds
adc
adc
mov
mov
sub
leave
push
hlt
mov
sub
test
mov
div
ds
jp
int
sbbb
jecxz
lock
xor
dec
imul
cwtl
loopne
inc
das
ds
or
stos
subl
mov
sub
xor
imul
dec
aam
dec
and
or
jnp
dec
cmp
mov
jl
dec
adc
mov
inc
jbe
and
sbb
cmp
rorl
lods
cmp
push
inc
xchg
mov
ret
or
js
xor
mov
mov
sub
ja
shlb
int
mov
mov
cmp
aad
stc
xchg
mov
ss
outsb
jl
push
push
mov
and
and
arpl
test
arpl
and
arpl
sbb
cmc
xlat
mov
stc
and
pextrw
sub
dec
es
push
inc
sbb
cmp
xor
or
pusha
jmp
jb
out
imul
mov
add
pop
das
mov
add
or
sbb
lcall
popa
inc
dec
push
jo
jl
ds
and
mov
pushf
imul
xchg
jmp
and
jl
test
push
and
aaa
xchg
sarl
mov
xor
xorb
outsb
add
aam
insl
xor
push
cmpb
outsb
and
xchg
mov
xor
je
push
fstpt
inc
mov
nop
or
in
add
xchg
mov
scas
sbb
and
rcl
in
xchg
or
inc
sbb
in
lea
in
adc
push
fs
dec
pop
jno
daa
inc
in
sub
add
jnp
cmp
lahf
jb
rorb
into
sti
push
xor
data16
xor
and
pop
outsl
daa
data16
rclb
in
loopne
xchg
sbb
mov
jnp
sub
insl
cs
sbb
pop
shl
out
and
or
add
nop
in
lahf
mov
sbb
sub
xchg
xor
lock
inc
jne
fisubrl
sub
sarl
push
imull
movsb
movsl
dec
mov
mov
out
rorb
mov
cli
nop
pop
push
dec
jns
data16
mov
inc
xchg
in
nop
cmpb
cmc
or
cltd
sub
inc
sbb
dec
fadd
mov
ds
dec
mov
lds
nop
stos
rclb
cmp
mov
inc
pusha
sbb
fistpll
inc
int
andl
sbb
out
daa
sbb
sbb
dec
popf
testb
mov
xchg
push
shlb
push
and
push
pop
push
jecxz
inc
shlb
prefetcht2
ja,pn
jmp
mov
rcrb
jno
jb
call
pop
mov
inc
or
push
lods
jne
mov
and
and
std
dec
cmp
mov
leave
push
outsb
jne
std
and
outsb
ljmp
fstpl
ret
and
rsqrtps
mov
jl
and
loop
pusha
hlt
ja
sbb
push
xchg
jno
jl
cmc
add
mov
dec
clc
mov
sub
and
jmp
test
pop
xchg
out
sti
mov
and
mov
aaa
icebp
xor
sbb
outsb
inc
mov
and
sbb
orl
xor
in
scas
repz
or
fsubr
mov
pusha
push
mov
push
ljmp
nop
cmp
in
or
lds
int
imul
xlat
les
popa
aas
jae
xchg
mov
jnp
fildl
mov
xor
cmpl
test
call
rcll
pop
andb
add
mov
xor
push
shll
xacquire
jp
and
popa
iret
pop
adc
add
dec
sbb
and
fwait
lock
or
ljmp
push
xor
push
mov
xchg
jbe,pt
loopne
push
sbb
fidivrl
leave
cmpsl
xchg
js
inc
mov
fnstsw
aas
sub
hlt
mov
jge
jb
in
xchg
mov
push
imul
xchg
adc
and
test
adc
jne
mov
pop
jb
or
cmp
add
push
cltd
fistps
push
xor
fs
jmp
xor
jl
cmpb
test
fsts
and
notb
int
add
cld
test
loopne
frstor
push
cwtl
and
push
pop
xor
dec
push
orb
dec
adc
jge
pop
scas
jp
adc
mov
pop
nop
sub
mov
mov
lcall
cmp
loop
or
ret
scas
imul
stos
push
dec
icebp
jnp
or
pusha
sub
mov
sahf
fildll
out
das
fnsave
sbb
pushf
xorb
xor
inc
scas
sbb
ret
nop
jo
inc
mov
cwtl
cmc
mov
negl
mov
xchg
std
js
or
push
sbb
or
sbb
push
js
repnz
in
subl
mov
xor
sub
mov
cmp
lods
adc
int
fmul
in
add
cmp
mov
stos
cmp
test
loope
js
inc
ror
aas
cltd
lret
pop
sbb
mov
adc
out
jecxz
int
push
mov
pushf
std
dec
and
std
cld
iret
cmp
lret
in
and
cltd
leave
sub
outsl
or
mov
aaa
gs
negl
inc
in
adc
imul
out
out
or
jle
dec
aad
stc
pushf
add
inc
xchg
ds
stos
jae
and
inc
sub
adc
add
cmp
sbb
cmp
push
cmp
cmpsb
adc
arpl
scas
jp
inc
stos
aaa
lods
jo
or
xchg
xchg
enter
jmp
add
add
sbb
mov
mov
out
xor
fistpl
sub
leave
faddp
dec
cmp
adc
stos
or
mov
lcall
add
mov
sbbl
mull
ss
mov
mov
out
adc
ds
or
mov
mov
jnp
push
mov
or
popf
inc
or
imul
scas
aad
push
in
mov
inc
adc
mov
pop
and
inc
mov
rol
imul
xchg
jbe
push
popa
jae
mov
dec
subb
pop
sti
dec
cwtl
push
out
mov
js
int
cmp
or
arpl
mov
out
sbb
iret
cli
cmp
inc
enter
inc
les
push
dec
jg
pushf
das
scas
mov
iret
sbb
cmpsb
movsl
push
mov
push
adc
ljmp
std
repnz
mov
cmp
sbb
adc
and
mov
mov
or
mov
mov
lds
add
leave
in
call
adc
call
dec
mov
cmp
andl
cltd
rorl
lcall
pusha
and
or
jne
jo
addr16
jle
jmp
inc
mov
mov
mov
push
negb
cmc
fs
and
jecxz
dec
jp
rcll
outsl
lret
fstpl
mov
mov
dec
xchg
adc
jmp
call
pop
iret
and
or
push
dec
jo
mov
push
lahf
push
outsb
mov
subb
mov
sahf
mov
shll
xchg
repnz
in
cmc
sub
mov
rcll
dec
jne
and
lods
mov
push
inc
pop
xor
ficomps
fldt
jns
addl
xchg
mov
inc
sub
stos
lods
ss
cmp
cs
sub
sbb
sub
pusha
ss
popf
mov
ds
xor
cmp
jp
or
test
dec
cs
bound
xor
stos
cmp
pop
leave
xlat
sti
out
stos
stos
ret
test
push
pop
lea
mov
stc
lods
jo
dec
cmp
repz
es
icebp
out
shlb
push
push
dec
xor
in
xor
lea
xchg
jle
int
insl
mov
ret
mov
notb
roll
pop
sbb
jb
mov
jae
push
movsl
imul
cld
mov
mov
aam
mov
int
fsub
loop
roll
test
sarb
test
movsl
ds
push
or
mov
fs
push
and
pop
jo
mov
mov
leave
scas
clc
stc
cli
jge
sub
jecxz
ljmp
adc
and
xchg
repz
into
rorl
roll
dec
fisubs
push
cli
out
pop
dec
lea
test
xor
sub
push
mov
loopne
ret
mov
xor
movsb
pop
stos
push
ds
cmp
ret
int3
xchg
sti
mov
sbb
in
cmc
aam
mov
jb
sbb
dec
and
test
xor
in
lahf
arpl
fsts
and
push
aaa
push
adc
sub
arpl
mov
cmp
lods
lds
test
ret
loop
add
loop
lods
fsubrl
xchg
adc
push
push
arpl
cmp
lock
xor
dec
call
mov
ds
addl
scas
xor
std
and
cmpb
sbb
push
andl
push
ret
out
aam
hlt
divl
lahf
pop
fisttpll
scas
xor
sbb
pop
out
cmp
mov
xor
fs
fstl
mov
jp
rcrl
jno
sbb
in
jns
xchg
mov
data16
dec
lods
cmp
jns
mov
repnz
out
in
cmp
sub
fs
xchg
inc
insb
in
cltd
fbld
xchg
fwait
xorb
in
sahf
xor
pop
cmp
sahf
add
sub
pop
sbb
or
jae
insb
pusha
mov
pop
std
adc
sbb
mov
sbb
aaa
popf
sub
push
lods
mov
pop
cmp
lcall
pop
dec
inc
insl
or
pop
xor
popf
vsqrtsd
mov
push
mov
insl
push
xor
push
bnd
dec
sbb
push
push
cmp
in
sub
in
lahf
aaa
test
or
lret
push
jp
cltd
mov
int
dec
sbb
mov
rolb
push
orb
mov
in
sub
dec
adc
js
xor
mov
push
scas
push
mov
stos
sub
gs
xchg
add
in
mov
mov
mov
push
je
rol
push
rcll
pop
push
xchg
xchg
rcrl
bound
jl
ss
sbb
and
sbbl
fcomip
or
push
mov
xlat
cmp
push
out
cmp
int
dec
xlat
and
push
push
inc
aad
xorb
jl
push
stos
loope
subl
cmp
adc
and
out
jne
stos
pop
jns
pop
dec
sbb
cmp
pop
outsb
movsl
cld
jo
mov
xlat
negb
cltd
add
inc
mov
pushf
jmp
call
pop
popf
or
xor
inc
push
add
jns
icebp
pop
sbb
push
or
sub
jp
fdiv
aas
xchg
adc
fadd
mov
test
pop
pop
inc
sub
das
repz
cmc
insb
jnp
mov
sub
add
mov
add
cli
push
cs
sti
jl
fcmovbe
call
fcomps
enter
mov
stc
adc
sub
dec
adc
push
xchg
cmp
xor
out
xor
lahf
fimull
or
aas
addl
mov
sbb
lcall
fistps
js
add
dec
or
mov
sub
inc
lods
xchg
fcos
popa
std
int3
test
pop
jge
test
jno
cmpsb
xchg
xchg
cmp
add
faddl
imul
and
repz
movb
jmp
xlat
jns
pop
jge
aam
sbb
push
xor
test
sbb
das
mov
inc
cmp
pcmpgtb
addr16
lahf
cmc
inc
push
mov
shll
lods
inc
test
push
and
cmp
insb
push
mov
lock
imul
faddl
bound
add
insl
jge
mov
jle
mov
nop
gs
and
xor
xchg
sarl
adc
dec
loop
mov
lret
push
push
xchg
mov
push
cs
and
push
or
xchg
sub
sbb
arpl
dec
jno
bound
fwait
add
sub
adc
outsb
xchg
jnp
cs
mov
je
scas
push
cmpsb
sbb
sbb
sub
sbb
stc
sub
sti
mov
xchg
mov
jne
pop
lret
xchg
stos
mov
sbb
cwtl
adcb
add
push
cmp
sub
test
in
inc
pop
and
dec
scas
sbb
nop
cmpsl
xchg
les
inc
xchg
lods
jae
cmp
arpl
cwtl
cmpb
int3
sub
pop
lds
rolb
out
sbb
test
aaa
hlt
int3
adc
fwait
sub
pop
adc
cmp
mov
loopne
jmp
pop
sub
aas
push
data16
sti
jo
mov
lret
sub
sbb
call
fs
mov
cmp
gs
lds
cmp
jl
inc
xchg
in
xchg
bound
jns
pusha
xor
dec
insl
sbb
int
out
jge
adcb
andb
xchg
movsl
mov
sbb
js
repz
test
popa
test
mov
fs
jnp
xchg
add
and
cmp
add
adc
icebp
out
inc
push
in
inc
sub
jl
fsts
daa
jno
xchg
jbe
test
lock
orl
mov
pop
bound
out
mov
xor
repz
in
gs
or
hlt
sbbb
ret
arpl
push
lahf
and
nop
lods
mov
test
test
xor
int
sbb
mov
fwait
bound
or
in
ds
xor
pop
aam
pop
js
sbb
mulb
in
mov
popf
call
test
stos
xor
cmp
or
addr16
popf
sub
mov
jle
and
cmpsb
push
bound
sarl
mov
lock
xchg
add
xchg
adc
cmp
aaa
jle
mov
xor
push
dec
std
mov
mov
cltd
add
pop
fs
jno
arpl
test
mov
scas
add
adc
push
mov
sub
mov
shl
inc
mov
clc
stos
shlb
push
add
sub
rorb
es
add
mov
mov
lods
and
push
mov
mov
push
fimull
or
stos
push
mov
push
aad
inc
in
fisubl
pop
pop
fdivr
cmp
adc
mov
push
loope
pop
dec
mov
mov
mov
sub
jne
mov
fwait
je
enter
arpl
pop
pop
sub
mov
mov
add
cld
loopne
mov
push
adc
mov
jecxz
sbb
popa
std
lds
jecxz
xor
pop
lcall
pop
push
jecxz
push
push
rcr
add
cmp
repnz
and
scas
fmuls
xor
enter
pop
jge
cmp
mov
xor
hlt
cltd
addl
in
adc
pusha
xchg
xchg
addl
les
insb
fwait
dec
in
imul
and
aad
pusha
leave
dec
popf
into
out
aad
jns
push
mov
mov
xor
or
fcoml
fsubr
mov
sbb
add
jns
xchg
adc
lret
push
loopne
adc
imul
push
fs
nop
push
pushl
lods
mov
int
lock
inc
mov
push
mov
clc
and
sar
pop
push
sbb
fisttpl
adc
icebp
testl
xor
pop
or
decb
adc
rcll
jne
les
ret
xchg
jg,pt
loope
in
shrb
imul
or
in
and
imul
aaa
decl
aad
or
mov
test
cwtl
sbb
xchg
popf
fwait
adc
and
jb
sub
adc
pop
cmp
mov
mov
pop
ss
pop
push
outsb
mov
fidivl
mov
daa
and
push
imul
dec
das
add
in
int
outsb
inc
es
pop
popa
mov
push
adcl
fcompl
mov
push
cmpsb
dec
or
pop
adc
push
jbe
jbe
sti
test
push
mov
pop
in
popa
pusha
testl
mov
cltd
imul
fists
mov
sub
mov
subl
mov
push
xor
test
xchg
sbb
jne
popf
test
shrl
outsl
add
and
inc
iret
scas
js
add
pop
or
xor
into
mov
rol
sbb
pop
sar
sub
sub
popf
setl
loope
or
jg
aaa
addr16
insb
rcrl
push
lock
rcrb
ljmp
and
adc
push
insb
inc
mov
lcall
push
sbb
xchg
cwtl
sti
adc
sti
fiadds
pusha
lea
xchg
scas
or
out
repnz
clc
sub
ds
xchg
shrb
mov
aaa
pop
shlb
mov
dec
jne
adc
dec
jmp
cwtl
push
insl
movsb
mov
inc
imul
in
shl
scas
or
loope
in
test
and
xchg
jnp
jbe
rcrl
pushf
mov
xlat
and
mov
data16
sub
xchg
fadds
inc
sbb
jb
icebp
mov
bnd
enter
inc
data16
stos
push
pop
cs
sub
adc
pop
clc
out
push
rcr
rcrb
sub
fldcw
ja
out
dec
xchg
scas
sti
clc
fcoml
mov
lods
test
mov
pop
mov
stos
inc
aam
adc
subb
add
jae
jp
and
movb
xor
decb
insb
adc
loopnew
loop
add
pop
loop
decb
repnz
jge
push
fadd
into
mov
cmp
icebp
repz
outsl
mov
cmc
cmp
bound
xchg
aaa
into
repz
mov
addr16
out
xchg
or
push
sub
and
mov
daa
testb
xor
repz
mov
ja
lea
inc
pop
sahf
fcoml
jle
cmp
and
or
scas
movsl
imul
jno
sbb
mov
in
push
lret
aaa
or
movsw
mov
movsl
xchg
mov
insb
mov
in
xor
push
xchg
and
jecxz
roll
inc
pop
mov
push
sarb
insb
and
push
cmpsb
mov
lahf
shlb
lods
xor
push
ret
inc
mov
adc
mov
xchg
rorl
xorb
xor
or
cmp
stos
mov
jl
enter
sub
jge
andb
dec
or
pop
and
fs
cmp
adcb
insl
jp
aam
int3
lea
mov
loope
cmp
cmp
jnp
jp
aas
es
icebp
sub
and
jno
jnp
mov
stc
rcll
sbb
or
cmpsb
cmp
cltd
mov
stc
xor
sahf
sbb
add
sub
aaa
les
jg
mov
cmp
out
xchg
xchg
push
push
into
or
jns,pt
das
outsb
in
test
xor
cmpsb
jns
sbb
and
xor
shll
or
shll
xor
push
sarb
push
sub
xor
jmp
cmpsb
lret
and
xchg
scas
aas
lock
decl
xor
jge
push
test
call
inc
aaa
dec
xchg
testl
jbe
test
stos
inc
jno
inc
lcall
adcl
dec
and
arpl
arpl
loope
imul
fs
xor
inc
lret
pop
lods
mov
in
cmp
and
sub
mov
in
lods
rolb
push
pop
sarb
repnz
test
imul
cmp
jbe
xor
outsl
pop
xor
xor
push
adc
nopl
cmp
push
pop
sub
imul
sub
insb
and
jns
in
test
xchg
cmp
stc
lret
add
repz
sar
xorb
or
cmp
cmp
push
pop
aam
mov
jbe
aam
bound
in
fs
dec
dec
std
push
loopne
cmc
mov
mov
mov
jne
mov
push
adc
sbb
jnp
sub
inc
inc
bound
sti
mov
mov
movsl
cmpsb
add
in
js
jbe
dec
mov
loop
xchg
sub
addb
imull
icebp
and
or
and
cs
pop
in
clc
jo
out
shll
inc
cmp
jmp
or
out
sbb
pop
mov
out
add
scas
int
push
outsb
aam
movsb
xchg
subl
test
lahf
mov
outsl
outsb
jno
xor
loopne
sahf
sub
mov
add
pusha
int
inc
add
xor
mov
arpl
push
faddl
je
xor
roll
inc
jb
inc
cmc
sarl
xor
add
insl
fmull
add
sub
cmp
or
fldl
or
mov
out
das
mov
and
jmp
adc
adc
stos
lds
jne
push
test
das
inc
in
lret
int3
or
cmpsl
adc
nop
lret
sub
and
clc
ffree
sub
sbb
cmp
and
fistpll
dec
push
inc
test
sahf
stc
aam
lret
and
xchg
std
push
or
jo
add
mov
subl
imul
jge
aam
out
adc
shlb
pop
and
cmp
pop
in
dec
int3
jnp
iret
movsl
push
xor
jbe
sub
out
push
sbb
cs
movsl
add
pop
pushl
shrb
sbb
fldl
sub
xor
lea
xor
movsb
fs
jl
inc
ret
xchg
mov
mov
mov
lds
lret
test
ds
mov
mov
lock
adc
lds
jo
push
or
push
and
pusha
adc
daa
mov
movsb
jecxz
cwtl
lcall
repnz
cmp
mov
sub
dec
call
push
lret
or
imull
push
subl
and
addr16
fimull
jecxz
and
mov
sti
dec
cli
movl
cwtl
in
lret
cmp
fwait
jbe
cmpsl
inc
jb
mov
sbb
enter
push
mov
push
lret
rcrl
jp
or
cltd
movsl
jl
push
fnsave
sub
fwait
arpl
inc
je
or
inc
mov
into
lods
jmp
sahf
shll
cmp
test
ret
push
jl
fiaddl
and
jmp
aad
je
mov
adc
je
adc
sbbl
gs
lahf
rclb
es
xchg
jne
pop
dec
aam
filds
or
jo
aad
std
mov
int
aam
stc
fildll
aam
jnp
jne
xlat
daa
insb
jb
ds
cmp
rorl
add
adc
in
inc
adc
fucom
pop
loop
leave
shlb
adc
data16
pushf
ljmp
jl
pop
mov
data16
fs
es
fdivl
and
mov
movsl
aam
popf
gs
and
cmp
cmp
xlat
push
insb
fldcw
repz
mov
dec
adc
rorl
aas
mov
xor
dec
push
cmp
sbb
sahf
cmpsl
cli
jne
push
xor
mov
sarl
lcall
add
dec
adc
outsb
fists
mov
lahf
jae
jbe
sbb
pop
pop
enter
push
pop
sti
push
scas
call
aad
insl
stos
int3
sub
rclb
sbb
push
imul
outsl
ljmp
daa
rorl
shlb
fstps
pop
sbb
lahf
or
jbe
mov
out
loope
inc
out
add
mov
pop
inc
xor
aad
sbb
std
mov
add
push
rclb
je
xchg
loop
xor
inc
outsl
scas
nop
dec
mov
int3
fwait
xchg
sbb
cmpsb
stos
mov
inc
mov
cmpsl
pusha
cmp
int
stos
stc
ret
xchg
xchg
lcall
mov
fwait
iret
fsubr
das
or
mov
inc
push
test
mov
mov
or
stos
shlb
data16
out
cmp
andb
or
mov
pop
and
inc
hlt
aaa
fldcw
in
and
push
outsb
and
lea
xchg
dec
mov
jno
mov
insb
push
xchg
cmp
xchg
adc
jae
jno
rclb
sub
dec
stos
addl
xchg
stos
mov
xlat
inc
mov
clc
cmpsb
and
jge
mov
sub
mov
and
cmpsb
cs
subb
clc
sbb
xor
jne
jns
add
in
jmp
lret
cmp
insb
xchg
xor
ss
push
insl
gs
mov
add
cmpsl
mov
shrb
mov
mov
sub
popa
aas
aad
lahf
jb
sbb
and
jo
sbb
jb
adc
adc
mov
nop
stc
test
test
jecxz
push
pop
pop
jge
cld
add
inc
pop
pop
xlat
jnp
xchg
outsl
dec
cmp
cmp
jge
push
fs
xor
cmpsl
xchg
jae
jbe
push
xchg
xor
loope
in
inc
cwtl
add
out
int3
imul
jns
xor
aad
inc
adc
or
xchg
pop
pop
xchg
aaa
mov
mov
jb
adc
push
push
enter
pop
dec
adc
sub
cltd
dec
lret
stos
sub
dec
push
jecxz
test
andb
sub
push
push
test
push
pop
jle
sti
call
jns
and
test
inc
stos
sahf
xor
pop
sti
mov
aad
imul
push
inc
push
push
into
sub
test
pop
lahf
out
or
pop
mov
inc
mov
movl
inc
dec
jno
scas
mov
or
aam
jnp
lds
sub
dec
mov
cmp
imul
and
outsb
out
push
addr16
jmp
neg
popf
mov
jb
mov
mov
add
mov
es
mov
mov
lcall
xchg
dec
inc
pop
jae
add
sarl
into
aas
dec
cmpsl
adc
out
mov
xchg
sbb
xchg
pop
lods
push
jmp
shlb
cmpsl
sbb
sti
movsl
clc
or
xor
adc
leave
fmul
outsl
jp
test
and
sub
inc
add
scas
js
sti
and
out
dec
mov
lock
xchg
popa
out
dec
xchg
pushf
mov
or
icebp
inc
cld
scas
lods
pop
rcl
inc
dec
cmp
or
push
pop
repnz
and
adc
test
sub
mov
cmp
daa
fidivrs
push
lods
and
les
fs
xor
mov
pop
xchg
pop
jns
dec
jl
divb
imul
xchg
aas
ret
jae
jb
mov
out
jle
push
mov
orb
xchg
dec
add
test
loopne
mov
mov
clc
sahf
cmp
stc
addb
lea
gs
mov
mov
fs
stos
rcrb
dec
and
mov
scas
test
cmp
rcll
dec
sbb
je
push
test
and
lods
lcall
adc
adc
loop
jg
adc
sbb
sti
or
xchg
pop
repz
fistl
sub
pop
mov
loop
cli
add
testb
and
rorl
pop
stos
inc
pop
je
sbb
jns
test
stc
dec
mov
xor
sub
imul
icebp
and
in
daa
pusha
push
cmpsl
outsl
pop
mov
sbb
jge
jp
dec
mov
mov
sti
andl
shlb
dec
aad
insl
add
idiv
mov
jecxz
dec
addb
push
or
cvtsi2sdl
jp
push
les
fistps
data16
fiadds
sbb
xchg
movb
and
mov
sub
je
out
cmpsl
lods
sbb
into
push
jnp
mov
lret
push
push
mov
inc
fdivrl
sbb
in
mov
imul
add
pop
pusha
movsb
cmpsb
mov
loope
movsb
mov
je
mov
mov
ja
xchg
push
sub
hlt
jbe
add
push
fdivrl
mov
arpl
mov
imul
cli
fildll
mov
sbb
js
aam
lock
jl
adc
jo
int3
pop
sbb
rol
cli
daa
cmp
inc
pop
adc
pop
xchg
test
mov
dec
sahf
es
add
mov
mov
loop
xchg
jge
xchg
loopne,pt
inc
pop
out
push
pxor
cli
ja
jmp
mov
inc
push
xchg
js
in
mov
mov
pop
pop
ljmp
cwtl
in
ret
or
lds
mov
xor
inc
cmovp
gs
ret
repz
jl
aaa
sub
imul
mov
jecxz
push
ljmp
pushf
cmpsb
loope
sbb
loopne
mov
aaa
insl
je
mov
scas
pop
popa
stos
scas
mov
jbe
jg
and
cwtl
in
leave
add
xlat
or
outsb
sbb
add
mov
insb
inc
xor
pop
or
jecxz
jb
stos
popf
add
in
in
cmp
push
repz
dec
and
out
pop
pusha
xchg
mov
mov
sarl
ss
cs
in
sub
sbb
add
mov
jecxz
mov
clc
add
inc
xor
and
add
cmc
popl
lcall
call
adcb
jne
jmp
add
and
es
and
add
push
or
add
and
pop
jne
cwtl
ret
xor
add
shrl
in
mov
fcomip
mov
dec
decb
enter
nop
ret
dec
push
add
xchg
sbbl
cmc
fistps
mov
mov
cmp
out
cltd
pop
out
xchg
mov
pop
scas
jecxz
jns
adc
movsb
pop
rcrl
mov
das
mov
jecxz
sub
jmp
adc
dec
popf
test
ss
xchg
outsl
or
imul
test
insb
and
dec
andb
fdivrl
jns
inc
aas
jns
and
clc
sbb
inc
add
sub
in
stos
inc
push
add
cs
inc
jecxz
cmp
pop
lods
and
and
sahf
adc
xchg
or
cwtl
xchg
js
pusha
inc
out
fsts
dec
scas
pop
cs
pop
stos
xchg
stos
pop
lods
dec
in
mov
fcomps
sub
divl
pushl
mov
cltd
aas
arpl
out
scas
mov
das
fsts
push
xlat
imul
test
mov
loopne
dec
test
dec
and
fsubl
gs
inc
lds
lea
lcall
push
jp
inc
xchg
mov
lods
fstpl
jg
cmp
xchg
ja,pn
dec
jns
fcomp
in
mov
and
lret
adc
push
ljmp
or
sbb
pop
movl
out
scas
sbb
rep
dec
in
adc
mov
andl
jb
or
xchg
mov
add
lahf
sbb
cltd
imul
ds
or
inc
fbstp
jne
and
pop
mov
cld
ja
sub
aam
jbe
dec
in
jb
mov
in
mov
lea
sub
out
fcompl
in
mov
sbb
mov
xor
jnp
aas
sbb
pop
mov
shll
pop
faddl
inc
pop
jp
repnz
out
mov
xchg
mov
sahf
or
mov
iret
movsb
inc
or
ja
or
sbb
or
jmp
jge
stos
jb
sub
or
fldt
mov
jge
je
inc
mov
js
pop
pop
xchg
insb
mov
test
mov
cwtl
cmp
jmp
xchg
lock
mov
add
fisubl
fmuls
jns
jmp
daa
ds
dec
pusha
add
les
adc
mov
or
je
sbb
push
mov
sbb
mov
mov
insb
inc
push
fcmovne
gs
add
push
or
pop
pop
pop
adc
movsb
dec
cmp
jecxz
xchg
jmp
cli
inc
imul
cmpsb
aas
fcomp
xchg
or
icebp
jo
pop
sub
les
insl
sbb
add
sub
cmp
dec
xor
pop
jnp
sbb
ja
inc
mov
xor
xchg
rolb
sub
add
or
pop
hlt
sar
jb
add
mov
push
and
es
das
imul
jbe,pt
ret
lds
int
mov
cli
pop
stos
cli
rcll
push
or
pop
insl
insb
push
add
in
sbb
shrb
adc
sarb
xchg
dec
lods
xchg
adc
or
jmp
mov
dec
arpl
push
push
xchg
cli
movsl
xor
push
iret
cmp
bound
fidivl
push
std
jg
ss
bound
adc
jl
mov
mov
add
mov
xorb
test
icebp
jnp
dec
in
aam
sbb
aaa
cmpsl
sub
pusha
pop
lods
pop
xchg
push
in
iret
push
fst
leave
jb
sub
mov
push
jae
sbb
mov
sub
out
jo
push
repz
jge
cmp
cltd
sbb
aas
lcall
pop
dec
or
aam
pop
test
aaa
loopne
push
xchg
movsl
add
ss
out
or
mov
loope
fldenv
xor
lahf
jnp
inc
adc
shl
pop
jmp
leave
stc
ret
in
xchg
mov
enter
inc
mov
jmp
xor
cmp
fnstcw
jle
daa
imul
cli
or
orl
mov
movsb
jb
mov
push
push
mov
inc
iret
jne
mov
or
lods
call
aad
std
ds
imul
fwait
mov
lret
xchg
sarb
in
pop
xchg
test
push
jmp
mov
outsb
inc
rcll
fsubrp
pop
mov
cmpsl
adc
jns
push
sub
add
daa
das
mov
adc
clc
xor
push
adc
adc
pop
shrb
jo
jnp
test
adc
cmp
outsb
imul
adc
cmpsl
les
and
xchg
and
shr
sti
imul
cmp
movsb
adc
lcall
and
ja
push
push
bound
icebp
insl
xchg
mov
adc
insl
push
cmp
bound
lahf
daa
shrl
lret
mov
pop
sbbb
dec
and
or
xor
fidivs
mov
je
cmpb
data16
std
popf
inc
cmp
or
fmulp
lret
pop
test
popa
mov
push
sbb
jne
mov
xor
cmp
rcrb
ds
cmp
out
push
out
imul
js
std
add
ret
jl
ljmp
aaa
stos
jae
or
and
movsb
mov
mov
lods
xchg
lea
and
popa
add
and
jns
in
add
jle
lret
add
lds
stc
sbb
mov
push
popf
mov
or
std
lock
cmpsb
lcall
hlt
push
push
sub
mov
jge
add
pop
jne
add
fs
stos
pop
cmpsl
inc
das
pop
jns
adc
pop
fimuls
lea
jg
add
jo
arpl
jge
xor
jp
out
adc
sbbl
jmp
or
inc
and
scas
push
call
add
mov
popa
mov
ds
inc
and
jo
or
out
sbb
adc
in
pop
push
inc
sub
cltd
loop
cmp
mov
xchg
adc
mulb
add
add
popf
imul
mov
mov
mov
inc
mov
aad
in
stos
jns
adc
xor
lock
xor
fildll
imul
mov
in
mov
jg
rcrl
inc
out
lods
sahf
pusha
out
push
jmp
xor
adc
ja
and
ret
fwait
into
adc
push
mov
loop
or
jle
xchg
xchg
sub
sti
or
jp
mov
imul
lds
adc
flds
lods
orl
test
paddw
adc
iret
add
dec
addl
lcall
loopne
xor
pop
repz
jns
nop
xchg
movsb
out
push
stc
call
mov
scas
out
mov
push
outsl
int
aam
je
mov
or
lret
jne
popa
mov
pushf
bound
sbb
lds
mov
dec
mov
jle
dec
in
in
jbe
xchg
fiadds
or
pop
mov
inc
lock
fimuls
dec
xorl
daa
and
cmp
mov
popa
aaa
int
lcall
fnstenv
scas
mov
xchg
scas
pop
lock
add
adc
adc
into
jb
push
adc
inc
jge
negb
outsl
xor
gs
mov
mov
fldl
cld
lea
sub
out
dec
shrb
lods
icebp
pop
cmpsl
call
mov
push
jle
out
rclb
out
jle
incl
jmp
popf
xor
xchg
mov
cmp
outsl
jmp
fbld
stos
iret
imul
mov
push
sbb
xor
xor
movsb
mov
fucomip
pop
in
xchg
jne
jb
ret
push
lret
stos
scas
std
rolb
cmp
out
jb
iret
push
mov
and
rcrl
ret
loopne
clc
je
and
mov
testb
ret
icebp
adc
push
es
es
cmc
hlt
push
inc
push
cmpsl
mov
icebp
enter
in
imul
mov
jno
out
arpl
xor
dec
mov
loopne
fwait
iret
shrb
pop
pop
jge
inc
add
add
pushf
adc
push
jb
mov
outsl
pop
jnp
lea
add
xchg
sub
push
xor
mov
sbb
or
inc
sub
push
ja
lods
std
imul
mov
jno
add
in
adc
scas
out
in
xchg
outsl
enter
scas
mov
or
enter
outsl
jg
fidivs
cli
lret
sbb
test
aam
mov
jno
daa
xchg
xchg
push
push
sbb
icebp
mov
dec
mov
imul
add
das
cli
push
ds
pushf
mov
daa
movsb
fdivl
pop
iret
imul
mov
loope
sub
es
sbb
mov
stc
es
imul
xchg
cmp
xchg
push
mov
shl
add
xchg
dec
pushw
sbb
xor
cmp
loopne
xchg
mov
mov
ljmp
iret
xor
es
mov
sbb
mov
mov
xor
add
cld
cmp
adc
jl
and
fcom
ficomps
jno
test
scas
mov
imul
aam
mov
mov
ss
out
mov
and
push
mov
sub
in
cmpsb
or
and
test
ret
jno
sbb
inc
sub
popa
shll
loope
mov
testb
xor
push
fcomps
pushf
or
out
movsb
inc
xor
fisubrl
adc
or
test
pop
xorl
inc
je
aaa
cmp
in
xor
jae
add
data16
lds
push
jl
mov
lcall
shll
sarb
push
xchg
xchg
cmp
dec
jl
popa
xchg
push
dec
je
in
sub
mov
jo
sub
cmp
lods
jle
test
popf
push
xchg
and
loopne
mov
hlt
out
rcr
aas
dec
mov
stc
lcall
xchg
push
and
jmp
repz
shrl
pop
mov
adc
push
mov
outsb
out
mov
or
xchg
adc
popf
xor
ljmp
or
xchg
out
sbb
cmpsl
mov
cmp
out
fimuls
ja
ficomps
mov
addr16
mov
push
dec
mov
pusha
inc
push
or
or
lods
shrl
adcb
faddl
push
xchg
shr
int3
dec
xchg
xor
sbb
outsb
xchg
sbb
outsb
mov
fwait
xor
scas
xor
mov
xchg
aaa
in
loop
ret
lcall
mov
xchg
or
jge
mov
inc
push
fldt
pop
sti
pop
sbb
jnp
mov
add
xchg
push
out
mov
add
mull
imul
adc
frstor
sbb
lods
test
popa
stos
adc
push
xor
cltd
jb
inc
mov
push
push
jne
pop
jmp
fildl
push
and
incb
push
add
push
das
jle
out
xchg
insb
in
push
inc
jbe
outsl
lds
xchg
jne
out
imul
add
dec
pop
mov
loopne
cmp
cmp
inc
xchg
and
lcall
icebp
sub
lock
fistl
clc
dec
loope
rcrl
insl
shll
fmuls
test
aad
icebp
in
das
adc
cmp
fdivs
pop
push
mov
xlat
mov
jno
lret
loop
and
adc
es
push
popf
xchg
xchg
rorl
mov
icebp
lcall
dec
cltd
mov
adc
cs
popa
or
daa
or
out
shlb
fisttps
dec
ret
jmp
mov
push
rolb
xchg
cmp
in
mov
adc
leave
sahf
test
sbb
adc
mov
divb
push
push
mov
xchg
dec
xchg
scas
aas
xor
mov
daa
clc
call
mov
es
cmpsb
test
test
or
out
mov
leave
fsubs
inc
xor
popf
cmc
or
mov
jbe
push
std
insl
adc
adc
outsl
inc
iret
shrb
xlat
clc
add
sarb
pop
fcompl
sub
and
adc
jmp
mov
and
repz
movsb
push
ss
aam
insl
xchg
xor
aaa
dec
repnz
cmp
or
fisubl
mov
dec
sbb
negb
mov
das
and
sub
sub
and
out
xorl
popa
movsb
mov
sub
add
inc
inc
jmp
cli
test
or
or
or
leave
aas
dec
adc
inc
clc
push
and
addr16
adc
jmp
inc
add
push
leave
mov
xorl
insb
lcall
jno
aad
in
icebp
loop
scas
inc
jmp
sub
jo
sbb
mov
and
out
mov
int
inc
mov
ds
add
test
sbb
daa
sbb
pop
dec
movsb
call
aas
stc
call
inc
jnp
int3
imul
inc
jb
cmp
cmpsb
push
dec
add
int3
test
gs
fsubr
xor
imul
nop
inc
jbe
xor
push
xlat
mov
stc
incb
and
jg
dec
sarl
cmp
iret
stos
sbb
ficoms
add
daa
push
mov
cmp
test
xchg
xor
add
dec
sub
inc
in
cmp
fisttpl
sahf
mov
rcrb
outsb
and
inc
xchg
xor
mov
sbb
addb
pop
add
outsb
icebp
pop
nop
lods
addr16
xchg
dec
xchg
lock
aaa
ret
int3
js
sub
pop
adc
mov
jo
rorb
xchg
mov
jp
dec
dec
jmp
mov
add
xor
or
sub
cmpsb
add
imul
in
stos
int3
xor
xor
dec
mov
push
insb
xor
dec
mov
mov
incb
dec
inc
negb
pop
push
adc
mov
xchg
mov
xchg
stc
subl
in
sti
inc
outsb
push
fcmovu
mov
hlt
add
out
push
lcall
push
out
outsl
xor
repz
adc
lret
sub
lds
jl
orl
stos
sbb
shrl
mov
movsb
sub
mov
push
je
roll
inc
aam
lea
in
mov
daa
and
push
pusha
cmc
and
cmp
jg
sbb
loopne
adc
fcomip
jge
mov
and
pushf
lret
andb
scas
dec
inc
test
sarl
and
pop
push
or
lds
outsb
xchg
cltd
adc
lods
jmp
xchg
cmp
ja
push
sbb
lods
xchg
push
sbb
call
fldt
jne
jle
xor
ficoml
fnstcw
or
xchg
movsb
dec
out
stos
lret
movsl
adc
jecxz
add
push
and
insl
into
cli
sub
sti
mov
xchg
negl
dec
xor
test
fstl
es
push
push
fs
jns
ja
arpl
xor
stos
xchg
inc
mov
sbb
fldl
push
push
insl
lea
dec
jl
pop
mov
insl
dec
and
sbb
inc
push
cmp
lds
mov
popf
pop
stos
mov
jne
xlat
push
int3
mov
add
rorb
wbinvd
in
sub
int
pusha
int
jp
subl
dec
scas
movsl
jmp
push
dec
movsb
int3
daa
js
dec
add
add
mov
leave
push
clc
aam
lds
js
push
loopne
push
xchg
fmuls
fs
gs
outsl
notl
aas
rcll
in
lods
xor
in
rclb
push
xor
daa
cld
nop
loopne
ss
leave
add
ret
js
stos
jmp
xlat
mov
add
or
inc
adc
mov
into
iret
push
ljmp
imul
loope
xor
inc
sub
cmpsl
adc
inc
dec
mov
arpl
rcll
adc
pop
mov
popf
mov
data16
pop
jmp
das
pop
mov
shlw
pop
cld
mov
jae
dec
repnz
mov
gs
mov
inc
loopne
jno
pushf
insb
cld
gs
or
xchg
fisttpll
fidivrs
jp
jg
cmc
xchg
mov
pop
andl
xchg
mov
in
sbb
mov
dec
ret
repnz
iret
pop
jnp
divl
mov
xchg
and
out
add
mov
jo
mov
dec
movsb
push
popa
cmp
lods
and
mov
cmp
enter
pop
shl
xchg
sub
cmpsb
mov
mov
clc
and
lea
rorb
mov
xor
push
or
xchg
xchg
and
mov
ds
roll
and
inc
mov
insb
addr16
adc
in
add
in
clc
sbb
pop
mov
pop
out
xchg
stos
inc
pop
loope
dec
pop
mov
repz
inc
lret
sbb
imul
frstor
jae
mov
sbb
adc
loopne
aas
jp
xor
test
add
pop
aad
ss
fadd
imul
cmp
pop
cmp
mov
loope
dec
shrb
or
jg
adc
jb
fiadds
outsb
cs
ljmp
cli
not
test
mull
mov
sahf
or
push
inc
or
lahf
es
push
shlb
xor
aad
inc
neg
push
lahf
cwtl
and
rcll
sbb
push
adc
lods
inc
adc
inc
fnstsw
add
fs
lock
in
es
dec
data16
nop
jne
movsb
dec
pop
mov
adc
ss
mov
in
mov
movsl
push
int3
push
and
outsb
and
adc
add
sub
xchg
jmp
pop
add
out
push
push
pop
mov
scas
hlt
and
cmp
xor
in
cli
pop
leave
push
pop
les
cmp
pop
mov
xchg
clc
mov
and
nop
daa
cwtl
out
push
stos
sbb
sub
mov
mov
xchg
cld
jmp
add
lea
sub
lahf
add
daa
cmpsl
add
push
int
mov
dec
sub
add
cmpsb
dec
push
sub
stc
inc
push
sarb
into
add
sti
sahf
push
scas
in
jbe
ret
add
enter
divb
jle
aam
jp
add
xchg
push
dec
cld
ja
aaa
ds
jo
decl
push
dec
mov
adc
in
ror
add
push
push
and
dec
insl
loopne
aas
sub
jo
into
mov
in
adc
leave
ror
mov
negl
cwtl
lret
imul
popf
in
ja
out
fildll
stos
or
add
push
outsl
cmp
push
jg
hlt
jnp
xlat
and
and
out
or
cs
and
push
mov
xchg
leave
in
pop
outsl
test
lds
or
arpl
adc
add
pop
and
xor
sbb
cmp
movsb
inc
or
dec
cmc
jge
xor
jbe
push
inc
pop
xchg
cwtl
fiadds
stos
loop
out
xchg
xlat
insl
test
sbb
sub
movsb
orl
push
aaa
jae
shrb
xchg
lds
ja
push
mov
cmp
mov
or
mov
dec
cmpsb
dec
dec
mov
push
inc
movsb
sbb
xlat
cmp
lret
sti
sbb
data16
adc
xchg
xor
int
stos
das
push
mov
push
leave
xlat
dec
sub
or
mov
adc
mov
repnz
outsb
cli
rorl
fxch
cmpb
imul
mov
cmpsl
sbb
mov
les
lds
icebp
push
shll
cli
js
push
lcall
mov
and
xor
pop
ret
movsl
jecxz
aaa
imull
lret
into
push
jl
jno
mov
imul
fidivl
es
test
xchg
mov
aaa
hlt
mov
pop
xor
cmp
push
sbb
popa
ds
mov
insb
movsl
cld
les
mov
movsb
nop
ret
lods
jns
data16
mov
pop
aaa
cmc
out
mov
movl
inc
cltd
das
pop
mov
ret
push
push
nop
sbb
in
or
js
dec
pop
cmp
out
out
mov
dec
jl
popf
adc
movsb
xchg
mov
pop
cmc
test
cmp
into
xor
stos
mov
ljmp
imul
or
xor
or
mov
mov
cmp
adc
dec
imulb
loopne
xor
mov
push
ja
add
adc
fwait
sbb
daa
clc
push
stos
jmp
push
shlb
xchg
fadds
dec
rcrb
cltd
mov
push
mov
lods
pop
sub
adc
mov
mov
hlt
sar
insb
stos
iret
jge
mov
movsb
xchg
add
js
pop
int3
scas
fstl
sub
cli
fidivrl
pusha
mov
pop
inc
jle
movsb
jnp
pushf
mov
xor
out
test
stc
cli
pop
imul
mov
sarl
or
addl
aad
xorb
stos
push
repz
dec
mov
lds
bound
jge
mov
fbld
insl
dec
push
sti
pop
int3
cld
xchg
cmp
xchg
inc
aaa
mov
and
mov
dec
iret
add
testb
dec
mov
or
fsubrl
fldt
out
dec
xlat
dec
sbb
add
and
xor
xchg
add
test
jecxz
cmp
cmp
adc
jmp
mov
pushf
loope
in
push
push
test
loope
mov
push
xchg
popa
cmp
fs
js
and
mov
dec
sub
sbbb
add
dec
adc
jns
xchg
lret
mov
sub
jg
dec
push
fdivr
cs
sti
mov
dec
ja
xchg
ljmp
movsb
movsl
fldlg2
push
fisubrl
lret
dec
lods
movsl
iret
inc
xchg
pop
lds
fistl
mov
add
stc
and
leave
jbe
rorb
test
shll
or
cli
dec
cs
sbbb
fdivr
shrl
rcll
aad
imul
push
stos
add
icebp
insl
negb
iret
push
cmp
xor
inc
pop
and
inc
addb
fnsave
inc
cmp
stc
mov
mov
or
mov
sub
cmp
cmc
mov
push
adc
les
imul
aad
cmp
push
cmp
push
mov
jp
lods
add
es
sbb
lods
in
xchg
sbb
dec
rorb
sti
push
sbb
xor
xchg
scas
fadd
pop
mov
fwait
stos
or
adc
jl
jae
xor
std
jg
test
xor
xchg
pusha
call
mov
or
mov
test
inc
pop
sti
jne
jl
sub
adc
push
xor
or
sbb
pushf
clc
fwait
sahf
xor
sbb
and
jo
mov
fxch
mov
xchg
imul
movl
adcb
adc
or
adc
lcall
xchg
push
cmp
xchg
or
ret
fincstp
ja
movsl
sbb
push
xchg
fildl
or
sarl
mov
push
sahf
cmp
dec
xchg
cmpsb
push
movsl
stc
aaa
jecxz
cmc
clc
pop
test
mov
lret
pop
dec
fidivs
lret
jg
fildll
pop
xchg
mov
fidivs
jp
fnstsw
pop
inc
xchg
jns
mov
mov
mov
push
adc
sub
push
xor
pushf
dec
imul
push
and
insb
inc
dec
dec
lcall
xchg
inc
cmp
pop
arpl
mov
xchg
jnp
dec
cmp
mov
rcrl
push
mov
imul
test
loopne
repz
daa
sub
cmp
jg
inc
jge
and
xchg
and
dec
jg
cmpsl
lods
fwait
xchg
es
or
fsubrl
repz
cs
adc
sbb
xchg
mov
adc
add
inc
pop
cmp
stos
xchg
push
jno
js
sbb
loop
inc
popa
into
jno
daa
je
je
dec
lret
inc
sub
shrl
loope
xor
xor
jno
shrl
dec
xor
gs
xor
imul
enter
and
mov
lds
imul
shl
xchg
add
xchg
or
inc
cmp
sub
and
test
mov
or
jle
jne
pop
outsb
xor
push
cwtl
xchg
imul
or
pop
push
pop
loopne
xchg
sub
jae
test
mov
fwait
adcb
fidivs
inc
lds
cld
shr
lcall
sahf
out
pop
and
mov
push
jle
xlat
or
sahf
xor
out
dec
mull
pop
enter
pop
dec
dec
cs
xor
mov
cmpsb
ja
std
les
mov
shll
ljmp
or
scas
cmp
in
int
jno
movsl
arpl
push
movsl
xchg
mov
jnp
sbb
stc
jbe
sbb
or
das
insl
sub
xlat
or
jp
add
test
outsb
or
push
arpl
pop
je
xchg
dec
sahf
loop
dec
mov
cmp
insb
insb
inc
add
lcall
ds
daa
jle
cmpsl
data16
mov
shl
push
mov
mov
sub
ss
mov
addr16
into
cmp
jecxz
cmp
push
out
popf
int3
cs
xor
test
add
jl
mov
and
enter
cmc
jecxz
fwait
adc
test
shll
fdivr
adc
fidivrs
mov
adc
push
sub
mov
inc
mov
sahf
mov
cmp
sbbb
fnstsw
or
add
popf
imul
xchg
xchg
lret
pmullw
aaa
bound
lds
sti
xor
cmp
or
hlt
adc
add
repnz
in
popa
in
xchg
stc
data16
pop
call
push
adc
xchg
mov
adc
adc
inc
mov
imul
lock
fistl
int3
pop
mov
ret
mov
jns
clc
movsb
iret
jecxz
and
popa
pushf
loope
mov
sub
jae
jbe
adc
and
mov
in
fldcw
xchg
leave
mov
inc
mov
cld
push
xchg
adc
sbb
fsubrl
pop
loop
rorl
cs
mov
fs
and
fsubrl
ljmp
scas
test
dec
pop
movsl
lock
ror
cltd
mov
hlt
xchg
push
loopne
ret
out
in
inc
imul
insl
ret
dec
sub
or
adc
clc
cmp
sbb
lock
cmp
pop
sarb
sbb
orb
aas
push
jno
es
jbe
add
ret
addr16
lea
and
lds
add
bound
xchg
lahf
shrl
bound
push
jle
cwtl
mov
loope
jno
je
mov
inc
daa
call
les
mov
jecxz
adcb
scas
push
push
insb
jo
rolb
pop
jne
mov
repz
pop
sub
sbb
out
cmp
pop
arpl
jbe
js
inc
into
clc
mov
or
inc
loopne
inc
mov
lods
sub
pop
push
push
cmpsb
xchg
repnz
sub
mov
pop
sahf
hlt
ret
and
shrb
daa
fbstp
push
sub
jne
add
pusha
sbb
rorl
push
fs
adc
cmpl
sbb
mov
dec
mov
xor
add
icebp
test
repz
int3
xchg
int
mov
std
push
and
mov
sub
sahf
aad
aad
and
and
ds
test
arpl
add
or
adc
cmp
repnz
xor
add
ficoms
cmp
aaa
int
loop
lea
mov
inc
adc
fsts
mov
pop
call
pop
xchg
cmpsl
mov
addr16
or
sbbb
adc
iret
inc
pop
das
cli
pop
adc
jmp
or
imul
les
fmull
loope
xchg
subb
stos
shlb
popf
jbe
mov
sub
rorl
and
pop
aaa
out
je
sbbb
mov
and
imulb
jge
push
movsl
ds
daa
sbb
or
stc
push
sub
cmpb
push
add
ss
cmpsb
insl
iret
out
or
xchg
aad
mov
jbe
out
out
adc
fiadds
add
lret
mov
add
nop
mov
push
add
pop
mov
push
jnp
aaa
shl
arpl
shll
sub
inc
and
fwait
inc
jmp
fldt
xchg
inc
dec
dec
add
cmpsb
push
mov
je
xor
sbb
subb
ja
pop
or
mov
repnz
pop
xchg
shrl
mov
sbb
test
aad
sbb
std
outsl
xor
dec
mull
repnz
pop
in
insb
pusha
in
lcall
mov
mov
mov
data16
sahf
jg
mov
dec
inc
stos
mov
inc
push
inc
jmp
mov
sbb
xor
cmp
jnp
push
mov
rol
aas
pop
rep
adc
popa
mov
cmp
into
loope
cmp
inc
out
sbb
popf
mov
int
mov
std
xchg
mov
out
cmpsl
inc
ret
shrl
jge
push
outsl
pushfw
inc
std
imul
dec
xchg
sbb
mov
inc
std
jae
adc
cmp
call
clc
int3
xchg
adcb
ret
xor
push
mov
cli
push
xor
daa
cli
scas
or
cmpsb
cmp
jecxz
xchg
mov
mov
addr16
jb
sbb
cmc
cmp
jge
clc
mov
add
loop
mov
cwtl
mov
loope
pushf
sub
xchg
loopne
and
pop
jbe
aam
fidivrs
dec
add
mov
and
or
test
cwtl
xchg
or
pop
push
inc
aas
cmp
add
sarl
inc
xchg
ja
test
insb
mov
xchg
mov
jnp
ret
fsubp
and
and
call
lods
mov
xchg
jg
lock
xor
sbb
shr
push
mov
xchg
push
cmpsl
loop
sub
lea
mov
imull
out
shll
push
shlb
add
adc
xchg
mov
notl
into
pop
xchg
jae
xchg
int3
jb
mov
in
sarb
lods
xor
arpl
lock
dec
aam
nop
sub
mov
cs
push
pop
int3
retw
rcl
sbb
nop
fisubs
ret
mov
mov
ja
jno
jne
and
enter
in
push
ret
mov
test
cmpsb
jecxz
fwait
and
mov
pop
js
aad
xchg
mov
in
adc
icebp
les
loopne
mov
not
cmp
movsb
adc
icebp
push
test
cmc
jno
xor
mov
insl
dec
orl
xorb
push
add
out
jl
sti
idivl
ret
add
mulb
mov
add
dec
pushf
pop
pop
jb
sub
cmp
in
jg
inc
cmp
xchg
push
inc
loopne
test
fcoms
cmp
sarb
subb
scas
test
aaa
adc
in
movsl
js
push
shlb
in
xchg
lea
jo
nop
cld
or
outsl
iret
push
mov
sub
test
mov
js
jb
iret
mov
mov
mov
aaa
test
test
dec
in
fistl
mov
and
lcall
addb
pushf
sbb
gs
xchg
and
jl
jge
pushf
jo
cmp
js
fistpll
aaa
int
in
cmp
mov
dec
cli
mov
pop
popa
fsubs
jbe
inc
flds
popf
adc
mov
and
cmc
push
pop
divl
popf
inc
addr16
sbb
movsl
aam
push
flds
insb
hlt
sbb
inc
shr
lods
sbb
sbb
pop
cmc
add
pop
std
imul
dec
pop
aam
rcll
mov
scas
lahf
sbb
sti
xchg
lret
pop
leave
faddl
pusha
arpl
xchg
iret
or
out
fiaddl
fstl
xor
or
cmp
mov
jae
data16
loopne
sbb
lahf
xchg
push
test
jno
xor
loop
sub
cmpsl
in
adc
mov
out
mov
stos
push
fsubs
push
inc
push
outsb
aam
push
sbb
inc
lea
cmpsb
shll
inc
xor
into
xchg
add
aam
lds
dec
pop
imul
shll
xchg
cmpsb
loopne
out
je
mov
out
inc
aaa
out
pop
jnp
int3
adc
sbb
xor
dec
lcall
adc
or
xor
lea
popf
testl
jge
cs
cmc
or
fistpl
inc
xlat
rcr
fildll
ljmp
pusha
adc
jns
sub
pop
jle
negl
dec
push
mov
sti
outsl
into
cmp
and
int
int
lret
jbe
out
xchg
repz
jb
push
popf
push
jbe
test
mov
bound
in
sbb
jbe
pop
in
loope
lds
add
ret
out
push
mov
or
fsts
xor
cmp
cmp
mov
insb
aam
fsubl
paddsw
ret
inc
pop
inc
aam
pop
push
repz
adc
dec
push
sbb
in
xor
cmp
mov
jbe
cltd
lods
iret
rcrw
jmp
add
aam
ds
into
fdivrs
sbb
push
mov
mov
repnz
inc
idivb
xchg
js
mov
ljmp
sub
mov
lods
jmp
dec
dec
stos
pop
inc
faddl
mov
rolb
arpl
cmp
xchg
int
stos
mov
sahf
and
mov
adc
xor
adc
scas
mov
je
testl
sti
out
mov
and
xchg
hlt
insl
sub
xchg
pop
mov
push
sahf
lea
or
adc
xor
loope
in
cmpsl
inc
enter
xchg
data16
xlat
jle
hlt
sbb
in
mov
in
add
ja
push
mov
pop
ss
sbb
insb
sarl
lods
test
insb
in
loop
cmp
out
mov
iret
daa
or
mov
add
sbb
sbb
test
cmp
fcom
ljmp
jl
adc
and
mov
loopne
adc
xchg
push
and
leave
scas
js
sub
and
pop
jmp
xchg
xor
cmp
es
mov
adc
mov
imul
sub
adc
imul
out
scas
out
push
daa
xor
shll
in
add
lods
cmpsb
pop
out
stos
repnz
outsl
repz
jnp
xchg
les
pop
jecxz
jg
shll
pushf
in
lret
sbb
outsb
or
rorb
jg
sti
outsb
xor
jns
into
mov
addr16
jge
pop
addr16
movsb
ds
and
sub
xor
adc
lods
mov
adc
lock
stc
and
fiadds
inc
jo
inc
dec
dec
or
and
pop
sarl
movsl
aad
xchg
xor
and
cmp
dec
jecxz
pusha
jge
rolb
or
adc
pop
dec
jecxz
shrb
or
int
mov
ror
dec
out
mov
sarb
aas
pop
fwait
iret
test
jbe
lods
or
dec
daa
ret
fidivrl
cltd
sbb
jo
mov
out
push
mov
in
cmpsl
daa
sub
xlat
mov
pop
jle
or
cli
fwait
sbb
cmp
popa
lock
rolb
jl,pt
mov
fdivl
push
mov
add
inc
stc
rorl
xchg
push
negl
insb
out
sub
jae
inc
push
push
jo
cmp
inc
mov
leave
sbb
push
jne
sbb
stc
loope
cld
out
cwtl
add
mov
test
sbb
push
jne
push
inc
iret
inc
jp
loopne
or
lea
cmpsb
ret
std
push
sub
arpl
jo
inc
or
and
jo
and
push
add
test
cmc
bound
incb
push
rep
inc
cmc
pop
dec
fs
pop
pop
fcoms
cmc
cmp
call
loopne
or
jo
xchg
cmp
insl
scas
mov
sarl
hlt
subb
sbb
jge
aaa
sub
popf
mov
or
dec
and
popa
iret
js
xchg
out
pop
jmp
lret
lret
les
mov
nop
pop
data16
inc
notl
adc
jo
pop
sbb
mov
lret
sbb
push
add
popf
repnz
adc
pop
ret
pop
test
sbb
fistps
inc
cmp
out
xchg
jbe
daa
adc
pop
add
cs
ror
pop
push
bound
rorb
outsb
jb
pop
sub
fcompl
cmpsb
fildl
and
lret
or
stos
loope
dec
fstps
mov
outsl
xor
mov
ss
push
cmp
dec
js
jbe,pn
sbb
cld
xchg
pop
jge
sahf
stc
mov
adc
dec
dec
and
jnp
ja
xor
cmp
sarl
mov
fdivp
mov
insl
or
mov
lret
xor
cld
pop
xor
sbb
adc
hlt
push
mov
fsubr
xchg
xchg
int
pusha
mov
lahf
pusha
inc
loope
aas
test
cmp
sbb
fdivl
out
push
daa
pushf
or
popf
jb
rorb
sahf
ret
ja
fcoms
sub
lahf
sbb
xor
xor
loopne
js
sub
and
mov
push
and
cmp
iret
mov
pop
test
addb
sub
and
sub
insb
push
mov
cltd
popa
test
ds
add
fwait
cmp
mov
pop
jno
mov
jne
shrl
repnz
faddl
pop
add
sbb
aad
cmpsb
lret
mov
fisubrs
test
addl
pop
and
or
adc
sub
inc
mov
cmpsl
scas
aad
and
or
xor
inc
ficoms
add
mov
inc
and
sbb
xor
xor
sub
iret
or
cwtl
test
daa
lahf
data16
push
dec
or
addr16
lret
ret
repnz
pop
push
pop
mov
mov
cmp
aad
je
xchg
das
mov
cmpsb
inc
enter
xlat
push
out
in
andb
ret
mov
inc
pop
xchg
das
cli
int3
add
mov
mov
and
mov
pushf
or
sbb
mov
faddp
mov
push
inc
mov
cmc
mov
pop
clc
popa
les
mov
jp
adc
into
adc
pop
add
xor
cmc
mov
xor
push
mov
test
subl
jns
iret
dec
mov
push
shll
loope
fdivrs
nop
add
aaa
outsl
jecxz
mov
adc
outsl
xor
sbb
test
cld
or
rolb
adc
xorb
adc
mov
jbe
movsl
fs
popa
dec
test
out
mov
push
ja
insl
cmp
add
out
shlb
mov
xor
enter
jecxz
xchg
cmpsl
cmp
add
inc
cmp
test
mov
and
mov
cli
shrl
call
mov
out
jmp
shlb
inc
sbbb
mov
lahf
xchg
lods
inc
hlt
scas
jge
add
fidivrs
pusha
in
xor
cli
push
mov
sbb
and
aas
imul
xor
push
cltd
int
aas
inc
fwait
and
scas
test
sbb
jp
test
jo
dec
sbb
jne
mov
lock
adc
sub
sbb
lret
mov
or
jecxz
lods
icebp
in
out
jg
or
sub
xchg
pop
dec
jbe
dec
sar
daa
hlt
int3
imul
int
iret
xchg
sarl
pop
pusha
jb
xchg
mov
leave
sbb
fstps
xchg
and
pop
inc
mov
add
scas
sub
mov
sbb
repz
push
mov
inc
data16
rorb
fimull
ljmp
jecxz
xor
xchg
pop
add
inc
int3
cmp
adc
sbb
fildl
pop
jg
mov
repnz
push
rcll
cltd
mov
dec
daa
xchg
lea
inc
mov
repnz
in
inc
addr16
push
repnz
inc
les
add
mov
or
adc
dec
loope
mov
popa
mov
push
mov
fcmovu
lea
subb
mov
mov
rclb
loope
pushf
and
mov
fsubl
add
push
sbb
xchg
lods
cli
or
cmp
inc
dec
mov
bound
mov
ds
sub
cmpsl
mov
mov
or
mov
divb
mov
inc
mov
cmp
rclb
push
test
ds
cmp
cltd
clc
xlat
jecxz
push
lods
imul
adc
repz
push
adc
jae
inc
cltd
pusha
fisttpl
mov
mov
mov
dec
xchg
leave
mov
inc
inc
shr
in
mov
aaa
cmc
pop
std
arpl
movsl
cs
loope
or
lods
jnp
inc
sub
js
cmp
les
addb
aas
mov
mov
in
push
jl
and
loop
or
jge
add
push
lea
rclb
daa
movsl
cmc
mov
js
mov
movsl
and
inc
les
ret
jp
int
mull
xor
xor
xchg
inc
xchg
notb
cld
sarl
loop
pop
xchg
scas
jp
data16
dec
mov
js
xor
mov
pusha
lret
sbb
jp
mov
dec
mov
pushf
fsubs
jnp
xlat
cltd
imul
adc
popf
jge
pop
shl
and
mov
sub
cld
bound
xor
clc
or
in
divl
or
in
ror
sar
mov
sti
shrb
or
out
sahf
sarl
roll
xchg
xchg
addr16
mov
pop
mov
push
pop
outsb
xchg
sbb
mul
xchg
orb
js
pop
hlt
out
cmpsb
sti
or
mov
xor
mov
mov
call
mov
sub
mov
lret
clc
int
in
pop
test
pop
ret
xor
xchg
pop
and
jno
mov
add
cld
aam
adc
shrb
lods
fsubrl
sub
xchg
and
mov
cs
fbld
mov
mov
sub
in
push
lret
or
dec
mov
or
out
push
ss
addr16
jg
sbb
sub
mov
mov
fucomi
jae
push
out
jae
andb
aad
jmp
or
push
jb
sarl
or
xor
push
mov
repnz
sahf
sbb
push
and
jmp
aad
andb
mov
ret
adc
xorl
pop
fisubrs
or
stos
mov
xchg
fidivl
lahf
jmp
shrb
pop
cmp
pop
fisttpl
xchg
aaa
push
iret
sub
mov
cld
adc
movsl
aam
bound
mov
sub
mov
sub
sbb
and
mov
push
and
xlat
xchg
pop
test
addr16
les
mov
shll
cltd
and
jnp
clc
sub
movsb
in
imul
pushf
lds
add
add
or
or
shrl
mov
mov
dec
enter
ret
outsl
xor
out
jle
sub
jg
ffreep
in
in
cld
movsb
and
xchg
cld
fldcw
sbb
xor
mov
cmp
jb
cmp
shll
pop
mov
push
mov
ret
inc
popl
xchg
stos
call
lret
popa
push
test
sti
mov
push
add
xor
mov
test
mov
mov
nop
jae
das
mov
rorl
push
in
cmp
stc
int3
sub
aad
inc
dec
outsb
mov
ljmp
shll
adc
fwait
jbe
imul
mov
adc
cli
sub
dec
icebp
inc
xor
scas
adc
les
dec
sbbb
xor
adc
cltd
inc
xchg
nop
pop
inc
cmp
jb
vmovapd
pusha
adc
in
or
mov
lock
jnp
sub
movsl
push
mov
sti
mov
scas
sub
scas
add
push
push
js
testb
cmp
xchg
lods
mov
fistpl
inc
repnz
adc
jo
inc
push
inc
aaa
popa
xor
jbe
nop
mov
enter
mov
xor
xor
jecxz
dec
jo
jb
xchg
xor
dec
jne
clc
jns
mov
jle
and
mov
mov
in
mov
pusha
out
push
jbe
xchg
cmpsb
repz
pop
shlb
sbb
ficomps
sbb
jnp
scas
jmp
aaa
sbb
mov
dec
arpl
cmc
int3
popa
xlat
dec
loop
popf
iret
das
cmc
ss
lock
daa
sbb
clc
into
xor
inc
inc
hlt
movsl
jecxz
sub
not
and
cmp
inc
mov
push
add
scas
sub
mov
es
cmp
lock
pushf
jb
mov
pop
xor
fcmovnbe
mov
cmp
ljmp
test
inc
inc
lock
cli
into
cmp
lret
xchg
movsl
xlat
adc
mov
adc
inc
push
fisubrs
pop
xor
push
xor
ret
jae
notl
jns
xlat
mov
mov
out
mov
ficomps
pop
push
jg
jecxz
or
pop
dec
adc
mov
cmp
sti
mov
mov
cmp
inc
leave
mov
cmc
mov
sub
jecxz
hlt
popf
jno
pop
mov
ss
xor
aad
cmc
imul
int
sbb
lret
imul
inc
scas
in
lcall
add
mov
movsb
sbb
xchg
dec
mov
sub
mov
test
adc
xor
pop
cmpsb
loop
xchg
dec
stos
xor
loopne
lcall
sbb
xlat
dec
test
inc
cmovo
popa
dec
outsl
movsb
lcall
add
mov
hlt
fildll
insl
clc
int
adc
ljmp
testl
pop
cmp
imul
lcall
push
xor
arpl
add
in
in
pop
lods
in
mov
xchg
int3
cmpsl
stos
pop
lock
lods
ficoml
rolb
cwtl
push
push
push
sbbb
aaa
mov
push
mov
xor
fisubrl
mov
adc
scas
xor
xchg
loop
rcrl
xchg
loope
and
imul
popf
cmp
cmp
dec
push
sbb
xchg
dec
xchg
fcompl
push
imul
cmp
stc
xor
out
rorb
inc
pop
lahf
movl
push
inc
sbb
lea
mov
add
inc
push
call
mov
sbb
mov
mov
dec
push
inc
xor
cmp
mov
icebp
inc
std
mov
xor
movsb
adc
mov
cs
out
sbb
pop
dec
adc
shll
sub
cmp
jmp
icebp
jl
xchg
insb
mov
mov
out
push
xchg
enter
mov
popa
fdivr
lret
daa
pushf
pop
gs
in
repnz
outsl
mov
mov
flds
or
sbb
pop
jle
adc
stos
mov
fiadds
out
out
or
aas
jg
filds
jb
mov
mov
in
sbb
enter
adc
xor
aam
pop
pop
shlb
loopne
je
scas
divl
pop
addr16
push
lock
xor
lret
les
in
ss
mov
and
push
inc
daa
or
test
dec
adc
pop
sti
sub
jb
insb
movsb
psrlq
or
dec
loope
out
inc
into
xchg
testb
mov
aad
sub
dec
push
dec
fistpl
inc
and
repz
mov
mov
out
cmp
adc
addr16
or
pushf
shrl
lods
and
sbb
jl
stc
insb
cli
lea
xor
insb
fldlg2
jno
aad
rcll
pop
int
jbe
enter
jbe
les
aas
or
mov
inc
enter
cmpl
mov
xchg
mov
xchg
lcall
orl
dec
enter
pop
test
stc
pop
lcall
jae
in
xor
shl
push
sub
and
or
add
shlb
dec
nop
sbb
push
bound
nop
in
out
pop
test
arpl
fs
sub
pop
call
mov
scas
or
sbb
xchg
arpl
mov
mov
cld
add
incb
int3
push
lahf
xchg
popa
pop
ret
ficompl
xor
shlb
push
pop
ret
jns
repnz
pop
scas
mov
jmp
dec
pop
cmpsb
outsb
ss
loope
popa
push
sub
int3
lret
or
push
dec
aam
inc
fs
filds
cmp
ret
pop
ss
mov
push
scas
out
out
std
test
cld
movl
cltd
call
inc
mov
sub
test
cld
pop
push
sub
push
out
fcmovbe
sub
fisubrl
mov
xchg
pop
xor
mov
xchg
loope
mov
pop
pop
in
or
aad
dec
inc
and
mov
fs
cli
iret
adc
fwait
mov
jl
cmpsl
add
xchg
inc
jmp
daa
sbb
sub
lret
sbb
sbb
mov
mov
and
out
scas
imul
dec
dec
rorl
movb
fidivl
daa
stos
lahf
cmp
in
and
inc
push
call
mov
test
mov
outsb
pushf
das
pop
inc
mov
fists
push
mov
mov
cli
adcb
jns
in
push
mov
inc
repz
fildll
aas
pusha
leave
insl
and
push
jmp
lods
mov
lock
movl
and
xchg
in
and
imul
inc
inc
gs
shl
test
xchg
pop
imul
aad
push
and
je
inc
es
stos
loop
dec
fisttpl
pop
popl
jnp
iret
insb
aam
pand
cmpsb
pop
pop
cmp
jb
test
or
jmp
js
pop
mov
mov
ds
shl
mov
xchg
scas
adc
es
push
fs
outsb
aas
sbb
gs
outsb
lret
and
ljmp
idiv
dec
cld
mov
adcb
cmpsb
mov
add
repz
xchg
and
or
push
rolb
pop
pop
andl
mov
inc
popf
imul
popf
int
or
in
mov
cmp
loopne
xchg
and
mov
lods
xchg
lds
push
aam
bound
jnp
test
outsb
push
lods
sub
mov
mov
jp
sti
jno
jo
push
ss
mov
push
clc
mov
sub
pop
insb
mov
xlat
mov
sbb
pop
jmp
nop
inc
sbb
sbb
das
outsb
push
push
in
int3
daa
pop
test
sbb
das
ja
repz
sbb
adc
push
push
int
mov
xchg
movsl
jg
jns
jmp
sbb
ljmp
int3
mov
dec
in
aaa
pop
push
mov
dec
lahf
out
mov
sbb
movsb
push
stos
test
cmp
pop
addb
cmp
mov
cmp
push
dec
test
push
inc
inc
or
xor
lock
ljmp
mov
lea
out
or
xchg
stc
notb
pop
test
dec
stc
xchg
ret
int
mov
jmp
cmp
sahf
out
sbb
xor
mov
insl
sbb
insb
fsubl
sbb
sbbl
mov
cltd
iret
jo
push
leave
dec
dec
bound
hlt
add
inc
fnsave
shl
jnp
popa
mov
cs
out
ja
nop
out
mov
ja
mov
pop
and
xchg
fucom
sbb
push
sbb
jmp
xlat
sbb
jmp
or
mov
das
mov
fwait
outsl
mul
jns
mov
cli
fwait
xchg
nop
jnp
imul
mov
sbb
ficompl
sub
xor
xor
sbb
xchg
cmc
dec
popa
jle
daa
jg
xchg
mov
pop
jnp
mov
iret
mov
jo
mov
dec
mov
fistl
and
inc
lahf
out
mov
jnp
js
adc
aaa
pop
mov
mov
and
out
cwtl
jno
inc
mov
call
idiv
sub
rolb
mov
insb
lock
mov
pop
lret
decb
aaa
scas
dec
enter
cmp
mov
cltd
fidivrs
cmpsb
mov
loopne
push
pusha
je
idiv
mov
pop
and
daa
mov
mov
stos
lock
push
push
jb
lds
stc
pop
jmp
inc
outsl
out
and
mov
mov
jl
sub
cmpb
mov
sbb
cli
mov
pop
mov
ds
xor
shll
int3
addr16
sti
cmpsl
std
les
add
adc
iret
jnp
int
ret
xlat
adc
mov
inc
jbe
push
inc
jnp
push
cld
js
repnz
pop
outsb
mov
sbb
mov
add
fwait
xor
mov
enter
mov
aad
into
inc
mov
sbb
repz
loope
adc
jno
jnp
mov
jo
pusha
sbb
insl
imul
adc
mov
cmpsb
or
outsl
push
push
inc
sbb
adc
adc
pop
fistps
cmp
xchg
aam
fisttpl
push
jl
aaa
mov
xchg
jmp
push
pop
xchg
xchg
jo
sub
bound
add
jmp
and
ficomps
sub
mov
pop
xor
mov
and
push
pop
sub
jecxz
dec
dec
clc
roll
or
mov
dec
cmp
pop
inc
in
adc
in
xor
nop
pop
les
pop
inc
outsb
mov
mov
mov
lock
ljmp
mov
aaa
outsl
gs
dec
cmp
orb
leave
mov
push
and
data16
jnp
shlb
repnz
adc
iret
mov
adc
icebp
out
cmp
int
mov
movsb
xchg
mov
or
pop
push
loop
sbbl
xchg
mov
lret
pop
outsb
pop
mov
sbb
push
add
cld
ret
fbstp
lods
aaa
pop
and
sahf
enter
and
inc
out
lret
orl
pop
or
mov
mov
lock
jg
mov
push
dec
aam
pop
rcrb
std
jno
cmc
in
jle
lret
mov
inc
int
sub
jecxz
push
cmp
idivl
inc
lods
shll
cmp
leave
test
jmp
sbb
dec
sbbb
aad
lahf
xchg
sbb
ret
daa
mov
dec
inc
inc
fld
cmc
pop
stos
sub
add
sub
cltd
mov
bound
es
outsl
out
leave
dec
dec
andl
pop
xchg
jns
or
adc
scas
mov
je
jae
adc
jg
push
pop
xchg
mov
lock
jp
scas
js
or
xorb
mov
sbb
mov
les
xor
arpl
adc
jge
lods
dec
sub
pop
lcall
les
shrl
mov
dec
popl
sbb
imul
xchg
rcl
and
push
notl
mov
iret
cmpl
cmp
dec
rcll
sub
mov
lods
cmp
or
xor
gs
cltd
sbb
inc
push
mov
xchg
divl
fisttps
inc
xchg
orb
xchg
cmp
dec
enter
mov
mov
in
in
repz
pushl
inc
cmp
ss
lcall
mov
xchg
push
arpl
jae
icebp
lock
movsb
jecxz
test
lret
rol
xor
repz
bound
pop
jne
int3
dec
xchg
insl
shlb
sbb
test
stos
std
mov
lcall
add
xor
jne
add
mov
jae
dec
inc
out
pop
arpl
out
xchg
neg
insb
inc
push
xchg
add
and
in
daa
out
mov
lods
and
sbb
js
mov
fdiv
pop
pop
sub
gs
cmp
mov
push
push
xchg
push
dec
lret
shl
cmp
or
xchg
orl
test
push
jge
mov
inc
rcll
and
push
mov
push
and
pop
lahf
subb
out
sub
bound
or
and
mov
rcll
push
xchg
sbb
mulb
pop
xchg
mov
call
stos
jae
insl
lea
adc
adc
aas
dec
fwait
mov
jnp
enter
sbb
xor
cwtl
jle
cmp
je
pop
push
or
cmc
orl
test
add
repnz
lds
mov
mov
mov
es
push
jmp
rorl
or
clc
mov
test
iret
cmp
pushl
mov
arpl
and
mov
outsl
xchg
dec
stc
jbe
aam
sub
pop
push
daa
scas
mov
and
mov
lea
xchg
push
scas
sti
stc
rcr
inc
push
pop
lods
daa
sub
xchg
rcr
and
aad
rclb
mov
cwtl
stos
sbb
out
out
xor
ja
mov
mov
inc
adc
ds
pop
leave
push
andb
js
hlt
push
and
stc
xchg
lret
push
xchg
xor
lock
pop
mov
rclb
shl
xchg
and
push
mov
sbb
lret
pop
dec
lret
movsb
repnz
ret
int3
outsl
call
in
jecxz
cmp
jg
fldt
fucom
adc
les
cmpsl
jbe
jecxz
fs
inc
test
cmp
pop
cmp
mov
or
and
les
sub
pop
popa
and
pop
into
inc
xchg
xchg
in
cs
gs
mov
push
xor
inc
cmpsb
out
les
mov
test
dec
inc
push
mov
sub
inc
mov
stos
jbe
cmp
leave
mov
jp
add
out
adc
jge
or
js
fcomps
out
fistl
mov
stos
movsb
loope
and
pop
jno
mov
call
dec
in
js
lret
test
xor
adc
cmp
adc
mov
pop
into
xchg
lea
or
lds
out
sbb
jb
add
dec
lcall
mov
test
fsubl
lock
pop
mov
rcr
adc
inc
pop
shll
ss
jae
pop
js
repz
nop
cmp
mov
xchg
inc
sbb
in
in
xchg
sahf
jno
jmp
mov
inc
imul
idivb
add
shlb
je
cs
pop
fwait
js
sub
repnz
aad
aad
pop
sbb
mov
hlt
mov
mov
adcl
lock
in
mov
je
gs
inc
aaa
aas
test
insl
rorw
inc
dec
xchg
jnp
pop
into
jmp
dec
shll
lcall
xchg
mov
out
adcl
ljmp
push
adc
shrb
cmp
sahf
push
jp
lea
stos
add
out
shlb
add
movsl
mov
xor
xchg
popf
aaa
mov
mov
jne
and
mov
adc
jge
repnz
inc
dec
lahf
mov
es
and
shll
inc
push
lcall
icebp
push
je
out
add
xchg
xchg
pop
sub
mov
loop
or
add
sahf
xchg
adc
fimuls
bound
shlb
lods
adc
mov
js
adc
inc
mov
js
outsb
sbb
ja
mov
subb
popa
or
xchg
dec
mov
mov
or
jp
repnz
and
hlt
and
into
imul
inc
fcmovnbe
mov
cmpsl
cmovp
jecxz
pop
ret
xor
pop
jmp
enter
pusha
cmp
test
xchg
loop
push
mov
sbb
mov
dec
push
cmp
addl
mov
mov
sahf
dec
test
pop
dec
xor
int
sbb
add
iret
mov
orl
in
push
xchg
jmp
jmp
popf
xor
test
test
jg
call
xchg
mov
sbb
jne
dec
cld
sub
pusha
in
push
dec
pop
xor
mov
mov
movl
inc
xchg
lahf
pop
mov
iret
in
lds
sub
xchg
pop
insl
mov
inc
sub
lcall
negb
mov
and
ffree
add
or
push
push
fisubrs
pop
js
andl
sub
and
aad
fwait
mov
outsb
or
lret
call
cmp
xor
in
ja
jecxz
test
test
orb
jbe
and
cmp
scas
addb
xchg
cmp
jmp
iret
addr16
sbb
pop
mov
push
jmp
bound
mov
fs
xor
and
gs
out
inc
rcrb
fxam
int
cmp
mov
notl
lret
push
or
inc
popf
data16
popa
fwait
mov
insb
pusha
andl
inc
jecxz
addr16
mov
xor
xchg
test
cmpsl
mov
fistl
xchg
sbb
mov
hlt
jnp
imul
in
test
mov
mov
xor
fcomip
mov
push
add
sub
mov
push
pop
movsl
add
push
xchg
pop
add
jbe
or
sub
movsl
daa
addr16
fldenv
cs
sbb
push
cmpsb
rcll
pop
movsb
pop
loop
jp
adc
and
and
push
xor
popa
scas
fstpt
pop
xchg
ja
jl
aaa
loop
xchg
addr16
dec
push
mov
mov
sbb
inc
es
clc
sbb
int
pop
xor
inc
ja
fdiv
stos
test
inc
orl
loop
stos
dec
sub
xchg
ja
xor
push
iret
dec
jp
pop
mov
mov
movsl
mov
adc
ror
mov
mov
ljmp
mov
ret
insl
jae
pop
mov
rcl
mov
in
fwait
cmp
add
jg
inc
inc
inc
in
and
int
dec
sbb
das
cmp
jae
jnp
movsl
mov
inc
add
xor
stos
inc
add
xchg
xor
adcb
rol
arpl
fidivrs
xchg
and
rorb
pop
sub
and
lods
cltd
cmpsb
lahf
loope
iret
jnp
add
lods
sarl
mov
imul
pop
dec
outsb
jle
pusha
mov
xor
xchg
lret
pusha
push
aad
and
ret
insb
push
push
rcr
cmc
cmpb
fsubs
and
ss
pop
push
inc
pusha
in
xchg
fldcw
pop
xchg
adc
and
sbb
insl
iret
inc
mov
sahf
adc
nop
mov
cmpsb
mov
adc
xor
stos
sbb
sub
lea
sti
or
cmp
and
pop
lds
fnstenv
push
mov
mov
jge
stc
daa
dec
cmp
pop
cmp
out
xchg
add
sub
push
inc
sub
mov
js
loope
pop
insb
jne
sbb
les
mov
inc
test
push
push
lods
mov
outsb
xchg
sbb
aaa
mov
adc
test
test
fs
loop
bound
xor
cmc
inc
mov
mov
mov
push
mov
mov
int3
mov
clc
std
dec
jno
and
inc
icebp
and
adc
test
out
xor
int3
mov
enter
insl
in
jne
dec
mov
jge
pop
arpl
sub
lahf
lods
clc
jl
pop
fnsave
scas
dec
push
pop
and
roll
hlt
mov
setne
xor
popl
out
lret
jecxz
dec
test
rorb
jg
and
pop
cmpsb
cli
out
pop
or
jbe
adc
pushf
xor
addr16
pop
int3
lods
and
xchg
dec
insb
mov
imulb
inc
push
push
enter
inc
mov
jl
scas
scas
jne
cli
mov
inc
sub
xlat
popa
std
rolb
sub
jb
repnz
stos
arpl
mov
inc
test
jle
xchg
lds
lret
xor
in
in
lret
and
jp
fldenv
xchg
or
or
stc
dec
ret
sbb
cmpsb
mov
mov
adc
mov
repz
push
or
cmp
mov
xor
std
mov
js
sub
and
xchg
into
and
js
out
jae
outsb
ljmp
sub
rcl
pop
movsb
pop
push
xor
cmp
add
jge
push
test
fdivl
jns
push
aas
push
push
test
insl
xchg
test
mov
addr16
lea
add
adc
stc
test
ja
dec
inc
mov
push
lret
cld
les
mov
pop
imul
add
fwait
in
mov
pushf
cmc
dec
std
push
inc
flds
mov
cmp
jns
int
cld
cwtl
dec
jge
xchg
or
add
in
ss
and
cltd
xchg
and
out
data16
loope
pop
cmpsb
push
and
sub
insl
insl
pop
ljmp
xchg
divb
cwtl
jno
add
int
xor
push
pop
sbb
and
ljmp
push
popf
fs
popa
or
inc
lods
mov
fsubrl
pop
inc
test
rcrl
andl
or
sti
movsb
mov
add
sbb
fs
pop
push
sbb
pop
push
stos
dec
jne
in
mov
sub
xchg
es
pop
ret
adc
ljmp
pushf
cmp
or
push
or
and
xor
mov
mov
add
push
and
mov
lea
cwtl
push
rclb
imul
dec
mov
test
mov
jmp
enter
inc
lods
clc
lods
loope
cmp
pop
xchg
cmpsb
sahf
mov
jns
pop
cmp
push
cmp
xchg
in
xor
pop
shlb
sub
jg
and
mov
cmp
inc
pop
push
addr16
push
int
aad
mov
jbe
or
fwait
or
mov
imul
in
into
jmp
pop
das
push
mov
outsl
insl
ret
inc
cmpb
inc
pusha
daa
loop
adc
movsb
mov
mov
mov
lret
pop
xor
adc
dec
dec
mov
pop
dec
push
inc
mov
hlt
mov
cwtl
hlt
clc
ljmp
aam
scas
in
lods
ljmp
lret
sub
lret
and
push
sarb
arpl
xor
mov
lods
xchg
stos
in
add
icebp
lahf
jle
inc
mov
cmp
jnp
or
mov
push
cmp
pushf
dec
loope
mov
clc
and
mov
scas
and
or
or
add
adc
xor
adc
add
decb
push
addr16
in
sbb
or
out
dec
jae
mov
or
mov
and
dec
jae
and
rcr
sbb
fnsave
das
mov
pop
push
mov
fsts
aas
cmp
in
lds
xchg
imul
mov
imul
popf
jbe
jle
jecxz
adcl
outsl
stc
xchg
xchg
xchg
add
cltd
add
jecxz
call
xor
push
cld
pop
iret
loopne
mull
or
add
mov
dec
outsl
mov
pusha
mov
and
mov
mov
cmp
shl
xchg
sbb
inc
fidivrs
rcll
icebp
mov
adc
popa
jle
idivl
xorl
add
mov
and
lods
test
enter
jo
dec
nop
mov
loop
pop
outsb
inc
cld
sub
mov
mov
push
iret
iret
and
jle
dec
sub
cmp
int
cmp
dec
pusha
pushf
mov
cmc
xchg
mov
dec
push
je
push
pand
addb
mov
test
addb
pop
std
rcll
lret
addr16
mov
fists
out
cli
jl
in
jg
push
shll
add
sub
cmp
ror
icebp
xor
push
dec
xchg
mov
test
mov
lcall
ss
cmp
rep
and
inc
sub
stos
dec
outsl
inc
pop
js
int
mov
push
push
imul
and
xchg
stc
mov
mov
add
enter
stos
ret
and
insb
sub
inc
xlat
xor
cwtl
or
adcb
and
lods
push
mov
sub
mov
jge,pt
hlt
sub
push
mov
cwtl
xchg
add
cmp
mov
mov
in
test
jae
and
mov
les
jnp
push
xor
add
addl
fwait
arpl
leave
cmp
dec
xor
xchg
ror
in
daa
stc
dec
mul
scas
std
into
sbb
and
testl
test
test
dec
ficoml
jecxz
ljmp
stos
movsl
clc
pop
outsb
jb
aam
ret
sub
mov
push
jl
mov
push
pop
add
stos
xlat
cmpsb
xor
sub
ljmp
in
inc
lods
cltd
jo
or
shrl
jnp
jl
inc
lahf
aas
add
imul
jns
push
add
jecxz
into
adc
test
enter
cmp
sub
jle
mov
bound
inc
xorl
shlb
hlt
mov
adc
inc
mov
imul
sub
mov
ret
in
shl
in
call
test
out
inc
je
mov
mov
out
mov
fs
aam
ds
add
jb
test
arpl
aas
cmpsb
out
xor
nop
movsl
lds
rcll
cmp
pushf
fdivr
enter
lret
push
cli
popa
lock
cmp
adc
popf
jmp
lods
mov
mov
out
pop
aaa
or
ds
jne
push
xor
and
mov
insl
lret
jl
daa
push
xchg
in
test
sbb
repnz
mov
test
mov
and
jl
cltd
and
mov
sub
sbb
das
mov
mov
mov
leave
out
cli
add
mov
jbe
dec
sbb
mov
movsb
scas
popa
adc
xlat
int
pop
addl
stos
jmp
mov
popa
xchg
imul
jb
das
mov
aaa
cltd
outsl
jg
insb
sbb
in
int
data16
xchg
scas
lret
or
dec
add
aaa
sub
cmpsl
icebp
xchg
push
cli
xchg
mov
sub
js
andb
cmpsl
mov
leave
outsb
or
jle
pop
push
add
sub
fstps
xor
pop
dec
rol
inc
adc
inc
pop
nop
inc
fwait
sub
cmovns
pop
scas
cmpsl
aam
ljmp
cmp
jae,pn
add
mov
push
cld
jl
stos
repz
or
pop
rol
push
inc
daa
mov
sti
xchg
xchg
pop
mov
dec
sub
mov
sbb
xorb
cs
sahf
xchg
pusha
lods
fst
xchg
cltd
mov
jmp
jnp
push
adc
decl
addr16
push
inc
mov
jge
cmp
xchg
mov
ret
loope
out
sahf
imul
pop
hlt
arpl
scas
insl
lds
fnstsw
sbb
scas
mov
mov
jl
fwait
mov
nop
dec
fwait
ret
cs
test
add
cmpps
and
loope
and
jl
test
xchg
aas
mov
stos
adcl
xlat
outsb
shlb
add
fmul
scas
lock
shrl
bound
jo
xchg
je
lea
addr16
mov
xlat
dec
or
push
sbb
mov
push
or
xchg
cmpsb
mov
xor
es
loope
roll
dec
cmp
mov
dec
mov
ds
and
jbe
cwtl
das
bound
mov
lock
loope
inc
shlb
xchg
jb
pop
or
sbb
shlb
test
sbb
cmpxchg
mov
insl
out
pop
add
mov
mov
in
mov
out
in
sub
push
ja
add
push
add
xchg
adc
and
cmp
cli
adc
ds
jb
filds
out
pop
mov
or
sbb
into
insl
inc
pushf
and
mov
xor
shlb
mov
je
jg
sbb
std
loop
cs
mov
mov
xor
into
fsubs
icebp
std
ret
cmc
js
call
cmpsl
lods
adc
cmp
or
mov
sti
movsb
pop
iret
mov
movsl
mulb
fdivl
test
adcb
cmpsl
cmp
mov
fwait
adc
rcrl
xor
cld
push
push
gs
enter
sbb
mov
rcr
mov
jne
js
daa
test
enter
xor
sub
sub
mov
leave
jae
pop
pop
xor
fcomps
jg
lret
xlat
icebp
push
inc
or
stos
pop
adc
dec
adc
sbb
jnp
enter
push
daa
fsubl
or
aad
sbb
mov
inc
mov
stos
in
in
jecxz
adc
push
sbb
xor
xchg
xchg
loope
mov
fdivs
mov
jle
mov
pop
xor
loop
lret
ss
cld
sbb
pushfw
shll
pop
pop
sub
frstor
lret
pop
or
mov
xchg
xchg
in
push
and
nop
popa
insl
dec
testl
insb
test
pop
sbb
neg
pushf
ljmp
xchg
jle
xchg
inc
scas
mov
cmp
inc
mov
xchg
mov
cmp
jge
aas
sbb
inc
arpl
insb
lock
mov
rolb
cmp
sarl
inc
mov
and
inc
xchg
mov
in
add
push
inc
push
popf
idiv
mov
int
dec
dec
aad
pop
aam
sbb
mov
lret
test
in
iret
jae
push
bound
push
jb
cltd
sbbb
clc
xlat
enter
xchg
lcall
jnp
pop
cmp
push
cmc
outsb
int3
and
int3
xchg
sbb
mov
pop
jo
nop
cmp
gs
aad
fwait
mov
stos
and
ja
leave
mov
mov
jp
mov
adc
icebp
jae
mov
jb
dec
insl
pushf
dec
jle
sbb
and
jmp
or
and
aam
xchg
int3
push
mov
adc
mov
dec
lcall
xor
out
call
bound
pop
mov
inc
xor
lcall
nop
push
xor
test
icebp
inc
push
sub
stc
cmp
or
lret
jne
xlat
cmp
adc
insl
negl
sbb
add
cmp
jl
lcall
mov
inc
jg
rcrl
xor
xchg
pop
pop
jae
sub
leave
pop
push
xor
adc
addr16
or
test
mov
mov
cmp
sub
sub
mov
scas
out
loop
repnz
cli
aaa
sub
sbb
sarl
pop
mov
mov
iret
les
mov
mov
add
ljmp
xor
and
out
dec
in
xor
cli
aam
xor
mov
loope
stos
int3
daa
mov
inc
sub
lret
stos
xchg
lret
jl
cwtl
jns
lahf
xchg
mov
adc
jl
xchg
or
adc
sbb
jl
jnp
dec
mov
fmuls
jnp
mov
orb
push
in
test
cmpsb
mov
imul
cmpsl
dec
iret
adc
pusha
add
arpl
popa
adcl
mov
lods
add
fsubs
cmp
cmp
push
cmp
dec
fsubs
js
je
jmp
ret
andb
test
or
jno,pt
lret
push
rcl
dec
inc
push
adc
cwtl
xchg
pop
pmaxub
shlb
mov
push
add
lods
int
mov
fucomp
inc
xchg
pop
and
pop
xor
lret
push
pop
faddp
pop
dec
test
out
gs
mov
fdivs
fprem1
ret
cmp
jae
lods
sahf
inc
repz
xchg
pop
test
aas
and
xchg
pop
cmpsl
sbb
mov
jbe
inc
test
adc
or
jle
sar
mov
hlt
leave
push
xor
fildll
xchg
jb
xor
add
push
cmpsb
ret
mov
mov
inc
scas
inc
mov
and
push
xchg
add
ret
dec
ljmp
clc
push
add
mov
mov
pop
aaa
inc
mov
pushf
int
in
inc
pop
and
add
int3
add
repz
loope
popf
popf
cli
sahf
xor
jno
pop
push
mov
push
and
dec
out
repnz
adc
sub
in
fmul
nop
sarb
addr16
mov
sub
stc
mov
out
jmp
in
add
inc
dec
xor
movsb
iret
pop
stos
jb
mov
add
sbb
add
fstpl
and
dec
pushf
aaa
les
mov
sub
ss
loop
add
in
rcrl
das
push
dec
insl
mov
adc
stos
aam
and
out
add
cmp
leave
out
or
sarb
xor
and
outsl
xor
sub
dec
push
leave
sub
mov
jnp
inc
adc
mov
rol
cmp
lock
js
in
outsl
dec
mov
aam
add
push
iret
out
fnstsw
cmp
je
popf
mov
push
inc
into
push
jo
filds
mov
aas
cmp
hlt
aas
sub
in
dec
mov
push
movsb
scas
das
sbb
leave
and
sbb
out
pushf
movsl
sbb
lret
cwtl
mov
and
imul
mov
je
clc
add
inc
push
test
xor
cli
add
sbb
ljmp
iret
push
cmp
jne
cltd
sub
push
mov
jp
or
xchg
adc
xchg
pop
and
push
mov
dec
out
and
cmp
ficomps
cs
or
es
ja
jbe
movsb
push
repnz
hlt
pop
call
push
and
pushf
pusha
stos
mov
jns
xor
sub
rcr
dec
divb
repz
sti
jecxz
cmpsb
mov
cli
inc
cli
lea
mov
cmp
dec
inc
cwtl
das
or
inc
jecxz
xor
mov
add
sahf
jo
outsl
push
into
pop
out
pusha
jbe
lahf
cmp
pop
std
mov
dec
inc
popa
cmp
ds
inc
movsl
xor
scas
jne
pop
xchg
fs
mov
hlt
xor
fwait
push
cmp
mov
jo
and
add
xchg
popa
sub
fnstenv
arpl
dec
pop
mov
mov
pop
add
arpl
dec
or
mov
xor
mov
mov
dec
pop
inc
jmp
fistl
mov
cmpsb
icebp
push
hlt
sahf
mov
push
test
test
shlb
stos
sbb
in
movsl
int3
xor
out
int3
sub
sbb
dec
testl
sti
sbb
aam
fimuls
ss
sub
xchg
in
movsl
xor
test
aaa
shrb
add
xor
or
insl
repz
and
add
pop
push
xchg
mov
and
push
lock
outsl
inc
nop
sbb
test
jl
and
mov
movsb
xor
sahf
mov
jl
mov
cltd
or
push
sbb
into
inc
insl
push
ficoms
mov
mov
lahf
jne
or
jp
push
jno
mov
xorl
sbb
addl
scas
arpl
mov
lahf
cmpsb
scas
pop
mov
out
cli
jge
xor
nop
out
fstpl
adc
les
xor
les
add
mov
mov
cltd
shll
fdiv
lea
dec
add
add
cmpsb
lret
jl
ja
pop
add
fdivl
jl
mov
iret
bnd
mov
scas
les
test
mov
loope
aas
add
inc
ljmp
loope
lret
ficoml
pop
es
sti
loop
dec
stos
cltd
out
sub
push
aaa
stos
mov
push
jb
repz
not
mov
sub
add
fcoms
iret
dec
movsb
or
aad
xchg
pop
push
lods
int3
das
bound
out
xchg
push
sbb
rclb
push
dec
dec
insb
fists
jp
sub
push
inc
push
outsb
test
pop
jnp
insb
xchg
aaa
xchg
push
ret
pusha
aaa
push
fwait
shll
cmc
cli
and
and
andl
lret
xchg
std
xchg
mov
mov
sub
and
aaa
test
loopne
add
rcrl
fadds
push
inc
imul
jle
and
add
dec
mov
data16
jle
dec
jne
pusha
clc
pop
pop
cmp
jnp
push
aad
aam
gs
scas
adc
movsl
sbb
jnp
shlb
insl
jle
fiaddl
jae
cmp
cmpsl
shlb
dec
xchg
sbb
loope
cmpsl
ljmp
faddl
jo
icebp
lods
subb
or
mov
sbb
mov
mov
int
push
cmp
je
sub
movsl
loope
jecxz
daa
shr
fs
leave
or
in
insl
and
adc
and
xchg
add
add
add
hlt
cmp
addr16
add
aad
mov
pop
xor
cmp
jp
mov
and
cmp
mov
arpl
jnp
and
pop
pushf
shll
pop
xchg
xor
pop
sub
cwtl
cmp
pop
mov
inc
adc
pop
jo
mov
test
cwtl
call
push
xor
jle
cmp
jnp
cmp
adc
jmp
in
dec
sahf
in
rclb
cmp
cmp
mov
movsl
fbld
mov
xor
movsl
in
push
insb
mov
psraw
cmp
je
out
sub
or
mov
hlt
mov
mov
je
imul
rol
adc
ljmp
pop
sub
cmpsb
out
push
scas
pop
dec
cmpsb
sar
out
cmp
pop
inc
insl
dec
cmp
mov
ljmp
pop
repz
and
ljmp
and
aas
pop
ljmp
sbb
add
nop
or
lods
aaa
push
sbb
sub
push
pop
dec
pop
sti
xor
in
xor
andb
push
push
pop
or
dec
inc
adc
iret
ret
fisubl
sbb
popa
pop
mov
test
mov
lea
imul
in
adc
bound
in
mov
jnp
into
cmc
jmp
scas
sub
mov
scas
mov
adc
pop
mov
icebp
jns
dec
xor
lea
sub
push
xor
enter
or
mov
jo
mov
mov
lea
js
mov
sar
add
stos
xor
xchg
fcompl
dec
insl
das
inc
shlb
roll
popf
xchg
inc
push
pop
xchg
shr
leave
insb
js
and
mov
pop
mov
call
cmp
and
ds
sub
rcll
nop
pop
dec
cmpsl
cmp
pop
nop
jb
pop
sub
jb
mov
fstpl
sbb
mov
js
and
mov
xor
adc
pop
push
shl
cmpsb
insb
call
inc
dec
jmp
hlt
cmp
dec
sbbl
xor
sarb
mov
insb
out
pop
mov
pop
dec
fimuls
cmpsl
arpl
adc
in
jnp
das
mov
lds
es
jo
lcall
into
inc
xor
cltd
jnp
bound
pop
xor
xlat
mov
out
push
outsl
and
sub
in
jbe
mov
les
pop
cmp
dec
in
and
hlt
or
xor
nop
xchg
mov
mov
dec
fnstcw
fdivrs
adc
add
dec
sbb
mov
xor
cwtl
popf
xchg
out
mov
cli
test
idiv
lods
pop
shll
adc
sarb
mov
outsb
divb
int
mov
insl
out
loop
and
insl
push
in
lret
and
dec
inc
addr16
rorl
add
jae
xor
sarb
mov
lret
scas
lcall
jmp
mov
jbe
dec
sub
cmc
add
or
sarb
mov
out
int3
cmc
and
out
mov
mov
xlat
loope
jns
xor
sahf
xchg
into
mov
repz
lods
add
pop
xchg
sbb
out
adc
add
ds
scas
ljmp
cs
inc
or
fstpt
mov
jp
sbb
mov
sti
jg
dec
xchg
push
dec
rcll
push
fnsave
sti
inc
mov
xor
out
pop
xor
adc
xchg
fwait
sub
xlat
insl
adc
cmp
bound
xchg
repz
cmp
sahf
cmpsl
js
out
add
jbe
push
pop
movsl
sbbb
aam
sub
or
les
pop
mov
popa
mov
add
ret
add
cmc
std
jl
outsl
ss
lcall
push
dec
xchg
cld
push
fldenv
fwait
cs
push
and
mov
dec
fists
add
test
push
pop
icebp
xor
scas
fdivl
inc
cli
in
lret
dec
push
stc
and
cld
leave
aad
sti
push
ja
pop
cmpsl
jmp
sub
dec
xchg
inc
push
aaa
dec
fwait
pop
js
mov
cltd
cmc
addr16
repnz
fldcw
sbb
xor
hlt
sbb
call
adc
inc
xor
dec
adc
or
je
mov
lea
lock
push
imul
jmp
add
out
sbb
sbb
lock
inc
xlat
jge
cmp
sbb
push
int3
sub
push
and
dec
mov
sbb
push
adc
or
scas
xor
je
fwait
xor
lcall
imul
jge
fwait
out
add
ret
xchg
leave
aad
test
movsl
jns
jb
xor
sub
es
lds
lods
sbb
push
cmp
add
aas
lods
outsb
mov
insb
iret
nop
adc
sti
xor
mov
aaa
mov
shlb
xchg
enter
mov
ficoml
sub
push
mov
xor
loop
std
repnz
jb
mov
pop
and
jge
test
gs
add
std
mov
push
insl
jmp
scas
adc
inc
and
leave
arpl
shll
jecxz
sbb
xor
out
push
out
popf
mov
mov
ret
mov
mov
in
push
lcall
popf
or
xchg
aaa
inc
popf
ds
ja
pusha
mov
mov
ror
ret
xor
lods
insl
sbb
into
lea
fmull
adc
ljmp
dec
inc
inc
fists
lret
insb
out
cmp
div
add
andb
dec
popf
jmp
mov
js
adc
and
call
mull
jbe
push
pop
xchg
xlat
and
scas
sbb
popl
adc
inc
cs
daa
and
jno
stos
stos
shlb
outsb
ds
mov
testl
leave
push
adc
push
sub
inc
test
cltd
fwait
je
cmp
jb
mov
pop
je
std
shll
in
int
int
repz
bound
add
out
add
push
lret
xchg
jns
xchg
es
add
xchg
rorb
stc
ss
es
andl
sahf
int
dec
sbb
lahf
xor
clc
data16
or
enter
jle
cld
sbb
pop
pop
dec
jbe
adc
ds
mov
aas
out
push
stos
xorl
pop
push
fs
lcall
dec
test
fldl2e
sbb
cli
rcrl
jmp
pushf
call
or
dec
ljmp
dec
add
pushf
loop
mov
cltd
enter
mov
subl
imul
outsb
adc
mov
call
movl
push
push
lock
pop
dec
add
mov
mov
fdivr
insl
imul
xchg
jmp
sahf
int
cld
sub
pop
add
js
mov
stc
jg
int3
aaa
inc
lea
pop
and
popa
cmp
sub
xchg
push
xorl
cmp
popf
int
and
ret
pop
jno
dec
icebp
cwtl
fwait
inc
outsl
das
pop
cmp
int
or
xlat
or
loop
lock
popl
mov
sti
arpl
pusha
push
ret
lcall
sti
xchg
popf
cs
sub
shll
xor
fdivp
in
sbb
pop
loopne
mov
das
sub
sti
fcoml
sti
adc
cwtl
stos
fninit
jb
push
scas
mov
insl
mov
add
or
sub
mov
mov
pop
aad
pop
inc
and
cld
xchg
cmp
mov
je
es
and
lahf
shlb
adc
lods
mov
pop
dec
cmpsb
inc
or
push
fs
das
ljmp
or
fistpll
jge
adc
jecxz
and
push
lock
mov
push
ret
sbb
rol
push
sub
cli
mov
jno
out
cmc
aas
xor
je
pop
fcmovne
fwait
jmp
jb
pop
scas
xor
clc
jb
inc
lcall
jp
icebp
out
fisubrl
mov
pop
push
ss
jae
and
lods
push
shl
jns
sub
xchg
inc
sahf
inc
js
fldt
fwait
sbb
int
inc
jae
mov
inc
inc
stos
adc
push
pusha
mov
cli
lret
cmp
repz
jne
fdivs
dec
xor
add
add
mov
lcall
mov
or
xchg
cli
aaa
clc
mov
cwtl
lds
mov
xchg
lret
stc
add
sti
mov
imul
test
andb
pushf
inc
sub
enter
fisubrs
cmpsl
mov
inc
test
les
pop
xchg
mov
movsl
jl
xor
xor
les
add
push
sub
push
popf
mov
xchg
xchg
push
stos
into
jb
and
into
jecxz
jnp
fildll
jle
cwtl
imul
aad
test
leave
lods
imul
mov
jb
daa
pop
das
push
imul
lcall
jae
mov
jmp
vhaddpd
jns
fs
xchg
cmp
dec
rol
sbb
lret
dec
dec
fs
cld
mov
in
fidivl
dec
and
ss
icebp
jo
loop
aas
jmp
jle
loopne
jae
xchg
and
sbb
dec
inc
cmc
adc
dec
xchg
mov
xchg
inc
or
xchg
insb
mul
push
push
or
jecxz
mov
ret
in
mov
cli
add
mov
jnp
mov
les
push
shr
mov
mov
aas
mov
pop
pop
xor
jns
mov
dec
push
pop
movsl
push
pop
movsb
or
dec
dec
lcall
dec
mov
push
and
mov
jb
popa
dec
lds
mov
gs
imulb
sbb
lcall
xchg
mov
ret
mov
outsl
add
jecxz
sti
shl
pushf
jge
mov
push
fs
aaa
fucomip
jo
lock
and
pop
insl
imul
shrb
xchg
stos
jne
ret
sbb
pop
and
inc
shlb
std
fs
fistpl
jp
ljmp
and
or
scas
hlt
mov
arpl
xchg
and
mull
jne
add
sti
xorl
xchg
rorl
adc
jge
xor
cmp
mov
inc
es
or
xchg
in
inc
mov
rclb
iret
xchg
mov
ret
loop
out
repz
shrl
xchg
ja
xchg
jnp
frstor
cmp
lods
sbbb
jle
jno
shrl
push
pop
das
pop
repnz
loopne
and
lock
or
adcb
xchg
mov
out
lahf
push
sbb
adc
inc
cmp
sbb
pop
pushf
mov
insl
xchg
leave
xor
xorl
xrelease
scas
rcrl
adc
stc
clc
cld
push
mov
sub
lock
ret
mov
sbb
rorb
push
jge
repz
aad
xchg
jnp
fsubs
and
inc
sbb
cli
mov
add
cmp
mov
scas
js
sbb
pushf
enter
push
inc
imull
aam
in
sub
push
sbb
imul
adc
sahf
inc
ret
xor
or
or
cli
cmp
add
and
jg
and
je
mov
cli
out
push
xchg
fnstcw
pop
and
lds
pop
or
add
dec
cli
cmpsb
jg
jnp
mov
jne
jle
adc
or
roll
inc
outsl
mov
xor
mov
mov
fidivrs
sbb
mov
or
mov
inc
dec
andb
xchg
mov
neg
push
dec
push
mov
lock
or
das
aaa
jns
je
mov
pop
or
dec
adc
and
and
cltd
fisttps
fcom
push
rcrl
imul
mov
pop
add
cwtl
in
ss
jns
outsl
jns
sub
adc
jns
sub
loope
sbb
pop
hlt
mov
icebp
jle
scas
mov
out
mov
repz
dec
into
iret
repnz
pop
into
out
mov
sub
ds
mov
cmc
sti
adc
fistl
xchg
stos
jg
and
jae
or
shrl
mov
jl
out
or
jne
sub
lahf
xchg
fwait
xchg
push
dec
aas
mov
jo
mov
movsb
xchg
pop
or
push
inc
jle
xchg
mov
loope,pn
dec
and
sbb
scas
pop
cmp
cmp
stos
icebp
in
adc
dec
dec
sub
fs
mov
mov
push
cmpsl
pop
js
pusha
mov
outsb
cli
mov
or
xchg
stos
repnz
cs
movsl
movsl
lret
popf
sbb
movsb
pop
xor
das
testb
mov
push
xchg
adc
or
ss
clc
push
inc
jp
inc
cmp
call
cld
push
outsl
push
xor
clc
xor
in
lods
js
dec
jle
addl
enter
mov
jne
pop
xchg
push
popf
xchg
movsl
mov
push
mov
insb
mov
adc
adc
or
or
dec
ret
leave
add
rorb
nop
idivb
inc
hlt
popf
stc
ss
sub
adc
out
or
andl
sub
jns
push
mov
and
cltd
mov
add
or
fbstp
fcomps
or
ret
jle
xor
cmpsb
lret
cmp
xor
or
sbb
xor
mov
repnz
sbb
cmp
jmp
cmp
xchg
pop
cli
push
xchg
add
stc
call
fwait
or
out
mov
and
adc
out
jnp
mov
negl
and
jbe
outsb
jo
mov
cmp
adc
imul
movsb
mov
or
enter
and
push
std
mov
leave
test
std
push
xchg
jmp
sub
push
add
sub
faddl
lret
loop
mov
xor
xchg
loopne
addr16
and
xor
inc
scas
test
imul
sbb
nop
add
cmpsb
push
xchg
inc
pop
jae
lahf
push
cmp
inc
mov
mov
add
and
inc
pop
jns
pusha
sbb
mov
out
push
mov
test
shrl
xor
lcall
sbb
dec
cmp
xchg
shl
lahf
rcrl
mov
pop
xchg
std
jne
ss
xchg
into
mov
sahf
sub
push
xor
mov
xchg
pop
in
mov
add
sbb
sub
insl
fisubs
mov
das
imul
or
popf
ja
andl
out
push
xchg
jo
add
jge
imul
enter
int3
xchg
jle
lods
cmp
jp
adc
jns
pop
pop
fbld
or
lods
movsb
inc
pop
pop
sahf
cmp
cltd
inc
mov
test
inc
inc
repz
out
cmc
xchg
iret
inc
sahf
cmp
gs
cli
pop
enter
ret
std
inc
push
daa
pop
stos
out
mov
jl
outsb
mov
and
dec
or
mov
fs
pop
fisubrs
sti
mov
inc
adc
xor
mov
inc
dec
test
push
pop
sbb
xlat
scas
bound
stc
cltd
js
sahf
sub
lods
cmpsl
xor
dec
mov
ficoml
aaa
icebp
jbe
jmp
sbb
sbb
jmp
dec
mov
fs
cmp
cmp
dec
sbb
out
inc
push
daa
fnstcw
pop
push
test
in
cmp
cltd
cltd
sub
inc
mov
or
push
ds
or
pop
hlt
iret
xor
cmp
sub
xor
filds
jne
dec
pop
mov
pusha
fwait
mov
xlat
dec
or
or
jmp
mov
sub
add
insl
mov
push
iret
loope
pushf
inc
test
sbb
adc
ds
imul
jno
pop
ja
sarl
push
das
test
into
lea
ss
jl
cmp
je
ja
fdiv
cmp
popf
jecxz
mov
xor
mov
jecxz
lea
stos
xchg
in
dec
add
or
repz
pop
clc
lock
or
adc
mov
sahf
in
pop
xchg
jge
push
gs
sub
dec
faddl
mov
ret
sub
in
pop
mov
xchg
sub
xchg
mov
fmulp
aam
sahf
cmpsl
jns
lock
jmp
sbb
add
sub
mov
dec
xlat
mov
movsl
and
mov
cli
data16
pop
out
imul
pop
pop
adc
jns
scas
or
lods
jae
fcmove
lahf
fiaddl
gs
or
iret
stc
xchg
cs
and
push
stc
mov
mov
pop
cmpl
mov
fs
cmpb
lret
push
add
dec
mov
pop
mov
jo
jns
mov
xor
or
jl
mov
xor
mov
rcll
cmp
mov
cltd
dec
cld
jae
jmp
or
mov
jg
outsl
push
daa
std
pop
movsl
iret
jg
test
lret
push
mov
pop
jge
mov
in
mov
out
arpl
jg
and
xchg
das
shll
lcall
push
push
in
cmp
int
xchg
mov
in
push
outsl
sbb
cmp
rcll
push
sbb
pop
jge
add
xchg
pop
mov
xchg
mov
jl
push
sub
cmp
pop
jo
jo
fbld
fs
repz
push
pop
aad
ret
cltd
ds
push
adc
setl
sbb
jmp
ljmp
out
ret
cli
addl
inc
push
in
enter
adc
inc
cmp
xor
rep
shr
outsl
int
lret
lea
or
cmpb
movsb
fldcw
adc
loopne
sub
cmp
pop
xlat
js
and
lods
adc
dec
addr16
dec
and
adc
testl
push
shll
and
pop
jne
hlt
jnp
push
sahf
xor
pop
mov
gs
jb
xor
arpl
sub
out
cmp
and
movsb
jns
push
data16
xchg
or
aad
repz
cmp
ja
cli
out
in
out
imul
xor
and
sub
and
lods
fwait
pop
push
mov
int3
lret
pushl
aas
mov
movsl
or
fidivrs
xchg
and
sbb
mov
ficomps
loop
inc
push
add
push
sub
cmpsb
mov
cwtl
lahf
jb
jge
xor
cs
adc
sub
push
mov
js
insb
lea
out
jmp
pop
add
imul
rorb
loope
filds
divl
adc
adc
insl
cltd
inc
jnp
pop
imul
xchg
lret
shr
rorb
mov
mov
loopne
in
int
nop
push
pop
cltd
add
test
sub
cmp
repnz
fdivl
stos
jmp
sbb
mov
scas
cmp
push
clc
psubsw
sub
push
in
mov
mov
daa
xlat
xor
inc
ffreep
sbb
popa
leave
aam
mov
into
xor
mov
outsb
pusha
call
popa
sahf
insb
mov
cmp
mov
sahf
outsl
mov
call
mov
cmc
push
out
mov
xchg
nop
cmpsb
push
pop
mov
imul
lret
xorl
jmp
ffreep
sbb
mov
lcall
orl
inc
pop
call
or
dec
pushf
adc
stc
ret
test
les
dec
jle
aam
loopne
jbe,pn
cltd
out
andl
inc
aad
dec
test
lcall
ja
pop
push
stos
test
lds
and
jp
iret
popa
stos
fmul
aam
pop
fcoml
jp
nop
adc
xor
jg
pop
jmp
cmpl
xor
mov
adc
aad
call
add
adc
and
pop
xchg
inc
in
mov
popa
push
dec
mov
hlt
pop
mov
out
je
push
push
pop
subl
mov
popa
aam
inc
scas
xchg
fwait
mov
xor
lods
enter
pop
test
int3
xor
jno
out
mov
les
idivb
pop
scas
fwait
pusha
shl
lods
and
ret
ds
push
stos
mov
xlat
jp
mov
ss
lods
mov
mov
and
jno
jge
xlat
leave
movsb
in
out
sub
or
decb
mov
in
hlt
jnp
sub
fisubrs
bound
and
pop
or
hlt
add
test
adc
sub
in
dec
inc
xchg
or
data16
sub
xchg
pop
iret
dec
mov
sbb
incb
xor
bound
mov
push
mov
aas
daa
jb
loope
sahf
pop
mov
inc
mov
xchg
cmp
pop
xchg
lods
push
push
into
fimull
pop
and
sub
out
mov
inc
adc
jl
jle
popf
mov
xor
xchg
mov
sub
jle,pt
dec
mov
inc
jg
fisubrs
mov
xchg
fs
test
jmp
pop
in
inc
cltd
pusha
jl
jb
cmp
rclb
push
scas
mov
or
cmp
pushf
jno
jo
fnstenv
push
mov
xchg
xchg
mov
mov
pop
fnstsw
cld
dec
nop
sbb
adc
out
xor
cli
jmp
test
sbb
loope,pn
inc
adcl
mov
push
lods
xchg
sbb
jle
fstps
jmp
and
cmpsl
push
test
mov
pop
mov
sahf
push
in
movsl
mov
scas
cmp
sbb
or
cli
jl
mov
mov
inc
mov
add
nop
lds
cltd
dec
pop
pop
push
mov
cld
inc
dec
xchg
es
jbe
mov
jmp
jg
nop
lahf
ljmp
sub
popa
dec
push
test
jmp
frstor
test
add
lret
xlat
and
iret
xchg
pop
sbb
ret
das
stos
xor
fimuls
bound
jnp
daa
cltd
mov
jno
pop
mov
je
jae
and
and
mov
sub
add
jnp
sbb
lea
sbbl
mov
int
xchg
mov
jl
fwait
enter
call
imul
jb
xchg
xor
dec
lahf
pop
xchg
andb
mov
adcb
repz
sub
xor
push
pop
sahf
mov
mov
cmp
bnd
into
push
mov
call
icebp
mov
jge
lret
inc
mov
filds
mov
or
out
xchg
jae
add
or
or
push
and
shlb
and
xchg
pop
popf
dec
sub
mov
loop
mov
daa
jne
or
mov
xchg
in
xchg
cmpsb
xlat
xor
add
sub
mov
pop
and
enter
sbb
fcomps
int3
push
cmc
jae
lret
outsb
shlb
fucom
cmp
jnp
es
add
cmp
mov
jnp
push
imul
sbb
lahf
and
arpl
add
call
mov
enter
inc
sub
js
mov
pop
dec
mov
imul
xor
jecxz
test
mov
and
stos
int3
cmpsl
loop
sub
mov
push
out
sarb
bound
xlat
roll
jl
repnz
or
mov
lret
pop
dec
pop
push
stos
sbbb
std
push
cmc
cmp
shrb
addr16
insb
push
mov
push
in
pop
cmp
je
enter
dec
xor
inc
cwtl
mov
jns
jne
mov
push
jno
mov
std
mov
mov
loopne
in
cmp
fnstcw
fstpl
jecxz
cmp
aas
cli
out
cmpsb
and
shl
mov
sti
mov
mov
and
and
adc
lret
dec
push
ret
adc
imul
jnp
fimull
icebp
jo
cmp
sub
and
mov
mov
call
sub
faddl
jae
hlt
pop
roll
cmp
movsl
inc
iret
or
pop
ret
daa
scas
dec
out
pop
adc
dec
jle
fmul
insl
lret
addr16
inc
jle
out
dec
mov
shl
xor
rcll
fmulp
push
xchg
inc
sbb
push
adc
pop
jmp
cmc
cmc
inc
push
push
sbb
jle
fisubrs
int
xchg
mov
fsts
push
test
inc
pop
and
std
mov
add
xchg
call
push
jmp
into
daa
test
xor
add
sarb
mov
mov
test
iret
mov
fmull
into
push
jle
dec
xor
in
sbb
sarb
int3
mov
xchg
xchg
bound
push
lea
push
jo
jmp
sbb
xchg
inc
jo
add
cmpsb
leave
mov
pop
leave
sarl
push
dec
in
and
in
pop
dec
insl
andl
adc
and
mov
test
repz
inc
popf
mov
in
lret
sbbb
or
jns
cmc
pop
push
mov
xchg
jnp
data16
adc
push
and
xchg
adc
add
mov
cwtl
xchg
idivl
push
jmp
fwait
cmc
xchg
loop
int3
inc
rclb
jp
lcall
pop
ret
rolb
into
inc
sbb
lds
test
jle
dec
sbb
lods
roll
inc
cli
xchg
popf
jp
push
repz
repnz
or
adc
lahf
and
xor
sbb
adc
dec
sub
lods
xor
push
push
rcl
xor
sbb
and
or
push
out
repz
aaa
or
pop
ret
xchg
fdivrp
xchg
dec
int3
fucomi
test
sbb
inc
ds
std
lret
ficoms
outsl
xor
add
inc
test
enter
je
jnp
addr16
or
sub
js
enter
mov
dec
out
les
ret
or
ja
dec
int
dec
dec
flds
mov
mull
xor
iret
fwait
testb
clc
cmp
in
mov
movsb
pop
jns
jne
ret
daa
and
xor
xor
rorl
or
stc
dec
repnz
repnz
cmc
aas
in
mov
push
popf
cwtl
outsl
pop
and
pushf
clc
adc
and
jecxz
lock
and
push
arpl
jp
mov
stc
adc
push
sub
test
inc
es
mov
subb
ret
negl
popf
fidivrs
pusha
or
xchg
mov
xchg
mov
dec
cld
or
sbb
popa
imul
ret
mov
idiv
add
mov
jbe
bound
dec
enter
sarl
ret
in
sbb
sub
scas
dec
cwtl
sbb
das
inc
or
mov
lods
dec
cmp
cld
repz
push
loopne
nop
repnz
pop
adc
ja
js
push
loopne
mov
jg
sbb
adc
dec
add
dec
loope
adc
ret
sbb
push
mov
sbb
out
sti
adc
addr16
pop
or
add
rorb
out
xchg
sub
push
mov
idiv
ja
push
pop
ret
jl
int
ss
xchg
stos
mov
dec
xchg
test
pushf
es
fsubrp
xor
arpl
call
into
ret
push
sbb
cmp
pop
pusha
ret
xchg
and
inc
jns
int
iret
jb
ret
sub
ficompl
imul
jbe
ja
and
cwtl
out
cmp
ss
into
ss
enter
and
add
lods
addr16
dec
sub
aam
les
pop
into
inc
mov
in
lret
imul
fbld
push
rcll
mov
xchg
and
rcr
sub
stos
dec
push
mov
inc
sti
pop
inc
inc
sbb
jbe
jb
mov
pop
push
adc
bound
fimull
jnp
ficomps
icebp
imul
clc
mov
repz
jae
mov
stos
push
ja
call
mov
xor
lods
lea
dec
and
ret
mov
inc
mov
or
dec
jbe
imul
rorb
xchg
mov
pop
movsl
mov
fld
mov
gs
mov
sub
pop
jle
mov
call
jb
jmp
inc
gs
lock
aaa
lock
test
cmp
push
rcrl
test
outsl
ja
mov
sbb
daa
ficoml
pushf
subl
movl
push
sub
leave
xchg
cld
cmp
xchg
popa
daa
cli
sbb
push
dec
sbb
sbb
inc
out
mov
and
mov
mov
mov
insb
mov
mov
pusha
lcall
dec
test
cmpsl
mov
cmp
push
mov
bound
pop
popf
or
and
call
dec
cld
andb
pop
mull
aad
add
data16
xchg
cwtl
hlt
fldenv
push
xchg
xchg
or
fsubrs
sbb
or
dec
push
mov
mov
push
cs
mov
insl
or
nop
lods
in
sub
cmc
mov
jg
adc
fbld
or
movsb
add
mov
arpl
push
lock
sbb
xorb
int3
in
jns
scas
mov
cltd
js
aad
fidivrl
push
negb
mov
sub
es
lea
ja
das
test
pop
icebp
out
cmpsl
sub
push
nop
sub
pop
mov
fs
ds
xchg
out
lahf
in
and
mov
loop
in
outsb
jnp
inc
push
fildl
lods
lcall
enter
adc
push
test
dec
xor
in
xor
sbbb
push
into
stos
mov
loopne
repz
inc
xor
hlt
cmp
je
repnz
cmp
cmp
jl
jg
jp
mov
cmc
pop
xchg
lret
int
stc
cmp
jmp
std
in
dec
and
in
stos
pop
loop
mov
and
rclb
lock
rolb
arpl
pop
fildll
xor
cmp
in
je
jge
sub
inc
mov
in
mov
popa
scas
gs
xchg
mov
or
jnp
lea
pusha
ret
and
jnp
orl
filds
jb
adc
adc
lcall
gs
repnz
mov
in
add
mov
out
mov
cltd
stc
jge
leave
cmp
jl
mov
mov
movsl
.byte
addr16
add
dec
add
dec
add
nop
dec
and
mov
adc
cld
sbb
cltd
mov
pop
xchg
dec
imul
fiaddl
lea
outsb
cmpsb
or
mov
js
push
inc
mov
mov
ds
xchg
lahf
lret
fidivrl
cld
jl
sbb
dec
int3
testl
mov
xor
loopne
adc
mov
test
xchg
xor
xchg
jge
repz
dec
leave
pop
xor
mov
mov
out
mov
je
popf
cmp
stos
pop
ficoml
ss
rorb
mov
mov
sub
push
pcmpeqb
sbb
xchg
cmp
add
cmp
cmp
sub
scas
xchg
mov
push
push
push
pop
pop
jbe
enter
pop
push
notb
stos
cmp
mov
sub
ljmp
mov
mov
push
mov
xor
cmp
adc
icebp
push
add
cmp
sbb
aam
push
dec
push
mov
push
fwait
popf
cmpsb
mov
icebp
mov
je
and
mov
adc
lods
ja
adc
mov
lcall
jmp
xchg
add
jmp
mov
mov
shr
hlt
test
mov
push
sub
add
in
out
mov
xchg
mov
js
sarl
dec
stos
cld
rcll
fiadds
out
lock
cld
mov
in
push
loope
or
push
jb
mov
cmp
lcall
std
xor
mov
inc
into
adc
fldcw
loop
shrb
sti
iret
aas
lds
stos
test
or
mov
and
sbb
cmp
sbb
loop,pn
loopne
iret
dec
pop
sti
ret
xchg
jecxz
cmc
dec
std
shrl
test
bswap
insb
scas
imul
nop
push
repz
push
mov
push
fs
add
xchg
lret
xchg
pop
and
stc
xchg
stos
repnz
and
xchg
jge
icebp
pop
xor
pushf
popf
dec
rclb
and
mov
rolb
pusha
ds
daa
and
dec
iret
bndldx
push
insl
outsb
repz
mov
sbb
ror
sbb
cmpsb
jge
sbb
je
js
or
cmp
sbb
adc
cmp
sub
xor
movsl
daa
inc
cmpsl
cmp
jge
sahf
xchg
xchg
repz
sbb
repnz
inc
or
imul
sub
inc
mov
int
lcall
inc
xchg
adc
add
repnz
daa
int3
ficompl
gs
push
mov
in
jno
sbb
push
fwait
scas
imul
inc
sti
jb
and
add
xchg
inc
cmpsl
jbe
add
loope
in
push
mov
add
fstps
and
fs
mov
sub
adc
lcall
cmp
cmp
in
imul
addr16
in
adc
stos
inc
push
sti
call
fstpt
fbstp
aas
inc
mov
adc
movsl
and
cmp
push
xor
lret
nop
sub
jmp
adc
mov
mov
sbb
mov
add
test
and
add
scas
or
inc
cli
add
mov
imul
iret
mov
roll
aaa
jg
sub
movsb
adc
aaa
sti
fwait
pop
dec
cmpsl
bound
mov
nop
jecxz
mov
sahf
push
push
and
addb
dec
jbe
jae
lret
ret
push
cli
fsubr
xlat
mov
xor
sbb
lods
leave
push
fidivs
dec
not
inc
std
dec
lret
cmp
cmp
dec
add
ljmp
jg
cmc
lcall
cmp
xchg
and
sub
stos
sub
xchg
es
outsb
cli
inc
lahf
cmpsl
loop
xchg
mov
add
adc
jnp
cwtl
inc
insl
dec
mov
pop
jb
dec
sub
add
call
lcall
subb
loop
adc
push
pop
je
add
fisttpll
leave
test
dec
outsb
jl
mov
into
in
fnstcw
xlat
xor
xchg
push
cmc
adc
shll
sub
mov
pop
jne
jle
js
xlat
aad
xchg
ja
dec
push
sub
jmp
test
cmp
dec
gs
adc
cmp
jb
out
mov
and
inc
push
add
fimuls
xor
in
inc
fwait
jmp
cli
jl
test
xchg
cmpsb
or
pusha
cmpsb
dec
xor
test
js
aad
push
push
andb
adc
mov
rcrl
out
fcom
and
fdivl
hlt
enter
imul
sub
aas
dec
idivl
xchg
jg
cltd
inc
mov
aam
lock
mov
sub
ss
mov
roll
cmp
sub
es
push
ficompl
or
push
pop
push
and
sub
sub
pop
mov
movsl
mov
mov
sub
push
adc
pop
push
cld
sbbl
xor
xchg
xor
jb
imull
mov
lcall
sub
repnz
enter
add
ja
shrl
pop
lds
dec
nop
dec
sbb
mov
inc
sub
test
outsl
xchg
imul
jecxz
test
sbb
and
pop
xor
sti
pop
in
jle
mov
out
pushf
or
repz
or
cmp
out
mov
stos
jmp
pop
cmp
push
rorb
or
fildll
call
rcl
aad
rcrb
aam
mov
jbe
sbb
ja
cmp
or
push
mov
aam
mov
jle
push
les
rcl
lods
push
cli
push
dec
cmp
xor
mov
insl
jg
mov
out
cmpsl
push
js
outsl
mov
push
lret
mov
pop
sbb
jle
jl
dec
adc
and
mov
sahf
pop
mov
scas
mov
outsl
cmpl
mov
mov
lds
je
dec
call
mov
jno
ret
dec
andl
xchg
adc
mov
jecxz
dec
sti
xchg
jbe
icebp
out
push
aad
or
bound
loop
inc
insb
enter
cmp
mov
mov
int
mov
sub
cmpsl
jo
pop
jns
mov
inc
iret
mov
inc
repnz
clc
xor
sub
std
mov
mov
rorl
test
hlt
mov
imul
mov
and
ret
pop
je
leave
xlat
inc
sbb
mov
mov
movsl
rol
ja
imul
mov
cmp
cmp
frstor
test
or
sahf
jl
bound
push
outsl
sahf
out
dec
in
sti
jb
xchg
jl
sbb
xor
out
jno
adcb
cmp
sbb
cld
iret
cmpsl
cmpsb
ret
lods
or
in
and
xor
jne
inc
ss
icebp
adc
pop
leave
mov
mov
sti
jbe
scas
mov
mov
fwait
test
push
push
jb
inc
mov
xchg
xchg
subb
pop
stc
push
dec
shll
inc
inc
bound
test
mov
inc
rcll
adc
scas
mov
inc
and
arpl
in
adc
int3
jnp
stos
adc
into
cmp
xor
ss
or
and
jecxz
push
mov
lock
aad
and
add
inc
push
xchg
leave
shlb
hlt
xchg
mov
fdivr
pop
repz
jbe
xor
push
jg
xlat
mov
dec
or
or
lods
fs
int3
pop
and
mov
dec
lahf
mov
pop
testl
stos
ds
xor
loopne
push
lcall
push
jno
jmp
adc
cs
mov
jge
sbb
sbb
push
xor
lret
jge
out
fs
xor
test
cmp
push
jle
sbb
mov
inc
mov
loop
call
dec
jns
imull
or
cwtl
sbbl
sub
popa
addr16
pop
lods
dec
xchg
fwait
les
call
out
cmp
xchg
adc
jnp
xor
inc
adc
xchg
and
sbb
adc
loopne
mov
das
pushf
mov
je
shl
adc
stos
mov
rcr
pop
jp
jb
shlb
mov
mov
xchg
push
dec
sub
add
call
addr16
imul
bound
xchg
testl
adc
cmp
mov
fwait
and
xchg
pop
adc
inc
jecxz
jg
mov
out
jns
adc
adc
sub
fidivs
ds
push
out
dec
lahf
pusha
repz
push
ja
inc
lret
aaa
sub
push
mov
add
mov
pop
sbb
mov
ja
xor
jo
imul
dec
add
pop
dec
roll
fcmovbe
jp
lods
cs
hlt
out
sub
mov
mov
mov
dec
shr
jae
xor
pop
mov
imul
imul
push
or
int3
xchg
adc
mov
mov
xor
jle
cmp
fsubl
push
jmp
jmp
lods
mov
pop
lds
sub
out
push
adc
out
pop
mov
repz
and
sahf
stos
aas
das
fdivrs
inc
mov
test
mov
mov
xorl
mov
insb
or
jge
sbb
sbbl
popf
mov
push
pop
arpl
and
and
out
adc
adc
popf
leave
pop
lods
rcl
inc
or
data16
xor
out
scas
out
aas
aas
call
mov
jnp
dec
push
xorb
mov
mov
testl
insb
rorl
mov
xchg
pop
pop
sub
sbb
popw
adc
into
jp
mov
inc
hlt
out
insl
xor
mov
jns
shrb
subb
lea
aad
not
es
movsl
sbb
mov
cmp
ss
jns
cmp
adc
jb
xlat
enter
dec
inc
push
mov
dec
pop
pop
inc
push
adc
pop
test
pop
subl
jno
xlat
sbb
adc
or
iret
and
dec
rcrb
out
cmp
add
fsts
or
xlat
adc
insl
popf
ljmp
fwait
andl
inc
lret
fwait
out
movsb
and
hlt
dec
sbb
aaa
push
lods
aad
push
nop
and
cs
jl
push
jecxz
insl
mov
sbb
dec
or
inc
mov
fcoms
xchg
lret
dec
les
lret
incb
dec
fiadds
jp
hlt
insl
jmp
imul
js
and
or
or
aad
movsl
xor
xorl
lea
flds
subb
pop
mov
fs
adc
js
mov
push
xor
lods
or
loope
jmp
fistl
xor
pop
fstps
dec
ljmp
aad
shrb
je
pop
shlb
dec
cmp
fisttpll
mov
pop
xchg
jecxz
aas
fdivrl
jg
mov
push
push
and
shll
test
into
and
testl
mov
popa
pop
sahf
xor
jb
rcrl
push
in
loop
test
adc
test
inc
pop
inc
and
into
push
xor
stc
stos
mov
hlt
inc
adc
fmull
out
push
sbb
enter
xor
bound
fmuls
xchg
sti
punpckhbw
inc
call
pop
mov
xchg
mov
les
mov
ret
ss
scas
call
or
lock
lcall
jno
addr16
data16
xchg
fbld
pop
ja
dec
push
not
out
xor
jle
in
bound
test
xchg
stos
ss
arpl
dec
cwtl
inc
mov
mov
call
push
icebp
clc
out
addr16
mov
inc
sbb
in
xchg
pop
fs
jns
repnz
fsubrl
insb
inc
and
mov
lcall
ret
fstl
loop
add
inc
std
mov
xchg
inc
mov
mov
je
cmpsb
mov
inc
xchg
jno
or
aas
pop
mov
cmp
aam
and
sub
ss
jecxz
add
lods
stos
movhps
fdiv
pop
dec
xor
mov
xorl
rcrb
adc
sbb
pop
in
mov
sahf
sahf
out
xor
xorb
mov
inc
mov
cmp
stc
cmp
and
hlt
sub
sub
inc
adc
call
mov
fcom
mov
leave
in
cmp
or
aad
lcall
sbb
lock
ja
fcoml
cmc
jne
repnz
cmp
push
bound
jg
jmp
jae
sub
les
pop
mov
mov
add
sub
fcoml
push
pop
out
jo
mov
in
jecxz
dec
mov
iret
or
dec
test
mov
and
dec
sub
mov
jle
xchg
repnz
stos
cmp
jle
jb
lea
arpl
mov
std
xchg
inc
repz
adc
out
inc
mov
xchg
shll
in
std
jp
mov
mov
sub
ficomps
dec
in
xor
adc
rcll
sbb
or
sti
pusha
push
cmpsb
xchg
jno
dec
popf
mov
sbb
fistl
rcr
shll
das
fsubs
inc
fwait
jnp
cwtl
push
fcoms
outsl
push
dec
adc
push
pop
cmp
add
add
mov
push
add
push
ljmp
cli
mov
insb
lods
dec
repz
fadds
or
cmp
sbb
stos
push
push
outsb
dec
out
ss
sti
aaa
jle
stos
call
push
ss
mov
test
mov
mov
sarb
stos
jmp
pop
stc
jecxz
mov
and
push
xor
push
jmp
orb
insb
dec
adc
dec
inc
mov
cld
fwait
ss
nop
jecxz
rcr
stc
aam
sub
stc
adc
or
jo
push
add
loop
ljmp
nop
pop
lret
xchg
mov
leave
and
xchg
repz
das
and
inc
pusha
push
inc
in
or
fiaddl
out
jbe
ds
jae
inc
xchg
outsb
enter
hlt
mov
jp
bound
pop
fdivl
push
jnp
movsb
fidivrs
adcl
int3
cli
or
jp
jns
cmp
fiaddl
sub
or
sbbb
push
rcll
jp
iret
lret
jl
inc
sbb
in
lock
jp
arpl
xchg
mov
inc
fs
inc
lret
dec
push
data16
or
push
xorl
cmpsb
pushf
dec
xor
loop
bound
jbe
push
js
pop
mov
add
lahf
mov
fldt
int
les
shrl
jo
sahf
push
push
inc
daa
xchg
or
movsb
jge
mov
mov
aad
xchg
stc
mov
cmpsl
push
mov
aas
dec
dec
push
adc
jle
push
jp
cli
lcall
xor
iret
jp
xchg
lcall
cmpsb
pop
inc
pop
aad
bound
cmp
sub
int3
fadds
repz
je
ds
dec
int
dec
lahf
popf
inc
or
cmp
push
inc
and
fcmovb
inc
pop
das
adcb
outsb
mov
lret
jnp
mov
call
cmp
jae
mov
dec
adc
mov
jge
inc
icebp
xor
call
les
adc
out
shll
insl
in
add
clc
pusha
mov
sbb
sbb
mov
imul
jl
mov
flds
add
add
add
stos
mov
push
jb
xor
ja
cmc
mov
outsl
sub
incl
inc
ret
loop
xor
push
sub
cmp
fnsave
idiv
mov
leave
out
xchg
jecxz
loopne
jmp
shll
push
call
sti
adc
inc
xchg
and
cmp
push
add
scas
mov
or
mov
js
and
and
aas
arpl
and
fbld
lods
fldcw
cld
lahf
and
xchg
aad
addr16
fistpl
int3
leave
ret
add
dec
xor
xor
out
adc
mov
cs
add
pop
pop
sbb
test
lcall
inc
aam
iret
popa
int3
xor
push
mov
fstpt
cmpsb
xchg
in
jmp
pop
es
test
sti
js
es
cmp
or
xchg
sbb
pop
mov
sub
testl
inc
mov
hlt
dec
out
or
xlat
dec
sbb
bound
fdivr
imul
pop
inc
xchg
mov
mov
xchg
push
movsb
xor
push
fdivrl
mov
add
cmp
lret
jge
pop
shrl
mov
ret
lret
jbe
pop
inc
dec
lea
xor
test
rcrl
and
adc
aaa
test
push
adc
xchg
ss
lret
mov
jno
cmp
push
inc
rclb
lds
popa
lcall
sub
mov
push
fisubl
das
inc
add
popf
push
into
aad
lahf
gs
stc
dec
fstpl
push
sub
repnz
fchs
gs
jb
insl
gs
test
xor
and
mov
inc
mov
xchg
sub
in
mov
or
add
ret
repz
sti
call
pop
jl
gs
adc
xor
pop
or
mov
bound
xor
loop,pn
in
cld
pushf
mov
jno
mov
mov
jne
mov
xchg
inc
dec
test
into
clc
jl
add
inc
inc
mov
sti
cwtl
cmp
jg
pop
mov
call
pushf
mov
lret
jmp
pop
jns
bnd
gs
adc
lods
lahf
xor
push
mov
jns
in
jl
cmp
sub
test
repnz
mov
fcoms
pslld
mov
jb
xor
fwait
mov
ja
outsb
mov
lds
ret
test
pop
mov
mov
lods
mov
rorb
hlt
add
cmp
or
call
in
cli
jb
ret
adc
cltd
lret
test
mov
add
rcrb
dec
dec
xor
or
push
mov
mov
jmp
push
ljmp
inc
mov
rcl
xchg
rclb
and
or
cwtl
dec
aam
xchg
aam
mov
xchg
fsubrl
xchg
sub
in
pop
in
js
sbb
test
popf
in
pop
or
and
leave
jno
in
sub
stos
mov
rol
in
outsl
mov
sub
js
lods
xchg
sbb
mov
and
stos
imul
insl
jns
cmp
roll
xor
cmovge
push
dec
jge
xchg
stc
cmp
sbbl
aam
repnz
pop
cmp
btl
imul
outsb
cmp
dec
pop
movsbl
loop
xor
pop
mov
add
or
adc
xchg
scas
stos
mov
jb
fsubl
jg
add
mov
aam
xchg
popa
into
ljmp
nop
outsb
clc
sbb
sti
test
sbb
pop
fucomp
mov
xlat
clc
or
push
ds
xchg
jae
fs
rorl
cmpsb
rcrb
and
cwtl
mov
cmp
fcmovne
orb
adc
jae
push
ljmp
dec
cmc
shl
add
jmp
jne
jl,pt
jmp
pop
arpl
aaa
add
mov
out
cmpb
and
mov
es
xor
mov
movsb
daa
dec
mov
lea
roll
pop
mov
sub
jge
and
mov
adc
push
dec
jle
iret
insl
push
shr
adc
in
inc
pop
and
lret
int3
mov
and
ss
cmc
in
push
stos
xor
fwait
inc
inc
out
pushfw
or
jge
adc
dec
subl
jbe
sbb
and
mov
rcll
inc
into
adc
lods
aam
les
gs
aam
es
lahf
pop
sbb
mov
pop
xchg
xor
fsubrl
pop
scas
dec
aas
hlt
push
adc
test
mov
popf
arpl
mov
mov
mov
mov
insb
mov
xor
dec
add
popa
pushf
lea
pop
into
jnp
pop
xchg
mov
and
mov
cmp
insb
mov
xchg
mov
or
ja
out
call
push
and
or
mov
pop
jle
arpl
push
mov
add
int
sbb
sahf
cmc
int3
push
jp
js
popa
test
daa
sub
leave
jmp
mov
mov
push
or
mov
pop
pop
dec
push
push
imul
pcmpgtd
xchg
push
xchg
xchg
mov
aas
jge
mov
emms
cwtl
xchg
xor
fidivrs
jns,pt
arpl
shrb
push
cli
xchg
and
adcl
cmp
mov
test
mov
xorl
pop
test
xor
lods
cmc
scas
or
sbb
sbb
loope
icebp
in
push
mov
lahf
cld
and
xor
test
repnz
shl
cli
test
sar
test
sbb
repnz
pop
jl
inc
adc
fidivrs
pop
xor
shrl
cmc
es
push
enter
mov
add
sbb
ret
out
rcrb
fdivl
mov
sbb
int
or
out
clc
daa
add
xchg
and
lcall
mov
jmp
je
lock
sarb
jge
sub
or
mov
push
add
test
jnp
test
cmpsl
fs
out
push
stc
add
pop
das
sbb
scas
jl
xchg
aad
movsl
call
shrl
push
dec
in
outsl
xor
jb
and
fistps
insb
sub
dec
cmpl
aas
hlt
xchg
sub
add
pushf
fwait
mov
sub
xchg
mov
movsl
fisubrs
fs
cmpl
adc
inc
mov
ss
add
mov
fwait
sbbb
inc
xchg
aas
cmpsb
pop
fistps
rclb
hlt
ret
xchg
mov
ret
and
mov
addl
mov
push
mov
push
aam
dec
subb
cmp
jns
dec
flds
into
xchg
fdiv
stos
push
mov
lods
mov
lret
imul
jne
add
out
jno
xchg
xchg
mov
int
push
mov
mov
orl
cmpsl
lahf
cwtd
std
dec
adc
lods
arpl
xor
jno
adc
push
sti
dec
jne
movl
mov
jecxz
outsb
ret
sub
negb
movsl
pop
mov
fidivs
pop
cltd
movsl
fists
cmc
mov
insl
ret
gs
push
adc
xchg
and
lcall
out
gs
pop
xor
mov
lds
loop
xor
daa
repnz
cmp
outsb
dec
ds
loopne
adc
inc
cltd
mov
push
pop
and
xchg
mov
negl
jg
jecxz
fistl
adcl
ret
out
es
loop
data16
adc
sbb
test
idivb
lea
dec
sub
aas
pop
push
dec
dec
fnstenv
aam
int3
cltd
out
add
es
dec
dec
adc
nop
inc
xor
lret
shll
mov
leave
jmp
cmp
addl
fadd
sbb
cld
fidivrs
mov
mov
out
pop
mov
das
in
mov
xchg
ror
jp
jae
shll
mov
std
test
lods
gs
mov
leave
jae
jno
test
sub
enter
pop
shrl
fnsave
cmp
mov
cmp
cmpsb
sbb
cli
aad
sub
fstps
pop
scas
push
scas
mov
dec
inc
xchg
push
jne
mov
ja
stos
scas
jb
mov
es
dec
fcmove
arpl
out
dec
and
adcb
jmp
inc
imul
xor
and
outsl
xchg
ja
aaa
or
repnz
xchg
iret
add
inc
mov
xor
mov
lock
dec
inc
int3
loope
mov
dec
insb
stos
enter
das
fadd
or
nop
sbb
insl
cmp
hlt
inc
or
lcall
das
pop
mov
nop
inc
cmp
mov
dec
repz
push
insl
xchg
cli
xchg
clc
mov
and
stc
mov
stos
insl
adc
lds
subb
xchg
push
repz
pop
dec
pop
mov
into
and
jmp
mov
jl
sbb
xlat
loopne
sub
or
mov
aas
lret
je
repz
lock
pop
push
mov
and
xchg
pop
cmc
or
inc
imul
xor
mov
jle
xlat
int3
jo
popa
sub
cmp
jae
pop
inc
fsubs
lock
aam
push
mov
cmp
lods
out
pusha
movsl
in
fdivr
mov
jle
xor
sbb
nop
adc
cmp
pusha
fmul
push
bound
push
mov
cmp
and
shl
add
shlb
int
repnz
pusha
or
cmc
in
xchg
imul
cmpsb
sbb
mov
pusha
sbb
lods
or
gs
nop
or
hlt
mov
ficomps
adc
iret
daa
jbe
mov
sub
mov
frstor
test
lods
out
rorl
add
call
adc
sub
xor
push
inc
test
push
or
stos
xor
ret
inc
repnz
icebp
movsl
dec
jmp
and
or
xor
and
aaa
add
ret
sub
jmp
movsl
mov
imul
cmp
iret
xorl
mov
iret
xor
enter
popa
mov
pop
sbbb
mov
mov
leave
in
ret
mov
adc
sbb
mov
aam
mov
imul
jg
sbb
add
mov
inc
mov
inc
mov
add
je
jge
enter
stos
pop
pop
in
cmpsb
dec
addr16
adc
int3
seta
inc
insb
iret
cmp
inc
sub
mov
shl
adc
push
test
in
jp
dec
add
dec
pop
arpl
scas
movsl
or
inc
inc
jo
jecxz
fidivrl
ret
fyl2xp1
scas
cmp
icebp
leave
jb
inc
cmc
cmp
pop
ja
pop
add
lahf
mov
mov
sbb
mov
mov
xchg
push
int3
stos
push
xor
ficomps
in
loopne
pop
dec
xchg
fwait
jmp
pop
jmp
sbb
xor
xor
push
inc
fsubs
inc
adc
aam
call
outsl
dec
adc
push
lret
jbe
push
sbb
clc
xor
xchg
pop
dec
test
push
xchg
pop
xchg
and
mov
out
and
popf
dec
push
cmp
mov
lods
das
hlt
hlt
add
sbb
fs
aas
xchg
int
out
push
iret
shrb
push
ret
fs
and
imul
enter
jo
fnstcw
pop
aaa
popf
mov
loop,pn
xlat
hlt
loop
inc
stos
into
mov
cmp
sbb
ret
ljmp
mov
push
rcr
out
jge
pop
lret
loop
cmp
aam
scas
mov
jmp
inc
int
mov
pop
insb
dec
xchg
mov
test
dec
les
inc
push
and
test
and
jbe
sti
cmp
idiv
sbb
mov
lods
add
xlat
cmpb
sub
push
loope
cwtl
add
or
sub
jge
cs
iret
rcl
jns
test
push
xchg
jno
sbb
adc
hlt
repnz
aas
and
xchg
imul
fwait
pop
inc
mov
cmp
and
lods
mov
mov
icebp
daa
jbe
jns
pop
rol
push
cmp
lods
repz
hlt
dec
sub
xchg
nop
nop
cmp
xor
enter
arpl
or
inc
or
lcall
push
or
inc
pop
dec
xor
cmp
rcrb
repnz
les
nop
pop
sbb
or
add
cld
jne
sub
xchg
dec
jne
xor
stc
ds
add
pop
sub
push
inc
daa
dec
sub
aaa
jne
rcll
stos
loope
aas
fisubrl
adc
js
test
pop
lock
mov
cmpsl
add
pop
jmp
fcoms
adc
or
imul
or
inc
hlt
shr
mov
pop
pop
mov
xchg
jne
inc
and
fcmove
push
test
push
cmp
adc
nop
mov
add
stos
ret
xor
aad
js
sub
push
pop
push
pop
sub
rorl
xor
insb
fcmovu
jns
aam
je
mov
jae
addr16
push
rcrl
iret
dec
sbb
sbb
mov
sbb
nop
imul
sahf
inc
aaa
fdivrs
sbb
ss
insl
insb
stos
rorb
mov
mov
mov
xchg
into
xchg
adc
add
adc
add
shrl
repz
xchg
jecxz
xlat
pop
les
aad
sahf
xchg
add
cmp
push
pop
ret
cmp
rcll
into
jp
sub
das
addb
les
decb
lods
add
popa
xchg
or
cmovb
loop
pop
.byte
xor
or
add
add
add
add
add
add
sub
or
sub
or
xor
or
xchg
jns
add
cwtl
add
loopne
add
enter
sub
add
fmull
sbb
add
add
add
sub
add
call
pop
add
mov
pop
add
or
add
rcr
add
add
sub
add
and
add
nop
sbb
add
add
and
add
inc
pop
add
sarb
add
aam
add
pushf
adc
add
adc
add
add
add
loopne
add
hlt
push
add
and
add
subb
test
add
and
add
adc
add
insb
mov
add
call
flds
add
add
pop
lahf
add
test
add
cwtl
std
add
test
add
cwtl
jecxz
add
fiaddl
add
flds
add
popl
add
popl
add
sbb
add
sbb
add
add
add
rclb
add
adc
add
add
sbb
add
sbb
add
imul
xor
or
js
add
mov
mov
add
mov
movsl
add
sbb
add
dec
cmpsl
add
mov
lods
add
loopne
add
sbb
add
fsubrs
or
push
test
or
xor
add
fsubrs
add
js
add
jl
add
xor
add
inc
mov
add
adc
add
add
add
xlat
add
cwtl
sbb
add
jg
add
loop
add
lock
clc
flds
add
or
xchg
test
add
add
or
add
dec
jl
add
add
loopne
add
add
mov
fadds
add
sti
add
adc
add
add
add
insb
loope
add
loope
add
add
fs
add
loopne
add
fiadds
add
fldl
add
add
insb
fisttps
add
or
xor
or
xchg
loop
add
add
or
add
inc
jmp
add
and
add
dec
out
add
ja
add
add
cwtl
aam
add
in
add
out
add
add
cld
in
add
add
fs
add
add
jo
add
sbb
add
lock
add
je
or
xchg
jmp
add
add
add
add
adc
add
cld
out
add
pop
out
add
push
sbb
add
and
add
loopne
add
jl
add
enter
flds
add
add
cmp
add
pusha
jp
add
imul
add
outsb
add
insb
jo
add
outsb
add
je
add
mov
outsl
add
adc
add
add
add
aam
add
and
add
sub
add
add
outsl
add
sub
add
xchg
jb
add
jp
add
sbb
add
add
and
add
test
cld
dec
add
inc
dec
add
cld
push
add
int3
push
add
fs
add
aam
add
jl
add
xchg
dec
add
aam
add
movsb
push
add
xor
add
mov
add
push
push
add
adc
add
push
add
jl
add
adc
add
push
add
mov
add
push
add
and
add
dec
add
sbb
add
or
add
add
push
push
add
add
add
pushf
push
add
sbb
add
jl
add
in
add
lods
push
add
xchg
pop
add
movsb
push
add
pop
pop
add
int3
push
add
xor
add
push
add
int3
pop
add
pop
push
add
push
push
add
xor
add
rclb
add
hlt
pop
add
inc
pop
add
mov
pop
add
mov
pusha
add
aam
add
movsb
add
lods
add
mov
add
lock
add
shlb
add
add
clc
add
cmp
add
add
aam
add
pusha
popa
add
pusha
add
xor
add
popa
add
les
add
add
cwtl
arpl
add
add
and
add
add
mov
mov
add
pusha
add
push
add
xchg
add
or
add
pop
add
shrb
add
adc
add
add
cmp
add
clc
adc
add
inc
adc
add
test
add
sbb
add
insb
lret
je
add
cmp
add
add
outsb
add
outsl
add
mov
add
inc
jg
add
outsl
add
adc
add
mov
add
outsl
add
lods
jbe
add
jbe
add
add
sbb
add
add
in
jae
add
je
add
add
mov
js
add
int
add
nop
add
xchg
xchg
add
cld
addl
inc
popf
add
or
add
enter
pop
mov
add
add
test
add
jl
add
lock
add
cmp
add
rclb
add
mov
add
push
xchg
add
fcoml
add
dec
lea
add
add
rcr
or
dec
rolb
mov
add
mov
add
fs
add
pushf
int3
add
sub
add
int3
lret
sbb
add
pushf
movb
mov
iret
add
and
add
pop
iret
add
cmp
add
ror
add
add
lock
add
and
or
mov
incl
add
pop
add
cmp
add
push
add
mov
add
add
add
adc
add
adc
add
cld
push
add
int3
or
add
sub
add
orb
add
add
rolb
add
pusha
add
add
cmp
add
add
rolb
js
add
dec
adc
add
add
sub
add
add
push
push
add
dec
pop
add
sbb
jl
add
sub
pop
pop
add
aam
add
or
add
push
arpl
add
add
add
add
add
add
mov
add
add
hlt
add
adc
add
push
out
add
add
mov
add
sub
add
lods
cmp
add
aas
add
mov
add
mov
add
mov
xor
add
dec
add
sbb
add
lock
add
sub
add
and
add
xchg
sub
add
add
cwtl
daa
add
clc
inc
add
jl
add
push
sub
add
and
add
add
je
add
dec
dec
add
jl
add
lods
inc
add
faddl
add
pop
add
lock
add
clc
dec
add
dec
xor
add
in
add
nop
sub
add
add
xchg
cmp
add
jl
add
dec
cmp
add
add
sub
add
dec
cmp
add
pop
cmp
add
push
dec
add
fsubrl
add
fsubrs
add
push
pop
add
pusha
sub
add
add
test
add
subb
add
xor
add
add
mov
cmp
add
sub
add
sub
add
pushf
sub
add
sub
add
js
add
int3
cmp
add
sub
add
add
fcoms
add
or
add
xorb
add
add
fadds
add
add
enter
test
add
fcompl
add
in
add
aam
add
mov
add
or
add
sub
add
push
dec
add
jl
or
add
add
jo
add
xor
and
or
pusha
adc
add
or
xor
or
sub
or
adc
or
data16
add
out
add
or
aas
out
add
or
adc
or
js
or
sbb
add
add
add
add
or
xchg
call
or
in
out
add
or
inc
sub
or
fcoms
add
add
add
sbb
add
or
jne
or
mov
jmp
or
test
or
shll
add
sub
or
mov
xor
add
ud2
add
sbb
add
add
or
cmp
or
pop
adc
or
fwait
daa
or
mov
or
test
or
xchg
jmp
or
lods
call
or
es
add
or
stos
in
add
in
add
or
mov
or
outsb
in
add
in
add
in
add
or
in
add
or
movsb
sbb
add
adc
or
push
adc
or
loope
or
mov
or
adc
or
cmp
or
popa
push
or
stc
pop
or
mov
or
lea
or
fists
or
and
or
insl
cmp
add
cmp
add
pop
or
pusha
pop
or
mov
sbb
add
ud2
add
sbb
add
add
in
add
sub
or
or
or
xchg
or
fs
or
add
or
sbb
or
jns
or
pop
call
or
dec
daa
or
rcrb
or
sbb
or
lods
sbb
or
sub
or
xchg
out
add
and
add
push
or
inc
and
add
sbb
or
lret
pop
or
mov
or
or
or
mov
or
push
push
or
pop
push
or
lock
or
or
or
xor
or
sbb
and
add
and
add
and
add
out
add
or
cld
out
add
or
mov
or
and
and
add
or
loopne
or
xor
or
shlb
or
gs
add
or
fisubs
or
test
and
add
aaa
or
fsubl
add
or
test
or
push
or
push
or
mov
call
or
dec
jmp
or
adc
or
jns
or
jns
or
aam
or
mov
or
lcall
add
xor
add
xor
add
xor
add
or
pop
xor
or
xorl
add
xor
or
jae
or
loop
or
iret
xor
add
xor
add
or
divb
or
push
sbb
or
or
or
daa
add
add
std
or
jecxz
or
sar
or
mov
decl
add
add
add
decb
add
add
add
decb
add
or
inc
decb
add
decl
add
decl
add
or
mov
add
add
add
add
add
add
or
jbe
or
decb
add
add
add
decb
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
or
ja
or
xchg
add
add
add
add
sub
add
add
or
int3
or
add
add
add
or
mov
add
or
mov
push
or
movl
or
xchg
or
add
pop
or
mov
or
dec
or
add
or
add
add
or
fisttps
or
mov
push
or
sahf
push
or
add
or
flds
or
adc
or
and
or
push
pop
or
xchg
or
add
or
imul
or
mov
or
add
add
add
or
add
or
cmp
add
sub
add
sub
add
or
xchg
sbb
add
sub
add
or
sbb
or
inc
or
add
or
pop
or
add
or
add
or
rorb
add
or
or
jbe
or
jns
or
xchg
push
or
pop
push
or
scas
push
or
arpl
or
or
sbb
or
xchg
or
or
call
aaa
or
fisttpll
or
push
adc
add
or
or
or
jns
or
inc
adc
add
adc
add
or
aad
or
mov
or
bound
or
inc
adc
add
adc
add
or
insl
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
aaa
or
popf
sbb
add
or
lds
or
loop
or
mov
sbb
add
or
fistps
or
sbb
add
sbb
add
or
lcall
or
mov
sbb
add
add
sbb
add
or
sbbb
add
cmp
add
or
pop
sub
add
sub
add
add
daa
or
and
or
movntps
add
or
inc
sub
add
sub
add
sub
add
sub
add
or
lds
or
sub
add
sub
add
or
cld
sub
add
sub
add
add
sub
add
sub
add
xor
add
or
or
or
lea
or
stc
or
mov
or
or
xor
or
jp
or
lahf
das
or
dec
xor
add
xor
add
or
cmp
or
jp
or
mov
or
fdivl
or
adc
cmp
add
hlt
or
add
or
dec
testb
in
testl
add
lock
or
xchg
repnz
fucomp
or
cld
or
mov
or
imul
or
mov
in
or
and
or
std
out
or
std
icebp
or
es
or
add
repnz
inc
out
or
imul
or
sub
add
sti
or
adc
or
mov
stc
or
mov
or
insl
jmp
add
or
pop
std
or
pop
hlt
or
aad
or
xor
add
or
sbb
or
ja
or
lcall
add
or
inc
testl
add
testl
add
or
and
or
mov
std
or
loopne
or
movsl
clc
or
fsubr
or
jbe
or
xchg
ljmp
jl
or
push
ljmp
sub
or
scas
repnz
xlat
cmc
or
leave
hlt
or
div
or
lock
xor
add
or
mov
or
mov
or
jno
or
xor
or
mov
or
arpl
or
add
or
hlt
cld
or
xor
or
xor
add
or
add
or
mov
testl
add
clc
or
and
or
xchg
jmp
add
or
dec
clc
or
fdivp
or
sti
jmp
or
cmp
or
data16
or
mov
or
pop
aaa
or
in
or
sahf
repz
adc
std
or
inc
cmp
add
in
add
or
arpl
or
push
cmp
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
add
add
add
add
sbb
add
add
add
add
add
and
add
add
add
add
add
sub
add
add
add
add
add
xor
add
add
add
add
add
cmp
add
inc
add
inc
add
add
inc
add
dec
add
dec
add
add
dec
add
push
add
push
add
add
push
add
pop
add
pop
add
add
pop
add
popa
add
arpl
add
data16
push
add
insb
add
outsb
add
jo
jno
jb
jae
je
jne
jbe
ja
js
jns
jp
jnp
jl
jge
jle
jg
addb
add
add
add
add
add
add
add
xchg
add
add
add
add
add
cmpsl
add
add
add
add
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
add
add
add
add
sbb
add
add
add
add
add
and
add
add
add
add
add
sub
add
add
add
add
add
xor
add
add
add
add
add
cmp
add
inc
add
inc
add
add
inc
add
dec
add
dec
add
add
dec
add
push
add
push
add
add
push
add
pop
add
pop
add
add
pop
add
popa
add
arpl
add
add
push
add
insb
add
outsb
add
jo
jno
jb
jae
je
jne
jbe
ja
js
jns
jp
jnp
jl
jge
jle
jg
addb
add
add
add
add
add
add
add
xchg
add
add
add
add
add
cmpsl
add
add
add
add
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
gs
inc
dec
cs
add
inc
gs
js
gs
inc
dec
dec
imul
arpl
jne
popa
addr16
inc
gs
push
push
inc
outsl
jne
je
jno
jb
add
arpl
jne
popa
addr16
push
gs
gs
jae
inc
push
push
inc
popa
je
and
jno
jbe
inc
inc
arpl
jne
popa
addr16
inc
gs
push
push
push
jae
addr16
jno
imul
jo
jne
popa
addr16
inc
outsl
insb
insb
arpl
push
inc
popa
je
and
jno
jbe
inc
inc
arpl
jne
popa
addr16
inc
imul
je
outsl
outsb
and
jno
jbe
inc
inc
arpl
jne
popa
addr16
imul
imul
and
jno
jbe
inc
inc
imul
arpl
inc
inc
outsl
outsb
jbe
jb
inc
imul
arpl
and
jno
jo
ss
jb
jo
imul
je
popa
jo
inc
inc
imul
arpl
inc
inc
imul
je
outsl
outsb
and
jno
jbe
inc
inc
imul
arpl
inc
imul
imul
and
jno
jbe
inc
push
jns
jne
imul
jo
imul
je
and
jno
jbe
inc
inc
outsl
jb
jae
push
inc
outsl
jb
inc
and
arpl
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
inc
inc
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
push
jo
popa
je
push
imul
jno
xor
outsl
outsl
insb
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
inc
inc
outsl
jb
jae
push
inc
outsl
jb
inc
and
arpl
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
add
js
and
ss
jae
imul
imul
inc
inc
jae
imul
imul
inc
imul
and
jno
jo
add
js
and
cmp
jo
outsb
inc
push
inc
push
jo
outsb
inc
jne
je
outsb
add
jae
imul
imul
outsb
inc
inc
imul
and
jno
jo
add
jae
imul
imul
outsb
inc
and
fs
and
jno
jbe
inc
inc
outsl
jb
jae
push
inc
outsl
jb
inc
and
fs
and
jno
jbe
inc
and
jo
xor
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsb
arpl
jb
imul
popa
jo
imul
popa
jo
imul
jb
jno
jb
add
dec
popa
imul
imul
inc
inc
dec
popa
imul
insb
imul
jb
jae
push
inc
outsl
jb
inc
and
arpl
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
inc
inc
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
push
jo
popa
je
push
imul
jno
xor
outsl
outsl
insb
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
inc
inc
outsl
jb
jae
push
inc
outsl
jb
inc
and
arpl
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
add
js
and
ss
jae
imul
imul
inc
inc
jae
imul
imul
inc
imul
and
jno
jo
add
js
and
cmp
jo
outsb
inc
push
inc
push
jo
outsb
inc
jne
je
outsb
add
jae
imul
imul
outsb
inc
inc
imul
and
jno
jo
add
jae
imul
imul
outsb
inc
and
fs
and
jno
jbe
inc
inc
outsl
jb
jae
push
inc
outsl
jb
inc
and
fs
and
jno
jbe
inc
and
jo
xor
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsb
arpl
jb
imul
outsl
jb
outsl
jo
imul
imul
add
inc
outsl
jb
outsl
jo
imul
outsb
popa
insb
imul
jb
jae
push
inc
outsl
jb
inc
and
arpl
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
inc
inc
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
push
jo
popa
je
push
imul
jno
xor
outsl
outsl
insb
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
inc
inc
outsl
jb
jae
push
inc
outsl
jb
inc
and
arpl
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
add
outsl
jb
jae
push
inc
outsl
jb
inc
and
fs
and
jno
jbe
inc
inc
inc
outsl
jb
popa
bound
je
dec
outsb
imul
add
inc
outsl
jb
popa
bound
je
inc
imul
add
js
and
xor
insb
jne
imul
insb
inc
imul
outsb
add
js
and
xor
insb
jne
imul
je
insb
imul
add
arpl
imul
gs
inc
popa
outsb
jbe
jae
add
js
and
xor
insb
jne
imul
gs
inc
popa
outsb
jbe
jae
inc
push
arpl
imul
jne
arpl
outsl
je
outsl
jne
fs
jno
jo
add
arpl
imul
dec
outsl
fs
gs
imul
jb
imul
insb
jne
imul
inc
imul
jb
arpl
inc
push
arpl
imul
inc
imul
jno
jb
jae
inc
push
arpl
imul
outsb
inc
imul
insb
and
jno
jo
aaa
inc
jb
jo
imul
popa
jo
imul
popa
jo
imul
je
popa
jo
imul
jne
imul
push
popa
jb
outsb
je
insl
popa
addr16
jno
jo
aaa
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
jo
ss
jb
jo
imul
outsb
jbe
jae
inc
push
arpl
imul
je
push
jb
outsb
jae
popa
jb
outsb
je
jno
jb
imul
imul
push
arpl
imul
push
jb
outsb
jae
popa
jb
outsb
je
imul
jb
imul
push
arpl
imul
je
push
popa
jo
arpl
popa
outsb
jae
popa
jb
outsb
je
jno
jb
xor
inc
jb
jo
imul
outsb
jbe
jae
imul
push
imul
push
push
arpl
ss
jb
jo
imul
je
popa
jo
xor
push
push
inc
outsl
insb
outsl
jb
inc
push
arpl
imul
inc
imul
je
jb
outsb
jae
popa
jb
outsb
je
jno
jb
xor
inc
jb
jo
imul
outsb
jbe
jae
imul
outsb
outsl
ja
inc
push
push
arpl
ss
jb
jo
imul
je
popa
jo
xor
push
push
inc
outsl
insb
outsl
jb
inc
push
arpl
imul
inc
imul
outsb
jae
popa
jb
outsb
je
jno
jb
xor
inc
jb
jo
imul
outsb
jbe
jae
imul
jo
imul
je
popa
jo
xor
push
push
inc
outsl
insb
outsl
jb
inc
push
arpl
imul
addr16
imul
outsl
jb
jno
jb
xor
inc
jb
jo
imul
je
popa
jo
xor
push
push
inc
outsl
insb
outsl
jb
xor
inc
push
arpl
imul
je
inc
imul
inc
imul
jno
jb
xor
inc
jb
jo
imul
je
popa
jo
xor
push
push
inc
outsl
insb
outsl
jb
xor
xor
outsl
outsl
insb
add
arpl
imul
je
inc
imul
inc
imul
jb
xor
inc
jb
jo
imul
je
popa
jo
xor
push
push
inc
outsl
insb
outsl
jb
inc
push
arpl
imul
gs
imul
inc
imul
and
jno
jo
cmp
outsb
je
outsl
insb
jae
push
dec
insl
popa
addr16
imul
jb
jo
imul
outsb
jbe
jae
imul
jo
imul
insb
outsl
jb
ss
outsl
outsl
insb
add
arpl
imul
je
push
ja
inc
outsl
insb
outsl
jb
inc
jb
jae
push
popa
je
gs
and
jno
xor
push
push
inc
outsl
insb
outsl
jb
xor
inc
push
arpl
imul
dec
arpl
and
jno
jo
add
arpl
imul
dec
arpl
dec
inc
and
jno
jne
add
arpl
imul
dec
outsl
fs
gs
arpl
and
jno
jne
jo
add
arpl
imul
je
inc
imul
insl
dec
arpl
and
jno
jo
xor
jb
jo
imul
outsl
outsb
xor
push
push
inc
outsl
insb
outsl
jb
inc
push
arpl
imul
je
dec
arpl
inc
jb
insl
inc
imul
jb
xor
inc
jb
jo
imul
je
popa
jo
xor
push
push
inc
outsl
insb
outsl
jb
inc
push
arpl
imul
outsl
addr16
outsb
imul
gs
jae
and
jno
jne
add
arpl
imul
outsl
addr16
outsb
imul
gs
jae
and
jno
jne
add
arpl
imul
insb
jae
outsl
inc
imul
imul
jne
add
arpl
imul
insb
jae
outsl
inc
imul
imul
jne
add
arpl
imul
inc
dec
dec
and
jno
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
insb
jne
imul
jae
gs
gs
gs
jno
jb
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
insb
jne
imul
and
jno
jbe
inc
push
arpl
imul
push
outsb
jne
gs
insb
gs
jno
jbe
inc
push
arpl
imul
insl
jo
gs
outsb
je
fs
jno
jbe
inc
push
arpl
imul
je
outsb
jbe
jb
gs
arpl
jno
jb
xor
imul
push
push
outsl
imul
push
arpl
imul
dec
outsb
jbe
jb
inc
jb
insl
gs
jno
jb
xor
push
imul
push
push
arpl
inc
push
arpl
imul
push
jno
jb
xor
push
imul
push
push
arpl
push
arpl
imul
push
jno
jb
js
xor
outsb
outsl
ja
inc
push
push
arpl
push
arpl
imul
je
outsb
push
arpl
jno
jb
xor
imul
push
push
outsl
imul
push
imul
push
push
arpl
push
arpl
imul
je
outsb
push
outsl
insb
jns
outsb
and
jno
jb
xor
imul
push
push
outsl
imul
push
imul
push
push
outsl
imul
push
arpl
imul
je
gs
outsl
insb
outsl
jb
jno
jb
xor
push
push
inc
outsl
insb
outsl
jb
inc
push
arpl
imul
dec
gs
popa
addr16
jno
imul
insb
jne
imul
je
push
outsl
je
je
fs
outsl
outsb
je
jno
jb
xor
jb
jo
imul
outsb
je
add
arpl
imul
jns
jno
jb
add
arpl
imul
je
gs
outsb
je
imul
imul
jne
imul
gs
outsl
outsb
je
outsl
insb
and
jno
jo
aaa
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
add
arpl
imul
gs
imul
jno
imul
jne
imul
gs
outsl
jb
and
jno
jo
xor
outsb
je
outsl
insb
jae
push
push
imul
outsl
insb
jo
xor
jb
jae
push
inc
outsl
jb
xor
jb
insb
jae
push
inc
insb
imul
insb
add
arpl
imul
dec
inc
dec
inc
insb
imul
gs
jno
jne
xor
outsl
outsl
insb
add
arpl
imul
push
popa
jb
popa
outsb
je
jno
jb
js
xor
jns
je
insl
inc
push
popa
jb
popa
outsb
je
imul
jne
imul
gs
arpl
jno
imul
outsb
outsl
ja
inc
push
push
arpl
push
arpl
imul
outsb
push
outsl
jb
inc
jb
popa
and
jno
jbe
inc
push
arpl
imul
outsl
ja
insb
popa
jae
dec
popa
insl
gs
jno
imul
jne
imul
push
imul
insl
popa
je
and
jno
imul
jne
imul
arpl
outsl
push
imul
jno
imul
inc
push
arpl
imul
jbe
je
push
imul
jno
imul
jne
imul
push
jb
jbe
outsb
jae
popa
outsb
arpl
jno
jb
js
cmp
jae
gs
inc
and
insb
push
je
imul
and
xor
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
insb
jne
imul
jbe
je
push
jb
jbe
outsb
jae
popa
outsb
arpl
jno
jb
js
cmp
jae
gs
inc
and
insb
push
je
imul
and
xor
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
insb
jne
imul
outsl
js
jno
jb
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
add
arpl
imul
insb
addr16
jno
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
popa
insb
outsl
addr16
push
dec
jae
inc
insb
addr16
jns
gs
push
jns
je
insl
inc
and
je
cmp
insb
outsl
addr16
push
dec
jae
inc
insb
addr16
je
and
jne
and
and
jne
and
xor
arpl
imul
imul
insb
push
arpl
jno
jo
ss
jb
jo
imul
outsb
jbe
jae
js
xor
outsb
outsl
ja
inc
push
push
arpl
inc
jb
jo
imul
insb
outsl
jb
xor
xor
insb
jne
imul
insb
inc
imul
outsb
jne
add
arpl
imul
insl
imul
and
jno
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
jb
jo
imul
outsb
jbe
jae
add
arpl
imul
jbe
inc
push
jp
and
jno
jo
ss
jb
jo
imul
outsb
jbe
jae
inc
push
arpl
imul
arpl
insl
outsl
and
jno
imul
jne
imul
insb
outsl
arpl
insl
outsl
and
jno
jo
imul
jne
imul
dec
gs
outsl
and
jno
jb
jbe
inc
push
arpl
imul
gs
outsl
push
imul
jo
add
arpl
imul
popa
jb
dec
gs
and
jno
jo
je
jne
add
arpl
imul
inc
outsb
fs
imul
add
arpl
imul
dec
outsb
arpl
jno
jb
jbe
add
arpl
imul
inc
arpl
jno
jb
jbe
add
arpl
imul
dec
data16
je
jno
jb
jbe
add
arpl
imul
inc
jo
and
jno
jo
je
imul
jne
imul
dec
outsl
jbe
and
jno
jo
imul
insb
jne
imul
outsb
jbe
popa
jb
jno
jb
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
insb
jne
imul
je
outsl
insl
insl
popa
outsb
fs
imul
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
jns
je
insl
inc
inc
outsb
jae
push
je
imul
push
arpl
imul
push
jo
gs
imul
jb
jno
jb
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
insb
jne
imul
inc
insb
insb
outsl
arpl
jno
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
insb
jne
imul
outsb
addr16
outsl
push
inc
push
jno
jb
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
insb
jne
imul
push
and
jno
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
insb
jne
imul
inc
outsb
imul
and
jno
jne
jo
add
arpl
imul
outsb
gs
jne
jae
jb
jno
jb
imul
insb
jne
imul
je
popa
imul
inc
push
arpl
imul
push
popa
imul
inc
push
arpl
imul
gs
gs
and
jno
jo
ss
jb
jo
imul
outsb
jbe
jae
js
xor
outsb
outsl
ja
inc
push
push
arpl
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
popa
jae
gs
push
inc
insb
imul
xor
outsl
outsl
insb
je
add
arpl
imul
inc
gs
insb
push
gs
inc
js
jno
jb
xor
inc
outsl
outsb
je
outsl
insb
jae
push
inc
jne
je
insl
inc
outsl
outsb
je
outsl
insb
imul
jae
gs
inc
inc
outsb
jae
push
je
imul
push
imul
push
push
arpl
inc
insb
popa
jae
gs
push
inc
insb
imul
xor
push
arpl
imul
je
insb
imul
xor
outsl
outsl
insb
je
add
arpl
imul
inc
gs
insb
push
gs
and
jno
jo
xor
outsb
je
outsl
insb
jae
push
inc
jne
je
insl
inc
outsl
outsb
je
outsl
insb
imul
jae
gs
inc
inc
outsb
jae
push
je
imul
push
imul
push
push
arpl
inc
insb
popa
jae
gs
push
inc
insb
imul
xor
push
arpl
imul
je
insb
imul
xor
outsl
outsl
insb
add
arpl
imul
inc
gs
insb
push
gs
inc
js
jno
jb
xor
inc
outsl
outsb
je
outsl
insb
jae
push
inc
jne
je
insl
inc
outsl
outsb
je
outsl
insb
imul
jae
gs
inc
inc
outsb
jae
push
je
imul
push
imul
push
push
arpl
inc
insb
popa
jae
gs
push
inc
insb
imul
xor
push
arpl
imul
je
insb
imul
xor
outsl
outsl
insb
add
arpl
imul
inc
gs
insb
push
gs
and
jno
jo
xor
outsb
je
outsl
insb
jae
push
inc
jne
je
insl
inc
outsl
outsb
je
outsl
insb
imul
jae
gs
inc
inc
outsb
jae
push
je
imul
push
imul
push
push
arpl
inc
insb
popa
jae
gs
push
inc
insb
imul
xor
push
arpl
imul
je
insb
imul
add
arpl
imul
inc
gs
insb
inc
imul
jb
xor
inc
outsl
outsb
je
outsl
insb
jae
push
inc
jne
je
insl
inc
outsl
outsb
je
outsl
insb
imul
popa
jo
imul
popa
jo
imul
imul
push
push
arpl
push
arpl
imul
gs
inc
popa
outsb
jbe
jae
and
fs
and
jno
jbe
inc
push
arpl
imul
gs
inc
popa
outsb
jbe
jae
inc
jb
popa
je
dec
popa
outsb
fs
gs
jno
jbe
inc
push
arpl
imul
gs
inc
popa
outsb
jbe
jae
inc
jb
gs
popa
outsb
fs
gs
jno
jbe
inc
push
arpl
imul
gs
inc
popa
outsb
jbe
jae
push
gs
jb
imul
imul
jne
imul
gs
imul
outsl
jb
jno
jb
imul
jne
imul
imul
xor
and
jno
xor
outsl
outsl
insb
add
arpl
imul
je
and
jno
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
insb
jne
imul
jb
addr16
jne
fs
popa
jae
and
jno
jbe
inc
push
arpl
imul
imul
gs
imul
jbe
inc
push
arpl
imul
insb
imul
and
jno
jbe
inc
push
arpl
imul
imul
imul
jbe
inc
dec
arpl
imul
outsl
outsb
dec
imul
js
and
aaa
dec
arpl
imul
outsl
outsb
dec
imul
outsl
insb
imul
outsl
outsb
dec
imul
je
and
jno
jbe
inc
dec
arpl
imul
outsl
outsb
dec
imul
je
and
jno
jbe
inc
dec
arpl
imul
outsl
outsb
dec
imul
imul
gs
jno
jbe
inc
dec
arpl
imul
outsl
outsb
dec
imul
outsb
addr16
jno
jbe
inc
dec
arpl
imul
outsl
outsb
dec
imul
push
jo
popa
je
and
jno
jbe
inc
dec
arpl
imul
outsl
outsb
dec
imul
fs
popa
je
and
jno
jo
xor
jae
jae
push
push
je
gs
insl
add
arpl
imul
outsl
outsb
dec
imul
je
inc
popa
je
and
jno
jo
xor
jae
jae
push
push
je
gs
insl
add
arpl
imul
outsl
outsb
dec
imul
imul
gs
imul
jo
xor
insb
popa
jae
gs
push
inc
imul
outsl
insb
imul
outsl
outsb
dec
imul
and
jno
imul
insb
imul
outsl
outsb
dec
imul
inc
outsl
jne
je
jno
jb
add
arpl
imul
outsl
outsb
dec
imul
outsb
inc
push
fs
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
dec
arpl
imul
outsl
outsb
dec
imul
and
jno
imul
jo
imul
outsl
outsb
add
arpl
imul
outsl
outsb
dec
imul
dec
arpl
and
jno
jo
xor
jb
jo
imul
outsl
outsb
add
arpl
imul
outsl
outsb
dec
imul
and
jno
jo
xor
jb
jo
imul
outsl
outsb
add
arpl
imul
outsl
outsb
dec
imul
push
gs
jne
arpl
jno
jb
imul
outsl
insb
imul
outsl
outsb
dec
imul
imul
jo
cmp
popa
jae
gs
push
push
gs
imul
inc
dec
arpl
imul
outsl
outsb
dec
imul
popa
jb
jno
jb
add
arpl
imul
outsl
outsb
dec
imul
gs
and
jno
imul
insb
imul
outsl
outsb
dec
imul
push
and
jno
imul
insb
imul
outsl
outsb
dec
imul
gs
data16
jno
jo
xor
jb
jo
imul
outsl
outsb
add
arpl
imul
outsl
outsb
dec
imul
gs
push
gs
jne
arpl
jno
jb
jne
jo
add
arpl
imul
outsl
outsb
dec
imul
gs
and
jno
imul
jo
imul
outsl
outsb
add
arpl
imul
outsl
outsb
dec
imul
fs
gs
jne
arpl
jno
jb
imul
add
arpl
imul
outsl
outsb
dec
imul
gs
jno
imul
insb
imul
outsl
outsb
dec
imul
push
jo
popa
je
push
je
je
and
jno
xor
outsl
outsl
insb
add
arpl
imul
outsl
outsb
dec
imul
fs
jb
insl
push
je
gs
insl
and
jno
jo
xor
jae
jae
push
push
je
gs
insl
add
arpl
imul
outsl
outsb
dec
imul
gs
outsl
push
je
gs
insl
and
jno
jo
xor
jae
jae
push
push
je
gs
insl
add
arpl
imul
popa
insb
imul
and
jno
jbe
inc
dec
arpl
imul
je
popa
insb
imul
and
jno
jbe
inc
dec
popa
js
imul
dec
outsb
je
jno
jb
imul
insl
imul
dec
outsb
je
xor
jno
jb
push
xor
inc
dec
popa
js
imul
dec
outsl
outsb
addr16
jno
jb
je
add
popa
js
imul
jno
jb
imul
insl
imul
jno
jb
imul
insl
imul
outsb
je
addr16
jno
jb
js
js
add
popa
js
imul
outsb
je
addr16
jno
jb
js
js
add
popa
js
imul
outsb
je
xor
jno
jb
js
js
add
popa
js
imul
outsb
je
xor
jno
jb
js
js
add
popa
js
imul
insb
outsl
popa
je
jno
jb
js
js
add
popa
js
imul
insb
outsl
popa
je
jno
jb
js
js
add
popa
js
imul
popa
je
push
imul
jo
xor
push
jns
je
insl
inc
push
inc
popa
je
push
imul
dec
popa
js
imul
popa
je
push
imul
jo
xor
push
jns
je
insl
inc
push
inc
popa
je
push
imul
dec
popa
js
imul
data16
jno
jo
xor
jns
je
insl
inc
push
popa
jb
popa
outsb
je
imul
insl
imul
data16
jno
jo
xor
jns
je
insl
inc
push
popa
jb
popa
outsb
je
imul
insl
imul
insb
imul
and
jno
jbe
inc
dec
popa
js
imul
imul
imul
jbe
inc
and
jo
xor
push
js
push
push
dec
outsl
jne
gs
jne
je
outsb
jae
inc
push
js
push
push
push
js
jb
jns
arpl
inc
add
js
and
cmp
jae
gs
insb
inc
push
push
js
jb
jns
arpl
add
js
and
cmp
jae
gs
insb
inc
push
inc
js
arpl
popa
je
add
js
push
push
imul
and
jno
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
inc
push
js
push
dec
arpl
inc
js
jb
arpl
jno
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
js
push
inc
imul
je
and
jno
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
je
xor
push
js
push
push
inc
js
arpl
popa
je
add
js
push
inc
imul
je
push
popa
imul
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
je
xor
push
js
push
push
inc
js
arpl
popa
je
add
js
push
push
push
js
jb
jns
arpl
inc
and
arpl
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
inc
push
js
push
push
push
js
jb
jns
arpl
inc
and
fs
and
jno
jbe
inc
push
js
push
push
push
js
jb
jns
arpl
inc
dec
outsl
popa
fs
jno
jbe
inc
push
js
push
push
push
js
jb
jns
arpl
inc
dec
outsl
je
imul
outsl
outsb
and
jno
jo
cmp
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
cmp
popa
jae
gs
push
dec
jo
jb
je
outsl
outsb
add
js
push
push
push
js
jb
jns
arpl
inc
push
gs
outsl
jo
jo
outsb
jne
jno
jb
xor
dec
outsb
jne
inc
push
push
outsl
jo
jo
outsb
jne
inc
push
js
push
push
push
js
jb
jns
arpl
inc
push
outsb
fs
popa
outsb
arpl
dec
outsl
fs
jno
jbe
inc
push
js
push
push
push
js
jb
jns
arpl
inc
inc
push
outsb
jne
outsl
jo
jo
jno
jb
imul
push
push
push
js
jb
jns
arpl
inc
inc
push
gs
jne
je
outsb
jne
je
insl
and
jno
jbe
inc
push
js
push
push
push
js
jb
jns
arpl
inc
push
gs
arpl
and
jno
jo
xor
jb
jo
imul
outsl
outsb
add
js
push
push
push
js
jb
jns
arpl
inc
push
gs
arpl
dec
imul
jo
aaa
dec
arpl
imul
outsl
outsb
dec
imul
jae
gs
insb
inc
push
push
js
jb
jns
arpl
inc
inc
gs
arpl
gs
arpl
and
jno
jbe
inc
push
js
push
push
push
js
jb
jns
arpl
inc
inc
gs
outsb
imul
jno
jb
add
js
push
push
push
js
jb
jns
arpl
inc
push
gs
outsb
imul
jno
jb
bound
insb
add
js
push
push
push
js
jb
jns
arpl
inc
push
gs
arpl
gs
jno
xor
outsl
outsl
insb
add
js
push
push
push
js
jb
jns
arpl
inc
push
push
jno
jbe
inc
push
js
push
push
push
js
jb
jns
arpl
inc
dec
imul
add
js
push
push
push
js
jb
jns
arpl
inc
push
gs
push
jae
outsb
and
jno
xor
outsl
outsl
insb
add
js
push
push
push
js
jb
jns
arpl
inc
push
gs
outsb
je
jb
popa
insb
and
jno
jne
add
js
push
push
push
js
jb
jns
arpl
inc
push
imul
jb
add
js
push
push
push
js
jb
jns
arpl
inc
dec
arpl
inc
push
fs
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
js
push
push
push
js
jb
jns
arpl
inc
push
gs
imul
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
jae
gs
insb
inc
push
push
js
jb
jns
arpl
inc
push
jo
popa
je
dec
outsl
je
data16
popa
je
and
jno
jbe
inc
push
js
push
push
push
js
jb
jns
arpl
inc
inc
arpl
popa
je
and
jno
jbe
inc
push
js
push
push
push
js
jb
jns
arpl
inc
inc
gs
arpl
popa
je
and
jno
jbe
inc
push
js
push
push
push
js
jb
jns
arpl
inc
inc
push
dec
arpl
and
jno
jbe
inc
push
js
push
push
push
js
jb
jns
arpl
inc
dec
outsl
jne
gs
outsl
jbe
and
jno
xor
push
jns
je
insl
inc
and
je
cmp
popa
jae
gs
inc
insb
popa
jae
gs
pop
xor
jne
and
and
jne
and
and
push
js
push
push
push
js
jb
jns
arpl
inc
dec
outsl
jne
gs
outsl
ja
and
jno
xor
inc
outsl
outsb
je
outsl
insb
jae
push
dec
outsl
jne
gs
jne
je
outsb
xor
push
jns
je
insl
inc
and
je
cmp
popa
jae
gs
inc
insb
popa
jae
gs
pop
xor
jne
and
and
jne
and
and
push
js
push
push
push
js
jb
jns
arpl
inc
dec
outsl
jne
gs
jo
jno
jb
xor
outsb
je
outsl
insb
jae
push
dec
outsl
jne
gs
jne
je
outsb
xor
push
jns
je
insl
inc
and
je
cmp
popa
jae
gs
inc
insb
popa
jae
gs
pop
xor
jne
and
and
jne
and
and
push
js
push
push
push
js
jb
jns
arpl
inc
inc
bound
imul
jbe
inc
push
js
push
push
push
js
jb
jns
arpl
inc
inc
outsl
inc
insb
imul
xor
inc
outsl
outsb
je
outsl
insb
jae
push
dec
outsl
jne
gs
jne
je
outsb
xor
push
jns
je
insl
inc
and
je
cmp
popa
jae
gs
inc
insb
popa
jae
gs
pop
xor
jne
and
and
jne
and
and
push
js
push
push
push
js
jb
jns
arpl
inc
push
outsb
fs
jb
arpl
jno
jb
aaa
dec
gs
popa
addr16
push
dec
gs
popa
add
js
push
inc
imul
je
outsl
outsb
and
jno
jbe
inc
push
js
push
imul
imul
and
jno
jbe
inc
inc
arpl
outsb
fs
push
imul
jno
jbe
inc
push
inc
inc
popa
insb
outsb
fs
jb
and
arpl
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
inc
push
inc
inc
popa
insb
outsb
fs
jb
inc
push
and
jno
jbe
inc
push
inc
inc
popa
insb
outsb
fs
jb
inc
insb
imul
jbe
inc
push
inc
inc
popa
insb
outsb
fs
jb
dec
jae
gs
jo
gs
jb
jno
jb
add
inc
inc
popa
insb
outsb
fs
jb
inc
popa
jns
push
gs
outsl
outsb
je
and
jno
imul
popa
insb
outsb
fs
jb
inc
popa
jns
push
push
outsb
je
and
jno
jbe
inc
push
inc
inc
popa
insb
outsb
fs
jb
inc
jb
ja
gs
insb
and
jno
imul
imul
push
push
arpl
push
jns
je
insl
inc
and
je
xor
jb
fs
inc
jb
fs
pop
xor
jne
and
and
jne
and
and
inc
popa
insb
outsb
fs
jb
inc
gs
gs
insb
push
gs
and
jno
imul
popa
insb
outsb
fs
jb
push
gs
arpl
insb
insb
and
jno
imul
popa
insb
outsb
fs
jb
push
gs
inc
inc
popa
insb
outsb
fs
jb
popa
je
and
jno
xor
push
jns
je
insl
inc
push
inc
popa
je
push
imul
inc
popa
insb
outsb
fs
jb
push
je
jb
inc
popa
insb
outsb
fs
jb
popa
je
and
jno
jbe
inc
push
inc
inc
popa
insb
outsb
fs
jb
inc
gs
popa
je
inc
insb
gs
outsb
je
jno
jb
add
inc
inc
popa
insb
outsb
fs
jb
push
gs
popa
je
inc
insb
gs
outsb
je
jno
jb
imul
popa
insb
outsb
fs
jb
push
gs
je
jb
dec
push
gs
jb
add
inc
inc
popa
insb
outsb
fs
jb
push
gs
jae
inc
jne
jb
outsb
je
popa
je
and
jno
xor
outsl
outsl
insb
add
inc
inc
popa
insb
outsb
fs
jb
inc
push
dec
outsl
outsb
je
and
jno
imul
popa
insb
outsb
fs
jb
push
jb
jbe
outsl
outsb
je
and
jno
jbe
inc
push
inc
inc
popa
insb
outsb
fs
jb
dec
gs
dec
outsl
outsb
je
and
jno
jbe
inc
push
inc
inc
popa
insb
outsb
fs
jb
dec
gs
pop
gs
jb
jno
jb
add
inc
inc
popa
insb
outsb
fs
jb
push
jb
jbe
gs
jb
jno
jb
add
inc
inc
popa
insb
outsb
fs
jb
push
jo
popa
je
inc
popa
insb
outsb
fs
jb
jno
jb
add
inc
inc
popa
insb
outsb
fs
jb
push
dec
push
imul
jb
ss
gs
popa
addr16
push
push
dec
push
imul
jo
xor
push
inc
inc
popa
insb
outsb
fs
jb
inc
push
inc
inc
popa
insb
outsb
fs
jb
inc
imul
and
jno
jo
add
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
push
jo
popa
je
push
imul
jno
xor
outsl
outsl
insb
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
inc
and
jo
xor
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsb
arpl
jb
imul
arpl
outsb
fs
dec
outsb
imul
add
inc
arpl
outsb
fs
inc
imul
add
addr16
fs
push
imul
jno
jbe
inc
push
inc
inc
outsl
insb
outsl
jb
jb
fs
and
arpl
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
inc
push
inc
inc
outsl
insb
outsl
jb
jb
fs
inc
jb
popa
je
push
outsb
fs
jno
jbe
inc
push
inc
inc
outsl
insb
outsl
jb
jb
fs
inc
jb
ja
jno
popa
jb
and
jno
imul
inc
push
inc
inc
outsl
insb
outsl
jb
jb
fs
inc
jb
ja
addr16
addr16
jno
jbe
inc
push
inc
inc
outsl
insb
outsl
jb
jb
fs
inc
outsb
popa
bound
outsl
jb
addr16
jne
fs
jno
xor
outsl
outsl
insb
add
inc
inc
outsl
insb
outsl
jb
jb
fs
inc
outsb
popa
bound
popa
arpl
jb
jne
fs
jno
xor
outsl
outsl
insb
add
inc
inc
outsl
insb
outsl
jb
jb
fs
inc
gs
outsl
jb
addr16
jne
fs
outsl
insb
outsl
jb
jno
jb
add
inc
inc
outsl
insb
outsl
jb
jb
fs
inc
gs
popa
arpl
jb
jne
fs
outsl
insb
outsl
jb
jno
jb
add
inc
inc
outsl
insb
outsl
jb
jb
fs
push
dec
push
gs
outsl
arpl
and
jno
jb
xor
jae
popa
addr16
push
push
dec
push
gs
outsl
arpl
add
inc
inc
outsl
insb
outsl
jb
jb
fs
push
dec
dec
imul
and
jno
jb
xor
jae
popa
addr16
push
push
dec
dec
imul
add
inc
inc
outsl
insb
outsl
jb
jb
fs
dec
gs
outsl
ja
and
jno
jb
jae
ss
jns
je
insl
inc
and
je
cmp
popa
jae
gs
inc
insb
popa
jae
gs
pop
xor
jne
and
and
jne
and
and
inc
outsl
insb
outsl
jb
jb
fs
push
dec
inc
gs
insb
addr16
outsl
fs
jno
jb
xor
jae
popa
addr16
push
push
dec
dec
outsl
push
popa
jb
insl
jae
inc
push
inc
inc
outsl
insb
outsl
jb
jb
fs
push
dec
push
imul
jb
ss
gs
popa
addr16
push
push
dec
push
imul
inc
outsl
insb
outsl
jb
jb
fs
inc
dec
inc
je
xor
popa
outsb
addr16
jno
jb
aaa
dec
gs
popa
addr16
push
dec
gs
popa
add
inc
inc
outsl
insb
outsl
jb
jb
fs
dec
outsl
jne
gs
outsl
ja
and
jno
xor
inc
outsl
outsb
je
outsl
insb
jae
push
dec
outsl
jne
gs
jne
je
outsb
xor
push
jns
je
insl
inc
and
je
cmp
popa
jae
gs
inc
insb
popa
jae
gs
pop
xor
jne
and
and
jne
and
and
push
inc
inc
outsl
insb
outsl
jb
jb
fs
dec
outsl
jne
gs
outsl
jbe
and
jno
xor
push
jns
je
insl
inc
and
je
cmp
popa
jae
gs
inc
insb
popa
jae
gs
pop
xor
jne
and
and
jne
and
and
push
inc
inc
outsl
insb
outsl
jb
jb
fs
dec
outsl
jne
gs
jo
jno
jb
xor
outsb
je
outsl
insb
jae
push
dec
outsl
jne
gs
jne
je
outsb
xor
push
jns
je
insl
inc
and
je
cmp
popa
jae
gs
inc
insb
popa
jae
gs
pop
xor
jne
and
and
jne
and
and
push
inc
inc
outsl
insb
outsl
jb
jb
fs
push
popa
imul
jbe
inc
push
inc
inc
outsl
insb
outsl
jb
jb
fs
push
gs
popa
arpl
jb
jne
fs
outsb
fs
jno
jb
add
inc
inc
outsl
insb
outsl
jb
jb
fs
push
gs
outsl
jb
addr16
jne
fs
outsb
fs
jno
jb
add
inc
inc
outsl
insb
outsl
jb
jb
fs
push
gs
jb
fs
jb
gs
outsb
addr16
jno
xor
push
inc
jb
fs
jb
gs
outsb
add
inc
inc
outsl
insb
outsl
jb
jb
fs
push
gs
gs
arpl
outsb
and
jno
imul
outsl
insb
outsl
jb
jb
fs
push
jno
popa
jb
inc
jb
insl
push
outsl
jae
jno
jb
imul
outsl
insb
outsl
jb
jb
fs
push
jo
popa
je
inc
gs
insb
push
imul
jb
bound
insb
add
inc
inc
outsl
insb
outsl
jb
jb
fs
inc
push
and
jno
jbe
inc
and
jo
xor
push
inc
inc
outsl
insb
outsl
jb
jb
add
inc
inc
outsl
insb
outsl
jb
jb
fs
inc
imul
and
jno
jo
add
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
push
jo
popa
je
push
imul
jno
xor
outsl
outsl
insb
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
inc
and
jo
xor
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsb
arpl
jb
imul
addr16
fs
dec
outsb
imul
add
inc
addr16
fs
inc
imul
add
imul
push
inc
inc
imul
jns
jne
insb
imul
je
and
jno
jo
cmp
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
inc
inc
imul
push
inc
inc
imul
jns
jne
insb
imul
imul
push
jb
arpl
jno
jbe
inc
inc
imul
push
inc
inc
imul
jns
jne
insb
imul
insb
fs
outsb
gs
gs
insb
and
jno
insb
add
imul
push
inc
inc
imul
jns
jne
insb
imul
insb
fs
jb
gs
jno
jbe
inc
inc
imul
push
inc
inc
imul
jns
jne
insb
imul
insb
fs
jne
push
jb
gs
jno
insb
add
imul
push
inc
inc
imul
jns
jne
insb
imul
outsb
addr16
jno
jbe
inc
inc
imul
push
inc
inc
imul
jns
jne
insb
imul
arpl
jno
jb
add
imul
push
inc
inc
imul
jns
jne
insb
imul
popa
je
push
outsb
fs
jno
jbe
inc
inc
imul
push
inc
inc
imul
jns
jne
insb
imul
popa
outsb
fs
jno
imul
jb
jne
insb
inc
push
inc
inc
imul
jns
jne
insb
imul
fs
jno
jbe
inc
inc
imul
push
inc
inc
imul
jns
jne
insb
imul
arpl
popa
jae
and
jno
jb
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
imul
push
inc
inc
imul
jns
jne
insb
imul
inc
imul
jns
jno
jb
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
imul
push
inc
inc
imul
jns
jne
insb
imul
inc
jb
jbe
and
jno
arpl
inc
inc
imul
push
inc
inc
imul
jns
jne
insb
imul
jbe
push
outsl
dec
outsb
je
jno
jb
add
imul
push
inc
inc
imul
jns
jne
insb
imul
push
gs
inc
popa
jae
and
jno
xor
inc
imul
push
push
gs
inc
popa
jae
add
imul
push
inc
inc
imul
jns
jne
insb
imul
inc
imul
inc
imul
push
inc
inc
imul
jns
jne
insb
imul
inc
push
popa
insl
gs
jno
jb
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
imul
push
inc
inc
imul
jns
jne
insb
imul
imul
and
jno
jb
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
imul
push
imul
jno
jbe
inc
and
jo
xor
inc
imul
push
inc
inc
imul
jns
jne
insb
imul
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
push
jo
popa
je
push
imul
jno
xor
outsl
outsl
insb
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
inc
and
jo
xor
dec
jne
insb
imul
je
imul
outsl
outsb
add
js
and
xor
outsb
je
outsl
insb
jae
push
inc
outsb
arpl
jb
imul
imul
dec
outsb
imul
add
inc
imul
inc
imul
add
addr16
jne
gs
push
imul
jno
jbe
inc
push
inc
inc
popa
jne
gs
and
arpl
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
inc
push
inc
inc
popa
jne
gs
inc
gs
gs
outsb
je
outsl
outsb
gs
jno
jbe
inc
push
inc
inc
popa
jne
gs
push
popa
imul
jbe
inc
push
inc
inc
popa
jne
gs
push
popa
imul
addr16
jne
fs
jno
jo
ss
jb
jo
imul
je
popa
jo
inc
push
inc
inc
popa
jne
gs
push
popa
imul
js
and
jno
jo
ss
jb
jo
imul
je
popa
jo
js
xor
outsb
outsl
ja
inc
push
push
arpl
push
inc
inc
popa
jne
gs
push
popa
imul
je
imul
jo
ss
jb
jo
imul
je
popa
jo
js
xor
outsb
outsl
ja
inc
push
push
arpl
push
inc
inc
popa
jne
gs
push
popa
imul
jb
jno
jb
xor
inc
jb
jo
imul
je
popa
jo
js
xor
outsb
outsl
ja
inc
push
push
arpl
push
inc
inc
popa
jne
gs
push
popa
imul
gs
jno
jo
ss
jb
jo
imul
je
popa
jo
js
xor
outsb
outsl
ja
inc
push
push
arpl
push
inc
inc
popa
jne
gs
push
popa
imul
gs
gs
jno
jo
ss
jb
jo
imul
je
popa
jo
js
xor
outsb
outsl
ja
inc
push
push
arpl
push
inc
inc
popa
jne
gs
push
gs
inc
inc
popa
jne
gs
imul
xor
push
inc
inc
popa
jne
gs
imul
inc
popa
jne
gs
push
gs
push
js
and
jno
xor
outsl
outsl
insb
add
inc
inc
popa
jne
gs
push
gs
outsl
jb
gs
je
insb
gs
jno
xor
inc
outsl
jb
jae
push
inc
outsl
jb
inc
outsl
jb
gs
je
insb
add
inc
inc
popa
jne
gs
push
gs
outsl
jb
inc
outsl
insb
outsl
jb
jno
jb
xor
push
push
inc
outsl
insb
outsl
jb
inc
push
inc
inc
popa
jne
gs
push
gs
popa
arpl
outsl
insb
outsl
jb
jno
jb
xor
push
push
inc
outsl
insb
outsl
jb
inc
push
inc
inc
popa
jne
gs
push
gs
imul
and
jno
insb
add
inc
inc
popa
jne
gs
push
gs
popa
js
popa
insb
jne
and
jno
insb
add
inc
inc
popa
jne
gs
push
gs
jb
addr16
jae
and
jno
insb
add
inc
inc
popa
jne
gs
inc
fs
jb
addr16
jae
and
jno
insb
add
jns
jne
imul
jo
imul
je
and
jno
jbe
inc
and
jo
aaa
push
inc
inc
popa
jne
add
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
push
jo
popa
je
push
imul
jno
xor
outsl
outsl
insb
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
inc
and
jo
xor
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsb
arpl
jb
imul
popa
jo
imul
popa
jo
imul
jb
jno
jb
add
inc
addr16
jne
gs
dec
outsb
imul
add
inc
addr16
jne
gs
inc
imul
add
jae
imul
jae
gs
jno
jb
add
jae
imul
imul
outsb
inc
and
arpl
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
inc
inc
jae
imul
imul
outsb
inc
inc
jb
popa
je
inc
jne
je
outsb
and
jno
jbe
inc
inc
jae
imul
imul
outsb
inc
inc
fs
jae
push
imul
jb
je
add
jae
imul
imul
outsb
inc
push
gs
outsl
jne
fs
jno
jb
imul
jo
outsb
inc
push
inc
push
jo
outsb
inc
jne
je
outsb
inc
push
dec
push
imul
jb
ss
gs
popa
addr16
push
push
dec
push
imul
jo
outsb
inc
push
inc
push
jo
outsb
inc
jne
je
outsb
inc
push
dec
push
gs
outsl
arpl
and
jno
jb
xor
jae
popa
addr16
push
push
dec
push
gs
outsl
arpl
add
jae
imul
imul
outsb
inc
push
dec
dec
imul
and
jno
jb
xor
jae
popa
addr16
push
push
dec
dec
imul
add
jae
imul
imul
outsb
inc
dec
gs
outsl
ja
and
jno
jb
jae
ss
jns
je
insl
inc
and
je
cmp
popa
jae
gs
inc
insb
popa
jae
gs
pop
xor
jne
and
and
jne
and
and
jo
outsb
inc
push
inc
push
jo
outsb
inc
jne
je
outsb
inc
inc
je
dec
outsl
jne
gs
outsl
ja
and
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
inc
outsl
outsb
je
outsl
insb
jae
push
dec
outsl
jne
gs
jne
je
outsb
xor
push
jns
je
insl
inc
and
je
cmp
popa
jae
gs
inc
insb
popa
jae
gs
pop
xor
jne
and
and
jne
and
and
inc
jae
imul
imul
outsb
inc
inc
je
inc
insb
imul
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
inc
jae
imul
imul
outsb
inc
push
gs
outsl
arpl
inc
je
and
jno
jo
xor
jo
outsb
inc
push
push
imul
gs
jne
je
outsb
add
jae
imul
imul
outsb
inc
push
dec
inc
gs
insb
addr16
outsl
fs
jno
jb
xor
jae
popa
addr16
push
push
dec
dec
outsl
push
popa
jb
insl
jae
inc
inc
jae
imul
imul
outsb
inc
dec
outsl
popa
fs
jno
jbe
inc
inc
jae
imul
imul
outsb
inc
inc
gs
jo
insb
jns
push
jbe
inc
inc
jae
imul
imul
outsb
inc
push
gs
jo
insb
jns
push
jo
ss
jb
jo
imul
je
popa
jo
inc
inc
jae
imul
imul
outsb
inc
inc
gs
outsl
ja
inc
insb
jns
push
jbe
inc
inc
jae
imul
imul
outsb
inc
push
gs
outsl
ja
inc
insb
jns
push
jo
ss
jb
jo
imul
je
popa
jo
inc
inc
jae
imul
imul
and
arpl
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
inc
inc
jae
imul
imul
and
fs
and
jno
jbe
inc
push
je
arpl
jae
push
inc
jne
je
insl
inc
imul
and
jno
jbe
inc
inc
jae
imul
imul
inc
gs
push
outsb
and
jno
jns
jo
jno
jo
cmp
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
jbe
xor
inc
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
inc
inc
jae
imul
imul
dec
gs
outsl
ja
and
jno
jb
jae
ss
jns
je
insl
inc
and
je
cmp
popa
jae
gs
inc
insb
popa
jae
gs
pop
xor
jne
and
and
jne
and
and
jo
outsb
inc
push
inc
push
jo
outsb
inc
imul
gs
and
jno
jb
add
jae
imul
imul
dec
jae
popa
insb
imul
jno
arpl
inc
inc
jae
imul
imul
inc
jb
popa
je
push
popa
jb
insl
jae
jno
jb
xor
inc
outsl
outsb
je
outsl
insb
jae
push
inc
jb
popa
je
push
popa
jb
insl
jae
inc
inc
jae
imul
imul
inc
jb
popa
je
push
outsb
fs
jno
jbe
inc
inc
jae
imul
imul
push
gs
imul
jno
jbe
inc
inc
jae
imul
imul
push
dec
push
imul
jb
ss
gs
popa
addr16
push
push
dec
push
imul
jo
outsb
inc
push
inc
push
jo
outsb
inc
imul
outsb
dec
imul
jb
add
jae
imul
imul
push
jo
insb
imul
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
inc
jae
imul
imul
inc
outsl
ja
inc
insb
imul
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
inc
jae
imul
imul
push
dec
push
popa
jae
gs
jno
jb
xor
jae
popa
addr16
push
push
dec
dec
outsl
push
popa
jb
insl
jae
inc
inc
jae
imul
imul
push
dec
inc
jne
and
jno
jb
xor
jae
popa
addr16
push
push
dec
dec
outsl
push
popa
jb
insl
jae
inc
inc
jae
imul
imul
inc
dec
inc
js
je
jno
jb
xor
dec
gs
popa
addr16
push
push
dec
dec
outsl
push
popa
jb
insl
jae
inc
inc
jae
imul
imul
inc
gs
popa
insb
jne
and
jno
jbe
inc
inc
jae
imul
imul
push
gs
popa
insb
jne
and
jno
insb
add
jae
imul
imul
inc
push
popa
insb
jne
and
jno
insb
add
jae
imul
imul
inc
dec
inc
outsb
je
jb
jno
jb
xor
dec
gs
popa
addr16
push
push
dec
dec
outsl
push
popa
jb
insl
jae
inc
inc
jae
imul
gs
jo
gs
jne
je
outsb
inc
and
arpl
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
inc
inc
jae
imul
gs
jo
gs
jne
je
outsb
inc
and
fs
and
jno
jbe
inc
inc
jae
imul
gs
jo
gs
jne
je
outsb
inc
dec
outsl
jne
gs
outsl
ja
and
jno
xor
inc
outsl
outsb
je
outsl
insb
jae
push
dec
outsl
jne
gs
jne
je
outsb
xor
push
jns
je
insl
inc
and
je
cmp
popa
jae
gs
inc
insb
popa
jae
gs
pop
xor
jne
and
and
jne
and
and
inc
jae
imul
gs
jo
gs
jne
je
outsb
inc
dec
outsl
jne
gs
jo
jno
jb
xor
outsb
je
outsl
insb
jae
push
dec
outsl
jne
gs
jne
je
outsb
xor
push
jns
je
insl
inc
and
je
cmp
popa
jae
gs
inc
insb
popa
jae
gs
pop
xor
jne
and
and
jne
and
and
inc
jae
imul
gs
jo
gs
jne
je
outsb
inc
push
imul
imul
jb
xor
jns
je
insl
inc
push
dec
bound
arpl
inc
jae
imul
gs
jo
gs
jne
je
outsb
inc
push
popa
imul
jbe
inc
and
jo
xor
inc
jae
imul
gs
jo
gs
jne
je
outsb
add
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
push
jo
popa
je
push
imul
jno
xor
outsl
outsl
insb
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
inc
and
jo
xor
inc
jae
imul
imul
inc
inc
jae
imul
imul
inc
imul
and
jno
jo
add
js
and
cmp
jo
outsb
inc
push
inc
push
jo
outsb
inc
jne
je
outsb
add
jae
imul
imul
outsb
inc
inc
imul
and
jno
jo
add
jae
imul
imul
outsb
inc
and
fs
and
jno
jbe
inc
and
jo
xor
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsb
arpl
jb
imul
jae
imul
imul
inc
inc
inc
jae
imul
insb
imul
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
and
arpl
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
inc
push
push
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
inc
gs
popa
outsb
fs
outsl
jne
je
jno
jb
add
push
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
and
fs
and
jno
jbe
inc
push
push
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
dec
outsb
imul
and
jno
insb
add
push
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
push
popa
imul
jbe
inc
push
push
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
push
gs
jb
jo
dec
imul
xor
push
inc
jb
jo
dec
imul
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
push
gs
outsl
jb
inc
outsl
insb
outsl
jb
jno
jb
xor
push
push
inc
outsl
insb
outsl
jb
inc
push
push
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
push
gs
popa
arpl
outsl
insb
outsl
jb
jno
jb
xor
push
push
inc
outsl
insb
outsl
jb
inc
push
push
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
push
gs
jb
fs
imul
insb
add
push
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
push
gs
je
jo
imul
insb
add
push
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
push
gs
arpl
gs
jno
insb
add
push
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
push
outsl
jne
fs
jo
jno
jb
insb
add
push
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
push
gs
jb
imul
jb
add
push
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
push
gs
jb
fs
imul
jb
bound
insb
add
push
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
push
gs
outsb
push
imul
insb
add
push
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
push
popa
imul
jno
jb
xor
push
push
inc
outsl
insb
outsl
jb
insb
add
push
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
push
popa
imul
and
jno
xor
push
push
inc
outsl
insb
outsl
jb
insb
add
push
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
inc
popa
je
push
outsl
imul
xor
push
push
inc
outsl
insb
outsl
jb
add
jns
jne
imul
addr16
jb
outsl
jb
and
arpl
jno
jb
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
push
arpl
insb
insb
inc
jb
jo
and
jno
jbe
inc
push
push
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
inc
imul
outsl
imul
jb
add
push
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
dec
popa
jae
pop
and
jno
imul
jb
outsl
jb
popa
outsb
arpl
jb
jo
inc
push
gs
insb
insb
outsl
arpl
jae
outsl
jb
and
jno
jbe
inc
push
push
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
inc
imul
jno
jbe
inc
push
push
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
dec
gs
pop
and
jno
imul
jb
outsl
jb
popa
outsb
arpl
jb
jo
inc
push
jo
popa
je
and
jno
jbe
inc
push
push
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
push
push
and
jno
jbe
inc
push
push
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
push
gs
popa
jns
jno
jb
add
gs
addr16
jo
push
imul
jno
jbe
inc
push
jns
jne
imul
inc
jb
outsl
jb
and
arpl
jno
jb
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
jae
je
insb
jae
inc
inc
js
gs
popa
insb
inc
and
arpl
jno
jb
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
jae
je
insb
jae
inc
push
popa
outsb
addr16
jb
outsl
jb
and
fs
and
jno
jbe
inc
push
jns
jne
imul
inc
jb
outsl
jb
and
fs
and
jno
jbe
inc
push
jns
jne
imul
gs
popa
insb
inc
and
fs
and
jno
jbe
inc
push
jns
jne
imul
jo
imul
je
and
jno
jbe
inc
and
jo
xor
push
push
gs
outsl
jb
popa
outsb
arpl
jb
jo
add
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
push
jo
popa
je
push
imul
jno
xor
outsl
outsl
insb
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
inc
and
jo
xor
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsb
arpl
jb
imul
popa
jo
imul
popa
jo
imul
jb
jno
jb
add
push
gs
addr16
jo
dec
outsb
imul
add
push
gs
addr16
jo
inc
imul
add
js
and
xor
popa
jo
jne
imul
insb
outsl
jb
jne
jb
add
js
and
ss
bound
popa
jo
jne
imul
jo
push
outsb
imul
js
and
ss
bound
popa
jo
jne
imul
jo
push
outsb
imul
bound
popa
jo
jne
imul
jo
inc
add
js
and
cmp
jb
jo
jne
imul
jo
add
bound
popa
jo
jne
imul
je
jb
jno
jb
add
bound
popa
jo
jne
imul
jo
inc
and
arpl
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
inc
push
bound
popa
jo
jne
imul
jo
inc
and
fs
and
jno
jbe
inc
push
bound
popa
jo
jne
imul
jo
inc
inc
jb
ja
popa
arpl
jb
jne
fs
jno
jbe
inc
push
bound
popa
jo
jne
imul
jo
inc
inc
jb
ja
jb
fs
jno
jbe
inc
push
bound
popa
jo
jne
imul
jo
inc
inc
fs
outsl
imul
imul
je
insl
inc
inc
outsb
jae
push
je
imul
addr16
jo
jne
imul
jo
inc
inc
jb
ja
gs
gs
jno
jb
add
bound
popa
jo
jne
imul
jo
inc
push
gs
insb
push
outsl
inc
jb
fs
jno
imul
jb
jo
jne
imul
jo
inc
inc
jb
fs
outsl
push
gs
insb
and
jno
imul
jb
jo
jne
imul
jo
inc
push
popa
imul
jbe
inc
push
bound
popa
jo
jne
imul
jo
inc
inc
jo
push
push
outsb
je
jbe
outsb
je
jno
jb
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
outsl
insb
jb
xor
jae
push
dec
imul
add
bound
popa
jo
jne
imul
jo
inc
push
dec
dec
outsl
jne
gs
outsl
jbe
and
jno
jb
aaa
dec
gs
popa
addr16
push
push
dec
dec
outsl
jne
add
bound
popa
jo
jne
imul
jo
inc
push
outsl
jo
jo
gs
jae
jb
dec
je
insl
and
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
ss
jb
jo
imul
outsb
jbe
jae
imul
jb
jo
jne
imul
jo
inc
push
outsl
jo
jo
outsb
jne
insb
imul
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
bound
popa
jo
jne
imul
jo
inc
push
outsl
jo
jo
outsb
jne
jb
ja
jno
jb
xor
jns
je
insl
inc
push
dec
bound
arpl
ss
jb
jo
imul
outsb
jbe
jae
js
xor
outsb
outsl
ja
inc
push
push
arpl
outsl
outsl
insb
add
bound
popa
jo
jne
imul
jo
inc
push
gs
outsl
insb
outsl
jb
popa
arpl
jb
jne
fs
jno
js
xor
push
push
inc
outsl
insb
outsl
jb
inc
push
bound
popa
jo
jne
imul
jo
inc
push
gs
outsl
insb
outsl
jb
jb
fs
jno
js
xor
push
push
inc
outsl
insb
outsl
jb
inc
push
bound
popa
jo
jne
imul
jo
inc
push
gs
inc
jb
fs
outsl
jne
je
jno
jb
jne
add
bound
popa
jo
jne
imul
jo
inc
push
gs
push
imul
je
jno
jb
jne
add
bound
popa
jo
jne
imul
imul
and
jno
jbe
inc
push
bound
popa
jo
jne
imul
popa
insb
imul
and
jno
jbe
inc
and
jo
xor
jb
fs
outsl
addr16
jae
inc
push
inc
gs
insb
push
imul
jo
xor
inc
jb
fs
outsl
addr16
jae
inc
push
inc
gs
insb
push
je
insb
gs
js
add
js
and
cmp
popa
fs
outsl
addr16
jae
inc
push
push
je
insb
add
jb
fs
outsl
addr16
jae
inc
push
inc
jb
fs
jb
addr16
jae
inc
add
js
and
ss
jb
fs
outsl
addr16
jae
inc
push
inc
jb
fs
jb
addr16
jae
add
jb
fs
outsl
addr16
jae
inc
push
inc
jb
fs
jb
addr16
jae
inc
and
arpl
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
inc
inc
jb
fs
outsl
addr16
jae
inc
push
inc
jb
fs
jb
addr16
jae
inc
and
fs
and
jno
jbe
inc
inc
jb
fs
outsl
addr16
jae
inc
push
inc
jb
fs
jb
addr16
jae
inc
inc
gs
outsl
outsb
je
popa
insl
gs
jno
jb
add
jb
fs
outsl
addr16
jae
inc
push
inc
jb
fs
jb
addr16
jae
inc
push
gs
push
jb
outsb
je
jno
jb
bound
insb
add
jb
fs
outsl
addr16
jae
inc
push
inc
jb
fs
jb
addr16
jae
inc
push
je
jo
je
jno
jb
add
jb
fs
outsl
addr16
jae
inc
push
inc
jb
fs
jb
addr16
jae
inc
push
gs
je
jo
jno
jb
add
jb
fs
outsl
addr16
jae
inc
push
inc
jb
fs
jb
addr16
jae
inc
push
gs
je
insb
gs
jno
xor
inc
jb
fs
outsl
addr16
jae
inc
push
push
je
insb
add
jb
fs
outsl
addr16
jae
inc
push
inc
jb
fs
jb
addr16
jae
inc
push
gs
gs
insb
push
je
insb
gs
jno
xor
inc
jb
fs
outsl
addr16
jae
inc
push
inc
gs
insb
push
je
insb
gs
js
add
jb
fs
outsl
addr16
jae
inc
push
inc
jb
fs
jb
addr16
jae
inc
push
gs
gs
insb
push
imul
jp
add
jb
fs
outsl
addr16
jae
inc
push
inc
jb
fs
jb
addr16
jae
inc
inc
popa
insb
arpl
popa
je
inc
inc
outsl
insb
outsl
jb
jno
jb
add
jb
fs
outsl
addr16
jae
inc
push
inc
jb
fs
jb
addr16
jae
inc
push
gs
je
jb
inc
outsl
insb
outsl
jb
jno
jb
xor
push
push
inc
outsl
insb
outsl
jb
inc
inc
jb
fs
outsl
addr16
jae
inc
push
inc
jb
fs
jb
addr16
jae
inc
push
gs
outsb
fs
outsl
insb
outsl
jb
jno
jb
xor
push
push
inc
outsl
insb
outsl
jb
inc
inc
jb
fs
outsl
addr16
jae
inc
push
inc
jb
fs
jb
addr16
jae
inc
push
gs
popa
arpl
outsl
insb
outsl
jb
jno
jb
xor
push
push
inc
outsl
insb
outsl
jb
inc
inc
jb
fs
outsl
addr16
jae
inc
push
inc
jb
fs
jb
addr16
jae
inc
push
gs
outsl
jae
je
outsl
outsb
and
jno
imul
fs
outsl
addr16
jae
inc
push
inc
jb
fs
jb
addr16
jae
inc
push
gs
popa
js
popa
insb
jne
and
jno
imul
fs
outsl
addr16
jae
inc
push
inc
jb
fs
jb
addr16
jae
inc
jo
imul
jbe
inc
inc
jb
fs
outsl
addr16
jae
inc
push
inc
jb
fs
jb
addr16
jae
inc
push
gs
imul
je
jno
jb
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
push
imul
push
push
arpl
inc
jb
fs
outsl
addr16
jae
inc
push
inc
jb
fs
jb
addr16
jae
inc
push
popa
imul
insb
and
jno
jbe
inc
inc
jb
fs
outsl
addr16
jae
inc
push
imul
jno
jbe
inc
inc
jb
fs
outsl
addr16
jae
inc
inc
imul
je
outsl
outsb
and
jno
jbe
inc
inc
jb
fs
outsl
addr16
jae
inc
imul
imul
and
jno
jbe
pop
pop
pop
inc
push
push
fs
dec
outsl
outsl
imul
inc
jae
imul
imul
add
jae
imul
imul
outsb
inc
add
jae
imul
imul
add
jae
imul
imul
outsb
inc
add
arpl
imul
inc
jne
jae
jb
inc
push
inc
inc
popa
insb
outsb
fs
jb
add
inc
inc
outsl
insb
outsl
jb
jb
fs
add
imul
push
inc
inc
imul
jns
jne
insb
imul
imul
inc
imul
push
inc
inc
imul
jns
jne
insb
imul
inc
inc
popa
jne
gs
add
jae
imul
gs
jo
gs
jne
je
outsb
inc
add
jae
imul
imul
add
jae
imul
imul
outsb
inc
add
push
gs
outsl
jb
popa
outsb
arpl
jb
jo
inc
add
bound
popa
jo
jne
imul
insb
outsl
jb
add
jns
outsl
data16
jb
gs
inc
dec
inc
inc
inc
push
push
add
jb
dec
jo
imul
jb
inc
bound
je
inc
inc
imul
push
inc
inc
imul
jns
jne
insb
imul
popa
insb
imul
inc
inc
imul
push
inc
inc
imul
jns
jne
insb
imul
je
outsb
fs
add
add
mov
xchg
inc
add
add
add
or
add
add
push
add
addb
add
cwtl
add
addb
add
push
add
add
add
add
add
orb
add
add
orb
add
addb
adcb
add
cwtl
add
addb
add
mov
xchg
inc
add
add
add
pop
add
add
add
add
add
add
addb
add
loopne
add
clc
add
addb
add
sub
add
inc
add
addb
add
mov
xchg
inc
add
add
sbb
add
adc
sbbb
andb
add
sub
add
ds
andb
add
pop
or
adc
add
call
or
addb
add
sbb
adcb
add
dec
add
subb
xorb
add
nop
add
or
add
or
add
add
fadds
xor
add
or
add
and
add
dec
or
add
push
add
add
mov
add
mov
xchg
inc
add
add
add
add
add
add
cwtl
add
add
mov
xchg
inc
add
add
add
repnz
mov
add
enter
hlt
sldt
loopne
add
clc
add
add
adc
add
sub
add
inc
push
add
pop
push
add
jo
add
mov
add
mov
sldt
mov
sldt
rolb
add
call
adc
add
pop
add
mov
xchg
inc
add
add
add
add
scas
or
add
xor
add
dec
pop
add
pusha
pop
add
mov
xchg
inc
add
add
add
pop
add
jg
add
add
nop
pop
add
test
add
rolb
cmp
add
fadds
add
lock
add
or
add
mov
xchg
inc
add
add
add
add
adc
add
add
add
mov
xchg
inc
add
add
add
add
add
add
cmp
add
mov
xchg
inc
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
add
add
jo
add
add
add
mov
xchg
inc
add
add
add
add
add
add
orb
add
add
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
mov
xchg
inc
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
add
rorb
add
add
add
mov
xchg
inc
add
add
add
add
add
add
loopne
add
add
add
mov
xchg
inc
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
mov
xchg
inc
add
add
add
add
add
add
adc
add
add
add
mov
xchg
inc
add
add
add
add
add
add
and
add
add
add
mov
xchg
inc
add
add
add
add
add
add
xor
add
add
add
mov
xchg
inc
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
add
add
jo
add
add
add
mov
xchg
inc
add
add
add
add
add
add
orb
add
add
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
mov
xchg
inc
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
add
rorb
add
add
add
mov
xchg
inc
add
add
add
add
add
add
loopne
add
add
add
mov
xchg
inc
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
mov
xchg
inc
add
add
add
add
add
add
adc
add
add
add
mov
xchg
inc
add
add
add
add
add
add
and
add
add
add
mov
xchg
inc
add
add
add
add
add
add
xor
add
add
add
mov
xchg
inc
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
add
add
jo
add
add
add
mov
xchg
inc
add
add
add
add
add
add
orb
add
add
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
mov
xchg
inc
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
add
rorb
add
add
add
mov
xchg
inc
add
add
add
add
add
add
loopne
add
add
add
mov
xchg
inc
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
mov
xchg
inc
add
add
add
add
add
add
adc
add
add
add
mov
xchg
inc
add
add
add
add
add
add
and
add
add
add
mov
xchg
inc
add
add
add
add
add
add
xor
add
add
add
mov
xchg
inc
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
add
add
jo
add
add
add
mov
xchg
inc
add
add
add
add
add
add
orb
add
add
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
mov
xchg
inc
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
add
rorb
add
add
add
mov
xchg
inc
add
add
add
add
add
add
loopne
add
add
add
mov
xchg
inc
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
dec
or
xor
add
fs
or
xor
add
cwtl
push
or
xor
add
int3
push
or
xor
add
add
add
add
xor
or
xor
add
push
add
add
add
insb
pop
or
in
add
push
pop
or
rolb
add
and
rolb
add
lock
or
rolb
add
rcrb
rolb
add
nop
popa
or
rolb
add
pusha
arpl
add
add
add
or
rolb
add
add
add
add
add
push
add
test
or
fadds
add
subb
fadds
add
pop
imul
fadds
add
xor
fadds
add
or
add
add
add
add
add
add
add
outsb
or
mov
add
shrb
mov
add
dec
jno
add
add
add
add
add
jb
add
add
add
add
add
or
mov
add
loopne
or
mov
add
push
add
add
add
fdivrs
add
add
add
add
pop
jl
add
add
add
add
lock
add
add
add
jg
add
add
add
add
add
or
mov
add
add
or
xchg
add
add
add
add
add
add
or
in
add
pop
mov
add
add
add
or
add
add
add
inc
lea
add
add
add
or
or
add
sub
or
adc
add
cmp
or
je
push
add
or
add
push
adc
push
pop
add
js
adc
adc
add
mov
add
add
mov
add
add
add
enter
adc
add
fsubrl
add
add
lock
adc
adc
add
js
adc
adc
add
pusha
dec
adc
sbb
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
push
add
dec
add
push
add
inc
add
dec
add
inc
add
add
add
push
add
add
dec
add
inc
add
add
push
add
add
or
push
add
dec
add
inc
add
push
add
push
add
push
add
dec
add
push
add
add
add
inc
add
add
inc
add
push
add
add
add
dec
add
add
inc
add
dec
add
add
add
add
inc
add
push
add
push
add
dec
add
push
add
add
inc
add
add
add
inc
add
inc
add
or
push
add
push
add
dec
add
inc
add
push
add
add
or
push
add
push
add
dec
add
inc
add
add
add
add
push
add
dec
add
dec
add
dec
add
inc
add
push
add
push
add
push
add
add
dec
add
dec
add
add
add
push
add
inc
add
add
inc
add
push
add
dec
add
inc
add
push
add
or
push
add
push
add
inc
add
dec
add
push
add
add
add
dec
add
push
add
add
dec
add
or
dec
add
dec
add
dec
add
dec
add
add
and
stos
xchg
sbb
xorb
adc
xchg
jg
andl
decb
push
or
dec
inc
out
jne
lea
xchg
sub
sahf
arpl
outsb
pusha
ds
sarl
les
jno
enter
adc
push
sub
pusha
xchg
insl
ss
pop
add
mov
outsb
imul
arpl
cmp
mov
jmpw
xlat
and
rcll
push
jmp
mov
fildll
addr16
imul
dec
and
xor
inc
mov
test
adc
add
test
push
inc
mov
test
push
aad
or
je
loope
addr16
jle
lret
fsub
shlb
sub
insl
and
fstp
loop
jecxz
lods
xchg
in
daa
test
dec
cmp
mov
or
jecxz
imul
mov
leave
jle
outsb
cmpsl
lds
push
push
add
pop
mov
rorb
stos
push
cmpsb
std
push
or
xchg
popf
sbb
adc
xchg
cld
cmp
rorb
push
mov
and
out
add
mov
dec
ljmp
or
fiaddl
cmp
pushf
mov
add
or
sbb
mov
int
cli
sbb
out
sbb
iret
and
stos
lret
cmc
xlat
cmc
int
sti
sarb
inc
test
adc
jle
fbstp
pop
mov
add
pop
add
call
mov
push
mov
addb
push
mov
or
jge
jl
xchg
mov
nop
lahf
punpckhwd
mov
imul
and
add
test
jl
and
insl
jg
popa
mov
nop
xchg
add
fiadds
outsb
xor
sbb
cltd
dec
bswap
mull
mov
clts
jno
and
xchg
xchg
or
aas
mov
inc
xchg
mov
daa
sub
lahf
mov
pop
lret
dec
dec
adc
mov
bound
gs
mov
loop
insb
popl
jnp
xor
aam
push
std
in
mov
pop
imul
pop
jbe
gs
push
sbb
push
push
adc
adc
jecxz
jp
add
mov
cmp
cmp
xor
mov
mull
mov
mov
cwtl
out
add
lret
jg
loop
mov
stos
dec
pushf
frstor
icebp
push
push
xchg
mov
js
cmp
and
dec
add
roll
mov
ss
or
mov
adc
mov
outsb
xorl
mov
pop
js
cli
in
mov
push
pop
mov
sub
ret
dec
test
das
jl
in
call
sahf
ja
inc
imul
divl
xor
cmp
stos
cmc
or
nop
or
inc
das
insl
ret
js
and
or
dec
es
icebp
lahf
adc
xor
into
jp
jno
daa
hlt
clc
insb
lock
pop
dec
arpl
insb
inc
in
jge
test
int3
imul
faddp
pop
xor
cltd
mov
filds
inc
pop
loope
and
adc
jns
outsb
stos
mov
xchg
pop
pop
dec
lds
lods
mov
pop
shrl
lock
fwait
xchg
das
inc
or
ffreep
movsb
cmpsb
push
mov
xor
xchg
jecxz
sbb
aad
insb
enter
xor
add
mov
jo
jns
adc
pop
adc
iret
sti
loop
aad
cltd
sarl
popf
xor
xor
cmp
push
stc
jle
mov
dec
cli
lods
sbb
jnp
bound
cmpsb
and
fcoml
loop
pop
outsl
xlat
incl
or
pop
enter
fmul
sbb
shrl
lret
mov
movsl
ret
std
sahf
pop
jecxz
mov
push
inc
pop
aad
sbb
subb
inc
add
fs
rcrl
std
enter
adc
and
inc
stos
inc
push
mov
pop
fsubs
cmp
mulb
test
adc
dec
add
xchg
hlt
in
clc
push
mov
or
mov
jl
or
das
dec
filds
imul
pop
icebp
push
cmp
outsb
aad
bound
fidivl
push
sbb
fwait
clc
cmp
cld
daa
sbb
xchg
ds
cmp
mov
bound
mov
jo
pop
cwtl
or
pop
out
sub
push
sub
cmp
imulb
cmpsb
jno
adc
repz
mov
push
insl
mov
inc
jmp
add
aam
sbb
push
push
jns
fnstsw
adc
ret
outsb
les
incl
stos
jo
and
ljmp
dec
faddl
add
push
sub
dec
sbb
mov
mov
dec
mov
xchg
popl
pop
imul
gs
cmp
sbb
mov
fmull
jne
fs
fisttpl
jnp
sahf
sub
mov
mov
sarl
sti
sbb
xor
dec
movl
adc
aas
aas
cli
and
mov
and
stos
sahf
fsubl
inc
jb
xor
mov
in
addr16
mov
mov
scas
sbb
out
push
packssdw
pop
stos
fst
sahf
xor
mov
xlat
loope
insl
push
aas
nop
test
adc
push
insl
jp
pop
mov
xchg
repz
jmp
dec
lret
js
sub
mov
mov
stos
fbld
stos
xor
mov
dec
fidivl
or
fsubrs
xor
inc
pop
aam
lcall
fdivs
mov
fs
adc
dec
fistl
push
in
addr16
push
shlb
cmp
add
dec
cmc
mov
push
sbb
scas
mov
mov
pusha
repz
setb
hlt
mov
clc
js
jge
xor
mov
jp
movsb
hlt
mov
cld
mov
and
stos
out
movsl
std
xchg
stos
stos
sbb
inc
mov
popf
jne
lahf
pop
xchg
rolb
fldcw
sbb
movsb
mov
or
fiaddl
inc
mov
leave
cmpsl
fnstenv
ficoml
loope
imul
sahf
lock
jno
add
rorl
xchg
mov
leave
pop
lret
loopne
test
aas
out
imul
lahf
ficompl
mov
or
ss
mov
push
lock
jnp
mov
pop
cmp
notb
push
mov
lods
xchg
inc
dec
add
enter
mov
mov
jae
in
in
dec
int
out
pushf
push
mov
sbb
fidivl
fdivl
cmp
jle
orb
mov
add
ljmp
or
cli
testl
fsubs
pop
jle
inc
push
repz
pop
push
insb
push
lods
push
or
sti
or
mov
push
cmp
dec
scas
jmp
out
mov
mov
pop
xor
mov
xor
loop
arpl
cmp
jbe
pop
loopne
stos
xchg
dec
dec
inc
add
inc
xchg
shrl
subl
xorb
jp
std
loopne
stos
pop
ret
mov
adc
fisubrs
int3
popf
push
arpl
mov
jle
sahf
cli
ret
adc
inc
mov
mov
and
jmp
int
pop
add
mov
jns
test
enter
pop
clc
or
shlb
stos
sub
push
dec
gs
popf
or
arpl
inc
or
mov
xor
pop
repnz
adc
fwait
and
pop
mov
sbb
pop
mov
dec
je
dec
aad
sub
pop
aaa
dec
daa
jnp
push
loopne
mov
mov
jg
jb
inc
stos
in
sti
xor
mov
fcmovbe
jae
imul
jecxz
adc
adc
mov
mov
mov
aad
test
mov
mov
pop
cmp
fsubrl
adc
sbb
int3
rcrl
sarb
imul
sbb
scas
loop
and
inc
pextrw
cmpsb
sbb
sbb
mov
jae
cmpsl
push
inc
cmp
imulb
aam
test
cwtl
dec
dec
stc
cmpsl
inc
lods
scas
sub
in
pop
lods
ja
lds
sbb
xor
and
dec
inc
jnp
clc
mov
mov
jecxz
arpl
xor
imul
mov
mov
fildll
or
and
into
in
movsl
or
adc
es
pop
insl
lods
or
das
aam
push
cmp
mov
roll
rcll
jmp
cmp
adc
mov
flds
fistpll
jnp
xor
outsl
insl
cmp
loop
addr16
pop
jnp
fisttps
cwtl
push
and
mov
push
xchg
fs
push
inc
jno
cmpsb
out
mov
idivb
pop
adc
and
inc
ret
cmp
pop
mov
push
mov
pop
aaa
pop
out
cld
xchg
sahf
inc
push
and
shl
lahf
dec
jno
sbbb
repnz
loope
sbb
lret
clc
jne
pushf
and
pop
inc
fdivs
push
loopne
fucomp
in
notl
popa
jnp
inc
rcrl
popf
push
add
and
push
loop
stos
xor
cli
mov
repz
les
inc
dec
push
aam
adc
sub
sub
mov
out
addl
xchg
mov
cmp
or
in
and
push
add
mov
mov
pop
mov
stos
xchg
push
cmp
mov
jo
orl
ja
xchg
fidivrs
or
das
push
lret
push
xor
loope
es
stc
stos
arpl
and
ss
das
xor
mov
mov
sbb
fistps
inc
es
repnz
test
push
mov
mov
js
outsl
jbe
push
mov
jp
adc
inc
sub
insb
add
adc
cmp
leave
loopne
jnp
jb
mov
cmpsl
aaa
out
push
jo
out
in
testl
jecxz
dec
cmpsb
cs
cmp
jg
pop
xchg
cmp
pop
flds
jne
aas
icebp
enter
pop
mov
jnp
nop
mov
sahf
jne
jne
sahf
cwtl
in
add
test
pop
movsl
test
inc
les
mov
loopne
or
or
lcall
nop
flds
das
mov
xchg
jae
mov
out
inc
ret
add
pop
ljmp
add
mov
sub
xor
mov
xor
jbe
imul
subl
pop
sub
mov
sti
mov
inc
je
mov
mov
xchg
mov
inc
ret
cmc
push
lods
ud2
js
sub
adc
aam
arpl
in
mov
jae
je
jno
push
inc
sub
lods
pop
int
repz
fnsave
clc
clc
sub
pop
in
dec
pop
push
mov
lds
cld
mov
push
xchg
add
cmp
push
mov
pop
mov
sub
push
loop
or
lahf
cmp
push
dec
scas
sbb
sti
repnz
add
iret
loopne,pt
xchg
into
loopne
push
and
gs
cli
push
inc
scas
repnz
cltd
je
mov
mov
outsl
movsl
out
loope
and
sbb
and
mov
mov
jge
movsl
cmpsb
xor
jne
mov
push
xchg
cmpsb
call
mov
sbb
mov
mov
test
or
dec
flds
scas
xor
fwait
mov
daa
pop
mov
out
xchg
xchg
test
or
inc
dec
addb
adc
sbb
insb
fwait
addb
inc
mov
push
test
out
ret
xchg
or
pop
jo
subl
cmpsl
xchg
negb
mov
pushf
addr16
std
loopne
jno
test
mov
arpl
std
aam
shll
pop
adc
sbb
mov
mov
mov
jg
setbe
sub
sarb
aad
into
add
xchg
dec
cli
shrb
sbb
mov
stos
fs
faddl
out
sub
das
xor
shrl
mov
mov
aaa
mov
sub
inc
std
mov
jmp
imul
xchg
iret
jbe
out
std
mov
sbb
addr16
sbb
scas
mov
inc
imul
mov
inc
shll
out
insb
shl
xor
decb
in
fcompp
enter
xchg
xchg
dec
xchg
fistl
add
cld
and
xor
inc
adc
mov
aas
decl
jae
pop
adc
push
ljmp
mov
aas
ds
mov
movsl
and
mov
pop
sub
inc
dec
dec
xchg
ds
incl
jae
mov
mov
mov
loop
sub
pop
in
cmp
cmp
ja
or
mov
clc
xchg
jb
mov
mov
mov
outsl
out
shll
ret
pop
imul
ss
sbbb
mov
into
popf
mov
cmp
push
sub
jle
pop
pop
mov
sub
cld
test
push
sbb
sub
hlt
push
push
or
dec
subb
mov
push
cmp
insb
gs
ljmp
mov
outsl
imull
pop
jg
mov
in
dec
int
shrl
jl
jbe
mov
in
dec
and
shll
int3
popa
dec
sub
scas
mov
fadds
mov
inc
decb
mov
ja
pop
gs
int
pop
iret
and
mov
inc
cmpl
jno
lds
sbb
in
jae
jmp
pop
fs
icebp
cs
sbb
orl
jmp
xor
in
pop
clc
mov
fsubrl
stc
or
test
inc
pop
and
leave
xchg
mov
inc
aad
cs
sbb
push
ficomps
lret
jno
cmp
mov
adc
clc
pop
cmp
cmp
push
fnsave
push
fcmovu
gs
fsubp
rolb
adc
fcomip
cmp
movups
out
pop
xchg
pop
sbb
andl
sub
add
dec
cmpsl
jge
sbb
sub
cmp
xchg
repnz
cmp
jle
in
out
idivb
cmp
into
cmp
out
aam
movsl
rcrb
scas
pushf
cmpl
imul
lods
in
add
loop
scas
pop
mov
shl
xor
repz
mulb
scas
out
inc
mov
mov
add
andl
shlb
stos
subl
gs
add
mov
xor
lock
pop
cmp
mov
aaa
sbbb
fcomps
orl
out
sbb
jnp
inc
in
and
ljmp
repnz
dec
mov
fs
imul
sub
andb
push
push
lret
cmp
sub
mov
sbb
mov
rorl
js
mov
xchg
and
aam
fwait
insl
pop
xor
jge
test
xor
rolb
testl
adc
fldenv
in
sub
addb
lock
dec
mov
dec
clc
push
pop
loop
push
pop
mov
or
push
orb
repz
xor
fwait
cs
xlat
shrb
pop
or
push
repz
dec
jl
jno
pusha
movsl
out
orl
adc
das
and
shrb
mov
mov
movsl
inc
jmp
addr16
sub
lcall
pop
mov
sahf
xchg
fs
repnz
icebp
hlt
and
jns
jns
push
cmpsb
in
shlb
outsl
dec
push
test
adc
addl
pop
jp
or
jmp
jns
int
xor
xchg
in
adc
imul
xor
jnp
xchg
pmulhw
shrl
mulb
mov
jb
call
lret
psubusb
movsl
imul
inc
jp
dec
idivl
pop
mov
xchg
sub
test
mov
add
imul
xor
xor
cmp
sub
jo
loop
cmp
mov
xchg
lahf
xor
test
sbb
call
sub
ret
add
xchg
pop
mov
sti
push
cltd
stos
cwtl
std
rcrb
mov
cmpsl
adc
inc
lods
xchg
inc
mov
fnstenv
bnd
cli
pop
cld
mov
daa
sub
imul
pop
sbb
je
repnz
mov
lahf
insl
aam
pushf
mov
shrl
loop
mov
in
and
lret
push
loope
and
and
adc
inc
mov
sbb
inc
aas
scas
mov
mov
das
jae
mov
cmp
push
loopne
xor
mov
inc
int3
cmc
leave
pop
sbb
and
jl
push
stc
push
ret
sub
ret
push
std
or
sbb
cwtl
push
pop
jle
pop
cmc
cmpsl
ljmp
movsb
imull
bound
daa
enter
data16
fstl
push
bound
xchg
loop
dec
jmp
sbbl
cltd
fcoml
add
call
iret
ret
mov
cmpl
lds
into
imul
dec
rcrb
inc
dec
bound
lahf
inc
cmc
stos
mov
add
jecxz
sbb
addr16
pop
xchg
cld
pop
imul
push
jge
adc
add
lret
mov
pcmpeqb
lock
sar
mov
imul
dec
add
cltd
sarl
xor
sahf
cmp
sbb
xor
cmpsb
lods
cmp
jo
or
add
cmp
cmp
in
jge
adc
mov
adc
dec
rclb
pop
cmc
inc
mov
mov
insl
jno
call
mov
push
in
nop
cmp
inc
pop
pop
adc
mov
fnstsw
and
cmp
add
push
sub
adc
push
je
inc
push
rcll
out
dec
aam
xchg
add
sub
movsl
scas
inc
out
idivl
outsl
mov
cmp
sahf
fsubr
lods
pop
sbb
push
shll
or
pop
mov
xor
loop
dec
int3
xor
notb
xor
adc
mov
ja
icebp
xchg
or
ss
adc
mov
stos
inc
dec
insl
enter
pop
dec
add
sub
push
aam
xchg
sbb
fcoms
lods
shlb
cmp
jecxz
jb
dec
loop
mov
ss
pop
ljmp
and
mov
call
inc
mov
les
les
sub
fildl
es
mov
adc
mov
or
stos
mov
pop
in
lds
mov
test
ds
and
aaa
addl
pop
dec
lcall
pop
decl
shrb
lret
repz
and
adc
push
sbb
shll
jle
pop
cmp
rorl
xlat
fidivs
shrl
aad
adc
sub
dec
jnp
lods
jbe
rclb
js
jo
sbb
jns
xchg
jmp
ret
outsl
stos
test
jnp
dec
xchg
inc
and
fdivl
clc
in
push
rorl
jecxz
add
jnp
mov
fidivs
je
xchg
hlt
out
movsb
jne
cltd
lcall
fdivr
push
dec
xchg
or
add
xlat
pop
mov
sbb
cmp
push
inc
das
and
mov
inc
or
xchg
inc
xchg
xchg
inc
push
dec
jbe
pop
cmc
dec
in
cmp
call
lea
roll
push
addr16
cwtl
inc
mov
mov
pushf
pop
adc
jo
outsl
out
push
fistpll
sahf
pop
dec
push
dec
sbb
jecxz
fs
pop
cmp
mov
cmp
out
ja
jnp
call
lahf
cmp
and
mov
jns
insl
adc
mov
adc
lcall
enter
pop
int
add
jb
add
mov
adc
mov
pushf
jns
sbb
loope
sub
mov
sbb
mov
and
dec
addr16
jmp
sarb
mov
jecxz
clc
test
movsl
lahf
mov
popf
out
pop
dec
inc
clc
nop
aas
test
cmpb
enter
test
cwtl
sahf
popa
es
cmp
add
push
cwtl
jno
or
xchg
jo
outsl
sub
xor
and
lcall
mov
xor
in
in
inc
mov
adc
hlt
andb
dec
jnp
in
sbb
cmc
lea
shlb
bound
sti
xchg
mov
popf
mov
inc
ret
pop
xchg
xchg
push
adc
and
ror
push
push
out
outsb
push
popf
or
lods
insl
test
enter
subl
movsl
push
and
lahf
stc
adc
add
or
or
ds
xor
or
jae
push
cmp
scas
push
scas
push
pop
xor
adc
sub
movsl
mov
sti
int
mov
mov
fs
lret
jecxz
mov
mov
out
xor
out
mov
enter
cmp
mov
add
cmp
rclb
xchg
push
sarb
mov
xor
addr16
jne
mov
loope
bound
rcr
push
pusha
into
pop
push
push
mov
xor
pusha
mov
inc
mov
jmp
and
lock
sbb
sbb
pushf
and
fbstp
dec
pop
pop
sub
push
jp
shrb
mov
or
repz
aas
jge
mov
xor
ljmp
mov
or
jle
or
mov
ja
adcb
sub
out
lock
sbbl
xchg
fidivs
repz
xor
outsl
fists
fimull
mov
mov
enter
in
sbb
dec
gs
and
xor
dec
lods
lahf
enter
lods
fsts
clc
push
xor
inc
push
outsl
in
outsl
pusha
mov
pop
mov
fldt
jne
ljmp
fwait
add
fimull
xor
mov
cmc
aaa
sahf
rolb
ret
push
mov
popf
mov
test
dec
xchg
sti
pusha
leave
mov
mov
test
movsb
sbb
jne
or
mov
and
mov
cmp
arpl
out
ja
fwait
imul
stos
mov
cs
addr16
or
inc
dec
incb
cmp
jmp
pop
jl
xor
sub
cltd
leave
sbb
decl
not
imul
add
into
or
inc
sbb
in
scas
cmp
pop
cmp
in
xchg
push
outsl
push
jns
mov
adc
in
inc
mov
push
mov
inc
mov
insl
jo
scas
xor
dec
push
mov
call
movsb
imul
mov
push
push
rorb
imul
push
cmpl
add
cmc
rcrb
insb
sbb
mov
inc
sti
dec
mov
cld
adc
inc
std
aad
cwtl
sti
addr16
add
push
jl
fsts
repnz
jle
out
psubb
bound
jmp
push
fs
mov
jle
cmp
dec
fs
std
xor
subl
int
lods
dec
int
cmc
mov
mov
lods
jle
pop
call
mov
fldpi
cltd
push
fisttpl
roll
mov
leave
xor
add
and
jmp
and
push
push
aaa
adc
sub
lahf
sbb
xchg
test
mov
pop
pop
xchg
sti
repnz
fnsave
sbb
and
rclb
nop
push
test
push
roll
push
mov
sbb
imul
lahf
scas
addr16
loop
in
cmpsb
mov
clc
push
ss
push
jb
mov
shlb
popf
dec
lcall
and
jle
push
sahf
add
mov
pop
jns
shrl
dec
lret
pop
and
xor
test
mov
mov
pop
push
nop
bsr
jmp
lods
adc
fdiv
push
mov
out
mov
rol
mov
mov
shl
movsl
out
sub
jg
daa
cmc
fisubl
mov
cs
dec
mov
test
adc
pop
jg
inc
mov
in
enter
pushl
adc
push
cld
ret
pop
push
movl
insl
dec
xchg
lret
push
add
and
ret
aam
imull
icebp
lock
hlt
cmc
imull
mov
adc
add
mov
xchg
mov
or
cmp
adc
stos
cwtl
adc
adc
int
cld
adc
insb
jbe
out
test
and
sbb
ror
std
in
cmp
fcomps
mov
inc
cltd
inc
ja
sub
in
shll
fcoml
mov
imul
xlat
lods
clc
sub
or
jno
xchg
imul
pusha
xchg
sahf
leave
call
cmpsb
dec
jae
aad
das
jp
xor
outsl
jnp
push
scas
or
sahf
jbe
test
pop
insb
inc
jg
lock
das
aas
jp
cmpsl
xor
and
lret
aaa
or
cmc
jle
jnp
dec
cmp
and
sub
dec
jle
mov
sbbl
shrb
enter
gs
icebp
cmpsl
std
lods
and
sbb
add
and
mov
push
add
out
rcrb
push
ret
cmp
stos
and
push
into
shll
xor
add
add
sbb
adc
xchg
push
sbb
in
loop
hlt
sbb
sbb
fwait
or
push
pop
mov
lods
sub
and
xchg
test
add
outsl
fcom
xor
add
stos
das
push
int3
jne
cmp
mov
push
xor
loop
popa
pop
sub
inc
lea
out
les
sub
mov
jg
sbb
sub
mov
loopne
stc
test
dec
es
lret
rclb
lahf
imul
or
dec
cmp
adc
and
sbb
in
test
add
cmc
mov
test
repz
inc
and
sbb
test
arpl
outsb
dec
mov
lods
xchg
mov
push
ret
add
test
cmpsl
scas
shr
fs
mov
inc
sbb
sub
rcrb
sub
xor
je
fcoms
arpl
mov
adc
insl
shrl
cmp
pop
mov
mov
jg
sbb
xor
dec
inc
addr16
xor
mov
and
mov
or
or
mov
inc
xchg
mov
dec
in
jecxz
sbb
mov
mov
fbld
aaa
es
popf
cwtl
imul
sti
mov
xchg
repnz
popa
out
mov
xor
incb
sbb
sbb
ret
fsubrs
into
sbb
xchg
jbe
sub
push
mov
loop
push
data16
push
mov
sar
jmp
pop
aad
pop
and
mov
xchg
jns
adc
dec
xchg
and
js
push
or
mov
dec
mov
repnz
cmp
das
mov
xchg
cmp
add
movsl
adc
ror
call
js
sbb
mov
adc
stc
jl
ret
sbb
xor
sbb
outsb
push
and
fs
stos
sub
loopne
ret
ret
insb
sti
stos
orl
call
push
mov
insl
imul
testl
inc
js
inc
sub
pop
sub
data16
dec
loopne
rorb
mov
mov
in
fdivl
aad
jns
jbe
xchg
daa
shll
cmpsl
negl
loopne
add
stos
clc
add
push
add
sbb
add
cwtl
je
or
xor
sarl
dec
out
xchg
fisttpll
mov
in
push
mov
sbb
or
mov
iret
adc
dec
push
jb
pop
push
inc
dec
inc
sbb
dec
inc
movsl
mov
inc
mov
xor
push
int3
sub
cmp
bound
cmp
js
add
push
inc
insl
call
pop
loop
ds
scas
outsl
sbbl
cli
bound
or
cs
and
jmp
shrl
inc
jecxz
sub
jo
test
mov
sub
jp
and
push
push
ret
aam
jne
fcomi
xchg
nop
fisubs
pusha
sti
pushl
jle
and
push
into
lods
xchg
mov
add
mov
jno
add
std
leave
cmp
rcr
loope
sti
push
imul
cmp
sahf
shl
pop
push
cmpsb
dec
or
mov
es
sbb
push
inc
or
add
or
push
cmpsb
lea
iret
adc
xorl
mov
je
inc
insb
inc
popa
ds
scas
sbb
stos
adc
push
inc
or
sti
mov
dec
stos
subb
mov
add
sub
aam
pop
sbb
jno
push
fidivrl
mov
bound
jecxz
ficoms
sub
andb
mov
dec
shll
lcall
and
or
push
push
rcl
fwait
push
jge
idivb
jbe
movsl
lea
dec
jo
and
imul
loope
cwtl
mov
rcr
loopne
sub
mov
mov
stos
js
fs
mov
cmp
std
lods
sbb
xor
repz
jl
inc
and
xchg
and
sbb
js
outsb
cmp
sbb
out
dec
in
cmc
jne
pusha
xchg
aam
pop
dec
rol
xchg
cmp
inc
call
sbb
rclb
jbe
sub
dec
arpl
jbe
adc
mov
xchg
out
and
dec
call
mov
test
push
jmp
sahf
xchg
dec
jecxz
dec
or
shll
aas
push
in
inc
and
clc
repz
scas
out
fistl
scas
pop
cmp
mulb
mov
loop
je
enter
outsl
jecxz
jge
andl
mov
call
mov
pop
testb
jmp
inc
xchg
inc
jno
push
jns
jg
add
sub
mov
mov
ss
arpl
cld
ss
adc
adc
cmp
and
loope
xor
push
xchg
popa
add
sub
push
fwait
int3
inc
jae,pt
inc
sub
mov
roll
pushf
mulb
loope
adc
pop
fimull
or
adc
push
dec
xor
test
icebp
push
scas
outsb
int
and
jnp
in
cmc
jecxz
xor
mov
sti
into
data16
fisubrl
into
sub
fistpll
jae
xlat
mov
xor
inc
inc
pop
inc
int
faddl
js
mov
push
sbb
js
inc
mov
loop
js
daa
sbb
cltd
ret
mov
xor
call
sub
jno
cmp
scas
push
inc
and
mov
fxam
xor
cmp
or
arpl
jp
sbb
jne
dec
stc
mov
cmp
das
pop
aam
sbb
repz
cmpsl
aaa
ja
adcl
jb
testl
jns
out
mov
add
push
mov
fcmovu
shrb
idivl
cmp
cmpsb
mov
fbld
rcrl
mov
in
xor
mov
sbb
popa
pop
int
pop
dec
lea
sarb
out
sub
push
push
push
jle
dec
mov
enter
fs
lret
cmpsl
cli
jg
sti
sub
sbb
rol
mov
cmp
pop
test
popf
xor
ret
out
sbb
aaa
sahf
push
and
in
xor
enter
mov
enter
icebp
inc
pop
test
jo
adc
mov
pop
pop
sbb
cmpsb
sbb
dec
mov
mov
jmp
add
popf
pushf
stos
or
or
cmp
pop
cmp
int3
nop
inc
cmp
sahf
push
mov
jge
gs
mov
loope
pop
je
dec
in
push
scas
and
and
ds
or
ffree
push
push
test
loopne
adc
mov
pop
adc
stos
shr
add
test
out
jae
sub
sarl
loop
ja
add
in
leave
lret
xchg
add
roll
cmp
outsb
cwtl
pop
in
adc
fs
aad
shll
pop
lock
flds
clc
xchg
mov
dec
jnp
mov
jmp
jle
jo
sub
hlt
mov
nop
cmpsb
es
in
add
push
adc
dec
mov
inc
ret
cld
addl
cwtl
je
movb
enter
jb
xor
sti
lahf
repnz
js
cli
testb
push
fldenv
cmp
bound
or
mov
rorl
dec
jmp
xor
jb
adcb
movsl
mov
aad
xor
dec
jns
jne
scas
adc
inc
dec
push
inc
xor
and
jae
and
sbb
enter
mov
push
or
jmp
dec
das
xor
cmp
sbb
vmovmskps
cld
push
sbb
int
cmp
cmp
mov
ret
mov
xchg
mov
dec
mov
inc
inc
xor
adc
popl
fwait
push
add
cli
mov
pusha
test
mov
rcr
mov
enter
aas
xor
test
gs
jb
mov
dec
mov
test
mov
mov
sub
testl
jo
push
cltd
insl
scas
movsl
push
jno
mov
movsl
push
jne
xor
or
out
or
mov
push
push
lods
push
scas
and
icebp
xchg
scas
mov
iret
int3
dec
mov
cli
mov
push
lcall
sbb
sahf
js
insl
add
and
les
add
sub
ds
mov
push
or
loop
xchg
sbb
push
dec
push
mov
pushf
sbb
sub
or
and
shlb
jnp
add
sub
dec
ret
mov
imul
inc
push
pusha
cmc
sbb
xlat
inc
or
sub
and
out
pushf
dec
cmp
in
cmp
push
lret
mov
xor
add
push
lods
mov
mov
and
and
mov
mov
mov
das
int3
jbe
pop
leave
sub
into
xorb
dec
fildl
jb
repnz
jp
pop
mov
inc
push
fs
cmp
xchg
pushf
or
and
push
mov
fisubs
daa
call
test
sbb
pop
jae
mov
jae
loop
stos
mov
jbe
xor
arpl
cmpsb
jne
mov
pop
and
pop
jmp
pop
incl
scas
fdivs
pop
or
push
out
xchg
lods
push
sbb
aaa
cmp
pop
push
add
test
pop
xchg
bound
dec
sub
dec
jmp
pop
mov
js
pop
add
stos
jmp
ficomps
sbb
inc
jns
cmp
nop
std
mov
aas
push
jae
mov
ss
push
aaa
stos
fwait
jge
or
ret
in
or
cmp
xor
mov
jge
mov
fwait
and
ja
ret
push
fsubrl
lret
or
out
or
out
stc
xlat
mov
mov
call
stos
cmpsl
pop
inc
push
xchg
mov
mov
adc
mov
mov
rcrb
test
xor
loopne,pn
and
add
push
mov
adc
xchg
xchg
sbb
adc
mov
fnstsw
jge
cmpsl
dec
mov
ret
decb
sbb
pop
add
xorb
or
sti
loop
mov
mov
xchg
mov
in
jbe
mov
gs
fistps
cmp
jno
bound
or
nop
jns
cmp
lret
loope
pop
xchg
aas
inc
mov
push
xor
aaa
imul
insl
dec
or
push
movsl
scas
xor
icebp
popf
push
sbb
or
mov
adc
add
pop
mov
popa
inc
and
jge
orl
sbb
push
icebp
push
rcrl
fldcw
ror
jb
push
inc
xorl
push
cmc
pop
aad
and
adc
lahf
push
rclb
cltd
outsb
outsl
mov
adc
das
pusha
scas
call
add
or
jb
mov
addr16
jecxz
push
xchg
mov
cmp
ds
stc
xor
sbb
xor
inc
sti
cwtl
adc
hlt
pusha
push
es
iret
in
push
cltd
dec
push
ds
adc
sarl
insl
inc
aaa
pop
inc
push
xchg
push
xor
fidivl
pop
push
add
in
fs
lret
or
test
xor
popa
cmpl
cmpb
pop
orl
ret
arpl
lahf
call
adcl
das
js
cwtl
or
adc
lret
xchg
xor
gs
jmp
into
leave
jns
loope
jecxz
cmp
outsl
int3
xchg
xlat
cmp
fmull
test
xor
fldenv
xor
stos
das
ficompl
mov
push
stc
movsl
jno
add
lods
and
mov
pop
mov
pop
ja
sbb
and
int3
imul
push
insb
cmpsl
test
shl
add
mov
or
loop
mov
shl
dec
dec
mov
repz
mov
pop
dec
leave
adc
fcomi
cwtl
and
mov
pusha
mov
into
dec
imul
inc
dec
jbe
ret
lret
mov
pushf
loopne
cmc
jl
adcb
imul
pop
push
mov
xchg
cs
mov
lea
adc
jle
data16
xchg
and
mov
or
mov
sbb
sbb
mov
imul
sub
adc
xchg
mov
and
xor
cwtl
fldlg2
pop
aad
int3
sti
cltd
stos
in
jecxz
pop
shll
ret
in
sarb
push
loope
mov
push
imul
or
movb
pop
xchg
insl
mov
ljmp
lcall
or
pop
inc
push
add
sahf
inc
inc
imul
gs
ss
lret
test
addr16
shl
mov
add
fimull
pop
shlb
rcrl
sub
loope
xchg
js
push
dec
pop
sbb
outsl
dec
add
mov
clc
add
addr16
mov
lock
fldcw
sub
fsubs
push
jmpw
aad
adc
xor
add
inc
lret
sti
inc
hlt
push
adcl
or
aad
cwtl
add
add
loopne
loopnew
lahf
xor
cmpsl
lret
xchg
sarl
xchg
lcall
mov
sahf
loope
fnclex
add
loop
and
and
out
inc
and
adc
sub
popf
lret
ljmp
mov
cmp
cmpsb
test
sarl
out
je
cmpsl
test
daa
aaa
dec
scas
lcall
push
fs
sub
adc
jp
fstpt
sbbb
sahf
cwtl
movsb
push
inc
jmp
icebp
sbb
cmpb
scas
je
cmp
add
test
mov
jnp
jl
push
ret
pop
and
jecxz
sahf
jle
cmp
sar
movsb
mov
add
dec
fsubs
mov
pop
cmc
sti
mov
mov
sub
cltd
cld
imul
adc
xchg
push
xchg
inc
or
addb
add
mov
outsl
sub
dec
fisttps
movsb
inc
fnstcw
ja
pop
cmpsb
or
cwtl
jb
stos
scas
push
stos
push
jmp
jb
cmp
rorl
ds
dec
cmpsb
or
lods
divl
xchg
xor
out
mov
mov
xchg
add
fnsave
cli
xchg
adc
call
inc
sbb
stc
mov
lcall
scas
cmp
add
jno
aas
adc
bound
sbb
movsb
mov
inc
popa
push
dec
lret
jg
lcall
les
in
les
int
mov
pop
sbbb
push
pusha
lds
xchg
and
test
cmp
pushf
jmp
negl
jmp
xorl
mov
sbb
and
mov
or
scas
dec
and
mov
clc
pop
jle
cltd
test
xchg
sbb
jae
pop
mov
jle
jp
push
sbb
idivb
ret
push
mov
aaa
icebp
adcl
bound
lret
test
outsl
aad
addb
out
xchg
mov
movsl
mov
insl
lea
jg
pop
aad
in
xchg
fstp
test
fxch
enter
cmp
adc
add
sub
dec
or
xchg
xchg
xor
and
or
movsl
adc
ss
and
mov
daa
mov
popa
jbe
incl
lds
int
lret
sbb
cmpb
jmp
fmul
fcomi
je
std
jecxz
outsb
inc
mov
inc
or
mov
mov
sub
out
in
dec
xchg
sub
sbb
lock
xor
pop
cmp
dec
or
int3
inc
repz
rcl
divl
loopne
adc
inc
xor
insb
and
icebp
repnz
xchg
dec
flds
pop
imul
sub
dec
pushf
iret
mov
xchg
pop
cmpsl
andb
fldl
ds
mov
mov
dec
xor
mov
movsl
jle
push
fisubl
out
popf
cmp
push
cmp
cwtl
pushf
nop
xor
mov
lcall
inc
out
loopne
filds
xlat
sbb
push
rclb
sbb
popf
cmpsl
inc
lods
enter
mov
pop
int3
inc
stc
fstpt
add
lock
mov
add
mov
sub
add
cmp
jns
mov
shll
and
and
into
js
into
add
mov
icebp
fstpt
xchg
repz
adc
sarl
clc
jne
mov
or
mov
lret
inc
aad
sti
push
and
dec
mov
mov
stos
pop
cmp
int
aam
cld
push
test
sbb
xor
popa
imul
lods
mov
adcl
daa
test
or
mov
mov
fs
mov
mov
loop
xorl
notl
jl
mov
scas
scas
jns
and
lahf
and
std
add
xchg
inc
inc
lcall
xchg
insb
call
mov
popf
dec
mov
add
gs
xchg
faddl
mov
sub
bound
jmp
sarl
addl
push
in
lret
arpl
fisubrl
loop
push
sbb
pop
jbe
cmpsl
xor
outsb
nop
sub
ss
mov
jl
and
pushf
mov
pop
data16
popf
dec
cmp
fcmovbe
xlat
rcr
cld
adc
sbb
add
mov
lock
pop
dec
xchg
dec
icebp
aad
dec
pusha
sub
insb
xchg
pop
mov
stos
ret
xchg
mov
xorl
sub
mov
xchg
in
mov
mov
mov
xchg
mov
jbe
sbb
insb
add
sub
jmp
ja
xor
out
adc
jns
cmpsl
arpl
xchg
icebp
mov
xor
pop
scas
sub
add
dec
insl
stos
out
mov
adc
ficomps
add
or
cmpsb
js
cwtl
mov
loope
je
mov
adc
repnz
adc
mov
push
and
cld
inc
jo
sbb
and
adc
jg
xor
les
ret
mov
add
sarl
xchg
and
call
outsb
jnp
adc
sbb
ljmp
cmc
mov
dec
test
jae
cmp
push
ficompl
outsb
and
sbb
dec
outsl
cwtl
mov
adc
mov
jae
adc
xorl
and
mov
outsl
and
add
out
mov
jbe
shl
into
jge
xchg
sti
aad
cmp
js
and
dec
cmp
std
and
mov
jae
lahf
or
aad
mov
cmp
push
xchg
mov
push
les
add
push
push
in
popa
les
outsb
movsl
pop
xor
inc
cld
and
lret
out
mov
sbb
outsb
lods
cld
lods
and
lahf
fcomp
nop
push
dec
jmp
repz
in
lea
sahf
movsl
jl
xor
xchg
add
ret
sub
nop
int
sbb
mov
outsb
mull
push
jg
mov
roll
jg
xchg
push
lret
imul
push
loopne
mov
jbe
into
in
adc
repnz
test
xchg
mov
stc
subb
dec
fisubrs
push
testb
pushf
fnstenv
xchg
movsb
aaa
jb
dec
push
inc
jp
ss
inc
or
mov
mov
test
cmp
shll
int
addr16
and
stos
das
inc
out
les
inc
into
imul
andl
imul
inc
or
jmp
clc
je
in
lcall
jne
mov
and
dec
sbb
lret
jno
fbstp
and
and
xor
leave
lret
inc
test
add
popf
loopne
mov
nop
xor
cmp
dec
jge
cli
add
inc
loope
mov
push
lods
mov
mov
pop
add
adc
repnz
and
mov
mov
xchg
inc
rcr
fcompl
sub
dec
into
sbbl
test
inc
aam
scas
pop
pop
and
sbb
xchg
fxch
cmpsb
pusha
inc
xchg
call
jecxz
mov
outsl
test
mov
pushf
sbb
insb
inc
pop
xor
das
or
or
cmp
jl
push
and
fisubrs
jns
push
fwait
daa
push
dec
sub
aad
js
push
test
push
mov
add
daa
fimull
cld
ret
sbb
popf
add
inc
add
test
adc
subl
les
mov
mov
addl
cld
scas
mov
sahf
cs
push
cmpsl
jnp
pushf
ret
jne
and
xor
or
mov
or
jecxz
lods
jae
xchg
add
jo
outsl
scas
div
stos
xchg
mull
scas
xor
repnz
les
mov
jb
cmp
mov
lods
add
sbbb
push
and
out
xor
or
or
aas
mov
sub
sbb
dec
aad
jbe
mov
xor
and
aas
xchg
ret
and
adc
pop
or
sub
jg
mov
jo
push
mov
add
mov
sub
das
lcall
add
xchg
std
lahf
sub
stc
lcall
mov
inc
pop
jg
idivb
subb
mov
and
movsb
outsl
ror
adc
push
jmp
in
arpl
jns
adc
ja
jo
cmp
xchg
fdivrp
or
push
or
adc
in
mov
adc
mov
sbb
test
fimull
adc
dec
pop
and
cmp
mov
pop
push
cmp
jmp
addr16
icebp
and
fimuls
adc
aad
lods
fadds
sbb
or
xor
fimuls
cmp
inc
and
or
mov
push
sub
mov
jl
adc
cwtl
aas
inc
pushf
int3
inc
movsb
lahf
in
pop
fs
xchg
out
xchg
jns
dec
lds
scas
jge
jge
int
les
repz
inc
mov
test
out
mov
dec
mov
mov
pop
mov
fists
hlt
jae
xchg
xor
in
push
cmp
lcall
or
in
cmp
cmp
mov
push
je
mov
jg
daa
loope
pusha
xchg
rcr
pop
sbb
push
dec
pusha
std
mov
test
fisubs
mov
or
fwait
stos
cwtl
push
jecxz
es
stc
lahf
clc
or
cmp
call
or
adc
sub
ja
push
fcmovnu
jns
jnp
dec
call
cs
sti
movsb
dec
movsb
or
test
xor
stc
mov
xlat
loop
push
in
sub
jecxz
cmp
int3
scas
pushf
aad
psllw
mov
inc
pop
test
fxam
sbb
and
dec
adc
outsl
pusha
pushf
xor
cmp
sbb
ret
test
cmp
loopne
dec
push
pop
and
adc
pushf
aas
jge
mov
pop
imulb
ret
test
ds
popf
mov
test
jle
out
mov
mov
cli
pop
mov
jg
xor
cld
clc
nop
push
fimuls
or
pop
sub
out
xchg
popf
ja
xchg
dec
inc
push
adc
mov
mov
xorb
outsb
inc
add
js
pop
cmp
jo
fmul
enter
cmp
sbb
daa
fsub
adc
lcall
outsl
jo
xor
xchg
cmpsl
xlat
push
push
out
in
push
std
pop
repz
cmc
xchg
or
hlt
jbe
lds
lcall
nop
ret
add
stos
sub
inc
jae
std
fnsave
jns
rcr
lea
jg
sub
out
or
loope
or
inc
mov
mov
das
xchg
sahf
dec
adc
test
push
sarb
clc
jge
xor
xlat
jecxz
movsb
sub
std
outsb
in
inc
fisttps
push
jge
es
loop
sub
sub
mov
ffree
cs
popa
jb
inc
xor
jle
scas
jmp
add
inc
lcall
inc
xlat
xchg
rorb
cmpsl
xor
dec
icebp
dec
pop
in
out
jecxz
es
mov
mov
push
jno
fs
xor
or
icebp
add
lods
dec
pop
push
clc
xchg
icebp
pusha
decl
pop
lcall
inc
ficompl
add
lock
mov
hlt
addr16
jae
push
mov
xchg
mov
lret
xchg
in
pop
sub
ja
jge
in
push
lea
push
jecxz
sub
add
out
fdivrs
daa
push
test
std
addr16
and
push
fsubr
pop
cli
cmp
dec
push
xor
add
fmul
shll
enter
pop
stos
ret
push
pop
repnz
jb
stos
jb
out
addb
dec
movsl
fsubr
xchg
scas
and
mov
and
sbb
inc
pop
mov
mov
lcall
test
popa
and
es
mov
push
es
ficoms
mov
push
mov
pop
mov
adc
jb
or
sub
test
dec
stc
rorl
xchg
dec
jge
pop
lds
jne
cwtl
cmc
inc
dec
dec
pop
xlat
cs
mov
in
pop
outsb
pop
repz
pop
inc
push
mov
pop
mov
and
test
add
js
xchg
xor
sub
add
pop
inc
push
mov
mov
in
xchg
pop
xchg
cs
jmp
bound
jbe
push
xchg
addr16
cld
test
movsl
jle
xlat
mov
fidivl
outsl
andl
xchg
lret
or
mov
js
ds
in
mov
sub
data16
lret
fisubrs
in
cmp
pop
sbb
cmp
shr
adc
sbb
inc
cmp
cmpsb
xchg
call
adc
fisubs
mov
push
loopne
loopne
or
shlb
push
ficomps
cmp
jno
mov
int
arpl
in
inc
and
and
push
xorb
das
fstl
inc
jo
xor
push
cmc
pushf
dec
shl
and
repz
loopne
pop
xor
clc
xchg
rcl
xlat
sbb
popf
movsb
aas
ss
push
push
lds
jne
sbb
or
pop
fwait
push
lcall
std
jl
mov
pushf
ret
int3
loopne
loopne
daa
mov
aam
mov
and
in
mov
lcall
sub
xchg
xchg
repz
push
mov
enter
mov
movsl
and
insb
dec
hlt
aas
outsl
imul
inc
and
pop
push
mov
out
cmp
or
dec
mov
xchg
aas
sbb
ret
fstpt
sub
jp
mov
push
mov
push
fiadds
pop
lods
add
fmull
mov
outsb
adc
cmpsb
jne
out
mov
les
fsubl
lcallw
mov
sbb
testb
add
cmpsb
insl
mov
ds
push
xchg
and
jnp
inc
mov
jae
xchg
mov
xor
sub
pushf
jne
lea
adc
shrb
shll
test
pop
xchg
or
iret
xchg
or
or
mov
mov
adc
sbb
push
cwtl
add
add
lea
subl
cs
rcrl
sub
enter
into
inc
fdiv
pop
mov
insl
sarl
fimuls
mov
xchg
cmpsl
hlt
mov
repnz
mov
out
mov
dec
dec
mov
enter
push
pop
lret
shll
cmp
jge
xorb
shl
and
cmp
push
dec
clc
jl
fidivs
mov
jecxz
adc
xchg
jnp,pn
cld
je
sub
cltd
jne
sub
inc
and
inc
mov
adc
test
cmp
std
adc
fiaddl
in
imull
push
add
lods
cli
enter
pop
bound
shrl
ljmp
jp
cmc
scas
je
mov
aaa
jecxz
repz
lds
rcrb
popa
rcl
insb
cmpsb
and
mov
movsb
clc
sub
mov
or
mov
push
mov
fildll
sti
repz
jle
and
inc
jle
add
fists
mov
ss
xchg
inc
sarb
aam
bound
test
mov
and
adc
sub
xor
cli
pop
movsl
rcll
jbe
dec
fstl
cld
shll
mov
and
add
es
jmp
je
nop
out
int3
mov
scas
faddl
insl
inc
jne
mov
icebp
xchg
or
fwait
sub
insb
fprem
aam
cmc
jl
mov
mov
outsl
jae
dec
mov
je
xchg
in
addb
xor
std
call
in
push
push
sub
loope
lds
adc
bound
negb
mov
out
pop
sbb
jb
pop
out
jp
jo
iret
pop
imul
int3
scas
popf
es
enter
stos
cwtl
mov
aad
ja
xchg
jno
out
rep
pop
mov
dec
imul
xor
out
cmp
mov
sbb
dec
and
push
ljmp
fcomi
lds
shl
cmp
sub
dec
rorb
insl
mov
js
mov
pop
and
sub
sub
imul
bound
es
pop
out
adc
lds
dec
addl
fs
and
out
rcll
in
and
mov
rclb
jne
push
and
adc
aam
mov
push
xor
stos
push
mov
jmp
roll
adc
add
cmpsl
mov
int3
sbb
xor
addr16
sub
and
mov
add
mov
mov
fs
testl
and
stc
test
and
mov
icebp
je
cli
lret
insb
mov
bound
int
rclb
enter
adc
mov
test
dec
push
inc
xchg
add
and
adc
add
jl,pt
fistps
ds
test
push
xor
push
inc
cmpsb
dec
xchg
add
loopne
cmp
xchg
mov
xor
push
mov
pop
mov
fcoms
mov
imul
mov
pop
pusha
mov
mov
cmp
adc
lret
jle
hlt
pop
cmp
mov
pop
cmp
fwait
jnp
mov
add
jno
push
insb
into
roll
xchg
push
loope
daa
loop
frndint
or
jbe
sarb
or
movsl
nop
mov
icebp
or
into
std
dec
rorb
jp
insb
cmpsb
cmp
xor
lcall
sbb
or
test
sbb
aaa
je
push
out
mov
push
push
pop
mov
jecxz
mov
lods
outsl
loope
push
pop
popa
dec
outsb
pusha
jbe
ss
insb
mov
adc
or
mov
leave
dec
addl
xchg
sbb
clc
outsb
dec
lods
xor
inc
inc
mov
iret
pop
js
xchg
insl
mov
sahf
scas
mov
clc
cwtl
add
jo
sub
xchg
xor
mov
inc
pop
int3
testb
or
inc
mov
pop
dec
add
arpl
adc
push
imul
mov
rcrb
sbb
add
pop
inc
inc
movsb
jo
into
pop
mov
arpl
leave
test
adc
xchg
imul
loope
mov
lods
sarb
fwait
pop
sbb
or
pushf
xorl
ficomps
mov
mov
mov
pop
mov
addr16
out
pop
icebp
cmp
cltd
cmp
add
std
popf
adc
loopne
lods
jmp
je
jo
push
pop
jnp
sbb
aam
repnz
cmpsl
sbb
ss
adc
mov
mov
and
xor
lcall
lods
movsb
iret
leave
lcall
or
dec
cmp
repnz
and
xor
movntq
out
fisubrl
mov
jb
mov
aam
popf
mov
mov
mov
inc
cmc
out
mov
mov
sub
loopne
or
shlb
mov
and
cmp
aam
ja
sub
adc
sbb
adc
mov
fcmovu
ss
fs
mov
push
or
rorl
cmp
cmc
lret
sbb
test
adc
mov
fstps
jg
and
ds
inc
sbb
sbb
testb
sbb
add
das
sar
and
call
and
push
push
shr
jns
inc
adc
sub
jae
daa
cli
xor
vpsraw
daa
xor
shrl
out
lret
jae
jecxz
pop
std
hlt
sub
js
sbb
lahf
loope
push
pop
scas
scas
rcr
xor
mov
call
adc
xchg
pusha
test
loope
repnz
fwait
bound
cmpsl
xor
imul
adc
sub
bound
ljmp
or
clc
and
mov
jmp
ja
or
pop
xor
aaa
lret
mov
fwait
push
pop
das
dec
mov
in
jb
mov
or
mov
enter
mov
jb
jp
les
xlat
push
and
sbb
or
rclb
icebp
cmc
insl
movsl
pop
daa
pop
int
and
rcll
ficomps
loope
xchg
xchg
xchg
add
rcl
pop
out
and
or
jg,pt
loopne
cld
xchg
ss
push
mov
lock
int3
xor
inc
inc
clc
nop
or
inc
popa
imul
push
andl
in
lea
cmpsl
icebp
xor
in
jg
outsl
es
jns
mov
push
test
adc
jbe
mov
inc
cmp
je
or
jle
jne
mov
push
repnz
cmc
lds
add
lods
cmp
and
loop
adc
aad
cmp
jp
test
outsb
xchg
inc
sub
bound
rolb
jle
sub
add
xchg
testb
fiaddl
imul
clc
das
ret
cmp
insl
xor
lahf
cmp
ljmp
mov
ja
pop
mov
jo
inc
push
lods
inc
outsb
lock
lds
jmp
out
bound
mov
and
lcall
je
dec
lret
cmp
mov
and
pop
mov
out
insl
push
cs
mov
hlt
xor
and
clc
dec
mov
mov
int3
clc
in
cmc
jecxz
ss
das
xchg
into
inc
mov
pop
cmpsl
aaa
shrb
jmpw
pop
sub
inc
mov
push
mov
mov
out
inc
pop
mov
test
or
int3
cmc
xchg
and
push
cmpsl
inc
mov
fdiv
mov
cmpsl
pushf
js
mull
or
push
and
fcmove
push
pop
stos
lcall
dec
sub
incl
mov
cld
jecxz
mov
sbb
js
ljmp
insb
xorl
sub
xorb
imul
dec
push
je
cli
adc
mov
xchg
jge
popa
sbb
adc
lock
push
mov
and
insl
pop
mov
test
imul
and
jb
aaa
fucom
adc
imul
out
and
je
mov
xor
flds
jne
and
mov
mov
jecxz
rol
sub
pop
inc
xor
add
mov
or
aaa
adc
mov
mov
xchg
cmp
xchg
popa
movsb
ds
mov
xlat
xchg
mov
xchg
mov
aaa
sti
xchg
cld
push
stos
mov
test
imul
jg
and
jmp
jmp
jae
mov
daa
scas
mov
loope
pop
out
mov
sub
xchg
push
subl
dec
adc
mov
call
pop
jle
insb
daa
fisubrs
jmp
stos
jne
adc
xchg
addr16
out
test
rolb
xor
pop
push
xchg
iret
inc
pop
lcall
jne
repnz
mov
push
loop
addl
or
jl
mov
aas
imul
or
add
out
imul
std
sbb
and
xchg
in
mov
jns
sahf
in
test
movsb
mov
and
jae
xchg
push
call
mov
es
int3
ja
adc
cmpsb
loopne
pop
sub
dec
fstpt
xor
jg
out
xor
ret
push
sbbl
cmp
and
pop
cmpsl
and
inc
xchg
inc
push
ficomps
cmp
cs
jmp
dec
xchg
pop
mov
xchg
or
sbb
shlb
test
sub
adc
dec
dec
mov
mov
insl
dec
push
sub
dec
test
ljmp
mov
mov
lret
shll
or
sahf
rcrb
scas
cmc
sbb
dec
sub
sub
and
fsubr
adc
jns
ret
jb,pn
pop
or
mov
loop
dec
idivb
pop
push
mov
jo
scas
pop
add
add
mull
pop
pushf
and
outsl
pop
jp
jae
rorb
or
pop
mov
enter
jg
lock
movsb
loop
or
xorb
jle
pop
push
ss
dec
xor
xor
es
xor
daa
int3
negb
pop
mov
dec
adc
repz
int
hlt
push
loop
int3
sbb
stos
push
in
adc
xlat
std
ss
jo
cmpb
and
mov
sbb
cld
ret
decl
ljmp
fdivp
aad
bound
cmp
icebp
or
jne
mov
xchg
addb
jmp
cltd
lret
sub
loope
push
mov
lods
sbbb
lods
std
jge
bound
nop
pop
daa
cmp
data16
shlb
mov
repz
push
mov
cmp
pop
in
mov
xchg
outsl
mov
cmpsb
dec
dec
pop
insb
add
adc
inc
mov
fadd
push
subb
pop
push
jno
inc
aad
pop
adc
dec
lea
aaa
push
gs
ljmp
add
sub
ds
mov
sub
or
int
aad
xor
and
jo
or
in
ret
and
ror
cmp
fimuls
sahf
pop
jno
push
aas
fldcw
add
pop
xor
xor
ret
cmpsl
mov
es
xor
xchg
lock
pop
xor
and
sbbb
jnp
adc
imul
push
mov
or
std
mov
mov
pop
sbb
add
in
repnz
stc
insb
je
cltd
mov
jmp
adc
pusha
and
or
subl
mov
pop
dec
fbstp
ss
popf
push
mul
push
outsb
fbstp
test
xor
or
scas
pop
icebp
and
pop
push
fbstp
inc
adc
inc
and
mov
lret
js
xchg
sub
mov
mov
inc
mov
popf
xchg
stos
inc
fidivrl
sarb
out
arpl
and
aas
xor
pop
jnp
sub
scas
or
pop
mov
jo
repz
cmp
push
mov
and
pop
push
aaa
popf
cmp
shlb
notl
popa
xlat
orb
inc
mov
pop
test
push
data16
inc
inc
lret
in
cwtl
jp
cmp
icebp
movsb
jmp
mov
jns
sbb
pop
mov
inc
lds
outsb
mov
ret
testl
sbb
sbb
jl
pop
int
aam
popf
mov
sub
outsb
clc
pop
ret
inc
mov
pop
rcl
dec
lods
mov
movsb
inc
or
cwtl
dec
es
push
out
or
movl
mov
push
and
aaa
xchg
js
lret
fidivs
repz
jp
dec
fwait
xchg
sub
std
sbb
and
cmp
mov
mov
dec
sbb
ljmp
sbb
stc
movb
jo
ja
ds
loopne
xorl
and
loope
test
orl
push
push
lahf
dec
loop
shrl
mov
mov
dec
mov
inc
add
insb
mov
cmp
ret
stc
or
push
pop
lds
or
mov
popa
inc
loopne
dec
aaa
pop
pop
push
mov
jp
pushf
in
sahf
cmp
mov
js
sti
shlb
popl
push
outsb
mov
cmp
mov
add
push
inc
sbb
adc
imul
cld
daa
xchg
and
and
sti
mov
lds
mov
and
fldcw
add
out
testb
pop
mull
jg
add
jae
cmp
push
movzbl
xrelease
dec
and
jne
xor
mov
icebp
pop
or
add
jmp
frstor
loopne
test
insl
adc
daa
mov
arpl
push
frstpm(287
cmp
xor
or
in
add
push
test
push
arpl
rcll
sub
xchg
out
jmp
push
je
scas
sbb
fstl
sbb
test
xor
test
pushf
sub
mov
loope
pop
mov
fbstp
mov
enter
xor
sti
into
adc
push
popa
out
dec
idivb
push
jmp
adc
pop
mov
cwtl
in
insb
fidivrs
hlt
mov
push
xchg
and
jns
js
leave
sarb
pop
push
out
icebp
push
orl
or
sbb
in
mov
inc
sbb
push
and
push
mov
sub
loop
dec
inc
xor
dec
addb
cmpsb
fists
or
cmpsb
lods
xor
bound
inc
adc
loopne
xchg
ret
and
lret
sub
sub
xor
or
outsl
daa
xchg
jge
aad
dec
adc
sbb
jno
aas
mov
popa
inc
inc
fcoms
inc
jmp
je
inc
mov
xchg
and
lcall
jmp
mov
and
sub
xor
adc
popa
rolb
out
push
aas
test
pusha
pop
lret
lods
mov
mov
arpl
mov
mov
pop
arpl
leave
dec
adc
lea
jg
stos
test
outsl
repz
push
xchg
lds
inc
mov
icebp
int3
add
jo
pop
and
pop
mov
mov
jne
call
inc
mov
sub
dec
stos
or
mov
movsl
aaa
jmp
notl
dec
cmpsb
push
xchg
ficomps
out
repz
test
push
or
aas
pop
sub
lret
into
adc
das
idiv
hlt
test
mov
popf
sahf
loope
fnsave
les
lret
pop
dec
push
sti
mov
cmp
inc
pop
sti
mov
lahf
inc
in
sub
xchg
pushl
popa
nop
push
jl
adc
dec
rorb
sti
mov
clc
movsb
stos
jb
inc
outsl
dec
mov
icebp
aad
movsl
cmp
std
xchg
push
and
push
cld
dec
repnz
pusha
mov
data16
aas
sbb
popa
xchg
jge
and
out
sete
pop
pop
jp
sbb
seto
add
mov
lahf
jnp
in
sbb
or
dec
jle
mov
mov
mov
dec
les
pop
ss
push
xchg
xor
jb
shl
pop
lret
cmp
inc
pop
cmp
jecxz
scas
mov
mov
daa
stos
hlt
lea
mov
add
hlt
inc
popf
xchg
add
clc
push
ror
sub
cld
fwait
pop
and
mov
divb
xor
aam
jo
pop
pop
aas
arpl
mov
jb
dec
mov
ret
stc
push
or
or
adc
or
or
nop
push
and
das
cli
cwtl
cwtl
mov
mov
cld
xor
cmpsb
inc
inc
jmp
push
shll
push
inc
pusha
push
xchg
push
push
cld
insb
sbb
xchg
add
push
pop
shlb
xchg
nop
jae
popf
mov
stos
cmc
xorl
sub
pop
cmp
push
jmp
inc
adc
int
pop
loop
es
adc
outsl
imul
sbb
or
or
pop
movsl
nop
push
out
push
jb
lret
pop
adc
push
repnz
push
pop
inc
xor
pop
add
push
cmp
rorb
ja
bound
std
cmp
fimuls
icebp
lret
pop
mov
jmp
or
loope
sub
jno
or
push
test
xor
sub
cltd
mov
les
pop
pop
cmpsb
mov
pusha
arpl
outsl
jl
pushf
loop
out
nop
push
or
mov
mov
fs
xor
leave
mov
in
sarb
add
add
jmp
inc
cwtl
jo
rcrb
xchg
sub
in
xchg
loopne
lods
sar
inc
mov
adc
fbstp
shll
jecxz
fsts
xchg
aad
inc
push
addr16
aaa
sbb
sub
repnz
mov
fdivr
lret
add
lcall
inc
pushf
push
pop
loop
adc
mov
sti
xchg
fistpl
ds
jb
jmp
or
aaa
out
inc
lds
push
xchg
aaa
mov
stc
or
mov
insb
pop
add
mov
mov
scas
mov
fcmovnu
cltd
mov
mov
nop
push
dec
fistpl
cmp
pop
inc
neg
sbb
xchg
fstpl
jb
stos
ret
sbb
ja
lahf
sar
lods
lahf
stos
movsl
rol
std
test
arpl
pusha
outsb
add
dec
inc
arpl
dec
call
popf
cmp
and
not
pop
bound
sub
sub
jno
sti
and
push
lock
lcall
fmull
lret
or
xchg
lock
lea
push
cmc
shll
jp
xchg
out
repz
outsb
movsl
test
inc
sti
mov
sbb
loope
sbb
lock
inc
aas
mov
jne
in
mov
cmp
scas
int
mov
je
or
popa
dec
and
jno
mov
or
mov
std
loopne
jo
pop
jmp
inc
int3
repz
mov
das
xchg
jg
add
inc
pop
or
in
mov
mov
scas
adc
xor
mov
sbb
lahf
pop
adc
adc
in
xor
repz
fadd
dec
in
test
inc
adc
jge
mov
jg
add
rcrb
hlt
sbb
sub
fst
iret
dec
ljmp
clc
lcall
add
push
push
outsl
inc
cmc
aad
mov
sbb
mov
mov
cltd
lret
lcall
xor
pop
addr16
movsb
jo
pop
icebp
inc
inc
pushf
dec
nop
sbb
xor
loopne
xchg
ja
push
sbb
sub
adc
sahf
jb
add
xlat
lahf
mov
xor
xchg
and
dec
ret
add
bound
in
lcall
arpl
jno
or
cmp
lock
test
cmp
testb
push
imul
cmp
fwait
mov
sbb
dec
dec
ljmp
xchg
rcrl
sub
xchg
pop
lock
or
sub
rcr
fildll
int3
push
mov
popf
cmpsl
addl
adc
jecxz
adc
jp
sbb
and
test
mov
inc
jmp
aam
hlt
inc
jmp
fidivrs
out
or
cmp
imul
ds
sahf
in
inc
push
inc
stos
outsb
xchg
stc
push
daa
jecxz
xchg
adc
add
rolb
lock
and
jmp
shlb
push
negl
lret
test
daa
loop
xchg
push
mov
mov
mov
frstor
sbbl
lds
bound
mov
and
mov
cmc
mov
clc
movsl
mov
sub
ret
sub
popa
or
insl
int3
inc
cmp
pop
gs
pop
fistpll
xchg
sub
pop
jne
cmp
mov
push
pop
mov
or
or
sbb
ret
lret
cmp
stos
push
cld
aas
fstl
cmp
ja
mov
sbb
repnz
sahf
cmp
xor
lods
int
rcl
ljmp
push
mov
inc
in
and
push
sarb
out
cltd
cld
mov
add
dec
in
sub
nop
je
inc
and
or
pop
add
jb
aas
cli
shr
jns
pushf
andb
sub
and
pop
jl
sub
ret
pop
imul
dec
xchg
push
enter
add
sti
pop
test
lcall
repz
xor
xor
xchg
dec
andl
ja
aas
in
and
push
push
out
mov
imul
push
add
jbe
repz
gs
mov
pop
sbb
dec
loopne
xchg
mov
jne
movsl
add
sub
pop
ret
inc
inc
aad
xor
das
mov
cld
out
sahf
mov
pop
xlat
jl
sbb
push
dec
loopne
popf
inc
xor
push
inc
lahf
adcb
insb
clc
les
and
test
mov
mov
or
in
inc
das
scas
test
xor
or
les
push
jne
or
cmpsb
cmp
pusha
add
in
jo
push
or
adc
pop
xor
jb
daa
pusha
fldt
out
dec
into
int3
je
mov
pop
push
fisubrs
and
js
jp
inc
jns
jae
inc
and
lcall
pushf
cmp
loope
mov
mov
mov
sbb
add
out
mov
pop
in
xor
pop
mov
xor
xchg
jne
scas
xchg
jno
filds
lds
dec
mull
dec
stos
js
push
imul
pop
lock
cmpsl
dec
aam
hlt
lea
inc
fmuls
mov
ret
ret
shll
stos
adcl
ljmp
aaa
adcl
fs
sub
jo
imul
lock
adc
add
mov
cli
sarl
jbe
pcmpeqd
movsb
aam
mov
loopne
cltd
int
aad
pop
mov
jmp
xchg
jecxz
mov
fst
jns
mov
jno
ss
lret
cs
push
xchg
into
push
or
call
lock
pop
sub
pop
in
lret
jno
repnz
jns
jae
mov
mov
subl
movsb
in
adc
lcall
sbb
testl
xchg
sbb
daa
sub
gs
test
push
in
not
mov
inc
push
call
hlt
das
push
aam
out
push
cwtl
shll
arpl
in
push
and
xchg
inc
aaa
ret
shr
sub
in
fistpl
shll
and
cmpsb
xchg
outsl
adc
mov
add
push
add
sub
inc
aam
leave
adc
lea
sbb
imul
movsl
add
dec
dec
enter
fisubs
jecxz
and
pop
out
into
mov
dec
sbb
mov
ljmp
mov
or
jmp
jb
data16
pop
jg
addb
call
cmpsb
mov
fisubrl
ret
dec
inc
ds
rorb
xchg
xchg
sub
iret
insb
sub
shrl
rcrb
sbb
push
lds
push
mov
xor
loope
popa
push
ljmp
xchg
lds
outsl
es
mov
scas
jmp
adcl
jp
roll
cmp
in
sub
or
cmp
lret
add
dec
and
adc
cli
xchg
in
pop
adc
xchg
ret
sbb
insl
mov
imul
pop
test
fcomps
frstor
clc
inc
mov
sbb
dec
mov
cmp
sarl
popf
out
std
fadds
pusha
mov
pop
cmp
push
mov
sub
outsb
and
icebp
pushf
sub
cmc
mov
adc
dec
add
rcrb
or
imul
sbb
into
push
jo
in
ficoml
lds
loopne
add
xchg
scas
xchg
jmp
scas
adc
fdivr
jae
repz
jb
lods
insb
pop
mov
or
fsts
jno
test
cmp
add
movsb
lock
inc
stos
mov
insb
fstp
jbe
sbb
or
xor
out
jae
push
aad
add
jg
mov
icebp
inc
adc
push
add
or
in
lcall
xrelease
dec
pop
stos
lods
ret
push
xor
xor
or
or
xchg
xchg
in
add
pop
or
fdivl
sub
jbe
push
adc
adc
test
and
fmuls
jne
lret
xchg
cmp
cld
sbbl
push
pushf
jge
cwtl
cli
cli
ret
repz
push
scas
inc
sub
in
dec
inc
insl
repnz
dec
pop
xchg
mov
stc
jb
scas
in
cltd
insl
mov
nop
ljmp
fbld
daa
sbb
xor
jns
mov
lock
add
pop
adc
adc
or
pop
incl
scas
fmull
adcb
and
addb
add
or
jo
stos
jae
xor
adc
lods
ja
call
jbe
repnz
ss
arpl
mov
bound
push
rcll
jns
dec
jnp
lea
mov
outsb
rorb
ds
shl
negb
stos
and
inc
repz
cld
cmp
fwait
or
sbb
sub
add
in
dec
aaa
xchg
or
ret
ret
out
add
inc
xchg
adc
in
mov
or
dec
push
xchg
cmpsl
xor
stc
jb
sbb
enter
loop
pop
or
je
adc
clc
mov
rcrl
cmp
repz
insb
data16
repnz
dec
les
in
mov
mov
stc
sbb
or
cli
fcomps
std
popf
imul
push
add
loop
ss
fimuls
fndisi(8087
das
and
fimull
in
ljmp
jb
mov
push
mov
loopne
cmp
and
sahf
sub
mov
cs
jb
mov
loope
add
lret
subl
and
sbb
in
outsb
cmp
cltd
lds
xor
sbb
mov
or
mov
jp
frstor
rcl
pusha
lods
into
push
xchg
loope
xchg
movnti
cmp
dec
stos
jbe
in
push
pop
jmp
sbb
lret
add
rclb
push
mov
test
pushf
xchg
dec
gs
orl
sub
sbb
ror
jne
in
xor
jb
xor
pushf
xchg
je
cmc
pop
enter
or
lcall
imul
sub
mov
push
and
dec
or
clc
std
mov
aaa
sahf
jge
lock
lock
imulb
or
mulb
xor
cltd
lea
push
mov
adc
xor
movsl
dec
pop
dec
cmc
adc
sub
mov
pop
xchg
sub
loopne
dec
inc
mov
push
xor
push
mov
sub
fisubrs
mov
jg
iret
int3
lock
repz
xor
leave
xchg
fwait
xchg
jbe
shll
pushf
or
adc
fwait
xchg
pop
and
int3
leave
out
faddl
fdivrp
cmp
push
loopne
andb
pop
push
xchg
lock
cmpsl
fwait
mov
push
inc
lds
add
inc
into
or
repnz
movsl
xchg
out
jns
int
cmp
inc
dec
cwtl
or
jae
and
push
aaa
out
subl
iret
fwait
mov
in
push
jno
ja
xchg
xor
sub
call
xchg
push
mov
cmpsb
or
sub
or
pop
insl
mov
ffreep
pop
stos
cmp
cmp
pop
ret
dec
das
loopne
bswap
lods
ljmp
xor
push
mov
lcall
dec
xlat
mov
lds
and
in
out
mov
nop
les
hlt
mov
pop
ret
aaa
xor
int3
pop
lret
lret
pop
mov
mov
pop
into
arpl
int3
loop
xchg
test
aas
xor
insb
ficoml
cli
pop
cld
iret
mov
sub
repz
mov
mov
das
cwtl
enter
mov
insl
mov
jge
cmpsl
leave
lods
mov
fcmovbe
dec
divb
xchg
js
das
cs
fs
add
daa
loopne
mov
outsb
inc
xor
testb
loopne
adc
inc
xor
fdiv
and
sub
or
dec
inc
or
jg
in
pop
out
mov
sub
movd
push
fisttps
iret
adc
fistl
ds
ja
mov
push
sub
sahf
pop
cmp
setp
into
aad
and
les
pop
addr16
cld
test
int3
paddb
and
out
insl
adc
imul
push
pusha
ljmp
scas
jecxz
jge
jne
lret
add
jns
jge
sbb
mov
imul
cmp
jb
shrb
cmpsb
int
loope
int3
xchg
mov
xorb
ss
mov
int3
rorl
sub
sub
fsts
inc
div
jle
adc
or
ret
pop
cli
fstl
xchg
jg
cs
aaa
push
cmpsb
fistps
daa
mov
xor
lds
mov
add
xchg
sbb
inc
add
sahf
stos
cmp
push
pop
aas
push
lods
pop
sbb
das
leave
mov
add
dec
adc
aas
xor
ds
add
cmpsb
push
fsts
cmpsb
in
in
and
arpl
mov
pusha
push
clc
jp
push
push
dec
fsts
ret
xchg
cltd
jns
sub
pop
aad
inc
push
mov
sahf
cmc
repnz
jbe
sbb
fs
sbb
mov
fs
fwait
inc
xchg
and
lahf
adc
dec
hlt
sub
pop
test
jl
cmc
dec
ja
xchg
sub
or
fsubl
inc
andl
ds
iret
and
dec
std
and
shlb
out
push
outsl
gs
fistps
lea
int
cli
je
push
pop
mov
rolb
pop
lds
loopne
cs
and
cmp
sahf
push
shrb
or
mov
cmpsb
mov
dec
add
jmp
in
ret
cwtl
push
shll
std
arpl
sbb
sti
dec
xor
lcall
cmp
sub
and
sti
jbe
jb
push
fcmovb
cli
mov
pop
hlt
mov
arpl
fcoml
add
pop
or
sbb
outsl
hlt
mov
xor
xor
mov
lea
inc
xchg
mov
sub
sbb
mov
pop
push
xor
ret
push
jnp
test
inc
pop
xchg
sub
cltd
out
push
outsl
add
mov
call
push
cmpsl
mov
call
xor
jl
pusha
add
xor
imul
mov
into
dec
fidivrl
outsl
jmp
push
lret
pop
adc
sbb
push
xchg
lods
mov
lods
jle
xor
dec
pop
jne
pop
mov
push
jg
in
push
xchg
into
sbb
loope
pushf
sub
adc
push
mov
and
push
enter
mov
mov
adcb
mov
fcoms
mov
sbb
jmp
mov
insb
dec
mov
fwait
lea
dec
rcrl
jp
mov
cmc
jnp
enter
jae
out
cmpsb
repnz
xchg
test
sbb
push
mov
add
jne
add
add
add
jg
leave
xchg
cmp
sbb
leave
jo
pop
fiadds
pop
add
shl
sti
iret
xor
add
cmp
jle
cli
fsubrl
mov
xor
mov
adc
shrl
mov
fs
pop
xor
bound
test
fstpt
nop
adc
test
fwait
push
mov
mov
sti
fwait
movsl
push
mov
mov
jbe
ja
into
stc
dec
pop
insl
jl
stos
xchg
push
dec
mov
adc
inc
cmpsb
or
out
into
mov
fsubs
imul
fldt
xchg
in
cmp
call
popf
and
insl
out
adcb
mov
sub
xchg
scas
inc
mov
xchg
iret
mov
mov
mov
in
pop
adc
push
insl
push
int
jge
or
leave
push
or
sbb
lea
xor
divl
push
ja
in
pop
int3
imul
push
push
je
icebp
movsb
mov
sub
mov
ficoms
push
fistpll
lods
jbe
sbb
xchg
jecxz
cmpsb
call
aad
sub
dec
js
cld
in
fidivrs
in
ljmp
mov
ss
movsb
stos
dec
enter
xchg
sub
mov
xchg
cmpsb
arpl
aad
outsl
xor
pop
mov
psubsb
mov
mov
or
shlb
pop
mov
and
mov
aam
mov
ds
outsb
pop
insb
repz
into
lods
xchg
loopne
push
xchg
imul
dec
and
jbe
or
sbb
out
xchg
dec
xorb
sub
cmpsl
fildl
cmpsl
and
cmp
mov
push
jl
or
cmpsb
mov
and
mov
shlb
mov
je
mov
subl
dec
movsl
and
and
dec
rolb
lods
mov
ljmp
xor
inc
pop
sub
inc
cwtl
push
daa
cmp
cs
rol
cmp
rcrl
cmpsb
inc
mov
jne
cmc
dec
pop
ja
fwait
loope
add
les
ret
in
inc
pop
aas
or
test
cmc
add
xor
add
stos
fdivrl
push
jae
lahf
cmp
mov
sbb
adc
arpl
mov
cltd
lret
xor
aaa
roll
ljmp
lock
dec
fldt
and
mov
and
push
mov
mov
jae
insb
cli
xchg
aad
in
stos
jae
sbb
mov
jle
repz
out
add
sub
imul
cs
fs
shr
ds
pop
mov
xor
inc
pop
iret
rorb
outsl
mov
aam
jns
call
test
mov
jp
lods
fldt
test
add
popa
adc
mov
cs
push
fs
add
stos
xor
test
xor
xchg
enter
out
mov
lds
lock
stc
add
ss
cmp
mov
add
fisubl
pop
xchg
sub
xor
loop
sbb
xor
xchg
adcl
in
inc
ja
das
ljmp
ds
or
ficompl
call
pop
nop
jnp
adc
nop
adc
test
std
lahf
gs
or
bound
jae
jl
es
pop
test
jl
mull
adc
bound
sub
dec
or
outsl
stos
cmc
lock
mov
adc
push
mov
rorl
and
sbb
xor
movsl
sub
out
xchg
stos
cmc
mov
out
sbb
sbb
mov
fmuls
add
jae
movsl
stos
dec
inc
movsl
adc
push
bound
nop
loope
test
std
mov
adc
add
mov
neg
popf
push
sub
sub
adc
and
lret
lret
jg
adc
inc
mov
dec
push
cmc
cmp
xor
fisubrs
or
or
xlat
jecxz
popa
mov
jmp
fnstsw
jmp
mov
pop
inc
push
fistpll
mov
fistps
stc
and
cmp
dec
jge
adc
jge
iret
cmpsb
les
adc
pop
daa
adc
sbb
inc
cs
shll
adc
inc
mov
in
ljmp
pushf
and
xor
bound
add
iret
mov
cli
jl
xor
xchg
outsl
pop
int
jp
and
mov
mov
push
dec
sub
cmpsl
fsubrs
mov
add
sahf
add
out
cmp
pop
std
jge
and
jns
xor
pop
movsl
fildl
iret
xchg
popa
lcall
jne
pop
outsl
pop
and
pop
mov
pop
cmp
call
fcoml
sbb
jp
adc
jg
pop
mov
sub
dec
jns
mov
mov
into
std
repz
add
sub
xchg
mov
pop
push
fwait
xchg
dec
fucomp
fbld
inc
add
mov
daa
push
outsl
mov
fnsave
repz
lcall
pop
sub
inc
dec
push
jecxz
xor
inc
dec
mov
push
sub
mov
lea
dec
mov
jno
xchg
div
outsl
cmp
lret
dec
sti
fwait
sbb
icebp
loopne
sti
mov
cwtl
xor
stos
cli
sub
popa
jge
push
adc
inc
cltd
mov
push
ret
cmpsb
sbb
add
and
scas
lret
or
sahf
pop
pusha
sbb
pusha
jne
cmpsb
shrl
or
daa
mov
mov
pop
cmp
push
jg
mov
pop
cmp
inc
gs
mov
pop
arpl
xor
pushf
andl
pop
mov
pop
xlat
jmp
insl
fildl
sahf
mov
in
add
mov
cmpsb
sbb
sub
scas
rorl
adcl
jno
mov
push
sarb
mov
xchg
sbb
imul
sbb
test
push
inc
fbld
pop
jb
adc
xchg
lds
xchg
sub
cltd
inc
mov
sub
pop
imul
nop
or
outsb
fidivs
xor
scas
and
in
push
mov
mov
es
std
add
xchg
sub
mov
sahf
dec
pop
call
mov
out
xchg
mov
out
xchg
rcrb
mov
sbb
out
pusha
loope
inc
mov
jp
les
mov
add
pop
or
jmp
jle
arpl
adcl
and
scas
and
inc
inc
adc
mov
cmp
sar
enter
pop
jno
stc
xlat
dec
add
pop
add
lods
sbb
test
icebp
or
push
outsb
xchg
addb
arpl
push
sarb
jbe
or
lret
cmpsl
rcl
mov
jl
shr
and
adc
not
rcll
dec
xchg
pop
jecxz
xor
gs
stos
shrb
in
pcmpeqw
repz
into
xchg
mov
adc
icebp
xchg
cmc
cli
push
cmp
pop
mov
outsl
in
push
out
xlat
add
and
pop
pusha
inc
dec
push
dec
push
leave
xchg
nop
or
js
mov
jmp
cmp
cli
push
pop
or
repnz
push
movsl
mov
mov
mov
in
in
dec
pop
lea
stc
add
test
cmp
sub
cs
xchg
mov
jmp
or
mov
loope
jo
xor
in
out
mov
stos
rorl
adc
xor
dec
jnp
pushf
hlt
mov
andl
hlt
dec
outsl
cmp
fiaddl
pop
sbb
push
loop
loop
loopne
sbb
inc
insb
sahf
sti
cli
les
add
xor
mov
and
fcmovb
popf
adc
inc
xor
jle
loopne
pop
sbb
test
fwait
popa
mov
jecxz
add
roll
push
pop
adc
call
push
jb
and
sti
adc
fsubrs
loop
test
lahf
adc
lret
in
adc
jae
add
clc
sti
sub
in
inc
pushf
and
add
pop
lods
or
fstpl
dec
xorl
pop
sub
inc
push
in
faddp
xor
adc
ljmp
fdivr
xchg
xor
cmp
decb
push
out
or
cmp
mov
push
outsb
dec
jmp
repnz
mov
icebp
sub
mov
push
inc
xor
adc
adc
add
mov
enter
jno
out
imul
cs
mov
lahf
and
mov
fwait
mov
pop
ja
push
mov
xor
xor
push
insb
xchg
mov
enter
cmp
sbb
or
sub
nop
mov
and
idiv
pop
loope
mov
outsl
cmp
dec
std
cmpsb
cmpb
mov
xchg
mov
add
rcrl
xchg
cmp
sti
lods
xchg
out
jne
test
or
in
lret
inc
adc
daa
xor
mov
jns
dec
js
inc
mov
and
or
pushf
pop
into
jae
push
push
mov
xor
imul
mov
shlb
movsb
xor
adc
insb
fadd
mov
aam
int
inc
mov
test
stc
jge
mov
fs
pusha
xor
inc
outsl
adcb
xchg
cmpsl
pop
adc
inc
mov
dec
rol
jecxz
in
sahf
stc
mov
enter
orl
lock
rorb
cwtl
sbb
stos
dec
imul
scas
stc
or
or
scas
lock
lods
xor
dec
mov
ja
jnp
shlb
and
enter
cmp
xchg
pop
fcomps
cmpsl
je
int3
xor
pop
test
push
adc
mov
add
jge
and
repz
jge
roll
xlat
xlat
das
sbb
adc
cmc
pop
aaa
out
pushl
paddw
ret
pop
dec
repnz
sbb
fldt
es
mov
and
bound
cmp
sub
jnp
daa
xor
push
insl
out
outsb
jbe
std
in
fmull
shlb
add
inc
fsubp
lahf
jg
push
rorl
ss
aam
fdivl
xchg
iret
lods
pop
jmp
push
sbb
loope
jbe
in
cs
pop
pop
popa
pushf
test
fsubs
scas
and
xchg
pop
gs
xchg
jg
push
sub
cmp
mov
scas
dec
icebp
jp
stc
push
mov
leave
xlat
cld
mov
and
pop
in
and
dec
es
fisttpll
jmp
or
mov
ret
icebp
testl
ret
pop
push
stos
cli
idiv
push
data16
or
hlt
out
jmp
movsbl
jb
ret
push
jae
jg
inc
aad
cwtl
lea
cli
dec
pop
loopne
aas
inc
mov
and
les
add
sub
inc
push
dec
fldcw
imul
in
out
ds
cmpsl
mov
cmp
sbb
enter
fmulp
or
sub
dec
stc
cmpsb
lds
repz
cmc
push
or
xor
push
sbb
cmp
and
adcb
outsb
pusha
xor
pop
pop
inc
icebp
shrl
xchg
in
dec
push
jns
sarb
push
mov
sub
dec
ret
xchg
fists
add
test
daa
div
lods
cmp
shrb
imul
je
movsl
adc
rclb
pusha
imul
mov
push
sub
xor
aas
stc
repz
fwait
xchg
pop
inc
test
rcr
and
orb
sbb
lods
jae
adc
nop
cmp
in
xchg
les
mov
sbb
test
ss
out
mov
push
xchg
aas
pusha
sbb
jne
adc
mov
pop
fldt
ja
inc
push
cmpsl
jmp
bound
jmp
mov
shll
int
scas
or
lcall
jbe
scas
xor
ss
mov
imul
cli
cmp
rcll
shll
and
or
cwtl
jle
push
nop
pop
js,pn
out
cmp
jnp
push
in
mov
andl
mov
addr16
cwtl
cli
mov
out
rorb
lret
pop
mov
mov
repz
je
xchg
js
sarl
and
cmp
inc
stos
stc
bound
stc
pop
mov
ljmp
mov
adc
mov
out
insl
dec
dec
mov
and
add
sub
mov
aam
adc
fisttpll
icebp
push
ret
pop
lds
pop
or
mov
pop
bound
jmp
adc
push
mov
lock
ss
rorl
pushf
or
mov
mov
hlt
push
push
outsl
nop
lods
aaa
or
mov
lret
adc
pop
ljmp
sbb
mov
mov
inc
jl
mov
add
out
jg
fs
cld
sub
cmp
notl
js
dec
in
hlt
add
popf
pop
cs
ret
cmpsb
les
adc
sbb
fiaddl
popf
jno
sub
adc
lods
mov
dec
sbb
lods
cmp
and
jl
hlt
jb
adc
ret
lock
les
cmpsl
aam
addr16
or
call
jb
filds
jp
shrl
insb
dec
cwtl
cwtl
out
nop
scas
or
jecxz
call
mov
ret
push
icebp
push
call
and
ljmp
fxtract
loopne
cmp
into
ror
or
push
and
push
pop
mov
pop
jmp
or
stos
xlat
or
clc
adcb
mov
inc
push
adc
inc
adc
cmp
jmp
mov
mov
test
jb
jmp
jo
js
call
inc
inc
xchg
adcl
xchg
sbb
dec
sarl
int3
or
mull
lret
mov
xor
call
in
dec
pop
jb
sub
out
call
adc
or
mov
or
mov
ficomps
xlat
adc
mov
lret
or
pop
ds
daa
mov
fwait
mov
inc
sbb
out
negb
fadd
pop
jnp
inc
fdivs
aas
dec
sbb
rorl
mov
notb
cmp
mov
xor
ret
push
xchg
cmpsl
jno
jge
repz
xor
mov
xchg
mov
lock
cltd
js
rol
fists
inc
add
or
in
or
jg
jbe
mov
fwait
mov
repz
dec
pop
dec
arpl
leave
loopne
sub
aas
in
jmp
push
cmp
add
in
pop
push
ficompl
push
fwait
cltd
sub
arpl
ss
add
arpl
je
fsubl
pusha
cld
cmc
push
add
test
iret
xor
andl
rcll
repz
fldl
jb
rorl
and
fcmovnu
cmpsl
or
dec
add
in
add
jge
mov
daa
lods
jp
mov
push
fsubrp
mov
dec
jle
stos
pop
dec
popf
ljmp
lds
pop
jno
out
jle
pop
aam
imul
popl
push
mov
dec
and
fsubrp
leave
loopne
rorl
add
push
fxch
xor
rcrl
ret
inc
xor
pop
inc
adc
ficomps
fbstp
lret
jb
mov
subb
pop
mov
mov
int3
aaa
adc
ret
jmp
inc
lds
outsl
jl
or
add
push
pop
rolb
mov
lods
cmpsb
test
jo
std
repz
ljmp
mov
add
aas
push
xchg
and
jbe
or
cmc
imul
xchg
cwtl
sbb
je
jl
bound
mov
xchg
cmp
mov
int
insl
insl
push
sbb
inc
out
xchg
pop
cli
and
int
stc
add
sti
aad
data16
push
push
fldl
add
pop
xchg
insl
mov
adc
fcomi
cmp
jno
pushf
imul
aam
sbb
negl
sub
mov
fwait
cltd
mov
push
sbb
dec
mov
les
cmp
out
out
xlat
rcll
pop
mov
jb
stos
xchg
pushf
sub
mov
sub
cs
decl
inc
mov
ds
insl
sahf
outsl
jmp
adc
das
mov
jl
scas
jns
jp
ficomps
icebp
lret
lods
popf
adc
lret
je
cmp
repz
roll
push
add
inc
and
fwait
inc
jge
mov
fld
hlt
fsts
fs
jne
mov
scas
in
mov
cs
ret
out
inc
imul
lds
xchg
int
ficoms
out
js
test
aam
xor
dec
dec
adc
shrb
mov
dec
rorl
out
or
xchg
dec
daa
xor
rcrb
sbb
xchg
push
out
or
inc
mov
cltd
mov
loope
inc
std
test
enter
sub
bound
mov
add
mov
mov
cmp
xchg
mov
popf
sub
rclb
pop
and
in
loopne
sbb
push
popa
dec
test
adc
add
out
xor
out
xor
mov
cwtl
mov
dec
ret
gs
inc
int
xor
mov
shl
imul
lock
dec
jle
ret
cs
push
mov
add
inc
xchg
in
pop
lahf
jns
sbb
iret
xchg
or
movb
int3
cld
out
lods
js
or
mov
xor
or
adc
dec
test
adc
bound
pop
mov
pop
sbb
addr16
outsb
lods
add
es
push
lock
lret
dec
insb
add
dec
das
aas
adc
sbb
ds
add
dec
xchg
mov
xchg
aas
es
sub
lret
xchg
add
adc
pop
out
out
aad
inc
dec
pop
cmp
push
xchg
push
add
das
pusha
jmp
cld
or
push
xchg
addb
out
cmp
sbb
push
jo
fisubrs
faddl
mov
testb
cs
mov
test
icebp
add
repz
dec
ss
call
adc
jmp
sti
int3
xor
mov
sub
jmp
mov
daa
daa
popf
mov
mov
push
arpl
or
int
xchg
xor
dec
mov
sbb
jnp
mov
insl
fnsave
fldcw
jbe
stos
aaa
outsl
mov
loopne
push
xchg
inc
stc
push
sbb
rcrl
push
and
aam
jecxz
lret
jnp
shl
pop
sub
test
stos
call
mov
or
or
test
xchg
shr
push
dec
pop
jl
stos
mov
mov
jl
in
ja
mov
pop
pop
add
mov
div
mov
sub
lret
cltd
mov
scas
push
aas
mov
jle
fsubs
lahf
xchg
mov
push
les
jp
lea
sub
daa
adc
mov
pop
out
cs
pop
ds
in
in
mov
insb
push
pop
lret
inc
fidivs
int3
xchg
lret
fistps
xor
insb
pop
shll
or
mov
adc
add
or
incb
jae
neg
aaa
xchg
inc
movsl
lcall
out
xchg
xchg
mov
mov
lret
sbb
movsb
inc
jge
mov
xlat
aaa
imul
repnz
push
cltd
vmovaps
xor
sub
stos
in
jecxz
jo
jb
rol
sub
rcrb
lods
andl
mov
or
out
outsl
testl
or
aad
insl
xchg
jne
mov
pop
ror
movsb
cltd
mov
xchg
insl
nop
hlt
cmp
push
leave
rorl
jne
or
xchg
jns
xchg
push
pushf
out
pushf
jp
psubq
lahf
je
adc
cltd
push
xor
aas
inc
push
outsl
push
add
js
jnp
xor
cmp
scas
jl
cmpsb
popa
jge
mov
push
mov
xor
inc
mov
inc
jl
xchg
ds
pop
pop
cli
jo
mov
pusha
mov
adc
adc
repnz
fwait
or
scas
inc
cmpsl
shl
jp
int3
push
or
cmpsl
scas
loop
cs
mov
mov
repnz
mov
imul
inc
mov
add
jbe
sbb
inc
add
or
cmpsb
jg
jp
dec
adc
push
cmp
xchg
test
xchg
add
lods
mov
add
mov
push
adc
jno
xchg
dec
pushf
jg
or
call
mov
dec
pop
push
ja
and
sbb
int
mov
inc
dec
mov
mov
adc
inc
int3
sahf
xor
pop
lock
push
pop
loope
or
mov
jp
sbb
dec
or
mov
gs
mov
sub
dec
loopne
daa
xchg
addr16
mov
ljmp
addb
jbe
sti
data16
rcll
ret
sub
mov
int3
icebp
push
sub
mov
and
shll
out
sar
or
sbb
xchg
lods
cmp
pop
movsb
jae
rorb
test
sub
mov
cmpsl
roll
xchg
xor
loope
inc
push
loope
mov
sbb
mov
or
mov
popa
shlb
shrb
loopne
mov
lcall
jg
hlt
xchg
fstpt
cmp
jb
and
mov
xchg
lds
hlt
enter
imul
popf
fcmovne
jg
xchg
dec
xchg
push
js
je
cmp
cmpsl
dec
ja
and
sbb
sti
jbe
roll
ret
mov
pop
cmp
in
rol
xor
leave
sub
xchg
pop
in
push
xlat
pop
cmp
mov
push
daa
pop
hlt
push
popa
ret
bound
in
movsl
movsl
arpl
mov
jno,pn
outsb
cld
or
push
ljmp
ljmp
into
test
jnp
rolb
xchg
notb
repz
aas
stos
aam
xchg
popa
adc
xor
pushf
jmp
popf
cmovge
jbe
mov
dec
js
mov
icebp
ret
mov
mov
fs
or
sbb
and
xchg
mov
mov
adc
fisubl
imul
mov
in
and
scas
dec
addb
pop
int3
cmp
pop
push
xor
stos
or
scas
add
jle
dec
sub
adcb
jmp
cld
lds
daa
adc
adc
push
and
fidivrs
or
iret
ss
add
adc
xchg
in
int
jns
es
mov
test
fsubrl
fcomps
jnp
test
rorl
fstl
sub
or
lds
les
scas
sbb
xor
sub
mov
cwtl
cmc
repnz
into
push
not
pop
jnp
push
cmp
jle
dec
leave
xor
sub
std
add
cmp
mov
imul
pop
mov
cwtl
or
and
test
ds
cmp
mov
neg
xchg
add
ds
inc
repz
cmc
jl
ds
xchg
out
xchg
popf
out
and
dec
pop
shlb
adc
push
test
xchg
mov
inc
lret
addl
nop
ss
rolb
sbb
ljmp
cwtl
sti
sar
cmp
sbb
adc
adc
or
int3
adc
mov
lods
sub
stos
pop
int
cmp
adc
decl
cmp
inc
fmuls
mov
out
push
popf
mov
cld
in
mov
dec
lret
rcll
loop
sbb
xchg
jge
inc
xor
and
mov
dec
enter
dec
push
outsl
jmp
sub
outsb
lcall
ljmp
int
cmc
mov
sahf
and
je
sbb
xchg
lea
jnp
jne
push
jns
xchg
jl
jne
xchg
xchg
pop
daa
stos
mov
sbbl
fs
imul
push
add
cmp
pushf
add
roll
or
sub
jg
xchg
sbb
jb
inc
insl
in
lods
leave
sarb
in
xchg
pop
and
mov
mov
lods
cmp
icebp
ljmp
movntps
inc
enter
add
and
pop
ss
and
mov
jns
pop
sub
or
sti
insb
push
lea
mov
movsl
pop
xor
mov
out
jnp
xchg
arpl
jl
into
dec
pop
push
adc
scas
imul
xor
and
mov
pop
nop
in
scas
pop
or
cmpsl
rcrl
pop
hlt
cmp
cmc
and
xor
icebp
jo
push
outsb
xor
cwtl
xor
sub
push
xchg
sub
mov
mov
in
das
mov
jae
cmp
outsl
cmp
jg
insl
out
fs
mov
sub
inc
test
in
iret
lds
and
add
or
sbb
or
dec
sub
arpl
sbb
and
test
xorl
jb
inc
jbe
push
xor
iret
cmp
sbb
stc
loope
in
cmp
test
ficoms
pop
dec
xchg
in
stc
ret
out
push
les
lods
cmp
xor
mov
aam
add
push
imul
jae
cmpsb
jo
and
test
mov
dec
fxch
push
jnp
mov
sub
xchg
imul
push
jno
adcb
loopne
dec
cld
pusha
ds
cmp
pop
jb
hlt
aam
and
mov
in
stos
fstpt
dec
inc
shl
enter
mov
push
add
in
stos
xchg
mov
clc
xchg
ja
add
sbb
rcrl
mov
stos
xchg
lds
lahf
aas
pop
adc
cmp
mov
mov
mov
popf
cmp
inc
pop
std
inc
xor
popf
cmc
test
sub
cmpb
cmpsb
mov
out
mov
pop
shlb
push
pop
dec
les
repnz
negl
sahf
ds
sub
lret
jne
pusha
mov
pop
cmpsb
scas
lret
push
cmp
aam
xor
gs
cmp
mov
xor
loopne
test
scas
sbb
cli
push
adc
sub
popl
sub
insl
mov
into
or
pop
xchg
xor
xchg
xchg
xchg
and
mov
ficoms
insl
jne
loopne
xor
jo
jmp
sbb
sub
xchg
adc
ja
add
push
sbb
xchg
pop
sahf
mov
stc
jle
xchg
sarb
or
mull
shlb
jbe
and
les
and
sbb
xlat
pop
enter
dec
push
mov
and
sbb
adc
nop
sbb
dec
je
mov
fxch
iret
test
mov
into
jg
xchg
mov
xchg
fstpt
ret
cld
and
and
mov
gs
jmp
pop
inc
ds
dec
sbb
outsl
int3
or
xor
jbe
adc
negb
cmp
mov
sti
addr16
xchg
fsubrl
jo
xchg
outsl
inc
nop
mov
and
and
fnstcw
mov
loop
cmp
daa
pop
cltd
sbb
lds
xchg
dec
pop
add
jbe
push
lds
adc
les
cltd
jmp
or
or
sbb
push
mov
mov
pop
xor
rorl
jp
xor
fucomp
xorl
and
fbstp
in
cli
stc
xor
xor
xor
idivl
mov
stc
inc
lret
mov
cmc
xchg
out
outsl
xor
or
in
popf
in
sub
push
jge
mov
lods
daa
mov
scas
data16
adc
fs
pop
add
int
mov
outsl
cmc
nop
or
out
in
mov
xchg
dec
push
lods
das
cmp
push
in
or
jg
loop
push
dec
xchg
xchg
sub
mov
in
xor
es
xor
and
lods
or
imul
cmp
stos
faddp
adc
call
sbb
sbb
sbb
sti
int3
repz
lock
stos
fildl
dec
dec
in
mov
mov
or
push
mov
in
mov
jle
aad
andb
dec
mov
aad
mov
push
cmc
sub
jb
out
lret
fmull
sbb
push
push
cmp
adc
aam
adc
std
popf
inc
sub
cli
push
jecxz
xchg
lcall
ljmp
loop
sti
mov
call
rclb
sbb
fnsave
sbb
bound
sub
mov
xchg
aaa
adc
les
xor
std
fwait
sti
outsl
imul
in
jecxz
xchg
arpl
stos
imul
shl
xchg
push
push
lods
in
lahf
fs
push
mov
hlt
popf
sar
xor
or
sbb
lods
inc
js
mov
cmc
and
mov
mov
inc
bswap
sbb
mov
push
xlat
pop
cmp
pop
inc
je
or
adc
jge
jge
xchg
pop
into
dec
cli
fsubs
mov
mov
inc
insl
fmuls
addr16
xrelease
adc
dec
arpl
lods
aam
adc
es
sub
out
adc
jp
lods
les
into
mov
aaa
jb
jne
xlat
test
ret
hlt
jne
iret
jnp
pop
shlb
and
xor
or
xchg
pop
inc
or
adc
mov
daa
out
inc
arpl
arpl
mov
xchg
sub
mov
in
or
xchg
loop
out
stos
lods
sarb
push
cmp
nop
es
add
movsb
dec
mov
sbbl
test
sub
or
mov
sub
mov
mov
add
inc
test
nop
popa
dec
mov
dec
ror
ftst
inc
outsb
sub
loop
pop
sub
cmpb
cmp
andb
outsb
jge
inc
cmpsl
push
adc
mov
int
stos
lods
insb
ja
out
xor
inc
repz
out
mov
je
add
cmpl
dec
add
cld
outsb
xor
fcoms
clc
jecxz
pop
lds
pop
mov
sbb
in
mov
or
rcll
add
jns
xchg
pop
xor
loope
jns
jne
lds
sub
rcrl
dec
jecxz
pop
and
lods
hlt
jns
push
pop
inc
sub
push
and
stc
xchg
test
cmp
mov
push
cmc
add
dec
dec
mov
adcb
mov
xchg
inc
orb
cld
pop
js
mov
fcmovb
push
loop
insb
push
adc
push
pop
lods
mov
xchg
inc
ja
mov
cmpl
or
sbb
out
jns
lods
out
divb
ficomps
cmp
sub
cmpb
popf
or
call
xchg
mov
fwait
inc
xchg
hlt
add
push
ret
cmp
cmp
mov
mov
add
cmp
adc
push
inc
add
into
fildll
stos
pop
sti
jo
aad
lret
inc
adc
inc
cmovge
pushf
sbb
mov
movsl
sbb
sbb
and
mov
in
mov
push
add
shrl
ret
test
mov
lds
push
pop
add
outsl
push
fninit
pop
and
jmp
hlt
xchg
out
aaa
push
test
or
jo
dec
push
jge
mov
and
add
cltd
ss
das
and
push
clc
popf
data16
jl
cli
icebp
push
cli
loope
push
aas
inc
sbb
test
push
mov
es
leave
in
mov
xchg
dec
dec
cltd
xchg
call
fldl
push
xchg
dec
push
idiv
cld
stos
sub
hlt
or
push
xor
int
lock
push
push
fiadds
mov
push
add
insb
in
adc
rcll
cmp
fidivl
aam
pushf
push
insb
pop
lcall
push
xor
rorl
bound
mov
call
cwtl
fdivs
fstpl
enter
mov
xchg
inc
mov
pop
push
mov
inc
dec
stos
hlt
neg
dec
mov
shrl
imul
dec
shrb
mov
dec
out
cmp
ljmp
shlb
inc
daa
lock
sahf
jns
mov
add
rcl
fs
jbe
adc
mov
mov
xor
pop
lock
stos
pop
movsb
daa
adc
mov
fimull
dec
mov
les
sarl
movsl
cltd
incl
out
cmp
stos
cmc
int3
in
jbe
inc
daa
cwtl
inc
stc
movsl
pop
lret
or
cwtl
lret
enter
ds
rorl
test
push
jmp
and
push
rcrb
jae
sub
es
sarb
mov
jl
test
sbb
xor
add
aaa
xlat
lret
or
add
and
cmc
fstpl
or
loop
xchg
mov
push
sub
add
and
sarb
fwait
das
mov
sbb
or
notb
mov
pusha
fldl
cmc
fcompl
adc
shll
or
mov
repnz
xchg
int
xor
aad
add
sbb
mov
add
aad
cmpsl
outsb
mov
xchg
lods
sbb
mov
cmp
push
cmp
push
pop
iret
xchg
add
lcall
or
es
addr16
outsb
jecxz
fcmove
mov
out
ret
and
pop
rcrb
adc
cmc
shlb
cli
ret
inc
xchg
mov
jmp
xor
imul
inc
fs
imull
or
test
lock
sbb
cmp
inc
idivl
push
sbb
adc
dec
lea
adc
add
or
jl
popl
inc
jecxz
fistpl
cmp
jbe
pop
mov
pop
rclb
adcl
cld
stos
iret
movl
dec
and
xor
nop
push
adc
lock
iret
int3
test
cmp
mov
and
iret
mov
jnp
jp
insb
mov
xchg
scas
lret
rcrb
ds
and
add
dec
aam
inc
rdtsc
lock
call
cwtl
fisubrs
aaa
push
loopne
out
fldt
mov
add
js
mov
sub
xchg
andl
push
test
sub
pop
addb
xchg
mov
pop
les
aad
out
push
sbb
jno
movsl
jp
xchg
enter
xor
pop
mov
test
imul
push
and
in
xor
sub
sbb
shl
icebp
sysexit
add
mov
jno
stos
lds
lock
mov
dec
push
xor
or
movsl
ja
add
subl
jle
inc
xor
sub
inc
adc
jns
addr16
out
iret
popf
lcall
pop
jmp
cmp
inc
lret
xchg
cltd
pop
mov
sbb
mov
sbb
dec
imul
cmpsl
mov
add
xlat
mov
jns
add
mov
mov
dec
mov
mov
outsb
sbb
jp
iret
out
jnp
scas
push
xor
lock
into
ljmpw
sub
jae
shr
shr
xchg
popa
rcrb
sar
jmp
into
int3
sbb
add
push
test
adc
enter
test
dec
xchg
jle
lret
xchg
mov
jbe
sahf
add
jns
push
pop
sti
stos
mov
rcrl
dec
adc
gs
sbb
adc
out
cmp
or
call
pop
popf
push
adc
arpl
test
sub
push
mov
lods
dec
mov
shrb
mov
adc
inc
jo
inc
cmp
cmp
addr16
stos
mov
mov
ljmp
mov
fistps
add
ret
xchg
mov
push
mov
sbb
dec
fiaddl
mov
add
pop
fmul
fists
cli
mov
sbb
mov
scas
imul
xchg
test
arpl
or
mov
pushf
les
mov
inc
sub
adc
mov
fimull
sub
push
in
inc
mov
insb
std
enter
or
push
stos
jnp
lods
gs
and
int
mov
xlat
xchg
mov
mov
adc
pop
mov
js
scas
pop
jmp
or
push
les
fdivl
imul
or
mov
daa
loop
mov
mov
insb
lret
popf
loop
fidivrs
rcrb
clc
insb
js
out
jb
in
ss
mov
je
call
jg
mov
push
sub
mov
in
std
push
push
ror
push
add
dec
inc
inc
sub
outsb
push
icebp
es
in
pop
ds
jns
jbe
stos
sbb
dec
push
jb
mov
ss
xchg
xchg
mov
in
inc
xchg
push
mov
jns
push
test
test
mov
ffreep
cmp
scas
pop
repz
insb
mov
cltd
jb
mov
mov
sbb
clc
xor
je
rcr
rcrb
sub
push
fcompl
arpl
or
sub
mov
pop
aaa
test
mov
aas
scas
mov
pextrw
xchg
adc
cld
jmp
frstor
dec
pop
and
dec
adc
lret
daa
pop
push
or
jnp
out
jge
mov
test
jne
dec
frstor
and
int
mov
cltd
add
or
icebp
fstpl
andb
pop
idiv
ss
fs
pop
cmpl
pop
lcall
subb
in
xchg
sti
pushf
imul
int3
sarl
loop
fbstp
adc
sub
sub
psubq
push
jge
mov
mov
dec
mov
push
sub
mov
adc
push
std
sarl
pop
xchg
sbb
lock
out
das
or
cmpsl
fdivl
dec
loope
pop
lahf
aam
stos
in
xor
push
jb
or
pop
and
pop
push
es
or
insb
gs
cld
andb
fimull
pop
jbe
push
lahf
pop
cmp
push
xchg
push
pushf
dec
sahf
dec
imul
cmp
mov
in
mov
mov
fsts
xchg
insl
mov
jmp
mov
mov
adc
sub
enter
into
mov
stos
jo
test
mov
scas
xor
inc
adc
push
mov
fsubp
jae
lods
lret
and
testb
xor
pop
xchg
mov
dec
pop
movsb
xchg
push
rorb
pop
pushl
lea
jne
mov
icebp
out
lret
sbb
mov
in
push
mov
mov
fwait
out
fistpll
push
xor
icebp
push
outsb
arpl
cmp
sarl
ljmp
das
mov
jae
mov
lods
jl
test
icebp
add
mov
outsl
jle
add
arpl
mov
mov
jb
dec
mov
inc
fwait
scas
xchg
cmpsb
leave
jne
scas
mov
clc
pusha
lcall
jno
mov
jbe
ficoml
ds
push
mov
mov
xchg
fnstenv
inc
addr16
jne
inc
pop
xchg
leave
push
into
dec
push
cmp
inc
cltd
mov
pop
imulb
adc
xor
and
pop
stc
dec
lods
dec
cwtl
test
out
aam
add
adc
out
aas
arpl
aad
xchg
call
fs
outsl
push
icebp
jg
push
jl
dec
in
mov
or
adc
push
aas
sub
mov
stos
or
andl
outsb
test
pop
into
stos
xchg
or
mov
add
ljmp
mov
cmp
sub
cmpl
jb
push
adc
and
cmp
push
loop
xchg
cmp
sub
insb
fs
inc
insl
mov
cmpb
add
xchg
sar
xlat
inc
orb
add
jmp
imul
inc
xor
and
push
inc
push
dec
or
xchg
pop
in
aas
addr16
add
pop
xchg
sbb
in
push
or
pop
sbb
cs
not
and
lret
inc
inc
out
rcrl
sbb
cs
into
xor
push
dec
cmp
out
cmc
mov
fmull
adc
lods
push
sbb
ds
add
inc
push
xchg
fnstcw
xchg
xor
loopne
jae
sbb
inc
inc
nop
mov
jecxz
out
jnp
xchg
jns
xor
cltd
rorl
mov
fs
negl
pop
jmp
and
fnstsw
pop
sti
mov
imul
jns
cwtl
mov
aas
subl
sahf
in
call
stos
ljmp
dec
sarl
cld
cmp
adc
pop
js
inc
or
iret
test
sub
cwtl
cmp
in
fisttpl
mov
nop
rorl
movsb
xchg
xor
ret
sbb
jno
cmp
xchg
popa
cmp
mov
outsl
pusha
daa
inc
lock
lret
sbb
ficoms
stc
in
pop
xchg
hlt
.byte
in
cli
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
clc
shll
aaa
movsb
or
push
das
cmp
sbb
or
add
daa
aam
jb
inc
jns
pop
insb
xor
pop
add
push
mov
pop
mov
mov
mov
mov
add
add
add
jp
mov
xor
mov
mov
sub
mov
add
and
sub
jne
jp
mov
jmp
iret
pop
gs
dec
loope
hlt
sbb
fidivrs
add
and
lds
incl
nop
mov
lret
test
cmpsw
push
std
repnz
cmp
push
in
pop
fs
jbe
lds
xchg
mov
adc
dec
cmc
test
or
pop
jbe
loope
out
negl
jbe
gs
jbe
bound
xchg
cmp
pop
insl
out
adc
mov
xor
pop
jno
pop
rcr
xchg
dec
clc
cmc
mov
nop
cmc
pop
xchg
int3
jae
mov
jmp
jnp
hlt
pop
lods
mov
flds
mov
hlt
stc
or
xor
popa
stc
dec
push
pop
jbe
inc
sahf
jo
aas
jle
xor
movsb
out
mov
or
divb
xor
push
ja
cltd
pop
sti
cmp
ljmp
in
mov
cmp
outsl
loopne
pop
mov
adc
jns
lcall
insl
leave
call
mov
or
jg
push
pop
call
pop
xlat
aaa
jno
mov
aam
popa
loopne
mov
jle
cmpsb
xchg
pop
in
mov
mov
sub
jge
sarl
pop
jnp
fimull
add
jmp
cmc
add
jmp
es
dec
shl
gs
add
jmp
jno
add
mov
adcb
add
inc
cld
inc
push
or
stos
mov
push
xchg
lods
andl
lret
fwait
outsb
pop
out
les
cli
mov
stos
adcl
or
arpl
sti
cmp
inc
pop
fidivs
inc
cmp
in
mov
imul
fisubs
nop
mov
mov
mov
xchg
repnz
inc
or
std
clc
icebp
pop
cmpsl
ds
pop
xchg
shll
lock
xor
aas
popl
push
addr16
call
mov
or
mov
add
push
or
cs
mov
mov
popf
movsl
inc
out
add
outsl
dec
stc
rdtsc
push
jmp
outsl
nop
add
lods
pop
xchg
imul
test
and
dec
loop
jge
sub
jae
add
arpl
cmp
cmpsl
mov
test
cmp
cld
mov
push
adc
andl
arpl
int
fs
xchg
insl
sbb
test
or
jle
roll
push
mov
cmpsb
vcmpps
cmpsb
in
mov
sub
test
addr16
sub
int
jmp
lock
mov
insb
add
xchg
and
mov
mov
ljmp
rcrb
cmpsb
sahf
out
or
cmpsl
adc
mov
xchg
movsb
add
sub
cmp
add
or
jno
add
xor
sub
push
inc
lcall
stos
les
imul
sbb
popf
hlt
roll
outsl
int3
out
jecxz
push
jno
stos
and
insb
push
sbb
mov
xchg
and
jno
and
or
jne
jmp
xchg
pusha
sub
jmp
sbb
insb
pop
and
jno
dec
fldt
lahf
and
jno
jmp
pop
jno
shrl
icebp
cmovnp
cmp
jmp
imul
andb
sub
sbb
or
jo
and
jb
inc
pop
jno
push
rorb
arpl
jb
andl
pop
jno
push
sbb
xchg
mov
sbb
or
or
hlt
jge
mov
xchg
sbb
adc
jno
stc
leave
xor
rorb
jno
mov
pop
jno
mov
lds
cmp
jno
and
jge
sbb
mov
dec
sbb
inc
adc
lret
outsb
mov
mov
pop
mov
jg
mov
mov
sbb
fldenv
lcall
mov
xor
mov
jno
push
lcall
lret
ret
int3
xchg
and
sub
xchg
mov
adc
jno
rcll
div
lret
pop
popf
jle
mov
jno
stc
leave
xor
ja
jno
mov
pop
popf
xchg
and
sub
cltd
out
adc
and
jno
push
sbb
xchg
ret
xchg
and
xchg
and
xor
and
jno
lret
sarb
lret
xchg
test
dec
mov
sbb
pushf
add
jecxz
and
lcall
inc
mov
jg
jne
add
jecxz
mov
jae
sbb
dec
stc
rolb
lods
pusha
push
mov
mov
loop
inc
add
mov
pop
scas
into
mov
jg
jne
add
jecxz
inc
fldt
aaa
xchg
mov
cli
adc
jno
push
add
mov
pop
scas
into
mov
jg
jne
add
jecxz
push
jmp
leave
push
inc
sbb
push
add
mov
pop
scas
into
mov
jle
jne
add
jecxz
push
jmp
lods
jmp
sbb
push
adc
in
or
and
mov
mov
loop
inc
add
mov
pop
scas
into
xchg
stos
iret
and
xchg
and
jno
inc
pop
iret
fadds
rorl
sbb
adcl
mov
xchg
xchg
lret
sbb
sarl
mov
inc
lcall
movsb
mov
xchg
xchg
cli
cmp
outsl
shrb
xchg
lret
inc
mov
xchg
and
aam
and
addr16
hlt
add
leave
and
and
mov
adc
cmp
mov
jb
and
jno
push
cld
jno
and
lcall
sbb
push
sbb
call
push
jo
xor
jno
lret
pop
xchg
jle
lahf
add
and
push
adc
push
jecxz
xchg
test
jecxz
pop
xchg
divb
xchg
daa
jb
lods
test
movsl
push
jb
cmp
mov
cmp
daa
gs
push
negb
xor
in
fldt
xorl
mov
and
xchg
fcomp
xchg
mov
ret
clc
pop
lods
cmc
daa
pop
fcmovnu
push
data16
les
scas
std
sub
sbb
call
xchg
and
jno
and
jno
and
jno
and
jno
and
jno
and
jno
inc
or
stc
xchg
jno
or
jno
loopne
jno
and
jno
and
mov
sub
mov
sbb
and
jno
xor
loop
and
jno
and
jno
and
jno
and
jno
stc
stos
pop
cld
cmp
sub
aam
mov
pop
adc
test
pop
lds
test
mov
das
mov
ret
push
and
cmp
fbld
adc
mov
insb
xor
call
jae
clc
rcrb
adc
pop
mov
mov
mov
stc
jecxz
jmp
inc
mov
popa
inc
pop
mov
add
sbb
call
jle
test
inc
xchg
sbb
in
js
mov
test
push
aad
adc
xor
adc
out
mov
mov
leave
ficomps
test
das
inc
repz
cmp
lds
testb
jb
sbb
je
jecxz
sahf
add
js
dec
out
mov
mov
mov
push
cmp
adc
or
test
sti
xchg
sbb
push
and
fsubrs
or
pop
js
or
fidivs
ffree
xlat
mov
mov
jl
inc
rorb
pusha
lret
pop
cmp
mov
popa
das
cmp
ss
mov
and
popf
aam
test
and
dec
pop
sbb
mov
sbb
adcl
nop
fmuls
ljmp
or
out
lock
clc
addr16
outsb
test
cwtl
outsb
jle
repz
cmc
int
add
mov
lods
adc
pop
mov
and
and
add
jge
inc
jb
call
fmul
sub
lret
leave
aas
fdivrs
ficoml
ret
in
sub
lret
icebp
push
hlt
out
sub
xchg
cld
fs
shlb
lods
mov
sub
popa
ficomps
mov
sub
pop
xchg
xor
and
test
pop
and
andb
imul
inc
dec
mov
jne
or
or
shlb
push
pop
inc
es
push
arpl
adcl
daa
fwait
adc
andb
shlw
cmpsb
mov
xor
sahf
lods
repnz
push
push
insb
pop
loope
xchg
cwtl
cmp
repz
xlat
hlt
mov
xor
sub
in
xor
ss
mov
scas
sbb
repnz
add
mov
insl
cmpsl
jle
add
mov
cmp
adc
inc
in
push
icebp
outsl
jmp
inc
mov
add
stos
sbb
in
cmp
gs
sub
es
xor
pop
sbb
add
loopw
or
mov
dec
inc
out
and
add
add
add
orb
orb
das
dec
add
nop
dec
add
dec
adc
cmp
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
dec
adc
hlt
dec
adc
je
adc
adc
add
dec
adc
mov
add
dec
adc
fwait
dec
adc
sub
add
dec
adc
scas
dec
adc
cmp
add
adc
enter
dec
dec
adc
rorl
add
adc
fisttps
add
adc
jmp
dec
adc
testb
push
add
add
dec
adc
jo
adc
popa
fs
jo
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
insl
fs
xor
cs
insb
add
imul
insb
add
xor
cs
insb
add
gs
jne
xor
cs
insb
add
gs
insb
xor
cs
insb
add
gs
xor
fs
insb
add
jb
imul
add
outsb
insl
insl
cs
insb
add
mov
imull
gs
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
adc
add
add
xchg
add
add
add
add
add
add
add
add
add
dec
adc
add
add
rorb
add
add
add
dec
adc
add
add
add
adc
add
add
sbb
add
add
add
dec
adc
add
add
cmp
add
add
add
adc
add
add
add
push
gs
insb
outsl
jae
dec
gs
add
dec
insl
popa
addr16
imul
add
add
je
jo
outsb
inc
imul
add
add
je
insb
je
add
dec
jae
jno
popa
insb
inc
push
dec
inc
add
add
gs
jb
popa
jns
jb
popa
je
add
add
je
popa
arpl
jae
arpl
je
fs
arpl
inc
add
add
je
jbe
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
je
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
popa
jns
outsl
jne
fs
add
add
data16
jae
inc
gs
je
jo
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
jbe
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
add
add
xor
xor
popa
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
push
add
data16
add
add
sldt
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
push
add
data16
add
jb
add
push
add
dec
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
add
sbb
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
dec
jb
addr16
pop
mov
add
add
add
add
add
add
add
add
add
jns
push
add
data16
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
add
push
add
dec
add
add
js
add
add
sldt
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
push
add
data16
add
jb
add
push
add
dec
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
adc
add
insl
add
add
je
jae
add
cwtl
pop
mov
jp
add
add
ja
ja
add
jns
jae
outsl
add
je
add
outsl
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
test
add
add
add
and
adc
add
add
call
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
inc
add
inc
add
inc
inc
add
add
add
inc
or
add
add
inc
rorb
dec
or
ja
rolb
add
add
add
rorb
add
add
add
add
or
ja
ja
rolb
add
add
add
ja
ja
add
add
add
add
divl
ja
ja
rolb
add
add
ja
ja
ja
add
add
add
or
ja
jl
ja
add
add
add
add
jl
ja
add
add
add
or
jl
ja
ja
ja
rolb
add
add
ja
ja
add
add
add
or
ja
ja
ja
add
add
add
add
ja
ja
add
add
add
or
jl
jl
ja
add
add
add
add
ja
ja
add
add
add
add
divl
jl
ja
addb
add
add
add
ja
ja
add
add
add
add
idivl
jl
ja
ja
ja
ja
addb
add
add
add
or
jl
ja
add
ja
ja
addb
or
ja
js
add
add
add
add
js
add
add
idiv
pushl
incl
jg
std
add
cld
add
in
add
call
add
jmp
add
jmp
add
jg
add
jg
add
pop
cld
add
pop
incb
add
incl
add
incl
add
jmp
add
push
add
clc
add
cld
add
incb
ud0
add
incl
jg
jmp
push
jmp
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
ljmp
aas
out
add
add
add
xchg
inc
imul
push
fstp
dec
fisttpl
pop
call
stos
pop
out
test
sti
mov
add
in
mov
aas
daa
or
add
xor
cmpsl
imul
or
shrl
stc
xchg
ss
fnop
cmp
out
mov
mov
and
add
xor
mov
pop
push
arpl
sbb
adc
xchg
and
lahf
and
loopne
mov
lock
mov
mov
insb
fildll
jo
push
js
out
scas
mov
xlat
aaa
dec
aam
int3
out
fisubs
fildl
pop
fsubrl
daa
xchg
add
and
or
rclb
adc
mov
push
fs
push
mov
shrl
pop
add
test
inc
bswap
out
push
cltd
and
push
lcall
push
mov
jae
xchg
and
sarl
outsb
scas
or
dec
rcll
or
jnp
pop
lods
sub
dec
push
xchg
push
pushf
xor
jo
loopne
pop
xchg
call
push
xchg
lock
bound
dec
test
frndint
add
mov
sub
es
mov
jne
in
std
sbb
out
shll
xor
mov
push
xchg
or
cmp
jl
shll
iret
mov
mov
out
add
pslld
addr16
mov
push
ret
ffreep
lahf
add
mov
cmp
stc
dec
int3
ja
push
fnstenv
test
insb
push
jecxz
in
xchg
cltd
jg
push
sti
xchg
scas
xchg
mov
icebp
jne
dec
and
cs
and
xchg
inc
mov
rclb
xor
or
mov
scas
xlat
push
rolb
push
das
mov
adc
int
movsl
jne
mov
popf
jle
add
call
jns
xchg
cmp
jmp
iret
std
mov
xchg
and
and
cld
jnp
aam
fisubs
jns
fldl2e
inc
sbb
xchg
push
sub
ja
lea
jg
les
lcall
dec
stos
mov
mov
adc
mov
mov
push
sub
mov
xchg
loopew
jge
add
decl
mov
insb
adc
mov
das
xchg
xchg
fnstsw
push
popf
and
sarl
cmp
mov
dec
cmp
pushf
sub
test
int
lods
push
jg
outsl
into
jge
data16
add
into
stos
inc
hlt
jnp
pushf
mov
ja
mov
xorb
mov
ss
push
push
cmpsb
out
loop
stc
lcall
loope
inc
xchg
push
outsb
in
dec
jae
mov
in
test
pop
jb
adc
dec
stc
fsub
mov
test
sbb
xor
dec
mov
je
pusha
cmc
xor
add
lcall
jge
iret
jnp
xchg
movsl
mov
pop
jmp
pop
xor
cmp
add
gs
or
push
pop
mov
pop
icebp
add
call
ficompl
out
test
mov
subb
mov
int3
and
push
gs
sbbb
sbbb
in
rcll
cli
sbb
das
xchg
int3
movsb
xchg
out
shll
mov
cmp
loop
outsb
shll
lahf
cmp
mov
push
cmp
test
inc
mov
in
int
lods
mov
pop
pop
xchg
pusha
in
rolb
in
mov
dec
xchg
push
mov
ja
daa
sbb
mov
std
mov
ss
stc
push
xchg
ljmp
fcompp
xchg
imul
outsb
lret
pop
test
stc
add
mov
lahf
leave
fs
xor
out
loop,pn
repnz
jno
jle
cmp
mov
sub
sub
jne
jne
xchg
dec
std
mov
js
cli
inc
in
xlat
cmovle
jb
dec
add
leave
sarl
movsl
or
xchg
movsl
out
aaa
out
push
fpatan
hlt
lret
pop
jae
push
les
and
mov
mov
fwait
sbb
cmpsb
jge
je
dec
cmpsb
push
pusha
and
mov
adc
lea
jp
jg
not
sub
stc
pop
subb
test
scas
cwtl
jp
insl
jl
inc
clc
mov
mov
sbbb
lea
pop
fsts
fld
lods
mov
rolb
cld
mov
sbb
stc
dec
arpl
pop
jg
lea
stc
mov
call
icebp
sub
push
inc
xchg
mov
aaa
and
ret
js
sbb
fidivrs
fs
dec
adc
add
lock
sbb
pop
jp
pop
xchg
lods
xlat
mov
shlb
rcrl
gs
lods
inc
enter
jno
roll
push
push
les
popf
aad
push
fwait
out
sbb
or
adc
jne
adc
push
push
pop
xor
push
dec
xchg
push
negb
outsl
sub
cmpsl
inc
pushf
push
pop
push
nopl
jne
inc
mov
lret
fidivs
pop
xor
mov
dec
add
pushf
sbb
cld
pop
jo
mov
jp
daa
push
mov
cmp
mov
dec
adc
sarb
out
or
in
into
push
dec
jmp
ret
lds
dec
ret
lcall
stos
mov
or
mov
lods
loop
sbb
sti
and
push
xchg
cs
test
js
pop
jne
mov
ss
fstps
das
mov
mov
outsb
ret
testl
adc
das
lea
sub
sbb
outsb
lods
mov
mov
loopne
loope
test
xor
ds
fwait
es
cmp
int
add
fisubs
cwtl
dec
cmp
xchg
leave
push
lahf
fcmovnb
cmp
bound
sub
adc
loopne
not
ret
sub
ds
pop
fsts
test
into
int3
sahf
cmp
cmpsl
imul
lret
dec
arpl
outsb
ss
sbb
and
mov
movsb
cltd
jno
adc
out
mov
xor
cmp
xchg
hlt
xchg
inc
xchg
hlt
sarb
mov
dec
lahf
cli
add
test
arpl
sbb
mov
cltd
out
pop
aam
pop
xor
sar
jbe
sbb
adc
dec
xchg
jo
imul
sbb
jb
xor
aad
pop
dec
sahf
in
pusha
ror
lret
enter
mov
scas
popf
mov
subb
mov
xchg
jg
pop
fwait
pop
loop
test
inc
add
add
and
rorl
xchg
or
inc
leave
xchg
jmp
push
test
hlt
out
daa
out
dec
stos
cmp
rcr
cmp
push
enter
testl
lahf
sbb
jno
jbe
dec
sub
and
mov
test
inc
lds
test
jns
pop
icebp
push
mov
lahf
clc
mov
js
cmp
push
cmpsb
loopne
pop
out
mov
popa
aad
divl
lds
mov
sub
adc
inc
lods
add
aad
imull
and
pop
jle
shlb
mov
add
pop
push
fwait
push
xchg
xor
inc
lret
lods
fs
adc
inc
outsb
pusha
inc
and
mov
mov
stc
loope
addb
mov
fiadds
push
out
push
arpl
sub
cmp
movsb
inc
add
in
xchg
push
xchg
gs
out
out
mov
call
and
lds
repz
scas
rcrb
scas
hlt
push
pop
test
inc
push
ret
add
fdivs
jnp
push
pop
sbb
icebp
hlt
call
je
or
movsbl
mov
loopne
pop
mov
mov
pop
in
je
inc
fwait
leave
push
jmp
addr16
mov
push
ds
mov
mov
add
cld
mov
mov
dec
xchg
std
inc
mov
in
or
aas
call
rorl
fldl
pop
pop
scas
int3
insb
jmp
jl
icebp
push
jns
jnp
add
lahf
insb
arpl
dec
push
cmp
or
loope
xchg
mov
or
push
popf
adc
mov
dec
push
js
add
fnsave
pushf
movsb
popfw
or
xor
test
jb
repz
pop
jo
pop
sub
mov
pusha
pushf
xchg
push
dec
lret
xlat
shll
arpl
int
sbb
out
bound
adc
inc
pop
outsl
adc
cmp
lods
xchg
sub
and
cmpsb
js
das
loope
movsl
adc
xchg
jmp
shrl
sbb
and
mov
ss
int3
stc
jno
ret
dec
cmp
mov
jecxz
mov
outsb
add
sahf
hlt
pop
cltd
xchg
dec
loopne
push
dec
xor
into
je
arpl
dec
jecxz
ss
int
lods
lods
push
mov
jg
js
cmpsl
dec
in
lcall
adc
cmp
or
mov
stos
fs
jmp
daa
dec
mov
mov
jne
leave
inc
and
in
cmp
aad
into
shll
cmpsb
mov
jno
mov
lock
xor
lods
inc
into
es
and
sbb
andl
out
sub
pop
push
ja
inc
mov
into
cmovp
call
lcall
imul
sbb
test
xor
in
sub
scas
mov
inc
dec
sahf
mov
dec
xchg
sub
dec
aad
sar
add
jmp
popf
mov
fnstenv
add
jno
faddl
push
jbe
mov
addl
sub
push
in
xchg
enter
stos
xorl
int3
lock
stos
or
inc
aam
and
pusha
jl
test
pop
and
fwait
sbb
fstl
inc
push
hlt
push
xor
stc
aam
mov
mov
dec
mov
mov
sahf
jae
sbb
jle
pusha
xor
or
mov
fstps
add
sbb
out
xchg
in
mov
ljmp
sub
inc
je
xor
lds
mov
or
add
push
pop
mov
scas
mov
jae
loop
test
and
and
vucomiss
pop
dec
dec
xchg
mov
or
mov
pop
in
addl
addr16
test
xchg
sbb
sbb
sbb
adc
adc
repnz
adcl
int3
int3
fwait
xor
push
lea
jle
std
scas
mov
add
stos
int3
mov
xor
xchg
inc
loop
xchg
mov
out
mov
subb
or
out
cmp
sub
push
jae
in
pop
ret
sub
mov
sub
inc
and
in
lds
sbb
js
daa
movsl
iret
fldl
sbb
inc
into
inc
xchg
lds
out
repz
sbb
pop
insl
ret
mov
cmc
and
mov
add
repnz
jno
cmp
negb
sbb
cli
xor
ja
aaa
push
orl
push
shr
jecxz
aas
mov
pop
mov
sbb
sbb
ljmp
cli
mov
out
fisttpll
sbb
ret
popf
and
sarl
xor
aaa
and
stos
lcall
xor
push
xor
sarb
addb
ljmp
ret
jmp
pop
mov
hlt
add
nop
xchg
ja
pop
popa
pop
add
inc
xchg
add
insb
xchg
sti
ret
xchg
xchg
dec
ret
mov
loopne
div
cmp
insb
sbbb
adc
or
push
pop
stos
dec
scas
test
movsb
and
les
movsb
lods
mov
ja
mov
nop
pop
aaa
jg
in
out
sbb
daa
mov
cltd
pop
cld
ret
shrb
push
pop
ja
loope
push
cmpsb
subl
mov
lret
or
and
push
add
jbe
adc
jbe
orb
leave
cmp
and
mov
push
jecxz
and
insl
inc
leave
and
test
sub
ret
jge
mov
sbb
xor
add
xchg
or
xchg
idivb
jno
mov
outsb
inc
test
dec
out
test
cmpsb
xor
jnp
push
iret
fucomi
ret
loopne
es
jb
mov
or
sbb
ljmp
inc
xchg
test
xchg
mov
fmulp
sub
fwait
push
fldcw
jmp
addr16
adc
stos
sub
imul
dec
aam
cmpsb
into
int
fmuls
jge
or
je
sub
bound
repnz
adc
sti
xor
xchg
imul
jp
mov
xor
pop
lret
insl
push
ljmp
in
ret
std
dec
jno
lods
jno
mov
pop
or
sub
fisubs
sub
lahf
loopne
imul
clc
mov
xchg
ret
bound
cmp
or
iret
and
mov
cs
mov
xor
lock
and
lods
pop
hlt
sarb
jp
cmp
shl
jle
and
repnz
clc
xor
out
push
fsts
ds
push
mov
bound
and
iret
lcall
aad
xchg
rorb
int
mov
cmp
rcr
sarl
mull
call
sub
hlt
jl
and
or
stos
jnp
hlt
push
fxch
idivl
imul
arpl
sub
loop
lods
iret
adc
jb
dec
in
sub
push
out
jno
test
inc
inc
sbb
xchg
arpl
lahf
mov
gs
loopne
jg
sahf
sarl
mov
mov
add
push
pop
insb
iret
pop
mov
jne
push
or
xor
sbb
sbb
mov
push
xor
add
pop
lea
mov
fsts
sbb
repz
mov
jg
loopne
pcmpeqd
adc
cmp
jae
ret
in
xor
fwait
addr16
lcall
cmp
pusha
push
leave
cmc
in
sbb
test
es
xor
cmc
leave
arpl
xlat
int3
mov
jl
add
push
daa
or
push
dec
aas
outsb
mov
cmp
int3
xchg
stc
rolb
cmp
cmpsl
cwtl
movsl
popf
lea
cmp
add
mov
in
out
push
loop
xchg
dec
daa
cld
jl
sbb
scas
fsts
mov
popa
test
pusha
xchg
jmp
outsb
inc
jge
in
movsb
mov
popf
fidivrl
sarb
add
fcoml
jecxz
xor
push
fs
pop
int3
mov
xchg
aad
inc
pop
push
jmp
ror
mov
inc
pop
adc
ljmp
repnz
outsb
shlb
xchg
dec
into
loopne
test
inc
mov
mov
loop
cmp
jl
cli
sbb
push
inc
movsl
jo
lret
xor
push
cltd
xchg
mov
sti
inc
xchg
mov
inc
stc
stos
les
loopne
iret
inc
std
push
test
jae
popf
lret
inc
lock
mov
adc
sbb
sbb
dec
pop
adc
mov
adc
jns
cs
aaa
sbbl
xchg
cmp
jne
push
cmp
jg
stos
and
push
jo
jbe
add
rol
lock
mov
add
inc
shlb
sbb
push
sbb
push
stos
mov
push
sbb
in
call
daa
repz
add
lock
rol
movsl
imul
repnz
cmp
cwtl
dec
and
xchg
iret
imul
sbbb
sti
das
or
push
adc
sbb
push
outsb
ror
cmp
pushl
icebp
mov
mov
cmpsb
dec
cmp
sbb
mov
sub
mov
scas
cmp
orl
dec
pop
sub
outsb
mov
ljmp
in
iret
aam
jns
lds
and
sub
stos
or
in
adc
xchg
jge
or
push
mov
mov
jo
mov
mov
imul
test
dec
outsl
bound
div
jp
nop
xlat
mov
sbb
clc
int
mov
mov
aam
lock
or
inc
fimull
and
push
mov
mov
pushf
fildll
cli
mov
scas
outsl
add
rcrb
pusha
jo
push
and
addr16
jnp
push
jno
pushf
lahf
lock
mov
cmp
mov
fisubs
inc
loope
outsb
popa
add
mov
or
or
adc
pop
scas
pushf
mov
dec
mov
fstpl
xchg
xchg
inc
jl
xor
xchg
mov
shrb
xchg
nop
lret
push
xchg
hlt
sub
or
mov
and
pop
mov
push
jecxz
ret
roll
or
aaa
pusha
sbb
sarl
cmp
in
inc
es
jle
insl
dec
es
mov
outsl
into
fistl
adc
push
adc
insl
mov
ljmp
out
fsubs
xchg
adc
add
ss
sub
test
rcr
cmpsl
outsl
fcmovb
add
fistpl
jmp
sub
movsb
pop
test
aad
scas
dec
and
add
dec
icebp
gs
mov
ret
jns
inc
mov
add
sub
int
shrl
lods
imul
sub
jbe
rcrb
mov
fistl
mov
filds
sub
inc
cltd
scas
inc
xchg
mov
and
jge
push
out
adc
insl
add
fistpll
jno
sbb
lds
cmp
data16
insb
enter
xor
mov
pop
aas
xchg
mov
or
sub
ljmp
sbb
out
or
arpl
hlt
xor
jbe
pop
call
outsl
xor
jecxz
shlb
icebp
jle
pushf
sub
cmp
cmpsb
inc
dec
cld
sub
addr16
das
das
scas
jecxz
and
clc
pop
out
ret
add
and
std
pop
mov
aaa
mov
and
sub
enter
push
adc
imul
xchg
insb
jae
insl
lret
rol
loope
push
in
ss
mov
ret
addl
fistl
push
pop
imul
repnz
sahf
scas
lds
sub
mov
pop
sbb
dec
in
xchg
movsb
daa
jbe
ss
push
lods
clc
push
inc
add
cld
add
sub
mov
jg
jnp
lock
push
jg
jae
outsl
jnp
aam
loope
or
inc
cli
lret
insb
xchg
mov
out
dec
lret
movsl
jo
pop
or
cwtl
mov
sbb
je
inc
jg
lods
in
cmpsl
std
and
test
adcl
dec
xchg
pop
aas
pop
lds
adc
dec
dec
mov
les
pop
xchg
icebp
or
dec
mov
shl
int
sti
dec
xlat
inc
aad
cmpsl
xchg
push
fisubrs
fldcw
dec
dec
sbb
push
cmp
add
mov
cmp
dec
daa
or
xchg
rorb
xchg
push
pushf
mov
adc
and
inc
jne
out
jne
push
xor
aas
insl
jnp
aam
lret
or
xor
xchg
pop
dec
aaa
pop
sbb
push
push
les
ss
sbb
ret
fwait
and
inc
jge
jns
enter
mov
dec
or
jmp
cltd
jp
insl
in
add
arpl
daa
dec
cmp
inc
fbstp
xchg
mov
adc
lods
cmpsl
xor
adc
jne
add
or
loope
shll
test
scas
les
js
out
shr
xchg
add
inc
push
mov
aaa
dec
scas
add
adc
repnz
ret
push
jg
cwtl
sbb
inc
pinsrw
push
fnstcw
and
pop
fisttpll
aad
xor
test
int3
jp
imul
inc
xchg
hlt
dec
mov
adc
add
shll
jno
call
jg
cli
jnp
jno
xchg
mov
je
inc
jne
in
fcoms
outsl
dec
lret
hlt
fadds
shll
arpl
hlt
cmc
scas
sub
push
add
adcb
sub
nop
xor
add
mov
xchg
sub
sub
xor
aad
and
mov
xchg
mov
je
add
push
sbbl
or
sbb
into
sbb
sub
pop
stc
into
or
cwtl
sub
or
mov
ror
push
pop
jae
xchg
push
in
popf
xor
push
outsb
jmp
scas
idivb
push
push
xor
adc
inc
lock
stos
fldcw
pop
pop
jnp
mov
movsb
ret
mov
mov
fdivrs
in
pusha
into
scas
std
pop
sbb
cli
data16
and
lods
sbb
mov
xorl
pop
or
fwait
lock
push
adcl
fnstenv
dec
mov
adc
sbb
mov
sbb
mov
sahf
icebp
pop
mov
ljmp
icebp
xlat
stos
in
mov
jae
cwtl
mov
nop
adc
push
ds
cmp
pop
add
divb
and
dec
sbb
mov
sub
aaa
loopne
inc
hlt
inc
addr16
or
aaa
not
cwtl
xor
lds
mov
xor
popa
jo
mov
jge
sbb
inc
das
or
jne
aad
fs
mov
mov
rolb
cs
or
roll
xor
and
xchg
dec
lret
pop
add
repz
mov
pusha
mov
call
loop
jge
frstor
mov
cltd
adc
dec
jbe
xchg
sbb
and
xchg
cmpsl
push
mov
pop
sbb
mov
lcall
xchg
scas
fadds
aad
das
out
or
mov
fists
jmp
and
movsb
roll
inc
popf
sub
push
sbb
popf
lds
jmp
sti
out
dec
ficomps
or
icebp
jge
mov
jns
and
sub
je
inc
icebp
mov
int3
pusha
jne
mov
pop
cwtl
inc
pop
push
dec
pusha
inc
push
notb
cmc
mov
push
shrb
mov
inc
ret
lock
repz
ss
mov
ja
pushf
jb
ja
or
mov
jne
xchg
add
or
ret
sbb
sub
pop
ljmp
aas
mov
scas
lret
sub
das
xor
data16
mov
out
sbb
ljmp
cmp
mov
pop
sarb
add
jb
lret
or
pop
arpl
mov
rcrb
and
imul
xchg
in
adc
pop
add
sub
pop
mov
mov
fldcw
push
in
mov
mov
push
mov
cmp
mov
shlb
dec
jge
inc
popf
lret
mov
jo
push
mov
movsb
lahf
pop
ficompl
dec
jmp
aas
xlat
and
stos
iret
es
push
mov
jae
clc
enter
mov
hlt
daa
data16
stos
sbb
dec
sub
enter
cmc
inc
push
dec
mov
ja
out
and
mov
sbb
insl
inc
adc
fbld
mov
mov
xchg
bswap
adc
test
test
aam
in
cmp
xor
add
iret
leave
and
cwtl
aad
inc
in
push
rolb
fisubrs
push
clc
ret
pusha
sbb
sbb
ds
pop
xor
xchg
pop
test
int3
sti
jb
push
pop
xchg
sbb
dec
adc
mov
jge
iret
sbb
lsl
push
push
push
pop
cmp
xlat
dec
mov
clc
sbb
adc
mov
cld
jp
dec
out
pop
pop
int
loopne
mov
mov
bound
xor
cld
ja
jae
in
xor
inc
xor
cmp
or
push
push
insb
push
movsb
sub
fisttpl
mov
jecxz
sbb
or
jp
jecxz
fdivrs
cmp
icebp
xchg
outsb
cmpsl
call
ss
out
cli
js
jl
orl
adc
pop
aam
pushf
daa
xchg
lods
cmpsb
adc
inc
add
gs
mov
sbb
ss
scas
sbb
pop
add
mov
out
cltd
pop
mov
jbe
into
xor
nop
pop
jno
pop
push
cli
adcb
stos
dec
icebp
sbb
push
movsb
jge
pusha
in
pushf
repnz
jns
dec
dec
sub
sbb
pushf
xlat
aam
clc
out
lcall
xor
sub
sbb
inc
xor
hlt
mov
push
jae
and
pop
popf
push
clc
push
dec
stos
jp
jb
inc
xchg
rcll
dec
add
dec
dec
fdivs
jbe
hlt
cmp
mov
mov
jp
push
pop
push
cwtl
daa
shr
xor
scas
mov
or
cltd
xor
jns
js
call
xchg
cld
sbb
pop
popw
clc
or
lret
shlb
cmp
push
aaa
mov
or
imul
shl
mov
pop
xorb
scas
rcl
mov
in
mov
push
js
aas
ja
pop
mov
sub
fbstp
cmp
mov
xchg
sub
in
mov
enter
cmpsl
inc
sub
repnz
movb
aad
pop
out
jp
mov
lret
shrb
adc
add
mov
stos
and
jb
pop
cmp
test
out
icebp
in
dec
dec
xlat
js
sbb
outsb
enter
cld
dec
int
bound
pop
stos
aas
ss
aam
jno
add
adc
cmpsb
and
adc
push
mov
stos
push
fstl
ljmp
jne
mov
ror
data16
sub
cmp
imul
pop
push
or
adc
rclb
mov
sbb
push
mov
bound
sti
jo
jo
and
or
pop
pop
dec
fistpl
out
add
sbb
test
cli
enter
icebp
out
add
outsb
aam
xor
hlt
dec
out
cmp
test
jo
das
imul
xor
push
xlat
push
xor
inc
and
sbbb
jp
fst
into
mov
imul
pop
push
and
clc
fcompl
or
pop
or
scas
data16
test
pop
outsb
pop
rcr
rolb
out
dec
insl
sahf
cmp
in
xor
fisubrs
dec
or
pushf
xchg
popa
imul
pop
aad
or
pushf
stc
dec
dec
cmp
mov
mov
xor
into
xor
xor
imul
cmc
adc
push
jb
jmp
cmpsl
and
aad
sahf
push
adc
adc
movsl
pop
cmp
pop
jecxz
out
sbb
or
bnd
or
jnp
and
js
mov
repz
imul
loopne
fs
subl
push
pop
adc
sti
popf
mov
and
repz
ss
insb
pop
or
lods
arpl
sub
mov
lahf
mov
fcoml
pop
fstpl
lcall
mov
repnz
and
cs
in
iret
pop
push
out
and
pop
inc
mov
sub
shrb
ja
mov
addr16
mov
mov
lret
mov
popf
pusha
hlt
xchg
pop
mov
nop
push
inc
scas
jae
mov
in
insl
nop
mov
xchg
xor
aad
jae
sbb
lret
jbe
sbb
les
jle
mov
idiv
sub
mov
fwait
mov
dec
repnz
cmpb
or
adc
out
push
and
stos
jns
xchg
or
xor
jno
xchg
sbb
cmc
fdivrp
dec
inc
sbb
cmpb
call
sar
imul
in
xchg
addb
nop
dec
push
js
add
stos
push
imul
and
movsl
hlt
icebp
adc
jb
jl
xchg
outsb
out
mov
out
add
or
jecxz
lcall
pop
xchg
xchg
push
sub
push
imul
mov
xlat
dec
inc
test
jecxz
lahf
andl
mov
dec
add
or
push
xchg
and
mov
rorl
icebp
daa
pop
add
pop
mov
dec
pop
insl
fistpl
cwtl
or
adc
sub
cmp
pop
nop
sub
dec
ljmp
adc
mov
ret
out
pop
dec
lret
neg
les
push
les
jne
sub
pop
and
xchg
xor
popa
gs
mov
push
ret
out
cmp
or
add
loope
pop
movsb
sub
icebp
mov
or
stos
fiadds
cmpsl
insb
ret
dec
mov
fcomip
push
xor
movsl
loope
shrb
add
dec
call
cmpsl
loopne
xor
sub
in
push
mov
rorl
mov
repnz
test
outsb
mov
pop
pop
mov
sti
sbb
inc
fisttpl
cli
cmc
push
stos
lahf
aam
xor
bound
arpl
jae
add
and
mov
add
pop
ss
adc
inc
pop
add
add
inc
dec
jecxz
jnp
xchg
incb
or
jmp
add
cmpsl
cmp
mov
jl
mov
int
and
mov
add
adc
lods
xorb
jno
add
out
aas
cmp
sbb
push
sub
ds
mov
rcrb
jmp
sbb
mov
fcompl
cmpsl
mov
or
pop
mov
mov
xor
fs
ja
cmc
mov
shrb
push
enter
mov
add
call
aad
sbb
jns
stos
and
call
jbe
inc
push
das
arpl
clc
lahf
xchg
pop
shlb
xchg
push
xor
rorl
test
sub
xchg
mov
fs
xor
and
jmp
xchg
push
mov
sbb
jmp
dec
ret
jb
push
insl
mov
jns
mov
push
push
push
inc
sbb
cld
bnd
mov
sbb
xor
aam
push
lret
mov
pop
xchg
repz
push
xchg
push
cs
popa
dec
mov
fsts
pop
sahf
inc
mov
ja
add
jb
cwtl
aad
test
lock
adc
sbb
mov
pop
ljmp
push
pusha
not
cmp
mov
int
pop
xor
lock
jl
cmpb
xorb
and
add
dec
dec
orl
dec
rorl
push
ror
lret
or
test
jecxz
mov
mov
pop
fisttpl
dec
ret
movzbl
xor
push
out
jns
das
push
fiaddl
inc
adc
add
fistl
sub
push
repz
push
mov
adc
xchg
pop
adc
add
pop
and
push
fisubl
mov
ret
fnstsw
jb
dec
cld
les
imul
pop
push
sahf
xchg
and
dec
or
dec
and
fcmovnbe
xor
mov
fsubrp
dec
mov
jae
leave
push
mov
inc
out
aaa
xor
xlat
sub
mov
fwait
mov
sbb
repz
mov
cmp
push
inc
in
cmpsl
mov
outsb
or
pop
mov
stos
fcoml
ds
test
icebp
xchg
push
lods
dec
fwait
rolb
in
sub
mov
inc
mov
in
shll
out
inc
push
jo
lock
push
es
sub
xor
popa
sub
jne
and
jle
in
add
daa
adc
pop
ret
jno
icebp
shll
xchg
stos
rcl
lea
test
mov
repz
push
mov
subb
inc
mov
out
adc
jae
mov
cltd
outsb
jg
cmp
cmp
push
scas
or
ret
mov
mov
xchg
enter
stos
inc
loope
jo
add
cmp
sbb
mov
jmp
setne
push
std
push
mov
sbb
or
mov
add
inc
ds
dec
or
mov
inc
je
pop
inc
sub
into
jo
cli
add
adc
ficoml
adc
mov
cmp
cmpsb
gs
movsb
into
sub
mov
xor
lods
lcall
xchg
in
in
out
cmp
fidivrs
ja
call
mov
lret
ficomps
jp
outsl
xchg
xchg
jb
jae
xor
lods
call
jno
fdivs
push
out
data16
fiaddl
cmp
pop
inc
sub
cli
sahf
cmp
adc
sbb
sub
jo
inc
push
mov
imul
push
mov
xorl
aam
mov
cmp
xchg
sahf
inc
or
cmpsb
clc
xchg
pushf
jbe
jno
jmp
das
shrb
inc
jae
xchg
in
xchg
out
shr
sub
and
mov
jno
xor
iret
lret
lock
cmp
cs
lds
mov
push
fidivs
lods
pop
add
sbb
sub
push
jne
std
das
mov
add
xor
inc
int3
or
push
xlat
sti
out
mov
push
jl
mov
and
cmc
repnz
cltd
cmp
push
jecxz
iret
lea
xchg
in
mov
loop
xor
pusha
pop
lahf
in
fst
sbb
lret
mov
das
push
adc
xchg
mov
stc
mov
mov
jle
adc
loope
pushf
imul
xchg
jae
mov
je
into
into
test
push
or
pop
ret
mov
ret
movl
clc
xchg
add
jbe
test
mov
push
jae
fcoml
pushl
and
scas
in
mov
lods
dec
cmpsl
xchg
mov
popa
dec
pop
dec
mov
in
push
xor
or
mov
mov
sub
and
jnp
add
pop
in
mov
in
stos
xchg
sub
jns
pop
dec
movzbl
push
mov
lods
jp
cs
push
add
or
outsb
xor
ficoml
negl
push
push
shr
cli
inc
pop
jg
add
push
lea
addr16
xchg
and
pop
dec
sub
addl
jg
mov
mov
push
jmp
pusha
mull
sub
out
sub
fs
cmpsb
popf
jne
jo
jge
cli
int
rclb
adc
in
jns
cmp
enter
pusha
adc
js
aam
adc
clc
lahf
and
push
jecxz
dec
or
cmovle
mov
mov
push
cltd
push
jmp
test
cmp
aam
jns
cltd
fwait
in
mov
or
cmp
les
out
mov
rcrb
pop
stos
and
mov
movsl
lret
add
outsl
rorl
rcrl
mov
nop
fidivs
repz
sbb
lock
ja
lcall
in
popa
inc
adc
push
push
fs
or
test
in
js
test
pop
cmc
xchg
mov
mov
push
or
pop
jl
negb
adcb
push
jnp
pop
mov
mov
dec
pusha
pop
mov
lock
add
mov
daa
mov
sub
aam
push
popa
push
sub
sbb
mov
mov
xchg
pop
ret
sbb
ficomps
int3
or
dec
mov
movb
jl
or
aas
aam
fisttpl
mov
jnp
loopne
in
push
xor
fucomi
jbe
lock
mov
out
mov
hlt
or
mov
push
lret
mov
sbb
shl
and
jne
sub
fisttpll
rol
jp
enter
fsubrl
scas
cltd
addps
test
cwtl
fsubrs
cmp
fists
test
fldl
mov
dec
and
dec
fldl
sbb
jle
faddl
in
popf
sub
pop
xor
in
lea
inc
mov
inc
add
mov
dec
popf
aam
iret
inc
add
int3
sub
jno
dec
sbb
sbb
and
shld
dec
xchg
js
inc
lret
out
loope
sub
jp
push
divl
cwtl
xchg
les
push
jmp
dec
cltd
mov
push
mov
jg
xchg
addr16
aaa
cmp
in
fldt
lret
ficompl
mov
imul
in
pop
faddl
data16
or
sub
dec
pop
gs
icebp
icebp
mov
mov
fistl
and
iret
xchg
jecxz
inc
and
or
cmp
ss
adc
test
mov
ds
lret
jnp
cmp
dec
pop
mov
add
and
dec
pop
mov
js
and
pop
or
shl
pop
xchg
scas
mov
add
nop
cmp
leave
loope
xlat
inc
mov
ret
sti
dec
movsb
or
out
inc
stc
dec
out
mov
loopne
stc
and
pop
sti
sub
dec
and
adcb
fldt
mov
xor
xor
or
scas
daa
xchg
mov
push
scas
jl
jb
cs
pushf
into
dec
add
inc
icebp
iret
push
cli
test
test
repnz
mov
add
mov
decb
jbe
out
or
es
sub
loope
pop
into
in
mov
adc
fisubrs
lret
insb
divb
lret
or
popf
sbb
enter
dec
in
sbb
mov
ds
loope
xchg
in
add
mov
loop
add
and
or
mov
mov
mov
sbb
xor
mov
inc
pop
nop
cmp
add
cmpsl
mov
and
xchg
scas
out
out
inc
push
movb
into
and
and
mov
jo
inc
mov
std
popf
push
enter
lret
andb
out
adc
and
or
test
jo
add
test
adc
test
dec
adc
stc
comiss
lahf
mov
es
aam
xchg
and
jns
test
mov
xor
add
arpl
cmp
and
icebp
insb
cmp
arpl
and
fidivrl
sbb
and
jnp
aam
pop
fiaddl
pop
pushf
mov
push
push
sbb
mov
in
mov
xchg
fnstcw
in
xchg
xchg
sub
adc
push
inc
xchg
jae
jb
fildll
inc
mov
lods
xchg
sbb
push
sbb
mov
inc
and
lods
lret
mov
gs
push
clc
inc
dec
popf
les
sti
adc
ret
movsb
outsb
mov
enter
mov
fcom
lods
push
jo
lahf
je
out
xor
sub
xchg
cmp
dec
adc
test
cmp
outsl
movsl
cmp
shlb
jns
adc
xor
inc
sub
mov
xchg
inc
inc
insb
and
pop
pop
pop
lods
push
stc
aas
dec
adc
jge
xchg
cwtl
cmpsb
out
and
addr16
test
push
xchg
mov
ret
cmp
adc
dec
cld
xor
sub
scas
std
mov
lds
fdivr
filds
xlat
pop
cltd
push
xchg
out
mov
loop
mov
mov
push
add
adc
ss
lcall
adc
push
or
push
inc
push
xchg
fstl
out
andb
ret
cwtl
push
sbb
lahf
xor
rcrl
fistpl
out
lods
neg
or
and
addr16
xchg
cmpsb
pop
stos
mov
cs
divl
enter
les
inc
jbe
fucom
ret
mov
shlb
pushf
push
cmp
add
sbb
xchg
pop
mov
mov
mov
cmp
stos
push
mov
mov
outsb
leave
dec
or
stos
fcoms
icebp
cld
sbb
mov
js
movsbl
sarl
sub
out
ss
adc
and
cmp
fcomps
ss
mov
cmpsl
stos
std
pop
sbb
xor
fdivrl
xor
cld
inc
mov
clc
rorb
adc
out
stos
repnz
adc
stos
aam
pop
mov
outsl
je
push
cld
sbb
or
sbb
lret
and
jae
sbb
in
pop
dec
cmpsl
shlb
xchg
pop
nop
and
adc
cmp
aad
insb
fstp
and
andb
out
xlat
xchg
pop
pop
mull
leave
js
mov
sub
negb
cmp
nop
sbb
lret
test
adc
and
adc
push
mov
loope
lock
aaa
dec
mov
loop
jp
fnstenv
and
vmovsd
and
shl
test
push
jnp
mov
mov
jge
add
in
cmpb
xchg
push
insl
shll
inc
pop
ret
je
pop
sahf
pmullw
inc
cli
jp
xchg
sbb
push
xchg
es
ret
cmp
lock
jae
out
xchg
pop
add
xchg
into
fwait
sub
xchg
inc
out
jge
addb
ror
mov
mov
jnp,pt
adc
js
jo
scas
add
insl
mov
pop
ljmp
sbb
jg
xchg
and
in
xchg
cmp
pop
jl
adc
push
sub
pusha
adc
imul
les
jmp
aam
imul
sub
in
dec
push
leave
fisttpll
jns
aad
and
stc
in
fistps
pop
aam
and
push
je
aaa
pushf
es
dec
inc
test
pop
jnp
mov
out
push
int
dec
sub
movsl
das
divb
mov
jp
sub
lods
push
imul
stos
sub
mov
cmc
cs
lea
int3
or
test
outsl
fists
and
lahf
sub
cs
push
mov
movsl
xabort
cmpsb
ret
mov
aam
fwait
sbb
jae
loop
inc
stc
repnz
jge
jmp
loopne
mov
xor
jp
popa
shll
mov
push
xchg
idiv
ret
cmp
fcmovu
dec
xorl
push
jle
pop
jge
sti
pop
jecxz
mov
out
fcoml
cli
jp
inc
mov
xchg
mov
xor
mov
dec
or
jb
outsl
jae
test
sbb
orb
push
out
and
icebp
xor
daa
je
inc
pusha
jbe
out
xchg
es
mov
mov
lods
xchg
daa
pop
out
in
cmp
adcb
xor
cmp
push
popa
stos
into
fstl
ds
cli
jnp
enter
loop
adc
movb
imul
stc
fwait
int
jne
mov
and
mov
cmpb
test
mov
jo
call
mov
scas
filds
es
pushf
leave
lods
movsl
ds
aas
pop
inc
jmp
iret
push
cmp
es
push
or
in
imul
jae
cmp
sbbl
cmp
push
dec
addr16
popf
pop
dec
sbb
movsl
loopne
push
mov
sahf
cmp
repnz
movsl
xor
inc
mov
fs
out
out
arpl
shll
inc
jne
or
add
xor
mov
adc
stos
jbe
movsl
pop
lret
sarl
popf
push
int3
push
lds
push
xor
mov
pop
lock
push
dec
sbbb
push
fnstcw
inc
push
data16
fsubrs
lahf
pushf
incb
add
xchg
fs
imul
dec
sti
mov
outsb
sbb
inc
dec
sbb
int3
sbb
push
push
movsl
jno
es
fsubrl
nop
outsl
shr
or
xor
or
push
pop
add
jg
sub
std
cmp
bound
scas
sub
es
mov
push
pop
mov
dec
adcb
push
mov
aas
rclb
and
out
adc
pop
sub
push
dec
into
int
mov
stc
add
mov
loop
mov
cmp
insl
or
push
enter
and
pop
sti
dec
pop
test
cld
cmp
and
mov
and
scas
fcompl
out
decb
adc
into
in
iret
jmp
cmp
dec
int
sub
sti
xchg
movsl
push
xchg
test
aad
inc
mov
push
jae
enter
sub
cmp
push
outsl
rep
lds
or
mov
or
pop
sub
adc
push
xchg
and
jbe
mov
add
push
cmpsl
add
jle
inc
adc
push
sub
into
pop
xchg
or
or
push
nop
or
xchg
inc
inc
cmp
int
aam
lcall
loopne
loop
add
lods
cmp
imul
jb
sbb
cmp
cwtl
or
cmpsl
add
bound
insl
imul
lods
cld
push
dec
fcmovnu
js
add
xor
dec
push
imul
bound
or
push
inc
push
je
lods
icebp
mov
nop
rcrl
jb
outsl
push
pusha
in
pop
sub
cwtl
daa
cli
push
xor
daa
cli
bound
gs
push
out
add
ret
inc
test
stos
scas
js
lcall
loope
jns
add
cltd
dec
addr16
in
movsb
and
rcll
jnp
push
add
inc
lea
sub
cs
pop
mov
mov
pop
insb
push
mov
stos
xchg
ret
clc
stos
pop
pop
rolb
mov
nop
xchg
mov
loopne
cmp
or
popa
dec
and
stc
fldl
dec
ret
cmp
sbb
lahf
fdivrs
add
les
or
push
pop
daa
xchg
jbe
aad
pcmpeqd
stc
pop
mov
insb
gs
xor
jno
mov
sbb
lcall
pop
shlb
pop
jo
xor
xor
pop
cmp
xchg
sbb
push
in
xor
ficoms
sbb
test
stc
mov
rcrb
lret
jb
loope
xchg
mov
fcom
enter
add
sar
scas
push
out
test
jns
jecxz
pop
inc
mov
leave
mov
and
repz
mov
push
jo
ljmp
in
inc
cmp
fisttpll
enter
outsl
xchg
fs
jecxz
mov
inc
jno
ret
jmp
jns
enter
movl
xchg
jbe
sub
jmp
ds
out
mov
or
stos
xor
mov
mov
push
jle
pop
inc
xor
comiss
mov
mov
and
xchg
test
jl
xchg
fdivl
in
arpl
sub
cmp
cwtl
pop
packuswb
cmpsb
xor
lea
out
push
push
sarl
and
add
push
leave
xlat
xchg
movsl
dec
jmp
add
xchg
gs
loope
in
in
sub
cmp
cmp
cmp
dec
iret
in
int3
loop
mov
or
lds
loope
jle
data16
jg
in
arpl
test
dec
pop
mov
outsb
adc
scas
sub
sbb
pushf
incb
mov
cmp
scas
mov
sarb
or
shll
test
pop
dec
pushf
sbb
mov
stc
mov
mov
out
mov
arpl
sbb
pop
dec
dec
push
xor
mov
jo
dec
mov
cmp
mov
mov
mov
dec
stc
dec
jnp
bnd
jns
push
popa
xor
rorl
adc
sub
and
mov
xchg
aaa
ja
sahf
decb
inc
inc
fisubrs
pop
shr
jecxz
int3
push
dec
std
push
xor
xor
cltd
or
test
mov
push
repnz
xchg
push
lcall
out
loope
into
sbb
dec
xor
mov
outsb
mov
inc
out
pop
inc
pushl
mov
dec
xchg
xchg
adc
and
push
lahf
ret
sub
and
cs
mov
gs
pop
inc
cmp
insb
jmp
loopne
pop
xor
and
movsb
popf
sbb
cli
mov
mov
add
cmc
jl
inc
subb
fists
inc
and
aas
cltd
jnp
pop
into
cs
sbb
or
mov
xchg
lea
arpl
arpl
les
xchg
and
gs
les
pop
das
popa
test
or
adc
out
and
into
push
adc
cmp
push
cmp
sub
cmp
int
test
sbb
scas
jnp
push
lods
pusha
dec
fnstenv
cmpsl
adc
mov
and
idiv
fdivs
xchg
jne
xlat
xor
sti
test
jecxz
loopne
add
loopne
jle
xchg
test
and
aad
pop
sti
rcrl
inc
mov
pop
or
push
les
pop
pop
push
jl
inc
jmp
xchg
test
xor
add
mov
sub
rcrl
insl
js
dec
popa
sub
pop
sti
inc
insl
es
js
shrb
jp
lahf
cmpsb
fsubs
out
pop
cld
xor
mov
shrb
fsubrl
cmpsb
shll
shl
cmpsb
fucom
movsb
xchg
push
inc
lods
push
sbb
fistps
sub
icebp
add
movsl
aaa
xor
test
xor
or
push
xchg
lods
push
xchg
jl
cmpl
dec
adc
leave
jge
dec
inc
jge
xchg
ljmp
mov
dec
jl
mov
adc
mov
lds
aas
pop
das
pop
les
inc
aaa
xor
xchg
in
mov
mov
push
lods
mov
and
mov
cmp
out
jl
push
mov
push
aas
mov
dec
bound
mov
xchg
in
jecxz
mov
xchg
iret
dec
filds
je
fbstp
out
aaa
pop
cmpsb
fmull
aad
xor
aam
pop
adc
mov
fisttpl
lcall
dec
das
int3
fdivrs
jno
jno
push
addr16
dec
lcall
mov
cmp
icebp
repnz
jg
jecxz
bound
outsb
lret
add
jp
xchg
pop
daa
sub
gs
hlt
cmp
stos
inc
dec
mov
sahf
xor
and
fnstsw
and
mov
jecxz
icebp
call
add
push
cmpsb
cltd
aad
mov
lret
stc
sbbb
pushf
jg
scas
les
mov
mov
imul
out
or
adc
xchg
les
and
cli
cltd
or
andl
push
cmp
xor
hlt
inc
jp
rsqrtps
adc
or
and
lret
les
pushw
inc
jp
push
mov
mov
pop
or
push
imul
cmpsb
and
sahf
mov
add
test
arpl
cmp
xorb
mov
mov
movl
cmp
mov
push
and
int3
mov
aaa
flds
cmpsl
lds
call
pop
outsb
add
shlb
aad
xchg
add
inc
int3
or
dec
cld
int3
fwait
push
adcb
and
add
dec
leave
fsts
mov
ds
loopne
cmpsb
inc
sbb
inc
nop
push
push
mov
int
rcrb
xchg
add
xor
lods
pop
mov
xchg
inc
push
out
test
jmp
sbb
int3
xlat
addr16
push
sbb
mov
and
shlb
aad
add
fmul
and
push
mov
inc
adc
xor
lds
mov
cmc
cmpsb
sar
or
mov
ja
push
adcb
jg
mov
pop
jecxz
lods
dec
dec
jnp
clc
push
push
pusha
mov
fisttps
push
adc
repnz
push
mov
iret
mov
dec
ljmp
pop
xchg
in
test
addl
call
sub
push
sbb
push
mov
fwait
push
cwtl
nop
or
jb
ss
adc
mov
add
xor
mov
pop
aam
push
inc
xchg
lock
call
or
jne
aas
sbb
fiadds
jge
fistpl
ret
cmp
ds
dec
lcall
adc
inc
add
dec
cmp
sbb
jo
sbb
lea
in
out
xchg
pushf
jp
pop
lods
adcb
subb
or
and
sbb
inc
pop
adc
nop
sbb
sbb
idiv
sub
sub
int
sub
and
mov
adc
icebp
loop
popa
xor
xor
inc
mov
rcll
dec
outsb
cmp
xorb
sub
xor
jbe
sbb
xor
mov
cwtl
bound
cmpb
push
and
mov
cli
dec
dec
and
es
mov
pop
mov
cli
or
or
or
xchg
and
pushf
cmp
pop
inc
stos
adc
xchg
and
imul
jl
and
dec
mov
shl
xlat
jp
push
lods
adc
pop
shlb
mov
out
mov
pop
cwtl
sub
and
inc
jbe
jmp
push
mov
xchg
fsubs
push
decl
neg
pop
ss
sub
pushf
loop
hlt
push
icebp
test
enter
mov
mov
into
jno
andb
cld
das
push
out
popf
add
pop
ret
stos
shll
sub
repnz
and
inc
jmp
fcmove
sar
push
mov
sahf
and
enter
lods
adc
aam
cmp
iret
ja
out
lds
pop
or
shlb
das
and
int3
pop
aas
ss
jae
gs
int
jno
hlt
fwait
push
in
cld
lcall
push
cmpsl
popf
shl
sub
cmc
jmp
push
outsb
add
xor
mov
add
aas
sbb
jno
es
adc
repnz
roll
fmull
shrl
insl
mov
test
mov
xor
xchg
xor
sahf
nop
add
enter
les
adc
inc
inc
aaa
insl
lods
fldenv
xor
mov
jo
dec
and
mov
adc
push
xchg
pop
sahf
sub
xor
fcomp
jge
xlat
and
and
int
aaa
ljmp
dec
push
pusha
jge
mov
cmp
pop
ja
inc
es
sub
mov
pushl
push
mov
std
addb
sub
test
inc
mov
and
dec
jle
lea
xorl
inc
popf
push
int
out
mov
rolb
leave
lcall
stos
cwtl
stos
imul
push
cmp
jmp
cmpb
sbb
fildll
in
mov
fisubl
dec
or
pusha
dec
jmp
jecxz
jb
ja
or
cli
mov
or
push
mov
jge
sbb
mov
es
fnstsw
mov
cmpsl
or
xchg
cmp
ret
lret
mov
addr16
rcrb
pop
mov
dec
sub
test
lahf
pop
dec
decl
frstpm(287
sub
mov
and
push
test
dec
mov
jb
inc
push
std
sub
inc
xor
gs
jle
adc
mov
outsb
out
pop
in
out
cs
push
lods
rolb
sti
loope
sbb
orl
lock
cmp
in
xor
jne
outsb
mov
cmp
pop
stc
push
aas
mov
je
fidivs
sbb
pop
and
bound
mov
push
outsl
pop
mov
push
pop
jmp
mov
mov
add
add
std
call
mov
mov
scas
jle
scas
cmpsl
insb
ss
mov
mov
shll
dec
push
xchg
or
repz
xor
inc
data16
mov
xchg
mov
pop
in
out
pop
mov
push
aas
xchg
scas
mov
pop
pushf
aaa
cli
push
mov
out
dec
pushl
xchg
aas
sbb
cs
sub
aam
jns
sub
pop
inc
inc
cmpsl
mov
repz
dec
dec
lods
xchg
cmpl
jnp
mov
mov
adc
les
jb
mov
xlat
jne
xlat
fstpt
add
int3
and
jg
les
inc
into
movsl
dec
inc
test
loope
mov
xor
pop
enter
jge
das
movsb
arpl
pop
mov
imul
inc
out
insl
push
cld
add
lcall
inc
cmpsl
pop
enter
push
rorl
pop
and
cltd
push
mov
and
pop
iret
lret
outsl
int3
mov
jmpw
cmp
and
push
inc
shrb
or
push
lahf
mov
mov
shlb
push
xchg
cmp
divl
popf
test
into
clc
pop
sbb
sbb
lods
sub
inc
sub
sarl
or
out
mov
cmc
cli
cld
pop
sub
sar
imul
shrb
idivb
sub
mov
sbb
inc
subl
bound
in
mov
sbb
rcll
cmp
loope
rcrl
bound
pop
and
jo
jbe
cs
loopne
xor
or
rcrl
mov
push
xchg
icebp
xor
inc
hlt
inc
lcall
adcb
flds
push
push
cmc
inc
addl
lret
mov
pop
xchg
mov
cmpsl
loopne
xchg
lret
pop
push
test
bnd
aad
mov
rclb
hlt
cmp
rcll
stos
in
or
leave
fwait
and
pop
je
shlb
jmp
dec
je
or
jbe
jmp
push
call
dec
icebp
jae
pop
sub
jle
jp
dec
and
adc
ds
jo
loopne
mov
jecxz
push
lds
mov
rolb
push
daa
push
loope
cld
divl
fnstcw
out
add
cmp
lock
loope
mov
sti
add
add
js
xor
jmp
clc
or
mov
jae
in
mov
cmovle
inc
das
repnz
pop
jle
and
out
xchg
add
sbb
enter
jge
decb
mov
lods
sarl
pop
mov
cmp
sarl
test
std
sbb
loop
mov
push
repz
imul
jge
mov
or
stos
xchg
and
mov
mov
test
or
mov
pushf
dec
jne
andb
aad
addr16
fsubr
sbb
arpl
out
push
lock
pop
cmp
sahf
dec
push
mov
mov
or
cli
movsl
mov
stos
sbb
jae
mov
jno
fcomp
js
mov
or
sbb
test
hlt
pop
stc
out
loop
ja
in
iret
icebp
jnp
sahf
gs
mov
cmp
push
or
or
fidivs
aam
ficoml
addb
mov
minps
pop
mov
mov
fidivs
inc
in
adc
push
int
nop
ljmp
cmp
or
cld
jne
mov
cltd
mov
jge
xchg
pop
mov
sbb
cmp
movsb
pop
dec
fwait
and
pop
or
div
add
fdiv
mov
and
sub
mov
xchg
bound
bswap
ror
data16
sub
mov
lea
movsl
lret
test
and
ret
dec
jmp
or
mov
and
inc
call
mov
ljmp
pop
test
push
jle
push
jmp
andl
adc
jnp
paddq
or
xchg
add
aam
sbb
fsubs
test
rclb
pop
loope
lods
xlat
stos
pop
inc
sub
inc
fwait
nop
xor
les
imul
pusha
insb
jge
mov
jae
sub
xchg
stc
mov
loope
lds
cmp
cmp
lods
add
xchg
lock
xchg
or
movsl
xchg
cli
jo
and
faddl
sub
push
stc
jmp
call
rorb
pop
sub
cld
sbb
test
push
mov
nop
fisttpll
push
add
push
jnp
pushf
popa
push
xchg
jmp
fwait
mov
inc
aas
pop
push
orl
dec
fisubs
cmp
stos
mov
pop
mov
fwait
repnz
bound
push
insl
rcll
test
in
fists
jle
mov
push
mul
fs
filds
add
pop
cmpsb
pushf
sbb
dec
movsb
jne
loope
popa
shr
into
bound
lea
aam
jno
rcl
mov
xchg
and
dec
imul
orb
aas
test
leave
and
outsb
popa
sbb
cmp
push
push
inc
pop
mov
pop
test
decb
subl
repnz
mov
or
adc
mov
cmpsl
push
aad
inc
outsl
or
mov
cmp
shrl
outsb
mov
loopne
fcom
sbb
lret
enter
mov
push
outsb
mov
insb
inc
out
push
inc
xor
ss
cmp
cmpsb
pop
test
arpl
xorl
xchg
adc
rorl
popf
push
arpl
cmp
push
arpl
mov
inc
stos
jae
push
mov
jno
call
int3
lds
mov
xchg
inc
cmp
ds
mov
and
mov
popf
and
ja
movsb
in
mov
gs
jmp
orl
fldenv
movsl
xchg
pushf
outsb
mov
push
push
dec
rolb
mov
mov
xor
pop
inc
mov
adc
nop
js
jbe
in
jbe
std
cmpsl
ficoml
xchg
or
jnp
xor
out
call
sub
in
outsl
sub
mov
or
pop
push
xor
mov
fildll
dec
cmp
ss
in
fldl
gs
sbb
test
cmp
fistl
push
and
pop
jg
inc
mov
mov
fiadds
fnstsw
aas
cmp
daa
pop
rclb
lods
lahf
pop
test
push
sbb
aaa
mov
rcr
jbe
pop
aad
xor
in
lahf
mov
xor
or
out
sbb
or
adc
jg
sub
iret
sub
lea
test
mov
repz
sub
dec
shll
cmp
dec
aas
arpl
outsb
shl
fs
scas
imul
dec
int
bound
scas
cmp
mov
xor
inc
jmp
out
or
cmp
push
cmc
sub
rcrl
fnstenv
test
jb
cmp
fisttpl
push
ljmp
cmpsb
int3
fidivl
mov
or
mov
or
push
test
sub
dec
mov
in
into
jne
push
ret
mov
push
or
sbb
test
repnz
lods
fnstsw
add
sbb
leave
scas
fs
popa
lret
cmp
pop
shrl
xor
add
das
pmulhuw
and
and
out
cld
fs
daa
cmp
mul
cltd
pusha
testl
push
int
dec
dec
mov
cmp
push
rcrl
aad
mov
inc
data16
es
adc
xchg
negl
jnp
pop
xor
pop
aad
mov
repnz
into
sub
cld
aad
cmp
jge
cltd
mov
adc
arpl
cli
subl
adcb
pop
push
mov
push
stos
lods
int3
shrb
cmp
or
push
sti
mov
pop
stc
mov
jno
into
mov
outsl
aaa
and
mov
mov
insl
clc
movsl
test
inc
inc
fcompl
jne
pop
mov
push
mov
or
cmp
gs
ret
cltd
test
imul
daa
iret
sbb
jp
jmp
adcb
sbbb
xor
scas
adc
xchg
shll
add
sti
xchg
lcall
lods
repnz
fisubrl
mov
out
js
insl
movsl
out
add
lahf
mov
ret
pop
lea
sub
flds
xchg
repz
mov
mov
imul
xor
sub
xchg
mov
lcall
xchg
imul
mov
inc
sarl
imul
dec
adc
repnz
pop
shll
xchg
sub
jecxz
or
mov
lcall
stos
sbb
add
shrl
inc
pop
int
add
bnd
sub
cmpxchg
cli
or
jle
xor
inc
pushf
popf
sbb
push
push
cmpsl
pop
sub
sub
inc
fwait
push
jp
cmp
loope
test
inc
pop
or
pop
mov
ljmp
xchg
xchg
roll
lods
push
test
jo
rcll
xchg
and
loop
pop
pop
mov
cwtl
out
and
fwait
repnz
pop
lret
fisubrl
push
and
sbb
nop
fnstsw
repz
iret
push
mov
out
pop
int
mov
lods
or
inc
in
andb
fbstp
dec
push
test
shl
int
dec
push
out
dec
or
sub
cli
mov
out
shll
shll
adc
and
and
in
push
iret
cld
cs
call
fcmovb
addl
lds
inc
out
test
xchg
xchg
aam
out
cmp
fbstp
iret
dec
mov
out
loope
sub
pop
xchg
xchg
sbb
add
in
sub
pop
mov
pushf
ljmp
subl
lock
mov
addl
shlb
test
pop
jnp
mov
push
cmp
iret
in
pop
shl
in
mov
repz
sub
sti
das
setns
cmp
inc
jle
mov
pushf
fdiv
push
lahf
pushf
adc
in
arpl
add
ljmp
pop
in
jge
inc
inc
xor
imul
pop
stc
das
leave
xchg
xchg
in
jo
insb
sub
mov
gs
orb
sbb
push
in
or
orl
xorb
adcb
not
sub
and
data16
pop
sub
sbb
cmc
mov
rolb
or
or
sub
jge
sbbl
adc
mov
orb
fidivrs
ret
ret
mov
lods
push
bswap
pop
dec
inc
dec
dec
mov
pop
repnz
push
dec
sub
shll
cmp
mov
push
popf
icebp
inc
popf
int3
and
out
call
dec
adc
stos
xor
pop
enter
push
mov
mov
cmp
stc
ror
pop
and
aas
repnz
mov
dec
jae
fistpl
rorl
sub
les
cltd
bound
sbb
jno
push
fwait
dec
outsl
add
mov
enter
dec
mov
minps
outsl
cltd
inc
mov
shrl
xor
rcrb
xchg
cli
nop
and
mov
sbb
ss
fwait
div
pushf
or
in
mov
push
dec
lods
hlt
push
xchg
pushf
clc
sbb
add
nop
imul
adc
mov
fnstcw
nop
test
mov
mov
imul
add
loope
pop
adc
aas
bound
popl
jecxz
cs
mov
mov
call
pop
stos
aas
nop
lods
mov
push
mov
imul
push
mul
jg
mov
lcall
mov
sti
imul
fwait
xor
in
sbb
stos
add
cmp
xor
adc
cs
push
stos
mov
sub
dec
leave
stos
mov
dec
xchg
insb
ret
or
inc
aam
xchg
mov
mov
sub
add
imul
mov
mov
pop
lock
inc
cmp
es
sub
push
test
jns
std
jmp
mov
imul
ret
push
icebp
ds
jg
or
sub
push
dec
mov
inc
sbb
jno
adc
outsl
mov
adc
nop
dec
mov
lock
xor
jne
shll
cld
adc
repz
in
add
repz
out
xchg
fbld
lock
loopne
adc
push
add
je
dec
jbe
loope
cmp
sbb
shll
clc
dec
mov
mov
jnp
adc
mov
outsb
les
add
ficoms
inc
aam
test
xor
bound
mov
pop
xor
cmp
and
cld
test
sub
lahf
sbb
mov
loop
lret
fcmovnu
inc
xor
ret
jecxz
lcall
dec
fdivrl
jl
mov
dec
sbb
sbbl
xchg
or
movsl
pusha
enter
add
gs
mov
nop
xchg
push
imul
les
jle
sbb
push
jle
rcll
mov
pop
xor
and
fistl
sub
add
inc
xchg
xor
jmp
cli
mov
popf
sub
sbb
icebp
cmp
fsub
out
or
aam
cmpl
dec
push
sti
jle
out
lds
fstps
jge
push
in
cltd
dec
pop
notl
xchg
ds
loopne
xor
insl
adc
daa
sbb
pop
pop
pusha
call
sahf
in
sub
pop
fsubs
pushf
fs
lods
pop
js
in
sbb
out
bound
push
icebp
and
pop
aam
fwait
sub
enter
cmp
into
xchg
mov
mov
jp
xor
cmp
not
sbb
insw
in
cmc
mov
xchg
fisubs
loope
xchg
or
push
cmp
outsb
sub
jbe
sbb
or
ret
push
es
les
xchg
cwtl
ljmp
jmp
fstps
ret
or
js
rcrl
fwait
rcrl
and
xchg
lret
mov
xor
xor
cwtl
adc
js
in
pop
pop
sbb
aas
arpl
jle
push
leave
pop
push
and
inc
scas
pop
hlt
repnz
cmpsw
xor
sbb
mov
loope
push
in
inc
lret
out
clc
test
jbe,pt
add
fstpt
adc
fsubp
xchg
sub
mov
push
popf
adc
or
sbb
ljmp
sub
arpl
jnp
iret
push
xlat
fisubs
into
sub
xchg
xor
jns
in
jno
or
lods
inc
lret
push
idiv
rclb
daa
pop
jno
sub
jge
icebp
fldl
test
mov
lock
mov
xchg
mov
outsl
inc
test
outsl
les
dec
in
inc
bound
es
dec
std
sub
xchg
cli
sub
movsb
aam
test
pop
cmpsb
ret
mov
sub
subl
and
xchg
xchg
mov
stc
and
dec
clc
pop
faddl
mov
mov
pop
out
mov
adc
push
call
stos
pop
hlt
sahf
fadds
jle
scas
and
iret
imul
cld
dec
jp
mov
or
jb
dec
cmpb
scas
lds
sbb
in
lea
lods
je
das
shl
lods
sub
int
mov
xor
push
loopne
or
lods
mov
mov
adc
int
mov
out
mov
scas
ss
xor
push
dec
das
repz
mov
dec
mov
ss
push
mov
dec
push
daa
mov
je
roll
mov
lret
jb
add
inc
cltd
inc
rcll
sbb
pop
lret
push
ret
cs
mov
inc
loop
and
loop
inc
shl
push
push
push
sbb
fs
jno
dec
push
lret
mov
movsb
dec
xchg
mov
enter
stos
or
das
pop
lret
int
fnstcw
aad
loopne
jae
iret
and
fnstsw
mov
adc
adc
rclb
das
vmaskmovdqu
cmp
xor
sahf
outsl
sahf
js
lret
xor
cli
fucom
loopne
divb
scas
addb
sbb
pop
dec
pushf
imul
arpl
jnp
jp
stos
jg
mov
add
outsb
mov
loop
test
stos
in
cmp
out
sbbb
pop
xchg
insb
push
jle
pop
ret
xchg
or
imul
push
pop
loope
jl
mov
mov
adc
aas
nop
movsl
ficoml
repnz
cmp
jge
rcrb
ja
jno
and
ret
jl
add
sbb
jg
inc
loopne
xchg
pop
pop
inc
ret
or
out
in
cwtl
dec
xor
nop
outsb
jl
inc
fbld
outsl
or
sbb
dec
lds
sbb
addr16
int3
sbb
sbb
scas
add
int3
inc
roll
into
ret
xchg
jbe
xor
enter
cmp
xchg
mov
stc
xchg
sbb
add
add
cmp
add
movsl
je
dec
loopne
adc
icebp
shrb
or
pop
dec
lcall
mov
xor
into
mov
addr16
das
pop
mov
mov
das
mov
cmp
cmp
jnp
stos
addb
adcl
lea
jle
cmp
gs
les
cmp
and
les
bound
pop
shlb
sbb
ljmp
sbb
cmp
imul
icebp
iret
mov
sarl
sub
pushf
dec
add
lret
or
fdivrp
jno
aad
cmp
push
jo
inc
xchg
jne
push
mov
push
test
arpl
lods
adc
mov
jg
adc
dec
push
pop
es
popa
arpl
xor
pop
pushf
enter
into
pop
sbb
push
mov
loope
mov
or
enter
test
cmc
cmp
pop
mov
push
mov
stos
xor
jo
mov
and
xor
inc
std
mov
push
hlt
jmp
lahf
popa
adc
paddsb
aas
dec
jno
sbb
inc
mov
push
imul
xchg
vmovsd
test
mov
test
and
add
and
or
and
or
mov
sbb
test
shl
stc
jg
xchg
repnz
aas
dec
subb
aas
jge
je
mov
testl
je
outsl
jo
into
push
jb
xchg
rcr
sbb
mov
dec
push
stos
push
clc
push
xor
mov
jb
cmp
mov
xchg
aaa
pop
punpckhbw
dec
adc
xchg
add
pop
aaa
hlt
dec
adc
subl
ja
add
cmp
cmp
fstpt
sbb
loopne
data16
shl
jb
filds
out
mov
adc
xor
inc
outsb
call
pop
ficoms
stc
or
mov
mov
xor
mov
out
xor
sbb
dec
adc
test
mov
dec
ret
cs
in
lods
int
sbb
mov
push
repnz
je
hlt
add
push
outsb
std
and
sbb
xor
xchg
lret
fwait
test
cmp
negb
mov
and
add
jbe
loope
ret
std
jle
arpl
sub
mov
mov
pop
inc
sbb
and
std
xchg
pop
mov
inc
mov
fstpl
test
jb
aas
jae
cmpsb
add
pop
popl
idivl
out
pop
addr16
sub
aaa
cld
roll
push
jbe
and
xchg
inc
test
xor
dec
repz
ss
add
push
imul
sahf
sbb
test
sub
insl
loopne
mov
xor
lea
ja
dec
cld
mul
add
mov
push
jmp
sti
addr16
sub
orb
iret
sub
outsb
pop
mov
loop
pop
lds
in
ret
push
xorb
imul
xor
mov
cmp
add
shlb
movsl
xor
fists
popa
sub
adc
sbb
cmpsb
cmp
cltd
out
sub
xchg
scas
push
adc
mov
shll
mov
sub
cmc
insl
je
and
pcmpgtb
sub
push
out
push
cmp
mov
cmc
int
imul
add
or
add
mov
pop
inc
and
push
and
insl
xor
shl
mov
and
jg
inc
cmp
mov
adc
and
push
inc
in
das
mov
dec
push
push
jle
pop
push
sbb
fcompl
cmp
lret
or
mull
fnstcw
pop
arpl
aad
and
popa
ror
loope
adcl
mov
cmpsb
int3
stos
in
repz
in
sti
jl
stc
dec
mov
cmpl
lods
pop
into
pop
jmp
xor
lahf
and
fmull
sub
call
and
jo
outsb
inc
jns
pop
lret
out
adc
jnp
inc
sar
add
mov
stos
mov
insb
xor
insl
clc
outsl
clc
int
loop
stc
sub
cmp
mov
mov
and
pop
call
aaa
mov
divl
dec
mov
arpl
jne
adc
dec
addr16
xlat
ja
xor
xchg
aaa
adc
outsl
ret
or
or
clc
or
int
shr
sar
out
sub
sbbl
rcrl
jo
ret
push
je
scas
mov
xor
cmpl
pop
in
push
lods
nop
inc
mov
dec
inc
jmp
xchg
or
int3
ret
sub
jecxz
rclb
lds
rcl
cmp
and
ja
jbe
fldcw
pop
cmp
push
xor
and
xor
mov
push
xchg
sbb
imul
cmp
or
inc
sbb
push
into
lods
imul
jmp
push
bound
fsubrs
sbb
and
push
arpl
sbb
pop
movsb
aam
cmp
and
pop
data16
call
loope
into
jle
arpl
arpl
in
and
inc
fistpl
test
pop
add
mov
sub
inc
pop
adc
and
dec
imul
data16
fnsave
outsl
and
loope
mov
add
in
sbb
loope
mov
inc
adc
aas
add
lahf
mull
fiaddl
and
adc
xchg
cmp
inc
lds
imull
ljmp
add
mov
imul
mov
rcl
xchg
jns
jl
les
pop
xchg
add
repz
add
into
pop
add
inc
rcll
dec
and
mov
jle
mov
dec
xor
and
sub
add
inc
adc
inc
adc
sbb
ficoml
icebp
fdivrl
sub
sub
dec
stos
sbb
mov
dec
jge
jp
pop
jne
test
lcall
push
mov
int3
cli
pop
loop,pn
push
out
cmp
lds
mov
stos
icebp
xchg
adc
dec
sub
jb
dec
outsb
and
mov
in
pop
dec
add
and
or
repz
out
enter
lods
sub
in
mov
outsl
mov
push
or
cli
lcallw
sbb
sub
gs
push
test
and
jb
cwtl
stos
sahf
imul
push
fdivl
xor
mov
movsl
shlb
ret
push
jle
imul
leave
xchg
aaa
mov
cli
cltd
insb
mov
sub
and
and
push
sahf
or
test
out
xor
fbld
lods
lods
nop
rorb
or
outsb
or
add
pop
jecxz
sub
test
xor
fdivr
movsl
mov
ds
sub
dec
push
adc
leave
js
movsb
insl
pop
in
pop
orl
xchg
lea
xlat
mov
shrb
mov
cmp
lods
bound
mov
jmp
dec
fnstenv
shlb
out
loope
push
jns
ja
dec
push
flds
addr16
dec
icebp
outsl
es
mov
inc
xchg
xchg
jge
sarb
sub
repz
jb
xchg
faddl
push
repz
xlat
insb
fcoms
inc
or
dec
add
mov
mov
filds
adc
cld
or
int
aad
stc
mov
in
scas
lret
push
fidivrs
rclb
fcoml
mov
adc
mov
push
pop
cmp
imul
iret
adc
das
jno
test
xchg
sbb
pop
ds
jmp
adc
dec
sub
push
xlat
adc
in
mov
daa
mov
cmpsb
push
aam
int
loopne
hlt
sub
jl
xor
push
jle
stc
jmp
or
out
push
mov
rorl
sub
sub
mov
stc
inc
mov
adc
mov
or
xor
sbb
xorl
sbb
ja
out
sub
stos
dec
das
or
cmp
cmpl
mov
or
daa
pop
fcoms
jno
push
xor
inc
fxam
cwtl
dec
adc
jne
dec
cmp
or
aam
sti
mov
rolb
sub
and
pop
call
push
out
inc
lret
mov
mov
repnz
cmpsb
push
and
and
pop
jb
pop
rol
rolb
outsl
outsb
sbb
mov
cmpsb
into
aaa
imul
mov
pop
jbe
sub
incl
pop
pop
loope
mov
notl
mov
imul
lret
sub
subl
push
or
addl
xchg
fildll
pop
lock
int3
xor
xor
aad
fdiv
stos
movsb
jb
into
mov
scas
jl
iret
mov
insb
add
cmp
in
mov
nop
jb
cmc
mov
mov
in
cmp
jge
cmpsl
jo
jnp
sbb
jo
xlat
clc
sbb
push
shr
push
push
ja
cli
mov
push
sbb
jmp
gs
xchg
lds
sahf
inc
sahf
iret
pop
aaa
hlt
sub
xchg
outsb
fidivrl
orl
popf
repz
lcall
fbstp
aam
push
xor
enter
cmpsb
pusha
sub
push
test
cmc
lock
cmp
sti
cmp
add
mov
push
sub
outsl
push
mov
pop
adc
sarb
xchg
dec
push
loop
mov
xor
roll
mov
mov
push
and
push
xor
iret
add
dec
aas
cld
lret
mov
jno
sub
std
push
arpl
stos
ds
in
fs
rcll
jmp
pusha
mov
lahf
jb
push
je
mov
mov
scas
lcall
or
adc
pop
call
lret
pop
cmp
jl
and
fldcw
fwait
bound
sub
mov
fildl
ja
push
out
insb
shrl
dec
pop
das
sbb
mov
es
out
sub
pop
ja
ljmp
int
xorb
xchg
addr16
scas
daa
or
imul
in
rclb
popf
cmp
loop
in
imul
shl
iret
pop
fisttpll
pop
faddl
lea
cmc
test
mov
xchg
cmp
xchg
xorb
mov
inc
mov
lods
sub
xor
xchg
shrl
mov
hlt
notb
or
in
xchg
inc
cmp
cwtl
and
pop
jae,pn
shr
js
xor
int3
add
fimull
xchg
bound
popf
rolb
gs
inc
pushf
pop
cmpsl
lods
or
icebp
shrb
pop
mov
sub
stos
sahf
adc
dec
fucomi
out
scas
dec
pop
push
inc
ja
dec
mov
notb
mov
push
pusha
xchg
xchg
shrl
sub
dec
and
adc
mov
mov
mov
mov
dec
cmp
es
jno
push
jno
fstpl
xchg
aam
mov
fiaddl
xlat
std
xor
dec
sbb
out
sub
dec
shr
sub
cmpb
mov
cwtl
adc
fldenv
add
lock
push
pop
clc
cwtl
jb
xor
mov
andb
and
scas
pop
aaa
loope
repz
test
add
mov
aam
mov
nop
pop
xchg
xor
pop
jb
xchg
aad
sar
sbb
ja
jbe
shl
pop
stc
push
je
leave
daa
dec
jno
pop
and
pop
pop
addr16
mov
jle
pop
rol
pusha
in
divb
push
insl
cli
cmc
loop
insb
mov
xor
js
lahf
xor
stos
fcomps
ret
xchg
in
mov
mov
sbb
jg
leave
out
lcall
cmp
xchg
test
push
shl
sub
pop
fcmovu
jnp
aad
jg
jg
movsl
movl
js
dec
loopne
jbe
pop
jno
sbb
lret
xchg
mov
jb
jae
sub
dec
ljmp
sahf
mov
int
or
fidivrs
push
or
lds
fcmovb
or
sbb
xor
or
mov
bound
dec
xor
add
cli
mov
icebp
loopne
xor
add
inc
inc
mov
fcmovbe
mov
fbld
xor
push
mov
mov
jnp
mov
icebp
test
or
push
jne
repz
leave
movsb
test
out
and
pop
lea
add
cmp
inc
outsl
and
pusha
imull
or
or
add
outsb
mov
pop
mulb
test
repz
adc
clc
jp
inc
outsb
mov
lret
int
cmpsl
add
dec
data16
arpl
push
dec
inc
outsb
dec
and
push
xor
sahf
popa
mov
mov
mov
mov
adc
mov
jo
cmp
mov
cmp
idivl
xchg
test
pop
push
jmp
movsl
cwtl
adcl
mov
mov
loop
mov
outsl
jp
imul
jb
fnstsw
mov
hlt
out
mov
pop
sbb
pop
or
mov
adc
or
and
dec
xchg
push
sbb
adc
out
cwtl
mov
push
add
sbb
mov
push
dec
sbb
mov
imul
and
adc
mov
insl
std
adc
mov
mov
push
cmp
fadds
cld
or
test
cmpsl
cld
jmp
or
and
cmp
fsubr
jae
pop
and
cmp
dec
nop
cmp
shlb
in
xchg
sbb
jecxz
jle
adc
out
ret
xchg
loopne
inc
mov
in
ds
je
gs
push
fsubrs
loope
mov
jns
lcall
andl
and
mov
loop
jo
repnz
adc
mov
and
fidivs
cmpsb
sub
xor
mov
xor
scas
loope
jnp
push
iret
push
ret
push
pop
xor
jns
and
rorb
filds
mov
sbb
shlb
lock
add
mov
imulb
or
icebp
jne
mov
dec
fldenv
push
pop
fidivrs
cmp
sub
xor
pop
stc
call
arpl
movsb
push
or
dec
ret
push
mov
negl
push
dec
or
sbb
adc
jnp
or
pop
test
mov
ret
daa
cs
shl
daa
xchg
xor
iret
xchg
adc
or
add
es
mov
and
std
sub
mov
push
jecxz
loopne
test
ret
xchg
inc
pushf
adc
adc
mov
fwait
sahf
mov
sbb
les
negl
in
repnz
push
out
pusha
push
ja
nop
idiv
jno
xchg
lret
leave
mov
es
fstpl
repnz
outsb
pop
frstor
mov
test
lock
adc
iret
pop
loope
mov
aaa
cmp
jge
ret
pop
pop
jno
clc
cmpsl
sbb
in
jmp
pushf
add
jge
test
imul
lret
cmc
pop
fnop
mov
movsl
and
jne
popa
cwtl
dec
xchg
fidivrs
dec
pop
sbb
idivb
adcb
sub
cmp
xchg
xor
out
mov
cmp
xor
xor
adc
clc
fcoms
xchg
pop
and
call
pop
mov
and
pop
gs
out
in
test
cmpl
sbb
jmp
mov
iret
repnz
jo
push
fstpl
push
notb
shrb
iret
push
jl
outsl
popa
mov
inc
cltd
jae
or
or
push
and
push
cmp
imull
inc
inc
test
add
xlat
mov
adc
out
cltd
fs
push
fs
mov
inc
xchg
aam
mov
cmp
mov
sub
sti
push
adc
cmp
push
icebp
out
cmc
or
stos
inc
in
pushf
fistpll
inc
out
jge
sub
inc
jbe
stc
shlb
ds
inc
test
clc
std
arpl
test
scas
repz
ret
inc
inc
fsubs
pop
sub
xchg
jno
repnz
jmp
adc
push
addr16
test
cmp
dec
cltd
pop
enter
sbb
xchg
mov
out
jecxz
mov
push
repnz
xor
sbb
push
imul
xor
in
dec
cmp
adc
cld
cmp
add
xor
das
mov
fbstp
and
aad
push
rcrl
pop
xchg
popl
and
xchg
cmpsb
sbb
pop
adc
adc
xchg
xchg
mov
sbb
into
push
orl
cmp
cltd
sub
xchg
stos
mov
je
jne
xchg
cmp
out
cmp
dec
pop
mov
sbb
mov
sahf
test
jne
loop
in
jb
pop
dec
jmp
in
in
or
inc
movsl
mov
ret
ljmp
outsb
push
cmp
adc
jle
stos
sub
pushf
fdivrs
cmpb
lret
jmp
add
fldenv
js
aas
into
lcall
aam
loop
test
sub
aas
in
adc
mov
dec
and
and
pop
pop
jae
dec
loope
lds
mov
imul
outsl
lea
cmp
cwtl
push
push
les
mov
or
test
insl
daa
and
jmp
or
shr
xchg
mov
inc
xor
pushf
loopne
cwtl
shl
pop
sub
ds
xchg
stos
in
sub
lahf
mov
mov
movsl
jno
mov
call
xor
iret
ror
ja
out
xor
pop
add
cmp
sbb
mov
stos
jle
and
xor
shr
jg
or
dec
sub
mov
push
sbb
push
adc
outsb
pop
loope
outsl
add
xchg
insb
aam
fnstenv
adc
in
pop
jg
stos
push
adc
mov
add
fdivrs
cmp
dec
sub
sbb
je
loope
dec
ror
cmp
jge
push
add
adc
imul
mov
cmp
inc
hlt
cmp
dec
mov
out
loope
jae
mov
inc
cmp
mov
jge
leave
cld
jno
push
rcl
push
enter
push
jecxz
jb
scas
cmp
fwait
jo
in
lret
xchg
fidivrs
sub
aaa
pushf
pop
mov
xchg
cmp
xchg
or
insb
dec
adc
xlat
lock
iret
in
outsb
arpl
out
out
shl
je
lret
jmp
mov
or
fwait
imul
out
dec
dec
dec
cld
and
mov
loop
popa
ja
pop
sbb
out
pop
mov
clc
sub
mov
adcl
js
fwait
xchg
js
cmp
daa
jge
loop
incb
int3
jp
push
xchg
dec
push
push
push
mov
gs
ret
cmc
out
negb
lods
lret
push
es
mov
xlat
rorl
fwait
ljmp
inc
ror
lret
test
stc
es
push
aas
sbb
ss
jbe
mov
call
adc
jecxz
leave
or
inc
push
aaa
fstps
jmp
cmp
icebp
loop
mov
cmp
push
sub
and
paddd
or
add
insl
gs
dec
stos
lea
mov
inc
or
loop
mov
pop
rorb
das
ret
std
call
push
lods
lock
jnp
dec
xor
shrb
test
repnz
pop
lock
mov
ljmp
loop
icebp
add
loop
inc
jmp
pop
pop
scas
sti
ja
test
test
push
insb
xchg
popl
jae
outsl
loop
repz
mov
in
jmp
mov
inc
lret
lods
lock
and
dec
aad
mov
fwait
popa
addr16
jbe
mov
jb
sbb
xchg
je
jbe
adc
add
fs
addr16
push
jp
jle
sbb
fldt
xchg
jnp
xchg
pop
cltd
sub
dec
and
les
loope
aas
sub
lret
adc
mov
aam
xchg
pop
inc
fiadds
out
addr16
nop
xchg
and
cmp
cmp
add
ret
xchg
push
loopne
xchg
sub
add
lods
sbb
test
mov
test
xchg
and
xor
in
addr16
jecxz
xchg
push
aad
arpl
push
pop
xlat
pop
movsl
scas
mov
iret
xchg
ja
mov
aad
ss
add
inc
std
push
mov
jno
push
jmp
notb
and
in
popf
nop
inc
jbe
and
cmp
out
icebp
out
jae
movsb
xchg
stos
clc
adc
fwait
popa
call
inc
adc
out
hlt
sbb
adc
add
loopne
scas
aaa
sbb
add
sub
xor
jp
add
andb
icebp
cmpl
shlb
test
mov
and
sub
jbe
push
gs
loopne
data16
shlb
xchg
jb
in
outsl
lea
inc
movsl
or
in
adc
push
insl
sbb
add
cwtl
jmp
sub
mov
dec
aam
or
shrl
inc
sbb
inc
lea
pop
push
test
cmpsb
cmp
mov
fwait
mov
jle
js
je
mov
jmp
outsb
inc
lds
jbe
shl
sbbl
bound
push
jno
mov
and
push
in
sti
cli
cld
or
sahf
dec
mov
fstpt
ljmp
push
aad
and
pop
dec
push
push
ret
repnz
arpl
sub
es
leave
dec
call
xchg
jnp
shlb
cmp
jnp
mov
sbb
add
jle
in
leave
int3
mov
gs
aam
ljmp
mov
outsl
das
cmp
jbe
inc
and
dec
fildl
adc
add
mov
push
push
xchg
lcall
pushf
loope
dec
pop
or
pop
jmp
aaa
popa
push
insb
sbb
punpcklbw
mov
xlat
mov
add
jae
incl
ror
bnd
pushf
lock
loopne
add
xchg
xor
xchg
aam
stos
pop
pop
fnsave
jl
mov
dec
adc
aaa
imul
mov
lcall
cmp
and
pop
ja
mov
add
lock
bound
sub
adc
aad
fdiv
adc
pop
aad
test
notl
xor
cmpsb
add
ret
adc
push
fstps
ss
cli
lods
pmulhw
and
xor
or
sarb
or
jno
aad
add
push
test
fdivrp
iret
cmp
shlb
fdiv
loopne
sbb
pop
in
std
sbb
xchg
sarb
icebp
add
lret
add
dec
js
push
or
scas
ret
ds
mov
jns
addb
fcompl
rcr
pop
loopne
push
jg
sbb
jae
push
xor
sbb
fs
js
cwtl
mov
insb
inc
adcl
out
xchg
roll
mov
mov
pop
and
clc
inc
aaa
sbb
loopne
and
mov
lods
or
cmp
subl
je
jae
jl
mov
adc
mov
inc
xchg
xchg
popf
mov
mov
mov
sub
cmp
mov
sahf
mov
andb
mov
sbb
int3
push
sbb
inc
inc
imull
stos
cs
xchg
mov
mov
add
add
loop
adc
stc
xchg
or
jg
cmp
imul
sti
out
clc
or
loope
pop
popa
and
adc
mov
repnz
int
js
repz
test
cmpsl
jo
ret
and
jb
clc
into
idivl
mov
push
mov
mov
pushf
jge
mov
mov
insl
icebp
cmpsb
movsb
repz
sbb
cmc
pop
iret
xor
cmp
shrb
push
mov
fwait
cmp
insl
mov
gs
ret
fisubrl
add
add
or
adc
mov
or
cli
pop
scas
aaa
les
mov
sub
push
int3
dec
loope
mov
sub
out
lcall
inc
mov
sbb
xchg
js
mov
cmp
jmp
mov
mov
cmpsb
or
cmp
jle
sub
mov
cmpsb
sbbl
jle
in
add
shlb
or
std
xor
mov
cmp
aas
das
and
push
aas
aad
nop
push
xchg
dec
cmp
jecxz
xchg
and
aad
ljmp
xchg
jge
mov
xchg
cwtl
loop
sbb
ret
or
test
sahf
and
sub
xchg
pop
mov
loopne
add
ss
movsl
and
xor
in
jle
mov
jnp
mov
icebp
out
pop
mov
mov
jnp
jae
loopne
cld
in
jmp
inc
popf
jle
mov
js
dec
inc
xlat
cmc
mov
mov
jb
adc
inc
inc
adc
mov
clc
mov
fstps
lods
push
pusha
xchg
ret
rolb
subb
icebp
rol
das
pop
lock
sbb
jl
ja
scas
push
in
lret
mov
stos
xor
jge
dec
insl
mov
nop
xchg
sbb
sbb
lcall
add
pop
mov
imul
adc
mov
fadd
add
and
sub
sti
add
mov
stos
xor
sbb
sahf
mov
cmp
xchg
xchg
pusha
ss
jmp
cwtl
sub
mov
jp
lahf
pop
cmp
inc
mov
out
test
jne
dec
push
and
push
sbb
inc
nop
cmp
loopne
mov
mov
rcrl
pop
jno
xchg
sub
or
stos
aam
push
adc
dec
add
mov
sbb
mov
xor
inc
mov
inc
mov
mov
add
push
arpl
jbe
push
fxch
inc
ljmp
xchg
fnstenv
cmp
leave
out
or
mov
jp
jo
scas
mov
mov
sub
loope
jnp
dec
cld
ret
int3
add
pop
pop
imul
mov
dec
sub
es
jne
pushf
mov
fcompl
popf
sub
adc
sbb
add
and
outsb
cltd
xor
sub
adc
insl
jg
push
ror
data16
xor
pusha
pop
addr16
jbe
pop
adc
adc
arpl
mov
test
rcrl
rcll
pop
xor
pusha
jge
hlt
mov
push
stos
xchg
int3
adc
movsb
adc
inc
pop
std
dec
inc
setae
add
add
pop
test
dec
pop
sub
ret
mov
insb
jne
jae
addr16
in
jg
mov
call
add
pop
call
cmp
dec
sbb
mov
scas
dec
cli
xchg
and
int3
loopne
push
stos
jle
xlat
pop
add
jo
jbe
imul
call
mov
std
dec
lods
cmpsb
ljmp
shrb
sbbb
out
jecxz
and
sub
add
pushf
sar
loope
scas
cld
xor
mov
mov
inc
mov
or
pop
scas
inc
mov
sbb
out
jg
lock
mov
ret
xor
stos
ss
in
aaa
orl
cs
xchg
pushl
sbb
push
jbe
xor
mov
xchg
or
daa
sbb
xchg
mov
jb
or
jns
loopne
je
jne
xor
and
sub
cli
je
inc
ljmp
testb
xchg
cmpsb
pusha
dec
das
nop
and
jmp
or
mov
sbb
je
and
jecxz
out
and
push
jp
les
sbb
out
sub
test
jle
dec
stc
cmp
inc
movsb
fildll
loopne
pop
jno
cmp
sti
cmpsb
push
xchg
pop
lcall
jb
cmpsl
aam
xor
pop
out
sbb
pop
sbb
repz
psllq
ljmp
and
and
or
into
stos
pop
inc
sti
jmp
push
pop
mov
mov
inc
sbbl
lods
stos
roll
imul
repz
mov
iret
popa
dec
pop
hlt
outsb
pop
mov
or
jbe
in
cmpsl
outsl
sbb
pop
scas
fsubrs
ss
push
jnp
dec
cmp
push
fmull
subb
into
ss
sub
fmull
notl
pop
cmp
test
fldl
les
test
add
inc
xorb
push
adcl
jne
cs
fcomps
call
pop
into
mov
ror
cli
fwait
movsb
xchg
xchg
or
mov
sub
and
jl
or
add
mov
push
sub
push
mov
or
shrl
sub
pop
xchg
outsl
sahf
repz
sub
jno
cmp
imul
cmpsl
jno
fiadds
pusha
pop
pop
and
xchg
adc
inc
push
clc
mov
jp
fwait
jecxz
cld
sub
sub
cmp
leave
mov
inc
dec
addr16
jp
mov
mov
inc
inc
xor
or
dec
push
push
arpl
sbb
sub
mov
pop
mov
pop
sub
dec
jl
lcall
shll
xchg
cld
call
sub
lahf
adc
loope
push
inc
loopne
jae
mov
mov
movsl
cmp
loope
jnp
adc
out
mov
xchg
insl
push
fistl
rolb
sbb
mov
xlat
mov
lods
lds
and
ret
movsb
add
pushf
inc
mov
xor
sub
dec
shll
icebp
xchg
sub
mov
xchg
insl
or
ret
adc
dec
xchg
sahf
sub
mov
gs
mov
push
sub
xor
mov
jle
jl
outsl
insl
outsl
adc
adc
inc
jmp
lods
out
sarb
push
sbb
gs
bound
pop
push
mov
push
mov
pop
pop
cmp
dec
lods
addl
fcompl
xchg
xchg
inc
ret
jo
inc
fwait
rcrl
negb
es
xor
cmp
jne
push
ds
repnz
pushf
xor
xlat
int
adc
out
inc
mov
add
and
mov
je
fisttpl
adc
mov
cmp
cs
mov
pop
mov
and
or
jmp
cmp
cld
dec
rcrb
push
pop
out
dec
mov
cmp
dec
dec
mov
mov
jmp
mov
add
dec
mov
idiv
stos
add
mov
cmp
aam
mov
shll
mov
inc
ljmp
inc
mov
ljmp
jnp
pop
fpatan
mov
mov
push
jecxz
loope
das
and
in
push
jb
leave
out
stc
xor
mov
mov
pusha
arpl
jne
fstpl
jns
push
dec
and
fs
xor
adc
jle
cmp
repnz
xchg
lcall
out
ljmp
pop
enter
add
lods
lods
cmp
sbb
xor
inc
inc
inc
int
fmuls
push
mov
pop
sarb
stc
sti
cld
jl
xchg
cmpsl
pop
or
pop
sti
mov
ret
jp
adc
mov
add
movsb
pop
and
js
out
paddw
rcrb
jecxz
xchg
dec
inc
lea
push
loop
dec
inc
in
jmp
pop
lahf
sub
into
std
mov
pop
pushf
jnp
fmulp
or
xchg
push
sub
xchg
ret
add
push
jle
mov
jmp
dec
repnz
jecxz
xor
dec
js
icebp
mov
or
lods
loop
int3
pop
int3
and
lcall
pop
shll
mov
mov
jo
fisttpl
popa
push
and
or
shrb
mov
dec
movl
lea
lods
mov
popa
mov
test
hlt
xlat
jns
jmp
mov
fldcw
lds
inc
fdivrs
stos
pop
negb
and
out
mov
cwtl
or
orl
sti
push
pusha
sub
pop
js
ret
jo
xchg
mov
ljmp
cmpsb
loop
mov
fwait
mov
cmp
adc
inc
das
in
fmulp
nop
mov
mov
mov
addr16
mov
push
aaa
or
and
lea
cs
lods
rclb
movsl
scas
pop
push
pop
repz
xchg
push
lock
test
icebp
test
mov
call
push
inc
lret
adc
and
hlt
dec
jne
decl
xchg
test
ljmp
repz
clc
pop
sbb
jmp
pop
test
mov
xor
mov
jp
xor
ret
mov
push
dec
fs
xchg
jmp
lods
dec
mov
mov
shl
and
push
xor
adc
ljmp
aaa
js
mov
aad
iret
scas
sbb
in
cmp
ds
mov
mov
lock
arpl
stc
cmpb
pop
insb
jno
xor
sbb
sub
movsb
cmpsl
jp
stos
into
add
or
push
sbb
clc
cmc
lret
pop
fists
and
sti
in
pop
xorl
ljmp
movsl
iret
inc
hlt
faddl
call
push
sub
sbb
or
jmp
and
pop
leave
cmp
inc
and
aaa
out
adc
pop
imul
or
mov
mov
test
mov
mov
sbb
mov
pop
or
cmpsb
rorl
fisubs
or
ficomps
lock
mov
pop
mov
int
int3
daa
or
inc
int3
popf
jae
and
sub
xor
push
cmp
das
push
jb
dec
mov
or
jg
dec
mov
movsl
icebp
fisubl
lods
mov
and
add
adc
ret
into
cwtl
mov
sti
andl
sbb
mov
ret
icebp
cli
fs
mov
popf
addl
dec
dec
and
fildl
out
cmp
xchg
push
fimuls
mov
lret
mov
dec
lods
icebp
pop
jmp
call
into
call
push
sub
jnp
ret
fstpl
mov
shrb
movsb
fisubs
ljmp
popf
dec
xchg
mov
and
filds
and
stc
sbb
and
lea
cmc
cli
sub
dec
xor
shrl
xchg
xchg
in
push
out
jle
jg
lock
and
and
and
xor
dec
adc
jmp
in
data16
push
int3
loopne
faddp
inc
pop
imul
pop
ja
cmp
push
or
xor
pop
mov
cmp
mov
pushf
inc
pop
and
add
stc
mov
sub
jg
lea
pop
lahf
push
dec
mov
pusha
xchg
in
hlt
cmp
xor
lds
sahf
inc
xchg
in
outsl
xchg
xor
loop
test
aam
imul
jmp
hlt
ja
scas
stos
repnz
movsl
fbstp
sub
jno
lcall
push
mov
mov
mov
sbb
out
arpl
insl
dec
insb
lock
adc
leave
add
hlt
xchg
loop
push
or
es
mov
or
mov
dec
cmp
call
ss
mov
mov
sti
out
lret
add
sbb
inc
adc
js
inc
insb
sub
inc
and
into
jo,pn
push
pop
jb
sbb
mov
lahf
pop
add
cltd
add
dec
cld
cmp
pop
mov
push
icebp
cmp
xchg
shl
ja
fmul
or
or
and
leave
add
push
cmpsb
or
jno
ss
ret
pop
jge
subb
pop
jae
push
push
les
sbb
dec
insb
stc
xor
ret
mov
incb
inc
pop
lock
mov
scas
loope
into
mov
mov
sbb
outsb
into
popa
insb
sbb
mov
enter
push
test
testb
pushf
into
jne
lea
lcall
stos
inc
orl
insl
push
cli
xlat
pop
jge
dec
pop
mov
lret
or
adc
cmp
fcmovnu
sbb
sub
xor
jecxz
mov
shll
repnz
cmc
mov
sbb
insb
or
push
rorl
add
push
mov
lds
lock
push
sbb
jmp
adc
outsb
jmp
ss
sub
mov
add
stos
mov
sub
jg
neg
icebp
sub
cwtl
ds
enter
out
repnz
repz
inc
jo
sbb
sub
loopne
fwait
inc
shll
in
in
mov
xchg
dec
inc
inc
test
jl
mov
add
clc
gs
lahf
loope
sub
xlat
lods
outsb
rolb
xchg
cmp
xor
into
mov
sbb
sub
in
jmp
jl
andl
sahf
enter
xor
adc
xor
sarb
das
cmc
push
mov
ret
and
shr
sbb
xor
movsl
fstpt
xchg
fucomip
xor
jne
repnz
int3
jge
dec
inc
movsl
cli
je
lea
data16
loopne,pn
xchg
inc
sub
inc
add
xor
push
push
in
arpl
lods
test
push
enter
push
ror
pop
dec
mov
and
adc
loope
sbb
sti
fs
gs
adc
popa
lret
push
aas
mov
pop
pusha
push
sbb
mov
movsl
in
mov
xchg
xchg
xor
fcoms
add
rcll
xor
jae
mov
xchg
call
mov
or
out
outsl
mov
test
aam
xor
mov
mov
arpl
cmp
data16
mov
fiadds
or
loop
adc
andb
mov
test
pop
and
gs
dec
mov
aaa
testl
push
adc
dec
mov
ja
cmc
pop
movsb
fucomi
jp
mov
pop
lock
shrl
lock
sarl
inc
adc
adcb
fwait
in
pop
popa
mov
mov
xchg
add
or
inc
stos
dec
mov
clc
lock
repz
scas
inc
fisttpl
je
jbe
movsl
sbb
mov
rep
std
push
xchg
daa
and
or
adc
in
push
int3
daa
subb
and
dec
in
inc
fbstp
mov
out
push
sub
push
jb
inc
std
bound
hlt
or
cmp
int3
push
sti
xor
push
fisttps
mov
mov
sub
pop
fstl
fmul
mov
dec
shrl
inc
cmp
iret
mov
push
adc
pop
xor
or
mov
jge
mov
jge
cli
mov
mov
dec
dec
mov
cmp
lods
inc
inc
lock
jb
adcb
out
imul
add
imul
inc
mov
rclb
inc
and
bound
adc
cmp
inc
push
add
add
int3
lcall
mov
sub
or
fcoml
lock
popf
xlat
stc
adc
loope
ljmp
adc
stos
or
inc
add
in
add
loopne
inc
fcomp
mov
lock
test
fiadds
or
inc
jnp
addl
jno
jecxz
mov
mov
lahf
pop
dec
lds
mov
jp
repnz
inc
js
mov
lods
dec
loop
cmp
xchg
cmc
mov
inc
mov
inc
ljmp
mov
out
sbb
subl
leave
sbb
inc
scas
push
iret
xchg
mov
dec
shr
pop
mov
psubd
roll
imul
je
loop
leave
iret
jne
stc
fidivrs
fdivrl
fiadds
cltd
sub
mov
outsb
adc
adc
dec
mov
rcrb
cs
push
push
jo
and
push
sbb
mov
clc
cmpsl
push
jo
inc
cmpsl
push
mov
testl
xor
sub
mov
divl
out
out
sti
mov
or
fldenv
test
vucomiss
xchg
out
adc
popa
and
or
sbb
pop
mov
sub
les
popa
lea
insb
pushl
mov
jno
mov
mov
push
clc
fwait
sbb
mov
inc
in
iret
pop
into
lret
daa
clc
jo
xchg
and
roll
dec
xor
jne
fs
inc
jmp
lret
icebp
ret
mov
mov
stos
mov
mov
rcll
cmp
and
xor
jg
test
or
out
in
je
dec
fildl
xchg
stos
cmp
test
ret
imul
loopne
adc
xchg
pop
pop
sbb
jle
out
add
mov
cwtl
pop
xchg
lea
fnsave
aam
pop
push
mov
push
aad
jmp
xor
repz
rcll
jne
mov
inc
jo
mov
mov
add
gs
adc
loopne
hlt
mov
enter
jp
sub
cmp
inc
cmp
adc
jo
loop
inc
jb
jmp
adc
mov
add
jl
cli
inc
daa
dec
mov
inc
xchg
test
mov
popa
cwtl
fstl
xchg
xchg
shlb
pop
cmpsb
mov
test
lcall
fwait
and
xor
cmc
outsb
jge
xchg
xchg
rcl
movsb
jp
int
push
out
test
adc
mov
mov
inc
mov
dec
hlt
or
xor
mov
inc
lods
sbb
addr16
push
push
xchg
xchg
dec
testb
xor
lret
xchg
test
add
nop
lods
xchg
cmc
mov
pop
mov
out
outsl
imul
loop
add
sbb
adc
clc
jne
popf
pop
stos
bound
call
push
push
pusha
pop
mov
xchg
out
dec
xchg
lcall
int
fstl
aas
and
sti
inc
imul
mov
jno
jbe
shrb
ret
adc
inc
fldcw
ljmp
arpl
mov
jb
push
and
ss
out
jne
dec
lcall
push
cmp
mov
adc
out
sub
lds
sbb
shll
gs
xlat
fs
ret
or
cmp
andb
mov
jl
pushf
imul
aaa
inc
stc
test
jg
push
psrad
lea
cmpsl
loop
aas
push
xchg
and
dec
mov
pop
push
mov
inc
jb
das
xor
mov
xor
shlb
movsb
mov
xchg
lahf
call
cwtl
ficomps
leave
inc
pop
fs
jae
dec
add
jl
jo
adc
test
lret
repnz
xchg
jl
insl
insb
pop
mov
jmp
incb
xor
fisubrs
add
mov
cwtl
push
pop
popa
pop
adc
pop
fcomps
adc
js
or
mov
test
mov
dec
pop
mov
insl
mov
stc
pop
out
daa
and
cmpsl
pop
sub
scas
in
jp
daa
adc
aaa
test
jmp
jg
mov
aaa
push
mov
ret
cmp
pop
jl
movsl
add
jge
jge
lcall
scas
test
out
inc
dec
mov
push
jge
mul
push
fwait
push
iret
iret
mov
sub
les
lea
add
xchg
sbb
cmpsl
xchg
sti
loope
inc
cwtl
inc
pop
inc
inc
notl
xchg
ret
movsb
out
call
xchg
movsl
adc
adc
lods
test
jge
sti
add
jecxz
xchg
cmp
insb
push
mov
jo
mov
jb
cltd
pop
xchg
aam
mov
fildll
cmpsb
xchg
incb
sbb
mov
xchg
pop
mov
call
scas
dec
xchg
cmpsb
daa
pop
lcall
push
jg
add
aam
int3
xchg
stos
adc
pushf
sti
xchg
cmp
pop
subl
bound
xchg
loop
sbb
cmp
jge
fcomps
push
cmp
pop
sub
pop
mov
sbb
nop
mov
stos
dec
push
sub
addr16
outsl
mov
and
mov
xchg
adc
cmp
push
pusha
and
addr16
ret
negb
outsl
mov
mov
sub
dec
push
ss
lcall
push
cmc
mov
out
andl
pusha
cmpsb
adcl
mov
mov
push
adc
push
mov
test
push
xchg
xlat
out
pushl
insb
das
dec
sahf
sbb
xchg
ljmp
ljmp
mov
filds
in
repz
inc
mov
movsb
es
mov
or
mov
xor
sub
nop
push
mov
pop
shll
dec
std
lods
std
pop
dec
arpl
movb
cmp
sahf
cmp
notl
in
and
mov
subb
fadd
jmp
andb
jg
popa
lret
and
push
xor
andb
sbb
mov
loopne
pop
and
mov
xor
mov
xchg
fst
or
call
pop
pop
push
enter
and
lea
mov
dec
out
sarb
jp
nop
test
je,pn
repz
cld
lcall
or
push
out
push
insb
mov
mov
mov
or
adc
lret
cli
test
shr
inc
xchg
cli
aaa
mov
mov
xchg
xor
xchg
addr16
ret
xlat
sub
cmp
fucomi
cld
push
pop
xor
adc
lahf
sbb
xchg
ss
mov
ss
pop
mov
lock
xchg
and
loope
orl
test
mov
daa
push
push
dec
mov
mov
insl
xchg
lods
lret
dec
in
mov
shrl
inc
mov
push
lock
scas
icebp
mov
fidivrl
pop
cmp
movsl
fs
adc
fdivl
jne
jnp
xor
sub
outsl
rcll
mov
fimuls
out
call
mov
pop
inc
into
in
and
lds
outsl
jecxz
call
orl
rorb
jno
testb
mov
das
mov
es
movsl
pop
jbe
fxch
and
sub
lret
in
xchg
popa
cmpsl
add
mov
mov
test
test
sbb
in
jmp
xchg
fildl
int
lcall
mov
jp
sub
les
and
and
jnp
add
cmp
repnz
std
push
xchg
bound
sarl
lock
stc
repz
mov
dec
sub
andb
xor
pop
pop
jnp
js
push
and
inc
xor
ret
loopne
loop
ret
adc
add
xchg
mov
popa
lds
mov
pop
outsl
dec
ss
xor
xchg
xor
xchg
fcmovnbe
mov
ret
cltd
rorb
insb
sub
and
cwtl
mov
jg
scas
xchg
into
lret
add
and
sbbb
adc
fwait
rcr
shll
pop
cmp
inc
fwait
xchg
cmp
adc
int3
fs
push
mov
fstl
adcl
push
pusha
scas
mov
je,pt
mov
insb
outsb
outsl
sti
mov
scas
movsb
sti
push
jp
and
lret
std
mov
iret
mov
ds
jecxz
testl
sub
add
fwait
notl
inc
jns
int
mov
jb
imul
pop
dec
loopne
cltd
dec
adc
pop
mov
jne
jno
aam
sbb
jnp
xchg
mov
roll
add
pop
shll
leave
imul
jbe
add
xchg
loope
fs
inc
lahf
mov
rcl
push
lea
xchg
ret
arpl
aas
mov
xchg
sbb
loopne
insb
push
lahf
sub
mov
cwtl
cmp
mov
out
addl
inc
xchg
xchg
lods
pop
push
loope
mov
test
or
mov
push
ficomps
or
aad
iret
pop
aas
cltd
inc
mov
dec
cwtl
xchg
fdivl
adc
andb
xor
decb
push
xchg
stc
lods
push
push
or
cwtl
lahf
arpl
cmovno
ds
xor
cmp
adc
cmpsl
les
and
dec
pop
js
push
xchg
xor
adc
and
incl
into
lock
cltd
dec
leave
sub
push
mov
add
fcomps
mov
fisubs
push
test
push
inc
fcomps
out
pop
adc
dec
fwait
mov
jp
rolb
jp
sbb
dec
gs
int3
test
inc
test
sbbl
stc
push
scas
and
cli
cmpsl
xchg
pushf
jg
xchg
jg
test
je
ja
push
loopne
dec
mov
sahf
shlb
push
shr
sbb
jmp
cmp
call
notb
cltd
xor
inc
in
repz
movsb
mov
bound
aam
mov
in
push
jmp
cmpl
leave
shlb
lret
pop
icebp
jge
and
cmp
xor
jae
jle
mov
in
and
imul
cmp
push
dec
inc
sbb
adc
or
jne
push
or
cmp
gs
add
out
shrl
fistpll
sub
or
insl
fnstenv
inc
push
jae
push
dec
pop
cmp
jmp
cmp
push
inc
test
mov
cltd
sbb
sti
xchg
outsl
cli
out
sbb
mov
in
mov
loope
dec
push
int3
orb
rcr
rolb
daa
js
pop
add
mov
push
test
aam
cltd
enter
insb
jo
movsl
add
enter
mov
adc
pop
mov
inc
nop
xchg
inc
mov
xorb
sahf
in
sub
xchg
push
mov
mov
sub
sar
cld
rdpmc
testb
jmp
or
lods
inc
testb
ja
test
cmp
sbb
add
or
xor
cmp
jl
push
test
adc
vpavgw
mov
ja
fnstcw
jbe
popf
lods
in
add
enter
cmp
xor
xchg
xor
cmp
push
lret
pop
aad
and
aam
dec
or
jne
in
sub
and
loop
enter
insb
aam
adc
add
push
popf
push
fdivr
scas
adc
and
inc
popa
sbb
cmpsl
bound
cmp
mov
inc
xchg
or
icebp
fwait
stc
call
inc
or
and
xor
js
dec
rcll
or
mov
cld
shrl
cmpsl
lods
lret
faddp
stos
ss
jno
clc
xchg
jb
inc
fs
addr16
and
shlb
popf
std
xlat
outsb
adc
call
cs
aad
xchg
lahf
outsl
stos
call
loope
sub
cwtl
and
icebp
xchg
dec
inc
add
sbb
and
pop
cmp
call
push
xorb
push
out
mov
lcall
into
lock
pushf
sub
sbb
and
daa
sub
pusha
cmp
mov
adc
cltd
sbb
sub
int
pop
mov
sub
outsl
inc
jge
pop
fists
jg
out
mov
sbb
enter
mov
stc
cmp
test
ds
lock
test
notl
dec
cwtl
adc
cmp
sub
pop
jns
and
sarl
pushf
repnz
int3
shlb
xor
mov
loop,pn
cs
jnp
inc
jae
push
sbbb
test
inc
jp
and
push
inc
stc
mov
push
dec
push
and
test
inc
push
mov
mov
mov
xchg
les
cltd
jb
mov
sub
add
mov
rcl
jne
fwait
pop
inc
jp
aaa
cli
aas
mov
xchg
sbb
call
mov
xor
pop
insb
test
add
bound
cmp
js
push
dec
outsl
dec
into
adc
pop
pop
movsb
adc
movsb
push
jbe
add
adc
xor
insb
adcb
sub
add
add
mov
clc
fisubs
aam
cmp
xor
in
adc
mov
es
lret
stos
movsb
daa
sbb
jo
aaa
add
pop
sarb
fnsave
or
inc
pop
jmp
push
and
js
shrb
shll
or
add
adc
movsl
rolb
inc
adc
aas
pop
fdivs
stos
xor
mov
stc
xchg
loopne
pop
cmp
push
jmp
dec
jns
stos
fcomip
jl
lcall
repnz
push
mov
and
sbbb
cwtl
inc
inc
push
adc
jg
push
pop
aaa
lods
push
jmp
xor
icebp
mov
jno
jbe
xchg
push
or
fs
in
sub
mov
or
out
loope
dec
fwait
mov
stos
lock
sbb
mov
jbe
inc
shrl
into
icebp
add
or
pop
iret
data16
outsl
outsb
jo
sub
or
inc
xor
loopne
mov
leave
cmp
dec
lahf
loopne
mov
xchg
mov
pushf
cmovle
stc
in
insl
fwait
sar
inc
pop
leave
test
mov
int3
xor
push
mov
xchg
mov
xchg
add
push
pushf
data16
shll
mov
mov
cld
jo
pop
shlb
fistpl
imul
std
insl
mov
xor
inc
push
iret
sti
cmp
or
mov
sub
sub
dec
add
decl
test
jmp
fnstenv
je
sarb
cmpsl
inc
push
stos
push
sbb
cs
or
cmp
add
stc
int
sbb
mov
movsb
test
andb
and
mov
xor
sub
aad
sbb
mov
cli
mov
sub
aam
adc
dec
sbb
push
in
or
pop
xchg
psubsw
adc
mov
outsb
in
jo
out
daa
lods
dec
push
fs
xchg
sub
dec
mov
fstl
fisttpll
hlt
cld
xchg
cmc
out
scas
push
jns
sbb
push
iret
push
mov
insl
fs
push
pop
dec
jno
cmpsb
push
push
add
pop
adc
cmpsl
push
mov
xor
into
out
push
jb
inc
inc
cmp
add
icebp
xlat
orl
adc
into
sub
and
push
gs
xor
xor
stos
out
cmp
mov
test
mov
cmc
jno
pop
fidivrl
in
adc
dec
fs
scas
divb
jne
aas
add
mov
test
scas
std
add
lret
enter
cmp
cli
dec
add
or
sub
in
mov
sarb
arpl
jns
pop
xor
loopne
repnz
loopne
mov
das
xchg
dec
pop
ss
add
pushf
jae
inc
fstpt
mov
addl
xorb
xor
rorl
outsl
imul
mov
movsl
or
enter
in
adc
dec
pop
adc
pop
push
adc
shll
jge
pop
sbb
daa
xor
mov
add
jl
cli
push
cwtl
movsl
adc
out
or
sti
or
mov
pop
xor
xor
mov
out
loope
mov
inc
mov
mov
pop
test
mov
out
imul
andb
push
aam
or
out
out
xchg
dec
test
mov
popa
jbe
mov
lret
adc
jecxz
jnp
fildll
adc
push
cs
clc
cld
lcall
ror
jne
adc
stos
add
lcall
lret
je
or
cmp
mov
or
call
adc
cltd
pop
mov
mov
gs
add
in
scas
lret
bound
sbb
pop
mov
outsl
jg
sub
jmp
clc
mov
repz
sbb
in
ds
faddl
cmpsl
divl
call
cmp
or
cmp
imul
iret
jb
lcall
outsb
clc
xchg
add
scas
inc
inc
mov
fnsave
add
test
daa
aam
mov
jle
in
dec
sahf
cmpsb
addr16
andl
icebp
inc
into
push
inc
mov
inc
push
xchg
mov
xchg
idiv
stc
rcr
xor
jecxz
js
mov
in
jge
and
in
jns
lahf
orl
enter
notb
cmc
or
popa
repnz
in
out
jp
sub
jge
xor
xchg
stos
jmp
sahf
pop
mov
and
jb
or
or
inc
push
adcb
cmp
ret
sbb
sub
in
es
add
mov
adc
shrb
mov
pop
lods
sbb
adc
xor
in
pop
repnz
sbb
movsb
push
ret
loop
dec
insl
insl
fldl
mov
scas
cld
add
pop
arpl
aad
rcrl
push
mov
sahf
enter
mov
jae
test
mov
orb
sbb
popa
js
loope
mov
lahf
mov
add
nop
fldcw
mov
jp
or
or
fidivrs
or
outsb
rorl
sbbb
or
insl
cld
xchg
lahf
imul
mov
jge
xchg
and
push
imul
out
pop
mov
stos
push
and
popf
push
or
aaa
jg
or
adc
xchg
inc
jae
sbb
aam
cli
push
int
shll
call
les
xchg
push
push
sbb
pop
pop
das
or
loop
lret
inc
mov
bound
int
jmp
les
or
and
mov
pop
xchg
add
mov
push
jg
bound
stos
rep
lods
add
add
adc
scas
lods
vcmpps
push
add
push
sti
pop
xor
mov
cmpsb
sbb
fldl
pop
jne
ret
sbbb
in
sub
push
pop
sbb
adc
mov
inc
dec
jg
andb
xchg
mov
pop
mov
or
xchg
jle
insb
jl
sbb
cmp
mov
shlb
lret
hlt
push
and
push
loopne
jp
or
xchg
sbb
and
shlb
fnstcw
push
les
mov
cmpsb
test
pop
inc
cmp
shll
mov
add
mov
dec
pop
jbe
xlat
jbe
xchg
adc
push
fsubrs
aam
pop
sbb
orl
cmp
xchg
lock
push
inc
repz
stos
xchg
stos
aam
pop
push
arpl
push
push
sarb
repnz
mov
popa
outsw
pop
push
lret
jge
inc
stos
add
inc
es
push
cltd
sub
jo
test
out
mov
mov
cs
cmpsb
ds
xchg
xchg
mov
push
cmpsb
outsl
not
pop
sbb
lret
es
mov
or
lcall
push
sbb
mov
sub
lea
paddb
xchg
sub
xlat
xchg
test
inc
mov
je
lret
cld
xor
pop
and
pop
test
ljmp
outsl
pop
into
rcrl
sub
sbb
jmp
xchg
xor
ret
push
scas
and
movsb
jbe
pop
loop
push
pop
dec
xor
hlt
lcall
or
adc
push
or
sub
xlat
ret
pop
and
cmp
sbbl
xchg
cmp
mov
or
cmpsb
jnp
cltd
in
jle
sti
lret
inc
xor
jg
insl
shlb
fstp
dec
aad
pop
xor
pusha
das
sub
roll
rcll
push
cmpl
inc
lahf
stos
push
push
jp
push
ljmp
and
lock
test
movsb
daa
jecxz
push
push
cmp
xor
int
addb
in
cld
insl
fs
enter
int3
pop
insl
cmc
sub
jmp
stos
lahf
dec
adc
mov
jecxz
cmp
or
pop
mov
or
jo
and
inc
pusha
das
mov
xchg
or
adc
lock
push
insb
inc
add
pop
dec
and
jno
test
std
mov
sbb
mov
mov
mov
mov
xchg
and
pusha
adc
xor
jno
inc
mov
lds
add
incl
push
daa
add
dec
cmp
scas
jecxz
mov
push
sti
js
push
mov
mov
pop
jmp
inc
dec
jae
jne
fsubrp
ss
repz
xor
ljmp
popa
mov
popa
pop
test
cmp
pop
pop
pop
jno
out
pop
leave
lret
fwait
inc
add
call
sbb
and
fucomip
data16
inc
arpl
imul
adc
xor
jb
lods
test
out
dec
aam
or
inc
lods
imul
outsl
test
lods
sahf
dec
xlat
lcall
cmovp
fs
andl
rol
dec
pop
call
ljmp
ljmp
cmp
inc
lahf
fmuls
add
pop
pop
or
lock
aaa
lcall
jae
or
dec
sub
cmp
call
mov
mov
mov
lds
jecxz
jp
push
pop
mov
enter
int3
inc
daa
pop
icebp
loop
lea
jmp
fcomi
and
sbb
and
insl
jl
xor
sub
clc
in
pop
push
push
aaa
fs
dec
sbb
jae
push
jge
cmpsb
repnz
and
in
sbb
adc
int3
pusha
call
push
not
int
out
jae
ret
lods
pop
push
push
pop
sbb
test
adc
sub
icebp
or
loop
aam
mov
pop
dec
and
lds
or
push
sub
into
scas
push
mov
jno
or
test
push
pop
cltd
or
std
cmp
xor
or
loopne
test
mov
cmp
in
add
jmp
inc
push
test
sbb
mov
dec
or
and
and
push
stos
ret
or
sbb
adc
mov
pop
or
xchg
jbe
js
sub
dec
bound
movsl
pop
cmpsl
gs
insl
push
jbe
cltd
mov
aad
fildll
jle
dec
ret
mov
mov
aam
cmpsb
mov
pop
sbb
int3
mov
pop
xor
lds
lds
dec
loop
cmp
out
add
clc
imul
xlat
push
xor
ds
aas
out
stos
and
sub
push
or
cmpsb
xor
and
stc
sbb
mov
push
pop
add
dec
xchg
xchg
cmc
fsubrl
add
insl
cmpsb
xchg
rcll
mov
out
push
sahf
nop
enter
push
push
inc
loope
xor
idiv
cmp
or
jbe
stos
pop
or
insl
loopne
push
inc
loopne
addr16
push
adc
xchg
adc
jo
push
mov
cmpsl
push
inc
sbb
cs
repnz
push
outsb
jns
xor
xchg
add
addb
sbb
outsb
jae
aam
jmp
movsl
fwait
mov
sbb
sub
mov
mov
bnd
pop
ljmp
outsl
loop
dec
shlb
popf
xchg
lcall
xor
mov
repnz
nop
and
insl
mov
fmuls
divl
ret
cld
js
xchg
and
mov
xchg
xlat
push
mov
push
jmp
daa
xchg
lret
pop
push
outsb
ja
cmpsl
inc
cmpsb
mov
leave
lea
jo
iret
jns
ficoms
movl
mov
xchg
dec
pop
fs
add
sahf
fidivrs
cmp
ret
cmp
imul
int3
xor
stc
idiv
shll
out
mov
dec
cwtl
jecxz
fisubs
and
and
pop
outsb
aas
nop
xor
in
and
sarb
cld
or
inc
or
jl
xor
or
arpl
pop
pushf
int3
xchg
sbb
call
mov
xor
add
push
nop
or
xchg
subb
push
test
jp
push
inc
add
jmp
sbb
sqrtps
dec
mov
inc
aaa
pop
mov
mov
stc
xor
mov
in
das
orl
fld
out
pop
mov
sub
inc
pop
shll
out
xor
ja
test
imul
mov
inc
and
js
pushf
xor
sub
jae
jno
rcrb
xchg
xor
test
popa
nop
jecxz
adc
add
pop
jl
jecxz
in
pop
negb
push
jns
fistpll
out
add
pop
imul
xchg
popa
and
mov
movsbl
jb
mov
imul
addr16
in
mov
les
jns
rolb
sub
jne
cmpsb
push
iret
icebp
bswap
js
in
cmp
cmp
cld
imul
mov
mov
cmp
add
sub
and
push
or
jae
into
je
or
dec
sub
cltd
js
sbb
and
std
xchg
jno
iret
sub
fs
and
inc
mov
out
in
push
xchg
pop
pop
jmp
mov
imul
emms
push
jl
addr16
sbbl
lret
mov
cmpsb
sbb
push
mov
xorb
inc
sub
add
test
loopne
stc
pushf
lcall
lock
fs
das
inc
test
mov
xchg
xor
out
cs
mov
cmc
fsubs
cs
adc
push
test
outsb
jmp
mov
js
ss
and
gs
rclb
jl
xor
mov
fisttpll
repz
xchg
inc
mov
into
cmp
ds
xchg
iret
outsb
xor
repnz
mov
xchg
lret
push
loop
stos
mov
push
sub
mov
je
xchg
insb
cld
sub
fwait
xchg
xlat
xor
xor
mov
and
lret
out
lock
jnp
and
sub
sbb
lods
pop
xchg
push
test
pusha
fsts
pop
ss
cs
sbb
cmp
push
lods
fsubl
daa
mov
mov
mov
inc
pop
mov
leave
out
dec
stos
and
aaa
ffree
sub
shlb
in
inc
or
push
insb
out
mov
sbb
add
sbb
mov
stos
test
loope
sub
ljmp
pop
ds
mov
mov
pop
mov
push
test
mov
adc
dec
xor
test
cmp
jmp
nop
xchg
xor
outsl
sub
jo
xor
sub
push
lock
jg
and
popf
hlt
out
mov
adc
sub
fcoms
bound
jne
call
push
imulb
sub
ret
popa
aad
or
cltd
dec
add
stos
scas
dec
or
push
rcrb
xlat
mov
pop
insl
shl
sbb
pop
arpl
mov
or
and
imul
leave
mov
mov
xchg
add
add
call
jge
pushf
pusha
data16
push
test
cs
sahf
xchg
adc
mov
cmpsl
adc
cld
sbb
jmp
inc
push
lea
lret
push
imul
pusha
xchg
dec
les
cli
gs
into
dec
out
xchg
out
dec
imul
in
mov
imull
scas
mov
negl
test
lock
inc
loop
xchg
adc
cmp
pop
cs
sub
push
mov
xor
jae
imul
mov
dec
mov
movsb
shll
push
leave
scas
or
fs
popa
pop
jmp
lods
ds
dec
add
push
hlt
xchg
push
popa
or
adc
insb
notl
or
repnz
sub
push
movsb
adcb
push
in
sarb
xchg
repnz
sub
testl
mov
das
orl
xor
scas
inc
mov
mov
cmpl
pop
ds
xchg
and
or
push
sahf
cli
xor
lcall
mov
gs
loop
mov
dec
inc
notb
ret
jnp
pop
push
mov
cmpsl
or
inc
cmpsb
cmp
mov
cmc
je
cmpsb
dec
mov
jle
popa
cmp
push
sub
les
xchg
sub
jno
sbb
mov
fidivrl
mov
cs
out
lcall
xor
lods
mov
pop
shll
fidivs
sbb
jecxz
leave
ficoms
adc
ss
jbe
les
cld
adc
lods
daa
outsb
or
out
push
or
fdivrs
pushf
pop
mov
inc
stos
and
cmp
jp
push
les
cltd
fcompl
dec
jns
push
ret
shll
stos
push
cli
dec
push
insl
nop
jnp
lea
pop
and
pop
inc
cvtpi2ps
mov
in
add
push
xor
push
loop
test
rorl
xchg
sbb
sbb
cwtl
push
jge
xchg
setle
mov
sahf
and
insl
cld
add
xchg
mov
inc
mov
mov
jne
xchg
in
ret
mov
stos
mov
lret
pushf
mov
xchg
cmpsb
dec
fdivl
mov
cli
rorb
lcall
in
push
clc
pop
mov
nop
jnp
mov
sbb
sbb
dec
cmp
repz
pop
lcall
out
pop
popa
sub
push
inc
aam
mov
or
sub
daa
test
push
jae
mov
in
addr16
pop
mov
mov
sahf
cltd
lods
pushf
fldl
inc
push
scas
dec
push
adc
and
sub
cmpsb
cmp
cli
or
adc
jbe
mov
mov
jmp
into
stos
cmp
sub
sub
fcomip
out
xor
ljmp
mov
pop
xchg
push
arpl
aam
test
ja
xchg
sub
push
push
iret
dec
xor
cmp
mov
jg
mov
cmc
cli
in
aas
pusha
xlat
insb
es
push
mov
push
or
jp
push
pop
shr
fistps
fnclex
std
xor
jnp
push
mov
mov
cmp
or
and
repnz
movsl
xorb
mov
inc
daa
inc
ss
mov
and
mov
mov
mul
es
bound
cs
mov
jg
popa
cmc
ficoms
jb
and
fbld
jle
into
mov
xor
sarb
sub
push
ss
int3
imul
or
push
dec
inc
jmp
jle
popa
push
and
sbb
or
and
push
subb
fldt
or
dec
xchg
subb
sbb
popa
sub
cwtl
push
leave
and
pop
sbb
mov
push
cmp
mov
push
and
movsl
cmpsl
lea
jp
adc
xor
jg
cs
push
xchg
adc
lock
rolb
je
push
loop
imul
outsl
xchg
decb
inc
push
sbb
pop
dec
mov
jb
sbb
aam
jp
es
aad
imul
stos
xchg
jmp
cmp
les
pop
out
ret
or
jae
push
inc
xchg
adc
shrl
ret
stos
ljmp
push
in
mov
popl
inc
scas
dec
into
insl
xchg
das
sub
mov
ja
xchg
push
mov
out
scas
adc
test
xchg
mov
sub
cmp
adc
out
rcrl
push
push
test
and
movsl
pop
out
adc
xor
sbb
out
cli
sub
rcll
mov
jmp
mov
pop
rclb
cmc
mov
pop
roll
pushf
mov
sub
repz
xchg
subb
pop
daa
cmpsl
mov
xchg
daa
aaa
sahf
ret
stc
push
xor
or
inc
mov
aaa
insl
jb
in
push
xchg
sbb
inc
or
mov
decb
jecxz
jecxz
xchg
push
ljmp
adc
xchg
jo
inc
cmc
lds
dec
mov
jo
push
inc
xchg
movsl
outsl
sbb
pop
mov
fbld
jo
lahf
fnstsw
add
mov
into
jecxz
sub
mov
or
xor
inc
jne
ret
mov
ficoml
push
leave
aam
outsl
push
cmp
insl
cmp
adcb
pop
push
dec
push
aaa
scas
std
fmull
insb
dec
inc
dec
dec
xchg
mov
xchg
scas
sbb
xor
call
jg
rcr
outsb
inc
std
jp
sub
or
or
add
ljmp
dec
lds
shll
mov
lea
mov
and
pop
scas
stos
adc
mov
outsb
jecxz
daa
dec
je
movsl
mov
mov
sbb
mov
pop
sub
in
push
mov
data16
fimuls
mov
mov
xor
sti
in
sub
mov
xor
stos
ljmp
arpl
dec
nop
mov
jo
lret
pop
and
setg
fwait
mov
fnstsw
mov
push
pop
pop
sbb
pop
mov
cli
dec
mov
inc
sub
mov
jmp
pop
dec
cmp
sub
xchg
call
out
rcrb
push
adc
mov
loop
xor
jae
ljmp
push
sub
stos
mov
je
outsl
aas
xchg
scas
hlt
popf
pop
pop
pop
in
jo
mov
and
stos
cmc
dec
fisubrs
xlat
test
add
cli
xchg
cwtl
mov
mov
lret
xor
cwtl
lcall
divl
xchg
cld
das
pop
and
fisubs
push
dec
sub
ret
fs
int3
mov
pusha
in
mov
xor
int
or
aaa
jp
aaa
inc
cmp
test
jmp
cwtl
add
xchg
outsb
xchg
cltd
andl
inc
sbb
in
mov
sub
loop
lahf
iret
xor
adc
data16
icebp
mov
jmp
aaa
and
dec
xchg
inc
xchg
shlb
pusha
gs
jnp
dec
into
push
aas
popa
roll
outsl
pusha
inc
push
jge
sub
xchg
cmp
setle
sbbb
sbb
in
xor
push
jmp
mov
adc
lods
xchg
adc
shlb
jne
mov
sahf
scas
popf
into
nop
mov
mov
add
mov
shl
stos
and
xchg
mov
imul
cld
jmp
or
fistpll
sbb
pop
arpl
cmp
in
cmp
add
pop
lret
pushl
stos
cltd
sbb
push
insl
ret
movsl
js
psubusw
or
xchg
xor
pop
or
jae
dec
stos
jl
inc
pusha
xchg
fwait
inc
sahf
sbb
stc
adc
sub
xchg
add
aad
popf
push
dec
sub
jge
mov
mov
test
dec
js
fisttps
push
test
inc
push
mov
ret
ret
ja
lea
cld
xchg
or
push
add
aas
jge
cwtl
xchg
fs
stos
fs
test
insl
aaa
mov
mov
scas
xchg
les
movsb
notb
fldenv
push
push
mov
movsl
sti
pop
dec
mov
xchg
mov
cltd
dec
mov
jge
scas
mov
int3
xor
add
iret
stc
lods
lea
mov
dec
adc
jle
js
inc
xchg
ljmp
out
pop
call
pop
or
xor
add
jns
je
xchg
lock
push
add
sub
lods
push
pop
repz
pop
jns
jl
out
and
decb
add
push
pop
insb
dec
es
xchg
mov
loop
nop
sbb
mov
xchg
lret
push
adc
xchg
add
fidivl
into
add
repnz
repz
and
xchg
loope
dec
mov
out
test
adc
lods
pop
cmp
lds
pop
cmp
sti
cs
inc
pop
int
repz
cltd
adc
je
imul
xchg
mov
mov
ret
jno
loop
lea
push
xchg
dec
ret
cld
outsb
mov
dec
fdivs
insl
xchg
inc
xorb
cs
imul
fsubrs
int
in
inc
lea
lds
inc
mov
je
push
add
fwait
mov
jne
mov
stos
ljmp
scas
pop
imul
mov
pushf
ret
lret
dec
fstpl
adc
inc
or
and
iret
arpl
mov
imul
jl
pop
push
hlt
dec
sub
das
es
push
mov
fisubrl
sub
jae
ficompl
nop
fwait
scas
pop
pusha
ds
inc
mull
movl
or
mov
int3
lds
mov
cmpl
dec
or
shl
jae
fstpl
sbb
jg
loop
fcoml
cmp
mov
je
mov
adc
in
pop
in
dec
mov
add
inc
cmp
inc
mov
xor
push
add
outsb
xor
or
out
adc
cmp
outsb
push
aam
pop
sub
js
cmp
ljmp
and
xchg
rolb
add
or
aam
imul
dec
jns
lods
adc
aam
adc
cpuid
sbb
cld
test
ljmp
and
out
lea
imul
in
mov
pop
add
into
xchg
pushf
loopne
pop
push
mov
mov
xor
fnstcw
pop
lock
add
dec
adc
mov
push
add
pop
mov
add
xchg
mov
adc
aaa
or
xchg
fisubs
xor
mov
inc
shlb
sbb
pop
rcl
xchg
scas
out
mov
aad
xchg
bound
cmp
dec
mov
pop
int3
aam
js
inc
inc
dec
or
xchg
scas
addl
out
scas
xchg
jge
dec
mov
adc
in
push
sarb
mov
xor
std
inc
stc
xor
in
ret
xor
sub
stos
loopne
mov
and
mov
jnp
out
xor
sbb
pop
int3
outsb
mov
repnz
into
jns
and
cli
push
jb
mov
adc
push
pop
xchg
ret
mov
dec
xor
push
out
rcrb
sbb
ret
xor
aad
pop
data16
lahf
jns
test
fs
lcall
loope
pop
sbb
inc
fwait
iret
fs
xor
shlb
xchg
les
shlb
outsb
ljmp
xor
push
mov
pop
inc
mov
je
es
push
push
mov
ds
pop
push
mov
cli
icebp
ja
xchg
fsub
addr16
xchg
movb
fmul
sbb
mov
mov
bound
in
xor
dec
add
cmp
jae
arpl
push
or
sub
movsl
ret
popa
stos
lea
adc
pop
imul
pop
mov
xor
mov
mov
sub
mov
add
cmp
xor
add
push
out
pushf
cs
push
mov
or
mov
push
cmp
push
hlt
loopne
fistpl
shrb
xchg
and
sbb
mov
push
repnz
push
aas
fidivrl
sbb
and
sarl
rolb
adc
jb
cmc
es
push
bound
bound
mov
mov
pop
setb
sub
xchg
or
rcr
inc
fdivl
sub
sub
subb
pop
lock
jne
sub
or
mov
push
lahf
or
sarb
ret
fs
lret
sbb
repnz
fdivp
outsl
push
mov
cltd
mov
cwtl
fldl
in
lret
and
fisubl
push
test
sbb
leave
rcl
xchg
mov
dec
mov
subl
loop
inc
addr16
mov
std
jns
dec
loopne
je
int
xor
sahf
shlb
sbb
cmp
jbe,pt
sbb
ja
pusha
push
sub
jo
iret
pop
in
dec
dec
dec
adc
inc
lcall
pushf
jmp
outsl
ljmp
loop
jmp
sbb
inc
push
sbb
adc
fs
mov
lret
pop
shll
pop
or
sub
int
pusha
movsb
cmc
call
pop
test
xchg
pop
cltd
and
or
inc
clc
xor
sahf
mov
inc
mov
jne
or
popa
shr
mov
jbe
movsb
sbb
push
psubsw
lret
mov
dec
movsb
ljmp
sbb
loopne
bound
jg
push
shlb
mov
adc
dec
pop
imul
inc
mov
movsl
fs
in
sub
gs
cmp
test
push
in
dec
into
outsb
leave
push
dec
test
sbbb
dec
xchg
dec
and
xchg
insl
fst
popf
xchg
test
mov
sbb
das
test
clc
sub
lods
dec
dec
scas
ljmp
imull
cltd
icebp
sub
xchg
pop
pop
inc
ja
mov
sbb
cmp
dec
push
xor
cltd
hlt
lds
rcl
push
loopne
lds
enter
mov
adc
into
xchg
in
xor
stos
mov
aaa
mov
ja
cs
lahf
xchg
mov
mov
xor
mov
and
ljmp
push
and
je
sub
mov
in
sahf
loope
adc
and
sti
xor
mov
pop
xchg
lret
pop
mov
adc
mov
imul
fs
rcll
lahf
dec
ror
daa
lahf
add
inc
jp
jns
jo
aas
or
cmpsb
ret
jecxz
fistpl
pop
xor
xor
fiaddl
imul
dec
pop
or
xor
outsb
xchg
push
sbb
push
xor
dec
int
and
roll
push
mov
or
inc
xlat
js
movsb
pusha
in
mov
add
jbe
cmpsl
xchg
jne
xor
insl
push
lea
inc
jge
mov
das
es
jp
xor
push
cmp
mov
pop
xor
inc
test
xor
add
fcompl
push
or
dec
sub
sahf
dec
fldcw
xlat
gs
cmp
adc
cmpsl
pop
scas
xchg
scas
lods
dec
push
daa
mov
jl
push
arpl
jg
inc
out
dec
dec
mov
imulb
inc
cwtl
mov
out
imul
fwait
jecxz
jno
add
scas
lods
sbb
test
inc
loop,pt
hlt
pop
inc
cmp
scas
dec
popf
or
jno
cmp
enter
daa
dec
sub
in
xchg
jnp
xchg
sub
and
push
popf
shl
or
jnp
xor
mov
push
mov
andl
idiv
xchg
ss
imul
testb
mov
or
push
pop
pop
mov
ja
and
xor
push
mov
call
outsb
int
es
or
jge
adc
sbb
movsb
mov
or
call
lds
imul
jne
loop
std
mov
loop
cmp
in
inc
inc
dec
xchg
dec
fildll
mov
xchg
repz
xor
loopne
push
outsb
testl
add
adc
and
cmp
push
pushf
rorb
add
jns
adc
mov
xchg
popf
dec
stc
cld
outsl
lret
rorb
sub
xlat
mov
and
adc
test
outsl
stos
xchg
sub
xor
fucomi
xor
divl
pop
mov
mov
or
idivl
js
hlt
popa
mov
out
shl
int3
push
pop
fnclex
or
cmpsb
pop
aaa
add
call
outsl
sbb
lret
add
notl
xchg
jo
dec
inc
push
mov
aaa
stos
fs
daa
xor
xchg
cmpsb
sbb
inc
cmp
pop
sbb
loope
lahf
test
das
xor
add
les
jns
scas
jne
clc
int3
inc
inc
ja
std
push
lods
fcoml
shll
pop
sub
fsts
jmp
bnd
out
test
rorl
vpmaxub
adc
sub
into
jp
xchg
fwait
loop
push
xor
shl
jecxz
fimuls
das
sbb
fucomip
jle
or
out
loop
jbe
lret
adc
les
in
pusha
cmp
movsb
jbe
xor
push
or
pop
cmp
mov
enter
lcall
push
out
lret
pop
incl
shll
rcrl
mov
pop
or
and
inc
inc
xchg
or
sbb
add
aam
sub
dec
cmp
lods
test
adc
pusha
mov
xor
xor
sti
icebp
iret
adc
jmp
insb
movsb
jp,pt
push
dec
push
cmp
xchg
or
lds
mov
dec
mov
mov
imul
mov
push
lods
jne
inc
insb
js
jle
bound
ret
add
cltd
movsb
pop
push
aam
pushf
cmp
shr
arpl
fs
jle
leave
aas
xor
adc
xor
adc
mov
int
call
insl
jg
add
fs
mov
or
lahf
lcall
imul
push
gs
popa
jecxz
into
adc
cs
mov
sarb
xchg
jle
cmp
xchg
lods
xchg
add
pop
jecxz
cmp
adc
adc
sbb
loop
iret
and
mov
jno
mov
pop
cmpsb
outsb
stos
out
pop
sbbl
lods
push
pop
mov
dec
push
dec
test
push
xchg
clc
cwtl
jg
mov
xchg
pop
cwtl
insb
les
outsl
add
ds
push
mov
js
and
out
int
fcom
and
lea
nop
pop
imul
sbb
lret
out
stos
adc
push
cmc
jno
sub
sub
aam
sub
lret
outsb
pop
push
fidivl
aas
imul
repnz
mov
mov
or
push
out
les
bnd
dec
shlb
sar
dec
je
xor
jno
sbb
jbe
jecxz
pop
scas
jmp
mov
out
mov
mov
je
pop
mov
cli
int
mov
add
nop
xchg
sar
inc
inc
ret
mov
sub
popa
push
mov
nop
push
out
jecxz
sub
mov
mov
cmp
in
das
xor
rcl
call
ret
out
mov
fldcw
test
mov
rdpmc
insl
push
jmp
int
repnz
mov
outsb
push
stos
or
inc
mov
mov
sahf
loopne
js
jle
lea
and
sub
mov
lea
scas
test
or
inc
ss
jnp
pop
pop
lods
movsb
in
jo
mov
stos
dec
sbb
aad
sbb
mov
inc
in
out
pop
add
imul
or
inc
rcl
push
mov
cmpl
inc
stc
lea
arpl
jbe
adc
push
jo
sahf
pusha
mov
in
pop
sub
cmp
pop
addl
dec
dec
popf
inc
mov
inc
outsl
add
arpl
push
imul
cmpsl
scas
adc
sub
in
mov
cltd
lcall
movsb
stos
cmp
and
sbb
add
cmp
or
mov
pop
mov
int
jae
push
fucomp
lret
jg
cmp
dec
add
ret
mov
mov
mov
sbb
clc
rolb
lahf
std
out
hlt
pop
fs
andl
int
mov
jb
xchg
sar
mov
test
xor
loope
mov
fbstp
mov
xchg
outsb
fisubs
out
mov
xor
xor
pop
xchg
shll
je
mov
iret
push
xchg
ss
push
imul
or
cmp
test
dec
adc
push
mov
sub
mov
cli
and
test
jnp,pn
ret
jne
call
clc
sbb
mull
addr16
cld
daa
pop
pop
and
lcall
cli
pop
std
mov
mov
test
pop
dec
loop
jge
and
es
adc
push
in
fnsave
fmull
fcmovu
pop
xlat
leave
xchg
mov
and
mov
xchg
adc
loopne
xor
mov
in
add
inc
int3
lcall
pop
xchg
jmp
sub
push
mov
insl
faddl
lock
ja
xchg
ja
dec
xchg
lea
push
lods
fucomp
fnstsw
pop
jge
pop
pusha
sub
dec
add
data16
push
js
aam
inc
stos
push
adc
shll
roll
cmp
pop
fldenv
cmpsb
push
fldenv
xchg
and
inc
int
mov
ss
jp
lret
cmp
or
leave
lahf
jl
xchg
push
lds
lea
cmpb
dec
xlat
mov
jmp
les
adc
mov
in
out
jne
sahf
ljmp
push
aad
cmp
insl
mov
jmp
push
add
sbb
mov
aam
sarl
adc
mov
jno
test
push
cmpsb
mov
jmp
mov
lods
dec
mov
lock
shr
push
cld
in
mov
and
arpl
in
je
insl
and
mov
clc
fdivs
jle
xchg
lahf
adc
cmpsl
pop
adc
clc
cmpsl
adc
inc
icebp
cli
mov
adc
xchg
data16
insl
pushf
insl
sbb
mov
cwtl
jp
test
push
pop
or
xchg
fdivrl
aad
jno
pop
push
out
inc
sub
sbb
mov
mov
aas
icebp
xlat
es
jp
jle
xor
mov
mov
jl
pop
arpl
xor
fdivr
jne
xor
ficomps
cmc
sbb
mov
sahf
lods
dec
mov
iret
sub
out
out
and
jno
push
popa
inc
jge
sbb
push
push
pop
loopne
or
ret
lds
out
scas
cmpsb
push
ds
and
xchg
ret
sbb
lock
outsb
xchg
bound
jno
out
or
push
ret
push
cmp
pop
je
add
jp
mov
repz
vcvtdq2ps
arpl
int
repnz
adc
add
in
fistpl
ficomps
test
in
ficoml
hlt
loopne
add
mov
lcall
pop
xor
sub
pop
inc
fldl
cmpsb
rorb
xchg
adc
fwait
ss
ljmp
stc
sub
jecxz
in
pop
xchg
push
loope
mov
je
cltd
push
sub
mov
mov
subb
jne
inc
pop
rclb
mulb
cmpsl
test
xor
pop
jo
xchg
cmpsb
pusha
arpl
cmpsb
add
mov
inc
jns
aaa
mov
add
dec
mov
fwait
bound
push
inc
js
lods
fbstp
mov
xor
pop
cmc
adc
adc
das
bound
test
insb
jno
and
lock
mov
insb
cmp
xor
dec
or
cmp
pop
adc
or
out
and
xchg
pop
cmpsl
fiadds
out
sub
shrl
pop
enter
add
in
sub
mov
int3
fs
scas
jp
cli
lods
xlat
mov
adc
or
jnp
out
hlt
dec
ja
cltd
stc
lahf
daa
mov
add
ret
sahf
fwait
movsb
inc
ljmp
movsb
jl
xchg
mov
pushf
aam
adc
dec
dec
nop
call
shll
gs
mov
dec
insb
in
dec
loope
test
inc
pop
push
pop
xchg
mov
into
outsb
mov
mov
mov
fbstp
shll
bound
arpl
mov
sub
mov
jmp
shr
cmp
popa
or
add
pop
push
nopl
rcrl
dec
movsl
test
sub
dec
mov
xlat
out
int3
inc
testb
sub
out
sbb
inc
std
or
xchg
popa
repz
xchg
into
lds
stc
dec
or
outsl
mov
mov
push
lret
sbb
dec
fadd
lret
mov
mov
mov
imull
flds
push
jp
lods
mov
out
ret
adc
mov
dec
mov
idivl
sub
xchg
inc
call
jne
push
and
data16
faddl
addr16
pushf
sti
mov
je
aas
mov
xchg
pop
lret
in
lods
jmp
or
dec
in
xchg
rolb
clc
fnstsw
push
hlt
call
sbb
pop
jp
addr16
dec
imul
mov
or
decb
aam
fsubs
cmp
mov
fldt
bnd
sahf
data16
cli
sti
jmp
and
int
add
and
adc
mov
xchg
loop
jbe
or
xor
sub
xchg
scas
xchg
mov
outsb
ljmp
je
mov
mov
int
fldenv
jno
add
fisttpll
mov
out
sub
sti
fidivs
inc
and
aaa
sbb
jmp
jb
pop
push
xor
push
insb
in
push
stos
xor
pop
jno,pn
push
jns
xor
and
adc
cmc
loopne
push
mov
pop
rcr
insb
divl
lret
mov
into
mov
outsb
stos
mull
je
icebp
and
jb
add
push
std
push
in
xor
mov
add
sbb
aas
sub
sti
add
push
and
fdivrs
mov
or
dec
inc
add
and
sub
rcll
test
dec
rcr
lret
inc
and
dec
inc
sti
loopne
outsb
adc
sub
pop
in
dec
pop
fs
rcrl
jp
iret
sarb
cmp
push
fdivl
test
cmpsb
ror
dec
in
and
jp
out
jb
in
lret
xor
dec
pop
cmpsb
inc
or
inc
test
call
icebp
in
mov
enter
popa
xchg
mov
arpl
je
in
lods
sbb
movsl
pop
lods
mov
xchg
xchg
cli
hlt
xor
pop
outsl
pop
fs
js
sbb
loop
jmp
data16
imul
iret
ret
dec
mov
test
stos
sub
jle
bound
mov
es
test
cmp
pop
or
add
cli
sarl
xchg
mov
xor
pop
adc
jns
addl
or
shr
cmp
addr16
popa
clc
jmp
clc
mov
leave
mov
push
pop
pop
jg
jmp
mov
xchg
inc
adc
fidivl
popf
push
or
inc
cld
push
and
sbb
lcall
push
xchg
mov
loope
dec
rolb
and
scas
and
imul
rcrl
or
les
xchg
inc
jae
les
mov
arpl
adcl
jns
out
sbb
ss
ds
js
lods
pushf
xchg
fisttpl
xor
loopne
mov
mov
xor
mov
ja
addb
repz
lcall
stos
in
or
or
lods
sub
xor
mov
mov
mov
sbb
insb
lods
scas
or
push
add
cmp
mov
icebp
xor
push
cmp
mov
in
push
xchg
mov
add
add
out
movd
movsl
xchg
mov
popa
loop
xor
daa
rcrl
add
movsb
or
out
loopne
call
mov
test
mov
fnstcw
shr
rolb
cmp
dec
scas
xor
cmp
inc
inc
adc
adc
or
xor
je
out
push
inc
ljmp
stos
movsl
rcrl
pop
cmp
pop
fcompl
sti
cld
jno
mov
mov
into
movsl
inc
into
dec
js
ljmp
cli
jne
mov
push
mov
out
jmp
ss
cs
dec
fucom
inc
jp
aas
pushf
hlt
repz
in
ret
pop
lea
out
pop
clc
jb
sarl
sub
aad
cli
in
adc
push
into
adc
bound
jle
pop
movsl
and
cmp
and
pusha
mov
les
mov
in
rcrl
into
data16
fwait
push
adc
dec
movsb
sbb
idivl
js
std
push
loope
dec
lods
jecxz
mov
mov
shlb
sub
adc
add
jmp
scas
inc
and
push
movsb
pop
mov
push
out
xchg
rcrb
sbb
jne
insb
pop
sbb
popf
and
xchg
mov
xor
hlt
cltd
ja
stos
jle
xlat
mov
cmp
arpl
xor
adc
adc
call
ficomps
shlb
rcll
pushf
nop
ja
pop
sbb
dec
idiv
dec
pusha
push
cmpsb
xor
pmaxub
inc
cmp
mov
mov
inc
popa
cmp
xor
pop
cli
xchg
mov
or
add
inc
lcall
cmp
xchg
mov
rorb
mov
ret
inc
pop
cmp
sbb
push
adc
enter
fucomip
mov
push
fdivrl
or
outsb
pop
mov
fiadds
popa
out
out
adc
sub
or
dec
xor
inc
inc
lcall
cmpsb
mov
fwait
mov
daa
out
data16
iret
xor
cmp
xor
testb
outsb
xor
nop
mov
sarb
scas
stos
fmul
aas
arpl
pop
rorl
popf
or
ljmp
mov
or
cmp
arpl
xchg
frstor
inc
in
imul
cmp
jo
fcmovnbe
jl
les
adc
push
inc
icebp
sahf
rclb
bnd
xchg
sbb
inc
fldenv
pop
jmp
ja
mov
repnz
cli
lods
sbb
mov
xchg
xor
mov
cmp
bsr
scas
insl
bound
fists
roll
mov
pop
mov
pop
sbb
or
jo
adc
aaa
mov
mov
je
les
xorb
out
idivb
sbb
fnsave
in
jne
pusha
pushf
sub
dec
stos
loope
and
pusha
sbb
push
adc
arpl
inc
rolb
pushf
add
push
xchg
push
sub
cmp
push
cmp
sub
sahf
scas
mov
call
add
pusha
mov
roll
mull
repz
or
test
adc
addr16
imul
shll
mov
xlat
and
adc
lock
pop
js
stos
xor
pop
lock
push
pop
js
sub
les
les
mov
cmpsb
clc
test
cmpsb
dec
sub
push
stos
add
xchg
data16
pusha
arpl
mov
pop
shll
jle
aam
stos
cmp
cltd
dec
jb
cmp
xchg
aam
lods
xor
adc
aam
xchg
repz
out
inc
or
in
stos
mov
inc
adc
fldt
push
popa
fs
rclb
and
mov
les
add
fwait
ja
inc
aaa
xor
bound
dec
fidivs
and
jmp
jecxz
lods
mov
sub
jle
sub
add
push
cmc
sub
cmp
fwait
in
sbb
in
lahf
fstpl
dec
cld
ds
test
pop
ds
pop
push
cmp
mov
pop
loope
dec
mov
xchg
in
test
mov
add
lcall
mov
cmp
js
pop
or
mov
mov
mov
xorb
jnp
pop
dec
je
shll
adc
adc
adc
adc
icebp
jmp
jae
pop
out
lock
jnp
jno
inc
cmc
adc
push
cmpsb
repnz
adc
iret
fnstenv
loop
add
jo
in
and
dec
mov
xor
sbb
sub
mov
mov
mov
add
pop
or
adc
sti
sahf
inc
inc
js
pushf
stc
adc
js
das
fidivs
jbe
sub
mov
rcrl
ficompl
push
mov
iret
dec
fwait
mov
andps
mov
into
jp
mov
lods
lds
sahf
insl
out
lods
xchg
inc
fs
xor
mov
sbb
loope
adc
ljmp
xchg
sub
jg
xor
and
leave
sub
mov
or
out
jecxz
xor
adc
or
dec
xchg
gs
mov
mov
mov
or
repz
das
test
shll
es
arpl
in
inc
popf
jecxz
adc
sarl
push
jge
fldcw
jnp
inc
adc
add
pop
cli
jns
sub
cmp
addr16
push
hlt
out
mov
dec
push
mov
or
cli
in
xor
inc
aas
stos
adc
mov
fwait
dec
adc
pop
jne
insb
pop
push
pop
movlhps
jns
mov
jp
dec
inc
roll
and
orl
loope
cmp
jmp
mov
stc
sub
adc
in
sub
pop
loopne
jecxz
imul
mov
pop
mov
sbb
inc
adc
adc
out
mov
ja
cmp
inc
repz
add
testl
mov
jno
aas
add
je
add
fsubr
aad
mov
fmull
dec
mov
jle
and
pop
addb
negl
mov
call
popa
out
and
fcomi
scas
add
dec
cmp
and
sahf
orb
insl
in
mov
rcrb
cmp
add
aas
sbbb
call
scas
fsub
add
mov
sbb
mov
pop
pop
push
adc
xchg
call
divl
sub
stos
insl
lcall
mov
mov
call
aaa
fimull
orb
sub
fisubs
sub
push
inc
std
cmp
or
xor
sub
scas
call
andl
iret
imul
sub
xchg
inc
mov
loope
cwtl
popf
push
xor
fstps
iret
or
pop
cmp
fstps
rcrl
les
popa
pop
std
pop
xor
xchg
xlat
pusha
leave
push
aas
and
sbb
lds
ja
fwait
mov
out
lock
cmpsl
fldcw
ret
push
out
aas
inc
xchg
push
clc
lods
mov
adc
movsl
das
fdivs
mov
ljmp
out
dec
aam
fidivs
arpl
repz
cld
insl
mov
dec
imul
xor
call
pop
js
mull
mov
lahf
cli
xchg
or
ljmp
shlb
mov
int
gs
ret
and
or
mov
push
xor
in
push
push
loopne
inc
inc
test
pop
das
jmp
adc
dec
jb
sub
push
shr
and
sbb
pop
sbb
mov
insb
clc
push
cmp
jmp
mov
cmp
stc
test
popa
mov
jo
dec
sahf
xor
jge
cmp
shl
and
out
loopne
shll
lret
es
ret
add
lahf
hlt
nop
ss
add
out
sbb
jl
inc
fiaddl
test
aad
xchg
or
xorl
jl
movsl
lret
adc
push
decl
xchg
and
mov
clc
add
xchg
icebp
jl
loopne
scas
sub
cs
cmp
sbb
or
in
sub
pop
mov
out
daa
push
aad
jecxz
ret
pop
xchg
sbb
outsb
shl
dec
out
arpl
jp
xor
mov
jge
push
arpl
or
sbb
and
pop
pop
pop
push
add
sarl
pusha
mov
aaa
xchg
xchg
or
cmp
ja
push
in
mov
sti
jno
mov
js
pop
repnz
jge
push
adc
xor
mov
iret
mov
imul
sub
stos
or
stos
jmp
insb
jae
arpl
mov
cmc
adc
xor
mov
xor
xchg
lea
repnz
xor
std
adc
jno
std
mov
pushf
dec
mov
push
rolb
sbb
aaa
enter
shrb
sti
cwtl
std
stos
xor
xor
cmp
mov
out
push
mov
xor
push
fildll
shll
jns
ret
rolb
movsb
lods
nop
add
ljmp
fwait
pop
shll
mov
mov
js
add
sub
pop
int3
je
or
sub
cmc
daa
out
xchg
lods
sub
cmpsl
test
push
out
rolb
dec
popa
outsl
sub
sub
or
inc
jle
test
sbb
jg,pt
mov
int3
and
adcl
mov
inc
jne
mov
mov
add
pop
mov
mov
in
adc
dec
xchg
pop
mov
loope
cmpsl
ficompl
inc
xorb
mov
mov
outsl
xchg
or
pop
pop
dec
int
je
in
rclb
sub
mov
pop
popa
aam
adc
cmp
xchg
repnz
xchg
mov
lea
sbb
or
lret
push
mov
stos
jg
ret
ret
movsl
ja
cmpsl
into
push
push
insw
mov
push
jno
movsl
fwait
mov
mov
pop
mov
adc
mov
mov
testl
fs
idiv
inc
inc
into
mov
mov
xchg
stos
icebp
adcb
popa
in
xchg
sbb
xchg
jne
xchg
or
shr
mov
mov
jl
pop
cmp
jle
testb
jo
jge
fs
sahf
jmp
mov
fcomp
sbb
jle
push
xor
push
adcl
mov
xchg
xchg
out
pop
out
cmpsl
sbb
mov
popf
bound
push
cmp
and
test
or
hlt
outsl
mov
or
imul
out
sub
insb
data16
pushf
sahf
repz
clc
lds
sahf
xchg
xlat
sub
aad
xor
ja
sbb
adc
std
cmp
push
cmp
mov
push
push
push
pop
sbb
in
mov
xchg
test
jg
add
jecxz
xor
shrb
xor
int3
lds
out
je
lock
fimuls
out
dec
pusha
out
aad
dec
ss
ret
xlat
inc
fs
push
into
test
push
xor
loopne
jg
jecxz
scas
cmp
sahf
cmpsl
dec
mov
or
add
fsubs
mov
adc
in
rcrl
inc
mov
fidivl
in
mov
cmpsl
jecxz
xchg
pop
xor
and
mov
mov
cwtl
jl
test
mov
fimull
jno
or
mov
aad
cmp
xchg
jecxz
jo
mov
stc
fnstenv
jecxz
jae
pushf
and
jns
pop
jecxz
cmp
imul
movb
mov
repnz
fnstenv
outsb
mov
shrb
jl
jo
cmp
ror
mov
pop
lods
add
pop
jge
jp
xor
sbb
dec
fs
jno
das
mov
mov
ljmp
add
cli
inc
jo
dec
add
inc
loopne
jmp
out
add
jnp
and
xor
xchg
push
push
push
negb
shlb
js
fs
je
pushf
cmp
add
pop
mov
mov
imul
and
push
adc
mov
je
mov
pop
or
hlt
xchg
sbb
cmp
out
inc
test
dec
push
cmpsl
mov
xchg
aam
stos
or
in
shl
cmc
or
iret
pop
inc
xor
outsl
movsb
lret
add
daa
jl
inc
popa
xchg
adc
push
ljmp
insl
ljmp
jno
cmp
xchg
xchg
fldl
inc
arpl
aad
std
jnp
xchg
dec
jbe
sbb
add
cmp
and
adc
lods
mov
jge
jl
xchg
sub
jp
sbb
shrb
jne
mov
int3
mov
pop
mov
fadds
mov
cltd
inc
loope
jnp
and
daa
paddd
or
inc
add
xor
xor
jns
pop
in
lock
bswap
mov
adc
mov
dec
sub
insl
xchg
jmp
adc
ljmp
sub
xor
xchg
mov
jg
test
aaa
lret
sbb
loop
dec
mov
shl
repnz
bound
mov
mov
inc
nop
lea
mov
mov
or
mov
adc
jnp
test
popf
cmp
jg
popa
in
imul
rcr
mov
mov
and
jg
add
flds
push
test
mov
mov
and
sub
pusha
insl
call
push
jecxz
lea
add
sbb
jno
aam
call
outsb
cmc
or
jmp
cli
ss
les
jecxz
jg
scas
push
push
push
or
out
aam
and
jp
jbe
sbb
into
or
mov
shlb
cmp
xchg
jo
lock
or
fsincos
pop
jne
jmp
test
sahf
fsts
push
xchg
loopne
xchg
and
jae
cltd
fnstenv
xchg
les
mov
fstl
mov
jg
sbb
and
push
sbb
mov
clc
pop
add
call
ja
and
mov
and
ja
fsubs
leave
in
inc
test
or
popf
test
lea
enter
lret
enter
lock
lods
mov
rorb
fcomp
fwait
jge
js
cs
sti
push
js
add
xchg
lret
cs
mov
pushf
lods
push
or
ret
xchg
rolb
mov
jle
in
arpl
imul
jo
inc
push
sub
test
jmp
bnd
sub
les
pop
cli
jnp
add
add
push
movsb
sbb
fcmovbe
test
test
adc
enter
lds
push
fwait
cmpsl
test
bound
outsl
aas
mov
in
std
xchg
sbb
mov
loope
xor
addb
lret
sbb
pop
hlt
mov
pop
push
cmpsl
shll
subb
mov
pop
add
rol
mov
sbb
dec
push
movsb
in
rorl
jle
ljmp
jo
xchg
js
push
pop
or
mov
jb
out
pop
std
adc
std
pop
insl
outsb
rcl
insl
jmp
mov
arpl
adc
lahf
fiadds
jp
int3
gs
sarl
test
push
jl
shl
clc
xor
mov
insl
pop
or
and
ficompl
add
sub
jle
jp
in
add
jmp
out
out
xor
jb
test
push
mov
inc
gs
sub
lea
jmp
mov
sbbl
pop
xchg
out
in
push
lcall
sbbb
mov
fldcw
into
xor
je
inc
jle
inc
cli
push
sbb
xor
mov
lea
out
xor
mov
mov
sahf
cmpsl
ds
bound
mov
test
adcb
sub
stos
sbb
fs
ret
push
mov
add
fisttpl
stos
in
push
push
jmp
mov
movsl
jmp
scas
fisubl
push
jae
or
iret
test
xchg
mov
ljmp
scas
inc
cmp
dec
jno
in
jb
dec
mov
pop
jmp
add
dec
lret
sub
mov
mov
arpl
sarb
adc
clc
fmul
and
shr
sahf
mov
pop
push
pop
inc
stc
je
mov
int
loop
mov
lock
or
pop
loopne
xchg
push
add
xchg
or
mov
dec
cmpsl
imul
mov
sti
cltd
fxch
out
lret
mov
rcrl
and
mov
arpl
pop
inc
es
sub
jecxz
pusha
mov
data16
dec
movsb
or
idivl
fisubrs
pop
fcom
and
mov
rclb
adc
outsl
mov
int
pop
ret
mov
ljmp
pusha
mov
andb
mov
adc
out
add
push
adc
jo
fs
or
or
push
in
mov
loop
dec
fdivr
pushf
pop
testb
inc
push
rcll
iret
roll
movsl
dec
dec
sti
in
inc
lahf
enter
out
push
xlat
inc
add
push
sbbb
jne
mov
push
jge
and
push
int
push
cltd
inc
jbe
jg
lcall
cwtl
repnz
popa
jge
das
sbb
jp
pop
pop
loop
xchg
mov
dec
mov
fwait
mov
dec
mull
lods
stos
sbb
fldl
adc
pop
push
lods
ficompl
jle
insb
xchg
dec
inc
in
sub
outsb
ret
xor
lods
inc
fadd
jg
cs
add
adc
xor
cs
jge
ret
jg
pusha
outsl
push
jns
mov
xchg
mov
mov
fdivrl
or
mov
aaa
loope
add
mov
dec
rclb
jbe
sbb
add
fbld
or
test
cmpsb
sbb
movsl
gs
push
lock
add
pop
add
stos
jbe
mov
fadds
notb
lret
andl
das
and
rcrl
movsl
fstpt
mov
adc
out
mov
mov
pop
push
sub
push
and
xchg
cmp
add
ds
in
addr16
pop
push
jno
cmp
xchg
fldcw
imul
push
pop
dec
into
clc
shlb
mov
push
movsl
xchg
in
push
xchg
int3
aad
js
xchg
xchg
mov
dec
push
pushf
dec
ljmp
inc
sbb
jl
rol
cld
idivb
frstor
cmp
cld
nop
int
and
xchg
and
jbe
mov
xor
pushf
lahf
xor
fwait
mov
sub
pop
jge
fs
mov
cmp
mov
jnp
lock
jae
pop
lds
xorl
imul
aam
sub
repz
xor
xor
adc
js
xor
lcall
mov
lods
std
pusha
xor
les
mov
pusha
dec
sbb
xchg
sub
mov
cmpsb
sbb
push
mov
mov
xchg
cmpsb
mov
jp
sub
stc
push
hlt
addl
xor
and
mov
sub
sub
jne
std
xchg
mov
xchg
mov
out
insl
dec
unpcklps
add
or
jecxz
aas
popa
test
insb
repnz
sbb
int3
mov
jno
or
jns
mov
rolb
out
fcoml
imul
pop
jnp
or
scas
stos
xchg
clc
inc
repnz
xor
lcall
std
enter
add
aaa
pop
mov
adc
dec
je
add
sub
sbb
pop
repnz
or
cmc
fimull
add
add
push
pop
inc
mov
xor
xchg
sub
sub
add
dec
icebp
inc
pop
inc
dec
jae
jns
add
push
jecxz
daa
xor
cmp
pushf
scas
pop
pushf
sahf
ljmp
enter
inc
xchg
jg
jno
inc
fmul
jle
cmp
out
call
ja
mov
cmp
shlb
cmp
out
loop
mov
lret
ficomps
fidivs
in
ret
movsb
mov
adc
xlat
mov
pop
data16
test
xchg
les
ja
xor
mov
fiadds
and
sti
xor
sbb
add
inc
mov
sub
push
pop
jns
push
lcall
stos
mov
lods
int
dec
mov
or
movsl
mov
popf
push
imul
stos
adc
or
nop
stos
stc
mov
push
pop
and
dec
lods
out
mov
sbb
stos
xorl
push
inc
fcomp
pop
xor
les
dec
aam
imul
cwtl
jnp
div
negb
push
xor
nop
gs
cli
xchg
and
jnp
jmp
cmp
adc
test
and
xorl
mov
xor
imul
lret
jmp
in
and
rcl
imul
pop
mov
int
xor
ret
cvtps2pi
push
jl
mov
rorb
loopne
jne
xchg
inc
scas
pop
push
and
or
decl
jg
pop
jmp
cmpsl
leave
test
push
mov
xchg
pop
in
aaa
mov
mov
mov
test
or
leave
into
sbb
inc
sbb
lahf
xchg
sub
shlb
fldcw
hlt
sub
or
and
push
push
out
xor
imul
cld
push
jae
mov
lods
dec
cmp
in
jbe
dec
iret
sti
loop
fistpl
aad
or
lret
push
xchg
xlat
pusha
gs
out
mov
mov
lret
mov
popf
jle
add
mov
pop
sbb
into
jecxz
add
pop
sbb
iret
nop
test
add
mov
add
lret
test
mov
jp
insb
mov
mov
push
and
lods
pop
cmp
lds
cmpsl
adc
cmp
out
xchg
mov
pushf
cld
idivl
in
pop
and
xor
hlt
cmp
in
das
inc
push
loope
xchg
inc
outsl
das
lods
or
dec
fsubl
gs
mov
mov
jnp
js
dec
sub
mov
subl
inc
mov
cwtl
fidivrl
adc
in
call
pop
std
and
test
dec
test
pop
std
iret
cmp
lahf
es
mov
mov
mov
lcall
fs
mov
loop
inc
jno
sbb
xchg
cmp
xor
mov
ud1
pop
cmp
fbstp
lret
pop
gs
push
push
sbb
add
xchg
xchg
lds
sbb
loopne
add
xor
stos
fsubr
ret
inc
cmpsb
in
data16
lret
mov
fldz
imul
cltd
mov
xor
sub
xchg
mov
cmp
push
sbb
faddp
fbstp
dec
repz
stos
and
aaa
iret
in
adc
lods
stos
popf
xlat
rorl
ljmp
xor
fbld
jp
mov
mov
jae
or
aaa
popa
sbb
xlat
dec
mov
movsl
mov
cmpsl
adc
jae
sub
mov
shrb
pop
xchg
and
movsb
fcoml
xchg
xchg
mov
cmpb
inc
xchg
std
mov
lds
mov
jmp
push
jmp
inc
sub
fs
cs
sti
outsl
enter
push
push
pusha
outsl
jl
lea
adc
int3
testb
sbb
pop
mov
jmp
or
push
mov
clc
or
int
mulb
add
enter
mov
xlat
jg
jmp
mov
or
cmp
mov
add
add
and
dec
pushf
pusha
xor
cwtl
fsubl
cli
aam
das
xor
mov
push
dec
popa
push
stc
inc
outsl
cmp
dec
lods
int3
inc
sti
xorb
mov
adcb
dec
movsl
dec
add
xor
pop
pop
test
nop
and
add
and
xchg
test
or
cmp
lcall
xchg
mov
testl
push
mov
add
add
and
lock
dec
es
pop
mov
cmp
push
mov
outsl
rcrl
movsb
xor
inc
sub
out
inc
and
sub
subb
call
movsl
mov
loop
or
jg
mov
mov
sbb
shll
cld
or
mov
cmp
inc
loopne
dec
add
xor
xor
add
dec
xchg
aas
sub
or
sbb
sbb
mov
test
jbe
mov
mov
fwait
xor
in
in
icebp
adc
adc
repnz
idivb
or
std
sbb
shll
arpl
vmovupd
or
mov
push
divb
cmp
out
push
rcr
testb
adc
or
add
addb
lods
mov
out
in
xchg
mov
call
out
pushf
repz
leave
popf
bound
push
sbb
popa
cwtl
or
stos
fcmovnb
test
test
imulb
xlat
mov
scas
fnstsw
sbb
cmp
push
insl
sub
xchg
out
mov
movsb
xchg
push
pop
pop
dec
or
sti
inc
fimull
sub
dec
mov
fimull
inc
mov
jp
outsl
lods
xchg
push
popf
test
xchg
out
imul
inc
and
mov
jl
shlb
mov
fildl
scas
xchg
jmp
adc
adc
adc
out
mov
jo
jbe
imul
and
adc
movsb
mov
cmp
sarb
inc
push
add
mov
jmp
ja
insb
mov
xor
into
pusha
inc
push
bound
push
xchg
xchg
dec
push
inc
ds
test
in
or
icebp
int3
dec
clc
inc
push
out
push
mov
mov
jp
cld
cmp
xor
das
mov
nop
cmpsl
scas
jne
cmp
jmp
xor
mov
and
bound
xor
aas
inc
mov
and
adc
ffree
push
lret
and
ret
adc
add
jae
xchg
mov
push
cmpsb
les
push
push
sub
test
int
cmc
cltd
insl
sub
or
add
and
or
push
iret
subb
fldcw
arpl
cld
xchg
out
adc
addr16
lods
rorl
dec
scas
jmp
sbb
mov
pop
imul
movsb
sub
arpl
imul
aad
xlat
add
mov
adc
jno
clc
sarb
lret
push
lahf
inc
movsb
push
leave
je
cltd
addl
xchg
mov
xlat
ljmp
ret
cld
in
push
xchg
dec
scas
mov
sub
xor
xchg
lret
out
loop
insb
mov
mov
fidivs
das
sbb
imul
cmpsb
and
and
fs
pop
into
call
pop
cmp
dec
rcrb
pop
bound
dec
lock
mov
fsub
jl
dec
push
cmpsb
xchg
mov
scas
loope
and
mov
push
insb
std
and
pop
sub
movsb
repz
mov
and
pop
mov
xchg
fsubrl
clc
add
cmp
shll
xor
ficomps
mov
pop
xchg
ss
ret
jecxz
cmp
xchg
pop
mov
pop
rolb
js
clc
push
lds
lock
push
adc
xchg
sub
and
dec
test
clc
mov
pop
pop
mov
add
rcrl
and
jecxz
mov
test
mov
outsb
mov
jmp
pop
adc
and
lret
bound
in
inc
loope
sbb
pushf
sahf
and
mov
shl
divb
xchg
mov
mov
in
jo
push
adc
int
mov
repnz
stc
adc
shrl
mov
adc
dec
sub
in
popa
jo
pop
movntq
inc
jg
jge
sbb
pop
lcall
mov
xchg
lods
pop
inc
and
cmp
pusha
jne
jae
addr16
xchg
xchg
js
int
add
mov
leave
into
icebp
lock
cwtl
dec
xchg
pushf
mov
push
js
pusha
shlb
ljmp
and
jl
push
sti
stc
xor
aad
pop
pop
popf
lds
ja
mov
js
push
adc
add
push
push
sbb
dec
or
and
push
fsqrt
shrb
push
aad
in
sub
negb
clc
jne
mov
loopne
push
mov
aas
xor
mov
sub
test
inc
cld
mov
sub
int3
andl
cltd
xor
mov
movsb
jbe
lods
xor
imul
scas
mov
div
into
loope
mov
adc
leave
mov
push
xlat
stos
lock
pushw
mov
es
dec
add
test
xor
and
mov
push
shlb
push
inc
inc
rorb
push
adc
mov
mov
add
pop
inc
pushf
insb
dec
xchg
js
mov
cltd
cmp
sub
insb
cmp
loop
test
cwtl
jle
fwait
test
aas
ja
bound
jle
jmp
or
int
pop
jb
sub
ret
adc
mov
add
push
and
lea
outsb
popa
sub
imul
adc
inc
clc
shll
sbb
mov
push
enter
stc
lahf
fisttps
div
shlb
add
leave
push
loope
cmpsb
cli
jmp
test
lcall
xchg
xchg
test
rcl
xor
mov
sahf
inc
cmpsl
pop
jl
insb
pop
icebp
lds
inc
sbb
jns
insl
stos
jo
sbb
arpl
subl
and
out
cld
dec
mov
jnp
mov
pop
aad
lea
xlat
lea
adc
pop
jo
ljmp
cmp
or
push
mov
mov
cmpsb
sub
xchg
ret
lahf
stc
gs
push
dec
je
ret
pop
call
mov
push
jno
je
or
lahf
xchg
lcall
lea
mov
dec
adc
add
lds
ljmp
xchg
push
sarl
fsubrp
rclb
add
jecxz
push
sub
push
lock
aam
mov
cmpsb
inc
and
xor
xorb
int
xchg
insb
push
push
push
jno
dec
lret
push
aam
cltd
daa
pop
daa
mov
ss
test
fwait
mov
jns
mov
xchg
sub
mov
inc
shrb
fwait
mov
push
cmp
xor
pop
bound
out
and
cmp
jl
push
loope
stos
test
not
scas
xor
jo
xor
cmp
stos
pop
fwait
jle
sbb
push
mov
sti
leave
je
mov
lds
idivb
sbb
mov
stc
cmp
in
xor
popf
add
lock
dec
nop
xor
in
push
sbb
xlat
shlb
mov
int
mov
and
dec
mov
cltd
ds
push
add
and
mov
inc
inc
xchg
aam
jge
push
icebp
rclb
inc
add
int3
adc
daa
ret
les
xor
daa
inc
pushf
add
lar
into
sbb
mov
fdivp
push
popf
andb
fs
add
loopne
lock
call
arpl
loopne
xor
insb
popa
xchg
xor
lods
fwait
es
outsl
mov
aad
js
rcrl
out
push
lds
push
adcl
pop
ds
or
push
les
xor
mov
into
mov
popf
loopne
js
mov
and
addr16
xor
fiadds
lods
pusha
inc
jle
xor
mov
xor
in
adc
daa
clc
cwtl
add
pop
fists
in
pop
inc
out
out
jb
push
sbb
in
ja
mov
fldt
pop
adc
mov
mov
das
pop
push
in
xchg
adc
scas
push
sbb
cmp
mov
push
pop
sub
cld
and
mull
pop
aaa
std
jmp
sub
jl
rorb
lods
in
fucom
dec
idivb
jg
xchg
scas
test
inc
sbb
out
pop
inc
sbb
or
loop
mov
mov
out
aam
dec
pop
jmp
pushf
push
and
call
rcrl
hlt
inc
ret
movsb
jae
pop
int
jae
clts
xor
loop
adc
cmc
jecxz
jo
pop
cs
push
test
sahf
or
iret
lret
dec
mov
popf
std
movsb
and
mov
fstl
and
xchg
and
jnp
sti
les
jns
pop
push
mov
imull
scas
xchg
sub
std
add
mov
mov
aas
cmp
icebp
andb
or
dec
test
mov
cmp
push
ret
stos
hlt
es
or
cmp
test
jg
sub
out
sub
stc
enter
jmp
stos
fcoml
xchg
xchg
fists
dec
test
int
outsb
sub
adc
inc
ja
mov
jb
mov
inc
pop
fistpll
mov
pop
lret
orl
dec
lock
mov
bound
nop
out
jo
xchg
pop
or
das
cmp
pushf
and
adc
es
ja
xchg
push
in
and
push
xor
or
rclb
leave
mov
push
lods
fcomi
insb
das
cli
inc
mov
jns
jb
mov
push
jmp
jnp
inc
sub
mov
inc
adcl
xchg
xlat
sti
std
lock
xchg
pop
inc
sbb
push
je
cmc
sbb
pop
aam
mov
es
inc
sub
arpl
repz
mov
adc
dec
aad
inc
repnz
jl
inc
sahf
addl
mov
imul
add
insl
or
pop
in
lret
in
cmp
adc
stos
pop
fldpi
sbb
xchg
popa
shl
or
cmpsb
pop
inc
leave
divb
addr16
xchg
xor
adc
ret
pusha
sbb
push
or
imul
scas
js
xor
out
adc
in
sbb
cmp
jecxz
inc
fldt
sub
aam
pop
pop
dec
pushf
inc
stos
xchg
cmp
push
jo
andb
hlt
in
inc
dec
push
mov
cmp
fisttps
xchg
and
sub
filds
movsb
sub
lea
fucomi
xchg
and
ljmp
push
push
adc
enter
loop
aaa
je
adc
adcb
insl
mov
or
fwait
cs
add
aaa
jmp
shlb
pop
enter
stos
data16
imul
rorb
lods
pop
xchg
fldl
dec
clc
leave
pop
xchg
cmp
xor
add
inc
or
negl
and
cmp
aam
mov
push
test
jo
imul
ret
mov
popa
dec
cmp
data16
cwtl
cmp
xor
insl
jl
lcall
rcrl
ljmp
repnz
ljmp
stc
scas
int
inc
bound
jge
shl
adc
fwait
adcl
jg
das
iret
bound
and
test
mov
xchg
push
dec
or
lret
mov
xchg
stos
clc
sbb
mov
pop
scas
stos
hlt
lret
mov
leave
add
test
inc
mov
fyl2xp1
loopne
inc
jnp
pop
cmc
xlat
fiadds
and
std
xchg
xchg
xor
cmpb
jb
shl
mov
out
mov
in
adc
arpl
xchg
and
xlat
or
sbb
mov
mov
push
mov
in
pop
cmp
nop
xchg
pop
xor
cmp
adcb
addr16
push
dec
pop
addr16
clc
repnz
push
les
call
inc
iret
or
lock
push
push
sub
sbbb
mov
lahf
sbb
push
push
enter
fdivr
inc
mov
out
mov
dec
outsb
stc
jmp
xor
popa
mov
mov
adc
cmpsb
jge
xchg
loopne
cmp
mov
nop
mov
std
add
sbb
cld
insb
mov
mov
flds
push
shll
icebp
enter
mov
scas
add
pop
pop
or
xor
mov
or
sbb
lret
loope
in
out
mov
fidivl
jp
cmp
lcall
imul
les
and
repnz
stos
inc
gs
in
mov
xor
sub
add
sub
mov
pop
push
in
and
xor
dec
in
xor
pop
nop
jnp
jno
test
cld
js
ljmp
leave
inc
pop
mov
addr16
pop
pop
pop
fists
cmp
mov
dec
scas
aam
jb
out
add
add
movsl
mov
push
lahf
xchg
nopl
jmp
inc
inc
dec
pop
sub
xchg
mov
aam
fnstenv
mov
add
mov
dec
clc
test
sub
cmp
sti
hlt
cmc
xlat
xlat
pop
aam
and
inc
cmp
lahf
push
aaa
sub
mov
ret
in
out
xchg
push
je
mov
ja
mov
push
dec
mov
out
test
xor
jns
cwtl
mov
add
inc
lock
bound
out
xchg
pop
cs
in
mov
aas
mov
outsl
sar
fwait
mov
int
insl
fwait
sub
cmp
in
in
push
adc
jmp
add
cs
pop
mov
fwait
inc
mov
hlt
dec
pusha
mov
adc
arpl
xchg
lahf
jmp
cmp
lret
enter
mov
pusha
lods
roll
push
mov
rorl
adc
or
mov
ja
stos
lret
aaa
sub
jecxz
cmp
imul
jbe
ljmp
mov
sahf
pushf
mov
push
pop
mov
sbb
scas
pop
cmpsl
pop
in
lret
in
fwait
cld
jge
pushf
aas
adc
cltd
or
shl
xchg
xor
mov
xor
in
lcall
push
mov
mov
pop
je
mov
pop
cmp
dec
movsb
dec
jle
jp
mov
sub
loop
fadd
xchg
push
dec
in
stc
ljmp
imul
repnz
mov
jno
cmp
pop
insl
gs
sbb
mov
loope
cmp
sahf
stc
pop
cli
sbb
lods
jmp
push
mov
jno
das
mov
pop
pop
loope
push
lea
xchg
out
jne
adc
fldcw
es
cmc
mov
dec
adc
nop
test
and
cmp
adc
and
imul
jmp
cmp
inc
or
adc
inc
popf
add
cmp
push
or
movsl
and
shl
add
mov
adcl
add
in
mov
mov
stc
popf
pushf
xlat
ret
cmp
pop
sbb
pop
inc
mov
jnp
or
call
cmp
or
dec
inc
movsb
inc
cs
stos
sbb
fdivrl
mov
cmp
xor
pop
pop
add
outsb
mov
adc
sub
mov
rcrb
cmpsl
cmp
inc
adc
movl
cmp
out
sahf
scas
cmp
mov
in
fmulp
loopne
and
mov
sub
inc
lea
xor
xchg
cmp
pop
mov
or
mov
js
xchg
and
cmp
clc
lds
shlb
xor
mov
adc
pop
cld
testb
jb
lahf
mov
test
ljmp
cmpl
and
popl
insb
mov
and
cmc
in
mov
push
push
jne
in
pusha
add
lea
sbbb
popa
jno
ss
bswap
inc
push
mov
mov
push
cs
lea
xor
repz
dec
testb
jmp
adc
push
movsl
mov
dec
adc
imul
xlat
inc
lea
in
mov
mov
adc
pop
sarb
icebp
mull
or
adcl
and
mov
movsl
mov
ret
mov
pop
jle,pn
xor
push
orb
xchg
xlat
das
je
call
mov
lahf
and
out
insl
mov
pop
sub
lcall
inc
jge
inc
or
dec
push
sbb
mov
add
jb
or
imul
orb
insb
test
lods
mov
outsl
jo
cltd
pop
mov
lret
popa
fs
movsb
inc
add
xchg
dec
mov
ja
nop
push
cmp
fisttpl
jp
and
adc
fldt
jmp
orl
cs
fstps
jecxz
aaa
fwait
popa
xor
int3
xchg
sub
push
nop
mov
stos
jnp
sub
aas
sbb
enter
gs
popa
xor
inc
mov
dec
push
repz
inc
push
leave
mov
sub
insl
inc
sub
dec
rcrb
cwtl
xchg
mov
jb
std
and
gs
cmp
push
mov
sbb
inc
push
mov
mov
subl
cld
mov
sahf
mov
fsubp
ljmp
inc
mov
xchg
std
mov
mov
pop
pushf
shl
and
fdivrl
pop
call
mov
xchg
mov
push
sbb
jne
xchg
lds
out
xchg
dec
mov
sbb
lds
cmp
imul
out
ss
pusha
in
adc
jg
rcrb
mov
cmpsb
mov
jmp
xchg
call
in
test
into
jle
out
xor
xchg
fnsave
inc
inc
daa
and
mov
loop
push
pop
mov
insb
and
out
pop
enter
mov
and
sarb
push
out
movsl
push
arpl
inc
add
imul
jmp
push
in
mov
sub
mov
pop
push
lods
mov
outsl
mov
cmp
adc
xchg
cmp
repz
int
sahf
sub
add
mov
jmp
xchg
jbe
sbb
and
ja
cmp
push
pop
jecxz
out
sub
or
aas
outsb
hlt
pop
dec
add
add
addb
ficoms
mov
out
push
out
jns
lea
inc
push
xchg
xor
mov
xchg
adc
in
in
arpl
mov
aas
cmpsb
dec
lods
lods
movsb
jecxz
add
cltd
icebp
xchg
rorb
aam
and
test
roll
aam
addb
imul
movsb
test
xor
push
outsb
inc
pop
lret
xor
lahf
les
adc
call
insb
mulb
leave
andb
lods
clc
mov
jbe
cmp
sbb
jmp
sbb
ljmp
jns
cs
aam
xor
ljmp
jmp
stos
or
push
lret
out
cmpsb
loope
dec
cmp
inc
mov
hlt
sub
fs
mov
cmpsl
push
sti
insb
fcomip
add
adc
shlb
mov
mov
push
loop
jb
ja
sub
inc
xor
out
cmp
aam
add
add
jg
inc
nop
pop
push
sti
mov
mov
xchg
and
clc
sbb
pusha
rcrb
out
stc
push
push
mov
daa
in
scas
xlat
and
sbb
or
lods
int3
xchg
ss
or
fildll
mov
adc
push
xor
lds
pop
dec
ds
mov
iret
imul
adc
xlat
add
aad
jnp
pop
jecxz
cmp
fsubr
or
push
lock
adc
mov
cmc
pop
sbb
inc
sub
aad
outsl
repnz
inc
push
mov
dec
neg
ret
add
and
jbe
fyl2xp1
dec
idiv
insb
insl
test
push
xchg
std
xor
out
sbb
sub
dec
jns
arpl
and
popf
or
adc
nop
popa
ror
and
sub
sub
sub
test
lahf
dec
das
and
mov
popa
cmp
push
pusha
inc
mov
mov
out
repnz
test
inc
cld
pop
or
imul
lods
testb
xor
ss
pop
xor
fsubp
or
cmpsb
cmp
pop
cmp
push
test
dec
fcompl
jg
push
mov
mov
mov
icebp
mov
sbb
fdivl
imul
sahf
and
test
imul
ret
jae
insl
pop
into
cmpl
push
adc
aam
decl
xor
mov
outsb
and
imulb
in
or
aas
pusha
mov
xchg
xor
sub
fst
xor
sub
mov
popa
jl
and
inc
sbb
test
es
and
adc
test
xchg
add
sub
pop
push
push
push
pop
rorb
mov
inc
inc
faddl
and
sbb
bound
fst
into
mov
push
sub
push
aas
push
inc
dec
cmp
sbb
pop
in
mov
jle
jns
cmpsb
subb
cld
inc
mov
mov
lcall
daa
int
lock
imul
or
push
pop
mov
mov
aaa
mov
lret
fs
pmaddwd
pop
or
adc
mov
inc
xor
jecxz
lret
sub
inc
xchg
mulb
popf
ljmp
sbb
jo
xchg
jp
icebp
ret
stc
push
and
mov
and
pop
jmp
push
add
out
mov
mov
push
test
cmp
cwtl
push
mov
push
jnp
imul
out
outsb
jns
clc
adc
inc
js
sub
pop
outsl
ja
sahf
testb
pop
push
xor
and
add
lea
jno
sahf
mov
subl
sub
iret
push
cmp
pop
or
jo
mov
jae
movsb
popf
add
jae
in
stc
lods
adc
imul
push
mov
dec
repnz
aam
mov
sub
or
push
push
mov
insb
addl
xchg
enter
mov
pop
mov
add
aam
nopl
xor
and
push
sbb
loope
les
mov
mov
pop
and
inc
cwtl
pop
push
loop
mov
jae
add
jmp
jns
test
jp
repz
dec
or
dec
and
and
xchg
lret
incb
loopne
dec
rorb
add
loop
int3
mov
mov
mov
xchg
rorb
fnstenv
call
push
aaa
insb
clc
mov
std
into
jl
or
mov
mov
cmpsl
xchg
mov
mov
and
jle
into
vmovsd
sbb
xor
mov
mov
test
adc
out
int
jnp
pop
adc
aad
or
int3
cs
outsb
stc
popa
jge
repnz
cmp
cmp
push
stc
mov
into
out
inc
pop
jno
fadds
dec
adc
bound
adc
dec
mov
mov
and
adc
int3
and
mov
xor
cmp
pop
lods
hlt
loop
ljmp
aaa
aad
outsl
xor
or
mov
adc
or
dec
shll
out
fs
xchg
cmp
stos
fdivp
add
sbb
fwait
call
roll
cmp
mov
gs
inc
cmpsl
lcall
aam
push
fmuls
push
lret
cmp
cmp
sbb
mov
mov
inc
and
adc
inc
std
xchg
pop
orl
lcall
pusha
test
data16
in
popf
dec
push
rorb
out
pusha
js
jle
cmp
jns
andb
fimuls
adc
jno
sub
mov
xchg
clc
mov
jmp
pop
xchg
lock
dec
mov
push
push
mov
sbbl
mov
or
inc
ljmp
xchg
jbe
cmp
cmc
lock
mov
inc
push
inc
inc
pop
cmp
fisubs
rorb
adc
aam
jno
inc
mov
cltd
outsb
setg
adc
mov
rclb
aaa
daa
or
mov
xor
push
mov
addr16
xor
mov
divl
xchg
inc
std
call
xchg
gs
mov
addr16
xchg
aas
ror
out
orb
cmpl
lods
cld
in
mov
and
add
pop
nop
xchg
xchg
push
test
pop
push
mov
lcall
sbbl
dec
sarb
inc
jbe
push
cmp
repz
mov
and
mov
ljmp
xor
push
sub
test
push
out
push
inc
xorb
aam
pop
inc
das
aad
lods
or
ficompl
dec
imulb
int
test
jno
sti
pop
xor
adc
xor
adc
mov
lret
repnz
gs
aam
pop
fldcw
fistps
push
pop
adc
push
mov
or
or
inc
ds
pop
xchg
sbb
adc
inc
add
stos
push
repz
aas
movsl
or
adc
repnz
jb
pop
xor
or
in
repz
pushf
hlt
dec
adc
mov
mov
sub
clc
mov
xchg
leave
dec
xchg
stos
negb
out
mov
jnp
sbb
fisubl
pop
adc
jmp
stos
loop
lods
xchg
sarl
add
jns
in
pushf
jo
push
dec
lret
push
imul
inc
mov
push
dec
jge
jo
mov
mov
mov
icebp
xchg
imul
es
aad
mov
pusha
inc
jge
std
mov
addr16
pop
mov
adcl
daa
andb
cmpsb
dec
xchg
out
leave
xchg
xchg
loop
lcall
fs
bound
pusha
outsb
gs
sub
inc
insb
adc
sub
ljmp
push
xor
inc
add
dec
adc
cli
fdivrs
popa
adcl
subb
sti
pop
xchg
jo
fs
jecxz
adc
adc
stc
add
xchg
mov
mov
xchg
mov
clc
outsl
pop
xchg
dec
test
insl
jae
xchg
sbb
pop
push
adc
je
into
mov
lea
jecxz
mov
je
fisttpll
fdiv
frstor
aad
sub
pop
pop
cmp
int
pop
dec
lret
insl
sbb
stc
pop
and
adc
xchg
fbstp
push
dec
cld
adc
test
adc
xchg
adc
scas
fidivrl
orps
adc
fisubs
fsubr
nopl
rcpps
jae
mov
xabort
and
cmp
loope
mov
cli
pop
xor
mov
ficoml
mov
and
mov
leave
cmp
stos
xor
mov
add
push
xchg
sbb
dec
fdivr
dec
push
and
cmp
cmc
pop
jb
xchg
xchg
fstpt
dec
out
lcall
test
movsl
lret
push
mov
cld
shlb
jle
subl
xor
xor
movsb
jne
mov
idivb
mov
enter
gs
push
imul
jl
int3
sbb
fwait
das
push
add
sahf
xsaveopt
mov
shrb
xchg
xchg
in
jecxz
mov
sub
jno
aad
loope
packsswb
lods
jns
pop
jle
loope
pop
dec
popf
mov
and
jle
jl
pop
adc
pop
and
jge
xchg
dec
inc
jge
ret
test
push
clc
scas
sar
out
scas
push
add
xchg
xchg
out
mov
inc
lret
xor
sub
enter
inc
dec
or
push
call
sub
add
sub
mov
add
filds
and
pop
xor
mul
adc
pop
jecxz
addl
pop
mov
aad
or
imul
or
sub
sub
ja
scas
icebp
xor
push
dec
cs
xor
aaa
pop
jle
mov
push
fisubrl
iret
mov
inc
jmp
insl
dec
mov
push
imul
mov
fsubs
jmp
lock
icebp
mov
insl
sub
cmpsb
inc
mov
cmp
add
enter
movsl
adc
repnz
cmp
popf
push
pop
out
xchg
xor
xorl
jp
outsb
imul
adc
dec
ss
outsl
imull
xor
idivl
push
xor
adc
flds
cwtl
cmp
movsb
lock
imul
popa
jecxz
mov
jae
std
int
lock
shll
dec
xchg
les
sbb
pop
cmp
into
and
dec
imul
mov
xor
sbb
mov
cltd
addr16
fistl
pop
fprem1
icebp
cli
adc
mov
mov
jns
fnsave
imul
adc
jb
ja
inc
mov
fs
lods
or
pop
mov
call
inc
add
hlt
ss
arpl
out
cmp
sbb
and
int
in
push
sub
insb
lock
orl
repz
inc
into
add
fcmovb
cld
ljmp
das
cltd
lahf
and
sbb
loope
cld
loop
and
xbegin
mov
fisttpl
or
add
shl
fs
sub
daa
out
test
iret
mulb
sub
adc
cmpsl
pop
sbb
lock
fsts
sbb
scas
lods
loope
lret
adc
roll
xchg
in
jle
lds
add
aam
sbb
call
lahf
testl
fsubr
cli
jle
cmp
add
clc
lret
insb
xor
xchg
or
scas
ffree
add
movsb
and
xchg
int3
fisubrl
int3
cli
out
cmpsb
jmp
mov
mov
out
push
stos
fistpll
and
loope
cld
fimull
pop
nop
shrl
enter
fcompl
enter
inc
movsb
hlt
jno
inc
movsl
cs
daa
xchg
movsb
jmp
xor
stos
shrb
clc
pushf
sti
pop
negb
adc
js
inc
inc
jl
sub
mov
jg
cmp
pop
jno
mov
cmpsl
sub
enter
mov
negb
loopne
iret
mov
push
sub
hlt
scas
adc
sub
out
xor
cmp
xchg
lret
sarl
int3
adc
dec
iret
pop
jae
mov
ja
push
add
repz
mov
mov
sbb
and
mov
xor
arpl
mov
mov
into
fwait
out
mov
pop
lcall
jle
and
dec
loop
adc
rcll
sub
push
stos
jno
ljmp
enter
ds
jb
cmpsb
or
das
stc
das
add
jl
xchg
imul
sti
mov
lds
dec
in
jg
lods
pop
lcall
inc
mov
pop
and
or
and
jl
sub
les
push
pop
pop
int
repnz
decl
mov
push
inc
mov
fdivs
jns
fistpl
cmpsl
push
xchg
mov
sti
and
insl
and
loopne
enter
xchg
mov
int
ja
popf
hlt
mov
jge
out
pop
adc
pop
aam
mov
enter
and
cli
andb
outsb
lea
sub
jg
movsb
inc
and
mov
mov
mov
js
inc
or
dec
int
and
inc
mov
data16
sarl
aam
ret
add
repnz
jne
pop
jns
and
or
cmc
pop
mov
insl
xor
add
xchg
and
stos
loope
xor
loop
sbb
sub
fldt
fnstenv
lock
dec
or
ljmp
sub
call
or
mov
int3
aas
dec
dec
in
insb
enter
xchg
cmp
mov
es
pop
fsubs
pop
arpl
int
sbb
jns
or
pop
push
fistpll
out
pop
and
gs
sub
push
ds
jne
iret
outsl
imull
cmpsb
incb
mov
or
fsubrl
add
sbb
cmp
add
push
clc
cmc
hlt
imul
rol
pop
adc
imul
adc
mov
daa
outsl
repz
mov
cmpsl
cli
mov
push
lahf
arpl
push
cli
xchg
mov
out
lret
mov
nop
xchg
ja
pop
cmpb
enter
out
fwait
and
dec
sbb
repz
push
sub
jnp
xchg
jns
pop
xchg
or
imul
add
inc
jle
cmpsl
into
jecxz
adc
pop
mov
rolb
inc
mov
jne
outsl
hlt
inc
in
rcr
es
cmpsl
adc
pop
xor
and
loopne
mov
iret
push
mov
loope
cwtl
leave
out
data16
cmp
fidivs
pop
and
ret
xchg
cmp
ret
dec
jmp
sbbl
in
cmpsl
into
and
iret
sbb
ficoml
push
mov
clc
inc
jle
cld
data16
xchg
dec
adc
inc
popa
mov
mov
and
sbb
dec
xchg
les
out
icebp
push
xchg
jg
cmp
aam
arpl
ret
rcrb
cmp
fldenv
jo
mov
push
outsl
xchg
cmp
cmp
push
mov
js
inc
lahf
test
cmp
mov
cwtl
inc
and
jl
sub
push
je
xor
or
push
xchg
or
lods
mov
test
xor
or
mov
mov
adc
popf
jge
out
xchg
pop
stc
es
push
mov
outsl
and
pop
in
int
fsts
mov
into
mov
sub
dec
les
or
repz
daa
inc
mov
int3
and
mov
add
xor
pop
test
leave
mov
jge
test
aad
sub
cwtl
xor
out
addr16
mov
sub
int
rclb
dec
inc
xchg
aam
mov
mov
popf
jge
arpl
pop
jmp
adc
rclb
mov
fcmovnu
pop
xlat
ljmp
mov
aaa
cld
mov
or
sub
mov
jb
jge
sub
cmc
sbb
aad
aaa
xor
jae
shlb
stc
push
gs
aaa
movsl
mov
popf
mov
adc
popf
leave
mov
mov
out
xchg
sub
lods
pop
push
outsb
out
ds
lea
enter
xor
jno
or
inc
jecxz
sub
jno
push
cwtl
fwait
in
cmpsl
insl
inc
dec
dec
mov
xor
xor
lahf
jbe
dec
mov
xor
loopne
sub
dec
adc
sub
and
sbb
inc
imul
pop
fwait
pop
pop
sub
xchg
aam
loopne
ds
ret
jae
jbe
gs
mov
scas
adc
testb
and
pop
push
xchg
lret
cvttps2pi
lods
repnz
andl
xchg
je
pop
sub
push
in
xchg
pusha
aas
sbb
ss
mov
push
test
mov
pop
imulb
in
gs
cltd
clc
movsb
mov
or
shll
mov
imul
loope
cmpsb
bnd
inc
mov
stc
in
mov
cmpl
sbb
enter
dec
dec
xchg
xor
pop
gs
jae
adc
pop
add
xor
cmc
xor
lcall
js
adcl
cmp
icebp
add
fbstp
jo
inc
mov
shlb
xchg
lret
xlat
jb
scas
bound
test
sbb
aas
jl
push
data16
cs
adc
add
dec
mov
adc
pop
fsubrl
cs
fildll
or
or
jbe
clc
in
push
out
outsl
dec
aam
pop
xor
rcrb
push
test
jmp
insl
adc
xchg
aam
in
add
movsb
dec
dec
cmp
mov
pusha
dec
xchg
xchg
rorb
in
outsb
dec
pop
test
mov
es
or
int3
jo
or
xor
mov
cmc
jo
adc
add
lods
lods
enter
inc
jb
cmp
sub
insl
sbb
push
sahf
dec
adc
xchg
lcall
mov
fildll
jg
cs
jo
or
setns
cmp
cltd
jecxz
push
dec
lcall
add
xchg
popf
mov
push
clc
rcll
cmc
jmp
push
sub
add
dec
insb
mov
insl
bnd
jae
add
inc
jo
xchg
fwait
addr16
cltd
xlat
jecxz
xchg
push
inc
arpl
ret
push
imul
leave
push
inc
push
pushf
test
pop
dec
testb
jle
or
hlt
scas
adc
mov
mov
stos
pop
add
inc
and
fidivl
jle
pop
lcall
fidivs
ret
push
sti
pop
add
ljmp
cmpsl
icebp
inc
jmp
int
push
aas
mov
mov
fldt
add
push
ljmp
sub
jmp
test
add
mov
in
xchg
sub
push
xor
pushf
pop
pop
bound
push
ja
popa
aad
mov
pop
jl
or
pop
test
adc
ja
enter
pusha
push
lods
inc
stos
adc
xor
aas
or
jecxz
pop
dec
xor
mov
ds
sbb
clc
je
sarl
sbb
xchg
jne
ja
cmp
pop
add
rcr
popa
enter
xchg
fimull
adc
sbb
add
insl
xchg
and
xor
mov
jp
lret
xor
adc
lahf
sub
cmp
sti
ja
mov
test
adc
mov
aaa
xor
jae
pop
out
arpl
add
push
data16
adc
lods
cwtl
adc
mov
cli
mov
mov
imul
aad
imul
popf
mov
test
jne
sahf
iret
outsl
pushf
mov
cmp
add
mov
aam
repnz
dec
jle
xchg
mov
stc
cmp
sbb
rcll
add
aad
push
inc
loopne
xor
jle
jo
or
lret
xchg
lods
xchg
int
jge
mov
pop
out
jge
les
out
repnz
mov
pushf
mov
push
subl
xchg
jb
ret
xlat
push
repnz
cmp
push
sub
jno
cmp
stos
xchg
xor
cs
shll
icebp
pusha
ror
lret
test
add
pop
inc
scas
aas
adc
xor
fwait
cmp
ret
adc
jnp
cmp
jmp
outsb
loop
mov
hlt
mov
insl
andl
pop
sbb
int
mov
mov
cmpl
pop
jo
daa
stc
out
notl
xchg
jp
into
sti
xchg
inc
push
scas
arpl
pop
ljmp
sbb
out
arpl
dec
mov
filds
xchg
ret
mov
jmp
mov
mov
sub
pop
in
pop
cmp
push
cld
mov
xchg
orb
mov
sbbl
jns
into
sub
hlt
repnz
lock
or
mov
dec
jge
mov
popa
sub
fucomi
shlb
pop
pop
out
adc
mov
xchg
lahf
add
data16
cwtl
push
or
fs
push
mov
push
sub
mov
dec
mov
and
pop
xchg
icebp
movsb
sbb
and
add
jae
dec
in
lds
cmp
push
aad
dec
fsubrs
ljmp
frstor
pop
sub
add
dec
dec
inc
adc
shll
push
push
in
fcomps
daa
call
sbb
hlt
das
enter
and
cmp
pop
nop
adcl
sbb
bound
aad
pop
ret
lds
lahf
cld
dec
enter
jbe
mov
inc
call
or
pop
sub
dec
sahf
daa
into
jo
repz
pop
cli
fs
test
sub
inc
xor
movsb
mov
pop
inc
jge
xlat
dec
add
add
pop
xor
rorb
js
jge
je
xor
mov
dec
mov
sbb
adc
notl
jl
flds
cld
or
fbstp
xorl
cmc
sbb
in
in
fcmovnb
mov
lods
data16
rep
fbstp
inc
lcall
pop
mov
adc
cli
jle
jns
aas
andl
sbb
movsl
sbb
xor
and
cld
sub
mov
fistpl
mov
xchg
mov
inc
mov
inc
mov
xor
mov
cmp
push
push
jg,pn
mov
or
fildl
dec
jbe
or
jle
aad
roll
and
xlat
push
xor
and
pop
pop
std
movsl
pop
xlat
push
popl
insb
sub
xchg
addr16
mov
int3
dec
sbb
sar
les
insl
sub
mov
inc
mov
sti
cli
or
pop
inc
xchg
inc
inc
ljmp
stos
lahf
pop
arpl
in
daa
cli
dec
dec
or
adc
sbb
jns
call
add
mov
leave
cmp
mov
xor
and
inc
jne
or
cmp
insl
pop
loope
fistps
and
add
add
mov
add
cmp
insb
sbb
push
mov
out
fists
push
addr16
mov
fsubl
add
mov
cmp
adc
mov
shrl
push
lahf
lds
xchg
dec
mov
rcll
dec
mov
flds
jb
or
push
in
push
mov
aad
popw
inc
sbb
cmp
push
add
xchg
sbb
insb
scas
aaa
lret
inc
insl
mov
xchg
in
xor
or
mov
xchg
fwait
ret
cwtl
dec
aaa
adc
sbb
xor
filds
xchg
inc
iret
mov
adc
sub
jecxz
cmp
imul
adc
jno
cmp
pop
and
adc
enter
dec
pusha
cmp
repz
and
xlat
and
add
cmpsb
pop
adc
and
ljmp
cwtl
stos
mov
lods
mov
inc
jnp
insl
push
add
push
insb
test
jecxz
lahf
jle
push
adc
out
lahf
and
jns
xchg
aaa
repz
or
sbb
push
scas
loope
in
lahf
inc
ljmp
in
add
jo
cwtl
mov
dec
imul
push
mov
inc
jo
jbe
inc
or
add
cmc
mov
pop
mov
sbb
cld
inc
xor
orl
and
and
shlb
movsb
xchg
and
addl
mov
fldl
pop
mov
mov
aad
pop
scas
inc
mull
cmp
stos
btr
mov
jg
std
cmp
enter
xchg
ret
pop
lret
nop
dec
dec
sbb
xchg
cltd
xor
ds
xor
push
mov
out
lods
hlt
xchg
ret
testl
insb
cli
movsl
add
sub
mov
pop
fs
out
jbe
jne
pop
xor
or
cmc
popf
das
aaa
cli
scas
cmp
out
cmp
popa
adc
bound
sub
stc
lahf
mov
shll
mov
dec
push
or
imul
sub
and
xchg
ror
std
jmp
dec
sbb
pop
jns
pop
daa
hlt
jle
or
in
lcall
lret
pop
cmp
repnz
jecxz
mov
lock
pop
cli
into
fnstcw
cmpsb
cmpsl
lock
movsb
xor
icebp
jge
stc
das
fwait
jae
adc
lahf
fwait
test
bound
dec
xchg
jl
hlt
sub
in
insb
divb
stc
xchg
rolb
mov
mov
dec
lret
ljmp
adc
xchg
mov
adc
cmp
mov
dec
jle
dec
mov
cmpsl
jbe
ljmp
sbb
data16
outsb
add
xor
shrl
lret
scas
popa
ljmp
cs
fwait
dec
adc
fnsave
leave
jbe
in
out
cmpsb
in
and
negb
in
int
jns
fnstsw
lret
icebp
inc
fwait
sbb
daa
imul
stos
jnp
mov
push
push
out
mov
repnz
mov
out
outsl
incl
dec
dec
stos
and
jnp
cmpb
cmp
fwait
add
xor
dec
push
sarb
cmp
enter
inc
or
insl
ss
pushf
addl
adc
mov
fcomps
sbb
lahf
enter
mov
sub
inc
mov
jb
fwait
cmp
lcall
outsb
rorl
insl
sbbl
in
faddp
or
cli
jmp
push
lcall
out
lods
inc
fs
push
idivb
mov
out
pop
loop
leave
lcall
mov
adc
fnsave
nop
mov
movsl
inc
mov
jge
out
les
mov
xchg
bound
mov
lret
into
xchg
aam
scas
je
ljmp
xchg
ljmp
inc
imul
pextrw
dec
jg
mov
hlt
or
cld
fwait
rcrl
imul
in
ret
xor
mov
adc
cmp
js
push
and
out
pop
xor
or
shll
mov
pushf
cmpsl
dec
sub
lret
push
dec
dec
pop
daa
cmc
push
sti
pop
or
xor
pop
pushf
dec
inc
ret
jnp
xchg
cltd
sub
aad
stos
jbe
inc
into
packuswb
adc
aaa
test
mov
push
and
push
pushf
mov
aas
ja
fsubrl
cmpsl
jle
shlb
repnz
mov
add
adc
sbb
aad
test
push
outsb
sub
sbb
push
dec
lcall
cmp
pop
iret
jo
dec
jne
mov
nop
mov
push
push
and
int3
jmp
mov
sbb
shld
dec
mov
dec
jo
inc
sub
dec
push
in
out
jbe
pop
std
mov
sbb
cmpl
xchg
lock
loop
pop
loope
iret
sub
sbb
arpl
orb
adc
xchg
sbb
movsl
lret
pop
cmc
inc
sub
in
fnstenv
movb
inc
mov
pop
mov
push
xchg
push
inc
xchg
pop
loop
repz
inc
jb
add
cmp
inc
sti
fcoms
fwait
xor
push
push
inc
push
cmp
mov
out
inc
add
dec
push
xor
scas
cmp
pop
fisubrs
lods
mov
dec
fs
xchg
cmc
div
add
mov
mov
ficoml
stos
jp
lock
dec
out
xor
cmpsb
pop
or
adc
add
scas
loopne
mov
mov
fdivrp
sub
sub
adc
ficoms
fstpt
xor
xor
cmp
xchg
mov
mov
and
insb
dec
mov
mov
add
aad
xor
fadds
pop
test
test
mov
sub
ret
test
xchg
mov
int
sbb
push
insl
adc
mov
jmp
push
adc
jns
and
imul
mov
xchg
mov
sti
xchg
loope
leave
sbb
enter
ja
sub
jbe
lods
bound
push
cmpsl
sbb
pop
pop
int
jno
outsb
hlt
and
inc
jns
pop
xor
adc
jbe
jae
push
add
and
dec
out
shl
or
xchg
push
sub
std
and
mov
xchg
xor
aas
test
dec
add
push
push
mov
fnstenv
out
mov
fnstcw
sbb
xchg
xlat
jb
sbb
pop
lcall
bound
cmp
adcl
std
imul
out
inc
sbb
stc
mov
rcll
mov
test
or
or
repnz
pusha
cmp
xchg
repz
jp
lds
scas
lds
xchg
fisubrs
jns
xor
gs
dec
xchg
repnz
mov
es
inc
fisubs
frndint
jle
jo
lock
adc
jl
jle
push
jbe
pop
jecxz
xchg
cmpsl
add
and
pushf
sahf
sbb
cmpsb
addr16
xchg
push
jg
emms
nop
scas
or
and
popf
push
ds
xchg
out
mov
sub
lds
dec
das
mov
adc
push
scas
lea
inc
stos
cs
ds
xchg
sbb
test
scas
test
or
in
ds
dec
inc
pop
xchg
pop
aad
push
jl
loop
dec
xchg
in
ljmp
in
cwtl
int3
mov
stc
add
decb
pushf
xor
jp
fimull
outsl
xor
adcl
xor
xor
jb
mov
lods
popf
cmp
aad
pushf
pusha
test
dec
fisubrl
xchg
jl
and
imull
jno
push
xchg
mov
es
imul
sbb
dec
dec
push
mov
inc
aam
ret
mov
dec
jl
mov
je
fistl
lcall
outsb
dec
ja
repz
out
mov
notl
or
shrb
mov
dec
orl
fs
stos
aam
fldenv
xlat
daa
mov
in
insl
pushf
xor
cmp
mov
add
hlt
mov
adc
push
sbb
nop
fimull
ja
and
cmpsl
sub
xchg
aad
add
dec
testb
test
or
js
adc
mov
repz
outsb
subl
push
in
sbb
sub
out
sbb
into
inc
cmpsl
stos
inc
lret
inc
mov
sbb
jle
fmull
sub
jo
jg
ds
test
mov
cmp
pop
aam
divb
call
fbld
dec
repz
loopne
repz
mov
in
jecxz
and
jl
cs
xor
out
mov
cld
lret
das
aam
push
test
xchg
cmp
fildl
mov
int
lea
xchg
popa
nop
xchg
pushf
inc
fnstsw
scas
jb
addr16
int
into
int3
outsb
mov
repnz
cmp
mov
sahf
adc
pop
adc
ds
push
je
ds
push
hlt
stc
fnsave
mov
push
cmpsl
xlat
push
dec
jns
jg
das
xchg
push
imul
add
jle
mov
jbe
das
pushf
daa
push
mov
into
adcl
fnsave
ficompl
dec
sub
ret
fimull
mov
iret
jbe
pop
daa
mov
fsubrp
pop
push
or
in
sub
cmc
loop
xor
shrl
sub
pop
test
pop
or
in
pop
sub
xor
insb
icebp
arpl
jo
and
and
cmp
fdivl
fnstenv
push
cmovge
or
push
pop
jge
dec
sti
repz
scas
int3
mov
pop
int
pop
or
das
mov
mov
mov
adc
xor
xchg
xchg
fcmovbe
nop
inc
add
inc
mov
pop
test
sub
dec
pop
adc
inc
add
mov
aas
push
mov
pop
sub
fs
dec
stc
sbb
lods
gs
test
and
mov
pop
addl
jle
scas
adcb
xchg
stos
hlt
xor
sahf
adcb
icebp
test
out
shll
adc
mov
repz
std
mov
xchg
mov
inc
adc
push
jg
push
xchg
shlb
dec
inc
push
sbb
ss
shlb
fs
push
sti
sbb
lock
pop
jns
mov
dec
es
mov
ret
cmp
pushf
xor
cmpl
mov
xchg
sti
cmp
lods
daa
sbbb
mov
add
and
idiv
add
xlat
sub
frstor
mov
cmpsl
xor
dec
dec
cmp
mulb
es
lcall
mov
imul
adc
leave
sub
push
test
test
sbb
out
pop
sub
xchg
sbb
test
mov
jae
lret
dec
sbb
cmp
movsl
ja
dec
insb
xor
les
sbb
orl
xchg
dec
push
mov
cmp
sub
jecxz
xor
in
movsb
push
xor
cs
sbb
jmp
mov
and
lret
lahf
cmp
stos
loopne,pn
shl
dec
std
sub
and
cmp
mov
cs
pop
std
mov
shll
lock
shrl
shrb
jo
inc
or
sub
and
cltd
mov
inc
insl
push
pop
scas
and
jns
fwait
ss
add
lcall
push
es
pusha
ret
pop
jne
leave
ret
xchg
adc
dec
test
ret
scas
mov
call
cmove
xchg
push
pop
mov
xor
and
shl
jae
cmpxchg
mov
xchg
or
xchg
jnp
pop
cmp
mov
enter
cmp
arpl
pop
dec
lret
pop
fsubl
sbb
hlt
dec
or
jg
jo
dec
addr16
lahf
bound
jne
xchg
test
jno
cli
xor
jbe
pop
cmc
sti
popf
sub
adc
xor
pop
dec
mov
mov
push
roll
insb
jecxz
sarl
aam
shll
mov
sbbb
hlt
jns
xchg
jmp
das
mov
dec
sbb
mov
lret
lcall
mov
nop
clc
xor
mov
fstpl
sbb
and
and
mov
add
stos
in
hlt
lea
xchg
xor
jp
dec
movsb
lahf
ljmp
fstpt
adc
inc
mov
fcompl
ds
ja
and
mov
jae
xchg
aad
push
loopne
repz
fwait
xchg
aaa
and
test
xor
push
jg
ja
jl
in
sub
add
jnp
ljmp
add
jl
cmp
lds
loop
insb
loope
pop
aam
xchg
dec
inc
mov
mov
shr
xor
rcrb
movsb
fs
scas
repz
cmpsb
push
and
mov
xchg
cmp
sbb
and
and
xchg
cmp
jbe,pn
call
push
jnp
stc
test
and
popf
jmp
clc
icebp
je
pop
adc
cmp
xchg
and
mov
jbe
dec
sahf
aad
jns
fdivr
and
out
jmp
stos
fisubl
int3
pop
adc
out
push
mov
addl
mov
rcll
or
movsb
nop
jl
or
in
addr16
add
test
dec
imul
and
mov
int
adc
or
or
pop
iret
dec
cmpsb
dec
sub
popf
mov
add
stc
fcompl
test
in
in
notl
mov
ret
adc
les
adc
lods
jae
add
jae
or
or
in
ss
xchg
jg
dec
fsubl
dec
pop
fcmovu
mov
test
and
push
rcrl
lcall
xchg
aaa
je
jl
mov
xor
mov
cli
adcl
cmp
fdivs
push
out
arpl
cmp
xchg
nop
add
sub
xor
push
mov
adc
inc
and
add
cmp
xchg
ret
imul
xor
cltd
mov
aad
movsl
push
mov
lods
dec
dec
push
jb
cmp
xor
outsl
pop
xchg
inc
push
sbb
pop
sbb
jg
sub
inc
or
insb
mul
loop
jg
mull
push
repz
and
xchg
xchg
cmp
push
and
ja
inc
push
xchg
cmp
xor
push
arpl
scas
cwtl
mov
mov
lcall
pop
and
jecxz
cmp
jb
ret
add
fldl
xchg
jae
mov
es
lods
psubsw
ficoml
jg
pop
push
gs
and
dec
sarb
adc
lahf
fdivp
push
mov
sub
les
xor
jnp
cli
in
fisttpll
ja
inc
or
pusha
pop
fidivrl
dec
das
test
das
aad
aas
out
repz
push
fistl
add
subb
add
test
ljmp
stos
jle
outsl
lods
aam
adc
cwtl
and
in
adc
mov
aaa
rolb
aas
xchg
inc
mov
mov
sub
aad
cli
cmpsl
xor
stos
pop
loope
and
cmpsb
pop
mov
or
cmp
and
popa
xchg
and
push
pop
xchg
xor
sbb
pusha
inc
pop
lahf
out
insb
jp
or
fs
or
pusha
jmp
nop
xor
frstor
push
jo
pop
out
sub
lcall
sub
in
add
and
repz
scas
or
fcompl
mov
out
insb
insb
mov
jecxz
dec
aam
cmp
mov
jo
ljmp
stc
mov
add
int3
and
pusha
mov
pcmpeqd
dec
out
mov
or
fsubrl
pop
outsb
mov
xor
lods
mov
jns
cltd
iret
pop
outsb
mov
or
lods
insb
je
dec
sub
cmp
push
and
xor
mov
cmpsl
hlt
cmpsl
into
jae
sbb
dec
pop
pop
sub
outsl
lds
in
jnp
mov
lods
mov
lcall
pop
pop
and
dec
cmp
jmp
pop
repnz
ret
pop
add
sub
and
into
mov
jg
push
mov
mov
and
decl
jb
add
add
lds
stos
bound
pop
push
call
sub
jns
mov
outsl
stc
rcrb
mov
rolb
pop
jp
shlb
mov
xlat
incb
cmp
push
dec
push
loope
push
data16
ret
orl
lds
sub
int3
repz
mov
pop
jns
fcmove
hlt
lods
fsts
or
or
xlat
xchg
dec
stc
and
aam
lcall
push
pop
jnp
lea
fsubr
test
mov
xor
je
lea
cs
cmpsb
and
and
mul
push
adc
ja
in
outsb
in
or
addr16
jl
mov
testl
fisubrl
cltd
lret
out
cmpsb
sub
xor
mov
bound
lret
push
sub
dec
pop
ret
divl
xchg
cmp
or
mov
sub
mov
dec
sbb
dec
inc
mov
mov
cmp
jne
xchg
push
ljmp
lods
cltd
jmp
int
add
inc
or
mov
fiaddl
sub
mov
lea
mov
xor
jae
dec
jo
push
rcrb
pop
pop
ret
lds
mov
movsb
mov
add
xchg
xchg
fiadds
inc
push
test
mov
jns
sbb
jbe
and
xchg
out
mov
push
and
mov
cmp
pop
cmpsl
and
outsl
xchg
mov
adc
mov
xchg
xchg
inc
aaa
jge
call
out
xlat
test
out
mov
ret
adc
cmp
sbb
test
shll
testl
lret
jne
in
pushf
sahf
sub
mov
adc
xchg
or
movsb
hlt
push
dec
cwtl
xor
daa
and
jbe
in
push
sub
push
shlb
movsl
inc
das
mov
ljmp
jl
aas
icebp
addr16
xlat
call
inc
das
int3
pop
pop
leave
cmp
mov
enter
ljmp
frstor
loop
pusha
repz
pop
xchg
mov
clc
daa
repz
push
sar
in
aad
pop
sbb
jl
push
push
mov
cmpsl
xor
pushl
mov
shr
leave
out
add
push
pop
int
fisubl
adc
mov
jge
dec
jno
push
xor
push
mov
movsl
pop
iret
iret
insb
pop
popa
cmp
inc
mov
sbb
or
mov
fildll
hlt
enter
cmp
jp
pop
or
sbb
addr16
and
push
dec
mov
push
insb
das
xor
jno
cwtl
cmc
ret
ret
dec
pop
inc
and
mov
dec
cmp
bound
xchg
or
jb
ds
adc
cmp
pop
out
fs
xchg
out
icebp
jo
jno
dec
dec
aas
cli
inc
push
movsl
rorl
and
push
xlat
xor
stos
cmp
pushf
mov
sti
fistps
xchg
xor
dec
stc
gs
xor
cmp
adc
mov
sub
movsb
das
testb
pop
in
data16
adc
fwait
sub
inc
jmp
sub
mov
dec
aad
sbb
sub
add
inc
icebp
sbb
jmp
pop
jp
jl
sub
out
pop
xchg
fstp
test
outsl
push
decl
or
rcrb
inc
mov
cltd
mov
xchg
xchg
in
pop
imul
xchg
mov
inc
push
outsl
jb
jnp
mov
lret
lods
sbb
popa
xor
mov
inc
iret
fnstcw
rep
enter
in
imul
roll
dec
mov
inc
mov
inc
data16
movsb
xor
fimull
mov
inc
repz
and
xor
pop
enter
test
push
mov
cltd
pop
gs
mov
sub
orb
adc
and
inc
movsl
aam
mov
cmp
stos
jle
out
lods
pop
rcll
nop
sub
adc
insb
jo
rcll
test
mov
mov
jne
pusha
enter
inc
lods
cmp
mov
dec
mov
jmp
inc
icebp
jp
and
insl
mov
leave
insb
xchg
or
push
dec
adc
or
lcall
xor
and
push
inc
inc
push
inc
fwait
pushf
adc
push
xchg
cmp
push
pop
push
iret
adc
mov
dec
shll
jg
scas
push
push
inc
cmc
dec
add
fisttpl
loopne
aaa
pop
inc
je
push
test
filds
mov
pop
mov
mov
xchg
ret
les
push
cmpsb
mov
mov
pop
xchg
dec
sahf
push
adc
outsb
test
sub
dec
mov
mov
test
outsl
mov
inc
inc
mov
or
and
aaa
xchg
nop
sbb
sbb
mov
and
cmp
add
test
movb
notl
std
andl
or
xchg
roll
andl
jmp
jmp
mov
xchg
imul
mov
mov
cmp
pop
mov
scas
fisubs
pop
sbb
shr
inc
cltd
cmp
push
movsl
in
iret
add
outsl
pop
and
adc
repz
mov
xchg
mov
jg
xchg
cmpsb
outsl
in
sbb
pop
shll
push
mov
in
shll
mov
inc
push
cmp
ficoms
shl
add
iret
cld
cwtl
cld
dec
add
push
mov
add
pop
push
dec
pop
ret
cmpsb
cs
test
dec
ret
xor
jnp
sub
mov
xlat
pop
push
jns
pop
mov
fistl
test
jge
xor
sub
into
sahf
outsb
xchg
push
cli
gs
inc
mov
mov
push
xor
push
fcomp
mov
mov
js
jp
loopne
dec
adc
in
les
out
xor
stos
stos
addr16
cmp
sti
test
rcrb
push
testl
movsl
mov
ss
push
and
xor
xchg
mov
sub
mov
adc
fidivrs
cmp
cmp
arpl
fsubl
xchg
lret
outsb
and
jge
imul
imul
push
or
dec
fisttps
dec
cmp
pop
test
cs
fbstp
bnd
pop
insb
and
jge
js
mov
inc
xor
xlat
jle
fwait
xor
loope
jbe
lret
daa
in
fsubrl
fldl2t
insb
mov
sahf
xchg
inc
mov
push
dec
fisttps
xchg
bswap
push
js
and
jge
std
xor
fucomi
mov
lahf
cmp
mov
adc
adc
push
cs
or
cmpsl
pop
push
cmp
or
aam
and
hlt
addr16
cmc
mov
pop
vpopcntw
push
jbe
xorb
lahf
push
adc
mov
mov
mov
cmp
add
and
mov
cli
repz
mov
adc
jno
xchg
add
cli
test
push
sub
imulb
insl
xor
xlat
ja
xor
xchg
xchg
orl
aad
add
pop
sub
mulb
cli
pop
fbstp
iret
cmp
outsb
xor
dec
ljmp
ret
cltd
cmp
xchg
stc
mov
push
or
inc
push
dec
mov
xchg
repz
ret
xchg
mov
pop
jmp
mov
fldenv
mov
jp
sbb
cmp
push
xor
cs
pop
jp
iret
lods
stos
and
and
add
inc
mov
sbb
dec
mov
cmp
aad
adc
cmp
adc
cwtl
in
idiv
cmpsb
sub
int3
loopne,pt
loope
out
pusha
jae
pushf
push
xchg
pop
lods
and
shrl
clc
stos
jbe
fstpl
mov
xchg
cmpsl
jg
cmp
sbb
add
sbb
cmc
cltd
out
cmp
lea
mov
add
popf
or
dec
jg
lds
out
call
mov
xchg
fimuls
mov
jnp
pop
mov
cwtl
pop
ja
or
xchg
xchg
pop
fstpl
xchg
in
sbb
es
out
dec
mul
cld
push
test
jecxz
lahf
jge
fnstcw
or
mov
inc
mov
scas
cmp
adc
and
outsl
shl
ss
dec
push
cwtl
daa
aam
jo
mov
mov
sti
push
data16
add
or
in
sbb
or
cmpl
cmp
lds
xchg
jl
ja
fsubl
cmc
xchg
pop
int
cs
inc
sbb
mov
cmp
or
loope
jge
add
sub
sbb
in
test
inc
aam
xor
push
or
pop
or
xor
imul
mov
mov
mov
adc
pushf
xor
cmp
mov
nop
jge
xor
pop
rcrl
jmp
sbb
pusha
fistpll
cmp
test
push
and
adc
sbb
imul
pusha
mov
imul
arpl
add
and
cli
jo
ficoml
mov
sbb
iret
call
sti
nop
inc
xor
dec
in
insl
out
insl
divb
loope
jmp
push
xor
jecxz
dec
cmpsl
jbe
mov
repz
jge
inc
lret
pop
lock
mov
fwait
jp
rorl
sbb
mov
sbb
movsb
sub
pop
cmpsl
insb
fists
pop
shll
or
seto
mov
jno
insb
mov
loope
pushf
mov
gs
dec
popf
insb
decl
aaa
hlt
inc
hlt
push
inc
mov
int3
push
jecxz
ljmp
aam
jle
cli
cs
mov
gs
mov
pop
js
pop
lock
das
mov
aas
test
push
into
pop
lahf
gs
xchg
xchg
lods
adc
fsts
cmp
je
pop
fnstsw
xchg
stc
les
into
sub
push
or
or
inc
jg
mov
pop
fcmovnbe
xchg
jge
clc
gs
adc
adc
mov
mov
or
out
or
mov
call
xor
test
es
lcall
in
stos
xchg
fs
jmp
add
jno
dec
and
jae
mov
mov
push
popf
inc
sbb
hlt
das
cmp
mov
stos
xor
sub
cmp
pop
pushf
testb
push
mov
inc
lret
adc
inc
and
push
hlt
inc
push
pop
aas
scas
cli
xorb
adc
sub
andb
daa
adc
mov
cmp
sbb
loopne
xor
pusha
aaa
dec
sbb
stos
inc
shll
icebp
jle
imul
int3
lea
ficoml
call
popf
cmpsl
cmc
les
in
ss
add
jne
jp
xor
das
push
pop
les
jne
int
fldt
cmpsl
jo
enter
cwtl
sbb
dec
jnp
push
les
movsb
jecxz
ja
xor
std
shrb
sbb
mov
mov
sbb
fistpl
out
dec
lcall
les
sbb
dec
mov
jns
push
and
mov
mov
push
pop
ss
xchg
sahf
fdivl
cli
les
insb
mov
test
lock
dec
mov
xor
test
inc
cltd
sahf
subb
daa
jge
testb
pop
js
xlat
jecxz
mov
dec
mov
out
xchg
aaa
mov
lret
push
push
fidivl
push
popf
repz
xchg
jns
arpl
cmp
push
xlat
push
lods
lret
cmp
mov
xchg
adc
add
xchg
fcoms
in
mov
xchg
dec
je
stos
data16
jmp
mov
loope
jmp
cmpsl
lods
inc
lahf
sub
jbe
popa
xchg
mov
cmp
jae
leave
dec
and
or
adc
psubq
imull
add
out
dec
addr16
mov
sti
add
sbb
jno
inc
pop
mov
cmp
rcr
dec
out
fsubl
sub
aaa
xchg
mov
pop
mov
mov
lods
outsl
decb
adc
rcrl
cmpl
sub
push
outsl
pop
jb
or
dec
fsts
mov
cli
mov
inc
cmp
add
out
test
outsb
xlat
js
subb
inc
sub
gs
xchg
dec
pop
mov
es
pop
mov
aaa
push
int
dec
push
pop
aas
and
jae
pop
sub
call
int3
jge
xchg
ret
push
sbb
dec
out
pop
arpl
adc
lods
mov
stos
jmp
xchg
fwait
arpl
pushf
faddp
mov
lds
adc
shlb
aad
adc
pop
dec
cld
cld
ret
mov
ret
das
ja
jb
hlt
jmp
push
dec
pop
xlat
movsb
outsb
push
aas
imul
or
or
pop
push
or
stos
cmp
rorb
pop
aaa
outsb
jbe
rcrl
pusha
push
push
dec
mov
mov
daa
stos
pop
das
push
sub
cmp
cmp
jns
pop
add
iret
das
jl
or
push
ret
add
out
aam
xor
pop
movsl
inc
xchg
cmp
mov
bound
test
fst
inc
pop
roll
mov
nop
icebp
cwtl
push
and
in
enter
mov
movsb
jg
repz
mov
xor
das
js
jmp
or
push
add
fadd
xchg
in
fldenv
lret
ja
in
mov
push
mov
sub
outsb
mov
dec
imul
lods
dec
adc
orl
mov
sbb
jecxz
sbb
pop
movsl
add
movsb
xchg
fsub
jbe
pop
mov
xchg
cmp
ficomps
xor
add
cmp
and
mov
dec
idivb
repnz
and
mov
cmp
movsl
and
inc
daa
ss
loopne
lods
adc
arpl
ret
add
cmp
or
mov
ret
stos
bound
int3
les
sub
cmpsb
mov
inc
and
ja
fdivr
xchg
xor
ljmp
push
outsl
jb
jmp
and
outsl
sbb
jge
das
and
xchg
ljmp
mov
shlb
loop
xor
inc
adc
stos
cmp
or
mov
out
push
pop
lahf
mov
imul
leave
ret
add
in
and
sti
test
stc
add
out
xchg
cld
jnp
lock
inc
cmp
out
icebp
sbbl
rolb
loope
aad
mov
les
scas
cmp
or
inc
in
lea
jmp
dec
lret
or
sub
mov
out
cmp
and
push
pop
cmp
jbe
in
addr16
cmp
cld
and
hlt
inc
movsl
push
cwtl
cmp
lcall
dec
mov
inc
inc
mov
jne
addr16
aas
lock
inc
cltd
pop
xchg
fidivs
ficomps
inc
clc
mov
repz
push
and
popa
lock
sbbb
jle
hlt
cmpsl
loop
mov
adc
add
pop
mov
add
push
ss
sbb
mov
or
jns
mov
jo
je
cld
add
add
jno
pop
les
cmpsb
push
lds
inc
addb
lock
pop
cltd
popf
cmp
movsl
xor
shr
cmp
je
addr16
mov
cmp
clc
stos
jbe
inc
inc
cwtl
out
std
pop
xor
stc
test
lods
add
mov
lods
xchg
stc
adc
mov
jecxz
cmp
test
rcrl
imul
mov
push
jns
xchg
jo
rclb
inc
push
out
inc
and
dec
cltd
insb
push
movsl
add
pop
mov
lods
mov
dec
into
jg
std
inc
or
insb
out
fidivrs
lock
sahf
mov
mov
mov
pop
pop
lahf
pop
les
dec
xchg
mov
add
daa
pop
jne
push
fwait
movsl
add
loopne
or
fmuls
mov
nop
pop
sub
adc
xchg
ljmp
add
add
repz
and
xor
arpl
mov
mov
pushf
sahf
xlat
jge
pop
xchg
inc
mov
fiaddl
hlt
sti
push
fistl
sbb
pusha
sbb
xchg
mov
add
pop
jp
aas
push
test
mov
push
cmp
faddl
cmp
xchg
imul
jl
cmp
daa
lods
mov
popf
jle
jno
aas
sub
xor
mov
xchg
xchg
or
mov
sbb
fwait
mov
dec
and
dec
es
jo
stos
cmp
dec
pop
sahf
clc
insb
and
adc
test
or
sub
add
loopne
mov
out
xchg
fcom
jne
popf
shll
dec
cmp
push
xor
and
push
jmp
mov
xlat
fisttpll
imul
popa
repz
je
test
pop
lods
pop
mov
mov
repz
ds
lret
jp
sbb
leave
mov
mov
lret
test
std
into
pop
inc
dec
or
push
xchg
sbb
stos
scas
int3
dec
jecxz
jnp
aad
sbb
pop
mov
in
mov
pop
cmp
outsb
sbb
into
rcll
out
cmp
add
inc
scas
adc
cs
mov
incl
push
mulb
add
dec
into
nop
popf
lahf
sti
std
mov
xor
inc
lea
xlat
dec
test
out
dec
sub
pop
cs
cmpsb
dec
mov
xchg
sbbl
push
cmpsl
ret
mov
sub
aam
xor
addr16
xor
lea
and
add
imul
adc
xchg
cmc
insl
sub
or
je
psubw
push
popf
xchg
add
test
inc
test
fbstp
je
fisubrs
movsl
js
adc
xor
push
pop
dec
or
sub
sbb
mov
arpl
or
fwait
add
mov
inc
mov
add
out
xchg
std
jl
mov
or
xor
iret
cmp
push
push
sub
mov
xor
lret
cmp
adc
aam
adc
aas
loopne
add
mov
sti
fsubs
xchg
ljmp
push
xor
outsl
mov
push
shr
or
adcb
add
mov
mov
sbb
cltd
mov
mov
xchg
sbb
xchg
jl
les
loope
dec
lea
xchg
lahf
in
jne
sub
dec
aad
mov
xchg
and
mov
jmp
hlt
add
xor
aas
inc
test
sahf
adc
push
inc
mov
pop
dec
jg
loopne
push
loopne
rcr
and
push
dec
sub
cld
mov
fucomip
repnz
and
movsl
sub
mov
cmp
int3
pusha
cmp
test
cmpsl
mov
test
inc
jl
or
rorl
push
adc
stos
stos
mov
mov
jo
mov
mov
repz
mov
pop
ss
in
or
gs
mov
jg
or
lcall
dec
sbb
jmp
mov
or
in
in
sub
out
sbbl
bound
testb
lods
inc
or
out
or
push
mov
sbb
inc
mov
jg
lfs
jno
lods
mov
push
jmp
ljmp
adc
mov
testl
pushf
push
xchg
sub
dec
fidivs
xchg
or
adc
repz
ja
mov
jle
popf
push
insb
out
out
mov
jmp
lds
lahf
xor
nop
mov
jge
xchg
lret
xchg
aam
into
mov
std
mov
jns
int3
sbb
je
push
in
cld
or
mov
sbb
mov
pop
out
jno
mov
cmp
xchg
ret
sbb
into
cmpl
jecxz
sbb
mov
sbb
mov
shll
ljmp
lods
or
insb
cmp
and
push
lea
mov
pop
add
int
loope
pop
dec
jne
enter
fnstenv
out
lods
or
iret
fcmovnbe
out
cmpsl
lret
movsb
bound
je
aas
jno
adc
les
mov
push
dec
es
mov
cwtl
outsb
leave
lods
testl
stc
shlb
adc
loop
sbb
cmp
jecxz
mov
sub
mov
push
inc
cmp
adc
add
imul
mov
and
mov
inc
push
cmpsb
jg
mov
inc
outsl
fs
adc
cmp
lcall
cmp
test
movsl
push
jle
aam
dec
test
outsb
xor
or
or
jnp
mov
pop
out
aaa
xor
pop
cwtl
fdiv
lods
mov
push
sbb
mov
idivl
jle
mov
shll
adc
sbb
mov
insl
mull
fs
insl
add
xor
mov
mov
inc
jmp
jb
les
push
cmpsb
and
inc
push
fwait
inc
add
dec
sbb
in
clc
cmp
movsb
or
sahf
stc
inc
xor
popa
popa
aaa
pop
push
or
aaa
mov
push
mov
mov
xchg
add
ljmp
add
fxch
fisttpl
sbb
sbb
add
or
xor
jp
imul
push
dec
mov
sbb
mov
idiv
in
mov
and
xchg
xor
leave
jecxz
jle
shll
xchg
jmp
test
mov
sub
inc
mov
add
int3
ret
in
jecxz
or
ror
add
dec
roll
stos
loopne
push
cmpsl
rorl
mov
outsl
es
dec
push
icebp
loope
mov
push
mov
outsb
add
fcoms
lock
mov
mov
mov
repnz
add
xchg
loopne
data16
into
popa
cmp
movsl
dec
add
popf
aad
arpl
lret
clc
pop
jp
push
test
push
mov
push
jmp
pusha
stc
xor
mov
je
fcom
push
add
inc
ret
jne
or
cld
faddp
adc
mov
adc
in
out
pop
mov
mov
xchg
mov
dec
ljmp
and
push
pop
hlt
fisubl
bound
shll
sub
nop
outsb
enter
lods
arpl
push
stos
add
xchg
ja
movsl
insl
leave
xchg
inc
sbb
push
sbb
jg
inc
clc
mov
cmpsl
mov
sahf
lods
mov
in
lock
loopne
xchg
mov
divl
inc
mov
fwait
mov
xchg
sahf
cmp
std
fwait
test
cmp
popa
jg
pop
pop
cltd
add
sub
pop
inc
mov
leave
xor
and
sub
cmp
add
cmp
xlat
mov
cld
cmc
or
push
icebp
sbb
sti
jno
adc
cmpsb
arpl
mov
xchg
lret
jo
test
cwtl
pop
xchg
push
aad
jl
jge
inc
pushl
leave
add
sbb
test
fsubp
icebp
cmpsl
jge
fidivrl
sub
cmpsl
popa
pop
loopne
jmp
lods
push
lds
xor
sbb
xor
push
rcrb
pop
test
cmovl
sti
lea
mov
push
int3
test
inc
jns
mov
or
and
rcll
bound
testb
out
adc
and
xchg
adc
xor
dec
pushw
xchg
scas
or
lcall
ja
daa
out
aas
inc
sbb
sbb
cmc
dec
add
cmpsb
imul
push
xorb
dec
fisubrl
mov
xchg
out
adc
mov
les
push
lock
aas
sbb
stos
clc
mov
es
jge
bound
out
add
add
cmpsb
dec
clc
loopne
imull
iret
shll
pop
mov
cld
xor
xchg
dec
lret
scas
push
or
mov
outsl
xor
and
call
clc
sbb
data16
mov
push
outsb
cmc
out
pop
mov
xchg
sub
pop
fisubrs
lahf
mov
pop
js
or
jmp
movsl
adcb
out
push
scas
adc
pop
fwait
mov
shrl
mov
lods
ret
cmp
scas
enter
jb
imul
arpl
outsl
ljmp
ret
pop
cmpsl
jb
mov
clc
test
stos
add
dec
test
outsb
xlat
push
pop
add
dec
ret
inc
xchg
fsubr
stos
or
push
xchg
lds
dec
lret
int3
mov
push
lahf
cli
cmp
lds
gs
xchg
cmp
push
adcb
mov
inc
sbb
xlat
xchg
dec
outsl
test
je
jp
adc
mov
jbe
push
cmp
and
lock
ja
xor
fisubl
sbb
pop
test
inc
popa
data16
add
into
loope
sbb
enter
ss
fcmovb
cmc
leave
test
jecxz
sub
es
mov
jns
test
cmp
clc
pop
pop
in
mov
bound
push
pop
or
lock
fnstsw
pop
mov
sub
jg
adc
notl
adc
pop
sub
int
out
cld
adc
xchg
adc
xor
cmp
aas
mov
data16
ret
pop
pop
mov
xchg
movsb
fiadds
and
insb
in
mov
or
je
jle
jg
scas
sbbb
sbb
hlt
pop
pushf
jns
push
xor
adc
adc
cs
xchg
adc
jmp
dec
das
rcrb
xchg
outsb
ss
mov
add
je
bound
fs
mov
xchg
test
data16
push
sahf
xor
fcoms
ja
push
push
pop
ja
pop
xchg
xor
shlb
pushf
jg
repz
movsl
adc
jge
stc
push
sti
lret
shlb
push
mov
adc
fimuls
jge
jnp
shrb
rcll
shlb
aam
xchg
xchg
pop
pop
and
cmp
iret
add
sarb
insl
xchg
add
push
dec
lret
stos
leave
js
testl
outsl
or
xchg
mov
sbb
xchg
sbb
std
inc
jg
mov
stc
hlt
mov
mov
jne
or
dec
jp
jl
add
xchg
push
or
lods
and
std
jle
ret
or
push
sub
add
hlt
insl
mov
xchg
push
jne
jns,pn
dec
add
cmp
idivb
nop
loop
push
es
stc
iret
sahf
xchg
xchg
movsl
mov
xchg
out
out
push
aas
push
jne
jbe
das
das
popa
jmp
imul
jg
cli
imul
shll
stos
movsb
ds
and
outsb
imull
stos
xchg
adc
xlat
rcll
mov
mov
mov
pop
jbe
pushf
cmpsb
jns
or
cmpsb
cmp
dec
jl
in
and
add
divl
add
mov
add
mov
fucomip
gs
xor
add
loope
xor
mov
leave
mov
push
aam
test
mov
fs
dec
shll
sub
sbb
push
cmp
dec
sbb
add
mov
inc
call
cs
leave
dec
mov
add
add
sub
jle
jmp
loop
jno
rcr
sbb
push
lock
sub
cmpsl
out
dec
jge
mov
out
aaa
test
in
inc
add
and
and
pop
or
iret
inc
and
cmpsb
adc
movsb
pop
inc
jmp
or
lcall
sbb
inc
push
and
nop
sub
loopne
jl
pusha
into
adc
repnz
lock
nop
shrb
mov
filds
pop
add
roll
mov
mov
mov
xor
push
xchg
loopne
bound
icebp
testb
jae
adc
mov
fisubrs
cmp
cltd
fcoms
fbstp
idivb
in
inc
movsl
jnp
out
xlat
fadd
xlat
add
movsl
lods
pusha
xor
orb
push
or
and
scas
xor
fdivr
inc
repz
fucomip
sbbb
mov
mov
dec
shll
xlat
insl
jns
mov
ret
xlat
or
pusha
decl
mov
cld
das
mov
mov
sub
faddl
out
dec
fs
test
dec
mov
xlat
sub
mov
aaa
jle
jle
out
cld
add
loope
mov
ljmp
pop
xchg
xor
arpl
pop
lret
int
xor
mov
icebp
movsb
push
sbb
test
mov
mov
sub
mov
in
jne
dec
cltd
scas
int
test
cs
add
pop
loope
addr16
call
xor
mov
mov
sbb
movsl
insb
std
jno
lds
in
mov
arpl
jbe
mov
adc
mov
cmc
add
mov
jo
push
outsb
and
pusha
mov
sahf
mov
test
stos
ss
inc
push
push
mov
icebp
xor
imul
adc
inc
loop
adc
daa
mov
jo
test
pop
pop
insl
lret
rcr
pop
jbe
aad
adc
pop
arpl
cld
scas
loop
sbb
cmp
inc
push
int
jno
aas
mov
adc
pop
jmp
repz
roll
clc
loop
cmp
pop
adc
hlt
jle
adc
push
mov
shl
pop
adcl
jmp
mov
sub
rcrb
cmpsl
mov
mov
push
mov
scas
inc
jo
or
xlat
pushf
sub
push
mov
negb
ljmp
orb
sub
sbb
inc
ss
pop
cltd
cmp
lret
pop
loop
mov
add
adc
jecxz
in
add
loope
mov
fimull
int3
jbe
shlb
test
in
jbe
xor
adc
sub
adc
push
mov
fstpl
fidivl
add
xor
sbb
das
enter
pop
test
pop
sub
pop
dec
rorl
cmpsl
add
cmc
cs
cmp
fldcw
clc
cmp
add
mov
mov
dec
loop
cmp
out
jno
stc
push
iret
adc
pop
mov
adc
cli
fistps
pop
xchg
or
inc
xchg
sbb
xor
dec
mov
jp
mov
adc
mov
mov
xor
cmp
lods
fsubs
and
sub
les
mov
cmp
scas
scas
cli
loopne
shl
pop
int
jo
fbstp
mov
incl
pop
cmp
adc
mov
cmc
int3
pop
stos
or
mov
je
lret
cmp
pop
pop
inc
jp
pmaxsw
mov
mov
add
fldl
jl
mov
hlt
inc
ret
loopne
mov
nop
mov
lock
jnp
add
inc
lea
movsl
mov
ret
jo
mov
pop
adc
roll
loop
je
inc
cmp
or
xchg
cmp
int
add
lock
in
or
cld
test
pop
mov
ljmp
scas
push
jne
lret
push
sub
dec
xor
lret
sbb
bound
repz
xor
out
sarb
xor
out
in
into
rdpmc
rclw
fbstp
in
push
jge
aaa
adc
inc
push
push
and
out
xor
mov
insl
push
push
pushf
mov
scas
xor
in
sti
ds
xchg
imul
cmc
adc
add
jp
test
adc
ja
xchg
cld
adc
inc
jmp
sbbl
shll
les
push
jle
aaa
mov
in
sub
mov
push
xorl
popf
dec
xchg
push
mov
jae
inc
inc
sti
repnz
add
es
aad
addr16
pop
test
jl
pop
mov
bound
pop
das
fnstsw
xchg
push
xor
jecxz
sbb
inc
mov
sbb
dec
and
lea
cld
loopne
inc
repz
jecxz
bound
pop
xor
mov
in
mov
push
mov
mov
loopne
xchg
push
loopne
mov
mov
cli
int
ret
add
shlb
mov
xor
sbb
loop
lcall
and
shll
icebp
mov
daa
dec
pop
lea
sahf
nop
pop
stos
xlat
mov
call
dec
cmp
push
inc
inc
cmp
adc
icebp
inc
shll
ds
mov
cmpsl
cmp
cmp
ret
cmp
test
jmp
fwait
inc
mov
cld
inc
inc
sbb
push
xlat
sti
shrb
out
adc
inc
shrl
mov
mov
in
xchg
add
jle
adc
mov
jg
lock
enter
lahf
and
das
push
jo
adc
lahf
xor
sub
pushf
pop
incl
mov
sub
std
mov
jl
cmp
ret
lahf
sbb
add
xor
push
mov
dec
adc
push
cmp
push
adc
cmp
aad
and
pop
in
mov
lcall
jne
inc
push
push
pop
test
add
rolb
sbb
inc
mov
jno
mov
lret
jns
mov
xor
pushf
or
inc
sbb
aas
dec
or
mov
xchg
test
dec
jnp
lods
fwait
or
lahf
ficomps
arpl
jo
aaa
mov
jmp
pop
out
sti
pop
pop
push
or
out
xchg
and
jp
inc
fstp
sbb
xchg
push
jae
adc
test
mov
jecxz
jp
lea
or
aaa
sub
mov
cld
ljmp
and
dec
inc
xchg
xor
and
push
xlat
in
mov
clc
sub
ret
inc
aaa
fwait
xor
pusha
aam
adc
sahf
dec
mov
pop
test
js
pop
mov
cmpsl
lahf
iret
xor
sub
sti
xchg
cmp
mov
pop
in
inc
lret
lods
out
adc
popf
push
test
or
mov
fs
fs
popf
jl
fisubrl
icebp
sar
arpl
lcall
dec
outsb
sahf
push
scas
fbld
or
dec
aam
nop
mov
adc
scas
stos
cmp
fistpll
inc
mov
dec
pop
scas
sub
mov
adc
jns
sub
addb
loopnew
jno
je
rcrb
sub
jp
adc
dec
sub
enter
xor
jbe
test
jb
leave
std
mov
mov
mov
out
jle
movsl
cmp
lock
testb
jno
loope
rcrb
jnp
sub
fimull
cltd
push
add
js
xchg
push
xacquire
daa
pop
in
pop
je
fnstenv
sahf
movl
aam
decl
or
leave
or
pop
pop
mov
int
jmp
mov
xor
ficomps
pop
sahf
xchg
cmp
std
imul
and
lea
aad
sbb
dec
adc
jbe
lahf
sarl
and
nop
cmpb
movsl
sub
test
repz
inc
cmp
addr16
fcmovu
lahf
cs
fwait
js
imul
notb
lea
mov
xchg
fnstsw
mov
sbb
les
mov
fwait
cwtl
xchg
imul
mov
test
push
loope
or
jp
cmp
or
jge
mov
frstor
mov
fdiv
nop
mov
out
push
orb
mov
mov
cld
scas
xlat
xchg
test
mov
xor
and
pop
jmp
and
mov
mov
imul
pop
int
push
lods
jnp
les
jnp
out
outsb
mov
mull
aaa
xchg
cmp
xchg
jmp
mov
repz
mov
stos
push
mov
test
xor
ret
xor
daa
clc
jnp
cmp
add
into
divb
js
xchg
sub
jo
divl
iret
lds
adc
mov
je
ficoml
iret
in
mov
jl
jmp
mov
adc
outsb
lahf
or
xchg
out
cli
test
dec
icebp
or
es
jnp
sbb
outsl
or
push
push
insl
repz
cmp
sbb
jmp
imul
sahf
lret
push
mov
lret
stos
xchg
loop
cld
push
arpl
mov
notl
rcrb
movsb
test
mov
xor
fsts
mov
jmp
push
and
push
je
ret
daa
fs
mov
push
xchg
int3
lock
repz
add
leave
movsl
mov
stc
jb
std
xchg
bnd
or
xchg
movsb
lcall
sbb
sti
add
and
sub
sbb
aad
ror
popf
std
movsl
pushf
mov
mov
xchg
sar
out
xchg
leave
mov
fsubp
push
sarl
aas
adc
hlt
lds
daa
jne
clc
dec
dec
sub
mov
pop
mov
aas
sbb
mov
out
jae
mov
dec
mov
ss
popf
pop
cmp
aad
sbb
sbb
fnstsw
pop
pop
into
mov
pop
scas
pusha
or
dec
mov
xchg
mov
mov
mov
and
in
rcl
jb
pop
push
mov
inc
and
shrl
pop
xchg
adc
xor
pop
xlat
dec
fisubrl
shlb
movsl
or
fs
jp
mov
mov
and
mov
rcll
xchg
or
lcall
mov
fistl
push
xor
cwtl
push
rol
push
inc
xchg
sub
and
sbb
and
sub
and
fsubs
icebp
add
pop
std
dec
test
loopne
inc
or
out
xchg
inc
in
dec
and
sbb
shlb
pop
out
int
mov
sbb
bound
and
sub
cmp
movsl
pop
pop
data16
ss
fmull
mov
pop
sbb
stc
in
inc
xchg
adc
call
mov
out
xor
inc
sbb
sbb
lret
lret
test
in
arpl
xlat
dec
js
push
loop
shlb
je
das
push
lcall
lahf
stos
sahf
mov
dec
push
cmc
in
loopne
hlt
stos
add
popf
sub
test
jmp
shr
sub
stos
sub
xor
jne
mov
outsb
enter
repz
loope
in
pop
fsubrs
into
push
jge
cld
push
lods
jo
dec
pop
lahf
push
sbb
clc
cld
imul
dec
jo
jmp
push
mov
mov
xor
sub
addr16
xchg
xchg
outsb
cmpsl
add
xor
cmp
andl
jne
jecxz
push
mov
cmpl
les
pushf
aas
xor
gs
callw
add
lds
sub
movntps
fldl
das
leave
pop
xor
cmp
fisttpll
push
inc
xor
das
inc
clc
mov
insl
cltd
xor
mov
testb
into
pop
jb
out
add
or
mov
add
push
mov
push
cmovge
mov
cmp
push
pop
push
cwtl
fisubrs
fisubrl
orb
xor
es
sti
add
inc
dec
hlt
pop
mov
divb
sarb
cmp
fidivs
movsb
cli
pop
adc
nop
lods
lods
jae
or
in
push
out
xor
sti
fdivr
adc
out
idivl
pop
jbe
jle
movsl
nop
push
inc
jl
mov
adcl
push
scas
push
pop
std
jg
mov
lret
jb
fimull
aam
repz
jmp
sbb
mov
pop
adc
inc
lods
outsl
jmp
mov
movsb
je
add
mov
popa
inc
pop
daa
insl
mov
cmp
and
jnp
mov
lret
pop
adc
mov
adc
popf
es
out
mov
cmp
pusha
rdtsc
push
lods
push
data16
pop
in
jne
aad
mov
cmp
test
scas
jmp
arpl
popf
sti
popf
cli
adc
push
stc
push
pop
or
push
adc
test
in
nop
mov
sbb
jg
and
cmp
arpl
dec
out
subl
dec
mov
je
aad
cltd
add
dec
movsb
rclb
sbb
insl
mov
rolb
adc
mov
shll
fadds
jmp
add
push
hlt
cmp
mov
add
xchg
scas
mov
int
xchg
sbb
les
mov
push
call
mov
mov
imul
outsl
int
cmp
xor
xor
shll
popf
and
insb
stos
mov
cmpsl
xor
pop
popf
ds
mov
lret
sbb
cs
lret
in
daa
data16
xchg
jecxz
pop
sub
and
push
repz
inc
push
imul
xor
pop
in
outsl
sub
mov
test
in
mov
mov
test
lods
cmc
cmp
popa
pusha
jp
cltd
loopne
or
mov
xchg
fsubr
loope
cltd
jb
pop
add
inc
sbb
xchg
lea
stos
outsb
jle
ljmp
iret
inc
inc
enter
adc
xor
arpl
sbbb
mov
jge
adc
inc
push
clc
xor
jae
scas
fstl
fistps
and
sbb
cld
nop
outsb
mov
popf
int
mov
mov
xor
xlat
push
pop
lea
cmp
icebp
jle
fidivl
pop
jbe
daa
xchg
sbb
aad
inc
dec
jae
jmp
in
cmp
insl
jns
imul
mov
cmpl
movsb
out
sti
sub
cmp
pop
mov
sub
addb
aas
mov
jmp
push
dec
push
sbb
pushf
ds
dec
xorb
pmaxsw
aad
pop
pop
test
mov
loop
add
call
mov
loop
das
pop
call
aas
inc
cmp
roll
lret
push
insb
push
cmp
idivb
or
movsl
xchg
push
pop
ret
push
and
mov
xchg
jl
mov
jg
xchg
cs
xor
add
shlb
xchg
cmp
mov
dec
push
je
mov
je
int3
pop
ds
mov
xlat
sub
adc
cli
mov
mov
and
dec
in
shrl
pop
xor
or
mov
mov
and
add
outsb
xchg
mov
jnp
sti
dec
push
sbb
inc
je
lret
pop
adc
push
shll
aaa
adc
cmpsb
out
scas
shrl
xchg
xor
jecxz
and
addl
pop
pop
jno
adc
lahf
test
lods
push
fisubrl
js
mov
lret
repnz
insb
jns
ss
sbb
shlb
nop
push
les
add
cmp
mov
sbbl
jnp
sbb
sbb
jae
into
and
add
aas
sbb
std
stc
adc
push
repnz
test
push
xchg
add
fsubs
mov
pop
out
stos
pop
enter
jno
movaps
icebp
pop
addl
cmp
adc
popf
mov
lcall
push
imul
and
mov
in
adc
xor
in
cmp
pop
lods
cld
dec
push
addr16
sub
aad
dec
addps
xor
scas
and
lret
push
pop
mov
pushf
int3
jb
bound
jno
stc
pop
push
adc
movsb
test
lock
stos
jae
loopne
xchg
aad
leave
cmc
xchg
mov
push
scas
les
jl
mov
scas
cli
rolb
outsb
aam
fs
sbb
pop
or
add
mov
sub
mov
mov
test
jge
aad
imul
pop
cmpsb
xor
outsl
iret
jge
adc
sub
adc
lock
mov
jns
imul
lds
stos
adcb
mov
sbb
fldl
fs
xor
mov
mov
sub
dec
scas
sbb
mov
jnp
sub
cwtl
sahf
mov
mov
das
shll
mov
sub
xor
fstp
cmp
stc
mov
outsb
push
popf
ficoml
pusha
or
call
js
divl
xchg
inc
sub
int
fsubrs
xchg
mov
pusha
push
inc
mov
pushf
sub
mov
cmpsl
aad
mov
arpl
lds
int3
jecxz
outsl
andl
fcoml
pop
mov
dec
push
dec
fdivrl
sbb
xlat
pop
roll
outsb
mov
and
jecxz
popf
add
mov
xor
and
mov
lods
in
cmp
int3
adc
scas
inc
xor
sub
fistps
sub
mov
xchg
sub
jl
inc
lret
insl
gs
idiv
ds
sub
inc
fcoml
mull
dec
lcall
inc
or
in
hlt
jb
lds
push
dec
into
mulb
pop
adc
and
lea
insl
xchg
pop
int
addr16
mov
pop
jge
es
jmp
mov
loopne
mov
xchg
or
hlt
cmp
add
push
inc
mov
mov
orl
xor
roll
pop
pop
pushf
pop
pop
cmp
call
inc
pop
and
inc
sub
popf
mov
ficomps
stos
ret
or
sahf
push
push
add
jno
test
in
add
mov
js
or
lods
push
enter
fnsave
in
cmp
test
mov
test
sub
jl
xchg
xlat
push
addr16
ljmp
sbbb
push
push
xchg
loop
les
mov
mov
int
mov
lock
cmpsb
xchg
sub
cmc
test
or
lock
cmpsl
cmp
pop
pop
xchg
ret
push
inc
repnz
mov
call
lcall
stos
or
and
cmp
pop
into
sti
add
and
jns
inc
repnz
adc
movsl
dec
jae
inc
push
arpl
popf
icebp
vpshad
jmp
enter
es
fcmovne
dec
xor
movsb
ficompl
sub
sbb
and
subps
call
hlt
inc
dec
sub
dec
inc
and
test
jecxz
out
push
divl
pop
daa
int
stos
xchg
jmp
pop
mov
scas
mov
push
fcomps
push
push
mov
out
and
jne
sbb
and
dec
inc
jecxz
jnp
dec
es
je
into
lahf
adc
sub
xchg
dec
test
mov
pop
mov
add
add
and
fistl
aam
xchg
insb
push
inc
adc
int
cmp
xchg
xor
mov
int
push
mov
add
std
ret
sbb
nop
push
icebp
jle
lahf
mov
inc
jle
jns
test
cld
stos
test
dec
sbb
push
addl
shll
sub
jmp
cmpsb
sbb
pushf
adc
lock
ss
loope
notl
dec
std
pop
aas
call
dec
mov
pop
mulb
inc
mov
xchg
incl
dec
fcomps
xlat
sub
int
mov
int
push
stos
push
xchg
xchg
mov
cwtl
lods
add
pop
lock
lods
in
cmpsb
rcrl
pop
icebp
mov
movsb
ret
xchg
fldl
ds
repz
or
xor
sub
mov
sbb
cmp
mov
push
insb
rorl
sbb
pushf
iret
mov
fs
sarl
out
lret
pop
insb
jmp
scas
xor
lcall
int
pop
push
outsl
int
sahf
nop
fs
pop
add
ja
repnz
test
sbb
dec
andl
xchg
cld
or
and
cmpsl
shll
xchg
xor
add
pop
xor
in
pushl
cs
add
add
fidivs
push
mov
ret
adc
sbb
inc
or
outsb
arpl
out
pop
and
in
test
jmp
test
mov
gs
cmp
sub
in
dec
jnp
out
sbb
hlt
pop
das
lret
mov
dec
pop
out
pop
popf
dec
int3
and
mov
ja
push
sub
inc
test
adc
and
jge
mov
push
sub
das
ret
hlt
pop
pop
and
fmuls
outsb
das
xor
fsubrs
or
xchg
imul
addb
inc
sub
stc
ja
gs
test
mov
rcll
push
mov
ss
out
mov
enter
pop
movsl
adc
dec
and
inc
push
imul
fwait
sti
push
das
mov
adc
cmp
ror
jns
mov
pop
mov
stos
xchg
mov
push
cli
imul
imul
dec
shl
lods
jo
adc
in
imul
xchg
andl
sub
insl
cmp
mov
mov
xchg
add
mov
push
xchg
cs
pop
push
sti
fldenv
ret
mov
push
mov
jecxz
fwait
aaa
push
dec
push
js
rcrl
jb
sbb
push
xor
or
push
mov
fisttpll
loopne
lods
lcall
sub
pop
jne
or
xor
imul
ss
icebp
mov
cmc
fwait
movsb
outsb
ja
adc
jno
stos
cmp
aad
lcall
enter
fidivrs
mov
push
cmp
xor
int
xchg
ss
sbb
mov
out
cld
lock
sub
sub
or
mov
test
push
aaa
push
rcrl
sub
xor
mov
xor
mov
das
into
jp
imul
into
xlat
inc
std
sti
mov
add
addb
iret
frstor
push
lahf
test
int3
cmc
test
or
stos
rcr
repnz
stos
dec
mov
xlat
sbb
repnz
adc
movsl
and
fs
rcll
lcall
or
lret
jns
scas
jle
add
inc
pop
aad
push
jecxz
sbb
push
adc
pop
sarl
int3
sub
mov
negl
lods
mov
mov
or
ljmp
shll
cmp
xchg
push
sarb
into
jl
imul
jmp
in
jb
loopne
or
push
pop
jle
and
mov
or
jbe
stos
sub
scas
pop
push
iret
xlat
or
jmp
loopne
mov
mov
sbb
jmp
rorl
fs
neg
xchg
jns
xchg
lea
out
stc
adc
call
enter
outsb
leave
mov
push
jns
inc
imull
push
push
xor
jnp
scas
enter
cli
or
xlat
stos
stos
jge
aas
mov
daa
jns
adc
enter
scas
in
stc
sahf
mov
fcomi
std
mov
push
push
rcl
xor
pop
popa
and
mov
xor
pop
lret
mov
repnz
cmc
enter
mov
cmp
mov
xor
adc
dec
cmp
add
les
icebp
popf
aam
jo
dec
mov
cltd
js
inc
jns
mov
xchg
xchg
outsb
pop
sbbb
xlat
adc
dec
movsb
insb
adc
lahf
push
mov
lods
sub
sti
imul
scas
pop
sarl
in
fsincos
mov
sub
sbb
test
loop
sub
mov
jp
pushf
xlat
fdivrl
mov
xchg
add
loope
push
sbbl
push
in
mov
push
mov
sub
adc
or
hlt
sbb
mov
out
sub
outsb
inc
fmuls
test
inc
lods
mov
lods
inc
pushf
cmpb
cs
cmpsb
mov
in
jb
sub
fcoml
es
icebp
stc
scas
dec
mov
mov
in
sub
mov
or
mov
stos
lcall
pop
push
aad
mov
jbe
pop
test
inc
les
lahf
pop
mov
test
sub
pop
pop
cld
adc
push
and
movntps
int
cmp
jg,pt
stos
fldenv
mov
andl
es
inc
dec
push
lcall
testl
adcb
stc
pop
divb
pop
add
cli
sbb
orl
mov
es
js
lcall
call
xor
jo
andl
xor
inc
nop
xchg
lods
arpl
pop
stc
xor
xchg
test
loop
cmpsb
xchg
cmp
dec
es
scas
idivl
mov
hlt
lea
daa
or
adc
aas
xchg
test
mov
xchg
jnp
inc
sbb
and
int3
cs
fnsave
ss
mov
push
pop
lret
push
mov
pop
jmp
mov
pop
out
shll
jns
and
add
xchg
or
dec
mov
js
out
repnz
out
adc
gs
inc
push
insb
shrb
es
xor
adc
pop
daa
aaa
ja
push
push
cmp
and
pmuludq
lock
int3
cmp
jp
loopne
or
push
sub
stos
jmp
jle
mov
mov
jae
imul
fldcw
sub
ja
loop
shrb
cmpsb
lahf
dec
or
popf
movsb
xchg
sahf
and
push
mov
jb
sub
sbb
mov
je
outsl
outsb
lea
test
fadds
pop
jns
cld
mov
mov
xor
xchg
bound
or
jo
xchg
aaa
loopne
pop
fwait
int3
rorl
pop
pop
inc
lret
lret
icebp
divb
hlt
push
in
popa
into
aam
jg
and
stos
adc
mov
pop
icebp
mov
js
cmc
mov
jl
ret
jb
push
cmpsb
mov
mov
pushf
les
daa
imul
call
jge
in
jecxz
sbb
je
mov
scas
test
pop
mov
fsubrs
mov
inc
push
push
add
push
idivb
leave
or
jmp
dec
jne
loope
mov
imull
or
fmuls
dec
jge
sub
jo
adc
lret
push
aaa
test
push
test
sub
xchg
fmull
arpl
xorl
fdivr
jbe
imulb
cs
lea
fiaddl
mov
xor
into
xchg
fucomip
inc
sbb
xchg
popa
jmp
out
mov
je
inc
xlat
dec
and
leave
aaa
scas
in
push
in
and
mov
pusha
stos
push
fnstsw
test
aad
ror
mov
mov
je
mov
cmpl
push
push
out
sbb
out
andb
and
je
jmp
and
and
jo
cli
mov
imul
daa
iret
xabort
ret
mov
addr16
mov
test
pop
cli
cmp
push
fmul
and
pop
ds
in
sub
pop
popa
lds
sub
fdivs
push
push
and
lock
ss
push
dec
fwait
inc
icebp
adc
adcl
sti
frstor
xchg
shll
mov
adcb
push
enter
inc
jl
xor
cmp
cmc
in
nop
mov
rorl
bound
lea
xor
mov
jp
or
cmc
mov
adc
add
mov
or
daa
arpl
mov
pop
sti
icebp
stos
in
xchg
jno
testl
jp
fimuls
addr16
sbb
and
hlt
or
and
mov
inc
jnp
fcomi
push
sub
mov
xor
dec
scas
aas
bound
mov
sti
inc
pop
shlb
xor
shrl
xchg
xlat
and
stc
xor
sbb
xchg
mov
aad
testb
movsb
scas
sub
sub
push
mov
mov
es
in
jl
pop
mov
xor
shlb
and
xor
orl
out
loopne
cmp
bound
push
bound
jle
inc
pusha
daa
dec
adc
jno
test
les
mov
add
jbe
sti
lods
push
mov
cld
jae
aaa
mov
lods
inc
mov
lock
inc
icebp
mov
and
insb
mov
or
cmp
jae
ss
imulb
push
mov
xorl
dec
jns
inc
notl
and
fs
mov
int
clc
xchg
mov
es
sti
notb
pop
rcl
test
shr
stos
dec
nopl
les
adc
inc
testb
dec
stc
xchg
or
cltd
mov
clc
in
push
adc
add
icebp
pop
lds
mov
lea
mov
push
rorb
addr16
pushf
pusha
out
fprem1
cmp
pop
mov
leave
mov
std
mov
lea
and
sub
or
jg
jg
xchg
xor
mov
mov
pop
sub
jae
cmp
data16
adc
add
les
out
fs
fisubrl
lret
add
mov
mov
xchg
sub
xchg
jp
xchg
push
xor
bound
sub
popa
cld
cmpsb
shlb
jo
test
std
mov
mov
sub
xchg
rorl
insl
jbe
jae
cmpsl
cli
dec
adc
test
mov
subl
jne
call
mov
mov
in
cld
in
dec
mov
arpl
push
enter
gs
push
xor
add
cmpsl
inc
pop
into
push
inc
dec
xor
xchg
adc
es
cmp
mov
inc
mov
loopne
mov
stos
imul
or
push
loop
or
pusha
or
mov
fwait
mov
popf
fcomps
iret
or
adcb
incb
jns
pusha
add
sti
sbb
mov
push
xor
inc
aaa
jno
clc
fwait
out
dec
pop
cld
sbb
push
push
xor
mov
inc
dec
mov
clc
mov
jmp
mov
xor
dec
lock
sub
les
xchg
mov
xor
sub
push
push
mov
jns
mov
and
jnp
push
xchg
or
test
sarb
pop
loop
pop
outsb
in
jmp
cltd
mov
mov
xor
scas
jecxz
gs
dec
add
jbe
mov
or
int3
fdivrs
popa
in
jae
inc
jno
cmp
add
mov
mov
popf
daa
lock
push
pop
fdivrl
insl
and
inc
mov
testl
push
push
or
adcb
popa
xchg
push
jnp
and
adc
xor
fldt
jge
aam
pop
mov
outsl
stos
sbb
mov
cmpsb
sub
push
in
push
cmp
jnp
adc
popf
rol
pop
jae
out
and
test
push
pop
sar
cmpb
xor
fisubs
out
test
inc
std
pop
mov
mov
push
movzbl
dec
mov
andb
cmp
ret
push
lea
cmpsb
lds
test
test
fs
xchg
leave
jo
shll
adc
loope
cld
cld
pop
lods
sub
dec
mov
cltd
mov
rolb
xor
mov
pop
pop
and
cmp
pop
xchg
test
sbb
and
loopne
stos
and
and
aam
rcrl
jae
push
scas
jnp
scas
mov
nop
test
xor
xor
mov
dec
sub
shlb
cmp
in
int
mov
cltd
into
cwtl
push
out
push
sahf
xchg
insb
mov
scas
popa
mov
push
insl
push
pop
jno
xchg
lcall
push
repz
jno
pushf
mov
sub
adc
pop
fldl
das
add
push
dec
dec
mov
xchg
push
xor
fbld
cmc
out
pop
aas
mov
cmc
mov
lahf
push
popa
cmp
mov
ffreep
iret
xor
sbb
stc
add
cs
cmp
leave
cmp
ss
jae
xchg
enter
sub
mov
mov
sti
ss
jbe
sbb
push
push
xor
and
add
xchg
in
push
xchg
dec
clc
cmp
push
scas
or
inc
xor
int3
mov
nop
pushf
sub
outsl
push
xlat
jmp
pop
popa
mov
loop
mov
sahf
mov
jns
divl
jl
enter
pusha
jg
mov
and
cmpsb
xor
popf
nop
ja
push
or
bound
std
repnz
jmp
pop
sahf
xchg
ja
jae
les
or
in
jmp
mov
scas
lahf
or
sbb
cld
movl
jg
pop
adc
dec
push
cmpsb
repz
pop
incb
sti
sahf
jl
mov
les
dec
les
or
adc
aam
mov
jle
push
pop
add
je
mov
movsl
mov
popf
sarl
test
into
jns
fdivrp
sub
mov
or
dec
pop
mov
pop
shr
sub
ljmp
into
mov
mov
movsb
and
lret
xor
jge
xchg
pop
inc
push
pop
cmp
inc
lods
addl
leave
lock
lds
sbbb
or
pop
je
std
xor
inc
sub
pop
sbb
mov
dec
negb
pop
jne
rol
push
cmc
push
xchg
push
dec
aaa
aad
rcll
jne
add
les
mov
xlat
inc
or
popa
cmp
inc
hlt
mov
jb
lcall
jae
ja
mov
inc
or
push
in
mov
or
int3
jno
xchg
out
and
and
daa
fnstsw
popf
xchg
imulb
fisttps
mov
or
ret
adc
lea
ljmp
adc
pop
sub
stos
lods
lea
test
scas
arpl
sub
sub
adc
xchg
je
out
imul
push
sbb
xchg
cs
dec
and
js
inc
pop
aad
and
dec
jle
shrb
dec
jecxz
stc
xchg
ficoms
cltd
jne
xchg
jge
loopne
int
add
imul
rorb
jle
xor
sahf
les
insb
mov
test
imul
adc
jno
mov
out
or
inc
repz
pop
imul
addl
push
scas
je
cmp
and
in
in
mov
sete
scas
pop
ss
and
xchg
xchg
out
pop
jg
mov
out
std
test
xlat
aaa
aam
xchg
out
mov
imul
fdivl
mov
xor
test
in
pop
insb
negb
outsl
inc
out
shll
popa
ja
add
adc
xchg
xchg
add
adc
les
xor
lcall
xchg
push
add
rdpmc
sub
notb
int
mov
aaa
nop
fisttps
stc
and
hlt
and
imul
leave
jle
jmp
loopne
inc
inc
stos
lods
or
dec
xchg
jns
adc
or
mov
sbb
adc
cmp
call
fbstp
add
or
xchg
aaa
fisttpl
or
and
lret
test
test
lea
daa
pop
jbe
movsl
xor
pop
xchg
xchg
mov
jmp
inc
addr16
outsl
xchg
or
leave
jmp
jp
ds
out
ja
fdivl
movsb
pop
and
les
pusha
lahf
sub
imull
out
inc
and
out
inc
jg
lret
mov
cmp
inc
mov
fldcw
out
pop
mov
mov
jge
in
fists
mov
sub
inc
cmp
cltd
loop
shl
cs
out
xorl
mov
out
cmpsl
addl
add
test
xor
fistps
jg
neg
push
xchg
lds
fcoml
mov
jbe
xor
or
sbbl
sub
js
add
ret
sub
push
repnz
pusha
push
icebp
cltd
mov
aas
cli
cld
sub
and
inc
call
jl
out
enter
mov
or
lret
add
test
cmp
scas
sub
rorl
je
jp
jnp
icebp
add
sbb
mov
in
xor
fistpll
push
dec
pop
aam
cmpsb
push
xchg
adc
lahf
fwait
xor
mov
fldln2
mov
mov
mov
cmp
loope
adc
out
das
jo
dec
iret
inc
push
add
pop
lahf
std
and
push
add
mov
pusha
lret
fs
pop
cmp
cltd
pop
mov
inc
mov
js
dec
pop
mov
jg
pop
cs
sarl
pop
mov
hlt
cmpsl
sub
cld
push
dec
test
rolb
out
fcomip
mov
leave
pop
mov
lret
lcall
adc
jg
and
js
xlat
in
mov
pop
jb
loope
mov
std
dec
scas
jge
test
cs
ljmp
pop
push
imul
inc
push
or
shll
cmpsb
bound
xchg
test
movsl
stc
push
pop
add
mov
in
dec
rol
bound
ret
dec
add
mov
aad
mov
jl
mov
mov
mov
jno
imul
movsl
cmp
fistps
jno
pop
xor
ret
test
lcall
popa
push
ret
arpl
lods
pop
mov
cmp
xlat
or
push
es
scas
and
push
ds
pop
pushf
rorl
fidivrs
pop
sbbb
movsb
cld
sub
mov
adc
jle
pop
jns
arpl
or
mov
shl
scas
xchg
xchg
inc
adc
shrl
dec
push
inc
jmp
xchg
int3
lea
xchg
sub
pop
xchg
xchg
daa
dec
jno
outsl
xchg
jae
stos
enter
clc
shll
es
nop
lahf
jp
dec
pop
mov
outsl
inc
adc
pop
add
shlb
xor
sbb
negl
adc
xchg
scas
scas
xchg
cmp
xchg
cmpsb
inc
jae
stos
jno
call
push
mov
or
dec
pushf
inc
rcrl
mov
fildll
or
stc
cli
jmp
jb
sub
dec
cmp
mov
or
out
adc
or
es
icebp
xchg
loopne
add
idivb
mov
inc
push
dec
add
mov
jle
sbb
call
and
jb
cmp
adc
insb
or
mov
mov
mov
cwtl
popf
xor
add
rcr
arpl
pop
or
xchg
inc
rorb
mov
stc
jl
mov
popa
cmp
testl
pop
dec
add
inc
out
out
or
inc
push
xor
stos
jle
inc
push
mov
lods
mov
and
stc
rolb
sub
fldcw
jmp
ja
jmp
icebp
or
jmp
pop
push
test
xlat
sub
pop
add
jbe
test
inc
pop
mov
hlt
popf
jp
push
jp
pushf
stc
ret
fnstenv
and
or
sbb
xlat
enter
lcall
jnp
jp
jl
in
pop
das
andb
loopne
pop
enter
decl
xchg
lock
sub
test
lods
sub
xchg
jge
popa
ja
fs
pop
sarb
lock
iret
dec
pop
fs
adc
xchg
call
jbe
xchg
fsubr
mov
addr16
jns
sub
inc
jecxz
movsb
movsb
and
inc
mov
dec
xchg
push
cli
enter
enter
shll
sub
mov
cmpsl
xchg
xor
lcall
mov
ljmp
je
fs
scas
aad
fldcw
lods
mov
pop
pop
mov
hlt
pop
xchg
and
mov
bound
jae
mov
push
jg
sbb
jno
sti
enter
cmc
lds
stc
xor
popa
mov
ficoms
nop
fdivr
sbb
sbb
xor
stc
inc
push
inc
leave
orl
call
mov
lea
hlt
aam
testb
out
adc
push
inc
pop
les
cli
js
dec
cmp
rcrl
outsb
lods
dec
sbb
out
cmp
addr16
xchg
and
push
inc
pop
ja
dec
and
cwtl
arpl
in
aas
or
shrl
push
and
add
cs
int
jle
pop
mov
mov
add
sub
fucompp
call
iret
test
test
shll
in
clc
subl
stos
xchg
dec
cmpsb
imul
mov
andb
call
decb
mov
data16
sub
fstl
int3
in
rolb
mov
dec
movsb
stc
push
sbb
and
lods
push
or
xor
cmp
mov
mov
sub
sbb
mov
fstps
add
clc
movsl
pop
lret
xchg
dec
and
inc
jecxz
cs
ds
mov
insb
ja
adc
push
scas
in
std
or
mov
mov
xchg
mov
sbb
mov
lock
and
mov
add
daa
mov
movsb
pop
popa
mov
sub
pop
jge
stc
sub
cmp
fdivrs
mov
mov
addr16
inc
shr
rorb
cmc
or
test
cmc
leave
sub
in
data16
fsubrs
out
inc
nop
pop
jbe
scas
mov
jb
js
push
popf
fs
inc
ljmp
or
mov
jmp
add
test
dec
clc
xchg
xor
rcr
xchg
inc
les
push
jo
xor
mov
sahf
pop
sub
jecxz
mov
inc
pop
and
dec
repnz
lds
sbb
jg
adc
push
sub
jmp
js
jmp
or
ret
cs
sub
sti
xchg
or
repz
test
scas
and
mov
movsl
mov
xchg
push
fisubs
repz
enter
dec
add
push
mov
mov
or
cmp
mov
insl
lea
test
addl
notb
push
stc
hlt
xlat
mov
in
fadd
mov
cs
ds
cmp
pusha
or
sub
pop
adc
dec
push
rorb
pop
loopne
push
jecxz
fdivl
sbb
movsb
inc
sub
cmc
fsubrs
fsub
ret
mov
das
push
sub
stos
movsb
mov
xchg
pop
adc
scas
cmpsl
mov
out
mov
push
or
movsl
jl
movsb
mov
mov
jp
sbb
adc
cmpsl
sub
testb
arpl
sub
inc
out
mov
mov
es
int
lods
mov
ja
int3
mov
sub
xlat
add
mov
xor
pusha
push
scas
inc
scas
lahf
hlt
sbb
jbe
jb
scas
inc
not
shlb
mov
push
mov
sub
sub
xor
mov
xchg
inc
popf
push
addr16
pop
and
push
or
int
adcb
sbb
push
aad
shlb
pop
fsubs
mov
inc
push
xor
add
mov
xor
ficoml
mov
add
jg
adc
xchg
sub
popa
cwtl
push
lock
scas
pop
xchg
aas
cmp
jp
inc
mov
mov
cmpsb
mov
and
call
rorb
xor
out
or
mov
cmp
or
mov
das
rcrl
leave
bound
and
xchg
cmp
xor
xchg
xor
js
mov
add
or
cmp
mov
or
mov
dec
jecxz
ja
push
leave
and
in
pop
mov
jae
push
daa
sbb
mov
adc
ret
loope
sub
pop
mov
pop
sbb
pop
aaa
sbb
lea
call
adc
dec
loopew
pop
dec
roll
hlt
inc
and
dec
int
push
into
adc
inc
cld
push
ds
or
cmp
xchg
jno
insl
aas
stc
sbb
pusha
pushf
xor
pop
jae
cmpsb
loope
ljmp
shlb
lods
mov
push
inc
mov
inc
stos
movsb
jbe
jle
pop
jmp
adc
lds
dec
mov
insl
aam
jp
fsubrl
outsl
mov
or
pusha
xor
cmp
pop
aas
ljmp
std
mov
pop
jnp
adc
adc
negb
filds
leave
loop
jge
mov
scas
mov
adc
push
shrl
cwtl
xor
outsl
sbb
push
mov
rcll
jb
sbb
add
mov
sbb
jecxz,pn
cmp
hlt
fwait
xchg
imul
test
cmp
stos
adc
push
nop
mov
push
adc
insb
mov
test
js
dec
jmp
jo
mov
lods
push
inc
addr16
pop
enter
lret
jns
or
pop
sub
push
cwtl
popa
into
sbb
cmp
push
pop
in
adc
jecxz
pop
mov
push
in
adc
xor
pop
ret
pop
push
inc
sahf
xchg
xlat
mov
push
sbb
test
add
inc
shl
mov
adc
ficompl
jae
jp
sub
sbb
rcll
pop
adc
icebp
xchg
lahf
cli
cmpb
shrl
loop
jbe
jecxz
sbbb
sahf
daa
cmp
test
call
mov
in
stos
or
xchg
jno
push
cmpsl
mov
pop
aam
cmpsl
inc
push
movsb
push
shr
and
or
fdivs
fisubs
lcall
xor
jae
add
adc
or
cmp
hlt
fs
aas
adc
cltd
dec
and
xchg
cltd
cs
push
and
frstor
adc
cmp
fwait
xor
sbb
daa
inc
jbe
arpl
sahf
sbb
push
sbb
push
ffreep
repz
in
jno
clc
cmpsl
jnp
sbb
push
jae
jmp
cmpb
loop
cmpsb
lods
xorl
cs
fldt
adc
mov
iret
loope
addb
repnz
xor
or
push
test
inc
rorb
out
testl
mov
push
addr16
xchg
jp
jno
jge
sahf
sbb
push
fildl
out
pop
inc
icebp
dec
mov
jle
call
adcb
push
ficoml
js
fcmovnbe
fidivrs
les
bound
adc
jae
pushf
push
cltd
lret
ljmp
mov
cmpsb
pop
ss
popf
xchg
pop
jo
dec
das
fidivl
test
mov
pop
aad
in
and
popa
test
dec
in
add
mov
data16
pushf
jno
adc
int
add
test
cli
dec
mov
jne
inc
sbb
cmpsb
xor
mov
mov
enter
out
fstpl
adc
addb
faddl
cmpsb
add
mov
or
xor
mov
out
xor
sti
cs
enter
push
ljmp
in
scas
mov
loop
pop
shlb
lods
jo
inc
ja
dec
js
mov
cmp
xchg
imul
sub
ret
orl
int3
bnd
aas
int
cmpb
movsb
and
popa
cmp
lcall
xor
stos
in
adc
ja
push
pop
add
pop
xchg
out
sti
retw
adc
insb
sbb
push
inc
or
roll
push
sub
inc
cmp
jge
mov
jae
mov
sub
lcall
pop
push
jge
fists
scas
pop
mov
enter
mov
pop
xchg
pandn
mov
xchg
mov
cmp
int
fiaddl
ret
and
clc
lods
jle
jno
stos
gs
pop
lret
push
push
xor
cs
cmp
pop
push
mov
repz
decl
mov
or
sbb
sbb
push
sarl
inc
push
repz
lret
cltd
dec
ja
jno
into
xlat
fidivl
push
mov
lret
inc
cmp
sub
dec
dec
and
mov
sub
pop
addr16
inc
xchg
mov
ds
fisubrs
jle
arpl
mov
adcl
mov
jo
pushf
sub
pop
ror
push
xor
es
jns
shl
mov
fstps
push
cmp
aas
enter
adc
daa
inc
and
pop
pop
out
out
lret
out
addl
in
lods
sub
lea
dec
test
fmuls
and
jg
sbb
mov
jne
inc
push
sahf
pop
pop
push
sub
out
int
mov
jnp
addr16
dec
in
mov
mov
pop
sub
mov
popa
sarl
pop
aaa
push
call
lret
adc
pop
in
adc
les
out
xor
sbb
jmp
xor
dec
ret
shlb
xchg
push
ror
adc
lcall
lock
mov
in
outsb
out
fwait
jo
hlt
or
and
mov
in
in
orb
ret
jecxz
xchg
pop
push
int
adc
mov
jnp
add
rorb
test
test
out
je
fcomps
stos
mov
mov
mov
adc
jecxz
mov
jne
pop
push
cltd
int3
mov
imul
push
js
popf
loope
mov
inc
xor
or
mov
loop
cmp
loopne
or
adc
mov
lds
leave
insl
rcl
jge
hlt
cs
fstps
test
mov
imul
in
test
pop
nop
shll
sbb
lock
or
mov
mov
addr16
fmulp
push
out
scas
movsb
add
lods
push
dec
ror
mov
clc
dec
shl
add
aas
cmp
insb
push
sub
popf
sahf
ja
push
jbe
push
inc
scas
pop
pop
sbb
fs
test
cmp
and
xchg
fsubrs
xchg
xor
and
rol
inc
cmp
fldenv
das
sub
mov
mov
dec
or
jb
pop
scas
shrl
mov
mov
outsb
pop
orb
mov
ss
push
jbe
add
xchg
fists
shlb
xchg
ds
mov
sahf
dec
sub
insb
push
xchg
adc
adc
lret
sti
in
vpsllq
cmp
fs
pop
or
jg
sbb
in
loop
sbb
loopne
aas
lods
test
sbb
aaa
jae
pop
jge
mov
mov
ljmp
stc
stos
dec
outsl
xchg
mov
nop
insb
inc
inc
fucomp
shll
outsl
ljmp
pop
push
push
iret
outsb
js
into
sub
push
lea
pop
popa
xlat
repz
addr16
adc
pop
js,pt
cmp
fcomi
xor
ljmp
fcompl
sbbl
fbld
out
mov
les
or
cmpsl
popa
pop
fistps
pop
sbb
mov
mov
adc
xor
and
jnp
pushf
xchg
jnp
loope
and
lret
jne
out
push
inc
mov
inc
jae
ja
dec
push
dec
inc
ljmp
test
shr
outsb
int
mov
pop
dec
arpl
lods
repz
mov
rcll
cmp
test
cli
mov
rorl
push
enter
push
movsl
leave
or
xchg
inc
pop
pop
fisttpll
adc
scas
into
or
cmp
mov
mov
mov
add
sub
test
imul
out
rcr
fisttps
repnz
sub
jb
mov
ds
xchg
ljmp
popa
and
sbbb
in
inc
mov
imul
pushf
sbb
pop
inc
mov
jnp
push
loopne
cwtl
and
ja
loop
sbb
mov
pop
inc
repnz
daa
sbb
in
insb
pop
popa
adc
mov
and
sub
test
ja
aam
nop
push
mov
sub
in
xchg
add
lahf
pop
mov
adc
bound
fcomps
jmp
fisttpll
jb
mov
roll
test
and
leave
loop
sub
jmp
lcall
int
out
adc
dec
fsubrs
sbb
sbb
dec
je
dec
dec
enter
and
test
lcall
ffreep
push
arpl
in
out
and
out
add
pop
push
orl
xor
cwtl
jecxz
push
xor
test
arpl
fsubp
xchg
push
xchg
pop
inc
sbb
movsb
testl
test
xorb
pop
into
push
jbe
shrb
pop
jmp
inc
inc
or
dec
cmp
or
xor
add
in
sarb
popf
push
sti
aam
and
jo
loop
mov
lock
inc
int
mov
es
add
negl
insl
cmp
add
push
mov
xorl
pop
jae
cmp
add
inc
cmp
sbb
je
insb
dec
fidivrs
scas
ss
out
mov
inc
dec
outsb
mov
imulb
dec
iret
pop
inc
mov
push
xchg
nop
push
aam
xor
jge
inc
sarb
repnz
mov
mov
aaa
mov
push
fld
scas
sarb
int
cmp
aas
popl
pop
test
dec
sub
shl
jmp
inc
add
mov
pop
inc
inc
adc
xor
and
fcoms
adc
xchg
leave
stc
and
jae
sub
jp
sub
ds
xchg
pushf
jmp
jp
lea
xchg
adc
dec
scas
cmpb
loop
test
jge
test
xor
mov
fisubrs
mov
pusha
pop
xchg
or
gs
pop
cmp
xor
mov
decl
add
mov
pop
shr
lahf
orl
adc
iret
jb
jno
inc
loop
push
fucom
loopne
movsl
inc
shr
adc
jns
pusha
mov
xor
jl
shr
push
inc
mov
daa
outsl
mov
ficomps
daa
insl
sub
ss
lods
rorb
adc
int3
sbb
adc
sub
mov
jmp
pushf
add
xor
xor
pop
aam
cmovae
ficoml
fdiv
sub
lret
dec
jno
push
pop
dec
aas
sbb
jbe
cmp
xchg
sarl
xlat
cld
xchg
stc
xchg
scas
aas
cmp
repz
pop
cmp
cmp
adc
mov
lods
push
xor
arpl
pop
xchg
mov
cld
rcpps
mov
or
mov
push
mov
pop
in
loope
pop
jle
mov
dec
pop
sbb
test
lock
xor
mov
mov
pop
push
aam
mov
dec
inc
jno
lret
add
or
jae
bound
pop
lret
xor
shrl
lods
xor
jle
mov
pop
psubsw
cmc
sbb
ret
in
imul
lods
jno
dec
jo
rolb
popl
inc
test
xchg
pop
push
sbb
mov
lds
sahf
push
cmp
neg
movsl
je
cmp
in
or
jno
add
mov
and
sub
xchg
xor
add
jp
ss
mov
dec
jecxz
jmp
aaa
shlb
pop
fidivl
push
add
fsts
push
sub
popa
lods
cmp
mov
imul
ret
or
cwtl
fwait
inc
std
ja
add
cltd
push
mov
add
inc
sbb
insb
xchg
cmp
cwtl
movsl
push
aaa
or
scas
sbb
fildll
add
cmp
lret
loop
js
stos
lahf
ret
and
cmpsb
mov
es
mov
negl
stc
and
mov
jae
xor
mov
dec
gs
dec
repnz
mov
jge
gs
in
fs
out
fildl
sarb
bound
sub
add
bndstx
jb
std
xor
popf
imul
lods
lods
mov
cld
push
daa
lock
subl
cwtl
sti
mov
xchg
mov
pop
adc
stc
adc
jnp
inc
ds
push
dec
cmp
test
mov
outsb
mov
adc
test
enter
scas
sti
cmp
mov
cli
fiaddl
ret
xchg
xor
out
mov
out
ret
jle
jne
jne
ret
mov
lahf
mov
cmpsl
mov
xchg
je
cs
and
cltd
mov
mov
decb
bound
jmp
mov
xor
outsl
mov
jns
ds
fcomi
and
sub
pop
hlt
call
pop
sub
insb
sbb
loopne
mov
movsl
loope
arpl
popa
std
xor
jbe
xor
cmp
xchg
sub
inc
sub
push
fsubs
popa
sub
cli
push
pop
add
cmpsl
ret
ds
sbbb
pop
cli
arpl
adc
xchg
sbb
dec
jo
pop
test
xchg
lods
xor
jno
lea
ljmp
or
cmp
and
inc
dec
jmp
dec
cld
xchg
aad
loop
stos
sub
cmp
stos
adc
int3
xor
push
or
rcrl
lret
xchg
inc
push
fdivl
and
aas
loopne
or
fs
les
sysret
adc
incl
xchg
cmp
dec
in
push
add
xor
lahf
sahf
movsl
cmp
xor
iret
testl
pusha
je
inc
and
shl
sbb
outsl
jle
in
sub
stos
fs
fildll
push
mov
mov
in
loop
outsl
cmp
cmp
je
scas
add
sbbl
stc
test
out
dec
scas
aas
inc
std
rcrl
and
cmp
jecxz
movb
dec
sahf
adc
inc
mov
rcll
mov
pop
push
cmp
test
push
aam
loop
mov
push
stos
in
js
pop
cmp
pop
nop
adc
jbe
mov
adcl
dec
out
stos
sar
lea
mov
mov
inc
inc
cmp
cwtl
mov
std
notb
popa
repnz
sbb
repz
inc
aad
shrb
out
lcall
jg
xchg
sbb
pop
outsl
sbb
lds
cs
mov
xor
mov
pop
or
ss
out
xchg
push
push
xor
movsb
imul
cmp
inc
divb
sub
call
push
loope
arpl
pop
into
repnz
pop
fs
lcall
push
std
dec
aaa
out
sbb
loope
sub
pop
mov
mov
cmp
outsb
outsl
popa
out
sbb
jl
cmp
loop
and
in
mov
xor
sbb
xorb
mov
loopne
mov
fisttpll
and
andl
mov
and
push
fmull
push
mov
movsl
inc
adc
outsl
xor
in
jae
push
pop
sbb
mov
jno
sub
ss
mov
xor
or
int3
push
dec
cmp
xlat
iret
mov
add
insb
loopne
or
pop
pushf
shlb
rcll
sub
shll
inc
push
js
addr16
push
mov
xlat
add
call
mov
out
or
pop
and
popa
mov
scas
mov
add
pushf
cli
lret
push
jnp
aas
mov
add
mov
push
pushf
sti
lcall
fcoms
data16
jb
sbb
mov
movsl
je
movsl
fwait
mov
enter
data16
daa
loope
stos
mov
inc
repz
mov
inc
lret
fdivl
add
psubb
fwait
jg
mov
jbe
mov
aaa
mov
push
bound
adc
or
cs
insb
out
cmp
or
and
cmp
push
mov
or
lds
pusha
cmp
push
fwait
jmp
mov
mov
sbbl
cmp
adc
dec
push
shrb
out
lcall
xor
mov
es
rolb
scas
mov
push
rcll
jge
jecxz
jbe
sub
xchg
sti
inc
push
mov
sub
push
int
sub
sbb
sbb
add
adc
or
stos
cmp
sahf
fwait
push
cmp
xchg
sbb
push
pop
mov
jne
popf
jecxz
les
cmpsb
nop
fdivl
or
sbb
sbb
dec
decb
mov
jne
sub
xchg
imul
pusha
fidivrs
pop
loop
mov
daa
loope
arpl
lea
mov
xchg
das
sbb
sbb
and
push
inc
fwait
aas
pushf
jecxz
mov
loope
pop
movsb
mov
sub
rcrb
lret
jl
jnp
data16
mov
jae
push
sbb
lds
rclb
jo
xchg
shrb
popf
int
pop
xlat
adc
adcb
std
inc
inc
jnp
pushf
xor
stos
clc
out
mov
aaa
push
out
mov
in
xchg
push
pop
hlt
outsb
inc
xchg
and
icebp
and
pop
jmp
fbstp
inc
mov
xor
subb
push
bound
loope
or
add
dec
js
cmp
xchg
adc
cmp
nop
dec
pushf
into
xchg
xor
paddsw
fldenv
inc
or
je
test
imul
jns
xor
out
dec
imul
or
adc
mov
mov
push
jle
ds
lds
dec
jl
push
mov
shl
pop
aad
dec
dec
fnstcw
fdivrp
mov
or
je
je
mov
mov
mov
test
sahf
pop
in
hlt
xchg
sub
add
pop
pop
out
pop
test
arpl
orb
mov
sub
out
cmpsb
in
pop
sbb
leave
xor
sbbl
push
mov
pop
mov
arpl
mov
add
xchg
cs
je
sbb
fstpt
sub
lahf
lods
mov
dec
aad
inc
mov
lahf
pop
bound
mov
dec
push
jae
cld
and
in
jns
xor
inc
loop
mov
mov
test
xchg
ss
mov
lahf
pop
into
or
popa
pop
push
pop
cs
xor
pop
dec
push
jno
negb
sbb
stos
out
loope
cmp
inc
inc
jb
rcrl
aas
lret
es
sub
or
scas
push
fld
arpl
pop
inc
scas
xor
inc
add
repz
neg
vmwrite
lret
into
testl
push
add
mov
cmc
bound
xor
inc
pop
inc
xchg
sbb
notl
or
fwait
jmp
nop
push
lds
test
and
cmpb
shlb
and
jno
jecxz
dec
and
lods
ficomps
push
jae
sbb
leave
test
and
mov
and
or
imul
pop
in
push
dec
rcrb
ficoms
xchg
push
ja
sub
xchg
inc
xchg
pop
hlt
stos
insb
adc
mov
mov
mov
cmp
cli
push
sbb
add
lahf
inc
cmp
add
sub
mov
jnp
mov
aam
sub
xor
and
xor
popf
adcb
inc
ss
js
aas
cli
mov
xchg
pop
push
fnstenv
push
fildll
ret
jge
inc
adc
dec
jmp
pop
inc
or
sbb
lcall
fcomps
sbb
repz
int3
and
icebp
push
cmp
mov
into
pop
and
mov
test
es
lds
sub
pop
jg
add
pop
xor
xchg
sahf
xchg
testb
push
filds
iret
jno
imul
mov
gs
sbb
ret
pop
xchg
add
js
adcb
hlt
scas
clc
lret
sarl
ret
sub
scas
imul
bound
adc
addr16
mov
test
adc
inc
xor
psubsb
xchg
imul
jge
fistpl
imul
frstor
call
cmpb
cmp
insb
mov
or
popa
push
inc
and
sub
std
xor
jecxz
jmp
arpl
adc
inc
pusha
jae
sahf
je
in
sub
bound
dec
clc
xchg
dec
jg
push
test
movsl
testl
mov
pop
xchg
xchg
pop
jl
iret
sahf
cwtl
sbb
pop
pop
jecxz
sub
pop
test
xchg
xchg
sub
outsl
js
push
adc
push
data16
insl
cmp
in
daa
pop
cmc
mov
gs
pop
iret
inc
mov
fidivl
iret
mov
push
xor
pop
add
out
mov
test
push
sbb
pop
outsb
sbb
ficoms
inc
in
inc
fidivl
mov
mov
mov
aad
xchg
and
dec
pop
imul
push
lods
sub
cmpsl
dec
das
cmpsb
out
outsb
pop
mov
adc
jl
xor
mov
jno
push
sbb
add
pusha
mov
push
in
xchg
es
je
or
iret
std
jae
mov
dec
mov
or
sbb
addb
int
stos
aad
inc
adc
push
pop
push
rclb
dec
cmp
add
int3
push
xor
add
je
loop
push
sub
xchg
sarl
call
arpl
sbb
or
and
test
test
pop
pusha
dec
test
in
fcmovb
adc
test
xchg
imull
pop
push
outsb
mov
dec
inc
push
movsl
xor
mov
mov
bound
lds
xchg
mov
mov
es
shl
vmovsd
imul
cmp
insl
push
xor
ljmp
jb
push
sub
xchg
mov
repnz
sub
xor
add
in
shl
add
and
inc
in
xlat
mov
jo
neg
out
orl
jae
repz
xchg
cmp
push
cwtl
cwtl
inc
sbb
ret
dec
or
push
jno
dec
add
test
in
stos
inc
mov
mov
sub
mov
fs
cmp
pop
scas
leave
leave
ds
inc
ficompl
ja
mov
stc
test
lea
inc
and
sti
mov
lcall
xchg
gs
scas
sub
mov
dec
fcompl
fistpl
sti
push
test
push
pusha
fiaddl
dec
xchg
aam
scas
cmp
inc
notb
xor
out
loop
out
add
xchg
sbb
sbb
mov
popf
cmp
test
ret
or
clc
je
imul
sbb
shrb
movsb
repnz
add
inc
push
aaa
inc
fwait
jnp
pop
and
aad
into
lods
shlb
sbb
push
jb
fisttpll
rcrb
adc
jb
into
aas
addr16
ljmp
sub
pop
jp
and
xor
repnz
cmc
add
mov
idivl
movsb
sub
mov
cltd
xchg
cmp
rol
push
in
sbbl
sub
insl
fistpll
fadds
inc
adc
in
enter
daa
outsl
mov
int
fists
std
jbe
add
sbb
add
pop
push
ljmp
mov
mov
test
pop
mov
les
addr16
xor
pop
sbb
movsb
push
gs
pop
popf
cltd
lret
scas
mov
push
repnz
sbb
addr16
in
mov
add
cmp
cmp
xchg
jb
rorl
insb
out
inc
or
push
movsb
push
out
sub
sbb
pusha
sti
das
dec
or
icebp
pop
stos
in
fdivrp
adc
jmp
pop
hlt
hlt
decb
test
lret
adc
test
std
aam
adc
faddp
push
std
outsl
ret
loopne
popa
fyl2x
or
int
fistpl
into
add
pop
sbb
cltd
pop
loope
jge
xchg
sub
add
test
cmp
jg
inc
fidivrs
xor
jns
dec
mov
je
lock
mov
mov
push
mov
imul
mov
or
sti
mov
in
es
cld
es
imul
fcmovnu
sub
cmp
testl
ret
cmpl
lds
jl
sbb
pop
sbb
ficoml
int
lret
sub
cmp
pop
daa
push
ficoms
jne
mov
sbbl
add
loope
or
insl
icebp
lock
pop
cmpsb
jge
adc
pusha
js
imul
js
leave
inc
mov
add
cwtl
mov
stc
xchg
pop
cwtl
xchg
xchg
cltd
int3
imul
lcall
push
dec
repz
mov
clc
push
call
or
dec
stc
jmp
clc
push
in
jne
dec
fists
or
inc
leave
push
inc
mov
roll
xchg
sbb
sub
int
aas
add
fstl
lds
in
or
imul
xchg
insl
mov
mov
outsl
rclb
lea
xor
xchg
addr16
sbb
push
add
xchg
sub
rol
fwait
inc
pushf
add
sub
pop
xchg
xor
outsb
mov
inc
xchg
jno
or
mov
das
popf
pop
inc
push
mov
pop
adc
sub
fsubp
inc
mov
pop
cmp
movsb
sub
in
hlt
rcll
fisttpl
inc
sbb
stos
imul
jecxz
sub
rcrl
cmpsl
dec
leave
and
lahf
aaa
sti
jae
add
pop
jmp
scas
add
test
pop
mov
xchg
cwtl
lcall
cwtl
dec
stc
pop
clc
xchg
icebp
jge
jp
sub
rolb
addl
pop
icebp
adc
or
inc
push
inc
test
lcall
aad
dec
lret
pushaw
and
lcall
mov
test
test
mov
lea
and
test
lods
mov
out
or
xchg
daa
rclb
xor
lea
hlt
and
pop
lret
mov
bound
inc
aam
imul
sub
or
fmul
hlt
jmp
or
pop
pop
fmul
pushf
insl
fimull
dec
sub
test
and
adc
fcompl
jmp
or
add
and
out
pop
les
rcrb
das
sbb
pop
loopne
inc
aas
add
leave
add
push
dec
sbbl
pop
ror
jge
xlat
mov
pop
rcrl
mov
or
xchg
popf
sbb
insb
lods
xchg
sub
or
loope
xchg
mov
imul
fwait
cltd
mov
repnz
mov
rorb
inc
sbb
inc
shlb
imul
ja
das
mov
mov
fs
and
sub
ljmp
mov
daa
stos
push
je
adc
mov
inc
ret
test
int3
xor
mov
and
push
inc
int
loope
addb
popf
mov
lock
or
pop
aas
mov
or
fistpll
sub
lret
nop
and
ret
jno
jle
leave
movsb
call
pop
jnp
adc
cmpsl
xchg
and
dec
mov
mov
jmp
imul
push
pop
mov
jb
inc
inc
out
xchg
aam
arpl
leave
xor
lds
adc
imul
xchg
sbb
mov
roll
jne
sbb
push
out
insb
xchg
dec
andb
in
pop
or
enter
and
push
and
loopne
fisttps
fiadds
outsl
pop
dec
jbe
xchg
ss
ss
push
lret
jle
loopne
mov
cltd
repz
xchg
mov
add
out
enter
push
aad
and
psrlw
xor
rcl
pop
test
pop
inc
sbb
je
lods
push
outsb
mov
rol
adc
loopne
adc
lcall
cmp
dec
pop
mov
add
test
xor
add
cs
add
movsl
jp
dec
fcoms
mov
lea
push
fisttps
pushf
xchg
cwtl
adc
lock
icebp
mov
push
in
pop
subb
jle
ljmp
cltd
xorb
fimull
jo
jecxz
pop
push
mov
mov
mov
mov
mov
dec
call
iret
arpl
push
scas
cmp
insb
and
push
shll
clc
stos
inc
outsb
xor
outsb
adc
pop
pop
clc
std
stos
xchg
xchg
and
cld
cmp
cli
mov
push
jl
scas
jnp
insl
cmp
sti
xchg
and
cmp
mov
push
in
xchg
loopne
mov
inc
imul
lret
cmpl
bound
and
adc
xorb
mov
xchg
ret
xor
sbb
or
xchg
and
xchg
das
popf
cmp
pushf
enter
fistl
sub
data16
mov
and
xchg
push
dec
mov
mov
dec
repnz
out
mov
out
xchg
in
decb
mov
inc
outsb
xlat
add
lcall
lret
cli
xor
fdivl
in
arpl
leave
sub
enter
hlt
xor
lahf
xor
ljmp
dec
aad
push
mov
xorl
rcr
mov
lret
fidivrs
mov
sbb
adc
in
inc
test
xchg
scas
sbb
fbstp
and
mov
dec
cmp
orb
adc
imulb
fs
insl
dec
cwtl
xlat
xchg
add
sub
push
mov
mov
and
stos
enter
xchg
jmp
rcr
rorb
out
dec
scas
pushf
push
rorb
jl
xor
jp
and
or
xchg
repnz
les
sbb
mov
push
ret
leave
dec
pop
sbb
fdivrl
adc
jnp
cmp
and
adc
and
dec
popa
jg
mov
xor
adc
dec
cmp
bound
stos
insl
jl
sbb
das
cmp
or
inc
enter
inc
js
dec
xchg
lcall
dec
xor
sub
jle
movl
jp
xor
jmp
pushl
pop
daa
test
les
dec
cmc
jecxz
pop
inc
imulb
and
fbstp
mov
test
repnz
mov
scas
xchg
lahf
or
mov
aam
insb
pop
sahf
add
sbb
or
add
dec
aam
mov
mov
mov
mov
cltd
adc
push
cltd
ret
pop
cmc
bound
test
test
xchg
xor
in
add
jo
add
inc
lahf
push
pop
ja
pop
clc
in
int
jne
mov
push
out
mov
jmp
sbb
fmull
inc
ds
push
or
xchg
loopne
push
pop
mov
push
in
aaa
inc
int3
xor
in
test
jb
pop
test
std
inc
jae
call
and
mov
xchg
mov
test
ds
shl
loopne
int3
push
lahf
lock
repz
lahf
rorl
xor
ret
or
ret
mov
pop
add
fs
cld
mov
lds
sub
std
gs
fisttpll
inc
cmc
pop
cmp
and
jg
cmp
cltd
push
cmpsl
inc
aam
in
lcall
ja
das
bound
adc
int3
daa
jmp
rcll
enter
cmpsb
adc
jno
jg
in
gs
inc
pop
pusha
push
push
les
cmp
add
push
cltd
fdivl
adc
pop
and
movsb
push
mov
jl
mov
dec
pop
push
xor
jp
lea
sbb
scas
lods
jae
sbb
and
cmc
mov
fildl
outsb
shll
inc
xchg
mov
lret
push
xchg
fdivs
mov
xor
xor
cmp
or
mov
icebp
cmp
test
repnz
dec
test
int
mov
lock
xor
and
out
pushf
insb
cmovns
jbe
add
xor
cmp
add
jge
mov
adc
hlt
filds
sbb
add
sub
repnz
sbb
lret
push
sub
aas
cmc
jge
xchg
adc
shlb
cmc
inc
jne
imul
dec
and
pop
cmp
pop
push
leave
pop
ret
decb
enter
sahf
and
scas
dec
mov
bound
test
or
and
movsb
jecxz
sub
or
mov
and
sub
push
shl
push
movsl
cmc
ds
add
cltd
stos
idiv
test
xchg
iret
call
sub
pop
mov
orl
pop
pop
popa
sub
insb
or
mov
cmpsl
ljmp
xlat
nop
cmp
sbb
pop
popf
scas
outsl
or
outsb
mov
mov
out
and
or
pop
inc
stos
fcoms
gs
call
je
push
jns
mov
aaa
jb
fcompl
fmull
mov
loope
in
dec
and
mov
xchg
add
je
mov
adc
mov
loop
imul
pop
stc
jno
jl
sbb
jecxz
ret
test
xchg
movsl
mov
and
fwait
ret
cmpsl
adc
sahf
sbb
addr16
mov
fdivrp
lahf
mov
test
sbb
test
mov
out
pop
inc
jns
and
inc
popf
inc
ret
repz
jmp
xchg
xor
pop
aam
inc
push
and
and
rcrl
push
int3
jo
fwait
or
daa
push
in
nop
push
push
mov
and
in
out
stos
into
lret
iret
push
stos
mov
jae
jg
adc
xchg
je
cmp
icebp
mov
jle
cmc
mov
das
jl
stc
mov
cmpb
push
lea
mov
mov
outsb
xorb
aas
out
ret
xchg
xchg
mov
adc
or
adc
divb
pop
dec
mov
pop
mov
jo,pt
call
dec
push
pusha
mov
xchg
pop
das
xchg
sbb
dec
or
inc
xor
out
in
out
rcrb
in
popf
mov
call
inc
imul
je
ret
or
or
mov
xor
movsl
enter
push
pop
pop
cld
movsb
pop
jmp
push
jo
sub
mov
ljmp
dec
sub
xchg
lret
mov
clc
das
data16
or
inc
cmp
add
push
out
cld
bound
gs
test
dec
mov
jnp
leave
push
jno
and
aad
cmpsb
push
sahf
dec
popf
hlt
mov
xorb
shll
add
dec
fnstenv
xchg
call
mov
mov
dec
cld
and
cmp
add
xchg
jp
jo
sbb
arpl
repz
add
cmp
shlb
cmp
jl
xchg
pop
push
fidivrs
and
xchg
jns
dec
pop
cld
in
jo
pop
adcb
inc
or
stc
pushf
sub
or
xor
jb
adc
outsl
pop
clc
pushf
out
push
xor
mov
loope
cmpb
lods
cmp
dec
add
ss
je
xor
cmp
addr16
outsl
addb
ror
popa
shrb
scas
loop
jecxz
ret
std
inc
push
mov
cltd
arpl
stos
pop
or
dec
rorl
int3
mov
fwait
mov
pop
test
push
push
mov
lret
jae
or
mov
cmp
enter
lret
scas
sti
clc
sbb
xchg
add
call
pop
arpl
and
jnp
or
test
fcmovb
xchg
xor
hlt
push
loop
xor
mov
pop
adc
clc
daa
sub
xchg
in
test
shl
repnz
int3
xchg
adc
or
lahf
sbb
sbb
jge
aam
out
bound
test
sub
or
int
cmpl
pop
push
lcall
mov
jns
mov
es
std
or
rcl
xchg
xor
fists
pusha
test
mov
inc
xchg
mov
sub
mov
ljmp
fbld
fsts
stc
mov
cmpsb
mov
loop
jns
pop
adc
scas
test
inc
push
int3
xchg
enter
jg
jle
cmp
popf
repz
out
arpl
addr16
addr16
stos
jno
cmpsb
add
lahf
jne
or
lock
or
pop
dec
or
jne
mov
inc
jne
sub
jl
cmp
pop
les
mov
pop
sbb
incb
and
xchg
jg
loopne
dec
outsl
mov
rcrl
dec
mov
push
in
pop
push
test
pop
inc
xor
add
mov
dec
cli
sub
dec
popa
popa
mov
leave
imul
int3
push
push
mov
mov
sub
rcrl
mov
lret
cmp
sbb
jp
mov
imul
shlb
inc
jmp
repz
jo
pop
jg
jnp
adc
bound
mov
js
sub
fists
pop
icebp
gs
fsubrl
out
mov
mov
inc
cs
je
faddl
dec
xchg
popa
inc
rclb
push
push
shrb
iret
in
sbb
jns
pop
mov
loope
leave
push
adc
movsl
outsl
in
mov
movsb
mov
hlt
add
outsb
adc
mov
sbb
ja
jo
xchg
pusha
stos
int3
jecxz
push
cmp
movsl
cmp
std
sbb
mov
adc
mov
test
jbe
inc
insl
inc
popa
push
rclb
imul
jmp
or
cs
aam
bound
pop
aaa
daa
lods
or
push
cmp
ret
push
push
fxch
inc
sbb
dec
and
sbb
ds
aaa
mov
or
mov
inc
dec
jnp
andb
add
scas
out
loop
pop
lret
clc
jge
aas
les
mov
jmp
cmc
scas
inc
or
push
add
cltd
jle
fdivrs
push
in
jp
adc
and
sub
loope
adc
adc
sub
xchg
popa
push
and
test
fildll
sbb
shr
cmpsb
sbb
and
cld
cmp
dec
aam
mov
out
jmp
xchg
ret
mov
mov
adc
cs
pop
nop
imul
push
push
aas
cwtl
lret
stos
pop
xchg
loope
das
or
ret
xor
fldenv
ret
cmp
push
xchg
hlt
imul
lcall
xor
fistl
movl
jmp
sbb
in
pop
mov
push
xorb
test
add
loop
push
xlat
int
outsb
cmpsl
inc
mov
jno
jecxz
es
mov
push
jae
push
mov
push
outsb
dec
dec
inc
and
push
aas
push
fs
jae
push
mov
aas
adc
into
push
aas
pop
sbb
xchg
das
ret
pop
std
sub
leave
rorl
push
cmp
outsl
das
lds
flds
roll
push
mov
call
rorb
mov
dec
sbb
repz
mov
subl
lock
xlat
sbb
mov
out
shl
icebp
pop
push
mov
inc
xchg
mov
loope
in
in
pop
adc
es
dec
into
mov
cmpsb
aam
dec
mov
xchg
jbe
mov
mov
mov
mov
pushf
cwtl
sub
jb
ret
outsl
loopne
outsl
add
imul
in
mov
ss
inc
jae
repnz
dec
jg
push
repnz
aas
sbb
jno
inc
movsl
lock
js
cmp
adc
test
sbbb
decb
pop
cmp
dec
jge
mov
pushf
sbb
sub
xor
mov
enter
push
les
sarl
icebp
testb
lcall
mov
pusha
lea
bound
push
outsl
clc
jmp
sub
imul
push
xor
andps
fstps
pop
scas
repz
sub
outsl
sub
cmpsl
arpl
and
sbb
mov
outsl
std
cmp
pop
stc
push
outsb
movhps
cmp
and
dec
iret
lock
loopne
jae
fldcw
lods
mov
lods
ret
shlb
pop
pop
stos
cmp
and
jnp
sbb
mov
inc
push
iret
outsl
into
scas
push
dec
jne
in
ss
cmpsb
or
and
lds
aaa
bswap
fsubrl
stc
jmp
test
cltd
shrl
cmp
mov
or
jl
sub
inc
jbe
fdivr
add
test
cmp
mov
shl
mov
mov
cld
adc
out
aas
mov
cmp
add
in
mov
fwait
and
pop
adc
imul
mov
mov
loope
dec
add
arpl
add
push
adc
adc
out
adc
jo
and
jecxz
xlat
movsl
mov
outsb
js
cmp
mov
add
loop
sub
mov
adc
nop
shrb
push
scas
or
das
divb
das
and
in
out
std
add
jo
mov
jae
jge
les
cmpsb
push
adc
lock
subl
test
lock
out
xor
xchg
cld
mov
mov
pop
leave
inc
push
ss
or
sub
lcall
or
cmp
and
sub
sti
adc
xor
push
call
int3
sub
jmp
xchg
xchg
jl
push
push
mov
jecxz
sbb
xor
xchg
sub
xchg
add
inc
shll
mov
push
enter
pop
or
orl
dec
ss
insb
dec
jbe
mov
pushl
xchg
xchg
push
or
jmp
cld
loop
push
frstor
insb
es
jle
and
sub
vmwrite
mov
shll
push
clc
mov
lahf
sbb
cmp
jl
in
js
push
mov
lods
daa
sub
and
int3
inc
lret
pop
rep
lds
psubd
add
mov
pop
cmp
roll
cmp
pop
and
jle
sbb
xor
push
ret
sbb
xor
out
pop
adc
jns
aad
add
jp
push
out
push
jne
loopne
fists
adc
test
jns
mov
lahf
jo
mov
je
xor
cmpsl
adc
push
xor
stos
or
fidivs
iret
jo
fs
ljmp
xchg
or
aaa
rcrl
xor
and
jl
cli
fstpl
mov
sub
jle
pop
xor
add
lret
cmp
movsb
call
add
or
pop
js
call
cmc
cmc
lcall
xlat
pop
mov
shl
dec
in
jp
mov
hlt
pushf
pop
fwait
test
les
ss
aam
fisttpll
icebp
and
testl
nop
xchg
xchg
xor
sub
or
or
mov
jmp
imul
pop
sub
cli
ljmp
dec
adc
rolb
push
outsb
dec
test
or
cld
arpl
dec
cmp
sahf
pushf
jp
cmp
jb
fcomps
cld
test
sub
pop
mov
push
mov
popf
outsl
ret
mov
cmp
addl
dec
xchg
push
xchg
add
or
or
dec
int3
cmpsb
push
ja
jo
pop
fwait
inc
pop
jae
and
pop
dec
jecxz
jno
repz
inc
inc
jecxz
adc
std
cmc
jmp
ljmp
push
ret
pop
mov
daa
push
jmp
sub
pop
xchg
imul
adc
dec
hlt
bound
mov
int3
fwait
scas
aaa
inc
int
cmpb
test
pushf
xchg
pop
push
ljmp
lahf
ljmp
push
mov
mov
and
dec
mov
dec
and
notl
or
rcll
fsubrl
in
gs
inc
xor
xchg
lods
cltd
jp
ja
fwait
jg
out
popf
or
lea
in
push
xor
mov
xor
inc
cmp
ja
or
add
mov
xchg
push
cltd
mov
out
fs
stc
mov
xchg
and
jl
lea
cmpsb
stos
sti
lret
ficoml
fimull
or
cld
jp
mov
fldt
mov
outsl
data16
pushf
jb
pop
popa
push
mov
cld
fcompl
shrl
jnp
test
das
sub
mov
repz
jge
js
es
jle
and
jecxz
lcall
mov
ret
mov
push
sti
dec
push
mov
movsb
jle
pop
addr16
leave
dec
ss
xchg
mov
movsb
mov
mov
out
or
xlat
out
jl
rcr
add
in
push
fcom
cmp
xchg
fistl
nop
jae
ret
fsubrl
mov
sbb
lret
test
push
cmp
jae
pop
mov
pop
mov
mov
mov
jno,pt
aam
jmp
pop
cmp
bound
aad
cmp
inc
fsub
insl
xor
mov
insb
rcr
mov
dec
sub
adc
xor
test
neg
add
stos
in
sti
ja
test
adcl
xchg
sbb
in
dec
jecxz
nop
xor
xorl
cli
sub
popa
lret
cltd
into
ror
inc
iret
fwait
xchg
inc
cmc
inc
pop
add
fsubrl
jge
leave
mov
push
xor
cli
sub
in
rcl
sti
inc
in
out
mov
testl
std
cmpsb
jg
mov
arpl
mov
jno
inc
xchg
jmp
xchg
inc
cmpsl
push
js
mov
xchg
in
rol
lahf
shlb
cmc
es
mov
cmpsb
orb
push
push
mov
adcl
dec
and
sub
mov
in
loopne
jecxz
or
jle
cmpsb
jnp
aaa
adc
gs
cmpl
cmpsl
ss
loopne
dec
and
test
cmp
dec
inc
loopne
jne
sahf
idiv
fiaddl
jbe
mov
pop
jb
push
jnp
push
fstp
pop
fcoml
in
ret
cmp
and
aad
mov
repz
mov
in
jb
jl
inc
mov
jae
rorl
int
ret
mov
sbb
add
sbb
push
jmp
add
sti
add
outsl
or
and
mov
fisttps
cwtl
mov
cld
push
dec
out
add
fsubs
add
imul
xor
xchg
nop
cmp
mov
push
out
fimull
clc
mov
xchg
mov
adcb
xor
or
jp
mov
cmpsl
mov
dec
out
dec
jecxz
imul
jbe
push
les
xchg
sbb
lcall
loopne
cltd
adc
xchg
test
xchg
sbb
cmp
sbb
push
mov
imul
or
and
shlb
cmp
xchg
xchg
pop
in
loope
jnp
ret
pusha
sbb
sahf
or
ficompl
pop
leave
sub
jl
dec
jb
cmp
mov
jmp
push
aas
xchg
mov
insb
jg
mov
add
push
lcall
dec
out
fucomip
cli
push
xorl
popf
lds
aaa
hlt
rcrb
jmp
mov
shrb
fnstenv
inc
dec
inc
mov
xor
cmp
pop
pushf
mov
adc
pop
testb
fildll
push
push
pusha
loope
add
movsl
mov
cmpsl
stos
cwtl
mov
pop
mov
mov
les
lock
das
xor
dec
negl
lret
sarb
sbb
xchg
popa
imul
push
outsb
mov
mov
push
aas
sbb
add
xor
xor
dec
pop
rorb
ret
dec
es
arpl
or
stos
pop
jb
shrb
mov
or
sbb
aaa
leave
and
lock
cmp
sbb
ljmp
pop
cmp
shll
cltd
push
sarl
push
push
rcll
mov
add
stc
push
aaa
stos
mov
imul
mov
pop
sarb
jge
in
mov
sarb
push
jge
push
aas
test
or
jle
inc
ret
jne
je
inc
test
les
or
leave
stos
popf
jl
fcompl
pusha
jmp
jns
jo
mov
pop
fwait
xchg
mov
test
push
pop
ficomps
sbb
in
sbb
scas
mov
dec
shl
lret
xchg
fsubp
cld
sub
sbb
aam
mov
mov
popf
dec
imul
xchg
nop
push
popf
jbe
sub
mov
in
ret
lcall
ljmp
xchg
repz
mov
test
in
lea
inc
cmp
test
popa
ljmp
lods
sbbl
sbb
jne
mov
out
jle
popf
sbb
jns
mov
out
jae
inc
xchg
in
insb
xor
rolb
and
pop
cmp
imul
cmpb
sbb
iret
cmp
mov
sarb
adc
roll
xor
mov
subb
loop
cmp
xchg
cmp
fistpll
or
mov
imul
test
es
push
mov
pop
fwait
inc
lods
xor
jns
cli
sar
cs
xchg
pop
shr
push
ret
scas
or
dec
leave
dec
lds
fidivs
add
mov
and
js
or
xchg
inc
je
xchg
sub
lds
out
cltd
ret
inc
aad
enter
movsl
jecxz
stos
jp
xor
dec
sahf
jns
lock
add
and
adc
sti
jb
cmpsl
adc
push
leave
clc
jl
shrl
mov
iret
sbb
pop
jp
and
jmp
xlat
xor
cs
aam
cmp
adc
out
insl
or
js
call
shll
sbb
fisubs
add
rorb
pusha
sahf
lret
jne
dec
sbb
jl
sbb
stos
aaa
fcomps
dec
aaa
out
das
addr16
inc
in
jp
cmpsl
sbb
push
data16
scas
mov
mov
sub
xchg
dec
and
xor
test
fbld
rol
int3
lea
shl
or
out
jo
sbb
mov
les
outsb
cmp
mov
es
dec
lret
jl
and
push
cwtl
or
push
mov
loope
lahf
idivl
mov
inc
gs
jbe
aam
xor
mov
adc
push
push
cmp
xchg
ljmp
test
or
jb
pop
int3
mov
flds
jle
push
dec
push
mov
lock
jle
ds
testb
xchg
push
push
pop
enter
daa
inc
das
and
je
pop
dec
jp
mov
popf
rorb
xchg
jg
jecxz
in
cwtl
sub
sahf
andl
dec
jp,pn
mov
imul
loopne
cmp
push
sub
push
adcl
xchg
and
mov
and
shll
outsl
mov
push
jo
cmp
lahf
pushf
inc
sahf
and
cmpps
push
sbb
pop
stos
add
pop
stos
fcompl
mov
ret
daa
pop
sbb
jno
cmp
popf
adc
sti
mov
packsswb
fs
or
fidivs
icebp
outsb
sub
lahf
pop
cmp
jl
andb
push
inc
push
mov
mov
mov
push
out
pop
xor
adc
jne
pop
xor
jg
push
movsb
xchg
mov
push
cmp
movsl
fmul
xor
or
push
xchg
push
inc
aas
jae
cltd
shlb
in
xchg
jl
bound
cmc
or
les
gs
sbb
sbb
mov
stos
test
mov
scas
cwtl
outsl
cmp
roll
fs
mov
jle
sarb
adcl
mov
or
dec
cld
fmuls
movsl
xchg
cmpb
sbb
dec
adc
sbb
arpl
pop
lret
sbb
add
daa
pop
hlt
lret
ljmp
pop
cmc
daa
mov
xlat
aad
out
sbb
stos
or
out
frstor
lea
stos
ret
jge
mov
mov
iret
xor
sub
testl
pop
mov
push
ret
dec
xchg
popf
addr16
outsl
ret
mov
test
push
dec
pop
mov
mov
fwait
jnp
imul
mov
mov
push
mov
dec
pop
ljmp
popl
pop
movsb
mov
out
mov
jl
mov
adc
movsl
push
push
cmp
mov
pop
js
sub
mov
jecxz
jp
dec
sbb
jbe
xlat
icebp
aam
xor
je
sti
xor
xchg
pop
call
mov
repz
test
mov
jecxz
adc
adcl
ret
test
mov
into
sbb
xchg
fstpt
lods
enter
jbe
pop
cmc
decl
ljmp
in
push
ror
rcll
inc
pop
in
sbb
inc
pop
aam
xlat
std
ror
mov
es
cmp
or
dec
adcb
or
and
inc
mov
push
and
inc
and
stc
cmc
mov
push
std
mov
lret
jb
add
cld
fadds
in
add
jno
and
mov
adc
adc
sbb
pushf
stos
pop
jecxz
out
cmc
and
aaa
in
sbb
rolb
xchg
fisttpll
fwait
sbb
or
int
mov
mov
xchg
ja
ds
mov
jno
or
lods
pop
push
pop
stos
xor
gs
insb
inc
ds
cmpsl
xor
xchg
cwtl
les
jnp
insl
enter
rcrl
sbb
les
incb
jmp
jl
in
and
dec
out
fwait
loope
jmp
add
movsl
insl
insb
add
int
inc
pop
js
xchg
aad
insl
dec
xor
sub
add
inc
test
pushw
in
or
fidivs
pushf
cmc
cmp
add
scas
push
inc
mov
rcr
pushf
loopne
fcmovnbe
lret
rcll
out
xor
data16
xchg
xchg
out
int3
outsb
shll
mov
cmp
mov
call
imul
iret
sub
mov
mov
adc
xchg
xor
inc
inc
addr16
sbb
pop
rorl
repz
das
and
iret
mov
das
cmp
aad
jns
mov
movsb
push
and
mov
in
or
push
icebp
gs
flds
xor
adc
fwait
add
push
jae,pn
xchg
or
sub
push
dec
shlb
xchg
or
and
jecxz
and
aas
add
dec
fsubrs
inc
add
out
inc
rclb
cmp
or
enter
mov
inc
mov
and
and
adc
iret
negb
inc
sarb
dec
arpl
cwtl
dec
cmp
out
lods
outsb
or
in
lods
rorl
out
repnz
imul
sbb
or
stos
fdivl
shrl
mov
sbb
das
xor
sub
ja
cmc
sub
mov
cwtl
sub
cmc
or
inc
push
in
cmp
push
setns
movsb
xor
jbe
mov
push
push
int
inc
xlat
dec
add
inc
shr
imul
pop
pop
pushf
cmp
add
ss
cltd
fadd
fld
fs
gs
push
and
mov
jp
aam
arpl
ss
imul
mov
fistl
adc
addr16
or
shrb
popf
sbbl
lcall
mov
insl
adc
jnp
std
mov
fdivrs
in
mov
int3
gs
jmp
pop
jl
mov
insb
pop
sar
movsb
pop
and
push
xchg
adc
add
xchg
hlt
push
lds
adc
pop
dec
ret
mov
xchg
fidivrs
int3
shrd
inc
add
pusha
enter
pusha
leave
enter
test
xchg
add
mov
sbb
adc
fimuls
pusha
push
stos
aad
and
lcall
add
and
mov
js
add
adcb
mov
fmul
mov
cmp
lcall
insl
cltd
iret
mov
test
imul
sub
or
push
ret
imul
clc
repz
and
lcall
mov
loope
fnstcw
inc
dec
enter
ja
test
aam
xor
aas
sahf
lahf
fs
shld
push
fwait
imul
insl
push
scas
aad
fldcw
mov
ret
jecxz
repnz
or
mov
mov
jg
pop
jp
jbe
adc
in
rol
inc
in
scas
xor
mov
sbb
mov
stc
ljmp
pusha
test
fdivrs
insl
cmc
jae
orb
or
xchg
adc
push
push
push
out
and
popf
mov
xlat
dec
mov
out
mov
loope
and
push
or
adc
repnz
mov
mov
inc
in
mov
sahf
out
dec
xor
arpl
adc
mov
jmp
outsl
mov
pop
jne
fsubrs
repz
fsubs
xor
outsb
mov
out
popa
or
cmc
inc
scas
lods
das
mov
es
xchg
dec
pop
mov
rclb
outsb
cmp
leave
add
pop
xor
fisubrs
push
stos
aaa
loop
por
pop
incb
jo
mov
sub
dec
icebp
cmp
sub
inc
dec
out
cwtl
dec
daa
arpl
test
mov
and
cwtl
test
xchg
andl
adc
mov
call
cmpsb
push
jno
jecxz
ret
mov
push
and
dec
hlt
stos
popa
ja
mov
inc
pop
jbe,pt
in
adc
fsts
cmpb
pop
test
mov
dec
stc
mov
dec
mov
add
nop
sub
enter
loop
lods
sbb
insb
or
push
nop
mov
pop
rorl
mov
out
movl
jmp
xchg
lods
xchg
test
jg
cltd
push
aad
scas
mov
sbb
lock
shll
dec
test
imul
and
cmpsl
mov
pop
adc
mov
mov
cmp
xchg
adc
mov
outsb
arpl
mov
call
lret
sbb
stc
mov
lds
ret
mov
mov
cmpsb
xchg
in
sbb
inc
fildl
in
jb
pusha
xor
push
xchg
mov
into
jcxz
ds
mov
ret
arpl
xchg
mov
push
mov
pusha
clc
jnp
repz
mov
enter
jnp
xor
into
mov
mov
lahf
cmp
sbb
pop
sub
mov
adc
push
jle
xchg
jge
sbb
mov
adcl
sbb
pop
pop
inc
pop
lods
test
es
decl
cmp
push
or
and
in
popf
add
bound
push
sub
xor
sbbl
aad
imull
xchg
pop
mov
data16
lock
mov
sbb
stos
sub
mov
sbb
fldcw
int3
mov
cmovnp
test
imull
in
fisttps
cmp
mov
xchg
flds
push
cmp
jmp
mov
cs
mov
ds
popf
xchg
lret
lahf
cmp
outsb
push
test
pop
fsubp
cmpsl
fs
lret
icebp
jle
movl
jge
mov
fwait
jle
aas
aas
adcl
shll
adcb
cwtl
lret
pop
mov
lret
jmp
cmp
repz
add
cmpsl
stos
adc
inc
xchg
fdivrp
or
sub
pop
xchg
sub
mov
insl
sbb
inc
repz
lods
mov
mov
xchg
jne
cmp
mov
add
mov
xor
outsb
bound
adc
js
inc
pop
fnstsw
into
inc
or
int
mov
cmpsl
inc
stos
mov
inc
cmp
inc
mov
shrl
pop
subl
or
iret
mov
mov
jge
mov
punpckhbw
jmp
lock
jg
incl
ret
test
xor
mov
rolb
push
rolb
adc
out
jae
and
ror
jbe
jo
sarl
push
icebp
xchg
out
int3
in
aas
hlt
cld
sbb
or
inc
nop
inc
pop
add
or
cld
xchg
or
xchg
nop
push
lret
cmp
add
cs
aad
mov
loopne
dec
xchg
jns
jle
pop
jne
bnd
out
mov
mov
xchg
fs
and
add
xchg
cmp
jbe
stos
mov
sub
mov
fnstsw
shrb
mov
push
or
push
cmp
and
popa
pop
lret
sbb
adc
add
mov
sbb
sub
jg
mov
mov
movb
or
insl
jae
fistpl
jb
cs
sbb
rcrb
sub
fucomp
push
push
xor
or
or
cmp
mov
mov
cltd
mov
mov
adc
jns
adc
insl
and
xchg
lods
add
call
sbbb
inc
cmpsl
sub
add
arpl
std
adc
out
fcmovb
push
sub
or
xchg
push
fwait
inc
in
pop
and
cld
xchg
push
movsl
dec
jns
mov
mov
lods
xor
adc
adcl
xor
xchg
jbe
fmul
dec
in
ss
mov
subb
inc
add
cmp
fwait
cmp
push
daa
lahf
jnp
adc
and
mov
cmp
push
lret
adcl
fmuls
shrb
lods
inc
inc
out
int
or
mov
std
fcmovnb
jecxz
es
xchg
jae
nop
ret
rcl
or
popf
xchg
xor
push
mov
adc
cmp
cs
nop
iret
inc
test
loopne
negl
adc
adc
rcr
fwait
xchg
icebp
inc
ljmp
mov
push
hlt
xchg
imulb
lcall
sarl
jne
mov
or
loope
pop
and
add
sbb
push
mov
mov
push
test
andb
fwait
sub
shlb
sbb
dec
lock
ds
jl
pusha
jo
xor
mov
loope
add
ljmp
push
mov
sbb
and
pop
out
popa
cmp
pop
insb
jb
cmp
and
icebp
and
or
sub
dec
pop
push
push
xchg
cmpl
pop
cmpl
dec
pop
test
ja
adc
add
pop
add
in
loop
out
fsubrl
add
aas
subl
test
fdivl
pop
sub
xchg
sbb
mov
imull
mov
dec
push
sub
push
addl
test
movsb
bndldx
cld
jo
cld
in
imul
and
fidivl
ret
inc
pop
mov
mov
jle
adc
aas
hlt
push
lret
lock
mov
mov
inc
xchg
fwait
scas
sbb
imul
mov
and
test
shrb
cmp
loop
ss
adc
add
mov
jae
inc
cwtl
stos
add
fiadds
in
int
lret
dec
adc
mov
mov
je
arpl
cld
mov
jns
stos
ljmp
in
pop
test
cmp
aaa
out
test
bound
lods
test
push
fisubrl
lock
sti
xor
pop
jae
aam
scas
in
shl
hlt
loopne
fcoms
out
xlat
dec
addr16
ljmp
ss
jno
xor
fs
into
push
cmc
les
add
xchg
inc
mov
movsb
fimull
dec
pop
popf
dec
and
xor
add
or
ljmp
fnclex
mov
nop
or
in
mov
cmp
pop
jne
fwait
push
add
test
pop
add
in
lock
fwait
add
push
cli
jbe
dec
push
cmp
sub
sub
pop
mov
sub
xchg
dec
and
and
dec
outsb
jb
out
rcl
call
add
lret
jns
pop
hlt
es
pop
repnz
fisttpl
movsb
repz
popa
popf
dec
jg
int
xor
push
fs
jle
xor
repz
pop
mov
subl
adc
sub
icebp
mov
xchg
jns
rorb
pusha
mov
ss
test
ljmp
adc
xor
das
push
pop
dec
repnz
mov
push
pop
inc
cmp
xlat
pop
pop
outsl
jbe
call
mov
pop
mov
ret
movsl
lret
popa
mov
pop
or
ljmp
cmp
mov
lds
fistpl
shrl
popa
sub
push
into
xor
xchg
lret
mov
out
push
mov
sub
int3
jle
das
repz
add
cwtl
les
pop
call
int
cmp
hlt
mov
mov
cwtl
rcrl
xor
negb
test
call
push
sbb
adc
push
sub
sbb
or
jecxz
es
leave
nop
jl
jp
pushf
sarl
aaa
jno
mov
ljmp
pop
and
push
lret
sti
pop
cmc
int3
mov
add
and
xchg
popa
pop
daa
in
dec
fcmove
loop
ja
jne
js
xor
cmp
push
pop
subb
fwait
xchg
or
xor
rcrl
incb
push
jl
adc
dec
lret
push
enter
addr16
xor
fistpl
cld
push
push
mov
push
mov
enter
out
adc
mov
or
adc
cld
mov
ja
or
scas
and
pop
push
ljmp
shrl
inc
ret
xorl
push
xchg
lcall
mov
ja
cmp
aad
jle
and
jmp
xor
mov
push
pop
mov
lret
xchg
int3
adc
insl
movsl
jne
pop
clc
push
push
xchg
cwtl
pop
lahf
xchg
fidivl
pop
jecxz
out
or
fisubl
fadd
fnstenv
aam
jns
push
ds
pushf
std
sbb
or
push
push
jae
pop
mov
adcb
fstps
rep
xlat
push
add
bound
push
shlb
mov
mov
push
pusha
mov
fidivrs
xchg
push
add
and
sub
ret
cmp
jg
mov
std
mov
adc
std
xor
callw
fcompl
or
adc
adc
pusha
pop
incb
add
inc
icebp
ret
in
xlat
mov
inc
mov
iret
cld
nop
arpl
shll
sbbl
mov
nop
push
jg
jp
mov
sub
mov
jg
and
dec
decl
test
fucom
loopne
movsl
clc
lret
pop
push
pop
adcb
mov
jmp
add
or
test
imul
sbb
xor
add
scas
lea
mov
or
icebp
imulb
lahf
sbb
movsb
into
test
das
jo
mov
cwtl
cmp
pop
and
mov
inc
es
and
fs
jmp
lds
je
push
in
movsl
pop
aaa
or
adc
iret
jle
xchg
addl
rorl
sub
or
adc
inc
insl
sub
xor
cmpsl
fldcw
mov
pusha
push
adc
clc
inc
cltd
dec
xor
pushw
mov
mov
rcrb
pusha
fstps
sbb
push
into
aam
cld
push
aam
mov
pop
insl
pop
ficompl
jbe
nop
mov
xchg
dec
and
xchg
cwtl
bnd
aaa
pusha
insl
xlat
pop
inc
mov
sbb
das
pop
cmp
lods
in
pause
int
xor
mov
fdiv
add
test
pop
sub
pusha
outsl
sti
jb
sbb
int
outsb
pop
jg
iret
dec
sti
push
stos
js
loope
movsb
rcl
addr16
lret
mov
sbb
out
mov
inc
sti
mov
and
stos
fucomp
mov
adc
adc
and
push
inc
or
cmp
cld
sbb
pop
push
pusha
jl
xor
adc
xchg
add
cmpl
ljmp
data16
mov
jns
pop
dec
in
sbb
sub
sbb
loop
int
inc
aad
fcompl
outsb
pusha
sbb
pop
and
fidivrs
fs
mov
jb
jmp
adc
cmp
es
scas
clc
or
cltd
xor
test
insb
aas
jmp
fxch
cld
fs
or
inc
ffree
inc
repz
pop
into
xchg
sbb
rorl
mov
cmpl
and
repnz
stos
shrl
cld
test
jae
push
cmp
repz
cld
xor
dec
and
hlt
cs
int
sbb
inc
xchg
leave
fmull
stc
mov
push
jns
sub
cli
inc
jl
dec
fisttps
cmc
aas
hlt
clc
jmp
and
mov
nop
out
xchg
enter
nopl
inc
dec
mov
out
fdivr
das
imul
testl
xor
sar
xlat
cli
movsl
push
jbe
xchg
jecxz
out
sub
call
jmp
xor
popa
outsb
loop
aam
jg
dec
mov
imull
test
jo
mov
aas
cwtl
xchg
pop
add
mov
add
cld
out
loop
fnsave
adc
or
jns
sbb
sub
jl
dec
jo
sub
sbb
in
adc
mov
inc
push
push
sub
jmp
outsb
adc
loope
inc
xchg
idivb
lea
or
es
xchg
subl
scas
mov
jl
js
or
adc
es
jl
in
test
lcall
mov
test
pop
cmpsl
adc
int3
ljmp
push
and
lods
cld
sbb
and
mov
insb
dec
mov
je
mov
and
cwtl
and
mov
dec
mov
sbb
sti
pop
sub
lods
xor
test
xchg
loope
nop
cmp
sbb
pop
xor
out
xchg
xchg
aad
fmuls
cs
jnp
ss
mov
test
fisubs
insb
jno
enter
imul
lock
arpl
dec
cmp
inc
jge
popf
add
and
aad
xor
mov
pop
sub
cwtl
andb
ds
xor
out
repnz
pop
push
push
repz
sub
jg
or
ss
subb
cli
repz
cltd
sub
mov
adcb
xchg
test
int3
daa
ret
ret
inc
enter
test
shlb
mov
fstl
push
mov
negl
xor
ficompl
imul
fldcw
mov
mov
dec
cmp
add
inc
int3
stos
xchg
insb
mov
inc
mov
pop
pop
popl
mov
jecxz
cmp
loopne
jns
pop
mov
jne
dec
push
pop
xor
pushf
pop
sbb
jmp
mov
xor
mov
pushl
push
stos
pop
xchg
push
mov
jnp
dec
lahf
insb
jge
fimuls
int3
mov
icebp
mov
jns
inc
iret
call
fiadds
je
xchg
cmpsl
and
loopne
mov
push
into
xor
xor
movsb
pop
test
and
outsb
fldcw
xchg
insl
insl
std
add
inc
in
mov
cmc
int
lods
bound
xorb
mov
fs
sahf
sbb
mov
adc
or
cli
ds
aad
or
xor
daa
into
rolb
mov
mov
xor
cltd
inc
lods
repz
repz
cltd
dec
movsl
jnp
in
in
add
ljmp
lea
mov
test
fisttps
sub
repz
dec
hlt
shrl
je
ret
xchg
std
lock
imul
divb
push
add
xor
dec
sbb
js
int
pop
test
bound
fabs
jbe
add
and
iret
pop
jmp
xchg
test
mov
jmp
jno
cmp
xchg
mov
mov
fisttpl
sub
jg
fdivrl
outsl
iret
aaa
jle
notl
sub
mov
mov
out
dec
mov
lods
lods
xchg
ret
insb
push
mov
std
sarl
daa
clc
mov
mov
inc
repz
arpl
pop
in
daa
or
imul
shrl
jge
xchg
push
aad
xchg
sti
mov
lods
xor
out
movsl
fldl
js
lcall
cs
push
mov
fwait
sub
xorb
cwtl
mov
lcall
jg
int
pop
pop
ret
mov
lods
mov
daa
popf
xor
push
idiv
mull
cwtl
in
xchg
push
js
sub
sub
lds
dec
fisubrs
repnz
std
xor
xchg
mov
xchg
orl
test
xchg
cli
scas
mov
push
in
mov
punpckldq
pop
xlat
aaa
or
ss
cmp
inc
mov
or
sub
pop
pop
or
clc
mov
aad
cmpsl
addr16
in
xchg
add
fs
jns
mov
cmp
fs
cmpsl
cmp
and
imul
adc
mov
dec
aaa
mov
mov
nop
std
pushf
mov
sbb
ja
repz
xchg
jle
rorb
add
and
outsl
and
shlb
xor
dec
lret
ret
stc
jns
lds
and
xchg
mov
in
mov
imul
pop
mov
fdivl
xchg
xor
adc
xor
hlt
lods
cmpsb
mov
shlb
lods
stos
inc
push
shl
sub
sahf
mov
nop
lds
mov
aaa
cmp
dec
lock
arpl
aaa
sub
xlat
and
or
fdivl
loope
sub
pop
aas
dec
testb
inc
or
xchg
sub
clc
aad
sbb
test
stos
out
xchg
fcomps
out
popl
roll
mov
mov
sbb
mov
pusha
fnstenv
sbb
mov
xchg
jge
push
iret
xchg
pop
fisubs
push
mov
scas
ret
mov
and
mov
lret
mov
test
or
popf
jge
out
add
mov
lea
ja
fdiv
jb
add
repnz
into
mov
inc
lahf
mov
movsb
fidivs
dec
lock
pop
mov
pop
mov
roll
jae
std
inc
xor
roll
push
jns
mov
cmp
popl
dec
popf
dec
test
test
es
fisubs
stos
addr16
nop
inc
lds
xchg
mov
xlat
inc
and
repnz
jb
out
repnz
add
test
jns
cmp
xchg
loopne
mov
shl
xchg
fisubs
adcl
aas
inc
pop
cmpsb
popa
mov
test
popa
dec
stc
sub
out
gs
arpl
lret
mov
sbb
pushf
xchg
call
mov
lret
lahf
xor
adc
lods
subl
cld
ret
mov
sarb
mov
shrl
imul
sub
push
in
div
xor
add
rcl
xchg
mov
xor
addr16
pop
test
fmull
cmp
jmp
popa
pop
fdiv
mov
clc
cmp
pop
fstpt
mov
push
xor
std
mov
aas
leave
jne
xor
dec
hlt
cmp
jmp
lret
lahf
mov
xor
jo
mul
lock
shll
xor
dec
ljmp
mov
fimull
add
jecxz
push
sbb
lods
call
cmc
das
xlat
call
jnp
imul
push
les
lcall
sbb
inc
pmullw
imul
in
leave
iret
mov
sub
test
sub
xor
sub
pushl
out
jns
inc
xorb
push
movsb
pop
in
lret
jmp
push
imul
mov
inc
push
insb
push
das
jge
bound
shll
nop
xchg
test
fnsave
incb
addl
xchg
mov
xchg
int3
mov
mov
push
jge
xchg
lret
xor
jge
xchg
movl
sub
xchg
and
mov
fnsave
add
stc
cmp
push
inc
mov
pop
jg,pn
or
test
stc
sar
and
mov
repz
fldenv
movsb
sub
aad
xchg
ss
std
sbb
aaa
mov
pushf
jmp
xor
push
aad
lret
jmp
sub
aad
scas
dec
cmp
icebp
aas
and
int3
cs
or
in
add
mov
roll
pop
adc
sahf
jg
stc
xchg
dec
push
gs
mov
mov
arpl
shr
jb
shll
out
adc
pop
sub
or
inc
inc
dec
mov
mov
or
imul
sti
jb
or
mov
xor
push
pusha
xor
xor
mov
shll
sbb
lahf
adc
test
mov
sbb
and
mov
into
push
adc
in
ljmp
adc
call
cli
sbb
sbb
popa
inc
jno
fnsave
lret
mov
and
iret
mov
sub
shll
daa
sub
or
out
or
lods
push
in
pushf
cmpl
loopne
sub
fnstcw
lret
pop
sahf
and
xchg
jecxz
xchg
pop
jge
xchg
lret
frstor
clc
mov
jmp
pop
in
fwait
sub
js
fisttpll
loop
scas
popa
mov
xlat
pop
cmp
and
jge
iret
fadds
pop
xor
push
mov
push
loope
push
sbb
insl
pop
push
ja
aad
fcompl
imul
mov
sbb
testl
stc
and
shll
dec
in
test
and
sbb
js
cld
stos
jbe
jle
mov
dec
ljmp
popa
push
aas
mov
aam
jmp
rcrb
popa
sarl
jmp
psraw
fwait
pop
div
dec
jb
fs
push
jl
adc
call
dec
pop
sbb
ljmp
into
aaa
push
mov
fwait
loopne
out
sarb
push
or
test
push
aad
fnstcw
inc
lock
mov
or
movsl
je
lock
and
movsl
pop
clc
dec
aam
ds
and
clc
aas
incb
pusha
fwait
mov
pop
cmp
jb
cmp
sub
xor
mov
lret
rcr
cmc
out
xchg
push
cli
push
insl
arpl
punpckhbw
lahf
inc
fsubrs
pop
xchg
dec
add
adc
mov
mov
imul
shlb
push
dec
dec
data16
sub
sbbl
int
dec
jae
jecxz
push
inc
testl
outsl
out
mov
sbb
cmp
fwait
sub
nop
icebp
dec
cmpsl
pop
test
push
xchg
inc
ret
out
iret
mov
out
mov
lret
xchg
sti
lods
ljmp
mov
out
jne
sbb
push
lret
aam
pop
sbb
sub
add
jae
js
aam
add
out
dec
sbb
jp
or
cmpsb
gs
scas
loope
nop
in
sysret
mov
mov
sti
icebp
andl
inc
int
push
out
pop
test
mov
adc
push
cmp
fwait
push
xlat
mov
xchg
add
adc
shlb
lods
inc
in
das
sbb
and
cmpl
addl
lods
inc
pop
pop
ds
mov
xchg
ljmp
mov
lret
push
jno
loope
cltd
ja
sub
mov
sub
add
push
push
pop
jne
xor
adc
std
test
int3
mov
clc
mov
pop
stc
aas
mov
mov
sar
push
mov
mov
lock
je
jmp
xor
mov
insb
lret
sbb
pop
xor
dec
xor
fcoms
mov
and
ret
cmp
cmp
inc
cs
pop
jge
xor
mov
lods
gs
or
daa
mov
stos
cmp
inc
jne
mov
jns
pop
sub
andb
inc
jg
dec
jge
jge
cmpsb
cld
sbb
cmpsl
inc
lds
adc
pop
adc
or
rcrl
cmp
mov
pop
sarl
data16
push
cs
pop
adcb
jge
nop
call
push
jns
fsub
and
mov
push
insl
addr16
roll
jecxz
sub
add
xor
imul
inc
adc
mov
jnp
cmp
and
aas
testb
adc
sub
addr16
lret
dec
insl
jo
cwtl
and
xchg
dec
fstpt
xlat
jb
js
inc
in
cltd
push
and
mov
hlt
mov
movl
jno
mov
cmpsl
stos
fs
stc
nop
mov
dec
repz
leave
mov
jg
loop
mov
xchg
push
ss
fidivrs
mov
inc
xor
and
mov
pop
and
outsb
sahf
dec
pop
mull
cmpsl
sub
ss
or
jno
mov
jno
xchg
leave
lret
enter
aas
and
arpl
adc
or
dec
fistl
xor
xchg
lahf
call
mov
inc
sbb
mov
fnstenv
adc
or
adc
shl
cmp
ret
sbb
out
andl
mov
dec
cwtl
xor
and
sub
aad
clc
dec
pushf
popw
sbb
jle
sbb
mov
push
arpl
ss
sbb
daa
sbb
and
fisttps
sarl
popa
mov
lock
xchg
mov
inc
sbb
add
clc
pop
popa
mov
or
stos
popf
xor
test
adcb
vmwrite
jb
and
jbe
inc
cltd
hlt
sarb
mov
push
cmp
aam
push
into
dec
lods
fcoml
or
push
stc
push
jmp
dec
mov
aaa
arpl
jae
repnz
lcall
mov
inc
int
adc
push
cmc
imul
fmull
aad
add
cmp
adc
mov
imul
jb
stc
cmp
imull
dec
push
mov
xchg
dec
test
lret
and
lea
mov
mov
jb
jp
sti
subb
sbb
jns
mov
bound
les
push
jns
fmuls
test
add
push
pop
dec
cmp
nop
imul
add
ja
jmp
inc
out
jecxz
cmp
test
loop
or
test
or
scas
mov
psraw
sti
mov
out
mov
jg
std
cmp
or
test
sub
into
pop
adc
das
lret
pop
xor
mov
pop
add
sbb
mov
xchg
mov
mov
stc
xor
movsl
pop
xchg
push
aas
into
add
fstl
mov
dec
inc
dec
rorl
test
mov
enter
jb
jle
sarl
inc
lods
das
inc
adc
std
cld
popa
push
shrl
fwait
rorb
jecxz
mov
pop
out
pop
jmp
stos
dec
fcmovu
ja
inc
stos
add
divb
push
gs
jno
fistl
stos
push
out
add
push
popf
ret
xchg
addr16
or
ret
adc
cmp
lcall
out
faddp
ficoms
sub
mov
xchg
mov
repnz
nop
jge
aaa
pop
lret
sub
call
out
sub
sub
mov
add
mov
or
adc
inc
mov
pop
add
mov
push
rol
cs
jno
scas
sub
mov
imul
std
jb
xchg
cmp
cli
outsb
dec
out
mov
xchg
stos
and
adc
and
push
aam
lahf
inc
fsubl
mov
adc
and
sti
sub
jbe
add
ja
imul
lret
and
cmp
addr16
incl
ja
pop
ret
arpl
push
inc
or
ret
mov
sahf
movsl
mov
sub
mov
enter
or
mov
gs
push
push
fldenv
les
xchg
xchg
daa
aaa
xchg
inc
scas
sbb
scas
stc
push
sub
and
adc
ljmp
mov
add
incl
inc
enter
fistpl
imul
cmpl
out
in
mov
test
shrl
in
cli
imul
iret
and
mov
push
aam
fwait
jo
or
pushf
dec
cmp
mov
mov
xor
incb
mov
mov
xchg
adcl
gs
sub
sub
mov
inc
mov
ljmp
ficompl
xchg
fcom
out
es
dec
adc
lret
lds
jecxz
mov
in
dec
scas
hlt
pop
addl
scas
xorb
ret
dec
mov
push
cmp
push
stos
push
sub
sarb
cli
sub
sti
push
hlt
jp
cltd
inc
sahf
sbb
aas
mov
lea
jl
cmp
jmp
and
gs
lds
cmp
outsl
test
push
fsubl
pop
adc
pop
movsb
aad
mov
pop
xlat
and
adc
add
popa
lods
mov
mov
sub
call
fistpl
inc
mov
mov
sub
add
xlat
jl
ja
mov
inc
and
mov
add
repz
inc
adc
xchg
add
push
aad
mov
aam
xchg
mov
mov
jbe
sub
lret
out
dec
dec
or
movsl
dec
test
dec
jge
cmpsl
sbb
dec
push
jl
xchg
cwtl
leave
xor
stc
fwait
std
cmp
sub
cmp
adc
mov
adc
addl
dec
outsb
inc
add
mov
lcall
jne
mov
cmp
pushf
cltd
out
mov
cmp
in
push
lcall
ja
push
xchg
test
pop
cmp
sub
mov
mov
or
and
push
shll
cmp
pop
loopne
into
inc
sub
mov
daa
pop
pusha
push
inc
ljmp
std
xor
cmp
push
jne
insb
lods
out
inc
jno
sub
jecxz
xor
je
test
test
divl
in
mov
loop
jo
jb
dec
stos
test
sbb
inc
nop
ss
mov
repz
arpl
dec
scas
jecxz
das
dec
sbb
jno
lcall
pop
sub
xlat
mov
mov
inc
ds
push
das
in
in
jp
mov
xchg
test
incl
gs
jmp
mov
cmp
xor
xor
cmp
mov
sub
in
outsb
call
inc
mov
or
fs
sub
js
repnz
inc
jne
mov
sbbb
ljmp
add
or
cli
aam
jle
popa
aam
aaa
push
mov
inc
jle
icebp
xor
cli
dec
jl
jg
jns
leave
add
mov
push
add
inc
lock
sub
push
repnz
add
pop
in
insl
inc
dec
inc
andb
sub
insb
mov
rolb
or
ds
clc
jno
mov
ret
popa
int
push
lret
inc
and
cwtl
in
pop
sbb
jne
in
or
fidivl
mov
dec
rcrl
mov
mov
sub
das
test
xchg
rclb
es
pop
dec
jns
jnp
and
mov
inc
jge
flds
into
dec
movsl
fisubrl
push
fstpl
xchg
lcall
fdivl
lret
rcr
stc
stos
imul
lods
jp
mov
icebp
mov
push
push
sub
and
shrl
xchg
cmp
and
xor
pop
mov
xchg
addb
jnp
daa
mov
dec
shrl
mov
and
sub
cmp
cmp
push
sub
cmp
pushf
xor
cmp
shll
lahf
arpl
jae
scas
and
sbbl
inc
aaa
push
mov
ret
sbb
mov
cmp
dec
dec
test
ret
lahf
inc
dec
jbe
dec
repnz
cli
pop
inc
ret
and
jecxz
xchg
cmc
jae
dec
pop
cli
inc
xchg
jl
adc
lock
loope
test
and
nop
push
in
rcr
mov
dec
xor
mov
hlt
sub
fsubs
and
add
fdivrl
dec
jl
aaa
icebp
rorb
xchg
cmp
and
and
cmp
cmp
arpl
test
aas
leave
jne
or
push
subb
push
fdivs
jae
xor
fstps
add
xchg
xor
bnd
movsl
push
mov
cld
in
add
jnp
jp
shlb
pop
ss
adc
mov
add
jb
and
jmp
mov
lcall
loope
sub
push
pop
cli
bts
sbb
int
mov
cs
push
push
dec
xor
test
push
or
pop
fdivp
mov
xlat
mov
push
sub
ds
repz
adc
pop
and
mov
cmp
mov
mov
test
and
jb,pn
inc
adc
arpl
mov
movsb
lods
pusha
xor
test
loope
lcall
stos
movsb
push
pop
aas
imul
lock
lret
fwait
mov
sbb
les
loope
int
loope
mov
jle
jle
cltd
cmp
add
jg
push
mov
sub
ds
std
fldt
xchg
push
ficoms
mov
popf
mov
xchg
mov
insb
add
cmc
inc
jecxz
cmp
sub
mov
stc
loop
dec
das
push
fstpt
pop
adc
out
fisubs
cltd
insl
test
movsl
inc
add
cmp
xor
lahf
dec
jmp
aaa
icebp
pop
push
inc
out
xor
add
sarb
sahf
in
pop
movsb
out
out
hlt
lahf
or
cmpsb
cmpsl
dec
inc
in
and
in
lahf
sahf
aas
push
aad
imul
ljmp
aam
dec
pop
dec
push
into
fisubl
sub
mov
xchg
daa
mov
in
pop
test
int
mov
into
xchg
sbb
or
ret
xchg
je
paddusw
sahf
pushf
mov
mov
das
aas
mov
cld
jae
outsl
xchg
mov
sti
mov
and
jecxz
adc
pop
stos
mov
cmpsl
cmp
popl
mov
int3
int
or
pop
jg
cs
loope
data16
xchg
ds
repnz
sbb
sub
lds
sub
outsl
and
sbb
loope
xchg
in
jmp
jp
jmp
int3
ret
and
sub
xchg
xlat
int
xchg
jb
pop
inc
movsb
adcb
and
push
adc
pusha
loope
out
mov
dec
mov
mov
mov
rcrb
push
pop
cmp
ja
sub
sub
icebp
mov
push
push
lea
mov
mov
and
mov
jecxz
inc
adc
and
shll
popa
and
scas
lods
mulb
pop
repz
aam
cld
outsb
data16
movsb
push
cmp
ret
imul
inc
notb
pop
int3
adc
iret
dec
xor
fstpl
inc
add
mov
lret
inc
xchg
sbb
dec
cmc
aam
jmp
cmp
sbb
inc
scas
test
pop
sub
pop
mov
mov
shlb
gs
mov
lcall
das
push
xor
adc
stos
pop
data16
ds
ljmp
lods
leave
and
lret
in
mov
ret
addr16
pop
jle
push
pop
and
repnz
cmp
clc
xor
sbb
add
hlt
cmp
add
mov
repnz
addr16
outsb
gs
adc
enter
mov
jno
pop
mov
cmp
xchg
xchg
insb
mov
dec
mov
inc
xor
movsb
sbb
xchg
and
mov
dec
test
pop
in
mov
add
jmp
inc
pop
clc
add
adc
cltd
clc
pop
xor
pop
cs
iret
mov
mov
shrb
imul
adc
sub
add
mov
push
or
les
inc
js
iret
cmpsl
xorl
test
jp
adc
test
fistl
mov
dec
push
mov
hlt
jge
insb
mov
shl
shl
add
outsb
push
xchg
pushf
pop
in
ficomps
js
repnz
pop
jmp
call
iret
cmp
pop
cmpsl
xor
cmc
test
adc
icebp
fcom
popa
push
xlat
xor
call
test
test
shr
loopne
jb
sub
add
mov
xor
lds
aam
dec
or
jge
insl
lds
mov
sub
add
push
repnz
cmpb
enter
push
hlt
leave
in
nop
std
mov
or
or
mov
cli
sub
sub
sbb
andb
cmp
sbb
jle
pop
nop
popa
das
push
xchg
icebp
mov
push
inc
inc
xchg
sbb
repnz
cmp
lret
pop
push
sub
imul
inc
out
and
mov
pop
out
subl
and
mov
push
cmpsb
push
test
js
jnp
jo
fsubl
je
inc
test
sbb
and
std
cwtl
sub
shlb
jecxz
push
cmp
insl
scas
roll
lret
int3
inc
adc
xlat
les
adc
stos
pusha
dec
aas
mov
jg
daa
mov
ret
or
loope
nop
push
stc
sub
sti
or
xchg
ss
rorl
sub
cli
push
xlat
xor
fwait
adc
ljmp
imul
lret
mov
push
imul
inc
mov
pop
rclb
pop
pushf
je
ret
cmp
jne
jp
inc
inc
test
out
clc
mov
push
or
pop
cld
repnz
call
sub
mov
movsl
inc
add
cs
mov
out
jne
push
xchg
fldl
pop
xor
dec
outsb
mov
sarb
xchg
shrl
repnz
dec
inc
and
xor
ss
stc
fadd
add
lods
cwtl
pop
bound
jecxz
fistl
test
and
xor
loopne
jp
xchg
repnz
xor
or
rol
es
lds
and
and
jo
mov
enter
fsub
mov
mov
xor
mov
pusha
aam
data16
xchg
lods
dec
nop
fiaddl
and
mov
sub
sub
pop
add
push
cmp
pushf
and
scas
sub
adc
out
mov
xchg
imulb
outsb
call
push
icebp
and
sub
dec
sbb
aam
cltd
fisttpl
pop
push
test
pop
lock
icebp
xchg
nop
adc
cwtl
xchg
aam
xchg
repnz
push
cltd
outsb
adc
dec
es
lock
pushf
xchg
cmp
jb
mov
mov
mov
push
testl
test
cltd
add
call
xchg
arpl
sbbb
jecxz
push
mov
dec
fsub
and
cmpsl
jae
into
sbbl
mov
movsl
fisttpl
mov
shlb
pop
add
xor
and
out
repnz
cmp
sbb
sbb
je
mov
dec
xchg
mov
and
xor
dec
mov
add
fidivs
aas
pushf
pop
popa
stos
outsb
ja
cld
rclb
int
fs
mov
fldl
loope
push
lds
sbbl
es
negl
mov
aas
lods
aaa
movsl
movsl
frstor
out
subl
shrb
xor
popl
std
das
in
jae
push
repz
cmp
jle
ljmp
sub
sahf
cs
or
mov
popa
insb
cmpb
aas
jle
xchg
cmp
push
and
mov
lret
bound
jno
jge
mov
inc
cwtl
mov
inc
rorb
mov
lods
enter
cmp
lods
push
pusha
mov
stos
lret
pop
repnz
push
mov
rcr
jae
and
fs
ret
mov
jb
add
mov
dec
aaa
dec
mov
inc
out
iret
shlb
loop
jecxz
aam
repz
mov
mov
leave
stos
loope
jb
fcomip
adc
adcl
sbb
pop
inc
cmpsl
mov
inc
push
lahf
dec
hlt
jp
orb
and
inc
sbb
dec
inc
leave
pop
sahf
sub
adc
push
sarl
push
inc
jg
dec
mov
xchg
dec
cld
mov
lahf
add
mov
push
out
jecxz
lds
mov
into
insl
sbb
xchg
lret
mov
out
andl
mov
mov
inc
ds
jecxz
icebp
xchg
push
je
mov
cmp
pop
dec
ljmp
push
ds
and
testb
shrl
call
outsb
sbb
bound
stos
stos
das
ljmp
rcrl
mov
or
arpl
cltd
xchg
sbb
mov
out
mov
lock
in
rolb
xchg
jae
insl
inc
xchg
push
push
pop
loop
inc
idivl
je
inc
rcr
cmp
lods
ss
pop
or
and
mov
lods
xchg
mov
fcoms
xchg
loop
adc
and
int
push
xchg
add
pop
adc
jbe
jmp
mov
cmp
mov
mov
cmpsb
cmpsl
and
adc
insl
push
mov
orb
jmp
aas
dec
mov
or
cmpsb
fwait
cmp
inc
mov
or
aam
sbbb
stos
push
into
xchg
cmp
pop
pop
cli
pop
loop
adc
mov
aad
ret
rorb
fists
imul
push
shrl
rcl
sub
xor
push
int3
push
pop
push
mov
lahf
ret
loopew
mov
outsb
cvtps2pi
mov
loopw
andb
add
pop
jbe
lods
push
or
ret
hlt
lahf
mov
jb
aaa
fucomip
inc
rol
add
add
adc
jne
divb
adc
out
inc
inc
in
sahf
inc
loopne
idivl
jl
movsb
xchg
lods
sbb
outsb
stos
xchg
pop
adc
adc
sbb
js
jnp
push
fstps
aam
jg
inc
fimuls
imul
sub
shr
lcall
xchg
jp
or
push
ret
and
pushf
fisubl
pusha
repz
cltd
cmp
push
jae
call
ret
orb
mov
add
out
cltd
xorl
out
das
xor
imul
gs
icebp
addr16
mov
fs
xor
pop
cmp
cmp
add
or
inc
enter
xchg
sbb
cli
xlat
cli
cmp
les
sti
std
mov
ret
rcrb
mov
iret
mov
mov
shrl
pop
jb
jo
lods
call
cmp
pop
adc
cmp
pop
or
inc
int3
xlat
mov
insb
adc
imul
js
sub
inc
sbb
out
enter
inc
mov
mov
cmp
cmp
subl
outsl
into
imul
mov
cs
out
cltd
xor
shl
push
dec
pop
add
push
sbb
dec
jb
sbb
iret
jae
imul
pop
insb
cmpsb
arpl
sbb
mov
lds
xchg
sarb
popf
lds
test
sbb
cmp
or
push
and
adc
stc
cmpsl
nop
in
mov
in
and
cmp
adc
out
inc
pushf
sbb
and
mov
jns
fnstsw
dec
pop
jnp
push
daa
jmp
or
sbb
movsl
rcrb
jle
fwait
rcl
data16
sbb
adc
pop
xor
mov
aas
xchg
push
dec
mov
test
push
xor
cli
bnd
dec
aam
xor
inc
jl
jae
lea
cld
sti
push
in
mov
data16
mov
rcll
fnstsw
jo
loop
or
adc
mov
xchg
das
ljmp
adc
sahf
cmp
icebp
xor
test
mov
push
xorb
xchg
adc
jmp
jmp
ret
push
inc
icebp
pop
jne
push
lret
ljmp
clc
pop
dec
push
lods
lock
lea
fsubs
xchg
sub
je
mov
xor
xchg
add
pop
in
loop
mov
lods
adc
cld
add
hlt
sub
xor
and
mov
cld
cmpsb
mov
pop
sbb
insb
enter
data16
out
inc
dec
mov
in
int
repz
adc
mov
enter
push
mov
cmc
and
test
mov
jb
mov
and
cmp
mov
xchg
fisubrs
outsb
fcoms
rcll
popa
sub
push
mov
fmuls
fstps
jbe
xchg
loope
bnd
inc
add
shll
cmp
mov
arpl
pop
mov
test
mov
pop
std
adc
repz
test
in
xchg
sub
jge
in
jnp
orw
pop
mov
stos
fidivl
push
stos
dec
jb
lods
push
mov
scas
and
pop
xchg
xor
ss
xlat
dec
stos
cmp
mov
mov
hlt
adc
or
sbb
sbb
jnp
add
pop
test
ds
push
int
and
push
or
dec
fwait
inc
mov
inc
add
sti
and
pop
inc
popf
mov
or
hlt
mov
sub
inc
adc
pop
lret
mov
out
lcall
dec
aad
adc
mov
ds
and
shll
sub
jl
jo
fsubr
clc
mov
scas
outsl
insb
and
pop
int
add
push
lret
mov
stos
mov
out
xlat
lret
mov
subl
adcb
insb
cld
je
shl
in
out
lcall
cmp
repz
push
ret
ret
push
aam
jnp
testl
cmp
cmp
pusha
jae
mov
push
mov
rcrl
inc
test
mov
mov
sti
je
xchg
nop
stos
sti
pushf
push
in
and
adc
dec
inc
in
sbb
mov
sub
inc
push
mov
lods
pop
lret
pop
shrl
push
xchg
aaa
ja
fcoms
pop
push
cmp
jg
push
or
jge
push
add
push
add
pusha
bound
das
adc
pop
jno
push
int3
and
and
dec
mov
or
xchg
movsb
aam
xchg
xchg
and
mov
in
repz
inc
shll
test
pushf
cmp
and
mov
pushf
sbb
repz
jo
out
stc
aad
shl
scas
pop
xor
data16
sub
jl
lret
push
cmp
xor
out
jmp
das
inc
call
jne
jl
xor
xchg
stos
movl
fisttpl
pop
adc
sub
lods
pop
lret
cmc
jnp
jecxz
mov
xor
mov
mov
mov
cwtl
js
leave
and
sbb
adc
push
add
int3
and
xchg
jle
jp
cmc
xlat
cmp
sub
pop
inc
int3
int
nop
fxch
out
sub
xlat
in
and
div
cs
add
ja
mov
xor
lea
cld
cmp
jg
int3
lods
dec
or
cmpsl
iret
cmp
push
mov
js
cmp
or
ret
int
icebp
dec
lods
stc
in
cmp
sar
pop
imul
idivb
mov
into
xchg
xor
mov
xor
xchg
cwtl
scas
sub
pop
inc
cmp
aam
jmp
fstl
loopne
rcrl
sbb
cmp
xchg
cmpsl
jp
clc
and
add
sti
or
push
mov
mov
test
xchg
inc
test
dec
or
lods
fs
stc
mov
in
data16
dec
sbb
not
push
aad
jbe
add
loop
push
mov
ret
add
loop
insl
movntps
push
lds
and
int3
add
jp
pop
push
push
dec
fdivrs
sub
call
out
arpl
test
inc
sar
insb
sbb
xchg
call
and
inc
mov
std
pop
rolb
adc
out
cmp
std
je
je
nop
test
mov
sbb
push
pop
hlt
lods
sbb
inc
mov
cli
and
add
or
pop
cmpsl
cmp
push
test
loopne
lcall
fists
fbstp
aad
xchg
jo
adc
aaa
add
adc
adc
adc
stos
adc
add
add
lods
shl
inc
push
adc
rcr
sbb
shlb
and
divl
incb
sub
mov
paddsb
cwtl
stc
pop
mov
sub
xchg
insb
int3
jp
mov
push
pushf
daa
jo
dec
sti
cmp
xor
es
and
cmpsb
jae
arpl
dec
fwait
cld
jae
rorl
dec
cmp
mov
xor
or
pusha
sbb
jg
icebp
and
xchg
orl
imul
aaa
cs
je
pusha
adc
inc
or
imul
mov
rcrb
movsl
or
divb
fsubrl
add
je
jle
fwait
cmp
adc
jl
xor
inc
and
out
mov
xor
fnstcw
incb
test
sub
mov
loope
test
mov
push
adc
setne
mov
add
jo
add
xor
out
sub
bound
xchg
push
and
push
xor
je
xchg
xor
mov
js
out
or
adc
or
xchg
pop
into
addr16
or
fs
aaa
pop
orl
fldt
dec
mov
inc
xor
lea
call
jbe
fsts
icebp
loopne
hlt
js
sti
jb
inc
bound
sbbb
inc
inc
inc
outsb
fistps
or
pop
pushf
push
cmp
arpl
xchg
lea
testb
fs
xchg
in
sarb
add
mov
add
xchg
pop
jae
push
push
mov
lock
cmp
or
pop
sahf
lea
sub
xchg
sbb
mov
out
push
fs
in
mov
cmp
pop
lcall
or
cmp
cs
popa
mov
out
sbb
repnz
sbbb
xchg
xchg
dec
mov
push
imul
xchg
int
mov
das
call
mov
mov
pop
cmpsb
in
shll
dec
xor
add
sbb
and
leave
test
add
in
into
stos
outsb
or
xor
outsl
fistl
sbb
and
cld
mov
shr
stos
push
dec
adc
mov
lret
mov
outsb
xor
jno
and
shl
jmp
jl
subl
mov
push
and
lret
test
inc
loope
add
ds
xchg
sbb
or
cld
rcl
test
jge
jg
in
xchg
pop
pop
aas
ds
dec
cs
shll
lea
lods
mov
loopne
adc
push
jmp
add
aas
jl
lret
and
cltd
fstps
bound
pop
inc
mov
fdivl
mov
sbb
imul
rcrb
push
dec
lret
adc
mov
or
push
imul
dec
pop
inc
rsqrtps
lret
adc
movsb
je
cmp
or
neg
popl
jno
gs
push
inc
jp
in
sahf
vfrczpd
mov
lds
push
cmp
pop
inc
or
testl
push
adc
add
les
xchg
subb
push
add
push
rcr
pop
addr16
or
mov
leave
jp
add
sub
cmp
loopne
sbb
ja
and
mov
jo
push
adc
pop
sub
jecxz
mov
enter
ss
jle
je
sub
addr16
subl
mov
or
orb
mov
add
leave
bts
ljmp
jne
cmpsb
jo
dec
outsl
iret
mov
pop
gs
fcompl
add
roll
push
push
stos
and
pop
fldl
sar
std
stc
push
mov
mov
ret
or
repnz
push
cld
pop
mov
mov
push
pusha
popl
and
scas
callw
mov
sub
mov
fidivs
jns
pop
cmpsl
inc
mov
in
and
mov
adc
repnz
aam
out
or
or
sarl
sbb
xchg
add
xlat
divb
sub
loope
popa
out
pushf
faddp
add
das
xor
aas
cmpsb
icebp
movsl
ret
sbb
hlt
and
add
in
out
mov
or
mov
cmp
pop
sbb
push
outsl
sub
ljmp
lea
negb
jae
imul
pushf
insl
fnsave
out
ret
enter
jb
mov
mov
sahf
aam
cmp
out
jp
int
mov
mov
sbb
fdivrp
xor
ret
mov
lret
outsb
push
popfw
clc
ljmp
call
mov
loopne
daa
mov
loope
jle
and
shll
in
in
inc
shll
outsb
sub
add
mov
cltd
aaa
andl
cli
push
add
pop
cli
add
mov
jge
mov
test
es
mov
push
push
sub
mov
in
adc
cmp
jnp
xchg
pop
loop
stos
inc
mov
aas
adc
icebp
push
pushf
cltd
enter
jmp
ja
test
jle
add
push
dec
jge
inc
jbe
mov
mov
adc
mov
mov
into
mov
cmp
je
rcrl
add
fwait
mov
jb
mov
movsl
mov
sti
int3
adc
and
sarl
mov
cltd
pop
add
adc
sbb
or
jne
leave
cli
outsl
mov
dec
cmp
enter
xor
pop
jl
sbb
adc
rorb
sbb
push
loop
imul
jbe,pt
iret
cmpsb
fs
cmp
pop
sub
xor
jno
lock
pop
mov
hlt
outsb
xor
push
enter
add
inc
inc
sbb
repz
sti
nop
mov
in
mull
ret
out
or
in
in
cs
push
push
fisttpl
xor
sbb
xor
or
mov
mov
and
ret
fbld
push
cwtl
rcr
cmpsb
js
icebp
imul
outsb
sbb
adc
dec
roll
ds
sub
arpl
mov
xchg
scas
jno
jns
rorb
dec
jmp
cmp
lds
test
cld
sbb
jge
inc
cli
adc
negb
and
jno
dec
daa
rorl
mov
mov
sti
cmp
insb
icebp
push
pop
repnz
pop
test
fs
add
mov
call
inc
xlat
mov
cmp
cltd
outsb
test
xor
out
and
js
ds
add
pop
cmp
out
shrb
scas
movsb
lods
pushf
mov
jg
or
dec
mov
sti
shll
stc
nop
aad
sarl
sub
mov
push
and
add
pop
sub
repz
mov
repz
std
adc
xor
inc
adc
in
add
pop
leave
add
mov
cmp
loopne
jecxz
xor
bound
enter
pushf
ljmp
popa
cmp
out
cmp
mov
lcall
repz
mov
popa
cltd
push
sbb
add
fs
in
mov
test
mov
or
fcomip
xor
and
push
push
nop
xor
out
xchg
xchg
or
call
popf
into
xchg
inc
mov
cli
pop
lds
cmp
cmp
in
out
lahf
pop
pop
popl
mov
adc
jb
dec
push
push
pop
sub
xchg
iret
into
sub
into
sbb
scas
lea
fidivl
jl
cli
push
test
push
lods
test
adc
loopne
cltd
shl
test
inc
test
and
xchg
push
dec
pop
fistps
arpl
jle
dec
cs
jmp
mov
test
xor
inc
fisubrl
outsl
stc
add
fadds
clc
adc
pop
pop
loope
dec
pop
xor
inc
sub
das
xchg
sub
jnp
out
jge
add
mov
sahf
or
push
ret
mov
lret
xor
sbb
imul
test
or
dec
add
cmpsl
mov
in
mov
lret
and
fs
pop
add
sti
nop
xchg
mov
pop
push
lds
cmpsb
ljmp
out
mov
in
and
push
outsb
test
jne
pop
es
adc
push
loope
adcb
cmc
mov
xchg
cmp
ja
sub
cld
repz
mov
fimuls
enter
repnz
xorb
into
outsl
jp
stc
mov
and
fwait
push
pop
in
pop
add
lea
mov
pop
xor
fdiv
jmp
jae
gs
mov
gs
pushf
sarl
out
icebp
stos
jnp
test
iret
shrd
adc
mov
idivl
popf
sub
mov
fldenv
pop
jmp
mov
cltd
int3
or
lahf
bound
lret
dec
dec
pusha
fs
or
int
daa
ljmp
rolb
decl
in
push
mov
adc
inc
lods
pop
sub
jb
loope
aas
scas
out
icebp
cmp
mov
lahf
cs
mov
adc
jp
aaa
sub
adc
mov
mov
scas
dec
insl
sub
cmp
xor
clc
dec
mov
test
cmp
outsl
pop
xchg
mov
sbb
clc
mov
cwtl
sbb
lahf
cmp
push
pusha
js
pop
pop
scas
lock
mov
sub
adc
adc
adc
shll
mov
adc
int3
mov
movb
sahf
dec
sub
roll
xlat
or
sahf
xor
call
aam
movsl
mov
xor
daa
sar
xor
movsl
lcall
stos
jecxz
sbb
repnz
insl
fdivs
mov
out
push
and
mov
pop
test
lods
jnp
or
jecxz
in
imul
fcmovne
jmp
fucom
and
iret
js
dec
xor
dec
jmp
mov
mov
xchg
adc
jge
mov
out
pop
stos
out
adc
insb
cltd
inc
add
and
xchg
or
xlat
jecxz
xchg
dec
adc
lds
ljmp
dec
lret
xor
shrb
outsb
xchg
fdivs
pop
addr16
sub
ret
push
mov
popa
fisttps
sbb
add
addr16
mov
cwtl
pop
and
jbe
outsl
dec
js
stos
testl
fwait
pop
lret
jle
sub
xchg
mov
inc
add
nop
scas
jne
pop
repnz
stc
enter
pop
mov
cmc
dec
addr16
sbb
adc
je
mulb
push
push
fbstp
jmp
and
orb
mov
test
sbb
xchg
sbb
pop
mov
inc
outsb
loop
in
out
bound
addr16
add
pop
popa
sub
xchg
pop
insb
addl
mov
nop
frstor
xor
jno
int
aam
inc
rcl
xor
pop
cs
ret
mov
push
xor
cld
cmp
cmp
testl
jge
jae
cmp
inc
pop
ds
push
add
inc
xchg
cmpsl
rolb
rclb
push
lcall
lahf
inc
dec
push
nop
xchg
in
cmp
roll
popl
ds
cmp
inc
jge
ss
clc
or
xlat
imul
jno
fs
stos
and
dec
scas
arpl
jg
pop
cwtl
jb
or
xor
jno
clc
fcmovnu
sub
pop
stc
out
sbb
sbb
jmp
xlat
mov
sub
xchg
out
leave
sarl
push
iretw
sub
jge
movsl
sbb
jl
stos
xor
pop
scas
pop
pushf
cmp
cmpsb
fldenv
ds
shll
stc
ds
adc
test
nop
jmp
fsubp
xchg
jl
jns
sahf
xorb
fsubp
pop
push
mov
repz
fistl
lods
inc
sub
imul
jecxz
test
popa
insb
jmp
or
fisubs
push
mov
test
xor
aad
jge
adc
mov
enter
inc
stc
enter
mov
std
shll
hlt
mov
fs
jnp
dec
jno
hlt
outsb
dec
in
aam
mov
push
fisttpl
dec
mov
jnp
mov
cmpsl
bound
loope
push
rcrl
and
shr
pop
fs
or
aad
mov
out
icebp
push
or
sbb
push
mov
mov
ja
mov
test
mov
mov
test
lahf
pop
outsl
jecxz
pop
mov
inc
cwtl
jns
clc
movsl
movsl
loopne
cmpsb
rorl
xor
and
mov
fwait
mov
pop
roll
imul
adc
jle
in
xchg
arpl
faddl
dec
hlt
cmpl
lahf
xchg
cwtl
outsw
arpl
ja
push
cmp
in
cwtl
scas
loopne
xor
movsb
enter
ja
or
cmp
dec
aad
or
sar
in
test
pop
into
sub
cmp
pushl
pop
sub
shrb
dec
pop
xor
inc
inc
cmc
dec
pop
out
das
cld
fcoml
jns
pushf
shr
popf
sub
test
inc
out
add
and
hlt
das
pop
mov
cmp
cwtl
push
sbb
daa
and
stc
cmpsb
gs
test
loopne
test
jge
inc
push
gs
or
cmp
incb
mov
cmp
sbb
shr
pop
test
cmp
shll
or
setb
cmpsl
in
in
xchg
adc
mov
shr
cmp
mov
inc
aaa
arpl
mov
or
add
addl
pop
jnp
pop
pop
icebp
stos
repnz
call
cmpsb
into
dec
lock
or
adc
enter
cmp
inc
dec
xchg
stos
lret
sarb
inc
jo
pop
movsl
jnp
fcmove
jae
mov
out
adc
outsb
xchg
in
imul
push
xchg
cmp
and
jne
ret
insl
mov
or
les
fwait
pop
js
aas
gs
sub
lret
out
jg
mov
sti
dec
std
add
loope
dec
shll
and
mov
inc
test
into
cltd
or
int3
dec
das
movsl
ja
nop
nop
cs
cmpsl
das
push
inc
jno
ja
bound
and
adcb
push
or
movsl
mov
cmp
in
fmulp
sti
enter
cwtl
push
cmp
movl
pop
push
xchg
push
dec
cmpsl
fistps
lcall
jno
add
sub
push
cmp
dec
daa
mov
cld
imul
test
divb
in
xor
xchg
aam
jno
movsb
pop
popf
enter
lret
mov
aam
jbe
jge
frndint
inc
cwtl
dec
pop
jb
jge
sarb
mov
mov
adc
int3
test
stos
lods
jle
dec
dec
fidivs
sub
xor
inc
popa
mov
ret
and
cmp
mov
outsl
popaw
xchg
mov
cmp
pushf
lods
stc
inc
cli
mov
mov
mov
push
xorb
roll
ja
inc
imul
mov
push
sbbl
shl
mov
jp
fwait
orb
fstps
sub
pop
cmc
jae
jle
xor
fwait
sub
mov
dec
pop
test
mov
jecxz
mov
add
adc
flds
pop
and
mov
ja
cmp
lock
cwtl
mov
repz
and
cltd
sbb
imul
cmp
push
lret
pusha
imul
push
sti
sarl
ss
inc
cmpsb
outsl
jae
mov
xchg
xor
shlb
aaa
push
stos
outsl
mov
adc
insb
cmpb
mov
fisubrl
imul
stos
cmp
insb
pop
and
push
jle
daa
arpl
jge
repnz
sahf
xorb
cmp
sub
mov
pop
data16
mov
xchg
sub
pop
insb
pop
mov
push
in
inc
jge
vrcpss
mov
cli
fptan
mov
mov
fisubl
dec
sub
cli
arpl
ja
pop
and
cmova
push
arpl
xchg
jg
imul
push
les
jge
test
add
cs
insl
or
pop
pop
sub
dec
pushf
ret
loopne
fistps
outsb
repz
or
call
and
scas
jo
negb
add
mov
pop
xchg
push
stos
or
sub
test
jp
nop
test
iret
inc
out
xrelease
outsl
sub
mov
jae
mov
mov
or
mov
es
mov
pop
mov
mov
negl
inc
ficoml
arpl
divl
in
insl
cmp
jl
mov
jg
sub
cli
inc
cmp
push
js
lds
jne
lods
or
out
xor
and
lods
lock
into
testl
jge
dec
int3
sbb
insb
lret
push
stos
stos
pop
mov
cld
pop
add
les
dec
rcll
ljmp
sbb
adc
mov
or
mov
aad
cld
xchg
sub
mov
dec
in
mov
push
out
xchg
lods
pusha
mov
sub
shrl
mov
and
sbb
jnp
xchg
mov
push
fsubs
xchg
aam
xchg
ret
test
cmpsb
ss
cmpsb
mov
xor
lds
cmp
adc
test
sub
jecxz
clc
lds
cmc
movsb
jp
xlat
sub
jecxz
popf
or
mov
shr
inc
dec
xchg
mov
pop
xchg
inc
icebp
stos
fisubrs
pop
inc
fisubl
pushf
ror
mov
cmpl
fldenv
jle
stc
adc
push
sub
ret
cmpsb
sbb
in
mov
cmpsl
cmp
jns
int
pop
lock
ret
dec
adc
jg
sarb
adc
rcrb
dec
test
ret
adc
adc
movsb
jb
test
outsb
mov
test
jae
in
sbb
push
pusha
lcall
cltd
adcb
xchg
sbb
int3
mov
jnp
pushf
ret
jecxz
pop
xor
pop
fisubrl
out
mov
pop
nop
or
dec
arpl
dec
adc
inc
subl
lret
sbb
mov
adc
sbb
or
pop
sub
lret
mov
insb
jmp
les
push
inc
dec
push
xchg
scas
xchg
mov
push
pusha
fcoms
jle
imul
ret
dec
aas
push
scas
jns
mov
lods
fprem
sbb
fdivrs
dec
mov
xor
cli
inc
fildll
aam
pushf
int
in
mov
dec
dec
cmp
shlb
add
pusha
mov
pop
jge
pop
insb
push
scas
push
jmp
icebp
xor
inc
xor
adc
cmp
pop
mov
int
or
popf
idivl
mov
loopne
adc
divl
int3
sub
dec
or
pop
pop
inc
test
pushf
ljmp
mov
or
pop
fs
xor
jbe
clc
loope
fimull
idivl
popf
jne
insl
test
add
stc
out
mov
mov
stc
push
ss
repz
mov
test
jmp
mov
cmp
adc
jl
xchg
dec
stos
shll
pushf
jo
movl
jmp
add
imul
clc
arpl
inc
inc
aaa
in
xor
push
pop
push
das
xor
and
shrl
sub
xor
int3
or
adc
adc
cmp
mov
outsb
and
push
out
lock
or
xchg
pop
daa
loop
aaa
insb
and
test
and
or
scas
push
jns
pop
push
bound
cmp
lods
push
cs
adc
mov
xchg
and
xlat
stos
mov
test
dec
cmp
cmp
xchg
add
enter
gs
pop
stc
out
dec
iret
imul
imul
and
and
pop
loop
add
xchg
jmp
inc
push
insl
add
test
push
fistl
mov
fnstsw
pop
mov
xchg
inc
hlt
dec
xchg
sub
mov
sub
sbb
cmpsl
iret
mov
fs
js
nop
rorb
mov
jnp
jns
and
push
jl
jae
out
and
push
lods
lcall
inc
sarl
sub
xor
pop
hlt
push
movntps
push
xor
jle
mov
pop
sbb
jge
loopne
mov
jb
sbb
decb
les
fdivs
sub
cmp
scas
jnp
push
out
dec
xor
imul
and
or
add
jg
in
rolb
out
inc
test
cmovbe
rclb
mov
mov
test
mul
sub
loop
push
bound
push
call
cmc
clc
dec
mov
mov
cmc
push
inc
sti
pop
mov
xchg
xor
xchg
mov
cmp
divb
aaa
faddl
pusha
js
xor
xchg
out
out
in
mov
fstl
nop
add
iret
orb
inc
push
aas
dec
lods
cmpb
mov
xchg
adc
leave
mov
add
xchg
lahf
dec
sti
jmp
nop
mov
lods
xchg
sbb
push
repz
push
incb
pop
addl
popa
jmp
mov
lcall
push
test
ljmp
imul
jae
pushf
adc
clc
xchg
mov
xchg
rcr
mov
mov
aam
daa
xor
sbb
pop
mov
xchg
sbb
pusha
jns
sbb
xchg
mov
fistpl
xorl
int
call
enter
mov
gs
pusha
sub
fsubs
test
idiv
js
js
cli
mov
sub
clc
xor
mov
push
and
jb
lret
cmpsl
xchg
loopne
xor
ret
mov
pop
test
jge
test
add
mov
xlat
xchg
aaa
jae
enter
iret
mov
jae
sub
mov
loope
mov
and
out
aam
repz
xor
sub
gs
jg
aad
test
sbb
aas
into
adc
push
adc
stc
adc
cmp
fisttps
sbb
jg
fs
aaa
stos
add
clc
fidivl
or
cs
jmp
test
loope
nop
fildll
jne
inc
addr16
fisttps
into
or
jle
xchg
lods
pop
and
jae
out
repnz
mov
mov
nop
push
cmp
pop
rolb
and
lods
push
push
mov
mov
mov
sub
xchg
pop
push
fildl
or
ror
mov
pop
cmpsl
fistpl
ja
nop
mov
jge
jl
xchg
pop
popa
jbe
pop
jp
adc
adc
xchg
push
jns
ljmp
in
add
add
loopne
in
cs
negb
xor
jns
imul
xchg
pop
mov
adc
mov
mov
push
pop
sub
push
jle
fsubrs
pop
test
mov
pusha
and
std
pop
xchg
jnp
sub
adcb
push
in
pop
ret
pop
aam
cli
in
ss
clc
xlat
mov
leave
leave
mov
adc
mov
or
adc
leave
cs
insl
outsb
das
scas
push
ret
int3
popa
cli
push
xlat
xchg
adcl
jge
jno
lcall
and
lahf
flds
add
mov
add
testb
xchg
add
jno
subl
ja
cli
sbb
rcll
push
fwait
in
clc
sub
aam
sbb
fcmovnu
into
fmull
insl
fmuls
repz
mov
inc
scas
outsb
addr16
add
int3
cmc
adc
cld
test
ljmp
mov
mov
aas
mov
sub
xor
mov
iret
or
add
in
xchg
pop
push
stc
js
sub
rolb
jne,pt
push
xor
push
pusha
loope
pusha
xchg
dec
js
pop
fisttps
mov
mov
pushf
lea
pop
inc
in
cmc
lret
sbb
decl
mov
ljmp
mov
xlat
pop
and
or
ret
sub
mov
sbb
jae
dec
mov
push
push
aad
and
inc
stc
int3
push
mov
jae
je
and
add
fwait
push
hlt
gs
je
pop
jl
pushf
ret
fbld
lods
sub
ds
sbb
xchg
mov
and
push
push
inc
fs
cwtl
add
popa
mov
lahf
mov
xlat
loope
test
adc
mov
outsb
ret
xor
out
and
pusha
in
incl
frstor
pop
fmull
stc
mov
push
mov
mov
and
shr
inc
pusha
lock
jmp
daa
mov
je
loop
push
out
mov
lods
fistl
aad
int
fdivl
int
push
mov
cmp
or
std
xchg
sub
cmp
shrb
aas
mov
pop
jp
jns
cmc
jmp
pushl
dec
xor
roll
int3
lods
or
fiadds
mov
or
cwtl
or
fmull
cwtl
push
add
std
inc
sbb
mov
push
dec
jnp
push
fildll
icebp
lret
inc
mov
adc
jnp
xor
adc
mov
fidivl
aaa
lahf
jle
xchg
nop
jge
xchg
imul
lcall
dec
adc
jmp
cmp
pop
xchg
or
je
fs
add
sub
js
pop
sbb
jae
jb
lds
in
cld
or
stc
adcb
fdivrl
pop
add
bnd
loope
add
inc
mov
loopne
and
ja
add
push
xor
imul
out
pop
scas
js
inc
ds
and
push
dec
bound
adc
cmp
call
shll
cvtpi2ps
clc
add
mov
into
in
inc
mov
add
xchg
gs
cli
add
sub
sbb
dec
loop
xchg
mov
push
ret
dec
jnp
add
sbb
xchg
call
jg
dec
inc
lret
xchg
loope
or
push
xlat
loope
sbb
cmp
fiaddl
xorb
cmp
outsb
push
stos
dec
jo
cwtl
leave
enter
ror
pop
add
mov
leave
in
inc
stc
mov
adc
imul
pusha
cmpb
out
jmp
mov
popf
jp
in
iret
jl
rcrl
xor
mov
pop
jb
xor
mov
mov
repz
push
sahf
ljmp
sarl
in
dec
cmp
add
jecxz
pop
ja
mov
es
mov
out
mov
push
and
nop
xchg
xor
xchg
cmc
jnp
lock
xchg
pop
lea
mov
incb
cmp
pop
xlat
dec
loope
pop
aaa
jl
aam
mov
ret
in
sub
sbb
mov
cmpsl
mov
jecxz
sbb
out
jl
xlat
adc
jle
insb
cmp
lret
mov
push
mov
lcall
into
inc
pop
lret
int
mov
out
ret
jae
and
call
cli
std
jae
nop
and
cmpsl
pop
lret
fs
adc
clc
mov
cs
dec
stc
pop
cmpsl
cmp
mov
ss
inc
addr16
add
mov
xor
cld
popa
sbb
sbb
mov
inc
cld
push
mov
push
lret
cmp
out
mov
or
ret
dec
mov
mov
scas
arpl
aam
enter
adc
das
xor
jb
add
ljmp
xlat
shrb
cmp
adc
pop
and
dec
push
gs
jno
rcrl
xchg
imul
in
dec
xor
aas
mov
lods
stos
in
pop
xor
lds
xchg
and
shlb
fcmovnu
or
xchg
or
int
stc
rcll
inc
jmp
cmc
arpl
inc
mov
sub
fwait
jmp
stos
aad
sub
mov
stos
jo
jge
pop
leave
mov
daa
fisttpl
push
test
mov
push
inc
push
loopne
fs
sub
inc
xchg
cs
rcll
dec
lahf
mov
aad
add
ds
xchg
adc
xchg
pop
lret
inc
inc
jecxz
ret
popf
lcall
xor
scas
jl
ret
loope
mov
or
ficomps
out
sbb
bound
sub
jle
rep
jo
mov
sbb
push
out
mov
sub
imul
fs
xchg
mov
mov
sbb
sbb
mov
ret
and
push
pop
arpl
pop
pop
hlt
mov
push
cli
adc
and
fwait
inc
cmp
jmp
test
sbb
adc
lret
adc
test
cmp
add
adc
push
outsl
sub
adc
push
aad
and
adc
jb
xlat
cltd
jb
jae
test
jb
push
ljmp
bound
popf
jnp
inc
mov
jl
inc
ja
adc
or
cmc
and
cmp
insb
outsb
jae
jmp
mov
shll
icebp
pop
xor
mov
or
sbb
aas
dec
push
sub
loop
adc
mov
fs
dec
shlb
adc
nop
cmp
pop
incl
pop
shll
cwtl
neg
inc
inc
jg
das
cltd
pop
push
pop
jle
imul
lret
daa
ljmp
out
sbb
insb
xchg
in
aad
and
and
shlb
adc
jge
pusha
mov
mull
push
popf
cmp
lods
cwtl
fs
mov
je
xchg
aad
mov
fistps
pop
int3
pop
enter
enter
andb
shrl
add
mov
and
dec
jne
dec
push
rcrl
cmp
fistpl
dec
xchg
and
mov
xchg
pop
sub
add
arpl
insb
lock
mov
cmpsl
xchg
ja
addr16
loop
mov
mov
jo
mov
or
mov
sbb
shrb
pop
lcall
sbb
sub
cli
jg
sbb
jle
loopne
popa
aaa
inc
pop
loop
shlb
sbb
mov
xor
dec
test
add
hlt
sbb
fists
and
mov
in
xchg
movsl
dec
xchg
std
inc
adc
mov
lds
sub
push
andl
jbe
into
outsl
cwtl
ror
test
ret
adc
xchg
daa
jne
cwtl
push
les
add
mov
jle
cwtl
cmpsb
cmp
add
jge
sub
jecxz
js
inc
mov
push
lret
lret
in
and
dec
pop
scas
xor
cld
shl
mov
xchg
loop
test
test
cmp
push
xor
in
and
es
out
xor
test
loop
call
add
sbb
jmp
inc
daa
test
stos
fcomps
add
mov
sub
fldenv
imul
adc
push
cmp
pop
dec
popf
sub
sub
push
js
sbb
cmpsb
or
jecxz,pn
jnp
rclb
mov
gs
mov
jns
push
lea
xchg
scas
pushf
sarl
or
imul
jb
iret
icebp
sub
xor
in
jnp
cmp
mov
sti
cmp
pop
add
mov
lds
add
sbb
imul
dec
repnz
adc
or
cs
dec
or
std
std
sbb
mov
cmp
add
ja
mov
mov
jae
rolb
clc
lods
add
add
pop
pop
adc
sbb
xorb
ret
adc
xlat
cmpl
fwait
push
inc
test
and
repz
in
in
nop
push
jecxz
ds
dec
cmp
jbe
mov
xchg
mov
xlat
insl
push
pop
mov
xor
cltd
push
push
addb
movsb
mov
jo
push
push
int
pop
xchg
sahf
mov
mov
dec
lock
mov
cld
flds
scas
add
xchg
inc
pushf
and
cmp
mov
jmp
roll
dec
popa
cltd
int3
mov
cmp
inc
mov
push
pop
cmp
lds
inc
cmp
scas
or
push
cs
dec
push
sub
inc
dec
pop
and
mov
push
xor
jl
test
test
call
and
mov
pop
andb
push
repnz
xchg
addb
push
test
pop
into
jecxz
xor
test
pop
sahf
pusha
pop
testl
or
jnp
mov
cmpsl
aad
and
in
fdivr
ret
xchg
ds
jne
aas
xor
inc
and
pop
les
jp
xchg
call
sub
cmpsl
pushl
dec
mov
outsl
xchg
fsubrs
sub
daa
subl
xchg
inc
push
push
insb
xchg
inc
outsb
xchg
cmp
cli
push
jnp
lock
pop
das
jne
xor
cmpsl
hlt
rcrl
cmpsb
aam
cld
mov
mov
xchg
shlb
push
pop
mov
xor
out
arpl
sub
fisubs
cltd
xchg
mov
daa
inc
out
sbb
add
xor
daa
push
dec
push
or
sub
call
shll
pop
daa
stc
outsb
adc
mov
cwtl
mov
push
cmp
outsb
stc
ljmp
cmp
inc
mov
sbb
dec
ror
out
cmpsl
sub
dec
fsts
cltd
mov
push
push
stc
mov
sub
push
int
push
into
inc
push
push
notb
aaa
xor
je
xor
in
adc
mov
test
nop
mov
fadds
inc
fidivrl
and
sahf
cmc
push
xor
sbb
cmp
mov
andl
cmpsb
pop
dec
jg
add
sarl
lea
imul
push
sbb
scas
sub
out
getsec
inc
sub
sub
lret
dec
mov
loope
call
inc
add
leave
push
inc
jg
xor
adc
je
ss
inc
das
pop
orb
cld
lock
neg
mov
ds
lea
jb
cmc
mov
xchg
sub
addr16
push
xchg
int3
ds
imul
repnz
mov
pop
dec
repnz
sbb
imul
ret
cmpl
in
sbb
sbb
lcall
rcrb
cmp
dec
addr16
mov
mov
pop
pop
dec
mov
and
sbb
inc
aaa
add
cwtl
jecxz
jecxz
scas
push
imul
xchg
push
xor
mulb
lahf
adc
or
outsb
xor
je
sub
ret
pop
fsubl
mov
or
sub
lock
sbb
push
insb
dec
push
mov
xchg
xchg
fstps
push
rclb
or
pop
jmp
ds
pushf
pop
and
adc
cs
pop
and
xchg
sub
or
cwtl
jne
add
and
adc
mov
je
insl
rolb
jmp
cld
rorl
arpl
lods
out
and
ss
nop
stos
pop
cli
pop
sbb
sub
out
mov
add
ret
andl
push
int
je
dec
sbb
dec
insl
out
fistpl
cmpl
cmp
imul
xor
push
xor
js
sub
fdivs
in
pop
mov
js
cmpsb
cmp
sub
js
push
hlt
inc
xor
popa
sub
dec
pop
daa
adc
xchg
xor
in
inc
enter
sub
lods
inc
test
sbb
sub
mov
xor
jae
out
jo
xchg
and
pusha
add
push
ss
sbb
lock
data16
inc
pop
mov
cltd
je
sti
and
dec
pop
sub
xchg
xchg
rolb
inc
ret
es
sarl
pop
sub
je
jp
inc
pusha
inc
sub
mov
inc
inc
jl
jnp
int3
adc
xor
in
pop
test
aam
jno
sub
sub
ljmp
insl
insb
mov
mov
je
int3
icebp
xchg
sub
shll
adc
ja
shll
jge
push
aas
dec
jecxz
pop
lods
mov
aaa
insb
inc
or
ljmp
xchg
or
jg
push
adc
aas
vsubss
aas
mov
jnp
mov
jmp
cmovs
push
cmp
cli
sbb
setns
ljmp
ret
imul
daa
or
sarb
sbb
sarl
hlt
pop
mov
int3
mov
loop
mov
sbb
rclb
dec
jp
and
xor
pop
xor
cli
cwtl
xchg
sbb
jecxz
mov
aas
rolb
mov
push
adc
inc
push
push
push
pushf
push
add
jae
jp
lea
jmp
fstl
mov
fsubs
inc
and
and
ds
mov
cltd
shrl
int3
cmp
jmp
xor
inc
loope
and
call
sbb
sbb
pop
imul
sbb
sarl
outsl
fisubrl
icebp
cmp
scas
push
pop
test
inc
mov
or
mov
xor
cmp
sbb
les
push
jmp
rcrl
or
add
add
or
lcall
fidivl
jae
adc
imul
aas
inc
aaa
fdivr
cmovo
inc
das
xchg
daa
ja
sub
cmp
into
outsb
mov
ds
sub
repz
mov
fstl
push
and
clc
ljmp
or
sub
out
negl
loope
insb
sbb
cmp
subl
ret
xchg
jg
push
sti
mov
jne
in
lds
adc
xchg
aaa
inc
mov
iret
push
in
adc
imul
sbb
inc
jns
cld
jne
push
or
stc
pop
mov
add
fdivrs
mov
shr
mov
mov
pop
pop
lcall
pop
in
mov
dec
leave
or
es
jnp
inc
adc
add
xorl
hlt
mov
shrl
cmpsb
out
xor
mov
imul
lret
movsb
das
mov
lods
push
mov
jge
push
mov
sub
dec
sub
xchg
lahf
xchg
xlat
push
jbe
add
out
mov
ret
iret
push
in
push
sub
sub
push
loop
cltd
fmuls
into
js
push
xchg
xchg
mov
insb
repnz
cmp
clc
hlt
lret
push
ja
gs
stos
cltd
and
loope
popa
jbe
jnp
cwtl
sub
mov
push
adc
cld
insl
sub
push
test
mov
xchg
mov
imul
shl
pop
or
mov
ret
sub
jle
orb
ret
gs
pop
aaa
out
int3
cmc
xor
loop
stos
cltd
push
pop
mov
or
scas
mov
pushf
dec
dec
rcl
jne
in
scas
rcll
jns
cmp
add
aaa
hlt
and
lds
ja
in
dec
xchg
icebp
dec
inc
addb
pop
xor
cmc
shlb
jnp
inc
sbb
hlt
pop
shlb
sbb
repz
xor
xchg
std
and
mov
or
leave
sahf
mov
xchg
in
iret
inc
outsb
subl
rcl
dec
loope
mov
icebp
jge
xor
js
push
push
lret
sub
cli
jle
sub
std
push
mov
mov
adc
ss
insl
test
mov
xor
add
into
push
dec
into
lods
sbb
out
and
mov
and
rcrl
cmp
fldl
or
pushf
test
sti
aad
jo
xor
frstor
sub
aad
mov
pop
jle
add
shl
adc
inc
push
inc
aam
repz
inc
or
xchg
xchg
cmpsb
es
jb
jmp
cmp
inc
xchg
sub
ss
test
jle
daa
sbb
jg
insb
inc
popf
adc
xorb
dec
sahf
rcrb
xor
subl
xchg
mov
mov
shl
xor
cmc
and
ret
stos
mov
push
mov
inc
in
push
cmpsb
das
fs
decb
jb
lods
push
or
in
loop
mov
ret
jbe
jno
adc
xchg
xchg
and
xchg
cmp
mov
aad
ljmp
mov
sbb
mov
xchg
or
andb
bound
jns
jp
imul
aam
push
lret
jmp
sbb
andb
sbb
out
xchg
push
inc
mov
xor
adc
pop
xchg
mov
xchg
cli
js
std
adc
aam
scas
leave
roll
scas
xchg
clc
sub
rolb
arpl
jle
adc
or
inc
stos
int3
test
out
dec
xchg
cmp
mov
pop
rorl
xchg
enter
aad
movsl
rcl
jbe
popf
cli
cmpsl
jmp
ja
xor
or
mov
std
mov
mov
add
add
rolb
lock
mov
jmp
push
push
pop
aas
cld
and
sbb
cltd
sub
repnz
clc
cmc
mov
bound
lods
cmp
mov
jecxz
lret
push
cld
mov
mov
add
push
popa
fldt
scas
jb
test
mov
loop
mov
out
iret
movsb
es
arpl
xchg
push
stc
xor
or
or
cmp
mov
xor
or
push
aaa
int
push
orb
lods
sarl
jo
gs
into
push
data16
stc
fbld
dec
adc
or
scas
loopne
and
repnz
out
aas
cmpsb
mov
push
repz
insb
out
adc
sbb
mov
gs
pushf
dec
sub
xchg
fwait
cmp
xchg
push
push
cwtl
rcrb
insl
jbe
dec
jb
cwtl
fimull
jb
cmp
jg
pop
call
cmp
mov
cmp
cmp
xchg
test
ljmp
inc
mov
add
xchg
xor
subb
xchg
and
ret
cmp
mov
jo
xor
lahf
xchg
cmp
test
xor
mov
rcrb
pop
xchg
cmpsl
lods
pop
push
pusha
push
mov
nop
movsb
push
fdivrl
cmp
sub
mov
push
push
pop
scas
mov
dec
fistpl
frndint
pusha
adc
inc
inc
push
lahf
adc
push
popa
outsl
or
shrl
jp
add
xor
mov
out
call
xor
cmp
rcrb
jge
jbe
inc
mov
xchg
cmp
imul
in
outsb
inc
xor
icebp
ret
sbb
je
cmp
cmpsb
test
xchg
and
xchg
xchg
xchg
outsl
or
bnd
add
xchg
push
cmp
sbb
movsl
adcl
cli
cli
mov
dec
cli
rcrb
sub
mov
outsb
les
cmpsb
or
xchg
in
or
jmp
cwtl
loope
fs
sahf
aaa
sbb
pop
xor
fsubrs
xchg
stos
sbbb
addr16
cmp
inc
js
mov
das
sarb
xor
add
pop
dec
filds
sbb
mov
and
lret
rcrb
xchg
addr16
pop
inc
aaa
mov
mov
xchg
lock
repz
pop
adc
fcmovne
clc
or
cmp
mov
and
mov
repz
mov
push
popf
out
fcoml
clc
sbb
mov
mov
xchg
daa
dec
insb
dec
pop
shlb
loope
or
lods
xchg
mov
lods
cltd
cli
sbb
clc
sbb
mov
aaa
mov
ret
jle
add
shlw
xchg
lock
adc
mov
sbb
push
repz
addr16
hlt
mov
xchg
dec
int3
mov
scas
push
and
imul
xchg
sbb
sub
mov
pop
mov
int
insl
mov
fidivrl
xchg
add
rcll
int
sahf
adc
popa
sub
addr16
imul
mov
js
or
test
and
xchg
cs
jns
faddl
int
cltd
pop
cmpsl
data16
inc
shl
jo
les
ljmp
pop
idivl
jecxz
mov
mov
ret
dec
int
loope
test
or
test
push
cmp
mulb
mov
mov
jmp
xlat
stos
and
cmp
shrl
stos
hlt
mov
idivb
or
ss
lods
jmp
mov
pushf
push
loopne
js
lret
into
mov
add
jbe
adc
or
mov
sarl
repnz
mov
push
cli
lahf
mov
sub
mov
adc
scas
hlt
xchg
push
mov
insl
mov
fdivrl
test
test
fstpl
icebp
filds
push
jmp
in
pop
loop
jae
aad
dec
sub
fisubl
sbb
mov
fisubrs
iret
aaa
sub
outsl
int
divb
daa
cmp
ret
scas
mov
mov
movsl
rolb
and
or
push
mov
xor
fisttps
jo
data16
fsubrl
call
roll
lcall
jge
add
add
mov
int3
inc
cmc
jnp,pt
aam
shr
jmp
stos
sti
in
das
xor
xchg
ret
mov
ret
pop
popf
and
leave
mov
and
and
popf
xchg
mov
out
faddl
fisubl
jl
test
sub
shl
aas
mov
repz
ret
sub
scas
xchg
xchg
mov
std
mov
fdivp
hlt
mov
mov
mov
push
xchg
and
pop
cmp
leave
pop
cmpsl
cld
pop
add
call
in
xor
lods
pusha
adc
js
xor
insb
pusha
sbb
pop
es
bound
mov
xorb
cmpsl
push
cmp
and
xchg
shr
cmp
or
lods
aam
xchg
aad
lods
jecxz
and
cli
repnz
push
ds
sub
mov
stc
xchg
dec
push
jne
add
mov
jle
scas
arpl
add
or
fadd
hlt
pop
mov
ss
xchg
rorb
inc
mov
shrl
push
jae
xor
xor
add
outsb
in
push
push
or
and
pusha
leave
ficomps
cmp
je
test
xchg
divb
jo
push
mov
loope
fistps
std
mov
cmp
cs
sub
mov
leave
xor
mov
ss
popa
shl
test
push
pop
push
cmp
clc
aam
pop
data16
add
and
shrl
js
in
xchg
dec
jae
aam
aas
or
push
mov
jno,pt
xchg
repz
inc
aas
subb
inc
js
jl
lods
dec
dec
xchg
outsl
loopne
lret
push
xchg
pop
push
out
cwtl
mov
adc
hlt
inc
pusha
rcrl
fidivrs
xchg
lods
jl
je
add
xchg
xchg
lret
sub
add
out
mov
out
push
cmp
push
push
js
fisttpl
movsb
jno
add
test
sub
mulb
fs
lret
mov
jecxz
xor
arpl
pop
inc
cli
hlt
int3
sub
adc
inc
cmp
testl
mov
cmp
aam
add
xchg
inc
ja
lock
cmp
jae
mov
jb
out
fmul
add
and
dec
in
int3
int3
bound
imul
dec
xor
and
xor
mov
mov
daa
push
bound
pusha
fildll
pop
int3
ficompl
sti
jecxz
pop
popl
jge
add
and
and
xchg
add
dec
pop
lock
xchg
add
cli
xor
xchg
jl
push
xchg
insb
fmull
add
xchg
cmpsl
fistpl
and
push
add
lods
and
and
push
dec
mov
xchg
sub
fwait
xor
std
enter
xor
push
add
add
les
stc
movsl
cmpsl
mov
lds
mov
fucom
jmp
lods
adc
inc
inc
call
fstpl
jg
and
push
aaa
cmp
test
mov
mov
inc
xor
sbb
das
cmc
orb
data16
add
das
sub
mov
ds
outsl
sbb
add
and
in
mov
push
and
cmp
cmp
ja
gs
jb
push
xchg
xchg
lret
js
loop
and
mov
aaa
mov
lret
adc
push
les
mov
mov
iret
push
fstps
push
push
test
mov
cmpsl
addw
dec
sub
xchg
mov
outsb
inc
dec
jne
imul
cmp
cld
inc
push
test
mov
fsubrs
scas
add
stos
stc
push
mov
sub
inc
adc
add
push
lret
test
jge
mov
add
jnp
test
fdivl
std
fiadds
pop
stc
std
pushf
mov
not
notl
sbb
dec
pop
mov
mov
pop
test
data16
xchg
les
xor
ss
mov
and
mov
sahf
inc
es
adc
adc
scas
dec
cltd
daa
push
out
xor
inc
aas
mov
push
mov
add
sbb
repnz
push
jl
xor
xor
adc
cmp
addl
adc
lahf
sar
cmp
hlt
and
test
repz
dec
pop
add
outsb
cmp
push
inc
mov
pop
mov
push
rcll
cld
jne
stos
add
mov
lret
fisttps
pop
fisubl
add
leave
mov
lds
fldl
mov
mov
sbb
lret
es
jmp
inc
lahf
cli
pop
jle
test
les
push
jecxz
fiadds
ljmp
int
test
fnstenv
movsl
sub
mov
imul
adc
ds
pusha
and
mov
insl
mov
cwtl
pop
lret
repz
mov
fst
xchg
mov
icebp
mov
lods
mov
ds
out
pop
iret
push
andl
xor
or
pop
outsl
inc
flds
inc
pop
fmul
jp
sahf
cmp
pop
pop
sub
mov
fs
jo
pusha
adc
or
mov
daa
sub
sbb
add
cmp
aas
jecxz
push
mov
push
pop
and
cltd
lods
testb
test
leave
push
pop
into
lods
repz
mov
mov
adc
pop
push
cmc
or
aad
pop
jb
sarb
std
and
inc
adcb
hlt
aas
std
divl
mov
mov
sbb
stc
pop
iret
clc
lea
aaa
and
push
cmp
mov
add
cmp
in
mov
pop
xor
jnp
adcl
jnp
testb
xor
fucomi
leave
sub
mov
xor
push
and
dec
sub
sub
cmp
xlat
or
les
xor
cli
xor
xchg
lods
mov
xor
cli
adc
jmp
mov
icebp
scas
iret
cmp
dec
sbb
in
xchg
push
jle
adc
lcall
pushf
out
or
scas
adc
fstp
or
mov
jnp
ss
popf
repnz
in
loope
in
pop
jp
mov
ror
jmpw
aad
imul
das
rclb
push
mov
pop
aas
pop
lea
mov
xor
adcb
orb
lods
adc
xor
out
mov
mull
les
mov
out
fs
xchg
inc
mov
sub
sahf
sub
iret
push
insl
fstl
repz
ss
and
cmp
mov
mov
xchg
jne
jnp
movsb
sbb
repnz
in
test
or
sbb
mov
push
aas
rolb
sbb
push
jno
aad
fnop
and
inc
adc
dec
xor
mov
nop
inc
xchg
pusha
mov
jnp
jno
mov
sbbl
in
stos
mov
or
test
fisubs
outsb
es
cmp
imul
dec
xchg
mov
mov
cli
jbe
aaa
movsb
in
fldlg2
add
jmp
jecxz
stos
mov
cmp
xchg
das
or
push
pop
mov
add
imul
xor
ret
out
cmp
insb
cmpsb
ret
pop
and
data16
and
adc
add
cltd
lahf
iret
jne
ficoms
sub
add
push
sti
inc
jp
mov
jl
cmc
push
mov
in
xchg
pop
xor
mov
mov
jno
xchg
push
sub
outsb
push
test
inc
or
mov
xor
pop
dec
cmp
ljmp
sub
orb
or
pusha
lcall
roll
call
jo
sbb
mov
je
mov
clc
cmpsb
push
imul
xchg
or
jns
mov
inc
jl
mov
in
mov
scas
and
mov
jp
iret
push
es
mov
jae
inc
push
cltd
inc
inc
or
xor
das
call
jne
push
xor
add
idiv
fiaddl
loop
mov
insl
mov
dec
inc
fdiv
and
movsl
fsubl
rcrl
fsubrl
addr16
dec
sahf
cli
sarb
xor
test
gs
sub
mov
int3
cmp
ret
push
mov
or
xor
in
or
into
clc
and
je
lds
mov
andl
mov
ret
shlb
roll
rcrb
lret
icebp
mov
mov
jle
jns
lret
rorl
cs
std
stc
pop
pop
gs
dec
pop
insl
dec
jb
clc
adcl
movsb
pop
mov
andb
mov
mov
test
mov
jge
jecxz
mov
sub
cmp
loope
add
in
jb
xchg
cwtl
dec
rcll
mov
repnz
scas
rcll
popf
imulb
pop
into
xor
pop
mov
or
push
pop
mov
pop
cmp
push
xor
ret
jb
daa
sub
aas
aaa
mov
pop
and
mov
sub
pop
fcmovb
sar
shld
xchg
push
push
push
jl
mov
lcall
jno
mov
mov
or
cmpsl
test
inc
leave
jmp
arpl
aas
mov
mov
pop
repz
cmp
jl
dec
js
sub
ja
clc
push
rolb
data16
mov
mov
dec
push
or
jno
mov
mov
ja
xchg
pop
adc
mov
mov
pop
jo
jmp
arpl
mov
adc
and
fdivrs
iret
or
mov
push
imul
subb
cmp
aam
or
mov
scas
xor
sti
dec
stc
or
lcall
pop
jae
mov
and
fs
shll
inc
mov
ret
inc
jbe
pop
call
fsubs
fstl
nop
jns
pop
push
inc
xchg
sti
xchg
pop
sub
mov
sub
aas
cmp
push
fstpt
fcomi
adc
aaa
clc
arpl
jb
cmp
mov
jno
leave
jge
jae
xor
inc
ds
int3
push
jns
cmpsb
repz
lods
mov
push
cli
push
mov
int3
lock
subb
mov
jle
jnp
fisttpl
test
ja
aaa
xor
push
add
lcall
popa
je
fs
add
leave
push
popf
inc
cmpsl
test
cs
fdivl
mov
xchg
fildll
test
xor
cmp
jg
inc
shl
jnp
inc
aas
sub
pop
cmp
inc
pusha
ret
add
pusha
ja
jns
xchg
shrl
mov
inc
mov
add
mov
orb
push
dec
cmp
jg
lods
in
inc
push
dec
sub
mov
mov
fcomps
mov
call
adc
data16
dec
sbb
push
push
cs
mov
pop
ss
cmp
mov
or
movsl
imul
cmp
ret
rolb
sbb
insl
ret
mov
aam
mov
ret
mov
scas
cwtl
jl
mov
mov
push
scas
mov
shll
and
push
int3
fistpl
out
sub
out
in
loopne
lret
data16
mov
or
pop
mov
fsubr
es
pop
xchg
insl
dec
in
pushf
xor
sbb
adc
jbe
adc
dec
js
inc
mov
and
fadds
cmpsb
mov
xor
ret
sub
push
adc
bound
imul
pop
mov
inc
out
xor
push
popf
pop
out
popa
sub
clc
pusha
in
out
aaa
in
jmp
adc
adc
jg
stos
pop
call
adc
and
pop
das
je
jl
ret
in
ds
stos
es
stos
cmp
pop
xor
mov
jae
inc
ss
and
xchg
push
jecxz
dec
mov
mov
insb
mov
adc
jns
rcl
adc
test
cmp
xor
mov
shll
push
sbb
or
cmpsb
cmp
mov
sbb
or
mov
test
ret
dec
sbb
mov
or
scas
mov
xor
xor
inc
pushf
jecxz
daa
data16
xor
adc
scas
mov
jecxz
dec
inc
mov
aas
popa
xchg
cltd
popf
aad
xchg
movsl
xchg
add
vpmulhw
mov
jmp
pop
jmp
push
adc
cli
xchg
or
sbb
push
sub
lock
scas
or
aad
gs
or
ror
mov
je
ja
adc
xchg
sbb
xlat
loope
scas
inc
lret
out
xchg
imul
xor
mov
test
jmp
into
cld
rol
in
mov
cmp
and
sub
daa
mov
xor
adc
mov
ds
outsb
mov
push
xor
fdivl
pop
xchg
mov
dec
sbb
sub
jge
ficoms
ljmp
data16
cmpsl
push
insl
in
dec
mov
pusha
in
pop
scas
fldenv
cld
std
sbb
mov
cmc
push
cld
add
movswl
sub
dec
dec
lock
adc
inc
jmp
insb
mov
pop
nop
xchg
lcall
testl
adc
iret
ja
aaa
jnp
ss
es
pushf
mov
or
movl
mov
sbb
cmpsb
sbb
inc
cmp
dec
push
or
call
insl
sti
dec
lock
bound
roll
cmpsl
jns
jno
in
jnp
les
mov
push
push
in
jmp
mov
cmc
sub
pop
repz
lods
push
icebp
xor
lea
and
add
scas
jmp
jae
test
fimull
fiadds
xor
shr
sbb
adc
and
pushf
dec
ds
out
mov
imul
mov
xchg
inc
lds
mov
leave
jl
lea
iret
inc
and
dec
and
cltd
sub
aam
rorl
adc
js
add
insl
adc
popf
and
dec
stc
pusha
shr
lahf
mov
das
inc
xor
sub
rclb
inc
push
test
sub
cwtl
test
mov
into
fisubrs
lds
test
aam
push
inc
pop
das
rcrb
clc
cmp
repz
scas
in
sbbb
shll
or
cmpw
shlb
int3
or
das
cld
or
stc
adc
cld
cmp
and
incb
xchg
fwait
inc
movsl
mov
in
pop
in
mov
cmpsl
stc
and
jnp
popl
or
xchg
cmc
out
repz
inc
adc
into
movsb
push
add
pop
lock
pop
prefetchw
dec
and
int
and
shl
insl
and
lcall
std
jecxz
jg
repnz
and
sub
repnz
mov
xchg
test
fs
sub
in
cwtl
into
enter
push
aad
lock
sbb
call
cmp
tzmsk
loopne
lret
sub
add
push
outsb
pop
mov
subb
add
cmc
adc
and
sbb
mov
shrb
sbb
or
insl
inc
pusha
pop
fwait
inc
pop
mov
sbb
lds
in
or
mov
sub
mov
outsl
es
or
and
popa
roll
xchg
pop
xor
inc
cmp
pop
loope
or
loope
xor
clc
and
test
fisttpl
insb
addr16
add
fsts
fwait
lock
jle
cmp
cld
stos
into
jmp
popf
popa
clc
xchg
sub
mov
and
lods
inc
and
cs
test
sub
jle
mov
or
fdivl
sub
nop
mov
ret
and
in
outsl
push
lcall
cld
test
xor
sub
push
push
dec
push
ja
std
mov
mov
je
in
repz
xchg
loopne
xchg
push
pop
les
pop
inc
push
inc
jle
jmp
jle
dec
xchg
mov
xchg
ret
or
enter
adc
ret
sub
jl
popf
mov
mov
in
js
fimull
cli
in
fnsave
aas
cltd
push
fnstcw
and
fdivrl
shlb
inc
shrb
inc
les
xchg
into
jo
cmc
push
inc
loope
jle
mov
sub
sub
andl
enter
xor
arpl
or
nop
pop
inc
cmp
nop
or
ja
xchg
repz
xor
add
jb
jo
sti
jmp
mov
sbb
adc
cli
icebp
jle
sahf
pop
push
adcb
rcrb
je
lret
cmp
push
jo
push
outsb
es
pop
cmp
push
mov
mov
dec
sub
dec
add
loop
out
dec
je
dec
cs
push
stc
inc
xor
sbbl
lods
xchg
fidivrs
test
jb
jg
enter
in
cld
repnz
mov
popf
jno
inc
fwait
sub
cld
jl
push
push
imul
aaa
or
push
adc
js
fstpt
adc
mov
popa
and
pop
out
sti
push
stc
clc
movsb
daa
pop
aaa
les
jp
xlat
insl
repz
push
or
sbb
pop
out
mov
inc
fldenv
adc
mov
adcb
test
mov
jb
ds
stc
push
fldenv
enter
pop
movsb
div
fldt
pop
lret
xor
push
aad
xlat
addr16
dec
jns
mov
pop
cmp
leave
mov
jne
inc
push
mov
in
sbb
cmpsl
das
lret
inc
ror
jmp
lret
dec
arpl
sahf
cmp
shll
fcoms
in
insb
xchg
inc
jne
push
push
jo
jg
shrb
mov
out
test
mov
repnz
or
cmc
test
repnz
adc
jg
sbb
arpl
xchg
sahf
in
inc
and
test
dec
and
ret
mov
inc
andl
in
inc
cltd
and
xchg
add
sbb
pop
and
cmovle
adc
cmp
xorl
sbb
push
idivb
mov
into
das
jae
add
or
negl
add
imul
pop
and
pop
repnz
ret
mov
xchg
push
jno
xchg
aam
sarl
cwtl
in
lds
adc
push
dec
cld
sub
and
jl
xchg
jae
js
aas
les
lret
cmpl
cmp
push
arpl
jmp
adc
sbb
repz
stos
sti
cwtl
lret
add
out
adc
or
push
ret
mov
xchg
ret
lahf
lods
pushaw
sbb
push
gs
ret
sub
nop
mov
in
arpl
cmc
ret
mov
xchg
insb
negl
mov
shrb
and
pop
into
insl
sbb
mov
adc
push
fdivs
dec
enter
ror
cld
stc
pop
js
inc
mov
push
imulb
cmp
inc
mov
pxor
pop
adc
jns
xor
int
xchg
fwait
pusha
andl
mov
ret
cwtl
cmp
iret
mov
lds
push
push
jbe
sub
in
mov
jl
mov
or
and
and
sarb
out
xchg
mov
ss
xor
cli
xor
out
es
fistpll
icebp
cwtl
lds
subb
mov
lret
add
and
push
sti
rcl
mov
jl
repz
cmp
movsl
xchg
outsl
ja
insl
xor
sub
mov
adc
pop
dec
sbb
xor
out
fisttpll
xchg
pop
shr
xchg
jae
stc
xor
out
divl
jo
mov
pop
aad
jno
push
push
xor
movsb
out
testl
inc
out
adcb
pop
pop
jge
xor
jmp
mov
cmp
sbb
jp
and
arpl
mov
inc
int3
fisttpl
jg
push
call
sbb
fs
sub
and
inc
in
cs
push
sub
ja
sub
js
ret
mov
loopne
cmpsb
inc
int3
and
test
push
and
sub
jbe
sub
sbb
xorb
fidivl
into
cmp
sbbl
imul
hlt
cwtl
inc
scas
xlat
pop
leave
rorb
pushf
xchg
movsb
aad
sbbl
ja
jge
mov
mov
mov
jle
ss
mov
outsl
mov
rclb
mov
ljmp
xorl
mov
sarl
iret
call
xor
add
hlt
popf
rolb
sub
fsubrl
arpl
jecxz
xchg
addb
out
mov
sbb
add
addl
lds
dec
mov
fmuls
sti
scas
scas
subl
xchg
add
cmp
adc
pop
adc
add
pop
sbb
fcmove
lock
jle
ljmp
pushf
test
push
sub
scas
push
xchg
mov
shl
ret
pop
mov
js
jae
sub
fbld
inc
ret
sub
icebp
mov
ja
xor
ret
mov
adc
lret
push
and
pop
in
fsubrs
ds
fdivs
les
or
out
arpl
shrb
mov
sahf
rorb
aas
adc
insl
mov
sbb
mov
mov
sbb
mov
addr16
jecxz
mov
pushf
out
mov
in
leave
lcall
and
adc
jmp
sbb
mov
fldenv
jecxz
aam
call
jnp
xchg
adc
ret
jb
sub
push
cltd
sbb
push
in
and
addr16
pop
xchg
mov
sahf
jecxz
cmc
mov
imul
pop
sbb
adc
out
cmp
fcmovu
adc
adc
xchg
or
sub
loopne
jb
into
dec
fildll
nop
pop
loop
js
jl
pushf
shll
cmp
mov
xor
cltd
pusha
xor
push
iret
mov
sbb
movsl
sbb
dec
dec
mov
jle
add
and
ss
mov
inc
faddl
or
push
xchg
mov
xor
or
add
sub
scas
push
adc
mov
iret
enter
jno
sub
xchg
dec
int3
je
test
cli
push
cs
jmp
into
mov
or
push
mov
sbb
test
test
xchg
mov
movsl
int3
jb
xchg
andl
in
fwait
das
movsl
or
and
hlt
xchg
fiadds
cld
lahf
mov
movsb
adc
and
add
cmp
es
mov
xchg
cmp
ret
or
das
dec
cmp
mov
into
pop
int
add
sub
xor
loopne
scas
push
aam
mov
lock
out
and
fld
cmpsl
dec
bound
push
fstl
icebp
lahf
lcall
ja
mov
lds
xor
xlat
push
mov
pushw
push
shl
das
and
inc
repnz
packuswb
clc
pusha
add
sub
jbe
mov
jne
push
cs
jle
jne
pop
adc
push
push
cs
ss
jno
rcrb
inc
outsl
mov
bound
lcall
jo
xchg
fs
pushl
enter
dec
push
lahf
dec
mov
call
push
cs
add
inc
push
iret
mov
in
xchg
std
rcrb
daa
sub
push
push
ficompl
inc
cmp
in
iret
inc
xchg
jmp
test
test
cmpsb
and
lods
rorb
sub
and
pop
and
mov
gs
or
loopne
jmp
pushf
jle
pop
xor
mov
fidivrs
lods
push
pop
aad
std
push
movsl
and
and
imul
jge
mov
mov
ljmp
rol
roll
or
nop
stos
xor
scas
xchg
sub
sbb
cmp
cmp
pop
pop
lahf
fwait
js
dec
jl
jl
jo
in
pop
xchg
push
sbb
push
loope
das
dec
ret
mov
xchg
divl
jne
mov
dec
push
addr16
je
pop
js
and
and
push
mov
inc
mov
addl
sti
jae
or
xchg
xorb
aad
push
xchg
gs
push
push
push
aaa
repz
dec
test
inc
out
fldenv
arpl
orb
cli
xchg
pop
cmp
xor
movl
adc
xacquire
ss
inc
icebp
das
inc
fwait
cmp
ror
push
or
sbb
pop
xor
dec
mov
scas
inc
lock
rclb
les
repnz
push
enter
sub
out
xchg
xchg
sub
insb
lahf
or
dec
pinsrw
out
mov
rol
xchg
in
imul
xlat
and
dec
add
dec
int3
es
adcl
pop
andl
xchg
sub
mov
xor
lock
pop
mov
je
pop
in
jbe
xchg
pop
or
into
jmp
xchg
adc
dec
aad
fldenv
cmpsb
mov
pop
outsl
cltd
jbe
jae
nop
shll
lock
push
daa
push
cmp
xchg
test
inc
ficompl
out
push
imul
inc
enter
sub
rorl
add
or
test
sar
pop
test
fadds
pop
push
push
jg
jp
stc
subl
and
nop
or
fcomip
add
clc
adc
jle
adc
in
push
in
ror
sub
mov
xchg
mov
pop
test
and
call
int3
cmp
pop
es
sbb
and
sub
mov
sahf
lret
std
cs
pop
pop
xchg
xor
push
inc
fldcw
and
and
push
pop
bnd
test
shll
mov
sti
add
jl
loope
jge
insl
jne
dec
mov
stos
test
sub
in
stos
lret
pop
int
rolb
lret
in
jnp
and
das
sub
cmp
pop
mov
clc
dec
push
bound
inc
mov
mov
scas
or
push
xchg
xor
mov
or
jecxz
mov
and
xchg
leave
inc
sbb
movsb
pop
and
scas
add
subb
push
push
stos
imul
jge
add
xor
dec
idivb
or
cmp
mov
ljmp
pop
es
push
sbb
dec
pop
add
mov
sub
adc
xor
inc
xor
jno
enter
insl
push
cmpsl
xchg
faddp
cltd
xchg
inc
in
xchg
push
inc
pushl
popa
cmp
sbb
ret
pop
mov
cmp
xor
repz
aas
ja
dec
adcb
push
cmp
clc
rorl
adc
in
ja
cmpsl
push
fcoml
xchg
mov
mov
xchg
subb
add
fstpt
jmp
mov
shll
mov
imul
adc
push
jns
mov
aad
mov
scas
push
sbb
jecxz
adc
jo,pt
xchg
lret
lahf
sbb
fisttpl
cmp
pop
sbb
mov
jns
pop
push
inc
jne
daa
mov
jl
sti
add
jno
popa
or
ljmp
pop
push
vmwrite
push
jecxz
aas
mov
cs
push
orb
mov
lret
cltd
dec
push
xchg
xchg
sbb
movsl
cmp
stc
xchg
lea
mov
cmp
jmp
xor
scas
fcmovb
jge
xchg
inc
dec
xchg
xor
hlt
xor
imul
jne
sub
test
bound
dec
adc
imul
out
pop
push
jg
xor
jae
pop
ficompl
inc
mov
xchg
push
mov
cs
inc
mov
js
cmovns
adc
jg
inc
nop
dec
xchg
lahf
arpl
daa
aad
mov
test
mov
sub
std
and
jnp
or
es
pushf
sbb
cmc
int
jg
shll
movsl
push
mov
inc
lea
and
dec
mov
pop
mov
setno
and
ds
push
mov
ja
or
loopne
lret
out
lea
nop
aaa
subl
fwait
clc
aaa
sarb
loopne
adc
adc
loopne
adc
sbb
mov
or
adc
mov
gs
sti
or
mov
inc
fists
push
add
jbe
int3
adc
ret
cltd
cmpsb
adc
and
push
loope
rorb
xor
mov
mov
push
insl
push
ds
hlt
or
mov
mov
pop
sbb
adc
lcall
jns
mov
loop
out
add
adc
xchg
inc
xlat
push
dec
jae
aam
not
pushf
adc
rcrb
or
xchg
hlt
adcb
cld
mov
sbb
repnz
dec
add
pushf
aaa
jge
xchg
popf
sbb
insl
sbb
jge
popa
jno
adc
jp
push
push
imul
shl
inc
xchg
adc
testb
mov
jno
cmc
mov
mov
xchg
mov
cmp
and
cltd
jmp
mov
sub
adc
aaa
xchg
or
pop
or
sub
nop
mov
clc
push
xchg
dec
or
das
sbb
int3
jae
pop
cmp
inc
rcrl
push
out
decl
jnp
out
fcmovne
push
movsl
cmp
ret
xchg
or
pop
or
test
mov
inc
adc
loope
imull
sbb
sbb
aaa
mov
and
fsubp
popa
cltd
inc
mov
xor
pop
add
dec
push
lea
divl
movsl
pandn
cmp
loopne
or
jb
lahf
dec
and
pop
xchg
bound
cmp
cld
inc
mov
jne
pop
xchg
idivl
add
rol
test
cmpsl
pusha
fwait
mov
mov
xor
or
pusha
insb
sti
clc
ret
push
in
or
mov
cmp
dec
repz
aad
cmpsl
icebp
mov
insl
loopne
mov
pop
xlat
mov
xor
jl
pop
fistps
repz
cmp
in
mov
aad
leave
xlat
mov
dec
gs
sbb
push
adc
jge
inc
mov
cmp
push
ficomps
xchg
mov
jne
adc
jno
daa
fdivl
adc
dec
daa
add
adc
repz
sub
cltd
jno
aaa
testb
pop
faddl
lret
xchg
test
jmp
dec
fsts
rol
ljmp
push
jbe
dec
out
loop
cwtl
sbb
or
xor
lcall
dec
and
add
lea
and
testb
add
outsl
fwait
inc
push
rdpmc
pop
push
sub
es
or
inc
push
mov
xor
inc
inc
aam
out
xor
outsb
mov
inc
aas
sbb
and
xchg
scas
sbb
insb
jle
int3
cmp
xor
cmc
cmp
or
lock
lret
or
or
push
inc
lea
pop
call
stos
movsb
pop
adc
movsb
jnp
adc
mov
cmpsb
and
push
xchg
rol
aas
sahf
stos
cltd
mov
pop
cmovle
dec
push
ljmp
xchg
cmpsb
xchg
mov
inc
add
in
fnstenv
clc
imul
and
imulb
lcall
mov
jns
and
fisubrs
inc
push
addr16
int
or
sahf
dec
pushf
lret
mov
mov
jnp
das
daa
cli
or
je
fnstsw
xlat
push
push
data16
jae
pop
cmp
push
pop
cmp
sbb
roll
mov
mov
fs
inc
in
dec
cmp
push
ja
add
mov
int3
fdivrl
out
xor
xor
add
sbb
pop
dec
sub
mov
lods
imul
sbb
jecxz
lods
push
test
sub
loop
idivb
and
xor
in
hlt
jne
dec
lds
out
rorb
or
pop
sbbl
ss
mov
outsl
fs
xchg
scas
scas
xchg
filds
les
mov
mov
popf
scas
imul
dec
and
cs
xchg
pop
loopne
divl
leave
call
xchg
sbb
push
push
or
dec
sub
xchg
sub
sbb
pop
ret
enter
cmp
cmp
pushf
dec
out
push
mov
pop
cmp
hlt
cmpsb
aaa
push
push
insl
mov
jns
push
lock
mov
pushf
imull
lock
lcall
out
test
jle
cmp
inc
adc
xor
mov
and
add
pusha
mov
mov
testb
push
mov
sub
sar
sbb
inc
and
incl
cmp
inc
mov
jge
or
push
jge
add
clc
pop
shll
cmpsl
loopne
dec
jns
sub
mov
add
fists
add
jmp
cmc
adc
iret
nop
push
add
pop
mov
add
arpl
sbb
cmc
repnz
push
out
cmc
shlb
call
cmpsl
pop
mov
movsl
fs
pop
mov
cltd
lods
imul
test
cmp
mov
sti
repnz
cmp
push
popa
mov
cltd
call
mov
js
cmp
push
mov
pop
xor
and
xchg
jp
sub
lcall
jns
xchg
into
mov
xor
fadds
lcall
fsubrs
stc
in
sub
push
mov
gs
push
cmp
adc
andl
sbb
jp
lret
pop
add
jns
mov
push
insb
sar
scas
repnz
test
in
scas
out
mov
inc
movq
mov
adc
sub
adc
mov
negl
loop
in
lcall
xchg
jae
adc
pop
xchg
xchg
inc
add
mov
mov
push
sbb
call
shlb
jl
les
loopne
aaa
sbb
es
sbb
xchg
jo
xor
movsb
dec
cmp
jg
pop
icebp
xchg
movsb
or
jle
ret
std
cs
mov
sub
test
fcompl
adc
imul
out
adc
adc
fldln2
mov
pop
adc
xor
cmp
mov
repnz
push
jno
into
jg
fwait
or
lds
pop
std
xchg
xchg
cmpsl
pop
push
mov
fmuls
inc
imul
pop
ds
nop
in
unpckhps
adc
pop
and
shl
pop
cmc
dec
je
xor
addr16
and
xchg
xlat
push
pop
xchg
mov
addb
icebp
test
jp
in
gs
sub
mov
inc
and
dec
push
sub
xor
dec
inc
and
pop
and
aam
aaa
sbb
stc
dec
and
mov
dec
xlat
mov
xchg
jmp
pop
xor
ficompl
fisttpll
lcall
adc
in
shrl
mov
jle
mov
jmp
icebp
fmull
daa
ljmp
into
jecxz
jb
icebp
cld
movl
pop
mov
in
xor
xchg
cli
clc
dec
ret
aad
aad
jbe
imul
xchg
and
mov
lret
xor
mov
out
int3
sbb
xchg
pop
xor
xchg
std
push
fbstp
cld
and
out
repz
out
pop
xchg
push
lock
and
js
arpl
stc
add
insl
jmp
lock
sbb
jo
pop
inc
inc
fcoms
and
mov
ljmp
xlat
lea
mov
mov
jns
cmp
movsw
shlb
lock
ror
dec
ficoms
push
divl
jne
movsl
into
mov
push
shrl
jns
jl
push
sbb
mov
mov
popf
mov
mov
into
mov
cmpsl
adc
data16
xorb
insl
adcl
stc
sbb
test
cmp
testb
xchg
add
inc
movsb
cmc
cltd
out
aaa
popa
cmp
arpl
jg
jbe
dec
mov
mov
sub
lret
push
js
pop
insl
add
dec
ficoms
and
sbb
test
subl
fs
sub
xchg
mov
fwait
sbb
nop
and
mov
subl
sub
sti
mov
push
xor
fwait
andl
mov
sub
jo
push
adc
pop
dec
mov
pop
xchg
push
ljmp
ds
cmp
mov
pushf
scas
xchg
mov
cmp
push
sbb
or
dec
and
xchg
jo
and
pop
inc
arpl
xlat
roll
mov
rclb
shlb
cmpsl
call
mov
sub
jge
mov
cmp
add
jb
int3
nop
pop
adcl
add
dec
cmp
adc
aaa
sub
fwait
negl
push
notb
cmpsb
jbe
out
mov
adc
pushf
mov
sub
add
in
xlat
std
mov
inc
adc
rcrl
test
sub
dec
mov
nop
loop
lret
fwait
xchg
testl
sarb
mov
dec
stos
aad
loopne
mov
and
push
mov
iret
and
xor
xor
xor
hlt
iret
scas
jge
mov
outsb
adc
sar
call
push
faddl
repz
mov
or
sbb
imul
xchg
in
enter
jmp
push
jg
xor
cltd
push
mov
add
ret
test
mov
stos
or
das
lds
sbb
pushf
pop
fisubrs
std
test
and
das
fimuls
out
roll
imul
jecxz
loopne
out
lret
pop
sti
push
test
mov
jle
inc
mov
shrl
mov
xor
or
adc
jmp
repnz
sahf
mov
das
mov
test
push
lods
sahf
mov
xchg
mov
into
sbb
xchg
push
jb
fildll
test
dec
add
xor
inc
mov
call
enter
adc
xor
xlat
iret
stc
cmp
adc
jo
and
test
fsubrs
adc
mov
in
stos
or
push
shrb
cmc
xchg
inc
ret
sub
loope
sahf
outsb
sbb
mov
fcomps
rclb
pop
dec
sbb
jo
out
cmp
and
pusha
loopne
adc
push
xchg
dec
out
dec
ds
icebp
and
pop
xchg
xchg
call
dec
push
loope
dec
daa
xor
xchg
or
adc
movsl
cmpsb
xchg
in
and
xchg
outsl
pop
les
out
mov
es
shrb
xor
sub
adc
sub
js
cwtl
or
popa
push
mov
or
sbb
jle
add
adc
jb
aad
cmpsl
xchg
fwait
lret
mov
inc
repz
mov
ret
fwait
push
inc
mov
cltd
xchg
hlt
inc
cs
testb
hlt
inc
mov
sub
jo
dec
sub
sub
jns
cmp
cltd
rcr
sub
inc
es
mov
and
jle
xchg
out
loop
push
flds
fucomi
cmp
mov
popa
push
cmpb
mov
lcall
call
jno
jb
fimuls
cs
xor
adc
mov
add
rolb
xchg
loop
loop
scas
and
add
xchg
mov
ljmp
xlat
xchg
push
xlat
cmp
sti
addr16
subl
test
loope
or
jp
bound
push
fidivs
mov
jns
and
fidivs
mov
mov
xchg
pushf
movsl
or
or
jmp
and
ret
pop
sub
pop
xor
es
mov
repz
jo
adc
push
int3
xchg
movsb
daa
ja
aam
imul
push
fstpl
mov
cld
lds
imul
push
lahf
dec
xor
cltd
mov
jge
mov
mov
into
cmpsb
cld
xchg
ret
gs
enter
or
in
mov
mov
into
hlt
xor
mov
dec
mov
into
inc
and
push
mov
adc
mov
sahf
rcr
daa
insb
out
lods
mov
mulb
and
xor
inc
ljmp
test
xchg
imul
imul
dec
pushf
sbb
pop
aaa
dec
or
and
jp
push
xlat
ja
mov
sbb
xlat
and
and
inc
mov
xchg
push
aam
push
dec
pop
push
out
loop
inc
in
cmp
sahf
out
mov
movl
mov
fadds
mov
nop
into
int
in
nop
add
inc
cmp
imul
scas
and
inc
arpl
adc
pop
dec
mov
adc
jge
adc
mov
int3
jg
and
outsb
mov
jb
xchg
xchg
andl
mov
sub
outsb
lods
fdivl
daa
addr16
mov
mov
push
jle
inc
mov
insl
xchg
add
dec
mov
fstpt
cmp
inc
push
xchg
push
add
cmpsb
mov
stos
dec
mov
sbb
xor
mov
pop
fwait
add
push
dec
push
outsl
repnz
and
mov
test
dec
mov
js
insb
jle
cmp
movb
push
das
add
dec
xchg
add
cmp
xchg
in
test
push
ret
push
cmp
ss
imul
pop
mov
enter
xchg
mov
xchg
nop
stos
xlat
test
lahf
cmp
dec
fildll
in
mov
xchg
push
mov
ja
or
cmp
pushf
into
rcrl
sub
lcall
jae
inc
adc
out
mov
push
dec
lds
stos
push
loop
mov
pop
xchg
inc
adc
movsl
cs
mov
push
sti
cmp
xor
jecxz
add
stc
xchg
xchg
sub
mov
jg
mov
lcall
movsl
mul
xchg
mov
lods
enter
dec
push
jle
iret
or
nop
jne
daa
xor
addr16
fcomip
pop
xchg
jnp
push
aam
imul
inc
popa
rorb
ret
inc
xor
sub
jmp
mov
lea
mov
mov
cs
mov
mov
mov
pop
fstps
ja
xor
ss
dec
mov
out
xor
xor
movsb
pop
jl
jnp
sbb
adc
hlt
loope
xor
sbb
ds
cmp
inc
xor
aam
xchg
mov
jbe
and
jne
adc
popa
out
adc
pop
mov
aas
mov
xorl
shlb
lds
pop
pop
cmp
fucomip
or
pop
adc
jo
repz
add
jl
jae
arpl
cltd
cmpsb
pop
mov
sbb
subl
mov
jno
pop
rcrl
pop
filds
mov
mov
fs
movsb
lcall
std
dec
xchg
clc
push
pop
aad
movsb
iret
fdivrs
pop
outsb
bound
inc
cli
cmc
or
mov
shlb
pop
jnp
or
mov
sbb
adc
jle
mov
mov
mov
jmp
mov
loopne
add
cwtl
out
sbb
dec
and
cld
fidivrs
push
xor
inc
push
push
std
imul
lea
sub
mov
loop
stos
testl
add
sub
insb
mov
mov
dec
jle
popa
jbe
test
pushf
push
lds
shr
insb
inc
sub
push
adc
add
invlpg
adc
enter
sub
sbb
xor
lods
ss
jecxz
inc
mov
pop
sub
xchg
testb
jne
mov
hlt
cmp
adc
mov
pop
mov
add
aad
jno
add
pop
repnz
dec
mov
addr16
cmp
jl
loope
or
cmp
cli
iret
stc
loop
pminsw
mov
adc
xchg
imul
sahf
lret
shlb
in
ss
or
jae
mov
add
addb
jp
adc
add
xor
or
out
adc
sub
ljmp
fnstsw
dec
xchg
outsb
dec
push
cwtl
mov
ds
sub
enter
dec
test
rol
xlat
clc
mov
sub
in
mov
inc
jl
xchg
insb
nop
xor
fsubrs
mov
pop
cltd
xchg
push
jmp
cmp
lds
add
out
fistl
cld
mov
sti
fmull
mulb
jne
dec
cmp
repz
jns
int3
iret
xchg
xlat
sarb
cmp
aas
mov
jg
es
and
enter
dec
jmp
and
sbb
inc
push
dec
sub
aaa
jnp
repz
inc
sahf
jge
jge
push
repnz
mov
pop
xor
push
adc
mov
subb
in
andb
pop
test
aas
xchg
pop
pop
xchg
pop
inc
scas
xor
aad
stos
pushf
loop
cmp
in
rorb
mov
cmp
push
inc
adc
push
cmpsb
or
xlat
xchg
pop
sbbb
add
pcmpgtb
dec
icebp
inc
ret
stos
xchg
push
sub
loopne
mov
pop
jns
mov
roll
int
out
jne
and
movsb
inc
jp
inc
cmp
leave
mov
add
inc
mov
mov
imul
rcl
mov
dec
fidivs
notl
movsb
cmp
xor
add
jno
mov
les
leave
xor
testl
ss
mov
mov
xchg
xchg
mov
sub
and
imul
int3
sbb
pop
fmuls
push
lret
lret
fadd
outsb
jo
push
std
adc
or
subl
loopw
xchg
inc
je
sub
mov
push
sub
dec
or
and
loope
in
xchg
in
cmp
inc
inc
or
fnstcw
scas
mov
push
dec
sub
shll
or
loope
scas
jae
inc
dec
arpl
lock
loopne
pop
nopl
leave
test
jne
or
and
sub
dec
cmpsb
clc
cli
cwtl
and
and
xor
or
pop
jno
sub
cwtl
scas
ss
cwtl
xchg
or
jno
xchg
sub
ror
xor
pop
in
mov
fmulp
pop
push
cmp
sbb
ffree
data16
fdivrp
icebp
sub
or
or
test
mov
outsb
xchg
in
add
push
test
es
add
hlt
mov
sar
std
push
cmp
jo
xchg
cwtl
jns
insb
and
lahf
aad
inc
js
stos
push
push
inc
outsl
inc
jb
and
cmc
mov
push
lods
pop
bnd
pop
stc
and
subb
xchg
adc
xchg
out
jl
addl
sub
loopne
jns
lcall
es
xlat
sbb
loope
ret
inc
std
ret
into
push
sub
sbb
orl
jnp
movsl
xchg
les
adcl
loop
sarl
outsb
fs
push
inc
jge
in
test
test
adc
add
outsl
iret
xor
xchg
mov
ret
inc
jb
addb
cmp
xchg
inc
icebp
mov
push
sbb
neg
outsl
pop
idivb
popf
push
idiv
xchg
fisttps
pop
mov
out
pop
mov
mov
sub
mov
mov
cwtl
inc
subb
sarl
xchg
push
xlat
push
mov
or
mov
mov
cli
rolb
mov
movsb
mov
mov
test
sti
fadd
add
test
and
outsl
movsl
shll
out
add
cli
in
cltd
jg
out
aad
lds
inc
les
cmp
push
je
pop
insl
bnd
push
fsub
jb
pop
addr16
out
jns
sbb
out
dec
sub
inc
outsl
in
movsb
xchg
push
and
cmp
jns
or
ja
pop
and
sub
mov
or
je
out
adc
jno
xchg
add
fs
mov
cmp
mov
cmpsb
dec
jmp
pusha
push
and
push
stc
decl
icebp
pop
and
ljmp
mov
mov
movsb
cmpsl
out
jno
xchg
mov
push
sub
test
mov
xchg
jle
xchg
add
neg
ret
mov
dec
or
mov
xor
sbb
addr16
jmp
cwtl
mov
std
cmpsb
sti
mov
cmp
sub
mov
dec
pop
mov
pop
push
inc
xchg
sahf
stos
es
and
or
loop
sbb
inc
jle
pop
push
sti
jbe
pop
xchg
js
and
sbb
xlat
pop
xchg
xlat
jo
sbb
les
repz
sub
push
andb
dec
pushf
lock
cmp
stos
addr16
sub
scas
enter
mov
in
hlt
push
jl
pop
popf
inc
add
sbb
mov
call
test
icebp
test
or
dec
jno
clts
je
insb
lahf
add
xor
fst
bound
mov
jmp
pop
inc
lock
mov
ja
out
mov
lods
in
cmp
mov
sbb
repz
cmc
mov
daa
out
into
dec
mov
xchg
mov
xchg
jp
testl
mov
xor
movsb
or
jns
jo
dec
nop
mov
xor
cmp
ja
mov
mov
outsb
movsl
fiaddl
sbb
aad
jae
adc
hlt
mov
jo
mov
add
sub
xchg
xchg
mov
add
popf
jb
push
xor
aaa
or
jns
sti
std
xor
add
xor
adc
dec
js
test
jle
stos
pop
jno
jle
mov
pop
push
iret
dec
loop
cmpsl
adc
pop
sbb
out
nopl
gs
insl
xchg
xor
fistpll
cmp
lret
adc
cli
enter
adc
sbb
lods
jb
mov
pop
adc
fistpll
push
lods
test
imul
sub
aaa
ucomiss
sub
xor
fldcw
aas
push
dec
cmp
jae
push
aaa
out
push
stc
jb
imul
pop
pushw
adc
arpl
push
lods
inc
fidivl
cmc
testb
inc
inc
scas
mov
sub
lock
jp
repz
and
xor
inc
loop
stc
mov
jbe
mov
out
cmp
into
fisubl
add
stos
shlb
jnp
jecxz
lock
mov
inc
xlat
dec
pop
sbb
daa
insb
pushf
mov
lret
ror
in
in
loopne
loopne
pop
scas
cmpsb
cwtl
dec
rcl
aas
testl
push
jnp
arpl
pop
inc
pop
jno
repz
sub
adc
cmp
sbb
shrb
ja
clc
pop
cs
or
mov
int3
add
fldt
push
jmp
pop
cld
xchg
xorl
jl
mov
xchg
dec
in
jbe
adc
data16
aam
ds
scas
sbb
xchg
jmp
cmc
out
jbe
cmc
sub
aad
sahf
icebp
incl
clc
and
insb
rolb
or
xchg
cltd
insb
sbb
inc
in
repz
xchg
pop
imul
inc
mov
xor
jno
leave
not
xor
lahf
mov
je
repnz
xchg
fcoms
mov
ja
sti
pop
jle
ja
les
cmc
dec
dec
cmp
mov
dec
add
dec
hlt
xor
loop
enter
sti
cltd
nop
pop
xchg
inc
mov
xchg
push
xor
add
xor
jo
hlt
out
scas
in
pop
stc
jp
sub
pop
lock
std
ja
fisttpl
mov
or
aam
mov
dec
jbe
jno
jmp
fsubp
push
inc
bound
xlat
scas
les
push
mov
addr16
lods
mov
adc
outsl
bound
jmp
std
cmp
into
ss
jo
adc
xchg
cli
lock
push
int3
push
add
cli
xchg
rcrl
outsl
sbb
stc
iret
and
mov
enter
xchg
cld
ret
cld
xor
sti
in
rcl
hlt
adcb
andb
pop
decb
mov
out
shl
test
pop
adc
mov
fsubl
ds
push
icebp
cmp
out
add
mov
nop
or
rolb
xchg
dec
mov
push
pop
ret
lret
mov
jne
push
into
sub
mov
push
stc
sub
les
jmp
fisubs
mov
mov
insb
insl
lds
mov
popa
out
sbb
mov
loop
fdivl
sub
fdivl
push
dec
repnz
xchg
iret
fistl
lods
arpl
add
in
in
divb
mov
xor
in
shll
in
mov
cmp
dec
mov
sbb
ret
enter
mov
imul
inc
adc
pop
inc
fnstenv
orb
daa
icebp
cmp
jmp
sub
xchg
xchg
or
aam
test
test
and
clc
das
sub
sbb
and
ret
nop
orb
ljmp
jae
adc
add
pop
sbb
adc
ror
jecxz
inc
dec
hlt
fiaddl
sbb
pop
mov
or
add
enter
into
mov
enter
mov
data16
scas
dec
and
leave
imul
fimull
arpl
inc
out
dec
sbb
jbe
scas
orl
mov
in
push
mov
push
mov
push
insb
jae
inc
shrl
cs
jbe
push
test
or
rclb
sbb
mov
scas
dec
mov
pop
aad
jg
js
cmpsl
cld
mov
pop
movsl
loop
addb
push
test
aaa
pop
xlat
jno
shll
decb
enter
dec
adc
cmp
dec
xchg
push
jb
mov
aam
jno
clc
push
or
adc
fisubl
add
fcoml
icebp
jae
arpl
arpl
push
frstor
aas
push
push
sbb
pop
stc
fistps
or
or
ret
pop
int3
adc
mov
mov
cmp
out
xor
pushf
pushf
mov
pop
fisttpll
adc
fisubs
out
pop
cltd
in
jge
insl
out
adc
inc
loop
enter
loop
ljmp
jg
loopne
jmp
sbb
push
xchg
adc
mov
add
out
scas
cmp
sub
sbb
mov
addr16
loope
cmpsb
repz
inc
and
add
cmpsl
das
stos
and
adc
jno
pop
lods
mov
rolb
mov
cmp
stc
pop
movsb
js
jmp
or
gs
mov
mov
cmpsl
push
push
pop
push
jge
imul
fs
loopne
mov
inc
jecxz
xchg
jle
nop
xchg
movsl
insl
ds
pop
fsub
pop
aas
xor
aam
fsubrs
xchg
mov
jne
push
bound
xlat
mov
leave
test
push
xor
adc
xchg
pop
adc
jnp
mov
imul
sub
addr16
sub
test
aad
or
sbb
aas
scas
push
mov
pusha
pusha
push
fldcw
xor
fistpl
loope
cmc
jo
filds
in
mov
mov
lahf
mov
dec
and
ss
idiv
call
fwait
adc
mov
cmpsl
addr16
in
cmp
sub
pop
mov
test
mov
jb
ds
dec
mov
jmp
add
jle
jb
mov
out
flds
or
inc
loope
mov
int3
mov
push
pop
mov
lahf
insb
cli
mov
lret
imul
and
daa
push
pop
orb
mov
jbe
imul
xchg
addr16
mov
test
inc
mov
out
add
inc
xlat
adc
pop
cmp
scas
std
sub
popf
fistps
mov
push
pop
mov
ja
les
jae
sbb
fcomp
pop
jae
aad
int
lods
mov
inc
jl
push
jmp
mov
shll
mov
mov
shrb
les
roll
xlat
ret
clc
pop
iret
xchg
jmp
inc
jo
pop
or
pop
popl
xor
cmp
imul
mov
push
ret
mov
push
fwait
sub
enter
iret
push
ret
or
mov
fs
test
inc
xchg
iret
xchg
mov
push
or
fstps
in
cli
xor
mov
in
mov
mov
fwait
sahf
mov
xchg
sbb
pop
iret
push
test
xchg
shll
and
jno
lcall
int3
inc
sbb
push
xchg
out
xor
mov
es
or
scas
shll
cmp
jge
aaa
pop
shl
dec
xor
inc
andb
aad
jno
xchg
sub
mov
loope
xor
pop
xchg
push
mov
scas
jmp
cmpl
mov
jns
xchg
lds
mov
inc
out
movsl
push
imul
out
fbld
enter
mov
repnz
outsl
inc
ret
xlat
jo
dec
ret
ljmp
andb
sbb
popf
xor
add
push
bound
push
inc
arpl
mov
mov
or
or
push
mov
pop
mov
imul
mov
xlat
xchg
fldt
mov
lods
in
es
hlt
or
filds
shr
insb
leave
push
dec
das
mov
or
and
mov
sub
sub
jge
lods
stc
mov
xor
push
movsl
arpl
loopne
xchg
xchg
pop
pop
dec
mov
xchg
jp
xor
mov
fwait
bound
adc
mov
sarb
daa
test
stos
rorb
pop
cmp
mov
shrl
cmp
sub
cmpsb
shrd
mov
add
jbe
out
aas
adc
stos
add
jns
inc
xchg
clc
xchg
xchg
shrb
out
inc
stc
add
sub
push
dec
or
rcll
add
push
sbb
addr16
test
jo
mov
xlat
mov
subb
outsl
sahf
fwait
scas
aas
push
jns
outsl
adc
and
out
cld
ficoml
out
mov
icebp
loop
adc
mov
cmp
jle
push
jno
sbb
mov
scas
cs
sub
icebp
xchg
jno
mov
xchg
push
popf
repnz
mov
jns
xchg
pop
push
pop
or
outsl
enter
mov
sub
arpl
sub
repz
push
dec
mov
nop
fisubrl
cli
sub
and
out
ljmp
jge
je
fcmovb
add
ds
jo
fnstsw
mov
aad
loopne
cmp
sub
dec
cmpsl
js
test
xor
jbe
into
add
and
sbb
jnp
mov
sub
dec
stc
clc
fisubl
add
into
add
mov
add
and
mov
dec
sub
push
insl
movsb
addr16
je
out
jb
aaa
ds
lret
mov
int
push
es
pushf
push
iret
das
xchg
jg
cmp
popl
sbb
pop
cmp
xchg
dec
test
data16
stc
or
sub
jo
adc
push
adc
mov
ret
out
push
adc
cmc
sbb
add
inc
push
insb
outsl
mov
mov
fprem
std
xor
insl
sar
mov
adc
push
ja
cmp
arpl
fldl
sbb
add
push
aas
out
aam
mov
xchg
cmp
sti
gs
in
mov
lock
dec
and
inc
movsl
aam
cmp
out
adc
mov
lods
inc
mov
int
cmp
jp
dec
shll
cmp
sbb
sbb
pop
jp
fisubrl
enter
scas
int
and
mov
js
sub
outsb
add
repnz
mov
mov
sbb
pop
iret
shlb
xlat
mov
sub
jge
or
sub
repz
mov
stos
cld
sti
das
jae
ret
inc
inc
add
lret
mov
pop
jno
stc
add
jae
and
cmpsb
add
fisubrl
push
dec
mov
jle
jno
pop
mov
push
mov
fwait
sbb
lret
or
icebp
adc
xor
ret
xor
and
sbb
call
jge
xor
loopne
fildl
adc
lret
int3
cwtl
adc
inc
fwait
pop
lret
and
inc
stc
sbb
sbb
push
nop
es
pushf
rcr
push
inc
icebp
cli
cltd
out
roll
shl
cld
add
fmul
mov
and
mov
or
lods
xchg
inc
pop
jb
dec
jb
rcll
loop
mov
into
in
lea
dec
jns
inc
adc
xor
lret
or
sbbb
out
test
outsb
imul
popa
scas
nopl
xor
test
pusha
jae
dec
or
dec
clc
xor
pop
xchg
icebp
mov
or
cmp
call
psrld
jmp
pop
ret
push
iret
imul
fisttpll
add
mov
push
insl
cmp
cmp
mov
sbb
xor
and
scas
popa
mov
or
push
sub
test
sar
adc
xchg
addr16
jb
aaa
std
add
fisttpll
mov
sbb
shlb
adcl
adc
jo
pop
rol
outsb
in
pop
mov
jns
in
sub
jl
mov
hlt
movsl
sbb
aas
daa
cmp
jl
mov
mov
sub
add
sbb
leave
mov
int
jle
scas
mov
insb
xchg
or
mov
inc
fbstp
mov
enter
out
cmp
mov
dec
fldt
sub
adc
lea
sbb
jbe
inc
ret
notb
arpl
rcr
inc
inc
loop
or
fnstsw
in
inc
repnz
cltd
enter
add
push
inc
mov
shr
mov
push
cmp
repnz
lods
aas
add
inc
shrb
push
and
add
push
pop
lret
das
arpl
lret
mov
ljmp
xor
lret
adc
loop
sahf
inc
lods
loope
dec
sbb
dec
jge
mov
or
jge
cs
add
push
fs
jmp
add
cmp
jae
mov
les
adc
inc
mov
dec
and
jg
mov
ret
jo
lds
and
aad
sub
pop
and
cltd
and
jbe
fmuls
sub
lods
mov
mov
mov
gs
movsb
dec
testl
lock
xlat
loopne
inc
and
dec
pop
ret
pop
jmp
lret
xchg
push
ficompl
pop
push
cmp
les
xchg
aad
mov
dec
xchg
or
rcl
push
incb
lock
aaa
repnz
mov
stos
shl
sbb
jmp
fs
lcall
jno
insl
xchg
mov
xor
lret
mov
fs
movsl
cwtl
test
loope
sbb
jne
push
scas
cmp
pop
cmp
jns
sarb
cs
or
dec
sahf
cmp
dec
fadd
cmpsb
data16
add
sub
mov
add
int
cs
inc
rclb
xchg
sti
push
ret
outsb
dec
and
fisttpll
loopne
xchg
test
pop
and
pop
jg
inc
mov
outsl
outsl
mov
add
push
lods
out
mov
lahf
in
lahf
mov
sub
ret
dec
mov
add
lahf
std
pop
sbb
or
add
aas
xchg
insl
sbb
into
testb
inc
outsl
mov
jo
out
imul
lret
cmp
lods
roll
mov
cmp
sbb
pop
push
iret
jne
sub
in
jae
sbb
loop
decb
outsb
pop
les
arpl
lea
mov
or
xchg
lret
jle
lret
test
call
test
ret
dec
icebp
xchg
into
mov
sub
pop
pop
mov
push
dec
pop
add
add
icebp
inc
jbe
out
jno
shll
out
pop
sub
imul
dec
inc
jbe
add
mov
cmp
jecxz
dec
mov
sbb
adc
in
and
jp
cmc
aas
subb
inc
jae
xor
xchg
arpl
push
mov
jne
aaa
aad
movsb
inc
fwait
call
sub
shrl
jp
inc
repz
and
adc
xchg
outsl
clc
sbb
dec
int3
insl
mov
mov
test
mov
sbbl
mov
push
fwait
mov
adc
popf
bound
sahf
mov
clc
push
and
jnp
dec
bound
outsb
sbb
and
lods
imul
loopne
jmp
sbb
sub
fists
add
outsl
jg
mov
clc
push
prefetchwt1
sbb
gs
dec
adc
movsb
xor
rep
rolb
pop
rclb
stos
iret
dec
dec
call
fidivs
push
lret
aad
adc
out
popa
inc
out
pop
add
dec
jp
daa
addl
sub
sub
dec
test
xchg
leave
icebp
daa
jo
lds
ret
push
or
mov
enter
sbb
sbb
fwait
mov
sbb
xor
jbe
mov
cs
imul
fsubrl
jno
or
fimull
adc
mov
ret
ffreep
pop
lods
mulb
cmp
test
scas
mov
nop
and
mov
int3
jp
dec
push
inc
div
mov
pushf
xchg
sbb
jl
arpl
pop
ret
inc
and
ficoml
push
mov
or
jo
xchg
cmpsl
ds
jns
arpl
xor
push
sub
movsl
and
push
sub
aaa
enter
aam
add
test
mulb
shl
cmovo
pop
out
cmp
or
ds
lock
xchg
repz
and
enter
cmp
stos
pushl
xchg
add
popa
or
inc
repnz
pop
ds
pop
imul
data16
dec
scas
das
cld
clc
xor
loop
imul
dec
in
xchg
je
daa
shl
lahf
into
subb
out
fists
cmc
testb
scas
and
rcll
sub
mov
jb
mov
hlt
imul
out
push
dec
aaa
sbbl
dec
in
cmp
incb
inc
cmpsl
cmp
or
in
inc
nop
xlat
xor
or
aam
out
in
pusha
pop
mov
xchg
mov
jl
mov
push
sub
adc
adc
sub
push
jne
mov
xchg
std
mov
mov
and
and
das
jmp
mov
mov
rol
push
mov
cmpsl
sub
push
cmp
lock
xchg
cs
sti
push
inc
sub
enter
inc
or
dec
xorb
pushf
jle
je
push
jno
fwait
mov
or
xchg
popa
out
and
cmp
mov
clc
popf
push
jb
data16
fisttps
divb
clc
fdivl
in
arpl
rcll
or
add
testl
and
pop
imul
stos
xor
inc
bound
push
push
daa
out
sbb
in
popa
ljmp
dec
sub
xor
adc
sbb
dec
jl
int3
fdivrl
iret
adcl
mov
movsl
add
adc
lret
lods
mov
aad
or
push
cld
in
xchg
insl
cld
aas
cmp
dec
lret
push
ss
inc
sub
and
cmpb
or
test
mov
imul
nop
push
or
shlb
dec
xor
std
loope
dec
cmp
jns
es
mov
jne
pop
aad
lods
add
push
cltd
and
nop
pop
xchg
adc
je
adc
test
jb
iret
cmp
push
popa
add
or
xchg
out
int3
arpl
testl
pop
rol
inc
test
pop
and
mov
bound
xor
cmp
and
inc
xor
mov
es
ds
mov
inc
es
out
push
xlat
cwtl
cltd
das
xor
lret
enter
pop
lods
iret
mov
rorl
lret
cmp
xchg
repz
sub
pop
sub
mov
iret
bound
dec
push
jbe
clc
adc
out
in
icebp
fnstcw
adc
call
or
adc
inc
fstpl
sbb
je
dec
fsubl
test
stc
les
mov
arpl
out
pop
mov
fidivl
push
popa
adc
push
xor
jge
add
ljmp
pop
mov
jle
push
mov
jns
mov
xchg
xchg
divl
shlb
bound
cs
int3
cmp
xlat
dec
sub
adc
adc
ss
pop
jnp
add
stos
out
xor
xlat
or
xchg
hlt
test
push
arpl
xchg
divl
jb
out
adc
mov
xorl
cltd
cli
shlb
cmc
cmp
iret
cmpsl
add
mov
and
cmp
fsubs
cld
cmpsl
inc
mov
les
loopne
ja
data16
xchg
mov
xor
popf
inc
fbstp
and
movsb
cmp
arpl
sub
mov
sbb
mov
push
and
jmp
popa
inc
mov
jge
jp
mov
pop
or
xor
cmp
sub
int3
sub
or
add
mov
mov
cwtl
mov
jno
roll
sub
ret
ja
jl
inc
mov
ficomps
add
int3
jb
int3
popa
lods
fwait
mov
mov
into
xor
aaa
es
adc
or
adc
movsl
mov
int
dec
inc
push
or
inc
repz
mov
cmp
sbb
cmc
dec
in
dec
push
pop
incb
insl
clc
cli
mov
out
imul
test
sbb
lret
orb
inc
enter
testb
mov
mov
pop
jb
sub
pusha
sbb
adc
xor
mov
adc
xor
inc
jnp
mov
cmp
xchg
mov
rcrb
xor
ret
cmp
pop
xor
mov
fnstsw
adc
mov
gs
loopne
lea
jnp
ret
add
sub
jmp
push
aas
jl
std
popf
out
test
fisubrs
insl
test
mov
leave
xor
sub
inc
outsb
mov
fcmovnu
shrb
arpl
jl
add
adc
out
aaa
loop
lcall
pop
cmpb
mov
rorl
jmp
xor
sub
pop
and
aad
test
sbb
and
pusha
pop
sub
or
adc
jle
in
js
test
bound
push
xlat
xor
mov
gs
mov
imull
mov
imul
mov
inc
mov
loop
inc
or
jge
add
xor
pop
testb
sub
leave
push
in
push
mov
ret
jge
negb
inc
ja
nop
and
aam
stos
and
jae
stos
dec
adc
push
dec
repnz
cld
rcll
sub
jg
adc
insl
pop
loope
jg
inc
sub
jge
push
jnp
out
xchg
push
jnp
adcb
lcall
dec
les
and
push
and
jle
push
sub
pop
pusha
sbb
xchg
imul
xor
jb
ss
jae
pop
hlt
cltd
js
je
push
mov
mov
sarb
es
adc
dec
add
xchg
dec
mov
jne
push
mov
add
jl
or
or
and
das
enter
fstpl
push
or
pop
mul
and
rcll
adc
mov
add
pop
pop
adc
push
xchg
or
dec
mov
pusha
aas
insb
mov
adc
and
mov
rcl
fcoms
sti
push
push
jle
inc
cmp
pop
nop
call
lcall
or
leave
inc
xor
cmpsb
pushf
loope
pop
dec
and
push
loope
mov
inc
fsts
mov
adc
repnz
mov
repz
jae
pop
sbb
xor
cs
dec
ja
inc
add
push
add
subb
adc
pcmpgtd
push
sub
fldenv
xchg
enter
lock
sub
test
test
jge
lret
mov
pop
sub
sbb
and
mov
lcall
xlat
pop
pop
push
shrl
test
sub
mov
jecxz
xor
jge
pop
or
lods
ret
pushf
push
or
cld
imulb
pushl
sti
shll
ds
repnz
add
jae
xor
scas
jnp
in
ljmp
rolb
mov
loop
xor
adc
imul
int3
lods
and
sbb
call
lahf
imul
fisttpl
je
sbb
xchg
loope
jmp
into
jnp
mov
pop
fs
aaa
mov
or
pop
outsl
and
clc
sbb
pusha
aad
pop
mov
stc
std
jl
std
movsl
pop
cmp
test
mov
mov
adc
hlt
push
mov
imul
lahf
lea
xchg
ja
jbe
out
adc
insl
sbb
jl
xchg
and
dec
or
pop
xchg
add
cmp
xchg
aam
jnp
mov
inc
sahf
jg
inc
out
mov
xor
pop
or
out
test
or
cmp
inc
jns
clc
mov
mov
je
push
daa
fisttpll
and
fucom
inc
jno
push
clc
rcll
dec
in
mov
dec
jns
push
out
dec
sti
lods
testb
stc
inc
out
jp
add
dec
jecxz
imul
or
jge
adc
mov
ss
mov
aad
aad
inc
push
shrl
add
jecxz
xor
xchg
gs
test
sti
jmp
subb
inc
and
push
mov
adc
gs
pop
loope
xor
adc
int
ficoml
cmpsl
and
pop
mov
out
push
test
js
adc
aas
mov
dec
jb
hlt
cmpsb
je
and
push
mov
pop
jns
ds
pop
cmp
jb
lea
fs
and
xor
aaa
cld
sub
cli
mov
rcrb
and
outsb
mov
cld
push
add
stos
push
inc
cmp
data16
loope
cltd
sti
sub
outsl
pop
mov
xor
ret
fucomip
push
fsubl
dec
andl
adc
mov
out
outsb
adc
popa
mov
insb
jnp
mov
inc
push
scas
je
pushf
cld
out
nop
jmp
or
push
fwait
push
insl
shrl
ds
xchg
or
dec
jp
int
lret
sub
xor
xor
fmull
or
jg
dec
out
test
js
out
rcrb
push
push
and
fiadds
inc
jo
xchg
es
dec
mov
jns
stos
aad
sbb
fsubrs
sub
aas
dec
inc
sbb
push
inc
dec
adc
loop
jle
mov
shl
scas
or
sub
popf
push
jg
inc
loope
movb
jp,pn
stc
mov
sbb
leave
roll
mov
loopne
dec
es
mov
test
add
pop
mov
and
int3
pusha
inc
jge
negb
or
push
jbe
sti
mov
push
mov
imul
aad
movsb
jb
jecxz
mov
mov
incl
jl
nop
mov
repz
cmp
ds
jle
shrb
test
xchg
pusha
mov
es
lahf
mov
stc
mov
push
test
sbb
mov
pushf
leave
repz
rcr
loopne
daa
dec
test
pop
cmpsl
push
gs
nop
mov
and
jecxz
add
cmp
cltd
pop
pop
in
cmp
and
xor
pop
mov
xchg
outsb
mov
cltd
scas
mov
fisttps
and
clc
ja
sti
push
clc
shrb
nop
out
out
fildll
mov
mov
adc
and
roll
loop
iret
flds
xchg
je
adc
scas
frstor
rcll
push
pop
loop
pushf
jmp
test
jmp
into
inc
push
jmp
sti
lahf
pop
inc
jo
dec
mov
or
push
dec
ja
inc
loope
cmp
fldcw
jbe
adc
pop
push
mulb
out
test
pusha
mov
in
jnp
mov
cmp
add
mov
movsb
push
push
rcll
bound
lcall
test
out
fildl
shll
pushf
hlt
push
jmp
pop
fwait
pop
and
cmovb
lret
int3
xlat
mov
xchg
scas
pop
repnz
test
xchg
idivl
xor
inc
jo
adc
mov
pusha
je
xchg
sub
aaa
movsl
mov
and
lret
adc
inc
stos
xchg
lock
in
fsubr
out
adc
sbb
push
lahf
push
movsl
mov
jae
jns
cmp
dec
lahf
nop
outsb
mov
mov
icebp
sarl
cmpsl
iret
fdivs
sbb
cmc
pop
inc
mov
insb
or
arpl
or
mov
cmp
mov
rcrb
or
ljmp
mov
xchg
pop
mov
xlat
mov
hlt
or
rcrl
nop
cmpb
ret
pop
imul
fwait
subl
push
idivb
adc
adc
sub
push
addr16
cmp
enter
sbb
lret
jae
mov
xor
loopne
les
mov
cmpsl
cmp
mov
nop
push
test
dec
inc
pusha
mov
xor
fwait
in
jp
test
push
add
movsl
push
and
pop
and
add
inc
aaa
popl
movsb
pop
adc
out
inc
cmp
mov
in
daa
lcall
xchg
cli
scas
mov
inc
sahf
dec
ret
lods
dec
add
push
xchg
popa
sahf
dec
popa
push
adc
test
scas
or
arpl
cli
mov
xchg
lds
xchg
and
aas
jbe
cmp
pop
fistps
dec
insb
sbb
sbb
repnz
lret
sub
add
call
enter
test
cmp
mov
jle
cmp
mov
xchg
mov
sub
mov
sub
jecxz
xor
leave
lcall
mov
test
adc
cli
xor
mulb
in
imul
stos
stos
aaa
lret
xlat
stc
rorb
insl
add
xchg
insl
loop
sub
push
push
dec
dec
inc
xor
jl
and
cwtl
int3
iret
aam
add
rcrb
jns
rclb
xchg
or
pop
jg
push
dec
lea
mov
stc
fs
fistps
imul
sbb
adc
push
cmp
dec
or
mov
fistpl
add
int
dec
push
lods
push
daa
popw
outsb
outsb
das
mov
mov
sbb
lods
jo
pusha
inc
out
vmovaps
popa
mov
push
test
xchg
sbb
sti
scas
mov
add
push
cmp
push
sarl
push
iret
movsb
daa
adc
mov
cwtl
jns
int
jl
cmp
mov
stos
push
push
jns
pop
cmp
add
sub
aam
gs
ljmp
push
push
xlat
jbe
xchg
push
mov
mov
repz
mov
in
imul
mov
jbe
cmpsl
or
or
dec
mov
xchg
cli
and
mov
dec
std
pop
ja
std
fisubl
sarl
ss
mov
shrb
test
out
mov
push
jl
shr
sbb
daa
pop
scas
xchg
arpl
mov
push
in
stos
sbb
lret
inc
out
cld
pushf
xchg
mov
fsubl
push
frstor
mov
jecxz
sahf
inc
and
pusha
push
mov
add
cmp
lret
arpl
pop
cmpsl
mov
cmc
sub
js
inc
pop
xlat
pusha
sbb
fsubrs
fidivrl
lods
sbb
scas
fdivl
push
jne
icebp
pop
mov
nop
xchg
lahf
subb
jp
cmp
sbb
pop
fnsave
popa
stos
js
push
daa
xchg
insb
ror
add
imul
xchg
push
pop
hlt
sbb
and
rorb
add
add
or
insb
mov
not
jne
enter
out
mov
std
push
push
lods
xlat
test
cmpsb
push
jp
les
les
cld
out
cmp
cs
mov
mov
pop
mov
loopne
and
mov
pop
bound
iret
negb
ss
loope
in
cmpsl
or
sub
or
adc
imul
in
mov
xor
sub
push
popa
push
cmp
or
xor
ret
sub
lcall
cli
sbb
cli
aam
inc
rcrb
and
fidivrs
adc
push
les
into
ficomps
dec
push
jle
fstps
pusha
pop
mov
subb
sub
jmp
push
push
sbb
iret
jno
repz
ljmp
add
jle
outsl
lods
jne
sbb
jne
adc
pusha
test
inc
push
fwait
cmpsl
ds
in
int
loope
sbb
sti
mov
repnz
add
pop
push
hlt
add
dec
xchg
mov
add
repz
adcl
repnz
stos
mov
movsb
iret
xchg
inc
fildll
dec
clc
das
and
mov
jns
xchg
xor
adc
xchg
xchg
mov
dec
lcall
roll
sbb
or
sub
pop
mov
push
xchg
push
sbb
cmpsl
xor
inc
das
es
fnstenv
ret
iret
fisttpll
jmp
push
inc
popf
push
pushf
push
fstps
orl
ljmp
mov
imul
mov
rcr
push
inc
ljmp
pusha
add
repnz
fyl2xp1
movsl
pop
jl
sub
imul
clc
insb
mov
ret
test
daa
sub
dec
xor
ja
inc
insb
jg
mov
sub
mov
subb
xlat
adc
aas
mov
aas
daa
pop
or
cltd
xor
mov
fs
add
movsb
ficomps
pop
push
out
ss
or
dec
jns
out
sbb
xor
xchg
dec
adc
pop
xchg
dec
dec
movsl
outsb
loop
adc
jns
xor
mov
in
xor
push
outsl
aam
sub
jmp
pusha
push
jnp
sarb
repz
mov
xchg
out
andnps
sub
sub
xchg
rcll
cmp
jmp
int
push
loopne
sub
adc
ficomps
test
or
add
lock
xchg
pop
cmp
movsb
cmp
shlb
cmc
stos
std
xor
mov
rorb
lods
rcll
mov
leave
out
push
mov
rorl
mov
arpl
inc
cli
rorb
rcr
int3
sbb
in
push
mov
xor
add
clc
inc
xchg
add
in
sbb
iret
mov
mov
ja
in
addl
popf
xchg
mov
xor
fstpt
mov
stc
mov
fistps
sub
or
rolb
nop
lods
push
dec
inc
sub
test
outsl
pop
sbb
push
aam
mov
movsl
stc
inc
enter
push
gs
or
lcall
clc
lods
xor
pop
ljmp
ja
ljmp
fimull
adc
sub
adc
das
scas
in
stos
xchg
mov
and
in
lds
call
and
movsb
fildl
repz
fimull
dec
adc
sbb
in
dec
jmp
stos
fsubs
subl
add
cmpsl
insl
cmp
and
iret
mov
mov
cmp
mov
jmp
xchg
hlt
dec
sbbb
in
and
jp
sbb
cmpsl
fimuls
lret
inc
sbb
inc
lahf
testl
mov
cmpsb
arpl
jl
rorb
fcomi
inc
cmpsl
inc
bound
push
arpl
jmp
stc
ficoms
xor
xchg
sbb
adc
adc
imul
insb
test
psubsb
pop
mov
mov
pop
xlat
stc
jnp
xor
adc
clc
mov
mov
in
sbb
inc
and
jns
fistpll
pop
test
pop
sbb
adc
inc
xor
fcmovbe
or
inc
sub
pop
ljmp
das
push
adc
jb
dec
cmp
sub
call
sub
int
pushf
les
sti
and
arpl
bound
aas
loopw
outsb
test
lret
aaa
push
xor
fnstenv
in
int
cmp
movsl
push
loopne
xor
xchg
aas
int
mov
mov
daa
sbb
push
andnps
cmpb
je
mov
pusha
xorl
xchg
xchg
inc
lret
int3
out
stos
xchg
call
cli
xchg
cmp
adcb
ret
dec
ds
push
adc
into
jo
xchg
shlb
push
dec
pop
and
fnsave
inc
adc
xchg
fld
add
out
push
fmull
pusha
cmp
sub
int3
aas
cltd
femms
xchg
cmp
insl
or
pushf
push
call
mov
adc
add
insl
icebp
jmp
data16
dec
add
or
or
inc
cmp
jecxz
clc
cmpsl
xchg
pushf
cli
fistps
js
mov
jne
shlb
mov
test
push
sub
add
loopne
mov
pop
cli
test
jp
dec
sbb
mov
push
mov
ffree
cs
std
imul
ret
leave
lahf
inc
push
mov
xchg
shll
and
push
data16
push
jo
dec
or
push
push
ds
mov
xchg
popa
xchg
ljmp
cmp
mov
sahf
lret
lahf
xor
pop
arpl
leave
lret
in
ret
mov
push
iret
jecxz
xchg
lcall
arpl
inc
and
mov
push
fidivs
out
dec
xchg
js
cmp
inc
out
adc
cmpsb
jp
adc
mov
pop
add
addr16
pop
test
dec
psllw
jbe
mov
and
hlt
cs
inc
mov
cmp
sbb
aas
push
push
test
mov
clc
xor
lods
push
lock
movsb
pop
sbb
xor
bound
jecxz
cmp
and
xchg
cmp
xchg
push
dec
test
std
jo
mov
movsl
mov
mov
dec
jo
or
lods
les
movsb
sarb
jmp
dec
insb
cmp
into
pushf
adc
mov
pop
loope
aaa
push
xchg
sub
int
test
in
ffree
scas
test
adc
es
and
and
jne
cmp
popa
nop
inc
aad
jl
xlat
xchg
loopne
mov
pop
ret
les
inc
sbb
or
test
scas
or
leave
xchg
ret
out
xor
inc
add
scas
adc
jne
dec
std
in
jbe
mov
repnz
imul
inc
push
mov
mov
push
jno
sub
jmp
ret
dec
inc
xchg
daa
test
push
mov
movsb
fs
sbb
and
jbe
outsb
pop
pop
adc
pop
mov
xchg
xor
pop
push
xchg
fwait
mov
sbbb
push
add
out
dec
mov
loop
adc
pop
mov
subl
inc
addr16
in
shlb
xchg
sarb
sti
dec
dec
mov
cmpsl
in
pinsrw
or
jecxz
lods
bound
pop
push
push
xor
xchg
orl
fwait
pusha
sti
push
test
loope
int
outsl
icebp
rcr
je
in
invd
test
dec
add
lret
into
imul
mov
rorl
or
mov
pop
cmp
imul
popa
xchg
inc
pop
pop
dec
pop
mov
mov
mov
sub
and
or
add
add
subl
push
rolb
dec
rcr
or
cmc
mov
fldl
add
push
jg
jle
push
aas
or
rol
fdivrp
lahf
les
push
jle
stc
sub
push
pusha
jns
jmp
hlt
mov
and
cmpsl
adc
gs
mov
movsb
cmp
push
xchg
mov
push
inc
popa
leave
sbb
dec
xorb
sub
jb
push
repz
pusha
cmp
add
fistpl
xchg
jmp
push
sti
repz
inc
mov
mov
jmp
mov
xor
lret
jecxz
loop
mov
notl
dec
clc
or
push
arpl
mov
fidivl
or
imul
fs
call
dec
je
add
mov
clc
inc
mov
in
shlb
dec
push
loope
pop
or
push
dec
adc
pop
inc
sbb
loope
add
xchg
popa
jp
lret
insb
fnsave
push
xor
addb
out
mov
cmp
xchg
cmp
repz
ljmp
cmp
test
mov
push
dec
or
mov
cmp
movsl
fs
repnz
das
scas
aas
cmpsl
xor
hlt
pushf
ret
inc
adc
push
mul
jge
or
xchg
or
test
imul
xchg
fistl
sub
add
xchg
push
sub
xchg
sub
loope
lret
mov
sub
scas
shl
inc
adc
sahf
xor
dec
adc
pop
jb
ss
sbb
mov
push
or
jns
cmpsl
xchg
test
mov
cmp
negb
movb
push
lea
cmp
pusha
int3
mov
outsl
rcll
dec
into
xor
cmp
ficoml
mov
loop
dec
stos
nop
xchg
jbe
or
xchg
rcrl
lret
dec
cli
cmp
adc
pop
syscall
adc
and
movsl
xor
xor
mov
imul
add
and
out
xor
push
and
lods
hlt
mov
lock
xor
push
movsl
leave
enter
cmp
inc
std
pusha
bound
mov
pop
loope
mov
mov
jns
mov
push
cwtl
xlat
imul
testl
movsl
loope
mov
xor
addr16
adc
in
movsl
shrl
mov
daa
mov
les
adc
jmp
push
push
outsl
ret
in
jecxz
mov
xchg
adc
sub
xorb
cmp
pushf
test
ds
cltd
pop
xchg
ret
mov
jns
movsl
sahf
cmp
sbb
push
pop
in
cs
mov
cs
dec
add
leave
stos
jno
int
repnz
int3
add
inc
jl
sbb
aad
cmp
mov
fcom
cwtl
sub
loope
jge
test
adc
xor
add
orl
sbb
dec
pop
imul
mov
xchg
inc
mov
inc
icebp
add
stos
loope
sbb
popf
outsb
adc
call
outsl
and
arpl
stc
enter
repz
push
into
test
cwtl
sbb
shll
inc
call
inc
ret
inc
jge
sarl
add
and
andl
iret
into
popa
push
mov
test
pop
stos
cmpsl
mov
cmp
cld
or
and
repz
and
aad
shll
sub
push
or
and
mov
push
outsl
inc
idivb
cmp
leave
int3
int3
mov
mov
lods
and
inc
ss
inc
and
or
lods
in
shl
in
shlb
and
adc
jge
sbb
pushf
or
cmpb
js
xchg
insl
mov
dec
pop
bound
test
repnz
jne
jbe
shll
sub
pop
psrlq
ss
inc
fwait
inc
aad
cs
inc
sbb
adc
scas
inc
mov
arpl
xor
mov
decb
cmp
pop
push
in
inc
xor
xorb
mov
push
lcall
adc
xor
mov
mov
pop
aaa
or
pop
or
leave
dec
stos
inc
mov
mov
movsb
sub
sahf
mov
lods
ror
push
add
jmp
into
fwait
outsl
iret
jge
std
aam
cmp
adc
cli
repnz
js
sbb
sbb
imul
mov
xchg
rorl
cmp
cmpsl
dec
shlb
xchg
ffree
shlb
jnp
pop
lret
packsswb
inc
loop
repnz
mov
ret
xchg
std
test
cmp
cmpb
jg
jb
int3
cltd
pop
pushf
dec
cmpsl
cli
push
xchg
mov
cs
movsl
xorb
in
nop
push
pushf
lret
daa
scas
and
loop
add
js
cs
fcmovnb
mov
inc
xor
idiv
out
mov
fdivrl
loop
repz
lcall
mov
in
icebp
call
lret
inc
jmp
movsb
jmp
int3
pop
adc
dec
jg
shl
jg
mov
and
imul
test
lret
shll
dec
add
sbb
cmp
sti
rorl
sbb
xchg
dec
insb
pushf
mov
push
sbb
mov
or
fidivrl
dec
fst
jmp
dec
pop
push
movsb
jae
pusha
adc
mov
adc
arpl
mov
popa
xor
mov
mov
jno
jns
cmc
in
test
mov
mov
test
adc
or
sub
adc
mov
xchg
xor
test
sbb
iret
lahf
jg
add
sbb
test
dec
lahf
cld
test
ret
cli
cmp
mov
fstpl
flds
and
sbb
jne
adc
xor
sti
insb
sbb
jne
pop
or
cmp
jns
inc
sahf
cli
dec
mov
pop
mov
popf
sbb
mov
push
repz
sbb
mov
fstps
sub
mov
popa
enter
js
pop
sub
jb
loop
dec
in
or
ja
mov
cltd
mov
mov
lods
into
sbb
xlat
jo
mov
sbb
or
in
dec
mov
ret
mov
les
enter
jl
mov
cmp
xor
mov
leave
outsb
ss
add
pusha
stos
xchg
jl
xchg
or
int
bound
mov
fsubrl
push
sub
xor
push
sub
xor
dec
cmpsl
pushl
push
imul
jmp
dec
push
ficompl
and
popa
pop
sub
cmp
push
in
mov
nop
mov
xchg
shl
outsb
test
rol
dec
mov
sbb
scas
outsl
or
mov
dec
jmp
lods
cld
push
lods
stos
daa
push
jbe
test
push
mov
repnz
xchg
inc
jp
cmp
pop
inc
mov
insl
dec
aas
rcrb
std
nop
pop
or
fbstp
pop
cmp
or
lcall
incb
pop
mov
cmpsl
or
xchg
aaa
pop
add
pop
add
add
mov
mov
cli
push
push
outsb
lret
test
leave
pop
dec
sbb
add
inc
das
scas
mov
into
and
outsl
mov
or
dec
add
popa
mov
call
add
mov
cmp
lock
mov
lahf
mov
mov
js
adc
add
rol
cmpsb
or
inc
out
xchg
xchg
xchg
fbld
pop
pop
fisubl
push
lret
leave
dec
jle
sub
cltd
sahf
push
dec
jae
push
xchg
sbb
loope
xchg
dec
adc
inc
xchg
xchg
pop
sti
sbb
sahf
or
mov
cli
inc
movl
ret
inc
fisttps
les
stos
add
stos
stos
push
jecxz
push
lcall
aam
out
ds
inc
test
jp
mov
loop
imul
into
inc
inc
mov
pop
pop
pop
add
sti
fidivrl
fnstsw
xor
or
out
sub
dec
add
xor
fwait
movsl
iret
xchg
xchg
mov
and
sti
arpl
jge
push
test
push
jle
sbb
sahf
mov
shlb
mov
fdivp
mov
leave
int
mov
mov
out
mov
pop
and
divl
fs
xchg
lock
js
movsl
je
dec
ja
or
scas
dec
into
aas
nop
adc
pop
inc
rorb
adc
scas
leave
test
lret
and
and
ficoml
loop
push
icebp
mov
xchg
cmp
inc
sub
mov
sub
xor
test
jns
popf
aad
xor
sub
adc
inc
addr16
scas
sub
xor
enter
test
push
and
push
clc
xlat
lret
fimull
jbe
jno
sti
cmp
lods
pop
add
cmp
fisttps
repz
xchg
mov
dec
jno
jne
or
pop
sbb
in
adc
into
fistpll
jnp
scas
mov
mov
dec
int3
jae
cmp
and
stc
cmp
sbb
jns
push
repnz
mov
dec
pop
notl
nop
pushf
xor
adc
icebp
inc
pushf
not
dec
xchg
ja
dec
jns
out
cmp
jmp
and
pop
aas
ret
add
add
shlb
sbb
cmp
std
add
cltd
and
xor
or
sarb
mov
sbb
push
mov
fdivrs
mov
dec
into
and
add
addr16
pop
mov
jo
pop
jge
push
arpl
xchg
test
fiaddl
jnp
ss
je
pushf
imul
dec
dec
xlat
xor
mov
mov
sbb
fistpll
cld
sbb
xor
cmpsb
adc
or
adc
jle
imul
out
test
jmp
faddl
insb
fstl
pop
dec
outsl
inc
shrl
jbe
mov
mov
sub
xchg
in
dec
fisubl
sub
xor
mov
std
hlt
dec
pop
scas
push
or
jmp
dec
mov
lret
out
dec
daa
js
mov
cmpb
pop
pop
or
in
das
mov
cs
push
lcall
sub
addr16
push
sub
push
mov
lret
icebp
int
std
pop
ficoml
cmp
iret
cmc
jmp
aas
cmp
pop
inc
les
and
es
fsts
jne
xor
xchg
scas
xchg
xchg
xchg
addb
bound
and
dec
push
mov
and
pop
mov
in
jo
inc
mov
lret
ja
mov
out
inc
loop
mov
xchg
cmpsb
subl
lds
xchg
popf
pushf
scas
mov
int3
pop
inc
sub
sub
clc
shlb
mov
sub
dec
pop
or
sbb
ficoms
daa
push
or
xchg
lods
mov
mov
stc
sub
xchg
add
jno
inc
adc
aaa
lahf
pusha
sbb
rcr
adc
mov
dec
dec
or
push
xchg
mov
ljmp
and
loope
ljmp
and
jb
jno
fnsave
adcb
rcll
nop
mov
inc
call
mov
lcall
add
xorl
pop
inc
cmpsl
pushf
xchg
xchg
lea
push
xchg
shll
or
clc
add
scas
outsb
mov
test
aas
dec
movsl
push
push
mov
test
xchg
insl
cmp
push
int
dec
xor
fnstsw
adc
add
mov
jbe
mov
roll
ljmp
jg
or
mov
sbb
in
lret
fbstp
scas
ja
mov
lret
cli
xor
inc
sahf
loope
dec
call
bound
aad
popa
enter
pop
movsl
movsb
push
arpl
mov
inc
mov
jnp
lock
repnz
mov
cs
cmp
inc
outsb
aam
or
fdivrs
pop
push
cmp
jl
push
xlat
stc
xchg
add
frstor
rcll
fildl
push
call
lock
cmpsb
dec
test
sarb
lods
scas
mov
data16
shl
imul
dec
subl
fimuls
mov
cli
fstl
scas
inc
lret
stc
inc
or
add
jge
mov
sub
in
addr16
push
test
mov
jg
icebp
and
imull
jb
mov
stc
loopne
in
arpl
in
jp
and
adc
add
adc
push
mov
mov
in
lods
dec
stc
dec
add
loopne
cmp
adc
es
sbb
and
cmpsl
mov
mov
jo
stos
sub
or
mov
mov
and
ret
sahf
ljmp
xchg
mov
push
in
inc
push
xchg
cmc
jle
mov
cwtl
dec
in
pop
push
shl
rcrb
std
loopne
imul
and
xchg
jmp
mov
inc
sahf
xchg
mov
sti
pop
clc
fnstsw
push
pop
popa
mov
inc
icebp
daa
pop
fmull
fsubs
jno
xchg
aaa
mov
xchg
mov
daa
xor
lcall
mov
sbb
dec
jnp
int3
data16
xor
movsl
add
pop
mov
xor
sarl
mov
pop
mov
fldl
mov
adc
adc
jecxz
mov
aas
and
cmp
int
adc
sahf
popa
mov
push
sub
lea
sub
int3
stos
dec
fwait
cltd
scas
pop
xchg
cmp
sahf
test
cmp
dec
inc
call
cmc
ja
icebp
or
stc
sahf
push
mov
aas
mov
mov
test
adc
mov
mov
jecxz
insl
dec
inc
fstl
mov
sbb
adc
jg
inc
out
sub
dec
aas
std
outsl
adc
or
std
fstpt
mov
mov
movsl
mov
sub
xchg
cmp
fs
pop
fldt
push
mov
sbb
sub
data16
sub
adc
or
push
sub
insb
in
xchg
jmp
cld
mov
inc
rol
sbb
or
and
push
push
pop
mov
pop
sbb
mov
pop
lods
subl
and
mov
mov
add
pop
add
jl
shll
lret
lahf
scas
push
in
push
sahf
ss
inc
addr16
mov
mov
loope
add
dec
dec
xchg
iret
jl
dec
fmul
mov
mov
orl
jb
mov
mov
rcrl
test
lea
fs
pop
les
in
add
add
pop
popf
push
daa
or
mov
mov
ja
ret
cmp
sti
frstor
push
fwait
cmp
mov
lahf
rorb
sbb
in
push
aam
xor
out
sti
cmp
inc
pusha
or
outsl
push
int
es
xor
mov
cmp
icebp
leave
inc
cmc
das
out
js
add
or
adc
pop
jmp
test
cmp
jne
mov
lds
or
out
mov
sbb
cmpsl
and
cmp
inc
test
ret
mov
cld
sub
popf
jno
mov
ja
repnz
jb
jg
sbb
and
push
lcall
lods
test
jb
add
out
push
ja
nop
push
push
or
popf
pop
xchg
fldcw
pop
xor
inc
mov
dec
fimull
mov
xor
cmpl
xchg
and
dec
call
pop
hlt
nop
inc
dec
jnp
pop
mov
pop
jg
inc
jp
in
add
cli
mov
decb
add
cmp
sub
ret
insl
ja
sahf
popa
shll
loop
add
daa
fbstp
xor
and
lcall
popa
in
andb
mov
mov
cmpl
pop
sub
ficoml
adc
cmp
jle
inc
shr
clc
mov
push
sti
sub
outsl
inc
sub
mov
lds
push
push
cmp
pop
repz
int3
mov
adc
and
pop
lcall
pop
mov
jbe
inc
hlt
iret
gs
jg
pop
nop
es
stos
dec
loope
bound
mov
hlt
std
xor
push
add
mov
in
xchg
aam
js
loop
push
pop
rorb
mov
mov
pop
adc
and
inc
fisttps
ficompl
adc
sbb
aad
arpl
lock
imul
mov
fadds
fdivrs
int
enter
jge
shrl
lret
out
testb
inc
popa
in
out
jge
and
es
imul
mov
mov
js
loopne
adc
sahf
ja
add
adc
fs
mov
xor
xchg
fldcw
int
push
push
xchg
add
lret
decb
push
pushf
mov
pop
lret
imul
mov
mov
jae
xor
mov
push
push
dec
dec
jle
cmpsb
out
push
cltd
mov
xchg
cltd
or
nop
jp
imul
aad
jne
cmp
cltd
dec
dec
mov
adc
stc
push
cs
add
cmpsl
pop
pop
aam
test
mov
pop
pop
sub
popa
add
shll
fst
pop
loop
cli
sbb
sbb
out
rcl
cs
or
sbb
inc
pop
popa
inc
mov
fnstenv
aas
mov
out
mov
shlb
sub
and
pushf
das
sub
enter
lods
push
ret
stc
lahf
add
mov
jmp
push
dec
dec
pushf
mov
fisubs
mov
push
lahf
repz
dec
mov
out
xchg
in
and
xor
gs
cmp
cwtl
fiadds
in
stc
fstp
inc
xchg
pop
shl
sbb
push
and
dec
cmp
stc
lds
sub
lods
xor
pusha
jo
and
cmp
mov
xor
test
mov
cmp
dec
stos
aam
mulb
or
adc
fsubrl
frstor
inc
xor
mov
test
cmpsl
clc
add
pop
add
popa
push
mov
inc
movsb
scas
repnz
bound
sti
out
lds
pushf
inc
ja
push
aam
pop
or
push
stos
add
mov
out
inc
gs
or
lret
mov
inc
lret
or
or
and
sahf
push
jnp
aam
scas
test
enter
mov
fs
mov
sbb
pop
ds
xorl
xchg
xor
pusha
jg
cmp
ret
xchg
cld
in
inc
dec
pop
aas
aaa
test
cwtl
sti
mov
sbb
test
xor
sub
leave
aam
pop
out
or
mov
rorb
mov
jmp
subb
push
call
sti
push
lods
scas
jnp
ja
adc
fwait
ret
pop
mov
aas
ss
lods
out
hlt
pop
ret
sub
pop
jecxz
inc
mov
add
or
mov
stc
xor
psubq
lds
enter
loop
das
jle
iret
dec
decb
mov
paddd
pop
movsb
stos
sti
mov
int
push
and
xchg
xchg
andb
jl
add
mov
cmp
gs
adc
or
movsb
js
std
xchg
sub
lea
inc
test
jo
jne
dec
lds
stc
push
iret
scas
ret
sbb
or
and
into
hlt
add
repnz
pop
stos
fs
xor
push
icebp
js
sub
fdivrp
mov
pop
pushf
inc
mov
lahf
adc
rcll
add
ror
mov
inc
rcrl
inc
imul
inc
inc
xor
das
out
stos
or
xor
xchg
or
dec
jl
pop
push
test
adc
xor
push
push
dec
mov
mov
stc
mov
cmpl
sub
jnp
dec
aam
mov
or
adc
test
or
and
sub
pusha
rorb
and
lret
mov
jg
mov
stc
sbb
dec
inc
jo
scas
leave
inc
mov
scas
push
iret
and
jne
fisubrs
daa
mov
clc
ljmp
sbb
lods
xlat
dec
xchg
mov
sub
lret
pop
cs
and
pusha
cmp
dec
xchg
ss
cli
call
jp
scas
js
arpl
imul
loop
inc
in
mov
jo
ds
dec
inc
add
outsl
cmp
jnp
repz
psubsw
sarb
push
push
xlat
pop
lock
outsl
stos
lcall
shll
xor
movsl
inc
popf
lds
jp
push
mov
pushf
inc
add
and
daa
sub
pop
imul
leave
out
addr16
insl
repz
int
jp
inc
pop
push
mov
cmpsb
fstps
jnp
mov
sbbb
xor
stc
dec
push
mov
add
and
and
jns
ss
dec
aam
jbe
add
sbb
push
and
call
inc
mov
mov
dec
repnz
add
insb
and
mov
or
mov
inc
jno
mov
xchg
mov
lcall
lea
into
and
out
inc
cmpb
dec
or
adc
sbb
inc
sub
pop
jnp
int3
subl
xchg
push
iret
dec
stos
mov
cmc
jbe
push
test
inc
dec
mov
jnp
ds
inc
or
pop
mov
sub
rorb
push
popf
jmp
lods
sub
jle
out
sbb
rcll
mov
loop
lods
xor
inc
mov
sub
sbb
add
jge
in
add
dec
dec
mov
pop
call
ret
test
ss
cld
popa
ret
pop
inc
xor
bnd
inc
push
cmp
xchg
in
mov
cwtd
in
out
sti
popl
lret
push
icebp
test
and
xchg
cli
and
addb
repnz
sbb
pop
adc
pop
mov
jo
cwtl
insl
push
sub
xchg
incb
inc
mov
mov
xchg
push
add
mov
and
xor
sahf
jnp
jne
out
sbb
daa
aad
xchg
movsl
pop
cmp
arpl
into
mov
lds
jnp
mov
and
cwtl
repnz
mov
daa
in
dec
xor
jg
ljmp
sbb
mov
push
loope
sub
test
sbb
or
xchg
scas
sbb
mov
mov
sub
xchg
fwait
cmp
xchg
pop
jg
jecxz
or
sbb
leave
xor
inc
loope
mov
lock
pop
adc
adc
mov
xor
call
test
and
inc
mov
js
and
mov
sbb
imul
daa
loopne
add
lods
out
addb
in
push
rclb
ss
out
cmp
rclb
cmpsb
pop
sti
cmpb
mov
pop
mov
imul
std
mov
xor
xchg
dec
jns
add
push
mov
arpl
push
aaa
xor
fimull
inc
nop
inc
out
adc
pop
and
jmp
lret
jo
fbstp
jge
rcr
jno
xor
adc
and
pushf
loopne
push
shr
sbb
test
jnp
adcl
pop
int3
cmp
push
rorb
push
int3
sbb
inc
cmp
addb
cmp
mov
inc
xchg
jl
inc
inc
dec
or
mov
xor
dec
shrl
stc
mov
jns
mov
mov
hlt
push
sbb
call
sahf
xor
xchg
mov
inc
push
cmp
testl
pusha
test
inc
xchg
xchg
sub
sti
sbb
push
jns
roll
ljmp
test
and
cmp
mov
adc
test
mov
test
mov
or
in
add
fwait
xchg
test
orb
jge
and
loope
popf
cmpsb
and
aad
add
bound
sub
xor
xchg
dec
adc
call
lret
cld
cmc
mov
push
dec
outsl
mov
cwtl
jge
mov
jecxz
lcall
rorb
add
pushf
mov
lea
xor
call
xor
xchg
push
and
push
cmc
adcl
xchg
lret
xor
out
push
jae
mov
sub
cmp
inc
into
pop
pop
add
dec
mov
inc
mov
jo
test
insl
les
cli
gs
adc
cmpsl
mov
mov
and
sub
fisubl
inc
arpl
mov
inc
sarb
je
loope
ja
sub
cmp
pop
sahf
inc
xchg
ret
mov
cmc
mov
push
clc
pop
mov
imul
cs
pop
scas
loope
sbb
push
dec
imul
mov
loopne
adc
popf
pop
out
xchg
xchg
stc
push
adc
xchg
push
ret
movsl
or
mov
fnstenv
or
leave
data16
lret
cmp
arpl
xchg
mov
out
adc
dec
mov
jecxz
lods
mov
adc
shll
es
mov
cmp
inc
popf
imul
iret
pop
jns
jo
xchg
add
sub
das
rclb
sbb
ss
scas
dec
lods
push
ds
lods
pop
fwait
arpl
in
ss
aam
lret
pusha
lcall
mov
outsb
repz
dec
aaa
sbb
ja
dec
cmp
add
add
lock
shrb
roll
pop
loopne
test
inc
inc
jge
push
jle
outsl
stos
or
adc
jmp
inc
mov
dec
shl
mov
popf
lcall
repz
sub
mov
les
inc
incb
in
dec
and
dec
int3
push
movsb
std
and
popf
jo
fwait
in
xchg
pushf
xor
xlat
mov
xchg
cmc
add
jmp
sti
pop
lods
mov
orl
dec
cmc
ds
adc
call
mov
lock
push
push
aad
mov
and
jb
or
adc
add
stos
jns
sbb
sub
adc
inc
sub
sub
mov
push
xchg
dec
pop
jmp
mov
adc
pop
lods
sbb
lahf
dec
mov
mov
jge
dec
xor
adcl
sub
mov
cltd
and
lahf
mov
pop
notl
shll
mov
ss
inc
add
sti
movsl
dec
xor
push
dec
jp
push
mov
push
mulb
pop
mov
leave
inc
mov
int3
pop
mov
imul
sub
cli
sbb
mov
mov
push
popf
jbe
or
add
lahf
or
mov
xchg
xor
push
leave
jl
inc
cs
adc
into
adc
xchg
mov
std
jns
xchg
out
and
leave
or
orb
xchg
std
sti
cmp
jl
or
mov
and
xchg
add
out
jmp
addl
dec
push
pop
mov
inc
push
adc
es
pop
push
inc
inc
rol
lret
jno
mov
lret
icebp
inc
mov
mov
xchg
ret
aas
notl
movsl
mov
dec
dec
mov
push
dec
fmulp
dec
and
push
subl
out
and
mov
cltd
loope
jp
xchg
xchg
mov
push
xchg
jle
imulb
xchg
out
insb
fisttpll
clc
fcmovu
add
cltd
pop
dec
jo
sahf
cmp
cli
pop
adc
fidivs
popf
xor
and
movsb
bound
push
lock
enter
or
inc
mov
mov
lret
pop
lds
add
loope
jmp
or
mov
mov
xor
ret
mulb
jo
xchg
aad
sbb
arpl
pop
vminss
sub
cwtl
sbb
leave
gs
ftst
mov
mov
in
cmc
xchg
dec
adc
inc
adc
xchg
xor
xor
and
mov
repnz
jge
mov
aaa
xor
dec
ja
lds
sbb
xor
sbb
dec
daa
dec
push
jecxz
pop
push
lods
push
mov
mov
popa
es
add
daa
adc
je
scas
jb
dec
add
pop
out
jmp
roll
lret
xchg
out
pop
nop
pusha
dec
push
stos
jg
nop
mov
fst
cmp
lods
mov
int3
fidivl
ja
cmpsb
test
push
mov
xorl
xchg
outsl
dec
jl
sbb
into
and
movsl
cs
mov
enter
pusha
inc
out
leave
add
mov
sub
jp
jbe
test
cmpsb
and
xchg
in
add
cmpsl
ds
mov
loope
flds
adc
add
mov
cltd
push
fwait
nop
mov
pop
dec
or
lret
in
push
push
test
jmp
jp
insb
jns,pn
cmc
push
sub
dec
lds
pop
push
fsub
inc
aad
sub
nop
aam
xchg
mov
aam
lods
dec
into
sub
jmp
mov
dec
mov
inc
jge
das
jne
clc
xchg
xorl
out
add
sahf
xchg
xchg
adc
fwait
cwtl
inc
xlat
mov
outsb
ss
cmp
ss
outsl
insb
mov
xchg
mov
push
mov
fcoms
or
aas
cmp
dec
and
lock
test
mov
lea
push
add
add
inc
add
dec
sbb
xor
cmp
push
inc
sub
aas
dec
int3
stos
cmp
add
xchg
push
mov
xchg
push
inc
add
fimuls
cmc
loope
pop
pop
test
lods
jmp
loope
aas
mov
ljmp
in
movsb
mov
lcall
stos
and
xchg
sub
push
push
or
gs
sub
and
push
sbb
mov
adc
rcrl
movb
mulb
mov
pusha
jne
fisubs
inc
in
je
mov
ret
shlb
mov
jae
push
xchg
fdiv
or
faddl
mov
outsb
sbb
jmp
repz
jp
mov
add
popf
mov
lods
pop
cs
adc
or
or
pop
pop
pop
push
sub
xrelease
jns
ja
jecxz
inc
std
out
sub
or
pop
jl
std
clc
or
test
fsubr
jne
fidivl
inc
add
adc
cmp
or
in
out
push
sub
add
cwtl
mov
fmuls
mov
in
adc
cmp
pushf
and
push
cmp
cwtl
das
cmc
loope
add
mov
push
test
rcrl
mov
ja
sub
mov
lcall
out
dec
inc
sti
fwait
inc
sub
mov
repnz
dec
inc
inc
dec
mov
rclb
shlb
push
std
lret
into
data16
pop
int
shrl
jo
dec
fwait
jmp
mov
xchg
push
jge
sarl
lret
mov
aad
add
and
jbe
test
fs
mov
stos
imul
jmp
mov
lcall
notb
pop
pop
jae
out
mov
pop
jo
dec
loop
inc
jge
sti
mov
xor
loopne
push
adc
or
out
das
fwait
div
jo
js
and
sub
or
bnd
cmpsl
mov
or
lock
xchg
mov
sbb
sti
pop
aaa
das
loop
sbb
add
aad
dec
push
repz
daa
hlt
sub
cmpl
jbe
inc
jb
sbb
jg
pusha
sub
enter
push
mov
sbb
fyl2xp1
cli
outsl
imul
jbe
xlat
sahf
cld
andl
iret
in
push
movsb
hlt
pop
push
or
bound
cmpb
adc
sbbl
int
push
aam
ds
out
sbbl
and
inc
daa
hlt
jne
test
push
pop
ss
ffree
pushf
cmp
jo
adc
out
cli
jg
mov
pop
rol
inc
xchg
or
cmp
scas
jo
jnp
lods
mov
xchg
ficoms
cmp
inc
mov
jmp
movsb
inc
fbld
stos
mov
jb
addr16
dec
insl
leave
shlb
or
sub
and
aam
xor
dec
or
std
mov
or
pop
hlt
sub
movl
leave
sub
dec
or
sbb
xchg
xchg
or
mov
loopne
push
in
jecxz
ficompl
or
hlt
fadd
popf
stos
sarl
enter
xor
and
push
add
or
push
bound
in
movsl
in
fwait
dec
insb
mov
push
and
cmp
mov
push
xchg
xor
aaa
mov
sub
mov
sub
enter
pop
fisubrs
jl
inc
loop
mov
idiv
fwait
and
adc
pop
xchg
rorl
insb
and
and
pushl
out
mov
dec
lods
adc
movsb
cmp
and
in
mov
addr16
add
mov
mov
inc
aam
inc
orb
incb
pusha
outsl
jmp
out
push
je
loope
inc
jb
in
inc
loope
mov
jp,pt
mov
mov
mov
and
pop
mov
push
xor
fmulp
xlat
xor
in
pop
cli
lods
incb
pop
pop
repz
cmp
dec
in
hlt
mov
sti
mov
push
xchg
push
or
shll
sahf
mov
syscall
pop
cmpsb
jnp
xor
pushf
andb
fdivs
aad
lds
popa
test
pop
test
add
xor
js
dec
jno
stos
aaa
sub
hlt
sti
jb
mov
jb
cld
enter
pusha
es
and
imulb
ficoms
stos
adc
out
cltd
xor
xchg
jl
add
jp
xchg
int3
push
cmpb
mov
js
mov
pushl
lock
aam
pop
mulb
xchg
or
popf
cmp
inc
fcomps
lcall
mov
push
lds
ja
cmp
cmp
in
sahf
jo
jae
push
adc
jp
xchg
jmp
push
or
mov
sarl
daa
add
icebp
push
pop
mov
cltd
mov
mov
dec
dec
rorl
aam
test
jnp
je
push
popf
movsl
popa
xchg
in
push
ljmp
stos
jle
and
sbb
fdivs
pop
movsb
cmp
mov
dec
out
mov
imul
cli
inc
jg
or
cs
das
push
outsl
mov
aam
out
in
mulb
xor
jbe
ja
sub
adc
dec
insb
jge
cmpb
push
jne
and
xor
inc
push
imul
pop
inc
jl
int
sub
dec
insb
ja
scas
dec
add
xchg
daa
xchg
les
test
movsb
scas
mov
fdivr
inc
jg
mov
out
push
jbe
aas
sub
fisubl
test
push
lahf
sbb
inc
sub
and
out
push
pop
leave
std
mov
dec
stc
or
in
jb
popf
pop
adc
out
pop
cmp
sub
xor
mov
jg
outsb
repnz
fldl
and
xchg
enter
inc
das
bound
pop
inc
test
adc
adcb
dec
inc
push
ljmp
rcl
sbb
insb
push
fwait
mov
scas
cmp
push
mov
imul
movsb
movsb
insl
and
sbb
sub
dec
das
cmp
std
dec
cmp
cwtl
jle
cmp
loope
lock
outsb
mov
cmpsb
cltd
pop
xor
ja
out
push
xchg
aaa
pop
jo
jge
cmp
adc
xchg
movsl
lea
xor
jb
aaa
repnz
mov
push
xor
mov
mov
in
mov
enter
incl
cld
and
cltd
loop
pop
nop
sti
rcrl
jb
les
xlat
cmc
fiadds
adc
cmp
and
rclb
fdivrs
lahf
sub
in
inc
stos
jns
sub
sub
es
and
xchg
inc
pop
xchg
xor
xor
incb
add
jle
or
xchg
hlt
iret
xchg
adc
adc
dec
lods
pop
or
ss
pushf
push
inc
push
jns
lahf
or
iret
out
shl
jae
lea
xor
pop
mov
loopne
ficomps
and
in
fisubl
adc
stc
mov
adc
aad
jl
xchg
sbb
xchg
sbb
idivb
adc
jne
leave
mov
add
js
andb
fistpl
pushf
and
sub
jns
jnp
shlb
jbe
pop
jno
fcmovb
dec
xor
adc
repnz
lahf
repz
push
cltd
test
loope
stc
notb
imul
jnp
cld
mov
lret
scas
xchg
add
fnsave
mov
mov
add
cmp
xchg
nop
jmp
mov
mov
push
mov
add
mov
pusha
jne
mov
push
int3
les
xchg
scas
xorb
fwait
cmpb
int
cwtl
dec
push
out
xchg
shll
iret
arpl
jae
filds
mov
unpckhps
add
push
rorb
push
mov
hlt
out
cmp
adc
jle
push
rcrl
repnz
jp
int3
or
enter
ret
lea
ds
fcomps
lahf
mov
hlt
sbb
pop
jmp
or
xchg
mov
xchg
jne,pt
inc
xchg
jl
addr16
cmp
sub
shrb
mov
add
js
xorb
xchg
adc
lcall
rorl
add
leave
je
decb
dec
mov
adc
stc
rcll
sbb
mov
aam
fildll
int3
les
sbb
mov
cwtl
xlat
mov
cmp
and
mov
and
rcll
and
pushf
pushf
push
mov
clc
lahf
dec
ljmp
mov
addr16
fwait
cmp
push
mov
mov
lods
pop
loopne
icebp
dec
sub
sub
mov
mov
lret
sbb
pusha
push
lret
mov
mov
pop
decb
adc
mov
mov
jl
push
jno
jae
add
sarl
pop
fnstcw
mov
jns
xchg
adc
mov
inc
cmp
dec
mov
xchg
rcrl
mov
addr16
data16
das
out
pop
test
or
adc
mov
popa
movl
enter
clc
aas
and
adc
pop
into
aas
jae
mov
push
idivb
lods
daa
push
lds
lcall
nop
xor
stos
lds
sahf
mov
fldt
int
mov
add
imul
mov
stc
sub
cmpsb
add
pop
sub
sub
in
frstor
xchg
push
orl
add
cmp
pop
or
mov
push
mov
jl
pushf
pop
sub
adc
in
sub
sub
iret
call
stos
aad
ficompl
xor
sbb
and
pop
testb
lret
test
cmp
sub
dec
fisttpll
jns
scas
xor
inc
iret
cmpsl
xchg
sbbl
ss
dec
ds
not
cmpsb
push
std
enter
jmp
jns
and
out
test
or
rol
test
std
insb
jg
dec
xchg
sub
lods
cli
adc
mov
dec
pop
daa
sbb
lods
pop
negl
mul
jne
mov
lcall
fisttps
loopne
in
push
fstps
scas
sub
inc
out
push
sbb
fs
dec
inc
push
jmp
mov
push
insb
scas
stos
mov
cli
popa
jae
cli
mov
push
mov
or
pop
push
pop
mov
std
call
lods
add
adc
outsl
push
pop
cmp
xchg
in
stos
jle
data16
dec
test
jae
inc
sti
jae
rcrl
xchg
ss
inc
jnp
jae
push
lds
hlt
out
sub
or
and
or
je
cmpl
cmp
inc
iret
add
mov
lods
xor
xorb
cmp
mov
lret
outsb
int
cld
mov
mov
and
loop
or
cwtl
mov
scas
sbb
int3
sarl
cld
inc
sub
adc
shl
jno
in
lcall
call
cmpsb
stos
cltd
jle
sub
mov
push
in
mov
js
push
in
dec
dec
sub
jl
xlat
icebp
bound
mov
shr
outsl
insl
out
cmp
sub
stos
stos
or
or
arpl
pushf
repnz
push
add
jmp
cmp
stc
nop
pusha
inc
addr16
push
adc
int3
ss
test
rcll
shll
cli
divb
negb
addb
shll
mov
scas
inc
lods
ret
stos
adc
insb
arpl
int
aas
xor
clc
push
adc
xor
not
adc
sbb
jge
into
jbe
test
dec
pop
sub
fadds
add
pop
lds
add
mov
les
add
arpl
mov
div
mov
or
xchg
scas
loop
sbb
inc
xor
fdiv
fidivrs
decb
fstps
cmc
pop
mov
cmc
xchg
jle
adcl
inc
mov
gs
dec
pop
push
cli
ret
adc
data16
pop
out
cltd
loopne
mov
fistpll
xor
mov
mov
cmp
jp
clc
adc
paddw
pop
or
cmpsl
mov
test
mov
rorl
into
push
not
and
fistpl
leave
movsl
add
in
dec
ljmp
or
jns
imul
xlat
test
pop
popa
adc
xor
xchg
out
xchg
adc
rcrb
cmc
cwtl
sti
cli
jnp
pop
dec
je
inc
dec
outsl
inc
sahf
loop
push
or
xor
jae
and
or
and
pop
push
outsl
push
icebp
icebp
enter
sbb
stc
stos
ljmp
clc
xchg
sub
mov
push
fldcw
sbb
dec
lea
lahf
cmp
fs
or
stos
addr16
dec
ja
add
ljmp
lds
push
aam
rolb
push
jb
sbb
mulb
mov
movsl
inc
mull
fdiv
or
or
push
popf
jnp
pop
push
jl
push
ret
push
repz
push
mov
out
push
call
aas
sbb
ljmp
rol
pop
std
jmp
sub
test
pop
add
movsb
je
jns
ret
or
inc
pop
fldt
test
repz
sahf
punpckhbw
subl
into
sbb
xchg
insb
imul
and
sub
push
in
mov
fisubl
mov
fiadds
jge
pop
mov
dec
add
lahf
inc
lcall
stc
iret
cmpsb
mov
lret
fdivrl
bound
in
out
cli
or
fildl
adc
dec
mov
rorl
bound
popf
outsb
cmp
inc
fcoms
inc
shll
mov
add
mov
mov
out
push
fwait
cmp
pop
push
test
mov
or
les
cmp
pop
cmpsl
rcl
mov
cmp
dec
ljmp
add
arpl
xor
gs
and
scas
out
je
dec
and
insb
mov
fstpl
sbb
loope
leave
repnz
dec
pop
pop
fwait
std
insb
fsubrs
push
loopne
bound
sti
mov
aam
jbe
adc
fiadds
lret
xchg
push
sub
jle
jb
push
ret
out
adc
aam
mov
push
or
sub
aas
cmp
lret
js
push
inc
cmp
scas
pushf
je
sbb
test
mov
fnstcw
fadd
gs
fisttpl
mov
cli
xor
push
out
cmpsl
pusha
dec
xchg
or
leave
cmpsb
adc
enter
lods
push
dec
dec
idivl
mov
or
lods
pop
cmp
add
inc
clc
cmp
jno
add
mulb
mov
pushf
and
lock
push
outsl
pop
movsb
lods
je
inc
pop
inc
pop
xchg
cmp
std
pop
cmp
fsubrl
fwait
push
or
push
stos
fstl
or
addl
dec
fcoms
sub
inc
push
jmp
int
enter
push
cmpsl
inc
push
sub
je
lret
lret
enter
flds
adc
fistpll
lock
shlb
test
sbb
fsub
pusha
adc
push
mov
cmp
call
in
mov
psubusb
inc
enter
imul
mov
jg
mov
pop
mov
aad
movsb
sub
add
cmp
add
bound
data16
sub
push
iret
das
jmp
test
inc
xchg
jmp
xor
mov
cmc
cmpsl
mov
mov
sub
xchg
lret
scas
jo
pop
or
cmp
lods
inc
js
push
lods
out
mov
icebp
inc
int
sbb
div
cld
lea
jno
shll
cld
shr
mov
or
ljmp
sbb
mov
clc
and
mov
aas
fnstenv
push
mov
xor
sbb
dec
test
int3
push
insb
mov
push
movsl
push
sbb
stos
jo
mov
mov
outsb
test
loop
push
jge
gs
cmp
int
mov
mov
jmp
int
xor
push
sub
shll
xchg
or
testl
test
cltd
sbbb
pop
xor
cld
lods
mov
xchg
lea
mov
iret
pusha
sub
cmp
add
insb
jecxz
icebp
sti
cmpsb
jae
mov
int
jbe
loope
mov
jecxz
sub
cwtl
imul
test
lods
bnd
pop
mov
loop
das
loope
decl
mov
pop
scas
dec
jecxz
test
push
enter
shlb
mov
icebp
int
cmp
adc
iret
mov
divps
mov
in
cmp
add
push
lods
mov
jecxz
fxch
icebp
sub
scas
dec
in
xchg
pop
popa
push
push
test
sahf
pop
pop
in
lock
xchg
xor
dec
mov
push
fisubrl
sbb
mov
pop
movsl
ljmp
push
enter
bnd
inc
mov
jbe
xor
shlb
jle
ljmp
mov
sub
imulb
or
push
addl
cs
push
lock
xchg
adc
push
out
inc
and
das
aaa
out
out
fldenv
int
shlb
mov
fucomp
int
pop
bound
adc
cwtl
imul
test
xchg
lahf
shlb
xchg
in
into
jbe
lcall
pop
mov
xchg
jge
xor
lahf
jns
popa
xor
mov
add
outsl
outsl
xor
aas
aaa
movsl
pusha
dec
mov
fiadds
sarw
mov
repz
jne
xchg
add
push
xor
xor
add
sbb
shrb
dec
adc
adc
sbb
adc
rcl
into
dec
push
clc
adc
jecxz
jns
negl
push
popa
ss
inc
icebp
stos
sub
ftst
inc
testl
sti
mov
es
ja
cwtl
jnp
xor
fwait
cmp
lock
sbb
xchg
ds
xor
fsubrs
sub
ja
cmc
xchg
call
push
fs
cmpl
mov
xlat
lret
mov
add
out
pop
popf
shl
ret
sub
lods
inc
jo
inc
cmpsl
clc
pop
push
mov
fiaddl
sbb
hlt
inc
cmpsl
cwtl
sti
xchg
lods
ljmp
shl
lods
push
add
cmp
repz
and
pop
push
mov
xlat
or
xchg
lds
into
push
cwtl
fidivl
cmpsl
inc
jno
add
or
cs
jp
mov
in
cmpsl
adc
inc
mov
pmaxub
mov
in
jae
jecxz
mov
cmpsb
mov
mov
loop
dec
xchg
mov
fdivp
jo
xor
and
inc
add
lods
xchg
pop
loope
fldl
sub
insb
pop
mov
or
push
jecxz
enter
or
test
cli
ret
mov
cmp
mov
sbbb
dec
push
rcl
adc
rolb
mov
bound
lret
adc
daa
call
xor
or
fdivrs
push
sub
fdivrp
pop
arpl
dec
daa
je
jl
dec
mov
rolb
sti
push
xchg
je
jle
shlb
stos
add
movsb
cmp
les
cld
out
fisttps
add
lods
outsb
pop
jge
add
or
in
and
xchg
outsb
fidivl
pop
test
jmp
add
pusha
sub
jg
imul
pop
cmpl
mov
or
fucomip
cwtl
bound
mov
mov
or
jno
inc
rcr
push
adc
popf
cmp
adc
cmc
cmpsb
xor
fsubs
pop
fbld
or
shlb
jo
sub
mov
lret
xchg
mov
sbb
lahf
repz
movsl
scas
dec
xchg
hlt
sub
jge
jnp
out
dec
mov
movsb
and
pop
adc
and
stos
aad
dec
push
nop
sub
pop
sub
push
test
les
mov
and
hlt
inc
lret
jae
clc
movsb
lret
adc
aaa
fcmovnu
mov
pop
inc
and
cwtl
pop
mov
int3
iret
aam
lock
stos
cmc
clc
rclb
sbb
filds
fimull
shlb
sbb
cmp
cltd
das
lds
cld
pop
inc
sub
enter
pop
or
loop
or
std
std
xchg
popa
subl
xchg
dec
sub
test
ret
stos
dec
call
adc
xchg
push
push
cmp
lods
imul
imul
mov
repz
jno
loope
js
adc
nop
mov
sub
xor
in
push
pop
push
xor
mov
int3
aam
divl
out
push
dec
std
ficoms
cli
and
dec
cmp
je
jns
jp
mov
pop
push
pop
mov
mov
add
pop
das
jno
xchg
enter
xor
fnstsw
pop
push
and
out
mov
mov
fs
pop
pop
loop
fldcw
adc
cmpsl
cmpsl
xchg
xor
jno
jae
xor
cmpsb
pop
mov
outsl
sub
mov
cmp
pop
mov
or
sub
push
jp
mov
dec
in
push
mov
cmpl
mov
cmp
stc
inc
push
mov
pop
cmp
cld
out
js
fsub
pop
mov
mov
and
mov
jo
or
mov
inc
bound
popa
fsts
dec
lea
or
cltd
mov
fsubrs
test
in
dec
mov
mov
outsb
add
sarb
dec
aaa
paddusw
mov
call
cmp
insb
pop
in
imul
sti
inc
ljmp
add
sub
lea
lret
xsave
add
das
adc
push
inc
fisubrl
ss
iret
iret
test
jle
cmc
sub
mov
sub
adc
inc
cmp
roll
bound
cwtl
cld
add
das
cltd
adc
sti
inc
out
mov
inc
push
dec
out
add
or
repz
xor
in
cmp
xor
inc
fstp
and
mov
shrb
sub
pop
mov
ds
and
repz
xor
adc
cmp
and
or
negb
jnp
aaa
rcrl
aas
or
pop
xchg
dec
cmp
adc
int
enter
mov
subl
jae
push
sub
addl
mov
mov
fstp
jb
add
sub
xchg
xlat
cli
jl
push
xchg
mov
xchg
jmp
cmp
aad
adc
lods
stos
jg
rol
icebp
inc
mov
cwtl
cmpsl
pop
jle
scas
push
jns
andb
xchg
pop
outsb
lods
ljmp
unpcklps
mov
out
sub
ficompl
dec
add
adc
imulb
mov
pop
insb
xchg
sbb
test
into
inc
mov
dec
loopne
repz
mov
pop
in
ret
xor
js
pop
testl
call
ja
dec
aas
mov
jbe
xor
sub
sarb
gs
jmp
scas
xchg
sbb
imul
dec
xor
sbb
pusha
xchg
and
in
ss
pop
aas
sti
inc
movsl
or
loopne
inc
or
sbb
loopne
mov
mov
dec
sbb
xchg
pop
jmp
adc
test
fs
les
jno
cmc
push
jne
stc
dec
shll
lret
and
in
stos
loope
ror
inc
add
mov
adc
fs
es
push
ret
sbbb
xchg
sbb
mov
mov
push
cltd
aad
xchg
mov
aad
push
sub
sbbb
jbe
data16
jle
push
push
mov
mov
fwait
or
pop
inc
push
or
fnstenv
stos
out
mov
andb
xchg
out
mov
mov
std
xor
inc
sub
mov
push
pop
insl
repnz
rolb
call
ss
gs
xorl
ret
je
mov
das
xor
jle
jle
mov
inc
sub
adc
std
sbb
adc
sarl
scas
in
dec
mov
adc
cmp
clc
sahf
and
addl
xchg
jbe
add
test
jg
lock
mov
dec
sbb
pop
sbb
dec
mov
scas
mov
mov
hlt
cld
test
subl
inc
scas
mov
jae
das
test
xor
or
mov
adc
push
cmc
xchg
mov
lret
insb
inc
pop
xchg
out
sub
xor
stc
imul
xchg
push
mov
popa
jb
sub
add
mov
jmp
movsl
adcb
inc
rcrb
xor
mov
jl
cmc
vmread
fwait
inc
inc
or
outsl
xchg
or
jecxz
pusha
dec
sub
push
ljmp
xchg
xchg
sbb
loope
fldcw
pop
mov
sub
mov
jg
test
xorb
push
xchg
mov
mov
out
xchg
sub
xor
xchg
nop
ret
aam
mov
in
push
lss
inc
xchg
inc
loopne
mov
testl
lret
fwait
inc
push
adc
arpl
rcll
leave
decl
sbb
mov
sbb
dec
inc
adc
clc
in
loopne
test
mov
mov
stc
xor
data16
fbstp
push
add
and
bound
icebp
or
mov
scas
aam
jo
enter
xor
jle
aaa
add
cmp
add
jo
test
cltd
rcll
inc
das
push
dec
sbb
repz
mov
repnz
in
clc
fisttpll
mov
mov
push
cmpsl
pop
es
js
scas
lea
or
or
xchg
adc
test
adc
lahf
lret
cmp
pop
sti
sub
mov
repz
mov
leave
ds
cmp
wbinvd
xor
mov
ret
es
push
fdivrs
sbb
dec
xchg
xor
xor
sbb
mov
stos
jbe
push
jb
sbb
leave
nop
in
ret
xor
enter
lods
or
cmp
xchg
xchg
lret
inc
jp
push
cmpsl
test
les
push
cmp
pop
stos
jns
dec
or
cwtl
push
mov
shlb
mov
add
loop
ljmp
lea
pop
or
jg
in
push
and
mov
push
int
arpl
jle
sub
mov
push
lea
jae
xor
push
xor
aam
mov
xor
pop
fsubrl
out
scas
pushl
outsl
xchg
mov
in
sub
je
clc
mov
xor
or
stos
addr16
pop
cwtl
lods
jbe
push
clc
and
or
gs
jmp
mov
jmp
dec
sahf
add
jge
push
or
shlb
in
and
stos
aad
call
add
bnd
and
jo
lahf
jl
ror
ja
xchg
cmp
mulb
jae
fbstp
sub
jne
test
xorb
mov
dec
in
pop
pusha
pusha
jp
dec
and
or
or
jnp
xor
stc
jbe
push
mov
lahf
rclb
xchg
fcoml
xchg
sbb
xchg
sub
es
arpl
hlt
xchg
inc
pop
iret
out
or
adc
cmp
adc
push
popa
jge
jnp
sarl
ficoml
fs
cmp
and
sub
dec
cs
pushf
icebp
test
hlt
and
mov
insl
xchg
pop
pop
mov
int
adc
xchg
inc
ds
xchg
cmp
jl
nop
inc
push
xchg
sub
dec
dec
mov
fisubl
mov
jne
in
sub
jp
ss
lahf
rcll
fnstenv
sub
inc
stc
fsubs
sbb
mov
arpl
xlat
pushf
mov
jp
xchg
dec
out
ds
adc
xchg
sar
mov
cmp
cltd
cwtl
sahf
adc
popf
les
mov
in
popa
adc
sub
data16
in
inc
aaa
mov
test
adc
and
mov
push
adc
cmpsl
sbb
jle
repz
push
int3
push
add
notl
in
cli
dec
daa
mov
aam
ljmp
mov
inc
push
ja
cmpsl
dec
push
or
mov
and
inc
scas
scas
or
or
aas
in
imul
pushf
and
out
xchg
adc
xor
nop
or
sti
sbb
cmpsl
inc
sub
daa
dec
inc
and
cs
add
mov
inc
mov
jg
pop
push
scas
pop
std
sub
dec
or
mov
lret
push
jno
lahf
addr16
ds
mov
in
jae
dec
mov
mov
mov
cmp
ja
ror
xchg
das
sub
js
and
fmuls
addr16
add
pop
xor
je
jge
cwtl
movsb
divl
xchg
dec
out
xchg
dec
shl
inc
stc
xchg
in
fwait
pop
adc
or
dec
jae
lret
push
cmp
mov
pop
xchg
jae
scas
xchg
clc
popa
push
xor
idiv
out
cltd
aad
jns
lret
std
fstpt
push
in
aad
aaa
popa
push
mov
xchg
fbstp
imul
add
sti
daa
test
fwait
pop
shl
movsb
push
cli
jnp
sub
fistl
push
cmpsl
mov
add
out
pop
popf
enter
push
jnp
and
jle
mov
fwait
jnp
sbb
dec
mov
iret
xor
xchg
and
aad
mull
cmpsl
insb
sub
cs
gs
pop
mov
aad
sub
jle
sar
pop
mov
push
push
test
and
mov
push
sbb
lahf
jmp
pushf
adc
cwtl
popf
push
pop
test
cli
jo
insl
xor
je
out
cwtl
sahf
xlat
xchg
xchg
mov
push
call
sarb
or
or
mov
rcr
jne
mov
pop
inc
loop
ret
ret
cmp
fildll
sahf
mov
test
in
jmp
mov
mov
inc
mov
jbe
dec
dec
lret
mov
inc
fs
jg
dec
dec
cmp
fninit
sti
lcall
cmpsl
adc
aas
dec
cltd
cmpb
int
ja
fidivl
push
sarl
mov
fldl
ds
mov
negl
cmpsl
dec
dec
pusha
insb
lahf
push
dec
insl
dec
in
movsb
push
cmp
sbb
push
inc
fildll
mov
loopne
loope
mov
fdivrl
fildll
ret
popa
cmp
push
lret
repz
or
stos
mov
dec
inc
xor
into
xor
adc
cwtl
xchg
xor
inc
mov
out
repz
cmc
mov
outsl
shll
xchg
loop
dec
jl
or
add
pop
pop
inc
out
into
pop
das
sbb
adc
daa
jle
jmp
into
pop
dec
clc
jle
xor
xor
aad
call
loope
cmpsl
rorb
stos
mov
jmp
mov
and
sbb
arpl
and
imul
movsb
mov
clc
scas
sarl
fwait
clc
xchg
je
adc
inc
in
adcl
imul
adc
fwait
mov
mov
in
jle
shrb
insb
pop
add
sar
in
xor
jmp
pop
int
push
add
test
inc
pushl
add
daa
sahf
adc
daa
rolb
mov
xchg
cltd
sub
sbb
mov
cld
jnp
pop
xchg
stc
sbb
inc
mov
iret
pop
jle
jne
sub
scas
adc
test
cmpl
stc
lcall
push
lret
cmp
inc
sti
pop
orl
pop
and
ja
xchg
pop
pop
in
pop
xor
testl
pop
pop
gs
fisttps
xchg
jg
lret
inc
gs
leave
or
jb
in
pop
sub
xorb
fnstcw
into
xor
mov
ljmp
cmp
add
ds
mov
adc
push
iret
mov
roll
mov
fdivs
cli
imul
add
mov
pop
out
push
movsl
jo
jl
inc
ds
icebp
sub
mov
popa
sub
shll
fisubs
jg
pop
push
sarb
mov
push
add
dec
jp
cltd
add
or
repnz
repnz
jg
add
mov
dec
decl
jmp
xor
and
aaa
loopne
outsl
stos
stos
mov
jnp
scas
jmp
dec
inc
testl
shl
push
xor
arpl
ja
stc
mov
into
pop
push
pop
sub
in
sti
or
mov
add
jne
in
cwtl
cld
dec
jno
psubsw
sub
call
pop
ret
inc
sahf
sti
cmp
ficoms
orl
dec
inc
dec
cwtl
or
mov
mov
cld
xor
add
loop
sarb
cmp
dec
add
in
mov
das
ret
jae
arpl
lods
pop
aam
daa
xchg
dec
sbb
scas
mov
bound
int
cmp
mov
movsl
adc
cltd
scas
lea
das
or
fisubrl
nop
mov
adc
inc
pop
cmpsb
push
scas
or
jo
mov
sbb
mov
cmc
cmpsl
hlt
and
clc
out
or
mov
or
pop
repnz
lahf
mov
les
mov
lcall
xchg
outsl
pop
lods
or
jmp
mov
mov
es
pop
jb
nop
push
pop
insb
lret
fsubrs
adc
xchg
mov
fs
loopne
lahf
inc
xchg
lock
insl
repnz
dec
loope
or
mov
jo
shrb
mov
out
mov
xor
cld
repz
and
int3
mov
cmp
sbb
add
andl
pop
xchg
sub
insb
sbb
aad
std
sub
push
jnp
xor
and
lret
data16
pop
setne
adc
mov
jl
in
dec
imul
gs
add
rorl
shll
ljmp
pop
test
xlat
icebp
dec
mov
lret
fisttpll
sub
stos
pop
mov
mov
mov
jle
lret
and
movq
pop
add
cmp
shrb
pushl
sub
xor
jmp
int3
inc
and
dec
mov
in
or
pop
in
push
outsb
dec
lods
out
inc
orl
or
lock
aad
int
mov
inc
xlat
stos
mov
cmpsl
ds
daa
shlb
inc
cltd
lods
retw
cmp
mov
dec
pop
inc
mov
xor
and
mov
sub
insb
lea
mov
adc
xchg
ret
sbb
orl
test
pop
xchg
shrl
jmp
aas
xchg
xor
cmp
aam
jno
sbb
loope
jne
arpl
xchg
ret
add
dec
lods
pop
mov
xor
sub
jge
cmp
leave
cmp
mov
or
mov
das
adc
mov
insb
daa
mov
add
push
or
jl
shl
xorb
sub
movb
mov
and
cld
cmp
xlat
push
out
in
movb
xchg
shrl
add
xchg
xchg
sti
fs
movsb
push
imul
pop
xorb
pop
jp
lret
loopne
dec
push
sbb
mov
push
jmpw
push
in
aam
push
pop
movsl
loop
xor
out
stc
outsb
add
xchg
sbb
cli
add
xchg
js
cmp
mov
fdivp
sub
out
into
aam
scas
xlat
dec
fbstp
push
mov
jle
movsb
out
stos
pop
push
add
cmp
push
iret
jbe
or
pop
sub
addr16
fs
pop
xchg
xor
xchg
xchg
mov
repnz
add
out
nop
repz
ljmp
lcall
pop
out
xlat
fcmovnu
ror
inc
xor
add
push
lret
shr
inc
lret
lahf
xor
adc
pusha
xchg
mov
jae
into
test
mov
jg
arpl
pop
inc
aas
std
push
and
mov
jecxz
pop
mov
je
enter
inc
lret
adc
mov
adc
xchg
jl
dec
add
mov
jge
jl
bound
mov
inc
movaps
mov
xchg
push
mov
aas
jp
aad
mov
add
loop
shl
jbe
pushf
cli
lcall
sub
xchg
and
lods
adc
jg
cwtl
leave
push
loopne
jg
imull
lods
imul
jecxz
repnz
js
adc
fisubs
or
cltd
adc
cltd
rcrb
jecxz
mov
sarl
out
ret
stc
push
xchg
xlat
fidivrs
mov
and
mov
frstor
daa
sbb
mov
xchg
shrb
dec
jge
adc
pop
decl
and
stos
cwtl
in
dec
loop
and
or
push
ljmp
test
out
pop
adc
sbb
mov
jp
movsl
mov
popa
push
lea
scas
shr
dec
sub
jbe
aaa
mov
fcoms
cmp
in
ds
movb
fadd
or
fisubrs
rcl
dec
fidivrs
out
sbbl
adc
inc
mov
nop
aas
mov
lods
dec
mov
fdivrp
dec
lods
mov
pop
mov
icebp
and
and
mov
mov
xor
cltd
bnd
mov
fmuls
xchg
dec
pop
pop
mov
xchg
jb
add
fimull
pop
fimuls
pop
pop
es
ds
pop
adc
sbb
lods
pop
xor
mov
pop
fs
mov
add
mov
scas
int3
les
in
je
mov
cmpsl
shrl
cmp
sbb
xchg
jns
pushf
out
inc
dec
jg
call
stc
dec
pop
inc
jbe
out
ficoml
stc
jns
mov
jp
fcoms
jg
lods
add
xlat
push
stc
aad
fisubs
push
lods
pushf
lret
inc
fstps
mov
or
rolb
movsb
pusha
xor
cs
and
enter
cmc
cld
mulb
or
sub
dec
test
test
ljmp
inc
lret
popf
xchg
loope
mov
fs
jl
insl
andl
iret
cmp
cmpsb
adc
lds
cmp
xlat
inc
nop
xchg
add
lock
adc
insl
mov
fildl
mov
das
sub
out
sbb
jl
or
orl
push
popa
xchg
test
mov
out
adc
popf
lret
xor
adc
mov
lret
cld
fwait
mov
mulb
pop
cmp
fmul
int3
mov
je
lret
repnz
xor
shlb
test
bound
cmp
out
push
adc
orb
sbb
sub
nop
ja
stos
pop
out
xor
lret
xorl
cld
sub
mov
ljmp
pop
sahf
adc
mov
add
jg
xchg
push
xchg
seto
cmp
stos
mov
sbbl
pop
pushf
mov
andb
adcb
push
dec
mov
xchg
fbld
fisttpll
sbbb
add
popf
cld
xor
mov
mov
aas
mov
repz
push
mov
fildl
jne
test
and
xor
push
jge
jp
push
or
add
adc
push
int3
jecxz
or
xchg
test
push
pop
push
sub
dec
mov
add
add
inc
sub
xchg
mov
pop
and
add
adc
repz
jo
pop
arpl
stos
inc
push
addb
jb
mov
and
and
lea
iret
fstpl
xchg
in
xchg
sbb
push
clc
and
std
ja
leave
lcall
into
and
add
xlat
push
or
lea
cld
aas
mov
lods
xchg
adc
divb
js
add
mov
addr16
jo
and
sti
pusha
xchg
adc
inc
ss
or
jne
jnp
stos
data16
jl
data16
ja
dec
sbb
mov
fwait
mov
mov
mov
aam
movsb
sbb
js
push
jo
lock
jmp
pushf
in
push
push
aam
pop
leave
sahf
mov
into
lahf
pop
iret
pop
jge
inc
sahf
int3
xchg
pushf
inc
lret
lret
pop
push
add
sub
test
fucomp
and
inc
int3
add
test
sbb
jge
notb
dec
int3
icebp
leave
and
fs
clc
stc
test
rcrb
fisttpl
test
fucomip
dec
add
out
cmp
lods
xor
imul
stos
out
mov
inc
pop
std
in
xchg
mov
ret
lods
inc
push
cmp
fcompl
call
das
pop
adc
push
xchg
and
xor
jge
cmp
push
push
sbb
setle
lret
mov
ret
push
mov
jmp
cld
dec
les
jo
inc
lret
cs
and
push
sbb
pop
jmp
or
adc
xchg
xchg
pop
sbb
jne
aaa
test
popa
and
ret
xchg
mov
dec
add
mov
adc
iret
fwait
cmp
mov
mov
loop
loopne
or
mov
push
rcrl
sar
insb
mov
loope
pop
jnp
cmp
pop
icebp
test
mov
pop
lret
xorl
xor
mov
insb
orb
sub
lods
pop
sub
inc
dec
mov
fildll
loopne
mov
dec
sbb
shl
xchg
push
jmp
imul
aad
inc
xchg
add
scas
fstps
rclb
mov
cs
sbb
inc
cmp
cld
push
and
or
cmp
inc
inc
iret
hlt
jg
movl
mov
push
inc
out
push
data16
shrb
dec
clc
pop
test
enter
lock
out
test
jae,pn
mov
mov
cmp
test
test
mov
stc
insl
pop
push
pushf
mov
fisubrl
cmpsl
pop
xor
dec
push
push
fldl
loop
mov
mov
andl
inc
jmp
insb
push
add
stos
push
add
push
jne
insb
xchg
popa
jbe
aam
xor
notl
lret
mov
fisubrl
sub
out
xchg
xchg
xor
ds
and
xor
mov
sbb
insb
daa
mov
xor
insl
sbb
imul
sub
cld
push
in
in
xor
sub
mov
jl
mov
and
mov
not
arpl
in
and
pop
pusha
dec
pop
xor
dec
ds
adc
push
push
movsb
arpl
cmp
mov
pop
dec
inc
pop
fisubrl
mov
lods
mov
aas
mov
or
jle
subl
es
mov
and
lds
insl
loopne
movsl
in
aaa
repz
fsubr
fistps
xchg
mov
lods
inc
inc
iret
mov
aam
addb
loop
int3
lds
pop
pop
add
ficoml
xchg
dec
push
mov
in
in
lods
xor
and
xor
push
dec
popa
push
loope
lcall
jecxz
pushf
push
leave
dec
add
ss
roll
in
push
call
jmp
mov
push
sub
sub
rolb
xchg
pop
sbb
stos
push
iret
xor
popa
js
mov
jecxz
popa
mov
jb
or
cmp
repz
xlat
es
mov
addr16
shrl
jecxz
insl
adc
ret
lret
jb
lret
inc
xchg
inc
add
outsb
cmp
fwait
mov
js
mov
lods
inc
out
xchg
gs
inc
out
mov
xlat
mov
pop
scas
aas
outsl
push
sub
push
das
dec
pop
pop
xchg
mov
add
xchg
insl
push
jmp
mov
sub
cmp
sub
test
inc
fidivrl
inc
cs
in
dec
sahf
push
dec
push
mov
out
call
mov
ret
in
inc
xchg
sub
xor
sbb
pop
iret
jle
or
aas
iret
loop
cmp
adc
ret
mov
xchg
push
inc
cltd
shrb
jnp
fimuls
sbb
jge
xchg
aas
dec
jae
addl
mov
jae
mov
loope
and
mov
xor
clc
popa
and
push
push
aas
inc
push
sti
mov
mov
test
in
xchg
outsl
dec
leave
pop
cmp
mov
mov
ljmp
and
std
movsb
mov
push
push
dec
inc
cmp
jp
push
ja
mov
jg
jle
push
and
pop
ljmp
loop
cld
aaa
pusha
mov
push
lret
push
sbb
sub
ljmp
mov
push
mov
jmp
in
pop
js
push
ss
jo
jne
inc
fsubp
mov
insb
lea
outsb
enter
lock
mov
jnp
xor
mov
xchg
repz
rcl
out
int
and
cmp
pop
adc
scas
mov
out
jno
add
push
sub
jle
cmp
rcll
jmp
inc
sub
xchg
dec
icebp
mov
loope
sbb
jmp
in
jge
test
xchg
popa
mov
pop
or
inc
push
jne
movl
out
mov
and
out
addr16
lret
aas
mov
ljmp
fildll
icebp
test
and
pop
stos
add
lret
js
xorb
and
jns
sahf
sub
stc
mov
push
pop
ficoml
cwtl
popf
lea
into
push
adc
cmp
mov
jb
in
stos
rcll
cmp
sub
jno
cmpb
pop
jbe
mov
cmpsb
pushf
aam
sbb
cmp
jns
and
adc
daa
fwait
outsb
sub
fcoms
cmp
xlat
or
push
xchg
mov
sbb
addr16
mov
lock
ret
pusha
roll
dec
aam
add
scas
xchg
in
xchg
jb
adc
out
gs
sub
test
in
jp
imul
jecxz
push
jns
jb
mov
out
js
push
mov
test
or
js
mov
pop
jo
inc
cmp
xchg
pushf
sbb
das
xchg
cltd
mov
pop
icebp
sahf
jns
cmc
mov
add
ds
xchg
jns
pop
sbb
push
cmp
outsb
jbe
cli
ficoml
sub
dec
xchg
xchg
mov
daa
or
pop
test
mov
pop
cmp
jl
add
testb
mov
xor
sub
stos
into
jb
ffreep
insl
jnp
pop
dec
popa
or
movsl
sbb
mov
fwait
push
je
mov
mov
loop
lock
xor
xchg
int3
scas
rcll
jns
jne
xlat
pop
push
shrl
and
out
test
cmp
test
dec
jle
mov
mov
xchg
and
cmpsb
lahf
push
in
push
outsb
scas
sbb
scas
mov
mov
adc
cmp
xchg
push
jmp
dec
idivl
fistl
dec
imul
decb
aad
fs
fadds
mov
jmp
or
call
push
lods
dec
lods
fdiv
mov
mov
push
sbb
pop
ret
lods
xchg
push
xchg
scas
lret
mov
mov
js
rcl
mov
cmp
imul
iret
xchg
add
push
ljmp
shlb
push
cmp
xor
popa
lahf
aam
inc
arpl
mov
xchg
inc
cmpsb
pop
sub
daa
push
jnp
or
data16
and
adcb
dec
ud1
mov
cmp
rcll
mov
cmp
push
push
pop
sahf
cltd
push
xchg
cmp
jne
dec
inc
lock
lcall
pop
lods
scas
xorl
lcall
shll
mov
dec
imulb
js
inc
mov
mov
sbb
and
sub
aaa
fimull
addb
xchg
js
mov
lahf
ss
sub
hlt
xlat
or
sbb
addr16
jne
inc
hlt
cli
push
roll
pop
push
and
and
pop
dec
icebp
jp
daa
out
or
fs
cli
loopne
pop
mov
jmp
xor
dec
jno
mov
cmp
ret
jmp
shl
or
adc
hlt
lcall
xchg
add
dec
sbb
outsl
fsub
sub
sbb
out
xor
inc
into
popa
jg
cmp
mov
jle
subb
addl
push
int
rcrb
in
cmp
loop
iret
je
mov
or
mov
jmp
loop
clc
pop
mov
mov
hlt
mov
roll
js
cmpl
mov
jae
mov
popf
sub
dec
sub
inc
pop
fnstcw
andb
jecxz
and
stc
mov
sbb
dec
xchg
adc
adc
xor
lds
and
rol
xchg
pop
mov
in
jle
mov
mov
xchg
leave
insl
fldenv
pop
movsb
daa
sub
test
sub
fwait
idivb
sub
sub
cmp
jnp
lea
mov
aad
ss
jecxz
gs
dec
mov
inc
fstps
and
cmpsb
les
cltd
ficomps
gs
imull
cli
dec
mov
or
cmp
arpl
inc
sub
add
out
les
mov
xor
and
insb
inc
dec
xchg
inc
push
sbb
pop
add
mov
mov
rcrb
aaa
out
das
stc
pop
pop
gs
not
mov
outsl
mov
xor
inc
pusha
and
cmp
or
push
fidivs
shlb
fcomps
lds
xor
push
sbb
adc
xchg
divl
push
leave
testl
in
push
and
orl
adc
addr16
shrl
inc
jecxz
push
jb
loopne
icebp
sahf
push
mov
sub
nop
xor
movsl
xchg
ret
sub
xchg
imul
js
bound
mov
outsb
dec
pop
xchg
xor
or
mov
ret
mov
dec
mov
mov
outsb
clc
fsubr
xchg
pop
mov
add
xorb
mov
xchg
sub
cmpsl
mov
test
mov
fs
pop
mov
repz
add
out
icebp
pop
dec
dec
les
add
mov
fadd
cmp
push
pop
pushf
and
xor
sbb
sti
enter
cmpsl
adc
jge
fstpt
in
push
inc
out
mov
sbb
adc
mov
or
sub
dec
mov
mov
lret
scas
not
imul
xchg
movsb
ret
adc
push
xchg
cwtl
es
adc
data16
insb
xchg
pop
mov
push
cmpsl
sti
lock
sbb
cld
add
pushf
mov
inc
cwtl
lea
push
cmp
mov
inc
jp
notb
stos
fadds
xor
sub
imul
fs
insb
mov
mov
je
add
mov
in
sti
ret
mov
or
fwait
mov
leave
aam
ret
and
dec
xchg
cmp
fdivrs
inc
push
es
lret
sub
adc
bnd
pop
jmp
testl
clc
data16
sub
jne
xchg
mov
mov
inc
cmc
and
dec
adc
and
sbb
scas
mov
dec
adc
stos
xor
cmpl
mov
cld
mov
push
popf
jno
call
popa
cmp
sub
mov
cli
addb
cltd
repz
xor
or
cmp
ror
inc
loope
jae
jae
pop
fnstenv
fwait
into
lret
dec
mov
dec
xchg
sbb
lods
fcmovbe
dec
inc
xor
ss
es
movsb
mov
cld
jmp
popa
dec
ljmp
xor
sbb
mov
xchg
push
jo
lahf
mov
loop
inc
enter
cwtl
xchg
add
or
cmpsl
shl
pop
inc
push
in
xor
sbb
push
add
sbb
pop
and
jle
popf
cwtl
cli
dec
sub
das
inc
lods
std
sub
aas
jne
repz
es
popf
pushf
int
pop
jo
dec
out
outsb
repz
mov
add
nop
adc
or
paddq
cli
jmp
cmp
pushf
mov
pusha
scas
call
inc
push
fdivrs
lock
sub
jmp
lahf
mov
push
stos
or
in
call
stos
pop
jne
sbb
push
jl
in
jae
popf
lcall
inc
shlb
xchg
and
mov
cmc
fcoms
cmp
hlt
lods
mov
fs
lahf
mov
xchg
imul
jno
movsb
shrl
mov
and
push
out
aad
push
divl
or
add
xor
mov
or
out
pop
push
das
xor
add
mov
pop
es
and
mov
pop
sbb
adc
cmpsl
cmp
push
aam
sub
jns
xchg
enter
sbb
roll
hlt
push
daa
sub
pop
mov
scas
cmpsb
cmp
cmc
push
xchg
mov
mov
sub
inc
inc
cld
mov
sub
cmp
test
rorl
outsb
cs
repz
mov
mov
rorb
in
pop
pusha
jnp
mov
mov
adc
aam
aaa
fucomip
mov
mov
mov
out
adc
xchg
rcl
jle
push
fstl
cltd
icebp
mov
sub
clc
pop
push
ljmp
popa
inc
xor
jnp
aaa
loopne
shlb
sub
cwtl
dec
addr16
sub
cmpsb
and
jb
cmc
cltd
cmp
jnp
fstl
mov
aam
stos
nop
adc
dec
mov
jb
mov
push
sbb
add
mov
cmp
xchg
xchg
cmp
jmp
dec
push
mov
adc
psubsw
and
jae
or
addr16
ret
sbb
sbb
nop
jb
cmp
je
jns
sub
cmc
xchg
jbe
and
ret
jg
sahf
imul
sahf
das
fisttps
cld
les
in
iret
mov
xchg
pop
mov
or
aaa
or
loopne,pt
add
xchg
push
mov
stos
dec
push
push
and
popf
sbb
pop
jne
pop
sahf
test
mov
mov
mov
arpl
or
or
dec
out
mov
aaa
fwait
lds
ror
call
xchg
stos
and
cmpsl
xorb
aad
movsl
cmp
leave
fucomi
popf
cmp
test
mov
loopne
pop
pop
jns
pop
int3
lea
aas
scas
xchg
ljmp
aaa
setl
lea
in
dec
lcall
cmp
jg
out
in
lcall
mov
imul
cmp
or
add
mov
cli
es
cmpsb
mov
lahf
je
cmpsl
mov
daa
imul
xchg
lret
sub
insb
jbe
push
insb
push
dec
test
in
pusha
and
push
pop
dec
jnp
loopne
push
sbb
jmp
lret
test
add
mov
mov
push
pop
dec
inc
mov
mov
cmp
and
scas
mov
fdivrl
and
inc
ss
and
jl
cmpsl
sti
push
cmp
shll
xor
push
xchg
cmc
xchg
or
les
aas
dec
shrb
jge
jb
movsl
push
test
adc
out
dec
pop
xor
inc
cmp
adc
sub
nopl
mov
into
es
xchg
cmp
imul
inc
sbbb
dec
cltd
cs
test
pop
icebp
pop
sahf
loope
pusha
fucomip
outsl
dec
jg
divl
out
int3
sbb
repz
mov
inc
out
lods
jne
scas
xchg
jg
out
mov
scas
mov
mov
push
xchg
gs
add
pop
xlat
cmp
pop
sub
sub
push
aas
jne
jp
mov
or
mov
jecxz
in
fisttpl
jle
punpckhwd
add
mov
adc
ja
pop
mov
repz
jb
call
addr16
and
push
das
out
movb
ror
aad
mov
lock
add
nop
jge
add
mov
adc
loope
inc
pop
xor
scas
ret
add
outsl
fldpi
jnp
jl
jmp
fdivrl
add
jae
lret
roll
sti
movsb
out
or
outsb
nop
lock
int3
outsl
subl
push
je
inc
push
js
pop
andl
ret
and
inc
out
fsts
fstpt
push
and
lret
xchg
mov
fcmovb
out
cld
and
fidivrl
adc
imul
rol
imul
jb
in
subl
jno
dec
and
ljmp
js
hlt
add
dec
adc
aas
pop
lea
imul
cltd
push
inc
fmul
jle
fisubrl
sbb
inc
les
add
jl
sahf
orb
mov
cmpsb
test
outsb
js
fcomps
out
frstor
outsb
cmp
inc
test
xor
pop
mov
xor
pushf
jmp
mov
add
and
cmpsb
sbb
inc
xor
inc
pop
test
push
smsw
movsl
stos
mov
in
mov
es
adc
outsb
xchg
icebp
lahf
xchg
jns
inc
sarb
test
and
and
mov
xchg
push
cwtl
push
mov
insb
dec
push
inc
add
lea
and
imul
push
sbb
inc
fcmovbe
or
ffreep
iret
xlat
mov
pop
pop
fiadds
xor
ljmp
les
loope
jg
add
subb
aas
insl
scas
jns
inc
jae
test
orb
arpl
popf
iret
adc
mov
and
mov
and
sub
test
subl
sub
test
cld
repnz
aas
mov
xor
test
jmp
shrl
fistpll
rolb
xor
insb
call
test
lea
xlat
out
nop
fimull
mov
pop
mov
divl
pushf
andl
aas
mov
sub
xchg
adc
or
mov
add
mov
mov
push
sbbb
mov
xchg
xor
cmp
imul
adc
repnz
sub
add
cmp
push
push
pushw
xchg
and
mov
outsl
and
sub
iret
ss
sub
add
add
inc
mov
das
fcoms
mov
ret
cs
lods
add
dec
cltd
bnd
dec
cld
repz
lea
rolb
jp
mov
jmp
add
outsl
rcll
or
push
mov
dec
xor
push
xchg
mov
sub
sbbl
dec
pop
outsl
jo
mov
add
adc
insb
mov
call
xchg
xchg
shlb
clc
and
add
outsl
sub
sub
inc
pop
xchg
add
xchg
jge
fcomps
xchg
pop
pop
test
movsb
cwtl
nop
hlt
or
pop
mov
daa
mov
lret
jns
cmp
push
dec
mov
jg
scas
mov
add
test
adc
jmp
sbb
xor
mov
mov
pop
aas
loopne
mov
cmc
pop
add
xor
leave
inc
push
jle
pop
lcall
mov
arpl
test
jae
aam
arpl
loop
cmc
imul
dec
adc
xor
in
sub
rcl
mov
jnp
add
add
gs
sbb
test
push
fcmovne
lods
das
or
pop
mov
inc
or
lea
or
jmp
pop
ret
nop
les
and
sub
cld
xor
xchg
fisubrs
mov
jecxz
inc
pusha
pop
lcall
push
xor
hlt
in
in
fucom
scas
mov
fst
repz
mov
loope
cmpsb
loopne
dec
xlat
mov
fwait
pop
adc
cltd
xor
push
addr16
daa
sahf
out
scas
push
scas
or
pushf
cmp
repz
mov
sbb
pushf
icebp
pop
cmp
jb
sbb
mov
js
insb
or
loope
loopne
rcrl
out
mov
out
mov
pop
incb
mov
sahf
pushf
mov
dec
xor
ds
jne
rcl
inc
mov
inc
lahf
pusha
mov
in
int
cmp
xchg
mov
xchg
inc
pop
mov
and
adc
xchg
mov
pusha
push
xor
sub
and
xor
nop
movsl
xor
xchg
mov
add
xor
add
mov
out
loopne
and
mov
pop
mov
sub
loope
and
cmp
aad
shlb
sbb
jg
sahf
mov
push
mov
movsb
test
test
xor
popf
cwtl
aaa
cmovb
mov
mov
sub
pop
pop
dec
and
lret
loope
dec
mov
and
loopne
lret
mov
fistpll
jo,pn
iret
leave
jae
pop
js
popa
clc
xchg
xor
jl
incb
adc
sub
