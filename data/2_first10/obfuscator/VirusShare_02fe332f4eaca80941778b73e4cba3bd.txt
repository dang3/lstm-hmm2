iret
cmpb
mov
in
cltd
leave
outsl
in
iret
sub
mov
pop
jnp
stc
jmp
mov
sub
cli
test
sub
push
test
rcll
mov
mov
aas
sub
jecxz
movsl
mov
sub
cmpsl
movsb
outsl
push
jp
dec
xchg
repz
mov
fs
out
mov
adc
fiadds
inc
shll
pop
xchg
jl
popa
ret
sbb
add
pop
cmpsb
inc
sub
xor
mov
lret
rorl
sub
sub
ret
dec
add
mov
inc
mov
out
mov
lods
sbb
dec
out
jbe
xorl
cmp
shl
push
fisttps
clc
ljmp
das
dec
jle
add
jge
test
test
sti
std
cs
aam
sub
outsb
nop
lret
or
jne
sub
mull
jmp
xchg
cld
xor
cmpsb
jbe
jno
xchg
dec
cmc
and
into
enter
mov
push
add
lret
into
xor
mov
xor
scas
cmpsb
scas
nop
jno
in
pop
adc
std
cmp
pop
stc
xor
xchg
ret
sbb
imul
pop
js
jmp
fstpl
mov
ss
fwait
pop
stos
ds
fidivrs
mov
rol
xchg
movsl
fistpl
add
pop
iret
mov
xor
mov
test
std
fidivrs
add
inc
rcrl
or
cmp
shlb
aas
and
push
and
inc
mov
inc
mov
fwait
lret
test
scas
adc
lret
jnp
mov
dec
sbb
bound
adc
and
call
inc
sbb
incb
mov
add
insl
cmpsl
mov
sbb
nop
add
mulb
adc
call
xchg
push
push
jle
pop
and
sarl
inc
or
adc
fs
iret
add
pop
or
and
fiadds
int3
sbb
push
std
dec
inc
iret
clc
and
enter
movsl
lock
andb
adc
jne
rorl
inc
mov
pop
jno
ljmp
into
mov
xchg
std
lret
mov
sub
das
loope
jne
pop
jne
cmp
test
jno
sbb
movsl
out
jecxz
orl
sbbl
out
lea
jmp
xchg
pop
stos
xchg
mov
sahf
ljmp
mov
cmpsb
jne
sbb
mov
and
push
dec
adc
mov
daa
lea
fsin
add
xchg
xchg
rorl
aad
ds
cmp
push
ja
outsl
idiv
mov
clc
loopne
mov
cmp
insb
inc
and
mov
out
mov
addl
push
outsl
mov
adc
xchg
out
dec
loopne
pop
ret
aad
notl
xchg
inc
movsl
or
adc
or
daa
loope
dec
ret
cwtl
nopl
and
mov
pop
mov
mov
inc
ja
in
push
into
jl
inc
mov
pop
int3
or
lret
test
scas
jno
xchg
cli
cmc
imul
and
jo
fimuls
das
mov
insl
add
cs
mov
lods
ljmp
mov
int3
adc
mov
aaa
mov
test
ficoml
xchg
and
push
mov
repz
sub
movsb
xor
adc
cmp
sub
mov
and
je
sub
cs
xchg
dec
insb
xchg
xor
sub
clc
cld
imul
dec
adc
xor
mov
hlt
mov
inc
pusha
cmpsb
push
lods
cmpsl
mov
xor
cltd
insb
insl
cltd
loopne
cli
rclb
in
dec
sbb
cmpsl
in
push
divb
push
lock
push
cs
enter
push
lret
ret
inc
int3
xchg
pop
mov
or
and
fs
xchg
push
sub
pop
jg
sub
dec
sbb
fcmovb
scas
fdivrl
cmp
mov
ret
sbb
sbb
adc
mov
xchg
mov
cmp
push
repnz
sub
or
jno
lcall
sbb
fadds
repnz
adc
adc
aam
sti
repz
mov
ja
fcomps
mov
sbb
outsl
aad
scas
out
fs
mov
inc
stos
flds
cmpsl
inc
cmpsl
out
movsl
jnp
inc
out
jbe
ret
adc
mov
xor
pop
gs
mov
repz
hlt
aas
inc
in
enter
out
sar
pop
dec
cmp
loop
push
fildll
leave
aaa
mov
movsb
xchg
pop
dec
or
fistpll
andl
and
loope
lods
fdivs
addr16
adc
dec
pop
adc
or
scas
mov
lret
push
sub
insb
sub
insb
scas
arpl
scas
lods
jae
cmp
movsl
inc
mov
test
loope
pop
loope
cmp
xchg
cli
mov
stos
mov
in
cmpsl
xor
xchg
sbb
leave
cmc
mov
sub
add
add
mov
dec
lret
sti
jo
hlt
add
cmp
movsl
sub
sub
call
test
insl
loop
dec
pop
cmpsl
out
add
mov
rcrl
xchg
movsb
icebp
repnz
dec
mov
sbb
ret
insb
mov
mov
pop
cld
imul
into
decl
das
addr16
cmpsl
idiv
ficomps
test
test
ljmp
inc
test
out
insb
jle
mov
cld
loop
sbbb
pop
mov
inc
stos
push
outsl
push
ja
push
rclb
add
cli
dec
cli
pop
rcll
or
popa
push
cltd
aaa
shll
mov
push
xchg
andl
icebp
movsb
in
mov
in
stos
popa
fwait
xchg
mov
xchg
aaa
and
lods
imul
push
loop
sub
xor
insl
iret
and
sbb
jmp
add
jns
iret
dec
push
leave
add
adc
or
fnstcw
jle
aaa
in
gs
pop
jno
pop
mov
and
loopne
mov
jbe
push
cmp
js
jmp
mov
pusha
fwait
adc
test
dec
cmp
pop
roll
out
mov
sub
cmp
sbb
adc
lea
pop
push
push
push
sub
into
call
adc
lsl
mov
out
and
add
cmc
inc
push
lea
mov
sub
and
out
dec
push
call
fstpl
fwait
rcll
jmp
push
out
pop
js
aam
push
lock
lahf
loop
cs
dec
push
test
fadd
es
cmpsb
jbe
loopne
or
pop
jg
mov
shlb
dec
cltd
jo
pop
jo
sub
dec
inc
mov
and
fdivrp
ds
push
int3
loop
and
push
and
mov
inc
addl
xorb
mov
push
pop
stos
xchg
incb
dec
xchg
gs
dec
add
lret
outsb
or
xchg
movsb
or
mov
out
stos
insl
inc
push
inc
adcl
mov
in
mov
mov
mov
and
xor
rcrl
xor
pop
inc
pop
xchg
jmp
rcr
pop
mov
lods
stc
xlat
push
push
movsb
lock
out
dec
sub
mov
fwait
jns
out
je
xchg
mov
jle
or
loopne
das
mov
aas
movsl
mov
jmp
cs
sub
or
pop
mov
ds
pop
cmp
mov
cwtl
div
hlt
mov
fcomip
cmp
mov
out
jb
sti
sbbl
xlat
pusha
mov
jmp
adc
cltd
jmp
cs
adc
pop
jae
sbb
jns
js
mov
inc
repnz
test
outsl
mov
mov
jle
xchg
in
or
jmp
or
inc
loop
test
sbb
popf
loope
jo
lahf
sub
iret
sbb
ret
pop
push
daa
sbb
rcll
push
scas
je
popl
sub
shll
bound
in
cmp
adc
mov
push
outsl
jmp
pop
mov
je
add
dec
adc
cwtl
mov
inc
xchg
sbb
jno
sub
rcll
sub
das
jmp
mov
cld
cmc
arpl
movsl
xchg
pop
sub
outsb
fs
ja
imul
outsb
sub
push
rorb
shlw
int3
addr16
push
push
xor
and
sbb
ret
inc
dec
jecxz
jle
test
aaa
cmp
xchg
ljmp
mov
jns
jle
xor
xchg
cmc
cmc
mov
xchg
inc
dec
clc
cmc
test
jle
jo
js
push
pop
push
mov
pop
jae
jbe
cmp
clc
cmc
mov
xchg
jae
jp
push
mov
pop
clc
jbe
xor
jl
test
push
test
pop
ror
cmc
cmc
shl
test
nop
stc
jmp
jmp
call
push
rol
pop
or
loop
jecxz
jnp
xchg
mov
cmp
push
test
ret
dec
sub
jp
mov
and
or
fnop
add
mov
shl
jle
test
jbe
push
and
pop
jbe
and
test
push
add
pop
fnop
jge
add
push
je
jge
xor
pop
ror
mov
and
nop
clc
lea
loop
jecxz
add
push
add
sub
mov
hlt
xchg
push
stos
pop
xor
jb
jns
and
pop
add
push
add
pop
push
add
pop
test
jmp
dec
pop
fcmovu
mov
cmp
sbb
insl
cwtl
aam
outsl
into
popa
mov
ret
mov
xchg
out
sbbb
nop
lret
inc
adc
sti
les
add
add
add
or
jae
xor
jg
push
shl
pop
inc
dec
cld
mov
shr
test
je
xor
push
call
jmp
push
test
jg
mov
adc
adc
das
dec
xchg
mov
or
add
cwtl
outsb
or
push
add
sbb
dec
sahf
in
out
add
sub
lds
add
pop
add
shr
push
push
ror
pop
pop
push
jbe
jno
cmp
pop
rol
jo
push
inc
pop
shl
stc
shr
push
mov
push
xor
pop
pop
test
loop
jecxz
and
mov
xchg
sbbl
jnp
aas
inc
loop
jecxz
sbb
cli
or
jo
xchg
dec
xor
mov
in
pop
in
js
cli
mov
daa
sarl
fisubrs
jb
cmp
adc
aam
aam
in
jno
cld
mov
inc
inc
inc
inc
ror
push
jb
xchg
pop
ror
add
push
call
lcall
mov
fmull
jmp
xchg
jg
and
lahf
mov
add
mov
and
pop
push
jb
cmp
pop
call
mov
aaa
xor
mov
fxch
dec
in
and
stos
das
stos
loope
jmp
punpckhdq
dec
adc
sbb
imul
dec
jne
push
call
in
popa
call
cmpsl
xchg
xchg
cmp
fcoms
lods
jmp
cmp
in
mov
scas
arpl
jmp
mov
ja
loopne
scas
test
push
sub
subl
outsl
sbb
fs
outsl
testl
add
sahf
dec
add
mov
sub
hlt
out
es
and
andl
into
fnstenv
cmp
pop
mov
mov
and
call
mov
and
mov
loope
mov
dec
mov
mov
mov
lret
mov
test
cmp
sub
xor
ljmp
pop
outsl
in
ficoml
cld
addr16
mov
mov
out
mov
stc
hlt
stos
or
jmp
mov
push
cmp
pop
nop
inc
dec
nop
jae
xor
mov
pop
rcll
add
pop
roll
xchg
mov
aad
lret
pusha
cs
add
loope
or
and
jmp
dec
inc
inc
fistpl
popf
aad
jmp
dec
lret
test
mov
add
call
jno
jle
mov
jg
dec
add
jae
push
fdiv
test
mov
jb
lahf
jp
mov
add
addr16
and
jecxz
xor
mov
ljmp
scas
sarb
scas
incb
callw
add
stos
es
mov
jmp
inc
mov
inc
jecxz
insl
mov
mov
fildll
sub
sar
xchg
sbb
cmpl
inc
test
push
cltd
jecxz
cmp
clc
xchg
fmull
sbb
dec
aad
mov
cmpsl
mov
outsb
mov
mov
imul
lret
xchg
filds
mov
outsl
rcrl
pop
enter
and
dec
cltd
jns
pop
mov
sub
dec
dec
test
pushf
fstpl
push
movb
dec
lock
add
repz
das
adc
movsl
ds
sar
jbe
push
repz
rcll
lods
sti
bound
ret
sbb
popf
adc
in
out
insl
adc
inc
or
xchg
pop
push
dec
jecxz
lock
xor
mov
imul
fsubr
xchg
ja
in
enter
sbb
fcom
push
shl
mov
repnz
adc
ret
movsl
lods
pop
add
push
push
push
mov
mov
or
movsb
xchg
mov
xchg
adc
vpxor
pop
mov
sub
outsb
and
sub
push
subb
shlb
adc
cs
push
cltd
sti
fistps
xor
dec
add
xor
scas
sub
pop
and
mov
add
jl
negl
push
repnz
jae
cld
add
iret
negb
push
sub
xor
fildll
ret
sbb
loopne
insb
jne
xchg
daa
add
mov
pop
fsubr
dec
decb
push
mov
pop
xchg
sti
xchg
cmp
cmp
aaa
arpl
pop
cld
imul
adc
cmp
xor
push
adcb
outsl
cmp
add
mov
lds
ljmp
mov
stos
imul
lods
mov
jmp
dec
pop
sbb
test
cmp
adc
idivb
jo
adc
rcll
jbe
imul
lahf
mov
mov
je
leave
push
int
fisubs
jg
or
loope
fwait
xor
xor
mov
inc
cmp
cmp
jno
xchg
lds
addl
lds
stc
scas
fidivl
out
lds
sahf
sbb
cwtl
cs
jge
insl
lods
roll
dec
jae
lods
lahf
int3
jo
lock
gs
xlat
pop
add
xor
xor
loop
aas
xlat
cmp
sub
jle
inc
cmp
insb
clc
sub
mov
stos
and
pop
add
mov
push
adc
mov
es
push
or
movsb
addr16
fs
sbb
jns
jb
mov
lret
out
mov
mov
int
fucom
sub
fdiv
jge
rorb
loope
and
cmp
ss
rorl
mov
jne
sahf
mov
mov
stos
lahf
push
push
movsl
mov
test
lcall
mov
or
xorl
mov
js
loopne
jb
xor
insb
xchg
cli
call
fldcw
dec
jnp
adc
xor
imul
push
adc
inc
imul
es
stos
addb
mov
xadd
adc
shlb
jmp
or
pop
or
pop
adc
mov
lods
sarl
out
out
mov
xor
frstor
jbe
jg
shll
mov
pop
add
adc
shlb
cmc
loopne
imul
adc
xor
jb
mov
popf
adc
jecxz
fs
pop
out
fadds
pop
xor
pop
mov
sbb
jecxz
lahf
jmp
xchg
mov
sbb
dec
mov
hlt
mov
push
das
loop
stos
imul
rcrl
test
mov
pop
je
and
scas
push
pop
sub
sbb
es
int3
inc
xchg
mov
pushf
jle
jg
xlat
test
push
xor
and
loop
cmpsb
push
cmp
or
aam
arpl
inc
pop
dec
mov
inc
push
and
insl
mov
stos
xchg
mov
xor
add
mov
push
fisttpll
inc
xchg
and
icebp
push
shlb
hlt
jb
insl
push
lret
adc
xchg
and
pop
out
sub
mov
mov
jl
cmp
lds
inc
lcall
push
or
divl
and
and
push
pop
or
inc
dec
push
or
stc
mov
mov
out
mull
repnz
leave
mov
sahf
and
pop
cmp
icebp
push
xchg
sub
lock
loopne
jle
fwait
mov
and
bndstx
stos
gs
fwait
hlt
call
fs
sbb
mov
and
push
in
stc
jp
clc
lea
or
movsl
push
arpl
les
mov
outsb
mov
or
pop
clc
jns,pt
out
test
pop
fstp
sub
push
fstpl
mov
inc
adc
out
and
cltd
cltd
xchg
ljmp
dec
adc
sub
jl
pop
ds
ds
push
xor
outsl
mov
faddp
out
xor
aas
pop
sub
cmpsl
ret
mov
sahf
pop
or
leave
fadds
clc
push
push
imul
out
xchg
mov
int3
arpl
out
into
ret
xchg
adc
and
jmp
pop
inc
sub
jmp
dec
lods
repz
push
cmp
insb
jnp
cmp
and
pop
jbe,pt
stos
xchg
andb
pop
in
les
pop
cld
clc
rep
xor
pop
filds
leave
xchg
sub
popf
xchg
mov
lock
testb
bound
setne
mov
jbe
sub
cwtl
cmp
test
pop
cmc
addl
cmp
iret
jecxz
xchg
cli
mov
mov
pop
loopne
mov
inc
xchg
sbb
dec
shll
xchg
inc
push
std
cltd
ja
shrb
stos
adcb
test
fsubs
mov
push
jle
jmp
xlat
js
cmp
fisubrs
jnp
jecxz
dec
adc
mov
xchg
repz
std
in
adc
jae
jle
xchg
mov
dec
mov
call
fsubl
nop
xchg
out
mov
push
jno
ret
cmp
mov
add
add
cs
sub
adc
or
sub
outsl
ds
in
and
adc
in
and
pop
sub
add
repz
sbb
sub
popa
nop
scas
stos
roll
fidivs
push
xor
movsb
mov
adc
outsl
sub
stos
inc
movsb
sbb
jmp
jg
fwait
iret
xchg
adc
mov
aad
testb
test
jge
sahf
sbb
inc
test
jge
out
fstpt
fs
jl
ljmp
aas
lods
aad
mov
imul
pop
pop
push
mov
fldl
inc
les
cmp
cmpsb
mov
xor
mov
stos
cmp
jp
and
in
dec
popa
lret
ss
cmp
dec
sub
inc
cmp
dec
fcmove
and
aam
push
mov
mov
adc
xchg
test
rcrb
cmp
dec
imull
filds
sub
mov
mov
sub
lahf
mov
in
xchg
and
pop
push
fsubs
xchg
inc
fcom
xor
pop
sbb
sub
hlt
jge
fstl
cmpb
inc
das
lods
sbb
jno
pusha
push
mov
mov
hlt
mov
incl
dec
outsb
inc
adc
aas
sub
cmp
lcall
lds
and
idivl
sar
in
negb
or
add
idivb
nop
movsl
lock
loope
lret
push
aad
xorl
mov
jbe
push
int3
adc
loope
insl
arpl
imul
sbb
or
xchg
aaa
pop
rorl
incl
jnp
mov
mov
inc
out
out
inc
gs
cltd
pop
xor
repnz
data16
fldenv
inc
jl
xor
int
sub
test
and
push
adc
ret
imul
in
adc
push
add
add
sar
sub
sub
inc
mov
jmp
jg
mov
xchg
dec
out
test
cs
int
lahf
repz
call
andl
mov
aad
stos
push
inc
or
mov
pop
adc
stos
stos
push
sarl
shll
sti
sarl
jle
nop
ficomps
add
in
jge
out
test
mov
pop
cs
xchg
gs
or
push
jo
inc
mov
fld1
data16
cs
lods
pop
out
push
gs
push
cli
push
incb
and
sbb
mov
push
in
xchg
test
jo
data16
aad
stos
loope
insl
add
imull
and
jmp
push
xor
inc
int
sbb
inc
xchg
dec
das
mov
cmp
loop
push
mov
or
loop
fstpt
es
mov
lcall
push
mov
mov
mov
cmpsb
test
push
mov
in
pop
jecxz
pop
xchg
es
scas
cmp
mov
or
add
adc
push
jmp
pop
int
insb
or
aas
mov
shr
scas
push
xor
push
testb
push
fwait
mov
jo
sahf
cmc
dec
xchg
pop
mov
fcoms
inc
cmp
test
shrl
fimuls
and
inc
push
dec
xchg
push
fs
or
out
loopne
add
push
push
xchg
dec
push
hlt
ljmp
dec
lret
xchg
cmc
test
shl
lock
insb
pusha
sahf
rcrb
add
gs
pop
mov
mov
add
rcrl
and
xchg
pop
sub
cwtl
fs
fsubs
sahf
and
cmpsb
or
popa
jp
pop
es
int3
pushf
ror
in
sti
add
insl
lcall
in
xor
out
jg
xchg
mov
sbbl
pop
lea
push
and
mov
mov
data16
jo
fistpl
jnp
rcll
xchg
mov
movsb
sarb
push
xor
mov
and
out
inc
xor
mov
dec
pop
adc
dec
xor
sub
mov
je
enter
fisubrs
dec
push
out
mov
into
lock
je
jb
dec
cltd
sub
movb
fs
cs
daa
out
mov
push
jo
pop
adc
rclb
call
jnp
ffree
dec
inc
into
lcall
cmp
jl
pop
sbb
scas
insl
hlt
filds
mov
cmpsb
lret
fs
add
sarb
mov
insl
and
jecxz
or
push
sub
inc
lods
mov
adc
xor
cmpsl
push
cmp
dec
inc
mov
subb
sub
mov
pop
pushf
or
test
fcmovnb
nop
mov
movsb
xchg
call
into
inc
mov
cltd
imul
sbb
scas
and
mov
int3
lea
xchg
sub
rolb
aas
pushf
stc
xor
cmp
stc
aad
rolb
ror
push
stc
push
add
imulb
neg
fsubrs
xchg
dec
pushl
sbb
icebp
and
rorb
in
add
push
jns
bound
testl
flds
insb
ds
std
fcmovbe
dec
inc
jne
stos
push
mov
push
loope
xchg
push
push
sub
dec
sub
ss
push
inc
dec
xchg
fcoml
xchg
fsubl
mov
pop
rcr
xchg
call
xchg
loopne
out
in
cwtl
in
push
jp
jg
mov
sub
dec
lods
mov
loop
outsl
lea
in
test
mov
aas
dec
jp
lcall
xor
clc
ss
sbb
xor
and
push
setge
sub
popa
imul
popl
adc
mov
in
sbb
imull
adc
in
cmp
shll
xchg
push
jge
sub
loopne
das
xchg
movsb
rcrb
lds
loope
bound
add
or
jae
jb
sbb
dec
inc
push
or
lds
or
mov
lret
icebp
inc
inc
xchg
push
xlat
inc
push
add
fs
inc
fldt
das
inc
nop
fsubl
cmp
popa
aad
negb
test
imulb
out
add
mov
dec
push
sbb
cmp
jns
and
clc
out
jle
dec
pusha
add
movsl
jle
push
sub
mov
pop
in
ljmp
inc
insb
inc
roll
mov
mov
enter
shll
popa
or
push
mov
or
adc
jne
xor
mov
mov
sbb
cld
and
hlt
ja
jmp
scas
arpl
or
push
imul
sbb
cmp
mov
inc
and
jl
mov
int3
cmp
pop
lahf
lea
out
lods
lods
loopne
xchg
cmpsb
xor
sahf
add
xor
or
xor
lcall
sti
mov
inc
sbb
add
jnp
adc
rcl
push
or
sub
rcrb
or
push
sbb
xchg
inc
inc
cmc
mov
cmp
cld
mov
jle
scas
stos
roll
push
push
xchg
dec
lods
dec
shrl
frstor
cwtl
fstl
cltd
movsl
cltd
mov
sub
subl
pusha
pusha
mov
jecxz
sub
lcall
jae
mov
mov
xchg
repz
dec
jp
add
push
xlat
inc
out
pop
cmp
push
pop
push
cmp
and
daa
add
mov
loopne
rcr
movl
aam
incb
ud0
nop
sti
sub
mov
sub
mov
lret
mov
stos
sbb
aas
dec
jle
popf
sbb
movsl
cltd
jg
in
in
pusha
sub
pop
xchg
rcll
add
ss
pop
cltd
scas
lret
pushf
jnp
mov
add
xor
pop
mov
mov
jle
sub
jecxz
cltd
out
pop
je
pusha
xor
bound
mov
adc
nop
mov
cmp
adc
in
nop
clc
xor
xorb
xlat
lcall
imul
aad
push
or
mov
jg
jecxz
loopne
arpl
jbe
cmpsb
fnstsw
outsb
ja
cmpsl
popf
jp
fiadds
xor
shlb
mov
xor
rcpps
adc
rorl
sahf
fnstenv
lods
fiadds
repz
sbb
into
inc
rclb
cs
fwait
push
or
pop
dec
xchg
sub
hlt
stc
orb
add
jae
add
enter
or
fwait
mov
mov
in
pop
je
addl
xor
inc
xchg
xor
inc
mov
mov
lea
mov
push
xchg
les
mulb
sub
icebp
daa
stos
lcall
pop
jmp
add
sbb
out
mov
andb
mov
popa
repz
repz
ds
std
ja
add
and
icebp
or
jb
adc
xchg
into
lret
pop
aam
test
mov
out
push
xchg
inc
popf
mov
push
jmp
cli
dec
mov
pusha
in
pop
sbb
dec
xchg
jb
mov
push
jmp
push
pop
xchg
rcrl
jae
fsubl
scas
and
fistps
cmpsl
push
dec
lcall
lock
sahf
out
sub
popa
xor
scas
jp
ds
adc
frstor
call
jge
inc
push
add
les
sbb
popf
popf
aas
adc
clc
fs
xchg
push
jmp
out
mov
adc
push
sbbb
outsb
fwait
mov
les
mov
jne
cwtl
lock
in
repnz
add
icebp
loop
popf
loop
and
jns
cmp
pop
lds
sbb
arpl
lcall
fnstenv
fwait
test
cmpsb
mov
loope
lods
cmp
and
addb
or
push
insb
pusha
jbe
data16
ret
test
aam
mov
test
mov
push
orl
xchg
cmp
jmp
sahf
outsb
inc
das
pop
ret
shlb
pop
cs
outsb
pop
mov
pop
xor
loope
mov
push
sbb
pusha
frstor
pop
mov
xor
dec
pusha
mov
lret
fmuls
rolb
jne
in
sbb
cmp
outsl
mov
cltd
nop
cmc
int
mov
mov
stos
mov
add
jb
sbb
repz
sar
sahf
jno
jge
jb
jge
sub
dec
push
sarl
or
les
pop
out
mov
pop
ljmp
js
push
add
dec
es
cmp
jo
ja
adc
jmp
cmp
cmpsb
or
push
fldl
lods
pop
xor
cmp
sbb
mov
or
or
dec
pop
mov
pop
push
pushf
icebp
out
cmp
push
sahf
adc
xor
pop
mov
dec
in
mov
mov
je
les
scas
fstps
ret
jp
and
outsl
lods
cltd
fimull
mov
dec
dec
cld
inc
mov
leave
mov
cmp
insl
jl
nop
test
jbe
mov
sub
data16
scas
out
lock
cwtl
into
fs
push
sbb
jno
cmp
pop
shl
in
adc
jg
test
adcb
mov
les
imul
push
addl
cli
push
jae
lahf
icebp
cwtl
pushf
adc
pop
pushf
xchg
stc
movsl
outsb
lock
test
cmp
inc
jge
rclb
inc
and
inc
cs
xchg
cmp
xor
imul
ja
loop
dec
fstl
stos
mov
mov
aas
popa
jg
sti
icebp
icebp
add
adc
out
cmp
mov
mov
jno
in
test
sbb
xchg
mov
push
dec
cmp
pop
cs
jl
dec
mov
push
push
push
sarb
cwtl
mov
cmp
mov
cmpsb
in
inc
mov
mov
mov
sbb
or
xchg
pop
push
push
cmpsl
push
adc
fists
add
mov
mull
cmpsl
xchg
cli
pop
subl
mov
mov
aam
scas
mov
cwtl
pop
js
into
mov
fstps
inc
in
sub
xorl
fdivl
shll
mov
in
inc
sarb
lret
push
sub
add
aam
pop
in
sub
std
sub
dec
pop
icebp
push
mov
push
mov
pop
je
loop
mov
lret
xlat
add
mov
mov
dec
mov
adc
outsb
imul
mov
in
and
push
xor
mov
xchg
sub
push
jecxz
sub
hlt
scas
insl
cwtl
and
add
jecxz
pop
push
stc
cmp
adcb
clc
mov
cld
lods
jae
in
mov
jl
jo
lret
lds
jb
xchg
ljmp
xchg
push
fisttps
cmovl
jno
iret
add
xor
and
xor
fwait
mov
xchg
fnstenv
inc
jns
aad
or
mov
cmc
scas
popa
lea
dec
dec
lret
out
test
pop
outsl
stc
dec
push
dec
iret
sahf
scas
movsb
sar
stc
outsb
ljmp
mov
int
icebp
ret
xchg
xor
in
or
xor
insl
stos
test
sub
mov
cld
add
leave
popa
sbbl
pusha
shl
adc
add
es
push
lahf
pop
loope
leave
xor
imul
sub
andb
sbb
in
jbe
leave
fisubl
rcrb
xor
dec
pop
pop
dec
cmp
and
xor
in
push
icebp
pop
lcall
xor
pop
mov
cmp
cltd
xchg
cwtl
incb
nop
ljmp
test
int
into
loopne
stos
loopne
xor
cmc
fstpl
xchg
push
pop
ds
pop
test
fdivrl
jl
movsb
es
or
and
std
fidivrs
cmp
inc
or
inc
cmp
push
imul
lea
pushf
pop
verr
pop
rcll
dec
push
mov
in
cmp
xchg
push
fcoml
push
jge
out
imull
mov
add
mov
std
lret
fcoms
out
cmp
loope
dec
pop
cli
call
push
addb
inc
test
sub
enter
push
xchg
fdivr
sub
ljmp
jno
cmp
fs
sahf
mov
cmpsl
cmp
clc
sub
sub
clc
sbb
jecxz
lret
adc
add
and
xchg
popf
push
adc
dec
xor
and
rcrl
dec
test
icebp
ss
stos
out
cltd
cmpsb
mov
in
in
adc
or
rcll
in
ud1
and
cmpsb
flds
jecxz
mov
orl
mov
push
test
and
das
sbb
lahf
mov
daa
outsb
pop
jae
call
push
vminsd
push
inc
scas
outsb
push
pusha
idivl
int3
push
mov
lock
test
clc
pop
std
ljmp
and
sbb
enter
adc
sub
and
inc
ret
mov
pop
test
pand
arpl
pop
cmp
clc
cmp
jmp
les
mov
push
sub
aas
dec
dec
in
inc
inc
leave
lock
cmp
test
into
inc
mov
ret
or
cltd
frstor
pop
xchg
lods
outsb
mov
adc
push
rol
scas
push
les
test
jns
popf
stos
xlat
mov
inc
in
add
daa
push
cmpsl
out
adc
icebp
lcall
xchg
pop
dec
mov
mov
pop
sub
jbe
pop
dec
jbe
sbb
arpl
andb
int
in
cs
mulb
fcompl
add
roll
push
push
xchg
jne
dec
out
and
add
inc
incb
xchg
out
addb
cmp
jne
bnd
adc
stos
les
mov
pusha
shlb
mov
rcll
cmc
hlt
cmp
lret
push
lret
loopne
pop
pop
fcmovnbe
gs
or
push
push
ljmp
rol
jne
and
jp
sarl
sbb
inc
test
lds
and
negl
sbbb
shlb
dec
mov
movsl
and
es
push
adc
push
inc
push
xor
ljmp
inc
mov
xlat
jp
adc
xorl
scas
pop
mov
add
xchg
sub
sub
push
pop
mov
sub
and
cmp
pushl
xor
movsl
sbb
push
mov
mov
fsubl
push
jno
popa
push
cmp
mov
cmp
inc
dec
cmpsb
enter
and
and
ret
fstpt
in
mov
test
lret
in
hlt
fnsave
jne
cli
adc
pop
adc
in
daa
subb
out
or
fisubrl
insb
ficomps
sbb
xchg
mov
ja
dec
sti
pop
cli
cmpsb
fldenv
addr16
ret
cmc
sti
add
push
cmpsl
pusha
jo
jbe
cmp
sbb
arpl
addr16
ret
mov
pop
lods
mov
adc
fbstp
adc
imulb
rcr
aaa
jnp
data16
jecxz
cs
fs
adc
mov
sbb
jae
outsb
outsl
inc
rcl
sub
push
lods
mov
repnz
popf
lods
stc
xchg
insl
dec
lods
adcb
cmp
movswl
in
pop
ja
dec
sub
ljmp
inc
jge
push
mov
filds
addr16
inc
fcmovnb
hlt
stos
xlat
lret
jle
dec
mov
les
push
popf
inc
jle
adc
adc
in
cmpsb
cmp
mov
lods
inc
push
jbe
outsl
lods
arpl
xlat
pop
inc
and
push
jecxz
lcall
aad
sub
in
std
mov
sti
and
pusha
shll
out
xchg
adc
sub
bnd
xorb
mov
stc
es
inc
cwtl
je
jnp
pop
sti
and
jecxz
cltd
xlat
retw
mov
mov
movsb
out
inc
pop
jno
mov
inc
sub
jns
jno
xchg
xchg
xor
sub
mov
inc
loop
xchg
dec
add
xlat
sahf
push
and
pushf
lds
jb
sub
lcall
test
leave
push
insb
push
ljmp
mov
sbb
imulb
dec
inc
test
andb
and
pop
xchg
jb
outsl
out
loop
movsl
adc
aam
mov
jecxz
sbb
push
call
jmp
mov
pusha
pop
cwtl
lret
mov
stos
xchg
std
mov
stos
lret
lahf
adcl
aad
int
xchg
jmp
cmp
gs
imul
adc
mov
add
push
push
in
jl
scas
adc
leave
mov
lods
imul
scas
sahf
fcomp
sbb
xor
push
cwtl
outsl
rol
pop
outsb
mov
pop
jbe
dec
pop
stc
or
xchg
mov
pop
xchg
xchg
mov
iret
push
mov
mov
fst
cmpsl
dec
fisubs
sub
pusha
cmp
xchg
lahf
and
popa
sub
or
aaa
xor
and
cmp
insb
lods
adcl
cmp
xchg
pop
push
jae
lcall
ja
sub
inc
push
daa
fdivl
js
ret
pop
hlt
pop
mov
leave
int
in
and
fwait
dec
mulb
aas
sub
mov
jl
movsl
hlt
jbe
jns
xor
or
sub
aad
jae
stos
mov
popa
sbb
xchg
add
pop
cli
loop
faddl
outsl
fstps
push
sarl
fscale
sub
rcl
adc
sub
cmpsl
add
xchg
xchg
fwait
inc
mov
std
fs
rol
pop
sbb
cmpsl
movsl
mov
adc
adc
ret
stos
fs
aas
lret
jge
mov
sub
pop
fstpt
pushf
filds
push
icebp
daa
push
rol
xlat
adc
icebp
insl
mov
mov
fisubl
xor
add
ds
movsl
js
sbb
popf
lcall
xor
push
add
xlat
pop
mov
je
cmpsb
aaa
jns
cmpsl
inc
mov
pop
xor
fdivrl
aaa
ss
jne
psubsb
les
inc
mov
or
sti
jnp
fwait
add
or
arpl
xchg
mov
push
imul
insl
cli
lods
sub
and
outsl
jmp
dec
adc
dec
ljmp
lds
xchg
jo
shll
arpl
xor
pushf
scas
shlb
mov
push
mov
test
ljmp
pop
in
push
inc
push
fnsave
push
push
xchg
inc
pushf
xlat
iret
add
push
aam
ss
ljmp
cld
xor
fcomps
dec
dec
mov
inc
les
and
or
stos
shl
or
cmpsb
fcmovne
lods
jne
or
movsl
xchg
ret
pusha
sbb
cmp
mov
imul
sti
xor
fstl
dec
insb
nop
rcr
daa
dec
inc
add
rol
int
push
sub
imul
push
inc
mov
adc
xchg
or
pop
add
sub
dec
jae
es
ds
test
push
iret
js
push
lods
into
mov
pop
rclb
fcmovne
jno
push
xchg
sub
pop
mov
scas
loope
cwtl
roll
jle
ljmp
sarb
push
and
xor
inc
bound
dec
sbb
lods
aas
popf
gs
aam
xor
pusha
repnz
mov
in
jle
dec
out
stos
in
push
loope
sub
inc
sbb
in
pop
out
lds
icebp
daa
test
jle
insb
jle
clc
lods
xor
adc
aaa
mov
sahf
in
stos
lea
mov
ret
popa
ret
test
mov
std
push
dec
xchg
push
or
pop
cli
mull
js
sbb
test
scas
imul
pop
xchg
dec
adc
sub
lret
cltd
jno
das
pop
cmp
mov
inc
ror
sti
cmp
and
pop
mov
in
xchg
xchg
push
mov
lea
ljmp
bound
into
dec
fcomip
mov
sub
inc
mov
popf
jo
lret
or
mov
adcb
or
and
hlt
iret
sbb
nop
xchg
cwtl
cmp
lds
jge
mov
cs
push
nop
push
xchg
xchg
push
xlat
insl
lcall
push
cltd
push
mov
lret
aad
push
sti
aas
aad
mov
stos
jb
sub
mov
or
mov
aaa
mov
sub
cmp
aad
stos
fnstcw
stos
jns
xchg
fwait
adcl
inc
shld
repz
fisttpl
stc
sbbl
adc
push
dec
aaa
fdivl
or
testb
xor
xor
cltd
xor
mov
lret
fimull
hlt
sti
pushf
sub
vcvtps2dq
cmpsb
stc
fisubs
out
push
mov
jb
subl
movb
das
es
cld
jle
out
leave
inc
test
or
cmp
mov
popa
mov
out
sub
jmp
jo
pop
stos
pop
push
scas
xor
dec
lret
push
xchg
fimull
push
aas
lock
roll
lret
push
inc
cmp
shl
jl
and
loopne
aam
dec
and
xor
xor
adc
out
addl
clc
movsb
jecxz
lds
adc
push
add
scas
xor
jns
or
stos
pop
add
mov
adc
adc
movsl
rol
xor
push
jmp
in
cmc
ret
sub
into
sub
add
cmc
int3
out
shl
test
cmp
push
je
inc
je
xor
int3
mov
xor
adcl
or
mov
mov
arpl
inc
jge
cli
jp
frstor
or
sbb
into
add
fisubl
cmpl
insl
xchg
movsb
popa
jg
mov
test
lcall
adc
aaa
pop
mov
push
lahf
cmp
sub
or
dec
movl
adc
sub
std
out
sub
dec
xor
cmp
cmp
sub
pop
push
adc
xlat
outsl
adc
mov
jnp
scas
leave
enter
mov
xchg
std
jge
and
es
shll
aad
fbld
clc
mov
arpl
ficoml
jl
dec
ret
movsb
mov
jo
xlat
das
sbb
imul
mov
faddl
pop
hlt
mov
sbb
dec
inc
fs
movsl
in
pop
and
idivl
ja
sbb
mov
inc
fsubs
clc
or
push
inc
jne
mov
inc
in
stc
stos
fcoms
adc
mov
mov
cli
adc
adc
out
jo
xor
repz
in
je
mov
jae
push
mov
jns
push
fistpll
sub
data16
mov
sub
xor
mov
xchg
mov
mov
and
sbb
xorl
fwait
stc
jbe
add
mov
popa
add
shrl
inc
sbb
sar
add
cmp
gs
out
bound
sub
cmp
sbb
and
xor
icebp
xor
mov
jmp
add
lcall
inc
dec
fnstsw
inc
sbb
mov
mov
push
xchg
and
ret
add
cli
int3
ljmp
aad
sub
xor
movsb
movsl
push
aam
cmpsb
movsl
pop
loopne
jp
aad
fdivr
dec
push
sub
rolb
iret
mov
in
mov
push
and
sub
je
call
addl
mov
mov
gs
pop
push
cmp
push
and
les
mov
mov
xchg
and
inc
aad
push
dec
pop
jecxz
mov
cmp
fwait
adc
push
cmp
in
inc
jmp
and
sbb
pop
push
jmp
xlat
jmp
sbb
cmpsl
rolb
or
addr16
inc
mov
int3
ret
in
ret
sub
xchg
mov
inc
or
inc
xchg
cmp
popf
xchg
jmp
jb
icebp
cwtl
fnsave
iret
fiadds
xor
stos
push
not
cld
data16
movsb
popw
add
mov
dec
hlt
or
or
mov
or
mov
sbb
lods
test
orl
inc
inc
or
dec
and
test
cmc
les
loope
add
cmc
jg
jb
xchg
mov
pop
mov
sbbl
lcall
mov
jp
dec
xchg
mov
xor
mov
movsb
sbb
jns
movb
mov
jb
mov
lret
rcl
addb
fisttpl
fsubs
stos
fisttpll
out
push
add
movsl
fists
jo
add
aam
dec
hlt
adc
es
or
and
inc
inc
cmp
bound
adc
sbb
inc
mov
mov
or
adc
push
cld
and
inc
dec
dec
loop
adc
pop
cmp
cld
lock
je
jno
stos
fsub
nop
repz
stc
movsb
mov
push
jp
movsl
or
repz
and
inc
movsl
popf
test
and
out
mov
ret
bsr
adc
xor
shlb
shrb
mov
pop
es
xchg
das
mov
pop
xlat
sbb
pop
xchg
pusha
adc
les
dec
lods
fistpll
mov
bound
push
addr16
and
add
dec
or
mov
mov
and
dec
push
nop
inc
rclb
inc
shlb
pop
jg
int
push
in
aam
dec
pop
stos
insl
loopne
int3
xchg
loopne
idivb
sbb
xchg
xor
fs
outsb
jmp
and
sbb
cmp
mov
imul
mov
mov
add
dec
into
js
adc
inc
loop
testl
inc
movsb
call
insb
sub
addl
loopne
mov
leave
inc
imul
inc
xor
insw
cmpsb
push
imul
pop
test
clc
sbb
scas
add
aas
add
lret
mov
hlt
mov
test
mov
dec
sahf
mov
cmpsl
cwtl
jmp
mov
ds
lret
loopne
jbe
mov
cmp
notb
stc
push
stos
dec
ret
inc
fs
ret
push
mov
pop
scas
push
jnp
cmp
xchg
sti
aad
insl
sti
add
push
sub
pushf
push
rcrb
xor
ss
rol
rclb
sbb
sahf
xlat
fisttpl
fs
outsb
inc
es
push
arpl
dec
cmpsb
push
and
cld
push
push
ret
inc
lret
xlat
mov
cmp
mov
add
mov
xchg
cs
bound
fstl
negb
gs
lret
jl
pop
adc
push
and
test
dec
sbb
xor
lret
ss
lret
fistps
outsb
dec
int3
xor
shlb
out
dec
gs
mov
scas
js
pushf
mov
addr16
in
shl
mov
sbb
iret
cmp
scas
mov
mov
out
cli
add
bnd
mov
in
push
ret
in
xchg
in
push
jne
daa
add
and
sbbl
lret
addr16
xor
and
cs
and
cmp
enter
and
lcall
cmp
xor
int
stos
mov
mov
cmpl
pop
mov
mov
outsb
lret
pop
mov
fincstp
push
aad
dec
scas
fstl
mov
rolb
stos
and
ja
mov
cmc
add
dec
mov
lock
lods
xor
cmp
pop
jl
mov
xchg
sbb
fisubrs
sbb
jae
jno
sbb
loopne
cmpsl
or
mov
add
pop
sti
lret
mov
cmp
sub
cs
jecxz
pop
lea
xchg
sbb
lea
movsb
rorl
js
jb
dec
jl
lea
in
sar
andb
cmpsl
jae
je
lds
out
push
push
popa
adc
outsl
or
adc
std
xchg
adc
icebp
and
aam
push
push
fists
iret
fs
in
push
ljmp
push
cld
in
pop
pop
push
test
dec
pop
inc
jmp
inc
dec
mov
daa
inc
arpl
lahf
test
jb
push
push
push
test
add
add
leave
cmp
shll
ja
dec
movsl
test
inc
xor
imul
pop
mov
or
xor
jge
mov
daa
sbb
dec
incb
sbb
ret
mov
lods
std
cli
adc
push
mov
jle
sti
pop
pop
mov
push
sar
test
dec
mov
jno
pop
inc
enter
xchg
cmpsb
jb
jle
scas
iret
mov
dec
mov
fcomip
rcr
popf
das
jo
pop
int
iret
daa
sub
pop
cmp
inc
fadds
sbbb
xchg
xchg
pop
adc
loop
mov
out
fstps
stc
iret
mov
push
xorl
mov
push
shrb
loop
jbe
xlat
je
imul
xrelease
fdiv
ficoms
xor
pop
in
test
or
cmp
jae
cmp
mov
mov
mov
xor
sub
repz
pop
imull
jl
test
das
mov
fcomp
mov
fsubrp
ret
xor
lods
add
shll
cmp
mov
rorb
repz
mov
dec
push
popf
push
mov
push
mov
inc
sub
stos
roll
fisubl
xchg
xor
jp
cmp
sub
jbe
sbb
mov
pop
imul
jbe
movsl
ret
rclb
scas
in
mov
ss
jae
cli
testl
sub
pop
sbb
push
pop
mov
das
and
jl
leave
add
xchg
mov
lret
sub
push
and
lods
icebp
add
nop
mov
cltd
jl
cwtl
push
mov
cmp
lret
pop
sbb
in
jle
addr16
loope
mov
enter
sbb
in
loopne
push
inc
inc
pavgb
mov
add
sbb
mov
clc
loop
test
mov
cld
cwtl
xor
jl
std
or
push
inc
mov
xchg
outsl
sbb
mov
dec
mov
inc
jnp
sbb
lahf
xchg
test
or
ficompl
sub
xchg
clc
sahf
mov
mov
and
mov
sub
and
push
std
sahf
les
cs
arpl
test
out
or
or
ret
add
sti
mov
cmc
adc
add
cmpsb
jno
outsl
cmp
out
dec
xchg
shll
popa
pop
or
add
ficoms
mov
push
mov
xlat
push
lret
test
jge
push
mov
outsb
add
je
add
dec
js
btr
daa
and
mov
in
out
pop
or
ds
push
cmp
popa
rcll
cmpb
mov
sub
cmc
jns
cmpsb
into
fidivrs
in
ds
lods
xor
mov
pusha
mov
arpl
pop
pop
or
inc
and
mov
gs
shlb
sbb
mov
xorl
shl
and
mov
pushf
mov
sbb
ficoms
mov
int
mov
fwait
mov
ret
pop
push
in
in
lods
repz
lret
roll
out
scas
test
flds
bnd
cmp
dec
mov
jp
mov
jmp
cmp
push
pop
lcall
pushf
lret
call
push
inc
lock
popa
shll
lea
lea
xor
je
shlb
dec
mov
adc
xlat
lahf
popa
pop
ds
daa
into
fistpll
std
dec
inc
sbb
cmpsb
adc
push
jne
loope
sbbl
movl
or
aas
mov
cmp
xchg
push
lods
sbb
xchg
sub
repnz
push
repz
clc
xlat
imul
dec
and
or
jl
add
xchg
inc
imul
outsl
jb
cli
xchg
ret
jbe
lds
dec
sub
cmp
pop
add
inc
daa
xor
mov
lods
mov
cmp
jb
or
cmp
in
adc
sbb
push
out
ljmp
or
adc
xchg
add
fs
les
ljmp
out
test
add
imul
xor
pusha
cld
mov
mov
scas
mov
lret
lods
loopne
leave
jecxz
fidivrl
or
in
push
in
scas
jp
push
call
mov
and
jb
xchg
ja
push
outsb
shlb
scas
mov
lods
or
mov
out
dec
dec
int
mov
mov
and
in
aas
mov
pop
aam
ret
push
sbb
lahf
jnp
jp
and
mov
imul
jl
adc
push
mov
sbb
fwait
dec
mov
icebp
push
popa
dec
or
push
clc
pop
fisubrs
stos
inc
mov
mov
sub
xor
xchg
mov
push
cmp
enter
shl
addr16
push
aam
add
mov
or
out
das
sti
leave
leave
jle
dec
mov
ret
fnstenv
and
xchg
roll
mov
pop
mov
mov
or
popa
addr16
xor
test
insb
arpl
mov
push
xorb
push
nop
test
inc
sbb
xor
mov
pop
in
mov
adc
xor
xchg
ret
in
mov
cli
das
sbb
imul
xchg
cmp
int
xor
mov
jp
lds
int3
sub
jb
insl
mov
jo
add
hlt
sbb
lods
cs
sub
movsb
fsubrl
push
lods
pop
int3
add
rcll
dec
inc
pop
enter
xor
in
mov
lcall
clc
pop
sbb
shrb
mov
pop
int
mov
push
sbb
push
lcall
ds
mov
jge
cmp
sbb
nop
std
nop
aaa
popf
shll
rcrl
pop
jecxz
test
hlt
cs
mov
jmp
inc
cmp
divl
xor
mov
cmc
or
mov
xor
enter
in
push
lahf
lea
shlb
aaa
and
loop
outsb
xorl
add
out
enter
es
insb
fildl
mov
mov
jne
les
pusha
sub
repnz
fidivs
xor
mov
shlb
adc
cwtl
js
or
push
xchg
push
js
jg
push
ds
sti
push
and
fcoml
repnz
jl
and
lcall
adc
cmpsb
mov
test
mov
jmp
lock
pop
mov
sbb
mov
das
pushf
mov
fadds
adc
aad
test
ret
jl
shr
lds
pusha
sub
inc
insl
stos
lahf
adc
scas
add
das
mov
out
daa
xchg
push
rcrb
iret
or
loopne
mov
std
outsb
pop
sub
fsub
pop
xchg
xor
std
icebp
inc
cmp
jbe
hlt
shr
or
std
pop
mov
cmp
cltd
xchg
std
pushf
cmp
cmp
dec
lret
xor
jb
sub
rclb
sti
loop
or
les
pop
or
call
das
and
cmp
scas
sbb
out
cltd
jmp
pop
daa
add
fmulp
or
adc
and
adcb
sub
mov
adc
mov
ja
cmp
ret
xchg
sbb
call
movsl
mov
mov
pop
pop
fsubrp
dec
xor
xchg
sahf
sub
or
fimull
jb
cld
movsl
aaa
xor
inc
jnp
dec
mov
jmp
inc
icebp
sbb
xchg
in
mov
xchg
jae
sub
mov
roll
pop
fmulp
or
daa
push
dec
or
mov
and
arpl
aaa
push
repz
lock
mov
out
mov
sbb
iret
mov
and
clc
pop
es
int3
mov
rclb
xor
stos
mov
push
push
adc
je
daa
cmpsb
sub
push
fwait
pop
cs
ret
jnp
pop
jnp
xor
adc
mov
test
xlat
jp
xlat
cmp
jae
cmp
scas
inc
pop
pushf
stc
movsl
bound
push
js
loope
add
stos
dec
insl
add
push
add
outsb
fists
mov
shll
sbb
dec
in
mov
imulb
testb
mov
xchg
dec
stos
lret
push
cmp
mov
loop
ficoms
inc
and
stos
loopne
push
ja,pt
push
mov
pop
xchg
stos
cmp
sub
lcall
pop
leave
cwtl
sbb
jg
sbbb
fwait
leave
inc
xchg
cmp
aam
cmp
pop
push
mov
andl
jg
lret
mov
int
adc
enterw
fldt
sti
push
or
test
into
add
ret
mov
cs
or
add
jnp
pop
mov
mov
adc
cmp
inc
and
cwtl
sbb
orb
push
inc
sbb
fwait
push
sub
jmp
pop
out
fs
cmp
add
repz
cmp
cmp
sahf
sbb
cmp
sub
imul
lret
inc
inc
test
aaa
jle
jbe
fstp
mov
fisubl
xchg
arpl
ret
inc
and
stos
shrb
ljmp
xorl
mov
sbb
add
aaa
sub
inc
daa
or
dec
sbb
or
xor
fnstsw
test
xchg
push
xor
jno
lret
sbb
or
fwait
sbb
mov
js
pusha
xchg
sub
testl
push
roll
or
test
imul
out
pop
cmp
jo
lock
sti
xchg
mov
in
or
mov
xor
fs
mov
dec
ljmp
stos
jmp
testl
xor
pushf
mov
nop
sub
xor
push
jl
pushf
sbb
xchg
cmp
subb
xorb
outsb
iret
push
ret
cwtl
pop
mov
out
jle
jle
cmp
lods
inc
mov
sub
negl
pop
jp
cmp
std
mov
xchg
mov
push
test
push
inc
add
leave
push
cs
mov
pop
and
mov
sbb
ja
sbb
fwait
jecxz
in
stos
mov
das
xor
enter
loope
int3
mov
jae
shll
inc
inc
jo
sbb
xchg
jbe
shlb
or
stos
cmp
and
push
scas
adc
pusha
mov
inc
mov
jnp
fsub
aad
mov
test
jp
es
cmc
xchg
nop
hlt
rorb
push
mov
jns
mov
pop
jg
arpl
dec
stc
scas
lock
hlt
dec
rcll
mov
es
push
scas
inc
lods
mov
mov
imul
les
jge
sbb
push
ljmp
cmpl
fildll
jnp
fcompl
leave
cmp
loopne
lret
push
xchg
ficoms
pop
mov
out
xchg
mov
push
or
test
lahf
cmp
lods
cltd
std
addl
cld
imul
or
and
std
xchg
js
test
inc
inc
je
xor
xor
cmp
negl
xor
bound
imul
movsb
add
pusha
jmp
paddsw
and
inc
dec
pslld
xchg
ds
je
mov
mov
cmp
sbb
test
fdivrs
sbb
cli
sub
cld
cld
adcl
mov
subb
mov
sub
add
rorb
sti
fsubs
ja
cmp
int3
outsl
add
jge
push
out
outsb
pop
stc
fs
fucomp
adc
or
pop
or
pop
mov
or
push
mov
aaa
cmp
imul
mov
fildll
dec
add
inc
test
fneni(8087
decl
std
test
push
dec
call
push
in
cmp
ss
cmc
outsl
outsl
xor
sub
sti
sbb
ja
sbb
js
sub
shlb
negl
stc
cmpsb
mov
push
push
adc
cmp
arpl
dec
mov
pop
adc
jp
add
fdivs
xor
cld
inc
pop
les
sub
mov
addr16
dec
test
xor
mov
lds
into
dec
orb
dec
adcb
adc
or
cli
or
jmp
lahf
test
cltd
arpl
mov
add
leave
les
push
dec
mov
test
push
rorl
adcl
mov
xlat
push
cmp
cmpsb
fbld
push
ss
test
jmp
dec
pop
shll
out
jecxz
shl
aaa
push
popf
xlat
push
push
pop
sub
xchg
mov
cld
sub
add
js
jmp
fmul
inc
sbb
scas
bnd
push
daa
lods
push
push
cwtl
push
movsb
arpl
mov
pop
dec
repz
cs
das
test
std
xchg
std
icebp
or
fisubs
hlt
sub
push
ss
iret
cltd
or
lret
loopne
jae
cmp
push
pop
and
mov
push
push
dec
outsb
int3
adc
xor
xchg
xchg
faddl
push
xchg
imul
pop
mov
fsubrs
fsubl
xchg
push
add
loopne
jl
mov
lock
xchg
xor
loopne
loopne
jbe
jp
std
jb
lret
iret
or
je
fildl
cs
data16
fmul
pop
js
dec
mov
jg
sbb
aaa
lret
pop
cwtl
lret
jge
mov
add
cwtl
inc
xchg
push
xor
jle
push
rcl
test
enter
push
push
enter
push
or
ljmp
cs
mov
mov
pop
xchg
pop
push
push
xchg
push
xchg
mov
cmp
jne
xlat
xchg
roll
ss
pushl
jo
lods
enter
sbb
je
cltd
inc
inc
add
pusha
add
xor
dec
cmpsl
dec
and
sub
jbe
add
stos
mov
outsb
aam
cmpsb
fimull
cmp
mov
mov
push
dec
xor
sahf
jecxz
adc
scas
push
xor
cmp
fsts
add
jmp
jmp
fsubl
outsl
push
ror
sub
addr16
movsb
inc
mov
outsb
xchg
int3
xor
jno
push
cwtl
repz
test
leave
inc
xlat
es
pop
sub
lret
outsb
data16
ja
insl
inc
mov
dec
orl
mov
xchg
push
or
idivl
add
icebp
and
test
or
jg
mov
inc
adc
dec
loopne
fstps
cld
in
jae
mov
jge
ret
stos
xchg
add
lahf
sbb
cld
mov
mov
iret
or
add
inc
xchg
sbb
mov
mov
mov
rorb
lahf
negl
mov
push
in
mov
out
cmpsl
mov
aaa
adc
push
pop
inc
ret
es
int
icebp
je
mov
inc
mov
es
pushf
sbb
jo
mov
xchg
and
lods
push
popa
mov
pop
sbb
repz
mov
push
inc
mov
inc
or
push
mov
testl
ja
sub
pop
xchg
addl
sub
mov
scas
mov
push
das
jbe
pop
inc
pop
push
mov
xor
add
das
push
cltd
int
sbb
pusha
loope
jmp
xchg
pushf
xchg
clc
jns
fnsave
jp
add
xor
je
jns
scas
and
gs
adc
and
rcrl
push
and
out
loop
add
das
xor
loop
es
mov
mov
ja
mov
test
mov
sahf
fucomp
mov
sbb
addl
cld
cmp
xor
inc
add
je
pop
pop
add
ffreep
stos
pop
xchg
leave
hlt
sbb
pusha
sbb
rcrl
sahf
dec
fwait
mov
mov
or
lret
dec
jmp
cs
mov
pop
hlt
cmpsl
repnz
cwtl
test
das
arpl
mov
in
mov
jmp
xorl
dec
int3
loopne
cmc
cmp
arpl
aaa
sub
add
or
clc
sbb
and
inc
add
fwait
jp
test
ss
and
pop
jg
int3
sub
jecxz
inc
in
sbb
iret
sub
and
sbb
and
outsl
adc
test
negl
dec
enter
fwait
sub
adc
xchg
outsb
repnz
and
jecxz
aaa
pop
pop
stos
inc
adc
push
cmp
xor
sbb
xor
enter
in
loop
adc
jecxz
scas
or
cmp
add
mov
pushf
aas
dec
cld
sbb
out
adc
mov
mov
adc
hlt
outsl
jbe
ret
icebp
lods
push
in
jle
jl
push
mov
insl
repnz
push
inc
lods
jp
cmp
aad
sub
xchg
push
popa
inc
pop
xor
sbb
imul
dec
pop
inc
jmp
pop
repnz
add
cli
or
dec
clc
dec
and
in
ljmp
jnp
cmpsb
xor
insl
and
daa
imul
pushf
or
xchg
push
push
test
jecxz
adc
push
ds
ret
push
clc
je
das
xchg
rcrb
and
lea
cs
shlb
adc
divl
mov
scas
xor
or
shll
into
hlt
xor
addr16
sub
shlb
push
lcall
sub
pop
sbb
xor
and
push
sub
mov
daa
leave
and
pusha
adc
xor
jns
or
stos
inc
xor
in
mov
mov
leave
in
mov
adc
ret
sub
mov
xlat
cmpsl
jle
add
aam
xchg
adc
add
add
xor
lahf
inc
and
insl
push
cmp
ljmp
mov
xor
mov
push
mov
push
add
lahf
dec
jb
imul
sti
xlat
add
mov
add
pop
icebp
ljmp
mov
jbe
cs
lcall
add
mov
es
fstpl
add
loopne
inc
fstpt
in
mov
int
and
push
cmp
mov
sbbl
add
rclb
sbb
les
and
inc
cmove
jae
cwtl
sub
lahf
mov
xchg
pop
es
xchg
fmul
and
test
lods
adc
leave
aad
jmp
loope
stos
mov
adc
fildll
roll
repz
cmpsl
or
jge
mov
xchg
pop
jnp
dec
clc
inc
in
gs
mov
out
xor
add
fabs
and
loop
mov
je
and
xchg
adc
mov
sbb
fstpl
ds
xchg
div
pop
cmc
fimuls
frstor
jg
iret
and
cmp
pop
repnz
mov
test
les
sahf
test
pop
dec
xchg
mov
pop
leave
sbb
pop
mov
arpl
adc
dec
pop
aad
cmc
fidivs
mov
lret
scas
mov
mov
adc
lds
out
adc
fwait
stos
push
lret
xor
aas
je
jb
popf
cwtl
pop
outsb
cmpsb
dec
jb
push
xor
fs
xor
in
dec
jmp
leave
xchg
xchg
ret
sti
std
dec
pop
mov
call
mov
addr16
clc
and
cs
imul
mov
mov
xchg
jns
sub
ss
or
inc
sbb
loope
inc
push
sub
sarb
mov
mov
mov
movsl
push
add
cltd
mov
icebp
and
mov
loope,pn
es
jmp
test
jmp
xor
arpl
test
hlt
lret
jnp
xchg
add
inc
out
xor
test
loop
mov
in
adc
xor
lcall
push
aam
adc
xchg
pusha
fisttpl
ljmp
cs
loope
popa
mov
cltd
lret
push
and
add
repz
js
ljmp
hlt
dec
xor
or
call
nop
or
and
cli
sbb
pop
scas
mov
call
mov
mov
nop
or
cmp
mov
cmp
xchg
das
pop
sub
call
cmp
imul
xor
frstor
jp
aas
fisttpll
dec
int
jle
push
xchg
sbb
sti
pop
sub
jmp
adc
sbb
test
and
mov
inc
sbb
vpunpckhwd
jnp
cmp
sbb
fcompl
aad
push
add
dec
inc
and
pushf
fs
aaa
mov
push
push
ds
jl
mov
adc
jge
adc
cltd
cld
out
adc
dec
rorb
or
les
je
movsb
pop
sarl
lock
jecxz
adc
jle
hlt
or
fldenv
mov
jge
sub
stos
jno
jmp
pop
xor
lods
cltd
or
cmp
into
fwait
xchg
aas
mov
fimuls
es
and
sub
inc
add
jg
in
test
xchg
or
test
add
outsb
pop
es
mov
call
pushf
mov
mov
mov
nop
add
pop
ljmp
mov
sub
mov
pop
das
lds
xor
xchg
push
cmp
int3
outsb
mov
pop
arpl
xchg
addr16
sub
mov
cmp
add
movsb
into
fucomip
mov
push
dec
or
pop
cmc
dec
insb
push
mov
xor
mov
jl
data16
mov
fsubrs
sti
pop
or
jb
ja
test
dec
out
pop
cmp
adc
or
lock
out
and
sbb
sub
test
mov
pop
sbb
cld
add
insl
andl
cld
filds
nop
inc
loopne
popf
gs
xor
mov
loop
push
in
pop
stc
div
mov
sar
jge
mov
aaa
andl
mov
mov
sbb
cmp
dec
shll
roll
and
add
mov
inc
sar
cli
jns
push
pop
std
jae
mov
jle
mov
jl
push
ds
mov
sbb
xchg
popa
iret
ds
jne
inc
sbb
cmpsb
pop
pop
test
dec
inc
shlw
dec
mov
filds
jae
sbb
push
cltd
mov
les
iret
int
out
clc
mov
dec
cmpsl
mov
sbb
inc
and
in
std
loope
stos
mov
cwtl
jo
aaa
fstpl
daa
inc
mov
test
in
cmp
or
les
stos
lahf
and
sub
ret
loopne
out
pop
inc
adc
mov
addl
or
xlat
into
cmp
enter
adc
loope
and
test
fs
push
adc
arpl
xchg
popf
fldl
dec
mov
push
andb
add
add
cmp
lea
pop
or
pop
lods
sub
jae
mov
shlb
xchg
sub
int
jp,pn
enter
movsl
roll
ret
aad
pop
pop
leave
mov
fs
dec
aaa
icebp
xchg
lock
rcrb
xor
push
mov
cmc
jle
adc
mov
sub
mov
xchg
cs
push
test
scas
imul
mov
lock
and
push
shrl
fwait
int
push
push
adc
test
faddp
inc
lahf
fwait
dec
jbe
adc
ret
lock
mov
mov
cli
sub
sub
and
aad
outsb
xlat
dec
dec
dec
push
test
pop
insl
push
sub
inc
xor
loop
jnp
popa
popa
xchg
sti
push
mov
fwait
mov
out
es
inc
and
push
sub
or
leave
fcomip
push
fidivrl
sub
cltd
inc
stc
pop
fwait
sub
ret
dec
sub
out
mov
xchg
leave
jmp
std
icebp
xor
clc
loope
fistl
movsb
gs
pop
aaa
loope
pop
or
pop
and
lahf
cmc
rorb
pop
sti
in
jae
loop
call
mov
adc
repnz
push
divl
cmp
jle
sahf
or
fistl
mov
xchg
xor
js
cmp
lods
xor
xchg
imul
cld
stos
mov
xor
pop
inc
aad
xchg
cmp
ja
cli
outsl
out
mov
negl
xor
push
jmp
mov
xchg
xchg
scas
out
mov
fwait
addb
lret
imull
xchg
imul
aas
sub
nop
lret
movsl
lahf
pop
enter
pop
xlat
loope
mov
pop
jne
jl
sbb
ss
jmp
hlt
lcall
movsl
int
mov
cmpl
ret
xchg
sti
pop
shll
dec
and
movsl
xchg
cmpsl
cli
sub
lock
adc
test
imul
cmpsb
lock
bound
lcall
mov
mov
out
add
inc
mov
dec
pop
aaa
pushf
pop
subb
nop
cld
rclb
enter
sbb
enter
loope
fcmove
sbb
sub
faddl
mov
stos
int
xor
mov
scas
in
mov
sti
cld
aad
push
std
xchg
inc
xor
mov
lea
sbbb
jnp
mov
shll
hlt
mov
mov
pop
lahf
adc
lods
pop
mov
in
and
fs
adc
imul
cmpb
fdivrl
inc
cmp
mov
sub
lea
cs
cmpsb
adc
scas
mov
mov
sub
rol
add
shl
test
dec
mov
mov
int
in
ror
inc
dec
fildl
dec
dec
add
push
push
cmp
xchg
mov
test
inc
lock
xchg
repz
stos
nop
add
xchg
out
push
das
inc
out
mov
xchg
mov
stos
popf
out
stos
outsb
lock
mov
add
call
jne
ljmp
pop
adc
dec
es
lds
test
mov
movsl
xlat
add
iret
scas
dec
subb
mov
ljmp
dec
jge,pt
adc
shll
ds
pop
adc
jp
adc
adc
sub
dec
jp
adc
subb
out
icebp
mov
aas
jns,pn
adc
int3
jge
jnp
test
xor
addr16
lods
pop
cmpb
testl
in
into
inc
push
loopne
pop
lds
lea
es
jg
sbb
xchg
mov
aas
js
xchg
pushf
xchg
aad
insl
mov
outsl
ss
xor
bound
loop
int
mov
jl
fadd
xchg
pop
sub
jb
cmp
ret
mov
fs
mov
jle
nop
mov
inc
xor
mov
mov
imul
pop
add
repnz
sub
test
push
jmp
pop
subb
xchg
sbb
and
loope
add
jo
enter
out
stos
pop
cld
xchg
mull
xchg
fwait
int
imul
xchg
mov
insb
or
sbb
je
xchg
js
cmp
cli
fcmovne
dec
outsl
cltd
pop
ss
sub
mov
dec
mov
pusha
das
and
mov
stos
es
push
push
inc
jle
jg
jae
jmp
pop
push
ljmp
mov
jns
xor
sbb
push
cmpsb
outsb
jmp
inc
push
jmp
xchg
lds
sahf
mov
lret
nop
lds
ds
dec
icebp
stc
lret
inc
in
or
sub
loop
cltd
or
cmp
pop
push
jg
mov
addl
xchg
divl
fldl
or
sbb
jno
xchg
sbb
mov
push
lahf
les
in
or
dec
add
flds
out
mov
movups
lahf
push
push
push
cld
mov
dec
aam
mov
inc
jnp
xchg
sahf
xchg
aaa
xchg
loop
mov
jmp
sbb
push
mov
or
in
or
cmp
jbe
pop
dec
ss
loope
inc
into
jns
dec
nop
int3
lret
push
add
xor
fwait
loopne
sub
data16
xchg
insl
das
cmp
test
hlt
sbb
out
mov
fsubs
adc
rorl
lret
cwtl
jmp
mov
jl
rolw
gs
dec
cltd
testl
jge
add
xor
lahf
push
add
inc
rcrl
movsl
pop
out
mov
cmp
mov
mov
jo
fdivrs
xor
jp
pop
adc
mov
lods
add
dec
mov
mov
fistps
xchg
xor
repnz
sbb
call
jo
ret
lret
lds
jmp
dec
or
enter
jecxz
repnz
and
pop
shlb
jno
mov
push
sbb
push
loop
daa
sbb
test
pusha
xchg
dec
pop
jno
shrl
add
fwait
mov
mov
sub
inc
inc
sbb
xchg
sub
push
xchg
shll
movhps
inc
lea
sub
inc
mov
sbb
adc
mov
ret
into
orl
jbe
and
mov
cmp
cmc
scas
lock
mov
dec
mov
leave
imul
inc
sbb
jmp
cmp
fadd
into
mov
push
push
and
sbb
pop
dec
test
adc
sub
xchg
mov
sbb
imul
xor
add
testb
and
ficompl
cmp
insb
int
pop
dec
aaa
test
addl
aaa
jae
leave
divl
mov
inc
mul
cmpsb
xor
and
jae
push
test
mov
add
cmp
pop
or
repnz
scas
nop
sti
cmp
dec
pop
pop
sbb
sub
inc
and
stos
inc
xchg
jno
dec
fisubrs
dec
fcmovu
lcall
xchg
outsl
sub
mov
insl
pushf
into
test
fwait
das
xchg
xchg
ficomps
mov
push
push
test
imul
sub
add
fsubrl
popa
testb
in
and
das
inc
out
pop
sub
cltd
cmpsl
dec
jns
sbb
enter
arpl
mov
daa
pop
fucomp
cwtl
push
mov
add
jbe
xchg
mov
xor
pushl
sub
mov
outsl
icebp
in
cmp
dec
inc
addr16
jp
cmp
and
test
js
movsl
xor
add
lods
aam
ret
jecxz
xor
stos
inc
jne
pop
push
out
adc
xchg
jmp
mov
fwait
pop
scas
xlat
repnz
shll
mov
test
push
add
lds
inc
lcall
jnp
or
and
das
push
pop
xor
in
mov
sbb
inc
jle
pushf
pop
cmp
mov
mov
rclb
jb
mov
sub
dec
fstpl
inc
add
ss
mov
gs
jl
mov
rol
pop
sub
fs
mov
pop
lds
test
shlb
inc
xor
or
std
lret
adc
ss
xlat
daa
push
xchg
push
js
pop
repz
das
jmp
dec
pop
cmpsb
loop
push
sub
push
push
lds
add
push
sbb
ret
mov
scas
push
ffreep
pushf
bound
mov
test
mov
loop
cmp
dec
mov
sbb
cmp
sub
outsl
mov
push
jno
lahf
push
cs
and
out
and
adc
lret
cli
cmp
out
pop
mov
adc
xchg
adc
add
dec
xlat
fdivrs
stos
jle
push
outsb
daa
push
cltd
jb
add
daa
pop
hlt
out
mov
clc
addb
sbb
sub
out
sbb
adc
test
ret
sbbl
sub
jmp
mov
jp
inc
mov
mov
pop
push
lret
mov
in
test
sub
call
test
jno
mov
ja
and
lret
icebp
jl
push
cmp
xchg
inc
dec
sub
mov
inc
popa
xor
push
stc
mov
test
cmp
aad
mov
jecxz
sbb
popf
loopne
pusha
jo
jmp
shrl
js
push
cmp
jnp
add
adc
outsb
jo
imul
adc
inc
sbb
rclb
test
cmpsb
jp
and
jns
imul
push
jo
and
popf
mov
addr16
mov
aas
aaa
lret
lcall
int3
fimull
fwait
mov
sub
adc
into
sbb
cmc
jecxz
xchg
ja
cmp
lea
nop
add
pusha
fwait
call
xchg
clc
cmp
into
push
movsb
lcall
cmp
test
sub
and
cmc
jb
repz
in
or
int3
mov
jecxz
jle
std
pop
fmul
inc
lret
cltd
loope
sub
repz
popa
sahf
dec
out
nop
cmpsl
lock
cld
inc
addl
fdivr
aad
xor
test
sbb
pop
jnp
sub
stos
jle
and
shr
insl
mov
jl
hlt
test
mov
enter
sbb
leave
inc
subb
pop
and
push
ds
cmpb
or
cli
lock
rcll
xchg
icebp
shl
stc
push
push
cmp
dec
iret
loopne
dec
out
or
lahf
xor
xchg
inc
fnstenv
and
dec
sbb
or
ffree
idivb
int3
pushf
ret
mov
jne
sbb
lock
push
push
enter
imul
push
and
scas
jmp
pop
leave
push
pushf
xor
cmp
xchg
inc
iret
dec
sbb
mov
inc
jnp
leave
jmp
enter
cmpl
cmpsb
mulb
mov
das
adc
jmp
nop
faddl
arpl
cmp
movsl
xchg
push
jge
jmp
jae
push
ret
or
mov
mov
es
popa
push
sbb
mov
jne
jle
imul
pushf
inc
pop
xor
xchg
cmpsl
jb
arpl
jle
mov
push
dec
pop
icebp
mov
or
push
cs
push
stc
ja
mov
lea
pop
fimull
pop
dec
fcoml
mov
inc
dec
xchg
lock
and
jg
sbb
mov
adc
bound
sub
jmp
mov
pop
out
jae
pusha
inc
lret
ds
mov
inc
inc
jnp
into
adc
loopne
cs
ror
fs
les
inc
add
pop
gs
aaa
sub
xchg
dec
popl
sub
inc
mov
cmpsl
add
cli
pop
sbb
out
test
mov
push
dec
out
inc
sarw
or
ljmp
pop
iret
mov
or
xor
or
fsubr
lock
data16
icebp
mov
js
add
xchg
mov
cltd
aaa
les
decb
test
mov
add
xchg
popf
pop
popl
movsl
mov
movsl
dec
add
add
xor
ds
mov
pop
incb
jg
addl
hlt
xor
cmp
lea
pop
sub
stc
xlat
cs
add
dec
or
xor
aaa
mov
xchg
inc
inc
dec
adc
loopne
outsb
sub
mov
jae
sti
sbb
adc
lods
rolb
push
je
pop
mov
imul
mov
and
shll
cmp
ss
pop
or
fistpll
push
inc
rcrl
sub
push
into
mov
shr
repnz
inc
add
ss
sub
push
push
stc
jb
fs
lret
mov
popa
jl
lcall
push
mov
mov
rcll
adc
jmp
or
invd
xchg
mov
je
cmp
xchg
pmuludq
cmp
js
fisubrs
not
sub
out
cwtl
sub
out
dec
or
ret
adc
ss
pop
fs
sbb
dec
add
nop
push
insb
cli
js
shlb
ds
shr
das
adc
es
aas
xchg
dec
in
or
mov
cmp
aaa
xchg
shlb
sbb
call
loope
movsl
mov
sub
imul
xor
sub
test
pop
lcall
lock
or
leave
repnz
mov
lret
je
add
mov
ja
sub
les
mov
subl
xchg
leave
loop
jecxz
xor
xor
adc
jp
xchg
fstps
popf
test
lods
test
push
jle
jl
aaa
lret
mov
daa
pop
cltd
sbb
push
jnp
adc
cmp
fidivrs
mov
mov
shll
imul
addr16
mov
pushf
movsl
mov
jmp
push
call
push
clc
leave
dec
ljmp
test
mov
mov
in
mov
push
lret
scas
pop
std
pop
lcall
push
xchg
hlt
or
ss
dec
and
mov
fdivl
pop
sahf
xchg
aam
stos
and
inc
lods
mov
cmp
adcl
loope
bnd
pop
addr16
pop
add
xchg
or
add
ret
mov
sahf
and
cmc
inc
push
xor
sbb
outsb
insl
popf
xchg
loope
outsb
pusha
pop
mov
popa
jb
popa
mov
out
loop
sub
cmp
adc
sti
push
scas
test
dec
cmp
push
shl
dec
ret
enter
xchg
cld
inc
test
or
rolb
rolb
and
bound
sub
cltd
push
mov
push
jbe
mov
push
lahf
dec
dec
dec
cld
mov
rolb
jecxz
mov
fisttps
in
es
and
sarl
push
mov
pop
lods
dec
pushl
pop
pushl
and
out
push
pminsw
lods
sbb
and
xor
cmpsl
aas
push
pop
clc
cwtl
fsubrs
mov
adc
int
xchg
cs
stos
je
insl
aaa
roll
pop
loop
in
sub
idivl
mul
and
lcall
mov
leave
jp
dec
jge
mov
mov
das
cmpsb
inc
inc
add
adc
add
cmp
scas
inc
xor
clc
xchg
jle
cmp
cmpsl
push
pop
add
cmp
jb
scas
rorl
mov
xorl
out
jmp
dec
pop
fwait
in
fs
out
jns
loope
mov
sbb
lcall
mov
inc
inc
cmp
leave
cmp
push
cmp
and
aaa
xor
stc
loope
cli
int
dec
adc
mov
decl
mov
clc
add
ja
push
enter
sbb
hlt
pop
imul
sbb
dec
lret
scas
loop
mov
xor
pop
andb
jbe
aad
xchg
inc
pop
jnp
xlat
sahf
cmp
addr16
imul
cmp
fstps
addr16
or
fstpl
lods
jo
ljmp
addr16
dec
add
imul
es
test
xchg
dec
lods
mov
xchg
add
orb
or
jbe
call
scas
mov
and
mov
aas
int
fidivrs
sub
jne
mov
outsl
out
push
ret
imul
cmp
mov
cli
jle
in
or
cs
xchg
loopne
adc
gs
nop
cmp
pushf
xor
mov
or
sub
and
xchg
push
mov
cmp
xor
jb
xchg
repz
inc
push
hlt
mov
in
add
mov
cmc
mov
jb
xchg
pop
js
jo
pop
in
xchg
gs
xchg
out
cld
in
mov
mov
loop
fxch
or
xor
jmp
daa
lahf
insl
repz
sub
cmp
dec
sub
jbe
cmpsb
fmul
movsl
lret
xchg
test
xlat
sub
cwtl
adc
add
adc
dec
bound
adc
inc
cmp
xor
xchg
addb
sub
or
fdivrs
add
imul
pop
je
sub
sbb
lock
insl
iret
lret
fsubs
jno
cmp
insb
ss
push
gs
mov
imull
dec
mov
out
jecxz
inc
inc
shl
add
and
sbb
insb
mov
push
fdivp
cmp
loope
inc
ret
test
rorl
and
fst
jge
pop
inc
dec
jae
sbbb
enter
jecxz
pop
loope,pt
push
mov
push
dec
mov
push
adc
or
add
imul
xchg
jns
and
pop
xchg
sub
ret
stc
je
xchg
pop
xor
test
or
in
jl
fldln2
rorb
es
inc
ficoms
jge
pop
mov
aas
add
push
outsb
xchg
dec
sti
cmp
push
lret
lret
mov
rclb
lock
lods
jno
inc
mov
add
mov
mov
aam
jns
push
mov
push
adc
adc
icebp
xor
mov
xor
dec
fwait
inc
lea
int3
in
mov
cld
loop
sub
inc
and
mov
sbb
int
jp
sbb
mov
mov
icebp
add
push
dec
dec
xor
movsb
call
mov
xchg
xlat
adcb
ljmp
outsl
outsl
or
lcall
adc
pop
mov
mov
cmp
sub
adc
xchg
fidivrs
in
call
mov
cmpsl
push
dec
stc
jl
int
test
sub
ret
inc
rcll
inc
in
xchg
adc
insl
ja
cmp
mov
iret
fiaddl
call
aas
dec
loopne
push
bound
cmp
stos
mov
adc
inc
add
push
aas
or
into
jae
xchg
je
cmpsb
jne
js
xchg
sub
js
jnp
out
and
cmp
popa
mov
pusha
push
imul
or
jl
pop
mov
adc
pushf
sub
jbe
lahf
in
cmp
xor
add
shrl
or
inc
cwtl
imull
mov
loop
cmp
gs
lahf
adc
mov
test
pushl
jmp
mov
test
out
add
clc
fs
std
sub
or
cmp
mov
les
jb
ljmp
mov
cmc
jb
mov
or
cmpsb
inc
hlt
cmp
js
fmull
daa
jecxz
sub
xchg
xlat
add
lcall
or
dec
add
icebp
cmc
pop
pop
jge
inc
pop
loope
call
mov
loop
les
mov
ds
xlat
jmp
pop
scas
loop
jb
sub
push
jle
xchg
and
push
sub
add
pop
sub
dec
jg
je
pusha
movl
cmc
out
mov
icebp
in
div
xor
inc
scas
push
and
lahf
clc
popa
sub
leave
jl
out
in
jno
test
mov
xor
adc
sub
jmp
inc
xor
cld
shl
les
addb
test
push
jge
loopne
inc
sub
push
xchg
fs
push
clc
sbb
cmp
sub
xchg
sbbb
mov
mov
dec
and
test
mov
addr16
cmp
sbbb
push
movsb
in
xlat
lahf
jmp
sub
call
sbb
scas
jno
cmc
out
or
adc
frstor
add
sbb
jns
std
mov
jb
inc
loope
lods
scas
nop
adc
jp
cmp
fmuls
aad
sahf
xor
in
jle
xor
daa
add
in
sub
data16
cmc
js
pushf
push
lret
aaa
scas
sbb
push
fwait
lahf
fnstenv
mov
add
shrb
testl
imul
hlt
cmc
pop
rcrb
xchg
orb
ds
push
mov
mov
je
int
xor
adc
jo
daa
pop
popa
push
sub
cmpsb
xor
stos
jg
sti
mov
test
and
pop
movsl
das
fisttps
ret
nop
enter
shr
or
addr16
sbb
std
aad
pushf
dec
mov
je
cmp
inc
adc
push
adc
into
lock
mov
stos
or
pusha
and
mov
out
xor
test
mov
adcb
push
sbb
mov
mov
mov
nop
fidivs
aam
imul
push
pop
sahf
mov
lahf
fisttpll
lahf
fidivs
mov
add
pop
fsubrl
sbb
or
das
add
movl
sub
inc
rorl
xor
mov
fwait
addr16
pop
cmp
xor
test
mov
add
and
dec
cld
or
flds
icebp
loope
scas
lcall
dec
mov
insl
jge
pop
out
lcall
and
mov
out
leave
mov
cmp
addr16
or
dec
jo
add
xor
sub
mov
mov
push
data16
sub
icebp
repnz
into
mov
dec
dec
loopne
cmc
in
mov
cltd
sbb
add
mov
and
les
std
xchg
loope
xchg
les
and
xchg
add
out
movsl
adc
add
inc
xchg
mov
jmp
testb
fldt
sarb
mov
repnz
add
fbstp
or
mov
cmp
jecxz
cwtl
or
push
mov
mov
sub
push
jmp
sbb
adc
pop
adc
flds
psubd
add
or
mov
incb
mov
xchg
rcrb
sub
or
mov
mov
jp
push
out
mov
mov
jle
inc
lret
push
sbb
lea
mov
jle
jmp
les
lds
jle
jnp
mov
mov
adc
pop
push
jo
or
xor
mov
mov
xor
mov
inc
sbbl
mov
xor
mov
test
icebp
jne,pn
sbb
fcoms
out
adc
mov
mov
adc
mov
repnz
lahf
push
xchg
arpl
out
jnp
scas
jle
cltd
push
sahf
pop
mov
mov
cmp
xor
cmp
pusha
in
push
testb
mov
lret
jb
shrl
xchg
sbb
xor
stos
loop
jns
push
popa
jae
cmpl
pop
data16
loope
and
mov
xor
mov
jno
mov
jns
mov
pusha
push
jmp
je
cltd
lahf
or
mov
popf
pop
xor
sbb
xlat
inc
imul
in
lret
and
push
xor
mov
mov
das
ret
subl
add
xchg
stos
stos
imul
ss
aad
lret
push
jle
pop
sahf
notl
fldt
mov
mov
orl
lock
and
call
and
mov
data16
fbstp
out
popf
mov
xchg
imul
push
shrl
loop
scas
and
cwtl
mov
sti
ret
in
aas
test
fs
test
mov
std
jl
xchg
lock
jecxz
je
test
and
mov
jp
xchg
scas
in
test
lods
arpl
in
dec
ffreep
mov
cmp
jne
sub
xor
adc
cmp
sub
pop
ret
fstps
inc
ret
dec
push
mov
test
xor
nop
lcall
stc
repnz
addl
sbbl
andb
sbb
outsl
pusha
xchg
out
pusha
jns
lea
stos
dec
out
roll
lock
inc
ficoms
cmp
nop
push
push
add
and
aad
adc
sbb
mov
or
sub
ja
scas
push
add
dec
jb
loopne
sub
sbb
jl
cli
fidivrs
fldt
dec
jmp
add
cmpsb
fcmove
add
stos
fwait
mov
inc
mov
adc
xor
inc
mov
push
aam
inc
dec
jmp
int
mov
xchg
adc
or
faddl
insl
lret
sub
jge
das
shl
lcall
cli
mov
dec
pop
mov
push
out
or
ds
fs
jbe
and
lds
xor
add
int3
fnstsw
adc
mov
les
push
adc
leave
mov
xchg
cld
push
call
scas
sbb
cltd
test
pop
es
adc
ret
push
rolb
adc
in
lea
lret
shl
xchg
add
mov
nop
adc
dec
arpl
mov
add
sbb
movsb
in
xor
or
scas
fisubrl
dec
daa
lds
mov
mov
or
mov
data16
or
lea
cmc
cwtl
imul
mov
idiv
xchg
ljmp
scas
das
xor
outsb
arpl
dec
xor
out
nop
into
mov
int
cmp
adc
cmp
enter
cmp
in
cmp
adc
jg
sub
mov
inc
adc
jle
das
push
add
cmp
dec
das
jno
stos
into
addr16
lret
inc
mov
add
push
and
adc
mov
pusha
lahf
es
fdivl
popa
jns
rorl
stos
jecxz
or
in
pop
pop
and
or
mov
stos
mov
insb
push
add
add
insb
push
clc
cmc
frstor
inc
xchg
and
into
inc
or
dec
call
jnp
clc
dec
jg
and
cmp
mov
ret
xchg
and
scas
ret
mov
test
jge
push
addr16
rclb
clc
xor
or
ss
movsb
mov
sahf
stc
xchg
xchg
and
cmpsb
xor
cli
test
rcrl
repnz
mov
mov
mov
scas
fmull
incb
cmp
mov
jle
mov
aas
inc
push
int3
or
cmpb
or
push
or
aam
enter
imul
out
cmp
jo
fidivl
lods
cmp
jl
xchg
or
jns
push
mov
mov
jl
inc
andb
adc
stos
sub
lea
xchg
ret
nop
add
lcall
jmp
mov
xchg
push
push
cmp
push
mulb
or
popl
mov
cmpsl
sub
push
mov
je
cmp
idiv
adc
fnsave
sub
push
sub
stc
jnp
imul
rcrl
pop
and
inc
scas
cltd
sbb
sub
fldenv
insl
xor
hlt
add
loope
sbb
out
fdivr
inc
jmp
mov
mov
call
inc
push
psubusw
imul
mov
es
imul
mov
jg
jp
cmc
stc
mov
add
adc
jmp
scas
aas
jbe
and
cvtps2pd
in
hlt
cmp
jns
xor
mov
xor
or
xchg
mov
lret
test
jae
add
sub
xor
sbb
das
add
cmp
mov
shrb
jge
mov
faddl
stos
rolb
subb
mov
clc
lea
cmpsb
sahf
inc
push
sbb
push
mov
call
dec
outsb
outsl
mov
repz
mov
jecxz
sbb
pop
inc
lcall
push
ds
sub
mov
or
gs
in
jecxz
mov
mov
test
mov
movsl
sub
inc
jmp
test
dec
fcomps
xor
lcall
mov
push
inc
orb
ret
pop
xchg
pop
dec
xor
lret
push
inc
pushf
rorb
xor
mov
jle
xchg
lds
inc
data16
repz
aam
lods
in
dec
in
cmp
inc
sbb
and
in
fs
add
sarb
and
cmc
dec
lret
xchg
pop
mov
cmp
pop
rcl
pop
xor
dec
pop
test
out
in
mov
or
cmc
sbb
mov
aad
adc
jne
sbb
add
dec
aad
cmp
cmp
dec
jle
mov
xorl
je
sub
add
movsb
mov
and
dec
xchg
mov
out
sahf
push
mov
sarl
fsubs
inc
sub
cmp
das
les
loopne
dec
sub
fwait
dec
mov
pop
movl
or
xor
cwtl
aam
xlat
add
add
ja
mov
push
jns
sub
outsb
lock
and
arpl
loop
mov
jo
cmp
pop
shlb
shl
mov
mov
dec
inc
add
lcall
or
pop
mov
xchg
dec
push
outsl
adcl
mov
sub
addr16
std
lret
sbb
mov
out
lods
mov
xchg
xor
sub
das
in
lds
pop
jle
cltd
sarl
daa
call
jb
jle
pop
lods
pop
sbb
inc
fimuls
lret
mov
mov
hlt
movsl
push
popf
xchg
mov
dec
aas
cmp
idivb
imul
jo
cmp
shrl
jns
les
sub
leave
lret
xor
or
scas
add
adc
mov
mov
mov
push
push
sbb
pop
lods
jl
add
lret
lahf
push
rorl
sbb
push
mov
sub
ret
mov
mov
movsb
sub
test
insl
pop
int
into
dec
bound
inc
out
jns
inc
xchg
sar
mov
jnp
push
daa
cmp
imul
jb
or
xchg
sub
popa
xchg
hlt
movsl
fidivrl
and
push
sbb
inc
hlt
xor
movsb
pop
and
fs
orb
out
pop
push
xlat
sub
movsl
add
push
lcall
nop
jno
aas
ret
mov
add
xor
xlat
pop
inc
fdivp
cmp
std
out
xorb
and
pushf
in
popf
sbb
fadds
xchg
loop
xlat
sbbb
jmp
adc
push
pop
adc
cmp
aas
jnp
xchg
ret
out
xlat
adc
stc
mov
aas
and
jns
bound
outsl
dec
push
xchg
jge
or
out
mov
sbb
adc
icebp
mov
lcall
loopne
xchg
jle
adc
ror
cmpsb
and
jno
push
xor
jmp
fnsave
adcl
cmc
adc
testl
jmp
jp
stos
fstps
cltd
mov
add
les
mov
fisttpl
test
nop
shrl
pop
pause
movsl
in
sub
ds
pop
push
xor
jle
jae
jge
lcall
les
sub
and
cmp
add
test
sub
fisubs
xchg
jns
call
pop
add
pop
loop
push
push
jle
into
sub
in
div
repz
cmp
sbb
xchg
pop
arpl
dec
sub
jge
imul
xchg
je
mov
mov
push
inc
and
adc
xchg
in
dec
je
sbb
ljmp
lock
icebp
push
fldcw
lcall
fcoms
into
pushf
sub
push
ficomps
sbbl
jbe
rclb
lahf
fs
stos
pop
es
xchg
pushf
inc
cmc
add
aam
fdivrs
xchg
or
test
outsb
aas
adc
and
xchg
or
cltd
jne
xchg
jmp
leave
mov
movsb
cmp
ljmp
jb
mov
cs
and
addl
mov
and
mov
jbe
out
push
nop
push
sub
daa
mov
or
shr
clc
out
push
sbb
mov
xchg
push
xor
xchg
jno
fisubl
rcll
mov
pop
push
ds
mov
xlat
inc
mov
stc
mov
or
mov
imull
fldl
dec
push
dec
lods
pusha
xor
xor
sbb
cmp
mov
pop
pop
addr16
push
xor
ja
icebp
or
loop
xchg
sbb
imul
rolb
xchg
mov
outsb
mov
out
test
mov
jbe
xor
int
add
push
and
jns
ljmp
jo
cmp
sbb
sbb
push
cmp
es
out
popf
inc
jne
pop
ljmp
ja
mov
ret
rclb
mov
xor
xchg
inc
xor
mov
sub
out
push
push
and
mov
jmp
mov
out
filds
into
sarl
pop
imul
and
gs
outsl
xor
test
mov
xchg
mov
push
aaa
push
inc
aas
jnp
dec
rolb
dec
adc
sbb
push
jno
mov
aam
outsl
push
jbe
sub
adc
jmp
popf
xchg
and
or
jo,pn
mov
cli
orb
ds
mov
cltd
dec
daa
inc
aad
inc
faddp
icebp
ss
mov
push
dec
and
arpl
jne
push
fld
mov
pop
es
inc
and
inc
xchg
pop
loop
cmp
fldenv
hlt
push
lea
push
pop
sub
loopne
mov
jb
aas
cmpsb
test
scas
inc
mov
pusha
loopne
mov
mov
notl
cmp
push
cmpsb
sbb
lods
inc
xor
jno
lds
push
jno
mov
pushf
test
sbb
pop
push
add
ljmpw
out
dec
dec
mov
cmpb
fisttps
shrb
hlt
cmp
xchg
fwait
cmpsb
cmp
cmp
insl
popa
mov
pop
loope
ficoml
lret
push
mov
cmpsb
push
inc
rcr
mov
adc
mov
loope
push
mov
clc
das
mov
add
mov
psubusb
jl
mov
clc
bound
and
sub
pop
xchg
pop
icebp
push
push
clc
or
into
mov
add
paddd
mov
jge
das
mov
push
mov
cs
cmp
cmpsl
lcall
jle
fwait
or
cmp
or
push
mov
mov
bswap
outsl
clc
sub
and
scas
out
aad
fsubrp
es
pop
imul
jmp
ss
gs
mov
xor
lods
add
sar
or
mov
shrl
inc
mov
fs
adc
dec
sbb
mov
mov
add
lahf
jae
iret
add
push
jge
mov
lock
cmp
xor
int
outsb
into
push
test
pushf
jae
cmpsl
leave
out
sti
pop
cltd
inc
ja
add
add
in
jo
rolb
jl
ficoml
std
cltd
push
or
ficoml
mov
dec
xchg
pushf
adc
addb
fists
rcl
adc
push
inc
fmuls
repnz
mov
push
push
enter
test
cmp
mov
cltd
out
jne
sub
imul
xchg
and
xchg
cmc
int3
rcr
test
add
ret
xor
les
push
js
int3
lock
sbb
mov
jbe
int3
xor
je
jb
push
aas
inc
xchg
dec
clc
cld
mov
scas
out
ljmp
xchg
mov
xchg
mov
mov
xchg
sub
pop
sub
dec
add
lds
add
push
xchg
or
cmp
push
mov
pop
mov
mov
icebp
dec
sub
mov
add
clc
jnp
flds
loope
fidivrs
sbb
cmc
xor
mov
mov
outsl
js
push
add
rolb
mov
sbb
xlat
mov
add
ret
push
cmpsb
fincstp
adc
movsb
ret
cltd
xchg
aas
push
imull
sbb
adcb
jge
adc
xlat
pop
pop
mov
xor
shlb
mov
scas
mov
push
fmull
gs
dec
cmpl
popf
lock
jl
sub
xor
pop
aas
mov
jne
dec
mov
mov
mov
pop
scas
callw
pop
xchg
and
les
addr16
insl
test
adc
mov
scas
mov
addr16
lods
add
push
cwtl
mov
aam
or
cmc
stos
and
add
sbb
ljmp
test
cmc
jmp
cmpsl
pop
cmp
push
fdivs
scas
push
mov
or
in
jb
push
pop
movsb
cmp
jo
out
inc
std
flds
scas
insb
out
les
mov
fwait
cwtl
pop
mov
lods
not
xor
sti
or
jns
lods
stos
cltd
sub
xor
push
les
cmp
jae
or
mov
in
scas
jne
dec
push
inc
or
push
dec
sub
mov
fidivs
inc
std
negl
jno
xchg
sub
sti
xchg
lea
in
jg
push
jmp
inc
cld
mov
addb
mov
pushf
mov
gs
add
lcall
lcall
loopne
inc
mov
fwait
addr16
jecxz
cmp
jge
mov
mov
popf
inc
and
cmp
pusha
jnp
fwait
mov
scas
hlt
mov
idiv
lret
jle
cli
push
rcll
or
into
orb
aam
inc
push
add
aad
pop
push
pop
lds
inc
xchg
push
add
jg
jle
out
sarl
mov
xchg
test
loopne
mov
cs
mov
adc
jmp
into
stos
scas
imul
negb
mov
cmpsl
popa
mov
inc
les
push
inc
sbb
pusha
inc
mov
xor
push
inc
test
jns
jg
mov
dec
mov
fst
scas
add
sub
out
sub
cmc
adc
shl
aam
cmpsl
cmp
cmp
movsb
jmp
fucomp
roll
xchg
loopne
push
aas
call
cmpsl
and
ret
push
xlat
or
mov
dec
outsb
cmp
rorb
sub
stos
sahf
addr16
pop
imul
and
dec
and
xchg
xlat
lret
mov
inc
int
cld
xchg
ja
filds
jae
mov
sti
testb
in
pop
div
clc
xchg
fistpll
call
incl
adc
push
lret
mov
xorl
xlat
addl
jge
in
dec
sbb
outsl
syscall
cwtl
or
addr16
dec
js
pop
ds
clc
sahf
add
pop
pop
xor
lock
mov
icebp
xchg
and
xor
or
in
mov
push
push
add
add
cmpsl
xchg
mov
fcomps
les
adc
outsl
jns
xchg
jne
stos
inc
repnz
dec
mov
cwtl
mov
mov
or
insl
mov
lea
out
test
mov
mov
js
dec
jp
jl
mov
pop
push
and
jg
decl
pusha
mov
pop
subl
jl
xor
ja
stc
das
pop
sbb
daa
adc
stos
xlat
or
out
pop
andb
int
or
inc
in
push
icebp
mov
lods
addb
push
xor
lea
push
push
pop
inc
inc
or
push
cld
cmp
xchg
dec
mov
shr
data16
scas
cmp
pop
inc
pop
pop
ret
cmp
into
sub
pop
daa
out
popf
push
pop
and
push
in
cmp
popf
fsub
int
into
sub
jecxz
xchg
or
push
clc
push
xchg
out
adcl
or
jmp
add
dec
push
xor
mov
cmp
pop
pop
or
sub
scas
jmp
insb
int
rorl
xchg
and
jns
xor
xlat
sbb
cmp
cld
mov
ljmp
pop
loope
pushf
or
xchg
add
iretw
adc
or
jge
cmp
in
pop
pushf
cld
pop
adc
cmpsb
clc
xor
jns
lahf
ss
shr
mov
sbb
loop
rorb
int
push
fnstcw
jg
mov
pop
cli
popa
les
adcl
pop
and
lock
mov
jb
notl
xchg
movsb
lahf
sbb
xchg
mov
mov
sbb
sbb
push
cwtl
ja
pop
imul
cmpsb
add
mov
mov
push
mov
insl
push
sbb
out
jns
add
leave
loopne
push
inc
pushf
test
out
inc
loop
adc
outsb
repnz
data16
repnz
jnp
leave
dec
fldenv
clc
into
shl
mov
shrb
lret
loopne
pop
hlt
sub
mov
cld
ret
ds
push
or
dec
into
out
sbb
int3
ljmp
bound
sbb
cmc
aad
paddb
cli
sti
jnp
jne
outsl
lret
icebp
cltd
roll
sub
xchg
mov
fisttpl
fistpl
mov
imul
or
jge
loopne
out
incb
aas
or
shl
add
add
lahf
arpl
adc
jp
outsb
call
xchg
popf
call
push
and
cmpb
sbb
or
add
or
lcall
call
aam
sbb
cmp
adc
test
fstpl
push
cmp
and
sbb
fwait
rclb
lea
shlb
inc
outsb
and
dec
pop
mov
pop
jbe
test
popf
pop
pop
push
mov
bound
inc
sbb
mov
push
lret
mov
pop
out
sbb
pusha
jecxz
fstps
imul
movsb
push
jno
and
stc
dec
and
jl
sub
cld
jp
fs
xchg
add
jns
out
or
test
pop
adc
cmp
mov
pusha
lods
stos
jle
inc
jp
stos
mov
push
sti
stc
stos
mov
sub
mov
mov
cmc
subl
int3
dec
or
in
adc
sbb
int
addb
aad
sbb
xchg
push
arpl
enter
adc
lods
inc
inc
lret
pop
pushl
mov
cmp
rcrb
aaa
clc
aaa
imul
js
or
pushl
sub
push
enter
and
aad
mov
fs
add
sub
jecxz
adc
mov
ret
mov
pop
mov
pop
out
mov
push
in
fadds
and
cmpsl
or
das
bound
mov
jb
sbb
lahf
bound
mov
sub
into
leave
dec
mov
mov
cld
mov
adcb
push
movsl
inc
cmp
inc
mov
mov
testb
cmp
fldl
dec
dec
fcomps
and
scas
lret
test
loopne
mov
adc
inc
mov
dec
sbb
mov
arpl
or
leave
in
xor
sub
dec
jmp
mov
adc
or
loope
rolb
jle
rclb
jnp
mov
ja
ret
or
jb
daa
addb
out
pop
ret
xchg
lods
xchg
jbe
popa
cmp
pop
jno,pn
mov
mov
insb
sbb
pop
popa
jge
pop
xor
stc
push
cs
xorl
pop
push
pop
cmp
int
mov
stc
xor
arpl
pop
jb
out
pop
lock
pop
xor
std
ret
fldl
repz
and
pop
lret
or
mov
push
dec
sti
sub
mov
push
inc
cs
push
lock
sbb
test
pop
xorl
rcll
sbbl
cmpb
pop
xchg
push
addl
outsl
pop
movsb
mov
push
lods
fdivrl
xlat
xchg
mov
inc
mov
adc
int
and
jo
add
jle
pop
mov
and
adc
leave
add
xchg
in
push
mov
leave
cmp
pop
jb
adc
jl
xor
sub
sbb
cmp
xchg
mov
or
adc
xchg
lret
cmpl
mov
mov
in
xor
jge
insb
shl
inc
rolb
jp
cmc
xor
xchg
push
sub
sbb
push
adc
outsl
fistpl
add
sti
dec
ss
cmp
vaddpd
mov
push
cltd
cld
jnp
xor
outsl
jge
mov
js
ret
add
xor
mov
mov
inc
cmp
dec
and
fnstcw
faddl
rclb
movsl
jns
or
jmp
mov
imul
in
sub
es
dec
mov
xchg
or
fdivs
inc
and
clc
sub
cmp
jne
ja
mov
cli
jl
ret
cmp
fildl
int
add
push
int
mov
aaa
adc
enter
pop
sbb
fmull
xor
pop
adc
ds
mov
dec
int
in
mov
mov
pop
and
xchg
repnz
sub
xchg
or
out
call
mov
jno
or
inc
add
fildl
jnp
jl
jge
lret
ret
loopne
mov
lock
pop
push
cltd
mov
sbb
das
or
out
and
mov
xchg
ror
call
or
sti
imul
mov
inc
jg
cmpsl
cmpsb
icebp
repz
pusha
pop
loopne
sbb
popf
push
adc
loope
sbbb
int3
add
sbb
lods
mov
pop
addr16
push
and
xchg
dec
sbb
fcoml
stos
pushl
scas
std
or
mov
or
leave
push
mov
je
cmc
pushf
inc
cmp
les
inc
jmp
arpl
mov
or
jae
cmc
sarb
sub
mov
pop
mov
fidivrs
rorl
repz
mov
call
jbe
xchg
cli
push
sbb
dec
pop
mov
aad
add
movsl
in
and
dec
xchg
shl
stos
and
mov
or
mov
pop
cmp
sbb
imul
rorb
movsb
ret
lea
xchg
aad
lock
test
decl
and
inc
cmpsl
inc
mov
dec
test
push
popf
test
imul
aaa
loop
adcb
filds
fwait
lock
shll
pusha
std
in
mov
dec
jle
sahf
jb
mov
xchg
lods
sarb
push
and
add
out
fnstsw
dec
sar
mov
mov
enter
push
sub
in
dec
into
mov
mov
lds
mov
inc
mov
dec
adc
enter
in
xchg
enter
mov
or
or
jge
inc
insl
mov
test
enter
add
int
add
lock
lret
orl
sbb
jae
test
dec
cmpl
cmp
lret
int3
mov
dec
int
test
aas
int
shrb
fidivrl
sub
adc
incl
push
jg
call
mov
mov
gs
frstor
push
aad
ret
in
mov
jmp
aaa
insb
mov
mov
push
ja
sub
sbb
mov
and
psubusw
andl
dec
cmp
jns
fistpll
into
cmc
in
test
outsl
mov
jmp
jg
fimull
shlb
push
lea
add
mov
or
repnz
das
mov
pop
in
and
out
test
insl
jle
out
push
dec
jns
cwtl
jge
scas
ss
mov
in
jg
xor
xchg
push
pop
js
out
jne
sbb
sbbl
arpl
cmp
in
mov
add
sub
mov
inc
bound
push
jbe
or
pusha
or
cmp
ret
jg
mov
adc
sahf
or
mov
std
lods
xchg
cmp
dec
pushf
sub
xchg
aas
mov
dec
xchg
dec
cs
cmpsl
cmpsl
rorl
jge
pop
cld
ret
dec
loop
int3
sti
jecxz
sbb
sti
or
cmp
push
push
mov
mov
stos
popl
mov
xor
adc
xor
mov
fsubs
imul
sbb
fmulp
mov
lock
xchg
lock
outsb
popa
fwait
into
jo
xchg
jno
aam
mov
or
push
shl
fcmovb
mov
fisubrs
shrb
sbbb
sbb
mov
out
movsl
push
imul
rol
iret
mov
fcom
repnz
mov
push
sub
jbe
cltd
aam
xchg
mov
ja
jae
aas
or
cmpsb
ficoms
mov
scas
subb
jp
mov
and
mov
negl
push
cmp
mov
subb
fidivrs
jne
andl
fistps
aas
popa
gs
imul
cmp
add
push
dec
bound
push
rorb
lahf
and
data16
outsl
hlt
popf
cmpsl
pusha
inc
pop
push
out
adc
mov
cltd
dec
in
int3
dec
dec
in
aaa
lods
sbb
lods
sub
xor
dec
and
and
xchg
insb
mov
dec
out
sbb
jmp
push
sub
mov
stos
mov
sbb
cmp
scas
inc
adc
call
outsl
push
mov
outsb
inc
dec
mov
ljmp
into
bound
xchg
in
test
test
subb
pop
loop
adc
lret
fsub
je
mov
outsl
adc
test
jno
loope
add
xor
xchg
hlt
icebp
fs
and
loop
cmp
jp
adcb
adc
jmp
outsb
mov
out
lret
dec
sub
sub
pop
cmp
mov
xchg
int3
mulb
imul
xor
xchg
pop
cmp
jb
jbe
cmp
rorl
ret
mulb
repnz
aad
or
ror
or
push
mov
inc
aaa
jns
mov
loopne
sub
inc
das
enter
out
lahf
add
dec
mov
cmp
roll
cmc
addl
daa
sub
stos
inc
subb
rcl
add
sbb
ljmp
mov
dec
daa
xor
stos
ss
insb
int
and
and
mov
scas
dec
fstpt
loopne
dec
cwtl
xor
pop
pusha
sarb
cld
ret
mov
data16
dec
dec
push
shlb
add
test
pop
mov
xor
cmovne
cmp
or
jno
hlt
mov
fwait
sbb
shrd
sub
jge
negb
les
dec
or
lret
cs
icebp
push
rcll
pop
push
pop
push
push
imul
xchg
xchg
lea
mov
stc
pop
and
lahf
loope
repz
jbe
xchg
outsl
xchg
pop
adc
jp
dec
in
notb
dec
push
mov
mov
in
pop
stos
in
divl
xchg
pop
leave
jno
pop
and
test
nop
clc
int
xchg
or
xchg
jmp
movsl
add
mov
je
aaa
jp
cmp
or
in
inc
imul
mov
add
cmpsl
sub
push
sub
or
mov
out
or
adc
movsb
inc
in
pop
es
mulb
or
adc
lret
mov
add
mov
mov
and
sbbb
mov
scas
mov
mov
xchg
jmp
and
pop
jns
jne
push
push
xchg
out
les
or
movsb
fcmove
dec
nop
add
lahf
jmp
cwtl
mov
sub
test
aaa
dec
inc
arpl
fcompl
xor
repnz
xchg
pop
mov
inc
loopne
ret
movsb
inc
out
push
mov
mov
xchg
loope
or
cmp
jg
jnp
mov
or
pop
pop
push
dec
fbstp
data16
mov
and
stc
jbe
adc
xor
add
aaa
inc
lods
push
cmpsb
mov
imul
scas
mov
cmp
mov
jno
cld
mov
cld
mov
mov
dec
imul
lea
sub
mov
add
cmp
aam
pop
ret
jge
shll
or
jb
and
sub
int3
xchg
xor
hlt
lds
addr16
loop
js
jns
cld
push
gs
test
sahf
sub
jecxz
jg
rcrb
mov
jg
and
fwait
push
and
cmp
jle
test
inc
stos
or
or
pop
in
stos
jns
xor
add
inc
lret
sub
daa
cwtl
mov
loopne
add
mov
mov
xchg
ficompl
ret
lea
lahf
cmpsb
fistl
jle
dec
ljmp
xchg
or
enter
jmp
popf
pop
lea
daa
pop
dec
stos
lds
jmp
mov
cld
jne
mov
pop
and
sbb
add
pop
mov
je
aaa
pop
push
aas
aaa
push
pop
pop
idiv
xor
dec
loop
jae
inc
mov
shlb
rolb
test
mov
ss
jnp
mov
movsb
xor
cltd
in
cs
mov
pop
dec
sti
stos
mov
clc
cli
scas
rorl
dec
adc
out
and
xor
imul
and
cmp
pop
mov
mov
push
dec
aad
ja
icebp
add
jle
movsl
push
std
push
xchg
int
mov
xchg
lcall
and
dec
jle
jecxz
iret
dec
pop
cltd
jb
xlat
mov
jns
mov
cmp
mov
inc
mov
sti
pushf
fsubs
stos
inc
cmp
arpl
cs
xchg
dec
cmp
psubq
cmp
mov
lahf
mov
ss
loop
adc
shll
add
in
push
sbb
xor
insb
mov
ficompl
out
sub
add
push
jp
push
ljmp
jle
out
inc
sub
test
fld
pop
arpl
mov
mov
inc
icebp
mov
push
sbb
cmpsb
push
stc
scas
fmuls
push
jbe
sub
xchg
mov
or
jmp
sbb
nop
ja
add
in
int3
adcl
dec
test
cs
jp
sti
jo
dec
lret
sub
jo
fsubs
pop
adc
sbb
das
dec
lods
pop
fildll
subb
pop
in
cmp
xchg
repnz
add
mov
pop
call
xchg
lods
cmp
std
mov
popf
int
push
popa
xchg
sub
mov
lret
pop
mov
cmp
imul
cld
imul
sub
mov
xchg
ret
pusha
jne
sbb
inc
adc
pop
or
cwtl
cmp
xor
add
sbb
addb
xchg
in
nop
outsl
loopne
cmp
lea
loope
popa
pop
sub
fistpl
repnz
sbb
ja
insl
vpcmpeqd
xor
mov
dec
mov
mov
dec
mov
jmp
xchg
je
lods
std
sahf
pushf
std
mov
push
pop
cmp
loopne
xchg
add
jb
add
aam
out
dec
dec
loop
into
jbe
push
mov
push
dec
dec
mov
xor
sbb
adc
dec
das
sub
xor
outsl
jge
mov
push
mov
xlat
xchg
test
je
sbb
mov
and
aad
stc
imul
out
into
and
mov
ljmp
sbbl
movl
bswap
ret
mov
pop
sbb
sub
aam
jb
add
cld
mov
xor
lds
dec
insb
sub
push
aaa
jmp
mov
adc
repz
repz
shlb
int
push
add
mov
scas
sub
push
add
cmp
push
js
push
xchg
sarb
orl
hlt
xchg
faddl
aas
and
fiadds
in
pop
std
push
hlt
jmp
stc
jbe
aam
adc
pop
cmp
movsb
push
test
shl
sbb
sahf
ret
jge
and
cld
mov
enter
cmpsb
sub
xor
lret
push
xor
cwtl
test
jp
int3
clc
into
ret
out
imul
push
movsl
sbbb
test
rorb
je
arpl
and
jnp
sub
pop
lods
pop
inc
jmp
repz
adc
dec
sbb
test
pop
xchg
ss
mov
mov
inc
cld
adc
call
sub
adc
aam
jmp
mov
addr16
mov
repz
mov
stos
rclb
les
jb
cmpsb
add
mov
jp
xor
fwait
inc
addr16
push
push
loope
cmp
mov
push
out
push
xor
sub
pop
add
add
push
movsl
xchg
fdivl
mov
xchg
incb
sbb
push
out
lret
test
testl
ret
pop
jmp
jecxz
test
in
scas
sub
inc
mov
repnz
gs
jnp
push
pop
ret
stos
mov
add
pop
mov
leave
ret
mov
pop
outsb
xchg
test
sbb
dec
jb
adc
in
and
jge,pt
add
das
adc
loope
addr16
xor
xchg
ljmp
inc
das
mov
imul
push
cli
or
inc
test
mov
mov
push
push
stos
lods
shl
dec
sbb
sahf
jb
and
lret
mov
inc
and
dec
xchg
jge
xor
pop
popl
ret
dec
sbb
xchg
mov
mov
inc
lods
adc
pop
sub
lods
push
pop
test
loope
add
xchg
push
mov
lods
mov
data16
inc
mov
aas
add
cmp
jae
mov
cs
fidivrl
sub
add
cs
popf
push
loopne
mov
cmp
adc
loopne
bound
mov
jne
add
dec
dec
push
cmpsl
test
addr16
add
jge
pop
mov
test
cmp
dec
scas
lea
std
add
jo
push
or
in
inc
and
das
je
pusha
outsb
lds
jne
fisttps
cmp
or
jle
stos
inc
stc
or
pushf
xor
dec
cmc
or
dec
lock
add
add
mov
mov
movsb
xor
int3
mov
mov
jnp
js
xchg
adc
enter
and
push
mov
sub
sbbl
or
ret
push
nop
and
mov
inc
ja
inc
fwait
xchg
sbb
hlt
sub
call
cmpsb
sbbb
fidivl
pop
jne
sub
scas
jbe
or
pusha
into
arpl
jno
stc
push
ret
mov
insl
out
arpl
or
js
push
push
sarb
test
jno
stc
test
fwait
pop
aam
call
cmc
add
repz
xor
andb
outsl
and
repz
lods
fwait
or
mov
bound
push
adc
repz
or
pop
lods
pop
cmpsb
ss
js
dec
dec
rcrl
bound
subl
fsubrl
adcl
push
scas
xor
inc
adc
into
cwtl
sbb
and
mov
pop
adc
push
add
inc
inc
mov
sbb
adc
mov
nop
add
push
andl
in
push
nop
je
jns
rclb
dec
sub
cltd
xchg
mov
mov
pop
pop
pushf
xor
outsb
adc
ja
lcall
es
sti
aam
mov
cmc
adc
stos
fwait
testl
sbb
call
cmp
ds
orl
in
rorb
ds
insl
cltd
rcrl
push
xchg
mov
cmp
jne
pusha
cmp
hlt
push
pop
and
outsb
fprem
xchg
fidivrl
add
in
dec
pop
mov
iret
sub
push
xor
push
pop
sbb
dec
push
mov
or
ljmp
fadd
sar
outsl
sti
loope
ss
xchg
aad
push
sahf
pop
cmp
xor
and
std
out
and
scas
pop
nop
test
les
mov
push
sbb
popa
imul
int3
flds
sub
jg
gs
repnz
mov
pop
xchg
scas
push
stc
push
inc
aas
ds
cs
stc
daa
push
cmp
daa
out
push
push
pop
mov
jae
push
nop
push
aaa
xchg
data16
and
aam
pop
cs
fcmovnbe
mov
push
int
pop
inc
pop
add
dec
and
add
movsl
adc
inc
lea
and
je
scas
adc
mov
push
cmpsl
dec
sub
xchg
jmp
fisubrs
cld
and
xchg
pop
push
arpl
pop
lods
iret
lret
lret
xor
xor
push
ss
xor
inc
mov
ds
addl
dec
xor
fmull
mov
lods
popf
jl
aaa
int
sbb
pop
mov
inc
shll
lret
cmp
arpl
imul
xor
dec
rcr
xchg
jne
push
pop
jbe
pop
lock
add
push
xor
mov
or
in
push
out
inc
and
inc
push
popa
mov
outsb
inc
shlb
jl
insb
push
mov
dec
movsl
sub
stos
inc
leave
dec
jecxz
call
fcomp
out
in
lods
dec
lea
loopne
sbb
jl
mov
jg
mov
icebp
imul
aam
pop
pop
outsl
push
test
loopne
mov
lds
xchg
add
mov
nop
in
arpl
push
imul
add
imul
mov
mov
inc
mov
push
or
mov
jne
test
xor
pop
dec
mov
sub
pop
add
roll
and
insl
jnp
pop
and
clc
jno
mov
mov
gs
lahf
into
hlt
or
jmp
mov
daa
fidivs
mov
repnz
mov
lea
cmc
jbe
sub
xchg
push
inc
jbe
mov
call
mov
inc
fwait
cmp
fisubrl
mov
outsb
xchg
push
dec
daa
xchg
and
cs
int
sub
adc
pushf
push
movb
jp
icebp
adc
push
js
outsl
or
inc
in
or
fimuls
adc
push
inc
icebp
lock
mov
ljmp
cmp
mov
fbld
repz
mov
sbb
mov
stos
mov
sbb
push
or
sbb
xchg
ds
lahf
shlb
or
outsb
xchg
movsb
add
lock
inc
cwtl
aas
cmp
push
mov
cmc
hlt
fistl
je
stc
pop
mov
insl
in
mov
xchg
pop
cmp
add
add
lods
sbb
push
jbe
push
fistl
mov
test
xchg
or
lds
inc
fnstcw
jp
jle
rorl
sbb
inc
in
sbb
xor
ret
sub
cmp
mov
mov
jbe
insb
mov
into
test
or
lahf
inc
mov
jne
xchg
or
sbb
push
mov
es
dec
cmpl
push
xlat
ljmp
jns
pop
test
cmp
imul
add
std
mulb
es
test
or
lcall
popf
adc
arpl
jb
push
push
add
mov
xor
adc
sbb
lods
xchg
pop
and
out
test
lock
imul
test
jnp
jge
rcr
dec
insl
cmpsb
jg
xor
cmpsl
idivb
push
lock
pop
push
add
adc
adc
pop
stc
dec
mov
inc
fisubrl
out
lods
and
aas
inc
into
cltd
cmp
lret
loope
rclb
loop
fimuls
subl
sbb
jp
push
jne
sub
push
adcb
add
fwait
stc
sbb
cmc
cld
fwait
ds
out
sahf
test
stc
dec
clc
xlat
daa
int3
cmpsl
clc
arpl
subl
daa
cmp
or
jl
xchg
nop
add
mov
push
imul
lret
int
sub
cmp
dec
scas
aad
pop
mov
xrelease
sub
andl
xchg
lcall
adc
xor
sbb
movsl
ss
sub
add
fisttpll
movb
pop
ljmp
mov
mov
lcall
cld
xchg
aaa
cmp
js
arpl
ficoml
test
cmp
rorb
mov
test
xor
test
in
fstl
xchg
xor
cmp
cmp
push
mov
push
dec
jle
gs
fwait
or
pop
shr
mov
mov
add
loopne
push
mov
xchg
or
sbb
test
and
cmp
out
jae
cmp
jmp
mov
pop
dec
call
out
std
mov
incb
ret
aaa
std
pop
adc
adc
clc
hlt
adc
mov
movsl
xor
xchg
test
mov
mov
iret
cs
cmp
fildll
ja
sbb
aad
sbb
sbbb
scas
push
xorb
pop
lods
and
enterw
fisubl
lret
add
inc
jbe
push
jne
leave
sbb
jmp
jne
push
stc
jo
dec
push
test
push
js
inc
and
mov
pop
pop
fdivs
ss
movsl
xor
pop
dec
jae
sub
lods
rcll
add
xor
es
lods
sub
mov
out
fs
mov
xor
push
pop
mov
int3
insl
or
gs
and
jne
in
sbb
mov
icebp
jne
js
mov
adc
lcall
pop
icebp
adcl
jle
gs
lds
push
dec
push
stc
cmpsw
or
dec
push
test
cld
lahf
nop
sub
pop
sub
mov
ret
stc
pop
mov
sub
clc
hlt
int3
dec
mov
sub
inc
fadds
loop
stos
or
or
icebp
popa
cmp
or
outsb
mov
mov
xchg
add
jne
jo
stc
js
stos
imul
lahf
pop
ficomps
dec
loope
push
imul
xlat
inc
or
in
sti
mov
mov
mov
leave
shr
inc
pop
and
xor
xchg
or
inc
push
ss
out
adc
jb
jne
sbb
int3
repnz
jbe
lods
imul
inc
les
aas
bound
shll
inc
push
xor
lock
jp
pop
lods
test
push
cmc
das
push
imul
shrl
into
mov
test
int3
jle
or
or
add
jns
out
in
adc
sti
je
pop
pop
jbe
shr
jns
dec
lret
pop
pop
je
in
mov
in
lret
xor
ret
ja
into
xor
inc
pop
or
adc
and
sub
aam
movsb
rcrl
cmpsl
aad
andl
cmp
lods
cmpl
test
pop
test
lock
push
mov
sub
and
cld
fwait
lods
dec
and
push
test
sub
js
pop
loopne
repz
stos
insb
mov
cmp
jns
imulb
jl
addr16
xchg
jle
sbb
loopne
in
sahf
mov
aam
and
icebp
or
addr16
loopne
mov
stos
push
add
mov
inc
cmc
mov
pop
inc
push
outsl
xchg
mov
sbbl
jb
ret
fcmovne
jb
sub
insl
in
jge
addr16
popa
pop
and
pop
sub
mov
ret
push
adc
dec
imul
mov
aas
xchg
push
inc
cmp
test
cs
push
sub
dec
test
push
adc
pop
sbb
ds
cmp
loopne
pop
xor
sbbb
nop
shll
movsl
and
lock
int3
mov
in
aad
dec
in
je
and
int3
jmp
or
xchg
jecxz
in
aam
xchg
fbld
cmc
mov
and
cs
pop
das
cmpsb
dec
cmp
sub
icebp
lea
scas
aaa
jnp
cld
dec
jp
jg
pop
fcompl
dec
xor
sahf
and
ja
jmp
ja
test
js
scas
pop
lret
sbb
ja
add
push
dec
mov
repz
mov
cmc
dec
push
add
push
sub
nop
outsb
ret
push
fldenv
pop
mov
aas
fidivrs
aad
pop
sbb
mov
xor
pusha
xor
pop
jp
sahf
inc
mov
sub
call
push
jle
sub
and
xor
cmp
cwtl
stc
adc
fwait
addl
dec
jecxz
fstl
icebp
pop
dec
test
fisttpl
pop
mov
add
stc
and
pop
aad
mov
ss
cmp
test
ret
adc
cmp
mov
jmp
les
dec
sbb
inc
or
call
sub
repnz
inc
xor
push
lahf
add
pop
lock
cltd
clc
xor
sub
rorb
lret
push
dec
mov
gs
lahf
insb
nop
out
aas
scas
xchg
add
mov
stos
rcll
ret
mov
or
dec
ljmp
sbb
fwait
cmp
pushf
xchg
mov
jge
jg
pop
add
faddp
mov
lret
dec
dec
cmp
sub
aaa
and
fs
fstpl
xor
sbbl
mov
fadds
enter
in
inc
nop
jns
inc
mov
xor
jecxz
dec
inc
fs
add
cmp
mov
ja
lcall
cltd
fcoml
or
outsb
mov
inc
or
xlat
out
popa
gs
std
fstpl
xor
pop
jg
rclb
shrl
mov
xor
bound
sti
daa
and
sbb
cmp
mov
mov
push
dec
shrl
inc
stos
push
xchg
push
outsl
or
test
mov
sbb
dec
fisubs
ret
xorb
orl
mov
enter
adc
mov
test
mov
mov
out
std
mov
pusha
test
imul
inc
dec
fyl2x
sub
gs
sbb
cmp
lods
add
add
pop
filds
adc
movsb
sbb
mov
mov
je
clc
pop
int
or
add
aaa
push
fdivrs
popa
hlt
mov
mov
xchg
mov
lret
xchg
mov
mov
jge
xchg
into
stos
xorb
add
dec
jo
jne
shll
xchg
fs
mov
pop
mov
sbb
push
jae
and
inc
sbb
xor
inc
cmp
loop
outsb
fistpll
xorl
and
rolb
ret
je
or
lds
add
stos
adc
mov
mov
push
pop
push
call
jle
rcr
dec
sbb
test
jb
mov
inc
and
out
jge
cld
jecxz
mov
xchg
test
gs
sahf
jp
in
cwtl
sbb
movsb
insb
sahf
lea
push
push
and
test
ja
add
and
imul
or
pusha
popa
inc
mov
push
mov
jno
mov
mov
inc
lret
ds
jge
jae
das
mov
aaa
jno
lcall
jmp
jb
inc
popa
mov
add
dec
clc
test
lcall
pop
iret
sbb
mov
sbb
or
dec
ds
inc
mov
inc
outsb
xor
adcb
push
and
mov
jne
mov
xor
jmp
xchg
add
cmp
aas
pop
ljmp
pushf
mov
dec
mov
cmp
xor
pop
in
in
xchg
xchg
fdivrs
xchg
je
outsl
inc
loop
enter
and
lret
mov
sub
cld
iret
mov
clc
bound
push
adc
dec
movsl
jmp
int
inc
fwait
jmp
hlt
shll
cmp
call
clc
sub
or
and
arpl
or
mov
aas
xor
outsb
or
mov
mov
pop
shrb
sbb
fstpl
inc
dec
ss
and
out
call
add
loope
ja
xor
andl
shll
mov
inc
or
dec
sbb
sub
dec
jbe
adc
push
or
mov
subl
shrl
fdiv
sbbl
add
mov
in
push
out
call
mov
cltd
jnp
sub
std
imul
movsb
xor
fdivrl
push
not
mov
or
out
gs
into
mov
adc
adc
js
insb
add
and
push
mov
dec
cltd
shr
pusha
cli
sub
aad
fistpl
jecxz
xchg
add
jg
int3
fsubp
inc
ja
and
sti
sbb
test
stos
pop
push
push
icebp
or
ficompl
push
mov
fisubrl
les
inc
sbb
xor
pushf
inc
xor
addr16
xchg
adcb
aad
pop
shlb
xor
fidivl
jmp
inc
aad
cwtl
out
imul
adc
mov
pop
aas
add
popa
scas
int
mov
pop
push
xchg
inc
mov
aaa
mov
inc
les
dec
fidivl
adc
into
stos
push
jmp
adc
dec
fimull
int3
rorb
rcl
inc
repz
adc
bound
mov
cmpsl
mov
dec
mov
lods
fwait
dec
sti
push
inc
loopne
pop
nop
leave
lea
inc
int
insl
scas
mov
ret
loope
and
and
je
test
lds
and
orl
enter
or
xchg
imul
les
mov
add
scas
dec
cs
adc
xchg
pop
mov
lds
cmovae
cmp
daa
stos
sbb
repnz
push
mov
and
fwait
inc
pop
fildl
bound
adc
hlt
cmp
jge
xchg
jns
add
inc
scas
mov
mov
repnz
fistl
sti
sub
ret
pop
mov
das
mov
jo
rol
shll
adc
xor
mov
adc
and
aas
test
cltd
idiv
adc
mov
mov
cld
loop
mov
xchg
ja
fucomip
icebp
mov
sbbl
imul
add
xchg
sbb
leave
push
scas
xchg
dec
mov
lods
sbb
lcall
lea
inc
aad
out
xchg
mov
push
mov
sbb
cmp
xlat
xchg
add
insb
jns
push
cmp
sahf
stos
jl
dec
add
add
ljmp
mov
add
jle
mov
lods
push
push
int
xchg
call
jl
cld
mov
lahf
fsubrl
add
in
jecxz
adc
cmp
and
xchg
jecxz
jno
sub
arpl
pushf
loop
sar
dec
mov
test
cmp
or
test
mov
fmuls
pop
pop
pushf
fs
and
mov
pop
jns
outsl
and
loopne
fidivs
cltd
adc
rorl
enter
jp
fildll
sbb
aaa
push
imul
push
pop
fwait
pusha
test
decb
dec
pop
cmpsl
mov
std
icebp
pop
test
inc
mov
mov
or
add
arpl
push
ss
sub
call
fsubl
lret
jns
jge
sarl
insl
sub
mov
fidivs
movsl
out
mov
das
dec
add
sub
push
inc
in
mov
into
pop
div
cwtl
mov
cwtl
movsl
int
stc
pushl
cmp
hlt
mov
mov
ds
pop
jg
imul
out
and
cltd
add
push
ret
pop
push
pushf
adc
iret
arpl
mov
sub
pop
cmpl
test
pop
loope
out
inc
popf
inc
mov
les
movb
movsb
mov
std
inc
arpl
push
mov
aam
jp
and
popa
das
mov
mov
fs
push
pop
pop
mov
pop
add
pop
ja
xchg
scas
rolb
ljmp
add
subl
callw
xor
dec
out
fxam
aas
and
cwtl
sbb
mov
aam
dec
ljmp
jnp
add
push
mov
subb
jecxz
pusha
in
stos
adc
xchg
aad
imul
push
sbb
sti
sub
iret
lds
cltd
cmpl
cmp
fisttps
arpl
jg
enter
xchg
cli
and
add
mov
mov
adc
lods
ss
insl
pop
and
pop
dec
fistpl
mov
mov
dec
cmovge
adc
sahf
sbb
imul
jne
or
and
repnz
add
and
aaa
in
js
nop
cmpsl
mov
inc
mov
test
push
int3
pop
cmc
adc
mov
cmpsl
xor
pop
sahf
pop
fidivl
nop
push
fistps
arpl
je
mov
mov
mov
ret
mov
jbe
fstp
jns
repnz
mov
sbb
frstor
inc
sbb
nop
xor
test
inc
dec
cltd
rcrl
repz
imul
test
cmp
sbb
mov
sub
ljmp
insb
sub
sub
lods
outsb
jbe
scas
adc
mov
rcr
ljmp
add
sub
xor
inc
push
mov
frstor
inc
push
xchg
sbb
sub
fmull
mov
out
stc
sbb
jg
out
add
jmp
jecxz
in
and
scas
dec
test
pop
arpl
les
into
lea
ja
mov
lret
mov
mov
mov
jne
cltd
mov
popa
jbe
test
pop
pop
mov
in
cmp
andl
push
aam
mov
cmp
sub
adc
jge
sbb
into
arpl
xchg
jecxz
enter
jg
adc
sub
and
push
sub
pop
adc
cmpsl
cs
aas
mov
jmp
fwait
cmp
cmp
xchg
into
push
cmp
inc
mov
rcrl
mov
orl
inc
add
stc
lds
xchg
push
int
aas
mov
pop
add
jnp
leave
cmp
jnp
mov
aam
lret
lock
pop
notb
cmp
xor
repnz
filds
pop
xor
nop
lret
movsl
and
adc
fdivr
ret
outsl
or
cmc
mov
sub
mov
jecxz
mov
fstpl
fcom
mov
test
shl
lods
cmp
pop
jo
jo
push
in
sub
rolb
jle
lret
jmp
mov
push
ret
push
dec
scas
jg
cmpsb
test
mov
mov
mov
test
xchg
call
dec
mov
andl
ds
jne
and
loopne
push
xor
fs
subb
movsl
roll
iret
jne
dec
in
call
cmp
cmp
repz
dec
sub
lods
movsl
es
and
mov
mov
or
lret
inc
bound
loopne
mov
decl
ss
stc
push
xchg
repz
pop
out
dec
sub
pop
jp
loop
lret
sub
xchg
xlat
pushf
insl
mov
xor
shl
inc
mov
sbb
das
movsl
dec
stos
inc
mulb
outsb
cwtl
push
cltd
sub
xchg
cwtl
cmp
mov
fdivrl
jge
jle
ja
rol
jno
and
insb
sub
inc
ret
shlb
adc
pop
push
adcb
fisttpl
pop
xor
test
test
aas
cmp
dec
cwtl
xor
pushf
icebp
sub
daa
aas
mov
sbb
loope
pop
data16
or
aam
push
movsl
and
adc
into
imul
sbb
out
clc
imul
fidivs
pop
sub
dec
scas
adc
jbe
xor
mov
in
mov
ds
xchg
xchg
mov
in
stos
hlt
ss
cmpsb
or
sti
lcall
lods
pop
int3
push
mov
pop
test
mov
push
popa
ret
insl
jne
add
cmpsb
daa
push
das
testl
inc
outsb
ljmp
cwtl
mov
das
ret
sub
jg
and
shlb
sbb
jae
adc
les
push
pop
add
mov
jle
adc
xchg
pop
imul
mov
dec
je
out
int
cld
out
es
inc
jg
es
fmul
cmp
xor
push
xor
mov
es
lods
movsb
ja
cmpsl
mov
sbb
xchg
clc
mov
stos
mov
pop
add
aaa
scas
pop
orb
popa
push
pcmpeqw
push
imul
out
pop
fbstp
and
dec
or
xlat
inc
push
sub
inc
xor
dec
int
ss
push
cmp
jb
xchg
sub
adc
mov
lahf
sbb
mov
adc
add
push
stos
or
clc
pop
cs
mov
inc
lcall
insl
cmp
out
lea
loop
fidivs
lods
das
lret
roll
lret
jmp
lds
je
rclb
loope
aas
cmp
xchg
test
jle
inc
sahf
xchg
stos
sahf
cwtl
test
notl
rcrb
add
adc
or
imul
gs
sbb
daa
jno
js
push
movsb
leave
and
sbb
imul
jecxz
cs
or
loopne
and
xchg
daa
dec
push
jmp
popa
mov
popf
push
mov
adc
out
add
fimuls
mov
or
out
sbb
into
mov
ficomps
fdivs
leave
rolb
arpl
mov
aam
lds
xchg
add
cmp
cs
ljmp
cmp
cmc
mov
xor
jle
rcrb
and
insl
add
fs
push
outsl
push
push
or
push
imul
inc
xchg
std
sarl
test
sub
mov
lock
out
aaa
sub
xchg
nop
and
in
sbb
cmp
hlt
or
sub
jp
cmpsb
add
sbb
mov
mov
arpl
negl
fisttps
adc
aam
push
into
dec
movsb
and
pusha
cmc
jns
jne
sarb
lahf
call
fisttpl
fwait
or
xchg
sbb
and
mov
dec
test
jg
adc
jns
fs
je
mov
outsb
mov
or
push
bound
test
pop
out
stc
adc
add
insl
push
sbb
inc
inc
js,pt
pop
sarl
insl
loopne
xorb
xor
shll
pop
jne
sbb
movb
sbb
or
mov
movsb
std
push
pop
std
imull
push
bnd
scas
in
xchg
dec
or
cmpsl
mov
mov
out
insb
sar
in
lret
push
lds
fcom
mov
fs
scas
jns
fldt
mov
mov
aas
xchg
loop
cwtl
mov
mov
xchg
dec
andl
movsl
cld
jne
notb
pusha
inc
scas
push
cwtl
pop
gs
pusha
pop
lahf
cmp
push
leave
fsubrl
fisubrs
sbb
cmp
xor
xor
subl
xor
xchg
in
mov
ds
test
lock
dec
dec
incl
popf
mov
repz
nop
lods
call
insb
xor
addl
push
shlb
aad
sbb
ljmp
mov
mov
subb
scas
xor
jge
in
xchg
mov
xchg
mov
dec
jge
in
ja
ss
jno
mov
and
sub
pop
fs
mov
jns
adc
outsb
imul
adc
aas
int
je
loop
int
testl
jg
and
xor
pusha
cltd
jecxz
jne
cmp
mov
xchg
push
lahf
mov
add
mov
out
repnz
pop
and
fbstp
les
inc
adc
bswap
jo
push
ret
sbb
sti
int3
mov
dec
and
cmpsb
add
xlat
mov
sub
loop
push
xor
mov
test
es
jns
ja
jae
enter
sbb
ljmp
pop
adc
pop
push
sub
push
ds
push
dec
push
add
push
xlat
pop
lock
jb
popf
stos
arpl
mov
out
movsb
lds
sti
js
or
fimull
out
cmp
and
xchg
adc
mov
call
andb
int3
mov
xor
popf
mov
lock
add
roll
pop
and
icebp
clc
cmp
and
lcall
push
cmp
lret
or
addl
xchg
cltd
adc
sbb
hlt
xchg
cld
int3
inc
ljmp
out
jmp
cmp
in
mov
filds
sbb
pop
iret
je
mov
mov
or
sahf
jo
mov
enter
pop
jecxz
mov
daa
xchg
in
xchg
add
mov
shrb
push
mov
push
sbb
mov
insl
adc
jecxz
adc
test
mov
xchg
roll
sbb
mov
movsb
iret
adcb
sub
xchg
add
mov
cmp
nop
fdivrl
pop
movsl
sub
lock
iret
iret
dec
dec
in
mov
insl
test
adc
xor
gs
cs
mov
sub
mov
sbb
mov
pushf
fwait
sti
sbb
aam
movsbl
shlb
lret
cmp
lds
or
arpl
bound
lea
sub
aaa
and
xchg
pop
sahf
loope
js
idivb
rcll
and
addl
incb
xchg
mov
adc
repnz
lods
in
test
ss
xlat
xchg
jns
pop
fcmovnb
pusha
jmp
mov
sub
mov
sbb
cmp
push
xchg
push
jg
out
dec
test
pop
xor
push
pop
or
and
sub
xor
inc
sbb
out
imul
jecxz
or
pop
mov
dec
cld
int3
jmp
icebp
scas
rcll
pop
mov
std
fs
jb
popa
lret
stos
xchg
jl
les
cmpsb
jp
xchg
mov
sbb
mov
insl
addl
push
loope
adc
mov
pop
dec
add
arpl
popa
js
lock
testb
inc
mov
dec
dec
imul
sub
or
and
pop
mov
scas
loope
sbb
cmp
push
xchg
dec
inc
mov
inc
inc
sbb
in
test
out
icebp
lods
aaa
test
xlat
fstps
in
sub
push
int
pminub
imul
loope
mov
ret
subl
and
mov
pop
enter
cwtl
mov
cmp
imul
sbbb
xchg
scas
test
push
fdivrs
mov
fscale
push
les
mov
adc
gs
or
mov
jo
dec
pop
leave
jbe
stos
and
cld
imul
push
pushf
shll
inc
fists
cmp
loop
dec
or
inc
push
test
xor
mov
divl
xchg
lods
enter
sbb
flds
imul
mov
or
fistpl
or
scas
mov
add
and
dec
mov
inc
push
inc
hlt
and
insl
xchg
shl
and
ficoms
mov
rol
fidivl
int
stos
adc
cmp
push
insl
inc
out
lret
jbe
inc
and
outsl
xchg
jge
test
jne
xor
jo
test
fs
xchg
or
cmp
mov
rcll
sbb
sub
sahf
dec
inc
mov
push
cmp
subb
sub
pusha
aam
push
subb
mov
jecxz
inc
cmp
addr16
or
stos
adc
mov
dec
pop
jne
mov
mov
bound
mov
mov
cld
fsubp
insl
div
xor
lock
lahf
cmp
not
cmpb
ja
pop
lcall
or
mov
gs
lret
lea
mov
das
xor
outsb
push
dec
std
adcl
dec
je
jno
lds
data16
pusha
popf
mov
xchg
push
xchg
jmp
cli
inc
fdivrl
imul
mov
rorl
adc
mov
push
add
lds
xchg
std
in
xchg
adc
mov
cmp
jnp
mov
stos
in
push
outsl
nop
sbb
movsl
sub
ja
in
rol
cmp
outsb
js
fildl
xchg
hlt
mov
adc
cmpsb
mov
mov
stos
cmp
pop
cmpsb
push
sub
mov
fwait
dec
mov
mov
mov
cli
xor
hlt
setae
xor
mov
repz
xchg
xchg
or
push
xchg
sbb
jp
xchg
pop
sbbl
test
push
jmp
dec
and
dec
and
pop
xor
sbb
and
dec
je
sub
sahf
pop
bound
jae
mov
or
pop
cld
lods
pop
neg
std
clc
lock
pop
icebp
imul
data16
ret
pusha
add
or
fs
lret
insb
xor
fnstcw
jge
ret
test
je
mov
in
jne
mov
jnp
sub
inc
push
mov
mov
jb
jo
movsb
adc
fs
pop
call
cmp
pop
out
push
orl
es
inc
mov
jo
daa
and
lcall
push
cmp
in
push
and
push
scas
sbb
pop
pop
adc
xchg
popa
pushf
imul
pop
add
fistpl
insb
push
xor
aaa
ljmp
fdiv
rcr
or
fcmovne
push
inc
in
mov
xlat
sub
mov
outsb
in
stos
repnz
sub
movsb
lea
shrb
adc
push
andb
scas
jl
xor
outsl
adc
xor
lock
xchg
cmp
jmp
sbb
out
push
iret
adc
cli
aam
pop
add
and
xor
dec
loope
sbb
test
imul
fcom
je
or
imul
sti
out
xor
lahf
push
mov
icebp
je
push
push
xchg
mov
pop
lret
arpl
movsb
mov
push
out
subb
aaa
dec
enter
sub
xchg
xchg
dec
xchg
jle
adc
lods
adc
add
mov
lods
sub
xlat
repz
xchg
ds
sub
movl
xchg
cwtl
imul
sbb
loope
xchg
in
ds
sub
mov
mov
and
inc
jb
or
in
imul
stc
xchg
mov
mov
sub
test
inc
mov
adc
dec
insb
pop
scas
mov
rclb
or
xor
test
aad
imul
call
testl
sbb
inc
dec
popf
sub
shrl
out
and
sub
repz
lret
pop
dec
movsl
jnp
repz
decl
inc
dec
sub
fldcw
decb
pop
sub
fwait
xchg
add
cmp
mov
int3
shll
xor
mov
popa
inc
lsl
mov
sbb
lock
pop
stos
sbb
mov
pop
js
ljmp
jmp
adc
jl
mov
and
jg
not
mov
sub
testl
sub
or
nop
xchg
or
stos
jns
test
cmp
cmp
pop
or
loopne
xor
cmp
xchg
push
xchg
bound
xchg
or
aad
sahf
and
push
or
adc
test
sti
sar
dec
inc
push
sub
paddsb
xchg
sbb
aaa
popa
hlt
rclb
lret
push
inc
enter
and
add
int3
mov
dec
mov
movsl
ja
ss
arpl
pop
mov
test
jmp
xor
arpl
jl
testb
scas
cwtl
out
or
add
mov
sarb
ret
jl
andnps
hlt
cs
ss
das
dec
pusha
shlb
cmp
adc
fucomp
jp
mov
mov
scas
imulb
adcb
icebp
subl
lcall
or
mov
jge
jns
xchg
pop
js
test
std
sbb
aam
lcall
xor
inc
inc
outsb
out
inc
ror
leave
push
and
push
xor
sahf
test
aad
test
addl
mov
sbb
shr
imul
sub
popf
mov
in
xchg
and
push
push
push
jne
jecxz
add
add
sub
shr
leave
out
js
mov
fisubrs
cmp
jge
dec
inc
cs
das
sub
jo
sub
adc
mov
jg
xor
add
mov
inc
sub
add
stos
xchg
dec
mov
incb
push
in
jbe
outsb
cmp
mov
pop
lret
cmpb
aad
insb
jmp
add
lds
pop
rclb
lock
enter
leave
cmpl
imul
xlat
insl
xlat
xchg
lods
out
xor
mov
xchg
out
adc
inc
arpl
push
xchg
in
popa
stos
xor
mov
xor
aaa
shrb
lret
sub
mov
cmp
in
lods
lds
cs
aas
clc
outsb
sub
iret
jb
adc
sub
cmp
dec
adc
movsb
xor
mov
adc
or
jnp
call
popa
pusha
in
mov
loop
xor
sub
and
inc
data16
sub
pusha
cmp
mov
roll
xchg
adc
mov
repz
cmc
push
sbb
test
test
test
sbb
xor
mov
arpl
insb
icebp
push
mov
sub
loopne
dec
js
movsl
shlb
out
js
aaa
xlat
adc
lods
orl
push
and
mov
mov
inc
pop
outsl
push
cmp
jne
rol
sahf
pop
push
inc
inc
stc
sti
add
xor
sub
cmp
lret
or
or
cmp
add
pop
insb
mov
popf
mov
jmp
dec
and
popaw
lret
out
or
cmc
sbb
push
into
dec
movsl
aas
or
imul
test
cli
in
mov
int3
int3
call
or
test
ja
push
cmpsb
sbb
jp
mov
jb
test
les
push
jbe
mov
mulb
fld
pop
push
cmp
lods
pop
mov
mov
or
cs
inc
scas
cmp
insb
push
or
xor
mov
into
sub
push
xchg
mov
jle
lds
dec
adc
mov
xchg
fcmovbe
or
lods
stos
repz
or
jge
mov
xchg
bound
minps
add
mov
leave
sti
shll
es
xchg
pop
shll
lods
lret
aaa
sub
mov
push
stos
jmp
scas
jnp
fwait
dec
lea
dec
push
mov
cmc
xchg
iret
add
add
popa
xchg
push
and
xchg
and
push
jo
add
fildl
popa
fsubrs
je
out
jmp
cmp
jmp
lret
out
dec
das
rcrl
jg
cmpl
cs
mov
pop
inc
data16
sub
cmp
jne
insb
mov
pop
sub
or
lea
pushl
xchg
jns
out
or
das
rclb
jno
jmp
fildl
in
addb
ficoml
mov
shr
sbb
inc
sub
mov
popf
pusha
fwait
lods
outsb
leave
mov
scas
inc
lahf
push
dec
pop
lods
rol
xchg
xor
cwtl
mov
and
cmpl
cltd
inc
jl
fidivrl
xor
ds
fs
xchg
inc
call
aas
pop
dec
jb
rcll
push
fs
les
cs
pop
enter
adc
dec
test
rclb
pop
das
or
lods
jne
mov
icebp
and
ss
lahf
xchg
cmc
sub
f2xm1
bound
pop
push
and
dec
inc
lds
jl
mov
into
shr
sub
test
rol
pushf
lret
scas
stos
xorb
dec
xor
lock
mov
lock
sbb
lock
sub
js
popa
adc
daa
push
fwait
sbb
shll
daa
xor
jae
lret
les
mov
push
lcall
dec
dec
push
stc
pop
inc
add
adc
addr16
scas
push
pushf
repz
popa
adc
cmp
lock
jo
mov
ss
jp
pop
cmp
fistl
pop
imul
jae
shrl
fsubrl
jo
notl
adc
mov
xor
cmp
cltd
lock
adc
stc
push
sbb
cmp
xchg
shlb
mov
mov
imul
aaa
jns
cs
sub
mov
test
loopne
adc
icebp
mov
frstor
mov
jbe
es
mov
dec
xor
mov
xor
ljmp
xchg
fidivrl
outsb
mov
aas
popa
dec
dec
mov
cmpsl
dec
push
mov
dec
xchg
push
mov
inc
push
ja
data16
mov
sub
es
cmp
stos
lret
ret
aad
insb
xchg
paddsb
ljmp
push
out
sub
repz
push
movsl
xor
insb
idivb
in
lds
fsubs
gs
mov
fistl
cs
movsl
test
inc
dec
and
mov
adc
xor
jns
test
jmp
rolb
in
add
or
fcoms
add
into
scas
sub
dec
mov
push
push
mov
repnz
dec
enter
dec
inc
inc
outsl
icebp
jne
pop
es
xor
sbb
xchg
xor
or
mov
push
push
scas
cmp
sahf
inc
int
mov
es
xlat
icebp
sahf
cli
icebp
xchg
test
and
out
inc
push
jp
sub
rcl
mov
cmp
jne
cltd
fdivrs
sub
lea
dec
imul
fdivrs
hlt
and
int
adc
pop
shrb
rclb
pop
jmp
subb
jmp
push
jp
mov
rolb
mov
cs
out
repz
cld
pop
add
adc
gs
jl
outsl
ss
gs
adc
test
das
in
sub
test
and
cmp
mov
popf
data16
out
fists
dec
jmp
sub
add
and
push
dec
mul
inc
icebp
gs
fcompl
add
or
or
dec
fiaddl
mov
jns
mov
jle
adc
cwtl
push
enter
sarb
enter
pop
mov
faddl
out
mov
inc
les
xor
jno
inc
dec
cmp
pop
mov
mov
fwait
je
popf
movsl
imul
mov
dec
pop
jb
js
mov
push
pop
push
mov
inc
insb
push
lea
out
dec
dec
push
fwait
mov
and
cmp
mov
test
jg
paddd
pop
jp
xchg
loopne
aaa
jae
std
push
les
push
xchg
bound
shrl
xor
adc
xchg
add
stos
aaa
out
fwait
xchg
rol
dec
jmp
fwait
pop
push
lock
mov
pop
xor
test
or
and
ja
mov
neg
out
jne
pop
mov
das
or
dec
inc
stc
pop
ret
imul
push
add
out
cwtl
mov
pop
and
fsubr
fnstcw
insb
testl
sbb
les
pop
dec
cmp
sbb
push
ja
test
cmp
stos
cmp
and
in
jae
lock
mov
adc
adc
cmpsb
mov
cmp
icebp
call
stos
add
jp
fdiv
scas
sub
shlb
mov
ss
sbbb
fisubs
imul
je
cli
sub
das
popa
addr16
cltd
jl
fsts
lret
cmpsb
sbb
cmp
insb
mov
les
imull
xor
xlat
movsb
add
pop
fs
ss
mulb
lret
in
inc
and
pop
leave
or
aas
in
sbb
adcl
jno
aad
mov
and
pop
jne
inc
loopne
ja
add
adc
popf
mov
fs
add
xchg
in
frstor
addr16
or
adc
int3
mov
adc
xchg
inc
mov
or
shlb
adc
ja
push
icebp
and
aad
cld
out
mov
mov
pop
ljmp
push
fwait
pop
stos
test
aas
jg
imul
lock
in
xor
out
xor
sar
and
adc
int
test
fsubs
fnstenv
out
dec
sbb
mov
mov
or
or
xchg
xor
mov
dec
rcll
sti
out
in
les
inc
int3
adc
fisubs
movsl
test
pop
into
add
loop
imul
insb
jp
insb
mov
movsb
push
mov
into
push
lret
jge
sbb
mov
test
lret
jnp
xor
push
scas
pop
push
pop
mov
mov
mov
test
loope
add
out
int
xchg
adc
add
xor
scas
mov
aas
iret
das
jnp
jo
leave
loope
jo
ret
xchg
adc
mov
ret
xchg
inc
out
xlat
pop
sbb
cmp
cli
sub
sub
mov
inc
test
jbe
jg
mov
imul
mov
mov
xor
pop
je
xlat
ss
and
push
sbb
outsl
repz
xor
orb
insw
repz
outsb
sub
test
xor
loopne
lret
iret
add
loopne
adc
mov
and
xchg
pop
cmp
inc
les
jnp
jmp
mov
leave
std
lds
faddl
and
adc
rcrl
insb
inc
pushf
or
adc
lret
pop
sub
mov
inc
dec
ret
xor
or
mov
sahf
lcall
and
outsb
std
test
adc
xchg
mov
mov
js
jb
int
pop
add
jg
cmp
test
mov
sub
out
jo
outsl
out
rcr
xor
popa
jl
mov
aam
ret
xor
cmp
push
pusha
daa
jecxz
cmp
mov
adc
mov
mov
dec
or
and
sbb
xlat
stc
jp
add
popa
fidivrl
jmp
inc
xchg
in
jecxz
mov
mov
push
pop
rclb
ficoml
dec
sbb
popa
mov
int3
sub
mov
outsl
push
movsl
mov
cmp
out
popa
jmp
push
jmp
inc
cmc
mov
mov
insl
pop
mull
add
mov
mov
pushf
dec
mov
mov
cmc
int
in
das
inc
inc
lock
push
add
and
out
pop
mov
add
pop
push
sub
out
xchg
jne
add
aas
lods
mov
jmp
mov
adc
sbb
test
add
jmp
movl
fcoms
popfw
js
mov
clc
outsb
enter
push
adc
lock
or
inc
xchg
inc
dec
pop
sub
pusha
scas
mov
popa
ljmp
adc
shl
adc
push
mov
or
imul
cmp
mov
sbb
call
nop
or
rcll
xor
adc
les
mov
loop
xchg
adc
bswap
hlt
cmc
push
dec
dec
out
mov
dec
cmp
pop
pop
sbb
mov
xor
push
inc
repnz
ljmp
rolb
jl
les
mov
push
daa
imul
mov
sub
dec
daa
imul
in
fnstcw
test
inc
dec
adc
dec
cmp
loop
sub
adc
cmpsl
push
inc
std
inc
jns
add
pop
ret
xchg
or
cmp
or
lds
mov
insb
and
jg
cltd
and
fcoms
je
int3
add
jne
fucom
out
mov
daa
fiaddl
stos
and
mov
inc
and
test
iret
sbb
mov
arpl
js
push
adc
repz
sub
out
stc
pop
icebp
inc
dec
xlat
pop
pusha
cmp
ss
pop
push
jb
ret
cmp
fbstp
and
cmp
ret
jo
andb
add
stos
sbb
jecxz
sub
std
insl
or
adc
cmp
cld
cmp
test
inc
loope
lahf
stos
jp
icebp
or
jg
test
les
mov
insb
push
xchg
fldcw
push
int
mov
inc
mov
mov
enter
and
and
xchg
ds
or
jp
test
hlt
mov
jns
cmpsb
leave
aam
fadds
dec
stc
sbb
cmp
arpl
mov
mov
mov
andb
lret
and
popa
jo
mov
movsl
lcall
push
mov
daa
jge
test
sub
cli
pop
push
imul
in
add
or
sahf
daa
mov
loope
cmp
xor
aaa
shlb
push
push
pop
lret
jmp
out
shl
push
jnp
sbb
scas
push
mov
ljmp
sbb
aad
stos
jo
fst
mov
ljmp
test
mull
inc
mov
mov
lock
test
lahf
mov
jp
aad
test
jno
std
dec
out
data16
popa
mov
cmp
lret
xor
mov
ss
cltd
dec
fwait
mov
notb
sub
sbbb
or
fdivl
lahf
fwait
out
xor
and
in
and
jge
adc
inc
les
mov
mov
pop
scas
mov
ror
mov
jl
leave
push
out
jmp
push
cld
jns
std
popf
cmp
fists
sbb
jnp
imul
pop
cmc
mov
dec
jle
aam
mov
movsl
popa
cmpl
fidivrl
cmp
ja
sbb
pushf
jge
ds
or
pusha
xchg
mov
cmpsb
push
sub
mov
in
repnz
out
push
xchg
or
loopne
and
inc
sub
and
rcrb
jnp
add
sbb
scas
add
fistpll
cmc
xchg
rorb
ficoml
push
vandps
iret
or
pop
shll
fsqrt
mov
mov
mov
mov
lea
shlb
lahf
mov
pop
lock
mov
xchg
xor
aas
pusha
fnstsw
test
test
jns
jns
pop
inc
or
lcall
in
sbb
ja
xchg
pop
sbb
inc
push
mov
sarl
jo
push
mov
les
sub
data16
movsb
js
leave
fnstcw
clc
jle
imul
dec
cld
xor
or
dec
fdivrl
shlb
fwait
icebp
mov
aad
xor
mov
inc
icebp
add
lret
mov
sub
inc
adc
into
leave
pop
lret
fsubs
in
push
mov
lea
adc
ror
lods
xchg
and
mov
arpl
adc
add
jb
movsl
cmpsl
fiaddl
cs
lods
fidivl
and
fistps
ffree
in
cs
pop
sbb
xchg
pop
bound
pop
dec
jmp
int
xor
xor
push
fdivs
jns
loop
movsb
sub
or
ret
push
into
cli
daa
and
or
movsl
in
dec
inc
scas
push
stos
daa
lock
bound
ds
xchg
stos
clc
inc
in
mov
xor
insl
jg
mov
mov
test
dec
mov
leave
sbb
repz
and
sbb
sub
fildll
push
mov
scas
jno
cmp
rclb
lahf
cmpsb
xor
mov
ds
rclb
lahf
xchg
test
jge
dec
jnp
js
push
jno
jge
jmp
scas
mov
add
lret
mov
dec
adc
sbb
mov
inc
mulb
pop
push
add
dec
fisttpll
push
mov
xchg
in
inc
out
mov
or
xor
lret
mov
jp
or
fisubrs
mov
ljmp
clc
fnstsw
mov
mov
or
ret
shl
aam
jl
dec
mov
loope
mov
sub
xchg
nop
in
or
jo
lret
mov
dec
je
cmp
jle
or
imul
mov
stos
pop
pop
push
add
sub
add
jno
outsl
push
fwait
hlt
clc
dec
lock
inc
xchg
aaa
stos
scas
mov
dec
sub
add
mov
imul
lret
sbb
dec
iret
mov
mov
inc
pop
xchg
add
shlb
push
lret
lock
mov
hlt
push
pop
in
fldenv
push
cli
or
aas
imul
imul
push
mov
loopne
mov
movl
aad
xchg
das
or
pop
push
das
sbb
dec
jns
and
je
push
push
scas
sub
outsb
into
mov
cmp
bound
dec
data16
push
sub
pushf
les
adc
loop
dec
cwtl
cmp
cltd
icebp
es
lret
int3
mov
fidivrs
iret
fsubrs
pop
les
popa
push
xor
cltd
insb
jae
add
hlt
imul
movsl
shll
lcall
lods
xchg
mov
push
stos
cli
cmp
out
dec
mov
rorl
mov
hlt
in
push
pop
mov
push
addl
jbe
js
xchg
aam
sub
aad
mov
lret
mov
call
into
cmp
jmp
negl
pushf
adc
push
inc
bound
int
lea
ss
mov
scas
pop
rcll
dec
loope
or
test
cmp
sbb
sub
aam
out
xor
dec
sbb
subl
int3
int
mov
adc
xor
in
inc
and
inc
sub
out
cwtl
imul
cltd
sub
push
fldenv
mov
add
jg
test
out
fnstsw
dec
int3
mov
and
cld
popa
dec
xchg
mov
testb
and
aas
movsl
xchg
dec
popa
leave
scas
stc
push
mov
adcb
jge
lahf
js
or
popa
ss
pop
and
rcll
and
inc
mov
pop
shlb
dec
test
mov
iret
fwait
dec
test
jns
std
lods
push
cmpsb
push
cmp
mov
fisttpll
popa
xchg
stc
xor
test
jno
xchg
push
cld
fistl
addr16
fnop
incl
dec
ljmp
lret
filds
lret
mov
push
int
add
mov
xor
repz
icebp
xchg
adc
leave
adc
inc
sbb
lcall
adc
jle
mov
decl
xchg
repnz
fldt
arpl
in
mov
loop
push
fcmove
es
push
push
inc
ja
xchg
mov
aad
push
dec
cmp
nop
jmp
cmp
xchg
xor
inc
push
fs
or
sbb
dec
adc
les
sub
push
mov
nop
sbb
mov
in
jmp
cmp
inc
decb
arpl
xor
cmp
inc
add
ret
dec
hlt
xchg
into
jno
push
mov
mov
cmp
mov
js
mov
out
sbb
adc
mov
movb
and
add
add
cmc
adcb
movsl
mov
xchg
aam
inc
jle
xchg
negl
inc
add
jnp
cmp
sub
cmp
in
mov
xor
nop
sbb
lock
mov
rcl
push
pop
and
cmpsb
cli
push
xlat
jg
xchg
test
jle
cmp
clc
and
push
push
mov
push
dec
mov
mov
push
inc
mov
mov
add
sbb
lret
fldl
orb
adc
pop
push
sahf
insb
stos
clc
mov
and
dec
dec
aam
repz
ret
pushfw
cmp
movsb
mov
addr16
imul
jno
inc
pusha
xchg
inc
dec
imul
push
mov
pop
push
imul
insl
mov
sbb
xor
pusha
inc
dec
arpl
stos
daa
sub
inc
mov
xor
pop
xchg
cmc
add
int3
push
push
xchg
pop
or
pop
decl
call
or
jle
add
xor
cmp
js
adc
xchg
ret
mov
push
clc
sub
shl
shll
lahf
mov
pop
or
adc
pushf
lds
add
test
xchg
dec
aas
adc
mov
mov
fcoms
cltd
jg
andl
lret
jb
xor
addr16
ja
and
adc
mov
inc
mov
inc
push
jne
sub
mov
lods
dec
scas
add
outsb
sub
lret
and
arpl
inc
test
in
xchg
and
and
dec
mov
inc
daa
mov
xchg
sub
js
pop
push
sub
mov
imul
mov
sbb
lock
out
push
das
pop
out
mov
rcrb
popa
and
dec
inc
xchg
adc
jg
inc
sub
pop
mov
push
xor
pop
dec
fisttpl
xorb
cmp
or
mov
add
nop
cmpsb
and
rcrb
mov
sub
cwtl
loop
subb
push
adc
xchg
in
outsb
lea
outsb
rcl
imul
pop
sbb
mov
sbb
dec
out
andl
ljmp
repnz
mov
xor
cmp
and
pop
adc
call
decb
push
add
cmpb
insl
push
and
fbld
out
push
mov
leave
mov
insb
push
notb
push
xchg
xlat
xchg
loopne
pop
sub
inc
aaa
orb
fidivl
nop
lcall
mov
adc
cltd
sbb
fnstcw
je
arpl
in
xchg
adc
daa
jbe
divb
ror
stos
imul
and
stos
insb
bts
in
into
mov
movsb
xor
mov
out
aas
sub
adc
mov
js
xchg
and
add
lea
adc
push
push
sub
cmp
push
jmp
add
add
pop
movsb
cmp
jg
pop
loopne
sbb
out
mov
mov
dec
mov
add
aas
rorb
test
mov
nop
shll
sub
scas
lahf
rclb
lods
and
scas
shl
mov
mov
inc
push
popf
adc
mov
adc
iret
in
xor
pop
popa
sub
fistl
into
sbb
jg
frstor
pop
inc
ljmp
xor
cwtl
add
repz
cmp
daa
insb
dec
push
adc
sti
mov
add
lea
ljmpw
rorb
loop
hlt
sub
das
fisttps
test
xchg
sbb
insl
js
or
jmp
outsl
enter
mov
or
mov
das
dec
repnz
cmp
mov
jb
xchg
arpl
mov
shl
mov
mov
push
mov
js
dec
bound
sbb
fwait
mov
sti
jl
jge
mov
iret
push
stos
setp
jecxz
xchg
jno
inc
mov
mov
out
cmp
cmp
xchg
mov
push
pop
cmp
sub
in
fnsave
lea
inc
jo
negl
pop
pop
imull
jmp
pop
ret
adc
call
lds
aad
xchg
fiaddl
xchg
les
fwait
das
jnp
es
xchg
cmp
gs
mov
shlb
add
xchg
xchg
dec
sub
fldt
mov
xchg
pop
stc
jge
outsb
dec
lds
jo
push
push
pop
pop
addr16
mov
scas
rcrb
jbe
cli
lahf
rcll
pop
cwtl
and
push
inc
cmp
and
cmpl
inc
mov
jg
push
ljmp
imulb
inc
les
pop
outsl
ja
xor
or
dec
mov
notb
jae
call
popf
cmc
mov
jmp
xchg
fs
sub
lret
icebp
cmp
leave
cmp
pushf
fstpt
inc
jle
mov
aad
stc
outsl
pusha
push
movsl
test
loope
in
aaa
jecxz
fs
sti
xchg
push
inc
test
pop
fwait
int3
pop
mov
js
sbb
inc
dec
test
mov
insl
mov
sbb
pop
xchg
or
lahf
mov
inc
sub
jno
xor
mov
push
mov
sub
mov
jb
lcall
xchg
pop
cmp
mov
pop
mov
dec
pop
add
mov
repz
push
arpl
icebp
and
out
cmp
cs
xchg
fidivl
and
mov
gs
cmpb
lret
cmp
mov
sub
pop
add
nop
mov
xor
sub
ljmp
inc
mov
dec
out
mov
jne
leave
stos
js
cmp
jne
xchg
dec
mov
sbb
popa
xor
pop
jnp
scas
cmpsb
pop
loope
push
outsl
xchg
bound
ret
iret
dec
fwait
adc
shlb
mov
inc
fadds
aas
in
pop
ja
and
sub
sub
subb
popf
push
out
xor
imul
pop
adcb
or
cmp
add
aam
jmp
sub
or
sbb
pop
fisubl
or
iret
inc
mov
mov
scas
nop
mov
aam
mov
mov
iret
mov
inc
sub
sbb
les
ss
leave
sahf
xchg
loop
xor
and
int3
lock
or
push
fistps
call
cmc
adc
push
pop
xlat
push
add
cmp
push
pop
xchg
mov
jb
mov
test
mov
mov
cs
xchg
les
hlt
fldl
sbb
or
jbe
and
or
es
stos
cmp
mov
lods
cmpsl
sbb
test
push
xchg
xchg
stos
lods
loopne
in
mov
jge
aad
jb
ja
ret
mov
loope
adc
jl
sub
es
shll
mov
fcomi
call
mov
sbb
insb
das
cmp
jle
adc
pop
pop
out
push
out
push
pop
addl
xchg
in
aad
xchg
daa
filds
imul
dec
aaa
sub
js
cmp
mov
daa
push
jne
mov
fcoml
dec
movsl
push
scas
outsl
jle
lret
rcl
filds
cld
pop
adc
sar
outsb
stc
xor
inc
leave
movsb
testb
icebp
jbe
cmp
loop
xchg
dec
int3
push
or
pushf
jmp
fimull
cmpsb
int3
mov
cli
sub
mov
das
and
mov
enter
lahf
shlb
je
lods
push
lds
outsb
push
lret
cltd
and
mov
xchg
pop
adc
mov
add
js
mov
lea
or
mov
inc
mov
cltd
jecxz
scas
out
xchg
jg
push
pop
xchg
test
push
in
sbb
add
mov
leave
jge
inc
pop
stos
jb
loopne
outsl
sahf
mov
loope
xchg
mov
push
push
nop
push
inc
nopl
cmpsb
js
insb
pushl
mov
mov
jae
shll
dec
addr16
dec
mov
pop
pop
out
jo
inc
fiadds
pop
icebp
lret
dec
rol
mov
mov
arpl
add
pop
mov
push
jo
inc
test
movsl
push
stc
and
jb
aam
in
sub
mov
fistpll
mov
add
inc
sub
aas
jne
and
sbb
pop
cmpsl
push
jle
add
xchg
mov
mov
mov
lods
fs
fscale
mov
das
add
leave
and
inc
and
dec
xchg
jp
push
in
adc
sub
jg
test
xchg
xlat
fiadds
test
aaa
cld
mov
shr
lock
dec
fildl
cld
iret
cs
dec
fiaddl
mov
pop
mov
push
mov
movsb
sbb
leave
ss
xchg
into
cmpsl
push
jecxz
jle
clc
cmp
mov
push
adc
mov
xor
sarb
sbbb
pop
jnp
je
ljmp
call
pop
adc
fwait
mov
out
sbb
inc
xchg
call
pushl
dec
ja
fwait
mov
mov
jge
sahf
sbb
mov
addl
pop
test
les
sbb
push
add
sub
pop
enter
jecxz
in
cmp
push
dec
mov
fidivrs
push
repnz
nop
rorl
and
sbb
xchg
push
lds
push
mov
mov
cmpsl
mov
cmpsb
mov
stos
mov
nop
loopne
es
out
ja
cld
mov
sub
cmp
inc
data16
lea
jp
mov
dec
pop
push
cwtl
aas
mov
mov
mov
dec
or
dec
scas
xor
mov
popa
xor
pop
dec
or
xchg
or
stos
cmp
mov
scas
subl
jg
or
jmp
dec
fstl
enter
mov
mov
mov
cmp
in
add
sbb
jo
dec
push
adc
ja
mov
sbb
ret
jp
fistps
adc
add
into
and
mov
push
into
mov
mov
xorl
adc
mov
in
inc
mov
addb
aam
icebp
mov
push
shlb
xor
fisubs
lods
call
cmpsb
pusha
inc
add
pop
adc
daa
fadds
out
cmp
push
fcoms
pop
in
sbb
out
add
dec
out
xchg
fs
into
in
pop
adc
les
cmp
outsl
aad
cmp
inc
and
std
mov
mov
inc
addb
ret
out
repz
inc
into
mov
stc
ret
push
mov
push
add
or
or
xchg
outsb
jmp
out
shll
xchg
jae
xchg
int3
test
in
jns
mov
sbb
xor
out
xchg
mov
cli
inc
lods
xor
out
mov
inc
pop
insl
pop
lahf
inc
subb
xor
adc
pop
mov
pop
or
jne
jl
outsb
sub
roll
mov
or
push
add
and
xchg
int
mull
scas
xor
mov
adc
mov
rcrb
push
xor
mov
push
cmp
inc
orl
cmp
test
lea
negl
notl
inc
shlb
rcrb
fdivl
inc
jp
dec
je
andb
jnp
push
jl
mov
fs
fdivs
fidivl
pop
loopne
fidivrs
das
cmp
scas
out
mov
xor
inc
negb
xchg
dec
aaa
jno
test
xchg
sub
xchg
pop
sbb
pop
or
and
mov
rcr
sbb
sub
push
and
push
outsl
jl
js
fcomps
loope
clc
xchg
push
xchg
stos
mov
mov
aad
xchg
shr
xchg
out
adc
pushf
shlb
dec
add
outsb
jge
pop
jge
repnz
call
or
mov
lret
jbe
fldt
mov
adc
enter
and
jnp
pop
jns
cmp
inc
jns
mov
push
and
cmpsb
movsl
lods
adc
xorb
inc
inc
testl
dec
sub
add
add
jecxz
pop
mov
mov
arpl
mov
mov
sti
in
jae
imulb
enter
and
add
leave
dec
and
xor
in
outsb
jo
fstp
test
int
cmp
mov
fsubrl
repz
add
xchg
das
inc
mov
xor
push
inc
lock
mov
insb
add
xchg
adcl
jle
jne
movsb
ret
outsb
mov
xchg
call
inc
mov
mov
fsubrl
repnz
fsubl
iret
xor
dec
sahf
adc
cmp
mov
fs
mov
and
adc
movsb
test
adc
ljmp
adc
or
cltd
out
pop
repnz
outsl
insl
or
loopne
push
int3
inc
daa
rcrl
or
stc
xor
push
adc
sbb
fcmovnbe
dec
sbb
pop
mov
and
pop
cwtl
enter
xchg
jle
mov
pushf
repnz
push
pushf
sbb
scas
xchg
xor
dec
push
mov
lock
je
lcall
outsl
lret
jbe
fnstcw
pop
out
insl
sub
pushf
adc
jb
xchg
cmp
clc
cmp
insb
jns
addb
sbb
pushf
inc
jle
sahf
xchg
fcomi
mov
daa
dec
sti
rcrb
pop
ljmp
or
pusha
stc
sarl
pop
add
mov
andl
int
add
test
out
sbb
aaa
test
std
pop
f2xm1
adc
cmp
sub
xchg
inc
fsubr
iret
push
lods
inc
fisubl
xchg
mov
aas
out
scas
lea
mov
or
gs
inc
sti
mov
lods
adc
mov
cmp
mov
nop
je
and
lods
jnp
movsl
mov
es
enter
frstor
xor
in
cmp
dec
sub
xchg
sbbb
and
sub
adc
stos
adc
outsb
add
in
iret
pop
cli
push
icebp
mov
or
adc
into
xchg
aas
outsb
push
jbe
test
and
sarb
pop
xor
or
das
cmp
sub
pusha
rorb
jae
lahf
jl
clc
cltd
xchg
adc
stos
cmpl
pop
and
mov
cli
ficoml
pop
paddb
and
shrb
addr16
push
arpl
mov
adc
jge
mov
or
add
mov
fistpl
and
out
clc
xor
lods
sahf
sub
je
push
adc
add
inc
mov
addr16
int
mov
fcoml
out
ss
xchg
pop
xchg
fsubrs
lahf
rcr
es
lret
fisubl
aam
cmp
mov
enter
shll
pop
xchg
fsubrs
cmpsl
lock
sbb
repz
push
pop
mov
mov
inc
push
notb
jo
lods
or
fwait
pop
dec
stos
sti
mov
fcmovnbe
in
push
mov
das
pop
arpl
xorl
cmp
xor
cld
jno
data16
sub
sbb
or
xor
pop
xchg
sub
lret
jmp
cli
cmp
iret
adc
popf
sub
scas
div
cmp
push
out
mov
ljmp
jecxz
in
mov
mull
fs
lret
daa
mov
loope
cmp
aam
mov
pop
jb
or
mov
adc
fsubrp
js
jb
popf
jne
mov
hlt
jmp
popf
icebp
xchg
fwait
xchg
or
loope
sbb
mov
out
mov
adcb
adc
add
jbe
jne
jae
adc
test
inc
inc
hlt
or
xor
jp
sub
inc
leave
imul
mov
imul
repnz
in
mov
inc
mov
iret
fwait
add
mov
repnz
sbb
mov
and
or
hlt
jnp
arpl
test
fildll
ss
xor
bound
cltd
add
in
stc
out
jns
insb
negb
popa
cli
mov
aaa
add
dec
ja
xchg
nop
xchg
in
mov
push
add
loopne
dec
cwtl
dec
adcb
in
jp
prefetchw
push
cmpsl
js
mov
shr
repz
ja
cmpsl
mov
out
gs
push
fsubs
pop
lock
cs
adc
sub
sbb
mov
sbb
cltd
add
or
push
push
and
push
inc
dec
fadds
xorl
mov
push
ds
subb
xchg
subb
lock
ss
sbb
repz
stos
popa
cmp
les
pop
cld
sbb
stos
mov
sub
outsl
pop
pop
inc
ss
xchg
dec
aas
js
sub
aad
mov
sahf
jp
and
push
inc
mov
cmp
inc
fmuls
mov
ficompl
mov
xchg
data16
fisubl
addr16
incb
hlt
icebp
inc
dec
jne
nop
mov
and
popa
sub
xor
mov
or
xor
pop
adc
les
test
pop
movsb
sub
arpl
pusha
or
dec
push
popf
idiv
bnd
and
mov
jb
popa
mov
ret
outsb
mov
and
dec
xor
inc
and
mov
nop
rcrb
adc
imul
out
out
cmpsb
aas
mov
cmp
pop
sbb
inc
fstpt
mov
pop
mov
dec
jo
in
and
mov
mov
xlat
addl
inc
jnp
mov
dec
mov
dec
jl
cmp
enter
dec
leave
xchg
sti
out
shll
jle
mov
gs
iret
push
push
push
jmp
adc
sti
lret
dec
dec
sbb
add
and
jp
push
sbb
pop
add
ljmp
pop
or
pop
arpl
mov
imul
mov
xchg
and
hlt
jns
gs
adc
xchg
lahf
mov
jg
lahf
sub
shll
call
jge
ds
mov
mov
lods
dec
xlat
sub
dec
add
ljmp
arpl
negb
imul
jmp
sbbl
and
xor
sbb
xor
sub
jo
xchg
fadds
loop
pushf
sbb
add
sub
cmp
ljmp
mulb
or
pop
mov
sarl
sahf
in
aad
mov
or
push
adc
ljmp
in
adc
jb
inc
scas
cmp
sbb
loop
dec
dec
jge
shl
insl
cwtl
das
cmpl
push
mov
lahf
cltd
jecxz
push
out
insl
notl
inc
mov
and
cmp
aaa
dec
scas
inc
cmpsl
add
pop
xchg
imull
sub
xlat
enter
outsl
add
jae
mov
inc
popa
not
scas
mov
mov
imul
lds
fmulp
xchg
cltd
pop
cmp
mov
xchg
adc
and
inc
add
insl
dec
test
jo
xlat
js
xchg
movsb
test
inc
and
sbb
cmp
imul
push
sub
dec
inc
mov
adc
dec
pop
jle
inc
insb
adc
test
mov
xor
push
out
cmpsl
aam
loop
test
inc
popl
jg
push
call
jp
cld
pushf
jle
aad
enter
xor
lods
cmp
lock
mov
inc
adc
add
loopne
jge
inc
mov
mov
idivb
mov
jle
mull
scas
or
out
push
aaa
ja
decb
jecxz
arpl
cmp
sbb
mov
fnstsw
imul
xor
jge
test
stc
xor
pop
inc
mov
lds
imul
pop
sbb
sahf
or
mov
lret
jmp
mov
cmp
in
repnz
xlat
inc
push
lahf
xor
sbb
test
in
xchg
pop
rcll
insl
insb
insl
push
push
repnz
pushf
sub
mov
test
aam
or
jle
popf
mov
sub
jae
mov
mov
call
int3
enter
leave
push
je
jmp
nop
fnstsw
xor
ss
adc
in
outsb
mov
and
xchg
and
andb
inc
add
lock
jl
cmpsb
and
pop
lret
inc
add
loop
pop
int3
cmc
and
out
push
dec
aam
xor
cmp
inc
push
push
iret
repnz
fwait
ret
add
enter
adc
das
into
fnsave
mov
pop
jmp
sbb
mov
sbb
cwtl
imulb
mull
dec
popa
fimuls
cmc
pop
add
inc
incb
sbb
shll
pop
mov
adc
jle
mov
sub
jle
mov
sahf
sbb
mov
leave
ffreep
dec
repz
jb
cmpsl
mov
das
inc
adcb
pop
jns
dec
ret
pop
push
cmp
push
js
mov
xchg
test
sti
fstpl
push
pop
aas
xchg
push
rcr
int
pusha
mov
int3
je
adc
and
bound
xor
addl
data16
pop
lcall
mov
xlat
jle
xor
push
lods
repz
or
outsb
mov
inc
jbe
adc
movsb
loop
push
jae
sti
cmp
add
out
out
inc
pop
mov
cmc
movsb
push
out
repnz
xor
test
pop
push
or
orl
roll
push
fs
jg
idivb
movb
fwait
jmp
cmp
adc
movsb
repz
push
dec
adc
pop
inc
mov
sbb
add
test
xor
fsub
mov
repnz
sbb
push
je
ds
stos
push
aam
inc
data16
jo
stos
xlat
dec
xchg
aaa
xor
movsl
test
or
jecxz
mov
mov
sub
push
jne
fisubl
popf
dec
je
push
pusha
adc
push
hlt
pop
loope
push
mov
test
push
adc
push
or
push
add
xchg
ljmp
ret
pop
xchg
aad
jb
sub
or
fsubs
fstp
dec
repz
jle
add
sahf
out
sahf
mov
pop
pop
add
roll
inc
dec
xor
test
mov
xchg
int3
movsb
sahf
addr16
mov
push
cmpsb
xor
shrl
inc
sbb
cld
or
and
xor
ret
pop
or
mov
movsb
lock
dec
xchg
outsl
lcall
daa
inc
or
imul
push
fcmovu
dec
jne
dec
sub
sub
add
fs
mov
jns
or
mov
sbb
lcall
int
outsb
or
movl
and
aad
inc
call
inc
jb
in
xchg
jmp
or
pushf
pop
dec
sbb
inc
shlb
fidivrs
ret
pop
les
jmp
sbb
subl
movsl
push
std
inc
inc
xchg
leave
sbb
or
je
es
adc
mov
inc
pop
mov
lock
or
loopne
lahf
xor
and
inc
jns
and
pushf
jo
jnp
lcall
imul
dec
ljmp
in
adc
jo
ds
js
dec
jnp
push
into
les
stos
inc
push
imul
add
int
cmp
mov
adc
in
loop
adc
int3
sbb
inc
lcall
cmp
cmp
push
mov
cmpb
sbb
jb
rolb
outsb
int3
popa
movsl
ret
lcall
push
leave
add
sahf
xchg
call
lsl
add
push
pop
aam
loope
mov
mov
or
xor
hlt
movsl
push
orl
or
fidivrl
mov
jae
sub
in
nop
enter
in
inc
iret
sti
lcall
lock
sti
sub
mov
out
lret
daa
sbb
mov
cs
or
mov
stc
push
pusha
push
imul
cmp
fadds
stos
cs
xlat
push
adc
icebp
outsl
loop
jmp
mov
sub
sub
inc
sbb
xchg
out
addr16
hlt
inc
rcrb
cwtl
sbb
push
jmp
stc
or
in
push
nop
sub
insl
sub
fucomip
sub
or
loopne
fwait
out
out
test
aas
pop
ja
daa
mov
call
scas
or
aam
dec
ror
cmp
fwait
scas
cwtl
out
int3
fstl
outsb
mov
add
jle
pop
and
test
cwtl
std
insl
jo
out
test
push
test
popa
lock
iret
pop
push
dec
sbb
adc
jno
dec
or
pop
movsw
arpl
sub
jge
push
adcl
xor
or
or
sub
pop
push
popa
idivb
push
mov
inc
icebp
mov
mov
pusha
pop
adc
mov
sti
or
js
ja
ficoms
inc
sbb
lret
jb
lods
and
cld
imull
xor
inc
lahf
push
pop
cmp
subb
gs
test
iret
cmp
mov
inc
push
mov
mov
mov
sbb
mov
stc
aad
data16
mov
adc
or
out
and
add
jae
xor
mov
subb
mov
xchg
int3
rorb
fs
mov
mov
cwtl
sub
push
mov
push
mov
cmp
or
jle
dec
push
imul
outsb
and
push
loope
pop
sbb
sbb
bound
mov
cmp
mov
inc
push
sub
out
add
mov
push
imulb
sub
or
addl
imul
jmp
sub
repnz
popa
lods
mov
jns
je
fistl
hlt
xchg
mov
push
add
ret
cmp
xlat
mov
jp
jle
jle
movq
sbb
fcompl
addb
lock
sbb
loopne
cmpsl
les
sub
ss
mov
mov
pop
cmpsb
mov
scas
mov
sbb
lret
jg
mov
mov
jae
add
mov
dec
mov
fst
sar
sub
push
jmp
loop
dec
sbb
sbb
push
push
mov
imul
notb
dec
jg
test
push
pusha
mov
decl
jno
gs
cmp
aaa
jecxz
sbb
mov
daa
jo
xchg
jbe
inc
sbb
adc
xor
jnp
pop
fcompl
dec
xchg
sub
mov
mov
mov
cmpsb
mov
adc
fs
xor
lret
fldl
xor
mov
rorb
cmp
adc
data16
test
jl
jmp
or
movsb
clc
aas
loop
jno
fstpl
mov
ret
or
pop
rcll
push
insl
fstpl
mov
mov
add
jmp
adc
pop
ficoml
push
or
das
fists
and
test
aaa
out
aas
push
sub
call
inc
inc
inc
xchg
mov
popf
int
push
xor
mov
pop
xchg
or
mov
mov
inc
sbb
sbb
mov
pop
and
aad
mov
push
jmp
lret
sbb
dec
out
push
xor
push
int3
push
pop
and
xchg
cmp
fldenv
jl
fwait
int
inc
subl
push
mov
push
call
shrl
mov
lods
test
pushf
imul
out
insl
lret
add
xchg
in
xor
add
insl
mov
data16
fnsave
loop
or
inc
mov
shll
push
mov
or
pop
in
movsb
cwtl
jg
fisubrs
in
les
sahf
dec
sub
dec
pop
pop
and
cli
push
mov
pop
xchg
xor
loopne
adc
lret
lcall
hlt
xlat
cli
daa
dec
dec
mov
cli
imul
leave
adc
aam
cmp
pop
cmp
xchg
loope
xor
cmpsb
push
add
sti
insl
movsl
imul
jae
insb
repnz
test
jmp
sbb
sub
loopne
or
push
xor
or
push
lock
les
xor
in
push
lods
in
sub
bound
lahf
cmpsl
and
lods
nop
arpl
negl
push
mov
pop
pop
mov
adc
xchg
inc
jae
sbb
das
andl
lea
pop
mov
ret
jbe
scas
jno
popf
jp
push
or
insb
jb
jecxz
mov
push
pop
adc
or
and
fcomps
inc
nop
addl
adc
pop
cmc
xchg
rcl
mov
repnz
int3
cmp
pushf
mov
push
ss
fwait
pop
vfmsub213ps
xlat
es
jbe
insl
or
ljmp
shlb
andl
mov
roll
jecxz
fwait
and
push
mov
pop
hlt
jns
jg
ret
lea
mov
cmp
mov
into
and
movsb
iret
pop
inc
aam
test
push
mov
jns
fdivp
stos
int3
repnz
fwait
fwait
sbb
out
test
test
jecxz
jbe
sbb
and
das
xchg
pop
lret
movsl
xchg
stos
mov
sbb
xchg
nop
pop
ret
dec
mov
flds
negl
jne
loopne
sti
push
sbb
fsts
je
xor
repz
aas
arpl
sarl
in
xchg
aaa
enter
out
xchg
std
or
xchg
test
fidivrl
mov
dec
stos
add
pop
repz
fists
movsl
sbb
sub
movsl
xor
mov
cmpb
add
aad
fisttpl
scas
cmpsb
mov
inc
adc
mov
pop
xchg
push
xchg
add
fsubrs
imul
inc
imul
fstpl
int
andl
dec
out
bswap
jle
and
jg
decl
sbb
out
jo
pop
or
push
arpl
cmp
insl
mov
pop
adc
jp
dec
sahf
inc
imul
xchg
mov
push
dec
fidivs
dec
sbb
jnp
lahf
stos
nop
movsb
sti
fwait
cs
cltd
xchg
mov
pop
or
cmp
jno
mov
repz
inc
and
and
xchg
and
jp
mov
cltd
sbb
pop
imul
in
inc
add
repnz
xor
stc
pop
cmpsl
mov
aaa
fwait
into
outsl
mov
js
in
dec
fdivrl
xchg
xlat
fists
jmp
cmp
and
push
add
push
jbe
std
call
cmpsl
inc
popf
sbbb
subb
pop
dec
imul
ret
shrl
xor
repnz
adc
subl
orb
jbe
out
adc
lahf
mov
nop
or
sti
pop
adc
movsb
je
shlb
out
inc
mov
mov
bound
xor
lcall
lret
insb
cli
xor
ret
adc
xchg
jae
out
outsb
mov
pop
mov
xchg
test
js
mov
mov
clc
pushf
test
pop
cmp
inc
ficoms
inc
sbb
fnstsw
cli
push
in
or
cmp
icebp
mov
cmpsb
dec
pushl
mov
negl
notl
push
gs
fmul
or
cmp
aam
dec
lods
ja
xor
outsb
mov
enter
mov
mov
imul
push
pop
inc
mov
dec
addr16
lcall
push
or
lods
and
or
jo
sub
cmc
xor
or
and
adc
aad
jae
or
xchg
jne
fcmovbe
push
fisubs
or
push
ret
cmp
andb
test
xor
mov
div
inc
adc
inc
pop
or
fwait
std
mov
xchg
mov
pop
lods
adc
fs
jae
aaa
mov
mov
nop
idivb
into
push
mov
addr16
test
sti
mov
stos
imul
lret
negl
int3
test
stc
in
or
adc
push
and
je
cli
daa
cmp
and
adc
jl
fstpl
sbb
lahf
mov
fwait
xor
rorb
jbe
jge
aas
fisubrs
mov
in
jb
sub
in
andb
mov
adc
rcl
out
cmp
mov
or
add
push
dec
and
fisubs
lcall
loope
ret
out
or
mov
xor
dec
xor
jecxz
daa
push
test
iret
xchg
jge
lock
jno
mov
das
cmp
pop
pop
dec
clc
fcom
push
dec
pop
in
pop
das
js
xchg
movsl
test
lret
add
pop
or
mov
pop
jl
or
into
jmp
lcall
push
cltd
pusha
xorb
in
jae
ficoml
ss
negb
xor
or
repnz
dec
enter
aad
mov
pusha
movsb
sahf
inc
sbb
mov
mov
pop
jg
add
xor
data16
add
and
pusha
daa
rol
loope
pop
push
inc
cmpsb
and
imul
enter
and
sub
in
scas
mov
movsl
inc
and
mov
or
xlat
outsl
ret
lods
and
lret
sbb
movsl
dec
xchg
in
lds
sub
mov
adc
sbb
dec
xor
jl
jns
fisttps
mov
mov
popa
mov
push
sbb
or
xor
aad
mov
and
iret
jo
pop
imul
and
jne
inc
fs
ljmp
cmp
sbbl
fldenv
cmpl
fs
loope
inc
jle
mov
daa
ret
out
cld
pop
adc
xor
push
gs
inc
mov
outsb
or
cmp
mov
das
mov
sarb
jne
push
mov
inc
sbb
in
rolb
dec
xchg
xchg
sub
cwtl
in
mov
xor
pop
bound
test
nop
sahf
fsubrp
inc
and
sahf
stc
add
out
rcrb
into
mov
arpl
insb
fdivr
cmc
andl
pushf
ret
sub
sub
mov
cmpsb
les
cs
or
mov
setne
into
add
mov
pop
mov
fcomps
sub
ljmp
dec
xchg
push
jnp
mov
pop
repnz
sbb
pop
cmp
dec
inc
lcall
repnz
test
insl
int3
insb
mov
jl
xchg
cli
repz
lock
lods
loopne
movb
pop
adc
in
xor
push
fistl
jp
bound
jnp
xor
add
adc
inc
pop
mov
jnp
data16
testb
mov
mov
sarl
adc
push
ja
rol
movsb
inc
jmp
out
xor
mov
push
out
pop
push
aas
mov
lock
or
xor
roll
movsl
fisubrs
std
adc
mov
in
dec
sub
sub
icebp
mov
add
aad
mov
mov
mov
mov
mov
mov
insl
mov
js
xor
sub
ljmp
call
sub
sbb
das
xorb
xlat
fnsave
sbb
sub
test
jo
fcoms
cwtl
inc
push
push
aad
pop
xlat
dec
je
and
push
mov
stc
cwtl
lret
xchg
push
mov
mov
pcmpgtd
mov
int3
xor
sbb
add
jl
jmp
dec
pushf
pop
xorb
fcmove
jle
int
enter
in
push
adc
push
push
or
rorb
movsl
adc
dec
inc
and
shlb
movsb
bound
mov
imul
lods
je
outsl
sub
popa
jle
dec
outsb
stc
fstl
shll
cmp
cltd
push
xor
and
push
cmpsb
daa
fmuls
mov
aas
jb
inc
inc
pop
aaa
ret
shll
nop
orb
xor
sahf
push
and
dec
lock
xchg
xchg
cltd
clc
popa
data16
fidivs
ret
push
insl
jb
adc
stos
push
add
sub
jle
push
xor
mov
popa
mov
mov
mov
mov
fcoml
iret
lret
mov
rclb
jmp
add
pop
in
ficoms
or
xor
lret
push
filds
or
inc
push
out
loopne
mov
mov
aad
rcrl
mov
cmp
pushf
mov
jmp
and
das
cmp
pop
fs
shlb
mov
loope,pn
jg
or
mov
fwait
mov
aam
test
cmc
enter
jns
pop
fs
adc
xor
push
dec
jle
ret
test
scas
cmc
mov
roll
mov
aam
lock
inc
adc
mov
out
sbb
xchg
dec
fstps
and
sub
imul
shll
pop
lock
mov
cmp
cmpsb
divl
mov
pop
mov
push
cmp
out
loopne
and
lcall
pop
xor
sub
shlb
mov
jge
fwait
xchg
xchg
xlat
sti
xor
in
or
mov
int
or
cli
stos
imull
add
mov
mov
imul
mov
aad
fs
popa
das
iret
sti
ficompl
shr
int3
or
movsl
cmp
imul
shr
adc
arpl
std
insb
sbb
push
jne
test
xor
sbb
inc
lahf
jmp
fiadds
ss
icebp
clc
pop
mov
xchg
imul
outsb
ljmp
lahf
test
addr16
mov
cwtl
dec
scas
pop
iret
es
cli
fs
sbb
push
test
dec
and
dec
push
pushf
adc
inc
mov
sbb
or
push
jmp
push
adc
sbb
sbb
fcmove
imul
inc
lret
jb
aam
loop
lret
push
flds
mov
arpl
sbb
or
sahf
aas
pop
sbbb
inc
and
sti
daa
jb
cs
xor
movsl
in
hlt
fs
scas
xchg
adc
xlat
xchg
xor
push
test
ljmp
enter
ds
or
jle
jbe
test
insb
pop
int
dec
scas
push
dec
inc
xchg
pop
test
mov
roll
shr
mov
rorl
lods
shr
push
or
popf
push
imul
into
fadd
lods
je
cmp
ja
repnz
shr
into
test
dec
dec
ret
xchg
cmp
jne
into
aas
adc
stc
test
fisubs
dec
adc
or
ja
gs
mov
out
push
mov
jbe
xchg
stos
dec
shll
mov
mov
lea
stos
add
cmpsl
xchg
daa
cmp
imul
adc
mov
xchg
ret
lods
loopne
pop
idivb
lret
dec
jp
mov
stc
aam
stos
shrb
sbb
jnp
and
sbb
sub
fwait
orl
fprem
pop
pop
test
lcall
push
ret
lods
movsl
mov
push
scas
gs
xchg
mov
mov
mov
jne
inc
push
jmp
adc
mov
mov
sub
xor
sub
xchg
insb
xor
dec
or
add
mov
fnstenv
jl
in
es
shlb
cmp
dec
rcrb
cmp
mov
xor
imul
cltd
xor
xor
aam
ss
rorb
movsl
insb
iret
mov
xchg
xchg
pop
jnp
sbb
leave
and
cmovl
and
mov
call
loope
jecxz
rclb
repnz
push
gs
xor
icebp
cmpsl
daa
jns
ret
xorb
test
push
imul
mov
mov
xchg
or
js
cmp
sbb
pop
mov
in
fnstenv
arpl
pop
inc
int
adc
stos
xor
or
jo
add
pusha
and
push
jbe
test
lds
lea
loope
mov
xchg
decl
pop
jl
test
adcb
hlt
inc
shll
in
cmp
xor
test
pop
push
cmp
in
or
mov
adc
movsb
jns
clc
outsb
cmp
inc
inc
and
stc
mov
dec
jle
mov
insl
pop
sub
dec
jno
aaa
ljmp
mov
jge
filds
daa
stos
mov
outsl
adc
xor
lods
jo
jl
imul
mov
jbe
roll
or
lcall
and
sbb
xor
xor
daa
imul
inc
les
cltd
xchg
ror
mov
push
push
js
adc
clc
pop
pop
cwtl
js
subl
sbb
popa
pop
or
dec
jecxz
nop
int3
and
adc
xchg
out
jno
adc
push
inc
fldt
lds
xchg
and
jbe
push
lcall
adc
jb
push
pop
sbb
les
outsl
dec
push
pop
mov
les
mull
rcll
imul
add
insb
jmp
xchg
repnz
add
icebp
loopne
dec
ja
push
scas
lret
fmuls
push
paddd
imul
jp
add
xor
xchg
jmp
in
cltd
and
dec
decl
push
lds
and
aas
call
sub
call
rorb
inc
aaa
ficoms
push
inc
xchg
leave
mov
inc
adc
add
int3
inc
mov
js
push
lock
iret
xchg
jnp
xchg
pop
mov
ljmp
add
cmp
sti
cltd
jb
cwtl
fimuls
sti
sti
push
and
fnstsw
pop
call
shr
dec
inc
push
mov
icebp
or
popf
push
scas
stos
shll
out
mov
cmp
outsb
pop
in
fisttpl
out
or
jns
addr16
xchg
fdivp
rclb
ret
popf
cmp
aam
xor
push
rol
in
jbe
aad
imulb
aad
std
mov
ret
stos
test
int
push
sbb
xchg
push
repnz
push
fwait
add
bound
jmp
mov
rolb
daa
dec
add
orb
mov
jo
sti
cmpsb
test
and
daa
or
mov
outsl
ss
sbb
sbb
movsb
scas
mov
and
enter
push
add
xor
mov
jle
mov
add
iret
ljmp
jno
lods
sub
xchg
data16
vpsubd
mov
pop
mov
int3
and
mov
adc
cli
and
mov
cli
dec
enter
in
sbb
mov
rcrl
sub
mov
sbbl
push
dec
addl
gs
jb
das
faddl
dec
mov
pop
scas
sub
cmp
daa
jns
sbb
jle
dec
stos
shll
int
lret
dec
push
repnz
out
mov
cmpsl
cmpl
dec
add
xor
fidivrl
inc
fs
or
xchg
cmp
jae
pop
es
in
xchg
mov
cmp
lods
fnstsw
mov
sub
test
cmp
mov
xchg
rcrb
mov
mov
in
mov
dec
lahf
pop
sbb
mov
lret
adc
fcmovnbe
or
jns
aas
es
pop
mov
xchg
adc
inc
push
push
and
and
xchg
cmp
adc
fidivl
fsub
mov
mov
lock
ja
sbb
jbe
jb
mov
imul
lds
nop
int
dec
sub
inc
xor
sbb
mov
inc
push
bound
xor
or
mov
notl
aad
out
cld
call
and
jl
adc
out
inc
or
cmp
pop
mov
stos
loope
cmpl
xchg
lret
shll
push
mov
lcall
into
sbb
clc
movsb
adc
or
imul
sub
jmp
shlb
in
les
test
rclb
shlb
push
cmp
sub
loope
lcall
stc
pop
fs
int
rep
mov
sub
mov
sub
adcb
mov
das
aam
xchg
out
cmp
and
out
loope
pop
jge
mov
sbb
call
lds
dec
jg
popa
mov
insb
mov
pop
pop
push
les
add
mov
push
test
dec
xchg
std
xor
shl
sbb
pop
outsb
inc
in
outsl
test
inc
out
mov
rcrl
rclb
pushf
call
pop
in
cmp
xchg
add
mov
popf
mov
and
pop
xchg
jae
lret
sbb
adc
sbb
cmp
out
dec
loope
mul
daa
pop
dec
sbb
stc
aam
bnd
loopne
notb
xor
lds
int
fwait
es
pop
jl
sub
pop
aam
jne
pop
jle
out
test
out
mov
xchg
and
add
repz
repz
mov
or
jo
cwtl
data16
inc
cmp
in
inc
popf
lea
xchg
jge
mov
jg
mov
adc
testb
add
fnstenv
aam
lods
jecxz
xchg
push
repnz
mov
in
ret
cmc
cmp
fbld
mov
or
dec
movsb
cmp
daa
xchg
push
and
cmovg
lods
stc
jno
das
cltd
add
xchg
sub
sub
cmpsl
dec
lahf
add
movsl
xchg
insl
div
shl
mov
cmc
hlt
push
jo
int3
ficompl
push
sub
andb
movsl
in
dec
ljmp
aad
lret
push
bound
sub
and
push
add
push
sar
dec
ja
sti
dec
sti
pop
pop
rorl
lea
lret
in
pushf
das
push
fs
xor
mov
std
inc
pop
aam
ja
mov
fs
xor
lret
adc
inc
in
push
pop
fidivs
stos
cmp
xchg
out
and
dec
div
repnz
dec
xchg
in
js
xchg
jb
xchg
test
daa
insl
add
pcmpeqb
inc
test
dec
xchg
jns
add
aam
push
rol
jae
mov
dec
in
add
scas
jge
bound
mov
repnz
lods
and
add
out
test
or
rolb
and
jp
cltd
lret
shl
add
scas
sub
pop
dec
pop
mov
outsl
enter
adc
mov
rorb
or
test
sub
fistps
jnp
jno
push
adc
cmpsb
repnz
inc
stos
xchg
xchg
inc
or
mov
lock
iret
gs
lret
xchg
xor
push
out
jnp
nop
shl
mov
mov
sbb
movsl
lcall
fimuls
pop
dec
lea
inc
dec
outsb
cmpb
sbb
cmpsl
push
pop
sti
mov
adc
cmp
mov
mov
pop
rcl
and
and
sbb
popf
rcll
loope
sub
jl
pop
pop
sub
shrl
les
data16
sub
subl
aaa
test
or
jp
push
add
xchg
and
sub
pop
jp
or
pop
xor
jp
and
stos
cmp
cmpl
inc
cwtl
cmpsb
into
xor
push
fwait
mov
lods
sub
sbb
mov
jle
aad
add
ljmp
mov
push
push
lret
lcall
inc
pop
adc
iret
mov
movsl
call
dec
aas
lods
cs
pop
mov
loopne
xchg
aaa
mov
mov
dec
int3
sbb
lods
mov
dec
push
xchg
aam
pop
in
pop
leave
or
repz
pop
fs
out
and
mov
jb
push
mov
mov
push
inc
sbb
pop
roll
orb
push
cmp
xor
cmp
sub
stc
pop
pushf
int3
loop
cld
mov
push
mov
cmp
insb
push
addb
pusha
ret
adc
imull
sub
leave
jns
lahf
cmp
or
mov
cs
fnstenv
gs
adc
fsubs
jo
push
mov
ja
aas
stos
test
stc
in
dec
push
xor
dec
or
fdivs
mov
lret
add
mov
sbb
insl
lret
xor
sub
pop
xlat
xchg
xor
fsubrl
jg
mov
repz
dec
stos
push
ret
subl
cltd
sarl
fbld
insb
xor
out
sbb
pushl
adc
leave
mov
icebp
rclb
daa
xor
sbb
sub
sub
adc
lret
ret
addr16
enter
lods
in
jae
in
jmp
pushf
mov
mov
test
pop
push
add
jle
movsb
ja
in
insl
pop
insl
push
push
dec
push
jns
in
mov
cli
inc
mov
or
fs
push
cwtl
aas
dec
popl
dec
inc
push
jmp
int
mov
nop
les
xchg
xchg
in
ja
mov
sbb
clc
push
adc
hlt
mov
andb
test
idivl
mov
dec
jp
jb
cmpsb
dec
ja
filds
in
subl
sahf
int3
std
add
aaa
out
aam
or
adc
in
out
sbb
push
pop
pop
pop
jno
orb
cmp
inc
jnp
adc
addr16
xor
sbb
dec
mov
sub
out
std
jge
jb
ja
dec
and
pop
shr
jns
je
sbb
rclb
cmc
fdivl
aam
stos
push
jge
stos
in
pop
int
shrd
jo
sbb
test
fdivl
xchg
push
cltd
add
je
or
daa
mov
and
sbb
pop
xchg
in
lock
fstl
pop
clc
push
jle
clc
dec
push
movsb
sbb
stos
add
cmc
jae
subb
add
jne
mov
fwait
sub
push
adc
pop
jmp
loopne
out
out
cld
addl
push
push
ljmp
pop
nop
das
mov
in
mov
std
popa
lock
mov
sub
enter
mov
mov
jge
jb
fmull
stos
jne
xor
sub
inc
mov
mov
add
cmpb
jo
adc
and
mov
pop
in
add
out
cwtl
sub
xlat
in
push
inc
mov
cwtl
scas
das
outsb
mov
sti
and
mov
sbb
flds
call
cmpsl
mov
std
das
dec
popf
outsl
andl
jbe
sbb
addr16
test
cwtl
gs
imull
addr16
cmp
subb
ja
mov
pop
jle
lret
adc
fistpll
cld
jp
les
pushw
orb
cmp
mov
jae
pushf
mov
xchg
mov
dec
or
loope
mov
xor
push
lods
addr16
xchg
out
in
inc
mov
ljmp
scas
cmp
outsl
and
lret
aas
dec
adc
inc
repz
js
imul
loopne
xor
loop
into
pop
lock
pushf
pushf
lahf
pop
addr16
rolb
dec
xchg
mov
pop
adc
pop
ficomps
gs
pop
fsubl
inc
fwait
pop
aas
dec
fwait
andb
iret
popf
push
inc
repz
es
rcrl
lcall
jmp
mov
rcll
popa
jae
or
fistps
imul
xchg
fisubl
aaa
cmp
sub
lods
mov
xor
and
loopew
or
xchg
xchg
xor
wbinvd
insl
fnsave
in
mov
dec
leave
adc
jecxz
out
frstor
sbb
mov
movsl
push
mov
aas
or
dec
test
push
aas
mov
inc
outsl
js
scas
xchg
sbb
push
push
xor
ret
jg
test
dec
sbb
shll
mov
add
scas
jb
lret
cs
fs
call
gs
in
push
push
push
jnp
lea
es
xchg
stc
lea
repnz
inc
adc
in
rcrl
jmp
sahf
shrb
pop
lods
add
rorb
test
add
pushf
or
outsb
mov
nop
repz
jns
mov
dec
test
pop
cmc
sbb
cmp
mov
hlt
sti
in
xor
inc
dec
gs
inc
push
mov
xor
icebp
lock
push
xor
shlb
out
push
adc
xchg
adc
ljmp
lret
orb
or
movsl
scas
cltd
int
add
clc
mov
imul
fisubrs
cmc
addr16
inc
sub
pop
add
mov
mov
or
xor
jge
mov
fsubrs
and
or
push
ret
add
mov
push
cmp
ss
sub
sub
and
jl
vmovntps
repz
sub
push
mov
popa
pop
loopne
outsb
dec
stc
leave
je
adc
sbb
mov
sub
jns
xlat
aad
int
xchg
mov
lods
test
adc
in
aaa
mov
bound
ds
adc
dec
mov
sbb
pop
xchg
sub
negb
shrb
rolb
adc
dec
push
sbb
cmp
jl
jmp
xchg
jmp
icebp
mov
mov
aad
in
dec
xchg
inc
mov
pop
dec
push
mov
xor
aad
shrb
lea
iret
fisubrl
dec
incb
mov
pop
imul
cwtl
inc
cmp
stos
fnstsw
roll
fsubr
adc
add
adc
add
test
xlat
xchg
mov
or
xor
jecxz
adc
push
popa
insl
fistps
pop
adc
cmc
and
ja
mov
mov
daa
inc
adc
scas
xor
push
mov
add
xchg
fwait
push
jp
xchg
mov
mov
pop
and
jbe
jl
jl
jnp
shl
pop
jmp
inc
adc
aaa
push
jae
psllw
pop
in
fs
stos
mov
cmp
sub
repz
movsb
mov
test
lcall
shlb
addl
xchg
aas
mov
jge
dec
mov
inc
clc
dec
imul
push
mov
fnstsw
jmp
adc
cmp
flds
aad
adc
jno
push
mov
push
xchg
pop
add
xchg
jp
jmp
mov
mov
dec
and
mov
lret
pop
xchg
mov
add
gs
mov
xchg
imul
pop
filds
inc
push
and
jne
lock
mov
cmpsl
inc
xchg
mov
mov
mov
mov
xchg
inc
adc
loop
mov
mov
outsl
jo
lds
cmp
mov
cmp
das
push
xchg
in
jecxz
scas
repnz
jb
mov
or
ret
dec
mull
xor
push
orl
cmp
cmpsl
mov
dec
imul
fs
or
xlat
mov
push
xchg
or
or
data16
pop
cmpl
cmp
ret
mov
ljmp
cmp
sub
cmp
inc
scas
cltd
xchg
outsl
iret
arpl
shlb
loopne
xchg
xor
cmp
adcb
outsl
sbb
push
outsl
sbb
sbb
and
sub
jle
sbb
in
inc
mov
insl
stos
ret
out
ja
std
and
jns
jmp
lret
push
mov
popf
or
xor
int3
test
xor
scas
mov
fsubrl
adcl
sbb
or
nop
sub
mov
xor
jecxz
call
and
jmp
pop
out
pusha
xchg
xor
jp
jno
out
nop
jle
jns
popa
out
inc
mov
or
fs
mov
and
xchg
push
shl
in
and
xor
lea
mov
int3
mov
or
test
mov
sarl
mov
mov
sbb
nop
lea
jno
aam
lea
mov
cli
shll
add
push
fdivrs
adc
dec
mov
xorb
gs
aas
add
inc
je
inc
leave
pop
xchg
inc
jmp
jle
and
sub
cmp
push
loop
lds
push
je
out
push
xchg
frstor
cmp
xchg
and
xchg
xlat
cmpsl
or
or
stos
xor
ds
cmpl
push
jge
clc
pop
out
xor
test
arpl
xchg
outsb
test
imul
stos
dec
sub
xchg
jnp
enter
sub
in
push
inc
jp
mov
push
sahf
adc
jecxz
pop
lea
fisubs
ret
cltd
mull
scas
movsb
outsb
jb
ret
jp
push
dec
and
push
js
fwait
cltd
and
gs
sbb
xchg
push
add
jg
test
divb
mov
out
in
out
cmp
pusha
sarl
sbb
scas
push
insb
dec
pop
cmpl
jle
pop
test
pop
nop
xchg
push
adc
pop
je,pn
pop
dec
jmp
push
jp
or
ljmp
jns
mov
push
in
add
jns
pop
test
insb
pop
xor
mov
and
xor
lahf
dec
add
js
inc
mov
sbb
in
bound
mov
enter
addl
adc
aaa
gs
scas
div
adc
sub
jp
scas
pop
pop
xor
push
jmp
xchg
xchg
loope
pop
xchg
mov
data16
add
adc
xor
inc
cmp
pop
add
dec
dec
sub
add
add
dec
movsb
sub
bound
adc
mov
sbb
in
sub
sbb
out
jbe
sbb
stc
push
sar
inc
push
xchg
lret
es
int3
push
push
fildl
das
dec
inc
ljmp
push
push
dec
ja
push
mov
xchg
or
rcll
shr
aad
dec
icebp
std
loop
ss
jb
push
inc
add
rcrl
add
pop
pop
arpl
lcall
and
test
xchg
mov
aas
adc
ss
int
inc
cmp
mov
pop
mov
sub
ds
mov
out
push
adc
mov
and
pop
jge
jecxz
rorl
stc
inc
loop
pop
mov
pop
mov
call
mov
loop
or
pop
pop
aaa
shll
mov
or
jg
imul
inc
pusha
aas
mov
pop
ret
dec
mov
mov
imul
in
lcall
js
jmp
fstpt
or
mov
aas
cmpsl
clc
jae
sbbl
scas
in
addr16
pushf
push
mov
sub
stos
int3
pop
xor
adc
pop
dec
in
cmpl
inc
nop
cmp
jne
loope
out
pop
mov
jne
pop
hlt
ja
pop
into
movsb
mov
ljmp
mov
dec
or
out
lods
in
inc
xor
sahf
repz
movb
aaa
cmpsl
mov
bound
loopne
jmp
pop
cmpsb
dec
dec
adc
adc
repz
imul
mov
incb
and
sbb
stc
fnstsw
adc
mul
or
jl
push
pushl
dec
fstpl
lcall
cmp
repz
jne
sbb
out
adc
add
lods
jnp
and
loop
data16
mov
das
or
dec
sub
orl
xchg
ret
push
shlb
add
insb
pop
popa
lods
js
enter
cmc
xor
adc
xor
into
shrl
iret
mov
dec
mov
in
cwtl
std
mov
fisttpll
and
jb
mov
xor
push
dec
and
outsb
movsb
xchg
pop
or
psubusw
xlat
notl
sub
xchg
mov
push
sub
aad
movsl
mov
shrl
out
xor
mov
add
sahf
lea
xchg
cmp
pop
sarb
mov
outsb
fwait
pop
pop
fdivrl
or
push
mov
adc
jbe
movsl
std
sbbb
repnz
lods
fsub
js
lahf
pop
scas
insb
mov
into
pop
orb
jo
xor
imul
jno
mov
addb
insb
sub
cwtl
es
and
leave
cwtl
cld
inc
aad
addr16
jno
ror
in
mov
cmpsl
orb
in
adc
roll
repz
mov
dec
xor
lds
xor
xchg
lret
in
mov
sahf
mov
jmp
fidivrl
mov
and
mov
pop
or
push
out
call
adc
es
clc
mov
mov
decl
xor
push
cmpsb
arpl
scas
int3
and
jb
insl
cld
into
jl
int3
xchg
popf
inc
mov
test
push
test
mov
popa
sub
sbb
pop
aaa
movsb
stos
lahf
imul
pop
stos
scas
mov
ljmp
rcr
dec
and
fiaddl
test
dec
mov
xor
cmp
add
fbstp
xchg
push
inc
add
adc
inc
dec
cli
inc
rcrl
xor
mov
mov
mov
inc
sbb
ret
jecxz
ja
cmc
movsl
add
adc
pushf
or
lret
cmc
or
movsl
inc
cli
lret
cltd
mov
mov
push
andl
adc
mov
js
xor
xchg
pop
shr
mov
or
inc
adc
inc
ret
shlb
stc
cli
std
jg
lods
aam
inc
adc
adc
notl
and
pop
icebp
ds
mov
in
test
outsl
insb
ss
loopne
add
lock
adc
lret
and
push
in
inc
adc
mov
test
rclb
ja
mov
repz
xchg
push
dec
fstpt
idivb
adc
inc
ret
xor
pop
push
or
cmpsl
data16
addr16
sbb
cmp
add
adc
mov
add
enter
mov
pop
test
xchg
xchg
pop
xor
jmp
push
xor
inc
push
lcall
jp
lea
mov
jo
cltd
rolb
mov
fcomps
scas
imul
jbe
ss
call
inc
stos
icebp
out
outsb
mov
xor
inc
jo
daa
xchg
popf
mov
push
xchg
idivl
pop
push
dec
jmp
jecxz
push
loop
xchg
and
cmp
dec
or
mov
add
jns
sub
int
sbb
out
mov
int
push
xor
rcrl
cmp
pop
nop
fsin
subl
scas
inc
in
icebp
enter
insb
dec
lahf
aam
cmp
xchg
sti
xchg
mov
test
mov
xchg
test
aad
add
ljmp
adc
sub
jp
inc
push
add
mov
stos
mov
popf
or
shlb
int3
sub
js
inc
jne
fldt
inc
mov
fsts
xor
stc
mov
bound
stc
lcall
ret
mov
jne
hlt
xchg
rep
fnsave
mov
cwtl
dec
add
jle
jb
dec
push
sahf
lods
fistpl
arpl
xchg
mov
xchg
dec
hlt
setno
cmpsl
stos
add
ror
mov
pop
or
xor
xchg
imul
jle
jge
stos
push
cld
lahf
mov
mov
cltd
sbb
int
test
out
mov
adc
jbe
js
ljmp
push
int3
in
cmc
in
loope
or
fimuls
push
shlb
enter
jmp
push
jl
enter
ret
push
out
push
mov
add
adc
sbb
rcll
pop
call
into
or
jmp
jle
sarl
adcl
push
xor
movsb
and
push
in
lods
pusha
xor
cli
das
test
ja
jo
call
mov
xchg
les
jle,pt
xor
lcall
mov
pop
inc
pop
mov
je
cmc
cmp
shrl
shrl
mov
jnp
loopne
dec
mov
or
shrl
pop
popa
xchg
and
dec
ficompl
fisubrl
sbb
inc
sbb
dec
mov
fcomi
and
cltd
dec
repz
je
jae
add
inc
mov
in
insl
mul
call
cltd
xchg
sub
push
hlt
movsl
mov
add
jge
std
enter
lsl
jbe
lret
pop
loop
fiaddl
hlt
iret
lret
jl
ss
push
xor
call
pop
punpckhwd
call
dec
adc
mov
mov
jecxz
inc
mov
adc
test
leave
dec
dec
nop
push
test
outsl
lcall
out
ss
jo
cmpsl
mov
cli
add
mov
push
int3
and
sbb
and
je
clc
leave
faddp
jns
jmp
dec
sti
lcall
xchg
aaa
hlt
cmc
dec
add
mov
fstl
fwait
push
imul
xchg
int3
add
aam
ret
inc
stc
jb
cmp
jnp
nop
hlt
sbb
jmp
mov
aam
mov
clc
test
xor
mov
mov
ret
mov
out
or
push
lods
icebp
push
dec
jnp
jbe
outsb
fiadds
mov
sub
jnp
jns
ds
push
mov
push
sar
mov
lcall
cmp
xor
xor
loopne
mov
jg
adc
aam
mov
ds
cmp
or
jle
push
push
fs
mov
mov
adc
adc
push
sbb
or
les
jle
jno
pop
sbb
lods
xchg
cmp
xor
xchg
rcl
int3
sti
adc
int
jge
jae
xchg
testb
sbb
xor
sbb
fs
mov
pushf
aaa
aaa
cmp
mov
jb
cld
cmp
jns
xor
mov
xor
push
sub
adc
ret
cmpl
xchg
cs
xor
sbb
nop
inc
fnstcw
push
cmpsl
push
xchg
jmp
adc
and
movsl
dec
and
jge
cmpb
xor
cmc
sub
or
mov
mov
inc
daa
and
pop
test
and
dec
shrl
sahf
pop
std
jl
jno
dec
clc
dec
cmp
mov
test
lcall
jecxz
push
jle
pop
push
mov
push
add
shrl
inc
clc
sbb
mov
sbb
adc
repnz
loop
ja
fprem1
push
std
add
dec
jp
test
jae
adc
xor
inc
dec
jae
pop
xchg
mov
repz
fbld
or
add
pop
call
xchg
xlat
lret
xchg
jno
shll
test
xchg
mov
push
fwait
bnd
sahf
aad
jg
xchg
stos
addr16
pop
scas
test
cmc
leave
xchg
aas
add
bound
jns
cmp
test
insl
fcmovne
sarb
addb
sbb
push
decb
outsb
jle
mov
mov
pop
push
mov
xor
out
arpl
mov
pop
push
mov
inc
test
fwait
mov
mov
sub
ror
push
std
mov
pop
iret
jl
jno
mov
in
sub
fdivrs
js
mov
rorb
mov
mov
push
xchg
sysexit
mov
cmp
adc
out
sbb
cmpsl
xor
push
pop
cmp
pop
mov
fmulp
orl
cltd
int
xchg
or
out
stc
cmpl
rcpps
dec
adc
loopne
or
test
pusha
outsl
lods
rclb
or
or
and
cmpsl
mov
mov
sub
or
mov
and
push
cmp
addr16
mov
mov
inc
dec
fldcw
jns
inc
outsl
lock
lret
jne
xor
xor
insl
xorl
push
fcomps
and
divl
sbb
fsts
idivl
cmpsl
lret
jmp
out
movsb
out
xlat
dec
fisttps
cli
jne
jecxz
pop
sub
xlat
xchg
cltd
dec
int3
push
xor
movsl
fsubp
inc
fisubrs
clc
dec
addl
mov
ror
out
into
fs
arpl
ja
je
cmpsb
push
xor
loopne
mov
xor
mov
imul
xchg
fdivrl
inc
adc
mov
rcrl
lahf
xchg
outsb
mov
inc
mov
mov
push
roll
mov
xchg
scas
dec
mov
adc
mov
pop
fisubl
iret
add
xchg
cs
cmpsb
pop
ljmp
test
insb
fists
sarl
ficompl
movsb
pop
in
push
adc
jge
xchg
cld
mov
gs
pop
je
and
inc
or
adc
sbb
mov
and
shlb
adc
cmp
popl
jge
adc
bound
cli
daa
and
test
push
mov
xorl
add
or
cmp
xchg
lahf
test
mov
sub
outsb
lahf
jg
mov
xlat
fidivrs
aaa
out
jnp
jb
dec
les
fldenv
cmp
xor
cmc
push
mov
jb
sbb
pop
push
push
fistpll
jg
xlat
add
adc
pop
inc
daa
jbe
rcrl
lods
or
jge
mov
or
sub
mov
enter
nop
sub
out
lods
inc
pusha
je
scas
mov
popa
push
xor
stos
test
sbb
jnp
inc
mov
aad
jnp
fcoml
mulb
aaa
jl
add
cwtl
inc
adc
xor
mov
mov
mov
cs
inc
icebp
pop
and
jne
or
pushf
adc
enter
das
push
ss
or
insl
sub
add
sarb
dec
pop
cmp
inc
dec
lods
fimuls
jle
dec
in
out
xchg
mov
sbb
mov
addb
pop
jnp
bound
sub
sar
les
inc
or
aaa
arpl
push
and
mov
hlt
jns
sub
and
adc
push
pop
sbb
cmp
out
or
mov
push
inc
out
mov
inc
mov
and
enter
add
stos
sub
aad
in
enter
ss
xchg
movzbl
jae
jmp
or
notb
mov
and
mov
test
sub
imul
filds
pop
jge
mov
subb
nop
in
push
imul
stc
enter
stos
roll
lea
xchg
add
mov
lds
dec
and
sbb
data16
lods
xor
stc
mov
adc
mov
mov
pop
lea
mov
lret
sahf
out
jae
movsb
cmp
pop
pop
outsl
pop
or
test
push
or
jno
cmp
aaa
jnp
sbb
mov
sbb
mov
pop
cmc
push
mov
ljmp
test
mov
popf
daa
aam
jae
scas
lock
addl
lahf
std
mov
lods
push
addl
nop
int
arpl
push
jnp
lock
mov
call
addr16
pop
xlat
stc
jo
mov
in
mov
outsb
mov
sub
testl
or
push
push
pop
in
sub
and
add
pop
cmp
sarl
fs
mov
mov
pop
mov
in
push
mov
xchg
test
and
and
cmp
add
mov
inc
jb
cmc
lods
aam
cmp
test
push
andnps
movzbl
test
add
in
out
int3
jmp
fwait
jle
pop
xchg
cmp
push
mov
insb
sub
mov
sbb
cld
jo
icebp
mov
push
and
arpl
pop
mov
icebp
xorb
rorb
lds
adc
fsubrl
jp
leave
int3
inc
pop
pushf
inc
lods
jae
pop
sbb
les
cmc
push
ss
pop
shlb
lds
mov
dec
mov
ror
out
outsl
mov
sub
cli
std
loopne
push
or
repz
jne
movsl
adc
test
popf
mov
and
mov
leave
sbb
sti
or
lret
test
push
mov
pop
lea
sub
jle
addr16
mov
jle
movsb
imul
xchg
ja
adc
sub
and
repnz
add
and
jmp
loopne
aam
mov
pop
jb
test
das
arpl
jb,pn
add
or
pop
test
pushf
paddb
sbb
jge
mov
xchg
mov
fstpt
das
or
pop
xor
lahf
aad
sub
push
dec
push
jecxz
clc
add
es
push
push
int3
in
sbb
rcrl
pop
sub
mov
dec
sub
push
xor
repz
xor
sub
cmpsb
mov
xor
cmp
sbb
mov
filds
xchg
dec
pop
fucomi
pop
mov
addl
adcb
stc
rorb
sbb
ss
cmpsb
pop
cmc
push
jns
cmp
cmp
cmp
dec
xchg
fmulp
out
int
dec
pusha
mov
push
dec
call
jg
sbb
push
incb
jecxz
push
sub
notl
or
lds
out
push
adc
popl
cltd
jle
out
pop
jmp
mov
stos
sbb
movsl
add
mov
scas
xchg
cmpsl
cmc
xor
lret
in
jne
out
lock
sub
sbb
test
inc
cmpb
call
mov
test
pand
shll
outsb
push
mov
sahf
les
fiaddl
xchg
call
stos
andb
pusha
ja
push
mov
movl
xchg
adc
arpl
mov
push
das
xchg
aad
imulb
out
sub
xor
adc
out
dec
aad
push
mov
cmpl
xchg
stc
subb
lea
sub
addb
pop
ja
ret
push
out
dec
data16
mov
mov
test
adc
das
jbe
in
imul
daa
dec
nop
arpl
inc
das
push
mov
imulb
pop
pop
push
add
loop
in
scas
popa
pop
push
movsbl
mov
repnz
shl
push
es
and
popf
push
cmpsl
mov
outsl
mov
xchg
sbb
add
dec
pushf
lock
es
jae
rcrb
push
mov
aam
popf
testl
or
aad
test
adc
jns
jo
dec
mov
adc
lret
stos
push
lock
rcll
and
faddl
sub
fisubrl
adc
leave
andl
mov
cli
std
jo
incl
cmc
cmp
insl
cmp
bnd
test
fnstsw
mov
fcomps
jl
xchg
es
das
mov
sub
push
mov
mov
jnp
sub
cmpsl
idivb
jp
mov
jg
pop
add
sbb
aaa
fcmovnb
enter
xor
bnd
xchg
ret
mov
cmp
les
pop
pop
xor
cmc
and
ret
in
ss
dec
sbb
mov
je
aam
xor
jns
pop
shlb
jle
or
out
jns
add
jb
fsts
sbb
xor
roll
mov
lret
loop
orl
push
addr16
ror
sbb
or
xlat
mov
sub
gs
mov
mov
push
cltd
sbb
mov
icebp
add
jecxz
adc
mov
dec
arpl
and
call
aad
repnz
int3
dec
and
loopne
xchg
push
aam
add
pop
in
mov
mov
pop
adc
rorb
ds
jle
mov
sahf
test
cs
xchg
mov
in
sub
mov
pop
jno
ret
mov
mov
aaa
lcall
mov
pop
insl
mov
jb
insb
test
adc
in
dec
inc
adc
imul
andb
xor
stc
sub
jb
inc
xchg
enter
rclb
fidivs
sub
mov
aad
shll
add
xchg
add
in
aam
push
add
dec
loopne
ja
or
idiv
ret
testl
mov
insb
push
lcall
mov
jns
cmp
repnz
mov
xor
mov
pop
shrl
mov
rcl
rcl
mov
iret
cld
ret
inc
int3
int3
sbb
shr
into
inc
repnz
cmp
ror
push
sti
fdivl
xchg
xor
lea
adc
sub
jecxz
xor
fisttps
mov
lret
sbb
sub
sbb
outsb
xchg
or
push
sbb
push
inc
add
sti
lods
mov
fisubl
dec
mov
and
ja
hlt
and
in
inc
sbb
pop
xchg
xchg
mov
sub
imul
inc
sbb
mov
push
xor
pop
das
test
cltd
loope
sar
push
cmp
dec
lahf
dec
xor
dec
sub
cmp
sub
inc
scas
adc
jge
xchg
push
lahf
lock
xchg
mov
outsl
inc
pop
adc
inc
xor
aaa
cmp
jns
xchg
sarl
fisubl
cmp
mov
lds
sub
cld
add
fwait
mov
mov
jo
xchg
lea
jo
iret
cmp
xor
xor
pop
addr16
and
sub
ret
add
in
xor
stos
and
push
hlt
push
fsubrs
loope
in
gs
rorb
add
pop
and
add
clc
jns
push
je
ret
aaa
dec
jmp
jnp
jnp
sub
out
push
cmc
xchg
dec
inc
data16
xor
jg
lods
mov
addb
aaa
int3
rsqrtps
sbb
or
pop
ljmp
nop
add
jecxz
cld
loopne
mov
addr16
fisubrs
xorb
sbb
sub
inc
inc
es
icebp
dec
cli
mov
ss
out
pusha
stc
sbb
std
js
movsb
push
lods
aas
lods
nop
add
add
cli
out
loope
test
push
cmp
pop
mov
outsb
mov
ljmp
xchg
rolb
jb
mov
mov
mov
add
sbb
adc
jnp
outsl
and
cmp
inc
mov
add
xor
sahf
mov
cmpsl
pop
pcmpgtd
cmp
pop
xchg
sub
inc
jmp
lret
sub
fwait
push
das
cmp
popf
xor
jae
and
gs
repnz
push
pop
adc
sub
sbb
cmp
repz
mov
adc
cwtl
fistps
push
movsb
ds
fstp
insb
xchg
sub
mov
sbb
push
stc
ret
je
aas
shrb
mov
xor
jns
movsl
mov
dec
inc
test
push
into
mov
ret
add
mov
mov
popa
mov
or
data16
hlt
add
pop
loope
sbb
pop
das
or
xchg
push
push
bound
push
cs
adcl
aad
add
push
jbe
int3
insl
shrl
cmpb
xchg
cmpsl
rclb
inc
out
mov
pop
xchg
xor
mov
xor
xchg
arpl
xchg
into
and
sbb
adc
dec
push
repnz
dec
add
fcmovnb
insb
xchg
adc
pop
xchg
adc
xchg
mov
mov
aad
mov
imul
xchg
pop
xchg
cmp
das
in
cwtl
orl
xchg
jbe
xchg
in
adc
push
jecxz
xchg
mov
fldcw
xor
jg
jns
nop
popa
fs
adc
int3
idivb
push
sbb
loop
mov
ljmp
xchg
lcall
insl
mov
pop
hlt
scas
jns
pushf
ljmp
jle
inc
sbb
fstpt
daa
std
test
and
pop
jbe
xor
push
je
mov
jo
pusha
push
mov
inc
loope
sti
imul
fwait
rcrl
jmp
lods
or
mov
out
jl
and
lret
push
loopne
xchg
pop
xor
xchg
xor
cmpsl
rclb
xor
pop
push
dec
sbb
cmpsb
scas
stos
cmp
out
dec
cmp
lret
out
into
mov
int3
stos
outsl
push
mov
sbb
les
lods
pop
jl
mov
aaa
dec
mov
pop
jmp
xor
fmuls
jl
dec
ret
cmpb
ret
mov
mov
or
push
and
and
stc
adc
adc
movsl
out
int3
rclb
mov
bound
and
mov
push
aad
pop
enter
dec
sbb
fiadds
push
ret
jg
shrd
in
dec
pop
shll
adc
leave
pop
mov
push
jg
outsl
inc
out
scas
pop
sub
lret
push
mov
incl
dec
mov
mov
inc
pop
jb
mov
fstl
insl
ss
ja
sub
xchg
inc
pop
repnz
cltd
jbe
addr16
xchg
insl
add
lcall
in
push
leave
xchg
cs
mov
jno
lcall
pop
jmp
pop
adc
inc
inc
xchg
xor
sub
xor
adc
inc
dec
lcall
sub
leave
jb
lcall
adc
xor
repnz
mov
lds
or
popf
inc
push
std
mov
rep
shll
xchg
mov
adc
mov
xor
and
fisttpll
daa
cmp
fisubrl
mov
ja
add
mov
inc
mov
inc
cwtl
in
out
idivl
jb
pop
dec
sbbl
cli
mov
push
pop
mov
aas
xlat
sub
or
das
lock
sub
das
mov
or
mov
mov
sbb
sti
add
sub
je
mov
ret
or
fbld
xor
mov
inc
in
movsl
jmp
xchg
cmpsl
and
pop
and
cmp
fs
or
fdivrl
arpl
mov
jmp
push
dec
js
xlat
fsubs
aaa
dec
pop
jmp
lret
pusha
aas
inc
mov
scas
sbb
in
adcb
in
popa
scas
add
push
dec
cmp
sub
ret
and
dec
mov
xchg
scas
imul
cmp
js
sub
rorl
std
xchg
push
dec
lcall
pop
add
or
in
xchg
cmp
loope
mov
dec
and
mov
mov
dec
mov
ret
mov
jo
adc
mov
jg
std
scas
ret
cli
pop
mov
lret
xchg
pushf
insl
inc
adc
mov
mov
cwtl
in
pop
cmp
aas
shl
or
pop
and
subl
sahf
data16
sbb
xchg
iret
sub
add
jmp
ja
cld
loopne
mov
mov
fildl
por
push
dec
push
pop
push
inc
hlt
rclb
push
into
fwait
push
jb
mov
lods
sahf
jno
sbbb
push
lahf
lods
and
mov
mov
jmp
cmp
mov
add
in
add
lret
push
icebp
xchg
aad
jbe
pop
data16
push
movsl
cld
stc
pop
mov
call
mov
mov
lahf
es
push
loop
fsubl
push
pop
pusha
and
mov
imul
jnp
test
dec
and
sti
pop
inc
add
lcall
mov
fnstsw
xchg
mov
shlb
push
pop
or
repnz
aad
mov
mov
sub
jno
pushf
leave
push
in
adc
or
call
add
arpl
mov
sarl
fisubs
mov
sbb
fcomps
and
aas
lret
outsb
cmp
clc
sbb
sahf
jp
mov
jg,pt
lret
das
fwait
sbb
mov
aas
mov
or
lcall
inc
imul
and
sti
mov
ss
dec
and
adc
adc
in
push
jg
outsb
inc
push
aam
outsb
inc
or
dec
hlt
pushf
insb
icebp
inc
addl
into
inc
and
inc
sbb
jo
idivl
cmp
hlt
testb
iret
mov
dec
sub
sub
loope
bound
xor
icebp
lods
pop
mov
clc
push
pusha
or
mov
adc
jnp
stc
cmc
inc
cmp
shll
lcall
mov
cltd
lret
xor
cmpsl
ffree
aam
js
mov
push
scas
mov
pop
imul
xor
shll
mov
cs
push
mov
add
aad
gs
call
pop
push
int3
jae
or
int
jnp
mov
cmp
lahf
mov
cli
ds
fidivs
fidivl
movsb
pushl
pop
lret
cmp
jp
aaa
and
je
lea
aad
movsl
mov
out
push
inc
and
dec
int3
xor
sbb
mov
lods
xchg
mov
mov
int
adc
sahf
addr16
mov
call
ss
scas
mov
push
in
lahf
test
pop
xlat
inc
fnstenv
aam
dec
stos
icebp
and
xor
inc
ret
sarb
bound
jl
movsl
shlb
dec
pop
flds
cmp
cmpsb
or
testl
jnp
inc
or
and
adc
jns
add
leave
bound
mov
stos
dec
aaa
lea
addb
or
ficoml
sbb
gs
test
dec
cmpsl
push
ret
jp
inc
inc
lret
mov
push
push
cmpsb
and
fs
cwtl
push
fsubs
dec
popf
cmpsl
jno
cli
cmpsl
add
fucomip
mov
pop
cmp
outsb
shrb
and
jns
fsubp
sub
scas
pop
mov
jae
push
in
xor
dec
mov
imul
js
push
pushf
and
es
pop
iret
inc
outsl
push
rep
jmp
dec
imul
xorb
mov
xchg
aaa
sahf
sbb
xchg
cmp
dec
jl
insb
sub
fists
push
jmp
lods
push
sbb
pop
fisttpl
mov
cmp
das
arpl
pop
mov
jbe
sbb
mov
inc
pop
push
xchg
fwait
mov
inc
dec
mov
cltd
loop
outsb
jne
push
in
test
aas
fsub
mov
lahf
movsl
inc
enter
repz
pop
and
inc
and
cwtl
xor
pop
and
aam
xchg
dec
add
nop
push
mov
xchg
push
pushf
bound
test
in
adc
cmp
js
fsin
bound
xchg
rcl
imul
lock
xchg
mov
mov
lock
popa
mov
xchg
xor
push
pop
xchg
jbe
stos
push
in
pop
mov
cli
gs
outsl
mov
arpl
xor
sbb
add
sub
add
loopne
inc
pop
jnp
push
pop
pop
inc
mov
test
inc
daa
les
xchg
pusha
in
aaa
mov
push
imul
jmp
mov
ja
jp
pop
minps
das
push
and
fidivrl
ja
dec
xchg
dec
jns
aam
or
js
arpl
or
cmpsb
push
fdivs
dec
inc
pop
popf
fadds
mov
repz
adc
lahf
mov
dec
test
xchg
arpl
sub
sub
ds
pop
pop
xorb
shlb
mov
lahf
sub
adc
mov
mov
mov
cs
mov
pop
and
add
scas
mov
inc
jl
sbb
dec
jae
jg
scas
inc
lock
imul
movsl
cld
adc
xor
push
hlt
cmpsl
and
xor
push
xchg
sbb
call
in
dec
sub
fwait
lea
data16
xchg
stos
cmp
sti
rol
aaa
dec
repnz
inc
add
mov
lds
mov
mov
cli
jo
stc
jne
jb
les
adc
arpl
stos
mov
orl
dec
ja
jmp
mov
orb
mov
xor
mov
repz
movsl
lea
add
sub
shlb
xor
not
loope
addl
mov
sbb
shlb
insl
jno
push
add
pop
imul
jmp
scas
sub
xor
leave
xor
fxch
inc
lods
sub
outsb
movsl
adc
shlb
add
stos
cmp
or
loope
adc
jmp
push
or
arpl
inc
bound
push
popa
sub
stos
adc
lods
stc
in
pop
iret
adc
dec
pop
xchg
shrb
scas
fistps
addr16
sahf
sti
mov
cmp
imul
pop
inc
mov
sub
jns
inc
aam
push
outsl
arpl
fcoms
pop
mov
sbb
test
add
cs
scas
xor
push
mov
mov
and
dec
push
repnz
shlb
mov
movsl
dec
sub
ljmp
dec
or
in
or
adcl
aas
testl
jmp
test
push
arpl
pop
sahf
xchg
jle
jmp
bound
jge
add
mov
jp
in
insb
subb
shr
je
pop
insl
dec
mov
stos
int3
inc
ret
sub
stc
leave
xchg
adc
sti
fstpl
sysexit
and
fildl
arpl
loope
jge
daa
adc
xor
cmpsl
das
xchg
push
clc
add
jo
xorb
sbb
adc
frstor
mov
mov
sub
xchg
in
inc
jle
jmp
iret
lods
xchg
sub
pop
scas
dec
mov
jg
test
mov
jno
test
arpl
hlt
add
ret
stos
xor
push
sub
fistps
iret
fmuls
dec
jle
and
dec
inc
pop
in
in
fcoms
pop
fs
pop
cmp
adc
push
test
xor
sub
pop
clc
loope
and
loope
rorl
sub
aam
fs
sbb
add
sbb
sub
test
pop
xchg
mov
inc
movsb
int
inc
xchg
mov
popa
pop
fisubs
push
mov
lds
jb
and
cmc
fmull
movsl
sti
cltd
push
adc
mov
repz
rorb
fcmovnu
ss
and
mov
lock
push
cmp
xchg
add
dec
push
das
ret
push
push
in
cltd
sbb
les
imul
aad
pop
sbb
push
jle
jmp
insl
xor
xchg
lods
or
pop
adc
scas
js
insb
jl
adc
insb
adc
iret
and
lods
imul
xchg
mov
and
in
fldt
push
lahf
sbb
pop
dec
mov
test
sbb
push
mov
les
add
push
jg
lret
pop
xchg
jmp
inc
push
cmp
xor
inc
js
jl
fmuls
fbstp
cmpb
xchg
sbb
or
jns
inc
adcb
ss
push
ret
inc
and
or
imul
mov
les
pop
or
hlt
in
or
in
dec
adc
int3
inc
mov
jmp
enter
test
fldenv
addr16
into
js
sti
cmp
push
popl
iret
sbbb
inc
rcl
adc
adc
fwait
pop
cmp
xor
jmp
jg
arpl
cmp
cmp
loop
fxtract
and
mov
xor
sti
pushf
add
into
mov
es
push
addr16
cs
xchg
dec
cmp
sbb
in
mov
push
lahf
pop
xchg
push
arpl
stos
icebp
movsb
add
pop
in
pop
push
out
cmpsb
sbb
outsl
lahf
nop
pop
cmpsb
push
pop
lods
push
out
pusha
push
ds
adc
pop
stos
cli
mov
jo
mov
xchg
leave
inc
movsl
sub
mov
jge
mov
cwtl
stos
xchg
aam
stos
fcom
xchg
add
pop
pop
xchg
ds
add
adc
push
incl
loopne
shrl
stos
xchg
pop
cltd
fmuls
dec
rolb
jg
ret
xor
or
nop
mov
push
jb
sbb
adc
ret
test
inc
loop
jge
imul
sub
mov
add
add
rorl
mov
popf
pop
mov
das
sbb
mov
mov
call
lock
sbb
lahf
outsb
sbb
arpl
lea
and
jp
inc
neg
popf
jle
fidivl
int
or
cld
xchg
jne
arpl
stos
push
or
in
xchg
sub
ja
jbe
in
add
push
cmp
das
mov
adc
stos
testb
mov
decb
push
ljmp
roll
adc
out
js
into
mov
mov
add
mov
jmp
dec
xchg
lahf
sub
pop
lret
fdivs
xchg
das
out
push
das
sbb
pop
pop
xor
ss
xor
push
lods
or
pushf
and
push
push
mov
into
sub
cmc
repnz
sub
sub
rep
sbb
dec
cwtl
clc
inc
adc
sti
ficompl
ret
test
fsubl
test
rclb
mov
mov
pop
push
fisubs
add
and
cwtl
sub
pop
xor
or
xchg
fwait
sub
jg
jmp
shrl
pop
inc
pushf
jne
jge
push
push
dec
fcmovb
pop
cmp
fidivrl
sbb
fimull
xchg
lock
stos
push
popa
mov
push
xor
inc
adc
or
jno
lods
push
mov
pop
xchg
lret
jne
adc
repnz
hlt
addr16
sub
xchg
fwait
sub
or
push
fmul
mov
mov
movsl
loop
dec
cs
cmp
fiadds
pop
leave
jo
dec
aas
int3
push
xchg
popa
ret
insl
flds
cmp
mov
pop
mov
mulb
fstl
lcall
sbb
aas
add
popf
push
into
lret
out
sbb
aas
push
and
nop
stos
adc
daa
xchg
mov
sub
sbb
pop
dec
call
addl
call
in
cmp
es
sahf
push
gs
adc
cmpl
inc
clc
push
repnz
xor
xor
add
std
or
adc
out
je
inc
sarb
push
adc
js
scas
js
mov
dec
std
and
mov
add
sub
fiaddl
or
imul
movsl
repz
pop
sub
jns
mov
push
in
in
and
insl
xorl
div
gs
and
shrb
or
dec
cmp
jl
xchg
mov
iret
das
rcrl
inc
xor
sub
mov
loope
test
loopne
lods
rol
xchg
jmp
js
ljmp
add
ret
jle
ljmp
pop
icebp
call
pop
out
imul
and
sub
lods
test
pop
cmpsb
jg
xor
out
sbb
pop
dec
pop
sti
jmp
add
cmp
jp
or
jmp
jecxz
mov
cld
adc
dec
inc
lahf
sarl
xor
cs
iret
in
movl
push
and
aam
lret
jge
mov
adc
test
popf
add
jg
or
inc
in
dec
inc
test
sub
push
sbb
lret
cmp
push
inc
cs
leave
push
or
sub
or
dec
dec
push
pusha
or
lods
ret
js
out
stos
push
push
jne
ljmp
das
sti
loope
add
inc
or
int3
inc
gs
cmp
push
adc
rol
addb
addr16
xchg
inc
dec
int
inc
insb
xor
or
inc
js
jge
cmp
jns
xchg
das
dec
pop
inc
mov
dec
loop
outsl
mov
mov
fbld
add
sbb
js
fnstenv
sub
sub
leave
push
sbb
addr16
pop
insb
out
sub
pmulhuw
imul
jp
pop
mov
rorb
xor
scas
mov
push
test
std
out
xchg
outsl
jbe,pn
cwtl
and
fildll
mov
mov
or
sub
sub
lods
jae
mov
cwtl
lcall
mov
popa
sub
jo
push
xchg
mov
pop
pop
cmp
cli
subb
xor
lret
jne
repnz
pop
popa
jne
mov
cmp
fcmovnb
in
ret
adc
push
into
in
daa
jns
jae
out
int
cmp
xchg
into
pop
xor
ret
dec
adc
scas
movb
arpl
movsl
add
dec
xchg
hlt
jae
fcoms
sub
clc
mov
stos
aam
in
lea
sbb
xchg
testb
jo
mov
mov
xchg
push
or
jp
loopne
test
xchg
and
dec
push
pushf
lods
outsb
xchg
mov
xlat
mov
int3
inc
scas
mov
mov
out
adc
aaa
mov
repnz
stos
and
lds
xor
lds
sub
into
jmp
mov
fildl
lret
push
xchg
out
daa
add
xchg
jne
mov
add
jae
adc
int
cmp
mov
xchg
jns
push
sub
or
and
xor
daa
sti
and
push
sub
out
push
and
popa
pop
inc
xchg
or
fldenv
int3
cmp
cmp
das
mov
jecxz
sbb
mov
mov
mov
mov
cld
mov
xor
or
in
icebp
iret
cmc
repnz
sahf
sbb
add
cmp
sbb
jmp
dec
aam
outsb
dec
mov
mov
dec
js
push
cld
inc
xor
adc
jecxz
dec
push
mov
out
push
pop
loopne
out
jnp
nop
mov
dec
jecxz
dec
dec
cwtl
adc
jp
mov
or
inc
lret
add
imul
jae
mov
dec
and
xchg
in
lods
sub
movsb
mov
in
cmp
sub
enter
popf
pop
in
sarl
movsl
add
lock
jecxz
dec
sub
sub
pop
jnp
out
jle
mov
add
std
cmovb
int
fistl
in
mov
movsl
jo
sbb
or
adc
or
out
sbb
xor
xchg
cmp
push
mov
sub
jne
pushf
test
push
pushf
xor
ret
jno
outsb
out
cmpsl
jo
imul
lcall
aam
cmp
out
sti
rcrb
or
or
insb
push
int3
dec
lods
in
sbb
pop
cmc
mov
adc
adc
gs
ret
dec
xchg
loop
and
inc
sbb
aam
das
mov
cmp
call
hlt
addr16
int3
lret
stos
std
xchg
pop
mov
or
add
adc
fcmovu
sub
mov
fs
jmp
push
pop
js
adc
push
jne
cmp
inc
or
mov
jo
out
in
int
inc
gs
jge
std
ret
xchg
inc
test
cmp
popa
add
or
cmovle
mov
sbb
and
add
xchg
xchg
test
lods
sbb
jge
fsubr
sub
inc
push
andb
je
dec
fmul
mov
xchg
hlt
and
push
mov
push
jo
cmp
outsl
cmpsl
cltd
xchg
push
mov
loope
sub
ljmp
inc
push
adc
mov
les
pop
add
daa
sti
or
data16
unpcklps
jae
xchg
mov
mov
insl
xchg
lock
loop
push
jle
dec
mov
jl
fwait
lret
insl
movsl
and
sub
sub
fildl
jecxz
inc
push
fcmovnbe
cmp
lods
lods
scas
movsb
pop
out
and
inc
sbb
push
loop
or
decb
push
adc
rclb
adc
stc
mov
icebp
scas
cltd
subl
mov
test
fstl
je
in
out
mov
fnstsw
pop
mov
push
lea
lret
mov
mov
fptan
cwtl
ret
lods
rcrb
ret
sbb
inc
sbb
or
hlt
pop
jno
or
stos
jbe
lea
in
mov
cltd
in
lea
out
stc
lret
jne
lret
push
push
mov
cli
jno
call
jle
popa
mov
out
pop
repz
stos
add
mov
lcall
dec
and
shl
imul
and
xchg
out
push
cmp
es
dec
sub
pop
xor
int
stos
aaa
add
xchg
int
into
sahf
adc
adc
addr16
insl
aas
jmp
out
or
aam
jg
pop
mov
sbb
inc
fcmove
adc
mov
das
fdivrl
pusha
mov
pop
mov
adc
add
divb
jl
cwtl
or
jnp
je
sub
adc
push
in
or
jo
sbbl
std
icebp
sbb
imull
xor
inc
test
scas
rcrb
shl
push
pop
push
xchg
add
into
xor
mov
shlb
mov
inc
sub
jp
push
imul
cmpsl
daa
mov
cmp
fdivrp
cmp
and
jmp
gs
out
sub
sbb
inc
mov
ret
test
cmp
pusha
cld
add
outsl
and
not
shl
mov
addr16
clc
test
pop
sarl
jbe
sub
shrb
jle
shl
cmovle
mov
push
dec
scas
xor
inc
cld
repnz
inc
push
adc
sub
mov
mov
shlb
xorb
repnz
pop
push
stc
sbb
outsl
mov
fisttps
and
jb
into
mov
pop
xor
lret
daa
insb
test
call
mov
sahf
lods
jb
xchg
out
cld
fdivp
xor
mov
stos
test
add
dec
jbe
sbb
pop
sti
mov
loopne
push
add
repz
fstpt
cmc
test
push
mov
or
jge
addl
test
inc
repz
xor
or
inc
jbe
not
lcall
cmp
adc
or
sti
notb
jge
xchg
outsl
xlat
enter
pop
data16
push
pushl
dec
push
test
insl
ljmp
push
lahf
addr16
push
sarb
pop
jmp
clc
cmp
fnstsw
xor
add
and
lds
inc
xchg
movsb
ss
les
mov
imul
inc
sbb
inc
push
xchg
mov
dec
dec
adc
jbe
push
pop
sub
call
adcl
stc
cmp
and
mov
add
mov
xor
add
loope
shll
mov
int
outsb
push
xor
inc
adc
std
push
into
sahf
aam
sub
int
or
xchg
pop
sub
out
dec
or
arpl
ss
popa
loopne
mov
paddq
movsl
adc
cmp
cwtl
nop
loop
jmp
push
push
xchg
jg
jae
in
or
push
dec
cmp
enter
jg
xchg
aas
fdiv
std
flds
mov
test
inc
fmull
fstl
int3
int3
cli
jno
cmp
sub
pusha
outsb
cmc
mov
loope
jbe
or
stos
mov
mov
gs
push
enter
mov
inc
push
mov
dec
or
fs
or
in
mov
xor
cmp
xor
ficoml
ss
pop
jecxz
gs
push
bound
popa
iret
sbb
mov
add
add
sarb
adcl
jnp
or
ss
les
nop
ret
ss
adc
insl
out
imul
loope
sbb
xchg
test
fs
enter
ss
sbb
pop
inc
fs
add
xor
loopne
lea
daa
scas
and
sub
sub
jnp
cmp
imul
int
int3
push
jle
mov
fldl
sti
clc
xor
pop
jle
fwait
js
push
pop
int
mov
stos
insb
stc
sub
js
and
mov
mov
inc
je
ja
test
imul
mov
in
jbe
test
mov
test
sub
cmpsl
cmpsb
mov
sub
scas
incl
mov
les
cmp
aad
push
xor
jns
dec
and
das
jp
lcall
mov
pop
cmpsb
push
cmpl
push
mov
repnz
stc
xchg
sub
imul
das
mov
js
ja
inc
jmp
shl
add
xor
aam
fwait
xor
sbb
cmp
imul
in
scas
xlat
pop
mov
test
dec
lods
lods
sbb
or
adc
cmpsb
xlat
adc
pop
je
repz
xor
imul
movsb
ret
mov
adc
dec
inc
iret
cli
jbe
daa
jecxz
jo
imul
xor
lcall
aad
cmp
add
cmp
mov
mov
mov
out
jae
mov
push
mov
xor
and
push
jmp
sbb
ds
flds
sub
lcall
cmp
mov
les
pop
js
test
pop
pop
repnz
out
movsb
jge
in
lret
xchg
mov
sub
mov
mov
fadds
daa
addr16
xchg
into
xchg
or
pop
pop
imul
stc
adc
int3
cli
add
sbb
insb
xor
lret
nop
fs
rcr
data16
imull
xchg
ret
cmp
and
neg
dec
xchg
cld
sbb
adc
or
sub
iret
fimuls
fildll
outsl
or
cmp
movsl
cmp
scas
push
mov
xor
mov
scas
mov
jno
fwait
adc
push
int3
shr
inc
insl
pop
inc
push
mov
fwait
jl
adc
mov
out
xchg
movsl
mov
cmpsb
jne
sbb
jmp
cmp
fimull
test
pushl
jg
icebp
mov
xor
push
stos
xor
pushf
jmp
dec
clc
out
push
sbb
iret
ret
xchg
arpl
lahf
sahf
sahf
mov
scas
pop
and
sbbb
jbe
cmp
sti
idivl
sbb
adc
sub
sbb
or
sbb
in
xor
or
mov
pop
jmp
loope
xor
add
xchg
add
inc
mov
daa
sbb
pop
xlat
ficomps
mov
inc
or
dec
xor
mov
fstpl
dec
mov
frstor
push
cmpsb
lret
fstl
in
mov
loopne
or
int
cmp
mov
dec
or
jnp
pop
mov
jle
mov
testl
dec
xor
xchg
adc
in
adc
mov
mov
dec
adc
mov
sub
xor
imul
inc
sbb
ja
xchg
adc
pop
push
push
jecxz
sub
lods
jecxz
adc
sti
ds
and
cmp
push
lret
gs
cmpsb
inc
or
mov
les
xor
inc
rorl
add
scas
jle
ficoms
mov
cmp
pop
xor
and
push
imul
notb
push
mov
cltd
xor
test
test
sub
add
clc
inc
lods
testb
and
daa
jb
push
js
mov
adc
andl
sbb
mov
dec
fstps
pop
outsl
sbb
fisubrl
cmp
push
cmp
pop
inc
rcll
dec
and
adc
pop
jne
mov
pop
xor
fisubrl
push
stos
pop
mov
cmp
pusha
bswap
xor
sub
jecxz
mov
dec
pop
lret
out
cmpl
shlb
js
pusha
cmp
test
push
inc
test
adc
jo
push
nop
rcr
mov
and
out
push
or
jne
inc
mov
mov
ss
fistps
xchg
into
shlb
dec
and
ljmp
daa
push
cmpsl
push
mov
adc
and
jecxz
cmp
mov
push
dec
mov
and
or
add
cmp
cltd
cwtl
int
xor
and
jmp
jmp
pusha
idivl
xor
popa
xchg
popf
lret
jg
repz
cs
ret
out
add
pop
dec
lods
adcl
icebp
les
mov
inc
mov
inc
jmp
inc
rcrl
fists
pop
lea
sub
lahf
cwtl
stos
cs
lret
mov
cli
inc
stc
iret
inc
pushf
push
pxor
xor
xchg
ficomps
jae
and
pop
pusha
outsb
sub
sub
xor
add
xchg
aad
addr16
push
fcompl
imul
data16
out
in
stos
lods
xor
js
mov
cmc
cwtl
out
ror
xchg
adc
or
js
jle
push
push
call
sbb
fisttps
int3
aad
lcall
cmp
aas
cltd
xorl
popa
mov
cmpsb
pop
adc
out
test
mov
inc
mov
mov
dec
dec
arpl
cld
lods
test
outsb
and
scas
pop
xchg
cmp
inc
and
lahf
mov
and
push
mov
or
scas
mov
and
inc
cmp
dec
pop
inc
or
aaa
jg
sbb
inc
xchg
mov
mov
mov
xlat
xchg
add
pop
test
sbb
xchg
mov
lret
jecxz
and
mov
xchg
inc
call
div
inc
cli
mov
aaa
add
and
or
lock
pop
sbb
jl
mov
jle
jae
pushf
jbe
push
test
sbb
mov
daa
mov
add
jl
sti
pop
pop
xor
xchg
ret
mov
and
sbb
jmp
sub
mov
push
or
addr16
pop
jp
xchg
das
mov
xchg
jp
loopne
and
cli
inc
cmp
aad
adc
stc
repz
sub
mov
cwtl
cmp
dec
arpl
es
pushf
out
mov
xchg
xor
popa
mov
pop
or
in
inc
arpl
popf
and
and
mov
jns
sub
in
lods
andl
and
lret
inc
int3
adc
adcb
adc
jno
aad
call
mov
and
cld
es
pop
pop
jbe
xchg
pop
hlt
lock
stos
jae
jne
mov
mov
push
jg
inc
pop
mov
inc
scas
imul
fidivrs
pushf
sbb
xor
int3
mov
jmp
jp
sbb
loop
sbb
push
dec
lock
sbb
xorb
mov
add
stos
test
jecxz
test
faddp
repnz
mov
movsl
je
push
sbb
jg
in
sbb
lea
into
push
lea
adc
sahf
dec
rcr
arpl
cmp
or
cmp
push
xchg
aam
inc
push
and
shrd
in
mov
add
jae
out
pop
fxtract
outsb
mov
in
ja
out
imull
loope
insl
add
aad
les
xchg
mov
jl
add
pop
push
leave
mov
rolb
movsl
movsb
inc
andl
dec
or
bound
xor
je
lea
lret
shll
jae
das
and
mov
int3
sub
push
insl
jb
lds
outsl
push
mov
jl
std
cmp
mov
jmp
xchg
xchg
insb
jge
mov
lds
mov
push
aas
stos
fldt
cmpsl
popa
pop
and
fstpl
dec
cmp
pop
jmp
lahf
in
mov
lret
lret
pop
lods
addb
lret
gs
sub
cltd
fidivrl
pop
rorl
inc
cmpsb
mov
insl
sub
in
pop
or
nop
add
pop
fcoms
imul
jecxz
bound
add
sub
add
test
js
jmp
mov
in
xchg
cmpsb
hlt
push
mov
mov
movsl
add
push
lock
and
mov
adc
xchg
sub
or
lods
sub
push
xchg
mov
push
mov
push
adc
aas
in
push
outsb
push
lret
repz
and
sbb
stos
inc
inc
pop
gs
mov
mov
push
sbb
jbe
add
add
test
mov
mov
shrb
js
lea
in
sbb
add
repz
cmp
mov
adc
fisttpl
push
adc
mov
int
push
imul
push
out
push
mov
ljmp
xchg
outsl
fcoml
fisttpl
into
or
stos
add
loopne
sub
outsb
movsl
sub
add
cmc
lock
mov
addr16
nop
mov
lea
mov
movsl
hlt
mov
cmpsl
pop
bound
popa
pop
xor
jge
test
test
ss
movsb
cmp
sbb
loopne
lea
xor
cltd
mov
out
or
outsb
push
inc
pop
pop
fidivrl
out
ret
xchg
xor
pop
push
mov
mov
or
inc
shrb
int
sub
movsl
jno
xor
roll
mov
stos
mov
fwait
or
jbe
sbb
cld
aad
fisubs
dec
incl
ljmp
out
imul
rcrb
jmp
push
add
in
insb
inc
in
sub
mov
loopne
mov
dec
stc
je
and
sbbb
call
shr
rorl
inc
and
or
add
data16
mov
push
cmpsl
rolb
adc
xor
call
loopne
inc
push
sub
lret
pop
lret
mov
movsb
cmp
adc
adc
push
fcomi
ret
scas
int3
rcl
cmp
cmc
xchg
jmp
imul
ljmp
das
aas
cld
dec
cmp
subb
lcall
xchg
daa
jo
fadds
fimuls
xlat
add
aad
push
mov
out
movsl
cmp
ss
xchg
xchg
outsl
leave
cmp
ret
bswap
ss
push
push
dec
pop
clc
stc
movsl
push
pusha
cltd
inc
sub
stc
test
inc
addr16
jnp
into
dec
aas
inc
jne
ret
cld
mov
cmpsl
mov
daa
icebp
jbe
ja
mov
test
push
fstl
fisubs
push
sbb
mov
sub
pop
push
sbb
outsl
mov
or
or
mov
pop
inc
fs
cld
daa
add
push
outsl
frstor
dec
push
sub
fcom
xor
cmp
add
push
pop
jb
cli
add
push
lret
cmp
mov
sbb
mov
mov
insb
loop
push
and
out
cwtl
or
test
inc
pushf
sbb
add
jg
cmpsb
cmp
push
cmp
jns
int3
sub
loope
scas
xor
adcl
popa
aaa
cld
orb
ror
addb
sbb
dec
and
pop
call
lea
sub
lods
cmp
push
scas
out
jle
jae
mov
inc
inc
in
lret
cmp
test
lea
lahf
mov
outsb
pop
jns
decb
push
repz
leave
mov
out
mov
out
pop
xchg
xchg
jle
fisttpl
xchg
loope
inc
out
sbbl
mov
leave
pop
push
mov
inc
mov
cmc
movsl
adc
cli
daa
mov
cmp
nop
adc
sub
cmp
push
sti
mov
fidivs
jge
xor
pop
cmp
lret
repz
push
pop
mov
out
or
aas
mov
dec
lcall
mov
jp
pusha
add
jno
mov
mov
aaa
jo
sbb
xor
pop
dec
dec
jbe
mov
push
mov
xlat
jle
mov
pop
rolb
push
ljmp
inc
stos
xor
mov
pusha
mov
mov
dec
das
cmp
cmp
jge
xor
and
mov
int3
jbe
push
pushf
ffreep
imul
or
add
stos
add
in
aaa
insl
fisubrs
pop
dec
jecxz
or
mov
call
or
in
jo
arpl
out
cmp
lret
pop
mov
adc
shlb
inc
fisubrl
js
xor
ficompl
popf
les
cli
push
in
cltd
mov
jp
loop
add
cltd
ljmp
incb
push
push
out
outsb
and
xor
test
nop
push
out
pop
pusha
adc
clc
cltd
fldcw
ds
adcb
inc
and
popf
dec
iret
xchg
pop
out
mov
cmp
lods
scas
shl
shrl
sbb
bound
sbb
test
repz
repnz
push
stos
out
icebp
pop
cmp
test
dec
inc
inc
xchg
hlt
sahf
aam
add
mov
nop
nop
ss
icebp
jl
iret
repz
les
mov
mov
dec
aad
mov
nop
mov
cmpsl
fcoms
fdivrl
mov
sbb
adc
inc
xchg
jb
and
inc
nop
dec
shlb
divb
jp
inc
cli
dec
fcomps
testl
adc
jmp
enter
enter
hlt
sub
push
pop
sbb
pop
push
ss
xor
cmp
or
lret
or
mov
mov
imul
mov
and
xorb
sbb
or
mov
push
dec
mov
loopne
adc
fwait
lds
repnz
dec
repz
iret
mov
stos
inc
cmc
adc
int3
pop
mov
inc
push
lcall
pop
out
das
adc
mov
pop
shlb
push
cmp
inc
sub
leave
xchg
adc
ja
xor
add
enter
sbb
xor
imul
push
or
popf
aaa
xchg
jno
xor
repz
push
push
nop
pop
push
pop
nop
cs
out
ja
sub
or
jecxz
mov
push
mov
imul
sub
lcall
pushf
mov
push
insb
aaa
fistps
xchg
fildll
int
loop
cmp
or
ljmp
iret
lods
in
test
hlt
pop
xchg
pop
in
sbb
in
je
bswap
addr16
mov
sarl
arpl
enter
jnp
in
or
add
in
jae
nop
test
inc
jle
aam
js
sbb
pop
js
dec
out
mov
jle
fwait
fwait
aad
jns
jae
push
invd
mov
sub
leave
sub
sbb
jae
out
stc
add
pop
adc
add
jnp
int
cmpsl
push
cltd
aam
xlat
push
lds
ret
out
fisubrl
arpl
mov
jns
cltd
push
rorl
mov
push
ret
or
sti
cvtpi2ps
push
inc
test
in
sub
jl
shr
lods
sahf
adc
dec
and
shll
cmpsl
insb
out
movsb
xchg
and
jns
pusha
xchg
mov
mov
sub
adc
jbe
shlb
dec
mov
cmpsb
rclb
mov
outsb
sbb
cmp
in
cli
sti
push
mov
mov
scas
ljmp
add
adc
mov
loope
xor
push
arpl
int
inc
push
and
jl
xchg
hlt
xor
nop
scas
outsb
push
xabort
pop
insb
ja
pop
jl
adc
mov
sahf
xchg
pop
lcall
mov
jmp
add
add
stos
pop
mov
je
add
jae
or
test
mov
mov
xchg
test
hlt
adc
adc
addr16
mov
int3
jbe
mov
jb
mov
mov
or
or
fimull
clc
movsb
pop
push
out
sbb
push
xchg
repnz
xor
add
imul
cltd
sub
addb
mov
cmp
insl
int3
xor
outsl
add
add
out
in
sub
repz
insb
pop
fnsave
enter
aad
add
bound
minps
xchg
sbb
add
out
data16
js
or
out
inc
out
cmpsl
xor
jl
sbb
pop
lock
lds
or
sbb
mov
dec
cmc
icebp
mov
stos
cs
mov
jbe
popf
cmp
mov
adc
ds
dec
icebp
test
push
push
dec
cmp
scas
mov
pop
les
movsl
push
int
xchg
jg
push
lahf
bound
scas
ret
add
inc
out
push
push
mov
push
jo
sbb
or
lds
ret
dec
inc
out
lret
add
leave
fwait
cli
adc
scas
icebp
pushf
mov
or
dec
sub
in
sbb
mov
jl
mov
popf
pop
lods
out
fsubr
fidivrs
push
out
sbb
dec
stos
imul
scas
xchg
jnp
aam
mov
push
xchg
mov
cmp
xor
fadd
jno
mov
push
and
cmp
sahf
inc
pop
add
jecxz
sub
popa
mov
stos
dec
and
lods
insb
push
adcb
imull
push
pop
pusha
sarl
inc
mov
pop
and
mov
insl
movsb
mov
sbb
aam
adc
lcall
mov
insl
mov
xchg
imul
mov
mov
cmpsb
push
aaa
repz
push
and
sub
xchg
loope
cmpsb
adc
jmp
pop
xor
jo
dec
fistpll
iret
cwtl
daa
arpl
xchg
or
leave
add
jecxz
rcrb
addr16
mov
or
or
mov
sahf
dec
sbb
cmpl
pop
push
mov
and
add
loopne
push
test
mov
mov
add
push
jl
out
jl
lods
xchg
movsl
jo
test
lcall
inc
push
rorb
aad
push
adc
insb
lret
lret
xor
js
mov
into
xor
cmp
cmpsl
aas
fsts
xor
fld
add
sar
inc
xor
pop
push
jle
aas
lea
in
ja
testl
jecxz
out
inc
push
nop
jecxz
fs
mov
mov
enter
stc
xchg
rcl
cld
aam
inc
pop
scas
mov
aas
xchg
push
xchg
jecxz
pop
mov
rcrb
lret
lret
mov
add
pushf
jg
es
dec
je
xorb
jmp
mov
mov
pop
aam
movsl
in
mov
sub
loop
dec
incb
out
xchg
push
jne
adc
pop
dec
jecxz
ljmp
dec
in
push
into
jne
sbb
and
rep
pop
scas
aad
je
outsl
js
sub
mov
js
cmp
xchg
dec
xchg
mov
flds
sti
cmc
xchg
aaa
imul
cmp
lods
push
pop
js
push
icebp
dec
xchg
push
iret
sarb
out
push
push
outsb
fistps
ds
mov
adc
gs
adc
ficoml
xchg
xchg
mov
xor
add
insb
mov
mov
lds
mov
ss
inc
in
xor
leave
push
cmpsl
fcompl
aas
sub
or
dec
imul
ds
jmp
mov
mov
aad
imul
in
insb
mov
cli
mov
xchg
pop
lds
xchg
sbb
sbb
subps
xchg
aam
stos
mov
push
add
mov
pop
dec
gs
sbb
ror
nop
insl
ficoms
xor
icebp
mov
loopne
daa
in
lods
pop
mov
mov
inc
shll
subl
cltd
add
dec
test
jg
mulb
inc
fldl
nop
stos
movsl
sub
scas
push
push
subl
stos
mov
fwait
dec
mov
adc
jae
push
mov
push
sbb
jp
lds
inc
cmp
ss
lods
push
adc
sbb
inc
cmp
jg
sub
xor
add
jno
int
adc
pop
push
dec
mov
repz
inc
cld
mov
ja
xor
mov
ja
or
repnz
lods
and
out
mov
call
popa
mov
mov
inc
dec
aaa
mov
ret
dec
add
push
shl
lods
daa
ret
orl
hlt
icebp
fsubr
jbe
dec
jl
rclb
orl
mov
sbb
mov
sub
lods
int3
adc
mov
mov
call
xchg
push
push
mov
add
mov
or
add
es
push
js
mov
adc
mov
lret
call
dec
cmpsl
lds
push
mov
jb
sti
lock
push
es
bound
loopne
sub
cmp
cmc
test
ss
syscall
bound
dec
pop
stos
negl
scas
xor
cmp
test
pop
aaa
stos
addl
daa
popa
cmp
cmpsb
mov
call
rcrl
cmc
andl
xchg
add
dec
lcall
cmp
incb
clc
jb
pop
daa
dec
je
cmp
enter
cmc
in
movsb
jne
cmc
repnz
xor
shl
lcall
mov
lret
inc
jl
mov
jne,pn
scas
pop
mov
or
mov
je
adc
push
aam
pusha
cmp
stc
aam
mov
ficoms
adc
je
dec
xchg
xchg
cmp
cmp
push
mov
into
leave
mov
aad
daa
in
std
xchg
sub
cmp
arpl
daa
add
stos
and
add
data16
sbb
stos
adc
jge
adc
jbe
shld
icebp
movsb
sbb
push
dec
cmp
mov
jae
shrl
push
jmp
dec
or
push
push
aad
pop
repnz
cmp
out
daa
fwait
xor
test
push
nop
add
ss
xor
stos
out
push
repnz
inc
mul
nop
in
mov
dec
lods
dec
in
add
xchg
outsl
or
out
in
adc
or
cmc
fmul
out
into
xchg
in
daa
mov
mov
mov
dec
mov
pusha
fcmovne
iret
arpl
and
dec
fcom
out
and
or
push
dec
sbb
enter
xchg
cmp
addl
out
sarb
mov
pop
xchg
jne
sub
jle
push
xor
imul
out
loope
lret
mov
clc
in
sbb
shll
lock
iret
mov
fwait
fwait
sbb
lds
outsl
mov
movsb
scas
jo
scas
das
dec
dec
dec
stos
pop
lods
sbb
lcall
pop
sub
out
in
dec
ds
cmp
jecxz
and
rcr
or
cmpsb
cmp
clc
subb
stos
push
pop
fsub
xchg
lods
jle
sbb
insl
in
je
mov
loop
cmpsl
fs
jb
inc
mov
mov
inc
in
jae
fidivl
call
inc
into
jle
xchg
xor
adc
jecxz
add
xchg
inc
pusha
aam
push
dec
xchg
lahf
add
or
outsl
mov
stos
jle
xor
loope
addr16
rcl
mov
hlt
jge
cmp
xchg
jg
add
aam
lods
lret
mov
nop
mov
dec
lahf
lods
lret
sub
cmp
xchg
xchg
jae
stc
movsl
int3
addr16
pop
xor
out
xor
xchg
mov
inc
inc
push
out
xor
push
inc
mov
xchg
push
or
jb
lcall
mov
clc
dec
mov
cmp
sub
push
mov
repnz
fdivl
fistpl
jns
mov
fists
insl
inc
pop
pop
aam
mov
test
insl
mov
data16
or
mov
sub
add
inc
ljmp
mov
sbbl
and
dec
shrb
and
adc
clc
test
sbb
jge
jge
arpl
sub
popf
sbb
sahf
fwait
es
pop
iret
inc
scas
xchg
xchg
sbb
or
push
loopne
addr16
mov
push
sbb
jp,pt
ljmp
fistpl
push
dec
push
push
gs
add
out
orb
repz
mov
es
mov
cmp
adcl
dec
insb
repnz
push
rep
mov
leave
rcll
insl
push
mov
in
xlat
xchg
ret
out
sbb
cli
push
mov
push
or
pop
xor
xchg
jns
add
xor
mov
mov
jnp
icebp
adc
jmp
push
cli
push
loopne
inc
jle
push
xchg
adc
outsb
push
lds
hlt
xchg
dec
movsb
in
dec
stc
adc
dec
pop
sub
je
nop
iret
lret
es
add
orl
mov
sarb
cmp
jnp
mov
scas
iret
add
pop
mov
fcmovbe
jp
xchg
fsub
lahf
sub
into
jae
and
mov
jns
int
lods
cmc
test
xor
xor
add
cmc
xchg
sub
push
push
fisubl
dec
mov
inc
stos
lret
mov
mov
lea
dec
in
xchg
adc
jecxz
test
enter
add
ret
mov
inc
fiaddl
fdivrl
rolb
xchg
in
jmp
lods
xchg
add
lock
xor
push
sarl
mov
rolb
repnz
dec
or
fwait
int3
add
pop
gs
cmp
imul
cli
sbb
xchg
fdivrp
aaa
mov
cmpsl
add
cmpsl
stc
or
fistpll
das
in
das
mov
sbb
and
shrl
ret
sub
adc
mov
or
sbbl
pusha
xor
jo
pop
xchg
in
xor
out
sbb
lcall
sbb
jmp
test
push
int
mov
lret
bt
cli
pop
loope
sbb
sbb
test
sbb
daa
xchg
and
sarb
dec
push
or
jge
inc
test
jmp
jge
gs
aam
enter
sub
lods
push
loop
jle
sbb
fdivs
or
push
pop
cwtl
idiv
jo
ret
adc
orl
sbb
popa
push
jnp
push
xor
insl
ljmp
outsl
and
js
aaa
aad
add
mov
sub
adc
add
ja
lret
jbe
movsb
lods
jno
fmul
mov
cld
nop
clc
mov
lock
or
mov
inc
mov
in
movsb
xchg
in
fmull
mov
push
mov
movsl
pop
dec
in
cld
push
in
out
lock
or
inc
shlb
push
js
xchg
fs
jnp
cmp
fcoms
test
inc
sub
mov
xchg
das
jle
push
xlat
cmp
shrl
xchg
xor
js
sarl
push
icebp
negb
fnsave
adc
repz
loopne
es
icebp
jbe
mov
mov
mov
sub
inc
int
dec
divl
xchg
cs
sbb
in
xchg
jae
nop
in
mov
cmpsl
push
cmc
mov
mov
int
jg
and
and
loopne
pop
jns
mov
sub
add
cli
xchg
push
sub
jb
adc
shlb
dec
rcl
xchg
popa
loopne
out
or
clc
shlb
and
mov
jge
push
das
mov
cwtl
neg
imul
pop
ljmp
es
loopne
sbb
pop
movsb
in
inc
xchg
add
shlb
rorl
fists
fmul
faddp
out
les
std
jecxz
aad
repnz
add
popl
inc
pushf
xor
insl
mov
scas
mov
sarb
stos
push
movsb
in
test
mov
cmpl
je
sbb
push
js
pop
test
stos
dec
jl
rolb
lret
test
mov
mov
xchg
jno
pusha
rcrb
aam
sti
sbb
jbe
shrb
arpl
movsb
loopne
dec
sahf
cmpsb
cmp
arpl
sbb
popf
pushf
xchg
shll
arpl
gs
xchg
mov
sahf
outsl
iret
xchg
xchg
loop
sbb
in
fnstenv
mov
in
xor
into
das
adcb
pop
xchg
mov
sbb
jns
cmp
mov
ja
in
out
and
cmpsl
adc
js
or
xchg
fcoms
pop
ror
add
sbb
outsb
das
jge
nop
inc
pop
sarb
or
lahf
add
jmp
loope
jo
fs
xchg
and
xor
sbb
xchg
mov
pop
mov
test
or
subb
mov
sub
add
push
mov
or
imul
inc
imul
push
mov
fwait
iret
mov
push
popa
or
xchg
movsl
push
mov
pop
xchg
cltd
mov
xchg
sub
fnstenv
mov
pop
jle
add
sbb
neg
js
push
add
les
push
or
sti
lahf
or
adc
imul
push
and
dec
xchg
inc
stos
je
rolb
adc
shll
pop
nop
push
or
inc
lcall
add
add
test
pop
aad
shlb
pushf
fmuls
fnstsw
cmp
loope
sbb
jmp
aaa
es
push
adc
cmp
push
sahf
cmp
sbb
xadd
pop
icebp
leave
jle
or
out
pusha
cmp
adc
pusha
mov
push
outsl
xchg
mov
scas
std
mov
dec
ret
sub
lods
jnp
sbb
repz
mov
add
mov
xor
lret
repz
mov
and
pop
cmc
decl
pusha
lahf
scas
loopne
push
mov
pop
es
mov
xacquire
movb
dec
push
testb
les
mov
loope
insb
mov
test
aad
mov
mov
je
test
incb
dec
jecxz
sbb
push
pop
ret
data16
and
fiaddl
sbb
aad
ror
or
mov
popa
add
mov
outsb
inc
lods
aas
cmpsl
ljmp
xchg
mov
rclb
sub
imul
mov
mov
rclb
cwtl
xor
mov
sbb
or
imulb
dec
js
add
lret
jp
mov
iret
mov
iret
inc
mov
xlat
outsl
xchg
out
enter
pop
add
cwtl
ja
outsl
stc
out
sbbl
push
add
roll
lods
inc
push
aam
mov
fdivrl
and
out
push
test
and
outsl
xchg
cld
adc
push
mov
mov
add
pop
ds
mov
mov
push
les
cli
addr16
mov
jecxz
xchg
imul
jmp
mov
sub
jbe
hlt
cwtl
shr
jns
enter
icebp
insl
sbb
dec
cmpsl
xchg
ret
mov
add
mov
int3
int3
pop
mov
dec
rol
pop
insb
imul
mov
push
test
imul
and
push
shll
cmp
sbb
mov
leave
incl
jmp
dec
mov
outsb
mov
or
mov
cvtps2pi
fcomip
out
jbe
cmp
decb
cmp
xor
pop
jo
mov
xor
pushf
or
mov
jo
mov
aaa
pusha
mov
inc
repz
mov
sub
xor
sbb
test
outsl
mov
inc
inc
jne
pop
test
cmp
mov
pop
dec
int
inc
mov
jne
push
ss
loope
outsl
add
mov
pop
stc
ds
xchg
xchg
or
lods
xchg
and
dec
xor
shll
or
lret
cmc
mov
or
pop
imul
out
xor
shrl
loope
jno
scas
mov
fs
cmp
dec
das
mov
and
cltd
dec
icebp
shll
sub
rclb
sbb
lret
rclb
xchg
sbbl
mov
bound
lea
add
xchg
fsub
ret
subb
add
shlb
adc
jns
ret
sbb
and
add
out
push
mov
ds
outsb
dec
movsl
in
mov
sub
cmp
enter
shll
sbb
pop
push
sbb
aaa
aad
inc
cmp
stos
ljmp
data16
dec
pop
and
movsb
lock
fs
cmp
mov
subl
je
push
and
lahf
mov
or
inc
loop
and
in
pop
out
mov
jo
incb
inc
xchg
in
add
lds
test
or
ret
dec
add
scas
dec
outsb
or
dec
mov
pop
adc
lock
inc
xor
xor
lods
add
das
lock
cmp
mov
inc
ljmp
sbb
es
xor
out
dec
mov
cmpsl
jge
and
push
outsb
outsl
test
ljmp
iret
rclb
cmp
push
imul
cs
lahf
mov
mov
mov
xchg
fstp
mov
and
jae
subb
in
jge
mov
xor
or
add
roll
xchg
pop
lcall
add
out
jb
dec
out
leave
popf
push
ret
repnz
mov
inc
lds
test
std
in
hlt
jnp
xchg
sub
dec
lods
jb
sbb
in
and
inc
lret
shrl
call
int3
mov
xchg
pop
ret
sbb
xchg
je
dec
jmp
test
and
aad
add
ret
sbb
daa
mov
lcall
or
in
cmp
imul
aaa
pop
call
hlt
into
popa
inc
or
stos
ds
into
jmp
jg
in
push
loope
jae
adc
pop
js
mov
jae
les
lret
inc
inc
mov
inc
loop
or
ja
outsb
int
das
push
dec
dec
insl
daa
and
shrb
sti
mov
test
into
hlt
testl
mov
add
lods
sub
dec
lahf
cmp
xor
cmp
fcomps
pop
jne
fists
push
ljmp
insl
test
fidivrs
test
xchg
bnd
inc
sub
adc
mov
das
jge
sbb
cld
imul
shlb
cmp
push
sbb
lret
mov
mov
inc
movsb
es
push
mov
repnz
insl
mov
stc
push
mull
mov
push
lcall
sbbb
mov
test
inc
lret
jp
and
mov
adc
sub
xchg
dec
stos
inc
add
pop
pop
cmp
dec
sarl
cmp
vmwrite
mov
in
aaa
add
out
cmp
pop
fisubl
xor
xor
cmp
inc
sbb
ljmp
sub
inc
int
pop
shlb
pop
repz
cli
adc
add
inc
fwait
outsl
stc
jo
mov
test
cmp
jle
dec
loopne
hlt
movsl
cmp
cmpb
ds
nop
xchg
jnp
mov
test
mov
add
out
pop
pop
push
ss
xchg
or
sub
push
push
insl
or
and
daa
xor
sub
jb
rclb
xor
mov
outsl
das
pop
jecxz
sub
push
pop
enter
xchg
sbb
fmul
dec
adc
mov
ret
or
cmpsl
cli
push
addl
add
mov
mov
adc
sbb
lcall
ds
rcrb
lods
mov
or
jo
add
push
dec
subb
dec
aad
mov
pop
jmp
xchg
inc
xorps
outsb
addl
cwtl
popa
mov
les
sub
aas
subl
rcll
icebp
in
dec
movsl
out
sahf
ljmp
cmpb
movsb
sub
fcomps
pop
out
and
and
xchg
lock
xchg
sbb
hlt
cmp
fistl
andb
scas
and
lds
hlt
sbb
sub
mov
add
xchg
orb
fsqrt
out
mov
dec
sbb
adc
sub
sbb
out
xchg
inc
addl
int
or
stc
lahf
adc
cmpsb
dec
sub
mov
repz
insb
adc
fldenv
mov
mov
imul
mov
cmp
adcb
aad
lcall
outsl
pop
repnz
push
and
outsl
add
jo
out
xchg
xor
sub
repz
testl
int
jb
pop
aad
adc
test
in
sub
or
push
repz
xor
sbb
push
aam
fnsave
or
std
popa
cmpsb
mov
inc
aas
rorl
jne
outsb
add
mov
scas
aaa
cmp
mov
push
in
hlt
test
call
mov
mov
push
dec
push
cld
scas
xor
mov
push
dec
cmp
stos
xor
jo
cmp
xchg
cmp
jbe
cmp
lcall
dec
and
adc
lret
lods
inc
pop
outsl
in
daa
mov
stos
mov
aad
loopne
arpl
or
cmp
adc
scas
pop
lcall
cmp
sub
roll
xlat
fisubs
movsb
jb
sbb
pop
addr16
cs
mov
xor
pop
xchg
cmp
cmp
jg
cmpsl
sti
in
imul
mov
jg
mov
mov
out
push
jne
cmp
xchg
ja
pop
add
xchg
scas
pop
imul
fnstcw
lret
mov
sub
sbb
jne
sbb
xlat
mov
in
sub
mov
mov
jecxz
xchg
mov
add
das
rorl
add
fdivr
clc
cmp
push
sbb
mov
jbe
dec
in
fwait
push
js
sbb
mov
inc
test
sbb
adc
mov
adc
in
dec
shlb
jbe
mov
cmp
repz
adc
add
in
negl
jne
adc
popf
jp
das
sbb
mov
jb
je
in
mov
out
cmc
jo
pop
mov
inc
or
push
enter
dec
icebp
std
adc
sahf
mov
divl
imul
loopne
neg
jne
fldl
rol
mov
inc
adc
hlt
sub
lahf
pop
pop
push
mov
loop
jae
dec
nop
in
or
and
sbb
scas
jno
sub
cmp
fidivrl
sbb
sahf
and
and
aad
sbb
gs
daa
mov
push
hlt
movsl
cmp
cmp
mov
push
das
cli
xchg
sbb
push
outsl
hlt
out
mov
and
fsubs
je
mov
fidivrl
xchg
sahf
xchg
fisttpll
adc
adc
dec
lcall
push
cmp
pop
insl
lods
ljmp
dec
xor
loope
dec
fwait
in
cmpsb
sub
inc
rcl
mov
jbe
subb
jmp
testl
mov
lahf
cs
aad
rcrb
iret
pop
ficompl
pusha
add
cmp
sub
enter
pushf
add
aaa
sub
fstpl
push
adc
mov
cmp
movsb
lahf
loope
insb
addb
mov
int
jbe
leave
sti
cmpsb
ud2
mov
stos
imulb
mov
cwtl
dec
jnp
cmpsb
xchg
in
je
pop
test
jne
or
je
testl
and
movsb
jns
mov
jecxz
mov
iret
push
jmp
cmpl
pop
and
cmp
notb
sarl
sub
mov
pop
lahf
xor
jle
repz
bound
lds
push
push
pushf
es
fs
jle
int
testl
les
xchg
cmp
cmp
push
je
add
movsb
fisttps
lcall
mov
or
sbb
mov
mov
mov
ljmp
std
push
mov
sbb
xchg
negl
loope
cmpsl
xchg
jl
out
inc
dec
cmp
adc
movsl
adc
cli
shrb
addl
dec
cld
mov
jo
or
xchg
loope
mov
cld
dec
adc
pop
lds
add
jmp
sarb
pop
ljmp
mov
ret
xor
jnp
outsl
and
ret
daa
mov
aaa
xchg
leave
mov
iret
enter
je
out
mov
push
push
adc
fwait
movsl
push
pop
adc
pop
mull
mov
sbb
push
int3
cltd
adcl
repz
dec
cmp
data16
ficoml
or
int
xadd
mov
inc
es
gs
dec
js
test
mov
arpl
in
jecxz
add
je
out
das
sbb
pop
pop
stc
mov
in
add
shlb
lcall
or
iret
dec
stos
lea
ds
xchg
or
lock
negb
jge
insl
xchg
bound
mov
int
mov
pop
inc
cli
ljmp
sub
hlt
cmp
jecxz
subb
lahf
lret
repz
sub
cli
loop
mov
fcomps
movsl
pop
adc
cwtl
testb
js
sbb
enter
ja
popa
rorl
jne
sbb
xor
and
mulb
sbb
xlat
jb
movsb
repnz
popa
cmc
jmp
sahf
adc
jecxz
outsl
pop
add
pop
or
mov
or
lcall
sahf
push
lea
mov
cmp
adc
adc
cmp
pop
push
shrl
add
call
xor
adc
lock
cmp
add
mov
ja
mov
push
repnz
lods
jecxz
xchg
jb
and
data16
xor
mov
dec
push
int
fstps
imul
push
mov
inc
out
stos
sbb
subl
ss
out
pop
pop
xchg
mov
aad
or
shlb
test
dec
sub
data16
adc
sub
mov
push
lods
imul
mov
dec
insb
in
dec
aam
stos
dec
jno
pop
test
mov
mov
lods
js
stc
mov
repz
ds
jle
test
sub
cmp
and
mov
xchg
and
jecxz
inc
ds
add
mov
loopne
test
into
jb
mov
dec
adc
arpl
insb
lds
xchg
test
enter
addb
xor
aaa
or
sbb
cmp
inc
loopne
sub
fsubrs
int3
out
add
sbb
in
rorl
jns
pop
fwait
pop
push
and
lahf
es
insb
imul
adc
and
push
mov
and
bound
mov
pop
jnp
jecxz
fsubl
lock
mov
xchg
pusha
sub
inc
and
jb
jno
dec
ret
push
or
pusha
leave
cs
dec
lcall
xorb
sbb
testb
lods
loop
mov
cmc
push
sahf
push
pop
pop
mov
or
push
push
dec
jnp
inc
or
push
push
jle
aas
fwait
insb
ffreep
jle
shll
push
dec
mov
mov
dec
sbb
jle
cltd
insl
sar
outsb
pop
pop
jle
jbe
cld
dec
mov
inc
cmp
and
and
adc
fs
fildl
outsl
mov
jp
inc
add
icebp
imul
mov
aad
test
aas
test
push
outsb
xor
cltd
and
cmpl
bound
xchg
mov
orb
sbb
push
jl
jle
jno
inc
mov
cmpsl
loop
fsubs
add
addb
test
aaa
cs
into
cmp
and
lcall
and
jne
cli
mov
mov
js
add
insb
add
inc
and
or
push
cmpsl
cmp
aam
jl
lods
sbb
mov
cmp
in
fimull
pop
adc
mov
push
andb
sub
fcomp
daa
popf
sub
jnp
imul
cltd
lods
sarb
lret
dec
das
in
dec
pop
cmp
dec
sub
mov
repz
rcll
mov
add
sub
imul
mov
push
jmp
mov
sbb
lret
sub
mov
xlat
in
adc
and
push
cmp
sbb
aad
pop
repz
pop
add
adc
push
sub
pusha
popf
pop
sbb
imul
jnp
in
cld
pop
stos
cmp
jmp
in
inc
clc
jbe
out
test
fidivl
inc
sbb
nop
and
fcomp
das
pop
mov
mov
into
xor
add
push
addl
xchg
enter
je
dec
inc
mov
test
test
ret
pushf
repnz
clc
pop
js
filds
mov
sub
outsl
aad
leave
pop
inc
daa
cmp
lea
stc
sbbb
sub
push
enter
icebp
xchg
js
xchg
mov
xor
fnstcw
xchg
hlt
out
jae
push
pop
and
out
mov
lods
daa
ja
andl
mov
push
push
cltd
mov
cmpsb
pop
scas
hlt
add
or
mov
lods
int3
lcall
add
sahf
popa
daa
stc
pop
or
test
cmpsl
in
push
outsl
pop
inc
push
daa
push
pop
jnp
leave
arpl
inc
sbb
nop
dec
jns
mov
pop
test
add
fsubl
sbb
lds
shrb
pop
cmp
aam
xor
leave
cs
jnp
jo
push
pusha
ja
or
push
pop
sbb
dec
in
adc
and
push
aam
mov
repz
or
cmp
mov
stos
lods
mov
lahf
notb
mov
sbb
popf
test
dec
icebp
mov
fwait
notb
mov
jg
test
xor
rorl
popa
inc
int
addl
jge
sbb
outsl
mov
in
out
cld
mov
cs
aam
sbb
jge
cs
shll
pop
add
testl
and
push
cld
jnp
push
add
movsl
fs
cltd
lods
das
jne
int3
or
scas
insl
jnp
cmp
cli
jle
inc
mov
mov
loope
rcrb
scas
call
arpl
mov
jb
dec
outsl
int3
js
mov
cmpsl
pusha
cmpsl
stc
lock
push
pop
scas
loopne
bound
mov
add
xchg
mov
insb
or
test
pop
mov
std
cmpsl
cmc
icebp
adc
xchg
shll
xchg
adc
sub
neg
loopne
shrl
leave
xchg
repz
xchg
adc
clc
adc
xor
pop
shll
test
loope
insl
mov
stos
dec
dec
mov
push
mov
shrl
jo
and
mov
movsb
sub
movsb
popa
push
arpl
jp
popa
gs
divl
leave
daa
inc
dec
das
sub
cmpsb
pop
and
notl
push
mov
xor
std
pusha
in
jmp
cwtl
ss
dec
push
sbb
ficompl
cld
dec
imul
or
imul
arpl
xor
faddp
pop
shll
dec
fsts
lar
adc
stos
jle
add
call
mov
outsl
int
xchg
js
xor
loope
fwait
sub
add
push
rorb
ljmp
test
popf
or
jnp
out
jns
pusha
inc
pusha
mov
daa
mov
push
rclb
loopne
cmp
shrl
cs
pmaxub
cli
or
inc
aad
add
xchg
or
js
pop
pop
or
push
fdivr
or
adc
fisubl
push
stos
jno
or
ffree
sub
insl
inc
clc
push
cmp
or
nop
inc
push
dec
and
imul
jge
decb
mov
push
push
xorb
orl
fistps
pop
xlat
xor
or
dec
jo
mov
out
pop
aad
cmp
xor
shll
sarl
ret
gs
iret
sbb
dec
icebp
sbb
hlt
jmp
cmp
push
xchg
pusha
imul
rorb
xor
jg
lock
mov
dec
push
repz
pop
jg
push
in
sbb
pop
je
dec
cli
sbb
or
in
in
adc
loop
iret
mov
fildll
nop
cmpsb
pop
std
and
out
sahf
loop
shll
gs
mov
dec
mov
sarl
mov
adc
stos
nop
xchg
mov
fnstsw
aas
sti
fcomip
or
or
pop
inc
cmp
push
sbb
mov
xchg
mov
push
push
mov
pushf
lret
mov
cld
push
and
dec
lcall
clc
sub
jns
popa
mov
adc
int3
and
jnp
scas
test
mov
movsb
add
mov
cmp
inc
sti
push
pop
pop
xchg
fisubrl
lret
ss
xchg
pop
xor
or
sub
cmpsl
mov
daa
cmp
bound
into
cmpsb
pop
pusha
xchg
pop
pop
lret
dec
mov
arpl
setge
mov
jb
inc
leave
in
mov
mov
lods
mov
inc
adc
sti
or
cwtl
aam
mov
js
push
lods
adc
insl
fildll
or
jo
push
mov
push
lret
inc
inc
stc
pandn
pop
fs
scas
fwait
bswap
inc
jp
rcrb
dec
push
ja
jmp
and
out
sbb
add
push
mov
or
arpl
mov
dec
cmc
sub
mov
dec
mov
jbe
cmpl
or
xchg
loop
pop
xchg
mov
pop
mov
mov
mov
adc
je,pt
rorb
andl
mov
mov
jb
adc
movsl
sub
test
fdivp
mov
ljmp
inc
jae
sbb
bound
int
cltd
int3
rolb
dec
mov
xchg
into
loope
push
int3
movl
xchg
cmc
stos
fisubs
dec
shlb
lds
test
fisttps
scas
mov
and
jns
shll
sbb
mov
cmp
pop
xor
ljmp
cmp
jbe
aaa
ja
add
pop
mov
adc
imul
inc
js
adc
mov
dec
rol
ficompl
cs
push
cmc
inc
outsl
fcoms
add
in
sub
mov
add
iret
sub
imul
pop
sub
insl
pop
xor
sub
lret
lds
rcrb
cmc
sub
jne
jne
imul
leave
and
test
test
inc
addr16
pushf
jmp
lret
ret
scas
jb
xchg
and
xchg
pop
and
fdivrs
js
xchg
lahf
mov
cmp
mov
cltd
jl
aaa
add
mov
mov
cmpsl
aad
push
and
mov
mov
jnp
outsb
int
adcb
mov
xor
or
cs
fsubl
in
push
jae
lret
lock
repnz
mov
jg
mov
test
cmp
jp
fdivr
scas
and
lahf
sub
jnp
and
rorl
mov
lods
enter
lcall
rorb
aad
push
mov
pop
adc
and
adc
sbb
sbb
stos
push
lock
loop
ficomps
adc
lgs
test
adc
loop
dec
xchg
push
call
aas
sbb
adc
scas
adc
mov
rcrb
xor
xchg
xor
cs
and
add
xchg
xchg
pop
mov
dec
cmp
mov
ficomps
pop
push
mov
push
inc
inc
icebp
inc
mov
rcr
xchg
icebp
out
ja
mov
cmp
shlb
push
ss
jbe
sub
fs
sarl
cmp
loopne
fwait
inc
repnz
jb
mov
cmc
cmp
adc
and
test
imul
out
pushl
mov
mov
aad
repnz
aam
jb
xchg
and
push
scas
leave
add
jmp
out
decb
rolb
pop
fisubl
push
xor
leave
cmpsl
popf
lea
cmp
loope
pop
jbe
daa
mov
dec
mov
sub
out
jmp
addr16
and
sbb
aas
inc
xor
jg
fidivrl
imul
mov
mov
ja
sub
fwait
mov
pop
jge
pop
mov
sti
addr16
hlt
adc
sub
lods
adc
bound
in
push
mov
ret
adc
movsl
arpl
ja
or
negb
test
cli
jl
jne
jb
mov
mov
addr16
testl
stc
ja
mov
pop
in
and
rclb
test
es
mov
adc
mov
jg
xor
cltd
push
cmc
pop
test
loope
push
xlat
ret
adcb
mov
sbb
and
and
push
stc
xchg
push
mov
xor
addr16
sbb
or
fnsave
sarl
cmp
sub
bound
scas
addr16
xor
daa
stc
sti
iret
mov
sbbl
popf
repnz
pop
push
dec
scas
lods
sbb
mov
xchg
inc
pop
jecxz
and
or
xor
jne
xchg
pop
ja
pushf
aad
adc
imul
cwtl
movsb
push
lods
ret
popf
add
and
cwtl
inc
out
fs
and
xor
and
sbb
sub
or
outsb
fimull
pusha
faddl
or
gs
jecxz
dec
adc
cmpsb
imul
cmp
dec
dec
inc
lret
into
mov
gs
daa
movsl
aas
jp
cs
sbb
xor
mov
outsb
imul
repnz
mov
call
sahf
push
xchg
sbb
mov
cmp
cs
in
test
sar
decb
or
push
loopne
inc
sahf
add
sub
jg
dec
out
cmp
sahf
jmp
fcmove
loope
adc
fcoms
mov
push
pop
aam
stos
mov
jg
loopne
inc
fsubrs
push
in
scas
aas
jne
sub
mov
loop
dec
sub
add
inc
je
adc
imul
sub
pop
popf
cld
insl
insb
fwait
mov
mov
fs
pop
inc
inc
js
das
dec
jge
cli
xchg
mov
cli
sub
dec
fisttpll
xchg
dec
inc
fcomps
cltd
iret
test
or
sbb
xchg
mov
sarb
jmp
shr
mov
sub
jmp
push
pop
or
jge
decb
call
testl
jns
mov
test
mov
xchg
mov
pop
cltd
in
lods
add
outsb
stc
sub
cmp
cmp
xchg
arpl
xchg
adc
xor
in
test
fiadds
aad
xchg
push
xchg
inc
frstor
lahf
sahf
test
add
inc
hlt
cld
int3
jl,pt
in
or
rcrl
adc
adcl
add
xor
mov
nop
sbb
xchg
jbe
push
hlt
shlb
sahf
cwtl
shrl
lret
les
popa
mov
xchg
mov
sub
lods
cmp
pop
jno
xorl
fistl
ret
sbb
rclb
jg
lods
inc
xchg
sarl
mov
dec
push
adc
dec
repnz
and
lret
xchg
pop
jae
js
mov
cwtl
js
negl
xchg
mov
in
jne
cmp
inc
movsl
pop
inc
cmp
cli
arpl
cmp
or
lret
push
mov
jge
pop
loope
pop
mov
dec
in
lds
insb
pop
and
xor
mov
or
inc
jo
sub
pushf
jl
lods
sub
inc
out
sub
push
sub
pop
fmuls
out
aam
cmp
adc
rcl
inc
and
or
mov
stos
imul
or
mov
subb
jo
imul
sbb
add
loopne
mov
out
fidivrs
aad
popa
pop
call
mov
dec
scas
bound
test
jle
sub
inc
pop
sub
mov
push
aad
imul
and
xchg
pop
mov
xor
mov
push
rclb
and
xorl
pusha
xor
sbb
cltd
ja
test
insb
mov
xor
mov
add
xchg
adc
or
cltd
sub
lcall
in
pop
cwtl
ret
pushf
and
jle
or
jg
out
std
dec
mov
push
lea
into
call
inc
ss
fnstcw
cli
jne
or
cld
push
scas
mov
or
push
lret
mov
imul
adc
add
jmp
clc
sub
or
adc
popl
je
pop
icebp
xchg
push
pop
fldl
stc
inc
sub
incl
lock
and
lcall
xchg
push
or
sarl
sbb
sbb
jnp
aam
pusha
sti
push
sub
lret
push
push
dec
pop
outsb
das
mov
mov
out
mov
inc
lret
dec
xorb
dec
scas
xchg
or
xchg
pop
xchg
icebp
xor
adc
ss
mov
negb
add
jne
imul
popf
stc
sub
xchg
nop
mov
mov
cld
repnz
cmp
movb
jne,pt
push
mov
sbbl
fxch
in
adc
leave
orb
cmp
jge
rolb
mov
cmp
and
push
push
shrb
xchg
pop
test
out
sbb
cld
sub
or
inc
lock
cmp
mov
imul
push
add
and
or
je
test
push
sub
cmpsb
int
cmpsl
add
inc
call
add
lahf
pop
sub
sarb
popa
pop
loope
rolb
ds
sbb
in
lahf
xchg
lcall
test
jl
ret
pusha
out
mov
insb
fldenv
mov
xchg
xchg
std
fldl
cmc
ja
and
adc
push
jne
cmp
shrb
adc
xor
cld
adcb
ljmp
enter
in
aas
stos
int
das
sahf
sub
andl
xchg
outsb
inc
xchg
out
imul
push
test
push
out
mov
jmp
inc
or
mov
cmp
xor
jp
xchg
xor
mov
mov
lahf
push
sti
add
dec
hlt
xchg
adc
ficoml
adc
mov
scas
test
inc
mov
and
out
pusha
popa
dec
mov
dec
leave
add
xchg
aam
les
outsb
lods
aaa
dec
xor
aas
adc
mov
mov
fneni(8087
mov
and
cmpsl
das
xlat
in
inc
mov
jp
jo
mov
mov
cmpsb
fsub
bound
add
inc
idivl
popf
mov
sbb
gs
push
or
fisubs
call
sbb
mov
iret
cltd
add
fwait
mov
mov
cli
sbb
add
inc
inc
mov
mov
pop
and
jp
out
fstps
loop
xor
sbb
lret
int3
mov
scas
out
movsl
add
lds
in
push
call
cmpsl
ret
outsb
mov
int3
mov
pop
add
in
nop
mov
pop
add
cmp
idivl
addr16
lds
jno
mov
mov
cmp
jno
or
testl
jbe
cmp
scas
loop
sub
daa
sub
dec
fimuls
or
shll
push
pop
mov
test
leave
sub
scas
popf
jg
cmp
push
gs
dec
sub
jae
fnsave
sub
or
cmp
pop
add
gs
mov
outsb
idivl
mov
cmp
bound
in
movsl
inc
out
scas
scas
mov
sub
inc
jg
inc
movsl
ficoms
push
outsb
sub
int
xchg
inc
pop
sub
jnp
sbb
mov
or
xor
and
or
lret
std
push
sbb
testl
cltd
jno
in
cmp
pop
rorb
mov
movsl
mov
push
fsubr
mov
or
shlb
movsb
push
adc
pop
adc
les
jp
add
cmp
mov
lcall
mov
add
push
mov
mov
js
fisubs
pushf
add
mov
mov
xchg
mov
mov
jbe
pop
ljmp
cmp
mov
sahf
add
ljmp
xchg
aas
cmp
mov
lret
add
test
push
push
int
mov
push
leave
pop
outsl
mov
and
repz
loopne
leave
push
xchg
insb
sub
std
and
filds
fidivrs
jo
test
scas
lods
aaa
les
or
or
pop
loop
push
add
mov
mov
lret
xchg
aaa
loop
sub
xchg
cmp
add
mov
add
jno
cli
adcl
mov
int3
daa
arpl
ret
mov
cmp
mov
lods
inc
rol
cmpsb
cmp
add
mov
popa
lods
popa
inc
inc
mov
and
enter
gs
jo
push
inc
and
push
add
or
push
stc
in
orb
inc
xor
mov
out
out
xor
inc
cli
lods
ljmp
lcall
cld
inc
add
add
cmpsb
roll
mov
sti
mov
cmp
pop
mov
nop
sub
dec
test
lods
mov
jno
sub
mov
adc
inc
sbbl
fistps
stos
enter
jb
pop
mov
in
lock
gs
stos
xchg
mov
push
pushf
dec
push
dec
insb
lcall
sub
dec
and
roll
sarl
jecxz
aaa
pop
mov
stos
je
cmp
push
fmul
sbb
adc
inc
sbb
mov
dec
jge
xor
in
les
arpl
sbbl
xchg
sbb
lea
push
jl
iret
les
int
fstpt
cld
pop
xor
imul
add
test
pusha
bound
negl
xchg
int3
sti
mov
aad
test
into
mov
push
mov
cmp
mov
loopne
mov
dec
dec
shll
cmp
mov
dec
xlat
dec
loop
adc
out
ret
and
xchg
xchg
pushf
insb
aam
call
mov
data16
lea
push
sbb
and
cs
stos
ret
xchg
out
mov
fisubl
jno
or
inc
lods
or
and
sbb
pop
scas
add
push
mov
int
mov
cltd
ret
jp
adc
andb
insl
sub
nop
mov
mov
mov
ja
jae
bound
adc
inc
repnz
xor
addr16
cmp
sub
jg
sbb
push
mov
mov
test
daa
xchg
iret
jnp
dec
lods
add
xchg
aaa
outsl
pop
push
imul
and
std
push
and
gs
and
hlt
mov
pop
addr16
gs
pop
aam
enter
inc
lcall
mov
std
pop
shl
popl
aam
sub
in
mov
pop
mov
out
jp
jnp
xchg
dec
adc
mov
fmul
xchg
mov
fisttpll
std
cmp
pop
hlt
stos
cmp
int
sub
and
lcall
enter
xor
xor
pop
negb
insb
push
pop
and
sub
mov
icebp
movsl
push
jbe
shl
js
rcr
push
test
cmp
sbb
or
jecxz
add
jge
insb
add
sbb
add
iret
push
push
add
pop
movd
push
cmp
sub
mov
or
push
ja
ficompl
lret
movsb
cwtl
sub
adc
int3
or
dec
dec
cmp
stos
or
mov
shlb
lds
iret
cmp
sbb
jge
jbe
jnp
movsb
dec
add
adc
mov
rcrl
push
dec
fcmovbe
cmp
mov
mov
psubsb
adc
ret
lods
loope
push
inc
repnz
sub
subl
mov
fistl
lcall
ss
xchg
leave
cmpsb
cmp
jg
adc
call
adc
sbb
call
mov
mov
imul
add
sub
pop
lret
loope
pop
or
adc
adc
xorl
cmp
inc
fstpt
or
lds
adc
add
dec
fstpl
jle
out
repz
add
test
or
add
sbb
mov
mov
scas
dec
push
jl
jns
push
adc
mov
dec
pop
mov
rorb
in
jmp
shlb
mov
push
fs
sbb
mov
xor
popf
dec
fstpl
scas
inc
mov
out
lahf
push
dec
add
mov
subb
iret
or
lret
push
test
pushl
je
mov
or
movsl
pusha
mov
inc
ficoms
jnp
push
xchg
sbb
and
sbb
jl
mov
vmread
dec
data16
sub
adc
dec
ss
mov
loop
lret
xor
jno
xchg
fcomp
sbb
sbb
sub
dec
rcll
cmpsl
adcl
mov
or
fs
jno
mov
imulb
insl
int
cmpsb
add
xchg
fistpll
or
imul
gs
lock
jae
out
fwait
mov
popa
sub
sub
lret
sbb
shrl
cwtl
popf
pop
loopne
dec
push
pop
in
push
lcall
mov
sahf
movsl
inc
or
add
jns
xor
test
cltd
ret
pop
es
push
cmp
test
sbb
jno
lret
cwtl
sti
call
mov
push
jecxz
dec
sub
js
and
pop
mov
add
nop
cmp
inc
sti
lock
fldenv
imul
add
dec
jo
sbb
and
and
or
cld
add
add
jp
aad
pop
jbe
jns
dec
loope
and
mov
add
fildl
xchg
sub
gs
cld
mov
push
ficoms
fimull
sub
cltd
push
and
ret
fistps
mov
aas
adc
pop
push
scas
pushf
push
test
lret
loope
leave
ss
xchg
aam
adc
pusha
jno
and
cmpsb
jp
test
rolb
sarb
inc
xchg
scas
in
inc
cmp
xchg
iret
cmpb
adc
jg
enter
or
daa
sub
cmp
xchg
xor
sbb
push
dec
mov
das
int3
enter
or
popa
repz
outsl
addb
adc
cmp
mov
add
mov
mov
arpl
jae
imul
or
jbe
les
mov
arpl
pop
aam
ss
inc
cltd
cmc
out
daa
roll
ja
loope
lods
push
cli
hlt
cmpb
add
in
es
and
stos
push
xchg
mov
adc
mov
jp
mov
outsl
testb
shll
xor
xchg
adc
leave
sti
xchg
out
lahf
xchg
push
mov
cmp
lret
int3
ror
dec
sub
out
psadbw
das
lods
dec
rcr
in
sub
inc
popa
sbb
xchg
xchg
lock
sbb
xchg
xchg
dec
adc
orb
jae
adc
and
lds
adc
sbb
sbb
inc
jae
test
and
or
fidivs
test
mov
ljmp
sbbb
xchg
xchg
fisttpl
mov
push
cmp
test
xchg
cmc
repnz
push
sub
mov
mov
fsts
push
lahf
jp
pop
cmp
lods
mov
or
test
inc
movsl
lahf
cmpsb
daa
pop
loopne
das
push
mov
mov
int3
push
mov
sbb
int
andl
cmp
scas
xchg
aas
mov
push
in
inc
and
cs
mov
pop
sub
adc
inc
ret
jae
cltd
sbb
lret
call
cmp
pop
enter
jbe
ss
mov
xor
lods
mov
jmp
loop
adc
aaa
scas
sub
outsl
jge
jns
adc
shl
pop
jno
push
rclb
mov
cmp
jns
fdivrs
fcoml
inc
ret
fldcw
hlt
mov
arpl
sbb
sub
push
popa
jno
fcomi
mov
pop
pop
lds
orl
movsl
aas
popf
enter
fildl
mov
jbe
in
into
cmp
mov
test
lds
es
inc
push
mov
cmpsl
ds
mov
fimull
rclb
and
push
pop
outsl
aas
fs
jns
bound
add
fucomi
popa
push
dec
mov
iret
pusha
inc
pop
dec
or
imul
cli
es
fists
and
negl
jg
outsb
dec
loop
mov
pop
pop
xchg
mov
xor
subb
ffree
or
pushf
fisubl
xchg
cli
xchg
inc
sti
sbb
sub
cltd
out
and
ss
mov
pop
mov
mov
dec
lods
xchg
cmovae
addr16
hlt
jb
rorl
dec
jae
and
pop
inc
xchg
xchg
fcoms
sub
test
cwtl
popf
cld
inc
stc
push
dec
out
sub
pop
xor
push
fsubrs
int
pushf
clc
and
repz
dec
sbbb
ret
dec
mov
stc
add
and
cmp
lods
lahf
jae
ja
xchg
and
mov
sbb
mov
xchg
add
sub
xor
inc
and
jecxz
fs
and
ja
lret
fisubrl
icebp
lcall
dec
in
out
inc
mov
sahf
push
bound
mov
and
sbbb
lret
shll
mov
dec
popf
loop
inc
sub
or
dec
pop
xchg
in
push
jbe
daa
popa
push
ret
cltd
cmp
test
ret
movsl
push
push
aam
cmp
dec
mov
loop
push
jp
insl
jb
fldl
cmpsl
add
mov
mov
test
push
add
mov
adc
loop
mov
js
sub
push
mov
jne
jo
mov
ja
ds
into
mulb
sahf
push
sti
inc
jo
repz
enter
xchg
lahf
rcl
lahf
pop
mov
js
fdivp
sub
pop
dec
hlt
adc
enter
and
sahf
loope
ja
imul
loope
scas
and
mov
add
push
and
arpl
movsb
cmp
aaa
jl
mov
mov
or
pop
xchg
xor
or
jo
in
sub
out
xchg
xor
pop
or
or
xor
stc
insl
push
xor
fcoms
aad
loopne
sbb
inc
shlb
sub
or
dec
mov
mov
and
mov
mov
fidivl
xor
adc
adcb
inc
pop
iret
or
cmp
fidivrs
lea
jo
adc
dec
in
roll
stc
mov
mov
out
or
sbb
xor
xor
adc
frstor
and
lods
popf
lods
pop
cmpsl
push
je
jle
fildll
and
cmp
push
jbe
dec
mov
mov
or
or
xlat
mov
rorb
adc
push
mov
lahf
lods
adc
inc
jle
adc
insl
pop
lods
movsl
mov
bnd
xchg
popa
ja
add
jmp
jne
jo
dec
xlat
sub
push
mov
jmp
jno
inc
loope
hlt
push
add
fisubl
cmp
pop
push
mov
adc
xchg
pushw
loopne
sbb
xor
mov
jmp
push
or
xchg
sub
mov
or
adc
hlt
sbb
out
jae
ficompl
xor
loopne
sbb
sbb
sbb
push
inc
popa
out
and
and
mov
push
insl
and
lea
or
mov
pop
fucomip
jae
subl
sub
sub
sbb
lds
shrl
notl
mov
dec
shr
add
cmpsb
pop
mov
xchg
fsts
out
rol
stc
in
mov
paddq
adc
loope
in
push
daa
and
cli
dec
mov
mov
mov
cmpb
pop
es
ds
add
inc
test
push
loop
adc
lcall
dec
imul
out
aad
jp
mov
bound
push
inc
xchg
sub
jp
and
jno
fimuls
out
xchg
cmp
and
jge
jl
test
adc
cli
mov
popf
inc
int3
test
ds
mov
and
xor
call
andb
imul
mov
mov
cltd
data16
mov
je
mov
aas
mov
test
sbb
fmul
pop
and
lock
mov
movsb
rcr
push
ror
pop
jecxz
arpl
popf
push
sbb
sti
nop
sbb
in
insl
pop
mov
popf
shl
cmp
jg
js
rclb
and
xchg
andb
out
popf
repz
push
mov
sbb
mov
insl
in
push
and
dec
imul
pop
lock
xchg
clc
push
mov
loop
cmp
test
and
sbb
inc
sub
popf
mov
or
xor
fsubrs
jbe
es
scas
sbb
outsl
popf
sub
xchg
in
or
jne
cmp
hlt
or
inc
testb
sbb
jno
test
pusha
testl
insl
cmp
fdivs
push
jnp
ret
rcll
das
into
sbb
or
cmp
pop
in
shll
cmp
xor
out
pop
call
gs
mov
jbe
push
cs
pop
shlb
imul
fidivrl
out
imul
pop
cmpsb
aad
jne
lret
adc
sub
push
sbb
cmp
fadds
ficompl
outsl
xchg
addr16
nop
std
aad
push
cmpl
and
mov
dec
adc
pop
mov
pushf
fisubs
repnz
push
sub
cmc
xor
aas
lret
push
repnz
imulb
push
mov
adc
fs
les
data16
mov
inc
sub
inc
mov
add
xchg
adc
mov
pop
insb
jecxz
mov
mov
int
jp
jecxz
sub
inc
icebp
jl
mov
std
ret
aam
add
test
xor
adc
or
fiadds
icebp
sarb
dec
sub
nop
repnz
push
fwait
mov
dec
fdivl
aam
stc
sub
out
icebp
outsb
imul
or
sub
xorb
sarb
popa
jmp
rcr
push
jae
lock
pop
xchg
in
daa
push
sti
pop
and
fs
pop
mov
mov
pushf
repz
int
xlat
ds
shll
adc
jle
add
das
mov
mov
jmp
and
xchg
or
popa
repz
dec
xor
xor
sub
fstps
in
ret
xchg
fdivrs
loopne
je
push
pop
aaa
outsb
iret
lret
cmp
sub
les
or
dec
pop
mov
jl
sub
rorb
add
and
out
dec
add
imul
cmc
dec
int
lock
out
ja
cmp
inc
lods
and
add
adcb
xor
outsb
cs
xor
lcall
jns
pop
lods
pop
push
or
mov
dec
inc
jmp
out
mov
adc
xchg
sti
mov
pop
pop
bound
out
scas
jns
adc
sbb
call
fsubrs
nop
or
push
nop
aas
push
dec
jbe
loopne
push
cwtl
enter
in
cli
jo
inc
popa
rclb
loope
out
movsb
cmp
mov
xor
inc
or
fldcw
int3
ss
stos
add
out
aas
dec
pop
pop
pop
outsl
xor
push
mov
jp
mov
fiadds
pop
outsl
fcmovne
jne
rcrb
nop
jp
cld
push
ja
inc
imul
jl
cmp
mov
dec
test
daa
mov
mov
js
cli
in
shlb
push
addr16
sub
mov
pop
pushf
out
push
jns
lds
imul
push
aas
xor
mov
xchg
stc
str
negb
ds
addr16
imul
jb
sub
in
cmp
mov
and
and
fiaddl
outsb
jnp
js
repnz
xchg
jb
movsb
xchg
int
add
insb
dec
pop
cmp
fsubp
cmp
xchg
add
inc
sbb
dec
in
sub
bound
ss
mov
vfrczpd
cld
push
sbb
scas
out
pop
ss
or
notl
cwtl
pop
cmp
dec
push
fwait
je
and
sub
jmp
mov
mov
and
sbb
ja
cs
sbb
jbe
xchg
cli
decb
lcall
pop
cli
and
pusha
aas
jle
dec
xlat
sub
das
das
cli
or
cmp
dec
mov
mov
icebp
and
xor
mov
nop
cmp
xchg
dec
cld
lcall
push
imul
js
inc
mov
cmp
xor
jmp
lret
push
add
push
add
nop
push
fnsave
sahf
xchg
and
add
in
in
inc
aad
into
xchg
push
inc
mov
push
sub
mov
mov
bnd
nop
pop
test
add
mov
mov
dec
lods
sbb
pusha
jno
in
loopne
adc
loopne
out
push
xchg
sub
lcall
sbb
mov
fs
gs
pop
in
stc
lea
jne
dec
cmp
cmpsb
fisttpll
ljmp
jl
xchg
xchg
adc
sbb
dec
adc
aad
dec
sbb
mov
movsb
and
shlb
inc
pop
lahf
push
shr
mov
mov
ja
test
mov
cmpsl
mov
push
dec
adc
fs
ret
cmp
adc
ret
mov
xchg
jge
cmpsl
je
clc
cmp
pushf
hlt
xchg
inc
jl
sub
mov
mov
and
sub
mov
push
push
mov
into
test
je
mov
xchg
loop
mov
jo
adc
cwtl
sub
loop
movsl
ja
test
or
cld
int
loop
and
or
outsl
andw
push
cmc
dec
pushf
cmp
xlat
out
sbb
mov
insl
pushf
xchg
mov
pop
inc
inc
lret
out
stos
sub
mov
mov
jmp
std
in
add
pop
fstpt
in
in
and
pop
fwait
aam
mov
xchg
mov
pop
int3
cmpsl
and
lock
push
loope
mov
sub
sbb
or
dec
xor
pop
data16
dec
jbe
sahf
push
xchg
mov
test
mov
or
ja
sbb
jo
adc
enter
lcall
push
cmp
xchg
add
mov
mov
outsl
loop
sbb
outsl
aam
pop
test
stos
lods
outsl
lods
inc
sub
sahf
pop
lcall
sbb
mov
loopne
sti
fstpl
push
jmp
mov
xchg
push
outsb
cwtl
repz
add
test
pop
mov
sub
ja
mov
imulb
shrl
and
inc
ljmp
and
dec
and
dec
clc
popf
pop
rcll
mov
pop
adc
push
jge
lods
xchg
cs
imul
jbe
jle
icebp
push
cmpl
mov
rcrb
int
or
test
fstps
aas
xchg
int
mov
leave
xchg
mov
js
pop
movsb
lods
iret
xor
cmc
out
xor
lea
cmpsl
cli
push
pop
dec
xchg
jne
or
dec
jecxz
fwait
clc
xor
lods
loopne
test
into
dec
pop
out
arpl
bound
mov
cmpsb
imul
out
into
cmc
stc
shrb
dec
mov
sbb
pop
jmp
xor
enter
stc
push
jne
movsb
inc
xor
je
jns
dec
test
push
sub
and
push
push
mov
mov
fnstcw
js
push
pop
pop
cwtl
pop
ja
pusha
popf
scas
out
clc
mov
aaa
push
cmpsl
notl
dec
jp
divl
stos
push
stos
mov
sub
stc
mov
popf
xchg
ljmp
or
jae
mov
pusha
push
in
cmp
adc
arpl
loop
push
xor
and
stc
add
or
jp
mov
mov
das
out
add
pop
lods
sbb
push
push
push
inc
push
pop
rolb
mov
sarl
imull
sub
pusha
inc
adc
cmpb
std
adc
pop
jp
lahf
sub
xchg
push
mov
pop
jnp
push
shlb
sub
jge
dec
dec
inc
xchg
gs
scas
mov
push
fiaddl
jo
dec
jl
lock
jl
pop
orb
movsl
sub
mov
ror
pop
fimull
stos
xlat
pop
mov
lock
insl
lea
lea
push
mov
rclb
ljmp
inc
stos
xchg
leave
push
mov
cmc
loop
loope
adc
aam
jno
or
add
and
mov
bound
jo
pop
pop
fs
popa
inc
in
jp
fcomps
fldcw
arpl
mov
sub
outsl
enter
sahf
pusha
inc
dec
rcll
jno
data16
outsl
lret
aad
dec
test
mov
and
arpl
imul
adc
xchg
test
les
xchg
mov
insl
adc
or
mov
jp
push
add
cmp
divb
xchg
jecxz
jno
pop
shll
je
in
cmpsl
sbb
mov
mov
lret
sub
adc
pop
cmpsl
cmpsb
jno
loope
aaa
inc
mov
and
push
mov
fimull
jno
push
mov
dec
and
test
cmpsb
ljmp
dec
inc
sub
ret
mov
or
mov
and
daa
inc
aas
in
test
sbb
imul
jle
das
divb
jecxz
cwtl
xchg
jmp
mov
add
orb
daa
arpl
lock
mov
xor
dec
dec
out
fwait
aam
jle
mov
bnd
shrl
nop
jge
ds
pop
xor
ds
jae
pop
pop
pop
jne
jae
out
divl
push
jmp
mov
mov
jae
pushf
mov
mov
call
icebp
ret
movsl
hlt
mov
fcoml
das
cs
and
or
mov
push
std
stc
mov
sbb
lods
lock
into
jbe
xor
mov
and
dec
add
bound
mov
js
pop
fnstenv
or
pop
addr16
and
jbe
mov
sub
pop
mov
cmp
out
pop
xchg
jb
xchg
fucomi
and
inc
test
sbb
mov
xchg
xchg
xorl
mov
add
js
jno
pop
jnp
jne
out
xchg
shlb
adc
add
sub
insl
adc
jb
jo
fsubs
arpl
negl
pop
dec
sub
and
lahf
mov
push
sti
adc
ret
mov
cmpsb
fdivp
ds
jmp
in
outsl
inc
xchg
push
inc
dec
jns
jae
push
xchg
stc
mov
xchg
out
pop
adc
lods
sub
out
adc
sti
je
fsubl
lds
das
add
or
test
mov
pop
shlb
adc
xchg
nop
jp
stos
pop
loop
in
and
inc
pop
jge
loop
cmp
cld
stos
out
outsb
dec
aas
in
pop
xlat
call
adc
mov
popf
sub
nop
and
mov
fcoms
push
ja
int
xor
push
xchg
pop
pop
neg
nop
dec
jp
in
cmpsb
xchg
adc
daa
sbb
cmp
imul
adc
xor
push
inc
aas
sbb
xlat
repnz
lcall
fildl
inc
push
out
fstl
dec
inc
movd
lahf
lds
call
xchg
fisubl
pop
movsl
lahf
jmp
int
xor
out
in
stc
jb
loop
jnp
mov
sarb
daa
mov
jne
xchg
and
mov
mov
jmp
aas
push
popa
push
fildl
not
rolb
push
filds
dec
loope
fsubr
adc
sub
lcall
in
jmp
cld
in
push
and
xor
add
fdivrp
push
mov
push
cmp
fidivl
imul
cmp
jno
into
sub
xor
adc
mov
push
pop
inc
pop
push
sub
fstps
xchg
sbb
ficoms
ret
xchg
jno
xchg
or
mov
mov
push
arpl
roll
xchg
xchg
xchg
std
fcoml
sub
pop
rcll
or
cmp
xchg
insb
scas
mov
mov
lock
mov
fdivrs
jb
addr16
rolb
mov
add
pop
adc
xchg
test
ss
rclb
jp
mov
push
pop
rorl
pop
mov
or
insl
out
mov
or
imul
xor
mov
popf
or
jb
pop
jg
pop
adc
mov
push
lret
or
inc
xor
int
jno
loope
mov
mov
fisubrs
xchg
push
fmull
fldcw
jle
test
aad
mov
imulb
jns
sbb
adc
fld
xor
dec
enter
leave
sbb
aas
push
ljmp
sub
xor
sbb
sbb
cmc
push
repnz
test
xor
push
xor
push
fisubl
lds
mov
data16
les
push
lcall
dec
repnz
mov
mov
ret
jb
int3
push
aad
dec
dec
push
add
jle
xchg
mov
jl
outsl
arpl
jno
sub
lret
rcrl
mov
push
inc
out
pushf
pop
in
loope
mov
sbb
mulb
rolb
enter
out
pop
js
xor
fistpll
lahf
inc
xor
sbb
stc
lods
or
jo
xlat
inc
sahf
insl
inc
ja
cs
adc
fidivs
xchg
das
dec
pop
jg
pop
adc
insl
cmc
and
es
fisttpl
xor
mov
inc
mov
dec
repnz
dec
pop
das
push
out
mov
pop
push
or
adc
ds
fucompp
mov
jbe
xchg
fcomps
movsb
add
mov
pop
pop
or
and
mov
sbb
mov
lods
cli
fnop
popf
addr16
jbe
nop
push
push
ret
xorl
aad
addl
xchg
jo
adc
pop
dec
add
fists
mov
fisttps
out
orb
lea
aaa
cmp
add
lret
int
fstpt
xchg
mov
pushf
cmp
dec
fwait
and
xchg
das
cmp
cld
rcr
jge
adc
mov
insl
lock
fs
pop
lea
mulb
into
sub
out
daa
mov
sbb
subl
push
push
xor
xor
sbb
rclb
imul
incb
pop
push
loop
cltd
dec
jne
cld
imul
iret
lret
xchg
and
dec
in
nop
repz
mov
mov
stc
cmpsb
jp
or
add
sbb
inc
ja
pusha
pushf
inc
adc
and
int
movb
jp
icebp
rorl
mov
arpl
jne
pop
mov
sub
dec
push
xor
dec
adc
cld
jecxz
add
sub
adc
xor
jo
arpl
in
jae
mov
or
outsb
movsb
inc
jbe
sbb
out
sub
pop
adc
dec
mov
lcall
mov
dec
pop
inc
jecxz
xchg
mov
mov
cwtl
js
pop
subb
inc
scas
inc
insl
push
imul
daa
push
and
xchg
aam
test
iret
dec
dec
insb
ficoml
in
jbe
imul
js
jno
xor
aam
adc
lea
jno
mov
jp
dec
push
mov
add
mov
add
lods
outsl
mov
mov
std
test
and
fldenv
mov
fdivrs
pop
add
jmp
cltd
dec
in
fimull
cld
and
test
or
or
js
ret
outsb
test
push
repz
daa
jle
sub
lea
rorl
add
add
iret
xchg
push
stc
imul
outsl
sbb
imul
mov
sub
bound
xchg
ds
and
xor
sub
push
mov
popa
jp
repnz
cli
jbe
pcmpgtb
out
add
mov
in
sti
push
cmp
daa
insb
and
sbb
and
and
sub
fidivl
cmc
insb
xchg
mov
andl
popa
and
xor
xchg
xchg
outsl
pop
mov
cld
test
sub
lock
out
stc
push
fisubrs
aam
push
stos
test
pop
xchg
inc
loope
hlt
ret
loope
aam
jg
adc
enter
mov
mov
inc
inc
cmp
insl
hlt
add
hlt
repnz
fwait
sub
fbld
jp
xor
jne
sbb
sti
out
xchg
icebp
or
cmp
jge
push
mov
mov
aam
ss
ret
pop
loope
nop
hlt
inc
jno
aam
mov
or
mov
ds
sub
ss
and
xchg
pop
mov
push
rolb
aaa
movl
xlat
ja
outsb
dec
mov
lret
mov
adc
ret
fsubrs
dec
fidivrl
outsl
je
cmp
int
mov
imul
jo
dec
cmp
dec
imul
mov
inc
lea
sahf
ret
out
shrl
jb
sub
inc
sarb
rcl
std
stos
xor
or
add
inc
and
pop
mov
jno
jecxz
adc
pop
and
push
scas
jle
sub
aaa
xchg
and
lea
adc
cs
lods
mov
pop
fldlg2
and
mov
xlat
mov
adc
test
fildl
jge
repnz
stos
data16
ja
mov
and
cli
pop
aam
popa
push
mov
pop
inc
lock
lahf
orl
adc
dec
inc
sbb
pop
inc
pop
cmp
and
clc
out
dec
inc
cs
sbb
dec
int
bound
sbb
pop
comiss
rclb
and
push
icebp
divl
xor
mov
call
jo,pn
mov
and
call
xor
cltd
out
int3
lcall
icebp
daa
mov
test
out
ds
push
sbb
ret
ljmp
cld
aas
stos
mov
push
insb
fldcw
xchg
inc
fisttpll
add
in
cmp
aad
push
outsb
xorl
insl
mov
repnz
mov
mov
xchg
jecxz
dec
jnp
mov
jo
xchg
inc
aaa
mov
add
pop
nop
xchg
and
fidivl
and
add
mov
push
add
push
insl
icebp
xchg
nop
test
les
cmp
call
cwtl
jl
adcl
jmp
inc
lea
jle
stc
sbb
push
xchg
cs
nop
pop
mov
pop
sbb
jecxz
push
cmpsb
clc
pop
leave
ja
cmpb
call
hlt
ljmp
and
test
xor
or
rcrb
xchg
push
sub
in
pop
sub
test
cmp
fldcw
rcrb
jae
mov
push
scas
sub
push
push
cwtl
or
and
xchg
mov
and
sti
add
fstl
frstor
les
push
pop
outsb
xor
imul
mov
int3
xchg
cltd
sbb
mov
pop
jo
jns
push
sub
and
jnp
inc
mov
fcmovnb
lcall
mov
xchg
jns
inc
and
adc
dec
jle
pop
push
fldcw
sub
stc
fxam
loopne
and
add
in
pop
mov
int
mov
lds
out
dec
outsb
pop
js
mov
lock
and
sub
das
popl
ja
arpl
subb
roll
shlb
and
mov
push
pushf
insl
inc
ljmp
insl
jae
add
pop
test
daa
sub
hlt
xor
cli
sub
xor
test
sbb
out
imul
adc
jo
movsb
lahf
out
or
int3
mov
adcb
nop
jnp
adc
fistpl
addr16
iret
jbe
sbb
push
inc
dec
inc
in
test
mov
clc
int
hlt
pushf
jb
mov
in
es
cmp
xor
push
rol
sarl
fdivs
out
sub
xor
icebp
sbb
shlb
cmp
call
inc
pop
jb
aam
jnp
mov
ss
mov
jns
push
mov
loopne
pop
mov
pop
sbb
cmp
shrl
xor
sub
adc
jle
fistl
xchg
jle
add
mov
clc
push
mov
stc
popf
push
sbb
testl
loop
cltd
inc
push
test
pusha
ret
sub
mov
adc
fistpl
gs
jne
xor
stos
pop
xlat
mov
xorl
out
add
jbe
sub
daa
mov
add
sbb
loope
es
jns
ss
mov
loop
les
or
insl
stc
out
scas
pop
insb
aad
shll
mov
nop
cli
in
outsb
lcall
cs
es
out
mov
inc
inc
movsl
ret
mov
push
call
pop
out
push
add
ret
jb
mov
fs
hlt
xchg
or
mov
test
sbb
ss
loopne
pop
pushl
inc
pop
mov
mov
cmpsl
xchg
pop
mov
es
and
sub
xlat
push
or
xchg
and
pop
sub
push
xchg
popa
imul
mov
dec
loopne
fisubrl
jg
and
mov
xchg
xchg
cli
ss
xor
lods
and
ret
or
popf
jbe
fidivrs
and
jmp
movsb
pop
inc
jae
bswap
jns
test
out
dec
in
clc
lods
jne
and
cld
push
mov
aad
iret
mov
lahf
jl
cld
xchg
jbe
shlb
jae
lds
jnp
add
iret
sub
cwtl
out
xor
in
decl
jae
push
enter
stc
orb
adc
into
in
push
pop
icebp
fistps
adc
fstpl
jge
cmpl
pop
cmp
sbb
stc
sub
das
ljmp
out
push
shufps
mov
ret
cs
test
fimull
and
fadd
mov
sbb
aas
add
pop
shlb
idivb
sar
mov
stos
xlat
mov
leave
sbb
xchg
xchg
push
lahf
mov
scas
push
sub
sti
lcall
jp
cmpb
sbb
repnz
jnp
xchg
fisubs
stos
push
fldcw
into
jecxz
pushf
fsubrl
les
daa
arpl
or
push
push
cmp
ret
pusha
ret
repnz
loope
mov
mov
xor
push
pop
pop
imul
xor
jge
push
push
leave
pop
xor
dec
pushf
jmp
aad
mov
ljmp
mov
cmc
cli
cmpsl
cmp
dec
adc
jge
mov
hlt
adc
dec
dec
jb
es
pop
cmpsb
mov
push
lret
sub
fisttps
jmp
jg
push
mov
daa
inc
inc
cmp
inc
test
pop
xchg
dec
loopne
fs
arpl
js
dec
mov
pop
les
int
inc
lahf
in
cmp
in
add
or
sub
xlat
ror
or
dec
bound
inc
mov
daa
cwtl
pusha
sbb
mov
inc
cltd
cmpsb
sbb
rcrl
ret
lods
loop
jne
pop
and
cmpsl
mov
lock
nop
pop
push
inc
dec
and
std
and
pop
sbb
jb
movsbl
ret
mov
js
cmp
popf
movl
lcall
pop
repnz
fnstsw
fistpll
dec
inc
xor
fwait
fs
lret
adc
cs
lahf
push
loope
and
andb
lret
lahf
mov
addb
and
adc
lret
dec
pop
mov
xchg
pop
jo
pop
jne
inc
lret
cwtl
jno
mov
mov
pop
push
shl
push
push
xor
imul
int3
lods
add
outsl
mov
cmp
dec
jp
sub
cmp
add
addb
fldt
fsubr
orb
and
test
out
ja
je
push
jb
cltd
loopne
mov
add
imul
xchg
pop
xchg
push
adc
pusha
cmpsl
xchg
lcall
sub
cs
dec
and
xchg
nop
jmp
aas
movsl
cmpsb
and
adc
leave
movsl
mov
test
cmc
pop
push
testl
xor
popf
pop
pop
rcr
mov
jp
mov
enter
pop
subb
mov
inc
xor
push
and
orb
ret
add
scas
and
mov
gs
or
or
fwait
adc
sbb
push
pusha
adc
mov
bound
aam
push
sub
lcall
leave
pop
cmp
lock
and
inc
cmp
xor
cld
xlat
xor
rol
cltd
jg
enter
xor
sti
pop
ljmp
sbb
mov
mov
inc
orb
mov
sbb
test
test
pop
fcomp
loop
mov
cmp
popf
nop
xchg
add
or
sarw
push
xor
out
call
adc
sub
inc
xchg
data16
pop
adc
adc
xorl
mov
add
ss
dec
jns
jge
mov
and
scas
bnd
negl
pop
inc
jb
ret
mov
inc
pop
nop
les
clc
pusha
push
push
ja
aad
xchg
xor
adc
lods
sub
pop
in
lods
cmp
repz
mul
outsb
xor
pop
xchg
adc
mov
in
add
dec
push
shl
test
lods
add
jg
es
lods
pop
sub
dec
jl
cmpb
cmpsb
jmp
cltd
rorl
pop
mov
and
in
inc
inc
in
notb
adc
call
pop
pop
cmpsb
shlb
xchg
jmp
pushf
inc
xchg
ret
sti
and
xchg
data16
popa
js
inc
clc
fstpt
inc
fisttpl
mov
mov
fadds
fcoms
and
pop
add
cli
nop
inc
or
je
sbb
sub
insb
ja
mov
add
cs
cmp
sbb
xchg
insb
call
stos
fstl
mov
push
mov
lods
add
mov
xor
xchg
add
imul
lock
lret
movsl
fwait
insl
or
movsl
mov
pop
jmp
xchg
repz
mov
mov
push
into
test
jnp
adc
pop
sbb
scas
cmp
mov
dec
sub
pop
xor
outsl
mov
adc
xchg
lods
xchg
fidivrl
pop
movsb
and
dec
mov
mov
inc
cmp
mov
sub
pop
xchg
jne
mov
jp
call
mov
pop
lock
fcompl
xor
fld
test
jnp
pcmpeqw
shll
push
test
add
jle
in
cmp
add
dec
pop
mov
pushf
ret
iret
mov
or
jl
ret
xchg
xchg
and
adc
repz
mov
lret
stc
imul
std
xchg
cmpsl
dec
jg
xor
fldt
fwait
and
and
imul
dec
sub
xor
mov
loope
int
mov
mov
mov
adc
imul
jno
push
xlat
es
jmp
das
mov
mov
sti
jb
adc
mov
popf
inc
shrl
push
mov
hlt
fldl
inc
xor
jb
adc
imul
sub
mov
popf
insb
sbb
das
xor
or
cmpb
push
jmp
sub
in
mov
pop
movsl
pop
neg
out
pop
fists
addr16
int3
jo
mov
rorl
push
lea
bound
or
xor
cmpsl
xchg
pushf
and
clc
ss
push
mov
adc
cmpsl
jecxz
push
rorl
or
cmpl
pop
jne
lret
lea
or
pushf
insb
xchg
int
js
mov
cmpsl
ljmp
out
icebp
lret
nop
mov
and
jae,pn
jo
sub
mov
loope
adc
add
dec
pop
sbb
jne
and
aaa
jno
pop
lret
and
adc
stos
and
cmp
ret
shrl
rcrl
cmp
pop
aad
pushf
dec
cmp
fdivr
sahf
inc
test
xchg
pop
mov
xchg
mov
push
cltd
adc
inc
add
push
mov
test
adc
cmp
lods
mov
jb
mov
mov
inc
or
inc
mov
jg
insl
bound
loop
in
clc
dec
adc
daa
cmp
and
stc
lock
ret
sbb
or
call
xchg
in
push
daa
or
ja
jae
test
sbb
lahf
xchg
test
in
lds
cmp
jb
mov
adc
pop
jl
xchg
pop
fcos
arpl
clc
arpl
lods
pop
or
outsb
in
push
sub
cmp
cmp
lods
testb
pop
push
and
xchg
std
xchg
out
aam
mov
xchg
mov
das
popa
es
or
imul
mov
xchg
test
inc
popf
ret
jmp
aad
imul
cmpsl
xchg
outsb
xchg
out
pop
lea
inc
ss
sub
iret
inc
out
std
jp
pop
and
sahf
xchg
cwtl
and
jmp
jp
adc
jnp
ds
in
fiaddl
or
mov
push
cltd
stos
cvtps2pi
adc
xor
rorl
dec
and
jne
pop
ss
jle
dec
push
test
cmp
and
into
lret
scas
jmp
repnz
cmc
pop
pushf
lock
repnz
orb
lea
push
inc
cmp
add
iret
daa
or
sahf
xor
pop
popa
pop
fimuls
outsl
out
xchg
cmp
pop
mov
sarl
sar
add
xor
sub
jg
repnz
cmp
sti
sbb
xchg
jnp
push
lock
call
mov
lahf
jge
sti
test
dec
pop
orl
pop
pop
inc
xchg
add
ds
scas
int3
add
cltd
movsb
jne
pop
jo
add
dec
sbb
or
dec
mov
xchg
mov
xchg
scas
nop
mov
xor
fimuls
das
aas
sbb
push
inc
ret
adc
jns
lods
sbb
adc
xchg
or
fwait
lret
nop
mov
xchg
lcall
jnp
cmp
imul
mov
sub
mov
xchg
mov
and
sahf
test
lret
addl
jecxz
push
sub
fldl
sub
xor
lahf
xor
sub
mov
add
cs
inc
push
mov
and
sbbl
fistps
loopne
jge
stos
movsl
pop
loopne
jbe
or
imul
dec
fsubl
ret
scas
mov
sbb
sub
sbb
adc
jg
mov
test
call
in
xlat
mov
pop
popa
xor
aas
movsl
sub
stos
dec
in
movsl
or
addl
dec
popf
enter
adc
jle
pop
cmp
push
mov
add
dec
out
mov
adc
push
or
pop
cli
stos
fcmovnbe
mov
loopne
push
mov
jne
xor
dec
sti
jns
ds
lods
inc
fidivrs
rol
inc
movsb
shl
push
cmpsl
stos
stos
fcmovnu
fimuls
cli
push
subb
cld
je
mov
call
ficoml
in
test
cmc
jns
add
roll
mov
dec
or
or
mov
lea
data16
imul
movsb
push
mov
es
rorl
aam
dec
fidivrl
gs
jo
and
and
push
and
pop
and
inc
xchg
lds
fmuls
dec
mov
inc
add
sarb
mov
fmul
movb
and
sbb
mov
xchg
push
gs
push
mov
mov
nop
std
mov
mov
and
sub
push
nop
pop
push
std
add
or
ret
mov
inc
loop
out
sbb
outsl
leave
pop
idivl
out
adc
in
cmp
jecxz
pop
popf
xor
daa
ss
lea
sahf
xchg
call
pop
mov
loope
pushf
mov
shlb
cmp
stos
outsl
nop
pop
movsl
xor
pop
or
js
inc
imul
and
add
mov
xchg
in
loop
mov
lret
pusha
ljmp
mov
pop
xor
popa
repz
subl
pop
loop
pop
popa
dec
ja
das
aaa
jle
pop
adc
stc
add
std
pop
mov
cmp
adc
mov
mov
mov
jne
pop
jge
out
sbb
sub
mov
inc
loop
mov
push
pop
sbb
in
scas
adcb
and
push
mov
pop
in
stos
notb
daa
rcrl
fsubr
aam
lock
push
negb
mov
jp
lret
in
xor
pop
fcoms
push
mov
int3
outsl
cmp
loop
xor
stos
pop
mov
sub
lcall
xlat
push
add
scas
mov
adc
ret
pop
ret
js
iret
or
and
adc
loop
addr16
sub
fistps
fisubl
mov
cs
stc
nop
scas
repz
push
cs
pop
push
lds
ret
loope
or
cmp
push
push
jns
inc
outsb
xor
stos
gs
stc
scas
orb
popa
or
inc
shrl
inc
jae
insb
sbb
mov
cs
push
push
icebp
sub
push
xchg
repz
ds
repnz
popa
push
insb
out
and
int
cltd
fsubrs
dec
dec
clc
pop
dec
ljmp
pop
dec
push
subb
sub
fcmovbe
adc
insb
jae
addl
test
arpl
xchg
ja
xchg
inc
push
xor
aam
mov
stos
xor
arpl
movsl
or
testb
adc
test
xchg
mov
mov
jge
dec
push
jo
jb
ja
jb
mov
mov
aas
cs
push
in
out
jne
xchg
dec
les
loop
lea
sbb
test
lcall
imul
dec
jg
mov
dec
sub
xchg
bound
mov
loopne
jbe
in
xor
subl
je
adc
lretw
in
das
push
orb
out
push
and
and
cmp
mov
adc
mov
jg
adc
dec
mov
mov
sbb
inc
cs
jns
in
in
jnp
mov
xchg
cmp
call
push
or
cmp
mov
and
sub
stos
adc
test
ret
inc
push
xchg
fsubs
in
jp
in
lods
jp
adc
pop
and
lahf
test
add
fldcw
inc
mov
push
sub
iret
std
fsts
lods
testb
or
xor
vmread
jle
sti
push
dec
js
fdivr
jb
xor
xchg
pushf
sbb
push
jo
aam
sbb
loop
shlb
adc
cmp
mov
int3
mov
jg
call
mov
xchg
stos
push
out
mov
clc
popa
xchg
xor
into
ficompl
stos
cmp
fdivrs
dec
lcall
pop
cmp
push
cmc
dec
lods
push
je
cmp
lock
stc
idivb
les
push
mov
cs
cmovl
pop
push
test
sbb
dec
jb
call
pop
mov
daa
mov
pop
jns
cli
sti
das
xlat
push
or
stos
lret
jne
les
mov
mov
mov
dec
cmp
lcall
cmp
and
orb
lds
adc
add
adc
xor
push
ret
pusha
pop
jmp
test
das
lahf
shll
cmp
and
rolb
mov
nop
xchg
sbb
cmp
adc
shrb
dec
outsl
movsl
aaa
out
push
mov
inc
jne
inc
pop
std
imul
insb
add
jmp
bound
lods
sub
mov
sbb
aam
mov
mov
and
adc
jle
and
mov
xor
stc
jp
mov
xchg
into
push
push
add
in
test
mov
jne
mov
popa
test
xor
mov
pop
daa
mov
scas
mov
mov
dec
pop
shlb
push
inc
pop
add
inc
ds
repnz
pop
loop
sub
push
pop
std
adc
jge
or
ljmp
arpl
or
ret
in
loopne
or
mov
mov
call
loope
nop
fiaddl
pop
ret
std
shll
sub
mov
scas
rcrl
outsl
mov
inc
es
lods
adc
mov
mov
xor
lods
cmp
jmp
jnp
fmuls
fimuls
mov
inc
test
jp
cltd
inc
mov
push
add
add
scas
fnstcw
fsub
adc
loopne
mov
and
lods
outsb
mov
pop
arpl
arpl
sub
and
jecxz
inc
mov
mov
movsl
dec
pop
out
pop
repnz
inc
loop
mov
adc
and
das
out
mov
into
push
mov
int3
in
pop
xchg
ljmp
imul
jmp
jb
aaa
inc
aaa
sti
add
subb
js
adc
call
mov
or
cmp
cmc
pop
les
push
push
loopne
inc
mov
inc
icebp
add
aaa
dec
sbb
sub
lea
test
imul
in
shlb
and
dec
dec
imul
sbb
xchg
pop
shrl
push
lods
out
mov
lret
jg
xchg
out
xchg
mov
pop
mov
jno
mov
mov
mov
popf
mov
add
pusha
jnp
jae
adc
add
nop
pop
iret
jp
int
fldcw
xor
insb
mov
jae
xlat
repz
xchg
inc
push
or
insb
out
js
mov
mov
cmp
icebp
aaa
insl
fcomps
push
or
xchg
jge
xor
jae
call
rcl
adcl
push
sbb
popf
xchg
pop
sahf
popa
and
jmp
adc
in
into
aam
out
cwtl
add
lret
cmp
mov
popa
out
aam
xchg
push
cmc
addr16
sbb
movsb
orl
aaa
mov
popf
pop
fwait
sub
or
jns
loopne
fs
stos
fmull
or
lds
mov
gs
xchg
dec
adc
test
in
insb
lock
mov
mov
mov
and
adc
jnp
or
out
out
stos
ljmp
stos
fdivp
jmp
pavgw
lahf
xchg
hlt
add
pop
fs
rol
xor
jns
xor
add
dec
mov
mov
int
push
loopne
dec
jne
jns
xor
mov
or
mov
or
xchg
shll
push
mov
pushf
cmc
notl
lret
mov
jae
loope
lret
jl
cmpsb
adc
xchg
test
iret
pop
lahf
cmp
sub
xor
jp
sub
test
xor
pop
jbe
push
clc
mov
push
test
push
adc
das
adc
ljmp
movsl
xchg
int3
mov
adc
out
mov
xor
pushf
and
imul
xor
push
sub
nop
cmc
mov
shrb
inc
dec
cmp
imul
pop
dec
cmp
movsb
mov
adc
je
mov
push
mov
cld
pop
das
outsb
cmc
data16
roll
pop
push
mov
push
mov
enter
lcall
cmp
ret
fisubrl
push
pop
loopne
test
xchg
pop
pop
out
jmp
push
out
movsb
sub
inc
sbb
enter
sbb
lds
mov
xchg
and
outsb
adc
fdivs
jecxz
ds
sub
inc
gs
mov
adc
lret
je
divl
sbb
mov
in
or
fmull
adc
mov
add
dec
and
and
lods
or
test
inc
fwait
mov
and
out
push
imul
dec
stos
mov
xchg
mov
mov
or
cmp
cmp
sub
roll
test
call
loop
jle
or
pusha
icebp
pop
lret
xchg
mov
push
sub
mov
filds
cmp
lcall
add
add
push
push
lds
adc
lods
ljmp
outsb
or
inc
out
jb
add
pusha
aam
enter
inc
mov
jge
mov
fs
notl
mov
negl
and
cmp
fstp
cmp
sahf
and
mov
sbb
xchg
sbb
sbb
mov
lret
in
stos
aad
hlt
sub
cmp
xchg
xchg
jg
xchg
hlt
cmp
mov
cld
lods
dec
ds
mov
push
popa
rcll
stc
imulb
gs
loopne
add
xor
rorb
fucomi
xlat
mov
jnp
aas
dec
pop
stos
push
xor
add
and
mov
add
inc
push
jg
push
cmp
push
into
cs
mov
icebp
pushf
out
cmp
shll
shlb
ja
leave
lods
movb
or
pushf
xchg
mov
cli
test
inc
sub
lcall
xor
pusha
cltd
or
cmp
jns
and
add
jmp
cmpsb
iret
loopne
push
gs
lds
jp
rcl
lea
sbbb
or
sarl
sbb
dec
jl
mov
arpl
dec
es
iret
pop
push
cmp
dec
aaa
mov
xchg
sbb
cmp
aad
push
push
cld
dec
mov
mov
fcomi
mov
or
lret
xchg
ficoml
lret
pop
lcall
mov
lret
jns
xlat
orb
in
jg
aas
add
out
daa
loope
mov
out
pop
sbb
jg
std
outsl
xchg
sarb
incb
rolb
pop
shrb
jns
inc
pop
in
inc
mov
pop
divb
mov
adc
inc
mov
jp
cwtl
mov
cmp
std
cli
gs
xor
xlat
ret
mov
imul
mov
cld
mov
inc
dec
inc
andb
or
pop
out
dec
jns
cmp
hlt
or
cmpb
fists
pop
mov
xor
movsb
andl
inc
movsl
lret
push
xor
inc
add
sub
push
cmpsb
idivl
lods
nop
fld
xor
fwait
lret
imul
add
ljmp
mov
into
add
fsubp
iret
sub
stos
mov
popa
adc
mov
adc
sub
cmp
mov
inc
enter
shll
cmc
lret
fxch
dec
mov
pop
inc
jae
mov
addl
mov
cmc
mov
inc
fistpl
push
add
ss
shlb
outsl
in
push
jecxz
dec
xor
aas
sub
cmp
fistl
mov
dec
test
adc
scas
mov
jp
sbb
and
sarb
adc
les
ret
or
fistps
mov
xchg
fucomip
and
roll
mov
das
push
push
movsl
sub
in
adc
inc
cld
mov
fnstsw
sbb
inc
mov
arpl
mov
outsl
push
mov
rcll
adc
shlb
dec
mov
ret
test
push
mov
movsl
insb
and
pop
mov
in
pop
mov
mov
inc
fs
enter
rorl
cwtl
mov
fwait
outsl
xchg
sub
xlat
push
cmp
mov
sub
jecxz
fdivr
movsl
popf
enter
ss
cwtl
mov
loope
dec
push
jle
fs
mov
mov
add
cmp
ds
out
aam
idiv
in
cmp
rcll
lret
xchg
mov
loopne
jmp
pushf
dec
and
add
ret
sbb
into
stc
adc
lods
sbb
mov
inc
and
or
hlt
xor
inc
data16
dec
xor
mov
sub
adc
mov
xor
leave
pusha
lods
test
xor
imul
loope
push
test
in
xchg
mov
mov
lahf
call
shlb
cmp
fsubr
jg
pusha
lods
ja
and
push
lret
mov
mov
mov
and
test
add
enter
mov
sub
mov
mov
frstor
jno
push
mov
push
out
outsb
lods
icebp
dec
fists
mov
in
popa
cmpsb
into
lds
mov
xor
test
sbb
add
xchg
and
jl
jge
lret
pop
mov
mov
mov
in
push
ja
fnstcw
sbb
mov
pop
subl
mov
jns
sbb
and
jg
adc
insb
dec
jbe
sub
sbb
mov
dec
xchg
add
or
or
lret
mov
and
and
jbe
adc
lods
push
mov
ret
cmp
arpl
insb
faddl
rorb
rcrl
arpl
lea
rcl
je
jmp
inc
add
dec
mov
cltd
mov
lahf
test
pop
sbbb
adc
add
jmp
lahf
call
jge
push
mov
pop
mov
out
ss
dec
add
push
addr16
aam
scas
mov
addr16
loopne
je
pop
sahf
mov
cmp
int3
xor
lcall
imul
xchg
pop
dec
sub
mov
roll
cmp
adc
aas
and
and
sbb
nop
lret
push
xchg
xor
idivl
repnz
lcall
scas
in
mov
ljmp
pop
or
xchg
and
add
cmpb
out
push
jl
pop
push
xchg
aad
out
xchg
push
sub
addl
mov
fiadds
aad
icebp
xchg
cmp
in
sub
pop
sti
ljmp
add
fildl
inc
push
pop
xorl
aam
or
es
adc
mov
dec
dec
xchg
xchg
push
mov
mov
jecxz
sub
mov
dec
jecxz
xor
stos
outsl
in
pushf
popf
jle
enter
aad
ret
ds
insl
inc
xlat
enter
pop
inc
fcmovnu
imul
lret
add
pop
jle,pn
dec
mov
rdtsc
gs
sahf
mov
inc
and
pusha
in
xchg
cmp
push
sub
push
stos
adc
lock
aaa
or
sar
sub
gs
inc
mov
cmp
adc
sbb
sahf
fdivrs
mov
aaa
dec
les
xchg
rcl
out
popa
fadds
scas
rcll
sbb
inc
gs
arpl
jmp
jns
std
pop
sub
mov
mov
add
loopne
sarl
push
xchg
mov
nop
in
out
sbb
jmp
repz
xchg
in
pop
js
xlat
pop
cmp
gs
mov
loop
loop
lods
add
je
rep
fs
xchg
cmc
mov
faddl
and
in
rolb
jp
fcomps
les
rorb
dec
sbb
fiadds
fsubrs
and
jae
cmpps
call
movsb
push
ja
ja
xchg
sbb
jecxz
stos
inc
xorl
push
lret
int3
push
push
xor
or
mov
insb
loope
jo
adc
lods
scas
test
dec
sbb
xchg
push
mov
pop
dec
aad
roll
push
imul
push
pop
push
dec
cld
jp
or
iret
dec
jae
jmp
jg
loope
lock
lahf
and
ja
jne
jo
sub
adc
or
call
inc
mov
inc
js
call
les
into
outsl
cld
cwtl
lods
add
popf
mov
cwtl
arpl
lahf
mov
aas
xchg
and
ds
lcall
int3
aas
pop
fwait
mov
lods
ss
leave
int3
xorb
testl
lock
add
jno
lret
lods
inc
lock
jge
repnz
lcall
adc
fs
push
mov
cmp
push
push
daa
or
inc
adc
mov
and
pop
add
in
xor
push
sbb
dec
xchg
dec
jl
loope
xor
aad
add
sub
inc
dec
es
mov
fdivl
mov
ja
std
cmpsb
sbb
dec
movsl
call
dec
push
xchg
cld
out
std
rorl
push
shll
pop
out
jp
in
push
cmp
pop
mov
popf
int
inc
push
push
lcall
movsl
pushf
pop
or
or
lcall
in
sahf
rcll
and
adc
test
jb
sub
xchg
leave
rcrb
dec
pop
testb
inc
subb
add
shrl
gs
xor
psubsb
sub
out
insb
imul
add
in
jmp
sbb
movsl
cwtl
scas
movsl
movsl
add
test
xchg
call
arpl
mov
sti
fstp
sub
clc
xchg
fnstenv
sbb
ss
lods
pop
pop
sbb
push
mov
mov
cs
ss
add
mov
stos
daa
cmp
cltd
push
rorb
out
js
or
mov
ret
ljmp
out
bound
into
xchg
nop
into
jecxz
stmxcsr
mov
adc
cmp
dec
mov
test
ja
sub
fidivrs
lock
outsl
cwtl
cmc
dec
pusha
xor
dec
or
lods
test
fwait
aad
mov
pop
or
test
in
mov
scas
ficompl
dec
out
popa
xor
cmp
push
fs
xor
lea
mov
lea
ss
xor
dec
fninit
inc
inc
fisubs
into
mov
mov
aaa
mov
bound
xor
lret
inc
fninit
mov
sub
xchg
add
std
test
xor
test
mov
dec
mov
jae
notb
inc
push
cs
cmpsb
lea
mov
or
push
add
cmpsl
cmc
mov
jne
in
ret
jl
xchg
sarb
mov
clc
and
add
dec
xchg
inc
sub
sub
sahf
mov
ds
push
ja
ljmp
inc
ljmp
mov
pop
push
popa
into
push
push
out
jmp
adc
pushf
xchg
iret
fildll
leave
movsb
jo
nop
adc
imul
inc
push
cld
cmpsb
addb
pop
mov
imul
or
ds
sahf
test
test
repz
and
jp
mov
add
sti
stc
pushw
mov
in
jge
jmp
inc
xor
adc
jb
inc
cltd
add
jmp
movsb
mov
xchg
sub
incb
insl
ret
cltd
jg
and
repz
jecxz
push
cmc
idivb
or
test
repz
icebp
and
adc
push
mov
jecxz,pt
sahf
insl
scas
mov
seta
xchg
mov
xor
gs
insb
jno
xor
icebp
xor
or
fstpl
cs
dec
out
out
push
dec
sbb
jo
repz
mov
push
mov
push
and
popa
adc
mov
ret
faddl
test
fsubr
add
ret
mov
xor
cltd
cmp
cltd
dec
sub
dec
das
cmp
bound
addb
mov
or
push
jno
add
mov
and
hlt
idivl
cli
add
stc
or
jno
rcll
cwtl
jp
cmp
or
jp
dec
popa
jl
pop
repnz
test
shll
inc
cs
push
data16
data16
ja
mov
fistps
icebp
pop
int3
mov
xor
or
push
jp
jae
jge
or
into
mov
lcall
sbbb
insl
add
sub
pop
mov
cmp
fbld
into
dec
xchg
mov
sbb
roll
repnz
cmp
aas
loope
sahf
inc
lds
in
dec
je
movsb
enter
test
repz
decb
jge
sbb
enter
mov
mov
imul
lods
loope
cmp
lea
pop
lods
cmpb
xchg
hlt
lret
addr16
ljmp
iret
loopne
loop
mov
sub
hlt
xor
mov
lcall
jae
test
rcrl
xchg
scas
jmp
xchg
in
mov
pushf
ret
mov
sbb
push
sahf
cmpsl
je
js
fldl
shll
in
insb
xor
jge
popa
pop
imul
cwtl
fmulp
loopne
push
ja
adc
rolb
stos
js
and
pop
data16
inc
clc
fsubr
insl
sub
imul
push
mov
mov
test
pop
ret
pop
dec
sahf
cmp
imul
inc
mov
mov
mov
clc
and
lret
roll
jp
pop
push
test
inc
adc
stc
lock
imul
add
test
pushl
icebp
sbb
stos
push
and
xchg
sahf
js
fdivrs
dec
fimuls
cmp
jo
data16
and
xlat
inc
lret
push
fcompl
and
inc
cmp
push
jbe
lcallw
adc
pop
sbb
insb
js
sbb
fsubl
llwpcb
sar
loop
jmp
dec
inc
xlat
mov
in
sahf
xor
fcomps
leave
repnz
cltd
test
insb
pop
push
cmpsl
movsb
bound
cmp
cld
in
fwait
aad
sub
dec
pushf
inc
mov
add
mov
inc
sub
es
push
cwtl
daa
cmp
cs
stc
dec
stos
imul
mov
mov
inc
xor
mov
shlb
dec
stc
out
adc
xor
push
push
push
jge
cmpb
jbe
xor
jno
scas
andl
lods
cltd
adc
ret
mov
xchg
mov
rcrl
mov
xchg
sbb
in
push
inc
xchg
dec
push
pop
jne
mov
repz
mov
je
pusha
mov
vandps
ja
dec
pushw
pop
in
aas
xchg
mov
pop
fs
cmp
and
movsb
xorb
sbb
into
mov
inc
push
xor
fsubrs
cwtl
xchg
frstor
clc
in
inc
nop
imul
cmp
bound
push
das
loope,pn
or
cwtl
pop
rcr
test
mov
lock
scas
test
out
jp
mov
jae
sbb
loop
cmpsb
icebp
std
mov
dec
rcl
lcall
cmp
fpatan
sbb
mov
sbb
aam
fwait
aam
arpl
xchg
mov
pop
repnz
addl
outsl
sti
mov
ret
loopne
mov
mov
xor
push
xchg
mov
push
mov
xor
dec
pop
jmp
inc
mov
pop
insl
cmp
rcrl
shl
pop
pusha
sbb
andb
push
fsubr
mov
inc
or
repz
or
cmp
addr16
cmpsl
mov
adc
imul
ret
sbb
mov
addr16
std
and
rorl
mov
push
stos
xchg
jl
js
or
push
cmpsl
or
arpl
imul
stc
enter
sarl
dec
xor
mov
dec
test
int
mov
xchg
jl
cmpsb
jns
push
sbb
movsl
pop
inc
outsb
shrb
jne
daa
lods
into
add
jmp
xchg
mov
sbbl
jp
rcrb
mov
adc
mov
ja
ficomps
inc
add
push
add
push
fldcw
xchg
sub
rorb
mov
jl
jmp
fistl
xchg
popf
enter
dec
cmp
rol
imul
shlb
xchg
mov
int
mov
push
sub
xchg
lret
insl
mov
outsb
addr16
popa
aas
jp
clc
add
or
push
sbb
stc
je
mov
mulb
mov
jno
dec
add
das
rcrb
mov
jp
xor
inc
ret
inc
mov
lcall
notl
inc
cmpsl
mov
addl
inc
jg
adc
mov
nop
cmp
out
xchg
fcompl
or
leave
jle
sub
jnp
add
jl
cmpsb
pusha
jne
fsts
pop
or
adc
xor
test
push
popa
clc
jnp
xor
dec
adc
inc
push
add
pop
inc
and
and
or
xchg
inc
jno
pop
movsb
cvtpi2ps
rep
xchg
fwait
push
pop
faddl
lea
mov
inc
loope
push
xchg
xchg
call
adc
push
jp
pop
mov
pop
in
push
sahf
sbb
sbb
add
iret
adc
mov
jl
out
inc
add
imul
sarb
data16
jge
ret
js
and
div
stc
mov
loopne
in
aaa
pop
movsb
jge
mov
outsl
add
stc
into
dec
std
sahf
sbb
shlb
stos
test
setg
jge
mov
and
mov
test
add
pop
adc
mov
pop
inc
shll
popf
lods
xchg
cli
sbbb
mov
mov
push
inc
lods
add
ljmp
fwait
out
testl
add
lods
addr16
int
aam
sbb
adc
xlat
and
in
imul
nop
xchg
jb
cltd
shrl
loopne
push
ret
int3
rcrl
out
pop
arpl
pusha
sbb
mov
sub
lahf
mov
in
fsin
mov
xlat
push
dec
and
xor
dec
fldl
add
inc
jg
push
arpl
lods
mov
jle
push
std
xchg
push
daa
pop
cmp
inc
insl
push
jb
jne
dec
mov
ljmp
aad
test
repnz
pop
ljmp
div
mov
je
in
mov
inc
addr16
cmpsl
xor
test
adc
roll
ss
inc
sarl
cld
inc
jne
and
xchg
shll
pop
pop
mov
pusha
movsb
dec
ficompl
aam
xchg
imul
jg
clc
clc
fistps
ret
sub
adc
and
sbb
cmp
jg
mov
xchg
dec
outsl
push
mov
dec
or
lea
push
jo
int3
add
lock
pusha
add
inc
xchg
jo
inc
pop
inc
lock
outsl
rcrl
pop
test
push
pop
imul
and
inc
or
sub
imul
pushf
and
clc
or
cld
xchg
cld
insl
cmpl
pop
mov
add
push
inc
and
hlt
popf
sbb
ljmp
jb
fadd
out
adc
inc
cmp
pop
mov
std
mov
lods
cmp
ja
and
mov
jp
and
cs
sbb
js
vmwrite
push
test
pop
and
cmpsl
repz
inc
jno
mov
in
and
lds
mull
cmp
add
xchg
cmp
scas
rclb
adc
addb
pushf
inc
or
adc
push
jle
lcall
hlt
rol
inc
add
out
xchg
pop
add
scas
hlt
hlt
xlat
imul
dec
and
mov
cli
sub
xlat
sbb
xchg
insb
cld
ret
jnp
mov
dec
add
xchg
pusha
sbb
stos
orb
and
and
fidivrs
xor
add
cld
and
insl
pop
sbb
pusha
enter
mov
sub
jnp
clc
adc
iret
rcl
pop
je
fwait
sub
sbb
js
xchg
fnsave
jb
sbb
jbe
lret
sbb
test
jo
mov
add
xor
cs
imul
bound
pop
and
lret
in
fistpll
cmc
pop
dec
mov
or
push
or
sarl
jmp
pop
xchg
test
xlat
enter
jp
imul
cltd
hlt
mov
cmc
scas
lods
out
pop
nop
and
stos
addb
fdivr
lock
fimuls
int3
shl
xchg
pop
ljmp
xchg
into
pop
or
and
jae
in
pop
xchg
add
mov
insl
mov
insb
jp
cmpsl
mov
daa
rolb
pop
ret
cmpl
rolb
adc
jno
inc
lahf
mov
cmpsb
push
mov
fs
xlat
aam
mov
or
inc
add
pop
subl
daa
cltd
mov
imul
scas
xor
fwait
test
jnp
hlt
pop
adc
inc
shrl
push
mov
xchg
sbb
mov
lods
sub
int3
mov
negl
fs
adc
aas
test
fidivrl
nop
lea
or
add
popa
cmc
pusha
jo
mov
or
imul
fcmovne
mov
dec
and
in
push
fcompl
inc
xorl
fisubs
adcl
mov
icebp
sahf
mov
lods
add
inc
push
repz
in
jl
cmp
jbe
lods
scas
int3
cmpb
jne
clc
inc
sbb
add
mov
mov
xchg
and
and
stc
and
fs
faddl
or
insl
cmp
push
xor
mov
pop
shrb
shll
das
sbb
ret
jecxz
sahf
mov
or
fldcw
pop
pop
pop
xchg
sahf
loope
mov
std
mov
test
or
hlt
bound
hlt
imul
jbe
out
movsl
mov
sub
push
cwtl
xlat
int
xchg
add
andb
sbb
add
repnz
jg
lods
leave
ss
popa
jl
jno
pop
ret
fsubl
stos
loop
xchg
imul
fs
sub
test
cld
lods
adc
cld
or
in
sbb
imul
pop
cmpsl
loope
push
add
movsb
cwtl
int
inc
pop
das
xchg
pushf
pusha
inc
andl
mov
adc
rorl
sub
stc
rcl
xor
add
clc
popa
mov
or
mov
cli
add
cmp
xchg
xchg
imul
xor
jo
sar
pop
sbb
jmp
stc
mov
leave
pop
xor
ja
or
sub
mov
mov
dec
or
inc
dec
mov
mov
mov
mov
add
scas
js
pop
and
sbb
add
mov
fcoms
dec
dec
mov
sti
pop
pop
add
mov
scas
ljmp
inc
scas
adc
adc
dec
push
add
mov
cld
je
lcall
ret
mul
aas
xchg
aaa
or
rolb
shll
add
stos
sar
push
je
cwtl
cs
mov
scas
pop
pushf
dec
mov
pop
in
xlat
adc
mov
sbb
mov
ljmp
adc
iret
pushf
sbb
cmp
cmp
mov
pop
jge
lret
pop
fwait
sbb
scas
repz
fmuls
stc
mov
movsb
jmp
push
out
and
dec
adc
pop
imulb
sub
fsub
sub
shlb
mov
push
jecxz
mov
pop
mov
stc
sti
jnp
cmp
push
adc
xchg
fistpll
lret
rorl
and
testb
mov
mov
mov
es
insl
mov
inc
popf
hlt
fdivrs
lret
ret
outsl
out
out
lods
loop
loopne
add
cmp
lret
je
addr16
into
in
pusha
cmpsl
jg
inc
shlb
cmpsb
lsl
cwtl
int3
orl
mov
sub
lcall
mov
ds
adc
jbe
add
repnz
jge
lahf
xor
fs
mov
xorps
decb
fidivrl
push
sti
cltd
sub
mov
pop
mov
js
adcb
addb
jmp
ljmp
in
subl
cmp
js
push
sbb
sub
or
jmp
cltd
mov
pop
fs
xchg
fsubrs
jecxz
out
mov
push
ljmp
mov
sbb
xchg
inc
jle
pop
pop
nop
adc
iret
inc
popl
fstpt
clc
add
jns
in
and
gs
pop
shrl
mov
mov
pop
and
cmc
lea
pusha
ja
aam
aas
scas
push
mov
push
addr16
add
and
stos
shll
sbb
mov
gs
sbb
mov
cs
in
mov
cmpsl
mov
test
sub
adc
addr16
scas
xor
adc
int3
ljmp
test
ja
sub
out
jns
mov
mov
xorl
pop
test
xor
repnz
arpl
xor
dec
xlat
jns
test
dec
cli
push
lods
cmpsl
sbb
xor
push
mov
mov
mov
insl
mov
imul
sahf
pushf
movsb
mov
mov
hlt
fcmovu
sub
push
rcll
sbb
pop
sahf
sub
data16
dec
push
sti
adc
adc
cmpsl
out
mov
pop
cmpsb
aad
test
mov
iret
popf
add
dec
cmp
xlat
sbb
inc
or
xor
push
push
jmp
cmp
popa
jns
mov
xchg
insb
imul
ret
hlt
mov
adc
es
inc
ja
inc
jmp
out
jle
or
and
aam
pop
lret
lds
shlb
dec
xchg
jl
push
push
mov
sub
mov
pop
daa
xor
insl
inc
lods
sbb
pop
jle
xor
sbb
xchg
jmp
cld
jmp
push
ret
sbb
stos
mov
cmp
insb
and
out
push
xor
sbb
out
sub
out
mov
loope
jge
mov
fidivrs
ds
int3
movsb
adc
mov
out
sbb
test
out
ds
repz
or
add
data16
es
jne
xchg
and
leave
xchg
ds
cmp
jb
mov
adc
cwtl
pusha
mov
inc
idiv
inc
popa
call
repnz
jne
aas
pop
test
rcrl
div
pop
scas
inc
rcr
fidivs
push
jno
cltd
and
in
push
fdivrs
pop
xor
mov
scas
xchg
je
mov
mov
lret
mov
or
rol
fs
lods
loope
lret
ds
xchg
mov
dec
add
das
enter
ja
xchg
call
mov
sbb
fsubl
add
stos
mov
shll
cwtl
push
fs
cmc
adc
jmp
xchg
mov
es
mov
adc
adc
fsubr
or
repnz
fbld
call
scas
sub
jb
pop
test
xchg
and
inc
cmpl
xorl
roll
mov
xchg
mov
xchg
rorb
pop
dec
jnp
push
mov
les
push
popa
in
stc
daa
sub
push
lea
mov
aas
pop
or
sti
pushf
dec
shlb
xchg
lds
cmpsb
mov
in
test
or
out
mull
mov
push
ret
jno
rolb
jno
fidivl
adc
cmpsl
aaa
lea
cmp
inc
shlb
inc
loopne
loope
or
fs
lret
add
popf
push
ss
and
mov
pop
addl
nop
pop
out
adc
jmp
add
int3
fisttpll
sbb
sub
jne
loope
mov
mov
sub
inc
push
lods
repz
mov
dec
xor
mov
stos
dec
mov
xchg
mov
mov
clc
xchg
movsb
mov
fnstsw
inc
or
movsb
ljmp
sbb
notl
ret
xor
mov
pop
incb
pop
test
mov
dec
xchg
loopne
fldl
jl
cmp
add
push
xorb
fmuls
push
dec
stos
inc
push
sub
icebp
das
inc
or
jae
dec
mov
testl
xchg
xorl
fdivr
or
setbe
repnz
lcall
cmp
push
pop
inc
pop
pop
cmc
arpl
jecxz
movsb
jecxz
pusha
xchg
sahf
mov
and
les
xchg
lock
xorb
mov
sub
inc
loopne
sub
mov
mov
gs
in
cs
mov
xchg
sahf
mov
mov
repnz
and
adc
movsb
dec
push
mov
mov
les
and
aam
cli
jl
fstps
rolb
push
xor
pusha
xor
mov
push
fsubrs
xor
mov
dec
pop
arpl
enter
imull
adc
fcmovbe
in
cmc
jmp
std
hlt
fnsave
sti
inc
adc
inc
insb
stos
lods
aaa
fucomi
sbbl
ficomps
push
add
jmp
push
hlt
insl
and
stc
mov
adc
dec
xchg
sub
lods
ret
pop
insl
dec
lock
push
mov
xchg
bound
cmpsl
outsl
mov
dec
xor
or
pop
insb
aas
in
hlt
icebp
mov
sbb
sbb
xorb
mov
mov
sub
hlt
outsb
rorb
push
push
inc
shrl
mov
and
push
bound
lret
pop
mov
pop
movsb
push
pushf
sbb
cmpsb
std
pop
add
mov
push
mov
inc
das
pop
dec
das
jnp
test
hlt
leave
outsb
je
jle
popa
pop
inc
jp
out
sub
fimuls
movl
orb
or
ficoms
jge
xor
mov
inc
mov
lock
int3
stc
pop
mov
js
outsb
sbb
pop
sub
sub
or
jae
jp
daa
clc
test
push
aas
xchg
lods
bound
push
push
xor
jl
adc
or
scas
movsl
cmpsb
sub
push
jp
jnp
mov
mov
out
jl
pushf
imul
dec
inc
rolb
cs
jns
fs
mov
jae
fsubr
jo
into
iret
aaa
inc
lds
insb
inc
jo
outsl
sbb
xchg
and
mov
xor
xchg
fsubp
push
rclb
and
jnp
jp
jmp
call
loope
mov
and
imulb
adc
mov
xor
lret
and
loope
inc
add
xor
xor
fimull
jmp
cmp
aad
mov
mov
pop
and
arpl
jg
xor
xlat
ds
pop
xchg
jle
inc
lods
movb
push
fisttpll
js
hlt
add
arpl
or
fisttpl
or
pop
and
pop
mov
aam
and
xor
mov
adc
jmp
adc
fmul
jo
add
jnp
dec
fisubl
or
in
cld
lret
fs
adc
daa
jg
add
and
push
leave
cmp
fidivrl
cmpb
dec
mov
xlat
xchg
aam
mov
mov
push
cmp
inc
push
ret
int3
pop
mov
popl
xchg
movsb
scas
mov
mov
mov
push
pop
dec
std
adc
mov
sbb
or
sub
xchg
cmp
xor
dec
adc
xor
pop
push
and
and
fwait
mov
test
lahf
xor
loop
cmpsb
out
push
scas
pop
push
mov
lods
jne
je
mov
call
cwtl
add
into
jne
shrl
iret
push
testl
sti
imul
mov
rcrb
add
popf
lods
push
das
movsb
add
aad
in
das
push
dec
ret
loopne
xchg
or
in
insb
mov
es
insb
xor
or
packuswb
ss
inc
sbb
jno
xor
jns
mov
mov
xor
imul
add
adc
mov
adc
fwait
enter
cmc
mov
sub
dec
add
cmc
pop
pop
push
iret
popf
sahf
mov
aas
je
and
fyl2x
fisubs
or
sub
inc
cmp
les
sbbb
add
mov
or
inc
inc
xchg
mov
out
cmpsb
pop
mov
cmp
sub
jmp
ret
sbb
repnz
cmpsb
jno
enter
sub
dec
notl
rolb
xchg
jo
xchg
lock
xor
inc
mov
mov
jno
shrb
addr16
jno
enter
mov
das
lock
rclb
jmp
inc
mov
pop
out
push
jno
dec
pop
lods
fimull
jbe
vmaxss
js
fprem1
movsb
leave
mov
or
cmp
jne
mov
jmp
shlb
or
lods
jl
arpl
mov
adcl
push
xor
ret
xlat
shr
lds
or
stos
cmp
push
dec
roll
ja
out
add
add
test
dec
sti
cmpsl
fadds
psubusw
sub
test
mov
jb
sti
test
in
adc
mov
shll
xchg
cmp
pop
xchg
ret
lds
sbb
movsl
adc
stos
xor
addr16
insb
jbe
pop
jnp
aam
repz
dec
pcmpeqd
int3
or
xor
push
lds
mov
mov
daa
lret
clc
bound
pop
out
push
and
xor
lea
imul
sbb
and
adc
pushf
popa
lods
cmp
rol
outsl
out
mov
test
cmp
sub
xchg
ficomps
lods
jecxz
stc
xchg
cmp
pop
mov
inc
roll
test
pushf
aad
inc
int
xchg
out
mov
into
bound
dec
js
loope
pop
fsubr
push
loope
push
movsb
fstpl
dec
jne
mov
xor
arpl
or
sub
in
dec
push
pop
dec
sbb
repz
mov
mov
das
repz
push
idivb
nop
in
insl
mov
jmp
gs
les
adc
aas
pop
stc
fbstp
imul
adc
cld
jo
and
or
or
fistpl
inc
push
mov
test
jnp
rolb
push
lret
jne
mov
lods
adc
btr
test
cmp
cmpsb
xchg
adcl
mov
js
mov
stc
hlt
mov
adc
pusha
add
sbb
into
xor
ficoml
jge
mov
cmovbe
dec
mov
or
icebp
movsb
mov
out
mov
loopne
push
or
mov
bound
push
aad
ljmp
cs
fwait
mov
push
das
sub
rclb
aam
insl
inc
pop
pop
push
out
inc
or
sbb
int3
pop
xchg
mov
rorb
ret
mov
repz
leave
xor
xchg
mov
mov
add
sbb
inc
shll
pop
test
adc
push
pop
mov
scas
xor
cmp
and
or
pop
jmp
mov
mov
scas
shrl
xchg
pop
or
add
and
or
xor
pop
rcl
push
bnd
mov
sub
inc
shrl
push
test
sti
into
and
aam
jp
or
out
clc
cmpsl
or
pop
pop
pop
es
add
cpuid
mov
aas
std
out
lea
push
sub
mov
or
push
and
jecxz
imul
mov
pop
or
dec
jmp
push
in
in
sti
ret
scas
jns
aaa
push
stos
clc
data16
xchg
push
xchg
dec
xchg
lea
cltd
cmp
jnp
aad
movb
imul
int
mov
lcall
call
push
sbb
fisttpl
and
cmp
adc
popa
pusha
xor
and
mov
packssdw
sub
and
nop
or
pop
mov
gs
push
pop
jge
jmp
repz
testl
push
push
scas
out
scas
negl
push
cwtl
loopne
jno
cmp
mov
mov
mov
cmp
adc
dec
loope
fcoml
cmp
xchg
xlat
or
leave
cwtl
dec
sub
iret
dec
adc
repz
not
subb
fwait
adcb
adc
ja
mov
add
popl
push
sub
cmp
xchg
aas
push
dec
in
data16
pop
add
pop
adc
iret
loope
mov
mov
movsl
test
add
test
jnp
pop
lea
xchg
call
mov
or
sbb
call
mov
popa
mov
mov
or
or
lods
mov
or
popf
es
dec
es
push
jnp
cld
aaa
sahf
xchg
cmpsl
mov
lahf
adc
test
fbstp
or
scas
stos
sub
add
push
mov
repnz
sbb
jecxz
jmp
call
fstpt
call
lock
mov
mov
icebp
jg,pn
or
cmpsb
ja
push
jg
ret
adc
push
mov
imul
adc
dec
iret
xor
nop
scas
insl
dec
sti
scas
nop
dec
pusha
stos
fs
std
pop
ds
stos
inc
aam
mov
data16
xchg
adc
sbb
and
and
pop
cmp
pop
push
sub
add
or
add
nop
lret
mov
jne
scas
mov
mov
add
push
in
data16
cmp
ror
hlt
and
pop
sbb
xchg
sbb
call
icebp
test
int
inc
mov
std
sti
popf
int3
lock
insl
push
pop
add
jne
int3
mov
fsubs
jb
aam
mov
sub
mov
jl
pop
sub
xchg
out
int3
stc
daa
push
or
lcall
test
sti
push
xchg
adc
cmpsl
mov
stc
daa
sub
mov
push
xchg
sbb
in
cmp
cmp
xchg
mov
jl
add
jle
or
loopne
push
subl
outsl
mov
pop
shll
adc
mov
inc
mov
sbb
ret
cmp
enter
ljmp
rcl
inc
popa
cmp
mov
adc
sub
out
test
subb
sub
sbb
sub
mov
aas
and
and
lahf
stos
repnz
sarb
sahf
in
xor
add
enter
dec
adc
mov
push
jae
mov
std
ss
or
adc
xchg
fistpll
pushf
cli
scas
jno
jp
and
movsb
sbbl
jbe
mov
sub
cmp
rolb
adc
cwtl
push
popf
pop
push
sbb
mov
mov
inc
inc
popfw
dec
imul
push
xchg
stos
or
cli
out
xor
push
mov
dec
mov
mov
and
es
shl
mov
stc
roll
and
lods
fdivrs
pushf
pop
pop
lret
xchg
xchg
mov
cmc
nop
imul
notb
dec
add
loope
sti
push
push
dec
insl
loope
inc
and
cld
fcoml
out
stos
xchg
fmuls
test
mov
cs
jge
adc
stc
adc
mov
test
fistl
loope
in
xchg
pop
sub
dec
loope
jns
pop
mov
or
fidivs
cmp
faddl
sbb
jmp
mov
decl
scas
xor
pop
pop
test
or
cmp
and
mov
pop
push
mov
bound
into
fldenv
xor
lcall
jecxz
imul
dec
mov
sub
mov
push
ljmp
push
push
out
push
lock
addb
or
jmp
loope,pt
jmp
xor
ja
jae
les
sarl
loopne
sub
add
movsb
push
dec
sub
dec
test
xchg
inc
jae
lea
jmp
ret
cmp
mov
aad
push
mov
push
dec
shrb
lret
movsl
add
repz
pop
pusha
push
les
mov
mov
outsl
popf
dec
loopne
mov
pop
ss
dec
sub
adc
or
popa
imul
pop
pop
mov
push
push
push
popa
cmp
mov
sub
filds
jbe
in
push
insb
lcall
mov
out
cltd
outsl
jno
mov
mov
mov
jbe
movsb
dec
les
xor
movsb
xlat
repnz
sbb
out
js
adc
dec
ljmp
dec
enter
mov
ds
daa
sub
cmpsl
pop
stos
push
inc
sub
or
in
in
test
test
and
xchg
das
cmp
dec
xor
or
xchg
push
mov
push
mov
or
lret
aam
scas
pop
jnp
shr
xchg
push
shlb
cli
sarl
sub
jg
scas
je
lret
or
sbb
mul
mov
push
data16
dec
jle
and
sub
cld
push
popf
xor
inc
shll
push
xchg
in
mov
push
aam
or
mov
mov
cwtl
push
dec
add
pop
icebp
inc
nop
adc
and
rclb
mov
mov
adc
lods
nop
out
mov
outsb
fcompl
or
pop
or
jno
adc
xchg
inc
push
jp
sub
mov
mov
cmp
push
into
mov
or
mov
movsb
stc
mov
sub
inc
mov
shll
aas
fsubrl
xchg
dec
cltd
jne
xchg
outsb
or
call
cld
fisubs
aam
pop
imul
cmpsb
hlt
xchg
add
mov
ds
sub
fs
in
lods
mov
mov
xchg
or
xor
push
sbb
dec
movsl
push
jno
hlt
or
push
xor
aas
or
pop
fisttpl
dec
or
fisubl
repnz
in
and
insl
addr16
cld
push
xor
adc
fwait
and
cmp
clc
ljmp
rorl
icebp
pop
pop
cmpsb
mov
imul
mov
push
ss
mov
das
out
aas
lea
push
mov
push
inc
xor
lock
add
jmp
pusha
and
mov
pop
int3
mov
xchg
sub
daa
nop
mov
xor
fsubs
xlat
rclb
in
lcall
addr16
leave
add
xchg
jle
shlb
mov
or
dec
and
or
aad
repz
fisubs
popa
clc
mov
mov
sbb
inc
popa
lods
jae
fwait
aam
neg
aas
dec
imul
fisttpll
movsb
jmp
pushf
mov
sbb
push
pop
mov
into
andl
faddl
mov
jle
icebp
mov
mov
pop
in
or
adc
pop
nop
mov
pop
add
xor
loop
mov
mov
add
push
outsb
jae
sbb
mov
loope
loop
loopne
in
ss
mov
inc
std
fcomps
cmp
mov
bound
test
and
out
xchg
pop
fcomi
push
jnp
push
push
data16
cmp
outsb
stc
cmp
mov
arpl
jle
cmp
jge
mov
push
daa
cli
scas
and
dec
inc
fcoml
and
adc
jbe
es
stos
insl
add
ret
enter
rep
sbb
in
and
insb
cmp
mov
addb
fadds
xor
stos
lret
dec
mov
in
pop
out
inc
and
xchg
sbb
or
lock
xlat
add
movsl
push
pushf
mov
lret
adc
les
sub
mov
jne
mov
enter
inc
ret
sbb
das
sub
sub
lods
push
cmp
sbb
adc
scas
repnz
xchg
pop
nop
faddl
sahf
fmull
push
xor
xchg
push
push
aaa
lock
or
cmp
add
pop
fstl
jno
lds
xor
popa
repz
adc
jo
frstor
pop
sbb
addr16
push
or
jecxz
or
mov
insl
xor
add
mov
inc
aaa
or
push
jae
in
dec
int
push
test
loope
movsb
mov
mov
adc
out
les
jecxz
aas
enter
xor
or
rolb
mov
push
pop
mov
add
dec
cwtl
adcl
ja
aad
xchg
out
outsb
lcall
jnp
jns
xorb
push
cs
ret
lret
scas
pop
lahf
mov
jnp
cs
jb
in
cmp
sbb
dec
dec
shlb
push
cmp
mov
idiv
mov
jmp
lcall
divl
jp
inc
or
add
and
sub
cmpsl
test
insl
adc
out
in
inc
adc
adc
adc
dec
jp
jecxz
lcall
push
dec
nop
inc
loop
subb
sub
into
outsl
sub
mov
mov
nop
xchg
cmp
sbb
jle
inc
lock
dec
stos
xlat
mov
les
jmp
pmaxsw
sbbb
push
mov
mov
fdivrp
adc
dec
insb
or
xchg
jp
iret
adc
pop
pop
arpl
cld
cmp
xlat
stc
nop
daa
pop
mov
mov
xor
push
scas
ret
cmc
xchg
sub
call
push
ss
divb
and
pusha
xchg
xchg
dec
into
das
push
aas
dec
jmp
cmp
cmc
jmp
mov
sbb
mov
rcll
cltd
je
jno
or
stos
inc
stc
mov
insb
or
xchg
xor
mov
nop
lret
pop
push
ljmp
es
je
repnz
sbb
rcrl
clc
adc
xchg
js
or
sbbl
adc
mov
pushf
push
jecxz
pop
shrl
push
cld
or
js
push
pop
stc
xor
xor
mov
mov
insb
mov
xor
incl
loop
sub
and
adc
mov
repnz
cmp
rcr
fidivl
das
into
xchg
sbb
in
lods
ljmp
inc
cld
pop
pop
ds
scas
xor
lds
das
out
xlat
fiadds
jle
mov
das
inc
add
inc
mov
and
jnp
or
outsl
add
sub
divb
mov
jnp
mov
and
ret
cmp
xorl
dec
jg
sahf
inc
fildl
imul
pop
or
or
lods
mull
lahf
lock
stc
mov
rcrl
jmp
mov
pushf
dec
pop
aam
or
lock
push
mov
addb
cmpps
lcall
call
push
cmp
es
fdivrl
mov
pop
dec
dec
cmp
sub
xchg
fmull
dec
pop
mov
out
mov
outsb
int3
stos
js
xor
stos
push
pushf
ret
test
stos
sub
mov
jecxz
cmc
aas
nop
shl
xorb
xchg
sbb
sbb
sbb
dec
lea
neg
inc
lds
bound
jo
mov
cwtl
lret
shlb
leave
loope
mov
inc
jmp
cmpsb
cmp
js
popa
push
das
cmpsl
inc
std
mov
cmp
fstpt
pusha
enter
es
push
mov
lret
inc
dec
cwtl
dec
jno
add
pop
test
pop
dec
mov
jae
aam
and
adc
cmpsl
icebp
pushf
subl
scas
xchg
shl
xchg
lret
lods
stc
pop
cmp
loop
in
xchg
insb
sbb
mov
inc
out
cmpsl
xor
and
pop
adc
rcrb
jne
cmp
mov
jmp
jae
mov
pop
mov
mov
enter
mov
popa
in
mov
push
and
dec
setg
stc
dec
push
int
or
or
mov
cwtl
jle
push
cltd
lret
sbb
cld
in
dec
sub
or
loop
sbb
shrl
loop
push
bound
test
fiadds
lods
xor
lods
stos
cmp
push
cltd
jl
pop
insb
or
mov
jae
and
and
popa
lahf
push
test
lods
addb
and
sbb
jmp
inc
xor
pop
mov
or
or
in
xor
inc
scas
sub
ljmp
xchg
lock
pushf
scas
scas
shll
push
mov
cs
cmp
cld
inc
inc
inc
push
aam
scas
arpl
je
pminub
xor
inc
jnp
popf
mov
xor
pop
sarl
leave
dec
mov
pop
add
sub
loopne
mov
lahf
lea
jno
sbb
jle
push
shl
fwait
jge
insl
xchg
testl
inc
sub
and
add
imul
movsl
add
push
mov
stos
pop
jl
adc
popa
xor
fisttpll
mov
lods
hlt
in
in
or
mov
adc
push
cmpsl
adc
aam
push
push
test
pop
mov
jge
jbe
pop
jbe
pop
push
push
jns
or
out
inc
mov
and
lret
inc
mov
xor
bswap
jmp
jl
repz
int3
lds
fildl
cmc
scas
dec
insl
daa
sbb
mov
cmc
push
jecxz
xor
pop
sub
cmp
or
in
jge
repnz
loop
lret
pop
xchg
mov
or
imul
pop
test
adc
add
int3
and
inc
fwait
popa
nop
and
cmp
xchg
je
or
popf
or
cli
shl
push
int
add
test
sbb
data16
push
sbb
sbb
jmp
dec
jmp
mov
into
scas
cmp
mov
push
cmp
out
aad
adc
mov
inc
data16
out
jecxz
inc
push
icebp
or
cmp
addb
dec
mov
int3
jns
adc
jne
in
xchg
andl
neg
filds
xchg
push
cmp
dec
movsl
fwait
xchg
lahf
loop
sbb
add
add
insb
test
fisttpll
sub
shll
jns
dec
mov
in
sbb
pop
push
ljmp
fsubrl
xlat
pop
sbb
iret
arpl
cs
icebp
shrl
jo
daa
inc
push
fisttpl
popf
jae
pop
and
in
mov
cs
sub
cmp
push
cmpb
inc
pop
xchg
mov
rcll
shll
pop
and
and
out
xchg
shll
aad
nop
jle
cmp
cs
mov
das
mov
cltd
push
hlt
subb
or
mov
xor
inc
loop
sbb
repnz
and
pop
enter
ds
stos
mov
cli
sbb
inc
or
int3
and
mov
in
aaa
cmpsb
fs
fadd
jmp
je
xchg
cld
or
inc
jp
push
in
sub
out
jnp
aam
in
and
in
mov
in
rcrl
enter
ds
push
inc
rol
cmp
andl
cmp
mov
mov
mov
dec
push
shrl
jae
xor
cld
pop
mov
inc
cld
and
shlb
xor
dec
mov
mov
movsb
in
gs
push
cmp
push
cld
loope
mov
in
xor
mov
mov
out
shl
xchg
pop
adc
push
hlt
dec
int
test
movsb
dec
out
stc
rclb
adc
pop
mov
repz
add
inc
lret
jns
test
addl
dec
sbb
xlat
xor
xor
addr16
jg
or
cmp
test
iret
xchg
pop
call
fistpll
fmul
xor
mov
scas
push
xorb
loop
or
xor
jmp
insl
dec
cmpb
mov
mov
push
lds
fldt
adc
mov
mov
cmp
cmpsb
cmp
fmuls
mov
mov
ret
xor
sbb
xchg
lock
out
mov
lcall
int3
scas
mov
aaa
sahf
lods
sub
orb
cli
dec
xchg
test
sub
or
gs
enter
fwait
pusha
push
xchg
jl
adc
xchg
pusha
lods
and
cmp
cltd
lcall
jns
mov
je
lds
ljmp
or
fldenv
leave
cmp
pop
inc
adc
ljmp
pop
idivl
jge
add
mov
lods
shll
mov
push
xchg
push
lea
scas
gs
addr16
push
loopne
sub
push
xchg
push
inc
inc
xchg
test
enter
mov
lahf
inc
ret
push
xor
cmp
insb
mov
xchg
or
xchg
mov
mov
mov
push
and
iret
int
jbe
addr16
cmc
add
insb
pop
adc
adc
pushf
or
sti
jecxz
divl
fcmovu
xchg
sti
scas
mov
dec
cmpsb
mov
inc
jno
in
lcall
sbb
call
arpl
jle
imul
mov
mov
dec
mov
or
popf
pop
mov
xor
mov
jecxz
ja
cmp
lea
andb
mov
mov
ja
shll
mov
out
movl
jl
dec
xchg
sahf
xchg
mov
mov
sti
sub
and
inc
into
dec
call
xor
push
pop
jae
pop
adcb
cmc
add
dec
mov
fidivrl
xor
cs
jp
push
shll
fsts
inc
mov
jbe
mov
fdivl
icebp
push
or
icebp
clc
or
into
aas
mov
cmp
jbe
rcrb
adc
sarl
shr
cmp
ret
xor
call
es
mov
sarb
aas
aad
pop
das
pop
outsl
sbb
sahf
mov
repz
fdivl
jge
lret
in
and
orb
movsl
or
leave
cmp
mov
shll
gs
push
mov
frstor
std
add
dec
rclb
jg
push
imul
jmp
lret
insb
mov
popf
inc
imul
mov
or
scas
sub
mov
lods
popf
jle
outsl
xchg
xchg
lret
mov
inc
into
test
call
push
add
les
jl
push
sahf
xchg
jl
mov
mov
cld
sub
jge
cli
fs
imul
dec
cmp
xchg
xor
dec
sub
cmp
mov
lea
pop
out
scas
mov
cmp
rcrl
add
loope
sbb
outsl
js
xor
mov
mov
add
adc
mov
mov
aas
lods
sbb
sbb
inc
adc
test
dec
cmp
push
mov
sbb
cs
rcr
in
push
mov
xchg
jle
call
inc
xchg
push
sub
loop
cmpsl
imul
sub
inc
adc
xor
faddl
mov
jne
xor
nop
shrl
fcompl
fcmovnu
sbb
pop
sub
xchg
cltd
mov
add
add
and
mov
adc
adc
push
and
outsl
cltd
movb
jb
cld
test
outsb
xchg
xchg
pop
sub
mov
push
xchg
outsb
lret
movsl
sbb
xor
sub
pop
ret
ds
sub
test
cs
jge
and
mov
ljmp
push
icebp
and
and
push
outsl
subl
jg
pusha
dec
dec
hlt
push
sar
pop
ss
jbe
xchg
out
jno
dec
cmp
repz
adc
mov
jmp
inc
int
add
or
pushl
inc
jmp
aaa
cmpsl
nop
pop
or
sti
mov
xor
mov
outsl
push
push
out
mov
sbb
jg
mov
popf
fdivrs
mov
in
cmc
lcall
inc
sbb
test
push
outsl
fstpt
xchg
flds
push
jb
inc
arpl
push
cmp
in
enter
xor
rorb
adc
cld
lock
cs
dec
or
adc
jns
mov
mov
outsl
dec
shll
inc
adc
add
ja
aad
lahf
test
and
sbb
leave
ljmp
mov
mov
push
gs
dec
or
inc
push
mov
fs
stos
adc
and
push
ss
nop
xchg
pop
dec
xchg
stc
cmp
push
adc
dec
in
xor
inc
imul
mov
icebp
jle
sub
sbbl
mov
fidivrs
stc
aam
xchg
jne
call
jo
cli
mov
cli
lods
and
lods
lock
lods
mov
in
mov
sub
repnz
pop
mov
sbb
nop
cmp
mov
test
pushl
inc
ret
xorb
jnp
cmpsl
push
mov
fs
push
sahf
mov
sub
xor
dec
dec
lods
insl
shrl
mov
push
jns
mov
dec
mov
push
es
lock
sub
scas
mov
cmpsl
push
mov
jb
mov
jo
sbb
xchg
outsl
pop
jl
leave
das
faddl
jge
out
lods
sbb
adc
xlat
add
add
mov
pop
jns
lods
push
and
or
sbb
xchg
bound
mov
js
pop
ja
cld
push
sahf
dec
and
es
inc
cmp
fists
and
test
repnz
pop
leave
pop
enter
stc
mov
mov
cmp
jmp
enter
mov
push
xchg
push
sbb
sbb
das
icebp
dec
mov
out
in
jne
shll
pushf
out
adc
push
cwtl
test
inc
sbb
add
gs
dec
xor
js
imul
adc
sub
test
pop
call
in
mov
ja
and
push
adc
xchg
fucomip
icebp
jg
inc
push
inc
sub
sub
mov
notl
dec
fs
dec
pop
iret
dec
inc
loope
movsl
les
mov
jns
and
loope
adc
push
fucomi
dec
int
and
and
jle
gs
loop
fiaddl
push
jno
clc
or
dec
adcb
jge
dec
imul
stos
fldcw
xor
inc
mov
out
dec
mov
iret
inc
jno
dec
ror
fiaddl
ret
fadd
xorb
clc
les
roll
sti
shlb
rorl
dec
and
dec
loop
dec
cmovge
mov
loope
inc
das
out
push
les
or
xor
out
mov
sub
and
dec
repz
push
dec
aas
out
push
fimuls
insl
add
sbb
scas
and
ljmp
faddl
cmp
ret
fdivr
sub
and
testb
pusha
push
in
push
movsb
mulb
test
dec
pop
lods
inc
xor
inc
xor
cmp
lods
jmp
inc
rcr
dec
leave
xor
pop
or
add
inc
shlb
or
out
loopne
hlt
shll
lds
insb
mov
lea
ds
jno
inc
repnz
mov
lds
xchg
fcmove
lcall
and
call
scas
inc
xorl
xor
roll
ja
dec
push
dec
cmp
int3
pop
or
incb
xchg
xor
xor
jne
sub
gs
pop
dec
std
scas
xlat
popa
sbb
push
sub
xor
sub
pop
sub
aaa
lcall
mov
loopne
cmp
shlb
mov
and
fadd
sub
mov
scas
mov
jns
movsb
adc
outsb
push
sub
cmpsl
fdivrp
and
jne
roll
in
pop
push
cmp
dec
and
lret
out
ret
sub
in
rorl
mov
add
xor
frstor
sub
test
das
mov
addr16
imul
repnz
xchg
hlt
cmp
jp
test
xor
shl
pop
push
mov
lods
xchg
mov
fwait
or
shlb
mov
sar
rclb
xor
dec
ret
xchg
adc
cmc
xchg
jo
sbb
lret
adc
rclb
jbe
in
mov
adc
fcompl
outsb
fildl
jmp
mov
imul
xor
xchg
lcall
jge
push
dec
xchg
leave
add
es
cmp
lret
data16
mov
mov
bound
sub
or
add
mov
adc
stos
ret
add
sbb
mov
adc
ret
sbb
test
dec
out
ds
into
and
inc
cltd
adc
or
push
sbb
inc
fidivs
jno
pushl
sub
lea
fdivrs
movsb
es
leave
mov
cmpsb
push
push
adc
sub
fmuls
inc
adc
ss
or
add
push
jno
jno
mov
iret
xchg
pop
in
inc
sahf
dec
dec
sbb
pusha
sub
push
jae
fisubs
popf
mov
fisubrl
bound
jne
sbb
arpl
inc
outsb
cmp
add
ja
and
lea
lock
mov
hlt
sub
hlt
testb
repnz
push
pop
mov
ret
popf
xchg
pop
jno
xchg
add
mov
pusha
loop
cmp
ds
pop
pusha
lea
insb
jg
xor
cmpl
sbb
stos
test
sbb
cmc
inc
and
out
lods
xchg
aam
adc
lahf
pop
jno
inc
icebp
cwtl
hlt
movsl
jl
pop
and
stos
sub
inc
aam
ds
mov
andl
mov
or
xlat
jns
popa
sbb
and
out
fisubrl
push
cmp
xor
push
mov
insl
and
cmp
xor
lahf
jo
fimuls
pop
pop
mov
adc
xor
in
push
stos
push
push
loop
call
add
pop
push
jmp
hlt
in
sahf
clc
addr16
dec
daa
sub
push
pop
dec
es
hlt
iret
mov
adc
pop
dec
xor
push
or
stos
and
push
mulb
xor
iret
cmp
pop
xchg
mov
pop
es
test
arpl
jb
xchg
loopne
add
loope
std
jle
mov
adc
sti
mov
inc
dec
imul
sbb
inc
sub
dec
std
add
ror
inc
pop
mov
cmp
xchg
addr16
or
sti
es
sbb
fsts
cld
pop
jb
sub
pop
mov
hlt
mov
push
shrb
and
xchg
inc
lods
bswap
rclb
sbb
xchg
jmp
iret
sub
mov
mov
mov
sbb
inc
fsts
pop
and
cmp
xchg
mov
sub
pop
mov
shlb
stc
pop
pop
dec
lret
call
xor
cwtl
jge
xchg
and
pop
ljmp
adc
push
shlb
iret
xchg
inc
sub
sbb
jl
loop
out
push
mov
pop
hlt
mov
iret
lcall
adc
inc
repz
jmp
jnp
jb
mov
pop
aas
cmpsb
xor
inc
xchg
dec
add
sarl
adc
call
lahf
jbe
pop
inc
ja
adc
pop
mov
mov
mov
enter
cwtl
xchg
mov
int3
arpl
mov
clc
icebp
xchg
jle
shlb
fldl
mov
mov
mov
scas
xchg
add
sub
pop
push
mov
and
pop
push
mov
mov
push
imul
dec
mov
aaa
sub
std
or
mov
arpl
dec
iret
cmp
add
sub
jge
ret
mov
mov
mov
and
xchg
add
xchg
fcompl
jg
ficoml
pop
jle
mov
fcmovnu
int3
add
addr16
cmp
aas
iret
and
push
enter
mov
push
fisttpll
jns
cli
push
pushf
push
xchg
pop
push
xor
in
or
int3
shl
repz
mov
test
dec
out
cmp
sahf
js
mov
out
sbb
push
dec
ret
mov
daa
in
pop
push
lods
movsb
sub
cmc
push
cs
pop
cmovp
shrl
adc
outsb
adc
sub
dec
xchg
jle
std
mov
push
sub
jmp
xor
in
jo
addr16
test
std
jl
imul
cmp
adc
pop
xchg
test
repz
push
aas
jbe
cmc
push
add
add
push
into
in
sbb
jb
inc
hlt
push
fimull
pop
cmp
sbb
jns
clc
jge
icebp
into
and
pop
outsb
xchg
psllq
aad
sub
fucomip
mov
js
push
addb
pop
push
test
mov
cmp
mov
and
out
addb
icebp
sarb
enter
jo
stc
andb
in
adc
cmp
add
push
sub
mov
pop
sbb
mov
loop
cmp
inc
dec
into
imul
or
and
pusha
roll
mov
cmp
push
cmc
push
pop
sahf
movsl
push
xlat
fdivl
lock
inc
pop
fimull
xchg
outsb
xchg
adcb
mov
and
test
into
pop
jmp
mov
mov
add
scas
outsl
mov
frstpm(287
push
mov
xchg
cltd
or
push
push
sbb
lock
arpl
sbb
loop
sbb
jge
sbb
push
shrl
imul
pushf
cmp
push
or
test
or
iret
jge
pop
negl
cmc
and
sbb
push
mov
push
sub
push
jb
xchg
push
fldlg2
popf
popf
mov
sbbb
xchg
das
lods
adc
xchg
add
mov
mov
pop
dec
fsubl
add
call
pop
adc
and
movsb
movsl
mov
mov
insl
mov
jl
test
loopne
cmp
cmp
pushf
fmull
fiadds
push
hlt
in
insb
testb
and
repnz
inc
mov
mov
and
dec
xor
ja
lcall
frstor
push
cld
ret
xchg
iret
shlb
push
fnstsw
mov
mov
int3
loope
xlat
loop
in
adc
mov
into
ret
add
sbb
jmp
sbb
fs
adc
adc
dec
mov
es
push
inc
pop
mov
push
and
mov
stos
sub
icebp
ret
pop
into
adc
gs
test
dec
pop
xchg
ret
xchg
scas
dec
jge
mov
out
aam
fadds
fstl
cmp
push
mov
sub
or
lcall
push
or
sub
movsb
pop
jns
mov
and
mov
ljmp
in
mov
jecxz
or
mov
pop
dec
addr16
aas
xor
cwtl
add
pop
lea
ror
xor
mov
lret
pop
repz
loopne
lock
rolb
adc
fnsave
lcall
lods
nop
call
cs
mov
dec
xchg
test
out
rcrl
stos
adc
xchg
lock
imul
dec
icebp
cmc
imul
sbb
adc
add
gs
cmp
cltd
dec
sub
push
shl
cmc
popa
adc
notl
movsl
ficoml
mov
ljmp
fildl
shrb
add
nop
jl
fs
push
stos
mov
push
push
pop
adc
icebp
adc
push
jg
cmp
jp
cmp
fsubrl
inc
mov
sub
call
insb
daa
sub
ja
cmpsl
shll
pop
dec
mov
mov
mov
pop
hlt
lods
into
cmpsl
lods
xchg
nop
rcr
fists
sub
jle
imul
jns
sbb
arpl
add
push
mov
test
adc
jle
idivb
cmp
shrl
or
add
and
ss
out
leave
dec
pop
pop
insl
out
int3
and
cmp
testb
iret
and
push
in
xlat
jb
sub
jbe
xchg
push
lcall
mov
scas
mov
les
fisttpl
or
sbb
scas
xlat
js
test
mov
push
adc
out
xchg
lcall
lcall
xor
test
movsb
push
mov
xchg
or
jae
sti
push
adc
push
lods
aad
jmp
loop
scas
nop
or
stos
fldt
sbb
xor
cwtl
dec
pop
jl
add
hlt
push
out
inc
xor
jl
cltd
jmp
adc
mov
in
jl
pop
inc
push
push
sub
push
pop
cltd
sbb
filds
fstl
push
fwait
xchg
cmpsb
inc
xor
and
inc
cld
pop
mov
subb
sti
fdiv
movsl
push
jp
adc
or
lds
aad
jne
aas
pop
inc
xchg
jb
jne
dec
push
repnz
jbe
dec
out
lcall
mov
clc
jae
cmpsb
inc
dec
adc
clc
and
xchg
xchg
mov
inc
lea
xchg
pop
xor
xchg
push
sub
add
mov
daa
xor
jecxz
test
inc
cmp
out
ljmp
cmp
insl
cmp
insl
mov
lret
pop
mov
in
sub
xchg
push
roll
enter
loope,pn
push
lret
outsb
mov
and
inc
fcomps
pusha
mov
les
cmp
ds
outsl
cmp
ret
andps
xchg
mov
mov
mov
ficoml
in
sub
call
xchg
mov
js
or
pusha
add
mov
adc
push
cmp
and
cmpsl
cld
pop
out
push
or
push
shrl
jmp
jnp
addr16
cmp
sbbb
jg
dec
movsl
dec
add
stc
jae
dec
lods
outsb
sti
aad
xor
mov
inc
mov
push
loop
mov
jp
and
aaa
mov
dec
add
icebp
rcrb
pop
leave
lods
xor
scas
pop
lea
lahf
jae
sahf
push
xor
pop
sub
dec
push
mov
or
popf
pusha
and
jle
mov
in
mov
sti
dec
in
mov
ficoml
ficoml
xchg
adc
xchg
inc
sbb
xchg
dec
or
lahf
nop
inc
ljmp
je
cmp
xor
outsl
aam
cmpsl
push
fldenv
out
lock
inc
aam
mov
dec
xor
push
push
or
pop
pop
pop
mov
mov
out
arpl
mov
dec
fistpl
loope
flds
cwtl
adc
stos
fs
fcmovb
xor
push
xor
cmpsb
adc
in
call
mov
pusha
jecxz
cmp
pop
mov
pop
dec
jnp
jle
psubb
or
fildl
add
out
mov
inc
mov
jns
fstpt
jnp
sbbl
xchg
inc
mov
jl
pop
rclb
sbb
mov
scas
xchg
mov
and
xor
inc
dec
or
stos
insl
imul
mov
jmp
loopne
outsl
fistpl
jbe
gs
xor
fnstsw
addl
popf
pop
push
push
push
mov
or
mov
dec
jno
out
inc
sbb
sbb
and
sub
fistpl
or
leave
jg
push
xor
jl
xor
in
jl
fsubrs
daa
jl
in
pusha
push
inc
cmp
mov
push
pop
pop
idivl
icebp
xor
es
mov
cs
andl
fistps
aaa
jae
or
lods
lcall
addr16
mov
sarb
sbb
movsb
int3
mov
jle
push
mov
cmp
or
sub
clc
insb
pop
add
aaa
dec
xor
lock
inc
test
lcall
sahf
mov
jno
repz
mov
shll
icebp
sub
xchg
jp
sarb
sbb
push
lods
cltd
jnp
fdivrs
movsb
push
sub
sbb
dec
andl
fidivrl
or
sub
dec
mov
mov
xor
adc
sarb
mov
push
popf
mov
adc
mov
jne
aas
or
pop
outsl
mov
xchg
or
aam
dec
pop
mov
decl
fwait
lea
pusha
cmp
adc
cmp
dec
fwait
and
das
dec
mov
loope
xor
fadds
nop
cmpb
mov
mov
cwtl
arpl
or
sbb
inc
aam
int
test
pop
loopne
mov
out
pop
in
xor
or
int
dec
push
pop
decb
clc
int
mov
stos
imul
inc
mov
iret
lcall
and
inc
es
add
push
decb
fstpt
cmp
dec
add
dec
test
icebp
xchg
cmp
lods
or
stos
push
and
xor
movsb
pop
mov
push
push
jge
and
daa
push
iret
pop
add
lcall
leave
test
mov
mov
repz
mov
xor
inc
mov
mov
fisttpll
add
hlt
add
sbb
loopne
mov
mov
cmc
jecxz
push
out
add
fidivrl
fistl
aas
pushf
sbb
or
imul
test
mov
mov
imull
lret
fidivs
add
loope
add
sbb
push
cmpsl
je
cmp
fisubs
cmp
daa
or
les
cmp
xor
negb
jge
pop
aad
icebp
call
addr16
mov
stos
aas
dec
and
gs
aas
orl
xor
dec
cmp
cmp
dec
bound
sbbb
push
sub
lds
std
insb
pop
movsl
cld
xor
mov
pop
insl
lahf
mov
gs
adc
in
dec
jge
mov
rolb
imul
push
clc
test
clc
cmp
mov
loope
sub
sbb
inc
aam
sysenter
es
dec
cmp
pop
inc
pop
add
adc
in
sub
pop
pop
xchg
push
dec
sbb
enter
int3
xchg
popf
idiv
cld
add
push
sub
mov
push
clc
movsl
xchg
mov
sub
xchg
arpl
push
xchg
add
loope
lcall
push
mulb
inc
pop
adc
adc
rclb
dec
icebp
je
push
sbb
push
xchg
lods
xor
fisubs
mov
leave
es
push
imull
inc
outsl
xchg
adc
ret
fildll
adc
xchg
xor
sarb
xor
imul
shll
cmp
test
push
inc
dec
fmul
lahf
pop
lea
mov
sub
stos
pop
mov
dec
sub
dec
or
xchg
sbb
and
pop
adc
pop
int3
enter
stc
push
push
sti
add
test
ds
xchg
aad
scas
sub
shlb
pop
sti
mov
out
or
pop
scas
sub
negl
cmpsb
xchg
mov
leave
es
or
lea
jl
inc
jno
sti
cmp
mov
cmp
insl
ja
pop
inc
dec
and
fldenv
or
mov
insb
cmp
pop
sarb
sbb
daa
push
sub
mov
mov
mov
sub
and
push
cwtl
fnsave
inc
out
lods
or
loope
out
stc
inc
fidivrl
out
push
jle
xor
mov
stc
sub
shll
pop
mov
lods
cld
jbe
xchg
mov
push
jmp
push
repnz
lea
mov
in
or
adc
adc
gs
sbb
loope
pop
xor
dec
xorb
push
or
xchg
fmuls
sar
outsl
cs
notb
sarl
es
roll
cmp
sbb
bound
xor
pop
nop
dec
movsl
ret
jb
inc
sbbb
mov
jg
xor
cmp
fcmovu
ret
jmp
cmp
test
pop
fwait
lret
dec
cld
imul
clc
sub
imul
push
popa
inc
fmul
add
pushf
hlt
jecxz
ja
stc
push
jg
sub
dec
mov
hlt
push
jae
jo
pop
mov
stos
lcall
or
call
xor
std
push
pop
jl
cmpb
push
cmp
mov
call
fbstp
mov
adc
icebp
ss
mov
push
ja
ss
popa
inc
test
call
push
jae
sbb
ljmp
mov
sub
push
hlt
jecxz
rorl
inc
mov
test
jno
iret
lahf
jae
dec
dec
xchg
add
sbbl
inc
mov
out
pop
std
add
repnz
jg
add
les
or
fcmovne
ror
xlat
jecxz
rcrl
mov
push
pop
out
bound
lock
test
js
and
xchg
mov
jns
jecxz
dec
rclb
call
scas
adc
sbb
popa
mov
inc
lahf
xor
inc
jns
mov
aam
and
ds
dec
mov
mov
inc
sub
and
sbb
in
icebp
dec
push
or
rdpmc
cmp
push
jle
adc
cmpsb
leave
lods
pop
pop
xchg
jge
data16
sub
ss
jnp
mov
mov
inc
fmull
popa
xchg
mov
lods
ljmp
dec
dec
pop
faddp
je
xchg
adc
xor
ret
cmp
das
fistl
xor
dec
push
xchg
adc
dec
push
cmp
dec
das
mov
js,pt
mov
jbe
cmp
mov
cmp
dec
adc
ficompl
and
jge
pop
lock
movb
lods
repz
hlt
jecxz
pop
dec
cwtl
mov
sub
jle
mov
lods
nop
pushf
mov
jae
shlb
je
sbb
mov
fmull
jae
lock
les
mov
dec
cwtl
aaa
jnp
sub
push
sbb
mov
xorl
sbb
in
in
xor
adc
ja
push
push
fdivrs
inc
cmc
in
inc
push
jg
mov
cltd
fs
xchg
cltd
fwait
imull
je
sub
jne
or
fsubrs
jg
inc
pop
daa
push
mov
inc
jle
scas
sub
fiaddl
andb
js
addr16
adc
pop
mov
cmpsb
cmpsl
ret
ja
ja
imul
icebp
cmp
in
push
fcoms
es
mov
add
aam
sbb
imul
outsl
sub
fs
mov
adc
fwait
shl
xlat
pusha
cmp
lods
insb
dec
and
cmp
mov
iret
sub
adc
aaa
mov
jp
add
mov
mov
mov
xor
stos
sarb
jle
pop
add
adc
movsl
pmaxub
lods
push
sbb
inc
adcb
or
jmp
shrl
jb
gs
inc
shr
bound
xchg
push
arpl
fidivs
mov
lea
jbe
mov
movsb
xor
cmpsl
test
push
xor
lahf
xchg
mov
inc
ret
into
jg
cmp
adc
inc
fcmovne
or
pop
push
xor
std
aaa
inc
mov
insb
mov
add
or
fucom
rorb
cmpsb
insb
shrb
icebp
iret
push
pop
cltd
int3
nop
pop
pushf
add
call
adc
imul
sbb
popf
sub
pusha
je
lock
pop
pop
je
jbe
mov
jge
xor
pop
push
int3
mov
fstps
nop
shr
cs
sti
jecxz
sub
ret
leave
inc
mov
loopne
dec
fnstcw
out
rolb
std
xor
shrl
xor
xor
add
jns
sbb
sbb
push
sti
jo
jl
ret
adc
xchg
repnz
repnz
cmpsl
jg
mov
sbb
cli
xor
cli
imul
imul
sbb
sub
and
pop
xchg
pop
bnd
mov
sbb
or
jbe
push
mov
loopne
fdiv
test
loop
mov
add
fists
mov
insb
or
jge
fidivrl
mov
rol
mov
push
out
test
sbb
jl
mov
add
frstor
dec
rorb
imul
adc
push
mov
push
pop
inc
insl
fidivrl
jnp
shlb
nop
or
pop
cmp
push
pop
pop
popf
cltd
pop
or
pop
mov
add
stos
sahf
push
mov
push
arpl
pusha
push
pushf
mov
push
push
jp
icebp
lea
lahf
mov
xor
and
pop
push
punpckhwd
mov
fcomip
mov
xlat
mov
sub
jmp
in
or
jbe
adc
scas
cld
stos
enter
inc
lcall
das
push
gs
xchg
jnp
fstpt
movsb
mov
mov
or
pop
inc
nop
dec
cmp
jmp
cwtl
aas
out
test
mov
pushf
fldt
pop
lea
sahf
jle
push
pushf
fsubrs
loopne
cltd
xchg
aad
and
jb
sub
ja
in
mov
sbb
repnz
mov
sub
repz
mov
test
or
mov
mov
xchg
das
fsubs
sub
in
bound
dec
enter
jno
add
pop
mov
jp
shlb
hlt
out
dec
mov
lret
lcall
push
and
enter
dec
out
mov
dec
mov
xor
jns
push
or
xor
adc
cmp
lods
sbb
lret
mov
mov
testb
pop
jns
loopne
mov
mov
mov
cltd
add
mov
scas
insb
push
in
mov
inc
mov
popa
std
mov
test
pop
xchg
fiaddl
and
xchg
insl
mov
push
rolb
or
leave
jp
inc
sub
loopne
xchg
lahf
mov
push
lea
js
pushf
insb
push
pop
dec
sub
mov
mov
in
gs
out
repz
inc
mov
push
loop
adc
mov
mov
bound
clc
inc
pop
sub
add
cmc
pop
sub
idivb
jecxz
mov
loope
addr16
push
dec
mov
clc
xor
xor
stos
jl
dec
mov
pushl
pop
xchg
insl
sahf
push
into
push
decl
push
xchg
push
pop
adc
loopew
xor
pusha
lret
lahf
ret
push
and
mov
lock
cmp
pop
imul
jb
pusha
aas
and
outsb
scas
push
mov
fimuls
scas
push
mov
sbb
fmul
testb
mov
cmp
xchg
nop
cmc
fbstp
lret
or
or
adcl
clc
ss
push
icebp
inc
out
repz
xor
cmp
dec
mov
out
cld
stos
in
mov
add
or
mov
sbb
inc
pop
inc
inc
xchg
pop
in
daa
ljmp
adc
and
adc
jno
cld
lods
std
push
enter
aaa
and
dec
jp
stos
push
mov
aaa
nop
cs
mov
cs
popa
inc
jge
hlt
jbe
stos
testl
adc
jl
jne
je
pop
jb
popa
mov
clc
mov
cs
xlat
pop
push
xchg
fidivs
icebp
sub
ss
aam
inc
popa
popf
ljmp
mov
push
adc
ret
cltd
mov
or
js
dec
sar
into
xchg
lods
enter
sbb
shrb
hlt
xchg
adc
orb
and
pop
dec
dec
adcb
mov
inc
in
mov
sub
lock
cwtl
mov
in
inc
adc
rolb
dec
loop
jb
inc
int3
mov
mov
in
or
gs
mov
sbb
sti
popaw
rolb
popa
inc
mov
mov
ret
pop
pop
or
adc
push
shll
mov
push
clc
mov
pop
sub
pop
repz
pop
stos
mov
push
nop
adc
bound
addr16
ja
jb
jbe
adc
jno
inc
test
sub
push
mov
mov
inc
pop
das
or
insl
sbb
sub
inc
lods
cltd
lcall
inc
pop
pop
movsl
dec
sbb
lea
push
jle
xchg
shlb
cwtl
enter
clc
pop
push
movw
clc
push
mov
int3
scas
mov
lahf
aas
jbe
add
mov
lock
pop
cld
js
rorb
ss
mov
enter
int
jp
xchg
and
lahf
icebp
decb
push
adcb
dec
push
push
rcl
std
cltd
test
jb
fldenv
mov
mov
inc
adc
sbb
ss
inc
add
rorl
xor
adc
movb
add
mov
mov
mov
out
xor
out
push
jge
out
lret
outsl
lods
xor
cmpsb
ljmp
xchg
adc
pop
jbe
sbb
lahf
out
ljmp
cmp
cmpsl
xchg
lods
xor
enter
pop
ljmp
mov
aas
mov
cmc
xor
mov
loop
sub
xlat
sub
pop
sti
jns
or
jecxz
xchg
sbb
jl
mov
xchg
js
or
clc
dec
add
xchg
fwait
lahf
lcall
push
and
push
adc
stc
mov
movsb
ds
dec
mov
sub
adc
xor
inc
push
int
mov
sbb
fwait
lcall
and
mov
pop
xor
loope,pn
pop
enter
insl
push
mov
rol
mov
jle
mov
movsb
sub
adc
lea
outsl
mov
xchg
ror
outsl
mov
fildll
mov
loopne
repnz
test
pop
stos
adc
aad
mov
call
sub
imul
adc
mov
lea
cwtl
adc
pop
mov
sub
rol
add
jle
into
enter
mov
xchg
push
outsl
pop
mov
das
pop
ret
sbb
xor
and
and
inc
ja
inc
stc
dec
or
repz
cltd
cwtl
add
pop
scas
or
xchg
push
ret
xchg
or
inc
mov
out
dec
in
lcall
sub
inc
or
cld
sarl
rorb
mov
bound
shll
push
nop
jle
pop
mov
stc
jge
dec
inc
inc
jle
lret
jg
push
jbe
movsb
movsb
mov
pop
aad
dec
mov
or
mov
fwait
or
popf
popf
das
addb
negb
scas
leave
inc
push
js
jg
xchg
jno
xchg
test
ds
sbb
jae
xor
dec
jl
addr16
jmp
pushf
mov
xchg
push
std
xor
ljmp
je
outsb
js
push
xor
add
xchg
add
movsl
jecxz
scas
daa
mov
fists
movb
daa
or
stos
shll
loope
dec
push
and
sub
orb
xchg
fidivrs
movaps
inc
push
aas
pop
xor
arpl
idivb
stos
jns
aas
adc
mov
addb
stc
inc
lods
rcrl
shl
call
and
fdivl
pop
stc
jns
mov
and
adc
jns
or
imul
out
popf
mov
add
push
ss
out
adc
nop
xor
repnz
push
shl
stc
pop
mov
scas
or
cltd
push
int
aas
shrb
iret
lret
lds
pop
adc
sub
jmp
lods
popa
mov
data16
pop
orl
inc
les
mov
cmpl
shlb
pop
dec
lahf
stos
out
cli
lret
enter
sub
imul
dec
and
mov
inc
aaa
mov
jg
dec
jg
rclb
jle
call
sub
fisubrl
out
mov
or
in
sbb
mov
jecxz
mov
cli
test
test
out
or
inc
enter
cmp
lods
aaa
dec
aaa
jae
das
das
fmul
or
aad
fdivrl
cs
push
adc
in
cmp
inc
rcr
mov
std
mov
push
pop
cwtl
int3
aas
sub
lock
jnp
and
cmp
cmp
stc
cmc
clc
push
jbe
data16
push
dec
xchg
movsb
cmp
scas
or
ljmp
ret
fnsave
jo
and
leave
sub
and
cmp
mov
cli
andb
negb
sbb
out
xor
dec
fistps
dec
pop
push
mov
ja
adc
sbb
aaa
sub
stc
add
cmc
xorb
sub
inc
sub
out
pop
mov
lea
adc
clc
cs
jae
clc
and
sub
clc
bndstx
mov
loop
fimull
mov
dec
mov
mov
push
cmp
cmpsb
pop
jne
xchg
les
jg
sti
push
notl
hlt
push
mov
outsb
jmp
mov
lods
bound
mov
jo
int
cmp
cmpsl
mov
pop
dec
xchg
xlat
fsub
sub
jae
iret
aam
add
mov
jmp
pop
and
lods
mov
dec
test
sti
mov
pop
mov
lds
int
aas
out
adc
dec
mov
lods
mov
cmpsl
dec
inc
mov
sub
jae
push
lcall
sbb
rcll
icebp
jns
div
xor
lcall
xor
xchg
add
insl
jno
lcall
stc
in
pop
push
or
dec
jae
fimuls
mov
add
dec
adc
imul
sub
or
imul
pop
les
inc
and
xor
cmp
loope
pop
imul
insl
mov
xor
fwait
sbb
gs
mov
mov
clc
pop
mov
mov
mov
popa
out
repz
icebp
out
cmp
xchg
lret
adc
stc
jnp
les
and
lods
mov
mov
jo
and
dec
pushf
mov
push
mov
and
cltd
cmp
loop
sbb
jmp
adc
sbb
mov
lea
mov
aam
mov
lock
fcmovne
push
cwtl
mov
subb
push
dec
clc
sbb
or
ja
dec
add
cs
cli
bound
stos
mov
inc
pop
cmpsl
xor
adc
sbb
emms
lahf
sti
out
iret
jnp
stc
in
lcall
add
fucomp
sbb
add
push
push
fiaddl
mov
fisttpll
aas
push
in
dec
dec
int3
jae
or
scas
lds
xchg
add
xchg
xor
dec
push
and
add
mov
and
jne
xchg
add
nop
fidivrl
ss
pop
rol
and
and
fnsave
jg,pt
roll
push
or
sbb
or
xlat
pop
les
adc
add
iret
cmp
jne
stos
mov
cs
scas
fdivl
pop
sbb
stos
andl
sub
testl
ficoms
dec
mov
or
mov
ror
inc
outsl
aaa
xlat
shlb
sub
loop
lea
jge
jo
jp
xor
ret
repz
rcll
adc
and
aas
and
lea
xor
neg
sbb
and
into
push
add
int
inc
leave
inc
iret
adc
test
ds
dec
hlt
mov
gs
jl
insl
xor
push
dec
stos
mov
lock
push
sub
xchg
mov
xchg
push
ds
fldcw
xchg
shrb
mov
iret
je
mov
dec
out
cltd
aas
hlt
mov
jo
ss
mov
jle
bound
mov
xchg
out
sbb
mov
js
add
sti
test
jnp
adcl
movsl
nop
mov
inc
xchg
pop
xor
xchg
mov
jbe
mov
int3
push
addr16
pusha
test
call
or
mov
mov
fwait
sub
inc
or
fisubs
movsb
jmp
or
rsqrtps
jbe
in
add
xor
dec
clc
notl
push
repnz
sbb
lock
mov
and
in
testb
outsl
icebp
lcall
inc
xor
fidivs
icebp
out
and
adc
outsb
loopne
outsb
rcrl
lods
lret
fisubs
stos
cwtl
pop
and
pusha
jbe
into
sbb
ss
mov
fsub
in
push
sub
leave
aad
add
in
sbb
les
or
sub
clc
sub
es
pop
jns
pushf
jl
mov
out
jmp
push
and
inc
fisubrs
sar
std
lcall
pop
ds
stos
scas
sbb
scas
int3
popf
push
rclb
or
jnp
cmp
pop
sar
mov
sbb
dec
or
sbb
in
stc
sub
and
outsl
cwtl
sub
or
stos
push
adc
les
dec
mov
fcompp
and
data16
add
dec
mov
stos
jp
and
sti
adc
dec
and
ja
movsl
ret
cmp
aam
popa
jg
sbbb
inc
lret
jp
xor
loop
repz
rorl
fdivs
mov
jmp
sbb
idivb
push
inc
inc
aas
adc
inc
dec
shll
call
xor
sbb
push
je
mov
adcb
mov
mov
or
std
pop
xor
imul
enter
idivb
inc
mov
lea
notl
mov
out
dec
mov
out
push
mov
sub
fmulp
xchg
outsl
lret
roll
pushf
mov
or
icebp
mov
cmpsl
cmp
int
call
lods
dec
out
insb
push
add
xor
js
cmp
lock
and
pop
add
sub
ds
xlat
in
dec
mov
xchg
sti
xor
call
mov
jmp
cmp
cmp
jnp
into
jno
bound
lret
std
cli
sbb
mov
mov
dec
sbb
mov
cmp
mov
mov
and
test
into
push
cs
sbb
hlt
sahf
adc
decl
jecxz
or
pop
and
adc
xor
cmp
mov
repz
xor
popa
pop
xchg
rdtsc
jne
popa
pop
sub
adc
xor
dec
push
loop
rcll
xor
es
loope
out
ret
xor
or
mov
sub
pop
negl
cmp
adc
in
or
in
jp
dec
mov
imull
cmp
pxor
cmp
pop
loope
das
test
call
das
push
ds
mov
cmp
loopne
push
mov
je
shll
lss
xchg
out
sbb
lret
mov
int
push
pop
adc
fiadds
sar
sbb
and
dec
adc
cmp
lret
repz
push
enter
sub
inc
aas
and
test
jmp
lcall
inc
and
sub
imul
daa
es
add
les
or
or
pop
mov
mov
mov
mov
mov
inc
xchg
push
and
in
cmpsb
add
or
sbb
out
cmc
js
push
fsubl
jle
sti
in
mov
shr
jno
mov
in
mov
adcl
xor
stos
call
hlt
sub
cmpl
das
fwait
cmpsl
cmpsb
fsub
sub
mov
mov
push
shr
xor
std
push
ja
mov
xor
cli
inc
xor
lods
int3
insl
pop
dec
inc
movsb
rolb
pushf
icebp
add
dec
pop
fsubrp
out
ss
cli
add
hlt
rol
jg
mov
add
inc
sarb
clc
mov
pusha
sbb
inc
mov
inc
scas
clc
sti
outsb
push
mov
stc
cmc
and
mov
in
call
push
mov
ficomps
stos
xor
and
mov
bswap
pop
xchg
mov
repz
sub
stos
clc
mov
cmp
add
mov
shrb
shl
mulb
dec
int
and
mov
ja
test
lahf
mov
cwtl
out
pusha
rorb
adcl
push
mov
pop
pop
mov
pop
mov
pop
mov
dec
movsl
out
imul
jle
mov
inc
in
or
dec
pop
and
pop
es
dec
push
xorl
fsubrl
loopne
in
adc
sbb
out
orb
lret
fisttpll
ja
xchg
fwait
insb
and
lock
pop
xor
or
cs
inc
dec
pop
adc
ret
dec
adcb
dec
or
sub
pop
aad
pushf
addb
jle
int3
inc
push
sahf
sarl
mov
adc
sar
xchg
stos
rcrb
jp
and
mov
stc
out
push
mov
jne
out
push
jno
push
dec
cmp
scas
or
stos
or
mov
adc
rorl
inc
sti
and
cmp
in
loopne
out
cli
cltd
sbb
fistpl
pop
hlt
or
sarb
push
fstl
sbb
iret
add
mov
adc
out
iret
sbb
out
jl
mov
out
outsb
push
xchg
or
cltd
aam
fiadds
push
mov
xchg
add
test
lea
cmp
fnstcw
or
push
or
addl
or
icebp
mov
xor
jge
lea
ficomps
ret
push
dec
jle
inc
inc
test
rol
inc
xchg
cmpsl
adc
push
jbe
popa
mov
call
rorl
xchg
mov
repz
test
stc
mov
cmc
loopne
scas
aam
cmp
inc
jge
inc
mov
sbb
and
xchg
push
int3
int
lahf
pusha
sbb
imul
insl
fwait
imul
pop
arpl
and
mov
scas
sbb
data16
xlat
mov
shl
js
das
aaa
adc
jge
lock
dec
push
test
mov
dec
mov
adcl
rcrb
mov
mov
aaa
ds
aas
and
inc
jecxz
cmp
push
notl
popf
insl
fbld
xor
sub
xlat
jns
cmp
testl
maxps
mov
orb
jecxz
dec
mov
pop
gs
xchg
cmpsb
mov
push
icebp
pusha
out
xor
imul
or
pop
cmpsl
fistpll
mov
xor
test
pusha
lret
into
mov
shrl
or
sti
push
adc
cmp
or
mov
sahf
dec
push
push
jns
inc
clc
inc
gs
push
ret
xor
cltd
lret
dec
fidivrl
mov
xor
inc
fidivrs
push
inc
cmp
jle
dec
cli
dec
jnp
mov
or
lods
outsl
xchg
jns
psubd
mov
lcall
mov
sub
cli
movsb
inc
push
stos
mov
add
cmpsb
adc
std
popa
lods
push
jmp
sbbb
sbb
sub
add
movsb
std
test
ss
pop
out
int
jo
pop
xchg
or
jb
sub
mov
cltd
aaa
lcall
inc
std
mov
mov
std
outsl
xchg
sbb
clc
leave
rcrb
repnz
jge
push
cmp
or
lahf
inc
mov
sub
test
arpl
js
ret
mov
jge
test
ja
xorb
and
push
addr16
shrl
and
push
pop
add
call
je
stc
lea
sbb
aaa
dec
add
xor
sub
lds
imul
enter
jo
nop
jl
lea
out
pop
stos
adc
push
mov
sbb
dec
jns
sbb
mov
les
dec
pop
add
push
stos
lret
pop
imul
adc
add
mov
leave
mov
or
jmp
jbe
rorb
cmp
pop
push
ljmp
xor
hlt
push
xor
lret
test
and
mov
fisubrs
inc
das
fwait
mov
aad
in
pop
xor
int
jmp
shr
push
inc
mov
mov
outsb
push
pop
push
icebp
les
icebp
mov
jmp
sbb
idiv
imul
in
mov
fbstp
pop
cmp
aam
add
adc
or
jle
push
mov
mov
xor
cltd
sub
faddl
aad
incb
loope
jo
nop
aam
ret
lods
insb
insb
xor
daa
mov
movsb
push
pop
push
add
jp
sbb
mov
lods
in
jge
jnp
xchg
mov
rcl
dec
push
mov
add
xor
test
aas
dec
or
push
lock
fwait
in
fxch
mov
push
mov
sbb
fcompl
mov
cli
and
jge
stc
xor
sbb
jl
xor
mov
js
push
aad
add
lods
xchg
repz
sti
sbb
add
mov
pop
cwtl
pop
pop
sub
loopne
dec
les
xchg
data16
xchg
jns
mov
sub
mov
push
sub
dec
mov
in
ret
xchg
mov
negl
pop
or
mov
fiadds
daa
scas
dec
push
jae
das
shl
mov
mov
xchg
or
push
pop
enter
push
inc
imul
shlb
dec
outsl
sub
push
test
xchg
int3
push
popf
push
jne
sub
jecxz
test
push
sub
mov
mov
loopne
xor
outsb
adc
test
jge
jne
jmp
arpl
inc
cmp
fstpt
or
lret
cmp
push
xchg
int3
in
mov
cwtl
les
gs
js
xchg
das
ss
pushf
shll
mov
sarb
cld
adc
addr16
js
xchg
mov
ljmp
icebp
mov
add
rorl
subl
mov
xor
loopne
and
mov
xor
or
mov
cmc
xor
mov
loope
es
test
loope
nop
test
jne
cmp
loopne
lock
hlt
cmp
jmp
push
xchg
xchg
sbb
loop
dec
out
mov
lock
stos
push
test
jb
lock
dec
lds
loop
jg,pn
out
dec
popf
xchg
lahf
scas
and
repnz
daa
sbb
inc
and
mov
mov
mov
pop
out
popa
ss
les
or
ss
cmc
movsl
sbb
arpl
mov
xchg
jne
imulb
add
cmp
dec
data16
lods
or
ret
mov
lahf
dec
subb
addr16
loopne
mov
fs
adc
faddl
in
adc
mov
and
pop
fcom
pop
fnstenv
lods
dec
push
test
jg
xchg
dec
das
or
jp
or
sbb
fisttpll
stc
leave
call
dec
jmp
sub
cwtl
or
ds
or
push
popa
lret
mov
movsb
inc
lahf
sub
xchg
xchg
fsubrs
mov
loopne
test
les
jae
ja
xlat
adc
mov
jl
in
dec
int
pop
imul
jp
push
data16
jo
aam
fisttpl
sub
sub
sub
dec
mov
mov
inc
nop
mov
lea
or
mov
insl
xor
push
leave
cmp
sub
or
lret
fisttpll
outsb
repz
mov
add
adcl
enter
aad
nop
sub
loopne
pop
lahf
adc
fwait
xchg
jnp
mov
dec
aas
xor
fmuls
inc
xorl
lock
out
or
dec
fwait
insl
add
es
xchg
xchg
pop
push
mov
fistps
mov
cld
in
inc
shll
mov
out
cmpsl
jle
pop
xchg
xor
orb
xchg
insb
in
push
addr16
jae
imul
inc
adc
pop
mov
and
jae
mov
or
ficoml
gs
aad
mov
mov
int
jge
pop
lds
cmp
mov
fs
push
fadd
fucomp
pop
mov
pushf
out
mov
mov
pop
rcr
jns
add
addb
das
xchg
ds
jno
loopne
sti
into
cmp
lcall
in
mov
loopne
cmp
inc
lret
mov
mov
subb
divl
mov
mov
sarl
xor
cmpsl
enter
pop
mov
mov
mov
sarl
mov
mov
mov
ja
pop
lcall
pop
mov
imul
xchg
jb
xor
mov
stc
insb
xor
sub
cmp
mov
jo
adc
fs
cmc
mov
jno
mov
out
subl
loopne
sub
pop
sahf
cli
fstpt
mov
lods
and
pop
xchg
loop
ss
rolb
sti
insl
rcrb
add
mov
xchg
push
mov
sub
xor
sbb
stos
pop
add
rcrl
jno
xor
jns
jmp
mov
outsb
cmpsl
lret
ret
lret
dec
adc
into
adc
pop
int
sbb
mov
cmp
mov
pop
pop
xor
lods
adc
cmp
les
dec
rcl
add
movsb
push
fstl
mov
test
ljmp
cli
test
inc
and
fldcw
notb
lret
or
sbb
pop
mov
ffree
aaa
enter
push
rcrb
push
fsub
add
xor
adc
insb
mov
pop
mov
lahf
rol
rorl
dec
rol
pop
data16
sbb
cmpsl
adc
push
xchg
cmp
popa
cltd
jg
out
jecxz
mov
test
jge
xor
daa
aaa
xchg
xchg
cmp
xor
fnstenv
cli
push
adcb
popa
dec
bound
in
jne
cmpsb
stc
imul
cli
cmp
rcll
pop
mov
cmpsb
test
lret
pop
gs
adc
cmp
and
test
xor
mov
pop
xorl
push
xchg
movsb
in
xlat
out
sbb
mov
test
fists
mov
js
js
inc
jecxz
int
or
lods
jp
cltd
mov
lret
inc
cwtl
test
data16
mov
cwtl
adc
mov
inc
adc
repnz
ljmp
sahf
icebp
popf
mov
subb
outsb
sub
dec
lds
lret
mov
mov
arpl
sub
push
je
in
mov
sbb
xchg
inc
mov
in
push
push
jmp
or
cld
imul
sbb
ds
stos
inc
incb
add
outsb
mov
push
pop
pop
pop
xchg
cmp
add
shlb
orb
push
jle
mov
jle
and
or
data16
xor
or
fadds
mov
add
in
popa
ja
shlb
push
adc
call
jecxz
mov
int
mov
fnstenv
adc
or
or
mov
fnsave
push
sub
sbb
xor
das
outsl
loop
movsl
dec
jns
mov
call
sbbb
sbb
xor
jns
xchg
and
fucomp
jl
jmp
lods
stc
or
jecxz
mov
es
divb
lret
movsl
fimuls
and
dec
stos
cmc
pop
inc
push
cmp
inc
das
nop
jae
and
mov
xchg
cmp
and
mov
subb
popa
in
nop
pop
adc
pop
push
loopne
sub
jo
or
or
sub
jge
or
cmpsl
incl
xchg
faddp
add
add
or
popf
cmpsb
push
notl
push
inc
push
dec
mov
or
int3
stc
addr16
in
mov
push
inc
mov
xchg
jl
xchg
std
pusha
xor
pop
dec
mov
lock
mov
xlat
push
aaa
mov
mov
or
xor
dec
jge
or
adc
mov
xlat
xor
push
pushf
adc
mov
ret
sti
data16
pop
mov
sbb
pop
pop
mov
scas
push
and
insb
outsl
sbb
push
adc
mov
add
jecxz
nop
ja
xchg
inc
pop
dec
xorb
mov
xchg
popf
dec
repnz
mov
inc
and
mov
sbb
dec
sbb
add
sub
out
sbb
add
xchg
jnp
and
mov
outsl
and
enter
popf
fwait
jbe
and
cltd
loop
mov
jle
aam
fwait
mov
inc
or
pop
mov
or
or
stc
test
ja
in
push
ja
mov
mov
dec
scas
scas
mov
aaa
push
mov
jne
adc
mov
add
jo
mov
repz
or
rorl
shlb
push
das
ds
test
ljmp
dec
ljmp
lods
ljmp
adc
outsl
movsb
pusha
pop
cmp
push
es
xor
jmp
jg
jae
push
fwait
lahf
cmpsb
cmp
test
out
cmpl
cmpb
lds
push
sbb
ljmp
hlt
add
mov
jb
fcomp
push
addr16
fists
dec
mov
fsubrs
stos
dec
es
rcrl
mov
add
sub
test
hlt
lret
mov
imul
mov
and
pop
test
mov
xchg
mov
sbb
lods
xchg
add
xchg
clc
dec
or
fs
sbb
push
cmp
out
cmp
pop
mov
xor
xor
cmp
iret
loopne
inc
cmp
jl
xchg
mov
imul
push
inc
inc
mov
scas
popa
hlt
out
xchg
xchg
enter
xchg
out
out
push
sub
add
push
xor
fsubrs
daa
cltd
arpl
mov
test
je
lea
andb
in
jae
aas
ret
mov
popf
mov
jmp
aad
aam
outsb
rcrb
mov
add
ret
jb
jge
pop
sub
ret
xchg
mov
ja
xor
xchg
out
pushf
xorl
adc
sbb
adc
fwait
mov
sbb
mov
and
inc
xor
pop
push
loope
xchg
dec
mov
cmp
inc
xchg
jo
std
adc
insb
movsl
arpl
xchg
pop
xor
add
jne
cmpsb
icebp
pop
push
mov
test
cmp
movsl
jb
pushf
jb
lods
ret
les
ficomps
leave
push
push
pusha
inc
pop
test
cmpb
jecxz
pop
add
xchg
push
addr16
sbb
shrl
movsl
out
cmc
iret
out
and
stc
fnclex
fdivrs
ss
inc
mov
and
pop
aad
test
int3
negb
mov
int3
push
popf
add
enter
bswap
xor
sbb
jle
mov
test
mov
int3
fdivr
inc
dec
jo
mov
ret
test
iret
stos
push
fsubr
mov
xor
in
aad
jns
add
sub
mov
cmpsl
push
sub
icebp
loop
popa
dec
cli
add
push
out
push
and
jmp
sbb
out
sahf
xchg
dec
add
mov
aas
insl
insl
aas
lock
push
fidivs
or
push
push
popa
xor
insb
rclb
lret
dec
popf
adc
mov
cmp
pushf
aam
popa
jne
mov
hlt
jb
ljmp
iret
popa
mov
outsb
jmp
out
xor
add
xchg
sub
or
mov
mov
imul
mov
cli
mov
dec
scas
push
test
aam
jmp
dec
mov
aas
stos
cld
pop
lods
andl
out
ds
xchg
jmp
cmpb
mov
fidivl
call
inc
and
sub
pop
imul
mov
aad
in
pop
jno
sbb
pause
cwtl
leave
xor
add
or
fs
xchg
sub
sbb
xor
jle
pushf
lea
cmp
pop
mov
mov
pop
cmp
das
out
fwait
mov
or
addr16
xchg
pop
and
lods
icebp
repnz
shlb
cmp
shl
add
mov
out
ja
insb
aam
pop
aaa
into
push
inc
jl
xchg
inc
sbb
popa
and
cmp
and
inc
xor
or
clc
add
adc
sarl
push
jecxz
fs
scas
adc
ljmp
lods
aaa
outsl
jae
jno
and
mov
cs
and
mov
mov
aaa
aam
xchg
les
sarl
mov
pushf
mov
loopne
pop
push
jb
out
xchg
loopne
js
in
xlat
sub
imul
sub
int3
hlt
xor
fldl
push
fbstp
pusha
add
sahf
adc
dec
jg
lds
lret
es
or
shll
jae
lahf
imul
arpl
lea
push
xlat
adc
mov
nop
add
ret
mov
or
nop
iret
mov
mov
fstl
rclb
repnz
adc
addr16
lahf
xchg
das
push
xlat
mov
imul
pop
in
and
mov
arpl
fidivrs
leave
mov
xchg
ja
dec
movsb
or
lcall
out
cmp
mov
add
push
xor
xchg
frstor
idiv
dec
fsts
or
sbb
add
pop
dec
cltd
xor
leave
adc
lods
pop
and
mov
rcr
in
push
mov
mov
xchg
add
add
enter
pop
imul
mov
dec
loope
mov
psllq
push
lahf
push
les
push
les
or
adc
xor
mov
add
insb
inc
xor
loopne
push
dec
inc
mov
fdivrl
outsb
sti
push
xor
pop
das
enter
dec
mov
stos
mov
adc
fnstsw
and
mov
ja
jge
mov
push
adc
filds
in
cmp
and
pop
jmp
addr16
out
scas
push
sbb
je
fwait
mov
dec
into
or
out
dec
mov
xchg
and
inc
mov
sbb
mov
ds
pop
outsb
mov
add
xor
adc
jb
jo
sbb
jnp
es
cmc
sbb
pushf
or
sub
jmp
mov
sub
xchg
jne
fisttpll
jnp
fwait
dec
sub
movsl
push
fsubl
xchg
lea
xlat
jg
ftst
ljmp
pop
mov
out
adc
pop
out
pop
loope
das
out
test
push
cld
leave
jl
imul
aaa
push
out
in
pop
in
mov
pop
jl
lret
pop
sub
mov
fsub
adc
iret
rcrb
dec
cmp
sbb
xchg
aaa
pop
add
repz
lret
insl
jp
data16
xor
in
mov
cs
ss
xchg
dec
add
push
outsb
xchg
jne
jle
out
adc
xchg
or
push
clc
std
push
mov
add
es
insl
and
pop
aas
in
ret
push
pop
js
sbb
inc
jbe
cld
pop
ljmp
inc
sbb
jno
and
gs
inc
cmp
mov
in
insb
pop
aad
inc
ljmp
cmpb
pop
iret
pop
lcall
xor
loope
scas
dec
mov
xor
mov
es
pop
cltd
ljmp
jge
loop
pushaw
ret
ror
cmp
testb
scas
dec
sub
jmp
dec
loopne
cmpl
sbb
mov
mov
jge
aam
mov
xchg
sbb
repnz
aam
mov
push
jle
into
dec
mov
cmc
and
loope
dec
inc
push
fdivrs
mov
popa
clc
jno
mov
jmp
pop
daa
test
aaa
das
lcall
cmpsb
xor
addr16
movsb
leave
les
adcl
incl
shll
adc
ret
jmp
and
lds
sub
jne
push
into
cwtl
jp
inc
into
aad
fimuls
fstpl
sub
pop
xchg
inc
adc
jno
setne
dec
ja
mov
daa
and
xchg
sbb
inc
das
cmp
aam
add
dec
roll
imul
xlat
fisubs
xor
icebp
inc
mov
or
mov
jne
cmpb
fbstp
xor
jno
or
gs
lock
pop
movsb
xchg
jb
cmp
insl
lret
loop
sarb
lea
inc
enter
scas
test
add
sahf
mov
insl
bound
cmp
ja
repz
push
mov
cmp
inc
sti
sbb
mov
xchg
into
fst
push
add
mov
outsl
fisubrl
cli
pop
sub
push
hlt
fwait
sub
ret
jb
icebp
dec
or
mov
mov
xor
mov
sarb
push
addr16
sub
test
pop
jae
mov
mov
lret
mov
adc
int3
push
adc
add
ss
push
mov
std
sar
push
push
add
out
push
lret
scas
es
jnp
in
roll
sub
jo
ds
repnz
add
aad
out
inc
push
sub
out
ds
pusha
ds
and
fs
mov
jnp
movsb
ret
jo
aam
lods
addr16
ret
ja
mov
popf
fistpl
mov
fstpt
pop
das
notl
pop
inc
or
mov
push
xor
mov
aad
push
movsl
xchg
mov
or
inc
and
push
lahf
clc
sbb
mov
out
dec
out
popa
push
fstl
stc
or
cmp
adcl
pop
loop
loop
sbb
mull
mov
jmp
inc
cmp
jecxz
dec
into
mov
dec
lret
xchg
mov
adc
popa
out
jo
div
mov
xor
repnz
jb
cs
in
daa
jb
sbb
fcmovu
mov
sbb
fiaddl
inc
mov
test
adc
aad
pushf
sbbb
or
inc
gs
xchg
out
pop
mov
shll
mov
pop
inc
lret
mov
mov
scas
aam
jb
cmp
hlt
rclb
out
and
out
out
pop
sub
jne
repz
xchg
add
sarb
cmp
mov
sbb
mov
inc
push
fwait
mov
out
sbb
xlat
lds
js
dec
stc
out
fdecstp
xchg
and
fwait
push
pop
mov
mov
adc
jns
cli
insb
jp
lock
sub
jle
sub
aam
mov
scas
jne
pop
sbb
inc
sub
adc
stos
cmp
inc
lods
iret
mov
rcrl
or
sub
sbb
dec
hlt
imul
adc
clc
dec
insb
xchg
sar
movl
fsts
mov
mov
mov
ljmp
lock
cld
inc
scas
xor
mov
or
out
and
xchg
mul
fstp
inc
ss
push
pop
mov
jns
movsb
test
sub
add
cli
pop
repz
dec
repnz
call
loop
bound
jmp
xor
pop
and
stos
push
jo
xchg
mov
clc
stos
jbe
sbb
mov
mov
push
add
or
mov
bound
xchg
ss
mov
dec
sbb
fistpll
test
leave
jmp
dec
jl
push
push
movsl
iret
push
adc
sbb
pop
mov
sbb
jbe
sbb
mov
jge
dec
aaa
pop
nop
and
xor
xchg
cld
or
outsl
pop
pop
pop
gs
add
std
push
cmp
outsb
hlt
jb
mov
adc
inc
sub
cld
xor
movsl
and
adc
xor
mov
push
or
movsl
scas
hlt
daa
pop
sbb
js
stos
xor
mov
jle
enter
pushf
movsl
mov
ja
jb
add
xchg
sbb
test
pop
std
movsb
cmp
jae
pop
inc
add
stos
jae
push
add
scas
dec
mov
mov
jb
adc
in
pop
pop
loopne
sbb
in
add
iret
rep
lret
inc
and
scas
pop
mov
test
mov
pop
jne
or
push
fdivs
or
nop
mov
sub
mov
orb
int
lea
ret
sahf
xchg
dec
mov
jg
sub
out
ljmp
loop
cmp
cmc
insb
sub
mov
adc
xor
rorl
lods
push
rclb
pop
dec
je
mov
mov
movsb
adc
cmpsl
pop
pop
cmp
cmp
xchg
mov
imul
jno
lahf
push
outsb
sbb
call
mov
arpl
push
repnz
jae
xchg
jno
inc
mov
dec
stos
push
mov
lcall
xchg
inc
test
sub
pop
mov
jmp
imul
mov
call
lret
mov
inc
or
stc
inc
dec
add
push
mov
pusha
push
cltd
sub
iret
outsb
lock
shlb
std
mov
lret
aad
call
adc
daa
cmp
aad
ds
testb
xchg
mov
dec
jecxz
stos
and
incl
inc
ds
lods
rorb
mov
fildl
insl
out
adc
pop
dec
ret
insl
xor
test
xor
pop
add
stos
mov
pop
popa
cmp
in
int3
mov
lock
xor
sti
dec
mov
test
mov
rsqrtps
push
test
and
jge
mov
fbld
int3
orb
push
out
pop
mov
xor
adc
fwait
cli
dec
es
mov
ucomiss
sbb
ret
incl
stos
iret
ret
mov
cmp
mov
pop
jp
jp
xor
add
cmc
jmp
addb
movsl
xlat
cld
fcmovnb
or
xor
stc
fsubrs
jb
xchg
pop
sbb
mov
sbb
xchg
stc
jl
or
repnz
andps
cltd
cmp
mov
loopne
stos
pop
call
lods
jl
test
inc
imull
xchg
jo
test
sub
xchg
testb
out
xchg
xor
adc
and
lods
push
inc
loope
out
das
aaa
push
mov
sarb
mov
out
cmp
and
out
or
fs
push
mov
inc
adc
sub
mov
xchg
inc
jne
iret
hlt
mov
rcll
pop
mov
dec
cmp
inc
cmpsb
les
lcall
jae
mov
pusha
and
aas
sub
cmp
or
inc
and
xor
sysenter
shrl
adc
dec
push
xchg
or
das
sarb
and
lret
out
fcomps
or
xor
or
loope
pop
mulps
shrb
scas
xchg
inc
imul
inc
jb
cmpsl
js
jae
in
sbb
pop
or
sahf
ret
sarb
jae
adc
jl
push
jecxz
dec
fs
or
jne
jne
sbbb
mov
mov
mov
cmp
push
pop
and
mov
push
mov
mov
sbb
in
aam
mov
add
xor
push
push
mov
cmp
cld
loop
fnsave
jmp
shrl
mov
xor
in
stos
scas
pop
jnp
ljmp
icebp
cltd
pop
push
stos
xor
sub
cmp
clc
jle
and
or
sbb
xchg
xchg
xchg
push
jl
push
adc
mov
hlt
jo
inc
mov
mov
imul
ret
dec
mov
xchg
into
notl
jg
mov
and
mov
cmp
sbb
repnz
push
nop
imul
pop
push
aas
in
cmpsb
xchg
adc
stos
pop
sbb
xchg
xor
xor
mov
push
xchg
pop
pop
movsl
ja
repnz
xchg
push
xor
jmp
cs
lret
sti
test
push
cmp
xor
aam
cli
iret
adc
sub
mov
sarl
je
xorl
outsl
sub
inc
xchg
movsb
or
js
xchg
lret
xor
scas
dec
test
xchg
fs
rcll
fistps
or
mov
mov
cmc
sbb
sbb
stos
aad
loope
push
jl
push
scas
jle
or
push
mov
or
lods
rcr
cld
popa
mov
dec
pop
jb
mov
mov
daa
xchg
pop
test
mov
adc
int3
mov
movsb
scas
gs
shl
dec
fmull
ja
fisubs
cwtl
loop
cmpsb
mov
lcall
insb
sub
fwait
jne
in
xchg
mov
roll
cmpsb
or
cwtl
divl
sub
cwtl
inc
add
shl
sub
push
in
cld
fwait
push
rolb
xor
jbe
mov
or
inc
xor
sarl
push
sbb
xor
add
lock
dec
cltd
roll
lds
fs
lds
shlb
lea
ret
les
pop
lea
xor
aas
add
daa
aam
rcrl
sarb
in
xchg
or
xchg
xor
fdivl
out
and
push
loope
jmp
gs
pop
jb
fsin
aad
mov
shrb
xchg
cmpsl
xor
add
cli
ss
ror
sub
sub
xchg
xor
outsl
mov
std
jnp
dec
cwtl
daa
mov
cwtl
jo
clc
mov
movsl
cltd
mov
cmp
pop
push
and
pop
add
adc
imul
ja
push
bound
loopne
or
test
push
movsb
xor
sbb
orb
or
jmp
xor
nop
adc
ret
data16
or
and
xchg
leave
je
cwtl
sbb
mov
daa
shll
or
ret
and
fsubl
iret
loop
aam
mov
lahf
pop
scas
dec
rorl
test
mov
jns
sbbb
xor
sbb
or
sbb
sbbb
xor
iret
pop
cwtl
stos
fisttps
fwait
imul
rcrl
mov
or
clc
faddl
mov
movsb
imul
es
jg
adc
or
jge
lods
faddl
into
cmpsl
cmp
push
pop
jno
cmp
xchg
std
or
add
imul
inc
hlt
mov
leave
jo
jl
push
dec
mov
loope
push
push
pop
push
jb
push
jb
sub
popf
test
fstpl
mov
movsl
push
sub
mov
icebp
repnz
loop
dec
push
add
repz
roll
in
mov
leave
and
jmp
clc
jge
pusha
cltd
sbb
xchg
daa
inc
inc
mov
add
add
add
imul
or
jg
sub
or
push
loope,pt
ror
pop
xor
mov
mov
aaa
addr16
mov
dec
jge
je
xor
scas
pop
in
lods
push
mov
cmp
mov
and
ret
sub
rolb
mov
push
sarb
jmp
cmp
add
leave
or
fmuls
jl
call
dec
jne
adc
pop
es
inc
sub
shlb
lret
outsl
outsb
xchg
adc
xchg
pop
out
cmp
inc
pop
xchg
shlb
test
shll
cmp
sahf
lock
in
mov
aad
adc
and
inc
or
aaa
js
call
jge
jbe
and
mov
imul
jg
lret
sub
cwtl
sub
out
adc
adc
mov
roll
insb
push
push
mov
xchg
lock
mov
fwait
lock
cmp
push
push
cmp
lock
out
leave
pop
mov
movups
add
aad
fyl2x
test
je
push
icebp
outsb
mov
ficoml
insb
out
xlat
loop
mov
jne
ret
mov
stc
cmpsb
lahf
push
push
xor
out
int3
daa
mov
scas
jae
xchg
lds
mov
jp
in
fsubl
jno
loopne
or
cld
jl
gs
scas
fstpl
mov
inc
jge
and
test
push
fs
dec
pop
or
cwtl
xchg
mov
cmp
ljmp
scas
inc
out
insl
adc
xor
inc
sti
outsl
mov
pop
mov
ljmp
cli
out
in
pop
jge
push
into
fwait
sti
fldl
pop
xchg
shll
xlat
scas
sarb
js
mov
ret
stos
mov
push
lds
arpl
outsl
inc
popa
jle
hlt
mov
mov
and
mov
cmp
push
and
out
pop
out
pop
loop
and
pop
pop
mov
imul
push
leave
in
dec
and
mov
inc
insl
cmp
mov
pop
or
lret
das
dec
pop
lods
aad
cmp
mov
out
xlat
mov
cld
std
pushl
sub
call
and
inc
xor
and
pinsrw
lods
dec
mov
sbb
and
sub
lret
data16
mul
popa
sub
push
fidivs
in
pushl
inc
lds
js
sahf
and
andl
pop
jnp
mov
es
push
popf
sbb
dec
dec
xchg
std
mov
rcrb
aam
hlt
sbb
fmul
sub
aas
orl
lods
int3
cmpsl
adc
movb
loopne
js
cmp
popa
stos
pop
adc
mov
mov
dec
pop
dec
xchg
jg
mov
shlb
xchg
fucomip
fbstp
divb
out
cmpsl
xchg
pop
dec
repnz
inc
mov
xchg
pop
ja
sbb
stc
jb
and
dec
out
scas
mov
jge
loopne
adc
je
add
jno
mov
and
push
imul
inc
insl
stos
inc
out
lret
enter
pop
xor
and
pop
push
cmp
dec
fists
leave
jns
mov
bound
dec
imul
das
add
loopne
mov
sahf
inc
cmpsl
mov
dec
dec
fwait
dec
inc
sbb
push
test
adc
fisubl
dec
add
add
push
pusha
xchg
or
pop
xchg
out
jne
mov
add
add
aas
cmpsl
sbbb
fstps
mov
sub
cmc
mov
inc
jmp
jl
cmpsl
jle
xchg
je
mov
int3
gs
xchg
mov
mov
lods
incl
mov
sbb
imul
mov
pushf
xor
xor
push
xor
mov
inc
mov
fsubl
push
out
push
or
mov
pusha
mov
lock
inc
shlb
inc
cld
test
jno
jge
xor
fmuls
es
movl
adc
mov
pop
jb
push
adc
mov
jno
adc
jge
out
push
jmp
testl
jmp
fdivs
imul
adc
push
stc
enter
pop
lds
loope
jae
mov
ret
stc
rcr
jl
push
movsl
pop
out
push
nop
es
push
cmp
xchg
scas
push
ja
nop
aas
cmpsb
push
jg
repnz
push
mov
push
inc
or
or
fidivs
mov
inc
lods
pop
into
fadd
cmp
cmp
jnp
add
int3
mov
mov
xchg
ret
test
push
fmul
push
loope
xchg
lahf
outsb
fwait
push
dec
cmp
cmp
lcall
out
fdivl
cmp
xchg
mov
mov
imul
inc
pop
dec
jmp
adc
xchg
inc
and
adc
aam
sub
adc
push
xchg
sbb
lret
xor
pushf
movsl
mov
inc
dec
sbb
lods
push
pop
dec
cwtl
mov
dec
inc
mov
dec
sbb
orl
int
inc
call
push
shrb
mov
lcall
insb
sub
and
push
mov
mov
mov
adc
addr16
ss
std
xor
jne,pt
aas
pop
lods
mov
negl
fcmovbe
mov
mov
jle
aam
ljmp
das
inc
aas
popa
addr16
loopne
adcl
dec
xchg
enter
les
push
push
movb
sbb
xchg
adc
cmpsl
pop
inc
push
mov
push
shll
sbb
jnp
repz
pop
jmp
mov
pushf
movsl
inc
cmpsb
pop
out
adc
dec
pop
add
jl
adcb
shll
or
dec
ret
mov
adcb
jl
inc
lods
cs
rcrl
aaa
mov
fs
int
mov
mov
in
insl
and
sbb
mov
dec
shll
fildll
jnp
mov
xchg
adc
jnp
jmp
in
push
dec
data16
insb
jmp
fcmovne
or
adc
mov
jl
mov
or
mov
rolb
lds
sub
sub
clc
mov
rolb
imul
int
inc
icebp
cwtl
cmp
lods
pop
sbb
shlb
pop
pusha
jmp
std
xchg
mov
push
popf
pop
adc
bound
fwait
sub
adc
pop
xchg
mov
mov
xchg
adc
fdivr
insb
push
enter
jmp
ret
mov
mov
dec
mov
test
lock
pop
sti
loopw
push
in
mov
push
addr16
sub
inc
lds
ret
jp
shl
cmp
jle
in
cmpl
lea
sbb
movsb
pusha
sub
pop
movsl
leave
nop
push
pusha
jne
in
in
ret
add
inc
es
arpl
hlt
sub
ss
mov
sub
mov
cmp
ret
sbb
sti
cmpsb
or
mov
or
test
push
push
sub
wbinvd
adc
aam
or
sub
negl
cmp
mov
enter
sbb
mov
movsl
push
mov
les
popa
pop
ret
gs
shl
mov
mov
mov
shlb
xlat
sbbl
dec
xchg
nop
pop
cmp
mov
notb
sub
fists
pop
pop
pop
aad
inc
jo
adc
out
imul
jmp
lahf
jl
sub
mov
mov
adc
or
dec
sbb
stc
xchg
xchg
add
xchg
dec
movsb
mov
xchg
repnz
test
paddsb
in
neg
aam
xor
jne
add
add
xchg
movsb
out
movsl
int3
mov
jb
push
scas
push
mov
out
lret
add
jmp
jge
ret
lods
in
push
sbb
das
mov
fisttps
scas
ss
push
imul
xchg
inc
push
data16
fs
aam
sbb
and
lods
push
sub
inc
mov
in
pusha
test
mov
pusha
and
loopne
repz
xchg
sub
push
inc
mov
call
adcb
cmp
and
fists
add
orl
sbb
xchg
push
mov
fcoms
pop
mov
pop
and
loop
out
fnsave
test
push
aam
mov
outsb
mov
lods
stos
pushf
ss
xor
add
stc
ljmp
mov
push
mov
lea
es
pusha
sub
pop
insl
and
and
and
cmp
bndstx
decb
mov
mov
ret
rcrb
sub
jo,pt
movsb
xor
xchg
test
data16
mov
loop
lahf
cwtl
sub
xchg
mov
hlt
mov
inc
push
clc
enter
in
lahf
pop
push
lods
das
add
out
pop
rolb
loopne
cs
fcompl
hlt
daa
pop
xor
mov
daa
call
lock
je
inc
adc
mov
ds
mov
xchg
push
cli
fiaddl
testb
jle
push
add
call
or
sub
mov
mov
adc
jb
stos
inc
push
cmp
and
sbb
pop
jb
mov
inc
faddl
orl
rol
jno
inc
inc
mov
movsl
ds
clc
les
lahf
dec
or
mov
out
mov
iret
xchg
scas
in
and
dec
and
stos
push
or
xlat
inc
jno
lret
adc
lock
inc
lcall
into
jnp
std
mov
push
stc
ja
sub
jo
js
sub
cmpsl
or
insb
mov
sbb
daa
enter
repz
mov
sbb
adc
cmp
jecxz
inc
jne
shlb
cmc
jmp
mov
in
dec
es
mov
cmp
int3
es
fadds
push
aaa
pop
call
lds
syscall
clc
shrl
rol
div
outsb
adc
xor
cs
push
not
inc
stos
hlt
cmp
popf
jbe
int
bound
mov
pop
jne
loopne
lret
jbe
xchg
jmp
mov
jl
stos
xor
inc
cmp
lods
mov
test
mov
std
and
adcl
cmp
and
mov
mov
adc
mov
stos
xlat
xchg
loope
outsb
pop
neg
jecxz
jecxz
sub
out
into
pop
das
inc
inc
jnp
sti
ret
fldcw
jp
and
xchg
inc
push
and
pop
mull
jmp
loop
or
push
jnp
push
push
adc
jns
add
adc
sbb
arpl
shll
push
and
ljmp
les
jl
test
xor
inc
fcoml
loop
sub
pop
push
and
pop
mov
inc
movsb
call
mov
shll
loope
jmp
pusha
dec
addr16
mov
popf
addr16
push
fmuls
call
inc
ficoms
add
mov
shll
dec
cmpsl
or
push
mov
and
ret
add
shlb
sbb
cltd
add
sub
add
lds
fcoml
mov
insl
jge
mov
add
out
sti
xchg
mov
shlb
mov
aad
mov
roll
fs
pop
cmp
lahf
ja
adc
jl
dec
pop
or
adc
mov
mov
sub
in
push
and
push
xchg
adc
insb
adc
dec
xlat
sub
insl
fld
mov
ss
push
jno
insb
lea
jne
stc
flds
ret
push
jge
add
xor
mov
test
lcall
insl
xchg
jmp
insb
sbb
jb
dec
inc
and
cmp
test
outsl
shrl
jmp
inc
push
das
push
loopne
iret
fadds
sbb
sbb
ss
cmp
xchg
sbb
outsl
mov
hlt
adc
mov
sub
lock
mov
push
cmp
fdivrs
jns
adc
cmpsb
out
fmul
loope
sub
mov
inc
dec
ds
jae
orl
aam
sub
shll
shrb
push
xlat
shl
lds
and
cmp
shr
push
pusha
std
add
adc
dec
and
inc
incb
icebp
call
adc
and
push
fisubrl
pusha
xchg
repnz
clc
ja
mov
in
xchg
jne
movsl
sub
push
inc
push
sub
sti
mov
pop
fbld
cmpsl
push
mov
xor
mov
fcompl
xor
jo
mov
lret
mov
insb
aaa
push
rolb
sub
loopne
hlt
sub
popa
fldl
test
andb
or
jp
test
mov
imul
and
aam
fsts
fwait
sub
push
mov
iret
xor
sbb
cs
cli
push
sti
xlat
imul
or
xchg
lock
mov
repnz
stc
fisubrl
je
out
adc
sub
mov
aaa
ja
or
cmp
sbb
xor
fistpl
enter
mov
adc
ret
xor
lods
xchg
or
cmp
jecxz
bound
inc
push
pusha
cmpsl
in
ds
icebp
cmp
inc
shlb
bound
imul
or
mov
push
loope
cmp
repz
int3
cmp
movsb
fldl
xchg
aaa
mov
cld
outsl
fistps
outsl
push
leave
inc
out
mov
aaa
imul
dec
or
int
sbb
shll
xor
xor
sbb
faddl
insl
pop
mov
jmp
mov
push
pop
fstps
dec
in
mov
push
jo
jp
subb
sbb
pop
or
repz
add
jg
cmp
in
loop
mov
cmpsb
mov
mov
shrl
rcll
lcall
or
mov
mov
and
mov
sub
pop
or
lods
dec
pusha
and
aam
mov
inc
icebp
dec
leave
pusha
or
into
xor
sbb
pop
sub
xor
adc
test
aam
enter
sbb
gs
mov
sbb
push
add
dec
mov
sub
ljmp
push
inc
dec
pop
or
mov
cmp
xlat
mov
sbb
repz
jo
pop
icebp
or
push
adc
test
sahf
mov
or
sti
jecxz
mov
sahf
inc
roll
pusha
cmp
cmp
es
das
cld
pop
cmpsb
push
mov
inc
mov
rolb
adc
test
in
icebp
stos
in
cmpb
shlb
pusha
cmpsl
xor
add
sub
adcb
in
test
sahf
xchg
xchg
jae
insb
and
jle
lds
stos
jne
rorb
dec
popf
or
ljmp
sti
fmull
jmp
orl
cld
shrl
into
icebp
adc
sbb
or
sub
fwait
or
push
insl
jmp
pop
pop
ss
mov
dec
jg
notl
push
mov
sub
xchg
sbb
and
pop
aad
lea
shlb
jle
std
mov
cmp
cld
jmp
gs
leave
sarb
jb
addr16
xchg
inc
repz
lods
sub
cltd
loope
out
and
imul
andb
and
pusha
push
jo
mov
pop
inc
mov
mov
mov
movsl
enter
sahf
int3
fildll
stos
or
je
fnop
fwait
aas
data16
in
lods
fcompl
shrb
sub
xor
add
jg
add
jmp
fnclex
xchg
add
mov
fildl
data16
jmp
xor
mov
mov
push
movsl
std
sar
loop
pop
pushf
jg
loope
fsts
and
test
int
aas
dec
daa
jg
dec
mov
ja
aad
pop
inc
dec
push
sti
outsl
fcomps
mov
or
idivb
adc
xor
pop
push
jne
dec
or
jecxz
repnz
fsubr
jb
sbb
loop
dec
loope
mov
cmpsb
out
fsubs
fidivl
push
je
mov
or
test
imulb
fisubrl
stos
fucomip
sbb
fnstenv
jnp
cltd
mov
fmul
adcb
mov
orl
fbstp
add
dec
push
jp
bnd
out
dec
push
fadds
outsb
xor
mov
adc
aas
inc
pop
xor
leave
out
sub
add
imul
inc
repz
pusha
out
aas
cmp
and
and
in
push
dec
adc
pop
daa
push
sbb
negl
inc
sub
ja
or
int
or
fidivl
sbb
dec
leave
ds
mov
rolb
arpl
arpl
push
subb
fisttpl
adc
adc
and
push
ret
enter
and
xchg
pop
pusha
fmuls
push
addr16
cmpsb
gs
push
gs
movsb
ds
movsl
or
rcrb
lods
fsts
jl
cmc
subb
rcll
addr16
cmpsb
push
sbb
cmpb
xchg
sbb
das
push
imul
and
fistpl
add
fiaddl
out
inc
mov
mov
std
xchg
pop
test
sub
push
push
and
mov
mov
sub
mov
jae
movsb
popa
out
insl
and
dec
mov
push
mov
jge
cmp
loopne
push
inc
pop
negl
push
dec
test
mov
mov
ds
jns
pop
into
lahf
push
ja
outsl
mov
fwait
dec
ret
cmp
pop
lcall
shll
xor
jg
mov
mov
lea
cwtl
lock
pop
mov
jne
xchg
sbb
adc
movsl
enter
movsb
insb
adc
mov
adc
inc
cltd
jge
movb
push
cld
les
inc
ds
inc
sbb
sub
sar
adc
sarl
out
addr16
lcall
imul
inc
jecxz
jle
lret
sbb
push
pop
sbb
push
std
js
subb
xlat
jns
fs
pop
xlat
cltd
pop
mov
and
stos
fcom
push
scas
pushf
mov
fldenv
xchg
outsl
loope
cltd
jb
idivl
dec
sbb
jne
cmp
xor
div
and
adc
fwait
shll
mov
loope
cmc
imul
sub
mov
popf
inc
xchg
mov
xchg
pop
push
adc
adc
hlt
xchg
jns
push
mov
mov
loop
cli
cmp
jmp
cli
cmp
jle
inc
mov
adc
mov
test
cwtl
hlt
inc
or
mov
repz
jnp
and
test
das
xchg
dec
data16
hlt
and
mov
cwtl
or
rorl
jo
cmpsb
jge
inc
stc
adc
idivb
stos
jbe
cwtl
xchg
insb
xlat
subb
push
mov
sub
dec
pop
inc
jl
fdivr
xchg
cs
pusha
int3
cmc
add
stc
mov
sarl
or
ja
sbb
in
scas
ljmp
xor
add
int3
pminsw
adc
or
pop
add
lods
icebp
ficomps
mov
sbb
adc
ret
mov
in
in
and
mov
push
and
sub
cmp
btc
cld
shrl
insb
add
testb
dec
sar
cmp
mov
cltd
leavew
daa
cmc
push
add
movnti
mov
or
jo
xlat
mov
addr16
sti
mov
clc
fxch
in
mov
jo
std
cmp
mov
sbb
xchg
dec
add
and
sti
mov
xor
pop
pop
xchg
adc
movsl
sub
add
or
fs
jecxz,pn
outsb
sarb
dec
out
or
cmc
ficomps
and
dec
shll
jns
outsl
stos
mov
pop
in
jbe
inc
pop
jne
movw
sub
xchg
insb
add
xorl
cli
adc
out
dec
and
je
in
push
lret
jne
xor
mov
mov
or
pushf
push
test
fisubrl
jmp
push
pop
nop
aad
sbb
mov
cmc
gs
test
push
xor
jbe
and
shrb
std
push
xchg
fwait
mov
cmp
cli
lock
sbb
cmpsl
mov
js
add
test
gs
scas
pushf
repz
adc
mov
shl
push
mov
aam
popf
jne
sbb
imul
pop
or
jbe
loope
hlt
bound
jb
clc
or
mov
nop
lods
mov
aam
fistl
movsl
or
notb
mov
sub
fldt
and
pop
repz
jp
loopne
push
push
mov
cmp
cltd
cmp
xchg
inc
xchg
ret
cmpsb
leave
push
lret
xlat
or
adc
gs
mov
out
jecxz
xchg
dec
and
and
push
cmp
adc
xchg
adc
aaa
and
push
lods
cmp
sti
int
cmp
inc
push
mov
cmp
movsl
pop
fs
ret
and
movsb
inc
in
pop
dec
sbb
and
mov
out
xlat
lret
mov
leave
nop
ds
add
xchg
icebp
cmp
lds
inc
mov
in
push
cli
sbb
xor
adc
call
ret
jbe
gs
test
popa
xor
out
data16
mov
sti
pop
mov
or
arpl
test
push
xor
add
jle
dec
mov
push
mov
bound
mov
in
or
jg
enter
inc
jge
pushf
fisttpll
dec
notb
cmp
mov
lock
jno
shlb
js
sbb
sbb
pop
sbb
xorl
rcrl
mov
mov
jecxz
in
mov
fwait
push
out
mov
inc
ja
nop
push
nop
ret
fisubl
daa
pop
pop
sahf
inc
daa
xor
dec
xchg
arpl
mov
add
mov
mov
pop
aas
mov
enter
fwait
cmp
xor
lahf
mov
mov
cld
inc
mov
in
sbb
mov
mov
mov
loope
testb
adc
dec
xchg
aas
scas
flds
cmp
shl
push
mov
addr16
dec
push
mov
lret
stos
movsl
mov
xchg
push
loopne
sti
mov
into
jo
ljmp
fldl
inc
pushf
fnstsw
add
andl
lsl
insb
pop
xchg
cs
sar
loopne
lret
xor
fwait
pushf
loopne
aam
jo
and
add
pop
pop
cmp
flds
cli
mov
cli
mov
stos
xchg
push
orb
mov
add
scas
js
aad
rol
adc
into
push
pop
add
test
sub
or
jecxz
xor
add
and
mov
imul
in
int3
scas
pop
xor
ja
bound
mov
cli
int3
xor
mov
mov
mov
bnd
mov
fisubl
jge
flds
inc
enter
hlt
xchg
push
ficoms
mov
stc
cmp
aam
and
icebp
and
bound
int
or
adc
test
add
enter
pusha
mov
dec
mov
adc
lahf
cli
push
ss
aas
mov
xchg
cmp
test
jle
xchg
pop
cmp
jne
insb
pushf
adc
rclb
pop
ljmp
rcrl
rcr
mov
leave
or
fwait
js
mov
add
ljmp
das
xor
rorl
and
xchg
enter
aad
add
dec
fstl
aas
and
push
ret
into
lret
pop
test
xchg
mov
sub
jmp
scas
incb
jno
out
shrb
mov
pop
outsb
push
les
jp
jns
add
inc
std
cli
adc
sbb
and
bound
push
sbb
or
in
jecxz
int3
das
xor
repz
lcall
mov
mov
test
mov
inc
push
data16
aas
bound
sbbb
mov
xchg
loop
sbb
cltd
jg
or
xor
shlb
pop
cmp
pop
pop
loop
iret
mov
adc
cwtl
inc
xchg
xchg
bsr
daa
push
cmp
pop
lret
xchg
sbb
dec
cmpsb
push
sub
fwait
pop
dec
add
ret
enter
pop
xor
pop
pop
pushf
fcoml
dec
xchg
cmp
fsubrs
sub
arpl
push
lret
gs
and
lock
out
mov
hlt
sbb
pop
out
out
aaa
jl
dec
jb
jae
sahf
adcb
arpl
adc
sbb
shr
pop
pop
sahf
or
arpl
cli
pop
add
ja
std
subl
imul
jae
jb
and
mov
add
pop
push
and
testl
mov
movsl
sub
rcrl
sbb
sub
mov
sbb
clc
sub
jns
inc
sahf
aas
insl
out
jb
or
mov
pop
xchg
or
jl
lods
push
mov
jl
fiaddl
jp
sub
xchg
or
mov
cmc
int3
gs
movsb
je
clc
sub
test
mov
cmp
sub
arpl
in
std
jbe
xor
sub
and
imul
aas
out
adc
pop
or
pop
cs
cmpsb
fcmove
and
pushf
fwait
int3
jno
lods
jle
mov
cmpsl
iret
test
xor
sbb
xchg
add
push
loope
sbb
in
aaa
and
pop
aas
mov
sbb
inc
add
jo
jp
inc
lcall
rcrl
cmpsb
and
sub
sti
cwtl
dec
stc
pop
mov
sbb
sahf
out
inc
out
pop
test
push
mov
test
xor
or
xchg
cmp
push
add
sbbb
loop
mov
and
adc
mov
data16
lds
xchg
xbegin
or
insl
pop
rcl
lahf
clc
xlat
push
or
pop
jg
mov
xor
sub
lock
dec
lret
mov
shll
cmp
mov
mov
inc
cmc
adc
cld
mov
pop
arpl
jae
add
je
sbbb
mov
add
mov
sidtl
cmc
inc
mov
je
adc
sbb
daa
idivb
imul
js
mov
push
or
jns
mov
sbb
adcb
bnd
mov
adc
loop
cld
push
or
cmp
xor
popa
xor
insl
add
test
fildl
add
push
pop
ret
sub
sbb
mov
sub
pop
jo
sbb
into
aad
nop
dec
sub
adc
mov
iret
add
push
out
hlt
adc
sub
inc
out
xor
sarb
inc
add
aaa
sbb
xor
push
repz
mov
adc
or
and
push
arpl
jne
repnz
inc
xchg
pusha
popa
xchg
and
jb
lods
loop
fisttps
push
xor
or
xor
xor
mov
stc
jp
dec
xchg
out
push
aam
rcrb
test
push
repz
add
fldcw
lock
xor
enter
stc
or
xchg
mov
aam
pop
adc
in
push
dec
inc
mulb
or
rorl
or
out
in
pusha
or
enter
cmp
mov
fadd
jge
adc
ret
lcall
add
out
insb
stos
je
movsb
inc
mov
jp
imul
xor
dec
outsb
fbstp
test
nop
sarl
dec
inc
and
jae
xor
add
dec
pop
xchg
test
loopne
aaa
xchg
lods
jno
cmp
push
and
dec
jne
sub
mov
leave
pushf
push
push
xchg
mov
or
rorb
jl
adc
sub
jne
outsl
repnz
cmp
pop
sub
mov
mov
hlt
sahf
adc
jo
inc
pop
mov
rdmsr
hlt
bound
jns
xchg
jg
push
jnp
lahf
pop
aas
inc
fldt
pop
jae
inc
cli
test
xor
into
aas
ret
cmp
cmp
pop
fdivl
icebp
push
and
jb
cmp
nop
movsl
jl
mov
imulb
pop
divl
pop
cmp
xlat
dec
adc
in
mov
dec
mov
nop
push
pop
shr
jp
inc
test
sti
xchg
jbe
mov
xchg
loop
sarl
pop
pushf
sbb
mov
mov
add
inc
movd
popa
fiadds
push
and
push
aas
pop
cwtl
in
stos
jno
dec
ds
xchg
push
mov
mov
lcall
cmp
xor
das
push
mov
jno
imul
inc
xchg
stos
cmc
shll
or
nop
mov
or
movsl
inc
xchg
cli
test
shll
mov
mov
cwtl
fbld
stos
aam
leave
int
dec
lods
add
adc
stos
pop
push
push
dec
add
out
adc
jmp
outsl
push
inc
xchg
lods
ret
jmp
sbbb
icebp
sbb
cmp
fcompl
cmpsl
push
in
dec
movaps
mov
sbbl
jge
sub
pop
push
mov
rcl
add
pop
stc
jne
daa
mov
fs
lods
pop
jle
or
imul
int
adc
jge
loope
cmp
int3
inc
ret
jle
iret
push
cs
hlt
jns
dec
xor
and
pop
mov
sbb
mov
cwtl
mov
mov
sbb
call
mov
mov
inc
test
hlt
jmp
sbb
retw
or
out
pavgw
aam
movsl
fdivr
repnz
mov
xorb
mov
inc
mov
and
movsb
iret
inc
jb
sti
dec
iretw
sub
xor
cmpl
insl
mov
andl
xchg
xchg
sbb
add
adc
ljmp
jo
in
pop
xor
stos
mov
mov
dec
movsl
and
dec
mov
fdivrl
ds
shl
cmpl
cmpsl
xchg
push
mov
push
push
sti
jo
stos
and
and
outsb
mov
mov
out
xlat
ljmp
fiadds
ja
mov
mov
jns
dec
cli
mov
mov
fistl
in
mov
jnp
xchg
aad
in
les
sub
jg
repz
stc
out
jbe
or
xchg
lods
push
xchg
cwtl
out
sub
and
mov
inc
imul
dec
cwtl
icebp
xor
mov
rcr
jp
pushf
or
lahf
push
push
out
inc
call
in
int3
add
aam
in
xor
sbb
xor
pop
pop
mov
leave
push
and
cmp
inc
and
sbb
jg
or
xlat
fdivs
cmpsb
and
sbb
push
les
push
dec
insl
test
inc
xorb
and
ljmp
imul
pop
sbb
xor
mov
add
ds
jg
cli
aas
mov
into
mov
inc
push
hlt
xor
out
popf
sub
cmp
mov
xchg
sti
push
fisubl
cmpb
aam
arpl
mov
cmp
negb
jl
or
and
cmp
outsl
nop
mov
ret
dec
cmp
rorb
shr
mov
xchg
or
ret
xchg
xchg
pop
jbe
pop
push
xor
mov
xor
jmp
jmp
xorb
inc
mov
xchg
mov
inc
add
mov
addr16
mov
int
repz
int3
shl
fimuls
je
mov
or
lcall
mov
lret
xchg
fdiv
loope
shll
push
je
xchg
aam
sub
jne
mov
mov
sub
adc
enter
in
sub
add
cmp
sarb
mov
xor
cmp
sbb
lock
sbb
inc
imul
popa
mov
cli
xorl
xchg
mov
dec
stos
push
shll
test
push
add
sbb
pop
mov
inc
mulb
cltd
xor
sbb
mov
ficoms
xchg
and
pop
aad
jo
ds
add
in
enter
aam
mov
dec
fistps
in
gs
in
outsl
sub
cmpsb
and
cmp
cmc
test
repnz
bound
mov
mov
popa
lret
jp
add
xchg
orb
dec
and
outsb
sub
lods
out
mov
aaa
jnp
je
or
and
ror
dec
pop
xor
imul
mov
jbe
adc
xchg
ja
inc
lds
push
xor
inc
repz
rcrb
out
xor
jns
into
pop
inc
outsl
das
push
add
and
cld
jo
call
and
add
sarb
inc
adc
test
cmc
mov
mov
adc
xchg
out
fcoms
shll
jl
adc
dec
imul
mov
cmp
add
mov
pop
fwait
mov
sub
aam
sahf
sub
jle
add
stos
shll
push
mov
int3
scas
xchg
add
lcall
les
or
xor
or
mov
cmp
aam
js
mov
sbb
mov
movsb
xchg
xorl
sbb
xchg
mov
lahf
pop
stos
dec
sub
fnstsw
loopne
mov
in
jmp
sbb
pop
add
and
mov
repz
and
gs
xor
pop
mov
andl
aam
mov
pop
icebp
push
mov
add
dec
push
sub
xor
insl
ja
das
mov
sti
rcrb
dec
fwait
clc
in
push
rclb
lret
icebp
outsl
cmpsl
jge
fistl
and
cmp
mov
mov
dec
and
das
nop
jae
mull
sbb
rolb
icebp
sbb
jl
cltd
enter
sbbb
in
std
cmp
js
cwtl
cmp
sbb
imul
jp
mov
fwait
add
jno
xchg
jl
adc
adcl
mov
clc
cmpsb
cwtl
or
fdivs
fsubl
test
or
lret
test
movsb
pop
sahf
add
jbe
lds
mov
hlt
and
ret
dec
xlat
jle
adc
xchg
cmpsb
js
sbb
mov
roll
int
es
clc
cmp
jmp
cmp
mov
inc
mov
mov
ja
out
add
repnz
mov
xor
shrb
fbld
push
icebp
repz
xor
pop
pop
dec
loopne
mov
pop
stc
mov
insb
xchg
stc
inc
dec
pop
pop
lret
and
lret
gs
stc
cmp
pusha
xchg
sub
or
stos
call
xchg
ret
pop
push
in
push
sbbl
cmp
inc
addr16
int
xchg
dec
in
cmp
rorl
shl
insl
xor
aam
inc
jl
cld
sub
mov
out
pusha
cmpsb
fs
nop
mov
sbb
cmp
test
fbstp
xchg
pop
divl
imul
adc
cmpsb
xlat
cmp
dec
movsl
sub
frstor
xlat
dec
dec
sbb
or
in
or
xchg
lret
dec
imul
cmpsb
add
adc
xchg
mov
divb
inc
in
push
mov
fstpt
das
pop
leave
sbb
movsl
inc
loope
mov
stos
mov
pop
add
inc
pop
sti
in
xchg
int
aaa
xchg
cwtl
scas
in
push
adc
inc
out
movq
and
arpl
cld
out
sbb
lea
lods
aaa
xchg
scas
lcall
sbb
dec
cwtl
and
inc
jp
shlb
shlb
sbb
and
mov
fiadds
test
or
jns
cmp
shll
mov
mov
int
jb
dec
icebp
jge
pop
jp
jo
push
fsub
lea
cli
daa
sbb
inc
mov
mov
icebp
mov
adc
mov
in
inc
xor
hlt
into
pop
outsb
rcrl
imul
scas
jb
jg
cmp
jle
pop
jae
and
dec
push
pusha
cmpl
nop
in
mulb
push
js
scas
pop
popa
pushf
sbb
and
add
outsb
aas
ja
dec
xor
cwtl
ficomps
hlt
xor
mov
sti
mov
push
ret
mov
push
orl
jg
pop
add
push
in
xorb
cwtl
notl
popa
xchg
or
jnp
inc
xchg
loop
push
mov
cli
mov
int3
sbb
scas
dec
add
dec
loop
push
jno
movb
jl
xor
add
clc
inc
jge
jns
lret
pop
pop
rclb
lods
add
and
ja
jno
stc
lahf
mov
and
jmp
mov
mov
clc
test
lods
shl
pop
pop
push
into
inc
ds
push
push
sbb
mov
cmp
sub
inc
bound
jne
mov
xchg
orb
inc
lcall
pop
xchg
repz
fnstenv
push
sbb
test
inc
lods
inc
outsl
mov
and
dec
sbb
ficoms
inc
fwait
or
mov
cld
aaa
sbbb
push
dec
iret
add
mov
out
xor
in
mull
adc
idivl
push
das
out
and
outsb
sbb
js
inc
mov
cmp
xor
or
dec
adc
jae
movsl
ja
imul
sbb
add
jne
scas
sti
and
imul
add
fwait
xchg
imul
or
push
in
add
punpcklwd
add
out
sbb
mov
mov
jmp
insl
push
ds
ret
lods
adc
jg
mov
and
das
clc
clc
pop
adc
sub
add
std
sbb
pop
push
jle
inc
fwait
adc
mov
rcrb
or
iret
mov
sarl
sahf
fwait
into
mov
fsubrp
mov
push
icebp
out
stc
mov
adc
pop
cmp
iret
sub
lret
bound
sti
mov
lret
cmp
lcall
pop
aad
adc
xchg
mov
les
jbe
xchg
aam
or
mov
std
imul
aad
xor
divl
inc
inc
into
xor
cld
enter
stc
jmp
mov
mov
push
outsl
inc
jns
leave
js
dec
fwait
pop
mov
adc
pop
mov
mov
sbbb
xchg
push
mov
testl
jns
inc
mov
mov
inc
fdivrl
inc
hlt
cld
rol
cmp
jb
gs
movsb
ljmp
aad
or
add
cmc
sbb
cltd
pop
mov
add
enter
stc
jl
pushf
les
lcall
into
pop
jge
inc
jb
ret
or
sub
lret
lret
mov
std
mov
xchg
test
cltd
xchg
sub
jp
imul
cmp
dec
mov
mov
in
je
cltd
cmp
mov
sub
lahf
mov
adc
mov
lds
adc
je
loop
loope
jnp
mov
xchg
int
cld
cmpb
mov
cli
leave
cmp
fadds
xchg
cmp
mov
popa
jae
hlt
jnp
cs
std
and
sbb
testb
xchg
scas
daa
push
mov
hlt
icebp
out
mov
insl
jecxz
out
add
push
pushf
gs
mov
sub
je
push
cmpb
testb
and
pop
lds
inc
dec
shlb
push
adc
cld
jmp
mov
rolb
lcall
insl
enter
xchg
pop
xlat
movsb
fs
xchg
add
roll
xor
ljmp
fwait
pop
xor
cmc
xchg
dec
aad
mov
mov
shlb
jmp
mov
inc
in
ljmp
hlt
out
dec
sbb
call
fsubp
imul
lahf
imul
sahf
mov
sbb
insb
fadd
out
aam
or
push
lret
jbe
push
outsb
mov
aam
lods
push
lock
mov
mov
sub
movsb
push
or
inc
push
fdivrs
divb
adc
adc
mov
outsl
iret
lods
push
in
pop
test
divl
jne
popa
cmc
sbb
insb
add
and
mov
mov
inc
jle
ret
and
mov
fdivl
xor
jecxz
jp
pop
xchg
stc
and
icebp
fdivl
inc
adc
jns
mov
push
into
cltd
stos
movsb
xchg
arpl
hlt
push
shll
pop
jmp
mov
fcos
test
sahf
dec
xchg
sbb
mov
movsb
and
imul
push
repz
pop
ret
clc
pop
cmc
inc
mov
das
imul
gs
cmp
out
cmp
adc
sti
sbb
or
adc
push
rcrl
jnp
popf
out
mov
out
xor
outsl
pushf
adc
sbb
ret
ss
imul
test
inc
enter
shrl
mov
jae
xchg
dec
inc
jb
loope
jae
push
or
cmp
pushf
out
jnp
dec
lahf
pop
mov
jns
xlat
bound
mov
jle
insl
and
ret
mov
pop
scas
cmpsb
nop
sbb
out
mov
mov
sbb
fdiv
push
imulb
sti
lcall
adc
std
call
xor
loop
xchg
in
xchg
pushf
jl
icebp
sub
mov
iret
hlt
cltd
pop
fwait
xor
bound
aad
out
or
subl
lods
shll
cmpsb
je
add
jle
jl
add
jae
mov
sub
pop
lock
pop
gs
jge
movsb
daa
icebp
loop
mov
ljmp
cmpsl
movsl
into
cld
sbb
mov
movsb
negl
xchg
add
fildll
xchg
adc
ja
push
pushf
ret
mov
popf
sbb
shll
jg
fbstp
add
adcb
into
jle
jmp
nop
adc
jae
pop
mov
push
mov
lock
xor
mov
shlb
adc
test
mov
jl
shrl
les
mov
testb
ljmp
dec
mov
xchg
sub
dec
ss
ljmp
stos
mov
arpl
mov
sub
xor
iret
dec
cmp
pusha
push
xchg
mov
lock
test
loope
cmp
jb
icebp
iret
jl
or
push
dec
push
xchg
add
out
es
scas
xchg
cmp
test
xor
int3
insl
sub
xchg
rcl
adc
and
lock
adc
jo
cmp
mov
dec
incl
mov
sbb
cmp
insb
xchg
and
cmpsl
insb
cwtl
jbe
mov
mov
xor
shrl
adc
lret
sub
jns
jbe
push
outsl
dec
in
lock
sahf
dec
push
mov
dec
lahf
xor
mov
mov
and
je
int
mov
in
daa
mov
push
neg
dec
dec
mov
or
rcrl
imul
jmp
cmp
sub
fisubrs
sbb
int3
mov
in
pop
xchg
inc
cmp
dec
ss
cli
ret
out
stos
cmp
ljmp
and
cmc
ss
push
pop
ret
cmp
in
pop
cmp
lock
rep
xchg
sbbl
mov
xor
int
mov
cmpl
rorl
push
sub
jbe
mov
push
shlb
int3
out
xor
push
mov
jnp
push
or
int3
leave
jns
std
xchg
mov
call
jbe
adc
out
sub
and
cmp
adcl
inc
xor
cmp
ss
out
cmp
inc
xor
and
icebp
lods
push
sti
xchg
stc
pop
stos
jbe
jno
inc
xchg
sub
in
pop
xchg
sti
cwtl
clc
ds
mov
and
lret
test
les
add
ret
dec
rcrl
cmp
out
jns
jne
pop
mov
std
mov
cmp
xchg
add
and
insb
sbb
addr16
inc
sbb
mov
insb
ja
clc
int
mov
mov
sbb
mov
dec
lret
rorl
mov
test
lret
push
cmpsl
xor
mov
stos
lock
fistpll
and
cmp
rol
nop
sbbb
cltd
jecxz
pop
mov
dec
int
out
mov
and
loope
pop
andl
int
xor
mov
ja
mov
hlt
and
add
das
sahf
nop
std
vpunpckhdq
sub
or
lock
sbb
xor
pop
jmp
adc
push
mov
ret
ss
pusha
pop
cmc
lock
pop
xchg
pop
inc
push
shlb
or
imul
and
pop
call
mov
mov
jp
xchg
or
popf
jmp
nop
outsb
int3
in
pop
call
sarb
jp
add
cwtl
idivl
pop
xor
jb
setbe
aas
push
mov
and
in
fisubs
scas
clc
lcall
lods
jb
xchg
je
loop
jns
cmp
adc
mov
test
add
push
or
insb
sbb
lods
xor
iret
in
or
sbb
fstps
lods
test
lods
mov
in
mov
jmp
roll
popl
jl
clc
test
loop
cli
adcl
jno
sbb
add
jnp
fmuls
dec
sti
dec
or
xchg
xchg
cmp
and
mul
sbb
and
pop
shrb
push
gs
dec
roll
and
dec
ja
mov
push
cwtl
adc
xor
pop
mov
mov
cmp
jbe
dec
sahf
repz
cmc
cs
or
lods
arpl
inc
scas
lods
adc
gs
mov
out
pushf
pop
inc
jae
call
or
pop
rcl
mov
pop
out
mov
fwait
xchg
pop
stos
mov
jbe
jb
dec
or
call
cmc
mov
adc
jmp
gs
outsl
daa
add
inc
sub
aas
cmpsb
cli
or
cltd
and
clc
stos
cmp
cmpsb
std
mov
int
lret
mov
mov
loope
fsts
repnz
scas
dec
mov
out
imul
mov
jb
andl
xor
ljmp
xlat
pushf
clc
xor
sub
pop
mov
and
ret
stos
xor
lret
jmp
nop
cmp
aas
adc
mov
sub
lods
jecxz
popa
cltd
das
jmp
rolb
out
dec
cmc
lret
clc
push
mov
add
xchg
lcall
mov
lcall
mov
adc
lods
cmpsl
into
pop
push
call
aam
dec
mov
push
cmpsb
add
ja
cmp
jbe
sbb
testl
daa
xchg
xor
push
and
jmp
add
loop
int
pop
loop
bound
adc
add
pushf
push
lret
scas
cmc
and
lock
pop
xor
push
std
sub
adc
iret
mov
adc
in
xchg
ja
mov
pop
mov
cmp
push
sbb
pop
cmp
push
ljmp
mov
dec
fcomip
les
inc
not
dec
xor
jl
pop
mov
lret
jge
fwait
mov
aam
in
mov
sbb
mov
sets
rorl
fdivr
adc
scas
sti
clc
fstpt
repnz
jmp
sbb
xor
inc
shl
shlb
repnz
inc
mov
divl
inc
sub
jge
xchg
lods
xor
es
and
mov
shrb
mov
jo
pushf
enter
adc
pop
mov
cmpl
mov
cmpsb
fcoms
add
pop
outsb
sbb
mov
push
lods
fisttps
xchg
add
jno
mov
inc
fiadds
out
cmpsb
mov
cmp
repz
sarl
into
xchg
mov
mov
inc
out
pop
imul
sarb
mov
mov
dec
push
loopne
mov
mov
or
repnz
imul
or
call
sbb
xchg
data16
enter
sbb
int
xor
mov
mov
and
loopne
loope
mov
ljmp
es
in
pop
clc
push
cmp
dec
mov
lret
or
pop
inc
mulb
fadds
pop
in
jne
jl
or
jle
inc
out
aas
jb
jg
rcll
outsb
mov
mov
sbb
lods
test
mov
and
mov
imull
insl
and
repnz
xchg
cli
lods
dec
fimuls
mov
imull
add
or
mov
mov
adc
rcl
pop
cmpsl
imul
xchg
jmp
mov
pusha
fistps
and
dec
filds
out
adc
dec
loop
sub
lods
call
repnz
mov
adc
jns
sar
in
mov
rclb
shlb
xchg
pop
in
and
icebp
add
lds
shlb
add
push
xchg
movsl
push
outsb
cmc
add
test
sahf
xchg
imul
std
pop
cli
push
out
add
or
test
xor
ja
enter
cltd
addr16
insb
orl
xchg
push
adc
mov
stos
xor
mov
xchg
push
cwtl
push
sbb
clc
lods
dec
and
cltd
pop
cmpl
adc
cmpsb
les
out
fidivl
pop
pop
add
xlat
pushf
fmul
lahf
xor
imul
clc
test
testl
sbb
dec
cmp
in
pop
xchg
pop
stos
jmp
or
hlt
jns
pop
out
rclb
ja
fsts
dec
mov
insb
fidivrl
mov
fimull
testb
fmuls
jl
fdivrs
sbb
or
or
jle
mov
insb
sub
sbb
pop
repz
pop
pop
out
stos
push
pushl
icebp
sub
mov
mov
sub
and
sub
sahf
dec
lretw
and
xchg
inc
adc
fsubs
hlt
enter
adc
stos
rcrb
andl
jl
dec
cltd
lock
rcr
fstps
sbb
push
fidivrs
cmpsl
dec
aam
fstpl
mov
inc
inc
adc
cmp
imul
xchg
es
adc
push
ret
xchg
xor
mov
addr16
xlat
push
ret
pusha
cmp
insb
lods
ss
cwtl
inc
or
cmp
sub
ffreep
dec
xchg
sbb
push
or
mov
addr16
xchg
aam
cmpsl
ficoml
mov
add
jge
fwait
jmp
dec
xor
sti
dec
or
lcall
fdivrl
jg
xlat
test
push
jns
ds
fsubrp
ret
pop
xacquire
les
xchg
cmp
ja
sbb
sbb
movb
cmp
push
cmp
mov
repz
inc
ds
and
call
or
cmp
push
popf
mov
insb
insb
aad
push
cmp
popa
inc
dec
xchg
jp
pop
pop
push
dec
imul
pop
mov
dec
int
test
or
mov
jb
ret
jmp
es
lret
test
add
stos
mov
dec
out
adc
mov
outsb
sbb
aaa
cmp
fnstsw
push
add
cmpsb
loope
fbstp
enter
cmp
fwait
add
stc
icebp
sub
pusha
pop
hlt
repnz
out
pop
test
mov
lds
xlat
andb
jecxz
aas
mov
or
cmpb
adc
loop
fs
mov
adc
cmpsl
xchg
pushf
push
es
pop
push
das
lcall
jns
add
xlat
adc
jge
lret
cmpl
imul
inc
push
in
dec
and
xor
bound
fcomi
pop
subb
insb
jne
adc
mov
sub
stc
mov
shlb
idiv
lods
push
movsl
xchg
jp
dec
dec
push
addb
test
xchg
jbe
ljmp
nop
loope
xchg
push
rclb
mov
and
mov
jg
aas
mov
aaa
mov
add
imul
mov
sub
or
out
adc
icebp
sti
imul
subl
adc
jb
dec
mov
mov
sbb
lea
fsts
pop
cmpl
mov
add
fs
cmp
aaa
mov
pop
ret
andl
jmp
daa
cmpsb
jae
dec
push
push
dec
pop
sahf
add
test
movb
stos
sar
insb
in
sbb
xlat
cwtl
out
or
in
outsb
test
testl
adc
xchg
inc
push
std
out
cmpsl
jnp
jo
sti
mov
xlat
sbb
ljmp
fwait
mov
lcall
adc
xchg
xchg
add
lds
ja
testl
call
sbb
leave
pop
mov
jb
outsl
in
jo
sub
repz
jle
cli
cmp
sti
adc
jbe
movsl
test
add
das
mov
or
mov
inc
adc
jns
sub
imul
mov
rcrl
mov
sub
pop
pop
lea
fnstcw
push
in
jge
xchg
jnp
stos
push
mov
or
add
mov
cli
bound
cmc
mov
popa
xchg
es
mov
fs
iret
shrb
xlat
or
mov
dec
scas
push
jmp
fwait
push
push
xor
lods
fldl2t
sub
aas
jge
lds
cmp
sub
mov
push
push
les
int
test
mov
movsb
stc
insb
hlt
aas
ret
imul
rorb
dec
sbb
shr
xchg
popa
adc
andb
or
sbb
cs
mov
nop
repz
pop
ljmp
push
enter
sbb
jg
inc
push
jnp
cmp
or
sub
pushf
ljmp
mov
addl
inc
and
adc
mov
jo
loop
das
jecxz
cmc
test
or
pop
rcl
cltd
mov
xor
loopne
mov
pop
sub
test
or
fidivrs
inc
adc
call
inc
xor
jbe
push
sub
out
adc
les
mov
fsts
test
iret
rcl
jp
jmp
mov
and
fmuls
subb
mov
inc
pop
in
ljmp
mov
scas
test
cmp
sti
pop
roll
push
adc
fdivs
jo
aam
jecxz
xchg
imul
imull
or
ss
in
xchg
xchg
sbb
sbb
popa
xchg
jbe
cmp
add
int3
and
push
lds
int
int3
xchg
xchg
push
pop
inc
cmpsl
es
dec
add
inc
loope
xor
das
dec
mov
pusha
mov
hlt
xor
ret
lods
mov
out
mov
jge
mov
into
inc
lahf
pop
out
into
adcb
shll
scas
outsl
orl
lahf
jae
stos
int
cmp
adc
stos
mov
or
or
mov
sub
outsb
movsb
jge
ss
pop
xchg
fstl
push
ds
fisubrs
sbb
cmpsl
jg
loopne
aaa
mov
movsb
lea
xchg
mov
sar
add
push
rcl
adc
sti
popf
mov
lods
push
mov
push
sub
lock
and
lret
stos
fcomi
adc
out
push
popf
and
cmp
jbe
pop
popf
inc
pop
mov
shlb
cli
sbb
test
pop
std
nop
cmp
call
mov
int
imul
mov
mov
jg
sbb
add
stc
aam
mov
dec
imul
lods
sarl
enter
jmp
clc
push
jl
shr
fcoml
loope
sbb
and
jo
sti
insl
and
push
and
jne
fcoms
cmp
aad
lods
scas
repz
mov
aaa
popa
addr16
loopne
cmpsw
popf
ljmp
mov
dec
les
js
and
jl
sub
decl
lcall
add
cmp
pop
fiadds
mov
cmc
jmp
mov
mov
cmp
out
sbb
xor
sub
cltd
add
subl
push
and
sub
dec
enter
mov
adc
in
ds
push
push
sahf
xor
sbb
xchg
aas
imul
adc
fdivr
push
xor
and
es
xchg
lods
xor
xor
fisttpl
mov
cmp
fbstp
loopne
popf
repz
adc
add
pop
inc
jb
jns
mov
xor
inc
sbb
xor
xchg
xlat
adc
adc
aad
jmp
shll
aam
rorl
mov
cmp
add
pop
push
adc
fildl
jnp
sub
iret
lock
mov
and
mov
aad
in
dec
xor
repnz
mov
xor
adc
pusha
mov
outsl
ret
mov
js
xchg
mov
xor
pop
jae
fcoms
mov
jecxz
sbb
or
das
movsl
andl
inc
jns
hlt
or
iret
lock
orl
stos
les
rol
outsb
inc
mov
dec
loop
dec
shrb
and
cld
scas
xchg
cmc
add
ret
in
pop
dec
adc
mov
push
in
ret
add
cmp
pop
mov
cmp
mov
xor
ljmpw
inc
test
cltd
fadds
add
xchg
mov
orb
adc
in
inc
pop
mov
aad
scas
imul
cmp
dec
inc
mov
popa
sub
idivb
dec
sahf
mov
es
arpl
adc
sub
cld
jp
and
ljmp
pusha
jns
cmpb
fwait
cmc
fsubs
imul
pop
push
sub
pop
js
das
mov
dec
imul
push
ds
dec
bound
jnp
iret
jbe
test
in
int
push
mov
roll
fstpt
ljmp
or
add
dec
int
test
stc
call
out
call
sub
dec
fisubrs
xlat
scas
sbb
dec
ret
daa
and
cmp
xchg
mov
push
mull
sbb
jge
push
fisttps
push
fdivs
les
jns
xchg
add
pop
push
popf
xchg
testb
add
inc
shlb
jb
cltd
fs
pop
mov
jae
or
out
in
ljmp
push
jecxz
insl
sub
push
clc
loop
imul
shl
xchg
sbb
or
inc
dec
cld
cli
jbe
jae
outsl
xchg
rolb
mov
outsb
dec
lahf
adc
adc
adc
jp
stos
dec
test
mov
cmp
mov
ja
xlat
cli
test
pop
xchg
sub
inc
xor
addl
ret
insb
lock
xor
xchg
in
fsubrl
dec
push
cmpsb
mov
leave
dec
divl
movsl
mov
ret
aam
dec
mov
ljmp
imul
push
dec
mov
sbb
adc
mov
dec
je
xchg
adc
inc
or
stc
test
mov
sub
pop
hlt
mov
rcrl
mov
arpl
out
ja
inc
mov
sahf
movsb
sub
fsub
jge
loopne
sub
and
sub
lods
or
mov
gs
add
dec
std
loop
sarb
enter
xlat
mov
inc
xchg
or
rorl
xor
lods
cmp
popf
out
push
scas
xchg
out
lods
imul
fdivr
fdivrl
adc
and
cmp
movsb
pop
jae
cmp
xor
pop
insl
fcompl
fistpll
jmp
jnp
inc
jmp
bound
sbb
out
popf
std
test
scas
push
xor
mov
dec
cmp
fisttpll
xor
outsl
mov
push
mov
aad
stc
fidivrl
stos
add
adc
clc
jbe
test
mov
mov
inc
add
add
cmpb
inc
aaa
test
xchg
sub
fdivp
and
pop
adc
xchg
scas
pop
orl
inc
mov
sahf
push
pushf
pop
clc
pop
out
test
leave
std
dec
jbe
cmp
stc
or
push
add
mov
add
imul
jp
ret
mov
pop
out
or
or
or
ficoml
jnp
xchg
mov
stc
pop
nop
cmp
or
fimull
and
out
dec
mov
pop
sbb
jp
fsubrs
out
imul
push
cmpsb
add
sub
imul
xor
inc
sbb
shr
fwait
sbb
pop
push
sahf
loopne
push
xor
cmp
cmp
out
bound
mov
sub
jle
sbb
enter
pop
mov
loop
lahf
xor
xchg
sbb
sbb
fs
sbb
test
xchg
aam
pop
jns
dec
xor
mov
loopne
aad
shrb
inc
das
and
and
nop
xlat
out
insl
sbb
jae
popf
mov
gs
push
shl
inc
mov
adc
mov
inc
stc
push
call
push
in
sti
in
mov
xchg
movsb
fidivrs
pop
shlb
mov
test
jmp
xor
shll
xlat
popf
push
lea
pusha
adc
dec
andl
xchg
cmp
test
repz
mov
sbb
pop
or
subb
je
je
xor
repnz
jno
mov
mov
inc
movsl
mov
iret
or
pushf
sub
add
jns
outsb
or
rolb
sub
stc
lcall
maxps
call
push
adc
in
cltd
cwtl
dec
jns
jle
repnz
negb
mov
xor
dec
push
pop
pop
add
jbe
or
in
cmp
aas
andb
pop
daa
popl
test
mov
pop
adc
call
sub
icebp
rorl
xchg
dec
jo
scas
add
cs
mov
mov
adc
inc
andl
xchg
sub
cmp
xchg
xchg
nop
sbb
repz
aad
sub
cld
adc
outsl
arpl
mov
adc
or
pop
bound
cwtl
pusha
test
xchg
insl
or
mov
shl
jecxz
push
je
arpl
cwtl
dec
pushf
xchg
lods
gs
imul
hlt
jmp
add
jb
std
mov
fcmovbe
pop
or
inc
loope
subb
jmp
adc
push
xchg
sub
shl
adc
mov
popf
xchg
and
mull
imul
mov
shr
mov
out
pop
pushf
sub
mov
adc
xchg
push
mov
mov
mov
scas
loopne
dec
adc
addl
pop
das
scas
sbb
push
sti
stos
push
pop
addr16
insl
dec
in
stc
fwait
aad
and
imull
lds
sbb
stc
inc
pop
push
xchg
ds
push
adc
repnz
cltd
xchg
sub
cmpsb
xchg
mov
sub
inc
and
stos
mov
sbb
cltd
leave
adcl
mov
out
dec
test
subl
movsb
ret
sub
shll
aam
test
add
inc
imul
jno
mov
push
xor
imul
add
xchg
dec
mov
mov
shll
dec
fcomps
pop
cmpsl
mov
iret
rcr
fsubl
xchg
icebp
imul
adc
loopne
ljmp
roll
or
inc
and
lcall
xor
outsl
data16
add
inc
fcmovb
add
adc
fisubs
sar
ss
je
jg
shll
test
loope
add
xor
loope
daa
adc
add
inc
adc
jmp
aad
push
xchg
loope
inc
jp
mov
lods
mov
enter
jnp
xor
test
out
aad
mov
pop
arpl
jns
inc
xchg
fistpll
xchg
stc
in
or
push
mov
pop
mov
fsubrl
cltd
jecxz
push
js
xlat
out
add
sbb
ffree
rol
fldenv
fisubl
cmp
imul
ja
inc
mov
cmp
push
mov
loope
loop
iret
ds
movaps
or
popf
hlt
mov
loop
jecxz
popa
jno
hlt
popa
pop
xchg
ja
ficoms
inc
das
mov
icebp
data16
sbb
add
pop
in
and
adc
aam
in
in
leave
loopne
dec
ss
mov
push
xchg
enter
test
sbb
and
xor
mov
push
mov
sbb
push
fisubrs
push
xor
fmull
stos
and
test
adc
faddl
pop
cmp
ret
push
data16
xlat
mov
xorb
sbbb
or
lds
xchg
jb
ss
imul
add
adc
push
xchg
jmp
mov
loopne
pop
iret
pop
mov
pop
sub
cmp
subb
mov
in
inc
inc
stos
sub
cs
mov
and
xchg
xchg
in
push
shr
das
pop
inc
movq
and
dec
outsb
or
les
sub
xor
cwtl
in
cmc
or
sub
jmp
andb
jmp
stc
rclb
cmp
xchg
fcmove
sbb
int
mov
cmpsl
push
in
fiadds
cli
sbb
inc
mov
out
push
addr16
andl
xchg
icebp
lock
sbb
and
loopne
clc
adc
fisubrl
mov
fwait
scas
fidivrl
cmp
js
jae
mov
enter
es
pop
sub
in
frstpm(287
sbb
loope
xor
ret
sub
aam
xlat
mov
out
movsl
mov
or
scas
push
push
inc
rcll
pop
mov
rorb
not
in
dec
je
add
jno
dec
mov
jae
sub
xchg
adc
push
cmp
enter
mov
icebp
lret
add
dec
mov
add
add
jle
nop
popa
in
or
icebp
xchg
mov
pop
inc
movsl
imul
or
sbb
idiv
insb
mov
pop
xchg
xlat
cmp
fwait
pop
and
cmp
mov
jge
sahf
mov
pop
in
ficompl
and
mov
jno
dec
dec
push
or
sarb
repnz
mov
repnz
add
addr16
inc
dec
daa
push
mov
sub
pop
mov
dec
dec
lock
notl
shrl
pop
dec
test
lea
pop
scas
xor
loop
lcall
nop
cwtl
add
mov
mov
inc
stc
push
pushf
xchg
add
or
ret
gs
jecxz
sbb
popa
sub
jbe
push
lds
subl
sarb
mov
push
les
cmp
das
jmp
mov
fcoml
pop
xor
inc
shrb
mov
lcall
js
add
test
nop
call
sahf
nop
es
ljmp
repnz
into
and
push
inc
jl
mov
movsl
push
jge
pusha
mov
push
jne
fwait
pop
push
jo
mov
xor
lds
sbb
push
push
xchg
outsb
add
addr16
test
cmp
mov
xchg
mov
into
popa
out
cmp
pop
add
gs
xor
ret
int
pop
pop
sub
adc
ds
xchg
jnp
and
mov
test
shl
mov
aaa
ficoms
add
inc
pop
cs
add
subb
int3
arpl
repnz
test
xchg
mov
sahf
or
add
daa
add
xchg
push
ds
movsl
inc
adc
shll
pusha
fidivrl
mov
scas
xchg
pop
cmp
in
dec
stos
insl
cs
adc
cmp
lods
sbbb
cli
test
rclb
inc
fists
sub
data16
in
ficoml
mov
pop
lret
ja
ds
or
int
adc
push
cmp
adc
xor
mov
adc
push
movsb
sbb
out
icebp
out
mov
sbb
inc
cwtl
xor
xchg
pop
in
mov
sti
ljmp
negl
push
enter
sbb
shll
mov
xchg
bound
sbb
cmc
fdiv
xchg
sahf
das
dec
in
xor
daa
mov
cmp
sbbb
es
std
das
ror
mov
sbb
sbb
stos
xchg
aad
lahf
adc
imul
xor
jnp
pushf
aaa
das
mov
imul
inc
mov
pop
push
and
or
mov
xor
pusha
xlat
jno
sbb
and
sbb
mov
xchg
ret
js
xor
pop
add
in
pop
adc
adc
in
cld
push
pop
and
push
fildll
xor
jecxz
mov
rclb
mov
pop
js
sbb
xor
sub
xchg
inc
fs
insl
int3
scas
mov
cs
cmp
sbb
nop
pop
mov
bnd
mov
jmp
popl
mov
mov
je
adc
jnp
lods
inc
out
or
cld
lods
cli
ficomps
roll
dec
cmp
pop
sub
fdivrs
popf
in
fidivrl
imul
xorb
mov
sbb
outsb
je
dec
or
sbb
arpl
fists
mov
out
enter
popa
mov
or
xor
out
mov
dec
ret
dec
lahf
mov
mov
adc
mov
and
xchg
cmp
push
mov
out
mov
ds
jbe
pop
ret
xorb
and
seto
ljmp
or
jbe
mov
sti
pushf
inc
mov
mov
fmull
shrl
mov
js
or
pop
ror
ja
adc
and
sbb
rorl
in
mov
movsb
fisubrs
add
out
es
std
fsubr
sub
sbb
push
inc
inc
loop
adcb
in
mov
movsl
push
shlb
push
enter
sub
test
cmc
mov
test
or
xor
pop
aaa
popa
enter
add
clc
dec
xorl
pop
cmc
or
pop
insb
lea
xchg
cmpb
adc
lods
into
lods
mov
lcall
dec
sbb
mov
mov
dec
xor
popa
mov
inc
fisubs
and
in
fcmovbe
pop
stc
jge
leave
enter
pop
orl
pop
mov
test
dec
fdivrs
or
lret
sti
inc
ret
mov
cwtl
push
dec
jg
aad
cmpsl
dec
mov
push
je
bound
mov
addl
aas
mov
sub
stos
mov
orb
adc
push
adc
cmp
adc
jp
mov
inc
sbb
popa
sahf
fwait
push
add
sahf
adc
cli
outsl
lock
addr16
xchg
jg
push
lods
test
or
sub
and
xlat
mov
jge
ss
into
mov
pop
in
add
push
or
sbb
push
jl
cmc
xchg
push
scas
mov
xor
ss
insl
xchg
cmp
sub
sub
clc
jge
pop
stos
mov
das
js
mov
in
sub
inc
ds
shlb
test
push
fwait
jl
sub
mov
rolb
stc
sahf
mov
mov
dec
insl
movsl
mov
pop
jns
xchg
mov
inc
mov
xchg
subb
mov
lcall
leave
jae
jmp
sub
dec
pop
ja
dec
rcrb
jg
jno
jno
pop
repz
call
jmp
flds
lcall
mov
add
pop
scas
loope
sbb
movsl
fstps
add
insb
push
xor
or
test
or
mov
fistpll
dec
in
out
stos
cltd
lods
adc
cltd
adc
cmpsl
stc
push
andl
in
xor
jbe
popa
and
loope,pt
sahf
sub
pop
sahf
mov
rcrb
pusha
data16
cwtl
or
push
test
in
aaa
or
cmp
mov
push
add
inc
xchg
shl
stos
fcomip
in
jge
add
data16
mov
aaa
inc
popa
pop
push
sbb
sub
je
pop
push
inc
and
mov
dec
mov
dec
out
dec
out
repz
xchg
or
andb
jl
repz
push
inc
add
dec
ljmp
lret
pop
and
jne
cmp
lock
pusha
out
mov
addr16
lock
jb
stos
xlat
jle
or
out
or
sub
dec
pop
cltd
ljmp
in
sbb
push
pop
xlat
mov
push
xor
imul
ret
mov
aam
cmp
sbb
xchg
mov
add
repnz
cmpl
outsb
movsb
jp
mov
cmp
adc
cmpsb
aaa
lcall
jl
movsb
and
inc
inc
xlat
and
je
nop
or
lods
fwait
xchg
jle
add
cmpsl
dec
pop
lods
cmc
sbb
int3
cmp
cltd
xchg
aaa
mov
jecxz
push
outsb
inc
add
inc
test
inc
adc
xchg
sbb
and
cmp
mov
sti
lret
fnstcw
jle
in
cli
push
dec
jg
stos
push
fisubs
loope
fnstsw
lret
mov
ja
jae
pop
pop
mov
mov
jb
popl
cmp
loopne
test
add
pushf
rclb
cmp
sub
loop
sub
ds
ja
gs
dec
pop
xchg
mov
test
test
adc
xorb
and
adc
sti
mov
scas
push
add
lea
ret
enter
sub
adc
fcos
adc
enter
fimull
es
in
mov
add
lds
cmp
movsl
push
cmp
pushf
jo
inc
inc
push
adc
clc
push
cmc
ja
sbb
lcall
lahf
cltd
and
ds
ds
inc
xor
mov
jl
cli
push
or
add
pop
ss
andl
sub
pop
cmc
or
and
dec
push
imul
js
fucom
cmpsb
std
mov
jmp
sub
jnp
popf
ljmp
ss
lods
sub
mov
lock
data16
jb
test
pop
ret
clc
js
xchg
or
mov
nop
rcll
mov
xor
mov
ss
lods
cs
stos
mov
addr16
adc
ljmp
mov
push
mov
jmp
mov
jg
popa
stc
xor
lret
lods
jb
loope
inc
xchg
push
sbb
cwtl
cmp
lcall
push
iret
in
ret
push
push
add
lahf
scas
sbb
inc
mov
jbe
or
xor
jb
inc
push
js
sbb
pop
sbb
or
leave
jge
out
cld
fidivl
sbb
cmpsb
push
sbb
cmp
aad
ss
aas
push
in
sbb
daa
int
inc
adc
xchg
add
dec
std
xchg
test
movsb
mov
shr
dec
jno
frstpm(287
scas
xchg
aas
mov
fisttpl
out
push
sti
cmc
xor
lcall
notb
or
inc
xor
sub
xor
aad
jns
jns
ret
pop
lahf
jle
ja
decb
mov
sub
cmpsb
jecxz
addr16
xchg
call
ds
je
adc
xchg
fstps
push
sbbl
into
and
fiaddl
sub
stc
jge
mov
cmp
sub
in
dec
in
stos
std
cmp
inc
movsl
sbb
data16
pop
inc
out
sbb
xchg
pop
fcomps
xchg
leave
lds
int
push
pop
cmpsl
ss
inc
add
jg
movl
lock
mov
jns
and
stc
inc
pop
lock
fcoml
sbb
ljmp
xor
inc
icebp
jne
inc
bound
clc
push
adc
cmp
lods
mov
sbb
jp
and
sbb
call
test
les
jbe
arpl
aam
sbb
xchg
stos
add
insb
pop
cmp
and
es
aad
and
outsl
push
imul
adc
aam
in
pop
test
xchg
lods
into
fwait
cmc
add
jecxz
mov
mov
jmp
or
repnz
lahf
mov
lods
dec
mov
xchg
cmp
into
call
pop
orl
cmp
mov
sahf
pop
jmp
jb
out
cmp
mov
call
push
popa
mov
sub
out
cli
pushf
xchg
xchg
iret
xchg
dec
loope
pop
pusha
lea
loop
int3
inc
cmp
jb
jge
fwait
test
scas
sub
sub
xor
rol
inc
jbe
lods
dec
adc
push
ficoml
adc
xchg
sub
mov
xor
outsb
inc
lods
mov
int
inc
and
mov
push
push
popa
mov
add
leave
imul
shl
aas
lahf
ret
pop
out
xor
dec
push
ret
mov
in
cmp
int3
push
out
xchg
jmp
inc
mov
movsl
sub
in
adc
jmp
and
mov
popf
mov
jnp
fld
test
cmp
xchg
int3
imul
mov
mov
pop
fsubs
ljmp
or
sbb
dec
jae
and
dec
into
aas
ds
addr16
lock
or
outsb
lret
sbb
xor
jb
add
xchg
xchg
pop
imul
jle
adcl
sahf
xchg
dec
xor
shrb
sub
mov
jle
je
or
stc
cmp
push
push
or
add
stos
jb
lahf
xor
push
lahf
sub
sti
mov
clc
mov
adc
enter
lods
mov
ficoms
cmp
insl
mov
fldt
jle
add
cld
movsl
das
push
mov
inc
lea
dec
push
std
jle
imul
lret
fcoml
popa
adc
out
lret
loopne
mov
pop
scas
push
fldln2
dec
xor
xchg
or
orb
xchg
lods
loopne
mov
data16
pusha
inc
out
stc
push
fwait
dec
xchg
aad
loope
jecxz
mov
movsl
xchg
mov
leave
js
cltd
aam
jmp
pop
mov
xorl
shl
mov
push
cmp
mov
adc
je
lahf
out
xchg
test
mov
mov
xchg
insb
out
out
cmp
insb
and
jns
inc
jbe
jo
mov
push
pop
outsb
lret
xlat
fwait
sbb
pop
and
out
mov
ss
and
fstps
and
or
rorb
pop
push
cmpsl
push
scas
leave
scas
mov
jmp
or
lea
fsubs
js
cld
jecxz
jmp
into
pop
xor
cli
adc
xor
sar
dec
mov
out
lock
insb
sbb
add
test
sbb
cltd
mov
push
je
data16
js
hlt
movsl
mov
and
xchg
push
imul
ret
fimuls
or
les
test
pushf
xlat
cwtl
push
fdivs
into
xchg
lfs
lods
pop
out
test
lods
and
push
mov
jge
lcall
add
lcall
inc
xor
cmc
mov
sub
or
dec
andb
push
inc
jbe
mov
mov
xchg
mov
ss
jo
push
mov
sbb
xchg
out
mov
test
ljmp
jg
rcrb
cmc
test
and
add
fcmove
bound
es
bound
mov
lea
int3
dec
mov
lods
fnstcw
or
insb
sbb
bound
or
sub
xchg
push
xchg
or
mov
mov
imull
lea
pop
les
xchg
pushf
divb
in
xor
cmpb
inc
sbb
dec
insl
xor
ja
dec
jo
mov
cmc
stos
xchg
jl
decl
jle
pushf
sahf
outsb
jg
lcall
insl
cmpb
shrb
pop
fdivrs
and
sbb
test
cmp
scas
push
lock
dec
movl
jb
fiaddl
add
lods
mov
adc
outsl
jecxz
pop
vpmuludq
popf
gs
cli
lds
lret
and
pop
arpl
pop
push
lahf
out
sahf
jecxz
adc
dec
into
inc
cmp
adc
mov
aad
inc
test
sbb
push
not
sub
adc
push
dec
sub
mov
jnp
cmp
ret
dec
call
jns
mov
mov
enter
or
pushf
shlb
and
xchg
pop
xchg
lcall
movsl
test
fildl
jno
sub
shrl
adc
subl
or
orl
stc
adc
mov
sbbb
pop
rolb
add
addl
jg
mov
dec
push
repnz
scas
and
std
dec
inc
fcoml
inc
stos
mov
pop
or
mov
ss
push
xor
pushf
cmp
jge
dec
pusha
std
fdivrl
out
mov
scas
sbb
mov
cmpsb
sbb
fwait
push
jns
inc
sub
je
test
rcll
sub
push
test
xchg
mov
lret
jns
and
cmc
sbb
cmp
xor
test
jge
push
jns
pushw
ficoms
arpl
jp
push
pushf
push
cmp
inc
stc
cmp
add
mov
pop
sub
fs
push
jg
push
sbb
xlat
mov
arpl
push
mov
mov
inc
dec
les
and
xor
mov
dec
mov
outsb
fwait
push
sbb
aaa
jo
das
cli
dec
jmp
dec
and
leave
fidivs
fwait
outsl
addr16
fwait
or
lret
xchg
imul
outsb
out
loop
movsl
dec
pop
sti
inc
add
add
mov
pop
dec
stc
out
xchg
cwtl
lahf
adc
push
enter
pop
pop
mov
enter
imul
pop
dec
mov
ds
out
or
movsl
push
dec
adc
js
dec
push
notb
xchg
pop
fnstsw
je
inc
dec
into
mov
sub
inc
xor
adc
adc
mov
js
xor
pop
movsb
inc
fisttps
adc
xchg
ss
dec
cmp
jno
stos
and
js
jne
in
mov
sub
cli
cmp
adc
shll
xor
out
mov
push
pusha
adc
mov
cmp
pop
adc
sub
xor
lahf
icebp
push
sbb
mov
cmp
jnp
mov
aad
jge
xchg
cmp
ret
xchg
insl
cltd
mov
pop
loope
in
testl
cltd
aas
sbb
fisubrs
jae
xchg
pop
call
ljmp
push
cs
fists
cmp
cltd
fistpl
jae
mov
lods
or
dec
cmpsb
mov
lret
or
repnz
mov
or
jo
pop
out
popa
sub
mov
mov
jge
mov
sbb
and
cmp
xor
jl
idiv
jecxz
jns
fistps
or
roll
and
popf
xchg
fimull
cwtl
sahf
or
popa
push
mov
jnp
jp
mov
out
xor
xlat
pop
test
cmp
pushf
and
lret
stc
popf
test
ficoml
xchg
arpl
std
mov
xchg
add
or
imul
mov
xchg
addb
pop
or
or
mov
jbe
adc
jmp
roll
jp
xchg
imul
pusha
push
dec
mov
and
bound
push
repnz
mov
sub
push
inc
call
mov
insb
popf
inc
sbb
aaa
xorb
or
stos
jbe
sti
lcall
and
js
and
and
pop
adc
mov
rclb
stos
outsb
add
xchg
adc
xchg
cmpsl
add
lods
and
and
mov
cli
mov
mov
lret
leave
fsubl
add
or
loope
and
arpl
enter
mov
pop
and
sti
sahf
enter
cmpsl
mov
inc
jecxz
cwtl
cmp
xchg
popa
dec
int
mov
jg
sahf
jg
test
sub
mov
imul
inc
jb
jmp
insb
daa
push
loop
cmpb
sbb
sti
mov
or
shlb
jge
fdivrp
fs
and
sub
mov
sbb
es
insb
imul
push
push
dec
xchg
cli
sub
push
dec
jmp
decl
scas
ficoml
iret
insb
adc
mov
lcall
push
sbb
mov
add
pop
or
add
ja
xchg
shll
adc
popa
or
push
jo
xor
and
mov
and
aad
jecxz
mov
inc
inc
jno
adcl
sbb
cld
mov
pusha
mov
or
inc
mov
xchg
mul
int3
lcall
popf
popa
dec
les
push
lods
fstpt
pop
add
pop
out
cmpl
cmpsl
test
add
aas
jne
dec
enter
mov
jno
or
pop
xchg
fcomps
add
inc
in
ret
repnz
and
shlb
fdivr
jb
xchg
mov
jnp
fidivrl
mov
jge
xor
sub
mov
repnz
push
mov
imul
dec
daa
xlat
mov
inc
test
pop
imul
and
or
xchg
divl
std
lods
hlt
ret
fstpl
jle
jo
shl
pop
sar
xor
push
xchg
repz
notb
insl
xchg
mov
sbb
cmp
sbb
scas
fcmove
enter
xor
adc
inc
jo
jnp
shlb
push
mov
aad
lcall
jbe
lret
addr16
sti
stc
add
mov
cli
pop
leave
lds
ror
sub
movsb
dec
aam
test
adcl
jae
ret
xor
rol
cmp
movsl
pop
mov
jl
int
push
sub
dec
imul
sub
xor
pop
push
xchg
jae
dec
adc
or
push
jle
push
out
cmp
add
popf
and
repz
shlb
sbb
cmc
fiaddl
sahf
popf
shll
ret
sub
insl
mov
push
in
das
jns
mov
cmp
push
cs
lods
sar
ret
fsts
enter
imul
icebp
and
inc
sti
push
sti
adc
lret
lret
outsb
dec
fiaddl
pop
pop
jl
and
xlat
icebp
in
sub
xchg
stos
fldt
or
dec
mov
rcll
das
mov
pop
jp
xchg
or
add
ficoml
arpl
icebp
call
sub
hlt
dec
into
push
aas
rcrb
mov
and
es
mov
inc
ljmp
or
in
fsubrp
mov
cmp
pop
popf
stc
das
push
dec
out
inc
data16
push
and
or
push
addr16
cmc
sbb
test
je
gs
sub
dec
cli
lahf
xor
adc
sbb
imul
sub
jg
xchg
inc
add
rolb
lret
dec
outsl
xchg
mov
data16
push
sub
push
adc
pop
lret
movsl
jg
push
jno
push
push
jo
or
and
cmpsl
test
js
fwait
sahf
cs
cli
add
cmp
in
test
cmp
cmp
adc
in
stc
fsubr
cs
outsb
aas
dec
add
out
xor
push
mov
je
movsl
mov
cmp
sbb
lea
rcrb
nop
adc
lahf
test
add
adc
notb
xlat
fs
adc
xor
shlb
mov
ja
and
aaa
add
dec
fwait
mov
stc
femms
dec
sub
insl
pop
cs
fcomps
push
add
sub
outsb
xor
sub
xor
enter
mov
inc
xchg
cmpsb
mov
fsts
mov
jb
aaa
jo
call
pop
lret
jns
jp
push
dec
testl
xchg
popl
mov
inc
jg
mov
lahf
jg
jo
push
scas
cmpsb
aaa
rcll
pop
xor
xlat
mov
ss
xchg
sbbb
negb
push
jo
push
ss
dec
or
cltd
inc
movsb
leave
loopne,pt
adc
test
mov
xchg
add
and
lret
adc
mov
addr16
and
lds
insb
daa
aam
sbbb
jns
fcomps
ja
mov
jnp
enter
and
cs
xchg
pop
loop
cmp
and
add
ja
xchg
mov
add
mov
and
into
into
mov
lahf
repz
aad
mov
jmp
cmp
jecxz
sahf
divl
inc
xchg
mov
out
sbb
movsl
cmpsb
dec
jb
jbe
pop
shl
jg
jbe
mov
and
dec
cmp
xor
js
push
inc
test
data16
inc
frstor
lods
cmp
fidivrs
inc
adc
sub
cmpsb
dec
jo
insl
or
mov
js
daa
cmc
add
and
jmp
xchg
adc
sbb
mov
ret
sbb
dec
mov
fisttpll
sbb
lea
mov
sbb
int3
into
popf
leave
mov
imulb
push
rorb
lds
jb
movsl
sbb
mov
lods
add
xor
adc
xchg
sti
push
loopne
xor
push
arpl
sbb
dec
mov
cs
cmpsb
inc
sub
adc
xchg
mov
push
jns
adc
imull
cmp
and
add
mov
je
hlt
out
mov
mov
pop
out
lcall
addl
pusha
js
lahf
jge
scas
out
fstpl
enter
cmc
xor
mov
xchg
ja
mov
sbb
rcrb
add
inc
dec
fmull
loopne
icebp
mov
jno
outsl
pop
xor
jl
and
out
jne
cs
jns
int
cmpsb
in
push
lods
sub
or
push
ret
jmp
rorb
pushf
pop
adc
into
gs
cmp
mov
adc
xchg
mov
imul
push
pop
xchg
js
mov
jno
adc
std
sbb
inc
fs
push
jae
jp
loopne
lret
mov
imull
adc
jg
xchg
sub
ja
loopne
stc
loop
daa
imul
inc
out
mov
push
fnsetpm(287
popa
imul
dec
inc
mov
leave
jns
jns
add
add
push
push
mov
rcrl
negb
std
xor
pushf
adc
sub
idivl
cmp
insb
aas
mov
imul
insb
shrl
jle
in
shrb
insl
lcall
and
sub
or
gs
loopne
push
movsb
inc
xchg
call
inc
testl
push
in
int
hlt
sub
test
shll
push
aad
testb
stos
loope
xor
xchg
inc
jno
cmp
incl
shl
cmpb
or
mov
fdivrl
ret
mov
jge
ret
out
cmp
pop
mov
pop
adc
inc
adc
insb
xor
out
mov
in
or
jmp
sub
jle
fmull
xchg
and
xchg
call
pop
xchg
jb
out
xchg
shrb
fwait
pop
cmp
enter
arpl
inc
test
ret
add
inc
std
movsl
sti
lret
mov
push
add
lcall
stos
mov
mov
adc
inc
subl
pop
push
sub
call
stos
int3
scas
jnp
addr16
dec
out
xlat
adc
mull
add
adc
cld
pop
sbb
js
xchg
push
ror
shlb
in
test
repnz
vpcomd
or
push
jno
repz
dec
into
adc
xchg
in
pop
or
mov
and
mov
mov
mov
push
adc
mov
addb
ret
adc
int3
cmp
iret
inc
fsubl
int3
mov
push
xchg
cmpsl
ljmp
dec
fnstcw
test
jns
pop
and
lcall
xor
leave
mov
and
mov
xchg
or
pushf
leave
cmpsb
fdivr
or
out
xor
out
fsub
pop
subl
mov
pop
es
xor
adc
jae
dec
loope
or
fnstcw
pop
adc
xor
push
pop
rcrl
daa
icebp
sub
or
imull
cmp
lret
adc
inc
scas
mov
ss
sub
xor
pop
adc
outsl
arpl
loop
dec
popa
and
testl
out
jle
mov
mov
adc
pop
jp
fldl
sbb
add
mov
test
mov
movsb
mov
dec
imul
jg
cmp
xor
cmp
pop
pop
jne
mov
and
pop
dec
dec
push
pop
aas
into
dec
jae
and
cmp
aas
pop
loop
sahf
out
aas
enter
enter
negb
push
ljmp
fisubrs
mov
lods
inc
cmp
call
mov
cmc
ret
jecxz
sub
mov
xchg
push
pop
mov
loopne
leave
ret
test
cltd
insb
jae
pusha
imul
xor
add
pusha
push
aam
test
loop
lea
jle
jle
dec
stos
jge
mov
movsb
push
mov
test
adc
xor
mov
pop
cmc
in
dec
inc
lods
adcl
mov
cwtl
das
xor
adc
cmp
xchg
mov
faddl
cmp
aas
in
xchg
xchg
jo
push
sub
add
adc
mov
ds
sbb
push
and
ret
xor
movsb
push
sbb
inc
xor
cmp
data16
cmc
sub
call
push
xor
pop
sbb
aas
cwtl
push
sbb
pop
mov
sbb
xlat
in
sub
popa
in
in
dec
fwait
lds
mov
test
imull
daa
inc
insl
and
cs
sarb
loope
mov
and
pop
inc
adc
pop
and
rcrb
daa
loopne
loope
in
leave
stc
xchg
mov
enter
ss
pop
sbb
or
mov
lcall
jp
dec
push
mov
fidivrs
jbe
sub
mov
mov
mov
icebp
loop
cmpl
inc
dec
shrl
mov
inc
sbb
test
test
in
fnstcw
int
call
xor
lcall
aas
lods
push
adc
mov
dec
cwtl
das
div
lea
jns
fildll
mov
or
inc
repnz
fcmovnb
out
push
testl
xor
orl
cmp
or
fisubl
xchg
xchg
pop
lds
inc
cmp
lahf
scas
fsts
sti
aad
test
into
jnp
shlb
sub
inc
js
dec
imul
jmp
lret
popa
mov
dec
cmp
mov
adc
mov
out
lret
popf
push
push
js
dec
cmp
pop
inc
push
imul
sub
or
cmc
movsb
lcall
rorl
dec
cmp
sbb
jae
sti
sub
cld
fistpll
jecxz
sub
adc
sbb
scas
mov
shll
push
jae
cmc
or
clc
push
roll
lcall
inc
jg
sub
mov
mov
xchg
lret
fnstsw
loopne
aam
mov
fwait
cmpsb
clc
fldt
adc
jmp
lds
sbb
loopne
adc
sub
orl
xchg
push
pop
in
ds
xor
loop
push
neg
mov
add
outsb
or
scas
xchg
js
push
arpl
mov
sbb
fcomps
enter
or
sub
lahf
adc
out
std
inc
adc
mov
mov
sub
insl
mov
scas
gs
arpl
hlt
inc
jp
ret
jg
sti
and
imul
mov
or
lcall
mov
and
jne
enter
dec
jmp
in
nop
rcll
pop
mov
rcrl
xchg
loop
mov
mov
lcall
daa
push
mov
lea
xor
mov
sti
orl
scas
pushf
adc
xor
fdivrl
pop
sbb
adc
insl
inc
xchg
pop
test
outsl
imul
jmp
push
jbe
dec
inc
aaa
xchg
loop
xchg
je
std
out
pop
mov
mov
cmpsb
ja
aas
fstpt
fstpl
fsubr
xor
push
xchg
xor
xchg
scas
push
add
sbb
aad
lret
sub
cltd
jge
add
cs
arpl
sub
insl
mov
fcomip
ss
into
pusha
daa
push
adc
jb
xchg
pop
cmp
out
stos
or
nop
push
ficompl
cmp
mov
lret
int3
xchg
lahf
xchg
dec
ds
fs
icebp
cli
sbb
mov
stos
test
lahf
sti
adc
in
adc
test
xchg
cmp
cmc
sub
in
mov
orl
mov
jno
inc
loopne
lods
ds
cmp
call
mov
repz
and
call
cs
xchg
mov
or
sub
insl
sarl
fs
and
xchg
mov
movsb
mov
cmp
shlb
pop
jne
stos
dec
data16
das
leave
or
ss
fnsave
ja
clc
jbe
mov
jnp
inc
push
xchg
cmc
xor
jb
xor
dec
andb
lahf
dec
push
repz
aad
adc
fiaddl
or
cli
jg
sub
push
push
adc
xor
cli
xchg
xchg
jmp
and
jbe
into
aas
sbb
or
mov
loopne
inc
mov
jle
pop
stc
mov
or
lret
pop
js
jo
and
mov
inc
xor
push
adc
cli
cmp
incl
lret
roll
cs
js
test
test
pop
jp
jecxz
or
data16
pop
pop
xor
aam
out
dec
imul
xor
sbb
hlt
out
rcrl
mov
outsb
cmp
addr16
push
mov
mov
or
imul
or
insb
mov
enter
dec
cs
addb
jo
mov
pop
cmp
or
dec
lods
pop
cld
push
jl
outsl
push
cmp
pop
adc
push
jnp
fistl
pop
pop
aaa
jge
adc
cmp
rcrl
popf
enter
iret
inc
dec
fwait
adc
dec
or
int
icebp
add
xchg
in
pop
ds
fstps
and
mov
inc
mov
xorl
xchg
lods
frstor
add
inc
pop
xor
pop
fcmovne
fcmovb
je
scas
cwtl
fldcw
dec
repz
int
hlt
hlt
pop
popf
lret
mov
fsubs
fldt
call
or
lret
test
inc
push
pop
test
addr16
dec
insl
or
dec
mov
cmc
add
jmp
les
adc
ss
jmp
out
dec
outsb
pop
push
nop
dec
cwtl
mov
repz
addr16
dec
jne
push
mov
xchg
xor
mov
mov
push
jecxz
fldenv
test
ja
xlat
lods
inc
movsb
ds
insb
mov
mov
outsb
aam
mov
fwait
push
pop
popa
in
es
pop
push
inc
pop
pop
ffreep
in
ja
and
push
cltd
add
xor
inc
gs
inc
adc
mov
add
out
push
xchg
xchg
es
adc
ja
shll
push
cld
jno
inc
aaa
jo
jnp
lds
rorb
mov
roll
cltd
fldl
xchg
mov
or
out
insl
aad
pop
movsb
jo
mov
test
cmp
out
or
insb
push
xchg
jg
popa
insb
cmpsb
and
addr16
jo
cmpsb
jb
clc
xor
pop
cld
and
outsb
mov
lds
mov
fldenv
lods
push
inc
sbb
xor
mov
inc
shlb
test
jne
push
mov
arpl
pop
adc
jle
pop
popf
test
add
mov
mov
ds
mov
mov
xchg
jecxz
icebp
cmp
fadd
push
in
inc
push
imul
xchg
adc
loope
ret
cmp
insb
adc
fadds
fs
inc
xor
frstor
out
mov
xchg
jl
hlt
pusha
sbb
cwtl
xor
out
fisubl
out
mov
std
inc
stc
xor
mov
push
repnz
adc
pop
sbb
stc
cli
lods
sub
push
scas
xchg
divl
xchg
mov
jbe
push
dec
sahf
push
rol
test
dec
loopne
dec
fistpll
mov
mov
push
fwait
leave
sbb
aam
or
jo
sbb
lods
lods
adc
xchg
jno
sarl
push
jmp
in
in
loop
add
stc
xchg
inc
mov
int
pop
sahf
xchg
adc
jns
xlat
je
mov
xchg
mov
mov
adc
inc
xchg
or
testb
inc
xor
pop
jl
fwait
out
cmp
outsl
xchg
cmc
sub
jl
or
xchg
xchg
pop
insb
int
fsts
leave
in
rcll
test
leave
inc
xchg
ss
or
subl
adc
jne
sbb
pop
push
cmc
movsb
fs
sub
pop
fwait
xchg
pop
jno
push
in
dec
test
ret
stc
lea
cmpl
cmp
lret
dec
rclb
mov
sbb
mov
sub
ss
insb
dec
fdivrl
movsl
pop
imulb
sti
jecxz
and
test
data16
jnp
rorl
sub
enter
xchg
ds
stc
push
addr16
and
mov
adc
cmp
fbld
rclb
loop
hlt
shlb
loope
fstl
mov
daa
outsb
jnp
push
test
inc
cmp
dec
gs
mov
cli
xor
or
xorl
fucomip
es
in
in
cltd
xchg
xor
or
push
inc
xchg
lock
fstps
int
xlat
test
arpl
dec
and
push
dec
and
addl
mov
inc
or
inc
xor
loop
arpl
or
and
xchg
jl
insb
mov
mov
cld
int3
xor
mov
or
sbb
mov
shrl
and
add
add
cmp
daa
jmp
jp
es
cs
shrd
inc
rclb
lcall
test
rcrb
adc
mov
sub
inc
neg
and
imul
hlt
sbb
push
xchg
push
xchg
cmpsl
bnd
inc
mov
mov
add
sub
mov
sbb
xor
fs
mov
inc
sbb
sub
movsb
cmpl
loope
lahf
lahf
jecxz
scas
daa
popf
out
test
adc
pop
push
pop
mov
das
sub
rcll
in
xchg
lds
push
bound
and
mov
push
or
push
mov
push
stc
ljmp
cwtl
mov
jo
and
inc
fnsave
push
fidivrs
adc
cld
inc
jmp
push
mov
jae
sar
fxch
loopne
pushf
push
push
fcmovne
push
jns
or
mov
cmc
add
iret
push
xchg
je
push
cmp
ss
test
icebp
xorb
jne
inc
xchg
push
mov
and
xor
daa
mov
mov
inc
rcll
in
mov
xchg
mov
lret
or
xchg
cmp
jl
and
xor
pop
fwait
and
mov
mov
sahf
dec
adc
das
pop
sbb
mov
mov
inc
insl
pusha
xor
jp
cmp
add
jp
mov
mov
xchg
inc
dec
repnz
jmp
adc
imul
pop
mov
in
scas
and
adc
and
aam
cmp
pop
adc
and
sahf
and
add
xchg
cmpsl
push
inc
push
mov
fnstenv
sbb
cmp
in
mov
dec
mov
inc
mov
mov
push
rcll
xchg
dec
pop
add
addb
cmp
pop
xor
cmpb
ret
push
sub
sbb
std
daa
push
mov
xchg
lahf
lods
sbb
push
push
cmp
mov
mov
push
mov
ficoms
sub
sub
cmp
ja
fiadds
push
jl
push
fwait
clc
or
fdivrs
out
dec
jbe
cli
sub
mov
mov
and
xor
outsb
lcall
mov
stc
or
bound
mov
aas
push
ss
push
sub
cs
std
dec
lahf
push
ror
loop
mov
call
or
cld
aam
mov
sub
ret
loopne
add
jno
jl
pop
sbb
push
outsl
lahf
mov
add
jg
jae
ja
lock
notl
int3
dec
push
adc
pop
jecxz
lock
es
inc
in
or
cmp
dec
adc
inc
and
sbb
fisttpll
fnstsw
mov
inc
mov
mov
js
outsb
lcall
pop
mov
pop
scas
in
pop
aam
das
xchg
stc
dec
sub
jmp
imul
push
pop
ljmp
daa
pop
dec
inc
test
jnp
xchg
inc
mul
das
lock
lcall
or
iret
fwait
mov
push
dec
inc
adc
push
add
je
add
or
out
adc
mov
repnz
xor
and
pop
and
inc
addb
cwtl
xchg
xchg
pushf
call
inc
sub
push
mov
lcall
and
inc
dec
jbe
or
xchg
les
inc
push
jmp
and
roll
or
push
inc
add
xchg
sbb
sub
mov
imul
and
pop
jo
lds
out
sbb
testb
sub
pop
int
inc
mov
dec
jae
jae
mov
jge
adc
into
push
jns
dec
dec
lea
xchg
test
inc
pop
cmp
arpl
xchg
scas
inc
adc
dec
ja
mov
push
jp
xor
mov
inc
outsb
pop
mov
push
pop
aam
push
inc
popf
sarb
out
sti
jg
mov
mov
pop
xor
popf
xchg
bound
test
jnp
push
sbb
shlb
inc
cmp
lods
cmp
sahf
aam
call
cmp
mov
aad
inc
push
push
inc
mov
out
gs
lcall
jle
xor
and
stc
test
imul
cli
xchg
pop
iret
sub
sub
dec
inc
leave
jne
mov
mov
mov
fadds
cmp
cmp
or
mov
fildl
dec
sub
fmulp
ss
mov
cli
out
push
mov
fstps
inc
rcrb
mov
mov
cli
bound
push
mul
mov
nop
adc
cmc
inc
dec
cmp
sbb
cmc
jge
pop
cmc
mov
je
in
mov
ljmp
ja
mov
cltd
push
testl
push
imul
into
pop
dec
sub
addr16
mov
loopne
sub
aaa
sub
dec
or
add
dec
ret
bound
mov
cmpsl
icebp
and
dec
dec
or
push
je
pop
xorl
outsl
fptan
sub
push
clc
fistl
push
mov
test
mov
xor
add
icebp
mov
pusha
push
mov
jo
pop
repz
jns
sub
test
sbb
enter
push
das
push
sbb
sahf
jg
je
mov
dec
adc
mov
add
or
xchg
enter
pop
jge
mov
push
enter
dec
dec
or
and
ss
fnstenv
popf
lea
push
mov
out
jb
xor
mov
lods
cli
ja
loopne
fiaddl
add
push
movsl
dec
fiadds
scas
stos
sahf
mov
xchg
inc
xor
fsts
add
test
xor
xlat
cmpsb
popf
and
adcb
scas
pusha
mov
enter
adc
test
mov
scas
inc
xchg
mov
leave
or
je
jp
mov
lea
adc
pop
jnp
idiv
ficoml
loope
mov
mov
lock
bound
xchg
mov
cld
lds
sahf
xlat
sub
aam
jmp
insb
out
mov
mov
inc
cmp
std
xor
addr16
lods
push
xchg
mov
mov
dec
pop
fistpl
mov
aam
cmp
sub
jg
pop
or
insb
or
fcmovnu
dec
shlb
mov
aam
daa
and
jecxz
paddsb
add
mov
mov
mov
sahf
mov
shr
inc
mov
popf
mov
mov
imul
pop
sub
jae
and
in
js
pop
es
in
xchg
push
popa
popa
shrl
sub
mov
mov
mov
cmp
imul
xlat
jns
jmp
dec
dec
sbb
or
inc
cmp
xor
sub
xchg
jg
iret
sar
sub
rclb
cmp
cmpsl
xchg
push
scas
xchg
repnz
mov
jmp
cmpsb
shlb
sub
test
clc
stos
jne
cmpsl
jle
adc
push
sahf
or
loope
gs
or
divl
mov
inc
std
sahf
mov
xchg
xor
adc
nop
mov
or
cli
add
ror
pop
mov
aas
call
mov
sbb
mov
pop
jno
not
push
sbb
dec
xchg
xor
daa
test
inc
and
fisubrl
inc
add
jae
loope
sbb
stos
jg
pop
xchg
xor
sbb
out
jb
cmpsb
xchg
sub
popa
pop
dec
mov
iret
pop
or
mov
arpl
add
pop
sub
add
in
mov
repnz
sub
inc
mov
or
pop
sbb
loopne
xchg
pop
iret
sti
sbb
jecxz
and
pop
sub
xchg
pop
stos
sbb
arpl
fstpl
aam
mov
pop
adc
pop
adc
mov
div
add
sub
add
add
lds
xchg
xchg
popf
mov
push
xchg
dec
cmp
push
or
jns
loope
jns
jbe
das
inc
jb
sti
push
and
or
lret
dec
mov
pop
sub
arpl
lahf
mov
daa
mov
lahf
jle
int3
pop
pop
test
loop
stc
add
ret
bound
jbe
mov
jnp
addl
subl
fsubl
cmp
scas
push
pusha
lret
sbb
das
or
cmp
adc
aaa
pop
dec
or
mov
fnsave
and
xor
pop
cmpb
sub
lods
xchg
js
mov
ds
push
pop
jmp
fildl
cmp
aas
dec
daa
mov
mov
daa
lock
sub
or
shlb
cltd
mov
test
cmp
sub
test
dec
fwait
mov
xlat
outsb
ficomps
iret
clc
rcrl
ja
jnp
pop
test
mov
mov
mov
gs
pop
or
jns
jbe
loop
jge
ds
cmp
xor
pop
cltd
incl
into
mov
fwait
inc
dec
pop
les
mov
mov
repnz
mov
sarb
xor
push
and
cmpsb
inc
mov
cmpsb
push
loop
in
in
fadd
mov
xor
xchg
and
pop
imul
add
push
or
xor
rorl
addr16
xor
cmp
jp
xchg
jg
and
xor
pop
pop
icebp
or
push
int3
pop
inc
push
add
xchg
arpl
mov
add
mov
sub
pop
add
mov
subb
scas
inc
push
int3
jp
mov
sub
cmp
and
lock
inc
add
mov
xor
fdivr
cmp
test
push
imul
daa
xchg
arpl
mov
int
and
test
in
dec
movlps
or
sbb
shll
ret
mov
pop
stc
sti
ds
and
mov
and
sbb
add
add
aad
cld
int3
xor
mov
popf
fdivrl
xor
cmpb
push
popf
push
push
popa
cmpsl
adc
loope
test
aaa
xorb
xchg
xchg
sbb
sub
add
mov
jbe
std
imul
rcll
push
xchg
jecxz,pn
cwtl
jns
cmpsl
scas
mov
movsb
call
aaa
cmovbe
aaa
ror
xchg
mov
cmp
lret
in
and
out
rcl
inc
lret
xor
mov
movl
icebp
xlat
aad
adc
sahf
mov
jne
mov
pop
sbb
int
sbb
inc
shl
or
pushf
push
or
lods
pop
cs
cmp
or
xchg
dec
push
cmc
mov
aad
out
jecxz
lods
and
jb
in
mov
icebp
lcall
sbb
cld
add
sub
cmp
aas
aas
sbb
lcall
sbb
mov
jmp
xor
test
les
jbe
adc
jae
or
outsl
sahf
xor
pop
test
es
dec
xchg
fidivs
cmp
jnp
rorb
test
test
enter
mov
xor
daa
loop
xor
xchg
inc
mov
cmp
std
xor
leave
jbe
xor
mov
jecxz
aad
out
sti
lods
lcall
push
ret
mov
cmc
enter
push
mov
sbb
pop
xchg
sbb
stc
pop
mov
mov
negb
adc
jnp
loopne
test
fadds
fistps
mov
push
imul
enter
ss
hlt
xchg
jmp
sahf
sti
dec
ss
lcall
push
mov
rclb
jnp
lods
loopne
xlat
push
repnz
cli
gs
enter
or
pop
mov
sub
xchg
inc
dec
mov
jl
or
stos
jno
in
cmp
jmp
notl
inc
pusha
push
hlt
stos
xor
roll
dec
push
imul
xchg
xchg
aad
shlb
ffreep
mov
ja
sahf
mov
lcall
aam
push
fcoml
push
jns
ret
mov
fsubr
in
pop
pop
cwtl
push
gs
pop
xchg
out
pop
jl
xchg
and
dec
xor
movsl
test
pop
inc
inc
dec
ds
out
insl
loop
jg
jo
lahf
ds
mov
mov
or
cltd
xor
adc
jb
xlat
leave
lods
nop
inc
lret
dec
push
xchg
sarb
pop
pop
popa
in
cmc
cmp
pop
cmp
out
jnp
loope
pusha
into
xor
add
cmp
jp
jmp
xor
shlb
ljmp
pushf
imul
stc
mov
mov
push
or
ret
or
mov
mov
arpl
sbb
mov
mov
int
in
push
lret
adc
or
mov
or
xchg
inc
nop
sbb
mov
inc
pop
aas
jg
movsl
fisttpll
push
imul
ret
les
test
popf
outsl
mov
xchg
lods
cli
cmp
xchg
dec
cmp
in
push
scas
inc
mov
push
xchg
test
movsl
jge
jl
cs
jno
xchg
mov
dec
mov
out
mov
into
arpl
add
dec
push
je
mov
addr16
mov
les
cmp
call
sub
and
xor
fbld
mov
xor
into
push
popf
xor
int
loope
jg
aas
and
add
sub
adc
mov
aas
insl
lods
jle
jnp
call
sub
fsubs
pushf
push
mov
add
sub
dec
push
push
dec
inc
leave
in
jo
movsb
xor
in
ficomps
xor
insl
xchg
mov
divb
xchg
mov
jecxz
cli
ret
jg
imulb
jge
loopne
fs
ss
out
sub
stc
add
mov
push
divl
insl
xchg
popa
mov
mov
imul
sbb
lds
push
jne
mov
aam
into
push
js
inc
sahf
or
pusha
pusha
scas
xchg
cmp
push
scas
cmc
pop
push
sbb
insb
pop
sbb
and
dec
dec
mov
mov
in
or
ret
pop
dec
inc
sbb
movmskps
jo
pop
xchg
out
in
push
sub
sbb
sbb
add
jecxz
mov
fistl
in
jle
xor
cli
in
out
daa
out
sub
jno
loope
push
sbb
jo
dec
jo
push
pop
mov
sahf
pop
pop
xor
cmp
pop
sbb
mov
jge
push
add
fcom
push
sti
xor
fistl
jle
xor
dec
sbb
and
cltd
imul
fnstenv
push
sbb
out
add
test
pop
adc
lea
add
push
int
dec
int
xchg
cmp
fisubl
aaa
mov
loop
lea
ret
pushf
test
lods
sarl
subl
mov
cmp
sub
lcall
ret
insb
out
sar
sbb
dec
das
lret
adc
fcomps
xchg
mov
fwait
adc
cmpsl
insl
cmp
dec
cmpl
stos
scas
push
inc
lods
test
or
jmp
push
call
dec
pop
hlt
dec
lea
cmpsl
aam
push
jmp
adc
ljmp
lahf
cmpsl
je
lds
jg
adc
lock
pop
mov
std
push
mov
jnp
cs
into
adc
mov
and
sub
dec
call
mov
inc
sti
sti
push
xor
add
dec
jbe
mov
test
adc
dec
cli
into
pushf
pop
movsl
outsl
sub
jae
mov
cmp
mov
mov
ljmp
je
cld
push
dec
cltd
inc
test
pop
sbb
mov
fwait
mov
or
push
cltd
xchg
dec
cmp
loopne
imul
push
push
inc
rcr
mov
xchg
or
mov
fldcw
lret
lods
and
repnz
mov
mov
mov
popa
mov
fisubrl
arpl
outsb
mov
les
mov
jg
mov
add
aad
mull
shrb
cmp
dec
rcll
cmpsb
dec
iret
insl
arpl
or
cmpsb
pop
mov
scas
jl
push
rcrb
out
push
call
roll
cltd
inc
inc
shl
inc
pop
ss
or
enter
cwtl
pushf
int
push
clc
fxch
scas
aam
xor
mov
push
push
cli
ljmp
hlt
shll
push
dec
stc
enter
out
shlb
insl
in
jne
shrl
in
icebp
cmp
cmp
outsl
fnstenv
mov
and
gs
mov
inc
fsubp
cmp
pop
inc
test
dec
test
cs
or
mov
sbb
test
jbe
pop
cltd
cmpsl
sbb
bound
daa
lea
andb
stos
imul
lahf
or
xchg
and
int
push
jle
out
gs
push
lock
cmp
lods
shll
outsl
je
adc
mov
in
add
xchg
dec
scas
mov
jge
outsb
fbld
inc
xchg
push
or
mov
inc
fcoms
sbb
xor
int
push
xor
mov
mov
add
inc
jmp
outsl
sbb
adc
dec
or
push
xchg
test
pop
add
sbb
inc
jns
xlat
cmc
jno
sbb
test
sub
mov
xchg
test
imul
pusha
add
ficomps
int
jae
lcall
mov
pop
push
sahf
pop
or
sbb
stos
pop
xor
shlb
pop
xchg
jmp
or
push
adcb
addr16
jg
mov
mov
cwtl
adc
adc
mov
loope
cmpb
pop
mov
outsl
xchg
sub
jb
or
out
loope
sub
adc
test
sub
cmpsb
jecxz
shl
stos
push
push
fwait
cmp
mov
dec
lret
mov
scas
aad
bound
cmp
insl
cmp
add
xchg
adc
xor
outsb
ljmp
mov
mov
imul
arpl
cmc
inc
inc
push
movsb
cmp
shll
sub
xchg
dec
mov
mov
gs
les
popf
inc
test
sbbb
ss
mov
aam
jecxz
mov
jp
iret
and
in
jae
stos
sbbb
sbb
es
xchg
cmp
scas
sub
mov
pop
insb
lds
inc
xor
push
jg
repz
je
xchg
sarl
mov
stc
loope
mov
pop
push
mov
aaa
gs
and
and
stc
ss
js
cmp
mov
outsl
adc
iret
mov
pop
bound
mov
jb
in
bound
pop
cmp
pop
fwait
dec
inc
pop
flds
repz
xor
loope
pop
repnz
sbb
popf
lret
testl
adc
mov
adc
movsl
pop
inc
test
or
rcr
dec
jb
loop
push
imull
inc
xchg
in
cmp
lods
jo
repz
cmp
fidivl
sub
and
lods
sbb
dec
inc
add
roll
es
mov
enter
out
mov
out
pop
jl
sahf
lods
mov
cld
pop
mov
dec
out
je
xchg
xor
sub
xor
jnp
cmp
pop
pop
mov
lock
xchg
and
stc
rclb
push
mov
sub
xchg
orl
pusha
jns
xlat
pop
add
sbb
cmp
and
stc
pop
in
clc
sbb
mov
mov
fisttps
mov
lcall
pop
or
out
sbb
or
pop
and
adc
sbb
pop
mov
nop
or
iret
dec
pop
test
sub
stos
mov
xchg
aas
jl
sub
xlat
and
imul
push
fnsave
hlt
test
jg
and
pop
push
imul
xchg
mov
test
push
xchg
push
adc
mov
mov
xor
mov
add
pop
imul
jnp
lcall
daa
xor
xor
rcrl
js
enter
decb
ret
rorb
jne
adc
dec
movsb
add
subb
or
xor
adc
dec
dec
xor
sub
cmp
cmovo
xchg
sbb
dec
ficoml
mov
or
and
mov
inc
dec
stos
imull
fmuls
sbb
sbb
lret
cli
pop
sub
mov
mov
mov
ja
gs
and
ss
push
sbb
mov
adcb
pop
mov
movsl
and
orl
jp
jp
inc
adc
inc
or
in
stos
daa
int3
xor
movsl
es
dec
cmp
out
jmp
push
mov
lret
sbb
mov
pop
mov
adc
sahf
bound
inc
fwait
dec
out
inc
fisubrl
mov
loope
xchg
mov
aad
les
push
lret
std
lea
xor
stc
xor
mov
cmp
int
mov
pop
cmp
sub
imul
hlt
popa
sub
out
inc
cmp
mov
mull
orb
out
xor
add
pop
jns
test
add
push
inc
add
pop
std
adc
ljmp
xor
call
icebp
aaa
xchg
call
fwait
lahf
bound
adc
andl
loope
pop
push
cmp
filds
xor
adc
pop
push
xorb
xor
add
xchg
lcall
push
xchg
pop
movsl
cli
mov
push
ja
ficoml
jnp
jle
jmp
mov
mov
push
inc
adc
lcall
sub
in
fwait
mov
push
jbe
fisubs
loope
or
jnp
pop
mov
jnp
xchg
lods
jno
or
jmp
stos
in
jbe
sub
push
sub
or
inc
xchg
cmpb
push
jnp
or
mov
cwtl
pop
jnp
jl
adc
outsb
cmp
or
mov
subl
cmp
mov
jge
std
dec
mov
jle
out
ret
sbb
mov
inc
test
xchg
gs
mov
jb
and
dec
pushf
gs
fs
or
mov
cmp
vprotw
test
cmp
loop
inc
fs
push
dec
jo
sbb
ljmp
movsb
iret
xor
xor
test
cmp
xchg
pop
hlt
jmp
push
ja
push
mov
dec
pop
daa
mov
sbb
cmp
cld
enter
repz
cmpsb
scas
incb
std
loop
sub
pusha
insl
int3
pop
pop
jns
dec
sahf
and
bound
imul
fiadds
dec
pusha
mov
fcoml
mov
xor
addl
pop
dec
aad
pusha
lret
out
mov
pop
pusha
in
sbb
dec
pop
xchg
mov
mov
std
iret
mov
or
imul
mov
sti
pop
xchg
mov
lods
fldl
mov
iret
ja
loopne
or
stos
js
jnp
or
dec
inc
test
out
ret
je
sbb
and
je
rolb
shll
addr16
dec
repnz
dec
pop
stos
test
cmpb
jecxz
andb
loope
loop
adc
mov
dec
fidivrl
aas
jnp
clc
jecxz
fmull
dec
dec
xchg
jge
or
clc
pop
into
mov
or
sub
mov
xlat
pop
inc
dec
setnp
ljmp
aam
push
push
out
xchg
cs
or
js
mov
arpl
outsl
inc
mov
mov
sub
out
repz
pop
jne
mov
mov
mov
fldl
inc
adc
jae
push
das
push
imul
jp
cmpsb
repz
mov
mov
mov
orl
pop
jb
pop
add
cmp
ja
jg
loop
sbb
jmp
mov
mov
jne
push
sub
rcll
mov
cwtl
lcall
sahf
cmpsb
cmovg
aam
cltd
xchg
lcall
mov
orl
testb
js
push
pop
aaa
mov
jns
mov
xor
dec
sbb
xchg
jecxz
jb
inc
lahf
test
jge
push
andb
pusha
popf
dec
push
nop
icebp
and
inc
call
movb
dec
inc
test
test
xchg
shl
xchg
inc
jae
xchg
sub
ret
jle
sub
xor
jp
in
ja
rcll
aad
stos
push
ret
popa
jle
mov
jne
jle
mov
xor
mov
inc
push
xchg
sub
pop
pop
jns
pop
sbb
arpl
loope
pop
pop
data16
and
xchg
cmpsl
popa
jne
mov
notb
jl
rcrl
sub
in
icebp
iret
stc
mov
jl
xchg
and
adc
mov
push
inc
pop
roll
loopne
mov
je
add
pusha
orb
inc
push
sub
jo
add
js
xor
imul
push
cmpsl
data16
inc
mov
pop
cmc
pop
ja
pop
mov
mov
std
scas
pop
and
jns
fildll
jmp
inc
cs
repnz
cmpsb
add
jg
popa
sub
shrl
jge
addb
cld
fldcw
cwtl
sbb
cmc
and
lods
mov
pop
arpl
imul
mov
scas
pop
sub
dec
dec
dec
pop
or
adc
push
lahf
or
pushf
imull
gs
or
stos
cmp
mov
lret
stos
aaa
lea
out
add
aad
aad
mov
ljmp
push
adc
test
out
frstor
jns
dec
les
push
adc
push
push
mov
sbb
lret
adc
adc
or
mov
cli
dec
aas
cmp
adc
int
psubb
xchg
cmp
ljmp
mov
and
icebp
fcmovnu
mov
shl
or
outsl
js
iret
leave
or
mov
retw
mov
sti
mov
push
faddl
mov
sbb
outsl
sub
xchg
mov
jmp
jo
sbb
hlt
xchg
inc
popf
jecxz
es
push
inc
adc
jnp
sub
inc
enter
adc
jno
inc
mov
out
sub
xchg
or
cmp
push
sbb
jnp
out
shr
cmp
or
bound
rcr
dec
in
sahf
lods
xor
fs
sub
pop
cmp
jp
loopne
mov
dec
shll
dec
add
mov
repnz
clc
cltd
push
insl
daa
add
dec
test
pop
mov
or
scas
in
mov
ret
sub
mov
xchg
xchg
inc
or
and
into
cltd
sbb
iret
xchg
mov
mov
fists
cmpsb
push
pop
push
test
ss
jb
popa
int
jns
int3
aam
aam
cmp
mov
insl
mov
ljmp
out
cmp
adc
aad
add
dec
int3
mov
lcall
sti
pop
rorb
inc
nop
or
push
out
in
leave
ds
rcrl
inc
aam
and
and
outsb
idivb
add
cmpsb
test
jo
jae
cwtl
push
sbb
mov
xchg
adc
cmp
add
in
imul
push
pop
pushf
xchg
ljmp
mov
jg
ss
sbb
loop
sbb
inc
xor
xchg
ret
pop
xchg
imul
jle
pop
dec
cld
inc
leave
mov
jae
pop
inc
cli
ror
dec
lret
mov
mov
mov
push
cld
jle
mov
iret
push
push
xchg
ds
mov
mov
aad
ja
lods
sub
push
aam
push
fcmovnu
mov
incb
sarl
or
pusha
and
dec
pop
scas
outsb
mov
imul
imull
dec
xor
dec
cmp
and
add
jge
inc
addl
shl
jno
popa
stos
jbe
pop
in
xchg
cmp
adc
jmp
les
mov
and
les
fdivrl
es
loop
xor
addr16
cmp
inc
pusha
movsb
add
adc
dec
imull
repnz
hlt
pop
ficoml
fildl
jnp
xchg
mov
fistpl
nop
mov
xchg
xchg
lods
jecxz
lods
rcl
repnz
push
sarl
insb
cmp
mov
scas
lock
hlt
or
adcl
xchg
cmp
fisttps
mov
mov
jns
mov
dec
mov
test
lret
push
mov
shlb
mov
out
or
mov
push
scas
cwtl
pop
mov
fdivl
inc
ffreep
sahf
pop
and
xor
xchg
call
dec
movsl
cmp
rcr
cmp
mov
clc
inc
pop
sti
push
mov
into
pop
xchg
mov
sbb
mov
push
test
jp
or
pusha
adc
es
pop
jmp
ja
xor
loope
testb
jae
push
jns
cmp
ror
cmpsb
cld
push
and
pop
es
ds
inc
adc
mov
or
icebp
aam
stos
xlat
ret
incl
insb
or
and
push
lahf
push
sbbb
outsl
pushf
repnz
test
or
mov
cli
in
or
jnp
dec
cld
mov
clc
scas
test
xchg
sub
fsubrl
outsb
push
out
lahf
mov
sbb
test
mov
or
repnz
aaa
mov
cmp
pop
cmc
stc
and
jae
fcoms
jecxz
xchg
stc
out
cmpsb
cwtl
cld
pop
into
testl
mov
jp
cmc
jno
cmp
sbb
jl
cmp
fistl
sbb
inc
fs
lods
xor
daa
dec
fstpt
test
adc
push
mov
fsubl
adc
popa
mov
push
test
dec
pop
jnp
mov
pop
pop
pop
xor
test
add
or
mov
ds
fistl
repnz
lds
outsl
jmp
jns
in
lcall
aas
in
fwait
inc
das
and
pop
ljmp
xchg
pop
pop
push
mov
xchg
cli
mov
out
push
adc
add
adc
mov
or
adc
call
pushf
mov
sti
int
jmp
jg
inc
shl
call
rol
enter
inc
repnz
xchg
shl
sbb
insb
mov
mov
movsb
out
mov
ja
lock
sbb
fdivr
push
lds
adc
xchg
mov
xchg
push
cmpsl
mov
bound
push
je
lret
xchg
or
cmp
xor
pop
lahf
lea
dec
packuswb
lcall
xchg
cmp
lods
dec
repnz
adc
mov
mov
xchg
mov
ds
out
add
lcall
push
jmp
stos
lods
lea
fcoml
test
es
adc
imul
loopne
imul
pusha
pop
add
out
daa
mov
jo
dec
sti
mov
je
icebp
or
and
add
dec
xor
js
dec
inc
push
faddl
mov
cs
lret
sbb
scas
inc
cmc
lret
push
jo
mul
push
inc
jecxz
jl
and
sahf
xor
lahf
xchg
cmpb
fcompl
stos
loope
sbb
jbe
call
es
sub
lret
push
or
xchg
sbb
imul
lret
sub
and
test
mov
sub
push
xor
xchg
xlat
mov
into
sbb
push
and
mov
add
xchg
cwtl
xor
in
inc
jbe
addb
std
xchg
fs
gs
cmpsl
xchg
jbe
mov
push
vprotb
cld
or
xor
mov
xchg
xor
ds
push
mov
fistps
pushf
mov
push
mov
xchg
xlat
call
xor
lock
es
ds
inc
scas
nop
test
aaa
push
and
hlt
movsb
lret
movzbl
pusha
push
jl
negb
dec
arpl
test
stos
fisttps
inc
add
pop
call
pop
jecxz
js
pop
in
xchg
lret
out
push
push
enter
sbb
xor
mov
dec
sub
out
mov
out
push
inc
and
outsl
or
imul
push
cs
jne
insl
addr16
outsl
cltd
adc
mov
jl
sub
out
jmp
fsubr
inc
jne
push
inc
jae
sbb
lcall
pop
dec
test
jo
aas
mov
jge
cmp
daa
sbb
pop
hlt
test
and
test
add
xor
mov
jge
popf
dec
mov
push
jo
jmp
out
push
pop
pop
pop
pushl
add
addl
sub
cmp
xchg
mov
mov
fists
jge
ja
mov
ret
test
cli
std
pop
mov
sahf
sahf
fwait
pop
sub
push
cmp
sbb
xchg
dec
and
aad
js
sub
sub
lock
cmp
xor
jg
sub
in
jb
mov
in
leave
insb
cmpsl
stos
cld
bound
push
and
sbb
cmp
jmp
cld
jbe
cmp
push
cwtl
inc
lcall
inc
xlat
add
sbb
in
dec
es
sub
jp
notl
addr16
and
sub
mov
stc
js
jg
dec
jp
lods
mov
rcrl
jle
xchg
push
in
pop
rorb
sub
rclb
test
ds
cmpl
or
add
ss
daa
imul
outsb
stos
dec
fsubl
lcall
into
mov
sbb
jns
int3
aad
mov
cwtl
je
repnz
or
lcall
ja
ljmp
cwtl
js
loope
xor
and
dec
call
pop
sub
aas
adc
xchg
cmp
shlb
mov
adcb
mov
jecxz
clc
cmpsb
sbb
or
repz
cmp
aad
test
mulb
dec
jno
out
pop
mov
arpl
adc
outsb
ret
repz
mov
aas
cmp
xchg
fistl
xlat
bound
jmp
cs
icebp
je
push
push
adc
mov
cmp
shrl
insl
mov
mov
scas
in
jmp
jl
push
dec
loop
subb
and
sub
jg
mov
or
hlt
xchg
adcb
jno
stos
cmp
and
insl
mov
pop
insb
cmp
jecxz
sub
xchg
cmp
add
ficomps
sar
mov
or
sub
loop
mov
rorb
pop
mov
mov
or
xchg
sub
scas
mov
out
outsb
cmp
cmpsb
out
inc
les
cmp
in
or
xchg
fmull
jg
mov
push
push
push
daa
insb
mov
mov
xchg
push
pop
mov
or
jb
jo
mov
or
sub
imul
arpl
xchg
jnp
push
and
add
out
popf
mov
jge
clc
xlat
fmuls
mov
dec
mov
xchg
mov
pop
lods
aaa
jmp
andl
add
cmp
add
and
cmp
fucomp
js
sbb
xchg
jl
cmpb
icebp
push
fsubl
mov
add
lods
repnz
negl
dec
mul
sbb
fisubs
jne
mov
movsl
cmpsl
push
stos
into
or
push
dec
and
jle
dec
add
inc
push
mov
test
scas
int
inc
cmpsb
sti
shlb
test
stos
push
int
xlat
in
iret
outsl
notl
xor
sbb
xor
loope
xor
lock
mov
pop
aad
in
decl
outsl
rorb
cmp
pop
je
cmp
push
enter
shll
cli
xorb
ret
and
flds
sub
mov
and
imul
scas
xchg
les
push
dec
loope
cmp
repnz
sub
xor
xchg
add
jg
cmc
mov
jmp
xchg
int3
cmpsl
loopne
mov
lods
pushf
push
imul
and
add
into
jne
daa
or
cmp
add
dec
xchg
inc
pop
cli
push
inc
add
xlat
pop
xor
xlat
sub
mov
and
negb
cmc
fcom
inc
and
jne
stos
insb
push
cmp
sub
xchg
xchg
fadd
ds
lods
icebp
inc
xor
aaa
out
and
cmp
mov
add
test
aaa
push
movsb
mov
sbb
ret
hlt
je
loopne
pop
push
add
push
cmp
insb
stc
shl
mov
jo
ret
xchg
sbbl
lods
mov
mov
into
out
loope
xchg
fwait
xchg
sub
inc
pop
daa
fs
rcrl
mov
and
icebp
in
xchg
mov
dec
and
jle
stos
lods
int
pop
dec
and
adc
add
fimull
mov
aaa
or
and
adc
mov
mov
shrl
mov
or
repnz
jecxz
inc
sub
out
ret
jge
adc
xchg
xor
ret
out
test
mov
add
insl
adcb
shll
jg
popf
push
dec
jae
sub
out
sbb
dec
push
pop
pop
mov
lcall
xchg
lock
fstl
mov
outsl
dec
jle
nop
push
int3
pop
mov
movsl
lods
test
fcmovb
inc
test
lret
xchg
cmp
lea
xchg
add
jmp
inc
or
decb
daa
xor
fdivl
mov
gs
lock
imul
inc
test
sub
mov
rcll
fisttps
push
negb
int3
jne
inc
push
or
out
fsubr
sbb
adc
cmpsb
and
push
ret
in
push
cmpsl
repz
jg
test
xchg
inc
inc
dec
jg
movsl
aam
cmpb
ja
add
push
or
mov
mov
inc
ljmp
icebp
jns
push
sub
add
and
ret
fimuls
dec
mov
leave
pop
sbb
mov
dec
xor
jne
jg
shrb
in
xchg
imulb
dec
pop
or
add
cmc
int3
enter
add
mov
lods
xor
pop
psubusb
mov
mov
ret
mov
mov
stos
cmpsl
mov
out
mov
idivl
in
int3
lea
sar
pushf
cltd
pop
pop
int
and
mov
pop
in
addr16
ret
jns
mov
ror
xchg
push
or
jno
and
push
inc
pop
lods
inc
jp
push
mov
or
aad
xchg
xor
pop
out
aaa
cwtl
xor
ss
jo
push
and
bound
jns
repnz
push
data16
aad
sbb
cmp
sub
mov
or
fsubrl
int
cmp
stos
lods
out
dec
shl
pop
pop
fs
repz
adc
cli
sub
push
push
and
mov
lods
ret
pop
mov
call
pop
xchg
scas
cmc
hlt
xchg
mov
push
rorb
adc
lock
xchg
mov
inc
inc
xor
xchg
inc
cli
jg
outsl
out
and
xchg
push
cmpsl
jae
insl
mov
stc
mov
mov
dec
jb
pushf
lret
insb
fadds
and
jo
xchg
mov
cmp
xchg
enter
adc
dec
clc
call
push
test
jg
jns
inc
xor
mov
and
testl
cld
or
lods
lds
or
pushf
das
arpl
test
clc
mov
pop
push
pushf
add
int
mov
loope
std
jae
dec
pop
mov
or
sub
pop
pop
add
pop
in
mov
subl
icebp
xchg
or
out
pop
or
adc
addb
jns
inc
dec
mov
push
flds
add
cmp
stc
nop
cmpsl
add
cmpsb
insl
lea
fbld
addb
adc
scas
mov
js
fcomip
mov
mov
push
nop
imul
mov
sbb
and
xorb
and
dec
sti
into
pop
jno
sarb
inc
dec
and
rep
pop
fistl
mov
inc
mov
inc
movsl
cltd
xchg
clc
and
sub
push
pop
aad
lahf
mov
mov
mov
cmp
sbb
push
jno
sbb
mov
pop
push
inc
in
and
xor
das
push
inc
subl
xchg
push
ficoms
mov
cmp
and
cmp
mov
xor
call
mov
push
add
lock
lcall
mov
pop
ret
je
loop
cmpsb
inc
loope
scas
jne
push
cltd
addl
out
das
andl
nop
dec
aad
dec
or
xchg
adc
cmp
xor
les
es
popf
pop
push
or
lds
inc
mov
stos
mov
jmp
cmp
les
sub
negb
int
rol
cmpsl
lods
inc
mov
inc
sbb
xchg
js
pop
cltd
mov
bound
pop
push
and
mov
pop
cs
mov
cmpl
in
xchg
inc
mov
shl
pop
das
or
and
scas
xchg
jb
out
or
push
and
fwait
pop
ds
push
inc
shll
xor
adc
pop
pushf
es
xchg
jmp
cld
std
cmpsb
mov
push
jl
imul
sub
popa
cmp
int
ja
sahf
pop
into
loop
aaa
jo
push
and
dec
pop
jbe
out
pop
lret
or
cmp
aas
pop
mov
je
xchg
inc
add
pop
xchg
lea
inc
les
mov
or
sbb
nop
cmp
arpl
stos
hlt
mov
inc
xchg
clc
ja
js
adc
iret
add
int3
out
cmpsb
rcrl
pop
dec
adc
in
mov
fsubl
mov
push
mov
lods
aad
mov
sbbl
rep
cmp
cmp
mov
test
mov
mov
jp
adc
adc
adc
lock
nop
jns
xchg
cmp
cmpsl
mov
popf
adc
mov
add
sahf
icebp
popf
imul
xchg
cmc
mov
lock
jecxz
test
or
jle
pop
stos
iret
pusha
cmp
bound
cmp
mov
iret
mov
inc
xchg
adc
xor
imul
xorl
push
cltd
sub
mov
mov
sbb
and
lods
fbld
or
adc
arpl
leave
out
out
pop
jl
pop
adc
movsb
adc
inc
jnp
imul
cmpsb
and
adc
xchg
pushf
nop
xor
sahf
sbb
fidivl
sub
sub
dec
int
pushf
pop
mov
lcall
insl
and
fdivrl
sbb
adc
dec
in
shrb
xor
bound
sti
arpl
mov
std
mov
xor
mov
push
scas
cmp
insl
outsb
mov
jns
cltd
nop
xchg
or
push
mov
lods
bound
sar
mov
adc
aad
push
jne
inc
fnstcw
in
and
test
ja
fcmove
and
adc
adc
xorps
out
jne
jmp
shl
pop
call
daa
adc
xlat
jl
pushf
sbb
xchg
dec
js
test
loop
out
mov
xor
ret
cmp
testb
insb
inc
sbb
dec
pop
testl
mov
adcl
push
sub
cld
dec
repz
jnp
dec
sub
pop
es
cmp
fs
subb
push
out
gs
daa
or
das
imul
dec
stc
cmp
loop
dec
push
out
jo
adc
in
pop
repnz
insb
fmull
scas
call
dec
mov
popf
std
adc
outsl
push
pop
xchg
lcall
dec
xchg
sbb
mov
pop
sbb
pop
outsl
pop
lds
sub
inc
add
pop
pop
inc
comiss
xor
and
adc
xor
out
pushf
mov
mov
mov
pop
lods
pop
in
movsb
lods
add
and
inc
or
push
pop
lret
mov
stos
sahf
or
push
sub
mov
std
shl
jge
xor
movsl
orb
lret
stos
inc
into
xor
push
jg
add
lret
jge
aaa
addr16
enter
fs
out
adc
jne
ljmp
scas
aam
mov
sbb
es
sbb
sub
push
mov
cli
movsl
adc
pop
popa
adc
cltd
movsb
into
push
out
xorb
lret
addb
icebp
cmp
pop
mov
adc
add
xchg
fwait
lds
jl
rclb
int3
mov
imul
inc
outsl
push
dec
sti
add
mov
inc
adc
push
cmp
push
mov
push
push
nop
test
outsb
orb
push
into
mov
sbb
sbb
cmp
repz
lds
addr16
dec
sarb
popa
xor
imul
popa
add
ja
jnp
xchg
mov
cmpl
mov
sub
add
nop
mov
hlt
loope
aas
cmc
mov
and
std
adcl
rcll
lret
shlb
add
add
and
andl
in
pop
or
xor
lahf
cmpsl
mov
lahf
dec
or
xor
stos
pop
out
addr16
movsb
sbb
jg
das
sub
fwait
out
push
andl
push
add
adc
out
lods
pop
mov
arpl
inc
push
mov
aas
sbb
adc
push
xor
test
add
lods
inc
xchg
cmp
scas
imul
call
mov
inc
rcr
adc
dec
add
jmp
pop
stos
fcomp
jmp
xor
xor
scas
mov
adc
inc
mov
and
jg
shr
hlt
jb
adc
and
adc
jb
fimull
imul
in
xchg
shll
popa
cmp
pop
ds
xor
and
imul
xor
xor
pop
push
js
mov
xchg
cmp
pushf
jb
xchg
into
sub
ss
add
scas
cmp
sbb
jo
jge
imulb
fisubrs
mov
das
dec
mov
or
mov
mov
pop
xchg
dec
fsubrl
push
push
popa
push
adc
jp
mov
loop
add
roll
or
insb
nop
xchg
inc
rdtsc
push
sbb
pop
and
xor
jecxz
aaa
and
in
sbb
inc
cltd
push
xor
mov
xchg
mov
jb
pop
or
sbb
jp
mov
imul
sti
mulb
lods
in
inc
fisttps
xchg
or
jbe
push
outsb
mov
icebp
cmpsb
inc
jmp
out
test
jl
add
movsb
or
inc
push
movsb
int
cmp
jae
cmc
imul
sub
xchg
in
iret
jns
scas
xchg
repnz
cmpsl
fs
or
aaa
adc
adc
push
test
into
mov
js
insl
or
cmp
mov
sbb
hlt
imul
or
repz
lret
inc
pop
sbb
fwait
in
mov
xor
inc
or
lret
adc
push
jae
mov
dec
pushl
js
insl
jecxz
jecxz
adc
rorl
ret
movsb
ds
int3
call
xchg
mov
test
mov
push
jge
jne
fs
test
imul
adc
pop
and
sub
fnsave
int
jbe
repnz
lahf
add
clc
push
ficompl
jg
ss
adc
jo
pop
mov
jmp
bound
inc
dec
jle
cli
je
add
jmp
push
ret
mov
add
pop
mov
stc
roll
nop
pop
dec
inc
mov
pop
popa
or
cmc
and
fs
dec
out
in
and
sub
push
mov
insl
xor
xchg
dec
pop
icebp
ja
stos
sbb
xorb
mov
jae
sub
pop
pop
mov
cmp
in
fimull
dec
jp
inc
xchg
xchg
cmc
lret
rcrl
popa
or
out
add
add
fcoms
aam
push
daa
ja
dec
outsl
shl
sbb
jnp
je
in
cltd
adc
push
sub
lret
arpl
lret
mov
cwtl
xchg
xor
xchg
test
pop
adc
jb
mov
dec
fisubs
xchg
outsl
test
sbb
fildll
repnz
movsl
or
out
fwait
dec
aaa
jp
xchg
adc
adc
sbb
xor
test
mov
loop
xor
push
mov
mov
loopne
or
andb
xorb
aaa
jge
test
dec
adc
dec
sub
jb
pop
mov
mov
mov
fists
sbb
sub
orl
cmp
push
in
lods
xor
sarb
pop
into
push
sub
clc
mov
popf
add
pop
inc
mov
pop
nop
mov
mov
inc
adc
movsl
cmp
mov
ficoms
decl
bound
sub
movsb
mov
data16
push
sarl
xchg
stos
lods
out
mov
cmc
lret
in
and
mov
stos
outsl
sub
test
push
jnp
pop
pusha
pop
stc
mov
dec
sub
rolb
xor
fnsetpm(287
std
into
sti
cmp
mov
mov
jecxz
adc
adc
mov
jge
push
test
xor
cwtl
inc
mov
or
arpl
scas
je
ror
push
test
daa
xchg
int3
mov
add
mov
mov
push
pop
call
dec
add
pop
mov
lret
leave
xchg
dec
stos
sbb
fstpl
inc
and
inc
popa
rclb
or
imull
push
insb
enterw
fwait
loopne
daa
mull
movsb
jno
cmpsb
pop
bound
mov
out
cmpsl
dec
rcrb
bound
cmp
inc
xor
sbb
xchg
or
add
xchg
negl
int3
mov
lds
xchg
xchg
and
cmpsb
jne
cmp
iret
rcr
jge
loope
sub
pop
pop
sahf
daa
loope
aad
mov
fildl
outsb
jmp
sub
int
mov
fs
mov
je
or
or
rcrb
fstpt
imul
out
dec
imull
fildl
xor
jp
arpl
mov
mov
push
mov
adc
scas
pop
jno
adc
adcb
cltd
repnz
adc
ret
xchg
pushf
loopne
movsb
mov
sub
xor
gs
les
sti
test
movsb
mov
scas
pop
mov
jno
push
jb
ror
jb
dec
cmc
cltd
out
out
loopne
movsb
sub
inc
std
fstps
repnz
mov
jnp
add
loop
inc
push
dec
fcmovbe
inc
call
dec
jbe
cmp
mov
sub
lock
int
add
fistpll
sahf
lahf
jecxz
hlt
in
aam
push
imul
enter
push
or
jbe
icebp
andb
test
repnz
push
sbb
les
loope
pop
jmp
insb
pop
iret
rcrb
test
xor
sbb
minps
insl
mov
mov
cltd
pop
mov
adc
jl
mov
int
dec
cmp
xchg
xor
lret
add
mov
add
sbb
loope
cmp
mov
test
or
subl
insl
setne
cmp
jmp
mov
mov
jo
push
fmul
adc
pop
insb
cmp
push
out
xor
mov
jge
leave
xchg
out
push
mov
shlb
sub
push
or
cld
popa
sub
add
gs
aad
lahf
out
stos
into
pop
push
arpl
xor
outsb
lods
mov
jae
pop
lcall
mov
push
xor
fcomip
push
adc
pop
in
inc
outsl
jle
fdivs
xchg
mov
in
cld
dec
stos
xchg
inc
or
out
lods
xor
jecxz
sbb
pop
cmc
fsubs
or
scas
addr16
lcall
movsb
out
loopne
add
pop
mov
pop
arpl
daa
sbb
push
mov
das
add
fistpl
dec
leave
shlb
scas
sub
orl
or
adc
mov
fimuls
cltd
leave
sti
hlt
loop
in
jno
sbb
push
mov
xchg
stos
sahf
dec
lods
in
jne
in
adc
int
pop
out
js
mov
lcall
jno
repz
and
pop
fildll
imul
xor
int3
hlt
xchg
dec
rol
fsubrs
adc
jb
adc
mov
xor
adc
push
mov
xchg
cwtl
sub
push
sbb
pop
lret
negb
addr16
xchg
add
pop
cli
push
push
mov
push
xchg
cwtl
sarl
mov
stc
in
jns
in
push
mov
sti
cltd
mov
sahf
scas
ret
fst
mov
adcl
push
jnp
fwait
ret
inc
nop
mov
mov
gs
jo
popf
mov
cmp
fcmovne
sbb
and
leave
pushf
test
pop
ret
jae
push
int3
or
jle
test
add
cs
mov
leave
sub
ljmp
jmp
roll
sahf
fisubl
add
or
jecxz
add
inc
daa
stc
addr16
push
fwait
xchg
into
cwtl
fidivs
mov
add
test
sbb
mov
aam
adcb
test
dec
add
loop
inc
and
xchg
mov
mov
xchg
leave
jg
jmp
sub
mov
lock
jp
mov
dec
adc
push
adc
cmp
cmpsl
leave
push
pushf
and
dec
popf
inc
adc
xchg
mov
dec
adc
or
fs
fwait
cmp
das
daa
hlt
lods
and
faddl
mov
xlat
pop
xchg
mov
fs
in
mov
xor
xor
cmp
fstps
pop
pushf
pushf
shrd
lret
cmp
insl
xchg
push
inc
xchg
or
dec
push
or
mov
lcall
repz
nop
mov
mov
or
xchg
mov
pop
cmp
clc
or
popf
cmc
xchg
push
andl
nop
arpl
dec
mov
cs
punpckhbw
sub
add
scas
adc
or
jns
lcall
out
out
xor
daa
or
push
pop
ja
sub
dec
mov
sahf
mov
and
mov
fisubrl
push
lret
scas
push
repnz
mov
add
jo
cmpsl
imul
aas
clc
and
divb
in
addb
arpl
mov
sahf
insl
test
or
ret
mov
ljmp
dec
sbbl
mov
xchg
dec
fs
rolb
push
jno
push
sub
in
cwtl
push
test
ja
ss
add
jne
mov
jmp
xor
cmp
adcl
add
into
lock
or
ficompl
rol
sbb
and
aad
dec
test
sub
pop
or
mov
daa
sub
mov
test
sub
mov
pop
dec
shr
les
add
out
out
sub
shlb
shrb
pushf
sub
fadds
inc
cmc
mov
in
subl
movsl
or
clc
jmp
mov
hlt
mov
mov
in
pop
mov
call
xchg
mov
movq
mov
scas
into
lahf
test
sarb
push
shlb
sbb
sbb
mov
loop
add
sbb
popa
lods
lock
add
adcl
cmpl
cmp
push
sub
cmp
push
sbbb
dec
sub
jg
or
loop
xchg
lods
sbb
fstpl
push
flds
pop
leave
add
mov
jno
iret
add
xchg
ret
aad
push
out
jno
mov
fnstcw
pop
xchg
xor
jns
xor
mov
mov
xchg
sbb
inc
xchg
dec
sbb
mov
gs
and
pop
pusha
inc
push
and
push
push
scas
in
sub
imul
xor
fwait
xor
cmp
xor
mov
fsubs
or
iret
mov
pushf
pop
inc
sbb
sbb
xchg
and
push
out
dec
mov
or
cli
ja
push
sub
inc
pop
daa
and
mov
cli
pop
imull
stos
sub
cli
pop
sbb
mov
iret
rcrl
cmp
jge
jl
push
jmp
adc
inc
lcall
dec
jne
int
das
nop
or
sub
and
popf
pusha
ret
inc
add
aaa
mov
inc
xor
sti
sub
or
enter
outsl
jbe
mov
xchg
aad
lcall
out
fisubs
test
bound
add
cmc
mov
in
outsb
dec
aas
inc
mov
addr16
dec
mov
xchg
paddusb
jo
ljmp
cs
mov
and
inc
js
add
test
xor
push
aam
and
lahf
inc
mov
mov
fwait
mov
shll
mov
fbstp
pop
jmp
in
loopne
push
push
mov
push
addl
js
jp
sub
fisttpll
sahf
lcall
cmp
xor
rcpps
push
xor
sbb
es
movsb
push
mov
sub
fs
mov
mov
or
loope
andb
and
mov
mov
sbb
imul
in
add
mov
xor
jns
mov
ss
call
cmp
jp
andl
mov
clc
sbb
shrb
std
adc
or
out
lock
xchg
jne
repz
incb
imul
fsts
adc
das
ja
cmp
inc
mov
xor
and
jg
sub
in
imul
fsubrs
xor
inc
jmp
popl
iret
mov
pop
jno
test
movsl
jp
jle
movsl
test
mov
or
mov
push
and
mov
data16
mov
in
pop
js
jg
std
inc
rolb
aam
clc
sub
jecxz
sarl
mov
sbb
rol
mov
test
imul
push
out
push
jmp
push
jecxz
scas
xchg
sbb
test
mov
xchg
repnz
mov
mov
or
mov
pop
jp
or
mov
mov
mov
lods
fs
addl
xchg
push
adc
lret
fidivl
xlat
stos
outsl
inc
test
sub
jg
mov
out
sub
rcrb
rclb
inc
jno
inc
sub
fimuls
dec
mov
stos
leave
ss
fcompl
sti
and
cmp
into
mov
pop
and
pushf
or
fstpl
push
add
insw
sub
data16
xchg
mov
repnz
cmp
fstp
fisubl
popf
sub
xchg
stos
mov
xlat
ret
cmp
and
outsl
lret
addr16
xor
dec
out
push
fisubl
push
xchg
int
push
movsl
cwtl
jne
inc
push
int3
arpl
test
std
cmp
test
icebp
ficoml
pushf
aam
or
sbb
mov
repz
stos
ret
adc
cmp
mov
xor
dec
loopne
mov
movsb
daa
sbb
or
and
jmp
and
divl
xchg
enter
scas
or
leave
ret
cmp
mov
sbb
test
pop
pop
mov
lret
inc
dec
lds
inc
out
gs
push
shlb
sti
fcoms
pop
inc
inc
jle
dec
sbb
xor
sbb
incb
lcall
lret
mov
dec
inc
aas
push
push
push
and
arpl
push
neg
dec
add
mov
push
jg
cmp
fcomp
jecxz
rclb
mov
cwtl
inc
mov
les
mul
and
mov
and
and
paddd
aam
xor
repnz
mov
push
cwtl
mov
cmp
fnstsw
jp
lcall
subl
dec
sbb
adc
xor
adc
jge
data16
mov
lea
cmp
adc
inc
mov
mov
adc
test
in
dec
stc
pusha
aad
pop
fisttpll
mov
fisttpl
and
xchg
out
mov
call
add
cmp
stc
in
cmp
jmp
fwait
movsb
les
and
orl
mov
mov
icebp
gs
lock
popa
fcompl
pop
and
das
mov
or
mov
cmp
pop
mov
cmpsl
out
cmp
mov
mov
rcrl
push
nop
jg
dec
and
sub
jae
push
scas
sarb
push
jp
cmp
fsub
inc
inc
push
cmc
pop
xchg
jne
cmp
loopne
push
inc
xchg
inc
rolb
movsb
fldl
push
jbe
shrb
jecxz
ror
test
jl
adc
xlat
jg
insb
dec
scas
sahf
pop
test
out
filds
ret
in
inc
or
inc
or
cmp
mov
cmpsb
jp
xchg
popf
dec
mov
test
cmp
outsl
pop
mov
aam
andb
mov
fistpl
cmc
jo
dec
lds
dec
lods
xchg
mov
lcall
test
jbe
dec
xor
cltd
mov
into
fs
test
dec
pushf
or
adc
push
pop
jl
adc
push
jae
jp
push
imul
into
mov
test
sti
loope
loop
sub
sub
push
mov
iret
xchg
or
lock
sub
lods
loop
sbb
test
sub
jecxz
add
fdivrs
mov
add
push
cmpsl
xor
stos
jg
inc
inc
jg
pop
in
outsl
mov
ds
clc
icebp
out
dec
insl
int
jecxz
push
inc
ds
insl
push
mov
xor
in
xchg
dec
mov
lods
fnstcw
cmpsb
add
insl
sub
inc
mov
or
je
cltd
std
lods
dec
dec
hlt
mov
pop
dec
arpl
dec
sti
sub
cwtl
jne
aas
fs
cmp
jge
addr16
outsb
pop
popl
pusha
stos
mov
test
out
std
push
sub
daa
xor
xchg
jo
hlt
inc
mov
inc
push
insl
fldl
cwtl
stos
test
and
stos
adc
das
es
fildl
icebp
nop
inc
testl
jnp
test
pop
lds
lret
mov
mov
test
outsl
sbb
paddd
jnp
push
push
cmp
xor
enter
hlt
pop
adc
pop
cmp
fwait
and
ljmp
enter
xor
test
call
jne
mov
ficomps
sahf
push
and
fisubs
aad
inc
pushf
xchg
pop
or
add
mov
lock
sub
pushf
inc
rolb
roll
movsl
out
loope
fwait
xchg
test
shlb
mov
xchg
testb
jnp
xchg
jmp
cwtl
ret
jnp
jnp
mov
or
adc
mov
scas
lahf
push
inc
and
dec
jl
mov
pushf
dec
and
int
out
inc
lds
test
dec
or
in
scas
sbb
fisubl
cmpsl
pop
test
jb
sti
fst
push
std
das
push
dec
jnp
movsl
adc
clc
pop
lds
fstps
xchg
in
push
ret
xchg
fdivs
cmp
je
sub
je
andb
enter
dec
aaa
fsubp
jne
in
push
inc
xor
iret
add
insb
xor
in
in
dec
mov
sete
xlat
sub
mov
fwait
mov
push
push
loope
adc
pop
xor
push
mov
jb
jmp
jle
dec
pop
xor
xor
ss
fsubr
scas
fs
mov
cmpb
popf
movsl
jnp
mov
cmp
popf
push
pop
push
or
out
js
jg
pop
pop
push
xor
jg
xor
test
jmp
aad
int
rolb
mov
lds
std
pop
cwtl
sti
in
ret
push
xor
hlt
cmpsl
mov
bswap
mov
rorb
mov
jmp
adc
adc
popa
lea
das
xchg
push
wbinvd
dec
sbb
sbb
add
sbb
mov
adc
inc
lret
stos
cmp
or
rolb
or
test
iret
aas
adc
ds
jnp
mov
sub
xchg
inc
popl
jle
pushf
out
pushf
in
push
repnz
and
in
stc
and
pop
push
rcrl
shr
js
arpl
sbb
sbb
pop
and
or
sbb
xor
fbld
sahf
mov
out
xchg
pop
xor
int
gs
mov
les
xchg
xor
xor
sub
inc
inc
mov
rorb
jo
jbe
and
imul
lea
les
push
sbb
lahf
push
cmpsl
imul
jae
fldt
and
icebp
popa
in
test
mov
adc
pop
mov
gs
sub
mov
loop
sahf
mov
int3
jb
mov
int
xorl
rcll
dec
mov
or
fldenv
push
cmp
pop
mov
and
cs
hlt
ret
lahf
cltd
imulb
jno
inc
xchg
or
outsl
ljmp
out
lret
mov
mov
push
dec
cmp
pop
les
mov
pop
mov
pop
arpl
mov
ja
leave
fwait
dec
fwait
xchg
std
stc
pop
dec
cmp
xchg
mov
imul
push
mov
cmpsl
test
push
or
aad
jne
xchg
push
and
hlt
mov
clc
jnp
cs
push
adc
in
ljmp
jbe
mov
dec
aaa
xchg
push
movsl
aad
push
and
insl
sbb
cmp
push
push
lret
stos
push
cmpsl
pop
std
mov
test
cli
into
lods
mov
add
cmp
xchg
jecxz
ss
ret
int
icebp
and
imul
cmpsb
or
mov
adc
dec
adcb
fbstp
je
cmp
jnp
ds
push
push
rcl
mov
cmp
inc
dec
mov
aaa
pop
popa
pushf
fmuls
mov
inc
cmc
ds
je
ret
ds
or
adc
jb
mov
fmul
imul
in
fidivl
mov
insb
and
ret
fisubl
repz
sbb
sub
cli
push
hlt
push
xor
sub
scas
mov
cmovns
sbb
push
xchg
data16
inc
sub
sub
mull
ljmp
pop
rep
push
dec
sub
mov
adcl
call
loopne
in
inc
push
jno
mov
xor
pop
iret
lods
hlt
movsb
pushf
mov
pop
gs
cld
jmp
or
arpl
dec
fbstp
in
xor
es
js
dec
mov
dec
ja
mov
jbe
imul
pop
cli
in
mov
pop
ret
mov
add
clc
push
xchg
sub
and
pop
xchg
rorl
push
inc
xchg
nop
push
sahf
loopne
inc
stos
sti
pusha
dec
sbb
cwtl
decb
adc
and
int
push
icebp
push
adc
push
sub
inc
ja
mov
xlat
adc
inc
pop
dec
sub
nop
mov
loopne,pn
dec
test
sbb
adc
data16
or
mov
es
pop
mov
sbb
sub
fildl
js
xchg
or
fs
add
jecxz
sub
xor
rcrb
shll
sub
insl
mov
je
mov
call
dec
cmpsb
or
jge
pop
sarl
outsb
fs
pop
addr16
call
sbb
dec
xlat
sub
push
push
lcall
inc
andb
and
and
xchg
add
out
pop
mov
int
jb
jns
test
fs
push
jbe
inc
xor
and
int3
sub
mov
lds
lcall
lods
scas
pop
popa
inc
cwtl
les
lds
popf
add
jp
out
or
fbstp
push
sbb
fld
cmp
pop
and
fisubs
inc
xor
push
fidivs
push
std
dec
xchg
cmpsl
or
jle
sti
into
adc
xchg
inc
or
daa
ss
mov
imul
subl
add
add
pushf
sub
rolb
push
mov
jecxz
pop
es
loope
sbb
cwtl
fists
in
imul
fisttpll
or
fs
mov
xchg
adc
aad
push
cld
mov
stos
int3
mov
pop
sar
mov
push
aam
sbb
xor
imul
cwtl
sub
mov
rcl
in
add
inc
insl
das
inc
pusha
mov
and
call
push
gs
dec
lods
repnz
jg
aam
adc
test
in
loopne
sbb
adc
and
jae
ret
inc
out
and
pop
xchg
xchg
in
mov
dec
lock
leave
sub
push
sti
shlb
push
sahf
mov
out
lret
icebp
ret
push
clc
cmp
push
subb
aad
sub
add
mov
pop
or
dec
jne
out
mov
mov
movsl
popa
clc
cmp
dec
xchg
scas
jns
cld
add
push
mov
out
pop
mov
add
mov
mov
jnp
inc
dec
pop
mov
divl
mov
in
jno
arpl
push
mov
pop
sub
dec
movsl
sbb
repz
xchg
cli
arpl
nop
xor
add
xor
data16
dec
xor
imul
push
decl
adc
inc
push
or
jae
mov
mov
jg
add
stos
add
lds
inc
inc
mov
ja
lret
movsl
insl
out
cmp
adc
aam
dec
push
xor
int
scas
rol
xchg
mov
inc
mov
and
mov
out
mov
jg
fsubrs
test
out
add
lahf
pop
fnsave
aas
fwait
jo
movsb
jg
into
fmuls
int
daa
push
xor
mov
iret
fisttps
pop
gs
mov
mov
cmp
out
in
push
scas
or
pushf
int3
aaa
test
cmp
inc
outsl
dec
cmp
insl
fwait
dec
dec
xchg
xchg
push
mov
loopne
mov
inc
xchg
int
and
les
or
lods
lea
jns
xor
call
call
leave
cs
xor
ljmp
in
xchg
shl
add
sbb
fstpt
add
and
into
hlt
and
push
jmp
ds
data16
dec
imul
out
lock
push
xchg
mov
cltd
dec
add
jp
push
xor
sbb
fucomp
push
negl
ljmp
mov
add
xchg
xchg
jnp
ja
jne
push
sub
fstpt
subb
jle
shrl
inc
adc
dec
lret
lcall
xchg
push
pop
push
hlt
xor
test
je
jo
pushf
sbb
test
test
push
xchg
arpl
ds
and
sbb
xchg
clc
inc
adc
iret
out
and
lea
pop
adc
push
testb
in
in
shl
mov
cli
mov
mov
xlat
faddl
fs
xor
sti
adc
aad
xchg
mov
cld
fcmovnb
out
mov
push
mov
push
pop
xor
or
scas
subl
lcall
xchg
cltd
jecxz
aam
jle
pop
iret
sub
stc
lods
sbb
nop
out
and
lahf
and
adc
or
jmp
fsubr
mov
sbb
pop
inc
daa
js
adc
shll
idivl
pop
pop
mov
daa
mov
aam
ret
sarb
sub
sub
call
mov
mov
mov
sbb
icebp
int3
lock
or
sub
lret
ret
or
or
jnp
imul
inc
div
fs
hlt
mov
jg
pop
jmp
cmpsl
icebp
hlt
cmpsl
bound
mov
enter
and
mov
mov
mov
leave
jae
repnz
sub
outsb
out
pop
enter
add
add
mov
data16
dec
jle
sbb
jecxz
jae
pop
cmp
dec
out
xchg
bound
lods
dec
bound
icebp
add
adc
push
mov
idivb
jp
or
xchg
dec
jge
mov
testl
push
stos
cs
outsb
in
pop
inc
add
insb
in
sbb
in
cmp
movsl
mov
shrb
enter
lcall
push
xchg
xlat
pop
sbb
ljmp
rcll
bound
daa
xlat
xlat
xchg
and
int3
or
mov
jb
sbb
mov
test
push
mov
jg
sub
xchg
mov
sub
cmpsb
or
dec
addr16
fdivr
clc
out
adc
les
mov
pop
xchg
push
push
pop
pop
add
sub
adc
lret
repnz
hlt
loop
dec
mov
or
or
mov
pop
pop
xlat
scas
ret
test
xor
hlt
gs
sub
pop
sbb
out
repnz
sti
test
mov
loopne
mov
cmpsb
xor
lods
pop
popf
aas
in
or
iret
lods
push
mov
jmp
add
inc
bound
pop
int3
mov
repz
xchg
dec
insl
pop
ret
cld
fwait
and
jle
cmp
pop
mov
adc
mov
dec
mov
sahf
cmc
mov
jbe
pop
in
jmp
aad
jl
mov
push
fs
or
aas
es
xchg
xchg
inc
jecxz
sbb
cmp
xchg
jnp
ds
les
shrl
aaa
leave
jae
push
fs
sub
sbb
mov
xor
pushf
mov
in
cmp
xor
or
fisttpll
int3
or
mov
dec
cs
adcl
xchg
arpl
mov
dec
stos
imul
sbb
dec
gs
jne
bswap
hlt
fdivrl
push
mov
push
sbb
test
in
ret
pushf
in
mov
lret
xor
aam
out
les
decb
fstpt
fs
mov
fwait
test
mov
stc
cmpsb
jo
push
adc
in
inc
pop
scas
inc
faddl
push
clc
sarl
mov
and
sbb
enter
lods
adc
and
push
pop
jns
je
mov
popa
rcll
sbb
das
mov
sub
xor
cmp
imul
mov
and
jno
fucom
std
mov
loop
daa
insl
das
adc
adc
mov
push
je
pop
fidivl
movq
push
dec
jle
push
add
movsl
outsb
or
mov
mov
ret
add
inc
inc
in
mov
jno
push
sub
test
popa
jp
cmp
add
and
push
jecxz
sbb
cmp
inc
push
push
cli
inc
jne
lods
xchg
shrb
faddl
les
mov
dec
mov
rorl
mov
outsb
mov
inc
jns
mov
mov
cli
inc
mov
loopne
in
mov
push
cmp
jl
fistps
mov
inc
pop
les
ljmp
in
pop
xor
nop
cs
rcrb
inc
mov
push
ds
cmp
ret
mov
jbe
enter
mov
jo
into
push
dec
mov
inc
andb
jl
insb
dec
push
sub
rcrl
cmpsl
push
adc
mov
mov
subb
dec
and
and
ret
fnsave
mov
dec
out
inc
adc
ret
movsl
repz
push
bound
xor
jne
outsl
leave
subl
test
inc
cmpl
adc
into
icebp
xchg
rcrl
imul
mov
xorb
scas
pop
repnz
pop
sti
and
adc
sub
push
cmc
jnp
addr16
adc
add
and
inc
lret
insl
mov
mov
or
lcall
mov
mov
pusha
pop
dec
cmp
shrb
out
nop
adc
fisttpll
addr16
xchg
insb
fscale
ds
loopne
aam
sbb
add
and
pop
adc
sub
out
adc
fldenv
in
or
sbb
enter
adcl
dec
shrb
repz
pusha
pop
mov
call
xchg
clc
push
js
repz
cmpsl
pop
pop
jo
sub
outsl
je
push
popf
mov
ja
leave
loopne
xchg
mov
sub
gs
fwait
jmp
push
xchg
ja
jns
sub
add
lret
dec
ljmp
rorb
in
es
mov
nop
jne
daa
adc
xchg
pusha
sub
clc
cmp
sub
ds
dec
fnsave
fnstsw
sub
lods
stc
rcr
adc
or
xchg
push
add
xor
pushf
push
in
adc
cli
movsb
pop
fnstsw
mov
lcall
push
inc
jle
fwait
into
add
int3
fs
xlat
add
cltd
mov
mov
sbb
and
add
int
fimull
loop
ret
outsl
sbb
xorb
fists
push
stos
push
mov
add
inc
loope
aas
xor
rorb
test
xchg
in
sbb
pcmpgtb
aaa
lret
add
xchg
xchg
and
ljmp
pop
lods
xchg
jl
or
fdivs
add
dec
ror
xchg
mov
out
lea
jl
sti
sub
pop
iret
mov
or
addl
lods
repz
fcoml
iret
shrb
scas
dec
and
dec
lcall
test
outsl
sub
pop
or
or
adc
cld
das
addr16
dec
adc
sbb
xchg
leave
faddl
jb
sbb
lea
loop
je
icebp
popf
lds
pushf
inc
dec
lds
sub
addr16
push
inc
or
xor
cld
and
and
sbb
lods
or
add
mov
ret
jp
mov
into
out
add
jnp
mov
xchg
jae,pn
lods
inc
repnz
add
push
or
push
fistps
sahf
push
cmp
sarl
rcr
pushf
sub
push
jmp
push
clc
out
adc
jne
das
rorw
test
add
aam
loope
cli
cmpsl
jmp
jns
popf
add
in
ret
or
jae
mov
pop
add
adc
and
or
jae
call
mov
dec
dec
mov
test
inc
lret
push
lea
lret
jl
sbb
push
jg
xor
icebp
jbe
mov
gs
pusha
call
xchg
imul
and
cli
pop
repnz
mov
flds
mov
mov
xor
cmc
xchg
int3
xchg
fcmovbe
rcrl
sub
mov
js
sbb
pop
add
ret
fwait
out
dec
jecxz
dec
xor
or
push
in
cli
jecxz
ret
ja
stos
fsubp
sbbl
je
jl
movsb
cmp
lock
fidivs
mov
pop
mov
xor
mov
cld
arpl
test
scas
fsubl
sbb
push
sbb
stos
sbb
xchg
jecxz
dec
cmpsl
shll
add
mov
mov
inc
shr
mov
pop
add
mov
insb
xor
jle
addr16
daa
dec
jae
push
into
arpl
or
mov
das
mov
in
lret
add
rol
repz
and
mov
push
loope
insl
dec
scas
pop
push
pop
jl
push
lods
out
xchg
movsb
filds
push
or
pop
scas
insb
sbb
enter
icebp
scas
aas
xor
adc
jge
fwait
xchg
fisubrs
inc
sbb
adc
cmpsl
into
fmull
cmovge
fldl
inc
cmp
int3
aas
ss
or
jmp
dec
ss
ss
xchg
and
push
movsl
outsb
push
ret
or
ds
mov
jmp
lret
outsl
cmp
mov
ja
pop
dec
xor
rcl
fcoms
and
jmp
xlat
ss
pusha
sahf
in
sub
push
push
mov
pop
fisubrs
push
push
lcall
xor
aas
cmp
ja
and
dec
cwtl
jecxz
jmp
jle
outsb
or
push
jns
ffree
mov
jns
jne
mov
popf
rcr
dec
loope
jle
lods
xorb
push
test
add
iret
mov
jmp
inc
add
sbb
push
cli
inc
mov
jb
pop
mov
scas
mov
ss
and
or
cmp
xchg
and
xor
xchg
push
test
test
into
iret
push
push
aas
lock
lea
sbb
les
imul
sbb
adc
xchg
sub
fwait
mov
pop
cmc
inc
mov
scas
or
cli
mov
in
push
cmc
pop
fstpl
fisubl
addps
inc
and
leave
push
call
or
fcoml
aas
cmp
fistl
lods
aaa
xchg
pushf
and
inc
test
stos
adcb
dec
daa
mov
sahf
xor
cmp
add
pop
push
sarl
clc
cmovno
cld
enter
in
lock
sar
ds
inc
fildl
jno
and
loopne
int3
push
repnz
shrb
mov
dec
leave
xchg
add
jg
dec
sbb
ja
add
mov
data16
orl
shll
int3
dec
or
stc
data16
xchg
push
push
mov
mov
push
jl
jo
inc
pop
xchg
and
cmpsl
leave
enter
and
sbb
mov
add
int
add
pop
negb
stos
push
sti
mov
cli
test
cmpl
out
stc
ja
cmp
cmp
cmp
mov
add
insb
lods
loop
popa
in
or
jl
es
inc
xchg
and
lret
sti
inc
aas
rcrl
mov
jle
hlt
cli
xor
xor
cli
pop
daa
outsl
les
and
add
pop
pop
adc
sbb
xchg
xchg
into
inc
movsb
xchg
jge
mov
lods
shll
add
outsb
mov
sub
jno
or
roll
xchg
icebp
cwtl
jno
fidivrs
pop
xchg
dec
mov
fisubl
mov
and
ja
xchg
or
loope
push
pop
mov
jo
prefetcht0
pop
popa
push
xchg
jecxz
mov
and
xchg
ljmp
loop
in
sub
adc
popa
jp
xor
xlat
mov
rcr
in
rcl
sbb
adc
enter
sbb
jbe
pusha
dec
inc
data16
xchg
test
or
ret
mov
or
sahf
loopne
dec
aas
aad
jl
int3
into
test
inc
inc
jmp
in
ss
loope
mov
dec
cli
stos
int3
sbb
push
insb
pusha
inc
lock
enter
jns
add
movsl
inc
ret
orl
pusha
mov
or
aam
adc
inc
scas
sti
fidivl
cmc
aad
jbe
ja
push
sti
stc
push
repnz
mov
enter
inc
test
aaa
mov
lahf
loope
movsl
mov
out
mov
fstpl
xchg
xchg
test
pushw
loop
dec
push
cmc
movsl
mov
subb
ja
jmp
and
sbb
push
mov
sub
mov
iret
add
testl
xor
lods
lret
cmp
xchg
ja
fcoms
imul
adc
int3
inc
ds
in
js
xchg
aad
sub
inc
adc
dec
test
test
cwtl
jle
js
push
aas
call
mov
cli
and
out
jg
sub
and
mov
call
movsl
mov
jge
cmp
xor
shll
sub
pusha
sbb
inc
add
push
cmp
pop
nop
ljmp
mov
push
lcall
and
in
dec
jmp
xchg
mov
mov
mov
push
outsb
daa
rcl
hlt
lret
or
in
pop
sbb
out
mov
in
dec
add
repnz
lret
jge
adc
xchg
mov
sbb
add
cmp
and
xchg
out
add
mov
mov
xchg
add
cmpsl
dec
repnz
data16
push
mov
jge
cmp
cmc
or
stos
addr16
mov
and
cmpsb
test
clc
jnp
jmp
idiv
mov
lods
xchg
mov
mov
in
ret
out
inc
loope
vprotw
pop
fwait
and
sub
cmpl
loop
mov
std
ret
inc
lock
sbb
jo
je
add
lret
pop
adc
sub
mov
imul
scas
mov
lock
lcall
cmp
dec
mov
enter
out
xchg
mov
mov
jo
scas
push
pop
dec
test
pusha
and
mov
lds
cmp
test
adc
std
xchg
and
sub
xorb
cmp
and
sub
pop
xchg
lahf
sbb
cwtl
ljmp
leave
xchg
into
out
sti
add
les
shrl
popl
xor
jo
clc
mov
push
out
cmp
jmp
push
jg
orl
pop
pop
mov
jb
mov
add
cmp
scas
popf
mov
adc
push
dec
insb
mov
dec
aad
icebp
push
sahf
add
test
out
data16
lret
fbstp
repz
mov
mov
lods
xchg
jg
idivl
mov
pop
jno
push
jmp
outsl
shll
mov
int
out
aaa
or
sti
ja
add
sbb
outsl
mov
inc
shld
push
mov
nop
inc
cltd
shll
data16
mov
jno
xchg
fdivrl
sub
sbb
rcrb
jbe
ljmp
mov
stos
cmpsl
inc
xlat
jbe
jge
jne
ret
add
and
xchg
pop
add
int
out
jb
rclb
mov
jb
mov
aam
adc
fs
push
add
mov
jnp
dec
cmp
lea
mov
mov
adc
cmpb
mov
push
aas
scas
adc
rcrb
out
mov
inc
clc
sub
sti
xchg
adc
and
add
fdivrs
sbb
lock
and
test
add
dec
in
adc
addr16
pop
mov
shl
mov
mov
loope
lea
test
fs
fisttpl
jne
dec
inc
iret
xor
pop
inc
jo
xchg
ret
add
mov
ja
fstpl
mov
insb
pop
jne
cmpsb
sarb
int3
sbb
dec
daa
lret
enter
bound
mov
rcl
fldz
add
or
mov
inc
pop
sbb
cmp
mov
inc
push
pop
into
test
sub
mov
out
call
sti
pop
and
xchg
pmaxub
xchg
ret
adc
cld
adc
fidivrs
sti
pop
add
mov
in
push
fisttps
stc
ret
loop
dec
cmp
popf
jle
sbb
mov
rcr
iretw
dec
sbb
shrb
pop
cmpsl
xor
mov
lret
jb
add
loop
int3
mov
out
lock
shl
icebp
daa
mov
and
addl
dec
fisubrs
ret
dec
bound
int3
or
add
mov
jo
adc
jae
fisubrs
cmp
cmpsb
fdivs
jo
pop
adcl
cmp
xchg
pop
pop
shlb
aas
shl
mov
push
or
in
xchg
fwait
xchg
shlb
sti
add
loopne
fisubl
cmp
push
push
es
daa
add
lods
jb,pn
test
mov
rep
cmp
stc
addr16
mov
inc
dec
dec
sbb
xlat
inc
aaa
cmpsb
jo
lahf
jge
repnz
in
les
xor
testb
in
pop
sbb
imul
rcll
mov
mov
dec
and
daa
rclb
faddp
sarl
roll
adc
out
inc
pop
mov
xchg
dec
popf
jecxz
sub
ja
sti
outsb
or
pop
xchg
icebp
enter
jmp
out
xor
add
int
hlt
adc
lods
and
xor
sbb
jo
insl
icebp
sbb
imul
cmc
sbb
adc
iret
jmp
std
mov
sub
shrb
pop
sahf
sbb
lock
loope
sbb
filds
or
xchg
pop
into
movsl
ja
push
rcrl
pop
iret
mov
jnp
adc
pusha
lock
loop
cs
add
mov
loope
dec
xor
pop
cmc
mov
dec
jne
lea
or
inc
sbb
inc
jno
sbb
xchg
mov
insb
mov
xor
hlt
pop
sbb
cmp
cs
pop
insb
in
mov
pop
adc
call
loop
mov
jo
arpl
jp
xchg
leave
movsb
aaa
leave
shl
or
movl
lock
pop
fs
jo
sbb
call
imul
cld
sbb
test
adc
or
sub
test
jae
pop
popl
je
xchg
jns
imul
sti
add
sbbl
sub
xor
arpl
xchg
cmpsb
pop
push
dec
mov
cmpsb
mov
cmpsl
clc
popf
pushf
incb
xchg
std
sub
jns
dec
pushf
arpl
out
mov
fs
push
cmp
sbb
add
mov
and
test
rorl
sub
mov
xor
dec
test
mov
movsl
dec
stc
stos
or
cwtl
inc
mov
cmp
inc
push
add
aam
stos
add
aad
gs
adc
aad
cmc
inc
xor
sbb
mov
push
test
cld
mov
xor
adc
stos
mov
jp
jmp
mov
and
popa
mov
inc
clc
outsb
aad
out
mov
mov
cmp
mov
stos
test
xchg
fcomp
add
add
fbld
xchg
xor
adc
jns
inc
xchg
xor
cli
add
xchg
std
sbb
ret
rcll
mov
sub
or
inc
push
mov
jecxz
xor
adc
fs
cmpb
sbb
stos
les
xchg
dec
call
push
aad
sub
fsts
sbb
add
push
mov
ret
pop
xor
iret
mov
sbb
add
scas
outsb
daa
sbbl
push
mov
mov
mov
addr16
adc
leave
lea
fsqrt
xor
push
xchg
daa
jmp
jno
js
dec
test
xchg
fmull
dec
jecxz
pop
in
clc
inc
xlat
sbb
in
jb
cmpl
or
nop
sti
sub
sbb
into
test
mov
cmp
lock
mov
ret
cmp
sub
push
adc
xor
cld
iret
int
shl
inc
add
cmpsl
pop
jb
adc
icebp
fsts
cli
jle
cs
add
iret
sub
or
negl
dec
icebp
fcmovnb
adc
pushf
ficoms
js
decl
xlat
lea
jno
xchg
lret
roll
les
xchg
xor
or
popf
sub
inc
inc
jle
jnp
cmp
iret
aaa
loop
mov
push
lods
les
dec
inc
adc
and
nop
pop
in
loope
jno
arpl
mov
mov
mov
loopne
es
ja
sbb
jmp
pop
mov
stos
inc
aam
fsts
cltd
jae
jp
out
stos
pop
ret
fnstsw
cmp
repnz
inc
ljmp
mulb
insl
movsl
inc
mov
leave
jmp
cmpsl
xor
cmc
mov
mov
push
test
xor
aad
shrb
popa
sarb
jge
xchg
sbb
push
mov
rcrl
hlt
pop
fmull
xchg
pop
lea
fmuls
mov
lret
jmp
pop
lds
fucomi
adc
mov
mov
clc
jne
xor
mov
inc
jmp
push
icebp
mov
sahf
xchg
mov
aam
hlt
push
rcrb
cmp
sarl
imul
inc
adc
int
aas
mov
jnp
or
mov
stos
mov
cmp
jbe
pop
pop
inc
ret
lahf
mov
shlb
fwait
sub
mov
xchg
fadd
mov
mov
inc
lea
les
fstps
sub
push
or
test
inc
and
mov
xchg
mov
jae
jp
stos
ret
icebp
nop
inc
inc
inc
je
xchg
mov
jo
stos
add
adc
cld
jmp
cmp
lret
int
pushf
rcl
pop
mov
jle
arpl
sub
int
mov
lea
cs
mov
loop
cmp
pop
mov
jno
sub
mov
fadds
push
imul
repz
push
mov
cmp
jmp
pop
clc
dec
mov
jmp
mov
jle
imul
clc
mov
rcl
leave
call
jo
out
dec
jbe
jle
and
adc
neg
mull
lods
test
scas
decl
cltd
push
sbb
mov
mov
mov
sarl
mov
push
fcompl
adc
cmpsb
lock
pop
dec
lock
cltd
mov
sbb
mov
das
gs
jno
fdivl
fnstcw
mov
xacquire
nop
ficoml
sbb
jle
loopne
in
rorl
daa
mov
test
imull
jae
enter
sub
jmp
jb
or
test
jne
stc
push
xor
lods
or
cwtl
jmp
adc
loope
imul
and
pop
pop
repnz
pop
outsl
lods
inc
into
shrb
pop
pop
mov
cltd
nop
popf
aas
push
imul
mov
mov
xor
repnz
pop
push
or
xchg
xchg
push
sahf
lods
pop
test
imul
sbb
lods
shl
insl
mov
jns
clc
sti
mov
sub
std
es
insb
pop
cmp
adc
lds
push
mov
shrb
xchg
push
mov
ss
das
and
fbstp
lahf
fsubrs
hlt
push
dec
dec
aam
push
das
mov
fwait
mov
add
mov
dec
out
pop
pusha
or
loope
stos
sub
xchg
ljmp
xor
mov
cmp
mov
loope
pop
fcmovnu
imul
pop
data16
dec
lods
mov
and
lahf
cmp
sbb
mov
add
adc
mov
xchg
ret
cmp
das
pop
jecxz
jns
xchg
aas
adc
jmp
dec
outsb
leave
lret
cmp
dec
bound
cmpsb
imul
mov
jo
bound
sub
dec
lock
iret
mov
aas
push
dec
cltd
sbb
dec
xchg
inc
cmpsl
xchg
test
sar
push
mov
mov
add
dec
mov
mov
xchg
stos
sbb
cmc
push
pop
shrb
add
hlt
stc
cmpsb
pop
adc
popl
pushl
lds
sub
arpl
or
jae
xchg
push
and
es
mull
cmp
insb
fadds
adc
movsb
jl
into
and
mov
out
loopne
addr16
xchg
adc
lds
popf
pop
jae
cmpsl
mov
ss
aam
dec
mov
jae
ljmp
sub
mov
stc
ljmp
rclb
outsl
stos
mov
aas
cmp
cs
imul
movsl
scas
jmp
sbb
inc
fbld
jbe
lret
lods
test
and
fstl
xchg
dec
or
mov
adc
lret
pop
mov
ret
cmc
stos
cmp
cmp
xlat
inc
rolb
dec
pop
cmp
push
cmpsl
mov
int3
adc
xchg
cmp
mov
mov
jle
pop
mov
pusha
jmp
les
push
push
push
pop
ljmp
js
pusha
lahf
adc
cmpsl
ja
dec
jno
bound
mov
push
xchg
pusha
xchg
pop
pusha
out
loope
sahf
xorl
xor
add
lea
scas
cmp
out
jb
push
jmp
mov
fldl
or
cs
mov
lods
enter
sti
pop
mov
xor
xchg
cmpsl
std
addr16
jg
insb
jecxz
lret
dec
out
dec
push
mov
mov
xchg
dec
mov
or
sbb
cltd
push
sbb
xchg
mov
adc
push
inc
out
popf
stc
inc
xchg
cmpsb
ds
xchg
xchg
sar
mov
lret
or
pop
mov
cmp
inc
lods
inc
fs
inc
insl
xchg
adc
cmp
adc
mov
cld
sbb
mov
inc
jl
and
xor
push
sbb
mov
es
cmpsl
test
inc
jno
mov
aas
clc
imul
jecxz
push
or
out
and
cmpb
out
mov
int3
test
add
in
lods
jecxz
leave
es
sbb
push
push
icebp
pop
fsubrl
daa
aaa
imull
test
jno
fdivl
rcrb
sub
cli
call
movsl
dec
gs
adc
sti
mov
add
aaa
mov
xchg
int
pop
lods
mov
scas
jne
out
daa
pop
sbb
in
jg
xlat
dec
jne
sub
ljmp
adc
xchg
mov
xchg
pushl
mov
out
ss
jle
or
repz
leave
pop
daa
mov
xchg
jnp
sbb
rcr
adc
push
mov
pop
sub
cmp
push
adc
lahf
jp
mov
adc
inc
jl
push
sbb
mov
pop
inc
jbe
mov
push
fisubrs
shrb
jecxz
subb
imul
add
jo
pusha
xor
xor
rcrb
push
rcrb
or
dec
cmp
negb
mov
test
repnz
fistpl
mov
std
fists
push
jae
adc
fsubp
sub
ficoml
cmp
out
ret
pop
mov
xor
cli
shrl
popa
push
adc
pop
lods
mov
jmp
or
or
jb
jecxz
mov
fsubs
cmp
js
stos
mov
enter
fisttpl
or
cmpsb
mov
jmp
push
dec
mov
add
xchg
out
pop
icebp
push
movsb
dec
mov
data16
pop
and
ljmp
cmp
rcrb
cmp
mov
mov
jo
call
in
incl
mov
sbb
or
addl
aaa
sti
xchg
push
fnstcw
pop
mov
sbb
outsl
cmc
mov
mov
ficoms
add
shl
cmp
pop
outsl
rol
test
push
popa
dec
cmp
daa
lods
and
lds
push
mov
int3
in
sbb
push
lret
sub
jb
test
hlt
cmp
pusha
je
jl
inc
and
xchg
sbb
add
int3
arpl
mov
add
fcompl
cwtl
aam
push
sbb
int3
push
pop
pop
popf
bound
push
push
sbb
mov
mov
jle
fs
and
push
cld
cmpl
jnp
or
imul
sub
add
nop
outsb
addr16
or
cmc
scas
std
outsl
xchg
arpl
outsl
mov
out
jae
cmp
cmp
imul
in
or
jmp
test
aaa
sub
psllw
sub
add
adcb
imul
jbe
push
movsb
iret
jne
adcb
jmp
leave
inc
or
jns
add
nop
scas
dec
add
mov
int
test
mov
or
cmp
xor
xchg
jbe
xchg
sbbb
fs
ficomps
push
push
push
insl
mov
lea
inc
xchg
inc
movsb
adc
insl
add
add
cmpsb
sbb
push
jle
in
stos
mov
cltd
cli
cwtd
push
shr
add
mov
iret
mov
mov
enter
aas
xchg
cmp
cld
shrb
pushf
cmc
fmull
js
pop
movsl
cmp
mov
sub
xor
cmc
jmp
add
into
xchg
mov
pop
xor
push
in
aaa
sahf
mov
mov
and
dec
arpl
aaa
dec
lods
inc
std
ds
cmp
cwtl
cld
popa
mov
jecxz
je
jge
pop
adc
cs
daa
out
dec
add
mul
jp
insb
int3
mov
xchg
stos
mov
sbb
addr16
pusha
aam
xchg
jg
lods
aas
loop
in
cmc
aad
and
dec
sub
pop
cmp
pop
cli
std
iret
data16
mov
loop
inc
stos
leave
and
shl
daa
loope
push
mov
mov
jb
jo
repz
sub
mov
inc
dec
inc
mov
push
gs
ljmp
stos
or
dec
inc
lcall
enter
subb
push
das
pushw
test
sbb
test
cli
iret
and
adc
hlt
jno
jns
add
sbb
jmp
adc
fcmove
pop
mov
xor
fdivrs
sbb
cmp
mov
mov
dec
push
mov
stos
dec
mov
xlat
test
xorl
xor
std
iret
leave
dec
mov
fsubrp
and
sub
pop
scas
lods
loope
aam
stos
xor
cmc
enter
xchg
loopne
and
das
add
imul
add
and
scas
out
in
sub
push
popa
mov
pop
fwait
push
outsl
mov
mov
jmp
ljmp
add
fiaddl
inc
pop
lret
cmp
into
pop
mov
pop
jmp
xor
xchg
adc
ret
lahf
xor
xchg
enter
sbb
add
mov
dec
mov
cmp
js
pop
idivl
sbb
stos
sbb
add
push
or
cmpsb
in
popfw
xlat
jl
loop
pop
call
or
dec
aas
and
add
mov
in
cwtl
dec
lds
adc
inc
sbb
aaa
push
out
jp
dec
xchg
movsl
cmp
sub
pop
adc
scas
jecxz
jno
negl
mov
fisttpll
pop
pop
movsb
mov
adc
ljmp
lcall
into
mov
fimuls
add
fsubrl
jo
inc
outsb
mov
out
mov
insl
mov
ds
cmp
xchg
pop
cltd
pop
repnz
jl
mov
dec
sti
pop
mov
push
push
gs
or
dec
repnz
int
repz
out
sbb
pop
sahf
mov
ret
pop
mov
outsl
xor
dec
test
mov
xchg
ds
push
cs
push
adc
or
aam
notb
mov
call
or
sbb
cltd
push
jg
fsubs
or
testl
mov
stos
adc
stc
int3
mov
sbb
mov
arpl
test
insb
mov
pop
mov
enter
mov
xchg
sbb
mov
pop
or
lahf
push
mov
dec
stc
add
and
xchg
rorb
fdivrl
or
sub
or
andb
adc
sub
cmpsb
mov
sub
outsl
mov
pop
pop
xchg
scas
je
jp
xor
add
jno
movsl
mov
adc
and
clc
mov
das
pop
mov
pandn
sarb
in
mov
stos
push
outsb
lock
jo
js
xchg
xchg
aam
mov
adc
jmp
push
insb
arpl
test
mov
lahf
pop
mov
fisubl
mov
mov
sbbl
add
stc
into
int
sbb
adc
or
loope
jcxz
sub
cmp
and
cli
pop
jbe
aas
jns
push
aas
rcll
std
jbe
jge
popf
ss
and
lods
aad
adc
mov
outsb
xor
ffreep
cmpsl
adc
add
xor
sbb
inc
mov
mov
es
sbb
rcrb
pop
dec
adc
vmread
inc
lock
jge
mov
mov
push
cmp
dec
xchg
or
dec
jb
loope
lods
inc
mov
or
cmpb
mov
fucomi
lret
add
inc
wrmsr
mov
mov
jbe
movsb
cld
cmp
iret
mov
inc
push
arpl
push
pop
mov
sub
dec
sub
outsl
test
ljmpw
in
jnp
addr16
dec
rclb
stos
cli
movsb
sbb
imul
xor
jo
xor
popf
mov
jp
xor
pop
out
aaa
xor
imul
repz
cmp
push
outsl
pushf
cli
xchg
aas
adc
inc
sub
jno
pop
stos
pop
test
ret
repz
jns
or
inc
xor
mov
lret
imul
fwait
enter
rcrl
sub
loopne
sub
je
clc
cmp
mov
push
mov
je
ret
sub
movups
mov
mov
pop
add
xor
cmp
nop
pop
jno
icebp
loopne
loop
shlb
cmp
aam
inc
mov
mov
call
in
push
test
shll
gs
scas
mov
call
mov
mov
mov
xchg
fldt
movsl
shr
mov
sbb
fisubrl
fdivrs
out
fidivs
push
cli
pop
jo
test
jl
cmc
cmp
mov
inc
mov
shll
push
mov
ja
fs
nop
mov
cmpsb
icebp
mov
lods
out
cmp
sti
mov
cmp
or
dec
insb
cmp
or
push
adc
mov
xor
adc
jmp
mov
pop
out
jecxz
popa
and
call
cltd
push
or
inc
pop
imul
and
mov
inc
insb
jns
imul
and
add
push
mov
arpl
and
lcall
adc
jmp
xchg
int3
loope
int3
mov
dec
pop
push
das
adc
stos
mov
mov
push
fwait
subb
cwtl
mov
les
int3
out
jmp
lea
inc
add
test
push
sub
lds
xchg
orb
sub
fnstsw
sar
add
lea
inc
repz
mov
mov
shr
leave
repz
xchg
cmpsb
sbb
mov
popa
in
lret
lock
cmp
arpl
mov
sti
dec
sbb
aad
outsl
je
adcb
cmp
sbb
add
sub
fistpll
lret
cmpsl
and
xchg
xchg
arpl
std
inc
mul
mov
outsl
out
mov
push
fbstp
call
add
sbb
pop
dec
mov
pushf
mov
iret
xchg
fs
int
pop
inc
adc
xchg
inc
mov
ja
in
imul
mov
in
scas
insb
ror
movsl
shrb
jae
ret
ljmp
arpl
or
adc
test
fistpl
out
jp
lret
repz
outsb
test
or
jg
outsb
mov
lcall
mov
jb
out
rcrl
xchg
or
imul
cwtl
jne
jns
hlt
stos
bound
pop
rclb
cwtl
sbb
mov
insl
sub
sbb
and
cs
jle
mov
xchg
lcall
jae
dec
inc
adc
and
sub
ret
push
jno
sub
aad
arpl
sbb
es
pop
push
mov
pop
inc
sub
imul
dec
scas
inc
outsb
mov
outsb
jae
dec
pop
mov
int3
addr16
mov
xchg
test
jne
mov
pop
mov
inc
sub
out
mov
or
pop
outsl
mov
adc
mov
js
sbbb
push
add
imul
mov
nop
fwait
icebp
fbstp
dec
or
mov
push
pushf
aas
mov
xlat
adc
fsubl
mov
cwtl
and
scas
xchg
mov
inc
or
sub
test
stc
xchg
cmp
adc
sub
mov
or
pop
arpl
test
mov
scas
out
inc
out
inc
adc
jns
std
cmp
loopne
cs
fs
xor
jmp
mov
xor
int3
or
aam
push
pusha
arpl
cmp
lods
mov
jge
scas
jmp
mov
and
push
in
stc
stc
je
frstor
outsb
inc
into
arpl
into
test
sbb
adc
mov
jmp
jg
adc
ljmp
or
xor
in
pusha
pushf
sti
cmp
in
mov
mov
dec
or
sub
pop
stos
push
jb
out
outsb
jb
push
xor
popf
xor
cltd
adc
int3
mov
cmp
loopne
push
cmp
out
mov
lods
add
xchg
shlb
mov
sbb
push
sbb
insb
jp
sub
lods
pusha
pusha
lahf
inc
cli
int
push
fcom
cmc
inc
cltd
pop
mov
add
jge
rcl
ja
xor
stc
mov
ret
inc
dec
sbb
xor
outsl
rcr
sub
push
enter
cltd
xlat
push
sub
ljmp
push
ja
movsl
mov
jo
push
aaa
pop
sub
and
push
cmp
dec
jb
outsb
aam
sub
and
pop
stos
xchg
pop
out
lock
mov
ret
jp
out
jmp
fwait
in
aad
outsl
mov
bound
hlt
jbe
jl
cmp
sub
mov
or
xchg
mov
bound
ljmp
hlt
fidivs
sub
cmp
out
jne
int3
adc
nop
andl
push
cmc
shlb
das
addr16
cli
dec
pop
scas
nop
in
lea
cmp
inc
jb
push
sbb
aaa
shrl
icebp
sub
adc
sub
sti
mov
jp
sub
dec
mov
sub
repnz
dec
lea
pop
cmp
xor
dec
loope
xlat
xchg
sub
lea
ss
js
cld
push
add
inc
adc
sbb
pop
lret
jg
jp
cmp
fwait
push
xor
cltd
sub
insb
dec
sbb
xchg
add
add
sbb
push
lret
push
aas
cltd
jmp
out
out
mov
sbb
adcl
mov
sub
lods
ljmp
stos
pusha
fiaddl
stos
xor
pxor
lret
subl
mov
call
jb
xchg
nop
ret
cmc
xor
pop
or
iret
std
mov
mov
pusha
pop
mov
int
push
xor
test
sub
es
lods
jge
xor
add
lcall
mov
das
loopne
idivl
jne
mov
jnp
test
shl
mov
cmpsl
lods
bound
icebp
inc
icebp
or
out
cmp
idivl
hlt
nop
mov
mov
out
out
mov
incb
cmpsb
push
cmp
stos
cld
into
dec
cmp
jne
ljmp
lock
nop
or
imul
imul
fsts
sbb
and
fstpl
jl
arpl
jmp
fldcw
pop
push
iret
outsb
adc
push
mov
dec
sbb
mov
mov
cmpsb
lcall
or
mov
addl
scas
pop
int3
sub
cli
enter
mov
mov
and
fstl
jg
and
xchg
xor
iret
sbb
mov
sbb
cmc
test
jb
pop
push
les
addr16
pop
insb
jl
inc
das
mov
add
xchg
mov
inc
lret
jge
and
mov
bound
cmc
cmpsb
push
and
xchg
mov
pop
pushf
push
inc
pusha
pop
and
push
xchg
cmpsl
lret
repz
push
notb
ds
mov
lahf
push
adc
sub
push
xlat
xchg
dec
or
lahf
shrl
repz
mov
sub
dec
mov
mov
pop
pushf
nop
mov
mov
add
push
subl
mov
pop
add
mov
nop
aas
sbb
mov
cwtl
jo
adc
xor
xor
lret
into
into
xchg
pop
xchg
inc
imul
fisttpl
jl
cmp
dec
repz
xchg
adc
movsl
add
out
mov
test
and
sbb
inc
fildll
or
cld
and
jns
push
xlat
lea
repz
or
loopne
sbb
inc
int3
jnp
test
dec
les
cmpsb
jge
popa
mov
cmpsb
sbb
inc
pop
ror
rcr
push
xor
mov
push
shlb
mov
fiaddl
call
lret
aaa
jge
ret
ja
ret
cmpb
in
leave
fadd
out
jge
jecxz
mov
int
testb
cs
mov
mov
pop
xor
mov
out
leave
pop
fistpll
sbb
and
stc
fs
shl
sbb
fs
aad
aad
std
mov
pop
cltd
test
lret
repnz
push
stc
push
jg
or
push
ljmp
pusha
outsb
xor
xor
je
cs
nop
test
movsl
arpl
push
jl
dec
movsl
mov
cmp
sub
cmp
shlb
pop
into
stos
arpl
cwtl
pusha
aam
add
movsb
push
xor
insb
mov
pop
insb
add
push
add
xchg
add
in
dec
imul
mov
dec
sbb
sbb
outsl
scas
dec
fisubl
and
cmp
gs
jecxz
mov
into
jp
mov
mov
imul
pop
pop
lods
insl
dec
sub
divl
sbb
adc
mov
aaa
inc
pop
lcall
xchg
xchg
popf
popf
mov
in
add
lret
push
mov
xchg
enter
inc
hlt
lret
jno
mov
rcr
add
mov
sbb
cs
jg
xchg
mov
lods
insl
or
cmp
jge
test
cli
mov
fidivs
dec
lock
lods
lret
inc
add
addr16
fldl
mov
and
jecxz
push
mov
fcmove
sbb
adcb
mov
test
adc
xor
int3
jo
sbb
ss
mov
ja
jecxz
dec
fsts
scas
in
mov
cmpsl
mov
mov
fisttpll
add
xchg
jbe
push
mov
sub
std
sub
push
sbb
stos
sahf
fsts
xlat
xor
icebp
lods
jg
imul
rdtsc
push
mov
in
in
dec
jo
das
stos
jp
mov
outsl
mov
pop
lods
enter
push
jb
pusha
lea
or
or
sub
mov
insl
xchg
lea
loop
mov
cmp
push
adcb
insl
jl
sbb
mov
inc
fwait
xchg
fldcw
out
int3
or
je
dec
in
sbb
mov
jb
stos
mov
rorl
mov
add
and
adc
addr16
icebp
out
sbb
or
in
call
sbb
gs
loopne
adc
insl
jns
cmp
mov
pushf
icebp
mov
fadds
call
xchg
jl
rcrb
or
mov
scas
dec
and
xor
push
adc
pop
out
lret
shlb
or
sbb
push
lds
adcb
jno
fidivs
xor
and
pop
lods
jnp
push
jp
fs
sub
cmpsl
cli
mov
mov
inc
mov
xor
adc
roll
fmul
xchg
cmpl
lahf
mov
fwait
xchg
cwtl
aad
movsb
das
test
sbb
and
ds
rcrl
mov
push
and
jbe
or
ss
dec
lret
xchg
push
mov
fstl
fwait
mov
into
add
daa
ret
ja
cmpl
ret
loopne
jo
dec
rcrl
pop
sbb
xor
jnp
dec
pop
jno
int
out
mov
or
mov
pop
mov
mov
jbe
test
mov
and
ss
mov
push
idivb
in
sub
jmp
adc
pop
lea
movsl
push
xor
addr16
jbe
sbb
fnstsw
in
push
popf
mov
adc
add
pop
jb
sbb
mov
add
test
mov
inc
xchg
mov
repnz
and
mov
cld
rcr
inc
xchg
cs
mov
mov
test
mov
add
push
nop
pop
pop
push
ud2
into
dec
nop
not
aaa
mov
out
loopne
rol
stos
mov
shll
cmp
insl
jb
push
jle
jo
rcrl
push
adc
rcrb
push
shrb
leave
cmp
loope
push
gs
mov
mov
xor
xchg
mov
aad
mov
and
push
outsb
and
xor
inc
mov
mov
jbe
hlt
mov
adc
dec
pop
movsl
fcomps
gs
call
and
movsl
add
dec
fldcw
mov
mov
test
push
mov
sbb
out
aas
int
dec
fcomp
out
pusha
insb
outsb
mov
cwtl
inc
enter
mov
sub
out
xchg
fimull
xchg
mov
int3
cltd
rcl
add
rcrl
fstpl
xlat
addr16
push
imul
ljmp
jae
iret
dec
mov
mov
insl
xchg
add
sub
add
call
push
dec
dec
jmp
shrb
dec
and
push
jnp
js
addb
clc
das
jecxz
pusha
test
sub
jp
std
into
jns
mov
mov
pop
or
in
scas
dec
xchg
xchg
push
addr16
imul
jg
dec
fisubrs
lcall
fcoml
test
rolb
pop
in
stos
subb
decb
cmpl
scas
inc
jmp
xorl
fadd
cmp
mov
pop
xor
imul
cmpsl
gs
test
inc
jl
pop
cmc
pop
jo
fists
sbb
pshufw
mov
sbb
mov
in
mov
rcrb
data16
lcall
xor
lahf
icebp
sbb
inc
fdivrs
in
mov
mov
sahf
pop
sti
icebp
mov
or
jecxz
std
cmpl
mov
push
lea
fidivrl
cli
imul
subb
push
int
mov
push
movsb
add
dec
inc
adc
sar
or
enter
push
jbe
push
mov
xor
test
imul
clc
ds
icebp
cmp
les
jne
iret
sarb
push
sub
icebp
add
iret
rclb
repz
mov
nop
pop
stos
sub
sub
push
movsb
test
and
jo
insb
inc
sbb
jnp
loop
cs
jg
mov
mov
fisttpll
xchg
fs
or
adc
in
or
dec
iret
mov
scas
mov
fsubrs
lret
out
xor
mov
mov
sub
jle
cmpsl
pusha
js
xor
ds
push
dec
aaa
pop
inc
xchg
movsb
cmpsl
mov
and
cmpsl
lds
jl
loopne
or
call
int3
pop
mov
mov
or
mov
out
lea
cli
clc
repnz
jle
mov
gs
and
jo
dec
xor
loopne
and
repnz
test
pop
sub
jmp
std
add
add
xlat
outsl
lahf
popa
mov
pop
popa
jbe
mov
jp
andl
or
loopne
rorb
insb
repz
sti
aad
inc
scas
dec
add
pop
test
xor
pop
add
icebp
mov
int
jbe
fcompl
adc
dec
adc
bnd
cmpsb
mov
loope
scas
xor
ror
inc
fs
adc
jmp
xor
jae
xor
sbb
das
xchg
jo
movsb
movsb
add
mov
dec
movsb
leave
mov
cli
dec
pop
xor
jl
loope
sub
enter
arpl
jae
outsl
popf
inc
adc
fs
fstps
cld
icebp
fcomp
sar
inc
xchg
scas
adc
imul
mov
testb
or
test
jg
xchg
fsts
cs
subl
sti
mov
dec
mov
cmc
int
int3
icebp
pusha
data16
addr16
shl
xchg
data16
push
mov
in
fwait
outsl
push
jnp
push
sahf
jmp
jp
inc
imul
dec
pushf
enter
dec
data16
inc
mov
insl
push
push
test
sar
data16
dec
sar
adc
outsb
push
adc
je
mov
fnstcw
mov
aas
imul
and
xor
out
es
or
rcrl
dec
mov
push
jg
out
mov
jmp
add
test
adc
aam
jae
scas
inc
push
dec
cltd
in
lods
mov
add
jmp
and
jnp
repnz
jp
xchg
shll
inc
sub
imul
add
sbb
rorb
testl
push
and
scas
sub
popa
push
mov
xor
and
ret
mov
sahf
add
jecxz
ja,pn
jle
stos
xlat
sub
and
push
mov
adc
repnz
cmp
dec
mov
repz
xchg
fdiv
dec
ds
jecxz
push
and
mov
xchg
push
and
stos
inc
dec
mov
lods
sahf
not
add
jno
jmp
mov
cltd
movlps
lret
in
popa
pop
mov
pop
ljmp
mov
and
jno
xchg
mov
lahf
xor
jp
mov
dec
cmc
mov
shld
stos
and
cmp
and
sub
push
cmp
pop
scas
ror
loope
inc
ret
inc
movl
in
pushf
jno
stos
jns
pop
mov
or
hlt
mov
dec
sub
cmp
xchg
aad
stos
lods
shll
push
insb
adc
push
std
lods
js
jnp
xchg
sbb
outsl
in
and
mov
add
pop
xchg
xchg
fistpl
cmpsl
pusha
add
mov
and
shrb
mov
jle
cmpl
ret
cmp
sbb
mov
pop
lods
adc
lcall
fsub
lret
push
lret
jbe
push
iret
repnz
push
sub
test
pop
ljmp
lret
stc
pop
pop
mov
xchg
jne
lret
daa
dec
xchg
lcall
mov
fldl
jmp
lock
mov
sub
fs
dec
lods
jg
sub
xchg
inc
mov
loope
arpl
cmpsb
dec
in
mov
jne
mov
lret
stos
cli
ja
sbb
cmpsl
int3
sub
movsb
dec
cmp
dec
inc
sbb
fwait
cmp
pop
cltd
ss
pushf
sub
fwait
arpl
test
jns
test
add
lods
cld
lret
mov
push
mov
dec
push
mov
out
xchg
add
cmp
mov
cld
pop
cmp
cmp
stos
mov
cmpsl
pop
movsl
lock
xor
push
or
stos
arpl
cli
xchg
adc
dec
addr16
cmp
out
call
pop
shrb
daa
ss
inc
xchg
or
or
cmp
es
push
popf
cmpsl
cmp
stos
popa
notb
insb
xor
outsb
mov
out
cmp
jmp
lcall
xchg
leave
ret
xchg
fistpl
inc
and
and
cli
or
and
call
out
into
push
push
test
mov
sub
enter
rol
fstpt
cmp
incl
call
inc
pop
push
shl
push
mov
xchg
js
fs
call
or
xor
cli
mov
sbb
clc
mov
mov
xchg
mov
mov
xchg
jae
in
lret
mov
fwait
sbb
out
lock
xchg
sti
test
in
imul
lock
lea
xchg
or
mov
xor
mov
add
and
aam
imul
in
jge
leave
in
jns
xor
aam
push
mov
jae
mov
add
cmpxchg
aam
mov
xor
sbb
xchg
adc
push
into
imul
pushf
dec
pushf
add
insl
dec
ds
jecxz
push
pusha
outsb
daa
and
out
imul
outsl
pop
sbb
das
loopne
push
mov
jbe
dec
pushf
rorb
subl
pop
push
add
test
or
and
ds
xor
and
in
inc
cmc
je
rorl
and
pop
cmpsb
ljmp
out
addr16
fdivrp
bound
iret
pusha
stc
roll
xchg
das
fs
or
mov
push
jmp
inc
fdivl
sti
and
push
xor
fs
leave
mov
das
jb
jg
hlt
ljmp
scas
adc
call
jmp
xor
push
jecxz
rcrb
cmp
gs
js
add
fwait
movsb
mov
mov
jle
mov
scas
fidivrl
adc
daa
cmp
cmpsb
pop
jb
mov
in
xor
mov
jb
shl
psubsw
divb
imul
dec
das
aaa
mov
adc
or
sbb
lret
jp
sub
aaa
sbb
stos
cli
cmp
or
xchg
xchg
sahf
lahf
ljmp
lcall
jne
add
addr16
mov
daa
and
mov
jg
and
xorl
stc
insl
push
jge
dec
inc
aaa
push
out
add
rorw
test
dec
sub
cmp
daa
insb
pop
push
shl
add
sub
scas
cli
scas
push
xchg
out
push
and
pop
mov
cs
push
and
xlat
gs
cmp
cs
fcoml
fs
pop
lods
sub
roll
mov
sbbl
xor
sub
mov
and
not
mov
movl
into
std
adc
push
scas
arpl
jnp
por
mov
xchg
out
test
xchg
sbb
jle
pop
stos
cmpl
inc
inc
and
add
push
and
movsb
cmpsl
int3
fnsave
pop
dec
and
lcall
push
pushf
jnp
xlat
sbb
mov
xchg
xor
xor
mov
cmpsl
inc
les
mov
shll
aaa
in
jle
fimuls
fiaddl
sbb
sbb
push
jnp
xor
or
repnz
and
and
xlat
in
jl
enter
fidivrs
loope
mov
jnp
fsubrl
and
adc
jo
pop
xor
jno
lods
pusha
push
pop
jmp
or
dec
or
push
insl
adc
in
pop
jbe
jmp
cmp
shrl
std
in
in
fwait
std
push
hlt
push
pop
jae
sub
popf
xchg
clc
jae
arpl
fwait
dec
xchg
mov
test
xchg
jno
test
cmpsl
dec
arpl
cmp
hlt
es
mov
pop
imul
pushf
xor
inc
aas
jmp
jecxz
inc
mov
repnz
push
pop
cmp
shr
test
ret
shll
loope
add
jl
jl
into
gs
imul
or
das
int
sub
cltd
outsb
jge
ret
aas
or
outsl
dec
mov
mov
push
int
mov
xchg
andb
xor
lock
rclb
es
imul
mov
xor
pop
testb
lcall
mov
sahf
dec
sbb
sub
insl
outsb
ljmp
mov
mov
loopne
in
pop
cmpsl
in
xor
jns
in
dec
mov
inc
xor
cwtl
imul
lret
and
lods
lods
jae
lods
sbb
xlat
fldl
or
lds
xor
test
into
cwtl
out
dec
inc
xchg
stc
sub
iret
jbe
aas
push
inc
jle
push
enter
imul
pop
push
loope
jo
addr16
jae
pop
bound
or
inc
scas
test
fnstcw
mov
bound
jmp
or
push
sti
add
lods
push
adc
mov
stc
push
pop
push
and
jcxz
gs
mov
push
cmpsl
mov
dec
roll
cmp
push
inc
xchg
push
out
sub
jbe
fdivs
inc
xor
add
nop
jle
xchg
adc
mov
test
icebp
in
xor
xchg
xchg
adc
orb
push
loopne
jbe
mov
jno
nop
mov
mov
cmp
add
push
stos
scas
dec
jp
mov
ret
or
xchg
gs
xchg
out
mov
nop
sahf
add
insb
dec
fs
scas
int
xchg
daa
cmc
cltd
in
ror
push
out
jmp
test
cmp
mov
push
movsl
add
sub
jmp
sub
xor
fsubl
insl
arpl
dec
mov
dec
outsl
mov
push
ljmp
xchg
rcll
xchg
aam
mov
mov
sbb
push
es
push
testb
pop
sbbl
lea
lods
cltd
movsl
cli
mov
aad
cli
adc
sahf
mov
dec
fdivr
inc
inc
xor
and
sub
mov
out
mov
dec
sbb
out
dec
cmpsl
xchg
xor
pop
ja
xchg
inc
imul
cmpsb
mov
stos
jl
jae
in
push
cs
test
jns
jmp
jns
mov
ret
pop
gs
xchg
push
into
or
xchg
pop
jae
add
cmp
lret
xor
pop
das
sbb
and
xchg
mov
xchg
inc
out
aad
mov
stos
fisubrs
inc
sub
loopne
pusha
stc
mov
inc
adc
dec
xchg
mov
fs
pop
es
or
aad
call
push
loop
xchg
pusha
xor
xor
mov
incb
cli
fdivr
jecxz
sbb
push
icebp
aad
push
aam
sarl
dec
sub
imul
pop
xor
fucom
lret
cmp
pushf
movsb
ljmp
jmp
xchg
or
push
ljmp
lret
adc
decl
mov
lock
push
push
xchg
pop
adc
mov
inc
mov
negb
testb
pop
lds
data16
pop
fs
xchg
sub
mov
jle
aam
sub
outsb
inc
jb
add
std
dec
sti
and
cmp
inc
cs
pop
dec
rcrl
lret
cmpsl
jl
mov
add
push
sbb
fisubrs
divl
loope
and
sub
or
mov
cmp
mov
add
push
push
sarb
in
insb
mov
es
jae
cltd
and
cwtl
jb
fidivl
xchg
fisubs
les
shlb
mov
fisttpll
mov
cwtl
scas
enter
xchg
imul
xchg
sbb
stos
enter
inc
add
andb
movsb
xchg
cmpsl
repnz
mov
inc
lods
fwait
push
lret
movsl
dec
push
stos
sub
xor
mov
mov
or
out
jnp
movsl
jl
cmc
adc
pop
jno
pop
add
pop
xchg
mov
int3
in
clc
lods
cltd
aad
in
or
cwtl
pushf
fmull
and
mov
add
fisubl
mov
mov
jle
xchg
orb
popf
lcall
loop
ret
mov
push
std
jnp
mov
mov
adc
push
sbb
inc
push
and
aas
cmc
xchg
mov
xor
jno
push
movsl
pop
ret
cmpsb
sarb
cltd
decl
shrb
jmp
mov
movsl
inc
pop
rcrb
xlat
adc
pop
push
ds
dec
xchg
xchg
push
sete
jno
loop
mov
shrl
insl
insb
cli
lods
stc
xor
test
das
xchg
fwait
lea
into
xchg
clc
fdivs
xchg
jecxz
ja
mov
gs
out
stos
xor
int3
pop
repnz
dec
shlb
push
mov
sti
mov
adc
arpl
ja
lret
pop
jmp
loop
imul
cld
mov
pop
pop
inc
pop
pop
gs
fcmovnbe
aad
imul
and
flds
in
lea
dec
loopne
and
inc
mov
mov
test
outsl
xlat
mov
mov
pop
or
int
test
test
cli
xchg
outsl
fs
sti
mov
inc
or
sub
jl
adc
pop
mov
jle
cltd
jmp
scas
cwtl
inc
ss
pop
data16
enter
loope
pushf
xor
mov
mov
and
jg
bound
addr16
lock
lahf
inc
inc
pop
xchg
inc
push
pop
mov
and
dec
xor
in
jp
out
sub
and
xchg
pop
mov
mulb
enter
gs
mov
add
mov
test
loopne
pop
jp
in
aaa
es
pop
jae
jge
sub
imul
lds
pop
pop
xchg
out
inc
sets
jo
and
cwtl
push
lods
push
repz
pop
add
loope
cmp
loope
inc
scas
inc
or
inc
pop
inc
divb
xchg
lcall
mov
shll
test
js
cmpsl
shlb
mov
ffreep
add
cli
test
jecxz
inc
test
adc
loopne
dec
or
mov
mov
incl
xor
aaa
loope
cmp
incl
xchg
pop
mov
clc
jle
inc
fidivs
jb
mov
inc
push
pop
adc
xor
dec
jp
push
sbb
js
movsl
aam
push
icebp
or
imul
cmp
lcall
stos
inc
dec
adc
xchg
dec
mov
jno
pop
mov
dec
fwait
xor
jno
jmp
adc
add
fwait
test
sub
shll
xchg
test
pop
lcall
js
out
jl
lret
xor
negb
lahf
pop
push
leave
dec
pop
jle
int3
cld
adc
bound
in
inc
push
cld
imul
pop
mov
dec
lret
pop
fs
sahf
test
lret
mov
sbb
adc
jmp
sbb
push
sub
pop
or
pusha
jmp
fisubrs
test
and
xchg
insl
lods
mov
push
pop
mov
out
and
fisubrs
xchg
outsb
shrb
movsb
rcl
mov
stc
xor
das
ficoml
sub
push
dec
fadds
xor
out
mov
and
outsl
or
and
scas
xchg
dec
dec
maskmovq
divl
xor
push
fstpl
ret
aam
xor
push
jge
popf
sbb
mov
xchg
xchg
mov
jbe
cmp
jl
push
sub
push
adcl
mov
ds
enter
rclb
popf
xchg
sbbl
mov
cmp
fdiv
lret
dec
cmp
push
mov
or
add
out
xchg
pop
add
dec
cmp
clc
je
or
mov
icebp
adcl
jmp
xchg
rorb
outsb
loope
lea
pop
mov
cmp
inc
xchg
enter
rcll
lret
shl
scas
add
popa
hlt
mov
dec
in
jle
outsb
xor
add
sub
sbb
push
pop
in
or
push
dec
xchg
fucomi
cmp
outsb
subl
fcoms
mov
lret
cmpl
lock
inc
jle
movsb
xchg
or
xchg
mov
lods
dec
add
jl
sbb
shl
mov
sti
xchg
cmp
jge
dec
lds
test
out
and
mov
dec
out
sbb
cld
insb
adc
lret
rclb
mov
push
or
out
test
cmpsb
divb
sbb
in
jb
inc
xchg
movsb
sbb
and
aad
and
sbb
push
jl
scas
stos
clc
divb
xor
dec
cltd
add
test
inc
cmpsl
fs
xor
sti
pop
dec
jns
fistpll
aaa
xor
mov
sub
in
dec
adc
jmp
sub
pop
adc
push
add
sub
mov
lahf
mov
fmul
xchg
rorl
pusha
sbb
ja
notl
cmp
jnp
sbb
gs
mov
pop
push
push
iret
lods
andb
test
jge
into
mov
fisubl
sbb
call
inc
push
inc
sub
iret
leave
into
arpl
pop
mov
fiadds
jg
sub
add
mov
jae
cmp
dec
cli
sbb
adc
push
insl
mov
fs
sub
aas
push
aas
jge
mov
mov
mov
inc
xchg
fldenv
idivl
fdivrs
mov
pop
cmpsb
or
push
mov
xchg
xchg
add
out
cmp
ljmp
jecxz
adc
int
jne
dec
sub
lahf
mov
enter
pop
call
movsb
mov
out
and
push
out
add
jecxz
inc
les
mov
inc
pop
jp
dec
inc
leave
repz
dec
or
jle
dec
inc
repz
jl
dec
ja
fistps
jg
dec
aaa
cmp
cmpsl
cmp
lods
push
sub
xchg
or
cmpsb
mov
stc
cmp
cs
sub
je
dec
xchg
out
movsl
adc
xchg
inc
push
aaa
out
popa
xchg
mov
dec
pushf
jmp
enter
test
xor
push
pop
test
add
test
jp
pop
daa
inc
inc
push
xchg
sub
jnp
sub
sub
leave
out
leave
mov
rorl
lock
mov
jae
cltd
pop
push
cmp
inc
mov
xchg
dec
xor
and
aad
roll
fidivrs
fcomp
sub
aam
jecxz
sbb
popf
push
xchg
cli
aaa
leave
jmp
mov
or
in
scas
pop
mov
cmp
mov
sbb
loop
push
lcall
sbb
in
xchg
inc
cmp
and
ss
add
aas
test
pop
or
inc
call
mov
mov
push
pop
dec
jno
adc
aad
es
jge
xchg
test
push
sub
or
divb
xor
add
mov
les
cmp
pop
popa
hlt
dec
and
lods
inc
pop
add
inc
jmp
inc
addr16
cmp
push
sbb
push
cmpsl
jne
sub
pop
fmulp
pop
dec
aad
sti
inc
insb
cmp
sub
mov
mov
and
sub
jle
sub
jo
cltd
dec
mov
add
and
idivb
in
cmpsb
dec
push
mov
fsubr
jle
mov
aam
mov
lcall
in
rcrb
cmp
fstpl
repnz
sub
and
hlt
stc
jo
scas
in
jae
inc
addr16
xchg
daa
lods
inc
sub
mov
push
and
jns
or
push
dec
xor
mov
jg
sub
pop
dec
das
and
or
adc
inc
shll
mov
xchg
popa
negl
imul
std
pop
decl
pop
das
cmp
pop
icebp
push
xorb
dec
stos
dec
ficompl
daa
xor
sahf
ss
iret
jmp
cs
cltd
ljmp
movl
jg,pt
xor
xchg
adc
mov
rcrl
stos
int3
ret
ds
mov
cmp
adc
and
mov
lds
cmp
movb
dec
sbb
sbb
sbb
ret
jmp
mov
psllq
mov
scas
mov
incl
cmpsb
mov
jl
dec
dec
insb
sbb
repz
shll
push
xchg
jnp
leave
shlb
loopne
mov
xchg
in
fisubs
or
jl
and
xlat
aas
inc
mov
lahf
and
dec
cmc
mov
xchg
std
dec
mov
imul
jmp
and
mov
shlb
inc
add
cs
pop
ds
pop
orps
mov
arpl
or
sahf
loope
leave
outsb
jge
mov
dec
sub
arpl
js
pop
cld
fwait
sub
repz
inc
mov
ficomps
test
push
stos
and
ret
in
ljmp
cmp
lahf
fldt
add
fdivrs
inc
mov
pop
jne
test
sub
ret
hlt
inc
xchg
rorb
ja
cmc
or
ja
int
addr16
mov
mov
mov
push
xor
jno
mov
jmp
das
mov
xor
ds
leave
xchg
ret
cmp
iret
loopne
and
jmp
adc
sbb
mov
mov
and
xor
xor
lcall
daa
jae
loope
std
fsubr
push
sbb
ror
xor
ds
stc
rcr
ds
adcb
into
mov
mov
icebp
add
push
movsl
and
mov
jp
and
gs
mov
push
or
gs
clc
clc
lock
lret
mov
mov
mov
sarb
es
mov
and
inc
jne
pop
enter
cmp
leave
cmpsb
pushf
cli
push
fistpl
jp
mov
and
ret
in
sub
cltd
or
insb
or
push
jmp
add
mov
and
sbb
or
fsubs
mov
pop
push
dec
ret
push
xchg
push
cmp
inc
fbld
testb
movsb
mov
push
sub
ss
mov
repnz
mov
push
addr16
push
test
or
mov
mov
in
xchg
cmp
movsl
fistpll
es
outsl
sbbb
mov
mov
xor
or
ljmp
mov
xor
imul
cmp
pop
gs
jo
mov
movsb
repnz
aam
addr16
mov
and
push
dec
cmp
fwait
sbb
mov
insb
mov
sbb
push
imul
jnp
das
dec
or
adc
inc
loopne
sbb
add
add
gs
lcall
xor
dec
lcall
loope
adc
pop
sar
div
jno
in
es
xor
and
loop
jmp
push
lods
sub
cmp
pop
fsubrs
xchg
cmpsb
mov
in
xchg
add
pushf
icebp
jno
mov
pop
pop
push
mov
lret
aad
sahf
xor
pop
lods
pusha
movsl
into
jns
lea
decl
push
cmp
lret
fistps
ljmp
cld
push
fidivrs
lea
adc
xor
in
lods
loopne
mov
push
lret
shl
mov
lcall
jbe
sbb
or
ficompl
fmul
enter
pop
ficompl
mov
aas
sbb
and
add
mov
sar
and
push
sub
mov
dec
dec
cli
loopne
xchg
test
mov
or
jecxz
add
push
pop
lret
xor
jmp
jmp
je
jecxz
pop
inc
mov
stos
push
mov
sbb
lea
fildll
lahf
out
icebp
push
fstps
add
int3
popa
lods
loop
or
xor
subl
jl
sti
mov
movsl
mov
mov
lahf
push
xchg
mov
shlb
test
stos
and
mov
pushf
cmc
dec
rcrb
inc
je
mov
bound
clc
rol
fs
ret
mov
sbb
push
mov
sbb
mov
mov
xchg
inc
jle
je
aad
mov
nop
rolb
mov
mov
cld
das
jb
push
pop
mov
not
add
test
mov
in
pop
and
pusha
dec
lret
push
sarl
jl
mov
loop
bound
push
dec
xlat
pushf
es
mov
mov
or
mov
or
rclb
fistpll
and
ds
dec
push
leave
sti
push
aas
cmp
call
flds
arpl
adc
cmpsl
lods
push
adc
inc
mov
in
in
outsb
mov
shll
pushf
push
sub
add
imul
dec
mov
testb
pop
mov
mov
mov
adc
fstl
jne
repnz
fldt
sub
adc
cmpsl
adc
sub
in
in
sbb
xchg
mov
out
jae
xlat
push
inc
push
dec
out
inc
push
inc
test
stos
mov
in
mov
jecxz
jbe
push
dec
mov
adc
jnp
cld
mov
pop
in
sub
inc
pop
add
and
inc
imul
pop
ret
pusha
mov
cmp
inc
ljmp
push
xchg
loop
mov
into
adc
push
aad
aad
sub
add
cmpsb
or
push
lock
std
jecxz
pop
adc
stos
inc
in
repnz
repnz
pop
xchg
lahf
or
rcl
inc
or
je
into
cld
adc
add
lds
jge
and
leave
lea
in
jl
sbb
loopne
fwait
pop
xchg
cmp
nop
xchg
adc
pop
fdivs
fsubrs
sahf
rolb
pushf
add
or
inc
adc
pop
pop
jae
adc
lahf
call
arpl
scas
jecxz
or
jns
or
lret
icebp
cmpsb
mov
out
lock
mov
pop
aam
inc
cmpb
mov
imul
fs
xchg
sub
mul
stos
std
add
inc
jne
dec
ljmp
add
cmc
xchg
inc
add
pop
into
add
je
xchg
dec
jae
mov
ret
push
ja
sbb
or
sbb
mov
adc
and
jb
dec
jne
jbe
mov
dec
push
xor
push
pop
mov
ret
push
dec
xchg
adc
loop
jae
imul
add
xchg
sbb
lcall
jnp
and
sub
inc
dec
and
mov
inc
cwtl
sbbl
lods
xlat
xchg
idivl
xchg
pop
mov
sub
lds
push
cmpsb
pop
outsl
in
push
int
lea
cmp
in
rorl
mov
mov
outsb
mov
mov
ret
jle
in
or
jns
aaa
sbb
xchg
lret
push
cmpsb
call
push
mov
fcoml
pop
jb
inc
xlat
cmpsb
cmpsb
sbb
cld
lret
sub
subl
out
inc
adc
sahf
inc
leave
cmp
push
loopne
cs
and
xchg
hlt
sbb
push
pop
ljmp
repnz
xchg
or
clc
movsl
mov
add
mov
pusha
insb
sbb
push
adc
fsubrl
jo
jns
and
arpl
cmp
dec
enter
pop
jecxz
fisubrl
pop
xor
xchg
mov
jnp
jae
sbb
lods
fwait
pop
fstps
xchg
sbb
pop
icebp
cmp
xchg
sub
sbb
in
test
jns
and
cmp
cmp
or
mov
lods
push
cmpsb
dec
jmp
das
mov
pop
or
bnd
mov
push
lods
into
rcll
stos
mov
mov
in
pop
jg
dec
andb
lods
mov
pop
test
mov
dec
pop
into
dec
jmp
pop
adcl
rcll
rol
fmuls
mov
fwait
push
push
push
sbb
pop
sub
fwait
popf
xor
jecxz
mov
popf
rcrb
idivb
sbb
xchg
les
gs
bound
imul
cmpsl
mov
ja
push
into
mov
pop
movsl
lds
xchg
and
push
mov
inc
and
pushf
pop
fdivr
cmp
test
stos
push
mov
mov
sub
add
icebp
push
xchg
xchg
loop
aad
fdivs
push
push
out
inc
gs
push
aad
mov
ja
pushf
fmulp
rorl
or
pop
mov
xchg
inc
cmp
or
bound
xor
mov
gs
add
int3
push
jecxz
xchg
sub
repnz
add
icebp
scas
loopne
xchg
sub
dec
lea
lea
inc
stos
lret
rep
arpl
mov
sahf
les
inc
enter
mov
jmp
loopne
cmp
mov
adc
popf
mov
and
clc
inc
adc
movsb
testl
je
mov
loop
push
jns
sbb
in
sti
push
out
mov
insl
gs
out
push
jg
je
inc
gs
pmullw
inc
jl
pushl
outsl
stos
mull
and
gs
xchg
shlb
or
sahf
jno
ja
jge
jmp
lea
sbb
pop
sarl
testl
mov
vmread
insl
mov
data16
mov
lea
mov
cltd
popf
push
jne
push
and
cld
cmp
sbb
out
ds
dec
mov
adc
jmp
js
and
cmp
sub
dec
adcb
sub
nop
mov
pop
in
adc
inc
jp
adcb
pushf
adc
adc
and
fisubl
and
mov
stos
xchg
jns
push
push
sub
xchg
lret
dec
sbb
scas
lea
sbb
push
add
lods
aad
pop
mov
fcomps
loop
and
add
lods
push
inc
rcrb
sub
cs
mov
movhlps
outsl
sti
imul
fisubrs
xor
push
cltd
fwait
sbb
jmp
pop
divb
inc
push
test
stos
sahf
movsl
divl
in
out
and
push
mov
popa
aas
pop
scas
inc
lock
pop
std
inc
imul
arpl
inc
mov
dec
xchg
je
adc
xlat
ret
orl
jecxz
or
lock
aam
aas
and
scas
insl
enter
and
sbb
xchg
mov
jle
enter
fistpl
xchg
jo
insb
sarb
pop
bswap
imul
loopne
or
mov
xchg
test
dec
mov
shl
enter
push
ljmp
pandn
aaa
xchg
push
cmp
inc
sbb
aad
dec
negl
popf
jnp
push
gs
sti
mov
cmp
movsb
adcb
movsl
pushf
mov
sub
or
cs
sub
lods
dec
add
mov
cltd
mov
cmpsb
daa
push
sbb
adc
adc
xlat
mov
and
jns
push
mov
loope
jns
pop
lods
dec
pop
sbb
nop
xor
xchg
loop
lock
das
pop
adc
lods
mov
jmp
pop
pop
enter
xchg
outsb
ljmp
sbb
xor
int
or
data16
pop
sbb
psraw
xor
pop
push
mov
inc
xor
js
in
inc
dec
les
add
sbb
cmp
mov
movsb
popa
jge
popa
mov
cmpsl
mov
testb
gs
roll
lcall
leave
xor
dec
leave
movsb
clc
lret
add
loopne
and
xor
cltd
push
mov
ljmp
mov
lret
push
add
mov
test
jae
pop
scas
xchg
xchg
jmp
xchg
inc
imul
add
inc
std
adcb
or
inc
mov
dec
fisubs
inc
repz
in
xlat
ret
jmp
leave
fildll
mov
data16
xorb
push
mov
inc
shlb
adc
cmp
push
and
ss
cmp
sbb
addl
pop
imul
rorb
testl
xchg
lret
imul
mov
mov
in
cli
push
inc
mov
int3
pop
fnstcw
stos
push
in
bound
stc
lds
mov
lcall
push
in
or
fdivrp
in
mov
aaa
es
stc
or
pusha
aam
sub
pop
insb
inc
inc
fdivrp
imul
xor
mov
ret
jae
in
push
aaa
cmc
cmp
outsl
push
inc
leave
mov
outsl
cmp
sub
mov
inc
popf
mov
xchg
inc
dec
sub
push
xlat
pop
lods
leave
xchg
jle
cli
or
in
rcrb
xor
test
sub
scas
pop
pop
cli
sti
xchg
cmp
cmp
cmpsl
jge
cltd
sub
xchg
push
mov
test
fcomp
push
adcl
roll
push
dec
sub
js
cmp
or
sbb
push
mull
jge
in
sti
push
push
rcrb
pop
into
xor
fisubl
push
lss
and
es
rcrb
mov
or
jecxz
push
dec
and
gs
out
test
lods
mov
mov
pop
lret
sub
lret
stos
gs
pusha
or
lods
addr16
sbb
std
cwtl
sub
pop
and
inc
clc
bound
lods
xorb
adc
cmpl
pushf
insl
jecxz
test
lret
hlt
shl
push
ss
pop
adc
pop
adc
std
xor
flds
mov
pop
lds
add
stos
int
data16
and
fsubs
adc
sub
iret
add
mov
pushf
mov
mov
outsl
hlt
mov
dec
out
stos
lcall
xchg
add
mov
jecxz
push
xor
and
shlb
push
test
cmc
scas
sbb
sbb
or
cwtl
xor
fwait
add
ja,pn
adc
dec
rolb
movlps
into
rolb
je
lret
or
dec
pop
mov
jg
dec
inc
scas
das
gs
xor
out
js
inc
fs
stos
inc
shrl
out
jmp
mov
outsb
dec
xor
add
les
scas
fisubrl
cmp
mov
fcoml
xchg
jns
aam
movb
inc
mov
loop
daa
ljmp
cmpsb
repnz
push
movsl
sti
inc
jp
add
movsl
rol
mov
sub
or
int3
je
mov
flds
sub
mov
dec
sub
into
stos
icebp
addr16
adc
clc
into
inc
jnp
dec
test
adc
subb
movsb
imulb
divb
in
nop
mov
mov
jge
mov
ljmp
test
aam
cmpsl
ret
in
lret
pop
aad
fisubrl
js
add
in
mov
sub
xchg
add
jnp
je
cwtl
mov
movq
pushf
cmp
mov
push
fiadds
mov
jns
idiv
repz
mov
inc
subb
outsb
sbb
lret
rolb
jns
lods
inc
int
jle
cmp
xlat
cwtl
mov
xor
mov
dec
stc
scas
adc
movsl
insb
lea
jb
inc
xor
ds
jns
cs
cmpsb
sbb
fsts
inc
lret
dec
add
or
cmc
imul
imul
sub
jae
inc
pop
popf
in
cmp
testb
test
push
cmpsb
jg
push
xchg
outsb
xlat
out
rcrb
lds
stc
dec
add
daa
dec
add
cmp
or
rcr
out
es
lahf
inc
fcmovu
out
push
or
jg
adc
mov
push
dec
xchg
fdivp
fdivrp
dec
fcoml
enter
test
je
gs
fwait
xchg
arpl
jne
mov
adc
mov
das
mov
insl
rcrb
fsubrs
add
mov
xor
popa
lahf
daa
sbb
pop
lds
fistl
ljmp
mov
jle
das
sub
jl
push
pop
sbb
pushf
movsb
lea
and
mov
mov
loope
jl
in
ljmp
or
mov
aam
pop
mov
push
out
and
ds
loope
add
pop
cmpsl
pop
xor
xor
fldenv
ss
mov
cmp
inc
hlt
ja
cmpsl
enter
lcall
sub
outsl
insb
push
mov
inc
loope
pop
jo
jae
call
and
hlt
xchg
xchg
xchg
dec
xchg
ja
cmpsl
pop
add
ljmp
sbb
mov
adc
hlt
mov
sbb
jno
xor
mov
loope
sti
fs
lret
call
fsts
sahf
mov
lods
xchg
mov
arpl
mov
enter
jg
fisubrs
jno
xor
cmpsl
mov
or
pusha
aam
sub
xlat
push
lods
lahf
fstps
push
lcall
lods
pushf
xchg
int
aam
cmpsb
pop
mov
fidivs
out
shrl
les
xchg
jmp
or
add
sahf
adc
mov
add
pop
sub
push
test
popl
push
fsub
cld
popf
add
inc
push
jmp
ljmp
add
into
std
sbb
xchg
lods
out
sub
jg
mov
mov
lods
dec
mov
sti
ret
add
jae
fldl
cmp
inc
xor
xchg
and
push
mov
lahf
mov
out
sbb
dec
movsb
lret
stos
cld
adcb
mov
out
cld
movsl
or
mov
mov
pop
scas
cmp
outsl
pop
mov
jbe
ja
mov
insb
clc
scas
daa
mov
insb
jg
sbb
fnstsw
mov
cmpsb
pop
fs
jecxz
push
cmpsl
shrb
xor
test
or
icebp
xor
jg
lret
xchg
inc
xchg
xor
loope
mov
movsb
pop
dec
or
cs
das
pop
mov
aaa
xor
jbe
push
and
mov
or
mov
add
leave
loop
into
aam
or
inc
xor
loop
and
stos
cmpsb
cmp
js
cltd
les
imul
test
lock
fisubl
int3
sub
sub
ss
mov
xor
sahf
push
lds
fdivrl
outsl
scas
jb
ja
push
daa
inc
sbb
callw
push
fsub
xchg
xchg
xchg
test
pop
cmp
clc
push
and
cwtl
ret
mov
xchg
mov
dec
lcall
scas
jmp
push
jae
xor
repz
test
xor
add
cli
sahf
mov
fcompl
cld
jle
jbe
cmp
mov
mov
nop
cmpsb
push
jb
sbb
xchg
and
ret
and
mov
push
cmp
hlt
testb
xchg
or
jecxz
ret
pusha
cld
ret
test
ret
popa
ljmp
sub
roll
test
push
test
jmp
and
outsl
jecxz
xchg
cmp
imul
pop
adc
inc
cmp
sub
movsb
leave
ret
mov
jmp
xor
jp
xchg
loop
adc
stos
xchg
sahf
mov
fidivl
jge
jmp
pop
imul
add
rcl
adc
add
mov
pop
dec
mov
push
cmc
sbb
test
push
push
xor
ljmp
xchg
mov
jge
flds
sbb
xchg
xor
xchg
mov
divl
dec
imul
scas
mov
rclb
mov
addr16
fldl2e
dec
mov
jge
repz
pop
mov
xor
data16
je
push
cmpsb
jne
out
stc
mov
add
arpl
add
fcomps
dec
cld
aaa
sarl
dec
mov
int3
fisubl
lahf
jbe
xchg
dec
rorl
add
repnz
adc
adc
neg
test
mov
xchg
shrb
or
mov
add
push
push
sarl
imul
jp
movsb
mov
jo
js
out
dec
or
in
mov
lret
or
js
sub
in
in
into
push
out
test
sbb
addl
mov
mov
xchg
dec
jecxz
dec
repnz
or
pop
outsl
cmc
pusha
add
insb
loopne
loopne
lods
add
pushf
pop
fldlg2
mov
out
clc
mov
jb
mov
add
add
adc
movl
push
mov
fucomi
adc
pop
adc
ss
lcall
sub
inc
or
inc
sub
mov
jmp
insb
jbe
fisttpl
jg
fnstenv
rolb
cmp
cmc
sub
bnd
scas
jo
jno
es
call
xor
roll
mov
fnstenv
jno
pushf
jecxz
add
rolb
and
xchg
push
xor
xchg
push
sbb
sbb
and
mov
call
sbb
test
mov
ficomps
les
fsubrl
mov
mov
adc
push
or
add
mov
jl
shrl
fcmovnb
test
call
fucomp
mov
cld
js
mov
js
or
js
add
pop
mov
jo
push
lods
push
sbb
dec
scas
aaa
or
sbb
cwtl
ud2
push
or
ja
pop
ljmp
gs
lods
pushf
dec
xor
scas
pshufw
imul
pop
xorb
pusha
out
or
xor
jp
push
rcrb
push
push
pop
mov
out
aad
dec
dec
mov
push
or
ja
cli
icebp
into
popf
shr
mov
mov
fs
cmp
dec
or
rol
push
xchg
rolb
bound
or
mov
inc
imul
push
and
push
mov
mov
sti
inc
insl
push
je
xor
fidivrl
dec
dec
jg
adc
std
pusha
lahf
test
jg
lcall
insl
shl
sbb
mov
scas
sahf
ljmp
cltd
and
pop
push
sub
add
mov
and
movsl
dec
pop
xor
hlt
push
mov
sbb
or
dec
movsl
push
pop
cmp
sub
fistpll
iret
inc
das
xchg
ja
xchg
popa
stos
mov
cs
testb
xchg
push
jl
inc
or
loop
lret
imul
xchg
cs
enter
xor
adc
jg
cmp
xor
js
pop
cmpsb
arpl
cmpl
adc
jbe
add
mov
subps
xchg
adc
les
pop
push
jno
sbb
ret
xor
aaa
mov
or
jmp
into
lret
call
ljmp
std
mov
shr
lret
out
das
lds
push
in
push
xchg
outsl
pop
ljmp
int
das
in
cmp
cmp
mov
cmc
xchg
inc
inc
fmull
pop
leavew
rorl
cmp
mov
cli
cmp
stos
movsb
cltd
inc
inc
cmc
jge
sbb
fwait
lret
test
ret
rol
mov
cmpsb
lret
jmp
stos
mov
ss
popf
adc
pop
insl
push
sti
popa
push
into
jnp
int
push
inc
es
or
data16
xchg
cld
orl
lods
jne
insb
dec
mov
or
aaa
out
lret
cmp
fildl
icebp
lods
fdivrs
xchg
mov
mov
leave
aam
mov
cld
cmpsl
xor
and
loope
movl
stos
and
data16
cmp
push
dec
fadds
fs
imul
and
mov
and
scas
mov
jns
rol
ret
or
push
and
cmc
push
call
stc
push
jnp
sub
and
cli
jns
or
enter
add
and
jo
lcall
lods
dec
xor
mov
sti
mov
into
jns
test
jns
push
xor
jp
bound
outsb
sbb
pop
add
daa
xchg
adc
pop
and
outsb
pop
lret
and
dec
xor
shlb
fmuls
push
inc
push
dec
mov
cmpsl
loope
mov
test
lret
int
push
push
dec
addl
pop
out
enter
paddb
lret
push
push
add
xlat
aam
cld
mov
adc
or
sub
lods
clc
add
popa
lret
push
rorb
enter
inc
mov
call
imul
push
incb
frstor
add
jmp
fsts
sti
or
xchg
ss
loopne
sbb
stc
xor
lds
inc
shll
cli
es
nop
sbb
das
dec
sub
adc
cmpsl
cmp
mov
sub
gs
gs
sub
adc
cmp
inc
add
mov
das
sbb
xor
enter
fidivrs
mov
mov
aas
lcall
rcr
xchg
inc
mov
mov
aas
aam
push
inc
imul
out
out
push
lcall
dec
test
test
inc
push
fsts
fdivl
int
inc
cmc
push
xchg
mov
daa
xlat
or
mov
inc
jb
mov
addr16
fisttpl
add
shrl
in
cmc
sub
xor
sti
lcall
out
pusha
push
stc
std
jb
push
insl
imul
push
in
push
jg
cmp
xchg
push
mov
sub
in
call
inc
pop
cs
out
dec
in
mov
lahf
cwtl
ja
adc
mov
pop
sub
sbb
test
mov
imul
sub
cmp
lods
add
mov
and
hlt
rorl
movsb
dec
out
repnz
mov
or
and
cwtl
test
sbb
in
inc
lahf
dec
fdivl
jmp
ds
jbe
push
subl
fsubrs
mov
in
pop
push
cmp
mov
and
sbb
sub
add
ja
mov
cmp
jo
fcompl
dec
mov
add
fbld
aas
jmp
addr16
sbb
add
enter
cmc
or
in
lods
jno
push
dec
out
push
insl
shrb
call
ret
test
inc
xchg
add
clc
and
aaa
mov
test
cmp
sbb
fs
insl
ds
add
xchg
mov
push
sbb
out
mov
mov
sub
clc
mov
adc
es
push
shl
dec
adc
jns
flds
fwait
imul
cmpsb
shlb
push
fwait
jmp
adc
in
sub
push
in
add
xchg
test
cmpsl
ja
mov
pop
imul
mov
cmp
adc
pop
movsl
loope
pop
jno
pushf
sbb
jae
movsb
idivl
mov
fld
add
scas
loope
testl
fistpll
add
shlb
sbb
mov
sti
and
xor
bound
into
adc
push
xorl
ss
jle
pop
ror
mov
fistpl
outsb
adc
pop
and
sbb
and
mov
pop
insl
es
mov
push
pop
loope
stos
outsl
leave
inc
xlat
dec
ret
fdivrs
dec
xor
addl
test
enter
repnz
sahf
inc
push
loope
sahf
adc
dec
add
cmpsb
adc
outsb
mov
arpl
cmp
aad
sub
idivb
orb
push
inc
lahf
pusha
stc
ret
sti
dec
mov
out
aas
cli
dec
push
sub
pop
daa
cli
mov
pop
f2xm1
adc
sub
aaa
xchg
add
jge
call
mov
clc
fcmovnb
or
arpl
lahf
rclb
das
adc
les
cmp
and
xor
cld
loope
out
punpcklwd
cmp
cmc
clc
mov
inc
sbb
inc
cmp
jbe
jb
fs
out
xchg
imul
fsubrs
dec
lods
xor
pop
or
dec
sbb
push
jne
dec
xor
das
jecxz
mov
into
or
daa
roll
in
and
repnz
pop
and
out
gs
stos
repnz
sbb
push
jmp
push
dec
add
xchg
adc
ret
cld
cltd
mov
xor
out
sub
or
cmp
lock
and
scas
push
mov
xor
dec
out
rorb
push
pop
xchg
les
inc
bound
inc
rol
vaddps
mov
stc
inc
ja
push
pop
xchg
test
mov
ret
dec
cmp
lahf
mul
movsb
pushf
push
sarb
out
loope
inc
cltd
mov
sbb
pop
pushf
lea
jecxz
nop
push
stc
jns
inc
xchg
add
jo
loopne
add
in
adc
dec
orb
loope
addr16
loope
cmp
fisubrl
ret
xor
push
aad
lods
sti
lret
adc
aam
sub
mov
sub
ret
icebp
dec
bound
in
cmp
sbb
jp
aaa
and
mov
mov
lahf
imul
call
fcompl
lahf
inc
mov
sub
xchg
sub
inc
sub
or
or
and
inc
mov
cmp
push
inc
cli
jbe
xor
cli
jge
movsl
add
sub
aas
popa
sub
leave
and
xchg
flds
repnz
cmp
xchg
insb
std
add
xor
dec
jg
pop
sub
jae
cwtl
jecxz
push
sbb
lds
outsl
dec
je
rorl
loop
jb
insb
mov
gs
cwtl
jno
mov
inc
mov
adc
test
pop
xchg
cltd
ja
mulb
jp
mov
enter
push
mov
push
cmpsl
out
and
andb
sbb
jp
aaa
imul
test
dec
das
jbe
loop
cld
imul
popf
scas
mov
dec
adc
mov
pop
jno
mov
mov
sbb
dec
cltd
shr
out
imul
jmp
push
dec
lcall
andb
shrb
roll
movsb
lds
pop
mov
test
fnstcw
pusha
pop
or
push
into
inc
cs
xor
pushf
jno
ret
dec
mov
jge
in
pop
in
sub
decl
cmpb
stos
enter
popfw
inc
push
je
or
jecxz
cs
mov
mov
dec
test
lea
or
dec
imul
std
jae
jmp
jae
jge
cmc
stos
inc
add
movsb
stos
mov
das
ret
out
lods
mov
push
lret
inc
loopne
cmp
or
enter
inc
xor
sahf
mov
test
cmc
aam
popa
mov
rclb
cmp
sub
fists
mov
add
das
fs
xor
inc
rcrl
push
push
inc
mov
jbe
xchg
mov
pop
imulb
ret
arpl
jecxz
rcl
mov
sbbl
cmp
add
es
xchg
push
xchg
fists
pop
es
insl
mov
cmc
out
sub
fs
lret
in
fcmovnb
or
dec
mov
scas
push
pop
push
add
mov
adc
xchg
ljmp
std
mov
sbb
add
mov
lret
mov
addr16
xor
jne
test
pop
in
mov
xor
jmp
js
mov
mov
outsb
mov
jnp
outsb
iret
cmp
xchg
stos
call
dec
mov
or
dec
dec
es
sub
pop
lret
mov
ret
fldt
sarb
ret
push
loope
out
pushf
popf
xor
jno
rorl
mov
scas
jmp
int
test
jg
stc
test
daa
xlat
fldt
push
add
adc
cmpsl
adc
in
dec
rcrl
or
imul
ret
mov
cmp
xor
roll
lods
cmp
push
lahf
push
sahf
jno
lcall
es
or
sub
pop
cmp
rcrb
xor
les
pop
push
aas
jp
mov
sbb
cltd
imul
jbe
mov
adc
xchg
jne
out
stos
adc
xchg
fs
cld
add
pop
das
sub
xor
xor
aad
cmp
xor
testb
xor
nop
or
pop
mov
int3
mov
enter
shr
and
add
jbe
dec
push
in
and
sub
ret
mov
and
cmp
and
cmp
stc
push
in
jb
and
data16
ret
cmp
pop
push
or
fmulp
xor
mov
add
icebp
std
sub
imul
lcall
ja
adc
dec
xchg
mov
loope
ret
mov
inc
cwtl
and
mov
mov
mov
pushf
dec
sbb
dec
ja
mov
mov
or
sub
test
adc
add
push
nop
mov
sbb
ret
adc
push
mov
and
pop
imull
or
cwtl
ret
les
mov
icebp
mov
movsl
loopne
lods
jle
dec
loop
jb
sub
insl
subb
int
mulb
stos
mov
fildl
mov
cli
js
test
mov
repz
enter
hlt
cltd
rorb
fcmovu
pop
shll
xorb
cmp
enter
faddl
std
add
sti
dec
dec
cmpsb
xlat
lcall
cmp
or
in
push
insb
push
mov
addl
push
mov
add
call
mov
sbbb
or
aas
test
jge
mov
cmp
sbb
and
push
pop
repnz
fisttpll
ljmp
je
mov
push
aaa
sbb
mov
jmp
mov
ja
and
dec
adc
mov
or
fsubrp
sti
lds
mov
in
inc
adc
add
loopne
out
jns
push
adc
mov
out
dec
mov
jge
jp
xchg
ds
hlt
mov
int3
sub
xchg
push
mov
les
and
sub
sti
lret
dec
add
fidivs
pop
xor
popf
ret
pop
cmp
push
cltd
orb
push
mov
sbb
mov
mov
jns
add
insb
lods
adc
mov
cli
fwait
sahf
xchg
add
mov
insl
adc
lret
xchg
mov
lods
fstps
imul
xchg
outsl
lret
inc
mov
xchg
fiadds
loop
in
nop
jbe
pop
mov
int3
add
clc
sarl
fwait
dec
pop
aad
push
inc
fs
ficoml
xchg
push
push
mov
insl
pop
sbb
xlat
popa
stos
pop
int3
push
mov
or
nop
mov
iret
xorb
shlb
cmp
mov
pop
pop
imul
ss
stc
int3
sbb
mov
std
pop
pop
pop
out
xchg
jp
das
int
loop
push
int3
jle
fldcw
lock
in
pop
loope
addr16
or
jae
loopne
or
inc
xor
fisubl
pop
out
jnp
test
scas
outsb
mov
lea
mov
mov
arpl
call
mov
leave
sbb
cmp
and
push
mov
aaa
outsb
jbe
gs
shl
fdivr
testb
shlb
dec
ror
pushf
fiadds
hlt
loopne
orb
mov
pop
pop
pmaxsw
mov
cmpsb
cmp
mov
mov
inc
std
insb
shr
push
mov
in
mov
pop
notl
xlat
flds
es
movsb
psubw
push
scas
sbb
es
sti
adc
dec
ds
insl
pop
push
xchg
insb
and
inc
out
hlt
push
fcmovnu
xchg
mov
xor
push
sub
sub
mov
xlat
adc
xor
push
sbb
cmp
mov
xor
or
fs
imul
cmc
hlt
pop
jo
adc
loopne
gs
sbb
add
ror
fistpll
push
cwtl
add
pop
or
out
inc
push
ds
int3
cmpsb
push
rcll
inc
xorb
js
inc
enter
aad
and
outsb
push
flds
out
fiadds
imul
jnp
mov
sub
stos
cmp
cmp
mov
div
lock
aam
das
adc
imul
mov
fists
lea
arpl
sbb
pop
jae
ret
pop
dec
ljmp
shlb
xor
xchg
mov
ds
push
scas
jl
lret
mov
sti
dec
insb
in
jb
jo
xor
das
scas
lock
or
je
gs
mov
cltd
cmp
add
add
xor
adc
mov
dec
add
xchg
es
mov
pop
jnp
into
lahf
or
dec
cmp
aad
pop
sub
popl
pop
lea
iret
push
in
out
add
mov
sbb
xchg
into
arpl
dec
sub
sub
dec
clc
nop
aas
ss
add
lods
inc
fsubs
rcrl
arpl
inc
fwait
movsb
ds
add
sbb
mov
call
daa
mov
push
or
xchg
outsb
inc
sarb
push
and
cmpsl
fs
ljmp
sbb
cmpl
xor
movsl
add
push
adc
mov
pop
inc
xor
pop
fwait
bound
push
jno
hlt
rcrl
mov
or
gs
ret
pop
jg
mov
iret
movsb
cwtl
les
addl
pop
add
sub
xchg
mov
enter
inc
call
jb
outsl
add
jb
loopne
arpl
inc
jl
cld
loop
mov
mov
stos
dec
cs
push
mov
clc
shr
or
ds
lret
mov
jo
pushf
les
lea
pushl
and
es
sbb
dec
ficoms
inc
addr16
pop
mov
sahf
mov
ds
xchg
ds
in
sub
ds
push
pop
cmp
cmpsb
mov
and
pop
jecxz
insl
xchg
cmpsl
lods
in
pop
in
shl
dec
xchg
fldenv
fisubrl
aam
ss
push
stc
pop
xchg
jae
xorb
not
fdivp
lret
add
cmp
scas
dec
sahf
daa
pop
lret
mov
cmp
add
mov
les
ret
addr16
out
inc
leave
jecxz
push
stos
es
add
movsb
out
mov
js
shr
bound
test
and
sub
outsl
sarb
jno
test
into
sub
jbe
adc
lods
test
mov
mov
inc
loopne
mov
faddl
xchg
mov
lcall
mov
jecxz
pop
sub
inc
jae
inc
inc
mov
pop
bound
sub
sub
xchg
shll
fwait
cwtl
dec
mov
pop
ret
test
inc
cmp
or
into
mov
and
push
mov
out
outsl
cmp
mov
or
sub
inc
clc
sbb
test
sbb
std
xorb
lea
imul
shrl
orl
loop
pop
mov
in
mov
sbb
mov
repnz
out
cs
inc
push
pop
push
or
rcl
xlat
jb
enter
dec
and
fidivs
out
in
mov
pop
jns
out
mov
js
lret
push
dec
xor
mov
mov
fimuls
mov
pmaxub
idivl
movsl
mov
xchg
push
dec
and
mov
stos
jbe
sub
inc
cmpsb
push
outsl
cmp
xor
cwtl
xor
iret
in
shlb
arpl
call
jle
imul
andb
mov
hlt
or
inc
dec
jbe
je
stos
inc
inc
sbb
outsl
push
lahf
adc
cli
ljmp
jo
aad
loopne
mov
insl
cmpsb
clts
push
inc
jle
iret
sti
xor
arpl
repnz
insl
outsb
lahf
dec
inc
push
pop
dec
mov
ja
jb
out
cwtl
in
or
jmp
or
mov
popf
jbe
add
inc
popa
cmp
sub
movsl
cmpb
loope
add
dec
jecxz
mov
pop
sbb
js
lret
filds
sti
sub
and
mov
mov
mov
sbb
and
fidivrl
inc
shrb
ds
mov
or
mov
jmp
je
add
cmp
inc
ss
sarl
rcrl
andl
roll
cwtl
roll
xor
in
sahf
jbe
call
rcrl
xor
mov
sbb
pop
pushl
push
sub
cld
xchg
lcall
mov
adc
sbb
fwait
mov
adc
push
pop
jnp
in
fs
add
inc
adc
inc
push
dec
cmpl
fdivrl
or
jnp
dec
push
jge
push
iret
movsb
mov
push
mov
dec
arpl
inc
in
inc
aam
xor
cmp
sub
dec
loopne
imul
jge
inc
mov
das
mov
dec
mov
mov
xor
bound
shll
ret
lods
dec
pusha
add
addl
fldenv
dec
push
pop
xorb
jbe
push
or
pop
cmp
outsb
pop
test
xchg
int3
addr16
xor
dec
inc
es
mov
dec
mov
adc
enter
mov
pop
fcmovbe
and
mov
insb
test
dec
add
jle
mov
xlat
sbb
xchg
cmc
jmp
sub
mov
fadds
int
pop
inc
mov
xchg
fcmovu
jecxz
lret
cmp
jecxz
lock
or
decb
out
or
test
cwtl
sbb
mov
push
adc
mov
jmp
cmpsb
jge
sbb
inc
dec
test
push
and
pushf
inc
sub
fistps
mov
or
dec
mov
std
adc
xor
test
ljmp
or
adc
jb
jg
inc
popf
push
jmp
loop
mov
jecxz
and
and
inc
test
js
insb
mov
sub
test
sub
loope
sbb
lods
push
loope
xchg
fstpt
push
mov
inc
or
sub
push
add
inc
into
lods
push
in
jmp
lea
scas
sbbb
lods
sbb
and
adc
adc
sbbl
testl
sti
mov
in
fsubl
movsl
test
pop
sub
xor
pop
je
je
add
mov
pop
nop
js
jns
xor
add
dec
lret
pop
std
lret
out
pop
std
and
sub
fs
sti
pop
lods
xor
and
push
adc
pushw
sbb
nop
loopne
xchg
sub
xchg
pop
jbe
fmull
adc
test
jo
int3
xor
sbb
lds
mov
inc
cmp
enter
arpl
fsubrl
out
out
js
stos
out
mov
mov
pop
sti
xchg
inc
nop
shrb
mov
jg
fldenv
test
les
js
insl
enter
mov
rorl
adc
and
sbb
sbb
mov
jnp
or
mov
incb
push
divb
inc
movsl
pusha
dec
cmc
pushf
cli
xlat
dec
rclb
rcr
addr16
cltd
adc
std
mov
pop
arpl
mov
sbb
aaa
cli
push
test
mov
jp
mov
mov
das
les
js
sbb
movb
daa
outsb
popf
fsts
and
xor
in
xchg
lcall
ljmp
pop
sub
cltd
xchg
pop
fsub
dec
dec
and
jmp
dec
mov
cmp
addl
test
xchg
cmc
lock
mov
adc
mov
hlt
pop
cmp
sub
pushf
dec
das
es
pop
mov
push
in
jns
fcmove
xchg
sub
xor
mov
jle
daa
add
rclb
loopne
int3
sub
enter
mov
inc
je
js
mov
test
inc
jb
je
xchg
fildll
pop
fldenv
jle
mov
enter
lock
jb
add
dec
jp
mov
mov
shl
pop
mov
sub
and
push
pop
cmp
mov
xlat
lea
cmp
cmc
xor
mov
lods
mov
cmp
pop
sbb
das
sbb
mov
jecxz
cltd
jmp
arpl
ja
aad
push
int
stc
xchg
lcall
adc
icebp
fmulp
leave
mov
adc
decl
jns
icebp
xor
add
xchg
add
out
aam
stos
inc
shlb
inc
aad
movsb
pop
adc
leave
mov
rorl
fsts
mov
cli
outsb
out
mov
xchg
mov
pushf
mov
cmp
pop
sub
cmp
dec
xchg
stos
fildll
cmpsl
jg
dec
aad
jg
sub
dec
dec
nop
enter
add
mov
sub
mov
xchg
hlt
jp
mov
sbb
bound
push
mov
push
fsubrs
xlat
outsb
rclb
xchg
aam
test
data16
dec
jmp
pop
arpl
or
outsb
mov
add
into
inc
lret
sbb
es
scas
pop
popa
in
dec
mov
inc
ret
mov
stc
push
xor
or
jbe
test
lds
mov
scas
out
jmp
dec
es
repnz
outsb
mov
mov
jmp
mov
sub
mov
nop
adc
jl
pop
mov
outsb
aaa
mov
inc
push
rolb
push
jmp
push
daa
pusha
mov
js
mov
and
call
inc
ret
push
fs
testl
dec
xor
adc
int
insl
mov
adc
call
stos
mov
dec
mov
sub
scas
rolb
cmp
jne
int3
push
adc
movsb
push
pushl
rol
faddl
and
stos
out
imul
imul
aam
movsl
or
sub
lea
jp
cli
mov
xchg
popf
push
mov
out
shrb
andb
stos
out
frstor
jns
xchg
scas
enter
or
sbb
mov
hlt
and
pop
cmp
add
xchg
jae
rolb
inc
movsl
push
jge
mov
out
lret
in
xchg
jge
push
pop
adc
js
insb
mov
mov
cmpsl
out
std
pop
idiv
xor
out
sahf
pop
insl
add
adc
push
adc
dec
xchg
cmpsl
sbb
and
mov
orl
adc
rcrb
inc
dec
shrb
cmp
jge
lods
cmovle
xchg
or
add
imul
cld
mov
pop
add
icebp
fwait
pushf
pop
int3
mov
mov
xorb
enter
call
pop
xchg
fnstcw
push
fwait
dec
cli
shrl
and
into
jae
test
inc
inc
arpl
in
xchg
decl
inc
pop
add
dec
data16
clc
imul
add
std
cmc
mov
and
jnp
add
ljmp
and
fcom
idiv
sub
lret
add
pushf
pusha
jecxz
mov
arpl
scas
and
mov
ret
cmc
jbe
inc
pusha
xor
je
bound
cmp
js
into
sub
aas
xlat
pop
sbb
add
jg
dec
inc
jge
out
pushf
insb
je
addr16
xchg
in
fwait
dec
jp
out
lods
popa
dec
shlb
cmp
xchg
xorb
js
push
inc
add
icebp
push
mov
jle
sbb
fwait
xchg
jge
movsl
arpl
int3
xchg
and
push
dec
test
outsb
adc
arpl
dec
pop
mov
lcall
daa
pop
clc
repz
add
sub
or
test
orl
mov
sub
mov
rol
adc
pop
xchg
in
mov
adcb
dec
cmp
aas
test
sti
arpl
ret
xor
xchg
scas
test
add
cltd
sbb
mov
sbb
cmp
inc
mov
das
int3
push
arpl
out
pop
cmc
adc
test
iret
or
and
imulb
lods
testb
pop
loop
sti
inc
dec
mov
ja
movsb
outsb
nop
jecxz
int
fidivs
xchg
rcrl
ficompl
push
mov
adcb
aam
fwait
adc
mov
mov
das
sbb
dec
ret
lds
out
test
jp,pt
xchg
dec
int3
mov
fdivrl
mov
icebp
leave
adc
and
jp
add
xchg
jbe
iret
cmpsl
insl
pop
incl
loope
push
jg
sub
and
add
cmp
mov
enter
xchg
insl
inc
punpckldq
xchg
imul
cs
ja
pushf
inc
push
outsb
push
sbb
mov
xchg
and
xor
clc
fnclex
cld
xchg
push
lods
popf
xor
bnd
dec
ja
pop
loopne
rcl
fisttpl
and
nop
sub
or
xchg
imul
xchg
jmp
jns
mov
inc
xor
les
cltd
fsubrl
mov
add
or
adc
cmovno
fucomp
xchg
out
jns
inc
pop
and
int
iret
sbb
gs
add
cmp
in
and
push
jb
pop
dec
lods
sbb
add
lock
test
mov
stos
xor
dec
sub
in
cmp
sbbb
adc
mov
int
jbe
and
fisubrl
or
dec
adc
enter
and
push
subl
mov
pop
cmp
shll
xor
mov
cwtl
mov
mov
push
xchg
fcoml
mov
add
dec
dec
dec
in
push
in
or
int3
in
jnp
fcomps
cwtl
adc
add
sub
and
pushf
dec
cmpsb
sbb
gs
stc
lea
xchg
inc
sbb
lods
sarl
or
repnz
daa
and
push
arpl
mov
ljmp
push
stc
push
bound
jnp
jp
popa
pop
lahf
inc
out
lret
cltd
add
test
imul
push
scas
stos
and
andl
xchg
push
stc
xchg
lret
add
aad
inc
aad
and
call
lret
dec
movsl
mov
das
mov
test
jmp
stos
xor
mov
pop
out
mov
inc
in
rcll
adc
xor
shll
fisubs
pop
jnp
call
mov
mov
cmp
sbb
adc
das
cmp
outsb
push
sub
xchg
mov
xor
fwait
xchg
jb
jmp
dec
loopne
add
lock
scas
lcall
nop
repnz
cltd
mov
sub
adc
mov
push
or
nop
and
inc
dec
add
jle
add
lods
dec
lea
enter
cmp
fadds
stos
xor
repz
or
lea
fucomp
mov
cmp
stos
je
cmp
sub
sbb
rolb
jl
scas
aam
sub
les
popa
popl
addb
faddl
mov
mov
or
lret
dec
jo
lret
mov
jge
or
cli
ds
fmull
push
repz
mov
notb
mov
call
stos
shrl
movsb
test
or
xchg
dec
xchg
xchg
movsb
enter
xchg
fwait
pop
fstps
popa
sbb
or
out
cld
in
cmp
adc
mov
aad
add
pop
cmpsl
sahf
jae
bound
mov
ja
popf
xchg
jne
adc
mov
jbe
adc
iret
stc
xor
pop
in
inc
push
adc
es
dec
aam
imul
push
arpl
add
and
and
xor
jmp
and
out
jmp
sub
or
mov
daa
pop
mov
lret
push
jae,pt
cli
movsl
test
into
sbb
fistl
fcomp
shrb
inc
test
icebp
xlat
or
pusha
mov
jbe
push
mov
pop
mov
add
insb
loop
sbb
ja
test
and
lret
xchg
dec
push
test
test
xchg
jecxz
pushf
testb
jg
cmp
pushf
scas
ret
mov
or
mov
or
mov
dec
in
inc
push
mov
add
int3
sub
setnp
aad
nop
incl
jne
pop
dec
pop
jae
xor
push
mov
mov
mov
outsb
mov
enter
jae
aam
pushf
or
inc
outsl
xchg
in
rol
dec
jecxz
push
mov
loop
scas
cmpsb
jle
xchg
imul
loopne
sbb
add
mov
or
mov
icebp
ret
sbb
mov
aad
test
pop
fmul
adc
xchg
mov
or
add
add
insl
pushf
ret
push
push
pop
ja
aad
fimull
jns
sub
imul
dec
lds
mov
fcmovne
jno
in
xchg
push
jp
cmp
out
push
pop
inc
rcrb
pop
shrb
shl
jnp
repz
in
inc
ret
or
lea
add
inc
iret
pop
pop
int
loope
sub
imul
pop
push
cmpsl
stos
movsb
jno
cwtl
add
jmp
mov
js
movsl
and
lods
jb
cmp
shrl
mov
dec
cmp
addb
imul
sub
in
sbb
imul
mov
xlat
subl
inc
pop
add
mov
push
loop
jns
push
push
mov
and
pushf
jo
in
cmpsb
jecxz
mov
stos
or
mov
mov
mov
mov
push
jg
stos
sub
xchg
js
scas
adc
mov
test
das
fcomps
inc
jp
jge
pusha
out
stc
cmpsl
hlt
addl
sub
pop
out
or
xor
xlat
cmc
xor
fimuls
push
shr
gs
sbb
push
mov
sub
cmp
mov
jecxz
out
xchg
xchg
in
push
mov
lock
je
fst
lcall
push
mov
sub
mov
dec
xchg
jecxz
cmc
sub
nop
inc
cmp
xor
lret
sti
ds
cld
inc
sbb
xor
jge
jp
cmp
stos
fwait
sub
inc
jno
xchg
or
movsl
ss
push
mov
fcomip
pop
add
inc
icebp
cli
pushf
pop
inc
inc
cmpsb
repnz
pop
xor
hlt
dec
and
clc
cltd
in
jg
sub
out
icebp
jecxz
push
cmp
cmp
std
push
inc
sti
add
outsb
mov
icebp
xor
sub
icebp
xorb
xor
xor
mov
push
out
lcall
sub
cmp
mov
sbb
adc
and
popf
sarb
outsl
mov
mov
ret
cmc
jg
mov
je
shlb
mov
xchg
xor
cmpsl
insb
mov
inc
fstl
push
add
push
mov
rcrb
out
scas
mov
inc
or
dec
sub
out
mov
mov
inc
or
sbb
or
sarb
cmp
out
adc
xchg
mov
rolb
mov
xor
scas
adcl
cwtl
cmpsl
xlat
pop
sub
rorl
xchg
hlt
scas
mov
imul
fcmovnu
sub
jbe
stos
leave
lcall
cltd
daa
mov
daa
pop
inc
sub
das
hlt
jle
adc
mov
out
and
or
test
stos
leave
dec
mov
in
or
xor
mov
das
push
xor
mov
xor
outsl
mov
cwtl
mov
ret
idivb
loope
pop
mov
fmul
fcoml
xchg
jecxz
rclb
adc
adc
aad
popa
sbb
add
xchg
arpl
adc
push
mov
rolb
test
mov
inc
out
jno
inc
cmc
cli
and
dec
push
mov
mov
lret
ljmp
sbb
xchg
add
xchg
das
sub
cltd
inc
pushf
pusha
imul
cli
xchg
push
stos
pop
lock
ljmp
fdivp
cmp
xchg
stos
in
sbb
jmp
daa
out
pop
lcall
test
xor
sub
sbb
inc
and
mov
js
xchg
jb
cld
dec
adc
cmp
push
xor
stos
daa
dec
repnz
fcmovnbe
dec
cmp
mov
rcrb
jp
jle
xor
aad
lret
iret
sbb
xchg
loope
stc
dec
jne
hlt
xchg
cmpl
les
outsb
sahf
adcb
je
sbb
mov
scas
mov
cltd
enter
sahf
cmp
cli
mov
icebp
fildll
adc
nop
and
xchg
pop
xchg
or
or
repz
fimuls
shll
and
jbe
jecxz
outsl
add
xor
repz
pop
and
mov
sbb
xor
out
sub
outsl
inc
cs
push
adc
jb
mov
and
repnz
xchg
roll
mov
jmp
xor
jns
add
sub
lods
xchg
cmp
jge
and
enter
test
gs
nop
or
lods
sbb
sub
punpckldq
cmc
rcr
sahf
xchg
sbb
xor
push
cmp
mov
stos
push
jmp
add
hlt
adc
je
inc
inc
pop
int
movl
leave
js
inc
insl
mov
jl
add
jnp
out
push
dec
xchg
mov
scas
jmp
xor
pop
movsl
or
xchg
inc
push
mov
add
ja
adcl
sbb
popa
sbb
cwtl
loop
xchg
mov
stos
mov
mov
inc
sub
or
shlb
pop
pop
jo
mov
pushf
dec
int
dec
dec
push
fneni(8087
pop
hlt
jnp
and
mov
jns
outsb
and
cmp
mov
flds
push
lods
mov
jl
out
out
add
clc
ljmp
xchg
loopne
sbb
adc
pop
xchg
cli
and
fstps
inc
repnz
xchg
icebp
popf
sbb
fistpll
int
test
dec
push
xchg
sbb
movsl
notl
mov
jne
and
adcl
mov
outsl
popl
pop
mov
daa
movsb
push
xchg
pusha
adc
fbld
jg
sbb
bound
testb
and
jge
or
and
inc
out
fisttps
xchg
scas
mov
inc
mulb
add
sarb
clc
js
hlt
scas
mov
mov
mov
jmp
dec
outsl
xchg
out
sub
xlat
pushf
mov
dec
dec
in
xor
mov
xchg
xor
loope
das
pop
fcmovu
mov
mov
or
fsubs
xchg
sbbb
adc
fsts
fidivrl
mov
dec
mov
inc
repz
dec
dec
and
mov
je
dec
nop
test
lods
ret
mov
push
cmpb
rcrb
mov
xor
loope
sub
cmpsb
movb
inc
mov
jl
adc
cs
stos
xchg
xchg
jmp
cmp
movl
cmpsl
jle
popf
icebp
pusha
xchg
insl
call
jge
cs
arpl
jb
fsubr
mov
xchg
xchg
mov
xlat
xchg
add
pop
subl
push
int3
mov
bound
aaa
and
aad
xchg
lods
push
jmp
xchg
or
mov
popaw
adc
stos
cmpsl
pop
add
xchg
jp
jp
dec
outsb
cmpsl
fdivrl
push
int
cwtl
sbb
xchg
cs
lds
stos
das
sub
xchg
xchg
dec
dec
cltd
popa
aad
sbb
sub
es
fldcw
add
sub
or
xchg
lcall
adc
pop
mov
cli
fimull
mov
sbb
xchg
out
push
mov
rcrb
lret
mov
inc
mov
xchg
mov
in
mov
add
mov
sti
psubb
push
cmpsb
mov
jle
scas
mov
movsl
xor
sbb
sbb
dec
mov
popa
xor
cmp
sti
or
cmp
sub
je
inc
ret
dec
mov
add
dec
loop
iret
push
mov
dec
sbbb
ss
cmp
jp
push
fdivrs
fldl
pop
lods
aam
sbb
andb
inc
jnp
into
rolb
adc
sbb
sbb
and
xchg
in
lock
mov
inc
jo
pop
movsl
jbe
jne
rolw
movsb
adc
out
pop
pop
pop
add
mov
pop
addb
pop
xchg
clc
popf
xchg
and
jns
fcompl
rep
aaa
jne
enter
out
mov
out
call
pop
jo
cmp
test
aas
outsl
xchg
cltd
lcall
mov
into
scas
inc
ja
sub
cli
js
push
jns
scas
inc
mov
sbb
in
enter
bound
sbb
mov
push
in
or
adc
clc
repnz
jnp
iret
pop
sbb
lcall
cld
ljmp
ret
mov
mov
dec
mov
cmp
scas
ja
mov
ss
leave
mov
fbstp
cli
test
jmp
test
pop
movsbl
mov
fs
xor
mov
adc
xor
sbb
add
mov
ds
mov
rcrl
std
loop
inc
lods
xor
jae
popf
orb
xchg
cs
dec
outsl
cmp
outsb
mov
xor
lahf
mov
daa
enter
xchg
mov
lock
xchg
mov
xor
cltd
cmc
gs
mov
movsb
fnstcw
loope
shll
push
mov
xor
pop
ljmp
xchg
loop
fiaddl
les
mov
pusha
testl
jmp
das
cmpsb
shlb
adc
dec
aas
sarb
cmp
inc
xor
or
cmpsl
jo
scas
fs
fdivrl
fildll
mov
inc
lret
pusha
jl
xchg
loope
clc
mov
and
rclb
cmc
insb
jecxz
xchg
sbb
addps
mov
ret
gs
add
dec
ljmp
push
sub
enter
repnz
icebp
push
rcr
rcl
inc
pop
ret
daa
cmp
or
add
pop
clc
in
pop
mov
test
dec
stc
xor
enter
xor
pusha
ret
fwait
call
popf
lcall
ljmp
jno
ss
lret
inc
sti
xchg
popf
sbb
or
mull
add
mov
mov
fistps
mov
mov
pop
leave
or
jl
insb
out
jle
cli
adc
adcl
repz
pop
shrl
aam
adc
dec
out
mov
jne
popf
and
cmpsl
mull
dec
xchg
jmp
les
mov
push
cli
mov
push
aad
stos
sti
cmp
mov
rcll
sub
inc
out
movsl
loopne
fcoms
adc
popf
dec
orb
test
popf
mov
roll
cmp
aad
sub
jp
sbbb
fbstp
jecxz
or
out
es
xor
testb
xor
or
testl
jns
cmpsl
addr16
push
adc
das
sbb
out
cmpsl
loopne
sbb
imul
scas
fwait
xlat
pop
pushf
mov
sbb
negb
scas
negl
loope
jge
testb
lea
fldl
mov
adc
dec
mov
ja
add
jae
mov
bound
fcmovne
mov
cmp
or
dec
lret
mov
fists
dec
adc
mov
sarb
jne
cmp
cmc
jecxz
dec
cmpsb
lret
aam
inc
fdivrs
jnp
test
into
std
icebp
add
stc
std
mov
adc
scas
stc
lea
repnz
fnstsw
ljmp
stos
aam
repz
or
cmp
cwtl
lcall
popa
pop
outsb
loope
pop
cwtl
pushf
xchg
outsl
xlat
sub
imul
fsubrs
xchg
cmp
jl
mov
push
xorl
sub
out
jne
out
leave
int
mov
mov
fs
xor
std
lgs
dec
cs
xchg
mov
jb
push
adc
jmp
mov
iret
mov
cmp
or
dec
fisttps
stos
out
daa
dec
fst
mov
daa
scas
sbbl
cli
cs
cmp
xor
test
xor
es
fcomip
in
jp
inc
test
ds
aas
push
lods
cmp
gs
iret
jb
loopne
aaa
push
cmp
shll
or
mov
leave
sub
xchg
add
je
fucomip
inc
or
test
mov
dec
xchg
cmp
outsl
pop
mov
adc
js
lea
sti
xor
adc
pusha
out
in
mov
mov
cli
aaa
dec
stos
sahf
sti
sbb
aam
aas
cmp
fs
aas
xchg
xchg
pop
faddl
fs
rcrb
and
cmp
test
xchg
lock
mov
mov
adc
and
add
add
xchg
sub
push
jmp
mov
or
negl
sbb
cmp
rcrl
mov
fisttpll
xor
mov
stc
adc
jnp
loop
jo
and
add
mov
sbb
repnz
fildll
and
nop
es
and
push
xchg
cmpsl
aas
js
cld
movl
adc
pop
dec
or
jl
shlb
adc
pop
push
mov
cmp
sub
add
cmp
jp
mov
in
mov
jne
movb
enter
add
xchg
and
sbb
ja
cwtl
sbb
pop
fmull
sbb
jb
call
cmp
out
in
xor
rcrl
fdivl
dec
sub
xchg
lea
inc
xchg
adc
jmp
int
xchg
jg
cmpsl
fisttpll
and
add
ljmp
or
xchg
dec
or
push
lret
push
icebp
icebp
ret
mov
int
mov
out
inc
cmp
jo
imul
hlt
mov
push
scas
mov
xchg
fidivrl
dec
or
dec
jns
mov
or
pop
push
mov
push
pop
clc
mov
test
getsec
or
int3
subl
mov
adc
in
scas
dec
add
sub
aaa
cmpsb
inc
push
mov
or
pop
push
lods
xor
aaa
lods
insl
sbb
ja
lock
pop
jns
xor
jbe
jo
imul
push
xor
push
sub
in
push
faddl
xchg
icebp
mov
pop
push
fwait
push
adc
movsl
loopne
test
inc
outsb
iret
push
iret
faddl
push
pop
loopne
pop
jmp
outsb
jo
sbb
adc
dec
lahf
sbbb
sub
xchg
xlat
jne,pt
ret
pop
add
xchg
sbb
sbb
or
sbb
sbb
int3
scas
or
mov
jnp
imul
xchg
stos
mov
or
fnstenv
mov
stos
je
iret
movsb
lock
test
push
out
inc
rorb
jecxz
and
in
repnz
cli
imul
xor
mov
jae
out
xor
scas
or
int3
mov
add
pop
mov
dec
cmpsb
aas
add
popf
loopne
mov
rcll
sbb
subl
push
mov
test
push
fmulp
cmp
popf
pop
jns
and
sub
jb
or
lods
xchg
pop
enter
or
test
cltd
push
mov
add
dec
addb
ret
mov
push
cmp
stc
rdpmc
cmp
jmp
test
pop
lret
mov
inc
fildll
mov
xor
push
fwait
jmp
mov
repnz
or
mov
mov
inc
jno
push
or
or
jmp
push
fdivrp
push
xchg
notl
mov
dec
pop
out
mov
scas
iret
subb
add
pusha
push
mov
jmp
mov
mov
push
arpl
or
es
sbb
inc
in
int
add
push
inc
js
aam
add
daa
mov
jg
in
xor
hlt
mov
pop
test
out
xchg
cwtl
in
pop
cmp
ss
lea
rcrl
sahf
pop
xchg
ja
test
push
xchg
pushl
pop
add
icebp
xchg
mov
or
add
cld
rorl
and
add
and
dec
jae
dec
and
lods
push
scas
hlt
and
or
jl
popf
lea
mov
mov
dec
popf
inc
xchg
jnp
sub
lahf
lret
sub
xchg
or
ret
out
xchg
in
jecxz
cmc
cltd
repz
cli
cwtl
or
mov
movsl
inc
fiadds
inc
dec
das
hlt
das
shrb
in
mov
xor
mov
out
or
mov
mov
fiadds
push
notl
cli
sti
mov
push
in
sub
push
pop
push
shrb
jnp
jbe
cmp
and
out
xchg
ret
mov
ljmp
lcall
push
mov
pop
push
aad
imul
and
mov
mov
test
cli
out
dec
xor
sbb
popa
leave
adc
clc
add
dec
pop
aam
out
in
aad
bound
in
sub
loopne
lock
repz
sarb
stc
adc
mov
in
pusha
popf
xor
cmp
je
add
stos
dec
xchg
inc
insb
mov
out
jmp
inc
cli
add
fmulp
mov
inc
nop
test
rcrl
lret
sbb
jb
add
cld
aaa
jbe
cmpsl
adc
loop
jp
aad
and
xchg
xchg
cs
cli
xchg
lret
adc
add
das
and
push
fists
add
mov
jl
test
pop
pop
out
je
ret
ffree
and
jb
sbb
scas
jne
into
in
push
inc
push
adc
xor
mov
pushf
or
pop
ret
mov
hlt
or
int
ficoml
mov
rclb
andl
push
lods
or
push
movsb
sbb
cmpsl
xor
out
test
test
outsl
and
es
cmp
adc
test
out
gs
iret
pop
or
sub
push
lods
xlat
pusha
pusha
iret
movsb
and
add
je
stc
pop
lock
adc
push
and
aam
iret
xor
outsb
hlt
mov
ret
mov
in
ss
adc
pop
push
push
enter
dec
loop,pn
mov
orl
jb
adc
lahf
imull
fs
mov
adc
imull
fwait
pop
dec
imul
mov
clc
das
mov
loop
and
push
cwtl
sub
add
std
sbb
out
mov
mov
call
mov
sub
repz
mov
cltd
in
jns
pushf
mov
push
insb
mov
xchg
jl
mov
xor
shrb
jge
cmp
sbb
das
mov
mov
pusha
cwtl
out
out
mov
jb
repnz
and
out
jb
jecxz
jp
pop
inc
inc
mov
cmp
push
push
mov
lret
lahf
mov
push
test
lcall
cmp
negl
push
cmp
adc
je
fs
or
and
insb
inc
loopne
testb
ret
cmpsb
or
jecxz
sub
adc
lea
push
xor
pop
insb
and
dec
jne
dec
icebp
repz
push
loop
insb
adc
sbbl
lahf
sbb
dec
shlb
push
jmp
int3
cmp
test
push
or
xchg
push
jne
xor
sub
mov
push
add
xchg
sarb
imul
dec
dec
xor
dec
xor
mov
andb
sbb
or
jb
adc
jbe
pop
test
xor
xlat
mov
cmp
add
and
lret
test
or
lmsw
push
les
xchg
fwait
mov
mov
movsl
cmp
mov
mov
mov
mov
sub
add
push
adc
addr16
insl
and
jp
test
push
mov
mov
or
or
out
xlat
jnp
out
dec
jne
dec
sub
jo
outsb
push
aam
mov
adc
ret
mov
adc
bound
addr16
test
rcrl
push
mov
rcrb
loop
dec
mov
imul
jb
cmp
cmp
dec
fstl
ficoml
push
shl
xorl
ficoms
jle
decl
pusha
push
jnp
cmp
shlb
mov
dec
icebp
mov
and
jp
xchg
out
js
lret
rclb
pop
sbb
shrl
insl
pop
lret
or
add
iret
hlt
in
dec
cld
scas
mov
clc
test
cmpl
sbb
dec
cmc
jg
jbe
js
mov
pop
cmp
cmp
jae
and
cmp
rcr
cmc
inc
xor
xchg
test
mov
inc
or
cmpsb
mov
imul
jg
inc
loop
gs
cmc
mov
mov
mov
sbb
adc
or
lds
add
lret
mov
pop
cmp
into
popa
outsb
or
int
lea
jl
cmp
cs
lock
rolb
dec
jne
and
xchg
mov
and
pusha
in
mov
clc
mov
arpl
push
pop
fsubs
mov
out
out
xchg
inc
dec
stos
dec
add
sbb
ja
jb
sbb
cli
xor
sti
sbb
pop
dec
mov
ds
xchg
adc
repz
rclb
js
adc
iret
jecxz
mov
add
xchg
or
xor
push
mov
cmp
adc
cmp
cld
imul
inc
in
ljmp
gs
ret
pop
loop
andb
mov
lods
outsb
jae
cmp
sbb
push
clc
outsl
out
xchg
out
mov
pushf
scas
xlat
mov
mov
fnstenv
ret
lods
dec
je
xor
and
add
xor
pusha
cli
dec
push
dec
mov
dec
mov
pop
shr
fisubrs
daa
pushl
ret
dec
cmp
dec
cmp
mov
adcb
mov
mov
ret
ds
insl
aas
adc
fldenv
mov
mov
mov
xchg
sub
sahf
pop
push
lcall
shlb
lds
xchg
adcb
fs
mov
lahf
aam
aam
mov
loope
out
jo
sbb
shrl
adc
or
mov
nop
rorl
mov
or
hlt
sub
fs
pusha
and
sbb
aam
popa
xchg
std
aam
inc
pop
test
push
mov
ret
sar
cmpl
bound
add
shl
js
inc
shll
jle
dec
sahf
sbb
mov
scas
add
push
inc
xchg
xor
jbe
inc
xchg
jle
xchg
lea
jns
mov
aad
pushf
mulb
pop
xorl
sbb
scas
inc
aas
lahf
dec
ret
cld
push
pop
xchg
sbb
cltd
adc
add
frstor
push
imul
sub
popa
arpl
push
or
hlt
addl
pop
test
or
imul
cli
xchg
jno
cltd
mov
jg
out
addr16
fs
in
mov
mov
std
jg
push
stos
mov
jno
mov
bound
mov
sarl
mov
xchg
sbbl
cmp
repnz
jecxz
or
xchg
cmpsl
dec
bound
mov
data16
in
mov
int3
andl
or
cltd
mov
jno
jmp
or
leave
xchg
cld
out
pushf
subl
fldcw
push
hlt
mov
jne
inc
in
mov
xlat
inc
fiaddl
dec
mov
push
and
push
or
cwtl
adc
cmp
mov
aad
dec
xchg
push
dec
dec
shll
iret
jecxz
call
cltd
xchg
mov
mov
clc
xor
add
lret
mov
les
mov
fistps
loope
test
xchg
mov
xchg
movsb
sbb
test
add
mov
cmp
clc
int
lret
push
sub
xchg
mov
popf
xchg
push
incb
outsl
sub
push
cli
pop
data16
lock
lahf
sub
fimuls
je
fisttpll
hlt
pop
xchg
pushf
es
xlat
mov
lods
repnz
stos
or
stos
daa
lret
add
mov
mov
sbb
push
adcb
iret
cmp
inc
or
mov
testb
inc
adc
sahf
jl
fadd
xchg
ds
xor
in
cmp
mov
fdivl
int3
adc
xor
mov
inc
negb
adc
xchg
icebp
jns
push
jb
jle
fisubrl
cmp
xchg
stc
sub
sbb
pop
pop
pop
das
je
mov
add
inc
lcall
sub
mov
dec
pop
pop
movsb
adc
mov
xchg
fcmovne
add
ljmp
filds
push
mov
clc
pushf
cwtl
cmp
mov
addr16
lock
rclb
adc
or
ljmp
jge
shrl
test
and
popa
sub
mov
and
ret
adc
cmp
xchg
xchg
movsl
hlt
jge
dec
daa
popa
or
ljmp
das
and
clc
mov
lds
sub
call
in
lods
inc
loop
dec
pop
sub
cmpsb
test
shl
jg
aas
adc
movsb
leave
push
push
adc
add
lds
push
mov
xchg
pop
sbb
xchg
test
cmp
fdivrs
pop
push
daa
lret
test
push
addr16
bound
lret
vsubps
sahf
sub
clc
push
cmp
addl
xlat
mov
lds
jmp
push
rcl
mov
jmp
inc
jae
mov
rclb
push
rorl
sahf
pusha
ss
xor
fisubrs
cmpsb
iret
cwtl
and
enter
test
add
cmc
cmc
paddusw
mov
aam
dec
jb
int3
out
push
inc
push
popf
je
adc
or
mov
cmp
das
ds
cwtl
ja
outsb
mov
lret
test
cmp
pop
in
jns
ret
jno
mov
inc
and
inc
sub
shr
repnz
sarl
mov
test
cli
cltd
loope
iret
into
cltd
fdiv
or
int3
mov
nop
cmpsb
pop
adc
push
stc
aas
push
je
adc
or
mov
cld
mov
testl
pop
out
xlat
ljmp
fdivrs
cmc
fisubl
insb
gs
cmp
loopne
lret
ret
leave
jmp
dec
daa
enter
inc
adc
sub
rcr
fwait
das
or
int3
cmp
ret
pop
and
test
mov
arpl
jecxz
pusha
scas
pop
inc
cs
out
sbb
mov
cwtl
notl
adc
cwtl
rcll
inc
adc
lret
push
bnd
pop
jae
rcl
push
into
ret
adc
jo
jb
dec
mov
insb
int
ljmp
mov
mov
add
addb
ret
add
mov
testb
mov
imul
fnsave
mov
push
jg
sbb
mov
inc
pop
push
aad
bound
mov
dec
add
lahf
xor
push
dec
pop
int
iret
hlt
sti
test
sti
xor
jb
mov
dec
ds
or
jne
sti
jmp
xchg
cltd
adc
sbb
sub
xchg
cmpsl
sub
mov
popa
pop
mov
jo
mov
or
aad
arpl
push
loop
aam
nop
sub
jg
fs
stos
ret
or
aam
mov
xor
pushf
and
pop
cmp
shll
fwait
xor
mov
lahf
sahf
jae
cmp
sub
pop
mov
call
mov
lock
inc
inc
ret
loope
sub
dec
lret
mov
clc
ret
aad
xchg
setl
xchg
xchg
divl
leave
pop
pop
aaa
pop
inc
dec
jl
sub
or
sub
ret
xorl
cmpsb
sub
dec
add
in
mov
fisubs
mov
and
dec
xorl
lea
ret
cmp
adc
push
mov
add
pop
loop
jecxz
sbb
leave
repnz
scas
cmc
cmp
divb
and
push
stc
stos
dec
jae
xor
into
test
je
cs
aaa
rolb
mov
pushf
movsl
xor
fcoml
dec
pop
lret
push
push
or
movsb
clc
cmp
fwait
pop
xor
divb
loope
adc
push
cmp
mov
mov
jl
sahf
sub
adc
xor
cli
pop
ss
cmp
clc
ret
jmp
lea
scas
loope
adc
pushf
pop
add
mov
jecxz
mov
out
fstps
pusha
and
test
push
xchg
out
dec
mov
jae
subb
aas
mov
cmpb
movaps
push
push
xchg
test
sub
mov
and
and
inc
into
loopne
push
cmp
mov
pop
mov
mov
pop
push
sub
testb
cmp
add
pushf
xchg
outsl
push
inc
popf
bswap
ficoms
pop
jmp
xorb
es
push
jp
jmp
loopne
mov
out
and
jecxz
pop
mov
jae
pop
shll
shlb
test
cwtl
subl
jp
push
sbb
push
xor
clc
mov
js
lea
push
jb
adc
pop
or
ret
aad
imul
push
mov
fs
add
lcall
pushf
inc
hlt
addr16
fbld
rorl
xchg
in
ljmp
insb
iret
in
sub
scas
inc
sbbl
cmp
pop
fildl
arpl
call
fcoml
dec
inc
sub
cmp
mov
mov
mov
ljmp
pop
clc
outsb
popa
or
lods
test
xchg
add
xor
in
sti
or
jns
xor
mov
testl
cmpsl
dec
xor
mov
clc
aad
data16
cmp
dec
pop
jge
and
mov
push
push
xor
outsb
adc
sarl
jo,pt
pop
lods
mov
jns
inc
ds
stos
lret
nop
dec
cmp
mov
dec
loop
sub
sbb
div
mov
stc
popf
lret
outsl
pop
cmp
sti
pop
test
mov
sub
sbb
popf
mov
sbb
les
in
sbb
lods
sub
adc
roll
pop
imul
xchg
int3
xor
mov
xor
jnp
ds
imul
cmp
pushf
xor
push
xchg
popf
jmp
mov
jecxz
je
jbe
sub
pop
arpl
and
and
and
add
stos
dec
xor
lcall
in
push
scas
mov
xor
xor
mov
outsl
mov
push
pop
fnstsw
push
push
jl,pn
sbb
hlt
ret
stc
add
mov
pop
cmp
inc
add
mov
lock
add
xor
mov
inc
add
movb
stos
loop
dec
xchg
push
test
out
pop
inc
mov
xchg
icebp
jo
rclb
xchg
jne
pusha
lock
mov
or
push
je
xchg
xor
sub
push
pop
xor
int
lea
mov
xor
xchg
in
mov
add
or
cmpsb
push
jne
sti
mov
push
test
lds
aam
and
js
jo
cmp
mov
pusha
jo
decl
inc
inc
loopne
mov
push
inc
mov
sbb
stos
jmp
loopne
clc
sbb
pop
mov
push
outsb
ss
cmpsl
jbe
test
cmp
dec
push
repnz
sbb
xor
adc
or
inc
xchg
pop
ds
jae
and
xchg
shl
push
cltd
mov
shll
dec
mov
cmp
inc
xor
sbb
sub
xchg
das
xchg
pop
jge
and
std
mov
fsub
xchg
mov
ja
test
fdivr
es
inc
xorl
mov
addl
pop
fs
jle
icebp
jne
cli
ss
outsb
jecxz
lcall
or
cmp
cld
and
and
mov
push
or
rdmsr
out
pop
sbb
test
mov
fildll
mov
lahf
fcompl
add
ja
mov
insl
mov
adc
fiadds
in
call
pop
pop
subl
xchg
dec
dec
mov
in
in
ljmp
hlt
sub
xor
add
jbe
mov
and
out
dec
cmp
cmpsl
ds
xor
and
add
sub
jae
sub
fsts
add
insb
cmc
addr16
test
adc
ss
arpl
jnp
aad
inc
add
pop
mov
mov
dec
movsl
imul
sub
jl
mov
or
aaa
dec
jnp
pop
imul
out
pop
cltd
inc
jae
stos
mov
gs
mov
lcall
xor
add
pop
push
sbb
aaa
mov
loopne
scas
mov
dec
sub
clc
lahf
stc
sti
lods
jg
mov
add
xchg
mov
gs
lods
jns
or
cmp
jne
jb
inc
jnp
aad
dec
jnp
cs
inc
ljmp
push
xorl
or
or
daa
add
mov
insl
cmp
sub
ficoml
sbb
jae
push
nop
or
sub
fisttpl
int3
out
mov
inc
adc
icebp
push
iret
jg
mov
popa
mov
in
mov
xchg
push
in
rclb
jecxz
in
cmp
scas
pop
pushf
mov
cmc
push
jmp
jo
aaa
push
jg
fstps
xor
loopne
enter
sbb
das
and
and
inc
mulb
sarl
xor
aaa
js
movsl
add
ss
jb
iret
pushf
cmp
xchg
fcoml
sub
sub
mov
or
ds
mov
push
push
adc
daa
bnd
xor
inc
loopne
add
xor
clc
pop
adc
repz
stc
outsb
and
jmp
jne
sub
mov
jns
mov
mov
inc
loop
sahf
adc
cli
nop
cmp
imul
test
mov
mov
out
aam
inc
iret
rorb
inc
or
inc
jmp
mov
in
dec
mov
iret
adc
xchg
sahf
xchg
pop
and
xchg
push
xchg
cmp
stos
scas
shll
and
push
sti
test
sub
xchg
cmp
scas
sub
cld
mov
sbb
sahf
cli
fucomi
fs
sahf
mov
sbb
mov
inc
je
xlat
xchg
fiadds
int
enter
jno
stos
into
jecxz
mov
and
add
test
repz
sti
dec
sub
testb
xor
and
sbb
mov
or
ficompl
ret
inc
or
mov
mov
fadds
les
pop
mov
or
andb
pop
addr16
mov
lea
repz
leave
push
sbb
mov
add
fwait
dec
insb
movb
sbb
sub
add
lea
xchg
dec
shl
lea
xor
push
or
fisttps
pop
lds
je
fsubrs
call
xchg
cmp
out
mov
mov
std
divl
iret
insl
in
push
mov
mov
sbb
xorl
mov
jecxz
test
fwait
insl
scas
mov
outsb
clc
push
adc
xchg
mov
repz
aad
cmc
fmul
add
dec
insb
leave
or
movsb
xacquire
jle
into
repz
int3
xchg
or
sub
mov
into
mov
mov
loop,pt
cmp
mov
call
adc
std
inc
in
fildll
jge
mov
cmpsl
pop
pop
test
mov
or
adc
and
mov
test
dec
cmpsl
lods
pop
jns
shrl
in
mov
and
icebp
fimull
xor
xor
shlb
jge
jmp
adc
popf
mov
mov
cmp
outsb
imul
fwait
adc
mov
dec
ja
movsl
mov
scas
mov
xor
adc
inc
sar
aad
mov
mov
push
pop
popf
clc
push
cmc
mov
dec
out
loope
cmpsl
les
in
and
mov
cli
mov
fdivp
lret
iret
and
ret
into
addl
jmp
inc
jbe
jg
int3
sub
jle
jb
cmc
jl
mov
adc
mov
lcall
out
xchg
cli
out
and
jae
cmp
mov
jp
sbb
popaw
cmp
or
stos
cwtl
repz
loopne
call
ret
iret
dec
and
or
xchg
enter
fnsave
in
aad
testl
cmp
stc
bound
aad
test
push
add
jge
pop
pop
mov
es
shlb
movsb
mov
xchg
sub
in
xchg
je
aam
fnstcw
add
and
adc
roll
ja
or
jp
mov
cmpb
sbb
cmp
lods
addr16
add
add
sbb
jae
add
or
imul
ds
pop
into
adc
insb
and
popf
adc
xchg
sub
stos
dec
std
jnp
loope
jnp
fdivs
inc
stos
inc
xchg
out
insb
mov
inc
jge
xlat
lret
jb
and
mov
xor
ret
outsb
add
or
pop
mov
out
sub
or
fsubrs
je
popa
dec
pop
out
jns
dec
mov
adc
adc
xlat
xor
adc
cmp
pop
sti
loopne
mov
jmp
or
fsubrp
adc
popl
insb
and
mov
fisttpl
mov
fwait
fwait
movsl
popa
pop
enter
mov
jnp
fistl
mov
test
push
dec
dec
or
sarl
push
div
les
cmp
scas
dec
jb
and
adc
scas
inc
aad
out
fiadds
mov
lret
push
xor
fwait
insl
scas
dec
repnz
test
or
mov
or
jmp
sub
stos
test
jmp
lret
xor
cmpsb
lods
into
inc
int
jae
mov
jb
repnz
adc
aad
test
test
loope
jns
loopne
adc
push
inc
or
mov
ja
push
sti
adc
mov
dec
mov
fwait
mov
std
sbb
rclb
out
stos
jnp,pn
lret
xor
rcll
into
pop
negb
mov
sbbb
dec
mov
lret
hlt
adc
xor
out
or
add
push
insl
fnstenv
movsl
mov
fbstp
xor
jl
js
jg
ss
hlt
rorb
and
mov
or
mov
sbb
and
mov
jo
mov
cmp
jbe
pop
sbb
xor
dec
dec
or
push
sub
movsb
mov
jbe
lock
mov
cmc
cmpsl
and
rcr
push
or
hlt
repnz
insb
sbbb
and
in
sub
sub
push
and
sahf
push
add
loopne
imul
shlb
sub
add
adc
inc
mov
cmp
in
pop
pop
cli
lahf
inc
sbb
mov
adc
repnz
pop
cli
adc
adcb
inc
sub
mov
mov
push
cmp
pop
pop
sar
lret
sti
push
sub
push
sbb
jo
mov
and
fidivl
arpl
lahf
mov
mov
sbb
mov
aas
add
leave
sub
sbbl
jge
int
jb
roll
daa
fs
hlt
test
outsb
loop
ret
cmp
test
gs
adc
out
or
inc
popf
mov
pop
dec
into
mov
mov
cs
add
pusha
jo
outsl
lcall
mov
sub
push
rcr
test
adc
leave
mov
iret
ret
rorb
add
int3
and
ret
push
sbb
adc
sbb
add
test
mov
popa
lock
dec
mov
jg
push
jle
inc
add
mov
mov
rcr
jo
popf
and
dec
sarb
mov
mov
jns
push
push
out
pop
js
sbb
push
jbe
in
cmpsl
dec
aaa
pop
std
inc
cs
jecxz
adc
inc
adc
cmpl
aas
mov
movl
les
dec
roll
popf
dec
insb
or
in
cs
push
mov
dec
imul
and
out
and
push
pop
or
sub
push
and
addb
jle
sarl
push
repz
add
or
fstps
cmpsl
jae
pop
out
lret
xchg
jecxz
xor
insb
sbb
push
mov
mov
fs
or
in
lock
cs
pop
clc
orb
test
or
mov
fidivl
mov
jnp
adc
push
test
scas
cmp
lea
inc
lcall
push
stos
inc
and
mov
and
sbb
shl
inc
loopne
sub
and
mov
and
in
push
std
add
lret
in
aad
lds
jbe
mov
shlb
cmp
mov
movzwl
inc
inc
dec
loopne
fildl
repnz
xchg
push
insl
scas
int3
filds
loopne
cmp
sti
sub
mov
add
pop
mov
mov
adc
fistl
popf
pop
cmpsb
sbb
ss
sbb
dec
stos
lods
call
jl
loop
leave
das
dec
mov
xor
leave
sbb
mov
xchg
xchg
fincstp
leave
cs
scas
sbb
adc
imul
sub
in
mov
cmp
lahf
out
fcmovnbe
adc
gs
and
push
test
push
jmp
mov
push
pop
orl
fldl
push
decl
push
mov
cmpsb
stos
jecxz
adc
and
cmc
mov
mov
loopw
imul
pop
inc
mov
xor
sbb
scas
pushf
mov
es
mov
in
push
add
popf
xchg
mov
sub
dec
mov
jns
adc
mov
outsb
nop
js
call
aad
pop
subb
fcoml
jl
inc
jnp
int
mov
enter
push
rorb
pop
xor
push
push
and
push
add
movsl
mov
aad
dec
sbb
jbe
jmp
xchg
jo
repz
pop
icebp
fnstsw
out
add
xlat
push
inc
fists
lods
pop
dec
test
divb
js
mov
aaa
call
in
aad
push
shrb
stos
in
es
mov
adc
xchg
pop
pop
push
mov
flds
shrl
mov
mov
hlt
jl
xchg
xor
testb
ret
mov
dec
lret
mov
xchg
pop
mov
cmc
dec
cmp
xadd
test
test
lods
cld
mov
xor
ret
pop
sbbb
push
nop
xor
aad
testb
pusha
incb
push
push
xchg
adc
call
push
hlt
jne
cmp
cmp
xchg
into
and
je
sub
sub
rorb
out
xchg
inc
xor
xor
xchg
bound
std
pop
mov
pop
test
mov
mov
mov
mov
push
jne
cmp
mov
pop
mov
xchg
mov
sbb
mov
mov
or
inc
jno
ljmp
pop
outsl
push
mov
push
xor
inc
push
imull
dec
arpl
into
outsl
lds
lahf
sti
jnp
mov
push
pop
inc
repnz
push
out
lock
jnp
jmp
jle
push
xchg
in
sbb
mov
scas
in
leave
pop
fnstenv
push
je,pt
sub
and
fmulp
mov
jge
bound
xlat
or
dec
repz
mov
out
and
xchg
jnp
jmp
xchg
add
and
movsw
rcll
pop
popa
insl
subb
sti
int3
scas
pop
shlb
sahf
mov
mov
rclb
je
imul
cmp
ds
pop
mov
outsl
pop
jnp
dec
mov
jle
mov
xlat
mov
mov
pop
outsb
xchg
sbb
and
jnp
mov
sub
popa
mov
jo
cmp
jge
adc
fsubrp
inc
adc
pop
pop
icebp
mov
and
xchg
inc
mov
mov
lock
xor
out
lret
adc
mov
xor
xorb
jo
dec
sahf
mov
ja
jb
pop
loopne
sbb
sahf
cmp
outsb
sbb
xchg
fldenv
or
clc
mov
adc
add
jg
add
int
add
cmpsl
stos
scas
cmp
push
xor
xor
xlat
out
lock
push
fcmovnb
pop
jbe
push
xor
mov
into
push
mov
jb
inc
push
pop
in
insb
cs
inc
stos
std
adc
cli
xorb
outsb
sbb
clc
push
aad
lcall
mov
test
pop
jb
mov
cmpsb
sbb
cmp
ret
es
imul
call
adc
popa
push
and
sbb
daa
mov
xchg
das
mov
lods
cmp
mov
fldcw
jns
mov
pop
jle
fistl
mov
inc
dec
mov
addr16
dec
mov
push
add
xor
hlt
and
repnz
fadd
pop
aas
xlat
rcll
test
add
fdivrs
fldenv
pop
adc
enter
cltd
ljmp
xchg
xlat
aam
inc
lahf
out
scas
xchg
sahf
or
inc
xor
fsubl
adc
add
push
out
cmp
dec
mov
sar
mov
adc
fsubs
jecxz
pushf
fisttpll
in
add
shll
cmp
aam
xchg
pop
push
cli
lds
and
in
adc
or
mov
test
mov
nop
cmp
icebp
loope
mov
xor
out
pushf
cmpsb
ljmp
add
adc
xor
scas
push
lea
sahf
mov
inc
in
inc
cmp
cs
nop
into
sbb
mov
mov
inc
xor
jg
fwait
lds
icebp
jne
test
jle
iret
add
into
iret
frstor
add
and
in
cmpsl
addr16
rcrb
cwtl
cs
repz
js
add
sub
add
cmp
das
and
div
jno
jo
addr16
pop
ljmp
mov
pop
and
cmpsl
push
mov
mov
sub
hlt
out
call
mov
sarb
les
ljmp
inc
add
cltd
mov
dec
or
push
dec
andl
ficoml
lahf
xor
sub
xchg
and
roll
addr16
pop
ror
cmp
fadds
fstl
inc
inc
nop
or
mov
xor
das
and
push
inc
inc
xlat
xor
lret
loope
and
pop
add
mov
mov
push
mov
or
mov
and
add
cmp
out
call
jmp
sub
sub
push
xchg
mov
sbb
stc
inc
push
sti
mov
movsl
rcrl
clc
jo
and
mov
jbe
mov
inc
sbb
loope
arpl
xorl
cmc
adc
adc
or
push
pop
mov
sbb
xlat
lret
mov
pop
outsl
shll
pusha
adc
imul
xlat
adc
mov
mov
mov
cmp
out
stc
repnz
hlt
test
mov
icebp
sub
out
fldl
mov
sub
jp
mov
test
divl
xlat
mov
or
cmp
sub
in
mov
insl
inc
dec
xor
insl
sub
and
mov
add
add
sbb
in
fstps
push
insb
jl
test
and
pop
in
lret
adcb
pushf
xor
in
mov
mov
cmovle
in
add
mov
gs
sub
enter
aad
inc
std
mov
popa
icebp
lret
xor
leave
rol
ret
in
dec
into
push
popf
imul
repnz
mov
sahf
lods
sub
push
mull
adc
add
inc
sbb
lret
jg
bound
cmp
insl
push
imul
fmull
out
or
jo
xchg
loop
sbb
and
repz
sub
stos
sbb
pop
cmp
aas
lret
and
div
sti
call
repz
sbb
aaa
testl
push
pushf
ja
shl
scas
push
jmp
sbb
popa
mov
in
push
pop
imul
sti
adc
out
shll
sbb
jbe
pop
rorl
xchg
push
fs
fwait
sti
out
dec
cmp
add
insb
daa
mov
hlt
imul
xchg
loopne
fdivrl
mov
mov
sub
adc
sarl
mov
ljmp
push
dec
insb
test
jecxz
xchg
into
xchg
dec
or
aad
sti
je
ds
jo
insb
jle
mov
imul
xor
pop
enter
dec
cmpsl
sub
xchg
jbe
call
xchg
cmc
jno
sub
pop
push
push
sbb
xchg
leave
jnp
in
and
push
push
mov
loop
in
out
xor
enter
bound
inc
int
and
xchg
cli
mov
mov
mov
inc
xor
loope
test
arpl
incl
fistl
inc
pop
cltd
jge
xchg
jmp
inc
adc
add
dec
push
xchg
and
punpckhbw
lock
dec
lea
push
jno
pop
sbb
xlat
fisttpll
dec
add
ss
mov
cmp
pusha
mov
mov
icebp
cmp
mov
fcomp
loop
pop
sub
shlb
in
nop
iret
inc
mov
mull
int3
inc
mov
pop
pop
mov
jg
pop
push
sub
dec
ss
fisubrl
aas
orb
inc
jo
sbb
fwait
push
jmp
push
mov
call
xlat
repz
imul
stc
dec
cmc
dec
xor
call
sub
mov
lds
add
fdivp
in
xchg
cld
xchg
in
cmp
push
xor
lcall
lret
jecxz
out
mov
jmp
mov
out
inc
in
into
lods
test
into
bnd
xchg
lcall
or
mov
orb
fidivrs
test
pop
rol
mov
sub
movsb
xchg
lahf
dec
sbb
movsb
lea
stos
jle
inc
sbb
mov
adcb
incb
ss
in
mul
test
pusha
aas
rol
xchg
pop
sahf
xchg
mov
popa
loope
ret
fstpt
daa
xlat
in
push
inc
rorl
sbb
or
mov
mov
xor
std
xchg
scas
jmp
or
and
sub
xor
adc
and
add
lahf
movsb
push
pop
adcl
mov
shr
jp
mov
ret
iret
aas
mov
das
js
or
sub
mov
fidivs
sbb
pop
inc
and
addr16
add
adc
cltd
out
xorl
adcb
sbb
inc
mov
jb
xchg
addr16
jno
inc
mov
inc
scas
push
push
mov
push
loopne
mov
jno
sbb
xor
call
dec
sub
cmp
loope
in
inc
aaa
jle
sub
xchg
pop
cs
jno
ljmp
mov
pop
cmpsl
cmp
outsl
imul
xor
dec
cs
addb
fmulp
add
lock
sbb
xor
shlb
outsb
daa
fisttpl
push
cmpsl
mov
popf
shrd
jae
outsb
stc
mov
in
sbb
sub
dec
ret
incl
int
lahf
ss
xchg
push
cli
stos
nop
or
pop
jecxz
cmpl
lods
arpl
mov
xchg
jg
add
loopne
in
rclb
orb
cmpsl
or
push
and
and
negl
cmp
test
jecxz
mov
imul
pop
sub
xchg
cwtl
inc
push
add
or
enter
xchg
xchg
mov
call
imul
and
pop
pop
xchg
rolb
push
dec
shll
push
cmp
push
push
inc
pop
or
dec
push
cmp
js
call
and
adcb
jo
mov
rorb
in
cwtl
inc
jnp
insl
andb
mov
sub
hlt
cmc
add
sub
xchg
jl
xchg
sbb
mov
adcb
gs
pop
pop
ret
ds
inc
pop
outsb
fistl
fistpll
sub
out
cmp
add
push
xchg
insl
sbb
push
adc
mov
push
or
mov
popa
insl
mov
js
pop
fwait
inc
cwtl
loope
mov
pop
add
jmp
xchg
ret
sbb
push
xchg
inc
add
fbld
sub
nop
ds
je
out
insl
sbb
dec
in
daa
outsl
int
flds
xor
inc
cmpsb
jae
into
adc
mov
pop
dec
mov
xor
int
push
xchg
inc
test
cmp
sahf
lods
in
sub
dec
into
sub
ja
xor
jne
scas
cld
and
jmp
mov
sbb
dec
mov
sbb
ja
ss
xchg
arpl
repz
in
xchg
out
cmp
and
pushl
push
mov
mov
ljmp
shlb
mov
leave
dec
movsl
mulb
sub
bound
imulb
sbb
loope
pop
sub
dec
aam
lret
in
mov
lret
rolb
push
sbb
inc
inc
pop
shll
push
hlt
mov
or
jmp
xchg
andl
mov
sti
mov
out
aad
sbb
add
cmp
fildl
popf
dec
int3
cmp
jo
insl
or
andl
and
or
sub
pop
repnz
adc
in
inc
repnz
jl
loop
or
ret
jmp
rcll
stc
dec
add
in
into
xor
or
inc
cmp
dec
ret
sbb
jae
in
push
xorl
fisttps
hlt
or
fwait
clc
cld
dec
stc
mov
sbb
push
cld
lcall
cltd
rclb
rcrl
mov
inc
inc
lods
int3
rcrb
sbb
or
sub
dec
stos
sub
xchg
aam
jbe
and
inc
xor
ret
lret
arpl
mov
xchg
mov
xor
dec
sub
scas
dec
nop
sub
insl
leave
in
rclb
xor
pusha
fsub
add
decl
dec
pop
jmp
sbb
adc
pop
cmc
or
inc
jge
cmp
sbb
stc
sbb
pop
sbb
add
rorl
jle
pop
mov
adc
mov
outsl
enter
xchg
loopne
mov
jecxz
nop
mov
je
stc
inc
push
sub
cmpsb
pop
ds
jecxz
ret
pop
insl
in
lock
mov
mov
lret
sbb
ret
ror
das
and
dec
pushf
inc
loopne
dec
fmuls
mov
dec
in
loop
frstor
cld
mov
pop
lret
js,pn
add
and
or
ficompl
insb
or
mov
insb
mov
scas
in
mov
imul
pop
mov
cld
dec
jbe
out
or
loopne
jb
sti
mov
insl
das
imul
adc
cmp
add
ret
subl
aaa
test
inc
jns
incl
hlt
dec
fldcw
and
mov
push
push
mov
or
dec
popf
inc
imulb
icebp
jns
cmp
jb
stos
stos
adc
jns
and
mov
arpl
or
fbstp
leave
xor
cmp
shrb
inc
mov
mov
fistpll
or
and
or
xchg
lods
leave
data16
push
fidivrs
in
not
aas
je
xchg
inc
cmpsb
and
lea
and
sub
inc
mov
das
jb
inc
repnz
cwtl
jo
scas
dec
sbb
jb
sbb
or
lahf
add
pop
ret
pop
int
adcb
push
or
dec
test
aas
cmpsb
loope
sarl
cwtl
notl
loope
not
lcall
imul
sahf
mov
inc
xor
add
pop
or
pop
scas
cmp
cmp
mov
sbb
jg
int
pop
fmuls
jnp
xchg
in
xchg
bound
pop
insb
imul
push
mov
ss
xchg
subb
dec
movsb
mov
dec
sbb
insb
les
xchg
xchg
inc
lock
jmp
push
icebp
mov
add
mov
ret
enter
loop
inc
and
ficoms
inc
mov
hlt
or
in
cmc
js
rolb
adc
or
lea
filds
lret
movsb
xor
lock
xor
lahf
data16
xor
out
mov
aad
xor
leave
cmp
pop
in
xlat
push
inc
push
xor
cmp
or
mov
jae
xchg
pop
push
jo
cmp
pop
sub
push
icebp
fs
aad
into
cwtl
dec
pop
sbb
arpl
lock
idiv
mull
xor
aaa
lret
add
subl
in
pop
stc
fisubrs
icebp
push
xchg
gs
jno
or
ret
xchg
mov
dec
add
out
and
mov
rclb
fwait
mov
movsb
cmp
add
pop
inc
stos
mov
sub
pop
mulb
mov
and
cltd
loop
push
dec
idivb
xchg
test
call
mov
sbb
pop
xor
gs
mov
mov
sbb
rcl
add
lock
inc
leave
sub
shll
aaa
je
push
dec
mov
ret
dec
push
imul
push
fildll
dec
lea
inc
scas
push
add
outsb
aas
test
pushf
sarl
cmp
sub
pop
aam
testb
pushf
mov
cli
gs
sub
xor
xchg
jmp
aam
outsl
jecxz
or
mov
mov
loope,pn
in
aad
mov
jae
orl
or
test
and
push
jmp
pop
jo
mov
jecxz
mov
sub
push
div
xor
out
pop
lds
inc
mov
das
or
pop
aas
in
dec
test
in
adc
xchg
mov
fwait
jmp
iret
or
xlat
sbbl
cwtl
cmp
lea
push
testb
cli
pop
test
popa
out
and
cmpsb
ljmp
das
cmc
punpckhdq
popa
push
push
loope
sbb
pushf
mov
repnz
lods
pop
repnz
cmp
test
sbb
pusha
mov
sub
jb
js
and
in
jb
lret
push
cmpb
jge
leave
fiaddl
fadds
mov
fwait
jno
out
in
hlt
enter
mov
adc
cmp
cmc
sub
mov
inc
xchg
fcomps
mov
xchg
inc
out
push
push
adc
scas
cmp
add
push
frstor
mov
jle
cwtl
or
jmp
stos
scas
das
dec
or
jp
cmp
pushf
mov
xchg
push
push
adc
xchg
sbb
push
loop
stos
xlat
sbbl
sub
sbb
fistl
notb
out
push
test
mov
daa
fisubs
aas
jno
mov
das
xlat
add
adc
in
mov
ret
and
adc
repnz
lods
lret
insl
int
lods
ljmp
aad
lahf
jae,pn
ret
pop
lods
int3
notl
sbbb
repz
and
dec
sub
es
shrb
xor
lret
sbb
or
inc
movsb
lcall
cmp
stos
mov
and
and
ret
fimuls
cmc
fldln2
lds
mov
mov
mov
and
mov
push
or
mov
repz
jnp,pt
mov
stos
stos
mov
aas
in
out
inc
xor
push
movsl
adc
setbe
fnstcw
jp
adc
stc
add
les
jmp
fbstp
and
and
push
jo
ss
fadds
data16
cli
mov
and
dec
divb
leave
lahf
sub
fisubrs
imul
sbb
mov
add
and
test
in
addb
shlb
xchg
xor
pminsw
out
int
xchg
dec
mov
cltd
or
inc
in
jge
scas
jne
dec
or
cmpsb
inc
sbb
dec
mov
ficomps
shll
shll
jge
and
mov
std
mov
sub
gs
xchg
xlat
pop
ftst
xor
pop
andw
sbb
inc
outsl
notb
int3
loope
popa
cmp
dec
mov
jne
insb
push
fwait
sub
rcl
adc
mov
cmp
cmp
mov
shlb
orl
add
out
ljmp
popf
xchg
lret
inc
fldl
sbbl
scas
js
xlat
jg
lcall
mov
ret
mov
pop
clc
hlt
jo
ret
in
cmpsb
ret
cmp
jbe
add
mov
mov
jno
int3
ret
jmp
cmp
mov
mov
test
fcomps
xchg
xchg
mov
sbbl
push
mov
bound
iret
push
stos
dec
xorl
pop
cmp
and
push
xchg
test
xchg
mov
fwait
xchg
xlat
dec
xor
pushf
mov
jne
push
xchg
pop
sub
cmpsb
pop
push
popf
std
sarl
clc
mov
xor
sar
es
ljmp
mov
inc
adc
dec
faddp
lods
jbe
rol
fbstp
add
dec
lds
xor
add
ss
mov
std
and
inc
pop
xor
push
push
daa
shll
ret
das
sbb
mov
mov
fisubrl
enter
xor
data16
inc
mov
jns
pusha
leave
or
clc
movsl
je
aam
lods
fcomps
pop
cmp
stos
test
sbb
jl
push
mul
cld
add
das
sub
xor
cltd
cmc
mov
push
jo
pop
lea
ljmp
ds
stos
sbb
test
pop
rorl
aam
push
data16
add
mov
dec
xor
ret
cltd
cmp
es
mov
nop
lock
pop
adc
in
mov
rclb
jl
sbb
pusha
or
imul
mov
sbb
data16
mov
mov
out
in
cld
xor
xor
inc
cmp
xor
push
jo
aaa
xchg
sti
bound
push
test
and
je
pop
mov
mov
xor
aas
adc
sarl
ds
insl
insb
mov
test
negl
adc
jns
xor
pop
push
lsl
rorb
dec
add
xchg
mov
imul
movsb
sti
add
iret
jmp
pushf
test
pop
cmp
sbb
test
sbb
leave
jb
lcall
jns
outsl
mov
fidivl
scas
fistl
lea
test
push
ret
into
iret
rorl
mov
int
mov
cmc
incb
jb
xorb
mov
fwait
int3
push
leave
dec
cmp
imul
fwait
cs
xor
das
adc
pop
aad
stos
sub
pop
fsubr
in
cli
fidivs
xor
ret
sahf
sbb
ret
adc
out
mov
dec
enter
mov
sbb
lcall
sti
mov
bound
lret
fninit
cs
inc
xor
jo
movsb
insl
sarb
in
push
and
xchg
jo
mov
adc
and
adc
into
stos
adc
adc
fimull
cmp
jmp
jge
inc
xchg
cmp
leave
cmp
push
leave
loope
fcmovbe
add
adc
shr
xchg
mov
mov
outsl
repz
enter
mov
adc
and
push
inc
jl
adc
mov
mov
xchg
or
cmp
adc
add
xchg
test
popf
mov
cmp
xchg
insb
ljmp
xchg
jl
test
sbb
add
icebp
popw
or
xor
mov
mov
inc
xor
add
sub
gs
cmp
hlt
fsubrs
mov
repz
mov
or
push
test
mov
push
add
repz
sahf
mov
dec
xchg
lret
add
mov
jg
jle
xchg
sti
push
sarb
movsb
dec
lahf
cmp
repz
mov
jno
fsubs
fsubrl
test
das
dec
xchg
cmpxchg
cltd
add
enter
lea
jg
pop
dec
lahf
dec
dec
arpl
pop
mov
loop
cmpsl
pop
xchg
sbb
sub
pop
mov
movsb
jl
sbb
fisubrl
sahf
iret
jl
mov
jmp
push
aad
int
in
dec
cmc
dec
inc
push
push
out
cmp
or
stc
sti
push
jb
xchg
in
jno
dec
aas
sbb
push
out
ffreep
movsl
cmp
adc
jmp
add
fists
lea
cli
mov
sbb
daa
cli
ljmp
scas
pop
test
into
mov
dec
jl
js
std
adc
dec
xchg
push
leave
xor
add
inc
out
in
shll
sub
cmp
cmpsl
jae
jle
ljmp
cld
jmp
ja
lods
add
es
mov
clc
pop
xchg
outsb
xlat
insl
call
int3
push
cmp
fadds
sub
inc
sub
sbb
mov
and
xor
inc
pop
rcrl
xor
cmp
sub
jne
cmp
aas
dec
jl
sbb
inc
repz
repnz
insb
dec
test
xchg
rolb
add
xchg
cmpsl
or
or
clc
ss
and
dec
mov
adcl
adc
cmpsb
test
jmp
ja
pop
jns
inc
jge
popa
xchg
add
dec
subb
mov
out
inc
push
mov
and
aam
call
fstps
pop
jecxz
mov
jl
pusha
push
xor
fsubl
int3
cmp
jecxz
mov
sbb
out
int
ret
stos
shlb
cmpsl
xchg
fimuls
and
xchg
jbe
jnp
out
xchg
mov
loope
add
leave
adc
mov
push
pusha
ja
mov
inc
mov
js
add
adc
adc
jo
mov
std
xchg
mov
ficomps
cmpsb
shrl
pop
push
pop
and
xorb
in
sbb
push
loop
adc
outsl
mov
pusha
cmp
pop
repz
sub
jnp
lea
dec
or
inc
fdivr
inc
aas
sbb
in
outsl
les
mov
xlat
das
fisubl
dec
mov
ret
pop
cmpsl
std
push
sbb
pop
push
cwtl
mov
jle
jecxz
out
orb
lret
mov
shll
push
mov
pop
test
inc
lods
pop
push
inc
je
int3
jne
sbb
mov
cld
push
testb
pop
cmp
sbb
xchg
mov
xorl
fstps
pop
fstps
mov
ljmp
pop
aaa
sbb
dec
jno
and
les
insl
or
push
ds
pop
adc
jae
data16
addl
inc
cmp
out
adc
jg
test
xor
pop
push
dec
loope,pt
aad
aam
frstor
push
mov
aas
xor
pop
in
test
push
xchg
test
mov
mov
mov
inc
or
dec
sahf
fisubl
fildll
imul
adc
rcrb
int3
ds
ret
and
cwtl
in
iret
mov
aad
add
addr16
mov
fdivr
jns
cmc
push
and
dec
xchg
cmp
ret
pop
pop
xchg
outsl
repz
mov
popa
pop
push
xchg
icebp
cltd
int3
xchg
inc
int
repz
xchg
mov
fisubs
add
pushw
icebp
insb
repz
adc
xlat
xor
jle
test
in
push
dec
lods
test
push
stc
ret
gs
cmpsl
ret
popf
mov
cltd
ficoml
scas
outsb
mov
sbb
mov
fldt
out
push
scas
mov
dec
mov
sbb
test
lret
aaa
scas
inc
push
jno
add
scas
sub
sbb
ljmp
add
fcmovnbe
repnz
ljmp
mov
jns
sub
inc
jp
mov
arpl
in
into
adc
arpl
inc
test
pop
outsb
stos
ss
mov
aam
imul
jle
push
jle
sbb
movsb
aas
scas
insb
jg
decb
jl
gs
mov
ss
scas
sbb
mov
adc
pop
andl
mov
daa
lea
mov
fisubrs
imul
rcr
std
jns
sbb
test
scas
push
enter
push
ret
outsb
stc
add
cmp
push
mov
stos
and
adc
stos
fimull
mov
sar
pop
push
mov
call
dec
cs
mov
lahf
in
inc
fcomip
mov
mov
out
mov
cs
sub
dec
mov
cmp
or
push
cmpsb
cld
mov
jl
jns
cmpb
mov
sub
dec
notb
std
frstor
iret
sub
xchg
insb
idivb
lds
adc
popf
jp
or
mov
add
and
scas
rcrl
in
pop
mov
ja
xchg
mov
ss
sbb
and
pop
stos
fucom
xchg
lret
push
cmp
icebp
mov
shlb
jp
pop
ja
shlb
adc
xor
mov
out
shll
xchg
loope
jl
adc
pop
cli
imul
sub
fsubs
outsb
add
ja
mov
adc
sbb
jp
sbb
int3
inc
add
in
cmp
adc
sbbb
mov
insb
push
push
out
test
or
fwait
mov
movsb
out
notb
aas
jl
push
sbb
cmp
test
scas
mov
in
jno
sti
mov
lret
xor
jecxz
and
push
aam
mulb
inc
cwtl
dec
add
jecxz
pop
rcl
cmp
or
repz
pop
pop
push
xchg
clc
mov
roll
mov
jne
jle
pop
sub
std
mov
add
cmp
in
cmp
fisubrs
pop
mov
fsubrl
cli
mov
sub
addr16
sub
clc
test
jmp
pop
sbb
sbb
cmc
xchg
inc
in
rcrb
xor
add
mov
sbb
in
pushf
sbb
jl
stos
xor
call
ret
pop
mov
cli
adc
comiss
insb
fistpll
adc
jg
jecxz
in
loopne
push
addr16
xchg
push
lret
gs
gs
push
cmp
inc
testl
mov
mov
xchg
jp
aam
mov
push
lahf
clc
add
jge
mov
and
nopl
inc
sub
sbb
xor
outsl
in
sbb
jns
je
cs
sti
sub
add
sbb
cmp
cmc
loop
jecxz
push
andl
jp
dec
jge
pop
sbb
repz
cld
push
loop
addr16
lret
test
inc
adc
pop
xor
int3
push
push
in
aam
fs
or
mov
aad
pop
movsb
push
pop
jns
scas
out
and
or
or
mov
sub
outsl
mov
jns
mov
sbb
xchg
xchg
cmp
inc
dec
stos
xchg
add
icebp
pop
aaa
inc
pop
xor
xor
fstl
pop
subl
adc
mov
pop
cmp
ret
and
out
decl
sub
repnz
push
mov
cs
pop
mov
jae
aam
mov
call
leave
push
adc
dec
xlat
shrl
rcrl
pop
sbb
fsubrl
push
pop
std
mov
and
mov
xor
js
pop
push
addr16
insb
loopne
pop
xor
popf
aaa
push
mov
and
add
mov
pop
and
xchg
int3
into
leave
enter
and
or
lahf
lods
aam
mov
inc
out
loopne
and
and
std
mov
fcoml
mov
and
cmp
dec
cmp
ljmp
jecxz
sub
test
fldcw
mov
sbb
lock
pop
sbb
bound
add
lea
pop
push
imul
leave
dec
ss
bound
xor
or
adc
stc
mov
imul
ret
mov
jno
pop
pop
sub
mov
cmpsl
popf
xor
aad
xchg
sbb
lods
mov
cltd
mov
loop
aaa
jnp
or
fidivl
push
mov
imul
xor
push
sbb
add
jecxz
movsb
sub
subb
sub
adc
aas
addr16
push
testb
mov
lock
mov
dec
xchg
jo
enter
cmp
mov
push
cmp
in
adc
mov
pop
jo
jno
mov
outsl
js
mov
inc
cli
adc
pop
or
pushf
add
repz
rorb
shrl
mov
ds
push
cmc
aam
pop
outsb
movsb
pop
divb
out
stc
mov
adc
xchg
mov
mov
sarl
xchg
lahf
jae
jno
xlat
in
jmp
push
add
cmp
push
testb
jns
inc
or
cmp
movsb
sub
jge
xchg
dec
lahf
or
inc
lret
pop
lcall
outsb
fadds
test
mov
cmp
sbbb
push
cli
adc
pop
insb
and
fwait
push
add
mov
out
sbb
shr
imul
mov
dec
and
mov
fwait
mov
sbb
outsb
call
les
push
mov
test
fs
mov
inc
pop
ret
ret
push
pushf
lahf
repnz
loope
movsb
inc
fisubs
sahf
inc
mulb
enter
pushf
dec
mov
stos
in
fstps
popa
lret
cltd
fildl
test
xchg
adc
push
jmp
push
lea
pop
in
dec
xchg
cmp
sbb
xchg
lods
ret
mov
mov
jae
ja
push
cltd
jg
popf
jbe
pop
lods
or
jge
addb
jl
and
rorb
test
aaa
out
xchg
mov
mov
mov
mov
lret
test
inc
aam
out
enter
push
and
push
insl
xor
cmp
ja
pop
lods
adc
mov
jno
ja
sbb
notl
push
loope
repnz
mov
stos
mov
sbb
in
mov
lea
sub
xchg
sti
and
jl
xchg
lods
lods
js
cs
mov
jl
sub
cld
push
call
sub
push
sar
push
push
inc
mov
sbb
sbbl
inc
push
mov
pop
out
lret
aaa
adc
jecxz
lock
lret
or
lret
stos
andb
mov
mov
push
jle
aad
sbb
ja
movsb
sbb
mov
loop
popf
mov
and
fsubs
or
or
gs
popf
test
pop
sahf
leave
pop
mov
jmp
in
inc
test
daa
in
int3
xchg
jne
and
inc
mov
arpl
cwtl
sarl
or
in
mov
fdivs
in
shll
aad
jmp
dec
fs
xor
inc
test
popf
ljmp
subb
int
adc
popa
dec
cwtl
mov
adc
mov
enter
and
pushf
fisttpl
push
dec
sbb
push
push
pop
cmp
mov
popf
das
add
das
hlt
lahf
xlat
cmp
pop
rolb
fiaddl
cwtl
adc
xor
es
mov
pop
cmp
and
or
fbld
repz
aaa
push
lret
mov
pop
pop
lret
movsl
popa
inc
lret
inc
sbb
push
test
rorl
icebp
dec
jnp
lods
mov
ret
pop
mov
sub
out
sub
sbb
int3
mov
sbb
or
or
mov
outsl
xchg
pop
push
stos
mov
in
pop
pop
and
ja
pop
pusha
sti
test
dec
cmp
pop
xchg
sbb
dec
jns
xlat
pop
or
cmc
rep
mov
dec
insb
nop
lret
repnz
pop
int3
andl
mov
aaa
hlt
pop
imul
jae
cmpsl
or
pop
push
scas
xchg
jg
cli
adc
aam
out
mov
int3
xor
cltd
and
bound
aas
inc
insb
adc
and
arpl
scas
out
sbb
cmpsb
add
lret
ds
sub
cmp
int
jl
adc
aas
call
xor
aaa
pop
sub
dec
mov
out
negl
inc
mov
incl
out
xchg
push
mov
cmp
rorl
jp
add
jle
sbb
adc
push
je,pt
les
cmp
in
mov
test
lods
push
shr
aad
jle
mov
add
jg
in
daa
push
sahf
push
in
sbb
rolb
stos
cmp
dec
xchg
pushf
fwait
imul
add
imull
cltd
insl
inc
les
jmp
jmp
lods
out
push
add
and
pop
cmp
inc
push
mov
pop
pop
dec
sbb
adc
call
dec
push
shlb
mov
and
jge
cmp
daa
adc
add
mov
inc
inc
sub
scas
mov
mov
in
sub
lret
jecxz
jbe
repnz
sub
mov
mov
inc
and
jo
mov
mov
sbb
xor
lea
and
orl
incb
fimull
xchg
jns
ds
aad
outsb
ret
mov
outsb
hlt
pop
sub
fistpll
xor
inc
pop
jle
outsl
subb
cmp
dec
lods
and
xchg
xor
loopne
insl
inc
sub
rclb
xchg
cli
jl
jne
rcl
xor
mov
cmp
ja
lea
push
xor
push
cli
mov
imul
data16
les
sub
jp
les
xor
xchg
or
mov
push
out
xchg
sbb
mov
push
pop
clc
in
fisubrl
lds
xchg
cmp
rcr
jno
and
xchg
mov
sub
ja
mov
mov
rcrl
shll
adc
fmulp
enter
sub
nop
cmc
pop
loope
adc
pop
inc
inc
xchg
repz
call
ret
jbe
cmpsl
lret
out
loop
mov
dec
inc
xchg
pop
nop
mov
push
in
dec
out
ret
sub
xchg
pusha
mov
cld
jae
insl
push
xchg
mov
or
out
add
push
pusha
movsl
inc
stos
pop
or
shlb
xor
cwtl
stos
cmpsl
or
and
sub
push
es
xchg
mov
repnz
or
cmpsb
ret
sub
mov
jb
aaa
pop
enter
je
push
fidivl
xchg
mov
and
repz
pop
shl
add
popf
loope
jo
pop
cli
inc
insb
xor
bound
sub
int
stc
or
sub
sbb
in
add
add
mov
fcmovnb
daa
das
or
pusha
dec
jg
test
jmp
jp
xor
scas
in
add
xor
sub
sub
jno
and
push
adc
inc
out
push
loop
mov
adc
filds
xchg
pushf
xor
mov
enter
cmp
xor
adc
loope
sarb
mov
pushf
lock
xchg
addr16
pop
rorb
mov
sbbl
in
pop
cmp
pop
jne
hlt
imul
insl
je
jl
arpl
out
lods
mov
test
mov
xchg
outsw
dec
lea
and
ja
and
popf
cmp
std
xor
and
jl
dec
outsl
or
cmp
scas
xchg
inc
mov
jmp
sbb
cmc
pop
insb
movsl
les
pop
jnp
sti
in
sti
loopne
fstpt
popa
and
add
in
out
call
fbld
cmc
movsb
push
ficoms
push
cli
sub
and
mov
fidivs
stos
jbe
sub
push
fadds
mov
add
arpl
mov
xchg
push
in
lods
mov
subb
loopne
or
sbb
int
push
stos
movsb
lcall
xor
mov
rorl
dec
fnstsw
fdivl
popl
es
sti
push
popa
cmp
mov
pop
lret
xor
insl
sbb
cwtl
scas
dec
jmp
fwait
gs
mov
xchg
xor
sbb
imul
inc
sbb
enter
or
rep
scas
sub
xchg
enter
adc
imul
mov
add
ret
inc
cmpl
sbb
mov
dec
xor
inc
ja
add
imul
cmp
push
jmp
inc
cmpsl
repz
in
mul
fs
mov
aam
xlat
imulb
cwtl
cmpsb
rcll
lods
pop
mov
fadds
mov
aaa
cwtl
jl
test
std
pop
jp
call
mov
sub
lods
dec
in
fcmovne
fwait
cwtl
daa
fbld
rorb
scas
mov
add
mov
scas
popf
insb
cmp
dec
inc
out
mov
imul
into
mov
cmc
andb
and
inc
lods
cmp
adc
add
xchg
mulb
inc
mov
icebp
jl
mov
orl
or
frstor
mov
mov
sbb
frstor
rolb
mov
test
adc
xchg
mov
in
xchg
sahf
rorl
jo
inc
testl
in
cmc
ljmp
std
fstpl
or
or
outsb
jmp
sub
ss
adc
adc
push
lds
cmp
lret
popf
imul
jmp
jae,pn
add
pop
jno
xchg
lahf
decb
ja
mov
pusha
addr16
inc
icebp
mov
fwait
popf
add
mov
in
or
lret
or
push
xor
sub
int
icebp
int
pop
pop
push
cmovge
movsl
fmuls
nop
leave
test
and
movsl
je
stc
hlt
adc
jno
sbb
insb
cmp
jo
shll
jecxz
or
sbb
loopne
enter
lret
int
fs
sbb
cmpsb
aaa
cmp
jno
sbb
es
js
rcll
mov
xor
cmp
inc
test
testl
mov
cmp
add
lods
sbb
into
mov
sbb
andb
cmc
sbbl
pop
mov
push
sbb
inc
ret
xchg
cmpsl
cmp
push
mov
out
jns
movsl
repz
lds
sub
push
sarb
push
movsb
and
pop
ja
fnstcw
bound
jge
fnstcw
dec
cmp
adc
add
int3
add
inc
push
add
sub
xlat
out
cmp
outsl
mov
cmp
push
fsubs
cmp
fwait
xor
push
mov
aad
clc
jg
cmpsb
int3
cmpsl
xor
dec
int
inc
lea
dec
mov
out
roll
scas
mov
int3
inc
mov
sbb
into
mov
sbb
adc
fidivrs
pop
mov
xor
adc
daa
inc
out
xchg
jge
sbb
adc
pop
xchg
out
mulb
cmpsb
pop
add
lea
hlt
jns
push
add
dec
decl
cmp
sbb
js
hlt
cmp
lea
cmp
jne
jmp
mov
into
out
sbbb
call
dec
insl
jbe
xor
xor
cmp
pop
inc
outsl
push
jmp
and
mov
inc
xchg
sbb
fstl
pop
cwtl
fwait
imul
pop
daa
call
or
xor
mov
push
sahf
in
imul
push
pop
add
dec
movsl
cld
mov
roll
sar
inc
sbb
inc
sub
cmp
iret
out
lret
sbb
mov
sbb
cmp
mov
iret
arpl
fs
std
das
xchg
movsl
icebp
enter
lea
mov
or
jg
scas
mov
out
push
rcr
loop
out
jno
mov
mov
jnp
sbb
scas
pop
cmp
hlt
jae
push
stc
sub
jg
sub
repnz
jmp
pushf
push
xchg
sbb
xchg
mov
scas
repz
hlt
stos
mov
inc
inc
dec
jo
nop
sbb
jle
pop
in
pushl
insb
out
jle
mov
cmp
std
pop
movsb
aaa
or
pop
sbb
int
lds
imul
sub
xchg
rcrb
cmp
adcl
inc
sbb
testl
iret
jmp
imul
ret
and
cmp
cs
inc
lcall
test
stos
cmp
pop
or
bnd
stos
mov
xchg
out
mov
movsb
adc
mov
dec
ljmp
sub
pop
or
push
sahf
cmp
flds
roll
mov
pop
js
cmc
jo
inc
pop
stc
fdivs
or
mov
inc
in
jbe
inc
add
cmc
xchg
mov
push
xlat
out
shll
imul
insl
popa
out
pop
dec
push
xchg
lcall
mov
sbb
add
add
outsb
or
mov
inc
xchg
push
mov
out
jae
mov
jbe
push
sbb
subb
jns
negl
jns
jo
dec
xchg
cmp
mov
ret
lods
shlb
add
cwtl
inc
mov
out
mov
cmp
insl
sbb
or
and
shrl
fistl
and
lret
xchg
and
or
enter
and
lcall
das
mov
mov
das
adcl
aad
rcrl
imull
fimuls
popa
aaa
push
shl
mov
mov
or
push
iret
je
inc
out
loopw
adc
xlat
xchg
push
sbb
shll
or
jg
jecxz
xlat
xor
mov
pop
sub
mov
mov
xchg
insl
jnp
cmc
shll
sbb
ffree
dec
sub
std
sti
mov
and
enter
popa
mov
cwtl
rcrb
jne
lahf
lods
mov
pop
jae
xchg
push
cmp
out
jo
lcall
pop
rol
test
insb
xor
mov
mov
xor
adc
push
add
fldenv
fldt
das
pop
int3
push
std
jbe
add
jnp
aaa
push
cmp
jne
out
mov
jp
jno
inc
push
es
dec
mov
jge
mov
or
addl
mov
sbb
mov
cli
cmpsb
xor
xor
fmulp
ficoml
in
inc
xor
sub
jbe
or
inc
in
and
jnp
jecxz
mov
test
mov
in
data16
lods
subb
or
jg
bound
lret
jnp
das
repnz
jo
or
lcall
shl
push
dec
lods
push
mov
or
xchg
xchg
test
shrb
insb
xchg
sbb
push
xchg
mov
sti
in
test
push
enter
daa
add
divl
fldt
popa
pop
das
inc
add
stos
mov
test
pop
aaa
aaa
insl
sbb
loopne
ds
sub
jnp
push
inc
outsl
jb
in
mov
test
adcb
in
xor
fists
mov
jl
jecxz
outsb
push
cli
iret
jns,pt
mov
aas
sbb
popf
jo
scas
sub
mov
mov
jns
repnz
jle
sbb
sar
fs
out
jmp
daa
jns
mov
shlb
in
mov
push
cli
adc
mov
lret
jo
and
in
jecxz
mov
mov
test
ljmp
mov
pop
in
add
push
and
int3
mov
mov
cld
aad
sbb
xchg
or
jle
rclb
sub
or
mov
push
jmp
xchg
hlt
js
xor
add
cld
mov
lss
jo
dec
ret
in
mov
mov
xchg
or
ss
lock
cmpsb
xchg
out
mov
mov
ret
push
pop
in
pushf
shrb
ret
test
negl
es
jg
dec
pop
jge
loopne
sbbl
adc
xor
inc
cmpsl
pop
pop
xchg
test
sti
test
sbb
sub
pop
cmpsl
ret
out
jo
inc
push
xchg
sbb
inc
ja
clc
sbb
sub
popf
aad
mov
lea
push
pop
add
or
es
mov
cld
dec
sbb
call
or
push
lods
test
lret
cmovg
inc
jp
xlat
sahf
adc
pop
push
sbb
mov
scas
push
enter
aad
cltd
sbb
repnz
ljmp
dec
std
jl
inc
jb
xor
out
mov
cmpsl
fidivrl
rclb
inc
xabort
add
pop
out
repnz
cmp
jge
adc
aam
jmp
inc
pop
out
push
cmp
cmp
iret
gs
xor
lods
mov
or
ja
cltd
jns
or
xchg
sahf
or
cmp
pop
mov
cmpsb
pop
cmp
rcrb
mov
push
fs
ret
mov
push
shlb
xchg
adc
hlt
mov
ret
lcall
sahf
adc
loope
ret
jnp
xchg
cmp
fldt
mov
addr16
mov
lods
push
xor
lods
sti
mov
mov
xchg
imul
push
dec
pop
pop
inc
imul
bound
js
adc
xor
mov
mov
jmp
lea
addl
xor
popf
in
bound
or
ljmp
mov
push
in
sbb
mov
hlt
xchg
stc
mov
mov
fiadds
adc
cmpsl
push
cwtl
dec
mov
int
pop
test
jge
leave
int
cmp
punpckhdq
xchg
mov
add
ljmp
fwait
adcl
fs
popa
cmpsl
bound
inc
pop
xchg
jg
je
imul
inc
dec
movsb
out
loopne
gs
stos
imul
mov
or
jno
push
adc
sbb
iret
fst
mov
jp
jno
cmc
lahf
inc
lret
data16
aam
int3
es
out
mov
dec
gs
decb
lea
xorb
icebp
cmp
mov
icebp
mov
js
leave
sub
lret
lcall
jne
test
sbb
loop
xor
add
push
ret
mov
scas
popa
cmpsb
outsb
jbe
add
mov
cmc
cmp
pop
mov
fsts
cmpsl
fmul
loop
iret
cld
mov
dec
lock
dec
mov
stc
emms
in
sbb
gs
and
xchg
jmp
hlt
jmp
shrl
push
dec
mov
nop
push
xchg
mov
jp
sbb
cmpsl
dec
pop
decl
mov
imul
stc
or
mov
loopne
sbb
xlat
lcall
xchg
lods
mov
cmpsl
jne
les
loop
fistpll
call
add
shrb
dec
mov
sbb
pop
and
jno
jae
inc
insl
xor
or
adc
inc
repz
in
adc
test
dec
repz
xchg
inc
xor
mov
sbb
pop
shlb
lcall
jns
sti
sub
pop
incl
and
imul
push
decl
push
fsubrs
repnz
fldl
in
in
lahf
xlat
inc
mov
lods
push
mov
aaa
mov
dec
call
dec
dec
outsl
out
cmpsb
enter
pop
cmp
pop
das
scas
pop
dec
and
xchg
leave
sbb
or
add
pop
mov
cmp
nop
push
dec
das
mov
jg
inc
ret
lods
sub
and
xchg
sbb
in
fldcw
or
mov
push
subl
pop
push
cmp
pop
lcall
push
je,pt
add
dec
cmc
xor
push
sbb
movsb
push
movsb
push
out
sbb
fstpt
jno
and
ficoms
cmpsl
xor
stos
jne
rorl
jb
push
inc
xor
and
dec
push
jns
pusha
lret
jge
adc
test
sub
xor
outsb
or
or
inc
push
jne
mov
jbe
mov
pop
adc
pop
fldt
sub
or
pop
addr16
pop
mov
cmp
jecxz
loopne
inc
sub
das
repz
lret
xor
xchg
jecxz
lret
and
mov
cmp
pop
mov
sub
dec
pop
jmp
lcall
out
xchg
adc
jno
cltd
add
jo
push
push
sahf
jg
add
js
sbb
mov
movsl
mov
or
sbb
mov
mov
cmp
rcll
mov
pusha
pop
cmp
ja
sbb
adc
sub
bound
xchg
xor
pop
out
jb
and
shll
inc
lcall
pop
jg
cmpsl
inc
in
out
pusha
lock
mov
cmp
push
dec
mov
call
xchg
shr
pushf
pop
sbb
sub
icebp
xor
cmp
cs
fwait
in
cmpsb
lret
int3
add
fdivs
les
xchg
cmpsb
aad
push
mov
pop
les
mov
mov
call
mov
push
add
push
scas
stc
pushf
dec
pop
rcll
adc
scas
cmpsl
je
ja
in
mov
aas
push
ds
push
jle
lahf
push
mov
pop
outsl
pop
jns
mov
mov
les
rcll
pop
js
and
lock
lods
insb
fiadds
and
addr16
iret
lret
in
lods
xor
and
in
add
and
or
das
push
pop
enter
mov
call
inc
add
std
sbb
fimull
outsb
jl
mov
stos
sbb
ret
add
sbb
mov
push
outsb
scas
pop
mov
daa
mov
std
outsl
mov
jp
out
fisubrl
cmp
outsb
or
sbb
or
stc
mov
push
mov
add
add
dec
sub
mov
add
pop
enter
sub
push
loopne
xor
lahf
push
pop
push
or
sti
jno
insb
les
dec
pop
stos
hlt
clc
push
movl
roll
cmp
mov
test
mov
mov
pop
sbb
cli
imul
mov
repz
push
and
jne
and
jle
scas
push
mov
jge
imulb
mov
jecxz
mov
stos
ret
mov
mov
sub
fnstenv
dec
jbe
shr
jl
test
loop
jb
es
rolb
jp
or
cmc
or
sbb
sub
daa
mov
sti
fadd
call
xor
adc
es
pushf
cmp
mov
pusha
jnp,pn
std
mov
cltd
inc
ret
and
add
mov
add
mov
sbb
xor
aas
xchg
cmc
ds
in
movsb
std
sbb
loop
lea
mov
lds
test
jns
fcompl
arpl
sub
in
inc
push
pop
sti
mov
lods
pop
pop
jle
gs
hlt
aad
mov
ficoms
push
fstl
dec
lret
pop
jae
out
gs
cmpsl
xor
push
mov
push
stc
pcmpeqb
push
ss
xor
mov
cmp
call
push
int
ret
in
push
pop
inc
dec
and
addr16
lods
xchg
addl
lods
jge
fsts
push
push
dec
mov
rorl
cmp
lods
mov
and
dec
cwtl
push
add
gs
arpl
cmp
or
sub
mov
xor
mov
adc
add
jle
mov
js
mov
add
xor
mov
lcall
test
pop
push
dec
inc
leave
and
add
stos
xchg
mov
cs
mov
cli
cwtl
xchg
lea
in
pop
jb
jo
push
fidivrl
sbb
mov
and
xor
and
xchg
and
mov
stos
inc
mov
add
cmpsb
inc
sahf
int
test
cmp
adc
sar
dec
lods
push
lods
pop
dec
sub
pop
sbb
dec
xor
popa
and
sub
sbb
scas
mov
fisttpll
push
adc
inc
leave
nop
shll
cmp
adc
lods
push
mov
mov
sbb
lret
lock
and
es
movsb
sti
dec
xchg
sbb
adc
fsubl
aaa
sub
xor
and
push
hlt
adc
imul
andl
jmp
fisttpll
call
inc
lods
mov
sub
cmpsl
mov
jb
dec
push
or
mov
ljmp
dec
in
push
or
mov
std
xor
popf
add
cmp
mov
in
cs
mov
mov
fldcw
cwtl
cmp
loop
in
xchg
outsb
jg
xchg
push
test
lret
mov
decb
or
sbb
inc
sub
sub
lods
clc
ss
mov
cmp
push
leave
ret
inc
inc
rcll
adc
xor
mov
add
stos
gs
subl
xor
leave
insl
adc
lahf
mov
repz
push
or
jmp
jno
ficomps
iret
push
mov
pop
cmpb
fbld
lahf
repz
push
loop
rorl
into
lcall
sar
sub
jmp
pusha
push
dec
jb
pop
fsubl
mov
add
test
data16
jecxz
lock
stc
dec
rclb
jb,pt
mov
pop
dec
push
jo
add
loopne
push
xchg
loope
add
ljmp
cmp
jbe
mov
lret
stos
and
cmp
dec
pop
and
js
mov
test
subb
addb
aad
repnz
xlat
cmp
cld
cmp
add
mov
mov
push
mov
lahf
in
push
inc
out
sub
pop
fiaddl
push
sbb
mov
popl
or
push
filds
sahf
mov
outsb
fildll
cmpsl
cwtl
cwtl
pusha
xor
in
xor
es
cwtl
jge
and
mov
lret
lock
pop
push
add
and
mov
and
xor
iret
push
fisttps
jg
ret
icebp
cmp
in
ja
pop
stos
in
stc
jmp
mulb
mov
xchg
push
dec
popf
shll
push
ret
lret
xor
gs
inc
mov
mov
test
outsl
sti
dec
movl
push
xor
push
shlb
cmp
ljmp
popf
dec
pop
inc
aas
adcb
mov
cltd
outsl
test
xchg
pop
inc
jge
add
push
fimuls
dec
fsubrl
lods
lret
or
cmpsb
xchg
sub
or
test
fs
mov
das
or
scas
fwait
cltd
iret
xor
inc
mov
nop
addr16
insb
lods
push
push
into
adc
push
aaa
outsb
mov
adc
sub
test
cmp
cmpsl
int
pop
and
sti
xor
fnstcw
or
sarl
mov
cmp
push
push
push
dec
cli
cmpsl
xchg
inc
sbb
pop
xchg
push
xor
popa
mov
fstpl
or
aas
push
mov
adc
cwtl
cld
mov
das
fwait
mov
mov
mov
div
fiaddl
imul
inc
inc
xor
lods
bound
call
addr16
dec
call
push
xor
int3
inc
dec
sbb
aaa
mov
in
xchg
rolb
or
mov
loop
adc
sbb
repnz
sub
pop
add
and
lahf
pop
out
lea
stc
mov
push
and
out
sub
push
inc
xor
inc
xchg
in
jecxz
mov
sbb
negb
pop
mov
sub
pop
cmc
mov
add
adc
cmp
int3
mov
jecxz
fadd
cmpsb
jnp
scas
movb
adc
cmp
adc
xchg
ret
dec
aaa
decb
dec
divb
leave
shll
or
pusha
sahf
sbb
lret
pushf
loop
pushf
and
mov
xor
mov
loope
cli
data16
sbb
pushf
test
pop
cmp
mov
mov
jl
dec
rclb
push
movsb
xchg
xchg
pop
pop
in
test
xchg
add
lahf
in
pop
loop
sbb
jo
push
int3
mov
dec
je
sub
pop
cwtl
inc
icebp
sbb
rcrb
add
inc
push
out
je
xchg
jbe
or
imul
cs
aam
jno
xchg
adc
lock
mov
cltd
into
sbb
rcll
pop
insb
pop
movb
out
test
jge
rcrb
push
jmp
inc
inc
or
add
mov
outsb
sbb
std
dec
cld
dec
rcrl
lds
or
sbbb
sub
mov
movsl
jmp
data16
add
ss
jnp
jo
sub
es
push
ror
mov
aaa
dec
sub
cmp
sub
sti
jle
cmp
mov
inc
test
pop
aam
ljmp
push
repnz
test
daa
sub
xchg
pusha
insb
inc
push
lock
nop
mov
and
cmp
xchg
test
or
iret
icebp
fmulp
clc
aam
inc
aad
divl
dec
cs
add
pop
shr
sbb
xor
inc
pop
sub
leave
or
lret
or
imull
and
cs
pop
pop
xor
cmp
jb
outsb
inc
mov
add
lcall
in
cwtl
lods
pushf
jno
int
jmp
ljmp
lods
push
lret
cmp
push
and
movsb
out
push
push
mov
movsb
push
aad
jbe
dec
les
lods
or
repnz
pushf
iret
pop
popa
sbb
pop
lahf
and
mull
popa
push
jnp
inc
cmpsl
cmp
jne
mov
scas
and
jg
push
mov
adc
push
std
dec
and
mov
test
inc
jb
imul
mov
or
push
outsl
sub
out
lods
lds
dec
add
xor
add
mov
inc
sbb
cmc
jecxz
addr16
fisttpl
adcl
mov
pop
orl
pop
xchg
and
insb
cmp
lock
iret
lock
xor
shlb
pop
test
mov
push
pop
push
sub
cmp
into
stos
sub
jbe
cs
inc
cmp
cwtl
sti
add
mov
dec
sub
test
addl
dec
xlat
push
sub
lods
loop
mov
cltd
mov
jo
lret
int
sbb
push
mov
sub
dec
cli
aaa
cmp
xchg
dec
mov
cld
ret
mov
mov
in
repnz
clc
pop
out
into
and
daa
icebp
dec
or
pop
xor
lds
add
sub
lret
push
insl
or
mov
inc
inc
in
or
mov
insb
sbb
add
and
enter
sub
ss
mov
sub
adc
mov
dec
and
loopne
push
in
imul
pop
es
inc
daa
jno
sbb
xchg
cltd
test
push
xchg
mov
add
mov
mov
mov
cld
jle
or
or
ss
rol
push
adc
mov
or
lods
pop
mov
stos
pop
test
sub
mov
movsb
daa
push
lds
rclb
or
in
sbb
add
hlt
jl
jg
lahf
sub
addr16
into
sub
mov
orb
push
andl
call
fwait
cs
roll
daa
in
mov
and
cld
std
pop
xor
mov
shll
mov
sub
pop
jmp
addb
adc
lahf
jo
out
stos
adc
out
nop
outsb
xchg
xchg
jmp
jmp
in
andb
adc
movsb
loop
popf
ds
repz
lods
mov
mov
adc
xchg
push
inc
dec
cmc
sub
out
and
mov
aaa
inc
cmp
sbb
mov
mov
cmp
out
fistpl
test
sbb
jl
sub
or
cltd
sarl
sarl
pop
mov
aam
addb
shrl
jge
and
pop
dec
leave
or
mov
insb
jge
cld
aam
xchg
adc
sub
lock
mov
sahf
bound
shlb
pop
loope
fisubs
mov
mull
dec
mov
xor
mov
and
xchg
cli
pop
push
stos
jl
orb
mov
in
sbb
int3
loopne
sub
mov
cwtl
adc
outsl
jnp
mov
stos
adc
in
ss
sbb
cmp
sub
ss
fbstp
adc
add
pop
fsubl
mov
stos
inc
cmp
pop
inc
arpl
add
std
jge
ja
mov
adc
mov
xchg
ja
xor
leave
sub
push
fwait
xchg
cmp
mov
call
jg
xchg
pop
fadd
cmp
push
xlat
push
or
bound
push
insb
mov
fmuls
cltd
xchg
sub
cmp
adc
cltd
and
push
sub
enter
adc
and
xchg
pop
push
repnz
outsb
dec
pop
xchg
fldenv
repnz
fs
cmp
push
pop
jmp
loopne
dec
cmp
mov
in
aad
dec
mov
in
xlat
push
dec
mov
sub
jp
or
inc
push
out
out
in
add
inc
pusha
es
inc
pop
pop
mov
mov
jns
or
ja
push
insl
cmpb
pushf
sti
dec
cmp
push
adc
sbb
pop
dec
out
fildll
in
xchg
jp
xchg
adc
fucomi
cmp
xchg
inc
xor
rol
mov
push
xchg
mov
inc
or
mov
pop
jo
push
mov
lcall
dec
mov
scas
fsubrs
mov
cmpsb
pop
dec
pop
add
cmp
shl
jle
jl
cld
addl
fistpl
xor
shrl
dec
aaa
fstp
push
inc
data16
dec
fs
pop
shrl
mov
fcomps
pop
out
mov
add
pop
jecxz
insb
add
pusha
jge,pn
sbb
enter
test
mov
dec
repz
jns
add
loope
stos
test
enter
icebp
dec
cmpsl
nop
xchg
adc
xor
andl
out
push
xchg
decb
mov
and
jl
sub
scas
dec
mov
xor
cmp
icebp
add
xor
push
enter
inc
aaa
ss
into
jl
mov
mov
test
cmpsl
fadds
dec
lret
mov
pop
fsts
lods
adc
scas
adc
add
pop
dec
mov
insb
arpl
scas
fbld
ljmp
out
pop
push
int
push
je
xor
adc
dec
xlat
arpl
and
stos
and
stos
push
lahf
pop
loopne
lea
fcmovne
mov
push
mov
jl
movsl
pop
pushf
adc
js
movsb
sbb
pop
pop
or
mov
sbb
dec
rcrb
xor
xor
push
ss
mov
lods
pop
cltd
push
rorb
outsl
leave
xchg
jbe
push
jg
stos
inc
fisubs
ret
jmp
nop
jae
repz
xlat
push
inc
jo
mov
push
pop
test
jmp
stc
popa
mov
shrl
mov
fwait
mov
hlt
test
dec
loop
arpl
mov
jp
pop
xor
mov
mov
add
dec
xchg
sub
jg
cmp
xor
mov
jle
lock
and
xchg
xor
scas
int
add
adc
and
ljmp
sbb
jnp
add
inc
iret
adc
shr
fistpll
pop
scas
dec
dec
adc
ljmp
push
ret
inc
sbb
jnp
or
add
mov
sub
mov
or
rcll
xor
inc
cli
adc
aam
lret
pop
pop
popf
addr16
aad
cld
add
fdivr
adc
aam
or
sub
in
subb
lds
lret
mov
aaa
jbe
xchg
repz
inc
les
jno
mov
lea
pop
sub
sbb
mov
and
daa
inc
cmpsb
loop
sub
jmp
in
pop
test
cmpsl
inc
sbb
mov
out
cmp
inc
push
gs
ror
jne
push
mov
mov
pop
mov
popf
ret
mov
rcl
or
scas
shll
jnp
xorb
repnz
or
pop
add
mov
pop
scas
push
inc
adc
add
clc
mov
pop
sarl
push
xchg
fnsave
mov
fcmove
jmp
cmp
int3
add
add
sbb
pop
cmpsl
inc
sub
movsl
jp
aas
ror
mov
adc
lret
and
insl
or
mov
and
iret
pop
test
xchg
xchg
test
call
das
sub
push
ret
push
and
fucomp
push
cmpsl
adc
and
push
and
outsb
enter
pop
lods
xor
dec
outsb
and
iret
push
sub
dec
xor
or
popa
in
loopne
lock
divl
and
and
test
gs
andb
cmp
je
scas
adc
inc
pop
sub
sbb
mov
in
out
cmp
cmp
cmp
jne
sti
repnz
inc
int
and
and
xor
xchg
xchg
sub
dec
sub
sub
arpl
loop
push
mov
jbe
jmp
sub
push
leave
iret
mov
paddusb
mov
push
xchg
in
aaa
sub
jne
imul
dec
mov
jg
sub
pop
clc
xor
xchg
xor
cli
stos
bound
mov
orb
notl
push
and
or
loopw
negb
sbb
add
popf
in
fcmovnbe
cs
popa
rolb
enter
xlat
movsl
icebp
pop
in
lds
fstpt
mov
clc
mov
in
stos
data16
xor
xchg
or
cltd
lods
movsb
sub
repnz
mov
mov
jg
mov
aad
iret
idiv
popf
mov
and
jnp
pop
out
inc
jnp
sbb
push
inc
inc
mov
pop
out
mov
add
and
jmp
jbe
jbe
jne
or
inc
loopne
mov
cmp
jp
mov
sbb
ficoms
inc
out
stos
mov
cmp
inc
xchg
xchg
mov
enter
dec
push
or
mov
xor
push
cltd
stos
pop
pop
daa
xor
push
cltd
or
dec
ljmp
cmpsl
mov
in
dec
fwait
cmp
cli
ret
pop
push
add
scas
hlt
adc
mov
push
test
mov
in
imul
dec
int
mov
and
xor
lods
int
mov
daa
pop
popa
cmp
inc
xor
ficompl
fmuls
jge
add
stos
js
push
test
xor
test
or
sbb
aaa
sub
in
lret
movsl
lahf
stos
push
mov
es
sbb
pop
cld
dec
data16
ds
repz
cmc
adc
cwtl
iret
loopne
ljmp
adc
add
and
lds
gs
dec
sahf
or
add
repnz
sbb
shll
insb
pop
sti
mov
aas
mov
dec
jge
push
ret
notl
adc
inc
stc
adc
push
push
incl
inc
aaa
ja
mov
sbb
xchg
sbb
jno
lret
into
outsl
test
push
dec
jnp
roll
sbbl
mov
lock
add
repnz
hlt
outsl
es
adc
repnz
insl
pop
ret
cmc
lea
xlat
pop
adc
pop
inc
or
lret
adc
ljmp
add
xchg
sub
mov
outsl
into
pusha
in
inc
pop
cmp
pop
sbb
and
scas
sahf
xchg
jne
cwtl
fidivrl
scas
sarb
sbb
push
fdivrl
aam
mov
xor
sbb
or
std
nop
fdivl
clc
loopne
mov
in
mov
stc
mov
sbb
ja
xchg
mov
mov
mov
or
jb
arpl
xorb
sbb
js
pop
pop
pop
sahf
adc
add
xor
inc
jbe
cmp
leave
or
cwtl
dec
enter
push
jne
and
jae
inc
aam
clc
loope
jb
nop
push
pop
stos
movsl
decl
push
sub
fwait
stos
xchg
mov
insb
sub
inc
push
jns
cs
fwait
lcall
lods
es
sub
movsb
aad
pop
jns
jl
lahf
push
pop
in
out
call
dec
movsb
mov
gs
daa
lahf
addr16
fisttpl
or
dec
jg
pushf
jl
pop
and
clc
push
mov
mov
inc
in
movsb
in
fdivrl
test
pop
out
cmpsl
sarb
push
dec
cmp
outsl
mov
jmp
push
push
fstl
sub
outsb
rorl
xor
jecxz
pop
aam
ds
sbb
cmpsb
mov
adc
lods
jmp
mov
mov
sarl
adc
add
lds
enter
inc
jne
sub
pop
cmp
sub
jae
xchg
pop
or
push
push
stos
mov
call
dec
push
pop
mov
push
insl
cmpsl
dec
sub
sub
pop
cmp
repnz
call
add
push
aas
xor
add
add
sarb
inc
xchg
cs
inc
mov
btc
dec
inc
inc
std
adc
mov
insl
jmp
xchg
fmull
sbb
cmp
int3
inc
daa
dec
add
mov
mov
repz
add
ds
jnp
cmc
es
mov
aad
int3
inc
fildl
mov
push
jmp
shlb
add
cmpsl
inc
mov
and
jg
data16
cmpsl
sbb
lret
loop
test
out
iret
mov
in
stc
xchg
sti
scas
je
add
and
je
xchg
mov
dec
sahf
aam
mov
sub
gs
stos
jae
lea
loop
mov
sti
cmp
jge
cmp
cmpsl
push
inc
daa
lods
dec
fmull
ja
cmpb
and
xor
and
mov
jg
inc
xor
jae
sbb
mov
mov
jecxz
adc
ss
ss
in
push
and
std
dec
shr
negl
ja
adc
iret
cmpsb
add
xchg
mov
mov
pop
fcmovbe
push
add
push
inc
imul
jne
mov
ja
repz
mov
rclb
aam
mov
mov
ret
xor
mov
cmp
xor
mov
jp
dec
dec
add
mov
inc
rcrb
pop
adc
rorb
adc
adc
call
add
xor
or
arpl
mov
or
int3
adc
push
cmp
inc
pop
jo
icebp
adc
mov
pusha
mov
rorb
push
sub
pop
jne
sbb
ficompl
or
mov
mov
mov
jg
inc
in
jle
insl
imul
lcall
into
cmp
test
adc
jns
pop
adcl
mov
bound
jnp
in
mov
stos
mov
ret
fdiv
adc
mov
adcb
mov
pop
jae
xor
int3
loope
inc
das
stos
pop
outsb
jno
idivl
mov
fs
addr16
ja
ss
add
lret
les
push
push
xchg
mov
in
jge
xchg
fcompl
int
inc
js
dec
jecxz
dec
popa
ljmp
aam
add
lock
jo
mov
jmp
mov
pop
enter
jmp
ror
jecxz
scas
xlat
imul
movsl
adc
or
dec
cwtl
sub
test
or
cmp
movsl
jbe
mov
loope
in
fsts
push
test
arpl
bound
dec
rcll
cmp
cmp
mov
out
dec
mov
test
das
das
mov
mov
xor
test
repnz
out
es
ds
jne
test
add
out
push
pusha
sbb
mov
daa
sar
sbb
insb
mov
xor
mov
in
push
outsb
mov
je
cmp
sub
cmpsb
into
insb
das
inc
inc
jb
mov
fs
movaps
xor
xchg
fwait
push
std
jnp
and
into
scas
cmp
cmp
test
pop
mov
cli
jle
sarl
jno
fadds
sub
les
outsl
imul
fwait
cli
in
xor
es
adc
pop
push
arpl
push
movsl
xchg
int3
test
imul
sahf
pop
mov
push
nop
or
inc
or
ss
push
add
inc
mov
movsl
inc
leave
push
sub
rolb
xor
mov
ret
js
mov
test
inc
mov
fdivl
xlat
xchg
mov
mov
daa
lret
xor
ret
repnz
lods
pop
scas
mov
fucom
add
popf
shrl
mov
sub
xchg
adc
aad
adc
xor
push
iret
dec
sarb
lods
rcrb
or
mov
iret
movsb
fsubrs
je
cli
out
xlat
dec
popf
and
mov
mov
jle
test
mov
xlat
xchg
lahf
push
mov
daa
lahf
cmp
es
movsw
pop
xor
mov
jb
xchg
xor
roll
lcall
dec
pop
ja
daa
notb
pop
gs
into
mov
lock
icebp
in
mov
mov
push
sub
xor
mov
into
push
nop
mov
outsl
out
xchg
mov
dec
jl
mov
mov
scas
adc
jl
push
xchg
push
sbb
jns
imul
and
jne
es
push
and
in
xchg
or
mov
imul
subb
jl
jecxz
sarb
mov
imul
or
lret
stos
inc
push
pusha
sub
scas
sbb
mov
pop
aaa
lds
jp
out
mov
push
fsubrs
dec
mov
out
test
inc
scas
xor
sub
mov
outsb
jle
imul
pushf
sbb
mov
mov
xor
mov
sub
bound
scas
mov
lds
decb
sub
imul
and
fcoml
inc
push
inc
sub
loope
or
in
xor
push
push
sub
and
jmp
lds
test
jecxz
mov
ret
fcoms
inc
dec
lds
jbe
push
divl
cmp
push
jns
loop
cmp
cltd
add
mov
push
out
ss
mov
incb
mov
sbb
rep
dec
mov
mov
scas
std
and
divb
fs
push
and
push
lahf
insl
cmp
push
fcoms
xchg
mov
cltd
cmp
push
pop
sysenter
cltd
push
insl
push
push
addr16
aam
jge
aad
stos
pop
or
sub
add
push
js
ja
xchg
rcr
roll
fidivs
lcall
test
inc
dec
lods
rolb
mov
mov
aad
test
rcl
fcomps
cmpb
js
fst
dec
or
clc
scas
js
mov
ret
cmp
mov
out
test
cld
push
jae
lcall
shlb
lds
enter
addl
sbb
xchg
adc
pop
out
jnp
test
mov
sbb
and
icebp
mov
fidivrs
std
adc
aas
scas
in
dec
out
jge
xor
jg
mov
add
shr
jecxz
sahf
mov
mov
pop
add
dec
sbb
loope
mov
xchg
popf
sbb
ljmp
cmpsl
js
jg
leave
push
mov
insl
ret
movsl
or
ret
aam
xlat
adc
popf
in
push
in
sub
push
cmp
inc
mov
xchg
jb
sub
int3
stos
ds
test
popf
pushf
xchg
shlb
cmp
shlb
insl
mov
sbb
xchg
jge
sub
xchg
cmp
jno
stos
mov
aad
orb
inc
inc
rorb
in
jnp
rclb
jns
in
jecxz
adc
dec
mov
and
dec
xchg
and
or
mov
dec
das
or
iret
ret
arpl
fstpl
add
pushf
fs
pop
mov
sbb
pushl
sub
popa
dec
int3
inc
inc
lock
lods
or
jno
cmp
cs
sbb
loop
mov
dec
xchg
pop
xchg
jb
fwait
out
rolb
mov
daa
lock
call
add
sbb
int3
jne
ret
pushf
pop
shrl
push
xchg
inc
xorb
or
and
inc
pop
sarl
jae
sahf
subl
push
sbb
sbb
push
orl
xor
ss
cmp
xor
jecxz
xchg
dec
mov
push
jp
add
inc
sub
adc
inc
jae
xchg
jp
fldt
ret
sbb
jmp
fcoms
icebp
jle
lea
jecxz
call
ret
stos
cmc
or
dec
mov
aas
aad
dec
push
xchg
add
sbb
jl
leave
in
jb
shll
int
cmp
gs
pop
xor
pop
lds
pop
jmp
jecxz
call
cmp
xchg
and
add
cmpsl
sub
push
mov
sub
insl
mov
dec
leave
movsl
jle
sahf
int3
or
xor
in
cmp
nop
ja
inc
or
imul
fbstp
jmp
jecxz
and
repz
push
inc
inc
jmp
mov
scas
test
jb
decb
das
mov
jmp
and
cmp
test
jge
pop
aam
pusha
sti
add
add
loope
movsl
fdivrp
hlt
int
pop
lock
insb
xor
sub
push
int
int3
jle
sbb
insl
sar
pop
cld
vpmaxub
dec
sbb
mov
cmp
sub
js
dec
jge
xchg
mov
add
cmp
mov
js
mov
popf
mov
bound
test
movsl
cmc
nop
inc
jl
inc
cmp
leave
fistpl
addr16
imul
test
add
pop
roll
mov
mov
imul
mov
das
cmpsb
cmpb
pop
rcr
fdivr
adc
clc
stos
push
repnz
fdivl
js
dec
xor
fstpt
inc
cmpsl
mov
pusha
xor
shl
sbb
dec
in
mov
add
pushf
pop
xchg
out
mov
sti
sarl
pop
shlb
imul
rcrb
and
fnstsw
std
sbb
add
out
xchg
cmp
fstpt
out
sub
pop
enter
in
je
leave
push
inc
sbb
gs
jmp
iret
push
mov
aas
dec
outsl
mov
pop
dec
popf
dec
add
pop
loop
aam
and
cmp
dec
inc
dec
aaa
test
add
mov
sub
pop
xor
jbe
jecxz
dec
jmp
inc
test
cmc
jmp
call
cmp
xor
rolb
cmpl
adc
and
cmp
jns
shlb
ret
icebp
mov
out
mov
cli
out
mov
xor
sub
push
repnz
popf
xchg
inc
ss
adc
push
into
pop
test
shlb
int
ficomps
shl
cmpsl
sub
cmpsb
add
iret
inc
dec
scas
divl
xchg
mov
sarl
fisubrl
addr16
adc
mov
push
jae
sub
lock
int3
sbb
xchg
sbb
jae
xchg
mov
adc
mov
scas
mov
popa
popf
mov
push
js
xchg
addr16
and
or
test
add
push
push
mov
inc
nop
mov
dec
lds
and
xor
jns
or
pop
loop
mov
mov
add
xor
orb
jmp
andb
fwait
mov
xor
enter
repz
inc
mov
stc
mov
sub
jns
sub
sub
cmpl
pop
clc
gs
mov
add
mov
sub
scas
dec
pop
push
mov
ss
xor
sub
push
sub
mov
leave
into
push
add
mov
stos
fmuls
or
adc
fs
push
jg
mov
shll
in
sbb
mov
dec
inc
inc
cmp
cltd
lods
movsb
into
inc
sbb
out
jmp
shrb
arpl
lret
lcall
ret
mov
xor
in
ficoms
loopne
jns
test
fs
pushf
int3
mov
jb
leave
scas
arpl
lods
jno
adc
push
jno
jg
mov
and
mov
out
sbb
lret
add
sub
inc
pop
cmpsb
or
gs
xchg
ljmp
es
outsb
add
daa
pop
popa
mov
mov
add
and
adc
mov
in
push
orl
or
dec
into
xchg
les
fsubrp
inc
into
out
out
js
inc
add
mov
aas
pop
or
xchg
loopne
inc
or
pusha
sub
jle
add
push
adc
pop
call
ror
dec
out
cmp
push
adc
lahf
cmp
mov
pop
scas
push
call
in
jbe
outsb
stos
mov
pop
or
mov
sbb
inc
cld
insl
dec
iret
xor
or
aas
sarb
xor
mov
sarl
mov
roll
xor
or
mov
and
adc
imul
sbb
pop
idivl
sub
xchg
add
push
and
inc
push
xor
jns
jbe
inc
into
inc
add
or
stos
ljmp
iret
jb
mov
inc
xor
or
jge
rep
outsb
or
dec
sbb
pop
aad
push
movaps
pushf
iret
sub
mov
cmc
out
add
xlat
xchg
mov
fs
pop
push
lock
inc
ss
inc
mov
pop
mov
sbb
push
and
js
lcall
inc
fbstp
inc
add
xor
cmp
popa
mov
push
fcom
lret
arpl
xchg
out
pop
push
push
or
adc
outsl
sarb
xchg
pop
inc
push
mov
out
jle
aam
xor
outsb
adc
add
sbb
addr16
out
sti
subl
test
sub
add
int3
or
idivl
push
mov
daa
loopne
mov
dec
aaa
jp
sub
loope
pop
and
and
sub
dec
push
pop
sub
push
sub
cmp
outsl
ds
orl
xchg
cwtl
stc
mov
ljmp
cmp
call
add
ljmp
push
inc
repz
pop
pop
hlt
mov
aaa
jno
aam
mov
adc
xor
lret
or
inc
cmpsb
rcll
jge
andb
test
mov
jo
cmp
add
ss
push
mov
pop
dec
jmp
xchg
adc
mov
ret
cmp
out
bound
pop
pop
xor
ss
jge
mov
jae
mov
stos
incb
mov
mov
nop
mov
addr16
sbb
in
fildl
cmp
movsb
and
sbb
add
leave
iret
out
pop
fwait
and
mov
insb
inc
sahf
popf
cli
sahf
in
mov
movsl
mov
sti
enter
pop
nop
xchg
push
sbb
std
sbb
push
repz
push
out
push
jns
aam
call
xor
out
enter
je
add
add
push
sub
lea
scas
lea
in
sub
jo
inc
push
add
push
and
dec
adc
pop
das
xor
jle
mov
add
shr
dec
imull
scas
push
lret
dec
dec
add
out
inc
jecxz
addr16
push
mov
stc
in
jno
in
or
add
mov
xchg
sub
in
push
test
pop
cmp
push
mov
adc
aas
dec
out
pop
divb
push
subl
lret
cmc
pop
and
dec
xor
add
rcrl
adc
dec
mov
pop
in
adc
je
xchg
and
test
ret
mov
enter
push
xor
xor
sub
mov
and
pop
inc
shl
movsl
cld
jne
mov
in
mov
push
sbb
dec
sbb
ret
push
cmp
xchg
imul
fdivrl
xor
jecxz
cli
pop
or
jb
rclb
lea
add
mov
in
cmpsl
inc
ja
push
add
mov
ror
or
mov
or
cmc
push
fs
jb
adc
push
and
and
jl
mov
in
cld
das
fadds
mov
aad
mov
pop
adc
cmp
jecxz
jp
jae
fstl
cltd
ljmp
lret
xchg
pop
es
in
int
sub
or
push
cmp
push
mov
xchg
jl
push
dec
pop
push
sub
dec
scas
xor
push
jge
push
stos
push
mov
push
fucomp
pop
mov
into
or
adc
inc
dec
out
push
test
mov
loopne
lods
mov
pop
lea
sub
int
cmp
cmp
mov
pop
push
icebp
sbb
mov
jo
loope
inc
sarl
out
xlat
cmp
pop
cli
add
push
fs
popa
shll
xchg
adc
mov
dec
fisubrl
pop
jge
xchg
in
popa
stos
mov
dec
ret
iret
jecxz
mov
fmuls
test
cmp
or
jge
fsts
jns
std
test
je
in
or
inc
outsl
cmp
push
or
and
sbb
ret
mov
mov
cwtl
xchg
fcmovnbe
lods
clc
xchg
jmp
jae
fs
fists
dec
jnp,pn
aaa
fcmovnb
cmp
pop
out
loop
adc
sahf
nop
cmp
fcoms
insb
pop
cmp
insl
dec
xchg
jae
popa
mov
sahf
test
push
mov
xchg
mov
jp
add
push
sbb
push
fwait
insl
pop
bound
ljmp
fsts
add
xchg
mov
push
mov
inc
jg
nop
mov
cmp
sbb
rolb
pop
mov
mov
orb
mov
fsubrs
add
insb
sub
rcr
mov
scas
aad
push
jecxz
sub
mov
push
xchg
je
mov
push
out
cld
shr
sub
scas
lea
and
movsl
sbb
repnz
sub
loop
adc
and
push
data16
inc
xchg
outsl
js
mov
jb
sbb
int
roll
lret
sar
xchg
xor
int
and
jne
in
insb
imul
ljmp
lea
out
mov
pop
int
scas
xchg
add
push
cld
push
dec
mov
ja
cmp
hlt
mov
or
fcmovnbe
test
mov
inc
sub
xchg
or
ljmp
mov
add
lock
or
push
sbb
or
fwait
fwait
movsl
icebp
inc
repnz
sub
mov
movl
pop
mov
lahf
push
dec
inc
das
aaa
mov
mov
pop
stc
movsl
sahf
fisubs
mov
lret
std
push
lcall
cmpsl
mov
fists
mov
leave
shlb
popf
sbb
sub
sub
addl
subl
ds
cmp
movsb
imul
aas
rcrl
lret
push
enter
lock
rorb
and
sub
add
imul
rcll
pop
pop
rcrb
fcmovnu
stc
mov
push
jmp
pop
xchg
ret
cmp
stc
and
es
xchg
fdivrl
cmc
daa
add
gs
jecxz
pop
or
call
test
shlb
inc
dec
pop
pop
inc
adc
fcompl
inc
push
movsb
sub
pushf
xchg
mov
loope
or
loop
mov
sub
mov
cmp
mov
push
cmp
aaa
leave
or
mov
add
movsb
sub
pop
sarl
xchg
imul
jg
outsl
pop
loope
cli
xor
insb
sub
in
insl
cmp
push
lahf
ret
inc
pop
jno
adc
sarb
iret
lock
fistpll
sub
sbb
cmp
fistpl
andb
mov
sub
sub
xchg
fldt
data16
adc
ljmp
movsl
pop
lds
mov
xchg
mov
popa
inc
push
stos
aaa
sub
imul
dec
test
adc
test
push
ret
lods
lods
xchg
into
add
pop
stc
sahf
lret
sub
fsub
fstl
lret
ds
dec
inc
dec
stos
dec
repnz
xlat
je
repnz
cmpsb
sbb
es
lahf
dec
test
dec
clc
inc
adc
loop
repz
pop
clc
outsb
push
xchg
jge
xchg
loopne
mov
push
push
hlt
sti
jno
push
sub
mov
gs
lcall
inc
mov
scas
xchg
mov
es
sub
call
or
repz
pop
dec
adc
cmp
xchg
cwtl
fbld
cmp
aaa
dec
cmp
cli
dec
popa
inc
cmp
and
push
xchg
ljmp
jl
int
nop
inc
ds
in
dec
dec
push
mov
dec
out
out
sub
xchg
adc
fsts
lahf
ret
inc
repnz
leave
rclb
jg
gs
in
jae
sub
xchg
push
out
lock
mov
fld
jne
or
pushf
mov
pusha
adc
xchg
add
mov
inc
daa
or
cmp
pop
lock
dec
aaa
dec
sbb
subl
mov
das
stos
enter
lods
imul
mov
leave
dec
inc
jb
call
sbb
mov
fcmovb
cmp
push
cmp
scas
mov
loopne
out
xabort
cmp
mov
insb
or
sbb
sub
mov
mov
mov
out
cmp
enter
int
cmp
pop
inc
xor
dec
xchg
push
or
fistps
lahf
mov
test
jge
xchg
aas
adc
imul
into
inc
andb
mov
incb
fcomps
jl
xchg
or
cmpsb
add
or
mov
dec
cmc
add
jns
or
xchg
fs
ss
cmp
jp
adc
lea
mov
fucom
scas
leave
jmp
mov
pop
daa
ja
mov
pop
lcall
pushf
xor
shlb
rcrl
and
mov
lods
cltd
pop
test
inc
loopne
xchg
fsubp
rcl
jp
gs
dec
or
or
bound
popf
inc
pop
int3
mov
sub
ja
and
aam
mov
into
lock
jbe
das
sbbl
jbe
call
dec
outsl
jne
inc
fildll
adc
push
sti
jge
cmc
pop
dec
int
test
sbb
dec
std
cli
in
inc
sti
frstor
xorl
push
je
in
jo
fadds
push
aaa
out
mov
clc
outsb
ficoml
lret
jae
gs
push
mov
or
xlat
mov
xor
sub
orl
xchg
daa
inc
loop
push
mov
pop
or
inc
adc
jp
and
enter
enter
out
jne
push
addb
pop
add
cmp
lds
mov
out
fstl
dec
shrb
push
push
inc
push
xchg
pusha
div
push
lret
scas
or
cmp
rcl
xchg
lret
into
addb
jmp
mov
pop
sub
dec
aam
and
rolb
mov
xchg
out
mov
sbb
xor
xchg
push
lcall
dec
clc
ljmp
stos
sub
test
push
dec
pop
dec
cmpsl
jg
out
sub
xchg
aaa
adc
in
lss
dec
in
inc
sub
xor
add
jae
inc
orl
or
pop
sbb
mov
insl
rcrl
mov
jae
scas
mov
sahf
lret
sbb
insl
shr
or
mov
inc
cmp
repz
xchg
sub
push
push
push
mov
sub
jp
cli
push
mov
lret
jge
inc
fadds
dec
sarb
adc
jae,pt
cmc
pop
sahf
movsl
push
mov
cld
andb
out
les
mov
hlt
pop
mov
jae
pop
and
js
mov
jp
add
cmp
xchg
mov
cmp
xchg
aaa
jmp
ret
es
lcall
or
sbb
ja
je
push
pop
movsl
cmp
fmulp
das
lcall
mov
mov
pop
addl
mov
ja
xor
repz
shrb
insl
cmp
lahf
sbb
lret
cs
push
xorb
push
push
in
nop
pop
push
dec
push
xor
jg
lahf
mov
adc
sbb
dec
into
in
je
mov
dec
repnz
imul
or
adc
fstpl
lret
testl
jmp
fcoml
aad
loope
cmp
je
shr
cmc
call
pop
mov
lret
ret
adc
sub
into
fs
imul
add
int3
cli
push
xor
sarb
and
imul
fs
pushf
sub
mov
adc
cmp
or
cld
lods
inc
push
or
lock
xchg
mov
loop
clc
xchg
mov
sbb
and
push
test
mov
fwait
add
fcom
xchg
pop
in
push
stos
lahf
jle
jl
bound
test
in
pop
cmp
rcll
stos
sub
insb
mov
cmp
push
addr16
daa
mov
ja
mov
ja
icebp
insb
sarb
xchg
push
dec
push
xchg
jg
mov
inc
rolb
pop
pop
push
add
outsb
jae
mov
insb
push
not
jne
dec
bnd
dec
outsb
jns
or
sub
ss
pushf
cmp
dec
loop
das
xlat
imul
sbb
lret
rcll
aas
lea
fistpl
hlt
xchg
arpl
call
aas
add
lahf
nop
jge
add
jl
adc
dec
ret
lret
das
scas
loope
shll
jecxz
mov
jo
movsb
jae
lahf
arpl
adcl
dec
mov
cltd
lret
jl
xor
cmp
out
xchg
inc
push
sub
jg
rcll
subl
mov
leave
push
and
adc
in
mov
sbb
iret
jge
mov
ja
insl
stos
jg
and
and
ret
pop
and
arpl
cmc
pop
push
outsb
fisubrs
dec
out
xchg
andl
adc
arpl
push
repnz
fldt
adc
gs
and
sarb
cmp
nop
stos
fldt
shll
inc
stos
insl
sbb
ja
pop
lea
sub
mov
out
sti
jmp
add
mov
mov
mov
sti
ja
xlat
int
arpl
fcompl
mov
divb
or
pop
or
fists
fwait
ret
jo
fsubrp
imul
or
add
inc
pop
cs
mov
loop
pop
out
icebp
mov
aaa
addr16
ja
sbb
rcl
in
push
jno
mov
in
test
mov
xor
adc
scas
push
or
mov
jo
jmp
in
jmp
sub
cmp
je
or
push
mov
jmp
outsl
les
jp
cmpsl
lcall
push
clc
xchg
mov
ss
stos
in
ret
mov
mov
mov
xchg
ds
push
loopne
fisubs
dec
jge
lahf
loope
or
dec
dec
mov
push
rcrb
push
xor
inc
sahf
or
sbb
push
dec
jno,pn
xor
mov
pop
lret
loop
stos
roll
shlb
add
ret
adc
mov
jmp
jo
je
dec
std
and
cmp
repz
jl
in
jns
nop
jmp
mov
fnstenv
outsb
roll
sarl
je
push
cmp
fadds
inc
inc
adc
push
add
fxam
push
sbb
xor
fnstsw
xchg
mov
adc
xor
pushf
and
mov
enter
sbb
notb
sub
mov
pop
out
outsb
jae
in
lahf
cmp
popa
mulb
adc
pop
outsl
ret
mov
xor
ret
icebp
enter
cld
pop
dec
jbe
xchg
fwait
jge
sbbl
mov
inc
sub
call
dec
mov
fisubs
ds
jbe
xor
adc
adc
sarl
lock
lcall
rcr
sub
pop
fnsave
xchg
jecxz
mov
iret
or
loop
sub
loope
lret
xor
add
lcall
xchg
aam
clc
jmp
bound
rolb
out
adc
ret
dec
shrw
fcompl
jp
out
sub
mov
leave
xor
pop
lret
jne
inc
cmp
cmp
push
fmull
sbb
imul
cmp
push
pop
dec
sbb
repnz
xchg
popf
mov
rorb
lcall
lock
in
xor
cmpsb
bound
out
push
es
push
enter
aaa
mov
dec
inc
frstor
in
xchg
lret
sbb
aas
adc
fisubl
mov
xorb
sar
int
pusha
adc
sub
psubw
add
sbb
and
daa
and
jecxz
test
add
aaa
ret
loop
enter
int3
aaa
push
cwtl
je
push
rcrl
in
inc
push
lcall
mov
sbb
jae
cli
pop
es
sub
mov
jne
addr16
sub
fwait
pop
fcmovne
mov
iret
xorl
fcompl
ror
sbb
cld
xor
mov
daa
shr
dec
inc
cmp
dec
in
int3
mov
sbb
dec
subl
jle
add
cmp
es
test
cltd
ja
xlat
js
push
and
pop
testb
sbb
cmpsl
sbb
outsl
xchg
call
loope
daa
sbb
dec
in
ds
idiv
les
mov
ja
ja
adc
mov
loop
jg
push
mov
cs
lods
cmp
frstor
pop
add
repz
cmp
je
mov
ljmp
sub
add
sub
jge
add
or
hlt
cmpsb
inc
cmp
fiaddl
push
xor
int
out
dec
push
js
push
dec
jbe
pop
iret
push
loop
xor
out
mov
imul
xchg
popl
xor
stc
ror
cmp
mov
lods
dec
dec
cltd
adc
ja
pop
mov
fs
cmpsb
lds
add
clc
pushf
imul
aam
lods
cltd
cmp
sti
push
sub
xorb
not
imul
push
and
int3
jb
mov
mov
stos
pushw
shrb
push
incl
push
int3
inc
jmp
pop
and
popa
cmp
lea
sti
mov
inc
and
sbb
jmp
xchg
add
test
cmp
pop
inc
mov
pop
push
gs
mov
push
stc
imul
adc
in
xor
frstor
pop
ret
les
test
xchg
dec
pop
cmpsb
adc
push
cmc
mov
or
sub
testl
cmpsb
dec
das
mov
add
xchg
mov
cs
or
mov
outsl
push
shrb
sbb
ret
jge
jle
push
fs
xchg
mov
fcmovnbe
fistl
jbe
negb
loopne
add
aam
cmovo
shlb
sbb
sbb
dec
push
fwait
lcall
cmc
add
aam
add
dec
scas
pusha
iret
adc
inc
mov
cmp
mov
dec
sbb
sub
dec
sbb
clc
fdivrl
cmp
lahf
or
popa
push
push
sub
out
shl
dec
sub
jne
and
pop
je
mov
ss
xchg
call
out
insl
ret
js
xorl
je
fcoml
pop
mov
loop
jle
and
movq
dec
mov
aas
mov
cmp
cltd
adc
lahf
xlat
inc
stc
in
sarb
int
arpl
add
fmuls
mov
cmpsl
repnz
call
les
and
xchg
and
or
jne
adc
in
stos
jb
mov
inc
mov
xchg
xchg
cli
vpperm
dec
push
mov
scas
push
lds
push
xorb
jo
fcoms
mov
sub
and
arpl
cmpsl
mov
mov
scas
lds
insl
xchg
push
xor
xlat
xor
iret
jecxz
adc
fidivrl
int3
jno
mov
cmp
inc
jle
test
decl
in
ficoml
out
push
sbbl
scas
lock
hlt
sub
enter
lahf
repz
leave
jo
or
icebp
test
inc
jle
sub
clc
inc
xchg
xor
and
inc
mulb
fbld
xor
out
std
icebp
mov
lcall
into
or
ja
vpcmpgtd
push
jne
inc
imul
imul
pop
mov
sbb
cmpsl
xor
std
dec
outsl
adc
scas
push
or
jecxz
xor
or
scas
enter
es
lcall
pop
decl
lods
fs
popa
popa
jnp
sti
in
lock
mov
addr16
mov
shll
add
fnsave
cmpsb
xchg
sub
out
aas
cltd
dec
aas
sbb
or
add
lock
jae
es
pop
int
in
hlt
fs
jb
rcrl
add
xor
test
jl
cli
mov
mov
adc
stc
es
lret
sbb
jl
and
ljmp
adc
mov
ss
cwtl
push
sti
addl
push
pop
xchg
sbb
mov
push
roll
cwtl
mov
adc
fsubrs
outsl
jnp
loopne
popl
loopne
and
adc
push
inc
cmp
cmp
imul
push
cmp
push
popf
imul
push
pop
test
vpmacsww
sub
lret
dec
xor
rcr
xchg
jo
ds
add
fcoml
lea
cli
lcall
push
movsl
add
push
mov
add
out
shr
cwtl
mov
fwait
leave
mov
outsl
shll
xor
or
sarl
xchg
push
inc
mov
add
fldenv
adc
in
push
orl
in
fisttps
push
mov
lcall
movsl
cmp
pop
jp,pn
or
xchg
xchg
mov
cld
rclb
adc
xor
push
mov
xchg
adc
xchg
and
sbb
push
xchg
cmp
pop
xchg
je
sub
push
test
mov
sbb
ret
test
or
fxch
ds
jmp
shlb
ja
int
into
outsb
subb
mov
push
mov
mov
lahf
rorb
ret
and
add
dec
jne
push
jg
sbb
inc
daa
jmp
jge
xchg
scas
scas
add
insb
sbbl
add
ret
ffree
stos
ficompl
jecxz
mov
jne
lods
lahf
outsb
and
int
cmp
shlb
jo
repnz
or
jno
dec
ret
lea
rcrb
ffree
pop
out
dec
orb
cli
ljmp
loopne
pshufw
test
cmp
sub
sahf
lds
or
pop
jae
aad
push
lods
add
rcll
pop
fnstenv
xor
pop
outsl
pop
xchg
dec
mov
ret
push
cli
pop
stos
repnz
stos
mov
dec
aas
cltd
sbb
sub
paddd
fisttpl
js
test
lret
inc
xor
mov
std
add
ss
cmp
mov
test
sub
inc
addr16
test
adc
add
movsl
mov
dec
xor
nop
adc
in
filds
xchg
mov
inc
or
mov
and
or
sti
jecxz
icebp
sub
out
lcall
lock
pop
je
dec
lahf
lret
sbb
loope
xchg
push
sahf
or
add
cmp
inc
mov
inc
xlat
and
add
push
xchg
mov
je
mov
push
fwait
sub
pop
xchg
mov
cmc
mov
int
enter
es
nop
jno
dec
cwtl
xor
jnp
add
xor
imul
aaa
ret
xor
xchg
cwtl
add
movsl
xor
adc
outsl
les
push
add
and
dec
fs
dec
jbe
jl
pop
jmp
cs
dec
cs
not
int3
testl
jge
mov
out
out
pop
pop
je
insb
cmp
ret
test
roll
movsb
int
and
sbb
lds
mov
pop
lock
xor
mov
pop
mov
adc
mov
xor
jae
inc
or
fmull
dec
scas
dec
fdivrl
jge
inc
inc
or
movsb
out
mov
cmp
sbb
cli
cmp
or
ret
push
shrl
sbb
jg
hlt
subb
sarl
shrl
mov
repnz
pop
mov
cmp
mov
mov
jge
int
popf
andb
cwtl
idivl
movsl
push
inc
jo
loopne
ljmp
rcrb
push
mov
nop
hlt
xor
aam
sbb
mov
or
pop
jb
mov
sbb
inc
inc
push
mov
xor
cmp
popa
loop
hlt
test
cmp
pop
jge
or
in
ss
jb
dec
pop
rolb
xor
clc
addb
push
sub
imul
or
inc
mov
pusha
nop
inc
out
adc
stos
fcoml
cmp
xchg
sub
or
mov
mov
dec
addr16
loopne
mov
out
dec
mull
das
mov
jo
adc
lret
pop
lret
mov
jg
push
xor
mov
mov
xor
pop
inc
mov
inc
inc
arpl
movsb
lock
lds
push
mov
dec
loop
pusha
mov
dec
cmpsl
fnstsw
sbb
dec
and
leave
inc
xchg
dec
test
pop
adc
inc
xchg
push
scas
add
mov
into
sub
lret
mov
adcl
push
in
sbb
lds
scas
in
jno
mov
movl
dec
inc
xor
inc
jo
mov
psraw
mov
test
das
jg
sub
test
dec
jae
cmp
pusha
fwait
pop
cmp
shll
clc
inc
mov
fwait
cmp
jo
incb
dec
add
mov
sbb
test
enter
icebp
inc
push
xor
das
cmp
pop
leave
adc
pop
jae
vmovhps
daa
sysexit
repz
jge
or
popf
add
add
xchg
push
inc
sub
add
adc
out
repz
movsb
inc
aad
pmulhuw
stc
dec
fcomip
xor
sbb
jmp
lret
test
hlt
adc
cmpsb
sti
xor
pop
outsl
loop
icebp
mov
lods
in
lret
rcr
inc
jg
enter
loopne
mov
gs
mov
jbe
adc
in
daa
mov
inc
cmpl
enter
pop
sti
or
jmp
xorb
fiadds
inc
shl
scas
xor
push
icebp
jp
push
xor
adc
push
mov
stos
mov
inc
xor
daa
aaa
lret
inc
adc
ficomps
inc
outsl
jns
sbb
push
jne
mov
xchg
and
in
test
repnz
sub
sbb
pop
add
push
bound
and
call
xor
ds
cmc
xchg
test
dec
adc
push
mov
or
adc
adcl
or
insb
lds
bound
or
inc
lods
stc
fsubs
mov
outsb
filds
add
data16
ds
inc
jecxz
mov
jmp
push
es
adc
loopne
or
test
sbb
xor
imul
lods
mov
sub
sti
das
mov
mov
cmp
loopne
jmp
gs
mov
push
xchg
inc
fimuls
mov
push
mov
icebp
xchg
cmp
push
mov
pop
or
push
fs
add
pop
adc
cli
bound
mov
push
mov
sarl
pop
loopne
jmp
aaa
decl
fists
icebp
add
dec
in
daa
movsb
push
dec
inc
mov
roll
ss
and
push
xor
mov
rep
and
pop
outsb
sahf
xor
test
dec
add
bound
fwait
cmp
jno
inc
repz
push
call
and
std
ja
sub
adc
call
jmp
and
xor
jge
inc
mov
stos
lock
lods
lea
inc
and
pop
or
je
sub
aaa
ds
sub
mov
pop
pop
int3
inc
inc
sbb
movsb
imul
insl
push
packuswb
cwtl
sahf
bound
icebp
movsb
rcrb
sbb
int
popa
imul
push
xchg
cmp
xor
and
es
fstl
push
fidivs
cmpsb
lahf
mov
cwtl
inc
ret
push
pop
aaa
lret
pop
push
popf
cmp
enter
int
arpl
rcr
mov
xor
into
popf
mov
leave
sub
xchg
loopne
add
inc
adc
insb
push
xor
in
cmc
dec
or
int3
stc
and
lods
jnp
filds
dec
pop
lock
es
mov
sbb
shlb
mov
leave
mov
inc
fistps
cmp
mov
shll
std
xlat
daa
mov
mov
xor
dec
mov
push
push
sar
int3
cli
fwait
imul
daa
inc
mov
sub
mov
icebp
add
adc
cmp
mov
and
shll
shlb
fsub
outsb
hlt
add
ficompl
cs
pushf
pop
int3
mov
pop
mov
xchg
movsl
pusha
mov
subb
insb
ja
aaa
push
xor
xor
clc
out
add
in
add
add
insl
inc
cmp
xchg
push
test
nop
jle
mov
xlat
pop
loop
mov
bound
shr
pop
add
stc
std
cmp
stc
rol
xor
mov
lret
mov
outsl
push
mov
push
or
jecxz
shlb
jecxz
leave
push
cmpsl
loop
xchg
insb
mov
sbb
mov
cmpsb
fildll
add
add
mov
imul
arpl
inc
fsubrs
setl
sub
adc
or
pop
pushl
arpl
call
xchg
pop
cli
out
inc
out
ss
arpl
jp
ljmp
sbb
outsl
jae
ret
aaa
or
dec
lea
dec
mov
push
test
mov
sbb
mov
loop
adc
insb
adc
jle
jecxz
data16
sub
and
cmp
lea
mov
loop
mov
fidivrs
pusha
lret
jmp
mov
clc
int3
imul
test
sub
scas
sub
or
pop
mov
xchg
sbb
fwait
cmpsl
sub
xchg
mov
dec
data16
rorl
out
mov
int
mov
cmp
push
outsl
cwtl
sub
dec
repz
sub
les
mov
xor
xchg
and
pop
push
cwtl
roll
sub
inc
push
lods
insl
push
adc
std
cwtl
pop
std
fbstp
ljmp
ds
fistps
andl
jmp
sbb
iret
outsb
sbbb
pop
sub
dec
xor
nop
push
arpl
scas
add
ja
jns
cmp
icebp
imul
ja
ljmp
test
sti
cltd
std
mov
je
adc
push
repnz
repz
cmpsl
pop
jl
in
or
push
sarl
push
cld
mov
out
mov
jne
push
or
mov
andl
arpl
jno
insb
ss
dec
repnz
jae
mov
or
adc
sbb
push
push
xchg
or
jbe
cmp
fwait
and
sti
icebp
jae
push
test
outsl
js
push
pop
push
adc
mov
lret
imull
mov
rolb
mov
or
jle
lahf
arpl
insl
mov
psubw
das
xor
cwtl
sub
jl
scas
std
mov
mov
mov
loope
addr16
fdivrs
jbe
stc
jl
ret
jecxz
daa
dec
mov
sub
lret
inc
in
dec
repz
sti
stc
push
test
dec
stos
sbb
loop
jmp
lods
mov
outsb
cmc
div
out
xor
cs
mov
sbb
in
cmpb
aas
lret
dec
jge,pt
out
test
mov
hlt
xchg
outsb
inc
and
push
loop
pop
cld
insb
inc
sub
dec
jge
out
in
cmc
cmp
add
mov
inc
cs
jnp
fdivrl
xchg
pop
dec
stc
push
pop
fwait
sbb
cwtl
mov
loope
pop
cmp
mov
pop
sbb
jmp
movsb
cmp
mov
jae
push
adc
lea
jnp
cld
imul
ja
push
leave
push
push
mov
pop
mov
movsl
repz
fdivs
ja
movsb
fldenv
push
das
or
ds
pop
mov
es
xor
mov
xchg
and
movsb
sar
int3
push
sbb
imul
clc
enter
xchg
sbb
addl
cmp
xchg
jle
xchg
je
jle
or
sbbb
or
adc
push
ret
lea
inc
inc
mov
pop
xchg
aas
and
fwait
mov
scas
pop
out
cmp
imul
ret
scas
sub
sbb
xchg
out
add
rorb
add
push
sbb
sub
popf
adc
adc
add
ret
pop
adc
xchg
enter
shr
jne
ljmp
cmpsl
sbb
sbb
cmp
inc
mov
jg
or
cmpsl
mov
mov
mov
ror
xlat
in
fldcw
push
insl
cmp
rolb
orb
add
ja
out
adc
cs
xchg
inc
xor
pop
loop
out
pop
fists
xchg
inc
and
add
add
mov
rcll
xor
aad
add
fisttpl
out
cli
dec
pop
not
pop
test
xchg
xchg
and
jmp
cmp
outsb
mov
imul
dec
in
cmpsb
mov
jle
es
jae
adc
ss
shll
int
mov
sub
mov
xchg
repz
add
inc
ror
jmp
inc
sub
xchg
inc
push
add
dec
test
adc
or
cmp
mov
dec
dec
or
pushf
fdiv
lea
jnp
les
or
sarl
adc
mov
dec
mov
push
pop
clc
loope
fmuls
fwait
int
xor
add
andb
mov
pop
orl
push
push
pop
sbb
pop
notl
mov
add
or
int
sub
cs
adcl
and
push
leave
or
jg
ja
sahf
loop
jecxz
push
and
mov
loop
lods
rcll
int
popa
ret
pop
xchg
test
adc
mov
cmp
mov
ffreep
faddp
and
cltd
ret
adc
pop
sbb
jb
int3
jle
adc
jle
aaa
sar
add
push
or
xor
jnp
cli
stos
xchg
test
mov
xchg
repnz
xor
lock
dec
call
xor
ret
insb
mov
and
xlat
cmc
cli
sbb
cmpsl
or
push
add
fs
sbb
imul
push
mov
hlt
fisubs
scas
imul
dec
cmp
mov
jge
push
cli
push
mov
pop
jmp
inc
ror
adc
or
push
jne
push
adc
cmp
sti
jmp
pop
xchg
insb
into
lods
xchg
sbb
lods
mov
push
les
mov
sbb
ficoms
sub
cmp
cmpsb
jno
lea
xchg
or
movsb
inc
pop
mov
mov
popa
sahf
jg
cmpl
jno
loop
cli
mov
gs
imul
push
push
sbb
shlb
dec
inc
push
loope
pop
cmp
and
cmp
mov
fildl
aad
sti
cwtl
jl
mov
cli
sbb
add
shr
mov
outsb
adc
outsb
lods
fsubr
fwait
pop
jmp
int
fiaddl
aaa
push
out
jb
leave
push
jbe
jo
cmc
sub
rcrb
jno
into
dec
lret
sub
or
cmp
lcall
andb
push
pop
mov
fdivl
outsb
out
mov
and
idivb
int3
push
push
ds
pusha
xchg
int
filds
cwtl
sbb
cmp
mov
push
add
ret
lock
mov
test
fdivrl
sub
jne
rolb
sbb
mov
mov
lret
addb
outsb
fsubl
add
xor
clc
inc
add
mov
cmp
sbb
or
test
cld
adc
inc
mov
mov
insb
neg
jecxz
lret
pop
add
int3
scas
int3
fstl
std
push
dec
stc
inc
cmpsl
xchg
lret
and
ret
xchg
pop
ficompl
and
in
sub
jl
aas
je
lret
nop
sub
sbb
daa
dec
loop
jb
jl
add
insb
insl
test
xlat
pop
mov
in
adc
mov
andb
aad
out
lcall
cmpsl
test
pop
fidivl
pop
and
lock
insl
out
loop
out
stc
cmp
sbb
lods
outsl
cltd
mov
call
sub
adc
insl
pop
mov
add
jae
jle
add
scas
mov
ret
push
push
push
fs
dec
mov
add
xor
fdivs
scas
stos
loopne
imul
and
rcrl
jle
jae
push
jmp
mov
and
insl
dec
movsb
std
pop
ljmp
add
sub
mov
adc
inc
nop
push
cmp
enter
sbb
mov
jnp
ds
roll
loopne
pop
mov
test
fstpl
fbld
mov
pushl
stos
leave
push
mov
nop
scas
icebp
sbb
or
scas
in
daa
jo
rcrb
inc
stos
or
shr
xchg
sti
inc
mov
jno
xor
das
movsl
inc
adc
xchg
fnsave
push
cmp
or
mov
or
jp
lret
push
push
push
fidivrl
lahf
mov
sbb
cmp
dec
test
xchg
out
call
ret
test
or
push
jle
cmp
das
dec
dec
es
pop
pop
fsubr
dec
fisubrs
jg
subl
jl
aas
ja
inc
loope
addr16
mov
xchg
dec
push
jno
mov
cmp
jmp
mov
sub
imul
xchg
mov
push
sbb
lea
data16
inc
into
rep
pop
xorb
roll
aaa
addl
hlt
das
adc
cmpsb
sbb
inc
fisubs
push
sub
test
popf
push
movsl
fcmovb
cmp
imul
jp
mov
lcall
cltd
cmp
movsb
jb
push
sbb
sub
dec
cmp
pop
bound
xor
in
or
lock
sarl
mov
xor
pusha
lret
mov
rcrl
mov
jns
cld
add
out
fsubrl
xorb
mov
push
das
push
test
fldenv
lods
xchg
subb
jmp
inc
mov
and
xchg
mov
hlt
out
testb
adc
fidivs
pusha
push
insl
ret
adc
dec
dec
icebp
cmp
das
gs
mull
or
cli
xchg
dec
mov
cmp
popf
ds
loopne
imul
jno
sahf
in
mov
js
mov
pop
jg
and
push
xchg
ret
pop
push
imul
xor
add
into
int3
push
jb
test
std
inc
jbe
daa
xchg
push
inc
js
jg
fisubl
mov
adc
or
pop
mov
mov
dec
subl
fistpll
in
sbb
testb
add
popf
data16
into
and
dec
push
push
in
or
fisubrl
sahf
mov
test
mov
jmp
loop
mov
icebp
test
loopne
inc
push
aam
movl
lahf
mov
dec
in
mov
std
xor
mov
mov
add
mov
fs
leave
mov
repnz
outsl
adcb
incb
scas
xchg
addr16
popf
dec
sbb
or
mov
mov
lods
mov
pop
jns
and
decb
inc
adc
mov
mov
fidivl
fidivrs
inc
add
mov
dec
aas
outsl
push
mov
add
daa
mov
bnd
fs
imul
dec
out
call
push
or
bound
mov
imul
repz
cmp
inc
xchg
fidivs
cltd
loopne
mov
jge
mov
rorl
jb
jp
xchg
lahf
mov
nop
psubsb
scas
adc
xor
fwait
jbe
push
ficoml
xchg
xchg
mov
out
jae
fcoms
pop
dec
xchg
stc
push
jge
and
cmpsb
stos
pop
inc
ret
imul
dec
int3
in
stos
push
shrl
inc
xor
pop
jo
stos
and
in
jne
jno
fidivl
movsl
addr16
scas
xorl
mov
pop
inc
gs
out
cwtl
push
rclb
cli
int3
cltd
jne
lcall
call
pop
inc
mov
jne
test
and
test
jbe
es
push
and
scas
pushf
outsb
xchg
pushf
xchg
in
ucomiss
arpl
cltd
adc
ds
push
pushf
stc
xchg
lret
mov
dec
lods
jno,pt
test
sbb
fwait
pop
mov
repz
stc
adc
aaa
ds
cwtl
pop
sub
dec
aad
insb
pop
aaa
inc
shrb
cli
ret
rcll
xchg
pop
push
inc
adc
test
mov
mov
fs
enter
repz
dec
imul
push
cmp
jmp
add
test
lcall
or
add
imul
jp
ds
fnstsw
sub
push
cmpsb
sahf
clc
rolb
jecxz
pop
je
out
or
jecxz
dec
vpminub
jnp
inc
rcr
in
lret
mov
lods
fstps
xchg
dec
outsb
mov
call
inc
in
ret
mov
aas
imul
push
and
test
pop
nop
js
or
outsb
jne
dec
push
xchg
xchg
push
jle
push
pop
cmp
push
cmp
mov
jecxz
stos
add
mov
pushf
shlb
ret
push
mov
imul
test
mov
out
and
loope
imul
lods
sbb
int3
loop
push
xor
imull
cld
loope
imul
xor
jne
xchg
call
push
fs
lock
stos
dec
movsb
cli
vpminsw
cmc
jno
inc
sub
into
leave
push
pop
sub
xchg
leave
shl
mov
jl
mov
xor
cli
add
mov
sbb
in
mov
xchg
in
adc
jb
lods
cmp
ja
decb
pop
cmp
mov
or
das
xor
mov
mov
jnp
dec
imul
arpl
mov
hlt
sahf
sarl
out
setne
enter
and
addr16
loopne
sub
test
clc
jp
mov
add
iret
sbb
in
or
popf
outsb
and
pop
fstpl
cmp
mov
fisubs
push
arpl
mov
push
repnz
stc
popf
in
repnz
rolb
push
daa
xchg
orb
and
mov
push
cmp
mov
imul
lahf
scas
pop
xchg
mov
sub
fnstenv
out
xor
dec
xchg
ds
fld
cmp
lea
push
iret
test
movsl
adc
aad
mov
pusha
flds
orl
mov
xor
mov
fsubrl
cmp
fwait
sub
das
jg
rorl
lea
je
mov
cmp
sbbb
cmp
aad
loop
repnz
pop
call
jecxz
cli
add
xchg
fwait
call
xchg
inc
cmp
lods
lret
test
cmp
ret
call
or
mov
ret
pusha
inc
stos
mov
jns
stos
jno
fwait
dec
push
inc
dec
outsb
cmp
push
dec
push
in
and
sub
adc
lods
mov
lods
int
jae
int
mov
cmp
xchg
lea
ret
dec
and
mov
fsubrs
mul
push
pop
leave
jp
int
xchg
push
in
rclb
sub
pop
push
xchg
rclb
cmp
cmp
or
push
pop
push
jle
scas
jmp
mov
lea
pusha
dec
leave
cli
fs
mov
out
xchg
sub
pop
stos
movsb
push
mov
loope
and
sub
pop
mov
test
adc
testl
iret
dec
ss
push
xor
add
mov
in
repnz
les
xchg
lock
and
imul
or
fsubl
cmp
xchg
data16
adc
mov
imul
sub
sbb
out
pop
mov
xor
leave
inc
fidivs
cmp
jo
in
cmp
push
test
jne
pop
lret
and
mov
add
repz
mov
cmp
inc
mov
jmp
imul
imul
push
clc
dec
movb
sub
out
sub
int
sbb
cli
mov
mov
pop
shll
push
std
data16
in
adc
or
ss
jns
je
mov
xchg
pop
add
add
sub
mov
fistpll
ret
stos
insl
bswap
lock
mov
cs
push
mov
sbb
dec
push
pop
jnp
push
mov
or
or
dec
mov
addr16
in
adcb
dec
ljmp
imul
and
inc
mov
dec
lds
mov
ror
repnz
sbb
into
movsl
pushf
pop
outsl
test
inc
dec
in
and
adc
ss
loopne
ss
test
aam
roll
out
sbb
mov
jbe
push
dec
inc
pop
pop
iret
sti
or
pop
cmp
xchg
and
jo
jmp
repnz
fadds
mulb
test
mulb
xlat
inc
adc
in
and
std
push
mov
push
push
cld
hlt
fldenv
mov
stos
negl
loopne
push
out
fmuls
fists
or
or
xchg
mov
movsl
sbb
adc
xor
sahf
sahf
pop
outsb
xor
cld
loope
dec
inc
adc
or
or
push
sti
lahf
in
ss
sbb
inc
push
stc
in
xchg
adc
andl
ljmp
jp,pn
cli
ret
adc
mov
sbb
jb
xor
aaa
jp
lcall
mov
sbb
cmp
sti
leave
pop
inc
outsl
aaa
rorl
add
xorl
mov
int
outsb
push
insb
or
mov
repnz
xor
xor
inc
jb
xchg
sbb
xor
sub
cmpsl
gs
sub
mov
stos
nop
push
add
imul
dec
je
cmp
cmp
mov
lods
jae
inc
in
fwait
sub
imul
pop
mov
dec
dec
cmpl
add
mov
dec
add
xchg
add
fcmovb
push
xorb
adc
dec
mov
hlt
dec
decl
jmp
mov
imul
std
lds
or
xchg
jb
loopne
sbb
mov
rcrl
push
bt
inc
jmp
test
stos
pop
mov
cld
mov
or
jecxz
push
lret
outsw
lret
ret
pop
sub
sub
lea
insl
sub
adc
sbb
jle
hlt
clc
clc
shl
add
xor
xlat
adc
adc
cmc
testb
jnp
dec
cltd
insb
scas
test
stc
std
sbb
and
mov
aam
fwait
xchg
mov
pusha
jle
and
pop
push
push
xor
xchg
xor
cmp
cmp
dec
lret
add
xor
push
in
inc
js
stc
mov
psrlq
pop
xor
push
mov
in
lds
fisubs
xchg
mov
jmp
outsb
push
add
bound
and
int
icebp
rcrb
mov
lret
aad
in
sub
int
loop
movsb
add
fstpl
pop
mov
lods
or
adc
movsb
insl
mov
push
push
gs
mov
pop
jb
jb
lret
hlt
pause
push
and
add
lea
ret
xchg
lcall
aad
mov
mov
dec
and
pop
ja
and
rol
clc
xchg
sub
movl
loope
mov
sahf
stc
sub
jge
mov
xchg
dec
movntps
pop
call
push
mov
push
mov
pop
andb
mov
sbb
movsb
jl
jo
std
repnz
add
mov
pop
call
sub
push
push
cli
ret
cmp
addr16
int
or
mov
jecxz
or
dec
xor
add
pop
stos
fdivp
inc
jns
pop
pop
inc
das
iret
nop
fistpl
mov
inc
cmp
or
lret
push
cmp
insb
fcmovne
mov
insb
shlb
cmpsl
pop
add
dec
xor
mov
jle
or
xchg
ds
sbb
lahf
rorb
sub
cmp
sarb
mov
and
xor
sbb
mov
mov
jge
xchg
push
das
fisubl
mov
movsl
lret
add
leave
cmp
mov
fsubl
movsl
or
mov
inc
insb
lock
xchg
idiv
dec
rolb
jbe
xor
adc
or
jno
push
jae
or
insl
or
mov
inc
sbb
dec
jno
addr16
imul
pusha
mov
add
rcrb
adc
cmpsl
lock
add
mov
cmpsl
or
and
or
mulb
out
addr16
or
jp,pn
pop
daa
rorl
lret
leave
loop
dec
add
mov
fistpll
lock
jp
cs
fidivl
jo
push
cld
fistpll
xor
mov
andl
inc
mov
mov
xor
cld
mov
jbe
out
fdivrp
iret
les
std
insb
sub
lock
aam
fildll
lods
gs
jae
aaa
inc
test
jmp
jecxz
inc
mov
mov
aam
jp
je
jle
sahf
mov
pushf
sub
add
jecxz
dec
rclb
add
out
mov
in
mov
pushf
lods
lock
cli
dec
pop
stc
push
dec
subl
insl
andb
lods
inc
pop
cwtl
fidivl
cld
jns
or
in
scas
jge
jno
mov
hlt
jmp
out
iret
push
mov
sti
mov
lret
adc
movsl
cli
dec
sbb
shll
mov
mov
pushf
into
jo
cmp
jg
push
xchg
fwait
cltd
add
mov
sti
jns
push
repnz
imull
sub
scas
pushf
das
movsl
sub
or
or
nop
fidivl
cwtl
add
xor
or
ret
sahf
pop
mov
inc
mov
rcrl
jno
adc
pop
push
iret
xchg
dec
sbb
imul
xorl
push
pop
ret
scas
dec
push
xor
mov
add
test
out
cs
mov
mov
test
mov
ljmp
sub
push
jns
aam
clc
pop
lahf
push
jmp
leave
std
outsb
jecxz
int
loop
fsub
lds
popf
out
xchg
or
addr16
lds
pop
pop
pop
xchg
inc
push
xor
insl
iret
scas
sar
lea
sbb
out
mov
pop
movsl
xchg
in
and
xor
fs
fcoml
inc
pop
scas
adc
mov
movsb
dec
inc
cmpsb
xor
dec
repz
jle
sbb
std
pusha
jg
lret
or
leave
inc
lahf
xor
push
sbb
jecxz
cmpsb
pop
inc
test
cmpsl
mov
scas
sbb
pop
data16
pop
stos
ss
repnz
loop
mov
add
push
pop
inc
inc
iret
shlb
outsb
and
fwait
loop
fwait
pop
mov
dec
daa
loope
lret
out
inc
dec
jns
xor
popf
stc
pusha
xchg
sbb
mov
jge
dec
ficomps
jle
popl
loop
scas
mov
out
ss
rclb
xor
inc
lcall
mov
sbb
lcall
push
pop
lods
xchg
dec
aad
mov
jae
or
xchg
mov
insb
insb
push
mov
daa
lcall
jnp
or
cmp
std
push
rcl
ret
fmull
mov
clc
xor
adc
adc
mov
fs
inc
enter
push
jbe
sub
or
cld
and
cs
pop
test
nop
sub
gs
clc
adc
jle
cmp
negb
mov
inc
jns
or
mov
jnp
dec
paddusw
clc
loope
lock
aad
clc
inc
sub
data16
xor
iret
push
test
add
push
inc
push
xor
je
in
mov
stc
xchg
jne
in
adcb
in
sbb
jl
incb
aam
and
mov
jo
sub
and
aas
ljmp
sar
repnz
sarb
jp
push
insb
or
inc
mov
lds
inc
popa
cltd
sahf
orl
jmp
shll
stos
pushf
push
dec
cltd
mov
sbb
cmp
jl
sbb
sarl
push
sbb
notl
scas
push
dec
lock
xchg
faddl
xor
sbb
or
or
pusha
enter
outsl
insb
dec
mov
jbe
xor
jge
mov
pop
pushf
les
jo,pn
outsl
cwtl
mov
enter
xchg
adc
ja
mov
mov
cli
mov
mov
pavgb
shr
jb
inc
mov
outsl
cmpsb
and
fldl
push
pop
rcrb
popa
mov
jp
sbb
adc
lcall
outsb
push
xor
cmp
ret
cmp
pop
es
test
jne
int
lods
test
xor
jns
addr16
xchg
jo
sahf
sub
push
add
inc
ret
test
imul
fistps
xchg
pop
mov
cmp
std
movb
add
in
and
out
sbb
adc
and
ljmp
pop
jnp
fdivrs
push
cltd
clc
sarb
mov
cltd
loopne
data16
icebp
lahf
pop
pusha
rclb
fs
xor
jnp
and
loope
jns
call
xchg
push
fbld
cmp
xchg
jmp
orb
pop
dec
adc
jge
push
cmp
mov
jae
stos
les
vpunpcklwd
mov
mov
push
daa
leave
jecxz
in
adc
xor
mov
xchg
out
push
push
test
mov
stos
xchg
pop
xor
inc
cmc
int3
add
lahf
repz
and
pop
pop
clc
xor
add
and
mov
jge
js
stos
or
dec
insb
sbb
fmuls
ret
inc
adc
pusha
mov
and
mov
mov
cmp
data16
scas
fcomps
out
testl
xchg
scas
xchg
bnd
add
mov
mov
stc
mov
std
jo
xor
cs
pop
ficoml
addb
rcrl
xchg
jmp
cs
lahf
test
add
sub
or
and
lcall
cmp
lret
mov
shll
lock
add
jl
or
into
pop
outsl
fistl
scas
push
jbe
test
das
mov
mov
adc
and
mov
sbb
inc
jp
push
xchg
mov
push
xchg
pusha
dec
out
push
cmp
cmc
mov
out
jo
inc
iret
loop
lock
add
out
clc
push
js
mov
repz
pop
mov
mov
fsubl
push
out
lds
pop
repz
jo,pt
sub
pop
dec
adc
stos
sbb
jg
dec
mov
lds
pop
pop
ret
addb
call
xor
jb
imul
push
jne
mov
dec
jecxz
push
mov
addr16
add
xchg
popf
rcrl
cmpsl
and
push
shr
scas
aad
mov
ss
sbb
mov
ljmp
or
xchg
cmp
not
subb
xor
xchg
push
clc
mov
or
pushf
lret
popf
insb
xor
add
push
and
add
in
fucomi
fmuls
cmpl
push
mov
and
aaa
scas
jle
pop
in
int
pop
xchg
push
xor
leave
sahf
and
push
push
jbe
sbb
jae
xchg
sub
inc
ja
inc
xchg
lea
int
ds
xorl
push
sbbl
ds
sub
mov
xor
and
test
sti
int
stos
mov
lods
mov
xchg
mov
movsb
shlb
jge
pop
insb
test
xchg
sub
xchg
in
jno
fistps
int
jne
sbb
push
sub
arpl
mov
call
push
push
cs
mov
push
iret
insl
add
stc
test
and
outsl
sbb
lret
and
sahf
imul
inc
xchg
sbb
add
shrl
add
pop
push
xchg
adc
fdiv
js
jns
fiadds
adc
xor
ds
pop
dec
cmc
repz
pop
or
jle
mov
pop
shlb
jl
push
in
add
jno
addr16
mov
mov
or
fs
cmc
mov
arpl
fistpll
or
fucomip
pop
nop
jmp
hlt
or
cmp
inc
xor
addr16
test
fwait
mov
xchg
insl
cs
cld
lahf
aam
push
bound
in
add
test
icebp
ror
inc
insb
mov
aaa
xlat
adc
sub
clc
in
test
ds
fnsave
xor
pop
mov
into
cmp
adc
repz
out
je
xor
fidivrs
add
loope
jecxz
xchg
inc
daa
push
add
cmp
hlt
ret
in
pop
sarb
inc
adc
insl
jecxz
aad
mov
jns
adc
iret
in
cmp
mov
mov
jo
test
adc
stos
adc
out
xor
bound
je
push
sbb
jne
jno
js
in
or
mov
inc
stc
push
insl
or
mov
pop
xor
push
ds
out
cli
inc
jb
mov
and
jnp
in
or
add
mov
cmp
mov
pop
mov
inc
mov
or
cwtl
jnp
jp
cld
mov
mov
es
in
hlt
mov
sub
pop
dec
push
mov
insl
cltd
arpl
mov
xor
xchg
mov
jae
out
push
stos
lock
aam
dec
mov
or
mov
daa
call
sbb
movsl
cltd
and
push
sti
mov
cmc
in
movd
push
repnz
add
mov
mov
jne
mov
jo
bound
xor
movsb
lods
jne
mov
pop
xchg
mov
aas
das
inc
mov
jecxz
dec
addl
lret
divl
cmp
repnz
xor
sbb
sbb
pushf
jb
sub
sub
leave
push
mov
sbb
orl
cmp
add
out
push
add
lds
add
and
mov
test
cmp
fcompl
push
inc
mov
lock
adc
and
fwait
cmp
mov
sbb
jp
push
ss
add
addl
adc
adc
inc
push
adc
mov
pop
dec
add
mov
cmpsl
mov
inc
and
ds
inc
movsb
jmp
stos
mov
add
inc
jp
add
and
fstpl
pop
scas
xor
iret
stos
sti
adc
cmp
rcrb
push
fdivrp
mov
cmpsl
or
je
add
mov
mov
addb
loop
and
pop
jbe
dec
jbe
popf
mov
mov
arpl
push
mov
test
loopne
mov
insl
pop
lods
push
cmp
enter
ljmp
mov
push
gs
setno
cmp
jnp
jl
push
add
jne
stc
fsubr
lea
ss
rolb
and
jp
gs
cmp
arpl
sbb
dec
push
pop
out
mov
aaa
sub
sti
stos
jb
dec
iret
in
jecxz
xor
inc
stc
pusha
mov
or
push
jne
rcrb
inc
mov
sub
insb
cmpsb
in
jmp
and
xor
jo
insb
sbbb
lcall
jo
icebp
or
stc
stos
sbb
xor
and
movntq
out
pop
inc
push
adc
cmpsb
pop
das
mov
xlat
mov
push
nop
xchg
sbb
adc
les
inc
fsubrs
mov
sub
inc
je
fadd
mov
orl
mov
repnz
test
add
adc
out
fsubs
les
test
mov
xor
shll
outsb
mov
xor
and
cltd
xorl
enter
sbbb
pop
dec
divb
enter
xchg
test
pop
push
cmpsb
pop
inc
dec
sahf
daa
xchg
std
mov
test
mov
inc
or
aam
sbb
popa
cmp
lods
imul
aad
test
jb
movsb
fimull
call
js
jmp
or
ljmp
out
jo
fcmove
xor
xchg
adc
movsb
roll
inc
fisttpl
cli
cmp
mov
mov
and
in
sub
push
inc
sbb
bound
pop
stc
daa
or
push
pop
stos
push
fidivrl
or
ss
stos
bound
dec
push
sbb
ficomps
enter
jp
inc
inc
int3
or
cmp
mov
test
hlt
xor
inc
scas
icebp
rcrb
inc
push
imul
inc
pusha
and
jae
je
mov
rcrb
test
daa
mov
insl
push
scas
cmp
mov
test
mov
add
psubusb
mov
into
add
jp
jmp
cli
jno
inc
dec
sub
and
cld
jle
dec
enter
imul
cmp
push
push
sbb
push
shlb
or
jmp
add
jb
movsb
inc
xchg
xchg
push
dec
repnz
sbb
fstps
rolb
xchg
test
adc
loopne
mov
cld
xor
aaa
inc
ljmp
out
cs
sub
inc
nop
int3
and
sarl
mov
or
pop
mov
lret
adcl
adc
aaa
xor
mov
repz
sub
nop
pop
ret
push
mov
sahf
cwtl
out
xchg
test
mov
dec
in
adc
cli
mov
fmull
movsb
nop
loope
and
pop
call
cmp
pushf
addr16
cmc
gs
xor
mov
iret
fsts
negl
fcmovu
xor
lret
fisttpl
shl
pop
dec
addb
out
fcmovnb
push
pop
int
lret
in
add
pop
ret
and
pushl
dec
jae
bnd
jle
popa
sbb
hlt
sbb
out
cli
jnp
sub
push
mov
cmc
mov
push
lods
fisubrl
mov
shrl
lret
pop
ret
out
and
test
nop
and
sub
mov
sbb
mov
lret
adc
mov
lret
outsl
inc
test
mov
cmp
dec
cmp
jae
aam
pop
test
je
fisubs
flds
in
sub
cmp
push
ret
cs
mov
fstl
repnz
adc
cmpsl
cmpsl
inc
xlat
adc
cmp
leave
push
adc
out
mulb
mov
jno
push
or
dec
xor
add
cmp
scas
leave
xor
dec
push
in
mov
rcrl
in
popa
mov
or
mov
fwait
mov
mull
and
and
stc
dec
nop
data16
cmpsb
jns
jmp
ss
mov
test
data16
clc
outsl
out
sbb
push
dec
imul
jmp
sbb
jmp
ja
test
and
jb
fsubp
push
out
sub
push
and
shrl
popa
lds
out
push
push
ja
loop
mov
gs
or
mov
in
xchg
cmp
dec
daa
jmp
mov
out
sub
shl
push
lret
mov
mov
xchg
mov
out
jne
sub
movsl
in
std
add
jp
scas
daa
xor
push
nop
push
clc
push
dec
xchg
cwtl
cwtl
jge
mov
cmc
les
mov
mov
and
jbe
pop
cmp
pusha
sub
cmp
test
dec
mov
bound
fnstcw
dec
mov
sarl
or
push
in
pop
mov
mov
jg
negl
or
popf
mov
mov
call
xchg
scas
or
inc
push
mov
insb
add
dec
sub
mov
push
mull
jmp
dec
lods
cwtl
dec
push
fsubr
sti
addr16
mov
cltd
out
das
mov
iret
cmp
movups
push
loope
jo
mov
aas
push
or
pop
call
cmp
mov
in
jns
cli
imulb
cmp
jle
clc
dec
xchg
pop
jno
adc
mov
mov
ffreep
xchg
cltd
mov
xchg
pop
rclb
sub
addl
repnz
push
test
mov
push
lock
sbb
xchg
dec
inc
into
sbb
push
mov
and
mov
cmp
daa
pop
ljmp
or
lock
movsl
into
dec
mov
cmc
ret
mov
ljmp
shrl
mov
xor
xorl
and
addr16
add
xchg
push
push
add
push
cmc
es
sti
rcll
movsl
mov
fildl
lret
sub
outsl
mov
test
loop
fdivr
inc
jbe
add
out
lret
cwtl
xor
mov
jne
push
sbb
pop
icebp
mov
cmpb
ret
jae
mov
inc
imul
aas
nop
push
or
and
add
in
mov
xlat
cli
test
aas
fstl
pop
jecxz
inc
jne
xchg
scas
mov
push
stos
mov
shr
cmp
gs
sub
xchg
insb
sub
push
xchg
movsb
in
adc
add
ja
xor
fwait
mov
das
es
fstpt
mov
jecxz
sub
cmp
aam
scas
pop
pushf
add
ss
inc
xchg
adc
sbb
mov
ja
mov
sbb
aam
arpl
cmc
sarb
sub
xchg
lock
push
test
loop
mov
xchg
scas
lock
test
jb
mov
push
fwait
fwait
sbb
dec
shlb
or
insb
popa
dec
mov
jecxz
add
xchg
call
adc
fdivp
icebp
nop
xor
sbb
imul
jmp
sbb
or
icebp
pop
sbb
pop
or
rclb
or
js
jl
mov
push
pop
rcpps
testl
mov
call
outsb
mov
cmp
sarl
cmpsb
enter
shll
mov
js
notb
adc
int3
and
mov
dec
xchg
inc
add
enter
out
lret
mov
mov
pop
call
or
leave
in
test
sbb
shr
cmp
inc
ss
bound
dec
repz
ds
pusha
and
mov
mov
paddq
push
lods
mov
fs
mov
or
rorl
add
xchg
outsb
and
mov
sub
mov
xchg
jns
lock
pop
cli
push
adc
xchg
dec
test
aad
or
cmp
push
ss
pop
lock
adc
push
add
inc
fs
cmpsl
mov
adc
jo
push
and
dec
insl
pushf
push
push
mov
cwtl
cli
pextrw
mov
inc
adc
dec
sbb
test
jl
aaa
pop
rcr
xchg
cmc
addr16
mov
pop
mov
cld
xchg
or
sbb
xor
pop
mov
mov
aad
jnp
cwtl
mov
je
int3
in
lcall
push
inc
jne
mov
clc
outsb
jmp
mov
jmp
outsl
dec
in
jnp
shrb
pop
jb
rol
imul
test
dec
movsb
dec
adc
daa
cmp
in
add
jecxz
dec
movsb
aam
mov
fidivs
cs
xchg
mov
push
mov
je
fwait
insb
jecxz
arpl
push
cwtl
adc
jge
pop
out
adc
xchg
jp
xchg
out
push
cli
lds
cmpsb
in
fsubp
daa
mov
lods
insb
gs
pusha
icebp
inc
repnz
inc
add
jbe
out
mov
nop
test
dec
ss
push
bound
sahf
gs
jmp
addr16
adc
or
and
dec
cmp
loopne
mov
push
jbe
xor
pop
mov
aad
gs
ja
cltd
test
popf
cwtl
cmp
push
repz
xor
ljmp
lds
xchg
sahf
inc
push
add
movsb
daa
mov
aas
jne
popf
shl
inc
out
dec
mov
ja
stos
and
adc
pop
mov
aaa
sub
and
push
loopne
jg
popf
int
sbb
jl
aaa
aam
sbb
pop
sbb
or
mov
in
push
sbb
out
test
push
add
out
imul
and
mov
shrl
scas
add
cmpsl
jecxz
pop
add
mov
sub
mov
aam
adc
shl
hlt
imul
enter
jge
icebp
not
lock
negl
stos
inc
pop
push
xlat
jecxz
lcall
les
mov
mov
popf
mov
daa
pop
lahf
movsl
xor
cmp
xlat
mov
sub
popa
arpl
sahf
push
call
sahf
test
dec
clc
jecxz
ss
loope
aaa
mov
imul
sbb
add
lods
add
sbb
pop
les
mov
mov
and
in
inc
ljmp
sbb
or
cmp
add
std
out
mov
in
sub
jb
sbbb
add
and
fnsave
enter
mov
cmp
mov
scas
in
xchg
ret
sub
sbb
mov
ljmp
sub
pop
push
adc
sarb
mov
hlt
fsubrs
pop
dec
xorb
mov
pop
xor
jnp
sbb
cmp
sbb
rcll
xchg
xchg
popa
sub
sub
jno
sub
add
lret
out
mov
imul
bnd
fstpt
ficoms
fisubrl
outsb
jge
adc
push
dec
pop
xchg
fwait
movsl
sub
dec
jae
cmp
punpckhwd
jp
mov
pop
imul
fildll
push
inc
sahf
ljmp
dec
or
jmp
addb
pop
push
lds
xchg
mov
popf
lret
mov
xchg
xchg
roll
popa
hlt
mov
cli
push
jg
mov
into
xchg
sub
rcl
mov
test
mov
daa
lods
data16
loope
cmp
outsl
bound
push
and
arpl
sub
pushf
mov
add
out
pop
mov
jecxz
adc
push
dec
jge
nop
inc
out
stos
pop
ljmp
cmp
or
push
stos
sub
xchg
sub
jge
je
xor
jle
or
mov
je
inc
cltd
fimuls
or
cmp
sahf
sbb
push
ret
das
or
mov
add
pop
ds
xor
sbb
jge
sbb
add
rorb
mov
je
cmp
jne
in
pop
mov
ja
xor
jo
add
cmp
hlt
add
pop
xchg
fiaddl
inc
mov
lret
lahf
jne
or
jns
das
mov
inc
scas
pop
fnstsw
pop
aaa
mov
sbb
jmp
push
push
mov
push
push
cmp
inc
add
repz
data16
aad
cmc
push
pop
les
aaa
fwait
sysexit
fistpll
lods
dec
mov
mov
sbb
cmp
icebp
imul
sti
bnd
jg
fdivs
add
sub
jecxz
mov
mov
push
sbbl
mov
stc
adc
push
and
popf
push
jmp
aad
or
or
jns
bound
iret
cmpsb
dec
cltd
jno
xchg
or
push
scas
push
movsl
ds
call
xchg
inc
out
sub
xchg
pusha
push
jge
sbb
lock
ja
xchg
test
filds
mov
jecxz
and
fstpl
ds
cwtl
sub
xor
stc
and
pop
and
loope
std
mov
daa
mov
xchg
push
and
imul
lahf
dec
or
xchg
xchg
outsl
jl
in
inc
xor
cmpsl
es
push
popf
test
call
sub
sbb
fs
push
data16
fs
jmp
xchg
add
pusha
insb
ficomps
push
or
add
rolb
push
sbb
or
jns
inc
inc
cmp
pop
test
sarb
xlat
outsb
pop
out
pop
cltd
ss
pop
lods
shrl
in
pop
into
test
out
adc
push
or
popf
int3
mov
xor
popa
or
xchg
stos
jl
xchg
mov
or
pusha
cwtl
adcl
aam
mov
fiadds
filds
push
adc
mov
pop
rcrb
xor
cmp
fwait
mov
shlb
add
rclb
inc
imulb
pop
nop
pop
jnp
inc
xchg
mov
push
imulb
ss
jno
shll
mov
cmp
dec
jmp
pop
iret
and
add
adc
cmpsl
lahf
add
sahf
dec
inc
cs
mov
mov
add
push
fildl
mov
shll
pop
bound
adc
xchg
les
lahf
push
push
fldcw
xchg
sti
push
fistps
xchg
ds
scas
fimuls
daa
sbb
in
ret
ret
push
dec
outsl
pop
xchg
mov
mov
inc
mov
add
mov
fnop
inc
test
jl
xchg
cmp
add
out
mov
jbe
cmp
pop
jmp
jle
cli
imul
jns
outsl
push
mov
bound
orl
cld
jmp
cwtl
jmp
inc
movsl
cmp
jge
cmp
es
loop
and
mov
add
lock
sbb
adc
mov
mov
or
mov
mov
dec
repz
adc
jecxz
jmp
jns
mov
das
sub
add
cmp
push
mov
loope
leave
mov
and
insl
xlat
mov
insl
cltd
mov
sub
xor
push
outsl
insb
inc
mov
imul
push
daa
inc
sub
or
ror
pusha
ficoms
imul
std
add
mov
int3
push
pop
and
and
outsb
cmp
sarb
lods
cld
cmpsl
pop
stos
es
int
sahf
jp
sub
mov
inc
out
lea
fnstsw
xor
mov
inc
inc
jbe
cmpb
fcmovnu
and
sbb
sahf
add
inc
mov
sub
into
aam
jmp
js
loope
movsl
dec
ficompl
or
mov
outsb
mov
es
rorb
mov
inc
ja
fstpl
mov
test
insl
mov
ffreep
lods
push
mov
bound
sbb
xchg
adc
outsb
repz
cli
sbb
ret
call
inc
fstpl
scas
and
mov
xor
pop
dec
add
add
cmp
cmc
insb
sub
push
mov
sbb
lods
lret
sbb
jl
inc
std
jg
or
out
ret
icebp
idivb
xor
or
stc
pop
jg
jmpw
mov
add
mov
test
movsl
std
hlt
jl
mov
out
sbb
iret
mov
push
subl
or
xlat
ret
ljmp
cli
int
and
icebp
sbb
hlt
addr16
loopne
xchg
outsb
xchg
lret
adc
sub
and
push
lea
rcrl
dec
cmc
repz
mov
js
xor
mov
or
stos
and
jp
mov
stos
cli
jne
stos
jge
xchg
repz
pop
fcoml
cmp
sub
fnsave
mov
imul
pop
add
mov
mov
setg
mov
enter
mov
xchg
int3
sbb
test
cld
sahf
std
or
adc
aas
xor
jmp
or
and
add
orl
dec
aas
fnstcw
add
stos
xlat
xchg
lret
pop
das
pop
and
insl
mov
lods
iret
cli
mov
mov
mov
scas
gs
fs
stc
sar
movl
push
sbb
test
test
adc
testl
mov
orl
cmp
adc
push
mov
xorb
inc
ret
add
sub
dec
push
lret
or
mov
scas
mov
test
mov
aam
in
shll
fsubrl
lret
inc
and
mov
sbb
jmp
push
or
stc
pusha
repz
sub
ret
fbstp
add
xor
subl
mov
xchg
and
jp
adc
repz
mov
cwtl
dec
xchg
sbb
jno
mov
mov
fidivl
jno
dec
xor
or
xor
scas
aam
adc
imul
cmp
std
nop
mov
in
xor
push
dec
xchg
jb
mov
xchg
mov
add
pusha
push
cmp
add
aad
mov
bound
sub
sub
xchg
sub
push
pop
popf
js
inc
lods
fsubrl
jl
pop
xor
nop
out
decb
mov
sbb
aam
lods
or
addl
adc
rcl
sti
xchg
push
mov
adc
inc
add
and
and
inc
mull
mov
adcl
dec
cmp
dec
scas
dec
xor
int3
std
cmpsb
push
cmp
pop
shl
lcall
mov
or
mov
ret
test
int
pop
sbb
or
js
cld
mov
rclb
dec
std
sbb
xor
push
pop
push
pusha
mov
jg
pop
movsl
jae
iret
xchg
pop
push
in
adc
sbb
xor
test
movsb
insb
jnp
and
adc
mov
mov
aad
add
pop
pop
lds
pop
push
sbb
pushf
xor
push
cli
aaa
cmp
lcall
pop
dec
out
out
mov
xchg
jge
push
lods
push
sub
in
xor
sub
xchg
pop
cmc
xchg
jne
scas
outsb
cmp
inc
or
mov
fadd
aaa
mov
mov
xchg
call
dec
out
mov
lea
cmp
sub
jge
insb
mov
push
shlb
data16
jg
mov
sbb
mov
adc
cmp
adc
push
aas
imul
into
inc
enter
sub
mov
incb
add
aad
aad
nop
dec
out
movsl
xor
cmp
sub
inc
mov
cmp
mov
inc
or
orb
nop
pusha
xor
xor
sbb
pop
push
pusha
sbbl
aam
pop
cmc
push
ds
or
sbb
lock
pop
jo
sbb
mov
dec
jo
fmul
clc
jle
jae
push
or
out
lret
jmp
or
cmpsb
loopne
dec
push
in
mov
sbb
movsb
fs
inc
mov
push
xchg
xor
xor
xchg
icebp
scas
adc
inc
and
cmp
adc
out
and
add
xor
es
adc
add
mov
repz
or
out
gs
ljmp
int3
jae
mov
xor
int
sbb
jo
and
dec
sarl
ja
nop
sub
iret
cmp
daa
dec
pop
xlat
mov
jns
push
sub
leave
icebp
adc
ds
ficompl
pop
pop
and
or
cmp
dec
cmp
add
mov
xor
xor
imul
stc
dec
mov
dec
cmp
pop
dec
rorl
mov
mov
add
ja
mov
xor
sahf
or
jae
push
xor
xchg
push
sbb
push
cmp
push
in
sub
dec
push
mov
push
sub
or
sbb
xchg
mulb
pop
push
stc
vmovaps
test
jge
xchg
cmp
inc
dec
jbe
fcmovnb
fwait
lock
in
ret
stc
mov
cmp
push
mov
lock
out
fwait
into
or
jg
jg
inc
sahf
jmp
cltd
mov
mov
mov
jge
addr16
push
sahf
jno
inc
jns
cmp
data16
xchg
mov
fmuls
add
mov
inc
imul
adc
add
push
mov
les
inc
jnp
jle
ret
mov
mov
rcl
xchg
cmp
pop
mov
ret
push
jge
dec
lret
loopne
cmp
xchg
push
mov
jg
and
pusha
mov
cmpsl
shll
mov
mov
pop
ror
pop
xor
or
sub
pop
jno
push
test
cmp
jge
outsl
cmp
addr16
push
cli
inc
fxch
adc
xchg
sub
mov
xchg
xchg
outsb
jl
xor
aas
lock
stos
in
and
lods
lea
or
jo
push
jmp
mov
bound
jle
test
jne
jo
cmp
ljmp
ljmp
enter
jnp
lods
push
lret
sub
inc
inc
pop
mov
iret
fwait
scas
je
aad
xor
test
dec
or
mov
mov
mul
sub
rorl
in
sbb
arpl
fisubl
sahf
test
push
add
int
decl
std
aaa
or
jne
xchg
adcl
push
aad
rorb
mov
into
mov
in
adc
mov
jg
out
les
test
subl
dec
xchg
adc
xchg
mov
sub
stc
mov
arpl
inc
mov
out
aas
leave
jge
jge
test
cmpsl
data16
sarb
lds
dec
jl
dec
jmp
stc
mov
xchg
fdivrl
stos
jmp
sub
outsl
adc
adc
sahf
jo
in
jmp
incl
inc
cmp
ret
imul
insb
cwtl
in
mov
cli
push
push
out
mov
ljmp
dec
cmp
andb
sub
push
jl
cmpsb
out
fs
xchg
bound
push
mov
shrl
loope
jecxz
xor
xchg
ljmp
jae
mov
cmp
pop
je
lret
mov
push
xchg
cmp
movsl
insb
shrb
test
mov
ljmp
subl
cmpsl
mov
sub
xchg
cmp
pop
orl
mov
adc
bound
mov
cltd
xchg
xlat
arpl
jno
in
cmp
imul
cmp
fstps
les
or
repz
mov
jge
jae
sub
cmpsl
iret
add
add
inc
push
jo
repz
cltd
cmova
dec
clc
lea
iret
jg
rol
inc
cmp
cmpsl
or
xlat
sub
pop
loope
mull
es
aas
aas
ret
mov
jmp
dec
add
jnp
and
pop
sub
jle
jle
fs
stos
pop
shrb
test
adc
add
icebp
das
pop
shlb
xchg
cmp
cs
inc
int3
lock
insl
push
xor
cli
aad
insb
icebp
mov
subl
gs
dec
xlat
negb
pop
xchg
jb
pop
or
jp
pop
leave
adc
sub
aad
mov
mov
roll
or
add
fistps
or
xchg
fucom
xor
sarb
insb
fcomp
shll
cli
adc
fmull
jne
sahf
adc
adc
mov
jno
popa
sarl
jmp
les
jle
jb
dec
ja
sti
push
outsl
dec
xor
dec
cld
and
vpacksswb
cmc
mov
sub
add
or
mov
mov
mov
add
bnd
cmpsl
ret
sub
test
fyl2xp1
lahf
dec
push
fcomps
cld
push
inc
sub
ljmp
inc
iret
arpl
sbb
stos
add
sub
mov
je
stos
jno
xchg
mov
pop
mov
orl
push
lret
aaa
xor
mov
mov
mov
push
push
jmp
pop
cmp
popa
jb
sti
fimull
inc
cmp
push
iret
and
sub
cmp
dec
dec
or
push
lcall
fstl
sbb
inc
adcl
adc
jnp
and
sbb
fs
mov
xchg
jne
or
mov
jb
add
fs
mov
pop
sub
pop
out
fmuls
sub
push
mov
dec
mov
pop
insl
adc
addr16
sub
sub
js
test
mov
adc
out
xchg
iret
pop
dec
stos
fisubl
push
popf
nop
rcrl
lret
inc
push
mov
push
cmp
mov
pop
lds
andb
add
xchg
gs
aas
jl,pt
xchg
cmp
jle
sarl
loope
push
sbb
fsubl
mov
popf
das
insl
mov
std
cmc
fwait
mov
jmp
cmp
push
jo,pt
push
jmp
out
loope
mov
mov
call
mov
cs
adc
inc
mov
sbb
push
dec
dec
xchg
mov
push
or
sarl
aas
dec
pop
pop
pop
stos
out
out
cmpsl
or
push
mov
shl
pusha
lahf
stos
fs
cmc
ljmp
cmp
mov
adc
or
mov
cmc
enter
inc
gs
add
pop
or
dec
xlat
pushf
mov
ror
xchg
add
outsb
inc
adc
ret
cmp
out
push
iret
mov
out
xchg
xor
out
in
sub
loopne
push
idivb
or
fstpl
scas
outsb
fsubp
push
xchg
movsb
pop
lea
int
mov
mov
cmp
inc
mov
dec
pop
jo
insb
xchg
jnp
add
mov
and
or
ficompl
mov
cmc
mov
arpl
dec
aaa
and
cmp
mov
and
inc
pop
xor
loop
clc
scas
rorb
call
fstps
push
sbb
ja
add
mov
pop
int3
in
ret
or
in
jae
sbb
push
lock
inc
pop
sub
xchg
stc
pushf
orb
mov
test
sub
add
mov
push
cmp
in
scas
mov
xchg
and
push
stc
sbb
lods
imul
lods
fimull
dec
mov
cmpl
mov
out
xchg
cmp
test
dec
ljmp
mov
add
mov
in
add
lret
inc
loope
pushf
mov
movq
ficomps
mov
adc
cmp
faddp
jne
cmc
mov
arpl
scas
ds
sub
and
jmp
lds
jne
hlt
adc
push
adc
pop
int
pop
shlb
push
adc
iret
cmpsl
cmp
outsl
add
popa
arpl
enter
insl
les
icebp
mov
pushf
dec
insb
into
sub
enter
dec
adc
or
add
ret
shrb
test
rolb
pop
ljmp
mov
stc
jae
sbb
xor
mov
add
lret
mov
push
lcall
imul
xlat
sbb
cld
inc
pop
test
bnd
pop
xor
inc
jns
xor
repnz
and
cmp
scas
hlt
fbld
lea
aaa
data16
jecxz
or
pop
xchg
mull
mov
sbb
sahf
xchg
mov
inc
cmpsl
push
jmp
lret
pop
mul
mov
cltd
nop
in
dec
jmp
fcoml
mov
fcompl
cmp
push
leave
js
mov
xchg
xor
jmp
dec
inc
inc
add
cs
and
xchg
js
out
pop
cli
es
or
xchg
mov
inc
rcrl
call
mov
sbb
xchg
dec
inc
mov
call
sub
xchg
out
test
lret
xchg
cmp
test
lea
and
xchg
inc
mov
mov
js
shrl
dec
adc
inc
jae
xor
adc
lret
or
nop
js
sbb
mov
xor
and
push
and
mov
idiv
int
adc
sahf
mov
inc
sub
mov
ss
pop
xor
pop
test
mov
lock
hlt
test
pop
sbb
out
fldt
pop
sbb
pop
push
inc
push
push
sbb
sub
mov
repz
ss
pushf
cmpl
pop
loopne
cmc
cld
scas
pop
in
and
adcb
xor
jecxz
pop
rclb
push
xor
push
cmp
push
add
cltd
lcall
dec
test
push
in
pusha
and
add
sub
stc
rcrb
jns
cwtl
lds
fldcw
adc
inc
into
fistpl
mull
cmc
mov
aaa
cltd
inc
movb
mov
cwtl
stos
mov
xchg
aad
lea
mov
xchg
nop
push
xchg
insb
inc
cli
aaa
mov
gs
xchg
lret
pushl
pop
adc
cmpsl
into
test
jp
push
mov
addb
in
repz
inc
lods
je
shl
jnp
outsb
xor
pop
cmpsb
mov
testl
inc
dec
ss
pop
xchg
xlat
adc
fdivr
call
popf
repz
enter
stc
pop
and
fdiv
jl
mov
rclb
mov
enter
div
mov
push
in
rcr
xlat
dec
sbb
xchg
fisubrs
and
int3
xchg
mov
sub
mov
das
sub
iret
dec
pop
push
push
fmull
mov
fidivs
inc
adc
fdivrl
jnp
lods
test
xchg
std
test
cmp
arpl
insl
add
notb
push
test
push
dec
repz
sbb
adc
repz
sbb
jns
outsl
in
sbb
test
mov
mov
mov
jb
mov
movb
cmp
sub
lcall
mov
addr16
xor
jb
add
leave
or
push
sub
inc
aam
adc
dec
es
jae
mov
dec
xchg
xchg
inc
or
xchg
sbb
les
cmp
adc
mov
push
int
loope
movsl
call
mov
adc
or
outsl
imul
and
adc
int
test
daa
popa
pop
jge
jnp
ss
fcom
shll
cwtl
aam
ljmp
aas
cmp
ror
loop
mov
lods
sbb
stc
xlat
xchg
add
ficoml
cmp
cmpsl
cmpsl
mov
add
mulb
jns
jne
pushf
sbbb
xor
push
cmp
fcmovne
imul
cmp
test
mov
in
sbb
adc
mov
incl
jns
addr16
sub
jnp
mov
jecxz
loopne
divl
pop
push
xchg
lret
ret
out
mov
push
jmp
pusha
xchg
pop
push
rolb
enter
repz
repnz
sub
fs
push
add
shll
xchg
call
repnz
xchg
lods
in
dec
inc
mov
inc
jbe
mov
inc
jge
int3
add
ffreep
lret
subl
xlat
out
mov
pop
and
mov
mov
lea
jle
jg
mov
rcr
adc
stos
fimull
and
inc
xchg
lret
scas
lods
popa
inc
jno
inc
xchg
jmp
inc
clc
add
test
xlat
scas
or
xchg
jl
loope
in
int3
push
cwtl
out
push
in
jno
mov
rolb
jg
lods
aas
cmpsl
lahf
or
and
jbe
mov
jmp
rolb
sbb
hlt
lahf
cmpsl
jge
fwait
lods
push
mov
jae
jo,pt
mov
cmpsb
cmc
mov
xchg
adcl
gs
call
and
push
cmp
cmc
test
dec
or
out
arpl
cmp
pop
xor
leave
mov
adc
adc
or
mov
fisttps
jb
movsb
lcall
adc
shlb
dec
push
add
popl
ret
orl
pop
mov
jbe
dec
and
movsb
mov
mov
mov
sbb
mov
lahf
int
xchg
mov
ss
rol
lahf
lahf
andb
pop
lock
mov
sbb
fs
loop
into
add
fisttpl
outsl
ljmp
mov
rcl
fwait
imul
incb
pushf
shl
xchg
imul
mov
xchg
jg
mov
sbb
xorb
repnz
fadds
push
popa
jecxz
and
fmul
lods
xchg
pusha
or
cltd
pop
icebp
sub
fidivrs
out
sti
adc
dec
fwait
push
out
sub
setae
jle
outsb
sub
aas
pop
mov
rcr
cmpl
mov
shr
ret
xor
cld
aaa
sub
lret
js
pop
pop
xor
xor
mov
cmp
adc
pusha
cmp
loopne
or
pop
jp
mov
cmc
imul
xlat
or
sub
pop
pop
and
mov
scas
dec
in
int3
jo,pn
leave
jp
mov
xor
mov
and
rorl
sub
lods
adc
mov
mov
and
aaa
inc
xchg
test
mov
jle
movb
insb
sub
fcmovnbe
inc
inc
int3
movsb
adc
enter
imulb
xor
fsubrs
loope
cwtl
mov
fwait
out
ss
imul
xor
mov
sbbl
insl
fcoms
aad
mov
lret
inc
add
mov
fsubrl
adcl
imul
clc
mov
nop
fmul
test
popa
push
dec
mov
enter
in
stos
inc
in
dec
inc
or
dec
mov
xchg
movzwl
xchg
daa
mov
pop
out
shrl
jle
sbb
and
pop
ret
lods
push
mov
aas
dec
hlt
jmp
dec
pcmpgtw
pop
pop
es
sahf
test
adcl
fwait
sbb
sub
sarb
inc
pop
jns
clc
ret
cld
sbb
nop
sbb
cmp
repnz
push
das
adc
and
js
into
call
adc
mov
dec
cld
push
repz
cmp
incb
push
loope,pt
adc
fdivrs
outsb
out
out
cmc
xchg
imul
lods
push
jae
cmp
fimull
pop
fnstcw
test
or
insl
pop
mov
pop
add
jg
cmp
mov
popa
sbb
or
xor
adc
push
test
decb
mov
daa
sub
adc
cld
mov
adc
sub
jmp
push
ljmp
xlat
std
lea
push
sub
or
fldcw
sbb
and
push
pop
or
cmp
insl
sbb
shlb
sbb
mov
bound
xchg
or
pop
fstps
xor
ffreep
aas
gs
add
daa
sub
outsb
into
insb
int3
push
loopne
ljmp
fsubrs
and
jnp,pt
mov
and
mov
push
cmc
push
mov
aad
push
imul
les
lcall
or
cmp
addb
mov
data16
fcompl
loop
arpl
int3
in
dec
sbb
cli
gs
and
cmp
and
test
inc
pop
and
jb
notb
and
dec
rol
in
and
push
ret
les
ss
xchg
insb
xchg
jns
and
sbb
daa
or
mov
aam
loope
push
xor
dec
and
mov
mov
fistpll
adc
nop
arpl
pop
and
lock
dec
cmp
pop
pop
dec
cmp
dec
jmp
mov
insb
adc
add
in
mov
decl
test
add
les
lds
into
push
bound
es
popa
stos
repz
pop
xor
loop
rorb
call
andb
xor
in
popf
jp
data16
pop
push
cmp
out
sub
xchg
mov
mov
jnp
mov
sbb
into
fnstenv
add
xchg
mov
xchg
xor
mov
ficomps
int
mov
popl
mov
inc
jno
jae
pop
sbb
jns
xor
pop
scas
jb
inc
jnp
cwtl
pop
dec
mov
push
mov
scas
fwait
jno
lds
aas
mov
int
or
scas
cmpsb
xchg
fistpl
into
ret
cmpsl
fsubl
pop
scas
push
dec
test
lret
push
pop
aad
ljmp
je
jp
push
cmp
data16
push
dec
xor
insb
pop
enter
cmp
movl
xor
mov
mov
lds
mov
ficoml
insb
ds
push
xor
inc
ja
out
iret
xchg
cmp
xchg
xor
adc
popa
push
iret
scas
or
and
mov
or
dec
daa
ja
mov
pop
aad
test
xchg
movsb
shld
cmp
stos
push
jl
repz
adcb
jne
fnstenv
nop
inc
subb
and
int
out
inc
adc
push
sbb
xor
or
repnz
int
add
shll
jecxz
aaa
jno
dec
pop
into
mov
sub
mov
mov
enter
jmp
aas
jp
mov
adc
cmp
and
imul
xchg
jnp
mov
add
pusha
xor
loop
or
subl
lea
in
adc
in
mov
fs
sahf
fisubl
push
out
mov
mov
pop
push
push
sub
out
mov
dec
mov
push
jg
mov
add
mov
mov
push
xchg
data16
mov
ja
int
fistpl
mov
pop
cmpsb
sbbl
arpl
sub
fildll
movsl
inc
mov
mov
imul
ljmp
movsb
jle
popf
dec
dec
push
mov
jnp
insb
outsl
sbb
ljmp
mov
cmpsb
leave
enter
pop
in
jns
pop
xchg
mov
mov
psrad
es
fiadds
fnstcw
and
lret
mov
cmc
arpl
sub
pushf
fistpl
xor
jns
mov
shl
mov
test
pop
aad
shlb
out
call
arpl
stos
or
adc
orl
popf
mov
idivb
hlt
shll
popa
cmp
outsb
nop
popa
dec
repnz
and
les
xorl
insl
and
jnp
mov
js
insl
mov
fidivrl
pop
jg
loope
adc
dec
inc
cmpsb
dec
ja
inc
cmp
cmp
loop
addr16
in
out
ljmp
push
mov
mov
les
int3
cmpsb
cmp
sbb
and
stos
cmp
stos
ficomps
and
nop
mov
cli
das
or
xchg
mov
push
or
aas
add
push
dec
cmpl
xchg
inc
je
jmp
xor
cltd
sbb
sub
or
add
xchg
leave
mov
aas
jo
lea
jmp
dec
mov
cwtl
mov
cmp
ss
mov
add
cmp
push
and
hlt
clc
mov
inc
and
hlt
cmc
scas
dec
mov
jp
pop
lods
stos
mov
fcomps
jl
call
sahf
jns
icebp
xor
adc
cmp
repnz
jae
das
movsl
movsb
js
pop
jns
jmp
push
jp
lods
popf
ficomps
pushf
pushf
cmc
sbb
mov
xchg
sbb
xchg
loope
imulb
int
aam
inc
pop
les
adc
pop
cmp
sub
push
cmc
xchg
xor
push
shl
cld
xchg
jb
sahf
std
in
outsl
push
xchg
cmp
jecxz
call
pop
inc
mov
push
and
push
mov
jmp
inc
scas
dec
pop
cmp
popa
std
sub
loopne
mov
lret
inc
cmp
enter
inc
xor
add
add
fsub
push
test
in
mov
lock
icebp
imul
adc
fcoml
and
jns
sub
and
pop
outsb
test
mov
push
test
insl
lock
shll
sub
pop
es
push
fildll
fstpt
xchg
into
pop
out
or
adc
jg
mov
pop
loop
imul
repz
daa
mov
hlt
sub
push
loop
sbb
and
andl
loope
push
mov
xor
imul
movsb
adc
xor
mov
popf
pop
cmp
outsl
fbld
sub
in
es
xor
js
lahf
js
fs
xchg
mov
and
pop
dec
cwtl
out
and
adc
push
sub
aas
or
loopne
sub
cwtl
push
mov
lock
xor
push
dec
sub
mov
dec
sub
rorl
dec
into
sbb
jp
repz
mov
xchg
pushf
xor
mov
and
pop
jns
xchg
mov
das
stc
js
inc
aad
xorb
adc
cld
test
out
mov
sbb
in
popa
push
pop
adc
adcb
dec
mov
add
into
aaa
dec
jmp
dec
iret
test
sarl
out
popf
ret
push
mov
adc
sti
and
in
leave
out
or
arpl
jb
popf
loope
out
outsl
push
ja
hlt
jb
cmp
fimuls
call
fdivl
dec
pop
add
jmp
push
mov
xchg
pop
testl
jle
or
and
push
push
dec
out
mov
push
mov
mov
in
sbb
aad
push
jp
ds
js
push
jno
cwtl
fs
shr
jge
lahf
inc
mov
outsb
and
mov
pop
jmp
loop
cmp
lcall
lds
stos
outsl
and
mov
add
inc
lret
shlb
mov
cmp
mov
ret
push
and
mov
sbb
push
pop
jnp
or
xor
loop
sub
xorl
rcll
mov
out
enter
push
mov
adc
ljmp
aam
in
mov
mov
inc
mov
mov
sub
dec
cmpsl
push
sub
icebp
cmp
dec
rorb
loop
repz
push
rcll
push
mov
loope
ret
cs
cmp
stos
test
insl
int3
fsubrl
push
jno
pop
ja
mov
imul
cmc
in
pop
sbb
or
test
nop
outsl
hlt
sub
inc
dec
push
fdivl
bnd
or
jge
shlb
jle
fnsave
sbb
lcall
sahf
fs
test
mov
pop
in
cmp
cltd
adc
cmpxchg
pop
xchg
out
ds
fdiv
mov
xchg
imul
pushf
mov
mov
mov
rcr
mov
xor
test
mov
movb
test
and
or
jmp
aam
andl
pop
pop
pop
cmp
xor
ja
dec
mov
sub
xor
inc
lret
out
xor
imul
mov
pusha
pop
imul
jo
inc
xchg
sub
mov
nop
aad
test
pushf
in
mov
lret
or
in
jle
aad
jl
fnstcw
hlt
sbb
dec
add
mov
inc
int
test
ret
mov
std
adc
xor
lahf
mov
mov
xchg
dec
xor
gs
fbstp
std
idiv
mov
loopne
movsb
fidivs
mov
push
pop
mov
push
pop
ss
shll
aam
out
mov
hlt
jmp
call
sbb
out
loopne
in
clc
out
push
mov
cmpb
cld
xor
jp
dec
iret
iret
rcrb
add
out
pop
hlt
and
and
cli
shrl
mov
rsqrtps
mov
xchg
pop
push
xchg
sbb
add
add
negl
adc
scas
stos
cld
bound
xlat
adc
in
dec
add
stc
add
cmp
stos
mov
inc
and
cmp
hlt
add
jge
cmpsl
push
or
jb
cmc
popa
adc
mov
outsb
push
mov
ja
sbb
loop
rolb
mov
scas
testl
sti
add
sub
mov
mov
fsubrl
mov
mov
push
mov
sbbb
xor
fdivl
es
dec
pop
enter
xchg
sub
jns
test
pop
mov
jne
je
lcall
xchg
cmp
stos
dec
mov
inc
mov
ret
dec
sub
sbb
outsl
out
popa
mov
lods
and
lea
int
leave
addl
lret
dec
jns
sbb
jnp
push
sbb
pop
inc
sbb
push
mov
aas
aad
pushf
loop
pop
addr16
fisubrs
out
xchg
jno
stos
mov
cmpsb
sub
jnp
je
mov
dec
jnp
dec
cmp
insb
add
scas
pusha
jbe
call
int
popf
gs
pop
movsl
into
leave
mov
lahf
ljmp
fdivs
or
xlat
pop
inc
xchg
aaa
imull
dec
push
dec
sbb
rorb
out
xchg
dec
stos
shlb
cmp
ret
daa
or
inc
inc
outsl
dec
xchg
out
sbb
xor
gs
and
jb
test
jg
in
clc
andb
push
test
sub
test
adc
xchg
xchg
sbb
mov
sbb
or
xchg
cmpl
pop
in
imul
aam
mov
pop
jno
fiadds
ret
out
or
jne
cmp
ja
jne
popa
or
testb
or
daa
inc
dec
pcmpeqw
out
sahf
stos
mov
cmpsl
dec
sub
dec
aam
and
xchg
fstl
push
inc
loop
xchg
push
pop
cwtl
push
jbe
and
push
mov
pushf
add
into
pusha
pop
scas
xor
push
cli
mov
out
fisttps
std
push
xchg
cmp
nop
push
dec
gs
ret
mov
fsubrs
or
ficoml
pop
movsl
arpl
iret
outsl
dec
int
leave
mov
icebp
inc
incl
mov
pop
inc
push
jp
insl
inc
loopne
lods
aad
outsl
cmp
out
xor
jecxz
les
or
adc
mov
movsb
dec
data16
xchg
imul
out
or
cmp
lret
jecxz
scas
adc
jae
jb
xchg
and
mov
xchg
xchg
test
arpl
cmpsb
pusha
int
sbb
mov
loope
push
xchg
ljmp
jnp
movsb
movsb
adc
mov
or
arpl
outsl
aaa
xor
xor
insb
mov
lds
mov
cmpsb
negb
and
shrb
stc
es
and
popf
daa
sar
in
push
mov
sbb
cmc
divl
fwait
imul
xor
jne
push
xchg
inc
sub
cwtl
xor
cmp
cmpsl
aaa
xlat
orps
mov
mov
ss
sti
cwtl
dec
add
xor
and
pushf
jno
cmp
or
push
aad
movsb
pushf
or
in
jo
sbbl
push
mov
lds
cmp
loop
push
jo
ret
rcrb
fs
or
push
shll
mov
xchg
jge
mov
out
or
aas
out
aad
mov
repnz
dec
push
insl
rorl
arpl
pushf
testl
mov
addl
inc
lahf
dec
push
jge
jg
ret
sti
scas
scas
addr16
mov
ds
jge
dec
sbb
stc
ror
or
xchg
loope
int
idivl
mov
rcrb
mov
test
cmp
mov
rclb
jmp
mov
and
xchg
in
lods
pop
popf
insb
inc
loopne
inc
pop
pop
adc
in
inc
pop
lds
push
cmpsb
pusha
clc
and
or
fs
sti
sub
mov
push
jg
cvttps2pi
in
cmc
cltd
sub
push
in
movsl
mov
sub
ljmp
mov
out
pop
into
pop
pop
stc
test
inc
ja
pop
cmp
xor
or
cmp
inc
pop
fimull
and
mov
or
iret
fucompp
sbb
add
jnp
cwtl
nop
cli
jl
loop
push
fsubrs
scas
iret
dec
shll
fimuls
sahf
fs
sbb
movsb
inc
or
fisubs
shll
enter
cmc
mov
sub
cmpsb
iret
dec
int3
cmpl
mov
inc
lds
pop
cli
fldl
or
out
daa
pop
stos
lea
sub
mov
dec
inc
mov
in
mov
call
imul
jg
xor
shrb
in
into
xchg
jne
repz
mov
mov
insl
ds
pinsrw
mov
adc
cmp
or
fs
add
xor
stos
jno
sub
add
mov
jge
inc
lret
xor
and
lret
fwait
or
push
push
data16
ljmp
sbb
mov
sbb
mov
sbb
and
jge
inc
push
pop
sahf
sub
mov
andl
nop
cld
mov
xchg
out
out
pop
test
scas
cmp
cmpsb
cmp
xchg
aaa
loopne
inc
gs
insl
xor
cwtl
push
jmp
jle
xor
shll
cmp
inc
dec
xor
lods
sbb
push
jb
jbe
jp
in
sbb
fcmovb
dec
sub
es
add
pop
outsb
aas
xor
inc
sbb
mov
lods
xlat
out
ror
mov
icebp
cmp
icebp
adc
jmp
cmp
int3
ljmp
xchg
add
hlt
aas
push
pop
roll
int3
xchg
enter
sbb
pop
lock
rcrl
jl
mov
mov
adc
jnp
mov
pushf
sarl
hlt
sub
xor
xlat
outsl
mov
push
int
add
movsl
jmp
into
adc
xchg
add
jecxz
mov
or
enter
test
in
sbb
push
test
xor
mov
mov
xchg
fldcw
ja
bound
sbb
fistps
jl
xchg
xchg
cmp
call
sti
sbb
stos
hlt
aam
adc
rclb
lret
xchg
mov
ret
scas
add
sub
mov
in
cmp
jle
fucomip
divb
outsl
jo
pop
sbb
iret
mov
out
adc
ret
sub
xlat
adc
push
xchg
mov
mov
mov
sub
in
xor
aaa
out
fbld
pop
test
pop
adc
faddl
pop
cs
pop
mov
xor
gs
push
xchg
xchg
out
cmp
jmp
pop
mov
sbb
call
jle
jge
fs
inc
mov
std
push
fdivrl
jae
dec
fwait
mov
sbb
insb
pop
std
mov
lret
mov
loopne
and
iret
xchg
ljmp
dec
push
and
lahf
insl
push
int
std
dec
jno
mov
enter
sarb
insl
sub
add
sbb
or
mov
dec
fisubrs
or
and
fcomip
popf
nop
sub
sub
dec
aaa
ficoms
sti
ss
enter
mov
add
in
xchg
push
inc
lods
pop
shrl
mov
mov
mov
mov
and
ss
outsb
lods
mov
ret
cmp
leave
jbe
or
lods
clc
fldcw
mov
outsb
popf
or
jns
jge
and
add
lahf
adc
movsl
jae
mov
push
bound
jo
nop
push
adc
in
call
push
aaa
out
or
popa
dec
test
and
subb
ret
jmp
jl
cmp
clc
sub
sbb
and
and
sbb
insb
insl
test
mov
ja
push
popf
adcb
cmc
fsts
inc
leave
inc
cmp
fimull
mov
pop
subl
lock
push
mov
xor
jmp
push
les
fisubrs
jns
push
mov
andl
stos
arpl
xor
mov
lret
xor
pop
xlat
cmp
repz
lods
nop
ficoms
mov
imul
lret
fsubrl
into
mov
lcall
and
and
and
in
stos
sbb
sub
adc
aad
mov
jae
outsb
lcall
out
adc
dec
iret
pop
mov
fsubrs
xchg
mov
dec
test
dec
inc
cmp
mov
mov
xchg
je
push
cltd
dec
repz
mov
ds
rcll
mov
movsl
movsl
frstor
mov
xchg
dec
bound
mov
insb
push
xchg
lcall
mov
cwtl
mov
adc
pushl
std
ret
nop
test
jl
loope
test
xchg
iret
shlb
out
das
xchg
call
pop
insl
cld
add
out
pop
sub
cmp
ds
stc
cli
sub
cs
ficompl
rcll
inc
xor
out
shrl
ss
test
mov
pop
and
call
hlt
fldl
sub
cmpsl
adcb
fidivrs
mov
lcall
in
ret
dec
mov
inc
lods
in
inc
mov
loopne
out
mov
mov
ret
call
scas
jno
mov
aaa
jp
dec
mov
fnstcw
cld
lods
pop
inc
jmp
fcoml
out
push
mov
xor
add
mov
pop
bound
adcb
and
push
sti
and
les
fwait
push
in
mov
out
inc
push
pop
dec
jne
jg
push
popa
shrl
jmp
mov
ret
push
or
stos
adc
out
fs
pop
das
pop
sub
stos
lcall
es
scas
adc
push
mov
stos
xchg
push
scas
jne
int3
imul
subb
add
xor
xchg
dec
mov
lds
cmp
push
bound
ss
xor
mov
das
inc
xchg
shlb
add
insb
sbb
cli
xchg
test
in
push
sub
jne
int3
xchg
sbb
mov
testb
sbbb
jns
add
cmp
daa
addr16
adc
jge
and
sbb
inc
sahf
inc
xchg
inc
insl
xchg
lret
out
jae
div
and
jmp
inc
sbb
bound
mov
mov
push
jp
push
sti
inc
push
imul
in
dec
mov
clc
stos
in
inc
sbb
incb
negl
mov
jge
add
pop
mov
xchg
pop
int
cs
lea
lret
and
movsl
call
repnz
mov
inc
fildl
aaa
mov
lret
mov
adc
mov
cltd
and
mov
mov
lock
pusha
mov
pop
mov
rcrl
loopne
adc
adc
xchg
loope
lea
cmc
dec
popf
or
cmpsb
fnstcw
shlb
xlat
icebp
mov
adcb
jnp
sub
mov
movsl
jne
scas
xor
sub
idivl
xor
inc
mov
shlb
mov
lea
cmp
mov
cwtl
arpl
pop
ds
sbb
mov
mov
dec
mov
and
add
inc
mov
and
push
rorb
ret
and
dec
stc
movsl
les
cmpsl
push
push
mov
sbbl
xchg
jp
mov
es
adc
dec
inc
push
xchg
pop
inc
add
jnp
mov
or
fistpl
cld
xchg
adc
dec
xor
data16
jno
adc
out
mov
pop
cmpsb
or
aaa
sbb
and
repz
popa
fwait
add
and
sbb
into
mov
jo
hlt
push
lcall
imul
jg
sti
xlat
out
jmp
or
sbb
xchg
ss
ficoml
sbb
rclb
cwtl
mov
sbb
dec
rolb
mov
and
call
shrl
addb
jmp
adc
pop
movsb
les
mov
imul
shll
mov
daa
shr
inc
cmp
int
inc
ljmp
sub
mov
adc
push
push
mov
adc
test
fnstsw
leave
data16
mov
ficoms
rcll
stos
dec
inc
loop
mov
repnz
push
pop
inc
push
into
incb
jae
arpl
stos
jno
aas
xchg
or
adc
xchg
pop
push
aaa
mov
xchg
fwait
test
outsb
fbstp
adc
aam
jb
stc
mov
xor
lret
mov
xchg
cltd
adc
xchg
add
cmp
jle
mov
or
mov
jge
sahf
mov
cmp
mov
gs
or
dec
or
sub
test
lret
lret
mov
loop
mov
cs
xor
fmul
hlt
sti
lret
lods
lcall
stos
repnz
and
cltd
pop
ret
iret
mov
sbb
xchg
dec
cmpsb
daa
jl
xchg
outsb
sarb
and
clc
adc
jmp
mov
push
xchg
lods
xchg
cmp
stc
fmul
sbb
test
adc
movl
faddl
into
mov
jge
test
shll
adc
shlb
xlat
imul
in
dec
daa
icebp
sbb
dec
test
jle
iret
es
xor
aad
xchg
outsl
inc
xchg
andb
xlat
dec
push
sub
sbb
jne
mov
mov
or
fxch
cs
adc
enter
hlt
ss
stc
push
xorl
adc
or
and
add
sbb
inc
sbb
add
dec
inc
jnp
mov
out
call
pop
loope
sbb
inc
mov
mov
jge
jnp
add
stc
fmuls
and
loop
push
test
jns
push
pop
mov
insl
mov
fidivrs
push
iret
test
lahf
jle
inc
or
dec
add
xlat
lea
xchg
pusha
cmp
scas
xchg
rol
rorl
add
jno
dec
fisubl
leave
mov
xchg
push
xchg
cmp
pop
push
and
repnz
inc
mov
push
inc
bound
int
dec
dec
mov
shll
jns
stos
adc
lret
std
sub
outsb
pop
rol
lods
mov
sub
lret
stos
pop
sarl
jg
mov
test
and
jo
pop
cwtl
xchg
pop
mov
mov
mov
pop
dec
sub
sbb
and
add
jge
cmp
pop
mov
jmp
mov
testb
mov
enter
into
repnz
and
xchg
imul
stos
xor
sbb
inc
cmp
sbb
cmp
xor
bound
rcrb
push
dec
add
aad
test
mov
xchg
mov
mov
and
mov
inc
push
add
mov
sarb
inc
outsl
into
bnd
in
or
jp
cli
mov
stos
pop
cmc
pop
dec
xchg
das
or
in
push
mov
lret
loopne
movhps
xor
xlat
inc
aaa
movsb
test
xor
mov
fcomip
popf
sub
imul
and
les
lea
int3
int
jl
inc
fsub
in
rol
loop
sub
cmpsb
gs
mov
mov
jne
in
sbb
push
scas
mov
fs
pop
mov
insl
jl
test
adc
ss
cmp
in
stos
iret
movsl
fdivs
push
rclb
mov
ficoms
mov
enter
pop
movsb
addr16
adcb
loopne
movsl
inc
in
popa
pop
fs
notl
dec
leave
xor
pop
arpl
daa
bound
inc
push
and
xor
daa
cwtl
inc
pop
push
dec
or
insb
shl
or
xchg
je
or
std
pushf
lds
ss
pop
jns
scas
or
cmpsb
mov
sbb
add
call
sub
iret
sbb
fcomp
cld
xor
cltd
mov
bound
movsb
scas
jae
push
xchg
cld
insb
gs
sbb
xchg
jmp
jle
fdiv
insl
sbb
cs
dec
cmpb
add
and
mov
or
inc
dec
cwtl
jbe
aas
jo
jne
mov
fistpll
mov
aam
pop
and
icebp
push
jnp
loope
fisubl
loop
je
rorb
fwait
and
rolb
jno
clc
imul
aas
cmp
add
or
les
jl
push
test
aaa
or
cli
movsl
cli
sub
cmova
jb
lods
cmp
adc
int
mov
xor
dec
xchg
mov
adc
or
movsl
adc
addr16
shr
push
sbb
int3
ret
sarb
daa
ja
clc
mov
pop
ja
pushf
das
test
and
fistpll
inc
mov
ljmp
adc
sbb
mov
decl
test
push
jmp
ds
pop
loopne
sub
shll
xor
dec
adc
adc
test
pop
pop
dec
mov
add
dec
daa
les
test
in
insl
and
cltd
pop
cmp
sarl
inc
xor
add
loope
lds
in
mov
stos
push
sub
addr16
es
or
inc
or
or
or
sbb
mov
lret
jecxz
cmp
decl
and
bnd
sub
add
subl
out
cmp
jo
subb
or
test
adc
mov
jmp
out
xchg
loop
cmp
or
push
dec
or
clc
addr16
leave
lea
ret
adc
testb
jno
leave
lds
hlt
mov
or
addl
adcb
jnp
mov
aas
fbstp
lcall
xchg
inc
dec
js
je
push
push
sbb
adc
cs
add
lahf
sub
xchg
mov
pop
loop
ficoml
cmp
ds
movq
pop
jbe
jae
and
call
inc
sbb
ss
fimuls
jge
aaa
inc
mov
mov
add
imul
enter
leave
add
pop
push
fcoml
mov
push
jb
mov
add
aas
mov
js
mov
push
cmp
dec
fldcw
pushl
test
adc
std
movups
rorl
jle
xchg
shlb
inc
adc
mov
imul
and
adc
cli
popa
sub
jo
sub
lods
dec
lcall
imul
and
cmp
xor
sub
fcmovne
icebp
pop
mov
push
xchg
cltd
mov
je
xor
in
test
in
add
fmulp
add
push
jecxz
push
lds
or
push
xchg
mov
lret
movsl
inc
sub
pcmpgtw
sub
cmp
jae
cmpsl
cmp
andl
add
imul
shr
out
ja
fucomp
subl
and
ret
sub
and
shll
addb
movsl
lret
pop
mov
pop
insl
sbb
pop
cmp
and
gs
pop
mov
mov
mov
xchg
rcrl
mov
and
je
nop
xchg
repnz
xlat
addb
outsb
in
in
xchg
popf
int3
add
in
in
push
arpl
mov
jbe
jnp
push
push
push
adc
jbe
iret
mov
movb
addb
fsubrl
lds
bound
fsubrl
jnp
mov
loope
shr
ret
pop
dec
mov
rcrb
loope
clc
mov
mov
ds
mov
push
dec
lea
outsl
inc
sahf
daa
xchg
dec
or
pop
push
jmp
mov
sti
cmp
sub
fbstp
adc
movsl
loop
clc
mov
push
xor
cmp
jge
cli
loop
sub
push
mov
pusha
scas
leave
call
mov
lcall
outsl
int
sahf
pop
xchg
cmp
aad
testb
into
je
pop
hlt
push
cltd
lcall
dec
sti
jle
cmp
adc
out
or
pop
sbb
mov
or
mov
xlat
icebp
cmp
fwait
or
movsb
mov
lods
or
mov
and
jle
out
inc
cmp
jmp
cmp
int3
fists
jns
cmpsb
sbb
data16
dec
mov
loope
and
sbb
popf
inc
cmc
loop
insb
rcrl
sub
aam
aas
pop
or
les
pop
fsubl
push
jl
sub
js
inc
jl
rorl
xchg
in
jno
pop
jns
push
lods
jg
in
jp
ror
jo
add
dec
lahf
imul
fimuls
jae
push
arpl
inc
dec
cmpsb
out
jb
add
mov
sub
xchg
fildl
inc
mov
or
cmpsb
fsubr
xorb
sub
dec
insl
and
movsb
and
popf
add
push
out
or
mov
push
sub
lahf
or
sub
adc
in
sti
and
in
shlb
and
xchg
into
adc
mov
test
pop
mov
enter
aad
imull
shll
scas
xchg
sub
arpl
adc
push
popf
sub
repz
xchg
mov
mov
into
sub
dec
mov
xchg
cmp
and
adc
xlat
xor
std
adc
inc
pop
sbb
cmp
adc
sbb
jne
pop
test
bsf
jbe
sub
mov
aaa
pop
dec
or
nop
mov
in
adc
aad
adc
fsts
cltd
adc
pop
cmp
jnp
inc
and
cld
arpl
xchg
sub
mov
or
mov
mov
adc
add
sub
xor
mov
jo
jp
xorb
mov
and
ds
outsb
cmpsl
pop
leave
or
cmp
pop
cld
jl
aad
jmp
fisubrs
dec
push
lods
mov
int
wbinvd
inc
push
xlat
cmp
into
push
and
cmp
adc
jns
jle
add
xor
mov
jae
es
out
int
psraw
into
test
mov
xor
xchg
and
outsb
negl
pop
pop
sbb
lods
ret
xchg
xchg
nop
aam
lret
test
fst
pop
popa
sti
hlt
dec
les
add
rorl
scas
das
loopne
pop
fs
loopne
mov
sbb
jmp
out
dec
inc
add
arpl
mov
jmp
cmpsb
lock
mov
sbb
sbbl
jb
outsb
int
xor
mov
cmp
lahf
test
mov
in
cmp
adc
lcall
cmpsl
push
pop
fs
jae
sub
call
imul
dec
enter
mov
js
ja
sbb
leave
ss
sarb
call
mull
xchg
enter
cld
test
insb
out
scas
jbe
inc
jns
add
js
outsl
sbb
jne
or
std
pop
mov
test
or
fchs
das
call
mov
jmp
xlat
dec
gs
pop
add
pushf
push
insb
fildl
and
loopne
jne
push
loopne
mov
cld
mov
decb
fmul
movl
popf
jge
mov
lods
insb
inc
and
jg
sub
cmp
addr16
sbb
sub
cmpsb
rorl
xchg
push
movsl
sbb
xchg
push
rcrb
test
sub
enter
mov
mov
inc
push
int3
sub
mov
jo
test
js
push
cmp
and
push
sahf
mov
sar
jg
repnz
inc
dec
mov
in
cmp
and
lods
sahf
mov
stos
iret
imul
jl
mov
push
std
xchg
inc
mov
fwait
nop
push
pop
cmp
cmp
mov
js
pop
jle
dec
cmpsl
and
mov
xchg
cmp
ffreep
test
daa
mov
sbb
sub
and
xor
mov
sti
cmp
lods
sub
or
mov
insl
mov
mov
add
inc
mov
mov
add
cs
cmp
test
movsl
xor
aaa
cmp
xchg
lods
inc
dec
sarl
mov
ret
and
stos
jns
outsb
jns
popa
inc
fdiv
fdivr
shr
adc
push
cmc
in
cmp
adc
xor
jnp
sbb
xchg
lret
inc
std
stos
mov
movsb
cmp
mov
push
jo
pop
cmp
sbb
sub
cld
jmp
push
les
outsb
sarb
inc
call
inc
stc
fsub
or
in
out
sbb
lds
lods
sbb
adc
into
cmpsl
add
ljmp
out
pop
out
mov
fcmovne
pushf
xor
push
repnz
rorb
repz
in
push
mov
pushf
std
jmp
xchg
test
cmpl
lret
jmp
xchg
in
push
jp,pt
and
or
ds
or
push
jbe
cmp
push
enter
pop
pusha
and
or
jmp
jmp
jno
jmp
int
sub
call
inc
nop
emms
jp
shl
test
inc
repz
rcrl
pop
pop
repz
rorb
call
aas
mov
sub
cld
or
decb
es
xchg
xor
std
cmp
sbb
pusha
sub
dec
int
mov
mov
imul
clc
xchg
jmp
sbb
mov
adc
adcl
mov
outsl
adc
stos
es
add
push
mov
push
repz
js
pop
xor
lcall
lahf
in
mov
lods
aas
dec
dec
lea
pop
jbe
inc
aad
and
daa
jl
imul
jmpw
mov
pcmpeqb
xchg
mov
adc
add
pop
mull
ret
aaa
mov
and
cmpsb
popf
push
sbb
lea
sbb
out
xor
fisttps
cltd
mov
pop
mov
cmp
das
mov
dec
mov
ret
cs
pusha
xchg
add
pop
aad
mov
dec
xor
je
iret
sub
mov
mov
mull
sbb
mov
fidivrl
cmc
lea
cmp
mov
imul
ja
ljmp
xchg
fdivl
adc
in
mov
cli
out
movsl
adc
pop
adc
fxch
cmp
mov
adc
add
jg
jne
insb
imulb
in
xor
aad
or
inc
test
mov
insb
mov
xchg
aas
out
mov
jmp
and
popl
sub
ret
cmpsl
sub
jb
fsubrs
sbb
mov
shll
mov
enter
adc
mov
out
mov
pop
data16
in
lcall
mov
repz
cltd
xor
lock
ljmp
cwtl
cwtl
leave
sbb
ret
in
mov
lret
int3
add
mov
push
ja
mov
dec
fs
sub
daa
sub
sbb
scas
out
xchg
jno
push
ljmp
cmpsb
and
jp
sub
scas
in
push
dec
test
arpl
xor
rclb
lock
cmp
adc
xchg
fisttps
push
dec
adc
sub
mov
mov
lods
and
fists
lea
cltd
test
mov
adcl
inc
ja
movsb
sbb
xchg
lods
push
and
inc
and
cmpsb
outsl
out
or
sub
mov
dec
adc
in
add
stc
jmp
and
mov
adc
popf
addl
or
jns
sti
les
dec
ficomps
pushf
bound
push
fisttpl
in
dec
cs
and
lods
add
mov
cli
pop
daa
adc
lea
push
pop
inc
push
loope
push
xlat
fsub
cmpsb
mov
mov
push
dec
js
out
cmp
sub
pop
mov
repz
pop
adc
and
jmp
sbb
sar
sbb
cld
fdivrl
sbb
les
fbld
jb
mov
mov
jmp
pop
fwait
test
inc
movsb
rcll
pop
in
push
jecxz
mov
aam
ret
sahf
pop
ds
jl
jne
je
pop
aam
loop
sbb
lahf
in
scas
push
fsubrl
adc
leave
pop
dec
testl
stos
add
xchg
loope
mov
jp
je
addr16
test
fcoms
pop
xor
repz
das
and
add
add
scas
aaa
or
rorl
cmp
es
outsl
cmp
test
mov
sub
outsl
jp
push
nop
rorb
xchg
fldt
xchg
in
insl
aas
dec
ss
popf
stos
mov
shlb
adc
push
or
xor
lcall
cmp
lea
ja
adcb
pop
aaa
femms
xor
xchg
push
cmp
xchg
mov
mov
faddl
imul
out
nop
jle
push
pop
inc
sbb
xchg
sub
mov
pop
sarb
mov
imul
jle
jbe
xor
sbbb
negl
inc
pop
inc
bnd
mov
jge
iret
test
fldcw
adc
clc
jae
in
xor
jp
add
iret
aas
adc
adcb
shll
pusha
and
insb
cld
push
outsl
idivl
push
mov
js
imulb
rcr
andb
add
dec
ja
in
or
add
pop
cwtl
fs
pusha
inc
sub
cmp
inc
pop
jns
and
in
stos
xorb
sub
mov
push
sbb
shrl
ds
dec
cmp
cmc
out
loop
dec
js
scas
lret
subps
pop
or
mov
sahf
jp
ds
cmp
mov
lds
enter
inc
outsb
lret
sub
fwait
shl
repz
sahf
pop
jnp
mov
xor
fistl
adc
test
push
aam
mov
fbld
dec
dec
lret
out
xor
pop
or
mov
lret
mov
fadds
iret
mov
jo
xchg
stc
stc
enter
cmp
repz
mov
push
mov
or
sub
scas
push
sbb
pop
pop
xor
bnd
xlat
out
pop
adc
push
testl
fwait
enter
aad
sbbl
mov
cmpsb
adc
lret
jno
loope
mov
and
push
movsl
les
jno
push
push
stos
daa
mov
and
js
testb
dec
mov
mov
add
in
arpl
push
test
mov
xchg
add
xchg
cwtl
push
dec
xchg
bound
jns
lcall
repnz
incb
cmpl
mov
out
add
fcmove
mov
add
mov
pop
mov
pushf
aam
out
adc
fmull
inc
xor
rorl
mov
push
hlt
mov
lahf
cs
sbb
sbb
xchg
inc
pop
push
mov
mov
les
cmp
mov
cmp
xor
mov
dec
hlt
pop
or
cmp
cmpsl
mov
push
outsb
imul
rcll
cmc
inc
xor
movsl
je
push
cmp
aad
leave
insb
and
notl
insl
icebp
mov
shll
lret
mov
xor
add
sub
dec
and
mov
push
push
pusha
jle
pop
fwait
ret
push
pop
pop
ja
bound
jg
sbb
incb
adc
inc
ss
or
pop
sbb
fwait
hlt
or
ror
mov
sub
into
adc
adc
push
repz
mov
pcmpeqb
out
cmp
inc
mov
idivb
adc
or
mov
mov
fldenv
or
addr16
rcrb
cmpb
push
das
rclb
test
out
sbb
adc
cmp
push
dec
ss
ljmp
mov
loop
inc
pusha
push
add
lretw
gs
pop
mov
arpl
leave
sub
cli
test
addr16
xchg
js
or
daa
and
lea
rorb
xchg
xchg
xchg
mov
or
incl
sbb
imul
cmp
adc
shrl
dec
ss
cltd
data16
stc
push
bound
aas
inc
test
push
aaa
adc
cs
movsl
cmp
pop
lock
mov
stc
mov
jbe
or
mov
jle
push
into
mov
jp
aam
js
mov
jmp
push
sbb
sarb
pushf
mov
cld
adc
or
inc
outsb
or
push
lds
dec
ret
mov
inc
jg
xor
push
push
loopne
sbb
enter
out
adc
jge
xchg
cmp
lods
rorb
mov
push
fxch
xchg
js
filds
jno
ret
push
loop
sub
inc
shrl
cs
ljmp
cmp
fcmovu
pop
ret
call
xchg
sbb
stc
in
push
mov
xor
cmp
call
jg
dec
arpl
push
jo
push
movsl
add
sbb
dec
sub
fldt
adc
std
push
shlb
aam
sub
ja
pushf
mov
sub
dec
pushf
mov
pop
aam
inc
test
data16
inc
inc
or
pop
push
ljmp
dec
test
loopne
dec
dec
mov
orb
lds
xor
sbb
cli
pop
mov
andb
out
xchg
aaa
mov
fs
sub
stos
imul
mov
je
adcl
adc
shrl
push
fidivrl
pop
dec
mov
cmpsb
lock
push
inc
sahf
lds
push
jb
or
dec
mov
aad
sbb
add
les
les
jno
ffree
aas
iret
xchg
xlat
cmpsl
fwait
mov
sti
das
cmp
push
xor
aas
push
stos
jl
jbe
popf
and
data16
mov
dec
loopne
icebp
sbb
push
arpl
pop
dec
mov
ljmp
or
cmpsb
pop
push
in
fistpll
icebp
mov
mov
push
aam
xor
xchg
rorl
inc
push
adc
movsb
lret
insb
mov
lods
and
imul
scas
adc
arpl
stc
xor
mov
loopne
cmp
mov
lret
dec
jmp
dec
fildll
test
mov
inc
aad
jns
dec
nop
sub
xchg
or
ja
daa
push
push
bound
scas
mov
lahf
insb
sbb
and
sbb
loopne
xchg
inc
jmp
xlat
mov
pop
repnz
lcall
nop
repz
pop
mov
repnz
mov
fdivrs
pop
ret
fwait
std
scas
leave
lock
arpl
test
mov
lea
repz
rolb
mov
mov
cmp
mov
shlb
js
xor
fstpt
xor
jae
bound
cmp
loop
jae
mov
push
cli
repnz
jmp
lret
jl
xor
cs
adc
out
sbbb
xlat
sub
das
lods
fwait
add
mov
lea
popa
or
mov
mov
jp
mov
popf
adc
adc
dec
repnz
mov
icebp
fcomi
cmp
mov
inc
aas
add
int
mov
rorl
ja
sbb
loope,pn
pushf
movsb
rep
adc
repnz
into
cmpsb
arpl
pop
stc
sbb
jno
lret
into
mov
fisttps
or
jge
test
in
mov
xor
mov
cmp
xor
fs
test
mov
xchg
imul
xor
dec
dec
and
mov
js
inc
call
cld
adc
push
mov
xchg
add
pusha
notb
movsw
fnstcw
pushf
sbb
lret
pop
jle
rol
jmp
sbb
jae
shr
les
push
rolb
cs
lahf
push
inc
rorl
jns
inc
mov
or
jbe
repz
das
test
aam
and
adc
pop
jns
jnp
cmp
lds
inc
sbb
or
mov
les
push
xlat
xchg
push
add
or
dec
lods
mov
mov
das
shl
mov
frstor
into
pop
dec
push
jb
jo
popa
jp
push
addr16
add
imul
mov
mov
aaa
add
jnp
add
adc
and
push
lcall
rcr
mov
lahf
push
mov
dec
adc
fstpt
sbb
mov
jmp
dec
hlt
xchg
jno
lods
pop
lret
cmp
mov
data16
hlt
stc
push
adc
fidivl
lea
repz
cmp
cmpsl
fiaddl
mov
popa
mov
stc
add
sub
into
add
push
das
rolb
jp
sub
call
aam
fdivrl
lcall
mov
nop
arpl
es
fwait
cld
popf
mov
xchg
or
mov
or
jne
icebp
lods
add
jns
xlat
pop
sub
sub
iret
icebp
stc
sbb
pop
or
bswap
inc
xlat
or
dec
stos
lods
dec
mov
cmp
and
hlt
jne
cwtl
inc
dec
orl
cmp
int
inc
lahf
mov
js
ffreep
outsb
push
mov
dec
test
sub
xor
lahf
pop
popf
xor
xor
insb
in
test
adc
dec
xor
add
or
xchg
and
inc
xchg
cmp
into
fs
cmpsb
lcall
xor
sub
and
cmp
jecxz
lea
or
and
and
lods
push
add
mov
inc
repnz
xchg
xchg
and
pop
bound
cmpsl
daa
pop
adc
out
cli
leave
addr16
lret
movsb
ljmp
mov
mov
cli
or
lock
add
dec
imul
xor
shl
cmp
mov
xor
mov
xchg
add
shrb
add
xchg
push
cmp
shrl
adc
push
js
mov
call
shll
js
fnstenv
clc
xchg
test
imulb
rcrl
jg
cs
push
and
pop
mov
das
push
sbb
mov
mov
mov
xchg
xor
add
xor
sbbb
or
inc
sub
popa
inc
jbe
shrb
xchg
xchg
push
mov
testl
bound
mulb
fwait
test
or
or
and
das
jne
pop
out
pop
cmp
cmp
jecxz
or
in
add
xchg
dec
and
jae
mov
ja
xchg
dec
pop
ret
xchg
sbb
mov
loope
and
add
jmp
push
xchg
adc
add
mov
lods
pop
js
sbb
xchg
jp
das
call
sbb
dec
push
mov
or
push
xchg
push
outsb
fninit
adc
mov
leave
mov
lret
fldcw
cwtl
jae
ret
pop
mov
popa
aam
out
cmp
inc
int
push
fcmovu
aam
rolb
push
mov
xlat
mov
shll
push
hlt
hlt
ja
leave
push
out
fcoms
adc
mov
sub
fists
enter
and
push
lds
add
add
mov
pushf
cs
cmp
mov
ljmp
pop
orb
fsubs
jl
mov
add
mov
scas
cltd
inc
jmp
jne
sbb
jae
lock
out
sub
xor
mov
push
add
inc
iret
dec
sarl
stc
mov
cmp
xor
imul
ds
mov
gs
lret
cmp
mov
aam
sub
les
int3
test
shll
pop
in
xor
xchg
fcoms
mov
or
scas
aad
std
sarb
mov
rol
sti
mov
jns
mov
push
sub
xchg
sbb
insb
add
inc
mov
fdivrs
inc
daa
xorb
add
es
das
cmp
inc
hlt
out
jp
jecxz
mov
mov
xchg
jg
gs
enter
loopne
addr16
dec
push
push
rcrl
dec
xchg
frstor
sub
mov
xorb
data16
xor
cli
push
jo
loop
mov
add
das
jg
inc
pop
pop
mov
jge
ljmp
mov
mov
stos
jno
inc
mov
xlat
loope
das
mov
dec
lret
dec
and
int
or
repnz
mov
scas
out
ret
test
cmpsb
loopne
dec
add
dec
enter
sbb
std
lret
lahf
test
test
mov
and
mov
xchg
iret
out
xor
mov
push
loopne
jl
mov
daa
mov
clc
xchg
popf
stos
pop
xor
aaa
std
sbb
jp
cmp
push
out
push
outsb
es
bnd
aaa
mov
jnp
mov
sub
xchg
xchg
stc
imul
leave
bound
xlat
jge
ret
into
xor
mov
fldt
sub
adc
adc
jmp
aaa
sbb
push
mov
rorl
std
stc
mov
cmp
inc
imul
insl
stos
xor
push
cmpsb
enter
push
mov
lcall
stos
mov
mov
in
mov
xchg
shll
cmp
push
xchg
cmpsb
push
sbb
rolb
dec
jmp
sub
rol
jecxz
ja
push
sbb
out
dec
cmpsb
sub
sub
jbe
repz
icebp
das
hlt
daa
pop
jne
fidivrl
xchg
shll
stc
in
es
movsb
jl
icebp
sti
dec
fnsave
aaa
push
mov
sbb
dec
or
sub
mov
fs
cmpsl
xchg
es
mov
repz
adc
loope
jl
xchg
ss
out
aam
cmp
dec
fsubs
test
or
pop
stos
sbb
cli
insl
stos
and
adc
adc
aad
adc
push
xor
outsl
mov
mov
or
jo
xchg
dec
aas
xchg
ror
mov
movsb
loopne
lahf
jecxz
arpl
add
arpl
es
inc
fbstp
adc
pop
xor
pop
jno
mov
adc
mov
lret
lret
aam
ret
sub
sti
idiv
push
pop
jp
jns
ss
mov
cmp
std
jbe
xorl
jno
dec
lret
pop
pushf
into
mov
sub
mov
in
pop
lret
arpl
xchg
repnz
or
enter
sahf
xchg
pop
pusha
int
out
cld
push
sub
pushf
dec
inc
lods
jbe
enter
sbb
orb
insl
pop
xchg
pop
clc
mov
popa
sub
cmp
in
les
loop
ss
lock
dec
mov
cmp
sub
lcall
push
push
mov
sbb
push
sub
ds
jno
les
push
js
sbb
outsl
mov
ss
fs
iret
int3
data16
xor
sahf
pop
aad
cmp
mov
in
dec
int3
lods
xor
push
mov
movsl
pop
sbb
loop
dec
sub
movsb
and
dec
pop
jecxz
out
mov
mov
inc
addr16
jmp
sarl
mov
jecxz
je
cmp
in
ss
cltd
xchg
xchg
andl
dec
fucomp
jge
cwtl
fistps
xchg
dec
and
loop
push
daa
xor
mov
imul
js
fstp
or
scas
insb
insl
push
add
ror
insl
push
lcall
cli
push
push
insl
dec
icebp
push
xchg
ret
xlat
enter
add
addr16
dec
cld
and
ret
dec
jle
cmp
push
lods
in
out
idivb
sbb
pop
fsubrl
and
out
mov
xor
lahf
pusha
mov
das
cmp
int
out
push
imul
mov
and
xor
fs
xchg
int3
or
gs
push
loope
push
fmull
cmc
aaa
push
mov
orps
ljmp
jnp
add
jp
sbb
mov
aam
inc
xor
bound
idivl
jo
push
lds
test
je
mov
outsb
dec
sub
mov
mov
repz
dec
cmpsb
mov
add
cs
movsb
jge
pop
jnp
sbb
iret
xchg
incl
jle
jle
and
data16
data16
jo
aaa
push
push
int
push
popf
mov
scas
xor
lods
std
loope
loope
stos
xchg
add
loopne
push
daa
out
pop
xchg
xor
fs
ss
jg
and
xor
sub
popa
in
jecxz
mov
ja
adc
leave
outsb
mov
pop
mov
lcall
idiv
mov
mov
mov
mov
mov
add
pop
lds
enter
orb
les
pushf
inc
adc
shll
mov
xchg
enter
lods
mov
mov
add
ljmp
ja
cmpsl
or
int3
sarb
push
aaa
movsb
filds
cld
and
out
cmp
nop
pop
mov
testb
cmp
mov
xchg
jnp
xchg
outsl
pop
cmpb
jnp
clc
xor
lds
push
xlat
jmp
jb
pop
notl
movnti
and
mov
xchg
push
push
out
popf
outsl
cmp
jno
lcall
mov
xlat
mov
scas
sub
test
mov
adc
in
cmpsl
sbb
stc
mov
jmp
loope
dec
and
xchg
fidivrl
out
sub
fcoms
xchg
jmp
popa
fs
int
mov
fwait
movsb
mov
sub
popf
mov
push
add
jb
dec
into
or
outsl
jle
test
push
dec
mov
loop
repnz
int
mov
shrl
xchg
xchg
xor
inc
scas
push
mov
cmpb
jecxz
ja
and
adc
imul
insb
mov
push
test
and
sub
pop
ret
mov
in
fwait
repz
mov
mov
shr
mov
cli
shl
dec
outsl
jg
ss
fsubl
shl
xchg
cmpsl
test
or
mov
mov
dec
shll
xor
jle
outsb
adc
je
scas
ds
sahf
insl
mov
dec
xchg
flds
mov
jne
lahf
push
and
arpl
or
or
arpl
xchg
test
dec
pushf
test
or
push
sub
pop
leave
shll
iret
pop
and
pop
xchg
aaa
jge
fwait
xor
jne
es
or
or
or
xor
lods
outsb
imul
nop
mov
inc
popf
inc
mov
adc
and
mov
adc
or
ret
xor
daa
sub
ss
lods
adc
mov
jle
sarl
sub
jp
test
jnp
push
lret
or
push
loopne
cmpsb
cmpsl
lock
jns
push
out
add
add
mov
add
mov
loopne
xchg
xor
mov
pop
les
xchg
add
jmp
cmp
test
and
cmp
push
mov
jne
test
jmp
mov
movaps
and
outsb
pushf
mov
add
sbb
dec
mov
rcl
ljmp
lret
add
arpl
push
dec
int3
in
arpl
jbe
in
xor
je
stc
mov
rclb
int
lock
push
dec
clc
xor
roll
stos
and
fnstenv
das
cs
sbb
fwait
mov
adc
push
cmp
jecxz
dec
fcmovu
sub
fimull
sbb
inc
sbb
mov
mov
mov
jbe
xor
std
divb
mov
ds
jnp
cmp
gs
adc
mov
and
jno
neg
inc
jbe
mov
xchg
out
aas
pop
pop
push
out
dec
mov
and
jl
movsb
stos
and
repnz
cmpsb
ljmp
inc
xchg
pop
sahf
outsl
cmpsb
push
pop
scas
fmul
out
sub
iret
adcb
loop
cmc
fnsetpm(287
repnz
addr16
mov
popf
cmp
jl
jae
jnp
scas
xchg
and
xor
sahf
cmp
xchg
pop
dec
mov
mov
inc
les
fbld
push
add
fistps
mov
pop
lods
jb
cmp
lret
mov
shll
xchg
push
cmpsl
jo
cmp
imul
jae
inc
shr
in
xchg
adc
call
push
and
sahf
lods
sbb
test
pop
das
js
adc
pop
pop
xchg
cmp
ret
dec
ret
imul
daa
bound
pop
xchg
rep
mov
das
xor
std
or
dec
ljmp
stc
inc
outsl
mov
push
inc
sbb
sbbl
and
in
sti
jmp
test
aam
push
cmp
push
inc
bound
ret
sub
jle
ja
out
jg
mov
push
mov
add
and
xchg
xchg
dec
cld
sub
xlat
rorl
jl
les
inc
aam
mov
xchg
int3
xchg
cmp
jbe
dec
sub
or
inc
popf
mov
sbb
fimull
xor
jbe
mov
in
push
mov
sbb
push
mov
cmp
cmp
out
repnz
add
insb
inc
mov
out
cmp
aad
ret
je
popf
cwtl
loopne
jnp
mov
incb
shrb
mov
xor
pop
pop
and
sbb
iret
jnp
sub
aas
add
outsb
mov
pop
in
jb
dec
addl
ret
lcall
in
out
add
data16
dec
jbe
popa
mov
sbb
pop
fcmovnb
add
jo
push
mov
icebp
mov
jle
ja
or
jecxz
lods
shr
inc
scas
pop
int3
dec
lldt
mov
or
jbe
or
inc
vhaddpd
ret
sarl
cwtl
lret
xor
mov
nop
sub
ljmp
mov
rolb
loope
imul
sarb
pop
mov
or
rorb
push
cmpsl
jno
daa
das
lds
cmc
stc
push
add
or
jle
fbld
pusha
pop
in
imul
ret
cwtl
incl
in
mov
movsl
dec
lcall
and
and
cmp
pop
arpl
mov
xchg
fwait
into
jmp
data16
add
cmpsb
xchg
sub
out
add
add
sbb
push
jae
inc
pop
xchg
and
cmp
in
mov
or
mov
fwait
xlat
pushf
inc
or
cmpsb
inc
iret
cmp
sbb
loope
pop
inc
add
jnp
sbb
pop
arpl
bound
push
xchg
pop
and
enter
mov
testb
fsub
jno
incb
push
push
jge
fs
cmp
les
jno
push
jnp
hlt
decb
dec
lods
fstp
adc
test
xchg
in
push
jle
mov
push
mov
xor
in
and
pop
add
cmpsl
mov
mov
adc
in
das
lcall
imul
dec
bound
push
cmpsb
in
lcall
dec
dec
sub
mov
lds
testl
adc
cmp
push
sub
scas
jp
or
movsb
mov
push
push
mov
dec
jl
dec
pop
fldenv
push
dec
jo
fwait
inc
shrb
in
mov
movsl
lahf
xchg
imul
inc
jle
nop
pusha
outsl
addr16
sti
aad
call
rcll
jle
inc
cmp
sub
lret
sub
and
dec
and
jle
jmp
pop
sarb
xchg
xor
adc
inc
mov
rcrb
mov
cwtl
out
sub
mov
dec
add
lods
pop
aam
mov
movsb
fidivl
stos
fs
add
in
lds
clc
jne
pop
out
ret
lret
sub
mov
ds
xlat
cwtl
lods
mov
or
outsb
loop
pop
xor
lea
ljmp
push
ss
out
ds
imull
arpl
and
inc
iret
loopne
mov
push
insb
xchg
hlt
and
add
xorb
xor
popa
xor
and
cmp
and
ss
pop
push
outsl
out
mov
ljmp
call
mov
movsl
sub
sbb
inc
jns
out
add
mov
and
inc
sub
ljmp
mov
cmp
push
add
sysexit
rolb
mov
push
in
mov
lahf
xorl
mov
mov
jo
xor
mov
mov
and
pop
push
xor
xor
dec
aaa
test
jae
jno
mov
loop
fwait
add
xchg
in
fcmovne
or
dec
hlt
push
popf
aas
dec
cmp
test
inc
xor
lahf
das
imul
mov
arpl
or
push
mov
fisubrs
xor
test
js
mov
mov
out
fcmovbe
test
sbb
leave
xor
std
fbstp
push
std
lret
xchg
add
adc
jb
xor
jbe
pop
xchg
lds
dec
adc
pop
stos
sub
push
sub
je
out
dec
mov
mov
mov
sbb
sub
mov
or
outsl
sbbb
les
pop
adc
cmc
sbb
mov
jecxz
xchg
inc
ret
cmc
fwait
cli
push
dec
adc
add
push
leave
mov
cmpsl
sbb
sbb
xchg
and
dec
ret
movsl
xchg
pop
sub
push
cmp
cs
aas
push
loope
jne
mov
cmp
cmp
mov
push
dec
mov
push
push
pop
xchg
hlt
sarw
sahf
lock
bound
mov
jmp
mov
sbb
mov
inc
loopne
inc
cmp
shlb
or
or
popf
addl
add
jmp
pop
pop
outsl
insl
xchg
add
jmp
into
fnstenv
and
mov
test
data16
add
out
mov
adc
in
out
mov
aas
mov
jmp
sub
std
mov
cmp
inc
jno
lahf
adc
les
int
xchg
dec
jl
cmp
xor
jl
mov
das
mov
push
ds
lcall
lds
inc
dec
adc
cmc
clc
pop
mov
rcrl
fldl
fidivl
sub
inc
test
cltd
bound
and
lock
jne
mov
in
push
enter
lds
push
inc
mov
xchg
aas
cmp
ret
xchg
lret
clc
into
dec
and
pop
sbb
xchg
cmp
es
mov
mov
stc
pushf
and
xchg
mov
cld
adc
and
sbb
ret
scas
fcompl
push
jno
lahf
mov
lret
fisubrs
mov
inc
int
xchg
ret
dec
xchg
repnz
inc
cmp
cmp
lods
adc
popf
pop
jge
add
arpl
test
add
pcmpeqb
pop
icebp
cmp
dec
xchg
fistl
mov
fldt
adc
movsb
imul
hlt
push
pusha
or
mov
adc
mov
lcall
push
mov
fwait
and
and
and
dec
mov
fdivs
dec
inc
es
add
cmp
dec
mov
inc
cmc
cmpsb
pop
into
xor
stc
mov
bound
cmc
in
fldcw
inc
xchg
xchg
mov
xor
jge
jecxz
sbb
test
shl
lret
fists
je
push
mov
jle
lcall
dec
jbe
push
outsl
mov
stos
mov
filds
cltd
jg
mov
cwtl
sbb
cwtl
pop
pop
aam
mov
sbb
movsl
es
outsl
nop
sbb
dec
gs
scas
adc
inc
pop
sbb
mov
push
xchg
mov
lods
inc
sub
mov
cmp
mov
or
push
lock
mov
repz
das
or
fstpt
xor
cmp
lock
ret
or
gs
in
or
mov
mov
mov
outsl
xor
ds
mov
insb
xchg
or
shll
inc
jo
mov
aad
mov
mov
leave
sbb
into
mov
jmp
sub
mov
fnstenv
cmp
nop
repnz
movsb
aam
out
mov
dec
or
out
mov
xor
inc
cmp
push
mov
mov
mov
int
out
pop
out
ja
add
pop
movsl
push
mov
pop
sub
ret
lahf
push
test
mov
pop
sti
or
or
les
pop
lods
lea
imul
stc
in
mov
fsubr
push
mov
outsl
nop
es
lock
fdivrl
push
cmp
cmp
xor
or
popa
mov
test
and
stos
aad
clc
pop
inc
jae
shl
sbb
pop
pusha
insl
mov
add
icebp
mov
push
outsl
je
adc
pop
pop
mov
test
cmp
push
divl
test
inc
cmp
xchg
popa
in
xlat
pushl
cltd
jne
jbe
and
imul
xor
xor
xchg
xor
xlat
js
inc
cmp
lahf
loopne
js
jl
cmp
shlb
cmc
dec
sub
repnz
popa
adc
jae
mov
lea
shl
scas
sahf
idivb
pop
ds
bound
or
mov
lods
mov
mov
arpl
aad
mov
out
push
push
pop
xchg
aam
dec
xchg
adc
xchg
jp
inc
sahf
addr16
pop
sub
fidivrs
add
fstpl
leave
jno
sub
loopne
jge
roll
jg
insb
iret
mov
sbb
imul
out
xlat
inc
mov
sbb
stos
movsb
sbb
test
lea
arpl
adc
outsl
sub
popf
lret
pop
push
lods
mov
scas
imull
and
cld
xor
jle
push
gs
icebp
mov
inc
addl
sbb
jmp
mov
sub
sub
add
jmp
pop
es
dec
aam
cwtl
cmp
icebp
mov
sbb
insl
repz
mov
ret
add
dec
sbb
fstpl
dec
in
pop
shl
and
dec
addl
es
cmc
sbb
sub
dec
or
cmp
jns
fists
sbbl
push
push
lret
push
inc
jb
cmp
cltd
movsl
or
les
mov
pop
xor
test
cmpsl
lds
out
add
dec
add
call
fadds
repz
lock
fwait
jmp
jnp
imul
test
jmp
inc
push
jl
add
sub
sub
repz
int
inc
dec
aas
push
into
inc
call
or
icebp
jmp
sbb
cli
push
cltd
or
cs
outsl
push
xor
lret
incb
inc
je
jo
xor
inc
es
mov
int3
repz
mov
rcrl
pop
add
and
insb
fisttpll
push
inc
out
jo
xchg
shrb
aaa
shrl
and
sub
push
into
or
mov
xorb
fistpl
ficomps
rcrb
add
mov
xor
pmulhw
add
mov
pop
jg
lods
sbb
mov
jbe
daa
dec
out
push
pop
fnstsw
jb
xor
xor
sahf
pushf
lret
dec
test
push
sub
mov
outsl
jl
add
mov
mov
push
jp
xor
adc
js,pt
pop
jno
cmpsl
or
xorl
cmp
pop
adc
or
xchg
jmp
testl
int
clc
fwait
popa
mov
mov
pop
inc
lcall
inc
ljmp
jl
in
pop
les
aaa
inc
sub
mov
xchg
cwtl
jmp
dec
and
pop
inc
sahf
into
xor
push
fsts
mov
push
loopne
mov
sub
stc
push
aas
jecxz,pn
sub
les
or
adc
rolb
daa
data16
lds
ret
sti
or
and
roll
aam
mov
sub
jae
outsl
movb
or
aam
lahf
mov
mov
jl
dec
ret
fdivs
shl
insl
adc
es
test
fstpl
mul
pop
mov
hlt
cmp
imul
insb
xor
out
jl
xchg
jmp
jne
insl
lds
test
es
mov
cmpl
push
add
popa
outsb
repnz
pop
idivl
and
add
jbe
movsl
aad
mov
dec
fisubrl
push
scas
mov
sub
and
cmp
cmpsb
xlat
pushf
mov
mov
enter
or
xorb
hlt
bt
stc
rcrb
pop
test
dec
inc
fistpl
mov
adc
loope
enter
pop
mov
push
lea
xchg
cli
testb
mov
cltd
jl
shl
data16
shlb
cs
fadd
pop
adc
fst
loopne
sahf
xor
std
mov
aam
fxch
jmp
xor
or
fnstcw
repnz
popa
cld
jmp
mov
cmpl
or
or
mov
xor
jb
jecxz
insl
mov
xor
push
and
pushf
mov
dec
mov
xor
jmp
idiv
aad
jo
scas
push
and
rcl
dec
popl
mov
lock
mov
repz
loop
mov
push
dec
rclb
or
sub
sub
xchg
xchg
out
push
mov
rcrl
sbb
jnp
mov
sbb
cmp
dec
out
mov
test
dec
test
pop
aas
mov
sbb
inc
mov
jle
xchg
or
gs
push
and
mov
ficomps
add
dec
test
mov
hlt
and
mov
cmp
lcall
or
jl
out
xlat
inc
lods
bound
insl
mov
pop
loope
mov
push
lea
fadds
aaa
pop
je
jnp
xor
test
out
push
cmp
jg
adc
push
inc
mov
mov
push
dec
and
push
pop
cltd
insb
lds
xchg
pop
push
orb
test
or
lret
mov
lods
adc
adc
add
scas
jmp
or
cmp
stc
idivb
xchg
insl
xor
fsubp
push
jmp
je
cmp
push
arpl
xchg
mov
je
jle
shrl
nop
pop
sbb
mov
sbb
fcmovbe
dec
cmp
xchg
xchg
fwait
jl
ljmp
xor
loop
scas
dec
adc
push
inc
dec
out
cmovns
mov
test
jae
fidivl
mov
std
cwtl
cmp
lcall
mov
into
sarl
push
fcmovbe
adc
adc
hlt
test
stos
jle
cmp
mov
jmp
int3
push
hlt
sub
xlat
xchg
dec
addr16
idiv
sub
leave
sti
mov
movsl
shrl
sbb
mov
cmp
sub
inc
test
jge
das
lahf
scas
or
cmp
and
mov
inc
loopne
mov
lods
inc
jno
andl
xchg
or
repz
shr
push
ret
dec
sbb
or
pop
clc
pusha
pushf
or
shlb
jp
nop
dec
pop
sub
cmp
cmp
jge
sbb
clc
stos
xor
pop
aaa
pop
subl
bound
lret
out
pop
fldenv
or
es
mov
gs
inc
nop
dec
lret
aas
lds
nop
daa
push
lahf
mov
inc
pop
fistl
stc
fbstp
xchg
mov
inc
sbb
jbe
call
push
fs
jmp
subl
sub
aam
mov
lret
dec
xchg
iret
popf
or
jae
adc
cmpsl
stos
jmp
outsl
cs
pop
es
insb
je
divl
xor
sbb
mov
push
jb
inc
jne
aad
lahf
pusha
repnz
cmpsl
vmovlpd
add
or
test
pop
mov
fsubs
jge
popl
scas
dec
xor
jecxz
andl
push
jo
xor
cbtw
adc
adc
sbbb
addr16
out
or
xchg
sub
mov
aad
push
aas
mov
je
xor
iret
scas
ret
xchg
xor
mov
pushf
pushf
in
mov
push
inc
mov
insl
dec
frndint
fisubrs
lret
es
enter
adc
lea
xor
or
inc
jge
xchg
stc
pop
mov
notl
cmp
rcrb
loopne
cwtl
leave
insb
cmpsl
jp
ds
or
lds
jae
adc
ljmp
cmp
ljmp
dec
pushf
mull
shlb
mov
mov
dec
xor
and
xor
out
jo
xor
int3
shr
ficompl
das
adc
add
inc
and
call
jl
and
mov
pusha
cmp
int3
scas
push
jl
adc
or
mov
or
and
lret
xor
mov
sbb
imul
jnp
es
xor
jg
inc
imul
xor
cmp
pop
insl
xor
or
dec
pop
add
mov
lods
pushf
hlt
sub
mov
dec
int
xlat
mov
and
enter
sbb
adc
ret
cwtl
adcl
xor
adc
test
shrb
fcomi
xor
sbb
push
into
mov
in
jmp
test
push
add
pop
mov
mov
adcb
lret
push
and
add
dec
add
push
shrl
or
mov
imul
mov
dec
sub
cmp
mov
mov
cmp
xchg
adc
dec
adc
out
out
test
and
jne
dec
fcmovnbe
js
push
dec
andb
outsb
xor
arpl
inc
jbe
fwait
mov
xor
repnz
inc
pushf
jae
imul
ret
sub
add
sub
adc
mov
xor
cmpsb
setno
pop
scas
loopne
mov
xor
in
push
out
lods
cmp
roll
jae
aas
scas
pop
sbb
pop
mov
roll
mov
scas
pop
lods
iret
fldenv
roll
jmp
inc
test
pop
out
insb
xor
jns
jle
mov
ss
icebp
xor
jo
fcoms
data16
js
insb
rolb
push
push
into
mov
jmp
push
xor
dec
xor
out
xor
inc
xchg
jo
daa
add
mov
sub
test
pop
and
sub
sub
sbb
push
xor
inc
fcomps
shll
int
sbb
pop
or
scas
push
xlat
add
sub
les
sub
lcall
push
arpl
inc
movsb
out
inc
pop
les
adc
pushf
jnp
test
sbb
push
enter
dec
push
push
cmp
pusha
pop
into
sbb
daa
xor
lods
mov
push
bound
adc
imul
xchg
jl
ret
cld
sbb
add
lds
popa
insb
cmp
sub
add
dec
jle
push
push
dec
bound
mov
fists
mov
lcall
or
or
mov
das
int
mov
add
test
lret
mov
xor
cmpsb
popf
sarb
xchg
fnsave
mov
test
mov
shr
pop
pop
aaa
insl
jg
jl
shll
pop
add
stc
lahf
jne
leave
dec
xchg
sbb
stos
mov
aad
xchg
push
push
xor
push
cmp
cmc
adc
adc
sbb
fnstsw
mov
popf
repz
hlt
nop
sbb
repz
js
iret
xchg
cmp
jno
test
xchg
mov
fisubrl
cmp
mov
in
xchg
xchg
xor
cmp
pop
movb
xor
cmp
push
and
nop
xchg
pop
movsl
or
xchg
js
dec
into
stos
xchg
dec
out
add
mov
cmpsb
dec
pop
insl
sahf
in
adc
cmp
or
lock
test
pop
subb
and
inc
scas
lahf
inc
das
adc
adc
push
push
das
mov
js
add
scas
cmpsl
lods
outsb
mov
sbb
shll
mov
cmp
rcrl
sbb
in
cmp
rclb
shrb
cmpsl
in
mov
imul
das
out
inc
mov
enter
cs
xchg
xor
push
or
cmp
mov
and
rcrl
pushf
or
cmp
or
or
popa
and
pop
aad
push
push
popa
shll
clc
gs
iret
adc
ror
cmp
ja
incl
xchg
clc
push
mov
fldcw
jbe
cmp
cmp
lds
mov
dec
xlat
inc
pop
pop
movsl
xchg
xor
sub
popa
xchg
mov
sub
pushl
mov
fs
fs
fcoml
pop
xor
cs
lret
mov
fcmovbe
or
mov
and
popf
xchg
jae
icebp
xorb
mov
pop
push
ds
cmc
jl
test
mov
leave
lods
test
pop
jnp
mov
rorb
outsl
pop
inc
and
or
lea
bound
fnsave
jnp
hlt
sub
rorb
daa
mov
dec
pop
cmp
xor
mov
imul
add
in
xchg
int3
add
ljmp
and
insl
fs
cs
add
dec
and
mov
loope
fdivrl
mov
inc
xchg
mov
pop
scas
and
ljmp
or
inc
or
ret
xchg
jb
movsb
jmp
sbb
pop
fs
int3
cltd
mov
or
xchg
inc
movsl
mov
shl
call
cld
mov
lods
out
cwtl
iret
mov
inc
adc
jge
sti
pcmpeqb
xchg
sbb
xor
pop
jge
rorb
mov
xor
scas
dec
je
jo
lea
out
add
mov
fcompl
add
and
stos
or
dec
fldl
cs
mov
rcrb
ret
sbb
lods
jmp
bound
sahf
aam
cmp
sub
adc
add
clc
sbb
mov
and
dec
push
mov
jle
adc
jle
sarb
movsb
lahf
or
mov
and
and
ss
jecxz
aaa
addr16
push
cs
mov
mov
mov
pop
inc
outsb
adcl
pushf
xchg
scas
in
aaa
lahf
sub
rorl
aaa
mov
in
jno
adc
inc
dec
ja
out
sti
fmull
xor
xchg
ja
jno
push
ljmp
jae
mov
data16
gs
cli
fisubrs
es
cmpsb
sbb
and
std
clc
ds
jo
addb
inc
icebp
pusha
int3
clc
movsb
cmp
inc
cld
pop
fwait
inc
test
imul
lea
mov
nop
xchg
cmpsl
push
xchg
sarb
negb
and
jmp
mov
xchg
jo
xor
jae
or
sbb
stc
lock
roll
repnz
movsl
imul
jns
add
pop
shr
mov
inc
movsb
add
adc
icebp
jnp
or
or
movsb
mov
pop
ljmp
bound
jb
dec
int3
scas
xchg
sti
jns
movsl
sbb
int3
mov
ja
xchg
decl
cli
es
aad
and
xor
xchg
adcl
sarl
dec
pop
cwtl
inc
push
arpl
fwait
das
fdivs
in
scas
shlb
clc
or
in
out
out
pushf
aam
int
loope
push
dec
mov
aad
dec
stc
pop
out
fdivr
xor
bound
dec
xor
and
outsl
enter
imul
mov
adc
gs
popa
movsb
cmpl
or
lcall
rcrl
shlb
pop
and
pop
sahf
mov
mov
pusha
push
ret
pop
outsl
mov
cmp
cs
and
divl
pop
cmp
arpl
push
daa
or
loop
sub
aas
push
cmp
push
mov
mov
les
push
dec
xchg
cmpsb
dec
lock
lahf
jo
lahf
js
out
push
loopne
decl
fidivrl
push
cs
aad
mov
jecxz
in
jp
dec
mov
iret
or
popa
je
std
sub
xor
pop
test
in
or
mov
or
mov
clc
inc
int
sbb
arpl
jl
xor
cmpsb
ret
iret
fistpll
mov
push
outsb
call
imul
enter
mov
mov
lds
and
jge
std
cli
add
mov
cmc
inc
dec
add
add
xchg
pop
scas
aam
push
insl
aas
mov
dec
mov
lods
and
hlt
popf
cmpsl
jne
jae
fwait
or
cli
insb
into
or
pusha
cmp
addr16
cmp
ds
or
std
or
clc
mov
pop
xor
push
jl
xchg
mov
fadds
jnp
sbb
inc
mov
imul
aaa
in
jns
testb
mov
sbb
call
mov
jle
pop
xor
orb
mov
lea
pop
fwait
mov
mov
cvtdq2ps
test
scas
xor
push
iret
aad
fsubrl
into
cli
jae
xchg
mov
lahf
cli
imul
lahf
mov
cmp
fisubrl
in
movsl
test
test
sub
daa
push
mov
loop
scas
or
dec
adc
lea
call
out
js
sbb
cld
push
pop
sbb
xchg
in
pop
lods
push
and
and
into
pop
adc
dec
iret
cld
lods
sbb
stos
and
pop
sahf
or
mov
mulb
pop
shlb
cld
aaa
xor
xchg
popf
sbb
xchg
pop
push
cli
leave
sub
mov
mov
into
fstps
addl
inc
hlt
add
jge
ss
lds
push
cmp
repz
adc
aam
ds
jne
dec
incl
cmp
sbb
xchg
inc
jae
orl
xor
call
lcall
jno,pn
sti
mulb
add
inc
mov
scas
mov
sti
mov
jg
rcrb
and
sub
or
in
popl
stc
sbb
lods
stc
add
js
push
dec
jmp
aas
xchg
push
outsb
loope
xchg
inc
inc
outsb
xor
dec
pop
mov
aaa
pop
xor
adc
ss
subl
xchg
out
mov
xor
mov
jbe
pop
pop
into
incl
stos
mov
cwtl
xchg
std
dec
pushf
adc
sbb
mov
cmp
fistpll
jbe
scas
fistpll
push
ret
sbb
add
pop
mov
pop
in
cmpsl
xchg
cs
mov
test
mov
loope
mov
jo
cmp
rorl
jmp
nop
pop
movsl
mov
pop
xor
jo
xor
sub
leave
cmc
dec
and
xchg
adc
push
xchg
leave
add
mov
repz
outsl
insl
push
test
aam
cmp
add
pusha
mov
ret
inc
leave
test
repnz
in
cmpb
lret
fwait
add
xchg
add
fs
sbb
sbb
jb
adc
cli
or
in
aam
out
push
clc
enter
mov
cld
add
test
or
mov
jecxz
pop
imul
mov
insb
popa
mov
sbb
es
adc
jl
das
ss
out
and
mov
adc
scas
jb
sahf
sub
repnz
mov
dec
pop
xchg
inc
fisttpll
and
aam
in
fidivs
adc
mov
and
stos
mov
das
cmp
pop
sbb
push
ficoms
test
mov
mov
mov
xor
fwait
hlt
mov
rcrl
call
je
jecxz
pusha
scas
lods
xchg
imul
add
bound
xor
leave
xchg
xor
pop
push
mov
adc
push
ret
sub
adc
sbb
and
scas
cs
shrl
rcll
cmp
mov
sbb
inc
pop
leave
and
popa
dec
shrb
scas
mov
ja
lods
mov
fsubrl
pushf
enter
in
xchg
pop
mov
inc
les
fwait
hlt
cmp
mov
pop
rorb
or
loop
lods
loopne
leave
test
add
xlat
pop
dec
icebp
mov
repz
jle
in
push
stc
popa
sub
xor
test
pusha
xor
enter
adc
cld
out
fsubl
outsb
lock
add
cs
loop
mov
adc
das
mov
pop
cwtl
int
ss
jo
ror
xchg
inc
push
sub
xchg
divb
dec
aaa
lahf
pop
xchg
lds
dec
xchg
adc
enter
dec
sub
inc
push
lcall
lods
ds
jo
cmpsl
insb
movsl
and
movsl
pushf
imul
lea
sub
ljmp
mov
inc
cmc
push
xchg
frstpm(287
add
stos
iret
negl
out
sbb
insl
xchg
aam
mov
sub
xchg
jno
push
inc
in
jmp
test
push
dec
test
adc
out
push
xchg
outsl
push
xor
in
fs
pop
mov
arpl
push
mov
test
mov
and
inc
in
and
pop
lahf
in
and
push
mov
xor
cwtl
sbb
sub
lds
int
mov
fdivl
pushf
mov
inc
sub
cld
in
sub
cwtl
test
mov
xchg
arpl
daa
je
mov
mov
jno
pop
xchg
stos
and
leave
mov
pop
outsl
sub
repnz
mov
cmp
dec
or
stos
cmpsb
push
mov
aam
cmc
aam
emms
mov
and
into
sub
into
push
popa
adc
sbb
sub
aas
fiadds
sahf
dec
repnz
inc
sub
scas
jmp
sub
xchg
fcomps
sub
pop
outsb
mov
push
pop
stos
cmpsl
ljmp
movsl
push
mov
inc
test
sbb
xor
cltd
daa
lea
add
mov
cmc
insb
push
jnp
aad
bound
ljmp
icebp
lret
fsts
std
filds
loopne
repnz
das
add
xchg
jbe
in
sub
mov
xorl
jo
push
movb
cld
xchg
ret
aam
sarl
push
cmp
pop
pop
pop
mov
cwtl
dec
es
and
arpl
xchg
xchg
mov
xchg
pop
neg
sub
sbb
out
stos
jae
cs
cmp
sti
js
arpl
push
das
mov
and
testb
call
lods
sbb
xor
gs
sub
mov
xchg
push
adc
test
out
sub
cmp
shrl
imul
push
sbb
push
imul
loopne
push
sub
stos
lahf
ret
push
fdivrl
jp
test
jecxz
pop
push
sahf
push
pushf
lea
gs
jecxz
pop
js
out
into
sub
cld
cwtl
shll
sbb
andb
cld
in
adc
pop
sbb
lock
mov
popf
sbb
dec
adc
dec
xchg
or
outsl
inc
inc
sub
or
cltd
push
mov
sub
lods
dec
push
sbb
jo
stc
into
shlb
adc
mov
mov
fwait
mov
xchg
js
dec
outsb
ljmp
sahf
mov
ds
inc
mov
lods
and
or
push
cmpsl
or
push
subl
movsb
add
or
ret
jnp
js
xchg
pop
in
addr16
mov
pop
cmpsb
mov
cmp
ljmp
or
inc
out
fstpt
movsb
mov
das
xchg
pushf
jmp
gs
xchg
add
fidivrs
sub
call
mov
notb
xchg
in
andb
dec
insl
and
sti
ljmp
mov
dec
pop
rorb
mov
out
add
xchg
fs
adc
add
fwait
out
cmp
nop
cld
jbe
loopne
incb
cs
xchg
call
ret
frstor
gs
insb
jge
sar
stc
mov
and
bound
stc
jns
imul
inc
xor
or
sub
cmp
push
js
mov
test
loope
fistl
mov
xchg
mov
pushl
xchg
sbb
pop
dec
cmp
jp
jge
add
add
shll
mov
jae
xor
iret
fnstenv
loop
and
jbe
loope
push
lock
in
add
cmp
adc
and
outsl
loopne
iret
shll
xor
inc
scas
aaa
push
and
cmp
sbbb
fs
mov
adc
icebp
movq
xchg
int
mov
sbb
mov
pop
stos
push
js
mov
repz
outsb
test
inc
cwtl
push
iret
pop
incb
insl
mov
add
jmpw
xchg
sti
jnp
lret
mov
xchg
mov
mov
ljmp
js
pop
dec
mov
fs
dec
add
lods
jg
push
and
adc
loope
or
ret
daa
or
rcll
push
in
cmp
or
in
imul
mov
dec
mov
out
inc
loopne
cmp
call
inc
jp
cmp
scas
cmpsb
test
aad
icebp
jecxz
mov
popa
andl
mov
sbb
inc
sti
and
out
push
scas
dec
cmp
nop
adcl
mov
xchg
adc
ja
xchg
and
enter
xlat
push
lret
or
lods
dec
cmpsl
mov
cld
sub
fcomip
inc
lahf
inc
cmpsb
mov
mov
ret
sbb
cltd
cs
cmpsb
scas
sbb
mull
dec
dec
adc
mov
and
sub
gs
adc
ret
fwait
cli
and
pop
stos
outsb
or
sahf
pop
scas
scas
aad
aaa
jge
add
push
mov
fsubs
dec
cmp
add
jmp
pop
jp
dec
fcmovbe
jbe
shrl
int3
dec
sub
outsb
jecxz
addr16
and
subl
cmp
sub
fnstenv
clc
lods
inc
out
test
jb
pushf
in
insb
negb
jmp
fcomps
jle
xor
or
fwait
jl
mov
sbb
mov
mov
stos
xchg
adc
setge
in
outsl
jbe
inc
push
jecxz
imul
mov
mov
loop
imul
xor
les
cmp
fld
test
sub
mov
inc
mov
icebp
fnstsw
stc
mov
xor
ss
mov
push
cmp
daa
cs
movsb
xor
iret
aas
adc
xchg
inc
push
call
hlt
pop
repnz
jg
inc
out
stos
mov
mul
add
imul
pop
clc
pushf
lea
pop
cmp
sbb
or
jmp
mov
dec
scas
or
pmulhw
mov
frstor
push
outsb
arpl
mov
jge
out
and
cmpsl
adc
xor
data16
jns
jns
adc
test
mov
leave
popa
cld
int3
shrl
insb
cwtl
inc
push
mov
mov
cwtl
xchg
call
pop
cmp
into
dec
xor
pop
push
hlt
ficoms
stos
stos
xor
lret
push
imul
roll
mov
jl
out
mov
mov
movsb
push
jbe
popa
psrlw
sbb
pop
iret
cmpsb
loopne
fstps
xchg
aam
popf
dec
fiadds
jo
rolb
lods
lret
into
in
dec
outsl
cmp
jae
fildll
jns
sbb
mov
cli
xchg
xor
clc
gs
bound
repz
dec
and
sub
or
mov
adc
mov
dec
push
out
hlt
adc
fsubp
fisttpll
inc
cmc
lds
addl
add
test
push
push
in
dec
xor
pop
cmpsl
xchg
mov
cmpsb
stos
pushf
cmpl
sbb
orl
lret
stos
outsl
ret
shrl
stc
int
cmp
sti
je
loope
cld
mov
test
inc
inc
mov
je
mov
add
ficompl
xchg
in
add
push
inc
testb
mov
push
loope
add
jge
fs
rep
sbb
mov
sahf
je
xchg
pop
xlat
dec
out
add
ror
add
ficomps
leave
aas
pop
in
or
cltd
or
pushf
mov
data16
sub
mov
je
lds
insb
inc
pop
pop
in
popa
mov
mov
adc
lea
iret
jno
push
es
sbb
or
gs
and
and
lods
rcr
add
pop
inc
and
inc
nop
jecxz
popa
and
aas
inc
jmp
xchg
insb
sti
mov
or
mov
hlt
push
and
rcr
mov
jb
mov
dec
pop
stc
xor
jle
into
adc
lods
out
lret
push
jae
jg
ror
jg
mov
push
jo
insl
jle
sbb
mov
xchg
inc
mov
imul
movsb
aaa
push
sbb
xchg
test
cli
roll
pop
jle
cmpsl
loopne
fistpll
adc
push
mov
mov
into
mov
mov
shrl
andb
pop
jp
and
adcb
push
fstps
sub
out
dec
andl
dec
scas
fucomi
dec
addr16
sbb
cmc
aam
mov
pop
jo
pop
in
mov
bnd
push
ja
mov
sub
cli
push
mov
xor
push
loopne
ret
out
dec
pusha
cmc
or
inc
aad
shl
push
mov
pop
push
and
pop
std
jle
repz
movaps
stos
cltd
cwtl
stos
dec
xor
pop
or
sub
test
adc
jl
stc
jne
stos
shl
mov
push
repz
jnp
pop
out
call
inc
leave
xor
ljmp
mov
pop
fmuls
inc
sarb
add
fistl
es
cmp
andl
cmp
js
xchg
aad
sub
xor
and
push
xor
idivl
ret
pushf
mov
cmp
xlat
mov
add
sbb
pop
sbb
xchg
or
mov
dec
std
loopne
js
rolb
int
xlat
sbb
push
ss
addr16
js
in
xor
add
sub
popf
iret
dec
mov
xchg
cmp
mov
cld
xor
mov
add
xchg
push
js
nop
mov
cli
push
pop
xchg
sbb
jle
scas
aad
dec
lods
loope
inc
mov
shll
jle
xchg
clc
and
cmpsl
add
fsubs
sub
orl
js
outsb
jb
pusha
push
aas
adc
jmp
xchg
add
ds
and
or
pop
call
sbb
imul
jo
iret
cli
cld
and
cmp
mov
dec
sahf
leave
fwait
ja
jg
shlb
push
in
test
sub
mov
fcompl
xchg
or
cmc
ljmp
mov
push
push
add
cwtl
stos
cmp
loopne
rorl
into
outsl
dec
or
mov
into
sbb
mov
and
subb
out
jb
in
mov
lods
inc
pop
notl
pusha
jl
jp
aam
push
sbb
add
ret
mov
cltd
and
cmp
or
jge
xor
push
das
and
cmp
hlt
int3
mov
push
xor
push
push
and
int
or
xlat
cmpsl
aaa
add
xor
sarl
dec
in
xchg
adc
sahf
push
test
popa
cs
and
int
jecxz
adc
dec
int3
pushf
incb
js
sub
jnp
lahf
fidivl
add
sbb
jns
pop
bound
repz
jge
sbb
cmp
add
jo
movsb
lahf
inc
movsb
rcrl
mov
outsl
dec
push
fnstcw
inc
mov
arpl
sub
rcr
rol
adc
out
sar
jns
lods
fidivrs
pop
mov
repz
jmp
jo
mov
xchg
mov
dec
lds
leave
ret
xchg
sbb
fwait
push
pop
lock
popa
dec
pop
push
dec
and
loopne
pop
fmul
lret
lds
push
jmp
mov
sarb
or
and
cmp
stos
fstps
lea
cmp
mov
pop
enter
mov
ljmp
arpl
mov
xor
aad
mov
fistpl
sbb
cwtl
es
lods
add
enter
sbb
inc
xor
shll
hlt
and
pop
adc
and
sub
inc
test
xchg
add
in
sub
out
scas
mov
insb
adc
fsts
xor
xchg
xchg
xor
jb
test
adcl
sbb
fsubs
add
xchg
push
xor
into
mov
adc
sbb
notb
and
sub
and
push
cmp
fldcw
sbb
push
int
pop
jb
lods
mov
outsl
xlat
jmp
loope
jae
dec
out
push
sarb
pop
pop
dec
notl
cmp
test
faddp
push
or
out
cmpl
jae
dec
stos
shl
adc
jp
mov
xchg
jo
paddsb
out
lea
or
imul
mov
cmp
xlat
mov
inc
ret
mov
dec
gs
fwait
adc
jno
jbe
mov
bound
dec
mov
imul
jmp
or
and
addb
and
arpl
xchg
das
adc
sub
aaa
in
jo
inc
and
test
sub
aad
pcmpgtd
in
mov
xchg
push
mov
mov
scas
outsb
lcall
xchg
shrl
lock
ds
jb
pop
adc
add
cmc
inc
jns
popa
pop
push
lods
testl
call
mov
add
stos
lret
mov
pop
repnz
and
roll
test
lret
flds
lods
push
mov
sbb
sub
mov
mov
sub
inc
push
fwait
cmp
jne
xor
or
cmpsb
js
mov
lock
mov
jo
aaa
fistps
push
mov
cmc
call
rcrb
fsubrs
out
push
test
test
cltd
pop
mov
cli
mov
inc
js
sahf
inc
push
iret
push
cmp
sbb
xchg
scas
fsubs
add
adc
jmp
or
pop
stos
std
movsb
jno
je
cmpsb
dec
pop
mov
pop
xor
mov
cmp
push
aam
jecxz
dec
xorb
cld
pop
pop
outsl
mov
push
cmp
sub
pop
add
jnp
daa
xchg
pop
ja
std
loop
xchg
jg
adc
mov
fidivs
imul
icebp
scas
mov
push
outsl
loop
leave
cmpsb
in
dec
mov
mov
and
adc
stos
aam
rorb
xchg
xor
cli
shlb
or
std
push
lahf
xor
sbb
cmpsb
dec
das
adc
pusha
lods
push
pop
stc
jmp
inc
xor
icebp
mov
cmc
adc
clc
jecxz
sbb
pop
in
mov
inc
leave
xchg
xor
data16
pop
cmpsl
outsl
cli
mov
dec
out
mov
xor
pop
das
mov
out
jb
repz
pop
mov
ds
aas
jnp
ret
mov
mov
dec
aas
jp
das
or
or
es
or
ss
mov
arpl
loop
ret
add
sbb
jb
stos
hlt
test
pop
cli
dec
insl
arpl
lock
das
xchg
in
popf
mov
lahf
lcall
mov
inc
push
stos
cmp
jns
roll
mov
int
add
inc
nop
sbb
ss
test
jge
cmc
ficoml
pop
jp
fdivrs
or
lahf
movsl
adc
add
mov
xchg
cmpsl
mov
insl
das
dec
stc
mov
push
out
js
stos
mov
fs
jg
lcall
std
sar
xchg
push
push
out
xor
rcr
cmp
pop
xorl
das
inc
or
andb
jbe
pop
jne
xchg
jns
shlb
dec
decb
test
mov
scas
stc
int3
ja
adc
pop
push
jp
adc
call
push
mov
or
pop
mov
lods
jg
mov
fnsave
test
xor
sbb
jle
pop
xchg
mov
fnstcw
shrl
mov
lods
ret
adc
mov
mov
test
sub
mov
ss
addr16
cmp
pop
pop
or
aam
dec
xor
les
sub
or
xchg
fildll
mov
scas
test
call
loopne
push
dec
cmpsl
add
cmp
sub
mov
dec
sub
pop
lods
fstpt
cmp
ljmp
loopne
mov
lods
cltd
movsb
int
dec
cmpsb
sar
jl
outsl
or
xor
aad
sub
gs
mov
ret
in
mov
out
rclb
pop
inc
outsl
pop
scas
or
inc
and
divl
or
lea
or
dec
jae
fldenv
mov
loopne
pop
xor
rcl
sub
jmp
mov
jle
xchg
stos
sub
jle
or
cld
hlt
or
int
pop
inc
ss
outsb
fnstenv
inc
out
subl
sub
lock
shll
jns
or
loop
cmp
rcl
push
xchg
cmp
in
aaa
or
cmpb
push
test
filds
xor
inc
scas
push
and
adc
mov
xchg
xor
xchg
addr16
mov
adc
cli
cwtl
jne
loope
xor
sbb
sub
ret
out
inc
push
out
cmp
lock
inc
jo
lret
adc
push
or
add
in
xchg
mov
jecxz
xor
arpl
leave
enter
adc
fstps
std
pop
rdpmc
xchg
xor
cwtl
jmp
aaa
mov
imul
mov
lods
and
jle
mov
sub
sub
icebp
xchg
push
or
cld
mov
cmp
btc
mov
outsl
cwtl
faddp
in
mov
insb
push
mov
arpl
enter
lods
xchg
inc
push
clc
pusha
and
jns
in
test
movsb
ffree
push
add
shlb
push
jg
pop
or
in
sahf
clc
mov
icebp
sbb
cltd
std
xor
cld
and
push
adc
sbb
push
pop
leave
add
test
add
and
mov
jg
addr16
scas
xchg
out
in
mov
test
int3
fisubrs
rcrb
out
hlt
ror
xchg
int3
adcl
cmpsl
iret
loopne
sub
jl
fnsave
in
out
fidivrl
jbe
jae
lahf
sbb
clc
dec
inc
pop
lahf
sub
dec
jno
xchg
imul
xor
mov
cs
xor
jnp
adc
adc
xlat
mov
imul
mov
sbb
push
mov
in
testb
jb
mov
jl
std
int
dec
cmp
push
mov
mov
lahf
mov
fbstp
pop
jl
mov
ficoms
mov
cmpsb
rcr
in
inc
xor
in
ljmp
push
mov
pop
out
das
inc
sbbl
fists
push
std
fwait
pop
jl
mov
mov
sbb
fistps
leave
add
aaa
or
xor
adc
mov
mov
insb
xor
sub
sti
test
sub
push
ret
or
cmpsl
scas
fistps
repnz
scas
inc
ja
xchg
dec
int3
adc
mov
sub
and
sub
aas
mov
in
iret
rorl
bound
inc
aaa
jp
cmpsl
pop
sbb
pop
aad
mov
mov
int
sbb
sub
es
xchg
sub
inc
mov
cmp
inc
push
pop
lods
fisttpl
lret
leave
sbb
mov
aas
jl
js
inc
pop
outsl
push
fbstp
loop
lcall
mov
mov
pop
stc
pop
inc
adcb
adc
test
shrb
jecxz
add
ss
sbb
xchg
push
stos
or
gs
jne
xchg
mov
lret
gs
cmpsl
mov
add
mov
rcl
inc
mov
outsl
mov
mov
add
and
adc
aad
cltd
ss
pusha
mov
imulb
jo
mov
add
jmp
jo
inc
int3
add
cmp
xchg
xchg
js
leave
xchg
dec
adc
aas
mov
sub
sbb
orl
insl
and
sbb
test
and
fwait
loop
lods
mov
jnp
pushf
jae
pop
xor
insb
cmp
jne
icebp
dec
xchg
into
sbbl
jb
lcall
sti
aaa
pop
push
xor
jo
int3
stos
push
adc
movb
pusha
lret
push
pop
ja
push
enter
decl
pop
xadd
mov
and
cmovp
out
cmp
jb
cmp
and
jmp
out
adc
js
cmp
sti
lds
dec
ljmp
js
loopne
xor
js
cld
sbb
push
jae
data16
dec
jo
cmp
ja
js
clc
jg
es
pusha
pop
jge
stos
and
and
push
insl
xchg
in
out
fs
std
and
dec
popf
xor
loope
iret
std
sub
arpl
mov
jmp
popf
inc
xchg
cmpsb
mov
push
xchg
mov
nop
arpl
dec
sbb
adcl
inc
negb
and
mov
mov
jmp
sub
repz
pushf
test
mov
mov
add
jnp
add
lods
mov
fwait
in
in
cld
insl
mov
je
out
and
mov
testb
pop
inc
push
dec
adc
mov
adc
and
mov
pushf
mov
inc
enter
in
mov
jae
pop
mov
add
int
mov
mov
mov
cld
loop
scas
push
fnstenv
dec
shld
pop
adc
push
dec
mov
or
pop
icebp
mov
cmp
jle
xchg
ss
hlt
leave
push
in
inc
pop
insb
lahf
sub
loop
pop
rclb
lahf
sahf
cld
or
jae
lods
lods
lcall
shll
shlb
add
ret
hlt
les
jg
imul
sbb
mov
cs
loop
xlat
fbstp
sbb
nop
orl
dec
inc
and
cli
ljmp
mov
fldt
jns
leave
add
call
and
fists
jp
xor
addb
or
test
das
dec
inc
pop
jnp
in
mov
dec
or
pop
jbe
movsb
and
fstps
fldenv
or
dec
sbb
aam
pop
lret
sub
push
or
movsl
insb
sub
aad
xor
repnz
fnsave
ja
addl
scas
lods
mov
cltd
pop
xchg
add
mov
and
mov
mov
aam
cmp
clc
fdivrs
push
std
jmp
test
mov
mov
je
stos
and
into
mov
or
adc
sbb
rolb
adc
dec
jg
movsl
pop
push
repz
ret
loope
cltd
cmp
and
fstl
xchg
add
ljmp
fsts
push
into
mov
movsb
xchg
xlat
mov
inc
sub
sti
dec
mov
xchg
adc
scas
bound
fidivs
fldenv
inc
roll
lahf
xchg
push
dec
dec
mov
cmp
out
in
push
pop
xchg
out
pop
cltd
dec
fldl
jno
add
sahf
cltd
call
or
and
cld
xor
loopne
xchg
cmc
or
gs
mov
mov
das
cltd
das
pop
test
mov
sbb
sub
and
xchg
jecxz
imul
cmpsl
sub
and
int
cmp
clc
dec
cwtl
inc
sbb
out
mov
cmpsl
add
shr
imul
mov
rorl
push
lret
adc
jge
into
sbb
ss
xlat
or
enter
stos
inc
scas
jo
daa
mov
scas
das
aam
cs
call
es
adc
dec
ljmp
fs
pop
inc
or
adc
fwait
std
xor
dec
pop
dec
addr16
fwait
cmp
mov
shlb
push
and
testb
dec
popa
cmpsb
scas
push
or
insl
cmpsb
xchg
jl
aad
adc
inc
adc
enter
imul
push
sbb
push
lea
push
xor
lahf
stos
or
inc
mov
mov
imul
fbld
inc
pop
mov
flds
inc
ja
popa
inc
jge
sub
jg
movsl
or
xchg
dec
shll
or
mov
jge
mov
mov
pop
in
fst
mov
pop
nop
cwtl
jo
xorl
mov
jne
jmp
sbb
test
inc
movsl
pop
pop
jge
add
or
pop
loop
into
negb
jp
pushf
rcpps
xchg
aam
mov
mov
insl
mov
sbb
inc
mov
jecxz
mov
cltd
or
ficompl
mov
sahf
cltd
sub
mov
mull
push
jb
inc
mov
mov
pop
popl
imul
dec
xor
inc
xor
inc
push
xchg
mov
mov
loopne
loop
xor
mov
addr16
mov
push
fwait
orb
sbb
cmc
in
fwait
lock
cli
jnp
pop
das
or
ja
ljmp
push
pop
lods
xor
and
rcll
push
push
mov
jg
pop
stos
xor
ficoml
movsb
xchg
stos
cmp
popa
or
push
fwait
and
cmpsl
inc
lahf
push
inc
and
mov
movsl
or
jb
or
jno
mov
pushf
in
inc
mov
push
flds
cmp
into
subb
xchg
xchg
jp
ss
les
loopne
cmp
inc
jecxz
aad
and
adc
loope
repnz
loop
lods
insb
mov
adc
jp
je
push
popa
lods
jno
or
xchg
fcmovnbe
adc
dec
pop
aam
xchg
ffree
mov
dec
mov
or
xor
push
les
movsb
pop
xchg
das
scas
loopne
aad
movsl
push
scas
push
or
sub
inc
mulb
imul
mov
sub
jp
mov
sbbb
leave
sarb
lds
inc
test
pop
enter
imulb
mov
data16
cmp
mov
pusha
adc
xor
es
shl
add
nop
xchg
push
push
sub
push
inc
scas
loopne
test
and
cmp
pop
adc
addr16
jb
cld
nop/reserved
mov
dec
aad
mov
icebp
fisttpll
sahf
push
icebp
mov
in
outsl
pop
push
cmpsb
aas
sbb
jnp,pn
mov
jle
daa
lret
lods
xchg
pop
addr16
sbb
push
dec
and
jge
movsb
add
in
jno
push
frstor
inc
cmp
adc
xchg
pop
scas
call
dec
mov
lcall
pop
jae
pop
jbe
lods
lods
mov
push
fs
cmp
cmp
mov
or
hlt
xor
lock
inc
subb
push
jnp
divl
jge
stos
mov
cmp
push
sbb
in
add
mov
push
adc
mov
test
jbe
cs
dec
ret
jns
push
inc
out
push
jl
mov
std
rcrl
sub
roll
faddl
outsl
mov
mov
adc
les
nop
clc
bound
and
mov
int3
push
sbb
dec
and
add
ds
push
cmc
std
mov
outsb
ficomps
sub
jb
dec
mov
cmp
test
in
cmpb
jb
xchg
mov
insb
sbb
fsubp
add
sbb
cmpsl
inc
pop
mov
in
lret
xchg
hlt
pusha
push
adc
adc
dec
sbb
xor
xchg
xor
mov
mov
adc
mov
cs
mov
push
movsb
xchg
repz
add
in
popf
dec
jnp
push
into
call
push
and
mull
cwtl
pop
pop
push
lods
xchg
jns
jmp
shl
xor
xchg
aam
mov
fldt
enter
fistps
push
stos
mov
repnz
xor
sti
dec
push
push
and
fidivs
gs
fists
push
xchg
test
out
inc
repnz
sbb
sub
cltd
popl
mov
lcall
rclb
mov
mov
iret
repnz
out
movsl
loop
mov
aam
cmpsb
and
jl
in
lret
fdivr
in
or
sbb
adc
jle
gs
sub
test
push
mov
aad
loope
in
mov
rorb
jne
cs
lds
popa
nop
xchg
jg
fsubl
mov
dec
xlat
mov
sbb
aas
cmp
shrb
cmp
or
arpl
loop
in
push
aaa
imul
clc
insl
adc
jmp
ljmp
jl
lock
xchg
mov
adc
paddb
and
insl
mov
adcb
repz
stos
pop
aas
cwtl
insl
sub
mov
cmp
call
stos
sub
por
test
movsb
add
pop
cmc
icebp
hlt
sub
mov
rcrb
and
mov
pop
inc
pop
inc
mov
cmc
jle
sub
subl
insb
dec
movsb
adc
cltd
inc
mov
lcall
and
mov
xchg
jnp
jns
dec
sub
cltd
outsb
push
jmp
mov
pop
fs
jb
mov
xor
mov
add
xor
pop
lds
push
pop
push
adc
jmp
xchg
mov
jg
in
arpl
sti
rcl
sar
lret
pop
decl
arpl
pop
pop
pop
cmp
push
pop
add
mov
rol
xor
and
add
sti
mov
adc
inc
or
mull
icebp
and
jmp
cmc
out
mov
xchg
mov
mov
and
mov
add
xor
call
aas
adc
sub
mov
jmp
shl
inc
mov
dec
push
mov
sbb
jmp
mov
cld
movsb
fstpl
aaa
clc
pop
mov
pop
cs
lea
pop
inc
mov
hlt
out
dec
add
xchg
testb
sub
inc
cmp
push
sbb
std
ja
movsb
cmp
or
sbb
stos
shrb
inc
ret
or
aas
xchg
jnp
mov
xchg
xchg
inc
sbb
incb
imul
push
pop
cmpps
in
test
push
mov
lods
push
int3
addr16
insb
stos
lahf
fs
fiaddl
pop
imul
in
jbe
pop
cltd
das
seta
shlb
call
addr16
jnp
orb
ljmp
lahf
mov
mov
mov
repz
call
pop
jg
cmc
lcall
xchg
enter
sub
adc
mov
call
sbb
je
fnstsw
fwait
sub
sub
sbb
insb
ret
mov
adc
push
fidivrs
movsl
xchg
hlt
xchg
sbbb
dec
aas
xor
cmp
xchg
adcb
or
xchg
add
lahf
fimull
and
adc
jno
or
insl
cmpsb
xor
jnp
jg
xchg
mov
and
cli
test
les
sub
icebp
fisttpl
lcall
mov
fstpt
clc
push
push
inc
dec
ss
outsl
sbb
mov
sbb
lss
and
xor
add
pop
lahf
jmp
out
aas
scas
and
mov
jg
inc
insb
ljmp
jo
push
arpl
out
xor
mov
call
jmp
ffree
lret
inc
mov
das
clc
das
out
pop
dec
adc
imul
jecxz
inc
sbb
lods
adc
add
test
cltd
cmp
call
add
or
in
xchg
ljmp
xlat
add
bound
out
or
jmp
pop
lods
movsl
inc
adc
movsl
cli
mov
popf
cs
icebp
fiadds
push
adcl
icebp
data16
sbb
es
out
imul
arpl
pop
ss
adc
sahf
jmp
lret
stos
add
hlt
data16
sbb
mov
pop
lahf
jo
pushfw
inc
int
popf
inc
push
fbld
in
hlt
jecxz
xlat
pop
jle
xor
subl
pop
lods
call
cwtl
sub
push
pop
xchg
in
or
jae
mov
xchg
mov
push
mov
ret
push
mov
push
mov
js
inc
jp
ds
arpl
daa
mov
js
sar
mov
arpl
adc
pop
sahf
push
add
movb
cmp
sub
push
imul
andl
and
ss
mov
movsb
das
or
push
mov
push
fsts
mov
cmpsb
mov
pop
insb
add
dec
aad
mov
idiv
pop
mov
shrb
sbb
mov
nop
jmp
movsb
mov
xor
xchg
fwait
or
pop
mov
pop
dec
popa
cs
pop
lret
adc
into
mov
pop
and
repz
pop
sbb
pop
xor
test
shll
cli
pop
add
jg
jmp
mov
sbb
cmpsb
xor
bound
jno
jp
mov
mov
inc
mov
or
sbb
inc
and
mov
movsb
mov
sub
inc
test
cmp
insb
add
pop
xor
mov
ss
loop
mov
mov
iret
ret
push
pop
loopne
mov
sub
cmpsb
movsb
aad
mov
dec
mov
mov
sarl
xchg
aaa
mov
push
cmp
xchg
lcall
fidivrs
or
repnz
inc
sbb
sub
andl
outsl
xbegin
aam
push
sub
orb
test
imulb
cmp
sar
cwtl
cmpsb
stos
repnz
lock
fsubl
inc
push
mov
in
int3
push
loope
jp
mov
insb
fdivs
pushf
and
pop
aaa
jb
and
into
jnp
cmp
pop
jbe
or
sub
insl
pop
sub
push
add
rorl
xor
mov
adc
xchg
flds
or
mov
inc
xchg
ljmp
mov
jmp
enter
test
sti
xor
lret
inc
jb
pop
loop
aam
fnstenv
xlat
push
dec
pop
adc
test
fsubp
imul
movsl
add
insl
ss
loopne
mov
je
and
xor
sbb
xchg
push
aad
movsb
push
fldt
int3
pop
mov
stos
mov
aas
and
dec
jns
push
xchg
rcrl
daa
mov
xchg
dec
adc
scas
sti
xor
xchg
mov
push
lea
or
mov
xchg
ja
out
ds
add
inc
mov
jae
or
and
jecxz
rcrb
pop
hlt
lret
jno
test
mov
xor
sbb
scas
mov
adc
popa
jge
push
xor
sbb
cs
cmp
jo
pop
ret
push
push
fnstsw
mov
lcall
fbstp
cld
jne
lcall
push
in
mov
xorl
mulb
leave
outsb
outsb
sbb
lret
daa
dec
fidivl
data16
jge
sub
loop
lahf
stos
daa
mov
jp
mov
rolb
mov
push
inc
xchg
add
mov
inc
or
cltd
mov
adc
sahf
adc
sbb
pop
ret
popf
pop
sbb
lahf
cmp
fcomip
gs
loopne
cmp
incb
add
aam
push
nop
icebp
or
push
cltd
stc
sub
aaa
sub
push
xchg
jecxz
je
out
or
xchg
cwtl
jo
stc
xchg
pop
out
call
cmpsb
add
popf
sbb
jo
cmc
mov
push
ljmp
add
ss
cmp
xchg
mov
dec
push
fisttpl
mov
sbb
addr16
iret
movsb
sbb
mov
or
or
shl
popa
repz
fwait
pop
and
push
clc
sbb
movb
ja
jmp
ja
movsb
inc
inc
pop
insb
xchg
mov
in
mov
jp
mov
roll
sbb
jle
test
aam
mov
lock
inc
popw
xchg
int3
rorb
out
and
pop
pop
test
xor
insb
lods
sahf
mov
xor
dec
adc
pushf
jp
pop
out
add
ja
xor
mov
jg
jae
jb
enter
in
popf
out
mov
addr16
push
negb
push
xchg
jl
add
ja
xor
xor
and
and
test
pop
cltd
inc
jo
lret
cmp
jo
mov
in
mov
cmp
pop
int
js
sbb
xlat
fwait
or
lods
fdiv
jmp
ds
jp
out
jg
test
mov
adc
mov
and
mov
mov
daa
push
xor
sbb
xlat
mov
add
test
shlb
je
rorb
sub
iret
faddp
push
pop
repz
pop
in
negb
ficompl
inc
scas
push
xchg
inc
in
adc
and
jmp
mov
out
xchg
dec
fisttps
inc
dec
aas
test
push
rcr
sbb
pop
aam
push
xor
cmp
and
mov
out
imul
sub
sub
aad
sbb
call
sti
sti
sub
or
shlb
or
outsl
and
inc
inc
fsts
mov
pushl
mulb
jno
xor
mov
lods
fiaddl
sbb
dec
sub
loopne
daa
fbstp
or
test
add
inc
test
ljmp
lock
setnp
test
lahf
stc
loope
fnstcw
repz
adc
jbe
push
mov
dec
xchg
inc
add
sbb
sahf
lret
inc
in
sbb
clc
test
add
jbe
in
add
movsb
aam
cwtl
je
dec
stos
mov
test
loopne
out
js
xchg
mov
das
xor
pop
movsl
xor
adc
or
inc
stos
mov
lock
push
or
or
or
test
xchg
xchg
flds
add
mov
int3
shlb
xchg
lock
popa
or
stos
add
ret
cmp
shlb
add
inc
imul
or
xchg
xchg
cld
lcall
mov
push
jo
and
adc
shl
addr16
out
mov
pop
fwait
xor
push
scas
and
fists
mov
cwtl
mov
popf
dec
xchg
fstps
jl
pop
mov
ret
push
mov
cwtl
insb
xchg
ja
rcrl
or
or
data16
mov
mov
sub
dec
test
sbb
xchg
data16
movsl
sti
sub
jns
cmp
xchg
mov
dec
cli
jmp
mov
mov
outsl
cwtl
push
sar
adc
sub
mov
ljmp
shll
cmp
jns
lods
jne
sub
push
add
bound
push
mov
out
push
xor
in
ror
push
xchg
les
cmp
jno
flds
hlt
jbe
sarb
jb
hlt
movsb
aam
ret
inc
xchg
push
lret
shll
jnp
call
xchg
test
sbb
lahf
xchg
aaa
jne
adc
pushf
pop
xchg
dec
filds
adc
push
sub
leave
in
jae
loope
sbb
and
rcl
rclb
xchg
fsubs
sbb
scas
fidivrs
mov
add
lds
and
push
das
xchg
mov
or
jmp
mov
push
pop
mov
das
fwait
jg
mov
loopne
popf
out
jnp
out
test
sub
jle
rclb
mov
int
cmp
repnz
xchg
push
shrl
ret
jg
movhps
mov
loope
xor
addr16
loopne
or
push
test
inc
fsubrl
negl
ret
xchg
roll
xchg
xlat
mov
and
stos
push
pop
jl
sub
data16
mov
jae
jb
test
lcall
fdivrs
lret
inc
adc
pop
stos
and
outsl
add
lea
in
jmp
mov
flds
aad
ljmp
push
lods
call
mov
lcall
lret
dec
add
xlat
imul
jno
adc
mov
mov
test
dec
push
and
leave
lret
mov
xor
out
push
push
mov
dec
ficomps
mov
and
mov
xchg
inc
push
fdivrs
or
sti
mov
cmpsb
pusha
cmp
out
xchg
mov
and
das
mov
fwait
jg
jmp
iret
gs
das
inc
pcmpeqw
hlt
rcll
fldt
adc
subb
push
scas
sub
out
dec
lock
mov
pop
xchg
or
xchg
pop
les
xchg
xorps
jbe
xor
mov
outsb
cmp
scas
idivb
mov
jmp
cli
adc
shlb
test
add
dec
sub
adc
cwtl
mov
push
jbe
mov
add
dec
int
outsl
fsubl
sbb
jbe
mov
jbe
mov
cmp
pop
and
push
jmp
xchg
in
xlat
push
aaa
pop
add
sbb
lahf
mov
lods
and
pop
incb
cmpsb
outsb
and
add
jge
xchg
adc
push
dec
rcrb
cltd
inc
add
mov
repnz
push
scas
pop
popa
pusha
lds
push
xorl
shl
pop
sahf
sub
or
fsubr
pop
and
mov
mov
les
xchg
xchg
cld
cld
jl
cmp
inc
mov
movsb
lea
dec
in
mov
dec
add
sub
dec
mov
jecxz
mov
push
test
iret
sti
mov
popa
ljmp
aam
cmp
adc
or
movsl
dec
push
popa
shl
add
mov
mov
pop
stos
add
mov
dec
or
and
fwait
imul
aad
cmp
dec
cmp
sti
mov
movsl
dec
mov
jbe
stos
cli
or
inc
cs
jp
addr16
cmpsb
sti
add
aad
mov
pop
cmp
cltd
ffreep
lods
ljmp
xor
mov
std
cmp
shlb
sbb
rcrb
xchg
xor
pop
cmp
aam
inc
inc
or
cli
test
pushf
jno
jnp
orb
fcomp
mov
push
pop
and
iret
fwait
fs
mov
iret
jne
das
aaa
pop
test
jge
bnd
sbb
popf
dec
pop
fdivr
adc
fisttpll
mov
mov
arpl
mov
mov
fwait
and
mov
cmpsl
mov
sahf
mov
sahf
ret
and
scas
jge
daa
lock
push
ror
aam
jbe
sbb
jmp
mov
xor
or
inc
push
push
lea
fwait
xlat
movsl
repz
xchg
push
outsb
sbb
xchg
in
push
jg
in
lds
ljmp
test
inc
fistl
fldcw
test
xor
out
sub
imull
or
mov
mov
cmp
and
mov
popf
inc
push
test
add
or
xchg
push
xor
aam
push
shl
loop
pop
pop
mov
hlt
out
mov
inc
jp
pop
lock
int3
lret
sub
push
cmp
outsl
shll
dec
mov
sub
pop
sti
das
dec
inc
dec
imul
pusha
rcrl
dec
push
jle
push
ret
ret
xchg
in
mov
inc
out
jmp
inc
pop
xchg
pop
inc
push
out
aad
xchg
arpl
fcomi
jecxz
les
adc
add
in
mov
jnp
jge
dec
hlt
sub
inc
inc
jbe
cmp
es
in
fnstcw
push
push
dec
cmp
cmpsb
push
push
mov
and
dec
cld
lods
mov
push
fsub
and
out
test
scas
or
jno
shll
push
scas
test
xor
and
sahf
xchg
sbb
outsl
or
mov
scas
fistps
les
mov
shr
add
cltd
or
xor
out
bound
std
sbb
lds
xchg
sbb
push
cmp
stos
cs
hlt
in
pop
movsl
out
mov
jo
stc
push
lods
inc
cld
dec
and
imul
sbb
out
add
cmpsl
loop
outsb
or
or
and
dec
scas
or
daa
test
jle
mov
xor
push
inc
movsl
das
mov
dec
xor
inc
and
jo
test
jecxz
xchg
pop
lahf
insl
aaa
and
fnsave
addr16
dec
cmp
scas
pop
int
scas
enter
cltd
sub
and
or
sbb
xchg
jbe
jbe
pop
mov
popa
addr16
add
push
dec
mov
sbb
inc
push
loope
jnp
jo
pop
loopne
inc
and
push
repnz
pop
fdivs
or
mov
loope
cltd
int
jae
outsb
inc
out
pop
sbb
xor
pop
sub
pusha
xchg
pop
stc
popf
ljmp
mov
push
int3
mov
ljmp
push
fistpll
mov
pop
jecxz
inc
bound
arpl
pusha
jb
mov
jns
sarb
roll
jbe
lds
lret
xchg
push
sbb
aas
outsl
mov
stos
xchg
cmpsl
fsubs
lret
add
int
fdivl
add
and
fnstcw
adc
lods
dec
daa
push
inc
fstps
jae
xchg
jbe
add
iret
lock
in
jmp
or
sahf
andnps
push
sub
pushf
idivb
mov
hlt
aaa
sbbb
popa
mov
pop
lods
xchg
subl
cmp
imul
xchg
cs
inc
sbb
xchg
lcall
test
fnstsw
outsl
rcrb
rclb
jb
xchg
icebp
mov
add
cmp
jg
movsl
add
test
dec
jg
push
jecxz
stos
sahf
iret
clc
cmp
mov
loop
cs
jb
push
ret
ja
mov
pushf
sub
mov
adc
mov
fcom
pop
pop
push
mov
lods
into
add
sub
imull
lea
sbb
lods
imul
aad
push
push
enter
out
jg
sbb
scas
enter
mov
and
xchg
pushf
sbb
rol
sbb
jb
test
pop
mov
nop
sbbl
cmpsb
ficomps
sahf
dec
loopne
jge
and
mov
add
pop
add
leave
sub
mov
stos
pop
cmpl
int3
mov
nop
inc
shr
adcl
cmpsb
outsl
xchg
mov
out
pop
jbe
xchg
loope
and
xchg
and
push
mov
shl
in
mov
push
and
push
xchg
fld
push
and
add
cmc
call
mov
clc
sahf
inc
das
push
and
or
enter
xor
ljmp
popf
iret
mov
cli
jge
jg
cmp
loop
jmp
jbe
hlt
shll
sub
mov
or
mov
iret
lods
xlat
xor
push
inc
adc
aam
cmp
push
sbb
mov
or
push
dec
outsb
and
lods
fstps
push
lock
adc
addb
outsl
lods
in
pop
mov
mov
dec
fcoms
dec
xor
out
sbb
aad
mov
outsl
cmp
sbb
sub
les
call
pop
mov
or
add
mov
sahf
rclb
aam
pop
sbb
dec
popf
lea
and
nop
mov
ficomps
and
mov
out
test
and
shlb
loop
and
insl
pop
pop
inc
aaa
dec
jl
repnz
jbe
add
jo
mov
nop
pop
push
incb
pop
push
lret
inc
std
add
inc
lret
add
pushf
stos
dec
popa
sahf
daa
pop
fadds
mov
dec
nop
iret
add
ds
negb
divl
cmpsl
cltd
pop
jns
aam
adc
mov
stos
leave
mov
lods
mov
mov
test
cmc
lret
mov
mov
or
iret
ljmp
inc
xor
mov
js
andb
mov
lds
xor
xorb
test
stos
incl
lock
add
adc
and
nop
sbb
pop
add
mov
pop
adc
cmpsl
sub
mov
dec
mov
dec
arpl
dec
pop
gs
test
ja
je
aad
stc
fildll
bound
pop
addr16
imul
rorl
cmp
out
sub
es
mov
ret
mov
inc
cltd
pop
push
sbb
cltd
xchg
adc
or
shrl
int3
mov
imul
fiaddl
pop
mov
pop
imul
lret
test
ljmp
andb
ret
or
sub
leave
push
dec
pop
jecxz
pushf
sub
stc
push
in
cmp
or
cmpsl
mov
inc
sbb
push
pop
cmp
mov
icebp
arpl
pop
shlb
lods
sbb
mov
push
and
inc
mov
jge
insl
loopne
xchg
dec
scas
aaa
push
jbe
cs
fcompl
mov
ja
add
andb
into
inc
fisubl
ja
cli
push
shll
mov
push
inc
cmp
inc
sub
out
jb
test
insb
into
in
inc
stc
popf
shl
leave
mov
sub
adc
int3
test
aaa
push
lods
adc
test
and
push
out
jmp
jge
loopne
mov
out
fstp
xor
mov
ss
movsb
subl
scas
ret
js
jne
les
push
xor
mov
pushf
gs
inc
xchg
neg
decl
jge
jecxz
or
push
mov
pop
mov
fsub
xlat
push
repz
pop
mov
fnsave
pop
mov
inc
lret
shrb
or
cmpsl
testl
std
jmp
mov
inc
jbe
iret
or
sti
incl
out
movsl
mov
adc
mov
sub
jl
push
mov
pusha
jns
aam
pop
pusha
mov
outsb
mov
pop
mov
out
adc
lret
inc
mov
pusha
xor
xor
shll
dec
or
imul
iret
inc
lock
mov
ds
mov
fldl
push
cwtl
inc
jp
lock
sar
mov
jbe
loope
or
test
std
xchg
pushf
inc
movsl
imul
jmp
mov
add
adc
xchg
stc
negl
sbb
mov
test
lds
push
adc
mov
sub
and
outsl
mov
mov
arpl
inc
stos
shlb
jg,pn
shrl
jmp
les
scas
lret
xor
ja
aaa
lcall
or
pop
and
pop
scas
pop
fs
fucom
mov
int3
gs
or
insl
rcrl
pop
mov
xlat
sub
push
inc
inc
idivb
sbb
push
xor
pop
out
xor
outsb
xchg
cs
cmc
sbb
inc
xchg
or
stc
in
lea
cmpsb
sub
dec
lret
fistl
inc
add
and
rclb
pop
add
jmp
sub
addr16
xchg
test
sbb
arpl
std
or
decl
push
xchg
or
ret
lahf
repnz
mov
sub
ss
pop
aas
mov
mov
arpl
xor
pusha
xchg
pop
jmp
jle
xchg
aam
xor
test
bound
xor
push
mov
xor
or
bound
ficoms
les
add
inc
push
sub
push
xchg
push
sarl
pop
push
or
jae
and
adc
dec
mov
sbb
loopne
lods
rcrb
and
dec
aam
rcrb
pop
inc
pop
jge
mov
add
rcll
pop
cld
mov
add
inc
mov
xchg
lock
sbb
mov
or
hlt
xchg
pop
push
mov
adc
xor
or
imul
cltd
scas
sub
mov
mov
aaa
test
add
in
inc
insb
and
pop
shlb
pop
jne
xor
push
push
mov
pop
push
dec
xchg
add
pop
out
push
repz
into
push
clc
cmp
inc
mov
dec
pop
in
aad
sahf
ficomps
je
push
psrad
jge
ss
xchg
adc
and
rolb
outsl
mov
xor
xchg
mov
add
push
outsb
dec
arpl
mov
cmc
jecxz
xor
jge
xor
xor
mov
js
pop
xor
xchg
sahf
cwtl
push
pop
mov
ret
movsb
clc
in
inc
jae
subl
mov
mov
int
leave
cmp
loope
cmp
inc
inc
sub
stos
sti
jo
cmpb
cs
inc
cltd
mov
sub
or
dec
mov
pop
mov
xchg
jmp
lret
jl
repnz
adc
repz
les
adc
fidivs
inc
mov
xor
mov
lahf
rorl
xchg
pop
push
cmpsl
shlb
imul
int
shl
mov
ficoml
pop
cli
push
mov
push
pusha
out
dec
test
in
hlt
pop
cld
ljmp
loop
pushl
jle
addr16
leave
cld
notl
sbb
scas
xchg
loope
cwtl
jne
xchg
outsl
xor
mov
add
subl
cld
pop
les
mov
lcall
scas
fdivp
xlat
adc
mov
test
fildll
push
xchg
sbb
lea
subb
sbb
and
adc
mov
and
add
subb
out
xchg
fcoms
pop
out
adc
push
mov
iret
cmpsl
or
mov
jge
sub
cli
ret
sahf
mov
push
int3
scas
mov
outsl
dec
add
xchg
sahf
adcl
repz
loopne
adcb
outsb
pop
jg
xchg
test
fldt
mov
popa
push
jno
inc
inc
push
daa
mov
xchg
inc
xchg
lds
imul
xor
scas
fucomi
fdivl
jecxz
xorb
aas
xor
dec
cmp
in
dec
or
bnd
mov
int
scas
cmpsb
daa
mov
mov
in
inc
xor
stos
je
cmp
out
jnp
nop
js
add
pushf
mov
dec
pushf
fwait
arpl
insb
inc
leave
jne
cmp
mov
pop
dec
mov
jo
aad
push
lds
push
xlat
cmp
and
inc
sbb
jmp
inc
and
jae
xor
xchg
push
not
jecxz,pn
mov
mov
popf
inc
repnz
push
sbb
pop
pop
xor
mov
test
stc
xlat
jb
out
popf
in
sub
push
rol
gs
push
out
out
scas
ljmp
jmp
out
or
xchg
xor
shll
xor
stos
push
test
nop
cmc
mov
xor
or
pop
mov
daa
jbe
and
adc
jl
std
adc
cmpsl
dec
pop
xchg
xchg
and
sahf
add
ret
push
icebp
testb
xor
imulb
aaa
loop
push
icebp
out
mov
inc
sub
mov
stos
fisubrs
add
mov
mov
in
aad
insb
mov
push
lret
adc
lcall
mov
sbb
or
or
or
push
mov
cmp
mov
addr16
fsubrl
ret
mov
shlb
inc
adc
adc
xchg
cmp
ret
cmpsb
cmpsl
mov
jl
push
addr16
popl
lods
sbb
mov
inc
lea
jecxz
sbb
xor
mov
bound
sbb
pop
mov
mov
push
ror
fs
sti
jns
push
mov
pushf
push
mov
mov
cli
aas
ret
lahf
scas
fwait
hlt
pop
pop
mov
xchg
cli
lods
out
push
pushf
loope
xor
pop
jle
out
or
xor
inc
xor
push
outsl
pop
pop
xchg
out
or
shlb
cmp
push
rcl
icebp
push
das
test
ss
test
leave
mov
cmp
lods
out
icebp
jmp
sti
adc
es
push
dec
fistl
fsubr
or
mov
bound
push
mov
sbb
inc
hlt
stos
pop
stos
testl
jle
cwtl
cmc
push
sbb
mov
cmc
pop
in
aad
pop
movl
mov
pop
stos
sub
sbbl
mov
fldl
inc
ja
sub
and
addr16
xchg
subl
mov
xor
test
add
push
cmc
and
or
pop
xchg
in
mov
ret
scas
mov
pop
es
push
scas
xchg
jmp
out
dec
shl
std
movsb
add
shll
xchg
subl
or
push
sbbl
in
movsb
or
fsubl
xchg
icebp
mov
xchg
jne
push
push
xor
data16
xor
mov
pushl
add
in
inc
sbb
jbe
jl
shlb
add
jl
and
jno
xor
aam
dec
sarb
lret
pop
lds
mov
push
rol
into
iret
pushf
inc
pop
das
ret
and
dec
stos
in
pop
lret
mov
lds
jge
dec
mov
fildll
xor
dec
sub
or
xchg
sub
push
stc
fcom
pop
arpl
pop
aaa
sbb
sbb
test
add
cmp
mov
pusha
ret
ljmp
pop
div
sbb
xchg
xchg
xor
mov
mov
aas
clc
push
fldenv
or
or
imulb
jmp
pop
mov
push
negl
mov
insb
sbb
dec
ret
sbb
ss
nop
popa
pop
add
lock
jge
pusha
adc
fmuls
mov
mov
mov
sub
loopne
enter
push
sti
and
shlb
adc
inc
xchg
fs
lret
mov
dec
mov
popf
insl
push
cmp
mov
cld
pop
aaa
nop
mov
shlb
push
je
mov
inc
sub
stos
mov
and
mov
and
sub
jmp
mov
sub
adc
in
jg
fsubrs
xchg
inc
fstl
ret
aaa
push
loop
ja
push
cmpsb
dec
xchg
fwait
stc
sbbl
add
mov
sarl
outsb
xchg
addr16
adc
sub
std
test
addl
mov
adc
mov
inc
out
cltd
or
nopl
dec
mov
pop
clc
inc
js
xor
xchg
push
mov
add
jmp
lret
frstor
push
clc
out
inc
nop
pop
mov
mov
insb
movsl
or
lods
mov
mov
andb
mov
les
out
jne
fwait
jnp
das
dec
pop
roll
popa
movb
mov
cmp
adc
jns
int
mov
cmp
jne
lret
adc
mov
inc
cmp
in
add
popa
adc
or
sbb
mov
jb
mov
cs
arpl
repz
mov
js
mov
inc
and
scas
subl
leave
push
shlb
pop
daa
test
icebp
pusha
fldl
cmp
gs
xchg
push
insl
push
jg
lds
cli
shll
sbb
mov
jge
or
movb
sbb
data16
adc
push
fcomi
mov
and
cli
mov
inc
sti
fimuls
xchg
into
sub
adc
arpl
xor
dec
shl
dec
cmp
data16
add
sbb
mov
push
ss
mov
ljmp
aas
lret
icebp
movsl
pop
inc
out
ss
pop
and
test
sub
std
stos
sbb
and
dec
inc
inc
decl
jp
pop
xor
mov
xchg
lock
xor
int
sub
mov
lret
xor
sub
ret
and
idivl
pop
test
push
sbb
sub
shrb
push
inc
and
jbe
out
xor
sub
adc
dec
mov
ljmp
insb
pop
inc
sahf
jns
or
xlat
jb
xchg
adc
mov
imul
push
dec
or
mov
out
push
xor
mov
add
mov
mov
mov
mov
mov
jmp
fndisi(8087
sbb
adc
sti
out
lret
and
stos
mov
popf
dec
pushf
jb
add
cmp
rorb
sbb
pop
nop
pop
add
fldl
mov
pop
std
push
xchg
sbb
stc
add
inc
push
test
mov
xchg
jnp
lret
jo
sub
pusha
movb
lea
jne
cli
pop
mov
and
packsswb
movsl
daa
xor
pop
pushf
sbbl
loope
or
inc
js
and
mov
sarl
push
dec
and
cmp
jp
cltd
lret
xchg
sbb
ja
mov
and
xor
clc
filds
jp
xchg
mov
adc
outsl
enter
outsl
push
loope
je
push
dec
push
mov
adc
adc
and
mov
shll
repz
nop
add
aaa
cmp
mov
cltd
xor
ja
pmaddwd
dec
add
cmp
xor
movl
xchg
shrb
pop
in
push
add
push
push
sbb
aaa
jb
jnp
loop
cmp
cmp
pop
mov
adc
andl
jp
ljmp
sahf
std
mov
popf
mov
rorb
pop
les
push
add
add
push
into
dec
add
xchg
and
xor
mov
sbb
lret
xor
pop
add
in
fwait
cli
pop
scas
sub
sub
push
je
testl
js
test
aas
in
dec
push
test
fldenv
les
std
sub
xchg
sbbb
clc
mov
dec
add
test
outsb
arpl
mov
std
or
leave
pushf
cli
cmpsl
pop
int3
push
adc
cmp
inc
push
daa
xor
addr16
cmp
jp
fcoml
inc
out
test
xor
jno
in
jge
ffreep
mov
add
mov
data16
mov
aas
paddq
das
cltd
gs
xchg
jp
inc
pop
jne
or
mov
pop
mov
mov
push
dec
int3
loop
dec
inc
movsb
jmp
jo
push
inc
adc
in
ljmp
xchg
push
xchg
data16
lock
lods
icebp
ljmp
out
jge
adc
dec
mov
adc
pop
pop
xchg
repz
pop
movsl
dec
inc
xchg
jl
sbb
lock
and
jl
loopne
jp
jg
dec
xor
sahf
push
addr16
iret
nop
sti
stos
call
loope
cmpb
lods
movsb
mull
stos
cmp
cmp
add
and
mov
dec
ss
mov
xor
movsb
aam
cld
sbb
and
loope
in
fistpl
lods
imul
push
xor
mov
mov
mov
sbb
out
adc
cmp
mov
ljmp
inc
dec
sub
fs
lret
mov
jae
int3
and
push
ret
or
jnp
sarb
lret
out
sahf
lods
pop
pop
dec
out
movsl
insb
int
imul
mov
ljmp
or
jl
push
dec
arpl
xor
dec
jecxz
sti
sbb
dec
jae
ljmp
xor
mov
mov
dec
loop
jp
lret
outsb
adc
int
jb
mov
mov
sbb
pop
pusha
lcall
jno
cmp
push
push
out
jo
jge
ret
push
sahf
mov
dec
loope
enter
addr16
je
add
jl
je
out
fdivl
jecxz
jmp
aaa
scas
scas
push
es
xor
jns
test
loopne
sub
jmp
sbb
dec
in
jns
sub
movsb
push
loopne
mov
lcall
ret
loopne
jmp
shr
movntq
or
js
inc
push
fstpl
dec
and
in
xchg
std
mov
out
add
cmc
mov
xor
push
xor
pop
outsl
dec
xor
jp
addr16
enter
jl
xor
mov
adc
sub
pop
jle
popf
lock
xor
fistps
mov
dec
lcall
mov
das
xchg
in
xbegin
push
mov
test
cmp
mov
sbbl
jecxz
cmpb
js
clc
mov
roll
je
pusha
inc
lods
gs
inc
mov
dec
jnp
lcall
xchg
loope
xchg
pop
jmp
pop
add
jo
mov
stos
and
mov
mov
xor
pop
and
jecxz
daa
les
xchg
es
call
mov
aas
repz
repz
aaa
jae
lcall
bound
daa
add
call
push
outsl
sub
lods
pop
scas
sub
ja
lds
nopl
add
jns
mov
jmp
xchg
cmp
xlat
push
adc
pusha
push
nop
gs
popf
cmp
sub
outsl
mov
pop
cltd
xor
xor
and
jmp
xchg
scas
dec
mov
cli
aaa
jns
ret
vdivpd
and
fsubs
repnz
xor
mov
push
insl
pop
push
jg
ret
mov
push
mov
das
xchg
mov
aad
xchg
jb
cmp
movsl
shrl
cmpsl
and
sub
idivl
pop
lcall
mov
xor
adc
adc
mov
std
inc
pop
mov
out
mov
ret
in
cmpsl
jne
dec
test
in
loope
xor
out
jne
imul
sbb
stos
cmpsl
inc
pusha
and
pop
xchg
sbb
adc
dec
dec
add
jno
mov
push
inc
fwait
lock
push
and
add
ret
and
jecxz
sub
dec
cmp
inc
scas
mov
notb
popa
in
clc
jns
pop
or
xchg
xchg
xor
ret
mov
cltd
andb
cmc
xor
movsl
iret
enter
sbb
pop
pushf
xchg
je
inc
pushf
xor
insb
or
stos
jns
xchg
inc
pusha
xor
scas
es
dec
in
inc
sahf
movaps
add
movsb
dec
scas
adcl
jne
push
jno
add
xchg
xchg
ljmp
int3
lret
dec
test
fs
in
mov
sbb
jmp
mov
mov
test
lods
dec
in
movsl
xor
mov
lret
mov
xchg
fs
iret
add
mov
or
sbb
repz
je
loope
adc
lret
psubw
pop
shlb
rcr
fnstenv
aas
fcmovnu
inc
xor
xchg
into
inc
adc
cmpsl
cwtl
dec
jo
xor
outsb
mov
mov
push
pop
xor
jmp
outsl
inc
push
hlt
imulb
dec
out
or
mov
jp
inc
inc
xchg
xchg
out
mov
push
mov
mov
push
lods
jle
mov
jns
sbb
push
jecxz
pusha
and
pop
xor
or
pop
outsl
mov
add
ja
dec
adc
int3
outsb
add
insl
fisttpl
jb
push
in
arpl
mov
pop
and
repz
repnz
mov
stc
mov
add
rclb
pop
ja
xchg
or
daa
sub
pop
fldcw
push
test
push
lds
sbb
das
cmp
sbb
mov
push
xchg
and
inc
pushf
out
mov
mov
hlt
sti
sbb
jo
mov
nop
push
test
jmp
adc
xchg
fsts
sbb
fildll
nop
mov
outsb
lds
push
pop
dec
xchg
jb
inc
sbb
fsubrp
out
mov
inc
lods
and
lods
pushf
and
cli
outsl
fsubrl
push
pop
pop
out
sti
lea
sub
aam
imul
scas
outsl
fwait
in
xchg
clc
dec
mov
rcr
fsubp
mov
mov
imul
dec
xor
div
fwait
mov
mov
shrl
idivl
mov
jbe
mov
lock
and
cs
push
jns
ret
mov
and
enter
divl
inc
aas
loope
jp
popf
mov
loope
push
pushf
mov
outsl
push
mov
fidivs
jno
rcr
add
push
in
dec
sbb
mov
sbbb
mov
lock
shll
pop
pop
cmpsb
jl
in
cmc
jae
push
add
pop
xchg
mov
stc
lahf
pusha
pusha
xchg
ret
sbb
jo
out
dec
pop
lock
andl
or
pop
cmp
mov
cmc
dec
cli
outsb
daa
fwait
outsb
jbe
lock
clc
in
sub
pop
cli
push
push
adc
test
xor
cmc
sub
mov
in
xchg
aas
lcall
popf
mov
imull
mov
dec
cmp
inc
or
cltd
popa
and
jle
sbb
cmp
jne
jg
stc
push
mov
test
and
sbb
mov
jns
sub
cltd
ret
xchg
mov
xchg
adc
xchg
xchg
cs
add
cld
add
xchg
mov
mov
jge
popf
cmpl
or
mov
or
shrd
and
jl
stos
add
notb
xchg
mov
jns
jae
sbb
fisubl
bound
sbb
xchg
loope
out
mov
push
iret
dec
jno
jne
shrl
sbb
jo
pop
add
js
out
or
fs
call
ret
mov
mov
stc
pop
imul
mov
sub
push
dec
xor
call
push
lods
fisttpl
pop
das
ja
sarl
mov
subl
repnz
xchg
pop
xor
jp
add
add
jle
negl
sbbb
bound
mov
and
jg
or
push
lds
xor
add
mov
aaa
mov
dec
fistps
and
jmp
adc
cli
cmp
pop
fisttps
fmull
in
xor
aad
stos
ss
jg
pop
or
xchg
jnp
inc
jl
aas
push
inc
jecxz
jl
bnd
dec
mov
aam
das
jle
sahf
sarb
push
jno
jmp
ret
jg
jnp
lock
sub
cmp
xor
xchg
xchg
orb
jae
xchg
cmp
stos
movsl
sbbl
outsb
sbb
sub
push
enter
lret
inc
add
jbe
mov
push
sub
mov
ds
out
adc
xlat
pop
out
adc
jp
xor
cmp
test
aas
mov
cmc
sti
add
scas
mov
mov
nop
cmpsl
shrl
jg
inc
imul
dec
daa
and
sar
inc
xchg
stos
or
push
lea
adc
or
push
out
pop
and
fs
andb
scas
mov
cmc
xor
repz
sahf
sub
and
cmp
mov
push
js
in
loop
bound
test
lahf
cmp
mov
pop
mov
pop
jle
fdivl
je
test
push
mov
mov
lret
or
sbb
loope
pushf
sahf
test
xchg
aad
ret
xchg
dec
sti
int
dec
dec
add
out
ljmp
data16
or
cs
push
sub
xor
scas
and
pop
idivl
ret
outsb
imul
addr16
pop
mov
jge
cmp
mov
push
popf
and
mov
adc
mov
mov
or
mov
xor
jp
cwtl
ljmp
loope
mov
cmp
dec
mov
xchg
ficomps
xlat
mov
pop
fildl
fdivrl
out
es
sbb
jp
sbb
insl
das
xchg
hlt
aam
inc
mov
adc
cmp
xchg
pop
xchg
sahf
add
enter
add
jle
mov
sub
loopne
loop
cs
dec
sub
aad
dec
pop
das
pop
mov
mov
ds
add
or
fwait
arpl
and
xor
rcr
push
inc
xchg
push
ljmp
hlt
jp
jmp
sbbb
movsl
push
mov
and
gs
aam
mov
cmpsb
lret
adc
and
mov
adc
sub
and
pop
sarb
jle
in
es
fstps
lds
ds
ret
push
int3
test
push
lcall
pop
cs
push
xchg
gs
pop
inc
inc
into
shlb
and
daa
xor
out
in
jge
dec
mov
dec
fadd
jecxz
push
icebp
dec
add
fwait
inc
rorb
movsb
mov
loopne
rolb
jp
shrb
jmp
inc
push
js
cmp
out
inc
repz
ret
pop
lret
test
in
loop
jns
insb
pop
rep
iret
cmpsl
adc
mov
std
push
rcrb
xor
or
ds
cs
dec
aad
jg
pop
jg
inc
imul
out
mov
out
or
dec
push
xchg
aas
arpl
in
push
adc
xchg
lret
add
ds
divb
imul
pop
dec
jne
mov
pextrw
imul
xor
dec
pop
subb
dec
pushf
mov
faddl
loop
push
out
mov
jne
push
cmpsl
mov
cmp
ret
jne
in
xchg
push
rclb
mov
outsl
fwait
imul
dec
idivl
popf
lahf
xor
sbb
fcmovbe
scas
cmp
pusha
loopne
mov
push
aaa
adc
xchg
les
repnz
out
stc
dec
stos
mov
popa
out
fisttps
push
mov
fdivrs
xor
sbb
dec
jmp
das
mov
add
cwtl
fadd
xor
mov
repnz
mov
arpl
or
and
movsb
subb
lock
push
or
test
lods
add
xchg
and
jl
mov
lods
in
sti
ja
insl
decl
or
jno
test
ret
cmp
outsb
cmp
es
or
xlat
lret
jbe
fs
outsl
shr
dec
xor
sbb
dec
out
lahf
pushf
push
fnstsw
jmp
call
adc
xor
repz
jno
sbb
add
test
inc
mov
in
jne
imul
push
sbb
movsb
stos
outsl
data16
imul
adc
aad
je
cmpsl
test
mov
mov
mov
ficomps
loopne
adc
repnz
test
sub
pop
lret
mov
mov
push
adc
pushf
xchg
pop
cmp
std
in
mov
leave
push
repnz
xor
or
inc
jb
pusha
pop
mul
jmpw
sbb
xor
lahf
inc
dec
fsubr
adc
je
push
mov
cmpsb
mov
sbb
je
sub
jae
dec
enter
lcall
push
clc
test
inc
xor
cld
pop
mov
pop
lret
inc
mov
mov
jo
jle
cmp
rcrb
xor
jnp
cli
inc
ret
fnsave
mov
ret
leave
sbb
xlat
push
jecxz
mov
cli
inc
push
dec
cmp
inc
dec
test
movsl
movsb
jae
sub
andb
out
add
sub
push
pushl
mov
lcall
in
mov
fisubl
adc
xchg
mov
sub
and
nop
push
xor
ljmp
cmpsb
cld
fldt
idivl
and
addr16
mov
jae
ss
xchg
lock
test
xor
cld
cmp
call
pop
andb
cmc
and
fdiv
out
push
mov
pop
add
clc
pop
xor
mov
adcb
rolb
or
push
jne
imull
jnp
cli
andl
cmpsl
movsl
cmpl
add
xor
leave
xor
lcall
icebp
shlb
lcall
mov
testb
loopne
shrl
into
jmp
inc
cmp
xlat
dec
push
arpl
and
sbb
in
fstps
lock
ss
data16
mov
lods
std
dec
sub
or
add
dec
fsts
shl
les
jno
popa
cmp
testl
mov
pop
ja
dec
pop
fmuls
pop
push
mov
jbe
jecxz
je
pop
push
mov
test
into
scas
cmp
js
test
pop
repz
scas
je
xchg
push
xlat
add
ja
notb
fsubl
icebp
push
mov
mov
sbbl
stc
inc
call
xchg
and
jae
test
mov
fiaddl
popa
mov
aam
lcall
jg
rolb
mov
movsl
xchg
sub
sarl
and
and
lds
add
bound
mov
test
push
rolb
pop
add
pop
pop
or
sbb
stos
andb
mov
into
jle
inc
into
dec
inc
fists
scas
lahf
subb
rolb
ret
add
cmp
movsb
ret
adc
ret
xor
push
inc
int
pop
shl
mov
sbb
hlt
in
xchg
arpl
xchg
and
ret
inc
insl
fwait
mov
iret
xor
cltd
or
aas
ss
dec
das
shlb
cmc
mov
xchg
cmc
adc
dec
lds
jg
rcrb
and
push
sub
or
mov
int3
jmp
cld
mov
in
xor
clc
push
mov
xchg
dec
pop
mov
stc
mov
mov
popa
rorb
pop
dec
mov
jg
sar
adcb
xchg
flds
lahf
cmp
add
fwait
and
jns
std
and
lods
ret
in
cmp
daa
or
cmp
fldl
out
sub
jbe
mov
mov
mov
xorb
aas
jno
pop
fldcw
nop
iret
mov
adc
add
adc
fwait
push
mov
int
xor
loop
mov
sbb
inc
ret
push
cmp
aaa
mov
enter
inc
dec
push
jo
and
jnp
arpl
cmpsl
xor
pop
adc
rcll
pop
lea
push
jp
lea
or
jmp
sub
pop
xor
les
out
cmpsl
inc
xlat
sub
mov
lds
lods
lods
jecxz,pn
jbe
pop
push
dec
push
es
xor
repz
push
arpl
jbe
xchg
fdivl
lret
pop
and
ss
add
adc
test
inc
les
pop
test
adc
pop
inc
lods
mov
sti
push
jg
test
in
fisttps
shll
or
pop
and
cmp
mov
pusha
ds
notb
pop
daa
stos
inc
enter
sbb
popf
cwtl
ja
ljmp
mov
mov
inc
shl
lea
xchg
arpl
adc
push
inc
lods
cmp
push
push
jo
nop
je
add
mov
subb
or
in
repz
push
sarb
mov
and
push
dec
js
adc
mov
scas
shl
cmpsb
rorl
add
jb
mov
rol
push
dec
push
daa
xchg
pushf
fsubrl
dec
lahf
xlat
jne
xchg
shll
push
pop
int
mov
sbb
push
incl
je
mov
adc
and
lahf
push
and
pop
cmp
mov
aas
sub
pop
dec
sbb
pop
xchg
je
fwait
ds
aad
sub
popf
ds
or
inc
adc
and
mov
dec
inc
xor
insl
incl
test
sub
loopne
push
in
out
lahf
in
out
fimull
add
pushf
aam
mov
jmp
das
mov
jmp
xchg
pop
xchg
test
clts
int3
stos
and
lods
aam
mov
and
stc
xchg
push
call
dec
dec
sub
cmp
cli
movsb
jge
xchg
add
sbb
sbb
push
cli
lahf
icebp
les
pop
shlb
pop
arpl
cmpsb
jmp
push
inc
pushf
outsl
sbb
cmpsl
fisttpll
in
lret
sub
xchg
xor
adc
mov
pop
sub
sahf
insb
ficompl
dec
mov
cwtl
push
push
xchg
repz
outsb
pushf
jg
dec
call
push
pop
in
loopne
pop
sar
dec
mov
fcomi
sbb
xchg
es
popf
mov
addr16
das
mov
push
mov
and
push
dec
jnp
sbb
inc
mov
add
push
js
jecxz
fs
rolb
inc
repz
push
dec
cmp
movsl
loopne
pop
outsb
mov
jb
cmp
adc
sub
hlt
insb
icebp
cmp
add
jecxz
or
repnz
push
and
sub
out
es
inc
in
fs
dec
insl
xor
jne
push
test
into
leave
fcmovbe
inc
adc
cli
cmpsb
inc
lds
xor
pop
mov
lcall
pop
dec
or
mov
and
xchg
leave
and
sbb
movsl
out
jmp
xlat
pop
pop
add
cmp
and
xor
jbe
shll
sub
sub
mov
out
xchg
imul
mov
stos
pop
filds
fstl
hlt
mov
int3
roll
jae
jecxz
test
adc
cmp
repnz
mov
mov
add
jmp
pop
and
jl
rorl
mov
ficoms
js
ja
loope
stos
fwait
sbb
sar
je
dec
fs
xor
fistl
je
lods
push
mov
and
and
jp
xchg
cmp
adc
cli
add
adc
pop
and
movsl
std
or
mov
mov
xor
outsb
repz
loope
rcll
mov
repz
inc
xchg
jecxz
mov
xchg
imul
push
jp
xchg
add
jmp
jg
mov
ljmp
sbbl
insb
mov
jge
out
lcall
xor
mov
or
jnp
call
ret
lret
cmp
in
pusha
inc
push
inc
sub
jnp
inc
cmp
pop
sub
in
pop
cld
xchg
jbe
sub
daa
or
in
add
pop
aam
nop
std
xor
pop
sarl
lods
clc
repnz
ss
pop
push
bswap
push
sbb
stos
adc
sahf
and
push
andl
roll
adc
xorb
xor
movsl
jae
inc
jecxz
das
xor
push
sub
jo
inc
xchg
lret
push
and
hlt
je
rclb
xor
std
mov
cmp
mov
and
inc
pushl
in
mov
jle
push
ja
push
cmpsl
js
repnz
xor
mov
test
sbb
dec
inc
out
call
adc
push
arpl
inc
ds
fidivl
adc
jge
jmp
mov
push
jle
fldcw
lea
inc
inc
mov
or
rol
sub
mov
sub
add
orb
jne
ret
push
and
std
aaa
leave
mov
popf
xchg
cmc
mov
repz
rcll
pop
xor
cmp
je
jmp
mov
ss
scas
and
dec
in
and
dec
pop
pmaxub
sti
fdivrl
mov
xchg
push
inc
outsb
dec
sti
sbb
enter
cltd
sbb
jb
mov
cmc
jne
rorb
hlt
adc
xchg
inc
mov
mov
les
lods
stos
mov
nop
push
and
add
repnz
sub
jle
hlt
cmp
mov
cmpsb
mull
sarl
mov
adc
cmc
aad
push
sub
mov
rorb
test
fcoml
xor
jmp
cli
pop
aaa
xchg
les
in
fwait
sbb
pop
push
movsl
mov
enter
xchg
loopne
punpckhdq
and
dec
cmpsl
mov
or
sbb
add
je
lods
add
sarb
or
fs
jp
ja
repnz
imul
add
jbe
insb
repz
pop
xchg
iret
mov
xchg
pop
mov
dec
mov
mov
cmpsl
popf
outsl
pop
out
sub
cs
xchg
test
adc
mov
mov
cs
mov
clc
jge
cmp
cmc
imul
shr
xchg
enter
cmp
testl
or
add
mov
imul
pop
xchg
cmp
adc
cmpsb
jne
aas
push
pop
xchg
jne
lcall
aaa
dec
std
out
mov
and
or
inc
xchg
fnstsw
xor
mov
enter
jle
sub
pop
jmp
fsub
cmc
mov
cmp
out
je
xchg
and
scas
sbb
and
jg
inc
push
je
lret
jb
cmp
sahf
arpl
sbb
je
add
and
popf
pop
lds
out
aam
and
aad
dec
xor
dec
xchg
imul
jmp
cwtl
sbbb
in
mov
insb
leave
jo
or
fs
out
push
popa
lret
addr16
push
fimuls
outsl
mov
in
lods
adc
or
call
push
in
inc
insl
mov
ja
arpl
adcb
xor
adc
mov
orl
push
inc
or
add
pop
jnp
pop
pushf
pop
sbb
mov
pop
in
scas
nop
push
shr
aad
out
int
fsubrs
mov
and
xor
jg
jbe
pop
mov
sub
lods
and
jno
or
fwait
in
inc
fstps
jmp
cmpsb
push
or
cmc
push
mov
popa
add
add
inc
rorb
bound
jns
sbb
addr16
les
dec
jnp
sbb
jo
lret
adc
popf
cmpsb
dec
outsb
sbb
clc
inc
inc
addr16
mov
cmp
sub
add
aad
xchg
mov
cmp
cmc
mov
pushf
inc
push
in
mov
mov
inc
outsl
xchg
mov
dec
cmp
push
movsl
jae
mov
out
inc
xor
sbb
push
in
xchg
lahf
xchg
xchg
xlat
inc
jg
push
ljmp
daa
xor
mov
xor
cwtl
and
mov
push
xchg
popf
dec
push
jl
xor
jbe
cld
pop
xchg
ljmp
pop
jge
mov
out
outsl
add
inc
pushf
fcoml
test
ficompl
lock
sub
cmp
mov
push
xchg
ret
les
daa
enter
xchg
testl
loopne
ficompl
leave
pop
mov
bound
mov
clc
sbbl
dec
pushf
and
lret
aaa
sub
arpl
rcll
je
xchg
sub
test
dec
sbb
pop
loope
xchg
push
dec
aad
sub
lret
xchg
out
sub
xor
mov
jle
movsl
sbb
or
orb
fwait
notb
push
dec
sbb
cmpb
scas
push
cmp
add
movsl
dec
int
flds
shl
pop
ljmp
icebp
xchg
test
push
int
jecxz
xor
jge
xor
insb
clc
test
jp
sub
pop
cmp
fcmove
inc
cs
lret
stc
insl
mov
inc
out
fwait
add
addb
rcrb
repnz
sub
jbe
push
or
jo
mov
sbb
mov
sbb
mov
aaa
push
adc
js
push
test
repnz
lahf
loopne
in
inc
cwtl
mov
cmpb
nop
shl
fidivl
repz
es
xchg
mov
xor
js
lret
fisubs
sbb
fiaddl
push
sbb
cmc
sbb
sbb
or
or
stos
xor
xor
add
push
cwtl
add
jge
das
jmp
pop
or
data16
and
push
push
leave
fs
xchg
pop
lods
je
mov
mov
jb
jbe
push
test
into
fisubrl
ss
jle
shll
daa
dec
fsubr
add
je
out
pop
dec
xchg
and
or
and
mov
fs
lds
insb
insb
outsl
fildll
adc
or
push
test
pop
fadd
ret
lods
dec
aaa
andl
ficompl
jp
dec
aaa
stos
mov
repnz
popl
popf
pop
dec
cmpsb
adc
add
ret
lahf
cmc
jbe
add
test
cltd
jae
gs
lret
jo
fnstenv
push
jmp
mov
ds
test
enter
cmp
push
pop
xchg
push
pop
in
aaa
test
cltd
sbbl
aam
sub
imul
lods
dec
lcall
xchg
sub
pusha
xor
pop
sub
enter
jnp
ds
add
loop
dec
cs
idivl
sahf
and
shl
fcompl
xchg
push
into
xchg
loop
mov
out
jecxz
dec
ret
pop
mov
rol
dec
and
loopne
loop
inc
iret
inc
dec
int3
enter
jl
pop
mov
mov
outsb
sbb
cld
rolb
sbb
mov
in
lock
sbb
rcrl
xorl
shll
sti
js
shlb
movsl
mov
repnz
jl
cmpl
in
pop
mov
cmp
jnp
and
scas
leave
test
cmp
jnp
add
leave
ds
cmpsl
pop
imul
cli
lods
clc
and
mov
sahf
mov
out
inc
test
mov
jns
xchg
or
and
popa
mov
mov
jl
movq
in
fs
mov
and
iret
xchg
sub
mov
les
insl
in
lock
add
loope
fmull
sbb
inc
jno
js
jg
push
mov
lret
add
sub
ret
out
jae
sub
fidivrs
gs
subb
xchg
xchg
dec
data16
adc
mov
xor
stc
mov
shll
adcb
mov
add
push
push
jae
push
repnz
fildll
mov
cmp
pushf
mov
jae
jg
lret
mov
test
movsb
arpl
daa
mov
outsl
ja
push
es
mov
aaa
jae
adc
mov
add
stos
lret
and
outsb
rcr
cmp
or
stos
imul
mov
sbb
icebp
clc
xchg
call
stc
add
fcmovnbe
std
shlb
pushf
jae
jl
mov
jmp
das
outsb
test
int
int3
test
lret
add
jp
inc
mov
pop
ss
dec
into
lods
mov
jnp
mov
xchg
inc
jno
jl
inc
lahf
inc
adc
jl
fbstp
xor
mov
outsb
pop
loop
rorl
jle
mov
addb
cld
cmpsb
in
mov
jns
shll
lcall
ds
xchg
mov
dec
push
adc
push
cs
aam
mov
mov
push
mov
cltd
bnd
sbb
aad
sbb
movsl
adc
insb
movsb
fimull
pop
pop
jge
xchg
loope
das
xchg
and
shl
push
mov
testl
scas
jl
add
xor
sbb
cli
fnstcw
sbb
cmp
paddq
sub
cld
sub
mov
push
loop
dec
jle
pop
mov
jne
or
mov
jmp
xchg
mov
pop
ffreep
dec
sti
scas
xchg
popf
xor
push
sub
push
orl
enter
aas
outsl
pusha
add
into
mov
shll
shlb
xchg
cmp
dec
jl
or
cmpsl
mov
pop
jbe
int3
dec
pop
in
add
push
sub
inc
push
mov
xor
out
daa
sub
add
cmc
jmp
pushf
fiadds
ds
out
cmc
add
or
fidivrs
fimuls
add
xchg
inc
inc
je
adc
xorl
aad
leave
push
jge
xor
lods
cmp
cs
leave
push
push
popf
aaa
jmp
js
and
fcmovu
push
fnstsw
idivb
jle
pop
mov
testb
filds
dec
inc
xchg
pop
shrl
or
inc
inc
test
add
dec
rclb
movsb
test
xorl
fwait
mov
mov
sub
add
pusha
jl
and
pop
and
dec
xor
mov
add
cmp
pop
sub
mov
sub
outsl
sarl
sub
push
in
adc
and
shlb
scas
dec
pop
push
bound
or
aas
pop
xlat
mov
jl
and
add
mov
xchg
xorl
ror
push
sbb
mov
lahf
out
mov
cwtl
push
js
out
xchg
cmp
enter
adc
cmpsb
sbb
std
stos
ret
or
jle
xchg
push
test
out
or
movsb
mov
rolb
aam
movsb
lahf
std
icebp
jg
in
lods
xchg
push
pcmpeqd
add
mov
mov
hlt
not
cmp
inc
pop
mov
and
lock
cmpsb
mov
xor
dec
jb
in
out
jecxz
pop
dec
pop
jecxz
push
jno
lock
in
xor
cltd
add
push
in
cmp
repz
inc
test
popa
sub
imul
lea
lods
out
icebp
push
outsl
ja
fmull
lds
xchg
push
test
or
lahf
negl
push
and
pop
cmc
sbb
mov
mov
xor
inc
add
out
cli
daa
jle
dec
mov
test
xchg
lret
mov
dec
aad
int3
lds
xchg
cmp
lods
pop
jns
test
pop
lods
inc
add
rcll
push
in
insb
insb
aaa
loopne
sti
sbbb
rcrw
pushf
sbb
dec
dec
mov
ror
loop
push
pusha
repnz
push
xor
sti
adcb
pop
stos
sbb
in
and
xchg
ja
mov
jae
dec
lods
hlt
push
and
int3
ret
pusha
adc
pusha
shlb
or
mov
daa
std
clc
mov
inc
adc
jno
mov
aad
add
icebp
mov
orl
adc
stos
sar
dec
push
push
movsl
jecxz
lods
dec
fidivrl
inc
lahf
xchg
hlt
std
imul
dec
cmp
mov
mov
mov
mov
mov
mov
push
mov
imul
rorl
pop
mov
mov
mov
adc
es
adc
xor
adc
add
scas
push
add
repnz
push
ljmp
push
push
ret
jno
repnz
add
and
mov
fistpll
sub
nop
rorl
fxch
dec
rolb
lds
cmpsl
aaa
mov
pop
and
aam
and
loopne
mov
dec
mov
in
les
cmp
fisttps
stc
leave
loop
dec
ljmp
addr16
jecxz
or
mov
push
dec
fistpl
movsl
mov
fmulp
and
xor
add
push
xchg
jle
das
sub
gs
loope
dec
and
adc
scas
les
sti
mov
cltd
jae
out
pushf
fsubl
stos
ljmp
lea
popa
push
and
dec
in
mov
repnz
das
loope
stos
daa
or
popf
xchg
mov
dec
loopne
fisubl
fldl
jle
pop
mov
mov
cld
das
addb
scas
repnz
mov
stc
popa
ret
inc
sub
pushf
or
dec
es
xchg
cli
and
roll
inc
adc
imul
in
mov
fwait
inc
stc
pop
int3
cmp
or
adc
sbb
out
ljmp
push
inc
pop
arpl
sahf
dec
outsl
xor
push
xchg
out
lret
mov
outsl
andb
nop
sbb
lcall
int
sbb
mov
decl
out
inc
ljmp
cmp
clc
dec
xchg
addb
outsl
inc
movsl
sub
js
lcall
arpl
in
dec
addr16
sbb
xchg
stc
jbe
push
icebp
outsb
sbb
cltd
jnp
jecxz
inc
jnp
push
mov
adc
mov
insb
push
cltd
mov
out
loopne
mov
sahf
lret
mov
lret
outsl
mov
fildll
in
roll
xor
js
and
sarb
lea
lret
inc
add
inc
push
jo
out
dec
xchg
push
jns
jp
call
xchg
mov
iret
roll
mov
call
imul
out
ficoml
pop
aas
leave
lahf
sub
xchg
pop
sarb
jge
mov
jge
push
push
jg
pop
cmp
and
in
lods
dec
cmpsl
inc
fdiv
sbb
jns
pusha
pop
inc
in
sub
xchg
addr16
adc
pusha
pop
insb
aam
fxam
insl
push
mov
or
inc
lods
and
out
nopl
call
data16
mov
cmpsl
pop
and
sbb
and
pop
dec
fsubp
mov
add
leave
repz
out
or
loopne
inc
mov
mov
sub
push
shrb
lods
push
push
fiadds
mov
sub
push
dec
in
pop
fimull
adc
push
push
cmp
test
dec
mov
jmp
dec
jns
mov
lea
dec
sub
or
or
push
rcll
xor
and
movsl
and
and
les
out
sbb
fstl
add
ret
insl
inc
push
fsubl
adc
mov
xor
fs
mov
add
sahf
fnstsw
xor
cmpsb
adc
mov
icebp
imul
and
scas
adc
sahf
push
jno,pt
push
mov
jne
mov
sbb
mov
mov
pop
mov
mov
mov
dec
insb
std
jle
test
fucom
andl
pop
and
sub
push
push
ret
push
popa
pop
inc
addr16
mov
test
enter
test
fcomip
push
arpl
mov
pop
shlb
push
bound
movsl
stc
push
pop
pop
pop
out
in
jo
xchg
int
dec
jp
pop
mov
in
movsl
iret
and
loope
inc
push
sub
sbbb
in
je
jle
fcomps
insb
dec
mov
mov
xlat
sbb
dec
sub
in
pop
mov
pop
lea
or
push
cmpsl
pop
adc
jl
sbb
jae
jp
and
sub
mov
es
or
add
mov
pop
push
jp
sahf
xchg
xchg
adc
push
arpl
aam
into
rorb
sub
mov
add
test
push
lret
sub
mov
add
fwait
cmc
lret
fwait
push
xchg
repnz
mov
mov
fcmovb
fmuls
aas
nop
mov
push
fcompl
push
pop
sub
sbb
lock
int
lret
adc
adc
jmp
xchg
into
rcrl
sbb
movsb
cmp
sub
sub
mov
andb
jg
or
dec
add
cmp
dec
pushf
pop
mov
leave
stos
push
outsb
lock
shll
stos
push
xor
fwait
outsb
inc
add
rcrl
bound
mov
mov
mov
jmp
icebp
pop
in
daa
mov
sbb
jnp
or
jp
xor
sbb
push
andb
loope
daa
pop
lcall
cmp
cltd
xor
ffree
out
shrb
push
int
inc
je
stc
sbb
insl
adc
mov
ret
push
cwtl
js
sub
es
pop
cli
cld
out
lcall
xor
insb
mov
sarb
mov
jno
jg
ds
cli
adc
push
adc
lods
mov
mov
lods
adcl
iret
jge
dec
fwait
sub
pop
outsl
lock
mov
int
adc
inc
mov
icebp
mov
mov
xorb
jnp
mov
scas
popa
pusha
mov
cs
add
into
fidivrs
das
mov
cmc
pusha
lods
dec
aam
inc
and
invd
or
stos
cld
push
std
jge
push
sar
sub
adc
outsb
outsb
data16
shlb
movsb
cld
cmp
outsl
lahf
sub
push
cmp
enter
add
out
sbb
inc
mov
mov
push
repz
scas
cmc
mov
xor
push
sub
inc
shll
cmp
xlat
sbb
in
fyl2xp1
lock
rorb
ret
pop
cmp
lahf
test
insl
imul
int3
imull
cmp
mov
inc
gs
pusha
fistps
rcll
sub
stc
add
fadds
aam
or
ja
pop
lods
hlt
enter
sbbb
push
sub
gs
out
rcll
lock
daa
je
xchg
add
hlt
dec
mov
pop
ljmp
push
bswap
in
pusha
mov
or
adc
jl
sub
mov
ret
jmp
jge
xor
daa
sahf
jns
fistps
sti
cld
repz
jge
movsl
add
sub
clc
mov
adc
dec
int
jo
xor
dec
adc
xchg
dec
fldt
mov
and
xor
dec
mov
jl
outsl
add
push
repnz
movsl
fsts
mov
gs
mov
add
dec
xchg
or
das
jo
xchg
aaa
add
movsb
xor
loop
xchg
push
lds
pop
jno
cmp
jmp
imul
mov
test
push
jg
jns
jmp
bnd
das
rol
push
sbb
pop
sub
adcl
add
cmpsb
stos
jnp
cmpsb
mov
aad
cmc
cmp
bound
inc
ret
sub
mov
inc
in
cmp
jno
add
mov
or
cltd
jns
negl
call
je
daa
xchg
nop
iret
lds
dec
sahf
lret
out
inc
mov
hlt
sbb
mov
dec
movsb
xchg
add
sub
fidivl
fwait
inc
sahf
pushf
and
leave
jae
push
add
shlb
test
push
movl
cmp
pop
das
push
daa
push
and
sbb
aam
leave
cmpsb
push
ss
push
cwtl
cmp
jo
pop
mov
mov
mov
xchg
pop
stc
sbb
arpl
test
add
orl
mov
and
lret
dec
in
das
das
pop
xlat
xchg
sti
mov
xchg
loopne
lahf
loop
ret
mov
push
sbb
and
in
rcr
mov
pop
leave
gs
inc
bswap
das
lods
cmpb
mov
nop
imul
and
test
jmp
fcompl
hlt
cmp
call
mov
add
dec
mov
adc
movsl
lea
mov
mov
inc
js
xor
fnstenv
int3
outsb
cmp
movsl
jb
xor
cmpb
lcall
xchg
sbbb
iret
jnp
dec
and
outsb
push
mov
push
testb
inc
aas
sub
das
mov
pusha
pop
ret
jno
hlt
sub
mov
jl
dec
add
imul
inc
add
dec
aad
push
bound
xchg
xchg
leave
xchg
mov
jnp
sub
sti
xchg
add
cmpsb
fwait
xor
cs
gs
inc
shrl
jno
mov
pusha
mov
jb
repnz
ljmp
push
adc
shl
sbb
out
xor
pop
xor
jns,pt
bound
xchg
negb
decb
lret
popf
repz
xchg
adc
iret
add
inc
sarl
xchg
rolb
sahf
jp
nop
popf
push
out
push
mov
push
out
je
sbb
xchg
dec
scas
sti
lcall
andl
fwait
pop
mov
es
aas
or
mov
cmpsl
push
repnz
ficomps
sbb
inc
mov
push
js
dec
and
xor
xchg
mov
ror
mov
xlat
xchg
sbb
push
mov
xor
ss
and
cmp
adc
pop
sbb
cmp
outsl
out
cs
sub
fadd
dec
fdivl
and
leave
cmp
aas
leave
jp
xor
jmp
cmp
int3
dec
xchg
hlt
pushf
jo
adc
inc
push
mov
in
inc
icebp
adc
jbe
test
int
inc
sbb
add
popa
rcrl
fstl
pop
push
sub
das
clc
dec
pop
jb
js
jle
cwtl
mov
movsb
push
xchg
dec
add
sub
jae
xchg
aam
mov
cmp
and
adc
aas
xchg
lods
inc
in
dec
cltd
xorl
in
xchg
out
shrb
jno
bnd
adc
ljmp
pop
cmp
sbb
mov
sahf
mov
andl
aas
and
inc
jle
xor
in
xchg
stc
pop
mov
xlat
cwtl
push
jge
fildl
popf
out
inc
cmp
test
and
push
daa
inc
adcb
icebp
push
cwtl
cmp
adc
dec
scas
jno
adc
leave
cmp
es
ss
insl
rorb
add
into
idiv
mov
inc
jb
out
loopne
loope
sbb
cmp
arpl
mov
pop
test
push
das
icebp
lea
sub
ret
cld
mov
fsubs
in
pop
ja
shll
push
push
xchg
stos
pop
int
gs
aam
ss
push
jne
mov
jmp
fxch
pop
xchg
add
inc
sbb
mov
pop
mov
push
dec
xor
pop
lea
mov
lret
scas
inc
adc
sar
mov
scas
push
jne
in
pop
es
push
enter
into
scas
and
cmp
ljmp
imul
sub
mov
enter
paddb
push
pop
std
jg
jg
dec
xor
pop
push
fildl
jbe
popa
fisubs
dec
ja
rolb
sar
pop
push
cltd
test
inc
pop
pop
daa
push
jge
movsb
in
push
pop
jno
or
or
and
push
int3
jns
lret
or
loope
jae
sbb
xorl
mov
sub
bound
cmp
aaa
daa
daa
sbb
subb
push
add
lea
in
repnz
fs
jecxz
or
lahf
pop
inc
push
jo
push
repz
xorb
jecxz
cmp
bnd
stc
inc
sub
jecxz
mov
addb
adc
inc
xor
daa
test
mov
push
push
clc
stc
jge
clc
lods
xor
mov
mov
std
sbb
mov
lea
add
lret
cmp
adc
ljmp
lret
dec
mov
xor
iret
dec
fsubrs
cltd
xchg
scas
push
sub
testb
bound
push
outsb
adc
hlt
jp
outsb
dec
dec
cli
or
cmp
xchg
jo
testb
out
sti
push
add
out
xor
pop
dec
ljmp
push
dec
loop
les
lds
dec
fcmovnu
ficomps
mov
insl
dec
or
mov
inc
fwait
je
shrd
pop
sar
in
rorl
adc
xchg
xor
notl
scas
xchg
xchg
or
jl
insl
xor
test
xor
lods
and
inc
pop
and
mov
and
push
push
sbb
fucomp
cmp
sarb
test
jmp
cmp
sarl
add
ret
sub
xlat
and
push
popf
sub
jmp
mov
std
xchg
or
inc
push
rclb
inc
push
out
int
sub
sub
xor
push
mov
xor
and
js
dec
sub
jp
leave
push
pop
leave
inc
dec
cmpsl
push
and
ja
add
or
ds
or
ds
pop
mov
rcrb
adcb
fbld
jge
and
sbb
xorb
xor
jecxz
call
ret
mov
jp
jnp
je
repz
pop
or
push
adc
xchg
incl
or
addl
add
ucomiss
imul
xchg
hlt
mov
or
jns
jl
sub
je
mov
mov
jle
ja
int
dec
sbb
xchg
jge
out
bound
js
push
jno
out
enter
adc
sub
inc
jae
sub
inc
adc
jmp
cmp
ror
nop
out
pop
jmp
pop
xchg
sub
inc
pop
push
fildl
mov
movsl
imul
or
fwait
adc
orl
insl
sbb
dec
sbb
cltd
xchg
fs
rcrb
aas
movsl
out
push
shrb
lods
inc
js
insl
pusha
nop
imul
sbb
fcomi
outsb
push
loopne
jp
aad
jmp
out
jnp
dec
js
add
sub
pop
pusha
mov
lret
fwait
sbb
pusha
and
mov
or
daa
aad
push
ja
cmp
xor
movsl
jmp
clc
mov
rclb
push
and
clc
mov
xor
mov
and
xchg
enter
leave
jo
ds
aaa
leave
fldl
or
or
inc
ret
popa
lods
cmpsl
jg
gs
sub
lahf
insb
mov
cmp
rolb
pop
out
push
mov
xchg
mov
jb
lcall
inc
inc
movsl
dec
lcall
out
lods
inc
iret
ss
dec
loop
mov
jno
fdivr
mov
mov
mov
cmc
stos
inc
and
lock
cmp
cwtl
stos
cmp
roll
jecxz
rcll
pop
sbb
jmp
and
sahf
cmp
icebp
out
dec
inc
ja
into
add
sub
xchg
subl
pop
adc
jne
lret
ds
or
pop
jmp
arpl
sub
dec
loope
or
mov
outsb
sahf
and
push
bound
sub
std
out
and
xor
sbb
das
out
movsl
les
shll
arpl
add
add
pop
push
jl
inc
cltd
scas
call
fdiv
repz
je
pusha
push
cltd
sbb
fidivrs
adc
mov
mov
les
or
aaa
pushf
aad
call
cmpsl
test
rcrl
pop
imul
fildll
jnp
ret
xlat
push
notb
inc
in
into
enter
pop
mov
outsb
mov
loope
hlt
hlt
cmc
xor
and
jmp
fldt
jle
pop
dec
xchg
dec
sti
push
insl
cmp
jne
aad
pop
mov
fisubs
call
and
xor
or
es
cmpsb
xchg
jns
add
mov
in
ror
and
pusha
or
jo
cltd
sub
jp
adc
cmpsb
jae
ss
xchg
bound
cs
test
dec
outsl
lods
xchg
mov
jle
mov
js
aaa
push
xor
xchg
outsb
xchg
pop
mov
mov
xchg
mov
cmc
aaa
int
pop
jno
add
popf
orb
xor
lahf
aam
sbb
les
xor
bound
lcall
int
and
shlb
xchg
mov
test
nop
push
and
pop
cmpsl
sub
sub
push
popf
adc
cli
sbb
pusha
outsb
cmp
out
pop
pop
add
mov
cmp
adc
mov
add
fwait
mov
cmp
dec
out
mov
mov
lock
fcompl
mov
xorb
rolb
fidivs
and
imul
cmp
mov
push
test
movsb
test
and
iret
or
gs
and
push
inc
sub
or
test
aaa
xor
push
sar
jge
inc
xor
testb
shrl
pop
sub
fldt
add
fnstcw
ds
xchg
popa
push
inc
inc
lret
adc
into
lods
sahf
ljmp
dec
imul
cwtl
sbb
cmpsb
push
pop
fsts
pusha
jle
cmp
in
cmp
and
popa
or
not
ss
push
rcrb
mov
test
in
sbb
fcmovbe
inc
mov
xchg
in
sub
jecxz
xor
sub
js
cmp
mov
mov
sbb
mov
cwtl
wbinvd
inc
enter
add
pop
lods
mov
and
push
xor
es
xchg
pop
mov
jo
sub
movq
jecxz
mov
xor
pop
push
sbbb
into
shrl
dec
jbe
xchg
jmp
mov
add
and
popa
inc
and
mov
xchg
pop
mov
push
add
mov
pop
mov
mov
in
js
mov
nop
add
jp
xchg
jmp
xchg
cmp
and
pop
mov
add
pusha
pushf
lods
and
js
sarl
ja
sub
shll
add
sbb
loop
mov
cmp
inc
rcpps
push
mov
sbb
les
ret
or
inc
fisubrl
and
mov
mov
test
xor
mov
xchg
pop
jae
or
cwtl
mov
sub
push
pop
aas
shlb
pushf
and
jns
aas
xchg
mov
sub
dec
lret
inc
fsubrp
sbb
jecxz
in
or
mov
in
push
outsl
xor
and
rclb
adc
or
std
sub
pop
push
inc
dec
test
icebp
stos
inc
ja
fists
and
push
outsb
stc
in
enter
fcmovne
les
pop
push
mov
lcall
cmp
rclb
lret
jo
ds
subb
mov
insb
mov
lds
mov
mov
cmp
and
jle
and
pop
std
sbb
pusha
sar
cmpsb
and
sub
mov
fwait
imul
repz
sbb
orb
ret
xchg
xor
popf
sub
xchg
dec
loop
movsbl
mov
pushf
jp
cmp
mov
sbb
cmpsb
scas
dec
clc
mov
mov
cli
or
fs
lods
ds
out
or
pop
inc
call
ljmp
mov
outsb
data16
loop
pop
lret
fsubrp
mov
cli
cmp
sub
rolb
fwait
in
notl
add
fimuls
int3
inc
jae
jmp
test
push
leave
fs
pusha
pop
or
jae
ja
jb
pushf
je
or
addl
add
fs
adcb
push
xchg
addl
lea
movsb
xlat
ja
call
inc
xchg
das
f2xm1
xor
push
ret
hlt
es
addr16
pop
pop
push
cs
pop
add
in
adc
lea
push
jns
or
das
lret
fdivrs
add
lahf
ljmp
sbb
inc
cmpsb
scas
pop
out
out
mov
mov
sbb
jbe
jle
fistps
cmpl
cmpsb
dec
cld
add
imul
adc
cmp
sbb
pop
int3
mov
in
jb
sbb
bound
mov
les
imul
dec
inc
jb
aas
push
pop
inc
lea
orb
subl
jp
pop
int
aas
and
cmp
sub
lcall
rorl
aad
and
cmc
push
sbb
int
pop
cmp
or
and
loop
sub
fdivrs
and
orl
and
popa
cli
pop
sbb
ss
cmp
sbb
fucomp
ja
lret
jecxz
mov
adc
out
pop
pop
cmc
mov
fstpl
jo
jns
and
lret
mov
jae
bound
push
lret
push
add
inc
mov
hlt
fidivrl
push
stc
in
mov
fists
xor
sub
shl
out
pop
xchg
fldcw
and
jp
clc
lods
inc
xor
xchg
fisttpll
outsl
xor
hlt
mov
mov
jb
stos
call
cs
lcall
cs
fstl
jo
das
xor
push
jnp
mov
mov
inc
mov
cmp
dec
add
popf
push
fidivs
enter
sbb
push
les
data16
leave
or
lahf
jg
ret
xchg
xlat
clc
jb
or
cmc
lret
add
xor
leave
jmp
bound
lret
mov
roll
rolb
sbb
or
pop
jmp
stc
cmp
xchg
sbb
mov
jns
xor
inc
jp
fisttpl
add
jp,pt
jae
and
mov
ss
dec
and
push
and
addb
fsubrs
mov
cmp
aam
imul
jl
push
rorb
xchg
sub
sbb
xor
into
pop
pop
mov
dec
jl
es
js
int3
push
fs
outsl
jmp
int3
xchg
mov
loope
cli
pushf
clc
jge
lods
mov
mov
je
xor
lret
jno
pop
enter
sahf
push
adcl
lock
cmc
in
sub
xor
rorb
cmpsb
les
fsubl
mov
adc
adc
xchg
sub
push
stos
xchg
cld
sbb
jp
jl
pop
popf
test
pop
jno
mov
mov
push
cmp
test
negb
xor
int3
loop
push
sbb
jecxz
xchg
aam
test
mov
cmp
push
and
push
pop
popf
prefetchw
jno
mov
sub
mov
fwait
leave
xchg
outsb
cmp
inc
out
dec
push
out
sti
es
int
push
xor
jbe
rolb
aaa
ret
out
jo
mov
icebp
push
xchg
mov
xor
dec
hlt
lock
shrb
test
sahf
or
jp
cwtl
add
loopne
xor
xchg
cmpsb
pop
shll
mov
dec
jecxz
mov
sbb
cmp
mov
xchg
mov
rcl
in
push
push
add
dec
inc
in
mov
xchg
and
dec
jb
sbb
jmp
les
pop
stc
mov
or
adc
int
rcll
and
jmp
je
and
xchg
sbb
xchg
ds
out
sti
jns
jp
mov
mull
push
jle
inc
orl
push
jge
pop
adc
addr16
andb
jne
dec
or
out
or
fwait
mov
sub
scas
dec
mov
fiaddl
inc
leave
arpl
daa
bound
mov
xchg
je
mov
test
mov
paddb
cmpsb
loope
push
pop
leave
cs
mov
pushf
push
mov
mov
pop
add
daa
sub
adc
xor
movb
pusha
mov
sbb
sub
xchg
xor
mov
sbb
and
insl
push
aas
mov
mov
pop
xchg
cld
inc
jl
fstp
jge
mov
shlb
hlt
out
jmp
inc
cmp
sbb
push
ror
out
xchg
jge
or
or
sti
roll
mov
clc
fidivrs
sub
fstpl
jge
std
jnp
rolb
cwtl
data16
jne
pop
cmp
popf
mov
mov
pop
sub
cwtl
cmp
cmpsb
fwait
cmp
cmp
in
hlt
jge
or
push
jb
fadd
int3
pop
mov
mov
roll
fwait
dec
jl
in
mov
inc
xchg
aad
adc
jae
xchg
push
hlt
scas
sbb
jnp
data16
outsl
stc
fsubl
sub
cwtl
cmp
push
sbb
aas
mov
mov
sbb
test
jecxz
or
xor
bound
pusha
adc
mov
das
sbb
push
sbb
scas
cmp
cmc
outsb
ja
mov
add
sbb
jno
iret
fcom
push
je
test
cld
lods
jne
jg
insb
bound
test
into
push
ficoms
subl
dec
scas
in
test
pop
negb
lea
lahf
or
fbstp
fsubs
pop
xchg
pop
int3
clc
add
fsts
push
je
pop
cltd
xchg
pusha
popf
jne
jb
push
mov
inc
push
orb
or
popa
mov
loope
pop
loopne
cwtl
jge
push
pop
cmp
int
mov
call
pop
mov
or
xchg
jae
xor
push
dec
pop
add
lock
out
jbe
ret
les
xchg
repz
mov
das
dec
mov
mov
xor
xor
inc
mov
rcll
ret
out
imul
pop
push
xor
ret
add
add
xor
push
mov
fsubrs
xchg
mov
mov
out
and
lds
data16
jmp
shlb
mov
leave
jnp
jae
push
lret
enter
sarb
popa
xchg
cld
jmp
imul
enter
mov
in
stos
mov
lods
in
pop
ljmp
xor
jmp
inc
mov
enter
iret
fwait
mov
lret
fcompp
or
jb
push
popa
push
out
jbe
imul
xor
gs
popl
jb
push
rcrb
sahf
or
or
in
and
sub
dec
divl
jo
repz
into
aas
gs
xlat
xor
ja
decb
dec
xchg
or
dec
jns
imul
jb
das
add
and
xchg
sbbb
xlat
sbb
pop
mov
enter
arpl
iret
dec
lret
ss
add
mov
xchg
sbb
jecxz
xor
jmp
data16
movsb
test
push
pop
mov
cmp
mov
leave
cmpsl
lock
add
arpl
imul
das
mov
xor
mov
adc
out
fnstcw
cmp
push
xlat
pop
nop
inc
push
movsb
fistpl
fs
insl
arpl
dec
inc
xor
add
sub
cmp
out
ficoml
ljmp
push
out
jl
inc
adc
adc
inc
push
outsb
cmp
je
pusha
or
add
mov
inc
movsb
jns
or
je
xlat
adc
mov
ss
or
aaa
push
jae
popf
ds
je
xchg
es
dec
lea
sahf
inc
jl
sti
movl
les
out
push
in
outsl
imul
xor
jb
mov
js
push
dec
cmpb
xchg
int
mov
cmp
sub
adc
xchg
pushf
test
out
mov
pop
pop
repnz
mov
adc
pop
lock
out
js
jge
enter
add
repnz
in
xor
or
jnp
pop
ds
push
andl
mov
mov
mov
mov
push
push
mov
int
stc
mov
in
jg
mov
subb
ret
imul
inc
add
test
rol
test
push
adc
iret
pop
loopne
adc
and
stos
pop
inc
or
xchg
sbb
adc
ret
mov
ds
dec
and
mov
xchg
mov
inc
movsb
mov
add
dec
xchg
mov
rcrb
inc
sub
and
mov
inc
fildll
cmpsb
fisubs
jo
dec
rolb
mov
ja
cwtl
sub
loopne
inc
cli
divl
or
aaa
jae
xor
or
jmp
inc
sub
sub
fwait
sbb
outsl
mov
gs
lcall
mov
sub
les
jmp
xchg
xchg
sub
fwait
ds
pop
out
fwait
shrb
outsl
cmp
push
pushf
pusha
cmp
pop
andl
out
stos
cmp
push
and
arpl
adc
repnz
in
repz
sub
pop
mov
aas
aam
in
fwait
add
stc
iret
mov
jae
push
lock
pop
push
jmp
xor
mov
pushf
xchg
sbbb
in
outsl
and
xor
sbb
xchg
test
mov
mov
cmp
add
addr16
push
and
or
inc
cmp
int3
cmp
repz
insl
pop
gs
hlt
fxch
inc
add
inc
fistps
mov
loopne
push
movl
jg
jmp
sub
inc
loopne
and
loope,pt
push
push
push
mov
pop
dec
stos
mov
adc
sbbl
loope
je
jp
mov
and
sbb
or
outsb
mov
std
icebp
inc
and
cmp
pop
sub
jmp
pushf
or
mov
rorb
adc
lods
jno
mov
push
bound
and
cmp
cmp
jmp
cmpsl
add
push
mov
adc
fwait
jbe
dec
dec
mov
or
jl
imulb
xor
dec
xchg
or
insl
pop
sbb
jp
das
in
mov
inc
test
in
sahf
xor
loope
xchg
leave
xor
cli
popf
xlat
xchg
sub
fnstenv
pop
jge
or
inc
xchg
xor
mov
adc
out
dec
sub
out
pop
sbb
movsb
bound
mov
notl
clc
jo
mov
or
and
out
movsl
insl
pushf
ljmp
rcrl
stc
les
aas
repz
mov
fidivrl
push
sub
and
pop
xchg
pop
xor
mov
fucomip
inc
mov
jmp
or
inc
das
mov
fimuls
sahf
mov
adc
fisttps
push
xchg
jno
or
jb
push
xchg
jmp
add
es
jg
movsb
hlt
jmp
push
imulb
das
pusha
inc
shrb
sar
outsb
mov
xchg
cmp
adcl
or
mov
push
jo
xlat
clc
xchg
aaa
ja
push
jp
ljmp
pop
add
pushf
pop
jecxz
cmp
or
test
sub
scas
mov
enter
add
int3
rcr
dec
jns
mov
js
aad
es
ss
pop
or
lea
test
leave
fidivl
nop
test
orb
cld
scas
ror
mov
movsl
movsb
inc
outsl
pop
inc
popa
push
nop
and
ljmp
cltd
test
lea
mov
add
les
mov
pop
lea
jle
dec
das
lret
xor
std
incl
in
hlt
inc
pop
adc
jne
dec
sar
dec
insl
mov
push
cmp
cmp
mov
jl
pop
lea
leave
cmp
mov
insl
inc
lcall
js
dec
mov
int3
adc
addr16
js
mov
je
push
jo
inc
mov
push
adc
rcll
and
scas
icebp
cli
ss
sub
es
repz
gs
out
sbb
dec
xor
jae
imul
or
inc
xor
lds
js
push
popa
repnz
lock
sbb
xor
stc
rcl
dec
les
cmp
int3
int
cmp
xor
mov
or
loopne
or
out
push
fstpl
gs
adc
stos
push
aad
iret
push
inc
adc
ja
hlt
pop
add
faddl
dec
xor
push
xchg
adc
sub
mov
ret
adc
jnp
and
push
add
gs
xlat
pop
shll
jo
cld
xchg
pop
repnz
mov
adc
mov
sub
test
ss
out
push
repz
aam
in
dec
mov
imul
mov
loop
mov
loope
jno
or
adc
daa
or
xchg
mov
pop
lret
fildl
cmp
xor
push
movsl
nop
push
mov
or
pop
cmp
or
mov
adcl
jmp
jnp
mov
inc
xor
ja
sarb
mov
lds
push
jb
das
into
push
mov
pop
sbb
mov
and
add
sahf
int3
loop
cmp
es
data16
cmp
fdivrs
fdivr
mov
in
pxor
or
cld
rorb
xchg
in
ja
lret
adc
and
xor
dec
out
mov
xchg
push
mov
inc
pop
rolb
pop
js
stos
cmp
mov
pop
adc
sbb
sbb
push
fs
rorb
pop
mov
mov
xor
repnz
popf
jge
jo
add
sarb
jno
sbb
mov
lret
cmp
pop
mov
lret
ljmp
fistpl
xchg
test
xlat
mov
stc
mov
les
scas
arpl
xchg
outsl
mov
sbb
inc
inc
icebp
sti
in
push
inc
fstp
cmp
repnz
sbb
mov
jge
mov
mov
aaa
jno
mov
cmp
rorb
mov
aam
in
andb
xor
test
mov
hlt
setp
sarb
or
xchg
orb
outsb
sahf
lahf
cmpsb
dec
orb
pop
jecxz
push
je
jge
or
roll
ss
add
rolb
mov
sub
xchg
int3
add
shrb
insl
in
popa
jo
jg
jg
cmp
adc
cmc
int
mov
mov
std
dec
ds
imul
mov
push
test
pusha
outsl
scas
sbb
ljmp
pop
xor
push
cmp
in
dec
and
mov
jne
xor
movsl
shll
or
add
add
outsb
push
xchg
jns
je
cmovo
lds
loop
movsl
xor
loop
movsl
pusha
add
cmp
test
xor
imul
je
cmp
int
or
loop
pop
fbstp
sub
adc
outsb
pop
inc
pop
out
and
push
sbb
adc
push
fstl
xchg
adc
mov
mov
lods
loope
rol
add
dec
and
aam
jg
add
xchg
pushf
in
xor
mov
hlt
pop
mov
js
stos
xlat
daa
push
xor
xor
and
pop
mov
fsubs
sti
dec
mov
aaa
jbe
std
out
cltd
pop
ljmp
xchg
mov
sbb
mov
mov
mov
mov
cltd
dec
mov
push
arpl
and
daa
test
filds
rcr
cmp
dec
in
xchg
fcoms
and
or
sub
mov
push
mov
jmp
pop
push
mov
lods
mov
or
cmc
cmc
add
xchg
and
arpl
adc
or
or
mov
ja
and
cmpb
arpl
in
push
push
sbb
mov
pop
fwait
aas
mov
das
and
sub
xorl
inc
repz
mov
andl
mov
in
or
ret
cmp
sbb
and
mov
out
fmulp
rorl
cmpsl
mov
test
or
or
out
mov
int3
mov
insb
lret
mov
hlt
xor
sbb
out
xor
ljmp
call
addr16
fildl
bound
cmp
pop
aas
cli
lcall
popa
je
push
cli
mov
mov
mov
mov
xchg
inc
mov
lahf
jb
mov
test
rcr
pop
cld
push
hlt
std
in
pop
pop
insl
mov
imul
adcb
mov
fsts
nop
jno
xchg
sub
stos
mov
xchg
stos
dec
jne
dec
clc
lret
popf
jnp
cmc
iret
fwait
mov
mov
jmp
pop
hlt
jge
sbb
mov
out
pop
je
arpl
push
xchg
int
sub
adc
or
imul
xchg
pusha
ss
pminsw
rorl
xchg
daa
int
rolb
add
jnp
adc
fwait
repz
sub
fisttps
cmp
fistps
out
inc
sbb
in
jl
pop
iret
data16
mov
adc
test
cmp
popf
ficoml
out
scas
sub
lods
pushf
das
sbb
int3
and
lods
inc
cmpsl
aam
adc
es
inc
and
dec
ret
clc
cli
jb
icebp
xor
lea
add
pop
mov
dec
adcl
jns
or
repz
pop
loop
or
aad
test
sub
or
xchg
sub
jmp
shll
notl
sbb
movsb
mov
fldl2e
add
cld
pop
push
cmp
out
push
inc
sub
dec
jne
icebp
movsb
dec
jge
std
jl
loopne
into
mov
stos
push
pop
sbb
stos
inc
aaa
ss
out
fcoml
sub
jp
pushf
jns
in
inc
je
cs
insl
jb
mov
mov
out
mov
test
pop
cli
das
addr16
mov
sub
mov
gs
jmp
inc
addr16
sahf
loopne
fisubrl
inc
rorb
aas
or
in
or
sub
stc
jp
mov
in
sub
aas
mov
cmpl
xor
cltd
jno
xchg
mov
mov
jnp
stos
jb
orl
cli
movsl
test
adc
testl
or
fcomi
ror
pop
mov
incl
in
lret
cld
mov
lret
or
in
mov
std
or
inc
sti
aam
loopne
jns
lret
pushf
lcall
js
fdivs
adc
inc
mov
xor
shl
lods
mov
and
pop
jo
lock
ljmp
rorb
cmc
cli
mov
dec
cmpsb
das
invd
jl
out
inc
lahf
sbb
mov
cs
loopne
mov
or
inc
pop
lds
inc
loopne
lods
jecxz
jae
sarb
push
mov
insb
inc
arpl
cmp
push
outsb
stc
into
ljmp
inc
and
or
sbb
rcrb
ret
sarl
sbb
mov
jl
je
fbstp
ss
fistpll
lret
xchg
add
mov
mov
mov
ja
fcomps
mov
roll
movsb
iret
lret
arpl
shl
daa
mov
pop
lcall
stos
in
insl
sbb
test
jo
outsb
mov
mov
lcall
imull
stc
mov
jbe
ret
adc
and
sub
fsubrs
loop
cmpsb
push
jl
outsl
mov
sar
fwait
in
pop
sub
pop
jae
test
pop
je
mov
lcall
gs
lods
mov
imul
cld
pop
cmp
xchg
ss
lret
rolb
adc
cmp
sub
and
jecxz
lret
xlat
cmp
fildll
shl
mov
shrl
mov
dec
aad
pusha
dec
popa
outsb
shlb
nop
pop
mov
cs
xor
faddl
rol
rcrb
pop
cmc
pusha
push
mov
out
cs
dec
fstpl
or
jl
xchg
fnstcw
scas
push
call
xchg
jle
pop
mov
movsl
ficoms
ret
jl
dec
dec
and
test
sbb
jbe
jg
sbb
and
shll
push
jne
cmp
aad
push
mov
mov
aaa
mov
jns
pop
mov
in
scas
mov
and
ljmp
adc
icebp
int
and
push
lods
aas
and
dec
cmp
sbb
cli
pop
mov
mulb
repz
push
insb
imul
sub
roll
stos
repz
or
imul
mov
bound
aas
loop
dec
cmp
mov
xlat
fldt
or
add
movsl
std
jp
mov
xor
push
stos
lret
dec
add
inc
xor
negb
cmpl
xchg
out
ret
sbb
shrl
into
fiadds
jg
pop
loope
sub
sti
in
xor
repz
dec
xor
stc
fcoms
pop
pop
cmp
cmp
and
out
scas
popf
popa
scas
xchg
push
testb
mov
dec
cwtl
je
pop
daa
in
shr
in
mov
jne
xor
mov
cmpsb
and
lahf
ret
adc
mov
adc
inc
call
jno
inc
int
rorb
or
sbb
movsb
arpl
cmpb
shl
push
sbb
cltd
outsl
xchg
fstpl
hlt
rcrl
pop
nop
incl
push
mov
into
repnz
cmc
jno
dec
les
rclb
imulb
test
cmp
jmp
fiaddl
sub
jae
sub
pusha
stos
inc
add
mov
mov
pop
dec
sub
imul
lds
dec
xchg
xchg
mov
mov
mov
hlt
xlat
and
sbb
out
ds
std
aad
sbb
orl
ljmp
negl
fcmovbe
add
addr16
mov
inc
movsl
movsb
dec
sbb
mov
rol
int
ret
add
fwait
cmpl
sbb
xchg
movsb
jns
cltd
lds
inc
test
imul
js
dec
and
jecxz
lock
mov
fiaddl
jae
mov
cmpl
mov
mov
fsubl
add
jb
aas
mov
out
fldl
mov
pop
dec
dec
popf
cltd
or
lea
or
xchg
rorl
out
sbb
sti
stos
push
jecxz
mov
hlt
cmp
hlt
sub
fimuls
jmp
mov
jo
out
push
shlb
and
clc
in
sbb
es
stos
stos
jge
insl
orl
pop
jbe
in
fidivl
cmp
lret
sub
add
cld
sub
push
pop
or
repz
enter
clc
ret
pop
xchg
test
rorb
jns
fucomip
dec
shrb
cmp
cmp
loopne
repz
jecxz
ds
adc
push
mov
adc
pop
inc
lahf
mov
cmp
stos
xchg
adc
pop
jns
mov
pusha
popf
fcmovu
mov
stos
mov
cmc
pop
sahf
add
test
gs
cmp
cmpsb
inc
pop
aas
mov
ffreep
jne
xor
insl
pop
sahf
cmpsl
push
sbb
mov
push
pop
fisttpl
sbb
hlt
sbb
sbb
out
mov
push
in
les
rorb
addb
cmpb
loopne
gs
jns
int
es
sub
movsb
lret
addl
mov
and
pop
or
addr16
popf
rcll
leave
bound
dec
xor
cld
push
push
and
test
bnd
or
in
cmpsb
subl
xlat
dec
outsl
mov
jne
xchg
jbe
xchg
test
sub
dec
loopne
mov
mul
push
enter
mov
addr16
imull
xchg
push
call
in
sbb
in
bound
pusha
mov
inc
adc
push
out
add
stos
imul
jmp
daa
jmp
out
sub
test
imul
xchg
xchg
enter
imulb
lods
fwait
in
fdivs
and
cmp
sbb
ljmp
and
in
push
or
mov
inc
sbb
lahf
test
cmp
ret
or
fidivs
bound
push
dec
sbbl
sub
out
push
outsb
mov
shlb
dec
flds
std
mov
push
aaa
push
je
fsts
sub
fisubl
int
daa
xchg
cli
lods
or
jns
std
jbe
jle
out
dec
icebp
jg
fcomps
xor
mov
push
mov
scas
push
and
mov
dec
shlb
xchg
aam
sbb
dec
jo
stos
idiv
ss
jmp
cmp
loope
int
rcr
test
inc
fsts
stos
mov
addr16
pop
adc
sti
mov
dec
out
iret
adc
lea
pop
pop
push
adc
push
fsubrl
aam
jns
pop
les
adc
repz
shl
and
fidivs
and
pop
or
pop
ficoms
cmp
lahf
rclb
cmp
lds
jo
ja
xchg
cmp
pusha
mov
jp
movsb
lcall
xchg
inc
push
stos
or
daa
add
iret
and
icebp
or
call
es
fdivrl
xor
aad
mov
fwait
jg
pop
xchg
and
movl
jo
aam
fdivs
fdivr
addr16
movsb
insl
int3
lods
sub
or
add
mov
cmp
mov
xor
repnz
mov
mov
jp
inc
testl
pop
cmpl
cmp
cli
inc
int3
lahf
sbb
sbb
out
push
loope
and
cltd
sbb
fcoml
sbb
ret
pop
inc
or
inc
mov
and
mov
roll
pop
les
and
sub
jb
mov
cmpsl
mov
mov
fidivl
dec
mov
cmp
mov
fisttpl
repz
and
xchg
mov
mov
cmpsb
sub
dec
xor
mov
inc
dec
lock
shlb
lds
jp
add
loopne
movsb
xrelease
stc
pop
push
rorl
jecxz
xor
jae
inc
cwtl
iret
aam
and
aam
pusha
test
cwtl
pop
lds
rorl
shll
jno
add
inc
jle
repnz
lcall
dec
adc
loope
lods
push
inc
fistpll
jle
xor
movsb
or
dec
loope
xchg
ret
out
fnstenv
pop
jp
movsb
dec
icebp
int3
cmp
sub
ficomps
nop
lock
pop
cmpsl
int3
or
or
arpl
jge
push
jns
gs
mov
sub
aad
mov
pop
jno
inc
loopne
adc
test
imul
xorl
into
xchg
push
pop
adc
loop
cmp
sub
jns
pop
repnz
cmp
popa
and
repnz
xchg
dec
fwait
scas
imul
or
inc
adc
scas
pop
push
in
dec
xchg
iret
test
and
add
fnstsw
sub
mov
pop
movsl
xlat
inc
stos
scas
movb
insw
and
mov
sbb
xchg
sbb
adc
or
ss
xor
adc
test
add
mov
test
push
aaa
pop
pushf
stc
psubsw
fimuls
pop
sbb
rcr
push
les
xrelease
sbb
pop
out
xchg
ljmp
test
jp
or
mov
push
mov
jbe
lret
jmp
push
sub
iret
lahf
cmpsl
fldcw
int
out
cmp
push
in
pop
jns
xor
inc
scas
xor
adc
cmp
mov
test
xchg
pop
test
mov
mov
mov
mov
bound
cmp
aad
jnp
dec
loop,pn
sbb
pop
aad
movsl
add
and
cltd
mov
pop
jp
sti
push
out
jo
movsb
jge
sti
mov
loopne
jl
mov
out
sub
xchg
xor
cmpsb
mov
lea
out
scas
xchg
aad
mov
mov
iret
dec
or
call
ret
in
rcrl
leave
arpl
push
jno
faddl
jecxz
scas
lret
inc
push
xor
out
fiadds
jg
orl
pop
jmp
jp
mov
cmp
mov
in
pop
or
rorl
out
pop
xchg
hlt
fbld
scas
pop
or
or
and
sub
mov
xor
ja
repz
adc
dec
nop
outsl
and
lret
dec
fnstenv
jecxz
insl
scas
xchg
sub
stos
int
push
xorl
push
imul
insl
xchg
mov
cld
push
mov
dec
mov
jbe
pop
repnz
std
or
daa
stc
sub
xchg
call
inc
pop
jbe
mov
jmp
mov
loopne
push
in
and
inc
rclb
push
inc
cmp
popf
xlat
push
ja
aam
mov
aas
outsb
hlt
add
xor
jecxz
and
negl
aas
push
icebp
mov
xchg
out
repz
mov
cmp
test
xchg
inc
rcll
xlat
lret
jo
fimuls
pusha
sbb
adc
lock
hlt
mov
jne
jl
xor
and
stos
or
mov
imul
add
jne
adc
mov
cmp
and
sti
movsb
jns
popa
cmp
insb
jns
mov
icebp
dec
shrl
imul
mov
cmp
fimull
xor
notb
cmpsl
imul
jns
push
dec
jno
jo
lods
sahf
sbbl
lds
scas
xor
test
lea
das
in
stc
cli
sub
add
xchg
mov
pusha
cltd
movsb
adc
and
push
in
loopne
lock
mov
add
pop
cmp
data16
xor
add
xor
ja
das
or
in
cmc
fdivrl
mov
stc
jp
push
cmpsl
cwtl
push
jae
pop
dec
mov
insl
adc
scas
lods
push
jno
insl
out
xor
ss
jbe
lea
xchg
and
jle
in
js
mov
push
or
out
rcr
mov
int3
add
div
mov
jne
les
jge
enter
xchg
jge
or
jg
jno
pop
subb
mov
gs
xchg
in
xor
cmp
cmp
jle
push
or
cmp
mov
jno
xchg
inc
push
shr
fldt
sahf
add
mov
dec
sub
aas
or
mov
shrb
cli
mov
das
cmpsb
mov
inc
mov
mov
sbb
xchg
adc
or
push
fdivs
faddp
fistpl
idivl
mov
mov
mov
aad
mov
in
lods
mov
mov
xlat
lds
mov
icebp
mov
and
inc
rdtsc
mov
int3
loope
fwait
or
inc
inc
mov
cmpsb
idivb
sahf
push
inc
sub
mov
dec
pop
pop
out
and
mov
and
outsl
add
fisttpl
and
push
jae
cmpsb
shr
jno
mov
xchg
or
icebp
or
ja
push
xor
or
lret
std
sub
xor
pop
mov
in
cmp
iret
iret
cmp
xlat
jo
pop
int3
fisubs
add
aaa
fdiv
jns
jae
mov
lcall
mov
add
js
mov
ret
adc
and
or
iret
imul
jne
ds
jecxz
lahf
adc
sub
mov
fidivrs
push
xor
mov
cmp
std
clc
fdivrs
lret
add
cmp
add
sbb
in
fiaddl
xchg
xchg
cltd
dec
repnz
jns
or
cld
mov
pushf
push
aam
loope
jne
fmuls
out
xor
cmp
ds
jmp
cmpsl
fmul
push
mulb
out
lds
sub
dec
cmc
inc
mov
int
push
or
jge
ljmp
fldl
adc
pop
jns
addr16
mov
dec
sbb
and
jb
lods
mov
sbb
inc
test
cmp
icebp
xchg
arpl
xor
jnp
movsb
add
daa
scas
mov
sbb
aas
push
xchg
xlat
sub
jne
inc
aas
sbb
sub
sub
lock
stc
push
cmpsb
fdivrp
push
cmp
in
push
sbb
fwait
mov
pop
adc
dec
push
xchg
xor
cltd
or
test
loope
sub
xor
dec
aam
out
cmp
jmp
push
mov
sbb
inc
cmpsl
outsb
xchg
dec
test
fs
pop
jg
fstp
ljmp
add
mov
xchg
movsl
mov
out
adc
lea
rorb
mov
js
or
mov
and
push
jmp
das
testb
push
and
jg
fwait
cld
lods
add
pop
mov
aas
ret
pop
repz
clc
mov
iret
xchg
sub
jmp
jmp
cmp
test
mov
popf
jecxz
pop
lods
jo
mov
inc
jle
divb
iret
pop
or
fcoml
pop
inc
mov
cmp
iret
lahf
out
push
add
es
push
cmp
dec
outsl
jns
in
xor
jno
mov
outsb
xchg
iret
or
cmc
adc
call
ret
icebp
mov
pop
gs
mov
mov
mov
das
mov
dec
stos
outsl
push
aad
sbb
cltd
jl
mov
mov
push
das
dec
out
lret
inc
and
cmp
dec
adc
push
mov
adc
gs
je
mov
rcl
mov
xchg
mov
push
adc
ret
push
adc
ret
jp
sub
cwtl
aas
cli
cwtl
mov
jne,pn
inc
push
add
lea
repz
adc
adcl
xor
dec
adc
imul
dec
jmp
fs
xor
push
sub
ss
pop
mov
adc
and
xor
out
sub
xchg
inc
imul
mov
fstps
inc
mov
ljmp
loopne
push
dec
jmp
adc
xor
inc
xorl
xor
jecxz
mov
sub
ljmp
jo
dec
insb
pop
mov
lock
lret
shrl
inc
cli
pop
pop
pop
xor
call
sub
push
ss
int
pop
nop
mov
repnz
mov
addb
ja
lret
jmp
sti
add
xlat
push
loope
add
cs
cmc
mov
xor
sarb
pop
add
mov
push
mov
mov
adcl
test
outsb
mov
mov
jb
jne
sub
lret
test
jecxz,pt
in
fiadds
dec
sbb
mulb
fs
add
inc
outsl
inc
lahf
aaa
mov
fwait
nop
push
dec
sub
out
in
testb
mov
sbb
push
push
adc
xchg
or
je
je
xlat
ret
adc
adc
cmp
mov
clc
addr16
add
clc
add
sub
adc
cmc
stos
sub
imul
es
mov
fsubrl
out
push
test
push
push
inc
ja
adc
hlt
jmp
lcall
divps
push
sbb
lods
push
int3
fwait
jp
cmp
je
pop
fcmovnb
xor
sub
pusha
push
into
scas
stos
sbb
jbe
out
and
mov
mov
xor
inc
pushf
ficoms
loope
xchg
mov
sub
in
scas
cmp
sahf
sbb
arpl
in
shll
xchg
or
sbb
mov
mov
and
movsb
fdivrl
xor
xor
stos
sbb
stos
sysret
mov
test
mov
lods
sbb
cs
or
xor
aas
mov
movb
or
mov
loope
cmp
jmp
mov
cwtl
xchg
or
sbb
pop
pop
push
xor
into
outsb
mov
add
mov
in
xor
pop
cmpsl
sbb
aam
aam
xchg
or
sbb
pop
pop
lds
sti
dec
ds
inc
jge
leave
loop
jl
pop
js
sub
pop
mov
ljmp
iret
mov
ljmp
push
pusha
inc
push
lock
std
mov
inc
out
loope
push
mov
or
out
dec
cwtl
rcrl
mov
xlat
testl
push
sbb
mov
ljmp
rcl
fnstcw
pop
mov
cmp
sub
xor
inc
clc
add
outsb
push
and
lcall
dec
je
and
loopne
das
jmp
push
fcompl
leave
xchg
lret
cmpsl
adc
and
ja
adc
divl
mov
push
sub
adc
mov
add
cs
pop
jmp
sahf
fbstp
scas
stos
xchg
push
mov
aaa
cltd
je
mov
stos
jle
adc
insl
xchg
push
pop
aam
movb
into
push
push
mov
add
dec
push
push
daa
cmc
mov
push
xor
test
mov
dec
dec
into
repz
dec
adc
mov
shrb
xor
int3
mov
inc
dec
inc
je
push
cmpsl
xchg
repz
je
ss
and
lods
pop
jle
lea
das
dec
outsb
test
sbb
lret
dec
and
jns
jecxz
mov
mulb
lock
dec
lahf
xchg
pop
neg
lcall
xor
adc
lods
sbb
fbld
sahf
add
popf
mov
sub
clc
mov
pusha
loope
fstl
pop
inc
push
mov
jmp
and
mov
aad
daa
xchg
inc
adc
out
mov
les
xchg
fidivrs
lcall
mov
repnz
sub
or
js
into
mov
leave
inc
sbb
pop
sahf
push
pop
test
push
daa
jp
and
fcompl
icebp
pop
push
dec
xchg
xchg
into
out
scas
pushf
loopne
jo
or
dec
pop
shll
clc
adc
mov
mov
dec
call
dec
inc
or
cwtl
mov
pop
pop
xlat
xchg
sbb
fiadds
loopne
lea
xor
mov
icebp
push
jno
out
int3
inc
push
int
std
pusha
popf
jb
in
les
xchg
or
mov
jb
adc
mov
mov
cmpsl
stc
xor
mov
mov
fsubr
int3
dec
aam
pop
sbb
test
dec
shll
jmp
inc
movsb
nop
nop
xchg
xchg
rorb
inc
xor
aas
repnz
add
mov
andl
sarb
dec
or
mov
mov
inc
mov
pusha
inc
mov
lret
pop
adc
or
cmp
fistpll
shrl
xchg
outsl
add
aad
xlat
add
lcall
fwait
int3
testl
mov
lock
lret
fists
insb
nop
pop
orb
sub
outsl
aam
test
cli
imul
push
xor
or
popa
call
pop
loopne
sbb
mov
push
push
mov
sbb
inc
enter
out
dec
repnz
out
into
push
inc
mov
mov
imul
push
sbb
scas
int3
out
sahf
mov
popf
cmp
daa
ljmp
nop
loope
sbb
mov
push
hlt
ds
icebp
push
rcrl
lods
mov
jb
cs
jns
pop
and
mov
loopne
sub
ja
mov
rcll
sti
pop
pop
scas
mov
je
or
imul
out
and
add
push
cmc
mov
fnsave
loop
push
sbb
shl
add
jmp
jg
adcl
inc
inc
mov
jo
cmpsl
js
in
mov
cmp
arpl
sbb
inc
push
lea
cmp
cmp
or
pop
cmpsb
pop
pop
lods
xor
mov
pop
lcall
loope
push
sbb
cld
mov
jnp
jnp
test
sti
aad
insb
add
out
jns,pn
jle
popf
outsl
dec
mov
lods
ret
xor
lea
stos
rcrl
add
lcall
ss
bound
xorl
out
jne
mov
imul
sarl
outsb
jo
push
inc
or
call
jne
xchg
or
sbb
in
cmp
cmp
jp
es
mov
cmpb
cmp
xchg
adc
cld
inc
jbe
lods
or
stos
ja
data16
fcomi
xor
mov
popa
jle
es
sbb
sbb
jmp
pop
test
dec
xor
js
into
sub
aad
rclb
in
out
jnp
cmp
push
add
mov
test
hlt
dec
mov
ficomps
jo
aaa
pop
push
stos
pop
iret
cli
fists
fildll
push
pop
repnz
cmp
push
shl
loope
out
xlat
notl
fs
add
pop
into
enter
in
aas
pusha
push
pop
and
iret
in
jp
cmp
sub
mov
in
sbb
pop
leave
xchg
xor
xchg
shlb
daa
cmpl
imul
inc
ds
xor
lea
jno
data16
clc
push
cs
mov
rclb
test
mov
lcall
xor
jno
cmp
xor
push
lods
add
shlb
xor
das
dec
mov
stos
mov
mov
xchg
jle
subl
adc
int3
lds
aas
out
jae
popa
push
inc
push
decl
dec
mov
ja
in
int
frndint
jle
and
inc
adc
and
int
lods
sbb
pop
mov
fists
push
cmp
out
aam
push
lods
loopne
pop
mov
xor
xlat
inc
out
loope
cmp
aas
pushf
push
sub
gs
cmp
divl
jl
push
mov
jns
inc
gs
dec
or
add
jecxz
addr16
xchg
or
test
sti
mov
das
test
inc
jmp
sbb
inc
std
scas
mov
mov
cmp
xlat
pop
lods
xsaveopt
popf
or
js
push
and
addr16
xchg
sub
addl
push
in
adc
lret
popa
nop
pop
adc
fisubrl
rclb
daa
mov
mov
and
jle
xchg
cltd
mov
aam
jns
dec
hlt
cmp
fstps
mov
test
mov
aaa
and
gs
rcr
pop
ljmp
aam
cmp
dec
aas
ret
pop
leave
sub
xor
mov
xchg
dec
out
iret
pop
xchg
mov
imul
scas
int3
jmp
je
pop
shrl
daa
dec
dec
test
pushf
repz
sub
adc
mov
clc
jne
sti
and
mov
jge
push
std
cmp
cmp
pop
jne
fnstsw
stos
stc
ffreep
data16
iret
lret
in
in
stc
pop
adc
int3
sbb
mov
dec
stos
mov
push
clc
cmpsb
push
inc
push
inc
fsts
dec
in
push
or
lods
adcb
popf
lret
negb
in
push
push
shll
data16
mul
add
mov
sub
dec
test
lcall
pop
rcl
cmp
out
pop
cmpsb
call
roll
cmpsl
outsb
mov
adcl
jle
mov
xchg
mov
insl
into
fcmovbe
inc
cs
out
mov
jmp
jnp
xorl
adc
cs
or
xor
out
out
sbb
mov
es
das
mov
lahf
jl
lahf
mov
inc
or
cmp
outsl
addb
xchg
jp
mov
sub
lock
push
lds
pop
and
pushf
fstpt
ss
push
xchg
dec
push
insl
push
fcoms
into
mov
stc
or
add
adc
sub
sbb
ja
rclb
jp
lods
lea
mov
dec
adc
add
mov
inc
inc
pop
mov
aas
loop
cmpsl
rcrl
and
mov
cmp
jl
push
loope
imul
into
in
dec
fldt
frstor
lret
ds
das
mov
sbb
dec
mov
xchg
dec
pop
incb
push
sti
and
inc
dec
jo
push
insl
push
push
adc
ret
outsl
hlt
inc
xchg
lods
jns
mov
test
push
out
in
cmp
pop
push
pop
jne
daa
lret
and
sbb
std
and
dec
subb
inc
inc
mov
je
lcall
mov
fwait
push
test
inc
scas
ljmp
inc
ss
pushf
cmc
imul
push
sub
cmp
int3
sbb
sbb
cmp
repz
fdivp
sbb
adc
mov
lahf
insl
mov
lahf
stos
into
cs
and
push
add
push
jmp
enter
sub
loop
stos
mov
mov
push
add
ret
stos
adc
adc
rolb
ljmp
and
push
adc
mov
aam
sbb
leave
ret
jb
xor
cmp
mov
shl
in
sbb
mov
mov
push
lock
popf
out
xchg
into
mov
adc
pop
fldt
xchg
fstl
adc
sub
sbb
je
lods
out
pop
or
call
dec
add
popa
pop
sub
les
or
fiadds
sti
insb
gs
sbb
mov
js
mov
xchg
pushf
dec
imull
out
jno
pop
add
aam
push
mov
adc
cs
mov
pop
int
mov
push
add
cmp
es
pop
sarl
or
sbb
leave
fdivl
cld
add
js
push
mov
imul
mov
mov
cld
and
add
pushf
pop
xor
mov
pushl
je
popa
pop
pusha
mov
movsl
push
popa
or
jbe
sub
add
daa
cmp
movsl
jo
in
xchg
mov
push
test
push
testl
push
sub
xchg
mov
pop
outsb
nop
lods
enter
fbld
push
fstpl
mov
add
and
push
cmp
adc
fadd
xchg
mov
repnz
mov
push
add
out
dec
adc
mov
popa
shlb
and
cld
addr16
mov
sbb
insl
daa
jae
and
lcall
into
icebp
jl
data16
enter
sbb
inc
mov
scas
mov
jl
aad
adc
jb
jge
jle
adc
add
sbb
stc
push
jp
inc
mov
cmp
sbb
test
ljmp
xorl
push
jge
add
jmp
cwtl
fimuls
cld
cs
cmc
and
push
aam
ss
jno
imul
iret
add
pop
jge
imul
cmp
test
out
scas
dec
sbb
mov
cld
jle
fdivl
test
loop
jge
int3
test
int3
shll
sbb
add
xor
ror
std
or
sbb
jo
insb
lret
fnstcw
sub
data16
jo
call
cmp
xchg
dec
xor
shll
out
dec
aas
mov
mov
icebp
push
cmpb
adc
loop
faddl
jo
or
arpl
scas
daa
cmp
in
cmp
adc
mov
jb
dec
sub
cmpsl
push
into
cltd
jge
adc
aad
in
stos
dec
cmc
aaa
mov
mov
sub
ret
xchg
jns
adc
incb
pop
lds
push
iret
loopne
mov
xlat
add
dec
out
sub
insb
bound
call
jnp
jle
mov
sub
outsb
xchg
faddp
inc
mov
push
add
or
fsqrt
dec
jae
andb
xor
add
xor
or
in
dec
cld
ss
or
hlt
fwait
dec
in
add
sbb
das
pop
mov
jecxz
sbb
shll
sarb
in
and
dec
sub
aam
inc
cmp
sbb
movsl
cwtl
insb
mov
mov
cmp
fsts
xor
mov
inc
sbb
or
es
mov
ljmp
lea
xor
icebp
out
xchg
dec
movsl
jns
aad
push
clc
push
or
fdivrl
fnstenv
jns
arpl
in
rcrb
jo
int3
test
push
ret
popf
fwait
rcrl
ljmp
orl
cmp
dec
cltd
movsb
insb
push
movsb
sub
lds
sub
adc
push
call
stos
jbe
stos
cmp
lcall
push
in
stc
insb
inc
aad
fdiv
std
sub
fdivs
and
ja
mov
or
imul
adc
imul
xchg
mov
mov
shr
or
daa
loope
imul
xor
add
les
mov
inc
cmp
and
ss
lcall
andl
inc
add
lea
sbb
sbb
aas
stos
mov
xor
sbbl
sub
push
shll
xchg
jns
fcmove
stos
fstpl
cmp
aas
loop
idivb
or
loop
xchg
sti
push
popf
sbb
jge
jno
xchg
repnz
jge
jne
test
sbb
mov
push
test
jmp
or
les
xor
jmp
lods
push
sbb
jns
mov
xor
mov
push
mov
je
dec
inc
push
sbb
jns
pop
shl
mov
lcall
sub
cs
fs
jecxz
fisttpl
fimull
cmp
mov
sbb
shr
ret
aam
mov
enter
nop
xor
pop
js
psubq
mov
pop
popf
psrld
ja
mov
or
nop
int
rorl
mov
adc
xchg
push
das
push
rcll
sti
mov
andl
stos
pop
and
mov
sub
pop
in
xor
mov
mov
rcrb
pop
mov
fwait
out
jns
mov
aaa
mov
xchg
lret
lcall
push
rcrl
vphaddwq
imul
mov
cmp
test
orb
roll
or
lahf
mov
stos
pop
out
sahf
fnstenv
xchg
xchg
inc
iret
xchg
pop
inc
cmpsb
jmp
mov
push
movsb
clc
cmp
sahf
sub
xor
shlb
dec
arpl
jge
popa
mov
sbb
sub
push
ljmp
mov
cmc
es
mov
push
mov
xchg
fisttps
xchg
inc
inc
add
pusha
lds
xchg
mov
test
ficoms
jns
sar
je
inc
test
adc
out
and
pop
insb
cvttps2pi
jmp
xor
aad
sbb
sbb
imul
out
aam
test
ficompl
push
pop
cmpsb
mov
inc
stos
adc
mov
xor
jmp
test
push
cmp
dec
mov
stc
jns
mov
or
pop
fwait
scas
dec
fstps
aas
into
cmp
mov
cmpsb
mov
inc
es
mov
sbb
loope
cmp
aam
movsb
movsb
add
js
adc
sbb
insl
repz
mov
add
mov
mov
dec
mov
sbb
out
and
fs
cmp
pop
jl
jp
mov
loopne
xchg
aad
std
push
sub
inc
fsub
fs
pop
nop
sub
icebp
mov
cmpsl
ds
sahf
pop
in
jns
popa
mov
dec
jmp
cmpsb
mov
in
mov
repz
cmp
ds
jl
aaa
inc
in
inc
fnstenv
push
push
push
jg
in
and
pop
ljmp
sbb
adc
insb
aaa
movsb
xlat
adc
mov
adc
test
push
xor
push
icebp
scas
in
sub
les
test
adc
push
jl
cmp
out
or
ror
insl
push
adc
lret
scas
xchg
aam
dec
mov
adc
outsl
mov
in
sbb
int
lcall
sbbb
stc
add
scas
sbb
jo
movl
fidivs
and
pop
mov
and
out
insl
mov
jne
pop
pop
ret
lcall
out
ja
es
in
jae
cmp
scas
jns
mov
and
sub
pop
mov
and
ja
test
test
jp
rcrb
jp
adc
jne
pop
adcb
sub
rcrl
pop
insl
das
inc
mov
mov
xchg
test
xchg
adc
add
xor
test
xchg
in
data16
jo
mov
cmp
mov
outsb
lods
and
clc
adc
adc
push
cmp
xchg
jecxz
lock
or
lods
fcompl
add
push
and
mov
movsl
dec
rorb
inc
popa
pop
push
push
pop
and
ja
add
or
add
inc
xchg
push
or
pop
mov
add
xchg
sbb
addr16
dec
push
push
daa
neg
push
lock
push
hlt
xor
cltd
test
ljmp
cltd
mov
fs
pop
cli
int3
incb
pop
cld
pop
lcall
fcoml
xchg
shl
and
rorb
lret
mov
ss
enter
lea
cmp
xchg
mov
mov
xor
mov
and
fsts
or
into
inc
push
xor
jno
stos
sub
xor
shl
pop
adc
insl
inc
outsb
mov
sub
jmp
sti
adc
int
arpl
and
mov
enter
mov
lcall
test
pop
add
add
aam
push
loope
pop
adc
cwtl
dec
push
and
cmp
fwait
sahf
out
loopne
push
add
std
dec
dec
xor
lods
mov
inc
sahf
push
mov
pop
push
sbb
lds
sub
decb
outsl
cmp
lods
inc
scas
fsubl
fstpl
dec
mov
addr16
jl
jb
icebp
mov
or
ficomps
mov
pop
cmpsl
dec
inc
jecxz
arpl
or
movsb
lods
xchg
into
inc
cmc
xor
movsl
ss
pop
inc
stos
cmpsl
xchg
push
in
lods
fldl
aad
push
inc
int
dec
sub
es
mov
mov
mov
mov
sub
and
aad
xorb
inc
cs
mov
mov
test
out
mov
loop
pushf
push
decb
mov
lods
inc
int
pop
inc
cmpsb
jnp
or
push
xor
xor
mov
fcomps
movsb
ret
cwtl
adc
jle
sti
cmp
xchg
hlt
in
into
xchg
pushf
ljmp
leave
inc
dec
sbb
fadds
dec
in
and
ja
mov
adc
sahf
loop
out
dec
ja
mov
iret
in
ljmp
cmc
stc
fildl
pop
fidivrs
pop
xchg
aas
inc
arpl
jmp
jno
fs
std
jmp
iret
push
add
shlb
addr16
mov
aad
sbb
push
mov
and
push
mov
mov
clc
pop
aad
sub
push
int3
and
push
xchg
add
shrl
pop
jg
push
sub
xchg
pop
jbe
es
and
ja
sub
pop
sbb
push
inc
inc
add
mov
ret
xchg
int3
lahf
aam
xor
imul
into
inc
or
scas
outsb
push
push
mov
or
jmp
mov
jmp
jle
sub
jmp
test
fs
movsb
in
add
sahf
push
pop
dec
mov
xor
mov
cmp
pusha
mov
insl
push
dec
lock
rcll
xor
sbb
rorb
push
pusha
jne
push
cld
les
test
cmc
lds
adc
dec
popf
add
scas
shrb
insl
dec
xor
aaa
stc
dec
imul
lret
in
out
and
push
pop
push
or
push
lds
les
inc
in
ds
stos
lea
mov
cwtl
add
jmp
sub
mov
inc
test
js
arpl
xor
cs
xchg
and
fisttpl
mov
sub
fstl
xchg
sbb
ror
and
mov
jb
cltd
inc
push
push
xor
sub
scas
mov
jge
gs
pop
shr
je
dec
pop
pop
or
jp
in
sahf
ret
sbb
jb
add
aad
xchg
mov
xchg
addr16
arpl
out
stc
lret
sbb
push
mov
sub
pushf
daa
in
add
arpl
js
int3
cmp
push
mov
pop
addb
ljmp
leave
inc
pop
dec
and
pop
pop
sarl
sbb
inc
mov
leave
add
cmp
jmp
push
outsb
stos
cmp
or
stos
push
mov
cmpsl
jmp
mov
sub
popa
mov
mov
sbb
jmp
mov
icebp
cmp
mov
inc
loope
movsb
ljmp
imul
jmp
jle
mov
jb
or
pop
stos
out
stos
inc
hlt
push
mov
jns
dec
jno
mov
push
pop
test
pop
into
mov
shll
lret
and
stos
xchg
xchg
call
enter
lods
or
pop
sbb
jecxz
ja
adc
inc
sub
push
inc
lret
xor
stos
mov
dec
and
pop
lret
repz
sahf
xor
and
ret
mov
xchg
adc
cmpsb
xchg
xor
push
jo
lods
popa
push
sub
mov
pop
inc
adc
in
lea
test
push
ret
stos
jnp
or
dec
movsl
xlat
add
lret
loope
test
cwtl
and
mov
out
jno
test
cmp
mov
rol
sbbb
dec
test
ret
jns
dec
dec
pop
nop
aas
xlat
pop
std
cli
and
es
sbb
shll
cwtl
or
or
mov
popf
adc
out
lock
push
lret
cs
xor
rorb
push
inc
mov
add
pop
es
lahf
cmp
jo
sahf
shl
fadd
movsb
out
xchg
mov
pop
scas
sub
pusha
adc
leave
mov
sbb
repz
add
xor
fs
adc
push
add
or
data16
movsl
imul
je
aam
clc
sub
pop
icebp
xor
add
mov
dec
aas
insl
ss
aam
mov
outsb
hlt
sbb
xchg
xchg
shrl
sbb
dec
push
rcl
cmp
xlat
int
fcompl
dec
mov
lcall
gs
bound
jns
jmp
bnd
mov
mov
push
cmc
popa
jno
inc
inc
or
mov
or
xchg
push
cmp
inc
insb
sub
xchg
push
icebp
das
jne
xchg
aam
sub
je
arpl
xor
int3
or
cmp
xchg
add
gs
xchg
mov
enter
mov
jp
hlt
arpl
sbbl
into
fcom
movsl
jecxz
push
stos
loope
incl
adc
add
stc
cltd
push
pop
jno
pop
fimuls
sahf
jbe
imul
inc
enter
push
sub
push
pop
mov
loop
adc
add
cmp
or
and
ret
xor
std
loopne
cmpsb
das
out
adc
cmp
int
or
jo
xor
and
xor
pop
xchg
xor
cmpsl
test
sub
pop
stc
aad
jmp
lcall
sub
jg
mov
inc
ds
and
dec
and
fists
fstl
das
jge
fildl
xor
mov
fimull
sub
test
hlt
cmp
sbb
inc
or
jo
sbb
aas
pop
fadd
stos
aad
or
mov
push
cmp
add
xor
or
ds
add
mov
cltd
push
mov
lea
dec
aas
xor
jp
pop
mov
pop
add
sbb
push
add
cmpsb
adc
push
incb
adc
addr16
xchg
push
jmp
mov
test
pop
mov
sub
dec
push
xchg
or
ds
inc
icebp
dec
pop
sub
pop
lods
loop
mov
sub
mov
ficoml
test
jae
mov
stos
shll
inc
jne
xchg
dec
jg
jno
cli
aam
add
adc
cmpb
ret
and
in
xchg
fwait
mov
mov
out
aam
int3
scas
sbb
outsb
popl
mov
data16
jbe
scas
cmp
jbe
stos
add
inc
pop
rclb
int3
or
jge
rcrb
xchg
hlt
pop
or
mov
add
or
sti
adcl
dec
popa
lret
add
pop
pop
push
or
jb
nop
dec
test
ret
fimuls
pop
cs
sbb
repz
pop
jmp
stc
movsl
xor
rcr
in
lods
add
or
mov
clc
jnp
insb
add
hlt
xor
sarl
jge
popf
subps
in
add
lock
push
les
movsb
in
cmpb
jmp
xchg
cli
out
mov
xor
lret
mov
shl
adc
ljmp
cmpsl
pop
cmp
xor
cld
cmp
es
fildll
sbb
and
ret
xchg
loope
test
mov
imul
xor
cmc
jl
notb
and
sarl
dec
daa
and
pop
call
call
push
mov
iret
lahf
mov
add
imul
clc
add
mov
pop
add
cmpsl
data16
sahf
cmc
push
add
push
lss
fdivl
push
sub
add
sub
popf
je
call
iret
insb
add
jbe
xchg
jns
in
inc
clc
mov
add
int
and
inc
aam
int3
movsb
sub
rcll
cwtl
mov
sub
pop
ljmp
je,pt
push
lds
in
cld
jbe
inc
ja
push
pop
mov
adc
in
fiadds
popa
repz
out
enter
sub
mov
and
mov
sub
js
lret
cs
lds
xchg
outsl
mov
lock
shrb
jns
pop
cmp
and
xchg
ds
test
dec
jle
repz
mov
push
jg
dec
in
adcl
sbb
lcall
push
cmp
movl
mov
cmp
les
inc
add
stos
cmpsb
jne
pop
sbb
lea
adc
repz
repz
mov
es
push
cmc
in
insl
stos
jns
or
push
lods
out
lcall
sub
xor
loopne
adc
inc
js
cmpsl
xchg
xchg
mov
std
lock
jl
cli
mov
jno
icebp
or
mov
int3
fadds
int
sti
mov
jbe
repnz
stos
jmp
pop
aad
sbb
add
add
les
cwtl
jmp
bound
or
out
mov
mull
xchg
fidivrl
add
scas
sbb
bnd
mov
popf
je
mov
xchg
jmp
iret
and
stos
stos
mov
sbb
pop
fisubl
or
sbb
sbb
jbe
scas
arpl
sbb
and
hlt
icebp
or
xor
out
int
out
add
outsl
cwtl
sbb
imul
icebp
dec
into
pop
movq
mov
rcr
jg
ds
xchg
lds
leave
add
lcall
pop
fildl
jbe
loope
repnz
jp
faddp
cmc
sbb
push
popa
insb
or
xchg
mov
insl
push
adc
imul
dec
ds
cmc
jo
mov
xchg
test
negl
jge
xchg
sub
inc
rorl
es
loope
dec
jno
out
and
fisubrs
jp
push
fistl
or
icebp
lcall
sub
jb
loop
fwait
add
or
dec
sub
sub
and
shll
sbb
rol
data16
sub
jns
jbe
push
nop
mov
mov
sub
insl
mov
nop
hlt
jg
insb
int3
pushf
adc
inc
jne
hlt
test
sub
push
jl
dec
jb
fwait
int
adc
aam
test
or
jp
idivl
out
push
ror
sbb
inc
lcall
inc
std
add
dec
or
xor
add
imul
out
push
adc
sub
or
jle
add
scas
sbb
pusha
pop
mov
xor
push
rolb
mov
jo
pop
loop
mov
dec
cmpsb
sarb
aas
cltd
jnp
lods
loop
imul
fdivrs
pop
loope
insb
sbb
loopne
cmpsb
popa
inc
cld
dec
call
inc
xchg
out
mov
push
adc
icebp
inc
sub
adc
xor
in
shlb
pop
scas
and
imull
or
icebp
jg
cwtl
jp
sbb
aas
popf
nop
inc
cld
clc
cmp
sub
gs
or
out
fwait
aaa
and
aas
sbb
shl
inc
cmovae
and
jns
cmpsl
or
sub
cmc
sbb
mov
mov
ret
xor
setnp
and
outsb
sub
dec
sbb
pop
loop
out
lcall
push
roll
test
test
push
adc
cmpsl
cli
cmp
pop
add
das
or
cli
fwait
lea
xchg
jle
es
adc
call
mov
imul
sti
mov
in
mov
jns
fwait
mov
lds
jg
shr
adc
enter
xor
pop
lea
and
jnp
dec
mov
inc
and
push
dec
mov
push
xchg
adc
mov
in
data16
aam
dec
std
jle
xchg
aam
pop
lret
aas
lcall
dec
fists
stos
shll
rclb
push
adc
push
fisubs
mov
shlb
in
outsl
sub
mov
cmp
inc
cwtl
push
scas
cwtl
jg
ficoml
outsl
test
jbe
jb
mov
or
lahf
pushf
sarb
sbb
cmp
mul
jno
lock
sahf
repnz
push
mov
fcoml
mov
ss
fcomp
dec
or
stos
pop
pop
in
iret
lock
outsb
xor
das
adc
stos
cwtl
call
push
lahf
in
xchg
pminsw
in
sbb
adcb
pushf
das
jno
andl
mov
in
push
dec
fwait
or
call
mov
mov
xchg
stos
xor
mov
push
das
and
enter
add
adc
nop
inc
ret
dec
mov
xchg
ss
mov
inc
push
fdiv
fwait
imul
jbe
inc
mov
fwait
jo
outsb
add
push
and
pop
push
pop
mov
pop
nop
mov
leave
ss
sti
pop
inc
subl
je
cmp
test
popa
fsubrl
push
inc
inc
sub
les
cmp
fs
es
movsb
into
sbb
push
xchg
adc
ds
xor
jnp
mov
lahf
pop
or
sub
es
jbe
fucomi
adc
sub
in
dec
mov
xchg
jmp
inc
jg
inc
out
mov
je
in
xchg
insl
rcrb
movsl
mov
js
cmpsb
sbb
sub
sub
pop
jb
loop
sti
jge
push
cmp
push
insl
fsub
cmp
je
adc
into
xchg
xchg
push
and
push
fmul
fwait
and
xchg
jo
mov
cmp
jbe
mov
addb
inc
cmp
mov
push
sbb
push
lret
inc
notl
mov
out
test
or
bound
push
cmp
aas
jp
stos
outsl
jno
lods
push
bound
add
sbb
sarb
int
or
or
test
or
cmp
jecxz
daa
loopne
mov
or
iret
mov
mov
pop
cmp
mov
xlat
lods
xchg
xchg
shll
jle
js
xchg
jnp
std
cmp
or
fistpll
mov
add
inc
push
enter
stos
dec
mov
cwtl
cmp
fdivrl
pop
add
fwait
movsl
push
jne
test
push
sub
enter
pop
jge
leave
sbb
push
cmp
sbb
test
xchg
xchg
adc
inc
cmc
shl
xor
cmp
inc
inc
loope
lods
cld
in
loopne
lea
iret
or
push
sub
mov
daa
lcall
movsl
sub
jl
push
in
incb
mov
adc
push
jnp
sub
jno
adc
ja
mov
mov
hlt
shrb
pop
mov
inc
in
push
mov
iret
loopne
enter
cmc
test
mov
cmpsl
push
mov
mov
or
xor
ja
push
in
cmpb
addb
mov
adc
mov
shr
mov
jo
mov
test
dec
out
leave
xor
cwtl
sub
mov
sbb
mov
sbb
jmp
outsb
mov
out
aas
in
lcall
popf
inc
ds
add
or
in
jmp
sbb
rcll
pop
mov
push
jg
adc
xchg
mov
xchg
pop
pop
hlt
dec
imul
out
scas
push
in
push
inc
outsb
jns
lods
and
cmpsb
rcr
loop
into
insl
jl
add
jbe
ja
lods
jae
push
pop
mov
pop
iret
fidivs
popa
and
ror
cltd
jp
sarl
and
enter
pop
push
jp
lea
mov
jmp
jns
pop
jns
pop
cmpsl
lret
xor
xlat
into
test
xor
bnd
lcall
pop
adc
mov
dec
pop
or
int
aas
sub
pop
xchg
xorb
addr16
and
daa
dec
dec
mov
out
adc
push
push
mov
lods
pop
cmp
push
and
sbb
loope
xchg
pop
std
push
outsl
ja
fsubrl
mov
xor
mov
xorb
add
mov
xchg
lods
fiaddl
pop
insl
out
add
xor
loop
add
xchg
pop
fwait
jbe
lcall
out
filds
andl
sahf
adc
mov
mov
dec
mov
dec
add
xchg
pop
das
and
dec
pop
xchg
inc
mov
push
xorl
mov
mov
lock
arpl
pop
std
lods
gs
xchg
sbb
mov
lret
jl
dec
pop
dec
int3
inc
out
mov
or
sete
int3
jge
mov
and
xor
dec
push
and
outsb
xchg
ss
ret
pop
jmp
aam
dec
imul
leave
into
or
adc
sbb
push
ljmp
pop
lds
and
leave
cmc
lods
adc
xchg
ret
inc
xlat
rcrl
jg
scas
inc
iret
add
mov
dec
dec
gs
cli
cwtl
leave
push
mov
mov
movsl
or
ljmp
sbb
and
jge
fsubl
rol
movsb
outsb
jne
in
cmp
or
and
gs
xchg
cltd
repz
ja
cmp
mov
daa
int
cs
les
or
add
faddl
test
fs
or
push
bound
mov
jno
xchg
mov
adc
jbe
mov
arpl
xchg
add
lea
cli
mov
test
cmp
jb
jne
adcb
fiaddl
xchg
dec
pop
ljmp
mov
iret
sbb
or
sbb
les
xchg
cmp
or
and
call
subl
mov
repnz
push
leave
xor
xor
jle
xchg
sti
fdivrs
cmpsl
xchg
aad
adc
or
cmpsl
add
mov
fprem1
jae
sahf
fiadds
and
xchg
cltd
jl
push
fsqrt
int3
lea
cmp
lds
xchg
push
push
inc
fmuls
mov
in
rcrl
xchg
cld
cmp
test
add
stc
pop
jnp
loop
mov
and
pop
in
adc
jns
cmp
mov
inc
jge
mov
movsb
dec
cmpsl
mov
outsw
jg
outsb
xor
mov
xor
sub
popa
xchg
and
ljmp
loope
not
sbb
ljmp
cmc
sti
enter
cmpsb
mov
shl
cmp
cld
add
or
pop
std
test
xor
xchg
int
jne
mov
dec
ljmp
enter
pop
lcall
roll
sub
sub
sub
adc
mov
pop
les
testl
stos
sbb
xor
pop
xchg
mov
pop
popf
test
jno
jnp
mov
loopne
outsl
or
dec
xchg
mov
dec
or
jge
in
pop
push
nop
xor
pop
je
jmp
push
lods
es
test
sub
rcl
xchg
push
out
pop
jae
push
adc
fisttpl
mov
ljmp
adc
scas
cmp
mov
cli
sub
mov
jbe
mov
xor
lret
insl
mov
pop
bound
daa
xchg
mov
vmovhpd
push
out
xchg
lock
aad
std
push
cmp
test
xchg
jnp
push
lea
mov
scas
mov
mov
add
cmp
cwtl
insb
mov
adc
sub
or
sbb
jmp
test
inc
cmpsl
add
movb
aas
out
dec
and
and
cwtl
and
cli
and
mov
int
aas
gs
hlt
rcrb
sub
push
std
fdivs
push
push
dec
inc
push
lods
fnsave
iret
lods
test
mov
mov
loope
lds
mov
addb
outsl
jae
jne
cli
imul
out
cltd
fstpt
pop
popf
xor
sar
mov
add
cltd
push
jae
int3
xor
ret
sbb
inc
xchg
std
imul
inc
or
or
xchg
lahf
pop
sub
imul
add
xchg
scas
mov
jnp
hlt
fbstp
xchg
jg
cmp
enter
jns
xchg
lahf
clc
and
and
mov
and
lcall
xor
or
movsb
fnstcw
inc
cltd
jne
outsb
dec
ret
dec
in
jnp
mov
fs
mov
pop
cltd
mov
cwtl
shr
mov
lods
dec
pop
mov
fdiv
add
in
push
sub
in
or
pushf
sbb
int3
mov
movsl
icebp
subl
dec
mov
xchg
push
cmp
cmpsb
adc
pop
mov
pop
cs
push
mov
cmpb
xchg
mov
pop
mov
add
xchg
ljmp
cmp
jmp
fsubr
int
cmc
mov
lcall
add
adc
mov
inc
or
lea
jecxz
fcomi
dec
cld
dec
outsl
mov
aam
fneni(8087
call
and
lret
and
xor
pop
pop
xchg
fdiv
call
adc
mov
bound
inc
repz
xchg
push
dec
repnz
test
iret
sahf
ljmp
xchg
jns
xor
ret
xlat
out
push
out
jbe
pop
xor
pop
sub
jle
xlat
test
fsubp
loope
dec
push
scas
pop
add
and
in
negl
cmp
sub
setle
and
jo
orb
sub
lock
scas
lret
mov
sub
gs
mov
mov
xor
rcll
cmpsb
push
and
mov
and
out
mov
mov
push
xchg
mov
aaa
push
jb
iret
mov
xorb
or
mov
fcompl
cmpsl
mov
add
inc
andb
lds
jg
pop
inc
fnstcw
pop
cmc
lock
push
pop
shrb
jnp
in
dec
lods
fstpt
popa
icebp
mov
and
jle
and
cmp
push
cs
adc
es
cmc
aam
mov
jle
std
je
rorb
bound
imul
mov
fld
mov
pop
jne
ljmp
aaa
insb
rorb
pusha
test
and
mov
jbe
mov
cmp
jns
jbe
xor
sarl
add
push
adc
and
notl
push
in
gs
add
nop
sbb
inc
inc
outsb
cwtl
pushf
or
jg
lods
inc
outsb
sub
push
jnp
dec
fiadds
jp
cmp
add
repnz
jg
mov
pop
jl
mov
add
xchg
in
test
insl
ds
test
or
out
stos
mov
insl
jae
je
xor
cmp
ja
ret
adc
mov
push
je
call
clc
xchg
shr
push
xlat
pusha
inc
pusha
pop
fnstsw
icebp
and
imul
pop
dec
ret
dec
imul
fidivs
push
jge
inc
sahf
notl
add
aad
or
data16
pop
call
pop
xchg
dec
push
inc
mov
mov
add
aad
int
js
pop
loope
cmp
sbb
cmp
mov
pop
mov
sbb
int3
inc
pushf
pusha
mov
push
mov
movsb
ficoms
cmp
and
sti
into
pop
aam
stc
nop
cmp
ret
arpl
xchg
cltd
jmp
nop
ja
ret
std
sbb
mov
mov
mov
jnp
xchg
xor
dec
xlat
popa
and
push
inc
std
mov
sarb
xchg
mov
fcmovnbe
pop
jno
in
dec
jnp
or
mov
pop
cmp
cmp
xchg
cwtl
cmpsl
ss
imul
add
clc
iret
push
pop
pusha
mov
sub
cli
fcmovb
out
sub
jmp
es
xor
icebp
sub
subl
jecxz
mov
jae
lcall
jg
xor
mov
jne
jg
out
gs
adc
jno
out
xor
mov
cltd
or
adc
adc
out
jp
ret
push
lea
test
push
push
iret
push
jno
cvtps2pd
and
sub
lods
lret
data16
and
clc
jae
data16
push
xchg
and
mov
leave
or
inc
dec
adc
push
cmp
pop
mov
sub
xor
and
fdivs
inc
roll
push
inc
in
aaa
test
lcall
mov
ds
repz
mov
and
xchg
and
loop
xchg
push
rcrb
ret
lds
test
pop
fidivrs
mov
bnd
das
add
bound
sbb
das
add
add
outsl
mov
push
pop
sbb
mov
test
lock
xchg
xchg
sbb
adc
mov
jbe
int
pop
ret
shll
lret
or
into
cli
icebp
sbb
pop
fidivl
lcall
scas
lahf
dec
jl
xchg
mov
rolb
ret
pusha
in
mov
xor
test
std
xor
mov
loop
dec
rcll
mov
shrb
xor
mov
dec
imul
and
inc
gs
es
xorl
push
cld
into
ficompl
sbb
repz
mov
xchg
test
sub
sahf
sub
pop
push
pop
rorl
insl
cmc
in
je
or
add
or
arpl
int
cmp
xlat
sbb
inc
aas
inc
sbb
mov
enter
pop
in
addr16
shll
xor
or
sub
ljmp
cmc
xor
jb
lcall
fcomip
imul
negb
in
jo
pop
int
mov
test
shlb
lret
shlb
add
stc
xlat
push
jp
mov
clc
inc
mov
ljmp
sbb
push
fs
pusha
fidivrs
sub
mov
mov
fcmovne
xor
mov
add
xor
cltd
push
std
lea
imul
inc
inc
sbb
jnp
cmp
dec
dec
adc
add
inc
or
gs
xchg
xchg
push
cmpsl
dec
xor
mov
int3
cld
test
push
cmp
sbb
fisttps
outsl
dec
mov
popa
int
or
pop
cmp
mov
loop
data16
mov
mov
xlat
xchg
sbb
adc
sbb
cmp
sbb
out
pop
add
imul
ficompl
ret
data16
loope
aam
lahf
jecxz
mov
or
xor
jecxz
lods
fdivp
jae
sub
jle
loop
cmp
jb
in
lret
sbb
fstps
adcb
cmp
sub
int
jbe
je
insl
shlb
inc
outsl
mov
lret
arpl
xor
push
inc
xor
out
ljmp
xchg
arpl
rorb
rcrl
repz
push
sbb
mov
push
test
repz
clc
loope
pop
jnp
mov
sub
leave
push
sub
sbb
das
decl
faddl
pop
or
es
bound
mov
iret
jae
cmp
lods
mov
clc
and
jbe
in
fisubrl
cmpl
pop
out
cld
lret
fwait
sbb
sbb
shll
pop
icebp
dec
sbb
sbb
push
push
pop
cmp
mov
out
ret
push
sub
and
cmp
fucomi
outsb
sbb
push
cmp
scas
cmp
sbb
push
push
mov
jb
in
ffreep
pushf
cmp
xchg
xlat
add
enter
ja
push
mov
xlat
sub
addb
dec
push
int3
push
lods
cmc
mov
or
jne
pop
sub
fisttpl
ror
stc
mov
rolb
subb
test
inc
data16
lret
faddl
pop
stc
ljmp
scas
mov
insb
popa
mov
lret
adcb
jle
mov
mov
ret
jp
mov
xor
sub
and
inc
mov
stc
mov
mov
add
nop
and
fwait
and
ja
cmp
mov
or
add
cmp
sbb
adc
fnstenv
sub
std
add
push
lcall
xchg
dec
out
xorl
ret
push
aam
aas
mov
aam
movsl
pop
push
sbbl
pop
test
dec
push
sub
jne
push
aam
pop
cltd
imul
daa
cld
enter
push
cmpsb
pop
xchg
mov
pushl
sub
mov
testl
sahf
mov
fs
or
sub
faddl
stos
fstps
mov
mov
cli
daa
pop
daa
sbb
inc
imulb
mov
xchg
dec
inc
into
sti
inc
jp
ffree
push
adc
mov
or
stc
hlt
mov
xor
aas
adc
fsts
xchg
sbb
xchg
sub
lahf
sub
mov
shr
add
jg
popf
ljmp
cmpsl
out
in
hlt
in
push
cmpb
out
sub
inc
sub
lds
cwtl
add
adc
pop
inc
mov
sub
lods
sub
mov
push
mov
xchg
sbb
lods
sub
and
in
adc
xor
push
xor
jae
mov
push
push
mov
leave
in
cmp
push
jmp
dec
fstpl
call
mov
or
fldcw
scas
mov
adc
mov
push
mov
ljmp
add
stos
loop
jecxz
cmp
ljmp
cmp
cmp
inc
sub
iret
popa
mov
ljmp
add
test
push
subb
xor
mov
jmp
push
in
inc
cmpb
sbb
orb
je
cmpsb
lock
std
mov
test
out
insl
xchg
sets
popa
mov
pushf
push
push
imul
mov
ss
cwtl
pop
push
bswap
mov
stc
inc
jecxz
pop
and
xor
rcl
xor
pop
add
xchg
add
iret
jno
push
mov
insb
iret
sbb
divl
ljmp
insb
cmp
jae
cmp
dec
jne
mov
pop
outsb
stc
add
lock
xlat
add
repnz
push
test
mov
movsl
ja
fdiv
pop
scas
or
mov
sbb
je
adcl
jno
lcall
inc
icebp
jb
inc
cmp
sub
popa
shr
ja
outsb
dec
pop
add
pushf
bound
ret
lods
pop
jnp
mov
xchg
fs
xchg
mov
and
jns
add
mov
dec
ss
insl
std
out
inc
mov
jae
mov
mov
adc
imul
xor
lret
ss
mov
inc
mov
jne
ror
cmpsl
mov
insb
pop
repnz
sub
push
cwtl
pop
lds
and
orb
stos
cmc
mov
sbb
cmp
ficomps
sbbl
xor
push
jns
clc
test
push
ja
xor
scas
pop
fmul
call
lods
pop
or
mov
js
jns
push
sbb
xor
xchg
mov
push
add
or
xor
stos
leave
xchg
lret
and
pop
stos
addl
sub
clc
jns
inc
sbb
out
addr16
jp
mov
sub
push
cmpsb
xchg
cwtl
cmpsb
pop
pop
icebp
inc
in
sbb
cmp
jg
fldenv
jae
or
jmp
sub
mov
and
jmp
rclb
xchg
fwait
fs
xchg
dec
cmpl
pop
push
inc
movsb
adc
bswap
ljmp
test
cmpsl
xor
push
jns
or
and
ljmp
mov
or
ljmp
jmp
cmp
in
jae
inc
pop
mov
clc
fisubrs
loopne
repnz
jo
push
cltd
lea
lret
adc
push
rcrb
pop
push
loopne
popf
test
jns
cltd
mov
and
enter
xchg
inc
out
dec
jae
xchg
std
dec
out
inc
push
inc
icebp
mov
or
dec
xlat
stc
inc
pop
imulb
sbb
ljmp
pop
or
push
js
mov
fsub
sbb
pop
fisubrs
mov
or
sbb
nop
ret
les
rcll
xor
cli
pop
shrb
sub
sbb
xchg
dec
lds
sbb
int3
xchg
xchg
dec
dec
idivl
mov
jnp
jmp
enter
jp
hlt
fdivrp
dec
dec
cs
insl
mov
cmc
cs
stc
sbbl
pop
jmp
and
push
xchg
ds
test
sub
clc
mov
cmp
sub
jg
push
aam
sti
shll
inc
push
xchg
mov
mov
xor
std
outsb
push
ljmp
mov
and
jg
fdivp
mov
in
pusha
xchg
cs
sbb
mov
push
cmpsb
aas
addr16
push
mov
imul
cmc
lret
mov
push
je
jle
outsb
les
inc
pop
aaa
sbb
and
mov
mov
xchg
into
cmp
mov
jnp
cltd
lahf
xor
call
scas
ret
add
jb
pop
mov
xor
into
lods
iret
xlat
and
add
fs
xchg
add
dec
jle
mov
jno
sub
fwait
lods
mov
xchg
lahf
pop
mov
ja
push
mov
jmp
out
insb
icebp
test
inc
mov
ja
icebp
cmp
add
mov
pop
pop
dec
jo
or
je
xchg
test
mov
lea
stos
dec
data16
dec
fdivrp
xor
dec
dec
mov
xor
adc
popf
test
xlat
or
out
out
inc
jo
inc
ljmp
addr16
leave
clc
pop
out
out
jge
in
arpl
mov
repnz
mov
mov
xlat
sub
adc
outsl
ja
xchg
in
mov
out
clc
pop
out
jl
out
sub
aad
mov
popf
lcall
fisubrl
notb
jl
adc
addr16
push
sub
jge
das
cmpsl
cltd
les
imul
mov
push
jo
push
ljmp
sub
xchg
xchg
adc
sub
add
icebp
shrl
add
dec
fs
mov
or
xchg
push
hlt
xor
xlat
adc
into
stc
push
sbb
divl
sbb
aas
ljmp
adc
test
fdivs
data16
inc
push
cmp
imul
or
jge
adc
push
or
imull
outsb
lcall
mov
nop
jge
pop
fs
cmp
or
jmp
pusha
mov
insl
sbb
sub
movsl
jmp
shrl
out
mov
mov
xor
push
adc
shlb
sti
cmp
dec
scas
inc
mov
jmp
or
aaa
les
xor
add
loopne
imul
jmp
mov
std
mov
movsb
outsb
jge
scas
sub
lods
adc
add
mov
incl
and
push
sbb
clc
mov
adc
mov
cmpsb
cmc
stc
js
add
mov
nop
push
mov
and
mov
xchg
jle
dec
and
leave
mov
mov
ret
lret
adc
ss
mov
pop
fcmovnb
lock
mov
pusha
cmpsl
loopne
adc
mov
lea
cmc
xor
fs
inc
push
and
mov
sub
out
and
push
hlt
lods
add
pop
mov
mov
cld
pop
les
out
inc
mov
dec
outsb
pop
loopne
clc
cmp
mov
jno
shlb
aaa
cmp
jmp
daa
out
aas
adc
jno
jnp
or
setno
rorb
stos
mov
cs
cld
int3
ret
insb
ljmp
cmp
aaa
lcall
stos
rclb
ret
std
xchg
add
fadds
sbb
and
mov
mov
push
mov
lock
jns
scas
add
push
sub
pusha
arpl
jl
adc
mov
push
popa
stos
sbb
push
subb
inc
pop
jmp
and
jle
test
das
and
gs
xchg
divl
cwtl
add
xchg
sub
lcall
mov
mov
pop
mov
sahf
cmc
mov
stos
xchg
loope
lcall
mov
jg
aam
sbb
cli
and
jle
imul
in
mov
cmc
out
mov
lods
xchg
jecxz
fisttpll
add
int
js
jae
jno
rclb
adc
sub
scas
dec
xchg
inc
inc
shlb
icebp
adc
push
adc
cmp
push
shl
jl
cmc
mov
mov
add
jl
rolb
jp
dec
lods
xchg
scas
arpl
dec
dec
fwait
and
icebp
cs
bound
sub
add
js
push
sti
lret
jecxz
les
jne
dec
sarb
xchg
mov
testb
in
mov
stc
add
adc
std
in
mov
aam
jo
jg
or
xchg
sbbl
pop
or
adc
xchg
cld
mov
les
es
xchg
out
push
mov
jge
add
mov
idiv
arpl
int
pop
test
inc
push
xchg
lea
dec
xchg
cwtl
arpl
shrb
negb
sub
push
popa
jle
xchg
clc
cmp
xchg
shlb
jnp
or
pop
adc
lods
pop
push
insl
out
or
mov
mov
lcall
aam
in
mov
fcomip
jne
insl
nop
mov
ret
pop
mov
xchg
pop
insb
xchg
mov
push
dec
adc
or
loope
out
jp
pop
in
pop
mov
xchg
notb
fimull
xor
fld
das
or
inc
fsts
aas
jecxz
cs
popf
lods
rclb
adc
pop
pop
push
arpl
push
mov
jp
mov
mov
jg
scas
sub
iret
jbe
sahf
gs
mov
cwtl
in
pop
inc
xchg
lea
mov
ret
out
mov
mov
cmc
sti
mov
addr16
jne
push
dec
lea
pop
and
cmpsl
cmpsb
inc
decl
sbb
jl
nop
stos
push
hlt
lahf
repz
xor
lods
sub
mov
js
push
call
jbe
pop
and
and
idivl
xchg
jg
and
pop
in
aam
sti
jge
push
jecxz
das
inc
add
jbe
adc
jmp
pop
std
ficomps
out
mov
aaa
insl
test
cmpsl
mov
push
xchg
sbb
rcll
call
push
clc
shlb
fucom
xchg
aam
in
add
mov
cmp
in
sarb
ds
in
in
jmp
daa
sbb
adc
loopne
xor
call
into
or
mov
cmp
pushf
adc
rcrl
inc
fnsave
jp
sub
push
cmpsl
shlb
movsb
les
pop
repz
xlat
bnd
enter
ja
and
and
xchg
sbb
xchg
sahf
stos
jp
pop
lea
mov
or
stos
mov
fs
mov
dec
xor
pop
sub
push
jp
mov
mov
test
mov
mov
pop
lret
mov
and
int
lahf
mov
push
jnp
mov
popa
or
lods
inc
out
mov
mov
imul
out
aaa
jns
jg
repz
adc
xchg
orb
loopne
sub
ficompl
out
jge
add
shlb
push
push
mov
mov
sarl
nop
iret
imul
sbb
mov
jo
sub
sub
fsubrl
insb
and
cltd
sub
sbb
sbb
in
or
mov
adc
divl
test
pushf
dec
aam
xchg
xchg
xor
roll
mov
mov
imul
sahf
sub
mov
cmc
add
cwtl
leave
cltd
and
cs
out
nop
imul
fcmovbe
ret
xor
mov
jae
test
add
jp
into
dec
mov
out
lcall
or
mov
xor
and
hlt
xchg
ficompl
push
push
xor
scas
inc
cmc
call
mov
cmp
in
fisubl
xor
mov
test
testl
xchg
add
aam
inc
icebp
daa
jne
mov
mov
push
jecxz
mull
mov
pop
dec
cmp
in
xor
in
out
fnsave
sahf
sbb
inc
insb
test
fwait
dec
pop
test
cmp
gs
scas
inc
push
jle
inc
push
inc
sarl
ret
push
pusha
jno
inc
out
sbb
push
test
jno
sub
mov
decb
stc
test
ror
or
clc
jecxz
jnp
mov
jecxz
roll
in
jle
iret
push
inc
jge
and
ret
xchg
bound
pop
cli
shrb
inc
push
ljmp
sbb
call
push
dec
sbb
fidivrl
pop
sbb
mov
ljmp
xor
add
sbb
xchg
repnz
xor
call
add
fmul
dec
js
sub
inc
frstor
movsb
es
jo
lds
xor
lods
push
inc
lods
and
fisubs
mov
mov
test
jg
dec
jl
es
loope
sub
popa
xor
xchg
xor
jne
inc
cmpsl
mov
mov
lcall
sub
adc
mov
adc
add
loope
fisttpll
cmpsl
in
and
sahf
lock
sbb
add
cwtl
cld
repz
loopne
push
and
adc
xchg
aam
and
insl
cwtl
sbb
sbb
stos
cmp
pop
jmp
imul
sarl
xchg
fcmovnu
dec
ret
and
cli
mov
mov
xchg
lret
sbb
xchg
subb
cmpsb
fadds
mov
fiaddl
outsl
jp
in
push
inc
or
push
enter
dec
in
or
pop
xchg
push
gs
sub
mov
push
negb
pop
cmc
dec
xor
mov
scas
add
cmp
popa
and
pop
dec
adc
fistps
mov
jle
sahf
xor
in
cmpsb
inc
mov
sbb
js
mov
and
sar
fisttpl
pusha
sahf
insb
fistpl
mov
jb
xchg
xchg
pop
sub
jne
mov
jge
es
int3
mov
cmpsb
pop
adcb
dec
lods
sub
jb
inc
jae
and
push
push
sar
std
mov
loopne
or
pushl
daa
lahf
nop
cmpsl
cmp
xlat
loope
lea
shll
stos
mov
mov
aas
xor
and
dec
cmp
dec
sbb
ror
or
xor
cmp
insl
mov
dec
lods
jecxz
mov
ret
movsb
es
sar
sahf
push
sub
into
mov
movsb
int3
cli
sbb
lsl
xchg
add
cltd
or
or
xor
mov
xchg
and
ds
ret
add
cmp
dec
fadds
fs
aas
add
rcr
push
imul
stos
mov
add
push
or
jmp
xlat
sbb
push
mov
scas
pop
sub
sbb
movsb
aas
cld
or
push
dec
fmull
inc
add
lds
std
or
lahf
mov
jns
sub
sub
mov
inc
xor
cmpsb
aam
movsb
dec
add
sbb
mov
adc
sbb
hlt
mov
mov
cmc
xor
std
cmpsb
or
fistps
mov
enter
mov
adc
mov
repz
addr16
mov
push
insl
inc
xchg
mov
push
adc
sti
and
in
incb
add
or
cmpsb
sahf
cmp
pop
les
and
into
lds
dec
in
cmp
dec
lock
xchg
pop
out
push
ja
sbb
enter
stc
pop
and
mov
cmpsl
jnp
dec
pop
dec
jbe
sbb
enter
pop
and
mov
add
lcall
xorl
mov
out
cmpsl
inc
imul
dec
dec
xor
sbbb
inc
pop
lock
xor
cmp
pop
popa
xchg
push
add
adc
push
aad
lret
out
pop
cli
and
aam
sub
pop
inc
and
pop
int3
cmpsl
fbld
lahf
mov
lods
and
enter
call
ret
pop
rol
jbe
mov
cmp
ficoml
push
rcrb
push
das
inc
mov
or
cltd
and
and
or
js
jns
lcall
ret
push
push
les
adc
cmp
out
jp
xchg
aas
xor
ret
out
out
xchg
je
cmp
add
fcoms
aam
xchg
test
pop
inc
jo
adc
movsl
and
xchg
popa
in
adc
iret
addr16
dec
adc
xchg
fdivl
cmpsl
sub
mov
sbb
mov
add
out
popl
cmpsl
mov
pop
push
lcall
cmpsl
mov
fidivs
mov
scas
movsb
ja
inc
scas
lahf
and
es
daa
dec
inc
pop
std
push
repnz
in
mov
dec
das
aas
cwtl
loopne
xlat
jg
pushf
xor
cltd
pushf
adc
adc
mov
mov
fsubl
sub
mov
cld
and
leave
dec
sarb
mov
inc
es
mov
ffreep
addr16
hlt
pushf
cmp
sarl
dec
das
xchg
dec
or
sbb
pop
mov
mov
add
xlat
sbb
bnd
xor
xor
ret
jp
aaa
xor
fwait
repz
add
loopne
fucomip
mov
es
les
push
test
push
cmp
sub
mov
ljmp
add
xor
jmp
stos
idivb
fs
pop
jge
or
mov
pop
jo
inc
jbe
lods
fsts
movsb
sub
cmp
test
scas
or
mov
rolb
xchg
jge
in
addl
add
nop
xchg
push
pop
ljmp
ss
jno
filds
test
jmp
popa
addr16
js
adc
mov
adc
jbe
inc
ret
adcb
jne
ficompl
sbb
or
lcall
and
inc
aam
pop
jle
inc
jbe
cld
and
mov
lock
xchg
sahf
cmp
or
je
je
inc
dec
sahf
dec
pushw
jl
out
sbb
daa
icebp
push
cmpsb
push
fildl
mov
es
mov
xor
sub
addr16
mov
xchg
sbbb
xchg
rorb
ret
cld
in
mov
adc
mov
cmp
idiv
xchg
scas
aas
cmp
mov
ljmp
fldt
shlb
das
inc
and
sub
and
add
loopne
xor
ret
lahf
test
cmpsb
push
imul
rorl
out
or
daa
or
stos
jo
lret
cmp
ret
add
lcall
mov
xchg
sbb
stc
or
xchg
std
xor
jne
jae,pn
mov
daa
test
jmp
xor
sbb
in
inc
in
movsl
mov
lods
notb
fcoml
stos
pavgw
cmp
jns
clc
test
or
inc
fs
popl
mov
dec
int
push
in
popa
scas
push
call
movsb
cmp
lods
out
adc
in
movsl
sarb
enter
pop
jno
imul
add
imul
fdivp
sbb
cmp
in
inc
fdivr
sbb
idivb
mov
jne
inc
sub
xor
adc
lods
sbb
repnz
and
aam
das
lcall
and
jmp
fcoml
and
in
jp
dec
popa
pop
inc
movsb
add
aaa
pop
in
hlt
jle
pop
mov
cmp
fcoml
push
mov
dec
dec
stc
add
leave
movsl
les
xchg
loope
insb
fcmovnbe
addb
jo
push
roll
lock
aam
xor
sub
aad
test
sbb
jmp
lret
xchg
lds
or
loop
xor
dec
or
mov
sbb
inc
dec
pop
xchg
inc
xchg
pop
dec
add
das
inc
push
jp
rorb
jl
jne
cmp
shrb
mov
cmc
sahf
pop
ja
sub
mov
and
or
and
cltd
cltd
fists
xchg
mov
jae
and
dec
mov
jge
repnz
cmp
pop
dec
dec
test
cwtl
mov
dec
jp
fdivrs
cwtl
gs
mov
xor
and
add
loope
mov
xchg
push
ret
and
adcl
je
nop
mov
enter
cmp
mov
ds
or
int
and
js
xchg
test
xor
or
in
fwait
add
adc
jge
sub
dec
in
adc
adc
in
and
mov
sub
stos
sub
lods
push
jle
aam
cmpsl
sbb
and
cmpb
mov
push
push
test
mov
les
sub
test
into
dec
add
cwtl
sbb
adc
loopne
push
inc
lds
xor
int3
mov
mov
adc
mov
push
ret
xchg
cmpxchg
sub
push
cs
mov
aad
inc
fidivrl
xchg
inc
xchg
iret
stc
lahf
shll
mov
or
adc
pushf
push
stos
pop
xor
test
fcompl
jnp
sbb
add
icebp
hlt
cmp
sbb
out
aam
rclb
dec
andl
push
les
and
in
aaa
gs
mov
outsl
push
mov
incl
mov
test
aas
pop
xor
int
loopne
and
xlat
dec
push
adc
cltd
mov
cmp
sbb
negl
mov
in
sbb
mov
outsb
stos
mov
mov
sbb
jnp
inc
add
loopne
call
add
jmp
fcmovne
or
xor
push
fwait
mov
repnz
dec
xchg
push
stos
ds
jne
cmpsl
dec
jns
jnp
push
or
inc
lock
fisubl
cmc
stc
add
lahf
mov
rcll
test
mov
loop
xor
int
jg
mov
fcmove
mov
adc
pop
bound
push
push
pop
or
popf
xchg
mov
cmpsb
cltd
fiadds
fucomip
call
clc
clc
mov
sbb
push
push
lret
jnp
add
rorb
int3
lea
int3
mov
out
adc
mov
push
mov
mov
add
call
dec
lea
movsl
popf
mov
pop
je
stos
icebp
push
mov
movsb
movsl
push
insl
dec
push
dec
cmp
lahf
mov
cli
mov
xor
iret
data16
addb
cmovno
lahf
outsl
movsb
push
push
fiadds
mov
popl
mov
js
xchg
cmp
xor
icebp
in
out
das
and
sub
mov
dec
mov
adc
pop
imul
ds
aaa
rorl
cmc
imul
iret
dec
jecxz
shrb
aam
xchg
sbb
es
scas
mov
and
or
xchg
icebp
mov
xor
mov
mov
fcom
pushf
push
cmp
sbb
mov
pop
xor
pop
dec
jae
xchg
or
movsl
aas
push
push
mov
ss
or
xchg
fwait
and
pop
fisttpll
xchg
jp
loopne
in
sub
fmull
push
or
sbb
mov
jmp
mov
pop
add
inc
mov
sub
xchg
sub
pop
add
leave
shrl
inc
xlat
add
mov
call
hlt
insb
sbb
stos
jle
xor
adc
test
out
push
dec
test
mov
cmp
hlt
jle
or
inc
lods
jnp
sar
adc
popf
stos
aad
fsubl
movsl
fwait
cld
scas
test
shll
subb
mov
popa
mov
xchg
push
std
popf
sbb
xchg
dec
cli
repz
out
lret
add
xor
mov
pop
out
rcr
fsubrl
pop
mov
push
dec
adc
xor
push
or
xchg
lret
and
shlb
adc
add
stc
mov
mov
pop
ja
sbb
cmp
stos
lds
or
cmpsl
lret
lret
out
sub
outsl
stc
push
rol
arpl
test
sub
stc
ds
sbb
adc
pop
mov
int
xchg
cmc
adc
add
adc
and
mov
sbb
pusha
out
outsl
jp
lahf
loop
add
mov
lods
push
shl
push
jbe
xor
xorb
and
js
ret
icebp
add
data16
fnstenv
push
push
loopne
movsb
push
sub
jp
scas
cltd
repnz
cmp
out
pop
lret
punpckhbw
sahf
stos
jge
dec
out
sbb
adc
dec
out
dec
ret
dec
adc
push
movsl
ss
sbb
and
sbb
push
add
andl
ja
inc
sub
jbe
arpl
jae
xor
js
jnp
std
and
mov
mov
or
push
les
xchg
sbb
mov
scas
out
in
mov
rcll
fdivrl
popl
pusha
lea
cmp
add
cli
arpl
dec
lret
divb
inc
cmpsl
xor
mov
ret
pushw
adc
pop
or
gs
popa
dec
int
mov
imul
pop
sbbb
fidivs
push
shrb
repnz
add
xchg
pushl
adc
test
push
call
cmp
rcrb
pop
movl
push
cmpsb
dec
loopne
daa
pop
dec
inc
ffree
pusha
cwtl
pop
in
sti
into
xchg
repz
adc
inc
orb
test
jns
popf
jmp
stc
loope
test
mov
push
cmp
iret
outsb
test
sub
cmp
dec
cld
jno
push
cmp
fs
fs
cmp
or
pop
pushf
scas
jae
pusha
dec
mov
loop
or
push
mov
aas
xor
xor
cmp
repnz
xor
gs
lcall
rcrl
sarl
insl
dec
in
jnp
je
lods
out
adc
xchg
ljmp
and
adc
lock
loopne
sub
nop
mov
clc
add
sbb
mov
push
jae
jp
lret
inc
lea
xchg
mov
inc
jae
inc
int3
mov
lods
repnz
mov
xchg
mov
ffreep
push
mov
std
push
inc
mov
in
repz
leave
das
xchg
push
cltd
sarb
in
out
test
dec
or
pop
test
loope
push
xchg
decb
jns
loopne
loope
pop
push
andl
popf
lea
sbb
sub
dec
push
js
mov
mov
pop
stc
cld
sbb
fs
stc
pop
xchg
adc
sub
jnp
jmp
push
aad
dec
rorl
hlt
jmp
lods
sbb
lahf
dec
sub
mov
mov
into
lock
push
outsb
insb
sub
xchg
fsubrl
push
mov
dec
mov
pop
movsl
icebp
inc
jp,pt
sub
dec
stc
test
jmp
sub
add
xchg
sbb
sbb
xor
sbb
adc
mov
mov
ds
xchg
and
mov
jle
fmul
cmp
and
scas
lods
push
adc
sti
int
mov
sahf
adcl
aam
lret
or
xchg
mov
xchg
cmp
push
fdivrp
aas
cmpsb
xor
xchg
sub
lcall
les
mov
cmp
xchg
or
mov
mov
dec
aaa
cmp
jne
dec
xlat
inc
cltd
mov
mov
cmpsb
xchg
daa
lcall
andl
aad
cli
out
stc
es
fcmovnu
iret
inc
adc
cmpsb
jge
jle
test
cs
and
or
shrl
dec
push
ret
add
daa
arpl
pop
mov
push
lock
mov
dec
jl
sti
ficoml
cmp
xchg
xchg
aad
sub
in
rorl
push
adc
mov
dec
fidivl
pop
lcall
cmpsb
mov
or
pop
ja
sub
in
mov
pop
in
shll
xor
jne
mov
and
int
mov
xor
das
pop
sub
fildll
test
imul
sbb
adc
xchg
mov
daa
scas
idivl
mov
jae
mov
insl
clc
adc
pusha
jge
cmpsl
push
lds
aad
xlat
icebp
icebp
jg
xor
fwait
stos
adc
jmp
mov
cli
lret
push
push
out
add
outsl
dec
xchg
ljmp
mov
mov
xor
adc
aad
mov
sahf
clc
cwtl
or
jno
jge
inc
stos
lret
addr16
cmc
xchg
pop
xchg
sbb
adc
fwait
jge
and
add
pop
push
xor
enter
adc
lea
repnz
xlat
xchg
or
mov
xor
cmpsb
fdiv
out
xor
iret
xchg
jmp
mov
idivl
popa
adc
or
xchg
jo
pop
scas
fstp
shll
dec
sub
lret
cltd
push
push
outsl
ja
jne
in
mov
and
xor
movl
loopne
push
sbb
dec
cli
pop
inc
les
cmp
cmp
push
out
xor
sahf
cmp
out
inc
sbb
adcb
cmpl
sbb
sbb
adc
mov
or
jae
cmp
lahf
cltd
pop
adc
mov
mov
data16
sbb
xor
loop
jg
jecxz
cmp
sub
es
pop
sub
mov
leave
dec
ljmp
arpl
scas
sub
aam
ja
pop
stos
push
stc
fwait
subb
pop
dec
aad
dec
jno
cld
push
stc
cmp
loope
loopne
dec
ror
xor
mov
clc
sti
mov
dec
xchg
mov
rolb
sub
sub
mov
mov
pop
idivl
mov
fstpt
inc
gs
stos
pop
inc
in
cmp
scas
jg
aaa
imul
xor
sub
fstpt
cmpsl
lods
dec
mov
into
inc
cmp
in
lock
mov
repnz
nop
adc
shr
sub
add
out
xchg
rclb
je
ljmp
dec
cmp
jle
and
and
xchg
mov
in
mov
mov
add
adc
and
sub
in
in
pop
cmc
lcall
jecxz
push
mov
or
outsb
movsl
test
cmpsb
ss
add
sub
pop
inc
dec
fisubrs
pop
scas
ss
inc
ret
push
fisubrl
adc
jne
push
clc
mov
inc
cmpsb
and
icebp
pop
loope
add
jl
jb
enter
testl
cmpsl
push
sub
dec
cmp
data16
hlt
pushf
loopne
sahf
inc
into
movsb
cltd
sbb
jg
jne
mov
adcl
jns,pt
cltd
dec
pop
in
jp
repz
jns
push
mov
ja
fsub
ret
test
and
js
ret
dec
cmpsb
mov
lods
sbb
sub
push
imulb
imul
sti
imul
dec
jne
outsl
inc
int
je
pop
andl
pop
inc
sbb
test
push
add
out
ljmp
jno
push
cwtl
xor
pop
fadds
gs
das
inc
push
ds
xchg
mov
dec
add
jno
xchg
test
inc
gs
aad
pushl
push
sub
movsb
jnp
and
cmp
mov
into
jecxz
or
outsl
jne
xlat
sub
adc
dec
jl
movl
leave
mov
xchg
push
cmp
lret
or
test
loopne
or
jns
dec
sbb
repz
fbld
iret
or
scas
leave
dec
xor
sbb
sub
sub
inc
in
and
addb
and
fdivl
adc
jmp
movsl
lahf
mov
call
lds
adc
es
push
sbb
pop
repz
in
popa
xchg
push
mov
cli
in
movb
jmp
inc
mov
in
dec
lds
test
push
adc
mov
sti
out
cli
movb
inc
lahf
mull
ret
jle
je
popa
xor
andb
daa
mov
and
dec
jmp
pop
cmp
clc
hlt
cmp
xor
mov
ret
inc
mov
dec
pop
xchg
xchg
js
pop
hlt
lock
inc
push
mov
and
dec
ficoml
popa
lock
jecxz
out
xchg
lret
jbe
loope
and
movb
jle
shr
inc
fdivrs
loop
imul
xchg
cmp
push
push
fstl
dec
ss
aam
in
inc
pop
pop
mov
cmp
add
js
imul
in
testb
cmp
lret
repz
and
mov
dec
icebp
xchg
mov
cmpsl
push
ficoms
add
push
mov
vmaxps
xchg
cmpsb
lea
and
dec
test
and
imul
pop
sub
push
push
xor
repz
mov
sub
ficoml
ret
ret
sub
add
pushf
sti
push
in
imul
ret
sub
mov
outsb
cs
testb
insl
ficompl
mov
negl
fisttpll
add
xor
inc
jae
cmpsl
repnz
pop
dec
jle
popf
fisubl
mov
rorl
insb
in
cmp
mov
sti
test
call
fidivrl
das
push
and
les
das
xchg
mov
xchg
inc
cmp
popf
or
mov
insl
pop
outsl
adc
or
lret
in
iret
psrld
testb
add
jbe
adc
scas
test
add
push
sub
jecxz
mov
dec
pop
jg
out
test
mov
addr16
icebp
in
xor
adc
inc
or
lods
stc
dec
jbe
jno
sarb
adc
sub
or
or
dec
aas
je
and
sbb
dec
jbe
cmp
bound
mov
sub
push
xchg
push
mov
lods
fcomi
dec
push
pop
in
popf
add
push
pushf
inc
pop
add
out
mov
mov
fidivs
sub
sub
out
push
mov
sarb
mov
jmp
arpl
pop
call
xchg
addb
sbb
jae
cmp
push
cmpl
xchg
sbb
or
jge
lods
sub
mov
test
adc
lahf
add
jbe
cwtl
push
mov
xchg
rol
dec
inc
lods
subb
xchg
or
mov
xor
mov
xor
sbb
loopne
or
add
outsl
and
push
mov
outsb
add
push
adc
out
arpl
out
push
jg
cmp
in
adc
jp
mov
mov
sub
stc
adc
and
in
pop
lods
sub
test
imul
mov
push
rcrb
mov
sub
sub
and
dec
adc
shlb
or
sbb
sub
sbb
add
pop
faddp
lock
cmp
movsl
lock
push
push
cwtl
imul
mul
mov
shlb
in
jecxz
add
sbbb
cwtl
push
pop
in
mov
mov
mov
xorl
insb
add
lea
arpl
fimull
andl
test
out
adc
push
mov
xor
stos
js
fildll
imulb
push
stc
int3
lods
lods
sbb
add
subl
cmp
and
inc
mov
pop
mov
popa
mov
scas
test
push
out
aaa
cmp
push
mov
arpl
mov
loop
sbb
shrb
in
lcall
dec
push
push
aam
jns
frstor
and
mov
cli
jg
int3
jne
inc
rcll
inc
dec
ds
jns
or
push
xchg
jo
or
xchg
sbb
mov
mov
inc
adc
iret
pop
mov
test
sbb
out
or
sub
daa
jb
xchg
jne
and
dec
bound
jp
xor
jae
outsb
sti
es
add
call
push
mov
cmp
xchg
pop
pusha
push
out
and
and
stos
sbb
outsl
push
mov
out
dec
xchg
pop
cmpsl
daa
mov
mov
push
xchg
orb
cmp
test
test
and
or
ja
daa
or
mov
jbe
pop
lea
xor
or
rcrb
inc
push
leave
cmove
scas
pop
ds
mov
movsb
pop
imul
mov
push
sub
push
js
test
xor
aad
jo
mov
icebp
pop
fs
mov
pop
mov
inc
xor
push
in
add
movsl
pop
push
dec
stos
loopne
cmpsl
mov
cmp
in
xlat
xor
add
and
repz
cmp
cmp
adc
mov
int3
daa
pop
jge
movsb
jns
iret
adc
addr16
js
movsl
loopne
roll
iret
pop
and
xorb
iret
push
aad
push
cmp
je
call
je
testl
push
call
xor
jl
scas
mov
movsb
ficomps
pop
sahf
add
arpl
shrb
je
xor
jmp
cwtl
mov
add
js
popa
sbb
int
repz
out
add
ljmp
rclb
int
repz
cmc
out
add
sbb
scas
pop
mov
pop
lahf
cmp
xchg
je
mov
add
je
inc
jno
aas
and
test
push
test
mov
das
xchg
js
add
push
xchg
xchg
and
les
and
pop
sbb
jns
mov
inc
dec
jmp
inc
daa
jl
loop
add
iret
mov
inc
push
push
mov
jle
pushf
mov
pop
dec
add
inc
movsb
adcl
jge
sub
push
push
push
js
jmp
out
or
or
add
cwtl
sub
imul
xchg
mov
adc
add
shlb
rcl
testl
outsb
mov
cs
xor
jb
cs
cmp
imul
scas
std
sbbb
mov
cmp
imul
sbb
movsl
ficompl
sbb
xor
push
cmp
push
addb
mov
push
sub
test
inc
clc
out
sub
jle
js
leave
in
mov
and
or
pusha
pushf
jp
mov
nop
rcrb
outsl
cmp
repz
sbb
call
enter
lcall
ja
pop
or
repnz
lcall
ja
pop
insl
nop
cmp
mov
cmp
mov
sbb
cmp
ret
std
fnstenv
push
mov
idivl
cltd
adc
jns
or
shlb
xchg
testl
pop
idivl
ljmp
stc
xchg
xor
notl
jg
xchg
sbb
mov
outsb
cltd
imul
fcoml
sbb
imul
add
cltd
das
aaa
xchg
into
xor
lret
pop
push
sbb
and
cmp
movsl
jmp
or
mov
cwtl
out
lods
pop
mov
hlt
lahf
outsl
jb
jno
ret
sub
popa
iret
ljmp
cld
sub
in
aam
leave
mov
mov
inc
xor
mov
and
inc
std
xor
orl
sbb
mov
inc
das
adc
xor
xchg
cmp
push
lods
test
cmp
mov
shrb
test
xchg
mov
popf
sub
js
sarb
and
adc
out
roll
mov
mov
pop
inc
dec
xor
setg
sbb
push
xor
add
andb
std
aam
cmpsb
mov
push
inc
dec
loopne
mov
mov
push
dec
pop
pop
js
pop
sub
mov
aaa
fcoms
add
fldt
pop
dec
outsb
lahf
jl
jae
or
cmp
call
inc
js
std
adc
xor
test
imul
jg
push
jnp
and
push
std
or
lret
push
inc
pop
mov
jge
aaa
sbb
fsubr
push
adc
in
rorl
pop
xor
loop
pop
mov
inc
movsl
push
and
loopne
int3
jp
or
iret
push
sbb
or
pusha
inc
cmp
push
hlt
mov
pop
mov
pusha
loopne
lcall
add
mov
cs
movsb
daa
dec
dec
xchg
popf
xor
adc
test
jmp
mov
int3
mov
cmc
adc
addl
mov
jno
jg
stos
push
cmp
mull
push
daa
lods
shl
insl
dec
bound
pop
pop
mov
jmp
cld
cmpl
pop
std
fs
into
out
test
push
and
std
adc
outsb
xor
pop
mov
add
cld
mov
add
ja
jno
imul
bound
cmc
test
pop
push
jge
movsb
insb
popa
push
xor
push
push
ljmp
or
push
cmc
cmp
jne
bound
xor
fsin
call
push
rcl
int
mov
cmp
mov
sbb
pop
ret
cli
cmp
sub
pop
xlat
lock
mov
in
fs
call
cwtl
sbb
mov
xor
iret
bound
iret
repz
cmp
cmp
out
imul
test
ljmp
mov
shlb
sub
int3
fisttpll
test
mov
loopne
pop
inc
loopne
in
mov
sbb
and
jno
mov
jae
sbb
pusha
int3
ljmp
inc
jl
xchg
or
int3
dec
das
sub
mov
shlb
mov
lret
lahf
cmp
lret
mov
inc
outsl
mov
mov
test
xchg
xor
enter
cmp
add
enter
outsl
sarb
xor
mov
nop
or
and
adc
push
rorl
inc
lock
imul
jecxz
fbld
or
cld
fadds
rcrl
and
pop
in
ljmp
ret
cwtl
xor
fiadds
mov
add
pop
pop
gs
je
jmp
cmp
jecxz
and
jnp
incl
xlat
stos
mov
in
or
xorb
imulb
mov
lods
icebp
icebp
ret
adc
jmp
out
xor
jle
add
or
push
fwait
cmp
add
and
mov
loopne
rcll
lods
ss
xlat
jns
shrb
mov
xchg
push
cli
pushl
jb
dec
xchg
xor
int3
mov
push
test
rorb
and
inc
dec
out
cmp
add
daa
bound
sbb
dec
int3
adc
or
loop
xchg
adc
jns
adcl
inc
pop
xor
sbb
xor
dec
sahf
sub
pop
add
xor
scas
sub
mov
ljmp
and
orl
mov
sbb
dec
push
dec
push
mov
js
xchg
in
es
jp
aaa
inc
hlt
testl
pusha
fisubs
pop
xor
ljmp
shrl
nop
sub
xchg
mov
push
dec
cltd
test
insl
xorl
mov
incl
ret
mov
jmp
ljmp
cwtl
das
js
pusha
dec
lds
mov
popf
dec
jg
cmp
sbb
test
pushf
aad
lcall
xchg
mov
sbb
es
or
ret
lea
push
dec
sub
mov
stos
push
inc
or
jg
cld
or
dec
lods
fs
mov
sbb
add
in
push
or
rorl
call
ljmp
imul
and
xchg
sbb
fildll
loop
xor
sysret
pop
test
fildl
mov
xchg
jp
or
jp
pop
cmpsb
mov
push
or
xchg
cs
cld
movsl
and
xadd
scas
pop
xchg
mov
cwtl
push
xor
pop
mov
frstor
dec
sub
push
mov
mov
test
jbe,pt
push
repz
test
rclb
pop
shrl
ja
test
aas
sub
sbb
insb
out
pop
repnz
test
add
lret
mov
mov
dec
stos
scas
inc
sub
and
mov
aad
les
mov
adc
repz
sbb
shlb
in
xchg
ror
jge
out
pop
test
pop
push
movsb
mov
in
jl
cmp
mov
xchg
icebp
loop
outsb
shl
js
sbb
mov
pop
outsb
push
add
xchg
shll
enter
push
loopne
and
insb
mov
xchg
jge
gs
ds
jl
cmp
mov
sub
cmp
js
and
xchg
mov
add
jne
mov
out
add
aad
inc
test
out
jmp
pop
cli
in
jmp
cmpsl
jbe
data16
add
lcall
andb
sub
lds
fbstp
fdiv
sub
ljmp
ljmp
xor
xor
mov
insl
dec
jne
xlat
pop
sahf
adc
push
mov
pushf
mov
sbb
icebp
imull
xchg
fnstsw
and
fistpll
and
pop
arpl
jnp
adc
add
std
inc
jo
mov
xor
push
xchg
jmp
push
shrb
pop
lods
cmpsb
and
dec
clc
push
cmc
mov
jge
push
fistps
xor
test
mov
mov
in
je
ret
xor
or
pop
inc
sbb
int
and
inc
cmp
popa
rclb
in
push
pop
std
cmc
jne
icebp
adc
jnp
and
mov
lods
lret
imul
incl
in
insb
sub
mov
ret
mov
iret
scas
lods
push
jno
sub
cld
and
sbb
push
int
inc
push
jmp
jbe
or
bound
out
push
fists
or
scas
das
mov
jae
clc
mov
inc
jp
jmp
xchg
xchg
stc
lods
push
push
cmp
mov
fwait
mov
repnz
pop
inc
or
push
dec
ss
clc
add
roll
sub
xchg
sbb
adc
lret
mov
xlat
xor
xchg
lock
dec
lds
shll
nop
jge,pt
sbb
ret
jl
test
xchg
call
mov
repnz
ss
sarb
push
loopne
cmp
int3
lret
push
aas
outsb
dec
sub
call
outsw
mov
fstp
xor
mov
pop
sbb
sbb
rorb
in
test
mov
into
lock
stc
and
repnz
sahf
hlt
cli
into
mov
mov
lahf
fstl
inc
js
sbb
fdivrp
or
jbe
push
push
addr16
cmp
cmp
arpl
mov
es
mov
enter
lret
bound
push
lahf
int3
push
lods
mov
cmp
sbb
push
push
sbb
dec
xor
or
movsl
subl
jp
xor
ret
fcomps
inc
dec
loop
cmp
jle
or
jge
xor
gs
push
rol
pop
sub
jge
insl
jl
roll
int3
inc
out
out
xor
sahf
scas
jno
popa
cmpl
inc
adc
xchg
mov
insl
rol
mov
xchg
lods
xchg
addb
insb
into
jecxz
mov
sbb
dec
jne
scas
jecxz
cmp
pushf
xor
jns
adc
xor
or
fsub
iret
cmpsb
cmp
push
stc
lods
xor
imul
aam
dec
imul
or
out
mov
shll
mov
sar
in
jmp
dec
jne
inc
or
add
mov
mov
cmpsb
shlb
pop
mov
xor
mov
insb
stos
pop
push
int
pop
push
loop
call
movsl
rcr
sbb
sub
mov
jne
xchg
popa
fwait
and
add
xchg
add
out
popa
bound
add
mov
jnp
sbb
pop
sub
add
or
jl
add
cmp
dec
mov
cmpsb
mov
inc
gs
idiv
test
and
popa
int3
enter
pop
push
orb
leave
jmp
outsb
push
lea
and
jle
fimuls
push
mov
scas
jmp
lcall
cwtl
add
out
ret
jo
jbe
sub
cli
mov
or
cmp
loope
jl
jnp
mov
mov
xchg
lret
dec
out
ret
das
out
adc
pop
leave
nop
loope
dec
mov
xchg
lods
pop
pop
push
out
mov
mov
fsubrs
mov
dec
pop
cmp
repz
jge
jne
insl
repz
or
icebp
sbb
int3
xchg
cld
cs
pop
out
out
data16
or
pushf
in
test
jmp
mov
in
rcrl
shlb
sbb
popl
jae
pop
mov
add
sub
jle
jne
inc
movsb
mov
int3
xchg
or
pop
jecxz
dec
or
flds
inc
in
mov
xor
icebp
dec
test
or
rcl
cli
inc
xchg
inc
dec
jbe
xchg
cmc
stos
sbb
fcmovu
ret
sub
jle
pop
push
js
out
sbb
xor
and
adc
mov
jns
stc
mov
pop
add
testl
lock
xor
dec
lock
dec
movsl
pop
sbb
xor
pop
sbb
leave
xchg
push
mov
cmc
or
cld
in
jne
cwtl
mov
sub
out
in
mov
jno
fs
shll
cmp
or
iret
and
popa
leave
cmpsb
loop
fidivs
mov
rcrl
out
push
cmp
out
mov
mov
pop
cmp
dec
mov
in
xlat
and
or
jl
and
or
stos
jbe
inc
hlt
add
adc
pop
mov
cmp
jne
and
xlat
xor
cli
sti
lcall
cltd
aaa
gs
int3
psubq
movl
arpl
mov
cs
inc
jp
inc
movsb
dec
scas
mov
mov
xor
fcoms
stc
pop
add
mov
mov
hlt
shll
mov
loop
out
jmp
and
fisttpl
jp
ljmp
aaa
push
scas
in
mov
js
sbb
xor
pop
xchg
pop
imul
xchg
push
mov
in
and
ret
test
rcrb
adc
insb
loop
pop
mov
xchg
mov
jl
rcrl
fimuls
mov
inc
push
test
cmc
pop
mov
lret
mov
lods
mov
add
adcb
sub
and
mov
ljmp
data16
pop
xchg
sarl
cs
lret
adc
mov
data16
das
jl
sbb
movl
inc
xchg
fdivrs
sub
call
popa
decb
cltd
orl
or
mov
pop
inc
add
test
sub
fbstp
sarl
decl
stos
test
incl
cmpsl
add
add
dec
or
test
cmpsb
movsl
iret
scas
push
lret
or
pop
inc
or
cmpb
mov
pop
sub
or
mov
push
adc
mov
jle
das
xchg
lret
dec
shll
js
lods
cltd
arpl
mov
inc
std
xchg
mov
ds
lret
outsl
pop
and
jae
imul
roll
in
cltd
push
mov
jae
stos
repnz
add
lcall
jb
loop
sub
mov
iret
add
pop
ficomps
xchg
das
pop
enter
sub
inc
push
mov
dec
sbb
pop
xor
outsb
ret
imul
xchg
hlt
in
adc
or
testl
mov
jno
dec
aaa
fs
sub
lcall
shll
jg
mov
sub
nop
popf
adc
sahf
xlat
out
sbb
pusha
fldl
push
out
shll
gs
out
pop
out
ret
mov
mov
and
push
popf
xchg
push
insb
xchg
addr16
push
push
xor
mov
outsl
dec
cmp
cs
and
push
or
jno
pop
push
jnp
cmpsl
cmp
jbe
and
frstor
test
lock
xchg
fisubrl
filds
mov
cld
sbb
inc
sbb
pop
pusha
push
mov
cmp
mov
adc
xchg
mov
fs
inc
push
adc
cli
adc
dec
push
mov
repz
movsb
loope
push
or
fstps
repnz
movsl
jno
cmp
cld
into
push
ss
cld
sub
mov
jae
shl
cmp
cltd
push
addl
xlat
mov
and
jp
add
push
mov
adc
fbld
or
sbb
jl
leave
aad
cli
push
mov
imul
fwait
xchg
sbb
lods
mov
nop
sub
dec
sub
add
test
xor
cli
cld
jle
xchg
lret
les
sub
out
xchg
xor
in
pop
ljmp
fisubrs
frstor
mov
mov
inc
mov
out
dec
addb
mov
pop
push
js
fnstcw
rol
data16
lods
cld
sub
mov
xchg
add
xchg
fistps
or
xor
das
or
std
jnp
mov
dec
imul
and
xchg
loopne
adcl
cmpsb
or
mull
jmp
dec
ret
pop
lcall
push
mov
and
pop
sti
lahf
inc
cmp
xchg
dec
and
pop
ja
repnz
sbb
push
pop
imul
or
popf
xchg
add
test
push
ret
cli
and
std
ffree
xorps
and
aam
mul
push
cmp
sti
pushf
rcll
push
ret
lret
mov
mov
inc
xchg
mov
std
in
std
cmp
pop
mov
jno
faddl
std
call
jne
aam
jno
cltd
ljmp
and
jl
xor
sahf
dec
mov
jns
mov
mov
adc
mov
imul
sarl
sbb
xlat
push
xchg
ljmp
inc
cmpsl
dec
sub
loopne
in
sarl
je
sbb
jmp
aam
sub
push
fmuls
scas
xchg
sub
xchg
push
in
rcll
aam
bound
cmp
lcall
imull
jbe
add
mov
test
stos
mov
or
mov
dec
stc
mov
jl
mov
ffreep
push
mov
jle
mov
xor
out
shlb
inc
mov
call
aad
rorb
ljmp
mov
push
insl
mov
mov
mov
jbe
mov
fsubrp
movsb
cld
push
and
inc
push
lcall
movsb
fsubl
sbb
xchg
push
cmpsl
mov
call
mov
mov
loopne
scas
sub
jle
lret
or
mov
xor
mov
push
xor
xor
cmpsb
mov
pop
cmpsl
xlat
enter
add
imul
jo
cmpsl
loope
scas
jns
in
mov
cmp
and
cld
cmp
loope
les
fdivrs
stos
es
icebp
dec
int3
sub
test
and
mov
sbb
int
or
lock
jae
nop
test
pushf
xor
add
sub
mov
dec
fadds
xchg
lret
push
mov
ss
rcpps
cmpsb
das
lret
push
repz
mov
ret
jl
call
mov
iret
cli
outsl
cmp
neg
loopne
pop
test
push
jb
lahf
shll
sti
sub
jno
fnstsw
out
jecxz
cwtl
mov
xor
inc
or
xor
mov
lods
and
and
dec
jecxz
imul
aaa
cmp
imul
loop
adc
sub
rol
lods
push
dec
pushf
or
sbb
leave
adc
jno
jne
in
and
pop
push
mov
sahf
xchg
pop
push
dec
loope
push
jae
lods
cli
cmp
jns
inc
mov
js
pop
insb
sarb
out
jl
inc
cmp
test
xchg
movsl
dec
sbb
mul
sahf
xchg
jecxz,pt
sub
xchg
or
movsb
inc
xor
mov
fisubrl
enter
mov
xor
add
or
xlat
xchg
sbb
lods
sbb
cmp
jb
dec
mov
add
in
test
in
inc
ljmp
testb
and
addr16
push
incb
pop
sahf
pusha
ror
aad
mov
add
loop
or
enter
sub
hlt
push
jp
cld
lcall
movsb
test
ljmp
jb
lods
xor
loope
sbb
and
aas
sub
mov
jg
fcomps
fldcw
adc
jns
movsl
xor
cmc
xor
dec
push
mov
mov
inc
or
iret
mov
jns
outsl
loopne
js
pand
mov
push
inc
pop
jno
adcb
jge
test
jecxz
stc
insb
mov
dec
jo
lds
cwtl
pop
test
adc
movsb
xchg
or
or
sbb
xor
loope
cmpb
mov
sub
mov
bound
add
sbb
dec
mov
mov
push
lret
int3
test
out
loope
jecxz
adc
cmp
mov
gs
mov
popf
roll
ja
imul
inc
pusha
pop
lret
fldcw
inc
int
xor
mov
aas
clc
out
and
enter
or
insl
dec
mov
pop
out
pop
push
js
adc
sbb
aaa
jle
test
stos
pop
daa
sbb
loopne
mov
in
aaa
in
in
or
enter
push
fcmovnb
mov
push
jo
pop
stos
xchg
aas
mov
xchg
addb
xlat
jmp
pusha
repnz
mov
add
xor
cli
js
inc
and
dec
shrb
sahf
jecxz
stc
jne
test
dec
dec
sar
mov
mov
scas
and
cwtl
pop
jp
loop
mov
sub
fwait
call
imul
ljmp
xchg
loope
das
leave
jns
lods
mov
outsl
pusha
movsl
xchg
sbb
test
pop
loope
adc
add
mov
loope
push
dec
mov
addb
and
xchg
add
outsb
rorb
stos
scas
cld
mull
fwait
ds
pop
cs
adc
jb
dec
test
gs
inc
cmp
loope
cmc
stos
movsb
test
imul
mov
xchg
pop
sub
xor
jae
cmp
xchg
push
pop
jnp
imull
jg
fistl
mov
push
mov
push
cli
add
inc
gs
daa
jb
mov
xor
test
mov
and
lret
inc
pusha
mov
movsb
popa
popf
outsb
inc
scas
or
popa
int
lcall
push
je
rcrl
push
adc
cmp
popa
fiadds
mov
push
push
mov
inc
int3
cmpsl
or
adc
and
sahf
xor
and
orl
and
loopne
aad
call
mov
and
xor
mov
aas
sbbl
loop
jb
add
pcmpeqb
xchg
clc
mov
outsl
call
dec
inc
sbb
lds
repnz
loop
out
cld
xor
sbb
je
enter
add
lahf
lock
clc
ja
clc
int
add
lea
and
xor
sub
adc
bound
and
dec
push
stc
js
mov
dec
fucomp
mov
nop
xor
fwait
jnp
push
iret
inc
insb
mov
xchg
mov
stos
xor
xor
xchg
gs
mov
jl
jo
add
in
jb
adc
xchg
and
js
ficompl
sti
push
sarl
pop
jo
das
lcall
loope
cs
jno
sub
jno
mov
pop
inc
sahf
inc
popf
or
popl
loope
icebp
stc
mov
xchg
sbbb
mov
sub
lds
push
fsubrs
rcrb
mov
fisubl
cld
jle
je
pop
xor
jb
xchg
in
sub
movsl
dec
xchg
xor
mov
push
fs
xor
orl
mov
jne
daa
xchg
lret
xchg
pop
xlat
or
std
shlb
cwtl
push
mov
inc
sbb
inc
cs
sbb
insl
out
xchg
cmp
fcmovnb
call
mov
push
pop
in
push
es
xchg
ret
dec
pop
repnz
jae
aam
mov
cmp
and
insb
movsb
js
sub
jmp
shl
mov
xor
idivl
bound
out
mov
iret
fyl2xp1
add
or
sbb
mov
loopne
sub
dec
dec
pop
inc
xchg
mov
lods
cmp
ljmp
lods
call
cmp
loope
cmp
popa
push
in
add
and
ljmp
adc
test
lret
inc
xchg
xlat
dec
and
and
xchg
pop
scas
fs
cmp
dec
sbb
add
adc
mov
je
fiaddl
jmp
mov
enter
and
or
inc
lods
xorb
xor
mov
test
sbb
adc
push
pop
push
add
and
fmuls
inc
gs
dec
adc
mov
shlb
or
push
sub
ret
sbb
outsb
or
cmp
pushf
mov
lea
into
test
adc
add
sub
cwtl
xchg
push
das
in
scas
data16
jbe
dec
mov
aad
in
rcrl
inc
inc
push
adc
mov
int
fidivs
ret
sarb
ljmp
and
push
sti
pusha
dec
cltd
out
adc
xor
mov
adc
mov
or
clc
pusha
cmc
fwait
clc
pop
scas
sub
mov
inc
add
ss
repz
repnz
clc
sbb
xor
add
pop
add
jne
pushf
sub
cmp
outsl
daa
std
jecxz
cmpl
mov
jmp
jae
sub
sbbb
sti
test
pop
add
in
dec
mov
ret
out
and
fnstsw
push
int3
lcall
outsb
cmp
test
sbb
xor
inc
sub
out
test
sub
sub
xor
fs
mov
cmp
jg
sbb
lods
sahf
rorb
mov
bound
or
adc
adc
ret
pop
push
pop
ret
incb
mov
pop
and
mov
xor
mov
arpl
cmp
lret
pop
insl
xchg
mov
push
mov
fwait
cmpsl
stos
pop
mov
into
fldt
jbe
and
ret
cmp
mov
xchg
mov
push
mov
int
push
and
sbb
push
sub
dec
cmp
testl
ljmp
mov
mov
sahf
xchg
xchg
cmp
or
pop
test
mov
pop
mull
movsl
xchg
mov
addr16
push
movsl
mov
ret
adc
jl
cs
rcrb
adc
jmp
sbb
xor
mov
repz
xor
test
inc
or
das
jno
daa
clc
xor
mov
movsl
push
pop
daa
or
push
loope
cmp
iret
incb
shll
fiadds
mov
adc
enter
mov
lret
stos
in
xchg
dec
dec
push
aam
or
jnp
call
leave
sub
pop
int3
ljmp
fwait
faddl
fcomps
xor
or
adc
sahf
mov
dec
sub
push
lea
in
cmpsb
icebp
lea
aad
jno
push
push
mov
call
rol
xchg
sbbb
or
push
fnstsw
sub
fisubl
add
fdivrs
or
iret
push
mov
test
pushf
shlb
xor
jns
and
or
mov
popa
mov
and
and
pop
push
add
shr
ret
and
sbb
push
scas
jnp
fnstsw
cmp
adc
sarb
bound
scas
sti
adc
test
or
repnz
mov
scas
push
cmp
popa
xchg
stos
test
sbb
scas
rclb
sub
jno
mov
mov
inc
and
outsl
iret
je
iret
in
jnp
push
or
sub
mov
inc
pop
daa
push
xchg
sub
f2xm1
jl
or
sar
xor
jl
pushf
mov
nop
sub
test
sarb
inc
mov
sub
stos
or
fcoml
and
jo
decb
popf
lods
aas
gs
popa
jg
xchg
frstor
cmpsl
repz
js
add
xchg
dec
push
scas
xchg
insb
addr16
lahf
or
fisttpl
lock
pop
inc
mov
popa
mov
mov
lods
dec
lret
imul
stc
lea
aas
pop
cmp
jno
add
mov
adc
shll
mov
dec
ja
test
and
addb
movsb
push
ss
push
xchg
mov
inc
je
sbb
sarl
andl
pop
sbb
push
add
mov
fmul
and
adc
mov
int
pop
xor
cmp
popf
fsubp
in
xor
psubsb
mov
add
inc
inc
rcrb
add
and
pop
mov
je
pusha
xchg
mov
sub
pusha
jo
adc
idivl
cmp
cld
sbb
xchg
iretw
andl
jnp
jne
push
mov
xor
or
fs
lret
sbb
addr16
out
jns
xor
adc
movsb
pop
xchg
push
mov
or
fnstenv
inc
sbbb
cmp
dec
pop
lods
push
or
daa
push
mov
sbb
ret
sbb
iret
dec
cmp
pusha
cltd
add
adc
imulb
ja
lcall
mov
jo
pop
int
lods
push
xor
imul
jbe
xchg
icebp
push
out
dec
mov
push
mov
sub
dec
ror
jge
out
push
lcall
shrl
mov
dec
sbb
jle
lock
testb
cmpsl
jmp
mov
insb
jae
xchg
iret
xchg
arpl
call
imul
add
pop
jo
cmpsb
inc
loop
cmpsl
dec
sbb
jo
and
and
insb
pop
and
test
in
or
push
push
inc
adc
adc
jo
mov
das
push
in
scas
fldl
ss
imul
pop
cmpsb
xor
mov
xchg
sbb
push
sbb
das
mov
add
test
jle
ja
mov
arpl
mov
mov
icebp
xchg
jle
movsl
xor
fsub
mov
dec
insb
push
movsl
mov
sarb
mov
cmp
jle
insb
sub
scas
xchg
xor
cmp
loopne
mov
sbbl
test
and
scas
cmp
push
negl
push
cwtl
enter
push
sarl
cmp
frstor
pop
pop
xchg
xor
shrl
ss
lods
jno
inc
add
xor
mov
iret
jbe
data16
out
xchg
imul
je
mov
addr16
in
test
jbe
or
xchg
sub
jns
daa
pop
sbb
mov
repz
xchg
pop
pusha
pop
in
leave
sbb
sbb
cltd
lret
test
add
xor
insb
jmp
ss
insl
and
stos
adc
cli
push
sub
mov
add
mov
sarb
ja
pop
mov
mov
les
sub
sahf
and
call
push
cwtl
push
cwtl
repz
push
ret
jne
mov
push
mov
lahf
shr
movsb
mov
std
aaa
stos
enter
mov
xor
aaa
jnp
idivl
mov
jge
lcall
das
pop
cs
ficomps
xchg
mov
or
lahf
adc
cmpsl
fwait
jne
push
add
jmp
mov
shl
jp
popa
mov
fs
testb
push
js
daa
sar
loope
in
aad
hlt
shl
sbb
xlat
movl
jns
cmp
mov
enter
pop
xor
loopne
out
mov
sub
cmpsb
adc
lret
xchg
dec
push
and
fdivl
test
adc
pop
fildl
cwtl
pop
divb
xchg
xlat
mov
arpl
imul
jle
outsl
in
and
and
movsb
add
xor
test
jae
std
fwait
test
fidivs
negl
insl
or
int
inc
inc
sti
sub
or
or
add
push
mov
daa
movsb
sub
add
movsl
xor
dec
ljmp
sub
xchg
testb
rcll
aad
aas
xor
push
bound
or
xor
or
fdivrp
test
lahf
xor
pop
mov
shr
mov
dec
mov
adcb
js
sarb
out
ljmp
repnz
hlt
jecxz
out
mov
sub
jg
push
xor
popf
sub
clc
in
sub
filds
popa
and
sarb
mov
dec
rcrb
shrl
cltd
aam
dec
and
xor
push
dec
lock
and
mov
lock
fwait
mov
fidivrs
aad
cwtl
sub
mov
jl
pop
lods
add
push
adc
push
adc
cltd
mov
sbb
loop
ds
pop
jg
into
lods
cs
lahf
fldpi
xor
sub
insb
dec
rorl
fcmovu
and
mov
cwtl
mov
imul
mov
aam
into
enter
cmp
or
add
icebp
push
push
cli
mov
test
add
push
aam
in
jmp
fisubrl
repnz
lret
xchg
test
nop
cmp
xchg
pushf
mov
js
mov
decl
adc
sub
push
pop
inc
xlat
int
bound
rorb
cwtl
push
aam
push
or
arpl
push
mov
inc
jmp
lds
ljmp
and
leave
into
cmpsb
and
xchg
imul
sbb
or
lock
sbb
xchg
push
inc
rcl
mov
jne
or
in
icebp
jle
push
sub
jmp
jl
cwtl
sbb
pop
fchs
push
scas
aaa
mov
jmp
lds
idivl
mov
in
jge
pop
iret
push
adc
cld
jg
lahf
sbb
push
cmpsb
sub
dec
sti
imul
mov
mov
xchg
outsl
inc
psraw
sti
jno
stos
and
das
out
xor
mov
cmp
inc
xchg
leave
sahf
mov
ds
add
mov
cld
stos
int
xor
imul
push
dec
sbb
in
xor
lods
and
inc
push
cmpl
xchg
cltd
loope
inc
xchg
inc
jg
push
pop
pop
js
test
mov
leave
jb
scas
jno
jnp
fcomi
push
gs
sub
sbb
lds
aam
sub
xchg
pop
popa
mov
lock
inc
mov
mov
sbb
std
xchg
loop
push
adc
enter
ret
sahf
dec
data16
idivb
stc
pop
fisttpll
adc
lea
aad
cld
test
ret
je
push
or
mov
imul
jmp
enter
lcall
shrb
pop
jae
stc
mov
xchg
xchg
sbb
je
mov
test
in
xor
outsb
jge
add
pushf
pop
pop
mov
cmp
icebp
mov
inc
xlat
rorl
adc
and
push
es
test
inc
dec
dec
dec
jp
aaa
inc
mov
inc
cmpsl
imul
adc
sti
enter
and
imul
push
popa
aaa
adc
int3
fldl
shrd
or
xchg
add
xchg
stos
dec
add
mov
jbe
pop
jmp
mov
mov
xor
mov
aam
repz
jmp
addr16
fdivr
adc
inc
jns
push
push
nop
test
inc
pop
dec
jne
stc
mov
stos
xor
fcomps
xchg
leave
dec
nop
ja
stos
adc
into
add
xchg
dec
sbb
sbb
std
ljmp
fld
mov
mov
out
stos
test
int3
jg
and
aam
arpl
push
xor
mov
jae
xorb
add
or
xor
das
pop
jp
mov
leave
mov
rorb
add
xor
cmpsb
cmp
ret
inc
push
out
sbb
in
gs
test
clc
cmp
pop
fwait
mov
pop
sub
sbb
mov
pusha
push
cli
sarb
adc
sbb
out
xlat
xor
jns
sub
mov
inc
push
loop
lcall
mov
aam
add
mov
pop
mov
roll
movsl
js
jg
sahf
push
lock
in
lods
neg
inc
push
jmp
mov
push
mov
and
push
lahf
mov
cli
ficompl
shl
mov
lret
stc
sbb
inc
fadd
cli
arpl
iret
shrb
pusha
aas
mov
int
repz
rcll
test
lcall
sub
sbb
movsl
and
mov
ss
or
mov
adc
loope
xor
sbb
ljmp
jecxz
and
js
mov
out
mov
out
testb
mov
xchg
jecxz
addr16
pop
xchg
xchg
or
fildll
sbb
clc
and
fiadds
and
jge
movsl
imul
ss
pop
cwtl
cmp
cmp
mov
push
repnz
ret
mov
ljmp
cmp
rcll
jle
enter
in
in
jmp
lods
cwtl
mov
jp
mov
rolb
mov
sti
and
adc
arpl
dec
out
or
inc
inc
pop
mul
mov
sbb
dec
movsb
int
ss
pop
repz
xchg
sub
imul
jecxz
loopne
div
lret
cmp
pop
std
jle
mov
xchg
stc
sti
mov
add
rcrl
push
mov
and
leave
push
pushf
ret
dec
lcall
and
pop
xchg
mov
adc
and
imul
jo
sar
mov
mov
out
inc
mov
in
and
push
leave
dec
mov
jmp
add
push
aas
mov
mov
cmp
inc
cltd
pop
inc
hlt
mov
std
rcrb
cmp
bound
dec
mov
jnp
adc
int
call
or
mov
xor
lea
ja
out
adcb
in
shlb
std
adc
mov
add
push
testb
sbb
or
or
ret
xor
pop
xchg
xchg
test
xchg
inc
pop
cli
ret
cmp
mov
repnz
lea
rorb
fisttpll
test
rcrl
subb
mov
cwtl
or
xor
sti
in
mov
out
sbb
ret
cmp
xchg
mov
andl
cmc
jbe
rclb
xchg
in
and
pop
outsl
cmp
dec
push
dec
outsl
ss
movsl
jmp
xchg
pop
cmp
cmp
add
not
xchg
out
int
scas
xchg
pop
or
mov
aad
sbb
js
inc
adc
shl
pop
leave
arpl
or
cmpb
mov
mov
mov
aaa
es
sbb
test
cmp
fnstcw
cmp
sub
cmp
sub
stc
std
stc
adc
cwtl
adc
sbb
adc
les
mov
in
movsl
or
test
push
loop
xchg
pusha
add
mov
sub
pop
cmp
xor
ljmp
push
xchg
out
push
pop
shlb
add
enter
pop
sbb
xchg
hlt
ss
imul
sub
sbb
stos
ss
repz
sarb
pop
jp
test
es
push
cld
sbbl
mov
push
adc
movsb
and
mov
adc
repnz
mov
pushf
cli
xchg
jg
subb
in
and
add
testl
jge
movsb
or
and
sub
loopne
adcb
adc
fucomip
test
sahf
dec
js
daa
call
fistps
mov
sbb
les
loopne
je
lcall
decl
mov
push
ffree
pushf
rcrb
dec
inc
sub
or
loop
rorb
pop
insb
dec
stc
mov
jns
add
pop
das
mov
xchg
in
popf
ret
cmpsl
lods
pushf
cmp
cli
add
mov
addb
pop
sarb
icebp
fwait
push
decl
cmp
mov
push
popf
mov
inc
xor
mov
sbb
sarb
cmp
movsl
outsb
adc
jne
out
add
mov
pop
jmp
mov
popa
fdiv
pop
xchg
cmp
mov
cltd
out
cmp
mov
pusha
mov
pop
int
or
add
out
insl
mov
xor
ret
scas
adc
xor
add
or
sub
imul
sbb
jb
je
out
mov
adc
mov
xchg
fdivs
add
jl
test
aaa
nop
jns
shll
pushf
mov
pop
and
iret
dec
mov
pop
sub
aam
lret
mov
jg
cmpsl
push
and
outsb
sub
mov
rcll
add
mov
imul
loop
mov
mov
jns
ret
out
daa
sahf
ret
jno
and
xchg
mov
mov
and
cmp
gs
xchg
stc
add
jl
fcompl
mov
jns
push
inc
clc
stos
sti
std
mov
xchg
shrl
call
jmp
add
cld
cwtl
loop
das
icebp
into
cmc
xlat
and
in
inc
or
lea
sbb
xchg
repz
cltd
negb
idivb
add
lds
sbb
out
jmp
and
icebp
enter
fxch
cs
mov
rcll
scas
and
jnp
pop
mov
aad
out
sbb
adc
bound
cmp
movsb
ret
xchg
pop
mov
cmp
mov
adc
cmc
data16
push
pop
lea
pushf
xchg
xchg
push
pushf
cmp
mov
repz
pop
xorl
sub
cmp
cs
call
cmp
dec
movsl
int3
push
imul
mov
and
aam
outsb
mov
fistpll
fadd
test
mov
mov
test
and
xchg
ss
movsb
mov
add
lret
mov
sbbl
ja
jbe
cmpsl
sub
adc
jne
iret
jne
and
mov
aad
pop
out
xor
add
jl
sub
popa
inc
mov
mov
call
cmp
mov
push
gs
cmp
cmpl
lods
das
add
aam
into
jnp
loop
pop
mov
push
pop
xor
sbb
inc
xchg
divl
cmp
das
ficomps
rol
sbb
pusha
mov
outsb
sbb
in
xchg
add
xorl
pop
xchg
jge
sarl
dec
or
inc
add
inc
jb
lds
push
andb
inc
xchg
or
rorb
or
sahf
push
fadd
mov
adc
fmulp
clc
pop
mov
xor
fistpll
insl
in
mov
dec
lahf
lea
out
sub
orb
leave
cltd
push
in
jns
fcomps
rcl
jmp
sub
pop
push
fcmovu
mov
pop
adc
pop
mov
push
scas
sbb
push
mov
pusha
inc
ds
sbb
mov
pop
cs
add
scas
popa
cld
lahf
jl
xchg
adc
sbb
scas
fildl
pop
cli
inc
pop
scas
xlat
and
mov
aad
push
and
hlt
dec
imul
dec
sahf
pop
scas
xchg
ficomps
fldenv
or
jbe
mov
push
mov
mov
xor
adc
sahf
dec
test
inc
enter
add
popf
pop
cmpsb
outsl
sahf
pop
arpl
sub
xor
hlt
add
jns
ss
jecxz
into
push
stos
mull
jecxz
adc
shrl
lcall
push
sub
nop
and
shlb
cld
mov
loop
adc
dec
add
fsubrs
movsb
xor
dec
push
push
ljmp
mov
dec
mov
inc
inc
lret
fistpl
pop
test
xor
out
xor
popa
or
lock
mov
sahf
push
or
in
pop
ja
or
fs
iret
or
push
outsb
and
inc
hlt
and
dec
jns
xchg
ret
mov
ret
jb
mov
pop
adc
ret
arpl
frstor
dec
add
inc
cwtl
cli
fcmovnbe
rcrb
negb
jg
xchg
jns
ss
xchg
cli
dec
adc
mov
int3
insl
mov
sahf
aas
sbb
scas
push
movsl
push
xor
daa
and
add
and
jmp
xchg
pop
cli
xchg
daa
lahf
ds
in
inc
mov
fdiv
into
mov
xchg
arpl
sub
pop
test
dec
andb
iret
aad
jbe
xor
xor
mov
cli
sub
fld
std
movsb
inc
jg
push
dec
data16
orb
loop
add
pop
xchg
pop
push
outsb
aad
and
packssdw
inc
jp
es
lds
mov
dec
rclb
add
push
xor
in
inc
adcb
fimull
test
pop
or
mov
xchg
mov
popf
in
add
hlt
stos
jmp
popf
xlat
xchg
xor
inc
xor
adc
xchg
es
or
xor
insl
scas
sub
and
out
into
dec
aaa
adcb
pop
xchg
jae
bound
sbb
xchg
sbb
inc
test
mov
sbb
test
je
adc
out
stc
sub
adc
dec
loope
push
cmp
into
mov
movl
mov
jecxz
cmp
ret
mov
cmpsb
xchg
sti
mov
ds
cmp
xor
shll
mov
scas
jb
test
jle
mov
data16
sbb
adc
into
mov
add
xchg
xor
cmp
repnz
gs
lahf
outsb
mov
cmp
ss
sahf
fildl
dec
jae
adcb
cmp
inc
cmp
sub
sarb
cmpl
aaa
sbb
es
mov
sbb
jo
xchg
aad
or
push
es
repnz
gs
jmp
add
fwait
ljmp
inc
adc
push
cs
mov
popf
lods
xor
add
stc
sub
flds
xor
mov
or
iret
mov
mov
jecxz
rcrb
xchg
leave
add
push
jl
lds
ret
je
xor
mov
and
div
or
cmp
icebp
daa
je
push
repnz
aas
ja
xchg
adc
jmp
cmp
cli
and
adc
pop
shll
and
sbb
shl
push
mov
push
inc
insl
pop
push
and
shll
adc
inc
cmp
add
adc
add
xchg
cmc
add
xor
inc
sub
in
cs
push
stos
ljmp
jmp
add
out
lock
les
pop
sub
mov
add
add
pop
lret
push
and
xchg
ja
jge
das
sub
movsl
mov
das
andl
call
adc
xlat
leave
fcoms
lret
cmp
mov
bound
stc
shlb
cmp
fists
testb
stc
push
fs
das
adc
in
push
push
push
dec
xor
popf
push
in
mov
or
loop
or
push
mov
scas
xor
jp
fwait
mov
lds
in
sub
into
gs
add
rclb
popf
out
xchg
inc
mov
test
fst
vmread
push
pop
mov
mov
cmp
in
aam
mov
cmc
jno
mov
loopne
mov
pop
xorl
daa
push
into
and
arpl
xchg
inc
cwtl
lea
shlb
mov
mov
sbb
jbe
ret
xor
cmp
data16
in
negb
jg
icebp
sbb
stos
stos
pop
icebp
cmp
mov
add
mov
scas
mov
mov
lods
aam
add
popf
and
push
popa
xchg
out
inc
adc
mov
xor
xlat
arpl
sub
loopne
repnz
out
test
not
cmp
sub
xchg
ljmp
pop
adc
jecxz
loope
in
jge
icebp
stos
jno
incb
xchg
mov
xor
popf
cltd
icebp
pusha
jge
in
adc
push
push
adc
movsl
inc
daa
cli
das
stos
push
nop
dec
pop
adc
inc
cmc
lcall
jo
pop
fs
aad
test
mov
pop
fcomps
sbb
xchg
icebp
jp
xchg
pop
jg
test
addr16
cltd
mov
push
test
pop
fistpll
shlb
insl
pop
rcrl
cmp
mov
xor
xchg
test
push
jb
lods
pop
hlt
les
arpl
push
mov
or
jno
iret
or
and
cmp
pop
jbe
aam
aaa
push
and
jnp
xor
int3
int
adc
push
and
mov
das
rcl
inc
outsb
or
or
lods
xchg
test
cmpsl
cmp
mov
pop
and
and
aaa
lods
adc
mov
addr16
mov
pop
pusha
mov
enter
pop
into
jecxz
sbb
outsl
cmp
pop
push
mov
cmp
xchg
xor
inc
aam
cmp
pop
cld
sbb
pop
fistps
mov
jg
decl
ret
and
pop
xlat
and
jl
xchg
push
rcl
xchg
push
stos
in
sbb
pop
sbb
mov
mov
lea
stos
ja
mov
sub
cmpsb
rorl
outsl
imul
enter
pusha
test
push
and
inc
and
mov
pop
push
je
cmp
or
or
data16
mov
push
lcall
mov
jno
jmp
ss
lods
jle
es
cld
movsb
mov
push
fucomi
das
into
ret
cmpsl
mov
sti
ljmp
push
push
call
flds
lods
jb
mov
and
add
adc
mov
cld
cmp
push
mov
iret
jno
pop
adc
xor
imul
gs
js
shr
mov
inc
jnp
adc
lds
push
shll
adcb
shl
mov
adc
leave
pop
imul
in
daa
stos
imul
cmp
xchg
sub
xor
rcrb
mov
add
out
outsl
or
push
clc
push
cmpsl
add
mov
mov
pushl
pop
mov
mov
out
sbb
imul
xchg
pop
fimull
mov
rcrl
push
sub
gs
mov
out
xorb
add
push
das
ret
int3
push
cmpsl
ljmp
mov
movsb
mov
pop
inc
int3
in
sbb
pop
incl
and
std
add
js
lret
xor
daa
sbb
rcrb
or
int3
mov
jae
imul
mov
loopne
jb
ficomps
in
jmp
stc
mov
mov
mov
inc
mov
pop
sbb
adc
bound
jp
popa
popf
jmp
and
outsl
mov
jb
adc
inc
xchg
xchg
xchg
sti
mov
pop
dec
jp
fwait
or
inc
add
mov
imul
outsb
mov
je
into
stc
ja
negl
jb
fisubs
mov
insl
xchg
mov
cmp
aas
bound
mov
mov
pusha
mov
popf
and
in
sub
push
out
xchg
sub
insl
mov
scas
shll
cltd
add
push
call
jnp
inc
leave
insl
loope,pt
js
shlb
ljmp
cmp
fisubl
add
adc
or
mov
sbb
movsl
cmp
mov
add
adc
loop
adc
inc
jnp
in
and
popa
xorl
dec
xor
or
pop
lds
lods
sub
scas
inc
or
xor
pop
inc
jae
lret
push
cltd
imul
sbb
pusha
dec
shrb
jmp
xor
out
ljmp
pop
jnp
pop
fisubl
arpl
cld
lea
sbb
jge
mov
mov
mov
negb
ljmp
jmp
pop
icebp
movsl
sub
addr16
cmp
inc
lock
pop
mov
or
jne
imul
mov
push
adc
test
fimuls
or
mov
data16
movsl
fbld
mov
dec
shl
cmpsl
xchg
push
push
adc
std
cwtl
xor
movsb
push
fistl
addr16
cmpps
push
fldt
xlat
insb
cmpsw
repnz
mov
dec
test
insb
xchg
and
xchg
cmc
dec
sub
push
cs
inc
mov
pushf
lds
xor
mov
add
in
dec
push
fcomip
mov
adc
insb
cmp
and
sub
adc
gs
stos
orb
pop
lods
xor
sbb
dec
insl
sub
push
lahf
mov
sbbb
test
push
imul
js
scas
mov
jo
mov
rolb
cs
cld
stc
push
fisubl
cmp
xchg
andps
xchg
js
sbb
cltd
lret
push
xchg
inc
outsb
cmp
arpl
arpl
lret
add
nop
cmc
cmp
pop
add
xchg
xor
insb
pusha
out
scas
lods
cmc
jg
je,pn
stc
into
push
xor
xor
cmc
mov
inc
dec
stos
lds
jbe
in
add
repnz
out
sbb
ficomps
or
fnsave
loopne
data16
jbe
jae
leave
test
rclb
loopne
or
jae
push
out
pushf
cld
in
mov
movsb
loope
cmpsb
pushf
pop
pop
dec
dec
sub
in
idivb
arpl
xchg
xor
rcr
jnp
jge
add
pop
fcomi
pop
lock
sub
xchg
je
cld
sbb
stos
sub
mov
push
out
sarb
inc
mov
push
push
jecxz
jo
and
xchg
xor
adc
adc
push
inc
push
lock
jp
xchg
lods
xor
mov
mov
fdivl
jbe
mov
adc
inc
sub
sub
mov
fisttpl
pop
into
lret
mov
xor
inc
repz
jp
pop
sahf
stos
push
mov
xor
cltd
mov
mov
je
push
add
shrb
push
push
sub
int3
cmp
stc
cli
mov
xchg
inc
cs
es
cmp
mov
dec
and
sbb
mov
pop
sub
inc
inc
pop
jbe
decl
fbstp
jae
push
std
out
adc
sub
xlat
mov
divb
shrl
cli
pusha
jae
es
jmp
mov
fsts
leave
pop
jl
or
sbb
sbb
dec
pop
popf
aaa
mov
cmpl
sub
and
stos
adc
ficoms
les
gs
sub
push
mov
hlt
jmp
xor
dec
sbb
jp
int
iret
stos
xchg
push
jns
or
shlb
mov
mov
dec
popa
pop
scas
aam
sbb
sbb
fisubrs
jle
imul
cli
mov
mov
inc
cmpsl
pop
xchg
int
int
out
cmc
mov
sub
cmp
jg
xchg
lcall
xor
or
mov
cwtl
fldcw
push
fnsave
int
imul
loopne
xchg
jnp
add
adc
arpl
xor
mov
mov
cli
pop
dec
sbb
jecxz
rcl
loope
mov
mov
mov
pop
in
sbb
mov
adc
test
cmp
in
rcr
shlb
mov
jp
out
stos
and
jne
ret
outsb
orl
out
int
cmp
lock
jmp
loope
pushf
push
hlt
push
addl
mov
in
xchg
loopne
mov
lcall
pop
sbb
pusha
cld
jne
pop
in
and
jae
cmp
and
mov
inc
shll
or
xlat
sub
and
dec
sub
sub
hlt
adc
push
imul
dec
sahf
mov
pop
insl
cld
das
xor
sahf
pop
in
and
hlt
scas
decl
sub
in
sub
iret
ja
dec
addr16
out
ja
inc
mov
pop
fdivrp
cmp
pushf
addb
cmp
add
lods
jb
push
xchg
gs
mov
outsb
xor
adc
push
sbb
aam
or
jb
add
cli
fcomp
adc
mov
popf
mov
aaa
xorl
push
pushf
jae
mov
sti
leave
pop
aad
pop
mov
mov
add
shl
pop
stc
paddsw
inc
inc
cmp
test
mov
sub
cli
xor
int3
fnstenv
xor
nop
cmpsl
sahf
not
out
scas
jmp
xor
js
aas
dec
jecxz
daa
jno
enter
jmp
mov
je
ds
jns
adc
mov
test
into
lods
scas
into
mov
mov
or
lcall
insl
fdiv
ret
stc
and
adc
and
sbb
pop
hlt
push
leave
iret
dec
out
jnp
add
adc
std
lret
add
push
dec
add
mov
out
subb
loope
stc
jle
cli
fiaddl
sbb
push
or
pushf
adc
addr16
fdivl
lea
sub
pop
sub
enter
jo
cmp
repnz
dec
mov
lret
jecxz
sbb
cmp
repz
cmpsl
cmp
sub
cmpsb
test
or
xchg
inc
iret
rcrl
jg
setg
test
stos
stos
xchg
movsl
js
and
and
cmp
dec
xlat
jmp
xor
in
lea
inc
test
lcall
mov
inc
lock
add
adc
rol
mov
pop
sbb
mov
mov
or
in
mov
test
leave
mov
pop
cmpb
or
add
push
cmp
xor
or
lret
lcall
xchg
call
cmp
cld
iret
push
sub
cmc
sub
cmpsb
mov
aas
mov
addr16
add
or
mov
fisubrs
mov
fndisi(8087
adc
add
jle
push
pop
push
lods
add
rcrl
mov
cltd
dec
cld
fisubl
sbb
pop
scas
outsb
cmpl
in
cmp
inc
sbb
xor
pop
mov
dec
and
sub
lret
in
add
pop
cs
movsb
mov
adc
test
jle
outsl
dec
shl
call
xchg
stos
inc
xor
mov
xor
add
test
jmp
inc
incl
jb
sbb
mov
or
aam
dec
mov
sub
and
mov
cmp
push
cmpsb
fbstp
mov
pop
lret
dec
ss
push
cmp
cmpsl
cmpsl
fs
mov
add
push
lret
inc
xchg
inc
adc
popl
nop
mov
push
fs
push
popf
add
in
aad
pop
ror
int
aam
lods
sub
adc
jb
mov
pushf
pushl
jbe
xchg
or
cmpsb
xor
out
jmp
mov
push
es
ret
stc
ror
loop
dec
push
into
jge
dec
movsb
out
lea
scas
mov
adc
stos
cmp
or
adc
mov
xchg
hlt
cmc
jns
shrl
push
and
jmp
in
add
test
loopne
sti
or
popa
pop
in
and
push
cmp
testl
aad
insb
xchg
fstpt
jne
sbb
test
xor
adc
jl
mov
fs
and
notb
mov
subb
adc
pop
sub
in
inc
rclb
adc
pop
out
cs
insl
sbb
faddl
cmp
lret
icebp
inc
lods
in
outsb
sbb
loopne
or
xlat
jae
push
lahf
clc
jg
lahf
jg
push
add
ret
pop
xor
xchg
add
push
mov
je
fnstcw
mov
mov
inc
pop
arpl
mov
fisttps
pop
lahf
lds
lret
mulb
push
add
imull
js
pop
adc
or
pop
xchg
pop
ds
mov
xchg
loope
cmpsl
mov
int
adc
loop
negl
mov
jae
les
mov
lret
rcr
adc
and
js
xchg
add
sub
inc
outsb
ret
push
cmp
sarl
sub
dec
lahf
mov
dec
out
mov
nop
addr16
mov
push
sub
out
jmp
mov
jno
mov
adc
jl
icebp
mov
push
movsl
aas
push
not
cmp
pop
popf
and
lret
jo
pop
es
sbbl
sbb
xor
cmp
jl
cmp
fbstp
mov
inc
fsts
push
sub
cmp
je
jnp
and
pusha
adc
aaa
idivb
pop
cmp
or
loope
ja
test
lds
cmc
sbb
mov
push
xor
xchg
pop
cmp
or
pop
sahf
fwait
push
js
push
in
leave
xchg
lret
repnz
adc
dec
daa
lret
dec
jno
orb
test
cmpsb
aad
cmp
mov
sti
mov
jge
pop
xor
cltd
jle
cmp
dec
sar
jl
inc
mov
les
stc
mov
jmp
in
pop
push
jle
jbe
aas
mov
outsb
cltd
mov
lock
gs
jl
out
mov
pushf
cmp
nop
cmpsb
and
je
into
push
arpl
inc
lea
mov
dec
lods
mov
in
xchg
mov
lods
mov
rclb
jno
fchs
test
mov
cmpsl
out
loopne
stc
fistpl
ficompl
xchg
jno
mov
lahf
dec
pop
fstpl
mov
leave
xor
lods
sub
xchg
aam
pop
adc
aaa
push
cli
or
cli
pop
or
xchg
stos
iret
arpl
mov
jp
aas
and
hlt
push
mov
ret
orl
iret
push
cmpb
adc
out
inc
push
dec
scas
sub
inc
setne
xorl
das
in
cmp
jmp
xor
push
out
loop
jnp
imul
or
adc
xchg
jns
dec
addr16
xchg
bound
pop
pushf
or
loope
shlb
shlb
lret
mov
ss
jl
adc
add
adc
pop
fmull
cli
adc
loopne
fildll
pop
pop
mov
insl
push
stos
push
stos
inc
cmp
test
lret
jb
xchg
ja
fdivr
stc
add
rep
xchg
movsb
mov
out
lock
push
std
mov
sub
sub
or
sti
pop
jle
js
stos
sub
icebp
jo
sbb
mov
jecxz
fidivl
or
jl
iret
adc
mov
dec
dec
jecxz
mov
dec
adc
jle
test
gs
lcall
out
addr16
in
enter
mov
outsb
sbb
xor
xor
stos
inc
stc
xchg
rorl
test
imul
xor
mov
aad
or
test
mov
fisubl
sbb
stos
cmp
nop
insl
fisttpll
pop
inc
and
pop
aad
fcompl
pop
lock
test
adc
pop
call
add
xor
jnp
or
mov
xchg
mov
mov
xlat
mov
add
hlt
sarl
sub
push
mov
add
jl
xor
shl
adc
or
pop
lock
lahf
ret
lods
mov
jge
insb
xor
scas
or
cmpsb
xchg
bound
cmpsl
xchg
mov
dec
sub
adc
pop
jecxz
xor
push
adc
icebp
loopne
xor
icebp
push
movzwl
cmp
or
inc
jl
adc
sarl
loopne
inc
pop
push
mov
mov
mov
pop
mov
je
out
inc
pop
aam
lcall
xchg
sbb
xchg
scas
mov
pop
xor
jp
cmp
mov
mov
dec
std
test
or
xor
lods
dec
sbb
mov
ljmp
pop
inc
cmp
hlt
adcb
xlat
add
cmc
pop
jo
mul
cmpsl
data16
orl
sbb
cs
mov
test
sahf
and
jge
cmpsb
outsb
repnz
scas
sub
stos
inc
fsts
aaa
push
rorl
lcall
pop
or
sahf
fcompl
push
aaa
cmp
pop
jge
or
ret
xchg
push
inc
test
inc
add
lds
xchg
add
movswl
fsubs
lret
jge
pop
sbb
mov
pop
fldenv
test
sub
xchg
mov
adc
pop
test
sbb
imul
dec
push
xorb
mov
addr16
jecxz
jae
and
mov
push
jmp
ficompl
test
xchg
and
sbb
adc
bswap
mov
jnp
clc
push
cltd
xchg
ret
sub
iret
iret
mov
xchg
dec
xor
rorl
xchg
or
sbb
mov
lahf
mov
repnz
std
mov
sub
inc
loopne
loope
push
stos
fildl
xchg
jb
add
jle
or
add
sbb
sbb
fcoml
mov
xchg
cs
or
xchg
shll
sbb
push
pop
jmp
or
and
mov
xlat
outsl
shlb
out
xchg
es
cld
inc
mov
mov
mov
push
dec
fmuls
inc
add
push
sub
push
and
pop
in
pushf
xor
mov
sub
jns
mov
mov
ss
pop
cltd
xchg
pop
adc
mov
hlt
rolb
je
js
and
pop
mov
mov
test
pop
ret
insb
sub
jae
pop
dec
adc
imul
lds
mov
inc
fwait
xor
push
out
fwait
mov
xchg
xor
cmp
dec
push
sub
test
add
xlat
lds
inc
pop
leave
lods
push
xchg
sahf
xor
nop
xchg
xor
icebp
ret
lret
jp
xor
push
pop
push
test
cmp
adc
mov
je
xchg
mov
hlt
adcl
out
and
shr
xchg
shrb
bound
xchg
mov
adc
fidivrs
mov
xor
lret
fidivs
in
inc
stc
pusha
pop
push
popf
push
mov
and
pop
sub
lds
cmp
loop
mov
incl
mov
cmp
rorb
and
dec
pop
push
jg
xor
sub
imul
push
loop
dec
pop
lea
test
repnz
xor
push
pop
loop
sub
dec
pop
lret
or
push
jo
inc
adc
repz
inc
mov
adc
lahf
inc
and
rclb
push
adc
ljmp
adc
addl
dec
bound
mov
ds
push
outsb
xchg
add
outsb
adc
jecxz
loope
fidivrs
xchg
pop
pop
mov
loop
cli
mov
sub
inc
dec
pop
mov
clc
dec
icebp
cs
std
and
dec
sbb
ja
lsl
push
imul
jns
cmpsb
cmc
push
cmpsb
cmpsb
adc
xchg
scas
pop
loop
mov
sahf
push
adc
xlat
add
cmpsb
es
clc
push
dec
popa
dec
xchg
sbb
cmpsl
and
sti
pop
repz
imul
or
and
sahf
inc
pusha
or
leave
call
mov
add
sub
xchg
js
aas
sub
in
xchg
das
sbb
ss
sbb
cmp
push
add
or
adc
jp
je
push
lahf
cmp
scas
pop
sbb
ret
add
lods
imul
out
pusha
ret
fisttpl
add
test
mov
sub
fs
jle
enter
cmpsb
sbb
inc
adc
mov
push
das
adc
repz
xchg
loope
inc
cld
xor
lods
push
jns
pop
in
xlat
in
scas
leave
jae
mov
jle
mov
pop
mov
out
pop
xchg
jmp
insb
jle
xchg
xor
mov
loopne
stos
push
sbb
add
jle
xor
sbb
gs
ds
popa
xor
jo
inc
lods
dec
imul
out
scas
xchg
rcr
cwtl
xchg
xchg
adc
jge
es
cmp
inc
inc
or
or
fs
jge
and
and
mov
push
lods
push
mov
fidivl
pop
in
jp
test
dec
cmpsl
loop
pop
inc
inc
out
int3
shll
pop
cmp
adc
xor
in
cmp
aaa
icebp
mov
daa
jno
clc
insl
or
nop
cmp
adc
inc
or
or
addr16
push
mov
sbb
sti
and
push
incb
pop
in
int3
dec
and
adc
dec
xor
ret
testl
xor
inc
into
lcall
pop
sbbb
push
lock
aaa
mov
les
aaa
mov
jnp
aas
or
push
and
push
stos
jp
sahf
pop
cmp
cld
add
jne
push
js
lcall
bound
scas
stc
femms
ds
fistps
mov
add
push
mov
das
sbb
pop
out
sub
test
test
inc
mov
fdivl
arpl
loope
call
shlb
iret
adc
mov
dec
ficoms
out
jmp
inc
std
aam
std
xchg
or
mov
or
fsts
inc
lds
scas
pop
add
orl
mov
or
dec
je
dec
jns
add
scas
cli
lods
cmpsl
lods
in
es
icebp
cmpsb
and
pop
in
mov
jg
aam
add
and
add
les
sbb
test
or
lahf
imul
outsl
ss
fcomps
out
scas
jno
pop
inc
mov
mov
out
popa
mov
rcrb
inc
sbb
mov
fwait
push
loope
xchg
jne
or
repz
arpl
gs
aas
dec
jmp
mov
lret
popf
or
pop
add
mov
cmp
xchg
adc
push
mov
dec
out
sbb
in
bound
cwtl
add
mov
pop
into
sbb
punpckldq
jecxz
sub
into
or
add
cmpsb
mov
adc
adc
inc
lret
adc
cmpsl
repnz
push
adc
mul
xlat
cmc
jno
imul
mov
lods
pop
mov
ja
lahf
push
hlt
or
jns
in
mov
repz
divb
std
call
ja
movq
arpl
push
rep
stos
mov
mov
movsl
insl
pop
imul
pop
scas
or
push
cltd
mov
scas
pop
xor
dec
str
idivb
xor
rcrb
or
jnp
aaa
ror
sub
and
cld
pushf
mov
jmp
jge
shl
mov
ds
mov
iret
in
iret
pop
sub
mov
fists
pop
sbb
and
je
dec
shl
mov
xchg
inc
sbb
mov
cmpsb
add
fldl
mov
and
and
pop
ret
mov
into
test
sub
in
cs
outsl
dec
test
sahf
push
xchg
out
je
imul
xchg
scas
fs
add
cmp
loope
into
inc
mov
into
in
xor
out
and
repz
mov
sub
incl
pushf
push
or
out
mov
xchg
enter
and
sub
dec
add
add
adc
inc
add
ret
jnp
in
push
gs
aas
das
sbb
push
addb
mov
cltd
mov
sub
jecxz
push
cmp
jo
mov
stos
cwtl
xchg
pop
mov
lret
imull
jne
push
into
push
ss
xor
mov
push
lods
jbe
pop
pop
popf
pop
or
mov
es
sbb
pop
test
sbb
popf
enter
mov
es
out
js
pavgw
jmp
cmp
jecxz
test
ljmp
shlb
dec
pop
sbb
enter
aam
movsl
mov
push
fwait
pop
push
add
repz
lret
xlat
sbb
hlt
add
inc
hlt
mov
cmp
loope
mov
jecxz
pop
loopne
in
loop
add
cmp
jge
hlt
mov
pushf
cmp
ds
addr16
movsb
out
mov
ljmp
pop
inc
insb
neg
xchg
pop
insl
push
inc
xor
pop
out
pop
xchg
gs
mov
pop
rorl
xchg
mov
test
xlat
inc
in
xchg
jne
popa
mov
lret
stos
add
inc
test
jno
cwtl
adc
dec
mov
push
fs
movsl
mov
cmp
imul
fnstsw
lret
repz
daa
imul
leave
ret
lods
jle
in
ret
xor
out
hlt
imul
dec
pop
cwtl
mov
outsb
fs
int
jl
jnp
cltd
mov
jge
inc
popf
mov
push
mov
add
fisttpl
add
pop
push
insl
mov
movsl
cmpsl
in
shrl
push
dec
dec
jbe
movsl
fwait
mov
push
insl
or
in
sti
incl
imul
cmp
enter
lret
out
sub
sub
mov
lcall
push
pop
inc
gs
lahf
popa
push
fwait
icebp
mov
fistl
popf
cmp
lret
push
adc
loopne
lea
inc
inc
fdivr
mov
xchg
inc
pop
insl
xchg
in
popa
inc
xchg
stos
movsb
movsl
sahf
jl
or
in
enter
inc
xchg
cwtl
les
jle
inc
add
lea
repz
xor
test
hlt
in
icebp
sbb
xor
pop
inc
jmp
xchg
lds
cmp
fxch
inc
jecxz
fisttpll
xor
fbld
sbb
mov
push
xor
aam
adc
pop
lret
cld
icebp
push
mov
and
xor
sbb
or
mov
xchg
and
sbbl
sbb
lods
lcall
test
inc
sbb
pop
movsl
jno
xchg
mov
shrl
mov
adc
jns
pushf
cmp
loop
jns
cmp
xchg
lahf
mov
pusha
cmpsl
push
lds
mov
push
or
pop
xchg
fnstenv
jo
pop
xchg
aas
mov
add
add
into
push
pop
mov
out
or
mov
cmp
outsb
xchg
push
push
movl
push
pop
repnz
add
push
pop
sub
aaa
sub
rorl
jmp
inc
js
pop
cwtl
xchg
insb
xor
sbb
repnz
roll
lods
cmpsb
mov
ss
iret
aad
xchg
leave
mov
jmp
int
dec
mov
mov
incb
or
mov
inc
add
pop
and
pop
insb
cmp
inc
lods
mov
outsl
shlb
out
cmp
scas
jno
or
das
or
hlt
xchg
xchg
divb
rcrl
jnp
push
cmpsl
pop
lahf
jns
sti
loopne
loop
repz
mov
fmull
lcall
add
xor
mov
jl
in
inc
movsb
sti
pop
push
fidivl
adc
ficoml
inc
pop
ds
xchg
orb
xor
or
mov
repz
jne
sub
pop
push
fmul
ljmp
cmp
test
ss
cmp
push
ljmp
call
fimull
ss
inc
adc
out
xchg
ret
adc
mov
pop
cmc
leave
popa
xor
cmp
pop
add
or
sub
cmp
inc
jg
sub
aaa
jp
add
dec
adc
pop
sbb
ret
mov
jmp
shlb
fnstcw
pop
outsl
popa
xor
shrb
or
or
adc
leave
push
pop
dec
jbe
push
int
fdivrs
iret
inc
add
sbb
fadds
cmp
xchg
mov
in
add
insb
ljmp
inc
fs
enter
ja
jl
inc
add
or
cs
and
fstpl
or
stc
inc
xor
cmp
test
leave
mov
mov
jle
hlt
inc
popl
test
gs
lock
mov
aad
push
jmp
sbbl
test
add
adc
cwtl
mov
out
inc
mov
popf
mov
dec
pop
movsb
and
test
add
adc
imul
inc
inc
notb
adcl
sahf
lds
aad
xor
push
aam
sbbl
dec
sub
push
dec
sbb
popa
adc
fimuls
mov
cwtl
das
xchg
jle
lods
mov
or
and
mov
and
ja
and
xor
lods
mov
xchg
and
dec
ret
jbe
arpl
push
insb
adc
xrstors
js
pop
fnstcw
aaa
mov
stc
sbb
pop
cmp
out
sbb
ja
fbld
repz
aad
jns
cmpsl
mov
shll
das
or
aaa
cmpsb
push
adc
testl
in
mov
outsl
popf
mov
push
cwtl
lcall
fdivrl
xor
and
inc
sar
xchg
fiaddl
div
push
add
jle
jmp
push
rcrb
outsb
fbld
add
icebp
sub
mov
adc
pop
shl
dec
dec
inc
insl
loope
or
cmp
xchg
push
sub
mov
cmp
das
mov
stos
movsb
out
fists
dec
filds
adc
mov
iret
aaa
mov
pop
movb
outsl
lds
push
call
dec
sub
sti
jmp
shr
cltd
cld
loopne
std
push
pushf
into
xor
pop
mov
out
imul
cmp
cltd
cli
or
xchg
xor
jo
test
pop
dec
popf
cmp
test
retw
adc
xor
mov
push
stos
dec
decb
mov
mov
pop
shlb
mov
pop
and
dec
cmp
jle
sarb
add
pusha
andl
cmp
aas
mov
cmp
daa
leave
rcl
or
add
sbb
sti
mov
clc
stc
cmpsb
rcrl
hlt
int
push
ror
cltd
or
cltd
add
xor
pop
xchg
pop
xor
repnz
rcrl
and
push
clc
ret
ret
add
mov
mov
push
or
loope
pop
lds
fcmovbe
and
inc
and
sti
es
and
add
jle
insb
mov
outsb
and
push
cs
jmp
pop
add
cli
mov
lea
pusha
add
in
adc
sub
pushf
test
hlt
loope
ret
jecxz
mov
orb
xorb
sub
pop
fdiv
hlt
movb
adcl
mov
pop
push
mov
xor
mov
sub
and
mov
dec
sarb
cli
aaa
stc
das
push
jmp
roll
mov
fadd
inc
push
jl
jl
jnp
inc
cmp
jb
mov
dec
clc
ss
scas
cld
in
sahf
xchg
shlb
leave
shrl
movsl
in
ficoml
fists
scas
mov
jecxz
add
fs
adc
ljmp
pusha
shrl
cmp
fstpl
subb
jno
gs
lahf
cmp
mov
jecxz
mov
inc
cmp
xor
scas
cmc
clc
and
jnp
cmp
adc
mov
pop
fs
jg
mov
aas
inc
or
add
loop
pop
xlat
lds
add
lcall
pop
sub
dec
dec
mov
push
mov
ret
ss
pop
out
lahf
mov
dec
xchg
pop
mov
push
or
pop
or
xchg
add
mov
mov
dec
mov
pop
int3
int3
popa
lds
les
lds
ficomps
mov
jnp
mov
pop
iret
add
inc
xor
xor
jl
mov
push
pop
mov
jne
popa
and
in
mov
mov
arpl
push
hlt
int
orb
jl
sar
fildl
cmpl
repz
add
fisubrs
test
cmp
dec
mov
jmp
jo
in
gs
and
in
in
jae
out
aas
outsl
aam
scas
mov
imul
inc
mov
mov
dec
dec
cmpsl
lahf
mov
xchg
adc
dec
repnz
mulb
cmp
lea
push
out
adc
movsl
jmp
inc
stos
pop
mov
or
sti
pop
pop
inc
sub
mov
sub
or
fisttps
loope
ror
adcb
pusha
mov
shl
xor
and
rcr
mov
add
adc
fcmove
loopne
test
clc
push
sti
push
xor
push
pop
jg
sub
je
mov
push
pop
sbb
mov
shlb
inc
lds
mov
jmp
ja
pop
test
sbbl
jp
nop
dec
add
imul
scas
and
add
in
scas
out
pop
imul
hlt
pushf
dec
sarb
mov
fstpt
or
or
push
call
pop
je
push
push
icebp
frstor
dec
orl
addr16
xchg
cmp
lock
shll
cmp
and
jbe
dec
pusha
mov
rcrb
push
adc
adcb
das
ss
mov
or
or
pop
icebp
rcl
jne
test
sub
rcll
ds
test
add
or
jge
loop
jmp
fldl
or
mov
push
xchg
mov
sbb
in
popa
push
inc
jecxz
ficoms
mov
push
mov
cmp
loope
sahf
stos
lock
sbb
ror
mov
mov
imul
and
and
stc
movsb
aam
adc
lea
inc
add
fisubl
push
popa
cmpsb
or
or
push
mov
sahf
jae
test
and
fstpt
xchg
jecxz
jg
dec
sub
xchg
outsb
into
xlat
push
imul
jb
add
lods
fnstenv
jo
or
inc
test
mov
mov
in
test
shl
inc
inc
or
and
ss
cld
jne
jns
sub
in
gs
mov
jmp
filds
push
rcrl
in
inc
or
mov
jne
insb
lahf
push
pop
lods
pop
fimuls
adc
sub
and
xchg
std
addb
jbe
mov
into
add
js
xchg
movsl
lahf
inc
aad
mov
mov
and
into
push
nop
pop
aaa
out
add
das
xchg
jno
das
inc
jno
ljmp
repnz
lods
inc
fs
and
outsb
in
aad
adc
push
cs
test
dec
aas
pop
or
inc
int
add
repnz
push
pop
or
je
lret
shrl
js
dec
fbstp
dec
push
xchg
pop
subb
jo
in
cli
orb
inc
inc
xorb
in
push
outsb
mov
inc
push
jne
mov
dec
and
jae
aam
cwtl
adc
pop
lock
pop
js
mov
or
push
xor
pusha
sub
inc
sub
xchg
js
mov
push
xor
cmp
sub
testl
cmp
dec
jp
or
mov
dec
flds
jle
data16
lahf
xchg
xor
frstor
add
subl
repz
xor
aaa
gs
rclb
jle
in
xor
cmp
push
lahf
repz
pop
mov
or
int3
push
subb
int3
scas
jnp
aas
inc
xchg
jmp
shlb
pop
cltd
xchg
clc
imulb
mov
sub
mov
jb
outsl
inc
cmp
xor
mov
scas
nop
outsb
jle
xchg
lods
push
movsl
lock
repz
clc
fstpl
negb
xor
jns
mov
cmpsb
int3
aam
pop
dec
jo
adc
fs
push
scas
mov
mov
push
cld
dec
sub
adc
add
push
mov
loope
sbb
push
insb
loope
lods
fmul
lret
mov
mov
insl
sahf
push
aaa
incl
lock
js
xor
or
ja
mov
jne
inc
sub
jle
or
ret
pop
orl
iret
dec
dec
pop
push
sbb
aas
lahf
lahf
sahf
popa
stos
mov
and
xor
jge
push
mov
push
movsb
test
lods
adc
add
push
xor
push
dec
dec
or
stc
or
aad
lret
pop
in
xor
cmp
add
jo
add
lods
pop
mull
cltd
mov
xchg
cmpsl
cltd
imul
mov
lcall
das
sub
add
xchg
xchg
in
fs
sub
imul
ffreep
ret
mov
push
xor
ljmp
lea
ret
pop
rol
pushf
sub
push
sbb
fidivl
jle
cmpsb
popa
repnz
sarl
mov
subl
in
pop
ja
icebp
push
xchg
pop
clc
outsb
movsl
mov
xchg
fiaddl
in
xchg
sub
ja
mov
add
in
jae
ret
lock
jno
stos
jg
lahf
lahf
push
jp
add
adc
adcb
je
pusha
dec
ljmp
sti
and
enter
rolb
mov
fisttpll
cmp
fs
mov
into
outsl
mov
jns
mov
pop
pop
les
and
mov
sub
jb
sbb
fisttpl
movl
add
nop
inc
mov
cmc
add
mov
xor
or
out
mov
adc
ss
out
mov
mov
popa
shll
loop
dec
push
and
mov
outsb
xchg
and
push
sbb
mov
push
movsb
fs
push
test
mov
popa
pop
push
lret
add
std
jb
divl
repz
adc
jns
ljmp
pop
adcb
pop
xor
bound
dec
lret
stos
xor
jno
xor
adc
and
mov
lahf
xor
inc
dec
stc
jae
fs
jnp
sub
pop
out
sbb
in
roll
mov
or
stos
xchg
pop
xor
mov
movsb
sub
cld
jge
cmp
adc
mov
lods
testb
orl
sbb
mov
adc
and
inc
xchg
xor
inc
movsl
jmp
push
mov
out
int
pusha
scas
rorl
incl
cli
ficoms
push
sbb
xor
loope
movb
rorl
mov
scas
inc
xchg
lods
adc
aas
jle
sub
int
mov
in
and
inc
fcoml
pop
out
lock
mov
add
stos
test
insl
jnp
dec
push
sahf
dec
or
xchg
cli
orl
ss
pop
shll
loop
mov
jb
imul
xor
xchg
and
lcall
mov
jg
jp
jbe
imul
andb
jbe
andb
jmp
fmuls
cwtl
adc
xchg
fidivrs
mov
shl
add
dec
divb
rcll
js
enter
cmpsb
fisubs
xchg
ret
mov
xchg
mov
pop
jg
push
js
jb
scas
shll
push
or
pop
dec
pop
xor
sbbl
cltd
mov
fiaddl
hlt
push
or
xchg
mov
dec
sub
js
mov
mov
dec
loope
fnsave
xchg
or
imul
pop
push
or
sbb
test
push
xchg
jno
rclb
daa
inc
enter
jo
sahf
das
test
call
repz
push
push
fidivs
rcrb
push
pop
xor
in
jo
mov
adc
add
inc
dec
xor
hlt
movl
jnp
push
xchg
xchg
xor
sbb
dec
mov
sub
add
xchg
mov
call
icebp
mov
jge
push
xor
inc
pop
dec
aaa
mov
mov
sub
loopne
jo
scas
adc
push
add
hlt
imul
inc
popa
int
push
in
mov
out
xor
icebp
xchg
ss
sbb
xchg
gs
out
icebp
sbb
je
fsubrp
popl
pusha
cmp
sbb
sahf
jb
push
xor
ret
outsb
stos
addr16
sub
add
imul
jno
mov
pusha
notb
mov
push
nop
cmp
jl
pop
and
lea
movzbl
repnz
xor
cmp
mov
es
xchg
ljmp
out
cmp
lods
and
jmp
in
dec
or
int
jmp
lretw
cmp
pop
pusha
push
shlb
mov
jno
cmc
fiaddl
ret
inc
js
fstpl
icebp
data16
scas
pop
sbb
or
test
adc
or
jb
rol
cmpb
imul
orl
jge
jo
jb
test
aas
jmp
sbb
add
cmp
mov
nop
imul
mov
in
in
in
pop
arpl
fnsave
adc
jmp
add
ss
sti
push
xchg
push
adc
jno
lds
sbb
ss
movsb
dec
xor
lcall
sbb
cmpsb
sub
pop
sbb
psubd
sub
cmp
data16
dec
testl
dec
dec
pop
clc
inc
sub
movsl
and
xchg
inc
adc
fs
push
sti
xchg
ss
scas
jg
int3
sbb
hlt
xchg
mov
push
adc
icebp
inc
cmp
xor
or
int3
test
cmp
mov
fiaddl
test
lret
subb
fisubrs
dec
shrb
into
and
adc
adc
sbb
dec
pop
sub
enter
push
pop
bound
gs
fsubrl
enter
cli
fnsave
out
loope
xor
adc
out
sub
push
nop
push
mov
loope
sbb
imul
jg
sbb
ret
int3
mov
pop
sub
aaa
and
rcr
inc
aaa
mov
cmp
mov
sub
popl
aad
jnp
cmp
xchg
stos
xchg
and
xchg
popf
xor
inc
fldt
nop
cmp
push
lret
lods
pop
push
stc
sub
sub
clc
xchg
enter
loop
mov
xor
cld
push
js
loope
pop
leave
hlt
mov
sbb
push
std
in
sub
push
popa
and
pop
dec
sahf
sbb
mov
push
loope
addr16
dec
jle
cmp
out
stos
repz
daa
sti
dec
and
loop
jle
ja
mov
popf
clc
js
sbb
mov
call
data16
xchg
ss
imul
cmp
cwtl
dec
fstl
mov
cs
and
call
xor
cwtl
daa
out
xor
mov
mov
aam
jle
mulb
outsb
and
test
sti
mov
or
mov
push
mov
out
sub
gs
inc
cld
cld
lds
popa
pop
loope
aaa
test
lock
dec
pop
and
sub
fcoml
lock
pop
sar
xchg
shlb
ficomps
or
add
cmc
dec
shlb
iret
mov
xchg
lea
sub
xor
pop
scas
fstp
orb
in
mov
cmpsl
loop
sub
imul
iret
cmpsl
pop
out
out
outsb
divb
dec
jbe
addr16
es
leave
pop
jle
ja
push
jle
or
fsubl
xchg
pop
dec
inc
insb
fimull
add
sbb
sub
add
pop
test
xor
lock
jmp
cli
and
call
bound
cli
or
jecxz
outsl
jmp
lahf
dec
inc
mov
add
popa
jge
sahf
das
adc
stos
or
cmpsl
add
fwait
pop
dec
stos
repnz
mov
imul
pop
dec
test
addr16
mov
out
add
loop
jle
sbb
fists
in
sbb
push
lea
cli
addl
jecxz
pop
cmp
mov
push
push
out
ret
and
pushl
inc
mov
push
loope
pop
cmp
jg
dec
pop
push
mov
ret
cwtl
sub
rcr
sub
aaa
pushl
cmp
stos
push
lret
or
add
mov
jl
loopne
add
inc
add
jl
sbb
fidivrl
addr16
mov
push
push
mov
adc
fcom
adc
addr16
xchg
cli
mov
ret
jp
gs
mov
pop
inc
fs
les
cs
sti
mov
jge
xchg
sub
inc
hlt
fstl
es
pop
add
std
test
stos
std
ficoml
andb
stos
in
jnp
pop
xchg
arpl
or
std
mov
gs
sub
in
clc
dec
pop
imul
cwtl
addr16
push
mov
dec
out
int3
and
ret
int
aad
xor
mov
or
mov
into
je
sub
mov
push
mov
ret
inc
jae
int3
inc
add
test
add
inc
popf
scas
in
add
cld
sbb
mov
lret
jl
idivb
mov
pop
jmp
mov
xor
arpl
push
xchg
hlt
sarl
inc
insb
outsb
push
jge
aad
repz
in
xchg
xor
mov
aad
push
jge
mov
pop
cs
in
sti
out
je
push
nop
roll
dec
iret
nop
or
hlt
test
decb
mov
xor
fnsave
cmp
and
sbb
xchg
and
cmc
sbb
lea
jl
jb
arpl
fdivrp
jmp
outsl
rcrl
xchg
cmpsb
sbb
xor
out
insl
scas
repnz
outsb
frstor
in
scas
push
or
xor
mov
xchg
push
jmp
aam
xlat
dec
imul
into
insl
sub
cltd
and
test
cwtl
jle
test
inc
mov
loopne
mov
shr
sbb
adc
sub
jne
int3
iret
fldt
lea
out
add
shrb
stos
lcall
lcall
mov
rcll
mov
pop
mov
xor
in
fdivl
and
dec
sub
inc
sub
xchg
sbb
lcall
pop
in
in
call
ljmp
pop
jle
dec
or
inc
incb
popf
mov
jbe
or
adc
jle
orb
sbb
int
shr
jbe
pop
inc
add
pop
push
jne
mov
ljmp
fwait
cmp
loop
cmp
inc
inc
dec
or
jge
dec
push
push
jnp
and
adc
rcl
sbb
jmp
xchg
adc
jmp
pop
add
push
push
jmp
jns
jmp
pause
xor
sbb
subps
ljmp
add
insb
mov
cli
push
and
clc
sbb
jo
pop
xchg
aas
lds
pop
out
mov
sub
mov
rcrb
lods
iret
shlb
pop
iret
mov
sbb
or
jg
test
lret
or
fmul
test
sar
lods
or
daa
rolb
pusha
push
adc
cmp
fisubrs
scas
adc
cs
mov
xchg
test
adcl
inc
sbb
push
mov
jg
mov
fcomp
sub
sub
lret
hlt
ficompl
out
daa
arpl
dec
adc
movsl
dec
test
xor
ficoms
imul
mov
mov
pop
mov
stos
lahf
push
jno
out
add
and
mov
mov
jbe
mov
insl
scas
xlat
les
xor
nop
rcrb
int
cli
outsl
add
jmp
sar
push
fdivrp
js
sub
sub
and
pop
mov
repz
xor
sbbl
rolb
outsb
ja
and
push
cmp
leave
and
jl
cld
inc
rcrb
fbld
test
imul
ds
fstpt
popl
pop
lea
jne
sub
setnp
add
sahf
int
out
movsl
aaa
mov
cltd
adc
or
xchg
mov
in
lea
xor
xlat
scas
xchg
stc
repz
sahf
or
xchg
daa
add
dec
pop
mov
ja
push
mov
mov
pop
data16
inc
dec
aaa
addr16
xor
mov
sub
jmp
pop
jne
pop
cmpsb
jmp
add
or
std
popa
ss
dec
cmc
in
imul
aaa
or
popf
adc
fcoml
loopne
aas
je
mov
cli
ret
fs
push
int3
repnz
bound
push
push
cmp
call
xchg
stc
js
mov
call
push
imul
andb
fildl
adc
repz
adc
lods
aam
jb
add
out
mov
mov
add
enter
aaa
addl
dec
lods
outsb
dec
sbb
add
std
inc
push
or
mov
cmpl
jecxz
jne
mov
sbb
test
cmpb
pop
jl
cmp
les
lods
aad
cli
dec
mov
mov
sbb
mov
mov
cwtl
leave
das
xor
jmp
or
outsb
cmpsl
ljmp
call
fwait
stos
sahf
xchg
jae
sbb
jns
pusha
in
mov
inc
ret
push
decb
mov
cmp
add
xor
cli
out
dec
aaa
mov
inc
dec
stos
pop
mov
jne
and
xchg
or
je
push
xor
fwait
pop
cmp
xchg
push
fcompl
xchg
pop
sbb
mov
jns
ror
mov
imul
fs
push
inc
xlat
out
adc
arpl
pop
fld
test
ret
int
add
xchg
fs
xchg
adc
cmpsb
clc
push
cmpsb
sub
les
or
jb
mov
mov
cmp
xorl
insl
mov
shlb
sbb
test
pop
push
bnd
fadd
mov
int
mov
mov
mov
mov
iret
jmp
jle
enter
cmpsb
movsl
add
shlb
or
out
jne
pop
pop
adc
shll
jno
and
inc
test
jle
pusha
add
rcrb
mov
mov
jg
mov
notl
jp
rcl
mov
cs
or
cmpb
loop
jne
add
xchg
push
xor
movsb
icebp
jb
xchg
or
subb
mov
aad
js
pop
iret
inc
or
ds
js
imul
cmp
loopne
jge
lock
lcall
lock
fiadds
mov
sti
pop
xor
dec
push
popf
jae
add
inc
lret
cmpsl
push
xor
in
fwait
mov
jb
xor
adc
daa
xchg
and
inc
adc
imul
bound
xchg
sub
aaa
aad
stc
sti
movsb
cmp
ficoms
xchg
ret
mov
xchg
sub
mov
push
mov
aad
dec
adc
divl
inc
cld
in
or
iret
iret
mov
data16
iret
stos
test
xchg
loopne
adc
movsb
pop
pop
imul
cmp
pusha
pop
push
pop
push
push
inc
sub
leave
out
jno
in
mov
mov
ficomps
popf
sub
js
movb
inc
mov
aas
add
aas
scas
inc
xor
fs
cwtl
jge
sub
in
shlb
mov
dec
dec
ss
outsl
jg
xlat
negb
cwtl
xchg
mov
cmp
sbb
orl
pop
inc
sub
xchg
enter
mov
aam
imul
cmp
mov
push
mov
loop
test
push
xor
jp
dec
sbb
dec
push
cmp
inc
fsub
add
mov
xor
orl
mov
jbe
jecxz
inc
jb
jae
aaa
iret
or
lcall
cwtl
es
pop
pop
mov
orb
addl
and
mov
lcall
repnz
mov
and
fisttpl
sahf
mov
lret
lea
mov
or
addb
out
fstl
sbb
out
xchg
mov
aam
icebp
add
push
sub
or
rcl
dec
dec
hlt
in
mov
add
rclb
jno
orl
sbb
aaa
nop
pusha
adc
das
sbb
aas
imul
mov
out
ljmp
jo
sbb
lcall
mov
aad
cmpsb
shlb
in
pop
sti
mov
int
and
frstor
movsb
dec
mov
jnp
push
or
sti
push
sbb
sbbl
fwait
and
stos
cs
adc
shlb
stos
dec
int
out
mov
arpl
mov
push
subb
pop
les
dec
daa
sbb
mov
push
jns
mov
lods
cmp
cmp
imul
and
mov
push
pop
dec
or
shlb
iret
loop
mov
adc
sbb
int3
cmc
insb
enter
cmc
nop
std
das
or
fnstenv
mov
les
fcompl
or
int3
xor
cmp
or
sbb
cmp
fbld
pop
fdivrp
inc
fs
ret
sbb
std
xchg
dec
push
loop
cmpsb
in
dec
mov
aad
daa
jno
add
sub
arpl
dec
repnz
jbe
andb
fdivl
xchg
mov
mov
sahf
xchg
jle
xor
cmpsb
int
xor
jp
jge
test
mov
cmp
jb
mov
lods
pop
sub
add
sarl
push
andl
lret
lds
pop
outsb
cmpsl
int
xor
cltd
out
dec
jge
push
imul
push
ret
andb
push
inc
cmpb
xchg
adc
xchg
sub
jno
dec
sarb
aad
cld
outsb
aaa
cmc
dec
ret
pop
sbb
dec
arpl
or
or
mov
loope
cld
ror
inc
mov
dec
rolb
mov
xchg
cmp
inc
mov
popa
or
sbb
out
les
movsb
add
xor
fnstenv
add
xchg
movsl
popf
shll
pop
xor
add
mov
sti
and
les
loop
in
jne
leave
fwait
addr16
adc
filds
xchg
mov
pop
or
std
inc
push
ds
mov
test
jno
sti
inc
mov
scas
xchg
stos
insl
mov
xchg
setne
jmp
mov
inc
or
icebp
lret
adc
test
cmp
imul
stos
mov
pop
xor
lods
fdivrs
or
mov
cmp
pop
sub
push
add
and
stos
lea
mov
xor
jg
pushf
push
movsl
mov
dec
jno
js
stc
pushf
push
mov
les
aaa
push
sbb
push
xor
repz
and
insl
rorl
xchg
and
inc
mov
lock
aam
and
mov
and
cmc
das
sub
xchg
inc
imul
rclb
and
inc
movsl
sarl
dec
jp
in
outsl
xor
xchg
pop
mov
iret
int3
and
push
lret
loopne
push
adc
out
add
jns
sbb
repnz
insb
lods
mov
lahf
push
xor
std
mov
ret
mov
testl
mov
pop
pop
cmp
cmp
and
pop
ret
in
sbb
dec
and
mov
lock
test
add
scas
sub
xchg
mov
lds
cltd
mov
ds
sbb
gs
cld
mov
mov
or
aam
out
mov
push
ret
lods
ds
enter
cmp
in
xor
clc
enter
sub
lcall
iret
sbb
dec
and
leave
mov
push
pop
fs
push
test
cli
pusha
push
in
cmp
xor
out
pop
sbb
aam
push
jmp
daa
mov
cmp
in
ds
mov
add
mov
or
sbbl
les
icebp
test
daa
and
test
inc
add
cmp
sahf
mov
fwait
rolb
sti
sub
sub
aas
push
cld
lcall
icebp
push
mov
das
adc
cli
ljmp
pop
push
mov
mov
push
xor
xchg
and
push
ja
nop
mull
mov
int3
adc
addr16
push
fcomip
jbe
push
dec
pop
xchg
and
pop
mov
cs
popf
add
imul
mov
int3
adc
pop
nop
sub
dec
std
js
mov
push
icebp
jmp
jg
inc
and
mov
xchg
pop
fsubrs
pop
lds
fdecstp
push
or
mov
test
mov
push
push
in
cld
hlt
sub
shl
xchg
fsubl
nop
std
scas
push
orb
jle
dec
jp
pop
add
in
add
pop
lock
daa
das
bound
sub
enter
pop
mov
dec
fisttpll
push
cmpsb
enter
loopne
mov
fbld
je
cld
fidivs
aaa
pop
sbb
adc
inc
ficompl
sti
call
add
fcmovu
pop
cwtd
xchg
mov
int
push
aad
add
adc
movsl
aaa
je
ljmp
xadd
rcll
add
mov
xchg
mov
sub
roll
clc
push
jo
shr
and
xchg
inc
sti
jecxz
fsubs
loopne
test
aad
mov
popa
jl
and
adc
aaa
dec
mov
notl
aaa
subb
out
pushf
and
and
mov
cmp
rcrb
mov
mov
cmc
sbb
out
fsubs
aam
xchg
dec
leave
cmc
jge
xchg
das
xchg
iret
mov
sub
and
lret
divb
rolb
das
insl
jnp
jle
sbb
in
lea
cmp
mov
movsl
lret
clc
lcall
jbe
loop
cmp
notb
xchg
pop
sbb
jecxz
jb
push
nop
mov
popa
idiv
jae
xor
or
je
jp
dec
add
mov
cmp
adc
call
mov
cmp
insl
pop
aas
jle
cmpsb
iret
mov
and
jns
inc
mov
mov
arpl
cmpsb
pushf
add
data16
in
movsb
mov
adc
mov
movsl
dec
popa
in
push
mov
inc
and
sarl
xor
icebp
outsl
inc
cmp
jle
imul
sub
iret
mov
shll
ljmp
hlt
adc
pushf
pop
scas
cld
movsl
mov
int3
sub
mov
fnstsw
test
xchg
iret
stos
sbb
icebp
add
cmp
loope
popa
xor
mov
and
setge
nop
cmp
mov
jo
mov
popa
aas
sub
insl
or
aam
adc
jmp
sbb
pop
xchg
loopne
call
pop
mov
inc
fstpl
sbb
jno
call
rcrb
jo
and
lea
fxsave
icebp
push
inc
stos
stc
out
xor
add
inc
jmp
mov
cmpl
jmp
fnsave
mov
push
pop
inc
push
jl
jge
pop
and
cmp
pop
mov
in
jmp
mov
out
jbe
dec
in
out
dec
flds
bound
repz
adc
jns
pop
cld
lods
fwait
mov
test
andl
loope
xor
xlat
pop
and
icebp
jo
jo
dec
mov
or
mov
adc
sbb
mov
ja
inc
push
sahf
fcmovu
jno
fisttps
and
sub
sub
mov
sbb
mov
loope
scas
mov
arpl
xor
cmp
popa
push
inc
or
pop
sub
jecxz
test
out
push
outsb
or
rcll
or
cmp
push
mov
and
xchg
xor
adc
mov
in
push
dec
mov
ljmp
inc
test
repnz
jg
cmp
sub
xchg
jns
push
add
sbb
mov
mov
clc
mov
sar
push
and
mov
push
icebp
jecxz
mov
test
cwtl
clc
sar
jp
je
int
test
scas
jo
dec
fsubrp
mov
popf
repz
cli
push
in
cmc
scas
sbb
or
xlat
cltd
sbb
and
jo
push
or
loope
outsb
jg
mov
push
xchg
jge
dec
stos
bound
ret
mov
popf
divl
or
aaa
sahf
flds
enter
aas
dec
sbb
imul
adc
addr16
xor
add
sbb
stos
jns
add
adc
scas
xchg
fistps
andl
inc
add
or
mov
loope
xchg
outsl
lea
pop
mov
inc
mov
ret
dec
xor
pop
push
scas
stos
mov
hlt
pushw
jl
sbb
mov
test
out
lret
daa
popa
sbb
jae
jae
mov
jmp
mov
mov
pop
shl
aas
adc
arpl
es
gs
xchg
inc
jmp
sub
adc
je
push
xor
rorb
seta
test
ret
mov
jge
jmp
cmpsb
adc
push
mov
sarb
mov
icebp
adc
or
mov
push
xor
fmul
fstpl
out
js
xchg
push
sbb
xchg
fdecstp
fists
lods
sub
jmp
fsubr
add
mulb
ret
pop
fcmovbe
mov
mov
push
into
xchg
aas
and
aaa
jg
sub
pushf
and
xor
push
ficoml
neg
fldcw
mov
mov
pushf
dec
cwtl
andl
dec
std
adc
mov
int
pop
fistpl
int
aam
dec
roll
pop
pop
mov
sbbb
cmp
sbb
js
and
xchg
adc
mov
push
adc
mov
push
adc
xor
ds
mov
pop
and
dec
aad
inc
sti
int3
loop
out
mov
nop
mov
xchg
js
daa
xor
push
lahf
cld
mov
adc
scas
ret
mov
push
loopne
outsl
cmc
and
dec
sahf
aam
jnp
adc
mov
into
dec
or
scas
in
push
fwait
movsb
icebp
lret
adc
mov
lds
push
out
test
lret
jne
ficomps
xchg
test
add
mov
cmp
int
xor
cmp
cwtl
das
dec
les
insb
adc
push
pop
pop
push
fs
mov
ret
jns
repz
scas
fstl
jle,pn
cwtl
pop
jne
cld
lds
aas
fwait
inc
inc
nop
mov
in
inc
sbb
ljmp
xchg
seto
lods
xor
lret
mov
xchg
call
dec
cli
xor
dec
out
push
test
mov
lds
mov
outsl
push
in
sbb
shl
mov
repz
outsl
cmp
test
je
xlat
or
into
arpl
lcall
enter
push
sub
ja
outsb
ja
jne
cmp
pushf
scas
xchg
cmpsb
cmp
andb
fs
rol
movsb
stos
nop
test
cmp
push
push
add
std
add
in
xorl
and
out
or
frstor
cwtl
aad
mov
sarb
adc
push
mov
ficomps
pop
icebp
addr16
lods
sub
mov
ljmp
movsb
stc
popa
leave
or
mov
mov
and
xor
pop
call
xchg
mov
ret
and
out
lahf
out
xchg
push
xlat
jge
repnz
shll
das
xor
sbb
mov
movsl
int
aad
lods
mov
xor
mov
test
int3
cmp
inc
cld
stos
sarl
jns
xor
xchg
daa
popf
mov
dec
stc
insb
pusha
cmc
jmp
mov
andb
cmp
xor
mov
jnp
cld
add
push
sbb
cwtl
pop
add
mov
push
xor
into
imul
lret
in
xchg
and
es
or
call
sub
or
fcmovnu
test
add
cmpl
movsb
loop
imul
adc
push
stc
mov
push
sub
mov
loopne
test
jp
xor
sbbl
mov
push
fsubs
ja
test
jnp
icebp
enter
jo
adc
clc
sbbb
cmp
xchg
adcb
sahf
test
mov
fiadds
jb
inc
enter
lcall
jecxz
jae
loopne
inc
dec
lds
dec
mov
mov
inc
jne
jecxz
out
repz
in
pop
push
fsts
fcompl
cmp
das
mov
ret
xor
xchg
aad
adc
out
jne
scas
jnp
shll
sub
jp
mov
test
das
in
or
dec
xchg
sub
jns
push
aas
xor
or
push
icebp
pop
loopne
dec
popf
or
test
or
mov
fwait
loopne
adc
adc
insb
push
mov
data16
fwait
add
cmp
sub
jb
rol
sbb
sbb
scas
out
out
scas
loope
lds
jg
stos
and
add
dec
cmp
nop
sbb
fdivl
aas
mov
into
and
adc
adc
insb
inc
cmp
les
and
ret
pushf
sbb
push
cmp
and
inc
mov
enter
popf
out
rolb
jmp
ja
xchg
fsubrl
sti
adc
dec
out
fs
dec
pop
lods
xlat
lock
jne
inc
xor
and
inc
int3
shll
sbb
sub
out
pop
pusha
add
test
lea
inc
dec
je
cmpb
sbb
push
jmp
lret
cmpsb
dec
mov
or
jmp
and
lock
inc
xchg
stc
shrb
es
push
pop
cmp
out
mov
daa
sub
repz
scas
jnp
or
or
mov
cmc
jecxz
jp
loop
into
and
or
sub
lods
enter
xchg
imul
jnp
or
jmp
add
jo
mov
in
mov
sbb
imul
push
icebp
sub
inc
fwait
nop
mov
mov
sbb
mov
lret
xchg
out
push
cmpsb
pop
mov
mov
cmpb
push
lock
in
cmpsl
std
pop
mov
lret
loop
iret
pop
mov
scas
daa
mov
xor
or
inc
scas
jns
lea
subb
cltd
cli
mov
test
ret
cmp
xchg
cltd
arpl
fistps
mov
lret
mov
sub
pop
fs
sti
std
cmpsb
addr16
sbb
and
std
lahf
mov
out
mov
pop
mov
cltd
notb
arpl
cmp
adc
fbld
xchg
jmp
cli
xor
push
sub
push
push
in
clc
dec
lret
das
mov
and
sbb
ljmp
cmp
clc
cmp
mov
pop
push
dec
insl
repnz
pop
jno
sub
push
xchg
mov
mov
push
pop
or
mov
push
dec
data16
dec
shrl
lret
xchg
mov
cmc
imul
mov
adc
pushf
sahf
sti
ljmp
rolb
arpl
pop
fmuls
or
cmc
push
sbbb
nop
outsl
jmp
xchg
aas
add
sbb
xchg
cmp
imul
call
jmp
push
daa
ret
pop
or
dec
mov
ret
stc
xor
xchg
pop
cmp
mov
adc
push
mov
adc
sbb
xchg
shl
mov
add
push
ret
and
jb
cmp
dec
adc
sbb
insb
loope
xchg
push
mov
pop
ficomps
sbb
fstpl
outsl
ret
push
in
xchg
out
aas
ss
enter
imul
fcoms
sbb
jg
pushf
rcll
dec
cmp
loopne
xlat
and
bound
or
leave
push
sbb
push
xor
and
call
sub
lcall
fistps
mov
cs
mov
dec
add
jecxz
mov
adc
leave
fsqrt
clc
sub
outsb
dec
push
jo
frstpm(287
rorl
cmp
fwait
stos
ss
sbb
xor
mov
pusha
shll
mov
jecxz
adc
cs
mov
in
add
imul
mov
rep
int
mov
into
shl
das
hlt
sbb
and
or
in
mov
cmpsb
jo
sub
test
sahf
pop
ret
sbb
test
push
loop
outsb
or
push
inc
sub
in
adc
and
add
mov
lret
pop
call
jno
test
and
adcb
ret
loope
dec
ljmp
loop
push
push
add
fsubrl
aam
lods
pop
mov
mov
negb
int
mov
movsl
aad
xor
sub
xor
cwtl
fdivl
and
test
arpl
and
dec
in
mov
and
out
push
sub
fpatan
mov
xor
pushf
in
xchg
or
sbb
je
sbb
cs
sub
movsl
xor
cld
clc
xchg
mov
mov
xor
dec
push
daa
pop
scas
in
inc
cwtl
jecxz
adc
sbb
mov
aam
call
adc
idivb
das
arpl
push
fdivs
rolb
repz
fmull
and
movsl
jmp
int3
push
sbb
idivb
jle,pt
out
push
sbb
outsb
xchg
cmp
push
push
add
call
lea
loopne
mov
je
sahf
lret
iret
push
loope
pop
pop
mov
lcall
gs
inc
inc
in
xor
pop
daa
lcall
cmp
cmpsb
loopne
scas
adc
add
mov
cltd
or
mov
loop
mov
gs
test
fnsave
psubb
fists
daa
push
sbb
ret
or
cmpsb
aam
std
or
out
insb
xchg
into
inc
add
repnz
xor
mov
daa
push
xor
and
fnstsw
inc
push
or
int3
xor
fimuls
stos
and
scas
xor
inc
add
ss
stos
rorl
xchg
test
dec
pop
testb
jnp
dec
scas
adc
xor
jbe
cmc
adc
adc
push
aaa
sti
fsubl
or
daa
ret
mov
call
popa
lds
pop
popa
sbbl
jne
cmp
cmp
mov
mov
iret
test
lcall
lods
insl
outsb
orl
insl
test
aaa
loopne
push
cs
jmp
arpl
xlat
fdivrs
ret
insl
fs
jecxz
cmp
sbb
xchg
push
js
push
jmp
and
xchg
leave
inc
out
cs
pop
in
sub
mov
sti
mov
and
repz
cmp
mov
punpcklbw
gs
repz
dec
cmp
ljmp
and
mov
mov
inc
nop
push
push
shlb
jo
mov
ret
push
jo
pop
push
mov
std
ljmp
loope
in
push
ficoms
stc
mov
divl
imull
cmp
or
mov
lods
je
dec
mov
mov
stc
nop
lock
sub
xor
xchg
and
cmp
and
mov
inc
movsb
movsl
inc
add
xor
int3
movsb
jbe
dec
add
mov
or
xchg
mov
pop
out
cmp
fistl
cmpsb
pop
ficoml
pop
mov
lods
adc
jmp
out
loope
repnz
xor
sbb
stos
nop
outsb
sbb
mov
sub
xchg
sbb
test
dec
and
xor
loopne
jle
fsub
dec
jb
movsb
rcrl
loope
xchg
pop
mov
jle
jle
inc
in
dec
insl
sahf
lds
addr16
or
xchg
fdivrl
loopne
jp
test
aas
jne
movsb
mov
aaa
jle
sbb
test
movsl
adc
sbb
hlt
popa
lret
or
loope
pop
fxtract
fidivrl
es
fiaddl
mov
negl
push
stos
add
rcrb
test
jne
dec
pop
cmp
push
jmp
xor
pop
or
jmp
jg
xlat
jecxz
push
into
jno
leave
mov
mov
call
add
push
insl
sub
pop
mov
lock
cmpsl
pop
sbb
aam
add
jo
out
shll
pushf
cmp
pop
pop
data16
xchg
inc
mov
mov
push
push
insl
nop
mov
fcmovu
lea
movl
pop
orl
cmp
clc
jnp
ret
ss
cmp
xor
and
leave
push
adc
push
mov
loope
or
cld
adc
iret
push
xchg
sbb
add
sub
adc
sbb
bound
test
test
enter
mov
ja
bound
or
jnp
push
mov
popf
shrb
mov
xchg
push
xor
sbb
fstpl
ficoml
popl
pusha
mov
xlat
sub
cwtl
std
cmc
ss
cs
rorl
fwait
cmp
push
pop
inc
mov
sbb
subb
pop
jecxz
in
mov
repz
pop
mov
out
xor
aad
cmc
mov
pop
lock
cwtl
jge
rcrb
js
jmp
xor
lods
push
out
test
xchg
out
loope
jp
xor
inc
sub
jns
lds
mov
cli
cmp
inc
loope
sub
or
inc
jg
icebp
fstps
popa
xor
mov
addr16
mov
je
pop
inc
mov
jg
sbb
fiaddl
and
cltd
aad
xlat
push
pop
mov
movsl
xor
push
cmp
fidivrl
setle
add
daa
out
mov
adc
orb
repz
mov
pop
xor
test
jg
jl
or
call
lods
jb
cli
mov
or
shrl
push
aam
mov
mov
cmp
push
dec
cltd
jo
ds
push
mov
dec
push
cmp
pop
mov
and
push
or
or
lcall
xchg
pause
adc
inc
sbb
in
jmp
hlt
push
jo
cmc
jnp
cmp
sub
pop
and
pushl
mov
loop
aam
and
xchg
push
movsb
into
push
fs
rcrb
mov
and
mov
test
iret
jecxz
popf
cmp
jmp
aam
pop
pop
jl
mov
xchg
popf
insb
fucom
xchg
dec
stos
popa
or
adc
out
les
mov
jle
mov
cltd
fwait
in
add
or
jne
xor
sub
repnz
outsl
push
dec
push
xchg
das
mov
mov
clc
sbb
stos
xor
movsl
sub
mov
sub
xor
addl
inc
mov
sti
xor
adc
jmp
or
mov
adc
cli
add
subb
push
enter
cmp
out
xor
inc
jbe
vmwrite
dec
sahf
mov
push
jbe
mov
jnp
cmp
dec
xor
fldenv
mov
mov
inc
andb
pushf
dec
aaa
aas
add
sub
push
mov
jl
pop
xchg
and
jp
mov
cmp
nop
in
fisttpll
jmp
aaa
sub
xlat
jecxz
sar
rcrb
mov
shlb
adc
andb
std
dec
xchg
and
jp
rolb
adc
sub
sti
xchg
bound
mov
lds
mov
aas
notl
outsl
xor
ror
xchg
push
mov
mov
cmp
gs
pop
fs
cwtl
loope
push
fisubl
or
int3
add
out
dec
stc
adc
jae
sub
negb
pop
or
dec
mov
fcomp
lea
mov
mov
pusha
stos
and
sub
enter
call
mov
arpl
aas
xchg
adc
sub
inc
pushf
loopne
add
jle
out
xor
fisttps
inc
data16
sub
ja
in
xor
outsl
xchg
push
movsl
ret
mov
test
push
mov
pop
xchg
adc
ds
mov
jge
mov
push
aam
pop
insl
sub
enter
pusha
sub
mov
push
cmc
push
mov
lcall
sbb
adc
in
enter
ss
cmp
flds
mov
dec
cs
pushf
cmp
jge
add
mov
inc
cwtl
lret
out
and
push
or
xor
out
out
push
cmp
sbb
or
jg
cmc
lds
pusha
xlat
cmp
cli
gs
js
adc
dec
sub
mov
sahf
add
inc
pop
in
sbb
xor
ss
inc
lock
outsl
fsts
mov
cs
mov
fs
cmc
aam
xor
hlt
jns
addr16
shlb
loopne
jp
cmpsb
mov
sub
jbe
dec
push
sbb
xchg
imul
push
mov
sbb
test
mov
out
add
shr
inc
and
adc
fcomps
jge
pusha
jp
adc
movsl
loope
mov
and
push
div
ja
aaa
mov
loop
js
testl
add
sbb
or
inc
ja
in
fcompl
out
jo
pop
pop
dec
push
push
dec
mov
dec
sbb
test
call
xor
data16
cmpsl
jo
aaa
cwtl
inc
hlt
pop
mov
lods
add
adc
push
loope
push
dec
cmp
inc
add
dec
sub
and
loopne
sub
pop
push
data16
adc
adc
push
inc
fildl
mov
decl
insb
pop
or
lcall
outsl
xor
mov
inc
jno
push
fldcw
in
or
and
jp
add
jl
add
leave
jg
lea
jp
ficompl
pusha
imul
pusha
inc
repnz
test
dec
mov
jo
inc
repz
repnz
pop
dec
inc
xchg
jnp
xor
sub
daa
pop
push
pop
ret
sbb
push
push
jae
addr16
sbb
subl
mov
dec
jecxz
fiaddl
mov
lahf
sbb
mov
leave
or
aaa
inc
out
dec
push
in
inc
or
push
adc
push
mov
xchg
push
fcom
aaa
int3
push
push
sbb
in
icebp
in
mov
cmp
xchg
mov
sub
jmp
loope
repz
pop
cmp
je
shrb
in
gs
aam
dec
fiaddl
fisubrs
pop
push
sub
in
gs
pushf
lea
icebp
shl
inc
cmpl
insb
lea
push
pop
jl
xchg
cwtl
loope
inc
sbb
xchg
fnstenv
mov
data16
data16
jo
imul
or
inc
outsl
pxor
scas
into
mov
xlat
loopne
jmp
out
and
jbe
sahf
ds
cmc
sub
std
or
addr16
shr
mov
cmp
push
dec
shrl
lds
push
sub
jecxz
jo
clc
sub
mov
fdivr
mov
scas
mov
xor
xchg
sub
rorb
shlb
and
sub
cltd
and
negl
fsubs
cltd
rorb
jno
or
mov
mov
dec
mov
xchg
in
and
mov
rorl
pusha
cld
and
jb
fsub
out
jl
bound
dec
xor
inc
xchg
mov
adc
mov
hlt
sbb
inc
xor
pop
jno
sbb
mov
add
arpl
jns
push
insl
jns
rolb
ficomps
jb
lods
stos
push
add
test
adc
dec
and
add
dec
je
out
jmp
adc
popf
icebp
cmpl
addl
shlb
aad
sbb
inc
mov
sbb
xor
xor
sub
inc
and
inc
dec
mov
and
gs
shlb
mov
jle
add
push
jecxz
imul
stc
adc
lea
xchg
cmp
out
and
push
mov
sub
mov
lock
add
mov
test
xchg
pop
incb
xor
das
cs
push
add
jbe
adc
sub
or
aam
cltd
jno
cmpsb
hlt
pushf
push
cmp
mov
das
push
clc
jg
imul
xlat
fbld
leave
lret
mov
loope
fimuls
cmovb
subb
in
gs
aas
dec
sti
negl
mov
inc
rcl
xor
ljmp
scas
dec
inc
icebp
fnstenv
stos
ret
cs
xor
jo
push
sub
and
push
adc
jecxz
pop
add
ljmp
cmc
shlb
lcall
and
inc
sbb
clc
jno
arpl
jnp
mov
dec
lcall
and
jmp
xchg
cmp
scas
cmpsl
arpl
fdivl
sar
les
rcll
adc
mov
sub
push
xchg
fidivrl
push
icebp
xchg
adc
aaa
jl
add
popf
or
pop
imul
push
or
test
pop
jge
insb
mov
push
gs
jns
and
addl
adc
and
aaa
push
cli
jnp
mov
mov
cmc
clc
cs
inc
push
ljmp
lret
mov
cmp
push
lods
aaa
in
int3
or
sti
lcall
sti
xchg
cltd
bound
popf
inc
jecxz
test
je
cmp
lret
and
mov
mov
inc
dec
pop
movsl
or
sub
or
out
mov
test
addr16
sbb
mov
jmp
stos
lds
clc
add
shll
push
pop
mov
iret
lret
out
in
dec
inc
cwtl
sbb
das
testb
imul
outsl
adc
sahf
inc
stc
xchg
xor
mov
push
jecxz
push
fistps
jge
call
js
jp
pop
push
pop
mov
pop
in
pop
inc
loopne
and
add
sti
sbbl
cs
mov
push
hlt
sbb
xchg
pop
push
xor
loopne
jbe
jo
push
lock
ss
insl
scas
fsubrl
add
es
rcrb
mov
sub
test
pop
sbb
fsubl
push
xchg
scas
cld
addr16
push
loope
mov
and
push
mov
int3
roll
push
lea
dec
stos
lods
aad
lea
jb
jo
xchg
xor
cmpsl
pop
lods
mov
hlt
sub
push
mov
push
repz
aas
insb
adc
sbb
pop
inc
mov
add
xor
or
mov
cmp
sarb
mov
mov
or
aaa
das
inc
into
xchg
dec
jb
xor
pop
insb
int3
loop
inc
out
insb
lock
add
adc
dec
std
aas
mov
sarb
xchg
mov
xchg
fistpll
lcall
cmp
std
adc
mov
pop
test
pop
sbb
jmp
push
dec
stc
jmp
mov
out
mov
jp
sub
inc
dec
sbb
pop
shlb
imul
dec
xor
pop
dec
sbb
mov
cmp
cmp
dec
fcmovbe
mov
mov
dec
inc
ljmp
pusha
mov
xlat
lock
loopne
fisubs
xor
jp
scas
push
subl
fcoml
fisubl
int3
stc
fisubrl
add
mov
pop
pushf
mov
int
rcpps
mov
inc
xchg
jmp
cwtl
ds
lock
inc
mov
fwait
pop
sub
dec
sub
imul
lret
jmp
outsb
out
jae
daa
movsl
jns
or
es
aas
jge
pop
add
xlat
jnp
test
push
cltd
mov
sub
jns
repz
push
outsl
addl
mov
es
scas
jo
rolb
xor
inc
xor
and
and
in
std
dec
mov
jo
div
push
sub
mov
adc
xchg
push
xchg
sti
nop
call
adc
in
clc
jg
pop
ss
mov
or
jnp
icebp
lahf
incl
adc
adc
cmpsl
cmc
or
cmp
clc
adc
sti
enter
fbstp
data16
xor
inc
or
mov
jmp
test
mov
lret
stos
pop
cmp
adc
mov
sbb
pop
fmul
rcrb
ljmp
pop
mov
fldl
iret
sub
in
dec
push
ret
cs
pop
xchg
in
xchg
jbe
movb
shlb
movsl
adc
test
jno
cmp
mov
xchg
lret
int3
aam
pop
nop
push
cli
popf
stc
test
das
xorb
add
fdivr
mov
push
nop
aaa
movsb
add
xchg
andl
push
nop
hlt
pop
add
inc
push
lcall
bound
mov
cmp
repz
jmp
decl
loopne
xor
cmp
inc
arpl
xor
lods
push
lret
imull
add
in
popa
xor
test
jg
mov
ds
aaa
mov
js
xor
xchg
sub
adc
data16
subl
add
jnp
ss
cmp
lods
sarb
cmp
mov
mov
subb
lock
sub
into
xchg
insb
pop
lea
sub
inc
fisubrs
int
inc
lods
shll
hlt
and
push
repz
dec
add
inc
push
adc
data16
insb
adcb
repz
dec
shll
sub
pushf
loope
fdivs
outsl
shrb
xor
push
xor
cmp
sbb
int
jbe
jmp
inc
frstor
push
subl
fidivl
clc
add
mov
sub
jg
fisttpll
orl
sub
jns
push
lds
xchg
outsb
fwait
xchg
jl
inc
js
and
addr16
aaa
cmp
dec
std
call
push
inc
xlat
ss
fists
rcll
daa
imul
and
sbb
movsb
xor
add
mov
fsubrl
xor
lret
movsb
imul
pop
adc
mov
shrl
ljmp
cmp
fisttpll
ja
fadd
push
popf
test
xchg
lcall
mov
mov
mov
push
add
sbb
in
pop
pop
cltd
pop
jo
inc
ss
iret
sub
out
pop
cmp
lods
imul
pop
mov
movsl
sub
push
lea
push
aad
mov
fs
icebp
and
jnp
out
das
xorb
pop
out
pop
mov
outsl
add
push
sbb
shll
jne
out
jl
sahf
pushf
hlt
outsb
sub
dec
popa
mov
mov
icebp
incl
xlat
jl
mov
into
mov
hlt
adc
sbb
pop
lret
jg
sbb
fistl
std
push
imul
jle
mov
xchg
mov
dec
xchg
inc
fwait
jl
sub
insl
mov
mov
pop
dec
shlb
mov
fidivs
jmp
push
inc
jecxz
enter
inc
adc
roll
ja
in
add
push
mov
mov
out
dec
dec
mov
daa
int
jmp
das
std
cmp
fucom
in
jno
push
es
cmpsb
dec
cmp
fstpt
push
mov
dec
sbb
out
add
mov
dec
jmp
sbb
sbb
xchg
cmp
adc
jns
dec
push
inc
movsl
aam
jbe
mov
mov
cmp
insl
mov
and
and
dec
mov
adc
scas
or
mov
inc
repnz
call
sub
inc
rclb
mov
loope
enter
sarb
lret
push
jg
lret
outsb
cli
inc
divb
xchg
adc
repnz
or
add
lods
das
sarb
in
shrb
xor
xor
xchg
cmp
scas
pop
cmp
pop
mov
test
andl
cmpb
gs
jno
fildl
fs
add
jge
dec
inc
std
movb
shl
cld
lods
and
fstps
rcll
dec
stos
xchg
add
inc
and
testb
sub
int3
adc
fistpll
mov
mov
sbb
or
pop
inc
scas
out
mov
lea
mov
addl
popa
mov
ret
test
mov
xchg
subb
jo
pushf
arpl
push
push
or
cmp
sbb
xchg
sbb
test
dec
clc
les
add
dec
mov
cld
xor
ja
xor
insb
sahf
out
arpl
xchg
jp
add
and
dec
jno
cmpsl
int3
push
shl
mov
outsl
add
and
cld
mov
test
ja
adc
fsubs
cmp
jbe
arpl
jbe
insl
outsb
mov
sbb
pop
fmull
addr16
adc
mov
xchg
cli
out
repz
or
insl
clc
xchg
mov
cltd
or
int3
xor
loope
add
adc
xchg
aaa
bound
adc
fcomi
sahf
outsb
imul
adc
mov
mov
sub
jmp
fadds
mul
nop
sbb
repz
xor
adc
adc
dec
aas
pmaxub
fsubs
popf
iret
jecxz
sub
mov
insb
es
sub
bound
loope
xchg
dec
sarl
mov
xchg
scas
rcr
lea
dec
aad
outsb
in
fsubrs
imul
ret
mov
in
subl
pusha
aaa
cmp
jge
cmpsb
lock
adc
mov
push
in
je
jns
aaa
push
push
mov
insb
movsb
cmp
mov
pop
rorb
cmp
ret
dec
adc
mov
shr
jle
movsl
push
mov
xchg
mov
test
dec
cmp
scas
scas
in
dec
in
orb
test
out
shll
mov
cld
ds
push
nop
cltd
std
xchg
outsl
fyl2xp1
cli
add
xchg
aas
arpl
xchg
fcmove
mov
jmp
sub
dec
stos
rolb
mov
sbb
jb
xlat
dec
ss
pop
or
or
lods
mov
loope
std
or
xchg
in
sub
popa
pushf
xor
xchg
movsb
mov
sub
push
sbb
push
lcall
xor
inc
xchg
push
mov
shll
mov
mov
insb
xchg
adc
iret
and
pop
sarl
andb
leave
jl
mov
xchg
mov
pusha
iret
xchg
and
mov
cmp
cli
cmp
dec
mov
push
fs
ja
mov
shr
push
xor
fistl
pushf
xchg
and
mov
xchg
mov
jne
ja
mov
cmpl
xchg
roll
das
xchg
in
std
fidivrs
add
sbb
popa
testb
mov
dec
in
dec
or
mov
out
mov
out
daa
in
inc
scas
int3
icebp
arpl
xchg
xchg
fdiv
cmp
data16
jge
mov
push
xor
int3
jo
mov
mov
je
lcall
jl
or
push
jle
pop
mov
xor
jnp
aad
in
scas
fidivs
rorb
cwtl
xor
out
stc
xor
dec
pop
in
inc
mov
adc
mov
test
mov
pmullw
fdiv
add
int3
cmpsb
cld
leave
sbb
dec
or
aaa
dec
mov
lea
leave
mov
outsb
stos
sub
sub
lock
inc
or
sbb
dec
pop
lcall
cmc
sbb
add
xchg
push
imul
push
neg
jp
sahf
cli
std
enter
mov
ret
sub
dec
pop
jle
jo
cmp
and
cmp
or
out
and
rcll
jl
test
lret
int
pop
sub
stc
mov
xchg
mov
mov
sub
into
std
lahf
mov
shl
aad
push
iret
lods
pushf
and
xchg
push
fsubp
add
pop
xor
std
mov
sbb
inc
cmpsl
ret
or
push
jmp
cltd
and
cmp
mov
add
mov
pop
sbb
push
add
sub
jnp
sub
pop
mov
pop
out
mov
sbb
lret
insb
inc
lahf
out
gs
das
sbb
rcrb
dec
jnp
pop
or
mov
inc
js
mov
daa
push
jle
outsl
xor
dec
subb
lods
cld
nop
xor
fidivrl
loope
jmp
sub
shlb
je
and
int3
shlb
push
jge
inc
or
dec
call
cmp
lods
out
enter
and
sub
pop
fidivl
cmp
add
push
or
ficoms
sbb
movsb
jno
ficoml
pop
movsb
add
andb
nop
xchg
movsl
inc
in
xor
mov
mov
fisubrs
push
pusha
mov
test
ret
incl
lcall
lea
call
ret
aad
subl
insb
mov
cwtl
gs
sub
inc
cmp
add
ret
dec
rol
pand
push
gs
dec
cmp
mov
push
xchg
lods
push
mov
ret
scas
or
jns
sbb
fcmove
clc
adc
push
mov
mov
scas
jbe
imul
or
cmp
cmpsb
loope
pop
lods
sub
and
inc
jns
sub
add
call
out
mov
inc
or
call
test
cvtps2pi
add
or
xlat
jo
mov
inc
jg
push
pusha
mov
test
jg
cmp
push
mov
stos
dec
clc
sahf
shr
icebp
mov
inc
jae
xchg
xor
insl
sub
push
shlb
dec
mov
xorb
mov
aad
ds
nop
mov
xor
aas
xor
add
fcmovnbe
pop
shll
push
xchg
push
mov
sbb
dec
or
or
cld
push
testl
fcmovne
int
fidivrl
sbb
xor
in
cmp
dec
test
adc
cmp
fidivs
dec
imul
jbe
mov
js
ds
test
add
or
push
jo
pop
aaa
in
into
cmp
jg
cmp
sti
jmp
xorl
mov
xor
insl
js
push
inc
xchg
mov
ds
test
fstps
rcll
jne
out
testb
insb
xchg
mov
icebp
aam
dec
pop
pop
add
jnp
test
stc
jne
jecxz
cmc
mov
js
mov
sbb
repnz
in
dec
cmp
shll
push
xchg
push
or
rcrl
lret
inc
lret
jmp
and
push
sbbl
fs
call
bound
data16
jg
jg
pop
xchg
insb
and
lret
push
out
sub
ja
lods
sahf
fs
cld
decb
shlb
mov
pop
jno,pn
movsb
push
cmp
mov
repz
adc
enter
sbb
mov
mov
insb
xor
sbb
movsl
shl
fadds
bound
mov
jno
xchg
push
xor
mov
pop
pop
or
mov
dec
pushf
sub
lods
cmp
mov
imul
pop
rcrb
dec
orb
push
cwtl
fnsave
into
scas
testb
xchg
jo
lret
push
or
in
and
mov
pusha
pop
or
sub
movsb
or
lcall
xor
idivb
adc
shl
or
dec
sub
xchg
adc
lods
xchg
je
cmpsb
jnp
inc
cmp
adc
add
xchg
iret
pop
mov
push
sub
sar
movsb
jae
test
movsb
cmp
int3
jle
xlat
add
and
outsl
mov
and
loop
push
jo
in
xorl
cmc
leave
hlt
xor
test
push
sti
mov
sarl
pop
cmpsl
xorl
sub
ret
add
sub
mov
jle
cmp
pop
aas
les
cmc
into
sbb
add
clc
test
out
fst
pushf
or
mov
ljmp
jbe
mov
out
adc
jo
scas
rorb
sbb
jl
adc
or
movups
dec
push
push
stos
push
xor
fwait
adc
pop
jl
adc
imul
shll
adc
inc
and
out
je
lahf
or
stc
int3
ja
lods
adc
data16
xchg
dec
jo
test
std
aad
dec
jns
cld
ret
mov
jo
int
insl
jno
inc
inc
push
insl
xor
sub
cmpsl
aad
not
bound
fwait
movsl
cmp
pop
sbb
xor
xchg
cmp
push
mov
test
xor
cld
movsl
sbb
jp
xchg
out
add
and
adc
xchg
cmp
cs
into
bound
xchg
sub
mov
in
dec
pop
repz
add
loopne
inc
inc
jp
add
dec
push
mov
xor
leave
std
mov
jo
and
jge
pop
mov
xchg
bound
sub
out
cmpl
lods
push
out
mov
aam
add
mulb
outsb
push
subl
add
inc
addr16
mov
enter
ffreep
ret
cld
dec
aaa
add
sbb
inc
cs
cmp
movsl
popf
mov
pushf
es
in
sbb
lcall
pop
dec
mov
pop
insl
movsb
push
cwtl
sti
loope
xchg
jbe
pusha
daa
mov
pop
mov
pop
test
iret
imul
pop
and
push
mov
jg
hlt
add
mov
test
and
je
xorl
inc
clc
mov
nop
mov
mov
push
in
sbbl
pop
xor
enter
push
jne
mov
inc
xchg
aad
out
and
shlb
loop
and
adc
rolb
test
mov
inc
and
xlat
and
aas
fucomi
mov
imull
lret
fwait
lods
shl
sbb
gs
repz
push
xor
popf
xor
or
ret
mov
dec
iret
shll
lahf
push
pushf
sub
mov
or
xor
mov
cmp
mov
cmc
lret
rcr
cmpsl
ljmp
icebp
mov
push
pop
mov
lods
idivb
fistps
orl
xchg
popl
sbb
jge
adc
aad
hlt
push
ss
fwait
pop
pop
cmp
test
repz
rorb
ret
mov
sarl
mov
mov
xor
ss
and
sbb
mov
push
ret
sub
movsb
pushf
test
outsl
xor
aam
aam
pop
pop
dec
mov
lahf
cmpsl
ja
push
mov
loope
stos
mov
fcompl
mov
pop
sbb
inc
push
leave
std
mov
sti
and
daa
mov
call
sbb
in
std
mov
lea
cld
xchg
xorb
and
cmp
ret
dec
push
clc
mov
xor
cwtl
ljmp
mov
xchg
les
fsubrs
push
mov
vmwrite
shlb
ret
mov
bound
mov
push
adc
iret
push
imul
movsl
rcl
lods
dec
int3
push
adc
or
ss
and
popa
addr16
rolb
int
lods
sub
adcl
imul
sub
xor
mov
mov
jcxz
negb
fwait
out
and
dec
les
int
test
mov
cltd
mov
sub
mov
push
dec
pop
inc
xor
inc
mov
loopne
mov
arpl
test
pusha
cmp
icebp
sbb
cmp
dec
sub
pop
sub
test
jp
fcmovnbe
pop
sti
je
movb
cmp
sarb
fsincos
push
mov
mov
nop
test
out
mov
and
adc
addr16
xor
jmp
and
and
inc
mov
js
scas
movsl
lfs
mov
pop
inc
mov
xchg
dec
cmpsb
fmull
adc
std
cmp
cltd
mov
pop
scas
xchg
pop
into
lcall
lods
lcall
mov
push
int
mov
inc
or
push
or
ljmp
xchg
and
jp
mov
push
flds
cmpsl
in
xor
enter
rcll
sbb
bound
mov
in
fcomps
push
idivb
xchg
inc
add
pushf
shll
adc
and
sub
nop
scas
outsl
lcall
cmp
jno
sub
outsl
xchg
divl
xor
repnz
lahf
cltd
int3
and
mov
cmp
cs
adc
leave
push
lret
push
mov
inc
inc
mov
cld
test
xlat
lds
inc
add
jno
jbe
pusha
adc
jo
jno
xchg
and
imulb
mov
jmp
lret
sub
popa
dec
mov
int
incb
test
push
rorb
sbb
lea
mov
mov
dec
repz
mov
push
jbe
lods
jmp
xchg
add
push
imul
push
out
test
fwait
cmpsb
jns
pop
add
jg
or
inc
lcall
hlt
mov
push
cmp
inc
in
pop
mov
les
inc
jge
push
lods
add
dec
cmp
push
adc
arpl
pop
cmpsb
xor
sbb
iret
jecxz
adc
or
gs
fsubrl
add
ljmp
push
and
repnz
scas
aaa
jp
push
popa
cmp
dec
pop
sub
add
mov
push
sbb
imul
jno
mov
rcll
and
loopne
nop
insl
sub
mull
mov
insl
fnstenv
sbb
xchg
fwait
icebp
adc
out
repnz
aas
mov
dec
adc
adc
dec
sub
leave
out
mov
test
and
cltd
aad
mov
xor
repz
mov
int3
ror
xchg
sti
xor
jae
cmp
mov
daa
sti
movsb
cmp
cld
jle
mov
jp
sbbb
sub
inc
cmp
cld
or
push
jecxz
jl
xchg
in
jmp
mov
xchg
iret
aas
fbld
rolb
arpl
sub
sbb
mov
xchg
sbbl
sub
lods
fisubrl
sbb
out
divb
ss
xchg
xchg
loopne
pop
dec
in
mov
mov
ja
xor
mov
sbb
aad
arpl
mov
sarl
lods
rolb
dec
push
xor
add
out
or
xchg
scas
daa
xchg
mov
or
out
mov
adc
addb
cmp
clc
pop
push
pop
sub
das
je
hlt
sbb
lret
in
or
sbb
dec
and
pop
dec
cmp
sar
pop
fsub
mov
lahf
jle
mov
pop
jno
push
cmp
mov
mov
in
fadds
insb
loope
add
pusha
inc
push
dec
pop
jecxz
mov
lock
or
xor
test
icebp
mov
xchg
cltd
mov
mov
sub
push
inc
sub
hlt
addb
popa
lods
push
paddd
xor
sub
fidivs
movsl
mov
shrl
out
pop
xorl
or
jle
cmc
sub
cltd
mov
and
sub
icebp
repz
scas
shl
lock
in
addb
addr16
test
xchg
dec
mov
std
idivb
roll
fdivrs
mov
movsl
scas
in
nop
xchg
cmpsb
ljmp
add
jge
loop
mov
pop
xchg
mov
mov
mov
sub
testl
addr16
jp
sbb
cmp
cli
xor
imul
loope
dec
pop
mov
lahf
mov
push
faddl
mov
mov
gs
cmpsb
test
pop
lret
or
std
pop
insb
xor
popf
adc
stos
dec
xor
daa
sbb
clc
test
inc
cs
mov
clc
imul
decb
ret
add
shl
notb
push
aad
sbb
repnz
lahf
mov
std
loopne
push
pusha
pop
enter
inc
loopne
shll
sub
stos
ljmp
jmp
stos
mov
rsm
cs
rcl
jl
jb
and
or
xor
out
mov
xor
int3
jae
fcoms
jbe
fbld
jmp
bound
rolb
aaa
dec
insb
mov
mov
jne
cmc
decl
jg
loope
aas
pop
pushf
and
mov
test
gs
jnp
sbb
bound
es
test
and
jne
movsb
fst
jno
mov
sbb
js
rorl
jb
rcrb
add
leave
adc
add
adc
mov
das
cltd
push
mov
adc
mov
insb
mov
outsb
dec
adc
repnz
mov
pop
adc
xor
pop
fisttpll
jbe
cmp
mov
jno
mov
addl
or
ss
adc
jle
in
mov
sti
jp
test
repz
adc
int
pop
jmp
or
add
ret
push
add
daa
mov
lods
aad
bound
sarb
adc
add
in
push
push
adc
mov
xor
push
sarb
push
jbe
cmp
sti
jmp
ror
jae
aad
jb
aam
daa
out
loop
ja
dec
inc
test
mov
mov
mov
fwait
sahf
lret
ja
push
add
adc
mov
lods
inc
outsb
bound
rcrb
xchg
int
lcall
dec
ss
mov
jnp
test
iret
xchg
lret
pop
mov
jmp
mov
or
out
mov
sbb
dec
mov
xor
lods
scas
stos
dec
or
dec
in
mov
pop
outsl
cwtl
jne
bound
cmp
pop
or
add
ret
jecxz
pusha
mov
xchg
add
sbb
movb
icebp
dec
lock
sbb
sub
pop
test
fisttpl
aam
insl
inc
std
hlt
andb
sub
push
pop
loopne
sub
push
dec
lret
add
sub
fnstenv
mov
ret
push
lods
mov
fwait
add
ljmp
arpl
loope
and
ja
mov
fisubl
imul
gs
ljmp
inc
arpl
push
pop
idivb
imul
icebp
in
sub
gs
arpl
cmp
cld
mov
cmp
xchg
xchg
lods
or
cmp
or
neg
xchg
imulb
loopne
outsb
out
inc
sbbb
dec
test
mov
cmp
int3
movsb
adc
mov
push
sbb
outsl
loope
jae
ja
mov
lahf
icebp
xor
dec
and
cmp
jl
cmp
sahf
jae
les
push
inc
divl
mov
sub
fimuls
xorb
imul
or
xchg
vmwrite
cmp
jno
and
push
addr16
rorl
sbb
ret
test
jnp
cmp
jno
xor
mov
das
mov
inc
mov
lods
jmp
jbe
bound
lods
gs
repnz
sbb
repnz
ret
addr16
jmp
lea
sahf
xlat
in
int
adcb
movsb
pop
pop
ret
fnsave
fcompl
mov
daa
ret
std
cmpsl
lcall
sub
and
sti
push
mov
imul
xor
xor
cmp
cli
bound
lahf
cmp
mov
push
jge
sbb
mov
or
or
insl
push
dec
ffree
jmp
jns
push
in
les
adc
in
push
sbb
movb
testb
in
aas
out
inc
out
sub
lods
sahf
xchg
in
mov
push
shrl
cmc
sbb
cmpsb
std
into
add
mov
roll
adc
insb
xchg
push
push
stos
movsb
mov
loopne
mov
fsubrp
adc
icebp
sub
test
pop
push
mov
out
inc
cmp
cmp
iret
sub
pop
bound
pop
inc
mov
ja
rcrb
fnstenv
jne
mov
imul
push
in
mov
inc
inc
insb
cmc
icebp
jb
lahf
and
xchg
dec
jmp
sarl
leave
lcall
mov
les
xlat
fsubs
push
inc
in
mov
bound
sahf
pop
jg
out
push
push
jno
je
test
pop
and
inc
add
mov
jbe
mov
in
jo
push
jno
mov
jo
mov
pop
fs
mov
jge
inc
mov
add
cmp
sbb
push
mov
sub
cld
pushf
inc
shrl
int3
ret
aam
cli
mov
dec
lcall
imul
ffree
out
enter
in
pop
lds
fldl
mov
xor
pop
mov
push
leave
fwait
aaa
cmp
or
movsl
adc
and
mov
ret
incl
mov
arpl
sbb
mov
hlt
aam
add
addb
mov
inc
sbb
add
fldl
sbb
mov
mov
movsb
xor
xchg
dec
mov
pop
rorb
push
iret
pop
stos
arpl
push
outsb
xor
ss
leave
xor
mov
pusha
in
adc
xchg
jae
mov
adc
lcall
pop
xchg
les
pop
int3
call
addps
mov
jae
and
mov
inc
lods
push
ret
insl
jnp
pop
in
in
xor
clc
jno
idivb
cltd
push
fld
add
lahf
xchg
rdpmc
push
push
loope
mov
mov
jae
out
pop
jmp
rcrb
leave
jnp
mov
xchg
fstpt
or
inc
cmpsb
rcr
push
lock
push
mov
add
jg
fisubs
fnsave
sti
ja
push
jge
jecxz
or
jne
xchg
insb
movsb
clc
pusha
js
imull
movsb
xchg
rcrb
xchg
cwtl
repz
adc
adc
iret
sub
nop
pop
and
insb
or
cs
xchg
mov
sbb
push
mov
ret
int3
xchg
and
int3
push
xor
orb
cltd
adc
xchg
cmpsb
das
inc
cli
pop
inc
xchg
movsb
push
js
imul
or
iret
cmpsl
add
jl
imul
mov
add
xor
call
popf
sub
cmpsb
aaa
cs
xor
adc
movsb
xchg
das
aaa
dec
rclb
inc
rcrb
xchg
outsl
lret
or
ja
mull
jl
ss
ljmp
scas
lret
std
inc
movsb
adc
stos
inc
pop
ret
mov
pusha
add
pop
jne
ja
outsb
es
add
mov
pusha
mov
hlt
fadd
cmp
out
jnp
push
xor
in
inc
add
nop
push
cmp
rcll
leave
mov
mov
rcrb
mov
andb
jp
or
bound
adc
inc
iret
int3
cmc
xor
jp
sub
pop
xchg
fadds
push
pop
add
fisubrl
int
jp
loope
dec
pop
adc
mov
cs
inc
mov
mov
inc
dec
cmp
pop
into
pop
mov
stos
dec
arpl
and
jg
fcos
js
seto
or
and
xchg
dec
xchg
jle
sarl
fsubl
aas
rclb
and
cltd
push
fsubrl
xchg
mov
xchg
mov
push
inc
jl
jb
out
fnsave
les
xchg
pop
jno
bound
fstpt
xor
push
push
add
sub
pop
sub
push
fcmovnu
cs
andb
addb
lods
imul
add
ror
mov
push
rorl
adc
add
xchg
cmc
lock
cs
bound
push
mov
jns
inc
push
dec
xor
test
jmp
loope
lahf
mov
pause
js
int
mov
and
sti
fldt
popf
lock
add
dec
or
into
mov
mov
int
jae
call
ret
lock
pushf
int
fldcw
inc
int3
imul
sbb
jb
lcall
insb
xchg
mov
jnp
negb
gs
sub
cmp
cmp
cmp
repz
adc
pop
dec
dec
jno
sbb
repz
jnp
xor
lret
enter
mov
bound
into
ds
lods
sub
xchg
cmp
adc
xor
and
sbb
xor
js
pop
imul
aas
lods
jbe
icebp
or
mov
push
sbb
call
mov
add
xchg
lret
xchg
mov
outsb
cmp
xor
sbb
or
daa
sar
mov
mov
scas
push
arpl
rol
sub
dec
not
rorl
mov
cmp
pop
cmp
push
pop
sbb
pop
inc
mov
push
or
lods
mov
and
js
fiaddl
testb
sub
xchg
mov
and
int
mov
and
fwait
clc
jb
xchg
sub
fwait
xchg
adc
fs
les
xor
lret
or
movsb
add
jp
rcll
cmpsl
add
pop
jle
movsl
test
dec
jae
sti
or
and
call
movsb
outsb
out
pushl
and
rcrb
out
insb
out
adc
xorl
lods
push
push
mov
push
insl
mov
into
mov
mov
mov
stos
or
xchg
push
shrb
adcb
pushf
loope
adc
pop
mov
mov
push
xchg
lods
test
xchg
pop
mov
cmpl
sbb
cmp
ret
xchg
xchg
mov
mov
xchg
add
jg
xor
pop
fnstsw
sbb
into
pop
aam
je
add
push
inc
popf
bound
mov
ficomps
jb
jo
sbb
gs
pop
les
ret
js
pushf
insl
sub
shrl
xchg
or
add
ficompl
inc
or
push
outsl
xor
jnp
insb
lret
test
sti
inc
inc
and
dec
jmp
stos
in
jp
sbb
inc
stos
mov
test
sahf
jbe
inc
and
mov
push
add
mov
cld
push
mov
scas
add
jbe
into
cmpsl
or
das
ja
add
inc
lahf
sbb
lods
pop
ljmp
push
cmp
pop
or
jg
sahf
push
cmpsb
cmpsl
mov
sub
jle
sbb
mov
test
lock
loope
pop
sub
cli
out
sbb
xor
dec
jge
jmp
add
sbb
icebp
in
or
leave
xchg
adc
xchg
lcall
neg
scas
test
cmp
sub
testb
push
mov
and
xchg
in
cmp
fidivl
in
mov
add
clc
sbbl
cmp
cmpl
and
test
fadds
out
pop
lock
int
dec
sbb
mov
ficompl
in
lahf
clc
pop
inc
mov
out
movsb
jb
nop
dec
les
or
in
and
sub
in
iret
and
sub
pushf
stc
mov
adc
mov
les
aas
adc
sbb
xor
filds
rcl
repz
es
loopne
add
push
scas
fistl
movsl
pop
add
pop
inc
test
mov
mov
and
jle
jp
jle
sti
mov
sbb
incb
stc
jns
mov
jnp
dec
into
sbb
pminsw
sbbb
jno
sub
lret
mov
xchg
pop
rcr
jl
xchg
in
adc
mov
jl
cmp
int3
cmpsl
sti
jae
push
adc
lds
cwtl
out
xchg
fcoms
andl
fisubs
rol
jb
mov
inc
pop
jl
adc
and
and
sub
and
sti
and
sti
inc
and
std
xor
pop
gs
jle
push
push
xchg
push
inc
aam
push
or
mov
loop
insb
sbb
pop
out
rcrl
fmull
sbb
fsin
je
repz
pusha
xor
push
insl
xor
fucomi
pop
mov
ja
xchg
mov
adc
cmp
xor
pop
xor
dec
xor
jnp
cli
shlb
push
fists
sub
shrb
or
dec
in
inc
cmp
jno
adc
ret
in
lea
arpl
add
lea
cs
xor
aas
pop
xlat
cmp
dec
inc
hlt
and
and
inc
mov
pop
sbb
inc
mov
cmpb
clc
xchg
scas
ljmp
lods
sub
jno
inc
cmp
ja
lea
test
ja
cmp
ficoml
jp
pop
push
movsb
mov
sarl
loope
lds
pop
test
arpl
mov
jge
movswl
out
pop
jg
or
pop
je
xchg
std
lods
roll
mov
nop
lcall
jmp
push
repz
pop
jne
int3
test
mov
jns
cmpsb
leave
cwtl
pop
and
pusha
ret
or
cld
call
push
in
add
push
cmp
repnz
lahf
sbb
sbb
in
xchg
push
out
push
fnstsw
mov
push
inc
sub
push
sbb
xor
xlat
lock
mov
sti
adc
in
jecxz
das
cmp
mov
iret
jno
lcall
repz
into
shll
cmc
std
xor
push
add
adc
notb
int
inc
sbb
sbb
fdivl
xchg
fidivrl
or
push
mov
jb
pop
fisubrl
and
into
pop
jns
lods
lcall
xorb
in
stos
pop
push
sub
nop
adc
add
fistl
sarl
mov
push
ljmp
inc
clc
fninit
pop
fdivl
jnp
push
sub
mov
int
movsl
and
ja
in
push
daa
ljmp
insb
add
adc
shl
out
pushw
out
push
jecxz
dec
fdivrl
dec
inc
cld
popl
xor
push
and
icebp
jae
add
mov
mov
idivl
push
sti
in
mov
lock
xor
lret
dec
xor
add
jne
mov
push
mov
call
xchg
sbb
jp
iret
pop
je
std
or
or
scas
push
adcl
icebp
push
cmp
addr16
iret
and
fs
in
iret
aas
gs
movsl
mov
int
jp
lea
sub
mov
sbb
mov
call
mov
nop
jne
sub
mov
push
les
inc
mov
and
xchg
lods
cld
mov
lcall
jmp
andb
jl
imul
dec
and
scas
shrb
lahf
imul
pop
push
cmp
outsb
push
mov
xchg
pop
inc
cmp
mov
test
push
xchg
sarb
inc
cmpsl
int3
loope
scas
or
mov
lcall
sub
sub
inc
lcall
cmc
fs
mov
sub
aaa
es
xchg
adc
movsb
pop
das
pop
rorb
je
cmpl
and
push
lea
call
dec
or
lahf
addr16
int
les
mov
sub
es
enter
stos
xchg
jecxz
repz
std
sub
and
dec
dec
fs
imul
mov
outsl
dec
js
push
xor
mov
mov
jns
cwtl
test
in
pop
in
jo
mov
xor
aas
lret
sub
add
mov
cmp
jbe
das
mov
movsl
mov
dec
push
lods
dec
and
add
das
xlat
fisubrl
xchg
data16
dec
movsl
jne
stos
cmp
jnp
cmpsb
clc
xchg
adc
cli
mov
xchg
or
xor
lret
addl
inc
xor
or
adc
pop
fwait
sbb
dec
test
mov
mov
mov
insl
jne
dec
test
and
scas
pop
cmp
ljmp
leave
data16
jne
in
inc
cmp
ret
adc
inc
mov
loope
pop
leave
movsb
sbb
add
inc
adc
das
add
scas
nop
fcompl
mov
cmp
jle
cli
aas
cmp
pop
push
mov
jmp
addr16
xchg
add
or
push
decl
icebp
and
xchg
int
aam
and
or
mov
or
lock
das
sbb
sbb
fstps
pop
pop
dec
fists
mov
mov
call
mov
out
addl
mov
or
aam
lods
inc
pop
aas
mov
out
xchg
mov
stos
xchg
push
dec
in
bound
sbb
jmp
adc
pop
cwtl
loop
dec
scas
cmove
dec
inc
daa
mov
filds
mov
or
aam
loope
aaa
cld
scas
adc
outsb
pushf
sub
clc
jne
jl
cltd
pop
sbb
jns
repz
push
iret
cli
add
stos
loope
fwait
jo
test
cmp
jge
push
icebp
adc
mov
cmp
jnp
dec
lea
dec
push
scas
add
and
jmp
inc
mov
jp
in
cwtl
shrb
imul
stos
test
rorl
and
push
adcb
xor
mov
call
int3
push
loopne
adc
or
rcrl
ljmp
push
xchg
cmp
inc
pop
out
cltd
lcall
pop
out
xor
adc
jae
push
mov
shl
cmp
clc
inc
out
jbe
mov
inc
ss
and
jnp
push
rclb
es
cwtl
jmp
push
flds
xchg
mov
xor
loop
cmp
dec
repz
push
lea
add
iret
inc
out
lret
mov
cmp
pop
mov
push
repnz
push
movsb
mov
lcall
aam
dec
fsubl
adc
stos
out
xchg
xchg
test
arpl
out
or
xchg
adc
push
aaa
aam
daa
jmp
xor
adc
push
in
jmp
jnp
xor
je
hlt
aaa
cld
inc
jl
shr
mov
sub
inc
sbb
pop
fsub
inc
jb
pop
push
cltd
sub
push
scas
hlt
inc
out
and
xchg
cmp
pop
arpl
jne
sub
test
rclb
push
test
lcall
test
arpl
es
test
in
scas
dec
in
lcall
stc
fs
push
push
cmp
in
sbb
push
push
in
add
es
dec
fucomi
xchg
rorl
icebp
jg
dec
out
add
sarb
xchg
sti
mov
mov
jo
cmp
repnz
adc
mov
mov
jne
or
jae
stc
push
popf
push
mov
mov
cmpsl
or
lods
ljmp
push
sub
dec
test
outsb
xor
inc
mov
cmp
mov
test
pop
in
ss
ljmp
repz
stos
cli
dec
dec
jbe
movsb
and
js
adc
inc
je
or
fistps
roll
sub
imul
fwait
jo,pn
mov
jg
movsl
jno
sub
xlat
test
xchg
push
pop
xor
pop
xor
jle
add
jns
pop
shl
push
dec
cli
push
pop
andl
or
dec
imul
or
pop
pop
lods
mov
ret
test
xchg
iret
mov
inc
mov
fxam
or
sub
mov
shl
sub
xor
and
jmp
dec
mov
mov
fisubrs
insl
testl
sbb
add
fcompl
js
jo
sub
testb
mov
cmpsb
mov
sbb
fsubrl
mov
scas
mov
lcall
out
cmp
or
pop
lret
aad
mov
cmp
xchg
sub
ja
adc
adc
mov
mov
movsb
mov
or
dec
inc
and
insb
call
cmpsl
mov
hlt
adc
cmp
mov
pmaddwd
loopne
sub
imul
sub
push
mov
and
xchg
sbb
ss
xchg
jmp
out
and
xchg
dec
stos
xchg
inc
mov
mov
adc
xor
leave
js
ds
pusha
xor
cmp
test
leave
jge
sbb
in
xchg
in
ljmp
cmpsl
pop
lahf
jl
cld
dec
add
repz
loope
leave
adc
jge
xor
je
insb
jo
sub
jge
mov
and
gs
loope
and
jp
jns
inc
negl
adc
push
sahf
out
daa
call
js
test
jbe
inc
aad
pop
lds
das
inc
mov
mov
lret
lahf
xchg
int
int3
push
sub
sub
clc
xchg
push
es
data16
js
outsb
mov
mov
and
and
sbb
xor
push
das
sub
and
mov
rcl
xchg
mov
xchg
std
mov
adc
into
add
xchg
sbb
sbbl
xchg
ja
pop
jnp
xchg
mov
jle
add
adc
xchg
leave
and
jns
int3
fldenv
test
cmp
pop
dec
jp
push
int
in
enter
add
mov
add
outsb
je
sub
stos
cld
xor
aad
repnz
push
orb
sub
adc
pop
imul
mov
in
ja
inc
lret
bnd
pop
fnsave
movsb
and
xchg
loopne
jg
sti
adc
paddd
int
data16
cli
mov
scas
jnp
aas
jbe
add
mov
xor
bound
stos
jp
inc
xlat
andb
jle
out
mov
sbb
adc
lret
call
insl
pusha
je
out
cld
mov
andb
stos
jp
addb
lcall
pushf
cltd
insb
adc
clc
fs
inc
dec
mov
push
popa
pusha
pop
or
movb
add
cwtl
dec
subb
iret
inc
inc
dec
jmp
push
xor
lcall
cmp
inc
aaa
lret
push
fidivl
scas
fcomp
adc
or
fists
out
xor
repz
pop
xor
inc
dec
rorl
ret
sbb
fisubl
fcomps
dec
add
add
ror
js
cltd
pop
or
adc
xor
sahf
je
in
cmpsl
testl
sub
cmp
push
movsb
or
xor
das
inc
dec
in
pop
imul
xor
push
pop
mov
fadd
and
sbbl
pop
mov
hlt
out
xchg
js
pop
sarl
testl
cs
xor
lods
adc
jl
lahf
popa
cmp
insl
divl
notl
loopne
dec
imul
sub
sbb
mov
incl
inc
leave
mov
pop
test
adc
inc
inc
and
mov
hlt
loop
pop
call
xchg
push
iret
push
popf
cld
paddsw
pop
mov
shll
xchg
mov
mov
xchg
mov
aam
cli
lcall
scas
xor
dec
xchg
cwtl
les
sub
cmp
arpl
leave
cmp
mov
and
dec
jnp
notb
fcompl
enter
mov
sti
xchg
cli
jp
lock
add
mov
sbb
xchg
sub
xor
push
add
cld
repnz
push
mov
leave
test
clc
inc
aad
mov
mov
test
jle
scas
insl
fcoml
jmp
inc
cwtl
inc
cmp
lods
in
mov
sbbb
xchg
add
gs
pop
stos
out
inc
pop
sti
addr16
ret
daa
rol
xor
das
jmp
inc
aam
sub
jno
scas
frstor
sub
mov
pop
pop
fisubrs
or
inc
mov
mov
out
mov
imul
pop
dec
mov
xchg
adc
mov
add
dec
out
cmpb
push
mov
icebp
mov
test
aas
and
in
pop
int
sbb
out
push
or
sbb
pop
push
cmpsb
xor
mov
sbb
mov
mov
or
cltd
fwait
lret
sarb
jns
stc
in
ds
cltd
jle
call
push
jp
inc
loope
inc
repz
mov
adc
in
and
jl
sbb
icebp
add
inc
movsb
shr
mov
loopne
in
leave
pop
sbb
fidivl
mov
and
mov
xchg
jp
data16
test
push
fmuls
xchg
int
lret
and
adc
add
mov
mov
aad
push
popf
push
scas
addr16
pop
xchg
mov
or
pop
inc
xchg
enter
and
adc
insb
cli
mov
mov
je
lcall
inc
or
xchg
into
call
mov
or
push
cltd
fisubrl
cli
adc
mov
cmp
pop
in
jg
scas
jo
mov
sbb
jl
push
in
add
bound
adc
jo
and
jb
mov
test
inc
dec
adc
bound
lea
testb
jle
das
div
jmp
ljmp
or
dec
xchg
push
mov
sbb
imul
jae
mov
sub
sub
mov
sbb
sahf
sub
fsts
xchg
or
outsb
push
iret
fdivs
mov
sbb
call
in
fcompl
outsl
or
cld
and
push
cwtl
sub
push
push
cmp
xor
dec
inc
iret
repnz
pop
outsl
cmp
das
dec
dec
fnstsw
sub
xchg
scas
jno
inc
fsubl
mov
pop
cmp
xchg
sti
call
lahf
push
mov
loopne
xor
sbb
icebp
push
lahf
mov
adc
inc
int
out
popfw
mov
cmp
push
test
sub
mov
pusha
outsb
add
mov
ss
addr16
xor
jb
out
fstps
mov
adc
cld
sub
and
xchg
ja
inc
sub
rcr
pop
push
mov
push
jb
subl
lret
jecxz
scas
push
daa
mov
mov
mov
xchg
popa
sub
mov
add
imul
dec
jnp
mov
pusha
jbe
movb
mov
fmull
imul
xchg
or
seta
inc
mov
lret
and
pop
jge
int
je
lret
outsb
push
mov
test
xor
push
xor
sub
cwtl
in
cmp
mov
push
push
jge
pushf
sbb
adc
mov
jne
fwait
sub
das
add
push
loopne
sbb
clc
fiadds
jl
jg
pop
cmp
mov
arpl
mov
les
addr16
es
movb
cmpsb
push
push
inc
pop
mov
xlat
jno
add
in
sahf
mov
repnz
pusha
push
dec
in
dec
mov
cmpsb
xchg
mov
xlat
push
jge
jge
sahf
fwait
mov
add
xchg
std
pop
add
sbb
sbb
sub
nop
jne
pop
cmp
notb
cmp
sar
mov
in
ret
fstps
dec
push
xchg
aaa
inc
nop
enter
mov
cli
xor
sub
dec
int
mov
out
icebp
push
mull
push
jae
insb
cs
js
aaa
sbb
cwtl
adc
sub
test
mov
aad
testb
in
js
cmpsb
ficomps
fidivrl
inc
sbb
popa
lahf
arpl
inc
stos
outsb
or
xchg
lods
cmp
icebp
orb
insl
nop
popa
jns
popa
rcrl
xor
cltd
cli
jle
mov
aam
sub
out
mov
mov
orb
adc
into
adc
fmul
clc
cs
cmp
sahf
dec
push
mov
sub
hlt
add
repnz
sub
adc
xor
icebp
adc
mov
movsb
test
cmpb
jbe
fstl
mov
fisubrl
stos
push
xor
fs
jecxz
push
jecxz
mov
mov
das
xchg
cli
pop
scas
sbb
jp
and
and
jmp
dec
rolb
dec
jb
mov
pop
push
push
into
data16
sub
cmp
add
in
adc
in
cmp
mov
pop
pop
std
or
sub
sub
shr
popa
push
sbb
mov
add
jo
add
mov
xchg
aam
xorb
movsl
cmpsl
dec
mov
iret
mov
xchg
dec
insb
dec
fmull
add
repz
and
out
ret
push
and
movsb
popa
nop
orb
dec
adc
jecxz
cmp
dec
inc
mov
and
aaa
inc
xor
push
xchg
popf
sbb
add
adc
nop
rcrb
aam
add
into
stc
add
aas
lods
push
lcall
mov
and
pop
pop
xor
mov
add
lea
adcl
xlat
shll
sbb
adc
je
push
xor
inc
push
leave
mov
cmp
xor
cmp
mov
adc
imul
push
mov
je
int
dec
mov
inc
nop
push
cld
mov
mov
jae
pop
cld
fwait
xor
shrd
in
cltd
xchg
push
mov
out
scas
push
fsubrs
sahf
pop
xchg
pop
out
or
stos
in
jp
pop
fistl
pop
xchg
sbb
cmpsl
cmpsb
scas
ljmp
fstpl
xchg
add
jb
lock
cmp
mov
cli
mov
push
out
nop
push
ret
out
adc
fcoml
stos
lods
cmp
aam
or
or
jb
les
pop
jg
shll
lock
xchg
inc
aad
xor
xor
sub
fdivrl
mov
rorl
cmpsl
popa
out
mov
test
sub
leave
xlat
mov
cli
repnz
xchg
push
fcomps
add
push
rorl
imul
enter
stc
adc
jl
lds
test
mov
adc
and
dec
arpl
mul
adc
roll
cmp
shll
mov
test
shll
shll
inc
jle
cmp
insl
mov
xlat
jle
repz
rcll
and
dec
insl
inc
lahf
push
fidivl
lods
sub
jno
hlt
shll
dec
mov
sbb
sub
fwait
xorb
cwtl
mov
xchg
mov
cwtl
addr16
push
push
lahf
int
sbb
cmp
pop
bswap
lock
sub
into
pop
mov
cmp
subl
fidivrl
cld
in
cmp
lret
jp
mov
std
lds
cmp
sbbb
scas
xchg
dec
outsl
ficompl
bound
xor
movb
nop
add
fs
add
ficomps
dec
cld
icebp
push
daa
imul
pop
mov
mov
mov
mov
rcrb
icebp
add
push
pop
inc
icebp
dec
stos
xchg
adc
lcall
imul
jle
mov
mov
cltd
or
clc
in
or
mov
inc
addb
iret
test
lods
xor
repz
xor
xorb
jle
rorb
fst
xlat
fnstcw
cmp
mov
inc
adc
jno
aaa
inc
shlb
fincstp
ss
mov
and
cmpsl
cwtl
add
dec
lock
mov
cmp
nop
mov
mov
pop
inc
cmp
je
mov
cmc
adc
jnp
push
pop
pushf
mov
cwtl
loopne
dec
ficompl
sub
jecxz
and
pop
xchg
adc
call
cmp
aam
cmpsb
push
outsl
mov
pusha
inc
cli
dec
mov
mov
out
dec
hlt
ret
scas
aaa
pop
xchg
add
outsl
out
shll
and
xchg
xor
insb
test
cmp
cmp
push
ljmp
push
js
leave
jnp
jb
inc
push
mov
and
mov
jne
fldenv
je
pop
push
xlat
add
add
cs
mov
xlat
pop
cmp
sbb
cltd
dec
cmp
adc
stos
lcall
xchg
push
out
pop
xchg
inc
xchg
mov
sub
dec
hlt
stos
imul
or
lret
lds
or
stos
lods
popa
aam
lock
dec
adc
loop
xchg
add
xor
in
pop
xor
rcrl
inc
jg
aad
filds
cmp
jbe
xchg
sub
mov
cmc
dec
xor
ficoms
mov
inc
dec
inc
mov
sbb
inc
loop
mov
lods
enter
mov
outsl
cltd
lods
rolb
adc
push
mov
mov
mov
bound
mov
test
push
dec
cmpsl
out
pop
jmp
jp
jb
sbb
les
in
add
add
ret
fwait
mov
add
pusha
leave
fisubrs
lods
hlt
dec
pop
xchg
lds
daa
icebp
mov
xlat
popa
pop
movsbl
testl
adc
fiadds
push
dec
sub
pop
les
lret
jle
gs
insl
inc
dec
lds
jmp
mov
ret
flds
mov
mov
push
xchg
mov
ja
jg
sbb
lcall
clc
adc
mov
rorl
out
sub
xor
roll
inc
cmpsb
int3
or
or
mov
sbbl
xor
or
rcr
push
dec
out
or
insb
add
inc
cmc
pop
push
push
jge
pushf
fcmovnu
pop
xchg
ret
and
ret
lods
lods
pushf
mov
in
or
mov
mov
push
movsl
dec
jae
xor
ljmp
data16
mov
lret
sub
test
div
mov
jbe
sub
and
cwtl
inc
dec
fwait
and
std
dec
scas
push
mov
and
push
add
and
xchg
shlb
or
test
mov
lret
mov
pop
mov
stos
mov
dec
call
pop
sbb
mov
scas
dec
and
push
fsubl
mov
sti
sub
arpl
jnp
out
ret
push
xchg
sub
int3
les
cmp
mov
sbb
sbb
cmp
repz
test
lret
fcomp
clc
ja
leave
mov
mov
adc
rep
mov
lret
push
mov
xchg
dec
sbb
lock
out
fstl
into
pushf
fldcw
mov
scas
stos
xchg
cld
lds
push
mov
push
dec
mov
cmp
sub
xor
lea
or
xchg
bound
iret
mov
scas
fisubl
and
or
pushf
jne
test
lret
dec
dec
xor
dec
fmuls
and
push
cmovns
and
cmp
push
add
movsl
sti
pop
lahf
pop
adc
jle
lds
mov
cmpsb
mov
add
cmp
sbb
or
je
gs
xor
inc
aaa
pop
jle
clc
mov
jmp
movsl
es
push
sbb
dec
adc
push
adc
repz
mulb
mov
push
cmp
enter
pop
jnp
jb
and
mov
subb
loop
add
movups
jae
jbe
fimull
iret
dec
es
testl
add
cmpb
pop
movsl
mov
inc
dec
outsb
rcll
hlt
lds
push
clc
shr
call
movsb
lret
ds
mov
cs
xor
outsl
push
stos
in
push
adc
cmp
jg
pop
imul
dec
cmp
out
lock
jecxz
inc
cmpsb
mov
mov
aad
ret
cli
js
popa
popf
pop
add
fisubrl
push
imul
in
ret
shl
cltd
data16
adc
mov
addl
and
das
out
stos
dec
out
jmp
test
in
clc
xchg
xor
mov
clc
xchg
out
push
push
daa
sub
mov
movsl
cwtl
test
in
lea
adc
stos
out
imul
xchg
hlt
push
repnz
mov
cmp
out
jns
sahf
and
jp
lahf
sbb
and
ja
int
inc
dec
leave
in
lods
jne
mov
ja
repnz
fidivrs
imul
imul
iret
pop
sahf
cs
xchg
sbb
or
mov
fiadds
data16
dec
add
sti
mov
int
jno
cwtl
sbb
jg
jno
out
or
push
sbb
xor
orl
inc
aas
sahf
test
int3
out
pop
sbb
ret
push
cwtl
in
ffree
adc
xor
cmp
jo
jo
jno
sbb
sub
jnp
iret
loope
fstps
fs
xor
lahf
adc
push
adc
jbe
lahf
bnd
cld
lods
xchg
push
gs
fistpl
dec
shrb
ror
xchg
dec
xchg
into
sti
mov
test
push
push
or
or
inc
sahf
fdivp
add
dec
jb
dec
and
lods
test
daa
loopne
xchg
jno
push
iret
add
int3
test
add
aam
test
sub
mov
outsl
mov
xchg
aaa
push
fistpll
lods
shlb
push
out
std
xchg
xor
imul
and
aam
cld
stos
mov
pop
mov
push
xchg
inc
and
jb
mov
ljmp
xor
or
dec
jmp
cmpsl
test
push
mov
inc
sub
adc
testl
sbb
adc
ret
cli
dec
xorl
gs
in
in
add
les
push
rorl
inc
adc
pop
out
cwtl
pop
pop
in
adc
hlt
pop
xchg
cltd
sbb
xlat
dec
shrb
mov
cld
mov
int3
cmp
jl
mov
fcmove
add
into
sbb
cwtl
jge
xchg
sbb
mov
xor
das
and
out
dec
call
sub
mov
push
in
and
push
stc
aam
mov
fisubrs
jge
lea
cmp
mov
adc
ror
in
mov
dec
call
and
arpl
xchg
fdivrs
add
out
call
ljmp
jmp
jp
sbb
mov
xor
sub
jmp
cmpsl
or
mov
sbb
xor
lds
mov
shlb
xorb
stos
jns
cmp
mov
adc
movsb
mov
mov
lret
and
push
adc
popa
push
sbb
dec
scas
shlb
add
jb
mov
xchg
fsts
and
push
xchg
int
popf
js
cli
jnp
test
adc
xor
dec
dec
rcll
scas
mov
sub
aam
inc
add
add
add
add
cmp
stos
mov
jo
fsts
clc
fidivrs
pop
inc
pop
dec
push
fwait
jl
sbb
pop
push
mov
inc
jne
mov
scas
mov
push
loop
mov
cmp
dec
pusha
push
mov
cli
mov
in
imul
rcrb
xlat
dec
or
dec
dec
push
sbbl
mov
xor
loop
xchg
add
dec
insl
scas
push
out
int3
sbb
sub
stos
gs
push
xor
dec
rorb
push
shrl
movsl
xor
xor
dec
shr
xchg
cs
imul
cmpsl
mov
mov
push
xchg
mov
xchg
xor
ja
dec
mov
daa
mov
movsb
pop
inc
xor
mov
push
push
xor
push
xor
xor
lcall
pop
push
roll
mov
and
add
call
sti
fwait
mov
inc
cmp
ds
test
pusha
or
lea
xlat
test
mov
in
insb
mov
enter
xorb
or
psraw
pop
inc
xchg
adc
pop
sbb
hlt
and
lods
cmp
inc
das
pusha
sub
adc
fstpt
arpl
jno
inc
jne
incl
push
xchg
arpl
cmp
aas
push
aad
icebp
cmp
rcll
sbb
dec
ret
or
repz
cli
jbe
dec
add
insb
lcall
aas
mov
xor
cmpsl
mov
aad
adc
repnz
mov
cmp
out
cld
pop
jle
mov
shlb
aas
cmp
adc
inc
lahf
aam
cmpsl
dec
mul
mov
adc
push
mov
adc
sub
shl
fistps
sub
shlb
or
popa
sti
in
pop
lock
ds
in
movsb
mov
cmp
stc
test
jo
jp
inc
mov
gs
xchg
fsubrs
mov
test
test
jmp
pop
loopne
sar
or
cltd
daa
lods
lcall
inc
sub
test
xor
sbb
mov
test
addb
negb
or
cmp
aaa
cmp
aad
and
xchg
jecxz
fistpl
sub
cmp
test
ljmp
inc
pop
out
lods
push
imul
cwtl
aaa
lahf
stos
cltd
inc
test
inc
mov
mov
pop
or
jne
addr16
mov
add
pop
sub
push
outsl
into
mov
rcl
jns
cmpsb
jl
in
lret
fdivrs
xorl
cld
jecxz
std
incl
dec
movsb
adc
das
in
testl
scas
repnz
repnz
add
icebp
mov
and
mov
das
sub
out
mov
push
inc
stos
cli
stos
jecxz
pop
push
lret
enter
add
xchg
loope
xorb
testb
dec
pop
adc
mov
repz
inc
lret
push
pop
insb
push
lret
mov
ljmp
and
das
pop
add
clc
adc
sub
ret
sar
pusha
and
stos
and
loopne
fadd
xchg
pushf
push
scas
mov
xchg
pop
add
or
imul
aaa
mov
stos
or
inc
movsb
lods
dec
xlat
aas
loope
sub
inc
pop
or
cmpsl
mov
ljmp
and
movsl
or
push
rorl
ja
pop
add
mov
cmp
and
lods
jle
xor
pop
sbb
int
pushf
xor
push
std
sbb
ja
fisubrs
mov
jnp
daa
jne
push
ja
add
pop
in
test
lods
pop
lods
push
add
push
sbb
mov
icebp
paddsb
jns
hlt
arpl
mov
sub
cld
jg
mov
lahf
mov
popa
popl
cwtl
dec
xchg
js
pop
pop
data16
fisubl
mov
int
mov
mov
adc
xchg
jecxz
lahf
mov
inc
lret
movsb
pop
popa
addr16
popa
xchg
push
mov
cli
add
movsb
into
cld
xor
scas
push
jno
fdivrl
xchg
imul
aad
add
std
cld
lds
mov
aad
mov
and
sbb
flds
jo
dec
iret
out
mov
outsb
repnz
lahf
mov
sbb
repnz
push
pusha
loop
xchg
mov
xorl
mov
outsb
in
lods
sub
mov
fs
shll
nop
inc
sahf
add
cmp
jecxz
xchg
mov
mov
sarl
outsl
divl
mov
mov
adc
xor
xor
aad
adc
fnstsw
mov
fdivs
mov
int
mov
and
int3
out
loopne
movsl
adc
addr16
dec
mov
test
call
lcall
and
jae
mull
pushf
mov
call
rorb
pop
out
jne
push
cltd
cmp
clc
lods
scas
xor
jecxz
inc
sarl
call
cmpsl
dec
add
test
lret
movsb
mov
repz
and
dec
daa
xchg
repz
or
dec
cmpsl
subl
rorl
dec
jmp
fnstenv
cmp
lea
clc
movsb
test
xchg
mov
xor
cmp
loop
shl
xor
cwtl
push
jae
cltd
add
gs
dec
push
xchg
bound
sbb
xchg
call
aaa
sbb
int
push
sahf
pop
sub
testb
lcall
xchg
inc
shr
stc
icebp
sbb
out
popa
xor
push
mov
jp
and
jbe
subb
out
fdivl
push
mov
loopne
cmp
std
sbb
mov
inc
sub
mov
cmp
aas
push
mov
push
xor
jbe
push
aas
test
push
push
jo
lret
adc
es
push
fs
inc
mov
pop
mov
mov
lea
mov
fistps
push
incl
inc
dec
jl
mov
ficompl
cli
pop
push
mov
mov
mov
mov
cmpsl
or
cli
addl
pop
mov
cmpl
inc
sub
out
cwtl
mov
mov
imulb
jmp
mov
jg
and
shll
sti
jmp
leave
movsb
test
stos
in
xchg
cmp
insb
push
mov
or
shrl
dec
cmpsb
stos
push
lahf
push
into
ljmp
mov
call
or
mov
xchg
daa
mov
jmp
cmp
mov
outsb
xchg
or
and
xor
rcrb
add
dec
mov
xor
mov
movsb
inc
imul
icebp
sbbb
jmp
mov
imulb
and
cmp
xlat
sub
inc
push
test
cmp
cld
cmp
add
je
or
pushf
mov
les
mov
xor
fstl
sbb
dec
add
add
cmp
div
jp
ret
shrb
psubusb
dec
inc
mov
cmp
ret
inc
sub
cltd
jae
cmp
inc
and
mov
pop
fimull
sub
pop
loope
pop
pop
rclb
pop
inc
cs
pop
push
ret
arpl
fisubrl
rcrl
xchg
xchg
jle
push
movsb
dec
and
fdivp
xor
aad
push
shlb
mov
in
adc
jp
add
enter
mov
and
es
xchg
jl
out
push
or
pop
mov
fcmovnb
jle
jle
mov
adc
lock
jo
xchg
pop
mov
cmpsl
in
scas
test
xchg
ljmp
cmpsl
int3
jbe
ss
xchg
pop
mov
fdivl
push
xchg
sub
jmp
out
lahf
xor
adc
inc
test
cmpsl
mov
addr16
and
loopne
add
mov
cmp
cmp
inc
xchg
adc
mov
test
sub
dec
inc
ja
test
push
pop
sahf
ljmp
aas
jg
push
xor
and
lea
repnz
mov
jns
cmp
repz
in
hlt
pop
sub
outsb
lods
mov
pop
inc
cmp
dec
lret
data16
fistpll
and
mov
call
sub
sahf
mov
imull
in
nop
cmp
inc
das
shll
ret
cmpsl
lds
test
fmull
cmpsl
push
repz
and
test
sbb
aas
fmuls
push
and
ss
rol
push
cld
cwtl
stos
xchg
mov
fisubrl
fsubrl
aas
and
cmp
cmp
add
and
pop
out
cmp
and
in
xchg
fistps
dec
out
xor
aam
jb
push
mov
iret
sub
add
dec
popa
cli
rcrb
insl
adc
sbb
in
aam
arpl
ss
xor
dec
mov
std
lods
jmp
mov
fwait
jbe
pop
inc
in
and
or
or
rorl
dec
dec
push
and
pop
rorl
lcall
stc
mov
js
aas
add
xchg
sbb
imull
gs
sbb
bound
dec
sti
add
inc
mov
xchg
cmp
repz
repnz
push
out
test
loope
adc
repz
adc
aaa
mov
xor
or
loope
mov
cmp
iret
gs
pop
push
cld
or
in
jbe
div
or
lahf
enter
shr
dec
into
icebp
lcall
sahf
in
push
mulb
add
orl
adc
jbe
jo
cltd
dec
xor
popa
hlt
pushf
stos
fistl
test
in
or
enter
sbb
addr16
jg
loopne
pop
dec
pop
je
out
cmp
pop
mov
push
xor
and
cwtl
and
pop
sub
faddl
rorb
mov
loopne
in
pop
lcall
movsl
out
pop
inc
xor
lret
sbb
jmp
pushf
jne
lahf
into
mov
lock
jmp
out
inc
fsubrp
fsub
fs
inc
ror
stos
or
add
lock
add
jg
mov
mov
dec
test
in
outsb
xchg
sbb
inc
inc
lods
and
fwait
push
outsl
scas
push
aam
lock
stos
mov
mov
mov
mov
and
inc
pop
pop
mov
dec
sahf
scas
add
sbb
mov
insb
jp
movsl
test
mov
or
or
fldt
jge
repz
or
pop
das
arpl
mov
or
fmul
aam
rol
insl
xorb
push
inc
int3
notb
clc
mov
mov
ss
pop
xchg
and
jg,pt
fucomp
mov
adc
push
sbb
cmp
testl
xchg
ret
or
fwait
cmp
push
and
out
push
jnp
dec
dec
inc
js
fwait
or
insb
das
jle
mov
psrlq
mov
movsb
call
ss
leave
lahf
sub
and
jb
insl
jle
mov
pushf
pusha
cmpsl
ja
je
aaa
jb
cmp
push
and
dec
es
xchg
mov
or
hlt
xchg
ss
push
stos
jg
pop
cmp
inc
sbb
adc
mov
int3
in
and
das
imul
push
lret
inc
movsl
adc
int
out
cmpl
nop
xor
pop
xchg
sbb
xor
sti
aad
and
call
ds
stc
scas
into
dec
and
testb
std
in
mov
lock
xor
mov
sub
in
enter
les
inc
jae
cmp
and
insl
repz
add
scas
cmp
sub
jns
not
inc
mov
inc
sub
movsb
push
jmp
lret
imul
mov
mov
pop
inc
pop
lahf
mov
fstl
mov
sbb
jb
dec
seta
nop
inc
test
xchg
ds
popa
fdivrl
jge
je
in
pop
std
gs
rolb
and
inc
jecxz
in
arpl
out
xor
or
dec
jp
call
push
sarl
outsl
pop
push
mov
les
mov
imul
mov
mov
in
push
xor
js
lahf
fldt
jl
mov
mov
stc
lcall
lds
mov
in
add
andl
gs
sbb
ljmp
sbb
movsl
add
loopne
aas
add
cld
inc
std
add
ja
push
shll
pusha
es
pop
sub
pop
xchg
cmp
mov
xor
xchg
xor
push
lret
insb
xchg
add
sub
add
into
arpl
lock
nop
xchg
ja
mov
enter
mov
push
je
outsl
clc
loopne
in
jp
inc
sub
adc
mov
jl
xor
pop
jno
data16
pop
mov
cmp
mov
sub
or
movsl
insl
movsl
repnz
mov
jge
or
dec
adc
pop
test
lret
cld
insb
ret
gs
or
out
divl
rcrb
mov
das
cmpsb
pop
adc
popa
bound
je
pop
jmp
sarb
vphaddbw
orb
ss
mov
jl
jbe
aam
negl
lds
call
adc
movl
fidivrl
jg
add
loop
addb
repnz
loop
pushf
and
xchg
inc
adc
mov
fcompl
js
loope
adc
repnz
mov
fbstp
and
call
pop
mov
xchg
adc
push
xchg
dec
popf
incl
or
movsb
bound
imul
adcl
call
jg
xchg
cmpb
dec
or
add
test
scas
out
add
sub
pop
sbbb
xchg
mov
repnz
ja
loope
lcall
out
push
dec
in
xlat
add
xchg
mov
ret
ret
xchg
push
js
sti
mov
gs
xchg
jbe
dec
dec
and
push
inc
sbb
push
and
repnz
pop
in
fdivs
sbb
dec
dec
jb
jae
push
and
pop
xchg
pop
and
add
inc
xor
inc
adc
clc
sahf
ljmp
add
mov
dec
dec
inc
pushf
fsubr
mov
xor
and
or
sahf
xor
je
pop
push
dec
inc
add
inc
xchg
inc
push
or
out
add
push
xlat
mov
dec
icebp
arpl
sub
repnz
mov
pushf
jns
pusha
frstor
xor
xor
pusha
lods
jp
cs
lods
jmp
jp
in
inc
ljmp
xor
imul
inc
lea
js
push
xor
xchg
cmc
dec
and
outsb
or
js
push
pop
out
pushf
jmp
push
sub
and
dec
arpl
or
sbb
cmp
xchg
mov
xor
xchg
cmp
aaa
pop
pushf
xlat
push
push
dec
add
sti
jns
mov
test
inc
jno
fwait
cmp
fstl
testl
inc
arpl
ljmp
fimuls
fwait
sub
add
orb
enter
sbb
jae
in
nop
mov
jnp
adc
xlat
xchg
pop
mov
and
cmp
mov
fwait
xchg
mov
icebp
loop
call
mov
dec
int
push
jmp
lret
inc
xchg
int
dec
loop
jle
dec
mov
or
sbbb
rolb
setge
in
stc
xorb
push
sub
aas
mov
shlb
or
jb
add
pop
sbb
sub
ss
js
imul
rcll
and
mov
mov
dec
je
xchg
inc
add
stos
push
jmp
cmp
xor
adc
mov
mov
push
bound
pop
in
ljmp
jl
cwtl
push
test
mov
outsl
jno
lahf
sarl
cmp
push
jl
and
inc
mov
mov
hlt
add
lods
in
mov
out
cltd
scas
int3
xchg
sbb
imul
jne
mov
in
xor
add
aad
js
repz
aad
int3
push
or
lahf
mov
cmp
ds
pop
outsb
popa
jmp
fwait
jnp
in
dec
and
enter
xor
xor
negb
int3
pop
adc
gs
push
pop
jg
cmp
adc
frstor
jae
shll
in
imul
sti
mov
clc
hlt
cs
cmp
mov
xor
shll
push
cs
lods
add
and
push
mov
sbb
cmp
arpl
ds
and
adc
fdivl
into
push
andb
push
sub
out
xchg
cwtl
lock
add
mov
jl
ljmp
jg
stos
mov
xor
jne
sub
add
outsl
lea
test
and
data16
inc
stc
mov
jmp
pop
dec
or
clc
xor
iret
and
jge
repnz
jnp
push
add
cmp
int
push
sub
lret
clc
mov
lret
mov
jo
shl
pop
mov
xor
dec
inc
xlat
adc
pusha
lcall
mov
addl
sahf
push
inc
scas
lret
mull
xchg
xor
lahf
js
outsl
pusha
icebp
or
popf
dec
cwtl
dec
mov
jmp
jl
cltd
mov
je
sub
push
and
mov
and
pop
stc
or
jnp
mov
xor
or
lods
push
lds
and
and
pop
jbe
test
add
sub
sub
decb
xchg
lret
sbb
xor
dec
mov
and
mov
andl
inc
jno
and
repz
cli
or
mov
xor
mov
test
mov
dec
dec
jbe
push
ja
aaa
cmovl
jne
xor
sub
jno
dec
or
ret
jo
jne
mov
push
xchg
das
adc
sbb
xor
push
inc
test
ljmp
or
lea
jmp
js
out
sbb
js
lret
adc
imul
jno
push
scas
stc
imul
adc
cmpsl
push
push
cs
jno
and
xchg
pop
and
sar
sahf
mov
dec
pop
setb
decl
xchg
dec
cmpsl
add
call
cmpsl
test
lea
jb
push
leave
fnstsw
xchg
aaa
or
movsl
push
mov
inc
mov
hlt
mov
out
pop
mov
and
lcall
imul
pop
sbb
cltd
add
add
jb
or
pop
pop
popf
jge
arpl
or
popf
decb
repz
into
call
imul
mov
jns
lret
jne
sub
insl
or
jmp
jnp
rcrl
dec
adc
sub
pop
sbb
idivl
or
in
int
js
pop
outsl
popf
dec
inc
mov
test
xor
mov
mov
sarb
dec
lods
mov
xlat
imul
sahf
das
jmp
mov
test
mov
or
mov
sbb
pop
mov
scas
mov
fmuls
xor
cmp
ret
rcll
es
sahf
or
cmpsl
cmc
push
sub
mov
inc
aad
xor
inc
fwait
dec
push
jbe
mov
pusha
mov
adc
dec
gs
adc
repz
push
ja
wbinvd
dec
mov
xor
adc
mov
sahf
inc
pop
fdivrl
cmp
push
std
fcmovnb
sahf
cmpsb
fcmovnbe
jno
push
or
das
inc
ret
jge
insb
jle
orl
aad
push
pop
aas
pop
pop
es
jecxz
mov
mov
lahf
stc
data16
in
mov
pop
push
pop
jnp
jae,pt
adc
sbb
subb
fs
and
cmc
fdivs
cmp
jne
inc
dec
and
test
and
xor
jp
sub
sarl
mov
imul
xchg
fimuls
mov
loope
into
jns,pn
jg
jp
xchg
pop
add
data16
jns
mov
imul
outsb
adc
sbb
mov
or
sahf
push
lds
xlat
lds
xor
add
in
inc
pop
jno
and
movsl
out
adc
cltd
xchg
mov
push
aas
sbb
fnstsw
shll
ret
stos
outsl
xchg
sub
or
movsb
in
decb
push
lret
and
cmp
gs
push
adc
sub
fisttps
inc
jle
sti
fsubp
ror
loop
gs
out
sub
in
sbb
test
sahf
sub
sub
hlt
in
mov
js
in
sub
inc
adc
lods
pop
cld
cmpl
sub
data16
mov
repz
shrb
pushf
into
fcomps
call
push
lahf
dec
idivb
mov
js
add
pop
sbb
push
movsb
fldcw
sbb
mov
idiv
push
mov
jmp
scas
add
cmp
aaa
andl
lea
imul
dec
jne
mov
xor
jl
ret
xchg
daa
insb
add
rclb
je
icebp
ret
icebp
fpatan
fistpll
dec
adc
mul
notl
cli
xlat
inc
mov
inc
mov
fcmovnu
push
js
lock
iret
xchg
pop
arpl
cli
sub
fnsave
das
cld
mov
mov
lret
jl
fs
and
fnstcw
cmp
cs
pop
xchg
fs
xor
or
mov
enter
loop
std
jo
add
cmp
mov
lods
daa
bound
and
or
movsl
jle
add
pop
xchg
movsb
jmp
sti
es
xor
push
push
in
xor
xchg
pop
sub
enter
jg
rol
dec
add
test
dec
hlt
inc
pop
mull
out
sbbb
push
inc
push
xor
or
xchg
pop
rep
js
int3
sbb
jl
mulb
ror
and
insl
adc
pop
adc
int3
repz
cmp
fcomi
scas
and
push
ret
jne
imul
adc
cmpsb
call
add
ret
movsb
cmp
loopne
or
pop
rcr
pop
out
lds
lea
data16
int
dec
xor
mov
add
push
lods
jmp
xchg
sub
orl
sbb
or
or
in
imul
mov
and
adc
cld
xchg
push
hlt
orb
repz
aas
movsb
into
mov
pusha
jne
cmp
pop
aaa
sub
lods
sub
ficoml
inc
shll
mov
test
loope
mov
dec
rcrl
and
push
sub
lods
hlt
pop
scas
xchg
jecxz
test
fwait
mov
js
push
jge
jns
test
fisubl
icebp
fldt
loopne
mulb
inc
and
cmpb
jecxz
xchg
mov
fcmove
cmp
cmpsl
cli
pop
pshufw
mov
push
negb
mov
aaa
xchg
ficoms
rcrl
push
clc
fnsave
clc
fstpt
enter
dec
rol
cld
test
mulb
xchg
inc
test
and
arpl
in
int
adc
mov
nop
dec
outsb
xchg
clc
rcll
dec
out
mov
cld
push
pushf
pop
and
pop
aas
sub
in
mov
add
lock
clc
lods
test
xchg
xchg
arpl
ja
pop
shll
jp
rorb
adc
add
pop
mov
stos
xor
sarl
shlb
mov
mov
cld
int
lcall
sub
ffreep
adc
push
dec
jmp
mov
inc
in
mov
fimuls
mov
push
mov
popa
sub
dec
mov
push
sarl
dec
movl
daa
sub
loope
xor
pop
pop
je
popl
sub
jl
add
cmp
inc
jbe
mov
mov
shrb
std
cltd
arpl
dec
mov
jp
lock
dec
jecxz
in
dec
fcmovnu
inc
jecxz
in
mov
dec
subl
dec
cmc
and
adc
mov
or
sti
mov
das
fwait
adc
test
push
sub
or
push
test
or
loope
adc
outsl
mov
adc
cmp
outsl
enter
xchg
sti
cwtl
lcall
cli
das
cltd
jb
dec
pop
or
jne
push
mov
adc
push
push
jno
pop
cmp
iret
outsb
arpl
enter
fimull
xchg
and
sub
adc
jbe
mov
xor
add
mov
mov
cmp
xchg
jle
xchg
repnz
lret
and
popf
movsl
mov
mov
loop
aam
dec
pop
insl
and
fs
jp
daa
push
inc
repnz
mov
popa
popf
pop
rcrb
fldt
fwait
into
lret
push
or
cmp
mov
in
stos
test
repz
cmpsb
out
stc
in
cmp
lea
data16
stos
or
cmpsl
xchg
pop
pop
adc
fidivl
or
fists
pop
push
or
pushl
jl
subl
sub
dec
std
loop
and
lock
mov
gs
and
cmp
mov
mov
lret
ret
movsb
mov
xchg
xor
push
sar
push
jg
jge
imul
imull
push
and
les
testb
push
pushf
aad
out
fildl
scas
xor
sti
lcall
rol
test
cli
mov
dec
mov
pop
push
int
xchg
mov
push
rclb
dec
sub
in
insb
mov
stc
loopne
loope
inc
xor
or
mov
das
in
mov
dec
popa
int3
mov
rclb
or
push
scas
es
lock
xchg
leave
loop
mov
mov
aam
xchg
lcall
inc
xor
pusha
arpl
mov
popf
or
push
fs
or
lds
dec
xor
pop
sub
orb
mov
fs
pop
es
nop
sbb
jns
mov
ja
mov
pop
lds
dec
and
gs
in
cmp
aas
fcmovb
lret
xorb
rorl
repnz
push
add
or
push
hlt
popf
cs
xor
aas
ficomps
xchg
mov
xchg
jb
jo
testl
cmc
mov
pushf
mov
in
aas
jg
jne
lahf
cmp
inc
mov
mov
ret
das
lret
sub
mov
mov
sub
cs
jb
scas
cli
movsl
out
sbb
sub
push
in
mov
out
out
int3
fcmovb
das
jnp
inc
xchg
adc
push
fcoms
subb
or
pop
jl
repz
sti
stos
dec
xchg
movsb
xchg
outsb
daa
cmpsb
adc
add
mov
xchg
adc
subl
stos
jmp
orl
xlat
int
cmc
mov
icebp
andb
into
cmpl
insl
insb
add
data16
xchg
lods
xchg
and
jbe
and
out
fldenv
aam
in
nop
and
inc
jnp
int3
jp
bound
fs
ja
xchg
push
adcl
sbb
call
out
adc
lahf
mov
sub
mov
dec
or
push
pop
fiaddl
cli
jecxz
cmpsb
aaa
mov
clc
xchg
sbb
jns
fcomps
lock
mov
movsl
inc
push
mov
lods
jb
insl
fmul
mov
mov
sbb
mov
in
mov
leave
cmpb
sub
dec
js
pusha
cmp
lock
inc
call
mov
adc
jo
out
ret
jecxz
lret
ret
jae
ret
shl
mov
push
jns
cmp
add
stc
or
nop
inc
outsb
cmc
sub
movsb
mov
out
in
lret
mov
sti
repnz
push
popa
lret
mov
hlt
xchg
mov
mov
push
push
repnz
pop
sahf
cld
aad
pop
es
cmpsb
ss
or
gs
ja
mov
inc
insb
jle
outsb
push
mov
pusha
lret
ss
ret
test
pop
inc
fs
fmul
add
sub
movsb
in
pop
outsb
xlat
mov
movsb
lcall
faddp
aaa
popf
push
fcompl
dec
xchg
inc
nop
xchg
jp
cmp
jg
sbb
ja
jg
jne
pop
movl
ret
dec
mov
call
mov
jns
ficoms
push
dec
inc
adc
cmp
popa
leave
push
ljmp
mov
mov
xchg
xor
adc
pushf
sub
adc
pop
popf
dec
dec
jae
test
pop
les
add
add
pop
pop
ljmp
push
or
adc
mov
or
ss
mov
push
jbe
mov
push
stos
stos
mov
push
pop
jg
cmp
pop
in
inc
arpl
mov
xor
inc
dec
lds
and
xchg
lcall
cmp
cmp
pop
add
orl
mov
daa
add
add
pop
dec
push
xlat
insl
xor
ljmp
xorb
mov
mov
lret
ret
push
arpl
cwtl
sarb
fwait
movsl
outsl
adc
subb
xchg
xchg
ret
out
call
setno
repz
dec
xchg
cmp
in
and
lcall
sbb
sbb
data16
iret
js
adc
les
mov
jl
in
cmp
test
adc
scas
xor
fisubrl
pop
push
push
clc
or
push
divb
inc
adc
mov
mov
test
dec
pop
jp
nop
rclb
cmp
adc
in
arpl
jmp
cmp
jle
dec
scas
jmp
or
pop
inc
js
mov
ss
loop
mov
and
jno
shll
in
test
adc
mov
dec
push
sbb
scas
aam
push
das
std
pushf
mov
shlb
mov
dec
mov
sub
lds
push
mov
stos
adc
fldl2t
repnz
xorl
imul
push
mov
in
fidivl
sbb
divl
pop
adcb
dec
call
dec
subl
jle
jo
negl
scas
mov
xor
test
popf
scas
pop
ja
cmp
jns
iret
xchg
mov
in
je
push
lds
mov
adc
push
add
sub
rcrb
test
push
nop
fs
int3
lret
fcomps
fcomps
cmp
out
add
clc
nop
fistpl
inc
insl
dec
adc
pop
aas
pop
hlt
clc
cmp
clc
add
lods
stc
imul
fmuls
xchg
out
fsubl
rorl
shll
jno
jo
xchg
sub
popf
jge
bound
pop
push
push
loop
sti
movsb
adc
inc
pusha
pop
xchg
dec
add
and
in
push
mov
jns
int
es
pop
inc
jg
adc
xor
shll
or
stos
mov
dec
sub
aaa
pop
aad
lods
rorl
leave
adc
nop
dec
adc
push
sub
pop
or
lret
out
push
testb
cmp
repnz
or
add
movsb
pop
loopne
xor
mov
pop
sub
rcll
addr16
pop
jle
pusha
rorb
mov
call
mov
mov
pop
mov
jmp
mov
in
lds
mov
push
push
jo
cmpsl
sub
test
pop
rorb
xor
sub
mov
add
sarb
lret
sub
rcr
cmp
push
leave
cmp
or
xlat
ret
or
test
or
sarl
push
mov
es
adc
adc
jno
pop
pop
clc
jmp
lods
aaa
stc
or
mov
xchg
fstl
mov
fadd
rolb
mov
jp
mov
dec
sub
repnz
int3
jl
clc
in
mov
iret
push
rolb
call
sbb
neg
cli
out
lret
ret
testl
mov
push
es
jge
negl
xchg
add
add
mov
and
sbb
out
fwait
stos
arpl
jmp
push
test
xorb
sub
in
popf
ficoml
andl
popa
cmpsb
lds
jno
cmp
sub
aad
push
test
add
jge
cli
nop
jge
insb
jb
sbb
js
xchg
xchg
add
adc
or
mov
sub
push
lahf
movsb
xchg
mov
shlb
rcrl
push
push
addr16
cmp
dec
dec
loope
add
cmc
and
inc
imul
push
mov
stos
jns
aad
mov
adc
push
sbb
pop
cwtl
add
mov
jno
pop
sbb
lock
out
mov
mov
jo
push
pop
nop
pushf
sbb
dec
inc
fdivp
add
aam
inc
shlb
inc
mov
sbb
add
mov
testb
sub
sub
into
repnz
int
leave
loopne
xor
out
sbb
gs
nop
test
sub
dec
enter
add
repz
inc
int
and
fdivrs
mov
sbb
inc
mov
nop
add
addr16
cmp
mov
clc
lcall
xchg
cmp
and
cmp
dec
push
mov
mov
pop
mov
pop
imulb
int3
shl
sahf
mov
sarl
ljmp
mov
xchg
loope
push
imul
out
xchg
pop
xchg
test
leave
push
neg
movsb
mov
push
shlb
xorl
stos
outsb
xchg
mov
call
in
lock
sarl
aad
cmpsb
cli
icebp
outsl
fistps
or
mov
hlt
mov
xor
shll
int
sbb
popf
cmp
les
and
out
jl
int
push
adc
data16
ja
ja
in
xor
xchg
cmp
add
mov
les
adc
mov
pop
pop
dec
aam
mov
pop
pop
cld
dec
fstl
rcr
sbb
orb
xchg
xchg
call
adc
pop
xor
cmpb
mov
or
fdivl
in
test
or
cmp
mov
jb
aas
xor
test
jnp
lock
mov
mov
or
sub
lds
pop
ret
and
inc
mov
add
adc
mov
add
iret
divb
dec
in
dec
scas
sub
and
loop
test
adc
pop
ret
aas
lahf
xchg
push
push
mov
test
test
rcr
scas
pop
scas
mov
adc
and
outsl
jno
jb
sbb
xchg
je
mov
gs
cmp
xchg
pop
and
mov
out
push
mov
fwait
ret
xor
lahf
ret
loope
cmp
mov
inc
sub
push
mov
inc
lods
ret
xor
push
cmp
adc
add
popf
xchg
out
fs
adc
rol
mov
add
stc
xchg
test
push
cmp
fists
inc
pop
iret
cmc
add
bound
inc
sar
into
jb
dec
cmp
sar
sub
cmp
jmp
sbb
fwait
je
mov
das
xlat
mov
and
pop
aaa
pop
inc
add
out
push
pop
stos
xor
loop
mov
inc
lahf
shlb
sahf
daa
and
mov
adc
call
mov
dec
sub
mov
nop
lea
and
movsb
mov
or
jmp
xor
inc
push
pusha
out
lret
aas
mov
sbb
or
fwait
mov
or
inc
cmp
mov
mov
mov
mov
add
dec
mov
hlt
lret
daa
mov
jge
pop
xchg
pusha
cmpsb
scas
aad
push
sbb
xchg
adc
lea
fwait
or
andb
pop
lea
popa
xchg
rol
test
cmpsb
iret
sti
sub
jo
mov
push
sub
insl
sbb
repz
sahf
xchg
cs
sbb
imul
cmp
lret
pop
pushf
fisttpl
pusha
jne
sti
out
mov
mov
ja
dec
mov
je
enter
adc
push
sbbb
pop
dec
test
xchg
imul
add
jne
adc
sbb
pop
dec
jecxz,pn
shlb
inc
nop
push
popf
leave
movsl
dec
sub
idivl
out
outsb
movsl
rcl
push
mov
hlt
cmp
cwtl
popf
andb
mov
test
std
stos
adc
sub
mov
or
stc
js
push
daa
lret
ret
inc
lods
adc
mov
jbe
pop
and
or
jmp
jp
mov
insl
push
push
stc
mov
outsl
inc
cltd
dec
movhps
push
push
or
fdivrl
movsb
icebp
aaa
arpl
xor
mov
hlt
sub
cli
popf
in
dec
out
mov
into
repz
in
out
into
cmc
les
les
inc
gs
inc
mov
int3
cmp
pop
dec
mov
fsubrs
jle
cmp
sub
int3
push
adc
jb
pop
mov
sbb
mov
popa
enter
adc
popf
sbb
or
jge
add
test
dec
imul
fwait
gs
mov
push
out
sub
cltd
push
cmp
pop
scas
sub
cs
push
cs
pusha
dec
add
mov
xor
mov
es
mov
push
lahf
push
sarb
jle
insl
jbe
adc
das
xor
out
out
push
scas
dec
adc
and
dec
sub
mov
loop
lods
adcb
jecxz
and
add
out
pop
push
xor
inc
scas
outsb
and
adc
mov
or
mov
push
pushf
aam
int3
pushl
or
je
lcall
pop
push
sbb
in
call
cmp
imulb
sub
pop
xlat
and
mulb
push
test
fistps
test
inc
xchg
mov
xlat
mov
cs
iret
pop
and
jo
inc
xchg
outsb
xchg
or
cld
sub
inc
ret
leave
mov
movsl
xchg
adc
cmp
call
mov
es
mov
dec
jl
jg
fisubs
test
mov
repnz
push
xchg
stos
mov
test
je
dec
jns
lds
jo
cmp
sbb
loopne
int3
cmp
pop
ss
xlat
sti
ljmp
add
pop
addr16
mov
ja
or
and
movl
mov
pop
rorl
pusha
dec
ljmp
adc
rcrb
cs
cmp
mov
sbb
adc
aaa
dec
cmp
mov
inc
cld
dec
aaa
repz
add
popf
jae
inc
mov
xchg
rep
or
push
int
jl
mov
push
mov
push
cmp
xorb
loope
subb
popf
push
jmp
pop
adc
cmp
stc
and
mov
sub
clc
in
bound
mov
adc
xchg
adc
aas
add
pushf
fwait
pop
jne
call
sub
pop
aad
je
pop
pop
ds
lcall
outsl
pop
or
mov
and
into
or
push
loop
sub
xor
js
lcall
in
pop
pop
mov
rdtsc
std
add
clc
pop
outsb
cmp
push
call
push
js
jns
clc
ror
push
popa
nop
push
iret
or
mov
and
jo
jl
sub
sub
cmp
ja
test
lret
xchg
push
stos
xor
loopne
xor
xchg
and
mov
push
add
xchg
movsl
inc
jge
pop
test
je
sbb
and
adc
pop
dec
jl
popf
imul
roll
sbb
jae
adc
or
mov
out
xchg
aam
xorb
fnstsw
mov
and
mov
xor
test
sub
xor
mov
inc
out
lcall
xchg
lods
cs
outsb
xchg
inc
adcl
repz
add
push
rcll
push
orl
inc
adc
stos
fwait
lea
inc
adc
and
pushf
jp
bswap
add
rol
jmp
adc
mov
mov
or
dec
push
loopne
push
mov
jb
mov
inc
movsb
mov
dec
fwait
adc
pop
es
es
xor
xchg
out
sub
pop
lods
fdivrl
mov
dec
add
cmp
loop
scas
inc
outsl
pop
imul
sbb
sti
xlat
sbb
aaa
mov
lret
icebp
xchg
cmpsb
sbb
xchg
testl
pop
mov
lret
ret
push
iret
test
xchg
mov
imul
test
les
or
ss
negb
je
mov
dec
cmp
adc
repnz
jb
lcall
inc
add
add
adc
fnstcw
out
jg
adc
mov
test
pop
rolb
adc
sbb
push
lods
out
mov
add
les
push
lock
cmp
lcall
mov
ret
and
imul
jle
in
dec
test
mov
jno
addl
mov
cmpsb
outsb
int
test
insl
sbb
int3
shll
sti
jecxz
xchg
jmp
jp
pop
cmp
sbb
ret
mov
insb
sub
lcall
sub
aaa
out
inc
pop
jns
jp
je
out
insb
or
std
mov
add
xlat
inc
jg
sbb
mov
mov
lahf
ret
ret
cmp
mov
pop
fs
xchg
pop
fisttpl
mov
in
ret
sub
xchg
in
mov
and
xorl
or
mov
test
dec
pusha
add
adc
stos
mov
jnp
jae
testb
lods
cmp
jae
loop
mov
sub
push
dec
cmp
push
nop
fwait
cmpsb
aam
xor
scas
cmp
mov
bound
cmovg
xor
or
cld
pop
mov
xor
push
ljmp
ljmp
test
ror
jb
leave
dec
rcrb
cmp
ljmp
push
mov
dec
out
sbb
pop
andb
add
or
ret
mov
sub
ret
aas
rolb
add
xor
in
std
push
icebp
fistpll
jg
xchg
nop
mov
call
push
fsubrl
rorl
cwtl
sbb
mov
sub
add
or
mov
mov
pop
data16
pop
xchg
sldt
adcb
sti
mov
push
daa
ret
mov
sbbb
and
fucomp
lcall
inc
aas
mov
xor
imul
or
out
add
insl
mov
dec
jle
lea
out
sbb
es
adc
daa
iret
mov
or
mov
test
cli
mov
or
pop
faddp
xor
sub
push
xor
pop
imul
movsb
adc
mov
sbb
jmp
push
andb
jno
pop
cwtl
fs
cmpsb
mul
pop
xor
sub
lea
push
lds
je
pop
sahf
lods
movsl
cmp
or
xchg
or
lock
mov
aaa
jnp
cld
xchg
lahf
in
mov
cmp
sbb
pop
cld
and
ret
sub
into
adc
es
pop
ja
icebp
psraw
xor
inc
jmp
cli
cmpsb
mov
sub
cli
mov
js
push
daa
mov
stos
or
sahf
outsl
rolb
in
sbb
frstor
jb
movsb
cmc
mov
jb
mov
adc
dec
mov
fimull
jns
xchg
push
and
mov
ss
jmp
inc
pop
int
cmp
test
sub
mov
ss
imul
gs
ret
mov
lret
xor
add
aaa
jnp
inc
dec
mov
fistl
stos
push
lds
sbb
ret
mov
roll
mov
daa
repnz
or
or
sbb
mov
jp
push
mov
dec
add
pop
ds
adcl
mov
shl
test
cmp
jecxz
aas
lock
iret
sub
inc
aad
lahf
jbe
add
sub
ljmp
xor
inc
xchg
push
outsl
mov
gs
loope
test
hlt
inc
push
adc
repnz
mov
dec
xchg
mov
ds
hlt
jge
aas
in
rcr
lock
push
movsl
xchg
xchg
dec
and
fdivrp
mov
jge
imulb
icebp
pop
pop
push
fs
rcrb
pop
pusha
test
mov
or
in
xchg
test
add
xor
in
sbb
loope,pt
adc
arpl
jle
cmp
pop
cmpsb
out
or
call
negb
cmp
mov
movsb
popf
stos
pop
add
mov
jmp
lods
ja
mov
adc
mov
call
or
and
push
mov
nop
orb
int
bt
insl
addb
sbb
dec
fndisi(8087
add
jne
pushl
test
jl
push
pop
mov
xchg
stos
outsl
sbb
mov
cmp
outsl
xchg
fidivrl
ret
xchg
adc
cmpb
lret
dec
subl
out
adc
inc
js
fnstsw
jl
fisttpl
iret
icebp
fcmovne
push
mov
or
pop
aas
jnp
cld
or
xchg
push
idiv
jmp
stc
popa
mov
or
in
jnp
push
clc
out
mov
mov
add
lahf
mov
jge
sarb
add
bound
and
dec
xchg
call
ljmp
push
js
xchg
sbb
xor
dec
push
sbb
sub
sbb
ja
push
sub
nop
mov
rcrl
sbb
add
dec
xor
sub
mov
push
and
testl
std
add
bound
test
pop
jmp
pop
add
jp
xlat
xchg
push
and
ud0
lcall
ss
pushf
test
adc
fistps
xor
sbb
out
cli
jbe
mov
cmp
jmp
dec
inc
jb
cld
clc
ja
fwait
pusha
sar
add
cmpsb
int3
enter
scas
sub
add
orb
sub
pop
mov
scas
sarl
sub
sbb
mov
sarl
mulb
push
xor
loop
loop
xchg
push
add
shlb
pop
or
daa
movsb
jp
push
daa
jb
sub
arpl
adc
das
mov
ja
adc
js
inc
icebp
push
testl
mov
popa
jns
aas
pop
mov
into
daa
push
cmpl
dec
jmp
cmpsb
aad
xchg
xchg
ss
cmp
lcall
mov
mov
mov
jmp
xchg
cmp
ja
mov
insl
mov
cmp
sbb
sub
out
jno
enter
sbb
daa
lret
fdivs
inc
hlt
movl
jg
dec
loopne
movsb
and
lea
fstpl
imul
jmp
adc
roll
pop
mov
int
lods
jbe
xlat
or
add
adc
and
push
mov
ds
arpl
stos
stc
cwtl
mov
xor
pusha
sub
daa
sub
icebp
shl
mov
orl
repnz
add
stos
mov
popf
fs
jae
in
push
xchg
or
lcall
xchg
loope
popa
lods
nop
jne
jmp
pop
mov
repnz
fcmovu
gs
lahf
fbstp
sahf
add
shlb
in
mov
jbe
lahf
rcl
xchg
pusha
adc
addb
pop
aad
xlat
or
cltd
mov
mov
lock
push
fsave
mov
push
inc
fmuls
test
mov
lcall
jo
pop
push
add
xchg
xchg
int3
xor
jnp
mov
push
js
or
aaa
jmp
insb
jbe
mov
mov
jp
push
add
ja
dec
mov
pushf
and
daa
push
sbb
mov
cld
inc
or
xor
mov
mov
dec
inc
or
imul
jo
rorl
repz
outsb
ja
ss
seto
fnstsw
cwtl
sahf
mov
and
xchg
adc
ret
arpl
aaa
fsub
aaa
repz
pop
jmp
daa
fsub
push
cmp
bound
xor
push
adc
add
adc
cmc
std
mov
and
xchg
arpl
cld
popf
xchg
push
ret
test
test
out
aam
pop
stc
dec
mov
xchg
jbe
jge
outsb
push
ljmp
cmp
or
loopne
cwtl
mov
xor
xor
adc
add
jp
jmp
sbb
pop
cmpsl
jl
fisubrl
inc
inc
icebp
ds
scas
xchg
hlt
imul
push
fldt
cs
push
sarl
cmc
lcall
xchg
pop
inc
scas
mov
test
lcall
xor
inc
clc
imul
inc
imul
mov
repnz
bound
and
sti
cltd
or
push
in
data16
xor
rcl
mov
ficoml
lret
sub
jae
nop
sub
dec
mov
cmc
mov
frstor
xchg
dec
lret
popf
or
out
icebp
cltd
inc
iret
inc
pushf
scas
ret
testb
andl
imul
movsb
jge
shl
lea
jg
push
test
int
leave
mov
loope,pt
daa
mov
clc
mov
fnsave
pop
idivl
xor
ja
pop
ret
push
adcl
mov
cltd
xchg
subl
dec
aam
sbb
xchg
jbe,pt
jp
movsl
add
in
popf
xlat
fwait
sub
sbb
aas
xor
test
push
push
sub
scas
fidivl
aam
xlat
fidivs
aad
shr
mov
sti
or
fwait
mov
and
fwait
iret
dec
sub
es
icebp
mov
cmpsl
sub
pop
int
sarl
subl
mov
mov
mov
mov
les
sub
adc
pop
cmpsl
pop
call
adc
mov
iret
cld
sub
ss
push
insb
sub
je
and
out
in
aad
sbbl
call
sbb
roll
fists
mov
imul
cwtl
in
stos
adc
and
aad
push
lahf
fildll
jne
hlt
dec
popa
jae
sbb
fwait
sbb
jmp
jmp
les
addb
cmpsb
sbb
test
jg
aas
or
sub
mov
into
cli
imul
dec
sub
or
or
out
and
sbb
cmp
and
push
dec
mov
cld
lret
cmp
sub
sbb
mov
cmc
push
inc
mov
iret
lea
aaa
xor
pop
push
js
push
dec
pushf
mov
mov
xor
sar
loopne
and
cmp
cmp
jno
xchg
jnp
call
pop
dec
pop
and
adc
dec
cmp
cmp
out
iret
bound
dec
gs
pop
or
sahf
lahf
call
outsl
ret
in
pop
mov
insb
inc
lods
scas
cltd
and
rcrb
mov
pusha
push
add
mov
mov
cmp
xor
imul
xor
ficoml
xor
mov
stos
xchg
mov
lea
inc
lock
or
jmp
sbb
bound
cmp
xor
insb
aaa
mov
jp
rorl
fildll
pushf
shrl
repnz
push
out
cmc
push
pushf
mov
nop
icebp
xchg
mov
leave
add
and
sbb
cwtl
aam
dec
adc
sahf
testb
mov
dec
mov
xor
xor
loopne
std
inc
iret
adc
xor
call
or
push
mov
dec
je
pusha
adc
imul
pop
mov
add
sub
and
aas
insl
lea
sub
scas
insb
pop
xchg
fadds
push
addl
daa
in
fnstenv
jp
mov
les
out
imul
cmc
js
mov
fisubs
adc
pop
dec
cmp
stos
add
push
mov
xchg
xchg
lret
mov
bound
outsl
xchg
xchg
cmpsl
mov
into
js
fs
sbb
jo
jne
ss
sti
test
jle
or
pop
push
or
int
and
lds
jo
mov
push
cmpsb
push
sbb
insb
xor
push
out
into
cmp
mov
inc
inc
mov
dec
popa
add
sbb
loop
call
cmp
pop
adc
test
jecxz
sbb
mov
mov
inc
or
mov
aam
arpl
push
mov
test
add
fisttpll
adc
adc
pop
iret
cmp
loop
lods
xor
cmp
sub
jb
mov
push
mov
sarb
pop
dec
adc
imul
cmp
pop
sarb
daa
push
daa
mov
xchg
cli
inc
xchg
fs
sbbb
or
xchg
add
aaa
rcrl
xlat
mov
inc
push
dec
pusha
dec
mov
inc
adc
cmc
sbb
in
mov
and
imul
sub
nop
mov
aam
pop
aas
mov
lea
jmp
mov
xor
add
mov
lcall
pop
jl
jb
repnz
cmpsl
pop
xchg
data16
repnz
add
sbb
fstpt
inc
sub
rorb
mov
pop
orb
push
add
or
jnp
out
lret
rcrb
mov
jb
ljmp
mov
fnstenv
je
popa
pop
or
sarl
jns
mulb
je
sub
ja
mov
sub
xchg
xchg
mov
shll
ret
dec
jne
hlt
scas
push
popf
sbb
add
addl
push
mov
or
stos
mov
dec
scas
mov
push
xchg
inc
subl
jge
hlt
dec
jge
adc
testl
addr16
sti
icebp
pop
aad
mov
loopne
and
fcompl
rclb
sbb
mov
mov
jns
gs
dec
mov
cwtl
test
int3
mov
sub
leave
les
pop
bound
orb
mov
in
movsb
mov
loop
mov
or
cmp
lock
imul
aas
add
push
aam
xchg
mov
or
xchg
lret
mov
jg
push
cmp
jnp
sbb
push
sub
jecxz
dec
imul
mov
add
adc
dec
loopne
pop
dec
lea
loope
outsl
xchg
imul
les
cmpb
mov
out
xchg
and
mov
int
sahf
jno
loope
inc
je
mov
loope
mov
mov
jae
mov
add
nop
mov
test
add
lret
jno
adc
lock
pop
xchg
dec
sub
in
and
sbbl
jo
into
scas
enter
bound
cltd
xchg
jo
push
adc
lret
orb
inc
sti
mov
ds
adc
aad
lock
jg
mov
leave
mov
jns
and
decb
or
sub
cmc
aaa
ja
pop
push
dec
iret
aas
cltd
ds
notb
sub
mov
gs
jno
adc
cmp
dec
jmp
jns
int
push
xor
jne
lcall
xor
xchg
mov
cmp
bound
xor
fwait
dec
lods
or
or
dec
xor
mov
jne
out
test
adc
xor
jns
inc
inc
repnz
pop
and
jg
cmp
xor
leave
rcrb
add
outsb
es
mov
lcall
scas
xchg
stos
test
stc
fnstsw
lea
and
cwtl
inc
dec
mov
std
push
cltd
test
neg
cmp
cmpsl
pop
mov
xchg
pop
push
into
testb
scas
pop
outsb
xchg
fcmovnb
mov
je
sbb
xchg
mov
add
pusha
enter
int3
sbb
out
push
cmc
idivb
sub
ret
xchg
ss
mov
xor
mov
scas
jge
scas
sti
push
inc
hlt
lods
inc
outsw
sbb
jge
mov
lret
ret
or
push
in
sub
lock
cld
lcall
push
loope
sbbl
sub
rep
insl
sub
cld
push
cld
dec
sub
mov
stos
lods
mov
jge
in
pop
sbb
adc
add
and
sub
sub
push
push
pushf
xor
mov
adc
sub
and
fadds
cmp
mov
repnz
leave
loopne
cltd
shll
jnp
inc
mov
jmp
xchg
stos
and
or
or
fisubl
roll
test
push
movsb
rcrl
cltd
or
xchg
outsl
xor
sarb
cmp
inc
test
stos
sahf
arpl
int3
daa
scas
lahf
mov
out
jg
pop
aad
call
and
stos
jle
daa
adc
sub
push
cwtl
nop
lds
mov
insb
imul
push
push
popa
sbb
lret
hlt
dec
mov
mov
outsb
pusha
or
bnd
icebp
add
rclb
jae
in
fcompl
mov
cmp
mov
stos
sub
jecxz
fmull
fwait
sbb
lcall
cmp
test
std
xor
imul
push
adc
fs
int
lcall
cs
hlt
icebp
push
mov
leave
add
dec
dec
popf
cmpsb
sub
fldcw
adc
push
stos
lret
imul
ret
push
jmp
gs
jnp
jo
arpl
in
xchg
imulb
mov
push
aam
jno
dec
mov
pusha
jbe
jg
adcl
jo
outsl
push
pushf
xor
sbb
loop
push
cmp
push
loope
decb
out
out
shl
cmpsl
sbb
adc
xchg
andl
pop
popf
sahf
cmp
cwtl
mov
loop
mov
dec
mov
cwtl
xor
inc
js
xor
sub
fwait
dec
out
pop
xor
aad
jne
jp
lea
lret
mov
mov
adc
inc
sbb
lea
lea
pop
mov
mov
iret
cmp
repz
and
call
nop
push
cmp
sub
inc
jmp
xchg
in
dec
roll
xchg
test
push
add
cli
push
sub
test
push
shl
inc
stc
jns
sub
dec
lock
in
js
mov
cmp
pop
jg
mov
imull
xor
flds
fistpll
push
pop
daa
push
mov
mov
jo
icebp
add
fcmovbe
xchg
jns
mov
fldcw
inc
test
call
mov
loop
xchg
sub
jecxz
and
xor
adc
mov
movsb
imul
xchg
push
mov
xchg
and
dec
and
add
sarl
repnz
inc
xlat
scas
stc
sarb
add
fldl
lods
jns
mov
in
leave
mov
idivb
fwait
dec
les
aad
jp
jmp
sub
jnp
int3
lods
mov
inc
mov
scas
outsl
imul
loopw
push
imul
xchg
lret
gs
mov
inc
mov
fs
mov
sub
out
loope
inc
hlt
popf
outsb
cltd
push
xchg
xor
fdivrl
xchg
jl
ret
stos
fsubs
inc
dec
lahf
and
fcom
xchg
jb
pushf
cmpsl
xchg
bound
cmpsl
repnz
sahf
test
in
mov
int
insb
mov
pop
fs
lret
jl
shrb
mov
or
mov
nop
mov
pop
in
repnz
mov
inc
pop
and
mov
push
inc
inc
adc
mov
daa
inc
std
insl
xchg
mov
test
shlb
push
fcomp
cmp
outsl
adc
mov
js
mov
xchg
sti
fstpt
insb
lcall
cmp
outsb
insb
inc
cmc
add
shll
hlt
pusha
fwait
iret
enter
pop
stos
cmpl
pop
mov
add
adc
aaa
data16
jg
test
xor
add
fadds
jnp
sub
out
int
rorb
inc
pusha
pop
jbe
xor
es
push
mov
repnz
add
pop
add
repz
pushf
call
rol
adc
xchg
out
mov
xchg
ja
ret
das
dec
sub
orl
add
in
xor
inc
add
lds
pop
push
loop
imul
out
fwait
and
ror
int3
inc
sub
mov
mov
add
xorb
dec
jmp
lods
hlt
cmpsl
push
insl
cmp
lcall
fiadds
movsb
xor
and
daa
lea
xchg
and
mov
mov
dec
clc
or
pop
cmpsb
add
rorb
sub
imul
add
mov
xor
jl
rorb
ljmp
adc
push
outsb
in
xchg
jmp
mov
or
movsb
and
pop
add
les
stc
mov
push
out
xor
testl
cmp
xchg
shrl
mov
ds
out
in
or
out
xor
aas
mov
pop
mov
pop
sbb
pop
xor
sbb
mov
mov
xchg
jl
lcall
sarl
dec
pop
addr16
in
adcb
bound
movsb
je
loop
mov
ret
in
cmp
ss
cwtl
shll
mov
mov
pusha
cmpsb
and
mov
scas
lods
push
xchg
ljmp
inc
movsl
and
add
pop
ficomps
lret
xlat
mov
scas
in
pop
dec
xchg
sbb
imul
in
jg
jg
les
push
push
xor
mov
jnp
xchg
mov
sti
movsb
or
cli
push
das
movsl
lret
mov
and
pop
and
push
add
lea
mov
mov
sub
mov
lahf
mov
xor
xor
sbb
flds
insb
enter
je
bound
outsl
int3
or
out
mov
dec
push
hlt
adc
shll
inc
in
in
mov
mov
push
xor
jno
ret
shlb
sbb
out
sub
fs
cltd
test
push
push
pop
pop
mov
in
cmp
loopne
sub
push
test
push
imul
sbb
push
leave
mov
sub
test
cwtl
aad
jge
addr16
xchg
es
aas
scas
iret
negl
push
dec
sbb
fidivrs
cltd
jecxz
mov
mov
adc
jns
dec
lret
push
push
outsl
in
push
hlt
outsl
adc
sbb
mulb
movsl
shlb
push
cmpsb
dec
lock
sbb
mov
sub
frstor
dec
or
xchg
mov
mov
js
push
push
scas
or
divl
sbb
push
xor
arpl
subb
and
push
inc
test
shlb
xchg
jl
rolb
xchg
clc
push
pop
pop
add
jmp
ret
jmp
pop
cmp
mov
movsb
loopne
pop
sub
js
jb
adc
sbb
push
mov
jne
fcoms
ljmp
inc
in
mov
or
or
addr16
cs
nop
lods
mov
mov
data16
sbb
push
push
sbb
jecxz
mov
fwait
dec
push
adc
dec
dec
adc
sub
pop
movsl
lret
repnz
sti
lea
cmovns
dec
aad
into
test
mov
pop
xchg
xchg
into
mov
push
lret
inc
xchg
adc
shr
lds
mov
in
lahf
xchg
pusha
stos
mov
inc
test
sahf
cmpsb
xor
shrb
adc
and
mov
sub
jb
mov
xchg
push
add
inc
add
cmp
xchg
jl
mov
or
push
dec
inc
repz
inc
lock
outsl
push
sub
ret
imul
mov
and
mov
or
in
or
test
add
jne
pop
stos
in
lahf
hlt
mov
call
dec
mov
mov
xchg
imul
pop
sti
sub
cmp
xchg
inc
jp
mov
cmp
pop
xor
imul
fs
repz
lock
scas
mov
inc
fst
scas
xor
aam
cmpsl
mov
mov
inc
or
ss
push
punpckhdq
orb
push
pusha
push
imul
ds
adcb
mov
mov
mov
jne
inc
jmp
inc
add
sbb
stos
test
in
pop
jp
pop
and
cmp
stc
sbb
mov
jbe
repz
aas
xchg
mov
mov
xor
or
outsl
jno
cld
push
dec
jno
sbb
mov
mov
sub
mov
fstps
mov
into
or
fnstcw
aaa
fwait
inc
enter
stos
imul
pop
adc
data16
adc
out
push
mov
ret
jg
pop
bound
or
mov
popa
jge
out
mov
rolb
pushw
jmp
fsubp
mov
mov
jle
sub
pop
xchg
roll
cmp
pushf
sub
aaa
mov
fildll
cmpb
les
call
daa
inc
xor
sub
push
inc
in
nop
mov
pop
mov
mov
in
testl
dec
sarl
inc
mov
icebp
in
pop
lcall
mov
cmpsl
lods
sub
adc
jnp
imul
xor
jnp
ja
cwtl
xchg
sbb
repz
out
out
sahf
lret
lcall
fdivl
inc
and
arpl
mov
mov
adc
add
aas
pop
fstps
cmc
sbb
fsts
imul
shrl
cmp
xchg
sub
push
loope
jbe
mov
adc
dec
lret
icebp
cmpsb
test
leave
and
es
aam
jo,pt
adc
or
sub
sbb
lcall
test
jno
push
fwait
imulb
jp
and
cmpsl
repnz
mov
arpl
negl
jns
cld
pop
sarl
movsb
push
js
dec
int3
sub
pop
dec
ljmp
push
cs
inc
test
xchg
outsl
sbb
jns
in
mov
mov
cmp
pop
pop
sub
enter
and
fsubl
leave
repz
loopne
sub
and
insl
and
iret
add
mov
push
sarb
dec
ret
lea
adc
push
sahf
sub
out
mov
stc
push
inc
loope
sbb
test
cmp
jno
imul
jb
cmp
push
dec
inc
mov
push
cmc
push
andl
jne
inc
mov
inc
mov
xchg
inc
je
pop
mov
ficomps
loop
pop
mov
cmc
sub
test
pop
mov
xor
subb
xor
movsb
sbb
jb
and
cmp
fldenv
cmpsl
cltd
ljmp
into
xchg
arpl
sub
lea
push
stc
pminsw
jno
push
mov
inc
bound
test
popf
iret
sbb
push
adc
bound
add
into
test
and
cmpsb
into
mov
push
fcomps
fiadds
lods
dec
aaa
ret
xchg
and
push
sti
int3
scas
pop
sbb
xchg
fsubs
sti
fnstsw
or
rcl
push
scas
lret
fimuls
test
ret
sti
std
sbb
lret
into
lds
sbb
jl
mov
jecxz
lcall
outsb
subb
or
or
and
and
sub
pop
dec
inc
push
icebp
imul
add
adc
bound
lea
mov
lahf
lahf
test
loop
jb
aaa
jmp
push
movaps
lds
xor
je
outsb
pushf
sahf
xchg
push
or
mov
xchg
mov
cmp
pushf
aas
sub
pop
outsb
dec
or
cmp
int
xchg
mov
mov
push
mov
inc
sub
and
popa
into
or
pop
xchg
mov
cld
les
leave
inc
sbbb
sub
arpl
pop
mov
popf
daa
mov
loopne
in
lcall
mov
out
fucomp
lods
adc
in
pop
sbb
push
cs
adc
ljmp
add
mov
xor
jl
push
jmp
or
aas
mov
sub
mov
cmc
std
scas
cmp
adc
and
divb
enter
push
aaa
lcall
das
ja
mov
cmp
mov
sti
inc
xchg
cmp
xor
loopne
or
shrl
outsl
sub
adc
inc
xor
jne
mov
pop
add
pop
push
stos
sbb
mov
add
mov
iret
push
pop
mov
xchg
das
notb
inc
imul
pusha
cmc
dec
push
popa
hlt
out
sub
mov
jb
sbb
arpl
and
or
mov
test
xchg
xlat
addr16
loope
mov
mul
jl
add
lea
sarb
test
inc
mov
popa
sub
sbb
ret
sub
not
aad
add
popa
jge
mov
lahf
insb
popa
fnstcw
jnp
inc
push
add
inc
stos
xlat
stos
xchg
popa
jge
fsts
ljmp
dec
negb
stc
out
and
std
cmc
add
fidivs
mov
ljmp
stos
xlat
fs
push
push
pop
scas
fisubrl
xchg
stos
ja
cmp
dec
loope
xchg
call
adc
rcrb
repz
xchg
int
je
pop
fstp
mov
stc
outsl
or
cmpsb
out
jae
mov
push
in
or
dec
xchg
cmp
out
push
xchg
jae
push
cmp
push
and
adc
xor
ds
xorb
mov
dec
dec
xchg
mov
jae
dec
pusha
mov
mov
fnstcw
jmp
mov
loop
clc
mov
aas
sub
into
stc
inc
cmp
jge
inc
rcrb
mov
sbb
push
xchg
and
incb
xorb
adc
out
loope
ljmp
rclb
sub
lds
cmpsl
into
push
out
loope
mov
int
adc
repnz
testl
jg
inc
dec
scas
pop
mov
lea
sbb
or
cmpsb
or
movsl
mov
mov
in
repnz
test
scas
mov
jmp
mov
test
jns
rcl
je
adc
push
adc
loop
lcall
add
addb
mov
jo
pop
push
xchg
cmp
jl
inc
into
adc
testl
ret
mov
mov
dec
lea
fdivr
sbb
or
subl
jg
cli
popa
cmp
add
popf
jge
push
pop
push
mov
test
test
xchg
ss
inc
lret
cmp
or
pop
fwait
mov
cmp
int3
cmpsl
lea
add
or
push
fwait
add
movsl
cmc
add
sbb
mov
arpl
mov
shll
add
pusha
sub
dec
mov
stos
cmpb
outsl
repnz
sbb
adc
xlat
dec
loopne
popl
xchg
mov
or
inc
ja
push
out
adc
mov
jg
ds
lea
imul
scas
idivl
mov
mov
mov
jmp
pop
dec
sahf
inc
xchg
in
repz
cmp
mov
push
dec
jne,pt
pop
adc
cld
and
mov
xchg
and
inc
jg
ds
dec
jnp
xor
cli
and
gs
push
sahf
mov
add
ljmp
cmp
test
mov
fucomp
push
inc
loopne
cwtl
xor
hlt
mov
ss
inc
sti
mov
mov
sti
push
jbe
and
les
sbb
int3
int3
pop
dec
and
push
popf
stos
repz
loop
lret
mov
cmp
cmp
scas
sti
lods
clc
lcall
sub
mov
jns
inc
dec
xchg
loop
addr16
or
jb
push
jl
cmc
rclb
test
popf
leave
dec
mov
cld
push
stc
and
push
and
movsb
mov
or
cld
ljmp
mov
insl
xchg
testb
add
in
scas
pop
fnstsw
or
mov
nop
and
ds
imul
cmp
dec
enter
jae
or
push
or
push
inc
push
or
and
push
sbb
daa
mov
rol
push
into
add
call
jp
dec
int3
shll
aas
lea
push
xchg
mov
jne
dec
or
das
ds
xlat
lahf
in
daa
push
je
pushf
aad
jge
push
in
mov
push
ret
inc
dec
xchg
cmpsb
xor
xchg
xor
cmp
sub
mov
testl
push
sti
sub
std
dec
inc
aas
mov
mov
filds
adc
ret
loope
sbb
sub
in
imul
inc
cmp
mov
lea
jecxz
loop
add
loopne
pop
and
push
lea
shlb
inc
xchg
into
in
or
push
aam
or
push
and
jnp
jnp
test
aam
cwtl
outsb
add
cli
adc
push
xchg
xor
aad
cltd
imul
push
into
push
std
dec
ja
popf
lods
push
add
out
stos
mov
psubw
decl
jmp
sahf
sub
sbb
scas
mov
sti
and
jo
dec
xchg
xchg
jg
in
push
andb
lret
and
sub
mov
cs
out
push
rcll
and
test
cmp
cmp
push
inc
mov
mov
fsubrl
mov
mov
loopne
push
mov
sahf
xchg
push
xlat
loopne
pop
int3
or
bound
mov
lock
and
push
jle
in
pushf
mov
das
stc
enter
inc
jns
into
cmp
mov
sub
in
cmc
sbb
in
aad
xlat
mov
inc
jo
sub
sub
iret
shrl
mov
sub
cmp
lods
inc
cli
pop
std
loop
lret
lret
scas
cmp
cmpsl
add
push
dec
dec
fwait
test
ds
or
pop
or
fdivrl
stos
cmp
data16
fisttps
inc
mov
roll
cmpsb
ret
pop
shlb
popa
jecxz
mov
dec
xchg
mov
push
mov
sahf
xchg
roll
cmp
xor
sub
hlt
xchg
mov
pop
xchg
subb
pop
mov
fstps
dec
xchg
stos
mov
mov
xor
jmp
jns
and
jb
dec
imul
movsl
sbb
push
cmp
js
sahf
scas
push
sbb
ficoml
sub
ljmp
gs
les
mov
push
movsl
sbb
xchg
test
jo
and
adc
in
xchg
mov
stos
stc
sub
dec
rorl
cmp
loop
sub
bnd
jecxz
pop
fdivs
jp
inc
cmp
xlat
nop
jnp
lods
jmp
inc
int
loop
mov
mov
pop
jle
push
add
out
xor
imul
xchg
lret
sub
push
lea
fstpl
aas
mov
ds
inc
adc
daa
sub
or
mov
add
lret
add
cwtl
je
inc
sub
xchg
jns
sub
mov
push
out
jo
movsb
lock
loope
mov
push
adc
dec
decl
mov
lock
jmp
and
sub
sti
mov
sbb
jl
mov
or
add
and
out
xchg
mov
iret
inc
scas
movsb
jp
cmpsb
or
xchg
adc
jne
or
into
in
jae
call
divb
lcall
loop
nop
fst
lods
ret
incl
fists
sbb
stos
cmpsb
mov
mov
xlat
mov
movsl
jg
jnp
xchg
and
jb
or
loopne
je
rcr
repz
pop
sub
iret
test
fisttpl
insb
imul
push
fistps
frstpm(287
std
sbbb
in
jmp
push
xor
cwtl
lcall
pop
sub
xchg
ss
sub
movsl
lock
dec
mov
push
jno
fidivrs
or
add
in
xor
pop
sbb
cmp
cld
or
mov
cltd
mulb
pop
or
hlt
xchg
cwtl
add
push
aas
xchg
or
rcrl
imull
sbb
lea
mov
mov
adc
mov
cmp
mov
stos
cmp
pusha
das
mov
or
cltd
notb
xlat
imul
jl
cmp
or
mov
cmpsb
or
push
adc
dec
push
mov
jns
jmp
rclb
inc
inc
add
and
adc
cmp
dec
mov
js
data16
mov
fsubs
pop
sbb
fdivrs
adc
push
add
push
mov
and
mov
idivb
pop
jg
call
lods
fcomp
adc
pop
aad
data16
xchg
ss
mov
shll
std
lret
adc
pop
mov
mov
jg
pop
xor
push
fisubs
inc
jbe
sub
cmp
negl
es
das
pop
les
xchg
add
fildl
dec
and
push
les
push
and
fnstsw
mov
dec
xchg
xchg
gs
ret
mov
ja
mov
pusha
out
push
push
or
xor
mov
dec
ds
test
pop
outsl
sub
ret
jge
mov
xor
xchg
scas
fwait
adc
xchg
push
int3
xchg
call
pushf
je
and
mov
in
in
pop
dec
pop
hlt
stc
or
imul
icebp
rorb
int
mov
popw
ret
and
mov
dec
call
ror
lahf
inc
pop
inc
and
add
mov
xor
mov
mov
push
inc
mov
or
jnp
insb
es
pusha
mov
bound
pusha
imul
fildl
mov
sub
adc
dec
sbb
xchg
jne
ret
pop
inc
pop
lods
arpl
cltd
shrl
cs
movsb
cmpb
dec
dec
jne
mov
test
or
xchg
jne
dec
ljmp
dec
out
xchg
jp
push
mov
sbb
aas
jmp
mov
cmp
fs
cmp
mov
inc
push
add
mov
es
inc
adc
pushf
lret
jno
sub
test
inc
icebp
jns
mov
out
int
mulb
sahf
test
cld
adc
in
inc
jge
flds
pop
dec
pop
add
mov
adc
xor
movsb
and
xchg
stc
fistpll
outsl
jp
aad
mov
outsb
int3
mov
nop
in
pop
bound
mov
pop
lcall
or
mov
mov
sti
inc
loope
icebp
jns
add
in
stos
iret
mov
pop
enter
xchg
fstpl
mov
imul
int3
jp
mov
popf
jne
data16
cmp
imul
fildll
pop
push
in
mov
cmc
sub
outsl
mov
push
push
jae
add
push
les
aad
fsubrs
sbb
sbb
movsb
adc
adc
std
shld
sbb
jns
int
lods
mov
dec
push
mov
or
cmova
in
xchg
push
loope
cmpsl
in
hlt
adc
fcomps
inc
lahf
aad
push
hlt
fsts
stos
jb
fldl
pop
lods
xchg
fwait
xor
xor
sti
or
mov
xor
lcall
sbb
sti
daa
stos
fisttpl
dec
jnp
pusha
loope
fs
out
mov
out
out
mov
pop
inc
adc
add
inc
lock
stos
xor
nop
negl
mov
mov
mov
divl
jle
in
cltd
xchg
test
pop
mov
icebp
cmp
sahf
jae
in
jb
int
popf
sub
data16
sub
fidivrl
jbe
or
adc
or
cli
nop
add
add
lea
add
bound
xchg
aaa
mov
push
lds
jp
stos
popl
jb
push
mov
inc
jp
xor
sbb
data16
orl
jo
mov
aam
inc
arpl
cmp
push
repz
sub
lahf
jb
popf
sub
jmp
outsb
pop
or
pop
push
mov
xchg
loopne
cmpsl
cmc
cmp
mov
xchg
jecxz
or
gs
ret
repz
aam
clc
sbb
mov
dec
push
int3
bound
push
add
shr
mov
adc
cld
jge
fistl
xor
inc
add
je
mov
inc
cltd
popa
sti
inc
movsb
mov
lds
stos
and
push
faddl
ror
jmp
cltd
in
or
lods
jae
mov
in
ret
cltd
xor
imul
ret
sahf
repnz
inc
adc
cmpsb
xchg
mov
bound
jnp
cmp
adc
enter
sub
mov
mov
xchg
sbb
jmp
cmp
xchg
mov
xchg
dec
push
jb
lods
frstor
xchg
gs
mov
out
jle
xchg
and
mov
pop
leave
mov
lret
cmpsb
mov
stos
and
add
leave
jne
xor
pop
xchg
popa
pop
pop
leave
lock
icebp
sti
test
push
sub
call
outsb
sbb
adc
sbb
mov
sub
gs
pusha
cmpsb
shrb
sub
add
cmc
pop
mov
sbb
pop
xchg
cmpsb
stos
loopne
push
lcall
mov
jl
xchg
and
sub
mov
cmp
fldl
cltd
pop
and
add
mov
into
lock
dec
mov
xor
sbb
inc
xchg
mov
jb
pop
mov
add
addr16
pushf
inc
jns
ret
test
jbe
adcb
popf
stos
and
xchg
push
add
cli
push
cmp
inc
popf
push
jmp
or
js
inc
xchg
inc
lret
mov
xor
jg
xlat
sahf
xchg
sbbb
call
stos
insb
dec
inc
push
pop
clc
fcoml
xor
std
cmp
jg
jp
int3
outsl
push
cmp
push
notl
data16
push
push
gs
jnp
lock
dec
or
cmp
iret
mov
aas
pop
idiv
out
mov
sub
xor
into
arpl
rcrl
xchg
adc
or
repnz
movsl
stos
xor
scas
xchg
dec
outsb
insl
loope
xchg
and
test
mov
int3
cmp
movsb
cli
cmpsl
js
nop
mov
sti
and
and
es
push
mov
mov
sbb
stc
into
mov
daa
je
pop
pushf
mov
cltd
movsl
push
jg,pn
loope
pop
imul
cs
sbb
addr16
jle
add
lahf
xchg
push
cmp
xchg
hlt
jmp
inc
jmp
mov
lods
out
sub
test
adc
pop
sub
call
push
add
push
sbb
loopne
push
jp
dec
mov
aas
inc
pop
or
sub
rorl
push
sbb
pop
popf
inc
scas
jae
popa
call
push
ret
ja
aas
dec
jae
dec
cmc
xchg
mov
test
mov
pop
xchg
gs
mov
or
inc
and
std
dec
jmp
xor
das
icebp
add
outsb
adc
xor
incl
adc
test
out
pop
dec
call
in
mov
insl
shrb
mov
fwait
adc
xchg
sbb
repnz
lahf
and
xor
call
or
enter
mov
test
push
or
lock
fcmovnbe
movsl
call
jecxz
loopne
push
jecxz
jb
outsb
testb
bound
mov
ficompl
hlt
sub
fwait
sbb
ficoml
cmovle
push
mov
hlt
pop
sbb
repz
icebp
jle
or
enter
insb
dec
mov
loopne
add
pop
mov
lgs
pop
mov
arpl
in
cltd
inc
xlat
mov
icebp
adc
pop
inc
dec
cwtl
fldcw
and
pop
cmp
imul
cmp
mov
fistpl
push
in
jmp
push
sbb
dec
or
fsubrs
xor
sarb
or
mov
sub
bound
xchg
inc
lret
pusha
nop
and
lock
repnz
mov
enter
xchg
sbb
mov
ja
sub
or
insb
add
bound
mov
addl
mov
mov
sub
pop
std
mov
cld
mov
test
jle
xor
insb
popf
stos
jo
scas
xor
lods
adc
lahf
or
or
lods
push
andl
and
mov
push
cmpsb
adc
leave
jns
cld
scas
mov
push
mov
dec
mov
pop
xor
mov
jne
arpl
adc
test
add
sub
ljmp
adcb
stos
lahf
xchg
xor
cmp
xchg
pop
push
es
rorl
adc
nop
scas
pop
cmp
fmull
add
aaa
shr
cmp
or
in
pusha
adcb
mov
aaa
sbb
and
push
fsubrs
xor
jecxz
xor
js
aaa
ja
mov
decb
pop
xchg
cmp
sub
icebp
lock
scas
aaa
sbbb
push
xchg
lods
jns
test
stos
stc
xor
ret
sbb
cmp
mov
mov
pop
lods
mov
cmpsl
stos
cmpsb
dec
xor
scas
sbb
out
jl
cmpsl
push
roll
cltd
dec
out
popf
fstp
lods
mov
mov
mov
arpl
aas
rcrb
adc
adc
scas
adc
lock
jno
add
inc
mov
out
fnsave
sbbb
pop
or
jp
repnz
popa
arpl
xor
add
out
test
aaa
pop
test
lods
ret
sub
repnz
lcall
adc
mov
pop
flds
jl
mov
scas
nop
jp
add
mov
movsb
mov
out
adc
inc
popa
jg
movsl
loopne
add
jo
jge
ds
sbb
push
and
test
cmc
shlb
and
mov
jns
jbe
insl
scas
out
or
bound
into
jb
push
ret
or
add
decb
ret
xorb
scas
jne
dec
into
dec
push
adc
dec
xor
aas
bound
les
add
test
movsb
sar
fucomi
push
mov
hlt
jnp
ret
or
and
scas
mov
xlat
nop
mov
dec
les
or
repnz
adc
inc
lods
out
xlat
xchg
cld
aad
adc
xchg
push
out
js
add
out
push
imul
adc
cmp
push
cmc
mov
fists
std
leave
jecxz
fadd
jno
pop
ficoms
jg
repz
outsl
jbe
mov
ja
xor
xchg
call
addr16
ljmp
mov
jno
jle
mov
pop
xchg
pop
push
sbbl
rorl
js
cli
jl
mov
lods
xor
flds
out
rcrb
fsubl
adc
cmp
ja
cmc
mov
lock
negl
test
xor
jmp
cmp
arpl
or
mov
mov
loopne
out
jnp
out
lock
es
test
pop
fwait
dec
mov
movsb
pop
pop
jmp
jg
pop
decb
cmp
cmpsl
pop
jecxz
inc
sbb
sahf
nop
rcl
jnp
xchg
and
cltd
loopne
adc
adc
les
jle
in
jp
pop
fbstp
add
dec
dec
mov
add
pop
test
subl
sarb
insb
add
xchg
dec
cli
mov
filds
sub
in
add
pop
jge
inc
sbb
xor
jge
jno
push
pop
adc
pop
test
call
xor
inc
mov
cmp
cmpsb
cmp
repz
andb
cld
repnz
pop
sahf
fidivs
sahf
test
sbb
mov
testl
popw
ljmp
test
inc
lods
jp
push
sub
xchg
std
addr16
mov
pop
mov
and
xchg
lock
std
out
sbb
cmp
mov
out
push
cmp
add
dec
sub
mov
mov
test
fiadds
mov
incb
mov
adc
pop
add
cmpsb
inc
xchg
shll
mov
xor
push
pop
fildl
inc
dec
add
fistpl
shll
das
push
icebp
inc
js
jno
mov
sbb
dec
and
arpl
sbb
das
outsl
xchg
add
pop
movsb
into
sub
ljmp
test
das
or
push
out
pop
enter
aas
mov
bnd
mov
sbbb
fcompl
and
or
hlt
je
das
sbb
lahf
xor
adc
and
stos
jle
xor
cmp
repnz
lods
dec
mov
xor
mov
cwtl
add
sub
fisubrs
or
test
lea
pop
mov
dec
or
aad
frstor
mov
mov
or
outsl
pop
int
shll
cli
stos
inc
stos
lock
and
lcall
mov
cwtl
fucom
push
scas
xor
call
movsl
xchg
iret
enter
cld
pop
icebp
out
dec
mov
xchg
or
jne
and
outsb
add
or
sub
jp
adc
sbb
cmp
fldl
mov
mov
sub
lock
out
sub
in
cli
cmp
push
cmpsl
sahf
stc
inc
inc
xor
push
outsl
mov
mov
bnd
mov
sbb
daa
test
mov
push
and
sub
jmp
xor
lds
movsl
jmp
rolb
adc
jecxz
xor
and
mov
sbb
sub
jl
xor
dec
insb
jo
xrelease
das
mov
pop
mov
dec
mov
rep
iret
sbb
inc
lret
test
pop
mov
lock
test
push
ficomps
in
addr16
adc
lahf
pusha
cmp
mov
sbb
or
push
idivl
aam
fwait
nop
pop
rorl
stc
leave
inc
dec
insl
mov
fistpll
popa
lock
mov
cmp
fwait
out
mov
inc
sub
xor
push
lcall
pop
loop
mov
or
cld
outsl
enter
lret
mov
leave
dec
or
aam
xchg
sbb
adc
mov
adc
jl
mov
ret
arpl
pushf
mov
pop
lahf
pusha
xchg
call
inc
cli
jae
mov
orb
clc
mov
pop
pusha
adc
jno
aam
bound
notl
jo
loopne
icebp
divl
mov
push
push
lock
and
lods
xor
rorb
xchg
mov
dec
and
jecxz
hlt
mov
ljmp
int
nop
decb
jmp
mov
loop
pop
out
cmp
inc
push
mov
add
movsl
xchg
fidivrl
mov
mov
sub
mov
push
dec
push
or
dec
subb
xor
ja
cmpsb
push
adcl
and
loopne
cmp
sub
push
dec
push
cmp
adc
jp
cmp
mov
mov
test
xchg
icebp
and
or
adcb
cld
mov
push
hlt
xor
inc
mov
adc
jb
add
xor
in
xchg
dec
int
mov
mov
adc
and
in
lods
dec
cmp
sahf
dec
sbb
mov
loop
lahf
stos
insl
icebp
jae
faddl
sub
mov
stc
adc
sahf
shrl
insl
cmc
into
dec
adc
pop
mov
test
sub
pop
sbb
mov
mov
popa
pop
pop
scas
icebp
mov
movl
adc
push
dec
fdivs
int
jbe
inc
pop
clc
mov
flds
mov
inc
sub
sub
int3
aaa
into
push
test
cli
lret
pop
arpl
cwtl
aad
nop
cmp
mov
sbb
mov
pop
sahf
jne
jne
cmpb
dec
test
addr16
int
jmp
fldt
adc
mov
fisttpl
xchg
push
mov
ret
rclb
insl
imul
pop
or
sarb
push
dec
xchg
jne
rorb
dec
fwait
in
push
aaa
jl
ss
mov
push
fwait
xor
loop
outsl
stos
jb
xchg
and
sbb
mov
test
fs
push
or
outsb
cli
cmpb
mov
nop
jle
jp
setne
adc
mov
js
sub
mov
popa
cs
in
dec
lret
dec
dec
add
shll
gs
movq
clc
call
and
inc
std
mov
jp
cli
or
aam
add
fistpll
xor
fdivr
stc
mov
aas
xchg
dec
cmpsl
or
dec
cld
cmp
dec
cmpsl
stos
fwait
push
sub
dec
mov
je
pop
mov
sbb
xchg
insl
xchg
scas
shrl
lret
rorb
mov
xchg
adc
stos
insb
pop
aam
jle
enter
xlat
sbb
data16
push
ljmp
push
fwait
and
jmp
xchg
push
sarl
inc
popa
xor
fwait
popa
push
dec
mov
xor
adc
mov
xchg
mov
jmp
push
mov
bnd
pop
and
xchg
sbb
addl
or
jae
icebp
inc
icebp
dec
mov
mov
xchg
fdiv
cmpsb
and
in
push
jo
scas
hlt
shrb
and
mov
push
sbb
add
test
pop
lods
sub
jle
mov
mov
data16
push
into
ja
sbb
ss
jecxz
test
push
dec
jg
or
mov
push
mov
aaa
dec
adc
or
xchg
push
sbb
jb
sbb
hlt
iret
fs
lods
stos
pop
lods
fwait
movsl
pusha
sub
je
adc
iret
inc
hlt
sub
jg
cmp
pop
xor
aaa
leave
negl
scas
stos
xlat
or
lods
add
xor
add
xor
leave
pop
or
mov
xor
xchg
sbb
mov
jl
and
imul
inc
sbb
inc
xor
data16
jmp
mov
ss
fistl
int
jne
xorb
push
imul
dec
ljmp
inc
in
cmp
out
adc
xor
jmp
pop
or
push
stc
pop
sub
out
js
out
jmp
inc
mov
in
test
sub
rcll
cmp
lods
push
dec
dec
cmp
inc
sbb
cld
fildl
std
lds
pop
pop
adc
mov
xchg
je
sti
aam
or
inc
xchg
cmp
lahf
cmpsb
sbb
aad
xlat
test
je
out
loop
and
es
and
inc
dec
ret
mov
fstps
bound
or
cwtl
out
inc
das
pop
dec
inc
sub
xor
sbb
jmp
insb
or
cmc
ficompl
jbe
sbb
xlat
dec
adc
inc
scas
sar
dec
std
cmpsl
sti
sub
or
mov
pusha
test
fdivl
aam
js
adc
cmp
push
ljmp
xor
or
shlb
pop
ret
lcall
xchg
mov
add
xor
int
loope
adc
add
pop
ja
sahf
enter
pop
or
add
mov
test
sbb
push
pop
mull
imul
hlt
sbb
inc
mul
fdivs
sbbl
scas
mov
dec
mov
fdivl
adcb
dec
and
pop
arpl
jae
dec
pop
mov
ja
and
cmp
mov
xlat
shlb
sbb
jl
xor
inc
xlat
leave
fcoms
mov
dec
jp
adc
rcrb
cmpsb
cmp
dec
or
scas
shll
aas
fcoml
mov
movsb
dec
jl
or
sub
subb
nop
mov
sub
inc
jbe
sbb
mov
ret
jnp
repnz
imul
out
dec
lods
popl
mov
ficoml
adc
dec
comiss
push
xchg
mov
mov
and
jns
adc
xor
push
scas
je
test
dec
fucomp
pop
jp
repnz
scas
pop
xchg
pop
into
inc
sub
rcl
ss
dec
subl
mov
and
xor
or
push
test
adc
add
xor
xchg
fsubr
xor
test
cmpsb
xchg
ret
mov
dec
push
jle
testb
add
dec
adc
pop
loopne
jns
test
js
adc
push
push
in
push
xor
fldcw
dec
sbb
in
add
testb
or
imull
negb
scas
inc
cmpsl
into
loop
and
and
loope
inc
xchg
cmp
inc
enter
testl
mov
imul
fsub
arpl
not
cwtl
mov
hlt
dec
sub
mov
jg
into
out
jae
ja
sub
jge
xchg
push
add
fsubrs
xchg
fchs
xchg
xor
test
loop
sub
fsubrl
aam
inc
adc
sbb
je
add
fnstcw
pop
in
inc
jmp
jg
mov
inc
sbb
cmp
ret
push
pop
push
cli
addr16
mov
sbb
adc
cmp
es
mov
ds
push
jmp
ret
outsb
inc
je
push
jnp
sub
xchg
and
add
test
lds
push
mov
xchg
outsl
xchg
sub
add
dec
jl
je
cmpl
mov
ja
inc
dec
jg
movsl
xor
or
xor
popa
pushf
sbbb
adcl
and
movsb
push
je
xor
dec
int
sti
dec
cmp
cmp
push
ljmp
sub
mov
pop
std
subl
es
add
aas
mov
les
dec
daa
adc
insb
notl
sbb
imul
dec
xor
cmp
dec
sahf
jb
mov
xchg
outsl
test
inc
add
fcompl
scas
js
push
leave
add
jmp
rol
enter
pop
jp
adc
mov
mov
clc
pop
cmp
cmp
push
add
xchg
cmp
push
ja
scas
push
mov
mov
into
sti
or
fisttpl
adc
movsb
dec
sub
pop
sbb
pusha
fimuls
push
adc
sbb
pop
daa
das
faddl
mov
cmp
xlat
pop
arpl
xchg
mov
jb
lock
push
addr16
dec
adc
mov
inc
jp
jecxz
je
call
xchg
push
add
xor
pop
loop
daa
outsb
push
pop
add
xor
pop
lods
jae
into
test
scas
in
ja
in
sbb
leave
jo
std
xor
cmc
jno
cmp
adc
ljmp
lock
cmp
push
out
cmp
in
sbb
popf
jg
dec
fdivr
dec
std
data16
in
lret
jp
pop
loope
clc
bound
pop
mov
mov
jns
adc
jne
push
ljmp
pop
xchg
cmpl
and
add
mov
or
mov
shr
pop
lret
mov
lret
daa
repz
inc
lods
mov
arpl
stos
push
push
insl
stos
ja
dec
pop
and
cmp
push
sbb
lods
cmp
data16
in
pop
jnp
cwtl
dec
jle
add
lcall
setno
stos
mov
sub
sub
add
movsl
cltd
mov
dec
inc
mov
shl
mov
stos
adc
imul
add
mov
mov
inc
stos
ljmp
push
and
adcl
mov
inc
fmull
mov
cmp
inc
mov
rorl
adc
mov
lock
mov
andb
sbb
inc
mov
jle
outsb
cli
or
int
mov
out
lahf
sbb
inc
fldenv
or
clc
or
pop
pusha
clc
mov
aaa
ja
mov
shlb
push
in
shll
js
nop
in
cmp
mov
push
jne
shrb
ret
push
in
into
leave
xor
mov
arpl
insl
fdivr
and
insl
dec
sahf
stc
out
dec
subl
add
xchg
cwtl
andb
or
es
idivl
ss
pop
ss
jecxz
out
inc
sbb
inc
add
pop
push
adc
sti
aas
out
int
clc
hlt
sub
loopne
sub
push
pop
dec
xchg
push
inc
fdivr
push
stos
mov
xorb
xor
pop
jmp
orl
adc
mov
pop
push
mov
int
lea
sub
push
xchg
insb
cmp
jns
test
test
cmp
movsl
cmp
cmp
xor
les
aam
xlat
jl
fs
or
pop
mov
add
loop
jo
mov
imul
or
lret
div
sbb
or
sub
sti
jp
mov
or
testl
push
xchg
scas
pop
sbb
out
fcoms
jmp
lods
imul
arpl
lods
out
dec
int3
inc
std
jae
xorl
add
enter
stos
pop
push
push
xchg
xchg
push
arpl
dec
test
std
fs
bound
xlat
or
repz
push
xor
dec
mov
jb
imul
and
icebp
mov
fdivl
and
arpl
xchg
stos
rcl
popf
bound
popa
popf
icebp
call
push
icebp
cmp
out
insl
cwtl
insl
cmp
jle
push
inc
and
imul
mov
mov
clc
int
into
scas
pusha
dec
sub
test
push
aas
cltd
mov
sub
aas
dec
mov
mov
mov
mul
cmpsl
xlat
lods
into
stos
push
int3
dec
push
sbb
call
push
jo
out
imul
xchg
mov
inc
mov
adc
pushf
jmp
and
jno
push
pop
xor
dec
test
add
outsb
mov
mov
in
mov
sbb
or
mov
xor
aas
iret
inc
in
and
mov
imul
push
mov
aam
rol
lea
movsb
aam
jge
push
lods
xchg
insb
cmp
jne
divl
mov
jmp
loopne
add
clc
mov
lea
mov
xor
shrb
leave
cmp
dec
push
mov
pop
in
jno
lret
push
ret
outsl
mov
hlt
lock
loopne
pop
shrl
out
dec
outsl
jo
repz
repnz
lods
lcall
fsubl
inc
pop
jno
out
push
mov
cmp
xchg
aaa
cwtl
je
add
and
mov
dec
stc
jp
xchg
neg
test
lea
cmpsl
mov
sub
sbb
mov
ja
outsl
cmp
mov
out
test
inc
out
jl
sub
adc
into
stc
scas
ss
ja
or
xor
sub
jmp
or
or
out
call
pop
cmc
std
repnz
dec
ja
into
mov
lret
jo
shl
sub
out
pusha
add
icebp
imul
inc
mov
fstps
or
sub
push
jmp
mov
aam
add
clc
xlat
cmp
mov
mov
repz
push
inc
pop
lahf
and
or
pop
ds
orl
pop
dec
mov
cmpsb
ret
iret
inc
cli
dec
dec
jae
repz
sub
inc
jg
loope
push
leave
bound
mov
jnp
outsb
fstl
xchg
repz
mov
cld
adc
xchg
add
jne
cmc
mov
loop
fcoml
push
scas
insl
scas
and
fists
adc
mov
or
and
xchg
and
call
fstpt
test
outsl
movsl
int3
xchg
shrl
lret
test
notl
cmp
sarl
les
lret
movsb
ret
jbe
in
sbb
adc
pop
push
aam
inc
into
pop
jne
lret
jg
arpl
cli
es
mov
ds
stc
inc
andl
mov
addr16
cmp
leave
mov
shlb
inc
mov
lret
mov
aas
cld
fwait
xchg
ficompl
jns
cmp
pusha
call
add
das
xor
test
int3
mov
and
inc
inc
jmp
push
jmp
push
outsb
repz
jb
jp
cli
cmp
popf
mov
lock
jo
xor
jns
loopne
inc
fidivrs
or
loopne
ret
or
add
mov
adc
or
xchg
xor
add
sbb
or
mov
call
jle
adcl
addr16
xor
mov
sub
dec
icebp
jge
fidivrs
dec
push
call
pushw
add
out
imul
cmp
add
fldl
pop
clc
stc
jns
dec
sub
or
pop
push
jns
stos
sub
movsb
fsubrl
xchg
sub
addr16
scas
out
mov
outsl
push
cmp
negb
mov
ss
in
push
cmp
xor
push
ret
xchg
push
pop
clc
inc
dec
nop
data16
xor
lcall
cmp
into
or
xchg
sahf
dec
mov
into
adc
pop
pop
mov
adc
rorl
push
mov
movsl
cmp
xor
sbb
mov
scas
xor
pop
push
mov
aad
test
push
cmc
outsl
ss
inc
xor
xchg
mov
pop
or
dec
popl
dec
add
xor
mov
adc
mov
imul
mov
movsl
stc
inc
stos
jbe
fisttpl
js
fwait
je
xchg
in
mov
incl
pop
or
mov
dec
inc
scas
lods
or
dec
add
out
mov
and
inc
jl
adc
jp
jbe
pop
pop
out
push
bound
subl
adc
lahf
movsl
pushf
adc
sbb
add
inc
jg
mov
xchg
hlt
jae
push
jp
popf
xchg
jnp
int3
mov
pusha
popa
jo
das
bnd
or
fcmove
xor
xor
sub
cwtl
jne
xor
push
cmpsl
jg
push
sub
push
sbb
and
enter
lds
sub
jns
loope
cmp
test
mov
sahf
mov
repnz
push
push
mov
push
shll
pop
leave
push
dec
mov
rorl
nop
test
jp
js
hlt
jl
repnz
pop
nop
adc
lods
pusha
pop
push
int
adc
ret
jp
scas
cli
movsb
icebp
test
loopne
and
pop
dec
dec
mov
aas
ds
or
sbb
inc
push
scas
pop
dec
mov
cmp
push
testb
xchg
ds
fdivs
cmc
xchg
add
xchg
mov
scas
das
push
cli
punpckhdq
addl
inc
dec
sti
inc
fsubr
fldt
lahf
rcrl
inc
loopne
iret
fisubrl
xor
pop
xchg
cmp
imul
xor
push
jle
push
call
in
jl
push
and
and
mov
je
xchg
pop
add
stc
cli
cmpsl
push
pop
xor
mov
lds
cmp
repnz
insb
mov
jg
mov
sbb
sub
cmp
pusha
mov
add
out
push
jge
mov
inc
and
sub
xchg
jne
dec
pop
cmpsb
iret
or
lret
ja
pop
mov
inc
mov
pop
dec
sub
das
loopne
aaa
jne
xchg
ds
fstpl
xchg
mov
adc
xor
pop
lcall
jecxz
in
push
fisubs
int3
ret
pop
ss
enter
daa
cmpl
pop
out
jg
movhps
cmp
jnp
sbb
add
xchg
dec
xlat
arpl
in
fcmovnb
mov
loop
enter
xchg
xchg
add
jmp
sbb
adc
imul
mov
lcall
popa
mov
test
call
ds
push
xor
mov
pop
xor
nop
and
sub
cltd
xor
rclb
push
push
sub
mov
dec
xchg
lahf
dec
and
ss
out
sub
sbb
popa
enter
lock
jns
xor
or
int3
in
dec
xor
sahf
test
cmc
int
cltd
pop
repnz
mov
pop
mov
repnz
mov
out
mov
loop
aas
sub
jnp
mov
or
xchg
mov
add
subb
iret
push
add
cli
jge
gs
mov
pop
mov
or
push
iret
adc
stos
adc
jmp
mov
in
add
out
ss
xchg
and
cmp
push
fldcw
notl
notb
insl
divb
ret
cmp
aad
out
pop
jge
inc
cmp
pop
imull
push
mov
daa
insl
mov
push
or
fdivs
pop
push
mov
out
andb
push
mov
add
insl
in
test
nop
push
mov
add
mov
or
cmp
stc
test
add
jbe
lock
push
fadd
lahf
pcmpeqb
loope
fcmovnbe
lds
mov
push
or
add
inc
lret
push
aad
lret
xchg
stc
addr16
pop
les
and
fs
dec
cld
push
push
jo
cmp
lahf
mov
addr16
inc
or
clc
sub
cltd
mov
pop
lret
lea
loop
add
stos
inc
stos
int
push
std
dec
or
pop
shrl
rorl
aaa
push
sbb
cmp
ficoms
jl
cli
inc
xchg
mov
mov
xor
mov
bound
in
pop
nop
movsl
out
test
pop
cltd
in
pop
std
mull
sub
test
mov
add
cmp
mov
cwtl
inc
push
pusha
gs
cmc
and
out
addr16
out
pop
xchg
or
dec
mov
jae
notb
inc
dec
dec
mov
add
divl
mov
int
int3
push
cmp
mov
fadd
decb
mov
jb
insb
mov
sbb
pushf
fmuls
movsb
mov
inc
stos
xchg
js
push
cmp
jnp
addb
push
sbb
dec
lret
cmovs
orl
stos
jge
pop
jo
mov
or
es
mov
or
fdivrl
pushf
sbbl
jae
mov
push
lahf
push
mov
mov
outsb
push
pop
fisubl
cltd
ja
push
in
or
js
sbb
fmull
addl
add
pusha
jne
xor
je
pop
mov
push
jg
cmp
cld
jg
mov
xchg
fcompl
sti
imul
cmp
out
dec
imul
push
add
mov
mov
jo
inc
test
cmp
sbb
pusha
mov
insl
dec
mov
mov
inc
stos
adc
cmpsl
pop
jle
pop
out
mov
lret
jle
cs
pop
push
dec
js
sarb
es
adcb
rcl
ficomps
cmp
and
fistps
repnz
pop
pop
xchg
or
repnz
sub
dec
mov
mov
stc
pushw
fisubrl
xchg
mov
adc
out
push
repz
jo
mov
out
addb
cld
mov
mov
push
add
popa
add
jg
push
inc
clc
push
es
pop
push
and
or
fwait
pop
mov
adcb
loopne
jb
sbb
add
inc
es
push
fcmovnb
mov
idivl
and
xor
pop
sti
gs
mov
dec
cmc
bound
mov
push
sub
mov
sarl
mulb
or
call
rorl
dec
std
dec
iret
push
add
or
fs
mov
repz
mov
dec
lret
jmp
daa
ja
stc
imul
pop
sar
inc
scas
jmp
mov
and
adcl
call
mov
sub
adc
cmc
shrb
jmp
enter
out
cmpsb
fildll
aaa
or
inc
lret
ljmp
push
addr16
les
mov
sub
jle
fsubrl
iret
add
shl
mov
mov
cld
fists
stos
adc
cld
ror
int3
adcl
lea
dec
inc
push
xor
fwait
add
xchg
ljmp
scas
and
mov
dec
inc
add
mov
testb
mov
sbb
adc
insb
push
mov
sub
add
sbb
testb
mov
ja
jl
in
mov
pop
ffreep
mov
lods
lret
pop
inc
xor
pop
mov
mov
or
aaa
inc
lods
lods
mov
dec
popa
mov
lcall
mov
test
cld
ljmp
ljmp
jae
add
lea
add
fwait
mov
dec
jge
test
dec
test
ret
and
or
jae
fnstsw
adc
ja
mov
loope
sub
into
repz
adc
push
popf
pop
sti
adc
inc
push
mov
or
dec
dec
cmp
flds
inc
add
test
push
mov
dec
mov
test
addr16
mov
add
and
cmp
fidivl
xchg
test
sub
divl
addl
adc
mov
es
xchg
cwtl
adc
ljmp
insl
call
out
or
movsl
pop
xor
outsl
cmp
and
pop
lods
xchg
mov
out
mov
mov
xchg
es
in
addb
push
fs
inc
dec
pushf
ss
adc
lods
pop
arpl
in
mov
jbe
stos
inc
xchg
xchg
mov
ljmp
fists
nop
pop
into
fstps
fists
call
iret
sub
mov
sbb
push
jb
imul
dec
mov
dec
dec
jecxz
inc
adc
lock
ljmp
aas
ds
jl
ret
xor
gs
mov
test
pop
jbe
dec
dec
sbb
lret
inc
in
mov
lods
and
sbb
jb
in
jl
hlt
cmp
sbb
sbb
loop
adc
jle
cli
jb
adc
push
sub
jg
and
mov
push
inc
pop
sub
or
pusha
jns
call
xor
sbb
jno
xchg
xchg
adc
jg
pop
lods
imul
mov
adc
pop
mov
popa
rcrl
movsb
cmp
fstpt
dec
dec
iret
lahf
scas
push
dec
xorb
mov
sub
push
jo
inc
cmp
dec
or
fistpl
fwait
mov
int
add
or
adc
mov
mov
shll
mov
in
addl
punpckhwd
lret
test
aad
cld
mov
aaa
jecxz
bound
ds
dec
xchg
sar
push
inc
sub
in
sbb
mov
push
lret
lock
jae
inc
in
shll
fisubl
js
xor
or
sbb
imul
in
sbb
loopne
mov
out
js
mov
inc
pop
jnp
mov
pop
and
sbb
push
mov
sub
xor
call
xchg
sub
pop
rcrb
fwait
mov
ret
cs
popa
shlb
push
add
adc
es
mov
xchg
mov
in
fistpl
lcall
lret
mov
xchg
cmpb
and
fs
add
fcoms
lea
daa
stos
xor
xor
std
int
xor
sub
aam
mov
push
je
adcl
pop
cmp
test
arpl
sub
mov
sbb
imul
sti
inc
jae
imul
loopne
mov
or
fmulp
adc
rolb
jl
sbb
ss
pop
jge
mov
sbb
test
int
sbb
dec
xlat
sbb
inc
repnz
xchg
or
dec
lods
mov
movb
jbe
dec
inc
lcall
out
pop
sarb
gs
push
stos
mov
and
jg
addr16
mov
test
sarl
lds
add
inc
insl
push
push
sar
lds
mov
xchg
cmp
xchg
fs
in
and
sub
mov
shll
push
cs
or
rcl
fnsave
sbb
xor
mov
pop
lds
out
dec
mov
ss
fisttps
lods
dec
push
ficomps
cmpsb
lods
jb
popa
outsl
xor
jecxz
lds
mov
pop
jmp
and
sub
test
stos
xor
jecxz
push
inc
or
loop
cmpsl
mov
mov
inc
notb
xchg
arpl
test
and
cmp
testl
mov
out
mov
dec
xchg
shll
mov
mov
movsl
and
addb
inc
add
rclb
add
repnz
test
inc
jle
scas
mov
and
or
adc
ret
xchg
mov
push
xchg
or
out
sbbl
xchg
cmp
push
ficoml
jno
inc
rcrb
mov
cltd
aaa
xchg
popf
mov
jge
sub
lahf
orb
sbb
pushaw
adc
xorl
outsl
insb
movl
sahf
push
movsl
inc
movsl
pop
or
enter
mov
fdivr
cmp
repnz
ss
dec
pop
or
scas
mov
je
fdivs
dec
sbb
add
pop
dec
xor
lcall
scas
inc
fadds
fwait
inc
sbb
dec
and
lods
loope
dec
xor
cmp
xor
mov
xor
addr16
or
xor
in
lahf
jge
mov
test
test
pop
and
fdivrl
aas
addr16
xor
aad
mov
lret
push
in
mov
cmp
xchg
push
idiv
cmp
and
xor
jo
xor
push
icebp
xchg
push
sbb
mov
rcll
xchg
xor
aam
test
scas
jmp
xor
cmpsb
insb
mov
je
mov
repz
addr16
xchg
into
rcrl
cmp
mov
je
repz
add
pop
sub
loopne
add
ds
jg
rorb
fldenv
rclb
fwait
lret
bound
and
ss
aaa
out
add
mov
push
stos
dec
dec
inc
lds
jle
std
popf
sub
cmc
lock
add
mov
test
dec
jg
vpmacssdd
cmc
jl
dec
test
loopne
jns
jg
cmp
or
mov
mov
fnstcw
loopne
inc
sub
lods
inc
push
sbb
imul
xchg
xor
sub
es
mov
and
cmp
pop
cli
pop
ret
arpl
dec
js
bound
mov
hlt
insl
jge
movsl
inc
cmc
jno
sbb
push
mov
lret
ret
mov
test
add
dec
mov
pop
sbb
add
dec
push
or
add
lret
inc
cmp
inc
das
xchg
xor
ficomps
out
orl
pusha
push
dec
addr16
into
push
in
in
push
pusha
inc
aam
jbe
mov
jns
imul
sbb
xchg
cmc
inc
and
pusha
sbb
push
push
xchg
cmp
psrlq
ret
push
mov
rorb
lret
shlb
mov
mov
stos
rorb
jmp
inc
ficoms
nop
in
xor
cmp
inc
jb
fs
mov
insl
mov
inc
sub
and
test
adc
jp
xor
popa
fucompp
ss
jne
adc
add
int3
mov
dec
jge
pusha
push
xchg
shrw
push
or
dec
out
lods
pop
mov
sbb
outsb
rclb
int
mov
test
jb
andb
xor
fstpl
sub
pop
dec
add
jno
fs
dec
xor
jg
ds
iret
xchg
mov
in
testb
inc
sub
jmp
xor
xor
add
ss
xchg
inc
push
data16
and
dec
cli
add
mov
mov
jns
cwtl
pop
fsubs
lds
cmp
lods
mov
mov
fisubrl
movsl
cmpsl
aam
orl
xor
fstps
pushf
jmp
push
push
add
push
imulb
push
sahf
data16
cmpl
das
lea
sub
sar
jno
mov
jg
xor
lcall
movsb
arpl
and
imul
dec
shlb
out
mov
xchg
aad
xor
pop
and
and
cmpb
mov
push
lret
rorb
pop
mov
hlt
push
and
mov
push
into
jns
cwtl
add
insb
pop
ljmp
test
xchg
xor
rcrb
sub
popf
mov
hlt
bound
pop
xor
and
cmp
and
aad
jge
jmp
xlat
ss
mov
insb
aas
icebp
push
call
mov
xchg
xchg
jno
sbb
mov
iret
data16
inc
jno
dec
cwtl
mov
mov
popl
movb
mov
xor
lahf
sbb
mov
mov
mov
fisubl
repz
xorb
add
pop
mov
inc
into
cmp
pop
std
or
sbb
scas
cmpb
pop
jecxz
subl
cmp
popf
sub
pop
movsl
js
stc
xchg
cmp
jo
pop
scas
ja
movsb
int
outsb
in
iret
aad
cmpsl
add
pop
pushf
ret
hlt
adc
and
sub
inc
in
inc
jg
mov
mov
dec
repz
mov
dec
jle
mov
jb
or
cmp
stos
xor
data16
dec
add
popa
xchg
cmp
leave
or
lret
lods
cmp
enter
dec
add
andl
rclb
int3
daa
mov
lds
and
sub
inc
sarb
sti
std
mov
jp
call
push
pushf
movl
lock
jl,pt
xchg
or
adcb
ss
out
je
or
xor
add
mov
xchg
leave
je
shrl
and
xchg
xchg
inc
or
sti
or
in
sbb
cmpsb
sbb
or
dec
xor
xchg
mov
pop
jo
jg
xchg
mov
and
sbb
cli
sub
mov
repnz
fwait
dec
jns
lds
fstl
push
adc
jmp
ljmp
mov
divps
imul
sbb
adc
mov
or
jae
pop
lods
dec
dec
adc
and
xor
mov
push
fsubrs
enter
pop
xor
mov
sub
fs
mov
xlat
aad
mov
dec
jae
fsubr
mov
mov
test
sti
pop
mov
jmp
jmp
out
xchg
push
sbb
jbe
jl
out
add
cs
xor
cmp
push
test
ret
dec
dec
pop
mov
inc
lret
insb
pop
lret
jbe
inc
add
movsl
xor
das
cld
mov
faddl
mov
xor
stc
push
dec
mov
dec
pop
jnp
stos
mov
cmp
ss
mov
adc
movsl
sub
sbb
jne
pop
loopne
mov
inc
out
sbb
mov
fwait
imul
xchg
jb
cltd
jnp
arpl
imul
mov
shr
sbb
adc
dec
jb
pop
insl
sbb
test
shlb
sub
push
mov
aad
xor
cmp
xchg
cmp
mov
popl
and
inc
sbb
cmc
sti
jb
pop
mov
lahf
out
push
inc
mov
xchg
dec
adc
out
push
cmp
popf
mov
adc
or
movsl
xor
xchg
add
xchg
sub
test
pushf
mov
pop
or
leave
mov
enter
insb
das
fmul
or
out
xor
jbe
xchg
in
daa
pop
mov
mov
and
xor
stos
mov
push
mov
scas
repz
cs
or
xor
jnp
xchg
or
xchg
jns
cmp
iret
xchg
test
add
movsb
int
mov
repnz
in
adc
push
sub
xchg
cmp
push
xor
mov
mov
xchg
and
mov
aam
sub
mov
push
mov
dec
pop
repnz
lods
add
cltd
loope
adc
cli
aas
test
icebp
and
icebp
add
push
in
rdpmc
fucomp
pop
sbb
nop
sti
imul
inc
mov
xchg
xchg
addr16
sbb
stos
xchg
fdivrs
xchg
cmp
lea
lock
mov
xchg
sar
mov
mov
xchg
ja
sub
sub
jp
rcr
lock
rcrb
sarl
rorl
adc
icebp
adc
mov
push
sub
imul
pop
mov
rorb
repz
in
jns
cmp
hlt
or
mov
mov
popa
xchg
call
cmp
add
je
shlb
pop
rclb
std
mov
xchg
mov
sub
test
popa
jp
jnp
arpl
es
pusha
popf
sub
loop
cmc
push
adc
lcall
push
mov
add
xor
push
or
xchg
xchg
or
xlat
aam
mov
fcomps
pop
call
cmp
rcll
scas
mov
dec
jo
cmc
xchg
cmp
xor
sarl
cmp
dec
adc
mov
mov
and
sub
inc
pushf
inc
outsl
add
jmp
out
shlb
fcomi
adc
and
mov
sbb
mov
add
push
sub
daa
inc
inc
dec
clc
push
add
mov
pop
pop
cs
call
out
inc
rcr
inc
sbb
push
adc
lods
xchg
mov
insl
cs
shrb
fucomp
out
push
in
cmp
mov
jo
jns
popf
xor
imul
fcmovb
or
divb
and
fsubrl
xlat
jnp
push
mov
or
jecxz
shr
mov
stc
mov
inc
aam
je
lods
aam
cs
adc
and
movsb
inc
frstor
pop
sbb
adc
sbb
sti
xchg
inc
rorl
pop
sbb
push
adc
inc
mov
and
shrb
adc
popf
xor
cmpsl
lret
das
cmc
pop
mov
mov
xor
pushf
push
pop
add
jnp
test
and
mov
divb
ds
jl
jae
xchg
push
sub
dec
inc
scas
shrl
pop
mov
mov
lods
sbb
shr
mov
fnstenv
push
bnd
inc
out
scas
popf
mov
pop
in
andps
jmp
jecxz
jl
mov
ret
sub
loop
mov
dec
testl
sahf
adc
mov
xchg
pop
ja
addr16
jmp
pop
ljmp
xchg
inc
loope
sbb
int
pop
or
xchg
mov
out
fdivrs
jns
mov
jge
lcall
out
mov
mov
int3
das
adc
clc
cmpsl
cmpsl
int
inc
data16
xchg
mov
mov
into
movsb
mov
cmp
ficompl
adc
mov
iret
mov
mov
pop
dec
cli
and
clc
lds
inc
inc
ds
scas
int3
xchg
fdivrl
mov
push
adc
pushf
jg
aam
popa
jbe
xor
cmp
cmp
popf
popa
in
inc
add
aam
xchg
push
sub
inc
jp
push
in
mov
push
orb
adc
je
arpl
sti
or
shlb
pushf
push
pop
sti
push
xchg
pushf
xor
repnz
stc
fistps
or
push
push
cld
adc
out
dec
fwait
jbe
fucomip
ja
add
jp
xchg
mov
jmp
cwtl
dec
mov
pop
mov
cmpsl
xor
mov
loopne
dec
push
out
fcomp
xchg
sbb
xor
cmc
pop
inc
jnp
or
push
ret
mov
int
sub
xchg
xchg
pop
lods
mov
mov
popf
inc
push
imul
lods
fistpll
and
add
dec
pop
outsl
int
mov
inc
mov
inc
out
stos
xchg
daa
mov
insb
cmpsl
shl
movups
and
jge
pop
inc
add
mov
ret
sbb
fisubl
addr16
ja
testb
sbb
adc
adc
sub
mov
dec
cmc
enter
loop
pop
mov
leave
lock
cs
add
cmp
inc
fists
jle
icebp
outsl
inc
cld
dec
test
addr16
jnp
pop
lods
out
xor
inc
adc
jge
mov
pop
mov
bound
xor
fldl
sbbl
negb
mov
adc
mov
shl
inc
lds
sarb
in
pop
stos
arpl
loope
cmpsb
jp
lods
faddp
cld
xchg
push
sbbl
inc
sahf
dec
xor
and
mov
subb
mov
xchg
mov
cs
insb
xor
lret
xchg
cwtl
int
int3
nop
xchg
pop
cmp
cltd
stc
sbb
in
jns
sbb
aad
mov
data16
sub
add
cmpsl
aad
push
adcl
add
mov
test
je
or
or
xchg
subl
mov
sbb
ret
push
movsl
insb
mov
lahf
aam
or
or
cmp
lahf
cs
cmp
mov
test
or
push
add
sbb
push
int3
js
push
ja
dec
std
pop
jg
pop
stos
mov
pop
or
cli
js
pop
xchg
cmp
cmpsl
sub
iret
stc
mov
mov
cmp
inc
adcb
xchg
dec
sbb
or
inc
mov
outsl
aas
fs
xchg
dec
jae
mov
jnp
xabort
stos
and
ret
jno
shlb
adc
out
cmp
mov
jne
push
sub
test
pop
jns
mov
xor
add
dec
push
fptan
or
fisttps
lods
mov
cmp
testl
filds
sbb
stos
jbe
clc
add
sub
cmc
xchg
je
adc
jbe
fistpll
add
fcmove
aaa
rcrb
loop
fcmovnb
mov
pop
or
push
add
xchg
out
cmp
testb
xlat
adc
inc
aas
mov
es
lods
idivb
aad
addl
bound
jb
dec
fcmovnu
inc
jae
jp
ficoml
lret
jmp
int
jle
cltd
add
je
cmp
mov
dec
lods
xchg
sti
pop
and
inc
fsubrs
shr
mov
cwtl
call
lcall
jnp
out
jns
dec
ret
cmp
dec
in
icebp
mov
add
lahf
jmp
mov
out
data16
dec
cmpb
adc
leave
test
lock
int
pushf
test
mov
and
insb
cmc
mov
seto
inc
imul
insb
add
xchg
xchg
dec
cmp
hlt
add
cmc
andl
adc
jae
int3
dec
mov
and
xchg
mov
mov
rol
pop
adc
adc
out
cmp
pop
gs
orl
cmp
icebp
pop
je
mov
dec
sbb
xchg
or
fsubp
jle
sbb
fwait
jbe
mov
inc
mov
mov
cmpsl
cmp
mov
pusha
stos
xchg
xor
mov
adc
mov
enter
inc
sub
xor
out
into
push
xor
push
loope
nop
xchg
pop
add
or
bound
std
dec
punpckhbw
cmp
sub
jo
jp
lods
xor
insl
int3
fucom
mov
or
adc
sahf
repnz
std
jne
rol
mov
fwait
lods
addr16
clc
iret
sbb
inc
and
lcall
lret
jge
jno
cmp
sbb
sbb
push
push
add
aam
icebp
test
lret
inc
mov
inc
in
fbstp
in
or
and
mov
xor
icebp
outsl
xor
out
dec
or
call
jnp
xchg
and
add
orb
and
sti
xchg
cmp
pop
clc
xchg
out
jl
and
fcoms
inc
mov
add
hlt
bound
add
out
and
inc
sbb
jnp
test
or
lea
sbb
or
inc
repz
or
int3
mov
pop
dec
std
pop
adc
test
pop
pop
adc
into
sbb
mov
xchg
scas
inc
test
jnp
or
in
pop
es
dec
xor
scas
sahf
inc
pop
dec
imul
and
push
and
and
push
fsub
sbb
and
aaa
xchg
push
lods
cwtl
cli
lock
inc
xchg
outsb
loope
mov
inc
or
sbb
or
pop
mov
ss
cmpsb
sbb
xor
mov
push
ds
movsl
ror
xor
lods
mov
dec
subl
cmpsb
mov
sahf
in
pop
jp
adc
loop
lahf
test
pop
scas
or
js
jb
cld
mov
inc
dec
add
add
lock
pop
movsb
sti
lea
jecxz
mov
mov
ds
sbb
and
gs
test
sub
inc
aaa
pop
xchg
add
mov
clc
inc
mov
add
mov
cmp
push
fldenv
mov
ror
sbb
mov
scas
js
bound
icebp
aas
adc
test
dec
arpl
in
push
cmp
cli
fcmovb
dec
xchg
arpl
aas
or
push
idivb
pop
and
mov
add
sub
bound
and
frstor
clc
adc
dec
mov
jne
clc
jmp
aam
icebp
shrb
pusha
call
imul
les
hlt
dec
and
fldt
inc
jle
dec
cld
lods
pop
cmp
sbb
cmp
jecxz
rcrb
xchg
mov
ds
adc
pop
sub
out
or
mov
loopne
testb
sbb
mov
xchg
pop
jle
jle
or
sbb
jg
and
or
dec
sub
insb
mov
xchg
negb
jbe
cs
or
push
inc
shll
pushl
ljmp
or
and
inc
inc
or
out
xchg
stos
insl
xchg
gs
jnp
arpl
aas
push
addl
add
inc
repnz
sar
adc
mov
lcall
sahf
dec
xor
in
jge
inc
inc
shrb
sti
xor
jmp
mov
sbbb
xor
sbb
pop
cld
in
jge
xor
xlat
xorb
lds
in
test
adc
outsl
cmp
jl
test
pop
jmp
sahf
xchg
inc
loope
inc
andl
movsl
outsl
xchg
ss
push
cmp
dec
adc
inc
mov
aad
xor
xor
push
aam
out
mov
dec
push
test
ss
inc
jecxz
mov
or
bound
sbb
fbld
jbe
push
pop
test
leave
mov
bound
mov
jl
sub
or
mov
out
iret
adc
pushf
and
in
pop
xor
loopne
xor
test
cmp
push
loop
jno
ljmp
jmp
inc
xor
fadds
push
and
idivl
mov
ret
inc
ljmp
idiv
lcall
inc
pop
nop
sub
stos
in
sbb
xchg
mov
sub
and
mov
pop
mov
fs
jmp
push
mov
hlt
subb
add
xchg
mov
xor
jns
jne
imul
push
fldl
std
pop
insb
notl
clc
add
pop
or
nop
cs
sub
lret
push
push
sbb
mov
and
scas
rolb
ds
stos
adc
mov
les
or
pop
loop
adc
push
xor
lea
mov
test
loope
arpl
or
cld
popa
test
call
or
or
test
cmp
xchg
in
bound
or
push
stos
sub
jns
xchg
sub
sbb
aaa
cmp
mov
clc
adc
cmc
dec
mov
lret
cmp
mov
adc
adc
xchg
data16
xlat
dec
cmp
mov
aad
pop
push
mov
js
xchg
and
pop
mov
lret
addr16
inc
xor
adc
jns
sbb
cltd
xchg
lcall
xchg
xlat
and
add
outsb
popa
repnz
data16
sbbb
push
jnp
adc
add
sub
add
out
das
les
mov
ficoms
insb
or
pop
and
sbb
dec
aam
test
in
xchg
jp
icebp
mov
mov
push
adc
aas
fs
add
shlb
mov
pop
xor
cmpsl
pop
stc
scas
loope
insl
in
cmpsb
mov
push
out
test
out
lcall
sub
mov
ja
xchg
sub
dec
xor
cmp
adc
call
aam
pxor
add
insl
add
das
push
loop
ss
lcall
out
push
daa
xor
aam
rorb
adc
aam
fistpl
jne
clc
fistpl
ret
adc
push
cmp
dec
pop
cmp
add
mov
mov
dec
mov
cmp
sbb
call
inc
xlat
mov
adc
dec
test
or
inc
xchg
cld
mov
rclb
cmpsb
xadd
pop
aas
xchg
repnz
lods
popa
adc
popf
mov
pop
sub
mov
mov
cmpsl
inc
stos
cmp
xchg
xchg
cmpsb
pop
bound
push
addl
inc
js
jle
cmpsb
adc
mov
fdivrl
mov
loopne
mov
int
adc
fidivrl
cs
xor
cli
jns
mov
adc
jg
jb
mov
icebp
out
fistps
fiadds
outsb
xchg
lock
cmc
fadds
rcl
pop
mov
push
or
lods
hlt
in
and
call
in
xchg
push
in
ds
mov
and
sub
outsl
cmpsl
mov
or
jp
div
jg
and
or
mov
leave
sbbb
mov
fisubrs
imul
jno
mov
jae
pop
jno
popl
cmp
jmp
nop
test
jno
cmp
ret
js
add
pop
es
mov
bound
push
iret
lods
cltd
mov
stc
add
nop
js
stc
mov
mov
and
std
sbb
and
fmulp
daa
imul
aam
dec
mov
mov
sbb
add
sbb
cmp
push
xchg
sahf
mov
mov
add
mov
adc
or
lods
jp
je
push
imul
jecxz
pop
test
lret
pop
mov
jo
mov
xor
mov
mov
mov
enter
cmpb
fldl
jle
cli
mov
icebp
adc
cwtl
pop
icebp
cmp
inc
shlb
fcmovnb
xlat
rcrl
cmp
sub
sbb
imul
xchg
insb
and
scas
pop
daa
inc
cli
sub
mov
or
and
mov
std
cmc
enter
inc
xchg
sub
xchg
shll
jl
dec
and
push
cltd
mov
sbb
xchg
lcall
fistpll
into
sarl
sti
enter
in
ds
and
push
call
xor
mov
sbb
sub
add
outsl
ret
ret
mov
adc
inc
es
xchg
jb
loope
fadd
mov
mov
mov
lods
adc
jbe
lods
pusha
jle
andb
xor
mov
push
push
or
xor
mov
insl
xchg
adc
stc
mov
ljmp
dec
cmp
mov
inc
push
and
cmp
mov
pop
xchg
repnz
or
push
xchg
dec
mov
adcb
aad
mov
in
xchg
adc
sbb
pushf
jle
pop
jmp
mov
jge
repz
or
and
mov
jo
cli
push
lods
rorl
and
mov
jae
adc
and
sub
fisubrl
cmc
jno
scas
mov
es
dec
into
cmp
xchg
clc
lds
stos
jmp
in
out
int
imul
ss
out
mov
add
mov
mov
mov
jg
mov
popa
movsl
pop
cmpl
das
sub
mov
push
and
ds
mov
and
lods
popf
std
or
adc
and
fwait
xchg
loope
push
mov
add
stc
jp
or
dec
cli
cli
fisubrl
in
ret
mov
loop
in
push
rdmsr
arpl
add
outsl
lret
notb
nop
loop
movsl
in
movsb
mov
imul
push
add
hlt
pop
fnstcw
adc
sub
sbb
xchg
int
push
es
in
in
jl
or
ds
cmpsl
sub
cmp
fnsave
aas
fcompl
test
arpl
ret
movsw
push
xchg
aas
mov
ja
cld
lds
mov
push
or
xor
mov
imul
or
xchg
cld
bound
cmp
je
divb
leave
shll
push
data16
int
add
or
xchg
fwait
std
repz
ljmp
lods
and
nop
dec
cmp
andl
ljmp
push
in
mov
xchg
pop
add
mov
or
jmp
mov
nop
jl
ss
cmc
stos
push
xchg
xchg
mov
xchg
lret
mov
sub
clc
mov
cmpsb
jle
jmp
sarb
jb
xor
xor
mov
mov
outsl
fists
adc
sbb
mov
ret
or
dec
scas
lods
sub
inc
mov
movsl
ret
lods
dec
test
inc
or
nop
inc
test
adc
inc
mov
fs
dec
add
jns
pop
fwait
jb
aaa
fwait
inc
sbb
pop
scas
clc
insl
xor
pop
popa
ja
xor
imul
inc
dec
fldcw
adc
push
push
je
push
cmp
cltd
jg
or
mov
adc
mov
mov
add
jge
adcb
or
jp
iret
sub
push
xor
je
sahf
imul
jle
inc
int
clc
enter
icebp
cmp
sarl
ror
xchg
mov
cmp
pop
das
ja
jns
sbb
dec
in
xchg
lock
data16
out
sbb
test
mov
mov
dec
sub
ss
mov
pop
add
cmp
subl
add
out
aas
cmp
xor
scas
ds
out
mov
arpl
adc
popa
jno
jno
shr
dec
add
sub
push
mov
xor
xchg
data16
rclb
lret
jle
mov
out
rorb
dec
test
mov
inc
adc
adc
hlt
cwtl
add
in
out
cmp
add
xchg
lcall
ss
push
mov
mov
adc
shll
insb
cmp
out
mov
pop
and
fwait
add
or
and
mov
imul
mov
jmp
xchg
inc
and
or
sub
imul
shlb
rorb
mov
addr16
mov
aaa
mov
xchg
and
fiadds
sbb
dec
scas
js
cmp
cmp
adc
je
pop
inc
pop
loope
scas
or
xlat
cs
adc
push
xchg
adc
ficoms
jae
js
add
pop
push
mov
push
mov
push
es
jnp
mov
data16
lret
adc
adc
mov
mov
mov
scas
lret
repnz
jne
jno
xor
repnz
adc
fadds
adc
arpl
ss
clc
lea
cld
jae
stos
or
fs
fsubl
cmp
lds
adc
jge
mov
and
jp
fisttpl
fs
push
rol
das
lea
cwtl
mov
push
idiv
pop
inc
cmp
hlt
shlb
jl
add
in
dec
sbb
into
pop
xor
stos
mov
or
jge
pushf
mov
jnp
shll
add
cmpsl
stos
addb
or
std
movsl
mov
pop
mov
rcrl
sub
jbe
cmpb
xor
popf
imul
loop
adc
cltd
xchg
int3
jnp
outsl
adc
and
dec
or
add
jmp
dec
push
loope
sahf
hlt
mov
lret
inc
and
mov
mov
jmp
mov
jle
imul
jle
icebp
insb
mov
lret
add
loop
std
loop
cwtl
movsb
lahf
lahf
add
xchg
add
jno
rcrb
cltd
es
sbb
cli
scas
cmp
stc
sbb
sub
pop
lret
dec
push
and
lahf
inc
xor
sbb
push
fwait
inc
mov
popw
dec
mov
das
pop
cmc
js
pusha
mov
or
outsl
arpl
jo
sub
aas
mov
sbbb
sqrtps
jne
xor
cmc
rorl
mov
mov
fs
out
pop
pop
test
filds
mov
daa
jg
dec
insb
mov
cmpsb
inc
lret
out
sar
fs
cmp
or
insl
push
dec
sbb
sub
movsb
in
xor
out
mov
or
inc
mov
shll
sti
mov
jmp
sub
clc
dec
dec
int
cld
inc
or
adc
push
dec
inc
mov
adcl
or
lods
xchg
mov
cmp
mov
xor
loop
add
xor
dec
inc
mov
rorb
jmp
dec
notb
push
cmp
notl
pop
pop
fnsave
stc
sbb
mov
scas
jne
test
test
sti
imul
shlb
test
jl
push
fsubrl
xor
pop
sbb
daa
cwtl
jne,pn
lahf
pushf
mov
pop
pop
loop
dec
aas
sarl
scas
pushf
pop
mov
cmp
and
sbb
jg
inc
or
ja
adc
subb
mov
inc
mov
test
out
insb
add
or
ret
pushf
je
pop
imul
push
xchg
mov
ss
lcall
inc
pop
dec
jmp
mov
fcmovne
cmpsb
roll
arpl
xor
ljmp
mov
ficoms
pop
fsts
popa
xlat
or
pop
mov
push
pop
ss
in
mov
xchg
xchg
mov
dec
int
lret
test
or
dec
mov
push
clc
out
mov
fs
fstpt
es
notl
std
filds
test
push
push
popa
pop
lock
jae
or
pop
mov
mov
shl
xor
mov
or
inc
rol
dec
into
aad
mov
pushf
mov
jae
imul
cwtl
push
xchg
mov
xor
sahf
xchg
cli
inc
add
xor
imul
xor
fsubr
and
rcll
mov
iret
insb
jge
sub
push
fs
mov
pop
push
dec
or
fsubl
pop
movsl
mov
in
sarl
mov
push
test
je
add
mov
dec
jge
scas
mov
push
test
mov
xlat
pop
fdiv
lods
xchg
bound
dec
pusha
fwait
dec
insl
and
loop
sub
lcall
in
xchg
mov
or
call
sub
inc
and
das
gs
dec
jne
cmpsb
jns
cwtl
mov
sbb
inc
dec
and
hlt
std
inc
dec
add
cmp
fnsave
lods
xor
inc
es
pop
push
out
and
lcall
xor
dec
sti
testl
jp
js
test
mov
and
xchg
fcoml
loopne
push
std
ds
mov
subl
mov
outsb
imul
push
loopne
je
imul
ficompl
push
mov
dec
fcomps
call
jmp
dec
sub
sahf
mov
or
pop
adc
sub
add
out
loopne
dec
push
int
leave
ret
mov
negl
sbb
hlt
fs
in
xlat
add
fists
xchg
movb
imul
aad
mov
fldt
sbb
pop
repnz
out
add
push
adc
sub
sbb
out
shll
test
sbb
fadds
stos
mov
push
or
lahf
xchg
sahf
mov
push
dec
test
stc
mov
push
jge
je
push
andb
mov
or
aaa
pop
push
mov
out
or
lret
mov
lret
cmpb
loopne
lahf
aaa
cmp
ret
jno
jne
xchg
dec
outsl
out
lods
mov
sub
cmpsb
stc
xchg
gs
xchg
mov
movsb
ss
xor
sbb
outsl
or
pop
pop
es
and
fwait
xor
xor
ret
lds
sub
out
lret
and
pop
inc
and
mov
roll
pop
testl
sbb
xor
test
push
mov
bound
mov
sbb
jnp
push
push
fwait
or
xor
rcll
xchg
pop
add
cmp
adc
dec
add
popa
jl
xchg
or
dec
stc
and
jg
js
mov
in
ret
dec
test
xlat
iret
dec
insl
jns
jle
inc
pop
pop
mov
mov
scas
or
cmpsb
sahf
ret
in
arpl
mov
scas
xor
adc
adc
sbb
pop
int
pop
nop
pusha
jle
mov
and
xchg
or
mov
mov
xor
inc
stc
test
xlat
or
in
and
xor
dec
repnz
in
mov
sbb
shrw
xor
or
mov
sbb
pop
ljmp
sbb
jg
repz
and
or
loope
inc
xchg
sub
dec
jg
xchg
push
inc
push
mov
addr16
mov
cmp
xor
inc
scas
add
pop
shll
fmull
mov
sub
cs
jbe
or
rolb
cmp
xchg
pusha
inc
icebp
test
push
mov
push
jp
pop
mov
idivb
xor
push
movsb
mov
xchg
ljmp
cmp
ljmp
mov
xchg
lods
sbb
inc
shrb
sbb
xchg
lret
sbb
mov
mov
xchg
mov
jl
mov
cli
pop
leave
lret
js
mov
insb
adc
sbb
fcmovu
pop
or
adc
loop
inc
xchg
sub
js
dec
je
loop
lret
loopne
ret
cmp
add
jns
dec
mov
xor
gs
push
pop
cmp
mov
js
ret
push
addb
cmc
into
xor
inc
int
xchg
ljmp
dec
xchg
sahf
mov
loopne
or
stc
shlb
dec
mov
and
int3
adc
xor
inc
lcall
dec
and
nopl
addr16
js
dec
or
and
in
cld
push
cmp
cwtl
sbb
negb
test
nop
mov
cmp
clc
mov
cli
xlat
mov
push
sub
inc
fistps
push
rcr
ja
mov
inc
movsb
adc
test
jbe
fmuls
pop
pushf
or
xor
in
add
std
pop
imul
or
shlb
shrb
lahf
mov
cmp
adcl
iret
xor
addl
int3
adc
pop
push
arpl
inc
sub
cmpsb
xchg
fwait
stos
mov
xchg
mov
popa
cli
cmp
xchg
inc
cs
or
loope
pop
sub
push
lods
dec
sbbb
mov
stos
ficomps
sbb
push
or
rorl
or
cmovg
addb
xlat
shll
push
push
imul
ljmp
inc
xchg
push
pop
aad
imul
insb
ja
lret
fisubrl
rorl
cmp
jecxz
movsl
mov
or
jle
cmp
push
push
es
cmc
outsl
gs
stc
mov
push
mov
pop
stos
cwtl
addr16
iret
fisubl
mov
or
loop
push
sub
dec
xchg
std
xor
pop
popf
cmpsl
xchg
stc
stc
jecxz
sub
call
or
loopne
inc
test
cmp
fnsave
push
cmpsb
jecxz
fisubl
adcl
pop
jnp
notb
pop
bound
jnp
fidivs
imul
push
clc
outsl
jns
xchg
aad
sbb
add
pop
or
push
adc
dec
sub
movsb
loopne
or
enter
sbb
mov
and
jae
in
mov
rclb
pop
aam
js
lock
adc
outsl
mov
and
mov
push
popf
sub
mov
inc
mov
push
adc
inc
aas
nop
push
xchg
rcll
sbb
xchg
fadds
lds
imul
pop
lds
jmp
jbe
mov
aad
in
jns
dec
movsb
orb
std
mov
test
cmp
mov
cli
push
hlt
sub
mov
into
xor
jnp
adc
xchg
fwait
mov
push
xchg
cmp
loope
sub
push
ljmp
jl
out
sub
mov
push
repz
cltd
xorl
test
pop
mov
add
mov
mov
adc
adc
jne
mov
or
push
pop
rolb
ljmp
pop
xchg
imul
adc
lods
push
cltd
pop
scas
add
ljmp
pop
add
not
push
repz
add
push
std
mov
xor
jp
xchg
dec
jmp
sub
push
cmp
lods
scas
xchg
cmpsb
add
scas
push
lret
mov
push
jle
pop
cmp
dec
sahf
lcall
inc
movsb
mov
or
mov
pop
or
mov
adc
mov
mov
jmp
shll
add
xchg
xor
jnp
xchg
jb
xor
cmpsl
push
sub
addr16
stc
loopne
leave
add
subl
push
jecxz
filds
xchg
xor
push
in
loop
mov
fstp
jmp
stos
sub
sub
xchg
bound
aad
sbb
cli
mov
xchg
and
int3
or
in
jo
in
insb
mov
enter
call
push
nop
jge
xchg
out
mov
xchg
xor
jmp
pop
cmp
jne
inc
std
jp
stos
movb
fwait
jecxz
sbb
push
dec
outsb
icebp
pop
sbb
push
dec
jne
rcrb
ljmp
add
loopne
mov
pop
test
aad
pop
xor
cmp
scas
dec
sahf
int3
data16
fcomp
cmp
xlat
idivl
cltd
loope
ficoml
mov
std
out
lahf
mov
add
xchg
xchg
into
pop
sub
pop
mov
mov
cltd
inc
clc
idivb
call
jge
sbb
adc
stos
gs
adc
das
repz
xor
pop
jo
das
push
mov
mov
xchg
xchg
dec
jae
je
int
ret
sub
xor
test
or
adc
mov
push
mov
stc
mov
dec
imul
mov
add
push
cmc
std
dec
repnz
sbb
gs
pushf
push
fisubrl
jne
jns
pop
and
adc
mov
inc
int3
loop
inc
je
adc
inc
in
cmp
scas
ret
fucomi
dec
push
fsubrs
mov
xlat
xchg
inc
ljmp
push
or
xchg
stc
sbb
sub
cmpsl
leave
xor
jne
xlat
sbb
inc
lods
stos
add
out
pop
in
sbb
jecxz
cmp
mov
stos
subl
das
cmp
or
or
jle
scas
adc
sub
test
sub
fs
andl
adc
xor
or
es
push
add
pushf
inc
shl
test
or
ret
stc
adc
push
sub
pop
and
sti
push
mov
sahf
cmp
aam
mov
mov
dec
xlat
pop
dec
or
test
fisubrl
fildl
insl
lret
sbb
mov
aam
xchg
mov
call
hlt
xor
adc
aam
or
cmp
les
lcall
leave
mov
mov
lods
insl
and
call
movsl
inc
lds
sbb
xor
stos
mov
and
cwtd
jbe
ss
pop
push
out
xor
cmpsb
cmp
outsl
mov
sub
mov
fcomps
stc
rorl
repnz
adc
and
xlat
cmp
xchg
arpl
rcrb
stos
cmpsb
xor
aas
das
push
pop
mov
mov
test
leave
bound
in
mov
xor
adc
cli
jmp
push
gs
shlb
mov
adc
jle
data16
cld
inc
inc
add
xchg
pop
repz
sub
or
adc
sbb
xchg
pop
cwtl
dec
insb
mov
stos
pop
imulb
js
sub
enter
xor
jecxz
push
xlat
push
pop
faddp
out
push
test
lret
dec
push
adc
xchg
and
movsl
lea
leave
push
scas
and
sarl
push
js
bnd
rorl
ss
xchg
jg
sti
xchg
push
cmp
ljmp
enter
xor
pusha
ja
ret
imul
mov
daa
jle
or
popa
mov
mov
xchg
in
out
lea
adcb
lock
popf
mov
pop
xor
rorb
pop
mov
test
sbb
out
add
pop
das
rclb
cmp
call
jae
fmuls
push
inc
inc
sar
cmp
dec
and
cmp
dec
scas
ds
ss
in
cwtl
or
mov
mov
mov
sbb
cmp
jg
js
add
test
fmull
push
push
mov
loop
adc
inc
mov
pop
pop
jns
sub
jge
inc
lock
scas
jecxz
fcmovnu
mov
test
js
xlat
pushf
dec
sbbl
test
aam
mov
dec
movsb
sbbb
out
cmp
inc
imul
dec
mul
movsb
sub
lret
sbb
mov
clc
hlt
lea
inc
insl
inc
fisubl
jp
mov
xchg
push
xchg
stos
lret
arpl
int3
movsb
into
mov
mov
xchg
sbb
sbb
adc
add
movsl
jnp
ljmp
shlb
out
cmp
cmp
out
enter
xchg
pop
and
loope
incl
ret
aaa
mov
adc
inc
mov
lock
inc
pusha
dec
inc
shl
out
and
imul
nop
lock
popf
xchg
mov
movsl
sarl
pop
dec
aad
mov
dec
pop
fcmovu
and
pop
and
sub
jecxz
shll
sahf
subb
inc
add
clc
repz
shrl
cmp
push
mov
jne
cli
in
movsb
nop
lahf
xchg
into
setae
mov
push
sbb
out
pop
pop
out
cmp
lahf
test
mov
push
push
into
out
int3
xlat
jbe
push
jp
cwtl
or
das
jl
sbb
jmp
xchg
hlt
popa
aaa
loope
call
rolb
ret
vmovntps
daa
or
hlt
adc
pop
push
push
xor
push
jb
mov
mov
push
cmp
lods
sub
cmp
out
sbb
pop
stos
scas
add
sbb
js
lea
jecxz
cwtl
cltd
jmp
mov
or
sub
lods
mov
and
inc
aam
nop
xor
mov
jns
outsl
repz
out
cmp
hlt
pop
popa
jnp
clc
mov
sub
inc
or
clc
dec
jle
arpl
loop
out
xor
xchg
imull
mov
leave
xchg
test
movsl
std
pusha
mov
fdivrl
and
insb
stc
int
aas
insl
das
icebp
dec
lea
pop
ss
das
push
dec
aad
stos
mov
mov
loope
mov
cltd
ljmp
mov
mov
gs
mov
je
clc
cmp
or
cwtl
add
push
outsl
xchg
xlat
sub
adc
outsb
and
lcall
adc
outsl
sbb
sbb
jmp
sbb
pusha
andl
enter
push
and
or
push
bound
testb
test
adcb
dec
insl
or
mov
arpl
pushf
mov
test
in
sti
loopne
push
xor
cmpsb
hlt
inc
dec
add
mov
cmp
push
cmp
adc
jmp
push
dec
pop
jle
fcoml
dec
push
pop
loopne
mov
jb
sub
lods
pop
das
and
add
mov
inc
hlt
sbb
and
sti
jae
rorl
test
bswap
cwtl
sbb
pushf
push
iret
sbb
xchg
lods
imul
lahf
sbb
andb
sti
lcall
or
pop
loope
cmc
iret
sti
and
pop
sahf
xor
stc
mov
adc
dec
mov
inc
push
mov
mov
xchg
xor
inc
js
jmp
je
arpl
pop
dec
sbb
or
pushf
xchg
jo
movsb
dec
push
jecxz
daa
mov
sbb
cmp
xchg
test
shrl
out
mov
clc
jl
inc
ljmp
roll
lock
test
or
faddl
lock
jnp
push
xchg
repnz
pop
mov
pop
insb
sahf
hlt
cs
jg
cmp
mov
sbb
xchg
add
andl
pop
ret
clc
adc
jge
push
jmp
cmp
nop
popa
push
ja
dec
adc
cmpsl
inc
xchg
test
pop
mov
xor
stc
cmc
lods
lret
push
mov
ficomps
sub
repnz
cltd
jmp
rorb
sahf
imul
inc
mov
mov
imul
push
subl
repnz
sbbl
test
jp
inc
fstpt
ds
xchg
cmp
adc
adc
ds
sbb
gs
lahf
test
ja
mov
icebp
mov
xchg
dec
lret
mov
and
dec
inc
adc
lods
adc
cmp
mov
sub
cmpsl
add
lret
push
cmp
sbb
fistl
loope
imul
in
negb
add
mov
sbb
insb
pop
dec
push
pop
sub
adc
in
fidivrs
cmpsb
pop
ret
repz
das
jl
push
xor
xor
movsl
js
data16
sbb
rcrl
jo
sub
lcall
enter
leave
dec
pop
cmp
dec
call
mov
rcr
mov
jmp
fs
idivb
xchg
jns
je
lea
das
mov
movsl
xor
xor
lret
push
dec
xchg
ror
gs
push
xchg
ret
lods
test
scas
pop
daa
mov
mov
jns
shrb
repnz
out
pop
mov
jb
das
sbb
lcall
lcall
pop
cld
xchg
or
data16
mov
xor
ret
mov
cmpsl
mov
xlat
sub
add
jmp
pop
adc
mov
cmp
sarb
arpl
add
inc
aam
push
movsl
mov
insb
and
add
fildl
adc
cmpsl
mov
sub
lahf
leave
sub
sub
xchg
repz
mov
jo
push
push
data16
jns
sub
stos
or
pusha
cmpsl
popa
mov
sub
dec
aad
inc
dec
pop
and
or
sub
push
cmp
mov
mov
ret
xchg
mov
mov
adc
dec
out
ror
cs
jne
xchg
push
adc
ret
popa
in
out
lcall
lret
cltd
push
push
cmp
mov
shrl
loopne
enter
out
dec
adc
jge
in
jno
bnd
mov
cmp
js
aaa
fcoml
cld
cwtl
xor
xor
push
ljmp
and
sub
cmp
mov
pop
cwtl
pusha
jmp
cltd
push
insl
jle
inc
cltd
mov
pop
sub
ds
nop
aad
ret
xor
cwtl
adc
fadds
ret
ret
fisttps
mov
xchg
jmp
mov
aad
jns
inc
pop
sbb
test
jmp
shlb
adc
pop
sub
jp
mov
lods
and
mov
xorl
dec
mov
in
lds
lret
ljmp
adc
pcmpeqb
es
in
push
cmovge
or
mov
sub
adc
dec
sub
sahf
mov
push
jnp
iret
popf
mov
lods
fists
sbb
leave
stos
mov
xor
mov
jo
jle
test
sbb
fyl2xp1
sub
push
movsl
and
movsl
sub
fsubr
dec
repnz
adc
jb
sarl
gs
dec
gs
dec
int
cmp
push
push
loopne
test
clc
lret
jp
out
adc
dec
inc
arpl
enter
dec
data16
pop
cmp
fs
sbb
cmp
js
lret
adc
mov
sub
xchg
movsb
adc
xor
or
push
test
xchg
ss
arpl
mov
jno
dec
ljmp
dec
cmp
pop
je
add
lock
cmpsb
pop
cmc
loop
dec
icebp
sbb
adc
call
shlb
sub
retw
lcall
jmp
sub
push
out
dec
xor
addb
mov
and
fldcw
inc
xchg
sub
pop
xchg
push
fs
adc
ljmp
inc
cmp
cmpsb
cmp
movsl
loope
lahf
jle
push
rcrl
xchg
idivl
daa
sbb
stos
je
mov
mov
mov
pop
sub
cmpsb
xchg
insl
jge
or
mov
dec
sarl
dec
or
pusha
sbb
cmpsl
stos
jp
xchg
movsb
dec
out
insl
rcll
mov
aam
in
movsl
ss
mov
cmpl
or
sarb
pop
and
imul
inc
lods
ja
xchg
fsubl
jno
adc
mov
insl
mov
sub
shrl
inc
or
icebp
or
jae
pop
mov
xchg
jmp
dec
mov
icebp
adc
inc
mov
and
and
and
fcmovnu
repnz
mov
or
mov
arpl
xchg
das
cmp
jne
xlat
inc
cli
idivl
test
addr16
sub
js
in
push
mov
mov
cmp
mov
adcb
lret
shrb
pop
xor
icebp
test
mov
dec
xor
sub
add
xor
cli
cwtl
xor
testb
fchs
push
jg
lret
outsl
add
lahf
mov
jg
or
pop
mov
stos
pop
fists
jb
dec
aam
cld
mov
jnp
push
sbb
sbb
cwtl
or
mov
jne
std
in
clc
in
cmp
call
mov
mov
push
jb
scas
scas
divb
jnp
mov
cmpsl
xchg
out
lahf
ja
xchg
movsb
dec
pop
dec
mov
shll
push
and
add
xor
adc
cwtl
movsb
sub
call
cmp
cmp
adc
sub
sbb
mov
mov
sarl
sbb
dec
imul
out
in
clc
inc
jl
and
arpl
mov
pop
pop
dec
shll
aas
hlt
lods
mov
cmp
and
cmc
dec
clc
mov
test
lret
test
sbb
fisubrs
sarb
iret
imul
ret
mov
or
add
or
and
and
xchg
sub
or
add
mov
aam
mov
mov
out
rorl
mov
jb
and
and
out
adc
loopne
gs
sti
leave
mov
mov
test
lea
das
pop
jae
clc
mov
xchg
sbb
ret
mov
or
sbb
repz
mov
mov
cs
dec
mov
mov
js
lret
lods
int3
mov
les
mov
outsb
mov
imul
mov
pop
stc
mov
leave
lds
leave
subl
fldt
sarl
fwait
cli
cmp
cli
sub
mov
mov
lret
pop
pop
add
dec
stos
enter
hlt
js
pop
popf
xor
sbb
push
mov
scas
push
sbb
or
js
mov
sub
adc
lds
mov
jno
js
lcall
orb
xor
and
jb
lds
and
cld
mov
adcl
lock
psrld
adc
pop
lds
sbb
mov
adc
push
cmp
push
lea
mov
fsubr
xchg
adc
push
dec
pop
mov
out
inc
data16
cmp
xchg
lods
mov
push
cmp
fisttps
or
in
mov
dec
inc
pusha
mov
jge
popa
pop
outsb
imul
jecxz
test
mov
lods
add
pop
jg
push
sahf
pop
or
aad
mov
dec
mov
aad
rorb
sbbb
lret
int
in
sbb
nop
aam
les
push
push
cmp
mov
push
iret
pop
mov
push
jno
jbe
xchg
jb
lods
inc
inc
mov
cltd
aaa
aad
shll
xor
inc
dec
jne
in
xchg
adc
mov
mov
mov
jne
jl
mov
sub
mov
repnz
inc
xor
cmp
xchg
cmp
mov
and
add
mov
and
fistpl
or
dec
and
sub
dec
lock
cmpsb
int3
mov
push
jle
in
xor
dec
shr
add
subb
gs
aam
dec
insb
and
aaa
call
pop
inc
mov
xor
push
mov
sbb
mov
and
out
aad
scas
pop
lock
insl
and
or
push
push
xor
sub
push
mov
xchg
sub
adc
jecxz
jnp
dec
mov
lret
add
jp
lcall
xor
mov
aad
and
hlt
stc
daa
aas
ja
call
mov
ss
or
mov
ljmp
pop
mov
sub
push
inc
movsl
jb
enter
cmp
sub
mov
scas
fisubrs
loop
push
mov
push
cwtl
add
lcall
jp
or
arpl
add
fmuls
dec
push
fs
lcall
cwtl
dec
loop
sbb
cmpsb
in
std
jnp
insb
popf
inc
int
sub
inc
pushf
scas
push
sar
mov
daa
or
sbb
sarb
dec
popa
lret
adc
cwtl
jg
rcrl
mov
inc
push
pop
push
mov
xchg
filds
xchg
xor
jbe
sub
aam
add
je
push
cwtl
cmpsl
dec
push
mov
xchg
mov
sub
test
mov
adc
pop
test
xchg
loopne
lds
or
insl
xchg
shll
mov
mov
add
push
aam
xchg
xorl
jb
shlb
mov
pop
push
inc
jge
icebp
popa
push
fcoms
cmpsb
lock
ljmp
jp
lock
shll
mov
lds
ds
rcr
loop
shll
daa
jp
mov
lods
notl
sbb
push
xchg
and
sub
jmp
inc
in
mov
hlt
repnz
nop
das
add
inc
xchg
call
jl
adc
imul
jecxz
cmp
sub
mov
cmp
les
mov
sub
jbe
sbb
dec
inc
and
add
sub
xorl
in
pop
shlb
ret
cmp
dec
xchg
ret
out
xor
fucom
dec
add
les
movl
inc
insb
subl
pop
cmc
aad
jno
jae
sub
ljmp
or
cmp
pop
ret
fadds
cmpsl
adc
cmp
enter
repz
popf
mov
or
scas
cwtl
mov
dec
int3
lret
sbb
aad
es
mov
inc
add
jmp
shl
stos
ret
out
clc
xor
inc
jno
add
popf
mov
or
xchg
cltd
call
xchg
out
les
insb
stos
push
ret
popa
cmp
push
lods
lcall
lret
fisttpl
and
mov
dec
imul
and
popa
mov
lcall
push
shl
fcompl
cltd
add
or
outsl
xchg
gs
mov
cmp
enter
cmp
push
stos
cmp
add
mov
clc
sbb
jae
call
xchg
sbb
ljmp
pusha
sub
call
fbld
loop
out
and
add
sbb
lahf
xor
daa
aaa
popa
pop
loopne
in
mov
daa
mov
inc
dec
mov
cmpsb
adc
or
push
ja
in
inc
mov
jno
insl
or
push
inc
out
fstpl
fs
xchg
cmpsb
dec
mov
pop
fs
dec
cmp
cmp
mov
lret
rorl
lock
shlb
test
jmp
adc
push
rclb
in
es
daa
das
enter
push
les
jns
pusha
out
loope
dec
push
mov
mov
popa
cmpsl
iret
xor
es
xchg
fisubrs
outsb
mov
add
outsl
call
dec
aaa
push
dec
ret
std
sbb
dec
mov
push
mov
inc
inc
decb
lcall
mov
push
arpl
adc
dec
mov
or
imul
call
rol
adc
rcrl
cmp
cmp
jle
or
sti
add
xlat
mov
scas
cmp
testb
push
mov
bound
xlat
not
daa
aas
inc
add
jae
repz
das
in
arpl
sub
movsl
test
adc
lock
in
test
xchg
xor
out
iret
movsb
rcrb
cwtl
insl
lea
push
out
rorl
push
imul
mov
in
sahf
xor
aad
pop
popa
lock
stc
aad
fildl
xor
and
and
jb
fisttpll
add
jp
pop
imul
addl
pop
xor
or
adc
ret
or
xchg
inc
int3
ret
fdivr
rorl
stc
clc
iret
pop
outsb
push
hlt
mov
or
cmpsb
cs
mov
test
pop
or
mov
loope
mov
imul
mov
pop
pop
xchg
pusha
divl
xor
adc
push
push
shr
lds
or
pop
push
sub
shr
dec
mov
aad
dec
lods
mov
cmpsl
cmc
xchg
enter
add
cmp
pop
push
movsl
inc
lea
cmpsb
sti
push
sbb
mov
sti
insb
mov
jnp
xchg
movsb
mov
idiv
ljmp
sbb
mov
add
and
mov
cmc
dec
popf
mov
aas
test
mov
test
mov
mov
jb
mov
jno
iret
shr
lea
je
mov
test
fistpl
pop
adc
inc
rcrl
into
pop
dec
xchg
adc
push
push
xor
pop
or
std
or
xorl
or
bound
sub
ret
mov
iret
push
aad
clc
and
mov
mov
scas
std
sbb
and
leave
mov
je
stos
sub
add
adcb
mov
cmp
cmp
packsswb
mov
out
push
mov
mov
mov
or
or
lea
sub
add
pop
test
or
arpl
dec
push
cmpsl
mov
negl
aad
ljmp
sahf
pop
jne
sbb
mov
xchg
mov
mov
dec
aas
add
jge
mov
or
push
jmp
push
mov
mov
fmul
fldln2
cmp
fcomps
mov
into
and
aad
push
jo
inc
hlt
push
inc
jno
dec
mov
or
cmp
arpl
aad
mov
mov
mov
pop
jb
adc
add
test
scas
cmp
dec
repz
jnp
mov
imul
inc
addb
jge
xchg
fcmovbe
pushl
mov
dec
sti
cld
ret
sbb
inc
mov
jmp
mov
mov
cmc
inc
rclb
push
add
cltd
lret
call
lods
xor
insl
jae
fidivl
and
mov
into
inc
lea
jne
aam
leave
cmp
pop
mov
pop
mov
inc
lods
fdivrp
xor
mull
leave
xor
mov
pop
jb
daa
scas
insl
push
lret
gs
sbb
fistpll
mov
jns
lret
jge
add
shll
cli
cmpl
sub
inc
pavgb
jns
lahf
fstpl
in
repz
dec
jbe
mov
testl
test
push
stos
sub
imul
fdivs
es
xchg
mov
or
xchg
mov
pop
adc
outsl
jecxz
mulb
adcb
cmc
mov
inc
shrl
pop
push
in
mov
adc
jp
sbb
in
movsb
inc
iret
mov
jno
arpl
nop
sbb
mov
daa
push
lret
mov
mov
setp
adc
hlt
int3
and
popa
mov
ds
cmpb
add
test
pushf
idivb
mov
psubsb
shrl
jmp
outsl
push
icebp
jmp
sbb
dec
mov
mov
push
lods
jmp
or
lods
jge
out
push
lods
pop
lods
or
jge
inc
push
and
scas
push
cmp
movsl
jnp
rorl
shr
add
push
mov
jb
push
lret
add
imull
dec
jbe
sub
adc
ja
lret
aaa
sub
mov
frstor
push
sub
mov
mov
jo
sbb
loopne
xor
and
and
ljmp
out
xchg
push
ja
xchg
aad
jg
mov
dec
and
jns
add
mov
sub
inc
fdivrl
xchg
shrb
fnstsw
mov
xor
mov
pop
pop
sbb
mov
outsb
xchg
movsl
mov
mov
rclb
jge
test
mov
xchg
cmpl
les
lds
inc
mov
pop
gs
loope
cmp
aas
jge
dec
push
push
out
mov
xor
aad
xlat
sti
popf
cmp
pop
xchg
sbb
sarl
xchg
jns
fsubrs
ret
mov
inc
jge
popa
lret
stc
rolb
mov
xlat
cmp
ljmp
sub
cltd
movsb
pop
dec
add
sar
mov
call
nop
lret
daa
imul
in
out
call
mov
sub
jg
pop
pop
roll
jge
ds
test
mov
lods
mov
dec
scas
divb
xchg
arpl
aad
loope
xchg
scas
sbb
sub
test
mov
lcall
inc
xor
sbb
cmpsl
cmc
clc
dec
insb
pushf
xor
jae
nop
fisttpll
push
jle
lcall
sbb
test
popa
lret
xchg
cli
repnz
ret
jnp
lea
mov
dec
jp
outsl
mov
ljmp
rcrl
xchg
mov
icebp
pop
xchg
xchg
add
xchg
mov
mov
ljmp
fwait
add
fisttps
sub
mov
fidivrl
add
add
dec
loope
imul
cmp
mov
and
jmp
xchg
push
adc
push
sub
sub
jo
cmpsb
mov
mov
inc
ds
or
jecxz
sbb
pop
jbe
test
xor
add
push
sub
mov
or
sbb
cmpsl
pushf
xorb
mov
dec
xor
icebp
inc
sub
mov
insb
xchg
data16
pop
imul
scas
xchg
jecxz
mov
lods
fidivs
jb
in
lods
mov
push
xchg
aad
subps
adc
out
aad
adc
push
das
mov
and
mov
push
ret
int3
push
fldl
lea
xchg
xchg
mov
cltd
cmp
fnstenv
xchg
arpl
sub
test
sub
or
mov
insb
aas
mov
dec
data16
stos
mov
jg
test
cli
bound
sti
rol
ret
imul
dec
and
mov
sbb
push
ja
inc
sub
sub
push
out
xchg
stos
pop
push
addb
lret
mov
bound
mov
scas
outsb
stos
pushf
jae
mov
push
mov
std
mov
leave
je
lret
jnp
jno
cmp
mov
xchg
ljmp
insb
push
push
mov
icebp
int
or
fnop
adc
je
stc
jl
xchg
pop
lock
mov
insl
cld
or
sbb
jl
pop
daa
jge
mov
or
mov
js
test
fmuls
pop
ret
sub
das
xchg
xor
xchg
je
shll
push
movsl
decl
mov
nop
stos
mov
cmp
test
adc
rorb
stos
pop
adcb
mov
adc
sarl
push
or
inc
movsb
xchg
xor
jg
inc
in
mov
dec
inc
cltd
mov
sub
dec
push
adc
cmpsb
or
test
sub
push
shlb
mov
addr16
jnp
iret
sbb
pop
xor
hlt
sbb
jnp
or
addb
jne
jg
mov
fimull
test
fadd
out
shlb
jo
loopne
in
mov
inc
sub
push
fdivrp
add
pop
push
mov
test
mov
outsl
cmp
or
fcomps
faddp
or
loope
aaa
lods
sarb
add
or
xchg
out
or
pop
mov
adc
rcll
cmp
int3
adc
loopne
mov
in
call
or
push
daa
or
or
cmpsb
xchg
shrl
sbb
lea
repnz
mov
mov
loopne
cmp
pop
xchg
push
dec
xor
sbb
lret
xor
and
sub
lock
sbb
ljmp
sub
and
jo
sub
lea
fsubs
sti
xor
cmp
mov
out
mov
testb
jg
add
cmpl
shll
mov
jmp
arpl
sbb
mov
mov
sarl
jno
mov
mov
rcl
push
xchg
cmp
mov
cltd
push
fstps
jge
sub
add
mov
je
aaa
pop
sbb
mov
xchg
cmp
call
add
dec
fsub
jne
out
pop
popa
push
in
decb
fldenv
cltd
mul
ror
xor
adc
mov
add
push
cmpsb
mov
mov
mov
inc
insl
loop
das
adc
sub
adc
es
js
loope
or
insl
sbbl
pop
jge
and
xchg
xchg
les
lahf
das
mov
aas
iret
push
push
pop
jns
cmpsl
xor
out
jmp
xlat
inc
push
sahf
sbb
cmp
in
adc
jecxz
pop
mov
cmp
cltd
sbb
push
xor
mov
cld
stc
test
fidivrl
inc
into
jl
fsubp
repz
add
cmp
cmp
subl
sbb
out
jmp
push
push
jle
loop
daa
je
add
jo
sbb
sbb
aad
ss
jge
lock
adc
out
dec
mov
cmpsl
or
sbb
or
sbb
insb
push
rol
mov
mov
or
mov
fmull
xchg
clc
dec
lcall
call
xchg
addr16
dec
in
mov
adc
jne
out
ror
sti
bound
add
rcrb
andnps
rcr
cmp
sahf
addr16
loop
mov
je
sub
xchg
xchg
mov
or
push
or
ficompl
jb
lods
cmpb
jnp
adc
push
in
xchg
inc
bswap
iret
xchg
dec
stc
adc
inc
push
fadds
inc
imull
jp
stc
and
lret
out
pop
jge
and
outsb
cmp
rolb
leave
cmc
outsl
xchg
mov
mov
mov
lret
xchg
loop
push
arpl
adc
mov
out
xchg
or
xchg
or
lds
push
or
inc
xorb
xchg
add
leave
das
sub
lcall
dec
xchg
fisttps
push
mov
out
sbb
cmp
xchg
push
fildll
fcomps
and
std
repnz
ret
jns
or
dec
mov
popf
add
sbb
push
ror
sub
dec
sub
add
pusha
inc
sahf
jecxz
stos
inc
insl
inc
cmp
push
aaa
cmp
leave
incb
mov
dec
push
mov
mov
imul
or
in
shll
stos
mov
cmp
das
lea
push
je
ficoml
pop
mov
pop
xchg
js
push
mov
adc
lds
inc
ljmp
icebp
test
add
jns
add
cltd
or
les
iret
mov
sub
rcl
jo
out
jb
mov
iret
clc
pop
dec
les
out
mov
mov
mov
inc
jo
mov
dec
pop
inc
mov
test
out
mov
stc
sti
adc
mov
test
loopne
sub
repz
enter
test
mov
xchg
pop
stos
movsb
xchg
push
mov
xor
xor
inc
out
and
cmp
mov
test
jbe
xchg
push
dec
aas
xor
dec
clc
cmpl
stc
and
outsl
pop
rcl
fcompl
xor
shl
std
jb
in
lret
cmp
insl
cmp
xchg
or
pop
ret
or
xlat
pop
xor
mov
xchg
push
in
popf
push
gs
jge
pusha
dec
sbb
je
loopne
roll
mov
xchg
xchg
es
mov
xchg
pop
cmp
inc
mov
rcrl
lds
outsb
mov
xor
push
xchg
mov
rcl
inc
sbb
lahf
add
mov
pop
inc
xchg
ret
outsl
fucomp
mov
mov
ljmp
lret
out
sti
notl
jmp
cmpsb
push
in
inc
mov
xor
aad
push
mov
lds
mov
jle
xchg
cwtl
jle
js
xor
bound
icebp
repnz
or
icebp
lcall
loop
std
adc
xor
orb
jnp
cmp
mov
dec
enter
lea
sub
aad
adc
mov
arpl
push
stos
push
clc
adc
in
lea
ret
inc
fwait
xchg
mov
repnz
orb
add
std
lahf
push
sbb
dec
adc
add
jg
jge
and
ss
fcompl
inc
push
pop
or
sbb
rorl
xchg
fimuls
call
mov
hlt
push
das
push
jg
and
addl
dec
out
cmpsb
sub
arpl
out
out
sbb
stc
insb
mov
test
or
or
bound
lret
jle
inc
into
inc
les
lods
cmp
xchg
out
mov
out
test
mov
or
ljmp
add
or
mov
dec
aas
fucomi
adc
inc
fstpt
jnp
in
sub
lock
pextrw
add
cld
inc
sbb
jg
mov
mulb
scas
jmp
rcrl
popf
leave
pusha
add
out
or
jne
rorb
pop
loope
ss
xchg
das
mov
fs
xchg
icebp
test
lret
pop
xor
int
xchg
jl
dec
dec
lds
iret
jg
in
aas
inc
and
out
pop
fwait
test
fdivl
pusha
int
fwait
push
jp
fisubs
int3
sub
pushf
xchg
adc
xchg
inc
sbb
div
hlt
cmc
and
repnz
inc
movsb
arpl
stos
mov
dec
call
imul
ficomps
cld
movsb
sub
inc
enter
addr16
out
dec
ds
mov
mov
xchg
cmp
jo
pop
adc
outsl
xchg
cli
or
mov
sahf
jne
call
mov
pop
mov
adc
fs
addb
fsubl
pop
cwtl
lods
sarb
imul
fwait
mov
scas
or
push
jno
jae
pushf
lea
daa
in
aad
jmp
ss
cmpsb
mov
push
sbb
lret
or
arpl
mov
mov
sub
movsl
enter
sbb
push
leave
lret
out
insb
stc
push
sub
push
pop
and
mov
dec
mov
mov
push
and
push
add
add
imul
mov
mov
scas
jg
sub
frstor
fcomp
mov
sub
repnz
iret
sahf
es
or
sahf
fsts
jl
lea
cmp
xchg
test
xor
inc
jno
sbb
and
cmpsb
xor
pusha
xor
stc
add
inc
dec
aas
pop
or
rolb
fldl
lret
add
out
inc
push
sahf
and
test
mov
adc
push
in
xchg
rcrb
inc
pop
iret
cmp
and
lods
mov
out
stos
fadds
ret
repz
jg
xchg
hlt
xchg
push
sbb
jb
lock
xchg
xor
adc
sbb
mov
cltd
outsb
mov
cmp
xor
xor
ss
in
es
sbb
outsb
rcrb
push
mov
xchg
inc
mov
loope
push
ficoms
or
rclb
pop
add
mov
push
cli
test
orb
push
jmp
hlt
xor
loop
xor
shlb
repnz
mov
xchg
adc
nop
lret
mov
push
call
add
mov
pushf
lea
fdivp
lock
mov
sbb
in
aas
jge
lods
sub
jmp
or
aas
and
add
mov
rolb
ljmp
fiadds
mov
and
popa
ret
shll
std
sarl
outsl
cmpsb
dec
shlb
add
js
movsb
fcomps
xor
out
mov
sarl
pop
sbbl
in
aam
je
inc
jno
push
gs
jl
shrl
rcr
stos
add
xchg
adc
popf
jae
push
pop
add
lods
ja
ljmp
jns
sbb
imul
sbb
lea
adc
test
dec
scas
enter
stos
insl
cwtl
dec
mov
or
adc
adc
cmpl
repnz
pop
pop
divb
cld
mov
push
addr16
movsl
das
fbld
fadd
cmp
and
into
rcrl
popf
or
dec
add
jne
out
out
stc
lcall
cmc
cmpl
mov
add
or
insb
stos
cmc
into
sub
lods
fmulp
lds
aas
and
into
stos
pop
pushf
int
jno
out
xchg
in
cmp
adc
fstl
adcb
sbb
xchg
repz
cmc
inc
pop
inc
pop
gs
stc
sbbl
std
lcall
push
lret
mov
pop
shl
mov
sbb
shll
or
js
inc
mov
inc
sar
dec
ret
cli
orb
js
mov
and
add
sbb
add
xor
repnz
ljmp
testl
pop
dec
ret
add
adc
roll
dec
sub
add
pop
add
and
rorl
push
jle
sub
cmp
test
imul
aam
cmp
push
sub
cmp
xchg
adc
inc
repnz
inc
add
mov
cmpsb
fiaddl
sub
mov
data16
popf
push
std
add
adcl
jno
or
adc
aad
sarb
mov
xorl
das
imul
shlb
out
pop
dec
mov
xchg
or
idivb
cltd
xor
cwtl
popf
jmp
dec
test
je
movsb
cli
xlat
adc
dec
ss
lods
and
add
xchg
pop
icebp
mov
and
movsb
cmp
fldenv
push
adc
or
lock
adc
fldcw
daa
sub
sub
jne
out
pop
dec
cmp
push
jbe
jnp
pop
jp
jecxz
test
add
sti
rcrb
cli
adc
dec
or
dec
popa
test
lods
mov
dec
out
push
push
xor
ja
daa
mov
es
xchg
test
ja
pop
jb
sbb
jno
xchg
mov
insl
xor
inc
popf
dec
xor
push
push
mov
sub
add
sbb
add
data16
pop
pushf
pop
add
nop
mov
mov
addb
and
popf
lods
push
into
mov
fidivrl
mov
cmpsb
sub
cmp
xor
pop
sbb
aam
jns
sahf
mov
adc
iret
je
cmp
mov
sub
mov
in
or
popa
sub
ljmp
mov
jnp
jg
and
fcompl
or
cwtl
dec
cli
add
push
xor
mov
arpl
scas
mov
stos
aas
and
adc
jbe
xlat
lea
push
sbb
mov
lret
sbb
movsl
mov
inc
mov
movlps
add
in
movsb
jno
or
out
cmp
aaa
les
mov
inc
dec
insl
je
jl
lea
into
outsl
mov
inc
inc
mov
cmpsl
aad
push
inc
cmp
leave
scas
dec
xor
xlat
daa
shlb
push
lahf
stc
shl
dec
and
cmp
test
mov
fsub
sub
adc
popf
lds
and
mov
jmp
fadds
xor
mov
pop
xchg
lret
pop
movsw
loope
xor
inc
popf
jecxz
std
femms
and
push
cmp
cmp
xlat
in
dec
dec
lcall
inc
bound
add
cmovno
fdivl
jle
cmp
mov
sub
repz
jg
sub
std
pop
fistpll
inc
jp
repnz
cmp
lods
fs
push
jns
repnz
aaa
nop
int
fwait
pushf
lock
imulb
test
enter
pop
push
loope
xlat
test
fs
test
enter
aam
outsl
test
inc
fbstp
int
add
int3
imul
and
aas
inc
subl
data16
cli
pusha
pusha
and
andl
xor
xor
dec
push
inc
stos
add
lea
iret
mov
xlat
les
sub
pop
stc
fcomps
adc
scas
adcl
imul
cmp
xor
xchg
aas
push
cmpsl
push
xlat
inc
cmp
mov
out
mov
mov
xor
mov
jle
xor
pop
ret
lods
insl
mov
lods
adc
push
lds
stos
jns
pusha
int
repnz
sti
or
and
loopne
daa
cmc
addr16
dec
es
dec
mov
mov
push
xor
ja
cmp
test
add
push
jbe
jns
push
dec
mov
fisttps
mov
or
arpl
pop
into
sbb
adc
pop
aaa
pop
jge
lcall
loopne
bswap
inc
scas
sarl
lret
add
xchg
imul
mov
and
and
jno
inc
cmp
mov
adc
movsb
mov
test
dec
ss
mov
lods
pushf
ret
aaa
xchg
repz
call
xor
js
sbb
out
sahf
push
sub
lret
clc
mov
and
pop
inc
adc
int3
cmc
push
adc
jg
add
xor
mov
shrl
add
push
js
xor
pop
sbb
mov
negl
xchg
fwait
cs
pop
mov
and
test
sub
dec
js
ja
xchg
inc
fsub
out
jecxz
xchg
mov
call
aaa
cmp
add
mov
adc
mov
and
imull
test
add
mov
add
scas
push
push
out
and
rcl
mov
imul
xor
adc
lods
xorb
push
inc
add
popf
aas
data16
test
rorb
subl
or
in
add
mov
mov
pusha
out
cmpsl
sub
shl
fstpt
outsl
test
ja
push
adc
xor
cwtl
xchg
adc
jecxz
movsl
das
cmp
add
dec
inc
mov
mov
loop
and
xor
fwait
test
fnsave
repz
leave
mov
jae
mov
cmp
or
jbe
mov
adc
cmp
adc
push
les
lret
jle
xchg
popf
sbb
sbb
fisttpll
jne
pop
sbb
fucomip
dec
jo
movsl
mov
and
mov
sbb
insb
test
jp
dec
jo
inc
in
pop
pop
and
std
jns
pop
mov
push
sbb
pop
mov
add
mov
sbb
mov
mov
pushf
into
pushf
jl
jae
adc
pop
mov
fbstp
adc
add
dec
outsl
cmp
loop
movsb
mov
sbb
jp
call
dec
pop
jb
pop
test
mov
rcll
xor
jb
pop
call
sbb
mov
pop
push
imul
cmpsb
xchg
shl
xchg
cmp
aad
je
arpl
popf
xchg
repnz
push
jle
ljmp
enter
add
inc
sbb
sbb
rclb
repnz
fimuls
sub
lock
negb
xchg
fwait
orb
shlb
inc
jb
loope
out
mov
ficomps
adc
sti
jl
lods
into
dec
dec
push
mov
sbb
stos
mov
nop
lahf
nop
lcall
mov
les
sub
inc
dec
stc
sub
and
leave
ja
sbb
mov
hlt
cmc
mov
add
out
push
push
xlat
inc
sub
cmpb
into
imul
rol
inc
or
dec
jae
jnp
xor
cmp
stos
test
mov
lds
push
stos
rcrb
cltd
xchg
std
imul
jo
xor
and
imul
arpl
mov
ja
xchg
negb
mov
mov
imul
std
dec
lods
xchg
repnz
add
jmp
and
cmp
dec
dec
mov
jle
aam
mov
aam
xchg
int
sti
xor
clc
sbb
xchg
jb
jne
pop
lds
inc
mov
enter
adc
pop
mov
inc
out
bound
adc
jmp
mov
je
adc
sub
sub
push
sub
mov
inc
push
jle
in
mov
dec
idivb
repnz
cmp
lock
adc
cmp
iret
imulb
movsb
fmuls
imul
xor
scas
xor
cmpsb
lods
mov
mov
add
sahf
pop
push
sbb
negl
andl
in
mov
cmp
imul
sub
jno
jp
cli
jo
js
popf
ljmp
cmp
in
je
push
add
popa
ret
jg
push
mov
or
sbb
pop
jne
mov
cltd
push
xchg
pop
imul
das
cmp
mov
mov
mov
aaa
jne
dec
xchg
jbe
scas
int3
xor
xchg
mov
mov
out
pop
jae
movsl
jecxz
scas
push
sbb
arpl
jge
mov
sub
inc
jmp
mov
cld
jno
mov
ljmp
xchg
stos
ret
lahf
sbb
jg
mov
xor
mov
push
jns
xchg
xor
aaa
pop
rclb
sti
dec
jns
jmp
mov
xor
lods
cmpsl
icebp
sub
and
lock
mov
sub
nop
bswap
addr16
aas
lock
les
lock
pop
xor
popf
mov
adc
movsl
adc
mov
cmp
lods
cmp
mov
inc
xor
test
xchg
push
psraw
adc
sbb
aas
cmc
inc
rorb
inc
mov
aad
and
test
dec
or
test
xor
pop
test
cld
arpl
ja
das
fisubs
add
std
aam
fldt
xor
jne
xchg
sub
pop
stc
stos
jmp
sub
pop
dec
fiadds
sub
jnp
addr16
pop
xlat
js
pop
out
jecxz
and
loope
mov
mov
dec
xchg
and
jns
mov
ret
mov
lret
lds
cmpsb
xchg
outsl
adc
push
shll
adc
mov
cmpsb
nop
inc
cli
hlt
sar
and
int3
sub
and
dec
adc
or
cli
and
call
out
icebp
xchg
mov
fstps
cmp
mov
adc
in
mov
xor
mov
shll
pop
mov
lcall
pop
pop
pop
sub
pop
scas
and
push
add
hlt
push
lcall
xchg
lods
and
icebp
sbb
je
cwtl
lods
mov
pop
into
in
inc
xchg
and
xchg
out
stos
and
sbb
pop
movsb
fsin
shll
ret
pop
les
cs
sub
stos
inc
out
adc
divb
pop
leave
ret
das
or
and
mov
fs
fsubrs
xor
push
mov
push
xor
dec
pop
and
data16
icebp
mov
jp
es
push
outsb
sub
popf
aaa
xchg
mov
ds
nop
mov
fldt
pop
inc
or
mov
enter
shlb
xchg
testl
push
mov
dec
dec
mov
cmpb
aam
sbb
rorl
int
push
iret
sub
sub
cmp
std
push
cmp
je
adc
lret
pushf
mov
adc
or
pop
lahf
cld
outsb
pop
inc
xchg
adc
pusha
dec
hlt
pop
sub
xor
xor
inc
mov
push
mov
into
mov
std
ljmp
not
fdivrs
xor
xchg
loopne
mov
int3
repz
addr16
call
lret
into
sbb
sub
jae
std
dec
lret
xchg
data16
lock
or
xchg
subb
dec
es
cmp
jecxz
and
hlt
dec
adc
and
push
mov
jne
pop
dec
lcall
lahf
in
sbb
lahf
dec
das
push
push
jo
data16
pop
sahf
iret
push
xor
rorl
pop
lahf
jge
aam
push
mov
push
mov
inc
pop
je
in
pop
sbbb
push
gs
scas
lret
pop
ror
push
xchg
fnstenv
fwait
xchg
stos
mov
adc
adcb
jno
fidivl
leave
pop
jbe
push
in
add
mov
popa
call
jmp
cmp
jmp
mov
mov
lret
push
pop
jnp
aam
inc
js
push
shll
push
cmp
jmp
inc
xor
sarl
enter
leave
mov
dec
iret
rolb
and
jbe
insb
divb
pushf
inc
sahf
sub
push
and
pusha
fnsave
leave
jno
pop
in
or
std
push
fisubrl
test
fisubrs
clc
and
sub
dec
push
mov
cwtl
or
mov
inc
fstl
iret
jae
into
fists
lcall
sub
fsubr
mov
push
fimuls
or
xchg
push
enter
dec
movsb
jle
mov
mov
pop
add
mov
mov
out
enter
mov
xor
in
mov
pop
call
xor
xor
iret
enter
lock
int3
add
push
sub
jge
out
sahf
cmp
pop
pop
call
cmpsb
jbe
call
mov
nop
dec
sbb
test
pusha
push
pop
and
mov
test
jae
cmc
xchg
xor
pusha
mov
ljmp
pop
dec
ret
in
pusha
ret
sbb
daa
pop
fistl
les
mov
pop
add
loope
mov
hlt
mov
sbb
lahf
repz
test
xor
pop
dec
icebp
cld
aaa
jne
xor
iret
or
es
sub
insl
leave
push
jno
push
mov
in
jp
adc
pop
mov
inc
fs
adc
add
mov
push
inc
jb
mov
cs
xchg
pop
pop
xor
add
pop
cld
test
imul
incb
negl
clc
js
stc
stos
mov
rorl
xchg
and
sbb
sbb
adc
inc
sub
dec
cli
cmp
insl
or
xchg
push
cmc
stos
jmp
jae
rcll
adc
pop
push
fbstp
or
xchg
xchg
pop
jne
aaa
fdivl
xchg
fsts
jl
cmp
mov
popf
mov
test
add
mov
lcall
ljmp
je
jp
xchg
jnp
pop
repz
mov
icebp
adc
addr16
jne
movsb
cld
ds
movsl
cmp
mov
subb
cld
xchg
icebp
stc
insb
daa
js
stos
push
subl
adc
in
pop
std
pop
mov
ret
mov
out
add
sub
cmpsb
xchg
jge
jno
push
int
data16
mov
xor
jge
jnp
adc
mov
leave
ds
adc
dec
aas
add
mov
xchg
stc
test
std
jp
and
in
rcll
rep
pushf
dec
mov
mov
call
pop
or
popa
jo
pop
nop
jmp
pop
adc
js
pushf
cltd
mov
inc
jbe
add
pushf
mov
sub
cmpb
sbb
mov
mov
mov
and
repnz
cld
or
daa
fsubrl
push
fcoml
std
hlt
inc
dec
add
pop
xor
sbb
test
les
fwait
jo
ficompl
pusha
dec
jmp
movsb
xor
sbb
inc
shll
inc
adc
xchg
gs
add
in
or
pop
lahf
leave
in
hlt
aad
stc
jbe
ret
or
cmp
insl
scas
push
sti
mov
mov
fcomps
dec
push
mov
mov
or
loopne
jae
scas
xchg
inc
shlb
mov
xor
popa
sti
add
ss
push
pusha
add
scas
fstpl
insb
pushf
lds
xchg
lret
push
roll
sti
imul
add
push
and
xor
xchg
out
cs
mov
lock
flds
outsb
les
test
loopne
mov
cmc
mov
lret
es
popf
xchg
lea
ja
cltd
jmp
pushl
push
repz
mov
mov
push
inc
cmp
fstpt
jno
add
jnp
sbb
mov
enter
cmp
insl
dec
xchg
xchg
lcall
icebp
hlt
stos
mov
push
push
mov
imul
mov
sar
scas
mov
add
mov
cwtl
sahf
pop
mov
call
mov
cmp
mov
cmp
hlt
push
aas
fnstsw
stos
imul
adc
mov
arpl
inc
and
popf
arpl
cld
bnd
xchg
fidivs
ds
jg
movsb
or
iret
pop
popf
insl
jle
push
nop
lahf
aam
imull
loop
mov
push
pop
sub
jne
mov
outsb
scas
outsl
sbb
pop
out
adc
jmp
mov
sbb
add
gs
fldcw
scas
pop
xchg
inc
idivl
adcl
sbb
mov
pop
notb
pop
pushf
repz
cmp
sub
jno
dec
or
adc
inc
pusha
sahf
mov
cli
cmp
movsl
and
lret
dec
subb
repnz
stos
pop
je
push
rorb
jno
in
arpl
ljmp
xor
add
adc
add
jb
mov
pop
mov
fisttpll
cmc
jle
bound
push
pop
xor
pop
and
xchg
lcall
addb
mov
jo
xor
scas
cwtl
add
test
aam
cmp
leave
add
jns
xor
sbb
push
add
sbb
xlat
and
popf
add
fildll
cmpl
inc
fnstenv
inc
mov
iret
mov
push
mov
jb
sub
mov
jle
cmc
dec
movsl
icebp
xor
std
test
outsb
stc
adc
push
or
add
cmp
xorl
jne
sbb
mov
mov
add
mov
out
insb
pop
lods
sbb
mov
sbb
rclb
ljmp
sbb
dec
je
lock
xchg
xor
pop
jmp
lods
fsts
xor
loop
or
mull
or
pop
cmp
sysenter
inc
pop
cltd
ds
jb
sub
sub
ror
cmp
pop
js
add
andb
aas
jno
add
lss
cmpsb
cmovbe
jo
std
std
scas
in
call
pop
sbb
mov
sbb
std
jbe
mov
imul
outsl
fwait
bound
cmp
ss
jb
adc
js
pop
inc
arpl
xchg
mov
out
insl
stos
dec
mov
jle
ret
cmc
mov
sbb
adcl
push
add
shrb
pop
pop
imul
int3
add
cmpsl
shrl
sub
push
push
fsubrs
sbb
movsl
or
pop
sbb
pop
inc
and
ja
hlt
sub
mov
pop
adc
xor
or
aad
movsb
sub
pop
fs
jo
add
mov
popl
out
out
rclb
pop
dec
jge
adc
xchg
movsb
lret
adc
sub
pop
cmp
adc
cmp
cltd
popa
and
mov
dec
clc
cmp
push
cmpsl
push
lea
sbb
cmpsl
mov
xchg
je
test
jg
std
adc
sbb
mov
pop
outsl
notb
xchg
mov
add
mov
in
xchg
cmp
jl
in
in
sub
mov
mov
fidivl
jmp
shlb
aam
jl
cmp
jecxz
or
out
out
cmc
es
inc
jp
scas
mov
mov
push
int3
jge
dec
aas
cmp
scas
pop
aad
mov
bound
mov
mov
rol
jecxz
pop
lcall
sbb
dec
and
fcompl
out
cmp
icebp
xor
mov
fistpll
jne
outsb
sub
cmpsb
mov
fisubl
push
push
inc
jo
jno
mov
push
movsb
sbb
ja
lahf
push
ds
mov
aas
aad
inc
inc
rcrl
divb
jp
pop
sbb
add
mov
push
xchg
imul
aas
jns
sub
in
enter
jbe
push
sbb
pop
ljmp
xor
addr16
lret
scas
pop
cld
les
idivl
mov
pop
mov
pop
fucom
and
imul
adc
xchg
pop
mov
arpl
adc
rcrl
shr
mov
insl
sti
dec
push
adc
enter
jl
shr
push
lret
movsl
movsl
mov
xor
rcr
jne
ficoms
xor
in
pop
dec
lcall
dec
jl
insb
and
aaa
adc
xchg
mov
xchg
push
jge
gs
xor
into
lahf
add
add
xor
mov
pop
or
push
enter
clc
sub
mov
js
sbb
add
or
jmp
sub
fwait
xlat
mov
cmp
or
pop
adc
jnp
cmp
arpl
push
mov
scas
cltd
dec
or
pop
dec
pusha
add
repnz
xor
adc
push
lahf
punpckldq
lahf
aad
xor
out
mov
mov
and
mov
sub
mov
dec
jae
mov
fldcw
jmp
jae
rcll
sub
fnstenv
insl
xchg
sub
not
ja
mov
jge
mov
push
push
incb
fstl
js
fdivp
lret
or
inc
ret
icebp
xor
pop
dec
mov
test
bswap
popf
inc
adc
cmp
hlt
stos
stos
xchg
jbe
mov
sbb
jle
push
mull
pusha
test
into
insb
les
lods
xor
adc
test
repnz
xchg
scas
xchg
pop
push
jae
sbbb
pop
out
arpl
sub
mov
out
repz
cmc
adc
and
dec
sbb
loop
dec
sbb
mov
add
cmc
xlat
in
stc
repnz
fucom
dec
jnp
int3
cld
loopne
mov
xchg
test
popa
jne
and
push
icebp
rcrb
lahf
sub
aam
clc
cmp
gs
subl
sbb
dec
stc
xchg
popa
mov
adc
popa
mov
aad
fcmovnu
aad
pop
subl
stos
bswap
imul
test
int
into
xchg
mov
movsb
loope
push
sti
cmp
and
jnp
sbb
aas
js
shr
les
adc
and
lret
in
scas
ljmp
mov
jge
and
pop
mov
cmc
xchg
mull
les
or
stos
jo
daa
test
repnz
jnp
bound
and
jl
rol
xchg
mov
mov
lret
mov
mov
xorl
push
arpl
sub
add
cli
fs
popf
out
mov
sbb
pop
xchg
xchg
arpl
dec
lock
mov
pop
jmp
cmpsb
loop
sub
xlat
push
push
lret
adc
fistps
push
jnp
ja
scas
push
cmp
cmpsl
mov
ljmp
add
push
inc
dec
and
dec
lret
add
stos
jcxz
adc
lret
lea
hlt
and
add
sub
orb
das
add
inc
imul
or
in
or
xchg
push
dec
cwtl
js
in
pop
popf
leave
ret
jmp
push
xor
inc
jle
or
mov
test
and
insb
xor
xchg
push
sub
cmc
sub
sahf
jmp
push
xor
movsb
ret
scas
and
scas
lret
add
aam
div
outsl
loop
and
mov
roll
and
push
loop
ja
push
popa
cmp
cwtl
xor
insb
in
sbb
dec
inc
pusha
jp
aaa
add
inc
insl
scas
sub
fistl
jle
adc
push
ret
inc
mov
dec
mov
mov
pop
dec
sbb
outsl
sahf
fsubrs
mov
lahf
xchg
dec
stos
dec
sub
push
sahf
inc
into
leave
mov
cwtl
jae
cmpsl
dec
xchg
xchg
push
jg
adc
mov
mov
jnp
arpl
sub
cmpsb
sahf
pop
dec
mov
push
pop
and
xor
xor
xchg
mov
enter
out
enter
xchg
cmp
pop
mov
out
mov
mov
and
mov
andb
pop
test
sbb
add
mov
cmp
jns
mov
sbb
dec
ss
push
xchg
ljmp
push
dec
mov
jbe
sbb
ficompl
stos
xor
aas
xchg
ljmp
mov
xlat
inc
dec
sbb
jmp
mov
add
mov
add
xchg
loope
cmpsb
pop
fstps
cmpsb
mov
xorb
mov
cmp
ja
mov
inc
je
sub
mov
jo
shl
jo
shl
mov
push
mov
and
add
stos
cmpsb
dec
or
push
cmp
aam
cld
add
xlat
ja
jbe
inc
jo
pop
mov
loope
lods
pop
or
push
divl
xor
mov
jbe
push
pushf
jge
xor
loope
jbe
call
adc
scas
dec
xorl
cmp
out
inc
add
andb
ds
int
mov
je
jae
mov
mov
rcrb
pop
aad
outsl
popf
xchg
push
push
cltd
out
lock
dec
sbb
sub
jp
aam
ficoms
mov
cmpsl
cmp
lea
mov
shrl
sar
inc
cmp
or
popf
test
sub
bound
cmp
add
inc
push
addr16
aaa
xchg
add
cmp
call
pop
divb
adc
jae
in
mov
dec
jno
mov
sbb
push
out
loopne
nop
sbbl
jp
fnstcw
mov
adc
and
sti
stos
add
jae
bound
fbstp
shlb
cmp
scas
iret
sub
addr16
inc
repz
or
xchg
cmp
xor
push
lret
or
pop
jnp
decb
fdivl
xchg
cmp
adc
fcmovnbe
or
adc
xchg
push
xor
push
inc
sbb
or
scas
je
std
fisttpll
stos
push
and
mov
lret
shll
xchg
call
lea
aaa
push
insb
rclb
mov
cltd
mov
pop
sti
lock
lods
adc
inc
jb
xchg
nop
inc
jo
cmp
jns
test
pushf
fabs
xchg
xor
xchg
xor
ret
cmpsb
ljmp
push
and
scas
lcall
imul
fisubrl
mov
cs
inc
xchg
fstpt
fdiv
xchg
lret
orl
sub
icebp
sbb
movsl
mov
ds
mov
mov
rcll
loopne
sbb
jb
pop
iret
mov
scas
inc
mov
dec
inc
in
fs
rorb
mov
mov
add
lea
lret
dec
sbb
jae
fcmovu
fwait
or
add
popa
jnp
in
leave
xor
lcall
mov
push
arpl
rcrb
popl
lret
lods
das
pop
repz
mov
jmp
out
cs
dec
subl
rolb
pop
xor
xchg
xor
xchg
or
push
inc
pop
icebp
lcall
xor
and
add
push
lods
cltd
test
insl
push
cmp
fnstcw
mov
jns
movsl
stc
lret
mov
cmp
sbb
lcall
daa
lds
dec
adc
into
xchg
nop
clc
add
jg
push
jo
push
pop
push
dec
ja
or
gs
adc
dec
popf
leave
add
cmpsb
lds
fsubrl
add
push
sub
in
and
mov
xlat
sbb
cli
fildl
pop
cmp
das
ret
push
dec
mov
or
lea
fmull
pop
mov
xchg
inc
jo
cli
das
mov
xor
jne
pusha
sti
ret
clc
mov
pop
mov
xchg
jns
xchg
inc
syscall
dec
test
mov
push
xchg
mov
out
and
sbb
aam
hlt
fs
dec
lahf
ljmp
add
outsl
mov
pop
pushl
push
lea
add
jne
dec
in
leave
sbb
pop
push
jne
dec
cwtl
mov
aad
dec
sbb
or
sbb
mov
xor
pop
inc
fadd
xlat
enter
adc
test
xchg
fstl
mov
mov
adc
rcll
jnp
xlat
clc
ficoms
xchg
push
jg
jg
cmp
repnz
lods
mov
dec
jae
xchg
push
adc
fsubl
mov
xor
add
push
int3
inc
and
repnz
nop
xor
mov
mov
sub
fldl
push
push
sub
push
sub
cmc
mov
add
pop
aad
inc
ljmp
pop
mov
arpl
sub
shl
mov
push
or
fsubs
aas
pop
aaa
fidivs
cld
inc
jecxz
rcl
inc
jae
std
cmp
or
daa
or
lea
das
xchg
loopne
es
das
mov
push
decl
rorb
xchg
jb
std
adc
aad
pop
pop
mov
cmp
mov
mov
leave
stos
xorb
jnp
pop
or
mov
xchg
insb
push
mov
pop
fistpll
pop
insb
ficoms
movsl
mov
mov
add
inc
test
iret
inc
dec
and
jecxz
insb
icebp
xchg
mulb
jo
jns
push
inc
push
jp
mov
dec
mov
dec
xchg
test
mov
sub
or
decl
arpl
fdivs
push
sub
sti
or
lret
pop
popa
inc
rorb
dec
repnz
stos
add
loopne
cltd
cwtl
push
and
das
in
pushf
push
ret
pop
add
imul
dec
popf
inc
lret
pop
inc
push
cmp
and
mov
cmpsl
sahf
or
xor
fstps
in
mov
mov
aaa
jo
lods
xchg
and
jg
dec
cmp
cmpsb
dec
jmp
cmpl
ret
sub
push
pop
les
fwait
ret
test
adc
loop
jl
cmp
arpl
lods
stos
or
lods
inc
lds
test
mov
sub
in
sarb
add
and
cmp
insb
add
cmpsl
mov
mov
cmp
mov
insb
iret
fdiv
mov
loopne
ficomps
cmp
lds
pop
lock
jmp
mov
sti
inc
xor
out
or
mov
les
xor
bound
lcall
add
out
xor
lret
bound
leave
xchg
or
jnp
icebp
test
mov
out
movsl
inc
mov
aam
mul
jb
dec
es
push
sbb
mov
inc
rcrl
outsb
push
cld
and
fstl
jge
jge
imul
jnp
imul
cmp
or
pop
imull
push
cltd
test
int
jo
mov
inc
cmc
lret
cmp
js
lcall
lret
lods
maskmovq
ret
mov
ja
or
sbb
push
or
ja
inc
lahf
add
mov
lret
xor
jbe
loop
repnz
mov
leave
inc
add
test
add
sbb
fcompp
mov
aaa
rol
test
jo
cltd
loopne
out
addr16
inc
sahf
pop
cmp
fisttps
mov
dec
pop
dec
lahf
mov
jmp
sbb
and
pop
mov
pop
dec
pusha
jl
dec
xor
repz
xchg
divb
movsl
pop
pop
sub
jae
dec
adc
fnstcw
cmc
adc
fidivrs
aas
inc
xor
movsl
lret
sahf
or
mov
mov
xor
and
add
add
mov
xchg
sbb
mov
rorb
fidivl
pop
mov
imul
aaa
mov
rcl
or
jo
pop
xchg
mov
pop
jo
ss
mov
sub
jg
cwtl
enter
js
or
cmp
fistpll
popa
cmpsb
cmpsb
hlt
mov
test
jno
mov
mov
sub
pop
sbb
pop
imul
popf
add
mov
or
bswap
in
or
cld
dec
ss
sarl
mov
orl
ds
loope
imul
pmuludq
sub
sub
sbb
movsl
ds
jp
in
fnstsw
add
xchg
dec
test
and
pop
adc
in
sub
cmp
cltd
shrb
add
jp
popa
push
outsl
mov
rclb
push
shll
xchg
fstps
jns
add
std
test
out
movsl
fs
xor
loopne
sub
imull
es
and
push
cli
push
stos
jmp
call
imul
xor
push
cmpsl
pop
cmp
push
test
call
sbb
sbbl
mov
shrb
jmp
sbbb
xor
gs
inc
in
jnp
out
sbb
lea
cmpsl
sbb
and
mov
aam
jp
xor
pop
push
rorb
cltd
aam
ja
push
mov
pushf
jns
inc
inc
mov
xor
out
mov
jno
add
push
outsl
jmp
mov
mov
dec
jno
pop
lods
scas
push
pushf
mov
insb
notb
fwait
les
add
in
jns
push
fistl
cmpsl
sub
mov
cmp
jmp
sbb
mov
mov
push
shrb
clc
xchg
enter
or
jne
xchg
das
fmuls
pop
icebp
jp
jge
inc
das
inc
test
clc
xor
cld
in
push
adc
sbb
mov
je
jp
mov
jnp
and
jno
cmp
mov
stos
add
pop
stc
divl
test
add
jge
nop
xor
mov
adc
dec
sbb
and
pop
outsb
dec
in
nop
into
push
sbb
sub
and
imull
incb
pop
js
add
dec
je
int3
xor
dec
lret
enter
outsl
add
mov
repnz
aaa
inc
mov
aas
daa
out
adc
data16
dec
jmp
jge
repz
cmp
or
test
ss
sub
je
fwait
rorb
hlt
cmp
cmp
mov
ja
mov
xor
gs
jecxz
ret
and
call
cmpb
pop
push
sbb
xchg
and
push
mov
in
das
lock
xlat
int
dec
push
pop
insb
repnz
inc
jno
xor
testl
mov
sbb
out
adc
cmp
loopne
adc
mov
mov
fmuls
push
xchg
and
sbb
push
dec
clc
data16
sub
push
push
sbb
pop
lock
shr
aam
cli
in
jb
cmp
inc
push
hlt
pop
shlb
sub
sub
sub
push
popf
dec
push
addr16
fsubl
push
jne
cmp
sub
aad
bound
mov
popa
mov
pop
push
lods
jg
mov
add
mov
or
mov
es
inc
xorl
sar
mov
push
adc
enter
lds
adc
shl
aaa
xchg
aam
sub
sbb
arpl
or
in
pop
push
or
js
cmp
mov
xchg
negb
cmpsb
mov
sti
in
mov
inc
mov
out
lret
lcall
pop
sarb
sbb
add
push
fs
scas
test
sbb
test
arpl
scas
stos
or
xchg
mov
pop
fimuls
xchg
popf
xchg
jns
das
clc
sbb
mov
mov
sbb
dec
dec
in
mov
rcrb
or
fdiv
xchg
xchg
jb,pn
inc
imul
or
into
pusha
fnstsw
push
ja
push
test
popa
push
sub
pop
xor
cld
dec
cltd
mov
xlat
xchg
popf
imul
subb
mov
stc
sub
cld
mov
add
xor
cli
andl
or
add
clc
sbb
mov
cmp
fcoml
test
outsl
lret
cmp
push
jns
add
dec
ss
inc
mov
and
repz
sahf
sub
jno
jmp
outsl
cmp
inc
jle
pop
add
push
clc
cmpb
cmp
xor
jg
cmp
sub
mov
xor
xchg
push
ja
cwtl
add
pinsrw
aam
inc
lods
nop
dec
pop
call
dec
dec
aas
push
js
sub
push
popa
adc
ja
sub
aam
repz
mov
popa
sbb
aaa
cmp
aad
cli
loope
lret
push
in
jge
cltd
dec
cmp
daa
scas
pop
popa
outsb
mov
data16
out
mov
and
icebp
loop
mov
nop
cmp
pushf
add
push
adc
mov
out
cmc
popa
dec
hlt
add
in
pop
mov
lret
mov
mov
daa
test
movsb
inc
ret
push
inc
nop
xchg
push
and
int
inc
insb
cmovg
icebp
inc
lea
fcoms
xor
mov
and
mov
mov
and
jl
inc
and
jb
aaa
mov
pushf
in
jecxz
fwait
ret
cs
lret
and
test
ja
mov
xor
into
jbe
dec
jle
jge
add
imul
das
mov
dec
and
pop
cmp
sbb
xchg
outsl
popf
ds
sahf
cmp
in
jbe
das
test
outsb
pusha
inc
dec
cmp
push
xor
push
es
pop
jns
inc
inc
popa
es
mov
cltd
outsl
sub
push
ljmp
xchg
cmp
fisubrl
cmpsb
outsb
fs
dec
cmpsb
ror
fndisi(8087
test
pop
dec
xchg
shr
adc
mov
or
cld
or
test
and
adc
inc
mov
pop
add
xchg
cs
xchg
ds
lea
push
pop
cmpsl
jae
mov
inc
mov
insb
jge
daa
mov
mov
lock
xchg
mov
sbbb
sar
aad
inc
lahf
and
dec
add
stos
xor
mov
aad
mov
dec
in
mov
cmpb
xchg
fs
loope
xor
imul
jo
push
out
repz
outsl
bound
xchg
stc
hlt
xchg
and
mov
mov
movsl
jo
push
rcrl
pop
iret
xchg
push
sti
fildll
enter
inc
popa
fiaddl
add
bts
adc
jo
addr16
sbb
fmull
inc
jecxz
jl
jno
inc
test
push
subb
data16
mov
xchg
ficomps
adc
in
inc
xchg
add
xor
cmp
sbb
pop
dec
leave
mov
mov
test
idivb
scas
test
mov
add
push
jb
bound
xlat
mov
stos
adc
fs
insl
sub
xlat
and
xor
mov
or
ret
jb
pop
loop
arpl
sbb
das
jbe
xor
xchg
daa
push
insb
dec
pop
adc
xor
push
or
ficoms
dec
imul
cmpsl
data16
jl
add
add
into
jns
inc
lahf
mov
jnp
add
jo
aas
outsb
outsb
jl
insb
js
jnp
fmull
cmp
lret
dec
xor
pushw
clc
shll
movsl
mov
daa
rcll
jp
or
test
mov
cmp
and
push
je
out
rorl
mov
xchg
or
dec
cmp
rorb
or
mov
mov
jnp
repz
mov
test
jnp
scas
sbb
repnz
rclb
add
call
gs
xchg
mov
push
cltd
cmp
sbb
cmpb
sub
jle
aad
fadd
ss
iret
xchg
inc
in
mov
stos
cli
repnz
rolb
jne
leave
popa
jo
xchg
jg
dec
cmp
clc
adc
sub
inc
mov
jecxz
jle
iret
nop
jnp
sub
or
ljmp
test
ret
out
pop
insb
fdivrl
mov
pushf
lods
sbb
jmp
sbb
inc
mov
sbb
adc
popf
mov
push
xchg
sub
push
mov
je
mov
les
mov
mov
nop
push
xchg
push
popf
icebp
lret
scas
mov
gs
cmp
mov
jbe
jl
lods
test
and
fcomip
push
pop
and
push
add
dec
add
adc
xor
gs
fs
test
fs
and
inc
js
xchg
fiadds
or
sub
test
xchg
sbb
adcl
or
mov
jg
xor
cmp
rcll
inc
decb
cmp
call
cli
inc
xchg
or
les
mov
lcall
mov
ficompl
fwait
lea
jl
fisttpl
fwait
add
sub
jne
inc
fwait
insb
dec
and
cli
in
call
add
jmp
jl
ret
stos
lret
rcr
test
xor
jl
sub
ret
cmp
inc
aad
or
mov
inc
shr
mov
pop
or
nop
in
js
pop
jmp
push
rcll
ror
mull
test
mov
flds
mov
imul
ja
or
call
mov
out
xor
adc
sub
loop
cld
mov
dec
lods
fcoml
jns
inc
jnp
lahf
sbb
lret
pop
in
sbb
inc
and
daa
sub
lods
int3
in
jmp
xchg
sub
cmp
jo
popl
popf
sub
push
or
out
fcomip
aad
mov
push
rol
repz
mov
mov
mov
icebp
lret
mov
or
cmp
jb
pop
pop
cwtl
cltd
lock
mov
add
mov
jbe
push
frstor
inc
stc
std
cmpl
dec
mov
gs
sarb
lods
jge
mov
arpl
sub
mov
pusha
sub
mov
mov
mov
mov
and
call
jno
adc
dec
cwtl
cmp
lcall
jp
mov
ret
xlat
das
and
int
scas
int
sbb
iret
xor
int3
sub
lock
in
ss
sub
xor
add
inc
sarb
pop
sub
lcall
fcmovnbe
pushf
test
je
lcall
add
sbb
insb
xchg
mov
addr16
mov
mov
pop
idivl
mov
cwtl
popa
xchg
jb
mov
je
adc
rcll
xor
dec
nop
jg
stc
xor
push
pop
sbb
pop
inc
mov
mov
pop
mov
rclb
push
es
in
pop
mov
sub
ss
mov
mov
push
outsb
dec
mov
scas
or
push
call
sub
push
psubq
mov
sub
adc
stos
ss
jmp
rolb
inc
xor
leave
inc
or
dec
pushf
mov
inc
insb
cmpsl
or
cmp
cltd
arpl
jg
xchg
fs
leave
push
rorb
nop
xchg
sbb
fisttpll
pop
sbb
sbb
and
aas
cld
sbb
mov
adc
testb
mov
fcoms
mov
pop
xchg
pop
lret
ret
and
sub
test
push
in
adc
sub
in
jge
and
sbb
and
add
or
and
pusha
andb
insl
lock
sbb
mov
pop
inc
popa
sbb
jmp
aad
sbb
test
push
or
dec
push
jno
int
divl
add
popa
stos
in
ss
sbb
jg
adc
and
sbb
sbb
push
pop
fsub
loopne
mov
arpl
insb
loop
js
addr16
test
mov
ret
mov
pop
pop
hlt
jae
shrb
fdivl
test
nop
mov
addr16
je
or
nop
adc
rcrl
push
add
repnz
push
sub
fsubl
mov
or
pop
cwtl
cmpsl
dec
add
data16
aaa
dec
ljmp
mov
xor
sub
sbb
mov
repz
mov
call
mov
jle
mov
cmp
mov
mov
pop
adc
push
jecxz
inc
mov
sbb
fsubrs
jne
repnz
and
xlat
arpl
or
enter
stos
aaa
int3
push
fwait
mov
or
push
sbb
push
mov
pop
cmp
hlt
inc
jb
push
ss
rcr
fwait
lods
push
sub
call
dec
inc
rcrl
clc
in
dec
pop
and
jecxz
cld
cld
insb
movsl
pop
mov
inc
sub
in
push
sub
mov
jecxz
inc
in
cmp
int
pop
xor
sub
mov
ljmp
xchg
dec
lret
sub
cmp
jbe
les
or
or
mov
jo
add
xchg
call
xchg
scas
add
andl
frstor
fimuls
xchg
mov
ljmp
mov
add
jg
pop
int
ret
lahf
mov
arpl
mov
push
sbb
push
loop
mov
mov
imul
lcall
int3
adc
test
inc
mov
fcmovne
sbb
mov
rcrl
in
push
int
ret
add
int
jl
icebp
jb
mov
daa
lahf
inc
and
call
xchg
cmp
je
cld
sbb
pop
xchg
aam
dec
jp
cmp
pop
cmp
mov
push
fisttps
push
aad
pop
pop
add
jbe
sub
xchg
push
int3
xchg
sub
xor
ja
daa
testl
push
and
cmp
mov
addr16
mov
cmp
cmc
sub
push
punpckhdq
add
add
andb
test
xchg
test
stos
test
sbbb
jb
in
push
and
in
jmp
in
sbb
test
lods
cmp
adc
cmp
mov
cmp
jo
sahf
outsb
pop
sbb
cmpb
xchg
add
dec
inc
hlt
jae
cmpsl
int
sub
enter
push
mov
mov
int3
incb
popa
cmp
hlt
ret
xchg
js
xor
outsl
in
mov
pop
test
test
aad
lcall
enter
ret
pushf
push
adc
sbb
and
notb
out
add
dec
cmc
push
loopne
jg
jns
mov
dec
test
add
xor
sahf
sub
mov
shll
hlt
cmpsb
leave
das
out
sub
and
ds
and
das
addr16
mov
push
lock
xchg
cmp
xor
mov
aas
inc
les
sahf
push
sub
inc
repz
jae
mov
mov
test
into
arpl
movlps
ret
xchg
mov
stos
sahf
or
pop
and
mov
les
push
dec
gs
fwait
sub
inc
xor
mov
jae
ja
inc
dec
inc
psubusb
loopne
jg
mov
fimull
test
add
stos
das
mov
jo
pop
loope
cmc
mov
lret
sub
arpl
or
jle
hlt
jb
pop
in
cld
mov
sub
push
jecxz
jmp
repz
jge
sbb
mov
fwait
and
nop
push
ja
cmpsl
xchg
mov
ds
push
jecxz
adc
xchg
call
and
sub
cs
iret
daa
sahf
out
nop
pop
sbb
ret
or
aam
shr
mov
mov
jmp
lock
out
mov
cmc
pop
outsl
sbb
mov
test
cltd
dec
pop
daa
stc
xchg
mov
add
add
xchg
push
jmp
sub
pop
dec
aam
add
scas
mov
or
into
or
and
out
adc
push
sub
lea
test
jns
inc
mov
jecxz
cmpb
or
ds
movsb
out
shr
test
cs
xchg
icebp
jge
outsl
sbb
fcomp
imul
mov
andb
lods
mov
lods
sbb
jns
test
push
cwtl
icebp
cmpb
jle
pusha
push
jns
shll
stc
loope
fisttpl
pop
mov
rorb
or
xorb
push
js
out
fiadds
sbb
mov
out
cltd
ljmp
inc
push
mov
dec
dec
cmp
mov
xorl
cli
xchg
lret
dec
jns
jb
pop
push
jbe
add
jle
sbb
mov
jb
pop
mov
push
loopne
mov
inc
sbb
and
insb
ja
mov
ficoms
cmp
ss
jp
and
les
mov
ror
imul
adc
and
push
cmp
and
and
gs
pop
mov
ss
aam
insb
out
dec
cwtl
mov
and
adc
sti
leave
jmp
sbb
ss
and
sub
adc
jo
push
sbb
mov
out
je
nop
inc
lret
pop
push
pushf
push
test
cmpsl
and
enter
add
push
or
js
ss
mov
xor
jge
stos
add
xor
push
mov
xchg
mov
lea
or
sbb
fwait
stos
cwtl
cmp
mov
int
jp
mov
mov
mov
add
push
cltd
xchg
shl
xchg
lods
lea
sti
data16
dec
nop
rorl
aad
mov
jo
jb
in
imul
mov
xchg
or
in
mov
cld
fistps
xchg
inc
out
insl
fnstcw
add
mov
jns
push
repnz
sub
xchg
das
or
std
cmpsb
adc
xchg
pop
int
adc
pop
es
mov
shll
popf
out
jbe
add
or
add
pop
jl
lods
outsl
scas
mull
cmp
cwtl
xor
out
jns
insb
sbb
insl
mov
mov
pushf
xchg
lret
test
adc
cmp
sub
or
or
push
adc
mov
fildll
or
scas
sbb
sbb
out
fisubl
jle
sbb
movsb
mov
push
movsb
mov
aas
xchg
inc
cmp
adc
repnz
movsb
xor
cmp
push
mov
push
arpl
and
cmp
lock
jb
insl
sahf
lods
sbb
icebp
testl
movsb
sbb
adc
sub
sub
repnz
adc
xchg
and
push
or
add
sub
mov
mov
iret
gs
dec
rorl
repz
add
inc
fimull
filds
pop
mov
fldz
aaa
sub
add
outsl
sbb
xor
xchg
inc
add
pop
inc
aaa
scas
dec
hlt
cmp
loop
testb
sbb
or
inc
sbb
cltd
popa
aas
xchg
cwtl
iret
pop
cld
testl
push
sbb
mov
cld
into
test
imul
xor
hlt
xor
cmp
xchg
inc
cwtl
iret
imul
insl
push
push
fistpl
xchg
stc
es
jecxz
enter
hlt
in
fildll
dec
add
roll
repnz
roll
fistps
es
daa
or
ljmp
inc
aad
out
notb
mov
jnp
ret
ret
popl
enter
ret
add
mov
fcoml
divl
insb
push
mov
inc
jbe
mov
cmp
pop
mov
adcl
jl
push
add
js
add
sub
xchg
aaa
test
pusha
or
and
adc
sub
add
dec
int
mov
push
sahf
arpl
scas
cld
sub
out
shll
jnp
pop
pop
adc
xor
ror
test
mov
mov
dec
dec
xchg
aad
mov
call
fs
sbb
jnp
dec
add
jnp
mov
lcall
cltd
repnz
hlt
add
add
cmp
sar
pop
push
insl
mov
sbb
lea
cmpsl
sub
mov
repnz
test
mov
cmc
sbb
cmpl
stc
fadd
jecxz
xchg
rolb
sbb
mov
add
or
into
mov
mov
mov
add
pop
sbbb
out
jle
out
jl
stc
fimull
push
adc
pop
fildll
jo
xchg
sub
mov
in
sbb
pop
xchg
addb
xchg
mov
mov
pop
jecxz
pop
cmpsb
inc
xor
fists
jb
popf
pusha
xchg
and
loopw
lods
cltd
mov
jnp
hlt
mov
xchg
stc
inc
lock
cwtl
scas
cmp
mov
fs
inc
xor
fmul
imul
mov
mov
adc
xor
in
pop
fmull
lret
ss
cmc
pop
loopne
ret
sbb
js
loopne
or
push
in
sti
xchg
es
adc
or
mov
pop
rcrb
lret
mov
push
dec
cwtl
mov
mov
idiv
mov
loop
iret
xchg
cs
loop
sbbb
xchg
rclb
cmp
and
and
addl
inc
test
jne
dec
rdmsr
push
cmp
cmp
adc
cmp
shl
into
lea
xlat
insl
add
push
sbb
sbb
scas
xchg
call
fnstenv
bound
push
pop
lods
std
mov
loop
pop
daa
jnp
pop
sti
mov
xor
and
mov
xchg
movsl
jo
cld
stos
out
dec
push
in
or
repz
xchg
call
xchg
ss
call
sbb
mov
add
xchg
add
mov
imul
and
sbb
in
movsl
and
pusha
outsb
or
je
test
sub
ud0
ds
fisttps
pop
push
mov
sti
jp
fcomps
imul
mov
xchg
push
or
mov
cmp
ds
add
jns
adc
add
insb
sbb
inc
inc
xchg
xchg
pop
shll
test
or
fldt
sbb
mov
movsl
push
or
pop
xchg
cmp
sbb
in
mov
leave
add
fmull
les
scas
mov
les
pop
push
pop
or
mov
mov
xchg
jecxz
cmp
jg
rorl
ljmp
sbb
xor
add
test
adc
stc
in
out
cwtl
mov
adcb
push
cltd
push
or
dec
cmp
adc
lcall
pop
dec
xor
xor
inc
out
inc
ds
adc
lods
push
hlt
push
or
and
shll
mov
sub
push
push
lea
push
push
dec
adc
add
sti
and
pop
xor
testl
inc
jp
sbb
ss
inc
add
fsubrs
adc
cmp
pop
mov
ss
fmuls
or
fdivrs
cmp
ljmp
xchg
add
pushf
sbb
or
inc
cmp
cmp
fistps
pop
xor
aad
fcoms
push
cmp
lret
ljmp
dec
xor
sub
fnstcw
sub
sahf
mov
fiaddl
xor
inc
cltd
mov
inc
push
xchg
lret
and
pop
jmp
adc
gs
adc
fsin
mov
mov
lock
adc
pop
mov
mov
pop
xlat
mov
in
ljmp
lods
dec
inc
mov
insb
add
mov
inc
adc
aas
mov
add
repz
repnz
lahf
mov
mov
mov
inc
pop
ss
or
mov
stos
fistl
in
notb
ljmp
notl
call
push
xchg
ja
mov
repz
into
sbb
icebp
dec
xor
pushf
cli
or
into
outsl
pop
ljmp
out
or
lcall
mov
cmp
push
jns
gs
adc
scas
ret
out
add
fistpl
es
ljmp
pop
loop
xor
in
xor
dec
adc
fistpl
jae
out
fwait
xchg
in
and
out
gs
inc
std
adcb
xchg
in
repnz
movsl
xor
mov
jne
mov
pop
mov
mov
outsb
push
push
popa
dec
pop
sbb
cmp
ljmp
int
pop
mov
push
jp
sub
jecxz
xor
push
in
mov
decl
icebp
cmpsb
dec
dec
leave
repnz
aam
fadds
or
int3
jp
int3
les
bound
rcll
fs
int
adc
outsb
scas
dec
fidivrl
jmp
cmp
or
cmp
lock
imul
jmp
jg
push
cmp
test
inc
jnp
cltd
outsl
int3
sbb
das
shrl
or
shl
sbb
call
lea
stos
inc
jnp
cmp
mov
sbb
sbb
adc
sub
dec
and
mov
sub
sbb
popf
jns
mov
cmp
cs
xchg
xchg
lods
es
jne
sbb
mov
mov
sub
xor
cmp
repz
loop
rorl
scas
sub
nop
mov
xchg
popf
cwtl
notb
cmp
cli
jecxz
pop
xor
cmp
mov
xchg
sub
clc
cmp
mov
cld
bound
nop
inc
add
std
pop
in
mov
lds
and
mov
mul
push
ljmp
mov
cmpsb
outsl
inc
shll
mov
jp
or
mov
mov
out
cmp
outsl
sub
inc
push
fucom
test
inc
scas
sbb
nop
fdivrs
fimuls
sbb
mov
xor
fcoms
gs
xor
ds
fs
xchg
es
xchg
mov
addb
push
lahf
pop
adc
add
adc
sub
push
fidivs
pop
pushf
imul
shrb
in
stos
jae
pusha
jp
shlb
or
gs
insb
mov
arpl
ljmp
sbb
into
cmp
pop
lods
movsb
dec
mov
in
addb
imul
mov
cmp
fisubs
dec
data16
fcomps
adc
push
inc
int3
fnstsw
ja
je
jae
xchg
das
push
sub
shlb
mov
je
gs
sub
icebp
xchg
mov
stos
mov
push
lds
cwtl
mov
jno
mov
lds
and
aaa
or
sbb
jg
push
loopne
cmpsl
pusha
out
dec
add
and
cwtl
mov
cmc
mov
xchg
jno
into
mov
dec
icebp
pop
cmp
ret
repnz
test
lock
in
adc
push
push
lea
sub
stos
lods
in
cmpsb
mov
inc
lahf
sub
jbe
data16
stos
cmpsb
sub
mov
aas
nop
out
adcb
movsl
cli
inc
scas
pop
inc
repz
and
dec
cwtl
mov
lret
ja
hlt
outsl
push
decb
inc
pop
bound
out
mov
pop
push
lock
adc
lahf
push
lcall
jno
test
sbbl
jne
dec
enter
pop
xchg
and
mov
add
push
fdivrl
cmp
lcall
dec
push
fistps
cwtl
push
push
jg
or
jno
sub
mov
and
movsb
cmc
ds
popa
into
and
jnp
outsb
inc
sub
fs
aam
xchg
jb
cmp
add
mov
shrl
xchg
cmp
loop
and
cli
cmp
hlt
ret
adc
jl
mov
pop
ret
jne
cmp
fwait
rclb
test
dec
stos
push
in
dec
cmp
cmp
xor
stos
shlb
aam
aas
outsl
cmp
mov
push
dec
cmp
xor
mov
popa
jp
ds
mov
mov
jne
loopne
xchg
out
notl
inc
mov
call
shlb
ja
xor
cltd
dec
adc
xlat
cmp
or
cmp
push
adc
insb
addr16
sbb
in
cmp
push
mov
xor
push
jmp
xsaves
repz
pop
sbb
iret
loope
xor
int3
sub
inc
int
leave
sbb
ljmp
xchg
pop
leave
out
imull
or
flds
push
stos
and
and
cmp
lcall
mov
sbb
cld
in
pop
sbb
jb
xor
adc
aas
mov
call
aas
insl
xor
xor
fldcw
adc
fmuls
ret
push
or
mov
pop
dec
bound
jo
lods
sbb
lds
mov
jp
or
ljmp
rcrb
test
shlb
es
cwtl
add
mov
fisubrl
mov
mov
mov
aas
andb
dec
pop
mov
enter
ret
and
imul
sub
daa
cwtl
mov
adc
and
lods
aam
and
push
mov
pushl
lret
jge
ds
cmp
mov
or
xchg
dec
repz
in
int3
arpl
cmc
aas
retw
jl
repnz
aad
mov
push
ficomps
or
pop
inc
and
scas
insb
xchg
mov
outsl
pushf
jne
jle
mov
or
mov
pop
je
push
xorb
jbe
movsb
sbb
adc
popf
adc
frstor
xchg
dec
mov
mov
and
push
jg
cli
sub
pop
adc
mov
fwait
sub
enter
and
mov
add
ja
jo
add
out
xor
push
sbb
xor
push
cmovns
sub
adc
fsts
enter
mov
add
mov
loope
fs
or
sarb
mov
xchg
lods
sub
pop
xchg
xchg
xor
dec
incb
push
mov
jl
add
sub
lea
jnp
push
je
jbe
popf
mov
data16
imul
push
inc
lock
inc
pop
lahf
mov
out
aad
mov
xchg
adc
pusha
push
orb
stos
adc
je
mov
inc
push
addr16
aad
xor
cmp
inc
cmp
pop
push
out
mov
sahf
rclb
cmp
jmp
sub
enter
testl
and
gs
adc
cmp
fwait
aad
inc
sbb
cmp
repz
push
dec
mov
shl
lea
mov
mov
mov
cs
push
popa
or
jo
out
or
dec
pusha
or
and
sahf
xchg
stos
sub
sti
push
fstpl
xor
dec
je
mov
in
cmp
push
push
inc
push
ret
jne
pop
fs
mov
lock
pop
mov
inc
xor
jbe
cmp
ret
or
inc
jge
call
mov
das
jg
out
or
mov
aaa
es
roll
shll
fwait
mov
mov
orb
rorl
adc
lods
inc
xor
pop
cwtl
outsl
sar
mov
mov
je
xchg
and
pop
add
push
xchg
std
movsb
outsl
orb
fwait
xchg
jmp
xor
sub
xor
nop
and
cmp
xchg
cvttps2pi
push
fsubs
sub
xor
lahf
jns
cmpsl
cli
push
push
cs
and
add
sub
and
packsswb
shrl
mov
push
dec
xor
mov
pop
or
in
pop
cmp
aad
xor
mov
in
jge
push
add
xchg
clc
aas
pop
add
fs
shll
xor
push
mov
in
out
sbb
ret
aas
mov
fcoml
xchg
mov
callw
jbe
add
in
out
imul
mov
mov
lods
sbb
fistpl
push
lock
mov
fdivp
test
daa
add
lret
dec
sbb
stos
popa
sbb
bound
pop
jne
cmp
jb
int3
or
xor
insl
or
lock
insb
ret
cmp
mov
cmp
test
jl
fcmovnu
jbe
sbb
repz
cmc
sbb
sbb
lret
jb
dec
cmpsl
xor
adc
cmp
cmp
popa
dec
call
mov
pop
lret
outsb
mov
or
inc
xchg
in
in
xlat
mov
scas
push
stos
insl
pop
mov
mov
clc
sti
xchg
and
and
fwait
or
and
call
push
push
mov
notb
lea
divb
idivl
scas
dec
push
mov
lea
sub
or
mov
xchg
lret
movsl
insb
lock
js
mov
mov
push
xchg
cld
into
in
push
dec
hlt
pushf
mov
jmp
sbb
in
cli
xor
shrb
nop
or
mov
sti
out
lret
and
add
inc
rclb
cld
lods
movsb
inc
fstps
sub
pop
in
pop
movsl
pop
mov
test
inc
or
mov
andl
loop
xchg
dec
or
add
inc
dec
pusha
add
dec
mov
push
test
sub
or
xor
xor
jp
adc
inc
insl
int3
inc
insl
shrl
mov
and
mov
lcall
dec
lret
int3
and
xchg
push
sbb
ret
sar
sbb
adc
lods
pop
jno
sub
mov
stos
pop
lahf
in
jle
mov
pop
push
sbb
xor
adc
je
cmp
or
dec
sahf
icebp
lcall
lret
push
insl
push
xchg
pusha
enter
aaa
mov
xor
js
mov
rorb
dec
xchg
aam
mov
pop
dec
jle
pop
test
lods
movsb
ret
lcall
sbb
adc
leave
out
cmc
enter
sub
imul
adc
movsl
shl
inc
addb
mov
add
ret
xchg
out
sbb
dec
and
leave
movsl
inc
inc
sub
out
or
push
out
iret
lret
leave
xlat
stos
and
xchg
mov
lcall
add
jle
ss
in
int3
bsr
dec
xorb
and
push
inc
scas
loopne
push
fdivrs
outsb
sbb
out
loop
mov
mov
daa
sub
sbb
call
adc
push
dec
push
push
enter
sub
repnz
iret
dec
aam
inc
rcrl
cmp
mov
lods
imull
xchg
arpl
mov
and
sti
pop
mov
or
or
xchg
dec
push
push
outsl
mov
lods
gs
push
shl
stos
popf
pop
bound
inc
mov
cmp
dec
or
idivl
out
xor
sbb
es
movsl
dec
add
inc
pop
sti
cwtl
push
jns
fs
jae
xor
sbb
dec
xor
xchg
jl
cmpsl
pop
pusha
into
nop
fistpl
pop
and
mov
jnp
stos
and
xchg
jae
fcom
mov
xchg
loop
mov
int3
dec
adc
js
or
pop
jo
or
flds
imul
lret
addr16
lret
pop
mov
push
adc
ljmp
jg
xchg
mov
cli
pop
ja
jl
das
dec
add
mov
fucom
or
iret
jne
dec
and
scas
cld
js
outsb
adc
aam
xchg
inc
jo
lods
push
data16
lret
inc
bnd
shll
push
pop
test
fistpl
out
mov
mov
lret
movb
adc
shl
addl
loope
fbld
adc
jo
push
mov
lahf
out
mov
inc
subl
lods
push
pop
sbb
mov
repz
fsts
inc
xor
ds
pop
mov
cmp
addr16
sub
adc
jp
jne
int3
jg
lcall
mov
inc
ds
leave
popf
stos
mov
sub
mov
push
loop
or
pop
adc
inc
push
cs
fwait
imul
jge
xchg
xor
cmp
push
cmpsl
cmp
mov
imul
test
dec
push
iret
inc
mov
or
sbb
fsubrs
ds
or
push
call
mov
cmpsl
or
cwtl
test
mov
sarl
daa
xor
jnp
push
in
dec
add
pop
push
lods
lds
andb
lret
push
lea
loopne
cmpsl
lret
sub
rcll
cmp
jge
test
jp
inc
cmp
stos
mov
and
pop
pop
js
push
popa
cli
mov
sbbb
subb
shrl
sbb
sbb
push
xor
andl
mov
push
cwtl
mov
ljmp
adc
out
add
mov
or
mov
jge
out
scas
cmp
jge
adcl
push
outsl
outsb
mov
jge
scas
push
push
cmp
inc
xchg
xor
negl
push
jno
cwtl
lret
scas
jbe,pn
or
addr16
push
mov
rorb
sub
cmpsb
scas
fmull
push
dec
scas
inc
push
push
test
leave
inc
jo
jecxz
mov
clc
pop
popf
xchg
lock
stc
je
mov
int
pusha
popa
push
lret
adc
mov
adc
cmp
dec
mov
add
insb
push
mov
cmp
out
jl
gs
mov
outsb
push
stos
jl
data16
sub
in
cltd
pusha
test
std
aam
fs
and
and
loope
mov
mov
mov
cmpsb
xor
call
xchg
std
mov
add
test
sahf
jbe
pop
inc
mov
popl
adc
jp
and
daa
inc
sub
cmc
test
or
sub
xchg
mov
aad
pshufw
xor
ret
mov
mov
mov
mov
inc
or
sub
lcall
popf
dec
mov
mov
cmpsb
cltd
or
in
divl
iret
lods
lret
inc
stos
sbb
jns
dec
mov
in
mov
add
xchg
cli
inc
imul
insb
std
pop
insb
inc
xchg
mov
sbb
subb
push
imul
fstpt
jbe
cwtl
out
lahf
xor
icebp
cld
test
dec
jae
gs
pusha
in
mov
lret
cmp
aaa
std
test
xorl
mov
adc
xor
jo
cmp
cmp
pop
das
mov
jge
mov
movsl
xchg
aas
rcll
xor
std
or
rolb
stos
repz
add
cmp
add
inc
xchg
lahf
cmp
bound
cltd
add
test
pop
rcll
out
xchg
adc
adcl
pop
inc
std
jecxz
jbe
sbb
sub
in
xchg
mov
jns
sarl
sub
sub
cmc
dec
dec
repnz
jl
out
xlat
pop
fstps
imul
adc
sbb
popa
shll
push
cmpsb
lcall
imul
inc
xchg
iret
clc
sarb
int3
dec
cld
mov
mov
into
mov
dec
sti
sbb
clc
xchg
shlb
ret
mov
bound
outsb
in
push
hlt
pop
dec
out
rcll
sbb
push
fsts
popa
add
pop
and
push
mov
pop
push
mov
cmp
enter
xchg
clc
fldl
int
mov
push
xchg
add
push
mov
pop
cmp
xchg
test
sbb
data16
push
in
mov
inc
hlt
mov
mov
lea
icebp
pusha
ja
push
adc
popa
sbb
xchg
xchg
xchg
scas
in
in
jb
dec
lods
lods
lds
js
pop
aam
lods
xchg
loopne
fdivs
and
mov
cld
lahf
xchg
nop
adc
cmp
sti
push
insb
pop
push
push
xor
push
mov
repz
and
pop
cmp
cmp
inc
les
icebp
ror
push
xchg
xchg
dec
and
fcoml
les
pop
xchg
mov
ljmp
addl
fdiv
stos
loope
flds
xchg
mov
add
xor
mov
or
dec
mull
iret
jmp
orl
pop
shlb
push
mov
add
adc
cmpsb
ja
mov
mov
in
and
or
and
adcl
xchg
inc
jb
cmpsl
aam
dec
aad
xor
insl
mov
int3
pop
inc
fisubs
ror
push
sbbb
arpl
sub
mov
ss
push
cmpsb
xchg
lock
mov
push
mov
cltd
pop
pop
pushf
mov
lea
mov
jb
xor
rolb
jns
addr16
and
rorl
push
ss
xchg
pop
stos
adc
mov
xchg
jmp
lahf
push
cmpb
stc
hlt
xchg
dec
cli
push
cmpsb
ds
jmp
out
sub
lods
adc
out
in
shl
lock
out
fisubl
adc
pusha
aas
xor
inc
xchg
xchg
fs
jo
mov
mov
jb
incb
push
add
loop
push
outsb
ljmp
push
add
pop
pop
xchg
cwtl
stc
jo
dec
inc
fisttpl
imul
cmpsl
iret
in
sahf
xchg
add
sub
in
aaa
sarb
in
xor
pop
sbb
cmpsb
shlb
mov
popf
loopne
popa
jae
sub
dec
lds
sarl
xor
decl
lock
mov
arpl
dec
loope
mov
icebp
cmp
mov
mov
ret
inc
push
lock
lock
mov
adc
and
jecxz
aaa
xor
push
bnd
pop
ficoms
clc
pop
cmp
or
mov
sbb
sub
pop
sti
repnz
cmp
inc
mov
xchg
mov
imul
cmp
mov
jge
ljmp
movsl
es
push
adc
mov
call
mov
inc
or
mov
sbbl
add
pcmpeqb
xorl
hlt
call
stos
into
insb
cmpsb
cmp
inc
push
rclb
inc
adc
rcl
aaa
dec
mov
int3
in
jmp
mov
aas
xchg
ja
pop
jne
fdiv
xor
push
push
sub
sub
xorb
inc
cmpsl
fistps
mov
pop
push
gs
jo
shlb
cli
ret
lret
jmp
inc
in
aaa
adc
mov
sub
cmp
mov
out
in
pop
aad
cmp
mov
arpl
mov
popf
and
dec
ds
push
pop
add
nop
cmp
xor
inc
lock
stc
es
int3
xor
shl
enter
stos
stos
lret
inc
jecxz
mov
loope
stos
test
push
xchg
inc
test
jecxz
cmp
loop
pop
test
loop
lret
sbb
repz
test
mov
cmpsb
jno
mov
xchg
test
push
inc
std
arpl
inc
sub
fiaddl
pop
rclb
outsl
xor
mov
jnp
adc
and
das
lcall
jl
mov
pop
pop
shrb
fnstsw
inc
je
cmpsl
add
sub
sbb
int
cmp
mov
jmp
addr16
pop
out
stos
test
xchg
lret
mov
jg
fwait
cmc
je
sub
les
rclb
sahf
mov
divl
inc
xchg
adc
out
jmp
cs
popl
xchg
xchg
xchg
icebp
int3
inc
adcb
and
int3
das
sub
mov
data16
sbb
push
rclb
fldenv
mov
pop
mov
sub
sbb
jb
cmp
adc
or
ja
inc
inc
jge
sahf
inc
mov
lea
in
pop
std
jecxz
clc
adc
push
ficompl
jae
xor
andl
cli
ds
loopne
pop
add
or
lret
cmp
scas
sbb
das
movsb
inc
inc
push
bound
aad
jge
jecxz
jge
inc
enter
sbb
xor
and
mov
push
mov
xchg
insl
sbb
sbb
inc
int3
mov
push
leave
xchg
mov
mov
popa
dec
and
and
pop
hlt
out
enter
adcb
push
jo
lahf
cmpsb
lahf
mov
fidivl
call
mov
sub
or
push
rorb
clc
sub
test
push
dec
pop
stos
sarl
cmp
adc
xlat
pushf
add
movsb
mov
jno
das
mov
xchg
jle
out
mov
vpmacsdd
mov
out
scas
push
pop
jl
aas
add
cmp
sub
push
mov
and
ljmp
cmp
ficoml
mov
in
push
or
call
jo
jg
lcall
sub
ds
dec
add
push
dec
dec
mov
adcl
cmp
push
mov
mov
repz
enter
push
outsb
orl
push
and
dec
pop
and
lods
lret
mov
xchg
cltd
stc
clc
or
pop
mov
pushf
mov
bound
jo
xchg
outsb
stc
adc
or
or
shlb
les
cltd
pop
out
jg
lods
cmc
push
pop
adc
inc
jmp
test
sahf
xchg
mov
sbbl
pop
pushf
sti
cli
and
cltd
scas
in
and
add
nopl
adcb
rol
mov
outsl
and
mov
mov
mov
cmp
out
push
loope
push
into
pop
jmp
daa
mov
nop
adcb
fldl
mov
pushf
add
sbb
pop
nop
fcom
xchg
xchg
jle
imul
add
mov
hlt
and
adc
in
pusha
cltd
shll
and
xchg
pop
inc
or
cltd
fidivrs
jnp,pt
out
fcomi
mov
out
sbb
sarb
jne
cld
mov
adc
inc
sar
loope
pop
ret
cmp
sub
imul
push
xchg
jno
lock
jp
pop
loopne
lcall
fisubs
xor
dec
mov
cmp
in
inc
mov
sbb
fistps
jae
lds
mov
cmpsb
dec
pop
lock
mov
or
popl
fimull
sarb
movsb
pop
jge
fisubl
sbb
push
fsubrs
mov
into
push
jnp
jge
fwait
pusha
lods
out
icebp
insb
mov
cmc
mov
xor
clc
loopne
and
scas
push
mov
jnp
aas
sub
mov
sub
lods
push
xchg
into
cmpl
icebp
fimull
aad
ds
les
jg
add
cmpsb
stc
push
jns
dec
dec
mov
pusha
mov
sbb
sbb
test
cld
adc
mov
sbb
sahf
les
pop
lret
dec
aaa
xor
lock
into
dec
movsl
or
xor
mov
lock
add
or
je
mov
xor
ds
push
jns
stos
icebp
clc
pop
and
lock
pop
xchg
xchg
nop
loope
mov
dec
test
mov
call
mov
sbb
pop
mov
xchg
daa
and
gs
das
or
add
mov
sub
add
xorl
shrl
ret
mov
adc
enter
add
in
lahf
popa
push
mov
lods
add
int3
xor
cwtl
loope
push
loopne
in
jp
js
sub
in
out
and
in
rorl
push
add
add
fists
inc
push
and
vpaddb
fwait
ss
clc
fs
test
cli
hlt
jae
aam
fwait
data16
mov
add
mov
mov
lods
mov
jecxz
mov
sti
inc
mov
sbb
sub
ljmp
mov
leave
xor
xor
std
cmp
lock
ljmp
mov
cwtl
push
xor
mov
mov
or
aas
sbb
add
sbb
cmpsb
pop
dec
cld
insb
xchg
sbb
dec
sub
cmp
adc
pop
stos
and
lcall
rolb
frstor
jecxz
iret
icebp
adc
xchg
mov
push
push
lahf
mov
xor
dec
icebp
or
popa
enter
jo
mov
out
pop
sub
add
gs
adc
jae
outsb
ret
lret
sbb
jne
add
jmp
xchg
mov
mov
cmovge
mov
pop
xchg
jge
shlb
mov
aas
js
dec
loop
fidivrl
sbb
pop
sub
mov
ljmp
adc
shr
add
jge
dec
dec
sbb
inc
inc
movsb
es
xor
enter
push
in
rorb
cmp
sbb
pop
xchg
je
loope
mov
mov
in
push
pop
scas
add
adc
gs
cwtl
ret
add
add
fistpll
or
imul
cmp
loope
addr16
jo
push
das
push
test
loopne
sub
dec
sahf
std
imul
aaa
andb
mov
lods
aaa
out
mov
mov
dec
in
call
cmp
inc
fstpt
sti
inc
xor
sbb
ds
icebp
cmp
inc
aas
jnp
test
mov
cmp
jmp
mov
loop
and
mov
cmp
mov
mov
jecxz
pop
lods
scas
jo
mov
cmc
sub
inc
data16
lcall
gs
gs
jb
call
mov
jg
mov
movsb
lea
pushf
ret
dec
mov
jae
mov
iret
jae
xor
cmp
xor
cmpsl
xchg
sub
inc
stos
movsl
push
pop
add
jg
xor
jo
pop
sbb
out
push
shrb
jne
pop
jbe
dec
lds
lahf
aas
stos
iret
mov
xchg
lcall
shlb
insl
neg
xchg
addr16
sbb
cmp
ljmp
mov
ficomps
gs
insl
xor
loop
nop
arpl
es
in
rcrb
dec
cmp
jle
xor
push
or
mov
js
dec
pusha
push
add
jg
addr16
add
pop
ja
div
sub
mov
pop
cmp
leave
scas
popf
xchg
pushf
popf
sub
push
ss
imul
jmp
jne
testl
cli
int3
xor
mov
rorl
jecxz
loopne
daa
push
xor
jg
inc
int
insl
mov
fucom
lods
fldt
shl
enter
data16
xchg
ds
inc
mov
lods
leave
xor
or
xor
out
push
or
das
push
arpl
xor
imul
popf
jp
fnstcw
out
call
push
push
cwtl
xchg
jle
mov
mov
jl
shll
mov
push
inc
xchg
and
test
mov
rcll
iret
adc
std
loopne
jle
mov
lcall
push
addr16
mov
jmp
loopne
jo
ljmp
int
xchg
add
add
mov
enter
xchg
cltd
xor
inc
arpl
es
jmp
fistpl
stos
test
inc
in
and
inc
inc
fwait
les
mov
add
repnz
sbb
and
xor
imul
imul
inc
mov
inc
scas
adc
inc
xor
imul
lcall
xchg
das
loop
stos
stos
mov
scas
dec
push
decl
das
add
cs
out
jmp
dec
xor
xor
js
insb
jmp
mov
add
into
or
out
sbb
push
out
lds
loope
orb
mov
xor
jns
rorb
cld
inc
or
dec
push
pop
test
xor
or
inc
push
dec
fsubl
je
xor
pop
pop
adc
lret
push
sub
xchg
js
dec
fildl
mov
popa
and
sbb
dec
or
mov
mov
mov
fcoms
cwtl
jno
gs
aad
fildl
les
inc
ds
and
sahf
mov
adc
push
jbe
push
and
int3
popf
insb
mov
cmpsb
pop
add
ret
fwait
inc
xchg
and
pop
imul
lahf
or
decl
pop
cmp
arpl
mov
cld
cs
shrl
outsl
or
stc
imull
popf
mov
loop
aad
cmpsb
push
mov
adc
iret
testl
stc
bound
push
add
xchg
pop
sbb
jp
lcall
iret
lret
push
cmc
add
dec
and
xchg
cmpl
ljmp
mov
push
dec
cmp
sahf
out
pusha
xchg
out
fildl
aam
sub
test
outsl
mov
pop
jmp
out
andl
testl
pop
dec
addr16
int3
jno
push
insl
mov
nop
adc
and
in
rcrl
loope
rorb
dec
in
push
pop
dec
gs
jg
sbb
push
and
pop
push
subb
jp
add
das
xchg
addb
jne
iret
ret
dec
mov
and
and
mov
movsb
mov
aad
shlb
insl
pop
adc
xor
pop
insb
mov
mov
push
mov
dec
mov
dec
in
in
inc
mov
clc
stos
jae
mov
lret
xchg
jg
mov
mov
in
mov
mov
shll
jbe
mov
xchg
fistpll
daa
test
outsb
les
mov
push
out
jp
jecxz
add
pop
andl
xchg
inc
push
ja
dec
ljmp
inc
fidivs
cltd
cli
imul
pusha
sub
scas
sti
xor
into
cmp
daa
pop
into
xchg
mov
pop
faddl
mov
and
or
imull
fsubl
and
fdivp
mov
bnd
push
outsl
jl
cwtl
jmp
clc
pop
ds
mov
cmp
or
add
fimull
xchg
divl
stos
sarl
jne
adc
insb
fs
dec
push
xor
stc
stos
nop
and
jmp
lcall
jb
outsb
rorl
jp
push
cmc
es
sbb
push
mov
xor
mov
nop
xchg
pop
jecxz
movsl
push
idivl
push
fistpl
sbb
enter
adc
add
in
lods
adc
arpl
xor
insb
push
movsb
or
sub
pop
pop
push
jbe
cli
dec
xor
subb
jle
mov
mov
rorl
pop
xor
pop
inc
cmp
adc
inc
xchg
jl
lea
sti
mov
outsl
inc
test
pop
and
clc
inc
aaa
add
jp
xor
mov
cli
dec
pop
sbb
test
pop
sub
mov
in
ds
mov
mov
cmp
mov
or
ss
push
and
mov
inc
fmuls
push
inc
repz
fsts
sub
or
cmpsl
mov
add
pop
add
mov
adc
int
movsb
ret
out
cmpsl
insl
test
sub
mov
pop
mov
push
movsl
mov
rclb
and
aad
fsubrl
les
rcll
mov
mov
test
cmp
inc
sbb
jb
dec
roll
xchg
repz
test
mov
mov
push
lods
cs
cltd
fsubrp
ret
hlt
iret
cmp
adcl
andl
mov
in
out
hlt
pushf
cltd
test
mov
cld
mov
dec
sub
jne
sub
es
lock
jmp
xchg
mov
pop
into
mov
pop
aaa
lea
and
outsl
mov
adc
pop
mov
add
xchg
sbb
mov
imul
pop
addr16
jecxz
test
movsl
or
mov
xor
mov
mov
int
adc
fxtract
mov
jnp
pushl
pop
imul
mov
sub
pop
fs
gs
sub
mov
dec
pop
adc
and
xchg
out
shrl
sbb
test
or
ja
cmp
shl
iret
mov
imul
sbbb
ds
xchg
test
imul
repnz
lahf
sub
aas
xor
stos
dec
xor
mov
and
test
inc
lock
jp
pushf
push
xchg
xorl
aaa
mov
mov
sbb
rcll
cltd
cmp
mov
mov
shlb
and
movsl
inc
subl
mov
shll
cmpsl
scas
or
cmpl
mov
cmp
fidivrs
xchg
push
cli
je
or
xor
rcrl
mov
adc
out
dec
mov
xor
bound
test
add
aam
push
pop
sbb
jl
xchg
insb
test
pop
and
add
pushf
test
mov
jo
adc
clc
cmpb
ret
mov
ret
movl
in
rorb
enter
pop
std
cmp
and
outsl
and
mov
pushf
xor
dec
pop
pop
pusha
xor
pop
jmp
movsb
dec
shll
out
leave
popa
inc
mov
mov
cltd
lods
push
xchg
int
insb
xor
dec
sahf
jno
cmp
fisubrl
adc
fdivr
inc
pusha
xchg
adc
jecxz
sub
bound
out
popa
and
in
std
add
je
or
aad
int
cmp
push
add
xor
mov
sbb
jae
stc
insl
iret
dec
lcall
pop
outsl
add
inc
setne
stos
xor
je
and
dec
jge
jne
sbb
sub
cmp
lods
jns
cli
cmpsl
push
adc
xor
insb
mov
push
and
mov
xor
repnz
jne
adc
mov
cmp
cmpsb
push
in
mov
jae
fcoml
repnz
aas
es
cmp
jnp
int
ja
sub
or
jle
jns
pushf
and
cwtl
insb
out
cmp
outsb
lea
xchg
ds
movsb
dec
cmpsl
sbb
xor
enter
sub
or
cld
add
push
data16
xchg
stos
mov
inc
and
and
fadd
adcl
or
fcompl
int
js
sbbb
xor
popf
outsb
xchg
sub
jge
push
fcoms
mov
sbb
or
mov
xor
out
je
jnp
inc
into
mov
jae
xchg
dec
mov
or
subl
je
mov
cmp
and
movb
dec
insb
les
mull
xor
sub
stos
dec
pushf
dec
pop
xchg
jne
insb
xor
jnp
cli
loop
repnz
test
mov
stc
sub
in
jb
dec
sahf
aam
rolb
in
pushf
lds
insl
adc
pop
movsl
push
and
jg
mov
mov
stc
mov
out
jecxz
mov
ljmp
outsl
ljmp
sbb
jp
add
popf
adc
xchg
iret
call
push
pop
xchg
adc
ljmp
outsb
mov
subl
scas
addr16
negl
out
outsb
sbb
stos
clc
mov
dec
inc
aad
cli
and
xorl
cmp
push
imul
movsb
or
or
mov
cmp
pop
cmp
pop
insl
pop
and
popa
popf
sub
add
neg
xor
jae
stos
shl
inc
mov
adc
cltd
add
test
std
les
sub
push
or
out
dec
stos
cmp
push
or
lahf
add
adc
sbb
les
mov
and
xor
mov
cwtl
pop
fsubrp
mov
mov
sub
jns
das
xchg
das
lods
dec
and
dec
mov
xchg
aas
mov
out
ds
imul
scas
lods
and
shlb
fnstsw
shrb
adc
lods
push
data16
lock
push
mov
out
pop
popf
jae
lea
push
fistpl
pop
push
inc
mov
mov
mov
adc
push
inc
lret
sbb
push
movsb
mov
test
pop
cmp
mov
hlt
xchg
lret
ds
or
mov
cmp
cmp
repz
cs
leave
and
push
loopne
cwtl
push
xchg
gs
pusha
mov
dec
push
adc
cmp
mov
lahf
cmc
enter
int3
dec
inc
movsl
test
adc
mov
test
js
jne
and
scas
sbb
add
and
out
xchg
je
cmp
test
mov
lds
loop
and
or
pop
jo
int3
int
xor
pop
les
adc
test
sub
cmp
and
push
das
adc
stc
ljmp
ss
loop
ljmp
adc
cmp
pop
movsl
inc
jne
out
and
mov
into
jae
dec
call
imul
xor
pop
mov
int
scas
push
add
lods
push
jg
cli
mov
negb
sub
pop
sbb
test
push
das
pop
push
jae
packsswb
cs
add
dec
xchg
mov
inc
int3
sbb
dec
mov
push
sbb
outsl
repnz
outsb
mov
repz
mov
sub
stc
aam
xchg
dec
loope
adc
push
bound
es
dec
movsb
mov
loope
adc
cmp
or
mov
popa
xchg
push
dec
push
mov
repnz
jmp
inc
push
repnz
fldenv
jbe
dec
jnp
mov
shll
out
adc
xorl
jne
xor
js
ret
mull
dec
adc
imul
jae
int
testb
lcall
adc
mov
imul
repnz
mov
mov
pop
dec
das
xor
sti
inc
pop
sbbb
movsb
mov
sti
mov
imul
xchg
jle
rcll
frstor
arpl
or
pop
add
sub
mov
push
pop
fistl
les
std
cmpsl
icebp
inc
and
pusha
popa
test
lods
pop
pop
loope
jbe
push
push
add
jbe
pop
hlt
enter
stos
inc
push
out
xor
pop
and
movsl
aaa
inc
inc
and
popf
cmp
xor
jbe
mov
mov
mov
mov
outsl
jg
and
dec
bound
push
adc
lock
dec
scas
std
decb
fisubrs
inc
test
daa
jae
or
jno
fwait
sub
sti
push
xchg
bndmov
push
rcr
and
mov
sub
pop
and
cmpsl
mov
test
cld
daa
popf
push
lret
in
addr16
cwtl
outsl
fucomip
cmp
or
push
jns
repz
jnp
into
cs
sub
adc
sahf
ficomps
sbb
jecxz
mov
je
add
jg
sub
scas
cmp
bound
insb
insb
pop
daa
test
mov
mov
cwtl
sbb
mov
ret
in
mov
sbb
add
shrb
out
mov
rcrl
xchg
bound
jns
hlt
das
mov
lret
aad
addr16
loope
inc
add
mov
push
in
push
pop
push
sti
jns
loop
jns
sbb
mov
lea
popa
or
inc
and
mov
jb
cmpsb
sub
bound
push
shll
push
inc
mov
or
pop
sub
inc
dec
aam
pop
cwtl
sbb
dec
out
or
lock
scas
jbe
stc
iret
mov
ljmp
dec
mov
jl
fwait
hlt
dec
mov
and
jb
out
xchg
in
jb
push
add
das
ss
fxch
enter
or
negl
and
or
sbb
stos
call
pop
mov
fbstp
jg
pop
sub
dec
das
daa
fmull
rcrb
push
xchg
sub
fdivl
dec
popf
fisttps
dec
insb
mov
pusha
adc
insb
popl
sub
loopne
cwtl
inc
je
push
xchg
mov
push
mov
or
cmc
adc
idiv
loop
rcll
xor
loope
xor
inc
xchg
popa
inc
jbe
aaa
inc
cmp
push
sbb
and
push
inc
xchg
jg
decb
mov
lods
jg
dec
int
mov
push
fidivs
and
cmp
lds
fnstenv
and
xor
adc
or
orb
sub
fisubs
and
cs
lcall
sub
call
xchg
push
fsubl
fisubrl
sbb
lods
lock
nop
pop
vpaddsw
pop
je
xchg
ljmp
fmuls
xlat
mov
sbb
add
xchg
aaa
int3
dec
mov
mov
imul
inc
xor
pop
sbb
xor
out
jle
inc
push
adc
or
test
out
xchg
std
loop
or
insb
andl
repnz
int3
in
aam
fcomp
pop
add
jmp
rcr
xor
nop
in
aaa
clc
fwait
mov
cmovb
sub
lcall
mov
dec
rcr
mov
test
sahf
sub
mov
fdivrl
iret
hlt
add
test
adc
adc
xchg
dec
adc
sub
dec
jg
mov
fisubrs
sbb
jnp
testb
jns
test
push
movsb
mov
add
sbb
es
les
jno
bound
and
mov
mov
sub
dec
mov
test
inc
xchg
clc
mov
xchg
sbb
add
daa
xchg
in
xchg
dec
mov
test
pop
out
pushf
loope
push
test
mov
lcall
iret
fucomp
hlt
jmp
subl
cmp
andl
add
mov
cmp
pop
fsubrs
adc
test
orb
scas
fldcw
andb
mov
mov
or
xchg
mov
dec
add
int
push
mov
scas
jbe
adc
stc
mov
fcoms
data16
stc
ss
sub
or
lahf
out
mov
and
dec
test
mov
pop
jg
jl
dec
imul
sbb
sub
push
les
adc
mov
mov
popa
or
jmp
and
and
js
mov
aaa
add
pop
mov
cmp
mov
xchg
rcr
xchg
iret
pop
sarb
nop
test
ja
popa
xchg
out
int
jecxz
ss
std
inc
and
sub
sub
lea
popf
and
lret
jle
les
test
dec
ud0
cmc
enter
rcr
mov
je
es
xchg
aas
test
lods
sub
lds
dec
popa
cmp
int
jne
out
sbb
call
jge
pop
shlb
jle
and
xchg
insl
push
je
out
inc
xchg
xchg
fcomp
mov
xchg
xchg
inc
hlt
pop
enter
jo
lcall
scas
xor
inc
lret
sti
loop
sti
add
mov
aam
jo
or
popa
fwait
mov
inc
ud2
je
sbb
testb
aas
hlt
stc
add
das
mov
cwtl
mov
inc
xor
pop
ja
stos
enter
dec
cwtl
stos
sahf
in
imulb
jbe
out
inc
scas
cmp
hlt
dec
fmull
or
test
lcall
dec
xor
movsb
fwait
repz
xchg
movb
pop
mov
loope
lods
sub
push
xchg
mov
or
jp
mov
cld
test
push
pop
out
mov
dec
push
pop
adc
jno
or
push
mov
mov
ret
jae
lea
sbb
addr16
roll
and
lret
sbbb
lods
add
fs
sbb
test
leave
and
pop
in
xchg
dec
repnz
inc
popa
mov
dec
jmp
push
and
outsb
adc
shll
fsubp
xchg
push
mov
loope
stc
pop
shlb
mov
rcll
cli
aad
dec
fidivl
mov
into
imul
movsb
movsl
jb
xchg
lods
iret
testl
cmpsb
xchg
int
or
xchg
dec
sahf
loope
cltd
push
shlb
lahf
addl
out
loope
insb
jl
mov
mov
imul
and
in
test
sbb
mov
nop
out
js
arpl
stos
sahf
jns
data16
xchg
mov
popa
mov
xchg
sbb
rcr
arpl
jmp
icebp
push
push
and
sub
pusha
and
dec
sub
jg
call
shrl
mov
loopne
rorl
or
loop
fadd
cmp
xchg
mov
jecxz
int3
mov
scas
push
dec
daa
fdivrs
pop
pop
cs
cs
jmp
inc
leave
ljmp
fadds
arpl
push
mov
cld
not
push
sub
loop
cld
cld
jl
xchg
inc
inc
ficoml
in
les
out
cmp
adc
add
stos
push
sahf
cmp
adc
jg
xor
sub
xor
cs
xchg
ret
mov
and
and
out
sbb
xor
repz
inc
nop
out
push
cld
stos
pop
mov
pop
jge
dec
add
sub
pop
adc
jnp
jmp
lods
movb
test
insb
repz
lea
pop
cmp
fistpll
add
xchg
jg
imul
popa
xchg
loopne
fsubs
pop
xor
sub
inc
mov
sub
jl
lea
jb
fwait
cli
les
fimull
daa
jmp
mov
loop
mov
mov
push
stos
repz
lds
ja
das
push
xchg
enter
loopne
sub
sbb
cld
bound
add
sbb
stc
inc
pop
sbb
leave
mov
mov
mov
fldt
sub
mov
bound
or
jl
xchg
mov
fs
clc
and
inc
xor
xchg
adc
jge
cmp
aam
mov
xor
int
cwtl
cmp
sub
rcl
adc
insb
je
jne
sbb
xor
mov
jo
inc
adc
add
ljmp
dec
push
push
aaa
insb
xor
test
cmp
stc
dec
cmpsb
mov
scas
cs
cli
out
imul
jl
push
adc
sahf
lods
rcl
fstpl
sub
cmp
push
inc
int
sahf
jle
hlt
lds
inc
lcall
paddq
mov
cs
lahf
aam
mov
fwait
adc
pop
sub
cmp
dec
jl
cmpl
je
lea
rcll
mov
and
fistl
ljmp
outsl
out
lea
hlt
jle
movsb
arpl
and
loop
insb
jne
fdivrl
xorl
js
push
push
in
pop
push
adc
and
insb
xchg
xor
push
mov
jl
xor
jle
cli
dec
data16
dec
mov
mov
pop
lcall
jae
incb
pop
jmp
or
jbe
dec
dec
js
pop
add
push
loope
cs
dec
and
mov
cmpsl
insb
xchg
movsl
stc
inc
pop
add
in
adc
lcall
inc
mov
outsb
push
insb
enter
popf
mov
mov
push
push
push
and
sbb
push
push
pop
sbb
xor
sbb
inc
rcrb
jne
sbb
mov
insl
dec
push
fisubrl
insl
xor
dec
call
int3
mov
jno
mov
pop
jl
dec
sub
push
jmp
mov
adc
sub
stos
in
xor
mov
lods
adc
icebp
int3
or
mov
cmp
cs
out
mov
int3
mov
or
inc
adc
xchg
fcmovnb
popf
stos
sbb
and
xchg
roll
lock
out
cmpsb
ljmp
hlt
sub
sub
es
pop
outsl
ret
sbb
out
adc
inc
mov
xchg
push
loopne
pslld
xor
scas
mov
cwtl
ret
aad
jl
fisttpl
cmc
mov
and
fsubrs
xor
and
xchg
jl
in
sbb
je
mov
repz
xor
xchg
sbb
out
roll
js
imul
fwait
jb
orb
adc
xor
xor
out
in
xor
mov
leave
mov
fadd
mov
nop
shl
cli
jle
xchg
incl
cs
add
stos
xchg
pop
popa
in
insb
in
mov
cld
push
out
cltd
pushf
and
mov
imul
fldl
ds
mov
xlat
outsb
ds
xor
rcr
push
sub
mov
popa
jns
cltd
xchg
jnp
push
cld
repnz
mov
int
cli
add
and
xchg
and
adc
popa
in
cwtl
or
or
xchg
push
xor
or
fstl
sbb
mov
mov
or
pop
xchg
jecxz
fdivp
fistpll
mov
fsub
enter
mov
pop
pop
pop
mov
mov
or
pop
pop
push
jne
fmul
repnz
scas
sub
mov
cmp
pop
fstpl
int3
cwtl
xor
pop
je
les
imul
cltd
cmp
or
push
daa
jns
lds
or
movsl
rcll
pop
push
in
inc
sub
mov
inc
lret
out
mov
xor
pop
sarb
insl
popa
mov
sbb
repz
cmp
imull
aaa
mov
push
sub
lret
xor
cltd
mov
aaa
push
enter
dec
or
cmc
fwait
cmc
scas
addr16
xlat
dec
xor
ficoms
xchg
call
es
pop
push
nop
ficompl
test
aaa
mov
clc
add
fsubs
mov
push
or
aam
lcall
push
inc
sti
leave
sahf
jb
jnp
in
int
icebp
nop
jmp
adc
lea
shl
mov
push
mov
pop
das
aad
mov
repnz
jg
mov
into
rcr
mov
push
or
inc
jnp
jnp
fdiv
sub
incb
pop
stc
shlb
fs
mov
pop
add
cli
jne
mov
dec
jge
add
jmp
repz
jo
adc
cmc
pushf
mov
pop
inc
adc
mov
push
aaa
subb
mov
enter
inc
dec
sub
sbb
add
mov
add
or
sbb
pop
lret
jle
pop
sarb
insb
add
or
xor
or
inc
in
xchg
gs
xor
lahf
into
sbb
mov
sarl
lds
test
addl
test
xchg
fwait
jno
outsl
cmp
cmp
push
push
and
push
and
aaa
cmp
aam
leave
in
icebp
and
rclb
arpl
jae
pushf
jp
imul
xchg
dec
dec
loop
enter
pop
ljmp
int3
lcall
imul
imul
lds
jo
mov
jnp
shrb
loop
mov
cwtl
dec
pop
xchg
outsb
nop
loop
jecxz
cwtl
fisttpll
and
popl
lahf
add
cld
adc
jle
insl
sub
lret
xchg
mov
mov
mov
cld
dec
push
aas
mov
add
mov
mov
dec
xchg
dec
frstor
push
and
adc
cmp
nop
out
mov
mov
ss
push
mov
pop
rcrl
es
fimull
out
call
fxch
sbb
sarb
push
ret
xlat
dec
dec
data16
push
pop
inc
inc
push
flds
aaa
sub
sub
popf
movsl
lcall
push
lahf
add
sahf
out
cmpsb
lods
or
in
mov
aaa
fsubrs
negb
xor
clc
inc
inc
dec
aaa
add
push
cmp
cmpsl
icebp
sub
lods
cmpsb
out
pop
xor
mov
popa
inc
mov
mov
xchg
mov
cmp
leave
push
lods
xchg
fcomps
push
add
in
push
call
mov
sbb
sbbl
dec
lods
pop
in
inc
inc
sbb
scas
sbb
jnp
clc
and
arpl
pop
cmp
test
fdivrs
dec
jns
je
sbb
lret
jb
pusha
jae
add
call
sarb
sub
mov
cli
add
jbe
mov
cld
into
outsb
inc
mov
sub
mov
dec
in
mov
cmp
cmp
cmp
es
xor
mov
pusha
pushl
mov
dec
cltd
add
fwait
sbbb
lahf
and
cmp
mov
ret
jb
ret
pop
in
or
sbb
lea
add
jnp
add
add
ja
xor
xor
dec
das
add
cld
mov
in
adc
sbb
jmp
or
bound
adc
arpl
std
test
movsb
call
das
inc
loop
in
lea
fmuls
in
icebp
popf
test
ror
pop
stc
xlat
shl
in
jnp
sbb
enter
jne
adc
push
adc
and
mov
pusha
jmp
cmp
mov
xchg
outsb
or
js
andl
aam
movsb
jb
mov
add
imul
push
mov
push
jb
out
out
push
cli
stos
lds
scas
fs
jle
icebp
insl
cmp
jbe
outsl
popa
sub
aas
pop
adc
xor
int
frstor
loop
ja
lcall
push
mov
sbb
mov
lods
popf
sarl
push
and
dec
mov
pop
pop
test
xor
jbe
out
or
jecxz
pop
mov
cmp
pop
das
jp
negb
add
sub
sub
lods
cmp
nop
inc
mov
cmp
mov
popf
mov
sbb
push
jl
roll
outsb
sub
cwtl
lahf
outsl
jmp
ljmp
or
mov
movsb
hlt
ja
test
clc
mov
mov
fmuls
outsl
jg
imul
lahf
mulb
or
sbb
sbb
mov
push
add
inc
inc
aas
ja
roll
lret
popa
fsubrl
jnp
frstor
insl
sbb
adcl
cmp
pop
push
pop
pop
push
jge
and
sub
and
xor
es
aas
bound
jae
fdiv
sub
shr
jge
out
int3
out
push
or
js
push
mov
mov
hlt
loope
scas
adc
fildll
inc
fs
loopne
fimuls
rcrb
inc
adc
xlat
sbbb
lods
ret
sbb
sbb
jle
ss
loopne
jp
xor
pop
out
sar
mov
jmp
inc
ss
fsubr
push
mov
lret
xor
lock
or
xor
mov
loop
mov
insl
icebp
leave
push
sub
pop
mov
push
fs
mov
jl
pop
in
mov
lret
push
mov
jns
push
mov
push
int
xchg
push
andb
test
cltd
dec
or
cmpsb
ljmp
enter
add
sub
add
push
imul
rcrl
jno
int3
out
jne
adc
jbe
pop
mov
jns
cmpsb
mov
cmc
xor
and
ret
lahf
rcl
aas
dec
das
add
or
mov
sub
ss
mov
loop
sbb
xchg
push
cmc
xor
mov
in
test
inc
mov
xor
dec
dec
movsb
in
dec
aad
and
push
out
xchg
test
ret
popa
sbb
mov
pop
xor
sarb
xchg
xor
mov
xchg
sahf
or
dec
lock
cmp
sub
and
mov
adc
rcrb
xchg
loop
imul
xor
stos
pop
hlt
dec
mov
push
inc
cmpsb
and
ss
inc
jge
pop
ret
pop
hlt
ja
ljmp
data16
bound
movsl
pushf
mov
and
pop
jmp
cmp
cld
add
enter
mov
dec
mov
sbb
mov
cmp
mov
mov
xchg
f2xm1
lcall
lret
cs
out
cmpsb
mov
mov
mov
jne
push
push
shl
or
sub
xor
push
adc
rorl
mov
data16
mov
push
movsb
adc
insb
push
shrb
cs
mov
and
cmpsl
test
adc
icebp
and
push
cmpsl
and
push
and
mov
jbe
sbb
add
inc
icebp
into
cltd
out
push
fcoml
pop
gs
xchg
push
dec
rorl
sub
les
sti
pop
inc
sub
addr16
or
pop
pop
lods
out
cmp
imul
ficompl
push
sahf
cmpsl
popa
sub
enter
push
ret
push
and
stc
lcall
ds
adc
fbstp
out
mov
adc
stc
test
cli
lcall
pop
fsubrp
cs
xor
movsb
xlat
loope
cmp
outsl
jecxz
jb
lahf
loope
mul
and
adc
ss
and
sahf
xor
pop
fidivs
jbe
xor
stos
ds
sarb
xchg
insb
idivb
dec
aaa
inc
adc
xlat
mov
out
bound
adc
movsl
sahf
out
test
into
cmp
imul
aad
and
rcrb
rclb
outsl
push
loopne
mov
mov
adc
mov
and
in
popl
lock
loopne
push
incb
sbb
clc
out
lahf
mov
sbb
addr16
scas
adc
inc
xchg
push
into
and
mov
in
pop
test
push
shll
push
negl
pop
fldt
jns
inc
iret
pop
xor
dec
sub
or
mov
dec
pop
inc
rcrb
adc
jmp
fs
fdiv
and
push
adc
xlat
mov
rclb
scas
outsb
dec
inc
ret
jo
jle
and
out
rcl
popf
sbb
push
js
mov
fidivrl
inc
gs
in
xchg
fsubrp
out
xchg
decb
adc
add
ds
mov
arpl
mov
jbe
cmp
sar
test
movsb
js
cmpsb
pusha
xchg
addl
fwait
mov
xor
aas
pusha
jp
dec
jns
sbbb
mov
add
adc
push
dec
repnz
negb
ficoms
scas
call
dec
pushf
mov
mov
mov
inc
adc
movsl
hlt
jns
mov
decb
in
sub
mov
xor
mull
lods
cwtl
xor
add
mov
aaa
add
inc
xchg
mov
pop
xchg
pop
shll
icebp
dec
mov
loope
ds
push
sub
xchg
iret
fcom
jnp
js
xchg
jl
negl
adc
jg
mov
dec
pop
mov
into
jae
sbb
test
jno
sbb
inc
pushw
inc
dec
mov
fisubl
xorl
lods
mov
int
xor
stos
popa
ficompl
pop
fdivl
int
push
xlat
jmp
insb
int
and
insl
rcll
hlt
loop
insb
push
jno
jno
lret
pop
dec
cmc
sbb
ds
adcb
cs
mov
imul
cs
daa
push
fwait
clc
stos
loope
mov
dec
dec
mov
mov
sbb
aam
cwtl
mov
cmp
clc
cmp
jp
clc
inc
iret
mov
ror
or
sbb
and
or
ficompl
call
imul
cmp
mov
xchg
cmp
hlt
adc
into
sbb
dec
int3
xor
pop
iret
push
xor
cs
pusha
xchg
es
mov
jg
dec
lods
mov
les
xor
xor
mov
ret
out
call
add
jmp
push
nop
arpl
leave
test
adc
push
ret
imul
insl
cli
inc
mov
aam
mov
imul
dec
repz
imul
cwtl
xchg
xchg
pop
and
xchg
jle
shrb
sub
scas
adc
repz
xchg
aas
cmp
dec
add
movsb
lods
lcall
add
ds
jne
lret
insl
fiadds
mov
leave
mov
mov
test
lcall
xchg
pop
loop
aaa
jmp
push
int
sub
xchg
in
lods
pop
ret
xchg
inc
dec
mov
repz
inc
fiaddl
lret
sub
mov
pop
cltd
cmp
lea
push
xor
push
jnp
scas
add
push
test
inc
movsl
test
mov
gs
xchg
ret
es
adc
repnz
push
data16
test
sub
rcrl
cmpsb
aaa
push
push
loopne
mov
mov
mov
es
mov
xor
push
sub
popf
movsl
cmp
data16
stc
mov
js
aad
push
xor
inc
pushf
repz
push
jge
xor
pushl
or
scas
lret
jae
ss
sbbb
aaa
lods
jbe
lahf
cltd
test
push
jge
ljmp
sbb
push
outsl
dec
in
add
arpl
pushw
push
lods
push
mov
addb
cmp
leave
xchg
jle
lods
iret
xchg
out
pop
data16
push
lret
push
into
and
push
int3
mov
inc
arpl
xchg
addr16
cmp
ds
and
add
add
shll
xchg
std
lds
shlb
lea
inc
jnp
cmp
adc
out
frstor
and
xchg
sbb
pop
fcomps
dec
outsl
xchg
stos
cmp
cld
repnz
je
cmpsb
add
pop
xchg
push
test
adc
test
lahf
dec
jp
shrl
jae
and
mov
mov
mov
rcrl
enter
sub
inc
xchg
movsl
int
ja
arpl
mov
sub
xor
movsb
fs
xor
mov
ficomps
cmc
ja
lods
ret
mov
inc
pop
mov
imul
adc
mov
xchg
jl
jae
daa
leave
inc
jp
int
fsubs
das
insl
push
shrl
addr16
xchg
push
lods
lods
mov
cmp
cwtl
ficoms
dec
xor
es
sbb
mov
inc
cmp
in
mov
in
jle
gs
shlb
test
popf
hlt
cmc
cmpsb
inc
ret
push
daa
mov
das
hlt
inc
sbb
ret
popf
movsb
sti
jae
sub
adc
xchg
in
int3
sbb
aaa
jg
jae
imul
mov
mov
pop
sti
fidivrl
scas
lods
insb
push
inc
jnp
pop
pcmpgtb
cmpsl
repz
negb
inc
xor
incb
filds
cmpb
jbe
rol
roll
icebp
mov
mov
adc
or
mov
dec
or
lret
mov
sbb
popf
mov
mov
arpl
call
adc
testb
jge
in
mov
dec
or
cld
push
mov
dec
cltd
mov
das
mov
popa
push
jno
mov
push
dec
xor
or
aas
xchg
loopne
rol
pop
sub
cli
xor
inc
inc
xchg
sub
adc
xchg
cmpsl
es
mov
dec
add
push
cmc
pop
aas
es
loopne
arpl
lea
sbb
adc
enter
push
mov
inc
sarb
in
mov
dec
outsb
push
add
push
add
xchg
mov
fwait
movl
stos
movsb
lahf
iret
in
outsl
addr16
cmp
and
fidivl
mov
lret
sub
dec
sub
ljmp
popf
xlat
and
mov
cltd
pop
inc
insb
pop
outsl
jmp
inc
xor
loopne
imul
jnp
bnd
xchg
inc
xlat
inc
sub
xorl
fnstenv
ss
push
scas
stos
or
and
shll
sub
insl
arpl
popf
loopne
fsubs
sbb
repz
pop
push
fucomip
fstps
icebp
ret
lods
mov
jle
clc
mov
cwtl
cli
jne
repnz
pop
adc
test
xor
into
subb
xor
imul
or
arpl
add
inc
sub
push
inc
fisubl
mov
sti
mov
or
push
xor
aaa
inc
aad
mov
jmp
pushf
xchg
loopne
pop
cmp
xchg
ds
dec
push
xchg
jecxz
mov
ljmp
loope
and
or
inc
outsl
jmp
aaa
jns
loope
mov
lea
sbb
cwtl
pusha
js
into
out
xchg
sahf
test
jae
jl
adc
adc
jmp
inc
lea
lods
adc
aaa
mov
cmp
pop
and
jne
adc
cmp
jne
outsl
mov
test
lahf
int
cltd
adc
imul
nop
and
xchg
in
sub
out
jecxz
mov
adc
mov
cmp
clc
adc
dec
cmpb
das
js
inc
insl
out
push
dec
and
pop
pop
pop
out
mov
jp
ljmp
cmpsl
inc
jge
mov
rorl
es
add
pushf
pop
lahf
mov
sahf
jle
cmp
ret
mov
cltd
loop
aad
in
inc
sbb
push
or
jg
ret
out
pop
xlat
add
outsb
sbbb
lret
insb
push
rcll
push
shrl
imul
jmp
jo
jb
cmp
push
xor
inc
call
rclb
std
stos
in
adc
icebp
fldenv
aad
subl
js
xchg
ja
push
dec
mov
out
in
and
inc
in
and
adc
es
mov
ljmp
sbb
mov
cmp
inc
scas
mov
lock
jno
roll
adc
lock
daa
xor
inc
xchg
xor
mov
outsb
push
cmpsl
pop
subb
push
dec
mov
fsubr
jns
push
mov
gs
inc
mov
mul
pop
in
pop
cmp
and
push
adc
ljmp
shll
mov
outsl
xor
nop
mov
pop
or
aas
shr
icebp
movsl
mov
adcl
push
ret
sub
mov
xchg
xor
push
mov
roll
mov
popf
in
imul
jno
jae
and
inc
xlat
in
pop
xchg
in
popa
out
in
cmpl
loop
pop
cmpsl
adc
repz
dec
add
mov
outsl
sbb
scas
dec
inc
jns
mov
pop
pushf
push
xchg
std
imul
mov
add
push
pop
clc
mov
xlat
sub
jb
shlb
mov
jp
jg
lock
add
add
add
mov
stos
mov
lahf
dec
hlt
and
sbbl
popa
enter
aad
sbb
xchg
adc
imul
cmp
hlt
in
and
or
popa
dec
fildll
pmaxub
stc
data16
add
lea
mov
pop
mov
sbb
xchg
and
sub
fsubl
pop
xchg
add
and
cli
ljmp
mov
daa
or
jl
dec
add
bound
outsl
mov
add
hlt
pop
loope
shll
sbb
out
or
pop
shl
xchg
sahf
fs
imul
test
insl
add
jl
pop
mov
cmp
ds
rcrb
mov
push
xor
seta
add
jp
inc
in
js,pt
sbb
insb
rorl
scas
mov
call
dec
push
dec
inc
cmpsl
test
push
int3
adc
popf
ret
negl
add
cmp
sbb
repz
add
pop
sub
cs
mov
mov
jmp
stc
je
mov
xchg
std
add
xchg
lahf
jmp
sti
push
sbb
negl
std
repnz
xor
outsl
idiv
sti
movsl
push
mov
xor
mov
push
inc
mov
cmpsb
and
pop
or
bound
inc
outsb
in
loopne
mov
xchg
jnp
add
in
lret
add
ljmp
or
mov
xchg
ss
lods
iret
push
lcall
adc
aam
cld
in
inc
loope
call
dec
mov
lret
adc
push
xchg
into
pushf
dec
dec
repnz
adc
sub
bound
sbb
lods
inc
fisubrs
test
inc
add
gs
push
lods
cmpsl
mov
add
cwtl
fdivl
and
in
jle
lods
and
push
cmp
aad
movsl
hlt
enter
lods
ficoml
jno
add
mov
jbe
in
insl
cmp
cmp
ret
int3
ror
adc
add
testb
push
shll
jbe
or
shr
call
out
sbb
xor
popf
push
stos
loope
adc
mov
xchg
jno
cmp
sub
mov
pusha
lahf
cmc
fdivl
icebp
push
jl
cmp
inc
jp
jno
sbb
xchg
push
pop
stos
sbb
mov
dec
nop
mov
test
cli
xor
mov
sahf
stc
or
dec
shrb
cltd
pop
sub
xlat
stc
outsl
loop
mov
fcmove
icebp
jecxz
xor
movsb
fisubrs
sbb
in
pop
sub
lds
mov
and
jle
mov
inc
pop
int
fidivl
fildll
sbb
dec
insb
in
and
xchg
inc
or
sbb
pop
out
pop
xchg
sbb
and
cmp
pop
daa
leave
in
sahf
adc
adc
cmpsb
add
inc
icebp
xchg
xlat
and
imul
jle
pop
insb
push
stos
arpl
stos
cmp
imul
jle
xchg
mov
shrb
adc
dec
ljmp
frstor
fisubl
enter
push
mov
mov
jnp
lock
mov
adc
xchg
sar
daa
scas
adc
sub
cmp
sarb
pusha
jb
pop
mov
dec
cld
ret
push
repnz
or
push
hlt
pop
xchg
outsl
fdivp
cmp
inc
arpl
add
and
pop
xorb
into
mov
les
insl
leave
jns
jbe
test
loope
jle
mov
nop
fwait
mov
cmp
clc
mov
pop
xor
fisubl
ds
push
mov
dec
xchg
ds
aam
add
fildl
sub
jae
mov
xchg
push
stos
pusha
out
test
xchg
inc
push
or
push
divl
cwtl
add
aas
aam
test
add
das
test
dec
call
or
sub
xor
fidivl
pop
xchg
mov
loopne
cmp
or
nop
sub
xchg
cmp
sbb
mov
xchg
in
xor
add
stos
out
dec
adc
push
fnsave
rol
jl
fcmovnb
ss
adc
popf
or
loopne,pt
gs
xchg
fwait
movl
sbb
xchg
lds
and
mov
sbb
hlt
jo
aas
xchg
and
aas
mov
pop
pop
lret
xor
test
sub
and
xchg
adc
loopne
orl
jle
cltd
fdivrl
insb
out
jns
lret
adc
dec
in
sbb
aas
sbb
fisubrl
notl
mov
dec
inc
jae
in
add
pop
enter
call
movsl
push
jle
movsl
in
lret
xchg
xchg
cmpsl
xchg
sub
pop
test
or
pop
pusha
cld
or
imul
ds
lcall
mov
or
shrb
lahf
sub
sub
dec
xchg
jp
loop
call
mov
adc
repz
pop
and
cmp
push
arpl
add
cmc
in
cmpsb
lcall
sbb
jno
out
ljmp
or
push
xor
push
inc
aam
cmp
cmp
out
repz
mov
pop
xchg
pop
mov
mov
sub
insb
inc
mov
inc
sub
inc
scas
xlat
inc
shr
mov
and
stc
mov
stos
ja,pt
inc
pusha
jmp
dec
repz
cmpl
repnz
in
lcall
test
testl
mov
mov
mov
jb
lret
and
out
jmp
fcomip
jle
cmc
std
mov
test
sbb
push
inc
sbb
stc
in
outsl
in
outsb
push
addr16
shlb
cmp
sbb
imul
inc
dec
imul
nop
test
pop
rorl
adc
addr16
xchg
inc
stos
xor
mov
sub
sbb
loope
push
add
cmp
pushf
rcll
outsl
cld
push
xor
inc
mov
push
jns
popa
xor
mov
inc
pop
out
push
xor
sub
mov
or
jp
dec
scas
in
inc
pop
out
xchg
out
cmpsb
fwait
lea
lahf
pusha
jb
dec
add
movsb
or
dec
xchg
iret
lea
cmp
roll
add
das
in
lods
in
shlb
and
add
inc
xlat
nop
arpl
xor
loopne
dec
jno
pop
push
sti
mov
out
cmpsl
test
stc
cmp
je
and
cmp
addr16
dec
push
in
inc
mov
adc
push
cwtl
outsl
bound
loope
cmp
push
popa
in
xor
stos
pop
les
inc
fsubrl
sub
or
lea
xchg
test
enter
mov
cmp
cmp
mov
popl
jae
and
xchg
sarl
push
and
bound
ret
push
push
mov
xchg
and
inc
popa
test
or
testl
lock
or
rolb
outsl
mov
lods
outsl
mov
push
or
inc
push
push
mov
mov
scas
push
mov
mov
lods
loopne
mov
clc
mov
fbstp
fs
dec
sub
xchg
test
inc
xor
addr16
test
xchg
fsubr
jnp
jmp
adc
and
int
call
add
cmp
mov
push
and
daa
jmp
cmp
add
mulb
fldenv
adc
xchg
lods
jp
scas
enter
mov
pop
mov
mov
inc
push
mov
les
push
fcomps
push
cmc
andl
xor
bound
cli
or
push
cltd
jb
js
add
and
sbb
mov
int3
xor
xor
dec
ret
push
cmp
push
mov
cmpsl
xchg
inc
dec
push
lea
pop
bnd
mov
xchg
scas
inc
sbb
je
dec
cmpb
mov
push
jbe
jp
mov
xchg
or
leave
pop
rcll
push
lret
ss
push
mov
pop
pop
aam
cmpsb
xchg
das
call
outsb
pop
dec
ret
scas
mov
ljmp
outsl
ficoml
nop
add
out
lahf
je
mov
fst
in
sbb
add
mov
je
icebp
mov
dec
mov
lea
mov
xchg
mov
ss
dec
ret
data16
jae
cvtpi2ps
lock
ljmp
and
out
scas
mov
jo
hlt
imul
add
and
cmpl
sbb
push
jb
mov
xor
stos
add
cmc
mov
outsb
lret
jns
mov
es
mov
jbe
mov
outsb
or
out
lcall
mov
push
repnz
je
in
jns
in
sahf
inc
lods
mov
mov
int
sbb
adc
mov
out
lock
xor
emms
and
push
sarl
jne
pop
add
add
loope
imul
inc
incb
negb
hlt
out
sub
in
fstpl
pop
inc
or
repnz
jle
scas
add
sub
xchg
loopne
test
sub
pusha
adc
sbb
xor
sub
and
clc
fs
pop
sbb
mov
push
mov
cmp
outsl
push
gs
out
rclb
jb
sub
insb
inc
pop
jge
jb
xchg
mov
cmp
aad
test
jge
test
xchg
stos
sub
cmc
mov
cld
rclb
dec
sub
inc
movsl
mov
in
jp
ss
adc
mov
sub
lods
sbbb
leave
pop
hlt
out
mov
leave
mov
dec
repnz
push
imul
sbb
add
out
jle
push
das
imul
cmp
mov
fisubs
mov
pushf
jb
ret
xor
pop
in
fdivl
daa
std
cli
cli
fnstcw
fnstsw
cmpsl
daa
mov
and
int3
addr16
rorb
cmpl
push
outsb
and
xchg
xor
pop
cltd
lahf
push
fwait
shl
cld
pushf
subl
or
mov
cs
lods
ret
pop
add
lds
mov
pop
cmp
lahf
mov
nop
in
enter
adc
out
mov
daa
jbe
add
cmp
dec
push
dec
rclb
add
out
pop
js
roll
mov
fwait
sub
je
jl
test
push
aad
jg
adc
xor
or
enter
sub
sbb
xchg
adc
add
and
ja
fadds
push
scas
mov
into
jmp
or
push
insb
das
sub
dec
fstpt
mov
adc
notl
les
push
clc
rcrl
imul
dec
mov
dec
gs
addr16
fistpl
adc
cmp
xchg
sbb
inc
inc
fcoms
jnp,pt
call
add
or
and
test
js
sbb
inc
repnz
ds
cmp
ud2
lock
pop
push
sbb
repz
push
add
fistps
jmp
lea
mov
ja
pop
jp
dec
shll
inc
pop
addr16
cmpsl
sbb
int
sarl
pusha
xchg
insl
xor
dec
xchg
out
xchg
sub
mov
push
adc
sub
and
nop
outsl
lds
test
sbb
adc
shlb
and
fmuls
leave
sbb
and
mov
fs
xchg
dec
iret
jae
jne
pusha
add
pop
pop
or
sub
or
sbb
sbb
pushf
loop
mov
add
dec
mov
es
mov
pop
out
mov
or
fnstcw
jp
loope
ficoms
adc
mov
pop
mov
adc
fs
jb
push
xor
sub
aad
cwtl
dec
out
outsl
es
daa
in
jns
icebp
add
push
or
lds
test
and
jp
sbb
inc
hlt
es
sub
mov
incb
dec
add
xor
jle
cmp
inc
sub
dec
cs
push
fiadds
dec
imul
dec
push
shll
pop
scas
fbld
test
mov
out
mov
test
xor
arpl
mov
xor
decb
xor
pop
jo
jmp
lea
insl
pop
jbe
pmaddwd
jecxz
mov
and
and
cmc
adc
mov
inc
xor
or
mov
mov
mov
test
sub
sbb
cltd
mov
in
stc
mov
test
xor
jp
push
outsb
pop
mov
xchg
out
fdivrl
insb
pop
mov
push
repnz
ds
mov
js
imul
sub
mov
in
inc
cmp
test
lods
add
leave
push
inc
in
jns
mov
lock
jmp
sub
adc
mov
stos
mov
xorb
mov
dec
dec
pop
inc
loopne
pushf
push
inc
push
insl
adc
sub
test
sarb
scas
repz
adc
xor
loop
imul
movsl
call
xrelease
jg
loop
jp
sub
push
dec
mov
lock
dec
mov
sbb
adc
in
movsb
xlat
mov
and
xchg
mov
loop
and
icebp
mov
jnp
mov
test
and
lahf
mov
ficoms
push
add
icebp
jge
popa
enter
loop
rcrb
stos
cmp
xor
cmp
not
rcrl
lcall
movsb
lds
push
out
xchg
loopne
dec
js
cmp
mov
jnp
push
inc
xchg
dec
mov
or
rcl
unpckhps
sbbb
sti
add
in
in
inc
or
fdiv
xorl
sub
lret
jecxz
xor
pop
inc
xor
lods
es
inc
fs
outsl
popa
add
mov
ds
sbb
add
jecxz
movlps
int3
dec
inc
inc
inc
jne
lods
sti
enter
push
mov
and
std
inc
cmp
pop
mov
or
enter
add
popa
fidivrl
cmp
xor
das
loopnew
or
sbb
call
lahf
sub
fildl
sbb
add
mov
jns
pop
dec
clc
out
push
xor
pusha
jp
test
cmp
mov
rorb
movsb
sbb
jae
xor
mov
jno
cmc
shll
ret
fcoms
ret
inc
xor
loopne
adc
movsl
jg
dec
sub
scas
nop
sti
mov
rorl
and
xchg
mov
in
lock
outsl
hlt
or
lock
push
in
and
jl
popf
mov
mov
inc
test
push
pop
lods
out
clc
int3
push
adc
sti
pop
pop
pop
fistps
wrmsr
int3
sub
negl
dec
sbb
or
cmp
int
in
mov
or
ljmp
cmp
and
movsb
xlat
repnz
push
cltd
sbb
scas
nop
rcr
push
into
jp
mov
lret
addr16
mov
xchg
stos
inc
jbe
int
into
sub
push
sub
xor
sub
out
mov
sub
mov
xor
daa
adc
mov
add
mov
sub
je
insb
mov
cmc
mov
inc
inc
es
imul
sarl
pusha
lcall
andb
jns
jbe
nop
movsb
ss
adc
push
shl
push
lcall
andl
pop
cs
in
and
jmp
fwait
cwtl
push
push
stos
dec
sbb
dec
cmc
cmp
lock
aaa
sub
loopne
mov
rcr
push
aas
jge
push
xchg
arpl
add
dec
sbb
call
push
pop
cmp
outsl
sar
nop
cmpb
inc
repnz
js
push
data16
dec
rorb
in
out
push
mov
test
mov
nop
jge
mov
inc
jle
movsl
enter
lock
in
xchg
in
xchg
inc
mov
lahf
outsl
scas
push
or
jecxz
ja
pop
loop
add
pop
jge
negl
cmp
dec
push
jne
jns
sub
dec
jo
xchg
add
aad
loop
cwtl
idivl
in
pop
scas
imul
sbb
lods
xor
push
inc
sbb
out
fprem1
cmp
out
adc
fcoms
inc
sub
or
shr
push
mov
in
dec
les
lds
movsb
popf
sbb
jl
jl
fwait
arpl
popa
or
xor
adc
inc
outsb
fs
mov
pop
jmp
test
add
fldt
push
push
xchg
dec
push
int
xor
sar
and
push
push
outsl
testb
dec
lock
xor
dec
lds
jg
mov
pop
sub
sarl
xchg
inc
cmp
jle
inc
add
lods
mov
xor
cld
in
cltd
nop
inc
mov
addl
callw
inc
dec
js
in
inc
test
fsubrl
add
pop
ret
movl
test
jns
ja
pop
add
aas
sbb
cmp
nop
push
pop
ja
pop
jne
push
sbb
dec
push
jecxz
fs
or
sub
flds
sbb
mov
fsts
xchg
loopne
push
and
dec
ret
das
jp
lea
dec
xlat
arpl
jns
insl
testb
cmc
rcrb
cmpsb
fcmovne
std
jle
push
shrl
sbb
pop
cs
sbb
sar
enter
mov
sbb
pop
sub
mov
inc
pop
into
mov
jnp
test
sub
mull
sub
or
lods
popa
cli
movsb
xchg
and
adc
test
clc
loopne
jo
xor
push
inc
pop
xor
fcoms
dec
cmp
jae
imul
push
test
mov
mov
xchg
stc
sbb
push
cli
sub
mov
in
jo
jae
sbb
dec
push
jnp
mov
cmp
movsl
sbb
rcrl
xorl
cmc
jmp
verw
mov
pop
fisttpll
xchg
pop
push
adc
daa
lods
push
adc
loopne
inc
mov
aam
pop
movsbl
jo
jb
jbe
in
xchg
mov
out
xor
add
adc
ja
mov
sub
inc
in
js
pop
xor
jne
shll
mov
lods
testb
jbe
nop
es
lcall
adc
addr16
xor
pusha
mov
dec
add
cltd
sub
sub
and
into
and
dec
ja
dec
dec
daa
rcll
inc
add
cmc
rol
mov
mov
pop
outsb
mov
addl
cmpb
int
pushf
xor
in
sub
aad
mov
and
jg
jecxz
inc
push
out
xchg
jl
std
lods
into
dec
lea
fistps
inc
jno
dec
pushf
gs
lret
mov
xchg
add
mov
dec
out
pop
pop
mov
adc
test
pop
sub
push
sbb
cmpsl
imul
pushf
outsb
jae
pop
aam
lahf
sar
or
call
push
push
dec
push
push
pop
jmp
loopne
movsl
out
aas
ret
dec
popa
jg
xor
subl
fisttps
repz
clc
pop
jno
icebp
stc
inc
repz
ds
xchg
mov
std
sub
dec
loop
lods
fbstp
push
rolb
addr16
imulb
loopne
mov
mov
mov
xchg
sub
or
pop
shl
sarl
adc
mov
cmp
lods
adc
lods
inc
sbb
outsl
or
mov
push
fldt
inc
push
adc
sbb
into
push
repnz
mov
push
int3
xlat
mov
xor
or
hlt
cs
js
inc
jbe
rcrb
movsb
xor
out
or
jge
or
testl
cmpsl
loopne
pop
iret
fadds
sub
call
mov
pushf
ja
inc
mov
mov
nop
mov
cli
jp
je
js
popa
cwtl
push
aas
push
sbb
xchg
jb
loopne
arpl
sub
ss
aad
xor
aaa
mov
push
ljmp
pushf
aas
mov
dec
int3
loopne
pusha
out
cwtl
cmpsb
cmp
ds
inc
xchg
mov
ja
imul
inc
or
mov
in
data16
lcall
or
gs
fs
scas
imul
inc
inc
adc
jl
cmp
mov
mov
std
out
ret
dec
es
xor
shll
or
jae
mov
ds
jnp
jae
mov
repz
sbb
hlt
aam
dec
cmp
adc
or
int
inc
out
sti
jno
push
adc
pushf
add
mov
dec
adc
adc
xchg
test
jmp
xchg
mov
add
lahf
fcmovnb
xchg
dec
pushf
xacquire
ret
test
aam
ret
ret
mov
cmpsb
xchg
lahf
xchg
sarl
out
inc
sbb
bound
mov
sub
jp
sub
cmp
rorl
iret
xchg
adcb
dec
into
leave
sub
or
jg
fs
xchg
push
push
push
mov
lock
jns
cld
xchg
jnp
xor
imul
push
mov
mov
out
and
aaa
dec
jge
and
lods
jo
sbb
sbb
cmp
and
pop
sbb
adc
fisttpl
lods
add
xchg
out
sti
out
fisubs
movb
mov
mov
repz
in
jl
loop
movsl
enter
jb
or
mov
pop
fsubrs
insl
in
add
stos
or
ja
push
mov
sub
inc
add
jmp
push
hlt
cli
mov
ds
outsl
in
inc
ja
pop
sub
in
jmp
call
pop
outsl
cmp
pop
jae
insb
aas
dec
cmpsl
daa
or
movsl
loopne
popf
inc
into
sub
dec
cwtl
add
cmpsl
fs
and
adcl
xor
hlt
in
cwtl
clc
xchg
and
dec
sti
sbbl
ds
cmp
sbb
mov
inc
or
rcll
decl
xchg
popa
mov
dec
stos
sbb
xchg
addl
inc
xchg
jno
daa
cmp
push
cli
sar
mov
outsb
push
popf
imul
push
inc
popa
pop
fbld
fnsave
lods
mov
sub
arpl
push
lods
pop
xchg
xchg
or
adc
push
nop
add
loope
mov
nop
mov
push
shlb
jnp
out
fdiv
fists
sarl
decb
pop
lcall
clc
dec
dec
xor
cltd
dec
pop
fs
inc
mov
repz
js
xchg
shrb
sbb
rol
add
cmp
pop
jmp
sbb
mov
test
jmp
mov
inc
mov
inc
xor
movsl
jle
jb
js
scas
and
aad
repz
cs
in
adc
enter
nop
xchg
adc
ds
test
mov
dec
fs
lcall
push
cmp
pop
sbb
inc
daa
scas
or
push
cltd
int3
cmp
lock
and
inc
adc
cmpsl
dec
aad
sub
push
xor
icebp
push
fwait
xchg
rolb
jns
mov
call
and
push
adc
ja
xor
iret
shlb
int3
incl
push
adc
mov
lds
loopne
cs
jl
icebp
and
dec
cmp
jecxz
and
xchg
je
enter
call
xchg
and
shlb
lcall
sub
aam
pop
fdivr
cmp
or
dec
adc
out
pushf
test
pushf
sub
imul
push
xchg
xor
fimuls
out
in
sahf
add
adc
xor
ds
sub
decb
in
pop
aam
dec
xlat
iret
shlb
jno
adc
movsl
add
dec
adc
and
mov
or
adc
test
push
xchg
push
and
into
mov
xchg
insb
std
mov
xor
cmp
sarb
push
fsubrs
inc
lea
sbb
mov
inc
lds
mov
insl
aad
shlb
push
mov
sahf
sbbl
adc
jae
aaa
aam
notl
push
rcrb
pop
std
pop
popl
mov
repnz
fimull
imul
sbb
sub
mov
jbe
xor
int3
push
pop
rclb
xchg
aad
clc
call
mov
ret
push
fisubs
shll
sbb
repnz
and
cmp
adc
lds
aaa
mov
test
push
leave
jg
popa
cmp
fsubrp
ja
jo
mov
inc
nop
sub
jnp
scas
loop
lahf
fnsave
outsb
pop
rclb
pushf
fisubs
nop
cltd
lods
inc
sbb
shrl
lahf
mov
adc
dec
inc
lahf
sbb
ss
jge
xchg
out
push
mov
out
add
adc
mov
into
pop
lods
push
cmc
movsl
and
fstpt
and
and
push
ret
cmpsl
rcr
mov
mov
cwtl
sti
addb
add
aas
shlb
mov
xchg
jns
cmpsb
pop
popa
into
xchg
mov
mov
mov
jbe
into
mov
mov
popf
mov
mov
mov
ss
fisttpl
cmp
mov
cmp
xchg
das
mov
nop
cltd
jg
push
jae
dec
movl
inc
sbb
into
jmp
jb
movsb
or
dec
dec
aas
inc
stos
cmpsb
out
inc
imul
popa
inc
scas
std
push
mov
mov
std
bound
mov
dec
subl
add
sti
jle
lahf
cs
adc
jp
pop
xor
loop
cli
repnz
arpl
pop
mov
pop
cmp
inc
divl
mov
push
adc
jge
sub
sub
add
add
out
pop
mov
cmp
test
adc
push
mov
sub
inc
lret
mov
sbb
scas
mov
pop
out
mov
adc
out
dec
or
sbb
stc
inc
mov
mov
ljmp
inc
lds
mov
lret
sbbl
xlat
std
clc
or
shl
jns
mov
aad
lea
aas
shrb
pop
mov
xorl
sarl
lds
fldpi
push
das
mov
icebp
lret
sbb
jg
lret
fidivs
xchg
pop
test
pop
or
jecxz
dec
sbb
pop
or
inc
xchg
sub
pop
je
jle
shr
bound
jp
mov
fsubrs
loop
cmp
loope
fldl
and
stos
mov
int3
icebp
int3
lahf
mov
cmpl
pop
inc
movsb
mov
and
test
jl
je
dec
cmp
in
out
das
daa
mov
and
into
leave
sbb
add
mov
imul
fimull
jae
sbb
add
mov
jge
mov
std
out
je
inc
ja
cmc
cmp
inc
sub
dec
into
leave
aas
ljmp
js
pusha
dec
mov
lret
cmp
inc
xchg
mov
mov
orb
cmpsl
ja
mov
xchg
bound
xchg
fcompl
mov
and
jae
packsswb
xor
or
daa
pop
pop
jge
jno
mov
std
xchg
sqrtps
add
jp
rcr
movsl
mov
jmp
ds
inc
test
inc
leavew
lods
insl
insb
push
call
pusha
ljmp
les
test
rcr
hlt
dec
jecxz
popa
lret
das
aam
int
movb
or
lods
pop
jmp
aam
push
pop
sarb
bnd
std
push
mov
push
sub
add
fsub
imul
cli
scas
sbb
push
and
scas
outsb
loop
pusha
cmp
inc
imul
jmp
dec
daa
dec
inc
cld
out
mov
pushf
add
inc
pop
mov
mov
dec
fdivrs
ds
inc
jb
mov
cmpsb
lds
jne
repz
or
or
add
repnz
fcmovnb
pop
imul
or
and
in
mov
out
out
push
mov
repz
icebp
clc
test
das
push
jle
leave
pop
jne
test
aas
jo
push
xor
xchg
or
xchg
mov
mov
mov
mov
dec
mov
stc
cli
lret
sahf
and
in
movsb
out
mov
mov
xor
pop
sub
iret
lds
mov
stos
fidivl
push
pop
sbb
es
lea
pusha
ret
faddl
mov
mov
out
jecxz
hlt
ret
or
sub
jp
icebp
cmpsl
fchs
xor
cltd
pop
xchg
dec
test
jo
loop
gs
push
int3
roll
test
xchg
loop
dec
stos
mov
push
push
push
and
inc
jp
sbb
lret
int3
outsl
push
aas
bnd
fwait
inc
sbb
xchg
jne
cld
test
mov
int
repz
in
cmc
and
xchg
inc
lock
lods
or
cld
jne
dec
pop
test
pop
xchg
outsl
mov
dec
out
inc
insl
sub
filds
out
pop
stos
jl
stc
push
hlt
and
jns
insb
pop
bound
cmp
mov
cli
mov
and
pushf
mov
push
clc
scas
test
lcall
or
push
dec
adc
adc
add
push
sbb
dec
fcoml
inc
adc
pop
jmp
sbbb
adc
jns
mov
cwtl
insl
adc
stos
scas
or
dec
rcl
enter
jno
inc
es
lds
xor
fcmovnbe
inc
idivb
shll
out
sub
jle
jns
mov
xor
mov
fwait
mov
mov
jo
mov
cltd
sub
cld
xlat
outsl
sarb
xchg
pusha
inc
cmp
bound
loop
test
sub
cmp
jae
mov
mov
mov
adcb
iret
sub
push
pop
je
iret
mov
xchg
mov
ret
bound
fisubrs
pusha
fs
mov
xor
inc
out
fs
rorl
pop
stc
dec
insb
test
lret
js
cmc
cmpb
push
xchg
push
and
sbb
push
hlt
inc
push
pop
iret
cli
xor
dec
xor
dec
pop
xchg
sub
nop
or
pop
and
nop
add
arpl
adc
add
xchg
rcll
xor
popa
pop
inc
jno
es
push
fwait
je
subl
cwtl
outsl
arpl
push
dec
cld
and
push
sub
ja
jmp
xchg
xor
add
xor
xchg
jno
mov
mov
xor
and
std
lret
and
push
repz
imul
sysret
aas
inc
cmp
enter
cmc
and
outsl
mov
mov
mov
fwait
repz
push
js
ret
pop
jo
pop
lahf
inc
mov
ret
pop
mov
fldcw
lret
push
and
sbb
iret
push
testl
dec
dec
mov
fwait
bound
loopne
stos
push
xor
pusha
mov
xchg
xchg
sbb
jb
in
bound
adc
sub
or
inc
dec
fldenv
adc
push
mov
inc
jb
inc
inc
jg
outsl
dec
ret
fs
enter
jle
push
fimull
sub
push
cmp
scas
sbb
repz
add
cmpsb
add
out
add
fwait
push
out
mov
xor
dec
mov
addr16
sahf
pushf
mov
dec
shlb
in
xor
inc
leave
inc
xchg
stos
push
adc
dec
scas
pop
daa
pushf
mov
ja
sub
sarb
xor
out
adc
mov
push
mov
roll
test
sub
pop
out
arpl
mov
imul
mov
pop
inc
and
pusha
scas
jnp
dec
mov
pop
fisttps
jecxz
insb
sub
cmp
cmp
out
cmpl
jne
std
mov
bound
out
in
sub
addr16
jo
mov
bound
scas
jae
sti
adc
repz
mov
push
lcall
fs
add
adc
xchg
fucomi
in
movsl
mov
mov
aaa
lock
xchg
aas
and
gs
fwait
adc
cmp
xchg
mov
sbb
bound
in
leave
aam
adc
sub
fsubr
cwtl
adc
stos
shl
fs
leave
adc
int3
mov
pushf
and
mov
jmp
cwtl
and
jno
pop
pop
icebp
cmp
pushf
sub
int3
pop
scas
xchg
jnp
add
and
leave
push
xchg
lds
fistps
test
jnp
bound
lahf
xor
lds
ret
aam
add
jmp
inc
sbb
fsubrp
jmp
sub
push
popf
jo
add
dec
push
inc
sub
and
adc
pop
mov
add
or
pop
mov
fmul
rorb
nop
and
lds
cli
cmpsb
ficoms
in
mov
mov
popf
sub
or
outsb
mov
xor
into
test
leave
pushf
lea
xor
mov
add
inc
mov
outsb
xchg
mov
and
dec
icebp
ret
lret
mov
sub
or
js
shlb
outsl
dec
je
mov
pop
rcll
int
daa
mov
adc
sbb
lock
rclb
es
aad
test
mov
mov
es
hlt
ljmp
dec
andb
dec
cltd
cmp
leave
xchg
push
enter
xlat
mov
xchg
das
mov
mov
insb
jecxz
movsl
jns
iret
fwait
xor
adc
mov
pop
mov
sti
daa
js
mov
cltd
daa
repz
add
out
in
add
cli
sbb
push
cmpb
pusha
adc
push
outsb
sbbb
cwtl
lea
int
and
jp
mov
int
loopne
test
pop
lods
cwtl
add
mov
das
pop
pop
pop
cmp
mov
andl
popa
stos
xchg
lea
shl
loop
add
js
gs
fldcw
shlb
repnz
std
test
test
mov
push
pop
je
inc
cs
dec
int
dec
jge
add
fildll
mov
mov
pop
sarl
pop
cmc
insl
in
mov
push
in
out
fisubrs
xor
jge
pop
sub
lahf
adc
js
push
mov
push
add
imul
mov
push
dec
cmp
ja
loopne
mov
mov
dec
dec
jno
xchg
aam
ror
mov
repz
mov
jne
roll
hlt
or
jl
enter
pop
shlb
push
and
lock
mov
or
pusha
hlt
mov
push
jp
std
or
xchg
decb
dec
cmpsl
sub
je
pop
and
les
cmp
lret
test
adc
mov
sub
arpl
mov
out
add
test
lea
jl
iret
in
ret
jge
std
jmp
je
adc
add
aas
sbb
dec
addr16
inc
cmp
xchg
mov
lret
add
loop
ja
mov
mov
int
or
sub
cmp
xor
adc
in
ficomps
push
pop
cmp
xor
dec
push
inc
dec
or
iret
fildl
hlt
incb
push
notl
int
pop
xchg
dec
imul
cltd
hlt
pop
mov
pop
scas
pop
test
xor
int3
popf
or
sahf
xchg
jne
jnp
cmp
dec
arpl
clc
in
adc
pop
add
cli
sbb
sbb
test
xchg
fidivl
fucomp
aas
cwtl
loopne
and
mov
cwtl
push
or
cwtl
mov
or
ss
dec
js
pop
cli
jno
or
xor
jnp
add
push
jge,pn
gs
sbb
call
mov
mov
dec
or
sahf
inc
jg
pop
leave
or
inc
mov
jge
shlb
lret
ja
in
leave
sub
xchg
mov
pop
ss
sbb
inc
mov
sbb
inc
jnp
xchg
div
xor
cmc
icebp
es
jp
push
push
or
mov
push
lahf
adc
lds
push
dec
sbb
scas
xchg
leave
push
sbb
stos
std
dec
push
inc
ljmp
repz
mov
lods
mov
pop
repz
pusha
repnz
movsl
in
mov
aam
repnz
js
sub
xchg
or
cmpsl
or
xchg
mov
mov
aad
pop
inc
out
adc
ds
jl
cmp
ljmp
sub
es
dec
sub
ret
mov
cmp
or
orl
inc
jns
test
ljmp
das
mov
jne
scas
clc
sub
mov
outsb
pop
mov
mov
push
out
lret
gs
bound
out
mov
pop
repz
je
lea
fwait
call
dec
mov
fsubrl
bswap
jnp
dec
out
cmpl
add
scas
lret
mov
inc
jge
fistps
mov
mov
pusha
and
imul
je
and
insl
popa
push
lods
movsl
sub
cmp
sahf
in
ds
jge
clc
imul
into
gs
mov
fisubl
push
lahf
icebp
mov
xchg
gs
push
ret
xchg
out
jmp
into
daa
or
jecxz
test
xor
testb
ficomps
adc
sbb
mov
sbb
xchg
imul
sbb
jae
in
ds
testb
mov
jmp
into
stos
inc
mov
clc
test
pop
stos
jo
add
jmp
jb
fwait
mov
fdivl
xlat
imul
mov
nop
adc
xchg
mov
scas
push
stos
mov
nop
mov
and
call
ljmp
aam
push
inc
dec
adc
jge
or
mov
sbb
ror
or
call
xor
lcall
sub
js
lret
lcall
lret
loop
mov
fidivrl
mov
shll
mov
movsl
lea
pop
sub
or
scas
test
movsb
lcall
or
jo
loopne
mov
jns
test
leave
mov
jbe
xor
daa
add
add
filds
jno
out
stos
lods
pop
pop
outsb
adc
jge
cmc
rolb
sbb
push
mulb
inc
imul
sbb
sub
ret
fcmovne
dec
cld
popf
mov
decb
movsb
jl
cs
aam
xchg
subl
dec
xor
mov
sub
fidivs
adc
xor
sbb
mov
jno
pushf
mov
bnd
inc
and
in
scas
movsb
push
stc
addb
and
aad
pop
clc
pop
pop
les
out
xor
mov
mov
or
in
mov
and
loopne
pushf
xchg
mov
push
push
andb
mov
push
cltd
xchg
dec
lret
mov
pop
cli
daa
push
xor
inc
in
push
push
cmc
mov
xor
js
sub
je
mov
out
add
nop
jno
aam
out
nop
push
mov
dec
pop
push
and
cltd
jnp
cmp
adc
or
mov
scas
mov
cltd
jl
adc
inc
shll
xor
inc
in
dec
test
mov
mov
mov
sti
int3
stos
dec
data16
mov
scas
inc
ds
add
xor
mov
inc
addr16
sub
in
aad
inc
or
mov
cmp
xor
add
ss
popf
lret
cmp
inc
outsl
jmp
leave
mov
jbe
pop
push
and
cmp
das
xor
stos
xor
jbe
or
adc
out
add
add
pushf
insl
mov
lret
jl
aad
xor
mov
inc
mov
arpl
lds
push
daa
pop
mov
hlt
daa
adc
push
fdivrs
pop
push
mov
loop
in
icebp
cwtl
cmp
push
movsb
arpl
mov
roll
mov
lea
sub
arpl
xor
fs
xor
fiadds
push
cs
mov
cmpsb
hlt
sbb
loopne
mov
dec
and
xchg
xchg
inc
fwait
mov
test
jmp
xchg
cmp
sbb
imul
ljmp
js
clc
les
lret
jbe
mov
out
add
jo
fwait
sbb
aaa
sub
sub
orb
mov
inc
mov
sahf
repz
mov
arpl
lds
cmpsb
mov
dec
pop
mov
js
aad
bound
mov
sahf
fs
fcomps
bound
jp
and
adc
fwait
out
ficompl
rcrl
ret
add
aas
dec
fdivrs
and
fisubrs
jle
movsl
shll
xorl
and
cmp
inc
pop
cmp
iret
cld
xor
stos
fdivp
and
adc
xor
sub
sub
push
push
jnp
push
andl
outsl
pop
mov
sbb
mov
mov
enter
loop
cs
loopne
jno
stos
xor
shl
fs
add
divps
popa
sub
pop
mov
icebp
adc
or
cmp
movsb
cmp
popl
popf
add
dec
cmpsb
push
pop
add
out
push
or
ljmp
loop
sarl
inc
add
jo
out
ds
adc
pop
mov
adc
dec
xchg
and
fwait
jo
test
or
pop
movl
jb
push
imull
pop
test
cmpsb
lret
push
mov
outsl
mov
jle
add
insl
arpl
jne
jbe
mov
add
mov
mov
sbb
andl
mov
es
test
push
sub
movsb
shld
int3
dec
outsb
mov
stos
adc
fsubrs
ja
sti
cmp
mov
lret
xchg
xlat
mov
js
addr16
andb
ljmp
pop
out
fimull
push
pop
pushf
test
jae
push
mov
sub
jne
xor
jbe
vpaddb
les
jno
xor
mov
pmuludq
aaa
sub
test
jne
sbb
orl
and
sub
or
addl
or
incl
dec
mov
inc
addb
movd
cld
mov
mov
cmc
mov
mov
aaa
mov
inc
xchg
pop
mov
data16
jg
pop
mov
jne
js
jmp
ficompl
sbb
push
jb
inc
cmpsl
ds
sbb
jne
in
mov
in
sarb
popa
pop
aam
jbe
sbb
and
test
xor
push
ja
add
xlat
mov
ss
jecxz
jp
mov
cltd
inc
repnz
ds
mov
push
insl
sbb
xlat
out
cltd
xchg
cmp
bound
andb
lahf
jne
rcrb
cmp
xlat
ss
pop
les
fs
int3
int
and
inc
ds
or
push
inc
or
sbb
xchg
push
popf
ret
or
notl
sbb
sub
arpl
mov
inc
mov
adc
add
je
inc
mov
add
test
insb
ds
push
rcl
int
mov
or
ljmp
jbe
mov
pop
fldt
mov
insb
cmp
mov
cmpsl
xchg
dec
sbb
int3
or
and
mov
mov
rclb
mov
push
fyl2x
dec
fstpl
out
push
cmp
xchg
scas
mov
jns
mov
xchg
inc
sbb
aad
jmp
mov
push
lret
je
lods
inc
imul
pop
fidivrl
es
lret
pop
mov
sub
pop
add
outsl
and
or
cltd
push
xchg
cmc
outsl
cmpl
fabs
je
adcb
fidivrl
vxorps
cmp
fimull
add
and
fdivp
sti
aad
mov
divb
in
lock
xor
cmpsb
xchg
xrelease
cmc
loope
insl
mov
sbb
jns
sarb
push
pop
add
mov
add
lea
mov
imul
fucom
cli
sti
lcall
mov
sub
dec
fistpl
inc
add
mov
dec
loope
inc
lahf
cld
mov
add
xor
and
jo
mov
mov
mov
or
sbb
inc
in
hlt
inc
xor
sbb
out
mov
decl
ljmp
pop
cmp
lock
push
xlat
and
incl
popa
push
iret
stc
aam
cmp
frstor
fld
adc
xchg
mov
pop
addr16
aad
jmp
and
aad
leave
sahf
shl
arpl
jl
rol
xor
xchg
mov
mov
cmp
lret
jb
adc
mov
decb
pop
xor
adc
ffreep
push
cli
std
inc
push
repz
pop
xchg
sbb
add
mov
cmp
dec
fstpl
push
mov
fbstp
es
pop
shlb
pop
mov
mov
dec
popa
dec
push
jge
pusha
push
lock
fs
rorb
insl
sbb
xchg
inc
push
cmp
das
xor
in
je
adc
mov
mov
push
dec
sbb
sub
scas
lcall
pop
les
repnz
mov
xor
ja
push
repz
add
or
xor
repnz
mov
xor
mov
push
dec
pop
mov
sbb
xor
sbbb
sbb
inc
xchg
push
iret
hlt
mov
jle
in
add
scas
gs
or
cltd
hlt
popa
test
mov
add
pop
insb
xor
daa
out
scas
mov
jle
mov
mov
dec
call
xor
mov
out
fsubrs
cmp
inc
ss
popl
fxch
mov
lods
js
sarl
and
mov
jp
movsl
imul
sub
add
mov
fistpl
mov
ds
mov
repz
pop
adc
adc
scas
pop
jg
lahf
cmp
mov
or
xor
and
sbb
mov
xor
je
push
subl
xchg
pop
lahf
mov
movsb
dec
mov
push
popf
sub
test
ja
movsl
std
jl
scas
fiadds
out
pusha
insb
scas
hlt
inc
out
sbb
mov
xchg
dec
minps
popf
and
and
ret
pushf
out
fistpll
sub
pop
mov
lcall
pop
pop
pop
mov
repnz
mov
fildl
dec
insl
shrl
sahf
mov
scas
insl
sub
inc
xor
push
jge
insb
imul
jae
insb
fbstp
add
push
push
aam
ret
mov
mov
mov
inc
orl
repz
adcb
sbb
pusha
pop
fsub
adc
adc
stc
push
stos
adc
filds
adc
jbe
test
or
and
or
and
or
cmc
cmpb
out
aaa
xor
mov
sarb
cmp
scas
jecxz
xor
in
dec
xchg
jmp
loop
xlat
adc
xor
ret
adc
jge
out
jnp
add
inc
das
cmp
sub
pop
outsl
insb
mov
in
outsl
inc
pop
and
cmp
out
shlb
mov
loope
fsubrs
cmp
cs
sbb
enter
fcmove
ficompl
leave
mov
int3
fildl
cmp
sbb
lcall
ljmp
xor
dec
sub
bnd
jp
mov
or
cmc
pop
dec
mov
mov
cmp
sub
frstor
and
fadd
jge
jp
aaa
dec
lcall
dec
mov
adc
arpl
fs
adc
icebp
adc
mov
cmpsl
adcb
leave
les
dec
test
sub
dec
mov
lods
dec
push
pushf
push
and
mov
dec
addl
mov
fbstp
or
mov
adc
mov
gs
push
pop
pop
dec
dec
and
loope
and
pop
mov
fwait
lds
jnp
xor
adc
mov
jbe
xchg
push
add
mov
das
xchg
sahf
xchg
lahf
imul
push
mov
cmpsl
out
aam
dec
data16
out
clc
into
jns
out
cltd
movsl
fcmovnu
das
test
mov
aam
loopne
dec
ds
mov
and
or
mov
fisubrl
gs
fadd
sarb
jbe
dec
sub
lds
es
out
rol
or
jge
and
adc
std
outsl
bnd
es
pop
lds
daa
adc
js
arpl
sub
fimuls
add
arpl
jbe
sbbl
adc
push
mov
pushf
out
cwtl
cmp
int
fistpll
inc
inc
mov
mov
jnp
nop
mov
sarl
or
mov
or
inc
outsl
pop
mov
aam
xchg
dec
adc
mov
enter
jno
in
cmc
movsl
rolb
jae
mov
cli
nop
ret
jp
or
sbb
push
pop
into
adc
jmp
and
jmp
lcall
out
jge
sub
mov
dec
inc
sub
hlt
mov
repnz
sbb
or
les
jae
fldenv
cmp
aam
repnz
inc
jp
test
mov
cs
mov
cmpb
shlb
repz
in
pop
and
xchg
lods
lods
popf
jecxz
push
mov
mov
jge
sbb
adc
and
dec
fs
shr
and
fsubrl
test
jb
rorb
test
pusha
mov
push
fsub
pop
scas
sub
mov
pop
icebp
cmp
mov
pusha
cmpsb
and
mov
xor
cmpsl
stc
lock
mov
popa
leave
mov
add
pop
xchg
pop
fnsave
arpl
mov
repnz
or
push
test
ret
pop
dec
int
stos
out
lds
pop
dec
rcll
mov
sub
stc
jns
cli
in
shll
jb
loope
rcl
out
inc
sbbl
loopne
xor
adc
adc
js
jecxz
sti
add
aaa
jl
mov
in
fnstenv
ds
sbb
xor
cmpsb
loope
loope
jge
addl
pop
out
loopne
or
mov
mov
sbb
cmpsl
xor
jle
ret
add
aas
into
add
cmp
and
mov
xor
or
push
push
cs
stc
pop
test
dec
arpl
mov
push
mov
inc
cmp
ret
cmp
fsub
out
sti
or
or
cwtl
push
ja
xor
cmp
dec
xlat
xor
xlat
xchg
je
or
pusha
push
je
or
out
inc
fldenv
inc
in
or
cmpsb
popf
push
test
adc
clc
fwait
jecxz
jae
push
cvtdq2ps
mov
pop
in
or
add
lods
ljmp
call
inc
mov
sub
push
push
sarl
test
scas
popa
or
arpl
shll
add
jle
mov
mov
loope
loop
sbb
and
lea
pop
out
sarb
out
mov
popf
shrb
xchg
std
insl
dec
loopne
fistps
ret
jo
cmp
sbb
enter
mov
pushf
push
sub
add
mov
or
push
movsl
cmpsb
cld
in
adc
insb
mov
bnd
adc
rorl
inc
adc
lea
nop
push
out
push
aam
dec
adc
and
aaa
outsb
pop
mov
test
mov
cmp
ljmp
shll
daa
insl
aad
mov
sbb
mov
and
xchg
dec
stc
adc
lret
xchg
add
ss
jg
fisubs
pop
mov
push
jb
into
xchg
ret
jp
mov
inc
cmpsb
les
dec
stos
dec
dec
std
dec
sbb
outsb
or
add
push
sbb
pusha
lods
jo
nop
fcoms
je
cmp
sahf
xchg
push
add
ja
xor
sub
int
add
popf
push
xchg
mov
cmp
xor
insl
pop
or
sahf
sbb
push
jl
xlat
jbe
roll
nop
fistl
or
dec
fstl
ds
inc
imul
hlt
shlb
lock
loopne
cli
test
les
pushf
cmc
add
dec
sarl
adc
es
in
cli
pop
ljmp
push
dec
lahf
addr16
push
int3
pop
popf
adc
mov
add
ss
lahf
in
cld
ror
jmp
lods
add
push
xor
cli
aad
stos
aaa
mov
ds
ficoms
cmpsb
sbb
aaa
gs
mov
popa
inc
xor
push
loopne
xchg
mov
in
mov
ret
clc
jae
pminsw
cmp
and
sti
xchg
xor
sub
in
add
rcrb
pop
xchg
add
jle
sbb
push
add
lods
mov
sti
aaa
mov
cmp
cmpb
jno
push
lods
cmovno
adcl
outsl
lcall
jge
fcompl
mov
sub
sub
cmp
jae
inc
call
mov
ds
pop
push
ja,pn
orl
cmc
shl
call
stos
push
sbb
gs
call
add
push
loop
dec
push
scas
out
push
mov
jge
insl
push
dec
pop
sub
negl
or
inc
aaa
jp
cmc
sub
cmp
ds
and
ljmp
int
xor
lahf
cmc
adc
imul
mov
in
sbb
push
std
adc
cmpsl
sbb
add
jmp
push
add
mov
mov
or
gs
push
inc
test
in
repz
push
mov
test
lods
andl
xchg
xlat
sub
xor
sub
loop
into
mov
paddw
subb
notb
frstor
jne
mov
push
popw
divl
fstl
je
and
mov
iret
push
call
popa
jae
pop
jge
sub
bound
data16
push
jg
es
xor
and
or
sbb
popa
sbb
adc
and
lock
fbld
xchg
daa
dec
into
adc
aam
mov
sub
arpl
sbb
jecxz
jle
push
sbb
out
test
cwtl
cltd
adcb
int3
jle
jge
mov
outsb
or
or
dec
push
push
cmp
faddl
in
imul
inc
inc
xacquire
jns
jns
add
iret
aad
mov
and
jbe
int
dec
cmc
mov
sub
outsb
fwait
in
mov
fdivrl
mov
aas
dec
xor
xlat
inc
out
inc
jge
ret
cmp
inc
mov
fbstp
shll
pop
fucomip
subb
sahf
pop
aas
ficomps
bound
sub
push
jg
sbb
or
scas
out
add
popa
daa
adc
fsubrs
cmp
stc
mov
mov
push
sahf
ds
shlb
pop
std
lret
fcmovne
les
outsb
inc
int
es
bound
jecxz
and
push
push
enter
jno
pop
cmp
pop
insl
rep
mov
lret
lock
mov
inc
ss
mov
lock
inc
cmp
jge
xchg
sahf
jmp
out
iret
addr16
ja
push
scas
movl
fidivrl
iret
cltd
xor
cmp
lds
frstor
movsl
incb
pop
cmpsb
cmp
mov
mov
sub
jns
cmpsl
inc
and
mov
scas
out
push
inc
dec
fstps
or
sahf
add
add
or
or
add
ljmp
cli
movsl
idivl
out
je
sub
and
xchg
mov
enter
cld
mov
push
mov
jge
mov
mov
les
cmp
sbb
ds
xor
sub
add
mov
and
nop
scas
test
mov
sub
sbb
push
jae
xchg
add
cmpsl
iret
add
mov
mov
testl
into
inc
adc
repz
sarb
xchg
inc
test
cwtl
aas
hlt
add
push
movsl
cmp
pop
dec
add
push
push
stos
aaa
mov
pushl
push
and
mov
mov
popf
push
and
aad
stos
pushf
sti
push
inc
sti
sti
xchg
std
shlb
ret
ret
pop
mov
add
int
add
scas
push
lea
push
pop
scas
add
enter
mov
sub
pop
pop
outsl
mov
mov
pushf
adc
sbb
add
fisttpll
mov
sbb
sbb
lcall
sbb
call
add
mov
jecxz
inc
clc
pop
inc
stc
push
sbb
sbb
rcll
pushw
lods
pop
aam
xchg
add
loopne
scas
leave
push
push
xchg
shrb
pop
lret
pop
xorl
mov
add
cmpsl
xor
adc
sbb
popf
pop
add
popa
stc
xlat
jge
mov
push
mov
out
adc
jae
add
cmp
lock
pop
pushf
cmp
push
inc
shrb
orl
and
add
ja
jno
add
mov
and
mov
jmp
pop
insb
mov
push
jle
jae
test
je
or
lea
cmp
pop
cli
fdivr
je
cli
repnz
daa
scas
gs
adc
in
call
shlb
jge
add
push
dec
out
mov
shrb
xchg
call
out
mov
jmp
aad
jae
repnz
or
repz
jb
scas
jne
shlb
in
rcll
pop
leave
movsb
outsl
xor
dec
stos
bswap
ja
push
pushf
cltd
ficompl
std
mov
lret
dec
out
sbb
scas
push
je
jp
sti
lret
lods
dec
loop
xchg
lret
mov
stc
xor
cmovle
test
stos
or
or
scas
mov
pop
and
mov
jmp
xor
mov
xchg
adc
sub
mov
loope
int
inc
jg
out
mov
xchg
test
jnp
mov
sub
mov
call
test
pop
push
das
xor
leave
pop
pop
scas
imul
xor
lahf
into
cli
sti
in
cltd
rclb
xchg
dec
loope
pop
aad
mov
popa
or
add
add
cmp
mov
jge
notl
cli
fidivs
cmp
inc
xor
mov
add
das
xchg
ficoml
jmp
sti
sarb
shr
js
shlb
pop
imul
repnz
adc
cld
dec
sub
xchg
repnz
movl
mov
pop
xchg
push
or
jne
sub
adc
pop
outsl
flds
movsb
test
xlat
or
mov
das
dec
sbb
movl
sub
xor
xor
das
test
inc
fdivrs
test
push
cltd
ret
xor
outsl
pop
call
jbe
mov
cli
dec
xor
xor
ss
pop
dec
jecxz
stc
and
cs
out
mov
inc
decl
add
out
cltd
mov
cwtl
fwait
lods
cmp
data16
cmp
test
push
adc
jo
int3
jae
repz
lods
shl
and
movl
sub
xor
ds
pop
ret
mov
cli
movsb
dec
lret
jmp
push
fcmovnu
test
lret
stos
sub
push
and
xchg
mov
sbb
adc
ret
out
pop
lods
cmc
lret
es
cmpsb
sub
xor
enter
test
cmpb
sub
lock
xchg
xchg
addr16
xchg
push
jg
push
xchg
xchg
aaa
ud2
or
out
cld
jle
call
lods
sub
xor
test
mov
cmp
int3
inc
inc
fsubr
add
or
or
shl
js
cwtl
test
pop
sti
pop
test
popa
popf
mov
fwait
adc
lock
xchg
cmp
mov
mov
cwtl
dec
mull
xchg
pushf
fdivs
in
es
dec
lret
lock
fsubs
shll
xlat
scas
push
sahf
fldt
in
rolb
repnz
push
push
jp
call
pop
out
pop
std
in
lcall
fldt
js
jp
or
jo
js
ja
mov
push
cmpsb
mov
in
xor
mov
out
pop
inc
add
jbe
lea
insb
and
mov
fsubr
push
push
leave
lods
stc
add
jecxz
or
in
push
cmp
pop
das
cmp
lods
mov
sbb
xchg
test
mov
add
push
adc
push
insl
xor
pop
mov
mull
lods
pop
movsl
mov
fmull
flds
enter
push
pusha
repnz
cwtl
hlt
adc
add
mov
repz
nop
lods
adc
jp
inc
xor
dec
adc
push
dec
test
shl
outsl
mov
cmpxchg
add
mov
mov
cmp
iret
push
add
adc
or
js
pop
inc
outsl
cmpl
sub
xor
into
lahf
orl
or
stos
add
lds
insl
aas
lret
shl
insl
push
mov
dec
aam
mov
cli
and
das
cli
and
push
sub
aas
out
cmp
pop
jno
cmp
jns
mov
out
sbb
stc
mov
and
sarb
mov
std
pop
cmp
std
mov
jmp
and
movsl
loop
or
cwtl
test
mov
dec
and
sbb
sti
add
cs
sub
das
mov
data16
nop
in
mov
mov
std
and
imul
ss
bound
call
lcall
sub
push
mov
scas
pusha
pop
nop
cmp
outsl
fstps
xlat
xchg
cld
jo
push
xlat
pop
out
mov
or
cmp
outsb
test
xlat
mov
lahf
jle
sub
push
add
mov
inc
sbb
call
xchg
bnd
nop
jmp
mov
lahf
jg
adc
fmul
stos
mov
pop
xor
xchg
decl
outsl
mov
sbb
push
adc
cld
pop
test
rcrb
test
xor
cli
dec
jns
pusha
mov
push
insl
add
xchg
test
fnstcw
sub
and
cmpsl
movsb
addl
shrl
test
aas
xor
inc
and
sbb
cld
jne
or
js
pop
and
sbb
aaa
pop
iret
mov
enter
cmp
jne
popa
push
imul
into
push
mov
lret
push
test
jmp
dec
rorb
jp
xlat
outsl
rcll
js
lret
mov
jg
push
pop
sub
mov
ret
or
mov
push
shll
dec
test
fdivrp
les
dec
ljmp
mov
out
xlat
int
cmp
psllw
or
scas
mov
push
xor
lret
scas
mul
push
sbb
and
push
andl
fiaddl
adc
pop
sbb
aam
jbe
pushf
dec
js
rol
mov
test
push
adc
mov
adc
test
jp
push
sbb
imul
push
in
sub
lods
lods
addr16
jb
jle
icebp
pop
mov
js
imul
pop
inc
xchg
mov
cmp
pop
addl
lcall
mov
fwait
lea
sub
sub
sahf
xor
sarl
or
adc
and
lret
arpl
or
xchg
dec
pop
clc
and
inc
test
fdivrs
in
mov
dec
in
sbb
daa
cmp
in
lahf
in
clc
lods
repz
iret
bound
inc
mov
push
or
test
rorb
leave
mov
mov
push
push
sub
xchg
mov
fs
insl
movsb
pop
sub
outsb
xor
jmp
lcall
lret
insb
jb
lock
lret
int3
lock
fwait
jae
daa
sbb
and
lcall
or
mov
push
imul
jb
test
scas
lret
out
lods
and
jae
mov
les
lock
les
rolb
add
mov
lods
push
dec
cmpsb
and
cmc
ljmp
loop
mov
movsb
cmp
push
ljmp
push
sbb
aam
jmp
xor
pop
mov
js
dec
fidivrl
add
scas
cmp
cld
rcr
inc
pop
cmp
cltd
and
out
decb
jb
or
lock
mov
insl
dec
pop
dec
jmp
les
ficompl
cwtl
rolb
out
mov
fcompl
imul
dec
adc
arpl
and
roll
sbb
xor
sbb
mov
loope
enter
sub
bound
or
sbb
mov
mov
bswap
dec
xchg
cmp
mov
xchg
add
imulb
mov
insb
xchg
enter
add
imul
add
fisubl
cli
jmp
mov
out
ret
push
cltd
push
clc
int
outsb
imul
fmuls
sub
or
jbe
insl
shrl
out
mov
lds
andl
and
scas
inc
add
or
insl
rorl
mov
push
sbb
cli
push
cmpb
jecxz
rol
lds
jl
add
pop
jno
mov
jp
out
std
cwtl
jle
cmpsl
dec
pop
mov
iret
jmp
andl
mov
adc
mov
dec
gs
adc
cvtps2pd
ja
inc
mov
rcpps
and
adc
push
fwait
fs
sub
gs
out
fmuls
aas
stos
popa
mov
mov
rol
sub
rolb
pop
fisubrs
divps
iret
rorb
andl
in
pop
adc
in
push
fs
inc
insb
inc
fs
push
incl
lahf
adc
mov
je
mov
mov
inc
sbb
jp
inc
shll
mov
sarb
daa
int
xchg
jge
mov
ljmp
adc
mov
loope
out
fildll
ffreep
outsl
push
mov
rcr
mov
stos
out
mov
inc
cmp
add
sub
out
inc
scas
out
cmp
in
or
out
stos
cld
out
incl
mov
je
or
test
inc
sar
popf
popf
xor
adc
xchg
sub
sub
mov
or
ja
enter
cli
jne
pop
es
cmc
mov
rcl
sahf
sub
sahf
inc
cmp
cmp
mov
jl
xor
lds
push
cltd
mov
pop
jae
mov
mov
jp
movsl
xchg
adc
or
xlat
rclb
xor
jecxz
cmp
lret
jbe
test
pop
xchg
push
das
sti
fnstsw
mov
push
stos
push
xchg
push
pslld
xchg
lods
test
cmp
adc
mov
sub
fiadds
sarb
aas
sti
xchg
stos
and
sbb
xor
mov
pop
mov
jl
cwtl
push
sbb
cld
inc
xor
add
cmpsl
mov
shr
sbb
and
adc
dec
in
xchg
lods
xchg
sbb
je
inc
xor
mov
mov
shlb
mov
cmp
xchg
incb
insb
sbb
cmpsb
mov
dec
xchg
stos
sbb
jnp
push
fucomi
sub
mov
sbb
sbb
sbb
inc
sub
ret
xor
test
mov
out
lahf
cmovae
add
fiadds
mov
movsb
cmp
mov
add
fistpl
bound
push
xchg
jbe
sti
ds
and
and
sbb
xchg
in
xor
fistpll
addr16
xchg
adc
mov
and
mov
inc
cwtl
adc
enter
mov
cmpsl
ds
sbb
xchg
int
sbb
dec
clc
adc
fs
rol
push
add
out
scas
clc
js
sbb
imul
xchg
call
dec
adc
lret
scas
mov
lahf
xchg
lods
enter
pop
imul
loope
inc
adc
cmpsl
neg
cmpb
add
ret
inc
dec
push
and
aaa
lds
pop
pop
outsb
xor
cmpb
mov
out
int3
mov
cmp
jp
mov
jo
mov
in
sbb
mov
mov
out
jne
xlat
inc
repnz
aad
cli
pushf
outsl
jno
and
pop
push
and
pop
outsl
adc
adc
lds
cli
adc
sti
mov
test
xlat
push
fwait
out
or
add
adc
arpl
pusha
hlt
jbe
ret
daa
movb
xlat
cmpsb
loop
push
dec
cmpb
cmp
mov
xchg
xchg
adc
xchg
in
les
jnp
cli
pop
lock
rorb
jno
jns
outsl
punpckldq
lock
dec
dec
adc
add
or
push
arpl
push
xor
inc
adc
std
shrl
jmp
push
and
aad
gs
ret
jecxz
push
dec
std
cmp
in
shrb
scas
inc
xor
sub
push
test
aas
add
inc
jnp
pop
jmp
dec
movsl
loope
and
adc
jg
outsb
sbb
mov
push
sub
and
jbe
loop
dec
adc
dec
or
loopne
dec
ret
cmpsb
test
sbb
jmp
dec
mov
mov
aaa
sti
mov
stc
push
push
stc
sti
sti
add
stos
adc
fwait
mul
and
cltd
popf
pop
mov
or
cs
sub
mov
add
mov
cs
mov
in
mov
fsubr
cli
cmp
test
scas
adc
scas
sbb
dec
rorb
fcoml
dec
pop
adc
aas
sub
lcall
dec
repz
push
xor
dec
xchg
xor
xor
push
test
or
xchg
sub
stos
mov
mov
mov
fbld
mov
inc
and
fnstenv
rcrl
outsl
dec
ret
sub
add
sbb
mov
loop
mov
sbb
sbb
repnz
or
fwait
dec
mov
mov
cld
std
lret
lret
scas
imul
imul
cli
adc
jp
out
mov
outsb
xchg
nopl
nop
xor
cld
das
sbb
pusha
sub
mov
mov
mov
jbe
cli
and
mov
jge
scas
adc
mov
inc
xchg
push
stc
push
mov
and
adc
mov
test
cmpsl
fwait
insb
rolb
popf
jbe
cmp
int
pop
imul
jnp
mov
xchg
pop
out
mov
lock
int
push
mov
pop
imul
add
push
pop
cmp
pop
lock
in
test
lret
in
inc
adc
or
cmp
lret
lret
lret
in
mov
fldenv
mov
aas
and
lock
hlt
cs
push
xor
cmp
mov
insl
add
imul
pop
cmp
loop
out
popf
cmp
push
std
or
aad
subb
mov
mov
std
lea
mov
std
xchg
loop
lret
pop
mov
ljmp
dec
in
jmp
repz
cmp
xor
dec
jg
out
dec
mov
pushf
mov
sbb
test
enter
into
add
je
jle
xchg
jmp
les
add
pop
ss
and
repnz
jg
push
mov
addr16
add
dec
push
out
mov
fstl
xchg
rolb
mov
std
pop
movsl
lret
icebp
lahf
adc
popf
push
jmp
mov
mov
movsb
out
into
sbb
test
in
or
repnz
sub
cbtw
hlt
or
inc
xchg
jmp
adc
fiaddl
fisttps
or
ja
jp
sbb
sub
stos
inc
xlat
sbb
adc
std
andb
call
mov
mov
adcb
xor
stos
pop
jne
add
das
int
add
inc
push
xor
xor
hlt
fldenv
inc
pop
not
imul
push
lcall
repnz
fisttpll
outsb
clc
les
loop
enter
jge
nop
push
shr
mov
dec
cmp
mov
testl
pop
stos
stos
mov
enter
dec
jns
outsb
rcll
movsl
or
mov
fwait
sbb
mov
xor
jp
cltd
push
push
test
aam
jnp
or
add
push
stos
pop
adc
push
mov
mov
call
sbb
and
aam
pushl
ret
call
lret
fistl
and
xor
jno
mov
sub
lret
xor
dec
mov
jne
imul
addr16
iret
dec
lods
xchg
aaa
dec
call
mov
ret
outsb
lcall
xor
lea
filds
and
repz
push
enter
xchg
inc
jo
dec
ds
xor
sub
jno
icebp
push
jo
shr
in
cmp
ss
jg
lock
mov
or
jle
fnstenv
and
and
or
mov
lahf
fcoml
rolb
pop
mov
xor
sbb
pop
add
enter
or
nop
int
dec
push
adc
in
jno
test
dec
pop
jmp
and
in
mov
mov
xor
xor
lods
fnsave
cmovae
scas
push
fistl
jae
jae
js
cwtl
jl
xchg
mov
xchg
cld
dec
in
idivl
testl
negb
mov
cmpsb
lahf
andb
mov
sub
lret
adc
das
fildl
lods
sbb
adc
popa
cltd
xor
mov
jle
pop
arpl
xchg
jmp
pop
mov
outsl
cwtl
and
cmc
xor
ret
inc
sbb
cmp
pop
loopne
lds
inc
stc
lds
mov
add
push
xor
stc
mov
in
jge
pop
mov
psllw
std
add
push
js
lcall
in
in
insb
sbb
mov
sbb
ss
pop
push
jb
adc
sub
ja
xchg
notl
sbbb
aam
popf
dec
jecxz
leave
xchg
lret
stos
insl
scas
sbbl
dec
std
mov
hlt
in
jle
scas
add
das
dec
mov
ss
mov
cmc
sub
outsl
cwtl
dec
sub
scas
fstl
adc
adc
fucomip
outsb
mov
adc
adc
loopne
daa
scas
jle
fcoml
repnz
dec
into
test
jns,pn
bnd
sahf
movsb
pop
add
push
and
mov
xor
ret
pop
sub
js
pop
daa
adc
jae
pop
pop
sbb
xor
je
sti
cltd
xor
add
psubusw
mov
pop
pusha
data16
mov
clc
test
in
sub
nop
sti
out
fnstcw
sub
add
int3
or
xchg
xchg
cmpb
cmp
in
ret
mov
pushf
mov
sbb
add
dec
cmpsb
mov
mov
mov
loop
jno
sar
in
lahf
jbe
lods
push
lret
jl
shl
jb
pop
xchg
jecxz
int
cs
push
in
sti
and
btl
imul
sbb
outsl
mov
push
push
scas
sahf
dec
lds
xchg
es
std
mov
pop
xor
adc
outsb
dec
mov
mov
mov
leave
repnz
aaa
out
xchg
sbb
mov
mov
mov
cmpsb
or
gs
ret
int3
daa
aam
push
das
push
sub
mov
jno
inc
test
lret
pop
xor
in
add
cmpxchg
scas
fstpt
loop
sub
icebp
int3
sub
fldl
push
jno
xchg
or
out
push
dec
push
push
dec
xchg
inc
mov
xchg
call
psrlw
xlat
adc
mov
dec
notl
test
push
sbb
out
xchg
xchg
mov
js
outsb
pusha
adc
insl
gs
sbb
xlat
loopne
cmp
les
xchg
xchg
xor
es
sub
or
push
xchg
fimull
pop
jmp
adc
and
pop
inc
jle
push
jae
scas
sub
push
scas
movsl
inc
mov
xor
sbb
push
adc
loopne
flds
add
stc
dec
jbe
jecxz
jecxz
cmpl
push
cmp
repz
mov
call
jne
xchg
cmc
add
dec
or
add
dec
in
push
aad
aaa
notb
pop
insb
imul
xor
das
stc
incb
lahf
dec
dec
mov
insl
jp
push
call
pop
outsl
dec
mov
and
sbb
and
push
push
and
adc
and
sbb
jmp
jo
sub
adc
int3
xlat
ljmp
mov
stos
mov
fisttpl
push
out
sub
jge
xor
movsb
push
sti
shlb
mov
or
inc
cmp
sub
push
and
data16
and
mov
jecxz
dec
sahf
imul
mov
aam
cmpsb
inc
out
cld
stos
inc
xor
lret
push
data16
cmp
push
adc
iret
cmp
mov
jb
and
add
out
adc
pop
decb
sub
pop
jno
cmpsl
out
lcall
pop
dec
dec
shlb
pop
inc
iret
ret
sbb
stos
pop
stos
adc
adc
loopne
aaa
lods
inc
ret
rol
dec
jnp
test
jb
scas
cmp
std
les
iret
clc
clc
fdivrs
shrb
daa
mov
fsubs
pop
jmp
cmp
in
aas
push
sbb
jle
cld
sub
cmpsb
mov
adc
rol
xor
ds
inc
sub
ljmp
inc
test
imul
inc
mov
test
jg
scas
add
mov
je
js
sar
test
je
mov
fwait
xchg
pop
dec
sbb
cmp
lods
aad
fcoml
adc
out
popa
lcall
repnz
or
test
add
dec
sbb
jns
push
aaa
pop
icebp
clc
xchg
imul
popa
js
daa
add
dec
mov
cmp
cmpsb
out
or
adc
and
pushf
fcmovne
and
jne
or
mov
lods
int
stc
daa
push
sub
mov
dec
cli
inc
gs
pop
cmpsb
fistps
test
mov
js
pop
add
cltd
push
mov
pop
leave
stos
imulb
adc
sbb
scas
dec
shlb
dec
xor
inc
and
divb
cs
xor
inc
add
pop
in
inc
jecxz
stc
push
xor
xchg
enter
insl
add
pop
dec
cmp
arpl
pop
outsl
xor
gs
pop
jge
inc
xchg
mov
je
push
sbb
mov
lea
mov
mov
stos
push
dec
addb
mov
xchg
jmp
icebp
mov
sbb
jno
cmpl
pushf
mov
mov
push
test
jns
int
orl
cmp
xchg
xor
add
in
iret
lock
cs
jl
jmp
rcl
adc
std
imul
push
xchg
dec
divl
pop
icebp
mov
aaa
mov
push
mov
pop
push
call
sub
dec
jns
pop
cld
pop
adc
gs
pop
popa
xor
ja
add
inc
push
and
sub
pop
push
or
lds
cmp
lods
mov
xor
inc
pop
andb
outsl
add
and
and
mov
fs
mov
mov
jo
mov
push
icebp
xchg
cmp
test
mov
inc
mov
dec
dec
jo
iret
into
dec
int
mov
jne
lcall
dec
popf
add
sbb
xlat
xchg
lahf
enter
std
imul
and
out
mov
push
in
or
repnz
and
outsl
lods
cmc
and
fnstcw
cmp
push
repnz
push
xor
sub
push
add
mov
jmp
int3
mov
aas
fnsave
repnz
mov
adc
xchg
cmpb
nop
xchg
xchg
adc
test
inc
xchg
adc
xchg
mov
inc
add
inc
repz
outsl
int
test
jmp
adc
data16
xor
test
divl
jge
sub
fcomi
xor
jb
in
pop
gs
fstps
cmp
nop
or
inc
ss
jmp
xchg
sbb
sub
sbb
nop
in
lods
sbb
xchg
mov
push
fildl
push
xor
test
mov
sub
lods
pop
adc
sti
les
rorl
stos
adc
data16
xor
jnp
mov
je
dec
xor
inc
push
push
jb
mov
jae
mov
inc
jecxz
push
sub
cs
loope
jne
ljmp
or
or
push
mov
ja
inc
fistpll
mov
in
sbb
adc
and
js
xchg
mov
fnstenv
pop
loope
dec
pop
movsl
addr16
mov
jb
mov
adc
mov
xchg
inc
ret
je
pop
setae
or
ljmp
lcall
add
ret
scas
pop
cmp
fs
xor
add
test
stos
aaa
xorb
fistl
stos
fiadds
cmp
pop
addr16
out
out
cmc
mov
or
sbb
adc
xor
dec
and
aas
arpl
sbbl
adc
cmp
js
and
cmp
xlat
shlb
fwait
aaa
pop
sbbl
imul
push
mov
cmp
sbb
sbb
push
or
repnz
lods
clc
xlat
inc
mov
lret
rcll
movsb
enter
adc
mov
sar
push
pop
dec
mov
add
xchg
pop
jb
pop
or
and
aad
cmp
dec
jnp
inc
pushf
mov
pop
xchg
mov
adc
xchg
pop
cmpsl
clc
das
mov
add
fs
fsts
pusha
scas
repnz
pop
push
lret
mov
and
inc
adc
leave
mov
pop
dec
xchg
rorb
or
repnz
cld
outsl
vmovaps
loop
mov
scas
sbbb
or
aas
mov
add
repnz
lods
addb
and
cli
int3
adc
std
idivb
sub
or
sbb
pop
jecxz
popf
dec
mov
loop
sub
adc
or
out
cmpb
inc
icebp
xor
popa
iret
push
mov
in
leave
je
adc
sub
addr16
test
je
movsl
jne
inc
iret
test
push
das
mov
xor
jae
xchg
vmulsd
sub
pop
xchg
mov
sub
mov
or
pop
jg
mov
js
sbb
dec
xchg
fcoml
fwait
movsl
cmc
push
mov
in
pusha
jbe
movsl
ret
addr16
adc
xlat
add
and
int3
ja
push
loop
sbb
mov
jmp
inc
adc
push
or
sbb
in
push
mov
dec
push
pop
mov
jle
cli
in
nop
repz
pop
test
sti
imul
iret
in
int
xchg
mov
stc
aam
ret
xor
mov
inc
and
rcl
pop
mov
incb
insl
cltd
and
mov
sub
in
lods
and
push
stc
jg
adc
repnz
push
adc
sar
mov
insl
mov
add
movsb
cmpsb
dec
test
jl
addb
fmul
inc
loop
and
imul
or
out
mov
arpl
push
das
dec
xchg
test
bound
repnz
xor
and
insl
inc
mov
rorl
mov
cmc
lock
adc
dec
add
push
mov
sub
ja
sbb
mov
cmpsb
mov
add
mov
dec
hlt
mov
xchg
inc
das
mov
insb
pop
xchg
xchg
popf
ja
icebp
mov
cmpsl
cmp
insl
or
outsb
hlt
push
jns
cmpsl
rolb
int3
lcall
jge
ret
popa
movsb
std
or
mov
in
lods
xchg
ljmp
in
add
lods
lret
stos
cmp
lahf
pop
sbb
inc
insb
xor
jp
fwait
pop
dec
push
jne
in
add
jmp
and
pop
stos
push
mov
divl
mov
imul
pop
popf
jl
mov
sbbb
out
sbb
pusha
pop
test
stos
jo
mov
cld
fwait
test
mulb
repnz
addb
and
inc
movsl
mov
mov
dec
cmp
sbb
in
data16
lret
pop
arpl
jmp
fdivp
movsl
sub
es
mov
jb
rcr
xchg
mov
pop
inc
adc
pop
fdivrl
push
jno
mov
xchg
add
adc
insl
cmc
push
jge
sub
sahf
mov
push
xor
or
divl
fadds
inc
fs
xchg
push
xchg
fimuls
pop
mov
and
push
jb
mov
in
jle
mov
jae
pop
mov
sbb
xchg
sti
aam
icebp
dec
dec
xor
sub
adc
push
loopne
jb
or
jmp
mov
dec
jp
psrlq
mov
ja
bound
dec
mov
jmp
sar
lock
aas
insl
rcll
addr16
dec
subl
mov
and
push
xchg
dec
or
add
jg
mov
dec
pushf
fs
dec
mov
or
and
lods
jg
push
mov
adc
or
cs
push
push
jle
and
dec
mov
adc
dec
push
in
flds
repnz
addb
fsubr
xchg
xchg
scas
leave
cs
insl
push
xor
add
add
insl
sub
into
leave
stc
dec
xchg
and
cld
mov
inc
mov
sub
mov
out
xchg
out
fistpll
cmp
gs
and
push
rcr
adcl
cli
add
mov
mov
lahf
inc
sbb
mov
data16
leave
pop
sbb
iret
scas
cmc
stos
xchg
push
jecxz
inc
or
aas
cwtl
push
outsl
mov
test
loopne
repnz
sbb
jmp
push
jecxz
cld
outsb
cld
popf
mov
cmp
inc
out
ljmp
add
aaa
add
mov
jb
and
in
pop
scas
ss
cwtl
adc
and
dec
lds
xchg
inc
cmp
aaa
loope
mov
clc
xorb
push
inc
xchg
fiaddl
test
mov
cmp
pop
cmp
jp
repnz
xor
mov
jnp
rolb
and
in
fcomip
push
sbb
lcall
jns
idivb
push
outsb
or
sub
and
mov
inc
cmc
sahf
outsb
pop
sbb
jecxz
sbb
mov
in
mov
push
xor
push
gs
pusha
xor
push
ja
cwtl
popa
rcrb
inc
inc
and
lret
sti
xchg
subb
dec
mov
call
cmp
push
fadd
and
data16
or
fucomp
hlt
xor
imul
xor
sbb
in
mov
add
fldcw
mov
repnz
das
ja
or
fisubs
in
test
pop
enter
data16
loop
jl
xor
aad
outsl
lahf
je
adc
mov
xchg
pop
aas
push
pop
cmp
sbb
cmp
lret
cmp
das
lret
xchg
or
test
pop
pop
test
in
xor
push
add
call
xchg
pop
cld
scas
decb
jae
mov
fs
push
or
push
movsl
xor
fwait
mov
std
or
lahf
out
cmp
push
pop
imul
jl
cmc
sub
xor
repnz
or
adcb
push
sub
push
lods
adc
adc
push
sahf
pop
jbe
xlat
add
pop
sti
jecxz
ficompl
push
out
fistps
gs
push
xor
inc
lea
xor
ds
xor
sbbl
pop
aad
push
inc
fiadds
mov
rcl
mov
sub
int3
icebp
cld
int
cmp
and
sub
addr16
add
xchg
lret
test
push
jge
arpl
adc
pop
setae
js
fst
clc
pop
adc
loopne
inc
or
mov
js
arpl
inc
out
mov
dec
shrb
jecxz
push
and
or
jecxz
hlt
cmp
bound
popf
pop
jb
movsl
scas
xchg
out
mov
sbb
mov
sub
mov
xchg
add
xor
push
add
jns
rclb
adc
ficomps
mov
add
fstpl
cmp
stos
push
push
jle
inc
movsl
ror
shll
mov
sarb
test
xor
packsswb
mov
mov
xlat
sub
and
add
mov
mov
decb
mov
movsl
sbb
js
mov
cmp
ja
mov
test
pop
sbb
cwtl
in
and
testb
repz
xchg
ficoms
sbb
pop
insb
nop
out
adc
rcrl
mov
mov
add
cmp
pop
repz
test
pop
pop
push
pop
xchg
stos
gs
xchg
mov
jge
and
jae
mov
lcall
imul
pusha
push
xor
lcall
xchg
bound
aad
std
dec
popf
lahf
fcmovnu
jecxz
sbb
out
popa
aaa
lahf
xchg
cmpsl
loope
ljmp
jb
testb
xchg
movsb
and
jecxz
jg
rorl
rcrl
sbb
push
xchg
cmp
add
leave
xchg
hlt
ljmp
cs
inc
ficomps
out
or
and
movsl
add
pop
jnp
outsl
push
fistps
fsts
outsl
pop
aam
inc
sub
jle
push
sar
pop
cmp
mov
push
xchg
xor
lahf
out
test
shl
xlat
test
stos
bound
push
fwait
xlat
stos
imul
mov
xchg
jae
cmp
pop
ficomps
std
pop
xor
dec
lea
out
cmpsb
xchg
jo
sti
and
jmp
int
into
xchg
xor
xchg
mov
dec
xor
fdivr
pop
lods
and
movsl
int
adc
push
test
es
cltd
pop
push
pop
inc
pop
into
iret
stos
sub
push
inc
mov
out
lret
lods
andnps
pop
call
nop
addr16
xorl
call
pop
dec
test
lahf
cli
ficoml
lcall
push
xchg
sbb
gs
pusha
push
jg
cmpb
sub
mov
mov
mov
int
fcmovb
dec
arpl
mov
ja
jecxz
imul
daa
in
movl
aaa
insl
in
dec
test
into
jl
test
and
mov
sbb
cmpsb
add
jbe
push
data16
popa
flds
shr
fs
mov
movsb
mov
mov
movsw
mov
sub
dec
repz
and
dec
cltd
inc
fdivp
outsb
mov
sub
nop
scas
xchg
ficoms
sbb
jmp
jp
dec
pop
fiaddl
popa
fldenv
dec
ret
and
or
int
iret
sub
mov
sbb
push
jb
pop
jmp
push
jle
mov
cmp
sahf
push
popa
inc
clc
adc
inc
xchg
xchg
ror
xchg
xchg
push
shll
sbb
xchg
mov
push
test
call
cmp
fildll
mov
aad
mov
loopne
sub
addr16
pop
mov
push
clc
call
jae
mov
push
imul
jnp
mov
test
mov
in
in
addr16
cli
ret
mov
push
and
ret
into
cmp
push
std
and
lods
mov
sbb
inc
cmc
or
in
cmpsl
call
cmp
ljmp
fcoml
or
cmp
iret
jnp
insl
bound
loop
pop
es
pop
out
xchg
adc
pushf
lret
or
leave
dec
push
daa
ja
in
out
and
fsubrs
sub
std
out
mov
push
push
fiadds
and
ss
and
xlat
sbb
shrb
cmp
sbb
sub
fiadds
sti
mov
test
call
push
or
jae
std
or
jb
outsl
sub
xchg
das
jne
xchg
sub
ja
lea
jns
aas
call
gs
jg
add
outsl
in
bound
cltd
daa
mull
jae
cli
jo
inc
fisttps
and
jo
sbb
and
pop
es
repz
or
sbb
mov
cmpsb
pop
data16
mov
mov
loope
lock
fisubs
adc
ret
sub
bound
and
fsubl
andl
and
scas
mov
jg
xchg
pop
loop
outsl
lahf
push
scas
sub
mov
dec
lods
mov
sub
fs
stos
xchg
fdivs
int3
and
lcall
jne
stc
arpl
push
mulb
fbld
fstl
lahf
outsb
mov
andb
cmpsb
negl
call
push
push
popa
inc
pop
das
subl
mov
add
mov
cld
xor
push
dec
sbb
dec
imul
pop
imul
loop
xor
stos
sbb
insl
lahf
pop
jp
loop
mov
sub
sbb
xor
sbb
mov
pop
cmp
scas
cmp
std
jge
jns
mov
testb
outsb
and
mov
jae
or
stc
and
push
mov
lahf
mov
mov
insb
sbb
pusha
mov
lods
xbegin
scas
cmp
xchg
cli
push
inc
gs
pop
cmp
mov
adc
cmpsb
and
mov
and
in
push
fmul
dec
popa
pop
lret
js
jp
add
pop
pop
inc
jmp
cmp
out
retw
pop
dec
rorl
daa
clc
push
inc
scas
fwait
xor
lock
adc
test
dec
jmp
push
out
inc
out
out
cmp
jno
mov
es
pusha
loop,pt
add
cmp
cmp
jb
pop
nop
les
mov
inc
add
popa
sub
mov
inc
pop
mov
imul
subb
mov
jne
adcl
or
js
inc
push
sub
mov
out
daa
movsb
mov
outsb
dec
adc
imul
and
jecxz
icebp
cwtl
sbb
fisttpll
mov
xchg
jge
stos
cmp
nop
pop
out
movsb
inc
es
xor
jns
rcrl
mov
or
popf
sahf
shrl
xchg
mov
push
lock
fcmovbe
mov
ljmp
xchg
lods
or
push
sbb
aas
xchg
add
int
repz
lock
jo
mov
pop
mov
xlat
sbb
call
cltd
fcmovnb
and
sti
push
pop
and
dec
xchg
out
mov
xor
popf
cltd
add
mov
sub
jns
or
imul
lea
loope
cs
int3
mov
ret
cmpb
sub
mov
add
leave
push
or
push
jo
lahf
xor
enter
add
mov
xchg
mov
fistl
sub
cli
in
btsl
sub
lahf
ljmp
push
subb
add
and
movsb
inc
mov
ja
pop
cmpsl
cmp
xchg
and
xchg
jae
dec
push
lods
add
inc
xchg
xor
loope
sub
rclb
aam
sarl
pop
mov
push
comiss
jg
sbb
cs
test
jne
lock
fadds
ja
push
push
out
or
mov
push
mov
mov
xchg
cmp
stos
aas
mov
sbb
fnstsw
jno
xor
fdivr
mov
pushf
scas
dec
out
push
push
imulb
push
notb
xchg
fcomps
jmp
mov
mov
mov
stos
repnz
std
cmpsb
inc
jae
sbb
sbb
and
inc
pop
gs
inc
xchg
or
sub
inc
jg
xchg
adc
daa
std
push
add
insb
ds
jbe
dec
aad
adc
fidivrs
jl
or
mull
cmc
push
xor
or
into
sub
inc
pop
sbb
push
in
stc
leave
push
ss
test
fnstcw
mov
cltd
outsb
loope
xchg
inc
stc
dec
lods
outsl
ds
jno
mov
dec
sbb
jae
rcrb
xchg
mov
insl
pop
in
ret
in
sub
js
xchg
test
dec
in
adc
sub
out
scas
mov
cli
pop
mov
adcb
lret
and
into
mov
xchg
insb
pop
inc
adc
ret
fidivrl
arpl
adc
call
jne
and
cmp
shlb
mov
jecxz
mov
loop
pop
add
je
jl
xchg
mov
cld
std
fbld
out
and
ret
test
jge
pop
leave
lea
cmp
push
mov
dec
lahf
ds
xchg
hlt
push
test
aas
jge
or
shlb
xchg
cmovs
cld
xor
xchg
stc
mov
push
push
xchg
lahf
aaa
scas
leave
iret
jae
or
adc
mov
popa
inc
mov
loop
xor
es
fwait
pushf
mov
aaa
fistl
inc
outsb
ja
sbb
push
sbbb
leave
ljmp
test
mov
inc
push
adc
int3
sub
sbb
popf
lret
jo
cmp
aad
fidivrs
sub
adc
bnd
mov
cmc
sub
xor
loope
mov
mov
jno
xor
cmpsl
pop
jge
cli
cli
mov
mov
cmpsl
lods
data16
mov
mov
pop
std
push
mov
scas
out
sub
jne
push
xchg
fildll
adcb
add
ds
sub
mov
xor
or
jbe
in
sbb
int
and
push
lock
ja
inc
xchg
arpl
dec
mov
jp
jl
int
mov
loopne
sbb
insb
adc
xor
dec
sbb
aaa
loop
lret
rorb
inc
mov
jl
mov
imul
es
or
add
iret
mulb
ret
shlb
cmp
adcb
cmp
loop
lcall
faddl
push
cmp
mul
jae
mov
cmpsb
cmc
scas
dec
mov
sbb
lea
mov
in
pop
mov
dec
mov
stc
ret
push
mov
dec
or
orb
and
repnz
push
popa
add
arpl
pop
out
push
push
jb
xor
mov
out
jb
out
xchg
cmp
pop
out
mov
push
xor
jg
sti
xchg
aad
adc
je
mov
sbbb
iret
xor
js
aad
push
std
and
jne
es
mov
pop
sbb
test
mov
fsub
mov
adc
sarb
dec
movsb
sub
push
pop
mov
jle
xchg
sbb
push
rorl
mov
adc
cltd
hlt
or
lock
test
repz
stos
mov
hlt
xchg
sbb
repz
subl
mov
loope
pop
xchg
and
icebp
imul
aad
mov
sub
mov
cmpsl
xor
sub
stos
mov
pop
movsl
ret
jno
je
jne
sub
gs
push
mov
xor
mov
inc
out
adc
pop
test
xchg
ret
adc
jg
xor
add
lret
gs
push
xor
pop
mov
mov
sub
faddl
add
cltd
js
je
add
jno
dec
enter
xor
push
data16
movsb
or
inc
dec
adc
push
rolb
xor
adc
lea
sbb
xor
mov
add
sub
adc
sbb
cwtl
inc
out
call
shl
adc
lret
or
sub
adc
inc
dec
jne
or
inc
sbbb
cli
ss
and
ret
pop
cmpsb
ja
mov
aaa
loopne
mov
pop
xchg
shrl
mov
leave
imul
jb
gs
pop
sbb
jmp
sbb
fmul
aaa
mov
mov
xorl
push
in
or
shlb
mov
sub
push
std
mov
pop
sbb
pop
cmp
add
leave
and
xchg
and
and
cmp
jbe
xor
cmp
adc
xor
pop
lods
jne
adc
lret
ret
inc
ja
orl
jmp
mov
cmpsl
jae
movsb
cs
jl
repnz
sbb
sbb
cmc
lcall
cli
sahf
and
mov
dec
mov
mov
dec
mov
repz
pop
lret
pop
jecxz,pn
adc
addr16
into
pop
pusha
xchg
in
sub
jb
cmc
icebp
call
rcl
push
mov
xchg
xor
das
xchg
mov
dec
cwtl
xchg
loop
sarl
xchg
pop
add
and
push
cmp
daa
xchg
cmpb
or
movsl
mov
mov
adc
bound
arpl
mov
lods
fildll
cs
cwtl
and
pusha
mov
in
lret
dec
lods
pop
loope
cmp
lods
outsl
cwtl
test
push
test
inc
mov
add
enter
call
jns
mov
xor
hlt
xor
mov
icebp
mov
xchg
push
pop
sbb
sub
sub
jmp
mov
mull
pusha
aas
jae
push
inc
inc
and
xchg
mov
dec
xchg
imul
xor
cwtl
into
shrb
inc
clc
push
int
xor
cltd
and
push
adc
jmp
mov
cmp
stc
sub
add
xor
pop
jae
jp
mov
in
mov
add
rorb
and
inc
in
inc
pusha
pusha
cmp
icebp
idivl
in
std
pop
popf
mov
xor
add
jnp
pop
ds
cltd
mov
pop
xor
sbb
pushf
clc
call
dec
jb
and
mov
gs
adc
gs
gs
loope
jg
xor
jmp
leave
movsb
in
mov
xchg
imul
leave
lods
repz
pop
decl
shrl
scas
cltd
jle
std
ja
jmp
rclb
push
mov
shll
negb
xor
pop
stos
xchg
dec
push
lea
sub
adc
notrack
add
mov
sub
test
imul
es
jb
stos
in
fcoml
mov
mov
rcrl
gs
les
je
cmp
cmp
cmp
push
and
mov
jl
xor
andl
pop
cwtl
mov
cmp
enter
pop
loope
sbb
addr16
push
jg
jmp
cmp
fadd
xchg
dec
arpl
and
aam
sub
mov
lods
adc
int3
arpl
or
cld
pusha
pushf
pop
je
dec
sub
mov
inc
mov
pop
aad
cmp
das
les
sub
cwtl
cld
jl
test
insb
push
sbb
sbb
pop
std
inc
pop
sub
insl
sbb
sub
jo
ret
jp
dec
jecxz
arpl
mov
inc
inc
xchg
push
or
sub
and
test
jp
std
stc
pushf
mov
xchg
andl
test
movsb
or
leave
int3
fucomp
push
lods
or
jns
jp
add
push
ret
or
clc
aas
add
cmp
nop
jb
add
adc
mov
mov
aas
js
cwtl
and
sbb
lock
shll
sub
adc
es
insb
shll
fldt
cmp
dec
mov
jg
gs
xchg
push
out
push
popa
xchg
into
pushf
adcb
pop
lock
test
mov
and
daa
cmp
lret
int
stos
sti
insb
jns
xchg
mov
call
xor
xchg
jns
xchg
repnz
movsl
adc
mov
push
xchg
stc
xchg
mov
scas
mov
xchg
pop
inc
mov
cli
xchg
xor
jl
scas
pop
aam
nop
fldcw
push
mov
fcmovu
sbb
xchg
leave
ret
lock
pushf
push
mov
pop
repnz
shl
mov
lds
xor
in
adc
mov
ret
adc
adc
out
push
notl
mov
in
push
adc
cmp
cld
dec
imul
sbb
popf
dec
jbe
outsb
sbb
test
sar
sub
test
ret
rorb
mov
xor
fidivrs
jge
jecxz
sub
jb
inc
data16
or
das
cmp
cmp
inc
jl
push
test
inc
les
jge
push
push
push
sub
jns
es
test
and
stc
stos
mov
mov
imul
je
cmp
iret
pop
addl
cmpsl
adc
mov
or
xor
dec
in
sbb
push
push
popa
out
jge
incb
insb
xchg
into
mov
cltd
daa
mov
popa
xlat
lods
out
mov
dec
in
call
add
and
scas
adcb
and
sahf
insl
rcrb
loop
loopne
ret
sbb
pop
xor
sub
pop
fwait
fwait
jmp
pusha
jmp
push
push
sub
aad
push
cs
jne
jns
fimull
rol
pop
fmuls
clc
mov
stos
in
pop
pop
data16
sub
xor
aam
out
sbb
call
push
xlat
lock
sub
pop
pusha
mov
push
js
or
mov
outsl
lret
mov
rol
das
mov
pop
mov
xorl
jb
mov
insl
dec
incb
sbb
std
push
adc
stos
popa
shll
fs
cwtl
sub
lods
jbe
inc
jp
push
xor
pushfw
xor
pop
xor
sysenter
dec
cmp
xchg
jmp
loope
inc
cmpsl
push
mov
or
pushf
xor
mov
xor
in
subl
leave
lods
inc
jb,pt
push
cmpxchg
cltd
aam
add
mov
adc
rcll
fidivrs
sub
inc
clc
rclb
aam
fdivs
adc
cmpsl
jb
cmp
inc
jl
iret
incb
mov
add
stos
cmp
outsl
dec
jge
lret
jb
and
insb
push
das
push
nop
xor
xchg
shll
mov
mov
aaa
sti
movsl
mov
pop
das
mov
inc
sub
lock
cmpsb
push
ret
and
adc
pusha
sbb
mov
and
sahf
sub
les
add
mov
pop
mov
aad
data16
xchg
cmpsb
push
sbb
stos
lods
mov
imul
mov
push
lods
or
sbb
jp
jo
sub
cmpsl
sahf
pop
jg
lret
sbb
fnstenv
fwait
mov
mov
repnz
fwait
and
ljmp
fimull
repnz
js
shlb
roll
ficomps
repz
push
sbb
adc
and
sub
in
jmp
jl
imul
mov
jp
xchg
jne
sub
xor
addr16
mov
jae
test
sarl
jl
lahf
mov
or
cld
repz
or
or
jp
mov
mov
aaa
push
xor
dec
xor
dec
testb
or
mov
pop
fwait
insb
in
pop
mov
or
jle
testb
lcall
popf
mov
cmpsl
rcrb
das
pop
or
sub
in
push
pop
mov
jmp
bnd
jge
adc
outsl
push
pop
daa
cwtl
sbb
mov
push
push
cmp
int
and
sbb
js
ds
cmp
fimuls
jge,pn
cli
and
cmp
adc
jg
test
mov
jg
push
inc
jl
sbb
scas
pop
adc
in
sub
lds
push
and
insl
xchg
mov
jp
out
nop
iret
cmc
scas
stos
rclb
inc
cmp
mov
add
inc
push
mov
sahf
mov
shrb
jne
pop
or
sub
inc
movsb
js
or
divb
cwtl
dec
jae
aaa
xor
sti
sbb
add
lods
xchg
sahf
lea
or
shl
xchg
jo
daa
out
aaa
inc
or
jbe
dec
pop
lods
jmp
dec
xor
pop
clc
mov
jns
push
in
or
and
xchg
mov
jb
cmpl
push
inc
and
mov
mov
xchg
out
mov
lea
nop
addl
cli
aam
rorb
mov
movsl
push
out
jae
jg
out
adcl
das
adc
push
dec
test
mov
mov
aad
or
aam
sub
jb
add
inc
cmpsb
ds
jg
xchg
pop
sti
add
add
outsb
imul
test
push
sti
dec
adc
lds
jmp
in
jbe
movsl
sub
adc
inc
push
inc
ds
inc
sbb
pop
cs
jmp
hlt
mov
xor
sti
mov
lcall
dec
jbe
dec
fstpt
pop
addr16
mov
mov
xor
aas
add
cmp
gs
cld
dec
jecxz
dec
loope
sti
sbb
imul
aad
or
loopne
add
jmp
mov
in
int
xor
fisttpll
ds
and
mov
mov
jp
inc
lock
push
stos
cmpsb
jno
jbe
fnstenv
mov
icebp
push
or
add
jne
repz
xchg
sbb
ljmp
or
mov
inc
push
lds
cmp
sub
loop
xchg
pop
dec
gs
add
test
rcl
popa
cmp
or
daa
xchg
lea
loope
jns
dec
pop
sbb
loopne
mov
in
std
dec
sbb
dec
or
or
gs
out
push
lahf
cmpl
or
imul
imul
test
mov
mov
sbb
mov
mov
adc
pop
mov
xor
insb
divl
or
sub
in
dec
cmp
jne
popf
push
jno
jo
inc
shll
adc
into
and
add
test
into
inc
loop
aad
adc
fwait
and
and
jp
jmp
jae
ljmp
jp
xor
sub
leave
inc
loopne
outsl
inc
std
jne,pn
clc
fld
mov
cmpsb
adc
iret
in
inc
out
and
das
inc
ret
sbb
loop
add
sub
loopne,pt
and
int3
xor
add
mov
and
pop
pop
hlt
sbb
mov
jmp
dec
test
adc
mov
sub
daa
xchg
add
xchg
adc
out
lahf
mov
js
loope
int
ds
sti
pop
cmp
sub
sbb
repnz
mov
lds
inc
jnp
hlt
and
xchg
or
and
ret
arpl
lret
loope
sti
inc
inc
push
inc
notl
jmp
jmp
mov
sarl
aad
pop
aas
push
les
mov
cmp
inc
ja
scas
pop
mov
jmp
pop
cmp
xor
xchg
pop
in
lds
call
in
cmp
pop
adc
es
lcall
adc
or
mov
mov
sahf
add
shrl
lea
or
inc
xchg
neg
mov
shrd
or
mov
sub
ret
mov
inc
add
ljmp
cld
mov
xlat
inc
movb
adc
push
pop
rorl
xchg
xchg
cs
mov
cmp
jo
shl
mov
imul
sub
stos
xchg
gs
and
test
cmp
pop
jbe
inc
mov
lahf
mov
inc
adc
jb
push
and
std
vandpd
inc
lahf
jbe
dec
jl
adc
xchg
xchg
or
jae
pop
xor
fstpt
add
das
adc
push
xchg
sbb
pusha
mov
add
sub
push
xor
sbb
add
pop
push
jle
aas
cmp
add
mov
pushf
pop
cmp
cs
sub
out
push
arpl
sbb
sub
pop
and
cmp
out
shrb
push
subb
cmpl
stc
push
mov
out
push
jp
les
fdivrl
sarl
out
ficoms
outsb
push
xor
into
cmp
mov
add
sbb
test
xchg
movsb
or
addr16
lods
mov
xor
mov
cmp
cld
sbb
push
movsl
scas
fstl
pusha
inc
ret
sub
mov
fmull
jno
out
fwait
mov
aaa
mov
cs
jmp
sbb
fcomp
dec
loope
dec
cs
xchg
pop
jb
scas
test
repz
mov
movsbl
sbb
insl
cld
inc
push
mov
mov
dec
pop
cmp
mov
mov
outsb
cltd
pop
je
movsl
jae
jnp
push
mov
jno
mov
pusha
mov
jl
cwtl
xlat
pushf
push
or
cmpsl
pop
dec
mov
cwtl
xor
push
cs
push
xchg
sub
jno
das
sub
inc
and
pop
add
pop
pop
mov
mov
ds
xchg
loopne
cmp
jp
xchg
scas
in
add
addr16
int3
negb
aad
fnstenv
fisttpl
pop
push
mul
ljmp
cmp
xchg
jae
or
sahf
mov
adc
jp
repz
pop
fwait
aaa
pop
mov
mov
sti
sbb
push
mov
in
cmp
imul
jp
loopne
dec
adc
loopne
loop
xchg
dec
xchg
mov
lds
xor
pop
out
or
ret
xchg
lods
add
mov
xchg
cmpsb
or
cmc
stos
fwait
push
in
mov
inc
out
sbb
leave
test
sbb
lret
push
lret
push
push
test
dec
ror
xor
push
les
sti
xchg
xchg
mov
and
xchg
outsl
in
test
repnz
push
xor
int
data16
or
xor
jle
loopne
pop
cli
push
into
popf
pop
out
aaa
xlat
sbb
icebp
out
ja
dec
sub
sub
mov
adc
mov
push
imul
jnp
mov
sbb
cmp
iret
push
cmpsl
call
outsb
adc
inc
in
outsl
jecxz
inc
imul
dec
inc
daa
sti
inc
cmp
or
inc
loopne
inc
sbb
vpackuswb
repnz
fadds
mov
and
add
mov
mov
xlat
loop
jecxz
sub
es
test
add
pop
mov
sbb
negl
popa
out
inc
pop
mov
aas
into
push
imul
sub
xchg
lock
jmp
mov
push
rcl
call
inc
mov
xor
inc
inc
adc
aaa
leave
add
mov
mov
and
add
icebp
inc
add
pushf
mov
test
leave
je
adcb
scas
adc
add
shll
sub
cli
mov
xor
inc
push
pop
and
dec
mov
fwait
sub
fimuls
leave
arpl
nop
push
adc
mov
mov
sahf
push
inc
dec
cmp
adc
push
fucom
push
dec
lcall
dec
mov
mov
xchg
movsl
incb
cmp
ret
xchg
mov
mov
inc
in
xor
test
cmpsl
mov
sbb
imul
lods
mov
pop
nop
imul
sub
inc
cmpsb
inc
int
lock
movsl
mov
shl
js
jp
loop
pmullw
outsb
lods
add
sub
jmp
mov
in
loope
nop
adc
xor
push
idivb
scas
mov
outsl
dec
stc
adc
sbb
mov
inc
pusha
ss
outsb
inc
mov
dec
inc
add
adc
mov
jns
cmp
cmp
jecxz
daa
stc
int3
test
push
aaa
jne
mov
pop
lods
add
outsb
pushf
test
arpl
sahf
cmp
cs
std
add
adc
push
mov
jl
adc
jmp
xor
add
ja
mov
mov
sub
dec
dec
pop
hlt
cmpsb
cltd
xchg
pushf
adc
adc
add
jae
sub
mov
xchg
mov
fs
not
lcall
mov
lods
test
movsl
push
push
pop
sub
imul
xchg
cmp
lret
jp
test
xchg
dec
pusha
mov
jbe
pop
scas
adc
cmp
ret
sub
sub
mov
or
push
enter
cmp
rol
sub
push
jl
fdiv
mov
ds
loop
mov
inc
enter
adc
stos
push
orps
jne
inc
jl
jmp
into
call
lods
sub
cld
or
mov
sub
cltd
xchg
repnz
into
add
and
adc
stos
loopne
insb
int
aas
out
movsb
sbb
scas
jl
or
pop
inc
mov
inc
in
sahf
adc
mov
dec
adc
jge
jmp
mov
int
pop
and
in
insl
sti
sti
push
dec
add
cmp
shlb
push
dec
ret
dec
pop
pcmpgtd
xchg
rcll
pop
loop
pop
cmc
aad
pop
and
pop
fs
sbb
xchg
popf
cwtl
sarb
cmp
mov
std
cwtl
mov
xchg
mov
adc
mov
mov
jae
xlat
and
aas
mov
mov
mov
mov
push
dec
shrl
fs
shrb
pop
stc
mov
outsb
mov
mov
jle
pop
aas
mov
push
mov
or
call
mov
mov
xor
sub
ret
inc
rolb
sub
aaa
xchg
in
cmpl
insb
mov
lcall
lret
mov
jp
add
mov
cmp
xchg
sub
ljmp
or
sub
pusha
mov
xor
push
pop
mov
pop
xor
push
inc
cmp
cltd
dec
stos
jae
push
adc
push
bound
sub
pop
xchg
jno
mov
insb
xor
mov
fsubr
add
push
cltd
dec
lock
xor
clc
mov
push
ljmp
js
fdivp
sbb
add
pop
dec
adc
sub
and
fbstp
stc
xchg
ret
inc
xchg
push
call
and
mov
jmp
in
jno
mov
jmp
mov
into
pop
mov
fcoms
dec
sbb
xchg
add
insb
repz
jo
mov
sub
test
push
loopne
int
push
loopne
arpl
jnp
pusha
les
jo
aad
sbb
scas
shlb
push
enter
xchg
inc
dec
adc
out
pop
sub
dec
adc
xchg
pop
push
ss
inc
xor
popa
push
scas
inc
and
jnp
sbb
cli
lock
in
mov
jno
mov
mov
sbb
bound
arpl
mov
lods
mov
loope
cld
test
sti
jae
jae
ljmp
ret
or
xchg
ficoms
pop
sbb
or
roll
jp
push
push
lret
fistps
pop
inc
mov
test
pop
int
shrl
iret
test
dec
pop
in
jecxz
and
mov
fcmovb
xchg
xchg
js
mov
mov
aam
and
clts
cld
pop
and
cmpl
out
mov
sbb
push
cli
fstp
jo
cmp
xor
xchg
or
sbb
or
xchg
fldenv
aad
adc
into
ret
mul
or
xor
aam
ss
or
jmp
fbld
xorl
pop
fsts
pop
xor
daa
xchg
inc
sub
lock
call
pushf
pop
lahf
dec
add
sbb
out
and
mov
pushf
cs
ds
ret
and
pop
push
cmp
int
loope
pop
jecxz
fs
scas
mov
pop
xlat
xor
out
insl
outsl
mov
sarl
and
inc
add
int3
testl
cmp
xor
cmpsl
rorb
movsbl
xor
cmp
mov
mov
lods
cmpsl
jl
in
cmpsl
enter
dec
push
sbb
out
add
xchg
and
push
roll
mov
cmpl
xchg
cs
or
outsb
arpl
std
les
out
add
inc
out
mov
ja
jge
mov
mov
jp
adcb
inc
in
and
sbb
sarb
adc
pop
mov
pop
jg
mov
dec
loope
fbld
xchg
sbb
cli
mov
or
out
jnp
inc
sti
mov
xchg
andb
lret
insb
ds
cli
jmp
repnz
adcb
out
lcall
cmp
popa
rol
dec
jg
mov
fnsave
lods
pop
insl
orl
fsqrt
rol
ja
std
push
sbb
imull
add
pop
push
ja
mov
push
scas
test
js
push
or
inc
sbb
jmp
ljmp
pop
in
mov
sbb
xor
test
pop
in
loopne
xchg
ja
xchg
xchg
nop
add
dec
push
dec
mov
lods
mov
fldenv
test
shl
jb
add
jp
lds
inc
lock
mov
orb
insb
sbbl
inc
fmuls
or
out
sbb
push
shl
insb
mov
sbb
insl
inc
and
insb
jp
push
pop
push
sbb
xor
push
cmp
loop
and
repz
and
aam
pop
out
pop
sahf
int
dec
popf
cmp
xor
sub
mov
or
call
jne
pop
sbb
rcll
push
lea
nop
pusha
and
mov
inc
stc
mov
adc
lods
fldl
mull
insl
cmp
inc
js
adc
pop
addr16
inc
cmp
aam
dec
sbb
or
xor
sbb
dec
js
xor
mov
imul
lods
arpl
mov
fidivrl
mov
in
inc
aas
bound
pop
stos
sub
sub
pop
cmp
sub
aas
add
or
push
sub
jb
movsl
add
ror
addl
lcall
jmp
push
jb
sti
mov
jg
lahf
mov
mov
ljmp
xchg
mov
loopne
lods
sub
push
or
sbb
cmpl
je
scas
pop
lea
int
cwtl
add
and
push
and
push
je
iret
inc
dec
pop
nop
stos
pop
sub
mov
imul
lods
lcall
fimuls
in
sub
mov
fidivl
mov
inc
xchg
lock
sbb
push
fisttpll
mov
dec
xor
fldcw
sbb
orl
testb
lds
xor
jb
jp
icebp
pusha
sub
push
push
bound
lea
cmpsb
mov
fsubrl
jmp
ficomps
xchg
sbb
aas
and
mov
mov
stos
and
fs
jmp
mov
pushf
adc
or
mov
pushf
in
inc
daa
out
xor
inc
inc
cmp
repnz
loop
dec
pop
xchg
cmp
xor
add
ds
cmp
test
and
jns
loop
stc
push
lods
dec
inc
or
adc
scas
sub
jp
sahf
jmp
das
sub
sub
mov
icebp
fwait
jmp
rcrb
cmp
and
and
add
cmp
ss
adc
faddl
or
pushf
lret
push
mov
clc
mov
outsb
sbb
cmp
addb
and
jge
fcmovnu
std
mov
xchg
jl
aad
mov
das
pop
lock
cli
test
or
ret
mov
or
loop
add
mov
fmull
cmp
mov
les
push
mov
lret
shrl
das
xor
pop
mov
sub
dec
loope
leave
sub
pop
shrl
mov
insb
inc
adc
add
cltd
rcl
mov
jecxz
add
xor
ficoms
pop
push
jo
fdivrs
jbe
adcb
fdivs
or
mov
pop
pop
sub
pop
mov
or
adc
inc
jmp
pop
insl
dec
sbb
sbb
xor
pop
push
ja
fwait
push
xor
push
fsubl
imul
shlb
clc
ret
test
xorl
cmc
stos
cmpsl
insb
sub
imul
jbe
push
cmp
mov
sbb
mov
shrb
jns
sbb
enter
inc
sbb
fstps
xlat
fistps
movsl
push
cmpsl
divl
fs
cmovns
sbb
imul
sbb
jnp
dec
ss
mov
or
push
cld
pop
inc
lcall
pushf
jmp
mov
adc
inc
aaa
sarb
jle
pop
mov
adc
cld
lret
pop
and
nop
ret
cltd
xchg
sbb
add
cmp
leave
adc
sbb
push
or
ja
aaa
jb
es
in
sub
aam
xchg
inc
and
push
cli
pop
leave
bsr
mov
push
dec
aaa
shr
stos
fadd
jnp
imul
add
clc
sbb
jmp
mov
adc
dec
xor
xchg
leave
stos
mov
in
scas
mov
adc
cmp
pop
xchg
test
mov
es
out
inc
sub
fmuls
lcall
decl
mov
loope
inc
push
sub
adc
dec
mov
sub
ret
mov
cs
adc
mov
cmpsb
fmulp
mov
cmp
fs
hlt
lcall
ljmp
xor
pop
loopne
scas
and
inc
jae
test
vstmxcsr
addr16
stos
pop
mov
xor
mov
es
dec
stos
scas
sbb
les
adc
adc
mov
jge
jecxz
aaa
push
adc
xchg
xor
in
add
xor
jae
rcrl
pop
repz
jnp
stos
popa
fistpll
jbe
and
or
jne
jle
call
cmp
ds
and
sub
mov
sub
incb
xchg
xor
ljmp
out
or
bswap
jg
movb
xchg
repz
outsb
pop
in
pop
sbb
cmp
xlat
jne
cmp
mov
push
sbb
imull
pop
mov
mov
scas
inc
rol
dec
push
sub
jp
jns
sbb
inc
xchg
fistps
shlb
test
mov
sbb
fs
sub
pop
cmp
push
fsubl
inc
test
or
cmpsl
add
cli
clc
add
push
cmp
sub
push
test
jecxz
jcxz
jne
scas
adc
mov
sub
jnp
ret
pop
add
int
out
jge
jle
ljmp
jmp
sbb
adc
insl
inc
imul
lods
insb
inc
xchg
jno
push
mov
mov
mov
sbb
lds
sub
popf
sbb
call
psubsb
jnp
dec
clc
mov
test
fadds
out
push
imul
xor
addr16
call
jns
cmc
adc
loopne
gs
or
pop
jecxz
jmp
nop
ret
mov
or
push
test
cmc
push
cmc
rcrl
cmc
fwait
dec
rol
add
sub
mov
adc
outsb
push
imull
mov
inc
inc
adc
call
cs
adc
mov
and
push
in
movsb
mov
movsb
gs
mov
and
xchg
push
sub
pop
mov
jl
xor
add
movsl
or
xor
fiaddl
jp
rclb
mov
sbb
lea
mov
sbb
jecxz
inc
les
les
out
cltd
mov
loop
jnp
aad
lea
sbb
cmpsb
and
xchg
ja
mov
sub
rcrb
rclb
das
jae,pn
cmp
adc
inc
adc
xchg
dec
jb
aaa
mov
xor
or
push
out
sbb
cmp
fwait
pusha
adc
and
inc
movsl
int
adc
mov
aam
sbbb
xchg
arpl
fs
inc
fwait
sub
and
mov
mov
or
sbb
xchg
lea
and
push
push
pop
ret
pop
xchg
aaa
mov
in
or
fs
in
pop
add
push
cmp
repnz
dec
dec
add
xchg
xchg
xchg
test
xor
or
in
add
jecxz
xor
les
push
sbb
push
xchg
and
in
push
and
stos
scas
popf
in
mov
mov
mov
das
inc
pop
fwait
or
sub
jl
jns
shrb
int3
icebp
lods
mov
inc
inc
xor
nop
rolb
dec
int3
enter
movsl
dec
inc
fwait
xor
cmp
jge
mov
lods
cmpsb
jmp
iret
cmc
inc
jno
ss
lds
add
jg
repz
mov
add
fwait
mov
jmp
mov
inc
enter
rcll
addr16
mov
xorb
inc
jb
adc
lcall
jge
scas
mov
inc
add
icebp
cmp
cmp
inc
inc
dec
sahf
data16
pusha
mov
or
int3
dec
cvtps2pi
lods
nop
out
stos
daa
inc
in
pop
jbe
cmp
lahf
fsubs
ds
inc
adc
inc
mov
cmpl
mov
mov
mov
cmpb
jne
cmpsb
jp
mov
roll
or
mov
push
xchg
rcr
out
mov
cmc
mov
fidivrs
data16
dec
inc
jle
les
pop
int
ds
lcall
mov
push
and
mov
pop
dec
loopne
repz
out
test
inc
fbld
cmp
ret
dec
pop
popa
sub
cltd
in
lock
jno
daa
inc
lcall
cltd
in
aas
aam
outsb
js
mov
xor
mov
out
fisttps
pop
xor
mov
scas
mov
popf
aas
shl
ret
cmp
mov
in
xchg
or
inc
sti
shlb
sub
or
inc
mov
push
popa
jmp
sub
add
push
push
xchg
nop
into
andb
sti
jle
xor
aaa
jae
imul
xor
mov
test
mov
mov
ret
enter
push
mov
stc
jle
cmpsb
inc
daa
cld
pop
jmp
mov
mov
dec
dec
repnz
lret
jp
sub
stos
adc
testb
cli
repnz
xchg
inc
or
les
cmp
imull
sbb
fisubs
jo
int
jmp
pop
cmp
push
sub
cmp
fldl
xor
cmp
pop
scas
mov
cmpsl
aad
dec
pop
pop
cmp
dec
and
and
das
icebp
push
repnz
inc
adc
jae
sbb
add
sbb
jl
push
sbb
push
stos
sahf
mov
mov
jp
cmp
ficompl
push
and
rclb
lret
jmp
mov
lcall
add
inc
fs
sahf
push
inc
xor
sub
sbb
xor
sti
xchg
pop
sbb
mov
decl
mov
push
cwtl
xor
stos
nop
out
cmp
xlat
mov
rcll
paddusb
mov
inc
or
push
inc
lds
cltd
cmp
jl
add
push
arpl
mov
ficoml
xchg
mov
push
dec
out
cmp
adc
dec
mov
lea
aad
add
ds
roll
rcr
cwtd
fisubrs
and
mov
jl
fwait
call
jb
jo
shlb
mov
iret
fistpll
rcll
lods
rcrl
call
mov
sub
movsl
mov
adc
les
insl
scas
mov
jp
aad
loop
addb
sahf
insb
jns
mov
dec
jl
lods
testb
mov
push
daa
inc
pop
mov
das
jns
fiaddl
cmpsl
push
iret
pop
lea
dec
adc
or
aad
in
mov
jo
cmp
or
and
jecxz
movsb
pop
enter
pop
orl
mov
mov
dec
std
insl
cmp
hlt
loope
ds
mov
mov
sub
jae
pop
fwait
sarl
pop
pop
jge
out
pop
enter
repnz
sbb
push
or
xor
pushf
nop
sti
pop
xlat
fidivl
aas
sub
and
sti
dec
dec
cmp
inc
cwtl
sub
scas
mov
mov
jmp
sub
sub
ja
mov
lddqu
scas
or
ret
mov
test
jnp
mov
movsl
aad
sub
sbb
mov
stos
xor
mov
scas
shl
cmp
mov
adc
push
lods
call
dec
fsubl
mov
cltd
and
xchg
rorb
repnz
cmc
mov
aaa
mov
inc
out
into
dec
cmp
pop
pushf
inc
mov
insl
mov
add
lods
push
test
pop
les
sbb
bound
mov
mov
mov
fists
fbld
xor
mov
xchg
xchg
cwtl
jne
mov
test
dec
pop
adc
into
into
or
lret
fwait
lret
jge
out
mov
adcl
push
lea
or
orl
adc
push
sub
dec
sahf
mov
js
scas
leave
cltd
pop
xchg
mov
cwtl
insb
cs
and
or
inc
and
mov
loopne
das
jns
aaa
daa
xor
cmovae
mov
cmp
into
jns
test
or
push
dec
push
popf
fistpll
std
mov
aas
push
add
adc
mov
mov
aaa
insb
sub
rcll
cs
pop
scas
jne
inc
lods
xor
adc
rolb
xchg
xor
sahf
fmull
test
xlat
pusha
rcrl
gs
cwtl
imul
xchg
and
mov
test
mov
inc
push
add
fsubr
imul
sarl
inc
mov
out
cwtl
dec
cli
sub
aas
jge
push
dec
rcr
xor
daa
dec
adc
jle
pop
inc
ror
mov
jle
inc
scas
push
sbb
shrb
add
adc
repz
ljmp
push
inc
jns
add
mov
pusha
sub
js
xor
ret
test
outsb
imul
mov
xchg
jno
add
xchg
mov
pushf
xchg
mov
sub
jns
mov
je
out
cmp
fiaddl
insb
mov
fisubl
loope
push
vpsubsw
xchg
pop
ret
ss
inc
imul
sub
and
cmpb
movsb
or
xchg
xchg
pop
cmp
into
sub
subb
insb
mov
loope
leave
and
pop
subb
daa
fidivl
std
inc
loopne
shrb
lods
dec
pop
adc
push
scas
mov
mov
jle
cmp
xlat
loop
pusha
adc
and
cmc
mov
adc
jne
and
mov
addr16
push
mov
mov
into
xchg
lahf
sbb
or
into
or
int
push
xchg
addr16
lret
inc
inc
sbb
cs
inc
or
mov
mov
pop
add
push
fidivrl
test
ja
aaa
xchg
cwtl
cmp
jmp
dec
popf
sbb
or
jle
add
rorb
das
cmpsl
adc
js
scas
jno
adc
out
sub
mov
orl
cli
sub
sub
lds
cltd
jb
repz
jb
imul
scas
loope
or
dec
inc
lret
jmp
cmp
mov
insl
into
cmc
mov
popa
inc
fcoms
jb
lcall
lock
mov
inc
pop
pop
pop
icebp
stos
and
pushf
xor
and
xor
xchg
loopne
jmp
clc
mov
push
mov
add
add
repnz
sbb
push
add
sub
mov
inc
or
in
ret
sbbl
or
inc
lret
pop
xor
inc
fwait
sub
mov
sub
dec
loopne,pt
cmpsl
cli
sti
mov
int
jle
jecxz
dec
mov
pop
ds
loope
inc
rcll
push
cmp
repnz
cld
cs
push
outsb
or
popa
mov
out
sbb
mov
icebp
adc
mov
scas
rol
fs
pop
xor
shlb
mov
cltd
cmp
and
pusha
mov
lods
ja
sti
nop
stc
lods
add
jmp
stos
dec
je
out
in
divl
inc
push
mov
out
cmpsb
jae
leave
cmpsb
jecxz
inc
jl
xchg
js
out
jg
dec
mov
out
movsl
mov
mov
fstps
inc
clc
scas
dec
jp
or
aas
jl
inc
rol
push
cli
push
std
js
xchg
popf
adc
mov
fadds
and
imul
mov
sti
mov
js
popa
jge
jno
jmp
cmpsl
jmp
fcoml
add
sub
fadds
lret
mov
xor
hlt
jnp
test
mov
test
dec
insl
sti
and
push
and
scas
ja
jp
pop
out
sub
lock
jle
pop
cmp
ss
repz
aaa
sub
pop
cmp
pop
aaa
shll
mov
dec
xchg
cwtl
and
ja
data16
cmpsb
pop
es
mov
push
dec
sub
mov
daa
jne
cmp
mov
pop
outsb
sbb
loopne
subb
or
div
or
mov
lods
xor
add
dec
gs
fwait
sahf
imul
icebp
mov
flds
adc
mov
pushf
jbe
das
setno
xchg
cmc
loop
mov
out
mov
inc
jecxz
popa
rcrl
test
adc
fiadds
cmp
mov
iret
call
data16
in
shr
and
xor
push
xor
dec
push
fucomi
or
jae
test
stc
push
push
xor
mov
adc
shl
and
insl
test
xchg
enter
fdivrs
pop
lods
xor
es
or
addr16
xchg
popa
out
mov
jnp
add
push
repz
xchg
lret
mov
out
pop
jo
ljmp
xchg
dec
je
adc
test
mov
enter
mov
or
in
adc
xorb
call
les
cwtl
sub
sub
int
mov
cli
lahf
and
xor
lcall
sti
cmp
aam
jl
std
dec
imulb
cmp
push
shll
ficoml
jnp
shll
jmp
jns
shll
dec
sbb
pop
add
cltd
repnz
cmc
inc
cmp
xor
out
dec
adc
repz
repnz
leave
iret
mov
add
mov
push
xor
inc
ret
push
mov
xor
lods
cmp
adc
adcl
mov
pop
add
jle
shl
xchg
test
inc
rol
das
lea
mov
loop
pop
sub
leave
mov
into
gs
imul
fcoml
dec
out
mov
out
lret
mov
imul
test
pusha
aas
std
mov
cmp
in
test
and
sti
js
in
loop
add
sbb
xchg
sbb
inc
pop
adc
loop
mov
adc
gs
push
jbe
cld
or
jl
outsl
cwtl
ret
in
loop
xchg
sbb
push
cwtl
jge
loope
out
mov
iret
mov
cli
dec
sub
jns
popf
loop
shll
mov
push
int
lods
out
testl
fs
bound
inc
or
jo
sub
hlt
popa
push
push
lret
push
or
jnp
adcb
cs
or
add
mov
jg
mov
pop
stc
testl
hlt
mov
xor
fisttpl
data16
pop
out
das
xorb
and
ret
push
mov
mov
adc
icebp
add
dec
jl
sbb
repnz
cmc
push
dec
inc
jmp
and
pop
xor
inc
push
jmp
jns
xchg
pop
sarb
sbb
out
adc
test
pop
sbb
arpl
shll
andb
je
or
adc
jb
push
sbb
sub
fs
mov
sub
and
sahf
pop
xor
pop
push
aaa
in
mov
mov
cmp
inc
add
mov
imull
sub
and
out
mov
jle
and
stc
inc
xor
xchg
push
repnz
mov
int
mov
xchg
adc
mov
loope
xor
repz
cli
xchg
jmp
ja
pop
dec
push
loopne
pop
push
or
hlt
pop
jno
addr16
mov
inc
dec
cmpb
popf
bound
add
jecxz
js
outsb
je
cmc
dec
out
xchg
pushf
pushf
and
notl
pop
xchg
or
ss
in
xchg
fstpl
sbb
push
lods
ljmp
cmpsl
shrb
ret
pop
inc
mov
inc
lahf
xchg
out
pop
test
mov
sarb
mov
insb
inc
ljmp
jp
pop
xchg
jge
sti
mov
pop
sbb
fistps
xchg
mov
and
and
jmp
push
loope
or
divl
fldl
dec
jnp
aad
sbb
call
fsubrl
mov
mov
adc
imulb
jbe
call
arpl
cmp
sub
imul
jae
xor
jbe
xchg
sbb
inc
lahf
xchg
test
jg
sar
cld
push
call
icebp
clc
fldcw
leave
andps
je
jo
movsb
xchg
call
sbb
adc
dec
cmpsb
out
ja
and
mov
icebp
mov
jno
ljmp
cmp
cmp
je
lds
sahf
cmpsb
fisubl
mov
cmc
xor
andl
into
rcl
dec
fstl
out
loopne
into
push
repz
negl
fwait
out
cwtl
fistpll
sub
adc
push
dec
mov
stc
sub
or
data16
add
out
push
sub
fiaddl
hlt
xchg
cwtl
mov
jl
mov
notb
adcl
push
add
loopne
mov
int
or
mov
repz
xchg
xchg
je
add
cmpl
imul
and
cs
pop
scas
xchg
pop
mov
jb
fistps
test
xchg
and
mov
shlb
xor
lock
add
mov
inc
and
jne
sarb
dec
mov
xchg
leave
xchg
mov
xor
add
mov
dec
and
nop
enter
dec
cs
adc
shlb
outsl
lea
scas
sub
ja
rcl
ret
in
popa
in
or
pop
jns
repnz
in
mov
mov
fists
adc
ss
notl
mov
bound
lret
stos
mov
movsl
push
shll
dec
insl
repz
sub
stos
call
jg
mov
push
cmp
les
cld
popf
fs
jb
or
xor
push
fdivl
add
enter
xchg
or
andl
xlat
iret
cwtl
pop
fdivs
test
jmp
mov
and
adcb
sub
dec
xor
aas
sub
cmp
mov
shll
lcall
lret
fbld
xchg
mov
mov
pop
cmpl
ja
lds
pop
in
mov
xchg
test
outsl
pusha
repz
pop
aad
pop
or
fs
mov
lods
stos
shrl
pop
into
jle
aad
jb
in
out
aam
mov
cltd
cmp
push
add
jp
sub
inc
or
orb
jo
or
mov
mov
xchg
xor
sub
aam
lret
push
cmpsl
pop
je
sbb
enter
call
insl
and
xor
pop
add
nop
outsb
lock
xor
not
ja,pn
jg
lea
and
rcrb
dec
or
add
mov
xor
xor
push
ss
sahf
mov
inc
mov
clc
mov
ljmp
js
jmp
cmp
add
jo
div
pop
xlat
imul
mov
sti
sbb
ss
xor
adc
push
pop
xchg
das
fcoml
or
fwait
call
cmp
pop
iret
push
lods
mov
cmp
adc
mov
or
int3
sbb
push
lea
icebp
mov
mov
std
js
test
push
xor
shl
out
bound
or
lea
idiv
push
mov
ficompl
add
imul
pop
cwtl
fcomps
test
rcll
xchg
push
rcrb
test
shlb
lret
shll
adc
arpl
adc
icebp
xchg
sahf
icebp
sti
ficoml
sbb
or
insb
in
ja
inc
sub
pop
jp
add
in
loop
push
mov
aad
pop
cmpsl
push
xor
or
mov
add
in
sub
inc
in
ret
push
xor
jecxz
aas
add
bound
test
push
imul
fisubrl
jae
imul
and
pushf
sahf
pop
aad
sbb
push
ds
stc
and
xor
sub
jb
ror
dec
sbb
jne
ret
test
push
xchg
pushf
das
outsl
pop
dec
adc
insl
mov
mov
dec
mov
sti
mov
adc
push
sub
push
push
sbb
jbe
inc
sbb
lds
pop
into
mov
fstpl
orl
scas
ffree
mov
cmc
jmp
inc
inc
mov
jge
inc
add
xchg
add
pop
je
dec
inc
add
xchg
xchg
into
scas
dec
mov
outsl
ret
clc
lods
jge
sub
lea
jmp
push
ja
sub
or
cld
lds
comiss
jle
mov
pop
test
jl
movaps
dec
ja
jmp
and
jmp
push
pop
les
aad
dec
cld
pop
jecxz
stos
add
ret
mov
sub
aaa
add
idivl
push
jb
xchg
leave
int3
jle
test
fisubs
xchg
insb
and
fyl2x
push
gs
gs
pop
or
mov
push
inc
dec
mov
insl
test
push
leave
mov
cli
inc
clc
rcll
or
ss
aas
daa
test
fidivrs
and
jne
aam
lcall
sub
scas
push
xchg
dec
movsb
xchg
arpl
iret
lret
dec
mov
rcrb
adc
insb
push
aad
movsl
pop
pop
pop
and
cmc
or
mov
jge
mov
fstpl
push
adc
sub
mov
cmpsb
ja
stc
fidivrs
jmp
sahf
lods
or
loop
stos
or
and
push
popa
loop
mov
sbb
add
into
popf
inc
push
dec
mov
sub
xor
cmp
mov
lret
test
subl
xor
fistl
sub
lods
cmp
test
inc
and
mov
push
gs
aaa
push
push
or
push
cmp
lds
sbb
icebp
or
push
loope
adc
jp
or
inc
sahf
inc
out
fcomps
inc
inc
mov
repz
imull
sub
sahf
movsb
stc
dec
sbb
addr16
xor
mov
add
sbb
pop
pop
xor
lods
stos
pop
push
dec
pop
ficompl
fwait
push
push
cli
rcl
mov
jmp
call
push
adc
sarl
add
cmp
div
gs
leave
jp
and
sarb
int
mov
dec
or
dec
mov
ss
jne
lea
insl
aas
iret
sbb
jp
rcr
push
add
and
je
add
lret
xchg
and
or
aas
sarb
xchg
xchg
icebp
scas
sub
aas
fcoms
push
ds
out
lods
lods
cmp
add
gs
mov
cmp
jns
andb
repz
cmp
aam
stos
insb
mov
mov
cmp
inc
push
scas
add
daa
xchg
xor
lea
insl
or
pop
pop
jb
pop
fs
ja
test
shll
enter
pop
loope
lret
loop
pop
mov
nop
mov
test
rorl
mov
repnz
test
or
lods
andb
cmp
stos
out
push
xor
or
fbld
and
jmp
das
jnp
leave
lret
mov
test
mov
mov
mov
ffreep
lahf
loopne
insl
add
mov
lret
mov
cs
popf
jae
sub
cmpsb
xchg
xchg
jnp
or
mov
test
pusha
pop
iret
sbb
hlt
mov
xchg
xchg
push
pushw
aad
std
add
icebp
lods
mov
xor
adc
jbe
scas
pop
mov
cmc
outsl
je
xchg
cwtl
mov
lods
cmp
mov
jp
cmp
test
mulb
aam
jb
dec
mov
push
inc
cld
loope
sbb
lods
push
jmp
mov
or
mov
scas
and
jge
jo
jl
fildl
cmpb
cmpsl
insb
jl
out
fsts
int3
pop
mov
mov
adc
outsb
pop
out
faddp
push
in
enter
lods
imul
xor
push
inc
pop
xchg
repnz
out
jns
cmpsb
xchg
ds
or
jo
push
lods
and
not
cltd
cmp
push
xchg
test
mov
repnz
scas
xchg
lods
sub
je
mov
pop
cmpsb
in
pop
and
add
js
push
les
data16
repz
insl
mov
pop
aam
loopne
add
inc
test
hlt
add
dec
xor
repz
sbb
lcall
sarl
push
in
int3
add
pop
xor
xor
mov
fistpll
pop
shrl
jb
int
mov
arpl
rcr
in
aam
mov
sbb
outsl
sbb
das
sub
cmp
das
jge
int3
add
pushl
jne
das
and
add
mov
fimull
lods
leave
pop
sub
mov
mov
xchg
ja
testl
xor
rorb
fwait
in
call
sbb
or
orl
jne
jecxz
addb
shl
pop
aas
jno
xchg
dec
xchg
pop
iret
int
ja
xchg
inc
push
or
adc
mov
adc
fucomi
lds
sbb
insb
ds
nop
or
int
jbe
xchg
fadd
dec
push
andl
inc
adc
adc
or
cmp
loopne
push
jle
lods
nop
test
enter
in
and
js
xor
pop
jmp
popf
mov
sub
xor
cmpsl
aas
dec
std
test
mov
mov
cmp
cmp
pop
push
mov
leave
push
scas
inc
scas
sub
testb
insb
push
in
dec
jp
scas
jge
inc
mov
into
add
shrl
mov
movsb
fucomp
dec
pop
movl
inc
sbb
add
mov
pop
xchg
jp
add
rcll
out
dec
jbe
push
push
stc
stos
add
sarl
sti
push
sbb
jne
xchg
jnp
mov
mov
lcall
movsl
xor
int3
fadd
ljmp
aaa
inc
or
ss
xchg
stos
pop
dec
or
mov
pushf
fwait
outsl
bound
cwtl
and
jge
mov
push
inc
xchg
sarl
fcomi
leave
jno
mov
adc
shld
xchg
mov
sub
push
fdivl
cwtl
fsubr
mov
and
mov
fimull
movsl
mov
mov
iret
pushf
jns
notb
adc
sbb
ja
pop
dec
inc
xchg
sbb
push
loopne
fmuls
daa
loop
add
sarb
inc
or
cmp
adc
movb
rcrb
mov
repz
lds
or
inc
or
add
xor
aad
pop
dec
pop
jne
inc
and
stos
xchg
aas
into
mov
lret
xlat
and
push
aaa
stos
adc
mov
fsub
fcoms
sbb
jb
fiaddl
jmp
add
in
clc
cmc
pop
iret
mov
int3
push
jo
pop
push
and
xor
aas
inc
sarl
fcoms
sbb
push
sub
js
jnp
mov
adc
cmp
or
outsb
xor
and
sub
mov
adc
fwait
pop
iret
mov
int3
cltd
test
les
and
hlt
outsl
mov
xchg
cs
pop
jg
and
scas
out
pusha
test
sbb
outsb
mov
and
sub
jecxz
sub
lahf
ljmp
xor
sub
rcr
inc
pop
sub
jecxz
mov
cmp
gs
mov
fyl2x
pop
int3
insb
sub
rorl
jo
xlat
imul
pop
or
adc
ret
pop
inc
movups
or
or
sti
inc
leave
add
or
jns
push
lret
idiv
fisubrl
lea
ljmp
pop
add
fimuls
pop
jecxz
adc
js
out
jne
aam
xchg
push
sahf
fadds
inc
or
mov
sbb
xchg
and
push
xchg
lcall
sti
push
jg
mov
std
movsl
data16
fisttps
sub
add
xor
mov
fidivrs
stc
and
into
lock
mov
push
pop
dec
xor
mov
inc
sti
jae
mov
or
std
push
xchg
data16
push
cld
inc
lds
or
fadds
jecxz
mov
or
fstp
ret
lahf
daa
out
xor
insl
pop
add
jnp
jl
insb
xor
and
aad
sahf
movsl
movsb
cmp
jae
and
subl
mov
mov
and
addl
enter
fsubrs
addr16
addr16
mov
adc
mov
or
daa
out
mov
pusha
pusha
xor
popa
adcb
test
ret
xor
repnz
pop
jbe
fists
iret
mov
add
and
shl
mov
ja
pop
insb
jl
cltd
push
ds
xchg
leave
inc
cltd
popa
dec
push
push
push
inc
rcll
enter
movsl
ret
pop
mov
jne
push
sub
push
test
repz
cld
jge
lahf
arpl
mov
daa
outsl
push
rcrl
jno
test
mov
sbb
xor
mov
xchg
movsl
ljmp
add
jecxz
out
dec
mov
lds
subl
lea
push
pop
cli
movsl
pusha
mov
add
add
sbb
js
jae
fsubr
mov
jg
icebp
ret
cltd
shlb
pop
dec
jbe
cld
scas
cld
adc
dec
pusha
lock
jae
fs
inc
push
xor
fidivrl
fsubrl
inc
pop
mov
push
mov
inc
je
or
inc
add
cwtl
mov
mov
and
jp
sbb
rcrl
test
cmp
pop
xor
test
out
jmp
pop
inc
mov
adc
push
icebp
in
insb
mov
cmp
or
add
stos
mov
ficompl
les
jns
adc
es
adc
xchg
aaa
inc
inc
mov
stc
loope
dec
out
icebp
inc
mov
icebp
rorb
insl
add
jle
adc
addl
push
stos
sub
add
mov
adc
jl
ret
lds
idivl
push
pop
cltd
xor
inc
fwait
ss
int3
stos
int3
push
ret
fldenv
test
bound
pop
hlt
arpl
shrb
hlt
xor
stos
ljmp
pop
cmc
das
outsl
xchg
push
out
and
icebp
movsl
cmp
jae
aaa
cmc
xchg
outsl
ja
sbb
aad
stc
insl
lret
sbb
vpor
add
addr16
ret
mov
pop
aaa
jno
pop
lret
inc
sub
jb
push
dec
jge
inc
inc
xchg
imul
xchg
or
mov
loopne
rcll
adc
xor
xor
cmp
nop
sbb
sbb
cwtl
xchg
add
fidivrs
sbb
sub
out
dec
xchg
jae
sbb
sub
push
mov
fisttps
iret
jge
xchg
adc
inc
mov
xchg
add
stos
pop
and
and
add
mov
outsl
call
or
lods
test
lock
jo
sub
in
icebp
outsb
pop
int
push
mov
or
cli
jns
fildll
mov
lock
adc
mov
push
xchg
push
xor
lret
inc
lret
xchg
in
and
loopne
mov
push
out
sbb
inc
mov
push
std
outsl
out
add
std
sbb
jg
into
inc
inc
stos
std
imul
sub
dec
inc
mov
loopne
adc
xlat
nop
mov
jg
dec
jno
lret
adc
and
cmpsb
lcall
sbb
sub
or
fistl
sbb
jnp
pop
adc
xor
shll
fcmovnb
jbe
dec
pop
pop
shrl
add
lea
or
pop
mov
mov
xor
mov
mov
or
notb
stos
or
mov
test
inc
shl
daa
faddl
and
sarl
mov
mov
lods
dec
sub
pusha
jg
callw
mov
push
fwait
in
cmpsl
xchg
xchg
jp
outsl
xchg
pop
push
adc
ds
test
xchg
fwait
sub
fmull
je
adc
push
push
jp
xor
fsts
shrb
lcall
and
dec
call
adc
push
inc
sbb
xchg
mov
in
test
ds
arpl
mov
in
fwait
je
mov
popf
lea
std
into
cmp
pop
sbb
mov
pop
das
xchg
aad
frstor
jp
stos
out
inc
mov
xchg
xor
cwtl
pop
pop
stc
mov
ret
jne
and
out
jle
xchg
loope
cmpsb
mov
pop
cmpsl
inc
cld
pop
sub
push
sbb
iret
data16
or
gs
lret
je
xchg
out
sub
dec
xchg
jge
push
or
hlt
pushf
adcl
and
sub
cmp
ret
adc
ljmp
push
adc
pop
insl
push
rcrl
sub
push
pop
cltd
scas
aaa
dec
xchg
dec
and
std
push
in
push
xor
inc
in
cmp
mov
or
ret
movsb
pop
and
add
fldcw
cli
and
arpl
jne
data16
js
and
mov
cmp
dec
mov
or
shll
or
cmp
adc
jae
test
cmp
inc
vunpckhps
adc
sahf
int3
movsl
xor
icebp
or
lds
outsl
sarb
adc
and
sti
iret
js
adc
bound
xchg
and
lds
dec
inc
call
adc
cmp
push
cmp
repz
add
sti
and
jo
jne
es
jno
sub
out
mov
out
decb
pusha
movsl
cmp
pop
jae
vpunpckhqdq
fcomps
aas
cli
movsb
pop
or
rol
scas
fs
call
mov
inc
sahf
pop
or
push
sbb
xlat
out
sbb
lret
shlb
arpl
push
iret
in
add
pop
xor
xchg
outsl
sahf
push
rorl
leave
adcb
add
cwtl
mov
pop
add
enter
cli
jle
inc
vpmullw
lock
sub
mov
pusha
fucom
or
pop
std
dec
pushf
xchg
mov
lcall
adc
and
jns
or
loopne
pop
lock
mov
xchg
cltd
rcll
push
xchg
and
scas
pop
fsubs
sub
je
lock
and
xchg
cmc
jns
rorl
adc
xchg
cmc
adc
sahf
jb
sub
in
mov
xor
mov
rcr
and
cmp
insl
mov
add
sub
popf
xchg
sbb
mov
cmp
sbb
xchg
jo
and
sbb
xchg
out
cmp
lock
scas
scas
rcl
pop
fimuls
pop
loope
in
loope
int3
jno
push
rol
dec
das
xor
test
mov
mov
xchg
mov
scas
pop
cmp
sub
fs
and
inc
test
inc
or
cli
pop
mov
mov
arpl
pop
and
push
lret
adc
and
adc
decb
sahf
jge
sub
gs
mov
aaa
pop
fwait
jge
push
stos
lods
push
ret
shll
mov
movsl
call
fcomip
dec
push
mov
roll
jg
push
xor
xchg
mov
inc
lret
jmp
jp
lret
in
ret
sar
pop
mov
or
test
mov
jge
scas
inc
scas
repnz
pop
sahf
add
nop
cld
pop
pop
jge
stos
scas
lds
mov
std
dec
mov
test
adcl
adc
push
or
ljmp
dec
sub
push
shlb
jge
andl
out
cmp
in
push
adc
iret
orl
in
add
sub
jl
xchg
in
enter
sub
cmp
sahf
pop
aas
mov
fadds
pop
jmp
in
sbb
mov
popf
dec
mov
lock
fmull
push
pop
xchg
push
push
mov
mov
mov
stos
inc
insb
ffreep
ret
js
popf
icebp
xor
and
xor
jecxz
mov
cmp
xchg
adc
jae
or
push
xor
andl
les
cwtl
sbb
sub
xchg
pop
jl
mov
nop
jmp
repnz
mov
lock
test
pop
enter
stc
push
and
adc
daa
iret
sbb
nop
xor
inc
or
fnstsw
pop
les
inc
xchg
hlt
scas
outsb
cmp
adcb
mov
jp
loopne
int
cltd
add
xor
les
enter
rcr
out
fisttpl
outsb
push
icebp
fcomps
lds
push
mov
out
inc
fwait
inc
xchg
pop
xchg
sbb
aad
xchg
cmp
daa
aas
jle,pn
xor
xor
insb
insb
jl
bound
jg
outsb
dec
push
cmp
std
jmp
test
push
idivl
push
ret
in
push
jl
sub
xchg
test
mov
orb
sbb
or
sub
call
xchg
ljmp
mov
test
sbb
fsub
push
pop
addb
loop
lret
add
sub
fdivrs
push
in
mov
lods
push
rolb
cmpsb
test
inc
mov
add
sbb
push
xor
mov
sub
mov
subl
jp
mov
fadd
gs
shl
cmc
sub
out
fbld
jg
jmp
test
xlat
ja
daa
push
into
xchg
or
pop
pop
adc
mov
repz
dec
daa
adc
jge
lods
sahf
pop
pop
cld
inc
fwait
mull
and
mov
enter
rolb
mov
jmp
xchg
loopne
sti
mov
lock
idivb
imul
ss
idivb
fs
lret
lss
in
jo
inc
leave
imul
ret
add
adc
lcall
dec
xchg
push
adcb
je
aam
in
les
push
inc
inc
push
inc
push
sbb
xchg
xlat
test
rcll
pop
sub
cs
roll
jae
adc
inc
push
xchg
cmp
movsb
add
hlt
call
jbe
add
cwtl
cmpsl
je
cmp
inc
stos
js
sbb
jp
daa
pop
dec
sbb
mov
pop
imul
sbb
pop
or
lret
ds
xor
sbb
pop
bound
mov
inc
sbb
pop
pop
es
sbb
add
cmp
adc
mov
roll
je
xor
jle
lret
xchg
loope
jmp
pop
dec
in
mov
popf
js
xor
mov
cwtl
aam
movsb
mov
and
rol
xor
loope
sbb
call
adcl
mov
sub
add
fldt
int
cld
or
xchg
xchg
ljmp
in
sub
jp
mov
jp
pop
arpl
fdivr
ljmp
xchg
or
sbb
adc
push
ficompl
testl
dec
mov
stc
cwtl
das
popa
movsl
in
mov
adc
adc
lock
scas
push
inc
aam
add
ja
shlb
js
adc
mov
or
mov
lcall
mov
mov
mov
outsb
pop
xchg
incl
dec
test
or
in
and
cli
dec
outsb
lahf
popf
inc
push
push
pop
outsl
mov
xor
mov
mov
sbb
pop
inc
movsb
scas
mov
loop
cltd
in
scas
xchg
ficompl
push
out
jl
mov
jle
mov
daa
mov
lock
fwait
sbb
adc
stos
inc
sbb
ljmp
sbb
and
imul
sbb
dec
add
lahf
add
out
fcomip
mov
cltd
jg
dec
lahf
adc
loopne
and
dec
leave
fsubrl
not
inc
mov
out
pushf
loop
mov
int3
mov
cmpsb
ja
adcb
cltd
mov
aas
and
and
pop
dec
mov
aas
xor
or
std
hlt
xchg
jno
call
xchg
call
or
mov
sahf
cmp
xor
xorl
fmuls
sti
xchg
mov
cltd
push
inc
fndisi(8087
scas
mov
sub
ret
gs
jl
push
jmp
sub
loop
clc
pop
mov
or
or
insl
jg
mov
and
mov
sbb
xchg
cmc
adc
ss
clc
fwait
jnp
xor
xor
ljmp
sub
addr16
jbe
mov
out
cmc
sub
adc
repz
mov
aaa
fstpt
sbb
fs
inc
push
cmp
sbb
pop
ret
lahf
xor
mov
sbb
lds
mov
ds
mov
sbb
mov
repnz
mov
dec
mov
mov
pushf
or
lods
stc
and
fimull
std
pop
icebp
xchg
jmp
sbb
stos
add
pop
inc
sbb
mov
jecxz
pop
sbb
in
mov
insb
xchg
addl
dec
pusha
sbb
cmpsb
mov
jbe
pop
clc
mov
add
or
push
inc
and
insl
jle
mov
or
sbb
cmc
ss
pop
dec
das
jecxz
cmp
cmpsb
xor
imul
xlat
mov
ss
fisttpll
jle
inc
insb
jp
jle
ss
sbb
fimull
sub
inc
push
xchg
stos
mov
sub
call
repz
aad
and
xchg
and
int3
dec
mov
dec
inc
test
xor
inc
repnz
cld
test
aaa
sbb
jmp
fidivs
xlat
or
ljmp
add
mov
push
cmpb
xor
jecxz
sbb
test
orl
cmp
inc
dec
xor
nop
stos
aaa
adc
pop
cld
scas
rorb
add
pop
jle
sub
aam
add
enter
ljmp
cmp
xor
lds
xchg
jmp
lds
in
jae
push
jp
dec
fnstcw
ss
mov
outsb
imul
mov
mov
mov
fs
inc
inc
aas
or
lea
mov
or
pushf
inc
sub
xchg
mov
arpl
add
sub
jmp
sbb
loopne
fildll
loopne
xchg
stos
cmp
jo
mov
nop
mov
add
cmp
in
mov
jo
mov
mov
push
push
lar
cmpsb
std
lds
xlat
aad
jle
icebp
leave
adc
ror
fcmovnb
xor
rcrb
cmp
aas
imul
pop
jg
bound
dec
mov
add
cs
das
mov
lods
mov
and
sub
lock
mov
int
inc
flds
mov
cmpsl
mov
dec
int
lods
mov
dec
fisttpll
inc
jp
lcall
adc
push
and
out
mov
sbb
adc
das
fisubrl
imul
addr16
pop
out
cmp
dec
js
push
dec
or
mov
mov
adc
aad
pop
pop
xchg
add
jge
dec
bnd
xchg
loopne
incl
cmp
out
jbe
add
add
cmc
pmaddwd
cmp
je
je
sbb
or
arpl
xchg
jnp
insb
pop
xlat
or
mov
mov
sub
dec
hlt
sbb
mov
xchg
sub
sti
rcrb
adc
call
mov
fwait
popf
sbb
ficomps
data16
mov
xor
jns
in
int
sbb
insl
addr16
jl
sbb
loop
adcl
jae
adc
jecxz
dec
inc
xchg
bound
xor
sbb
add
rcl
hlt
mov
xchg
std
jno
shrb
push
push
sub
iret
xchg
int
sbb
mov
mov
inc
cmp
cs
out
push
dec
push
clc
mov
cmp
xor
test
pop
mov
sub
test
push
decl
dec
jb
in
inc
cmp
push
jecxz
or
jecxz
cwtl
pop
adc
je
out
inc
lahf
sub
insl
push
jp
and
out
pushf
pop
add
iret
jo
mov
clc
aas
enter
out
xchg
aas
out
fdivr
pop
lods
into
jge
insl
int
arpl
cltd
push
roll
outsl
and
daa
fdivl
or
mov
out
movsb
or
imul
pop
xchg
cmpl
aas
rcrl
pushf
cmpsl
sub
enter
fistpll
stos
cltd
imul
jbe
sub
clc
mov
xchg
xchg
repnz
mov
mov
stos
xchg
call
xlat
push
and
cmc
add
addr16
mov
add
dec
ja
and
cmp
popf
xor
outsb
cs
push
mov
int
sub
mov
shl
push
out
push
jg
mov
loop
dec
or
pop
mov
cs
cwtl
sbb
jnp
fsubs
xor
lock
jnp
dec
dec
dec
jecxz
adc
cmpsl
test
testb
sbb
leave
xor
out
xor
aad
cmp
inc
into
jb
jns
mov
das
ret
call
outsb
stc
arpl
aad
imul
shll
clc
push
pop
mov
mov
cwtl
out
fildll
mov
aaa
aaa
sbb
add
divb
and
inc
jmp
stos
xor
push
xor
cltd
sub
cwtl
adc
push
push
lahf
xchg
stc
mov
xlat
sbbb
inc
shr
mov
iret
lea
pushf
lret
mov
sub
jecxz
faddl
sbb
test
test
rol
cli
dec
ss
in
cmp
sbb
dec
das
xchg
notb
loopne
addr16
ds
rcrl
xlat
shl
mov
into
pop
movsb
or
cmpsb
lcall
roll
in
arpl
gs
popa
dec
adc
popf
or
xor
adc
dec
arpl
inc
mov
adc
cld
into
and
or
cwtl
movsl
out
scas
enter
sub
or
scas
lds
jmp
adc
scas
leave
ret
aad
movsb
stos
sahf
ror
out
std
les
into
pop
repz
adc
push
push
and
sub
push
ja
addb
lds
mov
in
push
cli
insl
push
xchg
push
adc
pop
jl
add
pop
fs
rcrl
out
lret
cmp
insl
jecxz
int3
xchg
out
scas
not
inc
notb
lret
test
sbb
or
out
in
or
mov
les
inc
xchg
mov
int3
push
add
cwtl
xor
push
inc
scas
out
bound
or
push
jmp
cmp
xor
and
insb
inc
dec
lret
xchg
xchg
inc
shll
cmpsb
cld
mov
je,pn
in
arpl
cmpb
fcmovnb
push
loope
xor
outsb
es
mov
mov
daa
pushl
or
mov
jg
pushf
outsb
push
popf
inc
dec
or
cmovb
fdivr
mov
dec
jecxz
enter
inc
or
pop
loopne
inc
mov
cmp
enter
xchg
and
test
and
jmp
jno
xchg
mov
addr16
mov
adc
and
out
adc
out
push
cld
sbb
in
aam
sbb
sub
sti
inc
xchg
pop
movl
jmp
and
shlb
aad
popf
lds
xor
fsts
mov
and
mulb
mov
dec
mov
jecxz
xchg
mov
mov
push
adc
pop
ja
mov
daa
mulb
loope
arpl
jno
ja
cmc
iret
clc
mov
pop
push
dec
in
rorl
lods
mov
sub
repz
sti
xlat
mov
shll
pop
test
imul
xor
cmp
iret
push
mov
testl
pop
cmpsl
jmp
xor
sti
or
xor
lods
add
jnp
dec
cmpl
imul
or
shrb
sub
mov
cmp
pushf
in
sub
and
insl
bound
fistpll
dec
fbstp
dec
mov
imul
add
lret
in
mov
decb
dec
mov
xorb
xchg
clc
mov
in
pusha
mov
sub
test
iret
mov
aas
test
sbbl
xchg
jg
call
clc
ficoms
mov
or
outsb
insl
jle
sub
sbb
popf
popf
push
mov
and
sbb
ret
sar
ds
mov
cmp
xchg
fcoms
mov
or
outsl
inc
dec
push
mov
xchg
scas
push
stos
dec
repz
xchg
mov
adc
cmp
jp
call
gs
mov
or
jecxz
sbb
rolb
loop
cmp
jbe
inc
das
push
je
stos
push
int3
jno
test
fbstp
es
fidivrs
mov
xchg
pop
cmc
mov
and
mov
lds
and
jno
outsl
or
push
dec
jle
jl
dec
mov
clc
pop
sbbb
dec
sbb
nop
imul
out
mov
movsl
mov
dec
outsb
daa
jne
pusha
jbe,pn
push
pop
mov
inc
xchg
icebp
bound
adc
jbe
dec
push
mov
add
jne
xchg
mov
mov
popa
sbb
adcb
jle
inc
imul
lock
pushf
adc
ss
mov
dec
inc
pop
mov
sbb
movsb
mov
mov
add
push
and
sbbl
in
add
mov
pop
xchg
ja
imul
sbb
xchg
pop
pop
xchg
push
nop
addr16
mov
mov
mov
pop
and
dec
push
jne
inc
jo
pushw
fsubrp
dec
pop
ds
cli
and
ret
mov
ret
jae
push
xchg
jle
or
dec
jne
or
push
push
stos
xor
xchg
jmp
sbb
add
dec
scas
out
int3
fst
hlt
fsubr
cmp
orl
sub
aas
lcall
mov
lods
and
and
movsb
mov
jae
lods
loope
pop
in
mov
pop
js
stos
popf
arpl
mov
lret
popf
push
insb
xor
dec
mov
mov
roll
dec
or
add
xlat
in
push
push
gs
cmpsb
cld
fistpl
cs
pop
repz
repz
ds
loope
adc
pop
int3
sbb
push
jbe
sbb
add
outsl
imul
loop
loop
lds
add
inc
dec
fnstsw
imul
mov
scas
pop
imul
fisttps
inc
push
lock
push
push
jbe
popa
xlat
adc
lods
push
mov
mov
cmpsl
roll
dec
nop
cmp
cmpsl
imul
lea
mov
or
mov
mov
aad
sub
push
icebp
xor
jp
cmp
sub
jb
fists
sub
aam
test
sbb
or
popa
push
push
enter
outsb
mov
cs
cmp
add
or
mov
std
jae
dec
loopne
jo
adc
adc
out
mov
in
movsb
add
mov
or
insl
ja
mov
cmpl
pop
js
pop
aad
int3
cmpsb
xor
push
add
xchg
sbb
scas
mov
incb
rcr
adc
pop
in
xchg
mov
std
in
xchg
xor
or
lcall
jl
push
ret
ret
leave
and
add
push
mov
jge
xor
loopne
push
aaa
outsl
stc
sbb
jge
lock
popa
sub
int3
test
stos
pop
lock
xorl
mov
xor
or
sbb
lret
fs
push
dec
dec
les
ljmp
mov
sarb
mov
or
daa
test
sbb
out
movsl
out
stos
pop
fisttpl
jne
mov
jne
outsb
push
cwtl
in
fwait
in
in
movsl
jmp
repz
loop
outsl
add
lcall
adc
sahf
add
arpl
outsb
adc
fdiv
bswap
add
das
dec
fsubs
push
lcall
push
jns
jge
cmp
out
lea
mov
and
push
lahf
lea
jno
movsb
add
jne
pop
rcrb
push
inc
call
cmp
jns
std
out
rcl
hlt
imul
fcmove
sub
outsb
int3
fisubrs
dec
pop
sub
xchg
pushf
testl
mov
in
in
mov
and
in
jl
out
scas
mov
mov
icebp
mov
jo
dec
add
pop
into
mov
jecxz
sub
and
push
pop
pusha
xchg
xchg
cli
push
mov
cwtl
pop
adc
rorl
push
xchg
call
jae
aas
xchg
pop
pop
xlat
sub
out
inc
in
jns
lret
push
movsb
popf
push
shld
push
fadds
xchg
into
push
lds
push
mov
inc
mov
fiaddl
mov
jno
mov
mov
rolb
lahf
std
nop
add
data16
test
pusha
mov
mov
cmp
sub
aam
sbb
jb
jo
aad
pop
push
push
movsb
ret
push
adc
sbb
jecxz
shlb
sbb
fnstsw
ret
and
pop
push
loopne
sub
or
or
test
push
int3
insl
scas
jno
inc
xor
imul
jg
cmc
mov
sbb
adc
lret
push
adc
sub
jno
dec
dec
enter
push
js
jecxz
or
mov
add
iret
mov
dec
insb
xchg
pop
dec
repz
sbb
xchg
lret
xchg
pop
adcl
add
jl
push
or
sub
lods
les
repnz
sbb
inc
inc
xorb
popl
stos
add
mov
xchg
dec
test
jecxz
fsubrl
add
enter
fadds
aam
sub
ljmp
mov
out
mov
mov
sbb
dec
fs
ja
mov
cmp
jns
mov
in
and
lret
xor
xor
popf
aas
pop
scas
in
and
lahf
outsl
addl
adc
rol
mov
cmp
mov
or
shll
std
arpl
ljmp
cmp
movsb
ffreep
test
enter
fidivl
popl
lea
sub
fld
aas
ja
sbb
iret
pop
addb
sub
xchg
imul
xor
push
dec
xchg
insb
cld
mov
adc
ljmp
js
movsb
add
cmc
pop
mov
jnp
add
mov
xchg
lea
xchg
mov
loop
add
movsb
enter
outsl
mov
mov
mov
xchg
mov
clc
adc
out
shll
jge
stc
data16
or
pusha
mov
jno
inc
stos
cld
inc
shl
fwait
xor
fnstenv
rclb
mov
jno
lcall
mov
adc
loop
xchg
pop
xor
mov
lea
aam
pop
push
lcall
or
mov
sub
push
insl
pop
mov
popf
cmp
cmp
sub
pop
js
cmp
add
adc
cltd
dec
outsl
cmpsl
loopne
mov
mov
add
xchg
subl
lods
jle
in
mov
int3
out
push
cltd
dec
leave
add
dec
leave
ljmp
xchg
push
add
arpl
sarb
insl
and
cmp
sub
ret
cmc
or
xchg
es
adc
into
lods
xchg
imul
je
xor
mov
push
out
xchg
mov
xlat
ret
jecxz
cmp
jnp
enter
loopne
inc
notb
lret
pminub
inc
fdivp
adc
sbb
mov
adc
lea
insb
ja
xlat
test
stc
xchg
imul
mov
arpl
lea
imul
jnp
sub
arpl
arpl
inc
lods
out
and
inc
jnp
mov
scas
in
adc
adc
xchg
stos
mull
xor
pop
ss
xchg
sub
jecxz
push
ljmp
xchg
es
aaa
xchg
jae
xor
cwtl
cld
or
adc
jbe
xor
into
f2xm1
xchg
pop
mov
ret
mov
xor
inc
and
addr16
shll
mov
dec
adc
lods
dec
pusha
clc
shlb
ss
mov
les
mov
sti
repz
adc
push
das
pop
rcrb
out
popa
adc
mov
jmp
cmc
pop
lods
leave
scas
sub
adc
lret
mov
sbb
movsb
aad
loopne
cmp
jnp
cwtl
jecxz
lret
mov
sub
es
fsts
dec
test
pop
pop
adc
in
cs
jns
in
popf
fs
je
mov
cmpsb
xor
repnz
outsl
push
xchg
pop
push
outsl
fldcw
jno
nop
or
xor
xor
lahf
push
hlt
mov
jo
sub
stos
rorl
pop
jb
movsb
mov
test
or
test
sarb
or
mov
mov
xor
add
rcl
adc
xor
push
or
clc
adc
push
adc
or
adc
add
dec
or
or
mov
push
jns
xchg
aas
pop
test
into
lcall
adc
add
jbe
push
sub
pop
hlt
imul
fbstp
or
sti
mov
pusha
mov
fcmovnbe
sub
adcb
mov
or
xchg
dec
cmp
mov
hlt
dec
push
mov
ss
test
dec
jbe
mov
mov
push
or
xchg
mov
mov
inc
mov
mov
test
bound
adc
adc
out
add
loope
insb
cmpsl
test
or
cltd
and
jmp
cmp
mov
cltd
sbb
cltd
outsl
xchg
mov
xor
les
ss
push
call
mov
nop
jg
int
call
andb
or
andb
es
xchg
sub
stos
mov
jb
stc
push
cmp
testb
lcall
add
int
lods
mov
subb
cmpsl
cmp
insb
pop
hlt
sub
mov
inc
out
push
jns
sbb
into
pop
sbb
daa
and
rcl
loopne
mov
add
inc
mov
out
out
mov
pop
xchg
mov
test
pop
mov
mov
pop
sarl
dec
sbb
or
icebp
dec
push
lahf
repz
mov
jle
mov
in
mov
push
clc
outsl
cmp
cltd
sub
inc
pushl
sbb
dec
lret
mov
dec
cmc
or
lea
push
cmp
add
and
push
jnp
fstps
ljmp
cmp
sarb
fs
push
inc
addr16
aam
dec
pusha
stos
sub
dec
cmc
int3
mov
out
dec
data16
sbb
jae
mov
inc
add
xchg
or
add
pop
lret
push
sbb
lock
pop
das
sbb
sbb
mov
pop
or
xor
adc
mov
add
sub
xor
jbe
stos
adc
lcall
pushf
inc
sub
jae,pn
out
mov
inc
jno
xchg
add
jg
lods
ja
ss
scas
cmp
jl
imul
mov
sahf
stc
lods
stos
xchg
mov
int3
sbb
sahf
sbb
and
mov
xchg
pop
mov
pop
jp
iret
and
sub
lret
mov
mov
sti
sub
dec
xchg
dec
fistpll
mov
dec
loop
lret
sbb
push
test
lea
jno
pusha
or
mov
or
fiadds
pop
jge
mov
sub
mov
xor
xor
aam
dec
xchg
int
daa
or
mov
mov
add
pop
fmuls
fwait
pushf
pop
adc
dec
test
das
shl
scas
xor
and
cwtl
and
ljmp
mov
inc
cld
mov
lds
xchg
or
cmpsb
in
xchg
daa
jle
jb
add
ss
outsl
cli
sub
fucomp
push
push
inc
movsb
out
mov
imul
aad
xor
jl
pop
mov
test
pop
mov
nop
jg
xor
inc
divl
test
out
adc
cmc
in
sbb
cmpsb
or
shrl
push
ficompl
cmp
jmp
fcomp
fsubrs
or
dec
mov
ret
push
ja
loop
cmp
inc
jae
dec
dec
cmp
ret
pop
inc
enter
inc
lods
lock
inc
lahf
test
scas
xorb
xchg
in
or
lock
es
cmp
pop
movsl
popa
or
pop
jg
push
cmp
shrb
dec
bnd
jne
xchg
jno
je
xchg
add
inc
repz
out
sbb
push
cmpsb
mov
pop
pop
and
jb
ljmp
dec
dec
pop
sbb
shlb
jbe
aas
test
cmc
inc
and
mov
setno
xchg
jo
jecxz
xlat
dec
rcll
ljmp
movsl
cmp
je
adc
ret
fwait
leave
sbb
cmp
sbb
shlb
xor
negb
and
mov
loopne
das
daa
push
mov
ljmp
ds
aaa
test
xor
ret
xlat
jmp
icebp
sti
xchg
push
gs
shr
xchg
mov
mov
jl
int
fwait
subl
sub
mov
cmp
jo
dec
or
or
inc
fisubs
mov
test
mov
dec
and
lods
lock
inc
add
js
stos
jne
jg
sub
sub
sub
add
mov
add
push
adc
popa
lods
adc
cmpl
rolb
push
push
xor
ret
jge
dec
rorl
stc
push
sbb
dec
nop
icebp
push
loope
pop
pop
push
subb
enter
jne
add
leave
sbb
xchg
outsl
pop
test
sahf
ret
mov
test
in
loopne
dec
imul
sub
lods
and
adc
cmp
imul
mov
and
iret
cmp
bnd
sbb
movsb
mov
add
cmp
add
xlat
dec
add
mov
fs
je
and
pop
jecxz
daa
cmp
add
cmp
mov
scas
xor
inc
adc
dec
ss
sarb
mov
push
cmc
cmp
dec
adc
adc
lret
xor
inc
shlb
out
xchg
mov
or
mov
pop
out
int
aam
stc
cmpsl
negl
je
and
xchg
jecxz
enter
jp
jl
and
sub
and
push
sub
sarb
sar
loope
and
adc
rolb
cld
je
popf
jle
dec
sub
dec
aaa
rol
xor
inc
xchg
push
dec
aaa
push
add
arpl
in
aaa
aas
bound
xchg
sbb
dec
lock
sarb
inc
push
and
xor
push
je
mov
cmpsl
cld
xor
dec
dec
sahf
test
lahf
add
xorb
sbb
dec
adcb
jecxz
sub
inc
and
and
and
sbb
fdivr
outsb
lret
pop
adc
daa
xor
js
or
add
aas
jl
arpl
lret
and
lock
push
bsr
adcl
test
test
or
mov
cmpsb
xorl
dec
in
lret
fiaddl
dec
aaa
xchg
scas
sahf
and
arpl
jmp
dec
aas
inc
inc
add
mov
dec
ja
cmpsb
movl
popa
sbb
pop
xor
sbb
pop
mov
scas
adc
push
sbb
pop
lods
pop
mov
jp
push
dec
or
xor
mov
pop
xlat
mov
pop
cs
add
add
push
inc
das
push
iret
stc
popa
sbb
lods
push
out
jecxz
xchg
or
pop
dec
add
or
movsb
mov
cmp
adc
into
fnstsw
cmpsb
adc
int
inc
out
and
rclb
mov
dec
cmpl
sub
mov
pushf
bound
push
out
imul
xlat
test
mov
mov
jne
sub
mov
aad
lret
xchg
insb
push
mov
ss
std
mov
int3
out
inc
mov
nop
fcompl
mov
pop
aam
inc
xchg
xchg
and
xchg
stc
sbb
sub
push
dec
mov
insb
mov
xchg
jae
fstps
mov
clc
jg
mov
push
sbb
jns
lods
daa
jne
ljmp
lea
lret
mov
xchg
jne
arpl
je
mov
bound
mov
sti
fisubl
jp
cmp
sarb
mov
rorl
stos
dec
in
add
fwait
and
mov
mov
cmpsl
ds
les
addr16
xor
aad
or
push
in
pop
ret
or
xchg
xchg
loop
and
push
jge
iret
out
push
xchg
call
cmp
fstps
dec
adc
fwait
sbb
lret
dec
movl
xchg
xchg
jmp
push
pop
dec
data16
add
push
xchg
enter
xchg
fwait
cwtl
ds
sbb
data16
shrl
xchg
xor
lods
xor
add
leave
repnz
fs
fidivrs
inc
and
push
fcompl
add
cs
xlat
repz
inc
jae
inc
xchg
dec
push
pop
or
lods
ljmp
xlat
cli
cld
mulb
push
sbb
stos
add
jns
push
push
xchg
mov
stc
aaa
mov
insb
cmp
inc
adc
mov
jnp
dec
stc
pop
ss
in
lods
scas
mov
js
ds
mov
fisttpll
pushf
inc
jmp
lock
pop
inc
shll
ret
mov
jge
cmp
push
xchg
sbb
mov
inc
insb
es
adc
pop
mov
jne
repnz
insl
cs
test
xchg
mov
sbb
gs
xor
sti
in
pop
fldcw
lock
mov
mov
inc
rol
fwait
xor
mov
mov
popa
dec
test
dec
xchg
fldl2t
hlt
mov
aam
mov
add
mov
cli
test
int
pop
cmp
sub
add
aas
cmp
xor
fildl
popf
sbb
xchg
imul
cmp
inc
repnz
cltd
xchg
out
inc
roll
mov
das
enter
mov
stos
in
sub
inc
jmp
call
jecxz
or
ss
and
adc
sbb
jmp
pusha
test
pop
jle
push
or
push
not
loopne
pushf
xchg
nop
sub
mov
jne
je
and
std
add
jae
ljmp
cmp
cmp
push
pop
add
dec
and
push
sub
sbb
or
jge
push
push
mov
xor
rorl
push
repnz
mov
movsb
ja
adc
daa
insl
fnstenv
ljmp
mov
inc
mov
test
inc
cmp
into
cs
js
mov
adc
fisttpll
insl
xchg
ljmp
ss
cli
test
jge
or
xor
loop
dec
or
pop
push
stos
inc
out
mov
mov
ss
cmp
ffree
lret
lret
xchg
jo
hlt
cmp
pop
clc
jg
push
xor
and
shrl
es
fmull
dec
mov
stos
ret
xlat
int
das
mov
inc
mov
nop
jb
mov
insb
inc
mov
jno
mov
jnp
pushf
jecxz
mov
sub
adc
clc
mov
mov
and
add
jp
loope
add
xor
fcmovne
pop
lock
xor
cmp
jle
xchg
or
fs
hlt
sbb
dec
mov
fildll
and
mov
sbb
mov
pushl
shl
adc
pop
cmpsl
scas
pop
stos
insl
leave
ficomps
lods
cmpb
outsl
fsts
sub
lret
lock
mov
ss
test
pop
and
in
xchg
mov
in
int3
dec
lahf
sub
jecxz
jo
std
ja
mov
sub
or
stc
fmull
adc
xchg
or
scas
and
es
sub
cmp
out
lea
pop
les
adc
imul
loope
pop
pop
sbb
jnp
xor
cmp
cmc
dec
test
outsb
das
loop
iret
and
xor
jne
popa
test
or
in
jns
stc
xchg
sbb
test
lds
stc
outsb
or
mov
mov
scas
fwait
ret
dec
and
cmp
jge
add
xorl
into
dec
mov
imul
jb
fldl
pop
mov
add
daa
cli
aad
cmpsl
mov
xor
xchg
inc
fbstp
push
pop
fildl
sub
movsl
lods
fmuls
jne
les
cli
xlat
movsb
push
mov
shll
lret
dec
add
xor
jl
cltd
push
idivl
cmp
adc
and
xor
ja
out
add
ljmp
jg
or
sti
xchg
mov
les
sub
rorb
xchg
imul
jns
lcall
pop
imul
in
testb
push
xor
cwtl
push
aad
gs
int
inc
inc
test
notl
daa
sbb
cmp
nop
push
xchg
inc
mov
sbb
xlat
ficoml
push
fmuls
fisubs
ret
lret
or
ficomps
jl
pop
icebp
xlat
rclb
aas
shll
andl
jbe
add
outsl
popa
das
pop
into
sbb
cmp
cmpsl
lahf
mov
xchg
int
pop
lea
mov
mov
loopne
and
outsb
insb
test
pop
roll
or
cmp
and
push
push
adc
xchg
jge
add
inc
stos
mov
fs
rcll
rol
cmp
out
dec
fcmovnbe
in
push
mov
lock
or
int
add
insb
into
popf
mov
repz
dec
add
push
arpl
lods
sbb
dec
cmp
push
xor
inc
inc
ficompl
js
xor
outsl
jns
out
lret
jg
cmpsb
dec
test
nop
xor
mov
push
fwait
fwait
jne
jne
cmpb
push
adc
dec
lods
mov
xor
outsb
push
xor
fnstenv
jmp
pop
gs
addl
mov
popa
scas
xchg
dec
sub
mov
add
pop
push
inc
insl
cmc
lds
in
scas
lcall
in
inc
outsb
nop
sbb
popa
arpl
ja
loopne
mov
mov
sub
cmp
rolb
out
push
mov
push
and
stc
aad
std
sti
test
cwtl
pop
lret
pop
add
shl
pushf
pop
mov
adc
sub
lret
cwtl
mull
aaa
dec
mov
xlat
fs
or
adc
loopne
leave
js
push
shll
das
pop
add
dec
push
xor
or
pop
fistpl
push
or
mov
lcall
dec
mov
cmc
xor
add
pushf
pusha
mov
cmp
mov
fs
sub
mov
pop
push
xchg
jmp
mov
xor
out
xchg
ja
sub
adc
pop
scas
mov
jl
push
and
inc
pop
sbb
aam
loop
arpl
adc
pop
sub
jge
push
lods
lret
pop
movsl
inc
jb
in
and
pushf
out
jae
inc
inc
dec
jae
shll
test
cmp
sub
push
insl
add
pop
aad
icebp
andb
in
repnz
push
and
cmp
stc
cmp
and
dec
mov
cltd
imul
push
outsb
jno
nop
push
push
repnz
ret
stos
out
repz
pop
pop
popf
push
sti
mov
std
rorl
cmp
push
inc
cmpb
mov
lret
jg
push
fs
lret
pop
movsb
dec
jns
es
inc
xchg
lods
sub
adc
cwtl
bound
mov
pop
mov
mov
fs
ljmp
dec
jle
xchg
sbb
mov
lock
pop
pop
aaa
cltd
xorb
aas
add
stos
mov
and
pop
movsb
fwait
loope
xchg
dec
aam
jl
fs
push
out
pop
push
xchg
in
jbe
inc
inc
addr16
jge
call
or
and
call
jno
into
or
insb
xor
dec
mov
xchg
aas
notl
and
pusha
or
popa
iret
jbe
aam
xchg
shlb
js
sub
mov
jmp
pop
dec
mov
test
jmp
sub
cli
test
cmp
mov
aas
pop
dec
pop
mov
add
std
pop
adc
jmp
push
lahf
xchg
in
pop
xor
lea
push
scas
jmp
pop
call
test
shl
inc
mov
add
pop
cmc
add
xchg
xor
jl
loopne
mov
xchg
mov
js
in
jns
cmpsb
sahf
pop
gs
xor
rcrb
sarl
hlt
iret
mov
inc
lret
aam
enter
jns
xchg
sub
fildll
sbb
push
cwtl
pop
ret
or
cli
imul
or
in
mov
mov
jge
xor
ror
or
lret
enter
xor
in
dec
stos
mov
and
sbb
mov
pop
daa
jbe
pop
in
data16
inc
nop
jo
fstpt
lods
xor
sbb
mov
rcrl
idiv
pop
or
pop
jmp
xchg
cli
lock
cmp
ja
cmp
js
insl
push
outsl
movsl
ljmp
rol
ds
outsb
adc
aaa
stos
idiv
bound
je
mov
push
push
cmp
lret
test
iret
mov
ret
add
xchg
jne
adc
dec
sub
dec
test
je
or
and
and
xchg
pop
xchg
adc
jb
xchg
daa
scas
ret
adc
mov
add
popf
jne
in
ret
inc
sbb
fcomip
mov
clc
and
xor
adc
jbe
inc
xchg
js
push
xlat
add
cmc
jae
jmp
iret
test
loopne
sahf
ret
push
pop
roll
cmc
mov
aaa
test
ss
repnz
inc
mov
cmp
mov
pop
mov
jle
divl
cmp
inc
sbb
rcrb
loope
mov
sub
sti
cwtl
xchg
pop
cltd
inc
clc
popa
xchg
or
inc
negl
jbe
mov
push
sub
pop
arpl
xchg
lret
jne
mov
mov
sti
and
outsl
dec
clc
addb
or
mov
imul
and
add
cmpsl
scas
daa
push
pop
jns
cmp
stc
mov
inc
sub
pop
pop
xorl
test
cmp
add
aad
adc
fdivr
mov
cli
add
clc
jge
leave
fwait
sbb
xchg
sbb
push
bound
rcr
cmc
jmp
add
fisubrl
mov
mov
jle
push
inc
test
scas
dec
or
dec
fnclex
jno
flds
sti
outsb
jle
cltd
mov
xor
imulb
pusha
xor
dec
jns
ss
int
int
clc
pushf
popa
movsl
pop
jge
dec
movsl
dec
jl
sbb
mov
mov
jecxz
inc
push
mov
stc
mov
mov
repnz
arpl
int3
or
das
nop
pop
fdivrp
lcall
pop
pop
test
bound
mov
pxor
ret
int3
cmpsl
lea
sbb
ja
xor
jbe
xchg
fs
icebp
repnz
cmc
pop
xorb
je
push
jge
mov
cmpl
ja
sarl
ficomps
jo
mov
out
mov
and
fnsave
int3
into
loop
xor
lods
jle
pop
shll
scas
cwtl
sbb
dec
xchg
inc
outsl
outsb
cmpsl
jne
push
cmpsl
mov
push
scas
cmp
pop
cmc
push
add
xchg
adc
mov
xor
clc
push
in
inc
pop
imul
push
pop
cmp
repz
rcrb
mov
lret
jo
or
sub
mov
mov
pop
lock
adc
outsl
dec
dec
cmpsb
rcrl
or
das
pop
adc
sbb
mov
imul
sub
popa
mov
lahf
stos
and
mov
ljmp
ja
xchg
mov
cmp
fxsave
or
adc
psubsb
cmp
mov
jbe
test
and
gs
sbb
sub
repz
out
int
pop
je
jecxz
cmp
pop
xor
inc
test
fcoms
xchg
call
dec
cwtl
hlt
daa
jae
das
mov
ljmp
mov
into
xchg
sbb
fldl
rcll
out
add
adc
fbld
js
stos
test
ds
insb
mov
out
mov
jae
jp
out
dec
icebp
push
fwait
pop
and
xchg
icebp
sub
fistpl
cmp
sti
out
sbb
dec
stc
lods
push
cmp
adc
dec
in
subb
mov
dec
aam
adc
jp
push
adc
sahf
push
mov
sub
pop
icebp
and
arpl
add
ret
lock
jbe
out
sbbb
inc
xchg
xchg
xor
mov
jmp
xchg
repnz
adc
ret
lods
in
cmp
dec
and
sub
scas
in
lcall
in
jo
push
cmpsl
xchg
into
and
out
mov
push
xor
fistpl
popf
xlat
lea
outsl
pop
push
stos
cltd
gs
ret
ret
shl
repz
es
imul
jne
mov
imul
jle
jl
subl
outsb
fstps
loop
sbb
xchg
jge
xor
pusha
mov
sub
pop
cmp
aas
xlat
xchg
cwtl
leave
data16
mov
inc
cmp
pop
jg
push
mov
push
mov
imul
jne
cmp
repnz
and
shll
mov
fcomp
add
enter
xchg
sub
push
fisttps
mov
sub
insb
jb
aam
movsl
stos
xor
outsl
inc
aad
clc
jmp
jl
sbb
mov
scas
xor
cltd
stos
jecxz
jg
push
popf
xchg
adc
sbb
push
icebp
or
lret
dec
cmp
and
aad
loop
aaa
in
test
arpl
mov
sub
test
dec
andl
mov
bound
push
dec
fbstp
xchg
das
jmp
inc
insb
add
lret
xchg
leave
dec
lock
stc
mov
push
xchg
mov
clc
cltd
jns
cwtl
imul
mov
and
pop
cwtl
movsb
sbb
std
push
je
xor
je
movsl
in
insb
jb
cmp
scas
rcrb
ret
xor
in
mov
dec
sbb
xchg
fstps
push
insb
sub
mov
mov
mov
rcrl
mov
push
mov
mulb
or
flds
or
jge
xorl
out
cmp
pop
adc
add
fs
dec
xchg
mov
lret
xchg
jmp
fisttpl
push
das
mov
pop
inc
ljmp
rolb
std
sub
popf
mov
xchg
mov
fwait
rclb
out
or
push
fiaddl
push
xchg
xchg
pop
call
dec
sub
lods
scas
loope
cmp
loope
mov
pusha
ret
fcoml
leave
iret
lret
xor
fwait
pop
lcall
aam
icebp
xchg
xchg
cmp
push
or
icebp
and
cmc
or
jge
daa
decl
lea
fstl
add
data16
adc
cmpsl
inc
xorb
out
mov
lock
scas
and
out
lcall
or
mov
jns
pop
adc
sahf
sub
and
aad
popl
call
fmuls
gs
lds
xchg
inc
and
call
pop
ja
in
pop
jmp
fisubrs
pop
out
mov
pop
dec
push
stos
cmpb
rorb
mov
xchg
aam
dec
cmp
fmul
xor
pop
mov
mov
add
andb
jne
into
jmp
jo
adc
sbb
inc
jecxz
in
inc
fmuls
pop
sub
xorl
repnz
adc
jl
lods
add
fildl
shr
lret
scas
popf
scas
or
flds
dec
ret
out
cltd
mov
ja
jo
adc
frstor
dec
add
pop
notb
popf
enter
push
cmp
cwtl
lret
inc
mov
jae
xchg
mov
xchg
mov
ljmp
mov
add
cmpb
fwait
or
sub
insb
insl
xchg
rcrb
mov
aad
pop
and
sub
mov
cmp
adc
sub
inc
push
mov
sti
adc
or
lea
push
mov
mov
lods
call
mov
mov
xchg
out
xor
aaa
xchg
std
adc
pop
loopne
push
pop
jno
push
aas
int
pop
inc
jl
push
or
adc
out
jns
adc
scas
jns
adc
add
push
adc
daa
xchg
ljmp
mov
sbb
repz
mov
pop
mov
jno
gs
or
xchg
mov
mov
rorb
mov
inc
cwtl
or
imul
pop
adc
dec
push
fsts
mov
mov
sbb
adc
mov
inc
add
and
mov
nop
inc
and
mov
sbb
ss
pop
push
xchg
aad
sub
lea
pop
jne
ljmp
jb
pop
xchg
outsb
hlt
int
pop
pushl
dec
out
shll
mov
ds
dec
pop
mov
xchg
push
sub
jae
dec
sub
out
nop
ljmp
cmc
pusha
fsubp
imul
pop
les
mov
or
add
movsb
dec
les
insl
xchg
adc
popa
insb
in
add
iret
lahf
or
mov
jno
xchg
jp
cli
mov
inc
pop
jo
cld
mov
cmp
jns
push
aas
jne
push
sub
repz
xor
daa
aad
in
shl
sub
and
lret
jl
cmc
or
lahf
int3
jmp
popa
push
outsl
nop
hlt
sbb
ret
dec
pop
push
test
pop
push
mov
pop
push
pop
pop
mov
mov
aaa
movl
iret
bound
test
loop
ret
out
sub
int3
test
jge
test
inc
mov
sbb
jmp
mov
scas
cs
jnp
fstpt
xor
xor
js
movsl
sub
daa
xchg
imul
mov
cltd
xchg
mov
push
pop
xor
int3
adc
stc
pushf
movsl
and
in
xchg
push
xor
jge
xchg
ja
mov
lahf
out
bswap
mov
jp
inc
jl
fcos
popf
mov
data16
sub
sbb
testb
dec
fdivl
xor
and
aas
sub
jnp
add
and
adc
xor
sub
sub
test
sbbb
mov
pop
pop
sbb
dec
jae
xchg
faddp
sbb
out
add
xor
movsl
jb
cmp
js
xchg
cmpsb
add
mov
dec
jmp
imulb
imul
pop
aam
dec
mov
shlb
mov
movb
ljmp
adc
imul
std
cs
xchg
lock
icebp
xchg
sbb
movsb
movsl
fbstp
jge
cmp
jb
jno
push
mov
push
mov
in
dec
jo
fwait
mov
sahf
or
ljmp
sbb
cmp
mov
sub
out
movsl
mov
jb
cmpsb
and
xchg
divl
cltd
jle
insb
push
cmp
idivl
cmp
test
scas
insl
add
cwtl
pop
les
fwait
sub
inc
dec
jae
and
sbb
xor
aam
jle
add
push
inc
mov
xchg
pop
jg
mov
pop
pop
in
divb
or
mov
add
addr16
mulps
push
out
and
mov
mov
push
jne
std
dec
clc
mov
xchg
xchg
les
jp
cld
dec
or
ret
bound
sbb
out
lock
pushf
out
rorb
and
sbb
xor
decl
jbe
mov
jbe
and
mov
cltd
incb
scas
scas
addr16
divb
sarb
push
push
mov
add
or
test
adc
cmp
or
test
subb
fidivrs
mov
ds
testb
adc
fwait
mov
sub
inc
cli
dec
rcrb
push
fnstsw
mov
aad
push
cld
out
add
inc
fcmovnbe
lock
mov
cmpsb
movsl
adc
sahf
shr
lds
or
adc
push
test
orl
incl
push
je
ret
dec
int3
xchg
divb
xchg
arpl
xchg
movsb
mov
xor
and
xchg
les
mov
cmp
lds
and
iret
mov
shrb
sbb
fwait
test
xlat
loope
aam
gs
paddsw
inc
add
xchg
mov
jne
adc
lret
mov
or
icebp
cmpsb
es
xorb
test
push
ficomps
divl
ja
scas
jp
mov
mov
inc
add
pop
push
mov
mov
xchg
clc
dec
add
xor
mov
mov
dec
leave
fdivl
xchg
test
fsubr
add
push
insb
push
js
cmp
daa
cmp
cmp
push
add
xchg
xor
mov
pop
mov
popa
rcll
sub
stos
jbe
mov
out
stos
scas
cmc
pop
ja
jge
fcomi
cmp
cmpsb
je
ret
mulb
dec
es
icebp
inc
xor
in
hlt
pop
sti
imul
mov
or
mov
dec
mov
and
cmp
fdiv
dec
xor
fistl
rcll
insl
mov
test
pop
stos
jl
mov
mov
xchg
stos
lcall
test
cmp
cmp
cmpsl
or
push
shrb
mov
xchg
add
xor
mov
sahf
ret
push
inc
adc
jmp
ret
xchg
mov
jecxz
pop
fisubrs
popf
mov
sbb
rcr
inc
and
xor
out
jo
into
movsw
cmpsb
cmp
in
andl
loopne
rol
mov
cmc
add
hlt
xchg
fsubr
loope
mov
push
loop
arpl
movsb
nop
in
stos
mov
inc
movsb
adc
cld
push
ret
loop
icebp
push
fcmovbe
nop
repnz
arpl
stos
pop
sub
sti
test
outsl
jnp
push
sarl
mov
or
cmpsb
loopne
mov
xor
jl
sub
cwtl
insl
or
cmp
inc
mov
xor
push
inc
sub
jns
outsb
inc
or
mov
adc
push
incl
cmp
out
das
test
mov
ret
fildl
dec
sub
arpl
push
mov
and
in
jle
insl
dec
push
or
push
xchg
or
jl
arpl
shll
into
mov
sub
add
cltd
outsb
sub
into
mov
jmp
and
test
sub
in
inc
xlat
lods
cmpsl
push
test
cwtl
dec
mov
lea
add
fsts
icebp
cmp
pop
xor
mov
rcll
hlt
mov
paddusb
push
loope
dec
mov
ljmp
fdivrs
mov
in
mov
out
mov
adc
imul
fwait
int3
imul
xchg
lahf
rcll
inc
outsl
mov
cmc
cmp
xorb
je
pusha
jge
add
xchg
push
lods
pop
mov
cmp
cmp
push
mov
adc
adc
icebp
arpl
repz
ja
pusha
sub
pop
aaa
mov
add
mov
mov
imul
inc
sbb
fdivs
or
lds
in
rorl
xchg
push
das
shrl
ficomps
push
nop
sub
repnz
inc
cmp
or
in
mov
xor
aas
aaa
pop
and
cwtl
adc
loopne
and
xchg
xor
shl
je
adc
hlt
jb
cld
insl
xchg
xor
dec
lret
pop
dec
pushf
repz
jmp
addb
jmp
pop
and
mov
fistps
or
dec
cmp
insb
shl
add
sbb
pop
aam
in
mov
dec
push
push
lods
aad
pusha
jbe
cmpsl
fs
dec
leave
sub
or
lahf
adc
push
cmpsl
sbb
xchg
js
xor
lcall
stos
push
or
pop
out
jp
insb
mov
mov
and
or
cli
push
jb
daa
stc
lahf
jnp
and
lock
inc
cmc
and
sub
out
data16
loopne
xor
sbb
sbb
rcrl
cmc
outsb
xchg
int
lds
sahf
sub
inc
enter
inc
sub
lret
and
cmp
test
push
or
movsl
inc
inc
rcrl
adc
aad
add
inc
jns
adc
shll
jno
add
test
mov
jmp
cmp
out
xor
add
cmpsb
jmp
fsts
fiadds
add
movsl
jnp
push
mov
mov
jge
jbe
push
into
inc
aam
mov
stos
nop
xor
dec
fs
cltd
fwait
push
sub
jecxz
push
xor
loope
xchg
pop
repz
popa
fcomip
imul
mov
inc
data16
xchg
and
inc
out
imul
cld
shll
jo
leave
je
les
mov
lock
sub
adc
sar
pop
jae
mov
mov
adc
pop
cmc
add
repnz
jnp
xlat
addr16
movsl
adc
add
sti
nop
iret
jbe
test
adcl
dec
sbb
lock
jb
pusha
add
add
mov
movsl
cmp
popa
clc
shlb
scas
scas
call
mov
repnz
testl
sbb
or
mov
sub
cmp
sbb
inc
adc
adc
push
test
jne
sub
ss
cmp
pushf
hlt
icebp
xlat
pop
mov
cmp
sbbl
jnp
shlb
mov
jns
sub
jno
cmpsl
insl
push
jp
pusha
dec
pop
mov
insl
out
and
sbb
xor
stos
xor
dec
iret
or
add
inc
insl
iret
add
mov
icebp
fidivrs
add
clc
pop
xchg
add
lea
lret
push
jns
test
jno
leave
popf
leave
divl
or
push
fsubr
sub
sti
ret
pop
dec
in
sub
out
push
imul
jle
rcl
leave
leave
jb
stc
jle
or
cmovo
mov
push
js
fisttpl
addr16
inc
mov
or
aas
negl
mov
jg
pop
icebp
cmpb
pushf
les
daa
push
stos
mov
shll
xor
cmp
dec
jl
popf
shrl
data16
lods
call
aaa
lods
sti
jge
mov
dec
movsl
roll
movlps
jge
mov
mov
sti
mov
insl
jmp
mov
mov
mov
xorl
and
gs
inc
cmpsb
push
jo
adc
into
fdivl
cmp
xchg
jae
repz
mov
sti
cmpsl
test
imulb
shrb
ljmp
test
mov
and
cmp
sbb
test
cmp
fs
sbb
add
add
out
mov
outsl
int
xchg
test
loope
outsl
pop
popa
push
aas
pushf
inc
out
adc
push
jo
pop
pop
and
adcl
adc
xchg
mov
sbb
stc
mov
mov
inc
add
jno
adc
or
out
or
test
or
jp
dec
stc
js
pop
xchg
sbb
sub
cli
mov
jbe
adc
aam
add
adc
xchg
sti
push
cmc
shrb
mov
cmp
push
push
lcall
rcll
push
pop
shll
sbb
insl
lea
sbb
xor
mov
inc
and
pop
into
scas
cld
shll
ds
lods
jns
dec
subl
and
push
push
ljmp
cs
add
pop
notl
mov
push
aam
outsl
shrb
xor
imul
lahf
adc
mov
pushl
hlt
lock
jnp
cmp
cld
sub
dec
dec
ljmp
jge
lret
push
inc
mov
xor
js
sbb
mov
inc
into
mov
or
data16
les
or
xor
mov
push
cwtl
xlat
and
xlat
jae
outsb
pushf
bound
pop
arpl
add
and
sbb
pop
mov
notb
sub
cmp
test
mov
push
arpl
std
inc
cmp
fucomp
ljmp
inc
sbb
insb
test
xchg
inc
push
mov
ds
mov
ror
pop
in
sbb
notb
sub
cs
popa
int3
test
frstor
pop
push
xlat
inc
iret
cmp
dec
test
cmp
push
in
sub
mov
loopne
xchg
mov
inc
nop
in
loop
std
push
push
js
lcall
mov
dec
mov
mov
jne
push
popa
out
xchg
lds
mov
cmc
mov
jo
mov
xchg
jb
mov
jg
test
push
dec
dec
mov
das
cli
pop
js
repz
or
in
sti
setge
jecxz
dec
popf
mov
inc
fs
or
iret
idiv
add
dec
pop
lods
add
adc
pop
jns
add
mov
negl
dec
ret
fstl
pop
add
insl
rcl
sahf
mov
add
pop
testb
mov
lods
flds
dec
lds
jnp
sbb
fldenv
dec
cmpsb
lods
jae
bound
xchg
loope
mov
out
or
aaa
mov
or
and
fcoml
inc
ja
aaa
mov
popf
mov
inc
inc
push
or
xchg
imul
add
and
dec
mov
outsb
out
cmp
dec
inc
fisubrl
inc
out
mov
mov
inc
dec
cltd
mov
pusha
xor
rcll
xchg
push
xor
mov
lock
mov
cmp
mov
hlt
mov
stc
lods
xchg
jae
cwtl
mov
aaa
inc
mov
jp
es
sbb
adc
sub
imulb
lods
mov
xchg
and
cmp
repz
xchg
mov
in
jnp
adc
or
dec
jp
xchg
stc
adc
loop
add
or
sti
dec
cmpsb
inc
cld
mov
sbb
push
sbb
push
mov
stos
test
xchg
ja
scas
inc
mov
lods
pop
lock
mov
insb
adc
xchg
insl
ja
push
mov
mov
jmp
pop
lds
test
add
sbb
jb
add
dec
mov
ret
push
xchg
jno,pn
rclb
adc
ret
shlb
ds
pusha
push
in
xchg
loopne
fidivs
and
dec
xlat
aam
loopne
insb
cmp
lret
dec
bound
mov
mov
xorl
enter
ds
mov
dec
lcall
adc
out
push
cmp
aam
mov
out
into
inc
in
out
mov
xor
mov
and
pusha
inc
je
inc
xor
cld
and
xchg
out
pop
add
fsts
xchg
sbb
fisttps
cli
and
rol
add
es
cs
inc
adc
pop
jae
lret
jmp
lock
xchg
in
in
mov
daa
xor
sub
pop
mov
jg
lret
mov
fwait
js
shll
xchg
mov
fiadds
jno
xlat
std
jmp
je
std
xlat
mov
sub
adc
test
orb
cmc
jmp
sarb
int
arpl
in
push
add
lds
fisttpl
daa
jo
jns
mov
dec
into
mov
out
arpl
sub
popw
cs
mov
out
pop
test
scas
call
bound
or
insl
push
dec
xchg
ja
xchg
xchg
shll
iret
mov
bnd
lea
sti
bnd
aaa
dec
shrb
jae
dec
mov
pxor
cmp
ss
xor
ret
jge
mov
shr
and
shrl
add
pop
stos
stos
pop
repnz
aam
xchg
cmpsb
imul
lahf
fidivrs
push
sub
cs
and
scas
std
in
adc
mov
int3
push
outsl
xorl
loopne
mov
stos
dec
test
jno
cmpsb
add
aad
xor
xchg
sbb
adc
rcr
pop
in
add
out
ret
fwait
lahf
loopne
mov
mov
mov
in
cmc
inc
xor
aad
and
insl
or
cltd
push
mov
pop
loope
loope
pop
insb
mov
test
pop
mov
daa
push
out
xchg
shll
imul
dec
dec
and
xchg
or
hlt
dec
cwtl
pop
ss
ror
fsts
dec
je
sub
addb
aad
xchg
sub
sub
push
mov
inc
sbb
js
pushf
sarb
ds
cmp
pushf
dec
out
cltd
out
cltd
mov
cltd
notb
mov
rorb
mov
inc
incl
pop
popa
dec
into
fsubs
fidivrs
adc
pusha
pop
mov
test
push
insl
cli
jp
jg
sahf
xchg
dec
sbb
adc
sub
sub
inc
pop
sub
nop
xorb
loope
lods
push
xchg
and
pop
nop
mov
movsl
xchg
iret
push
jbe
aam
adc
and
test
les
or
frstor
xchg
fsubl
cwtl
pop
ret
mov
add
int
ljmp
mov
cmp
mov
push
mov
xchg
xlat
test
sbb
jg
repz
lahf
push
cmp
mov
stos
cwtl
mov
mov
ret
fnstenv
xchg
jmp
mov
xor
jmp
and
ds
sub
jns
inc
outsl
ds
xor
lahf
loop
test
orl
sub
scas
xchg
sbb
outsl
mov
das
xchg
fst
out
mov
pop
sti
std
test
pop
xchg
in
test
call
and
inc
test
out
xchg
stc
sti
and
add
and
and
jge
cmpsb
mov
dec
fs
roll
add
rcll
shlb
mov
mov
mov
jae
sub
inc
aas
xchg
or
mov
xor
xor
dec
cmp
jne
dec
dec
dec
jle
loope
push
xor
push
ljmp
test
lea
or
mov
insb
leave
add
je
sub
inc
pop
adc
dec
dec
shlb
in
adc
dec
filds
sbb
dec
mov
ds
push
stos
sbb
outsl
jo
test
cmp
push
ljmp
das
outsb
jnp
jno
subb
cltd
idivl
cli
std
sub
jnp
cmc
or
xchg
inc
hlt
jbe
stc
sub
outsb
mov
popa
add
mov
push
mov
adc
jo
adc
xchg
mov
mov
jb
aam
rcrb
fstl
mov
ret
mov
idiv
call
add
inc
jb
dec
lret
sub
xchg
jp
test
cltd
lret
cltd
pop
lret
pusha
jne
sub
jnp
pop
out
cs
cmpsb
into
jge
cmp
daa
stos
jmp
xchg
mov
out
repz
ret
outsw
pusha
and
mov
mov
jg
inc
inc
push
sub
loope
or
adc
mov
ljmp
push
cmp
sbb
sbb
push
hlt
push
mov
mov
scas
negb
aaa
jmp
mov
das
mov
dec
pop
adc
or
loope,pt
dec
xor
add
insl
xor
lret
adc
int3
and
jg
push
inc
xchg
ret
mov
out
mov
add
nop
xor
inc
push
pop
cmc
jb
and
and
cmp
mov
out
xchg
mov
jp
test
in
add
mov
lret
fistps
inc
jne
push
xchg
ss
das
add
sbb
xchg
push
cmp
cltd
pop
cli
push
cmp
mov
xorl
sub
es
cli
inc
int
loop
imul
push
mov
ret
xor
dec
mov
cmp
pop
pop
lret
ret
mov
lods
dec
clc
cmp
mov
mov
sub
mov
out
int
hlt
inc
les
mov
sub
sub
enter
adc
int
sbb
decl
into
xor
pop
lret
sbb
cs
cwtl
xchg
mov
cwtl
inc
scas
bswap
push
lea
mov
lods
jp
ja
shr
pop
jnp
cmc
scas
xchg
and
fwait
cs
mov
xor
jae
mov
pop
push
xchg
ds
push
lcall
loopne
mov
cmpsb
in
mov
ja
cmp
push
ss
mov
pop
push
cs
test
fcomip
ret
daa
and
pop
xchg
mov
adc
inc
mov
add
lea
push
pop
rcrb
ljmp
out
sbb
xor
xor
mov
xor
mov
cmp
insl
dec
shrb
lds
ja
aad
adc
std
fnsave
dec
fistps
mov
pop
test
jmp
test
out
push
xor
stos
mov
inc
push
mov
and
sahf
inc
mov
mov
dec
mov
xlat
pop
jmp
ret
xchg
movl
and
hlt
shlb
iretw
arpl
jge
mov
dec
or
rcll
scas
cli
ss
bound
jmp
ja
cmpsl
mov
jg
shl
cmc
adc
inc
outsb
insb
insb
mov
sub
aaa
dec
mov
shll
cmp
pop
hlt
adc
shll
mov
and
ljmp
movsl
mov
dec
xor
outsl
shrb
out
roll
inc
lods
pop
mov
mov
push
mov
gs
lret
outsl
jle
mov
push
and
cltd
imulb
inc
and
bound
mov
pop
mov
sub
insb
test
cmp
cmpsb
aad
scas
mov
jmp
stc
xor
orb
mov
push
xchg
pusha
cmp
repz
mov
cmp
inc
adc
lea
aad
pop
mov
mov
scas
aam
out
adc
jp
dec
loopne
mov
xchg
cld
pop
pop
inc
jno
mov
xorl
aad
adc
push
test
or
dec
and
jp
sbb
in
frstor
movsb
and
mov
sub
fs
sbb
adc
push
adc
pop
push
dec
cmc
movsb
imul
cmp
cmpsb
mov
daa
mov
in
or
in
inc
mov
sub
lcall
add
push
add
jno
mov
sub
outsl
scas
sub
test
pop
int
xchg
dec
or
push
sbb
lea
sub
mov
xchg
pushf
dec
mov
enter
fists
mov
imul
repnz
insb
pusha
pop
pop
mov
ja
lods
mov
pop
daa
and
loop
repnz
push
xor
sub
mov
pop
popa
pop
test
push
call
xchg
jne
in
inc
aad
mov
xor
aad
inc
jbe
outsb
pop
mov
ss
je
mov
insl
std
repz
repz
cmp
je
add
rorl
inc
clc
sahf
es
push
aas
addl
jno
aad
mov
dec
outsb
mov
adc
sbb
jge
clc
mov
jno
in
adc
jns
add
jp
xchg
lret
popf
scas
and
add
loopne
xor
pop
pushf
popa
test
stos
cmp
and
ficomps
xchg
push
xchg
je
push
dec
stc
or
xor
mov
and
mov
jbe
popa
mov
mov
cli
add
inc
ret
push
call
jbe
jg
add
icebp
push
and
out
cmp
sub
jbe
or
jns
fimull
ror
add
lock
cmpsl
fcmove
or
inc
addr16
xlat
test
sbb
in
shrb
addr16
lea
inc
fimuls
mov
push
in
hlt
xchg
mov
inc
xorb
mov
mov
push
and
jbe
xor
and
mov
sbb
jge
cmp
push
rcll
icebp
cmc
js
mov
mov
sub
lods
push
mov
sbb
mov
jl
rcll
pop
scas
data16
mov
push
jno
cmpsl
ja
pop
shr
cld
sbb
add
inc
test
inc
fisubrl
jle
add
xchg
and
arpl
or
dec
add
xchg
add
outsl
mov
ret
popf
pop
add
aam
push
and
data16
lods
pop
test
and
mov
mov
das
imul
xchg
cltd
xor
mov
int3
subl
iret
fildl
cmpsb
mov
pop
cwtl
aam
lods
out
mov
outsl
das
outsb
push
ret
xor
sbb
popa
add
cmp
test
iret
mov
mov
test
flds
jmp
std
insb
xor
lock
push
fwait
mov
xor
loop
sbb
lds
mov
fwait
lea
or
sub
test
xor
cmp
stos
mov
adc
loop
xchg
mov
push
sub
add
pop
mov
push
xchg
int3
in
jmp
out
shrb
xor
sub
or
negl
int
push
mov
in
jge
sub
jmp
jne
loopne
cltd
jmp
mov
scas
mov
mov
pop
and
mov
nop
jmp
movsb
push
sbb
arpl
and
outsl
xchg
fcmovnu
and
dec
adc
lcall
decl
pop
daa
cmpsb
xor
fcomps
sbb
cli
mov
filds
scas
and
sub
cltd
into
cmpb
and
notl
outsl
mov
add
sub
fidivrs
sbbb
jnp
xchg
pop
adc
dec
sti
cmp
iret
movsb
popa
mov
mov
pushf
data16
dec
xchg
inc
mov
or
hlt
pusha
pushf
jl
les
inc
mov
clc
cmpsl
lods
in
test
add
loope
std
in
lret
and
fwait
ret
inc
push
jb
mov
pop
arpl
pushf
rcl
xor
mov
in
inc
push
cmpsb
mov
scas
arpl
cli
repnz
aaa
jmp
outsl
stos
and
mov
bound
mov
jb
mov
pushf
insl
inc
pop
sti
imul
mov
xchg
cltd
in
and
mov
xor
gs
int3
xor
jb
subl
call
movsl
sub
sahf
nop
lods
mov
cmp
sub
into
icebp
ds
push
sub
xlat
xchg
dec
pop
jecxz
icebp
mov
xchg
ss
rorl
pop
test
pop
inc
mov
mov
test
mov
mov
out
add
push
sub
push
hlt
sbb
push
aaa
mov
es
sub
sub
jp
mov
jns
ficompl
stos
out
mov
inc
mov
mov
addr16
repnz
mov
jle
lods
mov
shl
jne
jne
stos
rclb
insl
cmc
outsb
cwtl
fistl
arpl
xchg
insl
or
inc
dec
sub
mov
scas
pop
xchg
sbb
data16
adc
inc
out
iret
xor
push
aaa
in
or
pop
test
cmp
scas
test
jmp
adc
xchg
xchg
pop
es
xchg
pop
lret
mov
les
xchg
and
and
out
outsb
les
mov
insl
pop
imulb
xchg
cmp
lea
int3
arpl
sbb
call
mov
mov
pop
les
out
push
insl
icebp
insb
lods
sub
je
inc
push
mov
lea
xor
fidivs
mov
push
iret
cs
movsb
push
cli
cmp
in
scas
mov
mov
div
je
pop
mov
imul
push
mov
sahf
adc
es
push
fwait
loopne
cmpsb
ret
xchg
or
shll
fisttps
hlt
das
mov
cwtl
or
add
lods
scas
arpl
mov
iret
pop
cmpsb
push
fcomip
out
int3
pusha
scas
popf
clc
fistpl
mov
aas
inc
xchg
fdivr
cmp
sbb
js
stos
aas
cmp
fs
push
frstor
mov
xor
iret
mov
rclb
iret
int
add
lret
push
lcallw
clc
rcll
push
dec
test
pop
sbb
mov
aad
adc
xor
aam
insb
push
mov
and
repz
or
xor
js
mov
sub
lcall
dec
mov
test
lods
dec
add
jp
adc
xchg
dec
push
xchg
lods
cld
rcl
xchg
pop
lahf
xchg
mov
add
scas
add
pop
lret
clc
nop
push
xchg
add
addr16
sarl
les
popa
inc
push
aam
subl
js
leave
cwtl
xchg
call
loop
xchg
pop
pushf
std
pop
pop
xchg
sbb
repnz
mov
mov
and
out
in
movsl
mov
mov
sub
push
test
adc
inc
sbb
adc
call
lods
cwtl
xchg
push
dec
sub
dec
out
sub
fs
or
push
add
shlb
test
mov
lret
icebp
js
gs
mov
mov
xchg
dec
rol
insl
xrelease
scas
adc
pop
pop
ret
pop
in
aad
adc
lret
push
adcb
xchg
popa
aam
xchg
out
push
aam
sbb
std
lret
lahf
repz
inc
xor
pop
xchg
inc
adc
cmpsl
aaa
jbe
test
movsl
aaa
cmp
dec
push
ret
mov
push
sbb
xor
xorb
push
loopne
mov
enter
sub
jb
fsubrp
xor
inc
fstps
int
arpl
push
adc
pop
pusha
aaa
gs
mov
out
fisttpll
jns
fimuls
mov
or
rcrl
mov
loop
push
in
adc
jns
dec
mov
cmp
lcall
cltd
rcrb
jge
enter
mov
sti
enter
cmpl
and
stc
lret
repnz
inc
lea
inc
lret
jnp
sbb
call
mov
cmp
add
ret
hlt
imul
xlat
outsl
pop
rcrb
ljmp
jns
push
xchg
dec
add
push
dec
lods
insl
xor
sti
push
and
inc
xor
push
push
xorl
ja
aaa
pop
sub
cld
inc
xor
add
ja
cmpsl
punpckhbw
pop
mov
leave
aas
testl
push
jge
push
shl
shlb
lods
mov
mov
into
pop
push
movb
gs
sbb
xchg
xchg
mov
fsts
pop
popa
shr
adcb
mov
push
andb
pop
js
add
cmp
test
ret
xor
test
stos
cmc
jno
scas
mov
rcrl
inc
insl
adc
ja
dec
lock
sbb
push
in
inc
daa
push
cwtl
mov
in
push
test
pop
aam
js
sahf
clc
lds
pop
pop
pop
outsb
repz
in
ss
scas
adc
leave
rcl
add
xchg
and
clc
in
call
loope
push
loop
pop
xchg
push
stos
sub
es
into
insl
clc
add
pop
data16
ljmp
notl
lds
in
out
jo
push
jl
add
mov
xor
stc
imul
and
inc
mov
mov
frstor
push
dec
jg
mov
ret
pop
push
xchg
and
lea
mov
push
gs
mov
movsl
adc
aad
fcmovnu
jb
gs
aad
or
ss
decl
movsb
movsb
push
mov
cmpb
and
inc
mov
sbb
dec
shl
xchg
mov
cmp
ss
push
fists
push
sti
das
mov
pop
mov
repz
fs
or
mov
les
sbb
lock
cld
pop
push
jge
andb
push
les
pop
push
mov
fadds
add
xor
mov
ds
or
push
and
pop
add
cmpsb
out
das
inc
push
mov
mov
out
out
arpl
aaa
leave
test
jnp
fistpll
popf
push
mov
es
aaa
mov
inc
stos
xor
das
jp
and
jns
cs
add
fildll
mov
rcrb
and
dec
sbb
imul
fnstcw
out
xor
ljmp
in
push
movl
xor
push
shlb
loope
enter
jl
xchg
fidivl
push
adc
shrl
add
mov
sub
ficomps
das
inc
scas
ja
lret
mov
push
inc
test
fmuls
mov
jbe
push
push
lahf
push
ret
lret
sub
roll
jno
and
and
out
movsb
jle
mov
popf
adc
pop
test
pop
sub
push
ja
andl
sub
and
mov
loopne
cmp
pop
sti
sub
add
jl
ret
std
push
cmp
mov
push
imul
sahf
neg
or
aaa
mov
or
dec
mov
pop
mov
shll
cmp
or
in
test
and
aas
out
jb
incb
sbb
mov
and
mov
pop
inc
mov
and
enter
dec
aad
and
popf
inc
jp
sub
sbb
sub
jp
inc
mov
add
mov
mov
push
lahf
das
cmpsl
popf
inc
pop
jle
or
or
mov
arpl
test
mov
inc
insl
fldt
or
movsb
cmpsl
lock
sbb
dec
cmpsb
xchg
cwtl
xchg
jmp
cli
aad
dec
inc
cmp
shll
cmp
aaa
pop
test
cltd
je
xchg
mov
pop
adc
pop
lds
aam
adc
sub
dec
push
xor
dec
sbb
popa
push
mov
icebp
cmp
and
movsb
xor
ror
xlat
mov
push
repnz
ficoml
int3
adc
add
sub
jb
ds
fisubs
bound
popa
shll
push
scas
mov
pop
lcall
and
xor
std
dec
faddl
lods
push
mov
or
pop
incb
mov
sti
mov
pop
jno
das
jns
insl
add
pop
inc
aad
sub
jbe
adc
dec
jmp
xchg
leave
jle
push
xor
scas
jl
push
xchg
addr16
iret
or
lds
or
lods
test
mov
fists
xchg
orb
jne
jg
dec
out
adc
xchg
shl
jg
nop
push
jp
jmp
leave
xor
add
scas
jl
cld
cwtl
arpl
pop
or
loope
dec
dec
sub
movsb
mov
stc
add
jl
clc
mov
mov
jecxz
mov
outsb
dec
cmpsb
mov
sub
cmpsl
cli
pop
add
andl
dec
xchg
or
and
mov
add
aas
loope
push
lods
jae
add
ficoms
es
inc
call
push
popf
jp
sbb
imull
pop
xchg
xchg
movsb
ljmp
aaa
loop
leave
jo
mov
xchg
mov
cwtl
sub
mov
sub
cltd
fdivr
inc
mov
add
rcrb
arpl
icebp
adcb
lahf
or
lods
loopne
mov
fnstsw
mov
mov
jp
fistpll
pop
pop
lret
out
movsb
push
ja
lret
jae
push
mov
dec
in
xor
jmp
sub
lea
or
mov
xchg
jmp
xor
sbb
mov
stos
and
out
mov
sub
or
jns
ds
mov
mov
pop
daa
fistpl
cvtps2pi
add
cmp
stos
xchg
test
icebp
fisubrs
push
jb
xchg
sub
pop
lea
dec
cmc
jae
js
xlat
insl
push
repnz
lods
rolb
sub
gs
pop
repz
enter
xor
jg
in
cmp
mov
sub
or
push
inc
xorl
adc
mov
xor
rcl
mov
lret
jb
test
rorl
cmp
jg
cwtl
daa
xlat
cmp
mov
cmpsb
pop
or
mov
movsb
and
fstpt
cmp
out
pusha
pop
dec
xchg
sti
mov
xchg
arpl
dec
frstor
sbb
xchg
mov
lds
mov
cwtl
das
jnp
mov
or
icebp
pushl
mov
orb
cmpsb
add
mov
addr16
fstl
rolb
imulb
insb
loop
jne
ja
inc
push
sti
push
push
mov
loopne
lea
movsl
fwait
cmp
sub
mov
cs
adc
arpl
fadd
test
and
in
sbb
cwtl
push
mov
xchg
arpl
cmp
out
mov
mov
fwait
cmp
pop
mov
jge
imul
sbb
rcrb
xor
or
inc
pushf
cmp
mov
movsb
sub
or
ja
mov
push
sub
ret
push
imul
sub
add
sbb
cmp
fidivl
std
and
and
or
arpl
jb
inc
pop
jo
adc
aaa
popa
add
call
jb
sti
ja
cmp
xchg
jge
fwait
jmp
rcrl
aaa
add
push
push
outsb
mov
jp
sub
les
ss
cmpsl
js
scas
jmp
fdivrl
sub
pop
lea
stos
jecxz
xor
sti
cltd
stos
or
in
adc
mov
adc
iret
mov
xchg
push
add
sub
dec
add
loope
mov
and
mov
in
jae
dec
pop
lods
mov
pop
pop
sbbl
add
dec
cli
das
lret
lds
xor
loopne
daa
stos
inc
aas
mov
push
repnz
push
dec
and
adc
jo
pop
lret
out
dec
addr16
xchg
add
gs
sub
lahf
push
xlat
mov
xchg
sub
shl
cli
xlat
out
lahf
or
xor
lcall
in
sbb
jns
xor
fstpt
test
imul
mov
and
sub
adc
fistpl
mov
adc
scas
mov
dec
ss
movsl
dec
insl
pusha
pop
outsl
fsubl
test
adcl
push
mov
pop
mov
cmp
pop
cmp
out
les
aaa
mov
cmc
jl
lret
scas
ds
fsubrp
rcrb
mov
mov
call
fnstenv
mov
xchg
cld
aas
cli
jmp
movsl
cmp
jl
fbld
ret
std
cmp
sbb
lahf
add
push
inc
cmp
sbb
mov
mov
push
mov
or
pop
in
mov
enter
add
mov
add
mov
dec
push
cs
xchg
aad
and
adc
inc
fwait
movsl
jmp
xchg
psubd
jecxz
cli
int3
mov
ret
dec
mov
mov
in
jae
outsb
xchg
mov
fldt
data16
sarb
clc
mov
in
and
sbb
mov
cwtl
imul
or
jno
inc
hlt
iret
push
inc
int
sbbb
cwtl
ja
mov
mov
add
mov
mov
shrl
out
jno
pop
sub
aad
jle
in
mov
jnp
add
push
cmp
xor
or
outsl
pop
dec
sub
sub
cmp
out
ret
scas
aad
aas
jp
xchg
fisttpll
xchg
sbb
cmp
cmpsl
jo
lcall
add
mov
pop
movsl
sbb
xor
jp
inc
jne
and
cld
dec
xchg
inc
sbb
lcall
and
aaa
jbe
js
mov
sbbb
cmp
pop
sbb
xor
jge
in
call
je
loop
xchg
fdivs
pop
xchg
jecxz
add
je
inc
push
sub
jo
add
push
push
pop
and
and
push
add
lods
jo
inc
mov
adc
fwait
stc
stos
iret
sbb
or
mov
mov
shrl
fld
dec
inc
and
jae
mov
mov
inc
lock
cmp
pusha
std
xlat
mov
test
pop
cmpsb
rolb
cmp
nop
shrb
pushf
clc
lahf
mov
dec
aad
js
jns
cmp
inc
jno
adcb
push
sub
outsl
mov
adc
lea
test
lcall
mov
push
inc
cmp
push
out
pop
call
sbb
xor
add
adc
les
cltd
jo
cli
insb
cmp
ds
pop
add
loop
hlt
jmp
mov
pushf
lea
or
cwtl
or
pop
dec
xor
sub
enter
cmp
sub
or
and
mov
ds
mov
rcr
fwait
xor
lahf
sbb
mov
push
lcall
arpl
aaa
xchg
rcll
lods
jb
in
stos
push
cmpsl
mov
pop
push
leave
subl
fimull
mov
sub
cltd
enter
push
ficompl
enter
xor
out
mov
leave
imul
sub
add
lahf
adc
ja
pushf
xor
pop
sub
inc
jno
xchg
sbb
cmpsb
jle
xorl
imul
jo
adc
jmp
iret
lea
adc
es
pusha
mov
repnz
mull
and
jmp
add
je
xchg
in
mov
lcall
pop
dec
add
fadds
stc
int3
jne
push
xchg
and
ljmp
inc
ds
mov
mov
mov
pop
add
jp
fsubr
pushf
stos
cli
or
sbb
jmp
jmp
lahf
and
mov
sbb
mov
fisubs
ror
and
lahf
dec
sub
enter
je
add
xor
or
in
sbb
outsl
adc
pushf
push
push
xor
pop
leave
mov
xor
add
mov
popw
pushf
or
in
adc
call
xlat
or
lahf
aas
xor
mov
push
outsb
pop
je
ret
mov
or
pop
or
aam
ljmp
stos
push
inc
testb
dec
mov
inc
push
popa
test
and
and
or
cmp
lahf
push
repnz
in
jl
jae
fistl
add
mov
test
and
mov
adc
test
adc
jecxz
jmp
push
mov
test
sbb
nop
pusha
mov
add
imul
mov
push
int3
popl
or
ret
pop
in
sbbb
cmc
cmp
xchg
mov
pushf
inc
icebp
insl
cmpsb
cmc
mov
setg
sbb
sbb
pop
rcll
sarl
testl
sarb
pop
cmp
popf
xchg
outsl
leave
add
rorl
in
xchg
dec
pushl
cwtl
mov
jmp
and
lods
xor
mov
jmp
in
test
pop
movsl
dec
mov
jno
push
int3
mov
pop
jl
sti
cmpb
mov
inc
mov
or
sbb
rorb
dec
adc
or
int
addr16
inc
mov
ljmp
mov
jmp
push
or
imul
roll
cmp
lea
mov
jg
vmaxpd
fcoms
xor
push
dec
add
jp
mov
aam
mov
test
in
sbb
or
jle
in
mov
xlat
xchg
dec
adc
out
std
rcr
xlat
adc
push
fildll
iret
nop
or
add
fmulp
je
orl
xchg
lods
fs
sub
adc
sub
call
lods
pop
mov
repnz
inc
jle
arpl
xor
mov
xor
mov
lods
push
idivb
cmp
mov
adc
lods
nop
mov
dec
in
in
xchg
inc
int3
lods
jp
or
pop
cs
jbe
lcall
repnz
push
ret
bound
xor
arpl
jbe
mov
popf
ret
mov
sbb
mov
scas
insb
out
in
jns
arpl
or
add
jle
cli
add
push
aas
addb
mov
sub
iret
nop
pushf
sahf
or
mov
adc
fs
mov
in
scas
xor
dec
inc
lea
mov
cmpl
data16
cld
xchg
scas
push
jae
xchg
data16
mov
cmp
lcall
jmp
mov
cli
jo
scas
dec
fidivs
aam
sti
stc
cltd
out
ret
cmp
inc
cmp
outsb
loope
inc
push
stos
push
add
pop
xor
ljmp
lret
mov
adc
xor
cmp
add
jl
call
adc
jecxz
xor
jmp
xchg
mov
in
rcrb
mov
pop
repz
sub
add
push
xor
mull
inc
ret
pusha
dec
adc
push
pop
dec
shrb
scas
pop
sub
adc
jmp
xor
mov
cmp
mov
lods
mov
stc
jno
outsb
lods
call
repnz
xchg
sbb
add
push
sbb
cmpsl
push
push
out
ret
push
adc
cld
xchg
loope
mov
into
mov
cli
jae
insb
pusha
cli
repnz
aas
jmp
or
ljmp
push
dec
rclb
sbb
xor
inc
cmp
xlat
shll
fdivr
loopne
movsl
dec
pop
push
mov
les
mov
jb
push
pusha
and
out
sahf
push
shlb
add
xchg
pop
mov
gs
xchg
pusha
mov
add
jp
loop
push
sbb
shlb
mov
mov
add
addl
rcrl
and
pop
inc
jb
outsl
test
pop
push
or
repz
test
into
rorl
ds
mov
mov
jne
add
imul
daa
aaa
and
mov
jge
cmp
pop
adc
xchg
pop
adc
ret
jg
cmpb
mov
mov
mov
enter
push
test
sub
mov
inc
jne
push
fisttps
ret
cmpsb
push
mov
mov
movsb
cmp
rcll
jl
xchg
fidivl
cwtl
dec
lods
lea
das
gs
mov
je
mov
dec
cmp
sarl
xlat
cmp
in
sbb
bound
inc
movsl
ljmp
jno
sbb
push
jge
lods
rcll
inc
mov
inc
jge
sub
ficomps
adc
cmp
mov
scas
mov
fcompl
push
fbld
dec
cmp
dec
inc
mov
test
adc
push
iret
jns
ss
jle
stos
out
adc
clc
cmpsb
cmc
fldcw
cltd
loop
pop
adc
xchg
xchg
popf
xchg
inc
inc
push
repz
mov
out
or
and
test
shr
sub
aaa
jmp
ficomps
or
filds
xchg
popa
mov
andb
inc
cmp
jecxz
cltd
das
dec
xchg
std
es
gs
or
test
inc
or
js
push
sbb
xor
push
or
into
push
sbb
sub
daa
movsb
push
mov
push
iret
jno
loope
mov
pop
inc
imul
or
gs
dec
xchg
jle
add
mov
shrl
xchg
enter
insb
fcmovu
push
add
mov
imul
movsb
mov
fdivl
into
repz
push
or
scas
jns
push
push
das
push
cld
dec
mov
cwtl
sbb
lea
lret
or
push
lds
xchg
je
fucomip
xor
push
ds
das
repz
and
lods
es
mov
movsl
mov
jl
cmp
sahf
jl
orl
dec
mov
adc
jnp
out
bound
out
std
sbb
mov
test
nop
cli
dec
loop
imul
add
mov
aaa
push
xchg
mov
sbb
mov
int3
stos
adc
xchg
lock
sbb
pop
into
adc
push
xchg
cmpps
in
push
pop
jecxz
and
push
xchg
mov
mov
cmpsl
test
cmc
repz
pmaxub
pop
insl
mov
bnd
pusha
les
shlb
cmp
aas
mov
gs
inc
cld
add
push
fs
add
lds
popa
lock
mov
sbb
aam
cltd
adc
aam
adc
mov
mov
cli
negl
and
sub
outsl
sti
cmpsb
dec
add
cmp
mov
mov
das
or
jne
xchg
mov
jp
cmp
in
mov
cli
mov
adc
dec
and
inc
xor
jbe
xchg
ss
ret
and
in
adc
adc
xlat
call
dec
sub
ja
negl
jnp
cld
sub
sbb
sbb
pop
int
mov
sahf
in
push
push
xor
cmp
mov
into
adc
inc
xor
adc
sbb
inc
lret
cwtl
mov
loope
cmc
aas
inc
test
adc
jle
outsb
fstl
je
out
jmp
icebp
int
push
pop
and
ljmp
xchg
or
add
push
je
das
stos
or
filds
test
mov
dec
adc
dec
cmpb
adc
cmp
cltd
cmpsl
inc
cmp
inc
jge
cmovg
insl
pop
lahf
cli
xchg
inc
daa
push
ja
in
popf
ljmp
cmp
push
cmc
clc
or
shll
pop
cmp
mov
pop
xchg
mov
pushf
mov
leave
gs
test
cmp
in
inc
outsl
xchg
icebp
mov
dec
insl
das
das
popl
cmp
stos
mov
or
roll
mov
xor
pop
test
jns
pop
icebp
or
cmp
sar
sbb
ffreep
inc
sbb
adc
fs
or
push
or
stos
pop
dec
fcoms
scas
jne
xor
std
call
and
mov
cmc
outsl
leave
mov
jne
arpl
and
jp
push
je
xchg
aad
inc
mov
xor
fidivs
push
jb
sbb
adc
icebp
and
inc
pop
mov
in
pop
cmp
adc
stos
mov
and
jmp
sub
pop
pop
sbbl
xlat
movsl
and
sbb
rol
mov
sub
lret
pop
mov
cs
roll
mov
pusha
movsb
sub
sbb
sbb
std
repz
repnz
inc
push
cmp
icebp
cwtl
push
aad
pop
xor
das
xchg
pop
jmp
pop
cmc
fucom
mov
stc
sti
insl
jg
mov
stos
faddl
fstpl
fcompl
adc
fld
xchg
mov
jmp
shrl
cmp
std
popaw
fildll
inc
pop
aaa
leave
test
xor
jge
dec
ret
ds
sub
mov
ss
jmp
cmpsb
or
in
inc
sub
lret
bound
pop
mov
sbb
nop
xchg
imul
lds
add
jle
push
dec
or
sbb
pop
lret
mov
dec
mov
test
mov
lret
xor
sub
pop
pop
cmp
mov
sub
inc
sub
bound
push
xorl
mov
mov
test
daa
popa
outsb
fnstenv
jno
lcall
and
daa
or
push
cmpsb
adc
aam
dec
sub
mov
into
dec
aas
ss
subb
push
mov
imul
loop
add
out
shrl
xor
adc
scas
mov
mov
outsb
cmp
mov
test
fnstsw
not
adc
or
int3
pop
sub
push
insl
ficompl
jg
imul
mov
mov
add
sbb
inc
repnz
or
xchg
orb
sarl
in
outsl
cmp
shr
dec
dec
ljmp
test
repnz
xchg
jo
rolb
mov
jb
pop
lods
xor
rorl
sbb
mov
lods
bound
add
pop
hlt
repnz
insb
adc
clc
dec
jmp
pusha
inc
mov
jbe
push
and
cmpsb
inc
dec
push
icebp
cltd
mov
push
lea
cmpsl
popf
mov
dec
xlat
jne
movsl
xlat
and
xor
pop
jne
jno,pt
pusha
cs
lock
stc
out
shl
or
and
jl
das
test
cmpsl
cmp
imul
int3
testl
std
ds
aam
jle
pop
mov
push
sbb
push
shrb
testl
cmc
fists
mov
sti
das
lock
or
pusha
int
push
adc
add
hlt
clc
push
insl
mov
out
cwtl
mov
and
sti
dec
dec
xchg
xchg
mov
into
ret
in
sbb
xchg
and
leave
clc
outsb
cmp
pop
cwtl
inc
hlt
push
mov
push
dec
repnz
cwtl
and
mov
xchg
enter
sti
jbe
xchg
xor
push
dec
mov
mov
cli
cmc
sub
cmpb
mov
mov
js
xorb
cmpl
pop
mov
call
fcoms
cltd
test
push
int3
scas
cwtl
aaa
lea
mov
jns
lahf
add
repz
xchg
push
inc
push
xchg
int
and
xchg
push
addb
fdivr
jae
pop
in
sub
fisubs
xchg
jmp
ficoms
adc
idiv
stc
shl
push
dec
sbb
push
or
cltd
shlb
sub
add
adc
and
inc
sub
sub
stos
push
jp
je
push
xor
scas
jp
dec
fldln2
enter
fisubs
push
rclb
fwait
or
or
ja
jle
push
out
pop
aaa
out
add
pop
xor
sbb
es
ss
rcr
jmp
sbb
inc
fmul
sub
hlt
pusha
push
and
stos
shlb
leave
push
inc
sahf
push
cmp
push
jp
adc
push
sub
cmp
js
andl
mov
fisttpll
test
int
lds
dec
addr16
stc
adc
pop
imul
addr16
dec
pop
cwtl
mov
call
mov
pop
les
jae
mov
pop
sub
stos
sarb
sub
or
add
sbb
mov
das
imul
fs
test
pushf
stos
sbb
mov
sahf
xorb
mov
cmc
lea
pushf
adc
int3
dec
add
int3
sbb
rorl
or
push
xchg
jo
clc
insb
xor
push
pop
cmp
ret
and
outsl
sub
gs
or
loope
lret
data16
fwait
push
cmp
pop
jecxz
mov
test
inc
fwait
mov
cmp
loopne
fnsave
or
push
jns
fcompl
adc
movsl
sbb
xorb
and
testb
jnp
insb
and
adc
fldenv
cmp
xlat
and
in
aam
cmp
scas
push
push
dec
scas
int3
stos
xor
lahf
mov
adc
pop
ja
pushf
mov
movsl
test
ja
ja
lods
jge
lods
cmp
jb
push
lahf
xchg
ljmp
sbb
push
dec
repnz
mov
mov
sbb
or
jmp
jb
sbb
das
out
adc
or
pushf
xor
sub
popa
lret
out
mov
and
and
or
jns
int3
jmp
jo
push
pop
fs
mov
push
iret
gs
mov
enter
imul
sbb
fistpll
pop
paddsw
popa
dec
mov
fmul
and
sbb
mov
mov
scas
aaa
pop
add
call
loope
insb
push
xchg
adc
pop
test
popf
out
fs
icebp
adc
cs
out
insl
xchg
test
sbb
jecxz
sub
add
lret
cmc
int
movsb
xchg
mov
jmp
out
sbb
add
popa
jne
jg
inc
arpl
push
sub
sub
jo
loop
xchg
push
mov
cmp
ret
cmp
shl
scas
mov
adc
pop
mov
cmp
fidivrs
stos
pop
lret
sub
lcall
or
test
lock
or
cli
jmp
push
adc
arpl
fsubs
push
icebp
cwtl
enter
push
push
xchg
stc
pop
pop
in
cmpsb
mov
sub
add
lret
adc
nop
leave
push
cmp
jg
shll
jno
ficompl
pop
cli
das
sahf
jp
imul
leave
sbb
push
xchg
into
int3
adc
jp
in
inc
sbb
push
insl
fstl
js
mulb
vmulss
dec
mov
in
mov
xchg
call
movsl
push
cmp
mov
inc
cmc
cld
cmpsl
mov
jnp
and
xor
ss
and
dec
push
sti
jb
inc
jns
and
jo
imul
pop
test
es
adc
xchg
std
shll
leave
inc
and
pushf
lret
or
popa
int
nop
push
jb
ficompl
icebp
adc
dec
in
pushf
sbb
stos
cmp
adc
pop
icebp
addr16
sbb
in
enter
repnz
arpl
add
mov
jg
mov
invd
inc
or
int3
scas
into
lods
mov
or
sbb
stc
add
add
inc
jo
adc
out
ljmp
mov
push
dec
xchg
pop
pop
test
pop
or
add
sub
int3
jle
pop
dec
shrl
sbb
popf
in
dec
dec
popf
dec
cltd
je
rorl
in
cmpsl
lds
inc
pushf
mov
mov
icebp
xor
sbb
loope
loop
jns
mov
cwtl
inc
mov
cmovg
dec
std
mov
cmp
sbb
push
and
adc
jle
out
mov
shr
and
outsl
ret
xor
cld
fisttpll
enter
adc
outsl
movsl
push
cltd
inc
popa
mov
add
cmp
mov
cmp
push
sbb
repnz
mov
sahf
inc
mov
pop
mov
or
shlb
sub
xor
push
fs
push
inc
pop
fwait
push
fsubrs
fildll
clc
bound
xor
dec
lods
test
cmpsb
mov
cmp
cld
test
in
out
adc
mov
xchg
jg
push
int3
xorl
push
insb
cmp
in
testl
in
mov
notb
mov
daa
xchg
negl
insl
movsl
pusha
sbb
xor
add
rclb
sub
sub
mov
sbb
mov
pop
mov
enter
or
outsb
adc
faddl
push
sbb
negb
adc
and
mov
mov
sar
cmp
out
cmpsb
icebp
movzwl
or
push
cltd
sub
je
sbb
pushl
adc
pop
ret
xchg
xor
mov
inc
push
lds
mov
ficompl
ret
ja
es
dec
or
xor
bound
lds
or
inc
jg
fstp
adc
loopne
or
or
xor
or
lcall
or
push
or
sub
lret
in
pop
leave
stos
mov
lahf
movsb
xor
cmp
pushf
pop
push
xor
jg
hlt
cmpsl
fsubl
inc
cmpsl
adc
jbe
mov
mov
pop
adc
repnz
pop
inc
sub
insb
add
sub
add
int
push
enter
dec
psubd
mov
and
dec
aad
xor
mov
cmc
cmpsl
adcb
aas
cmp
mov
aaa
mov
dec
jns
mov
jnp
sub
hlt
repz
mov
ret
jg
stos
or
xchg
push
pop
mov
pop
push
inc
ret
dec
xchg
inc
data16
cmp
arpl
leave
mov
test
and
lods
mov
lods
pop
xchg
adc
pop
pop
push
inc
in
decl
xchg
cmp
aam
pop
std
cmp
push
rcll
jbe
scas
fldl2t
fwait
sbb
bnd
push
mov
and
mov
add
movsb
cmp
js
std
rcll
mov
xchg
sub
and
ficompl
push
lret
scas
xor
outsb
xor
jae
shrl
popf
and
pop
xchg
stc
add
push
dec
loope
xchg
xor
sbb
insl
icebp
and
out
hlt
fimuls
mov
lods
cld
data16
mov
inc
cmp
outsb
adc
out
push
dec
mov
test
std
push
fsubrl
cmc
cmp
lds
fistps
lcall
lds
add
call
cmp
mov
jnp
and
xor
test
and
pop
nop
xor
sbb
jae
imul
js
ja
test
xchg
and
mov
mov
movsb
repz
pop
push
lds
pop
stc
mov
psrlq
xorl
jle
pop
xchg
dec
cmc
dec
inc
ret
int3
addr16
fisttps
loop
cmp
mov
inc
notl
push
add
mov
out
lret
mov
cmp
mov
mov
fldenv
cmpb
or
loop
inc
js
adc
jp
add
xor
lret
scas
push
and
idivb
in
xchg
add
enter
push
and
enter
dec
add
add
in
pop
xchg
cmpsb
mov
lret
xor
inc
in
or
or
add
in
xchg
push
add
add
add
mov
or
sub
out
scas
test
jg
insl
jae
xchg
mov
jle
subl
loope
orps
sub
cmp
lock
cs
ja
or
xor
int
mov
push
ds
rol
dec
in
pop
inc
cmp
mov
inc
pop
or
xchg
int3
pop
add
mov
cwtl
mov
imul
cmpsl
cmp
xor
stos
call
jg
push
lds
or
je
enter
mov
jp
out
bnd
pop
in
stc
mov
rolb
push
in
or
jae
dec
push
sub
aaa
addr16
daa
rolb
bound
cs
inc
mov
add
mov
cmp
jns
xchg
insb
cmpsl
movsl
mov
clc
pop
or
xor
in
in
push
fistl
fidivl
loopne
or
dec
jg
stc
xor
cld
xor
ret
xchg
das
sbb
es
enter
ds
and
mov
divb
movsl
or
ja
int
sahf
sbb
lods
mov
pop
lods
lret
mov
int
pop
cli
cmp
dec
sahf
mov
out
mov
cwtl
dec
pop
les
cs
shll
clc
movsb
imul
mov
cmp
stos
dec
in
sti
push
inc
mov
ds
inc
jecxz
push
enter
mov
sub
push
inc
lock
jns
mov
xor
negl
pop
mov
sub
cld
in
sub
mov
std
jo
jns
clc
mov
stos
repnz
sbb
mov
mov
jns
sahf
jbe
bound
jle
sub
ss
push
or
out
mov
xor
movsl
xor
cmc
fwait
movsl
movsb
xor
or
push
andb
rorb
mov
ret
inc
rclb
pop
shrb
mov
mov
pop
scas
ficompl
icebp
mov
cli
fisubrs
sub
fbstp
in
dec
dec
jno
sub
xchg
mov
add
or
push
sub
or
stc
call
xchg
int
push
mov
fwait
sub
ret
out
or
in
call
sti
loope
ficoml
mov
jbe
jb
bound
inc
push
mov
jne
out
mov
inc
scas
call
stos
dec
aas
pop
fldl
or
and
and
loopne
aad
in
fcmovnbe
push
sbb
dec
inc
pop
js
mov
fdivl
mov
arpl
mov
sbb
cmp
or
adc
push
out
daa
xor
div
pop
xchg
stc
push
cmp
mov
daa
inc
jecxz
inc
mov
adc
fcoms
iret
daa
mov
gs
jbe
popf
inc
push
or
push
push
sub
fnstcw
xor
test
test
test
add
enter
call
adc
test
inc
cmp
push
xchg
int3
fstpt
push
gs
fcmovnb
cmp
test
test
add
xor
stos
pop
dec
mov
sbb
and
ss
pusha
insb
pop
add
xor
cli
in
fmuls
xchg
test
xchg
clc
test
shrb
pusha
daa
or
pop
sti
cltd
xchg
xor
mov
mov
add
push
cmc
imul
fs
sarb
xor
jge
sbb
cmp
lret
out
das
push
lds
add
mov
sub
sbb
push
jnp
push
scas
ret
sarb
mov
dec
ss
dec
mov
or
push
sbb
movsl
xchg
sti
cli
movsl
add
test
insb
push
mov
xchg
jb
pop
test
mov
cmovbe
hlt
or
push
test
adc
mov
mov
js
out
add
std
mov
pop
sub
sahf
mov
jecxz
jmp
movsb
jb
mov
pop
daa
inc
jne
scas
adc
jl
or
movsb
je
loop
xchg
mov
test
aas
scas
fistl
ret
xchg
pop
or
and
cmp
jo
stos
mov
push
or
imul
add
sahf
xchg
mov
or
cmp
fistps
xchg
pop
inc
lea
mov
inc
nop
rep
lahf
sub
pop
cltd
push
push
test
lods
movsl
outsb
pushf
add
jo
lret
dec
mov
pop
push
hlt
pop
pop
hlt
nop
lea
mov
pushf
push
test
lret
filds
sti
pop
jmp
sbb
inc
dec
lods
cmp
je
pop
fwait
adc
stc
adc
adc
push
mov
sub
sbb
jnp
mov
xor
adc
testb
sbb
or
cld
pop
jl
pusha
sub
pop
jo
fs
je
and
int
into
imul
movsb
pop
sahf
les
fstpl
imul
cmp
sub
add
mov
frstor
push
call
sub
fmull
xchg
mov
pushl
push
mov
in
daa
loope
mov
push
mov
and
xor
sbb
pop
pusha
cmp
push
xchg
mov
add
jmp
shll
push
xchg
insb
lods
cmp
xchg
cmp
cmp
mov
pop
add
mov
mov
pop
xor
mov
pop
xchg
arpl
mov
xchg
push
push
loop
fisttpll
fdivl
adcl
dec
lods
fisttpll
lock
pusha
mov
daa
int3
jb
jp
xlat
sbb
fs
push
rcll
iret
push
je
cmp
cli
stos
push
jecxz
cmpsl
pop
andl
test
mov
add
aam
loopne
dec
inc
dec
repnz
dec
pop
in
jl
fldl
push
movsb
ja
loope
stc
xor
arpl
jns
xor
in
fwait
outsl
mov
mov
cltd
pop
sbb
test
dec
icebp
pushf
jbe
dec
nop
ja
dec
push
dec
enter
push
xchg
adc
orl
inc
lcall
aam
and
aam
pusha
mov
xchg
cmpsl
jmp
sub
adc
negb
fcompl
es
ds
shlb
mov
out
movsl
sub
cli
das
or
mov
pop
adc
mov
into
cmp
pop
cld
mov
inc
and
andl
mov
or
loope
repz
xchg
mov
cmp
sub
cmpsl
xchg
push
test
or
popa
xchg
in
sbb
orb
xchg
sbb
inc
call
cs
in
flds
into
sbb
xor
cmp
dec
ficoms
out
sbb
sbb
fcmovnb
pop
orl
and
cmp
pop
cli
scas
imulb
sbb
sub
inc
sarl
pusha
scas
cwtl
jle
push
cmp
fsubl
jnp
and
in
sbb
cld
shlb
jl
mov
mov
mov
mov
cli
ljmp
mov
cli
xchg
or
cltd
pop
cmp
pop
mov
ss
fs
repnz
in
push
pop
or
cmpsb
mov
sub
and
mov
inc
jns
or
cmc
dec
sbb
cmc
xor
dec
push
or
fsubr
inc
das
sub
enter
ret
mov
xor
push
push
pop
hlt
cmc
or
loope
and
roll
int
add
repz
incl
fidivs
inc
pop
cltd
imul
inc
pop
ret
mov
add
fs
mov
sub
xor
hlt
test
sub
outsl
pop
popa
cmp
jne
push
xor
xchg
or
mov
xor
dec
jmp
nop
lahf
setg
out
adc
pop
shlb
out
cmc
sbb
mov
xor
jb
and
ficoml
shlb
popa
lret
dec
into
push
ljmp
fidivs
xchg
out
dec
pop
dec
rorl
aas
insb
mov
pop
inc
insb
mov
out
pusha
mov
imul
loope
pushf
adc
xorb
fs
fwait
sub
push
aas
sbb
and
repnz
das
push
jns
cmp
mov
adc
ljmp
pusha
test
sarb
jp
pop
and
imul
mov
and
jmp
fcoms
push
xlat
out
test
data16
test
sbb
pop
push
cs
in
inc
test
xchg
push
loopne
int
in
imul
addr16
jae
mov
ficompl
mov
in
push
clc
mov
lahf
les
xchg
or
leave
adc
fs
jb
stc
call
decb
rcrb
push
jl
jae
push
andl
xor
subl
aaa
cltd
inc
ja
aad
cmpsb
xorb
xlat
fcoms
mov
xor
mov
push
in
jmp
scas
inc
insb
or
aad
inc
adc
cld
push
push
mov
data16
cmp
outsl
fs
push
mov
xchg
sahf
pusha
xchg
mov
mov
repnz
aaa
nop
insl
pop
sbb
iret
xorb
mov
cli
and
push
jo
push
and
dec
dec
jecxz
jbe
adc
into
notl
or
movsb
stos
add
adcb
dec
sub
orl
cmpsl
rorb
bound
add
xor
fildll
push
scas
xchg
mov
push
imul
rcrl
incl
loopne
leave
sub
scas
addb
mov
cli
and
lret
mov
xor
sbb
cs
sbb
sub
or
inc
pop
sub
jle
mov
add
je
or
mov
roll
mov
ss
fwait
dec
fimuls
repz
adc
int3
pop
lock
jg
cmp
repnz
sbbb
add
ffree
aam
jne
test
repnz
mov
sarb
repz
inc
out
mov
dec
dec
mov
mov
ss
pop
push
sbb
dec
lahf
cmp
cmp
das
out
scas
sti
inc
jno
jb
iret
jmp
test
fistps
sbb
mov
mov
mov
int
sbb
sti
push
lock
push
mov
repnz
loope
dec
nop
iret
jns
lret
stos
push
jle
lods
hlt
std
mov
add
imul
loop
movsb
cmp
pop
mov
int
aaa
scas
repz
mov
pop
nop
or
ds
xor
repz
fisubs
out
std
cmpsl
jg
mov
add
andb
ret
jo
adc
ret
jmp
xchg
out
enter
enter
adc
loopne
cmp
xor
adc
inc
adc
xchg
pop
sub
lret
leave
sub
xor
lods
clc
and
xor
sub
jns
shrb
call
add
cmc
xor
cmp
mov
out
or
mov
dec
mov
pop
enter
mov
mov
enter
add
or
pop
jge
arpl
ds
jg
xor
xor
movsb
push
dec
add
adc
das
sub
dec
sbb
std
imul
push
push
aaa
stos
aas
xor
mov
loopne
jmp
ret
cmp
outsb
lock
inc
mov
jb
aad
xor
arpl
nop
stos
mov
adc
sub
inc
mov
sbb
mov
sti
and
cmp
imul
les
xor
clc
in
rorl
xlat
lock
gs
push
inc
xor
int3
ret
adc
sbb
mov
pop
pop
subb
push
xor
or
movb
push
popa
hlt
xor
sub
ret
push
sub
bound
mov
icebp
jp
lock
xor
pushl
out
out
mov
orb
xchg
inc
sub
jne
xchg
mov
jo
mov
call
lock
cmpsl
and
lds
jae
push
test
jae
cmpsb
dec
stos
xchg
jmp
mov
push
movups
xor
inc
jecxz
iret
dec
lea
es
or
jo
xstore-rng
cmpsl
inc
test
add
jbe
out
adc
xlat
ret
dec
mov
aad
xchg
or
or
cmp
cmpsb
jmp
fcomps
mov
fld
adc
jle
push
adc
inc
in
sub
mov
or
jne
mov
es
int
cmp
repnz
xchg
add
cmp
inc
lcall
push
mov
inc
and
jmp
enter
and
mov
idivl
sbb
xchg
mov
pop
add
lock
push
fs
and
inc
sub
das
leave
fsub
into
jge
repz
or
pop
adc
scas
lret
jle
mov
fs
out
out
rcrl
sub
or
and
movsb
lret
scas
xchg
cmp
cmpsl
push
lret
nop
mov
inc
push
lock
lret
dec
out
inc
xor
out
insl
mov
ret
or
push
inc
into
push
push
xchg
decb
pushf
add
js
or
mov
xchg
lcall
push
int
fisttpl
xor
adc
and
out
in
das
pushf
jns
mov
adc
cmp
jno
iret
cli
push
xchg
mov
push
mov
ja
mov
sbb
outsb
lods
sub
sbb
add
mov
movsl
push
pop
mov
cmp
xchg
fwait
andl
inc
jne
mov
les
sub
bound
push
movsl
inc
lahf
and
inc
test
outsb
jnp
fmull
add
cmp
sub
lock
mov
adc
mov
push
jge
and
lret
je
in
sti
gs
inc
xchg
daa
and
test
cmp
daa
cmpsb
out
push
mov
sub
inc
daa
cmp
sub
cmp
lret
pop
xchg
pop
gs
xchg
xlat
or
sbb
fcoms
jl
mov
jg
sbb
or
fldcw
inc
and
call
mov
loopne
mov
inc
lret
sbb
cmp
pop
fcmovbe
adc
int3
push
inc
inc
mov
xchg
daa
addr16
cld
stos
scas
test
hlt
push
lock
xchg
movsb
or
pop
imull
or
xlat
cld
adc
push
cwtl
mov
int3
jo
or
repnz
sbb
jbe
outsb
pop
adc
jecxz
ret
imul
or
lret
idivb
jmp
sub
and
clc
add
adc
movsb
fs
inc
mov
push
movsl
popf
pop
cmpsl
jno
ret
cld
jo
cmc
xorl
shlb
lea
sub
or
test
sete
shlb
jbe
mov
shll
mov
jne
lds
imul
xor
adc
and
movsb
push
mov
xlat
movntq
mov
stc
dec
fidivs
gs
cmp
pop
sub
lcall
xor
aad
adc
loope
jns
dec
divb
mov
pop
push
push
imul
cltd
push
les
jmp
in
mov
mov
mov
or
jp
pop
insl
or
xor
xor
in
cmc
nop
test
and
ljmp
push
cwtl
test
and
mov
insb
dec
cwtl
mov
sub
add
out
xor
and
mov
movsb
iret
pop
fistl
dec
mov
cmc
adc
test
mov
jmp
fsubrs
cmp
jb
fsubl
push
inc
test
mov
dec
jo
inc
loop
out
mov
jns
dec
adc
test
stos
popf
sub
lods
mov
scas
notl
out
sub
add
sbb
mov
xor
adc
mov
inc
push
in
loopne
jp
mov
lret
fwait
mov
rolb
xor
fs
mov
mov
mull
lcall
mov
cli
and
shlb
cmp
hlt
lock
push
push
mov
ret
dec
mov
js
xchg
and
pop
add
dec
inc
jl
jmp
sbb
lea
rorl
cmp
or
or
addr16
mov
arpl
clc
jae
out
dec
inc
lea
xor
leave
adc
xchg
in
mov
or
mov
fldt
inc
push
addr16
fmull
inc
pop
mov
mov
and
ss
cmp
sbb
cmpsl
adc
stc
mov
cwtl
add
mov
outsb
mov
push
scas
mov
inc
sub
or
adc
ljmp
cmpsl
push
sbb
pop
outsb
cmp
xchg
sti
aad
pop
mov
sahf
xor
add
lret
sbb
push
rcl
into
mov
jb
sub
push
mov
lods
bound
pop
test
pop
mov
and
jmp
adcb
mov
jmp
test
push
js
jg
fisttps
sub
leave
inc
mov
lods
outsb
add
lock
lock
pop
popa
mov
push
xchg
lret
dec
xor
test
pop
ja
call
cltd
ret
clc
mov
daa
lods
xchg
jne
ljmp
lret
mov
addr16
clc
fnsave
xor
iret
jae
inc
xchg
cmp
jo
sub
insl
push
in
pop
loop
lea
jb
imul
cs
jno
jp
in
sub
test
xchg
repz
mov
add
insl
xchg
pop
jmp
mov
mov
movb
or
fcmovnb
mov
rcrb
jae
lahf
cmp
shll
in
pop
cmpsb
xor
pop
xchg
cmp
adc
in
out
ja
ss
xchg
rolb
out
mov
fcmovne
and
adc
or
loope
dec
lods
jp
fwait
in
cmp
xchg
push
mov
pop
pusha
or
push
dec
push
push
jns
pop
inc
sbbb
adc
push
mov
test
mov
mov
xor
rclb
push
add
dec
push
fildl
hlt
cmp
test
fucomi
subl
sub
imul
insb
mov
jns
dec
adc
sti
sbb
lcall
repz
orb
push
dec
pop
addr16
sub
fs
inc
sub
sub
xor
dec
cmc
sub
mov
push
mov
test
add
sti
or
jle
cmpsb
mov
stos
fnstenv
stos
add
mov
or
sub
or
jo
fnstcw
push
pop
gs
fldenv
cmp
gs
jne
sbb
sarl
loop
test
hlt
repnz
gs
imul
iret
mov
add
jmp
les
outsl
dec
bound
outsl
repnz
aam
sbb
xchg
push
lcall
shll
mov
mov
or
cmp
test
rorb
rcrl
sbb
or
or
out
jns
jmp
mov
pop
mov
outsb
mov
out
clc
sub
adc
jnp
adc
jecxz
push
and
lahf
jo
enter
rcrl
sti
xlat
insb
inc
mov
pushf
push
hlt
mov
icebp
xor
adc
rcr
cmp
into
cmp
jmp
xchg
aam
cmpl
mov
jnp
gs
aam
push
sti
movsl
cmp
or
mov
jg
lock
xor
jmp
loopne
mov
mov
push
cli
mov
mov
xchg
mov
dec
inc
ljmp
scas
pop
mov
fisubl
in
inc
int
mov
or
pop
cmpsl
test
icebp
mov
mov
pop
lds
mov
push
pusha
mov
mov
pop
loope
sub
add
mov
pop
ja,pt
gs
mov
dec
jg
xchg
jl
jne
push
mov
push
push
repnz
sub
cmp
jbe
outsb
jge
pop
push
xor
test
and
rclb
sbb
jmp
int3
mov
and
movsl
jecxz
outsl
mov
add
js
push
mov
dec
push
mov
jne
or
mov
scas
dec
jno
rorb
nop
iret
aam
push
cli
and
and
or
cmc
adc
pop
adc
push
or
movl
xchg
inc
jbe
mov
or
jmp
imul
in
push
mov
sbbb
cmpsl
lret
mov
jns
pop
dec
movsl
sub
adcl
adc
sub
ja
insb
out
adc
push
scas
loope
test
insb
mov
jae
pop
testb
mov
sub
jbe,pt
int3
hlt
jns
in
icebp
rclb
xor
daa
sti
mov
xor
es
xor
rorb
and
push
fcomps
jnp
sub
add
cwtl
pop
das
adc
xchg
fildl
ret
dec
xor
das
js
xor
dec
and
mov
xchg
loopne
xchg
cmp
sbb
and
push
std
pop
push
loop
mov
orb
stos
addr16
mov
rcll
jae
ss
imul
push
inc
popf
inc
add
nop
mov
cmp
and
pusha
mov
adc
outsl
pop
mov
daa
addb
test
cmp
jle,pn
arpl
repz
leave
pop
pop
mov
push
repz
arpl
fwait
test
roll
push
ror
pop
and
dec
xor
add
xchg
mov
and
jp
test
push
mov
adc
sbb
or
sub
out
mov
xlat
push
nop
aam
sub
dec
xchg
jbe
mov
out
cltd
dec
dec
sbb
cwtl
jns
or
enter
add
push
dec
stos
ss
lds
aam
jbe
and
jecxz
pop
xorb
or
test
add
lds
jbe
or
pop
test
cmpsb
test
mov
mov
jmp
cmp
ret
jmp
cmp
dec
mov
das
mov
jl
movsl
lea
push
lcall
stos
iret
dec
rol
jo
mov
push
inc
lods
popa
add
jno
clc
dec
adc
fadds
ds
cmpsl
data16
mov
pusha
sbb
sbb
mov
test
jns,pt
scas
test
loopne
inc
arpl
dec
mov
sub
decb
pop
push
rcll
jo
imul
jecxz
mov
popa
ss
mov
push
subl
xchg
xorb
imul
std
gs
pushf
into
sub
adc
adc
pushf
je
pop
xchg
and
rclb
and
jle
std
jae
pop
adc
ret
cmc
hlt
xchg
or
xchg
add
push
lods
ret
jecxz
mov
xchg
cmp
push
mov
push
inc
cmpsl
orb
jecxz
negb
ja
mov
mov
push
cltd
or
ret
testb
loop
mov
int3
mov
push
cld
pop
in
push
dec
inc
shrb
mov
out
push
mov
mov
xlat
fsubs
pop
dec
sbb
test
idivb
pmaddwd
repnz
xchg
mov
pop
cmp
stc
xor
inc
adc
in
sub
outsb
lret
ret
es
cmp
jge
ret
push
repz
sub
mov
call
add
jbe
jnp
jne
cmp
or
xchg
adc
lret
loopne
in
pop
shr
dec
adc
ja
sti
imul
jbe
dec
xchg
mov
in
test
fisttpll
fistpll
push
or
jnp
fwait
adc
push
jbe
je
push
xor
xor
xchg
jno
aaa
jp
aad
insb
movsl
mov
xor
cmpl
push
rolb
repz
mov
aam
inc
or
test
jg,pn
jae
jo
jo
mov
jno
dec
add
ret
jae
es
movsl
cs
xchg
imul
mov
out
xor
ret
mov
dec
adc
les
or
mov
or
jo
test
mov
xor
cmp
or
jo
sbb
and
add
mov
cmp
out
inc
lds
adc
dec
push
cltd
xchg
scas
stos
movsl
into
jle
xlat
call
cmp
xor
mov
mov
popa
cmp
dec
pop
cltd
dec
xchg
decl
cmp
adcl
fnsave
fucomi
cmpb
or
daa
mov
xor
inc
inc
cmp
mov
shll
and
fiaddl
lea
jl
jno
push
pushf
negb
sahf
adc
push
out
insb
cld
push
aaa
out
hlt
lahf
enter
in
adc
mov
popf
outsb
in
add
in
addr16
or
add
mov
ds
jae
sub
inc
lret
jbe
clc
scas
js
and
mov
rol
addr16
arpl
fisubs
or
test
lahf
icebp
outsb
sub
into
xor
ja
push
or
int
sub
add
aam
lds
stos
fiadds
out
mov
push
mov
pop
sbb
adc
fdivl
xchg
aas
sub
xchg
gs
jge
es
add
mov
adc
es
stos
dec
sub
xchg
cwtl
sahf
mov
fcmovb
repnz
or
jl
mov
push
outsb
sub
adc
jns
mov
arpl
inc
mov
jb
dec
mov
stos
leave
subb
lea
in
pop
mov
and
call
fldenv
or
scas
cmp
lods
icebp
notb
ss
adc
add
js
xchg
pushf
cmp
ljmp
into
sbb
xor
sub
call
cmpb
popf
sbb
push
cwtl
cltd
mov
sti
outsb
mov
mov
rcrb
dec
fistps
and
xor
jne
gs
das
jae
jmp
adc
jmp
lods
out
lahf
js
sbb
rcr
dec
xchg
push
arpl
icebp
addr16
js
cwtl
stos
adc
shll
out
cmpsl
out
pop
out
repnz
add
jecxz
fwait
outsl
cmpsb
lret
mov
sub
cmp
js
cmpsl
pop
fsts
shlb
icebp
mov
mov
pop
push
jmp
mov
or
call
aad
sub
ljmp
pop
nop
xchg
js
out
arpl
jno
jg
jno
loop
xor
jns
inc
outsl
out
cmp
jg
shr
stos
xlat
push
scas
sbb
mov
cmp
in
inc
push
loop
aaa
sahf
mov
cli
aad
leave
pop
pop
insl
fsubs
fisttpll
or
outsb
ret
mov
adc
mov
push
dec
cmp
dec
xlat
mulb
mov
int3
rorb
push
cld
inc
push
mov
fucomi
stos
and
dec
fs
sub
or
cmp
mov
movsl
cmpl
lea
cltd
or
mov
mov
mov
out
mov
mov
enter
in
jo
mov
pop
add
push
fsubl
xchg
test
aas
xor
popa
das
cltd
test
repnz
xor
aaa
jae
pusha
sbb
es
fwait
adc
rorb
adc
in
inc
inc
push
mov
mov
data16
inc
inc
add
jle
mov
addl
xchg
or
fdivrl
mov
and
xlat
and
mov
xor
jne,pn
xor
enter
add
insl
mov
lret
pop
jno
dec
cmp
or
xlat
add
dec
mov
mov
pop
xor
push
mov
test
mov
mov
cmpsb
push
sbb
xor
lds
das
fmulp
inc
repz
movswl
mov
outsl
sbb
jg
loop
jne
aam
je
test
andb
xchg
outsb
or
sahf
pop
aad
pop
push
repz
cmp
push
mov
imul
inc
pop
pushf
add
pop
enter
loopne
cmp
loope
cvtps2pd
lea
push
pop
jno
insb
push
jle
out
loopne
and
flds
xor
and
andb
mov
xlat
dec
das
arpl
lea
dec
fwait
pop
push
aad
scas
push
mov
lahf
push
lea
fldenv
and
xor
push
into
aam
rep
mov
pop
inc
inc
divl
test
add
push
jmp
mov
decl
ret
insb
fcomip
les
stos
scas
outsl
sbb
stos
jl
arpl
loope
int3
xchg
mov
loope
mov
inc
dec
pop
pop
jle
rclb
and
shll
lret
clc
nop
pop
push
not
in
je
cmpsb
in
push
popf
jmp
test
aam
push
ret
xor
gs
imul
js
imull
mov
inc
test
push
lock
cltd
mov
lahf
adc
and
inc
cmp
jg
ja
test
clc
inc
or
inc
js
mov
mov
or
out
adc
mov
nop
imul
leave
sbb
jnp
cmp
shrb
add
mov
xlat
or
aad
fimull
shll
add
mov
repnz
or
push
sbb
pop
mov
sbb
adc
mov
inc
lods
testb
aas
roll
test
popa
cwtl
sub
test
cmpsb
jnp
imul
fwait
push
lea
mov
int
xchg
aam
in
inc
aaa
ljmp
es
call
xor
or
lock
pop
push
nop
xchg
sub
aaa
popa
sub
andb
inc
test
enter
test
sbb
dec
fld
mov
popf
mov
icebp
and
jmp
repnz
pushf
in
inc
mov
mov
fwait
mov
fisttpll
test
movsb
adc
out
aaa
fmuls
inc
dec
aam
xchg
mov
dec
dec
fisubs
mov
or
cld
test
cld
xchg
dec
ret
lcall
xor
mov
loop
inc
pop
sbb
mov
sbb
xor
daa
mov
loope
or
jno
mov
imul
ja
mov
shr
push
mov
push
jg
cmc
and
scas
xchg
iret
repz
jp
mov
pop
pop
js
or
cs
call
xorl
pop
xor
xor
scas
mov
aam
pop
sub
push
adc
or
mov
test
pushf
mov
fwait
jle
jmp
fistps
jnp
jno
pop
shll
mov
out
int
aaa
adc
cwtl
xor
push
loope
fcompl
pop
or
imul
mov
and
imul
hlt
fnstsw
hlt
std
pop
jecxz
outsb
and
inc
and
shr
negl
xchg
loopne
lahf
repnz
jl
jp
pusha
test
aam
mov
cld
pop
mov
mov
aad
loope
cld
mov
dec
mov
push
xchg
mov
inc
push
scas
inc
add
mov
into
ljmp
loope
push
push
mov
dec
pop
and
mov
add
in
lock
sub
xor
jbe
pop
in
push
xor
jle
xchg
daa
sub
outsb
int3
push
inc
dec
push
inc
jae
cmp
outsb
lahf
int3
push
flds
fdivs
test
jae
xor
and
mov
sbb
lret
push
test
mov
sub
and
mov
int
cmpsl
shrb
mov
outsl
dec
xchg
out
sbb
dec
pop
insl
rcrl
xor
mov
fiaddl
inc
loopne
lcall
insb
inc
cmpsl
pop
icebp
movsb
btr
aam
inc
dec
lds
xchg
mov
shl
and
mov
mov
mov
mov
push
jecxz
jnp
pop
out
dec
mov
repz
mov
sub
sti
into
cmpsl
jmp
lret
stc
shlb
mov
mov
fistl
xchg
mov
test
xchg
lcall
jecxz
loope
aas
xchg
lret
pop
xchg
xor
mov
mov
subl
in
push
in
jbe
lret
fcomps
add
lods
mov
mov
xchg
arpl
push
cs
ljmp
stos
cmpsb
cmp
jle
movaps
out
je
out
push
pusha
fiadds
mov
inc
sbb
pop
inc
xchg
pop
or
sbb
js
sub
or
lds
imul
inc
push
cmp
pop
inc
xchg
movsl
fisubl
inc
bound
mov
sbb
pop
lock
cmp
arpl
jg
out
aad
adc
aas
sub
popa
rclb
lea
or
add
je
test
and
add
mov
jmp
dec
add
je
inc
ficoml
cs
getsec
loope
xchg
sti
imul
push
pushf
sub
or
lods
fidivrs
das
mov
mov
sub
negb
das
dec
dec
xchg
imul
sbbb
sbb
mov
mov
jmp
clc
repnz
out
sti
shr
pop
shll
cmp
jmp
orb
xchg
xor
mov
loop
js
inc
xor
lods
adc
out
cli
jle
out
xor
adc
daa
stos
cltd
xor
movsb
push
call
mov
lcall
cli
push
push
cli
inc
or
loope
xchg
aas
or
enter
ret
push
push
dec
rorl
es
test
cmp
popa
jb
pop
ret
mov
cmp
insl
popf
shlb
in
mov
jne
in
in
mov
fsts
mov
mov
mov
scas
mov
mov
out
xchg
push
enter
mov
and
or
jl
popf
cmp
je
sub
in
and
out
sbb
gs
addl
shll
cltd
insl
and
mov
xorb
mov
inc
scas
popf
push
mov
pop
sbb
divl
aas
lret
jmp
or
jb
push
faddl
fisubrs
jge
pop
dec
iret
sub
and
sbb
repnz
or
imul
sbb
dec
push
adc
cld
add
add
mov
aad
dec
lock
push
jno
jp
cmpb
push
aam
ret
loope
test
divb
fistpll
lret
mov
mov
lea
dec
xchg
pop
test
dec
mov
jo
test
cmp
lahf
fisubs
mov
fsub
sub
pop
inc
cmp
loopne
mov
jp
mov
lret
mov
stos
push
sbbl
hlt
orb
push
subl
or
sti
push
xchg
in
xchg
imul
cmp
or
aam
mov
inc
adc
mov
lods
jmp
cmp
outsl
stos
mov
repz
xorl
hlt
dec
and
jecxz
in
les
dec
sub
mov
xchg
add
ret
out
or
inc
push
mov
cmp
mov
cmp
adc
stos
xchg
dec
push
rcr
or
repz
mov
xor
or
ficoml
mov
mov
adc
ret
cs
push
inc
daa
xor
mov
cmp
fs
mov
aas
or
sub
xchg
addb
pop
dec
mov
pop
or
mov
xchg
xchg
inc
sbb
add
arpl
mov
shr
out
inc
cmp
fdivp
out
cltd
pop
repz
imul
push
in
or
stc
jb
mov
adc
mov
mov
mov
icebp
leave
addb
js
dec
add
shlb
pop
pop
xor
cmp
or
lds
sahf
stc
stos
rolb
loop
dec
pop
lea
icebp
adc
jae
dec
icebp
fbld
dec
fiadds
add
cmp
sbb
xchg
sbb
stc
ja
sbb
mov
push
cmp
pop
mov
add
cs
cmp
push
pop
cmc
mov
inc
jge
pop
rcrb
mov
lods
out
cmpb
dec
mov
cmp
sub
inc
cltd
aam
fildl
mov
add
cld
ret
test
pop
cli
lea
sub
js
dec
outsl
sub
aaa
fcoms
jbe
inc
loop
sbb
repz
xchg
push
incb
mov
mov
out
in
loopne
adcb
xchg
shlb
fucomp
add
add
jno
aas
push
cmp
popf
les
pushf
cmp
dec
rclb
repz
fidivrl
sbb
mov
sbb
jg
hlt
std
push
dec
mov
cmpsl
loope
inc
bound
es
outsl
pop
out
fdivrl
mov
addr16
sub
sbb
subb
jae
or
ss
push
mov
or
sarl
lcall
out
mov
xchg
mov
fiadds
mov
and
mov
push
ficomps
mov
cli
dec
outsl
incb
ss
inc
in
leave
test
push
push
shlb
test
mov
mov
inc
inc
ficoms
sbbl
lcall
test
insb
test
mov
xor
inc
lods
inc
and
repnz
insl
into
push
xor
addr16
cli
loop
imull
add
dec
push
pop
sbb
stc
ja
in
sub
inc
pop
jnp
and
movsb
adc
inc
jp
out
and
bound
repz
pop
daa
pop
scas
pusha
orb
cwtl
rcll
push
daa
ja
cmc
xchg
mov
sub
cmpsb
xchg
jbe
adc
gs
push
push
sbb
in
or
fisttps
out
jg
mov
push
mov
mov
fwait
sub
bound
adc
or
pop
push
push
cmp
dec
scas
xchg
adc
xchg
cmp
xlat
stc
icebp
add
out
push
pop
test
repz
mov
sbb
mov
aas
out
int
out
xchg
in
cmp
loopne
sbb
repz
pop
add
les
jg
push
or
jp
scas
xor
outsl
movl
leave
int3
or
mov
je
jo
jns
dec
xor
and
loope
nop
js
es
pop
jmp
int3
jnp
push
mov
add
stos
rolb
popa
mov
mov
stos
arpl
mov
scas
and
xor
pushf
sub
sub
dec
aad
or
inc
rclb
fidivrl
ljmp
repz
lods
dec
cmp
cmp
push
mov
repz
mov
jnp
test
dec
mov
cs
xchg
ds
inc
and
nop
repnz
data16
mov
xor
int3
ds
shll
cmp
sahf
les
setne
ja
push
mov
mov
jmp
push
mov
scas
cltd
or
js
push
repz
in
add
adc
mov
rclb
icebp
outsb
into
inc
pop
addb
cmp
xchg
stos
pop
cmpsb
adc
clc
inc
pop
mov
test
xor
or
jnp
lods
add
mov
dec
in
sbb
jecxz
cs
ljmp
or
cld
mov
fldenv
sub
xchg
mov
xorb
loope
pop
sbbl
test
cmp
inc
lahf
xor
movsb
pop
in
xchg
add
mov
mov
adc
out
ret
jg
add
pushf
mov
lret
push
sub
incb
push
mov
mov
rorb
loopne
loopne
imul
mov
int3
mov
dec
mov
lods
pop
sub
pop
cmp
pop
dec
out
rorl
jnp
mov
jl
jmp
sub
push
jae
clc
loop
outsb
jne
xor
sub
shlb
andb
dec
and
pop
cmp
das
push
and
sbb
jae
cld
loope
or
xchg
enter
in
mov
vmaskmovdqu
shl
punpcklbw
addr16
scas
add
int3
pop
movsl
mov
inc
outsl
dec
cmpsl
cmpsl
lea
mov
jno
add
popa
xlat
outsb
and
movsl
adc
mov
popa
out
add
mov
loope
nop
mov
push
cwtl
in
fwait
lret
xor
fldt
std
sbb
in
daa
movsl
scas
mov
daa
movsb
jge
jnp,pn
add
mov
and
je
mov
shll
mov
gs
mov
sub
dec
ret
inc
clc
mov
out
add
std
mov
and
inc
rclb
mov
pop
sahf
popf
in
in
insb
nop
arpl
fs
es
jp
mov
mov
xor
mov
rcll
insb
ffree
arpl
inc
sub
stos
nop
pusha
mov
adc
mov
data16
inc
pop
pop
fdivl
inc
repz
lea
xchg
lds
mov
fnstcw
adc
inc
sub
mov
subl
insl
insl
mov
mov
pop
enter
jge
cmp
lret
cwtl
pop
inc
daa
je
xchg
jo
insb
in
xor
sub
adc
insl
push
ret
test
cmp
push
lock
cmpsl
jae
pop
fidivrs
fiadds
mov
sub
call
adcb
lahf
inc
orl
rcll
xorl
js
xor
xor
jge
xchg
or
lock
lret
mov
add
add
aaa
xchg
xlat
cmp
es
mov
pop
scas
jns
push
pop
adc
repnz
xchg
rorb
mov
jge
sub
inc
xchg
lods
ret
adc
mov
mov
pop
jo
sub
jp,pn
dec
jg
and
xchg
jb
iret
ret
hlt
push
inc
pop
test
cltd
imul
xchg
jle
sub
cltd
fsub
notb
or
inc
sbb
mov
cmp
lahf
mov
and
or
out
idivb
adc
mov
sahf
sub
pushf
push
int
idivl
in
shlb
cmp
adc
scas
cli
add
sbb
and
sbb
aaa
adc
ret
mov
ret
imul
push
into
test
sbb
sbb
mov
mov
sbbl
mov
loop
cmp
pop
mov
mov
ret
call
and
mov
push
popa
or
adc
mov
shrl
sub
mov
pop
mov
mov
inc
daa
cmp
xchg
sub
lods
cmp
lcall
subl
jl
outsl
mov
fnstsw
adc
stc
les
fistps
loope
add
lret
mov
and
jle
aad
mov
pop
dec
or
ss
jo
push
iret
lods
data16
jne
add
sahf
pushf
movsl
in
or
mov
call
aaa
mov
add
pop
inc
fdivr
cmp
adc
cmp
adc
pop
cld
push
cmpsb
cmpsb
mov
add
gs
or
jle
loop
push
lea
xchg
adc
adc
outsl
out
or
sbb
push
mov
pop
sbb
pop
xor
inc
xchg
mov
pop
cmp
aad
jmp
sahf
adc
jle
in
pop
mov
movsl
inc
orl
push
pop
imul
add
xchg
inc
xor
or
aaa
mov
loopne
cs
sub
pop
sbb
out
hlt
and
cwtl
fwait
nop
int3
sahf
mov
bound
mov
or
scas
pop
sar
inc
gs
ficoms
pop
xchg
mov
mov
jnp
in
daa
mov
push
mov
fcmovb
shlb
call
stos
rclb
into
jbe
cltd
lock
mov
ss
out
cltd
rorl
lahf
inc
out
mov
push
push
mov
lods
add
mov
out
or
out
arpl
push
in
scas
mov
test
lods
fld
jl
dec
add
sbb
and
jae
push
fnstsw
scas
test
or
data16
out
lea
and
je
dec
imul
adc
sbb
fnstsw
mov
sub
stc
mov
pop
sbb
stos
fimull
sub
push
cmp
arpl
mov
inc
inc
int
push
push
sbb
add
mov
push
or
xor
adc
cs
xchg
cmpsb
add
cmp
jle
mov
repz
jno
leave
add
mov
and
and
mov
sub
jno
jge,pn
inc
lret
sbb
jns
add
xor
xor
cmp
adc
mov
data16
lea
add
inc
and
dec
pop
leave
sub
lods
push
sahf
jmp
mov
dec
aam
sbb
imul
es
xor
push
rorl
orb
rorl
mov
inc
test
add
mov
dec
push
lock
xchg
loop
sub
andb
dec
and
or
mov
xor
ss
lea
repnz
adc
cld
hlt
cmp
pop
push
sbb
gs
push
pop
and
jle
and
sbb
aaa
imul
iret
pop
pop
dec
cmp
out
in
or
xor
mov
mov
inc
frstor
scas
fistpll
pop
lret
jmp
inc
jne
lcall
or
loop
jne
loop
das
and
xchg
add
inc
loop
push
imull
clc
enter
adc
iret
adc
ret
popf
and
iret
movsl
lcall
ds
das
cmp
das
jne
rcrl
imul
sbb
in
add
inc
xor
add
and
adc
sbb
mov
ss
mov
sbb
call
popl
cmp
xchg
xor
xchg
sub
lret
test
sub
ret
int3
cmp
mov
cwtl
mov
mov
jecxz
test
sbb
dec
mov
aas
shrl
leave
dec
cmpsb
mov
cmp
mov
ret
cmp
and
pusha
lds
scas
ljmp
outsl
mov
stos
pop
xchg
sub
clc
clc
in
jbe
rcrl
fs
fcmovb
int3
lret
mov
add
es
inc
xchg
mov
sets
push
nop
js
pop
ja
fsubs
imul
push
cmp
mov
mov
rcrl
sub
xchg
shrb
pop
cli
mov
push
nop
repz
or
xchg
pop
in
mov
mov
push
cmpsl
sub
les
jne
seta
pop
xor
cmp
imul
adc
cld
push
ljmp
sbb
jl
push
dec
jne,pt
sub
and
jbe
xchg
xchg
lret
sbb
xor
andb
lea
aad
cld
repz
loop
jns
outsl
inc
and
dec
or
and
in
mov
gs
loop
adc
and
hlt
mov
mov
pop
aas
xchg
jmp
lods
cmp
xor
inc
push
mov
and
shrl
and
inc
rolb
insb
push
pop
mov
es
std
push
int
mov
call
mov
gs
rcl
push
out
mov
aad
push
push
out
cwtl
fs
adc
xchg
mov
push
inc
sub
jmp
adc
jg
lret
inc
inc
aad
pop
daa
leave
sub
jo
mov
sbb
inc
and
xchg
fwait
es
pop
inc
jo
xor
xchg
rclb
mov
inc
sbb
clc
aaa
sub
lods
sub
clc
xlat
jmp
test
addr16
aam
add
pop
cmp
or
mov
and
mov
testl
cmp
jae
push
fsubrl
rcrb
nop
and
cmc
sub
xchg
lcall
sub
mov
addb
xchg
dec
dec
fs
jnp
inc
popa
mov
adc
fcomps
dec
out
lods
push
ja
inc
xchg
ss
adc
xor
daa
xchg
loop
in
dec
inc
push
movsl
insb
add
or
mov
or
rcll
gs
insl
and
push
pop
shrb
in
xlat
adc
lock
pop
movsb
jp
in
or
ja
fstpt
fwait
sbb
testb
pop
sbb
ret
mov
out
in
and
inc
cmp
xchg
fwait
jle
pop
incb
xrelease
imul
or
ja
mov
je
cmp
ret
mov
sub
cwtl
insb
mov
xlat
xor
fidivrl
aam
lea
cltd
lret
aaa
and
test
cmp
rclb
cs
sub
mov
shrb
mov
push
in
js
pop
es
out
pusha
inc
out
inc
sub
xchg
leave
cmc
pop
dec
sub
daa
mov
mov
out
cmp
int
push
or
xor
lods
dec
adc
sbb
mov
inc
mov
dec
mov
fxch
daa
cs
jbe
in
mov
js
inc
pop
cmpsl
je
clc
ss
aam
jle
dec
push
xor
sbbb
add
pop
movsl
dec
xchg
mov
and
adc
mov
adc
ret
xchg
mov
or
movsl
stc
mov
xor
das
xor
loop
jne
loop
cmp
ds
push
mov
or
add
scas
dec
insl
mov
xor
xor
and
out
int3
xchg
decb
jnp
ja,pt
shl
pop
imul
aaa
int
mov
cmp
loopne
and
push
mov
outsl
or
loop
sti
inc
cmc
mov
and
mov
push
mov
jle
cmp
mov
and
mov
sbb
sbb
out
or
gs
testl
pop
ljmp
or
pushl
mov
mov
xchg
jmp
or
xor
sbb
or
push
pop
cmp
xchg
loope
and
ret
test
in
jl
cmp
cmp
inc
out
add
loope
clc
sti
xchg
sbb
in
xor
dec
jp
fstps
mov
aad
ret
cmpsb
or
or
pop
test
mov
and
xor
out
stos
flds
mov
jbe
jns
cwtl
out
sbb
dec
insb
dec
or
jbe
lahf
push
ret
xchg
imul
xchg
sahf
jg
sarl
notl
add
lds
xor
or
cmp
loope
dec
push
and
mov
mov
int3
cmp
add
push
dec
xlat
xchg
xchg
addr16
adc
cmp
xor
lods
pop
ds
iret
fisttpl
outsl
out
jns
or
push
lret
mov
lret
jecxz
pop
fchs
int
or
insl
not
subb
and
icebp
test
inc
xlat
xlat
xor
aad
push
or
pop
mov
scas
aas
push
fsubrs
enter
or
inc
and
inc
sbb
jb
jecxz
mov
or
int
xor
or
or
sbb
inc
adc
cwtl
andb
rolb
test
cwtl
std
fldt
ret
mov
imul
xchg
sbb
test
data16
dec
dec
pop
dec
enter
ss
mov
and
lahf
and
xor
decb
dec
ja
rcrb
xchg
outsl
mov
sub
test
rep
push
mov
sbb
inc
fldl2e
call
and
add
rcrb
push
xor
das
ss
xor
cmp
lcall
in
xchg
clc
lahf
lods
mov
or
push
xchg
sahf
fcomps
dec
cwtl
cmp
cmp
push
enter
cmpb
push
aaa
rorl
pop
test
dec
mov
jno
cmc
insl
in
repnz
pop
test
mov
jecxz
xor
jae
push
fildll
rorl
sahf
jmp
out
xchg
pop
je
and
lea
je
nop
js
add
inc
sarl
xor
and
ror
inc
xor
and
sti
jge
inc
out
rcrb
add
cmp
sbb
mov
mov
daa
dec
loopne
imul
rcll
cli
int
xor
dec
jo
pop
dec
dec
lds
fstps
or
mov
shll
ds
sub
pop
and
les
jb
add
or
cmp
sub
mov
test
int3
xor
inc
leave
jmp
pop
inc
push
icebp
mov
ja
cmp
enter
mov
jle
test
pop
pusha
xor
mov
xor
and
mov
dec
out
or
stos
add
test
mov
addb
repnz
sbb
hlt
jg
das
iret
inc
mov
fisttps
mov
adc
ja
dec
push
mov
add
std
sub
test
mov
jne
test
fnsave
push
orb
scas
call
pop
adc
jecxz
addr16
imul
mov
ficompl
mov
push
xchg
pop
std
adc
outsl
mov
aas
sbb
int
sub
fsts
daa
insl
std
dec
icebp
stos
outsl
cmp
ret
fisttpll
cmpsl
mov
push
sub
sbb
fs
shrl
add
js
pop
sub
and
ljmp
pop
stos
xor
scas
add
icebp
lahf
iret
push
xor
repnz
enter
pop
and
shrl
xor
pushf
fsts
insb
fistpll
ss
imulb
pop
and
in
das
iret
js
ret
push
pop
jae
fnstenv
mov
lcall
dec
imul
daa
int
or
and
rcrb
addr16
xchg
pop
jl
mov
xchg
xor
lds
xchg
mov
jne
mov
or
shr
inc
enter
aas
lret
xchg
sarb
cmp
mov
in
jl
in
adc
jno
dec
lds
sbb
sbb
pop
aad
cmp
stos
dec
mov
sar
sub
xchg
aaa
jnp
mov
add
iret
xchg
dec
arpl
mov
push
jae
pop
lcall
xchg
fstp
mov
add
push
or
std
in
sarl
lahf
jnp
xchg
sub
or
cmpsl
cltd
jo
cltd
push
xlat
in
mov
inc
dec
insl
dec
out
cli
push
stos
mov
add
xor
pop
jle
jnp
pop
cltd
dec
xchg
in
shll
pop
inc
push
shrl
xor
dec
jne
sub
mov
loopne
and
jno
mov
push
or
ret
inc
ds
idivb
aad
cmp
fldl
sbb
add
pusha
pop
push
jne
or
lea
pop
mov
stc
fnstcw
ror
shll
pushf
push
lret
in
dec
adc
stos
call
lret
mov
adc
stc
shrb
pushf
jns
mov
xor
pop
ss
sbb
outsb
pop
mov
mov
faddl
pushf
inc
dec
jg
push
aas
incb
clc
pop
jmp
imul
push
jbe
sub
jno
add
sbb
xlat
ss
sbb
sahf
sbb
lret
xchg
decl
pushf
or
mov
cli
cld
movsl
push
or
ja
mov
lahf
clc
in
add
mov
lods
mov
nop
push
out
hlt
mov
adc
mov
popf
mov
adc
repnz
lahf
dec
fucom
mov
xchg
dec
xlat
mov
and
sbbl
loopne
es
jecxz,pn
iret
es
lahf
push
ret
dec
shr
movsl
in
xor
stos
clc
pop
test
or
and
cwtl
pop
xchg
sub
pop
push
dec
push
cltd
cmp
jge
mov
xchg
jne
jg
mov
jg
icebp
xchg
fstpt
mov
data16
popf
jns
shlb
daa
inc
jbe
xor
rcll
fabs
decb
sub
and
clc
cmp
dec
cmp
push
jbe
mov
dec
rcll
push
and
ret
jbe
mov
mov
fiadds
xor
push
cmp
mov
adc
inc
xor
xorb
or
pop
cltd
mov
xor
push
xlat
push
pop
insl
ret
xor
es
mov
sahf
jl
fincstp
push
jo
cmp
jp
in
push
mov
gs
dec
push
jo
inc
jg
push
lods
dec
cmp
movsl
add
clc
loop
cmp
das
fbstp
sti
mov
loop
or
shll
push
push
ficomps
jnp
xor
mov
mov
in
jne
adc
mov
push
andl
cmp
sub
mov
fs
inc
scas
xchg
call
jb
cltd
mov
ja
add
pop
xchg
jns
loope
imul
jb
dec
add
jnp
mov
and
aaa
mov
cmpsb
or
aaa
pop
loop
aad
sub
cli
mov
sub
lds
mov
or
mov
inc
cmp
stc
inc
mov
mov
sbb
mov
xor
lock
ds
push
movsb
sub
sub
in
pop
push
insl
mov
repz
icebp
inc
sbb
add
in
push
xchg
dec
mov
jo
add
lcall
sbb
push
pushl
xchg
dec
cmpsb
xchg
jae
pop
mov
pushf
fwait
jecxz
mov
fs
mov
dec
fstpl
or
inc
jg
and
rcr
adc
dec
aam
inc
sub
cmp
cmpsl
lret
repnz
xor
ret
mov
pop
lods
out
fadds
mov
ficoml
int3
dec
fiaddl
ret
jg
les
sbb
lods
test
mov
sbb
inc
inc
cmp
jb
inc
lds
shr
jbe
push
jmp
adc
fwait
push
adc
adc
mov
in
inc
jl
cmp
adc
inc
mov
scas
std
jno
ret
sarl
rclb
lret
stos
cmp
es
fldl
or
add
or
sbb
cltd
jne
das
pop
pop
movsb
pop
adc
test
mov
out
cmpsl
pop
push
stos
gs
adc
fcmovbe
jge
cmp
mov
jp
sbb
sub
outsb
into
xor
dec
sub
xor
adc
mov
call
add
ficoml
push
cmp
jl
cmp
lcall
std
or
mov
arpl
into
jmp
and
lahf
hlt
mov
jmp
int
add
lods
push
sub
fdivs
push
insl
adc
insl
sbb
scas
mov
movb
push
pop
insb
mov
cmp
inc
dec
mov
imul
out
and
lret
sbb
cmpl
cmp
gs
push
jno
insb
pop
mov
mov
subb
mov
or
roll
sarl
and
xlat
sahf
mov
repz
cli
adc
btr
popa
inc
push
je
pop
cmc
jecxz
adc
scas
sti
hlt
push
cmpsl
xor
inc
scas
pop
jnp
fidivrs
lea
jge
xchg
aas
idivb
adc
xchg
in
sbb
int3
iret
sub
out
fnstcw
repnz
je
mov
les
add
push
dec
jne
adc
pop
cld
jne
outsb
dec
xchg
loopne
inc
jnp
ds
xchg
ja
cs
and
sahf
inc
pop
and
mov
pop
mov
jg
loope
and
pusha
jl
cs
add
mov
hlt
aaa
push
xchg
mov
leave
push
sarb
das
int3
fcomps
mov
pop
mov
mov
inc
cmc
mov
xchg
imul
sbb
cltd
imul
scas
std
dec
push
int
xchg
xchg
rorb
push
in
or
dec
nop
jno
mov
sbb
sti
ja
imul
das
rcr
cmpl
shlb
cwtl
cmp
cmp
adc
icebp
mov
adc
lds
std
jae
sti
insl
xor
dec
mov
in
and
sub
push
pop
sbb
ror
mov
mov
stos
inc
mov
mov
fdivs
in
pushf
mov
loopne
pushf
test
stos
pop
dec
ret
xor
xor
out
cltd
aam
cltd
mov
xchg
mov
mov
rclb
lods
and
xor
sbb
add
clc
adc
and
jno
jp
in
sub
into
sbb
call
aad
test
jmp
or
pop
loopne
ds
jg
repnz
cmp
jae
popf
push
je
bound
pop
sub
or
xchg
and
sub
xchg
jo
jb
pop
clc
sub
out
and
lds
jge
bound
mov
mov
fnstenv
add
mov
stos
pusha
lahf
xor
fidivrs
js
and
aaa
jmp
hlt
lret
test
das
js
mov
fists
xor
mov
das
jle
jb
jae
pop
mov
xchg
icebp
in
mov
mov
inc
push
jecxz
ret
call
cmp
or
and
dec
pop
popf
hlt
std
jbe
sub
fists
sarl
or
sub
sub
stos
fiadds
cwtl
dec
mov
pushf
inc
jne
in
fisttpll
add
movsl
nop
cmp
pop
xchg
push
insb
scas
cmpsb
and
dec
cli
test
cmc
dec
mov
push
ja
xchg
not
fistl
cmp
clc
imul
scas
rorl
sub
sti
jb
cli
jae
sub
push
loope
lret
fnstcw
pop
dec
pop
mov
sub
repnz
les
mov
cmpsb
pop
sub
xchg
mov
inc
in
mov
neg
push
xor
cli
int3
lods
mov
push
push
lcall
push
and
xor
ret
cmp
scas
cld
out
jecxz
cmpsl
insb
out
sbb
pop
jno
pusha
inc
decl
popl
stos
outsl
xchg
in
push
fs
and
mov
jae
push
jl
adc
dec
push
icebp
mov
mov
pop
stos
rolb
jg
xchg
std
lahf
mov
gs
add
pop
jo
push
mov
es
aaa
and
sub
push
jecxz
xchg
cmc
std
sub
jmp
lods
mov
in
sub
mov
push
sub
push
adcb
shll
outsb
call
aad
push
dec
lcall
cltd
push
scas
rep
shrb
orb
sbb
pop
dec
repz
leave
mov
mov
lcall
fstps
and
inc
data16
iret
or
sti
fiadds
adc
movsl
dec
or
pop
ds
adc
ret
iret
idiv
leave
push
sbb
insl
cmp
jne
addb
mov
lods
jne
add
loop
and
repz
pop
aam
ss
sbb
push
dec
je
mov
pushf
mov
lea
nop
and
aaa
daa
loope
jno
mov
lahf
mov
pusha
cmp
xlat
das
cs
and
sbb
xor
cltd
lods
sub
inc
jae
or
ror
mov
pusha
shll
pop
lret
sbbl
mov
cmp
stos
loope
movsb
cld
pop
call
mov
sbb
cltd
inc
idivl
mov
xor
arpl
push
test
sbb
adc
and
mov
test
and
aam
sub
in
gs
xor
lods
mov
mov
inc
pushf
bound
ret
inc
jbe
sbbb
enter
dec
in
sub
ljmp
xchg
mov
pop
cld
inc
inc
or
pushf
ficoml
adc
jns
mov
mov
push
fsts
xor
ljmp
xor
dec
test
jecxz
fbld
mov
test
mov
add
in
pop
es
inc
push
loopne
fst
arpl
loopne
sub
loope
cmp
scas
es
jno
push
or
fdiv
adc
add
movsb
call
jae
enter
mov
jae
xor
mov
inc
hlt
xor
dec
jle
jmp
lret
xchg
rcrl
fsubp
lea
xchg
mov
pop
mov
add
fldt
push
imul
mov
ret
dec
pop
les
mov
gs
hlt
test
test
stc
cwtl
ljmp
js
outsb
pop
mov
pushf
popa
inc
imul
add
mov
and
bound
pop
ds
jne
ss
loop
cmp
jns
out
dec
scas
loop
and
add
fistpl
or
sub
jnp
mov
in
fisubs
push
popf
loope
sbb
test
lods
and
rorb
daa
sbb
jle
adc
xchg
add
outsl
iret
cmpsb
testl
in
adc
faddl
andb
xor
sbb
jecxz
dec
mov
aam
cwtl
push
fistpll
lods
loopne
lcall
movsb
mov
fdiv
lret
leave
jnp
push
jl
and
fwait
das
cltd
mov
jg
cwtl
sbb
xchg
incl
push
xchg
mov
mov
xor
popf
loope
push
or
shll
jp
fs
pop
sarb
pop
fnstenv
js
jnp
xlat
xor
lea
repnz
lret
mov
or
pop
xchg
and
add
mov
mov
mov
sub
rcll
pop
mov
add
and
inc
mov
dec
sbb
jl
ljmp
pop
jle
xor
in
sbb
cmp
jno
ret
push
inc
adc
mov
int3
out
je
sarl
push
loopne
addr16
dec
popa
cmpps
jge
scas
push
push
nop
and
out
pop
sti
cmp
sbb
add
push
addl
xchg
dec
mov
mov
add
push
fcmove
lods
mov
lcall
rcr
dec
daa
cmp
pop
repnz
adc
mov
insb
mov
inc
addr16
mov
dec
jge
pop
adc
sub
or
xlat
ja
aam
fisttpll
daa
cmc
mov
sbb
pushf
cmp
cmp
dec
clc
das
xor
sarb
push
cmp
xchg
nop
jp
inc
imul
xor
into
add
test
mov
rclb
insl
sbb
mov
sub
dec
fnstsw
es
test
or
pop
addr16
or
cwtl
mov
icebp
mov
pop
inc
xchg
cli
and
insl
inc
in
jmp
int
push
test
adcl
mov
push
add
sbb
pop
cmpsl
mov
cs
sub
jns
fdivr
adc
fcompl
mov
call
dec
inc
cltd
or
sbb
xchg
push
push
pop
add
cmc
or
and
sbb
sub
scas
xor
push
sub
mov
mov
push
push
sahf
in
mov
push
movb
hlt
mov
js
pop
mov
mov
subb
cld
sbb
xchg
outsl
les
xor
mov
int
dec
sbbb
inc
add
icebp
mov
test
jp
in
bound
inc
adc
mov
dec
in
sbb
je
movb
xchg
lods
pop
sbbl
push
pop
and
pop
cmc
push
xchg
jp
lock
leave
adc
or
das
inc
mov
hlt
insl
test
into
inc
test
in
insl
arpl
or
mov
dec
cmp
cwtl
jecxz
jno
std
mov
or
ds
xor
adc
mov
mov
dec
lds
or
aaa
sub
adc
dec
and
sub
movl
lods
mov
mov
lods
xor
fnstenv
out
xchg
cs
das
mov
cld
das
mov
les
mov
stos
sbb
mov
dec
cmp
mov
outsb
ja
push
mov
out
xchg
push
inc
outsl
dec
cmp
pop
sub
sbb
pop
xchg
adc
dec
and
daa
cmc
test
push
pusha
dec
adc
add
jo
lods
push
push
cli
stc
gs
int
push
cmp
adc
scas
xchg
sub
in
dec
stc
inc
mov
push
fs
xor
cwtl
sbbl
inc
cmp
jnp
pop
mov
push
es
mov
xchg
sub
lret
cli
push
inc
rolb
in
xor
dec
mov
cmp
xor
jg
push
mov
out
out
add
cwtl
frstor
out
lcall
add
es
pop
sbb
xor
arpl
xchg
push
rorl
cmp
adc
repz
pop
andb
inc
pusha
outsl
dec
imul
dec
dec
sbb
das
push
lret
jmp
out
out
jae
cmpsb
push
fwait
outsb
shll
cmp
adc
lods
adc
mov
inc
jno
add
xchg
mov
push
xor
das
pop
and
pop
adc
hlt
jnp
jg
andl
pop
xchg
dec
cwtl
cmp
shll
jmp
xchg
shlb
dec
pop
arpl
xor
or
mov
mov
movsl
mov
cmpl
xor
pop
inc
test
jae
adc
sti
ljmp
insl
invd
ret
ret
sbb
sbb
pusha
movb
mov
bound
sbb
mov
loope
xchg
dec
mov
ljmp
jmp
add
dec
push
pop
out
jnp
xchg
xor
and
cmpsl
xchg
mov
dec
out
mul
or
mov
cld
pop
adc
xchg
imul
jl
push
inc
xor
inc
ror
das
fwait
cmp
lods
push
rcrb
fistpll
fwait
ljmp
push
subb
aaa
jle
andl
stos
jmp
test
cmp
loope
mov
dec
fnstsw
pusha
lds
cmp
hlt
xchg
call
pop
mov
or
lock
dec
fs
int
fstps
dec
add
jecxz
insl
arpl
mov
dec
sub
mov
das
mov
insb
fdivrs
out
dec
in
mov
jae
imul
xor
mov
call
cmp
popw
mov
je
lea
mov
cmp
pop
in
and
cmpsb
pop
cli
loope
gs
mov
and
lock
fs
jno
dec
repz
jecxz
dec
xchg
cmpsl
mov
bound
sti
inc
and
jp
mov
mov
sbb
pop
jae
pushw
movsl
fwait
cmp
lret
lods
xlat
or
scas
push
add
out
inc
aam
and
ljmp
shl
jg
popf
or
and
loop
jbe
popf
dec
pop
in
push
into
pop
hlt
setnp
mov
aad
adc
mov
mov
and
fldl2t
add
mov
jns
sub
xlat
dec
scas
fstpl
movsl
xor
nop
pop
adc
in
push
jmp
sbb
roll
add
jo
stos
ljmp
sbb
hlt
cmc
cmp
cmpl
sbb
ret
sbb
sub
jns
sbb
push
jp
nop
dec
and
xor
aam
stos
jo
sbb
aas
aaa
xor
pop
inc
add
mov
mov
sti
dec
test
jge
adc
adc
pop
cmp
inc
push
sub
insb
jle
pop
pop
jmp
lret
test
jbe
enter
out
jae
inc
scas
or
dec
and
jae
ja
test
dec
pop
add
xlat
sub
mov
inc
lock
aaa
les
inc
fst
push
mov
clc
in
cmp
xlat
lahf
push
orl
lods
adc
mov
ret
push
dec
addr16
sub
popf
pushf
jecxz
ds
punpckldq
adc
fistpll
scas
xchg
jns
loop
or
pushf
fidivrs
out
cmp
mov
ret
or
cmp
xchg
movsb
stos
mov
pusha
add
add
push
fists
and
insb
sub
cmp
xchg
inc
and
mov
adc
shlb
fwait
push
fsub
fdivrs
ja
aaa
xchg
inc
xor
pop
loope
dec
cmpsl
ljmp
and
sbb
mov
jne
cmpb
cmpsl
in
pusha
push
loop
mov
mov
xchg
push
mov
in
xor
mov
call
in
test
mov
jmp
cltd
xor
addr16
push
pushf
sbb
fsubr
cmc
fsubrs
scas
mov
sbb
and
jno
fistl
es
nop
jge
pop
or
sbb
xchg
lret
mov
sub
adc
dec
xchg
fimuls
pop
adc
ror
js
sbb
mov
inc
add
add
add
jnp
xchg
inc
jnp
in
ficoms
dec
nop
fists
dec
outsl
scas
cwtl
mov
dec
xchg
push
popl
or
test
dec
mov
inc
push
lock
sbb
push
jmp
in
mov
and
imul
test
add
cwtl
add
popa
int
xor
sub
mov
fwait
dec
sub
ja
aad
scas
fistpl
pop
inc
je
ljmp
pop
xor
je
scas
cltd
ds
or
addr16
loopne
cmp
je
ja
cmp
cmp
gs
ja
dec
sbb
pop
xor
out
rcll
pushf
inc
ljmp
or
in
mov
push
gs
xor
out
mov
jno
leave
inc
sbb
mov
rol
call
insl
ret
pop
cmp
outsb
sbb
mov
xor
pop
sahf
push
jp
sbb
xchg
adcb
and
push
cwtl
xchg
adc
sub
jae
push
addr16
out
and
push
dec
shlb
out
sbb
cmp
push
outsb
ljmp
repz
sub
rcrb
or
and
fistps
pop
mov
movsl
mov
sbb
test
cmpsl
mov
scas
jne
sbb
cmp
or
dec
cmp
lds
mov
pop
out
and
ljmp
std
xchg
sub
lcall
ds
jnp
adc
lcall
jle
inc
aas
dec
mov
mov
fdivs
punpckhbw
int3
jb
jno
dec
int
hlt
fisttpll
mov
dec
mov
cmp
fistpll
loop
xor
xor
test
idivl
cli
in
mov
dec
cwtl
int
shl
ret
dec
fwait
enter
sbb
sbb
mov
iret
and
xor
enter
negb
outsl
inc
lret
jbe
cmc
adc
and
jae
add
or
popl
mov
fistl
adc
mov
pushf
loope
jb
out
xchg
daa
scas
jl
lds
jl
dec
stc
addr16
outsl
outsl
lahf
mov
add
mov
add
xor
push
out
ret
mov
mov
mov
das
sub
sbb
cs
xchg
jne,pt
add
js
out
adc
es
mov
cmc
push
mov
xor
ret
insl
rcrl
into
mov
call
fwait
xchg
inc
push
or
push
jo
add
pop
jno
fstpl
add
jbe
loope
xchg
xor
push
adc
mov
cmpsl
mov
xor
shlb
loopne
dec
lahf
push
ret
inc
je
mov
pop
sub
ds
and
cmp
sub
pop
mov
sar
xchg
scas
movsl
jo
sbb
ret
jae
sbb
sbb
iret
in
sbb
inc
mov
call
mov
bnd
loope
pop
faddl
fstpt
divl
mov
outsb
jle
pop
xor
dec
mov
sbb
add
rcll
xchg
pushf
nop
or
shll
stos
pop
aam
call
add
jge
pusha
stos
xchg
iret
fsubrs
push
movsb
imul
rcrb
sub
orb
mov
sbb
inc
into
out
xchg
cmpsb
or
add
dec
shr
push
ds
push
lcall
dec
push
movsl
mov
pop
mov
xchg
outsb
mov
popa
xor
cwtl
mov
add
dec
rolb
bound
pop
mov
out
xchg
enter
in
sbbl
xchg
rolb
jge
je
xor
sbb
test
sub
mov
mov
rcr
cmpl
cmpl
pushf
bound
lods
jmp
jno
inc
lret
fwait
sub
call
push
rol
fdivrs
ja
mov
and
dec
sub
and
scas
mov
xor
cs
xlat
jp
mov
jbe
push
adc
roll
lds
sbb
jle
in
inc
add
adc
aas
pushf
sbb
outsl
inc
stos
jp
push
xor
movsb
ret
mov
mov
jbe
dec
push
and
jmp
or
nop
mov
cmp
test
jp
sub
insb
cmp
inc
into
add
sbb
ret
xor
sub
lods
inc
dec
shr
loop
bound
hlt
adc
addr16
std
mov
je
or
mov
push
pop
mov
fidivrl
sbb
repz
sbb
inc
faddl
mulb
jl
iret
stos
ljmp
clc
inc
rolb
or
xchg
scas
lea
mov
add
sbb
stos
push
in
loopne
pop
push
imul
xor
cwtl
xorl
add
mov
mov
pushf
dec
dec
adc
mov
fst
jg
cmp
jmp
sub
loopne
xchg
mov
mov
pushf
push
xchg
insl
ss
lahf
outsb
stc
ds
mov
out
xor
faddl
ret
jmp
inc
add
data16
and
cmp
jmp
xor
mov
xorb
in
add
pop
sbb
or
sub
inc
mov
sub
mov
xor
loopne
xchg
push
add
push
mov
aaa
mov
sti
pusha
push
xchg
jae
addl
das
mov
cmp
xor
cmp
arpl
movsb
out
icebp
ss
dec
stos
sbb
fs
push
mov
mov
sbb
adc
mov
or
xor
pop
mov
outsl
stos
hlt
pop
add
out
data16
sbb
sub
xor
enter
inc
adc
out
push
xor
fnstcw
in
imul
sti
add
mov
iret
rorb
and
fsubrs
arpl
scas
fidivrl
ljmp
mov
mov
add
aam
loope
and
and
sub
mov
or
movsb
lret
lds
or
sbb
inc
inc
mov
mov
pushf
inc
fimuls
rcrb
loop
fisubs
lds
aas
inc
js
xlat
aad
jns
push
outsb
add
clc
dec
xchg
or
sbb
mov
cmp
dec
enter
lret
into
jle
or
push
shlb
add
and
test
inc
ds
push
pop
icebp
repnz
sub
in
sbb
mull
pop
sbb
lds
jecxz
lcall
mov
pop
cmp
cltd
pop
cmp
xchg
loopne
cmp
add
xor
rorl
ret
jae
lahf
aad
repnz
rol
test
ret
pushf
mov
mov
pop
push
shll
loopne
push
cmp
in
push
mov
inc
add
or
jecxz
add
mov
mov
pop
xchg
insb
mov
icebp
adc
and
fwait
insb
jns
adc
out
sub
mov
mov
outsb
jne
mov
test
adc
pop
pop
inc
push
ret
jnp
dec
inc
lods
movb
repz
jle
imul
cs
ror
jl
pop
loop
add
adc
loopne
jno
out
inc
pop
push
push
aad
lea
xor
sahf
mov
sbb
movsl
or
mov
dec
push
inc
data16
fcmovbe
xchg
scas
call
mull
add
push
and
adc
call
cld
xchg
jcxz
xchg
jg
cmpsl
sahf
int
push
push
js
decb
and
sbb
test
pop
add
in
icebp
mov
mov
stos
lods
mov
dec
es
cmp
lock
pusha
outsb
int3
jns
and
mov
sbb
ja
aad
sbb
adc
add
and
jmp
sbb
lret
inc
mov
std
sbb
or
cmp
orl
arpl
lods
lods
nop
mov
fistl
jno
test
jno
sbb
push
mov
xchg
ret
push
mov
rcr
cmp
dec
sub
rcrl
fsubrs
mov
and
push
add
js
rolb
les
jl,pn
ljmp
xchg
xor
cs
hlt
outsb
and
into
jnp
jo
movsb
scas
or
aaa
dec
pop
push
inc
or
cld
jb
div
hlt
incl
add
xchg
inc
xchg
push
inc
mov
or
test
in
shrb
push
jne
xlat
dec
dec
dec
dec
orb
xor
sbb
scas
xor
inc
dec
clc
add
xchg
out
mov
xchg
jg
enter
loope
test
clc
add
cmpsb
das
test
xchg
ds
lock
add
or
insb
xchg
sbb
jecxz
iret
xchg
je
mov
sti
dec
mov
andl
or
lahf
neg
inc
pusha
jnp
and
test
jp
inc
pop
mov
inc
push
in
outsl
add
sbb
mov
mov
enter
mov
xor
jb
xchg
add
aad
in
test
inc
sub
or
jge
movsb
jmp
cmpsb
mov
pextrw
popa
jmp
adc
jmp
fsubrs
jb
stos
aaa
out
sbb
add
cmpsl
xlat
arpl
pop
movsb
add
fisttpl
test
arpl
pop
push
inc
push
mov
push
push
in
outsb
fs
xor
inc
ljmp
lds
repz
xchg
xchg
and
cmc
sub
sub
adc
cmpsl
cmp
cmpsl
loope
mov
fidivrl
sbb
sub
cmpsl
popf
push
fsubrp
jno
fwait
repnz
mov
lea
xorb
sbb
ss
mov
aas
mov
cmp
cld
lcall
repz
dec
jg
dec
push
xlat
dec
or
and
dec
inc
nop
xchg
jae
jo
in
mov
pop
xchg
mov
cmc
add
movsb
inc
adc
dec
and
loope
xor
pop
pop
sub
mov
xor
cmp
mov
repz
push
gs
add
out
sbb
jecxz
add
movsb
sbb
lock
pop
jnp
xchg
cld
add
imulb
addr16
lods
fwait
in
adc
xlat
outsb
divb
movsb
add
out
dec
bound
fwait
pop
jg
std
fnstenv
inc
fsubrp
push
add
das
bound
mov
jns
lds
xchg
outsb
lods
int3
int3
jmp
repnz
push
popf
push
ds
incl
mov
push
fstpt
jns
int3
aas
adc
push
pop
lock
mov
sub
adc
dec
mov
or
fisubrl
mov
aaa
xchg
ret
test
leave
mov
push
xchg
aaa
int3
fidivs
movsl
mov
loopne
pusha
sbb
out
adc
mov
xor
movsl
fimull
fwait
pop
xor
lea
jecxz
es
push
xor
lods
aaa
loopne
mov
push
out
std
xor
test
aaa
xchg
mov
sar
xor
jne
stos
and
pop
cmp
jecxz
cmpb
fistl
test
jp
pop
aaa
or
daa
jnp
lret
stos
fisubl
sub
sbb
mov
aad
movl
mov
pop
mov
inc
arpl
xorl
sbb
adc
xor
dec
jns
leave
enter
mov
outsb
cmpb
push
add
cwtl
mov
dec
mov
les
stos
sub
cmp
lahf
int
ret
ret
movsb
fadds
in
push
jb
xchg
sbbl
outsl
fnstsw
pmulhw
mov
dec
lods
and
loope
xchg
leave
cmp
cld
fucomi
sub
scas
jecxz
add
push
addr16
clc
push
dec
aaa
imul
adc
add
sub
neg
mov
out
scas
je
pop
push
add
fst
xlat
insb
icebp
adc
aad
inc
aad
sbb
ud1
arpl
jle
xchg
cmp
sub
in
les
cmp
ret
dec
movsl
cmc
lock
jbe
icebp
pusha
popf
push
mov
cmp
aad
clc
cwtl
stc
imul
sub
xchg
push
rol
aad
sbb
lcall
mov
mov
imulb
sahf
sbb
or
pop
or
adc
sbbb
daa
outsb
jecxz
pop
js
mov
pop
cmp
mov
add
xor
test
inc
frstor
cltd
imul
je
push
hlt
lahf
push
and
mov
mov
adc
mov
inc
jo
into
gs
jbe
into
test
jnp
sbb
outsl
iret
jg
mov
ss
pop
pop
imul
rolb
sahf
cmpsl
adc
js
inc
sub
inc
out
jmp
ljmp
scas
inc
and
jns
mov
dec
cmp
push
dec
xchg
pop
stos
lea
test
aam
es
pushf
test
dec
push
insl
loop
ror
dec
mov
insb
mov
dec
insb
insl
jp
in
or
hlt
stos
andl
lea
stos
movsb
outsb
in
pop
sbb
ret
push
xchg
les
gs
repz
or
inc
pop
mov
mov
dec
mov
mov
cmc
push
jbe
frstor
call
sbb
and
sub
adc
mov
jbe
push
js
in
outsb
dec
xor
lcall
xchg
rclb
dec
aas
cld
adc
hlt
inc
sbb
push
stos
sbb
mov
data16
iret
push
imul
mov
sub
or
dec
or
jp
pop
test
repnz
sbb
setno
and
dec
lcall
pop
cmp
add
movsl
sub
dec
mov
mov
loope
pop
stos
movsl
jo
lcall
sub
xorb
or
jns
jmp
mov
in
xor
sbb
push
hlt
push
enter
sbb
sub
mov
sub
push
mov
notl
decl
and
fs
xor
push
adc
mov
int
xor
fwait
adc
push
stos
lods
mov
jg
and
repnz
sbb
jecxz
enter
loopne
mov
sahf
jbe
sbb
mov
aad
int
jns
or
sub
popf
push
xchg
test
push
mov
xor
xchg
inc
push
mov
aas
gs
mov
pop
pop
sbb
psadbw
mov
imul
cmp
pop
push
in
mull
std
xchg
cld
insl
or
das
cld
divb
adc
adc
xor
pop
dec
mov
jb
out
lea
clc
icebp
std
inc
testb
push
out
dec
jne
ret
push
shrb
add
mov
out
push
fisubrl
lock
test
cli
aas
mov
bound
adc
add
lods
jp
rcrl
aas
inc
push
xchg
xor
cmpsb
xchg
les
test
inc
ret
jbe
mov
dec
sbb
and
sub
mov
fwait
cli
dec
movsb
lods
mov
jno
dec
cltd
out
sbb
cmp
push
and
push
lock
xor
mov
add
mov
in
loop
jl
repnz
cmp
into
repz
xor
xor
call
int
xchg
bound
test
mov
xchg
mov
outsl
outsb
inc
popf
jno
xor
and
nop
sub
sbb
add
push
push
insb
hlt
xchg
paddq
lds
or
push
enter
es
cmp
pop
mov
or
sbb
sbb
pop
mov
pushf
inc
imul
jp
mov
mov
push
daa
pop
notl
mov
sbb
cmp
loopne
jmp
aam
lods
idivb
adc
adc
loop
leave
mov
dec
sub
dec
scas
sbb
jnp
decb
adc
cs
or
sub
sbb
mov
xor
and
xchg
lds
push
testb
xchg
int
cmp
push
insb
jns
mov
in
aad
mov
shl
cmp
hlt
cmp
inc
mov
sbb
fcoml
mov
xor
movsl
stc
jae
adc
lods
cmc
cs
xchg
pop
push
mov
in
enter
loope
sub
xchg
sbb
mov
fwait
mov
mov
cs
jle
addr16
jmp
inc
imul
inc
inc
loopne
sub
xlat
xor
mov
loop
dec
stos
cwtl
push
nop
inc
and
push
dec
ret
push
sahf
push
adc
dec
dec
jmp
aad
fcompl
cmp
fisubs
mov
shrb
adc
fwait
push
pusha
nop
mov
iret
in
pop
pop
popa
pushf
adcl
cmp
jmp
adc
nop
rcll
mov
xchg
aas
shll
arpl
inc
xor
mov
cmp
sbb
push
sbb
in
inc
xor
and
mov
push
dec
xor
fucomip
int
jmp
xor
mov
popa
insl
mov
ss
mov
and
pop
jmp
push
call
movsl
jg
lahf
imul
xchg
rorb
sub
dec
mov
cld
aad
lret
cmp
mov
push
lret
push
sti
pushf
jo
mov
stc
jle
add
sub
repz
and
sub
mov
pop
mov
ja
fsts
or
push
movsb
das
jbe
out
stos
mov
ret
icebp
add
inc
jge
test
enter
sti
fistpl
jne
or
push
jge
test
lock
popa
xchg
adc
outsb
sbb
jmp
push
xchg
jo
inc
and
adc
mov
push
fmull
popa
adc
sahf
adc
divl
mov
enter
divps
aad
push
inc
and
ds
push
leave
xor
and
dec
fidivrs
push
arpl
test
inc
aaa
add
mov
lahf
jecxz
hlt
int3
ja
fcmovbe
shll
mov
clc
jne
sub
sub
call
popa
insb
shlb
jge
cmp
add
std
in
or
or
test
rcll
jbe
enter
lods
repz
outsb
sbb
fdivs
sahf
mov
pop
sti
jne
testb
and
cmp
inc
mov
cmp
sbb
pop
ljmp
pop
mov
stos
push
scas
inc
mov
xchg
xchg
pop
filds
xor
jno
pop
or
popa
jo
insl
loop
push
mov
fimuls
aas
mov
mov
dec
mov
std
add
dec
cmp
sbb
rcll
aaa
orb
jecxz
jg
rorl
outsl
dec
ljmp
add
sub
xor
adc
mov
mov
int
xchg
dec
xchg
mov
push
in
lret
jmp
and
push
andb
sti
sbb
jbe
push
sub
fidivrl
mov
fmull
es
popf
or
inc
jmp
pushf
sub
jbe
mov
jl
sbb
and
sub
mov
jns
inc
cmp
lock
add
jne
mov
dec
iret
xor
ret
sbb
inc
rorl
in
sarl
push
das
mov
dec
andb
push
jae
push
in
adcl
bound
fimuls
and
push
mov
inc
xor
xchg
mov
pop
sbb
popf
push
jge
push
fdivs
popa
lcall
or
das
and
pop
push
movsl
outsb
sub
push
push
aam
mov
cmp
mov
cmp
in
xlat
lds
rolb
std
mov
movb
aas
mov
inc
mov
or
xor
lock
hlt
mov
es
mov
mov
xor
and
pop
data16
imul
mull
outsb
add
fdivr
inc
adc
imul
fcmovb
icebp
adc
inc
stos
dec
clc
cs
movsb
dec
fimull
imul
xor
push
jbe
and
cwtl
stos
mov
pop
aam
jmp
mov
jle
mov
mov
int
xor
cwtl
cmp
ja
leave
in
enter
xchg
fstpt
add
sbb
popf
mov
jne
mov
lcall
cmc
mov
enter
xrelease
pop
lods
pop
sbb
mov
fnstsw
movsl
and
je
cmp
push
and
jae
inc
sbb
mov
ja
cmp
in
stc
cmp
sbb
xor
add
cltd
mov
jg
popa
cmp
dec
jg
movsl
push
mov
pop
cmpsl
cli
enterw
sarb
cmp
cmpsb
or
testl
test
outsb
pop
or
sarl
xor
out
push
dec
or
pushf
mov
pop
mov
js
pop
xchg
loopne
jo
mov
ljmp
addb
loopne
in
fcompl
mov
stos
into
pop
pop
cmpsl
fldl
stos
ret
add
pop
fdivrl
jp
xor
sahf
lret
mov
adc
pushf
mov
ret
popf
sub
fsubs
inc
push
out
inc
fdivrl
dec
xchg
adc
xchg
negl
jo
inc
jl
and
pop
cmc
gs
loope
inc
daa
nop
int3
push
loopne
das
mov
mov
dec
daa
jae
or
lcall
in
mov
pop
push
push
add
jno
sbb
mov
repnz
xchg
jmp
jno
fsubrs
inc
ficoml
sbbl
in
pop
mov
ret
dec
xchg
jbe
movsl
sub
pop
jb
add
rcl
rcrl
lods
dec
cmp
rcpps
push
cs
fldl
popf
lds
aad
ret
cmpsb
jnp
mov
mov
loopne
pop
jnp
mov
int3
xor
sbb
sbb
jmp
lds
push
daa
mov
loop
push
popf
cmp
cmp
xor
ljmp
inc
pushl
ss
sub
push
inc
inc
dec
movsl
mov
lods
dec
scas
gs
xor
mov
mov
add
xchg
neg
jmp
ljmp
lods
test
ljmp
arpl
hlt
mov
mov
lods
mov
rorb
pop
repnz
hlt
push
js
rcl
jecxz
scas
stos
leave
cwtl
adc
mov
lock
dec
pop
mov
je
xchg
or
shll
out
push
fisubl
mov
cmc
je
scas
adc
push
stos
outsb
pop
das
jmp
mov
lods
sbb
pop
jge
pop
pushf
cmp
iret
sti
cmp
insl
or
or
mov
xchg
out
sbb
pop
lock
add
dec
mov
sti
cmp
or
arpl
xchg
js
adc
push
jns
xor
test
push
mov
cli
jmp
lds
xchg
mov
aam
mov
xchg
hlt
push
mov
nop
or
mov
fisubrl
add
rclb
ret
fs
push
ret
mov
xor
stos
xlat
mov
adc
cmp
data16
mov
jg
pop
adc
aaa
fdivs
fidivl
negb
in
mov
out
outsl
decb
sbb
cmp
mov
add
test
pusha
mov
cltd
xchg
inc
cmc
sub
mov
pop
or
xchg
data16
imul
loopne
test
dec
je
adc
mov
xor
ja
push
iret
cmp
cmp
adc
or
fisubrl
leave
aaa
or
dec
loopne
pusha
mov
pop
adc
pop
push
push
int
pop
mov
jns
into
jbe
out
notb
adc
testl
cmc
xor
in
bound
push
shll
call
stos
psraw
mov
lock
mov
lods
scas
sbb
push
jl
pop
push
xchg
testb
jp,pt
aas
and
mov
adc
es
cmp
bound
fwait
sbb
lock
pop
scas
in
jecxz
adc
test
pop
lea
mov
mov
mov
mov
enter
jne
fwait
and
shrb
or
cmpsb
xchg
and
pop
mov
mov
mov
pop
jbe
and
add
dec
or
adc
jp
mov
dec
std
jo
roll
adc
xor
cmp
js
cmp
sub
ja
ret
mov
push
fdivrs
pop
mov
mov
sub
fstps
jp
xorl
insl
loop
xchg
sub
mov
mov
dec
loopne
pop
movsl
orl
cltd
loope
xchg
repnz
fcos
jne
imul
push
pop
sarl
pop
xchg
adc
or
ret
mov
mov
stc
test
mov
add
dec
adc
sti
sahf
adc
mov
inc
hlt
fnstenv
xlat
xor
icebp
and
fidivs
arpl
outsl
in
roll
mov
daa
in
push
add
jmp
lret
and
push
or
mov
or
fistpll
mov
push
sahf
out
movsl
stos
ljmp
and
clc
mov
bound
iret
push
stc
push
cmp
inc
ss
sbb
das
and
sbb
pop
pop
push
push
dec
pop
xlat
sarl
and
pop
lods
cli
xchg
push
mov
or
xchg
fucomp
adc
mov
insl
push
or
sti
inc
push
sub
cld
out
insl
sbb
shlb
test
inc
dec
xchg
orl
mov
stos
push
jno
jge
or
mov
push
cltd
mulps
fildll
fcomi
xchg
sarb
movsl
cld
daa
adc
call
out
sub
repnz
sbb
or
push
sbb
movsl
jle
ja
and
rorl
jne
jmp
inc
std
in
mov
push
push
dec
imul
ja
jp
in
mov
ja
gs
into
cs
arpl
jb
cmc
insl
jbe
or
movsb
ret
inc
lock
loopne
xor
and
mov
xor
test
dec
mov
push
fisttps
inc
das
in
mov
dec
dec
lods
jmp
add
aam
xchg
mov
adcl
mov
and
repz
imul
insb
jne
out
pop
push
jg
aaa
mov
sbb
movsb
aad
sub
pop
stos
and
out
es
inc
xor
and
sbb
pop
mov
add
sbb
add
jmp
pop
or
nop
mov
in
shll
addr16
cmpsb
cld
jl
lret
into
jns
xorb
jmp
cmp
divl
add
out
int3
push
aad
lea
pop
sbb
call
adc
cwtl
jbe
xchg
outsl
xchg
bound
sub
out
lahf
push
rolb
jg
mov
pop
adc
ljmp
jl
lret
cmp
dec
dec
pop
lahf
sbb
pusha
mov
mov
lcall
fwait
in
lea
stos
adc
in
or
insb
add
popf
fbld
fidivl
pop
addb
jne
hlt
lcall
aam
push
test
or
aas
sub
xchg
dec
das
mov
adc
aad
mov
mov
adc
xchg
cmpsl
add
pop
sbb
rclb
or
fisttpl
push
stos
shll
add
xchg
or
push
inc
daa
xor
jns
push
dec
repnz
pusha
aas
and
ljmp
popf
add
mov
add
lds
insl
pusha
adc
sbb
insl
lods
and
daa
mov
inc
das
mov
add
scas
mov
int3
xchg
xor
arpl
mov
mov
dec
dec
adc
jg
sbbb
sbb
cmp
pop
cmp
jl
add
hlt
push
jp
add
xor
dec
adc
sbb
insl
lret
lea
mov
nop
or
lea
ret
nop
sub
xlat
fnsave
arpl
sub
pop
ret
sub
push
lahf
out
or
xor
jmp
jge
mov
xor
cmp
jl
sub
mov
sub
movsl
aad
loope
ds
cs
mov
sbb
enter
cmp
movsl
fisubs
adc
out
out
xor
xchg
sbb
inc
mov
lcall
je
pop
fisubrl
leave
shll
and
mov
sbb
and
out
or
xor
call
test
lods
jb
sahf
mov
or
xchg
shl
or
cli
or
adc
cli
stos
loope
xchg
fisttps
int
push
jnp
int
xchg
sub
lods
xor
lods
lret
or
mov
push
adc
cli
xchg
popa
pusha
jp
loop
push
pop
arpl
inc
fdivs
mov
cmp
ret
mov
and
mov
adc
loopne
pop
jmp
stos
outsl
test
lahf
data16
xchg
jb
test
into
jl
out
add
sbb
jae
ret
pushl
push
packsswb
pop
fnstsw
push
sbbl
push
ret
and
push
cmp
push
xchg
mov
stos
mov
inc
pop
add
aad
mov
xchg
ja
dec
or
push
dec
xor
or
mov
cmp
add
in
js
dec
mov
lret
sti
adc
std
jle
js
iret
cltd
addl
das
inc
in
cs
xlat
xacquire
mov
dec
mov
pop
mov
sub
scas
sbb
lock
cwtl
mov
leave
iret
filds
fisubrl
jmp
mov
dec
mov
or
sub
jae
xor
out
and
jae
lea
dec
in
pop
test
inc
and
xchg
pop
mov
mov
movsl
add
pusha
insb
fistpll
pushf
mov
pop
cmpsl
and
test
xchg
mov
cmc
jae
xchg
mov
gs
pop
leave
inc
and
sub
pop
cmp
and
addl
mov
aad
sbb
imul
inc
adc
adcb
cli
xlat
or
sub
aad
push
pop
jp
mov
add
sbb
or
dec
scas
hlt
sub
ds
and
cli
inc
push
sarb
nop
jg
or
mov
hlt
push
push
loop
lods
test
shrl
push
jecxz
aam
sub
rclb
pop
ja
xor
icebp
sti
inc
repnz
popa
subb
jp,pn
or
inc
mov
jle
mov
inc
js
leave
add
inc
and
mov
notl
mov
xchg
out
dec
mov
test
push
arpl
ja
mov
movsl
lret
pop
ret
push
push
shll
lret
les
pop
filds
mov
pop
jnp
and
mov
out
ret
insb
xchg
scas
sbb
mov
fdivl
pop
jle
sbb
pushf
cmp
out
enter
int
sti
fwait
xor
mov
cli
pop
icebp
sub
jl
in
mov
loop
std
sbb
stc
stc
scas
frstor
outsb
movsl
insl
or
inc
xchg
xorb
mov
mov
xor
mov
pop
sbb
jae
jg
mov
xor
xor
xchg
ss
inc
and
sahf
dec
lock
fisubl
shrb
xchg
or
std
jb
stc
div
pop
and
mov
orb
dec
and
fdiv
and
and
rol
ret
jb
xor
and
das
pop
dec
fcoml
adc
cltd
lahf
inc
popf
iret
xchg
aam
add
ss
add
pop
cmp
cltd
cltd
adc
popa
dec
add
mov
subl
dec
or
push
dec
or
dec
sbb
xchg
or
pushfw
les
nop
push
lea
and
xchg
jl
rol
mov
jp
clc
adc
xor
call
lds
sbb
xor
pop
xor
sahf
insb
adc
repz
cmp
and
ficoml
adc
test
and
cmp
pop
cmp
dec
cltd
stos
mov
pusha
and
roll
mov
sub
mov
cld
xor
jmp
mov
or
pmaxsw
jle
cli
mov
stos
mov
cmc
rorb
movsb
insb
jnp
pop
adcb
insb
sub
cmp
dec
sbb
pop
hlt
orl
sbb
mov
in
adc
push
ds
daa
ret
sbb
fisttpl
mov
cmp
xchg
ljmp
mov
cmp
lcall
xor
dec
outsb
mov
imul
xor
mov
xchg
push
call
data16
hlt
adc
neg
mov
fimuls
cwtl
inc
adc
xchg
mov
nop
jp
xor
mov
stos
adc
pusha
fcompl
cmpsl
cld
leave
cwtl
fidivs
sbbb
add
jo
rcrb
int
into
das
je
outsl
xchg
cltd
cli
or
cmpsl
test
icebp
mov
push
push
pop
arpl
mov
jnp
jmp
push
in
out
push
loope
or
aad
mov
mov
aas
mov
or
mov
je
lds
pop
out
xchg
push
cmpsb
xor
insb
popa
aas
int3
mov
pop
imul
stos
xchg
andl
in
mov
cs
lods
mov
push
cld
mov
add
xor
xlat
js
hlt
int3
xchg
fs
das
fistpl
pop
dec
sbb
mov
test
mov
xchg
xor
das
pop
sbbl
movsl
jg
jb
inc
mov
in
shl
std
add
pop
iret
inc
sub
pop
pop
dec
xchg
jns
loop
and
cmp
adc
add
imull
jl
icebp
mov
aad
divl
push
ret
push
sbbl
test
arpl
sbb
jge
jp
pop
test
test
fdivs
inc
out
jl
subl
pop
adc
inc
movsl
sub
bnd
sbbl
les
jo
iret
fistps
mov
shlb
adc
repz
cmc
ljmp
or
cmc
aad
cmpsb
xchg
pop
xchg
aaa
ret
cmp
jbe
stos
push
clc
mov
std
add
cwtl
mov
add
sbb
inc
push
mov
ljmp
pop
cs
cltd
imull
mov
inc
clc
flds
mov
gs
outsb
mov
and
xor
into
fstps
inc
rolb
ret
iret
shlb
xchg
sub
inc
aad
sub
ror
outsl
loope
push
fcoml
rcl
clc
idivl
daa
inc
filds
mov
push
pop
dec
push
push
inc
aaa
jge
aaa
mov
scas
lahf
adc
or
shl
push
push
pop
pop
adc
in
lret
in
inc
fsubl
scas
push
and
mov
aad
rorl
lahf
or
int
in
outsl
ficoml
mov
mov
addr16
push
mov
jge
adc
mov
cmp
add
negl
jl
dec
jmp
jmp
sbb
mov
push
jmp
pop
adc
jns
outsb
fstpt
repz
xchg
jne
and
les
xor
cmp
sbb
addr16
loopne
sarl
xor
das
jne
add
mov
movsb
lcall
je
pop
inc
bound
stos
imul
pop
orb
pop
dec
xor
jl
pop
aad
jnp
and
jbe
or
fs
sbb
in
fimull
xchg
mov
sub
packssdw
lock
stos
adc
fdivrs
or
mov
xchg
movsb
loopne
test
and
daa
ds
adc
cmc
shlb
inc
push
shrb
jns
test
insb
and
iret
andb
inc
fsts
fstpt
adc
xchg
imull
adc
pop
mov
dec
outsb
mov
mov
dec
mov
fidivrl
inc
jb
mov
cs
movsl
inc
iret
frstor
jne,pt
sub
andb
flds
lods
ret
pop
lcall
out
pop
push
loopne
hlt
mov
jbe
jge
aam
sbb
outsb
popf
pop
lods
stos
pop
cwtl
jp
out
mov
and
add
or
add
ja
sbbb
sti
mov
mov
cmp
push
ficoml
mov
fdivs
repz
in
daa
outsb
jecxz
das
pop
mov
pushf
popf
test
lret
cli
cmc
inc
or
les
push
push
rcrl
sbb
mov
cmpsl
mov
loop
jmp
arpl
mov
xchg
repz
mov
pusha
test
add
and
in
lcall
or
push
xorb
rcl
test
jb
and
sub
inc
pop
stos
gs
xchg
cmp
jg
cmp
outsl
add
mov
mov
js
ss
mov
mov
adc
dec
rorl
cli
pop
sub
mov
or
leave
inc
ds
ret
rcrb
mov
mov
loope
outsb
incl
sub
stc
pop
mov
adc
pop
shl
pop
dec
clc
mov
cmp
xor
repz
sbb
fnsave
lds
push
dec
fwait
shl
mov
or
lods
fimuls
pop
outsl
add
fnstcw
xchg
mov
inc
xor
xchg
dec
jle
test
xchg
adc
xor
and
es
sbb
rol
mov
xchg
jg
xor
xchg
cmp
mov
jb
mov
fwait
sbb
dec
xchg
movsl
aad
sub
cmc
clc
sub
lret
cmp
xchg
jnp
add
test
jns
fisubl
cmpsb
dec
inc
jbe
in
call
incl
sbb
out
mov
aaa
mov
fidivrl
xor
xor
jo
push
push
jns
jnp
sub
fidivrs
push
dec
fidivrl
rol
dec
push
addr16
push
mov
xor
pop
mov
xchg
js
xchg
daa
cli
mov
subb
decb
xchg
xor
and
loopne
cwtl
push
js
pop
pop
cs
test
in
pop
sub
dec
nop
mov
out
dec
arpl
push
mov
adc
cld
lds
out
mov
adc
sub
shl
mov
outsl
push
scas
sbbl
mov
cmp
je
adc
fidivl
inc
fdivrs
ds
jl
in
mov
inc
test
xor
mov
loop
dec
or
pop
pop
xor
sbb
orb
cmovp
test
or
xchg
insl
ret
cmc
jle
cmp
scas
aad
add
jecxz
jmp
enter
add
sbb
dec
loopne
push
icebp
fadd
bnd
sub
ja
adc
stc
iret
pop
mov
adc
insl
add
out
jne
adc
pop
cvttps2pi
fs
in
inc
sbb
enter
jmp
push
ror
shrl
mov
add
movsb
rcrb
push
push
mov
leave
cmp
scas
adc
push
pushf
mov
mov
mov
dec
insl
cmp
bound
pop
sub
jno
test
xchg
jno
dec
mov
inc
xor
push
jmp
insb
mov
mov
shll
push
cmpl
mov
stc
xchg
pop
ret
sub
int3
ljmpw
lret
jmp
mov
sbbb
mov
xchg
pop
aam
xchg
jno
push
lods
push
add
mov
and
int3
ss
mov
xor
jo
lea
mov
fs
les
cld
or
bound
stos
inc
push
iret
pop
ss
adc
jmp
jmp
rolb
stc
ss
or
rol
in
aad
add
popa
adc
lret
fcmovbe
sarl
js
scas
dec
adcb
push
mov
mov
dec
loope
pop
push
iret
iret
js
push
nop
mov
inc
jne
jge
cmp
fistpll
jo
out
sbbl
mov
and
popa
inc
adc
push
stc
loope
lea
inc
je
in
subl
loopne,pt
arpl
mov
xorb
inc
inc
cmp
cmp
incb
ss
add
cwtl
pop
add
mov
bound
xor
into
fdivrs
sbb
incl
dec
jb
jp
ret
fld
aam
repnz
fistps
stos
clc
mov
lods
cmp
fsubl
insb
aad
mov
mov
loop
lock
mov
fwait
and
sbb
dec
das
subl
stc
scas
ja
pop
clc
push
cmc
cmp
jo
pop
shrb
push
mov
popa
imul
dec
out
or
inc
data16
mov
or
out
xor
add
es
sbb
lret
inc
addr16
ret
into
cmpl
adc
jge
push
stos
fwait
das
ss
jo
adcl
mov
xchg
mov
gs
testb
xchg
mov
mov
lcall
xor
add
mov
bound
xchg
mov
and
cmpsl
mov
push
mov
lcall
xor
mov
mov
push
xchg
aam
ja
inc
add
add
push
xor
sub
rorb
xor
adc
mov
sbb
pop
sbb
dec
mov
adc
out
call
mov
rcr
rcrb
mov
mov
jp
test
jge
or
mov
or
add
es
xlat
inc
and
lock
inc
xorb
lods
xchg
jle
sbb
inc
pop
ret
mov
lret
or
mov
inc
movsb
mov
hlt
in
cwtl
jno
inc
sbb
in
adc
xchg
xor
subl
xlat
cmp
dec
jg
mov
mov
aam
ljmp
xchg
cmp
in
insl
sub
cs
movsb
fldenv
neg
mov
pop
jl
mov
sahf
dec
lret
push
popa
xchg
outsb
es
ja
scas
loopne
pop
inc
xchg
xor
out
cld
insb
and
hlt
add
mov
mov
cmpsb
or
cmpb
clc
stos
xor
or
mov
adc
iret
jmp
mov
add
xchg
je
in
or
test
mov
ss
mov
push
jno
iret
push
fidivrl
cmpsb
lcall
pop
push
test
mov
in
cmc
movl
jb
sub
rcrl
idivl
jne
push
jne
orl
into
cmp
and
pushl
pusha
imul
pop
mov
xlat
or
lcall
sub
or
pop
sti
dec
faddl
sub
test
nop
je
fdivs
aad
xor
cmc
and
lcall
rcll
outsl
out
jecxz
dec
arpl
inc
cmpl
and
imul
shr
dec
int
repnz
mov
imul
pop
xchg
call
fisttpl
dec
sar
adc
pushf
sub
jge
sub
pop
jns
subb
jge
mov
fwait
sbb
ret
mov
pushf
push
ja
loopne
xchg
jge
loope
cmpsl
cli
dec
dec
sar
pop
xchg
and
pop
inc
imul
popa
mov
xor
sbb
bound
or
test
out
cmp
sub
jnp
cmp
pop
dec
xchg
idivb
fcomps
lods
push
fistpl
mov
add
sub
mov
pop
scas
xchg
xchg
js
and
aas
shll
stos
dec
rolb
out
sub
imul
xor
ss
mov
mov
shrl
test
push
sub
jp
fs
out
pop
or
jns
cmc
dec
aam
or
popf
push
push
aad
xchg
clc
fisttpl
das
jb
bnd
jne
insl
data16
out
add
in
and
es
das
sub
gs
call
sub
mov
outsl
iret
repz
mov
or
or
incl
dec
xlat
arpl
mov
inc
pusha
mov
andb
sub
or
jbe
pop
scas
enter
movsl
xor
pop
push
mov
push
inc
jp
scas
mov
xor
pop
jb
orb
idivb
sbb
out
mov
pop
sbb
out
out
repz
mov
jo
out
rolb
and
inc
add
dec
lds
stos
pop
push
dec
mov
cli
outsl
cwtl
leave
ljmp
xor
sarl
stc
into
push
dec
jo
and
inc
jnp
dec
add
add
or
aas
pop
push
psllq
loopne
add
adcb
sahf
xor
push
jbe
js
rorb
xor
inc
pop
std
mov
ret
push
hlt
cmp
cmpsl
sbb
push
pusha
jb
jae
xor
pusha
xor
sbb
test
mov
sub
xchg
adc
lods
push
sub
arpl
jg
test
adc
dec
pop
outsb
cltd
or
xchg
mov
inc
adc
lock
push
into
addr16
popf
push
mov
mov
xor
loop
jbe
add
add
clc
xchg
lds
xchg
or
add
aas
sub
ja
mov
cmp
pop
jecxz
rclb
jmp
sbb
pop
call
push
insl
daa
fwait
int3
ja
or
out
shll
inc
mov
adc
lret
pushf
sub
inc
jp
sbbb
xchg
jae
adc
pop
into
je
ds
and
mov
faddp
sub
out
iret
pop
xchg
icebp
xchg
bound
cli
sub
call
pusha
mov
or
cmp
out
gs
call
mov
repnz
push
mov
jle
inc
xchg
out
push
push
mov
mov
adc
fstl
mov
xchg
out
loop
gs
insb
lret
xchg
in
lcall
test
mov
fucomi
bound
leave
mov
rcrb
scas
jge
mov
into
sbb
xchg
xchg
test
mov
mov
sahf
lds
rolb
or
in
add
sub
std
aas
inc
into
adc
xchg
fiaddl
lea
fdivrs
pop
jge
lcallw
cs
lods
mov
add
clc
xchg
fwait
pop
pop
imul
aam
insb
mov
sub
sbb
rcrl
inc
outsb
mov
dec
xchg
sti
pop
enter
outsb
lcall
inc
xchg
cmp
pop
add
cmpl
nop
push
in
mov
sub
xchg
in
xchg
pop
jl
insl
cmc
stos
enter
cmp
popf
add
inc
push
adc
push
repnz
testl
pop
out
shrb
ficoml
dec
je
xchg
aad
in
sub
mov
and
mov
dec
mov
sbb
in
jbe
in
fbstp
loope
subb
aas
notb
mov
cmp
addr16
mov
mov
push
shrl
mov
or
mov
enter
daa
pushl
fwait
cmp
sahf
push
and
xor
mov
xchg
push
fistpll
add
mov
mov
lret
imull
jnp
loope
clc
jp
adc
or
rorb
xor
jne
dec
out
aaa
loopne
sbb
andl
cmp
and
and
add
outsl
pop
mull
stos
shr
xlat
sub
push
add
pop
inc
test
rolb
leave
mov
aaa
js
or
pushf
push
loop
push
decb
mov
xchg
in
sbb
ffree
fisubl
jne
add
push
jecxz
pusha
inc
hlt
mov
pushf
push
cmc
into
pusha
inc
dec
jge
and
enter
sarb
xlat
dec
adcb
adc
fmul
stos
in
xorl
popa
ss
clc
pop
mov
roll
loop
out
pop
ja
stos
sub
sbb
sub
ja
scas
add
sub
lods
sub
imul
lock
jns
pop
adc
cmpsl
test
mov
jnp
pop
outsl
lea
or
aam
pop
je
nop
inc
ljmp
lea
mov
in
xorb
out
xor
dec
addb
pop
inc
sbb
jbe
dec
jmp
xchg
enter
mov
push
ret
fistps
popf
insb
dec
rclb
cmp
push
mov
ret
push
out
ja
xchg
aam
in
or
xchg
cld
push
add
sbb
pushf
inc
loope
jle
fldl
lds
adc
pop
sub
xchg
insb
das
cmp
cwtl
add
rolb
sbb
scas
out
mov
cld
ljmp
test
and
rclw
daa
mov
jmp
aaa
repnz
jnp
xchg
inc
push
xor
xchg
loope
xlat
xchg
ficompl
sbb
lret
jnp
xchg
jns
add
popa
xor
cmpsl
xchg
xchg
xor
outsb
sbb
leave
pop
sbbb
or
addb
shlb
lods
enter
pop
xlat
mov
and
lods
mov
popa
inc
mov
mov
out
mov
dec
in
xchg
dec
and
faddl
inc
lock
nop
inc
push
sub
jo
mov
mov
aas
xchg
and
and
lock
cmp
add
iret
loop
cmp
sbb
repnz
sbb
and
or
xorb
aam
stos
ret
shl
cld
ljmp
lea
fadds
rcll
dec
add
pop
int
es
jp
mov
sub
leave
jb
pushf
jae
imul
mov
add
xchg
repz
lods
sbb
push
lods
push
cli
lcall
adc
mov
shll
adc
inc
stc
pop
dec
js
stos
pop
cmp
loopne
sbb
mov
pop
pusha
insb
pop
sub
sbb
jge
stos
mov
test
mov
mov
insb
cmp
and
cli
fldenv
daa
mov
or
test
jbe
push
push
sub
scas
stos
fwait
pop
xor
lret
stc
cmpsl
add
pop
in
aaa
int
mov
pushf
inc
xchg
sarl
repnz
daa
sbb
adc
test
jnp
fs
fs
outsl
jno
sbb
and
xchg
jecxz
pop
xor
and
adc
dec
into
sub
jge
ja
dec
jae
dec
call
mov
mov
jg
lret
test
shl
jbe
inc
ror
pop
jmp
sbb
in
je
in
dec
sub
push
and
sbb
xor
ja
mov
addr16
stos
test
mov
pop
cmp
jb,pt
aam
repnz
movsl
insb
inc
in
add
mov
leave
push
imul
std
cmp
in
mov
mov
fistpll
fists
rcll
andb
xchg
mov
fstpt
lahf
dec
ss
scas
mov
imul
ss
jb
fstl
clc
mov
pop
lahf
mov
sbb
xorb
sub
jecxz
imul
add
stos
inc
gs
adc
aad
daa
cmp
and
jecxz
in
xor
jmp
int
idivl
xchg
inc
add
sahf
add
xor
mov
rorl
pusha
or
push
lahf
mov
adc
inc
sub
nop
xchg
mov
xor
out
jbe
aad
xor
cld
xlat
fldl
loop
into
pop
jae
les
and
loope
aas
loop
call
in
and
mov
xchg
and
test
xor
jae
and
jp
and
mov
jge
stos
add
cli
cltd
mov
sub
mov
repnz
faddp
mov
xor
fmul
cmp
push
sbb
inc
gs
mov
sub
sub
out
mov
push
into
mov
inc
jmp
cmp
pop
pop
mov
loope
mov
jmp
push
in
xchg
cs
inc
sub
adc
xor
sub
in
clc
mov
jle
movsb
pop
movl
les
add
push
pop
inc
scas
jecxz
mov
jle
test
cmp
cmp
inc
cmp
xchg
cwtl
pushw
into
fstl
cmp
or
ret
push
fsubp
enter
cmp
imull
or
mov
frstor
hlt
aam
xlat
imul
sub
mov
or
lods
pop
jo
js
movsb
shr
clc
hlt
imul
fsubr
pop
sbb
ffree
push
xor
lds
lods
test
or
jmp
xchg
xchg
sbb
repnz
or
adc
imul
daa
scas
out
jl
jp
lods
out
loopne
xchg
out
stc
ja
jmp
adc
adc
shll
out
data16
bound
jno
fistpll
gs
xor
lret
xor
hlt
pusha
bnd
xor
bound
jae
dec
pop
sbb
and
lcall
mov
push
icebp
es
ret
lds
sahf
jge
jmp
or
and
arpl
into
xorb
decb
fbld
mov
imul
dec
dec
std
dec
pextrw
sbb
movsl
jne
add
mov
fildll
jns
lock
jno
jo
push
mov
and
xchg
jb
push
sub
jge
in
out
and
into
mov
js
sub
pushf
mov
cmp
sbbb
jle
gs
mov
dec
mov
outsb
pushf
aam
mov
ret
dec
xor
push
cmp
fsub
and
inc
int
aaa
mov
mov
inc
or
xor
sub
adc
push
popa
or
aam
addb
mov
fwait
not
sar
sti
or
xor
inc
jle
dec
mov
xor
inc
xor
adc
pusha
mov
mov
bound
push
stos
xchg
mov
out
pusha
gs
jmp
add
arpl
or
popa
out
loopne
in
adc
aaa
inc
mov
mov
das
filds
insb
and
jmp
dec
sub
xchg
xchg
xchg
leave
scas
in
mov
sub
inc
andb
dec
push
ljmp
cltd
in
lods
lock
frndint
mov
test
dec
adcb
fbld
out
xchg
mov
jns
adc
out
orl
lret
lea
cmc
push
adc
aaa
shlb
sub
pusha
and
fstpl
sti
push
sub
push
bound
jp
jnp
fisttps
std
jo
push
shll
cltd
inc
add
pop
pop
ljmp
and
sbb
xor
mov
jl
or
dec
mov
testb
inc
dec
jns
dec
mov
out
and
mov
out
in
xor
mov
jnp
movsl
lret
jecxz
fdivrl
push
das
add
pop
insb
push
xor
sarl
push
mov
jecxz
push
cli
xorl
cmp
jg
cmp
pop
push
ficompl
mov
sbb
xor
test
mov
sub
dec
call
xchg
push
pop
jl
rcrl
pop
out
mov
in
xor
push
das
push
testl
scas
sahf
mov
adc
or
arpl
jle
nop
and
push
mov
stos
imul
push
mov
jecxz
sub
mov
int3
fildl
mov
push
jle
out
mov
mov
sarb
mov
xchg
test
cmpsl
jl
pop
push
ret
inc
xor
xor
cmp
stc
lds
bound
mov
cltd
fnstenv
hlt
jno
sbb
nop
jl
dec
popa
jmp
cmc
xor
xor
rolb
sarl
inc
adc
mov
outsb
in
jge
out
stc
or
sbb
out
sahf
sbb
xor
arpl
enter
mov
sahf
shll
mov
mov
add
dec
idiv
stc
jp
lods
cmp
ja
adc
punpckhwd
cmc
pop
inc
and
in
fisubs
repnz
inc
push
pop
cmpsb
jb
popa
dec
jp
lock
in
sti
ja
icebp
push
in
pop
mov
aad
push
iret
int3
dec
clc
ja
jb
addr16
mov
ret
divb
xchg
test
pop
adc
test
lret
push
stos
mov
dec
nop
popl
bound
inc
stos
xor
fstpl
and
cltd
cmpsb
stc
jmp
mov
jbe
in
mov
add
fsubl
mov
addr16
push
pop
xchg
movsb
dec
and
sub
iret
mov
inc
push
mov
sbb
enter
xchg
push
mov
add
adc
mull
out
loope
add
shlb
outsl
mov
sbb
repnz
pop
push
lret
imul
xchg
in
std
jbe
push
addr16
insl
and
dec
and
jp
je
and
in
ret
js,pt
mov
in
add
cld
sub
test
push
xchg
push
ja
mov
sub
pop
lcallw
roll
or
jae
stc
cltd
inc
fmull
sbb
ret
iret
enter
pop
ljmp
maxps
cmpsb
jp
or
jb
outsl
aaa
enter
lret
dec
cld
insb
fs
xchg
sub
lret
jl
pop
sti
push
in
sub
dec
mov
and
cwtl
sub
or
das
jp
xchg
daa
or
movb
scas
pop
push
lock
cmc
dec
in
in
jge
jae
push
repz
jnp
aas
cmp
ljmp
adc
push
fcoms
test
mov
stos
mov
cwtl
sti
pushl
cmp
and
stos
dec
and
inc
popf
dec
ss
dec
push
cli
mov
cli
or
iret
fistl
push
or
push
scas
jle
out
mov
push
add
int3
sti
in
inc
jmp
bound
int3
ret
lods
add
rcrb
lock
push
hlt
das
aas
loope
stos
add
aam
push
push
sbb
pop
les
sbb
enter
xchg
clc
dec
mov
push
xchg
mov
mov
ret
sbb
fildll
pop
scas
cmp
mov
arpl
sti
jecxz
movsb
push
and
lret
mov
mov
adcb
adc
push
sbb
push
mov
jb
adc
stos
mov
sub
and
iret
sub
ss
mov
sub
xchg
xor
mov
cmp
clc
mov
push
pop
ljmp
xchg
and
mov
xchg
or
dec
shll
fstpl
sbb
nop
push
loop
mov
mov
dec
sahf
fstpt
xchg
xchg
movsl
mov
arpl
mov
pop
stc
lcall
les
inc
adc
xchg
sahf
cld
popa
inc
mov
mov
fs
mov
iret
sbb
inc
xchg
cmp
gs
xor
aaa
push
adc
outsl
mov
sub
xchg
xor
mov
mov
mov
mov
sbb
aas
jno
lds
xchg
outsl
jne
rolb
lret
or
pop
movsl
dec
fildll
or
inc
jae
xchg
mov
and
shrl
clc
loop
testl
fsubl
cmp
in
sub
test
test
loope
xor
push
fwait
cmpsb
int3
or
cld
push
mov
sub
and
clc
xor
aaa
pop
loope
mov
push
imul
inc
xchg
push
sub
fldl
popf
dec
rcrb
mov
or
inc
pop
and
sub
ret
scas
addr16
imul
cmp
int3
pop
aam
mov
mov
cs
sti
inc
xchg
jae
or
cli
icebp
movsl
sbb
scas
pop
loope
mov
das
mov
cmp
xor
outsb
adc
inc
cld
xchg
test
pop
mov
add
int3
cs
and
xchg
addb
int3
insl
xor
lods
mov
in
and
jg
insb
in
and
in
inc
xchg
sti
jmp
xor
decl
sub
out
nop
lcall
xchg
pushf
inc
ret
mov
add
fs
mov
lret
aaa
in
les
sti
mov
fwait
pop
cltd
mov
push
jb
dec
xchg
shll
inc
lods
movsb
lahf
lds
sbb
shl
jbe
scas
sub
cmp
into
dec
jecxz
mov
push
mov
mov
icebp
in
jnp
dec
fistl
dec
push
jne
inc
cmp
shll
mov
xchg
ja
pop
imul
sbb
add
std
jmp
clc
cli
les
aas
add
xchg
jle
stos
sbb
dec
arpl
cwtl
push
and
pop
add
leave
outsl
popa
js
bound
add
pusha
sbb
push
adc
mov
lcall
and
pop
sbb
cmpl
cld
pop
mov
xchg
mov
or
push
sbb
in
dec
rorb
jmp
mov
imul
mov
xchg
cmpsl
add
push
mov
repz
lock
imul
int
ljmp
sbb
test
dec
testl
pushf
dec
arpl
sub
cli
xchg
dec
int
out
and
mov
xlat
pusha
lret
popf
inc
sar
shll
push
imul
pop
ds
inc
mov
outsb
jge
xlat
inc
inc
js
jo
and
aas
inc
inc
jmp
aas
mov
sbb
mov
xor
cmp
mov
pop
shll
mov
mull
pop
or
arpl
das
mov
sbb
pusha
mov
fs
xchg
ret
lock
inc
inc
ret
je
inc
aas
roll
and
jp
sub
test
adc
adc
jg
push
stc
pop
negb
outsl
sahf
ljmp
lret
mov
in
push
icebp
scas
in
addl
mov
cmp
fs
or
mov
push
jle
ds
jns
arpl
adc
lock
inc
adc
xchg
and
lock
sub
sahf
repnz
pop
mov
shll
int
and
cmpsl
fwait
mov
pop
cmp
orl
pop
test
iret
mov
dec
nop
dec
inc
xor
dec
pop
int
jge
jl
not
mov
push
xor
outsb
jecxz
jbe
scas
sbb
add
lahf
cmp
int
sahf
testb
mov
inc
and
test
dec
into
sbb
add
loop
cmpsl
ss
mov
call
dec
imul
lock
inc
ds
into
fs
add
jmp
in
arpl
xchg
jge
add
dec
xlat
loop
mov
mov
mov
popf
dec
pop
push
mov
hlt
mov
push
jne
in
and
jle
dec
xchg
or
mov
xchg
mov
mov
push
gs
test
jecxz
andb
xchg
push
test
push
jbe
pushf
mov
dec
dec
adc
jg
lds
leave
ret
sarb
repnz
shrl
adc
loop
pusha
enter
les
jl
pop
sti
jae
dec
fs
idivb
popa
mov
push
in
mov
into
xor
and
imul
loope
pop
popf
cli
adc
lods
outsb
scas
cwtl
xchg
insb
and
mov
push
xchg
sub
add
inc
push
fcoml
out
lcall
fists
sub
or
lahf
cmp
pusha
mov
push
xchg
ret
mov
ret
dec
fisubrl
out
cmp
icebp
out
adc
jno
sub
stc
jno
test
bound
mov
xor
lods
mov
mov
addr16
mov
xchg
lret
nop
mov
das
aas
shl
or
adc
cmpsb
mov
push
mov
scas
or
xchg
insb
and
mov
push
test
lock
xchg
std
stos
arpl
mov
sub
test
dec
adc
or
xchg
sbb
pop
test
repz
sbb
cmp
mov
push
mov
aas
xor
frstor
xor
mov
arpl
xchg
sbb
mov
je
jb
or
cmc
xorb
shrl
mov
xchg
hlt
sbbb
out
mov
mov
push
push
les
inc
cmpb
adc
jmp
mov
inc
addr16
das
dec
out
and
ficompl
dec
jo
sbb
jbe
rep
jae
dec
sbb
out
xadd
push
jo
out
xchg
xor
test
xchg
je
and
test
dec
int3
repz
xchg
out
adc
aam
nop
mov
cmp
cmc
mov
das
push
mov
sub
or
into
jae
cli
mov
cltd
mov
sub
lods
ljmp
mov
or
xor
xchg
hlt
pop
stos
hlt
push
pop
cmc
aad
xchg
sub
movsl
mov
shl
stos
xchg
xchg
repnz
pop
int
scas
add
xor
stc
ret
push
xor
push
nop
adc
movsw
sub
jmp
add
lahf
fsubs
adc
xchg
popa
sub
dec
movsb
push
mov
pop
mov
clc
jns
push
mov
shlb
push
jns
mov
test
loope
test
addr16
adc
jnp
fbstp
mov
pop
arpl
push
push
fs
push
mov
sub
data16
inc
or
jle
loopne
jge
ljmp
push
enter
mov
insb
rolb
mov
stos
adc
mov
lcall
je
das
mov
arpl
jne
icebp
ljmp
cwtl
dec
hlt
mov
test
push
mov
call
popf
pop
call
jecxz
cli
stc
gs
inc
pop
sub
push
shlb
dec
in
push
lahf
in
and
out
ret
daa
dec
fistpl
cmpsb
mov
mov
and
icebp
and
push
mul
aas
mov
mov
mov
xchg
imul
mov
and
icebp
or
xor
cmp
std
and
popf
sbbl
rclb
mov
mov
cmp
mov
cmpsl
jmp
sub
insl
lods
icebp
movhps
out
movsl
sbb
dec
mov
cmpsl
sub
mov
inc
les
pop
mov
cld
push
cmp
push
mov
mov
jbe
fmull
mov
lds
loope
xchg
cmc
sahf
ss
pop
cmc
adc
out
mov
cmpsb
sbb
push
or
push
sub
jno
mov
out
add
push
stc
outsl
jne
push
or
aam
mov
or
pusha
les
pop
push
mov
mov
scas
cmp
and
repz
xchg
xchg
dec
ret
mov
loope
jmp
mov
add
xlat
insb
pop
mov
into
pop
fcoms
loop
pop
and
sub
push
iret
jecxz
loopne
pop
and
loope
pop
jns
incl
mov
fwait
sti
cmp
xchg
adc
faddl
lods
or
or
jg
sbb
mov
test
arpl
mov
mov
imul
adc
enter
lods
jle
js
test
mov
sbb
cltd
iret
sub
adc
mov
sub
inc
and
add
jmp
or
xor
sub
leave
pop
ljmp
int
loop
movsl
and
sbb
sub
movsl
xchg
pop
lea
arpl
xchg
jo
popw
mov
mov
or
pushf
rcr
cltd
ljmp
ret
dec
push
fstpt
xchg
and
jp
mov
lret
dec
fisttpl
jl
out
lcall
pop
mov
sbb
shrl
icebp
sbb
push
pushf
or
andl
loop
add
mov
loopne
scas
test
data16
xor
or
jmp
pop
daa
cmp
filds
mov
add
rclb
in
and
cmp
jns
psubsb
fists
jo,pt
bound
sub
mov
fsub
jl
fadds
push
ret
or
mov
cli
or
pushf
aad
dec
cli
call
stos
cltd
jo
mov
jge
mov
or
adc
xchg
lea
inc
pop
fs
inc
cs
push
pushf
and
js
aam
xchg
jge
cmp
adc
incb
inc
pop
sub
jae
int3
or
push
imul
add
cltd
and
mov
fnsave
dec
add
call
cmc
cld
mov
mov
push
shlb
les
push
and
fdiv
push
add
jle
ja
sbb
dec
add
sub
subl
sahf
adc
je
roll
mov
fsubrl
loopne
add
fiaddl
lahf
mov
push
push
mov
out
pop
adc
pop
hlt
add
mov
mov
mov
inc
push
mov
inc
mov
test
movsl
or
subl
inc
xor
sbb
fwait
rorl
or
ss
arpl
out
mov
xor
xlat
xchg
sub
insl
sub
push
pop
cmp
jge
push
jmp
int3
movsl
repnz
es
fisubs
cltd
popa
inc
dec
hlt
jbe
mov
xchg
sub
dec
imull
adc
adc
jno
jmp
movsb
scas
inc
iret
push
sbb
xor
adc
xchg
jecxz
push
push
into
push
lods
xlat
in
negb
icebp
and
int
sbb
lret
mov
nop
push
imul
inc
mov
dec
push
mov
jge
xlat
sarl
test
das
mov
popf
mov
sarl
leave
mov
into
xchg
add
pop
addl
in
roll
in
xor
mov
mov
sahf
cmp
pushf
fldenv
sbb
and
xor
scas
loopne
shrb
xchg
sbb
mov
jg
cmp
rcrb
mov
scas
pop
test
lahf
clc
imul
adc
xor
dec
cmp
inc
sbb
icebp
and
ret
sahf
ljmp
xchg
fdivr
cltd
ds
jnp
pop
ret
insl
pop
je
push
mov
push
jnp
outsl
test
popa
sbbl
icebp
adc
out
jnp
pop
and
cmpsb
cwtl
inc
jecxz
push
and
out
jp
push
sub
xchg
mov
adcl
pop
mov
mov
test
les
movsl
stos
insb
dec
mov
dec
fcomi
cli
xchg
jecxz
push
xor
in
dec
mov
cmc
xchg
inc
pusha
jno
es
mov
repz
sub
nop
cltd
mov
adc
aam
cli
pop
movsb
iret
jae
cwtl
lret
pop
mov
xchg
xor
adc
mov
lret
jge
push
dec
enter
jmp
pusha
jp
push
aam
push
dec
add
movsl
and
mov
mov
outsb
mov
mov
lahf
lret
xor
outsl
xchg
andl
cmpsl
push
xor
ja
sbb
mov
dec
imul
xchg
inc
push
mov
imul
or
and
inc
adcb
repnz
ret
mov
sbb
mov
dec
nop
nop
int3
std
fs
add
jp
jecxz
bound
push
pusha
sub
into
and
mov
jecxz
cmpsb
out
mov
pop
lahf
pop
cmpsb
rcrb
scas
popf
push
jns
xchg
call
add
pop
loop
pop
inc
jge
lcall
jns
xor
and
or
adcb
in
adc
int
sub
mov
je
cmp
xchg
ret
test
sbb
std
aas
mov
stos
push
adc
loopne
inc
pop
adc
out
mov
pop
xchg
xor
mov
adc
inc
bnd
pushf
adc
sub
lds
xchg
xchg
into
sbb
push
or
in
pop
xlat
push
dec
leave
mov
pop
mov
aam
push
popf
jcxz
fdivl
shlb
mov
inc
pop
sbb
notl
negb
cld
sahf
cltd
push
fstpt
rcll
orl
je
sbb
mov
test
mov
inc
jecxz
sub
std
test
imul
push
sbb
and
sbb
or
hlt
inc
jns
or
inc
sbb
jecxz
repz
inc
cmp
sub
push
rorl
add
daa
arpl
mov
shlb
f2xm1
and
mov
mov
mov
fmuls
enter
fcoms
adc
pop
pushf
fcompp
or
xor
ret
out
roll
gs
and
or
add
lock
loope
neg
pop
fs
mov
mov
sbbb
xor
mov
lods
sti
cmp
cmp
and
std
push
leave
std
push
cmp
cmp
dec
loop
lret
lock
sbb
add
movsb
sahf
addb
pop
gs
aad
int
setl
jp
inc
lcall
sbb
cmp
mov
sbb
mov
shll
or
int
pop
cld
jg
in
pop
fcmovbe
jno
dec
enter
pop
push
inc
aam
int3
xchg
pop
sub
or
icebp
das
xor
daa
mov
sbb
in
mov
test
inc
cmp
and
in
lret
xchg
lds
jbe
movsb
mov
outsl
stos
adc
mov
sub
test
pop
dec
mov
cmpsb
aas
pop
push
and
lahf
cmp
shlb
fucomi
cmc
das
xchg
mov
shll
scas
loop
sub
test
insl
sub
loope
and
loopne
les
cwtl
xchg
push
xor
inc
jno
fstpl
cmpsb
mov
lcall
sbb
cmp
test
mov
jge
xchg
out
iret
sbb
mov
xchg
cltd
sbb
dec
or
or
mov
shll
insb
cmp
xor
stos
jnp
pop
aad
aad
movsl
jb
shll
mov
jne,pn
inc
lds
pop
xchg
mov
cld
mov
pop
adc
stc
imul
ror
in
dec
push
or
xchg
mov
push
jns
adc
out
mov
lcall
insl
mov
and
sub
iret
pop
mov
inc
jbe
inc
lods
jnp
sbbl
pop
sbb
sahf
mov
or
jne
and
pop
cwtl
adc
out
fcomp
lds
outsb
cld
fstp
xchg
fcomi
add
aaa
pusha
aas
loop
xchg
cmp
bound
mov
and
push
inc
mov
mov
scas
insb
or
mov
sbb
mov
test
add
mov
mov
xor
sbb
pop
cmp
cmp
dec
xor
jnp
mov
bound
push
sub
jmp
nop
ja
mov
arpl
mov
imul
outsl
js
xor
std
push
out
xchg
jns
push
stos
pop
mov
movsl
test
sbb
pop
loopne
inc
push
and
sbb
sti
sub
lahf
jb
mov
inc
add
mov
shll
cmpsb
ja
sbb
jmp
jno
push
mov
xor
lods
lock
cmovs
je
mov
subb
movsb
add
outsl
aam
lret
xchg
mov
movsb
or
mov
out
std
sub
adc
xor
sbb
out
cmc
pop
cs
xlat
movsb
outsb
xchg
jns
inc
and
sti
adcl
ja
or
xor
mov
daa
ficoms
imul
idivb
cmpsb
adc
insl
adc
xorb
sub
lods
int3
cltd
leave
sbb
and
push
mov
xor
sub
jnp
aad
repz
jl
in
fmull
inc
push
sbb
mov
xor
outsb
shrd
or
dec
scas
cli
sahf
repz
faddl
insb
jnp
pop
call
lods
cmp
push
notb
dec
fdivp
sbb
sub
aad
inc
jge
or
mov
xor
shrl
push
lret
loope
pop
cltd
jns
inc
xchg
mov
jg
cmp
out
mov
fwait
add
push
add
dec
xor
js
cmp
iret
sbb
in
pop
mul
in
mov
fildll
sub
mov
xlat
xchg
xor
adc
das
mov
hlt
ret
adc
out
js
mov
cld
push
add
ror
lcall
mov
mov
cld
pop
rol
dec
jg
outsl
adc
mov
mov
or
cmp
popf
inc
cwtl
cltd
or
gs
out
mov
pop
loopne
imul
insb
jg
cmpsb
mov
xorl
or
add
or
negb
inc
adc
loop
lea
inc
adc
shlb
inc
or
fs
sbb
xchg
sti
clc
int
loopne
and
lret
lock
xchg
cli
sbb
ja
jecxz
repnz
jbe
sub
fwait
pop
lea
cld
test
pop
shrb
mov
adc
jnp
hlt
xchg
cmp
jle
sbbb
mov
and
xor
test
scas
push
inc
pop
adc
fs
fbld
pop
mov
iret
or
mov
loop
mov
xor
pop
fistl
inc
cmp
add
adc
cs
sbb
setnp
out
pop
cmp
stc
xlat
adc
add
lret
fdivs
hlt
ljmp
jae
lret
jecxz
jbe
shrb
jecxz
sbb
pop
sub
loopne
sbb
sub
add
adc
incl
pop
aad
pusha
ret
sub
mov
insb
sub
mov
je
sub
sub
sub
gs
int3
sarb
mov
leave
bnd
xor
dec
leave
nop
divl
pop
xchg
cmp
cmp
mov
sahf
dec
mov
fistpl
push
es
cwtl
lahf
inc
popa
xchg
scas
mov
decb
jns
adc
jge
imul
xor
cmp
xchg
ficomps
pop
fcomp
push
es
xchg
push
mov
ja
test
insl
mov
rcll
es
sbb
sbb
test
mov
sbb
fimull
dec
data16
in
add
mov
xor
lods
scas
lahf
cwtl
dec
and
cmp
sub
dec
mov
hlt
test
xchg
pop
xlat
incl
frstor
jne
push
lahf
jp
mov
ljmp
dec
dec
dec
orl
call
iret
sub
test
xchg
inc
inc
movsb
loope
repz
pop
xchg
les
xlat
sub
inc
mov
ret
or
sub
gs
pop
ljmp
imul
sub
xor
cmpl
incb
push
jnp
and
ja
push
mov
adc
or
icebp
dec
in
cmp
mov
insb
sahf
mov
andb
sti
inc
loop
mov
rolb
fldenv
iret
insb
or
inc
mov
js
fdivl
addr16
xchg
aas
outsb
test
mov
jp
mov
sub
and
adc
out
idivl
mov
pop
mov
mov
jbe
aad
out
iret
jmp
xchg
bound
cmp
call
mov
ficomps
adc
mov
mov
xchg
mov
or
mov
loop
sub
mov
adc
pop
xlat
das
movsb
sbb
cmpsl
xchg
stc
or
ss
hlt
xlat
std
addb
arpl
js
add
int
lret
xor
cltd
push
stos
mov
sub
xor
insl
lods
hlt
arpl
imul
adc
cmp
out
dec
test
or
xchg
xchg
loope
sbb
cmp
mov
jne
sub
mov
adc
jmp
rcrb
push
jne
icebp
push
add
mov
jle
xchg
mov
dec
cld
dec
stos
lock
test
jle
dec
mov
iret
mov
test
gs
out
add
out
je
idivb
mov
and
mov
sub
out
shll
orl
fiaddl
in
cmp
or
sbb
xor
jl
sub
mov
jle
lods
push
test
cwtl
sarb
cld
insb
sub
mov
loopne
stos
test
cmp
arpl
cmpsb
add
jmp
mov
lea
jg
lret
xchg
repnz
hlt
fld
lret
aaa
out
out
cmp
xor
mov
pop
or
xchg
repnz
inc
cmpsl
test
jge
lds
iret
mov
and
sub
fdivs
imul
mov
idiv
les
mov
push
fwait
shll
pop
out
int
fisubrs
arpl
sub
sbb
xchg
pop
cmp
lea
cli
xchg
sahf
xlat
push
rorb
test
sbb
in
lret
fwait
dec
xchg
popa
pop
fildl
or
jg
repz
jmp
adc
jg
add
test
xor
cmp
fsts
push
adc
inc
sbb
pop
jns
push
lret
xchg
js
xor
cli
adc
data16
lods
jb
insl
cmp
fsubrp
xchg
add
mov
adc
nop
add
pushf
add
call
ror
mov
aaa
sub
sub
stos
imul
pop
dec
cmp
mov
inc
scas
mov
fidivrl
and
add
int
lcall
fwait
xor
cmp
cwtl
nop
add
sahf
cld
mov
sbb
movsl
cmpsb
push
or
ficomps
sbb
dec
subps
jbe
adc
rorl
sub
mul
gs
xchg
fs
adcl
sub
sbb
cmp
in
jo
out
incl
dec
icebp
ds
aaa
xchg
aam
push
repnz
push
mov
imul
les
repz
mov
sub
arpl
loop
test
inc
iret
jno
std
popf
add
outsl
mov
sbb
je
fimull
xor
or
pop
lock
mov
subb
adc
jns
pop
sbb
outsl
xor
cmpsl
clc
add
inc
mov
scas
fcoms
aaa
push
inc
add
cmpsb
faddp
das
cmp
clc
mov
test
push
xor
cmp
pop
jo
sub
loopne
cld
pop
movsl
xor
notl
sub
dec
lahf
aad
daa
aad
fs
out
out
mov
cmp
adc
cli
push
fwait
xchg
int3
xor
mov
mov
rolb
jl
inc
and
mov
psubsb
inc
pavgb
ljmp
mov
pop
dec
into
push
pop
add
aad
mov
add
pop
sub
out
fwait
xchg
lods
jo
xor
mov
lret
or
test
hlt
push
mov
sub
jb
mov
mov
sbb
adc
stc
xchg
mov
inc
pop
dec
xchg
xor
mov
cld
xchg
or
popa
divb
fstl
xor
and
movsl
pop
test
xchg
inc
int3
and
and
mov
inc
cmp
inc
sbb
mov
pop
cmp
addr16
xchg
mov
or
add
cmp
icebp
clc
sub
iret
xchg
mov
cmp
ds
mov
cmp
dec
pop
jg
xchg
jg
fwait
dec
push
fcoms
mov
je,pn
jecxz
sbb
mov
fcom
cltd
xor
mov
in
mov
sti
mov
aas
pop
iret
lea
je
mov
dec
cmpsl
xchg
fwait
push
adc
add
test
push
cmpb
out
mov
inc
xor
cli
fldl
xchg
xchg
adc
cmp
mov
dec
jecxz
xchg
adc
mov
push
sti
push
sbb
inc
mov
inc
inc
push
mov
repz
ljmp
mov
bound
pop
in
fs
cli
jp
mov
mov
mov
insb
fwait
mov
push
push
add
stos
jmp
jge
xor
sysenter
jg
insl
dec
cltd
push
outsb
xor
jl
push
add
in
sub
fists
imul
and
das
or
and
inc
xchg
inc
and
roll
dec
mov
or
cmp
xchg
cmpsb
or
mov
inc
rcrl
clc
outsl
adc
pop
div
scas
aas
lods
xchg
xchg
test
mov
adc
cmpsl
xchg
inc
sub
xor
test
out
test
int
mov
arpl
or
pop
lahf
movsb
pop
pop
mov
ds
loopne
sub
hlt
mov
inc
inc
and
in
ljmp
jb
scas
dec
je
or
mov
pop
push
push
sbb
pop
stc
cld
mov
cmp
mov
jbe
clc
push
mov
adc
dec
xchg
cli
in
test
push
loopne
mov
cmpsb
mull
out
and
pop
lods
aad
sbb
xchg
mov
mov
push
loop
pop
lcall
lods
mov
fsub
sub
loop
xor
push
xor
iret
ds
repnz
adc
jb
mov
insb
adc
pop
dec
xor
adc
adc
aaa
roll
popa
ret
inc
stos
push
adc
mov
imul
dec
out
mov
add
into
cmp
push
and
sbb
out
int
cli
mov
mov
mov
out
int3
mov
sub
rcrb
mov
jo
add
clc
sbb
repnz
jno
daa
shlb
mov
dec
lret
push
out
mov
push
xor
lods
into
pop
push
mov
xorb
xchg
loop
jge
cmp
and
daa
std
mov
sub
loop
and
inc
out
cmp
dec
mov
or
mov
das
sbb
push
test
cmp
mov
dec
jns
in
sub
mov
mov
add
lea
outsb
popf
jo
inc
adc
enter
sbb
in
xor
leave
cmp
insl
out
fcmovnb
out
fildl
ja
jns
les
inc
mov
dec
nop
repz
and
insb
xor
orl
aas
shl
test
add
sbb
mov
nop
sbb
sub
outsb
sarb
inc
fstps
lret
jbe
lcall
jne
popa
xchg
movsl
mov
jb
mov
or
sarl
fdecstp
push
out
xchg
loopne
jnp
pop
add
inc
cmpsl
dec
or
int
in
mov
jno
lock
adc
fld
lods
jg
push
push
sub
push
mov
xor
aas
dec
stc
push
mov
jl
jbe
xchg
test
xor
xor
je
cmpsl
push
fadd
and
mov
int
lahf
stos
inc
dec
andb
pop
inc
repnz
mov
clc
push
rcl
push
loopne
or
cs
mov
sbb
pop
push
inc
mov
xchg
mov
and
push
ret
and
pop
rolb
out
and
push
mov
icebp
iret
jbe
imul
mov
stos
push
inc
sbb
lcall
fsubrl
mov
stos
lods
adc
mov
cmp
std
jl
jo
or
xchg
mov
ja
inc
cmp
jb
xchg
shrb
dec
xchg
adc
adc
or
mov
jne
pop
mov
cli
loop
stos
jnp
in
ficomps
jecxz
jle
das
out
mov
push
cli
jmp
inc
push
xor
mov
mov
fnstenv
mov
or
sbbl
xchg
repnz
test
adc
lods
arpl
add
pop
shll
xor
loop
sahf
push
xor
push
std
rolb
insl
fwait
xor
dec
lcall
repnz
fcmove
inc
push
pop
pop
inc
or
ljmp
dec
je
lock
aad
test
pop
in
push
scas
jle
cmp
pop
sbb
push
test
outsl
hlt
push
loop
sbb
fsub
dec
add
mov
rorl
fiadds
aaa
jnp
and
jo
add
xorb
aaa
or
lea
aaa
mov
nop
add
lds
cmpsl
mov
je
fs
lcall
inc
sub
fisttps
std
jo
push
mov
jbe
leave
rolb
adc
mov
insl
adc
mov
mov
jg
xor
xchg
jns
pusha
jns
adc
dec
jo
sub
insl
es
and
push
mov
push
cld
pop
stos
pop
lcall
push
add
imul
bound
sti
xchg
push
dec
or
add
sub
je
cs
sub
push
bound
sbb
and
repnz
subl
mov
aaa
xor
icebp
ss
mov
fcompl
mov
add
mov
scas
push
or
pop
pop
orb
sub
sub
cmp
mov
push
xor
sub
aas
popf
jl
mov
jg
outsl
notl
mov
xorb
mov
ljmp
movsl
inc
inc
hlt
addr16
ss
shr
jbe
cwtl
jge
push
dec
addr16
out
push
aam
dec
sub
cmp
add
jl
scas
mov
ror
inc
das
push
xchg
popa
mov
jo
lods
daa
mov
dec
xor
bound
mov
out
and
jl
add
cmp
adc
shll
push
jb
and
int3
fimuls
mov
inc
sbb
jp
in
jno
pop
sbb
or
test
dec
in
out
sub
xchg
mov
jnp
xor
out
pushf
insl
es
stos
mov
fs
arpl
mov
ret
inc
cmp
xchg
or
test
arpl
xchg
or
out
adc
push
add
cmp
outsb
adc
fwait
out
sub
pop
clc
jae
insb
add
imul
inc
inc
jecxz
fstpt
dec
dec
in
out
cmp
shrb
in
stos
cld
call
ret
insb
mov
mov
push
push
loope
adc
inc
test
xlat
nop
ror
and
pop
fiadds
nop
movd
outsl
jb
shrb
int
xchg
in
push
ja
test
mov
add
fcoms
jmp
and
jg
icebp
pop
lods
loop
pop
xor
pop
mov
out
sub
ror
sub
cld
dec
dec
mov
inc
xchg
adc
push
inc
das
cli
jns
sbb
fnsave
cmpb
mov
shlb
xchg
mov
pop
mov
xlat
fdivr
out
xchg
jge
adc
fnstcw
xchg
stos
fidivl
xor
hlt
out
lds
stos
lea
push
mov
jo,pt
js
test
popa
adc
pop
cwtl
dec
hlt
xchg
sub
ret
mov
rcl
mov
add
movsl
popa
pop
scas
repnz
jns
mov
or
and
push
fnstcw
je
push
mov
dec
fildll
iret
and
mov
das
mov
and
sbb
fcomps
cmp
repz
inc
xorb
sub
add
pop
sbb
sub
and
or
mov
call
dec
jbe
filds
sub
jbe
fisubrs
or
and
mov
mov
out
inc
call
cwtl
inc
jae
ljmp
call
insb
sbb
lds
sbbb
mov
in
repz
xor
cld
scas
cmp
nop
fstpl
xor
inc
jb
notl
ret
leave
pop
data16
cmpsb
aas
call
cmp
sub
push
cmpb
and
push
add
dec
roll
cmovs
loop
cs
mov
pop
js
insl
jne
jle
mov
inc
mov
xor
lret
pop
ja
push
lret
sbb
mov
mov
imul
setns
ja
repz
pop
sarb
xchg
sub
jl
lods
xchg
push
adc
push
bound
pop
jmp
inc
jb
mov
mov
popf
cmpsl
fcomps
hlt
adc
mov
pop
pusha
mov
mov
adc
test
dec
test
into
xchg
mov
push
xor
xadd
mov
mov
popa
and
pop
jo
es
mov
sahf
testb
mov
cmp
out
call
pop
mov
and
cmp
insl
testb
dec
cs
jmp
aaa
push
sbbl
sti
mov
sbb
pop
cmp
and
jns
out
popf
icebp
adc
cld
jl
mov
inc
into
adc
mov
lea
sbb
iret
pop
sub
lds
mov
cmc
lret
lds
xor
cmp
repz
popf
lods
ja
mov
sub
dec
inc
icebp
dec
pop
stos
mov
pushf
push
sti
and
push
inc
lods
sub
loopne
arpl
push
mov
in
or
push
inc
sbb
test
push
imul
popf
mov
adc
mov
jno
in
push
mov
lea
pop
jno
push
ljmp
movsb
lret
lcall
push
imull
ljmp
addr16
sbb
jb
arpl
mov
popf
xor
mov
mov
mov
inc
mov
js
xchg
lods
add
mov
test
incb
sbb
lea
sbb
gs
iret
sahf
ret
xchg
ds
adcl
outsl
inc
cld
ja
aam
push
jbe
out
add
or
sub
mov
push
sub
enter
adc
out
rorl
int
push
jmp
adc
mov
mov
xchg
push
sub
cmp
push
enter
adc
adc
push
insb
dec
xor
pop
cmpsl
xlat
add
lret
lahf
add
movsb
setl
push
cmovge
mov
pop
dec
inc
dec
loopne
cmpsb
dec
xor
pop
pop
movd
fcoms
xor
add
imul
jno
xchg
popf
push
out
loope
dec
leave
popf
mov
das
ret
cs
out
sub
inc
in
nop
jle
fmull
push
and
jbe
inc
testb
sti
scas
jge
divb
pop
sti
mov
dec
mov
sub
jae
inc
clc
or
jg
dec
pop
es
stc
xchg
aas
mov
push
jae
push
jne
cli
addb
mov
notb
mov
into
push
add
addb
sub
mov
rorb
mov
inc
push
movsl
fs
ret
xor
daa
rep
mov
adc
jae
mov
mov
pop
pop
mov
jp
out
or
gs
jae
shlb
push
les
mov
out
mov
ror
jno
ja
push
mov
mov
sub
push
inc
movsl
dec
divb
mov
icebp
jmp
mov
arpl
mov
and
scas
jnp
in
mov
gs
jb
push
fldl
cmp
outsb
jb
xlat
test
movsl
fmuls
scas
push
orb
push
rcr
cmc
pop
imul
push
lds
je
mov
out
popa
fs
mov
mov
or
test
lea
add
or
mov
out
pushf
mov
jle
aam
sub
enter
lea
pusha
add
push
insl
adc
pop
lahf
mov
mov
mov
je
cmp
inc
je
in
sub
data16
adc
add
mov
xor
ds
and
add
pop
push
mov
in
xor
daa
jno
pusha
inc
lds
fimuls
gs
movsl
xchg
in
pop
xchg
jo
sbb
dec
rcl
pop
lds
or
jb
cmp
out
in
inc
adc
ficoms
push
cli
testb
mov
incl
xlat
mov
pop
lahf
adc
dec
cld
xor
addb
push
ret
arpl
stos
dec
lods
mov
mov
test
jnp
or
mov
xlat
mov
scas
int3
mov
icebp
movsb
mov
jle
sbb
cmc
jb
xchg
addr16
in
push
pop
fstpt
push
fisubrs
and
adc
loopne
xchg
cld
mov
imul
lock
stos
fscale
mov
mov
push
test
jle
bound
pop
adc
cmc
and
dec
out
pushl
repz
sub
pop
dec
push
fnstcw
adc
test
jne
xchg
add
xchg
mov
nop
mov
in
or
or
sub
fs
jae
std
and
rorb
ja
pop
cmp
rolb
scas
cs
cmp
fs
incb
mov
leave
shrb
cltd
roll
cmp
into
xor
lret
ficoml
push
bound
mov
pop
inc
sub
movsb
dec
dec
xchg
pop
add
cmpsb
sub
outsb
push
std
imul
cli
inc
shrl
iret
movsb
sbb
in
mov
ror
lds
mov
push
into
cmpsb
aas
mov
sahf
or
adc
lcall
lret
aam
loope
mov
notb
stos
and
add
pop
cwtl
mov
push
mov
es
mov
scas
mov
or
cwtl
call
ljmp
xchg
xchg
lods
popf
inc
pushf
lahf
sub
mov
movsl
add
sbb
dec
int3
out
cmpsl
mov
add
repnz
mov
pushf
adc
mov
scas
cmp
lods
mov
pop
sarb
das
cmpsb
cltd
mov
out
loope
jmp
mov
xor
roll
mov
test
xlat
cli
add
mov
cmpsl
lret
roll
mov
inc
in
add
enter
adc
sub
cs
addr16
in
dec
out
icebp
pop
cs
mov
mov
in
fisttps
xor
loop
popf
mov
or
sbbb
daa
mov
aam
adc
add
inc
movsb
jbe
jmp
js
mov
pop
push
fidivrl
xchg
negl
xor
cmpsb
inc
cmp
jne
mov
push
fldl
pop
in
fwait
pop
or
xchg
push
lods
mov
push
xor
and
ret
jb
jecxz
in
jmp
add
sub
enter
jae
setg
xor
arpl
adc
mov
fldcw
inc
add
insl
adc
jg
in
push
jge
sbb
xor
xchg
inc
lds
mov
push
into
mov
inc
or
es
int
popa
mov
loopne
cvttps2pi
popa
out
sbb
repz
jne
adc
je
aad
push
push
test
cs
xorb
mov
jmp
mov
gs
jg
or
pop
dec
shrl
mov
in
pop
cld
les
xchg
and
mov
sbb
cwtl
outsb
shll
lahf
lcall
fmull
jne
ss
fsts
mov
into
outsl
popa
fs
jb
ficoms
add
and
out
add
mov
and
push
pop
push
sbb
add
enter
stos
push
add
push
fsubrl
sub
lock
push
add
shrl
jp
popf
addr16
mov
inc
out
mov
ds
xlat
call
fisubrs
pop
ficoms
dec
and
inc
pop
xor
cld
add
lock
pop
repz
xorb
jno
pusha
xchg
mov
xchg
and
scas
xor
pushf
data16
mov
jl
jo
mov
cwtl
pop
stos
mov
ss
in
fildl
fcmovu
pusha
test
sub
es
in
stc
clc
inc
movsb
and
das
push
jnp
loope
fsubs
outsb
vmwrite
mov
xchg
push
in
pusha
xchg
sar
or
xchg
mov
push
rorl
ja
enter
sti
pushf
aad
inc
clc
mov
jp
cmpl
subb
movsl
loop
cmp
movsb
dec
mov
add
mov
es
scas
adc
sarb
and
mov
inc
add
movsb
lret
nop
xchg
movsl
shrl
fsubr
pop
pop
fs
inc
movsl
xchg
push
movsl
addr16
xchg
movsb
fisubl
mov
xor
sahf
sbb
repnz
icebp
in
adc
cmp
dec
xor
mov
scas
mov
popf
popf
mov
addr16
aad
adc
pop
dec
mov
lret
jns
xchg
fisttps
xchg
imul
sbb
jae
sarl
adc
subl
push
mov
or
add
pop
and
add
jae
adc
in
pop
mov
icebp
test
and
push
cmovs
inc
outsb
jns
mov
or
ret
test
cmp
jo
aaa
lods
xorl
sbb
add
mov
jecxz
fdivl
jge
pop
ja
jbe
mov
hlt
sbb
jmp
repz
dec
hlt
lahf
stos
fsts
lcall
cmc
dec
shrb
outsb
cli
xchg
cmc
dec
fsub
push
sahf
inc
stos
jecxz
mov
and
sbb
shl
loopne
pop
jp
aaa
push
repz
aam
fisubl
mov
mov
mov
dec
push
ds
lds
sub
mov
dec
scas
cmp
int3
mov
lock
jge
xor
mov
mov
dec
cmpsl
ljmp
xchg
adc
ret
xor
xchg
repz
testl
pop
push
cmpl
inc
shl
cli
xor
jno
les
outsl
pop
fs
push
jle
sbb
pop
dec
jmp
scas
or
lret
sub
add
adc
das
mov
adc
lahf
cmp
gs
push
pop
lcall
insl
dec
pop
rcrl
sarb
dec
mov
cltd
cld
push
adc
mov
inc
adc
ret
mov
rcl
push
cmp
xor
imul
nop
iret
in
xor
cmpsb
jae
stos
fstpt
pop
cmp
cmp
xchg
inc
sbb
adc
pop
incb
xchg
inc
daa
pop
mov
xor
adc
cmp
mov
in
pop
fldcw
sbb
movsl
or
shlb
adc
mov
mov
pop
ss
shrb
in
mov
dec
rclb
lock
dec
xor
mov
subl
sub
mov
mov
and
cld
lock
mov
fs
sti
dec
cmp
push
adc
xor
jns
or
pusha
xlat
lock
call
int3
scas
xchg
push
mov
jb
xchg
notl
fucomp
inc
pushf
ret
jmp
xor
push
das
mov
clc
xlat
push
aas
pop
mov
mov
ljmp
es
mov
jne,pn
lcall
pop
ror
push
xchg
cmp
sub
jb
negl
and
xchg
clc
into
es
dec
adc
popa
cmp
fbld
push
mov
mov
pusha
aas
sub
sahf
inc
ja
add
fildll
out
jb
mov
iret
cmpsl
ret
sbb
clc
push
dec
out
pop
ret
add
push
and
lds
pop
jno
sbb
dec
pop
mov
adc
mov
fistpl
ret
in
push
xor
jp
pop
xchg
xchg
jge
fwait
and
pop
mov
xchg
pop
adc
mov
cmp
pop
popa
xchg
mov
and
negb
lods
jp
sbb
fdivrl
or
push
rcrl
lea
xchg
pop
push
clc
mov
outsb
leave
dec
dec
icebp
jb
cs
aad
jecxz
orb
stc
insl
dec
sub
fcmovbe
incl
xor
inc
gs
imul
xchg
sahf
cmp
icebp
rolb
mov
mov
pop
xchg
scas
mov
or
jns
les
jp
dec
inc
lcall
clc
dec
push
call
add
aas
cmpsl
push
mov
stc
push
jo
xlat
inc
pop
adcl
sub
and
add
xor
mov
fnop
sub
inc
adc
mov
xor
or
push
jmp
in
jecxz
movsl
jp
lcall
adcb
xor
pop
out
inc
enter
test
fwait
and
mov
rcll
cwtl
add
xchg
push
cwtl
jno
dec
dec
andb
enter
mov
pop
lea
sti
lods
push
push
push
repz
popa
into
adc
pop
pop
mov
jb
sbb
add
jnp
repnz
add
clc
in
adc
in
out
dec
mov
jp
sbb
push
push
xchg
dec
xchg
jbe
insl
sarb
mov
popa
mov
mov
cmp
fwait
mov
stos
jno
inc
adc
fmul
inc
jbe
xchg
xor
dec
shl
daa
xchg
push
lea
mov
stos
push
rorl
mov
pop
stc
loopne
pop
pop
aaa
inc
ss
push
in
and
shl
sub
dec
int
add
ss
sub
int3
xor
test
les
lret
rol
add
cld
leave
cwtl
div
xor
subl
and
enter
repz
and
lahf
inc
fbstp
cmc
ja
mov
mov
sub
sbb
bnd
into
sbb
outsb
rolb
push
aam
mov
es
lock
push
cmpsl
int
push
add
jno
sub
loopne
inc
lret
inc
mov
inc
cmpsl
movsb
mov
es
cmp
xchg
xchg
mov
xor
cmp
cmp
ss
dec
test
adc
mov
inc
jp
xor
and
xchg
filds
add
inc
jp
out
jecxz
fwait
outsb
pusha
inc
movsb
sub
sub
test
jo
mov
and
pop
and
mov
adc
or
adc
out
es
cmp
out
cmp
push
mov
sub
fldcw
dec
aad
fwait
xchg
cmc
dec
sbbl
xchg
cmp
test
mov
test
test
sub
pop
push
ficoml
jnp
xor
sahf
push
and
push
pop
adc
xor
sub
mov
pop
push
gs
gs
jne
movsb
sbb
cli
arpl
setnp
out
and
xlat
out
mov
test
mov
icebp
xlat
mov
hlt
roll
aad
or
movsl
mov
stos
stos
adc
dec
rcrb
push
sub
shlb
das
nop
jbe
sub
imul
aas
xchg
add
dec
bound
pop
mov
jnp
std
xchg
pop
xchg
lcall
lea
daa
cmc
test
sahf
out
imul
lret
fmuls
nop
push
xor
cmp
sar
aas
xchg
cs
outsb
das
fdivrl
or
jle
pop
and
push
lea
jo
sub
movsb
and
push
jp
fcmove
iret
push
pusha
dec
mov
sub
dec
xchg
inc
std
sarl
in
sti
gs
sub
lock
out
sub
push
cmp
push
jecxz
pop
in
lret
and
imul
cmp
jo
pop
sahf
add
xor
push
imul
and
push
mov
out
push
mov
iret
fnstenv
ljmp
fildl
arpl
out
push
cmp
arpl
das
out
inc
sub
push
xchg
push
sub
mov
mov
jo
or
xchg
aam
dec
mov
push
in
adc
push
cmp
xchg
das
inc
sub
push
xchg
jb
scas
sub
mov
out
cmp
mov
sub
add
pushf
data16
and
ljmp
aad
cli
add
std
jl
xchg
ja
fidivrl
ljmp
and
lds
pop
mov
inc
aam
pop
push
std
pop
pop
mov
sbb
sti
mov
out
push
sahf
int
mov
and
push
jl
jmp
mov
cld
dec
cmp
clc
adc
cmp
test
mov
push
xchg
popa
jb
push
out
jmp
xchg
mov
cwtl
xchg
push
adcb
fcompl
adc
ds
incl
pop
aad
mov
push
pop
pop
enter
fdivrs
fidivs
mov
or
popf
int
pop
or
out
xchg
es
mov
iret
dec
std
addps
dec
mov
inc
sbb
mov
popf
bound
mov
mov
xor
leave
mov
loopne
shrb
pop
dec
call
call
mov
inc
mov
into
push
es
scas
mov
out
pop
int3
sub
sbb
mov
jle
and
push
loope
insb
pop
sti
add
or
cmc
decl
jmp
and
xchg
or
in
js
xor
stos
dec
sti
and
sbb
call
inc
jp
stc
or
xchg
ret
sub
je
imul
scas
lahf
sub
dec
xchg
imul
lahf
rep
fwait
adc
xor
repz
lock
addr16
test
cmp
in
add
push
insl
push
sar
adc
fwait
sbb
movsl
aas
mov
pop
push
pop
dec
mov
inc
xchg
pop
std
out
call
adc
xchg
sbb
mov
test
and
sbb
rorb
cmpsb
mov
lods
lods
jae
data16
mov
push
out
jle
int3
push
outsb
sub
inc
in
hlt
popf
sub
jge
mov
in
mov
fsubrs
divl
xor
or
dec
fwait
cwtl
mov
xor
jnp
lock
stos
cmp
cs
mov
addb
mov
adc
dec
and
out
mov
sbb
lods
sbb
lcall
call
xor
lret
cmpsl
jmp
shll
inc
cld
and
push
dec
notl
movsl
xor
in
push
xor
jnp
cmp
xor
cmp
pop
test
sti
clc
js
and
dec
fcompl
ss
insl
mov
lods
mov
sub
xchg
sbb
leave
and
dec
adc
push
cli
int
loop
fstl
add
adc
add
dec
and
inc
dec
jne
outsb
insl
mov
dec
sbb
repnz
out
es
mov
mov
jne
lods
imull
jle
out
sbb
push
insl
test
lret
inc
rcll
aas
xlat
mov
lret
dec
push
orb
mov
incb
inc
xchg
lahf
or
aas
loop
jo
xchg
movsb
push
mov
fdivr
lcall
mov
sub
jmp
sub
clc
es
sarb
lahf
adc
mov
mov
in
mov
pop
stos
out
jno
or
popf
icebp
out
loopne
je
test
ss
mov
aam
test
icebp
inc
jp
loope
pop
xor
mov
lret
push
in
or
or
mov
loop
daa
lods
loop
fnstsw
or
mov
sub
jno
test
sub
test
insb
dec
pop
push
negb
jp
packuswb
add
rorl
sahf
movzwl
sub
lods
lods
loop
inc
mov
pop
cmp
cmp
jge
movsb
lgs
or
andl
dec
adc
enter
pop
mov
mov
xchg
decl
xchg
ljmp
sbb
dec
test
stc
push
sbb
push
dec
arpl
push
iret
xlat
fsubp
sti
cmp
push
xchg
xor
or
cltd
pop
insl
leave
mulb
movsl
movsl
push
enter
sbbl
mulb
mov
call
inc
rcll
push
and
adc
push
popa
dec
mov
pop
cmp
das
aaa
roll
daa
hlt
mov
bound
push
pop
arpl
ja
stc
sub
cmc
rorb
push
aam
lea
mov
iret
cmp
idiv
cmpsb
int3
dec
cli
je
loope
sbb
dec
andl
cmp
xor
popf
dec
jp
into
fdivl
lock
jnp
test
sub
cwtl
sub
faddl
fsts
loope
inc
sahf
fucomip
xor
stos
xorb
sbb
es
fiaddl
or
add
or
iret
outsb
dec
dec
cs
test
push
push
jge
mov
or
inc
or
ret
mov
ss
fldenv
xor
pop
xchg
sbb
mov
enter
push
icebp
xchg
add
subl
lahf
loope
pop
pop
fidivrs
mov
stos
sub
sbb
pusha
cs
sub
sbb
cmc
fcoms
xlat
push
daa
insb
aaa
stc
cwtl
jp
adc
inc
out
jle
push
inc
and
inc
dec
xchg
addl
push
icebp
mov
ret
add
xchg
sub
scas
mov
stos
rcrb
push
xchg
adc
cmpsb
aaa
in
pop
inc
orb
mov
loope
hlt
cmpsb
in
push
xor
add
dec
dec
sbb
stos
call
xchg
sub
das
mov
push
fcomps
dec
popf
jg
sarl
ret
mov
fwait
pop
mov
arpl
leave
pop
cld
mov
pop
int
xchg
int3
xor
push
test
push
sarb
rclb
push
adc
sbb
or
mov
mov
es
fcoml
fdivs
mov
and
mov
dec
negb
int3
lds
push
sub
jmp
cli
sub
dec
js
int
jne
pop
jae
push
mov
dec
pop
clc
push
incl
push
and
fcmovnb
mov
inc
dec
es
adc
cmp
fsts
aaa
adc
sub
aad
pop
fistpll
or
sub
fistpl
into
jns
sub
lds
sub
test
sbb
push
fstpl
scas
ss
stc
aad
adc
rcll
push
inc
test
add
xor
outsb
addr16
cmp
cld
popa
xchg
mov
lret
ja
cmpsl
adc
shlb
sbb
xchg
js
shlb
push
outsl
sub
sbb
mov
push
imul
mov
aad
sub
or
dec
ljmp
fisttpll
jle
cmc
sbb
dec
add
faddl
shll
jle
sbb
es
bound
fs
add
dec
xor
test
xchg
fwait
movsbl
mov
dec
pop
fcomi
test
mov
gs
and
pop
mov
negl
outsl
lock
xchg
or
mov
stos
mov
leave
dec
subb
and
leave
push
out
pop
inc
inc
mov
sbb
mov
xorl
sbb
andl
jae
sbb
insb
jns
dec
pop
add
lahf
icebp
push
inc
repnz
xor
and
ja
ficoms
stc
bound
xchg
in
orb
call
lahf
test
sub
mov
push
addl
push
loopne
aam
jg
ja
dec
sub
and
mov
xchg
add
or
xor
imul
xchg
hlt
adc
dec
inc
mov
pop
jmp
sub
sbb
xor
in
lcall
ret
mov
xorb
pushf
xlat
and
fmul
loopne
jge
fisubrl
aad
pop
jae
dec
mov
xchg
mov
jne
sub
icebp
inc
add
adc
xchg
cmc
imul
xor
ficompl
add
rorl
shl
aaa
push
xchg
dec
aaa
sahf
xchg
out
push
sub
xor
mov
adc
add
pushf
aad
test
add
clc
jmp
and
push
adc
sub
inc
lahf
or
fucomp
lods
repz
cs
js
fldenv
and
es
adc
std
jge
ret
xor
push
out
sbb
mov
pop
out
ds
rcrl
jns
xchg
and
dec
or
sti
jp
stos
insb
inc
xchg
mov
xor
adc
push
je
fidivl
nop
cli
and
fiadds
in
mov
mov
cli
mov
pop
xlat
add
mov
es
pop
mov
xchg
cs
jae
imul
ret
shlb
addr16
adc
sbb
mov
xor
jmp
xor
out
lds
sub
pop
outsl
jl
loope
and
popa
jns
mov
clc
pop
mov
push
shrl
sar
jbe
aam
bound
negb
mov
sbb
aad
xor
adc
or
adc
sub
cmp
jg
mov
mov
sbbb
adc
fimuls
xchg
mov
xchg
frstor
insb
cmp
jbe
fidivrl
adc
inc
xchg
jl
and
push
sub
test
xor
ljmp
pop
mov
mov
inc
add
repnz
mov
xchg
test
add
popf
ret
lds
mov
imul
in
sar
ret
scas
mov
add
insb
dec
pusha
pop
sub
mov
popa
dec
ds
add
dec
incb
jmp
sbb
adc
or
ret
js
je
pop
push
add
ljmp
and
pusha
mov
fcmovu
sti
mov
sub
test
out
pop
sbb
btc
or
jno
stc
or
mov
push
mov
cltd
js
jmp
pop
sbb
mov
imul
ja
fs
jbe
ss
jmp
cwtl
repnz
fwait
test
mov
sub
cmc
mov
add
lahf
mov
dec
mov
adc
mov
and
sub
mov
outsb
push
cli
arpl
sbb
movsb
or
mov
push
inc
mov
cmp
mov
jno
mov
sbb
shl
pop
mov
iret
popf
jle
subl
dec
rorb
dec
lcall
pop
in
aaa
or
mov
and
pop
dec
addr16
insb
xchg
sub
out
and
jbe
push
sbb
ja
pop
push
cmp
les
push
test
cs
xchg
pop
pop
add
add
sub
adc
mov
or
mov
stos
pushf
iret
cltd
mov
push
outsl
mov
in
out
enter
cmpb
dec
insb
ss
std
movsl
imul
push
jns
mov
lods
add
xor
add
mov
sbb
fstp
push
or
aam
xchg
cmpsl
fnstsw
or
sub
shll
push
enter
cmp
in
inc
lds
cmpsl
lea
aaa
dec
jo
adc
push
loopne
imull
popf
cmpsb
leave
out
xchg
and
mov
loopne
xchg
sahf
ds
sub
repz
xor
mov
mov
jnp
push
ja
repz
adc
aas
call
cs
sbb
mov
and
push
sbb
pop
insl
lods
gs
jmp
mov
xor
pop
pop
add
addr16
add
jle
fadds
mov
mov
cltd
mov
jbe
mov
pop
add
pop
cmp
xchg
stos
fistpll
ljmp
fsubrl
enter
push
pushf
jne
imul
mov
test
add
sar
and
adc
inc
mov
aam
mov
push
clc
adc
lods
xor
mov
shlb
xor
push
mov
ficoml
out
mov
adc
sahf
out
mov
adc
push
or
scas
arpl
push
aaa
imul
arpl
mov
dec
mov
hlt
push
lret
imul
pop
clc
sbb
scas
and
in
test
xor
neg
dec
icebp
dec
push
data16
jge
xor
aam
sub
mov
jmp
jns
jg
scas
sbb
sahf
add
fsubrl
mov
cmp
jmp
xor
xchg
ret
test
adc
add
mov
push
sub
sti
jge
add
mov
lea
jne,pt
decb
ljmp
lock
lea
jno
jnp
aas
hlt
jl
test
loopne
out
and
jle
pop
ds
pop
daa
pop
fmulp
mov
cmp
inc
sub
pusha
mov
cmpsl
jbe,pn
inc
popa
xchg
dec
repz
fs
pop
cs
inc
sbb
je
imul
out
repz
jl
sbb
lods
shll
mov
stos
loopne
sub
dec
add
stos
fcmovne
adc
xor
cmp
cmp
inc
mov
pop
jne
inc
dec
mull
dec
inc
icebp
test
adc
xchg
xchg
es
fnstsw
movsb
mov
adc
scas
shll
outsb
adc
cmp
jo
lret
das
fsubrl
xorl
popf
sbb
xchg
push
add
insl
xor
stos
loope
jle
push
dec
mov
sbbb
lcall
testl
les
and
mov
fwait
sub
inc
cmp
adc
imul
cltd
nop
bound
xchg
ret
jb
push
stos
mov
shrb
inc
sub
in
fdivrs
rorb
pushf
lret
es
adc
out
mov
push
dec
test
pop
imull
js
sub
mov
cmp
mov
cmpsb
sbb
sbb
ds
in
cmp
or
outsl
or
or
cltd
rorb
push
addr16
adc
jmp
in
xchg
loopne
std
insb
or
sti
out
ror
bound
mov
push
stos
jle
stc
shll
mov
shlb
mov
xchg
mov
fdivrs
lcall
mov
jno
gs
adc
sbb
cli
add
in
mov
adc
ljmp
shlb
mov
fistpl
jbe
or
scas
getsec
lock
das
sbb
jb
sbb
mov
push
sbb
pop
fdivrp
and
push
mov
pop
insb
jns
mov
and
adc
sahf
std
mov
lret
and
inc
orb
cmp
call
iret
ret
lahf
push
cmp
fstl
imul
sbb
jo
lds
jp
lret
rcrb
arpl
popl
aaa
inc
mov
jnp
mov
xchg
cmc
jne
pop
xor
out
xchg
mov
xor
loope
lahf
fbstp
dec
fistpll
aaa
in
lock
test
fistpl
jle
loop
mov
jmp
jl
cwtl
cmp
mov
mov
mov
mov
cmp
push
mov
cmpsl
aad
rorb
jnp
in
hlt
cwtl
daa
insb
push
repnz
mov
lods
xchg
mov
xlat
lahf
xchg
cmp
addb
das
stos
ss
scas
pop
outsl
sbb
cltd
into
test
push
dec
lods
mov
sahf
inc
fdivs
andb
fwait
mov
sub
mov
repnz
aas
js
adc
xchg
push
notb
mov
jno
data16
or
cmp
pop
mov
frstor
mov
push
sub
mov
es
es
push
in
lock
test
test
xchg
lcall
sbb
mov
movsb
add
jo
fadds
daa
xchg
and
in
test
loop
add
test
mov
jns
mov
sbb
cltd
adc
push
sub
out
and
repnz
lret
push
mov
fstps
push
xchg
add
or
orl
not
xchg
pop
leave
dec
fiaddl
jmp
push
jno
movsl
jp
in
jne
leave
lcall
pop
sub
mov
cld
add
cwtl
mov
jns
enter
fdivl
lret
mov
xchg
fsubr
in
roll
addr16
mulb
xor
push
add
lods
or
sub
test
dec
pop
xchg
hlt
or
mov
pop
mov
into
cwtl
mov
scas
adc
xor
das
sbbl
xor
pop
scas
xor
pop
mov
dec
adc
sub
mov
cmp
jo
sahf
fiadds
stos
shrl
lcall
or
sti
imul
inc
lahf
push
add
or
cmpsb
shr
jbe
pop
pop
sub
cmpsb
xchg
pop
mov
cmpsb
stos
nop
ret
dec
jnp
iret
cmpsl
and
stos
out
ret
mov
mov
xor
sub
ja
push
bound
inc
lret
xor
sub
in
xchg
add
add
cli
fnsave
inc
insb
push
imul
pop
cmpl
pop
andl
sahf
bound
dec
cmp
xor
cs
movsb
jmp
xchg
incl
bound
cli
jge
scas
mov
fcmovne
out
test
fstpl
inc
out
mov
lods
xchg
js
icebp
gs
jmp
sbb
mov
fwait
xor
or
jnp
out
inc
xor
loope
sub
mov
fidivrs
cmp
loope
pop
js
mov
lea
imul
jnp
sti
addb
popf
sub
push
mov
push
and
addr16
imul
push
movsl
sahf
inc
out
stc
inc
and
popf
loopne
loopne
xchg
sbb
xor
dec
jns
jmp
je
add
or
push
jo
inc
scas
push
aas
imul
mov
mov
jne
sahf
gs
mov
ficoml
fnstenv
xor
pop
push
mov
pop
or
sbb
ljmp
xor
mov
push
out
mov
sub
ds
xchg
test
mov
mov
lahf
sbb
fnsetpm(287
scas
pop
out
movsb
leave
dec
jp
push
mov
and
pop
push
jae
cmp
cmp
lods
lret
test
or
test
aad
or
adc
incb
xor
adc
scas
xchg
jl
lea
adc
movl
mov
dec
mov
in
adc
cmp
call
dec
push
in
repz
push
adc
push
test
dec
scas
pop
outsl
js
jecxz
sbb
in
pushl
pop
push
or
aas
xchg
call
pop
mov
and
mov
testl
adc
mov
fs
cmp
shrl
test
and
lds
push
lods
idiv
repnz
pop
shrl
xor
sub
jno
pushl
or
xorb
enter
mov
pop
enter
cmp
or
out
mov
decl
test
or
sub
push
iret
lods
xchg
adc
test
popa
dec
cmc
sub
daa
and
repnz
mov
popa
int3
adc
andb
js
xor
ret
cs
call
inc
dec
push
je
sbb
jns
loopne
aam
dec
std
push
ja
add
sahf
adc
ds
ret
mov
inc
std
dec
jne
push
pop
pop
scas
cwtl
pop
hlt
push
push
inc
jno
in
pushf
pop
dec
dec
outsl
insl
or
jmp
lahf
and
xchg
rcrl
dec
out
sub
repnz
cltd
aaa
in
loop
rcrb
lods
fcompl
xor
mov
inc
xchg
jns
jbe
in
cmp
fld
out
iret
frstor
outsl
scas
fsub
out
in
xorl
adc
hlt
cld
sub
pop
adc
sbb
fdivrs
pop
sub
and
jae
rep
roll
data16
cli
stc
push
cmpsl
sbb
mov
cmp
test
push
popa
or
push
addr16
pop
pop
mov
pop
sub
fildll
dec
out
xchg
xchg
mov
in
loopne
mov
inc
xor
pop
ss
es
cwtl
sub
enter
cmp
xchg
popa
adc
dec
mov
inc
add
jge
in
iret
or
jp
pop
jb
cmpsb
add
cmp
or
or
push
ds
ljmp
sti
or
shlb
cmpsl
sarb
sbb
sti
sub
sbb
adc
icebp
xor
icebp
je
inc
lock
ficompl
pop
mov
out
out
test
xlat
imul
or
cmp
add
lds
rcr
subb
leave
js
lds
int
ret
decl
lods
and
xchg
xor
mov
je
and
enter
leave
xor
xchg
pop
push
xchg
mov
lret
repnz
and
gs
rcll
cmp
xor
mov
enter
fistps
and
cmp
movsl
outsb
test
mov
mov
xchg
xor
mov
je
dec
inc
push
mov
push
bound
and
mov
pop
or
mov
and
jno
or
and
pop
out
or
lods
test
xor
lea
adc
jbe
fstl
inc
out
mov
repz
jbe
sbb
push
mov
int
bound
inc
js
bound
jg
and
pop
sbb
and
sbbb
sbb
push
cs
movsl
add
mov
push
mov
fbld
add
push
xchg
inc
dec
les
jp
fidivs
into
pop
jecxz
add
dec
arpl
and
shlb
sbb
mov
mov
loope
cmpsl
jno
jb
cmp
cli
xchg
sarl
popf
inc
or
rcll
sbb
inc
mov
mov
mov
shl
push
and
ljmp
dec
sahf
and
mov
jl
fldcw
addr16
mov
xor
xchg
loop
lret
int
and
sub
movsb
pop
imul
adc
push
mov
jns
rcrl
outsl
test
shll
mov
outsb
icebp
mov
jno
or
in
pop
xchg
lret
data16
push
sub
loopne
push
pop
jnp
fstpt
into
lret
adc
push
push
sbb
fmull
and
inc
or
or
sub
into
or
or
xor
dec
orl
scas
mov
idivl
gs
lock
and
loope
imul
lret
mov
mov
pop
xchg
imul
insb
sub
scas
mov
iret
sbb
pop
jl
outsb
mov
sbb
data16
notb
aam
jnp
inc
xchg
and
cmp
jne
and
push
inc
xchg
notl
push
dec
xor
outsb
jecxz
push
scas
and
jg
pop
mov
jae
scas
push
repnz
inc
mov
fcompl
cmp
pushf
fcoms
inc
push
cmp
pop
sub
dec
mov
push
movsb
out
dec
mov
stc
ret
xor
mov
mov
cmp
jp
stc
xor
lods
push
je
add
push
xor
adc
aaa
mov
mov
and
adc
mov
in
cmpsb
adc
cli
movl
jo
in
xor
fldl
aaa
pop
cld
or
mov
push
outsl
fcmovbe
jne
call
test
mov
and
jge
dec
fstl
xchg
scas
fidivs
lcall
das
mov
and
inc
daa
mov
iret
cmp
imul
mov
outsl
push
mov
ljmp
and
or
lea
stos
push
xor
push
into
dec
xor
pop
jecxz
cmpsl
arpl
push
out
mov
movsl
jne
mov
sbbb
push
xor
outsl
and
mov
push
and
imul
adc
stos
inc
pop
sbb
and
mov
sahf
loop
inc
push
stos
mov
mov
mov
push
cld
and
in
insl
lret
xor
fcomi
das
push
flds
cwtl
verr
iret
sbb
xchg
pop
gs
or
push
loope
ja
ja
test
loop
mov
imul
gs
pop
ret
jnp
pop
jns
mov
ja
push
xchg
mov
adc
ucomiss
loop
outsb
push
jne
mov
and
add
mov
mov
scas
xchg
ss
test
jp
shlb
cmc
pop
mov
lds
fwait
or
dec
and
xchg
mov
push
push
fisubrl
and
les
subl
push
shrl
stos
dec
jle
fsub
call
mov
push
jb
jg
stos
into
cmc
adc
dec
rorl
fimuls
jl,pt
xchg
sub
fnsave
vhaddpd
and
repz
pop
pop
imul
clc
add
inc
adc
mov
clc
fwait
hlt
testb
es
add
lods
lds
mov
push
cmp
dec
adc
imul
xchg
sbb
jno
sahf
call
jge
daa
xor
filds
pop
lcall
int
hlt
push
movsb
pop
cli
inc
inc
fcomip
sbb
push
ret
test
in
mov
out
push
lea
mov
add
mov
jecxz
sbb
les
dec
out
jo
stc
push
mov
gs
dec
leave
imul
in
sub
xor
cmp
aam
xchg
push
cmp
push
and
lds
aas
addb
mov
mov
call
fldt
sbb
enter
das
out
sahf
pop
xor
xchg
notb
mov
adc
and
mov
push
call
mov
fsubrl
inc
fnstcw
je
loop
mov
dec
and
pop
mov
or
xchg
ficoms
sbb
sbb
pusha
and
pop
fldl
adc
push
and
ret
imul
xor
xchg
mov
dec
cmp
mov
arpl
add
das
jmp
jmp
cmp
pop
hlt
jbe
lcall
repz
dec
movntq
ljmp
push
cmp
jg
push
push
repz
fidivs
jno
cmc
lock
cld
fst
sub
pop
or
ret
push
pop
dec
inc
mov
out
pushf
loop
pop
pop
mov
mov
mov
pavgw
testb
sti
jae
outsb
aam
icebp
pop
mov
dec
or
xchg
int
push
jns
mov
inc
adc
jmp
xor
add
dec
or
push
ficoms
ljmp
mov
into
fstps
pop
lock
mov
shrb
lea
push
xor
adc
dec
stos
or
mov
lods
adc
pop
adc
fwait
repnz
push
and
out
lea
add
or
sbb
mov
sbb
mov
mov
stos
repnz
jae
movsl
xor
or
movsl
push
cld
push
frstor
xchg
push
outsl
lret
add
mov
aam
notb
push
jo
sarl
shll
in
mov
or
ret
inc
bound
jmp
insl
cmp
and
jmp
stos
jge
sti
rorl
arpl
ret
rcll
xorl
xchg
call
loopne
mov
dec
cli
or
out
ret
push
enter
sub
test
jp
push
lret
inc
mov
add
sub
mov
mov
sbb
es
push
test
and
aam
fidivl
jb
mov
test
fnsave
sarb
pushf
hlt
mov
ss
in
lcall
sub
ret
or
test
shlb
push
fiadds
test
push
jecxz
cltd
rcrl
and
vcvtss2si
adc
or
fsubs
or
shrb
push
out
dec
inc
xor
pop
cmp
and
push
xchg
repz
push
out
and
jge
xchg
xchg
lret
xchg
jb
jmp
cmp
sbb
and
cwtl
add
xchg
jle
stos
mov
in
inc
lds
push
outsb
js
in
jl
mov
loopne
in
les
ds
adc
mov
lea
pop
sub
jg
sti
jl
jmp
adc
jo
push
lods
idiv
mov
mov
das
xor
sahf
lcall
scas
addr16
mov
lods
or
ficoms
js
lahf
push
and
adc
push
push
stos
add
adc
xor
add
mov
cltd
repnz
out
cmp
xchg
fisttpl
add
aas
inc
push
xchg
cmp
pop
sti
adc
ja
rorb
data16
mov
stc
pop
out
xchg
xor
cmpsb
sub
mov
xchg
int
and
add
adc
mov
xchg
cmp
scas
cmpsl
mov
sub
in
sbb
sub
xor
stos
aam
popf
repnz
je
mov
mov
sub
adc
pop
inc
gs
sahf
sub
pop
push
test
outsl
pusha
testb
mov
fstp
jne
imul
pop
cmc
movsw
sbb
mov
leave
dec
popf
clc
es
arpl
mov
out
cmp
loope
out
mov
cmpsb
aam
lods
add
mov
jae
mov
mov
popa
xor
cmc
divl
clc
sbb
jno
mov
jne
jnp
mov
and
xor
mov
add
insl
in
lods
and
stos
aaa
dec
sbb
jp
aas
loop
xchg
fstpl
fdivrp
int
cmp
gs
mov
sbb
inc
sub
adc
pusha
adc
lock
cmp
rcrb
pop
fisubs
xor
mov
or
aad
mov
xchg
les
enter
push
fneni(8087
popa
fcomi
or
aam
pop
mov
lock
jns
mov
in
add
or
fbstp
test
sarb
dec
mov
les
clc
dec
arpl
aas
aas
pop
or
rcrb
inc
rcll
shrb
popf
clc
int
cmp
add
arpl
and
popf
jb
jmp
std
push
andb
jbe
inc
aad
cs
sti
jmp
clc
or
mov
push
int3
dec
push
es
out
insl
bound
mov
sahf
cmpsl
test
lock
loop
addr16
scas
push
jecxz
adc
push
xchg
xchg
test
das
call
dec
sbb
mov
repz
pop
ret
in
mov
shl
pop
movsb
cli
cli
sbb
mov
dec
popa
push
dec
popa
addr16
lds
js
or
push
dec
xor
xchg
jp
aam
jo
mov
pop
loope
xor
popf
mov
std
ficoml
lahf
popa
jle
inc
mov
rorl
repnz
nop
mov
push
call
add
push
mov
out
jae
xor
repnz
and
push
or
jmp
stos
and
mov
scas
rcrl
pop
mov
xor
mov
sbb
fsubrs
fnstsw
xchg
pop
xchg
cli
mov
add
das
mov
xchg
in
hlt
mov
mov
imull
push
je
dec
aaa
mov
or
inc
cs
fsubrs
pop
roll
jg
and
add
fdivrs
or
xor
in
inc
sub
aaa
dec
dec
shl
sub
jl
inc
subl
int3
xchg
in
out
mov
adc
clc
ret
loope
pop
into
in
lea
clc
popa
mov
fstp
andl
rclb
out
fs
pop
negl
out
push
ja
imul
outsb
xchg
pushf
and
mov
pop
and
fadd
sbb
or
push
iret
scas
imul
and
sbb
imul
add
dec
push
mov
call
scas
lcall
xor
lds
dec
insl
push
xchg
es
fmull
jb
or
xchg
jo
pop
arpl
add
test
sub
sbb
mov
sub
fs
inc
push
loopne
mov
mov
and
xchg
fdivrl
bound
push
repz
xchg
inc
popf
mov
repnz
push
jbe
faddl
jb
inc
or
or
push
mov
inc
sub
push
jns
xor
pop
lods
cmp
inc
lret
push
xchg
repz
subl
andb
mov
add
jne
xor
inc
cli
outsl
fldl
loop
xor
push
jne
jae
mov
leave
test
fnstenv
adcb
jns
in
call
jno
test
mov
mov
jg
icebp
dec
jne
xor
imul
and
pop
ljmp
icebp
jbe
jmp
sub
cli
stc
lds
aad
mov
pop
notl
sbb
lret
pop
cmp
test
pop
mov
test
or
fwait
loop
outsb
je
jmp
sbb
mov
rcrb
mov
or
lea
aas
sbb
xor
push
scas
or
xchg
push
out
lahf
ret
or
rcrl
mov
mov
in
xchg
out
push
shrb
xchg
xorl
dec
stc
push
mov
inc
mov
xlat
adc
cli
mov
arpl
xchg
daa
sbb
jle
sbb
fxch
in
sub
dec
int3
loopne
sarl
add
xor
dec
daa
ja
out
mov
jle
cmc
push
lea
dec
out
mov
jp
lret
mov
mov
mul
adc
popf
arpl
push
mov
pushl
add
push
mov
jo
stos
int3
add
xchg
xor
stos
adc
xchg
pop
pop
loop
shll
out
pushf
xchg
test
mov
lods
push
outsb
add
inc
jg
or
cmpl
adc
sbb
jecxz
aad
sub
mov
cmp
dec
data16
and
leave
cmp
in
rcr
xor
adc
sti
add
lahf
testb
and
mov
pop
js
push
mov
jae
push
inc
or
testl
jae
adcb
addl
xchg
jno
les
cmp
mov
popf
ss
rol
mov
stc
out
lods
xchg
xchg
dec
shrl
xlat
push
jecxz
add
dec
pushf
sahf
add
mov
and
adc
add
arpl
mov
sub
inc
dec
jp
adc
fisttpl
ss
aaa
inc
lcall
jo
add
add
xor
test
mov
ja
std
mov
pop
push
xchg
mov
xchg
hlt
mov
mov
or
bound
inc
xchg
jl
pop
addr16
xor
aaa
ljmp
dec
js
push
dec
ljmp
dec
nop
jae
sysret
push
fistl
sub
repnz
in
jmp
push
clc
cmp
mov
ljmp
xchg
cmpsb
les
xorl
lock
outsb
mov
daa
jle
add
pop
jecxz
xchg
out
arpl
push
mov
sarl
add
mov
sbb
fldl
add
incb
std
les
fildl
pop
and
loopne
shl
or
push
data16
cld
into
cmpsl
add
stc
mov
cmpsl
xor
pop
shrb
outsb
lcall
mov
loope
sahf
popa
mov
icebp
cmpb
add
and
adc
stos
fdivr
in
xchg
xchg
fidivrs
push
jnp
rcr
jge
pop
cmp
cmp
sahf
mov
add
lret
lcall
push
lcall
stos
pop
pop
pop
icebp
insl
mov
dec
sti
xchg
push
rcll
xor
stos
clc
push
or
jmp
out
inc
inc
insl
lahf
dec
mov
cs
pop
xchg
arpl
mov
jp
xchg
stc
sbb
mov
in
in
rcll
loope
adc
xchg
test
ss
cmc
std
jle
sub
jmp
std
incb
push
push
test
pop
jmp
fs
mov
test
push
dec
mov
mov
ror
das
insl
nop
rcrb
xor
call
imul
dec
pop
imul
dec
das
jle
ret
lret
cmp
out
sub
fcmovne
aaa
push
push
lds
sub
jb
pcmpeqw
add
mov
sub
popa
es
inc
insl
popf
loopne
ret
add
xchg
push
pop
enter
icebp
push
lret
inc
aam
cmpsb
ljmp
add
outsl
mov
add
movsl
bound
inc
adc
sbb
lock
je
lret
shlb
iret
inc
ret
into
incl
sbb
hlt
or
ret
mov
in
adc
clc
bound
imul
fwait
shrb
dec
mov
fisubrl
cmp
cmpsb
push
dec
fsubrs
mov
jge
aad
inc
add
xor
aas
fnstsw
data16
jle
adc
mulb
bound
lea
or
xor
xchg
stos
or
inc
out
adc
sub
jg
rol
aas
xor
fimuls
push
std
sub
scas
fadd
dec
mov
inc
out
mov
mov
ljmp
pop
in
outsl
aaa
pop
push
iret
jmp
mov
dec
ret
sbb
jp
dec
dec
jmp
pop
rorl
xchg
lcall
mov
and
fwait
lock
nop
and
ret
push
pop
imul
jno
arpl
mov
add
mov
jcxz
mov
mov
xor
mov
xchg
jbe
test
inc
call
cwtl
dec
mov
xchg
inc
movsl
mov
push
mov
add
pusha
or
push
mov
dec
mov
push
lahf
mov
out
cmp
mov
pop
cmp
mov
fstpl
cmp
leave
cmpsl
jno
xchg
call
mov
add
xchg
insb
lahf
mov
aad
mov
sti
sbb
std
push
aaa
lods
out
mov
sahf
insl
jl
mov
add
in
sbb
dec
scas
ror
push
sbb
xchg
mov
mov
dec
lock
xor
mov
divb
les
movsb
adc
jne
daa
out
gs
sti
pushf
fcompp
mov
dec
ret
inc
sti
and
mov
adc
and
dec
testb
adc
mov
mov
loope
dec
subb
sbb
ds
inc
mov
aas
repz
push
lds
call
in
jl
dec
dec
push
xor
pusha
rcll
fdivs
mov
sbb
ja
sub
imulb
imul
inc
ss
jl
and
movsb
bound
push
and
addr16
test
pop
inc
jg
subb
pop
test
test
pusha
fnstenv
test
das
idiv
add
icebp
jno
mov
es
mov
xor
jle
fs
clc
int3
les
mov
inc
mov
orb
sbbl
fcmovne
jp
push
loop
movsb
es
repz
xchg
add
lock
add
cltd
mov
sub
sti
out
lahf
je
pop
cwtl
shll
jae
test
aaa
in
push
and
sub
int3
pusha
adcb
mov
mov
jae
sahf
inc
imull
les
adc
pop
xchg
repnz
fldt
into
sti
in
out
push
cmc
repnz
idivb
or
arpl
test
negb
ret
std
xor
mov
pop
adc
sub
add
iret
test
and
out
xchg
mov
data16
std
movsl
push
jecxz
aas
or
sbb
pop
and
xchg
lret
lcall
or
jg
loope
mov
shrb
aad
adc
add
call
xlat
and
xor
mov
into
jmp
xchg
lcall
fmuls
les
adc
lods
mov
or
mul
shlb
aaa
data16
sbb
dec
in
mov
lcall
cmp
mov
jmp
inc
mov
fucomip
js
sbb
jg
fstpt
or
ss
pop
sub
jne
dec
add
imul
mov
pop
xchg
in
pop
pop
xchg
mov
stos
popf
or
enter
shlb
lret
mov
jns
cmp
test
mov
push
cmp
or
mov
mov
insl
out
clc
lea
sbb
mov
rcr
sbbb
mov
jle
sbb
cltd
adc
ja
popf
aam
notb
pop
mov
or
dec
std
std
bound
mov
jge
inc
or
cmp
out
js
sub
js
ret
push
xchg
lret
popa
push
push
hlt
shll
lods
mov
sub
rcrb
inc
push
add
xchg
or
xchg
mov
inc
sub
jbe
ljmp
push
or
scas
mov
sbb
xlat
icebp
scas
adc
js
in
push
lcall
je
pop
cltd
hlt
lds
scas
push
push
lods
ljmp
pop
xor
in
mov
adc
shr
mov
jp
pop
int
pop
mov
mov
mov
ja
pop
shll
notl
dec
cmpsl
or
jne,pt
out
test
mov
jo
cmp
adc
jp
xorb
pop
fadd
out
sbb
and
jp
sub
mov
pusha
sahf
loopne,pn
push
push
sbb
scas
adc
xchg
xlat
dec
pop
dec
inc
je
ja
mov
lods
icebp
pushf
xor
in
add
pop
dec
loope
icebp
pop
cmpsb
dec
cltd
insb
inc
popa
jecxz
push
adc
idivl
mov
lcall
nop
test
shlb
repz
jp
out
cmpl
pop
fdivs
jne
adc
or
push
scas
jns
mov
clc
icebp
mov
test
lret
lds
mov
dec
inc
adc
jp
push
inc
push
xlat
test
sbb
in
sub
fcompl
sub
push
xor
in
mov
aam
pusha
lock
shrl
or
stos
and
shrl
imul
dec
insb
jmp
pop
mov
lods
int
sub
test
cmpsl
shll
sti
push
sub
fwait
fs
cmpsl
pop
push
and
iret
popa
cmpsb
dec
mov
adc
sub
inc
imul
inc
test
mov
mov
movsb
pop
xchg
loope
or
sub
xchg
push
outsl
scas
mov
in
fcmovbe
mov
test
cmpsl
sub
fidivrl
inc
sub
mov
mov
in
push
cs
or
mov
in
mov
cli
sahf
in
push
push
repz
mov
add
jo
adc
push
sbb
sbb
les
js
test
cwtl
cmp
lods
push
into
and
mov
jno
sub
std
xchg
pusha
sub
fcoms
enter
popf
adc
mov
xchg
lods
pusha
adc
cltd
jb
jae
das
and
mov
sbbl
sub
pop
leave
nop
outsl
cmp
push
int
ss
cli
jo
movntps
sarl
inc
pop
sub
dec
inc
jcxz
ljmp
std
stc
jl
repz
adcb
das
fstp
cmp
aam
add
les
mov
scas
cld
add
cmp
cmp
sarb
loopne
sbb
mov
jle
ljmp
pop
cmp
test
aaa
rcl
push
popf
scas
xor
adc
imul
and
int
sti
mov
jg
jno
cmp
pop
lods
jg
add
mov
xor
sbb
adc
mov
fs
dec
push
pop
shll
pop
jne
clc
gs
adc
popf
or
cld
push
mov
cmp
sarb
icebp
add
xor
shll
cli
dec
xchg
mov
pop
pop
mov
pop
push
push
adc
pop
les
mov
insb
je
add
jle
jmp
mov
fmuls
dec
dec
mov
fsubr
cmp
fimuls
dec
fisttpl
aam
sbb
inc
push
adc
popf
sub
rolb
rol
mov
dec
inc
sub
add
pop
pushf
xor
pusha
cs
xor
arpl
pop
mov
dec
notl
dec
fsubrp
sbb
aam
inc
das
stos
in
sarl
mov
gs
aam
push
inc
cs
fsubs
bound
into
mov
sub
inc
xorb
jge
mov
and
sub
testb
pop
mov
and
dec
adc
clc
sahf
adc
enter
icebp
mov
mov
adc
aas
jae
and
out
lods
xchg
sub
and
insb
stc
lret
loop
jle
push
call
inc
ds
add
pop
pusha
adc
pop
jno
adc
and
fnsave
cmp
idivl
mov
jns
dec
pop
sbb
mov
stos
in
push
faddl
rclb
mov
fldenv
hlt
or
and
xor
in
pop
dec
ret
pop
pop
dec
and
mov
cwtl
mov
adc
mov
sahf
fcom
into
pop
or
jne
fldl
mov
push
nop
pop
jl
fildl
lock
cmpsb
xlat
arpl
xchg
and
adc
pop
aaa
aaa
pop
pusha
or
stc
inc
frstor
and
bound
inc
rcrl
xor
les
mov
out
out
and
out
rcll
pop
push
jne
dec
ljmp
lcall
xor
mov
fldenv
iret
or
ds
jmp
aaa
mov
and
pop
testb
out
push
xchg
divb
or
jo
jae
iret
out
or
sub
inc
inc
lea
ss
or
cmc
shl
mov
jmp
add
aam
jp
fldcw
pxor
cmpsl
jle
inc
outsl
dec
pop
inc
fistpll
es
push
dec
lea
fdivrp
fdiv
add
movsl
mov
nop
mov
jnp
out
or
stc
ljmp
and
adc
pushf
xor
and
test
lods
shlb
jbe
cmp
fnstsw
test
stc
cli
arpl
dec
fwait
int3
add
xlat
adc
pusha
fs
fsubl
mov
test
jno
jne
aam
pusha
xchg
movsl
pop
mov
inc
push
aam
lret
ljmp
jge
xchg
ja
push
mov
pop
repnz
in
in
jae
add
lods
xchg
push
fisubl
xchg
mov
push
mov
mov
push
pop
push
sub
adc
rcr
repz
xlat
hlt
xchg
push
or
and
sbb
mov
pand
pop
pop
xor
adc
sarl
and
fbstp
ret
mov
lret
mov
les
scas
std
or
inc
addr16
dec
or
jecxz
mov
sbb
arpl
push
mov
and
and
out
test
push
dec
cli
cmp
jmp
xor
pop
test
inc
call
ret
push
inc
xchg
inc
fwait
out
cs
pop
jns
jbe
fsubr
mov
add
mov
adc
adc
mov
add
xrelease
stc
popa
xchg
xchg
adc
sbb
pushl
jbe
mov
xor
out
or
arpl
test
and
adcb
mov
xchg
jl
mov
cmpsb
xor
push
pop
sbb
repz
cld
mov
in
dec
cmp
dec
adc
mov
scas
pushf
jge
pusha
mov
int
loop
xor
jnp
pop
push
xchg
in
test
out
lds
or
inc
mov
mov
dec
mov
int3
shll
or
arpl
jl
sahf
dec
cwtl
dec
loopne
in
bound
adc
ljmp
sarb
mov
daa
in
and
sahf
arpl
push
loopne
lods
jmp
xlat
add
push
insb
mov
mov
pop
jb
mov
jg
push
in
inc
push
xor
mov
ror
das
mov
inc
mov
xchg
in
push
cmp
ret
jo
mov
push
cmp
in
call
shll
and
dec
aam
nop
stc
ja
add
decb
push
movsb
mov
xlat
pop
les
or
jnp
or
hlt
jmp
jns
in
and
lods
icebp
push
ds
pop
sub
pop
push
insb
arpl
adc
loope
inc
mov
cli
mov
cmpsb
das
mov
aam
mov
cltd
lahf
imul
mov
and
xchg
pushf
mov
dec
jne
pop
push
push
das
xchg
aam
dec
adc
dec
leave
and
movsl
lret
ror
imull
xor
sub
stos
and
cli
pop
dec
mov
popf
int
xchg
add
inc
sbb
mov
add
test
and
mov
outsl
lea
iret
loope
addr16
cmp
cmp
int3
rcrl
xchg
rep
and
fistps
sahf
push
add
insl
lock
xchg
mov
ret
add
sbb
popf
rclb
mov
inc
out
into
push
dec
sub
pop
ja
pop
hlt
mov
out
cmpsb
outsl
pop
dec
add
pop
cmp
sub
inc
jmp
cmpsb
cli
movsb
ds
dec
sbb
mov
cmp
xchg
jns
fists
inc
mov
in
sti
and
add
cmp
gs
sub
adc
sarb
lcall
dec
inc
mov
clc
push
cmp
stos
sarb
ss
outsb
or
js
pop
cltd
aad
lea
adc
push
xchg
aad
out
xchg
js
jge
cmc
push
loop
aad
mov
scas
fdivs
in
jmp
adc
xor
negl
outsl
dec
and
or
dec
movsb
lahf
into
xchg
mov
mov
sbb
push
lock
push
sbb
mov
fdivr
jbe,pt
lds
mov
jl
ret
loope
sub
outsl
adc
inc
push
push
popf
in
inc
or
mov
mov
jmp
jecxz
pop
and
in
pop
jne
add
adc
xchg
aaa
inc
hlt
pop
mov
into
sahf
mov
inc
outsb
sbbb
sbb
imul
cld
shlb
xor
xchg
mov
das
clc
lea
aas
mov
jge
aam
and
es
sbb
and
pop
and
xchg
xchg
or
mov
sub
lods
push
pop
nop
xchg
xrelease
jmp
out
out
pop
add
scas
cld
fbld
xchg
or
xor
mov
push
dec
xorl
sbb
mov
cmp
xchg
dec
and
sbb
jnp
add
xor
cmpsl
mov
test
nop
lds
lods
cmp
stos
neg
mov
sub
test
sbb
push
in
mov
or
cmc
int
jne
ret
jb
jmp
mov
testb
dec
dec
sbb
aaa
movsb
mov
icebp
in
ds
lods
jle
fistl
test
pop
je
xchg
jmp
push
int3
xchg
mov
out
or
xchg
outsl
bound
cmp
mov
sbb
cmp
lret
mov
sub
popa
in
ja,pt
in
pop
push
dec
push
jbe
or
mov
addr16
test
loopne
pop
cmpsb
enter
out
scas
jno
shll
sahf
xor
mov
jl
or
xchg
push
dec
mov
in
mov
aad
mov
jnp
leave
mov
cs
pop
dec
loopne
mov
popf
aam
idivl
outsb
nop
mov
adc
push
pop
lods
ja
inc
ret
xchg
add
lock
pop
ret
sub
or
stos
cmp
imulb
or
add
fadds
mov
and
cmc
stos
enter
cli
mov
xchg
pusha
sbb
lar
mov
icebp
lods
cmpb
dec
enter
bound
arpl
adc
ljmp
mov
xor
cmp
ds
jno
fwait
push
mull
test
add
adc
iret
pop
sti
inc
fstpt
add
lock
inc
std
popa
inc
lret
rcll
mov
std
loopne
dec
scas
or
push
and
adc
lahf
outsb
incb
xchg
and
rcrl
into
add
sub
lea
inc
mov
fsubrl
lcall
mov
out
mov
sbb
mov
leave
ja
sti
mulb
jge
dec
andl
mov
ret
and
lods
xchg
cmp
bnd
loope
sbb
ret
or
std
push
adc
fcompl
mov
nop
fadds
sbb
xchg
cmp
call
adc
iret
sahf
fsubl
notl
adc
jmp
shll
outsb
dec
inc
scas
jbe
outsb
out
mov
mov
data16
mov
ret
pop
add
and
aaa
int3
hlt
test
adc
scas
adc
add
pop
or
adc
sub
insb
inc
dec
test
push
dec
xchg
mov
sub
or
pop
test
test
int3
push
in
jge
int3
movsl
rcrl
imul
xchg
scas
stc
cmp
and
mov
xor
inc
inc
xchg
pop
dec
xchg
hlt
imul
cmpsl
aas
dec
mov
dec
lcall
xchg
pop
pop
mov
mov
pusha
pusha
xrelease
pop
data16
cmp
sbb
lret
cmp
push
inc
mov
hlt
xor
loope
stc
mov
ret
aaa
rcll
in
pop
test
lods
push
adc
pushf
or
fidivrs
orl
cmpsl
xchg
aam
jne
xchg
xlat
push
push
incb
cmp
mov
inc
sub
stos
test
or
aas
inc
pop
pop
lcall
push
aad
lret
leave
push
mov
dec
push
and
sub
mov
pop
imul
push
xchg
scas
in
mov
sahf
jns
or
xchg
sti
jmp
js
jno
adc
push
mov
movsb
movsb
cmp
pop
sub
or
icebp
popa
xchg
lcallw
mov
sbbl
xchg
pop
aad
or
mov
idivl
or
aas
jg
loopne
outsl
and
or
in
pop
ljmp
out
mov
sbb
nop
jb
mov
xor
cli
sbbl
lahf
leave
sub
jbe
cmp
insl
adc
push
pop
xchg
mov
test
jmp
push
jmp
inc
rcl
popa
roll
out
inc
dec
popf
push
xor
scas
ficomps
mov
sub
mov
pop
cmp
lods
sarl
stos
sbb
lcall
lds
and
mov
movsl
jmp
popf
mov
or
sub
xor
es
or
or
jmp
adc
and
xlat
scas
into
pop
pop
inc
sbbl
mov
mov
stc
enter
call
stc
add
jae
jge
dec
jmp
lock
mov
or
or
mov
mov
jnp
lret
cmpsb
xchg
push
je
sbb
call
pop
ja
xchg
mov
cli
adc
sbb
nop
or
pushf
sti
mov
cmp
jge
mov
sub
je
popa
push
nop
and
imul
push
push
dec
lock
sti
lcall
repz
test
iret
outsb
loop
pop
mov
in
xlat
cli
cmp
hlt
jl
mov
repnz
adc
mov
sub
xor
pusha
mov
inc
push
add
push
movsb
fwait
cmp
xor
push
and
imul
aad
movsl
sub
xor
adc
mov
pop
popf
out
jo
pop
fistpll
popa
sub
pop
repnz
push
aad
and
stos
ss
mov
add
fnclex
rclb
push
fwait
pop
aam
cmc
ret
mov
repnz
in
jl
jp
stos
imul
std
fisubrl
pop
cwtl
aam
pop
xchg
jns
sbb
and
lods
movsl
out
jmp
xchg
or
pushf
mov
sub
ds
repz
push
bound
mov
mov
cmp
icebp
xor
jg
cld
sti
jno
cwtl
and
push
std
sbb
std
cli
lods
or
push
imul
popf
scas
pop
xor
test
dec
xchg
aad
mov
addr16
out
roll
xchg
cli
lock
dec
sahf
cli
into
xchg
sbb
pushf
or
sub
stc
ret
pusha
xchg
or
bound
cmp
xchg
mov
ret
mov
xchg
repnz
xchg
or
icebp
mov
jo
data16
std
jb
sub
out
or
mov
add
dec
incl
pop
or
xlat
orps
lret
push
sbb
and
fs
pusha
mov
outsl
sub
xchg
sti
xchg
fisttpll
imul
popf
fcoml
and
cmpsl
cmc
inc
mov
lahf
and
stos
std
fiadds
mov
inc
scas
sub
dec
fisttpll
cld
inc
ficomps
inc
shl
cld
xor
or
std
or
cli
mov
mov
in
sub
imul
adc
push
sub
fmuls
sbb
jne
mov
lahf
sub
faddl
gs
lret
and
out
rorl
add
adcb
jmp
pop
iret
jp
dec
push
into
mov
repnz
ficompl
bound
adc
pop
mov
insb
inc
mov
das
mov
sbb
pop
adc
roll
enter
xchg
insl
ds
or
enter
rcrb
push
pop
mov
add
mov
jne
imul
idivb
jne
sbb
pusha
mov
sbb
mov
call
jb
ds
xor
test
and
mov
sub
adc
and
jae
add
dec
or
and
and
popf
loopne
jle
inc
push
jl
aas
xor
pop
jo
inc
cs
ljmp
shlb
jno
ljmp
imul
scas
and
sahf
fsubrs
popa
popa
and
push
ja
xor
inc
cvttps2pi
dec
int
mov
loop
or
sahf
and
lret
adc
xchg
in
clc
out
xchg
mov
rcrb
mov
scas
lods
lds
in
scas
cmp
jmp
pop
sub
icebp
arpl
jle
xor
adc
pop
shl
push
or
lods
pop
xchg
cmp
push
bound
jnp
mov
sub
loopne
lret
sub
xchg
sbb
pop
outsl
shlb
mov
ja
lret
jl
cmc
ds
gs
sbb
mov
dec
pop
pop
or
lds
sub
ret
lea
fdivl
js
pop
xlat
dec
outsl
test
jmp
imul
add
icebp
pop
repz
and
jge
cltd
mov
adc
les
lcall
cmpsl
test
jno
jp
in
push
adc
fcoms
xor
insl
xor
xchg
enter
or
out
and
imul
aas
or
sbb
test
out
ret
or
pop
clc
adc
inc
in
negl
sub
ss
jne
add
xor
ss
rcr
out
add
shrl
mov
mov
dec
ret
inc
jne
or
call
andb
or
and
jge
dec
out
jmp
dec
push
push
xor
and
mov
jae
divb
stos
pop
icebp
and
stos
dec
dec
lea
inc
in
mov
adc
std
push
into
negb
cmp
sbb
xor
aaa
sbb
icebp
push
nop
cmpsl
ds
imull
cmpsl
addr16
pusha
pop
xchg
dec
loopne
addr16
in
xchg
sbb
mov
cld
adc
sub
mov
push
mov
sub
or
jmp
push
fbld
loopne
mov
leave
push
and
cs
inc
imul
cmp
jg
mov
cwtl
mov
shlb
lods
iret
shll
imul
int
fnstcw
sbb
push
movsl
daa
inc
ret
push
es
adc
xchg
ret
cwtl
rolb
xchg
fistpl
sahf
jp
je
inc
aam
lcall
aad
jno
adc
int3
in
test
or
jbe
sahf
adc
std
mov
jmp
or
jmp
insb
shl
icebp
push
jecxz
psubsw
lds
data16
imul
xor
mov
js
daa
aad
stc
aam
and
pop
imul
sbb
sub
int
push
mov
jle
orb
loope
inc
out
mov
popa
dec
sub
jg
out
addr16
xor
leave
sbb
xchg
xchg
fldenv
in
or
cltd
sbb
jmp
int
xor
inc
dec
and
jle
imulb
xor
insl
mov
jg
insb
dec
xor
scas
iret
mov
fimull
pushf
xchg
jecxz
xchg
sbb
ljmp
sahf
stc
adc
push
daa
cmpsl
push
imul
xchg
cmpsl
dec
xchg
push
jg
addr16
js
pop
push
dec
daa
test
xchg
mov
cmp
cmp
adcb
dec
sub
pop
push
pop
mov
dec
push
and
or
repnz
add
sbb
mov
jp
cltd
mov
add
in
xchg
iret
jno
cmpsl
ds
mov
and
fwait
mov
pop
mov
cmp
rolb
pop
in
xor
push
sub
cmp
xor
lret
daa
inc
cmc
jae
ss
lods
sub
mov
adc
pop
jne
data16
inc
idiv
mov
loopne
mov
sub
mov
nop
pop
mov
or
popf
shrb
mov
hlt
lods
nop
pop
or
pushf
in
and
out
lret
pop
inc
mov
mov
and
stos
xorb
pop
xchg
lds
fsts
fmulp
dec
or
cs
mov
jl
mov
lretw
sbb
es
std
jle
loopne
popa
jp
aas
jl
fst
adc
xchg
xchg
mov
cmp
jle
lds
mov
mov
mov
repz
test
inc
lods
jne
fldt
push
mov
mov
jo
pop
push
test
mov
arpl
cmpsb
arpl
mov
adc
and
scas
inc
dec
fcompl
jmp
sub
pop
sub
sbb
mov
jg
mov
dec
je
mov
sti
rcll
or
fs
xor
mov
cmp
ret
test
adc
into
jne
gs
fsubrs
lahf
rorb
xchg
arpl
dec
push
in
frstor
xor
cs
sahf
iret
mov
sub
imul
lea
lea
adc
add
pop
js
fbstp
adc
ljmp
push
bound
in
mov
inc
jbe
imul
push
clc
rorb
push
adc
push
or
mov
in
or
fistl
rol
jmp
loope
mov
cld
ja
push
pop
test
jge
cli
ficoml
mov
int
call
jg
lods
shll
int
btr
shl
xchg
mov
int
test
je
into
add
stos
test
adc
add
rcrb
pop
jg
rcr
add
movsl
dec
clc
in
and
and
repnz
movsb
mov
aam
ret
add
inc
shll
push
rolb
inc
add
jnp
movl
repnz
pop
test
lret
sub
int3
xor
aas
js
aas
or
jmp
push
or
icebp
scas
xchg
cmpsl
orl
or
xchg
scas
xorb
xchg
std
or
cwtl
leave
imul
pop
fcmovbe
pop
mov
insb
hlt
icebp
stos
out
imul
leave
adc
aaa
jle
or
ja
out
movsb
das
loop
leave
and
add
xorl
shlb
enter
movsl
mov
andb
fsubs
mov
fwait
clc
daa
icebp
rorl
mov
mov
je
add
or
jge
in
xchg
stos
jbe
cmpsl
shl
repnz
cltd
push
clc
xchg
or
or
test
add
cltd
loope
stos
fmulp
int3
push
sbb
cmc
mov
add
xor
xchg
imul
lret
movsl
add
mov
push
sbb
ds
loopne
mov
xchg
stos
loop
push
pop
push
xor
gs
add
sbb
fldl
les
out
jl
xlat
push
push
mov
xchg
pop
out
push
sub
add
lea
xchg
push
les
jno
push
mov
sbb
push
not
lret
cld
add
cmp
in
mov
mov
sbb
mov
ficoml
lret
fisttpl
enter
add
cltd
or
xchg
dec
push
pop
push
ljmp
push
push
mov
dec
out
fidivl
psllw
adc
jmp
xor
push
jns
repz
mov
jns
test
lods
xor
iret
daa
mov
nop
mov
xor
mov
mov
fcoms
jo
rcll
adc
mov
es
rorl
fcoms
sub
push
out
and
ret
jns
and
mov
out
scas
call
leave
and
and
es
outsb
pmaxsw
or
out
mov
rorl
testb
imul
sbb
xchg
xor
hlt
repz
mov
ret
jmp
dec
in
or
xchg
push
in
sahf
lds
add
out
add
mov
inc
dec
cli
loop
fmuls
cwtl
mov
mov
das
ret
fwait
cmp
and
mov
ja
cli
push
insl
xlat
mov
add
repnz
jae
ror
sub
or
fbld
out
mov
pop
mov
lahf
or
lcall
adc
dec
aad
pushf
stc
cmpsb
adc
add
and
jecxz
mov
shl
mov
int
aam
movsl
cwtl
repnz
xor
es
mov
jge
cmp
pop
int3
mov
mov
xlat
sbb
xor
mov
test
inc
mov
or
popf
inc
pop
mov
js
jo
mov
xchg
jg
dec
cmp
dec
int3
mov
dec
xchg
and
subb
adc
lcall
mov
stos
dec
jmp
fldt
scas
pop
lret
fildl
or
adc
cltd
mov
and
ja
fldenv
xor
lds
or
sub
jnp
int
mov
int3
sti
nop
or
sub
shll
adc
mull
cmp
pop
add
xor
add
jecxz
xor
dec
dec
pusha
jle
mov
rclb
stos
xor
movaps
and
jmp
ss
sub
mov
inc
aad
and
imul
ficoms
add
in
shrl
jb
push
or
inc
int3
add
mov
push
sti
rorl
pop
lock
add
in
mov
aaa
pop
mov
mov
mov
adc
mov
mov
out
out
jno
cmp
pcmpgtw
xorl
mov
cs
pop
js
arpl
scas
lcall
shll
mov
mov
dec
testl
outsl
mov
jp
outsl
out
mov
pop
pop
xchg
rclb
ss
test
call
xor
pop
lret
lcall
inc
and
add
pop
jecxz
fdivrs
out
dec
add
lret
rol
and
add
cmpsb
mov
insl
data16
jae
sub
ljmp
pop
out
pop
jne
je
mov
shlb
cmp
add
fsub
mov
sbb
or
pop
out
enter
jl
pop
outsl
neg
inc
fdivrp
mov
sbb
repnz
sbb
mov
movsl
cwtl
add
aam
insl
sbb
add
pop
nop
push
jns
cmc
xchg
inc
stos
jbe
sbb
add
pop
sbb
fcom
mov
daa
sbb
test
push
pop
mov
mov
and
add
mov
fstpl
sti
mov
rorb
inc
in
adc
jae
push
lret
test
push
lods
mov
push
loopne
nop
std
inc
pop
jne
test
mov
cld
leave
xor
repz
adc
stos
add
inc
cli
and
rclw
dec
fldenv
insl
inc
cwtl
push
cmpsl
icebp
add
xor
mulb
mov
push
jmp
sub
cmp
bound
ret
ja
mov
push
shlb
out
jb
pop
push
inc
popa
mov
in
imul
mov
les
or
or
mov
ret
pop
insl
mov
insl
dec
add
mov
push
cs
push
scas
pop
xor
push
push
xchg
lahf
icebp
cmp
mov
cwtl
dec
mov
int3
imul
xor
lds
jmp
gs
jle
pop
jmp
out
test
ljmp
pop
shlb
fstpl
hlt
adc
cmp
inc
out
mov
jmp
jns
sub
adc
int
in
notl
repz
cmp
or
cltd
incb
pop
fldenv
into
clc
out
mov
dec
or
dec
pop
add
imul
gs
rorb
push
xor
sub
fsubl
cmpsl
or
and
xor
xor
dec
pop
in
popf
insl
fildl
js
adc
jb
in
test
lret
mov
dec
mov
push
jo
popf
ds
daa
add
loopne
stos
leave
add
dec
add
popa
in
lea
mov
int3
jl
dec
sub
icebp
rcll
cwtl
movsl
stc
out
sbb
das
addr16
lret
add
xchg
cmc
hlt
mov
mov
and
pop
cmp
dec
cmp
jge
pop
out
movsb
add
pusha
call
rclb
ffreep
jbe
and
into
cmp
repnz
mov
icebp
fnsave
cmp
sti
push
fimuls
repnz
jmp
jbe
scas
dec
repnz
lock
dec
sahf
jp
into
in
cmpb
daa
mov
ret
xchg
mov
out
lahf
mov
sub
lods
std
lock
xchg
lcall
ror
inc
call
jg
jnp
js
sbb
cmc
sti
cs
mov
mov
fsubr
repz
xchg
nop
icebp
jne
cmp
xchg
rcrb
inc
fstl
idiv
sub
in
int
aad
bound
in
aad
mov
xchg
or
xlat
aas
out
addr16
rcr
dec
push
call
addr16
cld
mov
daa
or
repz
or
inc
xor
mov
es
nop
bound
jle
enter
xchg
mov
sub
or
sub
adc
mov
lock
and
jno
pop
mov
xchg
movsl
mov
dec
int3
inc
lods
add
call
sub
ljmp
mov
inc
xlat
in
sub
aad
test
mov
sub
cld
sahf
sub
mov
mov
cltd
pop
cmpsl
test
pop
imul
push
dec
lock
subb
push
imul
gs
fildll
cli
pushf
sbb
cwtl
pop
incl
inc
sarb
pop
dec
cmp
push
and
adc
pop
sub
xor
adcb
sti
jo
or
and
and
movsl
pop
cmpsl
cmpb
ror
push
rorl
lcall
jno
jp
sub
mov
ljmp
insl
fdivs
inc
sub
rcrb
in
cmp
dec
fdivs
mov
add
shl
push
sahf
jge
test
sbb
orb
dec
push
and
mov
ja,pt
and
inc
sub
ljmp
and
mov
jnp
push
mov
out
out
imul
and
mov
pop
xchg
adc
imul
out
jne
int3
in
outsb
adc
xchg
das
lcall
add
shlb
iret
jmp
inc
sub
or
push
cwtl
iret
inc
jl
hlt
dec
or
jb
aas
xchg
jnp
xor
dec
cmp
int3
push
pop
dec
cs
inc
xor
jns
adc
insb
sarb
push
outsl
mov
shlb
cmc
lea
scas
mov
je
fistpll
lret
push
push
adc
dec
sarb
sbb
outsb
fwait
imull
sbb
push
ljmp
dec
cmp
inc
push
fsubl
pop
mov
sbb
jge
cmp
sbb
ds
or
mov
mov
fstps
stos
lcall
outsl
jne
jg
push
or
leave
into
mov
into
pop
pop
lea
pop
add
dec
cltd
std
addb
cmc
or
cmpsb
inc
sub
or
push
mov
sbb
hlt
inc
std
mov
cmp
inc
lds
inc
adc
pushf
stos
xlat
adc
xchg
push
dec
xor
cmc
ret
cld
call
or
fucom
add
xlat
or
arpl
aaa
or
sub
lds
xor
ljmp
ljmp
push
lods
ss
xor
aam
inc
add
or
test
lahf
dec
lea
jnp
push
mov
mov
cmp
mov
fcomps
dec
lods
ljmp
inc
insb
or
cmp
cltd
jno
adc
mov
data16
jge
int3
add
scas
out
jp
inc
incl
lods
sbb
jl,pn
outsb
cmp
jl
push
inc
add
mov
repnz
jmp
faddp
enter
xlat
dec
repnz
into
sbb
ss
movsl
jb
xor
push
adc
push
mov
and
lods
lcall
arpl
js
xchg
cld
adc
std
inc
lea
or
xchg
pushl
cmp
das
ficomps
decb
push
mov
test
loopne
shr
jnp
aam
jnp
shlb
in
push
loop
cltd
sbb
into
and
test
iret
cld
add
in
cld
pushf
xchg
lret
das
jne
pop
pop
insl
fs
out
add
movsl
mov
out
imul
xchg
nop
sbb
test
in
xor
mov
jb
sti
or
es
pop
test
mov
mov
pminub
fwait
es
fs
data16
xchg
mov
xor
enter
pushf
add
cmc
das
xchg
popa
sbb
jo
int
cmp
jmp
push
adcl
mov
xor
jno
cltd
pop
outsb
int
pop
sbb
std
adc
jl
jbe
popa
lahf
orl
inc
aaa
stc
pop
imull
mov
mov
mov
ja
add
lcall
sub
mov
sbb
mov
push
cltd
fstps
sti
sub
xlat
mov
push
jle
mov
adc
ds
imul
nop
subl
inc
les
adc
jg
pop
dec
cli
push
es
and
pop
jecxz
nop
stos
mov
dec
push
sbbb
ss
jae
sbb
popf
mov
add
je
sar
mov
mov
jge
inc
xchg
dec
sbb
fsubr
pop
dec
xchg
in
fadds
lea
mov
cmp
gs
xor
mov
imulb
and
dec
mov
out
add
push
xchg
cmpsb
stos
fucomp
adc
in
lds
mov
repnz
scas
psubd
mov
jge
xor
pop
gs
aad
fs
inc
pushf
loopne
cmc
push
mov
cs
adc
std
pusha
push
in
ret
imul
sbb
mov
dec
cltd
inc
or
mov
leave
pop
sahf
xor
push
ficoml
in
insb
fldcw
testb
fidivl
out
push
cld
aaa
jge
inc
iret
jb
adc
mov
push
xchg
pop
push
aaa
mov
sub
pop
fstps
mov
stos
dec
xor
lcall
mov
pop
pop
xchg
clc
pusha
fcomip
cs
or
dec
cli
call
outsb
ret
add
dec
xchg
ret
shrb
stos
pushl
or
lahf
xchg
sub
ljmp
call
hlt
lock
fsubr
or
call
or
stos
ret
jp
mov
mov
das
flds
lcall
negl
cmpsl
sbb
xchg
lods
cltd
or
mov
bound
cmc
mov
pusha
jns
fucomip
sub
rorl
test
testb
pop
dec
aas
das
in
jae
dec
jle
mov
xlat
gs
aas
clc
push
out
sbb
push
lock
adc
xor
cmp
test
sbb
arpl
in
insb
aas
and
push
jmp
sti
add
jp
inc
mov
inc
mov
and
in
push
aam
jle
ja
add
sub
aam
or
xchg
lods
mov
cwtl
mov
in
pop
cmp
push
loope
out
shlb
repnz
xor
xchg
add
lahf
in
nop
and
jo
sbb
clc
popf
or
scas
mov
pushf
sub
decl
ret
cmpsb
into
outsl
fs
adc
daa
push
and
into
dec
push
jmp
repz
cmp
or
xchg
test
stos
and
outsb
and
jo
sub
jb
int3
mov
jb
faddl
sahf
out
dec
imul
sbb
jg
mov
rcrl
sti
jbe
mov
adc
ficomps
insb
stos
fidivrl
jle
pop
out
jp
dec
sub
jnp
dec
popf
int
out
sahf
mov
imulb
pop
jno
je
repz
mov
jnp
adc
and
inc
mov
sub
cmpsb
lahf
push
mov
ror
dec
rcrl
jne
lcall
sbb
nop
fisubs
adc
cld
xchg
gs
cltd
pop
ficoms
cmp
cltd
pop
lock
pop
in
into
insl
inc
sahf
cmp
movsl
outsl
push
or
into
xchg
xor
sbb
call
adc
fisubrl
push
ja
lock
mov
or
mov
sub
adc
pop
mov
insb
mov
and
jae
dec
movsb
pusha
jo
loope
adc
xchg
sti
xchg
adc
mov
dec
jl
and
stos
sbb
sbb
fildll
sbb
sbb
inc
out
add
out
cltd
stos
xor
lods
pop
dec
shlb
adc
mov
les
pop
dec
dec
mov
icebp
call
or
cmp
test
sub
and
je
test
or
and
outsb
push
subl
les
out
mov
mov
jb
test
sub
pop
dec
jnp
cli
mov
add
jb
push
je
out
and
push
out
push
xor
push
mov
test
daa
das
add
fisubs
fistpll
in
mov
sub
pop
mov
push
rorb
or
sahf
sbb
inc
pop
cmpb
xchg
mulb
cwtl
xchg
sahf
or
push
add
push
std
test
jno
stc
cmp
jns
pop
arpl
sbb
ja
push
ss
call
in
mov
push
js
and
pop
popf
inc
cwtl
xor
loope
jno
sub
adc
sbb
ja
and
gs
iret
shl
cmpsb
inc
out
lods
arpl
scas
outsl
pop
test
mov
mov
and
add
push
inc
imul
and
gs
mov
bnd
cmc
jnp
adc
pop
dec
int
ss
clc
fnstcw
jmp
and
jmp
xchg
mov
in
sbb
dec
and
imul
mov
sbb
jno
je
pop
into
pop
clc
jecxz
scas
or
mov
inc
cmp
adc
scas
mov
jns
daa
mov
push
mov
xor
push
out
and
add
fdivrl
cmp
js
jbe
sub
pop
cld
rcrl
mov
dec
mov
add
xor
mov
cmp
and
jne
cmp
inc
dec
fwait
xor
test
mov
cmp
loopne
dec
push
mov
mov
push
mov
ret
inc
test
imul
or
pop
mov
negl
mov
stc
xchg
xor
aaa
pop
dec
movb
xchg
push
pop
bound
mov
jp
outsb
jecxz
adc
imul
xor
pop
incl
cs
popf
add
mov
cmpb
dec
dec
jmp
dec
std
jns
pop
lret
sub
divl
fcoml
std
aaa
and
addr16
in
push
add
dec
jbe
adc
mov
ffree
pop
fwait
mov
scas
and
call
es
subb
icebp
arpl
mov
in
fwait
shrb
pop
sub
ret
xchg
dec
popa
xlat
ds
push
int3
pop
and
add
adc
pop
xor
enter
mov
fists
popf
or
jle
or
or
out
movsl
jbe
jae
iret
shl
test
mov
rol
sbb
push
dec
int3
xchg
int
sbb
test
test
pop
sti
outsl
pop
mov
mov
test
xchg
je
mulb
sub
xor
pop
mov
xchg
mov
lods
cmp
lret
xchg
sub
push
rorb
adc
rol
push
dec
or
cmpl
fcoml
std
cmp
pop
shr
mov
adc
add
out
sbb
imul
arpl
xchg
sahf
cmpl
lock
aaa
rcll
jmp
sahf
pop
repnz
fs
lds
out
cmpsb
jle
jl
dec
lret
repnz
pop
leave
leave
mov
fs
leave
cltd
ljmp
and
jbe
jno
movsb
lcall
addb
or
dec
jle
fbstp
data16
jg
and
cs
xchg
push
fstps
out
shr
mov
xchg
lea
lcall
out
xchg
jnp
in
mov
arpl
iret
in
daa
inc
sub
fs
ja
adcb
movsl
cmpsb
je
mov
insb
les
outsl
jnp
sub
or
test
cs
cmp
outsl
popl
ss
inc
pop
pop
adc
arpl
dec
mov
sub
push
mov
fwait
psadbw
push
xchg
fs
cs
jp
ret
pop
icebp
inc
xchg
imul
pop
lahf
shrb
pushf
jb
arpl
mov
mov
jns
dec
and
les
push
xchg
inc
push
int3
sbb
push
int3
movsl
repnz
test
jmp
add
jno
mov
sbb
fisubs
lret
stos
dec
scas
jmp
pop
enter
xor
xchg
ljmp
dec
or
fsubrs
cwtl
scas
popf
rorb
nop
int
popf
movsb
add
test
jo
popf
in
or
xchg
adc
ljmp
adc
jmp
xor
loope
xchg
dec
stc
into
ficoml
xor
jo
in
dec
lret
adc
lret
sub
push
out
lea
lcall
iret
xchg
mov
xchg
fstpt
xor
mov
stos
sub
lock
leave
sbb
sub
pop
and
xchg
cli
ss
push
sbb
cltd
pushf
lcall
ss
mov
scas
std
popf
rcrl
xor
xchg
cmc
xor
xchg
ret
int
lret
test
xchg
mov
int3
fnstcw
jp
pop
xor
xchg
jge
stos
pop
cmpsl
pop
mov
adc
fnstsw
sbb
lcall
stos
stc
dec
in
lahf
xchg
ret
loop
or
add
xor
cmp
enter
mov
pop
inc
jmp
xor
mov
sbb
inc
icebp
in
sbb
xchg
in
sbb
dec
sbb
out
fisttps
lods
lods
loope
jnp
pop
fisubrs
adc
in
cmp
push
sbb
lods
cmpsl
xor
dec
dec
push
mov
jg
xchg
cmp
je
jns
xchg
fcomip
jl
dec
mov
xchg
mov
jbe
mov
push
out
xchg
push
cmpsl
lods
push
mov
shl
pop
sub
out
daa
inc
cmc
cltd
xchg
inc
pop
stos
and
pop
mov
add
xchg
push
lret
push
mov
pop
int
insb
push
ja
sub
fnstsw
out
and
adc
cmpsl
pusha
lea
cli
out
push
xchg
mov
outsb
xchg
add
add
fstl
mov
sti
push
jle
pop
shll
mov
pop
lea
fnstsw
inc
mov
inc
imul
fcmovne
jnp
dec
loop
xchg
push
int
out
jg
mov
jle
xchg
enter
add
inc
inc
mov
mov
and
pusha
pop
add
cmp
jo
or
jp
gs
in
loope
pop
aaa
loopne
std
movsl
mov
inc
lds
stc
outsl
adcb
insb
or
add
inc
data16
cld
push
out
ljmp
or
mov
jmp
push
push
sbbl
jo
icebp
sarb
inc
ret
pop
mov
xchg
dec
lret
mov
hlt
or
in
js
cltd
mov
jl
adc
dec
pop
das
sbbl
push
jl
les
jne
fldl
mov
test
cld
jno
imul
dec
dec
lock
mov
mov
ja
mov
fiadds
icebp
xchg
rol
inc
push
xor
insb
dec
add
xchg
cmpb
inc
push
jne
arpl
xlat
aaa
jl
dec
dec
pusha
dec
dec
ret
dec
ss
nop
inc
mov
push
repnz
mov
movsl
add
pop
cld
mov
test
add
outsb
xchg
xor
iret
jae
jmp
sarl
stc
sub
sbbb
jle,pn
cmp
mov
push
lds
add
ss
jl
fwait
gs
gs
test
sbb
push
xchg
scas
push
lods
dec
pop
push
out
cmc
lea
xor
into
mov
inc
loope
mov
jl
xor
ret
into
arpl
lahf
xchg
jns
adc
xchg
lods
stos
lcall
jp
test
testl
fs
adc
cmc
and
add
mov
jns
into
jo
int3
xchg
push
xor
adc
movsb
add
sub
pop
je
mov
loope
jmp
xlat
push
arpl
push
pop
adc
sub
xor
out
jb
repnz
imul
scas
push
jmp
shlb
subl
sub
adc
xchg
shr
jle
out
jb
adc
sbb
enter
popf
xchg
xchg
inc
dec
test
pop
add
sub
mov
fldt
adc
cmpsb
mov
xchg
jmp
or
lcall
jbe
push
sbb
xchg
iret
pop
push
jg
popf
std
in
xlat
ficoml
stos
mov
imul
dec
in
clc
bound
dec
call
das
imull
inc
pop
ljmp
and
mov
dec
xchg
pop
push
ja
dec
push
mov
jne
xchg
mov
js
push
sbb
xchg
aam
or
outsb
adc
ljmp
sbb
pop
test
in
jp
jo
fsubl
cld
jge
out
xchg
sub
push
sub
pop
gs
je
xchg
push
mov
mov
push
lds
in
cmpsl
jae
bound
stc
push
dec
cmpsb
inc
lods
out
in
xor
loop
ds
cmpsb
pop
mov
rclb
int
mov
xor
push
enter
aad
scas
ljmp
cmp
fcmovnb
cmp
add
daa
xor
and
cmpl
jle
or
mov
rcr
aad
lcall
push
mov
jbe
out
pusha
dec
scas
lods
add
enter
sbb
mov
outsb
dec
std
jle
fisttps
jp
mov
icebp
clc
add
shrb
mov
jo
mov
ss
mov
ret
in
push
mov
pop
in
cmpsl
imul
gs
xor
jns
cld
lcall
inc
insl
shrb
sub
jne
shll
mov
aam
scas
cltd
in
lahf
ja
mov
rcl
sti
dec
inc
out
jnp
xchg
je
push
scas
xchg
shlb
jp
mov
push
rorb
nop
std
repz
idivl
cld
js
int
sarl
mov
movsl
fs
in
insl
movsb
push
xchg
add
sbb
dec
cmp
and
and
xchg
imul
aad
into
ret
mov
or
xchg
pop
mov
aas
fidivl
les
sub
les
fiaddl
xchg
loopne
das
dec
imul
mov
sbb
jmp
jecxz
pop
cmp
sbb
xchg
push
mov
adc
int3
xlat
mov
sbb
outsb
lods
add
testb
orb
jne
icebp
fiadds
movsl
push
jns
mov
fcmovb
jb
jp
mov
jne
test
sbb
clc
in
cmp
das
push
popa
inc
lcall
inc
add
cs
and
icebp
mov
mov
fldt
xor
pop
jne
test
movsl
lret
das
into
mov
inc
sub
fisubl
dec
sbb
xchg
sbb
fiadds
mulb
lea
push
push
repz
mov
jecxz
cmp
xor
loopne
xor
es
jecxz
dec
xchg
rorb
pop
lock
out
sub
scas
lret
ds
popf
fcompl
jl
mov
dec
cmpsb
out
xor
mov
out
lock
ss
push
xor
xor
sbb
ljmp
inc
jge
enter
add
movsb
and
das
sbb
dec
xchg
xchg
inc
pop
add
cmp
addr16
xor
sub
mov
mov
fs
dec
in
js
and
jmp
shlb
stc
je
sub
jmp
sub
fcomps
push
rcrl
rorb
xchg
fimuls
lret
popf
movsl
addr16
or
push
pop
in
cmc
inc
cmp
sub
inc
inc
in
mov
push
std
cmc
shlb
loop
out
jmp
aaa
pop
nop
or
cmpb
mov
push
sub
out
jmp
mov
aam
xor
aam
test
test
aaa
lret
pop
movsl
les
cwtl
inc
std
mov
jb
jl
push
roll
aad
iret
adc
imul
jmp
or
mov
xor
adcb
jle
xor
pop
pop
pusha
lods
scas
shll
jns
bound
xchg
cmp
jns
fdivp
adc
mov
lods
mov
pop
ss
dec
movsl
shlb
ljmp
add
icebp
sub
mov
pushfw
test
int
insb
adc
fsubrl
dec
push
mov
jns
pop
test
mov
jle
adc
mov
push
dec
ret
xchg
and
xchg
and
xchg
cmp
sahf
inc
lods
ret
fscale
mov
sahf
cmpsl
test
cwtl
mov
or
stc
jge
push
loope
fsubs
mov
dec
fwait
pusha
cmp
push
or
fwait
es
aam
adc
je
pop
lret
stos
mov
lret
cmp
into
sub
jg
pop
in
cmpsl
push
aam
dec
aaa
pop
movsb
and
lcall
lds
xchg
jmp
fistl
mov
push
dec
std
xor
lcall
push
dec
pop
push
and
pop
jae
fs
into
xor
out
loop,pn
add
xchg
xchg
je
mov
or
fwait
mov
stos
cmp
in
nop
sti
mov
mov
push
mov
les
enter
add
jg
pop
rol
bnd
sti
mov
rcll
lods
int
imul
frstor
add
mull
imul
es
adc
ret
leave
repnz
cmp
or
sti
loopne
ss
paddd
cs
jmp
lock
decl
scas
mov
jmp
cli
mov
icebp
loope
test
pop
es
test
jb
dec
das
ss
pop
push
cmp
clc
xchg
std
rorl
outsb
pop
popa
sub
loop
gs
dec
mov
xchg
xor
movsl
mov
fneni(8087
lret
data16
and
sbb
push
cmpsl
call
fcmovbe
pop
call
fwait
jne
pop
push
add
cmp
and
lret
cmp
aam
mov
pop
sbb
cmp
rclb
negb
adc
and
pusha
sub
cmp
sbb
ret
ret
pop
mov
cld
flds
insl
jmp
adc
popa
add
xor
jb
loopne
dec
out
mov
jmp
orb
adc
xor
into
jae
xor
mov
cmp
int3
cmpl
aaa
fdiv
pop
leave
ds
pop
add
pop
cmpsb
mov
and
insb
movsl
lods
adc
cmp
cli
inc
ficoms
cmp
jns
adcb
hlt
inc
jae
sbb
jae
inc
cmp
scas
cmp
xlat
adc
xchg
mov
iret
inc
sbb
test
jl
inc
fsts
idivb
scas
mov
test
nop
repz
jp
popa
jo
popf
add
cmovg
mov
mov
or
or
push
pop
xchg
push
fmull
data16
inc
test
stos
out
push
ja
add
xor
out
popf
cmp
repnz
sub
push
mov
fwait
inc
inc
push
xor
fstps
sahf
test
cmc
mov
mov
loop
xchg
mov
mov
jmp
add
aas
jle
loop
test
xor
shr
mov
das
in
ret
les
ds
pop
push
cld
icebp
cmp
jne
mov
add
xchg
lcall
add
loop
inc
push
jecxz
cmp
repnz
sbb
in
rcrl
mov
or
inc
insb
out
fidivrs
jae
inc
xchg
pop
and
mov
stc
mov
or
jns
add
pop
cmp
jns
mov
loopne
adc
repnz
add
mov
mov
inc
jae
push
and
jnp
cmp
iret
fsubp
lret
lahf
mov
scas
in
mov
bound
sub
push
movsb
jno
and
xchg
imul
sbb
outsb
pop
mov
lret
pop
xor
sti
dec
or
mov
fs
adc
push
int3
call
mov
rcrl
mov
push
sub
pop
aas
adc
and
outsl
lods
flds
adc
cmpsl
imul
in
test
incb
adc
movsb
lea
roll
push
cmpsb
and
push
repz
hlt
out
divps
out
popf
stos
lods
xor
das
xchg
sbb
jnp
add
xor
xchg
cmp
dec
xchg
xchg
idivb
inc
clc
mov
lcall
icebp
jl
mov
pop
mov
std
repz
clc
jp
js
cmp
lcall
bound
je
xchg
inc
movsb
repz
xorb
aam
test
sti
sub
enter
mov
insb
xor
adc
out
aad
test
mov
and
adc
aas
and
xor
jns
jmp
push
dec
icebp
mov
outsb
or
idivl
mov
push
popa
jp
rcl
mov
roll
repnz
add
or
xchg
inc
or
insl
cmp
add
add
aam
aam
ret
mov
add
inc
insl
fucom
mov
roll
arpl
lret
or
stc
xlat
push
push
rcrb
adc
sub
adc
sbb
xchg
mov
cmpsl
push
movsl
push
cmp
roll
enter
add
cli
cmpl
cmp
arpl
sbb
das
mov
add
sub
mov
aas
nop
sti
sbb
jecxz
pushl
sbb
stos
aad
ficoms
jb
das
cmp
cmp
jecxz
insb
daa
icebp
ss
or
or
sub
pop
mov
fdivp
mov
sahf
inc
repz
aad
insl
xchg
out
dec
mov
popf
lahf
mov
ss
lahf
cmp
push
shll
cltd
or
inc
and
arpl
mov
mov
push
xor
dec
loop
jecxz
adc
arpl
push
fsubrs
adcb
xchg
call
mov
mov
lods
mov
aaa
ja
mov
scas
into
es
push
push
in
out
inc
mov
sub
push
hlt
pop
cmpsb
lret
or
dec
in
jae
stc
pop
inc
push
jmp
jo
lahf
xchg
inc
sbb
inc
aad
jb
mov
out
nop
aaa
adc
lds
adc
or
mov
dec
push
jb
xor
xchg
jg
mov
adc
mov
outsb
popf
aaa
aas
gs
push
ret
add
stc
aam
test
push
dec
sub
mov
mov
popa
loop
jle
dec
xor
enter
xchg
dec
pop
cmpsb
outsl
idiv
in
clc
iret
hlt
mov
fdivrl
movsb
jl
jns
outsb
adc
inc
push
and
push
ljmp
adc
mov
mov
in
scas
mov
adcb
ljmp
xchg
inc
cltd
mov
ds
adc
sarb
or
xchg
sbb
or
stc
xlat
imull
int
adc
dec
adc
push
jmp
nop
sahf
inc
cmp
int3
push
in
add
jg
and
lods
push
or
lret
mov
hlt
gs
subl
lcall
repz
cmp
jg
rcll
jge,pn
outsl
repz
repz
shl
and
xor
cmp
scas
adc
addr16
sbb
in
gs
mov
fdivl
cmp
mov
mov
nop
push
out
out
push
ss
bswap
mov
sbb
bound
cmp
xchg
sub
ljmp
lock
int3
add
outsl
fcmovne
sub
mov
pop
test
xchg
sub
pop
mov
push
mov
sub
cmp
fimuls
cmpsl
pop
fimull
jp
sub
leave
imul
pop
and
shlb
xor
xchg
test
add
jbe
xchg
xchg
mov
xor
sbb
inc
adc
inc
leave
push
xlat
sub
jbe
jnp
mov
loopne
orb
xor
stos
cmp
sbb
and
push
out
outsl
push
xor
arpl
pop
adc
sbb
gs
fnstsw
add
inc
rolb
mov
outsb
sub
mov
rcrb
xor
addr16
loopne
lret
sub
pop
xor
iret
fistpll
ss
mov
orl
and
mov
jae
cltd
mov
adc
jmp
mov
mov
sti
dec
xchg
stc
push
push
aaa
add
fiaddl
roll
push
jecxz
sbb
shlb
stc
ljmp
xor
dec
daa
clc
lods
sbb
mov
in
in
mov
xchg
dec
pop
pop
inc
mov
in
iret
pop
adc
es
inc
jae
mov
je
adc
push
push
add
sti
sbb
or
dec
in
sub
pop
ljmp
mov
in
or
aas
sub
pop
mov
jns
or
andl
mov
aam
push
mov
inc
movsl
repz
faddl
pop
imul
mov
orl
dec
mov
adc
and
xorb
inc
inc
jbe
in
ss
xor
inc
lret
cmpsb
cld
enter
repnz
cld
mov
sbb
sub
je
mov
call
jl
ss
je
mov
add
insb
cld
int
cmp
inc
push
mov
mov
insl
outsb
lcall
out
insb
iret
hlt
lock
mov
or
movsb
fstl
test
cmp
aam
in
lods
int3
cmpl
in
loope
inc
ss
ret
mov
mov
xchg
jno
push
pop
lret
insl
ret
pop
inc
rorl
pop
pop
xor
mov
fimuls
cmp
cmpsb
out
push
lods
lret
sub
hlt
movsb
fs
cmp
fistpll
loope
add
push
xchg
fwait
add
jae
sub
jae
xor
mov
movsb
mov
movsl
outsb
ds
pushf
out
iret
sbb
inc
inc
into
jno
ret
and
xchg
sbb
xor
sti
xchg
mov
adc
mov
loop
xchg
orb
js
sbb
jno
lcall
test
xchg
jg
push
push
inc
push
scas
push
cmpsb
ret
sbb
mov
xor
inc
mov
jnp
or
call
aaa
mov
pop
shrl
sbb
pop
movsb
xchg
mov
pop
cmc
mov
inc
push
xor
push
jns
mov
in
jae
push
mov
scas
mov
scas
push
xchg
push
sub
jl
cmpsl
cli
jle
out
test
mov
sarl
sahf
sbb
jl
mov
loop
pop
data16
and
jp
lcall
push
add
orb
push
adc
jb
jns
sbb
push
scas
ret
pop
mov
icebp
fs
andl
and
bound
sub
or
loope
dec
cmp
sbbb
sub
loope,pt
arpl
out
lret
xchg
cmpsl
icebp
repnz
test
adc
ja
fs
jo
push
dec
popa
xchg
xlat
shl
push
push
in
push
add
pop
push
imul
gs
out
pushf
cmp
push
aad
les
xchg
mov
scas
add
push
sbb
xchg
imul
dec
push
scas
sbb
bound
xor
in
ucomiss
ja
fcompl
data16
push
and
neg
ficompl
xor
inc
into
and
hlt
dec
movsb
push
lods
movsb
jmp
pop
shll
out
sub
sub
les
inc
negl
sub
sahf
xchg
lahf
lock
mov
sub
lock
pop
test
pop
incl
pop
jne
sbb
push
mov
cmp
mov
sub
rcll
cmpsl
das
xor
cmp
pop
sub
gs
cld
inc
fisubrs
nop
in
insl
ss
mov
pop
mov
loopne
inc
jecxz
leave
sub
cltd
inc
mov
xchg
mov
and
ror
lods
jb
mov
mov
inc
daa
out
pop
pop
fidivrl
stos
scas
adcb
xor
fstpt
fisubrl
mov
cmp
repz
adc
test
sahf
mov
jmp
jo
sub
push
addr16
xor
sti
sub
sub
jmp
jbe
test
cmp
mov
mov
call
lret
loopne
dec
cwtl
adc
jb
xchg
xor
inc
out
sysret
popa
xorb
cld
test
pop
data16
mov
mov
mov
mov
pop
fiaddl
mov
fnstsw
lock
mov
dec
mov
jae
cmp
sbb
mov
add
in
cmp
inc
movsb
dec
subl
pop
mov
test
push
jo
insl
jl
cmp
pop
pop
push
std
or
fnsave
ja
xchg
scas
jb
or
negl
test
int3
andl
jo
mov
sub
in
sbb
test
push
test
cwtl
sbb
fs
ds
jp
inc
decl
andl
or
gs
bound
int3
gs
inc
adc
loope
and
outsl
pop
adcb
cmc
into
cmp
inc
xchg
and
in
cmp
imul
sub
push
das
xchg
mov
mov
pusha
scas
jp
pop
inc
aad
xchg
cmp
adc
pusha
fistl
mov
in
cld
mov
add
sbb
add
push
sbb
repz
add
movsl
je
sbb
test
sbb
jp
out
std
xchg
rorl
xchg
rcrl
mov
btl
lods
jne
inc
out
in
xchg
fsubs
call
mov
pop
outsb
push
or
negb
pop
sbb
cltd
mov
mov
and
xor
pop
cmp
out
test
out
roll
push
cmp
jecxz
pop
pop
jl
jle
and
sub
sub
les
daa
mov
push
inc
rorl
jne
push
inc
xor
adc
sub
ret
pop
outsl
and
decb
nop
fisubrl
jp
imul
movl
pop
cltd
xchg
test
add
mov
add
mov
loop
std
adc
push
cmpsl
push
adc
dec
push
sbb
mov
outsb
push
push
ja
aas
pushf
dec
adc
adc
push
sbbb
and
movsb
adc
scas
pop
lock
mov
push
mov
jb
std
test
dec
inc
dec
enter
js
fisubrs
xor
xchg
pop
inc
fs
nop
movsl
stc
pop
pop
xchg
mov
cmc
gs
dec
lods
mov
lods
dec
sahf
adcl
fs
outsl
pop
xchg
push
mov
mov
sub
outsl
test
pop
jo
aad
cmp
ja
sbb
xchg
ljmp
cmp
or
std
shl
push
insb
xchg
outsb
in
es
sub
sbb
mov
sub
mov
pop
sbb
sub
jae
pushw
or
out
int3
jno
das
js
or
xor
addr16
or
fnstcw
cmp
and
sbb
aaa
sbb
int3
push
mov
sbb
stos
dec
mov
fstpl
aas
fs
mov
ss
std
popa
in
stos
mov
cmc
not
popa
mov
inc
add
sub
gs
jb
leave
cmc
fnstcw
nop
fbld
xchg
push
mov
sarb
push
outsb
lea
push
int
incb
xlat
ljmp
js
loopne
add
mov
cli
add
dec
pop
insb
xor
mov
pop
movsb
sbb
repnz
idivb
mov
add
mov
popa
sbb
scas
push
xchg
cmpsb
shr
jb
clc
lcall
add
jle
mov
pop
notl
jb
sbb
cltd
mov
cmp
ja
lret
loope
push
in
addr16
adc
add
jne
adc
jae
fwait
and
adc
cmp
mov
and
je
xor
shl
fdiv
dec
aaa
mov
test
sbb
stos
push
addr16
mov
cmc
mov
negl
sub
dec
lds
in
xchg
adc
push
fisttpl
std
sbb
pop
mov
inc
test
in
filds
or
sti
insl
movsl
loope
inc
stos
je
call
jne
adc
push
sbbb
mov
adc
imul
stos
inc
out
pop
pop
stos
std
ficoms
lods
movsl
lret
in
clc
int3
pop
das
jno
lods
pusha
fisubl
jae
bound
sbb
test
push
sbb
jle
imul
lds
adc
dec
inc
sub
pop
pop
mov
sub
xchg
in
push
dec
popa
push
mov
mov
add
add
loop
mov
clc
mov
insb
fwait
ret
mov
pushf
xchg
push
into
pop
add
cmp
stc
mov
hlt
int
les
stc
ficoml
loope
loop
inc
ret
jge
lock
rorb
or
or
jb
data16
mov
lcall
push
xchg
sbb
mov
js
adc
ret
fidivrl
and
and
aad
loope
sbb
jp
inc
sub
pshufw
cmovns
aad
fsubl
sub
out
aam
cmp
push
or
dec
add
idiv
inc
inc
xchg
fistpll
popf
mov
push
jle
int3
push
and
test
push
cmp
xrelease
push
ffree
mov
inc
movsl
cmp
cs
or
xchg
jnp
insl
mov
inc
inc
cmpsb
aas
mov
xor
inc
inc
sbb
inc
add
test
aaa
repz
incl
mov
sbb
add
pop
nop
roll
insb
fadd
out
scas
pop
cld
int3
and
mov
xchg
inc
test
loop
sbb
add
inc
cwtl
pop
and
aam
pop
in
outsl
mov
scas
lahf
ljmp
dec
mov
ds
repz
jle
push
cmp
sub
aas
rcl
or
ja
cs
mov
pop
sub
jns
movsb
xchg
mov
test
sbb
push
cmp
fsub
add
or
shrl
rorl
ret
jl
into
inc
lahf
ljmp
xor
push
add
push
shrl
nop
ud2
cmp
jmp
ret
mov
or
icebp
mov
adcl
mov
push
popa
cmovae
mov
sti
arpl
ss
mov
mov
aad
mov
jbe
jl
xchg
inc
inc
or
mov
mov
pop
loop
cs
repz
xor
pop
fsts
add
dec
decb
rcrb
lock
outsl
mov
lcall
or
jmp
inc
jne,pn
mov
sub
add
loopne
rorl
push
jne
aad
xchg
test
dec
sbb
jb
mov
fsub
mov
test
lods
and
movsb
adc
push
inc
dec
mov
mov
pop
push
lret
xor
sub
mov
jl
push
das
jbe
adcl
xchg
lahf
leave
inc
add
and
mov
loop
or
xor
pop
pop
mov
inc
jle
je
arpl
add
popa
fildll
lods
lret
add
test
addb
sbb
push
popa
xchg
pop
mov
leave
sub
pop
cmp
cmp
outsl
fstpt
sub
sbb
inc
stos
stos
jecxz
jle
jmp
call
faddp
mov
cs
jae
inc
aas
jb
adc
enter
mov
aaa
js
data16
cmpsb
mov
das
add
out
and
mov
push
pushf
negb
pop
jg
xchg
inc
mov
fsubr
out
cmc
clc
lahf
call
mov
adc
in
or
pop
and
xorb
lods
mov
inc
pop
xor
icebp
decl
cmp
pop
inc
scas
inc
mov
xchg
std
repnz
adc
mov
fidivrs
jg
jecxz
push
sbb
test
cmp
andb
popa
sub
xor
xchg
jae
mul
test
fwait
dec
mov
xchg
arpl
jl
mov
imul
dec
and
orl
imul
mov
xor
xchg
sbb
fwait
or
add
xor
push
xchg
fwait
jp
shll
ja
pop
or
inc
push
jmp
in
loope
xor
add
lret
xchg
xchg
jmp
out
lret
or
or
push
rclb
add
icebp
aaa
mov
fcmovbe
fidivl
es
sub
adc
rcl
lea
stos
or
adc
and
fcoms
dec
scas
mov
es
dec
shr
insb
addr16
aaa
xlat
mov
ret
mov
inc
leave
mov
xlat
bound
jge
rcl
add
mov
aaa
inc
mov
add
sbb
stc
stos
es
cmp
nop
stos
inc
jmp
lods
mov
pop
leave
mov
push
stos
call
out
ficoms
adc
mov
fistps
pop
movsb
jmp
or
int
sub
enter
sahf
push
aam
or
popf
xlat
pop
pop
sarb
les
loopne
or
and
add
pop
ja
cmp
mov
flds
mov
cli
ss
jno
sub
mov
arpl
cld
cmp
add
dec
mov
sarl
or
xchg
pop
scas
ljmp
xchg
adcb
fnstenv
popa
or
dec
inc
loope
out
add
test
js
mov
js
pop
mov
fists
lret
ficompl
insl
pop
inc
inc
adc
sbb
jns
pop
dec
and
push
inc
dec
fnsave
iret
data16
push
sbb
pop
pushf
in
xor
push
pop
gs
outsb
mov
fmuls
adc
out
cmpsl
xlat
out
adc
loop
hlt
addr16
mov
pop
or
ficompl
es
shl
addr16
test
push
inc
insb
mov
inc
pop
fcomps
lods
mov
cwtl
enter
lcall
mov
repnz
test
inc
cmp
xchg
mov
mov
lret
mov
lods
push
mov
je
jg
mov
rolb
fnstcw
je
mov
lret
sub
ds
dec
aad
orb
cli
pop
mov
in
clc
cmp
push
dec
jmp
imul
pushf
nop
inc
dec
cmp
fsubrl
sahf
mov
or
inc
dec
push
cmc
mov
lahf
cmp
sbb
mov
mov
in
ss
jecxz
dec
add
push
xor
out
popa
ljmp
cmp
addr16
jno
mov
sbb
aas
add
cmp
aad
pop
pop
lret
mov
clc
loope
inc
add
jo
inc
lea
push
std
push
sbb
mov
addl
and
xorl
and
test
or
inc
jmp
bound
insl
pop
adc
xlat
arpl
sub
mov
dec
test
loop
outsb
sbb
icebp
push
cld
aam
sub
lret
xor
sub
sbb
scas
lcall
lods
mov
push
mov
inc
outsb
and
mov
mov
xor
loope
fbld
call
rcl
outsb
or
jmp
or
stc
xor
xchg
inc
lea
xor
loop
stc
and
xor
adc
xchg
loop
je
push
aad
lea
ret
jle
leave
or
insb
aas
xlat
stos
into
push
into
movsl
mov
test
gs
call
push
mov
stos
jns
sbb
movsl
dec
clc
mov
pxor
dec
xchg
mov
sbb
cmp
jmp
push
xchg
inc
andb
mov
mov
adc
test
pop
inc
aaa
test
add
jo
out
dec
pop
dec
sub
fsubrl
sub
loop
repnz
add
cli
push
xchg
mov
insb
popf
popf
fiaddl
es
in
inc
push
outsb
jo
mov
insb
push
aaa
mov
rep
push
cmp
mov
dec
add
and
pop
xor
xchg
mov
pop
mov
int3
sbb
sbb
adc
leave
lret
fistpl
sbb
push
pop
mov
addl
test
sahf
les
pop
or
lcall
sub
adc
insb
fistpl
xchg
mov
push
cmp
loop
mov
or
sbb
lods
mov
aaa
out
nop
out
fnstsw
inc
cmpsl
aas
lret
sarl
scas
jno
sbb
test
out
jge
cld
fcomp
out
inc
test
test
sub
or
addr16
dec
push
jno
mov
int3
xor
mov
stos
pop
aaa
test
sbb
pop
fdivr
jns
cmpsb
fcomi
dec
fsts
test
adc
mov
sbb
jnp
fucomip
sbb
sub
push
mov
stos
inc
out
data16
enterw
cltd
sbb
pop
cmp
into
xor
mov
je
cltd
push
mov
dec
fs
jb
push
sbb
fstl
xchg
cld
out
mov
cltd
cs
or
jno
fs
inc
cmpsl
xchg
jmp
xor
cmp
xchg
xchg
jne
or
jo
shrl
add
in
add
push
clc
lods
mov
cmpsb
mov
icebp
ja
cmc
out
cli
cld
pusha
dec
push
sbb
jne
pusha
aam
or
pop
int
mov
push
lock
popa
and
dec
or
int3
mov
sbb
xchg
aam
mov
dec
repnz
push
lret
jmp
call
fwait
push
and
mov
cmp
jg
icebp
pusha
in
rorl
pushl
in
lret
stc
outsl
insl
sbb
inc
jge
and
es
hlt
hlt
jp
cmpsb
inc
icebp
lods
pop
mov
xchg
inc
push
jmp
jp
shl
hlt
cltd
mov
add
pusha
and
roll
sub
aad
mov
cld
lcall
push
xchg
subl
pop
aaa
cmp
xchg
in
addr16
clc
dec
mov
pop
movsl
jne
sahf
test
cwtl
sbb
js
jno
and
repnz
push
out
xor
or
movsb
pop
movsb
je
sti
rolb
sbbl
iret
dec
scas
add
leave
sub
subb
push
mov
testb
jle
outsb
fnstsw
and
mov
or
cmp
dec
mov
neg
repz
int
test
lahf
data16
insl
add
mov
adc
and
inc
dec
cmp
out
das
mov
or
cmp
xor
push
or
or
ret
outsb
scas
ds
adc
cli
mov
es
int
mov
sub
scas
cmp
xchg
cmp
lea
sub
mov
mov
call
movsl
iret
fcom
sub
xchg
test
arpl
push
jp
xchg
insb
in
dec
and
outsb
int
or
xchg
adc
xchg
jmp
jno
jle
inc
inc
jge
mov
rcrb
ficoms
adc
aaa
sub
gs
out
aad
fs
xor
cmp
inc
dec
sub
pop
adc
and
dec
inc
test
pop
sbb
test
xor
inc
data16
loop
mov
out
xchg
xchg
icebp
lcall
lods
and
loopne
out
mov
push
ljmp
shrb
dec
xchg
cmc
cmp
inc
cmp
lret
xorb
imul
adc
rcl
aad
addr16
mov
pushl
push
push
pop
mov
mov
jne
in
test
sbb
cld
xchg
xchg
int3
and
mov
push
adc
jne
cs
adc
jl
aas
in
fildl
inc
xor
sub
pushf
push
aas
subl
sarl
cmp
popa
mov
add
xlat
sbb
mov
sbb
adc
ds
rorb
movsl
sahf
addr16
jne
adc
sub
stc
mov
pop
cld
outsl
mov
push
push
cwtl
mov
xchg
addl
ficomps
cmp
inc
dec
aas
rorb
sti
sub
rolb
lods
imul
add
cmp
push
fistpl
scas
add
push
int
ret
addr16
add
nop
mov
adcl
inc
ficoml
adc
dec
lret
xchg
mov
xchg
in
lds
jno
shrl
or
jno
pusha
inc
jbe
fwait
pop
bnd
adc
xchg
insb
mov
into
pop
pop
xchg
sbb
adc
sbb
dec
in
stc
cmpsl
jg
insl
inc
mov
xchg
aas
das
outsl
pop
sbb
int3
pop
jb
je
mov
adc
stc
jns
loope
jns
sbb
xor
pop
stos
fyl2x
jmp
xor
jnp
mov
add
xchg
cmp
test
stos
cli
in
fstpl
push
lret
adc
xchg
aas
jmp
jp
arpl
inc
es
mov
lret
sub
iret
pop
in
pop
fwait
mov
inc
dec
fcom
addb
pop
fldenv
cmpsl
inc
adc
and
jne
or
insb
es
inc
cmpb
pop
dec
adc
cmp
or
arpl
fwait
pcmpeqd
pop
pop
mov
cmp
or
mov
pushf
inc
xchg
mov
int
jbe
mov
es
pop
cmpsl
fisubrl
in
adc
in
jb
xor
stos
ds
ja
shlb
ret
cmpsb
push
or
aad
scas
mov
mov
fldt
mov
jle
mov
or
mov
dec
flds
jp
sti
cli
cltd
push
sub
sub
iret
subb
sbb
out
adc
lret
lds
lock
jmp
in
repz
push
inc
repz
push
jbe
lods
pop
lods
pop
jne
xchg
mov
mov
pop
inc
cmc
and
inc
push
pop
cmpsl
shll
sahf
andl
std
lret
jle
add
push
repz
mov
inc
imulb
cltd
hlt
mov
aaa
aas
xor
fistpl
test
jo
adc
dec
and
cmp
sbb
je
loopne
jmp
movsl
dec
cld
icebp
jnp
mulb
mov
xor
cmpsb
sub
int
xchg
fs
pop
fcomps
pop
js
std
or
jbe
dec
popa
push
sbb
inc
cmp
pop
jae
int
popa
daa
and
sub
cmp
pop
and
loope
in
mov
fisttps
addr16
sub
push
and
xor
out
push
jbe
cmp
add
ljmp
sahf
xchg
cmp
jbe
or
fcomip
mov
adc
inc
jnp
call
lret
subl
xchg
lock
out
arpl
loopne
into
dec
adc
jle
xchg
into
sub
int3
mov
fidivrl
sbb
push
aad
pop
call
and
jge
pop
movb
jb
pop
in
out
inc
cmp
ljmp
sbb
pop
inc
and
cmp
shll
ds
xchg
adc
sbb
das
clc
xchg
lods
jmp
testb
push
pop
add
cmpsl
sub
xchg
pop
lock
xchg
lcall
std
fcompl
jns
jae
and
roll
shll
enter
lock
pop
pop
popf
iret
mov
or
jbe
jo
mov
jmp
outsl
call
mov
jp
xchg
lock
mov
call
mov
dec
cwtl
hlt
das
push
das
mov
jno
adc
sbb
push
ds
adc
mov
test
stos
daa
xor
nop
out
pop
jne
mov
xchg
xor
jae
test
pop
jp
cmc
out
js
sarl
adc
sahf
xlat
out
aad
sahf
imul
cld
fwait
lods
mov
cmp
xchg
out
subb
add
fldcw
iret
sbbb
pop
cmpsl
fdivrs
dec
ror
inc
xchg
stos
push
mov
and
mov
icebp
jo
cmp
sub
or
popf
adc
fdivl
iret
push
mov
pop
movups
mov
lcall
sbb
xchg
push
xchg
cmp
mov
movsb
fiadds
mov
jne
repz
and
dec
xor
pop
int
push
dec
mov
sbb
call
nop
jp
negb
xor
shll
loope
loop
or
loop
push
pushf
inc
xor
pop
adc
cs
mov
jle
bnd
sti
mov
stos
jb
cmp
fwait
inc
adc
cmp
test
jg
push
add
push
out
fs
aad
pushf
and
inc
mov
pop
aam
arpl
fwait
push
jmp
cwtl
mov
test
or
in
jmp
sbb
jmp
mov
inc
sbb
sub
sub
jnp
dec
subl
out
mov
sahf
adc
xlat
lock
dec
ds
adc
ret
mov
xor
rol
jg
es
mov
fstp
int
outsl
fidivrl
testb
xchg
ret
cmp
fs
push
xchg
push
enter
cmp
lds
adc
or
sahf
lea
push
outsb
add
lahf
pop
lea
repnz
pop
ja
ja
insb
inc
lods
jae
dec
sub
inc
sbb
test
xor
jl
aad
and
mov
push
sub
inc
xlat
xor
das
movsl
or
push
dec
mov
xlat
jmp
addr16
sub
dec
movsb
lods
lods
jl
jns
mov
sbb
nop
pop
pusha
repnz
aaa
and
xor
xor
sbb
dec
subb
xchg
mov
scas
dec
jle
ja
dec
xor
lret
jmp
stc
inc
ss
insb
adc
aaa
lcall
fs
and
fdivl
mov
pop
insl
pop
cmp
lret
outsb
jmp
shlb
sbb
mov
inc
cwtl
mov
jnp
inc
jecxz
mov
xor
mov
sahf
lret
push
jecxz
pop
sbb
lea
cmp
and
lock
jae
inc
int
je
daa
jge
inc
sub
pop
das
outsl
mov
vpsllw
addb
stc
out
aam
les
xchg
dec
sub
idivl
xchg
mov
sahf
add
fwait
lcall
pop
dec
mov
sub
imul
enter
jne
mov
call
jge
mov
xor
out
xor
sbb
xchg
dec
dec
outsb
pop
fistpl
or
jbe
lret
sub
pop
call
inc
testl
mov
jo
mov
jb
add
jnp
mov
mov
push
and
cmp
add
ror
cmc
into
pop
into
jo
xor
lcall
loope
mov
sbb
pop
emms
es
and
jo
and
ret
mov
sbb
les
sti
mov
inc
dec
pop
stc
scas
shufps
pusha
ds
pop
cmc
mov
mov
inc
mov
cltd
sub
xor
push
push
add
mov
std
push
or
lea
iret
dec
lea
xor
xchg
push
test
lea
adc
sub
negl
inc
xlat
inc
xchg
fistpl
pop
add
cmp
jb
cmp
xchg
pop
cltd
jno
popaw
sbb
sub
xlat
std
jae
push
imul
pop
dec
out
and
push
push
mov
pop
jno
aaa
pop
repz
nop
mov
xchg
aam
inc
mov
pop
into
jnp
fistps
fbld
xor
inc
jmp
jge
and
aam
in
mov
pop
jmp
pop
or
xchg
inc
fwait
int
fiaddl
mov
pop
inc
fs
iret
add
push
enter
jno
xor
mov
iret
arpl
pop
fnstenv
lods
mov
adc
or
pusha
xchg
loop
js
pop
fisubrl
jne
push
add
inc
xlat
fcmovne
xchg
mov
lds
push
sub
push
cld
cmpsl
mov
dec
mov
jae
push
test
bound
sbb
les
and
jecxz
or
test
mov
xor
mov
mov
mov
scas
jns
mov
sub
icebp
mov
js
das
sub
xchg
divl
adc
stc
lret
lock
mov
xor
sbb
push
pop
ret
fisubrs
icebp
shll
sub
push
fstpt
mov
cmp
push
xor
dec
pop
or
add
jb
sub
xorl
out
push
sub
mov
int3
mov
mov
mov
cld
lahf
adc
cvtps2pd
inc
mov
sbb
or
out
ds
or
xlat
pop
mov
std
divb
xor
cmpsb
in
cwtl
addr16
cwtl
inc
xchg
in
test
aaa
les
and
pop
adc
scas
adc
mov
int
sbb
xor
mov
dec
cld
decb
out
dec
in
in
aam
aas
xor
dec
int3
cmp
dec
es
popf
in
arpl
clc
xor
push
and
mov
outsb
popf
sbb
or
sub
hlt
sbb
inc
sti
sub
lcall
fwait
mov
push
es
mov
or
push
sub
testb
xor
insl
cs
mov
mov
fildl
mov
adc
or
mov
sub
popf
cmc
js
or
or
push
subb
repz
pop
jno
lret
mov
mov
dec
outsl
lret
jo
adcl
pop
push
pop
push
xor
jnp
mov
decl
insl
sub
jae
sbb
add
stc
es
lods
in
adc
dec
in
stos
in
ja
cld
add
jns
adc
shrb
les
dec
cld
xchg
jno
dec
es
jl
pop
jmp
add
pop
xchg
mov
pop
xchg
mov
mov
adc
loopne
push
ss
movsb
mov
je
push
cmpb
ret
add
addr16
fnstcw
iret
hlt
mov
jo
daa
pop
std
int3
mov
mov
das
cmp
in
cmp
rep
cmp
dec
adc
lods
inc
inc
shl
xor
stc
gs
iret
or
pop
xlat
mov
in
push
jb
xor
sbb
pusha
and
push
and
hlt
xor
sub
ja
adc
cmc
addl
sbb
xor
inc
cwtl
xchg
mov
ret
jp
orb
adc
filds
stos
test
jg
jno
lds
iret
xor
xor
xchg
inc
push
sub
and
cmp
outsl
mov
dec
lock
cmp
fsubrp
adc
xchg
rorl
addl
test
aad
repnz
fsubrl
ficomps
pushf
in
rcr
mov
subb
lock
inc
pop
jmp
sub
sahf
arpl
fldl
into
ret
sbb
loope
iret
pop
iret
mov
sarb
or
sub
mov
sub
cmp
cmp
in
mov
add
lahf
sbb
enter
jne
jae
cmpsl
xchg
mov
jecxz
push
cmp
push
in
push
lahf
pusha
fimuls
pop
in
fmuls
mov
in
adc
fmuls
ljmp
addl
mov
inc
cmp
testb
outsl
pop
jecxz
inc
cmpsl
mov
xchg
adc
rclb
xor
jb
mov
in
js
ss
mov
outsb
lods
sbb
jns
pop
movsb
and
stos
push
rcrl
cli
test
fistl
cmp
xchg
dec
aaa
nop
xor
cmp
and
stos
add
in
and
adc
hlt
mov
loope
lahf
inc
fsubl
loop
jb
fwait
out
pop
pop
cmp
leave
add
pop
xchg
mov
xor
dec
pop
call
aas
aaa
sahf
dec
lret
sub
mov
xchg
xor
lock
fdiv
daa
dec
imul
icebp
lcall
xlat
mov
sbb
mov
adc
scas
pop
inc
fsubs
add
mov
fcoml
orl
adc
das
nop
pop
sbb
insl
add
jle
and
adcl
fsubp
and
xchg
shl
scas
clc
mov
arpl
push
push
in
lds
xor
sub
mov
dec
test
cmc
mov
popf
cmpl
lds
mov
cmp
aad
jmp
in
push
mov
sbb
lret
lret
or
and
inc
pop
cltd
xchg
jg
out
xor
push
and
fs
out
mov
icebp
imul
pop
adc
jns
leave
aaa
pusha
fwait
daa
mov
push
pop
std
and
cld
jle
lods
xor
test
and
das
jmp
dec
mov
mov
int3
add
or
pop
sub
imul
xchg
cmc
or
faddl
std
xchg
or
xorb
rorb
cmp
lcall
and
out
mov
addb
mov
push
int3
mov
or
outsl
adc
fimull
xchg
sti
inc
xorl
popa
xchg
out
add
pop
jg
sbb
mov
dec
lds
mov
movsl
mov
ret
pushf
add
push
sbb
cld
xchg
push
jbe
jnp
jne
negb
sub
or
mov
out
sti
loope
mov
sbbb
addr16
ret
mov
jb
mov
pop
push
cmp
or
repz
ja
mov
mov
sarl
pop
lret
leave
mov
scas
pop
movsb
mov
fwait
xor
js
sarl
enter
xacquire
popa
xor
xchg
inc
sub
xchg
sbb
sbb
push
inc
stos
jl
outsl
out
loop
jo
fildll
inc
mov
inc
and
and
sbb
fs
mov
adc
stos
xlat
test
arpl
xor
cmp
jb
cwtl
mov
inc
inc
repz
test
or
pop
push
inc
clc
sub
sbb
repz
fimuls
test
dec
repnz
shrl
ja
push
lock
sub
sub
idivb
pop
clc
rolb
lods
fs
xor
xchg
lahf
mov
cmp
cmp
cmp
ds
imul
sub
repz
cwtl
mov
push
jae
mov
push
pop
sahf
mov
mov
test
jmp
inc
sbb
sbb
mov
push
shlb
sbbl
xor
inc
int
sahf
sbb
pop
sbb
xchg
cmp
cmp
or
je
mov
movsl
inc
push
push
xor
jno
pop
mov
fiaddl
dec
inc
sub
xor
scas
fsubp
and
lahf
orb
xchg
and
xor
push
add
aas
mov
dec
arpl
out
or
out
loope
inc
cmp
xchg
pop
daa
jmp
lret
popa
cmp
lds
mov
cli
cmpl
fcompl
xor
adc
jge
cmp
inc
or
jae
xchg
into
cmpsb
lea
repz
cld
inc
mov
scas
shll
scas
sbb
mov
cmpsb
out
out
or
cmpsl
insb
jae
xchg
cmp
mov
lods
shrl
and
fnsetpm(287
cmpsb
stos
pop
xchg
mov
aam
mov
push
dec
cmp
stos
out
popf
jnp
loop
loop
adc
sbb
daa
pop
xchg
leave
pop
add
out
mov
int3
movl
bound
cmpsl
cmp
xchg
gs
adc
push
mov
popf
into
leave
xor
in
cmpl
jp
adc
pop
data16
mov
jg
mov
das
jo
xor
arpl
icebp
mov
sub
arpl
sub
cld
inc
dec
sbb
test
or
mov
mov
ja
and
imul
or
mov
je
mov
push
enter
or
adc
pop
cld
sbb
test
or
jg
or
std
int3
mov
out
int3
xor
jo
mov
cmpb
cmpb
icebp
push
ret
cmp
adc
idivl
fmull
jbe
dec
inc
xchg
enter
mov
test
cmpsl
lods
aaa
popa
sbb
add
sub
adc
add
sbb
popf
loope
push
out
ror
mov
push
sub
or
xor
inc
inc
and
arpl
add
lcall
stos
rcll
cmpsb
mov
and
stos
imulb
sbb
outsl
mov
pusha
cmp
xchg
stos
cmp
adc
fnsave
fwait
int
ja
cmp
dec
fsubrs
dec
xchg
pop
mov
push
insl
repz
push
cmpsb
andl
or
dec
cmp
dec
xor
xchg
add
icebp
mov
test
mov
lret
mov
xchg
outsb
les
xlat
mov
les
outsb
and
lods
cmp
call
dec
or
out
dec
add
cmp
jp
hlt
and
dec
sub
jmp
mov
aam
and
inc
int3
inc
mov
int
roll
push
or
mov
out
testl
mov
stos
jmp
imul
repz
mov
xchg
pop
movsl
jno
xchg
loopne
rolb
andb
jg
adc
cmp
jle
push
dec
cmp
push
imul
cmp
mov
xor
pop
sti
cmpsb
or
or
testb
int3
in
adc
in
movsl
jmp
add
outsl
in
fcomps
jbe
mov
enter
in
mov
aam
add
test
dec
popf
sbb
sub
cmpsl
sbb
repz
mov
cmp
repz
mov
ret
push
pop
and
xchg
pop
testl
jo
aad
push
shlb
xlat
shll
mov
xchg
inc
test
xchg
inc
cmp
mov
xchg
jne
rclb
outsl
or
cld
jecxz
pop
mov
lods
adc
dec
jae
xor
cwtl
lds
sub
xchg
scas
xchg
push
cs
int
inc
popa
jmp
dec
xor
push
pop
sub
or
xor
add
add
cld
repz
xchg
test
cmc
dec
sbb
in
pop
and
cmp
push
enter
outsb
aad
adc
push
push
sbb
pop
or
jmp
mov
cli
hlt
push
outsl
sub
sub
mov
test
std
xchg
test
cmp
adc
scas
shll
mov
fwait
mov
ja
int3
sbb
inc
jmp
rcrb
fcmovnu
aaa
inc
push
xchg
bound
sbb
insb
scas
in
jbe
inc
push
mov
dec
repnz
or
pop
lret
push
cmp
inc
inc
mov
je
cmpsb
or
fnstsw
push
mov
xor
aam
jp
nop
jae
push
mov
fcmove
outsl
add
ss
cli
bound
xchg
push
aad
mov
inc
and
ret
sub
fstps
mov
xchg
adc
pop
jle
cmp
dec
xchg
xchg
cmp
cmp
lret
mov
mov
ret
mov
enter
icebp
out
movsb
scas
sub
mov
ucomiss
mov
mov
cmp
dec
inc
mov
sub
mov
movsl
loop
jne
lds
scas
sbb
pop
adc
cltd
inc
test
divb
jg
and
adc
imul
adc
inc
mov
sub
sbb
nop
dec
mov
imul
dec
mov
inc
pop
mov
xor
push
and
dec
repnz
mov
dec
add
cwtl
lds
aam
xchg
mov
xchg
or
shll
ret
sub
dec
cmc
push
fldt
outsb
ret
sbb
inc
push
sub
adc
mov
ds
out
push
xchg
mov
je
ret
dec
mov
mov
xchg
lds
jg
push
or
fstl
xlat
pop
jno
mov
jl
mov
jno
loope
mov
push
loope
insl
aaa
xor
sti
add
mov
sbb
or
sub
pop
adc
mov
push
mov
and
jne
enter
cmp
ret
and
sbb
xor
pop
mov
add
js
out
jge
sbb
pop
and
jmp
sbbb
stc
je
sub
nop
sub
dec
push
movsl
enter
cmp
inc
das
cmp
mov
in
dec
inc
movb
stc
inc
shll
shrl
lods
fcom
xchg
mov
sbb
mov
pop
add
pop
pushf
sub
sbb
add
xchg
pop
mov
add
pop
scas
outsb
and
aaa
out
sbb
std
pop
jbe
movsl
dec
and
rclb
xor
cmpsb
lods
cmc
cld
test
lahf
lock
rorb
loope
repz
dec
mov
nop
and
jmp
sbb
test
sub
test
adc
aas
jg
push
push
xchg
dec
xchg
lods
je
and
or
mov
inc
out
dec
sub
dec
ret
aas
scas
mov
sbb
push
jae
push
jg
stos
cmpsb
xor
or
pop
mov
dec
adc
xor
jns,pn
je
aas
lods
jg
sub
jmp
mov
fisubs
test
out
je
scas
into
mov
fwait
pushf
dec
int3
test
mov
jns
mov
addr16
es
mov
mov
outsl
enter
or
in
rcll
jnp
cmp
decb
mov
mov
int
outsb
mov
xchg
cmp
adc
pop
das
push
aad
stc
cmpsl
dec
lret
pop
xor
test
vpsubusw
jp
mov
pop
sbb
mov
dec
ja
cli
mov
insb
jae
push
or
in
cmpsl
arpl
ljmp
and
ret
rcll
cmpsl
sbb
jbe
gs
sub
test
mov
jo
xlat
xor
mov
lret
cmp
pop
das
je
into
jmp
xor
icebp
cmp
insl
in
js
ds
pop
dec
outsb
out
mov
out
shl
ficoms
pop
arpl
loop
popf
ja
pushf
test
fdivrl
ss
pop
mov
clc
sub
mul
inc
enter
loopne
not
int
pushl
inc
mov
and
test
add
andl
mov
mov
enter
iret
das
xchg
pop
ss
sbb
mov
out
xchg
lock
xchg
inc
nopl
push
mov
stos
jmp
mov
and
mov
sti
arpl
push
xchg
adc
enter
leave
pop
sbb
imul
addr16
jle
jle
sub
fsub
xlat
push
fcoms
and
das
inc
pusha
add
inc
mov
or
xchg
jno
addb
adc
test
pop
inc
adc
and
xor
jnp
or
cmpb
mov
adcl
add
dec
push
dec
dec
fucomi
pop
push
pushf
pop
inc
sbb
cmpsb
aam
gs
xchg
xchg
inc
jp
pusha
jg
cmp
aad
mov
mov
push
out
jne
shl
mov
rorb
lods
out
popf
mov
fidivl
cli
int3
sbb
or
push
xchg
push
mov
jecxz
arpl
mov
es
and
fistl
dec
xor
xor
inc
test
adc
mov
popl
pop
out
mov
fildl
aas
or
jo
inc
pop
and
cld
jo
xchg
hlt
test
mov
xor
xor
popa
ja
add
es
leave
jmp
cli
add
ds
mov
fsubl
xchg
stos
roll
and
xor
sub
add
aad
ss
outsb
adc
je
das
dec
shll
fistpl
xor
mov
pop
cld
or
xchg
movsl
rcr
imul
lock
mov
cmpsb
fcoml
mov
movsl
xor
loopne
push
call
inc
hlt
jl
add
push
mov
addr16
pop
push
divl
fnstenv
push
mov
dec
pop
int
push
sahf
imul
clc
jg
aas
adc
jbe
xchg
cmpl
dec
push
fwait
cmc
imul
mov
push
push
in
push
xchg
mov
faddl
xchg
popl
cmpsl
outsb
shlb
lods
lea
je
dec
push
push
sub
cmc
loope
adc
dec
dec
das
adc
fstps
push
cli
xor
dec
scas
frstor
sbb
test
in
mov
int3
push
mov
int3
test
mov
shl
fbstp
mov
cltd
int
or
shll
dec
and
push
sub
cmp
stos
mov
fwait
cmc
cmpsb
xchg
sub
pop
cli
jnp
xchg
inc
pop
push
into
jo
sbb
mov
lods
xlat
mov
clc
add
pusha
xchg
mov
add
pop
mov
repnz
pop
xchg
jae
cld
popf
push
pop
insb
mov
and
pop
dec
in
js
or
sbb
add
cmpsb
mov
je
mov
ret
adc
ss
ror
jno
sbb
sub
gs
fwait
xchg
xlat
add
inc
pop
dec
inc
js
les
adc
loopne
jbe
pop
xchg
scas
mov
mov
pop
clc
inc
repz
fistl
imul
jnp
adc
test
mov
pop
addr16
test
mov
es
sub
aad
loopne
fiaddl
and
out
std
inc
out
lods
or
pop
jmp
cld
jge
jmp
rdpmc
outsb
push
ret
fcmovb
rorb
xchg
enter
out
test
je
sub
scas
dec
mov
fbld
fstp
shrl
sar
rep
lods
xchg
mov
jmp
in
adc
daa
pop
xchg
xor
dec
inc
add
xchg
subb
or
mov
mov
xchg
bnd
or
cli
mov
into
iret
sbb
mov
cmp
loope
xchg
lcall
iret
bound
subl
jnp
mov
dec
loopne
fcmovnbe
aad
rorb
in
aas
jb
fstl
insl
jmp
lcall
or
adc
rcr
xchg
jp
add
xor
inc
mov
mov
inc
pop
call
jo
dec
adc
test
mov
jno
stos
fwait
and
rolb
cmp
pop
pop
das
jnp
mov
push
mov
add
in
xchg
push
icebp
sbb
aam
sbb
sbb
lock
cmp
mov
daa
lret
les
in
imulb
loopne
dec
jle
xchg
into
mov
xchg
sbb
or
fs
adc
fsubrl
xor
mov
out
sbb
mov
jae
adc
cmp
and
and
lret
stos
jne
cmp
sbb
divl
mov
aaa
insl
ss
inc
loop,pn
push
adc
enter
or
in
dec
push
cmp
into
ficomps
or
jl
iret
daa
push
and
sub
or
cltd
inc
push
push
movsb
pop
leave
fimull
push
ret
sbb
or
xchg
loopne
jno
cs
jge
push
or
pop
fwait
inc
out
lcall
ret
dec
pop
cmp
dec
push
xor
loop
add
sar
pop
mov
pop
sub
fdivl
movsl
cltd
mov
lds
jl
movsb
movsl
add
xchg
scas
cltd
add
sbb
mov
aam
jns
cmc
inc
mov
fsub
enter
lock
mov
sub
xlat
xchg
pushw
outsb
sbb
imul
mov
inc
mov
pop
jle
mov
fidivrs
por
xor
sub
xor
aam
jae
mov
pop
jns
iret
out
jmp
dec
lcall
stos
pusha
and
cmp
push
cmp
push
adc
sub
jno
int
cmp
into
sbb
in
das
imul
xchg
fisttpl
cmp
pop
lahf
push
movb
adc
jne
lahf
mov
ret
sarl
jb
in
xchg
inc
pop
xor
jmp
ds
test
mov
sub
jg
subl
push
leave
mov
sub
test
ja
outsb
jo
push
jle
lods
in
ljmp
cmp
jg
cmc
pop
imul
test
testb
cs
xchg
inc
jge
addb
cli
or
es
aaa
movsl
inc
xor
xor
mov
pop
out
notb
or
rorb
stos
mov
xchg
call
sub
push
inc
movsl
mov
insl
cmc
jno
cli
push
mov
push
adc
dec
xor
test
push
jmp
mov
pop
jb
ficoml
push
xor
mov
push
push
clc
jge
xchg
and
cli
insl
pushf
jb
pop
add
in
lods
outsl
add
aaa
mov
test
inc
dec
movsb
loop
lret
insl
push
daa
inc
insb
xor
mov
and
lahf
in
sbb
pop
adc
shll
sarb
mov
mov
test
incl
inc
sbb
mov
aas
push
inc
add
jo
out
jge
lods
mov
jae
outsb
or
sahf
dec
and
mov
push
in
adc
mov
pop
shlb
dec
push
dec
dec
lret
mov
sub
pushf
ja
push
and
xchg
cmpsb
or
outsb
cmpsl
add
inc
jo
fstpl
and
sub
dec
daa
and
pop
icebp
loop
sub
xchg
out
fucomip
xor
rcr
rorl
lret
push
repnz
xor
leave
cmp
mov
pop
and
xor
inc
movsb
lock
lahf
lods
or
xchg
adc
xchg
aam
clc
rorl
shl
fisttpll
in
push
iret
outsb
fs
mov
test
push
add
and
sub
data16
cmp
inc
push
sbb
ds
push
loop
adc
testb
jle
aad
iret
mov
mov
cmp
fucomi
enter
jae
adc
hlt
imulb
sbb
fwait
aaa
scas
repnz
movsl
imul
dec
inc
pop
mov
sbb
dec
sahf
mov
insb
xor
xchg
mov
sbb
inc
arpl
adc
ds
mov
daa
bound
in
xchg
xorb
aad
mov
scas
or
mov
shr
popa
dec
push
out
ds
cmp
es
push
inc
negb
xchg
inc
cmp
jbe
push
ja
push
or
mov
cmpsb
jae
cs
in
scas
popa
xchg
xor
sbb
add
adc
aam
adc
leave
int
fldcw
lret
js
cmpsb
mov
dec
mov
jg
mov
pushf
int3
call
jecxz
pop
cmp
push
push
mov
sbb
or
aam
sbb
cmc
scas
inc
orb
push
inc
mov
cmp
xor
inc
mov
movsl
push
push
add
inc
fsubrs
in
stc
add
push
sub
mov
push
sub
mov
ljmp
pop
js
bound
sbb
leave
sahf
mov
xor
cmpsb
fs
ret
stos
nop
add
xor
jbe
and
aam
stc
mov
pop
in
push
push
pop
sub
mov
stos
lods
lods
add
xchg
fildll
nop
lret
movsl
inc
cmp
ret
int3
dec
shll
in
xchg
and
cld
pop
sub
mov
push
dec
ret
icebp
int3
or
push
xchg
pop
xchg
aam
push
xchg
pop
mov
dec
inc
add
xor
popa
sbb
ret
fimuls
xor
pusha
inc
ret
mov
xchg
sbb
mov
mov
jecxz
call
sbb
xchg
xchg
scas
inc
xchg
or
add
outsb
jo
and
mov
es
xor
mov
arpl
aas
movsb
imul
add
repnz
lock
xchg
xor
jl
xor
inc
in
sbb
mov
pop
push
mov
rorb
sti
pusha
or
in
cmp
stc
outsl
fcomi
inc
mov
inc
shl
addl
cmpsb
mov
lods
push
pop
sbb
xor
and
adc
mov
sub
mov
in
pushf
push
rclb
lgs
in
fistl
mov
pop
ret
add
add
sahf
daa
cmpsl
push
sti
jno
in
test
mov
int3
iret
mov
ret
dec
cmpsl
ljmp
jne
mov
inc
inc
cmpsb
sbb
or
test
cmp
es
mov
fwait
xlat
xor
stc
js
jnp
adc
rcr
mov
jnp
mov
jp
add
nop
orb
aad
xchg
mov
in
lret
adc
aas
fsubl
dec
repz
fbld
or
jmp
mov
push
mov
adc
jno
lret
dec
stc
mov
mov
into
sahf
pop
bts
add
sbb
mov
mov
or
adc
adc
jg
fnsave
add
add
mov
mov
fwait
addl
dec
ret
sbb
mov
add
mov
ficoms
addr16
mov
xchg
enter
shrb
out
mov
loopne
cwtl
std
fmuls
addr16
repz
fdivrs
jle
and
ja
mov
fsubr
cltd
in
xchg
lret
out
xchg
hlt
mov
stos
ret
sub
ffree
imul
fidivrl
inc
movsl
jmp
sbb
mov
rcr
out
xor
out
dec
and
rcrl
dec
popf
jg
outsl
dec
adc
dec
ficomps
popa
pop
mov
dec
jg
or
mov
lds
out
mov
adc
fwait
lods
mov
push
pop
jns
push
insb
and
lcall
push
xor
iret
sbb
mov
push
mov
cmp
loopw
xor
out
sti
mov
adc
insl
pop
inc
aas
int
push
inc
cmp
rorl
fmuls
in
cs
xlat
sub
cwtl
jno
ds
and
jge
push
cmc
jb
loop
in
filds
cld
stos
xor
mov
pop
shl
in
xlat
inc
call
push
fadds
clc
pop
adc
or
out
jecxz
inc
cmp
aaa
mov
cltd
mov
adc
dec
sbb
mov
dec
xor
and
add
cmp
clc
fidivs
xchg
ffree
sub
loope
negb
mov
sti
in
rcll
pop
mov
je
sarb
or
movsb
mov
mov
mov
push
sbb
jne
sbb
idivl
sbb
lods
xchg
and
dec
jae
lods
xor
cs
add
sete
push
xchg
push
std
bound
lcall
js
sbb
xchg
shll
adc
mov
imul
sbb
fimull
pusha
jp
inc
sbb
test
xchg
inc
push
mov
out
jmp
out
add
pop
push
adc
bound
jmp
mov
jmp
ret
mov
vmread
clc
push
les
aas
xchg
pop
pop
data16
nop
xchg
rcrb
ret
xor
js
mov
insl
sub
loop
mov
jecxz
push
xchg
in
add
mov
and
inc
data16
push
notl
xchg
mov
ss
dec
or
insl
dec
je
dec
in
mov
loope
mov
clc
adc
add
mov
out
mov
sub
dec
shlb
mov
cmp
loopne
or
inc
xor
lcall
jae
fists
leave
or
or
push
lock
dec
popf
jmp
or
push
stc
cltd
mov
and
lds
into
pop
scas
or
inc
jmp
repnz
xor
pop
add
ljmp
mov
mov
sti
push
xchg
repnz
fbstp
pop
sarl
clc
mov
sub
or
pop
popa
ret
mov
inc
shrl
das
cmp
stc
add
outsl
subb
lea
sbb
xor
lods
mov
addb
cs
add
jb
aas
jae
fsubrs
in
repz
add
ja
add
sub
addr16
les
insl
cmp
into
stos
xchg
mov
daa
sti
stc
or
outsb
and
pop
jo
or
sub
dec
fcomps
xchg
fnstsw
loop
cmp
aas
and
inc
fs
andl
sbbb
and
jge
rcr
add
mov
jb
mov
ret
jle
imul
out
pushf
dec
mov
mov
cmc
jno
repnz
jmp
mov
xor
das
arpl
jp
orb
es
mov
filds
cwtl
repnz
in
imul
ret
add
lret
mov
dec
cmpb
jae
lds
rorb
cwtl
repz
mov
or
sti
or
cwtl
fildl
inc
and
lds
rorl
or
adc
rcrb
push
das
arpl
lcall
leavew
push
add
ret
or
jge
arpl
sub
hlt
xlat
sbb
insb
mov
shlb
mov
icebp
mov
and
popa
dec
sbb
je
decb
sub
cmc
xchg
sub
push
lret
scas
orb
inc
outsl
xchg
stc
outsb
pop
movsb
pop
cmp
mov
lods
cmc
in
adc
push
fildll
cmp
popf
adc
pop
je
lahf
ds
lret
pop
sbb
out
dec
test
ljmp
and
imull
jo
push
pop
pop
sbb
push
push
and
iret
imul
in
inc
fmuls
sbb
or
push
les
out
push
push
xchg
lahf
and
scas
lea
inc
iret
cltd
push
jmp
jo
sbb
and
out
pusha
loope
mov
cli
lea
stc
jnp
int3
inc
scas
mov
popa
aaa
mov
loop
iret
cmp
adc
xor
testl
lds
pop
vpshufhw
mov
sub
add
pop
scas
in
popa
push
mov
lds
mov
icebp
cmp
add
pop
xchg
scas
cs
inc
jmp
hlt
inc
sbb
fcmovbe
mov
inc
inc
and
jns
xlat
inc
cli
sbb
rorl
jb
movsb
xlat
in
cs
int
aam
inc
xchg
ds
push
je
fcomps
fstpl
and
sub
ljmp
sbb
int
and
dec
sub
lahf
inc
inc
sbb
ds
mov
dec
xchg
leave
and
enter
xchg
loop
aaa
into
decb
shr
dec
lds
cli
int
mov
cmp
outsl
sbb
call
sbb
xlat
cmpsl
jl
pushf
std
addr16
stc
std
and
dec
mov
bound
pop
ret
push
push
ret
out
in
pop
mov
pop
test
scas
sbb
sbb
outsl
or
push
adc
pop
shl
dec
je
push
inc
sbb
nop
and
and
hlt
and
push
orl
mov
and
dec
outsb
das
rcll
movsl
rcll
pop
pop
popa
jns
cmp
cmc
out
cmp
add
push
fcomps
outsb
data16
push
or
adc
add
in
mov
and
xor
subl
ss
push
dec
adc
xchg
sbbl
adc
movsb
xchg
push
mov
mulb
not
jno
arpl
fimuls
insb
xor
jb
mov
leave
insl
and
mov
lods
pop
xor
enter
dec
jl
aaa
mov
mov
lods
aad
xor
cmp
cs
mov
mov
cmp
pop
es
ficompl
sub
xchg
icebp
lret
sarl
xor
xchg
xchg
outsb
jmp
and
movsb
and
in
fstps
stc
ret
push
pop
or
adc
stos
cmp
in
cli
cmp
jne
in
jae
adc
adc
cwtl
jecxz
pop
cmc
mov
out
lahf
int
mov
shll
dec
call
stos
or
mov
jg
pop
cmp
push
cld
into
push
cmc
and
clc
or
sub
cs
or
in
or
mov
and
push
cmp
xchg
lods
inc
cmp
xor
movsb
ljmp
and
mov
aaa
daa
jle
and
push
mov
repnz
jp
scas
ror
fistpll
xchg
or
sbb
inc
xchg
jmp
mov
fsubrl
xchg
lahf
cmp
fldt
loope
inc
push
arpl
movsb
cs
inc
mov
mov
pop
jnp
sarb
popf
mov
leave
xor
mov
ja
dec
xor
orl
dec
in
pop
sub
push
mov
inc
cltd
adc
iret
add
xchg
pop
jle
vcvtps2dq
add
push
cmp
cmp
pop
cmp
rcrb
testl
stc
inc
sbb
in
xchg
mov
hlt
sub
mov
imul
jb
std
sub
pop
daa
outsb
shlb
mov
movd
in
imul
test
stos
cmpsb
stos
iret
xchg
xor
push
mov
arpl
sbb
jecxz
mov
xlat
push
call
jnp
gs
adc
add
mov
lods
jp
call
stos
stc
rep
outsb
adc
add
sub
testl
das
xor
mov
decb
push
mov
or
sbb
pop
pop
int3
popa
adc
xor
test
push
mov
lcall
mov
add
sbb
xchg
lret
dec
xor
push
xor
push
ret
data16
jl
cmp
test
push
dec
jp
sbb
sub
loopne
xlat
test
setns
cmp
test
in
push
dec
sbb
std
and
std
pop
in
and
shlb
rcrl
push
xor
cmpsb
mov
jp
cmpsl
push
add
adc
arpl
shrb
cmp
in
adc
jns
test
divb
popl
and
adc
or
dec
arpl
xchg
mov
xchg
jge
add
push
lock
lods
fisubl
testl
mov
cld
imul
mov
scas
repz
mov
cmp
dec
stos
lret
bound
and
mov
xchg
iret
out
xchg
mov
lret
mov
and
mov
pop
stos
out
rclb
cmp
pop
adc
pop
jg
test
inc
fldt
pusha
cmp
cmp
daa
and
or
rcrl
fdivrs
out
loop
aas
mov
outsl
or
ret
inc
xchg
mov
jg
lret
fidivrl
repz
inc
add
mov
jbe
dec
jecxz
jb
gs
aad
pop
dec
cmp
sbb
mov
movsl
les
inc
lret
push
test
mov
mov
fistl
icebp
shrb
fcmovu
xor
pop
das
jmp
lds
pop
testb
xor
push
ljmp
iret
sbbl
pop
bound
sub
xor
fisttpll
sbb
jmp
fildl
fbstp
lret
fucomp
in
pop
lods
addl
call
inc
hlt
test
cmp
inc
mov
rol
cmp
outsl
xor
outsl
sarb
xchg
mov
or
outsb
leave
inc
stos
xor
repz
and
inc
insl
shrl
jl
out
sub
imul
pop
mov
loopne
lret
mov
icebp
jecxz
add
jmp
pushf
sub
mov
subl
popf
cmp
and
fcmovne
pop
and
lret
sti
in
stc
add
sti
leave
mov
fbld
mov
pop
ja
call
lret
je
add
cmpsb
inc
mov
test
add
jecxz
pop
int3
into
sbb
scas
out
aad
clc
push
fucomi
js,pt
lods
movl
gs
mov
cld
or
sbb
dec
inc
mov
add
sahf
ret
adc
jge
andb
inc
xchg
addr16
xor
lods
dec
fcomip
frstor
pop
jno
roll
pop
sub
sahf
mov
cltd
stos
pop
mov
mov
sbb
loop
inc
push
ret
push
lods
rclb
pop
xlat
add
mov
fmull
fildll
xchg
jne
push
mov
or
clc
and
adc
mov
mov
js
jb
fstp
inc
aaa
mov
das
push
testb
cmpsb
cwtl
popa
and
test
adc
sub
stos
into
cld
daa
fidivrs
adc
adc
ret
loopne
fistps
cmp
std
cmc
cltd
nop
lret
js,pn
movsb
mov
mov
add
push
mov
mov
dec
dec
xlat
jmp
xchg
jge
incl
push
add
jno
arpl
pop
shll
xchg
adc
push
inc
add
and
inc
mov
scas
addl
shl
sbb
lods
adc
jl
cli
loop
fisubs
pop
leave
mov
cmp
xor
pop
das
push
push
adcb
xor
aaa
jecxz
push
popf
fstps
pop
sub
imull
cmp
cmp
jae
jl
ror
div
icebp
or
outsb
add
lock
push
dec
in
pop
mov
add
stos
mov
loope
insl
mov
sti
insb
jecxz
lcall
fisubrs
cmpsl
sub
dec
loop
or
mov
inc
or
jle
pop
jge
jo
out
enter
je
mov
repz
add
and
shl
syscall
jl
ja
inc
lock
inc
jp
bound
das
data16
jl
pop
add
rorb
std
int3
leave
mov
fst
mov
outsb
rolb
mov
cwtl
enter
rcrl
push
scas
stos
jno
mov
mov
aad
ret
lods
adc
push
mov
or
push
add
cld
or
and
js
test
push
mov
xchg
mulb
js
repnz
add
inc
loopne
ljmp
sub
sti
xor
pop
orl
and
cmpsl
jb
or
xchg
sub
mov
clc
adc
into
mov
jae
add
sub
adc
out
test
cmpsl
fsubs
jne
xchg
sbb
mov
pop
imul
ds
sbb
or
inc
aam
sbb
sbb
pop
in
scas
aad
pop
push
mov
mov
push
cmp
mov
mov
pop
fildl
cwtl
mov
test
lret
iret
jmp
jbe
push
cmpsl
sbb
inc
sub
xchg
orb
push
xor
push
ja
mov
pop
imul
nop
adc
mov
mov
push
js
js
cmc
mov
cmp
xchg
fucomi
adc
lret
add
aam
pop
ja
ljmp
leave
repnz
lcall
loope
push
ffreep
xchg
stos
push
in
push
cmc
clc
sbb
adc
sbb
dec
into
push
inc
jmp
mov
ja
fs
pop
mov
push
and
mov
repnz
dec
cmp
jnp
cwtl
mov
int3
imul
repnz
mov
xlat
inc
insl
sbb
mov
shl
test
sbb
adc
push
imul
ljmp
dec
ss
pop
push
xor
stos
jmp
and
push
mov
outsl
arpl
divb
in
testl
jmp
subb
mov
sbb
sbb
fcompl
sbb
out
leave
lea
adc
inc
mov
and
mov
loopne
lret
int3
aad
test
add
or
mov
cs
mov
cmp
repz
std
jns
sbb
out
int3
cs
inc
dec
mov
cmp
lea
aas
mov
sti
xor
mov
stc
fcmovbe
sbb
fstps
lds
pop
jb
pusha
js
fistl
adc
jne
add
in
fdivs
or
sbb
mov
mov
mov
dec
mov
test
mov
in
and
jne
adc
xchg
lds
pop
movsl
add
or
out
mov
push
cs
stos
int
mov
sub
and
cmp
mov
bound
stos
arpl
push
scas
inc
sub
mov
out
sub
xchg
hlt
je
push
sub
jno
mov
std
dec
mov
iret
incl
shr
adc
push
insb
test
cli
aam
insl
test
pop
adc
xor
sbb
jecxz
push
cmp
mov
imul
fwait
loope
iret
aad
pop
mov
dec
out
loopne
or
lcall
je
jmp
and
in
lcall
in
sahf
ret
addb
dec
lcall
insb
xlat
int
fidivs
ds
xor
pop
jle
sti
and
add
in
dec
cmp
cli
rclb
push
push
mov
jg
jle
cmp
lcall
inc
inc
inc
daa
sbb
ret
pop
lods
outsl
cli
call
enter
loop
icebp
das
lds
fsubr
cwtl
pop
mov
vmovapd
test
cmpsl
mov
addr16
roll
inc
mov
dec
dec
push
cs
jns
into
ds
or
loopne
pop
das
cmpsl
jle
xchg
push
add
dec
mov
and
xchg
xor
push
jb
or
xchg
cmp
dec
pop
sub
rcrb
enter
pop
push
xchg
jp
push
das
inc
mov
shll
lret
xchg
mov
pop
leave
dec
popa
sub
enter
push
pushf
push
dec
stos
adc
mov
sub
mov
andl
daa
and
or
cwtl
xor
lea
rcll
add
cli
pop
pop
icebp
jmp
cli
xorb
xchg
repnz
pop
add
call
mov
bound
sbb
in
in
cmp
aam
mov
test
mov
jb
mov
fsubr
imul
cs
sub
mov
sbb
mov
or
jb
adc
xchg
std
pop
mov
call
loop
jle
lods
jp
jae
scas
pop
jb
adc
jecxz
jb
or
mov
mov
fistps
pop
xchg
andb
rorb
xor
ljmp
aad
ja
and
popf
cmc
js
int3
xchg
push
xor
dec
inc
movsl
add
adc
mov
or
cmpsb
pop
pop
xor
inc
lret
mov
stc
adc
cmp
jp
lahf
xchg
shlb
sub
out
and
movsb
mov
testl
mov
push
mov
dec
daa
add
mov
xchg
insl
into
adc
sbb
pop
insb
imul
pop
inc
inc
loopne
add
mov
jg
mov
inc
mov
dec
mov
in
insl
movl
mov
sbb
out
jb
inc
xchg
push
outsb
scas
lods
shlb
xchg
inc
or
mov
push
push
aam
xlat
inc
push
ret
mov
adc
shll
and
or
mov
cmpsl
testl
mov
mov
lds
xor
pop
jo
sbb
mov
dec
out
cmp
pop
mov
pop
fistps
dec
mov
into
mov
push
sub
mov
cmpsb
xchg
flds
push
pop
dec
jg
loop
dec
inc
inc
bound
add
add
aas
sti
sub
or
dec
pop
or
pop
push
lret
push
add
jecxz
mov
or
add
add
lret
idiv
jbe
call
ljmp
fbld
fldenv
in
scas
in
mov
or
push
xor
ljmp
mulb
rcl
out
pushf
repnz
mov
fwait
jl
aaa
fnsave
push
arpl
repnz
std
cld
les
mov
icebp
test
rclb
fmull
imul
fisubs
adc
xor
add
fstl
push
imul
mov
cmp
idivb
or
dec
jo
lods
shlb
aas
test
fcom
jne
sbb
sarl
inc
jg
or
or
ror
pop
jecxz
fmull
mov
movsb
iret
les
insb
cli
and
sbb
fmuls
orl
adc
loop
jbe
stos
add
test
mov
popf
adc
mov
icebp
gs
adc
xchg
xchg
adc
cli
aas
mov
or
lahf
cmc
test
push
mov
stos
mov
int
fs
cld
cld
imul
movsb
mov
fcomps
mov
xlat
sbb
pop
cld
in
and
adc
push
cmp
lahf
push
out
aad
push
lea
fists
imul
clc
out
ss
insb
jmp
cmp
cli
cwtl
ds
push
cmp
leave
insl
aam
movsl
mov
jb
scas
hlt
or
daa
xchg
jge
mulb
pop
addb
jne
or
js
sbb
testb
icebp
sbb
xlat
mov
lods
iret
dec
movsb
pop
repz
lcall
pusha
ret
adc
lea
das
in
orb
and
adc
mov
lret
mov
push
arpl
dec
clc
mov
xor
dec
lods
jae
mov
mov
fs
push
sbb
push
shlb
pop
mov
or
inc
imul
loop
push
or
mov
movb
jbe
imul
lret
sbb
and
popf
arpl
jo
pop
sbb
dec
xor
repz
ljmp
or
push
fdiv
xchg
out
add
in
lret
int
cmp
ret
hlt
fistps
mov
lret
sbb
imul
outsl
pop
xchg
mov
jbe
icebp
mov
xlat
in
push
lcall
scas
ret
fsubs
popf
pushf
pop
fsubr
cmpsb
js
stos
xchg
mov
lods
movb
fwait
lods
xor
jns
mov
lods
aaa
inc
sub
cmc
pop
sbb
xor
js
test
and
lds
add
jge
cmp
dec
mov
ljmp
cmp
cmpsl
pushf
test
mov
sbb
jns
sahf
cmc
xchg
repz
jb
push
call
shll
push
aam
jae
push
inc
inc
repz
sbb
xor
jae
mov
fwait
mov
push
out
add
dec
inc
and
push
lods
cmpsb
data16
aam
ret
leave
add
cmp
or
ss
jno
jbe
out
fistps
pop
pushf
jmp
int3
mov
inc
shll
roll
inc
das
clc
in
push
sub
xlat
shl
mov
dec
lea
xorb
xor
ljmp
dec
out
xchg
stos
call
test
push
daa
gs
or
dec
dec
pop
std
cmp
jnp
mov
or
cmpl
mov
push
pop
fcomps
movsb
out
addb
in
out
mov
jp
pop
incb
call
jg
fists
xchg
int
xor
and
sub
movsl
test
pop
xchg
stos
add
jmp
jae
mov
dec
fwait
sbb
movsb
add
pop
inc
adc
mov
mov
inc
mov
jl
lds
lods
adc
aaa
in
inc
or
mov
imul
fldenv
je
pop
lret
sbb
push
xor
push
pop
dec
lret
mov
lods
daa
daa
jae
jmp
ret
test
cmp
insl
jge
test
or
fisttpll
mov
subb
in
movsl
jb
sbb
sub
jl
add
dec
insl
push
pop
push
cwtl
dec
mov
loopne
movsb
xchg
stos
sbb
test
mov
ficoml
je
pusha
xor
cltd
fs
pusha
dec
adc
fisubl
adc
jb
xchg
xor
push
or
outsl
mov
pop
xor
add
xor
jecxz
repz
pusha
mov
les
jb
test
xchg
or
xor
dec
cmp
or
mov
pop
cltd
mov
inc
mov
adcl
adc
jge
stos
xchg
mov
mov
iret
rcrb
std
mov
sub
enter
nop
dec
dec
sub
or
and
xor
in
imul
cmc
dec
jae
mov
mov
addr16
or
adc
aam
lahf
inc
pop
stos
mov
fdivr
imul
out
aam
mov
mov
dec
mov
adc
jae
mov
shlb
sub
inc
sbb
test
int
sbb
data16
add
fadd
das
imul
inc
adc
das
shll
xchg
lods
mov
call
pop
lods
mov
pushf
jecxz
mov
cmp
mov
out
add
inc
inc
incl
in
repz
push
out
lcall
cltd
sub
popf
mov
movhps
bound
push
ret
lret
mov
pushf
inc
mov
jle
sbb
in
test
lcall
cmp
dec
push
pushf
cmp
jg
xchg
mov
inc
jge
pop
int
sarl
push
pop
std
rsm
jbe
and
loope
jb
outsl
jg
mov
inc
imul
addb
xchg
xchg
aaa
push
dec
test
cltd
roll
rcr
sub
stc
pushf
and
push
in
and
pop
cmp
loope
dec
shll
bound
fyl2x
aam
jmp
and
imull
lret
cli
fistps
test
fisttps
mov
mov
xor
insl
clc
fs
inc
jns
sbb
mov
aaa
mov
mov
jl
adc
aad
lock
sbb
dec
cmp
test
in
outsb
dec
dec
jns
movsb
push
lahf
iret
cld
pop
mov
push
cmp
jno
xor
add
sbb
push
in
adc
adc
insb
es
test
and
imul
push
xchg
sarb
fwait
lods
sub
scas
sbb
fistpl
repz
mov
sbb
aas
mov
inc
icebp
cmp
xchg
insb
mov
jno
cwtl
sti
sbb
stos
cmpsl
loopne
mov
cmp
jl
movsl
out
mov
cld
adc
adc
push
sub
ret
mov
loop
jmp
push
and
adcl
mov
cmp
idivb
xchg
jo
pop
jmp
xor
add
pop
je
dec
push
mov
test
sahf
inc
add
xchg
pop
inc
enter
fnsave
or
repnz
pop
fidivrl
daa
xor
inc
int
sbb
and
jo
jnp
test
aam
lcall
jg
adc
or
les
ds
out
cmp
sub
out
lret
dec
xor
int3
cmpl
mov
rolb
xor
add
jmp
je
sub
and
mov
aam
jge
sub
popf
cmpsl
jl
mov
dec
xor
lods
jecxz
jmp
incl
mov
xor
push
push
stos
pop
addr16
std
movsb
jnp
pop
scas
xchg
mov
push
push
mov
imul
or
pop
and
jns
dec
push
rolb
pop
mov
orb
inc
fidivs
mov
xchg
cmp
clc
in
hlt
fistpll
psadbw
mov
push
ds
mov
inc
pop
jo
dec
jb
mov
mov
push
loop
xchg
addr16
mov
mov
loope
inc
jb
repnz
lret
mov
sbb
sbb
adc
int3
sub
dec
test
dec
loope
cmp
outsb
cltd
mov
in
loop
rolb
fnstenv
ja
testb
push
test
sub
xor
push
sti
push
cli
mov
insb
jmp
push
cmpb
stos
scas
adc
test
jmp
xchg
jne
adc
jb
jne
jge
xchg
test
push
pop
fisubs
arpl
int3
jnp
mov
out
mov
insb
cwtl
aad
mov
dec
lret
mov
into
and
push
stc
xor
ret
dec
xchg
or
bound
call
mov
outsl
addr16
ret
sbb
pop
loopne
jnp
negb
or
sub
and
mov
mov
popl
ss
mov
ljmp
aad
shrl
push
dec
cmp
enter
cmp
dec
push
sub
sbb
pop
inc
jle
push
pop
pop
mov
sub
add
scas
ret
and
ret
je
inc
fdivs
sub
dec
test
pop
pop
fidivrs
mov
mov
pop
in
fnstsw
mov
lret
cmpsb
mov
lahf
adc
mov
pop
mov
adc
arpl
enter
sub
test
jne
lds
cmpsb
popf
jns
mov
lahf
sub
repz
jnp
add
sbb
jmp
mov
roll
sub
and
mov
cmp
out
jno
xor
xrelease
lods
add
push
sbb
cmp
cmpsb
pop
sub
nop
add
dec
xchg
cli
mov
jnp
dec
nop
mov
addr16
iret
add
inc
push
loope
pop
sbb
mov
pop
push
xor
aas
in
push
popf
mov
js
mov
sub
add
add
add
inc
orb
xor
or
dec
orb
pop
orb
add
add
dec
orb
pop
orb
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
