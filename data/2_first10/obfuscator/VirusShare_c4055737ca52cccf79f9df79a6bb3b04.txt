decl
and
add
mov
add
pusha
mov
add
push
add
adc
test
add
mov
call
inc
dec
and
add
add
mov
in
mov
std
pusha
orb
add
xchg
and
inc
dec
inc
sub
push
adc
or
mov
in
inc
adc
pop
or
nop
adc
pusha
mov
add
push
test
fistl
add
or
nop
adc
sub
inc
sub
fildll
mov
nop
and
xor
inc
add
clc
or
andb
add
or
nop
or
adc
faddl
std
mov
xor
dec
repnz
and
add
add
xor
in
mov
inc
fidivl
push
jns
add
outsb
insl
add
add
push
add
bound
and
iret
in
jge
pushf
or
ret
cmp
outsl
fdivrp
imul
inc
add
insb
add
mov
ror
mov
and
hlt
sbb
push
jae
add
sahf
mov
dec
mov
cmp
mov
inc
or
mov
ss
out
add
and
aaa
sub
jmp
mov
xor
mov
unpckhps
xchg
int
ja
ljmp
neg
pop
fists
add
mov
out
loop
popf
push
push
or
add
fs
adc
and
mov
stos
add
dec
pop
popa
xchg
add
sub
pop
mov
ret
add
add
pop
sbb
add
or
xchg
in
jge
ja
repnz
pop
or
inc
or
jle
add
or
xlat
mov
lahf
jp
push
mov
aas
xlat
std
outsb
add
incb
and
lea
fwait
in
mov
js
add
dec
mov
mov
adc
pushf
aam
jo
fcmovu
sbb
mov
add
mov
loopne
pop
es
mov
or
out
sbb
xchg
out
add
or
pop
push
pop
jl
or
xchg
dec
ret
pop
sbb
jmp
imul
sti
cmp
xor
jle
dec
xor
mov
dec
movsl
add
into
sbb
dec
pop
pop
and
cmpl
cmp
jne
insb
leave
jmp
cmp
es
aam
jmp
clc
xchg
jo
call
stos
daa
sbb
or
pop
imul
add
aaa
pop
add
push
rolb
inc
sub
lods
jp
daa
push
std
adc
ja
jns
adc
loope
or
and
dec
sub
sarb
push
xchg
xchg
xor
cs
pop
sti
add
sub
jmp
into
add
add
add
add
inc
lods
mov
cmp
cmp
lahf
jne
lds
and
mov
mov
xlat
lahf
add
scas
in
clc
ss
clc
sub
movsb
mov
sbb
ds
jb
xchg
jp
lods
js
add
lahf
sbb
mov
dec
mov
sbb
jns
inc
adc
popf
pop
xchg
mov
push
mov
scas
xchg
and
push
fstpl
stos
push
out
cli
pop
lret
cmpsl
or
test
push
push
mov
xorl
or
roll
jle
push
jl
call
mov
dec
add
fiaddl
aam
jmp
or
adc
sub
jecxz
pusha
insl
imul
mov
inc
mov
cltd
sbb
lds
mov
push
xchg
sub
scas
cmp
pop
and
jo
cmp
and
not
pop
inc
push
add
or
add
mov
add
mov
xchg
or
cmp
movsl
pop
mov
add
pop
mov
movb
ficoml
cmp
gs
outsl
push
sahf
leave
lock
jo
jmp
aam
mov
push
pop
add
push
imul
cmp
jnp
inc
cmpsl
or
ljmp
jno
and
loope
subb
shrl
push
data16
dec
dec
xor
mov
dec
in
or
adc
clc
mov
cmp
lods
out
cwtl
pop
add
inc
or
sti
mov
add
test
sub
add
rcl
adc
loopne
push
ss
dec
fists
daa
jge
lock
jo
and
pop
int3
dec
addr16
cmp
clc
sbb
dec
inc
jae
frstor
mov
xchg
test
dec
jb
mov
add
pop
inc
add
mov
jp
call
or
and
sbb
inc
xchg
and
jns
push
lcall
test
lods
push
lock
push
ja
pop
add
add
lea
stc
ret
ficoml
sbb
or
and
or
or
inc
lods
fidivs
add
add
popf
xor
rcll
inc
xchg
das
das
fs
dec
add
fimull
ja
sub
addb
jle
les
push
pop
mov
push
jae
sbb
mov
jmp
and
jmp
push
hlt
jge
shlb
push
inc
aas
add
add
mov
imul
dec
stos
mov
mov
pop
sbb
sbb
sub
test
mov
push
xor
insl
aas
jg
fidivrl
push
mov
push
in
dec
sahf
push
adc
ret
outsl
mov
dec
sbb
mov
sti
add
mov
xor
mov
lcall
ja
imul
jmp
adc
xor
test
push
add
cmp
mov
push
sbb
adc
mov
jnp
hlt
jnp
push
ficoms
add
adc
sarb
pop
dec
cmp
cltd
scas
sub
and
popa
rcrl
cmpsl
scas
dec
and
test
fstpt
mov
cwtl
adc
loopne
push
jmp
lahf
imul
xor
sub
int
movsl
sarb
add
xchg
push
jmp
pop
aam
test
push
inc
in
repz
cmp
push
xor
cmova
pop
or
es
gs
test
pusha
les
jle
mov
xchg
pop
or
push
call
stos
rorl
sbb
mov
sbb
test
inc
inc
cld
dec
mov
xchg
sub
psubb
cmp
and
jbe
adc
push
adcb
jno
in
das
adcb
shr
mov
iret
xchg
jle
mov
stos
bound
add
ja
mov
jo
dec
daa
pop
mov
fdivrp
pop
mov
push
adc
adc
mov
adcb
pop
arpl
ss
adc
xchg
inc
pop
sbb
jg
or
clc
sbb
pop
bound
add
movsl
pop
stc
jbe
test
cmp
adc
mov
sbb
mov
add
pop
xor
or
add
add
loop
xchg
jns
rclb
cltd
daa
mov
pop
jno
dec
iret
xor
inc
cmp
mov
and
shr
imul
data16
lcall
mov
bound
inc
xorl
cmp
lcall
or
jo
fwait
loope
sub
shlb
mov
dec
sub
xchg
inc
shlb
nop
push
rorl
add
sbb
xor
pop
cld
shll
mov
push
cmpsb
cmp
push
push
add
stos
sti
jecxz
arpl
sub
lods
ret
dec
sbb
fmul
mov
into
xchg
ss
push
bound
pop
jecxz
adc
in
test
outsb
fdivrl
adc
addl
dec
push
movsb
inc
push
mov
mov
sbb
das
push
gs
add
push
ret
cmp
pop
in
outsb
pop
xchg
jb
icebp
jp
jbe
adc
jecxz
test
xor
imul
fiaddl
push
sub
stos
fisubrs
pop
les
cmp
test
pop
cmp
cld
imul
out
jno
scas
xchg
scas
pop
push
jb
add
rclb
inc
and
or
inc
jo
add
rcr
sbb
xor
xchg
xchg
jp
mov
or
in
cmp
stos
dec
stos
lret
sbb
bswap
mov
das
jle
jae
imul
adc
cmp
push
clc
sti
adc
mov
aad
scas
cmpsb
inc
push
arpl
adc
sahf
roll
daa
dec
add
enter
pop
aas
pop
mov
adc
fdiv
cmpsb
xor
cli
sbb
les
cwtl
inc
and
cmp
push
vmovaps
enter
test
repnz
mov
mov
fcompl
dec
addb
push
pop
ficompl
inc
jp
lds
xchg
hlt
daa
mov
call
add
ds
or
jae
jne
insb
mov
movsb
and
stc
adc
cld
jno
mov
mov
jl
mov
pop
ds
mov
pop
fldl
fmuls
repz
sub
test
icebp
pusha
pop
std
add
add
jmp
xor
hlt
sbb
pusha
inc
andl
mov
cmp
push
das
sub
ds
movl
sbb
push
imulb
or
fs
pop
sub
xor
test
cltd
cmp
dec
inc
ret
mov
into
jno
push
xchg
jp
jne
stos
mov
rorl
je
js
mov
repnz
pop
rcr
adc
stos
xchg
test
clc
pop
lds
aaa
sahf
xchg
lret
das
cmpsl
jmp
or
call
in
and
sbb
dec
jbe
adc
mov
sahf
cld
pop
movsl
dec
cli
jne
push
xor
add
dec
das
movsl
push
cmp
loop
pop
lea
inc
add
pop
pop
ss
gs
ret
and
mov
mov
xchg
xchg
cmpsb
push
cmpsl
dec
or
leave
mov
cld
push
dec
das
sub
and
lock
mov
rcll
pop
arpl
inc
xor
arpl
fcompl
push
fwait
inc
fcmovb
pop
push
ret
iret
pop
test
mov
jbe
add
mov
pop
outsb
call
jb
and
call
mov
cmc
add
addr16
dec
mov
lds
icebp
mov
cmp
pusha
divb
or
sub
sbb
mov
pop
pop
nop
int
rclb
or
cmp
adc
int3
in
push
aaa
pop
jb
xor
pusha
and
rcrl
ficompl
inc
int3
pop
popa
or
lods
push
lock
jecxz
or
push
and
cs
xor
mov
pop
arpl
and
loopne
data16
sub
push
sub
add
or
or
icebp
aam
cwtl
test
jle
xor
adc
adc
arpl
aad
aas
gs
nop
pop
call
or
mov
out
pop
fstl
and
pop
pusha
test
es
xchg
xchg
xchg
sub
scas
sbb
scas
pop
sub
rorl
outsl
jg
sub
add
push
push
shll
push
lock
adc
add
and
pop
xchg
loop
loope
mov
inc
cmc
inc
pushw
ljmp
xlat
sbb
add
pop
call
pusha
decb
inc
pop
loop
clc
push
sbb
insb
lea
cmp
js
lock
push
hlt
daa
mov
mov
inc
add
aad
or
mov
test
lahf
lcall
xchg
lahf
mov
lock
mov
push
loopne
or
jo
dec
cmp
mov
cmp
push
or
dec
jle
mov
jne
mov
lret
push
std
orb
cmp
rorl
out
mov
or
cmp
dec
je
lea
xchg
push
inc
leave
lock
dec
or
out
loope
inc
clc
mov
xchg
lret
sbbb
cmp
lock
xor
cmpb
inc
push
pop
xchg
cmpb
ret
adc
push
mov
inc
int3
dec
push
scas
or
dec
mov
cmpsl
subb
mov
inc
popf
cmp
repz
std
ss
outsb
and
cmpsb
xor
sbb
mov
inc
push
cmpb
fdivrs
inc
stc
sarb
fxtract
mulb
xchg
push
dec
cli
in
mov
ds
subl
dec
mov
imul
push
cld
rorb
pop
subb
cltd
mov
outsl
cmp
idiv
fwait
adc
cmp
push
dec
add
lods
lea
push
xor
inc
pop
push
dec
or
push
loop
or
das
pusha
in
pop
enter
fisubrs
icebp
adc
cld
sahf
add
pop
stc
jmp
lea
pusha
hlt
test
cmp
in
dec
rcrl
lock
rolb
fimuls
rclb
orb
xor
mov
cld
mov
add
fisubs
and
rcrb
pop
ljmp
push
mov
xchg
push
and
sub
dec
add
dec
js
cmp
cltd
pop
aaa
jecxz
pop
pop
adc
das
orb
iret
dec
out
jge
inc
mov
test
adc
inc
pop
js
add
imul
and
add
fdivrs
adc
cmp
por
and
test
inc
xchg
xchg
mov
pop
add
inc
pusha
mov
xchg
sub
movsl
lahf
push
hlt
clc
xor
scas
in
lock
add
push
pop
sub
mov
repz
sahf
sbb
mov
add
js
in
jne
imul
cs
inc
mov
popa
mov
jp
call
mov
sub
dec
adc
jns
adc
ret
sub
cmp
and
test
gs
pop
test
insl
push
mov
js
mov
mov
sahf
negb
imul
push
loope
shr
mov
mov
xchg
mov
mov
mov
mov
mov
cmpsl
inc
mov
and
into
loope
and
sbb
xchg
xchg
outsl
add
out
mov
loope
fwait
and
cmpsb
cwtl
shll
testl
mov
push
mov
push
lea
mov
fadds
cmp
aad
inc
out
adc
js
sahf
bound
or
test
lock
icebp
add
mov
or
or
sub
or
cmp
les
and
pop
cli
pop
ss
jecxz
les
out
and
jnp
gs
call
icebp
sbb
lahf
cli
sub
sbb
imul
test
sbb
shlb
pop
loop
bound
cmp
mov
insl
sbb
cmp
call
in
outsl
xchg
loop
push
jb
push
sbb
sbb
mov
cmp
push
and
out
mov
lds
add
pop
push
mov
push
mov
mov
push
shl
scas
std
sub
pop
std
sub
ret
inc
inc
nop
or
leave
jg
mov
mov
pop
movsl
fmuls
add
loopne
lods
lahf
or
pop
lods
or
stc
imul
inc
lock
idivb
ljmp
adcl
out
rcl
out
shl
addb
in
rcl
pop
aas
les
je
pop
add
lahf
jle
out
cmp
fwait
incb
sbb
nop
mov
sbb
or
mov
icebp
in
mov
sub
lret
in
inc
pop
dec
cmp
cmp
push
dec
pop
xor
ja
shr
xchg
loop
add
jae
incl
cltd
popa
sbb
ja
mov
int3
mov
imull
lret
jo
jae
jge
cmp
inc
dec
adc
negl
xor
push
fwait
push
bound
xchg
pop
lea
negl
fdivl
fbld
fcom
push
int
repnz
ljmp
das
inc
push
sbbl
push
cmp
vunpckhps
lcall
inc
fstps
aam
pop
jb
xor
cmp
mov
mov
push
push
xlat
push
inc
lahf
cmc
add
and
xchg
daa
jg
imul
arpl
mov
stos
rclb
sub
loopne
xchg
sub
xor
sbb
cmc
movsl
dec
mov
jmp
addb
xchg
sbb
lahf
jno
xchg
pop
mov
pop
in
inc
ret
xchg
ljmp
out
adc
movsb
mov
mov
and
fs
daa
fs
sarl
hlt
xor
inc
or
and
ret
jg
xlat
shll
adc
cwtl
push
jns
pop
popa
xor
int
cmpsb
cltd
mov
stos
xchg
ds
mov
test
xor
push
or
roll
adc
inc
and
mov
shlb
loopne
rolb
pop
loope
outsb
dec
outsb
mov
test
push
push
xchg
outsb
jle
orl
lods
out
adc
adc
dec
push
mov
cmpsl
xchg
lds
pusha
xchg
adc
push
mov
ret
sti
sarb
push
xor
testl
es
jg
or
add
push
push
in
push
stos
cmc
adc
cli
ficoms
arpl
jmp
je
sub
push
scas
push
jge
xor
mov
movsl
stc
cmpsb
inc
add
mov
pop
mov
rorb
mov
pop
pusha
stos
shll
push
inc
dec
mov
ret
sub
ljmp
push
sub
fimull
insb
mov
std
aam
mov
adc
mov
inc
faddl
pop
jl
jns
fsubrs
lods
inc
mov
ret
inc
push
cmp
pop
inc
in
js
push
jge
and
sbb
mov
sub
negb
out
loope
and
push
xchg
lock
jl
push
popf
mov
mov
and
lcall
push
lcall
scas
xchg
sub
jo
adc
add
xchg
in
mov
mov
loop
bswap
test
movsb
js
lods
xor
and
clc
push
add
dec
inc
mov
jle
scas
and
jmp
push
push
jp
sti
mov
jl
sub
xor
nop
sbb
add
push
mov
cmc
cmpsb
pcmpgtb
in
push
test
sbbb
xchg
or
js
aad
or
adc
lea
dec
nop
dec
push
adc
push
jnp
test
add
push
and
push
fmull
inc
dec
pop
dec
pop
addb
push
pop
xor
icebp
loopne
and
ds
xchg
jle
test
mov
ljmp
js,pt
push
xchg
inc
jno
in
push
das
pop
push
lahf
mov
push
lcall
dec
out
add
cmpsb
pop
xor
and
in
rcrb
fstpl
add
mov
sbb
push
mov
inc
jmp
cltd
jno
jb
xchg
xchg
mov
jnp
enter
push
sub
rorl
test
jp
cmp
lea
sbb
push
cmp
sti
test
sbb
test
cmpl
nop
in
jp
mov
cmp
cmpsl
lret
shll
pusha
lahf
aam
lret
js
in
adc
subb
mulb
cmp
in
push
int
sbbb
aam
pop
or
cmp
add
std
push
and
adc
cld
inc
or
push
adc
ja,pn
pushf
sbb
adc
or
sbb
mov
and
mov
mov
push
idivb
test
and
and
daa
stc
dec
jge
jns
rclb
add
or
adc
cli
hlt
ds
pop
mov
jecxz
inc
inc
pop
add
jl
dec
fildll
sub
nop
movsl
jl
mov
cmpsb
add
jo
inc
lret
insl
cmc
xor
push
adcb
xor
adc
xchg
divb
rcll
cmp
bound
ficomps
lock
ficompl
sbb
mov
lds
sbb
add
outsl
xor
mov
or
mov
adc
js
xchg
lahf
add
mov
adc
jbe
movsb
jo
jno
cmp
sbb
adc
sub
mov
sti
ficompl
cmp
fs
popa
sbb
shll
sub
push
in
sub
imul
fsubr
sbb
fimull
adc
dec
insb
xchg
fbstp
add
in
sub
mov
insb
je
enter
iret
adc
loopne
insb
push
sbb
into
sarl
jb
jecxz
pop
sbb
jmp
das
or
popa
adc
jle
je
add
push
pushl
nop
fnsave
or
ror
ret
and
mov
mov
mov
sahf
lock
sub
mov
imul
sbb
movsl
ficomps
pop
mov
jmp
js
push
sbb
pop
jns
xchg
aas
add
sti
and
incb
aas
jmp
push
fcoms
incl
fdivl
cmpsb
ret
nop
jb
lahf
sbb
dec
mov
cmp
stos
pusha
xchg
scas
clc
sbb
frstor
mov
xor
and
push
imul
mov
adc
add
dec
fcompl
jle
decl
sbb
xor
or
push
adc
mov
ds
and
lret
xor
cmc
mov
add
movsl
fisttps
jle
test
jo
dec
pop
mov
cs
xor
lret
shl
scas
jb
cmp
int
add
lcall
inc
pop
mov
mov
dec
mov
pusha
rcrb
or
insl
sub
cmpl
movl
push
push
jp
fnstenv
cwtl
fcomps
negb
mov
fcomip
gs
ds
cmovb
rorl
add
xor
imul
mov
jmp
jae
mov
pushf
add
data16
sti
scas
add
mov
sbb
or
xlat
cmpsl
dec
loope
aaa
rclb
jmp
xor
test
dec
inc
dec
repz
push
mov
call
mov
inc
and
jmp
jno
roll
insb
mov
adc
xor
jae
scas
fisttpl
lods
pop
inc
pusha
mov
pushf
sub
ret
push
sahf
popa
or
dec
mov
mov
mov
or
and
sbb
jle
fisubrs
pop
aas
mov
add
push
add
out
push
jge
xchg
mov
pop
popa
movups
int3
icebp
or
add
dec
jmp
lods
cld
shl
xor
lods
loope
loop
dec
sahf
mov
dec
inc
enter
mov
push
xchg
xchg
fidivrl
fst
bound
ds
in
test
cltd
std
std
leave
cwtl
ljmp
cli
cwtl
clc
push
ja
out
sbb
jecxz
dec
hlt
movl
rcrl
inc
mov
lret
call
inc
in
cmp
lds
stos
sbb
jb
or
test
xor
add
mov
lret
push
movsb
or
push
mov
dec
xchg
lock
adc
mov
mov
nop
pop
ljmp
shl
pop
jmp
icebp
insl
dec
mov
jl,pn
adcb
into
iret
add
lods
push
xor
cmp
xor
fiadds
and
push
cmp
into
jmp
lock
and
hlt
push
sub
jp
adc
popa
shrl
in
dec
jl
or
in
and
jl
scas
push
add
scas
mov
outsl
add
sub
inc
and
lret
or
out
mov
dec
dec
xchg
not
notb
icebp
pop
test
add
stos
xchg
movsl
ss
aaa
fnstsw
pop
pop
pushf
pusha
inc
adc
dec
inc
pop
jb
lcall
jno
inc
in
jo
imul
push
jmp
movsb
push
mov
add
inc
inc
push
xor
mov
xchg
test
loopne
sbb
inc
dec
push
sub
movsb
popa
cmp
add
ds
sbb
sbb
add
je
es
ljmp
dec
clc
cmpb
fwait
or
iret
jg
push
loope
lods
add
xor
shll
pusha
jp
lahf
call
adc
sahf
push
in
sub
aam
xor
lahf
jle
imul
dec
push
xchg
pop
pop
loope
fmuls
xchg
mov
mov
pop
and
add
jae
jp
mov
aam
cmp
xorb
loopne
aas
gs
or
sub
lock
jecxz
pop
int
push
sbb
xchg
movsl
arpl
sarb
xchg
inc
iret
inc
ss
scas
into
inc
sub
cld
jp
push
cmp
cmc
lret
int3
outsl
bound
insb
aam
dec
push
or
pusha
pop
rcrl
mov
rclb
mov
addb
cli
dec
scas
sub
hlt
ret
popf
les
add
mov
cmp
sti
mov
aas
shll
push
fbld
lahf
aad
ja
fisttps
xchg
scas
sub
nop
push
loopne
dec
mov
fsub
and
xor
pop
inc
mov
scas
cmp
and
xor
push
push
es
push
mov
data16
lods
push
imul
cmp
aaa
lock
test
scas
jle
adc
adc
push
mov
enter
scas
sub
je
ret
mov
mov
inc
ret
test
and
xor
xchg
cmp
nop
mov
out
or
movsl
xchg
ljmp
xchg
cld
in
not
fcmovbe
mov
stos
xchg
das
test
pop
popf
cmp
inc
xchg
andl
xlat
sub
sbb
and
push
hlt
popa
scas
sub
mov
std
inc
fisttpll
mov
xor
cmp
out
add
sub
pop
sub
rcr
nop
inc
jmp
inc
call
push
sti
adc
xor
jns
insb
stos
mov
in
mov
and
sbb
ja
jmp
cmp
sub
mov
add
adc
sbb
push
idiv
push
lahf
das
test
int
adc
lods
movsb
cmp
scas
cmp
dec
les
dec
push
mov
cmpsl
pop
in
lcall
stos
in
cltd
mov
rorb
loop
push
ss
int3
add
mov
sahf
cmp
shl
fidivrl
imul
fildl
cli
loope
scas
insb
andb
loop
ja
mov
popf
in
pop
insb
or
lds
inc
mov
jp
xor
xchg
and
call
jg
pop
sub
sbb
adc
bound
hlt
push
repz
adc
dec
adcb
mov
mov
pushf
js
int3
xor
leave
dec
stos
repz
and
mov
cmp
add
jle
lock
mov
cmc
fiaddl
add
dec
xorb
sti
ja
jb
add
fisubrl
or
xchg
push
inc
int
xchg
push
ret
clc
sti
aad
dec
insl
int3
out
stos
rorb
inc
adc
sbb
sbb
hlt
mov
lret
mov
sahf
test
pushf
and
movsl
add
mov
adc
jbe
cmp
test
inc
dec
inc
ljmp
cld
bound
mov
addr16
lods
hlt
jmp
in
sbb
jne
inc
fbstp
adc
sub
loopne
test
scas
jns
jge
pop
icebp
jne
jnp
popf
sbb
inc
scas
hlt
lds
xor
sarl
test
gs
and
add
cmp
pop
add
mov
fs
enter
pop
mov
jecxz
pop
push
dec
push
mov
push
pop
je
jbe
push
enter
sldt
arpl
je
xchg
cmpsb
je
jbe
or
add
dec
sbb
loopne
dec
mov
inc
adc
or
sub
and
lret
fistpll
inc
pop
dec
enter
adc
inc
ljmp
sar
imul
enter
pop
jbe
insl
cli
mov
push
xlat
out
sbb
mov
push
sub
sbb
test
ja
jo
xchg
or
lds
add
pushf
out
lock
inc
pop
iret
mov
iret
fidivrl
into
cmpb
fildll
jp
popa
stos
jl
faddl
jb
inc
imul
fdivl
ss
push
mov
testb
jns
adc
ficomps
lock
push
jg
sbb
rol
subb
sub
in
push
iret
cmc
xor
xor
mov
jnp
aam
xrelease
sahf
jecxz
and
xchg
sbb
inc
bound
xor
jecxz
dec
shlb
divb
sub
lock
pushfw
cmp
dec
cwtl
jmp
adc
jbe
loopne
out
hlt
push
test
and
add
outsl
mov
jmp
lret
dec
adc
ds
stos
jbe
jnp
test
mov
xchg
fmull
fbld
and
shrb
mov
pop
and
adc
in
xchg
push
add
call
cli
jne
mov
add
adc
xchg
jmp
pop
mov
in
data16
test
add
addr16
and
aas
mov
fwait
adc
fadd
or
xorb
add
test
repz
xchg
sbbl
arpl
add
jp
inc
cmpsb
jbe
cmp
addb
pop
shll
in
mov
leave
flds
hlt
pop
ja
pushf
mov
or
sub
rcl
mov
leave
cmp
cs
ljmp
push
test
aas
or
popf
inc
push
test
mov
lcall
subl
pushl
fimull
sbb
pop
call
push
add
into
popa
jl
adc
shrl
sahf
inc
cmp
push
dec
inc
popa
pop
ljmp
sti
idivl
cs
mov
pusha
mov
add
add
jo
dec
sahf
fistpll
pop
rcr
cmp
push
cmp
sub
or
adc
popa
add
imul
mov
pop
mov
and
js
or
xor
shrl
or
jle
or
inc
dec
je
xchg
xchg
lods
cmp
fs
or
popa
fisttps
pop
addr16
xor
rolb
adc
cmp
pop
push
insl
in
shll
mov
paddusb
push
jno
cmp
addb
mov
shl
push
add
xchg
jns
dec
cld
iretw
and
cmp
cmc
mulb
je
sbb
adcb
and
rcl
ljmp
push
loop
sbb
mov
rcrb
xor
outsl
sti
stos
xor
inc
mov
mov
push
adc
or
push
ljmp
inc
cmp
mov
jns
bound
dec
in
xchg
into
xor
sbb
stos
inc
sub
shll
sbbb
lock
add
xchg
pop
in
dec
fwait
and
mov
xchg
loopne
push
xor
adc
scas
sub
jle
js
cmp
into
int3
loope
and
popa
xchg
add
std
fldt
pushf
pop
loopne
adc
adc
mov
mov
cmp
dec
les
mov
les
sub
jmp
mov
pop
mov
into
and
mov
and
adc
dec
jb
test
mov
xchg
push
dec
rorb
sbb
mov
or
mov
lds
jmp
jle
cld
sub
adc
mov
xchg
and
fimuls
cld
mov
mov
scas
or
xor
mov
lahf
push
sub
jns
andb
mov
and
inc
ja
sbb
mov
aad
xchg
ljmp
out
dec
rcr
repnz
sahf
push
fcoms
pop
and
pop
push
mov
ljmp
pop
or
aad
iret
pop
mov
cltd
hlt
stos
or
out
stos
mov
mov
jmp
icebp
push
pusha
xor
push
dec
and
mov
mov
sub
imul
movsb
fisubl
inc
cli
scas
les
shrb
fwait
xchg
je
les
lahf
out
rol
adc
xchg
ret
dec
and
sbb
pop
push
push
cwtl
ret
in
adc
xchg
sub
ss
push
pop
ret
mov
mov
aas
cmovs
jmp
mov
pop
mov
out
pop
pop
stos
lods
movsb
add
data16
xchg
fisubl
fmuls
call
dec
push
xchg
ljmp
jmp
nop
in
gs
dec
or
lods
jecxz
jp
insb
movb
mov
mov
lods
hlt
ret
data16
mov
inc
pop
arpl
sbb
lea
loope
mov
cmp
stos
push
sub
loopne
or
push
hlt
nop
imul
add
cmpsb
icebp
sbb
cld
mov
cmp
popa
cwtl
push
xor
lods
adc
mov
je
sub
inc
lods
push
sbbb
pop
and
aas
mov
cmc
in
int3
inc
inc
js
js
and
xchg
cs
push
testb
xchg
aad
test
lcall
jg
outsb
ss
std
ficoml
bound
jg
sbb
repz
pop
dec
shrl
insl
cmpb
adc
xor
sbb
ss
xor
adc
mov
sub
les
shl
add
lea
jl
mov
push
loope
out
mov
mov
mov
sub
adc
xor
stc
data16
cmp
rorl
jge
sbb
dec
add
mov
and
sub
dec
push
xor
cmpl
mov
mov
loopne
fnstcw
mov
addr16
xorb
cli
cmp
or
ret
push
aam
inc
jne
lds
ret
pop
xchg
mov
loopnew
pop
je
loop
adc
add
lret
into
dec
mov
stos
js
js
mov
adc
jmp
mov
divl
add
fistpl
test
jbe
xlat
jo
sbb
ds
lret
and
pop
mov
and
aam
cmp
jnp
cmpsb
or
test
fidivrs
fs
and
push
push
scas
fisubl
xchg
and
lds
sub
push
lds
test
cmp
mov
and
ljmp
pop
nop
lds
jmp
daa
jge
mov
scas
mov
popa
sbb
enter
ja
pop
lret
ror
movsb
push
pop
jae
xorl
insb
sahf
decb
xchg
imul
ret
notb
dec
mov
cmp
push
jne
xchg
dec
subb
mov
orl
dec
pop
mov
cmpb
test
hlt
ret
ds
orl
jb
xchg
clc
aad
mov
mov
mov
lahf
test
test
mov
hlt
xchg
aaa
sbb
cmp
test
rcll
pop
add
or
and
loopne
pop
mov
inc
ror
aad
adc
mov
push
test
sbb
ds
dec
push
jne
call
pop
xchg
inc
fisubl
pop
sti
call
cltd
pop
fldl
sti
push
daa
sbb
nop
rclb
xchg
push
out
aam
mov
xchg
and
mulb
pop
cmpb
js
rclb
je
loope
xchg
mov
data16
shl
and
lahf
clc
push
cmp
jle
inc
cwtl
ljmp
ficomps
inc
mov
imul
mov
in
cmp
outsl
add
mov
sbb
cmc
pinsrw
out
mov
sbb
pop
cwtl
xor
lea
mov
cmp
loope
cmp
sahf
mov
inc
push
and
cmpsl
push
pshufw
daa
or
loop
ds
mov
push
dec
cltd
pop
shlb
sar
inc
jbe,pn
cmc
ud0
mov
ret
das
xchg
jo
adc
idivb
fstps
or
adc
addb
jo,pt
jmp
pushf
pop
mul
cmpb
sti
pusha
mov
ss
or
and
sub
jne
mov
inc
or
xchg
dec
mov
and
xor
pushf
jle
loopne,pt
inc
add
pop
movq
xchg
mov
sbbb
mov
jg
xor
cmp
jns
mov
and
inc
mov
and
std
fistpll
adc
xchg
jae
loope
dec
and
dec
and
push
out
sub
sbb
adc
in
out
add
push
dec
rcll
sbb
dec
cmpsl
add
and
cmp
xor
push
cmpsl
sbb
xor
pop
shlb
loope
in
into
sbb
imul
ds
repz
mov
xchg
push
cmpsb
cltd
outsl
sub
add
orb
pop
mov
push
jbe
dec
mov
xor
push
mov
rorl
dec
cmc
sub
repnz
insl
or
fwait
mov
inc
ffreep
cld
cwtl
pusha
rorl
in
pop
lret
jne
cmp
pop
jecxz
mov
fistpl
mov
mov
pop
mov
mov
scas
movsb
test
jl
push
call
cmp
push
xchg
mov
shrb
jnp
adc
jecxz
push
jge
lds
fwait
add
add
add
adc
jle
cmpsb
sbb
mov
push
jge
add
add
divb
rclb
sbb
sbb
scas
mov
sarb
int3
jne
xchg
pop
adc
cli
add
xchg
sbb
into
popf
loopne
rcrb
fwait
das
adc
jp
pop
shll
inc
adc
dec
mov
dec
add
push
cwtl
mov
pop
shlb
sub
ja
mov
adc
outsb
cmp
sub
pop
adc
jp
mov
or
mulb
inc
push
jge
int3
out
ljmp
sub
fldt
inc
adc
adcb
xchg
inc
or
das
lods
and
daa
in
mov
mov
fldl
xchg
loopne
jge
add
adc
sub
sbb
outsl
mov
addr16
push
mov
movsl
outsb
mov
sbb
scas
mov
aam
xor
pop
sbbl
cmp
fcmovb
outsb
insb
pushf
mov
test
sub
mov
sbb
daa
adc
stos
icebp
inc
les
inc
leave
xlat
xor
push
pop
add
imul
hlt
arpl
xchg
fidivs
mov
push
cmp
in
sub
pop
pushf
pop
clc
mov
iret
cmp
xchg
insl
xchg
sub
ret
xor
adc
les
sahf
lahf
enter
dec
lahf
sub
ret
es
in
mov
mov
mov
incl
sbbl
cwtl
and
lds
mov
xchg
add
sbb
aad
mov
cli
std
je
sbb
repz
pop
xchg
int3
cmp
xchg
jnp
push
sbb
test
sbb
xlat
js
call
out
aas
cld
sahf
xchg
inc
js
aam
xchg
and
es
cltd
dec
mov
aas
adcb
insb
fsubl
inc
iret
lea
notl
jb
scas
inc
jno
loop
lahf
mov
inc
shll
add
push
adc
js
clc
jmp
test
xor
and
xchg
push
stos
push
into
mov
rolb
push
pop
mov
sbb
loope
addr16
push
xor
cli
mov
fbstp
lds
nop
or
jne
jecxz
popa
cmpsb
mov
inc
push
sbb
fdivs
and
stos
mul
jl,pn
rcrb
push
insb
in
sub
pop
add
outsb
add
repz
outsb
std
xchg
cmp
rep
pop
rolb
stos
push
mov
sbb
mov
dec
sub
jne
out
or
ds
and
jo
and
sub
lock
inc
test
cwtl
ss
shl
dec
xchg
xchg
js
pusha
mov
movsb
sub
jno
fsts
sbb
dec
jnp
lret
mov
pop
loopne
fiadds
fistps
cli
add
dec
push
fdivs
sub
dec
sub
adc
movsb
cmpsl
arpl
fadd
cmp
mov
ret
or
jle
rcr
sub
mov
hlt
adc
sahf
hlt
mov
test
mov
aam
mov
ss
clc
xor
fdiv
cli
mov
xchg
xchg
xchg
out
mov
add
sbb
ja
call
sbb
pop
inc
ret
adc
inc
xchg
dec
add
or
mov
lods
ja
push
add
jbe
and
testl
pop
push
iret
clc
jl
push
push
repz
adc
push
imul
imul
fistpll
ja
or
ljmp
jnp
adc
mov
pop
mov
push
out
pop
stos
out
sub
inc
mov
mov
sub
sbb
dec
cmpl
sub
mov
outsl
insl
rcrb
das
jbe
test
jl
faddl
inc
add
lock
push
mov
mov
add
lret
test
jnp
push
xchg
hlt
push
fdivrs
add
cmpb
fsubrp
push
mov
insb
push
push
daa
adc
jmp
pop
andl
filds
sbbl
in
rdmsr
and
xor
push
push
cmpsl
xchg
cmp
add
in
rcl
add
outsb
sbb
inc
cmpsl
push
roll
in
mov
xor
bound
push
add
push
leave
nop
ja
cwtl
adc
sahf
test
push
inc
imull
mov
int3
subb
jecxz
clc
cmp
aas
lea
loopne
les
hlt
dec
xchg
dec
jg
inc
test
adcb
mov
and
push
or
jecxz
addl
cmp
xchg
add
sar
cmpl
cli
loope
stos
add
sbb
lret
pop
clc
roll
mov
stos
jnp
push
push
notl
rcrl
push
inc
aas
mov
mov
cltd
bnd
xchg
jle
jg
in
inc
aaa
in
add
ljmp
or
movsb
stos
rclb
mov
add
xchg
ret
inc
dec
mov
test
mov
sub
sbbb
data16
xchg
mov
in
lds
cmp
dec
leave
adc
hlt
mov
cli
inc
test
mov
outsb
shrl
dec
lods
nop
stos
jno
or
jno
fstl
mov
clc
inc
outsl
arpl
popf
xor
pop
or
add
shrl
addl
jge
test
ss
push
and
loop
mov
jecxz
jb
loopne
push
or
adc
adc
rorb
push
addl
out
hlt
mov
pusha
outsb
xchg
lods
aam
cli
or
cmp
aad
nop
call
mov
mov
pop
lret
mov
ficoml
pop
test
int3
out
fisubl
add
sti
xchg
add
scas
push
std
clc
cmpsb
sti
orb
test
mov
push
clc
cltd
clc
push
leave
xchg
xor
arpl
inc
rorl
adc
pop
cmp
inc
rorb
std
rclb
test
adc
sahf
mov
shlb
in
ficomps
loopne
ja
shr
fwait
cmpsb
int3
mov
lahf
jbe
xor
lea
cmp
xchg
lcall
jp
dec
sub
mov
xor
insl
aaa
cmp
enter
aas
jmp
or
pop
orb
push
insb
cmp
push
adc
dec
adc
out
out
ja
sti
or
fs
or
adc
dec
lcall
jo
inc
adc
mov
xchg
inc
xchg
sub
pop
add
pop
mov
into
mov
pushf
pop
or
xchg
imul
in
enter
or
and
loop
cmpsb
lret
lahf
jl
mov
inc
js
popl
inc
mov
push
pusha
lcall
mov
add
data16
mov
lock
js
shlb
lcall
cld
mov
addr16
in
ret
lahf
pop
clc
sbb
dec
frstor
adc
pop
mov
inc
jge,pn
mov
fdiv
loopne
pop
xor
mov
aas
mov
push
scas
add
addr16
lock
cmp
adc
in
or
pop
sarb
pop
scas
mov
lcall
xor
sbb
outsb
aas
rolb
dec
pop
fwait
mov
mov
daa
or
pop
ret
jne
xchg
add
imul
sub
push
pusha
inc
cmpsb
pusha
cmp
inc
or
jecxz
xchg
pop
lods
cli
bound
pop
adc
mov
sub
xchg
inc
int3
xor
addr16
jp
std
int
ret
test
mov
sbb
scas
inc
iret
mov
popa
icebp
lds
push
hlt
jp
popa
lea
mov
imul
sub
or
mov
js
insb
cmp
jno
loopne
cmp
inc
shlb
pop
add
adc
nop
sub
sub
push
or
ljmp
push
add
xor
push
mov
icebp
pop
inc
mov
xlat
xor
add
and
jge
mov
add
push
xor
push
jmp
inc
les
sbb
aad
sti
cmp
add
mov
sbb
lock
sub
outsl
inc
cmp
or
sbb
test
push
aas
call
add
push
mov
inc
dec
into
add
inc
out
xchg
ds
sub
sbbb
pop
mov
daa
inc
stos
mov
sub
jp
out
jo
xlat
dec
push
lods
push
arpl
sarb
jge
mov
das
aad
js
xor
adc
adc
mov
jb
leave
add
and
sbb
rclb
lods
aas
test
inc
lds
adc
mov
xor
add
ret
cmp
mov
mov
cmp
dec
mov
nop
pop
jg
mov
xchg
inc
push
push
inc
rolb
subl
adc
dec
fcom
or
or
and
xor
ljmp
scas
add
call
mov
call
lods
mov
out
jmp
fidivrl
mov
cltd
xchg
push
pop
inc
je
inc
mov
aas
sysexit
mov
sub
inc
das
fmuls
pushf
jl
cmpb
inc
rcll
ss
dec
fcomps
lods
mov
or
mulb
add
jns
adc
xchg
in
mov
mov
into
aam
lock
js
ror
ljmp
ret
clc
push
mov
jbe
add
sarb
lret
dec
jbe
movsb
jg
sub
ret
cmpsb
dec
incl
popa
das
adc
call
jns
loopne
std
das
mov
rclb
mov
int
sbb
inc
movsl
push
daa
daa
xor
mov
jb
out
sbb
pop
dec
jo
inc
je
sbb
sbb
dec
cmp
pop
push
cmp
repnz
adc
adc
pushf
add
aam
inc
xchg
notb
sbb
iret
cli
fs
and
loopne
dec
add
push
das
addl
pop
out
loope
js
movsb
jecxz
sub
pusha
iret
adc
push
lock
push
mov
or
loope
xlat
push
push
push
sub
jle
push
imul
mov
hlt
hlt
add
iret
pop
xlat
push
sbb
jbe
pop
add
ds
cmpb
mov
aas
xchg
inc
scas
add
xchg
inc
sarl
mov
pusha
mov
adc
mov
aad
pusha
jnp
sub
cli
out
movsl
in
js
xlat
ret
movsb
stc
enter
cmpsl
cmp
mov
mov
aam
mov
sub
xor
mov
fisubs
inc
outsb
hlt
fs
or
mov
pop
popf
jp
fcompl
test
sbb
mov
or
daa
cltd
inc
pop
xchg
push
adc
mov
aaa
es
jl
cli
loope
or
out
xor
decl
popaw
cmc
cmpsb
mov
mov
sbb
add
mov
arpl
insl
fcomps
cmp
cmp
pop
push
call
cwtl
xchg
push
add
mov
jb
out
dec
or
pop
add
dec
pop
loope
dec
sub
and
lret
xchg
dec
movzbl
cmpsl
aas
pop
add
or
out
stos
inc
mov
pushf
clc
popf
adcb
mov
add
call
xor
push
jo
test
adc
push
inc
daa
iret
xchg
jge
jge
sbb
add
scas
inc
inc
ret
or
dec
cmc
xor
test
shl
add
test
call
cmp
sub
or
add
sub
mov
jmp
adc
push
test
movsb
adc
sub
add
pop
push
int3
mov
pop
xor
jnp
call
sub
nop
dec
int
push
inc
xchg
push
divl
sbb
add
roll
sbb
sbb
and
or
rcrb
stos
les
icebp
xchg
sub
mov
pusha
call
mov
add
pop
orl
inc
xor
data16
mov
sarl
mov
ljmp
cmp
inc
lods
and
pop
push
popf
les
fs
push
adc
test
or
mov
jno
adc
shl
cmp
ret
adc
or
xchg
mov
outsl
sub
out
pop
andb
sarb
adc
pop
jl
jecxz
xacquire
jae
pop
orl
pop
fwait
sub
mov
nop
mov
hlt
sub
mov
mov
pusha
jno
or
insl
fistl
push
mov
stos
or
mov
xchg
ds
and
mov
pusha
xchg
xor
adc
xor
push
js
addr16
cmp
mov
xor
loopne
test
xor
es
adc
and
adc
mov
lods
cmp
cs
push
push
xor
adc
inc
jne
jl
ficomps
adc
mov
push
js
sub
push
add
cmp
ficomps
sub
hlt
mov
popf
cmc
push
and
xchg
out
push
sub
sub
or
int
js
imul
clc
mov
mov
and
cmpl
lret
outsb
ret
cs
sub
adc
je
call
mov
add
sub
fucomip
dec
in
adc
pushf
ret
cld
fwait
lahf
lds
out
mov
stos
pop
adc
or
xchg
bound
xor
dec
stc
cmp
inc
mov
jae
sbb
push
or
push
bound
aam
cmp
mov
jo
sbb
mov
test
xor
ja
fs
scas
xor
mov
dec
inc
push
rcrl
mov
dec
mov
dec
in
mov
addl
mov
outsb
jl
and
inc
ret
xchg
lock
popa
fsubl
mov
pop
outsl
in
inc
dec
shll
inc
fidivl
mov
jl
jno
sub
dec
dec
outsb
xor
mov
sahf
xchg
nop
ds
cmp
in
in
and
test
or
mov
aam
push
fcoms
shll
inc
mov
call
pop
pop
jg
cld
mov
rolb
or
adc
lock
dec
int3
cwtl
pop
sub
add
loope
cmpsl
ficompl
add
cltd
adc
sub
dec
hlt
js
test
mov
xor
fcomip
das
mov
fldt
hlt
aaa
or
mov
roll
sub
adc
jecxz
push
fwait
pop
sbb
jl
jle
dec
cmp
inc
stc
dec
mov
lods
loopne
imul
test
inc
and
aam
and
mov
cli
xor
xchg
call
icebp
ja
add
repnz
add
popa
mov
fisubrl
andl
in
adc
dec
shll
jnp
mov
ret
dec
or
push
addr16
dec
mov
orl
jo
push
leave
lret
mov
arpl
xor
push
fidivl
mov
stos
sbb
mov
dec
les
ds
cmp
cmp
les
dec
xor
iret
inc
pop
mov
sub
outsb
push
jle,pt
sti
movsb
shrb
std
leave
pop
adc
shrb
pop
pop
dec
jmp
aad
vcvtsi2ss
rorl
xor
push
bound
cmpl
pop
add
mov
push
push
push
sbb
lahf
inc
xchg
cmp
and
arpl
in
push
clc
adc
pop
push
mov
cmp
hlt
nop
lahf
adc
cmp
and
clc
stos
xor
push
int3
stos
dec
hlt
popa
pop
in
add
jo
ret
std
into
incb
jle
cmc
xchg
popa
addr16
xchg
call
imul
add
xchg
movb
mov
ret
outsb
fwait
xor
jge
add
stos
addr16
cmp
jp
cwtl
xchg
mov
xor
arpl
adcb
dec
ljmp
push
fwait
push
cmp
jno
cmp
push
in
cmp
adc
adc
lock
lods
fsubp
stc
testb
push
icebp
pop
ds
push
add
mov
clc
mov
or
adc
pop
addb
push
js
add
xor
ljmp
cmp
jo
push
hlt
push
pop
jecxz
jmp
xor
push
push
mov
sbb
enter
out
pop
jo
xor
mov
fs
pop
push
adc
jle
cmpsb
sahf
push
inc
ret
and
xchg
adc
sub
push
outsb
int3
aam
subl
lods
popf
lret
ss
loopne
nop
adc
movsb
dec
in
jecxz
inc
mov
in
jnp
js,pt
int
xchg
sub
mov
adc
pop
icebp
mov
ds
push
mov
or
jle
test
hlt
cmp
sub
es
adc
mov
pop
inc
pop
fsubrs
jl
jno
testb
in
movsl
push
inc
sbb
adcl
shrb
xor
adc
test
xor
jo
jecxz
xlat
mov
and
mov
enter
jns
and
dec
xchg
rcl
push
mov
js
xor
push
pop
imul
addl
sti
in
lock
inc
mov
adc
orb
mov
pushf
inc
push
mov
jae
pop
push
inc
pop
in
icebp
test
shll
xchg
push
dec
pop
mov
add
lcall
push
inc
lcall
and
xlat
mov
mov
mov
fnstenv
inc
mov
test
xchg
rorb
add
fcmovnu
jb
shlb
push
dec
shrl
sti
out
cmp
stos
lock
popf
inc
stos
push
rclb
push
or
jbe
andb
jns
stos
inc
mov
fs
jle
sub
add
rcrb
insb
paddd
cmp
add
in
ss
lods
mov
xchg
add
sbb
lods
aam
dec
jmp
adc
jbe
cmp
into
icebp
adc
cmp
test
xor
add
out
or
mov
xchg
mov
jmp
pop
orl
test
xchg
mov
je
rclb
push
mov
nop
dec
clc
pop
sub
add
adc
inc
sarl
lahf
and
int3
je
push
test
mov
ljmp
inc
push
dec
push
sarb
xor
dec
pop
pop
stc
or
cmpsl
out
sub
sub
mov
push
fstpt
dec
sub
loope
adc
pop
lods
mov
lret
and
jmp
push
fidivl
scas
lcall
xor
xchg
clc
fildl
pop
push
dec
add
xchg
or
fisubrl
push
mov
outsl
jns
loope
stos
ds
lods
mov
std
push
arpl
jb,pt
and
in
aaa
fisttpll
mov
sbb
hlt
pop
out
mov
cltd
jne
lock
nop
pop
dec
stos
repz
push
push
push
ds
xor
and
andl
fisttpl
lret
pusha
push
sbb
adc
pop
xor
stos
or
or
or
aas
les
cli
es
cmp
outsb
shlb
or
xor
icebp
imul
jge
and
adc
add
js,pt
push
mov
jl
ficoms
mov
in
mov
icebp
comiss
adc
cwtl
pusha
std
pop
xor
ja
mov
add
mov
out
mov
adc
push
cltd
cli
lcall
fidivrl
mov
mov
or
push
and
mov
loopne
stos
fimull
mov
or
cli
mov
mov
mov
adc
pop
and
xlat
mov
adc
pop
dec
sbb
mov
jmp
imul
mov
dec
mov
adc
sub
push
mov
or
sub
push
gs
and
cli
add
dec
fcoms
push
lods
cli
imulb
sbb
xchg
push
xchg
rcl
add
les
out
sub
sub
int3
fstpt
pusha
dec
sub
or
cmpsb
mov
push
push
inc
mov
dec
inc
sbbl
sub
push
cli
into
push
movsl
jl
jno
mov
add
sub
xchg
pop
or
es
js
loopne
out
daa
adc
push
jmp
cmp
pop
lret
adc
cli
aaa
mov
lods
push
mov
mov
mov
add
dec
call
push
sbb
mov
xchg
add
mov
push
jle
inc
cmc
iret
xor
add
fisttpl
adc
xor
add
sub
xchg
push
les
sub
mov
test
aaa
cmp
pop
push
pusha
roll
or
add
in
in
mov
clc
cmpsb
stos
lds
aam
push
pop
sub
jp
outsb
pop
cmpsb
xchg
std
fcoms
lea
adc
mov
pop
out
push
fdivl
popa
loopne
fstpt
mov
fs
xor
inc
andl
jp
fcomps
lods
push
pusha
mov
js
lock
lock
ss
push
jb
arpl
cmp
das
sbb
aas
adc
lods
pop
xchg
pusha
testb
aad
or
aad
adc
pop
cld
aad
jne
xor
adc
popa
aad
cmp
xchg
xchg
cmc
aaa
adc
xor
leave
into
or
inc
lea
mov
scas
pop
mov
fdivrl
fiadds
gs
pusha
mov
in
rol
sub
loop
cld
das
fnsave
pop
je
scas
sub
leave
sub
cmc
bound
lds
aam
lret
dec
cmpsl
pop
dec
ss
sbb
bound
sbb
fcomps
testb
dec
dec
outsb
int3
loopne
dec
ffreep
sbb
and
aaa
fdivl
mov
enter
lret
push
into
pop
fistpll
mov
mov
or
insb
or
ss
lock
insb
je
pop
insl
xchg
shlb
repz
cmpsl
push
insb
fs
cmp
or
call
stc
stc
push
into
add
test
adc
push
add
xchg
jp
lret
cmp
insb
inc
imul
xchg
pop
mov
dec
lods
mov
sub
sbb
ldmxcsr
xchg
xchg
iret
mov
or
sub
dec
in
add
mov
add
rorb
xchg
andb
sarb
and
mov
loop,pt
mov
and
xchg
sub
jl
jb
push
popf
insl
jnp
aas
xor
mov
cwtl
push
lock
ljmp
fdivl
and
fcmovbe
push
adc
push
arpl
ss
add
inc
mov
or
aad
push
mov
fimuls
sub
xchg
pusha
mov
xor
and
adc
mov
push
sbb
jl
or
xchg
ds
jno
xchg
rorb
fld
xchg
repnz
adc
inc
mov
lcall
cli
popf
sub
aad
movsl
lret
test
jno
pop
clc
ret
xlat
in
lock
pop
pushf
cmp
mov
das
pushf
nop
jbe
out
filds
call
mov
rorb
xor
cld
stos
lods
fs
out
je
ret
lret
cwtl
mov
test
mov
subl
dec
mov
xchg
jg
shrl
scas
in
mov
mull
push
lret
jno
ret
dec
mov
cli
outsb
and
push
mov
cmp
out
shrb
xchg
insb
sbb
shlb
cltd
xor
je
pop
into
mov
ds
xor
lea
mov
outsl
sbbl
into
cmc
clc
or
std
loop
and
hlt
mov
lds
in
mov
fists
sbb
jno
xchg
add
push
clc
push
and
scas
ret
sub
ret
sub
rcrb
shlb
jo
ljmp
icebp
add
lcall
adc
arpl
addr16
mov
scas
test
mov
sbb
das
mov
cmp
test
xorl
add
mov
dec
push
aaa
mov
stos
dec
and
mov
jp
cmp
and
cmp
push
jbe
sbb
push
and
mov
pop
movsl
jp
xchg
adc
sahf
bound
aas
into
addr16
popa
sub
push
leave
xor
add
test
loop
mov
push
adcb
lret
pop
ret
rcr
jnp
shll
cs
daa
fwait
sahf
fimull
push
or
pop
rcrl
and
imull
adc
jbe
lret
inc
xor
arpl
jbe
mov
repz
jo
dec
sub
adc
negb
mov
lock
push
lods
push
aam
cld
popa
or
sub
ret
mov
fmuls
ret
push
insb
dec
jae
jo
ljmp
lcall
lock
mov
repz
and
xorb
movsl
cmp
stc
pusha
add
arpl
test
inc
data16
mov
aas
loop
mov
push
add
test
stos
rorl
add
rol
subb
push
stos
mov
xchg
pop
orl
jp
idivb
mov
fs
movl
inc
mov
subl
sbb
scas
cwtl
cwtl
mov
mov
sbb
mov
faddl
lock
popa
addr16
mov
cmp
pop
cld
add
mov
and
fcoml
push
xlat
in
mov
and
gs
jge
pop
dec
sbb
jg
pop
inc
icebp
sub
ret
xlat
test
loop
fsubs
jne
and
daa
fwait
ret
icebp
sbb
xor
in
sub
mov
inc
push
test
and
test
sbbb
sbb
lret
jg
inc
scas
or
mov
cld
xor
or
pop
ss
mov
or
aad
in
jae
sub
adc
mov
rcl
iret
ret
sbb
dec
jns
imulb
push
je
and
ljmp
adc
loop
or
push
push
lock
sbb
push
in
push
sarl
push
jnp
cwtl
adc
mov
mov
inc
ret
addr16
std
aam
jge
loop
mov
adc
cmp
xchg
ret
shlb
add
ret
int3
jmp
xlat
mov
in
xor
cmp
cld
mov
push
xor
insl
popf
mov
xchg
inc
movsb
ja
shl
dec
into
and
clc
fisttpl
decb
fldenv
sbb
push
mov
add
mov
loope
pusha
xchg
push
and
stos
jmp
jge
push
leave
pushf
lods
jmp
lea
push
or
jg
pop
xor
addb
out
mov
and
inc
aas
cltd
inc
xchg
fiaddl
clc
inc
insl
jbe
push
rol
cwtl
jnp
daa
cld
into
xchg
inc
pop
add
hlt
std
mov
mov
xchg
mov
je
test
adc
pusha
rcrl
pop
pop
in
js
xlat
pop
es
pop
mov
loopne
mov
sub
jle
mov
add
push
stc
push
mov
push
mov
fld
mov
and
mov
or
fwait
lock
xchg
cmp
jle
pop
sub
inc
pop
out
rcl
pop
adc
lahf
pushf
test
jbe
psubb
pop
xchg
clc
add
ret
aad
xlat
call
daa
into
fwait
nop
mov
cmp
jp
test
mov
es
xor
icebp
and
and
push
lock
repnz
aas
mov
lahf
push
jg
push
aas
adc
test
shrb
pop
adc
stos
add
sar
lock
div
jg
xchg
sti
ret
add
xchg
mov
xchg
in
or
repz
stos
xor
xchg
scas
mov
add
les
add
sti
lock
pop
pusha
inc
inc
xor
push
outsb
je
and
add
add
push
adc
add
jge
insb
jns
mov
incb
out
test
scas
notb
adc
lret
shlb
cwtl
pop
fsubl
call
or
test
sbb
jecxz
push
decl
and
inc
add
inc
adc
ss
jno
enter
lret
sub
in
push
push
xchg
in
jl
hlt
inc
push
imul
mov
fwait
stos
fisttpl
mov
roll
inc
sbb
sti
mov
rcrb
or
jge,pt
in
je
loop
lcall
inc
popf
pop
popa
and
and
int
cltd
lods
adc
pop
sahf
nop
push
jle
mov
enter
and
push
test
jle
pop
les
jno
test
je
lret
add
inc
push
and
clc
icebp
sbb
ret
loop
xchg
add
or
and
mov
loopne
push
fadd
push
out
mov
add
mov
push
push
mov
movsb
push
into
inc
jae
dec
pop
popa
aaa
icebp
adc
daa
push
mov
cmp
or
jmp
jmp
test
dec
sub
movsl
ds
call
stc
xorb
lds
arpl
fstpl
jg
in
out
out
fwait
mov
sub
jnp
aas
push
or
sbb
mov
mov
jno
inc
out
sbb
and
mov
xor
push
sub
mov
cmpsl
ja
pushf
pusha
enter
mov
mov
jle
mov
loop
mov
add
xor
sbb
mov
ljmp
jg
cmp
lret
icebp
pop
push
add
xchg
mulb
mov
or
jmp
aas
add
mov
add
dec
movsl
scas
popa
xor
ret
mov
cmpb
add
xchg
cmp
mov
and
aad
movsb
sbb
scas
rcrl
pop
cmpsb
cli
shlb
loop
inc
dec
repz
push
push
sbb
sub
sub
loopne
dec
nop
loop
push
xorl
addr16
arpl
adc
dec
repnz
dec
mov
mov
rorl
andb
cmp
xor
cltd
lock
dec
shrb
push
add
scas
and
push
cmp
movsb
sub
jecxz
loopne
and
mov
call
jmp
mov
and
add
scas
or
mov
push
repnz
rclw
or
mov
cs
ja
mov
mov
cli
cmpsl
jbe
xchg
in
xchg
xor
mov
pop
cmp
inc
cmc
imul
pop
jae
sub
pop
rolb
das
cmp
testb
sbb
lret
dec
xchg
cmc
xchg
out
xchg
stos
and
bound
call
jae
xchg
and
push
push
fistl
add
popa
mov
or
cmpl
in
adc
stc
jnp
cmpsb
xchg
dec
cmp
pushf
enter
mov
sbb
jno
inc
mov
or
push
shrl
xor
lea
jbe
mov
pop
xlat
das
and
fisubl
in
loop
movsb
push
mov
lds
movb
pop
xchg
sbb
loop
loop
inc
nopl
std
or
push
in
xlat
cli
jg
sbb
into
outsl
out
and
mov
mov
jp
in
fstpl
inc
ljmp
pop
mov
icebp
test
outsl
data16
icebp
in
and
ljmp
dec
scas
dec
or
cs
dec
hlt
cmp
rclb
xchg
inc
mov
subb
mov
leave
icebp
jb
or
outsb
lods
mov
fsubs
cmpsl
dec
out
sbb
jbe
aas
mov
shll
subl
pop
cmp
insb
or
movsb
add
or
or
mov
das
outsl
add
sub
subb
mov
or
lret
aad
cmc
movsl
imul
aas
jp
add
push
sbb
cld
dec
roll
fisttpl
push
add
add
fisubs
bound
dec
shrl
call
pop
sarb
imul
rcr
roll
sbb
mov
or
je
scas
inc
add
cmpsl
testb
cltd
data16
ret
push
std
or
mov
repnz
sbb
pop
les
or
sub
arpl
mov
out
mov
lea
push
sub
loopne
cmp
mov
sbb
imul
adc
mov
jle
push
je
push
xchg
das
push
push
push
cmc
fsubs
stos
insl
popa
mov
scas
pop
dec
lock
push
aam
push
cli
and
sub
int
push
into
mov
or
fcomps
or
or
orb
pop
cld
sbb
xchg
pop
rcll
cmp
jp
sahf
add
call
xchg
push
loope
add
jbe
scas
jl
rolb
sbb
pusha
mov
push
mov
mov
push
int
jno
or
add
jbe
dec
enter
xchg
je
push
cmp
dec
pxor
and
or
push
sub
mov
pop
xor
mov
push
shll
cmp
dec
xor
loopne
pop
fistps
xchg
and
and
outsb
incl
sub
mov
or
mov
pop
sbb
mov
sti
or
test
mov
xor
sbb
mov
test
xchg
lods
fldl
lahf
dec
xor
lock
push
hlt
mov
insb
mov
je
fnstenv
mov
and
loope
not
dec
call
out
ds
hlt
push
aam
sub
inc
xor
or
cld
pop
add
repz
rorl
xchg
mov
dec
xchg
loope
push
xchg
jg
in
jp
push
ljmp
mov
scas
cli
cwtl
pop
add
push
xchg
in
adc
pop
add
jle
cmp
push
inc
push
mov
push
clc
imul
pop
fdivrs
loopne
loope
inc
data16
sbb
rolb
test
and
pusha
nop
hlt
stc
ljmp
mov
mov
mov
add
push
movsb
lods
mov
loope
push
shrb
iret
mov
and
xchg
insb
pop
jmp
mov
lock
mov
jp
push
lcall
movsl
cs
daa
dec
pop
xchg
push
jno
adc
mov
cmp
add
fcmovnb
cmp
add
xor
outsl
push
popa
xor
push
inc
nop
nop
jmp
sbb
leave
fwait
jecxz
movsl
pop
insl
push
add
xor
push
jno
out
or
jl
jb
dec
and
andb
push
sbb
lods
repz
sar
ja
or
pusha
push
out
nop
add
iret
push
rorl
xchg
or
shl
adc
xlat
out
js
jecxz
adc
clc
ljmp
xchg
xchg
ss
test
test
jmp
and
add
insl
mov
cmpsl
push
push
add
cmc
mov
mov
pop
sbb
mov
add
sub
mov
ljmp
push
mov
mov
xchg
jo
jmp
jno
and
push
loopne
add
stos
sub
mov
rolb
mov
mov
rolb
movsl
stos
adc
pop
inc
test
ret
jb
incb
mov
lret
jo
sbb
stos
fbstp
in
push
adc
jg
cmp
and
jno
ret
mov
fiaddl
or
stos
mov
ret
jp
sub
xchg
xchg
rcrb
je
mov
push
jmp
jl
mov
and
cmp
dec
cmpb
mov
xchg
shrl
jb
aam
roll
push
pop
push
dec
popa
ficoms
inc
add
push
adc
movl
call
xor
fiadds
dec
push
popl
mov
push
adc
push
std
mov
push
mov
aaa
pop
mov
pop
mov
lahf
mov
xor
fildll
add
cltd
push
rcrl
cwtl
rcll
add
adc
lock
test
push
ror
icebp
les
cmpsl
xchg
push
pop
loope
mov
add
mov
es
inc
mov
jbe
mov
or
enter
test
inc
adc
sub
push
test
scas
mov
loope
add
push
dec
int
mov
sar
sub
push
inc
pop
sbb
mov
mov
js
push
pop
cld
negl
or
mov
and
mov
hlt
mov
std
push
and
mov
xor
out
push
pop
test
pop
sub
lods
jmp
jg
out
adc
adc
outsb
in
sbb
icebp
jg
push
das
push
rorb
mov
sarb
roll
aad
dec
aaa
add
pop
jae
lret
dec
pop
hlt
mov
lahf
cmp
rolb
adc
adc
andl
mov
add
dec
add
imul
fcomps
jg
cmpb
fstpl
mov
loope
push
insl
nop
out
cmp
xchg
movb
bound
mov
mov
out
mov
call
or
push
loopne
and
je
insb
fidivrl
mov
jg
jecxz
aas
jo
adc
out
repz
cmpsl
movsl
xlat
push
fdivr
ret
jno
outsl
fs
jle
mov
adc
cli
mov
add
sbb
je
test
mov
jns
addr16
xor
insb
push
in
cwtl
inc
ja
icebp
push
out
push
pop
xor
subb
inc
xchg
mov
mov
das
push
jmp
call
enter
xchg
push
pop
cmpsb
scas
push
dec
or
mov
xor
loopne
lock
in
and
lret
cmp
mov
push
jg
add
clc
xor
cmp
mov
into
cli
jp
pop
sbb
dec
cmp
mov
sbb
call
pop
fimull
cmp
std
std
xchg
into
rcr
fwait
inc
addl
mov
or
das
mov
cmp
inc
mov
add
mov
mov
loopne
mov
add
dec
int3
pop
cmpl
bound
lret
aaa
test
add
dec
sub
cli
cmpb
jae
xor
fwait
lods
arpl
sbb
int3
mov
jnp
ret
xor
or
lret
sub
shlb
inc
sub
add
les
out
jo
enter
fldpi
inc
and
pop
sbb
addb
push
icebp
loop
loopne
push
nop
push
sbb
mov
and
aas
jb
movsb
push
dec
fisubrl
or
and
mov
cld
adc
jo
lods
decb
sbb
dec
inc
inc
hlt
test
ret
sbb
cmc
push
inc
dec
mov
stos
jo
nop
sub
fmuls
shl
xlat
cs
rorl
scas
pusha
adc
adc
pop
mov
sub
inc
push
fildl
push
xor
lods
sub
fidivl
push
jg
lahf
nop
and
mov
lock
adc
fbld
nop
iret
clc
adc
sub
xor
mov
add
in
rcrl
mov
insb
sbb
test
add
hlt
fs
xor
int3
popa
js
jecxz
mov
outsb
in
xor
sahf
push
ja
add
daa
xor
inc
pop
pop
out
add
andl
ljmp
adc
adc
nop
stos
divl
add
cmp
rcrl
inc
pop
cmp
cmp
xchg
adc
adc
addr16
add
outsl
xchg
mov
add
inc
add
cmp
popl
add
dec
dec
push
and
inc
xor
dec
rorl
adc
cmp
or
test
dec
inc
xchg
iret
movsb
andl
lahf
hlt
clc
adc
out
dec
pop
mov
adc
cmc
cli
insl
push
rcr
mov
jp
les
mov
pop
sub
or
and
je
hlt
sbb
jge
imul
push
xor
jne
add
dec
jb
mov
addr16
pop
out
popf
mov
arpl
jp
stc
mov
jae
sahf
push
sbb
aad
xchg
dec
loopne
aaa
ds
or
push
ljmp
push
mov
mov
cs
popf
hlt
xchg
jbe
in
clc
and
pop
fsubl
arpl
mov
stc
aam
ljmp
xchg
add
adcb
fisttpl
int3
test
push
jns
aas
cmp
stos
xor
lock
outsl
xor
push
mov
jno
data16
fbld
scas
lret
mov
xchg
sub
mov
cld
and
cmpsb
ret
sbb
inc
adc
andb
add
ret
lea
orl
int3
in
sub
inc
mov
das
inc
out
scas
inc
dec
insb
dec
pushf
jno
cmp
fcomp
dec
aaa
dec
add
mov
sub
outsl
jge
cwtl
or
and
sub
xor
data16
xchg
push
pop
cwtl
push
lock
mov
call
out
add
mov
xor
xor
mov
push
sahf
xchg
lock
pop
xchg
xchg
mov
loopne
stos
sbbl
inc
mov
dec
jle
shl
adc
mov
xor
adcb
push
aam
cmp
jb
sbb
adc
lahf
pop
pushf
popa
and
pop
lds
call
mov
jne
pop
pop
mov
shld
call
je
out
push
lcall
push
dec
mov
cmp
inc
cmp
and
jmp
add
lock
cmp
test
outsl
ret
in
dec
jo
mov
arpl
ficoml
dec
cmc
xchg
mov
test
xor
dec
mov
sarb
or
sbb
inc
or
loope
mov
stos
popf
sub
lret
in
cmpsl
dec
pop
dec
pop
push
scas
repnz
add
and
hlt
push
mov
std
shlb
lock
mov
pusha
lea
pushf
loope
emms
push
inc
jp
rorb
je
adc
inc
movsb
mov
aas
mov
xchg
xor
push
adc
or
add
adc
mov
stc
pop
gs
adc
imul
mov
fsubr
jp
stos
mulb
popa
lret
mov
lods
jae
sbb
ret
and
sti
add
mov
mov
pop
xchg
insb
sub
je
pop
addb
popa
cli
sbb
jle
or
jmp
imul
xchg
sbb
rcrb
pminsw
cld
sbb
push
js
sahf
inc
sbbb
sub
cmp
jbe
pop
in
cmp
call
pop
mov
push
shlb
sbb
in
ds
inc
sbb
loopne
inc
cwtl
mov
orb
pop
mov
dec
xorb
cmp
cmc
stos
std
icebp
test
sbb
and
inc
xor
pop
push
movsl
push
mov
iret
xchg
dec
dec
add
xchg
inc
out
mov
mov
lock
mov
loop
fdivrl
pop
ds
insl
inc
pop
mov
and
loopne
aam
xchg
dec
mov
mov
mov
or
cltd
mov
call
inc
out
or
adc
test
jp
and
sub
add
je
das
aas
gs
inc
hlt
jecxz
jne
cmp
out
es
daa
scas
pop
mov
mov
rolb
push
cmp
pushf
pop
rorl
in
shrb
mov
insb
pop
insb
mov
and
xchg
out
test
std
xchg
aaa
ljmp
mov
adc
cmp
inc
sub
xchg
dec
cmp
inc
add
testl
dec
xor
cld
inc
jbe
inc
xchg
in
cli
js
loopne
pop
movsb
pushf
mov
or
les
sbb
cmpsl
out
mov
jle
repnz
lods
xor
cli
pop
out
repz
sub
sbb
cmp
lds
imul
stc
lock
mov
mov
es
dec
cmp
data16
jb
data16
aas
cmp
sub
orl
pop
or
movhps
popa
and
mov
sbb
in
inc
sub
idiv
das
hlt
lcall
loop
in
mov
aas
lea
cmpb
pusha
fisttpl
pop
rcrl
push
in
jecxz
movsb
in
negb
aad
inc
lods
or
pop
xor
add
or
lea
cmc
outsl
out
lret
mov
nop
mov
cmp
jnp
cmp
lret
dec
mov
test
pushf
test
pop
mov
add
inc
mov
test
setg
dec
push
adc
sbb
dec
or
fnstsw
cli
cwtl
xchg
push
shr
fwait
jae
cld
adc
pminsw
mov
addb
clc
xlat
xchg
add
add
inc
jbe
sbb
mulb
jne
jmp
mov
fisttpll
lcall
xor
xor
divl
cs
mov
aad
test
clc
fisttpll
mov
lods
mov
into
loope
call
enter
stos
movsb
lock
aas
sti
mov
pop
imul
xor
and
push
cli
insb
dec
mov
loopne
push
and
ljmp
leave
inc
mov
fstpt
or
fsubrs
je
adc
or
cs
cmp
or
push
xchg
test
push
inc
jne
xchg
and
cmp
sbbb
and
iret
xchg
lods
orb
into
jmp
dec
push
fimuls
js
dec
cwtl
test
pop
sbb
and
push
test
mov
dec
arpl
mov
sbb
mov
xchg
mov
xor
stos
pop
mov
enter
sub
rorb
in
shrb
mov
push
dec
or
fimuls
int3
xchg
xchg
mov
push
rcrb
sub
movl
cmp
jg
add
not
push
mov
push
lcall
or
scas
stos
cmp
add
ljmp
in
xchg
mov
xchg
xchg
clc
notb
pop
mov
sub
inc
cmp
add
adc
and
rclb
fnstenv
jl
mov
adc
gs
or
dec
lahf
clc
ss
cmpsb
or
cmp
push
ljmp
ja
cmp
aaa
not
lds
insl
pushl
dec
sub
dec
int3
add
cld
inc
jle
add
outsb
push
cld
xchg
movsb
jl
pusha
adcb
mov
mov
popf
lods
in
jb
repz
subl
lods
sbbb
nop
jnp
jo
jmp
mov
mov
lods
popf
ljmp
jns
cmp
sahf
out
xor
and
outsb
cmp
cmp
call
mov
stc
ss
shlb
inc
fsubl
cmp
xchg
ljmp
loope
test
jp
and
fisttpl
sbb
jo
pop
push
mov
pusha
aad
pop
mov
mov
sbb
decb
add
inc
mov
xchg
sbb
mov
fcoml
inc
cld
inc
cli
enter
popf
xchg
aaa
sbb
pop
pop
sbb
out
neg
inc
jl
in
xchg
sbb
adc
mov
call
daa
loope
pop
mov
lods
testl
out
push
fdivrl
add
sbb
roll
test
sahf
inc
sbb
jbe
pop
out
jg
lret
in
iret
push
jge
push
jg
int
stos
push
or
inc
pop
out
jns
shlb
iret
jne
sbbb
leave
push
lock
int3
jp
cs
lea
cmp
pushf
pop
sub
pop
mov
loope
lret
add
pop
push
mov
mov
sbb
inc
call
cmp
xor
ja
or
cld
jle
cld
jge
lahf
rclb
and
aad
inc
pop
jg
cmp
cmpsb
lahf
or
in
in
out
daa
scas
lfs
shl
lea
push
push
cmpsl
cmc
repnz
stc
add
std
jmp
adcb
sub
cmp
dec
cmp
adc
xor
sub
pop
xchg
cmp
sub
lret
add
push
jnp
push
lods
push
outsb
add
data16
sbb
inc
fcmovb
xchg
jg
outsb
sbbb
hlt
jg
mull
fildll
in
pop
pop
data16
mov
or
movsb
pusha
roll
repnz
mov
mov
inc
cmp
in
mov
fsubrl
loope
rorb
pushf
rep
sahf
jl
enter
add
adc
adc
push
js
ror
pop
mov
fs
in
out
add
out
sbb
inc
emms
pop
push
xchg
mov
mov
sti
and
popf
mov
cld
clts
or
scas
jno
and
ds
push
outsb
sbb
int3
movsb
sbb
push
mov
jmp
mov
ret
aad
sbb
aad
cmpsl
test
je
push
mov
orb
adc
push
inc
pop
sub
and
pop
inc
repnz
aad
decl
adc
adc
pop
xor
ret
iret
cli
pop
loopne
fs
out
call
inc
jmp
pop
adc
inc
adc
clc
pusha
shlb
adc
jmp
mov
push
mov
aas
push
test
clc
and
push
sbb
add
sub
inc
movsl
dec
push
and
loopne
inc
std
insb
out
mov
ret
lock
movsb
loopne
mov
mov
decb
adc
es
pop
fsub
mov
in
pushf
ja
lcall
les
sbb
jl
ficomps
pop
inc
ja
or
push
sbb
jo
and
jle
jg
xchg
cmpsl
jnp
imul
xchg
xchg
sub
add
icebp
and
push
popa
orb
pop
cli
pop
xchg
aam
xchg
push
pop
loope
cmp
or
dec
adc
sub
sub
push
inc
rorb
pop
xor
jge
and
into
jle
outsl
mov
and
inc
aam
mov
sbb
mov
pop
mov
lock
xchg
or
aam
mov
jbe
xchg
sbb
stos
scas
shlb
jne
sub
test
outsb
jb
pop
mov
mov
sbb
add
and
sbb
mov
xor
cmp
sbb
mov
push
fiadds
adc
out
test
xchg
jo
jne
xor
pushf
dec
ja
jne
movsl
sub
sub
or
adc
mov
in
xor
lods
push
movsl
lock
add
andl
and
cmp
jb
icebp
sahf
cmp
out
push
sbb
std
iret
mov
sahf
sar
mov
imul
mov
push
out
call
jecxz
xlat
adc
clc
in
in
or
pop
incb
dec
pop
leave
movsl
addr16
jmp
rorb
pop
xchg
sub
push
cmp
cmp
mov
add
clc
stos
push
stc
dec
dec
jne
les
daa
call
add
push
cmc
push
dec
or
or
push
pushf
adc
adc
stos
push
push
out
scas
std
and
add
jo
lcall
iret
and
add
push
scas
nop
pop
push
mov
mov
jnp
cmp
incl
roll
outsl
sarb
inc
pop
mov
xor
stos
dec
call
and
nop
mov
test
ret
cmc
or
sub
test
adc
frstor
outsl
mov
mov
add
lahf
xor
jp
insb
dec
cld
ret
xchg
mov
lahf
or
mov
jnp
in
mov
sbb
and
or
mov
xor
add
out
cli
xchg
jo
aam
js
cmc
add
subb
mov
das
sub
or
fnsave
movsl
jbe
sbb
mov
flds
ss
sbb
int3
test
push
cli
das
fimuls
add
adc
adc
dec
jne
loop
sbb
dec
mov
lahf
hlt
addb
sub
mov
popa
incb
and
popf
je
jl,pt
out
call
pop
jb
stos
sub
adc
ret
leave
out
pop
shrd
or
rclb
pop
jp
decl
or
sbb
or
sbb
scas
pop
push
cmp
mov
push
cld
mov
and
das
fisubrs
jle
cld
addb
in
mov
add
lahf
call
mov
or
pop
int3
push
mov
data16
es
add
cltd
sahf
jne
xor
inc
adc
addr16
or
sub
clc
add
xchg
xor
sub
stos
test
jle
pushf
andb
xor
dec
add
adc
or
cli
mov
adc
fnstsw
shlb
pop
jo
adc
mov
clc
mov
add
in
sub
fldl
scas
or
add
inc
or
jp
inc
filds
test
push
clc
adc
sbb
jmp
mov
mov
into
fxch
mov
add
shl
push
add
test
adc
jnp
push
sbb
fnstcw
hlt
pop
dec
xchg
cmp
xchg
aaa
call
fwait
jne
out
or
cmp
mov
cwtl
pop
sarl
add
add
add
cmpsl
xchg
ret
fidivrs
or
xor
xor
fiadds
in
add
movsl
adc
ljmp
xor
insl
shlb
aas
jl
and
xor
inc
push
inc
add
pop
xlat
sahf
xchg
mov
inc
or
inc
int
shll
imul
jecxz
or
gs
mov
sbb
mov
lods
lret
xchg
or
add
xor
dec
mov
movsl
ret
into
cwtl
insl
adc
push
aad
push
lea
push
scas
icebp
sbb
mov
xlat
push
mov
jb
push
outsl
add
cwtl
and
fldt
orb
in
es
pop
sub
mov
or
nop
dec
hlt
dec
jbe
adc
sbb
or
jp
test
push
lret
xor
js
fs
int3
push
add
test
push
les
in
inc
in
dec
ret
xor
xor
aad
mov
mov
mov
stos
push
add
push
lahf
xchg
imulb
lods
pop
push
stos
ss
mov
mov
pop
inc
dec
cmp
fs
push
adc
shrb
cmp
scas
outsb
shr
lods
add
push
je
pushl
pop
subl
push
fbstp
ffree
lahf
lock
cmp
sbb
push
clc
ret
stos
push
push
mov
loopne
xor
mov
jmp
lahf
xchg
mov
into
rcl
pop
mov
and
lcall
sbb
mov
push
sbb
sbb
icebp
push
int3
mov
ds
add
push
mov
je
rorl
mov
bnd
daa
mov
push
leave
shll
std
jo
or
std
xchg
arpl
inc
ret
fldt
xor
mov
in
push
sahf
lods
mov
fwait
jnp
ja
inc
addr16
fbld
mull
lds
jge
mov
push
jl
subl
repnz
xor
dec
pop
cmp
jge
mov
sarl
subb
or
int
or
pop
lea
cmpsb
test
cmp
dec
or
xchg
mov
cli
pop
cmp
adc
hlt
js
ds
inc
stos
mov
orl
test
adc
push
lds
pop
int
movsl
mov
and
mov
push
sbb
fildl
imul
mov
imul
inc
shrl
mov
fildl
paddsb
sbb
push
hlt
mov
cmp
out
sub
ffree
incb
stc
andl
loopne
xchg
jmp
lahf
ret
pop
loope
mov
pop
dec
sbb
mov
lcall
mov
mov
fs
xchg
adc
scas
lret
das
test
push
add
bound
pop
dec
cmp
lods
inc
inc
add
mov
jle
roll
pushf
pushf
xor
das
imul
rcll
push
shlb
add
adc
and
pop
mov
lcall
jo
clc
add
adc
mov
or
call
jp
rcrb
xor
pop
les
xchg
cmpl
gs
fsubp
mov
in
and
lods
js
and
mov
pop
arpl
add
add
jg
shlb
mov
dec
xor
loopne
scas
inc
hlt
inc
pusha
sbb
stc
push
xor
js
shll
xor
in
xorb
lock
jg
fstpt
lds
pop
mov
xor
inc
icebp
dec
stos
jle
pop
jnp
mov
and
cmpl
sbb
in
addl
sbb
and
fdivrs
sti
loope
mov
push
adc
fcmovb
xchg
adc
push
push
dec
ja
test
or
mov
rcrl
jne
push
call
or
add
mov
leave
push
cmp
sbb
pop
adc
clc
ljmp
movsb
inc
mov
xchg
xor
xchg
pop
cwtl
mov
sbb
inc
imul
add
xor
ds
orl
shrl
js
fnstsw
std
data16
movsb
inc
es
loope
sub
pop
lock
test
repz
inc
add
imull
xchg
cmp
ja
sub
rcl
insb
jb
ljmp
add
mov
loope
add
stos
xchg
and
push
push
inc
mov
pop
pop
popa
in
pop
js
xchg
in
lcall
mov
push
js
pop
push
test
pop
xchg
cli
add
push
ds
popf
mov
pusha
loop
jle
or
clc
sub
pushf
out
aad
ret
clc
or
sti
and
push
push
mov
jnp
jle
xor
mov
rcrl
sbbl
push
push
stos
mov
mov
xchg
and
sub
movsb
in
inc
mov
std
shlb
inc
icebp
pusha
cmp
daa
xchg
and
pop
lock
loopne
or
jecxz
daa
add
xchg
adc
call
lock
mov
pop
sbb
push
jns
scas
rcll
shl
jge
popa
je
stos
inc
andl
sti
push
add
ror
cli
jns
shll
pop
sub
sbb
movsb
adc
sahf
fs
sarl
adc
cmp
inc
pop
loop
add
cs
and
jne
pusha
dec
add
std
add
imul
lods
xchg
mov
cmp
push
je
lret
lock
ret
pushf
pop
inc
and
cmc
or
popa
xor
ret
cmp
loope
sub
movsb
push
test
lcall
push
bound
sbb
or
cmpsl
ds
inc
ja
inc
nop
mov
sbb
push
jae
pop
sub
fidivrs
sbb
sbbb
scas
bound
dec
out
pusha
scas
jbe
loop
ret
dec
xlat
movsl
fwait
or
iret
add
pop
jbe
sbb
xor
fildll
adc
rclb
mov
pusha
cltd
or
pusha
hlt
jge
cs
inc
fwait
int
lock
ja
push
or
cmp
mov
ljmp
rcrl
mov
pop
mov
adc
imul
and
xor
das
push
pushf
call
xor
cmp
pop
sub
shl
xor
cmp
inc
out
lods
imul
mov
mov
movsl
rclb
adc
mov
add
cmp
push
enter
inc
aam
pop
std
add
and
cwtl
sbb
ret
popf
and
jle
or
imul
lock
sub
mov
pop
jne
adc
cmpsb
push
cmp
push
ret
nop
cwtl
rcrb
es
xor
mov
add
dec
mov
push
cli
xor
push
lahf
js
icebp
pop
xor
lods
and
pop
shl
fucomip
in
out
sbb
sub
push
xor
pop
add
inc
jge
and
icebp
adc
sub
dec
test
pop
js
jb
and
xor
push
cmc
outsb
loop
pushf
sub
dec
mov
sahf
jl
add
cwtl
pushf
xor
mov
and
fdiv
test
gs
dec
in
xchg
inc
adc
ret
test
sub
jne
insl
mov
mov
stos
sub
aaa
inc
jle
xchg
enter
lock
iret
stos
adc
add
pop
jmp
xchg
das
cmp
inc
add
rcrl
fmuls
rorb
inc
loopne
mov
aad
dec
push
icebp
ss
test
push
iret
popf
push
mov
mov
scas
js
dec
jl
xchg
inc
inc
ja
sbb
cmp
dec
xorb
test
mov
adc
cli
int
inc
mov
sti
ret
lahf
inc
mov
sub
mov
xchg
stos
mov
cmp
adc
xor
incl
les
sbb
outsl
dec
lea
pop
xor
add
push
insl
ss
aas
cli
jbe
aam
fs
lret
xor
lcall
sub
push
mov
jmp
sbbl
xchg
insl
cmp
mov
sbb
xlat
popa
pusha
jmp
xchg
cmp
push
xorl
push
mov
lods
mov
in
sub
rcl
cltd
enter
push
pop
ds
fnstsw
dec
dec
pop
mov
cmp
or
popa
scas
stos
adc
stos
mov
js
fistpl
mov
out
movsl
fnstenv
push
sbb
mov
repnz
aam
push
sbb
jno
outsl
ret
jl
scas
leave
jge
mov
add
pop
adc
adc
into
ja
roll
rcr
xchg
mov
pop
jo
rclb
rcll
ret
or
popw
sub
sbb
rorl
shl
mov
jle
adc
inc
imul
lret
bound
mov
ret
sbb
xchg
or
pop
or
pop
cld
shrb
jg
pop
and
shrb
lods
pop
scas
mov
outsb
xchg
sub
incb
jl
mov
cmp
pusha
outsb
push
lods
stos
push
sbb
xor
popa
psadbw
mov
and
fldenv
inc
in
out
xorl
arpl
movsl
fisttpll
stos
fsubp
aam
inc
xor
aaa
jge
outsl
jg
xlat
fs
addr16
lods
push
mov
mov
and
into
mov
xchg
pop
xor
mov
pop
cmp
dec
mov
mov
mov
cmp
mov
es
sahf
sub
jne
dec
mov
or
ja
push
adcb
leave
imul
add
lock
jo
dec
inc
mov
push
out
negl
push
cmp
andb
in
sub
repz
dec
shll
or
cs
loopne
xor
dec
pop
inc
ficompl
lcall
push
daa
sub
flds
add
or
push
push
inc
hlt
aas
insb
cmp
loope
mov
ljmp
push
pop
cmpsl
cmpsb
xchg
mov
loop
sbb
shr
adc
pop
adc
dec
adc
mov
test
imul
add
or
and
lock
pop
push
push
test
and
scas
mov
jp
xchg
xor
clc
fdivs
insb
lods
pop
cli
div
push
cmp
idivb
loope
lock
icebp
rorl
push
mov
add
jg
dec
add
mov
pop
clc
outsb
sub
repz
jns
dec
stc
ja
ds
ret
outsl
inc
in
lea
mov
int3
push
jb
mov
icebp
xorb
pop
jecxz
jno
adc
flds
push
xor
test
sbb
lcall
add
fstpl
mov
mov
push
mov
pop
mov
fcomps
lret
test
lret
push
pop
push
jmp
ljmp
movsb
pop
cmp
leave
mov
stos
pop
mov
cli
loopne
cli
dec
adc
ss
push
aam
jbe
inc
lahf
push
das
ret
inc
into
mov
scas
adc
and
add
sarb
adc
movb
ja
or
and
jbe
neg
aaa
xchg
pop
jecxz
cmp
les
aam
iret
dec
ja
sti
lock
jl
jb
jno
js
pop
int3
popf
push
js
pusha
rcr
sbb
cmp
popf
cmp
add
sbb
or
fildll
ds
int
add
dec
sub
adc
push
pop
add
adc
cmp
mov
or
lcall
push
dec
jg
inc
pop
or
int3
mov
movb
xchg
pop
pop
ret
pop
mov
cmp
inc
sbb
hlt
scas
in
call
inc
dec
cwtl
cs
inc
loopne
aaa
xor
int
mov
jle
xor
scas
dec
test
mov
cmpl
in
xchg
out
fucom
mov
lret
jl
pop
in
lock
push
mov
push
and
nop
mov
icebp
cmp
mov
pop
shr
fstpt
push
lret
push
incl
inc
cltd
mov
hlt
andb
mov
shll
incl
fisubrs
or
fnstsw
vmwrite
mov
ss
add
inc
clc
cli
cmp
test
adc
call
push
or
fidivrl
insb
outsb
sub
int
mov
jle
sub
inc
pop
jp
push
pop
xor
inc
xchg
add
fidivrs
mov
mov
jg
mov
adc
xor
ret
xor
inc
sbb
rcrl
push
inc
add
xor
and
je
xchg
ds
mov
jbe
imul
outsb
add
jle
mov
or
cld
aam
loopne
stc
loope
sti
mov
cld
loopne
outsb
sbbb
jg
loope
imul
shlb
repz
fimuls
xor
jbe
xorl
xor
inc
ret
cmp
aas
les
pop
lock
xchg
stos
lods
sarl
into
fst
add
cmpsb
mov
test
sbb
or
lods
aad
xor
and
push
or
clc
aaa
mov
and
pop
lods
inc
xor
pop
pop
hlt
xchg
movsb
sahf
or
leave
in
nop
sub
movsb
jmp
test
test
add
push
cmp
out
inc
push
cmpsl
sbb
dec
daa
rorl
push
push
jge
inc
shrl
jle
orb
xchg
and
lahf
push
push
mov
mov
or
jle
ret
dec
push
not
mov
xchg
adcl
sub
push
outsb
ret
lock
jp
movsb
dec
cwtl
aad
repnz
push
cmp
lahf
test
mov
fnstcw
int3
call
dec
lea
dec
rorb
cmp
mov
push
push
in
cli
push
hlt
sub
dec
dec
and
pop
add
out
mov
add
push
call
fscale
movsb
xchg
and
inc
sub
ds
neg
and
and
lods
or
dec
inc
in
cmc
push
lock
mov
andb
push
xchg
mov
adc
andb
jb
cwtl
mov
cld
push
cli
jge
cmpl
daa
cmp
sbb
dec
shll
cli
jg
mov
andl
mov
jns
sbb
push
fnstenv
aam
fiadds
nop
scas
add
add
add
sarb
push
loopne
inc
setnp
scas
add
call
and
es
pusha
xchg
or
sub
and
and
jp
lods
and
adc
lea
pop
mov
adc
mov
dec
int3
inc
cld
or
pushf
mov
cmpsl
mov
inc
inc
test
and
or
add
xchg
jbe
nop
push
or
ss
lea
lock
clc
pop
jg
sub
scas
mov
push
mov
mov
repnz
push
js
sub
lret
mov
mov
mov
inc
clc
ret
lea
mov
xor
push
xchg
pop
shlb
dec
movsb
cli
pop
mov
sbb
inc
loope
cmp
mov
inc
or
std
lret
pop
movnti
push
sub
es
shrb
or
jo
shl
xor
mov
ds
je
out
sub
and
sub
es
cli
movsb
loop
add
and
push
test
mov
push
or
fmuls
lock
cmp
rcrb
mov
insl
outsl
xor
pop
pop
xor
adc
mov
cmpsl
cmp
je
add
in
mov
lret
add
mov
cmpsb
repz
or
out
lods
sbb
dec
adc
mov
sbb
orl
jge
mov
test
loop
pop
insl
jnp
rorb
or
xor
sbb
mov
shr
push
pop
mov
cmp
fmuls
cmp
ror
cmc
sarb
lods
cmp
adc
inc
adc
and
sub
outsl
cmp
pushf
popa
xchg
lock
ja
add
sub
inc
lods
lods
stos
inc
sarl
and
mov
xchg
mov
or
hlt
fistps
dec
fidivs
cmp
jge
dec
addb
ret
push
mov
jmp
dec
lcall
mov
jo
inc
push
in
add
int
mov
sub
add
mov
adc
cmp
sbb
out
leave
inc
dec
dec
rcll
mov
mov
mov
pop
pop
shr
mov
movsl
inc
lret
push
sbb
or
mov
cltd
shlb
daa
mov
cmp
inc
in
jp
loopne
cli
addl
call
subl
jbe
push
popa
in
mov
jo
call
scas
aas
inc
lcall
in
or
mov
fcmovne
mul
mov
cmc
cmpsl
jne
mov
iret
cmp
xchg
sub
fdiv
fldcw
jge
dec
dec
call
sarb
mov
sub
push
inc
stc
xchg
cmp
jp
lods
das
dec
cmpsl
push
cmpsl
mov
std
sahf
mov
cld
mov
cwtl
cmpxchg
sbb
sbb
mov
iret
dec
cli
cmpsb
push
push
jae
ds
mov
cmp
jbe
or
pop
lods
inc
sbb
jl
push
push
or
sub
shl
or
or
xor
lods
xchg
shll
dec
xchg
jle
aad
push
jge
mov
push
into
sub
call
cli
mov
in
add
cmp
ret
cmp
stos
fst
test
mov
or
pop
pusha
outsl
cld
lcall
ret
fmul
scas
cli
mov
enter
rolb
loope
gs
sub
pop
jmp
fwait
aad
mov
fs
outsb
sub
mov
inc
push
cmp
jp
pop
movsl
sbb
mov
sbb
gs
imul
xor
inc
in
mov
lods
push
es
mov
mov
lret
push
dec
sysret
pop
mov
dec
call
out
pop
jo
push
jo
nop
ret
pusha
pop
add
ss
imul
clc
jmp
pop
dec
mov
xor
adc
movl
xor
iret
rolb
cmp
dec
jle
pushf
cmp
mov
jmp
adcl
push
xor
vpmaxsq
out
jb
cmp
mov
in
push
dec
cmp
mov
rolw
js
out
push
je
sbb
jl
test
dec
out
mov
add
sbb
popa
jg
pop
inc
out
inc
ret
xor
cli
inc
rcrl
cmp
lock
lahf
mov
cmpsb
dec
ljmp
sub
sbb
and
lock
pop
or
ds
ret
pop
insb
push
add
or
inc
shll
lahf
push
imul
cmpsl
mov
mov
adc
mov
xor
sbb
js
mov
push
mov
jecxz
sub
cmpsb
pusha
nop
rorb
aaa
aaa
mov
cwtl
adc
dec
cmp
xchg
sub
sub
mov
pop
adc
bound
pusha
sti
pop
sbb
test
pop
fiadds
sub
and
push
push
xchg
inc
das
sahf
mov
dec
jg
add
push
cmpsl
xchg
jne
push
rcll
aaa
sbb
mov
push
jne
jge
pop
and
in
lock
ret
aaa
nop
dec
cmp
cmp
test
mov
jb
jns
jg
dec
repz
lods
mov
inc
push
addr16
push
popf
ss
inc
inc
pop
insl
mov
shl
add
out
pop
mov
ja
dec
nop
cmp
mov
pop
jp
jp
mov
popf
inc
push
or
cwtl
inc
je
sbb
inc
mov
cmp
pop
inc
lcall
stos
pop
xchg
push
lods
xor
ret
mov
cwtl
dec
inc
dec
mov
lcall
hlt
ss
leave
js
daa
mov
out
mov
das
test
pop
aas
sbbb
add
adc
lock
xor
mov
cmpb
in
movsb
push
and
pop
jno
or
rcr
pop
mov
dec
mov
jge
cmp
push
repz
and
rclb
jge
outsb
xor
add
mov
xchg
dec
rorl
xor
icebp
inc
pop
add
fs
js
pop
mov
lock
mov
pushf
cli
stc
push
clc
mov
mov
xchg
or
and
jmp
inc
loop
lds
jbe
test
jp
jmp
fiaddl
icebp
add
sbb
cli
sbb
or
addb
or
push
mov
or
pop
sub
mov
inc
mov
sub
cmpsl
xor
or
gs
inc
loope
xor
outsb
pop
pop
sbb
adc
out
adc
stos
xchg
sbb
jecxz
divb
rorb
sub
rcrb
mov
push
push
or
cld
cli
clc
lock
insb
div
addr16
xor
lahf
cmp
rcrl
call
int
add
lahf
and
push
pop
enter
dec
cli
dec
xor
stos
jge
push
into
inc
ljmp
test
and
sbb
ljmp
xchg
movq
mov
fldcw
pop
xor
rcl
add
ljmp
push
inc
inc
xor
push
outsl
add
icebp
repnz
push
or
negl
push
sbb
sub
mov
fs
loop
hlt
pop
adc
mov
pop
je
ret
sub
and
ret
mov
sub
test
dec
push
or
es
rorl
pop
mov
ss
ret
push
inc
sub
xor
clc
dec
daa
insb
mov
or
scas
jmp
add
add
or
mov
cwtl
frstor
xchg
lods
and
cmp
sbb
ss
inc
inc
mov
call
xor
sahf
sub
mov
mov
fcmovnb
push
cmpsb
jnp
lcall
roll
mov
lock
in
insl
dec
push
xor
jne,pn
hlt
xchg
cld
xchg
test
lret
mov
imul
mov
sub
out
icebp
icebp
js
gs
inc
std
xor
stos
popa
sub
cmpl
sub
jecxz
and
test
shlb
push
adc
mov
insl
aam
fs
add
call
imul
push
add
xchg
sbb
jo
testb
adc
rclb
inc
adc
sbb
popf
clc
mov
sbb
test
dec
and
dec
jo
push
bound
rclb
add
or
jg
xchg
fcomps
iret
xor
cld
loop
jg
mov
in
int
dec
and
imul
jge
js
clc
cmc
cli
mov
xchg
ds
test
addl
push
push
xchg
add
rcll
fadds
fnstsw
aaa
push
out
and
into
dec
aas
shlb
sbb
xchg
dec
ret
pusha
add
cmp
pminsw
xor
pop
mov
loop
add
loop
stos
add
add
pop
mov
out
cli
std
sbb
push
test
sub
loopne
out
push
bound
adc
sub
xor
das
fnstcw
adc
xor
adc
cwtl
loop
lods
mov
adc
mov
sbb
add
loopne
ds
test
mov
mov
outsb
clc
into
mov
stc
lcall
xchg
cmp
push
rorb
mov
inc
sarl
xor
insl
call
out
fwait
inc
and
jbe
pmullw
xor
xor
mov
pop
clc
call
inc
ss
stos
and
cmc
mov
mov
loope,pn
sub
sbbb
mov
daa
cmp
in
je
jg
repnz
mov
or
push
icebp
and
lods
and
pushf
xchg
add
mov
inc
pusha
xor
jle
jns
dec
je
pop
call
fsubrp
or
mov
dec
daa
outsb
jg
adc
cli
ret
push
cmpsl
mov
dec
test
mov
mov
push
sarb
push
test
mov
and
mov
ret
fsubrl
push
in
lock
sahf
cmc
inc
jns
mov
mov
pop
mov
ds
and
pop
mov
fcmove
add
xchg
pop
adc
mov
cmp
insb
dec
arpl
dec
and
push
fiadds
loopne
out
and
enter
push
test
jmp
hlt
outsb
or
mov
fisubrs
push
movsb
xor
adc
adc
or
ja
test
adc
adc
es
mov
sbb
jne
xchg
sub
daa
pop
fdivrp
jl
je
and
dec
out
mov
incb
repz
push
and
popa
xchg
cwtl
mov
ret
sbb
mov
mov
sub
cmp
int
inc
or
jnp
or
das
add
incb
call
adc
flds
pop
jbe
loopne
adcl
and
inc
jg
popf
fimull
sub
fimuls
xor
rclb
sbbb
es
pop
xor
aaa
inc
lret
pop
lret
lcall
shl
stos
sbb
inc
ret
adcb
add
mov
loopne
ret
lret
sbb
in
movb
shll
adc
lods
jle
mov
sbb
push
cwtl
rorb
test
fists
stos
pop
shlb
les
pop
js
in
pop
mov
sub
pop
jp
mov
mov
xchg
test
out
aam
repnz
push
push
cmp
es
movsb
bnd
jo
out
sub
mov
aas
add
add
inc
sub
pop
mov
leave
dec
cmpsl
push
jnp
out
loop
dec
push
push
jecxz
test
in
or
mov
ret
add
call
and
sbb
popf
aam
les
filds
ljmp
mov
sbb
aaa
fisttpll
bound
pop
add
jp
and
or
clc
xor
xlat
andl
pop
and
dec
dec
fstpt
movsl
aad
out
cs
cmp
test
xor
pop
imul
mov
lds
xchg
js
jle
jl
xor
inc
andb
add
push
sub
sub
fldcw
inc
sbb
add
bound
mov
push
js
cltd
mov
jno
pop
pop
inc
lret
pop
sahf
lods
cwtl
cmp
fsubrs
stos
add
or
fidivl
xchg
les
divl
rolb
pop
sub
inc
subl
jne
fstpl
loop
push
push
xchg
dec
push
call
push
scas
loop
pop
clc
call
lock
pop
or
cmp
call
push
pop
jp
stc
test
mov
scas
xor
xchg
test
cmp
mov
and
push
inc
lods
jb
scas
rolb
sbb
adc
cmp
pop
push
push
mov
add
fsubr
lret
shrb
or
addl
jnp
push
dec
nop
dec
cmpsb
mov
jge
es
push
jns
dec
sub
leave
jne
xchg
aaa
sub
xor
enter
push
loope
movsb
xlat
jbe
mov
push
mov
inc
ror
test
js
add
or
test
cmc
lcall
loopne
jno
test
dec
push
and
or
adc
ret
out
cs
inc
mov
fiadds
stos
dec
push
adc
mov
xlat
add
cmpsb
adc
sbb
jmp
testl
pop
add
dec
cmp
mov
jae
xchg
xchg
loop
dec
push
sbbl
lcall
out
stc
or
fs
pusha
xchg
jnp
pop
cmp
aaa
and
enter
rclb
inc
cmpsl
stc
mov
icebp
inc
add
je
shlb
inc
jno
out
mov
push
jecxz
add
filds
push
xchg
push
pusha
dec
jo
xchg
inc
cld
int3
add
scas
fs
mov
ret
push
out
shl
dec
out
cmp
js
sub
gs
aas
cmp
fldl
addr16
scas
mov
cmp
aaa
cmpsb
outsb
xchg
xor
pop
outsl
outsl
and
pop
dec
icebp
dec
imull
and
out
push
jno
scas
hlt
and
sbb
outsl
sbb
popa
cmc
add
adc
into
sbb
xor
mov
sub
repz
repz
mov
pop
sti
shll
call
out
inc
adc
or
pop
dec
inc
outsl
mov
insb
dec
leave
js
mov
ss
lods
mov
push
cmc
aam
ret
icebp
mov
push
les
xor
cli
lock
test
ss
pop
lds
aaa
sbbb
scas
mov
sub
cmp
pop
sti
fiaddl
mov
cli
inc
in
ffree
add
test
push
ss
and
sbb
mov
subb
das
imul
inc
cmp
cmpxchg
adc
dec
xorl
cli
in
dec
and
mov
adc
cs
subl
stc
mov
xchg
dec
push
clts
lods
xchg
cmp
incb
popa
push
mov
jbe
ja
sub
mov
out
xchg
adc
cmp
fmull
mov
sbb
testl
fnsave
inc
sbb
inc
test
push
aas
inc
mov
in
lcall
push
scas
sar
loopne
out
dec
sub
pop
xchg
rorl
xor
loopne
push
aad
pop
lds
icebp
jb
shlb
js
data16
jbe
dec
fs
loopne
mov
test
ret
fdivrs
dec
fsub
fists
aaa
lahf
std
rclb
sti
outsb
jnp
sub
cmp
cld
pusha
mov
cs
ljmp
xor
sub
push
into
dec
scas
repnz
xor
std
lret
in
sti
das
movsl
lahf
dec
imul
js
xor
lahf
pop
test
stos
xchg
clc
je
sub
adc
stc
nop
mov
pop
nop
in
loop
arpl
js
pop
mov
pop
imul
push
fistpll
push
sbbb
imul
mov
scas
mov
negb
cmp
sbb
sub
repz
jg
pop
and
ret
mov
clc
daa
shlb
or
pop
clc
das
ja
dec
orb
arpl
push
push
xchg
loop
mov
movsb
arpl
push
outsl
sbb
cltd
add
or
jo
sbb
popf
mov
ret
push
push
mov
inc
std
inc
movsl
cmp
loop
sub
lods
pop
pop
cmp
loopne
pop
xor
stos
mov
ficomps
and
adc
sbb
inc
xor
cmp
pusha
or
stos
aaa
or
jl
aas
test
push
pop
lret
push
pop
into
loopne
stos
popf
cld
dec
movl
or
sub
lcall
cmpb
or
fcoml
add
or
jae
dec
push
call
lret
inc
mov
clc
push
or
inc
ss
pop
idivl
das
dec
jl
fistpll
imul
and
pushl
mov
pop
fucomi
insl
mov
movsl
xchg
mov
sbb
sub
lock
xor
and
xor
das
imul
jbe
cmp
push
add
hlt
mov
pop
loope
shll
inc
xchg
je
push
lret
mov
push
pop
xchg
pop
ret
sbb
mov
inc
lock
jno
jp
inc
pop
inc
cmpl
sub
arpl
pushf
out
sub
jne
pop
mov
mov
shrl
push
sbb
nop
push
setge
les
pop
mov
xor
pop
test
inc
ret
jg
imulb
lcall
fidivrs
lods
sub
test
cmp
ss
inc
clc
popa
out
jnp
inc
jne
adc
or
hlt
lods
popa
fistpl
loop
dec
sub
push
fistl
dec
pop
int
frstor
mov
dec
push
xor
xor
xor
jno
rcll
fildl
mov
lea
add
mov
sub
xchg
lods
sub
enter
sub
sub
cwtl
addl
stos
in
lds
push
push
xchg
pop
outsb
mov
add
mulb
ret
push
decl
outsb
andl
js
cmp
pop
mov
jno
lds
bound
cs
xlat
add
rorl
mov
fwait
int
dec
cmc
add
clc
movsb
inc
fidivs
cld
movsb
or
fcmove
mov
enter
rep
into
add
or
or
cltd
xchg
popf
adc
xchg
push
lock
xchg
xor
bnd
cmp
pop
cld
mov
inc
inc
adc
or
pop
adc
pop
and
dec
dec
nopl
das
or
and
pop
push
adc
push
aam
mov
dec
pop
call
push
dec
push
aam
js
popf
insb
push
lds
lcall
xorl
mov
aaa
inc
out
push
dec
bound
xchg
xor
ds
pop
add
and
mov
adc
stos
inc
jl
repnz
adc
das
or
fsubrl
lret
ret
xor
jb
mov
pmulhuw
cli
xchg
adc
xchg
mov
scas
lahf
mov
or
or
push
dec
xchg
enter
call
xor
jl
cmc
jo
sbb
aaa
shl
das
insl
jge
ret
push
out
push
mov
loope
aaa
push
inc
pop
or
jbe
cwtl
xlat
jge
push
mov
jl
sbb
sbbb
xchg
jmp
inc
mov
sub
jl
adc
dec
cmp
jb
adc
fs
out
ret
shrb
cmpsb
adc
movsb
ja
in
mov
xchg
gs
fwait
lcall
xchg
cli
sub
xchg
inc
adc
add
inc
lcall
outsl
aam
pop
xlat
cwtl
in
mov
sti
and
shl
inc
pop
cmp
outsb
shlb
in
imul
sbb
test
or
or
in
fsubr
sub
sbb
fdivs
inc
mov
lock
loope
add
mov
xchg
outsl
adc
push
add
sti
inc
retw
cmp
stc
jle
fiadds
pop
adc
xor
sbb
or
jb
scas
mov
inc
in
addr16
sbbb
mov
xor
lods
js
push
mov
cwtl
movsb
sbb
and
lods
adc
pushf
push
xchg
rorl
inc
adc
cmp
dec
movsl
push
out
cmpsl
push
ja
add
loope
xor
pop
fildll
inc
xchg
mov
mov
enter
push
loopne
xchg
fsubs
lds
push
cli
aam
xchg
sbb
add
ss
in
inc
dec
movsl
daa
and
and
xchg
xor
dec
lcall
cs
adc
xchg
cs
and
leave
mov
cmp
decb
out
cwtl
inc
cli
shll
in
add
arpl
cmp
push
out
arpl
je
cmp
nop
lods
adc
pop
pop
popa
out
inc
push
mov
clc
call
adc
ds
ret
popa
inc
cld
sub
cmc
test
outsb
enter
dec
jne
and
sub
and
cmp
jne
mov
sub
incb
fsub
xchg
shl
xchg
sbb
insb
xlat
sbbb
rcll
pop
pop
mov
mov
xor
jae
aas
or
jne
inc
or
push
ja
adc
fs
movsl
mov
add
pop
shll
fs
mov
lds
pop
dec
daa
adc
mov
sar
sub
pop
bnd
out
sbb
adc
in
repnz
cmpl
movq
daa
popa
inc
imul
xorb
sub
jp
pop
orb
jmp
ret
movsl
adc
xchg
fsubl
pop
and
lcall
sub
ljmp
cmp
add
dec
clc
sbb
or
mov
pop
loope
push
lret
mov
push
dec
sub
aam
mov
xor
pop
aas
adcb
stc
scas
loope
imul
mov
movsb
adc
ss
mov
dec
fs
dec
scas
leave
pop
clc
cltd
mov
loope
test
dec
fs
cs
cltd
sub
sub
mov
popf
imul
call
shl
mov
outsl
and
jl
lcall
or
jns
sbb
adc
inc
sub
adc
mov
les
iret
mov
sub
jo
jnp
jl
lods
sbb
sbb
ret
lods
imul
addb
shll
adc
rorb
lock
pop
rcll
cmpsl
nop
pop
out
adc
sbb
sbb
jle
mov
or
das
in
pop
dec
push
in
and
add
add
popa
xchg
loopne
mov
add
mov
add
repz
lds
pop
in
jns
scas
sbbb
shll
and
out
mov
jnp
mov
das
lock
push
sub
repz
adcl
fdiv
and
js
or
and
pop
frstor
je
lods
adc
xchg
xchg
xor
or
push
jnp
push
lods
inc
pop
adc
pop
ret
and
dec
mov
test
dec
adc
fwait
andl
xor
sub
pusha
test
cmp
sbb
stos
cmp
scas
lock
testb
enter
or
int3
fcoml
sub
mov
fstpt
pusha
jmp
cs
setae
adc
leave
popa
sbb
mov
cvtps2pd
mov
loopne
push
pop
or
xor
and
dec
inc
xchg
cmp
fnstcw
scas
or
add
jne
icebp
dec
lcall
dec
or
rclb
ja
test
mov
rcrb
or
sub
les
lahf
xor
imul
xor
xor
pop
mov
sti
jge
lods
mov
pop
xchg
and
shl
mov
repnz
mov
les
mov
add
in
jg
inc
add
adc
inc
mov
stos
mov
ret
aaa
scas
lods
jp
inc
sbb
mov
cmc
arpl
xor
sbb
fdivl
into
cmpsl
mov
dec
out
jbe
cmp
scas
jno
push
pop
cmp
or
pop
jg
mov
jo
add
cmpsl
insl
imul
add
repnz
inc
lret
jmp
arpl
mov
loop
sbb
js
xor
cmp
adc
fldt
les
fsincos
and
pop
aad
jne
or
cmp
adc
pop
negl
cmp
in
sbb
bound
icebp
mov
push
mov
adcb
inc
testl
movsb
dec
loop
movhps
or
push
out
mov
shrl
mov
inc
call
fs
sub
mov
aas
call
dec
rolb
lods
fisttps
adc
and
loopne
cmp
xor
fs
push
adc
cmp
adc
push
out
mov
data16
rcrl
mov
sbb
cmp
mov
out
testl
push
xor
adc
adc
dec
mov
movsb
jmp
outsl
xchg
push
dec
icebp
add
imul
and
mov
adc
int
std
int3
test
notl
shrb
test
add
movb
out
adc
adc
addr16
xlat
push
adcb
jmp
mov
movsb
adc
sub
imul
mov
and
push
mov
jns
shrl
outsl
xlat
xor
mov
cmpl
cmp
repz
jle
add
insl
cwtl
shl
jne
dec
ja
xchg
lock
xor
push
daa
xor
test
daa
arpl
and
mov
and
add
mov
inc
scas
iret
cmp
aaa
and
push
cmp
mov
movsb
dec
out
sbbl
hlt
add
push
leave
cmp
call
test
call
dec
xchg
or
inc
lods
js
imul
icebp
sarl
lret
dec
or
cmc
xor
int
inc
jge
shl
out
lret
add
adc
push
mov
pop
test
loope
in
daa
lds
gs
aad
scas
add
imul
sub
push
xor
cmovge
jne
ror
adc
outsl
repnz
push
sbb
decb
ss
aam
aaa
testl
test
adc
test
mov
mov
mov
flds
jae
sbbb
add
mov
hlt
mov
mov
dec
daa
push
cmp
scas
ljmp
and
dec
test
roll
or
jecxz
push
aam
cwtl
xchg
hlt
jae
push
mov
cmp
shl
sub
sbb
movsb
daa
jo
leave
das
cmpsb
push
pop
icebp
xchg
dec
mov
ret
inc
push
add
ficoml
aas
mov
in
mov
repz
push
xor
mov
and
push
testb
sub
dec
fcoms
aaa
fldt
cmp
cmp
clc
je
dec
pusha
mov
adc
sub
aas
cmp
sbb
lea
hlt
pop
sub
movsb
lods
popf
lcall
pop
xor
inc
addr16
sbb
addr16
sbb
push
icebp
xchg
ja
or
cs
jo
loop
dec
cltd
cld
test
je
pop
or
into
dec
pop
imul
jae
dec
mov
jae
loope
test
sub
jmp
or
jne
adc
sbb
add
stos
rorb
out
lock
sbb
mov
dec
xchg
adc
into
dec
dec
or
and
cmpsl
and
pop
push
mov
js
dec
in
and
movsb
sti
sbb
pop
je
lock
dec
dec
cmp
outsl
xchg
inc
imul
push
orb
cmp
aaa
add
ficomps
jb
nop
pop
test
lods
add
hlt
loope
inc
sbb
mov
jecxz
ja
xor
paddb
gs
int
pop
mov
pop
jne
inc
pop
loope
ret
outsb
add
mov
jmp
sub
cltd
out
xchg
std
add
loop
xchg
repnz
xchg
punpcklbw
mov
bound
mov
outsb
lret
sbb
add
outsb
ss
push
xchg
aam
mov
inc
call
nop
sub
outsl
dec
lds
add
dec
push
lods
jp
pop
fstl
aad
and
movsb
dec
addr16
test
icebp
arpl
push
jle
add
and
jne
jb
adc
mov
pop
xlat
push
adc
jmp
fimull
adc
lock
adc
xchg
xchg
clc
adc
cmpsl
mov
clc
sbb
pop
xchg
les
jno
ret
blcic
arpl
repz
jbe
add
jecxz
cmpsb
pop
mov
test
mov
addb
and
and
ss
in
fiadds
pop
cltd
leave
mov
pusha
dec
mov
xchg
mov
outsl
vmovsd
neg
gs
dec
mov
sbb
pushl
lds
out
repnz
push
jnp
jne
cmp
je
test
jae
hlt
popl
sahf
hlt
inc
in
mov
or
cmpsl
xchg
adcb
sbb
sti
jno
dec
lods
pop
cltd
mov
lcall
aaa
dec
mov
mov
or
clc
jb
push
mov
sbb
mov
loop
js
add
xor
mov
dec
jp
stos
dec
push
push
sarb
and
dec
pop
pop
mov
ficoms
mov
pop
jno
cs
lea
in
lods
adc
xor
jne
test
push
je
pop
pop
ss
fimull
data16
xchg
dec
mull
mov
js
mov
cmpsb
mull
add
addl
or
mov
xor
rolb
jae
or
das
or
inc
mov
cli
push
mov
push
mov
mov
push
mov
and
imul
ljmp
xor
cwtl
push
mov
test
adc
dec
hlt
popa
inc
jl
xlat
jmp
dec
adc
pop
push
aaa
push
pop
aad
cmp
adc
mov
inc
cld
fsubl
roll
std
addl
jno
xchg
call
add
outsl
mov
jae
ret
pushf
add
test
js
or
dec
cli
pushf
or
cmp
daa
into
in
add
add
int
sbbl
dec
and
rorl
or
and
mov
imulb
ret
and
inc
and
pop
pop
mov
mov
xor
add
test
xor
pop
mov
jp
sub
fs
imul
sub
shrl
add
movsb
or
fdiv
out
mov
loope
jge
cmp
add
icebp
movsb
push
pop
das
les
jle
push
xor
push
pop
push
and
cmp
pop
xchg
push
mov
out
lcall
fidivrs
scas
adc
xorl
cli
mov
add
push
int3
and
loopne
mov
xor
inc
jmp
ja
mov
das
loop
shl
adc
cmp
xor
test
movsl
pop
aas
mov
xor
scas
scas
lahf
cli
pop
into
popl
jno
push
mov
and
push
mov
and
add
loopne
gs
mov
mov
push
xor
mov
push
je
js
mov
data16
cli
fdivl
loope
imul
sub
and
or
stos
das
insl
jbe
pop
frstor
jl
shll
aad
pusha
test
xchg
ret
push
sub
xor
mov
add
xchg
xor
shlb
sub
fmull
sub
std
out
xchg
pop
js
ds
jecxz
cmp
sub
shlb
xchg
mov
scas
push
jl
push
aad
sbb
lcall
inc
sub
inc
cmp
lock
xor
lods
add
or
sahf
mov
jl
dec
push
std
add
clc
mov
clc
sub
pop
pop
scas
mov
xorl
xchg
sti
rcr
gs
es
pop
xchg
cmpsl
cmp
xchg
out
sti
xchg
mov
sub
aas
pop
xor
cmpsb
mov
or
pushf
loopne
push
push
pop
rcrl
je
mov
xchg
mov
movsb
xchg
shll
stc
insb
fisttpl
lahf
je
pop
bound
pop
and
dec
xlat
xchg
and
fldenv
mov
test
lods
es
push
adc
subl
jmp
rcrb
ret
add
imul
inc
cmpsl
xchg
stos
adc
addl
add
xchg
lahf
out
fadd
loope
or
push
mov
ss
rorl
lock
push
and
and
and
xchg
dec
mov
ffree
pop
mov
out
outsl
enter
and
adc
repz
and
mov
iret
push
imul
roll
jle
adc
cmpsl
call
mov
push
cmpb
ljmp
int
loope
rcrb
in
fdivrl
fcompl
push
or
xor
sub
jp
xor
orb
dec
fisubl
pop
pop
addr16
push
mov
cwtl
lods
rorb
xchg
movsb
nop
lods
mov
test
adc
sub
loope
rorl
pop
push
cltd
out
std
push
sbb
aas
mov
dec
jp
popa
cld
rorl
add
in
jecxz
pop
push
mov
or
mov
or
incl
xchg
push
loopne
faddp
sbb
orb
popf
fldt
pop
ja
popa
mov
ret
or
and
leave
scas
roll
jnp
and
fs
test
movsb
testl
shl
jecxz
loopne
dec
xchg
std
cmp
test
sti
push
mov
filds
fs
jo
icebp
xchg
movsl
jo
mov
test
xchg
mov
or
mov
lss
fiaddl
clc
inc
movsl
jg
lret
inc
xorl
int
mov
push
rclb
sbb
notb
cmc
cwtl
rol
xor
stos
subl
xor
sbb
loope
loop
pop
mov
push
sub
adc
test
pop
pop
mov
adc
outsl
test
in
fs
imul
jle
lds
or
stos
push
daa
jmp
add
inc
and
das
test
cmp
shlb
out
mov
xchg
lock
pop
inc
fists
test
cwtl
sbb
or
mov
and
scas
xchg
stc
xor
ffree
xlat
jp
dec
imul
arpl
inc
scas
cmpsb
icebp
push
adc
push
jle
mov
jbe
sbb
push
pop
xchg
outsb
push
popf
sub
jl
movsl
push
jbe
aaa
cmpsb
add
lods
mov
jo
xchg
sbb
fnsave
aas
popa
add
push
mov
stos
push
in
sub
mov
xchg
dec
lret
icebp
cmp
arpl
mov
adc
sbb
jg
mov
movsb
push
jg
sbb
jl
dec
ficompl
xor
mov
ja
pop
sub
sub
std
xor
jb
arpl
shll
mov
aam
in
lods
outsl
jno
or
in
mov
pop
imul
lods
sub
cmpsb
mov
xor
test
inc
mov
pop
pushf
call
xchg
jle
scas
mov
imul
movsb
test
bndldx
rol
leave
movsb
add
add
mov
push
out
cmc
inc
ret
add
lcall
jl
and
jmp
pop
cmpsl
and
insl
loopne
push
shlb
nopl
scas
scas
mov
cmpl
cli
add
or
and
js
mov
pop
enter
sbb
rclb
jo
mov
sti
aaa
mov
icebp
icebp
daa
ss
jge
xchg
aam
cwtl
popa
mov
pop
pop
data16
xorl
xchg
cmp
mov
test
rolb
js
mov
jg
gs
sbb
dec
add
movsl
daa
jge
out
xor
cmp
dec
xchg
xor
lods
mov
lahf
cmp
test
rcr
fnstcw
add
clc
js
aad
or
andb
int3
mov
fcom
push
arpl
push
push
loopne
ss
int3
ss
lahf
test
dec
adc
jnp
inc
es
push
in
movb
fnstenv
data16
bound
rcrb
jnp
aam
aam
ret
les
push
cmpsb
or
add
nop
mov
adc
xchg
aam
out
popf
push
leave
adc
pop
fadds
sbb
and
adc
cmp
xchg
inc
mov
enter
cld
mov
lahf
pop
xor
pop
pusha
add
mov
ljmp
scas
sbb
cmp
add
xlat
dec
es
xchg
icebp
pop
push
in
std
loope
sub
sub
push
jnp
fsubs
dec
int3
mov
xchg
mov
xlat
push
fldl
cmpsl
lds
aaa
push
movb
neg
cmp
adc
pushf
int
xchg
lahf
xchg
test
add
mov
pop
inc
lods
xchg
les
sub
xchg
jg
hlt
mov
adc
ret
xor
jb
bound
data16
or
aam
sbb
testl
push
fdivl
jmp
loope
cld
mov
test
sub
das
inc
mov
cli
nop
cltd
repnz
in
xchg
scas
movsl
pop
pop
mov
lahf
aad
pushf
inc
jge
xchg
adc
or
or
stc
jb
sub
push
xor
pop
adc
scas
lahf
mov
pusha
cmp
cmpsb
shrl
fiaddl
push
movsl
xorl
cmp
pop
fcomps
cmp
ljmp
add
roll
push
jg
scas
cmp
std
icebp
jge
inc
mov
push
dec
or
nop
xor
push
into
jmp
lret
mov
jno
pop
mov
mov
aad
out
sub
mov
add
into
je
cwtl
push
mov
arpl
in
mov
pop
decl
dec
rolb
rcll
cwtl
mov
jbe,pt
add
aad
fildl
xchg
xchg
sub
push
jns
out
lret
out
inc
lods
enter
cmp
push
mov
ss
cwtl
stc
push
mov
mov
mov
mov
fisttps
outsl
cmp
dec
mov
popa
out
stos
mov
hlt
add
push
dec
and
and
scas
mov
idiv
int3
add
rcll
jne
and
lret
jb
mov
cmp
and
out
and
push
xchg
and
pop
sbb
nopl
das
push
fnstsw
in
sbb
or
pusha
ljmp
add
test
add
mov
cli
sub
pop
mov
sti
add
sub
xchg
or
shl
pop
pop
loope
out
icebp
push
cs
push
add
ss
or
ljmp
lret
xor
jge
mov
mov
sbb
mov
enter
pop
aaa
sub
les
int
add
cmp
shlb
xlat
push
pop
aas
jle
push
push
adc
stos
andl
pop
jecxz
cmp
add
test
push
jmp
std
mov
icebp
adc
mov
or
repz
push
or
sub
aaa
cmp
sbb
fstl
push
iret
pop
das
sti
mov
popaw
inc
add
or
jne
xor
adc
idivb
dec
subl
fdivrp
movsb
or
stos
mov
enter
cmpsb
out
adc
jecxz
xchg
lods
xor
jns
sub
add
sub
cwtl
mov
stos
jne
cwtl
cld
cmp
loopne
push
and
js
fimull
fsubs
mov
cmc
je
jl
and
pop
lock
call
cmp
push
add
movsl
mov
cwtl
add
div
add
lahf
pop
cld
popf
push
mov
mov
pusha
aaa
pop
jno
mov
push
mov
mov
in
mov
push
dec
cli
push
pop
mov
add
xchg
inc
jg
aas
sub
mov
mov
dec
insb
enter
js
pop
pop
or
clc
xor
mov
lret
fidivl
test
fisubrs
pop
add
test
jne
arpl
sbb
and
out
stc
test
mov
inc
adc
xchg
lea
aaa
dec
ret
es
movsb
jl
xchg
or
in
ret
and
sbbl
fdiv
inc
cmp
adc
xor
pop
sti
adc
cmp
in
rol
movsb
fsubrp
stos
xor
cli
jle
es
sbb
je
mov
jo
add
orb
sub
mov
lock
pop
jae
subb
sub
or
ljmp
push
lea
mov
loope
outsb
mov
aad
cmp
addl
sub
or
faddl
push
fstpl
mov
and
roll
fwait
xor
call
aas
pop
inc
sahf
push
inc
loope
mov
pop
adc
jl
lahf
stc
sbb
jb
jnp
sbb
js
push
push
cmpsb
xor
sti
mov
pop
enter
xor
adc
sbb
mov
xor
lret
test
xchg
xor
ja
daa
sub
imul
test
fs
pop
aas
xor
inc
sbb
push
sahf
imul
cmp
dec
shlb
cmp
dec
testb
fadds
cmp
xor
push
movsb
popf
push
jnp
xlat
ljmp
jbe
cwtl
sub
adc
inc
jp
sahf
mov
icebp
push
int
pop
sbb
or
adc
sub
scas
aad
inc
jl
mov
jne
cmp
roll
shrl
lahf
inc
jge
in
lret
test
sbb
or
orl
push
clc
mov
movsb
push
ds
push
in
nop
shll
ds
inc
add
inc
adc
sub
rolb
add
popf
push
icebp
das
xchg
in
loop
outsl
push
push
pop
ljmp
cmpsb
cmc
mov
cmc
dec
shlb
and
pop
scas
je
outsb
lods
jge
repnz
xor
and
adc
mov
xchg
sub
in
sub
divb
xchg
cwtl
in
and
scas
rolb
mov
cli
add
push
es
and
adc
dec
les
push
repz
aam
test
rcrl
pop
mov
mov
pop
jae
pushf
sbbb
fldl
fcomip
das
push
cmc
adcb
mov
jae
je
xor
mov
and
icebp
movl
xchg
pop
or
inc
cli
nop
stc
pop
andl
add
mov
mov
add
xchg
loopne
lock
les
pop
xor
and
arpl
jne
pop
mov
add
fadds
sub
push
subb
mov
adc
rcrb
xorl
mov
and
jmp
ret
push
pop
popf
pusha
cmc
cltd
or
push
add
jmp
or
inc
sbb
test
pop
ja
std
push
push
cmp
fsubl
cmp
movsl
fcompl
scas
out
pop
jo
pop
pop
inc
push
jp
mov
jmp
out
mov
and
mov
pop
clc
aam
mov
add
sub
cli
push
sub
mov
lock
push
out
mov
mov
mov
pop
scas
inc
scas
aas
call
add
mov
hlt
xor
mov
xor
sti
xchg
sub
je
leave
aam
mov
xchg
add
imul
or
ficoms
out
push
dec
inc
jae
lcall
add
mov
sbb
nop
cli
jmp
pop
test
lods
cmp
xlat
jp
xor
test
movsl
notb
jge
aas
mov
cwtl
cmpl
push
push
sbb
movsb
dec
or
push
push
mov
pop
lock
mov
dec
push
jne
hlt
push
lods
mov
add
dec
jbe
es
cmpsb
xlat
sub
add
mov
mov
push
or
dec
xchg
pop
inc
aaa
dec
dec
sbb
outsb
popf
lret
mov
es
nop
xchg
or
stos
push
sub
js
push
test
cmc
dec
xchg
push
and
pop
movsb
jo
jl
mov
sarl
nop
inc
adcb
js
sqrtps
add
dec
insb
adc
stc
push
inc
mov
aas
imul
and
cmp
or
dec
jmp
dec
mov
jle
cltd
pop
xchg
push
and
cmp
adc
mov
pop
aaa
cmp
inc
jmp
scas
ret
lcall
lods
mov
aam
add
xchg
pop
inc
repz
pop
outsb
hlt
xor
outsb
enter
dec
and
pop
arpl
stc
mov
repnz
push
cld
mov
nop
cmpsl
in
test
lock
or
push
rorb
or
mov
std
push
sahf
jle
mov
add
pop
and
or
mov
and
shlb
in
inc
je
js
cmp
fsubrl
mov
push
ret
add
repz
sub
xor
inc
fs
mov
cmpb
or
aam
rcrl
adc
cmp
dec
repnz
adc
std
mov
pop
and
cmpsb
fildll
dec
jo
fisubrs
test
insl
adc
ret
outsb
sbb
xor
ret
mov
mov
sahf
mov
aam
push
pop
shl
rclb
jo
or
inc
mov
sahf
bnd
mov
and
movsb
fucomip
scas
popa
dec
and
add
pop
enter
mov
int3
mov
push
hlt
and
test
push
mov
add
sarl
shrl
pop
mov
xor
and
pushf
aam
testb
in
mov
or
movsb
das
ja
xor
xchg
pop
incb
leave
jp
test
or
cmpsb
add
lret
mov
push
pop
cmp
ficoms
push
xor
mov
push
sub
mov
pop
fdivl
sub
jb
pop
dec
xchg
cmpsl
push
jge
and
addr16
outsl
pop
and
adc
jmp
data16
mov
push
jnp
pop
je
mov
xchg
sahf
icebp
lcall
jnp
and
daa
adc
scas
shrb
into
cmpsb
movsb
in
mov
inc
xor
jecxz
mov
lock
fs
push
pop
data16
lcall
adc
cli
sahf
ljmp
ljmp
mov
and
inc
dec
add
repnz
filds
pop
je
loopne
add
or
fadds
ds
lcall
nop
or
add
mov
das
int3
in
ret
jg
mov
inc
fs
or
mov
jbe
push
mov
enter
adc
movsl
inc
test
xchg
int
mov
jg
lods
inc
jp
push
adc
adc
shlb
add
scas
mull
cmp
mov
cmp
les
jbe
cmpsb
adc
jle
jge
movl
xor
in
out
clc
das
stc
cmpb
cli
jmp
loop
enter
xchg
sbb
dec
movsl
pop
xchg
aas
push
push
cld
dec
push
es
mov
or
into
mov
sbb
sti
dec
dec
dec
jae
subb
movsl
add
and
push
push
test
popa
sti
and
es
test
pop
jle
sub
scas
lret
loopne
push
and
dec
mov
jae
addl
pop
ja
pop
mov
pop
int
push
call
mov
outsb
into
add
sub
xchg
fistpll
push
ds
push
and
mov
add
push
add
inc
gs
sahf
mov
lods
xchg
dec
mov
out
mov
jae
scas
ret
fcoms
adc
aas
repnz
movsl
incl
ds
and
or
test
out
inc
rcrb
dec
sub
cmovae
sub
push
pop
sbb
mov
icebp
movups
cmpsb
add
aas
mov
jne
jecxz
stos
pushf
stc
shlb
mov
xlat
mov
add
lahf
lcall
add
dec
push
shl
cmc
xchg
cmp
xor
mov
and
ret
int
mov
sarb
and
mov
sbb
loopne
adc
jo
sub
testb
sub
sub
cmp
or
jb
cld
or
clc
sub
aaa
push
add
push
xchg
sbb
in
call
jl
test
mov
add
push
mov
loop
sbb
adc
pop
sbb
xchg
push
adc
sub
loopne
arpl
call
dec
inc
pop
jae
cmp
mov
ret
jns
imul
sbb
xchg
xor
cmp
pop
roll
sub
mov
inc
jmp
fstpt
pop
xchg
aam
aas
mov
add
cwtl
stc
int
xchg
mov
push
or
std
dec
negl
xchg
std
jl
gs
les
rcrb
mov
pop
pop
xchg
lods
cli
loope
cwtl
xor
jl
ss
sbb
lods
mov
mov
adc
daa
jne
cld
ss
add
fsubrs
in
or
call
pop
inc
cmp
inc
ljmp
pop
dec
sub
add
imul
movb
cmc
jmp
mov
cmp
imul
lea
inc
sub
add
xchg
call
push
leave
mov
mov
jb
cld
add
mov
cmc
in
scas
inc
jo
jbe
cmp
loop
mov
add
mov
jne
push
bound
loope
push
mov
xlat
repnz
mov
jp
cmp
adc
sbb
mov
pop
push
xor
int3
fidivrs
es
xchg
adc
scas
mov
ljmp
sub
in
fs
or
fsubrs
rcrb
mull
call
in
push
push
and
xchg
cmpsb
and
scas
pop
gs
xor
imull
cmp
imul
lock
xchg
daa
call
inc
ret
sbb
repnz
dec
push
jo
push
fidivl
ljmp
cwtl
aad
and
js
adc
sbb
sbb
push
and
cmpsb
mov
test
adc
adc
push
push
xchg
mov
dec
xor
and
js
scas
xchg
fdivrp
cmpsl
inc
mov
ficompl
cltd
ret
stos
cmc
jl
mov
js
and
pop
scas
inc
fildll
push
lcall
leave
ljmp
add
test
stos
pop
pop
fs
and
std
inc
add
stos
sub
jp
or
sbb
or
sbb
ret
loopne
xor
out
aas
aam
loop
aas
mov
dec
loop
xchg
push
in
dec
fs
femms
ss
fisubl
pop
inc
sub
inc
cmp
mov
mov
jns
cli
inc
sbb
xchg
or
adc
mov
scas
roll
mul
pop
subl
mov
jle
es
stos
aas
xchg
pop
enter
mov
es
mov
add
mov
insl
inc
push
sarl
vmovddup
sbb
and
cmp
rol
jbe
fbld
cld
pop
cmp
ret
test
xchg
xor
and
fbstp
or
push
scas
jmp
lock
test
stc
mov
dec
sub
inc
push
or
insl
pusha
inc
push
adc
jmp
jl
xchg
int
aas
push
sub
or
xchg
push
pop
fs
add
adc
lret
mov
lock
dec
mov
jne
mov
jo
rcll
jp
and
push
nop
ljmp
invd
mov
les
addb
into
orb
movsl
jbe
xlat
je
in
and
outsl
xor
movsl
pop
sub
loop
ja
pop
in
dec
lods
cmp
divb
or
mov
aam
pop
in
ret
add
ficoms
test
rol
mulb
adc
in
mov
mov
lahf
int3
clc
mov
or
push
cli
and
xchg
sub
test
loop
nop
mov
push
inc
jne
cwtl
sub
cmp
mov
inc
enter
adc
into
pop
jp
mov
add
test
xlat
enter
decb
sub
xchg
fisubrs
pop
cli
and
outsb
mov
movsb
mov
adc
dec
pop
pop
stos
push
in
mov
aad
mov
xor
mov
in
dec
xchg
push
nop
adcl
jbe
add
xlat
sbbb
popa
fmul
fcomip
sbb
xor
mov
loope
test
cmpsl
call
dec
xchg
mov
push
add
mov
mov
jecxz
clc
sbb
pop
pusha
les
add
dec
jns
dec
jle
ret
jl
sub
jecxz
xor
push
jp
add
dec
mov
pop
sti
push
imul
in
xchg
cmp
cld
inc
in
insb
jecxz
mov
shrb
lock
inc
adc
loop
mov
mov
mov
jnp
cmp
adc
dec
insl
scas
jp
call
fwait
cwtl
sbb
dec
gs
inc
dec
in
test
rcl
clc
add
ds
add
das
cmp
add
out
cli
mov
loope
pop
inc
add
incl
in
cmp
mov
pushf
sbb
lock
mov
test
adc
adc
pop
push
es
test
and
sbb
ret
xchg
dec
std
fcmovb
adc
call
jecxz
push
xchg
cmp
cld
sub
cli
stc
aad
pop
sbbl
or
lret
and
pop
aas
repz
add
xchg
dec
add
and
hlt
sub
dec
in
and
imul
xchg
dec
push
out
mov
and
stos
add
pusha
cs
shlb
mov
fs
or
inc
mov
pusha
cld
js
cmp
cld
cmp
pop
shlb
cmp
sbb
pop
loop
loopne
test
lret
xor
sub
add
adc
ljmp
fnstsw
cmc
sub
dec
mov
or
aas
in
inc
pop
mov
or
mov
mov
lock
cs
pop
aam
rcrb
or
mov
inc
fistl
inc
insb
mov
xorb
mov
mov
adc
xchg
push
leave
enter
push
iret
fists
imul
add
sar
ja
lret
sbb
imul
cli
aam
subl
push
sub
mov
cmp
lcall
dec
js
jo
mov
sub
or
in
sub
push
jg
pop
ret
andl
sub
lea
bound
cmp
fsubrs
cmp
or
pop
add
orl
and
xchg
pop
dec
add
jl
ret
orl
sbb
xorb
add
adc
add
jle
mov
shl
sub
ret
js
pop
std
inc
and
sub
rolb
fucomip
xor
add
icebp
adc
addl
xor
push
es
and
loop
dec
mov
sub
and
cld
arpl
lods
ja
int
add
repz
lock
adc
mov
mov
jl
das
test
mov
test
jno
clc
jg
jmp
jmp
dec
loop
insl
add
mov
adc
sbb
mov
bound
xchg
or
add
xlat
inc
jns
push
iret
lcall
inc
ret
andb
mov
push
push
cmp
imul
je
pop
cmp
popf
cltd
iret
xor
enter
and
ret
xchg
push
pop
test
ret
mov
loop
pop
lods
cltd
dec
xor
xchg
mov
jmp
in
mov
lods
adc
push
push
pop
cwtl
mov
xor
das
sub
xor
pop
fbld
push
push
add
xor
lahf
ret
inc
pop
pop
jle
in
loop
or
push
mov
iret
adc
lcall
fsubp
inc
cmp
clc
or
pop
in
push
xchg
cmp
out
and
mov
dec
hlt
into
pop
xor
stc
dec
lock
push
inc
cmpsl
pop
add
xchg
push
out
arpl
or
mov
push
lret
and
and
les
scas
sub
xchg
fbstp
sbb
xabort
in
adc
dec
orb
out
lcall
xchg
xchg
mov
xor
hlt
jmp
push
add
sub
loopne
call
add
fs
add
pop
or
sub
test
sub
in
mov
test
dec
repnz
mov
movsl
stos
add
push
psrlw
xor
pop
adc
shll
jmp
or
sbb
loop
pop
xor
push
mov
fistps
pushf
and
add
add
icebp
inc
jg
stc
fistpl
pusha
inc
inc
mov
inc
inc
and
jno
lock
sti
iret
inc
push
jp
in
loope
mov
pop
loopne
sbb
jg
ret
jne
sbb
mov
push
lock
sub
mov
jecxz
pop
pop
sarb
enter
cs
in
pop
xor
mov
das
test
repz
xchg
enter
dec
push
gs
scas
jmp
mov
sahf
sbb
cld
push
sub
cmp
push
push
cs
add
xor
pop
xchg
je
pop
dec
rorl
pop
mov
jge
pusha
inc
aad
js
pusha
jno
test
lcall
inc
lds
or
out
cwtl
inc
pop
cmpsl
push
xor
inc
jbe
push
or
scas
popa
mov
adcb
jp
mov
ficomps
repnz
push
scas
aad
stos
cwtl
adc
adc
cmpsb
lret
sub
dec
imul
cmp
cmc
or
jbe
es
push
cli
push
push
jp
xchg
cmpsb
pop
hlt
jp
and
push
or
aam
jl
sub
addr16
sar
sbb
lret
mov
lret
loopne
jb
and
mov
insb
loopne
ljmp
sti
ljmp
notb
lahf
popa
nop
loop
scas
es
insl
cmp
out
cli
test
cli
mov
jae
or
addb
rcr
jle
je
pop
cmp
add
ljmp
pop
ja
adc
push
xchg
sbb
jnp
xor
xchg
inc
push
inc
repz
shll
clc
aaa
push
outsb
pop
fldcw
pop
lods
mov
movsl
sarb
inc
int
test
stos
push
insb
clc
stos
pop
add
push
pop
adc
add
mov
and
and
and
mov
loop
ss
ljmp
xchg
sar
ret
test
iret
das
push
mov
and
nop
fstpl
rol
or
and
or
xchg
sbb
cli
cli
add
js
test
ficompl
or
pop
sbb
inc
jb
jg
push
and
in
cli
psubsw
push
data16
inc
cmp
test
cmpsl
nop
jns
pop
mov
dec
outsl
pop
mov
jp,pt
std
jle
and
in
bound
push
inc
std
inc
decl
push
std
add
rorl
aam
stos
jnp
inc
inc
mov
scas
lcall
fstps
mov
data16
mov
mov
orb
mov
push
mov
add
jae
pop
fcmovu
push
out
mov
aam
les
or
mov
mov
daa
sahf
addr16
sbbl
rolb
adc
xchg
stos
scas
lret
call
mov
lods
cmp
cmp
mov
arpl
pushf
lahf
xor
or
mov
add
xchg
mov
xchg
or
jo
and
xor
mov
push
or
cmp
test
dec
dec
push
mov
jbe
push
fwait
test
and
mov
cmpsl
inc
sub
mov
aam
xor
xchg
ds
inc
sbb
stc
cmc
pop
push
or
aam
jnp
push
cli
inc
dec
dec
mov
pusha
xor
or
pop
outsl
shrl
adc
clc
or
jle
push
push
push
andl
aad
out
lret
cs
adc
ss
loopne
lahf
mov
sbb
push
cld
movsl
and
cli
mov
adcb
mov
push
mov
movb
push
cld
cmp
inc
sub
inc
incl
inc
mov
lods
jmp
dec
jge
push
lods
mov
int3
push
sbb
or
clc
fisttps
or
xlat
insb
and
loop
add
pop
inc
loop
sub
pusha
and
inc
or
rol
cli
inc
pop
sbb
lcall
ret
lcall
rorb
lock
or
js
in
lret
xchg
xor
aas
cmp
loop
rcl
fldenv
push
test
roll
scas
les
mov
pop
imul
push
xor
pop
inc
dec
add
test
out
fstpt
imul
stos
arpl
add
cmp
mulb
js
jnp
cmp
daa
push
add
in
lcall
call
cmp
out
clc
shll
mov
aas
xorb
lock
push
aaa
and
ss
mov
mov
push
into
mov
and
or
sarl
loopne
sub
push
cli
mov
cld
or
fdiv
and
dec
subb
repnz
ss
out
xor
clc
mov
and
xchg
pop
mov
or
xor
repz
stos
or
pop
lock
outsl
xlat
mov
aaa
adc
inc
test
out
inc
sbb
bound
clc
xorl
bnd
loope
and
cmc
outsb
xchg
stos
mov
lahf
inc
ja
lds
or
mov
bound
lock
enter
outsl
xchg
mov
push
xor
mov
popf
xor
mov
push
xlat
adc
mov
add
or
pop
xor
out
mov
pushl
pop
cmp
pop
mov
add
jbe
shll
loopne
mov
mov
mov
jg
sub
movsb
cmp
push
ljmp
sub
and
enter
push
push
or
inc
sub
mov
outsb
push
mov
mov
cli
push
push
or
and
add
imul
inc
cli
lea
out
push
xchg
adc
fsubrl
pop
jne
data16
mov
pop
xor
aam
clc
sbb
xchg
out
lahf
ss
repz
fistpll
icebp
enter
sbb
scas
fs
and
mov
and
subl
or
inc
add
sbb
cmp
mov
mov
shll
sub
jae
data16
mov
out
mov
or
mov
add
xchg
out
mov
xchg
repnz
lods
aas
ljmp
pusha
cmp
mov
enter
jb
movsb
mov
fdivrs
adc
jne
cmp
addr16
mov
and
and
js
sbb
outsb
add
js
mov
loope
enter
sti
jp
iret
mov
call
imulb
aam
imul
loop
stos
call
jnp
scas
lret
lret
sbb
cmp
add
add
test
or
xchg
sub
and
ss
cmpsb
pop
add
mov
push
jbe
or
pop
je
test
pop
inc
ss
or
aas
pop
mov
rcll
es
jne
jmp
div
push
int
sbb
and
dec
push
mov
sti
push
jg
mov
add
mov
sbb
or
cld
aam
loop
or
mov
das
popa
jmp
ret
sbb
popa
mov
mov
and
push
cli
pop
ret
divb
fimuls
ds
mov
adc
dec
lock
enter
cmp
or
int3
cmpsl
add
leave
dec
pop
mov
jo
mov
dec
je
sub
cmc
jae
sub
inc
into
and
adc
xchg
cmp
or
mov
fwait
subl
adc
mov
xchg
mov
scas
stos
sub
loope
cmc
xchg
push
push
stos
shl
dec
in
mov
movsl
push
push
xchg
cmp
nop
push
fnstenv
jle
jbe
out
and
pop
nop
xchg
ljmp
and
adc
fstps
outsl
pusha
aad
sbb
lods
cwtl
push
jae
sub
dec
jns
or
push
addr16
xchg
lahf
mov
dec
pop
out
into
xchg
sbb
stos
dec
das
and
out
in
leave
and
jnp
lcall
fidivrl
jmp
jb
and
je
ljmp
mov
test
jmp
adc
bound
inc
inc
scas
scas
push
lret
shlb
sub
les
pop
push
xchg
aas
rclb
jl
adc
movsl
stos
pop
arpl
mov
subl
punpcklbw
add
push
sahf
and
lods
bound
inc
mov
enter
mov
push
and
cmpsb
repnz
int
aad
ljmp
add
test
mov
inc
jnp
rcll
jno
mov
push
in
cmp
or
lods
jmp
pushw
shll
pop
mov
adc
insb
jno
cmp
aaa
shrb
sub
sbb
mov
add
adc
cld
pusha
xchg
testb
data16
inc
cmpsl
xor
sbb
ja
inc
cmp
dec
pop
icebp
mov
jl
mov
xchg
les
pop
xchg
dec
dec
adc
sub
push
das
mov
fwait
bound
int
add
mov
mov
in
cmp
mov
jmp
mov
or
outsb
dec
pop
mov
out
mov
bound
push
inc
dec
inc
add
add
out
push
sub
xlat
jno
imul
into
adc
add
inc
mov
pop
add
pop
mov
pop
cmpsw
or
pop
pop
push
fisttpl
sbb
add
xor
adc
mov
fistpl
scas
faddl
jmp
das
js
adc
movsb
ljmp
out
jle
mov
mov
loopne
repz
fcompl
adc
cli
and
and
xchg
test
loope
out
aam
adc
icebp
jp
pop
rolb
mov
hlt
pusha
ret
iret
daa
test
iret
out
jp
jge
adc
jg
xor
jns
fcomps
daa
mov
inc
add
sbb
das
push
fisttps
aas
insb
mov
orl
sbb
cmp
pop
jbe
data16
or
inc
loop
jge
aad
arpl
cmp
and
pusha
cwtl
jl
mov
add
fdivrl
lret
xor
xchg
fcoml
and
clc
jl
aam
popf
jmp
adc
nop
leave
push
lahf
sub
mov
arpl
je
ret
sub
stc
mov
pop
shrb
xchg
mov
test
mov
shll
insb
ficomps
jns
inc
jnp
ds
dec
int3
mov
movsb
or
lds
lea
mov
jne
clc
pop
adc
subl
icebp
and
addr16
daa
cld
mov
fcomi
pop
mov
sbbl
ljmp
mov
xchg
xor
out
mov
fbld
stos
test
add
pop
fistpll
out
push
inc
dec
out
lcall
pushf
movsb
push
cli
add
flds
mov
mov
and
xchg
shrl
mov
enter
xor
sub
jle
xlat
jns
lds
in
pusha
mov
add
add
jp
jb
mov
cli
push
push
or
orl
push
dec
cltd
inc
lds
push
mov
or
xchg
bound
sub
repnz
fsub
pop
sbb
test
jno
fimull
dec
xchg
jl
jo
sbb
out
loopne
xor
sub
pop
in
call
scas
sbb
ja
bnd
pop
xchg
enter
jb
jno
pop
iret
or
mov
mov
adc
int3
cmpsl
idivl
pop
imul
lds
insl
add
xor
out
fdivs
sub
imul
add
push
xorb
js
cmp
cmp
mov
adc
mov
sub
mov
mov
fistps
ucomiss
sub
fmull
cmp
iret
ret
adc
mov
addr16
testl
cwtl
jp
pop
push
xchg
adc
dec
call
jne
fisubl
cld
or
dec
clc
cld
sub
test
pop
popa
add
cli
dec
dec
cld
mov
cwtl
bound
push
pop
xchg
adcb
outsb
sbb
cmpsl
xor
cmp
mov
jb
test
inc
pop
test
push
ror
loope
jae
pop
push
mov
pop
push
roll
out
xor
mov
fmuls
fcomp
push
aas
push
xchg
adc
cmp
add
test
jbe
out
nop
push
jge
rolb
mov
add
out
and
mov
dec
fwait
pop
lret
cmpl
cltd
test
lock
jmp
mov
sbb
sbb
sbb
inc
imul
pop
out
addr16
cmp
or
in
stc
sbb
pop
cmp
adc
push
js
div
push
and
and
scas
pusha
inc
add
enter
jmp
in
loopne
movb
xchg
and
xor
push
in
dec
jno
pusha
sti
sbb
inc
cmp
mov
push
or
into
fsubl
mov
ja
sub
cs
cmpsb
call
cli
pop
imull
aam
loope
xlat
test
cld
insb
cld
rolb
mov
clc
enter
inc
lahf
sub
adc
add
loop
popl
outsl
data16
jno
sub
sbb
mov
adc
add
jns
pusha
rcrb
xchg
pop
sbb
ret
pop
push
add
lods
adc
incl
push
xchg
test
mov
pop
sti
fisubs
or
je
xchg
lcall
adc
stos
or
jnp
xchg
cmp
data16
outsl
push
xlat
testb
add
mov
push
sbbb
mov
pop
ret
cmpsb
iret
into
add
ljmp
and
xor
fnstsw
mov
jb
pop
stos
or
out
iret
js
int
xor
lods
fidivl
jmp
mov
add
push
sbb
ret
xor
adc
and
xchg
xor
push
jnp
bsf
or
mov
or
fmuls
lea
adc
push
sarb
push
and
icebp
clc
stos
mov
sub
incl
outsl
js
movsl
fldcw
aas
sbb
lods
push
and
add
scas
test
adc
mov
scas
cmp
push
mov
push
add
jb
add
cmp
cmpsl
cwtl
daa
in
das
mov
jecxz
xchg
and
fiadds
lea
mov
int3
adcl
imul
out
lret
arpl
dec
and
test
push
push
insl
pusha
jp
push
call
insb
bound
in
aam
add
push
call
add
and
jg
scas
or
push
popf
jecxz
xor
cli
sub
ret
in
push
xor
shl
out
cmpb
mov
sbb
es
add
cmp
mov
clc
jb
out
ljmp
popf
or
pushf
movsb
and
out
aaa
dec
pop
mov
rcr
sub
sub
xchg
sub
outsb
sbb
rorl
cld
hlt
or
pushf
jle
inc
xchg
xchg
sahf
pop
push
arpl
mov
and
enter
mov
test
cld
call
xchg
mov
aaa
cmp
inc
xor
gs
ja
mov
cmp
rcrb
popf
cmp
push
cmp
mov
aaa
cli
fsts
mov
cmpb
out
mov
cmp
pop
sub
out
pop
mov
out
jmp
pusha
stc
ret
pop
movsb
mov
dec
mov
pop
das
in
dec
lahf
ret
insb
mov
subb
and
pop
add
bound
sbb
and
adc
loope
add
sub
inc
sub
cli
jg
sahf
outsl
or
pushf
xchg
push
sbb
adc
sub
std
je
mov
lea
or
fs
xchg
jnp
dec
imul
loopne
inc
test
pushl
sti
lock
mov
into
jle
inc
and
inc
jle
add
call
sahf
cmp
rorl
push
or
sub
inc
and
ror
loopne
inc
fdivr
in
jmp
fildl
sahf
loop
jae
dec
mov
pop
pop
out
stos
fwait
mov
pop
xchg
and
sub
inc
out
jo
jb
xchg
clc
bound
aam
ljmp
icebp
xor
dec
push
out
xor
dec
test
outsl
adc
inc
inc
cld
mulb
call
cmpsl
data16
mov
lcall
cli
mov
call
or
xor
adc
pushf
in
int
push
je
mov
pop
fsubrl
cmp
mov
movl
push
lock
je
jbe
dec
out
test
push
mov
daa
cmp
pop
jl
inc
jnp
xor
lock
cmp
loop
mov
daa
sbb
addr16
outsl
jmp
push
les
add
hlt
sub
test
cli
insl
das
jbe
insl
push
aas
xor
arpl
imul
jge
sbb
cwtl
and
add
jp
sub
out
and
rsm
xchg
cli
insb
fbstp
mov
test
sub
or
nop
push
jg
loopne
les
gs
jnp
jle
leave
and
dec
stos
jecxz
ljmp
mov
in
loop,pn
clc
cmp
iret
dec
clc
rclb
mulb
pop
and
lret
out
pop
cmpsb
ret
lea
sbb
clc
xlat
stos
shl
and
mov
cmpsb
enter
nop
xchg
stos
xchg
cwtl
xor
xchg
xor
or
xchg
xor
push
cmp
mov
js
cmp
xchg
adc
or
cmpsb
and
stos
ds
mov
inc
cli
icebp
mov
xor
lock
enter
push
xor
sti
daa
pop
icebp
and
adc
jb
fisubl
icebp
daa
jge
jo
fs
add
insl
inc
cmpsb
or
cmpb
les
call
cmp
insl
add
or
mov
in
es
fldl
mov
pop
iret
nop
je
inc
jl
sbb
cmpb
push
or
jo
negl
lock
aam
loope
xor
roll
pop
sbb
push
aaa
fimull
jns
or
aaa
out
pop
xor
fcoml
data16
push
mov
push
mov
stos
xor
cs
mov
fldl
div
int
xchg
push
dec
add
jg
or
lahf
leave
sub
or
mov
mov
pop
std
and
add
xor
jg
daa
add
pop
push
bound
insb
inc
dec
mov
dec
addl
xlat
repnz
inc
mov
or
mov
shlb
cmp
je
cmp
cmp
mov
sbb
dec
lret
test
fbstp
aad
jge
and
or
add
inc
in
add
repnz
dec
mov
out
xor
mull
xor
shlb
loop
out
inc
cli
add
or
test
push
pop
adc
add
es
lea
xchg
call
aad
lds
shlb
idiv
push
adc
mov
out
cmp
dec
pusha
out
or
call
or
cmp
loopne
sarb
push
jg
xchg
push
adc
orl
imul
inc
shl
add
add
cld
jbe
push
fsubr
es
fmuls
xchg
push
push
inc
push
sbb
dec
scas
pop
jl
fwait
adc
pop
push
jl
lahf
jg
or
mov
lcall
xlat
mov
pop
pop
addl
pop
push
sar
lret
jne
jmp
test
movsl
push
xchg
shlb
out
icebp
mov
xor
mov
sub
stos
push
rcll
jae
pop
out
outsb
push
cld
mov
aad
xor
mov
fcmove
lods
pop
add
sbb
or
call
pop
clc
out
lcall
jp
mov
mov
in
push
fs
mov
inc
push
lgs
mov
inc
outsl
iret
js
movsb
scas
and
mov
call
adc
mov
ret
test
mov
js
mov
fiaddl
pop
mov
adc
fdiv
fucomp
jp
xchg
repz
pop
xchg
lahf
shlb
add
or
dec
fimuls
ljmp
push
rcrl
push
incl
sub
icebp
test
cmp
pop
xchg
test
push
gs
das
movsb
test
in
sbb
sub
sub
sbb
xchg
les
fsubs
jl
jo
insl
loopne
xlat
add
adc
decl
scas
cmp
push
sbb
dec
outsl
push
inc
les
or
and
aam
inc
add
bound
nop
ljmp
dec
fcoml
clc
or
cmp
in
pop
jecxz
jmp
fs
ja
jo
adc
cmpsb
mov
dec
mov
push
and
lock
adc
or
movsl
and
je
cli
dec
leave
push
test
sysexit
cmp
arpl
shl
xlat
ret
adc
xor
dec
push
daa
add
pushf
lods
mov
adc
sub
cmc
sbb
inc
pop
or
fidivrl
and
sbb
jne
fucomip
sub
add
cs
or
cld
pop
inc
xor
lods
mov
mov
inc
or
mov
pop
jecxz
and
add
mov
das
aad
add
push
shlb
cld
sarb
mov
xchg
or
xchg
add
fcoms
lods
add
fists
psubsb
mov
lahf
pop
ret
test
ljmp
cmp
insb
adc
jo
movsb
mov
push
adc
pop
lods
adc
sbb
fs
lods
ljmp
mov
aas
out
loope
cmpl
pusha
push
add
add
insl
loopne
clc
lock
xchg
push
or
inc
jge
push
jo
test
jle
push
jl
rolb
or
xor
mov
imul
xchg
lods
pusha
inc
push
jns
ss
xchg
enter
dec
cmp
mov
test
popf
xchg
push
pop
cmc
pusha
fsubl
cmp
add
hlt
and
mov
dec
mov
jno
mov
nop
icebp
orl
hlt
add
push
add
mov
pop
lock
fisttpll
shlb
pop
in
aaa
cmp
rol
pushf
div
jle
filds
sahf
mov
add
sub
push
ret
adcl
je
or
dec
ret
icebp
daa
push
sub
cmp
mov
fisttpl
add
adc
and
jmp
adc
and
pop
mov
or
and
arpl
jg
imul
and
dec
int3
push
daa
stc
xchg
fildl
jle
repnz
dec
test
divl
jle
xor
repnz
test
sbb
sbb
imul
jns
lea
mov
add
adc
xchg
in
mov
dec
aam
movsb
das
sbb
adc
jb
xor
add
dec
pop
or
jbe
sub
xchg
negb
testl
add
lock
lods
cmp
popf
daa
mov
cmp
and
adc
fmulp
pop
movsb
or
lods
clc
cmpsb
and
jle
mov
insl
into
push
aam
pusha
loopne
push
dec
aas
test
pop
jl
ss
fbstp
sub
bound
in
sub
lods
test
mov
imul
xchg
test
mov
xchg
push
mov
adc
adc
adc
stos
sar
clc
adcb
stc
sbb
jge
pop
insb
aam
push
ds
pushf
out
mov
mov
mov
xor
adc
xchg
jp
sarb
mov
daa
test
jge
popf
lods
push
sti
lea
nop
adc
int
and
jg
sbb
push
hlt
js
dec
aad
rolb
cmp
cld
dec
into
dec
test
jmp
xor
add
and
sub
xor
xchg
mov
lret
dec
and
dec
sbb
popf
sarb
and
mov
mov
test
out
shll
cmp
outsb
js
xchg
clc
loopne
lret
lods
sub
insb
add
mov
mov
push
movsl
rorb
outsb
dec
push
pop
insb
sbb
jno
mov
push
ret
aaa
or
mov
stos
loop
dec
out
ret
pop
out
cwtl
jmp
dec
adc
lods
int3
inc
adc
cmpsl
sbbb
and
movsb
cmc
fdivrl
mov
mov
jp
aas
inc
add
and
jne
in
inc
pop
out
das
push
mov
pop
fld
jecxz
enter
cltd
cmp
arpl
sub
cli
addb
cmp
and
subb
fadds
icebp
js
adc
in
outsb
mov
push
xchg
rclb
add
outsb
shll
mov
mov
adc
shll
les
mov
call
pusha
cmpsl
mov
jnp
inc
lds
sbb
or
sub
test
xor
test
xor
scas
inc
and
cli
and
int
fimuls
mov
lea
and
clc
dec
in
push
scas
lea
adc
ret
rorl
jns
cltd
pop
jecxz
inc
sub
out
or
add
shrb
push
adcb
cld
shlb
subl
loopne
mov
sbb
lods
outsb
iret
sbb
maxps
mov
add
mov
inc
adc
fwait
sub
ficompl
cli
xorb
adc
or
in
xchg
jp
sbb
or
or
xchg
and
ret
inc
push
jmp
ss
ret
pushf
out
xor
shrb
inc
push
rcll
fcmovnu
push
js
fcomps
push
ds
addl
mov
jg
jp
popl
cli
std
sbb
inc
inc
nop
or
mov
clc
xchg
mov
inc
sbb
scas
fwait
sub
jno
adc
pop
je
dec
dec
mov
test
out
das
jle
or
or
xlat
fldenv
bound
jecxz
lret
lea
jmp
sahf
les
dec
popa
push
data16
inc
pop
lods
pop
fsubs
loope
mov
and
mov
notl
ja
jb
pop
decl
cwtl
adc
shll
and
inc
fcomip
dec
jp
testl
dec
push
stc
stc
rcl
or
jecxz
das
jmp
sbb
outsb
fsub
inc
xor
adc
into
xlat
ds
adc
adc
inc
jl
pop
ss
shrb
bound
stos
push
push
adc
clc
lds
pop
push
aam
aas
cld
xchg
out
xor
inc
je
cli
loopne
ficoml
push
jno
clc
in
aad
add
pop
mov
pop
loopne
aam
setg
clc
in
pop
sbb
insb
pop
push
lods
das
popa
popf
fdiv
inc
xchg
mov
and
lock
cs
je
fimull
fcomps
les
test
mov
add
mov
call
rorl
imul
js
sbb
aas
clc
adc
and
xchg
jl
jp
leave
lock
stc
dec
pop
out
repnz
adc
dec
cmpb
sbb
ret
pop
pop
enter
dec
add
inc
mov
mov
cmpl
sbb
cmp
xchg
fwait
out
hlt
movl
or
jmp
cmp
xchg
inc
jne
push
test
push
clc
cmp
movsb
lahf
les
jle
inc
adc
pop
push
and
dec
outsl
mov
cli
push
loop
ret
dec
jmp
inc
orl
pop
sbb
fldenv
loopne
in
cmpb
push
adc
gs
fisubrl
inc
push
sbb
or
dec
ret
push
inc
into
inc
mov
call
xor
or
fsubs
or
test
jle
shll
mov
mov
adc
pop
aad
push
push
pop
mov
ljmp
fs
out
aas
andb
rorb
push
aaa
sbb
aaa
sbb
and
je
adc
ljmp
pushf
inc
stos
pop
rolb
sbb
dec
out
xchg
inc
fdiv
and
shlb
or
dec
popl
xorb
arpl
sub
ret
test
or
inc
or
cmpsb
fidivl
or
les
addb
cmpsl
add
lret
sbbb
mov
jp
fwait
shrl
dec
sarl
adc
rcrl
push
ja
xchg
lcall
cs
add
cld
sti
lock
adc
dec
fs
mov
push
test
adc
push
or
pusha
mov
add
xorb
jmp
in
cmp
out
test
scas
decl
jno
mov
test
ret
out
push
sub
jbe
jns
enter
jg
jo
bound
mov
in
pop
adc
sbb
loopne
sbb
cmpb
fs
inc
sub
nop
xor
decl
xchg
nop
jns
inc
or
xor
shrl
arpl
mov
jo
jmp
cwtl
lods
inc
cmpl
mov
mov
in
hlt
andb
or
or
dec
dec
push
scas
call
jo
outsl
ret
scas
xlat
add
pop
pop
jg
inc
lods
addb
test
adc
cmp
pop
jnp
aad
call
negl
or
add
fcomip
dec
jmp
stos
sbb
repz
loopne
repnz
lods
pop
insb
fs
push
test
scas
jmp
notb
mov
es
cld
xchg
jge
and
outsb
mov
dec
and
ja
mov
je
adc
in
iret
icebp
xor
aas
xor
popa
pop
test
ljmp
inc
inc
popa
xlat
add
fcomp
and
mov
pop
pusha
push
nop
int
jbe
push
inc
mov
sahf
sbb
fsts
pop
cmp
int3
inc
pop
jbe
mov
dec
ret
xchg
and
and
dec
pop
bswap
icebp
js
or
mov
and
das
fisttpl
push
std
xor
ret
mov
out
and
push
daa
in
je
mov
lock
popa
xchg
and
into
out
xchg
pop
out
or
xorb
jbe
pop
into
sbb
sbb
cmp
lcall
pop
sub
cwtl
adc
je
cmp
pop
mov
sub
jle
dec
add
jle
cmp
addl
mov
sbb
mov
movsl
loopne
xchg
push
xchg
ret
daa
adcb
out
sub
xchg
jg
aas
xchg
adc
sbb
push
jl
jl
dec
pop
pop
in
cld
adc
inc
cmp
lcall
outsl
cli
mov
or
mull
popf
lods
xchg
clc
inc
and
es
dec
inc
cmpb
test
inc
or
rorb
aaa
hlt
ret
cmp
cmp
push
lcall
mov
les
mov
xor
frstor
sbb
and
mov
ret
xorl
loope
js
pop
dec
mov
aaa
adc
data16
cmc
test
pusha
sub
inc
pop
push
push
add
in
clc
les
xchg
mov
dec
or
inc
push
xchg
cmp
shlb
cwtl
rorb
lret
push
dec
test
fadd
les
lock
fcompl
jo
cmp
movsl
imul
inc
shrb
mov
roll
sbb
testl
add
idivb
insl
and
inc
mov
inc
cmp
push
sub
cmp
aam
dec
pusha
adc
subl
xor
fisubl
arpl
xchg
jecxz
cmp
dec
push
lahf
js
insb
add
sbb
sub
xor
dec
jmp
cmp
xor
xchg
shll
imul
xchg
mov
cmpsl
shlb
out
or
push
pop
shll
hlt
dec
fcoms
lock
rolb
xor
inc
cmpsl
jg
inc
dec
sbbl
pushf
test
test
mov
cmp
or
and
jmp
or
dec
stos
mov
das
lods
loopne
mov
mov
pop
aaa
enter
adc
testb
xchg
mov
pop
pop
push
daa
sbb
lods
sbb
dec
fists
inc
inc
dec
and
sbb
and
fwait
xorb
in
cli
mov
sbb
test
xchg
cmc
xchg
sbb
add
mov
pop
jo
jno
iret
cmp
cmp
jecxz
movsb
faddl
mov
push
or
jmp
jge
fwait
add
lods
jg
cmpsb
adc
mov
ret
sub
lds
pop
scas
pop
jne
or
xchg
jmp
addb
mov
rcll
clc
shlb
xchg
adc
pop
test
test
mov
lds
fsubp
ja
cmp
mov
cmp
add
sahf
inc
xchg
fs
scas
sub
mov
mov
jge
push
cli
cs
xchg
loop
add
sbb
lcall
std
xchg
pop
ljmp
fiadds
stos
or
xchg
sbbl
mov
fs
pushl
add
xor
dec
arpl
add
sbb
clc
inc
inc
loope
and
pop
bound
dec
add
jmp
les
jle
xor
mov
mov
push
pop
arpl
ss
scas
rolb
scas
std
mov
fiaddl
nop
pop
enter
or
rclb
cmovb
ds
cs
xchg
cs
int3
or
cmp
inc
push
jp
mov
push
inc
stos
outsb
cli
add
add
xchg
cmp
movsl
pop
jg
leave
test
inc
lcall
stc
outsl
sub
pop
dec
cld
aaa
fwait
cmp
sub
in
mov
dec
mov
sbb
and
dec
scas
pop
and
decb
scas
cmpsb
adc
mov
xor
and
fst
pop
push
mov
js
push
pusha
add
aad
seto
cmp
add
cli
ljmp
lods
jne
testb
arpl
repnz
cs
add
les
pop
pushf
push
mov
sub
and
add
inc
sub
adc
inc
jge
aam
outsl
mov
cli
push
cmp
or
xor
jbe
pop
dec
inc
add
or
inc
pop
outsl
out
in
scas
xchg
cmp
pushf
and
lret
xchg
inc
push
movsb
mov
mov
lods
sub
imul
and
or
xor
roll
inc
ljmp
out
shlb
and
jp
jle
test
out
jge
mov
sahf
outsb
outsb
mov
and
mov
outsb
xchg
adc
or
mov
sbb
adc
sbb
mov
lret
inc
or
cltd
mov
jbe
mov
stc
movsl
xor
loope
pop
jo,pt
inc
mov
inc
and
insb
xor
jecxz
ret
icebp
cs
mov
cmp
lret
je
push
push
or
mov
or
lea
mov
lret
adc
call
bound
jno
adcl
les
jbe
pop
sbb
fdivrs
sub
xor
outsb
pop
sbbl
neg
in
arpl
das
mov
mov
push
add
xor
or
or
repz
dec
pop
cmp
pop
push
lret
ljmp
push
sbb
jge
loopne
sbb
mov
sub
jl
hlt
mov
in
inc
sbb
repnz
and
push
jbe
mov
mov
adc
movsb
mov
jg
adc
fnstcw
clc
jg
or
inc
into
pusha
xchg
xchg
mov
das
jp
push
push
sbb
push
xor
inc
cmp
adc
in
or
movb
hlt
adc
hlt
out
cmp
inc
and
lock
test
mov
nop
sub
scas
mov
sbb
sub
cli
inc
dec
js
cmp
popf
xor
mov
jge
test
out
mov
test
negb
inc
push
pop
lcall
lea
in
repz
sbb
xchg
jg
inc
mov
push
rorb
xchg
popf
mov
and
jns
xchg
push
out
xchg
mov
in
hlt
mov
dec
es
pop
dec
mov
cwtl
mov
push
clc
ficoml
mov
aas
add
push
sub
mov
je
jmp
bound
mov
hlt
std
xchg
sbb
dec
adc
dec
add
pop
jbe
scas
jp
adc
roll
loope
xor
pop
out
jge
push
aad
aad
lret
push
cmp
and
and
cs
pop
nop
in
dec
jo
popa
jg
ds
inc
push
sub
dec
ja
test
jl
cli
or
mov
pushf
mov
pop
cli
cmpsb
add
int
adc
dec
xor
pop
xchg
push
cmc
inc
mov
popa
xor
xchg
jb
aam
iret
cltd
and
xchg
add
sbb
push
or
jae
or
dec
mov
pop
scas
ljmp
jle
sbb
ja
mov
or
jae
push
cmc
xchg
aaa
jb
ret
sbb
mov
out
pop
mov
mov
dec
xor
dec
pop
mov
popf
dec
fcomi
add
adc
and
or
push
cmp
cmpsb
test
and
dec
faddl
adc
je
cmpsb
hlt
adc
sub
ret
push
pop
jle
inc
aaa
mov
cmpb
jno
sub
fiadds
push
cwtl
or
adc
push
xor
sub
sbb
push
loope
addr16
pop
in
aas
mov
pusha
xor
xchg
xchg
jo
test
fisubrs
lock
xor
push
jns
push
push
push
xchg
adc
loop
popl
jp
out
adc
jecxz
fs
inc
hlt
pop
mov
enter
and
movsb
xchg
mov
das
jmp
adc
jae
xchg
push
inc
dec
ss
pop
or
fisubl
or
cmpsl
ja
cltd
mov
mov
rol
jb
add
cltd
inc
ljmp
out
mov
add
lods
or
jne
insl
mov
xor
cs
xor
fwait
adc
add
xchg
and
loop
rcr
mov
or
add
mov
or
loope
mov
mov
jnp
imul
xchg
pushf
pop
test
test
test
jle
dec
and
and
jo
loopne
int3
fimuls
or
lret
sub
push
int
lret
add
mov
pop
inc
stc
push
test
imul
enter
mov
xchg
rcrl
or
ret
mov
inc
mov
cmc
sbbl
ljmp
cmpsb
pop
sub
mov
enter
sbb
or
pushf
add
or
or
add
push
xchg
loopne
jmp
imul
loope
xor
xchg
std
mov
mov
aam
add
cmp
insb
cmp
push
push
outsb
push
ret
push
in
lds
dec
ret
jmp
xchg
xchg
cwtl
jle
popa
into
jmp
cmp
decl
add
mov
and
jp
lods
insl
sub
pushl
jle
jb
cmovo
mov
dec
out
fcmovb
stc
js
stos
sbb
mov
adc
adc
scas
in
inc
stos
mov
and
das
add
and
jg
and
push
ss
popf
addb
inc
call
call
add
les
insl
ljmp
in
push
outsl
pusha
fs
orb
mov
roll
xlat
sbb
dec
mov
xor
icebp
repz
icebp
outsb
hlt
adc
adc
cmp
test
push
or
out
insb
sbbl
mov
and
pop
jecxz
jl
add
mov
cld
ret
push
or
pop
mov
jne
mov
xor
mov
xorl
inc
adc
mov
out
xor
xor
aaa
add
mov
sbb
ljmp
push
xor
fwait
out
in
in
xchg
mov
mov
stos
dec
pmaddwd
mov
mov
insl
cmp
in
cli
iret
int
push
push
scas
es
and
mov
dec
dec
push
aam
cmp
scas
dec
pop
jl
lret
push
mov
out
dec
xchg
pop
shrb
sub
movb
or
pop
hlt
push
sahf
jbe
enter
and
imul
shl
out
call
adc
jno
fwait
ljmp
adc
push
cmpsb
jge
mov
dec
inc
fimuls
mov
test
cmc
mov
and
mov
push
data16
cmpsb
dec
push
ret
popa
roll
inc
push
jp
mov
test
sub
gs
add
adc
mov
adc
cmpsl
js
inc
fdivs
inc
rorb
outsl
mov
lcall
xchg
jle
roll
mov
jmp
ret
stos
xor
cmpsb
in
lock
push
sbb
lock
je
xchg
movsl
mov
mov
test
call
mov
cli
addr16
sarb
sub
add
sbb
std
or
jp
aaa
jecxz
faddl
inc
inc
mov
mov
js
jmp
inc
es
repnz
or
fists
push
pushf
fidivrs
xchg
mov
pop
pop
fdivp
lcall
jl
jle
inc
jae
pushl
push
adc
or
mov
test
mov
fucom
xlat
sbb
enter
insb
enter
out
data16
call
adc
loopne
lock
sub
test
mov
mov
rcrb
cmp
loopne
and
lahf
mov
cmp
and
enter
rolb
cmpsb
lods
out
sbb
lods
les
shl
call
or
roll
jb
ja,pt
ds
std
les
jbe
cmp
dec
adc
lcall
xchg
mov
int
aaa
in
push
push
fdivrs
dec
std
enter
inc
xor
enter
lret
pop
push
mov
push
fsubl
jo
push
adc
jecxz
fildll
pusha
add
cpuid
dec
cltd
push
icebp
ret
mov
pop
add
or
pop
mov
inc
lret
rcrb
xlat
jecxz
sarl
sarb
enter
mov
sub
push
mov
lds
sub
pop
cli
pop
dec
pop
jle
mov
lock
shll
pushf
xchg
jge
and
call
sbb
stc
xorb
mov
jne
add
test
int3
fmuls
mov
xchg
fucom
sbb
push
or
pop
push
sub
imul
lds
repnz
inc
clc
std
push
push
adc
jnp
cmpxchg
lods
out
sub
pushf
pop
aas
outsb
fiaddl
mov
push
jecxz
mov
push
out
test
xor
cmp
inc
xor
test
mov
movsl
push
aaa
or
mov
insb
sub
dec
cmovle
in
add
push
add
inc
xor
xor
jecxz
hlt
fcomps
cwtl
movsl
push
lds
jecxz
inc
out
xchg
mov
add
test
and
xor
mov
cmp
mov
and
xchg
cmp
sub
dec
rolb
insb
cmp
and
mov
hlt
push
loop
push
push
movsl
or
rcr
lock
mov
fucomip
mov
int3
ret
push
mov
push
daa
pop
adc
and
mov
push
sbb
loope
push
add
adc
xchg
xor
ret
les
jne
xchg
xor
add
xchg
in
leave
js
mov
fbstp
mov
popa
hlt
sub
sub
ljmp
ja
inc
adc
xchg
scas
add
xchg
pushf
movsb
sbb
lcall
dec
repnz
aaa
stos
das
mov
js
mov
push
sub
xor
mov
dec
push
out
mov
xlat
push
mov
xor
ds
xchg
and
push
adcb
push
repz
pop
sub
rcrl
mov
lds
hlt
mov
jbe,pt
notl
jp
movsl
and
fnsave
xchg
fnsave
jnp
mov
loopne
fadds
mov
push
adc
mov
push
aaa
xor
ss
push
cwtl
and
lods
pop
das
call
dec
cmc
enter
rorb
adc
cmpsb
lcall
popa
pop
les
fstps
in
and
sbb
adcl
out
gs
lods
sbb
xor
xchg
xor
cmp
out
mov
adc
or
mov
aas
jbe
push
pop
dec
jmp
add
sti
xor
hlt
pop
sbb
inc
test
jmp
mov
add
mov
push
xorb
loop
cs
flds
push
cltd
jge
call
subl
psrlw
ds
adc
cmc
test
cmc
jb
dec
and
jp
dec
jne
dec
loop
shrb
int
mov
sbb
insl
push
shll
out
push
pusha
mov
leave
hlt
jns
fs
popa
mov
popf
xor
shl
sub
mov
add
pushf
mov
push
or
insb
mov
inc
les
das
shlb
mov
cmp
movsl
sub
inc
adc
sub
xchg
into
pop
hlt
jmp
and
mov
push
stc
inc
iret
outsb
outsl
sbb
mov
inc
and
pushf
cmp
mov
lock
xchg
sbb
jb
mov
stc
rorb
mov
aam
dec
cld
std
cli
xor
mov
jne
add
cwtl
cmpsb
call
add
stc
int
xchg
cld
cmpsb
aas
mov
jae
jo
pushf
push
cmp
lods
test
inc
jl
push
clc
pop
jl
pop
sub
or
or
repnz
jne
test
xchg
inc
inc
hlt
popf
test
jl
imul
xchg
ret
sub
mov
incl
repz
add
xor
and
pop
dec
pop
je
es
dec
dec
xchg
or
jg
jge
out
push
pop
test
std
adc
movsb
fiadds
push
push
out
sbb
and
inc
cli
cli
jb
out
sahf
dec
jp
adc
inc
incl
adc
andb
xchg
xchg
movsb
cmp
fbld
aaa
inc
cld
mov
andb
cmp
push
sub
xchg
mov
dec
mov
sbb
xchg
pop
pop
mov
jnp
pop
jecxz
rorl
dec
test
lea
icebp
cmp
cwtl
shrl
cmp
inc
adc
jno
push
push
daa
push
and
rolb
mov
sahf
mov
jp
mov
sbb
rcll
pop
scas
inc
add
insb
dec
or
test
and
pop
sbb
cmc
rolb
push
fcmovnb
lds
push
dec
jae
or
mov
xlat
roll
and
jp
frstor
ret
bound
pop
icebp
mov
cs
icebp
mov
push
mov
push
or
dec
add
ret
push
adc
and
aam
daa
scas
adc
enter
adc
je
dec
mov
stc
stos
jb
lret
inc
pop
xor
sbb
jns
es
adc
adc
sbb
xchg
push
stos
aad
adc
sub
add
mov
popf
mov
cmp
xchg
fsub
shl
test
loopne
inc
lods
popf
mov
pusha
out
aam
sub
jbe
inc
inc
add
push
mov
add
mov
mov
adc
loop
push
or
data16
ds
les
out
movsw
orl
pop
stos
add
in
mov
add
in
dec
sub
push
mov
aas
outsb
push
out
dec
test
and
scas
xchg
or
loop
out
mov
xor
and
mov
scas
adc
mov
jge
mov
or
mov
push
xor
mov
test
stos
testl
imul
ja
xor
push
jl
call
push
and
jb
subb
mov
lcall
cmp
out
cmp
data16
xchg
les
adc
sbbb
icebp
les
lea
ds
sbb
fwait
aad
xchg
dec
xchg
sub
pop
mov
fisubl
int3
sub
mov
xlat
xor
jp
in
in
jmp
out
aad
icebp
mov
mov
add
mov
ds
push
push
jl
jecxz
push
fsts
int3
mov
pop
push
or
mov
cmpsl
or
enter
mov
fcmovnu
popf
rorb
mov
negb
jne
and
mov
shrb
cmp
mov
rol
mov
lds
rcll
mov
sbb
out
pop
push
push
out
xor
bound
adc
adc
in
sbb
xchg
lds
fsts
xor
ret
daa
sbbl
dec
fdivs
pop
pmaxub
sbb
js
inc
loop
dec
mov
sbb
and
mov
jp
sarl
dec
xor
lcall
mull
incl
xor
mov
and
inc
pop
sbbl
dec
xor
test
shrl
imul
sbb
add
lock
insb
push
test
fcmovne
cltd
stos
sub
mov
popa
sbb
add
adc
dec
xor
jp
subl
stos
fsub
in
out
stos
negb
sub
imul
push
aam
mov
repnz
adc
daa
popf
lods
inc
sahf
mov
loope
into
es
push
pop
shl
mov
outsl
jle
das
loop
sti
mov
mov
adc
int
es
scas
push
addr16
xor
cmpsb
adc
pop
mov
mov
popf
sbb
push
push
sbb
clc
cmpsl
jecxz
arpl
and
cmp
inc
sub
push
repz
loope
lcall
nop
xchg
push
gs
aad
fisubs
jecxz
push
jg
cld
dec
dec
dec
jecxz
jns
sbb
cs
xor
cmp
xchg
stos
cmp
cmp
outsb
lods
jp
push
shl
jmp
mov
lods
loopne
xor
sbb
cwtl
out
pop
icebp
rorb
mov
test
sbb
mov
push
sbb
hlt
movzbl
mov
mull
int
inc
test
scas
or
sarl
adc
jo
and
mov
cmp
mov
divl
subl
aad
pusha
pop
push
or
mov
mov
into
push
dec
ficoms
pushf
adc
sbb
mov
and
push
cmp
cmp
loop
adc
popa
sbb
add
ja
sbb
sbb
popa
pop
dec
cmp
add
pop
jno
notl
mov
sti
gs
inc
loopne
xchg
cli
xchg
push
popf
pop
cltd
pop
add
push
mov
sbb
scas
imul
stos
test
aas
mov
add
insb
nop
scas
andb
not
push
jl
xor
into
pop
test
and
mov
and
int3
cli
repnz
cmpl
inc
shlb
jle
jecxz
lcall
mov
insl
stos
or
pcmpeqw
xchg
cmp
addb
add
xchg
pop
and
pop
dec
jmp
movsb
push
and
push
add
cmc
mov
call
rcrb
leave
jp
pop
stos
dec
jbe
dec
fsubr
mov
repnz
or
pop
leave
jmp
inc
adcl
add
sbb
mov
outsl
push
push
xbegin
jl,pt
inc
push
pop
shlb
mov
in
push
push
bound
xchg
std
clc
pop
xchg
sub
pop
cmp
ds
xchg
jl
sub
adc
adc
lret
inc
push
pop
fcom
add
add
mov
fwait
cs
xchg
jno
popf
incb
enter
fldenv
fs
inc
push
mov
pusha
aad
test
jecxz
ljmp
fsubrl
sbb
cmp
sbb
pushfw
notl
xor
sbb
sub
mov
jnp
cmpsl
or
ret
aad
rcrl
inc
test
pop
jo
jbe
pop
cmc
mov
jge
shl
cli
inc
popa
ss
jae
push
sbb
gs
lcall
lock
vfrczps
mov
dec
test
mov
dec
or
mov
sti
in
popf
sub
rol
js
sbb
jns
pop
sbb
cmpsl
adc
pop
lds
imul
push
out
jle
out
sbbb
xlat
push
and
mov
add
xlat
repz
aam
add
fistl
pushl
add
dec
push
add
jle
mov
cmc
push
push
or
mov
das
or
mov
orb
pop
orb
fs
lods
outsb
rolb
add
mov
outsl
mov
sub
js
dec
mov
hlt
mov
icebp
stos
dec
push
ss
jb
cmp
out
and
push
sti
rolb
int
pop
xchg
jecxz
cmp
ds
inc
icebp
adc
adc
push
sti
sub
xor
push
js
or
jb
pop
adc
aad
add
pop
sbb
cmp
je
mov
mov
jne
ret
mov
push
fs
and
xchg
inc
icebp
sbb
cmp
jp
mov
icebp
sub
mov
inc
inc
mov
daa
stos
push
aas
je
push
je
mov
xchg
inc
dec
outsb
in
outsb
or
repnz
pop
mov
push
mov
insl
aam
aad
idiv
add
clc
mov
fisttpl
adc
call
push
or
scas
addb
dec
in
enter
and
sub
adc
dec
loopne
cmc
pop
mov
out
jbe
hlt
aad
iret
inc
dec
add
add
adc
pop
icebp
jmp
mov
inc
mov
sub
sub
in
inc
loopne
add
mov
or
imul
out
mov
dec
inc
pop
test
inc
add
add
inc
cmpsl
lcall
push
adcb
out
push
sub
mov
pop
mov
push
es
das
jmp
push
ficoms
pop
mov
cmp
movsl
sqrtps
pop
jne
stos
push
pop
xchg
pop
jecxz
shlb
js
stos
inc
js
cmpb
xor
push
and
in
and
push
lahf
add
fs
sub
push
test
inc
xor
jbe
pop
or
gs
add
std
cli
mov
outsb
mov
cmp
and
cmp
mov
jle
cmp
jae
loop
stos
nop
push
jecxz
ret
dec
adc
pop
sbb
loope
xor
jecxz
aam
adc
in
ret
call
lret
mov
fmull
fmul
lods
lock
stos
mov
sub
mov
subl
inc
and
and
sbb
dec
and
hlt
sbb
mov
dec
mov
js
push
imul
dec
sub
aad
xor
js
lcall
mov
and
and
dec
lret
cli
dec
inc
mov
pop
outsb
inc
sub
push
cs
sbb
stos
call
xchg
mov
mov
addl
mov
push
mov
es
out
adc
jecxz
ds
mov
push
jno
mov
add
movsl
andl
test
fcompl
ds
inc
lea
js
mov
rcrl
pop
negb
out
test
and
rol
push
das
pop
add
stos
mov
sbb
jb
fisttpll
sub
pusha
andb
mov
mov
inc
pop
insl
jp
xor
scas
leave
push
cmpsb
aam
inc
ljmp
adc
les
pop
lcall
push
jl
xor
xchg
out
mov
jbe
shll
pop
std
or
mov
js
sti
push
and
cmp
push
add
mov
loope
ficoml
lahf
xchg
inc
pop
cld
add
cmpsl
addb
js
aad
lret
negl
out
scas
cmp
aaa
adc
sbb
sahf
xchg
add
lea
js
scas
sbb
cmp
roll
push
into
jecxz
xchg
sbb
mov
pop
fdivl
jmp
cli
ret
jmp
rolb
mov
pop
subl
sarb
add
dec
dec
jg
clc
rclb
call
out
int3
stos
jle
add
cmp
sbb
cmp
mov
adc
mov
shlb
push
sarb
pop
mov
xor
and
sbb
hlt
out
inc
cli
bound
into
xorb
cmpsl
rcll
movsb
mov
mov
roll
iret
popf
mov
sahf
je
clc
cli
movsl
pushl
inc
pop
not
push
idiv
mov
cld
jle
jb
testb
stos
testl
loope
into
dec
mov
add
push
inc
cmp
sub
mov
sahf
fwait
cmp
mov
inc
call
pop
adc
cmpsb
imul
sarl
sahf
jb
aam
cs
hlt
icebp
dec
mov
out
lds
or
fs
pop
pop
mov
cmp
lret
loope
lock
mov
cmp
push
adc
inc
outsb
dec
push
insl
fs
adc
cltd
pop
test
jle
or
adc
popf
push
gs
aas
jmp
dec
pop
dec
mov
pop
push
scas
xchg
dec
push
int3
or
sub
inc
dec
add
jge
xchg
out
icebp
inc
shlb
mov
fwait
jne
xchg
xchg
pop
pusha
mov
cmpsb
mov
jmp
and
shll
jbe
unpcklps
in
rorb
push
mov
mov
or
or
add
movsl
jbe
fdivrl
adc
jnp
fisttps
lea
push
fdivp
imulb
loope
inc
mov
jmp
mov
into
rorb
mov
repz
mov
lods
dec
jae
test
pop
inc
mov
add
mov
adc
rcll
jbe
sub
in
dec
ljmp
cmp
mov
sub
or
dec
xor
lds
mov
lcall
loope
add
out
pop
jo
icebp
push
dec
data16
int
dec
cli
shrl
or
adc
dec
lods
cltd
pop
test
adc
in
stc
call
xchg
dec
xor
aas
inc
out
mov
mov
aaa
fwait
cli
sbb
aas
sti
push
add
adc
pop
stos
mov
mov
in
sub
jbe
sbb
or
roll
jg
xor
lea
icebp
xor
pushf
cltd
or
loopne
push
xor
xchg
pusha
sub
or
jmp
dec
adc
cli
add
fisubs
clc
pusha
stos
ja
lods
rolb
jnp
gs
xchg
sub
push
lcall
je
aas
push
adc
cmp
add
sti
pop
jne
or
pop
fnstenv
sub
dec
mov
mov
fs
xchg
jg
js
popa
xchg
test
mov
pop
inc
lock
xchg
shlb
mov
shl
adc
add
push
mov
or
mov
sbb
mov
mov
in
sub
cmpsl
xchg
mov
cltd
popa
hlt
pop
jo
sbbl
xor
subb
loop
mov
add
push
and
call
push
jg
bound
ja
cmpsl
movsb
in
test
mov
mov
mov
pop
insb
out
push
into
pop
pop
jecxz
add
jle
hlt
or
cmp
outsb
mov
mov
cmp
pop
pop
rclb
lods
test
loop
mov
add
popa
jne
mov
mov
sbb
inc
fildl
dec
clc
sbb
ljmp
jmp
les
ret
inc
std
sub
xor
lea
clc
mov
shrb
std
sub
adc
out
mov
or
inc
sub
or
pusha
fiaddl
fsubl
xchg
xchg
in
xchg
xlat
aam
out
xlat
cltd
mov
and
mov
pop
xor
out
fmuls
jl
xchg
sbb
and
movsl
loopne
pop
pop
fsubrl
orl
jo
or
cld
call
adc
das
es
enter
in
shrb
outsb
pmullw
cld
mov
pop
jg
inc
aaa
sbb
scas
pop
adc
mov
sbb
loope
out
and
lcall
push
mov
and
push
movb
das
mov
dec
inc
add
fildl
pop
adc
data16
sbb
sbb
mov
jno
ss
cs
test
mov
or
and
mov
lds
push
addb
jle
jb
addr16
push
pop
int
aaa
mov
ds
inc
mov
inc
dec
pop
je
jl
add
test
test
cmc
fmull
and
lret
mov
aam
sahf
or
stos
add
clc
and
cmp
mov
xor
add
cmp
inc
enter
sub
jle
sbb
gs
inc
fs
jne
mov
dec
std
or
aam
daa
daa
ficomps
jno
movsb
fidivs
sub
fsts
adc
inc
imul
adc
pop
popf
decb
cwtl
add
lock
incb
shrb
xchg
dec
into
jo
push
fdivrs
fisubl
mov
les
add
stos
or
xor
lock
stos
pop
into
popa
inc
jb
aad
aaa
insl
and
xchg
das
pop
cmpsl
push
xchg
mov
add
sti
mov
enter
pop
cmpsl
icebp
insb
in
cs
add
into
js
jmp
xchg
ret
cli
rcl
mov
int
add
out
or
or
jb
jp
pushf
mov
fstpl
jp
cli
lret
into
jae
jns
mov
sbb
or
nop
xlat
aad
jbe
pop
dec
gs
mov
lret
sbbl
loopne
ret
fwait
std
xor
popf
gs
jmp
cli
icebp
adc
das
imull
mov
jmp
dec
imul
xchg
clc
ret
or
test
sti
mov
enter
imul
mov
cmp
ret
inc
push
or
fwait
aam
push
lock
scas
cs
add
and
icebp
push
mov
sbbl
mov
jecxz
and
lahf
and
cmc
push
xor
sub
cmpsl
inc
dec
fiadds
jle
ret
aaa
jbe
inc
or
and
dec
or
cltd
sbbb
mov
adcb
cld
ds
add
fmuls
add
cs
jge
push
cmp
ljmp
lods
dec
add
jbe
lea
sub
rcrb
dec
cltd
push
cs
stos
push
push
lahf
sarb
jle
out
jle
jg
sub
icebp
rorl
pop
imul
fidivrl
mov
jecxz
test
rclb
rorl
gs
mov
mov
fmull
cld
push
bswap
adc
jle
das
and
adc
xor
aad
sub
shlb
clc
sbbb
or
les
cltd
jmp
rcl
mov
cmp
push
and
cmpsl
and
push
loope
enter
lock
lods
cmp
cmp
rcrl
cli
fwait
add
push
repnz
fdivrs
push
push
inc
add
outsl
nop
stc
adc
mov
push
add
mov
in
ljmp
rcr
out
lcall
std
les
out
mov
mov
rolb
add
mov
inc
insl
adc
push
jg
add
mov
add
call
out
pushf
mov
sbb
jmp
pushf
cmp
fwait
pusha
xchg
pop
lods
call
mov
mov
xor
fsts
movzbl
pop
or
xchg
cld
imul
pop
or
ss
ficomps
cmp
push
int3
or
lea
dec
sub
push
lock
loope
cmp
sub
js
scas
jno
rcr
xchg
add
insb
in
jb
mov
mov
ror
or
shl
int3
mov
test
lods
inc
jno
adc
pop
fisubs
adc
xor
rcrb
xchg
stos
aam
mov
insb
ja
hlt
cmp
inc
ficoml
mov
dec
xor
xor
js
lds
mov
cmp
mov
mov
jmp
dec
mov
pop
loope
or
in
or
stos
jns
pop
mov
push
subb
sbb
sbb
repnz
fsubs
or
push
sahf
les
stc
enter
add
sub
mov
daa
lret
nop
inc
jns
jp
sbb
jo
lods
mov
cmpsl
pop
jo
into
adc
clc
into
insb
jp
cmpl
shrl
out
scas
subl
fs
fstps
popa
rcrl
or
std
rorb
in
pop
xlat
pop
xchg
jle,pt
test
push
sub
adc
mov
jbe
jnp
mov
std
hlt
loope
gs
xor
ljmp
and
ss
jne
rcrl
test
and
decb
adc
fsubr
incl
dec
movsl
push
xchg
jns
pop
stos
or
nop
mov
jg
daa
lods
test
mov
loope
push
fwait
pushf
scas
scas
ds
push
and
loope
mov
xchg
mov
mov
int3
xchg
mov
inc
addl
aad
ljmp
cmp
std
push
push
push
adc
cwtl
std
mov
pop
shlb
mov
icebp
mov
lcall
dec
clc
add
outsb
dec
negl
add
fsub
in
in
jnp
in
jne
jecxz
test
cmp
sbb
and
or
jle
jg
inc
clc
repnz
mov
mov
lret
add
push
fwait
and
xchg
mov
cmc
mov
xchg
mov
enter
mov
pop
cli
jg
add
fdivs
dec
loopne
dec
aas
pop
fcoml
jno
xor
add
xor
sahf
mov
dec
wrmsr
sbb
lds
int3
mov
add
int3
or
and
push
dec
lock
push
int3
lds
push
push
or
mov
or
jbe
and
cmp
and
or
push
add
sbb
cld
or
inc
lock
nop
mov
push
clc
inc
cmc
test
lahf
or
test
ljmp
outsl
mov
fadds
mov
out
lcall
popa
aam
loopne
mov
add
or
shlb
cltd
adc
xchg
inc
or
push
mov
mov
pop
repz
out
in
test
xchg
jl
outsb
icebp
push
jp
clc
mov
mov
outsb
sub
insl
sti
mov
xchg
mov
adc
outsl
daa
fnsave
gs
push
mov
std
hlt
mov
test
jne
mov
aam
add
mov
ret
dec
sbb
jmp
adc
jb
or
xchg
jp
inc
ret
jo
mov
add
xchg
xorb
or
fcomp
cld
outsl
push
test
add
xorl
push
xor
add
jbe
cmp
pop
mov
inc
jb
cld
dec
dec
ja
or
mov
cmp
ret
jg
add
push
aaa
lcall
ja
push
hlt
stos
test
push
fs
dec
jl
cmp
mov
pop
loopne
add
push
inc
pusha
inc
cmpsl
pop
lock
xchg
adc
inc
ficomps
lcall
js
bound
push
mov
dec
dec
orl
pop
aas
movsl
cmc
inc
mov
ret
test
mov
in
aaa
mov
insb
hlt
jb
popa
inc
outsb
cwtl
cmpb
add
jb
out
in
sub
pop
cld
fsubr
in
jmp
rorl
push
sub
jae
pop
mov
and
fwait
inc
movb
dec
shl
orl
xor
push
pop
pop
sarl
cmc
rorb
push
and
dec
dec
jecxz
jle
jnp
jp
sbb
andb
mov
lods
mov
test
cld
pop
je
push
stos
and
or
add
rcrl
jbe
push
inc
cmp
mov
sub
roll
adc
mov
dec
add
adc
ret
push
mov
dec
aad
dec
std
ja
shll
scas
add
inc
and
cltd
pop
incb
mov
sti
lea
subb
cmc
jbe
dec
add
sbb
xor
clc
xchg
es
insb
in
adc
outsb
rcll
sbb
adc
push
jae
mov
dec
and
dec
je
scas
mov
sbb
push
or
stos
xabort
icebp
in
lret
or
inc
bound
clc
cwtl
inc
add
xlat
inc
cld
adc
jl
mov
repz
jne
pushf
cmp
xchg
mov
jae
out
sahf
jge
lods
inc
pop
sub
xchg
fld1
loop
sbb
add
push
push
fiadds
jno
inc
aam
push
and
adc
jmp
xchg
jmp
pop
loope
mov
xlat
insl
pop
sbb
scas
mov
out
aaa
and
mov
mov
push
xor
mov
movsb
mov
mov
xchg
stos
mov
cld
cmpb
daa
sbb
popa
rcrb
push
call
adc
inc
or
sbb
adc
fs
rorl
loop
cltd
pop
loopne
negl
dec
popa
adcl
xor
dec
sbb
outsb
pop
jg
test
scas
add
push
pop
dec
imul
inc
repz
int
lcall
mov
or
fsubl
je
add
jmp
jae
sbbl
mov
cmp
ror
outsb
iret
data16
jp
test
pop
pop
lods
in
dec
push
pop
cmc
out
mov
mov
je
inc
sub
je
mov
push
es
fnstsw
cwtl
push
add
pop
sub
mov
outsl
les
nop
and
fidivs
aad
movsb
adc
mov
jne
push
out
test
mov
ret
mov
pop
sahf
add
lods
add
adc
test
dec
add
adc
pop
mov
hlt
cmp
fsubrl
notl
mov
push
push
pop
cmpsb
add
dec
mov
aaa
adc
xchg
mov
mov
adc
psllw
les
dec
mov
mov
sub
xchg
xchg
jecxz
ret
mov
dec
rolb
cmp
sbb
push
dec
add
mov
inc
mov
dec
jb
mov
pop
lret
pushf
pop
pop
test
in
imul
in
xchg
sbb
xchg
and
daa
sbb
jo
mov
sti
sbbb
lret
je
push
push
mov
mov
inc
jp
nop
je
push
mov
cmp
std
sbb
enter
add
pushf
adc
push
notb
pop
pusha
aad
push
xor
outsl
in
and
xchg
pop
xor
aam
test
push
decl
lret
loop
xchg
adc
test
fbstp
sbb
pop
test
pop
add
jbe
jl
jno
jge
xor
lock
cmp
adc
pop
push
mov
stos
sbb
push
out
add
std
pop
pop
mov
jmp
xor
inc
pop
dec
push
adc
in
mov
push
jle
jmp
int
mov
cli
add
aam
sub
inc
inc
xor
shl
xchg
push
fadds
lods
ljmp
pop
push
addr16
lods
test
aam
stc
sub
fisubs
popf
or
and
jmp
mov
movsb
lock
xchg
jge
inc
aam
lock
ljmp
faddp
repz
flds
in
jmp
mov
jbe
je
mov
or
adc
inc
adc
mov
cmp
sbb
lret
mov
sbb
push
loopne
lcall
sarl
fcom
call
dec
addr16
popf
clc
loopne
dec
jnp
test
and
mov
push
loope
popa
dec
and
aam
inc
add
push
push
push
cli
cmp
sbb
stos
add
mov
inc
and
outsl
test
xor
lahf
cli
loop
loop
mov
jnp
inc
push
mov
mov
sbb
jo
jl
push
xor
orl
sub
movsl
and
inc
lret
jb
push
sbb
imul
ss
cmc
xor
rcr
jns
test
enter
mov
jmp
mov
lea
and
ret
sbb
cmp
xchg
cli
fsubrl
push
adc
and
aam
add
sti
outsb
inc
and
adc
test
cmc
sbb
adc
dec
jecxz
nop
pop
mov
and
sbb
repz
ss
or
clc
inc
xor
call
insl
or
rorb
cli
mov
repz
sahf
or
mov
pusha
icebp
sub
jmp
sahf
inc
scas
push
pop
pop
rcll
dec
pop
outsl
jecxz
les
xor
mov
mov
dec
cmp
add
mov
adc
shlb
jl
pushf
lcall
mov
push
mov
or
scas
sahf
sub
stc
cld
sub
pop
cli
inc
lcall
jns
lea
and
and
les
adc
mov
pop
mov
and
and
jl
add
xchg
les
aam
leave
les
std
sbb
out
mov
out
rcl
out
dec
jl
xchg
sti
mov
push
lcall
xchg
and
ret
or
cld
adc
aad
dec
ljmp
jo
sub
sub
es
mov
fs
and
rcrb
pusha
jp
ror
pop
xchg
loop
mov
and
dec
and
fwait
out
mov
dec
pop
ret
sbb
mov
inc
daa
xchg
mov
xchg
rcrb
mov
xorl
ljmp
jns
adc
loope
mov
xchg
push
dec
pushw
add
mov
testl
sti
push
aas
jl
dec
xor
cmp
sub
iret
xorb
sub
aas
sbb
inc
call
mov
outsl
inc
pop
mov
stos
das
out
ret
rcll
rol
lret
in
adc
mov
cmpsb
jnp
pushf
jg
divl
mov
jno
xchg
adc
adc
sbb
push
js
fs
insb
cld
or
int
jne
dec
inc
gs
cmpsb
es
inc
fsubrs
std
sub
dec
lock
fiadds
mov
clc
cmp
sarl
or
pop
mov
pop
sahf
fcom
pop
cmpsl
adc
dec
and
and
fcmovbe
xor
or
fldl
jae
arpl
insl
cmc
mov
adc
dec
stc
sub
cs
insl
jge
fnsave
xchg
and
push
adc
sbb
add
and
jge
idivl
xchg
sbb
sti
inc
inc
or
lock
cltd
xor
pushf
jmp
aas
push
movsb
fadds
icebp
jnp
sarl
iret
xlat
lcall
std
jge
push
das
out
mov
es
xor
xor
and
jne
mov
jecxz
mov
or
xchg
hlt
sbb
int3
inc
pop
scas
mov
fprem
jg
dec
push
push
pop
inc
nop
icebp
sbb
sbb
mov
xchg
inc
push
das
fcmovb
mov
add
xor
imul
in
add
jge
aam
xchg
div
shlb
dec
pop
push
das
or
ret
add
les
dec
mov
iret
lods
pop
adc
and
adc
lods
cmc
jo
xchg
sarb
mov
xchg
xlat
xor
mov
mov
mov
lock
cmpsb
xor
mov
mov
cmp
pop
jo
push
rcr
pusha
mov
sub
call
pop
pop
adcl
in
mov
or
fwait
or
inc
scas
mov
mov
adc
add
leave
mov
aas
xlat
pop
pop
pop
xor
jne
mov
aaa
dec
fucomp
sbb
into
inc
inc
sbb
pop
xchg
movsl
mov
daa
and
insl
mov
cwtl
sub
adc
cwtl
mov
outsl
div
in
movsb
add
dec
dec
es
daa
mov
ret
stos
out
pop
pusha
xchg
adc
and
addl
sgdtl
xchg
sub
sahf
jle
inc
or
daa
xchg
sbb
jo
sbbl
inc
cmpsl
or
pop
flds
mov
or
push
loopne
movsl
mov
mov
stc
movsl
mov
test
leave
push
fildll
mov
clc
ds
add
addb
sbbl
mov
pop
and
insl
aad
popa
xor
adc
lea
jmp
gs
lock
sbb
or
add
fdivrl
addr16
pusha
mov
xchg
adc
adc
cmp
inc
cwtl
and
jns,pt
cltd
and
das
test
mov
cmp
test
fs
xchg
sub
push
loop
cltd
mov
mov
dec
mov
les
daa
jb
es
cmpsl
xlat
aam
cltd
stc
mov
xor
mov
adcl
lret
cli
shll
jge
sub
ret
into
push
add
lock
xor
lret
movsb
mov
insl
pop
sbb
ss
add
ret
xchg
adc
aad
lret
sub
jae
sbb
ffreep
or
cmp
aad
xchg
shrd
fs
pop
test
mov
jne,pn
add
jo
aaa
mov
cmpb
sbb
pop
lds
xchg
add
cli
add
shr
pop
add
cld
cmc
jns
xchg
dec
pop
js
sub
or
out
inc
dec
cmc
ljmp
push
subl
mov
ret
push
push
add
movsb
ja
inc
mulb
movsl
or
pop
out
xchg
dec
cs
outsb
xlat
js
jae
lahf
push
andb
and
push
aas
and
sbb
mov
xlat
or
andb
addr16
xchg
sahf
push
cmp
adc
lcall
lds
sub
jle
lds
mov
clc
mov
push
jl
add
sub
jne
mov
test
or
push
or
sbb
movsb
js
mov
cmp
lahf
mov
sbb
aad
cmpsb
add
stos
jns
movsl
test
dec
or
cmp
lret
mov
inc
insb
repnz
lock
rcl
insb
mov
pop
mov
cmp
or
scas
mov
mov
xchg
mov
pop
ret
dec
push
int3
std
int
dec
les
mov
cmpsl
imul
add
add
je
loopne
cmp
mov
ret
adc
and
sub
daa
inc
loopne
sbb
icebp
and
fsts
lret
int
insb
sbb
rorl
fisttps
sub
jp
mov
sarl
das
cmp
mov
adc
add
loope
sbb
sub
push
loop
cmp
cld
pop
mov
insb
push
aas
int
roll
adc
ss
ljmp
adc
pop
cmp
lea
fisubrs
insl
outsl
mov
cmp
jg
cli
add
cmpsl
mov
jns
lret
pop
pop
mov
mov
cmp
mov
mov
roll
mov
xor
inc
mov
popf
lcall
dec
int3
push
lock
jno
push
rcl
sub
sbb
dec
add
or
aam
mov
pushf
adc
loop
rdtsc
add
stos
jbe
adc
aaa
dec
push
pop
insl
cwtl
dec
jmp
xlat
loopne
sbb
bound
push
rorl
dec
push
add
pop
pop
lret
and
out
in
idivl
xchg
dec
fiaddl
cmc
jge
aam
or
inc
sbb
mov
add
sub
cltd
add
sbb
xlat
mov
sub
lcall
test
addl
pop
rolb
pop
mov
xor
jb
mov
shll
subb
icebp
mov
mov
mov
mov
insl
sbb
das
movsl
hlt
inc
lds
cmp
adc
cmp
aad
or
mov
inc
mov
sub
sbb
into
xchg
pop
mov
sub
fimull
test
or
sbb
push
arpl
int
aam
lret
in
pushf
cltd
cmp
lods
xchg
jo
or
or
mov
outsb
inc
pop
mov
pop
push
ss
aas
pop
test
dec
xchg
and
pop
inc
sub
dec
test
dec
into
sub
pop
xchg
sub
cmp
xor
std
mov
daa
add
out
pop
ficoms
addr16
in
icebp
inc
mov
hlt
mov
and
scas
xor
test
stos
test
xor
sub
xchg
mov
or
and
imulb
test
mov
cli
leave
imul
lds
pop
dec
cld
rorl
out
fistps
in
outsl
sub
sub
aam
add
mov
lock
aas
pop
out
inc
mov
divps
adc
rol
sbb
or
and
dec
inc
dec
pop
sbb
movsb
xchg
daa
pop
hlt
adc
jb
inc
jae
mov
out
loopne
addr16
mov
cmpsb
pop
xchg
xchg
cmp
fistps
lock
pop
adc
pusha
or
mov
mov
sets
bound
jl
fdivrs
cmp
daa
xlat
cmp
in
or
or
and
xor
cmpsb
xor
cmp
aas
insl
popf
mov
sbb
pop
and
and
adcl
mov
adc
push
dec
outsb
adc
cmp
mov
or
and
scas
sub
test
lods
nop
push
fistl
bound
rolb
rcl
add
xlat
rcrl
std
sbbl
lods
into
daa
xor
add
mov
mov
mov
into
test
inc
inc
leave
shl
clc
pop
pop
cmp
mov
push
aam
mov
sbb
push
jg
adc
or
sub
xor
pop
popa
rcr
ret
mov
scas
idiv
jne
scas
cli
movsl
pusha
arpl
enter
mov
pop
sub
sub
lods
stos
cmc
test
rclb
lods
clc
pop
jmp
jge
sbb
fisubs
jb
cltd
mov
sbb
movsl
cmc
jl
je
dec
rcrb
push
outsb
fsqrt
cmpsb
enter
cmp
cmp
adc
mov
push
clc
sub
push
popf
in
outsb
fdiv
aaa
outsb
mov
adcb
inc
out
out
push
mov
mov
daa
scas
or
adc
mov
out
andw
jmp
push
mov
int3
adc
sahf
pop
lcall
mov
mov
push
inc
dec
mov
call
cmp
xorl
mov
lods
bound
insl
mov
imul
pop
popf
lods
adc
pop
xor
mov
push
call
in
mull
mov
outsl
repz
lea
leave
sbb
mov
fildll
rcr
sub
movsb
mov
test
lcall
les
jo
lahf
push
ljmp
dec
les
mov
icebp
mov
movsb
sub
in
xchg
pop
cmpl
sahf
push
cld
dec
sti
sub
mov
add
push
jb
mov
loop
bound
imul
mov
adc
add
lahf
pop
cmpsl
push
sub
push
adc
popa
add
dec
jne
push
subl
int
mov
adc
xchg
pop
aas
jecxz
orl
icebp
clc
sub
ljmp
cmpb
fidivrl
lods
lds
nop
mulb
cmp
push
sbb
push
clc
jg
enter
lcall
or
sub
push
xor
xor
enter
in
arpl
and
mov
cwtl
cmp
icebp
xchg
out
push
sbb
aas
pusha
bound
test
mov
add
jl
pushf
test
cmp
pop
ret
mov
mov
js
ffree
dec
repz
mov
ljmp
movb
add
daa
sub
cmp
pop
jbe
shr
es
xchg
icebp
mov
inc
stos
xchg
stc
add
or
mov
ffree
mov
or
and
add
or
mov
mull
repnz
std
or
imul
mov
push
mov
or
daa
mov
in
lods
cli
sbb
pop
jecxz
xor
sub
jno
xchg
adc
mov
push
xor
pusha
iret
hlt
aam
mov
imul
rorl
mov
add
dec
dec
ljmp
xchg
push
adc
cmp
mov
daa
lret
cmp
mov
outsl
jmp
mov
sub
divl
fisttpl
jcxz
jmp
mov
lock
pop
out
sub
or
or
pop
dec
lods
mov
test
cmp
sub
pop
in
pop
hlt
js
adc
insl
in
aad
mov
dec
jl
cmpsl
aaa
sbb
les
pop
pusha
repnz
lahf
dec
cs
cmp
scas
adc
add
cs
mov
std
cmp
mov
pop
push
pop
xor
jo
iret
sub
pop
adc
shlb
addr16
pop
scas
xor
jae
ljmp
cmp
xor
negl
imulb
out
lcall
inc
xchg
stos
test
xor
jl
cwtl
ljmp
jmp
hlt
scas
lret
clc
push
ret
adc
mov
adc
or
dec
fcompl
push
outsl
jbe
xchg
movd
fldcw
sahf
shl
pop
jo
out
clc
cltd
mov
stos
nop
adc
xor
dec
mov
sar
cli
or
mov
pop
pop
or
mov
fwait
mov
and
clc
shlb
mull
add
das
mov
push
test
rcrb
and
js
mov
movsb
dec
dec
xor
hlt
aaa
fdivrp
movl
outsb
jo
xor
cmc
nop
mov
push
aas
mov
adc
adc
xor
aad
sbb
push
pop
xchg
je
and
cmp
add
shl
clc
hlt
ret
pop
cmc
in
dec
test
mov
add
in
ja
stos
lods
dec
shll
and
cld
orl
ret
xchg
pop
movsl
ud0
lcall
sbb
dec
jge
or
adc
leave
or
inc
dec
or
dec
inc
cmp
push
push
xchg
mov
movsl
adc
jmp
push
push
call
fstpt
pop
mov
mov
nop
sub
hlt
popa
xchg
clc
pop
mov
dec
or
mov
adc
jmp
add
push
jmp
aas
inc
xor
push
cmpsl
das
sbb
adc
enter
cmpsl
jne
pop
push
adc
jg
test
adc
pop
sbb
lock
stos
nop
jb
js
ret
inc
cmpsl
push
sub
cmp
xlat
call
push
ljmp
mov
bound
repnz
jecxz
in
mov
pop
insl
sub
dec
jbe
mov
addr16
scas
add
pop
fwait
push
cmp
and
jo
adc
add
loopne
jmp
ds
pushf
dec
add
add
and
inc
bound
aaa
lret
push
pop
addr16
or
loope
jo
out
mov
or
push
inc
xor
call
mulb
dec
jecxz
fisubl
or
sbb
inc
rorl
sub
lret
aam
fisttps
icebp
sub
mov
add
and
mov
in
data16
scas
fnsave
stos
sbb
xchg
icebp
pop
sub
call
shrb
bound
lcall
fst
dec
sbbb
cmp
pop
test
fdiv
inc
subl
in
shrb
push
shll
mov
fmull
adc
sub
add
fcoml
jne
shl
movsb
mov
fcmovb
dec
xor
mov
push
mov
sub
and
jb
sbb
xor
push
test
aaa
imul
mov
lods
sub
incb
clc
or
movsb
out
ret
adc
sbb
xorl
xor
and
sti
push
movsb
repz
lahf
lret
xchg
cmpsb
pop
int
cmp
or
adc
outsl
pop
loope
add
xchg
push
jecxz
mov
ss
sub
cmpsl
lock
mov
or
out
popf
push
mov
mov
mov
push
and
lods
inc
mov
xor
push
xor
cmp
lret
lods
push
movsb
cmp
lods
mov
lcall
imul
mov
mov
xchg
jns
ret
shrb
mov
mov
xchg
mov
xorl
loope
pushf
jl
jo
pop
dec
fadd
xchg
xor
loopne
loopne
mov
sahf
dec
cmp
fs
pop
movsb
movsl
aam
xor
pop
xor
movsl
fiaddl
and
pushf
adc
hlt
sbb
fs
aas
call
test
hlt
mov
inc
hlt
cmc
cmp
xchg
jg
repnz
and
xor
mov
les
inc
dec
pushf
data16
adc
ljmp
lahf
fistpll
aas
cs
adc
mov
mov
adc
cs
loop
inc
fisubrs
jbe
repz
lods
test
xchg
stos
or
mov
pop
sbb
mov
fnstenv
xchg
sahf
cmpsl
sti
dec
out
adc
push
std
add
adc
pop
inc
jl
sahf
adc
sarl
inc
ss
mov
and
push
movlhps
jb
mov
int
arpl
addr16
loop,pt
mov
jb
cli
hlt
pop
jne
idivb
cli
popf
add
subb
stos
xor
mov
sbb
or
insb
mov
pusha
test
dec
push
mov
sahf
inc
push
cmp
sar
cmp
and
hlt
push
cld
cmp
xchg
inc
cmp
push
cmp
int
push
add
mov
jp
dec
cmpsl
cltd
lret
neg
mov
adc
rcll
repnz
dec
cli
xor
and
cmc
adc
cwtl
sub
mov
fcmovnb
mov
ret
into
pop
push
scas
ss
xor
cli
sbb
add
nop
push
xchg
fmulp
inc
sub
jb
ret
mov
and
sbb
push
jnp
test
cmc
adc
lret
lods
stc
lock
out
fs
clc
add
and
and
xchg
fwait
pushf
add
xor
dec
pop
icebp
add
pop
fcomps
push
lock
mov
clc
clc
lods
fldcw
test
and
rorb
adc
mov
sub
pop
xor
mov
insb
lds
mov
std
xor
sub
cmp
das
xchg
clc
pop
cltd
pop
xchg
push
mov
rolb
pusha
or
sub
imul
adc
shr
xchg
rorb
ret
xchg
loopne
cmpb
mov
push
ljmp
pop
pusha
cli
sub
lock
xor
daa
popa
sbbb
or
fdivrl
xor
ljmp
xchg
push
sahf
js,pn
or
cmp
shl
and
test
pop
pop
movsb
ljmp
add
mov
add
cli
jno
lods
mov
and
dec
mov
imul
mov
xchg
aaa
fst
mov
sbb
inc
mov
or
adc
dec
mov
push
and
das
inc
push
push
movsb
repnz
fisttpll
cs
push
mov
jo
sarl
sti
in
xor
add
xor
std
xlat
lds
xorb
xchg
pusha
cmpsl
mov
inc
loopne
dec
mov
mov
repz
lock
add
sub
shr
and
push
shlb
cwtl
int3
cmp
cwtl
jo
pop
push
push
mov
ret
into
mov
sub
int
mov
mov
mov
or
sbb
dec
fildll
imul
inc
push
popa
jg
test
adc
jle
push
lds
jo
ss
dec
sub
and
jo
jbe
sbbl
imul
xorb
es
push
das
movsl
mov
cwtl
leave
mov
sbb
add
mov
inc
add
mov
insl
and
cmp
sub
scas
nop
add
loope
pop
lea
push
lds
mov
sbb
fiaddl
mov
lods
sbbl
repz
popf
mov
mov
push
xchg
jp
dec
adc
stos
ret
xor
ljmp
ja
enter
push
and
movsl
pop
mov
xor
mov
jo
test
lock
mov
push
lds
push
or
in
mov
stc
jnp
cmp
std
pop
test
adc
push
and
mov
and
es
cmp
ret
aas
lock
in
sub
jle
pop
xchg
adc
pop
test
cmpsl
lahf
cmp
ljmp
jno
sahf
outsb
adc
jecxz
enter
out
add
dec
leave
cmp
push
adc
mov
push
push
das
fs
jo
fstpl
adc
mov
xchg
push
pop
mov
decl
fstpt
ret
movsb
in
daa
pop
push
mov
adc
pop
inc
jb
ficoms
mov
and
sbb
fs
rol
adc
pop
xor
out
mov
add
pop
daa
insb
push
cli
aam
daa
mov
testb
add
das
daa
fld
incl
pusha
sub
jecxz
add
xor
mov
sub
fdivrs
lret
bound
push
sbb
enter
test
inc
inc
push
jg
shll
scas
stos
sbb
push
sti
sub
lods
dec
push
adc
cld
repz
add
mov
inc
ficoml
sub
std
push
add
push
add
dec
cs
mov
jl
hlt
clc
xchg
jns
subb
or
prefetch
add
orb
icebp
adc
or
xor
or
clc
cmc
add
mov
mov
mov
and
fimull
xor
cwtl
shlb
js
in
pop
idivb
mov
pop
jmp
repz
add
or
sbb
ljmp
dec
jle
lods
mov
cmp
sbb
xchg
cmp
xor
lds
add
nop
hlt
je,pn
mov
inc
cs
or
push
sub
or
xor
mov
xchg
jl
hlt
xchg
dec
notb
dec
jp
add
in
add
mov
lret
hlt
cli
mov
andb
mov
mov
dec
imulb
mov
and
mov
aam
imul
ds
xor
rcl
std
mov
mov
movsl
stos
or
inc
mov
test
or
xor
xor
dec
and
dec
add
xor
pop
mov
bound
popw
divb
or
jno
mov
mov
pop
aad
xor
rclb
adc
xchg
adc
mov
pop
shll
xor
int3
push
jecxz
mov
cmp
xor
hlt
inc
fildl
clc
test
clc
out
pushf
sub
xor
mov
push
mov
adc
lcall
add
sahf
shl
mov
and
std
push
xor
mov
cmp
dec
mov
xlat
jg
jne
mov
jnp
mov
inc
pop
pop
or
sbb
fistpll
mov
mov
popa
push
jne
xchg
or
or
jmp
rolb
mov
pop
sbb
xor
push
aas
nop
dec
in
add
addr16
aam
je
mov
and
pop
add
inc
and
jne
mov
inc
rclb
pop
loopne
sub
cmp
popa
stos
mov
jle
push
cld
int3
sbb
sub
aaa
pop
mov
xchg
push
hlt
int3
mov
jbe
mov
mov
dec
faddl
xchg
cmc
and
js
mov
mov
insl
mov
mov
data16
xchg
out
dec
dec
call
pushf
xchg
out
clc
rcrb
outsl
lods
dec
adc
rorb
and
inc
rol
xchg
ss
prefetch
addb
mulb
adc
and
sbb
mov
and
inc
imul
jo
mov
aas
lcall
je
push
pop
clc
pop
lock
mov
iret
xchg
mov
pop
imul
mov
cmovae
mov
push
aad
jg
xor
repz
or
adc
addr16
cmc
dec
inc
mov
add
add
outsb
cmp
repnz
into
fwait
and
pop
les
lock
jmpw
scas
mov
aam
push
xchg
inc
sbb
add
xlat
dec
push
das
cs
mov
insl
add
and
pop
pop
shlb
popa
lods
fdivrs
jno
push
jne
repnz
mov
add
sbb
push
sbb
jle
loop
test
adc
xor
xrelease
cs
mov
mov
ficomps
orb
dec
cmp
arpl
lock
adc
xchg
adc
repz
and
fs
or
js
cmp
dec
ret
add
xchg
push
mov
pop
xchg
insb
rcrb
lea
xchg
fidivs
mov
push
cld
test
mov
test
xchg
testl
test
ret
sbb
pop
mov
mov
add
shrb
repnz
sbb
pop
fistpll
addb
sub
adcl
cld
in
inc
dec
out
sbbb
movsb
in
mov
add
fdivrl
fisubl
xchg
leave
emms
push
or
inc
xlat
popa
js
mov
shrl
lcall
mov
or
push
or
outsb
dec
fisubrs
jno
mov
add
sar
lock
repz
add
add
xchg
sub
iret
pop
xor
hlt
test
xlat
mov
sub
ljmp
mov
push
jo
sti
lds
stos
mov
ljmp
std
pop
push
inc
jmp
andb
ds
jno
ja
icebp
negb
loope
lock
xchg
std
or
cmp
inc
mov
pop
inc
mov
mov
aam
cmc
mov
mov
mov
jne
mov
pushf
cmp
shlb
jle
jp
sbb
loop
push
decl
sbb
cmpsl
push
pop
add
xor
out
cli
inc
lret
mov
mov
pop
ds
ret
les
sbb
cmp
js
sub
jo
dec
adc
pusha
pop
pop
add
mov
dec
inc
xor
aam
mov
repz
or
dec
add
aam
fstpl
daa
cmp
cli
bound
stos
xor
rcrb
idivl
sub
xchg
mov
incl
mov
lock
in
test
enter
mov
sarl
sub
pop
push
mov
adc
pop
adc
push
jge
adc
scas
sub
data16
jb
or
adc
enter
insl
push
outsl
mov
out
subb
and
insl
sbb
cld
cmp
push
movsl
xchg
pop
mov
sub
loopne
or
or
sbb
cmp
sbb
loopne
sub
adc
mov
cmp
xchg
inc
mov
negl
jne
fwait
xchg
loope
int3
sbb
push
into
jp
ror
jno
mov
cld
cs
jecxz
outsb
pop
nop
ljmp
mov
test
pop
pop
stos
mov
mov
mov
and
test
mov
push
ja
mov
aad
rclb
sbb
sub
icebp
jb
xor
and
je
dec
ret
jl
and
dec
loop
fwait
out
sarb
scas
push
push
loop
pop
negl
inc
sub
ljmp
jne
or
aaa
jl
pop
cmp
sub
sti
loope
or
cmp
or
leave
mov
sbbb
rcll
into
add
pusha
xchg
lret
adc
xor
pop
sub
fnstsw
fcmovu
dec
push
js
loop
add
jnp
jle
push
in
repnz
sahf
fsubrs
add
insb
call
mov
sbb
dec
imul
push
or
inc
in
faddl
into
mov
cs
sti
lahf
push
nop
add
push
or
pop
fs
cmp
dec
sbb
cmc
cmpb
ss
ja
push
or
hlt
cmp
js
xchg
push
fisttpll
sarl
add
js
cwtl
popa
xor
aad
jle
inc
stos
fs
mov
fs
mov
push
js
jp
xor
cltd
ret
bound
dec
push
xchg
inc
pop
mov
dec
imul
sbb
mov
cltd
jmp
lods
cmp
jo
push
xchg
enter
mov
cltd
push
fsubrs
dec
outsb
das
fnstsw
adc
cli
lods
daa
popa
adc
and
xor
inc
rorb
jae
rolb
shr
movsb
or
mov
addr16
dec
incb
adc
push
mov
nop
mov
incl
aas
les
scas
inc
sub
mov
add
push
sub
movsb
push
andb
ds
dec
sub
clc
mov
push
pop
ja
mov
dec
xor
pop
into
dec
insl
and
daa
mov
push
lock
sbb
fcmove
xlat
push
punpcklbw
inc
cltd
mov
and
enter
mov
lds
sbb
jmp
pusha
add
mov
icebp
push
inc
jo
test
inc
dec
inc
cmpsb
in
sti
and
push
inc
adc
imul
inc
sub
inc
jbe
adc
push
add
adc
test
movsl
popf
xchg
and
or
sub
lds
xchg
in
sub
push
sub
push
xchg
out
int
sub
popa
and
repnz
inc
and
adc
sbb
sub
pop
mov
add
xor
inc
and
das
test
fwait
xchg
mov
mov
loopne
xor
xchg
ds
adc
fldl
inc
or
push
imul
shrl
popf
cmp
jmp
push
aaa
movsl
mov
push
pop
push
je
ja
clc
add
xchg
lock
mov
loop
sub
je
dec
push
and
mov
inc
cs
mov
les
cltd
lock
cld
ja
mul
jg
hlt
or
sbb
into
inc
cld
xchg
or
inc
cmp
pop
cli
call
sti
and
mov
divb
pop
jge
repz
pop
cs
xlat
aam
adc
test
pusha
clc
ret
jg
and
cli
iret
shlb
mov
pop
inc
push
mov
leave
outsb
call
dec
scas
rclb
fsubl
insl
xlat
cwtl
and
dec
sub
xor
out
sbb
or
out
mov
sbb
lahf
inc
stos
sbb
shl
movl
data16
and
or
push
jo
adc
rcr
test
and
les
inc
pop
cmpsl
les
scas
enterw
hlt
sbb
and
sub
mov
mov
pop
js
enter
mov
in
bound
inc
ss
dec
popw
cmpl
lock
mov
ja
mov
add
aad
push
pop
jp
fldcw
sahf
rcl
or
xchg
lods
ret
jecxz
mov
push
sub
push
inc
call
fistl
cld
push
mov
jbe
pop
xor
sbb
test
jecxz
mov
mov
div
enter
out
lcall
inc
int
cli
call
das
aaa
add
scas
out
test
lcall
xor
jle
xchg
roll
lds
sbb
neg
inc
push
xlat
xchg
inc
nop
mov
fmull
ja
ret
dec
dec
push
and
xlat
sar
inc
sbb
cmpsl
push
insb
sbb
or
push
pop
rcrb
pop
mov
xor
add
pop
xlat
sbb
test
jp
filds
ds
mov
adcb
pop
jns
add
or
popa
xchg
cs
add
test
aam
mov
jecxz
pop
add
nop
lods
nop
fcomi
fidivl
push
fimull
adc
dec
fsub
push
loopne
inc
xor
jo
mov
sbb
arpl
sub
or
lahf
xchg
xchg
xlat
out
nop
pop
mov
jb
add
ret
std
test
push
add
and
movsl
mov
pop
loop
lods
push
dec
jge
mov
mov
lea
xor
and
fucomp
rorb
out
gs
movsl
dec
sub
movsl
push
test
sub
pop
or
stc
mov
sbb
shlb
ljmp
cmp
jle
and
sti
nop
sbb
into
or
add
sub
push
xchg
in
inc
ljmp
aam
out
sbb
pop
jecxz
xchg
and
cmp
call
call
mov
push
lods
shr
call
into
and
mov
ret
add
push
fimuls
mov
mov
or
movsl
aad
push
xor
sbb
ret
imul
scas
pop
mov
fisubrl
push
outsl
insl
mov
insl
push
pop
in
jno
mov
shll
jno
add
inc
cmp
lcall
out
xchg
dec
xor
cmp
rorb
jl,pn
loopne
stos
ss
adc
cwtl
sahf
mov
jbe
movsb
popf
jo
or
dec
sbb
shrl
adc
icebp
dec
jmp
in
shll
out
adcb
inc
inc
jecxz
cli
out
inc
ret
jnp
push
or
add
insb
jns
add
movsl
and
mov
loop
and
adc
dec
push
mov
lcall
repnz
jnp
mov
jns
out
pop
rolb
dec
mov
pop
les
and
dec
cmp
int3
or
jle
xor
adc
add
cmp
or
adc
xchg
jmp
bound
xchg
add
in
cld
les
dec
test
fistps
das
push
push
add
push
jg
out
pop
ret
lret
mov
or
or
or
dec
cmc
adc
adc
xor
lock
xlat
mov
push
adc
sahf
insb
sub
xor
lock
arpl
adc
ret
imul
rol
sub
mov
sahf
mov
xchg
aad
stc
push
idiv
aad
aam
dec
imul
mov
scas
pop
icebp
mov
ljmp
call
pop
push
lock
or
or
dec
loopne
call
xor
xorl
leave
pop
jo
lds
cmc
add
xor
mov
aas
or
pop
sub
mov
test
scas
cmp
sbb
rcll
popa
not
ljmp
add
adc
mov
test
ljmp
dec
mov
inc
xor
cmp
js
or
sti
ret
into
pop
sub
jb
jmp
push
mov
pusha
call
xchg
rorb
pop
je
xacquire
fnstsw
aas
sbb
fcomip
xor
fs
adc
jae
mov
lret
mov
movsb
outsl
adc
mov
and
push
jle
or
sub
and
mov
test
repz
jo
jmp
mov
mov
adc
cmp
add
loope
sbb
insl
mull
add
movsb
lds
mov
bound
xor
fistpl
clc
orl
cmp
mov
add
push
in
inc
mov
xor
lods
popa
leave
roll
stos
jge
test
mov
loop
cltd
dec
pop
call
ret
or
into
jp
push
cmp
in
stc
lret
pusha
subl
lahf
scas
inc
add
mov
mov
dec
int3
add
jbe
sbb
xchg
add
out
cwtl
ret
mulb
inc
cmp
mov
addr16
pop
inc
pop
dec
je
int3
in
ljmp
pop
push
mov
addb
inc
xor
leave
loopne
xchg
adc
sub
push
jns
and
enter
inc
ret
std
mov
or
mov
fstpt
call
pop
scas
dec
cmp
push
sahf
call
jmp
sbb
xchg
inc
mov
test
mov
fiadds
cmp
adc
sbb
push
ret
shl
clc
xorb
and
insb
loopne
xor
sahf
inc
clc
sub
xor
fsubs
and
in
jae
or
std
ret
mov
enter
loopne
ljmp
push
fdivrp
jp
stc
push
cmp
mov
push
pop
jp
and
jl
jmp
mov
cld
add
xor
and
daa
addr16
xchg
push
cmp
ja
lods
pushf
mov
push
lahf
inc
and
into
xor
adc
lea
int
add
movsl
out
loope
mulb
mov
jp
dec
mov
test
sub
cmp
sbb
shrb
pop
and
imul
outsb
aam
test
into
or
dec
clc
lds
pop
push
xor
sub
clc
cmpsb
out
in
cld
out
lock
sahf
in
push
js
mov
xchg
bswap
je
ss
test
jp
inc
outsl
inc
inc
jl
and
add
inc
inc
sub
call
sbb
add
rcll
stos
test
push
dec
imul
push
pop
mov
dec
adc
mov
das
mov
dec
call
movsb
dec
lods
cmp
add
outsb
test
ret
lock
mov
lock
rcrb
mov
mov
cs
fimull
xchg
mov
movsl
add
out
pop
mov
sbb
lods
inc
or
jmp
cmc
mov
ret
stc
es
int3
daa
xchg
xor
or
add
dec
movsl
jo
dec
stos
xchg
popf
sbb
shrb
inc
movsl
sub
mov
cmp
fidivrl
jp
pop
out
jl
das
nop
and
xchg
lds
add
xchg
cmpsb
test
add
ret
jge
adc
xor
and
out
inc
frstor
mov
sub
and
add
mov
mov
loop
jns
adc
adc
jecxz
popl
mov
pop
mov
xlat
pop
mov
or
hlt
jp
aaa
mov
icebp
inc
cli
xor
jp
aaa
push
pusha
push
sbb
jg
add
add
sbb
lds
or
rolb
loope
aaa
adc
pop
ljmp
inc
cmp
cmpb
jne
fcmovnu
lcall
lahf
pop
enter
hlt
xor
and
mov
lods
repz
cmp
iret
pop
add
ret
push
pop
inc
shlb
mov
in
scas
cltd
pop
cmpl
dec
and
mov
mov
pop
and
jp
sti
xor
clc
xor
fwait
jo
mov
cmp
fs
mov
cmp
cmp
xor
loop
in
push
repz
pop
jle
or
and
movsl
xchg
fmull
movsb
mov
outsl
mov
bound
sub
xor
cmp
mov
xor
pop
lods
sbb
pop
push
jle
or
pop
jo
inc
pop
adc
mov
or
ss
xor
movsl
jbe
je
add
in
push
jl
and
cs
sarb
jmp
xor
xor
add
cmp
fiaddl
std
sub
sbb
aad
enter
ljmp
xchg
inc
add
es
xor
test
les
mov
xor
gs
cli
add
adc
adc
je
dec
insl
adc
bound
aas
mov
iret
hlt
out
pop
das
xchg
cmpb
shll
xor
popa
mov
and
push
mov
mov
ljmp
pcmpeqw
inc
mov
mov
rolb
pop
shll
popa
and
mov
push
push
add
lods
loope
jno
shll
sbb
push
cmp
and
imul
fimull
cli
adc
es
cli
rorb
rorl
sub
xlat
loop
test
dec
icebp
hlt
mov
aas
mov
pop
or
pop
js
call
clc
iret
cli
push
ss
add
mov
cmp
addr16
push
popa
sub
addb
aas
and
push
adc
test
inc
inc
or
shrl
xor
cmc
orl
or
test
lea
imul
xchg
fcoml
test
dec
sbb
add
cmp
sbbb
adc
iret
dec
sbb
scas
mulb
mov
xor
dec
es
fidivrs
mov
xchg
leave
addr16
pop
mov
es
mov
jmp
sbb
add
push
addb
clc
shl
adc
ret
clc
add
xor
cmp
aad
in
xchg
or
out
cmc
pop
push
inc
jnp
in
or
push
loopne
ja
sbb
fidivl
ja
repz
mov
xor
push
popf
hlt
andb
int
sbbb
jne
mov
push
push
or
outsb
xor
sbbl
pop
push
or
jmp
cli
add
outsb
in
xchg
mov
adc
scas
jge
inc
int
and
gs
test
test
mov
push
lock
repz
inc
rolb
adcb
call
dec
popf
jp
ds
cmp
imul
cmp
push
scas
jge
dec
xchg
addb
and
dec
bound
popf
out
inc
addb
js
sbb
add
cmp
test
push
in
cld
cwtl
sbb
push
push
or
xchg
xor
sti
std
push
push
ja
mov
sbb
and
ja
push
out
inc
cmc
add
adc
fisttpll
pop
nop
popf
lcall
or
jnp
adc
and
stos
negb
loop
fisubl
lret
push
adc
shl
adc
or
subb
inc
pop
repnz
lea
adc
ret
xchg
mov
das
lcall
dec
outsb
cmc
or
or
scas
cmp
mov
sub
roll
mov
repz
xor
lock
jl
popa
pop
dec
pop
lods
push
imul
stos
int
addr16
sbb
mov
xor
dec
lock
sbb
jecxz
sub
in
test
sarl
subl
into
ds
pop
push
mov
in
cwtl
push
pop
sub
mov
fsubs
add
mov
sti
gs
xor
inc
es
test
leave
loop
int
sbb
pop
das
add
cld
call
repnz
push
fcomp
test
inc
das
mov
push
inc
test
iret
push
testb
xchg
inc
cs
test
push
add
push
xor
mov
cmpsl
rorl
loop
repz
and
stos
ficomps
fiaddl
inc
push
and
lds
jnp
addb
add
xchg
cmp
scas
and
and
in
add
jl
mov
sbb
bound
sbb
or
push
add
mov
jecxz
ret
arpl
rcrb
adc
cmp
jecxz
loop
inc
out
mov
lcall
and
mov
repnz
insl
mov
push
adcb
mov
fnsave
inc
aaa
je
clc
push
dec
cmp
mov
ret
mov
in
in
cmp
inc
fwait
pushf
adc
jle
xchg
inc
outsl
xor
int
fwait
xchg
dec
mov
call
xor
cs
ret
scas
push
mov
faddl
cmpsl
sub
and
push
addb
outsb
lock
cmc
aad
sub
addb
add
bound
popa
xchg
or
add
clc
sbb
lock
push
loop
push
adc
ffreep
mov
sbb
test
or
test
mov
cmp
push
push
addr16
les
mov
fsubrs
int
aaa
sub
cmc
xor
pop
jbe
mov
fwait
inc
inc
stos
push
scas
dec
pop
mov
sar
pop
sbb
cmp
push
xchg
lret
inc
mov
dec
rol
inc
rcll
cmp
je
dec
clc
cmp
add
imul
or
aas
mov
jmp
push
add
xchg
or
xchg
adc
fwait
mov
jmp
cmp
add
loopne
outsb
inc
fistpll
data16
cld
mov
push
ret
mov
out
jp
loopne
scas
mov
push
mov
xor
lea
les
jecxz
std
and
pop
cltd
icebp
mov
insl
loop
aaa
mov
mov
xor
icebp
adc
or
imul
out
cmp
jl
add
std
leave
fists
das
fiaddl
imul
inc
fstp
jle
lods
mov
inc
jne
and
sub
sbbl
push
lret
std
jno
or
insl
inc
inc
test
stc
push
call
cmc
push
jge
ret
aaa
jnp
fidivs
jp
add
jmp
ss
ret
sbb
pop
cmpb
cmp
jp
xor
add
imul
cmp
mov
loope
iret
or
dec
ret
scas
imul
icebp
add
cwtl
lret
ss
lret
sbb
stos
mov
cmp
cmp
add
mov
int
test
cmp
pop
xchg
sbb
dec
and
or
test
mov
xchg
pop
or
adc
sub
mov
faddl
mov
jecxz
sub
push
xchg
push
scas
jo
jo
and
inc
or
mov
shr
cmp
ret
push
sub
mov
loope
mov
cmp
cmp
xorb
jnp
xor
and
mov
push
icebp
faddl
sbb
jl
push
sub
inc
or
xor
cmp
mov
lcall
enter
stc
xor
orl
or
xchg
push
pop
add
inc
in
mov
dec
add
ljmp
in
fwait
imul
pop
lahf
mov
repz
xchg
jae
aas
cli
subb
dec
lods
jb
mov
fimull
mov
loop
mov
or
out
gs
xchg
fnstsw
add
add
push
push
repnz
cs
arpl
mov
out
icebp
fiaddl
popa
sarl
sub
adcl
bswap
test
cmpsb
mov
mov
sub
aaa
subb
out
mov
movsl
mov
cli
adc
dec
xor
mov
aas
adc
cmp
mov
xchg
sbb
sbb
clc
xor
sub
push
movsb
mov
sub
out
mov
mov
pusha
jo
mov
pop
pusha
mov
sbb
inc
filds
mov
lret
mov
fisubl
jns
clc
xchg
imul
push
mov
cld
push
or
mov
push
mov
aam
pop
mov
ljmp
int3
xchg
add
fnstsw
lods
fisttpll
xchg
iret
mov
pop
push
inc
sub
cmp
pop
ret
sbb
sbb
ror
xor
ja
sar
dec
fistpl
lahf
xlat
sahf
mov
lcall
dec
dec
inc
push
cmpsb
push
mov
push
sbb
adc
sub
enter
data16
mov
pop
fmull
dec
lods
add
icebp
dec
incl
jno
xlat
add
or
js
push
ja
popa
mov
sub
mov
mov
add
pop
aaa
and
and
insb
xor
xor
push
lahf
out
xchg
fdivrs
ja
subb
mov
mov
cli
jo
subb
out
stos
lock
les
fwait
sbb
mov
and
cltd
dec
ljmp
mov
test
outsl
stos
inc
and
dec
fistpl
cmp
and
out
push
cli
adc
pop
push
movups
cmp
mov
push
mov
add
test
pop
xor
sub
push
jle
mov
xlat
jmp
into
aam
add
mov
ljmp
dec
jo
int
mov
mov
in
scas
cmp
cs
iret
mov
adc
cmpsl
or
adc
mov
test
dec
sub
mov
les
cmpsb
subl
loop
mov
pop
adc
or
and
pop
hlt
hlt
pushf
inc
jg
mov
repnz
adc
mov
mov
sub
and
push
mov
push
jle
add
das
push
cwtl
mov
sahf
dec
mov
pop
ret
or
push
lock
pop
inc
pop
cmp
imul
mov
mov
and
loopne
data16
int3
sub
out
pop
loope
popf
sbb
ljmp
stos
les
xor
sahf
shrl
ja
xchg
cld
mov
test
and
dec
nop
mov
fistpl
push
adc
sbb
stos
pop
pop
or
bound
sbb
mov
inc
mov
or
stc
mov
cltd
fidivl
dec
add
dec
sbb
xor
xchg
decb
mov
xchg
sbb
xchg
test
fidivrl
loope
dec
sub
push
sub
andb
fdivr
pop
sbb
idivl
in
inc
pop
loope
jp
mov
push
adc
rorl
or
aad
sbb
fwait
insb
cs
lahf
test
cmp
out
or
pusha
cmc
xchg
or
in
repnz
inc
in
sub
aad
mov
xchg
fldenv
dec
jecxz
pop
adcb
lea
xor
pop
ljmp
jg
std
ret
mov
loopne
out
push
outsb
imulb
iret
lcall
jbe
lock
popa
pop
outsb
in
xor
add
mov
jg
push
stos
push
addr16
mov
sbb
mov
test
loopne
cmp
out
cmp
adc
lods
mov
xchg
ljmp
shlb
jno
out
pop
inc
arpl
imul
adc
bound
cmpl
jp
rcrl
mov
xchg
and
adcb
iret
mov
mov
and
test
xchg
andb
push
popf
mov
mov
push
pop
fisttpll
or
mov
xor
xor
dec
mov
inc
jae
out
icebp
daa
dec
lahf
cli
ret
jecxz
lahf
je
jb
sub
pop
jp
jns
pop
and
pusha
add
mov
mov
lock
xchg
repz
sub
aaa
fcompl
or
sbb
lds
push
pop
loope
orb
push
inc
es
adcb
outsl
mov
sbb
mov
icebp
test
dec
mov
icebp
ds
loope
and
xchg
add
adc
lods
cmp
addl
add
jl
subb
mov
fwait
test
mov
lahf
adc
imul
jo
cmp
pop
subb
add
inc
out
jmp
hlt
jl
std
inc
lock
movsb
out
add
mov
adc
mov
sbb
rcrb
mov
push
push
inc
xlat
int
loopne
cmp
into
and
out
push
fstl
xchg
xor
test
cltd
into
cmp
mov
addb
sti
sub
ret
popa
sub
inc
fcmovbe
and
ficoms
jp
std
movsb
adc
add
adc
ret
sahf
push
push
sbb
sbb
cwtl
sub
push
pop
sbb
out
data16
pop
sbb
leave
xchg
test
rep
hlt
cmp
lahf
inc
gs
xor
adc
lock
xchg
xchg
push
sub
mov
outsb
dec
js
cmp
sbb
mov
push
xchg
in
add
inc
in
loope
movsb
sbb
fnstenv
dec
xorb
jg
fildll
xor
dec
xchg
add
mov
icebp
sbb
loopne
pop
push
jg
push
int
sub
jle
lods
loop
jmp
pop
in
mov
ficoms
adc
adc
ror
fidivrl
js
jnp
movl
add
inc
mov
mov
or
and
push
cli
lods
fcmovnu
addl
xchg
dec
sbb
mov
inc
jl
xchg
shlb
out
jle
mov
push
bound
sbb
lods
test
push
filds
push
lock
std
pop
push
push
adc
test
dec
inc
xchg
imul
jbe
cmpsl
aaa
les
test
jae
lock
mov
inc
dec
jge
int
inc
dec
jmp
call
dec
out
dec
mov
scas
mov
mov
mov
inc
nop
and
inc
mov
xchg
sbb
ds
sbb
mov
pusha
adc
ss
out
mov
call
ljmp
cmp
pop
fidivrl
ret
lret
jle
sub
xchg
add
mov
mov
and
popa
daa
call
pop
mov
and
les
push
lods
cmp
inc
movsl
inc
clc
fwait
pop
jle
icebp
push
mov
pushf
sbb
mov
rclb
aam
in
pusha
jbe
pop
mov
pop
stos
xor
push
cmpsl
daa
cmc
ljmp
xchg
movsb
mov
addb
pop
sub
mov
cli
lods
test
and
push
ret
and
stos
push
sub
inc
mov
cmp
cs
sahf
and
adc
aas
fs
sub
lds
or
insl
fbstp
jnp
sbb
ds
or
lods
pop
scas
mov
add
pop
jbe
clc
dec
std
dec
in
add
push
ret
or
fwait
mov
lret
pop
mov
xor
add
scas
inc
fwait
les
inc
inc
cld
clc
pop
cmc
scas
adc
jge
addl
add
fldl
push
pusha
cmc
jge
sbb
push
xchg
lahf
aad
sub
clc
jg
add
pop
loop
adc
push
clc
sbb
sbb
add
lods
je
or
idivb
cmpb
fistps
jge
pop
lods
mov
fistl
push
pop
daa
cmp
mov
inc
js
lds
mov
and
pop
dec
daa
movsl
inc
vpshad
lahf
lea
arpl
clc
in
leave
push
f2xm1
call
cmp
outsb
xchg
push
mov
sbbl
xor
negb
sbbb
mov
cwtl
xor
cmp
adc
lods
mov
or
frstor
das
jo
xchg
xor
sbb
out
add
sbb
add
mov
sbb
addb
xchg
daa
adc
cld
cmpl
push
in
mov
std
adc
scas
rclb
es
shlb
xor
cmp
divb
pop
fsubs
or
push
out
movsb
and
jle
test
sbb
lods
in
mov
addr16
mov
ljmp
testl
nop
xor
js
add
test
mov
mov
xor
cld
sub
xor
pop
mov
cli
inc
jbe
inc
out
fidivrs
sbb
cmp
aaa
fidivl
cld
xchg
mov
dec
push
mov
push
aam
cltd
test
adc
xchg
mov
or
or
call
daa
ds
push
mov
adc
hlt
int
push
sub
mov
xchg
hlt
and
loop
or
inc
mov
push
jbe
icebp
subb
cmp
int3
loop
into
es
cld
or
test
sbb
adc
add
inc
add
pusha
or
cmc
dec
or
xchg
aad
lret
pop
sub
push
mov
pop
sub
clc
jo
sbbl
cltd
inc
nop
test
add
iret
jl
cli
aaa
pop
mov
adcb
cmpsl
pop
xchg
movsl
sbb
dec
mov
lret
push
xlat
xchg
mov
add
dec
inc
pop
loop
mov
or
xchg
setb
inc
sbb
sub
shlb
ljmp
sub
push
adc
xchg
inc
repnz
cmp
jl
cmp
jmp
jp
jle
test
cmp
xor
test
repz
mov
pop
ljmp
test
outsl
scas
push
or
push
or
mov
dec
sub
add
mov
clc
cmc
inc
jbe
in
xorl
std
decl
inc
inc
xorb
mov
mov
cs
pop
jge
or
gs
mov
cli
xchg
xchg
dec
adc
dec
rcll
pop
jno
or
out
inc
inc
das
sub
xchg
sub
push
adc
xor
call
hlt
xor
inc
mov
imul
movsl
imul
pop
or
shlb
cmpsb
pop
pop
lea
xchg
addb
push
popf
xchg
rcll
xchg
add
inc
leave
jge
test
sbb
bound
mov
pop
repnz
bound
pusha
cmpsb
xorb
andb
adc
lds
dec
fwait
sahf
push
das
adc
mov
orl
sbb
stos
loope
in
lds
add
addr16
dec
std
aaa
jp
adc
test
sbb
outsb
mov
fs
addr16
inc
xor
xor
or
mov
lret
push
fucomp
loope
cmp
jnp
stos
sub
xlat
bound
not
sbb
sub
jmp
xchg
loope
fidivrl
cmp
scas
xor
and
ljmp
lods
sbb
mov
movsl
or
mov
mov
pop
push
inc
rcr
sahf
pusha
sub
inc
outsb
inc
cli
mov
scas
inc
cmpsl
jno
aas
sbbl
jle
inc
rorl
jl
or
xor
test
pop
dec
xchg
sub
dec
add
call
in
ds
mov
xchg
jb
xchg
inc
pop
cwtl
inc
adc
iret
fisttps
mov
fldt
xor
mov
xor
adc
clc
push
mov
sub
mov
dec
mov
mov
cmpsb
sbb
sub
loopne
pop
mov
test
push
idivb
ret
push
mov
cwtl
fiadds
outsb
pop
mov
pop
loop
ja
clc
cmc
and
jne
roll
add
pop
push
fimuls
push
cmp
push
les
dec
dec
jg
movsl
mov
push
hlt
pop
lret
lock
mov
movsb
pop
cmp
les
add
xor
ret
cld
and
rclb
loope
or
mov
mov
std
in
jmp
xor
int
movsb
jmp
inc
fidivl
add
mov
sbb
mov
cmpsl
pop
push
mov
xchg
shl
test
test
push
imul
scas
xchg
or
mov
or
mov
sbbb
stos
pop
std
stos
xor
mov
and
shr
leave
jns
inc
push
addr16
and
orl
js
mov
out
cs
ret
pop
mov
cmp
jp
cmpsb
mov
cmp
push
testl
push
loope
pop
mov
test
inc
test
test
pop
push
mov
xchg
xorb
bound
push
pop
stos
jge
sbbl
loope
jle
or
adc
insb
add
test
pop
inc
loope
into
mov
pop
aas
clc
fs
sbb
push
adc
aas
test
cmp
cmpsb
aam
inc
mov
outsl
xor
jo
addb
popf
in
adc
jo
pop
adc
loopne
adc
and
sub
bound
jl
rorb
cmp
dec
leave
stos
aas
xor
mov
cmp
jp
dec
mov
pop
jp
stos
xor
xchg
adc
sbb
jbe
adc
mov
xchg
add
aas
andl
cmp
cs
pop
jecxz
dec
adc
insb
fdivs
or
arpl
ret
push
test
fwait
push
sahf
and
gs
add
inc
rorl
xlat
lret
inc
pop
mov
mov
and
inc
repz
imul
pop
hlt
or
mov
or
lds
fnstsw
pop
repz
mov
push
mov
mov
add
inc
pop
inc
pop
mov
cmpsl
cmpsb
dec
fisubl
daa
adc
and
shrl
pop
sbb
adc
add
cli
movsb
sbb
sbb
pop
lret
pop
movsl
lcall
mov
and
mov
cmpsb
orb
push
lcall
push
xor
sbb
inc
jmp
add
sbb
cmpb
data16
inc
or
xchg
mov
lret
cmpsb
test
mov
ja
add
imul
sub
mov
mov
enter
cltd
push
inc
jmp
loope
in
les
xlat
dec
pusha
hlt
mov
stos
mov
addl
int
vpsubsb
sub
dec
fdivs
imul
or
push
sti
push
jne
push
adc
push
and
shl
mov
jb
cmovle
call
and
insl
imul
or
cmp
sbb
mov
sbb
rcll
push
mov
loop
cmp
cmp
aas
test
rorb
ja
inc
xor
cmp
cmpsb
mov
mov
shr
adc
dec
hlt
lahf
add
adc
lock
jl
xchg
sub
pop
cld
jmp
and
adc
adc
out
add
jo
or
addl
xchg
pusha
adcl
push
pop
jmp
jg
loop
push
stc
xchg
fstl
mov
pop
ret
pop
adc
cwtl
add
ds
pop
pop
mov
add
cmpl
adc
adc
push
call
push
or
and
cmp
mov
outsb
pop
jl
jb,pt
enter
sbb
jmp
mov
adc
enter
dec
dec
jnp
sbb
mulb
xchg
and
pop
loopne
sub
mov
bound
push
xor
fs
and
pushf
mov
into
shrb
or
or
push
rclb
xchg
decb
or
into
and
loop
aas
dec
ja
add
xchg
and
inc
adc
mov
push
sbb
cs
loopne
xor
dec
jp
xlat
movsl
or
ljmp
lret
dec
xchg
adc
sub
add
xchg
movsl
stc
sub
loopne
les
hlt
dec
dec
or
cmp
push
aas
push
sub
inc
pop
push
mov
inc
xchg
addb
inc
inc
push
push
sbb
sbb
push
pop
add
push
jne
fs
nop
lods
mov
push
ljmp
cmp
std
cmp
js
js
or
clc
scas
inc
and
adc
adc
ljmp
inc
mov
mov
push
jecxz
ret
lods
dec
cmp
mov
jl
lods
lcall
or
movsb
enter
loope,pn
adc
pushf
jbe
sub
in
in
fadd
pop
pop
adc
pop
inc
iret
dec
and
outsb
insl
clc
es
movzbl
fstps
fisubrs
cmc
iret
rclb
or
push
insb
cmp
decl
lcall
or
push
dec
xor
mov
loope
pop
pop
fidivl
sbb
mov
pop
clc
fstpt
ficompl
sub
imul
loop
xchg
sub
pop
lea
sbb
fcmovu
mov
or
pop
add
fcmovne
int
leave
out
pop
xchg
adc
in
pusha
add
jle
je
sub
imul
mov
jbe
popa
in
mov
sbbb
test
xor
je
gs
dec
incb
inc
cmpsl
iret
ret
aam
or
add
gs
mov
aad
cwtl
dec
mov
ds
xchg
xlat
push
jne
call
stc
and
add
rcr
xor
rcr
push
sub
pop
jecxz
dec
aaa
shll
push
arpl
xchg
cli
pop
lret
loope
call
push
mov
dec
mov
mov
mov
mov
cmc
daa
inc
adc
mov
add
and
mov
sti
scas
aad
xorb
insl
pusha
rclb
push
inc
cmp
lds
or
movsb
lock
mov
sbb
lds
mov
mov
cltd
add
or
ret
enter
popa
sbb
cmp
adc
push
adc
rolb
push
xlat
dec
adc
jmp
hlt
jl
sub
lahf
mov
push
clc
push
adc
pop
cmpsl
dec
fsubrs
scas
or
nop
push
and
outsb
xor
repnz
pop
xchg
sbb
out
out
testb
push
lahf
orl
sbbb
nop
xor
push
or
roll
push
adc
cmp
dec
and
push
faddp
xchg
jl
shrb
mov
icebp
mov
xchg
popa
pop
shl
or
adc
mov
fisubrl
lock
mov
xor
rclb
xchg
sbb
cmp
stc
ss
outsl
cli
cwtl
int
jge
cmc
xor
mov
pop
add
jg
cli
movups
cmc
pop
dec
cltd
push
ret
push
aaa
dec
clc
iret
jl
neg
xchg
dec
dec
stos
hlt
or
adc
jno
inc
push
pop
xor
or
mov
mov
dec
sub
push
cli
lcall
pop
mov
xchg
shlb
sbb
jno
and
pop
adc
stc
es
sbb
cmp
mov
testl
pop
or
adc
data16
clc
pop
sub
arpl
sub
and
xor
aam
fwait
push
icebp
je
jecxz
push
icebp
mov
leave
jmp
loope
rorl
mov
aam
ret
or
push
outsb
icebp
mov
roll
cmp
mov
js
dec
jge
gs
scas
adc
dec
aam
xchg
and
push
call
cs
cmc
mov
outsl
mov
sbb
in
outsl
cmp
dec
mov
lret
test
cmc
adc
or
pop
adc
in
dec
cmp
xchg
sbb
adc
jno
adc
stos
inc
xor
mov
push
aas
pusha
pop
aas
add
push
pop
dec
rorl
push
and
int3
insb
dec
mov
sarb
flds
adc
dec
mov
mov
out
mov
lods
jle
lret
into
call
inc
adc
nop
loop
inc
pop
mov
mov
mov
push
fmull
add
ret
add
xor
sub
inc
fdivs
les
dec
push
push
dec
leave
lods
dec
mov
pop
xor
cmp
mov
rcrb
nop
addr16
push
mov
bnd
decb
lcall
mov
je
push
repnz
jbe
es
outsb
pop
mov
or
push
outsl
gs
adc
leave
popf
sub
push
les
pop
or
daa
clc
lea
add
xor
cmpl
mov
adc
sub
out
xchg
sarb
inc
inc
vpmovsxbd
and
xor
test
into
xchg
and
out
cmp
or
mov
outsl
adc
ljmp
pop
mov
clc
jmp
mov
pop
jge
jns
jne
mov
femms
push
int
pop
push
xlat
movb
mov
add
sbb
xchg
jno
jb
mov
push
out
stos
leave
sbb
aad
mov
fbld
or
ret
pop
in
jmp
xor
movsb
mov
jno
xor
iret
add
popf
ss
push
loop
xchg
mov
icebp
sbb
jl
iret
or
sbb
dec
insb
xor
rorb
arpl
insl
or
ds
mov
jns
ja
cmp
pop
ljmp
ds
test
cmp
jbe
push
adc
mov
test
jns
sub
cwtl
push
mov
mov
sbb
or
cmp
sub
into
mov
loop
lock
jnp
xlat
sub
inc
cmc
adc
jg
lods
pusha
pop
arpl
ret
dec
shr
add
arpl
sar
rol
lods
dec
sbb
push
movsb
out
push
cltd
mov
fldt
xor
mov
in
push
movsl
pop
mov
enter
push
pop
dec
int3
insb
bound
repnz
loopne
pop
out
dec
jo
in
xor
ret
lods
jae
scas
loopne
call
push
hlt
lahf
ficompl
int
and
std
test
sbb
sub
pop
ja
pop
stos
push
mov
jmp
mov
mov
ret
and
lods
mov
pop
push
push
pop
clc
xchg
mov
insb
mov
jno
or
dec
push
inc
int3
cmc
ljmp
pop
push
cli
sbb
inc
cmpsl
adc
aad
loope
sbb
mov
xor
jge
popa
ret
daa
pop
mov
xor
add
jg
mov
pop
popf
movsl
jns
inc
aam
xlat
shl
mov
inc
pusha
jmp
gs
shl
fwait
jno
mov
xchg
push
inc
mov
xchg
gs
push
cmp
inc
or
xor
jae
pop
cmp
bound
fdivl
mov
add
add
dec
sbb
ret
and
lock
and
sbb
dec
pop
pop
and
adc
cli
pushf
adc
das
sbb
fstpl
pop
mov
push
inc
dec
mov
in
xorb
faddl
enter
inc
push
bound
call
sbb
loopne
xor
add
push
fisubs
std
je
cli
movsb
sar
ljmp
in
pop
ffree
clc
xchg
xor
add
sub
sti
add
outsl
or
in
and
shrb
xchg
bound
loope
and
sbb
and
mov
fnstcw
inc
xchg
and
jle
fsub
push
cmp
xor
inc
int
es
adc
push
xor
sbbl
scas
lcall
adcb
jb
jle
nop
xchg
add
clc
out
push
mov
ljmp
adc
in
and
es
cmp
lcall
out
push
cmp
bswap
cmp
jge
popa
cmp
mov
push
mov
add
or
dec
clc
mov
lea
sbb
or
mov
mov
sub
mov
add
gs
in
add
ror
xchg
or
inc
dec
sub
or
add
enter
lcall
mov
cwtl
ds
jbe
xor
nop
les
gs
push
adc
lea
xor
jae
jle
jnp
mov
dec
dec
xor
adc
mov
dec
sbb
ljmp
cmpl
adcl
dec
pop
cmp
cmp
sbb
roll
popa
cwtl
cltd
andl
xchg
clc
repz
mov
sti
lahf
mov
xor
xchg
mov
paddusw
popa
adc
jmp
imul
cmp
fisttps
adcl
loop
out
pop
xor
xor
push
inc
xor
adc
push
das
sahf
sbbl
dec
pop
das
in
dec
call
sahf
and
test
push
aaa
sbb
js
lret
dec
dec
pop
jmp
and
shll
jno
test
xlat
lea
sbb
clc
inc
push
arpl
pop
arpl
xlat
pop
push
adc
push
add
movsl
inc
mov
push
dec
push
adc
mov
mov
sbb
cltd
xchg
jns
aas
xor
push
scas
mov
ja
rcrb
scas
sub
xchg
sub
icebp
add
jo
sbb
and
lock
inc
and
cli
popa
gs
and
or
jecxz
or
js
push
cmp
loope
and
mov
jmp
andl
scas
mov
in
fs
addr16
cs
aaa
mov
jno
lods
dec
mov
dec
mov
fwait
mov
pop
xchg
mov
jp
nop
int
and
aaa
add
into
cmpsb
incl
nop
or
icebp
adc
push
jbe
lret
fs
lcall
inc
aaa
cmc
inc
aam
push
arpl
pop
fidivrs
loope
ret
mov
movsb
push
sub
mov
pusha
inc
or
inc
cmp
or
cmc
pop
jne
jge,pn
rcrl
push
adc
lods
lahf
push
roll
jmp
jge
push
ljmp
in
lcall
lahf
ljmp
aam
test
xor
lcall
lret
mov
xchg
sbb
and
xlat
push
popf
jecxz
lock
not
cmp
adc
aaa
lea
loopne
aam
mov
cmp
jno
lds
jnp
lea
ja
out
add
push
insb
sbb
pushf
sbb
cmp
push
add
pop
out
andl
outsl
mov
pop
std
inc
ret
xor
sbb
or
mov
xor
and
fadds
jbe
cmp
enter
xchg
cmp
inc
rcl
push
jge
movsb
xor
sbb
inc
add
inc
scas
sub
push
ss
mov
fisttps
movsl
lahf
add
xor
cmp
or
setl
cmpsb
cmpsb
pop
or
dec
jmp
mov
popa
icebp
mov
mov
jnp
mov
sub
cmp
pop
insl
xchg
pusha
aam
loopne
lods
sub
in
dec
xor
sub
rcrb
outsl
sub
mov
je
nop
inc
mov
shl
or
jo
das
jo
je
inc
int
mov
add
stc
push
dec
pop
and
insl
pusha
push
pushf
cmc
jle
cmp
cmp
mov
or
cli
or
lea
jb
repz
je
xchg
mov
xchg
cmp
adc
mov
mov
push
addl
push
mov
sub
lret
jl
cld
and
add
mov
lods
sub
or
add
xchg
xor
fisttpl
es
push
sbb
mov
scas
or
mov
pop
push
or
movsb
mov
mov
test
or
push
push
sbb
dec
daa
test
test
loopne
fsubp
idivl
jecxz
test
insl
addr16
pop
inc
sbb
mov
sbb
or
or
add
enter
das
push
push
movsb
test
mov
jns
loopne
mov
jle
mov
lahf
cmpsl
inc
cmp
test
pop
insl
dec
stos
cmp
add
das
adc
sbb
sahf
push
dec
and
xor
es
and
and
mov
je
push
and
mov
cwtl
test
cli
adc
out
aaa
dec
push
mull
inc
lret
sub
shl
lahf
jbe
pop
or
aam
push
loopne
pop
in
pop
or
push
dec
mov
mov
xchg
lea
push
cmp
and
clc
rol
mov
loope
or
andl
shl
mov
pop
xchg
xchg
lahf
popa
nop
rcpps
mov
mov
lahf
pop
scas
xor
stos
cmpsb
or
popf
adc
fisubs
shll
leave
pop
sar
imul
cs
mov
arpl
rclb
fwait
imul
fldenv
jo
cmp
fadds
lahf
jo
dec
aad
lods
mov
lds
jp
mov
pop
mov
stos
rol
and
adc
sbb
mov
inc
imul
das
adcl
and
push
mov
dec
adc
cld
repnz
push
setne
xchg
jbe
rorb
arpl
sarb
pop
icebp
inc
data16
orl
test
in
mov
adc
das
push
int3
dec
push
shll
jo
testb
int
pop
cld
xor
addl
popf
ja
shlb
aas
mov
and
mov
sub
das
stos
movsl
das
stos
loopne
dec
rcrb
cs
repnz
fists
adc
enter
xor
bound
out
dec
pop
sbb
jne
sub
out
cmp
or
pop
adc
cmp
or
and
sbb
aas
push
mov
pop
clc
add
push
cltd
js
xchg
aaa
insb
jb
lods
dec
mov
sub
adc
xor
jbe
jp
sub
sbb
das
push
stos
cltd
je
mov
aad
inc
cwtl
jge
imul
into
cmpsb
push
iret
pop
cmpsb
pop
sbb
jae
push
cmc
je
mov
inc
pop
cs
push
lcall
andb
jge
into
xchg
inc
fstpl
lock
mov
or
clc
xor
lret
fstps
mov
movsl
cmc
mov
or
pop
mov
sub
or
mov
lret
cmp
sbb
pop
jl
lock
and
mov
lods
ljmp
sub
xchg
jp
roll
stc
jmp
sub
sbb
out
out
pop
mov
fbstp
sar
adc
jle
or
cmp
adc
push
inc
aam
fadd
xchg
jp
cmpsb
movsl
popf
push
insl
shll
mov
dec
mov
insb
jmp
movsl
push
add
cmc
jge
out
pop
inc
in
ss
add
test
cli
out
or
xchg
xchg
pop
inc
adc
mov
test
filds
rcll
mov
clc
testb
mov
fcmovbe
lock
std
cli
lods
and
pop
je
mov
subl
mov
inc
mov
lock
sub
adc
add
dec
test
ja
fdivrs
repz
xor
lret
add
pop
jg
xor
movsl
mov
sbb
mov
fs
pop
sub
sub
fdivl
add
fwait
dec
mov
sahf
dec
cld
pusha
aad
and
cld
cmpsl
lods
mov
xchg
jbe
inc
mov
inc
and
and
cwtl
jo
mov
and
push
and
mov
add
and
inc
mov
xor
js
lock
add
cmp
jecxz
shlb
or
fstpt
push
sahf
testl
mov
add
rorb
xor
outsl
in
les
aas
shrl
loopne
push
fsubrl
jbe
jl
hlt
cwtl
adc
mov
push
push
jb
dec
xchg
addb
outsb
inc
mov
lcall
pop
rcr
inc
jnp
cmp
pop
or
inc
jnp
sub
sub
or
jo
pop
xchg
fisttpll
fcompl
mov
orl
cmpsl
xchg
or
jp
es
into
push
push
jno
pop
push
add
mov
cld
aaa
cwtl
adc
dec
pop
sub
cmp
and
fwait
jne
pop
lret
jb
jmp
pop
repz
loop
lock
sbb
mov
jecxz
call
jbe
int3
mov
fisttpll
mov
imul
stos
push
test
pushf
cmc
out
add
dec
cltd
je
imul
ret
cs
mov
cs
cmpb
xor
push
or
add
jnp
jo
jnp
xchg
add
lods
in
add
mov
gs
rorl
sbb
dec
jle
sub
js
cli
xchg
bound
xchg
out
clc
inc
js
fcoml
clc
ret
jle
mov
test
adcl
sbb
mov
xor
mov
push
jo
jl
xor
int3
idiv
sbb
lea
jns
lcall
stos
mov
sub
dec
subb
adc
mov
fnstcw
mov
pop
adc
push
jbe
inc
ljmp
adc
fcoms
stos
mov
sub
xor
gs
leave
dec
pusha
push
or
clc
or
outsl
xor
add
sbb
sub
imul
sub
cmp
rcrb
push
rorl
dec
pop
stos
movsb
and
int
mov
or
ss
lds
push
fiadds
add
lahf
sbb
mov
push
jo
mov
mov
push
mov
and
cmpb
les
ljmp
and
pop
push
push
jle
call
push
jmp
sub
jmp
loopne
fisttps
push
in
scas
clc
movsl
xor
sub
pop
mov
mov
xchg
cld
dec
cmp
js
xchg
mov
arpl
test
cld
aad
outsb
sub
loopne
jo
je
xlat
scas
cltd
add
add
push
fs
pop
jo
adcb
sub
cmp
in
and
inc
push
adc
xchg
pushf
pusha
pop
rorl
fst
sti
popw
fdivs
push
mov
jge
cmpsb
pop
pop
hlt
add
ror
and
pop
add
loop
das
lods
xor
add
ljmp
push
stc
rolb
aaa
inc
or
pop
insb
das
adc
xchg
push
into
mov
xchg
cld
sbb
pop
sbb
inc
cmc
sti
mov
add
lahf
sub
fsubs
aas
ss
cmpb
ljmp
js
and
dec
add
js
mov
aam
jecxz
nop
lock
test
fxch
dec
loope
movsl
out
test
shl
fcmovu
ret
outsl
das
mov
sbb
ja
mov
add
push
xchg
cld
mov
jecxz
loopne
movsb
adc
cld
popa
push
fs
loopne
push
sbb
outsl
sbb
push
les
pop
lcall
mov
add
pop
call
in
xchg
out
jl
in
xor
rclb
into
rcrb
push
lods
cmp
jg
cs
adc
adc
and
rorl
add
frstor
ja
jnp
ss
mov
xchg
cmpsl
int3
adc
ja
adc
rol
imul
push
in
inc
movsb
xchg
ret
pop
add
and
dec
mov
fnstsw
xchg
inc
or
es
mov
add
ds
hlt
dec
sbb
cmc
jle
popf
push
insb
mov
mov
add
mulb
sub
mov
gs
pop
das
add
inc
cmc
jns
push
mov
clc
movsb
add
push
inc
test
push
lahf
adc
and
cli
xchg
jno
pop
pop
mov
and
xchg
xchg
pop
cmpb
ret
inc
dec
sub
jmp
inc
or
sti
fcomps
out
cld
div
xchg
negb
mov
adc
sti
adc
push
adc
jmp
loop
jg
loope
add
test
pushl
inc
mov
push
pop
mov
or
add
add
xchg
jmp
cmc
jge
fbld
rcr
data16
push
push
jmp
fidivl
sbb
in
cmp
rcrb
js
fiadds
push
imul
mov
lret
mov
out
imul
jle
or
sbb
js
notb
mov
out
popa
add
mov
cli
add
outsl
ja
sbb
push
hlt
loopne
jb
pop
sub
push
pop
xchg
out
lret
mov
dec
pop
and
dec
fsts
je
sti
ficoml
outsb
pusha
test
fs
pop
sub
xor
popf
sahf
inc
mov
inc
pop
scas
dec
push
cs
loopne
pop
mov
mov
adc
push
dec
jmp
imul
out
ret
push
pop
testb
inc
cmp
fnstsw
inc
jnp
mov
push
popa
mov
stos
or
mov
xlat
test
xchg
xor
jb
adc
stc
jae
add
xor
js
push
mov
cmp
or
insl
movb
inc
mov
push
xor
jmp
fsubs
push
loopne
loope
cmp
js
push
inc
add
mov
imul
push
fcoms
xor
mov
add
in
mov
add
fnstsw
xchg
push
aad
mov
outsb
sarb
ljmp
cmp
cli
nop
xor
addr16
insb
cmp
aad
test
push
sbb
test
jecxz
push
xor
les
shlb
push
es
push
sarl
dec
mov
in
sbb
jp
cli
push
dec
hlt
rorb
cwtl
ja
sub
inc
pop
aaa
dec
std
sbb
cmp
pop
in
pop
jge
dec
xchg
jo
idivl
lock
mov
push
cmp
mov
pop
add
es
repz
mov
sahf
cmp
dec
xchg
pusha
inc
sbb
cmc
cltd
pop
lods
jl
pusha
jo
bound
push
dec
dec
loopne
rcrb
sub
jb
add
and
lret
pop
inc
pop
fsubrs
pop
imul
cmp
scas
cltd
push
sbb
jl
and
inc
xchg
xchg
pop
mov
add
mov
pop
mov
mov
adc
xchg
xlat
add
ficomps
xchg
pushf
inc
cmp
cmp
inc
mulb
aas
test
test
cmp
sbbb
mov
bound
ljmp
loope
loope
fisttps
call
js
addr16
mov
cmove
pop
jp
add
xor
sbb
pop
popf
jecxz
jmp
mov
hlt
jl
xchg
ds
fs
mov
sub
add
mov
mov
inc
pop
add
mov
mov
scas
sbb
mov
loopne
jae
jbe
je
test
jle
add
push
fwait
cmp
add
add
insb
sahf
inc
push
icebp
icebp
push
fimull
mov
popa
push
test
jb
shrl
push
push
dec
pop
adc
mov
mov
ds
inc
pop
fs
or
filds
push
fmul
nop
sub
sub
xchg
data16
jnp
xlat
mov
cmp
rcll
faddl
imul
pop
cmpsl
or
jo
fbstp
mov
lret
add
jb
fabs
ret
mov
mov
pop
dec
mov
je
jns
push
or
pop
sbb
inc
cmp
pop
es
xchg
xor
cmpsb
jae
dec
pop
and
xchg
cmpb
sar
int
hlt
inc
xor
dec
js
push
cld
test
push
test
test
aad
fcoms
dec
outsb
inc
repz
sbb
xchg
mov
hlt
loope
sbb
add
pop
xchg
and
inc
mov
nop
xchg
jle
cli
pop
adc
sbb
push
dec
adc
mov
call
sahf
cmp
out
dec
cld
mov
add
xchg
fmull
out
ret
clc
jg
movsl
repz
xchg
and
xchg
cmc
mov
mov
enter
out
fmull
es
mov
or
dec
dec
push
scas
daa
add
clc
imul
push
clc
mov
mov
and
dec
mov
pop
icebp
push
push
jmp
movsl
das
daa
pop
mov
fnstenv
arpl
loopne
fwait
shrl
push
inc
mov
popa
int3
loop
push
push
mov
imul
dec
or
ss
cs
sub
sub
push
pop
dec
movsl
sbbl
mov
lock
out
jnp
cmp
mov
pop
push
dec
mov
xchg
add
cmp
pop
loopne
dec
push
or
cmpsl
inc
pusha
mov
adc
lcall
scas
js
mov
shll
test
and
mov
xorl
xchg
push
shlb
jmp
add
loope
pop
jecxz
pop
in
aam
call
xor
stos
mov
dec
js
cmc
dec
jo
cmpsb
dec
loopne
mov
call
int
push
cmc
test
jg
pop
inc
in
sub
inc
xor
stc
add
ret
xchg
lods
loopne
scas
jbe
loope
repz
ret
jg
aas
jl
sub
push
ds
jp
xchg
jge
les
inc
or
clc
aaa
sarb
xchg
sbb
clc
jl
ja
push
push
lds
jle
cs
xchg
xchg
sub
je
movsb
mov
cld
mov
outsl
mov
orb
xchg
jae
test
mov
mov
stos
fs
mov
push
push
call
cwtl
mov
sbb
outsl
pop
inc
push
add
adc
cmpl
psubd
and
ret
adc
ds
jmp
or
mov
sub
inc
js
mov
mov
ficoml
rcrl
icebp
int
inc
sarb
sub
ja
adc
enter
pushf
dec
fistps
into
sbb
sbb
mov
outsb
push
or
sbb
inc
cmpsl
cs
pop
cli
leave
rolb
sub
js
add
and
mov
add
test
and
add
adc
xchg
push
cs
mov
aaa
aaa
scas
movsb
call
pop
add
dec
and
push
mov
push
xchg
adc
adc
adc
aas
rolb
dec
es
jge
cld
mov
xor
mov
stos
cs
add
pop
sub
jmp
sar
mov
lea
movsb
adcl
or
mul
repnz
je
roll
lcall
inc
sti
incl
and
or
jp
lret
rolb
jp
stos
cmp
notl
nopl
sub
outsl
test
cltd
push
mov
leave
ret
imul
fmul
fisubs
ficoms
cmp
mov
adc
jns
addb
mov
jo
or
xchg
adcl
call
cmp
shrb
sbb
jo
pop
xchg
fcmovne
scas
jbe
mov
sti
cmpsb
pop
imul
pop
push
push
adc
pop
loopne
mov
ret
inc
adc
jge
popa
or
push
fs
and
les
adc
jp
mov
movsl
mov
jg
js
jecxz
jmp
and
not
dec
aas
sub
xor
cmpsl
inc
scas
ss
add
or
jle
sarl
add
call
call
sti
mov
mov
cmp
xor
or
inc
mov
scas
lret
xchg
nop
jbe
dec
insl
es
and
negl
sbb
xlat
xorl
add
cmp
ret
mov
dec
push
and
jl
mov
sub
rcll
js
sti
jo
mov
pop
push
jge
pop
sbb
cmp
aaa
ds
xchg
add
arpl
fisubs
jmp
lods
test
ss
xor
pop
cmp
pushf
sub
inc
jp
mov
jne
add
mov
es
push
jp
movsb
outsb
sbb
into
fsubrs
outsl
mov
dec
loop
imul
lods
imul
lds
pop
ss
hlt
sbb
fmuls
cmp
rol
mov
jp
mov
sti
aaa
sub
ds
mov
repz
and
ret
cwtl
mov
call
cmpsl
xlat
cld
mov
aas
andb
ss
sub
divb
pop
loopne
pop
lret
sbb
rcr
out
out
repz
es
xchg
dec
push
add
sbb
mov
or
push
dec
dec
mov
mov
pushl
lock
sbbb
cwtl
aaa
call
out
mov
adc
dec
mov
inc
inc
scas
and
clc
daa
xchg
sub
add
jno
rcrb
lret
stos
fcomps
xor
mov
out
cli
sahf
sbbb
cmp
push
mov
aas
lock
push
daa
add
frstor
scas
sub
and
shl
push
mov
xchg
add
sbb
and
faddp
out
out
sbb
inc
incl
or
cmpsb
loopne
shrb
push
test
or
adc
sahf
push
daa
pop
scas
xchg
and
sub
cmp
fsubl
add
js
jae
cmp
fs
mov
add
fstps
mov
jae
sub
push
hlt
rolb
add
xor
jo
mov
mov
add
mov
add
rcrl
jp
cmp
add
dec
jb
insb
push
ret
mov
lods
cmp
movsb
ljmp
sbb
add
sub
lahf
jbe
shll
es
or
or
mov
push
mov
lods
or
sub
xlat
dec
rol
and
sub
inc
mov
insb
in
mov
sub
pop
mov
push
push
xor
mov
iret
push
pop
jg
jg
adc
cmp
sbb
in
cmp
aaa
lods
mov
lcall
aad
rcl
ds
fwait
mov
adc
call
mov
or
das
rcrl
sub
xor
pop
rol
sbb
sbb
mov
scas
enter
sub
cmp
or
mov
inc
sbb
aam
dec
scas
imul
push
lret
js
push
dec
add
sbb
or
nop
and
and
sbb
sub
test
cmp
pop
or
mov
loope
cmpl
cli
xor
sub
pop
sti
pop
push
xor
in
and
cld
insb
cwtl
out
or
and
shl
sbb
xor
orb
xchg
jo
xor
std
pop
dec
and
xchg
jg
push
imul
es
lods
xchg
cmc
mov
add
add
outsl
push
sub
or
leave
inc
in
aam
pop
lahf
leave
sahf
cli
mov
cmp
push
aad
in
stc
xchg
and
dec
mov
mov
jmp
enter
xchg
or
insb
rorb
lea
aas
loopne
das
ss
ret
adc
and
mov
shl
mov
push
fidivrl
loopne
add
pusha
bound
dec
aas
pop
xchg
push
cld
xor
or
push
dec
fisubrl
jge
pop
and
ljmp
repnz
lcall
nop
out
iret
xor
in
mov
test
cmp
std
rorl
dec
imul
pushf
cmc
pushf
mov
rorl
cwtl
inc
xchg
sbb
push
fcmovu
sub
int3
aad
test
jle
ds
decb
into
xorb
cmp
jecxz
cmp
shl
push
cmpsb
add
mov
dec
popa
add
xchg
shl
jns
scas
inc
rcrb
adc
or
adc
sbb
imul
lret
push
addl
les
push
sbb
jl
inc
push
jl,pn
test
fimull
or
xor
jne
out
inc
push
xchg
aam
mov
mov
adc
pop
ficoms
mov
arpl
dec
hlt
imul
jno
mov
pop
or
jo
mov
ljmp
mov
xor
int
sbb
cmc
shl
push
es
add
int
dec
push
mov
inc
mov
in
jl
fbld
cmp
sarb
lcall
loopne
loopne
jae
icebp
stc
cmp
mov
push
jno
loopne
or
ret
sbb
pop
inc
jo
and
les
cld
jb
clc
popf
adc
cli
xor
hlt
lock
cmc
test
jns
push
and
out
cli
sbb
xchg
push
popf
push
sbb
mov
inc
aam
or
pop
daa
pop
je
and
daa
jle
dec
pop
test
clc
mov
xor
and
add
pop
inc
and
subb
rorl
out
mov
push
push
dec
mov
mov
cld
les
dec
div
js
adc
hlt
leave
mov
iret
pop
sub
popa
dec
or
enter
movb
sub
adc
jp
and
lods
cmp
call
push
ret
xlat
dec
xor
loopne
cld
gs
outsb
sbb
clc
rorb
push
adc
and
outsl
xchg
rcrb
inc
adc
add
fbld
sahf
inc
dec
sbb
jo
jae
or
jae
lahf
das
jg
add
or
add
or
rclb
adc
pop
and
test
sbb
mov
and
ljmp
lods
push
sbb
cmc
push
jbe
ljmp
add
adc
fdivr
sbb
adc
loop
adc
repz
or
mov
movsb
adc
lds
push
inc
pop
add
or
push
push
sbb
test
sbbb
inc
loope
cld
cmp
outsl
mov
xchg
lods
cltd
dec
push
mov
mov
push
inc
xor
or
call
mov
outsl
les
dec
pop
mov
mov
aaa
call
jae
xor
out
pop
cmpb
nop
aaa
lock
js
orl
in
aad
xchg
imul
sbb
shlb
ror
loop
lods
inc
test
ror
mov
mov
pop
mov
popa
add
stc
pop
push
jo
cs
mov
xchg
clc
ljmp
add
gs
push
push
push
or
push
test
add
repnz
insl
sub
aaa
mov
sub
loopne
add
aas
ljmp
dec
lahf
fildll
fldcw
add
and
push
jmp
cmpb
sub
mov
dec
repz
ja
roll
cmpsb
push
add
js
sub
cli
imul
jge
sbbl
pusha
jne
test
in
pand
xor
mov
mov
loope
arpl
iret
inc
cmp
cmp
out
sub
cmp
sub
pop
fnstsw
inc
js
fidivl
mov
add
xor
push
lods
lock
adc
fmull
or
or
inc
pop
cmpsl
jmp
sbb
fs
js
xor
lret
and
add
add
and
sub
inc
sub
orl
sbb
dec
dec
mov
shrl
jecxz
push
mov
aam
or
popa
push
ss
test
pop
repz
int
xchg
cs
xchg
sbb
adcb
in
xchg
call
ret
push
in
pusha
pop
cmp
adc
test
stos
loopne
shlb
icebp
xchg
mov
out
add
and
ret
dec
mov
xor
movsl
clc
icebp
cmp
lret
lret
movsl
cld
push
dec
outsl
test
mov
lods
add
mov
adc
test
ret
fwait
cltd
jne
xor
xchg
push
add
outsl
into
xchg
mov
inc
movsl
sbb
ret
fcmovnu
shll
pop
jae
es
xor
jno
adc
lcall
je
lods
ret
sbb
sub
add
add
inc
pop
jbe
enter
mov
add
loopne
sbb
pushf
mov
lahf
jl
lcall
je
out
les
and
lahf
jecxz
fisttpll
inc
subb
mov
jo
push
adc
ja
pop
or
fisubrl
test
mov
repz
aas
cmp
adc
pop
jle
push
loopne
pop
out
jg
sbb
lcall
add
faddl
popf
sbb
loope
or
aas
jo
xorl
mov
add
xchg
mov
sub
and
les
add
mov
ss
es
and
mov
fwait
sahf
in
sub
call
pop
fstps
out
enter
clc
cmc
mov
sub
adc
push
mov
jmp
cmc
push
rolb
and
xchg
adc
ljmp
inc
out
cmp
push
cmp
dec
cmp
xorb
enter
dec
cmp
cmpsl
bound
mov
into
cmp
push
sbb
iret
ds
push
insl
lret
add
out
inc
or
sub
jecxz
loop
mov
pop
pop
out
imul
add
mov
lret
mov
push
jp
sbb
pmuludq
mov
les
pop
inc
lods
fld
adc
jge
lcall
sti
ja
test
sbb
add
add
mov
and
aaa
and
cmp
mov
sub
lahf
mov
add
and
lods
loope
ds
xchg
in
leave
rorb
or
cld
rorl
lds
aaa
test
jmp
mov
test
xorl
or
mov
aad
cmp
cmp
jmp
jle
add
adc
arpl
adc
or
outsb
cli
mov
cld
jo
jae
cmp
mov
loop
rolb
dec
mov
insl
and
cwtl
pop
jo
xlat
das
pop
cld
cmp
cmp
jmp
dec
xor
cmp
mov
in
fldenv
mov
cmc
ds
ss
dec
mov
dec
jl
inc
dec
add
loope
arpl
int3
and
mov
pop
lahf
lret
call
push
jmp
test
cmpsl
xchg
inc
out
test
iret
ret
mov
cld
push
lods
into
fwait
es
jmp
adc
shl
mov
pop
popa
lds
popa
xor
jns
add
mov
popf
adc
xor
mov
movsl
decl
push
pop
lahf
stos
movsl
rcl
in
cmpsb
scas
nop
jl
and
jl
in
sub
hlt
push
aad
ss
xor
test
insb
das
lahf
cmp
test
xchg
lcall
xchg
jge
out
push
push
test
mov
push
cmpsb
out
and
sbb
lea
inc
inc
push
push
sahf
mov
je
lods
outsl
fists
mov
mov
fmuls
gs
das
mov
popa
mov
and
mov
or
cmp
dec
lea
jmp
jge
js
push
pop
lcall
cmp
and
testl
les
cmpsl
xchg
fisubs
or
sbb
leave
je
inc
xor
add
hlt
add
push
stos
ret
jne
mov
ja
jbe
xor
icebp
or
inc
arpl
add
cmp
add
div
xchg
add
test
pop
or
add
arpl
and
in
loope
in
or
lock
cmovbe
sub
popa
xchg
xor
fstl
mov
pop
xor
or
scas
rcr
dec
inc
or
sbbl
inc
mov
cltd
jge
leave
push
jle
loopne
or
iret
into
nop
leave
xchg
scas
xchg
mov
and
sub
jb
mov
add
xchg
cmp
imul
lods
pop
jp
and
test
loopne
lods
insl
shrb
data16
push
adc
mov
pop
leave
jbe
lea
mulb
adc
cmp
mov
pushf
test
pusha
test
movsl
fistl
ljmp
push
push
int3
test
inc
dec
sahf
adc
mov
or
sti
or
mov
jb
int
mov
scas
in
add
icebp
xor
sahf
and
push
clc
mov
adc
out
les
pop
in
inc
jg
mov
or
dec
bound
jae
inc
adc
mov
inc
pop
sbb
cmp
iret
sub
mov
sbb
sub
cmp
inc
xlat
cmp
jns
push
outsl
bound
push
push
sbb
push
sub
loopne
inc
push
lds
daa
adc
mov
push
adc
sbb
or
jl
popa
adcl
xlat
dec
scas
sub
sub
dec
arpl
mov
push
ret
pavgw
xchg
aad
cmp
ror
inc
or
push
xchg
push
jl
pop
jno
jne
subb
out
daa
mov
mov
pop
or
mov
xor
push
cwtl
push
cmp
in
testl
js
icebp
jg
popl
or
enter
loopne,pt
mov
test
sbb
loop
mov
pop
fistpl
mov
mov
scas
nop
jne
push
divb
xor
icebp
xor
jle
sub
xor
cmp
cmovb
insb
fidivrl
cli
aam
stos
scas
cld
push
pop
push
jb
add
test
cltd
xor
adc
in
xorb
adc
stos
out
sub
jne
sbb
fsubp
pusha
jno
in
xchg
pop
aas
add
add
mov
idivl
jle
rcrl
sub
sbb
test
push
mov
cli
xchg
add
mov
dec
jne
add
insb
mov
mov
jl
in
mov
mov
pusha
out
cs
adc
mov
mov
pop
das
lods
int3
or
ja
mov
push
subb
stc
popf
imul
lahf
lahf
mov
xchg
mov
xchg
adc
pop
cmp
adc
cmc
clc
mov
rcrb
out
nop
xor
pushf
shlb
fs
popl
mov
and
ljmp
pop
add
jns
cmpsl
mov
dec
xor
or
fcomps
icebp
cltd
addb
xor
insl
mov
cwtl
lahf
cwtl
ljmp
sti
xchg
movl
or
into
sub
jg
jo
push
mov
sub
mov
or
call
imul
jge
lsl
xor
pop
sbb
idivl
mov
sbbl
negl
xor
jg
iret
add
jae
mov
shrl
mov
popa
jne
icebp
or
mov
sbb
mov
insb
adc
sbb
jmp
lods
jl
sbb
stos
in
push
push
lock
or
mov
mov
test
push
fcmovu
inc
loope
call
sub
adc
icebp
jnp
jmp
jle
xchg
sbb
into
adc
cwtl
rorl
icebp
or
or
cmpsb
lcall
rcrb
jbe
pop
dec
icebp
dec
in
add
rcll
pusha
in
or
dec
cld
lods
out
mov
cmp
push
repnz
or
lahf
jp
clc
dec
leave
test
or
mov
bound
cmp
adc
and
aad
xchg
das
mov
into
adc
cmp
cli
push
scas
loope
pusha
mulb
inc
fildl
hlt
and
mov
cmpsl
scas
push
adc
add
das
mov
push
sub
fwait
movsl
push
mov
mov
cli
xor
dec
loope
or
lcall
aas
icebp
mov
lds
stos
cli
adc
push
test
mov
jno
jl
pop
mov
cwtl
decl
mov
cmp
ret
cli
and
mov
shrb
xor
lret
cli
adc
js
adc
lahf
sub
mov
mov
movsb
xchg
or
je
movsl
mov
shll
xchg
dec
dec
push
xor
js
inc
and
out
xchg
and
insb
cmp
lods
mov
mov
test
pop
dec
mov
add
adc
nop
orl
mov
push
jns
push
mov
add
ja
addr16
mov
out
fdivl
leave
lcall
fisubrl
dec
mov
aad
or
shll
add
dec
jne
aaa
mov
fsubl
cmpsb
jmp
mov
push
mov
mov
cmc
ficompl
stc
xchg
xchg
stc
or
inc
lods
test
pop
and
xchg
pop
js
mov
xor
mov
fwait
cmc
sbb
or
stos
out
test
loop
mov
add
sub
mov
jmp
cli
lods
xchg
test
test
lret
in
dec
cld
add
int3
mov
test
sub
mov
or
mov
js,pt
out
mov
and
orl
mov
cmp
xor
lock
and
pop
dec
out
adc
lcall
mov
cmp
inc
mov
push
pop
subb
cld
push
sbb
adc
pop
add
adc
inc
insb
test
sub
addr16
mov
cmp
mov
sbb
shlb
mov
je
ja
outsb
test
inc
aaa
jnp
stos
rcll
and
xchg
mov
push
movsl
cs
in
or
mov
jl
or
pop
inc
sbb
gs
sbb
inc
jmp
inc
xchg
jp
and
or
adc
adc
cs
add
mov
addb
hlt
cmp
fsts
add
sarl
dec
pop
fs
mov
inc
imul
call
int
js
jae
addr16
test
pop
imul
inc
cmp
xor
sbb
sbbl
enter
cmp
inc
inc
sub
int3
xor
mov
or
push
mov
cmc
pop
test
adc
loop
imul
jge
jno
lret
pop
dec
movsl
pop
mov
ret
lods
insl
test
lods
pop
hlt
imul
or
loope
pop
into
jae
xor
sahf
or
popf
jne
mov
fcoml
sub
lret
pop
jmp
mov
pop
test
loope
jne
andb
xor
ret
inc
pop
lea
lds
pop
xorl
sti
testb
bound
inc
adc
pushf
mov
dec
and
xchg
push
jle
jno
add
sbb
lea
jnp
dec
xchg
jne
add
stos
cmp
rol
pusha
push
mov
incl
cmp
and
cmp
jns
adc
aam
repz
aam
ret
pushf
outsl
shll
jmp
mov
jbe
mov
test
mov
sti
ret
shll
and
and
push
cmp
inc
pusha
outsb
cmp
push
mov
add
cmp
xor
mov
test
jecxz
outsb
test
and
shr
aam
jnp
dec
mov
adc
and
arpl
cmpl
das
out
cmp
adc
aas
sbb
pushl
xchg
stos
jo
inc
out
push
lea
int3
push
pop
stc
mov
mov
leave
mov
bound
mov
popa
scas
mov
mov
sub
pop
pop
shrl
arpl
movsb
and
movsl
sbb
cltd
mov
popa
pop
push
popf
ljmp
and
push
call
dec
inc
or
andb
mov
push
fcompl
dec
pop
sub
clc
mov
mov
cmpsb
push
push
add
add
dec
mov
xor
sbb
mov
inc
mov
js
int
push
divb
test
xchg
mov
add
iret
loop
pop
movsb
pop
mov
sub
movl
dec
inc
mov
pop
xchg
sub
pop
cli
repnz
add
scas
ds
jcxz
clc
daa
fs
and
aaa
xor
add
pop
ret
int3
cmp
jo,pt
push
pushf
sahf
insb
icebp
push
and
std
pop
ss
jbe
int3
jne
or
mov
aas
lock
inc
mov
ja
cmpsl
pop
outsl
cld
xlat
test
xchg
xlat
test
adc
push
outsb
adc
mov
lret
arpl
fwait
jmp
push
or
jmp
data16
sub
dec
call
push
pop
inc
out
sub
sub
mov
pop
sub
loope
push
movsb
pop
sbb
stc
testl
xor
pushf
scas
ret
dec
dec
out
sub
lret
jg
jle
jne
fs
cli
push
mov
and
adc
aaa
out
mov
int
sbb
ficoms
jb
fstpt
push
gs
out
mov
jbe
sub
mov
fidivl
dec
dec
notl
shrl
pop
in
dec
clc
push
push
and
aaa
xor
ret
cltd
lcall
push
mov
xchg
arpl
aaa
movsl
mov
lds
push
rorl
inc
mov
pop
fimuls
cmp
jmp
inc
xchg
cmp
outsl
sub
sub
sub
xor
in
fs
push
inc
jp
add
clc
xor
and
js
pop
inc
sbb
aad
jl
xchg
pusha
leave
fcomi
adc
stos
mov
pop
iret
pop
mov
dec
push
dec
bound
dec
and
out
and
add
pop
mov
js
test
int3
xchg
pop
jne
cmpsl
push
dec
sbb
in
mov
inc
jl
arpl
jge
sbb
lcall
pop
pop
and
inc
data16
orb
mov
xor
push
mov
push
mov
sub
dec
in
mov
sub
cmp
test
ljmp
mov
shlb
mov
jns
mov
jmp
incb
dec
fstl
sarb
fsubl
bound
pop
adc
add
sbb
in
or
jmp
test
aad
incl
das
pushf
pop
call
out
ss
inc
test
inc
dec
lcall
jnp
push
test
js
jne,pn
adc
js
incl
xlat
pop
jno
in
loopne
dec
notl
cmp
sbb
cltd
pop
and
inc
mov
clc
lock
in
jb
push
cmc
outsb
loope
das
cmp
cmp
push
push
shr
push
enter
fists
je
movsb
test
nop
movsl
sahf
loopne
pop
movsb
push
sti
mov
inc
inc
pushf
mov
pop
and
cmp
in
jge
sbb
enter
or
das
mov
popf
jnp
mov
inc
lods
sbb
push
les
pop
ud2
lcall
mov
push
rcll
mov
into
imul
push
push
dec
xor
das
shrl
jmp
mov
pop
mov
outsl
mov
adc
add
cmp
pop
sub
mov
pop
dec
mov
xchg
dec
add
stos
ds
ret
lahf
adc
lcall
int3
adc
test
lret
cmp
mov
sub
or
mov
push
mov
outsb
incb
and
adc
int3
mov
push
pop
pop
xchg
mov
xchg
push
lods
push
adc
mov
mov
out
xchg
jno
js
lods
adc
lock
inc
sbb
rclb
bound
sub
popl
loopne
fs
sub
xchg
mov
pop
test
mov
in
adc
add
jge
jge
and
pop
jp
in
push
scas
lcall
pop
cld
andb
xor
and
cmpl
sub
dec
pop
xor
adc
push
lods
and
and
push
pop
test
inc
clc
or
test
xchg
add
data16
idivl
rcll
fildll
ret
push
enter
adc
das
inc
push
mov
fcomp
les
jb
push
adc
pushf
pop
adc
inc
sbb
push
cmp
mov
sti
push
cmc
add
rorb
ljmp
sbb
add
stos
out
ljmp
add
outsl
pop
sub
dec
test
pushf
mov
cmp
aad
mov
push
jmp
mov
xchg
mov
loope
add
fs
jne
pop
stos
cltd
xlat
sbbb
leave
sbb
cmp
mov
bound
movsb
mov
sub
aam
mov
cmp
mov
out
sub
imul
or
imul
outsl
inc
cmp
pop
in
stos
les
jbe
in
sahf
test
addr16
les
push
daa
int3
mov
mov
call
js
dec
xor
pop
lods
and
pop
clc
add
test
leave
xor
mov
ljmp
mov
jecxz
sub
and
add
loopne
lock
mov
add
push
fisttpll
fs
daa
cmpsl
bnd
push
xor
sub
pop
add
ret
jo
mov
push
jecxz
xor
or
out
test
and
ja
mov
sbb
xor
sub
xchg
cmp
push
pop
fidivl
pop
shrb
sbb
xlat
std
nop
sbb
adc
cmp
lea
in
ja
sub
jl
jmp
xchg
jmp
lock
xor
loop
shll
andl
into
or
xchg
scas
decl
divb
nop
adc
mov
pop
test
mov
leave
test
sbb
sub
pop
clc
fs
inc
sub
mov
jne
mov
jle
cmpsl
push
jb
adc
jno
sub
pop
fstpl
mov
inc
adc
xchg
or
pop
call
hlt
dec
rol
jl
inc
dec
int3
jmp
adc
and
and
pop
mov
shlb
adc
cld
push
pop
ds
push
and
mov
sahf
adc
mov
je
adc
inc
or
cmp
or
add
add
stos
movsl
dec
push
mov
sbb
fs
stos
popa
mov
mov
jl
out
sbb
imul
and
ljmp
mov
mov
ret
push
roll
xchg
or
jb
sub
inc
fwait
add
movsl
mov
negb
push
jae
cwtl
fnstcw
fcoms
pop
loopne
in
pop
and
jle
into
sbbl
cli
gs
mov
cld
testb
push
xchg
sbb
and
pop
cwtl
dec
mov
pop
fldt
cwtl
push
repnz
sub
mov
dec
sahf
mov
int
outsb
mov
test
xor
sub
rcrl
adc
ljmp
add
jmp
jle
dec
gs
adc
mov
sub
lds
and
stos
jmp
cmp
mov
inc
xor
ljmp
ret
les
add
clc
inc
push
xor
fs
sbb
xchg
cmp
push
pop
js
out
fimuls
test
and
mov
in
lods
mov
xchg
inc
clc
lret
sbb
pop
inc
push
popf
adc
dec
xor
xlat
adc
sub
out
and
cs
movsb
cmp
sub
icebp
lahf
xor
out
add
aas
rorl
pop
push
pop
sub
inc
cmpsl
sti
mov
inc
mov
push
inc
rclb
stos
jnp
test
movsb
data16
shl
mov
jnp
sbb
sub
aad
sub
mov
sbb
add
out
mov
loope
ror
sti
dec
nop
xlat
mov
or
test
das
mov
sub
shrl
daa
mov
idivb
cs
adc
cmp
adc
adc
sub
add
inc
loope
orb
mov
sub
mov
pop
sub
popa
gs
jge
jg
mov
push
insl
sbb
dec
mov
lods
cmp
iret
cmp
sub
xor
mov
inc
rolb
cmpsb
push
enter
insb
pop
into
push
mov
mov
aaa
cmpb
sub
shl
push
pop
cmc
add
xor
jp
or
mov
or
sbb
mov
sti
test
xorl
cmp
test
or
push
ljmp
adc
inc
lods
rcr
std
pop
lret
cli
mov
test
jle
js
stos
and
clc
loopne
xchg
add
rolb
es
sbb
outsb
hlt
cltd
imul
push
ljmp
fwait
dec
js
pop
cld
sub
test
fs
in
jecxz
loop
mov
lcall
and
incl
and
in
test
in
xchg
ds
inc
loopne
outsb
adc
inc
or
sub
push
aad
ljmp
fs
dec
aam
cmp
mov
add
xchg
dec
or
sbb
mov
sub
ficompl
enter
mov
cmp
in
cwtl
and
imul
arpl
add
mov
sbb
dec
jle
push
jnp
and
mov
enter
outsb
push
mov
cmp
xchg
push
stos
sbb
xchg
push
cmp
push
inc
pop
lcall
in
inc
fcomps
adc
notb
mov
das
sarb
sub
cmc
adc
test
rorb
xor
xchg
mov
xlat
adc
loop
sti
xchg
loopne
jp
cmp
sub
insb
mov
mov
cld
punpcklwd
pop
scas
mov
adc
pop
xor
mov
adc
cmpsb
xchg
in
or
push
xchg
movsb
lret
jle
mov
xchg
cmp
push
out
loope
xchg
or
loope
jbe
mov
clc
int3
mov
cmpsb
dec
inc
mov
in
mov
xadd
mov
push
gs
lods
mov
arpl
cmc
fcomps
pop
inc
scas
addr16
ret
jae
inc
les
mov
js
mov
icebp
and
push
push
dec
in
hlt
sti
testl
sub
je
mov
mov
dec
scas
xor
enter
mov
filds
mov
pop
pop
outsl
pop
test
sbb
pop
mov
stos
nop
sbbb
aam
pusha
bound
and
inc
push
xor
mov
and
xchg
ficomps
jo
jae
adc
or
jnp
mov
xor
adc
jmp
jno
imul
push
add
divl
xchg
daa
mov
mov
fs
cmp
xlat
add
ds
in
not
call
pop
mov
sub
adc
push
fildll
sbb
mov
repz
mov
or
inc
adc
xor
es
scas
jl
clc
sbb
daa
mov
push
ror
or
mov
xlat
call
lods
xchg
mov
dec
lods
outsb
pop
cmp
addb
add
mov
enter
adc
insl
mov
loopne
test
ret
push
and
adc
inc
fdivrl
je
stos
dec
subl
mov
pop
xor
dec
rdmsr
insl
push
fnsave
or
jmp
test
push
fmul
add
push
loope
int3
mov
push
jo
push
stos
push
xor
outsb
sbb
mov
mov
stos
ret
repnz
mov
inc
xchg
rcrb
sub
decl
or
nop
fsts
or
jnp
je
fistl
rolb
or
lds
push
and
jle
clc
or
cld
add
inc
sub
hlt
aaa
add
cmpsl
and
enter
xchg
icebp
xchg
sub
sub
aam
jl
sbb
cld
scas
cli
inc
cld
mov
das
add
fs
cli
push
sti
add
or
push
mov
sti
ds
shr
mov
pop
repnz
add
mov
inc
lret
jno
in
inc
mov
xor
fsubr
lods
mov
and
bound
bts
lea
add
frstor
mov
mov
fwait
lock
out
push
ret
adc
adc
cli
push
mov
rol
dec
rcl
adc
mov
mov
mov
rol
test
hlt
js
fwait
shrb
inc
sar
int3
rcrb
arpl
push
mov
cmpsl
xor
cld
dec
sbb
xchg
xor
push
imul
clc
mov
push
lea
cld
jo
aas
pop
sbb
nop
sbb
sbb
push
pusha
and
adc
add
mov
sarb
sbb
in
xorl
out
xor
add
or
and
jno
cli
scas
push
and
mov
out
dec
fs
inc
shlb
fnstenv
cmc
push
mov
leave
dec
sbb
push
mov
pop
je
icebp
addr16
push
data16
xchg
adc
lock
cld
cmp
fdivl
inc
xchg
sahf
sub
add
loop
mov
test
clc
mov
decl
fdiv
jp
xchg
cld
fs
push
cmp
inc
es
adc
scas
xor
in
adc
cld
jno
aas
nop
jle
push
arpl
adc
or
mov
enter
mov
mov
arpl
or
adc
loope
xchg
lods
add
add
sub
mov
pop
jns
xchg
push
imul
sbb
mov
lret
cmc
sub
inc
and
jmp
test
pop
pusha
andb
mov
adc
mov
in
inc
leave
shrb
jecxz
and
mov
xchg
enter
daa
inc
sti
sub
inc
xor
sub
jecxz
popa
inc
adc
imul
jb
xchg
jno
inc
push
aam
and
sbb
stos
fwait
test
sarl
mov
testb
pop
mov
ret
xor
pop
lcall
and
or
xchg
sar
xchg
iret
and
xchg
xchg
rolb
pop
sbb
or
iret
jecxz
cmp
cmovp
cld
ss
push
pop
ror
push
mov
mov
outsl
je
cli
into
inc
mov
jle
orb
scas
or
imul
out
lret
xor
inc
adc
outsl
push
push
int
adc
or
test
rep
outsb
popa
xor
or
jne
outsl
lock
pop
out
iret
xor
addr16
mov
popf
fsubr
mov
loopne
popa
clc
cld
jae
icebp
aas
add
and
nop
add
mov
stos
ds
mov
aas
pop
pop
jo
mov
cmp
sub
lods
mov
push
aad
dec
fcomi
pusha
daa
sub
jp
mov
inc
insb
mov
xor
inc
xor
adc
dec
xchg
adc
or
and
inc
adc
aam
mov
imul
add
xchg
push
jp
icebp
mov
xor
xor
adc
sub
subb
lods
xchg
jo
pop
movsl
push
adc
nop
sub
std
xchg
test
and
lcall
inc
fbstp
mov
pop
mov
jae
movsb
int
addr16
sub
mov
scas
in
pop
iret
xchg
xchg
out
andl
daa
jl
movsb
lods
test
popf
add
push
jb
clc
inc
mov
mov
cmpsb
jle
and
test
cwtl
pop
mov
adcb
adc
out
or
jp
mov
in
movsl
jecxz
fidivl
ret
es
mov
loop
cwtl
sub
scas
js
jo
scas
fwait
mov
push
dec
sarb
cwtl
mov
adc
movb
sub
pop
loope
push
int
iret
mov
lods
add
xor
fcomip
add
scas
js
sbb
shlb
lcall
sbb
sub
outsl
sbb
mov
bound
adc
mov
shr
lea
int3
lahf
test
or
movsl
int
sbb
lods
xchg
pop
jl
mov
mov
and
cli
jo
stos
jge
scas
cmpsb
hlt
cwtl
sbb
pushl
lret
adc
add
clc
insl
jecxz
dec
sub
pop
mov
mov
and
push
dec
mov
sub
sbb
push
xor
cmpsl
ds
out
test
sub
mov
orb
add
lods
popa
sub
fidivrl
adcb
pop
mov
adc
icebp
adc
stos
mov
push
inc
cmp
jno
push
jno
ljmp
adc
fbstp
pop
mov
add
mov
rep
cmp
loope
mov
pushl
jl
subl
sarb
js
pop
mov
xchg
pop
sub
sbb
jp
pop
add
pop
aaa
cwtl
adc
lods
movsb
aad
bound
cmp
loope
sbb
int
jmp
push
xor
rorl
into
mov
cld
iret
mov
out
fisubrl
sbb
movb
pop
sub
sbbb
hlt
adcb
xchg
cmp
or
ja
js
mov
pop
std
xchg
cmp
je
fisubrs
lahf
aam
test
pushf
sahf
xor
or
in
mov
mov
lock
mov
stos
fnstcw
roll
test
bound
inc
ret
inc
lea
mov
les
inc
cmpsb
icebp
inc
movaps
jp
sbb
or
jo
push
jno
clc
adc
pop
mov
test
mov
lahf
adcb
sbb
std
leave
sbb
sbb
test
pop
or
dec
cli
fisttps
jle
xchg
ficompl
pop
outsl
fs
repz
enter
inc
mov
neg
fsubrs
dec
push
sub
inc
and
add
mov
loope
xlat
and
data16
jp
scas
mov
cltd
xor
jl
cmpsl
mov
mov
pushf
sbb
jle
jae
pop
dec
sahf
pop
sbb
pushf
pop
or
add
sub
inc
andb
mov
mov
ret
sahf
cmpb
in
icebp
dec
push
fcoml
xorb
flds
mov
cli
jmp
or
add
inc
in
add
inc
daa
jo
and
fisubrs
cs
outsb
sub
and
ret
inc
int
incl
ljmp
xor
lods
fucomip
popa
push
mov
imulb
mov
inc
xchg
pop
inc
push
rcll
test
inc
pop
xchg
lahf
lea
sbb
stc
inc
cmp
scas
jle
in
ret
call
xor
add
xor
add
ret
xor
mov
push
lods
xor
sbb
sub
imul
jl
sbb
inc
ret
and
daa
jo
jecxz
imull
sarb
push
sbb
push
arpl
jl
inc
jecxz
pop
sbb
sbb
dec
enter
xor
sbb
cmp
cmp
push
sarb
loope
mov
aas
js
push
adc
lock
xchg
loopne
mov
fistpll
ret
sbb
sub
push
push
ljmp
push
pusha
mov
sub
dec
orb
pop
and
mov
mov
cltd
pop
sbb
jp
inc
xor
xor
xchg
out
add
rcrb
add
in
insl
add
cmc
aad
xchg
pop
sbb
xor
cli
add
dec
insl
gs
cld
xor
xchg
sub
jle
jecxz
shrb
cmp
sub
mov
mov
or
adc
mov
push
and
pop
pop
xor
loopne
xchg
rcrl
mov
into
mov
and
cmp
add
and
imul
xchg
jae
mov
inc
sbb
nop
jnp
dec
imul
or
fsub
push
scas
pop
pop
cli
es
cmp
lock
icebp
lcall
test
sbb
mov
movsl
mov
dec
dec
or
into
int
popa
std
incb
xor
cli
hlt
sub
dec
mov
mov
xor
mov
jno
xchg
pop
lea
mov
hlt
sub
mov
cmp
imul
lahf
cmp
cmpsl
bswap
ljmp
lock
xchg
cltd
push
push
pop
int
cld
jo
jnp
pushf
rcrb
dec
mov
stc
mov
popf
icebp
shrb
cmp
add
jge
or
das
insb
inc
ficompl
add
clc
cmp
push
xor
mov
psubb
pop
out
sbb
shl
cmp
sbb
repnz
pop
mov
mov
pop
mov
insb
call
cs
iret
int3
cmpsl
mov
sbb
and
and
movsl
pop
call
fildll
rol
xchg
cmp
popa
pop
jl
sbb
pop
popa
or
lods
test
or
cmc
jb
sbb
xchg
or
lahf
jne
bound
push
mov
mov
gs
pushf
inc
je
pop
dec
mov
outsb
jnp
mov
xchg
push
ret
cmp
test
dec
pop
rclb
rol
pop
pcmpeqb
das
das
xchg
cmp
mov
leave
lock
sub
fcomps
mov
xor
adc
insl
push
adc
or
sahf
xchg
inc
push
mov
aam
cltd
loop
fsubl
dec
xor
shll
jns
lock
dec
insl
fldenv
sbb
cmpsb
das
hlt
jmp
and
push
add
sbb
jle
and
pop
xchg
pop
push
dec
enter
mov
jg
out
cmp
frstor
scas
sbb
pop
push
dec
cmp
inc
loopne
xor
pop
fdiv
mov
adc
iret
cmp
fcoms
dec
rol
adc
outsl
push
push
scas
pop
pop
ss
rcr
or
mov
ljmp
mov
pop
in
leave
and
fistl
dec
cli
cmp
rcrb
or
adc
jmp
inc
mov
pop
mov
rorl
out
arpl
inc
testb
lods
pop
cli
imul
or
push
cs
or
test
out
outsb
pop
fsts
test
ror
mov
xor
rorb
dec
cmp
pop
add
loope
inc
add
loop
and
cmp
jbe
pop
test
outsb
and
scas
sti
adc
rorl
jmp
jmp
xor
cmp
shll
and
jl
lret
add
loop
mov
sbb
pop
sub
aaa
cmpl
xchg
hlt
sbb
mov
decb
mov
jle
or
repnz
outsb
mov
mov
inc
push
jb
insl
and
pushf
pop
cs
adc
ret
rcrb
addb
cmp
sub
je
sub
jge
lret
xor
adc
stos
sbb
adc
jo
xchg
add
sahf
cmp
pop
mov
mov
jo
jg
kandb
fcos
in
enter
cmc
call
xchg
or
sbb
xchg
inc
ficoml
adc
add
xchg
movb
fcoml
pusha
pop
add
mov
jae
and
mov
mov
jns
pop
mov
pop
mov
jo
call
pop
xchg
mov
repz
jp
pop
jno
xchg
js
adc
mov
add
push
jnp
imul
sbb
sbb
jbe,pt
mov
shll
arpl
push
and
sbb
push
cmp
insl
pop
rcll
jb
ret
pop
sbb
rorl
mov
or
mov
imul
cmp
rorb
dec
cli
dec
xchg
xor
sbb
jnp
fs
adcb
lock
push
push
test
aad
in
or
mov
inc
xor
mov
movsb
add
jmp
xor
jge
dec
jl
ret
pop
cltd
add
sbb
call
xlat
enter
xor
xor
inc
xor
sbb
lcall
nop
add
pop
test
xchg
js
lds
mov
addr16
xchg
out
test
cs
fwait
mov
mov
xchg
repnz
nop
jg
cld
movsl
or
sbb
mov
push
mov
stos
pop
inc
sbb
repnz
addr16
imul
sub
icebp
fidivrl
fnsave
pop
inc
icebp
rolb
data16
stos
lods
and
add
jecxz
inc
inc
push
ret
pop
int3
mov
enter
std
adc
stos
sbb
enter
mov
xchg
and
adc
sub
mov
xor
push
mov
dec
and
aaa
cmpsb
lret
jle
inc
dec
insb
inc
ljmp
loopne
call
pop
repnz
andl
insb
dec
aad
loope
jle
or
jp
xor
mov
mov
dec
lea
repz
xchg
add
in
pop
imul
lods
sbbl
dec
mov
mov
mov
cmp
mov
sahf
xor
inc
mov
adc
orl
inc
stos
push
data16
shlb
in
mov
add
inc
cltd
push
pop
je
lds
insl
ljmp
jecxz
fisttpl
sti
mov
xchg
test
loop
pop
test
loope
mov
repz
pushf
or
dec
leave
dec
cwtl
mov
xchg
repnz
jp
push
pop
pop
mov
rorl
add
scas
or
add
fcoms
andb
ret
pop
ss
or
outsb
jne
rclb
andb
adc
or
dec
cmp
daa
pop
xor
dec
das
or
stc
fstpl
stos
sbb
pop
into
pop
add
inc
daa
dec
add
shll
jmp
mov
pop
das
fsubrs
mov
test
jge
imul
mov
push
and
push
dec
xchg
pop
repnz
pop
mov
pop
dec
outsb
or
sbb
jle
cld
or
and
scas
add
in
addr16
inc
sbb
xchg
dec
stos
stos
xor
data16
pop
test
fldcw
mov
fsub
sub
adc
hlt
icebp
mov
or
pop
pop
insb
loop
pop
mov
sbb
adc
out
int3
dec
aad
daa
sti
cmpsb
mov
mov
cmp
andl
mov
inc
cmovp
fmuls
pop
loopne
inc
or
loop
lahf
jo
cltd
mov
lods
aam
push
xchg
subb
sbbb
loope
in
mov
cmp
inc
adc
pushf
test
int3
into
inc
outsl
loop
jno
mov
push
psrlw
iret
repz
cmpsl
mov
jnp
jne
in
test
lret
stos
sub
mov
nop
test
mov
shlb
or
push
add
sub
add
add
pop
push
and
xor
ja
mov
push
inc
cmpxchg
cmpsb
pmaddwd
in
mov
scas
lea
addl
xchg
leave
mov
add
mov
shlb
sar
mov
testb
aad
pop
add
mov
pop
imul
push
sbb
mov
inc
jnp
sbb
xchg
fxsave
aam
add
xor
pop
push
pop
loopne
mov
cltd
push
dec
aam
mov
sbb
ds
out
xchg
hlt
push
and
mov
jbe
sub
in
sub
xchg
ljmp
in
subl
bound
sub
icebp
call
into
and
jge
scas
push
jo
das
or
push
cmp
divl
jae
jp
in
test
iret
push
scas
mov
inc
fadds
out
push
sbb
ds
lds
mov
jl
aaa
mov
jbe
mov
or
pop
add
and
add
ja
shr
arpl
movsb
cmp
mov
inc
scas
movsb
fistl
add
out
cmp
stc
inc
lock
sub
xorb
mov
jns
ret
test
and
dec
adc
push
jo
pushf
push
scas
psllq
js
cs
jmp
xor
cmc
int3
test
sub
aas
mov
into
js
cmp
cli
insb
rclb
sti
sbb
pop
adc
stc
dec
lcall
icebp
test
mov
sub
mov
or
int
out
loop
outsl
fsubl
mull
mov
cmp
mov
das
sbb
icebp
ljmp
cmp
out
imul
xorl
outsl
rcll
add
fidivs
pop
adc
in
pop
lcall
push
imul
or
inc
inc
mov
cmpsb
ljmp
mov
inc
dec
ss
cld
pop
mov
daa
fisubrs
dec
rol
and
or
dec
add
jne
repz
push
std
pop
fists
data16
xor
mov
jg
bound
lods
out
lea
pushl
mov
lods
adc
and
cmp
aad
stos
cmpsl
push
push
xchg
add
lret
lods
repnz
cli
mov
stos
daa
popf
aaa
xor
or
sahf
ljmp
mov
adc
fidivrs
rolb
fs
push
or
insb
popf
fidivrl
pop
cwtl
push
mov
sbb
ror
decl
mov
repnz
and
mov
cmp
mov
in
mov
icebp
and
clc
fcmovu
add
mov
mov
add
scas
movsl
nop
sbb
jge
or
cmp
iret
jg
mov
xchg
cld
lahf
or
inc
adc
mov
mov
enter
add
pop
dec
fdivrs
xor
repz
dec
js
push
jnp
loopne
out
mov
mov
pop
pop
shlb
aam
adc
and
mov
add
sahf
push
xor
repz
add
out
jge
push
lcall
pop
xchg
inc
sbb
pop
aas
shufps
pmaxsw
push
ret
outsb
pusha
or
lock
or
pop
scas
inc
loope
fnstcw
pop
xchg
mov
add
xchg
fcoms
push
push
out
fs
jmp
mov
test
pop
aam
das
aas
loop
mov
dec
mov
cmp
add
faddl
xchg
cli
jecxz
stc
jle
sbb
xlat
bound
in
xlat
ret
xlat
cltd
mov
push
loope
data16
aas
jb
cmp
push
scas
hlt
out
adcb
stos
js
jne
gs
sbb
cmp
in
stos
sub
adc
insb
cmp
scas
lret
decb
bound
mov
inc
mov
fwait
mov
mov
mov
pop
ss
adc
pop
fiadds
pop
ss
inc
push
cmp
outsl
pop
scas
jp
fwait
mov
inc
xor
pop
orb
pop
hlt
jmp
jecxz
add
jne
mov
push
mov
fisubrl
mov
lahf
xor
hlt
ret
xchg
imul
jp
adcl
fcmovb
cs
adc
xchg
movsb
mov
mov
hlt
ljmp
xor
mov
scas
sahf
cli
in
jl
out
hlt
cmpsl
jno
push
repz
xchg
lods
jb
sub
dec
jp
les
inc
rcrb
lds
cwtl
mov
adc
ret
push
outsl
icebp
call
push
and
jecxz
incl
sub
push
jg
or
cmp
fcmove
bound
inc
pop
mov
test
aas
std
enter
mov
test
inc
push
cmp
mov
add
fnstsw
stos
mov
dec
std
push
sub
push
push
mov
sub
or
xchg
mov
mov
or
daa
mov
mov
scas
out
inc
lcall
xchg
ljmp
cmc
pop
pusha
dec
pop
push
inc
loopne
repz
jp
add
call
or
mov
aam
arpl
xlat
sbb
sbb
js
movsl
sbb
and
xchg
test
or
cmp
mov
mov
pop
cld
and
testl
jns
add
jne
mov
jmp
mov
int
mov
fildll
data16
xor
shrb
loop
add
shrl
scas
push
lock
mov
mov
add
ss
int3
ljmp
loopne
and
fbld
inc
add
shrb
sub
cmc
lcall
ret
mov
xchg
or
mov
dec
push
mov
aaa
popf
dec
ret
and
insb
cmp
loope
or
mov
nop
aam
popf
insl
xchg
mov
xchg
clc
scas
mov
cs
lret
dec
pop
sbb
sbb
ret
test
lods
loopne
fcoms
jmp
and
mov
bound
xorb
and
addr16
out
jmp
sbb
gs
mov
dec
mov
lods
jl
ds
xchg
sub
mov
test
push
xor
andl
xor
dec
dec
lock
push
es
xchg
push
dec
iret
jne
repz
xlat
fs
fldcw
adcb
sub
jg
xchg
repnz
lock
mov
push
out
shrl
push
imul
mov
sbb
shlb
ret
mov
popa
cli
popf
shl
movsl
xor
icebp
es
nop
xchg
test
jmp
dec
adc
mov
push
shll
mov
and
and
outsb
sub
div
xor
stos
inc
sbb
dec
int
xchg
jmp
lea
ret
mov
outsl
cmp
fidivrs
test
mov
mov
inc
ss
cmp
arpl
push
loop,pn
pop
pop
pop
and
add
mov
dec
and
test
xchg
shlb
call
test
aad
add
cmp
frstor
test
lods
movsb
xchg
xchg
xor
xchg
testb
adc
subl
or
insl
ret
dec
pop
ret
mov
lds
addr16
pop
xor
jno
or
add
js
jmp
out
fstpl
pusha
lret
subb
cmp
cmp
hlt
subl
lock
and
adc
dec
adc
mov
icebp
xor
pop
icebp
out
aas
inc
shll
ror
es
lds
sub
dec
inc
jg
inc
test
push
mov
and
dec
push
lahf
es
push
bound
jg
mov
decb
mov
mov
mov
lock
call
dec
jbe
stos
pop
jmp
pop
xchg
or
rorb
stos
js
add
xor
jo
imul
adc
loop
dec
jge
add
or
pop
mov
add
sahf
xchg
cmp
jp
stc
xor
adcl
mov
push
add
out
fxch
add
xchg
add
add
inc
movsb
jle
xchg
repnz
rcl
insl
aaa
mov
std
lcall
pop
cmp
mov
imul
pop
pop
add
sbb
sub
mov
aas
mov
adc
loopne
popa
movsl
pusha
mov
push
pop
lock
mov
aaa
fxch
loopne
stos
data16
or
pop
hlt
loope
and
mov
add
movsb
jne
pop
cmp
popf
sbb
pop
pop
jge
jae
cli
mov
xchg
les
cmpsb
enter
inc
jg
dec
es
imul
mov
pop
push
dec
movsb
or
push
sbb
pop
push
or
push
shrl
rorb
push
fdivs
loopne
mov
or
or
sbb
lahf
jl
call
stos
add
sar
xchg
rorl
push
loope
cmp
add
sub
xchg
in
sbbb
jge
and
inc
or
lret
cli
push
cmp
dec
gs
and
bound
sub
adc
ljmp
mov
mov
adc
or
int3
icebp
cmp
adc
add
ret
xchg
add
cwtl
sti
out
xor
out
insb
cmpsl
dec
inc
jle
loopne
push
xor
movsb
add
lds
xchg
and
xchg
dec
jmp
ss
cmc
shr
cmc
test
add
bound
scas
and
je
repnz
adc
dec
sbb
shlb
or
dec
push
sti
and
push
sbb
mov
ret
lahf
and
rcl
adc
inc
and
lods
dec
inc
in
fwait
adc
jg
jecxz
insl
sbbl
fmull
je
inc
in
mov
aam
mov
sbb
outsl
adc
repnz
cld
rcl
fimuls
and
sub
xchg
loopne
push
xchg
sub
cmp
sub
rol
mov
lea
inc
stos
lods
push
xchg
pop
cmp
jg
fs
pop
xchg
push
sub
or
and
iret
call
clc
push
fdivrl
outsb
adc
jp
mov
pop
push
inc
push
dec
pop
mov
push
pop
lock
sbb
sbb
pop
test
ds
sub
xchg
repnz
shr
jl
jne
scas
data16
stos
ret
push
sbb
pop
shlb
popf
sub
push
push
push
loope
pop
mov
mov
pop
adc
push
aam
mov
lea
add
lock
repnz
lcall
in
into
xchg
incb
gs
test
arpl
sbb
in
jp
push
popa
icebp
cs
lsl
icebp
adc
hlt
push
fsubl
dec
mov
enter
add
stos
hlt
add
cmp
adc
lods
inc
push
push
pop
fwait
inc
or
int
cmp
push
push
push
loopne
mov
jne
sbb
aad
ljmp
rcll
or
hlt
dec
jp
pop
pop
loop
and
jle
xorb
rclb
push
js
dec
sbb
loope
test
in
stos
les
push
and
mov
insb
lods
insb
scas
fcmovbe
jmp
movsl
fwait
mov
shl
movsl
inc
push
jmp
sbb
mov
les
into
push
or
or
xchg
in
insl
or
call
mov
fadds
xchg
sbb
test
movsb
mov
xchg
sub
or
or
rolb
pop
movsb
jp
fimull
inc
inc
sarb
mulb
enter
inc
adc
mov
popf
sbb
and
pop
jbe
dec
mov
mov
sysret
divb
jbe
bound
jne
es
outsb
mov
or
adc
cs
mov
incb
adc
jmp
repnz
inc
or
ret
lret
int
cmc
sub
fs
jg
sbb
icebp
xlat
mov
jae
adc
cli
xor
inc
pop
dec
lss
fiaddl
xchg
cli
pop
inc
scas
je
imul
xor
dec
adc
push
mov
jp
lcall
jnp
ljmp
adcb
jns
adc
icebp
scas
xchg
sbb
mov
jmp
cmpl
call
imul
cs
aaa
ljmp
add
addr16
mov
jbe
push
ret
stos
andb
mov
sub
aam
cwtl
fsubrs
dec
outsl
popl
jb
nop
xchg
dec
inc
adcb
emms
dec
clc
in
sbb
sbb
hlt
popl
clc
hlt
repz
inc
or
mov
loope
jae
pushf
push
loope
inc
test
add
add
push
jno
inc
pop
and
call
adc
dec
loope
push
jg
pop
cmp
and
ffreep
loope
mov
leave
rcrl
test
pusha
fwait
jo
icebp
loop
loop
sbb
repnz
adc
loopne
jne
mov
sbb
mov
pop
rorl
dec
ret
jle
pop
push
mov
rcr
mov
mov
leave
mov
pop
inc
addl
cmpsl
pop
hlt
mov
daa
xor
pop
aas
ror
sti
loop
mov
inc
xchg
lds
adc
shlb
xchg
dec
jne
lds
lcall
or
das
cmpsl
or
xchg
pop
mov
dec
lds
push
fbstp
cmpsl
mov
subb
push
int3
dec
mov
mov
push
fsubrs
jl
mov
or
mov
daa
adc
jne
mov
jo
ret
jnp
sbb
jmp
nop
cli
out
mov
pusha
scas
push
aaa
sbb
jge
call
push
icebp
mov
mov
mov
jge
fs
int3
int3
clc
cmc
xor
cwtl
out
mov
icebp
push
mov
pop
inc
sbb
add
xlat
jp
mov
add
add
ret
gs
or
adc
nop
cmp
aam
cmp
lret
and
xchg
cltd
cmp
mov
outsl
sub
mov
icebp
jnp
add
loope
ret
xlat
adc
and
push
aaa
cmp
rol
cs
cwtl
in
addb
xor
mov
inc
insl
aaa
shll
fidivrl
in
jb
pushf
fimuls
mov
or
adc
rcrb
mov
mov
xchg
sarb
insb
or
sahf
cld
add
sub
sub
cmpb
add
pop
mov
and
dec
pusha
insl
lods
pop
mov
nop
bound
mov
push
jmp
cmpsb
iret
rcrb
decb
push
push
fists
shl
adcb
fs
lock
lahf
dec
inc
pop
shlb
and
mov
and
jno
ljmp
xlat
mov
cmp
rcr
jmp
push
dec
je
pop
jecxz
mov
pusha
popa
or
push
add
data16
push
add
cmp
out
mov
into
xor
xor
pop
hlt
dec
sub
adc
dec
pop
mov
das
fbstp
inc
js
inc
add
xor
pop
jle
notb
movsb
add
popl
pop
shl
iret
xlat
jecxz
rclb
sbb
ja
hlt
call
adc
rolb
jne
xor
test
xchg
jbe
cltd
adc
push
in
and
arpl
jo
fmull
cmpsl
sbb
mov
xchg
push
test
mov
xchg
adc
push
jb
jb
loop
in
pop
js
xchg
cli
push
lock
sbb
lcall
negl
sub
push
loopne
sbb
xor
dec
inc
fidivrl
adc
lahf
aam
bound
gs
cmp
push
cmp
fs
sub
sub
mov
cmp
and
xchg
arpl
movsb
cmp
clc
xchg
cmc
aad
jp
xor
popa
push
jnp
mov
mov
xor
popf
out
decb
pop
shrb
mov
push
jb
mov
add
cmpsb
lock
hlt
adc
xchg
sub
dec
push
lcall
sarb
mov
dec
xchg
jg
mov
mov
loope
adc
pop
jle
aad
or
jl
cwtl
xor
aas
insb
jb
scas
das
mov
test
loop
sbbb
jb
jne
stos
inc
pop
daa
loop
push
nop
nop
push
lret
lods
lock
push
mov
push
mov
jg
loope
andl
ja
adc
cli
sub
push
sahf
xor
in
mov
mov
lret
sub
iret
or
xchg
decl
cmp
in
and
inc
jo
call
add
pop
ss
lcall
adc
ror
cmc
out
dec
xor
shr
mov
mov
ljmp
cmc
adc
cmp
dec
mov
mov
and
mov
and
aam
or
dec
out
lret
mov
loopne
data16
das
sahf
push
xchg
adc
loopne
push
cld
in
andb
loop
and
dec
fwait
stos
sub
aad
pop
mov
xchg
insb
or
incl
adc
int3
aaa
stos
fmull
and
mov
push
mov
add
mov
add
cmp
sbb
stos
push
cltd
add
mov
push
sub
icebp
mov
push
inc
nop
adc
jle
adc
mov
xchg
xchg
out
adc
push
mov
pusha
xchg
int3
and
push
lock
inc
pop
popf
jbe
movsb
popf
data16
mov
mov
into
and
mov
fidivrl
cmpsl
sub
push
fdivrs
push
jge
rorb
or
clc
push
cmp
xchg
mov
sub
addb
fiadds
dec
lret
xchg
xchg
mov
and
fnstenv
arpl
fnstcw
mov
mov
jmp
push
hlt
jmp
and
and
inc
cld
pop
add
stc
cltd
jp
sbb
aas
or
aaa
adc
inc
mov
dec
sub
jmp
or
cld
or
fildll
les
jle
js
ss
mov
jl
or
fadd
data16
mov
into
dec
std
jle
js
outsb
mov
add
adc
jbe
sub
dec
jp
in
mov
add
xor
mov
mov
adc
int3
and
das
subb
rcrl
mov
xchg
sti
jns
jmp
jmp
movsb
jle
add
incl
enter
lods
nop
scas
icebp
test
xchg
add
jle
arpl
fucomip
push
ret
sbb
andl
ret
mov
mov
or
je
jo
cmc
imul
stos
mov
mov
adc
repnz
aas
into
lret
lret
scas
push
mov
or
lahf
es
leave
rorl
imul
xchg
pusha
call
pop
idivb
mov
add
xchg
xlat
push
jle
sbb
mov
test
push
jnp
dec
push
lcall
lock
mov
mov
cmp
bswap
mov
pop
addb
jb
stos
inc
jns
test
je
mov
mov
xor
sbb
push
les
mov
fsts
push
je
sbbb
test
xchg
ss
out
mov
xor
add
push
rcr
dec
push
xchg
push
and
mov
and
je
adc
cs
mov
sub
shll
jmp
pop
stos
pop
xor
mov
adc
les
lcall
dec
push
nop
mov
and
or
mov
jae
jns
push
in
adc
jl
pop
inc
aaa
int3
insb
mov
cld
insl
lock
std
push
hlt
and
jne
jecxz
mov
bound
nop
pop
daa
jl
lcall
aad
dec
xor
xlat
push
je
dec
cmpsl
scas
or
inc
shrb
mov
cmpsb
jge
daa
orl
pop
mov
popf
mov
rcll
test
fsubr
fwait
pop
add
cltd
adc
test
mov
xchg
xlat
dec
mov
popf
sub
shrb
mov
mov
jae
sub
lock
inc
cmp
mov
mov
je
sbb
cmpsb
ret
addr16
jecxz
outsl
mov
xchg
movsb
stos
lea
xor
inc
sti
orl
pop
sbb
jp
pop
cmpl
int
xchg
push
mov
mov
and
sub
out
gs
mov
int
pop
adc
push
xchg
xor
dec
inc
mov
push
sbb
rcrl
movsl
ljmp
adc
ljmp
std
pop
cmp
sbb
dec
enter
xor
xchg
repz
clc
mov
aaa
xchg
in
mov
mov
add
movsl
or
or
xor
dec
adc
push
push
jl
mov
or
xchg
testb
dec
call
pop
add
jmp
cmpsb
mov
in
xor
xchg
lahf
out
ret
xchg
js
or
js
ret
dec
test
mov
jl
or
cmpsb
pop
mov
test
or
and
mov
add
push
inc
imul
orps
add
mov
pop
inc
out
and
or
xlat
cmp
icebp
outsb
fmuls
adc
sub
mov
mov
daa
add
loop
push
negl
std
jecxz
adc
stos
or
or
mov
pushl
pusha
jecxz
add
pop
xchg
mov
das
xor
cld
add
addr16
lret
shlb
xor
mov
fistpll
fdiv
loopne
add
ds
mov
fiaddl
loope
sub
dec
dec
mov
dec
push
add
mov
sbb
andb
gs
adc
pusha
dec
jb
adc
int3
lahf
or
lea
imul
mov
inc
mov
and
test
es
aaa
cmc
mov
sub
std
movb
dec
or
push
push
add
jo
out
jb
push
stos
adc
roll
fmull
test
insl
jmp
pop
loope
cli
addb
sub
ficompl
lcall
pop
fmuls
iret
cmp
pop
cmp
jge
bt
test
dec
cmpb
jmp
push
nop
push
cmp
sbb
jg
dec
dec
or
pop
jecxz
xchg
shrb
cmp
push
sub
je
inc
mov
mov
xchg
or
enter
insl
mov
stos
inc
push
mov
xchg
nop
mov
nop
mov
mov
shlb
inc
push
sbb
dec
cmc
cmp
pop
pusha
adcl
xor
imul
pop
addb
lahf
add
lea
mov
and
cli
push
adc
cmp
jb
cs
pop
shlb
jb
out
cld
ret
clc
sub
inc
mov
nop
or
jo
insl
jp
lret
xor
push
pop
insb
jecxz
pop
aam
jmp
jecxz
pop
lods
inc
js
mov
aad
lcall
mov
shrb
push
mov
or
mov
mov
push
cli
test
test
lret
aas
out
into
gs
add
inc
xchg
mov
add
fwait
jge
sub
jb
jl
icebp
mov
push
sarl
sub
mov
nop
mov
divps
sub
in
jle
fidivs
push
iret
loop
clc
and
or
outsl
pop
addr16
push
adcl
outsl
pop
bound
test
outsb
add
mov
xor
xlat
jle
sbb
mov
pushl
xchg
out
mov
cmp
pop
cmc
js
inc
add
pop
dec
mov
ds
push
add
js
xchg
cmp
mov
out
and
test
ror
mov
mov
or
subb
repnz
push
jge
mov
cltd
pop
sub
jg
je
loope
xchg
inc
mov
add
popa
cld
out
push
insb
fdivs
push
mov
inc
icebp
cmp
cmpsb
lret
sbb
sahf
mov
mov
jp
sub
jge
movsb
not
jecxz
dec
bound
push
js
pusha
lds
mov
rorl
xor
pushf
cmp
cltd
js
pop
sahf
sub
sbb
jne
jnp
sbb
cltd
cmp
je
cld
pop
scas
pop
jg
jmp
mov
rorb
pop
cmp
aaa
les
ds
xchg
fucomi
adc
push
scas
lret
and
cmp
ret
push
xor
loop
jb
fldl
aam
push
notl
push
jp
xor
adc
aam
xchg
fcmove
mov
subl
mov
dec
loop
push
cmp
push
mov
popf
push
insl
and
outsl
mov
cwtl
adc
aad
sti
adc
fstpl
or
popl
cmp
push
pop
mov
out
xor
add
pop
cmp
pop
inc
aad
dec
jecxz
lods
subl
add
jmp
cli
lock
iret
jge
push
cltd
xchg
or
mov
mov
data16
rclb
and
inc
ljmp
pop
push
sub
push
js,pt
xchg
sbb
adc
dec
adc
bound
cwtl
dec
xlat
lret
adc
inc
pop
stos
movsl
cmp
fisubs
lahf
push
xchg
enter
or
bndldx
sbb
pop
xchg
adc
sbbb
sub
inc
call
out
in
dec
mov
pop
pop
in
sbbl
or
testb
mov
inc
and
out
jne
mov
mov
iret
cs
fsubr
hlt
mov
mov
xchg
mov
scas
in
or
adc
sbbl
xor
mov
pop
adc
and
mov
ds
push
or
movsl
adc
lret
mov
sbb
into
lds
out
sub
and
inc
jnp
mov
jnp
cld
movsl
xchg
lcall
push
xchg
cltd
jg
adc
pushf
pop
lcall
mov
mov
mov
jb
push
cmp
push
in
mov
and
scas
or
nop
pop
lret
cwtl
push
scas
sub
icebp
cmc
sbb
push
mov
xlat
repnz
push
adc
add
mov
aad
mov
cmpsl
fadd
aad
or
mov
jge
fidivs
mov
mov
xor
xchg
xor
dec
lea
lock
push
mov
movsl
cmp
inc
jge
out
repnz
in
insb
fstpl
mov
mov
clc
or
push
cmp
leave
push
xchg
jge
test
je
scas
jp
inc
push
mov
adc
mov
fwait
add
mov
and
dec
lods
call
sub
loopne
shll
add
cltd
xor
push
and
push
je
rcl
jl
add
add
jb
xchg
mov
stos
movsl
or
cmp
xchg
mov
pop
jg
jae
ljmp
cwtl
sub
enter
mov
mov
dec
push
adc
fs
insl
sbb
xchg
std
int3
dec
into
mov
xor
and
int
add
repnz
adc
in
inc
push
in
mov
outsl
mov
cmpsl
dec
cmp
jge
or
cli
add
ret
inc
pop
xor
push
sbbl
lods
inc
mov
fidivl
cld
insl
add
or
pop
add
lods
mov
push
movsb
mov
push
outsl
mov
pop
into
and
cs
mov
mov
mov
cmp
lods
icebp
jg
mov
xlat
loope
xor
cmc
mov
fbld
mov
icebp
repnz
ret
xlat
rclb
jge
jns
sbb
pusha
fdivrl
or
repz
rolb
fisubl
or
insb
add
daa
cmc
mov
and
or
repnz
lock
adc
mov
pop
clc
inc
pop
mov
mov
imul
lods
lods
and
lods
push
arpl
rclb
lcall
sub
pop
xor
push
adc
mov
loopne
inc
inc
and
xor
mov
mov
stos
xchg
mov
mov
sbb
shlb
mov
inc
loop
not
leave
pop
jl
xor
add
cwtl
mov
jl
scas
das
orb
sub
sbb
xor
pop
or
imul
sub
dec
pop
lea
push
lret
sbb
jmp
pop
adc
add
scas
stos
out
outsb
test
insb
lock
dec
and
rclb
clc
add
cltd
and
mov
lea
xor
or
in
and
push
mov
push
xlat
jo
dec
add
orb
popl
cmpb
push
lock
pushl
pop
arpl
sbb
pop
xchg
in
enter
notb
and
mov
addl
rorb
pop
mov
lahf
data16
mov
sbb
fidivs
ret
outsb
testb
cmp
mov
xor
mov
or
shlb
mov
ja
popa
cmp
ret
cwtl
scas
push
insl
dec
xor
cltd
inc
jns
and
cmp
aad
hlt
or
cmpsb
aam
push
shrb
mov
loop
jge
addr16
dec
icebp
inc
js
and
xor
push
clc
xchg
in
movsb
movsb
repnz
inc
jnp
inc
imul
es
cld
pop
out
insb
sbb
cmc
stos
fsubrl
fmull
enter
jp
andb
hlt
push
gs
sti
sbb
add
sbb
cmpsl
push
adc
xchg
test
inc
sarl
xchg
mov
cltd
loope
adc
sub
repnz
loope
jle
push
jo
mov
cmp
adc
sub
pop
jmp
pop
or
lods
sarl
outsl
mov
cli
lock
add
jg
sahf
mov
mov
xchg
mov
sbb
jp
sub
sub
insl
negb
mov
imul
sub
add
loop,pt
and
push
ja
adc
xor
rolb
scas
xor
aas
sbb
mov
lcall
mov
clc
sub
hlt
pop
jecxz
pop
mov
dec
in
mov
fsubrl
cmp
dec
jns
xchg
dec
push
jns
sahf
test
inc
jl
cmp
arpl
decb
mov
jp
xchg
out
sub
sti
js
pop
daa
mov
jmp
enter
jae
pop
das
lods
push
jp
mov
gs
adc
inc
movsb
cmp
cli
pop
dec
dec
rclb
dec
mov
fsubs
adc
and
loopne
cmp
jnp
popf
test
jns
inc
shll
rclb
jbe
rcrb
pop
mov
fdivs
sbb
aas
xor
icebp
inc
mov
inc
popf
in
stos
imul
inc
cld
xchg
ret
inc
enter
call
mov
inc
mov
filds
pop
sbb
outsb
push
adc
mov
pop
leave
xchg
enter
mov
add
xchg
sbb
test
or
inc
mov
cmc
fildl
sub
jne
lock
les
mov
pop
push
adc
fdivl
cli
inc
ret
inc
push
popf
pop
fwait
mov
ja
out
cmp
ljmp
lret
call
pop
pop
fsubrl
std
pop
cmp
cmc
mov
adc
sub
or
and
xchg
jg
xchg
inc
and
jne
mov
add
popa
cmp
in
cwtl
push
mov
jno
negl
and
adc
aam
or
popa
icebp
xchg
call
je
jmp
sub
sub
adc
and
push
filds
sahf
mov
cmovg
xchg
jae
sub
xor
aam
pop
cmp
sub
mov
call
jp
scas
push
das
xchg
test
rolb
ljmp
add
add
pushf
adc
cmp
ret
inc
fbld
xchg
jne
or
inc
inc
lar
clc
add
call
ljmp
loope
fs
mov
push
lret
mov
jnp
popf
push
push
mov
test
es
stos
jb
inc
and
push
mov
adc
sbb
lock
int3
adc
in
add
pop
mov
lahf
nop
xor
pop
insl
aad
pop
mov
repz
xchg
icebp
imul
sub
push
xchg
sbb
loope
adc
adc
mov
int3
or
enter
mov
pop
hlt
add
jl
test
mov
notb
inc
ja
shll
mov
xchg
roll
fbld
add
gs
scas
adc
movsb
cmp
shr
sub
cmpsl
cmp
inc
mov
pop
pop
dec
pushf
gs
testl
inc
jmp
xchg
or
add
mov
add
cmp
shl
out
push
xlat
ficomps
and
mov
push
cld
cmpsb
ss
das
stos
movsl
ja
and
xchg
out
adc
add
sbb
loop
add
mov
jge
dec
pop
lock
inc
pop
dec
xchg
inc
ret
cli
xchg
hlt
enter
in
test
sahf
cwtl
mov
push
es
inc
pop
loop
cmpsl
dec
pop
push
mov
mov
js
mov
sub
xchg
sti
lods
into
and
mov
push
xor
scas
add
cmp
repnz
ror
divb
lret
jge
xchg
cmp
fmull
call
pusha
lea
orb
sbb
pop
push
cmpsb
lods
jmp
xlat
fiaddl
out
fdiv
je
cmp
roll
xor
push
cmpsb
stos
mov
loope
sbb
loope
push
mov
mov
jne
and
xorb
lods
dec
lret
in
mov
loopne
outsl
cmp
xchg
dec
call
movsl
push
std
push
fstpl
shrb
push
js
enter
pop
or
jne
push
cmc
ficoml
or
shll
mov
adc
sub
or
shlb
stos
pop
cmp
sbb
mov
loope
hlt
loopne
shlb
inc
xchg
xchg
or
les
icebp
rcl
adc
les
jae
push
cmpsl
adc
and
cwtl
lret
add
cmc
stos
and
pop
jae
clc
lock
add
sahf
and
mov
push
mov
xchg
out
sub
dec
roll
pop
mov
mov
jns
rorb
ficomps
loope
dec
sub
jnp
cmp
mov
and
pop
aaa
dec
jl
inc
das
rclb
mov
lods
or
cmp
cmpsl
mov
test
test
into
sbb
pop
mov
daa
cmp
dec
xchg
repz
addr16
mov
sbb
sbb
pop
push
adc
je
sbb
insb
ja
repz
std
pop
dec
inc
inc
mov
ss
orl
outsl
daa
sub
cmp
sbb
fiadds
or
mov
jge
add
xchg
mov
and
adc
popl
pop
iret
dec
dec
out
mov
dec
outsb
in
scas
and
mov
loopne
push
jae
insl
sub
push
dec
inc
js
stc
mov
add
je
aam
inc
iret
sbb
push
push
ljmp
xchg
push
mov
arpl
push
xchg
xchg
ljmp
lods
and
jb
push
mov
inc
cmp
or
pusha
mov
sbb
jecxz
inc
pop
das
je
icebp
xor
lea
stos
and
mov
orb
push
sub
sub
push
into
rolb
inc
rorb
imulb
and
sbb
mov
jecxz
inc
es
add
sbb
xchg
mov
sahf
inc
loopnew
add
xor
fstpl
pushf
xorl
jne
popa
les
jecxz
mov
les
xor
rolb
mov
arpl
mov
mov
sbb
add
int3
push
int
push
add
lock
shrb
adc
clc
add
xor
pop
fnsave
cmp
sbb
pop
incb
aaa
sahf
lock
add
lods
inc
push
das
cmc
and
add
inc
sbb
loopne
sub
add
xor
iret
arpl
js
mov
popf
subl
mov
das
cmp
inc
sbb
mov
fdivs
cmp
fcmovnb
jno
push
push
cmp
sbb
push
testl
xor
xlat
lret
sbb
pop
adc
lods
cmp
insl
ror
lcall
test
dec
pusha
insb
ret
cmp
xchg
pop
jl
and
ja
stos
clc
popf
and
jnp
xchg
int3
and
dec
lahf
aaa
scas
pop
hlt
sbb
dec
or
das
outsb
cmpb
mov
and
cmpsl
adc
mov
fsubrl
mov
cld
subb
in
mov
cmp
inc
call
push
and
insb
sbb
push
nop
sti
sub
loopne
push
test
ss
jmp
pop
and
pop
lods
in
jo
adc
pop
inc
or
pop
and
test
sbb
jge
es
notl
es
push
lahf
popa
push
aaa
push
jo
shr
push
enter
aas
mov
leave
mov
clc
mov
cmp
ds
jl
popa
dec
test
dec
aam
in
push
inc
jp
adc
jbe
adc
testb
sub
mov
and
fisubrs
dec
sub
xor
sub
lret
movb
sbb
dec
loopne
ss
dec
sub
cmp
addr16
mov
jl
sbb
xor
jl
xor
pop
je
push
jp
sub
pop
out
fisubl
cmpsl
loop
adc
jbe
push
dec
pushf
ljmp
popf
sbb
cmp
push
arpl
jne
loop
xchg
add
cmpl
jo
in
rolb
inc
daa
je
sbbb
adc
icebp
jno
out
or
or
addr16
sarb
jmp
testl
ljmp
mov
inc
or
sub
and
or
mov
add
mov
hlt
js
and
mov
cmp
into
lret
out
fbstp
sub
iret
jle
cmp
jp
xor
rclb
data16
pop
sbb
rclb
pop
inc
rcrb
mov
mov
mov
and
rcrl
sbb
mov
data16
jecxz
les
or
or
popl
inc
mov
in
push
popl
stos
mov
mov
jbe
and
push
std
add
mov
and
pop
rclb
fsubrl
cmp
aaa
jo
sub
mov
scas
rol
jnp
aaa
pop
xlat
add
jb
xorb
and
pop
push
test
cmp
sbb
movsb
xchg
jb
push
mov
repnz
sub
mov
shlb
loope
add
and
leave
jns
mov
lock
cwtl
and
adc
cmpxchg
cmp
push
mov
cltd
xor
mov
mov
or
and
popf
inc
xchg
add
nop
jb
aam
pop
cmp
pop
andl
incl
into
lret
jne
inc
stos
ja
repnz
popa
cmpsl
shll
cmpl
cli
or
rorb
fs
jmp
lds
sub
push
fs
mov
push
ret
sbbb
mov
add
sti
mov
movsb
cmp
in
sub
jne
jg,pn
xchg
sub
mov
aaa
mov
out
scas
mov
call
jbe
and
mov
pop
rol
fs
insl
in
xchg
cmp
orb
push
int3
cmp
mov
mov
push
add
outsb
cwtl
fwait
and
rcrl
testb
jae
adc
mov
pop
in
adc
or
cmp
lahf
adc
pop
sbb
popl
pop
mov
lock
loopne
outsl
loope
out
mov
and
cwtl
dec
stos
mov
sahf
dec
loopne
sbb
out
xchg
test
stc
pop
in
push
cmp
lock
pop
inc
mov
std
aad
cmp
push
jmp
fldl
sbb
inc
int
dec
adc
in
pop
in
xchg
jno
dec
fidivs
fsubrp
push
insb
int3
xor
pop
add
inc
lods
mov
lods
pop
or
xor
or
and
jne
popa
sbb
inc
inc
xor
clc
lock
aam
add
and
mov
push
in
loop
mov
inc
push
rorl
insl
sub
xor
cld
rol
or
or
push
add
sbb
bound
push
mov
pop
mov
nop
pop
push
adc
push
call
insb
ret
push
jge
imul
test
push
sbb
inc
dec
and
cmpsb
test
rolb
shll
mov
push
stc
or
clc
push
sbb
test
cmc
outsl
fcomi
and
dec
jg
pop
mov
sbb
cltd
lods
mov
dec
addb
mov
dec
sub
mov
test
test
rorb
jg
sbb
icebp
imulb
mov
ss
test
inc
or
sbb
pusha
bound
sbb
sub
fimuls
popl
or
enter
aas
nop
xchg
mov
dec
lds
sub
out
or
and
jne
call
cmc
sub
push
rolb
pop
and
mov
or
push
and
xchg
mov
or
adc
insl
mov
sbb
adc
and
fstpt
mov
adc
ror
ret
inc
out
call
xor
test
jecxz
bound
rclb
ds
jp
das
js
xor
movsb
adc
andb
pop
lret
mov
aas
adcb
ret
inc
fcoml
ss
inc
mov
mov
or
aam
or
push
scas
mov
pop
lock
mov
xor
leave
jecxz
aas
inc
sti
imull
mov
cmp
pushf
xlat
jp
jecxz
xlat
sbb
cmp
push
js
sbb
sub
push
sbb
jne
inc
and
hlt
std
js
mov
sub
mov
jnp
es
and
pushf
mov
dec
inc
fucomip
clc
clc
sbb
out
movsb
call
xor
sbb
js
add
sarb
loop
push
xchg
add
inc
sub
cmp
add
or
pop
lahf
ljmp
out
notb
sti
rcll
insl
push
adc
sbb
test
adc
fucomip
xor
call
je
movsb
xchg
js
scas
sub
adc
adc
mov
pop
xor
push
mov
clc
test
add
cmp
mov
in
imul
and
or
push
and
in
hlt
out
push
dec
insl
jmp
adc
sbb
jle
pop
inc
outsl
jecxz
add
les
dec
jle
out
incl
pop
int
inc
daa
add
jo
jmp
into
inc
add
shlb
pop
xchg
rorb
paddb
fbld
lea
mov
mov
sbb
nop
cmp
pushf
xor
sbb
in
out
sub
push
push
xor
add
xchg
loope
and
dec
mov
inc
or
jl
mov
lods
xchg
notb
fimull
mov
jo
dec
icebp
and
cli
add
test
sub
out
pusha
pop
mov
add
mov
adc
repz
dec
out
test
jmp
outsb
sub
addb
sbb
movsb
clc
or
push
cmpb
push
mov
jo
icebp
cwtl
adc
loop
and
jp
lea
aaa
push
pop
xorl
push
sbb
or
mov
and
mov
test
xchg
add
popa
cmp
pop
pop
js
enter
mov
sarl
add
add
adc
std
bound
xchg
subb
mov
mov
loop
add
js
orps
js
pop
mov
sbb
insl
inc
fisttpll
sub
arpl
movsb
xor
xchg
cs
movsl
jge
stos
xor
pop
or
or
dec
xchg
cmp
push
test
dec
sbb
sbb
pop
insl
xchg
pop
jp
or
push
pop
mov
mov
ret
aam
movsl
hlt
lock
xchg
dec
inc
pushf
mov
pop
aaa
push
pushf
push
or
jle
dec
mov
vpmacssdd
popa
in
fisubs
in
mov
test
stos
test
inc
roll
sbb
xchg
jl
pusha
call
or
dec
pusha
pop
cmc
lods
push
call
and
inc
mov
cli
add
push
fs
call
fcmovbe
pop
push
fs
pop
mov
cs
xchg
les
dec
mov
mov
stos
in
pop
mov
dec
inc
jbe
leave
dec
add
addr16
pop
add
pushf
and
clc
lods
jmp
cld
lcall
jle
sbb
fucomip
sub
pushf
and
cld
xchg
jl
loopne
mov
divb
imul
push
out
pop
lret
xor
hlt
cmp
mov
mov
or
enter
cmpsb
sub
clc
adc
xchg
pusha
sub
sub
and
fcomps
push
add
fmuls
je
cmp
icebp
sbb
pop
sti
mov
lds
cli
into
jno
popf
repnz
loope
adc
lods
push
inc
jno,pt
cwtl
push
pop
mov
cmpsb
cltd
jg
jecxz
add
in
push
mov
cli
pop
addl
stos
jg
sbb
jo
mov
and
lods
mov
pop
pushf
adc
sub
push
mov
mov
xor
mov
and
inc
sti
jg
push
cwtl
lret
int3
hlt
pop
inc
outsb
fwait
hlt
call
push
outsb
and
jp
inc
nop
scas
pop
push
cmc
adc
cmp
mov
clc
push
in
or
add
mov
cmc
int3
sbb
inc
and
mov
in
xor
sub
lds
popa
and
int3
es
das
icebp
sub
gs
push
pop
and
sbb
add
sub
cmp
add
jl
push
dec
std
pop
pop
fcomip
push
shlb
in
mov
mov
fcoms
test
mov
jmp
divb
xchg
push
cmp
mov
and
test
jg
dec
dec
jo
pop
imul
cmp
movl
std
and
sbb
imul
out
pop
dec
cld
mov
pushf
mov
push
rcll
loope
mov
mov
cld
sahf
cmp
dec
mov
pusha
mov
push
jo
nop
lea
jl
sbbb
lahf
fidivs
clc
insb
jno
pusha
jp
inc
lock
xor
popf
cmpsl
push
mov
xchg
cmp
inc
sbb
les
sarb
jle
loopne
pop
inc
mov
out
jmp
stos
and
push
inc
lods
xlat
add
adc
flds
dec
inc
xor
xchg
rcrb
xchg
sub
xorb
and
icebp
out
fwait
xor
pop
mov
or
push
mov
jns
fsubs
cmp
pusha
rcll
xchg
hlt
jmp
sub
jbe
or
and
pop
shlb
rclb
mov
test
xchg
ja
popa
inc
xchg
push
add
repnz
js
std
and
push
xchg
pop
dec
xor
insl
cwtl
hlt
add
into
inc
or
mull
popa
sub
flds
sar
jns
cmp
jmp
jae
push
inc
mov
mov
dec
jbe
ljmp
cs
imul
insb
mov
test
out
and
icebp
inc
inc
shll
outsb
xor
test
dec
pop
clc
jmp
inc
and
jns
xorl
jmp
sbb
add
test
cltd
fcoml
sub
addr16
imull
lods
loopne
fidivrs
enter
dec
movb
mov
sub
loop
and
xor
add
add
stos
push
push
xchg
fildl
cmc
repnz
je
pop
xchg
dec
sbb
rolb
movsl
outsb
clc
inc
pop
or
js
mov
test
int
out
push
in
scas
mov
mov
xchg
push
sub
sbb
ret
jg
mov
mov
pop
pop
ret
push
and
fwait
rorb
adc
sahf
or
mov
mov
cmpsl
gs
push
mov
cli
call
and
and
sti
ss
insb
or
sbb
subl
push
or
shrb
cmp
adc
clc
lods
aad
loop
jae
std
pop
adc
xchg
repz
cmp
sbb
hlt
pshufw
imul
sarb
xor
lea
sbb
repnz
add
xchg
add
aam
push
lock
lcall
mov
pop
and
test
pop
lfs
inc
sahf
pop
pushf
enter
mov
xor
andl
idivb
mov
test
xchg
stos
adc
loop
daa
or
mov
scas
ret
dec
jecxz
push
mov
mov
fmull
pop
gs
dec
xlat
inc
mov
xor
or
rcll
mov
mov
sub
dec
or
xlat
jle
sbb
ss
mov
sub
andl
ret
sbb
sub
jbe
lock
cmpsl
xor
addr16
or
mov
std
adc
pushw
lahf
cmp
jmp
pop
std
mov
xor
imul
mov
push
loop
lea
aam
xorb
cld
xchg
mov
and
sub
push
dec
xor
mov
in
sbb
inc
dec
mov
clc
pop
mov
lods
mov
mov
jle
and
adc
or
lahf
out
ss
movsl
and
pop
cmp
sti
daa
push
cmp
es
mov
or
sbb
or
or
cwtl
stos
push
xchg
adc
stc
pop
lods
test
je,pt
lcall
scas
adc
movsb
inc
fcomps
sub
bound
sub
mov
fcmove
mov
sbbl
push
jle
or
mov
mov
dec
ljmp
xlat
test
loopne
jg
popf
sbb
dec
jo
and
hlt
and
bound
xabort
pop
add
mov
inc
mov
mov
cli
adc
push
xor
sbb
and
decb
dec
jg
int3
push
scas
mov
mov
jb
je
ljmp
shl
mov
call
js
aad
add
adc
inc
dec
imull
ret
mov
movsl
nop
jo
and
inc
call
or
ljmp
das
bnd
push
or
xchg
pop
xor
das
cmp
push
sub
add
hlt
lcall
xor
xchg
mov
pop
insb
mov
dec
sub
xor
jmp
dec
inc
or
push
lea
inc
pusha
imul
cmpsb
pop
sbb
fs
and
jecxz
out
int
movl
mov
and
rorb
sbb
push
repnz
out
push
dec
addb
push
jb
test
adc
dec
mov
mov
pop
imul
and
mov
jge
xchg
fcmovb
mov
icebp
shll
pushf
or
add
xor
scas
sbb
xchg
inc
cmpsl
jmp
rcr
cmpb
pop
mov
xchg
push
mov
xor
ror
clc
add
jmp
lcall
dec
cmp
aaa
nop
js
js
jg
push
aas
cs
aam
cmp
mov
in
lea
pop
or
mov
sbb
mov
negl
sbb
aam
push
mov
mov
jnp
sub
push
movsl
sub
or
call
jne
sbb
push
cs
adc
push
negl
enter
and
testb
adc
stos
add
xchg
ljmp
popa
clc
cmp
ljmp
fdivs
cmp
pop
mov
ret
sub
push
push
or
cmc
mov
mov
nop
push
mov
adc
mov
cltd
or
sub
add
push
dec
or
or
pop
cmpb
inc
cmpsb
lahf
shll
test
aad
or
xchg
scas
mov
stos
lods
push
mov
pop
ret
fwait
cltd
pop
rolb
xlat
sub
sub
dec
or
cmp
mov
test
jge
in
enter
mov
jle
pop
push
jle
mov
mov
addb
popa
aam
and
fistl
pop
jl
popa
scas
xchg
cs
cmp
push
or
cmc
push
js
test
dec
or
scas
push
mov
push
pop
cltd
cwtl
lret
mov
push
pop
lds
mov
int
sbb
fstl
pushf
test
or
and
cmp
mov
dec
add
test
jns
and
mov
and
movsl
inc
cltd
popa
cmpsb
push
in
jno
arpl
repnz
pop
and
adc
aas
rcll
or
jne
jo
outsl
ljmp
xchg
push
or
cs
lret
push
das
xor
mov
pushl
dec
mov
ret
and
outsb
ficoms
push
rclb
loopne
jp
daa
mov
cli
lea
jbe
sbb
mov
jecxz
pusha
xor
jno
das
push
pop
in
lret
push
shlb
rorb
push
int
jbe
xchg
push
cmp
adc
mov
add
repz
pop
stc
pcmpeqw
xchg
addr16
cmp
add
int
mov
jp
adc
test
mov
or
fmuls
fwait
loop
pop
sub
adc
or
mov
cmc
mov
mov
push
sub
lea
ljmp
push
jo
mov
sahf
frndint
loopne
sub
lods
inc
xor
fisttpl
pop
mov
inc
decl
pop
mov
dec
pop
shl
inc
adc
lret
or
sub
mov
sarb
dec
test
inc
insl
movups
push
mov
insl
loopne
pop
loopne
mov
pop
fdivl
mov
push
push
les
xchg
push
xor
sub
out
call
stos
pushf
xlat
mov
jge
lcall
aad
bound
sub
and
cmp
scas
mov
mov
imull
movsl
dec
mov
xor
daa
mov
xlat
hlt
inc
cmp
mov
xor
ljmp
or
es
pop
adc
movsl
jecxz
jp
lock
jg
push
mov
sbbb
pop
movsb
mov
ja
aam
scas
dec
xchg
fbstp
add
cmp
mov
into
mov
add
or
pop
mov
shrb
jne
mov
clc
sub
adc
mov
stos
or
pop
push
add
add
iret
data16
scas
pop
cmpb
lahf
aam
outsl
in
je
inc
insb
in
mov
lahf
xor
cmp
dec
sahf
repnz
add
stos
enter
daa
ds
out
or
inc
sub
and
inc
cmp
xor
aas
cmp
push
mov
test
ja
and
xchg
and
cld
cmp
aad
cs
sbb
js
jg
pop
loop
imul
inc
and
rcl
lcall
mov
pusha
jae
lahf
jns
push
jnp
orl
push
loopne
ret
mov
push
dec
popf
or
repz
ja
shlb
std
push
clc
sbb
push
fsubrs
pusha
or
mov
xor
pop
mov
call
sbb
mov
orb
jecxz
add
movsb
ljmp
xchg
pop
add
dec
xchg
ljmp
test
push
mov
add
inc
mov
adc
loope
add
push
into
inc
sub
mov
xor
aad
push
mov
xchg
inc
xchg
loop,pn
cli
push
fldl
pop
or
pop
aam
push
push
imul
push
xchg
xchg
inc
rcll
pop
xor
add
addr16
pusha
test
xchg
cmpsb
les
loopne
aaa
or
ja
xor
mov
popa
sub
mov
push
sbb
outsb
inc
jge
cmp
pusha
imul
dec
fs
lahf
nop
cs
pop
push
cmc
pop
push
es
mov
or
cmp
cmp
mov
jmp
inc
lcall
push
fwait
movsb
pop
lods
fistpl
lock
mov
push
imulb
shlb
mov
add
mov
les
ret
sbb
cmp
xchg
sbb
cld
xchg
dec
pop
mov
or
popf
push
xor
jbe
pop
js
xor
jns
mov
jl
insl
sti
mov
sub
fs
cwtl
cmp
mov
adc
pop
and
and
je
loope
sbb
addr16
into
lods
pop
ljmp
mov
cmp
sbb
or
lret
test
pop
cmpb
stos
push
lcall
dec
lods
testl
mov
inc
in
and
inc
push
ja
mov
inc
inc
ljmp
mov
or
push
dec
lds
mov
jb
jo
sbb
push
add
imul
std
sub
scas
aas
popf
add
mov
adc
xor
clc
fwait
clc
mov
sbb
nop
and
out
fcmove
mov
int
add
test
hlt
add
shll
jae
dec
xchg
shr
stc
jle
pop
sub
mov
das
pusha
rcrl
and
in
and
push
adc
fdiv
dec
nop
push
fnstcw
aas
cmp
iret
pop
fldl
or
push
xchg
mov
xor
fisttps
or
dec
cld
sbb
in
ret
sbb
mov
shrb
jb
in
mov
mov
lods
aas
sar
test
add
mov
or
pop
ret
mov
lcall
push
push
dec
sbb
push
das
cmp
popf
lret
daa
or
enter
mov
sysret
test
sub
lahf
dec
jb
push
in
popf
shl
mov
or
pop
js
not
pop
pop
cmovo
pop
clc
shll
mov
adc
lahf
push
cmp
add
test
scas
pop
push
jne
cli
inc
cmp
or
jns
xor
jmp
xor
jb
push
icebp
push
data16
std
pop
dec
or
jae
repz
xchg
sbb
adc
jmp
pushf
or
cmovo
pop
mov
aad
rorb
mov
loope
into
and
lods
scas
sahf
dec
ds
xor
push
push
adc
rcll
loopne
mov
call
enter
jne
rcl
les
dec
ficompl
dec
mov
movsb
inc
aaa
adc
mov
lret
lds
dec
mov
fs
mov
jmp
imul
roll
adcb
clc
imul
and
adc
and
in
push
aad
pop
test
pop
sub
cmpb
popa
sbbb
shlb
in
push
add
push
sbb
or
je
pushf
shll
call
lds
adc
loopew
mov
pop
bound
daa
pushf
jnp
hlt
adc
adc
out
ret
cmpsb
lea
arpl
xorl
fcmovne
pop
sub
mov
mov
jp
pusha
jno
xchg
xchg
lods
pushf
hlt
dec
icebp
push
inc
lea
xchg
inc
in
add
add
mov
mov
je
out
fisubl
xlat
in
lock
std
xor
inc
cmc
daa
xchg
or
cmp
xchg
unpckhps
aam
mov
xchg
and
loop
add
stos
xor
sub
nop
adc
adc
in
and
xchg
xchg
ret
in
pushf
mov
repnz
jo
inc
jne
mov
cmpsl
sbb
ficoml
sbb
pop
xchg
ret
dec
cmp
sahf
jns
xchg
ds
pop
mov
push
dec
in
cmp
mov
aad
mov
push
and
ficoml
inc
dec
daa
insl
rorl
sahf
mov
adc
lods
cmc
addl
mov
shll
sub
push
clc
jne
cs
je
jl
mov
mov
bound
xchg
cmpsl
aad
add
cltd
nop
idivb
fdivl
pop
sbb
adc
popa
std
ss
cmp
imul
xor
mov
sub
jle
xchg
pop
or
ret
loop
test
xchg
mov
aas
push
pop
inc
loope
cmp
ds
aad
daa
insl
sti
sub
cmp
jge
scas
repz
mov
inc
mov
daa
adc
pop
jbe
ja
push
add
sbb
stos
shr
lock
inc
data16
incl
pushf
sub
inc
pop
cli
scas
aas
add
fsubr
pop
xchg
jo
movsb
mov
dec
pop
mov
add
jecxz
dec
lods
jecxz
into
add
inc
push
and
enter
fucomp
gs
data16
push
pop
jg
inc
repnz
push
divb
movsl
pop
jmp
pushf
int3
es
and
inc
cmp
and
adc
jl
rorl
or
scas
mov
mov
mov
jns
xchg
push
mov
popf
jecxz
jbe
pop
inc
dec
ljmp
cmp
push
inc
cs
lret
mov
jg
lds
stc
add
mov
pop
outsb
ret
push
ljmp
daa
lock
out
pop
push
loop
enter
mov
lcall
fcmove
es
mov
cmp
xlat
add
jns
sub
insb
cmc
cmp
jp
jmp
dec
and
out
aam
lods
outsb
shrl
js
insl
jae
push
jp
push
sub
and
inc
data16
adcl
xchg
cs
addr16
cltd
adc
xor
js
push
adc
cwtl
mov
pop
sbb
fdivs
mov
movsb
mov
bound
jecxz
shrb
sbbb
mov
or
jo
in
gs
xchg
pop
inc
jnp
or
mov
aaa
mov
lds
incb
mov
aam
roll
mov
push
dec
cmpsb
rclb
aad
sahf
jno
sub
aam
or
icebp
pusha
cmp
mov
bound
out
clc
push
xchg
mov
add
push
add
push
in
loopne
arpl
push
push
or
mov
or
cltd
out
push
std
std
movsb
shld
ss
pushaw
psrad
or
cli
add
and
lret
sarb
add
mov
mov
sahf
les
int
decl
fistl
ficomps
int3
mov
adc
sub
mov
iret
mov
mov
imul
inc
inc
jno
jbe
xor
dec
dec
lret
aam
arpl
adc
sti
or
pop
rcl
ret
push
popf
add
sar
push
sbb
sub
pop
cmp
or
adc
arpl
subl
or
inc
and
adc
inc
inc
ret
mov
adc
enter
inc
lods
mov
pushf
mov
divl
mov
or
in
ja
decb
mov
sub
lods
out
mov
addb
add
icebp
and
push
fdivrs
push
adc
xor
pop
fsubs
mov
movl
hlt
add
xor
lea
pcmpeqb
or
jecxz
ljmp
push
es
popf
pusha
mov
push
in
sub
sbb
mov
pop
shlb
loope
lods
adc
sarb
sub
xor
aam
dec
loope
fidivrs
xchg
fiaddl
lock
add
add
js
cmpsb
adc
out
inc
or
sub
adc
push
loope
pop
pop
adc
mov
xchg
into
imul
xor
jp
push
add
pushf
dec
shlb
xor
nop
push
and
dec
loop
scas
mov
push
das
ss
push
xor
mov
scas
push
das
in
jns
xchg
aad
stos
fdiv
mov
scas
inc
dec
jo
out
stos
inc
sub
pop
gs
adc
push
or
aam
xchg
and
scas
mov
mov
add
jl
ja
hlt
push
add
es
mov
arpl
xor
pop
adc
pop
int
or
pop
dec
lds
sbb
ficompl
dec
loopne
xchg
mov
add
ret
pop
mov
inc
jl
loopne
popa
push
popf
pop
mov
incb
push
clc
pop
dec
lea
shl
add
out
fildl
xor
mov
dec
mov
and
cmp
movsl
cmpsb
test
cmp
sbb
movsl
pop
or
in
fsts
xlat
push
mov
subb
mov
and
orl
das
mov
stc
add
adc
lea
add
je
push
addr16
loop
lcall
cwtl
sti
inc
and
lcall
mov
cmpsl
fs
xor
stos
mov
insl
call
cmp
mov
call
lret
pop
ss
in
ljmp
fsubrs
sub
push
cmp
jnp
addr16
pop
cmp
int3
loope
jl
push
insl
mov
cwtl
or
ret
aas
ret
neg
jno
push
sahf
xchg
sbb
stos
push
xor
je
insb
mov
jns
jp
sub
pushf
inc
push
ret
lds
dec
imul
loopne
mov
ljmp
hlt
adc
or
popa
daa
fdivp
div
cmpsl
inc
lea
xor
dec
push
orl
or
loopne
fcoms
data16
sbb
push
fiadds
dec
push
je
out
mov
push
inc
sbb
cmp
push
lods
outsl
adc
push
lahf
dec
mov
test
mov
add
inc
adc
mov
sub
xchg
pop
sarb
mov
inc
jmp
pop
call
ds
out
test
cmp
inc
dec
loopne
cld
pop
or
stos
or
dec
cmp
cmpsb
not
jo
adc
pusha
dec
mov
xorb
fwait
or
clc
subb
dec
stos
andl
sbb
or
insl
fwait
mov
test
xchg
or
cmp
fwait
cs
push
scas
test
insb
xchg
push
jns
or
xchg
jo
loopne
pop
inc
pop
adc
push
mov
out
push
cmp
push
mov
mov
aam
pop
negb
jl
mov
xorb
cmp
mov
imul
cmpsl
cmp
aam
cltd
lock
and
sbb
andl
lods
mov
mov
lds
mov
addb
das
sbb
xchg
inc
shll
and
mov
andl
dec
shl
mov
or
fs
or
fcmovnb
adc
jbe
inc
ret
aad
xor
test
fbld
jle
js
shrl
jnp
into
mov
adc
lret
mov
pop
or
mov
icebp
loope
sbb
jmp
pushf
cmp
and
inc
clc
mov
pop
or
dec
enter
add
sub
movsb
adc
sahf
mov
cmp
sbbb
sar
mov
je
sbb
je
daa
decb
dec
jle
lret
lods
jecxz
xchg
cmp
stos
loopne
es
ret
arpl
mov
cmp
clc
cwtl
dec
sbb
push
adc
lret
or
adc
sub
jmp
adc
jmp
jb
adc
jae
imul
faddl
loop
scas
sub
add
je
int3
roll
ss
mov
std
lahf
cld
fdivrs
adc
test
inc
lods
pop
mov
js
inc
loop
jecxz
push
xchg
xor
das
xor
push
pop
or
mov
or
xchg
mov
inc
and
lods
sbb
xchg
lcall
dec
mov
inc
stos
pop
ror
push
cmc
inc
inc
xchg
stos
arpl
leave
nop
clc
fstl
adc
test
in
imul
sub
pop
arpl
les
dec
push
dec
cli
push
leave
test
mov
push
and
nop
push
fcompl
xor
dec
add
js
xchg
mov
push
add
mov
scas
pop
mov
loopne
addb
and
xor
sbb
cmc
test
cmp
cmp
clc
adc
test
and
mov
sub
xchg
sub
dec
int3
push
leave
loope
fyl2x
aaa
sbb
xor
mov
stos
cld
adcl
push
or
sub
push
into
mov
adc
push
in
pop
xchg
inc
dec
add
adcl
das
call
and
cmpsl
incb
loopne
pop
pop
sahf
sarb
sub
out
call
sub
cs
mov
push
rcrb
lcall
jbe
loope
rep
jp
sub
in
mov
movsl
orl
notb
sub
jg
mov
inc
sbb
mov
pop
sub
ret
loopne
push
xor
sbb
sbb
adc
sub
js
mov
cmp
out
inc
mov
add
js
jecxz
repnz
jbe
ds
sbb
mov
cli
repz
dec
adc
add
cmp
aas
mov
aas
stc
push
cld
adc
std
jne
jge
pop
je
aam
mov
vandnpd
cmp
pop
sub
sahf
mov
jmp
jae
psubsb
movsb
scas
push
shr
sub
int
adc
dec
in
cmpsl
and
decb
pushf
inc
jb
fistps
test
in
adc
test
sahf
cmp
add
ds
cmp
int3
fdivrs
pop
call
punpcklbw
jae
pusha
or
negb
shrl
lock
jp
xchg
push
sbb
sbb
pop
mov
fldenv
jb
xor
outsl
js
xchg
push
cmp
daa
inc
les
sub
sbb
xchg
jl
mov
or
push
inc
cs
mov
and
rorl
pop
sub
xor
cmp
mov
lock
dec
sbb
lret
movsb
fimuls
jge
sbb
loopne
sub
loope
sub
inc
fwait
or
cmpsb
mov
mov
adc
dec
jle
clc
add
loopne
sub
clc
mov
fistpl
adc
out
imulb
push
popl
loop
mov
cmpsb
jno
mov
mov
and
add
mov
std
rolb
dec
data16
andb
xchg
push
push
add
pop
sub
inc
mov
cmpsb
mov
mull
ja
mov
test
mov
stos
or
jle
into
dec
or
fldl
inc
sub
cmpsb
loop
cvttps2pi
and
clc
icebp
mov
lods
das
test
push
mov
mov
mov
jno
cli
xor
push
adc
and
lock
xlat
dec
jmp
adc
les
das
sbb
push
mov
sbb
mov
test
movsb
cmp
subb
cmp
mov
pop
cmp
mov
or
shrb
jne
popl
xor
loop
out
lret
hlt
aam
ljmp
push
loopne
and
pop
add
mov
lcall
shll
in
cmp
jle
rcll
lret
insl
dec
or
xchg
jl
pop
pop
sahf
add
cmpsl
lock
mov
add
ret
test
loop
dec
dec
movhps
shll
test
cltd
jmp
repz
shlb
movsb
enter
out
test
xchg
stc
dec
sbb
cli
call
push
xor
push
pop
cmp
aaa
pop
stos
adc
push
push
mov
outsl
shl
movsb
mov
pushw
push
fucomip
loopne
ljmp
mov
arpl
adc
cli
mov
push
xor
push
mov
jle
jecxz
scas
loope
leave
out
dec
enter
jb
sbb
mov
fildll
das
adc
pop
mov
mov
loop,pt
sbb
stc
jbe
push
or
ret
js
iret
add
xchg
decb
icebp
push
test
jb
push
dec
inc
lea
mov
dec
lock
stc
hlt
mov
adc
nop
loop
clc
mov
mov
enter
sbb
scas
leave
xor
ficompl
int3
inc
test
dec
xchg
cwtl
inc
pusha
rolb
adc
jmp
clc
fdivs
test
lcall
push
cli
dec
cld
loopne
jecxz
les
cltd
xchg
jnp
xor
outsl
adc
mov
adc
sub
popa
xor
pop
mov
bound
out
das
pusha
jbe
cmp
adc
mov
xchg
mov
sub
lods
xor
dec
jae
mov
add
cmp
decb
push
sub
nop
into
ss
inc
inc
xchg
fnstsw
mov
stos
adc
in
jnp
cmp
ja
shrl
push
push
sub
cmc
loop
xchg
mov
adc
clc
scas
or
lea
call
aaa
jle
outsl
jg
out
andb
imul
pop
cwtl
sbb
outsb
daa
xchg
loop
fs
mov
sbb
push
push
push
pop
jl
inc
pushf
ficomps
dec
cmc
adc
jo
sub
sub
js
xchg
jp
imul
push
and
mov
aas
sub
adc
mov
lods
pusha
pushf
push
push
test
jge
rclb
aas
xor
inc
addr16
cmp
add
mov
hlt
add
pop
mov
jb
clc
loopne
fs
push
outsb
leave
shll
push
adc
rolb
sub
cld
sbb
mov
fs
adcb
dec
xlat
adc
or
inc
inc
cld
xlat
push
pushf
ret
mov
scas
clc
in
or
repz
orl
cmp
orl
mov
or
adcb
sub
xchg
icebp
xor
inc
dec
dec
sarl
jmp
push
or
jae
fadd
and
pop
fidivrl
and
fisubrl
cli
neg
popa
and
xor
das
or
and
push
fsubrl
xchg
inc
repnz
push
cwtl
jb
pop
xor
rcr
jno
loopne
add
int3
loopne
mov
outsl
pop
out
fildll
jle
ds
cltd
stc
lcall
add
pop
stos
mov
fisubrs
sbb
sbb
test
shrb
mov
cmpsw
cs
loop
mov
aad
out
aaa
sti
and
aas
mov
sarb
lods
push
push
adc
pushf
std
adc
push
ds
pop
insl
stos
mov
add
dec
cwtl
lcall
outsb
dec
subl
stos
xchg
mov
add
pop
idivl
cs
sbb
mov
inc
push
insb
xchg
je
push
je
xor
rorb
mov
ror
mov
adcl
jae
lcall
pop
push
mov
int
mov
add
inc
mov
je
push
nop
sub
rorb
imul
shll
cmp
sahf
pop
out
cmp
sarb
jecxz
or
push
mov
aas
adc
cli
mov
xor
push
shlb
push
lock
mov
add
add
ficoml
imul
fisubrs
sub
rorb
sbb
fs
xchg
push
and
jmp
aas
icebp
lock
fsubl
xor
enter
mov
adc
inc
jne
mov
mov
lock
scas
jne
and
sarl
gs
xchg
daa
cmp
or
add
aas
add
xchg
sbb
and
mov
add
mov
cmp
nop
daa
sub
aad
adc
ja
sbb
nop
cmp
or
mov
sbb
lret
into
cltd
lahf
data16
dec
pop
aaa
or
fcomps
mov
popa
lods
mov
or
test
in
jb
mov
cmc
dec
rorl
sub
movsb
fucomi
jg
add
stc
sbb
loope
jb
mov
imul
jo
into
push
or
push
in
bound
lds
nop
adc
out
loope
stc
adc
je
ret
add
ds
cli
sbb
or
sbb
test
jmp
mov
push
mov
inc
js
and
dec
mov
dec
xchg
or
loopne
cmp
shll
sti
jo
movb
aas
notl
or
xor
cmp
add
mov
adc
mov
stos
test
lcall
cli
ror
loope
add
shlb
aaa
mov
or
sub
std
mov
adc
or
pusha
jnp
xor
mov
orb
push
shll
adc
xchg
sarb
das
push
push
xor
clc
sbb
sbb
push
xchg
out
ret
push
addr16
and
dec
mov
pusha
pop
adc
add
pop
clc
clc
aam
fs
xchg
xchg
mov
into
loopne
lcall
mov
stos
outsl
add
sub
mov
in
xor
cli
or
cmp
imul
xchg
mov
or
adc
jno
scas
dec
das
mov
pop
add
and
sarl
cld
xchg
or
flds
loopne
inc
xchg
jge
mov
mov
add
sarb
stos
call
or
cli
lods
adc
pusha
rorb
dec
mov
mov
jp
and
mov
jo
fwait
mov
in
jnp
push
xor
and
data16
add
scas
nop
rcl
divl
mov
xor
neg
push
inc
pop
or
dec
cmp
fisttps
mov
clc
jbe
fdiv
icebp
jg
xchg
push
hlt
dec
or
and
xor
aas
pop
pusha
mov
int3
out
jbe
dec
pop
cmpsb
ret
mov
or
push
icebp
pop
fidivs
jmp
repz
push
mov
jne
dec
cmp
cmp
sbb
push
and
and
pop
call
push
or
mov
or
mov
mov
cmp
lahf
idivb
dec
sbb
jno
sub
dec
mov
cmp
dec
adc
mov
ds
aam
add
pushf
es
adc
icebp
nop
adc
ret
add
add
out
nop
and
push
and
ss
bnd
mov
push
xor
lcall
xor
fldt
test
inc
xchg
loop
or
mov
mov
jp
mov
fmul
xor
filds
and
cwtl
insb
or
xchg
outsl
ror
push
xor
or
jp
jno
push
xchg
scas
add
dec
test
icebp
sbbb
fidivrs
aam
push
aam
sbb
sbb
mov
mov
lods
out
add
mov
push
les
sahf
andl
sub
jmp
push
push
xor
movsb
je
ss
lds
and
add
jns
in
cld
add
ret
mov
sti
arpl
add
lods
xlat
mov
clc
scas
loopne
cmpsb
mov
mov
pop
pop
hlt
imul
mov
adc
out
and
je
je
add
xchg
mov
jnp
and
icebp
call
jno
lock
testb
xor
push
pminub
xlat
mov
pop
in
mov
enter
fcompl
sahf
mov
add
and
inc
and
or
les
push
adc
push
mov
xchg
ss
outsb
mov
js
fwait
cmp
xchg
aam
xor
call
sub
sbb
clc
movsb
jno
loopne
in
sub
mov
lret
push
lock
cmp
sbbb
mov
mov
fsub
mov
mov
mov
js
add
dec
mov
ja
sub
call
imulb
jp
xchg
movntq
push
stos
sbb
add
sbb
repnz
lea
out
lods
fbld
loopne
xor
add
cld
mov
sbb
pop
xor
rcrl
rclb
pop
push
loop
scas
and
adc
gs
adc
clc
ret
mov
push
inc
aas
dec
mov
jecxz
into
stos
jne
sub
push
mov
cmp
cmp
or
out
and
aad
adc
mov
lods
out
lea
pop
loop
push
mov
cli
xlat
xchg
ficoml
sahf
push
cld
loopne
cmp
push
pop
hlt
es
xchg
jo
repnz
xor
pop
mov
sub
shll
and
mov
or
sbb
cmp
inc
js
in
adc
or
jae
into
clc
and
xlat
lods
roll
cld
and
cmp
es
sbb
sub
test
js
cltd
sbb
cld
insb
push
mov
pop
pop
push
sbb
sbb
pusha
sbbl
test
pop
loope
ja
push
je
repnz
loopne
push
pushf
cmc
add
mov
shl
cmp
and
fidivs
ss
jb
xorl
adc
xchg
cmp
in
icebp
sub
xchg
fs
push
test
addb
loopew
loope
dec
ss
cmpsb
mov
mov
in
push
xchg
sahf
pusha
je
lret
or
lods
fistl
cs
adc
mov
inc
rep
mov
ds
aam
fbstp
push
jl
pushf
inc
mov
mov
adc
std
sub
inc
or
xor
mov
sub
jne
roll
push
mov
leave
fsts
push
test
je
pusha
dec
leave
test
sub
jg
fwait
lods
loope
sub
mov
mov
out
cld
jb
mov
pop
inc
cmp
mov
xor
addb
in
pop
ds
je
scas
stos
xchg
repz
mov
jmp
jl
inc
mov
mov
rclb
push
cs
cmc
pushf
push
ret
mov
sub
jl
dec
mov
daa
test
push
push
int3
sub
mov
mov
mov
hlt
incl
cmp
test
push
push
popa
cld
fimull
dec
jge
cmp
jl
mov
or
mov
fimuls
xchg
lock
lds
xor
pop
and
and
aas
test
aam
sbb
jb
icebp
mov
pop
adc
mov
sti
movsb
inc
sbb
outsl
sarb
mov
adc
repnz
inc
jmp
stos
fs
push
mov
insl
pusha
sbb
mov
cmpsb
inc
lods
fsubrs
and
ds
stc
adc
fimull
adc
cli
das
push
mov
shl
mov
in
cli
inc
sub
add
push
in
dec
bnd
fwait
push
sar
mov
ss
hlt
std
test
mov
pop
mov
cwtl
jecxz
xchg
mov
imul
clc
cld
jne
inc
arpl
test
push
sub
jge
fsubrl
mov
std
stos
stc
aaa
or
mov
ds
fnstenv
sbb
cmp
bound
fsubp
bound
test
ja
or
jnp
aas
fiadds
pop
inc
popa
int3
jo
mov
movsb
rclb
aas
fdivs
push
dec
pop
icebp
in
mov
mov
rcrb
out
cmpsb
inc
dec
adc
inc
jns
rorl
push
daa
jge
jo
or
or
sahf
mov
movsl
lock
int3
pop
xchg
rorl
inc
test
and
int3
mov
enter
ss
imul
insl
mov
inc
jl
aad
nop
xor
xchg
lock
ljmp
inc
sbb
pop
int
push
adc
mov
add
loope
or
stos
add
fidivrs
mov
and
icebp
loop,pn
test
ds
es
lcall
popl
jge
sub
loopne
imul
or
sbbb
dec
clc
xlat
xchg
jp
loop
sub
adc
add
rorl
mov
xchg
outsb
jl
xchg
mov
inc
out
out
push
addb
bnd
outsb
add
iret
cmp
xor
mov
sub
hlt
insl
call
jg
shlb
clc
dec
jo
stos
dec
pmulhuw
test
dec
xor
mov
add
imul
sbb
bound
add
sti
and
je
mov
orl
cmpsl
adc
dec
mov
call
mov
orb
inc
lock
push
lcall
addl
fstl
sbb
and
pop
aas
stos
lret
pop
jbe
mov
stos
adc
cli
push
shll
or
inc
js
dec
arpl
or
xchg
xchg
sbb
rorb
pop
xchg
sub
cs
addb
push
cmpsb
sub
sbb
test
jg
in
push
daa
dec
je
aam
cli
push
cmpb
adc
and
xor
fs
jo
xchg
popa
jge
cmp
mov
hlt
fldenv
mov
aas
push
fisubrs
xchg
stos
fs
mov
shrb
inc
imul
or
rorb
inc
gs
jl
negb
mov
xchg
sub
fimuls
jno
stos
jge
in
or
sbb
jmp
push
lcall
inc
push
add
jg
daa
push
scas
adc
shll
inc
xor
push
stos
inc
dec
sti
stos
mov
int
jl
sahf
outsb
ret
xchg
movsl
xchg
pop
sahf
add
mov
bound
cmpsl
adcb
adc
push
push
nop
dec
fcomp
mov
test
adc
lcall
loopne
mov
cmp
mov
lock
sldt
stos
push
push
adc
aam
adc
mov
inc
in
sub
inc
xor
cmp
xlat
dec
mov
pop
sbb
mov
sub
ficoms
jl
testl
and
leave
je
jno
fstps
push
pop
notb
add
xchg
icebp
mov
stos
mov
and
add
fimull
sub
into
push
scas
mov
test
out
push
rcrb
add
push
cmp
cmpsl
ds
ret
push
inc
sarb
clc
jmp
cli
mov
adc
jecxz
add
dec
fs
and
cld
imul
jle
in
outsl
jno
pusha
sbbb
loopne
and
mov
lods
xor
icebp
xor
lods
pop
test
mov
loopne
sbb
aaa
hlt
jne
sub
test
cld
sub
fisttps
je
jmp
inc
mov
xor
jmp
mov
loopne
xor
ja
movsb
add
xor
and
push
or
cwtl
or
pop
jne
test
popa
xchg
mov
add
rolb
imul
aam
notl
push
jle
test
orb
mov
jle,pt
cld
cmpsb
aaa
xor
rorb
add
shll
pop
add
call
mov
mov
sbb
clc
enter
scas
sub
fisttps
jl
sbb
xchg
mov
testb
not
outsl
push
movsb
push
cmp
or
scas
je
enter
shrb
cli
and
addr16
rolb
mov
jecxz
xor
daa
mov
loope
aad
lods
aam
pusha
cmp
rolb
or
push
dec
add
jo
jg
inc
lods
rolb
cmp
popa
jne
xchg
xchg
sbb
sbb
or
sarl
jbe
jnp
cmp
xchg
add
mov
decl
pop
ja
sbb
dec
scas
mov
iret
rolb
push
testb
jae
sti
jae
xor
xor
jecxz
inc
push
lock
loope
in
sahf
bound
call
dec
xorl
cmpsl
mov
mov
out
mov
jbe
mov
std
das
push
rcll
test
pop
cmp
fsts
xor
add
aam
test
ret
insl
call
xchg
mov
popf
pop
int3
scas
push
int
lahf
outsl
sldt
out
dec
push
sub
fidivrs
jle
push
cmp
or
mov
incb
inc
outsb
insl
sub
and
add
or
mov
ret
cmpsl
or
dec
xlat
ror
mov
in
icebp
enter
sub
mov
or
sahf
or
pushl
pop
test
in
mov
add
or
ret
add
mov
or
repz
popf
popa
jge
outsb
mov
rorb
imul
mov
rcrb
sub
add
mov
cwtl
adc
lret
adc
bound
xor
push
xchg
test
lods
lea
insl
push
adc
out
jnp
test
adc
mov
clc
push
xchg
and
mov
gs
test
jo
mov
fwait
add
add
mov
in
cli
xchg
adc
push
pop
push
jmp
rclb
adc
pop
adc
inc
push
mov
ljmp
dec
or
cli
aaa
lret
rolb
xor
icebp
les
cmp
add
add
in
adc
mov
pop
and
mov
mov
inc
jne
ret
inc
mov
outsl
pusha
fwait
into
ficoml
in
lods
mov
cli
jmp
xor
sub
lcall
les
push
fmuls
cli
sbb
ss
xchg
xchg
ds
push
shll
sbb
les
pop
sub
test
sarb
cmp
ficoml
mov
out
push
lahf
or
dec
pop
out
dec
repz
pop
test
add
jle
mov
ret
dec
inc
dec
int3
mov
xor
cmp
inc
dec
push
inc
mov
push
push
mov
shll
xchg
inc
into
xchg
lret
rclb
pop
pop
dec
add
test
test
fstpt
cmp
lds
sahf
mov
hlt
pusha
jb
stos
add
nop
xor
push
xchg
cwtl
sahf
xor
push
int3
movsb
push
mov
sub
cmpsl
adc
dec
enter
mov
fs
adc
cmp
mov
fldenv
push
hlt
rcrl
repnz
out
inc
cmp
ret
out
xchg
inc
ds
mov
rorb
mov
adc
add
or
xor
pop
pop
or
js
fnstenv
dec
mov
mov
mov
insb
xor
mov
rcrb
cs
ja
sub
cmpsb
lock
and
adc
mov
and
or
jmp
icebp
or
push
test
xor
lods
inc
pop
or
clc
dec
mov
rcrl
jnp
cmpsl
xor
sub
stos
roll
mov
mov
faddl
std
add
adc
inc
ret
cmp
roll
sbb
mov
mov
push
stos
adc
fidivrs
sbb
push
xchg
out
fs
cmpsl
insb
aam
test
popf
aad
das
aam
jno
pop
stos
les
fistps
sti
addr16
cmc
imul
aas
xchg
sahf
jo
and
in
mov
or
push
icebp
mov
xor
mov
mov
mov
pop
iret
insb
repnz
xchg
mov
movsb
mov
add
mov
or
xchg
adc
xor
mov
xchg
sub
mov
in
mov
push
cli
inc
pop
mov
test
movsb
or
sbb
lret
sbb
push
jg
mov
cmp
sbb
xor
xor
cmp
xchg
xlat
dec
cltd
call
repz
roll
jle
cmp
into
mov
push
add
pop
loope
jbe
push
push
jl
rorb
cmp
js
pop
inc
jbe
pop
call
xchg
cmp
lcall
outsb
adc
and
cmc
cmc
mov
pop
lea
popa
inc
cmp
repnz
add
xor
loopne
push
das
stc
cltd
push
scas
xchg
inc
xchg
mov
insb
stos
sbb
pop
push
mov
mov
mov
sub
pop
bound
or
pop
jl
call
xchg
push
out
add
loop
xchg
pop
sub
pop
push
sbb
or
divb
ficoms
xchg
stos
bound
push
ret
je
jge
pushf
iret
mov
aad
daa
sbb
je
test
xor
inc
lret
sub
or
jno
add
mov
cmp
cmp
push
std
movsb
xchg
or
out
mov
mov
ljmp
add
or
pop
pop
push
or
popl
mov
push
pop
jns
lock
jnp
ficompl
daa
fisubrl
pop
xor
lds
popa
dec
jge
mov
add
ret
mov
std
lock
mov
pop
sbb
sub
or
push
ss
fcmovu
push
add
iret
fisubrs
mov
add
pop
js
jno
mov
sbb
pop
xchg
call
cmp
fs
push
sbb
sbb
out
and
sbb
insl
add
push
hlt
adc
xchg
aas
fiadds
icebp
test
mov
jne
mov
sub
mov
sbb
lock
loop
ret
cmp
lods
enter
mov
bound
sbb
add
jb
movsl
xchg
mov
hlt
fwait
push
stos
inc
fstl
scas
clc
jmp
push
jl
sbb
in
cmpb
mov
leave
adc
out
inc
mov
std
dec
pop
testb
stos
cmp
jnp
iret
enter
rcrl
and
sub
push
mov
dec
ds
add
rorl
xor
add
aad
xor
inc
push
pop
sti
dec
mov
mov
icebp
mov
ud2
mov
push
bound
xchg
ret
push
mov
sub
sbb
xchg
rcrb
mov
inc
push
ja
sub
mov
rorb
icebp
dec
sub
rclb
rep
mov
add
loopne
loope
or
xchg
inc
xchg
icebp
jp
mov
imul
inc
int
shlb
shl
mov
loop
adc
fstps
push
sub
xchg
arpl
mov
pop
add
or
enter
lret
mov
or
inc
loopne
push
pop
pushf
mov
cs
lock
jle
into
daa
test
out
les
adc
outsb
in
dec
hlt
adc
les
imul
xor
nop
clc
rcll
jbe
pop
pop
mov
rorb
sub
and
popa
ds
or
xor
push
mov
cmp
xor
pop
les
cli
fwait
xchg
jge
in
mov
sbb
mov
sbb
sub
sti
inc
mov
push
std
loope
sbb
js
mov
xor
aam
imul
xchg
or
inc
stos
das
std
inc
call
add
lods
dec
mov
loope
adc
add
inc
and
jo
imul
nop
loopne
pop
movsb
cmpxchg
inc
push
mov
mov
xchg
lods
ljmp
push
jbe
pop
cs
les
enter
mov
adc
es
and
imul
cld
push
mov
pop
imul
icebp
adc
in
xor
pop
scas
jno
enter
sub
shufps
out
lea
loopne
xor
subb
inc
dec
sbb
or
pop
or
pop
fbstp
jno
or
sti
xor
inc
in
outsb
pop
mov
nop
cmp
pop
xor
push
mov
push
sub
xchg
fldl
fbld
mov
sub
movsl
or
cmp
fs
pop
push
int3
icebp
pop
cmpsb
inc
outsb
add
dec
loop
sbb
inc
shrl
jp
clc
arpl
dec
pop
xlat
cmp
mov
movl
adc
xorb
not
jmp
divl
sbb
inc
pop
xor
je
xor
addr16
gs
dec
clc
mov
mov
mov
sbb
std
icebp
cmp
mov
xor
fcmove
jge
inc
or
adc
outsb
pusha
bound
push
mov
hlt
sbb
inc
pop
and
mov
pop
pop
adc
sub
subb
dec
add
inc
cltd
stc
popf
mov
sub
add
mov
or
xor
mov
mov
mov
movsb
dec
mov
ja
dec
inc
sbb
mov
into
sbb
xchg
fldcw
lock
mov
movsb
push
lret
inc
mov
bound
rolb
adc
mov
sbb
fstpl
and
adc
fisubl
dec
sub
or
sub
add
push
push
jno
scas
adc
lahf
sbb
mov
mov
push
jmp
cmp
add
addb
mov
pusha
test
nop
inc
ret
test
bound
outsb
call
adcl
cmp
movsb
fisttps
insb
pop
adc
test
idivl
dec
les
rol
inc
js
jae
jg
lock
test
pop
les
repnz
mov
push
repnz
sub
sahf
hlt
shr
loop
mov
aam
add
fidivrs
or
das
sbb
dec
xor
aad
xor
aad
call
and
sub
mov
ud2
jge
sub
rcl
testb
pop
mov
or
mov
pop
xchg
dec
xchg
inc
imul
xchg
fldt
or
jg
push
je
adc
in
jne
add
push
adc
in
push
push
adc
mov
cld
and
push
dec
ret
adcl
pop
jle
dec
push
fimull
inc
faddl
call
pop
loopne
and
rcrl
mov
jge
dec
int
adc
push
cmpsl
aam
inc
mov
sbb
mov
pop
dec
sbb
dec
and
clc
mov
call
mov
pop
and
push
repnz
and
cmp
cwtl
insb
pop
out
repz
jb
xchg
jge
sahf
sbb
loopne
fimull
out
addr16
mov
subl
ret
and
cmp
push
rcrb
inc
js
sub
jo
pop
imul
pop
xlat
loop
rolb
adc
clc
insb
fs
push
insb
jge
or
mov
xor
add
adc
mov
mov
inc
dec
jecxz
cmpsb
mov
lret
lods
xchg
xor
rolb
vpsllw
push
outsl
mov
cli
mov
inc
movsb
testl
test
enter
dec
add
addl
jmp
lcall
sbb
pop
imul
push
stos
push
sub
insb
xchg
mov
push
out
repz
jp
int3
inc
stc
jnp,pn
xchg
add
cltd
shrl
pop
test
fnsave
fs
addl
mov
mov
fimuls
cmp
xor
ss
inc
cld
cltd
xchg
fisubrs
and
sbb
mov
pop
rolb
js
pop
int
push
nop
mov
cli
or
shrb
inc
adc
std
sbb
push
es
stos
adc
xchg
jp
faddl
int3
test
hlt
sub
push
cs
lock
loop
imul
lahf
aad
gs
lea
pop
adcb
loopne
ljmp
xor
dec
std
adc
hlt
ja
xchg
jp
dec
push
or
call
jge
test
mov
mov
push
jmp
pop
mov
daa
sbb
cltd
lret
sbb
mov
cmp
sub
or
movsb
add
mov
cs
cwtl
mov
and
sub
stos
and
xchg
add
divb
outsl
lock
pop
pop
sbb
jo
cmpsb
jbe
int3
js
je
pop
lods
je
pop
shll
test
loop
push
rcll
or
shr
sub
pop
mov
push
sbb
nop
or
cld
aad
loopne
jnp
pop
jo
cmp
cmc
daa
lock
or
pusha
or
andl
incb
in
sahf
cwtl
popf
pop
loopne
mov
rcl
ljmp
mov
mov
dec
leave
data16
add
or
push
jg
test
test
lahf
cmp
fisttpll
sbb
int
stos
lds
sbb
xor
ret
stos
jg
push
sahf
popf
mov
mov
add
or
cmc
adc
icebp
push
or
lea
adc
aam
testl
and
pusha
add
push
jg,pn
ljmp
mul
mov
lea
out
scas
outsl
pusha
bswap
cld
push
xchg
sahf
or
fildl
call
test
add
cmc
daa
nop
or
iret
cmp
stc
enter
lds
jle
div
add
int
sub
fsubs
pop
cli
cmp
pop
ds
rcrl
aaa
lock
cwtl
add
ss
in
dec
in
jns
or
lods
dec
pop
add
rcl
or
or
adc
dec
xor
dec
sti
ss
lds
pop
or
mov
pop
dec
jmp
jo
inc
mov
xchg
lcall
pop
xchg
jecxz
les
roll
mov
out
rcll
lds
in
test
popf
mov
pusha
jl
stc
adc
xor
xor
scas
js
and
loop
lret
mov
jg
push
jmp
or
jmp
or
add
mov
or
jecxz
xchg
xor
push
arpl
dec
xor
cmpsl
stos
leave
xchg
add
addl
pop
pop
xchg
psubusb
popa
cmp
in
mov
shr
lds
insb
js
jne
insb
lahf
cs
daa
pop
cs
add
adc
pusha
mov
aas
mov
mov
das
and
xor
mov
and
push
or
xor
ds
inc
mov
dec
pop
jl
jmp
ret
inc
or
popl
nop
mov
inc
in
xchg
cwtl
push
and
clc
push
push
rolb
outsl
dec
pop
push
xor
add
mov
adc
lcallw
faddl
adc
mov
mov
mov
lcall
test
dec
or
or
mov
fprem
jnp
fisttpll
push
pushf
arpl
push
or
xchg
in
pushf
and
insl
movsb
rcrl
xlat
mov
loope
xlat
pop
sub
movsl
sbbl
push
sbb
leave
rclb
dec
aaa
in
pusha
lods
out
popf
shl
pop
xchg
test
or
in
ss
scas
add
pop
push
ss
inc
in
jp
cltd
xchg
in
jg
xor
pusha
cmp
rcl
mov
clc
fcmovne
mov
insl
ljmp
sbb
rcll
loop
mov
sbb
add
push
mov
mov
stos
int3
loope
orl
es
push
mov
inc
cmp
clc
xchg
mov
movsb
cli
test
les
jp
xchg
mov
les
cmp
leave
or
push
mov
outsb
sbb
jl
shlb
and
js
enter
and
mov
jbe
push
in
das
aaa
scas
pop
je
xor
adcl
mov
pop
lcall
and
pop
xor
push
pop
push
cld
mov
add
push
mov
cmovg
idivl
xchg
mov
dec
pop
cmp
jbe
xchg
scas
pop
sub
mov
mov
jg
and
push
loope
pop
cwtl
icebp
sub
adc
push
inc
orl
inc
movsb
mov
mov
cld
xor
mov
or
daa
jle
pop
mov
xchg
push
cmp
xchg
push
pop
imul
jne
jp
cmp
rclb
mov
xchg
call
push
jle
out
mov
xlat
and
shl
xchg
inc
sub
ja
sub
mov
test
mov
addb
test
aaa
in
lods
mov
add
in
movsl
mov
call
jp
add
dec
mov
sbb
fcoml
mov
lds
xor
jnp
cli
cmpl
into
mov
pop
fnsave
clc
dec
dec
js
addb
add
sbb
mov
cmp
shlb
adc
cltd
out
fcmovu
add
imul
inc
add
js
lock
push
cli
hlt
adc
pop
or
pop
mov
push
bnd
add
cld
and
sub
dec
out
leave
lcall
nop
push
cs
xlat
pop
adc
insl
push
dec
inc
es
adc
pop
je
mov
and
or
stos
loope
pop
xchg
sahf
sbb
sbb
sbb
add
jno
pusha
dec
outsb
jle
ret
decb
ds
jp
mov
add
mov
mov
fidivl
test
inc
mov
sub
ds
dec
adc
pop
and
xor
push
pop
or
cltd
pop
sub
pop
pop
bound
or
sub
jno
sti
idivb
sarb
mov
pop
mov
sub
add
xchg
cmc
sub
mov
xchg
push
dec
pop
lds
movsb
push
pushf
shll
push
cld
xchg
aas
push
scas
cmp
lds
fnstsw
mov
xor
dec
or
js
les
inc
daa
add
xchg
cwtl
jge
rcll
rcrb
add
inc
pop
xor
shll
syscall
adc
pop
push
in
mov
adc
cmp
inc
mov
push
insb
add
push
and
jne
dec
repz
popa
adc
call
nop
mov
in
icebp
std
push
fisubrl
loopne
jne
mov
xor
xor
aam
jge
sbb
push
xchg
sahf
mov
dec
ficompl
scas
or
mov
loop
rolb
push
mov
mov
jg
lock
call
ss
repnz
add
cmc
and
cmp
dec
in
xor
cli
imul
xor
mov
add
mov
cmp
sub
ret
sahf
clc
clc
jp
jb
xor
mov
jge
rorb
ja
jnp
ss
cld
ja
and
popa
aas
mov
xchg
xchg
ror
into
in
mov
or
dec
pop
pop
and
inc
orb
out
and
andb
push
fisubs
push
mov
inc
cli
or
lock
and
sub
sbb
fldt
push
aad
add
in
push
xchg
movsb
in
hlt
cmp
adc
cwtl
xor
mov
jle
sub
pop
adc
add
loopne
aad
push
sahf
cld
jl
je
add
and
pop
cld
and
rcrb
sbb
or
lods
movsb
aaa
sub
rclb
test
loopne
std
call
nop
xchg
in
jge
xor
add
mov
dec
mov
xchg
scas
xor
pusha
adc
sahf
hlt
mov
stc
in
pop
cs
movsl
das
loope
xchg
fwait
add
xchg
inc
inc
arpl
sbb
lods
lcall
add
das
and
mov
fistpl
mov
jmp
sbb
mov
adc
test
fwait
jo
pop
xchg
pop
into
push
fcompl
out
pop
test
xchg
dec
sub
lcall
sub
and
cmp
push
pushf
xor
sub
lods
jb
out
xchg
ljmp
sbb
in
and
mov
das
dec
lahf
in
imul
jne
imul
cmp
push
aas
pushf
leave
fbstp
inc
and
divl
mov
lock
ret
mov
adc
inc
loop
add
fsin
push
lahf
sbb
sub
cmpsb
pop
pop
movsb
icebp
lock
push
ret
loopne
movsl
inc
test
push
cmp
movsl
mov
pusha
mov
sub
scas
xchg
ljmp
out
std
lods
cmp
dec
cmp
test
sbb
xchg
mov
push
sbb
and
push
jo
sub
dec
dec
iret
inc
stos
loop
aas
test
dec
imul
scas
sahf
popa
pushl
mov
inc
test
and
mov
stos
arpl
js
mov
fwait
inc
xchg
or
xchg
push
inc
in
adc
xor
sbb
mov
mov
cmp
xchg
and
lock
xor
push
cmp
outsb
add
sub
push
das
jle
and
push
or
out
sbb
outsb
aas
jle
orl
xchg
ret
jg
bound
idiv
in
loop
sbb
mulps
add
test
insb
add
test
sbb
sub
lret
mov
or
movsl
sub
sub
aas
rcrb
arpl
jo
dec
pop
fdivrs
scas
inc
push
adc
stos
shrb
stos
call
mov
inc
pop
add
dec
mov
mov
in
popf
gs
jo
push
ret
cmp
fsubrs
andl
stc
jge
test
push
and
fstl
mov
cli
push
mov
lock
nop
rorb
out
insl
jp
cmp
push
addb
iret
xlat
sbb
inc
sub
loop
pop
push
pop
sub
test
lods
cmpsb
push
push
jo
insl
xor
scas
jbe
sub
mov
sub
sub
hlt
jo
push
mov
enter
cmpl
or
mov
cmp
decb
aas
pop
inc
xchg
lret
lcall
inc
cli
jo
shrb
sbb
mov
scas
decb
and
mov
inc
xor
mov
cli
mov
jnp
and
or
stos
scas
enter
call
cmp
loope
js
pop
sbb
adc
outsl
lock
loop
loopne
pop
dec
xchg
ds
scas
jmp
sar
or
iret
pop
out
sbb
and
fadd
aam
rcr
push
sub
adc
js
jb
or
pop
or
out
jle
add
enter
shrb
mov
pop
or
mov
enter
enter
imul
xor
xchg
sub
in
testl
test
adcb
xor
js
mov
and
loopne
addb
fwait
lds
decb
push
cltd
dec
scas
ds
adc
fistl
lret
xor
cltd
movsl
pop
movsl
xlat
aam
loope
cmp
in
sub
dec
inc
imul
mov
test
jg
scas
rcrb
pop
orb
push
pusha
xchg
jns
and
in
adc
jnp
and
xor
xchg
stos
das
lock
outsb
mov
rolb
pushf
jmp
sbb
jmp
sbb
push
dec
ret
hlt
inc
jle
ds
or
in
and
shlb
push
pushl
pusha
mov
jge
lock
pop
pop
jne
pushf
cmp
lahf
push
pop
mov
add
dec
push
cmp
xchg
aad
jg
idiv
lock
jns
fisubrs
push
negb
pop
sub
add
pop
push
add
mov
popf
dec
cmpsb
dec
push
pop
lret
rcll
loopne
jp
sub
xchg
jl
jne
add
xchg
mov
push
jle
pushf
cmpsl
add
mov
cmp
push
mov
push
lods
pop
stos
out
add
stc
sub
jmp
mov
sbb
sub
cmpsb
jnp
inc
ret
jl
cmp
push
push
xchg
push
add
jno
stos
cmp
push
cmp
popa
js
mov
xor
fimull
in
and
sbb
push
push
scas
movl
movsb
icebp
aas
rolb
and
out
jmp
adcl
arpl
into
rorb
mov
mov
or
iret
add
lahf
mov
sbb
gs
add
mov
mov
pop
lcall
mov
cmp
mov
fsubp
push
pop
jmp
cmp
ret
popf
sub
cs
jnp
adc
jbe
test
push
call
sbb
push
dec
loopne
mov
xchg
dec
or
js
loope
and
mov
dec
adc
mov
nop
push
mov
xor
and
out
inc
in
jno
dec
cli
insb
xchg
xor
inc
inc
movsl
jl
jp
jnp
pusha
inc
decl
pop
or
arpl
sub
rolb
push
aas
push
shl
xor
test
xchg
cmp
pop
inc
inc
add
imul
push
insb
lods
pop
mov
lret
sub
jo
sub
loop
pusha
xchg
or
js
cmp
jae
dec
dec
ss
dec
xor
shll
cmp
xchg
jbe
int
lods
push
jne
adc
addl
push
adc
lahf
lret
xor
sbb
sub
push
cmp
lods
and
fcomip
das
xchg
jecxz
mov
adc
pop
sbb
in
xchg
mov
adc
and
pop
js
arpl
sub
call
push
push
shlb
cmp
ss
mov
hlt
or
mov
push
sub
push
jbe
ds
cmp
mov
mov
xor
loope
fld
cmp
pop
and
push
jg
or
je
xchg
pop
shlb
leave
mov
lcallw
mov
pushf
hlt
cli
adc
out
clc
addr16
xchg
mov
mov
mov
cld
fistps
ja
or
and
sti
dec
fmuls
dec
sbb
mov
sbb
inc
movsb
fs
std
movsb
lahf
cli
imul
add
scas
mov
mov
xor
xchg
sub
adc
fbld
cli
in
push
add
cmp
jle
add
jb
out
sbb
push
cmpsl
push
push
and
scas
xor
mov
xchg
add
push
neg
pop
sbb
in
in
push
lods
addr16
cmp
xor
inc
add
jo
mov
sbb
push
cltd
dec
clc
sub
jp
testl
insb
in
mov
pop
imul
or
shrl
lock
insb
sbb
lock
mov
movsl
lods
pop
cmpl
addr16
mov
outsl
cwtl
push
hlt
sub
les
iret
cmp
test
and
xchg
add
cmp
or
insl
mov
add
dec
cld
fadd
and
sbb
arpl
push
xchg
push
in
add
xchg
loopne
xor
xchg
ret
shl
idivb
and
xchg
push
cli
mov
inc
mov
mov
rcll
ss
xor
rclb
jmp
push
lfs
adc
rorb
sahf
mov
shll
test
cmp
jno
sub
mov
dec
sbb
pop
ret
inc
sub
pop
mov
inc
mov
in
and
test
je
mov
sbb
mov
fdivl
push
inc
sbb
ficoml
scas
sahf
sub
pop
pop
mov
movsb
xor
jp
mov
add
pusha
popf
pop
lret
scas
mov
cwtl
or
mov
or
std
xchg
mov
or
test
adcb
sub
sub
sub
or
loopne
pop
fisubl
shl
shlb
and
adc
adc
xchg
lods
sbb
mov
jno
mov
xor
inc
loopne
punpckhbw
xchg
or
cwtl
sub
or
loop
or
dec
mulb
insl
push
repnz
lea
scas
push
test
push
je
inc
movsb
pop
out
je
push
push
aas
bound
dec
jge
adc
inc
push
add
inc
pop
xchg
arpl
mov
pop
js
inc
in
cld
aaa
cli
rcll
popa
adc
repnz
cli
arpl
dec
js
pusha
rorl
les
clc
mov
addb
pop
jno
cli
mov
in
pop
insb
push
in
pop
sbb
add
push
push
mov
adc
mov
es
daa
and
sub
xor
mov
mov
jbe
fildll
fbstp
cmpsb
leave
negl
jecxz
or
sub
add
clc
mov
inc
xchg
push
pusha
sti
adc
mov
jns
mov
addl
je
push
jns
mov
loop
adc
add
sbb
sbb
clc
adc
test
in
pop
fsubl
les
dec
cmp
fwait
movsl
clc
call
pop
pop
and
call
and
jo
pop
insl
push
cmpb
orb
sub
xchg
aam
fdivl
sbb
fwait
inc
inc
daa
mov
mov
sbb
cmp
das
mov
sbb
mov
mov
stos
or
and
mov
add
xchg
out
cmpb
and
sahf
insb
mov
xchg
xor
mov
inc
cs
xchg
adc
mov
or
jmp
mov
xor
in
push
ror
inc
les
and
stos
test
pop
mov
andb
lret
jmp
or
inc
fadds
and
pop
push
enter
clc
wrmsr
stos
xor
movsb
add
std
bound
frstor
jge
das
cli
repnz
iret
add
aaa
fdivl
cld
mov
cmpl
xchg
stos
or
or
adc
shll
pop
movsl
and
sub
cli
xor
cwtl
mov
scas
push
add
stos
pop
mov
lret
lcall
inc
or
daa
xchg
push
mov
in
sti
lds
jp
push
inc
lea
aas
inc
pop
call
add
dec
nop
inc
push
flds
mov
jnp
clc
sbb
sub
or
and
notb
fsubrs
and
mov
and
cld
test
lds
or
subb
dec
and
sar
popa
loop
cmc
xchg
dec
ljmp
cwtl
or
push
mov
sbbl
inc
or
das
xchg
cmc
jl
shlb
adc
add
fmuls
andb
shrb
pop
mov
in
pushf
sbb
popa
add
mov
xorl
popa
xor
pop
xor
lcall
inc
pushf
xor
jmp
es
clc
push
shl
jg
test
fildll
cltd
fldl
sti
outsb
push
sub
xor
adcb
arpl
iret
clc
and
add
orb
aad
cmc
mov
push
cmp
cs
or
adc
inc
push
xor
adc
fstps
push
inc
das
dec
lcall
ret
add
xchg
push
sub
ljmp
sub
repz
in
mov
mov
ret
inc
outsb
sub
push
inc
xlat
pop
dec
out
mov
pop
daa
mov
ss
mov
sbb
dec
cld
test
cld
bound
mov
scas
xchg
neg
insl
adc
pushf
jnp
pop
mov
or
dec
inc
pusha
mov
pop
jl
ss
shlb
call
pop
ds
xchg
les
cld
loope
lods
enter
notl
lcall
js
fsubrl
aas
je
adc
or
lock
add
pop
mov
dec
jl
notb
stc
adc
jg
and
sub
dec
je
and
std
lods
rcrl
jecxz
sti
add
sbb
popa
stos
jle
fdivr
lods
aaa
es
add
cmpb
into
ret
incl
and
mov
mov
clc
add
sub
xor
adc
std
inc
loop
xchg
mov
roll
rorl
stos
dec
inc
lds
clc
flds
rcll
fdiv
add
mov
adc
pusha
add
cli
inc
clc
hlt
mov
int3
push
sbb
lea
mov
pop
xor
add
xchg
out
stos
and
cwtl
pushf
iret
pop
sub
aam
pop
push
test
pop
sub
outsb
and
adcb
adc
jmp
push
pop
cmp
ja
fisubs
out
jge
paddsw
fadd
ss
mov
and
stos
push
mov
inc
mulb
scas
cmp
lds
sbb
ret
push
sub
xchg
sub
mov
aad
dec
xorl
push
add
loop
or
cli
mov
xchg
sub
fnstcw
dec
sub
sbb
and
mov
jmp
xchg
loope
imul
jb,pt
mov
pop
sbb
cmp
push
shlb
sbb
jge
jae
stos
sub
es
test
daa
or
iret
dec
rol
and
repnz
jne
ret
jmp
in
fistl
sub
add
xor
sub
dec
inc
or
and
pop
hlt
popa
inc
push
dec
lods
ljmp
outsl
test
pop
aam
fucomip
int3
add
cmp
pop
adc
xor
pop
or
sbb
das
dec
repz
mov
decb
cli
scas
push
cld
js
and
movsl
negb
sbb
add
mov
cmpsb
pop
pop
push
dec
mov
int
xchg
add
mov
out
fdivrs
fs
sbb
clc
fsubrl
jl
inc
and
jns
push
jo
or
aad
cmp
jns
call
sub
jle
adc
lods
xchg
or
ret
pop
mov
shlb
mov
mov
aam
mov
nop
stc
sub
xchg
cmp
adc
push
dec
pop
jno
insl
test
aam
inc
divb
shlb
pop
jge
or
push
loop
aas
mov
lahf
inc
mov
decb
notb
stos
in
dec
cmp
aam
inc
cmp
incl
and
mov
dec
addr16
or
repnz
sbb
xor
sub
addr16
adc
lea
int3
int
sbb
pop
sbb
das
push
xor
scas
in
adc
pop
adc
fisttpll
pushf
les
sub
sub
pmovmskb
ffree
mov
lock
in
outsb
jg
clc
jo
sbb
pop
mov
fmuls
int
shrl
push
inc
test
ficoml
jle
fs
lea
aam
and
mov
add
mov
js
sub
inc
js
js
mov
daa
std
ret
rolb
popf
inc
jl
and
inc
outsl
mov
pop
leave
push
je
lods
les
mov
fs
jo
adc
imul
cmp
jg
mov
xchg
mov
adc
shll
cmp
cwtl
std
jecxz
mov
adc
arpl
test
mov
xlat
cli
add
aaa
lcall
pop
pusha
int3
in
push
mov
xchg
fdivrs
jo
push
sar
seta
or
sub
xor
jp
insl
pop
pop
or
ss
ret
ja
adc
int
icebp
lahf
ret
fs
cmp
arpl
mov
adc
and
inc
cmp
movsb
rcl
mov
push
fwait
jo
sub
mov
aas
cmp
inc
cltd
inc
leave
enter
adc
or
adcl
icebp
ljmp
mov
unpckhps
cltd
add
sub
test
fisubs
out
pop
cmpsb
cmc
lods
jl
sbb
jecxz
and
jecxz
xor
ljmp
mov
push
ds
movsl
bound
xorb
data16
adc
inc
pop
clc
imul
imul
aad
and
dec
inc
rorb
jp
cli
xorb
lahf
and
xabort
pop
mov
ljmp
xchg
pusha
int
xchg
cmpsb
add
sbbl
mov
push
add
jne
xchg
in
loop
xor
les
mov
loope
in
out
cmp
or
mov
dec
shll
dec
ss
ss
jne
in
testb
mov
frstor
loopne
mov
xor
xchg
inc
bound
fwait
add
add
xchg
sbb
dec
sbb
adc
stos
lret
clc
lds
movb
sub
or
adc
sbb
mov
test
mov
and
dec
dec
mov
dec
mov
bound
and
dec
cli
jbe
test
mov
sbb
or
inc
lret
jne
or
rclb
lret
or
or
or
fwait
rcrb
pop
maxps
xchg
or
add
push
rcr
in
or
negb
daa
fnstsw
enter
sbb
lods
mov
pop
mov
std
outsl
add
lods
push
bsr
inc
insl
pusha
adc
lret
inc
xchg
shll
pushf
aas
xor
push
inc
or
cs
pop
or
and
aaa
cltd
push
adc
cltd
pop
es
nop
lods
jge
sbb
and
nop
mov
aaa
add
cmp
mov
pop
es
inc
mov
jmp
loopne
subl
nop
pop
cwtl
jo
loop
adc
mov
mov
shl
jecxz
stos
int
mov
inc
and
icebp
mov
int
mov
and
add
inc
sub
mov
sub
or
mov
test
insb
fdivp
cmp
hlt
pop
jecxz
jnp
test
fcmove
pusha
xor
call
inc
inc
inc
pop
flds
pop
pop
jl
loopne
xor
cmp
fs
inc
outsb
pop
jne
jl
repnz
cmpsl
mov
sub
repnz
data16
mov
inc
movsb
sub
lock
je
inc
test
les
jp
add
cli
jae
mov
addl
xchg
fcoml
xchg
or
mov
sbb
xchg
mov
divb
push
mov
cs
or
jp
pop
int3
xchg
popa
mov
and
aas
aas
add
push
and
daa
daa
mov
loop
mov
out
lock
adc
rorb
adc
fwait
aaa
fcompl
xor
xchg
into
repz
jnp
das
ret
dec
inc
cmc
pop
jo
call
movsl
sbb
pop
jl
and
dec
movb
add
dec
popf
dec
jne
ror
cltd
scas
xor
mov
aam
and
add
adc
faddl
popa
in
andb
dec
sub
lock
cmp
add
enter
outsb
adcb
scas
cltd
subb
or
sbb
cmpb
je
fisttps
inc
gs
push
ds
sbb
cmc
fsubl
in
sub
iret
adc
and
scas
push
into
nop
dec
xchg
inc
pop
sub
mov
mov
add
push
mov
sbb
loopne
push
sub
push
outsb
mov
leave
cld
cvtpi2ps
int
push
movsb
jmp
sbb
stos
js
adc
dec
dec
cwtl
mov
imul
jb
rorl
adc
mov
push
sub
mov
faddl
adc
sbb
push
bound
call
mov
adc
adc
xchg
in
push
add
jecxz
dec
stos
cwtl
in
dec
dec
sbb
fildl
xchg
push
cmc
inc
ljmp
pop
dec
test
xchg
icebp
add
jne
sub
inc
dec
jmp
cmp
xlat
sub
inc
inc
inc
jo
pop
sbb
cmpl
dec
loop
adcb
dec
mov
mov
mov
scas
push
pop
jo
notb
push
sbb
and
push
mov
add
mov
mov
out
insl
sahf
shrb
adc
mov
inc
out
repz
add
and
mov
fsubrl
stos
xor
jle
mov
inc
movb
sub
pop
mov
xchg
out
push
sbb
mov
call
pop
jge
pop
addb
lods
dec
pop
lret
lods
cmp
inc
es
cmc
ljmp
sbb
rorb
ss
scas
jmp
imul
push
xchg
sbb
jae
xor
jo
or
hlt
out
xorb
rcrl
dec
inc
add
mov
mov
push
hlt
pop
xor
push
data16
add
or
jne
pop
jle
mov
je
mov
xchg
test
cli
pop
xchg
mov
pop
lahf
inc
sbb
add
test
add
movsb
inc
mov
xchg
sbb
hlt
cmpsl
aad
jle
and
jo
jae
add
loopne
test
adc
push
cmp
pop
jno
mov
test
and
jecxz
mov
ret
lret
and
push
hlt
fidivrl
div
clc
pop
and
dec
js
cmpsb
jo
inc
pushf
or
sub
aas
and
shll
orl
stos
cmp
fiaddl
js
addl
xchg
sub
rcrl
inc
and
sti
jp
loopne
scas
cli
into
into
jecxz
xorb
fsubrl
cs
test
jmp
sbb
loopne
inc
shll
mov
pop
idivl
in
push
cmpsb
cmpsl
test
mov
push
pop
jns
sbb
and
xchg
dec
call
inc
shlb
sub
mov
cmp
pop
das
pusha
sti
jle
outsl
pusha
jmp
add
mov
ljmp
imul
dec
mov
mov
sti
aam
cmp
add
test
jae
pop
data16
out
insl
jb
add
addr16
sub
and
mov
add
lock
push
cs
or
xlat
xchg
mov
lahf
gs
outsb
dec
loopne
push
or
lods
pop
xor
subb
pop
inc
nop
mov
push
push
inc
insb
sub
push
mov
rorl
cmp
pop
or
rcl
jge
decb
shl
stos
and
xor
or
mov
sbb
mov
adc
movsb
mov
stos
or
cwtl
clc
call
adc
rol
enter
repnz
add
adc
mov
xchg
sbb
sarl
subl
out
nop
pusha
or
ja
ret
paddusb
mov
fcom
jmp
vpackuswb
xchg
sub
in
aam
adc
popf
into
mov
add
cmp
jo
mov
int3
outsl
repnz
das
or
lea
insb
loop
or
out
cmp
fbld
mov
dec
adc
pop
ds
jg
sbb
xchg
xchg
into
sub
icebp
lods
xchg
mov
push
aas
aam
js
mov
and
xchg
lret
pop
mov
fimull
pusha
scas
adc
mov
sar
and
cmpsl
and
pushf
xchg
jno
sarb
push
mov
test
push
add
jmp
lods
mov
pop
insl
int
mov
out
mov
mov
and
add
or
jne
jmp
cmp
outsb
pop
fs
xor
sub
adc
mov
and
loope
xor
xchg
xchg
mov
adc
push
sbb
jle
jnp
push
and
pop
inc
sub
add
test
sub
jle
push
adc
test
sbb
sbb
fldl
pop
push
and
add
add
xchg
imul
and
pushf
ljmp
das
bound
nop
mov
test
test
pop
stos
add
or
dec
pop
test
pop
bound
dec
not
dec
fildll
not
arpl
stc
mov
jne
mov
movsl
in
xor
repz
out
mov
dec
rcrb
inc
mov
jge
mov
sub
in
and
arpl
mov
lods
dec
sub
loope
dec
mov
sub
aas
sub
es
sarl
mov
outsb
fisttpll
mov
inc
mov
mov
push
jo
cmp
add
fld
xchg
push
xchg
cmp
sbbb
xor
push
repz
push
push
aad
outsb
in
inc
rorb
mov
mov
push
shll
int3
rclb
movsb
pop
les
jle
lcall
lret
and
pop
loopne
jae
jg
xlat
add
data16
adc
mov
pop
mov
mov
push
xchg
xchg
clc
test
sar
lock
stos
push
sub
add
or
push
push
in
pushf
mov
inc
mov
pop
sub
rol
or
addl
fsqrt
xor
mov
es
mul
or
mov
lret
mov
pop
cli
js
les
movsl
test
mov
cmp
in
and
imul
ljmp
mov
add
push
lea
sub
pop
mov
xchg
inc
jg
sbbb
ds
loope
and
mov
js
out
push
push
clc
or
pop
mov
add
cwtl
pop
lds
jge
or
mov
mov
mov
jle
inc
xor
and
jae
sub
nop
mov
or
imul
fisttpl
orl
mov
push
xchg
jo
or
std
jp
rcl
adc
jb
mov
cs
sbb
mov
pop
loope
cli
push
jl
cmpsb
add
mov
add
jno
aad
rclb
mov
push
mov
xlat
out
lahf
clc
dec
push
mov
sub
enter
jle
rcl
pop
adc
popf
jle
cmp
repnz
loop
inc
subl
jecxz
pop
loopne
mov
outsl
sbb
inc
cmp
sbb
jle
aas
lods
lea
pop
jl
je
sub
adc
mov
stos
sub
jne
add
fistps
ss
sub
rol
sbb
or
clc
adc
fnclex
inc
pop
test
pop
mov
aam
pop
ret
jl
and
mov
mov
jl
add
lock
mov
xchg
imul
cmp
ljmp
stc
push
mov
xor
pop
sbb
call
xor
popf
add
lahf
or
call
add
ret
sarl
scas
mov
jp
mov
les
lret
test
bound
js
aas
ds
mov
enter
inc
lock
roll
jge
jo
cli
fiadds
mov
jge
sahf
fdivs
and
jo
scas
and
sbb
fimuls
arpl
test
je
test
inc
shll
add
mov
or
fwait
pop
orl
sbbl
mov
data16
addb
dec
push
pop
mov
scas
jno
xchg
mov
push
cmc
enter
xchg
add
pop
or
scas
mov
adcl
std
sub
and
pop
cmp
adc
aam
lret
ss
sub
call
or
mov
sbb
mov
jae
outsl
push
xchg
movsl
or
mov
mov
inc
stos
dec
fiadds
cs
or
pop
rorl
add
push
xor
in
adc
in
cmpsl
add
inc
mov
in
add
fisttpl
cmp
dec
divl
rcrl
ret
inc
inc
mov
pop
std
and
dec
add
jle
test
adc
leave
js
addb
push
in
xchg
mov
enter
cmp
fwait
outsb
push
push
push
nop
cmp
xchg
jl
aad
js
inc
flds
sbb
inc
sti
pop
or
lcall
and
inc
leave
fst
aad
fst
xchg
mov
sub
nop
test
jp
cld
scas
nop
add
add
inc
cmp
dec
fcomp
push
fsts
dec
add
jnp
inc
pop
int
stos
inc
fcompl
push
adc
adc
loopne
add
leave
adc
lcall
subb
call
jge
inc
ja
sub
lods
dec
scas
fmuls
hlt
fwait
aam
xchg
subps
js
rorb
lock
into
ss
lock
cmovl
mov
cltd
inc
cmp
sbb
call
sub
and
dec
in
cmc
sbb
jno
loop
ja
mov
xchg
inc
push
nop
inc
sbb
insb
ss
rcrb
mov
repnz
inc
mov
mov
ja
xor
add
ljmp
push
adcb
and
adc
adc
shrb
adc
dec
pop
in
cli
or
rcll
pushf
add
push
xchg
push
mov
push
subb
int3
sub
jecxz
repz
dec
push
cld
adc
push
mov
lahf
jg
in
mov
adc
mov
or
jbe
es
pop
jmp
data16
es
sub
lret
inc
outsl
push
push
loope
adc
jp
and
or
orb
mov
xchg
test
je
add
jmp
inc
outsl
in
sub
xor
jno
call
cmp
mov
cmp
xchg
inc
xlat
jg
mov
inc
pop
shrb
pop
cli
clc
xchg
mov
cli
imul
mov
xchg
ljmp
sbb
lea
dec
mov
mov
ret
adc
adc
push
dec
push
sub
inc
inc
es
inc
push
je
jo
cld
roll
push
adc
rorb
mov
icebp
xchg
push
stos
jb,pn
push
idiv
leave
outsb
lea
enter
repnz
icebp
push
lcall
dec
jnp
es
mov
push
repz
aam
xchg
cmp
jnp
add
xchg
nop
ljmp
push
add
mov
outsb
push
mov
and
jle
dec
mov
int3
je
stos
inc
fistl
ss
pushf
lea
jbe
outsb
lret
lods
and
gs
js
mov
and
cmp
mov
clc
in
mov
pop
cli
and
iret
out
jns
int
cmpsl
adc
pop
sbb
sub
mov
jne
or
movl
jae
movsl
ficoms
and
out
push
call
das
fsubrl
push
push
shrb
lcall
paddb
sub
dec
add
pushf
cmpl
sub
je
imul
add
mov
push
pop
lods
rcll
clc
cwtl
mov
popa
aam
test
cmp
mov
ss
mov
mov
shr
pusha
push
lods
mov
add
fnstcw
test
ljmp
mov
push
xlat
xor
xchg
push
sub
insl
add
loopne
add
clc
xchg
ljmp
mov
push
aaa
inc
push
mov
dec
stos
mov
mov
mov
sub
dec
push
jg
jecxz
js
xor
mov
sbb
lock
fadds
add
pusha
push
mov
and
pop
mov
cld
mov
std
ja
std
aam
inc
adc
or
ret
xchg
int
lahf
jbe
gs
cmp
mov
jmp
test
je
mov
sbb
pop
xchg
ret
cmp
cmpsb
push
aam
dec
imul
stos
cld
cwtl
cwtl
cmp
loopne
rcll
xor
in
js
sbb
enter
cmp
sbb
outsl
and
pop
leave
popa
mov
xchg
lods
arpl
loope
adc
jmp
mov
push
mov
lahf
ret
inc
xchg
inc
jne
cld
or
cli
out
cmp
add
lds
shlb
cmc
movsl
cltd
mov
jge
outsb
adc
or
loope
dec
aam
pop
mov
cmpsb
add
fisubl
cmp
mov
jp
dec
or
lcall
test
xchg
cmp
ds
stc
movsb
mov
loopne
cmc
scas
shrb
or
push
fmuls
loopne
imull
cld
push
mov
test
icebp
das
shll
xchg
and
cmp
jns
push
mov
xchg
cmpsl
mov
jo
mov
fcoms
ret
ror
rcl
lret
outsb
je
inc
lea
cmp
in
push
and
mov
iret
pushf
inc
inc
shlb
mov
orl
and
pop
outsl
cwtl
inc
popa
mov
inc
cs
call
dec
rorl
jmp
adc
cld
inc
jo
xchg
shlb
mov
or
dec
cmpsb
imul
jbe
add
movsb
js
adc
xor
xchg
bnd
popa
outsl
imul
mov
fwait
cmp
loope
jbe
or
mov
test
mov
fdivrl
scas
adc
je
lret
cmp
imul
xchg
xor
lock
arpl
inc
add
nop
dec
dec
loopne
cmp
imul
add
mov
push
and
jg
popa
push
in
sbb
call
add
jp
cmpsl
mov
mov
inc
popl
or
fiadds
xor
adc
jne
test
inc
jne
xchg
outsl
sbb
aas
pop
pop
jnp
mov
xchg
in
mov
iret
fildl
divl
gs
lret
out
cmp
mov
arpl
pop
add
adc
lods
pop
cmp
das
lods
int
into
fistl
out
mulb
ljmp
loope
add
jno
out
lret
mov
int3
fdiv
dec
shl
jb
cwtl
mov
jge
jae
xchg
nop
jno
int3
and
enter
xor
fistpl
push
ret
leave
shlb
inc
push
jl
sbb
and
push
mov
push
jl
jecxz
mov
push
cld
mov
rclb
insb
adc
mov
sbb
fsubs
jecxz
shlb
dec
stc
adc
mov
jecxz
fists
addb
mov
mov
fisubrs
nopl
cmc
mov
push
leave
jno
pop
in
outsl
mov
push
leave
lods
andb
pusha
mov
xor
les
push
or
push
js
out
sbb
dec
shlb
mov
std
mov
push
push
mov
idiv
movsl
add
and
push
notb
popa
mov
pusha
hlt
faddl
je
addr16
mov
pop
dec
mov
lds
mov
push
test
adc
jg
push
and
and
xchg
lahf
or
lods
jnp
stos
pop
pushf
mov
xchg
mov
jo
pop
fbstp
xchg
enter
clc
push
sub
daa
shrl
fiaddl
je
stos
rcl
add
subl
adc
cmpsl
jbe
push
xchg
je
sub
push
fcomps
int
dec
fdivs
xor
push
ds
addr16
fcomp
std
push
lea
out
fidivl
push
or
outsb
adc
mov
cs
mov
dec
popf
and
xor
inc
scas
jnp
stos
outsb
loop
and
jo
xchg
add
mov
cmp
pusha
xchg
dec
int3
cmp
insb
ja
loop
jle
xor
push
mov
push
inc
dec
test
and
pop
fbld
sbb
and
push
mov
pusha
sarl
call
push
cli
push
jl
mov
scas
push
push
xchg
add
pop
or
pop
push
lods
loop
loope
rcrb
pop
outsb
aad
pusha
xchg
ds
adc
dec
dec
xchg
rclb
fmuls
fs
rorb
rclb
ljmp
nopl
mov
or
mov
inc
xchg
cmp
mov
xchg
xor
pop
xchg
pop
lds
daa
es
adcb
ljmp
lods
adc
push
in
pop
mov
movsl
cmpsl
pop
ds
inc
mov
ror
xor
adc
shll
push
pusha
je
fcomps
repz
in
xchg
movsb
cld
mov
out
mov
je
cs
add
stos
cwtl
rorb
cltd
sbb
insb
cmc
test
push
mov
jecxz
inc
pop
or
repnz
test
pop
or
iret
inc
mov
push
mov
andl
or
xor
je
cmp
hlt
ss
xchg
mov
pop
sub
push
push
lock
test
sahf
fs
push
sub
ss
fisubl
mov
andl
mov
clc
xchg
jle
repnz
andb
inc
pop
mov
lods
inc
imul
imul
test
arpl
je
cltd
mov
inc
pushf
mov
test
mov
xchg
data16
mov
sbb
add
and
adc
inc
mov
push
xchg
addl
or
pop
cs
sbb
jp
add
or
out
or
jne
xor
rcll
scas
dec
mov
outsb
dec
xadd
inc
xor
pusha
mov
loope
mov
sbb
cwtl
mov
es
and
rcrb
lahf
in
mov
je
add
push
testl
aaa
sbb
bound
xor
add
inc
loopne
pop
xor
stos
test
sbb
cmp
and
je
mov
mov
cltd
out
mov
aam
push
or
fstl
and
bound
sarl
stos
cmpsl
pop
cli
inc
fwait
and
sbb
sahf
mov
cmc
out
xchg
aaa
decb
mov
lret
cmp
sub
and
dec
lcall
out
dec
xor
or
jecxz
add
arpl
lret
and
sbb
cltd
idivb
inc
test
xor
daa
std
xchg
xchg
jmp
sbb
pop
shrb
test
iret
decl
mov
pop
shlb
addl
mov
test
xor
icebp
mov
js
les
ltr
fimuls
mov
inc
clc
pop
popl
mov
or
iret
daa
and
jno
and
mov
aad
mov
xchg
add
shll
test
add
sbbb
pop
test
pop
mov
cmp
lea
xchg
fstl
call
popf
pop
ljmp
inc
out
mov
ljmp
lcall
ja
shlb
out
push
pop
pop
inc
aam
and
call
fnstsw
sub
aas
and
lock
aas
sbb
adc
adc
and
imul
mov
sub
scas
daa
dec
pop
xchg
outsl
xorb
shl
cmp
adc
mov
push
cmp
mov
hlt
adcb
push
sub
js
iret
jns
roll
lods
icebp
outsl
popa
inc
add
enter
push
dec
mov
jl
rcl
nop
inc
popa
and
mov
mov
filds
sahf
jle
into
xchg
mov
or
mov
enter
pop
lea
out
sti
dec
or
mov
mov
jo
xchg
pop
mov
in
cs
inc
test
filds
aaa
xchg
js
data16
fcomps
out
sbb
mov
adc
leave
add
popa
pop
mov
mov
sbb
cmpsb
adc
add
daa
sbb
adc
popf
adc
dec
xchg
lods
aaa
adc
push
and
jne
clc
sub
stos
or
dec
or
popl
loop
pop
aas
loop
rorb
cmp
arpl
in
sbb
movsb
mov
iret
mov
rcrb
repnz
sub
xchg
cmp
xchg
pop
jl
lahf
mov
xor
clc
rolb
rcrb
push
popf
push
mov
mov
pop
ret
inc
sub
or
cmpsl
or
into
sbb
cmc
xor
sbb
sti
dec
inc
cld
and
test
cmp
mov
or
ret
xchg
sbb
nop
xchg
std
je
add
sbb
sarl
xor
inc
cmpsl
jmp
clc
and
push
jle
or
cld
jns
aam
repnz
paddsw
mov
inc
add
and
push
jb
filds
loopne
je
pusha
xchg
nop
pop
enter
scas
lret
jo
or
push
mov
inc
pop
sbb
in
imul
sub
inc
mov
add
enter
adc
push
mov
mov
dec
outsl
and
hlt
lahf
or
push
scas
shll
add
xlat
push
adc
outsb
mov
or
pop
mov
je
cmpsb
push
and
aaa
dec
aas
xor
sub
cmp
pop
mov
ss
inc
lcall
daa
mov
mov
add
lret
out
cmp
sub
cmpsl
sbb
gs
push
add
ret
sbb
sti
lret
lea
fs
push
iret
mov
popf
lods
inc
arpl
jg
jg
xchg
cld
movsb
push
add
addr16
loope
push
jbe
mov
add
mov
sub
xor
arpl
test
xlat
mov
fstpt
fisttpll
jmp
test
sbb
sbb
push
jge
xchg
or
rolb
loopne
testb
mov
inc
pushf
lcall
cltd
inc
sub
jecxz
push
inc
aas
lret
push
int3
movsl
mov
mov
dec
sub
xor
loopne
loope
sbb
jb
inc
js
scas
dec
call
push
mov
jecxz
inc
ret
out
inc
mov
mov
add
shll
add
outsl
shlb
mov
push
das
jne
cmp
in
mov
sub
xor
lea
mov
pop
out
lods
jge
mov
sbb
mov
xor
lcall
mov
jb
cmp
bound
mov
iret
and
jne
lret
add
xchg
jl
and
pop
mov
or
mov
mov
mov
xchg
in
or
ret
aam
lods
pop
mov
movsl
in
sub
mov
clc
mov
call
shll
shlb
mov
cwtl
mov
ret
test
insb
out
and
mov
pmuludq
out
or
dec
push
test
inc
pop
mov
and
mov
push
xor
std
dec
mov
cmpsl
ljmp
cmp
mov
xor
js
addb
or
dec
jle
fimull
add
push
xchg
pavgw
lret
mov
or
jge
pop
jp
loope,pn
xorb
xchg
pop
in
xlat
rclb
cs
dec
cwtl
add
orb
scas
movsl
jo
or
xchg
lahf
cmp
mov
or
add
insl
aam
ljmp
inc
ja
push
arpl
jg
fistpll
adc
lods
jb
inc
mov
inc
bound
push
nop
xor
xor
push
into
push
lea
imul
lcall
dec
test
dec
jne
mov
imul
insl
xor
add
jmp
inc
mov
jnp
int
sub
std
popa
pop
push
pushf
cmpsb
jp
into
xchg
aas
jae
sub
rcrl
and
xor
lods
adc
mov
jno
mov
gs
push
sbb
out
or
cmp
xchg
jo
in
and
or
inc
sbb
gs
lahf
stos
cmp
cli
jnp
ficomps
repz
xchg
cmp
insb
cwtl
cmpsl
xchg
mov
xlat
mov
push
and
out
mov
roll
sahf
pop
sub
movlhps
mov
cmc
xchg
je
xchg
xchg
sub
movsb
xor
out
imul
xchg
push
jecxz
sbb
lock
outsl
xor
dec
cltd
jmp
mov
sbb
push
faddp
dec
lock
sub
fistpl
dec
ljmp
aas
in
fimull
inc
push
icebp
pop
icebp
and
daa
cs
pushf
pop
pop
add
push
into
mov
mov
mov
dec
lods
scas
xchg
push
shl
push
push
mov
outsb
and
inc
jg
or
mov
mov
out
lods
pop
cld
insl
pop
sarb
fistl
rcl
and
sbb
mov
or
and
lret
cmp
and
loop
scas
pop
rorb
ret
and
fwait
push
movsb
sahf
jge
and
sub
xor
inc
push
icebp
push
push
xchg
mov
cmpsb
mov
enterw
pop
lret
pop
test
xor
mov
add
push
outsb
scas
push
clc
add
and
sbb
cmp
mov
out
pop
or
in
movsb
mov
inc
in
daa
jp
ret
push
clc
add
mov
jno
fs
daa
int
sbb
mov
add
mov
adc
cmc
push
pop
pop
push
leave
pop
stc
ds
inc
dec
andl
mov
lds
mov
icebp
sbb
arpl
sbb
lea
pop
and
shll
mov
sub
inc
add
ss
or
pop
xor
and
rcll
and
add
sub
negl
ja
cltd
outsb
xlat
jo
shr
stos
adc
popa
xchg
idivl
pop
dec
std
pop
cmp
jmp
call
push
pop
mov
or
cmp
jbe
in
rorl
push
pop
inc
xor
fsubs
mov
xor
das
pop
push
addr16
gs
xor
dec
aaa
sbb
movsl
inc
and
fs
mov
xchg
das
popl
mov
pushf
popa
outsl
cmc
lret
outsl
dec
mov
clc
and
jb
pushf
and
fcmovbe
std
shll
std
test
mov
or
test
bound
pop
aaa
adc
int
xchg
and
popa
outsl
adcl
outsl
jne
cmp
out
outsl
movsb
stos
shl
dec
fisubrl
inc
scas
xor
xor
les
sbb
adc
jno
pushf
or
and
es
jmp
ret
dec
jo
inc
cli
bound
in
mov
cwtl
lock
clc
pop
and
imul
test
mov
das
adc
mov
add
inc
fwait
icebp
mov
inc
jno
fwait
push
add
or
cmpl
jle
xorl
jl
mov
jp
jns
fmuls
hlt
mov
dec
cltd
push
mov
stos
add
xchg
mov
js
in
in
xor
inc
nop
and
add
mov
cld
dec
xor
outsl
cmp
sub
fadd
xchg
and
dec
mov
fidivrs
mov
xchg
mov
into
mov
inc
cmp
dec
and
inc
mov
out
add
jp
cmovl
inc
dec
das
in
lds
xchg
testl
push
cli
jp
mov
cmp
pop
jnp
loope
lock
ret
add
dec
adc
ja
js
leave
ja
sbb
inc
icebp
and
sbb
xor
push
imul
push
jb
shll
push
dec
lcall
rolb
xchg
sbb
jge
mov
aaa
jo
stos
sub
insb
inc
pushf
stos
pusha
inc
daa
push
mov
push
add
inc
jecxz
loope
fildll
jecxz
sub
mov
or
cwtl
cmp
push
pop
add
cltd
popa
jne
mov
sbb
xor
ja
or
inc
inc
dec
sbb
and
add
cmpl
push
dec
mov
imull
xchg
jo
xor
int
push
jae
mov
jp
and
in
mov
mov
jle
shrl
lds
testb
lds
cmp
mov
or
mov
xor
mov
pop
sbb
lret
out
mov
test
inc
push
adc
js
jns
xchg
add
xor
test
and
data16
jae
lock
sub
repnz
fsubs
xchg
xchg
adc
fwait
loopne
add
in
scas
or
dec
push
cmpsb
fldt
aaa
into
adc
rolb
movlps
jmp
in
in
loop
shlb
pop
push
xor
jge
imul
jle
in
mov
jp
aas
repz
mov
fcmovu
lds
stos
dec
jmp
sti
aam
mov
scas
sub
xchg
int
xor
daa
inc
test
xor
dec
fbstp
xor
outsb
iret
dec
pop
sbb
cmp
sbb
movsl
cld
adc
inc
jmp
sub
mov
pop
lods
cmp
mov
inc
sbb
fidivrl
gs
adc
or
xchg
ret
sahf
clc
mov
pop
rorl
jno
jmp
stos
xor
xchg
push
shlb
leave
movb
lods
or
shl
sbb
cwtl
loop
mov
xchg
sbb
pop
daa
add
jp
dec
mov
stos
pop
pop
or
in
sahf
imul
mov
jmp
pushf
xorl
push
mov
push
arpl
cltd
cmp
sbb
jo
inc
cld
int
xchg
shll
jecxz
out
sub
iret
dec
mov
shlb
dec
xor
mov
aas
xor
pushf
movsb
push
out
jno
pop
mov
lock
ljmp
jns
std
dec
cltd
sbb
xchg
and
cld
jl
daa
ss
jg
cmp
sub
push
pop
dec
and
das
dec
jo
sub
js
add
cmp
pop
jns
movsl
mov
mov
movsb
mov
ror
lods
loope
cltd
lahf
sub
shl
mov
jns
pop
and
and
add
lock
push
popa
xor
cmp
push
sub
mov
mov
vmovhps
jmp
jno
mov
or
and
sbb
addl
and
sbb
sub
push
adc
sub
roll
mov
hlt
push
inc
cmc
outsb
mov
cmp
xor
imul
fucomi
or
cmc
or
outsl
mov
mov
imul
jle
insl
cs
aam
iret
sbb
aaa
mov
sti
loope
add
inc
mov
jo
or
pop
inc
je
cmp
ret
scas
lret
push
xor
adc
loope
push
mov
cli
xor
fldcw
nop
lods
cmpsb
scas
mov
pop
test
ret
or
orb
daa
sbb
sbb
pop
cmc
mov
adcb
pop
push
cwtl
insl
mov
pop
lea
xorb
loop
aas
fdivs
push
inc
pop
pop
add
stos
pop
loop
add
push
pop
fcoms
and
push
xchg
rolb
scas
jbe
pushf
test
jne
xor
adc
dec
mov
daa
pop
sarl
or
adc
add
ret
or
cmpsb
inc
cmp
jo
push
out
jp
dec
adc
sbb
pop
push
mov
lock
and
fwait
aad
cmp
mov
popf
hlt
out
scas
inc
jg
test
cmp
cmp
insb
push
daa
scas
adc
clc
wbinvd
fidivrl
xchg
or
mov
popl
and
rcrb
dec
mov
fcomip
mov
cmp
jo
adc
and
cmc
das
sub
jg
leave
or
lock
lahf
fldt
in
rclb
sar
cmp
xchg
stos
jbe
pop
xor
movsl
test
pop
lret
leave
and
sbb
add
outsb
sub
dec
int
jbe
rorl
xlat
mov
inc
imul
call
xor
idiv
ds
ljmp
adc
loopne
cmp
enter
inc
sar
pop
cld
sbb
xor
or
fdivrp
add
mov
insb
add
lds
dec
and
pop
pop
and
mov
sub
add
shl
push
scas
add
inc
lret
inc
and
rorl
push
inc
sbb
dec
call
mull
andl
jnp
test
dec
or
scas
out
clc
mov
loopne
daa
or
js
add
pop
add
lcall
push
std
ja
icebp
add
shll
cs
and
fmul
add
icebp
lcall
decb
pop
cmp
inc
jg
jno
movsb
repz
and
loop
fs
loopne
mov
push
imul
dec
popa
mov
inc
xor
pop
pusha
int3
xor
nop
xchg
and
sub
mov
cmp
mov
add
loope
and
ret
jp
mov
dec
fistps
inc
sub
mov
es
jns
dec
sub
push
or
andb
adc
insb
adcb
dec
std
add
mov
cmp
pop
mov
jnp
loop
aas
or
add
or
andl
jno
xchg
sbb
mov
push
popa
push
cld
daa
mov
or
std
das
dec
jge
inc
mov
pop
mov
xchg
outsl
cmp
add
jmp
mov
push
leave
mov
cmp
call
inc
mov
out
lcall
or
jp
mov
adcb
xor
scas
mov
fwait
dec
add
cmpsb
or
cmp
dec
call
adc
js
and
sti
scas
fadds
shl
pop
push
enter
add
ret
imul
cmp
imul
enter
dec
outsb
test
or
ret
dec
aam
push
xor
pop
fs
loop
int
or
mov
xchg
fld
movsb
push
or
test
cmpb
mov
shl
aas
loopne
dec
cmp
dec
dec
popa
sbb
lock
push
pop
rcl
orb
in
adc
jle
dec
call
lret
inc
lds
sub
sti
mov
xchg
js
and
cmpsb
int3
and
aaa
es
sti
aad
mov
rcl
jb
mov
jbe
adc
and
sarb
add
xor
sbb
or
and
or
fistpl
mov
cltd
add
call
mov
test
sub
jg
sbb
aad
or
ret
add
and
movsb
xor
jbe
adc
mov
add
ja
inc
mov
xor
inc
cmpl
ret
pop
lods
jg
mov
pop
mov
or
rolb
jecxz
loop
es
das
lcall
test
pcmpgtw
icebp
pop
loop
push
call
test
adc
sahf
pop
lods
and
bnd
stos
ffreep
push
mov
sbb
fadds
xchg
ljmp
test
push
push
push
add
jmp
sub
repz
bound
mov
mov
inc
mov
pop
rorb
addr16
iret
movsb
mov
sub
mov
adc
popa
inc
cmc
inc
je
xchg
fwait
imul
loope
lahf
loope
jbe
push
pop
pop
es
pop
push
sub
js
adc
add
mov
jnp
cltd
push
sub
and
sbb
sarb
ficompl
or
js
push
mov
and
std
jmp
xor
sahf
sahf
fidivrs
dec
xchg
mov
add
adc
xchg
in
lar
inc
jnp
rcll
cld
jl
add
ret
div
js
pop
sub
sub
jbe
sbb
pusha
daa
mov
mov
sub
test
or
jb
inc
in
imul
or
jl
movsl
mov
xor
push
lcall
jne
adc
xchg
cmp
sub
jle
pop
fst
and
fadd
pop
push
jle
rorb
into
inc
dec
lods
pop
mov
outsl
xor
clc
enter
add
xorb
shll
mov
or
push
lods
jle
imul
inc
pop
out
or
pusha
lock
in
or
cwtl
sahf
addr16
jns
dec
aad
in
push
or
and
push
mov
call
adc
dec
sbb
push
cmp
psubusb
add
xorl
ret
imul
repnz
add
dec
dec
inc
fcmovnbe
nop
mov
div
ja
mov
inc
shll
and
jno
filds
inc
push
lock
fs
stos
pop
adc
comiss
out
cmp
adc
hlt
js
subb
sbb
popa
mov
add
jo
sub
inc
filds
rolb
pop
int3
cmp
inc
push
andps
jb
pmuludq
pop
imul
je
sbb
lods
lcall
out
and
add
xchg
jbe
sbb
pop
pop
mov
sub
lods
inc
mov
and
sub
sub
adcb
idivb
loope
lcall
push
lods
mov
mov
ss
scas
sub
add
aas
pusha
cltd
movl
pusha
mov
push
inc
pop
int
int
loop
jge
mov
outsb
and
sub
xchg
push
rorb
push
add
xlat
inc
sub
add
push
int3
and
lcall
push
push
decb
repz
gs
in
mov
dec
das
xor
xorb
ret
repnz
push
push
cmpb
fcoms
push
popa
ljmp
dec
test
fsub
dec
ljmp
push
push
xor
cmp
push
lods
std
and
test
outsl
icebp
mov
leave
mov
nop
das
jle
js
aas
mov
inc
and
xchg
xor
subb
sti
sub
push
outsb
sbb
fstl
loope,pn
movb
mov
in
int
mov
scas
inc
add
gs
push
aas
hlt
jo
mov
pop
or
xchg
mov
cli
jb
and
dec
addb
xchg
push
mov
jno
fmul
std
mov
xor
int
cld
sbb
add
fst
inc
adc
push
aam
insb
inc
aad
je
dec
sbb
adc
nop
cld
pop
popl
inc
lahf
or
dec
loope
push
adc
adc
add
test
push
dec
add
cli
and
imul
add
jo
mov
xchg
nop
fdivr
fmuls
add
xchg
mov
push
aas
cmp
test
pop
jb
cs
repz
cmpl
adc
in
sbb
ljmp
fbld
mov
and
pop
push
enter
xchg
push
sub
nop
add
sub
aaa
mulb
xchg
inc
rorl
imul
rclb
pop
pop
jge
cmp
dec
hlt
stos
nop
or
addr16
jnp
cmpsb
loopne
jmp
fidivrl
imul
scas
inc
pusha
add
or
xor
cmpsb
mov
mov
rcr
fstl
inc
aas
sbb
loopne
inc
sahf
popf
jmp
sbb
lcall
mov
test
loop
add
xlat
es
pop
clc
and
aam
mov
lock
ret
add
cld
in
je
mov
and
push
movsb
cmp
adc
inc
dec
adc
push
aam
andl
push
ret
ret
rol
mov
push
fdiv
aas
rcrb
lret
dec
pushf
adc
jg
inc
lods
cs
aad
pop
pop
mov
adc
xlat
cmp
lret
lcall
std
icebp
mov
in
les
add
ret
call
inc
test
jmp
cld
jg
xchg
dec
fisubrl
add
sbbb
fimull
cmp
xchg
movsl
sub
cli
push
sbb
push
xor
mov
push
call
das
adc
xchg
push
adc
cmp
mov
add
arpl
mov
loop
jecxz
inc
add
leave
jnp
xchg
sub
xor
push
xchg
scas
clc
clc
lahf
push
pop
jnp
les
xchg
enter
and
mov
ficoml
aam
js
adc
xchg
or
nop
in
jno
push
into
lods
cmpsl
outsl
push
jno
sti
inc
cld
pop
mov
incl
loope
and
pop
dec
sub
cs
and
cmp
out
xchg
add
or
jle
sub
inc
jne
rcll
das
movsb
scas
mov
dec
pop
stos
loop
adc
pop
into
hlt
arpl
mov
hlt
adc
cld
xorl
dec
test
sahf
and
cmpsb
loopne
inc
or
out
add
arpl
xor
ss
push
lss
fmull
push
decb
inc
dec
add
adc
inc
or
faddl
add
xor
clc
cmc
and
adc
xchg
xor
mov
mov
nop
flds
mov
sub
hlt
test
cmp
cmp
ret
mov
pop
and
or
push
mov
and
dec
loopne
jecxz
jecxz
ret
cli
adc
add
dec
xor
nop
jge
adc
in
lods
xchg
clc
add
add
addb
adc
mov
or
cmp
out
pusha
mov
cmp
xor
ret
scas
or
pop
loopne
add
pushf
lods
push
daa
ficoms
iret
rol
xchg
sbb
movsb
xor
int
je
out
push
gs
xchg
lods
and
sub
push
divb
push
test
adc
scas
mov
dec
rcrb
dec
addr16
sar
aas
push
je
cmp
add
mov
jo
push
in
int3
aaa
mov
incl
lock
mov
inc
mov
loope
sti
sbb
popa
in
movsl
mov
inc
lock
or
or
dec
nop
clc
jmp
adc
xchg
jle
or
dec
mov
push
xchg
jl
es
adc
mov
adc
sub
fwait
ficompl
jle
mov
and
push
divl
jns
jl
mov
jp
insl
xchg
push
sbb
add
xchg
outsb
cmp
pop
sbb
enter
js
push
sbb
loop
adcl
and
dec
pop
enter
popl
mov
fmull
psrad
adc
clc
mov
adc
ja
ja
mov
hlt
xchg
xchg
movsb
jae
test
push
idiv
icebp
test
jge
lcall
jle
hlt
xor
out
adc
das
or
dec
cmp
adc
mov
pop
cs
xchg
mov
jns
jmp
push
aaa
and
je
push
dec
test
add
mov
ss
inc
pusha
nop
pop
aas
sbb
movsl
and
push
xchg
nop
mov
andl
and
jbe
or
pop
add
pop
stc
imul
clc
arpl
pop
sbb
xchg
mov
scas
inc
gs
dec
mov
ljmp
rcrl
sbb
mov
add
lods
cmpsb
sbb
pop
movsb
dec
push
pusha
ret
xchg
scas
js
cmp
enter
pop
mov
or
jns
lcall
jp
jne
fstps
sub
andl
test
cld
loope
js
adc
insl
or
push
cmc
rclb
push
sbb
call
pop
mov
adcb
stos
xchg
mov
sbb
loop
mov
pusha
outsl
sub
fbstp
mov
sbb
gs
into
test
inc
mov
add
push
mov
stos
roll
imul
addb
jns
pop
fucomi
push
push
jg
sub
mov
ss
add
addl
mov
nop
jns
lock
lods
sub
adc
sahf
cmc
pop
sub
std
adc
sub
out
mov
rol
fstl
adc
push
and
ret
sub
fistpl
imul
cmp
in
loopne
push
cmpsb
pop
clc
insl
icebp
shll
mov
lea
xchg
sub
js
mov
pop
sub
loope
nop
sub
add
mov
jp
mov
sbb
xchg
cmp
pop
out
ficompl
mov
jne
dec
push
in
daa
dec
fs
push
inc
add
xchg
pop
jp
jle
push
ja
xchg
data16
push
test
push
clc
or
mov
addr16
cmpsb
cmp
scas
push
adc
cmpb
cmpsb
jnp
add
aaa
movl
mov
popa
xlat
test
lods
loopne
mov
mov
mov
repnz
xchg
or
xor
lods
call
adc
inc
sbb
push
mov
cmp
iret
mov
outsl
mov
ret
scas
data16
es
dec
nop
mov
sbb
out
inc
jne
ja
jl
clc
sub
ja
dec
jmp
insb
dec
sub
loopne
dec
stc
pop
aaa
xlat
shlb
and
out
push
lcall
loop
repnz
je
movsl
adcl
pop
inc
push
shrb
cmp
out
cs
out
or
or
mov
inc
cld
and
stos
mov
clc
mov
je
inc
pop
mov
nop
ja
mov
dec
pop
or
lcall
sarl
es
mov
sub
mov
cmp
fs
cli
ffree
das
icebp
or
loopne,pn
and
popa
sbb
sbb
xor
mov
es
push
pusha
adc
sahf
ret
mov
mov
lea
push
fcmovb
inc
bound
adc
mov
into
inc
inc
test
lea
mov
mov
std
sbb
sbb
cmc
cltd
sbb
leave
test
mov
loop
and
push
sbb
xchg
fwait
inc
sub
jae
cli
je
push
xor
mov
xor
movsb
mov
test
xchg
lcall
aas
mov
aam
jg
lock
xchg
inc
mov
fiadds
test
lock
xchg
popa
in
cmp
add
lods
leave
scas
adc
inc
iret
gs
cmc
js
je
imul
push
add
cmp
mov
adc
mov
push
adc
and
in
mov
scas
ret
aad
and
je
fisubrs
push
rcll
inc
dec
jae
jl
mov
xor
add
loope
cmpb
jne
js
fisubs
neg
daa
adc
ror
loop
movsb
ret
cmpsb
mov
xor
pop
lods
decb
add
imul
aaa
and
sbb
cmp
and
test
sbb
les
jmp
fnstsw
dec
or
adc
mov
push
inc
stos
mov
ja
test
jmp
dec
cmp
pop
cli
decl
push
jl
cmpb
add
xchg
stos
cmp
inc
mov
cli
scas
lcall
cmp
scas
sbb
lret
in
test
pop
ret
cmp
jmp
xchg
sbb
jmp
fistl
in
and
adc
in
cmp
push
or
out
pop
xor
addr16
scas
add
sbb
js
push
repnz
scas
mov
cltd
adc
or
ljmp
cltd
mov
fwait
push
push
mov
mov
push
js
mov
jne
movsl
push
jecxz
and
test
sahf
ljmp
mov
loop
shll
cmp
cmp
push
stc
or
rclb
adc
fdivs
mov
xchg
fs
mov
mov
dec
or
inc
mov
add
mov
lock
push
jns
popf
sub
pop
jmp
pop
mulb
cmc
push
ret
outsl
mov
lds
cmp
push
insl
aad
mov
dec
stos
in
aaa
pop
mov
stc
enter
rcrl
mov
and
or
pushf
sbb
mov
push
inc
dec
and
imul
ljmp
jns
pushf
jg
data16
sbbl
roll
or
das
aam
push
cmp
les
xchg
mov
sbb
cltd
mov
mov
xchg
jle
dec
pop
mov
mov
add
pop
and
sub
pop
ljmp
rol
insb
jns
sbb
sub
inc
push
xchg
mov
sbb
insl
sahf
mov
rorb
mov
sub
pop
pop
addb
or
jmp
or
lahf
lret
sub
add
dec
mov
ret
mov
xor
mov
cmp
jge
fmull
cmpsl
cmp
inc
adc
sub
pop
add
mov
pop
cmp
test
aam
lcall
das
push
insb
mov
pop
or
in
loope
fildll
insb
movsl
imul
jle
lods
xchg
dec
inc
sbb
ljmp
sbb
xchg
dec
loopne
xor
push
mov
les
daa
add
inc
dec
xor
test
sbb
pop
shll
ds
dec
lahf
aas
data16
sub
pop
jp
test
push
pop
add
lock
lahf
mov
aaa
xlat
lret
push
pop
ds
test
lcall
lods
adcb
jp
inc
rcr
fimuls
orb
mov
push
loopne
push
incl
aad
jbe
mov
popa
lcall
aam
loope
and
int3
clc
fildll
mov
xchg
or
and
and
add
clc
pop
rcll
lcall
sbb
cmp
outsb
stos
je
mov
insb
xor
mov
add
dec
push
das
mov
and
call
outsl
ja
mov
je
fcoml
pusha
mov
push
call
mov
aas
mov
js
shll
rol
xor
setle
sub
add
push
sub
mov
jno
mov
les
and
int
mov
nop
inc
inc
cld
test
adc
mov
xor
sub
addl
xchg
sbb
xor
mov
jge
sbbb
mov
push
pop
cmp
jl
adc
icebp
lods
addl
sarb
push
daa
sahf
scas
fsubrs
mov
in
jbe
xor
push
jmp
pop
inc
jae
mov
xchg
sbb
sub
rcrl
dec
leave
mov
enter
mov
or
xorb
in
cmp
dec
gs
lret
push
rcll
push
scas
daa
test
mov
inc
mov
ficompl
dec
sbb
pop
stos
lods
and
mov
mov
push
push
out
loopne
mov
scas
sbb
fs
inc
daa
and
fcom
fistpll
scas
or
sbb
daa
pop
sub
shlb
push
clc
push
and
mov
cld
jp
push
mov
into
xor
insl
mov
ss
ret
movsl
sbb
mov
es
inc
loop
stos
loope
ljmp
movsb
subb
test
in
subl
jbe
in
push
call
xor
or
inc
jne
lds
into
lods
and
and
loopne
push
sbb
push
enter
in
lea
xor
scas
scas
or
push
lock
adc
mov
jno
lock
ret
cld
sarl
or
mov
push
popf
add
adc
scas
and
xlat
dec
lea
repnz
xchg
js
sbb
mov
or
clc
add
ss
sub
subl
jle
pop
orb
cmp
lods
add
es
stos
cltd
xor
mov
push
xchg
jmp
sbb
outsl
sub
and
bound
lods
push
testl
push
mov
mov
cld
aas
dec
pusha
jnp
inc
adc
mov
fmul
les
or
sub
xor
sub
scas
jno
hlt
sbb
sub
mov
arpl
pop
cmp
int
mov
in
rclb
pop
and
out
fdivs
sub
sbb
dec
sti
xchg
test
icebp
pop
cmpb
idivb
call
mov
stos
je
bound
mov
fimull
and
rorl
push
lods
mov
mov
mov
push
fdivl
jnp
cmp
xchg
movsl
ret
add
adc
jno
std
call
pop
inc
aad
aam
dec
repnz
sbb
xchg
sub
jb
push
adc
and
loope
sub
cs
xor
rorb
pop
ja
xlat
aad
lahf
pop
test
adc
jmp
pop
test
adc
test
fdivrl
mov
jmp
xchg
or
rorl
mov
clc
cmpsb
cltd
push
cmc
sbb
movsl
int3
mov
das
or
outsb
sbb
js
fsubrs
fistpll
sar
scas
cmp
fdivp
outsl
fs
dec
xchg
inc
pop
ret
lods
call
arpl
cmpb
adc
mov
pop
dec
mov
mov
cli
test
xor
push
and
sub
adc
jp
mov
dec
pop
mov
adc
dec
lcall
sbb
into
lds
shl
dec
mov
xor
jecxz
lcall
in
punpckldq
sbb
ficoms
push
shl
dec
outsb
cmc
mov
sub
mov
and
outsl
inc
sub
xchg
cmp
and
daa
pop
mov
push
movl
dec
out
test
stos
jecxz
mov
jl
lret
nop
cmc
loope
test
addb
mov
cmpsl
test
mov
or
aas
loope
cld
cmc
daa
divl
mov
daa
cmpsl
arpl
push
scas
mov
pushf
fwait
sbb
jle
sbb
aas
lods
sub
addb
imul
sbb
shlb
sbb
xchg
cmpsl
jne
push
cmpsl
nop
cmp
cmp
ret
fs
ljmp
sub
inc
int3
les
shrb
outsb
mov
mov
test
sbb
mov
es
loopne
push
cs
je
and
inc
mov
outsb
jns
push
push
push
or
nop
out
dec
sub
orb
shll
inc
into
xor
icebp
std
loopne
pusha
xchg
lods
scas
dec
loop
lahf
inc
out
mov
ret
cmc
iret
sbb
stos
das
jbe
inc
or
mov
mov
pop
cmpsl
push
sub
lock
shrb
cmp
add
xor
test
std
nop
lock
dec
insb
aam
mov
inc
cmpb
mov
push
call
or
clc
ficompl
cld
jns
or
test
scas
addr16
imul
loopne
xchg
lret
subl
pop
shll
loopne
mov
icebp
mov
fnstcw
mov
push
inc
pop
nop
add
jb
ret
pop
in
jb
or
dec
mov
data16
data16
add
inc
loop
testb
lret
test
aam
xchg
and
pop
push
decl
hlt
lahf
shr
outsl
sub
push
test
nop
mov
icebp
add
in
xchg
in
and
push
imul
adc
add
pop
or
add
inc
das
shr
xchg
call
cmc
xor
dec
fidivs
mov
inc
pusha
pop
icebp
das
loope
inc
mov
test
das
iret
lock
xchg
hlt
aas
sbb
cmp
add
hlt
incl
outsl
mov
pop
mov
pop
dec
cmp
xor
shll
test
aam
call
int3
mov
out
dec
add
mov
jno
or
pop
mov
adc
mov
adc
adc
push
test
cld
mov
jb
je
xchg
sti
dec
mov
push
sahf
sub
push
jns
in
adc
push
addr16
lret
and
dec
loopne
les
adcb
sub
outsl
xchg
fs
jns
pop
call
lret
mov
mov
aad
sub
or
lret
pop
cmp
pusha
xchg
aad
test
cmp
ffreep
mov
inc
test
inc
push
inc
mov
nop
lock
lock
fwait
jl
incl
push
push
call
mov
xor
loope
xor
cmpl
mull
mov
sub
lret
hlt
push
sbbb
jmp
ds
aas
jp
aas
lock
pop
adc
test
lcall
push
pop
lock
fwait
pop
or
das
daa
inc
movsb
adc
cmp
lods
inc
loop
or
sub
lcall
push
aam
fisubrl
cmp
adc
fldenv
imul
and
jge
fmuls
or
lods
jl
enter
mov
scas
sub
jecxz
mov
xlat
push
cmc
fstl
xchg
shlb
rolb
scas
subl
inc
test
sahf
adc
or
lock
jg
ret
cmp
add
mov
faddl
push
outsl
adc
je
or
shrl
lods
cs
popf
push
leave
adc
inc
mov
ret
les
xchg
add
in
setp
movsb
iret
nop
cmp
xchg
dec
add
ss
and
rclb
mov
add
das
pop
pop
clc
loopne
adc
dec
dec
push
pop
jl
cld
add
sub
adc
jle
and
das
jo
mov
or
call
xchg
into
or
jbe
test
cld
ja
cmpsb
test
pop
push
push
cmc
add
mov
or
pop
aas
pop
inc
sub
cli
xor
xchg
out
sbbl
lods
rcrl
sahf
pop
push
lock
lret
pop
cmpb
mov
leave
add
dec
out
lahf
test
mov
sbb
pop
mov
dec
dec
dec
fimull
cld
dec
lods
mov
repz
into
push
xchg
dec
repnz
add
cltd
inc
xchg
insl
adc
lds
sub
add
cmp
xchg
call
mov
push
cmc
leave
mov
out
aas
pop
push
clc
mov
test
popl
repz
jne
jo
nop
negb
sbb
adc
cli
xor
sbb
push
es
sbb
mov
lcall
jg
sbb
mov
push
inc
adc
mov
mov
and
push
and
adc
xchg
push
push
setle
lods
flds
pop
and
mov
fimull
pop
dec
push
mov
lcall
jle
push
mov
jae
dec
outsb
push
fbstp
dec
xchg
test
and
push
jo
or
push
fwait
dec
jl
or
jge
loopne
push
mov
aam
ret
xchg
in
xchg
insb
sbb
out
pop
std
sbb
aaa
cld
or
xchg
and
xchg
scas
adc
cmovp
xchg
movsb
push
mov
xchg
xor
inc
lods
je
mov
scas
adc
mov
sahf
test
and
xor
jns
cwtl
mov
loopne
cli
ret
sahf
mov
clc
xor
cmp
je
jno
xor
add
repnz
divb
mov
stos
fnstcw
int
call
test
adc
inc
hlt
verw
mov
insb
clc
rcr
insb
xor
xchg
bound
popf
dec
insb
jae
pop
sbb
sbb
enter
mov
pop
inc
rolb
icebp
cltd
add
mov
push
pop
stos
mov
cmp
mov
cmp
add
inc
pushf
add
mov
mov
ret
leave
sahf
mov
dec
sub
inc
les
cmp
sub
les
or
inc
sbb
adc
mov
js
pop
orb
add
out
inc
or
jb
jo
sub
and
cs
mov
inc
scas
aam
ja
sub
lahf
sbb
in
rcl
mov
in
insl
push
push
je
les
aas
fwait
aam
sub
arpl
fwait
inc
mov
imul
mov
lcall
sub
and
inc
test
ret
cmp
movsl
jge
js
ret
mov
stc
adc
add
out
cmp
xchg
mov
dec
cs
js
mov
sbb
dec
out
mov
inc
xchg
test
mov
fwait
stc
in
xor
cmc
push
add
dec
sbb
mov
loope
cmp
sub
add
sub
add
cli
iret
xor
jnp
ss
xchg
jge
mov
ficoml
test
loopne
insl
cmpsl
lds
jl
out
ret
and
loopne
xor
mov
in
shrb
xor
inc
pop
outsb
pop
and
xchg
xor
movsl
ja
imul
and
mov
out
and
adc
popf
cmp
mov
xchg
push
dec
in
rcl
mov
pop
and
shlb
adc
in
jbe
adc
mov
jg
push
fmul
cld
rolb
stos
daa
xor
scas
test
test
icebp
cmpsl
outsb
push
in
outsb
mov
test
pop
gs
fldenv
inc
dec
xor
outsl
clc
sub
xchg
mov
or
scas
xor
mov
mov
dec
add
xchg
divb
and
out
popf
inc
mov
add
nop
pop
call
jp
push
push
push
mov
push
cmp
xchg
sub
stc
or
je
sub
jb
add
xchg
andb
sbb
les
push
jmp
loope
pusha
inc
mov
lods
mov
mov
or
loope
out
mov
push
and
ja
movsl
stos
xor
sbbb
dec
test
pusha
xchg
mov
test
sbb
je
and
mov
imul
outsb
nop
into
mov
xlat
and
xchg
jmp
rclb
and
xchg
mov
sbbl
stos
hlt
clc
das
pusha
sub
enter
insl
jge
rcrb
cmpsl
sub
cmp
and
ret
inc
mov
push
rorb
jns
out
fisttpll
arpl
test
add
mov
pop
mov
push
insb
clc
xchg
push
popa
jg
add
pop
fisubrl
sub
aas
adc
push
frstor
push
das
repnz
lcall
sub
mov
add
dec
popa
xor
add
out
mov
mov
popa
sti
mov
mov
iret
xor
addr16
push
sbb
push
or
pop
sbb
pop
fbld
test
pop
push
dec
push
adc
sbb
xchg
xchg
lea
push
and
ret
pushf
clc
aad
jge
lcall
adc
sbb
xor
jle
mov
xchg
insl
and
cmp
pop
enter
add
jae
cmc
imul
sahf
loop
inc
je
aam
out
dec
mov
add
pop
or
test
mov
out
cmp
leave
cmp
mov
hlt
and
pop
in
xchg
lock
inc
fldenv
pop
lods
xchg
movsl
cmc
xor
call
clc
dec
cltd
lcall
xchg
mov
nop
retw
je
mov
xchg
pop
inc
jg
jae
xchg
cld
aam
fisubrl
lods
das
out
adcb
pop
fcoml
jle
fistpll
or
adc
mov
enter
int
push
or
dec
push
dec
rolb
xchg
ss
jp
adc
jp
loopne
lret
popl
loop
push
pop
pop
test
xchg
xchg
mov
test
xor
dec
bound
pop
popa
cs
or
cmp
popf
cmp
mov
dec
add
adc
addr16
scas
fidivl
mov
insl
fdivrs
pop
dec
cmp
aaa
push
dec
and
ds
adc
aam
int
dec
inc
add
test
imul
xor
lock
imul
imul
xchg
sub
cli
push
mov
adc
mov
divb
outsb
mov
mov
fimuls
out
lcall
mov
repz
fldt
or
xor
insb
pop
push
ljmp
mov
test
std
lods
pop
insb
bound
cmp
shl
es
add
xchg
dec
dec
cmpsl
xchg
sbb
fcoml
inc
push
pop
xor
into
and
cmpsl
xchg
aaa
fsub
jp
sub
insb
mov
jg
mov
pushaw
arpl
cmpsb
rcrl
mov
fisttpll
repnz
and
or
mov
add
clc
cmp
imul
pop
lock
call
dec
mov
into
push
test
sub
dec
adc
push
sbbl
loop
divb
rorb
add
lods
pop
gs
push
mov
inc
aam
test
or
leave
sahf
ret
cmp
gs
pop
xbegin
fmulp
lods
push
xchg
andb
fmuls
cmpl
pop
pop
inc
jmp
mov
shrl
add
pop
jno
mov
dec
inc
sbbb
mov
sub
jo
jp
push
dec
rcl
sbb
mov
sti
xchg
in
jle
mov
std
mov
add
cld
dec
pop
fdivrs
and
jp
pushf
ss
jmp
movb
or
cmp
xor
arpl
cld
add
xor
add
cmp
xor
vcvtsd2ss
aam
mull
inc
pop
dec
rorb
sub
dec
mov
mov
inc
cmp
cmp
jmp
dec
es
fnsave
pop
ss
ss
cmpsb
je
nop
leave
movsb
dec
mov
dec
pop
shl
push
shlb
aam
pusha
mov
std
xor
and
add
or
xchg
cmpb
ljmp
cmp
mov
xchg
fisubrl
or
or
pop
ss
in
test
mov
cmp
loopne
dec
cld
into
aam
jno
or
cs
pop
ja
aad
sbb
ds
xor
aad
popa
test
add
and
add
adc
push
lret
mov
add
andl
push
mov
jo
fsub
pop
ret
out
pop
pop
push
jge
sub
in
inc
cmp
push
int3
cmp
and
lahf
cmp
inc
mov
push
out
shlb
jp
rcll
ja
push
sub
jp
mov
pop
icebp
mov
adc
sbb
pop
bound
push
mov
in
stos
mov
repnz
popf
popa
aas
mov
fildl
adc
add
aam
add
push
mov
orb
mov
sub
cmc
xor
enter
pop
jle
xchg
hlt
inc
movsb
rolb
inc
or
cmp
mov
sub
mov
aad
add
scas
mov
js
sbb
push
loope
ss
fnstsw
repz
or
in
cmpl
cmp
adc
cmp
push
jge
and
mov
push
cmp
ljmp
bound
fsubrs
rol
xchg
nop
loop
and
mov
push
mov
fwait
sbb
add
or
mov
mov
add
inc
and
into
adc
xor
xor
loope
push
add
push
xchg
scas
mov
push
and
push
das
pop
andl
xor
movsb
cmp
in
cmp
aad
pop
insb
fsubrl
xor
and
dec
push
mulb
add
inc
ficoms
push
sub
xchg
xchg
inc
or
cltd
rolb
inc
and
xor
and
dec
adc
lock
mov
sub
push
push
cmp
mov
iret
xor
fwait
cmpsb
test
decb
jge
sbb
dec
mov
and
mov
shll
jle
pop
push
mov
cvtpi2ps
rorb
repnz
fbld
mov
movsb
dec
ret
pop
test
pop
pop
jne
push
mov
or
dec
mov
push
cmp
inc
cld
les
add
inc
idivl
jle
ja,pt
inc
inc
mov
dec
insl
mov
push
std
outsl
xor
lea
dec
lcall
dec
int3
imul
rorb
iret
daa
ffreep
push
jg
adc
arpl
add
aaa
jne
fcoml
push
mov
xor
rclb
cltd
jo
xor
mov
cmp
inc
cli
dec
jb
add
repnz
pop
fnstsw
incl
and
aaa
xor
js
jle
xor
push
adc
xchg
mulb
int3
jmp
mov
add
clc
xchg
sub
adcb
adc
sbb
movsb
xor
or
push
or
pop
iret
imul
dec
xor
movsb
pop
sub
fincstp
inc
stos
arpl
movsl
lods
mov
mov
pop
adc
xorl
mov
rcll
icebp
inc
subl
loope
dec
inc
or
cld
lea
sahf
pop
xor
sub
aaa
je
xchg
dec
sub
loopne
fsubl
xor
lcall
dec
and
jp
push
ds
xor
clc
into
push
add
jae
out
jmp
fdivl
sub
inc
push
xor
add
mov
sti
clc
and
inc
adc
fs
mov
xor
mov
stc
rclb
and
jae
sub
or
jo
sub
mov
add
and
mov
fmuls
das
scas
push
dec
and
pop
hlt
loope
aaa
sarb
add
adc
and
je
mov
call
stos
push
fisttpll
push
clc
lods
cvtdq2ps
pop
mov
pop
mov
inc
loop
xchg
fwait
ja
and
test
adc
int
mov
insb
aaa
cwtl
adc
inc
push
test
mov
sbb
push
fsubrs
xchg
lea
adc
add
push
add
stos
shll
lods
out
xor
add
stc
xchg
inc
lods
and
clc
jns
dec
inc
enter
inc
rorl
push
popf
mov
test
ficoml
mov
xchg
test
jmp
xchg
mov
popf
mov
jno
stc
jno
divl
adc
mov
orl
mov
loope
xchg
xchg
loopne
cmc
pop
adc
cmp
adc
loope
mov
mov
xor
test
arpl
pop
cmpsl
add
bound
mov
xor
sbb
xchg
cmpl
lock
pop
cmp
cmp
dec
mov
fwait
lods
mov
sub
mov
std
stos
add
push
jl
mov
inc
cmpsb
je
xor
fstpt
jecxz
or
inc
jge
cmc
inc
pop
mov
cmp
popf
xlat
add
push
call
mov
loope
push
sbb
lcall
nop
cmp
loopne
dec
jle
adc
sbb
fwait
jns
xchg
fwait
pusha
add
and
push
mov
xchg
iret
out
les
icebp
pop
lock
mov
xchg
out
fcomi
lods
ret
adc
imul
lret
xchg
dec
xlat
movsl
lahf
pusha
lahf
xor
dec
jo,pn
in
rcl
int
sub
fwait
cmc
sub
pop
dec
rorb
push
jg
mov
movsl
aam
aad
jp
test
adc
push
or
and
aaa
shr
iret
dec
aas
push
sub
popa
cmp
adc
jne
daa
cmpsl
cmpsl
jmp
ljmp
sbb
dec
cmp
fcompl
mov
xchg
adc
sub
lret
inc
xchg
pop
mov
cmpsl
mov
and
subb
lock
and
jb
sahf
adc
mov
insb
pop
or
fnsave
mov
negl
sub
inc
insl
adc
mov
lcall
ficoml
scas
dec
jp
jmp
in
ss
mov
dec
call
mov
inc
mov
jae
shld
stos
sub
outsb
insl
add
adc
push
xchg
lcall
test
test
lret
fsubr
lods
dec
mov
xorps
xor
int3
imul
pop
inc
xchg
push
outsl
aad
xor
fstps
cmp
sbb
movsb
cmpsb
sarl
sti
dec
jmp
test
sbb
mov
add
inc
push
dec
pop
popa
in
add
and
mov
inc
loopne
sub
xlat
add
xchg
push
orl
adc
test
addr16
shlb
push
test
and
sub
das
inc
loop
pop
mov
jnp
adc
pushf
lods
icebp
in
cmpsl
sbb
call
dec
popf
mov
andb
jbe
mov
adc
push
loop
pushf
lods
sbb
shr
in
lcall
jbe
jmp
loopne
cli
add
lods
push
imul
daa
out
mov
mulb
or
xorb
cmpb
adc
cmpsb
arpl
mov
or
xchg
add
adc
inc
fucomp
insl
faddl
and
je
dec
in
mov
nop
mov
std
or
rorb
aam
orl
jnp
push
pop
int
jl
sbb
or
aas
test
into
sbb
sub
push
sbb
xchg
push
and
pop
dec
pop
adc
or
test
addl
das
insl
shll
push
hlt
sub
mov
mov
pop
add
gs
cld
push
mov
lods
jecxz
shrb
mov
pop
inc
out
shrb
fwait
rorl
add
shrb
mov
ds
push
pop
out
imul
cmp
fisubrl
jle
movsb
outsb
mov
ds
in
mov
pusha
sbb
clc
xor
pop
les
jne
loope
sbb
ret
sbb
inc
in
lock
enter
xchg
sbb
jns
call
push
adc
sub
mov
pop
pop
sbb
pop
test
jns
push
adc
inc
iret
cmpsl
loop
jg
mov
cmp
inc
sar
jecxz
imul
adc
add
cltd
out
js
xchg
push
sub
pusha
dec
dec
jecxz,pt
mov
lea
push
test
push
sbb
popl
sub
dec
insb
xchg
dec
leave
cmp
pop
sarl
movsb
les
jbe
mov
popa
pop
into
adc
pop
push
push
fsubp
mov
fdiv
adc
jge
das
push
arpl
lods
scas
aad
xor
push
aaa
inc
mov
push
add
pop
push
stc
jbe
lock
mov
jp
xor
adc
push
inc
popf
sub
arpl
shlb
adc
mov
in
adc
lret
loope
sbb
out
adc
sbb
sbbb
imul
and
add
and
loopne
cwtl
loope
test
pushl
sarl
and
jecxz
jmp
mov
scas
test
test
inc
pop
add
cmp
inc
xor
pop
scas
inc
cmpl
push
lock
fsubp
lods
push
loope
push
repnz
roll
lcall
std
push
imul
push
aam
out
inc
ret
movsb
xchg
mov
dec
lret
inc
sti
and
pop
dec
pop
iret
movb
stc
pop
xchg
sbb
sub
call
mov
pop
js
shlb
mov
stc
inc
mov
inc
and
cmc
test
sar
lods
jno
pop
jo
sbb
pop
test
lods
adc
lock
les
adc
mov
fisubs
push
lock
notb
lods
aam
pop
and
fimull
push
popf
dec
lods
xchg
xor
dec
sti
mov
cmp
or
jns
and
add
fstpl
notl
jnp
dec
jno
fwait
sbb
cmc
stos
rcrb
stos
xchg
int3
icebp
fdivs
mov
popa
arpl
fwait
xor
mov
fnstsw
pop
add
cmp
flds
js
dec
rcll
test
int3
dec
sbb
loop
adc
orb
mov
inc
push
mov
jge
xor
xchg
pop
push
pop
pop
stos
lea
cmp
cmp
add
lcall
ja
jl
out
es
cmp
lods
jge
out
movsb
inc
push
arpl
xor
or
pop
mov
sbb
stos
fucomi
push
movsl
leave
mov
inc
cli
je
data16
roll
adcl
pop
mov
push
jbe,pt
int
pushf
push
popa
xor
pusha
fwait
mov
sub
mov
cmpsl
or
jp
mov
sbb
aaa
sub
inc
mov
stos
or
cmp
mov
ja
aad
adc
dec
xchg
dec
ret
mov
imul
data16
jb
into
add
add
inc
movsb
call
gs
das
loope
add
int3
pusha
jae
xchg
dec
jl
scas
ret
pop
iret
out
mov
dec
push
mov
ret
push
punpckhbw
pop
pop
jecxz
out
inc
pop
xlat
pop
imul
xorl
dec
or
sbb
je
out
daa
dec
pop
mov
xor
xchg
inc
xor
adcb
jb
add
dec
dec
add
sub
stos
jne
pop
push
and
sbb
pop
mov
add
sbb
fcmovb
scas
mov
jge
inc
outsl
mov
sub
aad
pop
adc
popa
push
mov
push
cli
scas
push
pop
cmpps
aam
jbe
fisttps
mov
pop
and
aad
popf
loopne
lods
lods
sbb
lea
rorl
mov
inc
mov
bound
sub
push
lahf
jnp
enter
in
mov
subl
and
jnp
aad
add
and
ss
dec
push
cwtl
mov
rcrb
or
and
movsl
mov
stos
sub
inc
ds
cmp
dec
in
mov
lcall
mov
xchg
cmpsb
inc
addl
xchg
and
aad
fildll
popf
lock
or
negl
mov
mov
inc
xor
js
ja
in
jge
jns
xor
imul
fwait
jl
add
jg
icebp
daa
sub
and
add
mov
cltd
test
icebp
pusha
incl
popf
pop
adc
adc
rolb
das
sub
adc
inc
ret
out
mov
mov
pop
mov
xlat
stos
mov
int
xchg
scas
push
cmp
mov
sub
mov
mov
sub
arpl
leave
inc
stos
sub
clc
adc
adc
push
cmpsb
lret
push
mov
lea
mov
and
pop
push
fsincos
xor
test
jns
adc
aam
sbbb
jp,pn
xchg
icebp
xchg
fcmove
jo
mov
fistpl
jne
jmp
aas
or
push
pop
aaa
xchg
rorl
psllq
pop
sub
or
in
and
or
orb
jnp
pushf
adc
call
outsb
into
or
xchg
in
lahf
add
movsl
sub
jle
shlb
and
add
add
jmp
loop,pt
pop
adc
fmuls
xchg
out
fsts
pop
popf
mov
lahf
push
inc
dec
test
lea
push
clc
mov
fldl
inc
mov
mov
inc
adc
jmp
sbb
fadd
call
in
popf
incl
js
add
lods
jnp
jno
aam
negl
mov
cli
dec
dec
pop
xor
jne
insb
int3
or
inc
pop
jnp
cmp
push
in
mov
pushl
or
int
aam
data16
imul
push
push
mov
mov
push
cmc
imul
hlt
xchg
fcmovnu
sbb
add
jp
fcomip
dec
test
adc
fcompl
scas
lock
cmp
imul
cli
and
clc
je
add
inc
pusha
sbb
and
jp
mov
cmc
loop
ret
js
push
and
shl
jg
aad
sbb
add
call
mov
xchg
loopne
js
shr
lds
inc
je
cld
push
mov
or
mov
jg
jmp
inc
mov
sbb
ljmp
push
aam
jecxz
daa
movsb
push
sti
jmp
push
mov
ljmp
subl
ret
xchg
daa
sahf
sahf
inc
mov
xchg
movsb
pop
jecxz
ja
xor
popa
shlb
xchg
mov
mov
mov
push
or
sbb
pop
jp
lods
inc
mov
xor
add
sbb
not
insl
loopne
shl
and
shrl
xchg
adc
int
lock
stc
dec
cmp
mov
dec
loopne
xchg
xor
enter
shl
jg
add
and
mov
mov
sbb
cmp
add
or
cmp
push
xchg
or
cmp
fsubrl
in
mov
pusha
push
test
or
sub
and
pop
lods
xchg
iret
mov
dec
xchg
fadds
mov
adc
daa
and
dec
pop
adc
push
jo
mov
test
dec
jge
push
repz
dec
mov
jbe
les
mov
gs
inc
pushf
xor
cmp
pop
into
scas
lea
dec
loop
das
sub
or
push
scas
hlt
ljmp
xchg
andb
mov
cmp
sysret
clc
shll
leave
fcmovu
sbb
aaa
xchg
cmp
test
sbb
mov
cmp
lods
mov
jecxz
dec
add
inc
push
dec
mov
sub
push
ret
cwtl
aam
xor
push
out
pop
add
bound
inc
paddusb
scas
clc
push
add
dec
jns
jp
out
outsb
fdivrs
mov
cmp
movsl
cmc
rol
sbbb
jle
stos
call
daa
xchg
jle
mov
psubd
rclb
pusha
fcmovne
nop
in
stc
cld
jle,pt
mov
dec
into
sub
mov
sub
cs
icebp
jge
insl
push
mov
fstpt
dec
and
or
hlt
sbb
pop
and
mov
mov
insb
lret
inc
inc
aad
add
test
iret
out
test
loop
jmp
dec
jnp
pop
imul
aam
ret
inc
inc
gs
push
and
stos
sbb
pop
cs
movsl
cltd
int
aaa
add
loopne
sub
mov
pop
ja
sbb
inc
adc
and
fwait
bndldx
jae
mov
jmp
xchg
rclb
iret
and
xor
push
jmp
or
jne
dec
xor
es
sahf
cwtl
mov
das
xchg
or
imul
cmc
mov
push
xchg
cmpsb
jge
and
subb
and
fucompp
call
mov
cltd
sbb
mov
add
mov
lea
sub
pop
add
cmp
mov
lock
xchg
into
jle
push
rcrl
insb
mov
cmp
fdiv
mov
or
xchg
push
dec
mov
mov
or
and
pop
pop
adc
leave
push
push
cmp
mull
nop
lock
dec
or
xchg
xorb
xchg
or
lods
dec
and
or
jl
mov
pushf
cltd
addr16
lods
clc
dec
fs
mov
bound
insl
aaa
or
xchg
adc
push
push
cs
aaa
xchg
add
or
jecxz
push
jl
mov
xchg
mov
pusha
aas
out
or
aam
pop
xchg
mov
xorl
sbb
push
xchg
loopne
cmp
sbb
in
jo
iret
add
mov
pop
dec
push
mov
push
les
add
outsb
outsb
into
cli
in
lds
xor
and
clc
cmc
cmc
icebp
pop
jge
pop
in
push
les
scas
sub
mov
push
adcb
or
scas
ds
cmp
aaa
sbbb
cltd
cwtl
and
jge
scas
les
push
cmc
dec
jl
fcompl
jge
push
xorb
rcll
pop
or
inc
fidivl
dec
adc
push
jno
clc
movsb
mov
jo
les
jne
std
pop
scas
in
adc
mov
inc
or
xchg
daa
sbb
in
jne
ret
cmp
push
pop
clts
or
or
xchg
and
ds
and
mov
sub
inc
lahf
and
or
inc
ljmp
std
popa
xchg
push
int3
sysexit
fdivl
jle
nop
adc
insb
adcb
add
fucomp
xchg
adc
mov
notl
push
adc
mov
decl
mov
js
xor
xchg
stos
inc
jle
cwtl
push
mov
fisubl
add
adc
inc
adc
adc
pop
inc
fidivrl
int3
lcall
clc
cltd
sub
add
ja
xor
scas
lret
push
xor
int
ljmp
mov
mov
or
mov
sbbb
xchg
nop
testl
iret
nop
sub
fincstp
dec
icebp
icebp
xchg
inc
dec
movsb
lods
cmp
mov
pop
add
or
mov
inc
subb
push
add
enter
shr
cld
sbb
stos
jo
mov
les
fildl
pushf
sbb
xchg
xor
mov
lods
inc
cmp
pop
inc
je
xor
cmp
pop
or
shl
or
mov
mov
pop
sub
and
fidivl
sub
inc
or
cmp
adc
add
push
nop
jne
dec
or
test
scas
pop
mov
inc
arpl
into
xor
aam
cli
sub
fwait
imul
icebp
shlb
or
and
push
mov
mov
sti
jecxz
inc
dec
les
js
sbb
dec
loop
insb
scas
cmc
push
icebp
call
sub
les
stos
adc
add
cmp
pop
rcll
mov
push
ss
cmpsl
das
cld
xor
jmp
int3
sub
je
lcall
add
dec
rol
sbb
pop
clc
fdivrp
inc
add
jmp
les
push
fcoml
fdivp
in
rolb
push
add
jno
repnz
ror
ja
jbe
movsb
ds
lret
mov
lahf
mov
outsl
add
aad
jg
cli
orl
movsb
dec
push
rolb
lahf
xchg
loop
insl
adc
xchg
cmpsb
jge
fdivrl
in
cmc
push
int3
push
pop
sub
mov
or
fiadds
xor
in
add
pop
nop
rcrb
fs
jne
sub
orl
jns
mov
lahf
jl
pop
cs
shll
push
sub
popl
jle
lds
mov
cld
rcrb
les
mov
popaw
lea
mov
sub
int3
jl
ss
ret
insb
mov
add
out
dec
push
mov
xlat
sbb
ds
ljmp
xchg
sarl
arpl
mov
adc
jge
enter
jp
cmpsb
es
xor
addr16
les
xor
dec
mov
leave
nop
lret
test
or
loop
push
test
test
pop
pop
jecxz
cwtl
fadds
fisubrs
and
pusha
push
arpl
call
dec
loop
aam
and
repz
mov
dec
stc
lcall
stos
loopne
arpl
mov
es
je
fwait
or
cmp
rcll
and
cli
popf
into
lahf
nop
bound
mov
bsf
mov
cmpb
and
loope
inc
sub
mov
js
xchg
sub
add
in
xor
je
das
adc
mov
js
add
xor
xor
pop
adc
sbb
and
adc
flds
out
cmp
je
add
pop
aas
loopne
lcall
mov
xor
incl
dec
movsl
inc
sub
cli
add
mov
adc
inc
mov
fwait
mov
ds
cld
shl
dec
sbb
pop
aas
add
inc
sti
adc
bound
cs
rcrl
rcrb
shrb
div
cmp
mov
insb
push
imul
lret
daa
mov
sbb
pop
sub
cltd
jle
stos
ds
add
dec
add
push
mov
jle
stos
pop
adc
js
in
and
dec
jnp
mov
enter
inc
test
and
mov
push
cmp
xchg
pushf
lock
movsl
sbb
cmc
xor
bound
inc
std
adc
mov
push
cmc
inc
jae
mov
imul
adc
xchg
and
cltd
sahf
mov
push
stos
jno
mov
mov
imul
cmpsl
add
push
mov
add
pop
or
cmp
je
not
js
sub
adc
mov
clc
inc
pop
ss
or
out
sub
fistl
ljmp
mov
int3
jp
adc
icebp
je
es
jo
nop
insb
cmp
sbb
shll
int3
inc
hlt
int
jnp
pushf
adc
lret
or
popa
daa
test
in
hlt
rcll
es
lcall
std
or
lahf
testb
loop
push
ss
popa
repz
in
xchg
adc
xchg
je
das
xor
pop
and
inc
aas
fadd
jbe
test
lret
xchg
inc
gs
jge
in
xor
ds
jae
and
cmp
clc
sbb
cltd
and
aaa
test
mov
mov
mov
sub
stos
add
push
outsb
xor
inc
inc
mull
cmpsb
dec
mov
inc
arpl
pop
loop
push
aas
dec
or
lret
dec
push
jo
mov
xor
cmp
jae
mov
xchg
jle
mov
rcll
mov
add
inc
push
lds
ljmp
pop
imul
dec
mov
mov
sub
imul
jmp
es
jge
xorl
jbe
mov
inc
inc
cwtl
push
push
sahf
dec
call
add
xchg
xchg
nop
or
mov
jo
js
scas
mov
mov
sarl
rcl
idivb
mov
pop
jl
loopne
fistpl
push
inc
add
fistps
das
push
mov
pop
mov
ds
cmp
dec
jae
fnsave
les
mov
inc
enter
mov
sbb
loop
sub
rcll
pop
or
loope
adc
lret
xchg
and
or
mov
lods
call
call
test
out
sbb
push
add
push
mov
mov
dec
subl
imul
cmp
mov
inc
pop
jecxz
mov
enter
mov
push
pop
add
or
fsubrl
adc
scas
pop
adc
aad
mov
xor
das
push
adc
cmc
stc
jge
iret
mov
fwait
xor
les
ljmp
fcomps
mov
xor
inc
inc
sbb
sub
outsl
adc
scas
adc
push
movsl
cli
jle
loop
pusha
scas
push
ficompl
and
push
push
aad
push
adc
movsl
js
pusha
inc
add
repnz
push
mov
bound
mov
mov
pop
out
clc
jg
pop
mov
sub
inc
in
lock
jae
mov
fisubl
mov
adc
or
hlt
sti
pop
sbb
push
sub
in
or
sub
test
test
movsl
icebp
jp
cli
aam
mov
faddl
loope
cld
inc
mov
les
bound
mov
out
cs
dec
push
cld
mov
ss
jl
push
jb
add
or
je
xchg
add
mov
and
repz
xlat
push
add
mov
lock
sub
aaa
cld
loopne
push
cmp
jno
xor
jmp
imul
insb
mov
enter
rcr
jo
or
mov
ds
and
daa
jne
sar
xchg
aad
and
push
loopne
imul
loope
inc
sub
cmpsb
mov
leave
aam
or
mov
lock
stos
ss
test
inc
mov
out
cld
jle
cmp
cmp
xchg
mov
mov
or
imul
inc
add
and
mov
inc
stos
jmp
cwtl
xor
jg
cmp
pop
and
lock
mov
lret
dec
out
int3
rolb
mov
gs
mov
xor
cs
jmp
out
call
test
push
int
enter
and
dec
aad
sub
data16
ret
pop
sbb
mov
inc
loopne
add
fstps
into
pop
adc
or
addl
pop
xchg
dec
bound
pop
dec
xor
loopne
fbstp
sbb
adc
bound
in
mov
lret
int3
jae
xor
sub
loopne
mov
cs
loop
call
push
stos
jno
sbb
lods
adc
in
pop
inc
push
cmp
add
sub
fdivrl
imul
mov
add
push
rorb
inc
popa
cmpsb
dec
push
inc
mov
mov
jne
adc
push
sbb
ret
pop
ja
push
rcll
clc
push
rolb
inc
nop
push
lret
cld
in
aaa
inc
loope
inc
jge
addr16
loop
imul
lods
shll
and
stos
adc
sahf
je
push
pop
cli
bound
pop
loopne
cmp
mov
jle
test
mov
cmp
js
les
mov
les
mov
add
jb
inc
sub
mov
sahf
adc
pop
arpl
sub
movsb
faddl
clc
adc
inc
int3
xchg
mov
lahf
pop
xchg
jno
arpl
lods
mov
mov
or
dec
popf
xor
hlt
inc
inc
das
cmp
fadds
dec
push
cmp
jg
mov
or
cwtl
adcl
push
into
xchg
test
xchg
pop
mov
add
mov
push
movsb
jnp
inc
jmp
mov
jo
adc
sub
ja
test
mov
add
sti
jge
mov
mov
mov
push
sub
pop
sub
xchg
je
sbb
mov
mul
push
adc
loop
mov
or
inc
xchg
movsl
xchg
adc
push
jne
dec
cmp
inc
jp
popf
iret
sub
sti
or
push
lock
inc
andl
cmp
sub
stos
out
push
dec
lcall
lods
add
scas
cs
add
adc
leave
call
lods
fdivl
movsl
insl
sbb
repnz
add
add
popf
shrl
dec
nop
jmp
and
sahf
es
or
les
pop
sbb
xchg
rdtsc
cmp
ss
cmpsb
push
bound
dec
push
push
fcomps
mov
push
xor
lock
dec
jp
insb
and
and
lcall
clc
aad
sti
or
hlt
mov
lret
cmp
or
or
cmp
inc
adc
inc
xchg
xor
mov
cwtl
negb
xchg
adc
mov
mov
cwtl
fbld
jmp
mov
adc
and
lods
mov
andb
ljmp
push
ss
mov
aaa
out
js
shlb
adc
adc
or
mov
add
icebp
jmp
stos
je
adc
test
inc
mov
cmp
mov
in
movsl
mov
or
dec
rcrl
jb
cmc
mov
out
mov
jbe
lods
adc
sbb
xchg
mov
movsb
jb
shlb
lar
sub
cmp
add
sub
jl
sbb
push
push
jne
add
jmp
xor
pop
add
mov
mov
adc
or
pusha
jg
hlt
adc
ror
out
or
aas
ret
xlat
jmp
pop
cltd
sub
mov
sbbb
pusha
incl
daa
ja
and
add
jnp
scas
and
sub
notb
xor
sbb
enter
out
scas
call
or
cmc
sub
fmul
xchg
and
adc
add
inc
rcl
in
pushf
add
cmp
pop
mov
pop
call
lret
push
jp
pop
mov
or
rcrl
scas
int3
push
add
in
data16
and
cwtl
ret
dec
movsl
push
or
pop
inc
add
pushf
xchg
js
push
adc
xchg
cmc
xor
ds
enter
repz
mov
out
rorb
mov
shl
add
les
jnp
in
aam
loop
pop
movsl
clc
int3
or
pop
mov
in
dec
adc
repnz
pop
stos
lock
mov
xchg
lret
pop
mov
js
lea
jbe
jp
std
aas
or
movsb
inc
push
lcall
sbb
in
fcoms
pop
aad
mov
and
mov
mov
call
outsl
cli
aas
xor
bound
repnz
js
test
shll
adc
aad
and
testl
xor
lds
pop
aam
sbb
mov
mov
icebp
loope
push
jnp
movsb
pushf
bound
das
test
add
jbe
push
imul
mov
push
pop
dec
mov
pusha
dec
push
or
adc
movsb
sti
pushw
cli
sub
scas
les
pop
mov
in
xor
int
pop
mov
pop
outsl
mov
lds
cld
push
xchg
inc
shrb
add
mov
adc
mov
inc
sub
cmp
or
insl
mov
sbb
cmpsb
ret
shlb
clc
xchg
add
pushf
or
fcomps
shll
mov
cmpsb
mov
sbb
fsub
pop
sbb
push
or
jo
stc
mov
cmp
aaa
test
inc
cmp
sub
aam
loopne
stc
xchg
icebp
or
pusha
out
inc
out
pop
mov
inc
movsb
cmpsb
pop
cmpl
dec
push
xchg
pop
sbb
test
push
xchg
jmp
mov
sub
push
jno
leave
pop
adc
sbbb
or
push
inc
push
aas
stos
ljmp
loope
sub
jl
xchg
sbb
ret
jo
lock
mov
repnz
dec
mov
push
xor
mov
pop
xor
sti
fisttpll
scas
and
pusha
movsb
rolb
mov
enter
push
fidivs
pushf
dec
shll
rcrb
cmpsl
push
mov
out
addr16
mov
movsl
dec
dec
xor
dec
aam
pop
cmp
xor
std
sbb
push
mov
mov
mov
scas
mov
insb
rolb
xor
clc
ret
xchg
movsl
sarb
lock
and
pop
mov
jle
test
inc
or
jb
sbb
cli
fildl
dec
popa
cs
mov
enter
or
lods
rclb
push
adc
jg
pop
sub
test
outsb
sbb
jno,pn
push
or
or
sbb
shrb
ss
sbb
mov
testb
or
pop
sbbb
rol
add
lret
pop
add
xor
nop
xor
cltd
ret
jae
scas
xlat
push
das
mov
jno
xchg
shll
inc
inc
in
mov
subl
ja
cmpsb
or
mov
xor
ljmp
and
pop
sbb
jo
frstor
movl
dec
cltd
je
and
adc
clc
inc
js
cwtl
xchg
push
sub
cmp
ret
iret
sbb
dec
movsb
push
lods
aam
cwtl
mov
aaa
lods
mov
clc
dec
fldl
mov
incl
mov
mov
push
xchg
mov
jg
mov
iret
xchg
mov
jmp
dec
xchg
xor
add
cs
mov
loope
sarl
cmp
mov
adc
mov
cli
jg
lret
es
les
xchg
push
xor
aam
xchg
sahf
lock
cmp
ficoms
adc
jg
jg
add
stos
mov
jecxz
mov
push
push
fwait
in
icebp
xor
push
ss
cmpsl
nop
inc
lret
testl
push
shr
rdpmc
inc
ds
scas
imul
mov
adc
push
jo
sahf
pop
mov
dec
mov
push
fcomi
mov
nop
dec
mov
in
cmpsb
fisttpll
das
scas
popa
test
and
test
mov
add
into
loope
mov
xchg
mov
in
popf
mov
pop
jl
adc
mov
pop
push
dec
in
xor
xchg
mov
sbb
lods
outsb
lret
sub
fld
or
or
push
test
inc
adc
es
fnstsw
sub
add
sbbl
movsl
daa
or
pop
enter
je
sti
cmpsl
adc
adc
add
das
mov
xchg
jg
and
xchg
lcall
mov
pop
popa
jge
mov
inc
dec
pop
addl
adc
jne
shll
jnp
lds
clc
loopne
sub
insb
xchg
dec
push
call
std
shl
mov
sbb
jbe
adc
xchg
jb
lock
lahf
lea
addr16
js
lods
xchg
adc
stos
sbb
push
jge
rcr
mov
push
push
pusha
imul
sysret
mov
stos
add
fwait
cmp
repnz
js
in
sub
mov
xchg
or
fs
std
pop
sahf
xchg
daa
popf
inc
xchg
push
add
mov
push
push
inc
or
push
cmc
adc
add
lret
rcrb
imul
cwtl
js
aad
aam
xlat
jbe
lock
mov
inc
add
icebp
mov
push
sub
loop
add
jmp
cs
insb
cmc
jmp
sbb
test
mov
cmovnp
andl
add
adc
xor
mov
scas
daa
xchg
or
sub
data16
fnstsw
test
outsb
add
std
or
inc
imul
jno
std
fisubrs
mov
loope
pop
dec
sbb
std
outsl
lret
mov
pop
sub
lahf
xchg
test
mov
aam
jge
jnp
pop
cmpl
xchg
inc
dec
popf
pusha
mov
call
mov
mov
xchg
adc
test
jo
hlt
mov
rolb
stos
xor
addl
sub
jae
push
cltd
es
loope
push
addr16
repz
addr16
mov
push
and
ja
arpl
jmp
ds
pop
and
outsl
or
cwtl
sbb
es
mov
mov
rcrb
arpl
dec
xor
push
pop
roll
hlt
mov
pop
jmp
movsl
and
jecxz
sti
xor
adc
insb
mov
sbb
in
and
jl
les
sub
mov
adc
sti
add
push
fsubl
push
sbb
jno
adc
das
into
pop
push
cmp
mov
sbb
fisubs
pop
call
inc
add
jecxz
or
adc
adc
mov
pop
push
dec
out
leave
push
cmp
loope
ret
jg
sahf
jne
sbb
sbb
lods
xor
add
jne
into
sub
fstl
push
jmp
imul
fucomip
fwait
dec
mov
add
nop
inc
xchg
aaa
inc
jl
push
jnp
push
cmp
or
flds
xchg
fdivs
test
inc
andb
xlat
stos
dec
add
push
pop
cmp
inc
push
imul
pop
loope
lock
adc
jne
mov
pushf
adc
ljmp
jl
sub
adc
in
cli
mov
dec
inc
and
ljmp
test
xchg
jne
inc
push
lret
cmp
push
jnp
mov
mov
xor
aaa
sub
or
movsl
in
and
insb
jnp
dec
rcrb
js
cmp
ret
xor
jl
sbb
out
inc
and
mov
and
mov
xchg
mov
std
sbb
mov
sarl
or
pop
jne
add
add
cmc
andl
push
dec
xor
sahf
int3
dec
fcoms
fs
icebp
add
dec
cmp
add
es
fidivs
xchg
call
shll
inc
and
stos
inc
and
jns
pop
ss
mov
pop
push
jmp
popa
mov
dec
imul
xchg
xor
sbb
xor
nop
push
add
xlat
add
fcoms
pop
cli
jp
out
jmp
add
orl
cmp
dec
mov
add
icebp
hlt
cmc
enter
aas
jge
add
lahf
shl
jle
add
jle
mov
or
or
dec
adc
shll
adc
sub
aad
inc
add
das
lock
mov
pop
ds
sahf
xchg
xor
mov
test
adc
cmpb
xor
xchg
lds
push
inc
out
lods
push
scas
jecxz
lret
pop
test
xor
jmp
xchg
scas
mov
add
xchg
mov
movsl
and
jp
jle
cmp
out
lods
sbbb
inc
jle
xchg
add
mov
adc
xor
or
adc
subb
fcomps
loop
nop
pusha
aam
cmp
jp
fldcw
xchg
mov
and
inc
cmpsl
popa
add
sub
or
xor
pop
test
loope
dec
lret
sub
mov
lods
add
cmpsb
jge
aas
cmc
rcl
dec
adc
icebp
add
insb
fisubl
xchg
ret
pusha
js
push
shrb
sbb
out
jmp
mov
dec
add
jecxz
nop
push
or
inc
ficoml
pop
mov
test
push
clflush
cmp
mov
cmp
jecxz
ljmp
xchg
ret
rcrb
sub
jecxz
ret
or
in
aam
mov
xlat
sbbl
pop
jge
jp
aad
sub
and
xchg
test
shrl
int
sub
push
sub
mov
icebp
inc
pop
int3
and
ss
enter
adc
ret
pop
lock
xor
cld
mov
xchg
add
inc
fcoml
test
ret
sub
popl
cmp
lret
xor
ret
mov
pop
dec
mov
xchg
pop
sbb
and
in
fstp
push
mov
adc
sub
dec
jl
adc
xor
shll
mov
jl
cmp
mov
in
inc
mov
cmp
nop
call
sub
popf
jp
subb
sub
jnp
rcrb
dec
xor
xor
xor
rcl
xor
stos
repnz
aam
sbb
push
adc
les
pop
js
lods
mov
fucom
or
lock
popa
mov
jle
or
les
pinsrw
lahf
cmp
clc
out
mov
xlat
jp
push
dec
sti
fs
pop
push
adcb
inc
sbb
mov
fnstenv
adc
cmp
sarl
and
sahf
in
into
lods
and
xor
add
cs
adc
mov
cmpsl
sti
jle
jb
xor
movsl
push
loopne
popa
lea
cld
push
js
test
ds
mov
adc
push
sbb
dec
je
loopne
pusha
mov
jl
push
push
icebp
test
insb
sbb
cld
rorb
cmpsb
cs
shl
push
mov
push
adcl
and
mov
mov
std
test
sbb
mov
popf
inc
or
je
xor
mov
outsl
stc
add
call
ljmp
cmpl
mov
inc
jl
loopne
je
scas
orl
stos
movsb
idiv
push
inc
lock
add
clc
add
jne
xlat
mov
pop
or
call
popf
lods
lret
aas
cmp
push
jnp
popf
test
xor
xchg
xchg
enter
icebp
xor
clc
sub
push
loopne
orb
ds
mov
je
adc
daa
ret
jp
int
push
and
xorb
add
push
ljmp
sbb
or
inc
sahf
mov
and
xchg
adc
mov
jg
pop
outsb
aaa
add
cmp
push
adc
lea
out
mov
test
pop
and
les
mov
push
xchg
mov
jge
mov
push
ret
cmp
jecxz
fists
stos
nop
in
pushf
sar
cmpb
repnz
into
movsb
fildl
outsb
jg
mov
sub
adc
lahf
ja
xchg
xchg
out
sti
rorl
mov
sbb
or
icebp
xchg
cmc
or
ljmp
pop
aam
iret
dec
inc
mov
stc
out
inc
xchg
or
leave
pop
fcom
lret
pop
lock
mov
pop
icebp
cwtl
aam
mov
bound
test
jle,pt
adcb
sub
fwait
jmp
pusha
mov
mov
and
aad
out
enter
mov
dec
pushf
mov
idivb
sti
pop
add
adc
sub
test
push
mov
mov
test
xor
subb
xchg
fadd
adc
dec
add
movb
and
mov
xchg
xchg
outsl
jp
push
nop
mov
call
jl
notl
movsb
inc
mov
lret
pop
push
xor
mov
mov
and
and
cmp
enter
mov
sbb
repz
or
cmp
ja
imul
mov
mov
mov
aam
sbb
lods
gs
mov
add
cli
outsl
pop
sahf
push
movsb
xor
mov
les
pop
shlb
mov
add
push
inc
push
mov
icebp
lea
add
xchg
leave
dec
repnz
jo
jmp
ja
insl
mov
push
imul
sub
test
jo
test
adc
sti
inc
cltd
adc
push
add
pushf
fmull
mov
fdivrp
pop
or
notl
and
inc
ret
ljmp
in
nop
pop
in
cmc
ljmp
adc
xor
push
test
add
pop
pusha
nop
and
in
pop
or
sbb
push
sbb
jns
xchg
mov
daa
mov
xchg
mov
or
jbe
clc
in
mov
jg
shl
pop
cwtl
mov
or
cmovae
xchg
enter
sbb
jecxz
cli
daa
scas
mov
or
mov
idiv
or
xor
lock
adc
test
inc
and
sbb
add
adc
in
iret
push
and
faddl
ret
jbe
mov
jg
int3
jno
add
out
xchg
movsb
xor
jne
pop
jmp
nop
dec
and
cli
cmpxchg
cs
pop
pop
jne
sbb
inc
mov
mov
mov
jne
pushf
and
insb
cmp
loop
push
divl
lock
lods
pop
in
sub
sub
pop
jne
sbb
xchg
mov
jmp
je
mov
mov
test
cld
mov
insb
or
jecxz
add
test
aad
icebp
and
fists
cld
sbbb
psubd
sub
js
xchg
scas
shrb
aaa
aam
push
push
or
mov
jmp
dec
dec
pop
cwtl
mov
sbb
out
jl
mov
imul
pop
add
sbb
sbbb
je
loope
pusha
les
sbb
lahf
fldlg2
cmp
test
xchg
test
or
sbb
gs
jmp
dec
rorl
jo
cmpsl
cmpsl
add
repnz
pop
out
push
loope
add
into
outsb
pop
push
mov
or
lahf
mov
add
in
xchg
movsb
adcl
or
cmp
out
ja
outsl
mov
push
xor
daa
xchg
addl
fnstsw
pop
adc
and
addr16
mov
imul
dec
push
pop
lods
or
adc
pop
pop
cmc
adc
enter
and
outsb
mov
xor
aam
lahf
idivl
cli
movsl
and
cmp
mov
aam
loope
dec
adc
mov
fs
dec
push
add
and
xor
and
les
inc
enter
push
test
maxps
inc
and
test
popf
xchg
ret
adc
rclb
ret
aad
jns
add
jl
and
cmc
mov
sub
dec
adc
loop
cli
mov
and
aam
push
mov
mov
mov
rolb
push
jno
inc
push
out
js
cs
nop
and
adc
out
mov
jno
outsl
mov
or
or
rolb
sbb
inc
dec
inc
ds
repz
lret
dec
dec
mov
push
jge
mov
jbe,pt
push
test
jp
call
out
sahf
in
subb
xchg
xor
subb
push
test
cmc
add
popf
inc
ret
jle
imul
rcll
jge
lea
dec
and
xchg
mov
lahf
adc
push
mov
cmp
pop
push
in
sbb
xlat
cli
sub
andps
inc
mov
test
cmp
push
je
jg
popf
jmp
int
and
add
aam
mov
loop
push
stos
sbb
cmpsb
pop
mov
aaa
adc
subb
cmpsl
insb
loope
inc
das
or
loopne
inc
das
pop
aam
cmpsl
scas
jno
jns
in
push
sub
icebp
loopne
pushf
mov
jmp
and
sub
test
fistpll
mov
cwtl
push
cmc
add
adc
repz
xchg
sarb
dec
dec
push
jecxz
fs
pop
ss
gs
adc
popa
test
int3
push
daa
call
lds
sub
sub
stos
movsb
orl
dec
rclb
add
xor
jne
outsl
orb
jl
mov
daa
dec
pop
mov
and
mov
shr
orb
sbb
mov
pop
push
dec
popf
xor
xor
jbe
adc
cmpsl
hlt
int3
mov
cs
add
jmp
adc
and
sbb
push
std
mov
jge
fs
inc
ret
ds
push
and
js
jle
jne
outsl
test
sub
cmp
sarb
push
mov
rorb
sbb
push
gs
roll
popf
adc
sub
inc
or
out
adc
push
add
sub
es
lea
ljmp
ret
jne
sbb
and
fstps
add
aam
mov
pop
fsubs
mov
ret
imul
cwtl
movsl
sub
add
jecxz
sbb
inc
rorb
rolb
inc
movsl
loop
inc
iret
cmp
stc
inc
aaa
adc
xchg
ds
sti
adc
dec
movsl
sub
mov
inc
xchg
mov
cltd
cmp
adcb
or
adc
cli
inc
mov
data16
inc
les
mov
xor
loope
xchg
mov
mov
mov
mov
jge
popa
jbe
adc
std
mov
leave
dec
std
push
in
pusha
jecxz,pn
ficompl
push
xchg
cmp
push
push
hlt
cmp
bound
lahf
push
out
pop
test
jecxz
cmpsl
fs
mov
or
stos
repz
shll
in
dec
cltd
les
pusha
mov
mov
mov
cld
pop
lods
aad
test
popa
cmpsl
ljmp
add
xor
sbb
fiaddl
xor
or
sbb
daa
mov
push
inc
dec
pop
pop
sub
ljmp
adc
xor
add
push
mov
dec
sub
test
test
sub
rorl
mov
cltd
pop
add
stos
lods
sub
dec
popf
pop
sbb
add
push
add
lahf
daa
push
mov
insb
sub
push
push
jg
fcmovnbe
sti
cmp
cmp
sub
movsl
inc
push
dec
xchg
lds
push
xchg
cwtl
jle
jns
mov
jbe
ret
subb
lock
mov
mov
xor
sub
mov
mov
fistpll
xorb
sub
dec
mov
fidivrl
adc
loope
cmp
mov
mov
fld
jbe
mov
lock
adc
subl
mov
jbe
jp
mov
dec
or
daa
mov
mov
or
or
adc
aam
cmp
mov
mov
add
xor
pusha
lds
xor
in
roll
lock
gs
aas
icebp
es
inc
pop
inc
push
inc
or
ret
out
or
sub
xor
and
lret
dec
xchg
inc
out
mov
mov
fisttpl
scas
jo
cmc
xlat
and
pop
sbb
mov
ljmp
jg
add
or
adc
rcl
bound
out
and
push
cmpsb
dec
test
mov
cmp
scas
dec
std
sbbb
cmc
add
add
xor
ss
cmp
aam
and
cmp
pop
push
sub
lds
mov
sub
lock
inc
sub
loope
and
lods
adc
adc
pop
add
call
insl
les
cs
xchg
push
pop
loopne
insb
movsl
jge
push
and
dec
icebp
xchg
jmp
icebp
or
scas
xchg
movsl
arpl
out
inc
test
scas
add
test
add
and
mov
inc
jno
cmp
imul
or
sbb
testl
mov
xor
dec
dec
wrmsr
jge
daa
es
mov
les
test
adc
pop
clc
jecxz
adc
or
iret
cmpl
add
adc
push
xor
add
and
iret
xchg
fidivl
repz
enter
lods
push
cmp
inc
out
jae
pop
mov
inc
int3
out
pop
or
dec
cwtl
scas
inc
popa
sbb
inc
cwtl
dec
ljmp
dec
jg
xor
or
test
test
push
lahf
push
sub
les
xchg
popa
stos
in
fistpl
gs
ljmp
out
enter
xchg
clc
xor
cwtl
icebp
mov
xor
inc
push
push
iret
adc
sub
cli
addr16
jae
sub
jecxz
adc
mov
cmc
add
shll
clc
add
inc
stc
sahf
jae
outsl
lods
cli
pop
mov
bound
in
iret
test
jecxz
aaa
ds
mov
inc
lcall
mov
or
mov
jns
rcl
jecxz
mov
xchg
daa
mov
aaa
nop
xchg
aaa
scas
cmp
insl
push
mov
ret
mov
dec
xor
imul
insl
mov
fwait
jb
cmp
adc
aad
push
jbe
xchg
fldenv
mov
xchg
test
pop
cmpsb
pop
je
filds
push
ret
mov
xchg
movb
rcrb
adc
jne
shlb
pop
jl
pop
outsl
or
adc
loope
lods
mov
or
aam
mov
mov
inc
sbb
or
mov
rcrl
ficoms
pop
mov
or
inc
mov
or
mov
adc
fucomp
adc
sbb
sub
iret
jne
xchg
fs
stos
or
push
mov
sbb
loop
cmc
pusha
inc
daa
dec
insb
loopne
or
fbld
enter
aad
and
mov
pop
mov
xor
ret
bound
andl
ret
cmp
push
ret
sub
aad
pop
mov
cltd
iret
cltd
lods
xchg
push
loop
ret
push
fildll
js
jecxz
pop
cmpsl
test
mov
and
sti
xor
and
adc
lods
and
scas
sahf
mov
cmp
incb
insl
or
push
xorb
mov
xchg
xchg
jp
aad
shrl
stos
or
insb
inc
dec
movsl
dec
pop
loop
lds
icebp
dec
add
scas
sub
cmp
cmpsl
dec
jo
cmpsb
dec
mov
cmpb
xchg
inc
mov
lock
jmp
test
es
and
mov
das
xchg
inc
mov
push
ds
popa
or
push
lock
sub
or
sub
cli
adc
daa
xor
cmc
cltd
fists
pop
mov
jp
add
in
push
fnsave
test
jg
sbb
hlt
pop
arpl
pop
mov
xbegin
mov
cltd
mov
test
or
sub
ret
daa
mov
inc
insl
mov
add
shl
pop
out
adc
add
add
pop
jmp
loopne
clc
mov
pop
stc
push
lods
xor
outsb
movsb
in
cmc
inc
clc
xchg
adc
push
add
pop
addr16
add
mov
mov
or
or
ss
push
inc
out
or
mov
xchg
fidivs
jecxz
xlat
shlb
dec
jns
and
sub
loopne
or
in
push
sub
or
dec
insb
icebp
aaa
mov
icebp
mov
aam
arpl
leave
pop
sbb
mov
ljmp
cmp
insl
fiaddl
imul
and
dec
pop
sbb
popf
or
repnz
aas
jns
mov
fsubrl
or
pop
jmp
mull
mov
jp
loop
xchg
adc
cs
cmc
mov
mov
mov
ljmp
rol
cwtl
aad
in
dec
repnz
mov
cwtl
pop
xchg
add
xor
cmp
mov
iret
jle
cmp
sti
adc
inc
data16
jae
mov
add
cmp
movsl
push
test
imul
inc
mov
mov
cwtl
jge
pop
faddl
ja
lret
das
inc
and
leave
mov
lods
js
idivb
jl
mov
mov
xor
pop
pop
mov
adc
in
imul
add
or
je
test
fimuls
inc
mov
cwtl
xor
aam
enter
dec
xchg
mov
sub
inc
pop
jae
jo
push
addr16
gs
ret
ja
mov
xor
cmpsl
orb
cmp
aas
pop
aas
andb
or
sbb
lds
adc
popf
cmpsb
lahf
mov
ret
test
mov
add
js
movsl
pusha
in
sbb
pop
call
adc
shl
dec
cmp
loope
cmp
mov
loop
jbe
push
jmp
xor
xor
ret
adc
xor
data16
xor
je
cmp
repnz
jno
cmp
xlat
aaa
out
push
out
data16
stos
cmc
in
fidivrs
cmp
call
test
cltd
mov
aas
jecxz
cmp
rorb
xor
test
xlat
dec
popa
daa
std
test
lods
scas
push
loopne
xchg
pop
inc
jp
cmp
add
xor
lret
ss
addl
scas
movsl
add
lods
ljmp
hlt
fisubs
push
push
jp
movswl
dec
inc
adc
ljmp
sahf
rcl
mov
adc
mov
xor
mov
xor
aad
cmp
in
dec
gs
xlat
data16
roll
aaa
nop
xchg
sahf
add
mov
scas
cmp
je
xor
add
je
push
jmp
hlt
test
add
les
js
inc
inc
cld
sarl
jecxz
idivb
xor
cmp
add
add
sub
and
sbb
cli
push
xor
das
cltd
leave
mov
mov
movsb
ret
leave
pop
sub
rorl
dec
add
lds
aaa
push
sti
les
sbb
sub
push
or
mov
daa
mov
and
jno
stc
lahf
mov
mov
stc
filds
add
fisttps
mov
ret
pcmpeqw
xor
mov
xchg
push
cli
mov
pop
sbb
jno
pop
mov
inc
sti
adcl
and
orb
xchg
adcb
out
sbb
sub
rcl
in
push
sbbl
sub
jl
repz
xor
cli
jns
aaa
sub
inc
xchg
inc
pushf
inc
inc
jmp
and
add
push
icebp
lea
scas
cmp
dec
mov
es
pusha
and
dec
into
jns
out
movsl
add
mov
or
fsub
shlb
push
adc
rorb
inc
mov
mov
or
adc
imul
or
hlt
pop
mov
adcb
pmaddwd
jns
add
movsl
xor
test
cltd
mov
adc
cmp
test
in
add
mov
or
test
out
imul
add
xchg
into
lea
enter
xor
ret
incl
add
pop
aaa
and
add
cld
lahf
in
inc
cli
mov
iret
pop
mov
add
testb
popa
add
bound
je
fsubl
jmp
inc
push
push
adc
push
movsb
aas
dec
cmc
test
call
jmp
sbb
test
dec
cld
sbb
loop
pop
mov
xor
and
lcall
adc
xor
test
inc
inc
jb
ror
pop
lods
aam
js
push
loope
cltd
fisubl
orl
adc
add
xor
xor
call
jno
jno
cmp
rolb
push
cmpsl
adc
cmp
adc
push
cmc
dec
dec
push
fisubl
loope
push
adc
xor
loope
sbb
stos
push
decb
jo
sub
dec
add
pop
jmp
push
negb
mov
je
or
mov
inc
rcrb
inc
cmp
jo
nop
xchg
pop
call
lahf
cmp
pop
out
imul
or
jecxz
rolb
test
mov
dec
add
sub
xor
and
push
mov
out
mov
les
loopne
out
std
dec
insb
or
std
das
movsl
cwtl
lret
push
mov
addr16
lods
mov
mov
sbb
push
mov
add
insl
and
test
adc
sbb
xor
movsl
pop
test
js
xchg
and
imul
jge
jl
mov
shr
jo
ja
push
popa
xchg
jne
inc
adc
inc
cs
jecxz
sbb
xchg
test
pop
aad
or
push
and
adc
int
nop
xor
les
test
fwait
sahf
xchg
sub
shld
loop
sahf
aas
clc
or
push
xor
adc
loopne
lds
xor
cmp
push
pop
inc
cmp
push
xorl
xchg
push
mov
sub
mov
push
mov
out
popf
ror
loopne
dec
mov
push
adcl
jmp
jp
fsubs
imul
loopne
aam
cli
dec
pusha
dec
imul
cmpsl
mov
jecxz
mov
add
cmp
fdiv
pop
adc
test
rolb
jb
mov
jo
pop
inc
fwait
xor
cmp
repz
mov
ret
mov
les
cmp
sbb
iret
orb
inc
pop
cwtl
dec
aas
call
and
cmpb
mov
negb
cli
add
in
or
or
xorb
test
loopne
clc
inc
pushf
add
clc
notb
inc
fsubr
outsl
loopne
movsb
sbb
cltd
push
cmc
inc
sbb
daa
inc
fnstcw
add
cmpsb
mov
incb
add
mov
cmp
outsb
push
clc
and
mov
and
jnp
sub
mull
lods
ret
int3
sbb
push
imul
out
jmp
push
inc
fs
jg
pop
pop
clc
pop
fisttpll
popa
jmp
scas
add
sbb
jbe
movsb
push
lods
out
cmpsl
movsb
sar
pop
add
and
loop
cmc
lahf
out
xchg
mov
les
lea
mov
adc
mov
push
mov
lock
arpl
sub
aad
push
sahf
sub
sbb
push
sbb
sub
mov
inc
aas
mov
xchg
gs
lahf
inc
mov
imul
ss
mov
jmp
jnp
jnp
add
xor
or
ja
add
and
pop
aad
mov
cmp
mov
inc
adc
xor
cld
adcl
cli
mov
lods
inc
xchg
loope
subb
mov
rsqrtps
mov
cmp
aas
popa
xchg
and
mov
dec
fistl
push
jo
addl
xchg
push
push
cli
xchg
out
jmp
enter
pushf
push
jae
gs
dec
ret
mov
inc
je
and
cmpsb
cmc
ja
cmp
xor
inc
xlat
mov
call
pop
or
add
fyl2x
add
pause
inc
shrb
mov
or
inc
rorb
test
mov
fcoms
sub
adc
jle
inc
andb
div
loope
inc
fadds
std
xchg
sub
mov
jmp
jecxz
sbb
stos
int
dec
shrb
je
cli
rolb
jg
xlat
mov
push
dec
jle
add
fst
cmc
xor
push
ficoms
pop
or
xchg
push
jle
adc
adc
mov
cmp
jl
dec
add
outsl
scas
pop
test
cltd
bswap
ljmp
inc
inc
into
dec
outsb
or
ret
lahf
jo
ret
jl
add
push
push
in
pop
push
inc
imul
push
jb
xor
cli
jo
pop
and
fs
aaa
push
imul
xchg
jecxz
jecxz
jbe
push
data16
paddb
jecxz
pusha
in
or
xchg
mov
push
mov
mov
iret
adc
inc
aam
inc
jo
fwait
xor
adc
lret
ss
jl
dec
lock
adc
mov
jg
sub
dec
rcrl
mov
sub
mov
cmpsl
fcomip
bound
cmc
mov
fmuls
psrlq
dec
add
or
cmpsb
pushl
inc
inc
nop
fdivrp
xchg
cmp
or
addl
ljmp
push
sub
xchg
xor
jecxz
adc
dec
cmc
fcmovb
sub
push
inc
cmp
insb
add
sbb
mov
fisubrl
jo
mov
cmc
aam
push
or
sti
int3
add
dec
cli
jb
stos
pop
jo
push
in
jl
lahf
adc
lods
and
and
adc
out
jg
gs
sub
pop
and
push
cwtl
je
push
xor
and
push
dec
outsl
mov
je
fiaddl
xlat
and
aam
in
je
xor
and
cli
mov
sub
adc
aam
pop
mov
xlat
std
add
or
and
pop
mov
shll
xor
and
mov
fsubrl
pop
cld
xchg
in
dec
js
imul
into
push
push
xor
icebp
icebp
jno
dec
sbb
ljmp
es
xlat
inc
push
xor
cmc
sbb
hlt
addb
shr
jge
adcl
test
rorb
sbb
call
push
cld
dec
adc
add
out
mov
lds
cli
insb
add
dec
std
jne
mov
mov
xor
mov
push
cmc
dec
aas
sarb
mov
and
scas
insl
clc
and
pop
xchg
xchg
sbb
outsl
xchg
int3
repnz
inc
sbb
xchg
pop
mov
mov
push
out
sbb
bound
sarl
mov
cmp
inc
add
test
mov
xchg
outsb
pop
loope
mov
movl
xchg
jp
nop
push
loopne
sub
push
jle
add
ljmp
ja
xchg
and
pop
inc
pusha
jno
and
add
ret
xor
xor
fmuls
test
pop
xor
xor
sarb
bound
xor
push
stos
andb
mov
cmpsb
push
cmp
in
or
jp
das
inc
push
or
mov
mov
sahf
xchg
mov
mov
lret
adc
add
adc
sarb
push
jl
les
push
xor
subl
icebp
sub
mov
pop
movsb
mov
jg
faddl
inc
cmpsl
pop
aaa
push
fs
fbstp
adc
xchg
sub
movsb
pop
sahf
subb
xor
adc
loop
xchg
inc
and
and
clc
ret
push
inc
sbb
inc
pop
pushf
call
sub
cltd
ret
icebp
fistpl
adc
leave
mov
cmp
sahf
pop
pop
js
xchg
jo
aas
shrb
jp
bound
mov
sbb
sub
xlat
adc
roll
ds
ljmp
stos
repnz
inc
fcmove
add
popf
das
mov
pop
cmp
aam
mov
mov
xor
jae
jle
in
fwait
sub
out
and
jno
loope
lods
clc
mov
cmp
adc
lcall
movsl
int3
cmp
cs
inc
xchg
and
lods
inc
push
jmp
push
push
int3
and
mov
int3
sub
or
pop
xor
bound
xor
inc
pushl
shll
jno
xlat
lock
and
addb
loope
pop
xor
jmp
arpl
mov
xchg
hlt
int
mul
pop
pop
addr16
inc
loopne
push
inc
sub
pusha
add
xchg
push
dec
sub
mov
lret
adc
xchg
es
mov
iret
mov
arpl
xchg
push
jno
mov
out
add
outsl
mov
push
shrb
jo
adc
inc
and
inc
dec
or
add
mov
cmp
sbbb
fnstenv
jnp
out
nop
jae
push
cltd
and
inc
rcr
cmpsb
pushf
and
pop
shr
and
scas
and
rorb
stos
mov
or
or
popf
mov
cmp
rorb
xchg
add
daa
jle
clc
sub
adc
ss
rorl
and
cwtl
push
ds
mov
mov
aas
sbb
cmpsb
jg,pt
outsl
mov
jp
test
mov
setne
jne
push
jge
in
adc
mov
pusha
andl
jg
and
inc
push
ret
movsb
jne
aam
push
add
ret
sub
sub
outsb
xor
shrl
in
mov
aam
dec
cmpsb
pop
dec
or
movsb
ret
mov
adc
mov
shlb
outsb
repnz
je
imul
scas
sbb
sbb
addr16
add
adc
stos
hlt
mov
sbb
pop
sbb
adc
pop
je
je
cmpsl
push
fidivs
aas
ljmp
shrb
sti
inc
inc
xchg
add
sbb
lods
test
ficompl
cmp
negl
clc
les
fdivr
data16
sub
insl
movsb
inc
sub
stos
imul
push
test
fcomps
repz
rorl
or
dec
push
jo
fildl
mov
add
pop
subl
push
out
pushf
sub
or
jb
sbb
out
scas
cld
pushf
add
mov
push
xchg
mov
fistps
clc
push
ds
push
loopne
sarl
jb
ret
add
in
cmc
inc
enter
or
repnz
mov
orb
push
daa
mov
and
mov
ljmp
or
cmc
int
aaa
xor
sub
std
push
push
push
scas
mov
pop
mov
fidivl
cli
xor
shlb
into
rcr
jecxz
enter
loopne
or
xchg
and
rcrb
inc
popa
hlt
loope
pop
out
fdivr
push
xchg
sahf
or
sbb
stos
xchg
sbb
pop
sbb
data16
das
and
mov
cld
mov
inc
mov
nop
stos
mov
imul
or
outsb
addb
sub
push
sbb
push
sub
hlt
jmp
mov
popa
push
decl
adc
jb
or
leave
xchg
fdivrs
push
inc
mov
push
pop
mov
jbe
filds
lea
ja
inc
mov
mov
sub
les
inc
fldl
inc
das
std
jmp
nop
pop
shll
in
hlt
imul
sbb
inc
jno
inc
shll
cmpsb
ljmp
dec
adc
orl
inc
scas
dec
sub
mov
movsl
adc
push
mov
push
xlat
pusha
aaa
insb
sub
pop
pmaddwd
movsb
cmp
xor
dec
cmpl
rcl
data16
jbe
mov
mov
mov
dec
pop
ret
ja
jmp
push
mov
mov
les
push
testl
test
and
cmpsb
adc
dec
pop
add
xchg
dec
dec
jle
xor
clc
sbb
in
inc
repz
imul
and
lahf
pushf
sti
xchg
aam
dec
jb
pop
sub
roll
sub
push
xchg
leave
mov
add
fisubl
pop
nop
jge
xor
sub
adcb
lea
or
push
push
fistps
inc
or
subb
movsl
dec
jg
cmovns
inc
jne
shlb
sahf
cmc
movl
xchg
mov
test
mov
pop
aaa
jb
incl
ficoms
xchg
aad
and
out
fsubrs
lods
and
jns
or
std
push
mov
or
adc
adc
pop
iret
push
add
repz
sbb
mov
leave
cmp
in
dec
push
add
in
adc
loop
rol
imul
repnz
mov
rcll
push
movsb
cmp
data16
sbb
cmpsl
nop
add
mov
adc
rorb
cmpl
push
rorb
jl
cwtl
ret
mov
imul
lods
sbb
add
xorb
add
pop
dec
lret
push
pop
sarb
mov
adc
shll
sbb
rclb
or
and
out
push
or
hlt
cmp
dec
decl
cld
push
in
mov
pop
sbb
testl
pop
mov
sbb
pop
lock
mov
mov
fadds
or
lods
sahf
test
stos
sub
pop
xchg
cmp
push
inc
jge
cld
out
int3
mov
xchg
cmp
cwtl
mov
cwtl
dec
lock
in
out
test
js
pop
dec
mov
adc
loope
jbe
lods
mov
rcrb
jle
popa
jmp
jo
jo
jnp
push
mov
xchg
mov
call
add
sub
mov
fiadds
decl
cmp
cmp
cmp
fistps
jne
add
out
clc
cld
jb
mov
inc
push
shlb
mov
pop
insl
xchg
fwait
xchg
lock
push
lret
mov
xchg
mov
push
push
cs
repz
xchg
fs
call
subl
push
cmpsb
and
nop
add
sbb
jne
aaa
jle
gs
jle
cmp
dec
lcall
add
js
test
push
xor
or
pop
jnp
sarb
aas
icebp
enter
fildll
clc
inc
adc
inc
jl
jno
sub
pop
decb
cmp
roll
mov
out
ficompl
testl
mov
cld
cmpb
scas
mov
dec
cmpsb
push
test
test
rolb
lock
add
enter
loop
mov
cmp
or
cmp
rcl
push
add
xchg
test
sub
xchg
cwtl
es
lock
mov
out
repnz
js
rolb
ret
test
mov
push
adc
push
cwtl
adcl
adc
and
aas
add
out
call
lret
jge
incb
jmp
or
xchg
out
dec
lret
xchg
cmpsb
push
pop
cmp
dec
fistpll
adcb
ret
pop
and
push
pop
ja
jo
mov
add
sar
fnstsw
test
dec
push
inc
movsbl
into
adc
sub
inc
and
fcmovnb
mov
cmp
mov
or
into
les
scas
aaa
pop
jo
cmpsl
sbb
insb
push
jae
imul
ds
les
stc
loop
jo
sub
push
or
xchg
jge
mov
fisttpll
fisubs
push
mov
ret
mov
mov
and
mov
sub
loopne
xor
xor
sti
xlat
or
xor
dec
dec
call
loopne
sub
pop
js
dec
sbb
shll
xorb
fsubrl
mov
dec
mov
sub
shl
ds
push
inc
or
test
jg
incb
push
fsubl
adc
sbb
add
add
fnstenv
and
sub
mov
mov
lcall
inc
aaa
pop
jg
dec
push
ret
dec
mov
mov
push
add
push
test
pusha
cmpsb
inc
mov
add
dec
adc
push
and
and
mov
pop
addb
pop
sbb
mov
nop
push
into
shll
pop
ljmp
and
sub
mov
mov
pop
insb
mov
mov
mov
subb
add
pop
fisttps
lods
and
sub
adc
adc
mov
adc
sbb
adcl
pop
loop
dec
cmp
sub
dec
fisubrs
xlat
mov
inc
xlat
aam
xor
loop
add
dec
mov
lock
jo
jle
pop
or
pop
bound
cmpsb
lcall
or
jo
cmpsb
jbe
sbb
jle
jbe
cld
sub
cmp
inc
movb
test
dec
jp
pop
or
sahf
fcoml
clc
jb
in
mov
lcall
and
loopne
jb
mov
orb
xchg
jne
sub
and
mov
pusha
pop
cmp
mov
adc
movsb
stc
test
mov
push
in
mov
and
and
inc
cld
aaa
sub
mov
adc
add
ds
push
jo
sub
jne
mov
movsb
add
mov
call
pop
jge
std
lock
scas
pop
sbb
jo
cmp
inc
jg
mov
outsb
push
aam
adc
mov
test
nop
sahf
or
jle
gs
fs
movsb
adc
dec
xchg
test
add
out
sti
enter
xchg
cmp
sub
pop
shll
test
nopl
mov
pop
nop
mov
out
sbb
jecxz
xor
lock
and
out
jecxz
mov
sbb
add
mov
add
jbe
ffree
cmp
xor
and
sub
pop
or
ret
add
xchg
bound
imul
pop
aaa
loop
cs
sbb
mov
and
mov
loope
rorb
xchg
ret
loopne
movl
scas
aam
fdiv
call
lret
mov
pop
jo
inc
pop
adc
lret
out
jbe
out
js
add
sub
jl
mov
adc
pand
sbb
and
cmpsb
and
jo
cmp
cvtdq2ps
cmp
xor
and
mov
lods
mov
mov
mov
lods
ret
clc
addr16
cwtl
sub
pusha
cmp
xchg
cmc
cmp
pop
loop
and
out
dec
mov
stos
inc
push
xchg
pushf
rcl
push
pop
inc
dec
loop
inc
imul
mov
or
shl
fisttps
xchg
sub
nop
jge
movsb
adc
cmpsb
orb
xchg
mov
adc
mov
push
and
hlt
xor
xchg
stos
xchg
shlb
push
sbb
cmp
sbbb
xor
imul
cld
jno
mov
jno
or
cmpsl
cmc
fmuls
jne
push
add
addr16
pop
jo
add
mov
je
xchg
lea
adc
in
xor
push
loop
push
hlt
and
jle
adc
sahf
sub
out
hlt
add
jg
pop
add
insl
pusha
xor
fstp
mov
jecxz
pop
add
les
pop
mov
fdiv
ds
inc
push
sahf
mov
or
adc
jmp
arpl
or
cmp
repnz
and
cmp
inc
shlb
faddl
pop
test
shrb
psrlw
aam
lahf
bound
adc
mov
pop
cs
jo
jecxz
mov
gs
data16
jo
lods
jb
pop
or
or
push
xlat
movsb
mov
loop
pusha
sbb
sub
adc
pushf
fisttps
andl
mov
jmp
orb
cmp
jo
xor
dec
inc
dec
scas
mov
lret
mov
mov
xchg
adc
adc
les
enter
clc
outsb
xor
movsl
pop
outsb
scas
pusha
call
cmp
ljmp
in
in
ficoml
cs
mov
jge
inc
int3
out
jno
ss
data16
pop
xchg
push
push
pop
add
or
sub
and
in
jle
jb
mov
lcall
out
andb
cmp
int3
movsb
adc
ffreep
lahf
hlt
adc
repz
out
dec
dec
push
fdiv
insl
xchg
push
jb
sqrtps
ret
push
pop
cmp
aad
xlat
cmp
push
divb
jno
hlt
pop
mov
add
xlat
mov
adc
sub
jae
scas
xchg
jle
mov
xor
lds
jl
sub
inc
insb
test
cmp
jg
insl
icebp
roll
js
add
test
cmp
fiaddl
or
push
sbb
insb
push
not
and
sbb
xor
mov
lret
sti
inc
sub
dec
scas
scas
sub
subl
push
or
ss
sbb
ret
xchg
inc
xchg
inc
pop
pop
loopne
add
sub
xchg
mov
imul
fldl
and
lahf
lods
mov
adc
jns
icebp
mov
dec
push
and
mov
outsl
mov
sbb
mov
dec
or
iret
les
push
jle
sub
add
mov
pop
push
js
fstp
dec
cmpsb
fimull
add
sbb
push
lcall
aam
in
push
repnz
jo
call
notb
in
int3
pop
andb
jns
jo
or
jecxz
je
in
out
aam
jl
pop
out
pusha
imul
daa
shl
and
movsl
xor
xchg
push
lock
add
add
lcall
cmpsl
dec
test
outsb
adc
sbb
fdivr
push
dec
shll
cmpsl
lods
data16
or
js
bound
jl
aas
push
cli
xchg
stc
xor
stos
aaa
mov
dec
lods
insb
and
jns
jge
sbbl
ja
adc
insl
dec
iret
shrl
pushf
sub
or
push
jge
add
mov
subl
adc
or
mov
enter
in
nop
inc
xchg
inc
incl
icebp
out
jbe
incb
jg
sub
push
repnz
cwtl
jge
pop
xor
outsb
jo
addb
push
xchg
add
jge
push
stos
enter
jne
jmp
and
mov
idivl
jae
xchg
hlt
ret
jge
movsb
fstl
add
or
push
cmp
lahf
sub
adc
or
pop
push
call
test
daa
icebp
add
ret
andb
arpl
dec
add
push
dec
mov
push
or
rcr
lods
fadd
jb,pt
push
pusha
jae
xchg
jecxz
jle
xor
xor
push
jl
pop
add
aas
loopne
mov
ja
or
inc
ljmp
add
dec
or
fwait
mov
mov
mov
sbbl
and
mov
push
sbb
xchg
movsb
pop
or
in
and
sub
inc
jo
xchg
inc
adc
mov
lahf
int3
jb
pop
dec
push
test
imul
dec
std
aad
cmp
sbb
inc
aad
test
scas
sub
push
in
mov
pop
subl
incl
adc
daa
loope
pop
out
jae
inc
jecxz
imul
loop
test
xor
mov
and
jg
adc
push
test
or
add
popf
jne
test
ds
push
mov
or
mov
imul
icebp
adcb
fbld
jmp
movsl
or
in
or
inc
add
imul
add
pop
in
jb
ret
je
pop
jecxz
fdivrl
jl
hlt
fistl
imul
xchg
mov
jb
repnz
ret
cmpsl
jae
movsb
loope
ja
test
bound
stos
imul
lods
lods
into
sub
sbb
int3
push
xchg
cmpl
inc
hlt
xor
add
test
xchg
cmp
mov
and
movsw
xchg
sbb
xchg
mov
rclb
xchg
and
aaa
push
push
hlt
sbb
shll
xchg
sub
or
mov
and
or
push
dec
jp
sub
loop
into
rcrl
sahf
jno
bound
fstl
pop
mov
push
adc
xor
aaa
ficoms
das
loope
enter
push
inc
imul
mov
pop
std
dec
xchg
cmp
les
and
mov
mov
nop
out
orl
pop
movsb
dec
pop
inc
movsw
xlat
pop
rolb
repz
or
jp
rcrl
push
fnstenv
mov
push
icebp
out
pop
adc
adc
mov
jecxz
xchg
dec
outsb
es
shlb
test
in
fdivrl
ds
pop
insl
test
pusha
jmp
mov
cmpsb
mov
dec
adc
mov
cmpb
sub
pop
out
lret
mov
mov
and
gs
add
jmp
rorl
xor
add
test
add
inc
shrb
push
mov
scas
in
data16
das
push
mov
adc
ret
add
xchg
sbb
into
filds
sbbb
sub
mov
call
push
fldenv
cmp
adc
aad
mov
pop
fs
fdiv
sub
push
inc
and
jg
fisttpll
popa
pop
and
dec
jp
push
loopne
lcall
pop
cmpsb
mov
xor
mov
sti
push
ret
fdivr
popf
and
sub
push
inc
daa
dec
jbe
pop
shl
jo
dec
dec
or
sbb
mov
imul
movsl
mov
sbb
jg
adc
cmc
das
scas
hlt
mov
icebp
dec
or
jl
fs
push
xchg
into
imul
jno
and
mov
loope
xchg
push
inc
pop
mov
adc
cs
outsb
mov
cs
scas
xor
lcall
or
cmpb
xchg
xchg
and
mov
push
outsb
andl
and
pop
xor
jp
adc
pusha
ret
dec
inc
inc
pop
stos
push
aas
sbb
inc
mov
cmp
jnp
jbe
push
mov
jl
sti
je
cltd
not
and
out
sbb
push
loop
inc
imul
sbb
add
sbbb
les
cmp
jmp
ret
jo
sbb
push
and
int
and
inc
dec
psubusb
lock
sbb
inc
dec
pushf
inc
lods
or
or
and
dec
fadds
xchg
cmpsl
mov
mov
mov
jg
hlt
iret
mov
fdivl
std
sbb
push
pop
inc
inc
subl
jge
inc
mov
lock
lock
push
cli
mov
or
decb
xor
int3
mov
jge
movsb
in
inc
inc
daa
jle
hlt
mov
and
lods
lds
pushf
pop
imull
cltd
xchg
enter
mov
sbb
fnstenv
neg
inc
jg
bnd
mov
and
jmp
lcall
loop
nop
jmp
hlt
xor
ret
clc
inc
mov
mov
fiaddl
or
and
sbb
stos
sti
lods
pusha
pop
decb
in
add
and
rclb
hlt
xchg
push
add
jbe
test
shll
daa
or
pushf
aad
mov
hlt
sbb
inc
add
mov
cmpsb
es
fs
enter
out
inc
adcl
add
cltd
xor
mov
cltd
pop
mov
pushf
dec
or
int
lahf
cli
fcomps
je
je
inc
push
and
pop
call
jno
hlt
cmp
and
push
leave
mov
xor
inc
cli
scas
cmc
scas
cmp
or
push
or
push
xchg
adc
inc
dec
in
push
daa
sub
in
test
hlt
jbe
add
cli
cmpsb
pop
mov
orl
lock
in
inc
sbb
xor
jb
lods
xchg
fmulp
ja
push
ljmp
and
mov
and
add
filds
mov
aam
push
pop
jle
inc
loop
or
lock
mov
stc
push
mov
outsl
rorl
xor
and
aaa
scas
ljmp
push
nop
push
push
rclb
aad
mov
xor
push
dec
faddp
cmp
add
or
lock
subb
scas
idivb
pop
inc
vpsrlw
cmp
dec
inc
es
sahf
or
xor
faddl
mov
outsb
es
fdivp
pop
bswap
mov
and
jecxz
les
pop
push
popf
inc
enter
je
sbb
mov
fldl
push
lds
jo
stc
in
mov
aad
add
mov
cwtl
xor
jg
inc
pop
mov
sbb
inc
jne
mov
arpl
daa
sbb
mov
mov
lds
fsts
push
inc
ficompl
insb
rclb
fldt
push
lahf
pop
and
dec
imulb
jle
xorb
adc
fsub
shll
xchg
jle
inc
sbb
clc
pop
test
mov
cmp
lea
and
std
enter
pop
ljmp
sub
shrb
inc
mov
adc
notb
lea
push
aad
sbb
hlt
test
sahf
mov
out
fmulp
sbb
movsb
inc
push
inc
imul
pop
sahf
and
mov
dec
fwait
or
movsb
xchg
js
loope
add
pop
subl
decl
outsb
fldt
push
mov
and
inc
ljmp
cmp
mov
test
mov
sbb
and
xor
ljmp
or
ja
cld
and
negl
int
es
test
cmpsl
test
add
es
clc
add
imul
aam
xor
xor
xchg
fcompl
dec
xor
cld
pop
pop
mov
sbb
sbb
push
or
or
xchg
or
lcall
pushf
or
std
ror
sti
inc
mov
add
test
shll
insb
xchg
mov
int3
sbb
loop
shrl
cmp
or
xchg
ja
xchg
push
mov
es
jl
cmc
sub
test
imul
loopne
repnz
add
or
mov
pop
loop
push
cmc
ret
inc
push
sbb
mov
inc
push
and
testl
sbb
mov
stos
mov
xlat
xchg
jecxz
xchg
and
mov
inc
mov
or
cmp
jmp
mov
inc
xor
sbb
add
mov
cmp
shll
outsb
or
inc
add
mov
inc
mov
sti
sub
lcall
add
pop
outsb
push
lock
sub
cs
pushf
adc
sub
cmp
pop
out
push
or
adc
loopne
mov
ljmp
ret
rcr
ds
test
mov
call
and
mulb
push
sbb
or
add
push
sbb
add
fs
pop
and
in
test
adc
jno
mov
mov
sarb
or
xor
push
stos
add
test
lcall
aam
adc
loopne
fnstenv
mov
in
data16
js,pt
scas
nop
insl
inc
sbbb
or
js
out
ss
sub
pusha
pop
mov
adc
mov
dec
or
pop
inc
rclb
pop
inc
pop
mov
sbb
push
mov
mov
push
repnz
cli
ret
push
orb
xor
movsb
ss
nop
xor
or
hlt
add
xor
pop
adc
das
add
orl
gs
fstp
fcom
fcomps
mov
sarb
mov
mov
repnz
insb
inc
pop
pushf
adc
sub
add
adc
iret
pop
sub
inc
and
sub
cmc
jmp
pop
dec
dec
pop
sbb
les
mulb
xchg
push
inc
test
movsb
sub
sub
out
movsb
push
test
pop
push
lret
je
adc
add
mov
sub
insb
fbstp
cmpsl
ds
loopne
xchg
bound
mov
add
inc
stos
vxorps
xor
or
sub
pop
decl
pop
xorl
push
shrb
insb
inc
movb
add
test
loopne
loop
stc
adc
push
jo
lret
xorb
mov
imul
lahf
jle
cmp
mov
or
mov
xchg
pop
cmp
addl
sbb
lock
jecxz
in
sub
inc
arpl
filds
sub
movsb
sbb
push
push
int3
push
mov
addr16
xchg
and
push
out
mov
clc
bound
shll
fsubl
push
mov
loope
lods
int3
add
xchg
aaa
pop
inc
rep
dec
cli
xor
pop
loope
mov
dec
inc
xor
inc
aam
fdiv
lahf
clc
dec
fisttps
mov
cwtl
dec
ret
and
aas
test
mov
hlt
push
in
adc
pop
lea
sbb
incb
sbb
ret
dec
mov
pop
sub
clc
or
rorl
xor
andl
push
adc
jl
pop
scas
lahf
shr
add
push
cmp
movsl
pop
add
es
and
mov
mov
dec
sub
or
fildll
mov
call
icebp
sbb
cli
inc
dec
sbb
mov
ficomps
jp
imulb
xor
mov
mov
xchg
push
repz
pop
mov
out
mov
mov
push
in
lods
es
and
mov
xor
repnz
adc
hlt
ljmp
rcrb
imul
call
xchg
test
xchg
add
push
daa
xchg
ficomps
xchg
xchg
out
dec
sahf
test
call
fsubs
ret
xchg
cmp
adc
dec
sbb
mov
ret
cld
orb
es
push
push
stos
mov
outsl
fdivrs
testb
inc
std
pop
dec
mov
inc
test
fwait
inc
push
js
es
lret
imul
push
mov
jo
repnz
mov
add
aas
cli
fildll
sahf
pop
rcr
sbb
xlat
fs
pop
and
clc
data16
mov
jns
push
push
jmp
push
nop
xor
movsb
or
mov
mov
inc
fidivl
je
adc
cmp
cmpl
test
testb
xchg
mov
lock
pop
jo
outsb
clc
jmp
adc
pop
xchg
mov
pusha
clc
bound
fwait
pop
loop
les
add
sub
pushf
insb
int
xor
xor
mov
mov
and
cmc
xor
push
cld
pop
push
xchg
test
jmp
mov
jl
and
cmp
push
in
pop
mov
mov
adc
cmp
test
ljmp
adcb
addr16
add
cmp
or
in
mov
dec
add
push
push
sub
mov
push
scas
ljmp
jmp
je
cmp
sbb
cmp
mov
icebp
add
xor
or
sub
imul
pop
in
lds
fistl
movsl
inc
pop
rorb
cltd
imul
push
pusha
pop
fnstsw
jecxz
mov
lcall
mov
push
add
negb
sbb
fcoml
repnz
cld
mov
imul
ja
ss
ds
aas
push
push
pop
imul
sbb
adc
pop
mov
shrb
call
test
fdivr
jl
sbb
das
mov
jb
cmc
xchg
js
loopne
pop
roll
in
out
inc
xor
aam
leave
fnop
aaa
sbbb
adc
fcomps
rcr
dec
stc
add
pop
push
sub
jb
push
add
ret
adc
cmp
mov
mov
out
mov
ja
daa
je
in
inc
inc
pop
dec
xchg
scas
lock
test
pop
test
int3
xor
inc
arpl
sahf
push
jge
movsb
icebp
or
push
addb
mov
iret
sub
xchg
cwtl
jno
xchg
xchg
push
jne
mov
movsl
mov
adc
roll
add
into
loopne
in
mov
or
adc
add
in
mov
mov
aad
and
mov
cmpsb
add
loop
fisubrl
xchg
aam
or
hlt
mov
les
mov
cmp
cmp
mov
xchg
cli
pop
xchg
lock
sbb
push
cmc
out
mov
jnp
ficompl
cmp
dec
mov
push
mov
mov
ja
jmp
jp
push
or
hlt
aaa
sbb
xor
mov
add
mov
test
mov
push
scas
ds
pop
test
add
jae
adc
pusha
add
xchg
rcl
mov
push
mov
and
cmp
adc
jg
imul
imul
mov
nop
and
cmpsl
sahf
clc
and
mov
jge
sub
push
mov
mov
and
dec
pushf
push
xchg
sub
pop
xchg
loop
sub
fisttps
sbb
push
and
jno
mov
adc
and
push
mov
mov
dec
mov
adc
dec
mov
ds
jge
movsl
out
or
loopne
dec
loop
call
mov
add
aas
add
decb
in
sbb
inc
call
and
push
gs
sbb
lock
mov
mov
adc
dec
nop
lock
push
mov
inc
rclb
ficompl
pop
dec
mov
aad
pop
cmpsb
push
aam
push
inc
pop
push
push
fistpl
shll
mov
adc
iret
sbb
repz
cltd
movsb
sbb
mov
test
push
mov
or
mov
std
pop
mov
fldt
xchg
mov
dec
sbb
push
cmpb
jmp
jns
dec
xor
inc
aam
adc
mov
xchg
fidivl
imul
lcall
pop
sub
or
pop
pop
mov
ret
insl
shll
mov
lock
popf
adc
adc
ljmp
sub
dec
mov
mov
lods
pop
lds
pushf
stos
and
push
sub
sbb
mov
pop
cwtl
leave
fwait
rcrb
fbstp
add
add
ds
ljmp
push
xor
push
mov
scas
push
jo
xchg
jno
imul
cs
arpl
es
jecxz
xor
pusha
inc
mov
adc
call
inc
jg
and
dec
loope
hlt
fsts
cmpsb
enter
and
add
imul
sbb
out
mov
or
pop
cli
repnz
jns
adc
mov
or
arpl
sbb
imul
sti
push
orl
subb
push
mov
stos
out
xchg
pop
inc
scas
pop
cld
add
test
outsl
ret
call
mov
xchg
gs
test
into
rcrl
clc
lcall
pop
pop
pop
pop
xchg
push
pop
loope
jbe
sahf
and
jecxz
jo
rolb
mov
fs
sahf
and
cmp
push
inc
pop
pop
inc
or
pop
lock
test
dec
pusha
and
cmpsb
xor
ror
popf
pop
aam
sbb
mov
cmpsb
nop
mov
in
shll
adc
mov
inc
push
mov
nop
mov
aad
push
push
idivl
ljmp
incl
rcr
dec
adc
adc
push
add
jl
in
push
lea
lcall
adcl
daa
out
cmp
lods
rcrb
pop
aas
mov
cmpsl
sbb
loop
outsb
js
ret
test
sub
sbb
dec
mov
arpl
movsl
xor
xor
orl
xor
pop
lock
std
push
add
and
shl
sub
and
cmp
sbb
dec
popa
negb
rolb
leave
pop
push
mov
jmp
dec
mov
daa
addr16
xor
push
hlt
mov
add
xchg
mov
imul
and
push
lock
aad
or
adc
insb
dec
jmp
xor
sbb
and
iret
scas
loope
test
aad
aaa
fldenv
fimuls
xor
or
imul
mov
je
rolb
movsb
fs
ret
push
push
push
mov
inc
mov
repnz
int
dec
jno
add
push
mov
filds
aas
ficoms
xchg
out
jne
adc
andb
loopne
xor
push
pop
push
dec
mov
xor
movsb
adc
adc
mov
sub
inc
pop
or
jns
fs
rcll
ficoml
fsubs
pushf
cmpsb
adc
out
add
cwtl
inc
xchg
cmp
mov
lock
std
mov
sbb
cmp
mov
add
pop
out
lret
loop
fs
add
adc
mov
rolb
movsb
add
dec
mov
scas
or
cmp
insb
cmpsl
push
enter
xor
push
hlt
sub
mov
mov
cmp
xor
pop
jmp
pop
sahf
and
push
nop
jle
inc
jno
ljmp
sub
addr16
jle
leave
add
dec
test
xchg
aaa
jne
and
add
cmp
xor
xor
rclb
andb
push
add
and
dec
inc
mov
pminsw
gs
dec
pusha
sbb
add
xchg
jno
imul
bnd
mov
and
cmp
leave
sbb
or
outsb
xor
xor
jne
lret
xchg
adc
out
andl
inc
sbb
jne
sti
ja
mulb
and
cmpsb
xchg
mov
jl
popa
loopne
daa
ficoms
sbb
fadd
lret
shl
imul
imul
hlt
loop
add
xchg
xchg
dec
or
inc
orb
fcmovne
or
fnstsw
aaa
or
loop
scas
mov
inc
or
cmp
inc
clc
push
imul
dec
repnz
mov
pusha
imull
xchg
push
and
inc
insb
imul
fistpll
inc
pushf
scas
dec
sub
mov
pop
pop
das
jb
lret
dec
mov
jae
fs
xor
dec
mov
in
mov
push
sbb
scas
jmp
sub
cmc
xchg
push
andl
or
clc
add
mov
dec
sbb
pop
cmp
lea
gs
negl
in
jne
jle
inc
inc
jae
vmovhps
mov
rclb
mov
movsl
outsb
rolb
xor
aad
loopne
pop
aas
or
iret
js
and
addr16
xor
dec
sbb
sahf
pminub
popa
arpl
pop
pop
ljmp
stc
mov
andl
mov
lds
mov
sarb
outsb
mov
mov
fiadds
pop
mov
xor
imul
stos
repnz
dec
ja
add
pop
pop
or
ret
cld
das
push
xchg
out
loop
sub
mov
test
xor
std
push
fisttpll
loope
std
cmc
xchg
push
fs
or
cld
mov
fld
or
es
rclb
sub
and
mov
add
add
pop
push
xchg
xor
imul
jmp
inc
sbb
imul
jo
cltd
aas
pusha
int
xchg
push
mov
rclb
inc
cwtl
and
insl
add
popa
jns
subb
dec
loop,pn
es
aaa
pushf
sub
inc
jl
and
sub
or
or
mov
jbe
insl
xchg
inc
xchg
jb
aas
add
jl
stos
cmc
out
pop
inc
push
nop
or
call
jge
outsb
mov
cld
shlb
xor
fdivs
test
push
jmp
dec
movsl
rolb
fdivl
les
push
sub
xchg
sbb
fcomp
js
xchg
sbb
arpl
mov
mov
sarb
add
xchg
cmp
xchg
push
adc
daa
lds
mov
dec
add
xchg
out
mov
shrl
dec
mov
pop
stos
inc
mov
xchg
mov
nop
fisttpll
int3
aas
adc
movsl
rorl
dec
loope
xchg
shr
je
sub
inc
shr
sub
jl
es
inc
pop
add
sub
lods
sti
flds
mov
add
scas
ds
cs
push
call
xor
pop
pop
pop
jge
sub
fs
push
push
adc
pop
pop
out
dec
in
mov
inc
popa
test
mov
xlat
hlt
push
int3
add
adc
in
jge
loopne
or
sbb
lock
loope
push
push
inc
push
repz
lock
ljmp
repnz
dec
cld
sbb
push
test
mov
xor
mov
popa
or
sbb
xor
jg
inc
pop
ret
jae
sbb
adc
push
dec
xchg
inc
sysexit
xor
adc
adc
mov
mov
ds
lret
add
mov
cmp
sub
lods
stos
inc
sti
lods
jl
pop
repnz
daa
test
lods
fnstsw
pop
push
mov
call
sub
pminsw
fcmovnu
rorb
xchg
fwait
pusha
pushf
mov
and
call
fisubs
jmp
dec
insb
std
push
rorl
imul
mov
or
addr16
or
dec
push
cmp
movsb
cwtl
sbb
cmp
lcall
mov
jle
pop
outsb
inc
mov
or
test
int3
sahf
sub
rclb
test
call
mov
inc
and
fisttpl
jne
sbb
pop
ret
inc
jg
and
jbe
push
jbe
add
or
test
pop
and
movsl
cmp
inc
jbe
xchg
fwait
dec
call
jmp
subb
mov
test
inc
ljmp
cvtps2pi
push
sbb
xlat
mov
ds
jnp
xor
test
pop
xchg
aam
adc
pop
pop
repnz
rorl
ds
mov
mov
ret
ss
mov
sbb
test
mov
mov
leave
mov
mov
and
loope
pop
pop
inc
mov
stos
negb
pop
pop
mov
jecxz
adcl
push
negl
call
mov
inc
mov
and
cwtl
dec
inc
inc
mov
outsl
dec
pop
jno
orb
adc
mov
mov
inc
stos
cmpsb
push
adc
adc
ds
fistpl
in
repnz
push
push
push
stos
jp
js
sbb
and
mov
inc
mov
lock
int
inc
out
jnp
js
push
shrb
push
rcrl
pop
data16
std
pop
nop
mov
loop
xchg
icebp
hlt
enter
pop
popf
add
sub
pop
or
mov
jge
pop
orb
ret
cmp
iret
xchg
sahf
aad
inc
cmc
mov
xchg
mov
and
mov
lock
sbb
sti
hlt
push
ret
repnz
ss
mov
jle,pn
or
orl
inc
pusha
je
lock
inc
inc
lea
pushl
push
adc
arpl
mov
ds
mov
negl
sub
jecxz
fisttpl
add
xor
movl
push
sbb
inc
adc
cmp
or
sbb
test
outsb
mov
or
sub
ljmp
xor
push
or
std
adc
xchg
ret
or
ja
rcrl
mov
rclb
jle
outsb
xorl
jno
mov
scas
mov
es
xor
adc
cmpsb
sbb
js
ret
ret
rorb
roll
mov
out
lret
push
fdiv
push
lea
in
add
adc
shl
dec
jle
pop
cmp
cwtl
push
pop
pop
push
adc
mov
dec
call
ret
push
outsl
sbb
sbb
jno
movsl
dec
iret
cltd
pop
std
pop
movsl
sbb
and
cli
cli
sbb
jg
cmp
xor
mov
js
sti
loope
daa
cmp
adc
mov
and
inc
or
inc
rcr
jle
cli
shlb
rcrb
or
pop
sbb
push
and
or
pop
jo
mov
cmpsb
xchg
clc
dec
cli
sub
pop
xchg
pop
xor
and
push
inc
push
insb
mov
pop
push
loopne
jmp
ljmp
mov
or
cmp
jo
adc
inc
inc
jnp
xchg
scas
pusha
or
sub
fwait
mov
gs
pop
sbb
sub
inc
inc
pop
rorb
sub
mov
sar
push
lods
jge
pop
jb
rcr
mov
mov
movl
cwtl
enter
add
push
pushf
cmp
fdivrs
jg
xchg
inc
in
pushl
out
dec
sti
outsb
add
les
int
outsb
or
jecxz
push
outsl
xchg
or
int
sbb
mov
inc
xor
mov
testb
cmp
sarl
jo
sub
sbb
lcall
xchg
and
push
ljmp
mov
xchg
out
lret
pop
pop
push
jns
js
and
mov
loopne
inc
xchg
pop
adc
outsb
fidivs
rol
pop
dec
push
mov
hlt
xchg
mov
std
loop
sbb
or
ret
pop
jg
push
bound
inc
pushf
and
pop
cmp
and
stos
in
sub
lret
flds
pop
mov
sahf
test
inc
jge
aas
std
mov
nop
shll
xchg
mov
fcomps
xor
call
or
sub
sub
mov
aas
dec
std
cli
mov
xchg
int3
sbb
dec
lods
jne
and
enter
cs
adc
sub
mov
push
push
aas
mov
cltd
std
lock
sub
call
jecxz
repz
dec
dec
aas
mov
or
mov
cmp
rcrb
mov
mov
cmp
adc
or
push
call
loop
cs
cmp
inc
popa
mov
mov
or
add
push
inc
andb
loope
or
adc
push
sbb
sbb
mov
jb
pop
clc
popa
or
sbbl
notl
inc
testb
fsubrl
mov
nop
xor
into
out
sbb
or
fcmovnu
xchg
push
stos
rolb
test
imul
pop
mov
ds
lea
sbb
out
orl
jp
popf
jle
ja
sbb
fiadds
cwtl
js
loopne
lock
jge
mov
jle
fistpl
lock
dec
cmp
pop
jnp
add
outsb
mov
mov
pushl
xchg
mov
mov
cli
or
outsb
mov
lea
ljmp
push
dec
jle
add
popf
movsl
push
lods
sahf
mov
mov
mov
or
jg
imul
cmp
fwait
out
in
popa
test
shrb
js
scas
or
ret
in
sub
push
dec
sbb
icebp
call
push
in
mov
daa
add
mov
ds
sbb
mov
add
and
addr16
jecxz
pop
scas
and
lock
xor
mov
stos
inc
cwtl
mov
jbe
cmp
push
in
loopne
pop
add
sub
inc
cs
fld
idivl
test
mov
sbb
aaa
mov
add
scas
inc
mov
andl
test
dec
pop
and
cmp
movsb
ljmp
xchg
mov
push
inc
xchg
push
movsb
dec
push
aam
les
ror
loope
xchg
aad
sbb
or
push
ja
mov
xchg
push
xor
add
xor
test
mov
or
cmp
and
jl
cmp
fidivrs
pop
jp
cli
call
inc
ret
xchg
ds
addl
push
ret
fstpt
inc
pop
xor
sub
xchg
pushf
pop
insl
call
push
int3
dec
into
lcall
inc
jge
push
imul
push
orb
push
lret
mov
xchg
lds
cmp
and
adcb
sub
xor
mov
xchg
or
in
int3
pushf
push
cmpsl
addb
inc
fs
stc
inc
jecxz
fcmove
dec
jns
mov
jge
cmp
stos
insl
fs
dec
cmpsl
shlb
jp
lret
sub
xchg
add
cmp
sti
loop
or
idivb
outsl
pop
xorb
jno
cmc
and
nop
mov
or
ret
or
or
xchg
dec
pop
icebp
add
pop
mov
sub
fdivrs
lock
sbb
pop
jl
cltd
pop
jge
cmp
xor
test
sarb
insb
pop
jo
add
mov
jmp
xor
jnp
dec
mov
xchg
cmpsl
push
dec
pop
add
cmp
inc
lcall
int
or
mov
call
dec
xchg
lods
pop
mov
jno
mov
iret
mov
adc
in
push
sbb
sbb
xchg
jne
jb
adc
fisubrs
int3
add
push
sbb
out
out
cmp
sbb
xor
dec
push
xchg
arpl
adc
das
in
inc
xchg
sbb
jp
mov
sbb
lds
dec
adc
add
sub
dec
dec
sub
mov
movsb
or
stos
lahf
int3
ljmp
adc
scas
mov
call
sti
bound
negb
hlt
sti
call
or
cld
push
mov
push
hlt
mov
pushl
insb
sub
jmp
cmp
cs
cwtl
aad
ret
stos
sub
mov
insl
ljmp
int3
and
loop
xor
push
icebp
pop
sbb
out
and
or
adc
push
or
mov
mov
push
and
clc
add
push
xchg
cmp
add
and
or
aas
sub
outsb
pusha
xor
mov
lds
into
into
mov
mov
push
xor
sub
xlat
inc
pop
scas
popa
cli
test
icebp
repnz
movsl
push
sbb
arpl
shrl
pop
es
into
mov
dec
jmp
sti
es
gs
add
sbbb
cmp
pushf
push
and
rolb
or
cmpsl
mov
repz
ja
into
icebp
mov
push
add
outsl
movsb
and
and
pushf
sub
pusha
push
cli
adc
ds
aaa
or
std
cwtl
in
sbb
adc
add
das
js
push
xchg
shll
jnp
js
mov
and
mov
pushf
aaa
pusha
ret
je
fistps
xor
mov
xchg
ret
sub
adc
rep
cwtl
xchg
or
out
mov
mov
bnd
loopne
add
or
ret
sub
xor
sbb
adc
inc
mov
mov
aas
xchg
mov
clc
push
pop
and
jno
fsubl
adc
pop
cmc
std
adcl
lea
push
mov
pushf
inc
out
movsb
push
pusha
cmc
xchg
pop
in
or
incl
xchg
lcall
push
sarb
jle
arpl
aad
push
or
mov
call
cmp
or
jo
pop
mov
mov
and
fadds
xor
xor
movsb
movsl
or
loop
movsl
sub
jle
xor
mov
push
in
mov
jae
and
lods
dec
push
mov
pop
jge
rorb
sbb
adc
je
jg
mov
sbb
inc
test
push
add
rorl
out
dec
outsb
add
dec
ljmp
stc
mov
sbb
mov
adc
loop
repnz
ja
jge
sbb
movsb
mov
mov
pop
push
aaa
cld
and
inc
inc
pop
push
xchg
aas
mov
sbb
xchg
dec
fwait
daa
popa
add
inc
and
add
or
dec
scas
bound
cmp
clc
lds
mov
sarl
or
das
mov
mov
dec
adc
and
insb
aam
lock
mov
lea
and
dec
cs
dec
adc
adc
push
sub
cwtl
je
jo
jecxz
out
popf
xchg
mov
lea
bound
jp
mov
jns
cmpsl
adc
or
lock
pop
sub
jns
lock
cmpsb
push
add
xor
addb
pop
adc
mov
or
imul
or
test
ret
mov
cwtl
cmp
dec
es
test
es
std
add
pop
gs
insl
dec
push
out
jp
sti
lahf
repz
xchg
std
int3
mov
mov
aaa
mov
push
jl
sub
fisttps
cmp
icebp
jg
fs
mov
mov
in
mov
shll
push
js
gs
push
jbe
mov
and
pop
push
lock
or
cli
or
cmc
xor
fnstcw
add
lcall
daa
push
aas
jmp
outsl
daa
push
mov
xor
mov
jmp
adc
or
and
mov
cmpsl
push
hlt
push
clc
and
mov
inc
jb
movsb
shl
pop
or
or
lret
jp
add
xchg
or
lahf
andl
movsl
push
jo
cmp
xor
add
dec
pusha
add
ljmp
sti
jp
fldl
sbb
cmpsl
mov
push
test
sub
fs
rcrb
sub
sub
sub
mov
rclb
push
call
je
jne
add
pushl
lods
js
cmp
aaa
jle
add
hlt
pop
xor
jl
aas
mov
lock
mov
out
lahf
clc
stos
das
call
ds
js
sub
push
ss
mov
hlt
dec
pop
lahf
loopne
cli
mov
mov
icebp
data16
stc
lock
sub
imul
pusha
mov
mov
pop
fcmovu
out
fwait
call
jp
sbb
mov
adc
shlb
push
pop
clc
lahf
stc
or
cmpb
lods
cs
jmp
scas
sub
or
push
and
push
add
outsb
pop
xor
je
sub
pop
daa
insb
clc
hlt
inc
xor
lcall
cmc
adc
adc
jge
or
inc
adc
fsub
loop
add
addr16
push
imul
xor
stos
and
jle
push
aas
dec
dec
jecxz
or
clc
popf
dec
adc
mov
adc
movsl
std
stos
jnp
sbbl
xchg
ljmp
jg
into
xchg
test
and
and
pop
or
or
std
mov
icebp
push
cmp
adc
out
and
cmc
and
add
cld
lock
jecxz
jecxz
cmp
pop
nop
shl
sub
testl
push
adc
dec
push
or
jl
cmpsl
pop
sub
push
push
pop
add
jno
xor
paddsb
adcb
cmp
jbe
shll
mov
popf
xchg
adc
pushf
xor
jle
push
sub
sub
outsl
cld
cld
shlb
xor
clc
imul
or
inc
or
lods
adc
test
iret
insb
cmp
lock
data16
ljmp
and
data16
mov
xlat
add
inc
jg
rcrb
sar
jge
push
xor
push
add
adc
jecxz
jae
pusha
xor
mov
ljmp
mov
std
and
iret
lcall
xchg
hlt
loop
mov
mov
xor
dec
pusha
adc
shrl
ficoms
cwtl
movsb
in
cwtl
sahf
rolb
js
mov
push
pop
shlb
negl
add
push
inc
lds
add
push
in
hlt
xor
dec
arpl
and
aas
inc
cmp
sbb
dec
dec
cmpsl
jmp
inc
sbb
jl
push
sbb
lret
js
pop
sub
movsb
sbb
mov
mov
mov
jnp
fisubrs
je
es
out
stc
inc
push
pop
mov
addl
cmp
dec
jmp
sub
mov
mov
leave
ja
xor
jb
mov
mov
lock
inc
mov
jg
xor
repz
lcall
hlt
fldcw
push
xchg
and
sti
subb
out
pop
outsb
lret
ret
pop
les
dec
pushf
push
mov
loope
sub
jb
aas
test
xchg
cs
das
out
jp
xchg
sub
nop
mov
dec
jb
mov
inc
cmpsl
pop
inc
add
inc
mov
loopne
push
inc
lods
add
push
sbb
in
add
jg
mov
rclb
loop
cli
movsl
sub
sbb
mov
inc
xor
pushf
push
test
lods
or
cmp
les
in
inc
into
ljmp
xchg
add
dec
adc
jo
xor
dec
add
pop
add
call
ret
push
push
push
icebp
fcomip
mov
push
test
fiadds
in
into
sbb
xor
or
or
jbe
mov
sbb
inc
pop
push
sub
outsl
xchg
lea
xchg
xor
shl
xor
fidivrl
pop
cltd
mov
hlt
divb
mov
push
popl
lea
sahf
into
test
adc
adc
push
xabort
pop
test
ljmp
das
test
cli
in
js
subb
or
jmp
xchg
push
mov
hlt
shlb
in
bswap
decl
xor
out
nop
jb
and
jg
ss
pop
call
addr16
xchg
clc
ja
dec
cmpsl
mov
or
icebp
rcr
jae
ljmp
ljmp
adc
cmp
mov
push
sbb
mov
lods
fisubrs
insl
cmpb
push
ljmp
das
jae
popf
inc
pusha
decw
fs
out
or
popf
mov
or
insb
push
sbb
or
outsl
mov
add
call
cmp
xor
or
sbb
addr16
push
mov
xlat
adc
and
sub
lahf
js
mov
mov
clc
inc
insb
ficoms
cmpsb
neg
cli
movsb
cmpsl
pop
in
lret
lock
pop
mov
or
dec
jo
movsb
es
sbb
dec
adc
dec
out
pop
outsl
icebp
je
cmp
mov
sub
cld
mov
outsb
imul
mov
fdivs
notb
out
xchg
or
add
in
mov
jbe
aaa
adc
lock
add
sti
mov
mov
aam
add
and
out
mov
into
idivb
add
inc
cltd
cmp
pusha
test
mov
adcb
xor
xchg
jl
jmp
mov
jle
or
arpl
je
xor
outsb
inc
fstps
lock
inc
loope
mov
and
xorl
outsl
adc
ljmp
cmp
jecxz
bndstx
mov
push
cs
cli
lret
rolb
movsb
in
test
and
enter
fcomps
and
dec
bound
mov
push
lahf
addl
xchg
and
pushf
dec
xor
icebp
testb
out
xchg
negl
and
les
sub
pushf
xchg
popf
inc
push
push
ficoml
mov
sub
rolb
cmp
jg
scas
insb
mov
repz
dec
push
clc
pop
pop
stos
jg
test
scas
es
sub
lea
or
rolb
in
inc
lret
or
lods
in
dec
xchg
jp
add
sbb
cmp
or
jbe
lods
mov
push
pop
loopne
clc
inc
mov
mov
or
pop
mov
pusha
mov
jl
rcll
sbb
enter
cmp
dec
push
inc
imul
push
mov
or
es
adc
add
lret
xchg
add
mov
inc
insl
mov
jo
loopne
push
inc
imul
mov
add
lret
jmp
dec
insb
out
in
and
and
ficompl
pop
jle
xchg
jcxz
clc
xchg
clc
mov
push
popf
les
aad
mov
repz
xor
pop
mov
movb
mov
add
adc
scas
int3
pushf
in
sub
mov
and
inc
out
or
dec
ljmp
xor
xchg
movsb
cmpsb
inc
dec
data16
arpl
cltd
push
cmp
push
push
mov
int3
adc
pop
dec
add
pushl
in
inc
hlt
int
xchg
jle
jbe
jo
push
jbe
or
jae
mov
aas
mov
mov
in
nop
jecxz
loope
dec
adc
and
sub
and
int
sub
movd
pop
xor
pop
mov
shrb
sti
pop
jmp
push
popw
lahf
jae
add
out
inc
adc
in
lods
scas
jge
sub
adc
mov
cwtl
push
and
and
mov
insb
pop
out
fnsave
pop
cld
mov
addr16
jb
int3
add
sub
mov
ret
lahf
jb
mov
ret
orb
fdivrp
push
sub
mov
xchg
imul
pop
pop
aas
push
push
mov
mov
sub
inc
dec
fiaddl
ljmp
cmpsl
inc
inc
ja
sub
or
call
push
hlt
dec
adc
daa
mov
cld
mov
loope
jae
and
pusha
movsl
sub
rol
stc
imul
mov
ds
divl
loop
sub
mov
cs
mov
xchg
lock
and
mov
adc
ss
jne
cmpsl
sub
aad
jo
inc
repz
dec
test
sub
fisubl
jo
mov
pop
rorb
sar
cmc
xor
sahf
mov
icebp
xchg
loopne
outsl
add
sbb
ljmp
test
les
xchg
inc
shl
mov
movsb
jle
dec
aaa
lods
test
xor
xchg
ds
testb
test
test
cltd
sub
xor
rolb
out
push
adc
inc
xor
push
sub
lahf
jo
icebp
idivl
push
mov
lock
jmp
inc
and
add
xor
mov
fwait
mov
cmc
dec
push
xor
inc
ja
mov
sbb
rcll
pop
sbb
jecxz
xchg
arpl
mov
jle
movsl
add
push
insl
sub
in
fdivr
pop
enter
mov
jmp
adc
ljmp
adc
or
cwtl
dec
add
rol
dec
lea
mov
adc
aad
push
nop
cmpsb
ja
mov
push
cld
sub
inc
movsb
je
arpl
sahf
or
je
out
je
or
cmpsb
push
ret
iret
sahf
dec
mov
dec
scas
adc
or
jp
mov
shll
add
into
and
adc
cltd
sarb
and
shlb
andb
sbb
hlt
mov
sub
clc
mov
mov
mov
adc
mov
sub
sbb
push
mov
iret
mov
jecxz
loopne
lds
pop
add
ret
jle
push
or
inc
ficomps
and
pop
mov
push
xor
dec
jo
xor
cmp
mov
jo
mov
or
xchg
sahf
adc
js
adc
pop
mov
fs
pop
mov
mov
loop
je
into
push
or
lea
pop
dec
pop
sbb
inc
ret
pop
in
pop
push
je
ja
push
mov
cmp
push
decb
dec
scas
loopne
scas
mov
sbb
jno
cs
lret
lret
sarb
mov
stos
sarb
andb
inc
enter
add
cmpsl
jl
jp
xchg
push
cwtl
cmp
fstps
push
push
icebp
mov
sub
in
inc
inc
sbb
les
sbb
xchg
test
pop
dec
faddp
ds
push
jbe
mov
std
repnz
inc
sub
pop
mov
sub
push
ret
loop
testb
dec
ss
or
scas
cli
or
lcall
cmpsl
in
outsb
ss
popa
pop
lahf
dec
int3
mov
sti
xchg
std
ret
dec
sarl
cwtl
pop
jmp
push
es
mov
stos
inc
push
cmp
mov
xchg
push
icebp
repz
adc
lock
mov
push
insb
adc
movhps
jnp
ds
jmp
mov
mov
jno,pt
lcall
adc
ja
mov
add
iret
add
sar
xlat
fcmovb
sub
adc
hlt
xchg
decb
mov
jne
pop
and
and
cwtl
mov
lock
xlat
test
cli
das
test
or
test
out
jbe
rorb
or
inc
xor
fucom
shlb
pop
xor
ljmp
xchg
cmp
adc
out
cmp
push
inc
lods
pop
push
movsl
add
clc
orl
iret
jle
das
enter
cmp
or
cli
ret
xchg
js
add
mov
iret
mov
add
andb
nop
cmp
negb
pop
es
sbb
sbb
test
sub
ss
jp
mov
dec
and
mov
nop
in
mov
mov
sbb
add
add
mov
inc
push
ror
mov
cmc
js
movsb
dec
aam
insb
dec
mov
adc
dec
mov
cld
imul
pop
addl
test
sub
cwtl
or
aaa
es
and
shlb
pop
cmpsb
rolb
loop
daa
cmc
xchg
jg
mov
stos
jl
shlb
scas
jg
sbb
xchg
pusha
xchg
lcall
fwait
jae
pop
xchg
xchg
insl
jo
shlb
iret
test
cld
xchg
sub
sbbl
loopne
push
jg
xlat
sub
stos
into
and
xchg
cmc
add
xor
sbb
xchg
xor
xchg
hlt
dec
or
and
cmpsl
decb
xor
dec
mov
call
loop
hlt
pop
in
out
icebp
adc
divl
sbb
sbb
push
je
cmp
mov
inc
cli
adc
adc
sbb
add
xor
iret
movsb
movsb
mov
inc
pop
jbe
cmpsl
xchg
inc
mov
mov
orb
cmp
rol
sbb
int3
rcrl
adc
xlat
imul
or
sub
mov
adc
in
jmp
lods
push
add
inc
sbb
fwait
pop
dec
adc
out
outsl
fst
xor
inc
mov
in
call
sub
data16
or
jle
and
fldcw
push
cmpsb
xor
cmpsb
pop
pusha
loop
add
sbb
pop
mov
mov
sbb
add
sbb
sub
mov
aas
adc
adc
or
scas
fwait
xorl
inc
fisttpll
lea
adc
mov
sti
sbb
xor
jp
xchg
test
js
fcmovnbe
ret
fcoms
pop
and
xchg
stos
rcrb
cltd
and
pusha
add
push
scas
or
rolb
xchg
sbb
imul
int3
aaa
sar
push
jae
icebp
mov
push
cmpsb
icebp
test
dec
adc
sbb
loopne
jne
xor
adc
sub
jg
pop
aaa
enter
add
mov
sub
jl
in
push
or
das
pop
jp,pn
pop
subb
arpl
test
adc
sub
repz
xchg
data16
lds
cmp
or
inc
mov
push
je
sub
fstps
movsb
ljmp
sbb
adc
ja
mov
adc
mov
or
or
pop
mov
aad
loopne
std
fdivs
sbb
test
mov
out
in
in
lods
dec
js
sbb
pop
fwait
mov
jmp
imul
and
shll
aad
cld
adc
cmp
cmpsl
inc
or
push
lret
push
adcl
sahf
sub
push
sbb
mulb
call
inc
mov
add
jno
dec
shrb
int3
cmc
call
rclb
rcrl
in
jae
push
or
popa
out
ss
add
mov
adc
cli
addl
mov
push
ja
push
jo
mov
sub
jbe
xchg
pop
xlat
loopne
pop
shlb
ret
imul
cli
add
lods
sbb
jnp
mov
sub
cmp
dec
data16
mov
rcll
subl
push
data16
mov
loop
push
jge
popa
add
js
rorb
adc
hlt
icebp
rolb
mov
push
repz
in
push
inc
lea
ljmp
loopne
jb
dec
add
pop
mov
mov
sbb
jo
je
inc
sbb
adc
out
clc
or
push
cmp
sub
xor
lcall
adc
cmp
in
mov
sbb
mov
jp
inc
jmp
dec
aad
adc
pop
or
push
addb
mov
imul
repnz
outsb
jg
test
and
cwtl
inc
fimuls
pop
sbb
adc
push
imul
out
outsb
or
cmp
dec
ret
dec
into
es
pop
aas
movsl
mov
jecxz
in
fistpl
pop
mov
mov
sahf
pusha
sub
rcrb
test
test
dec
sub
inc
je
or
pop
jle
js
les
push
lods
test
test
test
dec
jecxz
or
push
add
inc
xor
arpl
out
movsb
push
or
adc
xor
sbb
pop
inc
adc
pop
andl
stos
js
xchg
vzeroupper
cwtl
call
outsl
jns
in
jae
arpl
mov
cli
dec
push
rolb
out
sbb
outsl
pop
add
pop
push
adc
dec
pop
mov
sbb
cld
pop
dec
jp
jns
das
inc
push
idivl
sub
ljmp
dec
shr
jg
clc
mov
mov
and
or
jg
pop
scas
faddp
loope
ljmp
mov
mov
cli
das
xchg
insb
jl
sbb
jp
cli
test
std
or
xor
pusha
icebp
jno
hlt
jb
jmp
mov
les
jg
es
js
repz
mov
shll
pop
insb
cmp
cwtl
pushf
mov
mov
adc
scas
push
ret
shrd
aad
jno
enter
and
fs
test
lds
insb
lcall
xchg
outsb
xor
mov
dec
sahf
scas
addb
sbb
dec
cwtl
xchg
push
out
sahf
inc
mov
and
pop
sub
dec
sar
orb
cs
test
mov
push
psrlw
aad
sbb
xchg
jl
add
adc
mov
and
sbb
and
out
iret
lcall
mov
inc
push
jmp
fs
dec
dec
dec
jo
push
sbb
in
aam
jl
jl
outsb
sbb
add
and
pusha
fimull
mov
push
lock
jns
xor
xor
pop
sbb
xchg
je
sahf
jl
push
fiaddl
mov
jne
test
adc
lea
xor
test
sti
jge
pop
bound
and
mov
sbb
xchg
arpl
add
outsb
adc
and
arpl
push
test
pop
push
inc
outsl
gs
jg
icebp
push
add
fistpll
inc
dec
rorb
jb
xchg
int
in
lret
cmp
pop
or
sub
xchg
push
mov
pushf
mov
mov
pop
rcrl
cwtl
jo
lret
test
cli
and
mov
and
adc
xchg
xor
push
test
xchg
jae
pop
pop
pop
dec
nop
adc
ljmp
inc
cmp
in
sbb
mov
xor
mov
mov
mov
mull
and
inc
push
jno
test
bound
shr
push
pop
mulb
mov
mov
out
mov
pop
mov
mov
into
daa
sub
clc
push
xchg
adc
into
dec
pop
push
in
scas
mov
cmp
lahf
test
xchg
pop
add
rorl
lods
loopne
jmp
jo
loopne
pop
pop
pop
add
outsl
loop
incb
jmp
cmpsl
ss
mov
xor
mov
pop
adc
aad
mov
push
test
decl
xchg
push
add
scas
stos
rclb
xchg
add
fst
pop
lcall
or
je
jmp
adc
loopne
addl
nop
push
in
add
add
ja
mov
xor
mov
mov
lret
in
lahf
jne
stc
push
jmp
cmpsl
mov
pop
mov
xchg
pop
cltd
movsl
mov
pushf
ret
jp
std
add
mov
add
or
jno
dec
ja
add
fadd
push
shlb
test
mov
mov
cmpsb
aas
in
xchg
outsb
xor
lahf
cltd
jne
stos
fsubrl
mov
cs
inc
stos
jp
pusha
pop
jecxz
loopne
repnz
cwtl
adc
fwait
sub
pop
cmc
mov
mov
in
fdivs
sub
notl
push
stos
cmpsb
scas
in
or
sub
clc
mov
movsl
pop
sub
add
cmp
pushf
data16
lock
jl
popl
ror
mov
dec
ret
inc
cmp
xor
fisttpll
cmp
adc
push
sbb
jecxz
xor
push
jl
push
repz
push
pop
sub
cmp
pop
xchg
lock
les
push
jae
je
mov
jp
cli
dec
push
xchg
push
insl
lds
cld
aam
lcall
rol
negl
dec
clc
add
pop
lods
daa
or
call
mov
call
scas
mov
xchg
repz
lods
xchg
inc
jb
inc
dec
hlt
pop
inc
clc
inc
sub
dec
mov
cmp
sub
fimull
and
dec
sbb
or
jnp
xchg
adc
or
cmp
nop
loope
and
loopne
shrb
cmpsl
push
dec
adcb
mov
in
push
adc
cli
pop
cltd
cmp
mov
rol
push
push
push
aaa
pop
scas
push
xor
popa
sbb
or
ret
mov
stos
stc
popf
fisubrs
sub
inc
icebp
jnp
lock
mov
sbb
pop
mov
cmp
lret
or
mov
pop
in
mov
loope
pushw
or
push
test
adc
add
adc
pushf
fldt
lock
cmp
cmp
in
sub
and
cwtl
dec
adc
xchg
inc
repz
pop
or
sahf
in
cltd
into
sti
pop
adc
aam
mov
rcrb
pop
inc
mov
js
add
int3
hlt
mov
sbb
adc
aad
fnstsw
and
mov
es
add
and
lock
jb
test
dec
sub
fs
jecxz
ret
sub
or
sub
das
mov
push
jmp
outsl
sbb
push
adc
andb
xchg
mov
inc
ret
rcl
and
sbb
or
jecxz
and
xor
rclb
js
mov
add
std
in
jle
xor
js
mov
add
jg
pop
outsl
gs
in
jmp
pop
out
push
outsl
dec
nop
jl
xchg
jg,pn
cmp
subb
mov
pop
loope
loopne
test
mov
js
cmp
idiv
xor
mov
add
inc
fistl
or
push
jne
jnp
xchg
lret
rolb
pushf
inc
and
cmpl
pop
clc
and
inc
sbb
adc
call
repnz
incl
sub
sub
or
clc
jl
adc
jg
dec
inc
lds
in
popf
xor
js
add
xchg
in
jmp
cmp
fwait
jnp
or
xchg
mov
jle
clc
clc
addr16
sub
call
outsb
pop
pop
jo
mov
orl
push
jmp
sarb
or
xchg
or
int3
orl
sbb
sbb
jne
test
pop
adc
jno
inc
jne
cmc
xchg
mov
mov
in
mov
cmpsl
mov
outsb
dec
push
js
fldenv
mov
mov
or
js
push
inc
ret
sarb
icebp
shlb
sub
lahf
cmp
add
and
or
mov
shr
neg
adc
fmuls
jne
incb
xchg
mov
cmpsb
loop
jo
or
js
icebp
push
mov
out
sbb
push
sub
mov
or
inc
dec
jmp
in
mov
push
mov
loopne
fwait
mov
mov
sbbl
clc
xchg
scas
roll
lret
and
adc
xchg
mov
xor
je
mov
ss
jecxz
insl
dec
sub
xor
push
subl
inc
pop
into
cmpsb
les
hlt
adc
ja
orl
xchg
mov
xchg
mov
lcall
sub
sti
xor
push
std
imul
jno
inc
test
mov
movsb
mov
push
ret
into
loopne
test
hlt
dec
fsubr
shl
cwtl
mov
jmp
mov
add
jg
dec
pop
cltd
inc
cmp
pusha
xor
adc
rcl
jbe
xor
je
les
lea
imulb
cli
cmp
adc
outsb
outsl
dec
and
jecxz
mov
sub
mov
and
das
jmp
dec
adc
or
inc
or
push
cmovs
push
inc
outsl
dec
dec
pop
mov
enter
fucomi
mov
jb
pusha
lock
inc
jae
sub
jp
add
cltd
mov
add
inc
jg
push
push
adc
mov
push
lcall
icebp
test
jne
popa
out
loope
cmp
add
das
push
or
mov
and
inc
push
cmp
cmp
xorl
push
mov
mov
cmp
inc
mov
cld
pusha
std
lahf
daa
and
sbb
icebp
popa
jecxz,pt
push
push
das
test
in
stc
subb
pop
ja
mov
xchg
ss
adc
aaa
sti
pop
dec
dec
mov
cld
call
insb
fcmovnu
push
xchg
dec
mov
lret
stos
lret
popf
mov
sbb
mov
fwait
lea
int3
sbb
mov
jp
fs
shlb
sbb
and
and
jno
push
xchg
enter
ret
ret
pop
and
psllq
and
push
fisubs
out
adc
or
sbb
fiaddl
jecxz
sub
xchg
lahf
pushf
aam
push
adcl
jp
icebp
fstpt
movsl
push
sbb
cmp
and
push
push
pop
mov
push
enter
iret
push
cmpsb
dec
sub
fdivp
daa
push
push
xchg
into
xor
imul
sbb
dec
aaa
pop
adc
fdivrp
ja
push
jecxz
push
sbb
int3
jl
popa
sbb
push
or
push
fidivrs
or
and
ja
repz
lret
and
jb
cmp
cmp
cmpsb
fcoms
sahf
and
cwtl
dec
xor
mov
jp
mov
xor
jge
inc
mov
mul
repz
cmpsl
pushf
iret
aam
pop
lret
cwtl
out
or
cwtl
mov
and
aas
cmp
cmc
into
pop
inc
ljmp
or
imul
or
inc
dec
or
rclb
mov
pop
sub
orb
lret
int3
in
mov
jo
sub
sub
dec
cwtl
je
xor
scas
sbb
jge
jne
or
xor
sub
jno
cmp
adc
les
lock
aaa
test
vcmppd
mov
add
outsb
call
sbb
pop
mov
mov
add
leave
repz
fldenv
adc
push
cmpsb
inc
cmp
xor
mov
pop
jmp
inc
pusha
xchg
or
out
les
mov
xchg
insb
or
inc
adc
cltd
xchg
mov
jle
hlt
adc
clc
jl
or
add
loopne
fsubl
in
rcr
mov
inc
fadd
push
das
adc
or
popa
inc
loopne
mov
icebp
sbb
aas
pop
sbb
std
sub
fs
mov
dec
loopne
cs
jg
lret
mov
jge
adc
xor
cli
sbb
mov
and
add
lahf
cli
fiaddl
lcall
or
add
adc
inc
daa
jle
popf
lock
sbb
aas
cwtl
jmp
fcmovnb
or
add
pop
push
fwait
dec
push
xchg
add
nop
lcall
mov
add
test
mov
mov
lds
inc
dec
repz
add
inc
cmp
mov
cltd
or
aaa
push
xchg
jae
ja
pop
mul
jle
call
mov
fcoml
xlat
jp
cmp
lahf
push
and
incb
push
movb
subb
pop
int3
adc
dec
ret
and
inc
cmp
jl
and
push
int
pusha
or
adc
test
into
add
jnp
js
insb
inc
or
push
daa
jl
add
mov
ljmp
js
lea
loope
adc
dec
mov
es
clc
je
push
ret
pop
outsb
outsl
mov
loope
cltd
cmp
dec
xorl
shl
jmp
dec
add
addr16
test
adc
or
xchg
mov
add
iret
push
jl
iret
addb
push
sbb
sub
aaa
lret
mov
or
call
or
sbb
aas
mov
rcrb
call
dec
inc
inc
push
and
das
add
imul
mov
jp
fwait
mov
in
add
mov
pop
lahf
in
sbb
inc
movb
mov
adcl
inc
dec
mov
xor
pop
mov
mov
addl
add
test
repz
jp
mov
das
and
cltd
fstpl
sub
js
jae
push
mov
lds
pop
cli
jecxz
jg
inc
adc
push
gs
and
and
add
adc
xchg
ss
adc
xchg
scas
adc
inc
in
add
mov
insl
mov
aaa
push
aaa
test
jl
and
cmp
fsubl
push
xchg
sbb
push
out
and
lea
jmp
push
xchg
push
add
fdivr
int
rclb
mov
xchg
cmp
js
mov
inc
cli
das
frstor
sbb
ret
or
fwait
dec
roll
inc
xchg
ds
add
pusha
push
ljmp
jb
aam
mov
pop
shlb
or
sub
data16
adc
call
lea
push
cmp
fs
or
shrb
adc
mov
push
inc
jmp
pop
and
dec
insb
adc
ret
inc
mov
push
je
pop
jmp
pop
adc
pop
inc
jae
das
aad
and
loop
nop
pushf
push
sub
adc
inc
dec
rolb
push
in
or
outsb
lahf
cmp
and
pop
imul
jne
lret
jmp
cmpsb
push
xor
cmp
gs
aad
add
je
dec
test
push
add
add
cmp
adc
mov
push
negb
lahf
adc
inc
push
repnz
insl
mov
mov
lahf
icebp
sbb
xchg
push
scas
inc
hlt
sub
hlt
inc
cmp
jo
jmp
push
loopne
or
psrld
or
fcompl
ret
cmp
pop
rcrb
test
insl
pop
dec
inc
mov
cmp
loope
mov
or
pop
pop
outsl
clc
sbb
aas
inc
lahf
dec
pop
mov
cltd
pop
xchg
in
fprem
adc
inc
mov
pop
roll
and
lahf
fcoms
pop
mov
call
pop
mov
sbb
loop
je
lock
je
dec
nop
pop
or
in
in
mov
and
add
ss
dec
imul
mov
out
cli
add
cmp
xchg
dec
pop
sub
fisttpll
dec
ljmp
inc
pop
fistps
sub
add
mov
dec
flds
add
cli
movsb
push
push
lcall
and
adc
xchg
cmp
nop
adc
fwait
and
and
pop
inc
pop
inc
jne
mov
mov
inc
cmp
jbe
movb
das
dec
sub
jne
gs
test
gs
jnp
jl
and
imulb
je
mov
mov
xor
xchg
cmc
stos
push
lea
or
add
popa
mov
sbb
iret
pop
movsl
push
js
mov
adc
adc
fildl
push
jl
pop
dec
cli
xor
out
sbb
pop
jmp
dec
sbb
and
or
lods
rclb
or
aas
lods
cld
mov
cmpb
push
xchg
test
adc
mov
or
rorb
icebp
rorb
jle
xchg
jbe
insb
lods
xchg
xor
mov
rcrl
inc
js
popa
lahf
aad
or
fmull
inc
sub
cmp
cmp
movsl
pop
push
inc
and
push
sub
push
dec
pop
inc
cli
sub
xchg
adc
or
push
xchg
shlb
mov
add
push
push
add
ret
push
or
daa
shrl
mov
xchg
scas
cmp
dec
lcall
push
jge
hlt
xor
or
pop
in
psubd
outsl
cld
je
bound
adc
fmull
mov
and
clc
inc
xor
fs
cmpsb
call
mov
mov
xor
mov
xchg
dec
jbe
dec
in
xchg
mov
adcl
mov
das
sahf
mov
sub
mov
jne
xor
cmp
rorl
gs
xor
xor
int
test
pushf
outsl
push
and
mov
fdivrp
xor
jnp
jno
xchg
add
into
cmpl
imul
xchg
fisubs
sbb
ss
movsl
stos
int3
inc
sbb
push
ret
movsl
loop
cmc
inc
xchg
dec
inc
sub
adc
mov
aad
dec
insb
adc
scas
jge
lea
popa
sub
add
xlat
call
cmc
adc
push
jl
mov
push
data16
dec
or
aas
scas
pop
imul
push
iret
icebp
addb
rol
mov
mov
xchg
push
lock
sub
add
les
xor
or
push
adc
movsb
lock
leave
add
stos
inc
mov
pop
push
jo
sarb
loop
jmp
mov
push
jbe
movsb
jne
add
fadd
mov
push
in
dec
inc
cli
ds
add
ret
sub
outsb
aas
push
push
pop
sarb
sahf
clc
cmp
jmp
pop
in
sbb
cmpsl
jg
inc
mov
popa
jg
jno
mov
popf
ficompl
sub
add
or
sahf
lret
sbb
add
mov
das
add
mov
mov
pop
mov
push
dec
and
lret
loop,pt
mov
lods
push
arpl
push
push
xchg
flds
mov
jmp
pop
add
sbb
xchg
jge
inc
sbb
sbb
or
mov
ja
adc
in
jae
inc
popa
dec
shlb
pop
push
xchg
loopne
mov
jno
mov
repnz
xor
or
fsubrs
sub
sti
cwtl
xlat
lret
fistpll
int3
fistpll
into
xor
push
fsub
adc
push
adc
adc
jle
js
push
and
jnp
pop
outsl
inc
rcrl
aad
into
in
cmpl
loopne
les
xchg
mov
xor
les
inc
mov
dec
icebp
fcmovb
cmpsb
pop
xor
fcompl
push
jmp
cmp
notb
and
sub
clc
mov
pusha
je
dec
sub
rol
xor
pop
inc
inc
lcall
sbb
add
addb
inc
dec
divps
inc
cmp
push
aam
iret
xchg
das
fmuls
mov
push
stos
addr16
push
or
icebp
xor
mov
inc
dec
mov
mov
jl
popa
xchg
xchg
add
dec
mov
mov
inc
sub
movsb
inc
xor
sub
jne
mov
outsb
movsl
jo
cmp
mov
and
push
movb
xor
test
test
daa
adc
cmp
dec
ret
dec
cmpsl
jno
sub
or
icebp
lea
mov
xor
sub
jg
out
jg
and
dec
insl
movsl
or
lock
cmp
adc
xchg
into
jb
push
or
xchg
aam
xor
pop
pop
test
lods
xchg
icebp
jecxz
inc
xchg
push
jae
enter
sbb
and
iret
xor
jne
lret
testb
xlat
movsb
gs
sub
push
mov
xor
dec
in
xor
add
ja
loopne
rorb
mov
movsb
push
les
popf
dec
mov
sub
lea
lret
xor
xchg
hlt
fs
xor
or
faddl
dec
sub
ljmp
aam
ficompl
adc
sbb
sbb
sbb
cmp
jp
outsb
push
jge
fiadds
pop
mov
data16
in
bnd
ret
call
ss
test
lret
adc
enter
imul
fmull
or
inc
sahf
mov
lret
cmp
ds
push
mov
fwait
dec
push
je
pop
shrb
mov
mov
pop
dec
pop
dec
sti
push
aad
push
inc
lds
and
adc
adc
test
lcall
test
mov
mov
pop
mov
gs
lret
dec
push
mov
outsb
adc
lock
imul
fstl
add
sub
dec
and
xor
aad
lods
out
sub
xchg
add
mov
sub
add
pop
mov
mov
pop
or
cmp
add
pop
dec
lret
mov
ja
jl
jmp
jmp
jg
filds
lahf
cmp
cwtl
mov
fadds
aas
hlt
movsl
in
int
sub
cwtl
mov
mov
jb
cmp
je
ret
cli
ss
pop
or
mov
dec
sub
mov
add
add
or
std
and
sub
and
pop
cs
aaa
xor
push
data16
dec
xor
mov
or
test
add
popa
inc
xor
or
and
or
mov
cmpsb
jg
xchg
test
pop
dec
mov
inc
outsb
nop
xor
testb
arpl
cltd
pusha
bound
outsl
sbbl
and
cmp
lock
adc
push
std
xor
sub
mov
stos
test
inc
xchg
or
out
imul
shll
cmp
scas
dec
mov
mov
jmp
push
sbbb
sahf
faddl
lret
rol
mov
pusha
ret
test
mov
add
pop
or
mov
dec
pusha
insb
xchg
push
pop
mov
sbb
aam
sub
in
mov
push
dec
dec
sub
fs
xchg
dec
into
jne
imul
xor
out
test
cmp
jno
call
imul
rorb
popa
cs
dec
sbb
js
int3
loopne
bound
xor
test
cmp
rorb
loope
mov
arpl
out
pop
push
addr16
mov
push
add
push
mov
xor
sahf
or
dec
pop
sub
mov
aam
hlt
inc
cmp
loop
clc
jp
shlb
loop
mov
rorb
xor
out
lret
scas
mov
ds
test
jae
jne
iret
mov
sub
push
push
shlb
push
jno
sub
imulb
jno
cmpsb
leave
mov
std
xchg
xor
inc
jl
push
shlb
orl
imul
xchg
sbb
call
pop
scas
jo
jne
out
fimull
lret
dec
dec
xchg
ret
fdivl
nop
movsb
shl
jmp
lahf
ret
dec
sbb
sti
inc
dec
mov
imul
xchg
scas
ret
push
push
mov
stos
mov
jae
cwtl
add
xchg
add
xchg
push
xchg
lret
sbb
ret
dec
repz
fs
sub
jl
inc
das
mov
xchg
pop
inc
or
xor
mov
nop
bound
inc
lahf
mov
shl
mov
adc
jnp
or
adc
xor
insb
pop
inc
lcall
fld
and
push
stos
push
ret
aad
out
mov
mov
lock
hlt
add
cltd
sub
add
loope
xchg
add
sbb
in
mov
hlt
loope
cld
adc
push
add
sub
or
dec
inc
pop
enter
pop
ret
cmova
loope
pushf
mov
sbb
sub
adc
cwtl
notb
dec
or
push
fcomps
fstps
and
mov
movsb
jl
iret
xchg
fsubr
popl
push
adc
mov
insb
hlt
ret
loopne
pop
dec
loopne
int3
push
fistpll
lret
add
cmc
sbbb
adcl
lahf
or
mov
adc
sarl
xchg
mov
repnz
mov
addl
daa
push
outsb
dec
xor
jne
mov
cmp
push
sahf
js,pt
pop
mov
sbb
clc
push
pop
scas
in
insb
negl
cmpl
cmp
loop
ret
sar
push
popf
mov
pushf
scas
mov
xchg
hlt
popa
pavgb
sub
jl
test
xchg
mov
push
sub
inc
test
ljmp
fs
add
in
adc
add
jmp
inc
mov
divb
cli
pop
sbb
xchg
add
sub
sub
mov
xchg
call
or
in
jmp
bound
aam
add
add
mov
fsubrs
fiaddl
jbe
ret
repnz
jmp
pop
cmpsb
mov
or
inc
rcrb
sub
cwtl
adc
ja
mov
xor
cli
inc
and
decl
xor
and
and
rol
mov
adc
jecxz
icebp
inc
mov
aam
mov
jmp
inc
jb
addr16
test
lock
int
out
pushf
dec
sti
jns
repz
pop
sub
and
add
lahf
fimuls
sbb
std
xor
sbb
or
sbb
mov
mov
call
lods
aas
mov
adc
nop
cmp
ds
ret
pop
test
push
test
mov
insb
inc
cmc
clc
addb
jle
xor
adc
divl
icebp
pusha
fst
insb
leave
pop
out
scas
js
scas
push
insb
testl
out
dec
stos
xor
lods
lock
or
insl
daa
inc
lahf
repnz
mov
loopne
jecxz
pop
add
call
cli
idivl
cmp
stos
or
push
mov
push
in
add
cli
jno
push
and
jge
inc
int3
add
add
mov
dec
mov
outsb
mov
cmpsl
mov
mov
and
or
add
cmpsb
push
shrb
push
addr16
jne
push
out
lds
mov
inc
mov
fdivrp
or
ljmp
ds
ret
and
ret
pop
and
idivl
adc
add
jl
rcrb
xchg
adc
lahf
push
loop
mov
loopne
pop
in
je
mov
jecxz
shrl
pop
test
xchg
stos
sbb
mov
fldcw
xchg
movb
cmc
fs
arpl
mov
mov
outsb
inc
decl
xchg
adc
ds
dec
test
mov
add
popa
lea
push
test
mov
mov
xchg
mov
xor
ljmp
cmpsl
rclb
sbb
test
rclb
inc
inc
stc
or
mov
movsl
sbb
sbb
dec
mov
push
jo
je
add
popf
pop
lea
mov
lcall
outsb
dec
dec
xor
xchg
mov
jg
notl
inc
inc
shl
nop
shl
cld
mov
lock
mov
outsl
insb
xlat
or
insl
mov
or
mov
cmpsb
dec
leave
add
ljmp
sub
lret
xor
xor
mov
cli
clc
ljmp
dec
mov
cmp
inc
dec
rorb
je
dec
aam
add
add
vpunpckhbw
cmp
jnp,pt
lds
or
mov
cmp
lods
cmp
xchg
es
cld
cmp
push
adc
iret
lea
aam
xorb
push
jp
call
inc
int
dec
stos
inc
in
shll
aaa
lret
mulb
pop
xor
mov
mov
xor
pop
mov
cmp
aas
push
cmp
mov
and
jns
push
add
and
jle
mov
fdivr
mov
repnz
loopne
imul
out
jp
call
mov
push
jg
mov
pop
mov
test
or
out
jecxz
adc
addb
xor
das
xor
push
or
pop
rcl
int
cli
jmp
mov
ljmp
jbe
daa
rcrl
xchg
test
mov
imul
enter
daa
push
xor
jl
sbb
mov
fsubl
cld
hlt
movl
pop
mov
imul
icebp
dec
xchg
sahf
xchg
out
xlat
mov
jae
aaa
push
nop
dec
shrb
jl
xchg
test
push
das
jnp
stc
aas
cmp
pop
shll
xchg
fisubrs
jns
or
les
icebp
pop
mov
mov
xchg
jb
mov
push
lods
and
ljmp
push
lret
and
mov
iret
or
sub
add
mov
lahf
mov
or
add
xchg
out
enter
test
or
jmp
loopne
fs
mov
inc
ret
clc
xor
add
daa
pop
shlb
clc
push
inc
adcb
and
inc
inc
fcmovnb
pop
add
lods
or
cmpsb
fisubl
adc
fsubrs
fs
iret
pop
xor
cmp
or
cwtl
xchg
js
push
add
sub
or
fildl
mov
ficompl
add
cmp
out
push
pop
fistl
roll
mov
cmp
adc
xor
push
inc
pop
add
add
rorb
xchg
call
mov
mov
mov
mov
dec
je
stos
inc
and
sub
lock
cltd
sti
scas
or
js
popf
mov
jnp
add
in
insl
cmp
cmpsb
in
xchg
shl
xchg
jbe
lcall
cmp
xor
push
mov
sub
mov
setp
js
inc
xor
inc
sbb
xlat
add
mov
or
stos
dec
sbb
pop
fisubs
call
roll
mov
ds
cmp
clc
jo
shrb
repnz
divb
xchg
icebp
pcmpgtd
jmp
jb
movsb
movsl
push
xor
iret
outsl
add
and
gs
je
adc
fidivrs
lcall
dec
add
dec
aas
je
add
mov
or
enter
mov
mov
out
out
add
rclb
loop
mov
insb
xchg
sub
jne
fmuls
mov
add
pop
sub
ret
cmp
inc
push
rolb
test
test
adc
scas
incb
arpl
xor
das
mov
or
push
cwtl
push
dec
inc
in
sub
call
or
cmp
mov
or
mov
bound
in
out
push
dec
adc
lcall
mov
cs
roll
lcall
int
mov
insb
and
xor
loopne
mov
xor
cli
mov
jmp
notb
xchg
pop
jge
lods
fcomps
test
mov
adc
sub
pop
cmp
mov
adc
rclb
inc
xchg
add
fstps
pusha
mov
stos
mov
test
adc
rcll
les
or
sbb
imul
mov
shll
xchg
outsb
inc
stos
pop
or
sbbb
dec
dec
fcomp
add
pop
sub
insl
and
jle
int
rcrl
aam
cltd
es
or
fwait
andb
or
fsubrl
and
fmuls
movsb
ret
mov
add
call
out
and
push
adc
loope
bound
andb
aam
fnsave
sbb
xchg
adc
push
pusha
sbb
sub
fcompl
pop
sub
xor
and
pop
jo
stos
xchg
sbb
inc
mov
push
mov
mov
jp
push
movsb
arpl
stos
pop
ret
aam
out
add
out
cs
jmp
shll
add
cmp
jnp
inc
push
icebp
mov
ficoms
sbb
push
adc
cwtl
mov
add
scas
dec
mov
or
inc
decl
pusha
or
mov
adc
outsl
sbbb
cli
push
lret
loopne
mov
jecxz
inc
pushf
cmpsb
cli
cli
ret
icebp
mov
and
aaa
sbb
mov
jmp
lcall
xchg
repz
inc
pop
and
xchg
enter
mov
insb
or
std
inc
xchg
jecxz
mov
js
ds
std
cld
outsb
popa
pop
mov
or
ja
lea
pop
in
lcall
cld
mov
or
mov
sub
lods
adc
daa
fwait
and
leave
lock
sbb
sarl
jo
shrl
inc
cmp
and
xor
test
in
xorb
pushf
push
inc
xchg
push
rorb
cmpsb
mov
jge
pop
and
or
in
mov
fimull
cli
sarl
mov
cmp
pop
stos
add
add
data16
dec
dec
push
jle
test
and
loopne
fisttps
clc
mov
fisubl
adc
orb
stos
pop
orb
test
outsb
inc
mov
jno
imul
inc
loop
ror
dec
xchg
scas
js
lret
pusha
scas
lds
fs
adc
mov
xchg
in
adc
clc
out
lea
and
ret
dec
pusha
roll
cld
jae
mov
ljmp
fcmovnb
subb
inc
mov
mov
js
add
or
scas
outsb
rolb
fisubrl
xchg
jp
or
icebp
mov
aas
sbb
sub
dec
push
mov
cs
add
inc
mov
insb
and
inc
sbb
arpl
jle
inc
inc
fisttpll
push
test
fptan
les
std
mov
cmp
sub
lcall
aad
sub
pop
sbb
cli
das
lock
mov
rcl
jo
insl
ret
jle
or
and
jo
dec
pop
jg
or
clc
jle
ret
jecxz
xchg
jecxz
inc
xor
or
nop
dec
andb
jnp
arpl
sbb
adc
insl
sub
xor
jb
jae
or
mov
jbe
jl
sbb
cld
cmpsb
ret
icebp
sbb
add
test
xchg
and
push
aaa
mov
testl
mov
jo
jnp
clc
pop
sbb
cmpsl
inc
cmpsl
sub
pop
mov
dec
inc
out
stos
adc
loopne
sar
sbb
mov
xchg
inc
pusha
mov
std
leave
rcll
push
ficoms
mov
fisubrl
imul
adc
or
loopne
pop
mov
pusha
mov
cmp
push
in
sahf
ljmp
rcrb
jp
js
xor
xlat
dec
fstp
xor
inc
lret
inc
out
or
sbb
dec
ljmp
lock
xorb
xchg
cmp
pusha
les
pop
test
ret
sbb
pop
inc
jl
mov
and
sarl
xorb
sti
xchg
in
loope
fdiv
cld
or
lock
ret
dec
enter
sbb
push
cmp
add
aad
and
inc
cmovae
dec
call
jge
dec
mov
loope
sub
inc
popa
inc
cmp
adc
test
test
popf
popa
arpl
out
mov
outsl
repz
cmpsb
mov
cld
dec
je
inc
fcmovu
mov
leave
xchg
add
movl
or
test
pusha
mov
fistl
inc
xchg
fsubrs
lahf
xchg
sub
cmpsb
ljmp
mov
xchg
fidivl
and
pop
mov
repz
movl
xor
sub
xchg
sub
cmp
cmc
call
cli
aas
addr16
jp
cs
lds
push
jno
xchg
insb
inc
adc
or
push
stos
or
push
lock
xor
push
adc
pop
pop
push
lock
mov
jb
push
repnz
sbb
ud2
adc
ss
cli
cwtl
pushf
in
test
and
mov
or
int
push
adc
lods
jmp
mov
jecxz
push
inc
adc
ret
andb
call
or
jno
aam
sub
loopne
push
les
aaa
mov
xchg
clc
ficoml
jb
sub
xor
add
pop
mov
jl
into
fildl
xor
push
and
mov
lret
outsb
int3
push
in
arpl
pop
out
push
loope
mov
in
adc
icebp
push
fsubrs
add
xchg
icebp
push
mov
fists
cmp
pop
pop
jmp
jo,pn
sysret
aas
jmp
andl
scas
mov
cmp
sarb
adc
cmp
xor
mov
fs
xchg
sub
dec
notb
dec
or
aaa
jmp
inc
js
movd
xchg
stos
pop
cmp
loop
rolb
jno
es
dec
mov
mov
mov
inc
xchg
rolb
add
sbb
xchg
aaa
clc
dec
out
push
shr
fists
fwait
cmp
cmpsb
mov
je
in
adc
int3
outsb
mov
repnz
xchg
jmp
pop
cmp
cmpl
mov
add
dec
fisttpll
and
dec
mov
js
sbb
lods
outsb
mov
aas
cmp
movsb
push
movsb
pop
arpl
xchg
imul
push
call
pop
daa
test
lods
cmp
mov
ret
lock
cmc
psadbw
cmp
sbbb
push
inc
dec
clc
or
ljmp
int
inc
clc
in
fst
test
je
jbe
adcb
in
sub
mov
ljmp
or
cmc
push
jp
and
outsb
mov
pop
out
mov
int
cmp
inc
xchg
xchg
pop
movsb
cmp
jae
shr
out
jp
daa
cmp
cli
cmc
mov
xor
sbb
das
cvtps2pi
jne
and
std
dec
push
lret
aam
cwtl
push
outsb
xchg
cltd
sbb
cmp
push
mov
dec
pop
dec
xor
scas
mov
adc
add
sbb
mov
sub
test
mov
pop
pop
fisttps
mov
jg
sbb
cmc
test
sub
loope
cmpsl
push
inc
adc
mov
subb
orb
sub
inc
add
lea
mov
das
shlb
scas
std
or
fildll
lods
sahf
xchg
sbb
jl
mov
sarb
ds
mov
iret
add
mov
loope
aad
push
scas
movb
push
or
mov
xchg
icebp
inc
ret
sti
push
and
and
cli
sbb
adc
sbb
sub
xchg
loopne
adc
and
rcrl
stos
inc
mov
mov
mov
cmp
fs
loopne
jae
addr16
mov
jno
xor
andl
and
dec
ja
hlt
push
pop
mov
pop
enter
xchg
fstl
clc
dec
push
jl
xchg
lret
js
dec
fs
mov
pushf
fs
ret
push
jno
loope
or
add
push
jne
sub
push
push
enter
stos
ss
sub
or
xchg
xlat
xchg
xorl
xor
xor
add
push
sub
daa
pop
les
xor
icebp
mov
jno
js
sahf
pop
call
mov
or
sub
add
xchg
pop
adc
mov
sub
jmp
inc
push
hlt
mov
lahf
loopne
sbb
sub
sbb
out
add
mov
mov
rorl
aad
rcl
aad
stos
std
inc
mov
jne
mov
add
das
inc
stos
mov
loope
stos
inc
rolb
cwtl
add
push
cmp
rorl
adc
push
inc
data16
imul
nop
and
jbe
jle
aas
jnp
adc
push
outsl
cmpsl
icebp
add
inc
fs
lahf
or
test
jmp
loope
xor
nop
inc
pop
mov
jecxz
push
jecxz
test
aas
add
stos
add
or
push
lahf
jp,pn
adcl
mov
push
xchg
lcall
push
pusha
xor
push
push
outsb
push
rcrl
mov
push
or
add
jb
jns
test
scas
fnstenv
mov
fistpll
cmpsb
xchg
mov
xorb
xorb
scas
out
push
and
leave
push
adc
pop
loopne
inc
lods
sub
mov
inc
mov
mov
xor
mov
ret
enter
repnz
pushf
mov
inc
jl
adc
jmp
mov
jns
push
nop
sbb
shlb
aam
mov
mov
sbb
cmp
je
pop
fimull
add
push
fwait
sahf
mov
sbb
jle
stc
inc
jo
cmp
les
fisubrl
loop
push
test
inc
iret
dec
sub
pop
shl
sub
pusha
fstpt
adc
sub
jl
aam
xchg
adc
repz
add
int
dec
lret
cmc
sbb
jb
mov
dec
and
jnp
fsincos
mov
add
push
cvttps2pi
loopne
cwtl
dec
dec
push
adc
mov
ret
dec
int
push
rolb
fists
cmpl
enter
inc
push
popf
add
pop
aam
aam
imul
loop
adc
js
addb
into
sbb
stos
jnp
xor
and
pop
and
rorb
push
jmp
ret
mov
fnstsw
aaa
jl
mov
clc
sbb
push
push
cwtl
dec
jbe
lock
sub
sti
js
cmp
ret
dec
xchg
addps
and
mov
push
hlt
mov
inc
push
fstpt
mov
js
daa
add
jae
push
movsb
scas
push
aad
cli
in
test
inc
orl
clc
das
and
xchg
and
stos
subb
hlt
mov
adc
fistps
sahf
jns
mov
jge
push
lret
dec
jo
scas
mov
movsl
ds
pop
add
lods
and
inc
mov
jae
test
je
cmp
cmp
shl
inc
cmp
aam
arpl
inc
dec
jle
sub
dec
mov
push
dec
adc
test
xchg
dec
cmp
ds
push
dec
sub
out
xchg
or
subb
sbb
jmp
insl
cltd
dec
mov
iret
mov
mov
inc
imul
jp
inc
jb
pusha
dec
test
aad
pop
cmp
push
mov
inc
lods
in
jg
fwait
or
setge
and
fisttpll
ficoml
fwait
mov
mov
bound
push
cli
or
inc
mov
push
push
andb
jl
lcall
enter
data16
jnp
arpl
mov
sub
movsl
pop
test
mov
mulb
rolb
inc
shlw
test
ljmp
sub
inc
or
dec
fdivrp
add
sbb
mov
xor
cmp
push
out
xor
int
dec
scas
test
inc
mov
jle
sti
es
in
adc
js
stos
dec
inc
sub
dec
insb
lret
mov
div
inc
movsl
mov
cmpsl
xchg
outsb
pop
mov
mov
and
mov
stos
mov
adc
out
jle
loopne
das
mov
xorb
mov
push
mov
mov
mov
mov
daa
mov
push
or
outsl
mov
pop
dec
adc
push
jne
or
pop
iret
stos
xor
mov
ret
scas
stos
je
aad
imul
push
mov
and
xchg
lea
cmpsl
sahf
je
test
in
add
cwtl
or
mov
shlb
xor
inc
dec
testb
js
xchg
pop
or
pop
fucom
je
dec
dec
jle
icebp
xchg
add
fildl
int3
xchg
pop
xchg
paddusb
jbe
and
dec
cltd
inc
mov
inc
cwtl
aam
pop
daa
shlb
pop
xor
pop
jo
in
mov
xchg
lds
inc
and
adc
lods
sti
js
cmovge
push
outsl
and
mov
fs
adc
ret
test
xchg
mov
adc
xchg
dec
cmp
jbe
push
push
mov
push
inc
cwtl
frstor
and
cmc
jg
lods
rorl
sbb
add
nop
xchg
push
test
lahf
jle
jp
mov
push
fdivl
rorb
dec
dec
nop
sbb
adc
xor
movb
loope
dec
xor
mov
loope
scas
clc
pusha
ret
sub
push
lcall
adc
out
mov
hlt
and
pop
repnz
repz
cmp
jbe
inc
xchg
js
shll
mov
andb
or
scas
jbe
ret
jge
dec
icebp
cmc
add
dec
jnp
cmpsl
ficomps
imul
adc
lock
mov
pop
jp
daa
jge
sbb
mov
and
ja
adc
test
js
mov
loope
sub
pop
mov
hlt
jge
shll
jb
in
sub
shll
cmpl
in
hlt
pop
inc
adc
and
mov
aas
das
mov
scas
sub
push
lods
pop
xor
into
mov
mov
mov
sbb
mov
push
xchg
jge
mov
pop
aaa
add
push
xchg
aas
sbb
adc
outsb
pusha
rcll
mov
inc
sbb
pop
push
xlat
inc
push
pop
adc
jmp
jno
mov
push
pusha
push
dec
int
daa
pop
arpl
add
pop
adc
ljmp
xlat
pop
jge
outsb
or
mov
sub
and
adc
fs
dec
cmp
imul
jg
adcb
test
xor
int3
pop
dec
inc
mov
mov
mov
cmp
loop
insb
lock
ljmp
dec
add
ret
fsubl
mulb
mov
push
out
sbb
and
test
dec
lock
cmp
int
mov
lcall
add
lret
xor
ret
xchg
add
fwait
into
mov
push
cltd
sbbl
ror
cld
cmp
test
lock
push
cmp
sub
add
and
aas
pop
pop
and
fiaddl
add
jecxz
mov
dec
cmp
pop
add
push
fsubl
mov
adc
and
gs
jl
les
cwtl
push
dec
fnstcw
popf
aas
out
sbb
lret
push
ret
fucomip
enter
pop
inc
mov
dec
add
stos
inc
xchg
or
ret
mulb
in
cmp
dec
adcb
sbb
mov
int
push
pop
sub
and
or
mov
pushf
test
adc
jo,pn
mov
clc
adc
push
hlt
pop
mov
sbb
dec
fistpl
inc
jg
sbb
aad
in
mov
mov
fcoml
inc
jge
add
push
add
mov
push
push
xchg
pop
imul
aas
in
ffreep
adc
roll
jae
or
lock
xchg
lods
sti
test
jmp
and
aad
std
or
stos
out
mov
pop
sub
push
lret
cli
in
rolb
xor
testb
cmpsl
aaa
sbb
stc
jg
xchg
add
dec
fmul
addr16
negb
add
and
dec
mov
or
inc
stc
mov
mov
fbstp
xor
push
sub
out
lahf
sarb
sbb
add
jae
push
cmp
outsl
aaa
js
dec
mov
subb
inc
lret
push
add
dec
ud0
xchg
sbb
xchg
adc
xor
pusha
jmp
jle
mov
hlt
add
pushf
cmpb
scas
mov
or
imul
fsubrl
xchg
push
sbb
push
jmp
jp
inc
inc
or
lods
inc
mov
and
xchg
cmp
push
pop
sub
mov
push
icebp
push
arpl
mov
or
loopne
xchg
dec
loope
je
insb
mov
push
xchg
repz
shlb
inc
mov
rol
add
les
ss
and
dec
push
cmp
push
mov
inc
pushf
pop
jb
outsl
rcrl
addb
push
pop
ljmp
std
call
pop
dec
mov
mov
subb
lret
cmp
imul
push
mov
xchg
out
inc
push
jo
pop
nop
jbe
push
scas
sbb
sbb
pusha
cmp
fwait
jg
out
pop
mov
loope
jno
fsub
hlt
imul
es
loopne
pop
or
inc
pushl
mov
and
mov
cwtl
cwtl
ret
xchg
fwait
adc
movsb
mov
shl
fs
sbb
rorb
fsubs
dec
das
mov
std
imul
ljmp
dec
push
pop
test
xchg
outsb
aam
xchg
lcall
sbb
in
pop
rolb
scas
pushf
dec
imul
sub
mov
adcb
aas
xor
xor
or
xchg
push
mov
xor
stc
aas
pop
push
adc
dec
sub
mov
cli
shlb
push
lret
movsb
icebp
or
scas
xchg
push
jmp
pop
rcrb
or
mov
mov
mov
lret
pop
xor
aam
nop
scas
push
enter
mov
inc
jmp
adc
mov
mov
inc
mov
xchg
shlb
push
mov
lahf
test
hlt
test
lret
addr16
and
xchg
aaa
ljmp
jmp
cmp
std
hlt
jno
jo
dec
stc
rclb
and
jp
dec
fwait
and
add
add
push
mov
popa
roll
mov
mov
imul
add
mov
ret
ret
sub
mov
out
aam
in
inc
push
xchg
dec
sbb
mov
dec
mov
xchg
fldl
in
bound
test
push
outsb
test
mov
std
push
sub
addb
clc
lods
inc
out
out
xor
fiaddl
mov
add
push
mov
sub
or
daa
jno
fdivs
mov
adc
bound
push
fidivrs
xor
xor
xor
adc
aad
cmp
cmp
inc
insl
pusha
or
cmp
or
subb
push
aas
jo
adc
lds
add
test
pop
jp
mov
adc
adc
test
dec
outsb
xchg
mov
je
and
or
jbe
in
inc
mov
mov
fstl
pusha
lock
into
mov
pop
push
mov
push
adc
test
cwtl
jbe
dec
sub
shlb
inc
sbb
sbb
cmp
addr16
jle
je
or
les
sub
push
dec
sub
cmp
rolb
ljmp
mov
or
push
nop
cmp
adc
cmpsl
outsl
add
cmc
inc
imul
in
call
jge
fldt
pushf
push
push
shrb
fdivrs
popa
inc
cmpl
sbb
hlt
test
fdiv
cmp
inc
and
dec
lods
jns
pop
jb
mov
pop
fistpll
mov
loop
or
inc
jl
je
mov
xchg
inc
les
jecxz
cmp
ljmp
popa
movsl
inc
inc
mov
add
imul
pop
ret
adc
pop
fadd
aaa
push
test
jo
mov
add
mov
repnz
scas
test
jo
inc
ret
adc
push
cli
cwtl
gs
sub
push
test
cmpb
in
rcrb
fs
stos
xchg
rcrb
leave
std
and
sub
lods
mov
adc
xchg
mov
add
add
xchg
ret
inc
sub
clc
sbb
xor
or
push
loop
mov
push
sub
dec
imul
push
pop
jle
pop
and
xor
and
data16
je
sti
aas
cmpsl
or
aam
movsl
out
cld
das
iret
mov
fcoml
lods
add
adc
dec
cmovs
les
push
in
inc
jl
push
and
dec
mov
fimuls
adc
adc
push
dec
cwtl
in
sub
ss
rcl
push
dec
aam
in
int3
push
int3
lock
adc
sbb
ljmp
add
ljmp
push
lea
clc
mov
adc
push
mov
stos
es
mov
add
mov
hlt
lock
bound
push
lahf
clc
bound
ret
mov
lods
pop
icebp
dec
sbb
push
gs
shrl
ret
out
or
test
xchg
dec
lock
jne
lret
push
pusha
testb
rcrl
cltd
aad
inc
loopne
mov
add
fwait
adc
in
or
movsb
ljmp
adc
sbb
cmp
cli
aas
shll
xchg
sub
in
loope
jo
dec
adc
shll
and
mov
bound
or
jo
cld
inc
or
mov
xorb
pop
mov
mov
fsubrl
sysret
outsl
movsb
xchg
cmc
cmc
call
and
sbbb
mov
lods
inc
sub
push
cld
adc
and
outsl
outsb
inc
mov
sbb
pop
mov
sbb
xchg
enter
iret
das
xchg
fnstenv
int3
and
push
pushf
lock
mov
out
icebp
dec
xchg
fwait
movsb
adc
and
int
icebp
mov
push
orl
out
sub
dec
enter
mov
or
pusha
add
test
inc
add
ret
mov
add
sbb
imul
cmp
incl
adc
lahf
and
jo
sub
test
mov
sbb
hlt
xor
mov
cmc
dec
rcll
nop
rcrl
loopne
inc
hlt
addl
mov
pop
test
jbe
icebp
mov
popf
add
xchg
ss
xor
aad
clc
je
dec
imul
mov
pop
clc
enter
cmpsb
dec
lods
cmp
js
mov
mov
cwtl
cwtl
add
and
fisubrl
ficoml
lods
fwait
clc
cmp
adc
andb
xor
int
jo
and
sbb
mov
insl
push
push
iret
mov
fst
pop
std
aas
mov
or
sbb
xchg
loope
xchg
adc
enter
cmp
ret
pop
add
adc
jae
jecxz
add
int3
out
daa
push
inc
push
push
movsb
and
inc
rclb
adc
hlt
lcall
xchg
push
fcmove
aas
lcall
fwait
icebp
and
lods
test
pop
xor
mov
push
in
inc
and
or
in
add
movsb
shll
or
das
pop
faddl
and
add
frstor
fdivl
jle
jno
jae
pop
and
jle
xchg
in
testb
jmp
dec
addb
scas
mov
pop
or
aad
dec
js
mov
pushf
xchg
outsb
lret
or
cmc
pusha
je
jb
loopne
lock
pop
icebp
add
bound
fcomps
xchg
aad
mov
push
outsw
cmp
paddusb
in
js
push
outsl
cmpsb
mov
mov
push
sbb
and
in
stos
xchg
loop
cmpsb
data16
popa
enter
xchg
jb
xor
xlat
add
or
add
das
and
cli
push
cli
inc
sbb
sbbl
mov
or
aad
mov
sub
jp
jge
mov
push
sbb
xor
push
or
nop
popa
push
es
subb
fs
ficomps
pushf
dec
mov
into
push
inc
rorb
aam
data16
dec
ret
jmp
cmp
jle
jg
pop
rorb
lds
xchg
call
movsb
inc
pushf
xchg
and
sbb
lret
pop
testb
xor
clc
jne
add
cmp
int
push
pop
mov
leave
pop
hlt
lods
addr16
push
push
pushf
adc
rcrl
outsl
mov
mov
sub
inc
sub
addr16
mov
dec
dec
push
int
mov
icebp
pop
cli
lahf
mull
adc
mov
cltd
pop
or
xchg
mov
pushf
test
sub
mov
push
cmpsb
or
cmpb
sahf
les
inc
dec
clc
dec
sub
push
pop
ja
xchg
cmp
pusha
xchg
mov
dec
xlat
sti
or
mov
adc
lcall
out
js
js
cmp
mov
sub
mov
les
pop
fsubrs
ret
pop
sbb
mov
cli
push
hlt
add
add
mov
adc
mov
mov
jo
add
mov
jl
aam
push
fnsave
adc
ret
int
mov
scas
pop
mov
insb
data16
bound
xchg
loopne
cwtl
and
stos
add
mov
imul
scas
sub
scas
push
add
loopew
pop
test
inc
int
push
pop
loope
pusha
sarb
adc
push
jp
insb
shlb
or
test
mov
inc
lret
popa
out
push
pop
sub
test
mov
pop
fcompl
arpl
andb
rolb
inc
call
mov
daa
mov
inc
out
mov
das
clc
mov
cs
sub
ljmp
es
leave
xor
jp
lods
cmp
adcb
adc
or
pop
rcrb
out
loop
xor
cs
lods
jbe
mov
mul
jg
mov
sub
sbb
jg
sar
mov
xor
inc
jge
or
adc
stos
push
jecxz
jo
adc
and
mov
scas
lahf
sub
stos
movsb
jb
insb
cmp
js
jmp
add
pop
addb
xor
movsb
sarl
pop
jge
and
dec
sub
bound
xor
test
mov
add
arpl
cmpsb
adc
add
cmp
jne
jmp
loop
repz
pop
or
fwait
mov
cmp
sub
clc
jge
out
or
adc
ss
je
xor
insb
pop
sbb
mov
inc
aaa
dec
shlb
scas
inc
xchg
push
fs
movb
sub
arpl
mov
sbb
push
stos
add
addr16
inc
mov
adc
inc
jecxz
pop
and
mov
push
adc
adc
mov
out
rcrl
test
mov
pop
cld
cmc
mov
aam
movsb
fdivl
fs
in
aad
arpl
cmpsb
xor
out
test
inc
icebp
push
mov
mov
xor
enterw
ds
adc
fsubl
push
sbbl
xchg
rcrb
adc
mov
hlt
xor
add
pop
out
hlt
mov
ljmp
lods
dec
xchg
xchg
pop
je
adc
mov
inc
xchg
or
or
push
mov
sbb
add
lock
xor
add
pop
sub
imul
loope
lods
loop
stos
pop
push
push
enter
in
daa
cwtl
movsl
pop
xor
out
pushf
fidivrs
add
add
aaa
cld
shr
insb
sbb
bound
mulb
pop
xchg
inc
out
mov
sbb
push
lock
jmp
jo
lock
pusha
fstpl
push
std
inc
jmp
adc
xchg
lea
insl
xor
jp
movsl
stc
je
test
sbb
jl
jbe
mov
cmpsb
call
add
lahf
adc
es
in
iret
mov
sub
dec
push
and
inc
loopne
lret
outsb
jo
int
push
mov
leave
in
and
jo
jno
xor
stos
and
mov
adc
push
sbb
jbe
jp
mov
adc
dec
ret
push
xor
call
decl
lods
sub
and
pusha
flds
ja
hlt
mov
cwtl
std
lods
inc
mov
mov
hlt
fwait
lret
adc
adc
sbb
test
inc
jl
mov
sub
and
iret
mov
pop
test
repz
add
jp
pop
sbb
in
and
or
ds
sbb
add
push
push
xchg
fdivs
data16
test
push
test
rcrb
dec
ret
mov
jmp
aam
xor
adc
xchg
mov
ds
repz
pop
add
jmp
mov
les
cwtl
add
ret
xchg
testb
mov
mov
pop
fs
lahf
inc
and
inc
stos
mov
xor
jo
jne
mov
push
lahf
xchg
push
ljmp
add
sub
inc
mov
and
pop
movsb
xchg
daa
push
jne
push
and
adc
mov
out
and
imull
rcl
hlt
test
pop
fmull
rcrb
jle
xor
testb
pop
mov
xchg
and
adc
clc
out
or
and
jbe
cli
clc
and
fdivl
or
cld
testb
in
push
sub
or
push
or
lods
cmp
iret
mov
inc
aad
rolb
xchg
mov
xchg
arpl
mov
inc
push
jp
loope
test
fdivl
in
cld
xchg
pop
inc
cmp
aam
decb
add
stos
aas
gs
je
dec
in
pop
push
push
repnz
pop
ljmp
and
mov
and
jns
outsl
popaw
into
fs
cmp
subb
pop
xorb
loope
sar
aad
andl
pop
dec
sub
sub
fstl
pop
mov
sbb
and
inc
sahf
sub
jnp
shl
sbb
dec
push
enter
mov
pop
scas
movsb
in
xor
dec
faddl
out
filds
fwait
add
and
test
dec
or
aas
mov
adc
xor
push
xlat
jge
adc
mov
mov
cmp
enter
sti
out
ret
mov
inc
sbb
fisttps
pushf
iret
mov
into
jmp
push
insb
pop
xchg
mov
or
shlb
ja
rcll
xorb
rcrb
cmp
outsb
mov
in
lahf
dec
cmp
cltd
sub
mov
jecxz
scas
bound
dec
xchg
stc
lock
adc
mov
push
xor
push
sbbb
mov
cld
lods
add
ficompl
loop
push
sti
roll
iret
and
imul
roll
insb
or
lds
arpl
out
lock
and
add
decl
stc
adc
mov
xor
cmc
pop
loope
nop
out
adc
in
inc
fistps
dec
test
andb
pop
mov
or
xchg
cmpsb
dec
add
nop
shrl
add
les
popf
into
xchg
lods
xlat
xchg
daa
xchg
sahf
pop
add
sub
cs
inc
int3
addr16
sub
mov
inc
add
into
rcr
data16
push
popf
inc
ret
mov
lods
dec
push
sbb
sbb
adc
enter
push
test
cmpsl
shlb
lock
jne
inc
inc
mov
insb
push
shl
mov
xchg
movsb
orb
decl
cli
sbb
pop
clc
dec
shl
test
lods
inc
in
bound
mov
jbe
es
jno
loop
lea
mov
push
call
nop
scas
lahf
je
or
clc
pop
hlt
add
pop
andb
icebp
out
or
push
test
lods
lahf
pop
loope
cmp
mov
movsb
dec
out
lods
hlt
daa
nop
rorb
mov
add
rolb
cmp
pop
mov
pusha
mov
mov
and
mov
fcmove
mov
stos
cli
xchg
loope
cmp
jo
pushf
ficomps
inc
std
inc
add
and
in
lods
jmp
loopne
and
xchg
addl
movsb
daa
lcall
fs
push
rcrb
test
cmp
andb
vunpckhps
data16
mov
xor
sahf
fs
inc
loope
out
jbe
push
sti
sarl
xchg
or
test
jns
sub
fsubl
mov
pop
or
pop
clc
divl
jg
jle
sbb
pop
sub
or
js
imul
sub
and
inc
dec
sar
dec
jbe
sbb
stc
je
push
jns
pop
sbb
adcb
das
out
mov
xor
sub
outsb
mov
fsub
scas
movsb
aas
add
out
pop
test
dec
cmpsl
jle
add
mov
popa
or
in
loope
jg
hlt
mov
cmpsb
cmp
out
in
ja
sbb
cmp
cs
pop
adc
push
or
test
andb
pushf
rcr
mov
scas
imul
and
sub
mov
test
or
inc
xchg
xchg
dec
mov
mov
inc
clc
xchg
cmp
mov
lea
movsb
into
mov
aam
popl
enter
dec
add
inc
pusha
roll
lahf
aad
loopne
xor
jne
xor
fidivrl
inc
add
ss
sub
es
mov
mov
dec
test
jl
mov
leave
into
sbb
clc
call
push
add
mov
nop
dec
cmpsb
or
push
andl
pop
rclb
or
clc
fmul
sbb
pop
adc
hlt
push
fdivs
ljmp
lock
xor
or
mov
int
jl
pop
data16
cli
mov
mov
jo
fnsave
push
hlt
pshufw
adc
test
and
inc
aam
xor
cld
adc
pop
fucomi
aas
dec
mov
inc
mov
push
jle
xlat
das
or
test
subb
adc
mov
outsl
jle
push
add
orb
or
sbb
fbstp
scas
pop
or
inc
pusha
sub
dec
push
inc
xor
xor
pop
std
imull
jmp
ret
out
jne
add
or
sbb
inc
shll
imul
stos
push
cli
sbbb
sbb
scas
call
stc
push
jle
jae
xchg
inc
out
and
aaa
insb
dec
scas
push
jge
in
xchg
sahf
cmp
and
cmpsl
adc
mov
ja
mov
add
movsl
jb
inc
xchg
inc
test
mov
mov
sub
cwtl
fs
sbb
xor
imul
and
jno
stos
aaa
lea
jo
mov
int3
mov
xchg
cmp
dec
and
mov
mov
flds
leave
ja
push
pop
in
add
ljmp
dec
cwtl
aas
mov
lock
xor
or
lods
ss
or
fprem
push
cmpsb
pop
ja
repnz
movsb
outsl
dec
cli
mov
inc
movsb
cmpsb
test
ficoms
cmc
jp
push
cli
jmp
or
popf
lock
pop
orl
push
mov
shrb
or
ljmp
push
popa
xchg
mov
mov
sub
jo
add
mov
push
or
orl
rcr
xchg
cld
lret
arpl
jbe
pop
clc
pop
push
roll
or
add
xchg
mov
jp
and
gs
scas
inc
rorb
lea
xchg
ds
ja
popa
clc
fildl
cld
bound
cmc
or
ljmp
adc
into
filds
xchg
cli
mov
rorl
pop
xchg
mov
mov
jo
mov
or
sbb
push
ret
lret
xchg
cmp
push
iret
or
out
mov
and
nop
in
jb
mov
pusha
sub
adc
sbb
sbb
sbb
enter
stos
add
sbb
xchg
fsub
jno
and
add
popf
pop
mov
fstpt
inc
or
out
pop
addl
inc
jnp
or
push
and
mov
mov
sub
adc
lock
mov
loope
cmpsb
sub
push
cld
or
sub
xchg
pop
jl
inc
sub
inc
lcall
or
mov
mov
jl
lods
loopne
leave
adc
loopne
and
pop
xor
pop
dec
cmc
mov
jg
pop
rol
bound
pushf
and
sti
call
sub
adc
push
je
test
loopne
mov
pop
xor
sub
mov
adc
roll
stc
fiaddl
paddusb
mov
sub
aad
mov
ficoml
lea
dec
mov
outsb
mov
fldenv
push
pushf
das
mov
pop
xor
test
adc
push
lret
lahf
aas
lcall
jle
or
or
ret
push
std
ss
bound
or
jp
fisubl
sbb
adc
faddl
out
cs
jo
inc
lcall
jno
pop
fwait
mov
xor
pop
popf
sub
sarb
adc
rorb
lods
rclb
and
js
cmp
and
dec
mov
xchg
popa
fcomps
iret
inc
mov
adc
nop
mov
in
push
aad
rol
lcall
pop
or
loopne
icebp
sub
mov
ror
ds
dec
sub
mov
sub
insb
dec
push
rcrl
pop
sbb
jne
addl
dec
aam
pop
lea
xchg
mov
dec
sub
xor
rolb
push
xor
push
test
loope
shlb
or
addb
dec
cmp
outsl
aas
adc
pop
out
pop
mov
pop
outsl
pop
mov
mov
inc
cmpsb
aas
jo
mov
pusha
adc
push
jns
fildl
or
mov
add
jl
pop
mov
cmp
fisubs
scas
ljmp
cld
xor
fcoms
lahf
push
sbbb
add
sbb
xchg
xor
push
lods
pop
sarb
fnstenv
add
mov
xor
push
xchg
adc
mov
iret
in
sub
in
or
test
adc
push
outsl
jge
mov
push
js
xchg
push
out
or
stos
adc
push
mov
pop
add
lock
fstpt
jg
cmpsl
sbb
hlt
cmp
and
mov
out
inc
sub
ficoml
mov
xchg
dec
or
cwtl
faddl
add
dec
or
sbb
call
bound
or
nop
and
sbb
inc
adc
and
out
jle
sub
dec
loop
testb
lock
xchg
push
mov
cmpsl
mov
jb
loope
roll
pop
cmpsb
add
outsb
das
jmp
dec
or
add
adc
inc
int
stos
test
push
add
and
xor
xor
pusha
xor
out
and
mov
fistl
inc
test
cwtl
and
adc
xchg
ret
xor
sub
add
xchg
mov
lcall
sbb
pop
jbe
test
mov
mov
aas
push
dec
mov
aaa
mov
lods
stc
or
imul
jmp
cwtl
xor
xchg
test
or
xorb
repnz
insl
icebp
cmpsl
and
jmp
andl
add
lods
dec
mov
popf
fcmovnb
shlb
and
cmp
adcb
dec
nop
ds
xor
bound
lods
test
inc
inc
inc
jo
cmp
jg
jmp
inc
or
aam
imul
into
aaa
sbb
in
pop
cmp
lods
les
push
xlat
adc
adc
push
mov
lea
jl
sbb
pop
loopne
or
sbbb
or
push
roll
cmp
je
lock
aam
sbb
pop
aas
adc
mov
clc
out
cmp
loopne
cmp
divb
cmp
mov
cmp
xchg
hlt
shll
xchg
mov
xchg
aad
pop
js
aaa
enter
add
push
shlb
cmp
jp
bswap
fnstenv
shll
or
ror
jp
jmp
inc
insl
lods
inc
pushf
loopne
ret
adc
cmp
bound
push
sti
addb
push
shrl
cmpsl
add
adc
jg
mov
es
loopne
lods
mov
loop
stos
and
mov
adc
inc
sub
and
test
neg
xchg
and
and
js
aad
int
outsl
add
push
and
push
xchg
jae
dec
pop
sub
xchg
mov
out
cmp
mov
xchg
jnp
adc
xchg
adc
add
jl
add
ret
or
stos
outsl
xchg
les
push
inc
in
call
pushw
or
adc
rolb
pushf
outsb
out
cmc
jb
or
mov
push
push
movsb
mov
xor
fidivrs
pop
dec
sub
js
fstl
shll
or
movsb
jbe
mov
adc
xchg
pusha
scas
cwtl
fnstsw
sbb
push
les
bound
or
pop
arpl
shrd
aaa
sahf
mov
repnz
adc
mov
or
test
and
xchg
push
adc
add
je
in
lock
mov
mov
fsubl
jbe
sub
loop
call
lcall
daa
jg
push
mov
ljmp
fnstenv
jnp
or
or
sbb
into
jnp
add
iret
fcomps
rorl
stos
sbb
push
sub
mov
sub
inc
mov
and
adc
jo
inc
stos
fbstp
xchg
repnz
in
test
shll
push
andb
jo
subl
mov
xchg
xchg
cmp
push
sarb
or
inc
sarl
mov
dec
idivl
and
repz
orl
dec
pop
pop
pop
ret
lahf
lods
push
and
data16
fdivl
pop
or
sub
fdivrl
and
adc
test
cmp
and
xchg
mov
sub
adc
pop
hlt
adc
jne
dec
lods
dec
aad
rol
adcl
dec
push
in
cld
and
fsubl
sbb
mov
and
mov
xchg
loop
jp
test
cmp
fiaddl
call
insb
movsb
xchg
or
jmp
jne
xchg
movsb
mov
movl
xchg
cs
cmp
mov
jg
lock
gs
inc
sbb
inc
xchg
inc
mov
clc
movsb
pop
xchg
in
adc
and
xor
pop
inc
xchg
lahf
mov
or
dec
or
test
cmc
movsb
push
mov
into
movb
adc
jp
mov
push
stc
icebp
stos
or
dec
sub
es
mov
lock
dec
mov
lret
adc
out
pop
notl
pop
cli
ss
movsb
xchg
into
scas
dec
mov
dec
or
aas
push
shrl
adc
xchg
dec
jmp
mov
inc
clc
in
xchg
pop
sub
stos
xchg
add
std
in
and
and
fisttpll
add
sbb
mov
xchg
pop
xor
or
and
fsts
loop
pop
addl
mov
loopne
sub
xchg
inc
adc
adc
pushl
aaa
add
and
mov
clc
addb
shr
mov
test
mov
sub
inc
into
xor
mov
cmp
mov
cmp
and
pop
jg
and
inc
or
sub
jns
lock
add
mov
mov
loope
shr
push
loopne
cmc
mov
push
movb
mov
or
or
push
es
fwait
mov
fcomps
imulb
mov
inc
or
dec
add
or
adc
xchg
decb
dec
pop
loopne
or
loope
out
aas
imul
fcmovb
cmc
out
inc
mov
xchg
dec
pop
mov
adc
lods
pop
les
pop
test
js
ljmp
cmp
lds
rcll
mov
or
pop
negl
push
sahf
fistps
adc
add
mull
pop
loop
shrb
clc
cmpsb
sbb
enter
inc
pop
shll
jl
sub
push
ss
ss
icebp
nop
push
pushf
xor
sar
sub
cmpsb
movd
pop
or
mov
icebp
mov
adc
enter
orb
push
and
unpckhps
cwtl
jp
ret
fiadds
loopne
dec
fucomp
mov
aam
pop
jbe
clc
les
inc
push
orl
push
cmp
shll
aaa
add
fcompl
stos
addr16
xor
ret
mov
fisttps
xchg
int3
sbb
scas
push
jge
ret
pop
mov
jge
add
xchg
movsl
test
pop
mov
xchg
sub
push
pop
jecxz
lods
adc
add
fstl
fisubrs
mov
xchg
ljmp
movsl
xchg
divb
xchg
cmp
pushf
xchg
enter
or
mov
test
addr16
pop
or
mov
aas
imul
inc
dec
push
ficompl
test
lret
cli
adc
mov
pop
xlat
xchg
pop
cmp
pop
push
mov
stos
push
cmova
ds
mov
jne
scas
add
jmp
jo
inc
popf
jmp
jge
xor
jae
fbld
or
inc
add
imul
pop
jb
or
adc
push
inc
movsb
mov
jmp
shrb
jb
mov
mov
sbb
jle
daa
push
ret
cwtl
mov
push
rcll
mov
inc
and
sti
jnp
mov
push
rolb
scas
mov
arpl
pop
mov
aad
test
push
hlt
jmp
jns
jecxz
cmpsb
or
rcr
mov
sub
cmp
xchg
ljmp
pop
sub
in
jae
lcall
sub
pusha
xchg
je
add
aam
lods
hlt
xlat
mov
call
rclb
and
mov
hlt
data16
sub
jmp
xchg
and
cli
mov
cmpl
insl
stos
fs
mov
add
js
aad
lods
scas
aas
lcall
lods
dec
jecxz
call
or
xchg
push
dec
inc
popa
sub
inc
xchg
mov
and
push
imul
icebp
and
adc
push
lock
xchg
xor
xchg
enter
add
jo
or
mov
xor
inc
adc
sbb
loope
scas
movsb
inc
sbb
pop
and
fcmovu
js
fs
push
movsb
add
jecxz
insb
movsb
mov
lock
ljmp
roll
icebp
roll
das
and
mov
jne
loop
push
xor
mov
out
pop
daa
bound
pop
jg
dec
imul
enter
icebp
xor
int3
add
or
les
xor
mov
or
pop
das
add
or
pop
insb
cs
mov
mov
mov
cmp
stc
mov
subl
movsl
hlt
and
ss
or
in
fbstp
push
notb
movsb
jl
test
lret
sub
sbb
rdtsc
jno
pop
cmp
jp
loopne
test
mov
mov
mov
inc
sub
dec
adc
adc
pop
mov
clc
dec
test
stos
push
es
stc
push
cmp
in
insl
in
leave
mov
mov
push
xchg
mov
movb
or
adc
cmp
xchg
cmpsl
adc
push
cmp
xor
and
in
outsb
cmp
scas
mov
sbb
scas
inc
out
jo
push
jne
mov
push
fwait
ja
jno
movsl
add
aas
lock
mov
std
les
sub
dec
cmpsb
push
cmpb
xor
rcl
nop
push
sub
test
mov
mov
lock
push
pop
fstpl
cld
mov
and
repz
xchg
push
or
shll
loopne,pn
cmpb
mov
pop
lock
pop
push
jbe
pop
mov
mov
and
daa
push
sti
cmp
out
nop
push
add
pop
ja
stos
sub
xchg
add
mov
adc
sub
and
mov
add
ljmp
pusha
mov
xchg
push
mov
mov
cmp
mov
and
out
cltd
cli
dec
cld
mov
or
cmp
cs
cmpsb
xor
add
sahf
shll
xor
nop
out
jl
out
adc
xor
pop
or
jo
add
xchg
pop
xchg
je
rolb
mov
loope
sub
ljmp
or
imul
out
push
int
das
lock
scas
sub
les
add
xlat
rcrl
mov
jg
or
arpl
push
or
add
add
mov
sbb
bnd
adc
les
daa
lods
add
out
hlt
mov
mov
sbb
push
jmp
inc
mov
and
cmp
jmp
ss
mov
ja
nop
adc
dec
add
cli
push
pop
pop
mov
mov
mov
rcll
sbb
push
and
cmpsb
xchg
imul
iret
cli
cmp
jnp
out
cs
add
jae
and
aaa
sbb
mull
ja
inc
insb
mov
outsb
scas
push
xor
ja
leave
js
pop
jo
loope
or
push
nop
inc
insb
sub
pop
popa
add
rcrl
les
ret
and
xlat
xor
mov
cmpsb
es
loopne
or
adc
or
in
mov
aam
mov
sbb
fsub
sub
push
add
mov
push
inc
sbb
frstor
ud0
mov
sbb
sbb
sbb
push
xchg
into
cs
jle
ficomps
lcall
fildl
jle
out
add
scas
rcl
loope
pop
aas
or
sub
jne
je
pop
lret
and
leave
shlb
setbe
fisubrl
shrb
scas
jb
dec
mov
jge
sahf
or
into
or
push
stos
mov
sbb
les
pushf
lds
xlat
daa
stos
les
lods
xchg
inc
loopne
or
cli
adc
jbe
and
or
cmp
rolb
call
mov
test
jbe
loope
nop
mov
hlt
aas
popa
push
lcall
bound
and
xchg
xor
lods
mov
jne
sbb
cmc
mov
mov
rcrl
xor
xor
push
scas
fsubs
in
sbb
pusha
jae
mov
cmp
dec
jg
cwtl
add
mov
mov
jp
aam
sbb
dec
and
or
mov
testl
lods
call
mov
fucomp
mov
stos
inc
popf
pop
icebp
in
mov
shrb
mov
pop
push
xlat
nop
and
pusha
and
jmp
inc
mov
fwait
ret
fwait
inc
rol
outsl
rorb
mov
fistps
push
dec
mov
or
imul
nop
loopne,pt
xchg
jb
rorl
ret
scas
mov
sbb
stos
cmp
loop
inc
ds
inc
push
test
adc
mov
call
pop
xchg
pop
and
add
clc
xchg
add
out
or
ret
das
and
or
std
sti
loope
xchg
incb
or
inc
mov
mov
filds
rorb
test
pop
or
add
leave
ss
lcall
push
add
outsl
and
or
stos
out
arpl
fcomps
pop
fs
dec
icebp
jae
lods
pop
push
lcall
adc
fdivs
insb
push
bound
insb
mov
jno
gs
les
bound
sub
jg
xor
aad
rcrl
imul
sub
mov
add
xor
outsb
xchg
clc
cmp
and
jp
mov
cmpsl
andb
sbb
movsb
rcrb
lods
mov
push
push
push
ret
add
je
shll
shrb
or
jne
ja
imul
jmp
jg
std
cmp
pop
cwtl
call
inc
pop
mov
pop
aam
inc
mov
pushf
and
mov
repz
int3
movb
fcompl
lock
mov
mov
or
dec
add
push
dec
sbb
movsb
adc
divb
push
insl
hlt
adcl
aaa
pop
scas
push
adc
nop
mov
hlt
test
aam
test
insb
mov
insl
fs
movsb
icebp
andb
mov
rcl
fcmovu
mov
pop
bound
imul
insb
dec
enter
arpl
push
xor
or
int
popa
rclb
xchg
int
mov
sub
mov
insb
cli
faddp
jmp
xlat
or
sbb
mov
dec
je
mov
xor
adc
subb
rol
cmpsb
mov
inc
cltd
imull
sub
xor
push
dec
sarl
icebp
jle
push
test
addl
mov
pushf
int3
dec
dec
add
dec
stos
lods
add
inc
fmul
outsb
xor
ss
cmp
or
lock
sarb
outsb
test
cmp
jae
cmp
jae
lret
aaa
mov
into
stc
pop
scas
mov
sub
mov
and
popf
add
test
inc
pop
sub
dec
and
mov
dec
mov
xchg
call
addr16
xchg
cli
cmpsl
pmullw
inc
push
incb
add
ljmp
mov
and
dec
add
dec
xchg
push
jecxz
pop
cmovle
inc
inc
pushf
mov
cld
mov
into
adc
inc
inc
loop
pop
rcrb
je
cmpsb
imul
enter
mov
cmpsb
lahf
outsb
clc
cmpb
xor
xchg
dec
mov
sub
mov
xchg
dec
inc
enter
outsb
inc
push
je
cmc
or
repnz
adc
add
mov
sub
pop
sbb
xchg
int
dec
add
push
std
loop
push
lock
xor
adc
fadd
add
je
scas
shll
shlb
ljmp
movsb
pushf
push
jp
jmp
ret
jb
stc
ljmp
xchg
es
and
sub
je
lods
push
mov
arpl
aaa
xor
mov
js
cwtl
jno
jnp
add
shl
add
ss
mov
loope
fdivs
insl
addr16
jp
xchg
xchg
dec
adc
sbb
push
and
mov
decl
popf
icebp
mov
imulb
jecxz
repnz
adc
sarl
or
stos
bound
mov
sub
jb
inc
sti
sbbb
push
adc
test
aad
test
call
mov
aaa
or
lds
daa
xchg
mov
cwtl
shrl
adc
push
or
test
add
pop
js
bswap
es
jle
mov
xor
jbe
adc
adc
mov
into
jp
sub
dec
mov
mov
les
jp
mov
inc
test
dec
movsb
cmp
dec
pop
pop
shrb
sahf
jp
fnstsw
and
ret
ret
ret
lcall
lods
pop
in
cmp
repnz
jg
sbb
sub
pop
sbb
push
pop
sbb
das
insb
mov
insb
mov
push
orb
inc
cmp
mov
inc
mov
dec
pop
lret
cltd
jecxz
ljmp
sahf
loopne
push
lcall
idiv
and
call
mov
inc
pop
inc
xchg
adc
push
loope
mov
adc
inc
in
daa
enter
push
add
xchg
lods
je
sub
out
jl
imul
mov
pop
inc
push
cmp
pop
or
fcompl
std
inc
adc
cltd
add
cmp
cmp
clc
jl
ret
andb
sahf
and
fwait
std
or
outsb
clc
add
and
ljmp
lods
mov
mov
adc
ja
add
xor
stc
or
and
sti
fistpll
addr16
pop
cld
mov
push
testl
popa
xchg
xchg
push
push
mov
xor
cmp
or
inc
or
enter
sbb
cmp
ret
mov
fs
xor
loope
inc
sbb
lds
jl
mov
ret
pop
imulb
incl
hlt
fcoms
xchg
xchg
enter
into
or
lock
or
push
dec
mov
push
pop
in
mov
and
pop
pop
fs
lcall
adc
daa
dec
decl
aad
dec
adc
addl
mov
cmp
jno
xor
enter
or
jmp
hlt
mov
into
cltd
pop
movb
xchg
pop
pop
lock
push
cli
add
lock
mov
test
and
lods
fildll
xorps
inc
add
lea
sahf
js
pop
jle
xchg
jge
sbb
repnz
dec
fimull
dec
xorb
cmp
daa
jg
out
jo
jmp
mov
xchg
pop
sub
std
xchg
cmc
xchg
cmp
xor
shrb
push
int3
pop
adc
mov
das
movsb
mov
loope
cld
jle
lea
ret
psrad
or
call
pop
shll
mov
outsb
lods
scas
xchg
sub
lock
pop
inc
inc
call
popa
and
xchg
cmpsl
movsb
jl
mov
push
mov
mov
xchg
sbb
sub
rcl
inc
fisubs
test
test
inc
je
mov
xor
inc
popf
enter
cmp
pop
shrb
xor
js
bound
add
xchg
or
cmp
clc
xchg
dec
adc
push
dec
pop
outsl
clc
mov
inc
fcompl
push
fstpl
push
add
stos
fidivl
or
rol
je
adc
sub
xor
push
sbbl
or
push
sub
or
pop
and
lods
movsb
push
les
jp
inc
mov
lock
fadd
lret
and
pop
cmp
mov
inc
add
jmp
jmp
sbb
ret
movd
out
mull
jge
scas
sbb
repz
ss
rorl
fistpl
int3
mov
std
in
jl
hlt
sub
lret
fs
js
sub
js
inc
push
sub
std
and
cmp
fmull
imul
jecxz
rorb
int
inc
dec
pop
xor
and
test
mov
lock
push
add
push
shll
add
mov
xchg
js
into
mov
xor
push
movsb
dec
add
mov
mov
jae
pusha
adc
scas
cmp
pop
jp
push
les
loopne
push
dec
mov
nop
push
fadds
and
ret
nop
test
das
push
stos
leave
mov
ss
enter
std
sbb
in
or
rorb
pop
jb
mov
mov
loope
push
mov
sbb
cltd
add
add
push
ljmp
stc
mov
adc
std
cs
nop
mov
sahf
or
decb
mov
xchg
add
test
or
lods
jmp
xor
or
mov
stc
movsb
cli
movsb
testb
dec
pop
add
pop
lods
jne
loopne
mov
jo
lock
jbe
imulb
test
add
aas
inc
jb
ljmpw
mov
push
shlb
xor
ret
xor
pop
pusha
mov
push
test
and
lock
addl
jle
fcoml
ljmp
mov
and
adc
jle
or
fcoml
or
jge
pop
sbb
ljmp
jge
rcll
jb
add
push
loopne
add
mov
xor
mov
xchg
out
loope
shrl
loop
out
aaa
outsl
insl
arpl
and
push
lahf
gs
push
mov
ret
xor
cmp
daa
and
aad
or
mov
adc
add
jg
mov
sbb
lret
or
fcoml
popl
inc
imull
call
xchg
xchg
mov
pop
ljmp
and
dec
je
ret
mov
sub
scas
push
loop
mov
sub
out
orb
inc
mov
mov
shl
jg
mov
xchg
loope
gs
xchg
dec
jnp
push
sbb
or
jle
cs
jp
hlt
xchg
dec
cmp
push
popa
test
adc
xor
sub
popa
outsb
push
add
lods
and
mov
das
sbb
inc
test
jo
nop
stos
mov
packssdw
sub
push
dec
mov
hlt
mov
adc
pop
test
pop
mov
cmc
pop
test
mov
incl
add
repz
and
cmc
je
sub
iret
xchg
pop
mov
and
and
fs
test
mov
mov
xchg
in
add
inc
add
cmpsl
mov
xor
inc
outsb
fdivp
adc
mov
loope
adc
mov
mov
adcb
test
and
and
ficompl
arpl
shll
je
mov
fidivs
and
xchg
sbb
xorl
inc
bound
nop
movsl
aas
sbb
les
mov
xorb
call
mov
sbb
mov
pushf
loope
repnz
cmpsb
jae
inc
mov
mov
mov
mov
loop
adc
cmp
adc
clc
mov
xchg
inc
stos
incl
add
aas
xlat
sbb
pop
ret
mov
pop
xor
call
or
fldenv
push
out
mov
pop
xchg
rcll
push
inc
sbb
cli
or
inc
js
mov
push
jge
inc
loope
imul
inc
inc
dec
in
pop
cmpsl
mov
or
pop
rorl
push
mov
in
xchg
pop
adcl
mov
adc
cs
cmp
fisubs
adc
ss
push
divl
mov
imul
dec
inc
subb
mov
aaa
cld
mov
and
mov
lret
test
push
and
push
mov
shl
addr16
std
lahf
int
mov
dec
sahf
sub
pop
jb
int3
stos
fisubl
mov
add
lcall
fs
cmp
mov
adc
fstpt
xor
push
sbb
add
sbb
idivb
add
pop
loope
xchg
adc
cmp
out
push
mov
xor
dec
xor
ds
ss
lock
push
inc
fisttpl
pop
sbb
clc
test
addb
shlb
push
inc
lods
xchg
push
aad
adcb
jl
hlt
and
pop
into
xor
call
in
test
adc
push
jb
push
mov
push
dec
sysenter
mov
dec
xchg
sub
adc
inc
movsl
add
rcll
add
push
cmp
cmp
fbstp
mov
imul
popl
mov
int3
mov
add
inc
test
ror
inc
mov
xchg
dec
dec
jno
scas
lahf
jp
adc
dec
pusha
jl
sbb
cmp
enter
scas
fs
mov
in
xor
mov
lods
mov
inc
aas
repz
add
push
lcall
je
and
stos
and
aas
loope
fisubrs
data16
fcompl
adc
ret
insl
mov
inc
stc
aaa
xchg
jo
test
testl
addb
xor
inc
rorb
cmp
or
sar
stos
icebp
lret
or
pop
repnz
pushf
mov
add
xor
mov
mov
mov
out
add
mov
push
cmp
inc
or
sbb
or
mov
push
call
dec
mov
xor
pop
addr16
adcb
ret
aas
jne
and
lods
xchg
lahf
dec
cwtl
sub
inc
add
push
js
test
sbb
iret
and
in
ret
push
or
mov
sub
inc
shrb
push
mov
pop
mov
sbb
mov
lock
fildl
clc
outsb
xorl
mov
cs
xchg
push
adc
and
pop
mov
push
mov
cmc
xor
lds
xchg
mov
push
enter
movsb
data16
pop
sbb
push
inc
inc
inc
xorps
cmp
insb
js
rorl
call
jp
adc
jb
or
rclb
aaa
ja
inc
daa
or
jnp
test
bound
inc
pop
cmpsb
or
iret
add
push
xor
or
sub
or
pop
cld
pop
push
and
addl
mov
mov
xor
loopne
hlt
cmp
xor
push
mov
fdivs
add
xor
mov
mov
daa
xor
xchg
out
add
jmp
in
add
lahf
cli
push
pop
shr
test
mov
out
out
xor
addl
loope
and
xchg
stos
arpl
fwait
mov
push
cwtl
fst
mov
lds
insl
scas
popa
cmp
js
push
ljmp
dec
into
lahf
jle
decl
adc
hlt
inc
loop
out
shrl
cli
dec
mov
fiaddl
aad
sbb
in
jp
mov
inc
cwtl
aad
mov
loopne
dec
ret
jecxz
pop
movsb
xor
pop
xor
mov
enter
add
mov
inc
movl
mov
movsb
or
aas
push
out
or
add
std
push
push
inc
dec
test
std
lods
jns
dec
dec
daa
xor
repz
iret
stos
sbb
call
inc
mov
aad
out
add
mov
cs
fisttpll
insb
out
loopne
xchg
andl
pop
test
xor
and
push
je
pop
jne
repnz
jl
and
fdivrs
mov
pusha
jmp
into
in
mov
movsl
mov
lods
mov
fwait
jae
lea
or
fdivl
in
lahf
xchg
aam
sbb
xor
in
cmp
xor
jbe
rolb
insb
lea
aam
push
pop
aad
pop
int
imul
mov
inc
push
pop
sbbb
add
jbe
push
push
or
mov
xor
add
pop
sbb
imul
lock
imul
mov
push
enter
push
dec
pop
test
test
int3
mov
jne
cs
dec
notl
and
jg
jle
sub
fisubrl
and
out
xchg
test
mov
lock
add
adc
inc
xor
lock
xchg
jecxz
push
mov
and
std
sbb
aam
shll
adc
and
mov
sbb
mov
les
pop
es
push
ret
dec
subl
cmp
ja
sub
push
hlt
addr16
pop
loope
andl
or
xchg
nop
dec
dec
jno
xchg
push
loop
scas
pop
ret
dec
xor
jp
and
jns
jmp
mov
ss
jecxz
pop
es
xchg
mov
out
push
mov
xor
negb
loopne
jns
cld
and
loope
mov
push
cld
cmpb
jo
xchg
mul
and
push
cld
add
test
jnp
ja
pusha
and
aas
movl
aaa
test
pop
jl
shlb
jp
rclb
test
ljmp
icebp
mov
pop
cli
inc
shlb
cmp
cs
jl
cmc
addl
mov
add
aas
repz
adc
and
mov
sbb
cmp
clc
add
jp
aam
add
nop/reserved
dec
or
sbbb
lock
mov
std
lods
sub
lock
fadds
mov
mul
sarl
mov
add
mov
fdivrl
pop
mov
sbbl
arpl
lcall
xchg
movsb
test
stos
push
sti
or
mov
rcll
pop
adc
cli
divb
push
sub
enter
stos
jmp
adc
test
call
jo
sar
hlt
mov
xorb
aas
mov
sub
push
and
dec
pusha
lock
rolb
adc
out
dec
jnp
popa
cld
and
push
push
out
xchg
sbb
push
movsl
mov
out
mov
cmp
ret
jo
js
mov
add
jno
scas
dec
mov
in
popf
fcomp
loop
shrb
inc
rcll
cmp
sub
push
fldcw
sbb
or
and
cmp
arpl
inc
sbb
push
adc
sub
lahf
xor
jmp
inc
inc
pop
sbb
jae
xchg
inc
mov
or
test
fsubs
jae
mov
pop
mov
jle
jns
cmp
or
cltd
mov
movsl
test
insb
in
xchg
adc
call
pop
jb
inc
xchg
mov
shrb
aas
movb
mov
lea
cltd
push
test
mov
and
aas
shr
scas
pop
idivb
push
mov
push
aad
push
or
jno
xrelease
iret
or
or
inc
int
mov
jno
cmpl
ret
mov
inc
shr
xchg
loopne
movsb
push
jnp
jecxz
add
in
dec
sar
add
loopne
test
movsl
inc
shrl
pop
mov
in
and
sbb
cwtl
hlt
cmp
jle
loop
outsb
adc
lea
cli
xor
fwait
sbb
inc
in
pop
ljmp
loope
add
loop
xchg
add
shll
nop
mov
outsb
js
ljmp
sub
out
jb
push
xor
addl
lods
lea
xlat
and
or
mov
mov
pop
and
pop
fsts
mov
pop
sbb
push
lret
mov
stos
test
ja
sub
or
or
daa
testl
loop
cld
movswl
inc
sub
in
sbb
mov
adc
inc
xchg
cmpsb
test
loope
adc
gs
adc
ficompl
aas
sub
cmp
loop
xor
fsubrs
loop
sbb
push
imul
cmpsl
mov
jmp
adc
xor
push
push
mov
mov
add
adc
add
bound
dec
icebp
dec
test
es
sbb
jns
xchg
sbbl
or
das
stos
dec
dec
or
sbbb
pop
test
repnz
fimuls
pop
push
aaa
outsl
in
xor
jg
shll
add
stos
adc
outsl
nop
icebp
in
nop
mov
cmc
insl
push
mov
mov
lret
je
dec
push
mov
inc
push
fs
ret
cmp
jb
test
lea
pop
lods
jo
jp
mov
fs
xor
fildl
jg
hlt
imul
out
mov
pop
int3
call
addr16
cmpsl
mov
dec
pop
mov
les
nop
mov
hlt
xor
jg
cmp
dec
mov
adc
xchg
mov
inc
adc
sub
repz
int3
mov
cmc
inc
or
sub
shrl
add
repz
shlb
pusha
gs
imul
js
in
ja
int3
cli
jle
sarl
rol
fidivs
mov
into
jecxz
inc
sarl
sub
lea
pop
jo
aad
xchg
inc
cmp
test
inc
add
cld
push
adc
adc
inc
stos
and
xchg
inc
ret
adc
cmp
fbld
rcrb
or
push
jne
hlt
fbld
jmp
aaa
dec
test
mov
pusha
lods
inc
shll
repnz
lods
xor
push
sarb
enter
cmpsl
pop
pop
popa
adc
sub
pop
cmpl
lock
addr16
cwtl
push
pop
inc
sbbl
adc
pusha
mov
jo
mov
hlt
pop
pop
and
xchg
mov
sub
pop
popa
xor
cmp
add
push
pop
push
cmpsb
mov
dec
cmc
add
imul
mov
adc
and
jo
and
dec
test
fisubs
jge
push
add
js
and
fcomip
and
push
insb
insb
cmpsb
xor
std
inc
rcrl
mov
pusha
outsl
adc
sbb
push
lock
pop
jl
int
add
pop
mov
loope
mov
push
decl
and
add
mov
add
pusha
mov
add
push
add
adc
test
add
mov
call
inc
dec
and
add
add
mov
in
mov
std
pusha
orb
add
xchg
and
inc
dec
inc
sub
push
adc
or
mov
in
inc
adc
pop
or
nop
adc
pusha
mov
add
push
test
fistl
add
or
nop
adc
sub
inc
sub
fildll
mov
nop
and
xor
inc
add
clc
or
andb
add
or
nop
or
adc
faddl
std
mov
xor
dec
repnz
and
add
add
xor
in
mov
inc
fidivl
push
jns
add
outsb
insl
add
add
push
add
bound
and
iret
in
jge
pushf
or
ret
cmp
outsl
fdivrp
imul
inc
add
insb
add
mov
ror
mov
and
hlt
sbb
push
jae
add
sahf
mov
dec
mov
cmp
mov
inc
or
mov
ss
out
add
and
aaa
sub
jmp
mov
xor
mov
unpckhps
xchg
int
ja
ljmp
neg
pop
fists
add
mov
out
loop
popf
push
push
or
add
fs
adc
and
mov
stos
add
dec
pop
popa
xchg
add
sub
pop
mov
ret
add
add
pop
sbb
add
or
xchg
in
jge
ja
repnz
pop
or
inc
or
jle
add
or
xlat
mov
lahf
jp
push
mov
aas
xlat
std
outsb
add
incb
and
lea
fwait
in
mov
js
add
dec
mov
mov
adc
pushf
aam
jo
fcmovu
sbb
mov
add
mov
loopne
pop
es
mov
or
out
sbb
xchg
out
add
or
pop
push
pop
jl
or
xchg
dec
ret
pop
sbb
jmp
imul
sti
cmp
xor
jle
dec
xor
mov
dec
movsl
add
into
sbb
dec
pop
pop
and
cmpl
cmp
jne
insb
leave
jmp
cmp
es
aam
jmp
clc
xchg
jo
call
stos
daa
sbb
or
pop
imul
add
aaa
pop
add
push
rolb
inc
sub
lods
jp
daa
push
std
adc
ja
jns
adc
loope
or
and
dec
sub
sarb
push
xchg
xchg
xor
cs
pop
sti
add
sub
jmp
into
add
add
add
add
inc
lods
mov
cmp
cmp
lahf
jne
lds
and
mov
mov
xlat
lahf
add
scas
in
clc
ss
clc
sub
movsb
mov
sbb
ds
jb
xchg
jp
lods
js
add
lahf
sbb
mov
dec
mov
sbb
jns
inc
adc
popf
pop
xchg
mov
push
mov
scas
xchg
and
push
fstpl
stos
push
out
cli
pop
lret
cmpsl
or
test
push
push
mov
xorl
or
roll
jle
push
jl
call
mov
dec
add
fiaddl
aam
jmp
or
adc
sub
jecxz
pusha
insl
imul
mov
inc
mov
cltd
sbb
lds
mov
push
xchg
sub
scas
cmp
pop
and
jo
cmp
and
not
pop
inc
push
add
or
add
mov
add
mov
xchg
or
cmp
movsl
pop
mov
add
pop
mov
movb
ficoml
cmp
gs
outsl
push
sahf
leave
lock
jo
jmp
aam
mov
push
pop
add
push
imul
cmp
jnp
inc
cmpsl
or
ljmp
jno
and
loope
subb
shrl
push
data16
dec
dec
xor
mov
dec
in
or
adc
clc
mov
cmp
lods
out
cwtl
pop
add
inc
or
sti
mov
add
test
sub
add
rcl
adc
loopne
push
ss
dec
fists
daa
jge
lock
jo
and
pop
int3
dec
addr16
cmp
clc
sbb
dec
inc
jae
frstor
mov
xchg
test
dec
jb
mov
add
pop
inc
add
mov
jp
call
or
and
sbb
inc
xchg
and
jns
push
lcall
test
lods
push
lock
push
ja
pop
add
add
lea
stc
ret
ficoml
sbb
or
and
or
or
inc
lods
fidivs
add
add
popf
xor
rcll
inc
xchg
das
das
fs
dec
add
fimull
ja
sub
addb
jle
les
push
pop
mov
push
jae
sbb
mov
jmp
and
jmp
push
hlt
jge
shlb
push
inc
aas
add
add
mov
imul
dec
stos
mov
mov
pop
sbb
sbb
sub
test
mov
push
xor
insl
aas
jg
fidivrl
push
mov
push
in
dec
sahf
push
adc
ret
outsl
mov
dec
sbb
mov
sti
add
mov
xor
mov
lcall
ja
imul
jmp
adc
xor
test
push
add
cmp
mov
push
sbb
adc
mov
jnp
hlt
jnp
push
ficoms
add
adc
sarb
pop
dec
cmp
cltd
scas
sub
and
popa
rcrl
cmpsl
scas
dec
and
test
fstpt
mov
cwtl
adc
loopne
push
jmp
lahf
imul
xor
sub
int
movsl
sarb
add
xchg
push
jmp
pop
aam
test
push
inc
in
repz
cmp
push
xor
cmova
pop
or
es
gs
test
pusha
les
jle
mov
xchg
pop
or
push
call
stos
rorl
sbb
mov
sbb
test
inc
inc
cld
dec
mov
xchg
sub
psubb
cmp
and
jbe
adc
push
adcb
jno
in
das
adcb
shr
mov
iret
xchg
jle
mov
stos
bound
add
ja
mov
jo
dec
daa
pop
mov
fdivrp
pop
mov
push
adc
adc
mov
adcb
pop
arpl
ss
adc
xchg
inc
pop
sbb
jg
or
clc
sbb
pop
bound
add
movsl
pop
stc
jbe
test
cmp
adc
mov
sbb
mov
add
pop
xor
or
add
add
loop
xchg
jns
rclb
cltd
daa
mov
pop
jno
dec
iret
xor
inc
cmp
mov
and
shr
imul
data16
lcall
mov
bound
inc
xorl
cmp
lcall
or
jo
fwait
loope
sub
shlb
mov
dec
sub
xchg
inc
shlb
nop
push
rorl
add
sbb
xor
pop
cld
shll
mov
push
cmpsb
cmp
push
push
add
stos
sti
jecxz
arpl
sub
lods
ret
dec
sbb
fmul
mov
into
xchg
ss
push
bound
pop
jecxz
adc
in
test
outsb
fdivrl
adc
addl
dec
push
movsb
inc
push
mov
mov
sbb
das
push
gs
add
push
ret
cmp
pop
in
outsb
pop
xchg
jb
icebp
jp
jbe
adc
jecxz
test
xor
imul
fiaddl
push
sub
stos
fisubrs
pop
les
cmp
test
pop
cmp
cld
imul
out
jno
scas
xchg
scas
pop
push
jb
add
rclb
inc
and
or
inc
jo
add
rcr
sbb
xor
xchg
xchg
jp
mov
or
in
cmp
stos
dec
stos
lret
sbb
bswap
mov
das
jle
jae
imul
adc
cmp
push
clc
sti
adc
mov
aad
scas
cmpsb
inc
push
arpl
adc
sahf
roll
daa
dec
add
enter
pop
aas
pop
mov
adc
fdiv
cmpsb
xor
cli
sbb
les
cwtl
inc
and
cmp
push
vmovaps
enter
test
repnz
mov
mov
fcompl
dec
addb
push
pop
ficompl
inc
jp
lds
xchg
hlt
daa
mov
call
add
ds
or
jae
jne
insb
mov
movsb
and
stc
adc
cld
jno
mov
mov
jl
mov
pop
ds
mov
pop
fldl
fmuls
repz
sub
test
icebp
pusha
pop
std
add
add
jmp
xor
hlt
sbb
pusha
inc
andl
mov
cmp
push
das
sub
ds
movl
sbb
push
imulb
or
fs
pop
sub
xor
test
cltd
cmp
dec
inc
ret
mov
into
jno
push
xchg
jp
jne
stos
mov
rorl
je
js
mov
repnz
pop
rcr
adc
stos
xchg
test
clc
pop
lds
aaa
sahf
xchg
lret
das
cmpsl
jmp
or
call
in
and
sbb
dec
jbe
adc
mov
sahf
cld
pop
movsl
dec
cli
jne
push
xor
add
dec
das
movsl
push
cmp
loop
pop
lea
inc
add
pop
pop
ss
gs
ret
and
mov
mov
xchg
xchg
cmpsb
push
cmpsl
dec
or
leave
mov
cld
push
dec
das
sub
and
lock
mov
rcll
pop
arpl
inc
xor
arpl
fcompl
push
fwait
inc
fcmovb
pop
push
ret
iret
pop
test
mov
jbe
add
mov
pop
outsb
call
jb
and
call
mov
cmc
add
addr16
dec
mov
lds
icebp
mov
cmp
pusha
divb
or
sub
sbb
mov
pop
pop
nop
int
rclb
or
cmp
adc
int3
in
push
aaa
pop
jb
xor
pusha
and
rcrl
ficompl
inc
int3
pop
popa
or
lods
push
lock
jecxz
or
push
and
cs
xor
mov
pop
arpl
and
loopne
data16
sub
push
sub
add
or
or
icebp
aam
cwtl
test
jle
xor
adc
adc
arpl
aad
aas
gs
nop
pop
call
or
mov
out
pop
fstl
and
pop
pusha
test
es
xchg
xchg
xchg
sub
scas
sbb
scas
pop
sub
rorl
outsl
jg
sub
add
push
push
shll
push
lock
adc
add
and
pop
xchg
loop
loope
mov
inc
cmc
inc
pushw
ljmp
xlat
sbb
add
pop
call
pusha
decb
inc
pop
loop
clc
push
sbb
insb
lea
cmp
js
lock
push
hlt
daa
mov
mov
inc
add
aad
or
mov
test
lahf
lcall
xchg
lahf
mov
lock
mov
push
loopne
or
jo
dec
cmp
mov
cmp
push
or
dec
jle
mov
jne
mov
lret
push
std
orb
cmp
rorl
out
mov
or
cmp
dec
je
lea
xchg
push
inc
leave
lock
dec
or
out
loope
inc
clc
mov
xchg
lret
sbbb
cmp
lock
xor
cmpb
inc
push
pop
xchg
cmpb
ret
adc
push
mov
inc
int3
dec
push
scas
or
dec
mov
cmpsl
subb
mov
inc
popf
cmp
repz
std
ss
outsb
and
cmpsb
xor
sbb
mov
inc
push
cmpb
fdivrs
inc
stc
sarb
fxtract
mulb
xchg
push
dec
cli
in
mov
ds
subl
dec
mov
imul
push
cld
rorb
pop
subb
cltd
mov
outsl
cmp
idiv
fwait
adc
cmp
push
dec
add
lods
lea
push
xor
inc
pop
push
dec
or
push
loop
or
das
pusha
in
pop
enter
fisubrs
icebp
adc
cld
sahf
add
pop
stc
jmp
lea
pusha
hlt
test
cmp
in
dec
rcrl
lock
rolb
fimuls
rclb
orb
xor
mov
cld
mov
add
fisubs
and
rcrb
pop
ljmp
push
mov
xchg
push
and
sub
dec
add
dec
js
cmp
cltd
pop
aaa
jecxz
pop
pop
adc
das
orb
iret
dec
out
jge
inc
mov
test
adc
inc
pop
js
add
imul
and
add
fdivrs
adc
cmp
por
and
test
inc
xchg
xchg
mov
pop
add
inc
pusha
mov
xchg
sub
movsl
lahf
push
hlt
clc
xor
scas
in
lock
add
push
pop
sub
mov
repz
sahf
sbb
mov
add
js
in
jne
imul
cs
inc
mov
popa
mov
jp
call
mov
sub
dec
adc
jns
adc
ret
sub
cmp
and
test
gs
pop
test
insl
push
mov
js
mov
mov
sahf
negb
imul
push
loope
shr
mov
mov
xchg
mov
mov
mov
mov
mov
cmpsl
inc
mov
and
into
loope
and
sbb
xchg
xchg
outsl
add
out
mov
loope
fwait
and
cmpsb
cwtl
shll
testl
mov
push
mov
push
lea
mov
fadds
cmp
aad
inc
out
adc
js
sahf
bound
or
test
lock
icebp
add
mov
or
or
sub
or
cmp
les
and
pop
cli
pop
ss
jecxz
les
out
and
jnp
gs
call
icebp
sbb
lahf
cli
sub
sbb
imul
test
sbb
shlb
pop
loop
bound
cmp
mov
insl
sbb
cmp
call
in
outsl
xchg
loop
push
jb
push
sbb
sbb
mov
cmp
push
and
out
mov
lds
add
pop
push
mov
push
mov
mov
push
shl
scas
std
sub
pop
std
sub
ret
inc
inc
nop
or
leave
jg
mov
mov
pop
movsl
fmuls
add
loopne
lods
lahf
or
pop
lods
or
stc
imul
inc
lock
idivb
ljmp
adcl
out
rcl
out
shl
addb
in
rcl
pop
aas
les
je
pop
add
lahf
jle
out
cmp
fwait
incb
sbb
nop
mov
sbb
or
mov
icebp
in
mov
sub
lret
in
inc
pop
dec
cmp
cmp
push
dec
pop
xor
ja
shr
xchg
loop
add
jae
incl
cltd
popa
sbb
ja
mov
int3
mov
imull
lret
jo
jae
jge
cmp
inc
dec
adc
negl
xor
push
fwait
push
bound
xchg
pop
lea
negl
fdivl
fbld
fcom
push
int
repnz
ljmp
das
inc
push
sbbl
push
cmp
vunpckhps
lcall
inc
fstps
aam
pop
jb
xor
cmp
mov
mov
push
push
xlat
push
inc
lahf
cmc
add
and
xchg
daa
jg
imul
arpl
mov
stos
rclb
sub
loopne
xchg
sub
xor
sbb
cmc
movsl
dec
mov
jmp
addb
xchg
sbb
lahf
jno
xchg
pop
mov
pop
in
inc
ret
xchg
ljmp
out
adc
movsb
mov
mov
and
fs
daa
fs
sarl
hlt
xor
inc
or
and
ret
jg
xlat
shll
adc
cwtl
push
jns
pop
popa
xor
int
cmpsb
cltd
mov
stos
xchg
ds
mov
test
xor
push
or
roll
adc
inc
and
mov
shlb
loopne
rolb
pop
loope
outsb
dec
outsb
mov
test
push
push
xchg
outsb
jle
orl
lods
out
adc
adc
dec
push
mov
cmpsl
xchg
lds
pusha
xchg
adc
push
mov
ret
sti
sarb
push
xor
testl
es
jg
or
add
push
push
in
push
stos
cmc
adc
cli
ficoms
arpl
jmp
je
sub
push
scas
push
jge
xor
mov
movsl
stc
cmpsb
inc
add
mov
pop
mov
rorb
mov
pop
pusha
stos
shll
push
inc
dec
mov
ret
sub
ljmp
push
sub
fimull
insb
mov
std
aam
mov
adc
mov
inc
faddl
pop
jl
jns
fsubrs
lods
inc
mov
ret
inc
push
cmp
pop
inc
in
js
push
jge
and
sbb
mov
sub
negb
out
loope
and
push
xchg
lock
jl
push
popf
mov
mov
and
lcall
push
lcall
scas
xchg
sub
jo
adc
add
xchg
in
mov
mov
loop
bswap
test
movsb
js
lods
xor
and
clc
push
add
dec
inc
mov
jle
scas
and
jmp
push
push
jp
sti
mov
jl
sub
xor
nop
sbb
add
push
mov
cmc
cmpsb
pcmpgtb
in
push
test
sbbb
xchg
or
js
aad
or
adc
lea
dec
nop
dec
push
adc
push
jnp
test
add
push
and
push
fmull
inc
dec
pop
dec
pop
addb
push
pop
xor
icebp
loopne
and
ds
xchg
jle
test
mov
ljmp
js,pt
push
xchg
inc
jno
in
push
das
pop
push
lahf
mov
push
lcall
dec
out
add
cmpsb
pop
xor
and
in
rcrb
fstpl
add
mov
sbb
push
mov
inc
jmp
cltd
jno
jb
xchg
xchg
mov
jnp
enter
push
sub
rorl
test
jp
cmp
lea
sbb
push
cmp
sti
test
sbb
test
cmpl
nop
in
jp
mov
cmp
cmpsl
lret
shll
pusha
lahf
aam
lret
js
in
adc
subb
mulb
cmp
in
push
int
sbbb
aam
pop
or
cmp
add
std
push
and
adc
cld
inc
or
push
adc
ja,pn
pushf
sbb
adc
or
sbb
mov
and
mov
mov
push
idivb
test
and
and
daa
stc
dec
jge
jns
rclb
add
or
adc
cli
hlt
ds
pop
mov
jecxz
inc
inc
pop
add
jl
dec
fildll
sub
nop
movsl
jl
mov
cmpsb
add
jo
inc
lret
insl
cmc
xor
push
adcb
xor
adc
xchg
divb
rcll
cmp
bound
ficomps
lock
ficompl
sbb
mov
lds
sbb
add
outsl
xor
mov
or
mov
adc
js
xchg
lahf
add
mov
adc
jbe
movsb
jo
jno
cmp
sbb
adc
sub
mov
sti
ficompl
cmp
fs
popa
sbb
shll
sub
push
in
sub
imul
fsubr
sbb
fimull
adc
dec
insb
xchg
fbstp
add
in
sub
mov
insb
je
enter
iret
adc
loopne
insb
push
sbb
into
sarl
jb
jecxz
pop
sbb
jmp
das
or
popa
adc
jle
je
add
push
pushl
nop
fnsave
or
ror
ret
and
mov
mov
mov
sahf
lock
sub
mov
imul
sbb
movsl
ficomps
pop
mov
jmp
js
push
sbb
pop
jns
xchg
aas
add
sti
and
incb
aas
jmp
push
fcoms
incl
fdivl
cmpsb
ret
nop
jb
lahf
sbb
dec
mov
cmp
stos
pusha
xchg
scas
clc
sbb
frstor
mov
xor
and
push
imul
mov
adc
add
dec
fcompl
jle
decl
sbb
xor
or
push
adc
mov
ds
and
lret
xor
cmc
mov
add
movsl
fisttps
jle
test
jo
dec
pop
mov
cs
xor
lret
shl
scas
jb
cmp
int
add
lcall
inc
pop
mov
mov
dec
mov
pusha
rcrb
or
insl
sub
cmpl
movl
push
push
jp
fnstenv
cwtl
fcomps
negb
mov
fcomip
gs
ds
cmovb
rorl
add
xor
imul
mov
jmp
jae
mov
pushf
add
data16
sti
scas
add
mov
sbb
or
xlat
cmpsl
dec
loope
aaa
rclb
jmp
xor
test
dec
inc
dec
repz
push
mov
call
mov
inc
and
jmp
jno
roll
insb
mov
adc
xor
jae
scas
fisttpl
lods
pop
inc
pusha
mov
pushf
sub
ret
push
sahf
popa
or
dec
mov
mov
mov
or
and
sbb
jle
fisubrs
pop
aas
mov
add
push
add
out
push
jge
xchg
mov
pop
popa
movups
int3
icebp
or
add
dec
jmp
lods
cld
shl
xor
lods
loope
loop
dec
sahf
mov
dec
inc
enter
mov
push
xchg
xchg
fidivrl
fst
bound
ds
in
test
cltd
std
std
leave
cwtl
ljmp
cli
cwtl
clc
push
ja
out
sbb
jecxz
dec
hlt
movl
rcrl
inc
mov
lret
call
inc
in
cmp
lds
stos
sbb
jb
or
test
xor
add
mov
lret
push
movsb
or
push
mov
dec
xchg
lock
adc
mov
mov
nop
pop
ljmp
shl
pop
jmp
icebp
insl
dec
mov
jl,pn
adcb
into
iret
add
lods
push
xor
cmp
xor
fiadds
and
push
cmp
into
jmp
lock
and
hlt
push
sub
jp
adc
popa
shrl
in
dec
jl
or
in
and
jl
scas
push
add
scas
mov
outsl
add
sub
inc
and
lret
or
out
mov
dec
dec
xchg
not
notb
icebp
pop
test
add
stos
xchg
movsl
ss
aaa
fnstsw
pop
pop
pushf
pusha
inc
adc
dec
inc
pop
jb
lcall
jno
inc
in
jo
imul
push
jmp
movsb
push
mov
add
inc
inc
push
xor
mov
xchg
test
loopne
sbb
inc
dec
push
sub
movsb
popa
cmp
add
ds
sbb
sbb
add
je
es
ljmp
dec
clc
cmpb
fwait
or
iret
jg
push
loope
lods
add
xor
shll
pusha
jp
lahf
call
adc
sahf
push
in
sub
aam
xor
lahf
jle
imul
dec
push
xchg
pop
pop
loope
fmuls
xchg
mov
mov
pop
and
add
jae
jp
mov
aam
cmp
xorb
loopne
aas
gs
or
sub
lock
jecxz
pop
int
push
sbb
xchg
movsl
arpl
sarb
xchg
inc
iret
inc
ss
scas
into
inc
sub
cld
jp
push
cmp
cmc
lret
int3
outsl
bound
insb
aam
dec
push
or
pusha
pop
rcrl
mov
rclb
mov
addb
cli
dec
scas
sub
hlt
ret
popf
les
add
mov
cmp
sti
mov
aas
shll
push
fbld
lahf
aad
ja
fisttps
xchg
scas
sub
nop
push
loopne
dec
mov
fsub
and
xor
pop
inc
mov
scas
cmp
and
xor
push
push
es
push
mov
data16
lods
push
imul
cmp
aaa
lock
test
scas
jle
adc
adc
push
mov
enter
scas
sub
je
ret
mov
mov
inc
ret
test
and
xor
xchg
cmp
nop
mov
out
or
movsl
xchg
ljmp
xchg
cld
in
not
fcmovbe
mov
stos
xchg
das
test
pop
popf
cmp
inc
xchg
andl
xlat
sub
sbb
and
push
hlt
popa
scas
sub
mov
std
inc
fisttpll
mov
xor
cmp
out
add
sub
pop
sub
rcr
nop
inc
jmp
inc
call
push
sti
adc
xor
jns
insb
stos
mov
in
mov
and
sbb
ja
jmp
cmp
sub
mov
add
adc
sbb
push
idiv
push
lahf
das
test
int
adc
lods
movsb
cmp
scas
cmp
dec
les
dec
push
mov
cmpsl
pop
in
lcall
stos
in
cltd
mov
rorb
loop
push
ss
int3
add
mov
sahf
cmp
shl
fidivrl
imul
fildl
cli
loope
scas
insb
andb
loop
ja
mov
popf
in
pop
insb
or
lds
inc
mov
jp
xor
xchg
and
call
jg
pop
sub
sbb
adc
bound
hlt
push
repz
adc
dec
adcb
mov
mov
pushf
js
int3
xor
leave
dec
stos
repz
and
mov
cmp
add
jle
lock
mov
cmc
fiaddl
add
dec
xorb
sti
ja
jb
add
fisubrl
or
xchg
push
inc
int
xchg
push
ret
clc
sti
aad
dec
insl
int3
out
stos
rorb
inc
adc
sbb
sbb
hlt
mov
lret
mov
sahf
test
pushf
and
movsl
add
mov
adc
jbe
cmp
test
inc
dec
inc
ljmp
cld
bound
mov
addr16
lods
hlt
jmp
in
sbb
jne
inc
fbstp
adc
sub
loopne
test
scas
jns
jge
pop
icebp
jne
jnp
popf
sbb
inc
scas
hlt
lds
xor
sarl
test
gs
and
add
cmp
pop
add
mov
fs
enter
pop
mov
jecxz
pop
push
dec
push
mov
push
pop
je
jbe
push
enter
sldt
arpl
je
xchg
cmpsb
je
jbe
or
add
dec
sbb
loopne
dec
mov
inc
adc
or
sub
and
lret
fistpll
inc
pop
dec
enter
adc
inc
ljmp
sar
imul
enter
pop
jbe
insl
cli
mov
push
xlat
out
sbb
mov
push
sub
sbb
test
ja
jo
xchg
or
lds
add
pushf
out
lock
inc
pop
iret
mov
iret
fidivrl
into
cmpb
fildll
jp
popa
stos
jl
faddl
jb
inc
imul
fdivl
ss
push
mov
testb
jns
adc
ficomps
lock
push
jg
sbb
rol
subb
sub
in
push
iret
cmc
xor
xor
mov
jnp
aam
xrelease
sahf
jecxz
and
xchg
sbb
inc
bound
xor
jecxz
dec
shlb
divb
sub
lock
pushfw
cmp
dec
cwtl
jmp
adc
jbe
loopne
out
hlt
push
test
and
add
outsl
mov
jmp
lret
dec
adc
ds
stos
jbe
jnp
test
mov
xchg
fmull
fbld
and
shrb
mov
pop
and
adc
in
xchg
push
add
call
cli
jne
mov
add
adc
xchg
jmp
pop
mov
in
data16
test
add
addr16
and
aas
mov
fwait
adc
fadd
or
xorb
add
test
repz
xchg
sbbl
arpl
add
jp
inc
cmpsb
jbe
cmp
addb
pop
shll
in
mov
leave
flds
hlt
pop
ja
pushf
mov
or
sub
rcl
mov
leave
cmp
cs
ljmp
push
test
aas
or
popf
inc
push
test
mov
lcall
subl
pushl
fimull
sbb
pop
call
push
add
into
popa
jl
adc
shrl
sahf
inc
cmp
push
dec
inc
popa
pop
ljmp
sti
idivl
cs
mov
pusha
mov
add
add
jo
dec
sahf
fistpll
pop
rcr
cmp
push
cmp
sub
or
adc
popa
add
imul
mov
pop
mov
and
js
or
xor
shrl
or
jle
or
inc
dec
je
xchg
xchg
lods
cmp
fs
or
popa
fisttps
pop
addr16
xor
rolb
adc
cmp
pop
push
insl
in
shll
mov
paddusb
push
jno
cmp
addb
mov
shl
push
add
xchg
jns
dec
cld
iretw
and
cmp
cmc
mulb
je
sbb
adcb
and
rcl
ljmp
push
loop
sbb
mov
rcrb
xor
outsl
sti
stos
xor
inc
mov
mov
push
adc
or
push
ljmp
inc
cmp
mov
jns
bound
dec
in
xchg
into
xor
sbb
stos
inc
sub
shll
sbbb
lock
add
xchg
pop
in
dec
fwait
and
mov
xchg
loopne
push
xor
adc
scas
sub
jle
js
cmp
into
int3
loope
and
popa
xchg
add
std
fldt
pushf
pop
loopne
adc
adc
mov
mov
cmp
dec
les
mov
les
sub
jmp
mov
pop
mov
into
and
mov
and
adc
dec
jb
test
mov
xchg
push
dec
rorb
sbb
mov
or
mov
lds
jmp
jle
cld
sub
adc
mov
xchg
and
fimuls
cld
mov
mov
scas
or
xor
mov
lahf
push
sub
jns
andb
mov
and
inc
ja
sbb
mov
aad
xchg
ljmp
out
dec
rcr
repnz
sahf
push
fcoms
pop
and
pop
push
mov
ljmp
pop
or
aad
iret
pop
mov
cltd
hlt
stos
or
out
stos
mov
mov
jmp
icebp
push
pusha
xor
push
dec
and
mov
mov
sub
imul
movsb
fisubl
inc
cli
scas
les
shrb
fwait
xchg
je
les
lahf
out
rol
adc
xchg
ret
dec
and
sbb
pop
push
push
cwtl
ret
in
adc
xchg
sub
ss
push
pop
ret
mov
mov
aas
cmovs
jmp
mov
pop
mov
out
pop
pop
stos
lods
movsb
add
data16
xchg
fisubl
fmuls
call
dec
push
xchg
ljmp
jmp
nop
in
gs
dec
or
lods
jecxz
jp
insb
movb
mov
mov
lods
hlt
ret
data16
mov
inc
pop
arpl
sbb
lea
loope
mov
cmp
stos
push
sub
loopne
or
push
hlt
nop
imul
add
cmpsb
icebp
sbb
cld
mov
cmp
popa
cwtl
push
xor
lods
adc
mov
je
sub
inc
lods
push
sbbb
pop
and
aas
mov
cmc
in
int3
inc
inc
js
js
and
xchg
cs
push
testb
xchg
aad
test
lcall
jg
outsb
ss
std
ficoml
bound
jg
sbb
repz
pop
dec
shrl
insl
cmpb
adc
xor
sbb
ss
xor
adc
mov
sub
les
shl
add
lea
jl
mov
push
loope
out
mov
mov
mov
sub
adc
xor
stc
data16
cmp
rorl
jge
sbb
dec
add
mov
and
sub
dec
push
xor
cmpl
mov
mov
loopne
fnstcw
mov
addr16
xorb
cli
cmp
or
ret
push
aam
inc
jne
lds
ret
pop
xchg
mov
loopnew
pop
je
loop
adc
add
lret
into
dec
mov
stos
js
js
mov
adc
jmp
mov
divl
add
fistpl
test
jbe
xlat
jo
sbb
ds
lret
and
pop
mov
and
aam
cmp
jnp
cmpsb
or
test
fidivrs
fs
and
push
push
scas
fisubl
xchg
and
lds
sub
push
lds
test
cmp
mov
and
ljmp
pop
nop
lds
jmp
daa
jge
mov
scas
mov
popa
sbb
enter
ja
pop
lret
ror
movsb
push
pop
jae
xorl
insb
sahf
decb
xchg
imul
ret
notb
dec
mov
cmp
push
jne
xchg
dec
subb
mov
orl
dec
pop
mov
cmpb
test
hlt
ret
ds
orl
jb
xchg
clc
aad
mov
mov
mov
lahf
test
test
mov
hlt
xchg
aaa
sbb
cmp
test
rcll
pop
add
or
and
loopne
pop
mov
inc
ror
aad
adc
mov
push
test
sbb
ds
dec
push
jne
call
pop
xchg
inc
fisubl
pop
sti
call
cltd
pop
fldl
sti
push
daa
sbb
nop
rclb
xchg
push
out
aam
mov
xchg
and
mulb
pop
cmpb
js
rclb
je
loope
xchg
mov
data16
shl
and
lahf
clc
push
cmp
jle
inc
cwtl
ljmp
ficomps
inc
mov
imul
mov
in
cmp
outsl
add
mov
sbb
cmc
pinsrw
out
mov
sbb
pop
cwtl
xor
lea
mov
cmp
loope
cmp
sahf
mov
inc
push
and
cmpsl
push
pshufw
daa
or
loop
ds
mov
push
dec
cltd
pop
shlb
sar
inc
jbe,pn
cmc
ud0
mov
ret
das
xchg
jo
adc
idivb
fstps
or
adc
addb
jo,pt
jmp
pushf
pop
mul
cmpb
sti
pusha
mov
ss
or
and
sub
jne
mov
inc
or
xchg
dec
mov
and
xor
pushf
jle
loopne,pt
inc
add
pop
movq
xchg
mov
sbbb
mov
jg
xor
cmp
jns
mov
and
inc
mov
and
std
fistpll
adc
xchg
jae
loope
dec
and
dec
and
push
out
sub
sbb
adc
in
out
add
push
dec
rcll
sbb
dec
cmpsl
add
and
cmp
xor
push
cmpsl
sbb
xor
pop
shlb
loope
in
into
sbb
imul
ds
repz
mov
xchg
push
cmpsb
cltd
outsl
sub
add
orb
pop
mov
push
jbe
dec
mov
xor
push
mov
rorl
dec
cmc
sub
repnz
insl
or
fwait
mov
inc
ffreep
cld
cwtl
pusha
rorl
in
pop
lret
jne
cmp
pop
jecxz
mov
fistpl
mov
mov
pop
mov
mov
scas
movsb
test
jl
push
call
cmp
push
xchg
mov
shrb
jnp
adc
jecxz
push
jge
lds
fwait
add
add
add
adc
jle
cmpsb
sbb
mov
push
jge
add
add
divb
rclb
sbb
sbb
scas
mov
sarb
int3
jne
xchg
pop
adc
cli
add
xchg
sbb
into
popf
loopne
rcrb
fwait
das
adc
jp
pop
shll
inc
adc
dec
mov
dec
add
push
cwtl
mov
pop
shlb
sub
ja
mov
adc
outsb
cmp
sub
pop
adc
jp
mov
or
mulb
inc
push
jge
int3
out
ljmp
sub
fldt
inc
adc
adcb
xchg
inc
or
das
lods
and
daa
in
mov
mov
fldl
xchg
loopne
jge
add
adc
sub
sbb
outsl
mov
addr16
push
mov
movsl
outsb
mov
sbb
scas
mov
aam
xor
pop
sbbl
cmp
fcmovb
outsb
insb
pushf
mov
test
sub
mov
sbb
daa
adc
stos
icebp
inc
les
inc
leave
xlat
xor
push
pop
add
imul
hlt
arpl
xchg
fidivs
mov
push
cmp
in
sub
pop
pushf
pop
clc
mov
iret
cmp
xchg
insl
xchg
sub
ret
xor
adc
les
sahf
lahf
enter
dec
lahf
sub
ret
es
in
mov
mov
mov
incl
sbbl
cwtl
and
lds
mov
xchg
add
sbb
aad
mov
cli
std
je
sbb
repz
pop
xchg
int3
cmp
xchg
jnp
push
sbb
test
sbb
xlat
js
call
out
aas
cld
sahf
xchg
inc
js
aam
xchg
and
es
cltd
dec
mov
aas
adcb
insb
fsubl
inc
iret
lea
notl
jb
scas
inc
jno
loop
lahf
mov
inc
shll
add
push
adc
js
clc
jmp
test
xor
and
xchg
push
stos
push
into
mov
rolb
push
pop
mov
sbb
loope
addr16
push
xor
cli
mov
fbstp
lds
nop
or
jne
jecxz
popa
cmpsb
mov
inc
push
sbb
fdivs
and
stos
mul
jl,pn
rcrb
push
insb
in
sub
pop
add
outsb
add
repz
outsb
std
xchg
cmp
rep
pop
rolb
stos
push
mov
sbb
mov
dec
sub
jne
out
or
ds
and
jo
and
sub
lock
inc
test
cwtl
ss
shl
dec
xchg
xchg
js
pusha
mov
movsb
sub
jno
fsts
sbb
dec
jnp
lret
mov
pop
loopne
fiadds
fistps
cli
add
dec
push
fdivs
sub
dec
sub
adc
movsb
cmpsl
arpl
fadd
cmp
mov
ret
or
jle
rcr
sub
mov
hlt
adc
sahf
hlt
mov
test
mov
aam
mov
ss
clc
xor
fdiv
cli
mov
xchg
xchg
xchg
out
mov
add
sbb
ja
call
sbb
pop
inc
ret
adc
inc
xchg
dec
add
or
mov
lods
ja
push
add
jbe
and
testl
pop
push
iret
clc
jl
push
push
repz
adc
push
imul
imul
fistpll
ja
or
ljmp
jnp
adc
mov
pop
mov
push
out
pop
stos
out
sub
inc
mov
mov
sub
sbb
dec
cmpl
sub
mov
outsl
insl
rcrb
das
jbe
test
jl
faddl
inc
add
lock
push
mov
mov
add
lret
test
jnp
push
xchg
hlt
push
fdivrs
add
cmpb
fsubrp
push
mov
insb
push
push
daa
adc
jmp
pop
andl
filds
sbbl
in
rdmsr
and
xor
push
push
cmpsl
xchg
cmp
add
in
rcl
add
outsb
sbb
inc
cmpsl
push
roll
in
mov
xor
bound
push
add
push
leave
nop
ja
cwtl
adc
sahf
test
push
inc
imull
mov
int3
subb
jecxz
clc
cmp
aas
lea
loopne
les
hlt
dec
xchg
dec
jg
inc
test
adcb
mov
and
push
or
jecxz
addl
cmp
xchg
add
sar
cmpl
cli
loope
stos
add
sbb
lret
pop
clc
roll
mov
stos
jnp
push
push
notl
rcrl
push
inc
aas
mov
mov
cltd
bnd
xchg
jle
jg
in
inc
aaa
in
add
ljmp
or
movsb
stos
rclb
mov
add
xchg
ret
inc
dec
mov
test
mov
sub
sbbb
data16
xchg
mov
in
lds
cmp
dec
leave
adc
hlt
mov
cli
inc
test
mov
outsb
shrl
dec
lods
nop
stos
jno
or
jno
fstl
mov
clc
inc
outsl
arpl
popf
xor
pop
or
add
shrl
addl
jge
test
ss
push
and
loop
mov
jecxz
jb
loopne
push
or
adc
adc
rorb
push
addl
out
hlt
mov
pusha
outsb
xchg
lods
aam
cli
or
cmp
aad
nop
call
mov
mov
pop
lret
mov
ficoml
pop
test
int3
out
fisubl
add
sti
xchg
add
scas
push
std
clc
cmpsb
sti
orb
test
mov
push
clc
cltd
clc
push
leave
xchg
xor
arpl
inc
rorl
adc
pop
cmp
inc
rorb
std
rclb
test
adc
sahf
mov
shlb
in
ficomps
loopne
ja
shr
fwait
cmpsb
int3
mov
lahf
jbe
xor
lea
cmp
xchg
lcall
jp
dec
sub
mov
xor
insl
aaa
cmp
enter
aas
jmp
or
pop
orb
push
insb
cmp
push
adc
dec
adc
out
out
ja
sti
or
fs
or
adc
dec
lcall
jo
inc
adc
mov
xchg
inc
xchg
sub
pop
add
pop
mov
into
mov
pushf
pop
or
xchg
imul
in
enter
or
and
loop
cmpsb
lret
lahf
jl
mov
inc
js
popl
inc
mov
push
pusha
lcall
mov
add
data16
mov
lock
js
shlb
lcall
cld
mov
addr16
in
ret
lahf
pop
clc
sbb
dec
frstor
adc
pop
mov
inc
jge,pn
mov
fdiv
loopne
pop
xor
mov
aas
mov
push
scas
add
addr16
lock
cmp
adc
in
or
pop
sarb
pop
scas
mov
lcall
xor
sbb
outsb
aas
rolb
dec
pop
fwait
mov
mov
daa
or
pop
ret
jne
xchg
add
imul
sub
push
pusha
inc
cmpsb
pusha
cmp
inc
or
jecxz
xchg
pop
lods
cli
bound
pop
adc
mov
sub
xchg
inc
int3
xor
addr16
jp
std
int
ret
test
mov
sbb
scas
inc
iret
mov
popa
icebp
lds
push
hlt
jp
popa
lea
mov
imul
sub
or
mov
js
insb
cmp
jno
loopne
cmp
inc
shlb
pop
add
adc
nop
sub
sub
push
or
ljmp
push
add
xor
push
mov
icebp
pop
inc
mov
xlat
xor
add
and
jge
mov
add
push
xor
push
jmp
inc
les
sbb
aad
sti
cmp
add
mov
sbb
lock
sub
outsl
inc
cmp
or
sbb
test
push
aas
call
add
push
mov
inc
dec
into
add
inc
out
xchg
ds
sub
sbbb
pop
mov
daa
inc
stos
mov
sub
jp
out
jo
xlat
dec
push
lods
push
arpl
sarb
jge
mov
das
aad
js
xor
adc
adc
mov
jb
leave
add
and
sbb
rclb
lods
aas
test
inc
lds
adc
mov
xor
add
ret
cmp
mov
mov
cmp
dec
mov
nop
pop
jg
mov
xchg
inc
push
push
inc
rolb
subl
adc
dec
fcom
or
or
and
xor
ljmp
scas
add
call
mov
call
lods
mov
out
jmp
fidivrl
mov
cltd
xchg
push
pop
inc
je
inc
mov
aas
sysexit
mov
sub
inc
das
fmuls
pushf
jl
cmpb
inc
rcll
ss
dec
fcomps
lods
mov
or
mulb
add
jns
adc
xchg
in
mov
mov
into
aam
lock
js
ror
ljmp
ret
clc
push
mov
jbe
add
sarb
lret
dec
jbe
movsb
jg
sub
ret
cmpsb
dec
incl
popa
das
adc
call
jns
loopne
std
das
mov
rclb
mov
int
sbb
inc
movsl
push
daa
daa
xor
mov
jb
out
sbb
pop
dec
jo
inc
je
sbb
sbb
dec
cmp
pop
push
cmp
repnz
adc
adc
pushf
add
aam
inc
xchg
notb
sbb
iret
cli
fs
and
loopne
dec
add
push
das
addl
pop
out
loope
js
movsb
jecxz
sub
pusha
iret
adc
push
lock
push
mov
or
loope
xlat
push
push
push
sub
jle
push
imul
mov
hlt
hlt
add
iret
pop
xlat
push
sbb
jbe
pop
add
ds
cmpb
mov
aas
xchg
inc
scas
add
xchg
inc
sarl
mov
pusha
mov
adc
mov
aad
pusha
jnp
sub
cli
out
movsl
in
js
xlat
ret
movsb
stc
enter
cmpsl
cmp
mov
mov
aam
mov
sub
xor
mov
fisubs
inc
outsb
hlt
fs
or
mov
pop
popf
jp
fcompl
test
sbb
mov
or
daa
cltd
inc
pop
xchg
push
adc
mov
aaa
es
jl
cli
loope
or
out
xor
decl
popaw
cmc
cmpsb
mov
mov
sbb
add
mov
arpl
insl
fcomps
cmp
cmp
pop
push
call
cwtl
xchg
push
add
mov
jb
out
dec
or
pop
add
dec
pop
loope
dec
sub
and
lret
xchg
dec
movzbl
cmpsl
aas
pop
add
or
out
stos
inc
mov
pushf
clc
popf
adcb
mov
add
call
xor
push
jo
test
adc
push
inc
daa
iret
xchg
jge
jge
sbb
add
scas
inc
inc
ret
or
dec
cmc
xor
test
shl
add
test
call
cmp
sub
or
add
sub
mov
jmp
adc
push
test
movsb
adc
sub
add
pop
push
int3
mov
pop
xor
jnp
call
sub
nop
dec
int
push
inc
xchg
push
divl
sbb
add
roll
sbb
sbb
and
or
rcrb
stos
les
icebp
xchg
sub
mov
pusha
call
mov
add
pop
orl
inc
xor
data16
mov
sarl
mov
ljmp
cmp
inc
lods
and
pop
push
popf
les
fs
push
adc
test
or
mov
jno
adc
shl
cmp
ret
adc
or
xchg
mov
outsl
sub
out
pop
andb
sarb
adc
pop
jl
jecxz
xacquire
jae
pop
orl
pop
fwait
sub
mov
nop
mov
hlt
sub
mov
mov
pusha
jno
or
insl
fistl
push
mov
stos
or
mov
xchg
ds
and
mov
pusha
xchg
xor
adc
xor
push
js
addr16
cmp
mov
xor
loopne
test
xor
es
adc
and
adc
mov
lods
cmp
cs
push
push
xor
adc
inc
jne
jl
ficomps
adc
mov
push
js
sub
push
add
cmp
ficomps
sub
hlt
mov
popf
cmc
push
and
xchg
out
push
sub
sub
or
int
js
imul
clc
mov
mov
and
cmpl
lret
outsb
ret
cs
sub
adc
je
call
mov
add
sub
fucomip
dec
in
adc
pushf
ret
cld
fwait
lahf
lds
out
mov
stos
pop
adc
or
xchg
bound
xor
dec
stc
cmp
inc
mov
jae
sbb
push
or
push
bound
aam
cmp
mov
jo
sbb
mov
test
xor
ja
fs
scas
xor
mov
dec
inc
push
rcrl
mov
dec
mov
dec
in
mov
addl
mov
outsb
jl
and
inc
ret
xchg
lock
popa
fsubl
mov
pop
outsl
in
inc
dec
shll
inc
fidivl
mov
jl
jno
sub
dec
dec
outsb
xor
mov
sahf
xchg
nop
ds
cmp
in
in
and
test
or
mov
aam
push
fcoms
shll
inc
mov
call
pop
pop
jg
cld
mov
rolb
or
adc
lock
dec
int3
cwtl
pop
sub
add
loope
cmpsl
ficompl
add
cltd
adc
sub
dec
hlt
js
test
mov
xor
fcomip
das
mov
fldt
hlt
aaa
or
mov
roll
sub
adc
jecxz
push
fwait
pop
sbb
jl
jle
dec
cmp
inc
stc
dec
mov
lods
loopne
imul
test
inc
and
aam
and
mov
cli
xor
xchg
call
icebp
ja
add
repnz
add
popa
mov
fisubrl
andl
in
adc
dec
shll
jnp
mov
ret
dec
or
push
addr16
dec
mov
orl
jo
push
leave
lret
mov
arpl
xor
push
fidivl
mov
stos
sbb
mov
dec
les
ds
cmp
cmp
les
dec
xor
iret
inc
pop
mov
sub
outsb
push
jle,pt
sti
movsb
shrb
std
leave
pop
adc
shrb
pop
pop
dec
jmp
aad
vcvtsi2ss
rorl
xor
push
bound
cmpl
pop
add
mov
push
push
push
sbb
lahf
inc
xchg
cmp
and
arpl
in
push
clc
adc
pop
push
mov
cmp
hlt
nop
lahf
adc
cmp
and
clc
stos
xor
push
int3
stos
dec
hlt
popa
pop
in
add
jo
ret
std
into
incb
jle
cmc
xchg
popa
addr16
xchg
call
imul
add
xchg
movb
mov
ret
outsb
fwait
xor
jge
add
stos
addr16
cmp
jp
cwtl
xchg
mov
xor
arpl
adcb
dec
ljmp
push
fwait
push
cmp
jno
cmp
push
in
cmp
adc
adc
lock
lods
fsubp
stc
testb
push
icebp
pop
ds
push
add
mov
clc
mov
or
adc
pop
addb
push
js
add
xor
ljmp
cmp
jo
push
hlt
push
pop
jecxz
jmp
xor
push
push
mov
sbb
enter
out
pop
jo
xor
mov
fs
pop
push
adc
jle
cmpsb
sahf
push
inc
ret
and
xchg
adc
sub
push
outsb
int3
aam
subl
lods
popf
lret
ss
loopne
nop
adc
movsb
dec
in
jecxz
inc
mov
in
jnp
js,pt
int
xchg
sub
mov
adc
pop
icebp
mov
ds
push
mov
or
jle
test
hlt
cmp
sub
es
adc
mov
pop
inc
pop
fsubrs
jl
jno
testb
in
movsl
push
inc
sbb
adcl
shrb
xor
adc
test
xor
jo
jecxz
xlat
mov
and
mov
enter
jns
and
dec
xchg
rcl
push
mov
js
xor
push
pop
imul
addl
sti
in
lock
inc
mov
adc
orb
mov
pushf
inc
push
mov
jae
pop
push
inc
pop
in
icebp
test
shll
xchg
push
dec
pop
mov
add
lcall
push
inc
lcall
and
xlat
mov
mov
mov
fnstenv
inc
mov
test
xchg
rorb
add
fcmovnu
jb
shlb
push
dec
shrl
sti
out
cmp
stos
lock
popf
inc
stos
push
rclb
push
or
jbe
andb
jns
stos
inc
mov
fs
jle
sub
add
rcrb
insb
paddd
cmp
add
in
ss
lods
mov
xchg
add
sbb
lods
aam
dec
jmp
adc
jbe
cmp
into
icebp
adc
cmp
test
xor
add
out
or
mov
xchg
mov
jmp
pop
orl
test
xchg
mov
je
rclb
push
mov
nop
dec
clc
pop
sub
add
adc
inc
sarl
lahf
and
int3
je
push
test
mov
ljmp
inc
push
dec
push
sarb
xor
dec
pop
pop
stc
or
cmpsl
out
sub
sub
mov
push
fstpt
dec
sub
loope
adc
pop
lods
mov
lret
and
jmp
push
fidivl
scas
lcall
xor
xchg
clc
fildl
pop
push
dec
add
xchg
or
fisubrl
push
mov
outsl
jns
loope
stos
ds
lods
mov
std
push
arpl
jb,pt
and
in
aaa
fisttpll
mov
sbb
hlt
pop
out
mov
cltd
jne
lock
nop
pop
dec
stos
repz
push
push
push
ds
xor
and
andl
fisttpl
lret
pusha
push
sbb
adc
pop
xor
stos
or
or
or
aas
les
cli
es
cmp
outsb
shlb
or
xor
icebp
imul
jge
and
adc
add
js,pt
push
mov
jl
ficoms
mov
in
mov
icebp
comiss
adc
cwtl
pusha
std
pop
xor
ja
mov
add
mov
out
mov
adc
push
cltd
cli
lcall
fidivrl
mov
mov
or
push
and
mov
loopne
stos
fimull
mov
or
cli
mov
mov
mov
adc
pop
and
xlat
mov
adc
pop
dec
sbb
mov
jmp
imul
mov
dec
mov
adc
sub
push
mov
or
sub
push
gs
and
cli
add
dec
fcoms
push
lods
cli
imulb
sbb
xchg
push
xchg
rcl
add
les
out
sub
sub
int3
fstpt
pusha
dec
sub
or
cmpsb
mov
push
push
inc
mov
dec
inc
sbbl
sub
push
cli
into
push
movsl
jl
jno
mov
add
sub
xchg
pop
or
es
js
loopne
out
daa
adc
push
jmp
cmp
pop
lret
adc
cli
aaa
mov
lods
push
mov
mov
mov
add
dec
call
push
sbb
mov
xchg
add
mov
push
jle
inc
cmc
iret
xor
add
fisttpl
adc
xor
add
sub
xchg
push
les
sub
mov
test
aaa
cmp
pop
push
pusha
roll
or
add
in
in
mov
clc
cmpsb
stos
lds
aam
push
pop
sub
jp
outsb
pop
cmpsb
xchg
std
fcoms
lea
adc
mov
pop
out
push
fdivl
popa
loopne
fstpt
mov
fs
xor
inc
andl
jp
fcomps
lods
push
pusha
mov
js
lock
lock
ss
push
jb
arpl
cmp
das
sbb
aas
adc
lods
pop
xchg
pusha
testb
aad
or
aad
adc
pop
cld
aad
jne
xor
adc
popa
aad
cmp
xchg
xchg
cmc
aaa
adc
xor
leave
into
or
inc
lea
mov
scas
pop
mov
fdivrl
fiadds
gs
pusha
mov
in
rol
sub
loop
cld
das
fnsave
pop
je
scas
sub
leave
sub
cmc
bound
lds
aam
lret
dec
cmpsl
pop
dec
ss
sbb
bound
sbb
fcomps
testb
dec
dec
outsb
int3
loopne
dec
ffreep
sbb
and
aaa
fdivl
mov
enter
lret
push
into
pop
fistpll
mov
mov
or
insb
or
ss
lock
insb
je
pop
insl
xchg
shlb
repz
cmpsl
push
insb
fs
cmp
or
call
stc
stc
push
into
add
test
adc
push
add
xchg
jp
lret
cmp
insb
inc
imul
xchg
pop
mov
dec
lods
mov
sub
sbb
ldmxcsr
xchg
xchg
iret
mov
or
sub
dec
in
add
mov
add
rorb
xchg
andb
sarb
and
mov
loop,pt
mov
and
xchg
sub
jl
jb
push
popf
insl
jnp
aas
xor
mov
cwtl
push
lock
ljmp
fdivl
and
fcmovbe
push
adc
push
arpl
ss
add
inc
mov
or
aad
push
mov
fimuls
sub
xchg
pusha
mov
xor
and
adc
mov
push
sbb
jl
or
xchg
ds
jno
xchg
rorb
fld
xchg
repnz
adc
inc
mov
lcall
cli
popf
sub
aad
movsl
lret
test
jno
pop
clc
ret
xlat
in
lock
pop
pushf
cmp
mov
das
pushf
nop
jbe
out
filds
call
mov
rorb
xor
cld
stos
lods
fs
out
je
ret
lret
cwtl
mov
test
mov
subl
dec
mov
xchg
jg
shrl
scas
in
mov
mull
push
lret
jno
ret
dec
mov
cli
outsb
and
push
mov
cmp
out
shrb
xchg
insb
sbb
shlb
cltd
xor
je
pop
into
mov
ds
xor
lea
mov
outsl
sbbl
into
cmc
clc
or
std
loop
and
hlt
mov
lds
in
mov
fists
sbb
jno
xchg
add
push
clc
push
and
scas
ret
sub
ret
sub
rcrb
shlb
jo
ljmp
icebp
add
lcall
adc
arpl
addr16
mov
scas
test
mov
sbb
das
mov
cmp
test
xorl
add
mov
dec
push
aaa
mov
stos
dec
and
mov
jp
cmp
and
cmp
push
jbe
sbb
push
and
mov
pop
movsl
jp
xchg
adc
sahf
bound
aas
into
addr16
popa
sub
push
leave
xor
add
test
loop
mov
push
adcb
lret
pop
ret
rcr
jnp
shll
cs
daa
fwait
sahf
fimull
push
or
pop
rcrl
and
imull
adc
jbe
lret
inc
xor
arpl
jbe
mov
repz
jo
dec
sub
adc
negb
mov
lock
push
lods
push
aam
cld
popa
or
sub
ret
mov
fmuls
ret
push
insb
dec
jae
jo
ljmp
lcall
lock
mov
repz
and
xorb
movsl
cmp
stc
pusha
add
arpl
test
inc
data16
mov
aas
loop
mov
push
add
test
stos
rorl
add
rol
subb
push
stos
mov
xchg
pop
orl
jp
idivb
mov
fs
movl
inc
mov
subl
sbb
scas
cwtl
cwtl
mov
mov
sbb
mov
faddl
lock
popa
addr16
mov
cmp
pop
cld
add
mov
and
fcoml
push
xlat
in
mov
and
gs
jge
pop
dec
sbb
jg
pop
inc
icebp
sub
ret
xlat
test
loop
fsubs
jne
and
daa
fwait
ret
icebp
sbb
xor
in
sub
mov
inc
push
test
and
test
sbbb
sbb
lret
jg
inc
scas
or
mov
cld
xor
or
pop
ss
mov
or
aad
in
jae
sub
adc
mov
rcl
iret
ret
sbb
dec
jns
imulb
push
je
and
ljmp
adc
loop
or
push
push
lock
sbb
push
in
push
sarl
push
jnp
cwtl
adc
mov
mov
inc
ret
addr16
std
aam
jge
loop
mov
adc
cmp
xchg
ret
shlb
add
ret
int3
jmp
xlat
mov
in
xor
cmp
cld
mov
push
xor
insl
popf
mov
xchg
inc
movsb
ja
shl
dec
into
and
clc
fisttpl
decb
fldenv
sbb
push
mov
add
mov
loope
pusha
xchg
push
and
stos
jmp
jge
push
leave
pushf
lods
jmp
lea
push
or
jg
pop
xor
addb
out
mov
and
inc
aas
cltd
inc
xchg
fiaddl
clc
inc
insl
jbe
push
rol
cwtl
jnp
daa
cld
into
xchg
inc
pop
add
hlt
std
mov
mov
xchg
mov
je
test
adc
pusha
rcrl
pop
pop
in
js
xlat
pop
es
pop
mov
loopne
mov
sub
jle
mov
add
push
stc
push
mov
push
mov
fld
mov
and
mov
or
fwait
lock
xchg
cmp
jle
pop
sub
inc
pop
out
rcl
pop
adc
lahf
pushf
test
jbe
psubb
pop
xchg
clc
add
ret
aad
xlat
call
daa
into
fwait
nop
mov
cmp
jp
test
mov
es
xor
icebp
and
and
push
lock
repnz
aas
mov
lahf
push
jg
push
aas
adc
test
shrb
pop
adc
stos
add
sar
lock
div
jg
xchg
sti
ret
add
xchg
mov
xchg
in
or
repz
stos
xor
xchg
scas
mov
add
les
add
sti
lock
pop
pusha
inc
inc
xor
push
outsb
je
and
add
add
push
adc
add
jge
insb
jns
mov
incb
out
test
scas
notb
adc
lret
shlb
cwtl
pop
fsubl
call
or
test
sbb
jecxz
push
decl
and
inc
add
inc
adc
ss
jno
enter
lret
sub
in
push
push
xchg
in
jl
hlt
inc
push
imul
mov
fwait
stos
fisttpl
mov
roll
inc
sbb
sti
mov
rcrb
or
jge,pt
in
je
loop
lcall
inc
popf
pop
popa
and
and
int
cltd
lods
adc
pop
sahf
nop
push
jle
mov
enter
and
push
test
jle
pop
les
jno
test
je
lret
add
inc
push
and
clc
icebp
sbb
ret
loop
xchg
add
or
and
mov
loopne
push
fadd
push
out
mov
add
mov
push
push
mov
movsb
push
into
inc
jae
dec
pop
popa
aaa
icebp
adc
daa
push
mov
cmp
or
jmp
jmp
test
dec
sub
movsl
ds
call
stc
xorb
lds
arpl
fstpl
jg
in
out
out
fwait
mov
sub
jnp
aas
push
or
sbb
mov
mov
jno
inc
out
sbb
and
mov
xor
push
sub
mov
cmpsl
ja
pushf
pusha
enter
mov
mov
jle
mov
loop
mov
add
xor
sbb
mov
ljmp
jg
cmp
lret
icebp
pop
push
add
xchg
mulb
mov
or
jmp
aas
add
mov
add
dec
movsl
scas
popa
xor
ret
mov
cmpb
add
xchg
cmp
mov
and
aad
movsb
sbb
scas
rcrl
pop
cmpsb
cli
shlb
loop
inc
dec
repz
push
push
sbb
sub
sub
loopne
dec
nop
loop
push
xorl
addr16
arpl
adc
dec
repnz
dec
mov
mov
rorl
andb
cmp
xor
cltd
lock
dec
shrb
push
add
scas
and
push
cmp
movsb
sub
jecxz
loopne
and
mov
call
jmp
mov
and
add
scas
or
mov
push
repnz
rclw
or
mov
cs
ja
mov
mov
cli
cmpsl
jbe
xchg
in
xchg
xor
mov
pop
cmp
inc
cmc
imul
pop
jae
sub
pop
rolb
das
cmp
testb
sbb
lret
dec
xchg
cmc
xchg
out
xchg
stos
and
bound
call
jae
xchg
and
push
push
fistl
add
popa
mov
or
cmpl
in
adc
stc
jnp
cmpsb
xchg
dec
cmp
pushf
enter
mov
sbb
jno
inc
mov
or
push
shrl
xor
lea
jbe
mov
pop
xlat
das
and
fisubl
in
loop
movsb
push
mov
lds
movb
pop
xchg
sbb
loop
loop
inc
nopl
std
or
push
in
xlat
cli
jg
sbb
into
outsl
out
and
mov
mov
jp
in
fstpl
inc
ljmp
pop
mov
icebp
test
outsl
data16
icebp
in
and
ljmp
dec
scas
dec
or
cs
dec
hlt
cmp
rclb
xchg
inc
mov
subb
mov
leave
icebp
jb
or
outsb
lods
mov
fsubs
cmpsl
dec
out
sbb
jbe
aas
mov
shll
subl
pop
cmp
insb
or
movsb
add
or
or
mov
das
outsl
add
sub
subb
mov
or
lret
aad
cmc
movsl
imul
aas
jp
add
push
sbb
cld
dec
roll
fisttpl
push
add
add
fisubs
bound
dec
shrl
call
pop
sarb
imul
rcr
roll
sbb
mov
or
je
scas
inc
add
cmpsl
testb
cltd
data16
ret
push
std
or
mov
repnz
sbb
pop
les
or
sub
arpl
mov
out
mov
lea
push
sub
loopne
cmp
mov
sbb
imul
adc
mov
jle
push
je
push
xchg
das
push
push
push
cmc
fsubs
stos
insl
popa
mov
scas
pop
dec
lock
push
aam
push
cli
and
sub
int
push
into
mov
or
fcomps
or
or
orb
pop
cld
sbb
xchg
pop
rcll
cmp
jp
sahf
add
call
xchg
push
loope
add
jbe
scas
jl
rolb
sbb
pusha
mov
push
mov
mov
push
int
jno
or
add
jbe
dec
enter
xchg
je
push
cmp
dec
pxor
and
or
push
sub
mov
pop
xor
mov
push
shll
cmp
dec
xor
loopne
pop
fistps
xchg
and
and
outsb
incl
sub
mov
or
mov
pop
sbb
mov
sti
or
test
mov
xor
sbb
mov
test
xchg
lods
fldl
lahf
dec
xor
lock
push
hlt
mov
insb
mov
je
fnstenv
mov
and
loope
not
dec
call
out
ds
hlt
push
aam
sub
inc
xor
or
cld
pop
add
repz
rorl
xchg
mov
dec
xchg
loope
push
xchg
jg
in
jp
push
ljmp
mov
scas
cli
cwtl
pop
add
push
xchg
in
adc
pop
add
jle
cmp
push
inc
push
mov
push
clc
imul
pop
fdivrs
loopne
loope
inc
data16
sbb
rolb
test
and
pusha
nop
hlt
stc
ljmp
mov
mov
mov
add
push
movsb
lods
mov
loope
push
shrb
iret
mov
and
xchg
insb
pop
jmp
mov
lock
mov
jp
push
lcall
movsl
cs
daa
dec
pop
xchg
push
jno
adc
mov
cmp
add
fcmovnb
cmp
add
xor
outsl
push
popa
xor
push
inc
nop
nop
jmp
sbb
leave
fwait
jecxz
movsl
pop
insl
push
add
xor
push
jno
out
or
jl
jb
dec
and
andb
push
sbb
lods
repz
sar
ja
or
pusha
push
out
nop
add
iret
push
rorl
xchg
or
shl
adc
xlat
out
js
jecxz
adc
clc
ljmp
xchg
xchg
ss
test
test
jmp
and
add
insl
mov
cmpsl
push
push
add
cmc
mov
mov
pop
sbb
mov
add
sub
mov
ljmp
push
mov
mov
xchg
jo
jmp
jno
and
push
loopne
add
stos
sub
mov
rolb
mov
mov
rolb
movsl
stos
adc
pop
inc
test
ret
jb
incb
mov
lret
jo
sbb
stos
fbstp
in
push
adc
jg
cmp
and
jno
ret
mov
fiaddl
or
stos
mov
ret
jp
sub
xchg
xchg
rcrb
je
mov
push
jmp
jl
mov
and
cmp
dec
cmpb
mov
xchg
shrl
jb
aam
roll
push
pop
push
dec
popa
ficoms
inc
add
push
adc
movl
call
xor
fiadds
dec
push
popl
mov
push
adc
push
std
mov
push
mov
aaa
pop
mov
pop
mov
lahf
mov
xor
fildll
add
cltd
push
rcrl
cwtl
rcll
add
adc
lock
test
push
ror
icebp
les
cmpsl
xchg
push
pop
loope
mov
add
mov
es
inc
mov
jbe
mov
or
enter
test
inc
adc
sub
push
test
scas
mov
loope
add
push
dec
int
mov
sar
sub
push
inc
pop
sbb
mov
mov
js
push
pop
cld
negl
or
mov
and
mov
hlt
mov
std
push
and
mov
xor
out
push
pop
test
pop
sub
lods
jmp
jg
out
adc
adc
outsb
in
sbb
icebp
jg
push
das
push
rorb
mov
sarb
roll
aad
dec
aaa
add
pop
jae
lret
dec
pop
hlt
mov
lahf
cmp
rolb
adc
adc
andl
mov
add
dec
add
imul
fcomps
jg
cmpb
fstpl
mov
loope
push
insl
nop
out
cmp
xchg
movb
bound
mov
mov
out
mov
call
or
push
loopne
and
je
insb
fidivrl
mov
jg
jecxz
aas
jo
adc
out
repz
cmpsl
movsl
xlat
push
fdivr
ret
jno
outsl
fs
jle
mov
adc
cli
mov
add
sbb
je
test
mov
jns
addr16
xor
insb
push
in
cwtl
inc
ja
icebp
push
out
push
pop
xor
subb
inc
xchg
mov
mov
das
push
jmp
call
enter
xchg
push
pop
cmpsb
scas
push
dec
or
mov
xor
loopne
lock
in
and
lret
cmp
mov
push
jg
add
clc
xor
cmp
mov
into
cli
jp
pop
sbb
dec
cmp
mov
sbb
call
pop
fimull
cmp
std
std
xchg
into
rcr
fwait
inc
addl
mov
or
das
mov
cmp
inc
mov
add
mov
mov
loopne
mov
add
dec
int3
pop
cmpl
bound
lret
aaa
test
add
dec
sub
cli
cmpb
jae
xor
fwait
lods
arpl
sbb
int3
mov
jnp
ret
xor
or
lret
sub
shlb
inc
sub
add
les
out
jo
enter
fldpi
inc
and
pop
sbb
addb
push
icebp
loop
loopne
push
nop
push
sbb
mov
and
aas
jb
movsb
push
dec
fisubrl
or
and
mov
cld
adc
jo
lods
decb
sbb
dec
inc
inc
hlt
test
ret
sbb
cmc
push
inc
dec
mov
stos
jo
nop
sub
fmuls
shl
xlat
cs
rorl
scas
pusha
adc
adc
pop
mov
sub
inc
push
fildl
push
xor
lods
sub
fidivl
push
jg
lahf
nop
and
mov
lock
adc
fbld
nop
iret
clc
adc
sub
xor
mov
add
in
rcrl
mov
insb
sbb
test
add
hlt
fs
xor
int3
popa
js
jecxz
mov
outsb
in
xor
sahf
push
ja
add
daa
xor
inc
pop
pop
out
add
andl
ljmp
adc
adc
nop
stos
divl
add
cmp
rcrl
inc
pop
cmp
cmp
xchg
adc
adc
addr16
add
outsl
xchg
mov
add
inc
add
cmp
popl
add
dec
dec
push
and
inc
xor
dec
rorl
adc
cmp
or
test
dec
inc
xchg
iret
movsb
andl
lahf
hlt
clc
adc
out
dec
pop
mov
adc
cmc
cli
insl
push
rcr
mov
jp
les
mov
pop
sub
or
and
je
hlt
sbb
jge
imul
push
xor
jne
add
dec
jb
mov
addr16
pop
out
popf
mov
arpl
jp
stc
mov
jae
sahf
push
sbb
aad
xchg
dec
loopne
aaa
ds
or
push
ljmp
push
mov
mov
cs
popf
hlt
xchg
jbe
in
clc
and
pop
fsubl
arpl
mov
stc
aam
ljmp
xchg
add
adcb
fisttpl
int3
test
push
jns
aas
cmp
stos
xor
lock
outsl
xor
push
mov
jno
data16
fbld
scas
lret
mov
xchg
sub
mov
cld
and
cmpsb
ret
sbb
inc
adc
andb
add
ret
lea
orl
int3
in
sub
inc
mov
das
inc
out
scas
inc
dec
insb
dec
pushf
jno
cmp
fcomp
dec
aaa
dec
add
mov
sub
outsl
jge
cwtl
or
and
sub
xor
data16
xchg
push
pop
cwtl
push
lock
mov
call
out
add
mov
xor
xor
mov
push
sahf
xchg
lock
pop
xchg
xchg
mov
loopne
stos
sbbl
inc
mov
dec
jle
shl
adc
mov
xor
adcb
push
aam
cmp
jb
sbb
adc
lahf
pop
pushf
popa
and
pop
lds
call
mov
jne
pop
pop
mov
shld
call
je
out
push
lcall
push
dec
mov
cmp
inc
cmp
and
jmp
add
lock
cmp
test
outsl
ret
in
dec
jo
mov
arpl
ficoml
dec
cmc
xchg
mov
test
xor
dec
mov
sarb
or
sbb
inc
or
loope
mov
stos
popf
sub
lret
in
cmpsl
dec
pop
dec
pop
push
scas
repnz
add
and
hlt
push
mov
std
shlb
lock
mov
pusha
lea
pushf
loope
emms
push
inc
jp
rorb
je
adc
inc
movsb
mov
aas
mov
xchg
xor
push
adc
or
add
adc
mov
stc
pop
gs
adc
imul
mov
fsubr
jp
stos
mulb
popa
lret
mov
lods
jae
sbb
ret
and
sti
add
mov
mov
pop
xchg
insb
sub
je
pop
addb
popa
cli
sbb
jle
or
jmp
imul
xchg
sbb
rcrb
pminsw
cld
sbb
push
js
sahf
inc
sbbb
sub
cmp
jbe
pop
in
cmp
call
pop
mov
push
shlb
sbb
in
ds
inc
sbb
loopne
inc
cwtl
mov
orb
pop
mov
dec
xorb
cmp
cmc
stos
std
icebp
test
sbb
and
inc
xor
pop
push
movsl
push
mov
iret
xchg
dec
dec
add
xchg
inc
out
mov
mov
lock
mov
loop
fdivrl
pop
ds
insl
inc
pop
mov
and
loopne
aam
xchg
dec
mov
mov
mov
or
cltd
mov
call
inc
out
or
adc
test
jp
and
sub
add
je
das
aas
gs
inc
hlt
jecxz
jne
cmp
out
es
daa
scas
pop
mov
mov
rolb
push
cmp
pushf
pop
rorl
in
shrb
mov
insb
pop
insb
mov
and
xchg
out
test
std
xchg
aaa
ljmp
mov
adc
cmp
inc
sub
xchg
dec
cmp
inc
add
testl
dec
xor
cld
inc
jbe
inc
xchg
in
cli
js
loopne
pop
movsb
pushf
mov
or
les
sbb
cmpsl
out
mov
jle
repnz
lods
xor
cli
pop
out
repz
sub
sbb
cmp
lds
imul
stc
lock
mov
mov
es
dec
cmp
data16
jb
data16
aas
cmp
sub
orl
pop
or
movhps
popa
and
mov
sbb
in
inc
sub
idiv
das
hlt
lcall
loop
in
mov
aas
lea
cmpb
pusha
fisttpl
pop
rcrl
push
in
jecxz
movsb
in
negb
aad
inc
lods
or
pop
xor
add
or
lea
cmc
outsl
out
lret
mov
nop
mov
cmp
jnp
cmp
lret
dec
mov
test
pushf
test
pop
mov
add
inc
mov
test
setg
dec
push
adc
sbb
dec
or
fnstsw
cli
cwtl
xchg
push
shr
fwait
jae
cld
adc
pminsw
mov
addb
clc
xlat
xchg
add
add
inc
jbe
sbb
mulb
jne
jmp
mov
fisttpll
lcall
xor
xor
divl
cs
mov
aad
test
clc
fisttpll
mov
lods
mov
into
loope
call
enter
stos
movsb
lock
aas
sti
mov
pop
imul
xor
and
push
cli
insb
dec
mov
loopne
push
and
ljmp
leave
inc
mov
fstpt
or
fsubrs
je
adc
or
cs
cmp
or
push
xchg
test
push
inc
jne
xchg
and
cmp
sbbb
and
iret
xchg
lods
orb
into
jmp
dec
push
fimuls
js
dec
cwtl
test
pop
sbb
and
push
test
mov
dec
arpl
mov
sbb
mov
xchg
mov
xor
stos
pop
mov
enter
sub
rorb
in
shrb
mov
push
dec
or
fimuls
int3
xchg
xchg
mov
push
rcrb
sub
movl
cmp
jg
add
not
push
mov
push
lcall
or
scas
stos
cmp
add
ljmp
in
xchg
mov
xchg
xchg
clc
notb
pop
mov
sub
inc
cmp
add
adc
and
rclb
fnstenv
jl
mov
adc
gs
or
dec
lahf
clc
ss
cmpsb
or
cmp
push
ljmp
ja
cmp
aaa
not
lds
insl
pushl
dec
sub
dec
int3
add
cld
inc
jle
add
outsb
push
cld
xchg
movsb
jl
pusha
adcb
mov
mov
popf
lods
in
jb
repz
subl
lods
sbbb
nop
jnp
jo
jmp
mov
mov
lods
popf
ljmp
jns
cmp
sahf
out
xor
and
outsb
cmp
cmp
call
mov
stc
ss
shlb
inc
fsubl
cmp
xchg
ljmp
loope
test
jp
and
fisttpl
sbb
jo
pop
push
mov
pusha
aad
pop
mov
mov
sbb
decb
add
inc
mov
xchg
sbb
mov
fcoml
inc
cld
inc
cli
enter
popf
xchg
aaa
sbb
pop
pop
sbb
out
neg
inc
jl
in
xchg
sbb
adc
mov
call
daa
loope
pop
mov
lods
testl
out
push
fdivrl
add
sbb
roll
test
sahf
inc
sbb
jbe
pop
out
jg
lret
in
iret
push
jge
push
jg
int
stos
push
or
inc
pop
out
jns
shlb
iret
jne
sbbb
leave
push
lock
int3
jp
cs
lea
cmp
pushf
pop
sub
pop
mov
loope
lret
add
pop
push
mov
mov
sbb
inc
call
cmp
xor
ja
or
cld
jle
cld
jge
lahf
rclb
and
aad
inc
pop
jg
cmp
cmpsb
lahf
or
in
in
out
daa
scas
lfs
shl
lea
push
push
cmpsl
cmc
repnz
stc
add
std
jmp
adcb
sub
cmp
dec
cmp
adc
xor
sub
pop
xchg
cmp
sub
lret
add
push
jnp
push
lods
push
outsb
add
data16
sbb
inc
fcmovb
xchg
jg
outsb
sbbb
hlt
jg
mull
fildll
in
pop
pop
data16
mov
or
movsb
pusha
roll
repnz
mov
mov
inc
cmp
in
mov
fsubrl
loope
rorb
pushf
rep
sahf
jl
enter
add
adc
adc
push
js
ror
pop
mov
fs
in
out
add
out
sbb
inc
emms
pop
push
xchg
mov
mov
sti
and
popf
mov
cld
clts
or
scas
jno
and
ds
push
outsb
sbb
int3
movsb
sbb
push
mov
jmp
mov
ret
aad
sbb
aad
cmpsl
test
je
push
mov
orb
adc
push
inc
pop
sub
and
pop
inc
repnz
aad
decl
adc
adc
pop
xor
ret
iret
cli
pop
loopne
fs
out
call
inc
jmp
pop
adc
inc
adc
clc
pusha
shlb
adc
jmp
mov
push
mov
aas
push
test
clc
and
push
sbb
add
sub
inc
movsl
dec
push
and
loopne
inc
std
insb
out
mov
ret
lock
movsb
loopne
mov
mov
decb
adc
es
pop
fsub
mov
in
pushf
ja
lcall
les
sbb
jl
ficomps
pop
inc
ja
or
push
sbb
jo
and
jle
jg
xchg
cmpsl
jnp
imul
xchg
xchg
sub
add
icebp
and
push
popa
orb
pop
cli
pop
xchg
aam
xchg
push
pop
loope
cmp
or
dec
adc
sub
sub
push
inc
rorb
pop
xor
jge
and
into
jle
outsl
mov
and
inc
aam
mov
sbb
mov
pop
mov
lock
xchg
or
aam
mov
jbe
xchg
sbb
stos
scas
shlb
jne
sub
test
outsb
jb
pop
mov
mov
sbb
add
and
sbb
mov
xor
cmp
sbb
mov
push
fiadds
adc
out
test
xchg
jo
jne
xor
pushf
dec
ja
jne
movsl
sub
sub
or
adc
mov
in
xor
lods
push
movsl
lock
add
andl
and
cmp
jb
icebp
sahf
cmp
out
push
sbb
std
iret
mov
sahf
sar
mov
imul
mov
push
out
call
jecxz
xlat
adc
clc
in
in
or
pop
incb
dec
pop
leave
movsl
addr16
jmp
rorb
pop
xchg
sub
push
cmp
cmp
mov
add
clc
stos
push
stc
dec
dec
jne
les
daa
call
add
push
cmc
push
dec
or
or
push
pushf
adc
adc
stos
push
push
out
scas
std
and
add
jo
lcall
iret
and
add
push
scas
nop
pop
push
mov
mov
jnp
cmp
incl
roll
outsl
sarb
inc
pop
mov
xor
stos
dec
call
and
nop
mov
test
ret
cmc
or
sub
test
adc
frstor
outsl
mov
mov
add
lahf
xor
jp
insb
dec
cld
ret
xchg
mov
lahf
or
mov
jnp
in
mov
sbb
and
or
mov
xor
add
out
cli
xchg
jo
aam
js
cmc
add
subb
mov
das
sub
or
fnsave
movsl
jbe
sbb
mov
flds
ss
sbb
int3
test
push
cli
das
fimuls
add
adc
adc
dec
jne
loop
sbb
dec
mov
lahf
hlt
addb
sub
mov
popa
incb
and
popf
je
jl,pt
out
call
pop
jb
stos
sub
adc
ret
leave
out
pop
shrd
or
rclb
pop
jp
decl
or
sbb
or
sbb
scas
pop
push
cmp
mov
push
cld
mov
and
das
fisubrs
jle
cld
addb
in
mov
add
lahf
call
mov
or
pop
int3
push
mov
data16
es
add
cltd
sahf
jne
xor
inc
adc
addr16
or
sub
clc
add
xchg
xor
sub
stos
test
jle
pushf
andb
xor
dec
add
adc
or
cli
mov
adc
fnstsw
shlb
pop
jo
adc
mov
clc
mov
add
in
sub
fldl
scas
or
add
inc
or
jp
inc
filds
test
push
clc
adc
sbb
jmp
mov
mov
into
fxch
mov
add
shl
push
add
test
adc
jnp
push
sbb
fnstcw
hlt
pop
dec
xchg
cmp
xchg
aaa
call
fwait
jne
out
or
cmp
mov
cwtl
pop
sarl
add
add
add
cmpsl
xchg
ret
fidivrs
or
xor
xor
fiadds
in
add
movsl
adc
ljmp
xor
insl
shlb
aas
jl
and
xor
inc
push
inc
add
pop
xlat
sahf
xchg
mov
inc
or
inc
int
shll
imul
jecxz
or
gs
mov
sbb
mov
lods
lret
xchg
or
add
xor
dec
mov
movsl
ret
into
cwtl
insl
adc
push
aad
push
lea
push
scas
icebp
sbb
mov
xlat
push
mov
jb
push
outsl
add
cwtl
and
fldt
orb
in
es
pop
sub
mov
or
nop
dec
hlt
dec
jbe
adc
sbb
or
jp
test
push
lret
xor
js
fs
int3
push
add
test
push
les
in
inc
in
dec
ret
xor
xor
aad
mov
mov
mov
stos
push
add
push
lahf
xchg
imulb
lods
pop
push
stos
ss
mov
mov
pop
inc
dec
cmp
fs
push
adc
shrb
cmp
scas
outsb
shr
lods
add
push
je
pushl
pop
subl
push
fbstp
ffree
lahf
lock
cmp
sbb
push
clc
ret
stos
push
push
mov
loopne
xor
mov
jmp
lahf
xchg
mov
into
rcl
pop
mov
and
lcall
sbb
mov
push
sbb
sbb
icebp
push
int3
mov
ds
add
push
mov
je
rorl
mov
bnd
daa
mov
push
leave
shll
std
jo
or
std
xchg
arpl
inc
ret
fldt
xor
mov
in
push
sahf
lods
mov
fwait
jnp
ja
inc
addr16
fbld
mull
lds
jge
mov
push
jl
subl
repnz
xor
dec
pop
cmp
jge
mov
sarl
subb
or
int
or
pop
lea
cmpsb
test
cmp
dec
or
xchg
mov
cli
pop
cmp
adc
hlt
js
ds
inc
stos
mov
orl
test
adc
push
lds
pop
int
movsl
mov
and
mov
push
sbb
fildl
imul
mov
imul
inc
shrl
mov
fildl
paddsb
sbb
push
hlt
mov
cmp
out
sub
ffree
incb
stc
andl
loopne
xchg
jmp
lahf
ret
pop
loope
mov
pop
dec
sbb
mov
lcall
mov
mov
fs
xchg
adc
scas
lret
das
test
push
add
bound
pop
dec
cmp
lods
inc
inc
add
mov
jle
roll
pushf
pushf
xor
das
imul
rcll
push
shlb
add
adc
and
pop
mov
lcall
jo
clc
add
adc
mov
or
call
jp
rcrb
xor
pop
les
xchg
cmpl
gs
fsubp
mov
in
and
lods
js
and
mov
pop
arpl
add
add
jg
shlb
mov
dec
xor
loopne
scas
inc
hlt
inc
pusha
sbb
stc
push
xor
js
shll
xor
in
xorb
lock
jg
fstpt
lds
pop
mov
xor
inc
icebp
dec
stos
jle
pop
jnp
mov
and
cmpl
sbb
in
addl
sbb
and
fdivrs
sti
loope
mov
push
adc
fcmovb
xchg
adc
push
push
dec
ja
test
or
mov
rcrl
jne
push
call
or
add
mov
leave
push
cmp
sbb
pop
adc
clc
ljmp
movsb
inc
mov
xchg
xor
xchg
pop
cwtl
mov
sbb
inc
imul
add
xor
ds
orl
shrl
js
fnstsw
std
data16
movsb
inc
es
loope
sub
pop
lock
test
repz
inc
add
imull
xchg
cmp
ja
sub
rcl
insb
jb
ljmp
add
mov
loope
add
stos
xchg
and
push
push
inc
mov
pop
pop
popa
in
pop
js
xchg
in
lcall
mov
push
js
pop
push
test
pop
xchg
cli
add
push
ds
popf
mov
pusha
loop
jle
or
clc
sub
pushf
out
aad
ret
clc
or
sti
and
push
push
mov
jnp
jle
xor
mov
rcrl
sbbl
push
push
stos
mov
mov
xchg
and
sub
movsb
in
inc
mov
std
shlb
inc
icebp
pusha
cmp
daa
xchg
and
pop
lock
loopne
or
jecxz
daa
add
xchg
adc
call
lock
mov
pop
sbb
push
jns
scas
rcll
shl
jge
popa
je
stos
inc
andl
sti
push
add
ror
cli
jns
shll
pop
sub
sbb
movsb
adc
sahf
fs
sarl
adc
cmp
inc
pop
loop
add
cs
and
jne
pusha
dec
add
std
add
imul
lods
xchg
mov
cmp
push
je
lret
lock
ret
pushf
pop
inc
and
cmc
or
popa
xor
ret
cmp
loope
sub
movsb
push
test
lcall
push
bound
sbb
or
cmpsl
ds
inc
ja
inc
nop
mov
sbb
push
jae
pop
sub
fidivrs
sbb
sbbb
scas
bound
dec
out
pusha
scas
jbe
loop
ret
dec
xlat
movsl
fwait
or
iret
add
pop
jbe
sbb
xor
fildll
adc
rclb
mov
pusha
cltd
or
pusha
hlt
jge
cs
inc
fwait
int
lock
ja
push
or
cmp
mov
ljmp
rcrl
mov
pop
mov
adc
imul
and
xor
das
push
pushf
call
xor
cmp
pop
sub
shl
xor
cmp
inc
out
lods
imul
mov
mov
movsl
rclb
adc
mov
add
cmp
push
enter
inc
aam
pop
std
add
and
cwtl
sbb
ret
popf
and
jle
or
imul
lock
sub
mov
pop
jne
adc
cmpsb
push
cmp
push
ret
nop
cwtl
rcrb
es
xor
mov
add
dec
mov
push
cli
xor
push
lahf
js
icebp
pop
xor
lods
and
pop
shl
fucomip
in
out
sbb
sub
push
xor
pop
add
inc
jge
and
icebp
adc
sub
dec
test
pop
js
jb
and
xor
push
cmc
outsb
loop
pushf
sub
dec
mov
sahf
jl
add
cwtl
pushf
xor
mov
and
fdiv
test
gs
dec
in
xchg
inc
adc
ret
test
sub
jne
insl
mov
mov
stos
sub
aaa
inc
jle
xchg
enter
lock
iret
stos
adc
add
pop
jmp
xchg
das
cmp
inc
add
rcrl
fmuls
rorb
inc
loopne
mov
aad
dec
push
icebp
ss
test
push
iret
popf
push
mov
mov
scas
js
dec
jl
xchg
inc
inc
ja
sbb
cmp
dec
xorb
test
mov
adc
cli
int
inc
mov
sti
ret
lahf
inc
mov
sub
mov
xchg
stos
mov
cmp
adc
xor
incl
les
sbb
outsl
dec
lea
pop
xor
add
push
insl
ss
aas
cli
jbe
aam
fs
lret
xor
lcall
sub
push
mov
jmp
sbbl
xchg
insl
cmp
mov
sbb
xlat
popa
pusha
jmp
xchg
cmp
push
xorl
push
mov
lods
mov
in
sub
rcl
cltd
enter
push
pop
ds
fnstsw
dec
dec
pop
mov
cmp
or
popa
scas
stos
adc
stos
mov
js
fistpl
mov
out
movsl
fnstenv
push
sbb
mov
repnz
aam
push
sbb
jno
outsl
ret
jl
scas
leave
jge
mov
add
pop
adc
adc
into
ja
roll
rcr
xchg
mov
pop
jo
rclb
rcll
ret
or
popw
sub
sbb
rorl
shl
mov
jle
adc
inc
imul
lret
bound
mov
ret
sbb
xchg
or
pop
or
pop
cld
shrb
jg
pop
and
shrb
lods
pop
scas
mov
outsb
xchg
sub
incb
jl
mov
cmp
pusha
outsb
push
lods
stos
push
sbb
xor
popa
psadbw
mov
and
fldenv
inc
in
out
xorl
arpl
movsl
fisttpll
stos
fsubp
aam
inc
xor
aaa
jge
outsl
jg
xlat
fs
addr16
lods
push
mov
mov
and
into
mov
xchg
pop
xor
mov
pop
cmp
dec
mov
mov
mov
cmp
mov
es
sahf
sub
jne
dec
mov
or
ja
push
adcb
leave
imul
add
lock
jo
dec
inc
mov
push
out
negl
push
cmp
andb
in
sub
repz
dec
shll
or
cs
loopne
xor
dec
pop
inc
ficompl
lcall
push
daa
sub
flds
add
or
push
push
inc
hlt
aas
insb
cmp
loope
mov
ljmp
push
pop
cmpsl
cmpsb
xchg
mov
loop
sbb
shr
adc
pop
adc
dec
adc
mov
test
imul
add
or
and
lock
pop
push
push
test
and
scas
mov
jp
xchg
xor
clc
fdivs
insb
lods
pop
cli
div
push
cmp
idivb
loope
lock
icebp
rorl
push
mov
add
jg
dec
add
mov
pop
clc
outsb
sub
repz
jns
dec
stc
ja
ds
ret
outsl
inc
in
lea
mov
int3
push
jb
mov
icebp
xorb
pop
jecxz
jno
adc
flds
push
xor
test
sbb
lcall
add
fstpl
mov
mov
push
mov
pop
mov
fcomps
lret
test
lret
push
pop
push
jmp
ljmp
movsb
pop
cmp
leave
mov
stos
pop
mov
cli
loopne
cli
dec
adc
ss
push
aam
jbe
inc
lahf
push
das
ret
inc
into
mov
scas
adc
and
add
sarb
adc
movb
ja
or
and
jbe
neg
aaa
xchg
pop
jecxz
cmp
les
aam
iret
dec
ja
sti
lock
jl
jb
jno
js
pop
int3
popf
push
js
pusha
rcr
sbb
cmp
popf
cmp
add
sbb
or
fildll
ds
int
add
dec
sub
adc
push
pop
add
adc
cmp
mov
or
lcall
push
dec
jg
inc
pop
or
int3
mov
movb
xchg
pop
pop
ret
pop
mov
cmp
inc
sbb
hlt
scas
in
call
inc
dec
cwtl
cs
inc
loopne
aaa
xor
int
mov
jle
xor
scas
dec
test
mov
cmpl
in
xchg
out
fucom
mov
lret
jl
pop
in
lock
push
mov
push
and
nop
mov
icebp
cmp
mov
pop
shr
fstpt
push
lret
push
incl
inc
cltd
mov
hlt
andb
mov
shll
incl
fisubrs
or
fnstsw
vmwrite
mov
ss
add
inc
clc
cli
cmp
test
adc
call
push
or
fidivrl
insb
outsb
sub
int
mov
jle
sub
inc
pop
jp
push
pop
xor
inc
xchg
add
fidivrs
mov
mov
jg
mov
adc
xor
ret
xor
inc
sbb
rcrl
push
inc
add
xor
and
je
xchg
ds
mov
jbe
imul
outsb
add
jle
mov
or
cld
aam
loopne
stc
loope
sti
mov
cld
loopne
outsb
sbbb
jg
loope
imul
shlb
repz
fimuls
xor
jbe
xorl
xor
inc
ret
cmp
aas
les
pop
lock
xchg
stos
lods
sarl
into
fst
add
cmpsb
mov
test
sbb
or
lods
aad
xor
and
push
or
clc
aaa
mov
and
pop
lods
inc
xor
pop
pop
hlt
xchg
movsb
sahf
or
leave
in
nop
sub
movsb
jmp
test
test
add
push
cmp
out
inc
push
cmpsl
sbb
dec
daa
rorl
push
push
jge
inc
shrl
jle
orb
xchg
and
lahf
push
push
mov
mov
or
jle
ret
dec
push
not
mov
xchg
adcl
sub
push
outsb
ret
lock
jp
movsb
dec
cwtl
aad
repnz
push
cmp
lahf
test
mov
fnstcw
int3
call
dec
lea
dec
rorb
cmp
mov
push
push
in
cli
push
hlt
sub
dec
dec
and
pop
add
out
mov
add
push
call
fscale
movsb
xchg
and
inc
sub
ds
neg
and
and
lods
or
dec
inc
in
cmc
push
lock
mov
andb
push
xchg
mov
adc
andb
jb
cwtl
mov
cld
push
cli
jge
cmpl
daa
cmp
sbb
dec
shll
cli
jg
mov
andl
mov
jns
sbb
push
fnstenv
aam
fiadds
nop
scas
add
add
add
sarb
push
loopne
inc
setnp
scas
add
call
and
es
pusha
xchg
or
sub
and
and
jp
lods
and
adc
lea
pop
mov
adc
mov
dec
int3
inc
cld
or
pushf
mov
cmpsl
mov
inc
inc
test
and
or
add
xchg
jbe
nop
push
or
ss
lea
lock
clc
pop
jg
sub
scas
mov
push
mov
mov
repnz
push
js
sub
lret
mov
mov
mov
inc
clc
ret
lea
mov
xor
push
xchg
pop
shlb
dec
movsb
cli
pop
mov
sbb
inc
loope
cmp
mov
inc
or
std
lret
pop
movnti
push
sub
es
shrb
or
jo
shl
xor
mov
ds
je
out
sub
and
sub
es
cli
movsb
loop
add
and
push
test
mov
push
or
fmuls
lock
cmp
rcrb
mov
insl
outsl
xor
pop
pop
xor
adc
mov
cmpsl
cmp
je
add
in
mov
lret
add
mov
cmpsb
repz
or
out
lods
sbb
dec
adc
mov
sbb
orl
jge
mov
test
loop
pop
insl
jnp
rorb
or
xor
sbb
mov
shr
push
pop
mov
cmp
fmuls
cmp
ror
cmc
sarb
lods
cmp
adc
inc
adc
and
sub
outsl
cmp
pushf
popa
xchg
lock
ja
add
sub
inc
lods
lods
stos
inc
sarl
and
mov
xchg
mov
or
hlt
fistps
dec
fidivs
cmp
jge
dec
addb
ret
push
mov
jmp
dec
lcall
mov
jo
inc
push
in
add
int
mov
sub
add
mov
adc
cmp
sbb
out
leave
inc
dec
dec
rcll
mov
mov
mov
pop
pop
shr
mov
movsl
inc
lret
push
sbb
or
mov
cltd
shlb
daa
mov
cmp
inc
in
jp
loopne
cli
addl
call
subl
jbe
push
popa
in
mov
jo
call
scas
aas
inc
lcall
in
or
mov
fcmovne
mul
mov
cmc
cmpsl
jne
mov
iret
cmp
xchg
sub
fdiv
fldcw
jge
dec
dec
call
sarb
mov
sub
push
inc
stc
xchg
cmp
jp
lods
das
dec
cmpsl
push
cmpsl
mov
std
sahf
mov
cld
mov
cwtl
cmpxchg
sbb
sbb
mov
iret
dec
cli
cmpsb
push
push
jae
ds
mov
cmp
jbe
or
pop
lods
inc
sbb
jl
push
push
or
sub
shl
or
or
xor
lods
xchg
shll
dec
xchg
jle
aad
push
jge
mov
push
into
sub
call
cli
mov
in
add
cmp
ret
cmp
stos
fst
test
mov
or
pop
pusha
outsl
cld
lcall
ret
fmul
scas
cli
mov
enter
rolb
loope
gs
sub
pop
jmp
fwait
aad
mov
fs
outsb
sub
mov
inc
push
cmp
jp
pop
movsl
sbb
mov
sbb
gs
imul
xor
inc
in
mov
lods
push
es
mov
mov
lret
push
dec
sysret
pop
mov
dec
call
out
pop
jo
push
jo
nop
ret
pusha
pop
add
ss
imul
clc
jmp
pop
dec
mov
xor
adc
movl
xor
iret
rolb
cmp
dec
jle
pushf
cmp
mov
jmp
adcl
push
xor
vpmaxsq
out
jb
cmp
mov
in
push
dec
cmp
mov
rolw
js
out
push
je
sbb
jl
test
dec
out
mov
add
sbb
popa
jg
pop
inc
out
inc
ret
xor
cli
inc
rcrl
cmp
lock
lahf
mov
cmpsb
dec
ljmp
sub
sbb
and
lock
pop
or
ds
ret
pop
insb
push
add
or
inc
shll
lahf
push
imul
cmpsl
mov
mov
adc
mov
xor
sbb
js
mov
push
mov
jecxz
sub
cmpsb
pusha
nop
rorb
aaa
aaa
mov
cwtl
adc
dec
cmp
xchg
sub
sub
mov
pop
adc
bound
pusha
sti
pop
sbb
test
pop
fiadds
sub
and
push
push
xchg
inc
das
sahf
mov
dec
jg
add
push
cmpsl
xchg
jne
push
rcll
aaa
sbb
mov
push
jne
jge
pop
and
in
lock
ret
aaa
nop
dec
cmp
cmp
test
mov
jb
jns
jg
dec
repz
lods
mov
inc
push
addr16
push
popf
ss
inc
inc
pop
insl
mov
shl
add
out
pop
mov
ja
dec
nop
cmp
mov
pop
jp
jp
mov
popf
inc
push
or
cwtl
inc
je
sbb
inc
mov
cmp
pop
inc
lcall
stos
pop
xchg
push
lods
xor
ret
mov
cwtl
dec
inc
dec
mov
lcall
hlt
ss
leave
js
daa
mov
out
mov
das
test
pop
aas
sbbb
add
adc
lock
xor
mov
cmpb
in
movsb
push
and
pop
jno
or
rcr
pop
mov
dec
mov
jge
cmp
push
repz
and
rclb
jge
outsb
xor
add
mov
xchg
dec
rorl
xor
icebp
inc
pop
add
fs
js
pop
mov
lock
mov
pushf
cli
stc
push
clc
mov
mov
xchg
or
and
jmp
inc
loop
lds
jbe
test
jp
jmp
fiaddl
icebp
add
sbb
cli
sbb
or
addb
or
push
mov
or
pop
sub
mov
inc
mov
sub
cmpsl
xor
or
gs
inc
loope
xor
outsb
pop
pop
sbb
adc
out
adc
stos
xchg
sbb
jecxz
divb
rorb
sub
rcrb
mov
push
push
or
cld
cli
clc
lock
insb
div
addr16
xor
lahf
cmp
rcrl
call
int
add
lahf
and
push
pop
enter
dec
cli
dec
xor
stos
jge
push
into
inc
ljmp
test
and
sbb
ljmp
xchg
movq
mov
fldcw
pop
xor
rcl
add
ljmp
push
inc
inc
xor
push
outsl
add
icebp
repnz
push
or
negl
push
sbb
sub
mov
fs
loop
hlt
pop
adc
mov
pop
je
ret
sub
and
ret
mov
sub
test
dec
push
or
es
rorl
pop
mov
ss
ret
push
inc
sub
xor
clc
dec
daa
insb
mov
or
scas
jmp
add
add
or
mov
cwtl
frstor
xchg
lods
and
cmp
sbb
ss
inc
inc
mov
call
xor
sahf
sub
mov
mov
fcmovnb
push
cmpsb
jnp
lcall
roll
mov
lock
in
insl
dec
push
xor
jne,pn
hlt
xchg
cld
xchg
test
lret
mov
imul
mov
sub
out
icebp
icebp
js
gs
inc
std
xor
stos
popa
sub
cmpl
sub
jecxz
and
test
shlb
push
adc
mov
insl
aam
fs
add
call
imul
push
add
xchg
sbb
jo
testb
adc
rclb
inc
adc
sbb
popf
clc
mov
sbb
test
dec
and
dec
jo
push
bound
rclb
add
or
jg
xchg
fcomps
iret
xor
cld
loop
jg
mov
in
int
dec
and
imul
jge
js
clc
cmc
cli
mov
xchg
ds
test
addl
push
push
xchg
add
rcll
fadds
fnstsw
aaa
push
out
and
into
dec
aas
shlb
sbb
xchg
dec
ret
pusha
add
cmp
pminsw
xor
pop
mov
loop
add
loop
stos
add
add
pop
mov
out
cli
std
sbb
push
test
sub
loopne
out
push
bound
adc
sub
xor
das
fnstcw
adc
xor
adc
cwtl
loop
lods
mov
adc
mov
sbb
add
loopne
ds
test
mov
mov
outsb
clc
into
mov
stc
lcall
xchg
cmp
push
rorb
mov
inc
sarl
xor
insl
call
out
fwait
inc
and
jbe
pmullw
xor
xor
mov
pop
clc
call
inc
ss
stos
and
cmc
mov
mov
loope,pn
sub
sbbb
mov
daa
cmp
in
je
jg
repnz
mov
or
push
icebp
and
lods
and
pushf
xchg
add
mov
inc
pusha
xor
jle
jns
dec
je
pop
call
fsubrp
or
mov
dec
daa
outsb
jg
adc
cli
ret
push
cmpsl
mov
dec
test
mov
mov
push
sarb
push
test
mov
and
mov
ret
fsubrl
push
in
lock
sahf
cmc
inc
jns
mov
mov
pop
mov
ds
and
pop
mov
fcmove
add
xchg
pop
adc
mov
cmp
insb
dec
arpl
dec
and
push
fiadds
loopne
out
and
enter
push
test
jmp
hlt
outsb
or
mov
fisubrs
push
movsb
xor
adc
adc
or
ja
test
adc
adc
es
mov
sbb
jne
xchg
sub
daa
pop
fdivrp
jl
je
and
dec
out
mov
incb
repz
push
and
popa
xchg
cwtl
mov
ret
sbb
mov
mov
sub
cmp
int
inc
or
jnp
or
das
add
incb
call
adc
flds
pop
jbe
loopne
adcl
and
inc
jg
popf
fimull
sub
fimuls
xor
rclb
sbbb
es
pop
xor
aaa
inc
lret
pop
lret
lcall
shl
stos
sbb
inc
ret
adcb
add
mov
loopne
ret
lret
sbb
in
movb
shll
adc
lods
jle
mov
sbb
push
cwtl
rorb
test
fists
stos
pop
shlb
les
pop
js
in
pop
mov
sub
pop
jp
mov
mov
xchg
test
out
aam
repnz
push
push
cmp
es
movsb
bnd
jo
out
sub
mov
aas
add
add
inc
sub
pop
mov
leave
dec
cmpsl
push
jnp
out
loop
dec
push
push
jecxz
test
in
or
mov
ret
add
call
and
sbb
popf
aam
les
filds
ljmp
mov
sbb
aaa
fisttpll
bound
pop
add
jp
and
or
clc
xor
xlat
andl
pop
and
dec
dec
fstpt
movsl
aad
out
cs
cmp
test
xor
pop
imul
mov
lds
xchg
js
jle
jl
xor
inc
andb
add
push
sub
sub
fldcw
inc
sbb
add
bound
mov
push
js
cltd
mov
jno
pop
pop
inc
lret
pop
sahf
lods
cwtl
cmp
fsubrs
stos
add
or
fidivl
xchg
les
divl
rolb
pop
sub
inc
subl
jne
fstpl
loop
push
push
xchg
dec
push
call
push
scas
loop
pop
clc
call
lock
pop
or
cmp
call
push
pop
jp
stc
test
mov
scas
xor
xchg
test
cmp
mov
and
push
inc
lods
jb
scas
rolb
sbb
adc
cmp
pop
push
push
mov
add
fsubr
lret
shrb
or
addl
jnp
push
dec
nop
dec
cmpsb
mov
jge
es
push
jns
dec
sub
leave
jne
xchg
aaa
sub
xor
enter
push
loope
movsb
xlat
jbe
mov
push
mov
inc
ror
test
js
add
or
test
cmc
lcall
loopne
jno
test
dec
push
and
or
adc
ret
out
cs
inc
mov
fiadds
stos
dec
push
adc
mov
xlat
add
cmpsb
adc
sbb
jmp
testl
pop
add
dec
cmp
mov
jae
xchg
xchg
loop
dec
push
sbbl
lcall
out
stc
or
fs
pusha
xchg
jnp
pop
cmp
aaa
and
enter
rclb
inc
cmpsl
stc
mov
icebp
inc
add
je
shlb
inc
jno
out
mov
push
jecxz
add
filds
push
xchg
push
pusha
dec
jo
xchg
inc
cld
int3
add
scas
fs
mov
ret
push
out
shl
dec
out
cmp
js
sub
gs
aas
cmp
fldl
addr16
scas
mov
cmp
aaa
cmpsb
outsb
xchg
xor
pop
outsl
outsl
and
pop
dec
icebp
dec
imull
and
out
push
jno
scas
hlt
and
sbb
outsl
sbb
popa
cmc
add
adc
into
sbb
xor
mov
sub
repz
repz
mov
pop
sti
shll
call
out
inc
adc
or
pop
dec
inc
outsl
mov
insb
dec
leave
js
mov
ss
lods
mov
push
cmc
aam
ret
icebp
mov
push
les
xor
cli
lock
test
ss
pop
lds
aaa
sbbb
scas
mov
sub
cmp
pop
sti
fiaddl
mov
cli
inc
in
ffree
add
test
push
ss
and
sbb
mov
subb
das
imul
inc
cmp
cmpxchg
adc
dec
xorl
cli
in
dec
and
mov
adc
cs
subl
stc
mov
xchg
dec
push
clts
lods
xchg
cmp
incb
popa
push
mov
jbe
ja
sub
mov
out
xchg
adc
cmp
fmull
mov
sbb
testl
fnsave
inc
sbb
inc
test
push
aas
inc
mov
in
lcall
push
scas
sar
loopne
out
dec
sub
pop
xchg
rorl
xor
loopne
push
aad
pop
lds
icebp
jb
shlb
js
data16
jbe
dec
fs
loopne
mov
test
ret
fdivrs
dec
fsub
fists
aaa
lahf
std
rclb
sti
outsb
jnp
sub
cmp
cld
pusha
mov
cs
ljmp
xor
sub
push
into
dec
scas
repnz
xor
std
lret
in
sti
das
movsl
lahf
dec
imul
js
xor
lahf
pop
test
stos
xchg
clc
je
sub
adc
stc
nop
mov
pop
nop
in
loop
arpl
js
pop
mov
pop
imul
push
fistpll
push
sbbb
imul
mov
scas
mov
negb
cmp
sbb
sub
repz
jg
pop
and
ret
mov
clc
daa
shlb
or
pop
clc
das
ja
dec
orb
arpl
push
push
xchg
loop
mov
movsb
arpl
push
outsl
sbb
cltd
add
or
jo
sbb
popf
mov
ret
push
push
mov
inc
std
inc
movsl
cmp
loop
sub
lods
pop
pop
cmp
loopne
pop
xor
stos
mov
ficomps
and
adc
sbb
inc
xor
cmp
pusha
or
stos
aaa
or
jl
aas
test
push
pop
lret
push
pop
into
loopne
stos
popf
cld
dec
movl
or
sub
lcall
cmpb
or
fcoml
add
or
jae
dec
push
call
lret
inc
mov
clc
push
or
inc
ss
pop
idivl
das
dec
jl
fistpll
imul
and
pushl
mov
pop
fucomi
insl
mov
movsl
xchg
mov
sbb
sub
lock
xor
and
xor
das
imul
jbe
cmp
push
add
hlt
mov
pop
loope
shll
inc
xchg
je
push
lret
mov
push
pop
xchg
pop
ret
sbb
mov
inc
lock
jno
jp
inc
pop
inc
cmpl
sub
arpl
pushf
out
sub
jne
pop
mov
mov
shrl
push
sbb
nop
push
setge
les
pop
mov
xor
pop
test
inc
ret
jg
imulb
lcall
fidivrs
lods
sub
test
cmp
ss
inc
clc
popa
out
jnp
inc
jne
adc
or
hlt
lods
popa
fistpl
loop
dec
sub
push
fistl
dec
pop
int
frstor
mov
dec
push
xor
xor
xor
jno
rcll
fildl
mov
lea
add
mov
sub
xchg
lods
sub
enter
sub
sub
cwtl
addl
stos
in
lds
push
push
xchg
pop
outsb
mov
add
mulb
ret
push
decl
outsb
andl
js
cmp
pop
mov
jno
lds
bound
cs
xlat
add
rorl
mov
fwait
int
dec
cmc
add
clc
movsb
inc
fidivs
cld
movsb
or
fcmove
mov
enter
rep
into
add
or
or
cltd
xchg
popf
adc
xchg
push
lock
xchg
xor
bnd
cmp
pop
cld
mov
inc
inc
adc
or
pop
adc
pop
and
dec
dec
nopl
das
or
and
pop
push
adc
push
aam
mov
dec
pop
call
push
dec
push
aam
js
popf
insb
push
lds
lcall
xorl
mov
aaa
inc
out
push
dec
bound
xchg
xor
ds
pop
add
and
mov
adc
stos
inc
jl
repnz
adc
das
or
fsubrl
lret
ret
xor
jb
mov
pmulhuw
cli
xchg
adc
xchg
mov
scas
lahf
mov
or
or
push
dec
xchg
enter
call
xor
jl
cmc
jo
sbb
aaa
shl
das
insl
jge
ret
push
out
push
mov
loope
aaa
push
inc
pop
or
jbe
cwtl
xlat
jge
push
mov
jl
sbb
sbbb
xchg
jmp
inc
mov
sub
jl
adc
dec
cmp
jb
adc
fs
out
ret
shrb
cmpsb
adc
movsb
ja
in
mov
xchg
gs
fwait
lcall
xchg
cli
sub
xchg
inc
adc
add
inc
lcall
outsl
aam
pop
xlat
cwtl
in
mov
sti
and
shl
inc
pop
cmp
outsb
shlb
in
imul
sbb
test
or
or
in
fsubr
sub
sbb
fdivs
inc
mov
lock
loope
add
mov
xchg
outsl
adc
push
add
sti
inc
retw
cmp
stc
jle
fiadds
pop
adc
xor
sbb
or
jb
scas
mov
inc
in
addr16
sbbb
mov
xor
lods
js
push
mov
cwtl
movsb
sbb
and
lods
adc
pushf
push
xchg
rorl
inc
adc
cmp
dec
movsl
push
out
cmpsl
push
ja
add
loope
xor
pop
fildll
inc
xchg
mov
mov
enter
push
loopne
xchg
fsubs
lds
push
cli
aam
xchg
sbb
add
ss
in
inc
dec
movsl
daa
and
and
xchg
xor
dec
lcall
cs
adc
xchg
cs
and
leave
mov
cmp
decb
out
cwtl
inc
cli
shll
in
add
arpl
cmp
push
out
arpl
je
cmp
nop
lods
adc
pop
pop
popa
out
inc
push
mov
clc
call
adc
ds
ret
popa
inc
cld
sub
cmc
test
outsb
enter
dec
jne
and
sub
and
cmp
jne
mov
sub
incb
fsub
xchg
shl
xchg
sbb
insb
xlat
sbbb
rcll
pop
pop
mov
mov
xor
jae
aas
or
jne
inc
or
push
ja
adc
fs
movsl
mov
add
pop
shll
fs
mov
lds
pop
dec
daa
adc
mov
sar
sub
pop
bnd
out
sbb
adc
in
repnz
cmpl
movq
daa
popa
inc
imul
xorb
sub
jp
pop
orb
jmp
ret
movsl
adc
xchg
fsubl
pop
and
lcall
sub
ljmp
cmp
add
dec
clc
sbb
or
mov
pop
loope
push
lret
mov
push
dec
sub
aam
mov
xor
pop
aas
adcb
stc
scas
loope
imul
mov
movsb
adc
ss
mov
dec
fs
dec
scas
leave
pop
clc
cltd
mov
loope
test
dec
fs
cs
cltd
sub
sub
mov
popf
imul
call
shl
mov
outsl
and
jl
lcall
or
jns
sbb
adc
inc
sub
adc
mov
les
iret
mov
sub
jo
jnp
jl
lods
sbb
sbb
ret
lods
imul
addb
shll
adc
rorb
lock
pop
rcll
cmpsl
nop
pop
out
adc
sbb
sbb
jle
mov
or
das
in
pop
dec
push
in
and
add
add
popa
xchg
loopne
mov
add
mov
add
repz
lds
pop
in
jns
scas
sbbb
shll
and
out
mov
jnp
mov
das
lock
push
sub
repz
adcl
fdiv
and
js
or
and
pop
frstor
je
lods
adc
xchg
xchg
xor
or
push
jnp
push
lods
inc
pop
adc
pop
ret
and
dec
mov
test
dec
adc
fwait
andl
xor
sub
pusha
test
cmp
sbb
stos
cmp
scas
lock
testb
enter
or
int3
fcoml
sub
mov
fstpt
pusha
jmp
cs
setae
adc
leave
popa
sbb
mov
cvtps2pd
mov
loopne
push
pop
or
xor
and
dec
inc
xchg
cmp
fnstcw
scas
or
add
jne
icebp
dec
lcall
dec
or
rclb
ja
test
mov
rcrb
or
sub
les
lahf
xor
imul
xor
xor
pop
mov
sti
jge
lods
mov
pop
xchg
and
shl
mov
repnz
mov
les
mov
add
in
jg
inc
add
adc
inc
mov
stos
mov
ret
aaa
scas
lods
jp
inc
sbb
mov
cmc
arpl
xor
sbb
fdivl
into
cmpsl
mov
dec
out
jbe
cmp
scas
jno
push
pop
cmp
or
pop
jg
mov
jo
add
cmpsl
insl
imul
add
repnz
inc
lret
jmp
arpl
mov
loop
sbb
js
xor
cmp
adc
fldt
les
fsincos
and
pop
aad
jne
or
cmp
adc
pop
negl
cmp
in
sbb
bound
icebp
mov
push
mov
adcb
inc
testl
movsb
dec
loop
movhps
or
push
out
mov
shrl
mov
inc
call
fs
sub
mov
aas
call
dec
rolb
lods
fisttps
adc
and
loopne
cmp
xor
fs
push
adc
cmp
adc
push
out
mov
data16
rcrl
mov
sbb
cmp
mov
out
testl
push
xor
adc
adc
dec
mov
movsb
jmp
outsl
xchg
push
dec
icebp
add
imul
and
mov
adc
int
std
int3
test
notl
shrb
test
add
movb
out
adc
adc
addr16
xlat
push
adcb
jmp
mov
movsb
adc
sub
imul
mov
and
push
mov
jns
shrl
outsl
xlat
xor
mov
cmpl
cmp
repz
jle
add
insl
cwtl
shl
jne
dec
ja
xchg
lock
xor
push
daa
xor
test
daa
arpl
and
mov
and
add
mov
inc
scas
iret
cmp
aaa
and
push
cmp
mov
movsb
dec
out
sbbl
hlt
add
push
leave
cmp
call
test
call
dec
xchg
or
inc
lods
js
imul
icebp
sarl
lret
dec
or
cmc
xor
int
inc
jge
shl
out
lret
add
adc
push
mov
pop
test
loope
in
daa
lds
gs
aad
scas
add
imul
sub
push
xor
cmovge
jne
ror
adc
outsl
repnz
push
sbb
decb
ss
aam
aaa
testl
test
adc
test
mov
mov
mov
flds
jae
sbbb
add
mov
hlt
mov
mov
dec
daa
push
cmp
scas
ljmp
and
dec
test
roll
or
jecxz
push
aam
cwtl
xchg
hlt
jae
push
mov
cmp
shl
sub
sbb
movsb
daa
jo
leave
das
cmpsb
push
pop
icebp
xchg
dec
mov
ret
inc
push
add
ficoml
aas
mov
in
mov
repz
push
xor
mov
and
push
testb
sub
dec
fcoms
aaa
fldt
cmp
cmp
clc
je
dec
pusha
mov
adc
sub
aas
cmp
sbb
lea
hlt
pop
sub
movsb
lods
popf
lcall
pop
xor
inc
addr16
sbb
addr16
sbb
push
icebp
xchg
ja
or
cs
jo
loop
dec
cltd
cld
test
je
pop
or
into
dec
pop
imul
jae
dec
mov
jae
loope
test
sub
jmp
or
jne
adc
sbb
add
stos
rorb
out
lock
sbb
mov
dec
xchg
adc
into
dec
dec
or
and
cmpsl
and
pop
push
mov
js
dec
in
and
movsb
sti
sbb
pop
je
lock
dec
dec
cmp
outsl
xchg
inc
imul
push
orb
cmp
aaa
add
ficomps
jb
nop
pop
test
lods
add
hlt
loope
inc
sbb
mov
jecxz
ja
xor
paddb
gs
int
pop
mov
pop
jne
inc
pop
loope
ret
outsb
add
mov
jmp
sub
cltd
out
xchg
std
add
loop
xchg
repnz
xchg
punpcklbw
mov
bound
mov
outsb
lret
sbb
add
outsb
ss
push
xchg
aam
mov
inc
call
nop
sub
outsl
dec
lds
add
dec
push
lods
jp
pop
fstl
aad
and
movsb
dec
addr16
test
icebp
arpl
push
jle
add
and
jne
jb
adc
mov
pop
xlat
push
adc
jmp
fimull
adc
lock
adc
xchg
xchg
clc
adc
cmpsl
mov
clc
sbb
pop
xchg
les
jno
ret
blcic
arpl
repz
jbe
add
jecxz
cmpsb
pop
mov
test
mov
addb
and
and
ss
in
fiadds
pop
cltd
leave
mov
pusha
dec
mov
xchg
mov
outsl
vmovsd
neg
gs
dec
mov
sbb
pushl
lds
out
repnz
push
jnp
jne
cmp
je
test
jae
hlt
popl
sahf
hlt
inc
in
mov
or
cmpsl
xchg
adcb
sbb
sti
jno
dec
lods
pop
cltd
mov
lcall
aaa
dec
mov
mov
or
clc
jb
push
mov
sbb
mov
loop
js
add
xor
mov
dec
jp
stos
dec
push
push
sarb
and
dec
pop
pop
mov
ficoms
mov
pop
jno
cs
lea
in
lods
adc
xor
jne
test
push
je
pop
pop
ss
fimull
data16
xchg
dec
mull
mov
js
mov
cmpsb
mull
add
addl
or
mov
xor
rolb
jae
or
das
or
inc
mov
cli
push
mov
push
mov
mov
push
mov
and
imul
ljmp
xor
cwtl
push
mov
test
adc
dec
hlt
popa
inc
jl
xlat
jmp
dec
adc
pop
push
aaa
push
pop
aad
cmp
adc
mov
inc
cld
fsubl
roll
std
addl
jno
xchg
call
add
outsl
mov
jae
ret
pushf
add
test
js
or
dec
cli
pushf
or
cmp
daa
into
in
add
add
int
sbbl
dec
and
rorl
or
and
mov
imulb
ret
and
inc
and
pop
pop
mov
mov
xor
add
test
xor
pop
mov
jp
sub
fs
imul
sub
shrl
add
movsb
or
fdiv
out
mov
loope
jge
cmp
add
icebp
movsb
push
pop
das
les
jle
push
xor
push
pop
push
and
cmp
pop
xchg
push
mov
out
lcall
fidivrs
scas
adc
xorl
cli
mov
add
push
int3
and
loopne
mov
xor
inc
jmp
ja
mov
das
loop
shl
adc
cmp
xor
test
movsl
pop
aas
mov
xor
scas
scas
lahf
cli
pop
into
popl
jno
push
mov
and
push
mov
and
add
loopne
gs
mov
mov
push
xor
mov
push
je
js
mov
data16
cli
fdivl
loope
imul
sub
and
or
stos
das
insl
jbe
pop
frstor
jl
shll
aad
pusha
test
xchg
ret
push
sub
xor
mov
add
xchg
xor
shlb
sub
fmull
sub
std
out
xchg
pop
js
ds
jecxz
cmp
sub
shlb
xchg
mov
scas
push
jl
push
aad
sbb
lcall
inc
sub
inc
cmp
lock
xor
lods
add
or
sahf
mov
jl
dec
push
std
add
clc
mov
clc
sub
pop
pop
scas
mov
xorl
xchg
sti
rcr
gs
es
pop
xchg
cmpsl
cmp
xchg
out
sti
xchg
mov
sub
aas
pop
xor
cmpsb
mov
or
pushf
loopne
push
push
pop
rcrl
je
mov
xchg
mov
movsb
xchg
shll
stc
insb
fisttpl
lahf
je
pop
bound
pop
and
dec
xlat
xchg
and
fldenv
mov
test
lods
es
push
adc
subl
jmp
rcrb
ret
add
imul
inc
cmpsl
xchg
stos
adc
addl
add
xchg
lahf
out
fadd
loope
or
push
mov
ss
rorl
lock
push
and
and
and
xchg
dec
mov
ffree
pop
mov
out
outsl
enter
and
adc
repz
and
mov
iret
push
imul
roll
jle
adc
cmpsl
call
mov
push
cmpb
ljmp
int
loope
rcrb
in
fdivrl
fcompl
push
or
xor
sub
jp
xor
orb
dec
fisubl
pop
pop
addr16
push
mov
cwtl
lods
rorb
xchg
movsb
nop
lods
mov
test
adc
sub
loope
rorl
pop
push
cltd
out
std
push
sbb
aas
mov
dec
jp
popa
cld
rorl
add
in
jecxz
pop
push
mov
or
mov
or
incl
xchg
push
loopne
faddp
sbb
orb
popf
fldt
pop
ja
popa
mov
ret
or
and
leave
scas
roll
jnp
and
fs
test
movsb
testl
shl
jecxz
loopne
dec
xchg
std
cmp
test
sti
push
mov
filds
fs
jo
icebp
xchg
movsl
jo
mov
test
xchg
mov
or
mov
lss
fiaddl
clc
inc
movsl
jg
lret
inc
xorl
int
mov
push
rclb
sbb
notb
cmc
cwtl
rol
xor
stos
subl
xor
sbb
loope
loop
pop
mov
push
sub
adc
test
pop
pop
mov
adc
outsl
test
in
fs
imul
jle
lds
or
stos
push
daa
jmp
add
inc
and
das
test
cmp
shlb
out
mov
xchg
lock
pop
inc
fists
test
cwtl
sbb
or
mov
and
scas
xchg
stc
xor
ffree
xlat
jp
dec
imul
arpl
inc
scas
cmpsb
icebp
push
adc
push
jle
mov
jbe
sbb
push
pop
xchg
outsb
push
popf
sub
jl
movsl
push
jbe
aaa
cmpsb
add
lods
mov
jo
xchg
sbb
fnsave
aas
popa
add
push
mov
stos
push
in
sub
mov
xchg
dec
lret
icebp
cmp
arpl
mov
adc
sbb
jg
mov
movsb
push
jg
sbb
jl
dec
ficompl
xor
mov
ja
pop
sub
sub
std
xor
jb
arpl
shll
mov
aam
in
lods
outsl
jno
or
in
mov
pop
imul
lods
sub
cmpsb
mov
xor
test
inc
mov
pop
pushf
call
xchg
jle
scas
mov
imul
movsb
test
bndldx
rol
leave
movsb
add
add
mov
push
out
cmc
inc
ret
add
lcall
jl
and
jmp
pop
cmpsl
and
insl
loopne
push
shlb
nopl
scas
scas
mov
cmpl
cli
add
or
and
js
mov
pop
enter
sbb
rclb
jo
mov
sti
aaa
mov
icebp
icebp
daa
ss
jge
xchg
aam
cwtl
popa
mov
pop
pop
data16
xorl
xchg
cmp
mov
test
rolb
js
mov
jg
gs
sbb
dec
add
movsl
daa
jge
out
xor
cmp
dec
xchg
xor
lods
mov
lahf
cmp
test
rcr
fnstcw
add
clc
js
aad
or
andb
int3
mov
fcom
push
arpl
push
push
loopne
ss
int3
ss
lahf
test
dec
adc
jnp
inc
es
push
in
movb
fnstenv
data16
bound
rcrb
jnp
aam
aam
ret
les
push
cmpsb
or
add
nop
mov
adc
xchg
aam
out
popf
push
leave
adc
pop
fadds
sbb
and
adc
cmp
xchg
inc
mov
enter
cld
mov
lahf
pop
xor
pop
pusha
add
mov
ljmp
scas
sbb
cmp
add
xlat
dec
es
xchg
icebp
pop
push
in
std
loope
sub
sub
push
jnp
fsubs
dec
int3
mov
xchg
mov
xlat
push
fldl
cmpsl
lds
aaa
push
movb
neg
cmp
adc
pushf
int
xchg
lahf
xchg
test
add
mov
pop
inc
lods
xchg
les
sub
xchg
jg
hlt
mov
adc
ret
xor
jb
bound
data16
or
aam
sbb
testl
push
fdivl
jmp
loope
cld
mov
test
sub
das
inc
mov
cli
nop
cltd
repnz
in
xchg
scas
movsl
pop
pop
mov
lahf
aad
pushf
inc
jge
xchg
adc
or
or
stc
jb
sub
push
xor
pop
adc
scas
lahf
mov
pusha
cmp
cmpsb
shrl
fiaddl
push
movsl
xorl
cmp
pop
fcomps
cmp
ljmp
add
roll
push
jg
scas
cmp
std
icebp
jge
inc
mov
push
dec
or
nop
xor
push
into
jmp
lret
mov
jno
pop
mov
mov
aad
out
sub
mov
add
into
je
cwtl
push
mov
arpl
in
mov
pop
decl
dec
rolb
rcll
cwtl
mov
jbe,pt
add
aad
fildl
xchg
xchg
sub
push
jns
out
lret
out
inc
lods
enter
cmp
push
mov
ss
cwtl
stc
push
mov
mov
mov
mov
fisttps
outsl
cmp
dec
mov
popa
out
stos
mov
hlt
add
push
dec
and
and
scas
mov
idiv
int3
add
rcll
jne
and
lret
jb
mov
cmp
and
out
and
push
xchg
and
pop
sbb
nopl
das
push
fnstsw
in
sbb
or
pusha
ljmp
add
test
add
mov
cli
sub
pop
mov
sti
add
sub
xchg
or
shl
pop
pop
loope
out
icebp
push
cs
push
add
ss
or
ljmp
lret
xor
jge
mov
mov
sbb
mov
enter
pop
aaa
sub
les
int
add
cmp
shlb
xlat
push
pop
aas
jle
push
push
adc
stos
andl
pop
jecxz
cmp
add
test
push
jmp
std
mov
icebp
adc
mov
or
repz
push
or
sub
aaa
cmp
sbb
fstl
push
iret
pop
das
sti
mov
popaw
inc
add
or
jne
xor
adc
idivb
dec
subl
fdivrp
movsb
or
stos
mov
enter
cmpsb
out
adc
jecxz
xchg
lods
xor
jns
sub
add
sub
cwtl
mov
stos
jne
cwtl
cld
cmp
loopne
push
and
js
fimull
fsubs
mov
cmc
je
jl
and
pop
lock
call
cmp
push
add
movsl
mov
cwtl
add
div
add
lahf
pop
cld
popf
push
mov
mov
pusha
aaa
pop
jno
mov
push
mov
mov
in
mov
push
dec
cli
push
pop
mov
add
xchg
inc
jg
aas
sub
mov
mov
dec
insb
enter
js
pop
pop
or
clc
xor
mov
lret
fidivl
test
fisubrs
pop
add
test
jne
arpl
sbb
and
out
stc
test
mov
inc
adc
xchg
lea
aaa
dec
ret
es
movsb
jl
xchg
or
in
ret
and
sbbl
fdiv
inc
cmp
adc
xor
pop
sti
adc
cmp
in
rol
movsb
fsubrp
stos
xor
cli
jle
es
sbb
je
mov
jo
add
orb
sub
mov
lock
pop
jae
subb
sub
or
ljmp
push
lea
mov
loope
outsb
mov
aad
cmp
addl
sub
or
faddl
push
fstpl
mov
and
roll
fwait
xor
call
aas
pop
inc
sahf
push
inc
loope
mov
pop
adc
jl
lahf
stc
sbb
jb
jnp
sbb
js
push
push
cmpsb
xor
sti
mov
pop
enter
xor
adc
sbb
mov
xor
lret
test
xchg
xor
ja
daa
sub
imul
test
fs
pop
aas
xor
inc
sbb
push
sahf
imul
cmp
dec
shlb
cmp
dec
testb
fadds
cmp
xor
push
movsb
popf
push
jnp
xlat
ljmp
jbe
cwtl
sub
adc
inc
jp
sahf
mov
icebp
push
int
pop
sbb
or
adc
sub
scas
aad
inc
jl
mov
jne
cmp
roll
shrl
lahf
inc
jge
in
lret
test
sbb
or
orl
push
clc
mov
movsb
push
ds
push
in
nop
shll
ds
inc
add
inc
adc
sub
rolb
add
popf
push
icebp
das
xchg
in
loop
outsl
push
push
pop
ljmp
cmpsb
cmc
mov
cmc
dec
shlb
and
pop
scas
je
outsb
lods
jge
repnz
xor
and
adc
mov
xchg
sub
in
sub
divb
xchg
cwtl
in
and
scas
rolb
mov
cli
add
push
es
and
adc
dec
les
push
repz
aam
test
rcrl
pop
mov
mov
pop
jae
pushf
sbbb
fldl
fcomip
das
push
cmc
adcb
mov
jae
je
xor
mov
and
icebp
movl
xchg
pop
or
inc
cli
nop
stc
pop
andl
add
mov
mov
add
xchg
loopne
lock
les
pop
xor
and
arpl
jne
pop
mov
add
fadds
sub
push
subb
mov
adc
rcrb
xorl
mov
and
jmp
ret
push
pop
popf
pusha
cmc
cltd
or
push
add
jmp
or
inc
sbb
test
pop
ja
std
push
push
cmp
fsubl
cmp
movsl
fcompl
scas
out
pop
jo
pop
pop
inc
push
jp
mov
jmp
out
mov
and
mov
pop
clc
aam
mov
add
sub
cli
push
sub
mov
lock
push
out
mov
mov
mov
pop
scas
inc
scas
aas
call
add
mov
hlt
xor
mov
xor
sti
xchg
sub
je
leave
aam
mov
xchg
add
imul
or
ficoms
out
push
dec
inc
jae
lcall
add
mov
sbb
nop
cli
jmp
pop
test
lods
cmp
xlat
jp
xor
test
movsl
notb
jge
aas
mov
cwtl
cmpl
push
push
sbb
movsb
dec
or
push
push
mov
pop
lock
mov
dec
push
jne
hlt
push
lods
mov
add
dec
jbe
es
cmpsb
xlat
sub
add
mov
mov
push
or
dec
xchg
pop
inc
aaa
dec
dec
sbb
outsb
popf
lret
mov
es
nop
xchg
or
stos
push
sub
js
push
test
cmc
dec
xchg
push
and
pop
movsb
jo
jl
mov
sarl
nop
inc
adcb
js
sqrtps
add
dec
insb
adc
stc
push
inc
mov
aas
imul
and
cmp
or
dec
jmp
dec
mov
jle
cltd
pop
xchg
push
and
cmp
adc
mov
pop
aaa
cmp
inc
jmp
scas
ret
lcall
lods
mov
aam
add
xchg
pop
inc
repz
pop
outsb
hlt
xor
outsb
enter
dec
and
pop
arpl
stc
mov
repnz
push
cld
mov
nop
cmpsl
in
test
lock
or
push
rorb
or
mov
std
push
sahf
jle
mov
add
pop
and
or
mov
and
shlb
in
inc
je
js
cmp
fsubrl
mov
push
ret
add
repz
sub
xor
inc
fs
mov
cmpb
or
aam
rcrl
adc
cmp
dec
repnz
adc
std
mov
pop
and
cmpsb
fildll
dec
jo
fisubrs
test
insl
adc
ret
outsb
sbb
xor
ret
mov
mov
sahf
mov
aam
push
pop
shl
rclb
jo
or
inc
mov
sahf
bnd
mov
and
movsb
fucomip
scas
popa
dec
and
add
pop
enter
mov
int3
mov
push
hlt
and
test
push
mov
add
sarl
shrl
pop
mov
xor
and
pushf
aam
testb
in
mov
or
movsb
das
ja
xor
xchg
pop
incb
leave
jp
test
or
cmpsb
add
lret
mov
push
pop
cmp
ficoms
push
xor
mov
push
sub
mov
pop
fdivl
sub
jb
pop
dec
xchg
cmpsl
push
jge
and
addr16
outsl
pop
and
adc
jmp
data16
mov
push
jnp
pop
je
mov
xchg
sahf
icebp
lcall
jnp
and
daa
adc
scas
shrb
into
cmpsb
movsb
in
mov
inc
xor
jecxz
mov
lock
fs
push
pop
data16
lcall
adc
cli
sahf
ljmp
ljmp
mov
and
inc
dec
add
repnz
filds
pop
je
loopne
add
or
fadds
ds
lcall
nop
or
add
mov
das
int3
in
ret
jg
mov
inc
fs
or
mov
jbe
push
mov
enter
adc
movsl
inc
test
xchg
int
mov
jg
lods
inc
jp
push
adc
adc
shlb
add
scas
mull
cmp
mov
cmp
les
jbe
cmpsb
adc
jle
jge
movl
xor
in
out
clc
das
stc
cmpb
cli
jmp
loop
enter
xchg
sbb
dec
movsl
pop
xchg
aas
push
push
cld
dec
push
es
mov
or
into
mov
sbb
sti
dec
dec
dec
jae
subb
movsl
add
and
push
push
test
popa
sti
and
es
test
pop
jle
sub
scas
lret
loopne
push
and
dec
mov
jae
addl
pop
ja
pop
mov
pop
int
push
call
mov
outsb
into
add
sub
xchg
fistpll
push
ds
push
and
mov
add
push
add
inc
gs
sahf
mov
lods
xchg
dec
mov
out
mov
jae
scas
ret
fcoms
adc
aas
repnz
movsl
incl
ds
and
or
test
out
inc
rcrb
dec
sub
cmovae
sub
push
pop
sbb
mov
icebp
movups
cmpsb
add
aas
mov
jne
jecxz
stos
pushf
stc
shlb
mov
xlat
mov
add
lahf
lcall
add
dec
push
shl
cmc
xchg
cmp
xor
mov
and
ret
int
mov
sarb
and
mov
sbb
loopne
adc
jo
sub
testb
sub
sub
cmp
or
jb
cld
or
clc
sub
aaa
push
add
push
xchg
sbb
in
call
jl
test
mov
add
push
mov
loop
sbb
adc
pop
sbb
xchg
push
adc
sub
loopne
arpl
call
dec
inc
pop
jae
cmp
mov
ret
jns
imul
sbb
xchg
xor
cmp
pop
roll
sub
mov
inc
jmp
fstpt
pop
xchg
aam
aas
mov
add
cwtl
stc
int
xchg
mov
push
or
std
dec
negl
xchg
std
jl
gs
les
rcrb
mov
pop
pop
xchg
lods
cli
loope
cwtl
xor
jl
ss
sbb
lods
mov
mov
adc
daa
jne
cld
ss
add
fsubrs
in
or
call
pop
inc
cmp
inc
ljmp
pop
dec
sub
add
imul
movb
cmc
jmp
mov
cmp
imul
lea
inc
sub
add
xchg
call
push
leave
mov
mov
jb
cld
add
mov
cmc
in
scas
inc
jo
jbe
cmp
loop
mov
add
mov
jne
push
bound
loope
push
mov
xlat
repnz
mov
jp
cmp
adc
sbb
mov
pop
push
xor
int3
fidivrs
es
xchg
adc
scas
mov
ljmp
sub
in
fs
or
fsubrs
rcrb
mull
call
in
push
push
and
xchg
cmpsb
and
scas
pop
gs
xor
imull
cmp
imul
lock
xchg
daa
call
inc
ret
sbb
repnz
dec
push
jo
push
fidivl
ljmp
cwtl
aad
and
js
adc
sbb
sbb
push
and
cmpsb
mov
test
adc
adc
push
push
xchg
mov
dec
xor
and
js
scas
xchg
fdivrp
cmpsl
inc
mov
ficompl
cltd
ret
stos
cmc
jl
mov
js
and
pop
scas
inc
fildll
push
lcall
leave
ljmp
add
test
stos
pop
pop
fs
and
std
inc
add
stos
sub
jp
or
sbb
or
sbb
ret
loopne
xor
out
aas
aam
loop
aas
mov
dec
loop
xchg
push
in
dec
fs
femms
ss
fisubl
pop
inc
sub
inc
cmp
mov
mov
jns
cli
inc
sbb
xchg
or
adc
mov
scas
roll
mul
pop
subl
mov
jle
es
stos
aas
xchg
pop
enter
mov
es
mov
add
mov
insl
inc
push
sarl
vmovddup
sbb
and
cmp
rol
jbe
fbld
cld
pop
cmp
ret
test
xchg
xor
and
fbstp
or
push
scas
jmp
lock
test
stc
mov
dec
sub
inc
push
or
insl
pusha
inc
push
adc
jmp
jl
xchg
int
aas
push
sub
or
xchg
push
pop
fs
add
adc
lret
mov
lock
dec
mov
jne
mov
jo
rcll
jp
and
push
nop
ljmp
invd
mov
les
addb
into
orb
movsl
jbe
xlat
je
in
and
outsl
xor
movsl
pop
sub
loop
ja
pop
in
dec
lods
cmp
divb
or
mov
aam
pop
in
ret
add
ficoms
test
rol
mulb
adc
in
mov
mov
lahf
int3
clc
mov
or
push
cli
and
xchg
sub
test
loop
nop
mov
push
inc
jne
cwtl
sub
cmp
mov
inc
enter
adc
into
pop
jp
mov
add
test
xlat
enter
decb
sub
xchg
fisubrs
pop
cli
and
outsb
mov
movsb
mov
adc
dec
pop
pop
stos
push
in
mov
aad
mov
xor
mov
in
dec
xchg
push
nop
adcl
jbe
add
xlat
sbbb
popa
fmul
fcomip
sbb
xor
mov
loope
test
cmpsl
call
dec
xchg
mov
push
add
mov
mov
jecxz
clc
sbb
pop
pusha
les
add
dec
jns
dec
jle
ret
jl
sub
jecxz
xor
push
jp
add
dec
mov
pop
sti
push
imul
in
xchg
cmp
cld
inc
in
insb
jecxz
mov
shrb
lock
inc
adc
loop
mov
mov
mov
jnp
cmp
adc
dec
insl
scas
jp
call
fwait
cwtl
sbb
dec
gs
inc
dec
in
test
rcl
clc
add
ds
add
das
cmp
add
out
cli
mov
loope
pop
inc
add
incl
in
cmp
mov
pushf
sbb
lock
mov
test
adc
adc
pop
push
es
test
and
sbb
ret
xchg
dec
std
fcmovb
adc
call
jecxz
push
xchg
cmp
cld
sub
cli
stc
aad
pop
sbbl
or
lret
and
pop
aas
repz
add
xchg
dec
add
and
hlt
sub
dec
in
and
imul
xchg
dec
push
out
mov
and
stos
add
pusha
cs
shlb
mov
fs
or
inc
mov
pusha
cld
js
cmp
cld
cmp
pop
shlb
cmp
sbb
pop
loop
loopne
test
lret
xor
sub
add
adc
ljmp
fnstsw
cmc
sub
dec
mov
or
aas
in
inc
pop
mov
or
mov
mov
lock
cs
pop
aam
rcrb
or
mov
inc
fistl
inc
insb
mov
xorb
mov
mov
adc
xchg
push
leave
enter
push
iret
fists
imul
add
sar
ja
lret
sbb
imul
cli
aam
subl
push
sub
mov
cmp
lcall
dec
js
jo
mov
sub
or
in
sub
push
jg
pop
ret
andl
sub
lea
bound
cmp
fsubrs
cmp
or
pop
add
orl
and
xchg
pop
dec
add
jl
ret
orl
sbb
xorb
add
adc
add
jle
mov
shl
sub
ret
js
pop
std
inc
and
sub
rolb
fucomip
xor
add
icebp
adc
addl
xor
push
es
and
loop
dec
mov
sub
and
cld
arpl
lods
ja
int
add
repz
lock
adc
mov
mov
jl
das
test
mov
test
jno
clc
jg
jmp
jmp
dec
loop
insl
add
mov
adc
sbb
mov
bound
xchg
or
add
xlat
inc
jns
push
iret
lcall
inc
ret
andb
mov
push
push
cmp
imul
je
pop
cmp
popf
cltd
iret
xor
enter
and
ret
xchg
push
pop
test
ret
mov
loop
pop
lods
cltd
dec
xor
xchg
mov
jmp
in
mov
lods
adc
push
push
pop
cwtl
mov
xor
das
sub
xor
pop
fbld
push
push
add
xor
lahf
ret
inc
pop
pop
jle
in
loop
or
push
mov
iret
adc
lcall
fsubp
inc
cmp
clc
or
pop
in
push
xchg
cmp
out
and
mov
dec
hlt
into
pop
xor
stc
dec
lock
push
inc
cmpsl
pop
add
xchg
push
out
arpl
or
mov
push
lret
and
and
les
scas
sub
xchg
fbstp
sbb
xabort
in
adc
dec
orb
out
lcall
xchg
xchg
mov
xor
hlt
jmp
push
add
sub
loopne
call
add
fs
add
pop
or
sub
test
sub
in
mov
test
dec
repnz
mov
movsl
stos
add
push
psrlw
xor
pop
adc
shll
jmp
or
sbb
loop
pop
xor
push
mov
fistps
pushf
and
add
add
icebp
inc
jg
stc
fistpl
pusha
inc
inc
mov
inc
inc
and
jno
lock
sti
iret
inc
push
jp
in
loope
mov
pop
loopne
sbb
jg
ret
jne
sbb
mov
push
lock
sub
mov
jecxz
pop
pop
sarb
enter
cs
in
pop
xor
mov
das
test
repz
xchg
enter
dec
push
gs
scas
jmp
mov
sahf
sbb
cld
push
sub
cmp
push
push
cs
add
xor
pop
xchg
je
pop
dec
rorl
pop
mov
jge
pusha
inc
aad
js
pusha
jno
test
lcall
inc
lds
or
out
cwtl
inc
pop
cmpsl
push
xor
inc
jbe
push
or
scas
popa
mov
adcb
jp
mov
ficomps
repnz
push
scas
aad
stos
cwtl
adc
adc
cmpsb
lret
sub
dec
imul
cmp
cmc
or
jbe
es
push
cli
push
push
jp
xchg
cmpsb
pop
hlt
jp
and
push
or
aam
jl
sub
addr16
sar
sbb
lret
mov
lret
loopne
jb
and
mov
insb
loopne
ljmp
sti
ljmp
notb
lahf
popa
nop
loop
scas
es
insl
cmp
out
cli
test
cli
mov
jae
or
addb
rcr
jle
je
pop
cmp
add
ljmp
pop
ja
adc
push
xchg
sbb
jnp
xor
xchg
inc
push
inc
repz
shll
clc
aaa
push
outsb
pop
fldcw
pop
lods
mov
movsl
sarb
inc
int
test
stos
push
insb
clc
stos
pop
add
push
pop
adc
add
mov
and
and
and
mov
loop
ss
ljmp
xchg
sar
ret
test
iret
das
push
mov
and
nop
fstpl
rol
or
and
or
xchg
sbb
cli
cli
add
js
test
ficompl
or
pop
sbb
inc
jb
jg
push
and
in
cli
psubsw
push
data16
inc
cmp
test
cmpsl
nop
jns
pop
mov
dec
outsl
pop
mov
jp,pt
std
jle
and
in
bound
push
inc
std
inc
decl
push
std
add
rorl
aam
stos
jnp
inc
inc
mov
scas
lcall
fstps
mov
data16
mov
mov
orb
mov
push
mov
add
jae
pop
fcmovu
push
out
mov
aam
les
or
mov
mov
daa
sahf
addr16
sbbl
rolb
adc
xchg
stos
scas
lret
call
mov
lods
cmp
cmp
mov
arpl
pushf
lahf
xor
or
mov
add
xchg
mov
xchg
or
jo
and
xor
mov
push
or
cmp
test
dec
dec
push
mov
jbe
push
fwait
test
and
mov
cmpsl
inc
sub
mov
aam
xor
xchg
ds
inc
sbb
stc
cmc
pop
push
or
aam
jnp
push
cli
inc
dec
dec
mov
pusha
xor
or
pop
outsl
shrl
adc
clc
or
jle
push
push
push
andl
aad
out
lret
cs
adc
ss
loopne
lahf
mov
sbb
push
cld
movsl
and
cli
mov
adcb
mov
push
mov
movb
push
cld
cmp
inc
sub
inc
incl
inc
mov
lods
jmp
dec
jge
push
lods
mov
int3
push
sbb
or
clc
fisttps
or
xlat
insb
and
loop
add
pop
inc
loop
sub
pusha
and
inc
or
rol
cli
inc
pop
sbb
lcall
ret
lcall
rorb
lock
or
js
in
lret
xchg
xor
aas
cmp
loop
rcl
fldenv
push
test
roll
scas
les
mov
pop
imul
push
xor
pop
inc
dec
add
test
out
fstpt
imul
stos
arpl
add
cmp
mulb
js
jnp
cmp
daa
push
add
in
lcall
call
cmp
out
clc
shll
mov
aas
xorb
lock
push
aaa
and
ss
mov
mov
push
into
mov
and
or
sarl
loopne
sub
push
cli
mov
cld
or
fdiv
and
dec
subb
repnz
ss
out
xor
clc
mov
and
xchg
pop
mov
or
xor
repz
stos
or
pop
lock
outsl
xlat
mov
aaa
adc
inc
test
out
inc
sbb
bound
clc
xorl
bnd
loope
and
cmc
outsb
xchg
stos
mov
lahf
inc
ja
lds
or
mov
bound
lock
enter
outsl
xchg
mov
push
xor
mov
popf
xor
mov
push
xlat
adc
mov
add
or
pop
xor
out
mov
pushl
pop
cmp
pop
mov
add
jbe
shll
loopne
mov
mov
mov
jg
sub
movsb
cmp
push
ljmp
sub
and
enter
push
push
or
inc
sub
mov
outsb
push
mov
mov
cli
push
push
or
and
add
imul
inc
cli
lea
out
push
xchg
adc
fsubrl
pop
jne
data16
mov
pop
xor
aam
clc
sbb
xchg
out
lahf
ss
repz
fistpll
icebp
enter
sbb
scas
fs
and
mov
and
subl
or
inc
add
sbb
cmp
mov
mov
shll
sub
jae
data16
mov
out
mov
or
mov
add
xchg
out
mov
xchg
repnz
lods
aas
ljmp
pusha
cmp
mov
enter
jb
movsb
mov
fdivrs
adc
jne
cmp
addr16
mov
and
and
js
sbb
outsb
add
js
mov
loope
enter
sti
jp
iret
mov
call
imulb
aam
imul
loop
stos
call
jnp
scas
lret
lret
sbb
cmp
add
add
test
or
xchg
sub
and
ss
cmpsb
pop
add
mov
push
jbe
or
pop
je
test
pop
inc
ss
or
aas
pop
mov
rcll
es
jne
jmp
div
push
int
sbb
and
dec
push
mov
sti
push
jg
mov
add
mov
sbb
or
cld
aam
loop
or
mov
das
popa
jmp
ret
sbb
popa
mov
mov
and
push
cli
pop
ret
divb
fimuls
ds
mov
adc
dec
lock
enter
cmp
or
int3
cmpsl
add
leave
dec
pop
mov
jo
mov
dec
je
sub
cmc
jae
sub
inc
into
and
adc
xchg
cmp
or
mov
fwait
subl
adc
mov
xchg
mov
scas
stos
sub
loope
cmc
xchg
push
push
stos
shl
dec
in
mov
movsl
push
push
xchg
cmp
nop
push
fnstenv
jle
jbe
out
and
pop
nop
xchg
ljmp
and
adc
fstps
outsl
pusha
aad
sbb
lods
cwtl
push
jae
sub
dec
jns
or
push
addr16
xchg
lahf
mov
dec
pop
out
into
xchg
sbb
stos
dec
das
and
out
in
leave
and
jnp
lcall
fidivrl
jmp
jb
and
je
ljmp
mov
test
jmp
adc
bound
inc
inc
scas
scas
push
lret
shlb
sub
les
pop
push
xchg
aas
rclb
jl
adc
movsl
stos
pop
arpl
mov
subl
punpcklbw
add
push
sahf
and
lods
bound
inc
mov
enter
mov
push
and
cmpsb
repnz
int
aad
ljmp
add
test
mov
inc
jnp
rcll
jno
mov
push
in
cmp
or
lods
jmp
pushw
shll
pop
mov
adc
insb
jno
cmp
aaa
shrb
sub
sbb
mov
add
adc
cld
pusha
xchg
testb
data16
inc
cmpsl
xor
sbb
ja
inc
cmp
dec
pop
icebp
mov
jl
mov
xchg
les
pop
xchg
dec
dec
adc
sub
push
das
mov
fwait
bound
int
add
mov
mov
in
cmp
mov
jmp
mov
or
outsb
dec
pop
mov
out
mov
bound
push
inc
dec
inc
add
add
out
push
sub
xlat
jno
imul
into
adc
add
inc
mov
pop
add
pop
mov
pop
cmpsw
or
pop
pop
push
fisttpl
sbb
add
xor
adc
mov
fistpl
scas
faddl
jmp
das
js
adc
movsb
ljmp
out
jle
mov
mov
loopne
repz
fcompl
adc
cli
and
and
xchg
test
loope
out
aam
adc
icebp
jp
pop
rolb
mov
hlt
pusha
ret
iret
daa
test
iret
out
jp
jge
adc
jg
xor
jns
fcomps
daa
mov
inc
add
sbb
das
push
fisttps
aas
insb
mov
orl
sbb
cmp
pop
jbe
data16
or
inc
loop
jge
aad
arpl
cmp
and
pusha
cwtl
jl
mov
add
fdivrl
lret
xor
xchg
fcoml
and
clc
jl
aam
popf
jmp
adc
nop
leave
push
lahf
sub
mov
arpl
je
ret
sub
stc
mov
pop
shrb
xchg
mov
test
mov
shll
insb
ficomps
jns
inc
jnp
ds
dec
int3
mov
movsb
or
lds
lea
mov
jne
clc
pop
adc
subl
icebp
and
addr16
daa
cld
mov
fcomi
pop
mov
sbbl
ljmp
mov
xchg
xor
out
mov
fbld
stos
test
add
pop
fistpll
out
push
inc
dec
out
lcall
pushf
movsb
push
cli
add
flds
mov
mov
and
xchg
shrl
mov
enter
xor
sub
jle
xlat
jns
lds
in
pusha
mov
add
add
jp
jb
mov
cli
push
push
or
orl
push
dec
cltd
inc
lds
push
mov
or
xchg
bound
sub
repnz
fsub
pop
sbb
test
jno
fimull
dec
xchg
jl
jo
sbb
out
loopne
xor
sub
pop
in
call
scas
sbb
ja
bnd
pop
xchg
enter
jb
jno
pop
iret
or
mov
mov
adc
int3
cmpsl
idivl
pop
imul
lds
insl
add
xor
out
fdivs
sub
imul
add
push
xorb
js
cmp
cmp
mov
adc
mov
sub
mov
mov
fistps
ucomiss
sub
fmull
cmp
iret
ret
adc
mov
addr16
testl
cwtl
jp
pop
push
xchg
adc
dec
call
jne
fisubl
cld
or
dec
clc
cld
sub
test
pop
popa
add
cli
dec
dec
cld
mov
cwtl
bound
push
pop
xchg
adcb
outsb
sbb
cmpsl
xor
cmp
mov
jb
test
inc
pop
test
push
ror
loope
jae
pop
push
mov
pop
push
roll
out
xor
mov
fmuls
fcomp
push
aas
push
xchg
adc
cmp
add
test
jbe
out
nop
push
jge
rolb
mov
add
out
and
mov
dec
fwait
pop
lret
cmpl
cltd
test
lock
jmp
mov
sbb
sbb
sbb
inc
imul
pop
out
addr16
cmp
or
in
stc
sbb
pop
cmp
adc
push
js
div
push
and
and
scas
pusha
inc
add
enter
jmp
in
loopne
movb
xchg
and
xor
push
in
dec
jno
pusha
sti
sbb
inc
cmp
mov
push
or
into
fsubl
mov
ja
sub
cs
cmpsb
call
cli
pop
imull
aam
loope
xlat
test
cld
insb
cld
rolb
mov
clc
enter
inc
lahf
sub
adc
add
loop
popl
outsl
data16
jno
sub
sbb
mov
adc
add
jns
pusha
rcrb
xchg
pop
sbb
ret
pop
push
add
lods
adc
incl
push
xchg
test
mov
pop
sti
fisubs
or
je
xchg
lcall
adc
stos
or
jnp
xchg
cmp
data16
outsl
push
xlat
testb
add
mov
push
sbbb
mov
pop
ret
cmpsb
iret
into
add
ljmp
and
xor
fnstsw
mov
jb
pop
stos
or
out
iret
js
int
xor
lods
fidivl
jmp
mov
add
push
sbb
ret
xor
adc
and
xchg
xor
push
jnp
bsf
or
mov
or
fmuls
lea
adc
push
sarb
push
and
icebp
clc
stos
mov
sub
incl
outsl
js
movsl
fldcw
aas
sbb
lods
push
and
add
scas
test
adc
mov
scas
cmp
push
mov
push
add
jb
add
cmp
cmpsl
cwtl
daa
in
das
mov
jecxz
xchg
and
fiadds
lea
mov
int3
adcl
imul
out
lret
arpl
dec
and
test
push
push
insl
pusha
jp
push
call
insb
bound
in
aam
add
push
call
add
and
jg
scas
or
push
popf
jecxz
xor
cli
sub
ret
in
push
xor
shl
out
cmpb
mov
sbb
es
add
cmp
mov
clc
jb
out
ljmp
popf
or
pushf
movsb
and
out
aaa
dec
pop
mov
rcr
sub
sub
xchg
sub
outsb
sbb
rorl
cld
hlt
or
pushf
jle
inc
xchg
xchg
sahf
pop
push
arpl
mov
and
enter
mov
test
cld
call
xchg
mov
aaa
cmp
inc
xor
gs
ja
mov
cmp
rcrb
popf
cmp
push
cmp
mov
aaa
cli
fsts
mov
cmpb
out
mov
cmp
pop
sub
out
pop
mov
out
jmp
pusha
stc
ret
pop
movsb
mov
dec
mov
pop
das
in
dec
lahf
ret
insb
mov
subb
and
pop
add
bound
sbb
and
adc
loope
add
sub
inc
sub
cli
jg
sahf
outsl
or
pushf
xchg
push
sbb
adc
sub
std
je
mov
lea
or
fs
xchg
jnp
dec
imul
loopne
inc
test
pushl
sti
lock
mov
into
jle
inc
and
inc
jle
add
call
sahf
cmp
rorl
push
or
sub
inc
and
ror
loopne
inc
fdivr
in
jmp
fildl
sahf
loop
jae
dec
mov
pop
pop
out
stos
fwait
mov
pop
xchg
and
sub
inc
out
jo
jb
xchg
clc
bound
aam
ljmp
icebp
xor
dec
push
out
xor
dec
test
outsl
adc
inc
inc
cld
mulb
call
cmpsl
data16
mov
lcall
cli
mov
call
or
xor
adc
pushf
in
int
push
je
mov
pop
fsubrl
cmp
mov
movl
push
lock
je
jbe
dec
out
test
push
mov
daa
cmp
pop
jl
inc
jnp
xor
lock
cmp
loop
mov
daa
sbb
addr16
outsl
jmp
push
les
add
hlt
sub
test
cli
insl
das
jbe
insl
push
aas
xor
arpl
imul
jge
sbb
cwtl
and
add
jp
sub
out
and
rsm
xchg
cli
insb
fbstp
mov
test
sub
or
nop
push
jg
loopne
les
gs
jnp
jle
leave
and
dec
stos
jecxz
ljmp
mov
in
loop,pn
clc
cmp
iret
dec
clc
rclb
mulb
pop
and
lret
out
pop
cmpsb
ret
lea
sbb
clc
xlat
stos
shl
and
mov
cmpsb
enter
nop
xchg
stos
xchg
cwtl
xor
xchg
xor
or
xchg
xor
push
cmp
mov
js
cmp
xchg
adc
or
cmpsb
and
stos
ds
mov
inc
cli
icebp
mov
xor
lock
enter
push
xor
sti
daa
pop
icebp
and
adc
jb
fisubl
icebp
daa
jge
jo
fs
add
insl
inc
cmpsb
or
cmpb
les
call
cmp
insl
add
or
mov
in
es
fldl
mov
pop
iret
nop
je
inc
jl
sbb
cmpb
push
or
jo
negl
lock
aam
loope
xor
roll
pop
sbb
push
aaa
fimull
jns
or
aaa
out
pop
xor
fcoml
data16
push
mov
push
mov
stos
xor
cs
mov
fldl
div
int
xchg
push
dec
add
jg
or
lahf
leave
sub
or
mov
mov
pop
std
and
add
xor
jg
daa
add
pop
push
bound
insb
inc
dec
mov
dec
addl
xlat
repnz
inc
mov
or
mov
shlb
cmp
je
cmp
cmp
mov
sbb
dec
lret
test
fbstp
aad
jge
and
or
add
inc
in
add
repnz
dec
mov
out
xor
mull
xor
shlb
loop
out
inc
cli
add
or
test
push
pop
adc
add
es
lea
xchg
call
aad
lds
shlb
idiv
push
adc
mov
out
cmp
dec
pusha
out
or
call
or
cmp
loopne
sarb
push
jg
xchg
push
adc
orl
imul
inc
shl
add
add
cld
jbe
push
fsubr
es
fmuls
xchg
push
push
inc
push
sbb
dec
scas
pop
jl
fwait
adc
pop
push
jl
lahf
jg
or
mov
lcall
xlat
mov
pop
pop
addl
pop
push
sar
lret
jne
jmp
test
movsl
push
xchg
shlb
out
icebp
mov
xor
mov
sub
stos
push
rcll
jae
pop
out
outsb
push
cld
mov
aad
xor
mov
fcmove
lods
pop
add
sbb
or
call
pop
clc
out
lcall
jp
mov
mov
in
push
fs
mov
inc
push
lgs
mov
inc
outsl
iret
js
movsb
scas
and
mov
call
adc
mov
ret
test
mov
js
mov
fiaddl
pop
mov
adc
fdiv
fucomp
jp
xchg
repz
pop
xchg
lahf
shlb
add
or
dec
fimuls
ljmp
push
rcrl
push
incl
sub
icebp
test
cmp
pop
xchg
test
push
gs
das
movsb
test
in
sbb
sub
sub
sbb
xchg
les
fsubs
jl
jo
insl
loopne
xlat
add
adc
decl
scas
cmp
push
sbb
dec
outsl
push
inc
les
or
and
aam
inc
add
bound
nop
ljmp
dec
fcoml
clc
or
cmp
in
pop
jecxz
jmp
fs
ja
jo
adc
cmpsb
mov
dec
mov
push
and
lock
adc
or
movsl
and
je
cli
dec
leave
push
test
sysexit
cmp
arpl
shl
xlat
ret
adc
xor
dec
push
daa
add
pushf
lods
mov
adc
sub
cmc
sbb
inc
pop
or
fidivrl
and
sbb
jne
fucomip
sub
add
cs
or
cld
pop
inc
xor
lods
mov
mov
inc
or
mov
pop
jecxz
and
add
mov
das
aad
add
push
shlb
cld
sarb
mov
xchg
or
xchg
add
fcoms
lods
add
fists
psubsb
mov
lahf
pop
ret
test
ljmp
cmp
insb
adc
jo
movsb
mov
push
adc
pop
lods
adc
sbb
fs
lods
ljmp
mov
aas
out
loope
cmpl
pusha
push
add
add
insl
loopne
clc
lock
xchg
push
or
inc
jge
push
jo
test
jle
push
jl
rolb
or
xor
mov
imul
xchg
lods
pusha
inc
push
jns
ss
xchg
enter
dec
cmp
mov
test
popf
xchg
push
pop
cmc
pusha
fsubl
cmp
add
hlt
and
mov
dec
mov
jno
mov
nop
icebp
orl
hlt
add
push
add
mov
pop
lock
fisttpll
shlb
pop
in
aaa
cmp
rol
pushf
div
jle
filds
sahf
mov
add
sub
push
ret
adcl
je
or
dec
ret
icebp
daa
push
sub
cmp
mov
fisttpl
add
adc
and
jmp
adc
and
pop
mov
or
and
arpl
jg
imul
and
dec
int3
push
daa
stc
xchg
fildl
jle
repnz
dec
test
divl
jle
xor
repnz
test
sbb
sbb
imul
jns
lea
mov
add
adc
xchg
in
mov
dec
aam
movsb
das
sbb
adc
jb
xor
add
dec
pop
or
jbe
sub
xchg
negb
testl
add
lock
lods
cmp
popf
daa
mov
cmp
and
adc
fmulp
pop
movsb
or
lods
clc
cmpsb
and
jle
mov
insl
into
push
aam
pusha
loopne
push
dec
aas
test
pop
jl
ss
fbstp
sub
bound
in
sub
lods
test
mov
imul
xchg
test
mov
xchg
push
mov
adc
adc
adc
stos
sar
clc
adcb
stc
sbb
jge
pop
insb
aam
push
ds
pushf
out
mov
mov
mov
xor
adc
xchg
jp
sarb
mov
daa
test
jge
popf
lods
push
sti
lea
nop
adc
int
and
jg
sbb
push
hlt
js
dec
aad
rolb
cmp
cld
dec
into
dec
test
jmp
xor
add
and
sub
xor
xchg
mov
lret
dec
and
dec
sbb
popf
sarb
and
mov
mov
test
out
shll
cmp
outsb
js
xchg
clc
loopne
lret
lods
sub
insb
add
mov
mov
push
movsl
rorb
outsb
dec
push
pop
insb
sbb
jno
mov
push
ret
aaa
or
mov
stos
loop
dec
out
ret
pop
out
cwtl
jmp
dec
adc
lods
int3
inc
adc
cmpsl
sbbb
and
movsb
cmc
fdivrl
mov
mov
jp
aas
inc
add
and
jne
in
inc
pop
out
das
push
mov
pop
fld
jecxz
enter
cltd
cmp
arpl
sub
cli
addb
cmp
and
subb
fadds
icebp
js
adc
in
outsb
mov
push
xchg
rclb
add
outsb
shll
mov
mov
adc
shll
les
mov
call
pusha
cmpsl
mov
jnp
inc
lds
sbb
or
sub
test
xor
test
xor
scas
inc
and
cli
and
int
fimuls
mov
lea
and
clc
dec
in
push
scas
lea
adc
ret
rorl
jns
cltd
pop
jecxz
inc
sub
out
or
add
shrb
push
adcb
cld
shlb
subl
loopne
mov
sbb
lods
outsb
iret
sbb
maxps
mov
add
mov
inc
adc
fwait
sub
ficompl
cli
xorb
adc
or
in
xchg
jp
sbb
or
or
xchg
and
ret
inc
push
jmp
ss
ret
pushf
out
xor
shrb
inc
push
rcll
fcmovnu
push
js
fcomps
push
ds
addl
mov
jg
jp
popl
cli
std
sbb
inc
inc
nop
or
mov
clc
xchg
mov
inc
sbb
scas
fwait
sub
jno
adc
pop
je
dec
dec
mov
test
out
das
jle
or
or
xlat
fldenv
bound
jecxz
lret
lea
jmp
sahf
les
dec
popa
push
data16
inc
pop
lods
pop
fsubs
loope
mov
and
mov
notl
ja
jb
pop
decl
cwtl
adc
shll
and
inc
fcomip
dec
jp
testl
dec
push
stc
stc
rcl
or
jecxz
das
jmp
sbb
outsb
fsub
inc
xor
adc
into
xlat
ds
adc
adc
inc
jl
pop
ss
shrb
bound
stos
push
push
adc
clc
lds
pop
push
aam
aas
cld
xchg
out
xor
inc
je
cli
loopne
ficoml
push
jno
clc
in
aad
add
pop
mov
pop
loopne
aam
setg
clc
in
pop
sbb
insb
pop
push
lods
das
popa
popf
fdiv
inc
xchg
mov
and
lock
cs
je
fimull
fcomps
les
test
mov
add
mov
call
rorl
imul
js
sbb
aas
clc
adc
and
xchg
jl
jp
leave
lock
stc
dec
pop
out
repnz
adc
dec
cmpb
sbb
ret
pop
pop
enter
dec
add
inc
mov
mov
cmpl
sbb
cmp
xchg
fwait
out
hlt
movl
or
jmp
cmp
xchg
inc
jne
push
test
push
clc
cmp
movsb
lahf
les
jle
inc
adc
pop
push
and
dec
outsl
mov
cli
push
loop
ret
dec
jmp
inc
orl
pop
sbb
fldenv
loopne
in
cmpb
push
adc
gs
fisubrl
inc
push
sbb
or
dec
ret
push
inc
into
inc
mov
call
xor
or
fsubs
or
test
jle
shll
mov
mov
adc
pop
aad
push
push
pop
mov
ljmp
fs
out
aas
andb
rorb
push
aaa
sbb
aaa
sbb
and
je
adc
ljmp
pushf
inc
stos
pop
rolb
sbb
dec
out
xchg
inc
fdiv
and
shlb
or
dec
popl
xorb
arpl
sub
ret
test
or
inc
or
cmpsb
fidivl
or
les
addb
cmpsl
add
lret
sbbb
mov
jp
fwait
shrl
dec
sarl
adc
rcrl
push
ja
xchg
lcall
cs
add
cld
sti
lock
adc
dec
fs
mov
push
test
adc
push
or
pusha
mov
add
xorb
jmp
in
cmp
out
test
scas
decl
jno
mov
test
ret
out
push
sub
jbe
jns
enter
jg
jo
bound
mov
in
pop
adc
sbb
loopne
sbb
cmpb
fs
inc
sub
nop
xor
decl
xchg
nop
jns
inc
or
xor
shrl
arpl
mov
jo
jmp
cwtl
lods
inc
cmpl
mov
mov
in
hlt
andb
or
or
dec
dec
push
scas
call
jo
outsl
ret
scas
xlat
add
pop
pop
jg
inc
lods
addb
test
adc
cmp
pop
jnp
aad
call
negl
or
add
fcomip
dec
jmp
stos
sbb
repz
loopne
repnz
lods
pop
insb
fs
push
test
scas
jmp
notb
mov
es
cld
xchg
jge
and
outsb
mov
dec
and
ja
mov
je
adc
in
iret
icebp
xor
aas
xor
popa
pop
test
ljmp
inc
inc
popa
xlat
add
fcomp
and
mov
pop
pusha
push
nop
int
jbe
push
inc
mov
sahf
sbb
fsts
pop
cmp
int3
inc
pop
jbe
mov
dec
ret
xchg
and
and
dec
pop
bswap
icebp
js
or
mov
and
das
fisttpl
push
std
xor
ret
mov
out
and
push
daa
in
je
mov
lock
popa
xchg
and
into
out
xchg
pop
out
or
xorb
jbe
pop
into
sbb
sbb
cmp
lcall
pop
sub
cwtl
adc
je
cmp
pop
mov
sub
jle
dec
add
jle
cmp
addl
mov
sbb
mov
movsl
loopne
xchg
push
xchg
ret
daa
adcb
out
sub
xchg
jg
aas
xchg
adc
sbb
push
jl
jl
dec
pop
pop
in
cld
adc
inc
cmp
lcall
outsl
cli
mov
or
mull
popf
lods
xchg
clc
inc
and
es
dec
inc
cmpb
test
inc
or
rorb
aaa
hlt
ret
cmp
cmp
push
lcall
mov
les
mov
xor
frstor
sbb
and
mov
ret
xorl
loope
js
pop
dec
mov
aaa
adc
data16
cmc
test
pusha
sub
inc
pop
push
push
add
in
clc
les
xchg
mov
dec
or
inc
push
xchg
cmp
shlb
cwtl
rorb
lret
push
dec
test
fadd
les
lock
fcompl
jo
cmp
movsl
imul
inc
shrb
mov
roll
sbb
testl
add
idivb
insl
and
inc
mov
inc
cmp
push
sub
cmp
aam
dec
pusha
adc
subl
xor
fisubl
arpl
xchg
jecxz
cmp
dec
push
lahf
js
insb
add
sbb
sub
xor
dec
jmp
cmp
xor
xchg
shll
imul
xchg
mov
cmpsl
shlb
out
or
push
pop
shll
hlt
dec
fcoms
lock
rolb
xor
inc
cmpsl
jg
inc
dec
sbbl
pushf
test
test
mov
cmp
or
and
jmp
or
dec
stos
mov
das
lods
loopne
mov
mov
pop
aaa
enter
adc
testb
xchg
mov
pop
pop
push
daa
sbb
lods
sbb
dec
fists
inc
inc
dec
and
sbb
and
fwait
xorb
in
cli
mov
sbb
test
xchg
cmc
xchg
sbb
add
mov
pop
jo
jno
iret
cmp
cmp
jecxz
movsb
faddl
mov
push
or
jmp
jge
fwait
add
lods
jg
cmpsb
adc
mov
ret
sub
lds
pop
scas
pop
jne
or
xchg
jmp
addb
mov
rcll
clc
shlb
xchg
adc
pop
test
test
mov
lds
fsubp
ja
cmp
mov
cmp
add
sahf
inc
xchg
fs
scas
sub
mov
mov
jge
push
cli
cs
xchg
loop
add
sbb
lcall
std
xchg
pop
ljmp
fiadds
stos
or
xchg
sbbl
mov
fs
pushl
add
xor
dec
arpl
add
sbb
clc
inc
inc
loope
and
pop
bound
dec
add
jmp
les
jle
xor
mov
mov
push
pop
arpl
ss
scas
rolb
scas
std
mov
fiaddl
nop
pop
enter
or
rclb
cmovb
ds
cs
xchg
cs
int3
or
cmp
inc
push
jp
mov
push
inc
stos
outsb
cli
add
add
xchg
cmp
movsl
pop
jg
leave
test
inc
lcall
stc
outsl
sub
pop
dec
cld
aaa
fwait
cmp
sub
in
mov
dec
mov
sbb
and
dec
scas
pop
and
decb
scas
cmpsb
adc
mov
xor
and
fst
pop
push
mov
js
push
pusha
add
aad
seto
cmp
add
cli
ljmp
lods
jne
testb
arpl
repnz
cs
add
les
pop
pushf
push
mov
sub
and
add
inc
sub
adc
inc
jge
aam
outsl
mov
cli
push
cmp
or
xor
jbe
pop
dec
inc
add
or
inc
pop
outsl
out
in
scas
xchg
cmp
pushf
and
lret
xchg
inc
push
movsb
mov
mov
lods
sub
imul
and
or
xor
roll
inc
ljmp
out
shlb
and
jp
jle
test
out
jge
mov
sahf
outsb
outsb
mov
and
mov
outsb
xchg
adc
or
mov
sbb
adc
sbb
mov
lret
inc
or
cltd
mov
jbe
mov
stc
movsl
xor
loope
pop
jo,pt
inc
mov
inc
and
insb
xor
jecxz
ret
icebp
cs
mov
cmp
lret
je
push
push
or
mov
or
lea
mov
lret
adc
call
bound
jno
adcl
les
jbe
pop
sbb
fdivrs
sub
xor
outsb
pop
sbbl
neg
in
arpl
das
mov
mov
push
add
xor
or
or
repz
dec
pop
cmp
pop
push
lret
ljmp
push
sbb
jge
loopne
sbb
mov
sub
jl
hlt
mov
in
inc
sbb
repnz
and
push
jbe
mov
mov
adc
movsb
mov
jg
adc
fnstcw
clc
jg
or
inc
into
pusha
xchg
xchg
mov
das
jp
push
push
sbb
push
xor
inc
cmp
adc
in
or
movb
hlt
adc
hlt
out
cmp
inc
and
lock
test
mov
nop
sub
scas
mov
sbb
sub
cli
inc
dec
js
cmp
popf
xor
mov
jge
test
out
mov
test
negb
inc
push
pop
lcall
lea
in
repz
sbb
xchg
jg
inc
mov
push
rorb
xchg
popf
mov
and
jns
xchg
push
out
xchg
mov
in
hlt
mov
dec
es
pop
dec
mov
cwtl
mov
push
clc
ficoml
mov
aas
add
push
sub
mov
je
jmp
bound
mov
hlt
std
xchg
sbb
dec
adc
dec
add
pop
jbe
scas
jp
adc
roll
loope
xor
pop
out
jge
push
aad
aad
lret
push
cmp
and
and
cs
pop
nop
in
dec
jo
popa
jg
ds
inc
push
sub
dec
ja
test
jl
cli
or
mov
pushf
mov
pop
cli
cmpsb
add
int
adc
dec
xor
pop
xchg
push
cmc
inc
mov
popa
xor
xchg
jb
aam
iret
cltd
and
xchg
add
sbb
push
or
jae
or
dec
mov
pop
scas
ljmp
jle
sbb
ja
mov
or
jae
push
cmc
xchg
aaa
jb
ret
sbb
mov
out
pop
mov
mov
dec
xor
dec
pop
mov
popf
dec
fcomi
add
adc
and
or
push
cmp
cmpsb
test
and
dec
faddl
adc
je
cmpsb
hlt
adc
sub
ret
push
pop
jle
inc
aaa
mov
cmpb
jno
sub
fiadds
push
cwtl
or
adc
push
xor
sub
sbb
push
loope
addr16
pop
in
aas
mov
pusha
xor
xchg
xchg
jo
test
fisubrs
lock
xor
push
jns
push
push
push
xchg
adc
loop
popl
jp
out
adc
jecxz
fs
inc
hlt
pop
mov
enter
and
movsb
xchg
mov
das
jmp
adc
jae
xchg
push
inc
dec
ss
pop
or
fisubl
or
cmpsl
ja
cltd
mov
mov
rol
jb
add
cltd
inc
ljmp
out
mov
add
lods
or
jne
insl
mov
xor
cs
xor
fwait
adc
add
xchg
and
loop
rcr
mov
or
add
mov
or
loope
mov
mov
jnp
imul
xchg
pushf
pop
test
test
test
jle
dec
and
and
jo
loopne
int3
fimuls
or
lret
sub
push
int
lret
add
mov
pop
inc
stc
push
test
imul
enter
mov
xchg
rcrl
or
ret
mov
inc
mov
cmc
sbbl
ljmp
cmpsb
pop
sub
mov
enter
sbb
or
pushf
add
or
or
add
push
xchg
loopne
jmp
imul
loope
xor
xchg
std
mov
mov
aam
add
cmp
insb
cmp
push
push
outsb
push
ret
push
in
lds
dec
ret
jmp
xchg
xchg
cwtl
jle
popa
into
jmp
cmp
decl
add
mov
and
jp
lods
insl
sub
pushl
jle
jb
cmovo
mov
dec
out
fcmovb
stc
js
stos
sbb
mov
adc
adc
scas
in
inc
stos
mov
and
das
add
and
jg
and
push
ss
popf
addb
inc
call
call
add
les
insl
ljmp
in
push
outsl
pusha
fs
orb
mov
roll
xlat
sbb
dec
mov
xor
icebp
repz
icebp
outsb
hlt
adc
adc
cmp
test
push
or
out
insb
sbbl
mov
and
pop
jecxz
jl
add
mov
cld
ret
push
or
pop
mov
jne
mov
xor
mov
xorl
inc
adc
mov
out
xor
xor
aaa
add
mov
sbb
ljmp
push
xor
fwait
out
in
in
xchg
mov
mov
stos
dec
pmaddwd
mov
mov
insl
cmp
in
cli
iret
int
push
push
scas
es
and
mov
dec
dec
push
aam
cmp
scas
dec
pop
jl
lret
push
mov
out
dec
xchg
pop
shrb
sub
movb
or
pop
hlt
push
sahf
jbe
enter
and
imul
shl
out
call
adc
jno
fwait
ljmp
adc
push
cmpsb
jge
mov
dec
inc
fimuls
mov
test
cmc
mov
and
mov
push
data16
cmpsb
dec
push
ret
popa
roll
inc
push
jp
mov
test
sub
gs
add
adc
mov
adc
cmpsl
js
inc
fdivs
inc
rorb
outsl
mov
lcall
xchg
jle
roll
mov
jmp
ret
stos
xor
cmpsb
in
lock
push
sbb
lock
je
xchg
movsl
mov
mov
test
call
mov
cli
addr16
sarb
sub
add
sbb
std
or
jp
aaa
jecxz
faddl
inc
inc
mov
mov
js
jmp
inc
es
repnz
or
fists
push
pushf
fidivrs
xchg
mov
pop
pop
fdivp
lcall
jl
jle
inc
jae
pushl
push
adc
or
mov
test
mov
fucom
xlat
sbb
enter
insb
enter
out
data16
call
adc
loopne
lock
sub
test
mov
mov
rcrb
cmp
loopne
and
lahf
mov
cmp
and
enter
rolb
cmpsb
lods
out
sbb
lods
les
shl
call
or
roll
jb
ja,pt
ds
std
les
jbe
cmp
dec
adc
lcall
xchg
mov
int
aaa
in
push
push
fdivrs
dec
std
enter
inc
xor
enter
lret
pop
push
mov
push
fsubl
jo
push
adc
jecxz
fildll
pusha
add
cpuid
dec
cltd
push
icebp
ret
mov
pop
add
or
pop
mov
inc
lret
rcrb
xlat
jecxz
sarl
sarb
enter
mov
sub
push
mov
lds
sub
pop
cli
pop
dec
pop
jle
mov
lock
shll
pushf
xchg
jge
and
call
sbb
stc
xorb
mov
jne
add
test
int3
fmuls
mov
xchg
fucom
sbb
push
or
pop
push
sub
imul
lds
repnz
inc
clc
std
push
push
adc
jnp
cmpxchg
lods
out
sub
pushf
pop
aas
outsb
fiaddl
mov
push
jecxz
mov
push
out
test
xor
cmp
inc
xor
test
mov
movsl
push
aaa
or
mov
insb
sub
dec
cmovle
in
add
push
add
inc
xor
xor
jecxz
hlt
fcomps
cwtl
movsl
push
lds
jecxz
inc
out
xchg
mov
add
test
and
xor
mov
cmp
mov
and
xchg
cmp
sub
dec
rolb
insb
cmp
and
mov
hlt
push
loop
push
push
movsl
or
rcr
lock
mov
fucomip
mov
int3
ret
push
mov
push
daa
pop
adc
and
mov
push
sbb
loope
push
add
adc
xchg
xor
ret
les
jne
xchg
xor
add
xchg
in
leave
js
mov
fbstp
mov
popa
hlt
sub
sub
ljmp
ja
inc
adc
xchg
scas
add
xchg
pushf
movsb
sbb
lcall
dec
repnz
aaa
stos
das
mov
js
mov
push
sub
xor
mov
dec
push
out
mov
xlat
push
mov
xor
ds
xchg
and
push
adcb
push
repz
pop
sub
rcrl
mov
lds
hlt
mov
jbe,pt
notl
jp
movsl
and
fnsave
xchg
fnsave
jnp
mov
loopne
fadds
mov
push
adc
mov
push
aaa
xor
ss
push
cwtl
and
lods
pop
das
call
dec
cmc
enter
rorb
adc
cmpsb
lcall
popa
pop
les
fstps
in
and
sbb
adcl
out
gs
lods
sbb
xor
xchg
xor
cmp
out
mov
adc
or
mov
aas
jbe
push
pop
dec
jmp
add
sti
xor
hlt
pop
sbb
inc
test
jmp
mov
add
mov
push
xorb
loop
cs
flds
push
cltd
jge
call
subl
psrlw
ds
adc
cmc
test
cmc
jb
dec
and
jp
dec
jne
dec
loop
shrb
int
mov
sbb
insl
push
shll
out
push
pusha
mov
leave
hlt
jns
fs
popa
mov
popf
xor
shl
sub
mov
add
pushf
mov
push
or
insb
mov
inc
les
das
shlb
mov
cmp
movsl
sub
inc
adc
sub
xchg
into
pop
hlt
jmp
and
mov
push
stc
inc
iret
outsb
outsl
sbb
mov
inc
and
pushf
cmp
mov
lock
xchg
sbb
jb
mov
stc
rorb
mov
aam
dec
cld
std
cli
xor
mov
jne
add
cwtl
cmpsb
call
add
stc
int
xchg
cld
cmpsb
aas
mov
jae
jo
pushf
push
cmp
lods
test
inc
jl
push
clc
pop
jl
pop
sub
or
or
repnz
jne
test
xchg
inc
inc
hlt
popf
test
jl
imul
xchg
ret
sub
mov
incl
repz
add
xor
and
pop
dec
pop
je
es
dec
dec
xchg
or
jg
jge
out
push
pop
test
std
adc
movsb
fiadds
push
push
out
sbb
and
inc
cli
cli
jb
out
sahf
dec
jp
adc
inc
incl
adc
andb
xchg
xchg
movsb
cmp
fbld
aaa
inc
cld
mov
andb
cmp
push
sub
xchg
mov
dec
mov
sbb
xchg
pop
pop
mov
jnp
pop
jecxz
rorl
dec
test
lea
icebp
cmp
cwtl
shrl
cmp
inc
adc
jno
push
push
daa
push
and
rolb
mov
sahf
mov
jp
mov
sbb
rcll
pop
scas
inc
add
insb
dec
or
test
and
pop
sbb
cmc
rolb
push
fcmovnb
lds
push
dec
jae
or
mov
xlat
roll
and
jp
frstor
ret
bound
pop
icebp
mov
cs
icebp
mov
push
mov
push
or
dec
add
ret
push
adc
and
aam
daa
scas
adc
enter
adc
je
dec
mov
stc
stos
jb
lret
inc
pop
xor
sbb
jns
es
adc
adc
sbb
xchg
push
stos
aad
adc
sub
add
mov
popf
mov
cmp
xchg
fsub
shl
test
loopne
inc
lods
popf
mov
pusha
out
aam
sub
jbe
inc
inc
add
push
mov
add
mov
mov
adc
loop
push
or
data16
ds
les
out
movsw
orl
pop
stos
add
in
mov
add
in
dec
sub
push
mov
aas
outsb
push
out
dec
test
and
scas
xchg
or
loop
out
mov
xor
and
mov
scas
adc
mov
jge
mov
or
mov
push
xor
mov
test
stos
testl
imul
ja
xor
push
jl
call
push
and
jb
subb
mov
lcall
cmp
out
cmp
data16
xchg
les
adc
sbbb
icebp
les
lea
ds
sbb
fwait
aad
xchg
dec
xchg
sub
pop
mov
fisubl
int3
sub
mov
xlat
xor
jp
in
in
jmp
out
aad
icebp
mov
mov
add
mov
ds
push
push
jl
jecxz
push
fsts
int3
mov
pop
push
or
mov
cmpsl
or
enter
mov
fcmovnu
popf
rorb
mov
negb
jne
and
mov
shrb
cmp
mov
rol
mov
lds
rcll
mov
sbb
out
pop
push
push
out
xor
bound
adc
adc
in
sbb
xchg
lds
fsts
xor
ret
daa
sbbl
dec
fdivs
pop
pmaxub
sbb
js
inc
loop
dec
mov
sbb
and
mov
jp
sarl
dec
xor
lcall
mull
incl
xor
mov
and
inc
pop
sbbl
dec
xor
test
shrl
imul
sbb
add
lock
insb
push
test
fcmovne
cltd
stos
sub
mov
popa
sbb
add
adc
dec
xor
jp
subl
stos
fsub
in
out
stos
negb
sub
imul
push
aam
mov
repnz
adc
daa
popf
lods
inc
sahf
mov
loope
into
es
push
pop
shl
mov
outsl
jle
das
loop
sti
mov
mov
adc
int
es
scas
push
addr16
xor
cmpsb
adc
pop
mov
mov
popf
sbb
push
push
sbb
clc
cmpsl
jecxz
arpl
and
cmp
inc
sub
push
repz
loope
lcall
nop
xchg
push
gs
aad
fisubs
jecxz
push
jg
cld
dec
dec
dec
jecxz
jns
sbb
cs
xor
cmp
xchg
stos
cmp
cmp
outsb
lods
jp
push
shl
jmp
mov
lods
loopne
xor
sbb
cwtl
out
pop
icebp
rorb
mov
test
sbb
mov
push
sbb
hlt
movzbl
mov
mull
int
inc
test
scas
or
sarl
adc
jo
and
mov
cmp
mov
divl
subl
aad
pusha
pop
push
or
mov
mov
into
push
dec
ficoms
pushf
adc
sbb
mov
and
push
cmp
cmp
loop
adc
popa
sbb
add
ja
sbb
sbb
popa
pop
dec
cmp
add
pop
jno
notl
mov
sti
gs
inc
loopne
xchg
cli
xchg
push
popf
pop
cltd
pop
add
push
mov
sbb
scas
imul
stos
test
aas
mov
add
insb
nop
scas
andb
not
push
jl
xor
into
pop
test
and
mov
and
int3
cli
repnz
cmpl
inc
shlb
jle
jecxz
lcall
mov
insl
stos
or
pcmpeqw
xchg
cmp
addb
add
xchg
pop
and
pop
dec
jmp
movsb
push
and
push
add
cmc
mov
call
rcrb
leave
jp
pop
stos
dec
jbe
dec
fsubr
mov
repnz
or
pop
leave
jmp
inc
adcl
add
sbb
mov
outsl
push
push
xbegin
jl,pt
inc
push
pop
shlb
mov
in
push
push
bound
xchg
std
clc
pop
xchg
sub
pop
cmp
ds
xchg
jl
sub
adc
adc
lret
inc
push
pop
fcom
add
add
mov
fwait
cs
xchg
jno
popf
incb
enter
fldenv
fs
inc
push
mov
pusha
aad
test
jecxz
ljmp
fsubrl
sbb
cmp
sbb
pushfw
notl
xor
sbb
sub
mov
jnp
cmpsl
or
ret
aad
rcrl
inc
test
pop
jo
jbe
pop
cmc
mov
jge
shl
cli
inc
popa
ss
jae
push
sbb
gs
lcall
lock
vfrczps
mov
dec
test
mov
dec
or
mov
sti
in
popf
sub
rol
js
sbb
jns
pop
sbb
cmpsl
adc
pop
lds
imul
push
out
jle
out
sbbb
xlat
push
and
mov
add
xlat
repz
aam
add
fistl
pushl
add
dec
push
add
jle
mov
cmc
push
push
or
mov
das
or
mov
orb
pop
orb
fs
lods
outsb
rolb
add
mov
outsl
mov
sub
js
dec
mov
hlt
mov
icebp
stos
dec
push
ss
jb
cmp
out
and
push
sti
rolb
int
pop
xchg
jecxz
cmp
ds
inc
icebp
adc
adc
push
sti
sub
xor
push
js
or
jb
pop
adc
aad
add
pop
sbb
cmp
je
mov
mov
jne
ret
mov
push
fs
and
xchg
inc
icebp
sbb
cmp
jp
mov
icebp
sub
mov
inc
inc
mov
daa
stos
push
aas
je
push
je
mov
xchg
inc
dec
outsb
in
outsb
or
repnz
pop
mov
push
mov
insl
aam
aad
idiv
add
clc
mov
fisttpl
adc
call
push
or
scas
addb
dec
in
enter
and
sub
adc
dec
loopne
cmc
pop
mov
out
jbe
hlt
aad
iret
inc
dec
add
add
adc
pop
icebp
jmp
mov
inc
mov
sub
sub
in
inc
loopne
add
mov
or
imul
out
mov
dec
inc
pop
test
inc
add
add
inc
cmpsl
lcall
push
adcb
out
push
sub
mov
pop
mov
push
es
das
jmp
push
ficoms
pop
mov
cmp
movsl
sqrtps
pop
jne
stos
push
pop
xchg
pop
jecxz
shlb
js
stos
inc
js
cmpb
xor
push
and
in
and
push
lahf
add
fs
sub
push
test
inc
xor
jbe
pop
or
gs
add
std
cli
mov
outsb
mov
cmp
and
cmp
mov
jle
cmp
jae
loop
stos
nop
push
jecxz
ret
dec
adc
pop
sbb
loope
xor
jecxz
aam
adc
in
ret
call
lret
mov
fmull
fmul
lods
lock
stos
mov
sub
mov
subl
inc
and
and
sbb
dec
and
hlt
sbb
mov
dec
mov
js
push
imul
dec
sub
aad
xor
js
lcall
mov
and
and
dec
lret
cli
dec
inc
mov
pop
outsb
inc
sub
push
cs
sbb
stos
call
xchg
mov
mov
addl
mov
push
mov
es
out
adc
jecxz
ds
mov
push
jno
mov
add
movsl
andl
test
fcompl
ds
inc
lea
js
mov
rcrl
pop
negb
out
test
and
rol
push
das
pop
add
stos
mov
sbb
jb
fisttpll
sub
pusha
andb
mov
mov
inc
pop
insl
jp
xor
scas
leave
push
cmpsb
aam
inc
ljmp
adc
les
pop
lcall
push
jl
xor
xchg
out
mov
jbe
shll
pop
std
or
mov
js
sti
push
and
cmp
push
add
mov
loope
ficoml
lahf
xchg
inc
pop
cld
add
cmpsl
addb
js
aad
lret
negl
out
scas
cmp
aaa
adc
sbb
sahf
xchg
add
lea
js
scas
sbb
cmp
roll
push
into
jecxz
xchg
sbb
mov
pop
fdivl
jmp
cli
ret
jmp
rolb
mov
pop
subl
sarb
add
dec
dec
jg
clc
rclb
call
out
int3
stos
jle
add
cmp
sbb
cmp
mov
adc
mov
shlb
push
sarb
pop
mov
xor
and
sbb
hlt
out
inc
cli
bound
into
xorb
cmpsl
rcll
movsb
mov
mov
roll
iret
popf
mov
sahf
je
clc
cli
movsl
pushl
inc
pop
not
push
idiv
mov
cld
jle
jb
testb
stos
testl
loope
into
dec
mov
add
push
inc
cmp
sub
mov
sahf
fwait
cmp
mov
inc
call
pop
adc
cmpsb
imul
sarl
sahf
jb
aam
cs
hlt
icebp
dec
mov
out
lds
or
fs
pop
pop
mov
cmp
lret
loope
lock
mov
cmp
push
adc
inc
outsb
dec
push
insl
fs
adc
cltd
pop
test
jle
or
adc
popf
push
gs
aas
jmp
dec
pop
dec
mov
pop
push
scas
xchg
dec
push
int3
or
sub
inc
dec
add
jge
xchg
out
icebp
inc
shlb
mov
fwait
jne
xchg
xchg
pop
pusha
mov
cmpsb
mov
jmp
and
shll
jbe
unpcklps
in
rorb
push
mov
mov
or
or
add
movsl
jbe
fdivrl
adc
jnp
fisttps
lea
push
fdivp
imulb
loope
inc
mov
jmp
mov
into
rorb
mov
repz
mov
lods
dec
jae
test
pop
inc
mov
add
mov
adc
rcll
jbe
sub
in
dec
ljmp
cmp
mov
sub
or
dec
xor
lds
mov
lcall
loope
add
out
pop
jo
icebp
push
dec
data16
int
dec
cli
shrl
or
adc
dec
lods
cltd
pop
test
adc
in
stc
call
xchg
dec
xor
aas
inc
out
mov
mov
aaa
fwait
cli
sbb
aas
sti
push
add
adc
pop
stos
mov
mov
in
sub
jbe
sbb
or
roll
jg
xor
lea
icebp
xor
pushf
cltd
or
loopne
push
xor
xchg
pusha
sub
or
jmp
dec
adc
cli
add
fisubs
clc
pusha
stos
ja
lods
rolb
jnp
gs
xchg
sub
push
lcall
je
aas
push
adc
cmp
add
sti
pop
jne
or
pop
fnstenv
sub
dec
mov
mov
fs
xchg
jg
js
popa
xchg
test
mov
pop
inc
lock
xchg
shlb
mov
shl
adc
add
push
mov
or
mov
sbb
mov
mov
in
sub
cmpsl
xchg
mov
cltd
popa
hlt
pop
jo
sbbl
xor
subb
loop
mov
add
push
and
call
push
jg
bound
ja
cmpsl
movsb
in
test
mov
mov
mov
pop
insb
out
push
into
pop
pop
jecxz
add
jle
hlt
or
cmp
outsb
mov
mov
cmp
pop
pop
rclb
lods
test
loop
mov
add
popa
jne
mov
mov
sbb
inc
fildl
dec
clc
sbb
ljmp
jmp
les
ret
inc
std
sub
xor
lea
clc
mov
shrb
std
sub
adc
out
mov
or
inc
sub
or
pusha
fiaddl
fsubl
xchg
xchg
in
xchg
xlat
aam
out
xlat
cltd
mov
and
mov
pop
xor
out
fmuls
jl
xchg
sbb
and
movsl
loopne
pop
pop
fsubrl
orl
jo
or
cld
call
adc
das
es
enter
in
shrb
outsb
pmullw
cld
mov
pop
jg
inc
aaa
sbb
scas
pop
adc
mov
sbb
loope
out
and
lcall
push
mov
and
push
movb
das
mov
dec
inc
add
fildl
pop
adc
data16
sbb
sbb
mov
jno
ss
cs
test
mov
or
and
mov
lds
push
addb
jle
jb
addr16
push
pop
int
aaa
mov
ds
inc
mov
inc
dec
pop
je
jl
add
test
test
cmc
fmull
and
lret
mov
aam
sahf
or
stos
add
clc
and
cmp
mov
xor
add
cmp
inc
enter
sub
jle
sbb
gs
inc
fs
jne
mov
dec
std
or
aam
daa
daa
ficomps
jno
movsb
fidivs
sub
fsts
adc
inc
imul
adc
pop
popf
decb
cwtl
add
lock
incb
shrb
xchg
dec
into
jo
push
fdivrs
fisubl
mov
les
add
stos
or
xor
lock
stos
pop
into
popa
inc
jb
aad
aaa
insl
and
xchg
das
pop
cmpsl
push
xchg
mov
add
sti
mov
enter
pop
cmpsl
icebp
insb
in
cs
add
into
js
jmp
xchg
ret
cli
rcl
mov
int
add
out
or
or
jb
jp
pushf
mov
fstpl
jp
cli
lret
into
jae
jns
mov
sbb
or
nop
xlat
aad
jbe
pop
dec
gs
mov
lret
sbbl
loopne
ret
fwait
std
xor
popf
gs
jmp
cli
icebp
adc
das
imull
mov
jmp
dec
imul
xchg
clc
ret
or
test
sti
mov
enter
imul
mov
cmp
ret
inc
push
or
fwait
aam
push
lock
scas
cs
add
and
icebp
push
mov
sbbl
mov
jecxz
and
lahf
and
cmc
push
xor
sub
cmpsl
inc
dec
fiadds
jle
ret
aaa
jbe
inc
or
and
dec
or
cltd
sbbb
mov
adcb
cld
ds
add
fmuls
add
cs
jge
push
cmp
ljmp
lods
dec
add
jbe
lea
sub
rcrb
dec
cltd
push
cs
stos
push
push
lahf
sarb
jle
out
jle
jg
sub
icebp
rorl
pop
imul
fidivrl
mov
jecxz
test
rclb
rorl
gs
mov
mov
fmull
cld
push
bswap
adc
jle
das
and
adc
xor
aad
sub
shlb
clc
sbbb
or
les
cltd
jmp
rcl
mov
cmp
push
and
cmpsl
and
push
loope
enter
lock
lods
cmp
cmp
rcrl
cli
fwait
add
push
repnz
fdivrs
push
push
inc
add
outsl
nop
stc
adc
mov
push
add
mov
in
ljmp
rcr
out
lcall
std
les
out
mov
mov
rolb
add
mov
inc
insl
adc
push
jg
add
mov
add
call
out
pushf
mov
sbb
jmp
pushf
cmp
fwait
pusha
xchg
pop
lods
call
mov
mov
xor
fsts
movzbl
pop
or
xchg
cld
imul
pop
or
ss
ficomps
cmp
push
int3
or
lea
dec
sub
push
lock
loope
cmp
sub
js
scas
jno
rcr
xchg
add
insb
in
jb
mov
mov
ror
or
shl
int3
mov
test
lods
inc
jno
adc
pop
fisubs
adc
xor
rcrb
xchg
stos
aam
mov
insb
ja
hlt
cmp
inc
ficoml
mov
dec
xor
xor
js
lds
mov
cmp
mov
mov
jmp
dec
mov
pop
loope
or
in
or
stos
jns
pop
mov
push
subb
sbb
sbb
repnz
fsubs
or
push
sahf
les
stc
enter
add
sub
mov
daa
lret
nop
inc
jns
jp
sbb
jo
lods
mov
cmpsl
pop
jo
into
adc
clc
into
insb
jp
cmpl
shrl
out
scas
subl
fs
fstps
popa
rcrl
or
std
rorb
in
pop
xlat
pop
xchg
jle,pt
test
push
sub
adc
mov
jbe
jnp
mov
std
hlt
loope
gs
xor
ljmp
and
ss
jne
rcrl
test
and
decb
adc
fsubr
incl
dec
movsl
push
xchg
jns
pop
stos
or
nop
mov
jg
daa
lods
test
mov
loope
push
fwait
pushf
scas
scas
ds
push
and
loope
mov
xchg
mov
mov
int3
xchg
mov
inc
addl
aad
ljmp
cmp
std
push
push
push
adc
cwtl
std
mov
pop
shlb
mov
icebp
mov
lcall
dec
clc
add
outsb
dec
negl
add
fsub
in
in
jnp
in
jne
jecxz
test
cmp
sbb
and
or
jle
jg
inc
clc
repnz
mov
mov
lret
add
push
fwait
and
xchg
mov
cmc
mov
xchg
mov
enter
mov
pop
cli
jg
add
fdivs
dec
loopne
dec
aas
pop
fcoml
jno
xor
add
xor
sahf
mov
dec
wrmsr
sbb
lds
int3
mov
add
int3
or
and
push
dec
lock
push
int3
lds
push
push
or
mov
or
jbe
and
cmp
and
or
push
add
sbb
cld
or
inc
lock
nop
mov
push
clc
inc
cmc
test
lahf
or
test
ljmp
outsl
mov
fadds
mov
out
lcall
popa
aam
loopne
mov
add
or
shlb
cltd
adc
xchg
inc
or
push
mov
mov
pop
repz
out
in
test
xchg
jl
outsb
icebp
push
jp
clc
mov
mov
outsb
sub
insl
sti
mov
xchg
mov
adc
outsl
daa
fnsave
gs
push
mov
std
hlt
mov
test
jne
mov
aam
add
mov
ret
dec
sbb
jmp
adc
jb
or
xchg
jp
inc
ret
jo
mov
add
xchg
xorb
or
fcomp
cld
outsl
push
test
add
xorl
push
xor
add
jbe
cmp
pop
mov
inc
jb
cld
dec
dec
ja
or
mov
cmp
ret
jg
add
push
aaa
lcall
ja
push
hlt
stos
test
push
fs
dec
jl
cmp
mov
pop
loopne
add
push
inc
pusha
inc
cmpsl
pop
lock
xchg
adc
inc
ficomps
lcall
js
bound
push
mov
dec
dec
orl
pop
aas
movsl
cmc
inc
mov
ret
test
mov
in
aaa
mov
insb
hlt
jb
popa
inc
outsb
cwtl
cmpb
add
jb
out
in
sub
pop
cld
fsubr
in
jmp
rorl
push
sub
jae
pop
mov
and
fwait
inc
movb
dec
shl
orl
xor
push
pop
pop
sarl
cmc
rorb
push
and
dec
dec
jecxz
jle
jnp
jp
sbb
andb
mov
lods
mov
test
cld
pop
je
push
stos
and
or
add
rcrl
jbe
push
inc
cmp
mov
sub
roll
adc
mov
dec
add
adc
ret
push
mov
dec
aad
dec
std
ja
shll
scas
add
inc
and
cltd
pop
incb
mov
sti
lea
subb
cmc
jbe
dec
add
sbb
xor
clc
xchg
es
insb
in
adc
outsb
rcll
sbb
adc
push
jae
mov
dec
and
dec
je
scas
mov
sbb
push
or
stos
xabort
icebp
in
lret
or
inc
bound
clc
cwtl
inc
add
xlat
inc
cld
adc
jl
mov
repz
jne
pushf
cmp
xchg
mov
jae
out
sahf
jge
lods
inc
pop
sub
xchg
fld1
loop
sbb
add
push
push
fiadds
jno
inc
aam
push
and
adc
jmp
xchg
jmp
pop
loope
mov
xlat
insl
pop
sbb
scas
mov
out
aaa
and
mov
mov
push
xor
mov
movsb
mov
mov
xchg
stos
mov
cld
cmpb
daa
sbb
popa
rcrb
push
call
adc
inc
or
sbb
adc
fs
rorl
loop
cltd
pop
loopne
negl
dec
popa
adcl
xor
dec
sbb
outsb
pop
jg
test
scas
add
push
pop
dec
imul
inc
repz
int
lcall
mov
or
fsubl
je
add
jmp
jae
sbbl
mov
cmp
ror
outsb
iret
data16
jp
test
pop
pop
lods
in
dec
push
pop
cmc
out
mov
mov
je
inc
sub
je
mov
push
es
fnstsw
cwtl
push
add
pop
sub
mov
outsl
les
nop
and
fidivs
aad
movsb
adc
mov
jne
push
out
test
mov
ret
mov
pop
sahf
add
lods
add
adc
test
dec
add
adc
pop
mov
hlt
cmp
fsubrl
notl
mov
push
push
pop
cmpsb
add
dec
mov
aaa
adc
xchg
mov
mov
adc
psllw
les
dec
mov
mov
sub
xchg
xchg
jecxz
ret
mov
dec
rolb
cmp
sbb
push
dec
add
mov
inc
mov
dec
jb
mov
pop
lret
pushf
pop
pop
test
in
imul
in
xchg
sbb
xchg
and
daa
sbb
jo
mov
sti
sbbb
lret
je
push
push
mov
mov
inc
jp
nop
je
push
mov
cmp
std
sbb
enter
add
pushf
adc
push
notb
pop
pusha
aad
push
xor
outsl
in
and
xchg
pop
xor
aam
test
push
decl
lret
loop
xchg
adc
test
fbstp
sbb
pop
test
pop
add
jbe
jl
jno
jge
xor
lock
cmp
adc
pop
push
mov
stos
sbb
push
out
add
std
pop
pop
mov
jmp
xor
inc
pop
dec
push
adc
in
mov
push
jle
jmp
int
mov
cli
add
aam
sub
inc
inc
xor
shl
xchg
push
fadds
lods
ljmp
pop
push
addr16
lods
test
aam
stc
sub
fisubs
popf
or
and
jmp
mov
movsb
lock
xchg
jge
inc
aam
lock
ljmp
faddp
repz
flds
in
jmp
mov
jbe
je
mov
or
adc
inc
adc
mov
cmp
sbb
lret
mov
sbb
push
loopne
lcall
sarl
fcom
call
dec
addr16
popf
clc
loopne
dec
jnp
test
and
mov
push
loope
popa
dec
and
aam
inc
add
push
push
push
cli
cmp
sbb
stos
add
mov
inc
and
outsl
test
xor
lahf
cli
loop
loop
mov
jnp
inc
push
mov
mov
sbb
jo
jl
push
xor
orl
sub
movsl
and
inc
lret
jb
push
sbb
imul
ss
cmc
xor
rcr
jns
test
enter
mov
jmp
mov
lea
and
ret
sbb
cmp
xchg
cli
fsubrl
push
adc
and
aam
add
sti
outsb
inc
and
adc
test
cmc
sbb
adc
dec
jecxz
nop
pop
mov
and
sbb
repz
ss
or
clc
inc
xor
call
insl
or
rorb
cli
mov
repz
sahf
or
mov
pusha
icebp
sub
jmp
sahf
inc
scas
push
pop
pop
rcll
dec
pop
outsl
jecxz
les
xor
mov
mov
dec
cmp
add
mov
adc
shlb
jl
pushf
lcall
mov
push
mov
or
scas
sahf
sub
stc
cld
sub
pop
cli
inc
lcall
jns
lea
and
and
les
adc
mov
pop
mov
and
and
jl
add
xchg
les
aam
leave
les
std
sbb
out
mov
out
rcl
out
dec
jl
xchg
sti
mov
push
lcall
xchg
and
ret
or
cld
adc
aad
dec
ljmp
jo
sub
sub
es
mov
fs
and
rcrb
pusha
jp
ror
pop
xchg
loop
mov
and
dec
and
fwait
out
mov
dec
pop
ret
sbb
mov
inc
daa
xchg
mov
xchg
rcrb
mov
xorl
ljmp
jns
adc
loope
mov
xchg
push
dec
pushw
add
mov
testl
sti
push
aas
jl
dec
xor
cmp
sub
iret
xorb
sub
aas
sbb
inc
call
mov
outsl
inc
pop
mov
stos
das
out
ret
rcll
rol
lret
in
adc
mov
cmpsb
jnp
pushf
jg
divl
mov
jno
xchg
adc
adc
sbb
push
js
fs
insb
cld
or
int
jne
dec
inc
gs
cmpsb
es
inc
fsubrs
std
sub
dec
lock
fiadds
mov
clc
cmp
sarl
or
pop
mov
pop
sahf
fcom
pop
cmpsl
adc
dec
and
and
fcmovbe
xor
or
fldl
jae
arpl
insl
cmc
mov
adc
dec
stc
sub
cs
insl
jge
fnsave
xchg
and
push
adc
sbb
add
and
jge
idivl
xchg
sbb
sti
inc
inc
or
lock
cltd
xor
pushf
jmp
aas
push
movsb
fadds
icebp
jnp
sarl
iret
xlat
lcall
std
jge
push
das
out
mov
es
xor
xor
and
jne
mov
jecxz
mov
or
xchg
hlt
sbb
int3
inc
pop
scas
mov
fprem
jg
dec
push
push
pop
inc
nop
icebp
sbb
sbb
mov
xchg
inc
push
das
fcmovb
mov
add
xor
imul
in
add
jge
aam
xchg
div
shlb
dec
pop
push
das
or
ret
add
les
dec
mov
iret
lods
pop
adc
and
adc
lods
cmc
jo
xchg
sarb
mov
xchg
xlat
xor
mov
mov
mov
lock
cmpsb
xor
mov
mov
cmp
pop
jo
push
rcr
pusha
mov
sub
call
pop
pop
adcl
in
mov
or
fwait
or
inc
scas
mov
mov
adc
add
leave
mov
aas
xlat
pop
pop
pop
xor
jne
mov
aaa
dec
fucomp
sbb
into
inc
inc
sbb
pop
xchg
movsl
mov
daa
and
insl
mov
cwtl
sub
adc
cwtl
mov
outsl
div
in
movsb
add
dec
dec
es
daa
mov
ret
stos
out
pop
pusha
xchg
adc
and
addl
sgdtl
xchg
sub
sahf
jle
inc
or
daa
xchg
sbb
jo
sbbl
inc
cmpsl
or
pop
flds
mov
or
push
loopne
movsl
mov
mov
stc
movsl
mov
test
leave
push
fildll
mov
clc
ds
add
addb
sbbl
mov
pop
and
insl
aad
popa
xor
adc
lea
jmp
gs
lock
sbb
or
add
fdivrl
addr16
pusha
mov
xchg
adc
adc
cmp
inc
cwtl
and
jns,pt
cltd
and
das
test
mov
cmp
test
fs
xchg
sub
push
loop
cltd
mov
mov
dec
mov
les
daa
jb
es
cmpsl
xlat
aam
cltd
stc
mov
xor
mov
adcl
lret
cli
shll
jge
sub
ret
into
push
add
lock
xor
lret
movsb
mov
insl
pop
sbb
ss
add
ret
xchg
adc
aad
lret
sub
jae
sbb
ffreep
or
cmp
aad
xchg
shrd
fs
pop
test
mov
jne,pn
add
jo
aaa
mov
cmpb
sbb
pop
lds
xchg
add
cli
add
shr
pop
add
cld
cmc
jns
xchg
dec
pop
js
sub
or
out
inc
dec
cmc
ljmp
push
subl
mov
ret
push
push
add
movsb
ja
inc
mulb
movsl
or
pop
out
xchg
dec
cs
outsb
xlat
js
jae
lahf
push
andb
and
push
aas
and
sbb
mov
xlat
or
andb
addr16
xchg
sahf
push
cmp
adc
lcall
lds
sub
jle
lds
mov
clc
mov
push
jl
add
sub
jne
mov
test
or
push
or
sbb
movsb
js
mov
cmp
lahf
mov
sbb
aad
cmpsb
add
stos
jns
movsl
test
dec
or
cmp
lret
mov
inc
insb
repnz
lock
rcl
insb
mov
pop
mov
cmp
or
scas
mov
mov
xchg
mov
pop
ret
dec
push
int3
std
int
dec
les
mov
cmpsl
imul
add
add
je
loopne
cmp
mov
ret
adc
and
sub
daa
inc
loopne
sbb
icebp
and
fsts
lret
int
insb
sbb
rorl
fisttps
sub
jp
mov
sarl
das
cmp
mov
adc
add
loope
sbb
sub
push
loop
cmp
cld
pop
mov
insb
push
aas
int
roll
adc
ss
ljmp
adc
pop
cmp
lea
fisubrs
insl
outsl
mov
cmp
jg
cli
add
cmpsl
mov
jns
lret
pop
pop
mov
mov
cmp
mov
mov
roll
mov
xor
inc
mov
popf
lcall
dec
int3
push
lock
jno
push
rcl
sub
sbb
dec
add
or
aam
mov
pushf
adc
loop
rdtsc
add
stos
jbe
adc
aaa
dec
push
pop
insl
cwtl
dec
jmp
xlat
loopne
sbb
bound
push
rorl
dec
push
add
pop
pop
lret
and
out
in
idivl
xchg
dec
fiaddl
cmc
jge
aam
or
inc
sbb
mov
add
sub
cltd
add
sbb
xlat
mov
sub
lcall
test
addl
pop
rolb
pop
mov
xor
jb
mov
shll
subb
icebp
mov
mov
mov
mov
insl
sbb
das
movsl
hlt
inc
lds
cmp
adc
cmp
aad
or
mov
inc
mov
sub
sbb
into
xchg
pop
mov
sub
fimull
test
or
sbb
push
arpl
int
aam
lret
in
pushf
cltd
cmp
lods
xchg
jo
or
or
mov
outsb
inc
pop
mov
pop
push
ss
aas
pop
test
dec
xchg
and
pop
inc
sub
dec
test
dec
into
sub
pop
xchg
sub
cmp
xor
std
mov
daa
add
out
pop
ficoms
addr16
in
icebp
inc
mov
hlt
mov
and
scas
xor
test
stos
test
xor
sub
xchg
mov
or
and
imulb
test
mov
cli
leave
imul
lds
pop
dec
cld
rorl
out
fistps
in
outsl
sub
sub
aam
add
mov
lock
aas
pop
out
inc
mov
divps
adc
rol
sbb
or
and
dec
inc
dec
pop
sbb
movsb
xchg
daa
pop
hlt
adc
jb
inc
jae
mov
out
loopne
addr16
mov
cmpsb
pop
xchg
xchg
cmp
fistps
lock
pop
adc
pusha
or
mov
mov
sets
bound
jl
fdivrs
cmp
daa
xlat
cmp
in
or
or
and
xor
cmpsb
xor
cmp
aas
insl
popf
mov
sbb
pop
and
and
adcl
mov
adc
push
dec
outsb
adc
cmp
mov
or
and
scas
sub
test
lods
nop
push
fistl
bound
rolb
rcl
add
xlat
rcrl
std
sbbl
lods
into
daa
xor
add
mov
mov
mov
into
test
inc
inc
leave
shl
clc
pop
pop
cmp
mov
push
aam
mov
sbb
push
jg
adc
or
sub
xor
pop
popa
rcr
ret
mov
scas
idiv
jne
scas
cli
movsl
pusha
arpl
enter
mov
pop
sub
sub
lods
stos
cmc
test
rclb
lods
clc
pop
jmp
jge
sbb
fisubs
jb
cltd
mov
sbb
movsl
cmc
jl
je
dec
rcrb
push
outsb
fsqrt
cmpsb
enter
cmp
cmp
adc
mov
push
clc
sub
push
popf
in
outsb
fdiv
aaa
outsb
mov
adcb
inc
out
out
push
mov
mov
daa
scas
or
adc
mov
out
andw
jmp
push
mov
int3
adc
sahf
pop
lcall
mov
mov
push
inc
dec
mov
call
cmp
xorl
mov
lods
bound
insl
mov
imul
pop
popf
lods
adc
pop
xor
mov
push
call
in
mull
mov
outsl
repz
lea
leave
sbb
mov
fildll
rcr
sub
movsb
mov
test
lcall
les
jo
lahf
push
ljmp
dec
les
mov
icebp
mov
movsb
sub
in
xchg
pop
cmpl
sahf
push
cld
dec
sti
sub
mov
add
push
jb
mov
loop
bound
imul
mov
adc
add
lahf
pop
cmpsl
push
sub
push
adc
popa
add
dec
jne
push
subl
int
mov
adc
xchg
pop
aas
jecxz
orl
icebp
clc
sub
ljmp
cmpb
fidivrl
lods
lds
nop
mulb
cmp
push
sbb
push
clc
jg
enter
lcall
or
sub
push
xor
xor
enter
in
arpl
and
mov
cwtl
cmp
icebp
xchg
out
push
sbb
aas
pusha
bound
test
mov
add
jl
pushf
test
cmp
pop
ret
mov
mov
js
ffree
dec
repz
mov
ljmp
movb
add
daa
sub
cmp
pop
jbe
shr
es
xchg
icebp
mov
inc
stos
xchg
stc
add
or
mov
ffree
mov
or
and
add
or
mov
mull
repnz
std
or
imul
mov
push
mov
or
daa
mov
in
lods
cli
sbb
pop
jecxz
xor
sub
jno
xchg
adc
mov
push
xor
pusha
iret
hlt
aam
mov
imul
rorl
mov
add
dec
dec
ljmp
xchg
push
adc
cmp
mov
daa
lret
cmp
mov
outsl
jmp
mov
sub
divl
fisttpl
jcxz
jmp
mov
lock
pop
out
sub
or
or
pop
dec
lods
mov
test
cmp
sub
pop
in
pop
hlt
js
adc
insl
in
aad
mov
dec
jl
cmpsl
aaa
sbb
les
pop
pusha
repnz
lahf
dec
cs
cmp
scas
adc
add
cs
mov
std
cmp
mov
pop
push
pop
xor
jo
iret
sub
pop
adc
shlb
addr16
pop
scas
xor
jae
ljmp
cmp
xor
negl
imulb
out
lcall
inc
xchg
stos
test
xor
jl
cwtl
ljmp
jmp
hlt
scas
lret
clc
push
ret
adc
mov
adc
or
dec
fcompl
push
outsl
jbe
xchg
movd
fldcw
sahf
shl
pop
jo
out
clc
cltd
mov
stos
nop
adc
xor
dec
mov
sar
cli
or
mov
pop
pop
or
mov
fwait
mov
and
clc
shlb
mull
add
das
mov
push
test
rcrb
and
js
mov
movsb
dec
dec
xor
hlt
aaa
fdivrp
movl
outsb
jo
xor
cmc
nop
mov
push
aas
mov
adc
adc
xor
aad
sbb
push
pop
xchg
je
and
cmp
add
shl
clc
hlt
ret
pop
cmc
in
dec
test
mov
add
in
ja
stos
lods
dec
shll
and
cld
orl
ret
xchg
pop
movsl
ud0
lcall
sbb
dec
jge
or
adc
leave
or
inc
dec
or
dec
inc
cmp
push
push
xchg
mov
movsl
adc
jmp
push
push
call
fstpt
pop
mov
mov
nop
sub
hlt
popa
xchg
clc
pop
mov
dec
or
mov
adc
jmp
add
push
jmp
aas
inc
xor
push
cmpsl
das
sbb
adc
enter
cmpsl
jne
pop
push
adc
jg
test
adc
pop
sbb
lock
stos
nop
jb
js
ret
inc
cmpsl
push
sub
cmp
xlat
call
push
ljmp
mov
bound
repnz
jecxz
in
mov
pop
insl
sub
dec
jbe
mov
addr16
scas
add
pop
fwait
push
cmp
and
jo
adc
add
loopne
jmp
ds
pushf
dec
add
add
and
inc
bound
aaa
lret
push
pop
addr16
or
loope
jo
out
mov
or
push
inc
xor
call
mulb
dec
jecxz
fisubl
or
sbb
inc
rorl
sub
lret
aam
fisttps
icebp
sub
mov
add
and
mov
in
data16
scas
fnsave
stos
sbb
xchg
icebp
pop
sub
call
shrb
bound
lcall
fst
dec
sbbb
cmp
pop
test
fdiv
inc
subl
in
shrb
push
shll
mov
fmull
adc
sub
add
fcoml
jne
shl
movsb
mov
fcmovb
dec
xor
mov
push
mov
sub
and
jb
sbb
xor
push
test
aaa
imul
mov
lods
sub
incb
clc
or
movsb
out
ret
adc
sbb
xorl
xor
and
sti
push
movsb
repz
lahf
lret
xchg
cmpsb
pop
int
cmp
or
adc
outsl
pop
loope
add
xchg
push
jecxz
mov
ss
sub
cmpsl
lock
mov
or
out
popf
push
mov
mov
mov
push
and
lods
inc
mov
xor
push
xor
cmp
lret
lods
push
movsb
cmp
lods
mov
lcall
imul
mov
mov
xchg
jns
ret
shrb
mov
mov
xchg
mov
xorl
loope
pushf
jl
jo
pop
dec
fadd
xchg
xor
loopne
loopne
mov
sahf
dec
cmp
fs
pop
movsb
movsl
aam
xor
pop
xor
movsl
fiaddl
and
pushf
adc
hlt
sbb
fs
aas
call
test
hlt
mov
inc
hlt
cmc
cmp
xchg
jg
repnz
and
xor
mov
les
inc
dec
pushf
data16
adc
ljmp
lahf
fistpll
aas
cs
adc
mov
mov
adc
cs
loop
inc
fisubrs
jbe
repz
lods
test
xchg
stos
or
mov
pop
sbb
mov
fnstenv
xchg
sahf
cmpsl
sti
dec
out
adc
push
std
add
adc
pop
inc
jl
sahf
adc
sarl
inc
ss
mov
and
push
movlhps
jb
mov
int
arpl
addr16
loop,pt
mov
jb
cli
hlt
pop
jne
idivb
cli
popf
add
subb
stos
xor
mov
sbb
or
insb
mov
pusha
test
dec
push
mov
sahf
inc
push
cmp
sar
cmp
and
hlt
push
cld
cmp
xchg
inc
cmp
push
cmp
int
push
add
mov
jp
dec
cmpsl
cltd
lret
neg
mov
adc
rcll
repnz
dec
cli
xor
and
cmc
adc
cwtl
sub
mov
fcmovnb
mov
ret
into
pop
push
scas
ss
xor
cli
sbb
add
nop
push
xchg
fmulp
inc
sub
jb
ret
mov
and
sbb
push
jnp
test
cmc
adc
lret
lods
stc
lock
out
fs
clc
add
and
and
xchg
fwait
pushf
add
xor
dec
pop
icebp
add
pop
fcomps
push
lock
mov
clc
clc
lods
fldcw
test
and
rorb
adc
mov
sub
pop
xor
mov
insb
lds
mov
std
xor
sub
cmp
das
xchg
clc
pop
cltd
pop
xchg
push
mov
rolb
pusha
or
sub
imul
adc
shr
xchg
rorb
ret
xchg
loopne
cmpb
mov
push
ljmp
pop
pusha
cli
sub
lock
xor
daa
popa
sbbb
or
fdivrl
xor
ljmp
xchg
push
sahf
js,pn
or
cmp
shl
and
test
pop
pop
movsb
ljmp
add
mov
add
cli
jno
lods
mov
and
dec
mov
imul
mov
xchg
aaa
fst
mov
sbb
inc
mov
or
adc
dec
mov
push
and
das
inc
push
push
movsb
repnz
fisttpll
cs
push
mov
jo
sarl
sti
in
xor
add
xor
std
xlat
lds
xorb
xchg
pusha
cmpsl
mov
inc
loopne
dec
mov
mov
repz
lock
add
sub
shr
and
push
shlb
cwtl
int3
cmp
cwtl
jo
pop
push
push
mov
ret
into
mov
sub
int
mov
mov
mov
or
sbb
dec
fildll
imul
inc
push
popa
jg
test
adc
jle
push
lds
jo
ss
dec
sub
and
jo
jbe
sbbl
imul
xorb
es
push
das
movsl
mov
cwtl
leave
mov
sbb
add
mov
inc
add
mov
insl
and
cmp
sub
scas
nop
add
loope
pop
lea
push
lds
mov
sbb
fiaddl
mov
lods
sbbl
repz
popf
mov
mov
push
xchg
jp
dec
adc
stos
ret
xor
ljmp
ja
enter
push
and
movsl
pop
mov
xor
mov
jo
test
lock
mov
push
lds
push
or
in
mov
stc
jnp
cmp
std
pop
test
adc
push
and
mov
and
es
cmp
ret
aas
lock
in
sub
jle
pop
xchg
adc
pop
test
cmpsl
lahf
cmp
ljmp
jno
sahf
outsb
adc
jecxz
enter
out
add
dec
leave
cmp
push
adc
mov
push
push
das
fs
jo
fstpl
adc
mov
xchg
push
pop
mov
decl
fstpt
ret
movsb
in
daa
pop
push
mov
adc
pop
inc
jb
ficoms
mov
and
sbb
fs
rol
adc
pop
xor
out
mov
add
pop
daa
insb
push
cli
aam
daa
mov
testb
add
das
daa
fld
incl
pusha
sub
jecxz
add
xor
mov
sub
fdivrs
lret
bound
push
sbb
enter
test
inc
inc
push
jg
shll
scas
stos
sbb
push
sti
sub
lods
dec
push
adc
cld
repz
add
mov
inc
ficoml
sub
std
push
add
push
add
dec
cs
mov
jl
hlt
clc
xchg
jns
subb
or
prefetch
add
orb
icebp
adc
or
xor
or
clc
cmc
add
mov
mov
mov
and
fimull
xor
cwtl
shlb
js
in
pop
idivb
mov
pop
jmp
repz
add
or
sbb
ljmp
dec
jle
lods
mov
cmp
sbb
xchg
cmp
xor
lds
add
nop
hlt
je,pn
mov
inc
cs
or
push
sub
or
xor
mov
xchg
jl
hlt
xchg
dec
notb
dec
jp
add
in
add
mov
lret
hlt
cli
mov
andb
mov
mov
dec
imulb
mov
and
mov
aam
imul
ds
xor
rcl
std
mov
mov
movsl
stos
or
inc
mov
test
or
xor
xor
dec
and
dec
add
xor
pop
mov
bound
popw
divb
or
jno
mov
mov
pop
aad
xor
rclb
adc
xchg
adc
mov
pop
shll
xor
int3
push
jecxz
mov
cmp
xor
hlt
inc
fildl
clc
test
clc
out
pushf
sub
xor
mov
push
mov
adc
lcall
add
sahf
shl
mov
and
std
push
xor
mov
cmp
dec
mov
xlat
jg
jne
mov
jnp
mov
inc
pop
pop
or
sbb
fistpll
mov
mov
popa
push
jne
xchg
or
or
jmp
rolb
mov
pop
sbb
xor
push
aas
nop
dec
in
add
addr16
aam
je
mov
and
pop
add
inc
and
jne
mov
inc
rclb
pop
loopne
sub
cmp
popa
stos
mov
jle
push
cld
int3
sbb
sub
aaa
pop
mov
xchg
push
hlt
int3
mov
jbe
mov
mov
dec
faddl
xchg
cmc
and
js
mov
mov
insl
mov
mov
data16
xchg
out
dec
dec
call
pushf
xchg
out
clc
rcrb
outsl
lods
dec
adc
rorb
and
inc
rol
xchg
ss
prefetch
addb
mulb
adc
and
sbb
mov
and
inc
imul
jo
mov
aas
lcall
je
push
pop
clc
pop
lock
mov
iret
xchg
mov
pop
imul
mov
cmovae
mov
push
aad
jg
xor
repz
or
adc
addr16
cmc
dec
inc
mov
add
add
outsb
cmp
repnz
into
fwait
and
pop
les
lock
jmpw
scas
mov
aam
push
xchg
inc
sbb
add
xlat
dec
push
das
cs
mov
insl
add
and
pop
pop
shlb
popa
lods
fdivrs
jno
push
jne
repnz
mov
add
sbb
push
sbb
jle
loop
test
adc
xor
xrelease
cs
mov
mov
ficomps
orb
dec
cmp
arpl
lock
adc
xchg
adc
repz
and
fs
or
js
cmp
dec
ret
add
xchg
push
mov
pop
xchg
insb
rcrb
lea
xchg
fidivs
mov
push
cld
test
mov
test
xchg
testl
test
ret
sbb
pop
mov
mov
add
shrb
repnz
sbb
pop
fistpll
addb
sub
adcl
cld
in
inc
dec
out
sbbb
movsb
in
mov
add
fdivrl
fisubl
xchg
leave
emms
push
or
inc
xlat
popa
js
mov
shrl
lcall
mov
or
push
or
outsb
dec
fisubrs
jno
mov
add
sar
lock
repz
add
add
xchg
sub
iret
pop
xor
hlt
test
xlat
mov
sub
ljmp
mov
push
jo
sti
lds
stos
mov
ljmp
std
pop
push
inc
jmp
andb
ds
jno
ja
icebp
negb
loope
lock
xchg
std
or
cmp
inc
mov
pop
inc
mov
mov
aam
cmc
mov
mov
mov
jne
mov
pushf
cmp
shlb
jle
jp
sbb
loop
push
decl
sbb
cmpsl
push
pop
add
xor
out
cli
inc
lret
mov
mov
pop
ds
ret
les
sbb
cmp
js
sub
jo
dec
adc
pusha
pop
pop
add
mov
dec
inc
xor
aam
mov
repz
or
dec
add
aam
fstpl
daa
cmp
cli
bound
stos
xor
rcrb
idivl
sub
xchg
mov
incl
mov
lock
in
test
enter
mov
sarl
sub
pop
push
mov
adc
pop
adc
push
jge
adc
scas
sub
data16
jb
or
adc
enter
insl
push
outsl
mov
out
subb
and
insl
sbb
cld
cmp
push
movsl
xchg
pop
mov
sub
loopne
or
or
sbb
cmp
sbb
loopne
sub
adc
mov
cmp
xchg
inc
mov
negl
jne
fwait
xchg
loope
int3
sbb
push
into
jp
ror
jno
mov
cld
cs
jecxz
outsb
pop
nop
ljmp
mov
test
pop
pop
stos
mov
mov
mov
and
test
mov
push
ja
mov
aad
rclb
sbb
sub
icebp
jb
xor
and
je
dec
ret
jl
and
dec
loop
fwait
out
sarb
scas
push
push
loop
pop
negl
inc
sub
ljmp
jne
or
aaa
jl
pop
cmp
sub
sti
loope
or
cmp
or
leave
mov
sbbb
rcll
into
add
pusha
xchg
lret
adc
xor
pop
sub
fnstsw
fcmovu
dec
push
js
loop
add
jnp
jle
push
in
repnz
sahf
fsubrs
add
insb
call
mov
sbb
dec
imul
push
or
inc
in
faddl
into
mov
cs
sti
lahf
push
nop
add
push
or
pop
fs
cmp
dec
sbb
cmc
cmpb
ss
ja
push
or
hlt
cmp
js
xchg
push
fisttpll
sarl
add
js
cwtl
popa
xor
aad
jle
inc
stos
fs
mov
fs
mov
push
js
jp
xor
cltd
ret
bound
dec
push
xchg
inc
pop
mov
dec
imul
sbb
mov
cltd
jmp
lods
cmp
jo
push
xchg
enter
mov
cltd
push
fsubrs
dec
outsb
das
fnstsw
adc
cli
lods
daa
popa
adc
and
xor
inc
rorb
jae
rolb
shr
movsb
or
mov
addr16
dec
incb
adc
push
mov
nop
mov
incl
aas
les
scas
inc
sub
mov
add
push
sub
movsb
push
andb
ds
dec
sub
clc
mov
push
pop
ja
mov
dec
xor
pop
into
dec
insl
and
daa
mov
push
lock
sbb
fcmove
xlat
push
punpcklbw
inc
cltd
mov
and
enter
mov
lds
sbb
jmp
pusha
add
mov
icebp
push
inc
jo
test
inc
dec
inc
cmpsb
in
sti
and
push
inc
adc
imul
inc
sub
inc
jbe
adc
push
add
adc
test
movsl
popf
xchg
and
or
sub
lds
xchg
in
sub
push
sub
push
xchg
out
int
sub
popa
and
repnz
inc
and
adc
sbb
sub
pop
mov
add
xor
inc
and
das
test
fwait
xchg
mov
mov
loopne
xor
xchg
ds
adc
fldl
inc
or
push
imul
shrl
popf
cmp
jmp
push
aaa
movsl
mov
push
pop
push
je
ja
clc
add
xchg
lock
mov
loop
sub
je
dec
push
and
mov
inc
cs
mov
les
cltd
lock
cld
ja
mul
jg
hlt
or
sbb
into
inc
cld
xchg
or
inc
cmp
pop
cli
call
sti
and
mov
divb
pop
jge
repz
pop
cs
xlat
aam
adc
test
pusha
clc
ret
jg
and
cli
iret
shlb
mov
pop
inc
push
mov
leave
outsb
call
dec
scas
rclb
fsubl
insl
xlat
cwtl
and
dec
sub
xor
out
sbb
or
out
mov
sbb
lahf
inc
stos
sbb
shl
movl
data16
and
or
push
jo
adc
rcr
test
and
les
inc
pop
cmpsl
les
scas
enterw
hlt
sbb
and
sub
mov
mov
pop
js
enter
mov
in
bound
inc
ss
dec
popw
cmpl
lock
mov
ja
mov
add
aad
push
pop
jp
fldcw
sahf
rcl
or
xchg
lods
ret
jecxz
mov
push
sub
push
inc
call
fistl
cld
push
mov
jbe
pop
xor
sbb
test
jecxz
mov
mov
div
enter
out
lcall
inc
int
cli
call
das
aaa
add
scas
out
test
lcall
xor
jle
xchg
roll
lds
sbb
neg
inc
push
xlat
xchg
inc
nop
mov
fmull
ja
ret
dec
dec
push
and
xlat
sar
inc
sbb
cmpsl
push
insb
sbb
or
push
pop
rcrb
pop
mov
xor
add
pop
xlat
sbb
test
jp
filds
ds
mov
adcb
pop
jns
add
or
popa
xchg
cs
add
test
aam
mov
jecxz
pop
add
nop
lods
nop
fcomi
fidivl
push
fimull
adc
dec
fsub
push
loopne
inc
xor
jo
mov
sbb
arpl
sub
or
lahf
xchg
xchg
xlat
out
nop
pop
mov
jb
add
ret
std
test
push
add
and
movsl
mov
pop
loop
lods
push
dec
jge
mov
mov
lea
xor
and
fucomp
rorb
out
gs
movsl
dec
sub
movsl
push
test
sub
pop
or
stc
mov
sbb
shlb
ljmp
cmp
jle
and
sti
nop
sbb
into
or
add
sub
push
xchg
in
inc
ljmp
aam
out
sbb
pop
jecxz
xchg
and
cmp
call
call
mov
push
lods
shr
call
into
and
mov
ret
add
push
fimuls
mov
mov
or
movsl
aad
push
xor
sbb
ret
imul
scas
pop
mov
fisubrl
push
outsl
insl
mov
insl
push
pop
in
jno
mov
shll
jno
add
inc
cmp
lcall
out
xchg
dec
xor
cmp
rorb
jl,pn
loopne
stos
ss
adc
cwtl
sahf
mov
jbe
movsb
popf
jo
or
dec
sbb
shrl
adc
icebp
dec
jmp
in
shll
out
adcb
inc
inc
jecxz
cli
out
inc
ret
jnp
push
or
add
insb
jns
add
movsl
and
mov
loop
and
adc
dec
push
mov
lcall
repnz
jnp
mov
jns
out
pop
rolb
dec
mov
pop
les
and
dec
cmp
int3
or
jle
xor
adc
add
cmp
or
adc
xchg
jmp
bound
xchg
add
in
cld
les
dec
test
fistps
das
push
push
add
push
jg
out
pop
ret
lret
mov
or
or
or
dec
cmc
adc
adc
xor
lock
xlat
mov
push
adc
sahf
insb
sub
xor
lock
arpl
adc
ret
imul
rol
sub
mov
sahf
mov
xchg
aad
stc
push
idiv
aad
aam
dec
imul
mov
scas
pop
icebp
mov
ljmp
call
pop
push
lock
or
or
dec
loopne
call
xor
xorl
leave
pop
jo
lds
cmc
add
xor
mov
aas
or
pop
sub
mov
test
scas
cmp
sbb
rcll
popa
not
ljmp
add
adc
mov
test
ljmp
dec
mov
inc
xor
cmp
js
or
sti
ret
into
pop
sub
jb
jmp
push
mov
pusha
call
xchg
rorb
pop
je
xacquire
fnstsw
aas
sbb
fcomip
xor
fs
adc
jae
mov
lret
mov
movsb
outsl
adc
mov
and
push
jle
or
sub
and
mov
test
repz
jo
jmp
mov
mov
adc
cmp
add
loope
sbb
insl
mull
add
movsb
lds
mov
bound
xor
fistpl
clc
orl
cmp
mov
add
push
in
inc
mov
xor
lods
popa
leave
roll
stos
jge
test
mov
loop
cltd
dec
pop
call
ret
or
into
jp
push
cmp
in
stc
lret
pusha
subl
lahf
scas
inc
add
mov
mov
dec
int3
add
jbe
sbb
xchg
add
out
cwtl
ret
mulb
inc
cmp
mov
addr16
pop
inc
pop
dec
je
int3
in
ljmp
pop
push
mov
addb
inc
xor
leave
loopne
xchg
adc
sub
push
jns
and
enter
inc
ret
std
mov
or
mov
fstpt
call
pop
scas
dec
cmp
push
sahf
call
jmp
sbb
xchg
inc
mov
test
mov
fiadds
cmp
adc
sbb
push
ret
shl
clc
xorb
and
insb
loopne
xor
sahf
inc
clc
sub
xor
fsubs
and
in
jae
or
std
ret
mov
enter
loopne
ljmp
push
fdivrp
jp
stc
push
cmp
mov
push
pop
jp
and
jl
jmp
mov
cld
add
xor
and
daa
addr16
xchg
push
cmp
ja
lods
pushf
mov
push
lahf
inc
and
into
xor
adc
lea
int
add
movsl
out
loope
mulb
mov
jp
dec
mov
test
sub
cmp
sbb
shrb
pop
and
imul
outsb
aam
test
into
or
dec
clc
lds
pop
push
xor
sub
clc
cmpsb
out
in
cld
out
lock
sahf
in
push
js
mov
xchg
bswap
je
ss
test
jp
inc
outsl
inc
inc
jl
and
add
inc
inc
sub
call
sbb
add
rcll
stos
test
push
dec
imul
push
pop
mov
dec
adc
mov
das
mov
dec
call
movsb
dec
lods
cmp
add
outsb
test
ret
lock
mov
lock
rcrb
mov
mov
cs
fimull
xchg
mov
movsl
add
out
pop
mov
sbb
lods
inc
or
jmp
cmc
mov
ret
stc
es
int3
daa
xchg
xor
or
add
dec
movsl
jo
dec
stos
xchg
popf
sbb
shrb
inc
movsl
sub
mov
cmp
fidivrl
jp
pop
out
jl
das
nop
and
xchg
lds
add
xchg
cmpsb
test
add
ret
jge
adc
xor
and
out
inc
frstor
mov
sub
and
add
mov
mov
loop
jns
adc
adc
jecxz
popl
mov
pop
mov
xlat
pop
mov
or
hlt
jp
aaa
mov
icebp
inc
cli
xor
jp
aaa
push
pusha
push
sbb
jg
add
add
sbb
lds
or
rolb
loope
aaa
adc
pop
ljmp
inc
cmp
cmpb
jne
fcmovnu
lcall
lahf
pop
enter
hlt
xor
and
mov
lods
repz
cmp
iret
pop
add
ret
push
pop
inc
shlb
mov
in
scas
cltd
pop
cmpl
dec
and
mov
mov
pop
and
jp
sti
xor
clc
xor
fwait
jo
mov
cmp
fs
mov
cmp
cmp
xor
loop
in
push
repz
pop
jle
or
and
movsl
xchg
fmull
movsb
mov
outsl
mov
bound
sub
xor
cmp
mov
xor
pop
lods
sbb
pop
push
jle
or
pop
jo
inc
pop
adc
mov
or
ss
xor
movsl
jbe
je
add
in
push
jl
and
cs
sarb
jmp
xor
xor
add
cmp
fiaddl
std
sub
sbb
aad
enter
ljmp
xchg
inc
add
es
xor
test
les
mov
xor
gs
cli
add
adc
adc
je
dec
insl
adc
bound
aas
mov
iret
hlt
out
pop
das
xchg
cmpb
shll
xor
popa
mov
and
push
mov
mov
ljmp
pcmpeqw
inc
mov
mov
rolb
pop
shll
popa
and
mov
push
push
add
lods
loope
jno
shll
sbb
push
cmp
and
imul
fimull
cli
adc
es
cli
rorb
rorl
sub
xlat
loop
test
dec
icebp
hlt
mov
aas
mov
pop
or
pop
js
call
clc
iret
cli
push
ss
add
mov
cmp
addr16
push
popa
sub
addb
aas
and
push
adc
test
inc
inc
or
shrl
xor
cmc
orl
or
test
lea
imul
xchg
fcoml
test
dec
sbb
add
cmp
sbbb
adc
iret
dec
sbb
scas
mulb
mov
xor
dec
es
fidivrs
mov
xchg
leave
addr16
pop
mov
es
mov
jmp
sbb
add
push
addb
clc
shl
adc
ret
clc
add
xor
cmp
aad
in
xchg
or
out
cmc
pop
push
inc
jnp
in
or
push
loopne
ja
sbb
fidivl
ja
repz
mov
xor
push
popf
hlt
andb
int
sbbb
jne
mov
push
push
or
outsb
xor
sbbl
pop
push
or
jmp
cli
add
outsb
in
xchg
mov
adc
scas
jge
inc
int
and
gs
test
test
mov
push
lock
repz
inc
rolb
adcb
call
dec
popf
jp
ds
cmp
imul
cmp
push
scas
jge
dec
xchg
addb
and
dec
bound
popf
out
inc
addb
js
sbb
add
cmp
test
push
in
cld
cwtl
sbb
push
push
or
xchg
xor
sti
std
push
push
ja
mov
sbb
and
ja
push
out
inc
cmc
add
adc
fisttpll
pop
nop
popf
lcall
or
jnp
adc
and
stos
negb
loop
fisubl
lret
push
adc
shl
adc
or
subb
inc
pop
repnz
lea
adc
ret
xchg
mov
das
lcall
dec
outsb
cmc
or
or
scas
cmp
mov
sub
roll
mov
repz
xor
lock
jl
popa
pop
dec
pop
lods
push
imul
stos
int
addr16
sbb
mov
xor
dec
lock
sbb
jecxz
sub
in
test
sarl
subl
into
ds
pop
push
mov
in
cwtl
push
pop
sub
mov
fsubs
add
mov
sti
gs
xor
inc
es
test
leave
loop
int
sbb
pop
das
add
cld
call
repnz
push
fcomp
test
inc
das
mov
push
inc
test
iret
push
testb
xchg
inc
cs
test
push
add
push
xor
mov
cmpsl
rorl
loop
repz
and
stos
ficomps
fiaddl
inc
push
and
lds
jnp
addb
add
xchg
cmp
scas
and
and
in
add
jl
mov
sbb
bound
sbb
or
push
add
mov
jecxz
ret
arpl
rcrb
adc
cmp
jecxz
loop
inc
out
mov
lcall
and
mov
repnz
insl
mov
push
adcb
mov
fnsave
inc
aaa
je
clc
push
dec
cmp
mov
ret
mov
in
in
cmp
inc
fwait
pushf
adc
jle
xchg
inc
outsl
xor
int
fwait
xchg
dec
mov
call
xor
cs
ret
scas
push
mov
faddl
cmpsl
sub
and
push
addb
outsb
lock
cmc
aad
sub
addb
add
bound
popa
xchg
or
add
clc
sbb
lock
push
loop
push
adc
ffreep
mov
sbb
test
or
test
mov
cmp
push
push
addr16
les
mov
fsubrs
int
aaa
sub
cmc
xor
pop
jbe
mov
fwait
inc
inc
stos
push
scas
dec
pop
mov
sar
pop
sbb
cmp
push
xchg
lret
inc
mov
dec
rol
inc
rcll
cmp
je
dec
clc
cmp
add
imul
or
aas
mov
jmp
push
add
xchg
or
xchg
adc
fwait
mov
jmp
cmp
add
loopne
outsb
inc
fistpll
data16
cld
mov
push
ret
mov
out
jp
loopne
scas
mov
push
mov
xor
lea
les
jecxz
std
and
pop
cltd
icebp
mov
insl
loop
aaa
mov
mov
xor
icebp
adc
or
imul
out
cmp
jl
add
std
leave
fists
das
fiaddl
imul
inc
fstp
jle
lods
mov
inc
jne
and
sub
sbbl
push
lret
std
jno
or
insl
inc
inc
test
stc
push
call
cmc
push
jge
ret
aaa
jnp
fidivs
jp
add
jmp
ss
ret
sbb
pop
cmpb
cmp
jp
xor
add
imul
cmp
mov
loope
iret
or
dec
ret
scas
imul
icebp
add
cwtl
lret
ss
lret
sbb
stos
mov
cmp
cmp
add
mov
int
test
cmp
pop
xchg
sbb
dec
and
or
test
mov
xchg
pop
or
adc
sub
mov
faddl
mov
jecxz
sub
push
xchg
push
scas
jo
jo
and
inc
or
mov
shr
cmp
ret
push
sub
mov
loope
mov
cmp
cmp
xorb
jnp
xor
and
mov
push
icebp
faddl
sbb
jl
push
sub
inc
or
xor
cmp
mov
lcall
enter
stc
xor
orl
or
xchg
push
pop
add
inc
in
mov
dec
add
ljmp
in
fwait
imul
pop
lahf
mov
repz
xchg
jae
aas
cli
subb
dec
lods
jb
mov
fimull
mov
loop
mov
or
out
gs
xchg
fnstsw
add
add
push
push
repnz
cs
arpl
mov
out
icebp
fiaddl
popa
sarl
sub
adcl
bswap
test
cmpsb
mov
mov
sub
aaa
subb
out
mov
movsl
mov
cli
adc
dec
xor
mov
aas
adc
cmp
mov
xchg
sbb
sbb
clc
xor
sub
push
movsb
mov
sub
out
mov
mov
pusha
jo
mov
pop
pusha
mov
sbb
inc
filds
mov
lret
mov
fisubl
jns
clc
xchg
imul
push
mov
cld
push
or
mov
push
mov
aam
pop
mov
ljmp
int3
xchg
add
fnstsw
lods
fisttpll
xchg
iret
mov
pop
push
inc
sub
cmp
pop
ret
sbb
sbb
ror
xor
ja
sar
dec
fistpl
lahf
xlat
sahf
mov
lcall
dec
dec
inc
push
cmpsb
push
mov
push
sbb
adc
sub
enter
data16
mov
pop
fmull
dec
lods
add
icebp
dec
incl
jno
xlat
add
or
js
push
ja
popa
mov
sub
mov
mov
add
pop
aaa
and
and
insb
xor
xor
push
lahf
out
xchg
fdivrs
ja
subb
mov
mov
cli
jo
subb
out
stos
lock
les
fwait
sbb
mov
and
cltd
dec
ljmp
mov
test
outsl
stos
inc
and
dec
fistpl
cmp
and
out
push
cli
adc
pop
push
movups
cmp
mov
push
mov
add
test
pop
xor
sub
push
jle
mov
xlat
jmp
into
aam
add
mov
ljmp
dec
jo
int
mov
mov
in
scas
cmp
cs
iret
mov
adc
cmpsl
or
adc
mov
test
dec
sub
mov
les
cmpsb
subl
loop
mov
pop
adc
or
and
pop
hlt
hlt
pushf
inc
jg
mov
repnz
adc
mov
mov
sub
and
push
mov
push
jle
add
das
push
cwtl
mov
sahf
dec
mov
pop
ret
or
push
lock
pop
inc
pop
cmp
imul
mov
mov
and
loopne
data16
int3
sub
out
pop
loope
popf
sbb
ljmp
stos
les
xor
sahf
shrl
ja
xchg
cld
mov
test
and
dec
nop
mov
fistpl
push
adc
sbb
stos
pop
pop
or
bound
sbb
mov
inc
mov
or
stc
mov
cltd
fidivl
dec
add
dec
sbb
xor
xchg
decb
mov
xchg
sbb
xchg
test
fidivrl
loope
dec
sub
push
sub
andb
fdivr
pop
sbb
idivl
in
inc
pop
loope
jp
mov
push
adc
rorl
or
aad
sbb
fwait
insb
cs
lahf
test
cmp
out
or
pusha
cmc
xchg
or
in
repnz
inc
in
sub
aad
mov
xchg
fldenv
dec
jecxz
pop
adcb
lea
xor
pop
ljmp
jg
std
ret
mov
loopne
out
push
outsb
imulb
iret
lcall
jbe
lock
popa
pop
outsb
in
xor
add
mov
jg
push
stos
push
addr16
mov
sbb
mov
test
loopne
cmp
out
cmp
adc
lods
mov
xchg
ljmp
shlb
jno
out
pop
inc
arpl
imul
adc
bound
cmpl
jp
rcrl
mov
xchg
and
adcb
iret
mov
mov
and
test
xchg
andb
push
popf
mov
mov
push
pop
fisttpll
or
mov
xor
xor
dec
mov
inc
jae
out
icebp
daa
dec
lahf
cli
ret
jecxz
lahf
je
jb
sub
pop
jp
jns
pop
and
pusha
add
mov
mov
lock
xchg
repz
sub
aaa
fcompl
or
sbb
lds
push
pop
loope
orb
push
inc
es
adcb
outsl
mov
sbb
mov
icebp
test
dec
mov
icebp
ds
loope
and
xchg
add
adc
lods
cmp
addl
add
jl
subb
mov
fwait
test
mov
lahf
adc
imul
jo
cmp
pop
subb
add
inc
out
jmp
hlt
jl
std
inc
lock
movsb
out
add
mov
adc
mov
sbb
rcrb
mov
push
push
inc
xlat
int
loopne
cmp
into
and
out
push
fstl
xchg
xor
test
cltd
into
cmp
mov
addb
sti
sub
ret
popa
sub
inc
fcmovbe
and
ficoms
jp
std
movsb
adc
add
adc
ret
sahf
push
push
sbb
sbb
cwtl
sub
push
pop
sbb
out
data16
pop
sbb
leave
xchg
test
rep
hlt
cmp
lahf
inc
gs
xor
adc
lock
xchg
xchg
push
sub
mov
outsb
dec
js
cmp
sbb
mov
push
xchg
in
add
inc
in
loope
movsb
sbb
fnstenv
dec
xorb
jg
fildll
xor
dec
xchg
add
mov
icebp
sbb
loopne
pop
push
jg
push
int
sub
jle
lods
loop
jmp
pop
in
mov
ficoms
adc
adc
ror
fidivrl
js
jnp
movl
add
inc
mov
mov
or
and
push
cli
lods
fcmovnu
addl
xchg
dec
sbb
mov
inc
jl
xchg
shlb
out
jle
mov
push
bound
sbb
lods
test
push
filds
push
lock
std
pop
push
push
adc
test
dec
inc
xchg
imul
jbe
cmpsl
aaa
les
test
jae
lock
mov
inc
dec
jge
int
inc
dec
jmp
call
dec
out
dec
mov
scas
mov
mov
mov
inc
nop
and
inc
mov
xchg
sbb
ds
sbb
mov
pusha
adc
ss
out
mov
call
ljmp
cmp
pop
fidivrl
ret
lret
jle
sub
xchg
add
mov
mov
and
popa
daa
call
pop
mov
and
les
push
lods
cmp
inc
movsl
inc
clc
fwait
pop
jle
icebp
push
mov
pushf
sbb
mov
rclb
aam
in
pusha
jbe
pop
mov
pop
stos
xor
push
cmpsl
daa
cmc
ljmp
xchg
movsb
mov
addb
pop
sub
mov
cli
lods
test
and
push
ret
and
stos
push
sub
inc
mov
cmp
cs
sahf
and
adc
aas
fs
sub
lds
or
insl
fbstp
jnp
sbb
ds
or
lods
pop
scas
mov
add
pop
jbe
clc
dec
std
dec
in
add
push
ret
or
fwait
mov
lret
pop
mov
xor
add
scas
inc
fwait
les
inc
inc
cld
clc
pop
cmc
scas
adc
jge
addl
add
fldl
push
pusha
cmc
jge
sbb
push
xchg
lahf
aad
sub
clc
jg
add
pop
loop
adc
push
clc
sbb
sbb
add
lods
je
or
idivb
cmpb
fistps
jge
pop
lods
mov
fistl
push
pop
daa
cmp
mov
inc
js
lds
mov
and
pop
dec
daa
movsl
inc
vpshad
lahf
lea
arpl
clc
in
leave
push
f2xm1
call
cmp
outsb
xchg
push
mov
sbbl
xor
negb
sbbb
mov
cwtl
xor
cmp
adc
lods
mov
or
frstor
das
jo
xchg
xor
sbb
out
add
sbb
add
mov
sbb
addb
xchg
daa
adc
cld
cmpl
push
in
mov
std
adc
scas
rclb
es
shlb
xor
cmp
divb
pop
fsubs
or
push
out
movsb
and
jle
test
sbb
lods
in
mov
addr16
mov
ljmp
testl
nop
xor
js
add
test
mov
mov
xor
cld
sub
xor
pop
mov
cli
inc
jbe
inc
out
fidivrs
sbb
cmp
aaa
fidivl
cld
xchg
mov
dec
push
mov
push
aam
cltd
test
adc
xchg
mov
or
or
call
daa
ds
push
mov
adc
hlt
int
push
sub
mov
xchg
hlt
and
loop
or
inc
mov
push
jbe
icebp
subb
cmp
int3
loop
into
es
cld
or
test
sbb
adc
add
inc
add
pusha
or
cmc
dec
or
xchg
aad
lret
pop
sub
push
mov
pop
sub
clc
jo
sbbl
cltd
inc
nop
test
add
iret
jl
cli
aaa
pop
mov
adcb
cmpsl
pop
xchg
movsl
sbb
dec
mov
lret
push
xlat
xchg
mov
add
dec
inc
pop
loop
mov
or
xchg
setb
inc
sbb
sub
shlb
ljmp
sub
push
adc
xchg
inc
repnz
cmp
jl
cmp
jmp
jp
jle
test
cmp
xor
test
repz
mov
pop
ljmp
test
outsl
scas
push
or
push
or
mov
dec
sub
add
mov
clc
cmc
inc
jbe
in
xorl
std
decl
inc
inc
xorb
mov
mov
cs
pop
jge
or
gs
mov
cli
xchg
xchg
dec
adc
dec
rcll
pop
jno
or
out
inc
inc
das
sub
xchg
sub
push
adc
xor
call
hlt
xor
inc
mov
imul
movsl
imul
pop
or
shlb
cmpsb
pop
pop
lea
xchg
addb
push
popf
xchg
rcll
xchg
add
inc
leave
jge
test
sbb
bound
mov
pop
repnz
bound
pusha
cmpsb
xorb
andb
adc
lds
dec
fwait
sahf
push
das
adc
mov
orl
sbb
stos
loope
in
lds
add
addr16
dec
std
aaa
jp
adc
test
sbb
outsb
mov
fs
addr16
inc
xor
xor
or
mov
lret
push
fucomp
loope
cmp
jnp
stos
sub
xlat
bound
not
sbb
sub
jmp
xchg
loope
fidivrl
cmp
scas
xor
and
ljmp
lods
sbb
mov
movsl
or
mov
mov
pop
push
inc
rcr
sahf
pusha
sub
inc
outsb
inc
cli
mov
scas
inc
cmpsl
jno
aas
sbbl
jle
inc
rorl
jl
or
xor
test
pop
dec
xchg
sub
dec
add
call
in
ds
mov
xchg
jb
xchg
inc
pop
cwtl
inc
adc
iret
fisttps
mov
fldt
xor
mov
xor
adc
clc
push
mov
sub
mov
dec
mov
mov
cmpsb
sbb
sub
loopne
pop
mov
test
push
idivb
ret
push
mov
cwtl
fiadds
outsb
pop
mov
pop
loop
ja
clc
cmc
and
jne
roll
add
pop
push
fimuls
push
cmp
push
les
dec
dec
jg
movsl
mov
push
hlt
pop
lret
lock
mov
movsb
pop
cmp
les
add
xor
ret
cld
and
rclb
loope
or
mov
mov
std
in
jmp
xor
int
movsb
jmp
inc
fidivl
add
mov
sbb
mov
cmpsl
pop
push
mov
xchg
shl
test
test
push
imul
scas
xchg
or
mov
or
mov
sbbb
stos
pop
std
stos
xor
mov
and
shr
leave
jns
inc
push
addr16
and
orl
js
mov
out
cs
ret
pop
mov
cmp
jp
cmpsb
mov
cmp
push
testl
push
loope
pop
mov
test
inc
test
test
pop
push
mov
xchg
xorb
bound
push
pop
stos
jge
sbbl
loope
jle
or
adc
insb
add
test
pop
inc
loope
into
mov
pop
aas
clc
fs
sbb
push
adc
aas
test
cmp
cmpsb
aam
inc
mov
outsl
xor
jo
addb
popf
in
adc
jo
pop
adc
loopne
adc
and
sub
bound
jl
rorb
cmp
dec
leave
stos
aas
xor
mov
cmp
jp
dec
mov
pop
jp
stos
xor
xchg
adc
sbb
jbe
adc
mov
xchg
add
aas
andl
cmp
cs
pop
jecxz
dec
adc
insb
fdivs
or
arpl
ret
push
test
fwait
push
sahf
and
gs
add
inc
rorl
xlat
lret
inc
pop
mov
mov
and
inc
repz
imul
pop
hlt
or
mov
or
lds
fnstsw
pop
repz
mov
push
mov
mov
add
inc
pop
inc
pop
mov
cmpsl
cmpsb
dec
fisubl
daa
adc
and
shrl
pop
sbb
adc
add
cli
movsb
sbb
sbb
pop
lret
pop
movsl
lcall
mov
and
mov
cmpsb
orb
push
lcall
push
xor
sbb
inc
jmp
add
sbb
cmpb
data16
inc
or
xchg
mov
lret
cmpsb
test
mov
ja
add
imul
sub
mov
mov
enter
cltd
push
inc
jmp
loope
in
les
xlat
dec
pusha
hlt
mov
stos
mov
addl
int
vpsubsb
sub
dec
fdivs
imul
or
push
sti
push
jne
push
adc
push
and
shl
mov
jb
cmovle
call
and
insl
imul
or
cmp
sbb
mov
sbb
rcll
push
mov
loop
cmp
cmp
aas
test
rorb
ja
inc
xor
cmp
cmpsb
mov
mov
shr
adc
dec
hlt
lahf
add
adc
lock
jl
xchg
sub
pop
cld
jmp
and
adc
adc
out
add
jo
or
addl
xchg
pusha
adcl
push
pop
jmp
jg
loop
push
stc
xchg
fstl
mov
pop
ret
pop
adc
cwtl
add
ds
pop
pop
mov
add
cmpl
adc
adc
push
call
push
or
and
cmp
mov
outsb
pop
jl
jb,pt
enter
sbb
jmp
mov
adc
enter
dec
dec
jnp
sbb
mulb
xchg
and
pop
loopne
sub
mov
bound
push
xor
fs
and
pushf
mov
into
shrb
or
or
push
rclb
xchg
decb
or
into
and
loop
aas
dec
ja
add
xchg
and
inc
adc
mov
push
sbb
cs
loopne
xor
dec
jp
xlat
movsl
or
ljmp
lret
dec
xchg
adc
sub
add
xchg
movsl
stc
sub
loopne
les
hlt
dec
dec
or
cmp
push
aas
push
sub
inc
pop
push
mov
inc
xchg
addb
inc
inc
push
push
sbb
sbb
push
pop
add
push
jne
fs
nop
lods
mov
push
ljmp
cmp
std
cmp
js
js
or
clc
scas
inc
and
adc
adc
ljmp
inc
mov
mov
push
jecxz
ret
lods
dec
cmp
mov
jl
lods
lcall
or
movsb
enter
loope,pn
adc
pushf
jbe
sub
in
in
fadd
pop
pop
adc
pop
inc
iret
dec
and
outsb
insl
clc
es
movzbl
fstps
fisubrs
cmc
iret
rclb
or
push
insb
cmp
decl
lcall
or
push
dec
xor
mov
loope
pop
pop
fidivl
sbb
mov
pop
clc
fstpt
ficompl
sub
imul
loop
xchg
sub
pop
lea
sbb
fcmovu
mov
or
pop
add
fcmovne
int
leave
out
pop
xchg
adc
in
pusha
add
jle
je
sub
imul
mov
jbe
popa
in
mov
sbbb
test
xor
je
gs
dec
incb
inc
cmpsl
iret
ret
aam
or
add
gs
mov
aad
cwtl
dec
mov
ds
xchg
xlat
push
jne
call
stc
and
add
rcr
xor
rcr
push
sub
pop
jecxz
dec
aaa
shll
push
arpl
xchg
cli
pop
lret
loope
call
push
mov
dec
mov
mov
mov
mov
cmc
daa
inc
adc
mov
add
and
mov
sti
scas
aad
xorb
insl
pusha
rclb
push
inc
cmp
lds
or
movsb
lock
mov
sbb
lds
mov
mov
cltd
add
or
ret
enter
popa
sbb
cmp
adc
push
adc
rolb
push
xlat
dec
adc
jmp
hlt
jl
sub
lahf
mov
push
clc
push
adc
pop
cmpsl
dec
fsubrs
scas
or
nop
push
and
outsb
xor
repnz
pop
xchg
sbb
out
out
testb
push
lahf
orl
sbbb
nop
xor
push
or
roll
push
adc
cmp
dec
and
push
faddp
xchg
jl
shrb
mov
icebp
mov
xchg
popa
pop
shl
or
adc
mov
fisubrl
lock
mov
xor
rclb
xchg
sbb
cmp
stc
ss
outsl
cli
cwtl
int
jge
cmc
xor
mov
pop
add
jg
cli
movups
cmc
pop
dec
cltd
push
ret
push
aaa
dec
clc
iret
jl
neg
xchg
dec
dec
stos
hlt
or
adc
jno
inc
push
pop
xor
or
mov
mov
dec
sub
push
cli
lcall
pop
mov
xchg
shlb
sbb
jno
and
pop
adc
stc
es
sbb
cmp
mov
testl
pop
or
adc
data16
clc
pop
sub
arpl
sub
and
xor
aam
fwait
push
icebp
je
jecxz
push
icebp
mov
leave
jmp
loope
rorl
mov
aam
ret
or
push
outsb
icebp
mov
roll
cmp
mov
js
dec
jge
gs
scas
adc
dec
aam
xchg
and
push
call
cs
cmc
mov
outsl
mov
sbb
in
outsl
cmp
dec
mov
lret
test
cmc
adc
or
pop
adc
in
dec
cmp
xchg
sbb
adc
jno
adc
stos
inc
xor
mov
push
aas
pusha
pop
aas
add
push
pop
dec
rorl
push
and
int3
insb
dec
mov
sarb
flds
adc
dec
mov
mov
out
mov
lods
jle
lret
into
call
inc
adc
nop
loop
inc
pop
mov
mov
mov
push
fmull
add
ret
add
xor
sub
inc
fdivs
les
dec
push
push
dec
leave
lods
dec
mov
pop
xor
cmp
mov
rcrb
nop
addr16
push
mov
bnd
decb
lcall
mov
je
push
repnz
jbe
es
outsb
pop
mov
or
push
outsl
gs
adc
leave
popf
sub
push
les
pop
or
daa
clc
lea
add
xor
cmpl
mov
adc
sub
out
xchg
sarb
inc
inc
vpmovsxbd
and
xor
test
into
xchg
and
out
cmp
or
mov
outsl
adc
ljmp
pop
mov
clc
jmp
mov
pop
jge
jns
jne
mov
femms
push
int
pop
push
xlat
movb
mov
add
sbb
xchg
jno
jb
mov
push
out
stos
leave
sbb
aad
mov
fbld
or
ret
pop
in
jmp
xor
movsb
mov
jno
xor
iret
add
popf
ss
push
loop
xchg
mov
icebp
sbb
jl
iret
or
sbb
dec
insb
xor
rorb
arpl
insl
or
ds
mov
jns
ja
cmp
pop
ljmp
ds
test
cmp
jbe
push
adc
mov
test
jns
sub
cwtl
push
mov
mov
sbb
or
cmp
sub
into
mov
loop
lock
jnp
xlat
sub
inc
cmc
adc
jg
lods
pusha
pop
arpl
ret
dec
shr
add
arpl
sar
rol
lods
dec
sbb
push
movsb
out
push
cltd
mov
fldt
xor
mov
in
push
movsl
pop
mov
enter
push
pop
dec
int3
insb
bound
repnz
loopne
pop
out
dec
jo
in
xor
ret
lods
jae
scas
loopne
call
push
hlt
lahf
ficompl
int
and
std
test
sbb
sub
pop
ja
pop
stos
push
mov
jmp
mov
mov
ret
and
lods
mov
pop
push
push
pop
clc
xchg
mov
insb
mov
jno
or
dec
push
inc
int3
cmc
ljmp
pop
push
cli
sbb
inc
cmpsl
adc
aad
loope
sbb
mov
xor
jge
popa
ret
daa
pop
mov
xor
add
jg
mov
pop
popf
movsl
jns
inc
aam
xlat
shl
mov
inc
pusha
jmp
gs
shl
fwait
jno
mov
xchg
push
inc
mov
xchg
gs
push
cmp
inc
or
xor
jae
pop
cmp
bound
fdivl
mov
add
add
dec
sbb
ret
and
lock
and
sbb
dec
pop
pop
and
adc
cli
pushf
adc
das
sbb
fstpl
pop
mov
push
inc
dec
mov
in
xorb
faddl
enter
inc
push
bound
call
sbb
loopne
xor
add
push
fisubs
std
je
cli
movsb
sar
ljmp
in
pop
ffree
clc
xchg
xor
add
sub
sti
add
outsl
or
in
and
shrb
xchg
bound
loope
and
sbb
and
mov
fnstcw
inc
xchg
and
jle
fsub
push
cmp
xor
inc
int
es
adc
push
xor
sbbl
scas
lcall
adcb
jb
jle
nop
xchg
add
clc
out
push
mov
ljmp
adc
in
and
es
cmp
lcall
out
push
cmp
bswap
cmp
jge
popa
cmp
mov
push
mov
add
or
dec
clc
mov
lea
sbb
or
mov
mov
sub
mov
add
gs
in
add
ror
xchg
or
inc
dec
sub
or
add
enter
lcall
mov
cwtl
ds
jbe
xor
nop
les
gs
push
adc
lea
xor
jae
jle
jnp
mov
dec
dec
xor
adc
mov
dec
sbb
ljmp
cmpl
adcl
dec
pop
cmp
cmp
sbb
roll
popa
cwtl
cltd
andl
xchg
clc
repz
mov
sti
lahf
mov
xor
xchg
mov
paddusw
popa
adc
jmp
imul
cmp
fisttps
adcl
loop
out
pop
xor
xor
push
inc
xor
adc
push
das
sahf
sbbl
dec
pop
das
in
dec
call
sahf
and
test
push
aaa
sbb
js
lret
dec
dec
pop
jmp
and
shll
jno
test
xlat
lea
sbb
clc
inc
push
arpl
pop
arpl
xlat
pop
push
adc
push
add
movsl
inc
mov
push
dec
push
adc
mov
mov
sbb
cltd
xchg
jns
aas
xor
push
scas
mov
ja
rcrb
scas
sub
xchg
sub
icebp
add
jo
sbb
and
lock
inc
and
cli
popa
gs
and
or
jecxz
or
js
push
cmp
loope
and
mov
jmp
andl
scas
mov
in
fs
addr16
cs
aaa
mov
jno
lods
dec
mov
dec
mov
fwait
mov
pop
xchg
mov
jp
nop
int
and
aaa
add
into
cmpsb
incl
nop
or
icebp
adc
push
jbe
lret
fs
lcall
inc
aaa
cmc
inc
aam
push
arpl
pop
fidivrs
loope
ret
mov
movsb
push
sub
mov
pusha
inc
or
inc
cmp
or
cmc
pop
jne
jge,pn
rcrl
push
adc
lods
lahf
push
roll
jmp
jge
push
ljmp
in
lcall
lahf
ljmp
aam
test
xor
lcall
lret
mov
xchg
sbb
and
xlat
push
popf
jecxz
lock
not
cmp
adc
aaa
lea
loopne
aam
mov
cmp
jno
lds
jnp
lea
ja
out
add
push
insb
sbb
pushf
sbb
cmp
push
add
pop
out
andl
outsl
mov
pop
std
inc
ret
xor
sbb
or
mov
xor
and
fadds
jbe
cmp
enter
xchg
cmp
inc
rcl
push
jge
movsb
xor
sbb
inc
add
inc
scas
sub
push
ss
mov
fisttps
movsl
lahf
add
xor
cmp
or
setl
cmpsb
cmpsb
pop
or
dec
jmp
mov
popa
icebp
mov
mov
jnp
mov
sub
cmp
pop
insl
xchg
pusha
aam
loopne
lods
sub
in
dec
xor
sub
rcrb
outsl
sub
mov
je
nop
inc
mov
shl
or
jo
das
jo
je
inc
int
mov
add
stc
push
dec
pop
and
insl
pusha
push
pushf
cmc
jle
cmp
cmp
mov
or
cli
or
lea
jb
repz
je
xchg
mov
xchg
cmp
adc
mov
mov
push
addl
push
mov
sub
lret
jl
cld
and
add
mov
lods
sub
or
add
xchg
xor
fisttpl
es
push
sbb
mov
scas
or
mov
pop
push
or
movsb
mov
mov
test
or
push
push
sbb
dec
daa
test
test
loopne
fsubp
idivl
jecxz
test
insl
addr16
pop
inc
sbb
mov
sbb
or
or
add
enter
das
push
push
movsb
test
mov
jns
loopne
mov
jle
mov
lahf
cmpsl
inc
cmp
test
pop
insl
dec
stos
cmp
add
das
adc
sbb
sahf
push
dec
and
xor
es
and
and
mov
je
push
and
mov
cwtl
test
cli
adc
out
aaa
dec
push
mull
inc
lret
sub
shl
lahf
jbe
pop
or
aam
push
loopne
pop
in
pop
or
push
dec
mov
mov
xchg
lea
push
cmp
and
clc
rol
mov
loope
or
andl
shl
mov
pop
xchg
xchg
lahf
popa
nop
rcpps
mov
mov
lahf
pop
scas
xor
stos
cmpsb
or
popf
adc
fisubs
shll
leave
pop
sar
imul
cs
mov
arpl
rclb
fwait
imul
fldenv
jo
cmp
fadds
lahf
jo
dec
aad
lods
mov
lds
jp
mov
pop
mov
stos
rol
and
adc
sbb
mov
inc
imul
das
adcl
and
push
mov
dec
adc
cld
repnz
push
setne
xchg
jbe
rorb
arpl
sarb
pop
icebp
inc
data16
orl
test
in
mov
adc
das
push
int3
dec
push
shll
jo
testb
int
pop
cld
xor
addl
popf
ja
shlb
aas
mov
and
mov
sub
das
stos
movsl
das
stos
loopne
dec
rcrb
cs
repnz
fists
adc
enter
xor
bound
out
dec
pop
sbb
jne
sub
out
cmp
or
pop
adc
cmp
or
and
sbb
aas
push
mov
pop
clc
add
push
cltd
js
xchg
aaa
insb
jb
lods
dec
mov
sub
adc
xor
jbe
jp
sub
sbb
das
push
stos
cltd
je
mov
aad
inc
cwtl
jge
imul
into
cmpsb
push
iret
pop
cmpsb
pop
sbb
jae
push
cmc
je
mov
inc
pop
cs
push
lcall
andb
jge
into
xchg
inc
fstpl
lock
mov
or
clc
xor
lret
fstps
mov
movsl
cmc
mov
or
pop
mov
sub
or
mov
lret
cmp
sbb
pop
jl
lock
and
mov
lods
ljmp
sub
xchg
jp
roll
stc
jmp
sub
sbb
out
out
pop
mov
fbstp
sar
adc
jle
or
cmp
adc
push
inc
aam
fadd
xchg
jp
cmpsb
movsl
popf
push
insl
shll
mov
dec
mov
insb
jmp
movsl
push
add
cmc
jge
out
pop
inc
in
ss
add
test
cli
out
or
xchg
xchg
pop
inc
adc
mov
test
filds
rcll
mov
clc
testb
mov
fcmovbe
lock
std
cli
lods
and
pop
je
mov
subl
mov
inc
mov
lock
sub
adc
add
dec
test
ja
fdivrs
repz
xor
lret
add
pop
jg
xor
movsl
mov
sbb
mov
fs
pop
sub
sub
fdivl
add
fwait
dec
mov
sahf
dec
cld
pusha
aad
and
cld
cmpsl
lods
mov
xchg
jbe
inc
mov
inc
and
and
cwtl
jo
mov
and
push
and
mov
add
and
inc
mov
xor
js
lock
add
cmp
jecxz
shlb
or
fstpt
push
sahf
testl
mov
add
rorb
xor
outsl
in
les
aas
shrl
loopne
push
fsubrl
jbe
jl
hlt
cwtl
adc
mov
push
push
jb
dec
xchg
addb
outsb
inc
mov
lcall
pop
rcr
inc
jnp
cmp
pop
or
inc
jnp
sub
sub
or
jo
pop
xchg
fisttpll
fcompl
mov
orl
cmpsl
xchg
or
jp
es
into
push
push
jno
pop
push
add
mov
cld
aaa
cwtl
adc
dec
pop
sub
cmp
and
fwait
jne
pop
lret
jb
jmp
pop
repz
loop
lock
sbb
mov
jecxz
call
jbe
int3
mov
fisttpll
mov
imul
stos
push
test
pushf
cmc
out
add
dec
cltd
je
imul
ret
cs
mov
cs
cmpb
xor
push
or
add
jnp
jo
jnp
xchg
add
lods
in
add
mov
gs
rorl
sbb
dec
jle
sub
js
cli
xchg
bound
xchg
out
clc
inc
js
fcoml
clc
ret
jle
mov
test
adcl
sbb
mov
xor
mov
push
jo
jl
xor
int3
idiv
sbb
lea
jns
lcall
stos
mov
sub
dec
subb
adc
mov
fnstcw
mov
pop
adc
push
jbe
inc
ljmp
adc
fcoms
stos
mov
sub
xor
gs
leave
dec
pusha
push
or
clc
or
outsl
xor
add
sbb
sub
imul
sub
cmp
rcrb
push
rorl
dec
pop
stos
movsb
and
int
mov
or
ss
lds
push
fiadds
add
lahf
sbb
mov
push
jo
mov
mov
push
mov
and
cmpb
les
ljmp
and
pop
push
push
jle
call
push
jmp
sub
jmp
loopne
fisttps
push
in
scas
clc
movsl
xor
sub
pop
mov
mov
xchg
cld
dec
cmp
js
xchg
mov
arpl
test
cld
aad
outsb
sub
loopne
jo
je
xlat
scas
cltd
add
add
push
fs
pop
jo
adcb
sub
cmp
in
and
inc
push
adc
xchg
pushf
pusha
pop
rorl
fst
sti
popw
fdivs
push
mov
jge
cmpsb
pop
pop
hlt
add
ror
and
pop
add
loop
das
lods
xor
add
ljmp
push
stc
rolb
aaa
inc
or
pop
insb
das
adc
xchg
push
into
mov
xchg
cld
sbb
pop
sbb
inc
cmc
sti
mov
add
lahf
sub
fsubs
aas
ss
cmpb
ljmp
js
and
dec
add
js
mov
aam
jecxz
nop
lock
test
fxch
dec
loope
movsl
out
test
shl
fcmovu
ret
outsl
das
mov
sbb
ja
mov
add
push
xchg
cld
mov
jecxz
loopne
movsb
adc
cld
popa
push
fs
loopne
push
sbb
outsl
sbb
push
les
pop
lcall
mov
add
pop
call
in
xchg
out
jl
in
xor
rclb
into
rcrb
push
lods
cmp
jg
cs
adc
adc
and
rorl
add
frstor
ja
jnp
ss
mov
xchg
cmpsl
int3
adc
ja
adc
rol
imul
push
in
inc
movsb
xchg
ret
pop
add
and
dec
mov
fnstsw
xchg
inc
or
es
mov
add
ds
hlt
dec
sbb
cmc
jle
popf
push
insb
mov
mov
add
mulb
sub
mov
gs
pop
das
add
inc
cmc
jns
push
mov
clc
movsb
add
push
inc
test
push
lahf
adc
and
cli
xchg
jno
pop
pop
mov
and
xchg
xchg
pop
cmpb
ret
inc
dec
sub
jmp
inc
or
sti
fcomps
out
cld
div
xchg
negb
mov
adc
sti
adc
push
adc
jmp
loop
jg
loope
add
test
pushl
inc
mov
push
pop
mov
or
add
add
xchg
jmp
cmc
jge
fbld
rcr
data16
push
push
jmp
fidivl
sbb
in
cmp
rcrb
js
fiadds
push
imul
mov
lret
mov
out
imul
jle
or
sbb
js
notb
mov
out
popa
add
mov
cli
add
outsl
ja
sbb
push
hlt
loopne
jb
pop
sub
push
pop
xchg
out
lret
mov
dec
pop
and
dec
fsts
je
sti
ficoml
outsb
pusha
test
fs
pop
sub
xor
popf
sahf
inc
mov
inc
pop
scas
dec
push
cs
loopne
pop
mov
mov
adc
push
dec
jmp
imul
out
ret
push
pop
testb
inc
cmp
fnstsw
inc
jnp
mov
push
popa
mov
stos
or
mov
xlat
test
xchg
xor
jb
adc
stc
jae
add
xor
js
push
mov
cmp
or
insl
movb
inc
mov
push
xor
jmp
fsubs
push
loopne
loope
cmp
js
push
inc
add
mov
imul
push
fcoms
xor
mov
add
in
mov
add
fnstsw
xchg
push
aad
mov
outsb
sarb
ljmp
cmp
cli
nop
xor
addr16
insb
cmp
aad
test
push
sbb
test
jecxz
push
xor
les
shlb
push
es
push
sarl
dec
mov
in
sbb
jp
cli
push
dec
hlt
rorb
cwtl
ja
sub
inc
pop
aaa
dec
std
sbb
cmp
pop
in
pop
jge
dec
xchg
jo
idivl
lock
mov
push
cmp
mov
pop
add
es
repz
mov
sahf
cmp
dec
xchg
pusha
inc
sbb
cmc
cltd
pop
lods
jl
pusha
jo
bound
push
dec
dec
loopne
rcrb
sub
jb
add
and
lret
pop
inc
pop
fsubrs
pop
imul
cmp
scas
cltd
push
sbb
jl
and
inc
xchg
xchg
pop
mov
add
mov
pop
mov
mov
adc
xchg
xlat
add
ficomps
xchg
pushf
inc
cmp
cmp
inc
mulb
aas
test
test
cmp
sbbb
mov
bound
ljmp
loope
loope
fisttps
call
js
addr16
mov
cmove
pop
jp
add
xor
sbb
pop
popf
jecxz
jmp
mov
hlt
jl
xchg
ds
fs
mov
sub
add
mov
mov
inc
pop
add
mov
mov
scas
sbb
mov
loopne
jae
jbe
je
test
jle
add
push
fwait
cmp
add
add
insb
sahf
inc
push
icebp
icebp
push
fimull
mov
popa
push
test
jb
shrl
push
push
dec
pop
adc
mov
mov
ds
inc
pop
fs
or
filds
push
fmul
nop
sub
sub
xchg
data16
jnp
xlat
mov
cmp
rcll
faddl
imul
pop
cmpsl
or
jo
fbstp
mov
lret
add
jb
fabs
ret
mov
mov
pop
dec
mov
je
jns
push
or
pop
sbb
inc
cmp
pop
es
xchg
xor
cmpsb
jae
dec
pop
and
xchg
cmpb
sar
int
hlt
inc
xor
dec
js
push
cld
test
push
test
test
aad
fcoms
dec
outsb
inc
repz
sbb
xchg
mov
hlt
loope
sbb
add
pop
xchg
and
inc
mov
nop
xchg
jle
cli
pop
adc
sbb
push
dec
adc
mov
call
sahf
cmp
out
dec
cld
mov
add
xchg
fmull
out
ret
clc
jg
movsl
repz
xchg
and
xchg
cmc
mov
mov
enter
out
fmull
es
mov
or
dec
dec
push
scas
daa
add
clc
imul
push
clc
mov
mov
and
dec
mov
pop
icebp
push
push
jmp
movsl
das
daa
pop
mov
fnstenv
arpl
loopne
fwait
shrl
push
inc
mov
popa
int3
loop
push
push
mov
imul
dec
or
ss
cs
sub
sub
push
pop
dec
movsl
sbbl
mov
lock
out
jnp
cmp
mov
pop
push
dec
mov
xchg
add
cmp
pop
loopne
dec
push
or
cmpsl
inc
pusha
mov
adc
lcall
scas
js
mov
shll
test
and
mov
xorl
xchg
push
shlb
jmp
add
loope
pop
jecxz
pop
in
aam
call
xor
stos
mov
dec
js
cmc
dec
jo
cmpsb
dec
loopne
mov
call
int
push
cmc
test
jg
pop
inc
in
sub
inc
xor
stc
add
ret
xchg
lods
loopne
scas
jbe
loope
repz
ret
jg
aas
jl
sub
push
ds
jp
xchg
jge
les
inc
or
clc
aaa
sarb
xchg
sbb
clc
jl
ja
push
push
lds
jle
cs
xchg
xchg
sub
je
movsb
mov
cld
mov
outsl
mov
orb
xchg
jae
test
mov
mov
stos
fs
mov
push
push
call
cwtl
mov
sbb
outsl
pop
inc
push
add
adc
cmpl
psubd
and
ret
adc
ds
jmp
or
mov
sub
inc
js
mov
mov
ficoml
rcrl
icebp
int
inc
sarb
sub
ja
adc
enter
pushf
dec
fistps
into
sbb
sbb
mov
outsb
push
or
sbb
inc
cmpsl
cs
pop
cli
leave
rolb
sub
js
add
and
mov
add
test
and
add
adc
xchg
push
cs
mov
aaa
aaa
scas
movsb
call
pop
add
dec
and
push
mov
push
xchg
adc
adc
adc
aas
rolb
dec
es
jge
cld
mov
xor
mov
stos
cs
add
pop
sub
jmp
sar
mov
lea
movsb
adcl
or
mul
repnz
je
roll
lcall
inc
sti
incl
and
or
jp
lret
rolb
jp
stos
cmp
notl
nopl
sub
outsl
test
cltd
push
mov
leave
ret
imul
fmul
fisubs
ficoms
cmp
mov
adc
jns
addb
mov
jo
or
xchg
adcl
call
cmp
shrb
sbb
jo
pop
xchg
fcmovne
scas
jbe
mov
sti
cmpsb
pop
imul
pop
push
push
adc
pop
loopne
mov
ret
inc
adc
jge
popa
or
push
fs
and
les
adc
jp
mov
movsl
mov
jg
js
jecxz
jmp
and
not
dec
aas
sub
xor
cmpsl
inc
scas
ss
add
or
jle
sarl
add
call
call
sti
mov
mov
cmp
xor
or
inc
mov
scas
lret
xchg
nop
jbe
dec
insl
es
and
negl
sbb
xlat
xorl
add
cmp
ret
mov
dec
push
and
jl
mov
sub
rcll
js
sti
jo
mov
pop
push
jge
pop
sbb
cmp
aaa
ds
xchg
add
arpl
fisubs
jmp
lods
test
ss
xor
pop
cmp
pushf
sub
inc
jp
mov
jne
add
mov
es
push
jp
movsb
outsb
sbb
into
fsubrs
outsl
mov
dec
loop
imul
lods
imul
lds
pop
ss
hlt
sbb
fmuls
cmp
rol
mov
jp
mov
sti
aaa
sub
ds
mov
repz
and
ret
cwtl
mov
call
cmpsl
xlat
cld
mov
aas
andb
ss
sub
divb
pop
loopne
pop
lret
sbb
rcr
out
out
repz
es
xchg
dec
push
add
sbb
mov
or
push
dec
dec
mov
mov
pushl
lock
sbbb
cwtl
aaa
call
out
mov
adc
dec
mov
inc
inc
scas
and
clc
daa
xchg
sub
add
jno
rcrb
lret
stos
fcomps
xor
mov
out
cli
sahf
sbbb
cmp
push
mov
aas
lock
push
daa
add
frstor
scas
sub
and
shl
push
mov
xchg
add
sbb
and
faddp
out
out
sbb
inc
incl
or
cmpsb
loopne
shrb
push
test
or
adc
sahf
push
daa
pop
scas
xchg
and
sub
cmp
fsubl
add
js
jae
cmp
fs
mov
add
fstps
mov
jae
sub
push
hlt
rolb
add
xor
jo
mov
mov
add
mov
add
rcrl
jp
cmp
add
dec
jb
insb
push
ret
mov
lods
cmp
movsb
ljmp
sbb
add
sub
lahf
jbe
shll
es
or
or
mov
push
mov
lods
or
sub
xlat
dec
rol
and
sub
inc
mov
insb
in
mov
sub
pop
mov
push
push
xor
mov
iret
push
pop
jg
jg
adc
cmp
sbb
in
cmp
aaa
lods
mov
lcall
aad
rcl
ds
fwait
mov
adc
call
mov
or
das
rcrl
sub
xor
pop
rol
sbb
sbb
mov
scas
enter
sub
cmp
or
mov
inc
sbb
aam
dec
scas
imul
push
lret
js
push
dec
add
sbb
or
nop
and
and
sbb
sub
test
cmp
pop
or
mov
loope
cmpl
cli
xor
sub
pop
sti
pop
push
xor
in
and
cld
insb
cwtl
out
or
and
shl
sbb
xor
orb
xchg
jo
xor
std
pop
dec
and
xchg
jg
push
imul
es
lods
xchg
cmc
mov
add
add
outsl
push
sub
or
leave
inc
in
aam
pop
lahf
leave
sahf
cli
mov
cmp
push
aad
in
stc
xchg
and
dec
mov
mov
jmp
enter
xchg
or
insb
rorb
lea
aas
loopne
das
ss
ret
adc
and
mov
shl
mov
push
fidivrl
loopne
add
pusha
bound
dec
aas
pop
xchg
push
cld
xor
or
push
dec
fisubrl
jge
pop
and
ljmp
repnz
lcall
nop
out
iret
xor
in
mov
test
cmp
std
rorl
dec
imul
pushf
cmc
pushf
mov
rorl
cwtl
inc
xchg
sbb
push
fcmovu
sub
int3
aad
test
jle
ds
decb
into
xorb
cmp
jecxz
cmp
shl
push
cmpsb
add
mov
dec
popa
add
xchg
shl
jns
scas
inc
rcrb
adc
or
adc
sbb
imul
lret
push
addl
les
push
sbb
jl
inc
push
jl,pn
test
fimull
or
xor
jne
out
inc
push
xchg
aam
mov
mov
adc
pop
ficoms
mov
arpl
dec
hlt
imul
jno
mov
pop
or
jo
mov
ljmp
mov
xor
int
sbb
cmc
shl
push
es
add
int
dec
push
mov
inc
mov
in
jl
fbld
cmp
sarb
lcall
loopne
loopne
jae
icebp
stc
cmp
mov
push
jno
loopne
or
ret
sbb
pop
inc
jo
and
les
cld
jb
clc
popf
adc
cli
xor
hlt
lock
cmc
test
jns
push
and
out
cli
sbb
xchg
push
popf
push
sbb
mov
inc
aam
or
pop
daa
pop
je
and
daa
jle
dec
pop
test
clc
mov
xor
and
add
pop
inc
and
subb
rorl
out
mov
push
push
dec
mov
mov
cld
les
dec
div
js
adc
hlt
leave
mov
iret
pop
sub
popa
dec
or
enter
movb
sub
adc
jp
and
lods
cmp
call
push
ret
xlat
dec
xor
loopne
cld
gs
outsb
sbb
clc
rorb
push
adc
and
outsl
xchg
rcrb
inc
adc
add
fbld
sahf
inc
dec
sbb
jo
jae
or
jae
lahf
das
jg
add
or
add
or
rclb
adc
pop
and
test
sbb
mov
and
ljmp
lods
push
sbb
cmc
push
jbe
ljmp
add
adc
fdivr
sbb
adc
loop
adc
repz
or
mov
movsb
adc
lds
push
inc
pop
add
or
push
push
sbb
test
sbbb
inc
loope
cld
cmp
outsl
mov
xchg
lods
cltd
dec
push
mov
mov
push
inc
xor
or
call
mov
outsl
les
dec
pop
mov
mov
aaa
call
jae
xor
out
pop
cmpb
nop
aaa
lock
js
orl
in
aad
xchg
imul
sbb
shlb
ror
loop
lods
inc
test
ror
mov
mov
pop
mov
popa
add
stc
pop
push
jo
cs
mov
xchg
clc
ljmp
add
gs
push
push
push
or
push
test
add
repnz
insl
sub
aaa
mov
sub
loopne
add
aas
ljmp
dec
lahf
fildll
fldcw
add
and
push
jmp
cmpb
sub
mov
dec
repz
ja
roll
cmpsb
push
add
js
sub
cli
imul
jge
sbbl
pusha
jne
test
in
pand
xor
mov
mov
loope
arpl
iret
inc
cmp
cmp
out
sub
cmp
sub
pop
fnstsw
inc
js
fidivl
mov
add
xor
push
lods
lock
adc
fmull
or
or
inc
pop
cmpsl
jmp
sbb
fs
js
xor
lret
and
add
add
and
sub
inc
sub
orl
sbb
dec
dec
mov
shrl
jecxz
push
mov
aam
or
popa
push
ss
test
pop
repz
int
xchg
cs
xchg
sbb
adcb
in
xchg
call
ret
push
in
pusha
pop
cmp
adc
test
stos
loopne
shlb
icebp
xchg
mov
out
add
and
ret
dec
mov
xor
movsl
clc
icebp
cmp
lret
lret
movsl
cld
push
dec
outsl
test
mov
lods
add
mov
adc
test
ret
fwait
cltd
jne
xor
xchg
push
add
outsl
into
xchg
mov
inc
movsl
sbb
ret
fcmovnu
shll
pop
jae
es
xor
jno
adc
lcall
je
lods
ret
sbb
sub
add
add
inc
pop
jbe
enter
mov
add
loopne
sbb
pushf
mov
lahf
jl
lcall
je
out
les
and
lahf
jecxz
fisttpll
inc
subb
mov
jo
push
adc
ja
pop
or
fisubrl
test
mov
repz
aas
cmp
adc
pop
jle
push
loopne
pop
out
jg
sbb
lcall
add
faddl
popf
sbb
loope
or
aas
jo
xorl
mov
add
xchg
mov
sub
and
les
add
mov
ss
es
and
mov
fwait
sahf
in
sub
call
pop
fstps
out
enter
clc
cmc
mov
sub
adc
push
mov
jmp
cmc
push
rolb
and
xchg
adc
ljmp
inc
out
cmp
push
cmp
dec
cmp
xorb
enter
dec
cmp
cmpsl
bound
mov
into
cmp
push
sbb
iret
ds
push
insl
lret
add
out
inc
or
sub
jecxz
loop
mov
pop
pop
out
imul
add
mov
lret
mov
push
jp
sbb
pmuludq
mov
les
pop
inc
lods
fld
adc
jge
lcall
sti
ja
test
sbb
add
add
mov
and
aaa
and
cmp
mov
sub
lahf
mov
add
and
lods
loope
ds
xchg
in
leave
rorb
or
cld
rorl
lds
aaa
test
jmp
mov
test
xorl
or
mov
aad
cmp
cmp
jmp
jle
add
adc
arpl
adc
or
outsb
cli
mov
cld
jo
jae
cmp
mov
loop
rolb
dec
mov
insl
and
cwtl
pop
jo
xlat
das
pop
cld
cmp
cmp
jmp
dec
xor
cmp
mov
in
fldenv
mov
cmc
ds
ss
dec
mov
dec
jl
inc
dec
add
loope
arpl
int3
and
mov
pop
lahf
lret
call
push
jmp
test
cmpsl
xchg
inc
out
test
iret
ret
mov
cld
push
lods
into
fwait
es
jmp
adc
shl
mov
pop
popa
lds
popa
xor
jns
add
mov
popf
adc
xor
mov
movsl
decl
push
pop
lahf
stos
movsl
rcl
in
cmpsb
scas
nop
jl
and
jl
in
sub
hlt
push
aad
ss
xor
test
insb
das
lahf
cmp
test
xchg
lcall
xchg
jge
out
push
push
test
mov
push
cmpsb
out
and
sbb
lea
inc
inc
push
push
sahf
mov
je
lods
outsl
fists
mov
mov
fmuls
gs
das
mov
popa
mov
and
mov
or
cmp
dec
lea
jmp
jge
js
push
pop
lcall
cmp
and
testl
les
cmpsl
xchg
fisubs
or
sbb
leave
je
inc
xor
add
hlt
add
push
stos
ret
jne
mov
ja
jbe
xor
icebp
or
inc
arpl
add
cmp
add
div
xchg
add
test
pop
or
add
arpl
and
in
loope
in
or
lock
cmovbe
sub
popa
xchg
xor
fstl
mov
pop
xor
or
scas
rcr
dec
inc
or
sbbl
inc
mov
cltd
jge
leave
push
jle
loopne
or
iret
into
nop
leave
xchg
scas
xchg
mov
and
sub
jb
mov
add
xchg
cmp
imul
lods
pop
jp
and
test
loopne
lods
insl
shrb
data16
push
adc
mov
pop
leave
jbe
lea
mulb
adc
cmp
mov
pushf
test
pusha
test
movsl
fistl
ljmp
push
push
int3
test
inc
dec
sahf
adc
mov
or
sti
or
mov
jb
int
mov
scas
in
add
icebp
xor
sahf
and
push
clc
mov
adc
out
les
pop
in
inc
jg
mov
or
dec
bound
jae
inc
adc
mov
inc
pop
sbb
cmp
iret
sub
mov
sbb
sub
cmp
inc
xlat
cmp
jns
push
outsl
bound
push
push
sbb
push
sub
loopne
inc
push
lds
daa
adc
mov
push
adc
sbb
or
jl
popa
adcl
xlat
dec
scas
sub
sub
dec
arpl
mov
push
ret
pavgw
xchg
aad
cmp
ror
inc
or
push
xchg
push
jl
pop
jno
jne
subb
out
daa
mov
mov
pop
or
mov
xor
push
cwtl
push
cmp
in
testl
js
icebp
jg
popl
or
enter
loopne,pt
mov
test
sbb
loop
mov
pop
fistpl
mov
mov
scas
nop
jne
push
divb
xor
icebp
xor
jle
sub
xor
cmp
cmovb
insb
fidivrl
cli
aam
stos
scas
cld
push
pop
push
jb
add
test
cltd
xor
adc
in
xorb
adc
stos
out
sub
jne
sbb
fsubp
pusha
jno
in
xchg
pop
aas
add
add
mov
idivl
jle
rcrl
sub
sbb
test
push
mov
cli
xchg
add
mov
dec
jne
add
insb
mov
mov
jl
in
mov
mov
pusha
out
cs
adc
mov
mov
pop
das
lods
int3
or
ja
mov
push
subb
stc
popf
imul
lahf
lahf
mov
xchg
mov
xchg
adc
pop
cmp
adc
cmc
clc
mov
rcrb
out
nop
xor
pushf
shlb
fs
popl
mov
and
ljmp
pop
add
jns
cmpsl
mov
dec
xor
or
fcomps
icebp
cltd
addb
xor
insl
mov
cwtl
lahf
cwtl
ljmp
sti
xchg
movl
or
into
sub
jg
jo
push
mov
sub
mov
or
call
imul
jge
lsl
xor
pop
sbb
idivl
mov
sbbl
negl
xor
jg
iret
add
jae
mov
shrl
mov
popa
jne
icebp
or
mov
sbb
mov
insb
adc
sbb
jmp
lods
jl
sbb
stos
in
push
push
lock
or
mov
mov
test
push
fcmovu
inc
loope
call
sub
adc
icebp
jnp
jmp
jle
xchg
sbb
into
adc
cwtl
rorl
icebp
or
or
cmpsb
lcall
rcrb
jbe
pop
dec
icebp
dec
in
add
rcll
pusha
in
or
dec
cld
lods
out
mov
cmp
push
repnz
or
lahf
jp
clc
dec
leave
test
or
mov
bound
cmp
adc
and
aad
xchg
das
mov
into
adc
cmp
cli
push
scas
loope
pusha
mulb
inc
fildl
hlt
and
mov
cmpsl
scas
push
adc
add
das
mov
push
sub
fwait
movsl
push
mov
mov
cli
xor
dec
loope
or
lcall
aas
icebp
mov
lds
stos
cli
adc
push
test
mov
jno
jl
pop
mov
cwtl
decl
mov
cmp
ret
cli
and
mov
shrb
xor
lret
cli
adc
js
adc
lahf
sub
mov
mov
movsb
xchg
or
je
movsl
mov
shll
xchg
dec
dec
push
xor
js
inc
and
out
xchg
and
insb
cmp
lods
mov
mov
test
pop
dec
mov
add
adc
nop
orl
mov
push
jns
push
mov
add
ja
addr16
mov
out
fdivl
leave
lcall
fisubrl
dec
mov
aad
or
shll
add
dec
jne
aaa
mov
fsubl
cmpsb
jmp
mov
push
mov
mov
cmc
ficompl
stc
xchg
xchg
stc
or
inc
lods
test
pop
and
xchg
pop
js
mov
xor
mov
fwait
cmc
sbb
or
stos
out
test
loop
mov
add
sub
mov
jmp
cli
lods
xchg
test
test
lret
in
dec
cld
add
int3
mov
test
sub
mov
or
mov
js,pt
out
mov
and
orl
mov
cmp
xor
lock
and
pop
dec
out
adc
lcall
mov
cmp
inc
mov
push
pop
subb
cld
push
sbb
adc
pop
add
adc
inc
insb
test
sub
addr16
mov
cmp
mov
sbb
shlb
mov
je
ja
outsb
test
inc
aaa
jnp
stos
rcll
and
xchg
mov
push
movsl
cs
in
or
mov
jl
or
pop
inc
sbb
gs
sbb
inc
jmp
inc
xchg
jp
and
or
adc
adc
cs
add
mov
addb
hlt
cmp
fsts
add
sarl
dec
pop
fs
mov
inc
imul
call
int
js
jae
addr16
test
pop
imul
inc
cmp
xor
sbb
sbbl
enter
cmp
inc
inc
sub
int3
xor
mov
or
push
mov
cmc
pop
test
adc
loop
imul
jge
jno
lret
pop
dec
movsl
pop
mov
ret
lods
insl
test
lods
pop
hlt
imul
or
loope
pop
into
jae
xor
sahf
or
popf
jne
mov
fcoml
sub
lret
pop
jmp
mov
pop
test
loope
jne
andb
xor
ret
inc
pop
lea
lds
pop
xorl
sti
testb
bound
inc
adc
pushf
mov
dec
and
xchg
push
jle
jno
add
sbb
lea
jnp
dec
xchg
jne
add
stos
cmp
rol
pusha
push
mov
incl
cmp
and
cmp
jns
adc
aam
repz
aam
ret
pushf
outsl
shll
jmp
mov
jbe
mov
test
mov
sti
ret
shll
and
and
push
cmp
inc
pusha
outsb
cmp
push
mov
add
cmp
xor
mov
test
jecxz
outsb
test
and
shr
aam
jnp
dec
mov
adc
and
arpl
cmpl
das
out
cmp
adc
aas
sbb
pushl
xchg
stos
jo
inc
out
push
lea
int3
push
pop
stc
mov
mov
leave
mov
bound
mov
popa
scas
mov
mov
sub
pop
pop
shrl
arpl
movsb
and
movsl
sbb
cltd
mov
popa
pop
push
popf
ljmp
and
push
call
dec
inc
or
andb
mov
push
fcompl
dec
pop
sub
clc
mov
mov
cmpsb
push
push
add
add
dec
mov
xor
sbb
mov
inc
mov
js
int
push
divb
test
xchg
mov
add
iret
loop
pop
movsb
pop
mov
sub
movl
dec
inc
mov
pop
xchg
sub
pop
cli
repnz
add
scas
ds
jcxz
clc
daa
fs
and
aaa
xor
add
pop
ret
int3
cmp
jo,pt
push
pushf
sahf
insb
icebp
push
and
std
pop
ss
jbe
int3
jne
or
mov
aas
lock
inc
mov
ja
cmpsl
pop
outsl
cld
xlat
test
xchg
xlat
test
adc
push
outsb
adc
mov
lret
arpl
fwait
jmp
push
or
jmp
data16
sub
dec
call
push
pop
inc
out
sub
sub
mov
pop
sub
loope
push
movsb
pop
sbb
stc
testl
xor
pushf
scas
ret
dec
dec
out
sub
lret
jg
jle
jne
fs
cli
push
mov
and
adc
aaa
out
mov
int
sbb
ficoms
jb
fstpt
push
gs
out
mov
jbe
sub
mov
fidivl
dec
dec
notl
shrl
pop
in
dec
clc
push
push
and
aaa
xor
ret
cltd
lcall
push
mov
xchg
arpl
aaa
movsl
mov
lds
push
rorl
inc
mov
pop
fimuls
cmp
jmp
inc
xchg
cmp
outsl
sub
sub
sub
xor
in
fs
push
inc
jp
add
clc
xor
and
js
pop
inc
sbb
aad
jl
xchg
pusha
leave
fcomi
adc
stos
mov
pop
iret
pop
mov
dec
push
dec
bound
dec
and
out
and
add
pop
mov
js
test
int3
xchg
pop
jne
cmpsl
push
dec
sbb
in
mov
inc
jl
arpl
jge
sbb
lcall
pop
pop
and
inc
data16
orb
mov
xor
push
mov
push
mov
sub
dec
in
mov
sub
cmp
test
ljmp
mov
shlb
mov
jns
mov
jmp
incb
dec
fstl
sarb
fsubl
bound
pop
adc
add
sbb
in
or
jmp
test
aad
incl
das
pushf
pop
call
out
ss
inc
test
inc
dec
lcall
jnp
push
test
js
jne,pn
adc
js
incl
xlat
pop
jno
in
loopne
dec
notl
cmp
sbb
cltd
pop
and
inc
mov
clc
lock
in
jb
push
cmc
outsb
loope
das
cmp
cmp
push
push
shr
push
enter
fists
je
movsb
test
nop
movsl
sahf
loopne
pop
movsb
push
sti
mov
inc
inc
pushf
mov
pop
and
cmp
in
jge
sbb
enter
or
das
mov
popf
jnp
mov
inc
lods
sbb
push
les
pop
ud2
lcall
mov
push
rcll
mov
into
imul
push
push
dec
xor
das
shrl
jmp
mov
pop
mov
outsl
mov
adc
add
cmp
pop
sub
mov
pop
dec
mov
xchg
dec
add
stos
ds
ret
lahf
adc
lcall
int3
adc
test
lret
cmp
mov
sub
or
mov
push
mov
outsb
incb
and
adc
int3
mov
push
pop
pop
xchg
mov
xchg
push
lods
push
adc
mov
mov
out
xchg
jno
js
lods
adc
lock
inc
sbb
rclb
bound
sub
popl
loopne
fs
sub
xchg
mov
pop
test
mov
in
adc
add
jge
jge
and
pop
jp
in
push
scas
lcall
pop
cld
andb
xor
and
cmpl
sub
dec
pop
xor
adc
push
lods
and
and
push
pop
test
inc
clc
or
test
xchg
add
data16
idivl
rcll
fildll
ret
push
enter
adc
das
inc
push
mov
fcomp
les
jb
push
adc
pushf
pop
adc
inc
sbb
push
cmp
mov
sti
push
cmc
add
rorb
ljmp
sbb
add
stos
out
ljmp
add
outsl
pop
sub
dec
test
pushf
mov
cmp
aad
mov
push
jmp
mov
xchg
mov
loope
add
fs
jne
pop
stos
cltd
xlat
sbbb
leave
sbb
cmp
mov
bound
movsb
mov
sub
aam
mov
cmp
mov
out
sub
imul
or
imul
outsl
inc
cmp
pop
in
stos
les
jbe
in
sahf
test
addr16
les
push
daa
int3
mov
mov
call
js
dec
xor
pop
lods
and
pop
clc
add
test
leave
xor
mov
ljmp
mov
jecxz
sub
and
add
loopne
lock
mov
add
push
fisttpll
fs
daa
cmpsl
bnd
push
xor
sub
pop
add
ret
jo
mov
push
jecxz
xor
or
out
test
and
ja
mov
sbb
xor
sub
xchg
cmp
push
pop
fidivl
pop
shrb
sbb
xlat
std
nop
sbb
adc
cmp
lea
in
ja
sub
jl
jmp
xchg
jmp
lock
xor
loop
shll
andl
into
or
xchg
scas
decl
divb
nop
adc
mov
pop
test
mov
leave
test
sbb
sub
pop
clc
fs
inc
sub
mov
jne
mov
jle
cmpsl
push
jb
adc
jno
sub
pop
fstpl
mov
inc
adc
xchg
or
pop
call
hlt
dec
rol
jl
inc
dec
int3
jmp
adc
and
and
pop
mov
shlb
adc
cld
push
pop
ds
push
and
mov
sahf
adc
mov
je
adc
inc
or
cmp
or
add
add
stos
movsl
dec
push
mov
sbb
fs
stos
popa
mov
mov
jl
out
sbb
imul
and
ljmp
mov
mov
ret
push
roll
xchg
or
jb
sub
inc
fwait
add
movsl
mov
negb
push
jae
cwtl
fnstcw
fcoms
pop
loopne
in
pop
and
jle
into
sbbl
cli
gs
mov
cld
testb
push
xchg
sbb
and
pop
cwtl
dec
mov
pop
fldt
cwtl
push
repnz
sub
mov
dec
sahf
mov
int
outsb
mov
test
xor
sub
rcrl
adc
ljmp
add
jmp
jle
dec
gs
adc
mov
sub
lds
and
stos
jmp
cmp
mov
inc
xor
ljmp
ret
les
add
clc
inc
push
xor
fs
sbb
xchg
cmp
push
pop
js
out
fimuls
test
and
mov
in
lods
mov
xchg
inc
clc
lret
sbb
pop
inc
push
popf
adc
dec
xor
xlat
adc
sub
out
and
cs
movsb
cmp
sub
icebp
lahf
xor
out
add
aas
rorl
pop
push
pop
sub
inc
cmpsl
sti
mov
inc
mov
push
inc
rclb
stos
jnp
test
movsb
data16
shl
mov
jnp
sbb
sub
aad
sub
mov
sbb
add
out
mov
loope
ror
sti
dec
nop
xlat
mov
or
test
das
mov
sub
shrl
daa
mov
idivb
cs
adc
cmp
adc
adc
sub
add
inc
loope
orb
mov
sub
mov
pop
sub
popa
gs
jge
jg
mov
push
insl
sbb
dec
mov
lods
cmp
iret
cmp
sub
xor
mov
inc
rolb
cmpsb
push
enter
insb
pop
into
push
mov
mov
aaa
cmpb
sub
shl
push
pop
cmc
add
xor
jp
or
mov
or
sbb
mov
sti
test
xorl
cmp
test
or
push
ljmp
adc
inc
lods
rcr
std
pop
lret
cli
mov
test
jle
js
stos
and
clc
loopne
xchg
add
rolb
es
sbb
outsb
hlt
cltd
imul
push
ljmp
fwait
dec
js
pop
cld
sub
test
fs
in
jecxz
loop
mov
lcall
and
incl
and
in
test
in
xchg
ds
inc
loopne
outsb
adc
inc
or
sub
push
aad
ljmp
fs
dec
aam
cmp
mov
add
xchg
dec
or
sbb
mov
sub
ficompl
enter
mov
cmp
in
cwtl
and
imul
arpl
add
mov
sbb
dec
jle
push
jnp
and
mov
enter
outsb
push
mov
cmp
xchg
push
stos
sbb
xchg
push
cmp
push
inc
pop
lcall
in
inc
fcomps
adc
notb
mov
das
sarb
sub
cmc
adc
test
rorb
xor
xchg
mov
xlat
adc
loop
sti
xchg
loopne
jp
cmp
sub
insb
mov
mov
cld
punpcklwd
pop
scas
mov
adc
pop
xor
mov
adc
cmpsb
xchg
in
or
push
xchg
movsb
lret
jle
mov
xchg
cmp
push
out
loope
xchg
or
loope
jbe
mov
clc
int3
mov
cmpsb
dec
inc
mov
in
mov
xadd
mov
push
gs
lods
mov
arpl
cmc
fcomps
pop
inc
scas
addr16
ret
jae
inc
les
mov
js
mov
icebp
and
push
push
dec
in
hlt
sti
testl
sub
je
mov
mov
dec
scas
xor
enter
mov
filds
mov
pop
pop
outsl
pop
test
sbb
pop
mov
stos
nop
sbbb
aam
pusha
bound
and
inc
push
xor
mov
and
xchg
ficomps
jo
jae
adc
or
jnp
mov
xor
adc
jmp
jno
imul
push
add
divl
xchg
daa
mov
mov
fs
cmp
xlat
add
ds
in
not
call
pop
mov
sub
adc
push
fildll
sbb
mov
repz
mov
or
inc
adc
xor
es
scas
jl
clc
sbb
daa
mov
push
ror
or
mov
xlat
call
lods
xchg
mov
dec
lods
outsb
pop
cmp
addb
add
mov
enter
adc
insl
mov
loopne
test
ret
push
and
adc
inc
fdivrl
je
stos
dec
subl
mov
pop
xor
dec
rdmsr
insl
push
fnsave
or
jmp
test
push
fmul
add
push
loope
int3
mov
push
jo
push
stos
push
xor
outsb
sbb
mov
mov
stos
ret
repnz
mov
inc
xchg
rcrb
sub
decl
or
nop
fsts
or
jnp
je
fistl
rolb
or
lds
push
and
jle
clc
or
cld
add
inc
sub
hlt
aaa
add
cmpsl
and
enter
xchg
icebp
xchg
sub
sub
aam
jl
sbb
cld
scas
cli
inc
cld
mov
das
add
fs
cli
push
sti
add
or
push
mov
sti
ds
shr
mov
pop
repnz
add
mov
inc
lret
jno
in
inc
mov
xor
fsubr
lods
mov
and
bound
bts
lea
add
frstor
mov
mov
fwait
lock
out
push
ret
adc
adc
cli
push
mov
rol
dec
rcl
adc
mov
mov
mov
rol
test
hlt
js
fwait
shrb
inc
sar
int3
rcrb
arpl
push
mov
cmpsl
xor
cld
dec
sbb
xchg
xor
push
imul
clc
mov
push
lea
cld
jo
aas
pop
sbb
nop
sbb
sbb
push
pusha
and
adc
add
mov
sarb
sbb
in
xorl
out
xor
add
or
and
jno
cli
scas
push
and
mov
out
dec
fs
inc
shlb
fnstenv
cmc
push
mov
leave
dec
sbb
push
mov
pop
je
icebp
addr16
push
data16
xchg
adc
lock
cld
cmp
fdivl
inc
xchg
sahf
sub
add
loop
mov
test
clc
mov
decl
fdiv
jp
xchg
cld
fs
push
cmp
inc
es
adc
scas
xor
in
adc
cld
jno
aas
nop
jle
push
arpl
adc
or
mov
enter
mov
mov
arpl
or
adc
loope
xchg
lods
add
add
sub
mov
pop
jns
xchg
push
imul
sbb
mov
lret
cmc
sub
inc
and
jmp
test
pop
pusha
andb
mov
adc
mov
in
inc
leave
shrb
jecxz
and
mov
xchg
enter
daa
inc
sti
sub
inc
xor
sub
jecxz
popa
inc
adc
imul
jb
xchg
jno
inc
push
aam
and
sbb
stos
fwait
test
sarl
mov
testb
pop
mov
ret
xor
pop
lcall
and
or
xchg
sar
xchg
iret
and
xchg
xchg
rolb
pop
sbb
or
iret
jecxz
cmp
cmovp
cld
ss
push
pop
ror
push
mov
mov
outsl
je
cli
into
inc
mov
jle
orb
scas
or
imul
out
lret
xor
inc
adc
outsl
push
push
int
adc
or
test
rep
outsb
popa
xor
or
jne
outsl
lock
pop
out
iret
xor
addr16
mov
popf
fsubr
mov
loopne
popa
clc
cld
jae
icebp
aas
add
and
nop
add
mov
stos
ds
mov
aas
pop
pop
jo
mov
cmp
sub
lods
mov
push
aad
dec
fcomi
pusha
daa
sub
jp
mov
inc
insb
mov
xor
inc
xor
adc
dec
xchg
adc
or
and
inc
adc
aam
mov
imul
add
xchg
push
jp
icebp
mov
xor
xor
adc
sub
subb
lods
xchg
jo
pop
movsl
push
adc
nop
sub
std
xchg
test
and
lcall
inc
fbstp
mov
pop
mov
jae
movsb
int
addr16
sub
mov
scas
in
pop
iret
xchg
xchg
out
andl
daa
jl
movsb
lods
test
popf
add
push
jb
clc
inc
mov
mov
cmpsb
jle
and
test
cwtl
pop
mov
adcb
adc
out
or
jp
mov
in
movsl
jecxz
fidivl
ret
es
mov
loop
cwtl
sub
scas
js
jo
scas
fwait
mov
push
dec
sarb
cwtl
mov
adc
movb
sub
pop
loope
push
int
iret
mov
lods
add
xor
fcomip
add
scas
js
sbb
shlb
lcall
sbb
sub
outsl
sbb
mov
bound
adc
mov
shr
lea
int3
lahf
test
or
movsl
int
sbb
lods
xchg
pop
jl
mov
mov
and
cli
jo
stos
jge
scas
cmpsb
hlt
cwtl
sbb
pushl
lret
adc
add
clc
insl
jecxz
dec
sub
pop
mov
mov
and
push
dec
mov
sub
sbb
push
xor
cmpsl
ds
out
test
sub
mov
orb
add
lods
popa
sub
fidivrl
adcb
pop
mov
adc
icebp
adc
stos
mov
push
inc
cmp
jno
push
jno
ljmp
adc
fbstp
pop
mov
add
mov
rep
cmp
loope
mov
pushl
jl
subl
sarb
js
pop
mov
xchg
pop
sub
sbb
jp
pop
add
pop
aaa
cwtl
adc
lods
movsb
aad
bound
cmp
loope
sbb
int
jmp
push
xor
rorl
into
mov
cld
iret
mov
out
fisubrl
sbb
movb
pop
sub
sbbb
hlt
adcb
xchg
cmp
or
ja
js
mov
pop
std
xchg
cmp
je
fisubrs
lahf
aam
test
pushf
sahf
xor
or
in
mov
mov
lock
mov
stos
fnstcw
roll
test
bound
inc
ret
inc
lea
mov
les
inc
cmpsb
icebp
inc
movaps
jp
sbb
or
jo
push
jno
clc
adc
pop
mov
test
mov
lahf
adcb
sbb
std
leave
sbb
sbb
test
pop
or
dec
cli
fisttps
jle
xchg
ficompl
pop
outsl
fs
repz
enter
inc
mov
neg
fsubrs
dec
push
sub
inc
and
add
mov
loope
xlat
and
data16
jp
scas
mov
cltd
xor
jl
cmpsl
mov
mov
pushf
sbb
jle
jae
pop
dec
sahf
pop
sbb
pushf
pop
or
add
sub
inc
andb
mov
mov
ret
sahf
cmpb
in
icebp
dec
push
fcoml
xorb
flds
mov
cli
jmp
or
add
inc
in
add
inc
daa
jo
and
fisubrs
cs
outsb
sub
and
ret
inc
int
incl
ljmp
xor
lods
fucomip
popa
push
mov
imulb
mov
inc
xchg
pop
inc
push
rcll
test
inc
pop
xchg
lahf
lea
sbb
stc
inc
cmp
scas
jle
in
ret
call
xor
add
xor
add
ret
xor
mov
push
lods
xor
sbb
sub
imul
jl
sbb
inc
ret
and
daa
jo
jecxz
imull
sarb
push
sbb
push
arpl
jl
inc
jecxz
pop
sbb
sbb
dec
enter
xor
sbb
cmp
cmp
push
sarb
loope
mov
aas
js
push
adc
lock
xchg
loopne
mov
fistpll
ret
sbb
sub
push
push
ljmp
push
pusha
mov
sub
dec
orb
pop
and
mov
mov
cltd
pop
sbb
jp
inc
xor
xor
xchg
out
add
rcrb
add
in
insl
add
cmc
aad
xchg
pop
sbb
xor
cli
add
dec
insl
gs
cld
xor
xchg
sub
jle
jecxz
shrb
cmp
sub
mov
mov
or
adc
mov
push
and
pop
pop
xor
loopne
xchg
rcrl
mov
into
mov
and
cmp
add
and
imul
xchg
jae
mov
inc
sbb
nop
jnp
dec
imul
or
fsub
push
scas
pop
pop
cli
es
cmp
lock
icebp
lcall
test
sbb
mov
movsl
mov
dec
dec
or
into
int
popa
std
incb
xor
cli
hlt
sub
dec
mov
mov
xor
mov
jno
xchg
pop
lea
mov
hlt
sub
mov
cmp
imul
lahf
cmp
cmpsl
bswap
ljmp
lock
xchg
cltd
push
push
pop
int
cld
jo
jnp
pushf
rcrb
dec
mov
stc
mov
popf
icebp
shrb
cmp
add
jge
or
das
insb
inc
ficompl
add
clc
cmp
push
xor
mov
psubb
pop
out
sbb
shl
cmp
sbb
repnz
pop
mov
mov
pop
mov
insb
call
cs
iret
int3
cmpsl
mov
sbb
and
and
movsl
pop
call
fildll
rol
xchg
cmp
popa
pop
jl
sbb
pop
popa
or
lods
test
or
cmc
jb
sbb
xchg
or
lahf
jne
bound
push
mov
mov
gs
pushf
inc
je
pop
dec
mov
outsb
jnp
mov
xchg
push
ret
cmp
test
dec
pop
rclb
rol
pop
pcmpeqb
das
das
xchg
cmp
mov
leave
lock
sub
fcomps
mov
xor
adc
insl
push
adc
or
sahf
xchg
inc
push
mov
aam
cltd
loop
fsubl
dec
xor
shll
jns
lock
dec
insl
fldenv
sbb
cmpsb
das
hlt
jmp
and
push
add
sbb
jle
and
pop
xchg
pop
push
dec
enter
mov
jg
out
cmp
frstor
scas
sbb
pop
push
dec
cmp
inc
loopne
xor
pop
fdiv
mov
adc
iret
cmp
fcoms
dec
rol
adc
outsl
push
push
scas
pop
pop
ss
rcr
or
mov
ljmp
mov
pop
in
leave
and
fistl
dec
cli
cmp
rcrb
or
adc
jmp
inc
mov
pop
mov
rorl
out
arpl
inc
testb
lods
pop
cli
imul
or
push
cs
or
test
out
outsb
pop
fsts
test
ror
mov
xor
rorb
dec
cmp
pop
add
loope
inc
add
loop
and
cmp
jbe
pop
test
outsb
and
scas
sti
adc
rorl
jmp
jmp
xor
cmp
shll
and
jl
lret
add
loop
mov
sbb
pop
sub
aaa
cmpl
xchg
hlt
sbb
mov
decb
mov
jle
or
repnz
outsb
mov
mov
inc
push
jb
insl
and
pushf
pop
cs
adc
ret
rcrb
addb
cmp
sub
je
sub
jge
lret
xor
adc
stos
sbb
adc
jo
xchg
add
sahf
cmp
pop
mov
mov
jo
jg
kandb
fcos
in
enter
cmc
call
xchg
or
sbb
xchg
inc
ficoml
adc
add
xchg
movb
fcoml
pusha
pop
add
mov
jae
and
mov
mov
jns
pop
mov
pop
mov
jo
call
pop
xchg
mov
repz
jp
pop
jno
xchg
js
adc
mov
add
push
jnp
imul
sbb
sbb
jbe,pt
mov
shll
arpl
push
and
sbb
push
cmp
insl
pop
rcll
jb
ret
pop
sbb
rorl
mov
or
mov
imul
cmp
rorb
dec
cli
dec
xchg
xor
sbb
jnp
fs
adcb
lock
push
push
test
aad
in
or
mov
inc
xor
mov
movsb
add
jmp
xor
jge
dec
jl
ret
pop
cltd
add
sbb
call
xlat
enter
xor
xor
inc
xor
sbb
lcall
nop
add
pop
test
xchg
js
lds
mov
addr16
xchg
out
test
cs
fwait
mov
mov
xchg
repnz
nop
jg
cld
movsl
or
sbb
mov
push
mov
stos
pop
inc
sbb
repnz
addr16
imul
sub
icebp
fidivrl
fnsave
pop
inc
icebp
rolb
data16
stos
lods
and
add
jecxz
inc
inc
push
ret
pop
int3
mov
enter
std
adc
stos
sbb
enter
mov
xchg
and
adc
sub
mov
xor
push
mov
dec
and
aaa
cmpsb
lret
jle
inc
dec
insb
inc
ljmp
loopne
call
pop
repnz
andl
insb
dec
aad
loope
jle
or
jp
xor
mov
mov
dec
lea
repz
xchg
add
in
pop
imul
lods
sbbl
dec
mov
mov
mov
cmp
mov
sahf
xor
inc
mov
adc
orl
inc
stos
push
data16
shlb
in
mov
add
inc
cltd
push
pop
je
lds
insl
ljmp
jecxz
fisttpl
sti
mov
xchg
test
loop
pop
test
loope
mov
repz
pushf
or
dec
leave
dec
cwtl
mov
xchg
repnz
jp
push
pop
pop
mov
rorl
add
scas
or
add
fcoms
andb
ret
pop
ss
or
outsb
jne
rclb
andb
adc
or
dec
cmp
daa
pop
xor
dec
das
or
stc
fstpl
stos
sbb
pop
into
pop
add
inc
daa
dec
add
shll
jmp
mov
pop
das
fsubrs
mov
test
jge
imul
mov
push
and
push
dec
xchg
pop
repnz
pop
mov
pop
dec
outsb
or
sbb
jle
cld
or
and
scas
add
in
addr16
inc
sbb
xchg
dec
stos
stos
xor
data16
pop
test
fldcw
mov
fsub
sub
adc
hlt
icebp
mov
or
pop
pop
insb
loop
pop
mov
sbb
adc
out
int3
dec
aad
daa
sti
cmpsb
mov
mov
cmp
andl
mov
inc
cmovp
fmuls
pop
loopne
inc
or
loop
lahf
jo
cltd
mov
lods
aam
push
xchg
subb
sbbb
loope
in
mov
cmp
inc
adc
pushf
test
int3
into
inc
outsl
loop
jno
mov
push
psrlw
iret
repz
cmpsl
mov
jnp
jne
in
test
lret
stos
sub
mov
nop
test
mov
shlb
or
push
add
sub
add
add
pop
push
and
xor
ja
mov
push
inc
cmpxchg
cmpsb
pmaddwd
in
mov
scas
lea
addl
xchg
leave
mov
add
mov
shlb
sar
mov
testb
aad
pop
add
mov
pop
imul
push
sbb
mov
inc
jnp
sbb
xchg
fxsave
aam
add
xor
pop
push
pop
loopne
mov
cltd
push
dec
aam
mov
sbb
ds
out
xchg
hlt
push
and
mov
jbe
sub
in
sub
xchg
ljmp
in
subl
bound
sub
icebp
call
into
and
jge
scas
push
jo
das
or
push
cmp
divl
jae
jp
in
test
iret
push
scas
mov
inc
fadds
out
push
sbb
ds
lds
mov
jl
aaa
mov
jbe
mov
or
pop
add
and
add
ja
shr
arpl
movsb
cmp
mov
inc
scas
movsb
fistl
add
out
cmp
stc
inc
lock
sub
xorb
mov
jns
ret
test
and
dec
adc
push
jo
pushf
push
scas
psllq
js
cs
jmp
xor
cmc
int3
test
sub
aas
mov
into
js
cmp
cli
insb
rclb
sti
sbb
pop
adc
stc
dec
lcall
icebp
test
mov
sub
mov
or
int
out
loop
outsl
fsubl
mull
mov
cmp
mov
das
sbb
icebp
ljmp
cmp
out
imul
xorl
outsl
rcll
add
fidivs
pop
adc
in
pop
lcall
push
imul
or
inc
inc
mov
cmpsb
ljmp
mov
inc
dec
ss
cld
pop
mov
daa
fisubrs
dec
rol
and
or
dec
add
jne
repz
push
std
pop
fists
data16
xor
mov
jg
bound
lods
out
lea
pushl
mov
lods
adc
and
cmp
aad
stos
cmpsl
push
push
xchg
add
lret
lods
repnz
cli
mov
stos
daa
popf
aaa
xor
or
sahf
ljmp
mov
adc
fidivrs
rolb
fs
push
or
insb
popf
fidivrl
pop
cwtl
push
mov
sbb
ror
decl
mov
repnz
and
mov
cmp
mov
in
mov
icebp
and
clc
fcmovu
add
mov
mov
add
scas
movsl
nop
sbb
jge
or
cmp
iret
jg
mov
xchg
cld
lahf
or
inc
adc
mov
mov
enter
add
pop
dec
fdivrs
xor
repz
dec
js
push
jnp
loopne
out
mov
mov
pop
pop
shlb
aam
adc
and
mov
add
sahf
push
xor
repz
add
out
jge
push
lcall
pop
xchg
inc
sbb
pop
aas
shufps
pmaxsw
push
ret
outsb
pusha
or
lock
or
pop
scas
inc
loope
fnstcw
pop
xchg
mov
add
xchg
fcoms
push
push
out
fs
jmp
mov
test
pop
aam
das
aas
loop
mov
dec
mov
cmp
add
faddl
xchg
cli
jecxz
stc
jle
sbb
xlat
bound
in
xlat
ret
xlat
cltd
mov
push
loope
data16
aas
jb
cmp
push
scas
hlt
out
adcb
stos
js
jne
gs
sbb
cmp
in
stos
sub
adc
insb
cmp
scas
lret
decb
bound
mov
inc
mov
fwait
mov
mov
mov
pop
ss
adc
pop
fiadds
pop
ss
inc
push
cmp
outsl
pop
scas
jp
fwait
mov
inc
xor
pop
orb
pop
hlt
jmp
jecxz
add
jne
mov
push
mov
fisubrl
mov
lahf
xor
hlt
ret
xchg
imul
jp
adcl
fcmovb
cs
adc
xchg
movsb
mov
mov
hlt
ljmp
xor
mov
scas
sahf
cli
in
jl
out
hlt
cmpsl
jno
push
repz
xchg
lods
jb
sub
dec
jp
les
inc
rcrb
lds
cwtl
mov
adc
ret
push
outsl
icebp
call
push
and
jecxz
incl
sub
push
jg
or
cmp
fcmove
bound
inc
pop
mov
test
aas
std
enter
mov
test
inc
push
cmp
mov
add
fnstsw
stos
mov
dec
std
push
sub
push
push
mov
sub
or
xchg
mov
mov
or
daa
mov
mov
scas
out
inc
lcall
xchg
ljmp
cmc
pop
pusha
dec
pop
push
inc
loopne
repz
jp
add
call
or
mov
aam
arpl
xlat
sbb
sbb
js
movsl
sbb
and
xchg
test
or
cmp
mov
mov
pop
cld
and
testl
jns
add
jne
mov
jmp
mov
int
mov
fildll
data16
xor
shrb
loop
add
shrl
scas
push
lock
mov
mov
add
ss
int3
ljmp
loopne
and
fbld
inc
add
shrb
sub
cmc
lcall
ret
mov
xchg
or
mov
dec
push
mov
aaa
popf
dec
ret
and
insb
cmp
loope
or
mov
nop
aam
popf
insl
xchg
mov
xchg
clc
scas
mov
cs
lret
dec
pop
sbb
sbb
ret
test
lods
loopne
fcoms
jmp
and
mov
bound
xorb
and
addr16
out
jmp
sbb
gs
mov
dec
mov
lods
jl
ds
xchg
sub
mov
test
push
xor
andl
xor
dec
dec
lock
push
es
xchg
push
dec
iret
jne
repz
xlat
fs
fldcw
adcb
sub
jg
xchg
repnz
lock
mov
push
out
shrl
push
imul
mov
sbb
shlb
ret
mov
popa
cli
popf
shl
movsl
xor
icebp
es
nop
xchg
test
jmp
dec
adc
mov
push
shll
mov
and
and
outsb
sub
div
xor
stos
inc
sbb
dec
int
xchg
jmp
lea
ret
mov
outsl
cmp
fidivrs
test
mov
mov
inc
ss
cmp
arpl
push
loop,pn
pop
pop
pop
and
add
mov
dec
and
test
xchg
shlb
call
test
aad
add
cmp
frstor
test
lods
movsb
xchg
xchg
xor
xchg
testb
adc
subl
or
insl
ret
dec
pop
ret
mov
lds
addr16
pop
xor
jno
or
add
js
jmp
out
fstpl
pusha
lret
subb
cmp
cmp
hlt
subl
lock
and
adc
dec
adc
mov
icebp
xor
pop
icebp
out
aas
inc
shll
ror
es
lds
sub
dec
inc
jg
inc
test
push
mov
and
dec
push
lahf
es
push
bound
jg
mov
decb
mov
mov
mov
lock
call
dec
jbe
stos
pop
jmp
pop
xchg
or
rorb
stos
js
add
xor
jo
imul
adc
loop
dec
jge
add
or
pop
mov
add
sahf
xchg
cmp
jp
stc
xor
adcl
mov
push
add
out
fxch
add
xchg
add
add
inc
movsb
jle
xchg
repnz
rcl
insl
aaa
mov
std
lcall
pop
cmp
mov
imul
pop
pop
add
sbb
sub
mov
aas
mov
adc
loopne
popa
movsl
pusha
mov
push
pop
lock
mov
aaa
fxch
loopne
stos
data16
or
pop
hlt
loope
and
mov
add
movsb
jne
pop
cmp
popf
sbb
pop
pop
jge
jae
cli
mov
xchg
les
cmpsb
enter
inc
jg
dec
es
imul
mov
pop
push
dec
movsb
or
push
sbb
pop
push
or
push
shrl
rorb
push
fdivs
loopne
mov
or
or
sbb
lahf
jl
call
stos
add
sar
xchg
rorl
push
loope
cmp
add
sub
xchg
in
sbbb
jge
and
inc
or
lret
cli
push
cmp
dec
gs
and
bound
sub
adc
ljmp
mov
mov
adc
or
int3
icebp
cmp
adc
add
ret
xchg
add
cwtl
sti
out
xor
out
insb
cmpsl
dec
inc
jle
loopne
push
xor
movsb
add
lds
xchg
and
xchg
dec
jmp
ss
cmc
shr
cmc
test
add
bound
scas
and
je
repnz
adc
dec
sbb
shlb
or
dec
push
sti
and
push
sbb
mov
ret
lahf
and
rcl
adc
inc
and
lods
dec
inc
in
fwait
adc
jg
jecxz
insl
sbbl
fmull
je
inc
in
mov
aam
mov
sbb
outsl
adc
repnz
cld
rcl
fimuls
and
sub
xchg
loopne
push
xchg
sub
cmp
sub
rol
mov
lea
inc
stos
lods
push
xchg
pop
cmp
jg
fs
pop
xchg
push
sub
or
and
iret
call
clc
push
fdivrl
outsb
adc
jp
mov
pop
push
inc
push
dec
pop
mov
push
pop
lock
sbb
sbb
pop
test
ds
sub
xchg
repnz
shr
jl
jne
scas
data16
stos
ret
push
sbb
pop
shlb
popf
sub
push
push
push
loope
pop
mov
mov
pop
adc
push
aam
mov
lea
add
lock
repnz
lcall
in
into
xchg
incb
gs
test
arpl
sbb
in
jp
push
popa
icebp
cs
lsl
icebp
adc
hlt
push
fsubl
dec
mov
enter
add
stos
hlt
add
cmp
adc
lods
inc
push
push
pop
fwait
inc
or
int
cmp
push
push
push
loopne
mov
jne
sbb
aad
ljmp
rcll
or
hlt
dec
jp
pop
pop
loop
and
jle
xorb
rclb
push
js
dec
sbb
loope
test
in
stos
les
push
and
mov
insb
lods
insb
scas
fcmovbe
jmp
movsl
fwait
mov
shl
movsl
inc
push
jmp
sbb
mov
les
into
push
or
or
xchg
in
insl
or
call
mov
fadds
xchg
sbb
test
movsb
mov
xchg
sub
or
or
rolb
pop
movsb
jp
fimull
inc
inc
sarb
mulb
enter
inc
adc
mov
popf
sbb
and
pop
jbe
dec
mov
mov
sysret
divb
jbe
bound
jne
es
outsb
mov
or
adc
cs
mov
incb
adc
jmp
repnz
inc
or
ret
lret
int
cmc
sub
fs
jg
sbb
icebp
xlat
mov
jae
adc
cli
xor
inc
pop
dec
lss
fiaddl
xchg
cli
pop
inc
scas
je
imul
xor
dec
adc
push
mov
jp
lcall
jnp
ljmp
adcb
jns
adc
icebp
scas
xchg
sbb
mov
jmp
cmpl
call
imul
cs
aaa
ljmp
add
addr16
mov
jbe
push
ret
stos
andb
mov
sub
aam
cwtl
fsubrs
dec
outsl
popl
jb
nop
xchg
dec
inc
adcb
emms
dec
clc
in
sbb
sbb
hlt
popl
clc
hlt
repz
inc
or
mov
loope
jae
pushf
push
loope
inc
test
add
add
push
jno
inc
pop
and
call
adc
dec
loope
push
jg
pop
cmp
and
ffreep
loope
mov
leave
rcrl
test
pusha
fwait
jo
icebp
loop
loop
sbb
repnz
adc
loopne
jne
mov
sbb
mov
pop
rorl
dec
ret
jle
pop
push
mov
rcr
mov
mov
leave
mov
pop
inc
addl
cmpsl
pop
hlt
mov
daa
xor
pop
aas
ror
sti
loop
mov
inc
xchg
lds
adc
shlb
xchg
dec
jne
lds
lcall
or
das
cmpsl
or
xchg
pop
mov
dec
lds
push
fbstp
cmpsl
mov
subb
push
int3
dec
mov
mov
push
fsubrs
jl
mov
or
mov
daa
adc
jne
mov
jo
ret
jnp
sbb
jmp
nop
cli
out
mov
pusha
scas
push
aaa
sbb
jge
call
push
icebp
mov
mov
mov
jge
fs
int3
int3
clc
cmc
xor
cwtl
out
mov
icebp
push
mov
pop
inc
sbb
add
xlat
jp
mov
add
add
ret
gs
or
adc
nop
cmp
aam
cmp
lret
and
xchg
cltd
cmp
mov
outsl
sub
mov
icebp
jnp
add
loope
ret
xlat
adc
and
push
aaa
cmp
rol
cs
cwtl
in
addb
xor
mov
inc
insl
aaa
shll
fidivrl
in
jb
pushf
fimuls
mov
or
adc
rcrb
mov
mov
xchg
sarb
insb
or
sahf
cld
add
sub
sub
cmpb
add
pop
mov
and
dec
pusha
insl
lods
pop
mov
nop
bound
mov
push
jmp
cmpsb
iret
rcrb
decb
push
push
fists
shl
adcb
fs
lock
lahf
dec
inc
pop
shlb
and
mov
and
jno
ljmp
xlat
mov
cmp
rcr
jmp
push
dec
je
pop
jecxz
mov
pusha
popa
or
push
add
data16
push
add
cmp
out
mov
into
xor
xor
pop
hlt
dec
sub
adc
dec
pop
mov
das
fbstp
inc
js
inc
add
xor
pop
jle
notb
movsb
add
popl
pop
shl
iret
xlat
jecxz
rclb
sbb
ja
hlt
call
adc
rolb
jne
xor
test
xchg
jbe
cltd
adc
push
in
and
arpl
jo
fmull
cmpsl
sbb
mov
xchg
push
test
mov
xchg
adc
push
jb
jb
loop
in
pop
js
xchg
cli
push
lock
sbb
lcall
negl
sub
push
loopne
sbb
xor
dec
inc
fidivrl
adc
lahf
aam
bound
gs
cmp
push
cmp
fs
sub
sub
mov
cmp
and
xchg
arpl
movsb
cmp
clc
xchg
cmc
aad
jp
xor
popa
push
jnp
mov
mov
xor
popf
out
decb
pop
shrb
mov
push
jb
mov
add
cmpsb
lock
hlt
adc
xchg
sub
dec
push
lcall
sarb
mov
dec
xchg
jg
mov
mov
loope
adc
pop
jle
aad
or
jl
cwtl
xor
aas
insb
jb
scas
das
mov
test
loop
sbbb
jb
jne
stos
inc
pop
daa
loop
push
nop
nop
push
lret
lods
lock
push
mov
push
mov
jg
loope
andl
ja
adc
cli
sub
push
sahf
xor
in
mov
mov
lret
sub
iret
or
xchg
decl
cmp
in
and
inc
jo
call
add
pop
ss
lcall
adc
ror
cmc
out
dec
xor
shr
mov
mov
ljmp
cmc
adc
cmp
dec
mov
mov
and
mov
and
aam
or
dec
out
lret
mov
loopne
data16
das
sahf
push
xchg
adc
loopne
push
cld
in
andb
loop
and
dec
fwait
stos
sub
aad
pop
mov
xchg
insb
or
incl
adc
int3
aaa
stos
fmull
and
mov
push
mov
add
mov
add
cmp
sbb
stos
push
cltd
add
mov
push
sub
icebp
mov
push
inc
nop
adc
jle
adc
mov
xchg
xchg
out
adc
push
mov
pusha
xchg
int3
and
push
lock
inc
pop
popf
jbe
movsb
popf
data16
mov
mov
into
and
mov
fidivrl
cmpsl
sub
push
fdivrs
push
jge
rorb
or
clc
push
cmp
xchg
mov
sub
addb
fiadds
dec
lret
xchg
xchg
mov
and
fnstenv
arpl
fnstcw
mov
mov
jmp
push
hlt
jmp
and
and
inc
cld
pop
add
stc
cltd
jp
sbb
aas
or
aaa
adc
inc
mov
dec
sub
jmp
or
cld
or
fildll
les
jle
js
ss
mov
jl
or
fadd
data16
mov
into
dec
std
jle
js
outsb
mov
add
adc
jbe
sub
dec
jp
in
mov
add
xor
mov
mov
adc
int3
and
das
subb
rcrl
mov
xchg
sti
jns
jmp
jmp
movsb
jle
add
incl
enter
lods
nop
scas
icebp
test
xchg
add
jle
arpl
fucomip
push
ret
sbb
andl
ret
mov
mov
or
je
jo
cmc
imul
stos
mov
mov
adc
repnz
aas
into
lret
lret
scas
push
mov
or
lahf
es
leave
rorl
imul
xchg
pusha
call
pop
idivb
mov
add
xchg
xlat
push
jle
sbb
mov
test
push
jnp
dec
push
lcall
lock
mov
mov
cmp
bswap
mov
pop
addb
jb
stos
inc
jns
test
je
mov
mov
xor
sbb
push
les
mov
fsts
push
je
sbbb
test
xchg
ss
out
mov
xor
add
push
rcr
dec
push
xchg
push
and
mov
and
je
adc
cs
mov
sub
shll
jmp
pop
stos
pop
xor
mov
adc
les
lcall
dec
push
nop
mov
and
or
mov
jae
jns
push
in
adc
jl
pop
inc
aaa
int3
insb
mov
cld
insl
lock
std
push
hlt
and
jne
jecxz
mov
bound
nop
pop
daa
jl
lcall
aad
dec
xor
xlat
push
je
dec
cmpsl
scas
or
inc
shrb
mov
cmpsb
jge
daa
orl
pop
mov
popf
mov
rcll
test
fsubr
fwait
pop
add
cltd
adc
test
mov
xchg
xlat
dec
mov
popf
sub
shrb
mov
mov
jae
sub
lock
inc
cmp
mov
mov
je
sbb
cmpsb
ret
addr16
jecxz
outsl
mov
xchg
movsb
stos
lea
xor
inc
sti
orl
pop
sbb
jp
pop
cmpl
int
xchg
push
mov
mov
and
sub
out
gs
mov
int
pop
adc
push
xchg
xor
dec
inc
mov
push
sbb
rcrl
movsl
ljmp
adc
ljmp
std
pop
cmp
sbb
dec
enter
xor
xchg
repz
clc
mov
aaa
xchg
in
mov
mov
add
movsl
or
or
xor
dec
adc
push
push
jl
mov
or
xchg
testb
dec
call
pop
add
jmp
cmpsb
mov
in
xor
xchg
lahf
out
ret
xchg
js
or
js
ret
dec
test
mov
jl
or
cmpsb
pop
mov
test
or
and
mov
add
push
inc
imul
orps
add
mov
pop
inc
out
and
or
xlat
cmp
icebp
outsb
fmuls
adc
sub
mov
mov
daa
add
loop
push
negl
std
jecxz
adc
stos
or
or
mov
pushl
pusha
jecxz
add
pop
xchg
mov
das
xor
cld
add
addr16
lret
shlb
xor
mov
fistpll
fdiv
loopne
add
ds
mov
fiaddl
loope
sub
dec
dec
mov
dec
push
add
mov
sbb
andb
gs
adc
pusha
dec
jb
adc
int3
lahf
or
lea
imul
mov
inc
mov
and
test
es
aaa
cmc
mov
sub
std
movb
dec
or
push
push
add
jo
out
jb
push
stos
adc
roll
fmull
test
insl
jmp
pop
loope
cli
addb
sub
ficompl
lcall
pop
fmuls
iret
cmp
pop
cmp
jge
bt
test
dec
cmpb
jmp
push
nop
push
cmp
sbb
jg
dec
dec
or
pop
jecxz
xchg
shrb
cmp
push
sub
je
inc
mov
mov
xchg
or
enter
insl
mov
stos
inc
push
mov
xchg
nop
mov
nop
mov
mov
shlb
inc
push
sbb
dec
cmc
cmp
pop
pusha
adcl
xor
imul
pop
addb
lahf
add
lea
mov
and
cli
push
adc
cmp
jb
cs
pop
shlb
jb
out
cld
ret
clc
sub
inc
mov
nop
or
jo
insl
jp
lret
xor
push
pop
insb
jecxz
pop
aam
jmp
jecxz
pop
lods
inc
js
mov
aad
lcall
mov
shrb
push
mov
or
mov
mov
push
cli
test
test
lret
aas
out
into
gs
add
inc
xchg
mov
add
fwait
jge
sub
jb
jl
icebp
mov
push
sarl
sub
mov
nop
mov
divps
sub
in
jle
fidivs
push
iret
loop
clc
and
or
outsl
pop
addr16
push
adcl
outsl
pop
bound
test
outsb
add
mov
xor
xlat
jle
sbb
mov
pushl
xchg
out
mov
cmp
pop
cmc
js
inc
add
pop
dec
mov
ds
push
add
js
xchg
cmp
mov
out
and
test
ror
mov
mov
or
subb
repnz
push
jge
mov
cltd
pop
sub
jg
je
loope
xchg
inc
mov
add
popa
cld
out
push
insb
fdivs
push
mov
inc
icebp
cmp
cmpsb
lret
sbb
sahf
mov
mov
jp
sub
jge
movsb
not
jecxz
dec
bound
push
js
pusha
lds
mov
rorl
xor
pushf
cmp
cltd
js
pop
sahf
sub
sbb
jne
jnp
sbb
cltd
cmp
je
cld
pop
scas
pop
jg
jmp
mov
rorb
pop
cmp
aaa
les
ds
xchg
fucomi
adc
push
scas
lret
and
cmp
ret
push
xor
loop
jb
fldl
aam
push
notl
push
jp
xor
adc
aam
xchg
fcmove
mov
subl
mov
dec
loop
push
cmp
push
mov
popf
push
insl
and
outsl
mov
cwtl
adc
aad
sti
adc
fstpl
or
popl
cmp
push
pop
mov
out
xor
add
pop
cmp
pop
inc
aad
dec
jecxz
lods
subl
add
jmp
cli
lock
iret
jge
push
cltd
xchg
or
mov
mov
data16
rclb
and
inc
ljmp
pop
push
sub
push
js,pt
xchg
sbb
adc
dec
adc
bound
cwtl
dec
xlat
lret
adc
inc
pop
stos
movsl
cmp
fisubs
lahf
push
xchg
enter
or
bndldx
sbb
pop
xchg
adc
sbbb
sub
inc
call
out
in
dec
mov
pop
pop
in
sbbl
or
testb
mov
inc
and
out
jne
mov
mov
iret
cs
fsubr
hlt
mov
mov
xchg
mov
scas
in
or
adc
sbbl
xor
mov
pop
adc
and
mov
ds
push
or
movsl
adc
lret
mov
sbb
into
lds
out
sub
and
inc
jnp
mov
jnp
cld
movsl
xchg
lcall
push
xchg
cltd
jg
adc
pushf
pop
lcall
mov
mov
mov
jb
push
cmp
push
in
mov
and
scas
or
nop
pop
lret
cwtl
push
scas
sub
icebp
cmc
sbb
push
mov
xlat
repnz
push
adc
add
mov
aad
mov
cmpsl
fadd
aad
or
mov
jge
fidivs
mov
mov
xor
xchg
xor
dec
lea
lock
push
mov
movsl
cmp
inc
jge
out
repnz
in
insb
fstpl
mov
mov
clc
or
push
cmp
leave
push
xchg
jge
test
je
scas
jp
inc
push
mov
adc
mov
fwait
add
mov
and
dec
lods
call
sub
loopne
shll
add
cltd
xor
push
and
push
je
rcl
jl
add
add
jb
xchg
mov
stos
movsl
or
cmp
xchg
mov
pop
jg
jae
ljmp
cwtl
sub
enter
mov
mov
dec
push
adc
fs
insl
sbb
xchg
std
int3
dec
into
mov
xor
and
int
add
repnz
adc
in
inc
push
in
mov
outsl
mov
cmpsl
dec
cmp
jge
or
cli
add
ret
inc
pop
xor
push
sbbl
lods
inc
mov
fidivl
cld
insl
add
or
pop
add
lods
mov
push
movsb
mov
push
outsl
mov
pop
into
and
cs
mov
mov
mov
cmp
lods
icebp
jg
mov
xlat
loope
xor
cmc
mov
fbld
mov
icebp
repnz
ret
xlat
rclb
jge
jns
sbb
pusha
fdivrl
or
repz
rolb
fisubl
or
insb
add
daa
cmc
mov
and
or
repnz
lock
adc
mov
pop
clc
inc
pop
mov
mov
imul
lods
lods
and
lods
push
arpl
rclb
lcall
sub
pop
xor
push
adc
mov
loopne
inc
inc
and
xor
mov
mov
stos
xchg
mov
mov
sbb
shlb
mov
inc
loop
not
leave
pop
jl
xor
add
cwtl
mov
jl
scas
das
orb
sub
sbb
xor
pop
or
imul
sub
dec
pop
lea
push
lret
sbb
jmp
pop
adc
add
scas
stos
out
outsb
test
insb
lock
dec
and
rclb
clc
add
cltd
and
mov
lea
xor
or
in
and
push
mov
push
xlat
jo
dec
add
orb
popl
cmpb
push
lock
pushl
pop
arpl
sbb
pop
xchg
in
enter
notb
and
mov
addl
rorb
pop
mov
lahf
data16
mov
sbb
fidivs
ret
outsb
testb
cmp
mov
xor
mov
or
shlb
mov
ja
popa
cmp
ret
cwtl
scas
push
insl
dec
xor
cltd
inc
jns
and
cmp
aad
hlt
or
cmpsb
aam
push
shrb
mov
loop
jge
addr16
dec
icebp
inc
js
and
xor
push
clc
xchg
in
movsb
movsb
repnz
inc
jnp
inc
imul
es
cld
pop
out
insb
sbb
cmc
stos
fsubrl
fmull
enter
jp
andb
hlt
push
gs
sti
sbb
add
sbb
cmpsl
push
adc
xchg
test
inc
sarl
xchg
mov
cltd
loope
adc
sub
repnz
loope
jle
push
jo
mov
cmp
adc
sub
pop
jmp
pop
or
lods
sarl
outsl
mov
cli
lock
add
jg
sahf
mov
mov
xchg
mov
sbb
jp
sub
sub
insl
negb
mov
imul
sub
add
loop,pt
and
push
ja
adc
xor
rolb
scas
xor
aas
sbb
mov
lcall
mov
clc
sub
hlt
pop
jecxz
pop
mov
dec
in
mov
fsubrl
cmp
dec
jns
xchg
dec
push
jns
sahf
test
inc
jl
cmp
arpl
decb
mov
jp
xchg
out
sub
sti
js
pop
daa
mov
jmp
enter
jae
pop
das
lods
push
jp
mov
gs
adc
inc
movsb
cmp
cli
pop
dec
dec
rclb
dec
mov
fsubs
adc
and
loopne
cmp
jnp
popf
test
jns
inc
shll
rclb
jbe
rcrb
pop
mov
fdivs
sbb
aas
xor
icebp
inc
mov
inc
popf
in
stos
imul
inc
cld
xchg
ret
inc
enter
call
mov
inc
mov
filds
pop
sbb
outsb
push
adc
mov
pop
leave
xchg
enter
mov
add
xchg
sbb
test
or
inc
mov
cmc
fildl
sub
jne
lock
les
mov
pop
push
adc
fdivl
cli
inc
ret
inc
push
popf
pop
fwait
mov
ja
out
cmp
ljmp
lret
call
pop
pop
fsubrl
std
pop
cmp
cmc
mov
adc
sub
or
and
xchg
jg
xchg
inc
and
jne
mov
add
popa
cmp
in
cwtl
push
mov
jno
negl
and
adc
aam
or
popa
icebp
xchg
call
je
jmp
sub
sub
adc
and
push
filds
sahf
mov
cmovg
xchg
jae
sub
xor
aam
pop
cmp
sub
mov
call
jp
scas
push
das
xchg
test
rolb
ljmp
add
add
pushf
adc
cmp
ret
inc
fbld
xchg
jne
or
inc
inc
lar
clc
add
call
ljmp
loope
fs
mov
push
lret
mov
jnp
popf
push
push
mov
test
es
stos
jb
inc
and
push
mov
adc
sbb
lock
int3
adc
in
add
pop
mov
lahf
nop
xor
pop
insl
aad
pop
mov
repz
xchg
icebp
imul
sub
push
xchg
sbb
loope
adc
adc
mov
int3
or
enter
mov
pop
hlt
add
jl
test
mov
notb
inc
ja
shll
mov
xchg
roll
fbld
add
gs
scas
adc
movsb
cmp
shr
sub
cmpsl
cmp
inc
mov
pop
pop
dec
pushf
gs
testl
inc
jmp
xchg
or
add
mov
add
cmp
shl
out
push
xlat
ficomps
and
mov
push
cld
cmpsb
ss
das
stos
movsl
ja
and
xchg
out
adc
add
sbb
loop
add
mov
jge
dec
pop
lock
inc
pop
dec
xchg
inc
ret
cli
xchg
hlt
enter
in
test
sahf
cwtl
mov
push
es
inc
pop
loop
cmpsl
dec
pop
push
mov
mov
js
mov
sub
xchg
sti
lods
into
and
mov
push
xor
scas
add
cmp
repnz
ror
divb
lret
jge
xchg
cmp
fmull
call
pusha
lea
orb
sbb
pop
push
cmpsb
lods
jmp
xlat
fiaddl
out
fdiv
je
cmp
roll
xor
push
cmpsb
stos
mov
loope
sbb
loope
push
mov
mov
jne
and
xorb
lods
dec
lret
in
mov
loopne
outsl
cmp
xchg
dec
call
movsl
push
std
push
fstpl
shrb
push
js
enter
pop
or
jne
push
cmc
ficoml
or
shll
mov
adc
sub
or
shlb
stos
pop
cmp
sbb
mov
loope
hlt
loopne
shlb
inc
xchg
xchg
or
les
icebp
rcl
adc
les
jae
push
cmpsl
adc
and
cwtl
lret
add
cmc
stos
and
pop
jae
clc
lock
add
sahf
and
mov
push
mov
xchg
out
sub
dec
roll
pop
mov
mov
jns
rorb
ficomps
loope
dec
sub
jnp
cmp
mov
and
pop
aaa
dec
jl
inc
das
rclb
mov
lods
or
cmp
cmpsl
mov
test
test
into
sbb
pop
mov
daa
cmp
dec
xchg
repz
addr16
mov
sbb
sbb
pop
push
adc
je
sbb
insb
ja
repz
std
pop
dec
inc
inc
mov
ss
orl
outsl
daa
sub
cmp
sbb
fiadds
or
mov
jge
add
xchg
mov
and
adc
popl
pop
iret
dec
dec
out
mov
dec
outsb
in
scas
and
mov
loopne
push
jae
insl
sub
push
dec
inc
js
stc
mov
add
je
aam
inc
iret
sbb
push
push
ljmp
xchg
push
mov
arpl
push
xchg
xchg
ljmp
lods
and
jb
push
mov
inc
cmp
or
pusha
mov
sbb
jecxz
inc
pop
das
je
icebp
xor
lea
stos
and
mov
orb
push
sub
sub
push
into
rolb
inc
rorb
imulb
and
sbb
mov
jecxz
inc
es
add
sbb
xchg
mov
sahf
inc
loopnew
add
xor
fstpl
pushf
xorl
jne
popa
les
jecxz
mov
les
xor
rolb
mov
arpl
mov
mov
sbb
add
int3
push
int
push
add
lock
shrb
adc
clc
add
xor
pop
fnsave
cmp
sbb
pop
incb
aaa
sahf
lock
add
lods
inc
push
das
cmc
and
add
inc
sbb
loopne
sub
add
xor
iret
arpl
js
mov
popf
subl
mov
das
cmp
inc
sbb
mov
fdivs
cmp
fcmovnb
jno
push
push
cmp
sbb
push
testl
xor
xlat
lret
sbb
pop
adc
lods
cmp
insl
ror
lcall
test
dec
pusha
insb
ret
cmp
xchg
pop
jl
and
ja
stos
clc
popf
and
jnp
xchg
int3
and
dec
lahf
aaa
scas
pop
hlt
sbb
dec
or
das
outsb
cmpb
mov
and
cmpsl
adc
mov
fsubrl
mov
cld
subb
in
mov
cmp
inc
call
push
and
insb
sbb
push
nop
sti
sub
loopne
push
test
ss
jmp
pop
and
pop
lods
in
jo
adc
pop
inc
or
pop
and
test
sbb
jge
es
notl
es
push
lahf
popa
push
aaa
push
jo
shr
push
enter
aas
mov
leave
mov
clc
mov
cmp
ds
jl
popa
dec
test
dec
aam
in
push
inc
jp
adc
jbe
adc
testb
sub
mov
and
fisubrs
dec
sub
xor
sub
lret
movb
sbb
dec
loopne
ss
dec
sub
cmp
addr16
mov
jl
sbb
xor
jl
xor
pop
je
push
jp
sub
pop
out
fisubl
cmpsl
loop
adc
jbe
push
dec
pushf
ljmp
popf
sbb
cmp
push
arpl
jne
loop
xchg
add
cmpl
jo
in
rolb
inc
daa
je
sbbb
adc
icebp
jno
out
or
or
addr16
sarb
jmp
testl
ljmp
mov
inc
or
sub
and
or
mov
add
mov
hlt
js
and
mov
cmp
into
lret
out
fbstp
sub
iret
jle
cmp
jp
xor
rclb
data16
pop
sbb
rclb
pop
inc
rcrb
mov
mov
mov
and
rcrl
sbb
mov
data16
jecxz
les
or
or
popl
inc
mov
in
push
popl
stos
mov
mov
jbe
and
push
std
add
mov
and
pop
rclb
fsubrl
cmp
aaa
jo
sub
mov
scas
rol
jnp
aaa
pop
xlat
add
jb
xorb
and
pop
push
test
cmp
sbb
movsb
xchg
jb
push
mov
repnz
sub
mov
shlb
loope
add
and
leave
jns
mov
lock
cwtl
and
adc
cmpxchg
cmp
push
mov
cltd
xor
mov
mov
or
and
popf
inc
xchg
add
nop
jb
aam
pop
cmp
pop
andl
incl
into
lret
jne
inc
stos
ja
repnz
popa
cmpsl
shll
cmpl
cli
or
rorb
fs
jmp
lds
sub
push
fs
mov
push
ret
sbbb
mov
add
sti
mov
movsb
cmp
in
sub
jne
jg,pn
xchg
sub
mov
aaa
mov
out
scas
mov
call
jbe
and
mov
pop
rol
fs
insl
in
xchg
cmp
orb
push
int3
cmp
mov
mov
push
add
outsb
cwtl
fwait
and
rcrl
testb
jae
adc
mov
pop
in
adc
or
cmp
lahf
adc
pop
sbb
popl
pop
mov
lock
loopne
outsl
loope
out
mov
and
cwtl
dec
stos
mov
sahf
dec
loopne
sbb
out
xchg
test
stc
pop
in
push
cmp
lock
pop
inc
mov
std
aad
cmp
push
jmp
fldl
sbb
inc
int
dec
adc
in
pop
in
xchg
jno
dec
fidivs
fsubrp
push
insb
int3
xor
pop
add
inc
lods
mov
lods
pop
or
xor
or
and
jne
popa
sbb
inc
inc
xor
clc
lock
aam
add
and
mov
push
in
loop
mov
inc
push
rorl
insl
sub
xor
cld
rol
or
or
push
add
sbb
bound
push
mov
pop
mov
nop
pop
push
adc
push
call
insb
ret
push
jge
imul
test
push
sbb
inc
dec
and
cmpsb
test
rolb
shll
mov
push
stc
or
clc
push
sbb
test
cmc
outsl
fcomi
and
dec
jg
pop
mov
sbb
cltd
lods
mov
dec
addb
mov
dec
sub
mov
test
test
rorb
jg
sbb
icebp
imulb
mov
ss
test
inc
or
sbb
pusha
bound
sbb
sub
fimuls
popl
or
enter
aas
nop
xchg
mov
dec
lds
sub
out
or
and
jne
call
cmc
sub
push
rolb
pop
and
mov
or
push
and
xchg
mov
or
adc
insl
mov
sbb
adc
and
fstpt
mov
adc
ror
ret
inc
out
call
xor
test
jecxz
bound
rclb
ds
jp
das
js
xor
movsb
adc
andb
pop
lret
mov
aas
adcb
ret
inc
fcoml
ss
inc
mov
mov
or
aam
or
push
scas
mov
pop
lock
mov
xor
leave
jecxz
aas
inc
sti
imull
mov
cmp
pushf
xlat
jp
jecxz
xlat
sbb
cmp
push
js
sbb
sub
push
sbb
jne
inc
and
hlt
std
js
mov
sub
mov
jnp
es
and
pushf
mov
dec
inc
fucomip
clc
clc
sbb
out
movsb
call
xor
sbb
js
add
sarb
loop
push
xchg
add
inc
sub
cmp
add
or
pop
lahf
ljmp
out
notb
sti
rcll
insl
push
adc
sbb
test
adc
fucomip
xor
call
je
movsb
xchg
js
scas
sub
adc
adc
mov
pop
xor
push
mov
clc
test
add
cmp
mov
in
imul
and
or
push
and
in
hlt
out
push
dec
insl
jmp
adc
sbb
jle
pop
inc
outsl
jecxz
add
les
dec
jle
out
incl
pop
int
inc
daa
add
jo
jmp
into
inc
add
shlb
pop
xchg
rorb
paddb
fbld
lea
mov
mov
sbb
nop
cmp
pushf
xor
sbb
in
out
sub
push
push
xor
add
xchg
loope
and
dec
mov
inc
or
jl
mov
lods
xchg
notb
fimull
mov
jo
dec
icebp
and
cli
add
test
sub
out
pusha
pop
mov
add
mov
adc
repz
dec
out
test
jmp
outsb
sub
addb
sbb
movsb
clc
or
push
cmpb
push
mov
jo
icebp
cwtl
adc
loop
and
jp
lea
aaa
push
pop
xorl
push
sbb
or
mov
and
mov
test
xchg
add
popa
cmp
pop
pop
js
enter
mov
sarl
add
add
adc
std
bound
xchg
subb
mov
mov
loop
add
js
orps
js
pop
mov
sbb
insl
inc
fisttpll
sub
arpl
movsb
xor
xchg
cs
movsl
jge
stos
xor
pop
or
or
dec
xchg
cmp
push
test
dec
sbb
sbb
pop
insl
xchg
pop
jp
or
push
pop
mov
mov
ret
aam
movsl
hlt
lock
xchg
dec
inc
pushf
mov
pop
aaa
push
pushf
push
or
jle
dec
mov
vpmacssdd
popa
in
fisubs
in
mov
test
stos
test
inc
roll
sbb
xchg
jl
pusha
call
or
dec
pusha
pop
cmc
lods
push
call
and
inc
mov
cli
add
push
fs
call
fcmovbe
pop
push
fs
pop
mov
cs
xchg
les
dec
mov
mov
stos
in
pop
mov
dec
inc
jbe
leave
dec
add
addr16
pop
add
pushf
and
clc
lods
jmp
cld
lcall
jle
sbb
fucomip
sub
pushf
and
cld
xchg
jl
loopne
mov
divb
imul
push
out
pop
lret
xor
hlt
cmp
mov
mov
or
enter
cmpsb
sub
clc
adc
xchg
pusha
sub
sub
and
fcomps
push
add
fmuls
je
cmp
icebp
sbb
pop
sti
mov
lds
cli
into
jno
popf
repnz
loope
adc
lods
push
inc
jno,pt
cwtl
push
pop
mov
cmpsb
cltd
jg
jecxz
add
in
push
mov
cli
pop
addl
stos
jg
sbb
jo
mov
and
lods
mov
pop
pushf
adc
sub
push
mov
mov
xor
mov
and
inc
sti
jg
push
cwtl
lret
int3
hlt
pop
inc
outsb
fwait
hlt
call
push
outsb
and
jp
inc
nop
scas
pop
push
cmc
adc
cmp
mov
clc
push
in
or
add
mov
cmc
int3
sbb
inc
and
mov
in
xor
sub
lds
popa
and
int3
es
das
icebp
sub
gs
push
pop
and
sbb
add
sub
cmp
add
jl
push
dec
std
pop
pop
fcomip
push
shlb
in
mov
mov
fcoms
test
mov
jmp
divb
xchg
push
cmp
mov
and
test
jg
dec
dec
jo
pop
imul
cmp
movl
std
and
sbb
imul
out
pop
dec
cld
mov
pushf
mov
push
rcll
loope
mov
mov
cld
sahf
cmp
dec
mov
pusha
mov
push
jo
nop
lea
jl
sbbb
lahf
fidivs
clc
insb
jno
pusha
jp
inc
lock
xor
popf
cmpsl
push
mov
xchg
cmp
inc
sbb
les
sarb
jle
loopne
pop
inc
mov
out
jmp
stos
and
push
inc
lods
xlat
add
adc
flds
dec
inc
xor
xchg
rcrb
xchg
sub
xorb
and
icebp
out
fwait
xor
pop
mov
or
push
mov
jns
fsubs
cmp
pusha
rcll
xchg
hlt
jmp
sub
jbe
or
and
pop
shlb
rclb
mov
test
xchg
ja
popa
inc
xchg
push
add
repnz
js
std
and
push
xchg
pop
dec
xor
insl
cwtl
hlt
add
into
inc
or
mull
popa
sub
flds
sar
jns
cmp
jmp
jae
push
inc
mov
mov
dec
jbe
ljmp
cs
imul
insb
mov
test
out
and
icebp
inc
inc
shll
outsb
xor
test
dec
pop
clc
jmp
inc
and
jns
xorl
jmp
sbb
add
test
cltd
fcoml
sub
addr16
imull
lods
loopne
fidivrs
enter
dec
movb
mov
sub
loop
and
xor
add
add
stos
push
push
xchg
fildl
cmc
repnz
je
pop
xchg
dec
sbb
rolb
movsl
outsb
clc
inc
pop
or
js
mov
test
int
out
push
in
scas
mov
mov
xchg
push
sub
sbb
ret
jg
mov
mov
pop
pop
ret
push
and
fwait
rorb
adc
sahf
or
mov
mov
cmpsl
gs
push
mov
cli
call
and
and
sti
ss
insb
or
sbb
subl
push
or
shrb
cmp
adc
clc
lods
aad
loop
jae
std
pop
adc
xchg
repz
cmp
sbb
hlt
pshufw
imul
sarb
xor
lea
sbb
repnz
add
xchg
add
aam
push
lock
lcall
mov
pop
and
test
pop
lfs
inc
sahf
pop
pushf
enter
mov
xor
andl
idivb
mov
test
xchg
stos
adc
loop
daa
or
mov
scas
ret
dec
jecxz
push
mov
mov
fmull
pop
gs
dec
xlat
inc
mov
xor
or
rcll
mov
mov
sub
dec
or
xlat
jle
sbb
ss
mov
sub
andl
ret
sbb
sub
jbe
lock
cmpsl
xor
addr16
or
mov
std
adc
pushw
lahf
cmp
jmp
pop
std
mov
xor
imul
mov
push
loop
lea
aam
xorb
cld
xchg
mov
and
sub
push
dec
xor
mov
in
sbb
inc
dec
mov
clc
pop
mov
lods
mov
mov
jle
and
adc
or
lahf
out
ss
movsl
and
pop
cmp
sti
daa
push
cmp
es
mov
or
sbb
or
or
cwtl
stos
push
xchg
adc
stc
pop
lods
test
je,pt
lcall
scas
adc
movsb
inc
fcomps
sub
bound
sub
mov
fcmove
mov
sbbl
push
jle
or
mov
mov
dec
ljmp
xlat
test
loopne
jg
popf
sbb
dec
jo
and
hlt
and
bound
xabort
pop
add
mov
inc
mov
mov
cli
adc
push
xor
sbb
and
decb
dec
jg
int3
push
scas
mov
mov
jb
je
ljmp
shl
mov
call
js
aad
add
adc
inc
dec
imull
ret
mov
movsl
nop
jo
and
inc
call
or
ljmp
das
bnd
push
or
xchg
pop
xor
das
cmp
push
sub
add
hlt
lcall
xor
xchg
mov
pop
insb
mov
dec
sub
xor
jmp
dec
inc
or
push
lea
inc
pusha
imul
cmpsb
pop
sbb
fs
and
jecxz
out
int
movl
mov
and
rorb
sbb
push
repnz
out
push
dec
addb
push
jb
test
adc
dec
mov
mov
pop
imul
and
mov
jge
xchg
fcmovb
mov
icebp
shll
pushf
or
add
xor
scas
sbb
xchg
inc
cmpsl
jmp
rcr
cmpb
pop
mov
xchg
push
mov
xor
ror
clc
add
jmp
lcall
dec
cmp
aaa
nop
js
js
jg
push
aas
cs
aam
cmp
mov
in
lea
pop
or
mov
sbb
mov
negl
sbb
aam
push
mov
mov
jnp
sub
push
movsl
sub
or
call
jne
sbb
push
cs
adc
push
negl
enter
and
testb
adc
stos
add
xchg
ljmp
popa
clc
cmp
ljmp
fdivs
cmp
pop
mov
ret
sub
push
push
or
cmc
mov
mov
nop
push
mov
adc
mov
cltd
or
sub
add
push
dec
or
or
pop
cmpb
inc
cmpsb
lahf
shll
test
aad
or
xchg
scas
mov
stos
lods
push
mov
pop
ret
fwait
cltd
pop
rolb
xlat
sub
sub
dec
or
cmp
mov
test
jge
in
enter
mov
jle
pop
push
jle
mov
mov
addb
popa
aam
and
fistl
pop
jl
popa
scas
xchg
cs
cmp
push
or
cmc
push
js
test
dec
or
scas
push
mov
push
pop
cltd
cwtl
lret
mov
push
pop
lds
mov
int
sbb
fstl
pushf
test
or
and
cmp
mov
dec
add
test
jns
and
mov
and
movsl
inc
cltd
popa
cmpsb
push
in
jno
arpl
repnz
pop
and
adc
aas
rcll
or
jne
jo
outsl
ljmp
xchg
push
or
cs
lret
push
das
xor
mov
pushl
dec
mov
ret
and
outsb
ficoms
push
rclb
loopne
jp
daa
mov
cli
lea
jbe
sbb
mov
jecxz
pusha
xor
jno
das
push
pop
in
lret
push
shlb
rorb
push
int
jbe
xchg
push
cmp
adc
mov
add
repz
pop
stc
pcmpeqw
xchg
addr16
cmp
add
int
mov
jp
adc
test
mov
or
fmuls
fwait
loop
pop
sub
adc
or
mov
cmc
mov
mov
push
sub
lea
ljmp
push
jo
mov
sahf
frndint
loopne
sub
lods
inc
xor
fisttpl
pop
mov
inc
decl
pop
mov
dec
pop
shl
inc
adc
lret
or
sub
mov
sarb
dec
test
inc
insl
movups
push
mov
insl
loopne
pop
loopne
mov
pop
fdivl
mov
push
push
les
xchg
push
xor
sub
out
call
stos
pushf
xlat
mov
jge
lcall
aad
bound
sub
and
cmp
scas
mov
mov
imull
movsl
dec
mov
xor
daa
mov
xlat
hlt
inc
cmp
mov
xor
ljmp
or
es
pop
adc
movsl
jecxz
jp
lock
jg
push
mov
sbbb
pop
movsb
mov
ja
aam
scas
dec
xchg
fbstp
add
cmp
mov
into
mov
add
or
pop
mov
shrb
jne
mov
clc
sub
adc
mov
stos
or
pop
push
add
add
iret
data16
scas
pop
cmpb
lahf
aam
outsl
in
je
inc
insb
in
mov
lahf
xor
cmp
dec
sahf
repnz
add
stos
enter
daa
ds
out
or
inc
sub
and
inc
cmp
xor
aas
cmp
push
mov
test
ja
and
xchg
and
cld
cmp
aad
cs
sbb
js
jg
pop
loop
imul
inc
and
rcl
lcall
mov
pusha
jae
lahf
jns
push
jnp
orl
push
loopne
ret
mov
push
dec
popf
or
repz
ja
shlb
std
push
clc
sbb
push
fsubrs
pusha
or
mov
xor
pop
mov
call
sbb
mov
orb
jecxz
add
movsb
ljmp
xchg
pop
add
dec
xchg
ljmp
test
push
mov
add
inc
mov
adc
loope
add
push
into
inc
sub
mov
xor
aad
push
mov
xchg
inc
xchg
loop,pn
cli
push
fldl
pop
or
pop
aam
push
push
imul
push
xchg
xchg
inc
rcll
pop
xor
add
addr16
pusha
test
xchg
cmpsb
les
loopne
aaa
or
ja
xor
mov
popa
sub
mov
push
sbb
outsb
inc
jge
cmp
pusha
imul
dec
fs
lahf
nop
cs
pop
push
cmc
pop
push
es
mov
or
cmp
cmp
mov
jmp
inc
lcall
push
fwait
movsb
pop
lods
fistpl
lock
mov
push
imulb
shlb
mov
add
mov
les
ret
sbb
cmp
xchg
sbb
cld
xchg
dec
pop
mov
or
popf
push
xor
jbe
pop
js
xor
jns
mov
jl
insl
sti
mov
sub
fs
cwtl
cmp
mov
adc
pop
and
and
je
loope
sbb
addr16
into
lods
pop
ljmp
mov
cmp
sbb
or
lret
test
pop
cmpb
stos
push
lcall
dec
lods
testl
mov
inc
in
and
inc
push
ja
mov
inc
inc
ljmp
mov
or
push
dec
lds
mov
jb
jo
sbb
push
add
imul
std
sub
scas
aas
popf
add
mov
adc
xor
clc
fwait
clc
mov
sbb
nop
and
out
fcmove
mov
int
add
test
hlt
add
shll
jae
dec
xchg
shr
stc
jle
pop
sub
mov
das
pusha
rcrl
and
in
and
push
adc
fdiv
dec
nop
push
fnstcw
aas
cmp
iret
pop
fldl
or
push
xchg
mov
xor
fisttps
or
dec
cld
sbb
in
ret
sbb
mov
shrb
jb
in
mov
mov
lods
aas
sar
test
add
mov
or
pop
ret
mov
lcall
push
push
dec
sbb
push
das
cmp
popf
lret
daa
or
enter
mov
sysret
test
sub
lahf
dec
jb
push
in
popf
shl
mov
or
pop
js
not
pop
pop
cmovo
pop
clc
shll
mov
adc
lahf
push
cmp
add
test
scas
pop
push
jne
cli
inc
cmp
or
jns
xor
jmp
xor
jb
push
icebp
push
data16
std
pop
dec
or
jae
repz
xchg
sbb
adc
jmp
pushf
or
cmovo
pop
mov
aad
rorb
mov
loope
into
and
lods
scas
sahf
dec
ds
xor
push
push
adc
rcll
loopne
mov
call
enter
jne
rcl
les
dec
ficompl
dec
mov
movsb
inc
aaa
adc
mov
lret
lds
dec
mov
fs
mov
jmp
imul
roll
adcb
clc
imul
and
adc
and
in
push
aad
pop
test
pop
sub
cmpb
popa
sbbb
shlb
in
push
add
push
sbb
or
je
pushf
shll
call
lds
adc
loopew
mov
pop
bound
daa
pushf
jnp
hlt
adc
adc
out
ret
cmpsb
lea
arpl
xorl
fcmovne
pop
sub
mov
mov
jp
pusha
jno
xchg
xchg
lods
pushf
hlt
dec
icebp
push
inc
lea
xchg
inc
in
add
add
mov
mov
je
out
fisubl
xlat
in
lock
std
xor
inc
cmc
daa
xchg
or
cmp
xchg
unpckhps
aam
mov
xchg
and
loop
add
stos
xor
sub
nop
adc
adc
in
and
xchg
xchg
ret
in
pushf
mov
repnz
jo
inc
jne
mov
cmpsl
sbb
ficoml
sbb
pop
xchg
ret
dec
cmp
sahf
jns
xchg
ds
pop
mov
push
dec
in
cmp
mov
aad
mov
push
and
ficoml
inc
dec
daa
insl
rorl
sahf
mov
adc
lods
cmc
addl
mov
shll
sub
push
clc
jne
cs
je
jl
mov
mov
bound
xchg
cmpsl
aad
add
cltd
nop
idivb
fdivl
pop
sbb
adc
popa
std
ss
cmp
imul
xor
mov
sub
jle
xchg
pop
or
ret
loop
test
xchg
mov
aas
push
pop
inc
loope
cmp
ds
aad
daa
insl
sti
sub
cmp
jge
scas
repz
mov
inc
mov
daa
adc
pop
jbe
ja
push
add
sbb
stos
shr
lock
inc
data16
incl
pushf
sub
inc
pop
cli
scas
aas
add
fsubr
pop
xchg
jo
movsb
mov
dec
pop
mov
add
jecxz
dec
lods
jecxz
into
add
inc
push
and
enter
fucomp
gs
data16
push
pop
jg
inc
repnz
push
divb
movsl
pop
jmp
pushf
int3
es
and
inc
cmp
and
adc
jl
rorl
or
scas
mov
mov
mov
jns
xchg
push
mov
popf
jecxz
jbe
pop
inc
dec
ljmp
cmp
push
inc
cs
lret
mov
jg
lds
stc
add
mov
pop
outsb
ret
push
ljmp
daa
lock
out
pop
push
loop
enter
mov
lcall
fcmove
es
mov
cmp
xlat
add
jns
sub
insb
cmc
cmp
jp
jmp
dec
and
out
aam
lods
outsb
shrl
js
insl
jae
push
jp
push
sub
and
inc
data16
adcl
xchg
cs
addr16
cltd
adc
xor
js
push
adc
cwtl
mov
pop
sbb
fdivs
mov
movsb
mov
bound
jecxz
shrb
sbbb
mov
or
jo
in
gs
xchg
pop
inc
jnp
or
mov
aaa
mov
lds
incb
mov
aam
roll
mov
push
dec
cmpsb
rclb
aad
sahf
jno
sub
aam
or
icebp
pusha
cmp
mov
bound
out
clc
push
xchg
mov
add
push
add
push
in
loopne
arpl
push
push
or
mov
or
cltd
out
push
std
std
movsb
shld
ss
pushaw
psrad
or
cli
add
and
lret
sarb
add
mov
mov
sahf
les
int
decl
fistl
ficomps
int3
mov
adc
sub
mov
iret
mov
mov
imul
inc
inc
jno
jbe
xor
dec
dec
lret
aam
arpl
adc
sti
or
pop
rcl
ret
push
popf
add
sar
push
sbb
sub
pop
cmp
or
adc
arpl
subl
or
inc
and
adc
inc
inc
ret
mov
adc
enter
inc
lods
mov
pushf
mov
divl
mov
or
in
ja
decb
mov
sub
lods
out
mov
addb
add
icebp
and
push
fdivrs
push
adc
xor
pop
fsubs
mov
movl
hlt
add
xor
lea
pcmpeqb
or
jecxz
ljmp
push
es
popf
pusha
mov
push
in
sub
sbb
mov
pop
shlb
loope
lods
adc
sarb
sub
xor
aam
dec
loope
fidivrs
xchg
fiaddl
lock
add
add
js
cmpsb
adc
out
inc
or
sub
adc
push
loope
pop
pop
adc
mov
xchg
into
imul
xor
jp
push
add
pushf
dec
shlb
xor
nop
push
and
dec
loop
scas
mov
push
das
ss
push
xor
mov
scas
push
das
in
jns
xchg
aad
stos
fdiv
mov
scas
inc
dec
jo
out
stos
inc
sub
pop
gs
adc
push
or
aam
xchg
and
scas
mov
mov
add
jl
ja
hlt
push
add
es
mov
arpl
xor
pop
adc
pop
int
or
pop
dec
lds
sbb
ficompl
dec
loopne
xchg
mov
add
ret
pop
mov
inc
jl
loopne
popa
push
popf
pop
mov
incb
push
clc
pop
dec
lea
shl
add
out
fildl
xor
mov
dec
mov
and
cmp
movsl
cmpsb
test
cmp
sbb
movsl
pop
or
in
fsts
xlat
push
mov
subb
mov
and
orl
das
mov
stc
add
adc
lea
add
je
push
addr16
loop
lcall
cwtl
sti
inc
and
lcall
mov
cmpsl
fs
xor
stos
mov
insl
call
cmp
mov
call
lret
pop
ss
in
ljmp
fsubrs
sub
push
cmp
jnp
addr16
pop
cmp
int3
loope
jl
push
insl
mov
cwtl
or
ret
aas
ret
neg
jno
push
sahf
xchg
sbb
stos
push
xor
je
insb
mov
jns
jp
sub
pushf
inc
push
ret
lds
dec
imul
loopne
mov
ljmp
hlt
adc
or
popa
daa
fdivp
div
cmpsl
inc
lea
xor
dec
push
orl
or
loopne
fcoms
data16
sbb
push
fiadds
dec
push
je
out
mov
push
inc
sbb
cmp
push
lods
outsl
adc
push
lahf
dec
mov
test
mov
add
inc
adc
mov
sub
xchg
pop
sarb
mov
inc
jmp
pop
call
ds
out
test
cmp
inc
dec
loopne
cld
pop
or
stos
or
dec
cmp
cmpsb
not
jo
adc
pusha
dec
mov
xorb
fwait
or
clc
subb
dec
stos
andl
sbb
or
insl
fwait
mov
test
xchg
or
cmp
fwait
cs
push
scas
test
insb
xchg
push
jns
or
xchg
jo
loopne
pop
inc
pop
adc
push
mov
out
push
cmp
push
mov
mov
aam
pop
negb
jl
mov
xorb
cmp
mov
imul
cmpsl
cmp
aam
cltd
lock
and
sbb
andl
lods
mov
mov
lds
mov
addb
das
sbb
xchg
inc
shll
and
mov
andl
dec
shl
mov
or
fs
or
fcmovnb
adc
jbe
inc
ret
aad
xor
test
fbld
jle
js
shrl
jnp
into
mov
adc
lret
mov
pop
or
mov
icebp
loope
sbb
jmp
pushf
cmp
and
inc
clc
mov
pop
or
dec
enter
add
sub
movsb
adc
sahf
mov
cmp
sbbb
sar
mov
je
sbb
je
daa
decb
dec
jle
lret
lods
jecxz
xchg
cmp
stos
loopne
es
ret
arpl
mov
cmp
clc
cwtl
dec
sbb
push
adc
lret
or
adc
sub
jmp
adc
jmp
jb
adc
jae
imul
faddl
loop
scas
sub
add
je
int3
roll
ss
mov
std
lahf
cld
fdivrs
adc
test
inc
lods
pop
mov
js
inc
loop
jecxz
push
xchg
xor
das
xor
push
pop
or
mov
or
xchg
mov
inc
and
lods
sbb
xchg
lcall
dec
mov
inc
stos
pop
ror
push
cmc
inc
inc
xchg
stos
arpl
leave
nop
clc
fstl
adc
test
in
imul
sub
pop
arpl
les
dec
push
dec
cli
push
leave
test
mov
push
and
nop
push
fcompl
xor
dec
add
js
xchg
mov
push
add
mov
scas
pop
mov
loopne
addb
and
xor
sbb
cmc
test
cmp
cmp
clc
adc
test
and
mov
sub
xchg
sub
dec
int3
push
leave
loope
fyl2x
aaa
sbb
xor
mov
stos
cld
adcl
push
or
sub
push
into
mov
adc
push
in
pop
xchg
inc
dec
add
adcl
das
call
and
cmpsl
incb
loopne
pop
pop
sahf
sarb
sub
out
call
sub
cs
mov
push
rcrb
lcall
jbe
loope
rep
jp
sub
in
mov
movsl
orl
notb
sub
jg
mov
inc
sbb
mov
pop
sub
ret
loopne
push
xor
sbb
sbb
adc
sub
js
mov
cmp
out
inc
mov
add
js
jecxz
repnz
jbe
ds
sbb
mov
cli
repz
dec
adc
add
cmp
aas
mov
aas
stc
push
cld
adc
std
jne
jge
pop
je
aam
mov
vandnpd
cmp
pop
sub
sahf
mov
jmp
jae
psubsb
movsb
scas
push
shr
sub
int
adc
dec
in
cmpsl
and
decb
pushf
inc
jb
fistps
test
in
adc
test
sahf
cmp
add
ds
cmp
int3
fdivrs
pop
call
punpcklbw
jae
pusha
or
negb
shrl
lock
jp
xchg
push
sbb
sbb
pop
mov
fldenv
jb
xor
outsl
js
xchg
push
cmp
daa
inc
les
sub
sbb
xchg
jl
mov
or
push
inc
cs
mov
and
rorl
pop
sub
xor
cmp
mov
lock
dec
sbb
lret
movsb
fimuls
jge
sbb
loopne
sub
loope
sub
inc
fwait
or
cmpsb
mov
mov
adc
dec
jle
clc
add
loopne
sub
clc
mov
fistpl
adc
out
imulb
push
popl
loop
mov
cmpsb
jno
mov
mov
and
add
mov
std
rolb
dec
data16
andb
xchg
push
push
add
pop
sub
inc
mov
cmpsb
mov
mull
ja
mov
test
mov
stos
or
jle
into
dec
or
fldl
inc
sub
cmpsb
loop
cvttps2pi
and
clc
icebp
mov
lods
das
test
push
mov
mov
mov
jno
cli
xor
push
adc
and
lock
xlat
dec
jmp
adc
les
das
sbb
push
mov
sbb
mov
test
movsb
cmp
subb
cmp
mov
pop
cmp
mov
or
shrb
jne
popl
xor
loop
out
lret
hlt
aam
ljmp
push
loopne
and
pop
add
mov
lcall
shll
in
cmp
jle
rcll
lret
insl
dec
or
xchg
jl
pop
pop
sahf
add
cmpsl
lock
mov
add
ret
test
loop
dec
dec
movhps
shll
test
cltd
jmp
repz
shlb
movsb
enter
out
test
xchg
stc
dec
sbb
cli
call
push
xor
push
pop
cmp
aaa
pop
stos
adc
push
push
mov
outsl
shl
movsb
mov
pushw
push
fucomip
loopne
ljmp
mov
arpl
adc
cli
mov
push
xor
push
mov
jle
jecxz
scas
loope
leave
out
dec
enter
jb
sbb
mov
fildll
das
adc
pop
mov
mov
loop,pt
sbb
stc
jbe
push
or
ret
js
iret
add
xchg
decb
icebp
push
test
jb
push
dec
inc
lea
mov
dec
lock
stc
hlt
mov
adc
nop
loop
clc
mov
mov
enter
sbb
scas
leave
xor
ficompl
int3
inc
test
dec
xchg
cwtl
inc
pusha
rolb
adc
jmp
clc
fdivs
test
lcall
push
cli
dec
cld
loopne
jecxz
les
cltd
xchg
jnp
xor
outsl
adc
mov
adc
sub
popa
xor
pop
mov
bound
out
das
pusha
jbe
cmp
adc
mov
xchg
mov
sub
lods
xor
dec
jae
mov
add
cmp
decb
push
sub
nop
into
ss
inc
inc
xchg
fnstsw
mov
stos
adc
in
jnp
cmp
ja
shrl
push
push
sub
cmc
loop
xchg
mov
adc
clc
scas
or
lea
call
aaa
jle
outsl
jg
out
andb
imul
pop
cwtl
sbb
outsb
daa
xchg
loop
fs
mov
sbb
push
push
push
pop
jl
inc
pushf
ficomps
dec
cmc
adc
jo
sub
sub
js
xchg
jp
imul
push
and
mov
aas
sub
adc
mov
lods
pusha
pushf
push
push
test
jge
rclb
aas
xor
inc
addr16
cmp
add
mov
hlt
add
pop
mov
jb
clc
loopne
fs
push
outsb
leave
shll
push
adc
rolb
sub
cld
sbb
mov
fs
adcb
dec
xlat
adc
or
inc
inc
cld
xlat
push
pushf
ret
mov
scas
clc
in
or
repz
orl
cmp
orl
mov
or
adcb
sub
xchg
icebp
xor
inc
dec
dec
sarl
jmp
push
or
jae
fadd
and
pop
fidivrl
and
fisubrl
cli
neg
popa
and
xor
das
or
and
push
fsubrl
xchg
inc
repnz
push
cwtl
jb
pop
xor
rcr
jno
loopne
add
int3
loopne
mov
outsl
pop
out
fildll
jle
ds
cltd
stc
lcall
add
pop
stos
mov
fisubrs
sbb
sbb
test
shrb
mov
cmpsw
cs
loop
mov
aad
out
aaa
sti
and
aas
mov
sarb
lods
push
push
adc
pushf
std
adc
push
ds
pop
insl
stos
mov
add
dec
cwtl
lcall
outsb
dec
subl
stos
xchg
mov
add
pop
idivl
cs
sbb
mov
inc
push
insb
xchg
je
push
je
xor
rorb
mov
ror
mov
adcl
jae
lcall
pop
push
mov
int
mov
add
inc
mov
je
push
nop
sub
rorb
imul
shll
cmp
sahf
pop
out
cmp
sarb
jecxz
or
push
mov
aas
adc
cli
mov
xor
push
shlb
push
lock
mov
add
add
ficoml
imul
fisubrs
sub
rorb
sbb
fs
xchg
push
and
jmp
aas
icebp
lock
fsubl
xor
enter
mov
adc
inc
jne
mov
mov
lock
scas
jne
and
sarl
gs
xchg
daa
cmp
or
add
aas
add
xchg
sbb
and
mov
add
mov
cmp
nop
daa
sub
aad
adc
ja
sbb
nop
cmp
or
mov
sbb
lret
into
cltd
lahf
data16
dec
pop
aaa
or
fcomps
mov
popa
lods
mov
or
test
in
jb
mov
cmc
dec
rorl
sub
movsb
fucomi
jg
add
stc
sbb
loope
jb
mov
imul
jo
into
push
or
push
in
bound
lds
nop
adc
out
loope
stc
adc
je
ret
add
ds
cli
sbb
or
sbb
test
jmp
mov
push
mov
inc
js
and
dec
mov
dec
xchg
or
loopne
cmp
shll
sti
jo
movb
aas
notl
or
xor
cmp
add
mov
adc
mov
stos
test
lcall
cli
ror
loope
add
shlb
aaa
mov
or
sub
std
mov
adc
or
pusha
jnp
xor
mov
orb
push
shll
adc
xchg
sarb
das
push
push
xor
clc
sbb
sbb
push
xchg
out
ret
push
addr16
and
dec
mov
pusha
pop
adc
add
pop
clc
clc
aam
fs
xchg
xchg
mov
into
loopne
lcall
mov
stos
outsl
add
sub
mov
in
xor
cli
or
cmp
imul
xchg
mov
or
adc
jno
scas
dec
das
mov
pop
add
and
sarl
cld
xchg
or
flds
loopne
inc
xchg
jge
mov
mov
add
sarb
stos
call
or
cli
lods
adc
pusha
rorb
dec
mov
mov
jp
and
mov
jo
fwait
mov
in
jnp
push
xor
and
data16
add
scas
nop
rcl
divl
mov
xor
neg
push
inc
pop
or
dec
cmp
fisttps
mov
clc
jbe
fdiv
icebp
jg
xchg
push
hlt
dec
or
and
xor
aas
pop
pusha
mov
int3
out
jbe
dec
pop
cmpsb
ret
mov
or
push
icebp
pop
fidivs
jmp
repz
push
mov
jne
dec
cmp
cmp
sbb
push
and
and
pop
call
push
or
mov
or
mov
mov
cmp
lahf
idivb
dec
sbb
jno
sub
dec
mov
cmp
dec
adc
mov
ds
aam
add
pushf
es
adc
icebp
nop
adc
ret
add
add
out
nop
and
push
and
ss
bnd
mov
push
xor
lcall
xor
fldt
test
inc
xchg
loop
or
mov
mov
jp
mov
fmul
xor
filds
and
cwtl
insb
or
xchg
outsl
ror
push
xor
or
jp
jno
push
xchg
scas
add
dec
test
icebp
sbbb
fidivrs
aam
push
aam
sbb
sbb
mov
mov
lods
out
add
mov
push
les
sahf
andl
sub
jmp
push
push
xor
movsb
je
ss
lds
and
add
jns
in
cld
add
ret
mov
sti
arpl
add
lods
xlat
mov
clc
scas
loopne
cmpsb
mov
mov
pop
pop
hlt
imul
mov
adc
out
and
je
je
add
xchg
mov
jnp
and
icebp
call
jno
lock
testb
xor
push
pminub
xlat
mov
pop
in
mov
enter
fcompl
sahf
mov
add
and
inc
and
or
les
push
adc
push
mov
xchg
ss
outsb
mov
js
fwait
cmp
xchg
aam
xor
call
sub
sbb
clc
movsb
jno
loopne
in
sub
mov
lret
push
lock
cmp
sbbb
mov
mov
fsub
mov
mov
mov
js
add
dec
mov
ja
sub
call
imulb
jp
xchg
movntq
push
stos
sbb
add
sbb
repnz
lea
out
lods
fbld
loopne
xor
add
cld
mov
sbb
pop
xor
rcrl
rclb
pop
push
loop
scas
and
adc
gs
adc
clc
ret
mov
push
inc
aas
dec
mov
jecxz
into
stos
jne
sub
push
mov
cmp
cmp
or
out
and
aad
adc
mov
lods
out
lea
pop
loop
push
mov
cli
xlat
xchg
ficoml
sahf
push
cld
loopne
cmp
push
pop
hlt
es
xchg
jo
repnz
xor
pop
mov
sub
shll
and
mov
or
sbb
cmp
inc
js
in
adc
or
jae
into
clc
and
xlat
lods
roll
cld
and
cmp
es
sbb
sub
test
js
cltd
sbb
cld
insb
push
mov
pop
pop
push
sbb
sbb
pusha
sbbl
test
pop
loope
ja
push
je
repnz
loopne
push
pushf
cmc
add
mov
shl
cmp
and
fidivs
ss
jb
xorl
adc
xchg
cmp
in
icebp
sub
xchg
fs
push
test
addb
loopew
loope
dec
ss
cmpsb
mov
mov
in
push
xchg
sahf
pusha
je
lret
or
lods
fistl
cs
adc
mov
inc
rep
mov
ds
aam
fbstp
push
jl
pushf
inc
mov
mov
adc
std
sub
inc
or
xor
mov
sub
jne
roll
push
mov
leave
fsts
push
test
je
pusha
dec
leave
test
sub
jg
fwait
lods
loope
sub
mov
mov
out
cld
jb
mov
pop
inc
cmp
mov
xor
addb
in
pop
ds
je
scas
stos
xchg
repz
mov
jmp
jl
inc
mov
mov
rclb
push
cs
cmc
pushf
push
ret
mov
sub
jl
dec
mov
daa
test
push
push
int3
sub
mov
mov
mov
hlt
incl
cmp
test
push
push
popa
cld
fimull
dec
jge
cmp
jl
mov
or
mov
fimuls
xchg
lock
lds
xor
pop
and
and
aas
test
aam
sbb
jb
icebp
mov
pop
adc
mov
sti
movsb
inc
sbb
outsl
sarb
mov
adc
repnz
inc
jmp
stos
fs
push
mov
insl
pusha
sbb
mov
cmpsb
inc
lods
fsubrs
and
ds
stc
adc
fimull
adc
cli
das
push
mov
shl
mov
in
cli
inc
sub
add
push
in
dec
bnd
fwait
push
sar
mov
ss
hlt
std
test
mov
pop
mov
cwtl
jecxz
xchg
mov
imul
clc
cld
jne
inc
arpl
test
push
sub
jge
fsubrl
mov
std
stos
stc
aaa
or
mov
ds
fnstenv
sbb
cmp
bound
fsubp
bound
test
ja
or
jnp
aas
fiadds
pop
inc
popa
int3
jo
mov
movsb
rclb
aas
fdivs
push
dec
pop
icebp
in
mov
mov
rcrb
out
cmpsb
inc
dec
adc
inc
jns
rorl
push
daa
jge
jo
or
or
sahf
mov
movsl
lock
int3
pop
xchg
rorl
inc
test
and
int3
mov
enter
ss
imul
insl
mov
inc
jl
aad
nop
xor
xchg
lock
ljmp
inc
sbb
pop
int
push
adc
mov
add
loope
or
stos
add
fidivrs
mov
and
icebp
loop,pn
test
ds
es
lcall
popl
jge
sub
loopne
imul
or
sbbb
dec
clc
xlat
xchg
jp
loop
sub
adc
add
rorl
mov
xchg
outsb
jl
xchg
mov
inc
out
out
push
addb
bnd
outsb
add
iret
cmp
xor
mov
sub
hlt
insl
call
jg
shlb
clc
dec
jo
stos
dec
pmulhuw
test
dec
xor
mov
add
imul
sbb
bound
add
sti
and
je
mov
orl
cmpsl
adc
dec
mov
call
mov
orb
inc
lock
push
lcall
addl
fstl
sbb
and
pop
aas
stos
lret
pop
jbe
mov
stos
adc
cli
push
shll
or
inc
js
dec
arpl
or
xchg
xchg
sbb
rorb
pop
xchg
sub
cs
addb
push
cmpsb
sub
sbb
test
jg
in
push
daa
dec
je
aam
cli
push
cmpb
adc
and
xor
fs
jo
xchg
popa
jge
cmp
mov
hlt
fldenv
mov
aas
push
fisubrs
xchg
stos
fs
mov
shrb
inc
imul
or
rorb
inc
gs
jl
negb
mov
xchg
sub
fimuls
jno
stos
jge
in
or
sbb
jmp
push
lcall
inc
push
add
jg
daa
push
scas
adc
shll
inc
xor
push
stos
inc
dec
sti
stos
mov
int
jl
sahf
outsb
ret
xchg
movsl
xchg
pop
sahf
add
mov
bound
cmpsl
adcb
adc
push
push
nop
dec
fcomp
mov
test
adc
lcall
loopne
mov
cmp
mov
lock
sldt
stos
push
push
adc
aam
adc
mov
inc
in
sub
inc
xor
cmp
xlat
dec
mov
pop
sbb
mov
sub
ficoms
jl
testl
and
leave
je
jno
fstps
push
pop
notb
add
xchg
icebp
mov
stos
mov
and
add
fimull
sub
into
push
scas
mov
test
out
push
rcrb
add
push
cmp
cmpsl
ds
ret
push
inc
sarb
clc
jmp
cli
mov
adc
jecxz
add
dec
fs
and
cld
imul
jle
in
outsl
jno
pusha
sbbb
loopne
and
mov
lods
xor
icebp
xor
lods
pop
test
mov
loopne
sbb
aaa
hlt
jne
sub
test
cld
sub
fisttps
je
jmp
inc
mov
xor
jmp
mov
loopne
xor
ja
movsb
add
xor
and
push
or
cwtl
or
pop
jne
test
popa
xchg
mov
add
rolb
imul
aam
notl
push
jle
test
orb
mov
jle,pt
cld
cmpsb
aaa
xor
rorb
add
shll
pop
add
call
mov
mov
sbb
clc
enter
scas
sub
fisttps
jl
sbb
xchg
mov
testb
not
outsl
push
movsb
push
cmp
or
scas
je
enter
shrb
cli
and
addr16
rolb
mov
jecxz
xor
daa
mov
loope
aad
lods
aam
pusha
cmp
rolb
or
push
dec
add
jo
jg
inc
lods
rolb
cmp
popa
jne
xchg
xchg
sbb
sbb
or
sarl
jbe
jnp
cmp
xchg
add
mov
decl
pop
ja
sbb
dec
scas
mov
iret
rolb
push
testb
jae
sti
jae
xor
xor
jecxz
inc
push
lock
loope
in
sahf
bound
call
dec
xorl
cmpsl
mov
mov
out
mov
jbe
mov
std
das
push
rcll
test
pop
cmp
fsts
xor
add
aam
test
ret
insl
call
xchg
mov
popf
pop
int3
scas
push
int
lahf
outsl
sldt
out
dec
push
sub
fidivrs
jle
push
cmp
or
mov
incb
inc
outsb
insl
sub
and
add
or
mov
ret
cmpsl
or
dec
xlat
ror
mov
in
icebp
enter
sub
mov
or
sahf
or
pushl
pop
test
in
mov
add
or
ret
add
mov
or
repz
popf
popa
jge
outsb
mov
rorb
imul
mov
rcrb
sub
add
mov
cwtl
adc
lret
adc
bound
xor
push
xchg
test
lods
lea
insl
push
adc
out
jnp
test
adc
mov
clc
push
xchg
and
mov
gs
test
jo
mov
fwait
add
add
mov
in
cli
xchg
adc
push
pop
push
jmp
rclb
adc
pop
adc
inc
push
mov
ljmp
dec
or
cli
aaa
lret
rolb
xor
icebp
les
cmp
add
add
in
adc
mov
pop
and
mov
mov
inc
jne
ret
inc
mov
outsl
pusha
fwait
into
ficoml
in
lods
mov
cli
jmp
xor
sub
lcall
les
push
fmuls
cli
sbb
ss
xchg
xchg
ds
push
shll
sbb
les
pop
sub
test
sarb
cmp
ficoml
mov
out
push
lahf
or
dec
pop
out
dec
repz
pop
test
add
jle
mov
ret
dec
inc
dec
int3
mov
xor
cmp
inc
dec
push
inc
mov
push
push
mov
shll
xchg
inc
into
xchg
lret
rclb
pop
pop
dec
add
test
test
fstpt
cmp
lds
sahf
mov
hlt
pusha
jb
stos
add
nop
xor
push
xchg
cwtl
sahf
xor
push
int3
movsb
push
mov
sub
cmpsl
adc
dec
enter
mov
fs
adc
cmp
mov
fldenv
push
hlt
rcrl
repnz
out
inc
cmp
ret
out
xchg
inc
ds
mov
rorb
mov
adc
add
or
xor
pop
pop
or
js
fnstenv
dec
mov
mov
mov
insb
xor
mov
rcrb
cs
ja
sub
cmpsb
lock
and
adc
mov
and
or
jmp
icebp
or
push
test
xor
lods
inc
pop
or
clc
dec
mov
rcrl
jnp
cmpsl
xor
sub
stos
roll
mov
mov
faddl
std
add
adc
inc
ret
cmp
roll
sbb
mov
mov
push
stos
adc
fidivrs
sbb
push
xchg
out
fs
cmpsl
insb
aam
test
popf
aad
das
aam
jno
pop
stos
les
fistps
sti
addr16
cmc
imul
aas
xchg
sahf
jo
and
in
mov
or
push
icebp
mov
xor
mov
mov
mov
pop
iret
insb
repnz
xchg
mov
movsb
mov
add
mov
or
xchg
adc
xor
mov
xchg
sub
mov
in
mov
push
cli
inc
pop
mov
test
movsb
or
sbb
lret
sbb
push
jg
mov
cmp
sbb
xor
xor
cmp
xchg
xlat
dec
cltd
call
repz
roll
jle
cmp
into
mov
push
add
pop
loope
jbe
push
push
jl
rorb
cmp
js
pop
inc
jbe
pop
call
xchg
cmp
lcall
outsb
adc
and
cmc
cmc
mov
pop
lea
popa
inc
cmp
repnz
add
xor
loopne
push
das
stc
cltd
push
scas
xchg
inc
xchg
mov
insb
stos
sbb
pop
push
mov
mov
mov
sub
pop
bound
or
pop
jl
call
xchg
push
out
add
loop
xchg
pop
sub
pop
push
sbb
or
divb
ficoms
xchg
stos
bound
push
ret
je
jge
pushf
iret
mov
aad
daa
sbb
je
test
xor
inc
lret
sub
or
jno
add
mov
cmp
cmp
push
std
movsb
xchg
or
out
mov
mov
ljmp
add
or
pop
pop
push
or
popl
mov
push
pop
jns
lock
jnp
ficompl
daa
fisubrl
pop
xor
lds
popa
dec
jge
mov
add
ret
mov
std
lock
mov
pop
sbb
sub
or
push
ss
fcmovu
push
add
iret
fisubrs
mov
add
pop
js
jno
mov
sbb
pop
xchg
call
cmp
fs
push
sbb
sbb
out
and
sbb
insl
add
push
hlt
adc
xchg
aas
fiadds
icebp
test
mov
jne
mov
sub
mov
sbb
lock
loop
ret
cmp
lods
enter
mov
bound
sbb
add
jb
movsl
xchg
mov
hlt
fwait
push
stos
inc
fstl
scas
clc
jmp
push
jl
sbb
in
cmpb
mov
leave
adc
out
inc
mov
std
dec
pop
testb
stos
cmp
jnp
iret
enter
rcrl
and
sub
push
mov
dec
ds
add
rorl
xor
add
aad
xor
inc
push
pop
sti
dec
mov
mov
icebp
mov
ud2
mov
push
bound
xchg
ret
push
mov
sub
sbb
xchg
rcrb
mov
inc
push
ja
sub
mov
rorb
icebp
dec
sub
rclb
rep
mov
add
loopne
loope
or
xchg
inc
xchg
icebp
jp
mov
imul
inc
int
shlb
shl
mov
loop
adc
fstps
push
sub
xchg
arpl
mov
pop
add
or
enter
lret
mov
or
inc
loopne
push
pop
pushf
mov
cs
lock
jle
into
daa
test
out
les
adc
outsb
in
dec
hlt
adc
les
imul
xor
nop
clc
rcll
jbe
pop
pop
mov
rorb
sub
and
popa
ds
or
xor
push
mov
cmp
xor
pop
les
cli
fwait
xchg
jge
in
mov
sbb
mov
sbb
sub
sti
inc
mov
push
std
loope
sbb
js
mov
xor
aam
imul
xchg
or
inc
stos
das
std
inc
call
add
lods
dec
mov
loope
adc
add
inc
and
jo
imul
nop
loopne
pop
movsb
cmpxchg
inc
push
mov
mov
xchg
lods
ljmp
push
jbe
pop
cs
les
enter
mov
adc
es
and
imul
cld
push
mov
pop
imul
icebp
adc
in
xor
pop
scas
jno
enter
sub
shufps
out
lea
loopne
xor
subb
inc
dec
sbb
or
pop
or
pop
fbstp
jno
or
sti
xor
inc
in
outsb
pop
mov
nop
cmp
pop
xor
push
mov
push
sub
xchg
fldl
fbld
mov
sub
movsl
or
cmp
fs
pop
push
int3
icebp
pop
cmpsb
inc
outsb
add
dec
loop
sbb
inc
shrl
jp
clc
arpl
dec
pop
xlat
cmp
mov
movl
adc
xorb
not
jmp
divl
sbb
inc
pop
xor
je
xor
addr16
gs
dec
clc
mov
mov
mov
sbb
std
icebp
cmp
mov
xor
fcmove
jge
inc
or
adc
outsb
pusha
bound
push
mov
hlt
sbb
inc
pop
and
mov
pop
pop
adc
sub
subb
dec
add
inc
cltd
stc
popf
mov
sub
add
mov
or
xor
mov
mov
mov
movsb
dec
mov
ja
dec
inc
sbb
mov
into
sbb
xchg
fldcw
lock
mov
movsb
push
lret
inc
mov
bound
rolb
adc
mov
sbb
fstpl
and
adc
fisubl
dec
sub
or
sub
add
push
push
jno
scas
adc
lahf
sbb
mov
mov
push
jmp
cmp
add
addb
mov
pusha
test
nop
inc
ret
test
bound
outsb
call
adcl
cmp
movsb
fisttps
insb
pop
adc
test
idivl
dec
les
rol
inc
js
jae
jg
lock
test
pop
les
repnz
mov
push
repnz
sub
sahf
hlt
shr
loop
mov
aam
add
fidivrs
or
das
sbb
dec
xor
aad
xor
aad
call
and
sub
mov
ud2
jge
sub
rcl
testb
pop
mov
or
mov
pop
xchg
dec
xchg
inc
imul
xchg
fldt
or
jg
push
je
adc
in
jne
add
push
adc
in
push
push
adc
mov
cld
and
push
dec
ret
adcl
pop
jle
dec
push
fimull
inc
faddl
call
pop
loopne
and
rcrl
mov
jge
dec
int
adc
push
cmpsl
aam
inc
mov
sbb
mov
pop
dec
sbb
dec
and
clc
mov
call
mov
pop
and
push
repnz
and
cmp
cwtl
insb
pop
out
repz
jb
xchg
jge
sahf
sbb
loopne
fimull
out
addr16
mov
subl
ret
and
cmp
push
rcrb
inc
js
sub
jo
pop
imul
pop
xlat
loop
rolb
adc
clc
insb
fs
push
insb
jge
or
mov
xor
add
adc
mov
mov
inc
dec
jecxz
cmpsb
mov
lret
lods
xchg
xor
rolb
vpsllw
push
outsl
mov
cli
mov
inc
movsb
testl
test
enter
dec
add
addl
jmp
lcall
sbb
pop
imul
push
stos
push
sub
insb
xchg
mov
push
out
repz
jp
int3
inc
stc
jnp,pn
xchg
add
cltd
shrl
pop
test
fnsave
fs
addl
mov
mov
fimuls
cmp
xor
ss
inc
cld
cltd
xchg
fisubrs
and
sbb
mov
pop
rolb
js
pop
int
push
nop
mov
cli
or
shrb
inc
adc
std
sbb
push
es
stos
adc
xchg
jp
faddl
int3
test
hlt
sub
push
cs
lock
loop
imul
lahf
aad
gs
lea
pop
adcb
loopne
ljmp
xor
dec
std
adc
hlt
ja
xchg
jp
dec
push
or
call
jge
test
mov
mov
push
jmp
pop
mov
daa
sbb
cltd
lret
sbb
mov
cmp
sub
or
movsb
add
mov
cs
cwtl
mov
and
sub
stos
and
xchg
add
divb
outsl
lock
pop
pop
sbb
jo
cmpsb
jbe
int3
js
je
pop
lods
je
pop
shll
test
loop
push
rcll
or
shr
sub
pop
mov
push
sbb
nop
or
cld
aad
loopne
jnp
pop
jo
cmp
cmc
daa
lock
or
pusha
or
andl
incb
in
sahf
cwtl
popf
pop
loopne
mov
rcl
ljmp
mov
mov
dec
leave
data16
add
or
push
jg
test
test
lahf
cmp
fisttpll
sbb
int
stos
lds
sbb
xor
ret
stos
jg
push
sahf
popf
mov
mov
add
or
cmc
adc
icebp
push
or
lea
adc
aam
testl
and
pusha
add
push
jg,pn
ljmp
mul
mov
lea
out
scas
outsl
pusha
bswap
cld
push
xchg
sahf
or
fildl
call
test
add
cmc
daa
nop
or
iret
cmp
stc
enter
lds
jle
div
add
int
sub
fsubs
pop
cli
cmp
pop
ds
rcrl
aaa
lock
cwtl
add
ss
in
dec
in
jns
or
lods
dec
pop
add
rcl
or
or
adc
dec
xor
dec
sti
ss
lds
pop
or
mov
pop
dec
jmp
jo
inc
mov
xchg
lcall
pop
xchg
jecxz
les
roll
mov
out
rcll
lds
in
test
popf
mov
pusha
jl
stc
adc
xor
xor
scas
js
and
loop
lret
mov
jg
push
jmp
or
jmp
or
add
mov
or
jecxz
xchg
xor
push
arpl
dec
xor
cmpsl
stos
leave
xchg
add
addl
pop
pop
xchg
psubusb
popa
cmp
in
mov
shr
lds
insb
js
jne
insb
lahf
cs
daa
pop
cs
add
adc
pusha
mov
aas
mov
mov
das
and
xor
mov
and
push
or
xor
ds
inc
mov
dec
pop
jl
jmp
ret
inc
or
popl
nop
mov
inc
in
xchg
cwtl
push
and
clc
push
push
rolb
outsl
dec
pop
push
xor
add
mov
adc
lcallw
faddl
adc
mov
mov
mov
lcall
test
dec
or
or
mov
fprem
jnp
fisttpll
push
pushf
arpl
push
or
xchg
in
pushf
and
insl
movsb
rcrl
xlat
mov
loope
xlat
pop
sub
movsl
sbbl
push
sbb
leave
rclb
dec
aaa
in
pusha
lods
out
popf
shl
pop
xchg
test
or
in
ss
scas
add
pop
push
ss
inc
in
jp
cltd
xchg
in
jg
xor
pusha
cmp
rcl
mov
clc
fcmovne
mov
insl
ljmp
sbb
rcll
loop
mov
sbb
add
push
mov
mov
stos
int3
loope
orl
es
push
mov
inc
cmp
clc
xchg
mov
movsb
cli
test
les
jp
xchg
mov
les
cmp
leave
or
push
mov
outsb
sbb
jl
shlb
and
js
enter
and
mov
jbe
push
in
das
aaa
scas
pop
je
xor
adcl
mov
pop
lcall
and
pop
xor
push
pop
push
cld
mov
add
push
mov
cmovg
idivl
xchg
mov
dec
pop
cmp
jbe
xchg
scas
pop
sub
mov
mov
jg
and
push
loope
pop
cwtl
icebp
sub
adc
push
inc
orl
inc
movsb
mov
mov
cld
xor
mov
or
daa
jle
pop
mov
xchg
push
cmp
xchg
push
pop
imul
jne
jp
cmp
rclb
mov
xchg
call
push
jle
out
mov
xlat
and
shl
xchg
inc
sub
ja
sub
mov
test
mov
addb
test
aaa
in
lods
mov
add
in
movsl
mov
call
jp
add
dec
mov
sbb
fcoml
mov
lds
xor
jnp
cli
cmpl
into
mov
pop
fnsave
clc
dec
dec
js
addb
add
sbb
mov
cmp
shlb
adc
cltd
out
fcmovu
add
imul
inc
add
js
lock
push
cli
hlt
adc
pop
or
pop
mov
push
bnd
add
cld
and
sub
dec
out
leave
lcall
nop
push
cs
xlat
pop
adc
insl
push
dec
inc
es
adc
pop
je
mov
and
or
stos
loope
pop
xchg
sahf
sbb
sbb
sbb
add
jno
pusha
dec
outsb
jle
ret
decb
ds
jp
mov
add
mov
mov
fidivl
test
inc
mov
sub
ds
dec
adc
pop
and
xor
push
pop
or
cltd
pop
sub
pop
pop
bound
or
sub
jno
sti
idivb
sarb
mov
pop
mov
sub
add
xchg
cmc
sub
mov
xchg
push
dec
pop
lds
movsb
push
pushf
shll
push
cld
xchg
aas
push
scas
cmp
lds
fnstsw
mov
xor
dec
or
js
les
inc
daa
add
xchg
cwtl
jge
rcll
rcrb
add
inc
pop
xor
shll
syscall
adc
pop
push
in
mov
adc
cmp
inc
mov
push
insb
add
push
and
jne
dec
repz
popa
adc
call
nop
mov
in
icebp
std
push
fisubrl
loopne
jne
mov
xor
xor
aam
jge
sbb
push
xchg
sahf
mov
dec
ficompl
scas
or
mov
loop
rolb
push
mov
mov
jg
lock
call
ss
repnz
add
cmc
and
cmp
dec
in
xor
cli
imul
xor
mov
add
mov
cmp
sub
ret
sahf
clc
clc
jp
jb
xor
mov
jge
rorb
ja
jnp
ss
cld
ja
and
popa
aas
mov
xchg
xchg
ror
into
in
mov
or
dec
pop
pop
and
inc
orb
out
and
andb
push
fisubs
push
mov
inc
cli
or
lock
and
sub
sbb
fldt
push
aad
add
in
push
xchg
movsb
in
hlt
cmp
adc
cwtl
xor
mov
jle
sub
pop
adc
add
loopne
aad
push
sahf
cld
jl
je
add
and
pop
cld
and
rcrb
sbb
or
lods
movsb
aaa
sub
rclb
test
loopne
std
call
nop
xchg
in
jge
xor
add
mov
dec
mov
xchg
scas
xor
pusha
adc
sahf
hlt
mov
stc
in
pop
cs
movsl
das
loope
xchg
fwait
add
xchg
inc
inc
arpl
sbb
lods
lcall
add
das
and
mov
fistpl
mov
jmp
sbb
mov
adc
test
fwait
jo
pop
xchg
pop
into
push
fcompl
out
pop
test
xchg
dec
sub
lcall
sub
and
cmp
push
pushf
xor
sub
lods
jb
out
xchg
ljmp
sbb
in
and
mov
das
dec
lahf
in
imul
jne
imul
cmp
push
aas
pushf
leave
fbstp
inc
and
divl
mov
lock
ret
mov
adc
inc
loop
add
fsin
push
lahf
sbb
sub
cmpsb
pop
pop
movsb
icebp
lock
push
ret
loopne
movsl
inc
test
push
cmp
movsl
mov
pusha
mov
sub
scas
xchg
ljmp
out
std
lods
cmp
dec
cmp
test
sbb
xchg
mov
push
sbb
and
push
jo
sub
dec
dec
iret
inc
stos
loop
aas
test
dec
imul
scas
sahf
popa
pushl
mov
inc
test
and
mov
stos
arpl
js
mov
fwait
inc
xchg
or
xchg
push
inc
in
adc
xor
sbb
mov
mov
cmp
xchg
and
lock
xor
push
cmp
outsb
add
sub
push
das
jle
and
push
or
out
sbb
outsb
aas
jle
orl
xchg
ret
jg
bound
idiv
in
loop
sbb
mulps
add
test
insb
add
test
sbb
sub
lret
mov
or
movsl
sub
sub
aas
rcrb
arpl
jo
dec
pop
fdivrs
scas
inc
push
adc
stos
shrb
stos
call
mov
inc
pop
add
dec
mov
mov
in
popf
gs
jo
push
ret
cmp
fsubrs
andl
stc
jge
test
push
and
fstl
mov
cli
push
mov
lock
nop
rorb
out
insl
jp
cmp
push
addb
iret
xlat
sbb
inc
sub
loop
pop
push
pop
sub
test
lods
cmpsb
push
push
jo
insl
xor
scas
jbe
sub
mov
sub
sub
hlt
jo
push
mov
enter
cmpl
or
mov
cmp
decb
aas
pop
inc
xchg
lret
lcall
inc
cli
jo
shrb
sbb
mov
scas
decb
and
mov
inc
xor
mov
cli
mov
jnp
and
or
stos
scas
enter
call
cmp
loope
js
pop
sbb
adc
outsl
lock
loop
loopne
pop
dec
xchg
ds
scas
jmp
sar
or
iret
pop
out
sbb
and
fadd
aam
rcr
push
sub
adc
js
jb
or
pop
or
out
jle
add
enter
shrb
mov
pop
or
mov
enter
enter
imul
xor
xchg
sub
in
testl
test
adcb
xor
js
mov
and
loopne
addb
fwait
lds
decb
push
cltd
dec
scas
ds
adc
fistl
lret
xor
cltd
movsl
pop
movsl
xlat
aam
loope
cmp
in
sub
dec
inc
imul
mov
test
jg
scas
rcrb
pop
orb
push
pusha
xchg
jns
and
in
adc
jnp
and
xor
xchg
stos
das
lock
outsb
mov
rolb
pushf
jmp
sbb
jmp
sbb
push
dec
ret
hlt
inc
jle
ds
or
in
and
shlb
push
pushl
pusha
mov
jge
lock
pop
pop
jne
pushf
cmp
lahf
push
pop
mov
add
dec
push
cmp
xchg
aad
jg
idiv
lock
jns
fisubrs
push
negb
pop
sub
add
pop
push
add
mov
popf
dec
cmpsb
dec
push
pop
lret
rcll
loopne
jp
sub
xchg
jl
jne
add
xchg
mov
push
jle
pushf
cmpsl
add
mov
cmp
push
mov
push
lods
pop
stos
out
add
stc
sub
jmp
mov
sbb
sub
cmpsb
jnp
inc
ret
jl
cmp
push
push
xchg
push
add
jno
stos
cmp
push
cmp
popa
js
mov
xor
fimull
in
and
sbb
push
push
scas
movl
movsb
icebp
aas
rolb
and
out
jmp
adcl
arpl
into
rorb
mov
mov
or
iret
add
lahf
mov
sbb
gs
add
mov
mov
pop
lcall
mov
cmp
mov
fsubp
push
pop
jmp
cmp
ret
popf
sub
cs
jnp
adc
jbe
test
push
call
sbb
push
dec
loopne
mov
xchg
dec
or
js
loope
and
mov
dec
adc
mov
nop
push
mov
xor
and
out
inc
in
jno
dec
cli
insb
xchg
xor
inc
inc
movsl
jl
jp
jnp
pusha
inc
decl
pop
or
arpl
sub
rolb
push
aas
push
shl
xor
test
xchg
cmp
pop
inc
inc
add
imul
push
insb
lods
pop
mov
lret
sub
jo
sub
loop
pusha
xchg
or
js
cmp
jae
dec
dec
ss
dec
xor
shll
cmp
xchg
jbe
int
lods
push
jne
adc
addl
push
adc
lahf
lret
xor
sbb
sub
push
cmp
lods
and
fcomip
das
xchg
jecxz
mov
adc
pop
sbb
in
xchg
mov
adc
and
pop
js
arpl
sub
call
push
push
shlb
cmp
ss
mov
hlt
or
mov
push
sub
push
jbe
ds
cmp
mov
mov
xor
loope
fld
cmp
pop
and
push
jg
or
je
xchg
pop
shlb
leave
mov
lcallw
mov
pushf
hlt
cli
adc
out
clc
addr16
xchg
mov
mov
mov
cld
fistps
ja
or
and
sti
dec
fmuls
dec
sbb
mov
sbb
inc
movsb
fs
std
movsb
lahf
cli
imul
add
scas
mov
mov
xor
xchg
sub
adc
fbld
cli
in
push
add
cmp
jle
add
jb
out
sbb
push
cmpsl
push
push
and
scas
xor
mov
xchg
add
push
neg
pop
sbb
in
in
push
lods
addr16
cmp
xor
inc
add
jo
mov
sbb
push
cltd
dec
clc
sub
jp
testl
insb
in
mov
pop
imul
or
shrl
lock
insb
sbb
lock
mov
movsl
lods
pop
cmpl
addr16
mov
outsl
cwtl
push
hlt
sub
les
iret
cmp
test
and
xchg
add
cmp
or
insl
mov
add
dec
cld
fadd
and
sbb
arpl
push
xchg
push
in
add
xchg
loopne
xor
xchg
ret
shl
idivb
and
xchg
push
cli
mov
inc
mov
mov
rcll
ss
xor
rclb
jmp
push
lfs
adc
rorb
sahf
mov
shll
test
cmp
jno
sub
mov
dec
sbb
pop
ret
inc
sub
pop
mov
inc
mov
in
and
test
je
mov
sbb
mov
fdivl
push
inc
sbb
ficoml
scas
sahf
sub
pop
pop
mov
movsb
xor
jp
mov
add
pusha
popf
pop
lret
scas
mov
cwtl
or
mov
or
std
xchg
mov
or
test
adcb
sub
sub
sub
or
loopne
pop
fisubl
shl
shlb
and
adc
adc
xchg
lods
sbb
mov
jno
mov
xor
inc
loopne
punpckhbw
xchg
or
cwtl
sub
or
loop
or
dec
mulb
insl
push
repnz
lea
scas
push
test
push
je
inc
movsb
pop
out
je
push
push
aas
bound
dec
jge
adc
inc
push
add
inc
pop
xchg
arpl
mov
pop
js
inc
in
cld
aaa
cli
rcll
popa
adc
repnz
cli
arpl
dec
js
pusha
rorl
les
clc
mov
addb
pop
jno
cli
mov
in
pop
insb
push
in
pop
sbb
add
push
push
mov
adc
mov
es
daa
and
sub
xor
mov
mov
jbe
fildll
fbstp
cmpsb
leave
negl
jecxz
or
sub
add
clc
mov
inc
xchg
push
pusha
sti
adc
mov
jns
mov
addl
je
push
jns
mov
loop
adc
add
sbb
sbb
clc
adc
test
in
pop
fsubl
les
dec
cmp
fwait
movsl
clc
call
pop
pop
and
call
and
jo
pop
insl
push
cmpb
orb
sub
xchg
aam
fdivl
sbb
fwait
inc
inc
daa
mov
mov
sbb
cmp
das
mov
sbb
mov
mov
stos
or
and
mov
add
xchg
out
cmpb
and
sahf
insb
mov
xchg
xor
mov
inc
cs
xchg
adc
mov
or
jmp
mov
xor
in
push
ror
inc
les
and
stos
test
pop
mov
andb
lret
jmp
or
inc
fadds
and
pop
push
enter
clc
wrmsr
stos
xor
movsb
add
std
bound
frstor
jge
das
cli
repnz
iret
add
aaa
fdivl
cld
mov
cmpl
xchg
stos
or
or
adc
shll
pop
movsl
and
sub
cli
xor
cwtl
mov
scas
push
add
stos
pop
mov
lret
lcall
inc
or
daa
xchg
push
mov
in
sti
lds
jp
push
inc
lea
aas
inc
pop
call
add
dec
nop
inc
push
flds
mov
jnp
clc
sbb
sub
or
and
notb
fsubrs
and
mov
and
cld
test
lds
or
subb
dec
and
sar
popa
loop
cmc
xchg
dec
ljmp
cwtl
or
push
mov
sbbl
inc
or
das
xchg
cmc
jl
shlb
adc
add
fmuls
andb
shrb
pop
mov
in
pushf
sbb
popa
add
mov
xorl
popa
xor
pop
xor
lcall
inc
pushf
xor
jmp
es
clc
push
shl
jg
test
fildll
cltd
fldl
sti
outsb
push
sub
xor
adcb
arpl
iret
clc
and
add
orb
aad
cmc
mov
push
cmp
cs
or
adc
inc
push
xor
adc
fstps
push
inc
das
dec
lcall
ret
add
xchg
push
sub
ljmp
sub
repz
in
mov
mov
ret
inc
outsb
sub
push
inc
xlat
pop
dec
out
mov
pop
daa
mov
ss
mov
sbb
dec
cld
test
cld
bound
mov
scas
xchg
neg
insl
adc
pushf
jnp
pop
mov
or
dec
inc
pusha
mov
pop
jl
ss
shlb
call
pop
ds
xchg
les
cld
loope
lods
enter
notl
lcall
js
fsubrl
aas
je
adc
or
lock
add
pop
mov
dec
jl
notb
stc
adc
jg
and
sub
dec
je
and
std
lods
rcrl
jecxz
sti
add
sbb
popa
stos
jle
fdivr
lods
aaa
es
add
cmpb
into
ret
incl
and
mov
mov
clc
add
sub
xor
adc
std
inc
loop
xchg
mov
roll
rorl
stos
dec
inc
lds
clc
flds
rcll
fdiv
add
mov
adc
pusha
add
cli
inc
clc
hlt
mov
int3
push
sbb
lea
mov
pop
xor
add
xchg
out
stos
and
cwtl
pushf
iret
pop
sub
aam
pop
push
test
pop
sub
outsb
and
adcb
adc
jmp
push
pop
cmp
ja
fisubs
out
jge
paddsw
fadd
ss
mov
and
stos
push
mov
inc
mulb
scas
cmp
lds
sbb
ret
push
sub
xchg
sub
mov
aad
dec
xorl
push
add
loop
or
cli
mov
xchg
sub
fnstcw
dec
sub
sbb
and
mov
jmp
xchg
loope
imul
jb,pt
mov
pop
sbb
cmp
push
shlb
sbb
jge
jae
stos
sub
es
test
daa
or
iret
dec
rol
and
repnz
jne
ret
jmp
in
fistl
sub
add
xor
sub
dec
inc
or
and
pop
hlt
popa
inc
push
dec
lods
ljmp
outsl
test
pop
aam
fucomip
int3
add
cmp
pop
adc
xor
pop
or
sbb
das
dec
repz
mov
decb
cli
scas
push
cld
js
and
movsl
negb
sbb
add
mov
cmpsb
pop
pop
push
dec
mov
int
xchg
add
mov
out
fdivrs
fs
sbb
clc
fsubrl
jl
inc
and
jns
push
jo
or
aad
cmp
jns
call
sub
jle
adc
lods
xchg
or
ret
pop
mov
shlb
mov
mov
aam
mov
nop
stc
sub
xchg
cmp
adc
push
dec
pop
jno
insl
test
aam
inc
divb
shlb
pop
jge
or
push
loop
aas
mov
lahf
inc
mov
decb
notb
stos
in
dec
cmp
aam
inc
cmp
incl
and
mov
dec
addr16
or
repnz
sbb
xor
sub
addr16
adc
lea
int3
int
sbb
pop
sbb
das
push
xor
scas
in
adc
pop
adc
fisttpll
pushf
les
sub
sub
pmovmskb
ffree
mov
lock
in
outsb
jg
clc
jo
sbb
pop
mov
fmuls
int
shrl
push
inc
test
ficoml
jle
fs
lea
aam
and
mov
add
mov
js
sub
inc
js
js
mov
daa
std
ret
rolb
popf
inc
jl
and
inc
outsl
mov
pop
leave
push
je
lods
les
mov
fs
jo
adc
imul
cmp
jg
mov
xchg
mov
adc
shll
cmp
cwtl
std
jecxz
mov
adc
arpl
test
mov
xlat
cli
add
aaa
lcall
pop
pusha
int3
in
push
mov
xchg
fdivrs
jo
push
sar
seta
or
sub
xor
jp
insl
pop
pop
or
ss
ret
ja
adc
int
icebp
lahf
ret
fs
cmp
arpl
mov
adc
and
inc
cmp
movsb
rcl
mov
push
fwait
jo
sub
mov
aas
cmp
inc
cltd
inc
leave
enter
adc
or
adcl
icebp
ljmp
mov
unpckhps
cltd
add
sub
test
fisubs
out
pop
cmpsb
cmc
lods
jl
sbb
jecxz
and
jecxz
xor
ljmp
mov
push
ds
movsl
bound
xorb
data16
adc
inc
pop
clc
imul
imul
aad
and
dec
inc
rorb
jp
cli
xorb
lahf
and
xabort
pop
mov
ljmp
xchg
pusha
int
xchg
cmpsb
add
sbbl
mov
push
add
jne
xchg
in
loop
xor
les
mov
loope
in
out
cmp
or
mov
dec
shll
dec
ss
ss
jne
in
testb
mov
frstor
loopne
mov
xor
xchg
inc
bound
fwait
add
add
xchg
sbb
dec
sbb
adc
stos
lret
clc
lds
movb
sub
or
adc
sbb
mov
test
mov
and
dec
dec
mov
dec
mov
bound
and
dec
cli
jbe
test
mov
sbb
or
inc
lret
jne
or
rclb
lret
or
or
or
fwait
rcrb
pop
maxps
xchg
or
add
push
rcr
in
or
negb
daa
fnstsw
enter
sbb
lods
mov
pop
mov
std
outsl
add
lods
push
bsr
inc
insl
pusha
adc
lret
inc
xchg
shll
pushf
aas
xor
push
inc
or
cs
pop
or
and
aaa
cltd
push
adc
cltd
pop
es
nop
lods
jge
sbb
and
nop
mov
aaa
add
cmp
mov
pop
es
inc
mov
jmp
loopne
subl
nop
pop
cwtl
jo
loop
adc
mov
mov
shl
jecxz
stos
int
mov
inc
and
icebp
mov
int
mov
and
add
inc
sub
mov
sub
or
mov
test
insb
fdivp
cmp
hlt
pop
jecxz
jnp
test
fcmove
pusha
xor
call
inc
inc
inc
pop
flds
pop
pop
jl
loopne
xor
cmp
fs
inc
outsb
pop
jne
jl
repnz
cmpsl
mov
sub
repnz
data16
mov
inc
movsb
sub
lock
je
inc
test
les
jp
add
cli
jae
mov
addl
xchg
fcoml
xchg
or
mov
sbb
xchg
mov
divb
push
mov
cs
or
jp
pop
int3
xchg
popa
mov
and
aas
aas
add
push
and
daa
daa
mov
loop
mov
out
lock
adc
rorb
adc
fwait
aaa
fcompl
xor
xchg
into
repz
jnp
das
ret
dec
inc
cmc
pop
jo
call
movsl
sbb
pop
jl
and
dec
movb
add
dec
popf
dec
jne
ror
cltd
scas
xor
mov
aam
and
add
adc
faddl
popa
in
andb
dec
sub
lock
cmp
add
enter
outsb
adcb
scas
cltd
subb
or
sbb
cmpb
je
fisttps
inc
gs
push
ds
sbb
cmc
fsubl
in
sub
iret
adc
and
scas
push
into
nop
dec
xchg
inc
pop
sub
mov
mov
add
push
mov
sbb
loopne
push
sub
push
outsb
mov
leave
cld
cvtpi2ps
int
push
movsb
jmp
sbb
stos
js
adc
dec
dec
cwtl
mov
imul
jb
rorl
adc
mov
push
sub
mov
faddl
adc
sbb
push
bound
call
mov
adc
adc
xchg
in
push
add
jecxz
dec
stos
cwtl
in
dec
dec
sbb
fildl
xchg
push
cmc
inc
ljmp
pop
dec
test
xchg
icebp
add
jne
sub
inc
dec
jmp
cmp
xlat
sub
inc
inc
inc
jo
pop
sbb
cmpl
dec
loop
adcb
dec
mov
mov
mov
scas
push
pop
jo
notb
push
sbb
and
push
mov
add
mov
mov
out
insl
sahf
shrb
adc
mov
inc
out
repz
add
and
mov
fsubrl
stos
xor
jle
mov
inc
movb
sub
pop
mov
xchg
out
push
sbb
mov
call
pop
jge
pop
addb
lods
dec
pop
lret
lods
cmp
inc
es
cmc
ljmp
sbb
rorb
ss
scas
jmp
imul
push
xchg
sbb
jae
xor
jo
or
hlt
out
xorb
rcrl
dec
inc
add
mov
mov
push
hlt
pop
xor
push
data16
add
or
jne
pop
jle
mov
je
mov
xchg
test
cli
pop
xchg
mov
pop
lahf
inc
sbb
add
test
add
movsb
inc
mov
xchg
sbb
hlt
cmpsl
aad
jle
and
jo
jae
add
loopne
test
adc
push
cmp
pop
jno
mov
test
and
jecxz
mov
ret
lret
and
push
hlt
fidivrl
div
clc
pop
and
dec
js
cmpsb
jo
inc
pushf
or
sub
aas
and
shll
orl
stos
cmp
fiaddl
js
addl
xchg
sub
rcrl
inc
and
sti
jp
loopne
scas
cli
into
into
jecxz
xorb
fsubrl
cs
test
jmp
sbb
loopne
inc
shll
mov
pop
idivl
in
push
cmpsb
cmpsl
test
mov
push
pop
jns
sbb
and
xchg
dec
call
inc
shlb
sub
mov
cmp
pop
das
pusha
sti
jle
outsl
pusha
jmp
add
mov
ljmp
imul
dec
mov
mov
sti
aam
cmp
add
test
jae
pop
data16
out
insl
jb
add
addr16
sub
and
mov
add
lock
push
cs
or
xlat
xchg
mov
lahf
gs
outsb
dec
loopne
push
or
lods
pop
xor
subb
pop
inc
nop
mov
push
push
inc
insb
sub
push
mov
rorl
cmp
pop
or
rcl
jge
decb
shl
stos
and
xor
or
mov
sbb
mov
adc
movsb
mov
stos
or
cwtl
clc
call
adc
rol
enter
repnz
add
adc
mov
xchg
sbb
sarl
subl
out
nop
pusha
or
ja
ret
paddusb
mov
fcom
jmp
vpackuswb
xchg
sub
in
aam
adc
popf
into
mov
add
cmp
jo
mov
int3
outsl
repnz
das
or
lea
insb
loop
or
out
cmp
fbld
mov
dec
adc
pop
ds
jg
sbb
xchg
xchg
into
sub
icebp
lods
xchg
mov
push
aas
aam
js
mov
and
xchg
lret
pop
mov
fimull
pusha
scas
adc
mov
sar
and
cmpsl
and
pushf
xchg
jno
sarb
push
mov
test
push
add
jmp
lods
mov
pop
insl
int
mov
out
mov
mov
and
add
or
jne
jmp
cmp
outsb
pop
fs
xor
sub
adc
mov
and
loope
xor
xchg
xchg
mov
adc
push
sbb
jle
jnp
push
and
pop
inc
sub
add
test
sub
jle
push
adc
test
sbb
sbb
fldl
pop
push
and
add
add
xchg
imul
and
pushf
ljmp
das
bound
nop
mov
test
test
pop
stos
add
or
dec
pop
test
pop
bound
dec
not
dec
fildll
not
arpl
stc
mov
jne
mov
movsl
in
xor
repz
out
mov
dec
rcrb
inc
mov
jge
mov
sub
in
and
arpl
mov
lods
dec
sub
loope
dec
mov
sub
aas
sub
es
sarl
mov
outsb
fisttpll
mov
inc
mov
mov
push
jo
cmp
add
fld
xchg
push
xchg
cmp
sbbb
xor
push
repz
push
push
aad
outsb
in
inc
rorb
mov
mov
push
shll
int3
rclb
movsb
pop
les
jle
lcall
lret
and
pop
loopne
jae
jg
xlat
add
data16
adc
mov
pop
mov
mov
push
xchg
xchg
clc
test
sar
lock
stos
push
sub
add
or
push
push
in
pushf
mov
inc
mov
pop
sub
rol
or
addl
fsqrt
xor
mov
es
mul
or
mov
lret
mov
pop
cli
js
les
movsl
test
mov
cmp
in
and
imul
ljmp
mov
add
push
lea
sub
pop
mov
xchg
inc
jg
sbbb
ds
loope
and
mov
js
out
push
push
clc
or
pop
mov
add
cwtl
pop
lds
jge
or
mov
mov
mov
jle
inc
xor
and
jae
sub
nop
mov
or
imul
fisttpl
orl
mov
push
xchg
jo
or
std
jp
rcl
adc
jb
mov
cs
sbb
mov
pop
loope
cli
push
jl
cmpsb
add
mov
add
jno
aad
rclb
mov
push
mov
xlat
out
lahf
clc
dec
push
mov
sub
enter
jle
rcl
pop
adc
popf
jle
cmp
repnz
loop
inc
subl
jecxz
pop
loopne
mov
outsl
sbb
inc
cmp
sbb
jle
aas
lods
lea
pop
jl
je
sub
adc
mov
stos
sub
jne
add
fistps
ss
sub
rol
sbb
or
clc
adc
fnclex
inc
pop
test
pop
mov
aam
pop
ret
jl
and
mov
mov
jl
add
lock
mov
xchg
imul
cmp
ljmp
stc
push
mov
xor
pop
sbb
call
xor
popf
add
lahf
or
call
add
ret
sarl
scas
mov
jp
mov
les
lret
test
bound
js
aas
ds
mov
enter
inc
lock
roll
jge
jo
cli
fiadds
mov
jge
sahf
fdivs
and
jo
scas
and
sbb
fimuls
arpl
test
je
test
inc
shll
add
mov
or
fwait
pop
orl
sbbl
mov
data16
addb
dec
push
pop
mov
scas
jno
xchg
mov
push
cmc
enter
xchg
add
pop
or
scas
mov
adcl
std
sub
and
pop
cmp
adc
aam
lret
ss
sub
call
or
mov
sbb
mov
jae
outsl
push
xchg
movsl
or
mov
mov
inc
stos
dec
fiadds
cs
or
pop
rorl
add
push
xor
in
adc
in
cmpsl
add
inc
mov
in
add
fisttpl
cmp
dec
divl
rcrl
ret
inc
inc
mov
pop
std
and
dec
add
jle
test
adc
leave
js
addb
push
in
xchg
mov
enter
cmp
fwait
outsb
push
push
push
nop
cmp
xchg
jl
aad
js
inc
flds
sbb
inc
sti
pop
or
lcall
and
inc
leave
fst
aad
fst
xchg
mov
sub
nop
test
jp
cld
scas
nop
add
add
inc
cmp
dec
fcomp
push
fsts
dec
add
jnp
inc
pop
int
stos
inc
fcompl
push
adc
adc
loopne
add
leave
adc
lcall
subb
call
jge
inc
ja
sub
lods
dec
scas
fmuls
hlt
fwait
aam
xchg
subps
js
rorb
lock
into
ss
lock
cmovl
mov
cltd
inc
cmp
sbb
call
sub
and
dec
in
cmc
sbb
jno
loop
ja
mov
xchg
inc
push
nop
inc
sbb
insb
ss
rcrb
mov
repnz
inc
mov
mov
ja
xor
add
ljmp
push
adcb
and
adc
adc
shrb
adc
dec
pop
in
cli
or
rcll
pushf
add
push
xchg
push
mov
push
subb
int3
sub
jecxz
repz
dec
push
cld
adc
push
mov
lahf
jg
in
mov
adc
mov
or
jbe
es
pop
jmp
data16
es
sub
lret
inc
outsl
push
push
loope
adc
jp
and
or
orb
mov
xchg
test
je
add
jmp
inc
outsl
in
sub
xor
jno
call
cmp
mov
cmp
xchg
inc
xlat
jg
mov
inc
pop
shrb
pop
cli
clc
xchg
mov
cli
imul
mov
xchg
ljmp
sbb
lea
dec
mov
mov
ret
adc
adc
push
dec
push
sub
inc
inc
es
inc
push
je
jo
cld
roll
push
adc
rorb
mov
icebp
xchg
push
stos
jb,pn
push
idiv
leave
outsb
lea
enter
repnz
icebp
push
lcall
dec
jnp
es
mov
push
repz
aam
xchg
cmp
jnp
add
xchg
nop
ljmp
push
add
mov
outsb
push
mov
and
jle
dec
mov
int3
je
stos
inc
fistl
ss
pushf
lea
jbe
outsb
lret
lods
and
gs
js
mov
and
cmp
mov
clc
in
mov
pop
cli
and
iret
out
jns
int
cmpsl
adc
pop
sbb
sub
mov
jne
or
movl
jae
movsl
ficoms
and
out
push
call
das
fsubrl
push
push
shrb
lcall
paddb
sub
dec
add
pushf
cmpl
sub
je
imul
add
mov
push
pop
lods
rcll
clc
cwtl
mov
popa
aam
test
cmp
mov
ss
mov
mov
shr
pusha
push
lods
mov
add
fnstcw
test
ljmp
mov
push
xlat
xor
xchg
push
sub
insl
add
loopne
add
clc
xchg
ljmp
mov
push
aaa
inc
push
mov
dec
stos
mov
mov
mov
sub
dec
push
jg
jecxz
js
xor
mov
sbb
lock
fadds
add
pusha
push
mov
and
pop
mov
cld
mov
std
ja
std
aam
inc
adc
or
ret
xchg
int
lahf
jbe
gs
cmp
mov
jmp
test
je
mov
sbb
pop
xchg
ret
cmp
cmpsb
push
aam
dec
imul
stos
cld
cwtl
cwtl
cmp
loopne
rcll
xor
in
js
sbb
enter
cmp
sbb
outsl
and
pop
leave
popa
mov
xchg
lods
arpl
loope
adc
jmp
mov
push
mov
lahf
ret
inc
xchg
inc
jne
cld
or
cli
out
cmp
add
lds
shlb
cmc
movsl
cltd
mov
jge
outsb
adc
or
loope
dec
aam
pop
mov
cmpsb
add
fisubl
cmp
mov
jp
dec
or
lcall
test
xchg
cmp
ds
stc
movsb
mov
loopne
cmc
scas
shrb
or
push
fmuls
loopne
imull
cld
push
mov
test
icebp
das
shll
xchg
and
cmp
jns
push
mov
xchg
cmpsl
mov
jo
mov
fcoms
ret
ror
rcl
lret
outsb
je
inc
lea
cmp
in
push
and
mov
iret
pushf
inc
inc
shlb
mov
orl
and
pop
outsl
cwtl
inc
popa
mov
inc
cs
call
dec
rorl
jmp
adc
cld
inc
jo
xchg
shlb
mov
or
dec
cmpsb
imul
jbe
add
movsb
js
adc
xor
xchg
bnd
popa
outsl
imul
mov
fwait
cmp
loope
jbe
or
mov
test
mov
fdivrl
scas
adc
je
lret
cmp
imul
xchg
xor
lock
arpl
inc
add
nop
dec
dec
loopne
cmp
imul
add
mov
push
and
jg
popa
push
in
sbb
call
add
jp
cmpsl
mov
mov
inc
popl
or
fiadds
xor
adc
jne
test
inc
jne
xchg
outsl
sbb
aas
pop
pop
jnp
mov
xchg
in
mov
iret
fildl
divl
gs
lret
out
cmp
mov
arpl
pop
add
adc
lods
pop
cmp
das
lods
int
into
fistl
out
mulb
ljmp
loope
add
jno
out
lret
mov
int3
fdiv
dec
shl
jb
cwtl
mov
jge
jae
xchg
nop
jno
int3
and
enter
xor
fistpl
push
ret
leave
shlb
inc
push
jl
sbb
and
push
mov
push
jl
jecxz
mov
push
cld
mov
rclb
insb
adc
mov
sbb
fsubs
jecxz
shlb
dec
stc
adc
mov
jecxz
fists
addb
mov
mov
fisubrs
nopl
cmc
mov
push
leave
jno
pop
in
outsl
mov
push
leave
lods
andb
pusha
mov
xor
les
push
or
push
js
out
sbb
dec
shlb
mov
std
mov
push
push
mov
idiv
movsl
add
and
push
notb
popa
mov
pusha
hlt
faddl
je
addr16
mov
pop
dec
mov
lds
mov
push
test
adc
jg
push
and
and
xchg
lahf
or
lods
jnp
stos
pop
pushf
mov
xchg
mov
jo
pop
fbstp
xchg
enter
clc
push
sub
daa
shrl
fiaddl
je
stos
rcl
add
subl
adc
cmpsl
jbe
push
xchg
je
sub
push
fcomps
int
dec
fdivs
xor
push
ds
addr16
fcomp
std
push
lea
out
fidivl
push
or
outsb
adc
mov
cs
mov
dec
popf
and
xor
inc
scas
jnp
stos
outsb
loop
and
jo
xchg
add
mov
cmp
pusha
xchg
dec
int3
cmp
insb
ja
loop
jle
xor
push
mov
push
inc
dec
test
and
pop
fbld
sbb
and
push
mov
pusha
sarl
call
push
cli
push
jl
mov
scas
push
push
xchg
add
pop
or
pop
push
lods
loop
loope
rcrb
pop
outsb
aad
pusha
xchg
ds
adc
dec
dec
xchg
rclb
fmuls
fs
rorb
rclb
ljmp
nopl
mov
or
mov
inc
xchg
cmp
mov
xchg
xor
pop
xchg
pop
lds
daa
es
adcb
ljmp
lods
adc
push
in
pop
mov
movsl
cmpsl
pop
ds
inc
mov
ror
xor
adc
shll
push
pusha
je
fcomps
repz
in
xchg
movsb
cld
mov
out
mov
je
cs
add
stos
cwtl
rorb
cltd
sbb
insb
cmc
test
push
mov
jecxz
inc
pop
or
repnz
test
pop
or
iret
inc
mov
push
mov
andl
or
xor
je
cmp
hlt
ss
xchg
mov
pop
sub
push
push
lock
test
sahf
fs
push
sub
ss
fisubl
mov
andl
mov
clc
xchg
jle
repnz
andb
inc
pop
mov
lods
inc
imul
imul
test
arpl
je
cltd
mov
inc
pushf
mov
test
mov
xchg
data16
mov
sbb
add
and
adc
inc
mov
push
xchg
addl
or
pop
cs
sbb
jp
add
or
out
or
jne
xor
rcll
scas
dec
mov
outsb
dec
xadd
inc
xor
pusha
mov
loope
mov
sbb
cwtl
mov
es
and
rcrb
lahf
in
mov
je
add
push
testl
aaa
sbb
bound
xor
add
inc
loopne
pop
xor
stos
test
sbb
cmp
and
je
mov
mov
cltd
out
mov
aam
push
or
fstl
and
bound
sarl
stos
cmpsl
pop
cli
inc
fwait
and
sbb
sahf
mov
cmc
out
xchg
aaa
decb
mov
lret
cmp
sub
and
dec
lcall
out
dec
xor
or
jecxz
add
arpl
lret
and
sbb
cltd
idivb
inc
test
xor
daa
std
xchg
xchg
jmp
sbb
pop
shrb
test
iret
decl
mov
pop
shlb
addl
mov
test
xor
icebp
mov
js
les
ltr
fimuls
mov
inc
clc
pop
popl
mov
or
iret
daa
and
jno
and
mov
aad
mov
xchg
add
shll
test
add
sbbb
pop
test
pop
mov
cmp
lea
xchg
fstl
call
popf
pop
ljmp
inc
out
mov
ljmp
lcall
ja
shlb
out
push
pop
pop
inc
aam
and
call
fnstsw
sub
aas
and
lock
aas
sbb
adc
adc
and
imul
mov
sub
scas
daa
dec
pop
xchg
outsl
xorb
shl
cmp
adc
mov
push
cmp
mov
hlt
adcb
push
sub
js
iret
jns
roll
lods
icebp
outsl
popa
inc
add
enter
push
dec
mov
jl
rcl
nop
inc
popa
and
mov
mov
filds
sahf
jle
into
xchg
mov
or
mov
enter
pop
lea
out
sti
dec
or
mov
mov
jo
xchg
pop
mov
in
cs
inc
test
filds
aaa
xchg
js
data16
fcomps
out
sbb
mov
adc
leave
add
popa
pop
mov
mov
sbb
cmpsb
adc
add
daa
sbb
adc
popf
adc
dec
xchg
lods
aaa
adc
push
and
jne
clc
sub
stos
or
dec
or
popl
loop
pop
aas
loop
rorb
cmp
arpl
in
sbb
movsb
mov
iret
mov
rcrb
repnz
sub
xchg
cmp
xchg
pop
jl
lahf
mov
xor
clc
rolb
rcrb
push
popf
push
mov
mov
pop
ret
inc
sub
or
cmpsl
or
into
sbb
cmc
xor
sbb
sti
dec
inc
cld
and
test
cmp
mov
or
ret
xchg
sbb
nop
xchg
std
je
add
sbb
sarl
xor
inc
cmpsl
jmp
clc
and
push
jle
or
cld
jns
aam
repnz
paddsw
mov
inc
add
and
push
jb
filds
loopne
je
pusha
xchg
nop
pop
enter
scas
lret
jo
or
push
mov
inc
pop
sbb
in
imul
sub
inc
mov
add
enter
adc
push
mov
mov
dec
outsl
and
hlt
lahf
or
push
scas
shll
add
xlat
push
adc
outsb
mov
or
pop
mov
je
cmpsb
push
and
aaa
dec
aas
xor
sub
cmp
pop
mov
ss
inc
lcall
daa
mov
mov
add
lret
out
cmp
sub
cmpsl
sbb
gs
push
add
ret
sbb
sti
lret
lea
fs
push
iret
mov
popf
lods
inc
arpl
jg
jg
xchg
cld
movsb
push
add
addr16
loope
push
jbe
mov
add
mov
sub
xor
arpl
test
xlat
mov
fstpt
fisttpll
jmp
test
sbb
sbb
push
jge
xchg
or
rolb
loopne
testb
mov
inc
pushf
lcall
cltd
inc
sub
jecxz
push
inc
aas
lret
push
int3
movsl
mov
mov
dec
sub
xor
loopne
loope
sbb
jb
inc
js
scas
dec
call
push
mov
jecxz
inc
ret
out
inc
mov
mov
add
shll
add
outsl
shlb
mov
push
das
jne
cmp
in
mov
sub
xor
lea
mov
pop
out
lods
jge
mov
sbb
mov
xor
lcall
mov
jb
cmp
bound
mov
iret
and
jne
lret
add
xchg
jl
and
pop
mov
or
mov
mov
mov
xchg
in
or
ret
aam
lods
pop
mov
movsl
in
sub
mov
clc
mov
call
shll
shlb
mov
cwtl
mov
ret
test
insb
out
and
mov
pmuludq
out
or
dec
push
test
inc
pop
mov
and
mov
push
xor
std
dec
mov
cmpsl
ljmp
cmp
mov
xor
js
addb
or
dec
jle
fimull
add
push
xchg
pavgw
lret
mov
or
jge
pop
jp
loope,pn
xorb
xchg
pop
in
xlat
rclb
cs
dec
cwtl
add
orb
scas
movsl
jo
or
xchg
lahf
cmp
mov
or
add
insl
aam
ljmp
inc
ja
push
arpl
jg
fistpll
adc
lods
jb
inc
mov
inc
bound
push
nop
xor
xor
push
into
push
lea
imul
lcall
dec
test
dec
jne
mov
imul
insl
xor
add
jmp
inc
mov
jnp
int
sub
std
popa
pop
push
pushf
cmpsb
jp
into
xchg
aas
jae
sub
rcrl
and
xor
lods
adc
mov
jno
mov
gs
push
sbb
out
or
cmp
xchg
jo
in
and
or
inc
sbb
gs
lahf
stos
cmp
cli
jnp
ficomps
repz
xchg
cmp
insb
cwtl
cmpsl
xchg
mov
xlat
mov
push
and
out
mov
roll
sahf
pop
sub
movlhps
mov
cmc
xchg
je
xchg
xchg
sub
movsb
xor
out
imul
xchg
push
jecxz
sbb
lock
outsl
xor
dec
cltd
jmp
mov
sbb
push
faddp
dec
lock
sub
fistpl
dec
ljmp
aas
in
fimull
inc
push
icebp
pop
icebp
and
daa
cs
pushf
pop
pop
add
push
into
mov
mov
mov
dec
lods
scas
xchg
push
shl
push
push
mov
outsb
and
inc
jg
or
mov
mov
out
lods
pop
cld
insl
pop
sarb
fistl
rcl
and
sbb
mov
or
and
lret
cmp
and
loop
scas
pop
rorb
ret
and
fwait
push
movsb
sahf
jge
and
sub
xor
inc
push
icebp
push
push
xchg
mov
cmpsb
mov
enterw
pop
lret
pop
test
xor
mov
add
push
outsb
scas
push
clc
add
and
sbb
cmp
mov
out
pop
or
in
movsb
mov
inc
in
daa
jp
ret
push
clc
add
mov
jno
fs
daa
int
sbb
mov
add
mov
adc
cmc
push
pop
pop
push
leave
pop
stc
ds
inc
dec
andl
mov
lds
mov
icebp
sbb
arpl
sbb
lea
pop
and
shll
mov
sub
inc
add
ss
or
pop
xor
and
rcll
and
add
sub
negl
ja
cltd
outsb
xlat
jo
shr
stos
adc
popa
xchg
idivl
pop
dec
std
pop
cmp
jmp
call
push
pop
mov
or
cmp
jbe
in
rorl
push
pop
inc
xor
fsubs
mov
xor
das
pop
push
addr16
gs
xor
dec
aaa
sbb
movsl
inc
and
fs
mov
xchg
das
popl
mov
pushf
popa
outsl
cmc
lret
outsl
dec
mov
clc
and
jb
pushf
and
fcmovbe
std
shll
std
test
mov
or
test
bound
pop
aaa
adc
int
xchg
and
popa
outsl
adcl
outsl
jne
cmp
out
outsl
movsb
stos
shl
dec
fisubrl
inc
scas
xor
xor
les
sbb
adc
jno
pushf
or
and
es
jmp
ret
dec
jo
inc
cli
bound
in
mov
cwtl
lock
clc
pop
and
imul
test
mov
das
adc
mov
add
inc
fwait
icebp
mov
inc
jno
fwait
push
add
or
cmpl
jle
xorl
jl
mov
jp
jns
fmuls
hlt
mov
dec
cltd
push
mov
stos
add
xchg
mov
js
in
in
xor
inc
nop
and
add
mov
cld
dec
xor
outsl
cmp
sub
fadd
xchg
and
dec
mov
fidivrs
mov
xchg
mov
into
mov
inc
cmp
dec
and
inc
mov
out
add
jp
cmovl
inc
dec
das
in
lds
xchg
testl
push
cli
jp
mov
cmp
pop
jnp
loope
lock
ret
add
dec
adc
ja
js
leave
ja
sbb
inc
icebp
and
sbb
xor
push
imul
push
jb
shll
push
dec
lcall
rolb
xchg
sbb
jge
mov
aaa
jo
stos
sub
insb
inc
pushf
stos
pusha
inc
daa
push
mov
push
add
inc
jecxz
loope
fildll
jecxz
sub
mov
or
cwtl
cmp
push
pop
add
cltd
popa
jne
mov
sbb
xor
ja
or
inc
inc
dec
sbb
and
add
cmpl
push
dec
mov
imull
xchg
jo
xor
int
push
jae
mov
jp
and
in
mov
mov
jle
shrl
lds
testb
lds
cmp
mov
or
mov
xor
mov
pop
sbb
lret
out
mov
test
inc
push
adc
js
jns
xchg
add
xor
test
and
data16
jae
lock
sub
repnz
fsubs
xchg
xchg
adc
fwait
loopne
add
in
scas
or
dec
push
cmpsb
fldt
aaa
into
adc
rolb
movlps
jmp
in
in
loop
shlb
pop
push
xor
jge
imul
jle
in
mov
jp
aas
repz
mov
fcmovu
lds
stos
dec
jmp
sti
aam
mov
scas
sub
xchg
int
xor
daa
inc
test
xor
dec
fbstp
xor
outsb
iret
dec
pop
sbb
cmp
sbb
movsl
cld
adc
inc
jmp
sub
mov
pop
lods
cmp
mov
inc
sbb
fidivrl
gs
adc
or
xchg
ret
sahf
clc
mov
pop
rorl
jno
jmp
stos
xor
xchg
push
shlb
leave
movb
lods
or
shl
sbb
cwtl
loop
mov
xchg
sbb
pop
daa
add
jp
dec
mov
stos
pop
pop
or
in
sahf
imul
mov
jmp
pushf
xorl
push
mov
push
arpl
cltd
cmp
sbb
jo
inc
cld
int
xchg
shll
jecxz
out
sub
iret
dec
mov
shlb
dec
xor
mov
aas
xor
pushf
movsb
push
out
jno
pop
mov
lock
ljmp
jns
std
dec
cltd
sbb
xchg
and
cld
jl
daa
ss
jg
cmp
sub
push
pop
dec
and
das
dec
jo
sub
js
add
cmp
pop
jns
movsl
mov
mov
movsb
mov
ror
lods
loope
cltd
lahf
sub
shl
mov
jns
pop
and
and
add
lock
push
popa
xor
cmp
push
sub
mov
mov
vmovhps
jmp
jno
mov
or
and
sbb
addl
and
sbb
sub
push
adc
sub
roll
mov
hlt
push
inc
cmc
outsb
mov
cmp
xor
imul
fucomi
or
cmc
or
outsl
mov
mov
imul
jle
insl
cs
aam
iret
sbb
aaa
mov
sti
loope
add
inc
mov
jo
or
pop
inc
je
cmp
ret
scas
lret
push
xor
adc
loope
push
mov
cli
xor
fldcw
nop
lods
cmpsb
scas
mov
pop
test
ret
or
orb
daa
sbb
sbb
pop
cmc
mov
adcb
pop
push
cwtl
insl
mov
pop
lea
xorb
loop
aas
fdivs
push
inc
pop
pop
add
stos
pop
loop
add
push
pop
fcoms
and
push
xchg
rolb
scas
jbe
pushf
test
jne
xor
adc
dec
mov
daa
pop
sarl
or
adc
add
ret
or
cmpsb
inc
cmp
jo
push
out
jp
dec
adc
sbb
pop
push
mov
lock
and
fwait
aad
cmp
mov
popf
hlt
out
scas
inc
jg
test
cmp
cmp
insb
push
daa
scas
adc
clc
wbinvd
fidivrl
xchg
or
mov
popl
and
rcrb
dec
mov
fcomip
mov
cmp
jo
adc
and
cmc
das
sub
jg
leave
or
lock
lahf
fldt
in
rclb
sar
cmp
xchg
stos
jbe
pop
xor
movsl
test
pop
lret
leave
and
sbb
add
outsb
sub
dec
int
jbe
rorl
xlat
mov
inc
imul
call
xor
idiv
ds
ljmp
adc
loopne
cmp
enter
inc
sar
pop
cld
sbb
xor
or
fdivrp
add
mov
insb
add
lds
dec
and
pop
pop
and
mov
sub
add
shl
push
scas
add
inc
lret
inc
and
rorl
push
inc
sbb
dec
call
mull
andl
jnp
test
dec
or
scas
out
clc
mov
loopne
daa
or
js
add
pop
add
lcall
push
std
ja
icebp
add
shll
cs
and
fmul
add
icebp
lcall
decb
pop
cmp
inc
jg
jno
movsb
repz
and
loop
fs
loopne
mov
push
imul
dec
popa
mov
inc
xor
pop
pusha
int3
xor
nop
xchg
and
sub
mov
cmp
mov
add
loope
and
ret
jp
mov
dec
fistps
inc
sub
mov
es
jns
dec
sub
push
or
andb
adc
insb
adcb
dec
std
add
mov
cmp
pop
mov
jnp
loop
aas
or
add
or
andl
jno
xchg
sbb
mov
push
popa
push
cld
daa
mov
or
std
das
dec
jge
inc
mov
pop
mov
xchg
outsl
cmp
add
jmp
mov
push
leave
mov
cmp
call
inc
mov
out
lcall
or
jp
mov
adcb
xor
scas
mov
fwait
dec
add
cmpsb
or
cmp
dec
call
adc
js
and
sti
scas
fadds
shl
pop
push
enter
add
ret
imul
cmp
imul
enter
dec
outsb
test
or
ret
dec
aam
push
xor
pop
fs
loop
int
or
mov
xchg
fld
movsb
push
or
test
cmpb
mov
shl
aas
loopne
dec
cmp
dec
dec
popa
sbb
lock
push
pop
rcl
orb
in
adc
jle
dec
call
lret
inc
lds
sub
sti
mov
xchg
js
and
cmpsb
int3
and
aaa
es
sti
aad
mov
rcl
jb
mov
jbe
adc
and
sarb
add
xor
sbb
or
and
or
fistpl
mov
cltd
add
call
mov
test
sub
jg
sbb
aad
or
ret
add
and
movsb
xor
jbe
adc
mov
add
ja
inc
mov
xor
inc
cmpl
ret
pop
lods
jg
mov
pop
mov
or
rolb
jecxz
loop
es
das
lcall
test
pcmpgtw
icebp
pop
loop
push
call
test
adc
sahf
pop
lods
and
bnd
stos
ffreep
push
mov
sbb
fadds
xchg
ljmp
test
push
push
push
add
jmp
sub
repz
bound
mov
mov
inc
mov
pop
rorb
addr16
iret
movsb
mov
sub
mov
adc
popa
inc
cmc
inc
je
xchg
fwait
imul
loope
lahf
loope
jbe
push
pop
pop
es
pop
push
sub
js
adc
add
mov
jnp
cltd
push
sub
and
sbb
sarb
ficompl
or
js
push
mov
and
std
jmp
xor
sahf
sahf
fidivrs
dec
xchg
mov
add
adc
xchg
in
lar
inc
jnp
rcll
cld
jl
add
ret
div
js
pop
sub
sub
jbe
sbb
pusha
daa
mov
mov
sub
test
or
jb
inc
in
imul
or
jl
movsl
mov
xor
push
lcall
jne
adc
xchg
cmp
sub
jle
pop
fst
and
fadd
pop
push
jle
rorb
into
inc
dec
lods
pop
mov
outsl
xor
clc
enter
add
xorb
shll
mov
or
push
lods
jle
imul
inc
pop
out
or
pusha
lock
in
or
cwtl
sahf
addr16
jns
dec
aad
in
push
or
and
push
mov
call
adc
dec
sbb
push
cmp
psubusb
add
xorl
ret
imul
repnz
add
dec
dec
inc
fcmovnbe
nop
mov
div
ja
mov
inc
shll
and
jno
filds
inc
push
lock
fs
stos
pop
adc
comiss
out
cmp
adc
hlt
js
subb
sbb
popa
mov
add
jo
sub
inc
filds
rolb
pop
int3
cmp
inc
push
andps
jb
pmuludq
pop
imul
je
sbb
lods
lcall
out
and
add
xchg
jbe
sbb
pop
pop
mov
sub
lods
inc
mov
and
sub
sub
adcb
idivb
loope
lcall
push
lods
mov
mov
ss
scas
sub
add
aas
pusha
cltd
movl
pusha
mov
push
inc
pop
int
int
loop
jge
mov
outsb
and
sub
xchg
push
rorb
push
add
xlat
inc
sub
add
push
int3
and
lcall
push
push
decb
repz
gs
in
mov
dec
das
xor
xorb
ret
repnz
push
push
cmpb
fcoms
push
popa
ljmp
dec
test
fsub
dec
ljmp
push
push
xor
cmp
push
lods
std
and
test
outsl
icebp
mov
leave
mov
nop
das
jle
js
aas
mov
inc
and
xchg
xor
subb
sti
sub
push
outsb
sbb
fstl
loope,pn
movb
mov
in
int
mov
scas
inc
add
gs
push
aas
hlt
jo
mov
pop
or
xchg
mov
cli
jb
and
dec
addb
xchg
push
mov
jno
fmul
std
mov
xor
int
cld
sbb
add
fst
inc
adc
push
aam
insb
inc
aad
je
dec
sbb
adc
nop
cld
pop
popl
inc
lahf
or
dec
loope
push
adc
adc
add
test
push
dec
add
cli
and
imul
add
jo
mov
xchg
nop
fdivr
fmuls
add
xchg
mov
push
aas
cmp
test
pop
jb
cs
repz
cmpl
adc
in
sbb
ljmp
fbld
mov
and
pop
push
enter
xchg
push
sub
nop
add
sub
aaa
mulb
xchg
inc
rorl
imul
rclb
pop
pop
jge
cmp
dec
hlt
stos
nop
or
addr16
jnp
cmpsb
loopne
jmp
fidivrl
imul
scas
inc
pusha
add
or
xor
cmpsb
mov
mov
rcr
fstl
inc
aas
sbb
loopne
inc
sahf
popf
jmp
sbb
lcall
mov
test
loop
add
xlat
es
pop
clc
and
aam
mov
lock
ret
add
cld
in
je
mov
and
push
movsb
cmp
adc
inc
dec
adc
push
aam
andl
push
ret
ret
rol
mov
push
fdiv
aas
rcrb
lret
dec
pushf
adc
jg
inc
lods
cs
aad
pop
pop
mov
adc
xlat
cmp
lret
lcall
std
icebp
mov
in
les
add
ret
call
inc
test
jmp
cld
jg
xchg
dec
fisubrl
add
sbbb
fimull
cmp
xchg
movsl
sub
cli
push
sbb
push
xor
mov
push
call
das
adc
xchg
push
adc
cmp
mov
add
arpl
mov
loop
jecxz
inc
add
leave
jnp
xchg
sub
xor
push
xchg
scas
clc
clc
lahf
push
pop
jnp
les
xchg
enter
and
mov
ficoml
aam
js
adc
xchg
or
nop
in
jno
push
into
lods
cmpsl
outsl
push
jno
sti
inc
cld
pop
mov
incl
loope
and
pop
dec
sub
cs
and
cmp
out
xchg
add
or
jle
sub
inc
jne
rcll
das
movsb
scas
mov
dec
pop
stos
loop
adc
pop
into
hlt
arpl
mov
hlt
adc
cld
xorl
dec
test
sahf
and
cmpsb
loopne
inc
or
out
add
arpl
xor
ss
push
lss
fmull
push
decb
inc
dec
add
adc
inc
or
faddl
add
xor
clc
cmc
and
adc
xchg
xor
mov
mov
nop
flds
mov
sub
hlt
test
cmp
cmp
ret
mov
pop
and
or
push
mov
and
dec
loopne
jecxz
jecxz
ret
cli
adc
add
dec
xor
nop
jge
adc
in
lods
xchg
clc
add
add
addb
adc
mov
or
cmp
out
pusha
mov
cmp
xor
ret
scas
or
pop
loopne
add
pushf
lods
push
daa
ficoms
iret
rol
xchg
sbb
movsb
xor
int
je
out
push
gs
xchg
lods
and
sub
push
divb
push
test
adc
scas
mov
dec
rcrb
dec
addr16
sar
aas
push
je
cmp
add
mov
jo
push
in
int3
aaa
mov
incl
lock
mov
inc
mov
loope
sti
sbb
popa
in
movsl
mov
inc
lock
or
or
dec
nop
clc
jmp
adc
xchg
jle
or
dec
mov
push
xchg
jl
es
adc
mov
adc
sub
fwait
ficompl
jle
mov
and
push
divl
jns
jl
mov
jp
insl
xchg
push
sbb
add
xchg
outsb
cmp
pop
sbb
enter
js
push
sbb
loop
adcl
and
dec
pop
enter
popl
mov
fmull
psrad
adc
clc
mov
adc
ja
ja
mov
hlt
xchg
xchg
movsb
jae
test
push
idiv
icebp
test
jge
lcall
jle
hlt
xor
out
adc
das
or
dec
cmp
adc
mov
pop
cs
xchg
mov
jns
jmp
push
aaa
and
je
push
dec
test
add
mov
ss
inc
pusha
nop
pop
aas
sbb
movsl
and
push
xchg
nop
mov
andl
and
jbe
or
pop
add
pop
stc
imul
clc
arpl
pop
sbb
xchg
mov
scas
inc
gs
dec
mov
ljmp
rcrl
sbb
mov
add
lods
cmpsb
sbb
pop
movsb
dec
push
pusha
ret
xchg
scas
js
cmp
enter
pop
mov
or
jns
lcall
jp
jne
fstps
sub
andl
test
cld
loope
js
adc
insl
or
push
cmc
rclb
push
sbb
call
pop
mov
adcb
stos
xchg
mov
sbb
loop
mov
pusha
outsl
sub
fbstp
mov
sbb
gs
into
test
inc
mov
add
push
mov
stos
roll
imul
addb
jns
pop
fucomi
push
push
jg
sub
mov
ss
add
addl
mov
nop
jns
lock
lods
sub
adc
sahf
cmc
pop
sub
std
adc
sub
out
mov
rol
fstl
adc
push
and
ret
sub
fistpl
imul
cmp
in
loopne
push
cmpsb
pop
clc
insl
icebp
shll
mov
lea
xchg
sub
js
mov
pop
sub
loope
nop
sub
add
mov
jp
mov
sbb
xchg
cmp
pop
out
ficompl
mov
jne
dec
push
in
daa
dec
fs
push
inc
add
xchg
pop
jp
jle
push
ja
xchg
data16
push
test
push
clc
or
mov
addr16
cmpsb
cmp
scas
push
adc
cmpb
cmpsb
jnp
add
aaa
movl
mov
popa
xlat
test
lods
loopne
mov
mov
mov
repnz
xchg
or
xor
lods
call
adc
inc
sbb
push
mov
cmp
iret
mov
outsl
mov
ret
scas
data16
es
dec
nop
mov
sbb
out
inc
jne
ja
jl
clc
sub
ja
dec
jmp
insb
dec
sub
loopne
dec
stc
pop
aaa
xlat
shlb
and
out
push
lcall
loop
repnz
je
movsl
adcl
pop
inc
push
shrb
cmp
out
cs
out
or
or
mov
inc
cld
and
stos
mov
clc
mov
je
inc
pop
mov
nop
ja
mov
dec
pop
or
lcall
sarl
es
mov
sub
mov
cmp
fs
cli
ffree
das
icebp
or
loopne,pn
and
popa
sbb
sbb
xor
mov
es
push
pusha
adc
sahf
ret
mov
mov
lea
push
fcmovb
inc
bound
adc
mov
into
inc
inc
test
lea
mov
mov
std
sbb
sbb
cmc
cltd
sbb
leave
test
mov
loop
and
push
sbb
xchg
fwait
inc
sub
jae
cli
je
push
xor
mov
xor
movsb
mov
test
xchg
lcall
aas
mov
aam
jg
lock
xchg
inc
mov
fiadds
test
lock
xchg
popa
in
cmp
add
lods
leave
scas
adc
inc
iret
gs
cmc
js
je
imul
push
add
cmp
mov
adc
mov
push
adc
and
in
mov
scas
ret
aad
and
je
fisubrs
push
rcll
inc
dec
jae
jl
mov
xor
add
loope
cmpb
jne
js
fisubs
neg
daa
adc
ror
loop
movsb
ret
cmpsb
mov
xor
pop
lods
decb
add
imul
aaa
and
sbb
cmp
and
test
sbb
les
jmp
fnstsw
dec
or
adc
mov
push
inc
stos
mov
ja
test
jmp
dec
cmp
pop
cli
decl
push
jl
cmpb
add
xchg
stos
cmp
inc
mov
cli
scas
lcall
cmp
scas
sbb
lret
in
test
pop
ret
cmp
jmp
xchg
sbb
jmp
fistl
in
and
adc
in
cmp
push
or
out
pop
xor
addr16
scas
add
sbb
js
push
repnz
scas
mov
cltd
adc
or
ljmp
cltd
mov
fwait
push
push
mov
mov
push
js
mov
jne
movsl
push
jecxz
and
test
sahf
ljmp
mov
loop
shll
cmp
cmp
push
stc
or
rclb
adc
fdivs
mov
xchg
fs
mov
mov
dec
or
inc
mov
add
mov
lock
push
jns
popf
sub
pop
jmp
pop
mulb
cmc
push
ret
outsl
mov
lds
cmp
push
insl
aad
mov
dec
stos
in
aaa
pop
mov
stc
enter
rcrl
mov
and
or
pushf
sbb
mov
push
inc
dec
and
imul
ljmp
jns
pushf
jg
data16
sbbl
roll
or
das
aam
push
cmp
les
xchg
mov
sbb
cltd
mov
mov
xchg
jle
dec
pop
mov
mov
add
pop
and
sub
pop
ljmp
rol
insb
jns
sbb
sub
inc
push
xchg
mov
sbb
insl
sahf
mov
rorb
mov
sub
pop
pop
addb
or
jmp
or
lahf
lret
sub
add
dec
mov
ret
mov
xor
mov
cmp
jge
fmull
cmpsl
cmp
inc
adc
sub
pop
add
mov
pop
cmp
test
aam
lcall
das
push
insb
mov
pop
or
in
loope
fildll
insb
movsl
imul
jle
lods
xchg
dec
inc
sbb
ljmp
sbb
xchg
dec
loopne
xor
push
mov
les
daa
add
inc
dec
xor
test
sbb
pop
shll
ds
dec
lahf
aas
data16
sub
pop
jp
test
push
pop
add
lock
lahf
mov
aaa
xlat
lret
push
pop
ds
test
lcall
lods
adcb
jp
inc
rcr
fimuls
orb
mov
push
loopne
push
incl
aad
jbe
mov
popa
lcall
aam
loope
and
int3
clc
fildll
mov
xchg
or
and
and
add
clc
pop
rcll
lcall
sbb
cmp
outsb
stos
je
mov
insb
xor
mov
add
dec
push
das
mov
and
call
outsl
ja
mov
je
fcoml
pusha
mov
push
call
mov
aas
mov
js
shll
rol
xor
setle
sub
add
push
sub
mov
jno
mov
les
and
int
mov
nop
inc
inc
cld
test
adc
mov
xor
sub
addl
xchg
sbb
xor
mov
jge
sbbb
mov
push
pop
cmp
jl
adc
icebp
lods
addl
sarb
push
daa
sahf
scas
fsubrs
mov
in
jbe
xor
push
jmp
pop
inc
jae
mov
xchg
sbb
sub
rcrl
dec
leave
mov
enter
mov
or
xorb
in
cmp
dec
gs
lret
push
rcll
push
scas
daa
test
mov
inc
mov
ficompl
dec
sbb
pop
stos
lods
and
mov
mov
push
push
out
loopne
mov
scas
sbb
fs
inc
daa
and
fcom
fistpll
scas
or
sbb
daa
pop
sub
shlb
push
clc
push
and
mov
cld
jp
push
mov
into
xor
insl
mov
ss
ret
movsl
sbb
mov
es
inc
loop
stos
loope
ljmp
movsb
subb
test
in
subl
jbe
in
push
call
xor
or
inc
jne
lds
into
lods
and
and
loopne
push
sbb
push
enter
in
lea
xor
scas
scas
or
push
lock
adc
mov
jno
lock
ret
cld
sarl
or
mov
push
popf
add
adc
scas
and
xlat
dec
lea
repnz
xchg
js
sbb
mov
or
clc
add
ss
sub
subl
jle
pop
orb
cmp
lods
add
es
stos
cltd
xor
mov
push
xchg
jmp
sbb
outsl
sub
and
bound
lods
push
testl
push
mov
mov
cld
aas
dec
pusha
jnp
inc
adc
mov
fmul
les
or
sub
xor
sub
scas
jno
hlt
sbb
sub
mov
arpl
pop
cmp
int
mov
in
rclb
pop
and
out
fdivs
sub
sbb
dec
sti
xchg
test
icebp
pop
cmpb
idivb
call
mov
stos
je
bound
mov
fimull
and
rorl
push
lods
mov
mov
mov
push
fdivl
jnp
cmp
xchg
movsl
ret
add
adc
jno
std
call
pop
inc
aad
aam
dec
repnz
sbb
xchg
sub
jb
push
adc
and
loope
sub
cs
xor
rorb
pop
ja
xlat
aad
lahf
pop
test
adc
jmp
pop
test
adc
test
fdivrl
mov
jmp
xchg
or
rorl
mov
clc
cmpsb
cltd
push
cmc
sbb
movsl
int3
mov
das
or
outsb
sbb
js
fsubrs
fistpll
sar
scas
cmp
fdivp
outsl
fs
dec
xchg
inc
pop
ret
lods
call
arpl
cmpb
adc
mov
pop
dec
mov
mov
cli
test
xor
push
and
sub
adc
jp
mov
dec
pop
mov
adc
dec
lcall
sbb
into
lds
shl
dec
mov
xor
jecxz
lcall
in
punpckldq
sbb
ficoms
push
shl
dec
outsb
cmc
mov
sub
mov
and
outsl
inc
sub
xchg
cmp
and
daa
pop
mov
push
movl
dec
out
test
stos
jecxz
mov
jl
lret
nop
cmc
loope
test
addb
mov
cmpsl
test
mov
or
aas
loope
cld
cmc
daa
divl
mov
daa
cmpsl
arpl
push
scas
mov
pushf
fwait
sbb
jle
sbb
aas
lods
sub
addb
imul
sbb
shlb
sbb
xchg
cmpsl
jne
push
cmpsl
nop
cmp
cmp
ret
fs
ljmp
sub
inc
int3
les
shrb
outsb
mov
mov
test
sbb
mov
es
loopne
push
cs
je
and
inc
mov
outsb
jns
push
push
push
or
nop
out
dec
sub
orb
shll
inc
into
xor
icebp
std
loopne
pusha
xchg
lods
scas
dec
loop
lahf
inc
out
mov
ret
cmc
iret
sbb
stos
das
jbe
inc
or
mov
mov
pop
cmpsl
push
sub
lock
shrb
cmp
add
xor
test
std
nop
lock
dec
insb
aam
mov
inc
cmpb
mov
push
call
or
clc
ficompl
cld
jns
or
test
scas
addr16
imul
loopne
xchg
lret
subl
pop
shll
loopne
mov
icebp
mov
fnstcw
mov
push
inc
pop
nop
add
jb
ret
pop
in
jb
or
dec
mov
data16
data16
add
inc
loop
testb
lret
test
aam
xchg
and
pop
push
decl
hlt
lahf
shr
outsl
sub
push
test
nop
mov
icebp
add
in
xchg
in
and
push
imul
adc
add
pop
or
add
inc
das
shr
xchg
call
cmc
xor
dec
fidivs
mov
inc
pusha
pop
icebp
das
loope
inc
mov
test
das
iret
lock
xchg
hlt
aas
sbb
cmp
add
hlt
incl
outsl
mov
pop
mov
pop
dec
cmp
xor
shll
test
aam
call
int3
mov
out
dec
add
mov
jno
or
pop
mov
adc
mov
adc
adc
push
test
cld
mov
jb
je
xchg
sti
dec
mov
push
sahf
sub
push
jns
in
adc
push
addr16
lret
and
dec
loopne
les
adcb
sub
outsl
xchg
fs
jns
pop
call
lret
mov
mov
aad
sub
or
lret
pop
cmp
pusha
xchg
aad
test
cmp
ffreep
mov
inc
test
inc
push
inc
mov
nop
lock
lock
fwait
jl
incl
push
push
call
mov
xor
loope
xor
cmpl
mull
mov
sub
lret
hlt
push
sbbb
jmp
ds
aas
jp
aas
lock
pop
adc
test
lcall
push
pop
lock
fwait
pop
or
das
daa
inc
movsb
adc
cmp
lods
inc
loop
or
sub
lcall
push
aam
fisubrl
cmp
adc
fldenv
imul
and
jge
fmuls
or
lods
jl
enter
mov
scas
sub
jecxz
mov
xlat
push
cmc
fstl
xchg
shlb
rolb
scas
subl
inc
test
sahf
adc
or
lock
jg
ret
cmp
add
mov
faddl
push
outsl
adc
je
or
shrl
lods
cs
popf
push
leave
adc
inc
mov
ret
les
xchg
add
in
setp
movsb
iret
nop
cmp
xchg
dec
add
ss
and
rclb
mov
add
das
pop
pop
clc
loopne
adc
dec
dec
push
pop
jl
cld
add
sub
adc
jle
and
das
jo
mov
or
call
xchg
into
or
jbe
test
cld
ja
cmpsb
test
pop
push
push
cmc
add
mov
or
pop
aas
pop
inc
sub
cli
xor
xchg
out
sbbl
lods
rcrl
sahf
pop
push
lock
lret
pop
cmpb
mov
leave
add
dec
out
lahf
test
mov
sbb
pop
mov
dec
dec
dec
fimull
cld
dec
lods
mov
repz
into
push
xchg
dec
repnz
add
cltd
inc
xchg
insl
adc
lds
sub
add
cmp
xchg
call
mov
push
cmc
leave
mov
out
aas
pop
push
clc
mov
test
popl
repz
jne
jo
nop
negb
sbb
adc
cli
xor
sbb
push
es
sbb
mov
lcall
jg
sbb
mov
push
inc
adc
mov
mov
and
push
and
adc
xchg
push
push
setle
lods
flds
pop
and
mov
fimull
pop
dec
push
mov
lcall
jle
push
mov
jae
dec
outsb
push
fbstp
dec
xchg
test
and
push
jo
or
push
fwait
dec
jl
or
jge
loopne
push
mov
aam
ret
xchg
in
xchg
insb
sbb
out
pop
std
sbb
aaa
cld
or
xchg
and
xchg
scas
adc
cmovp
xchg
movsb
push
mov
xchg
xor
inc
lods
je
mov
scas
adc
mov
sahf
test
and
xor
jns
cwtl
mov
loopne
cli
ret
sahf
mov
clc
xor
cmp
je
jno
xor
add
repnz
divb
mov
stos
fnstcw
int
call
test
adc
inc
hlt
verw
mov
insb
clc
rcr
insb
xor
xchg
bound
popf
dec
insb
jae
pop
sbb
sbb
enter
mov
pop
inc
rolb
icebp
cltd
add
mov
push
pop
stos
mov
cmp
mov
cmp
add
inc
pushf
add
mov
mov
ret
leave
sahf
mov
dec
sub
inc
les
cmp
sub
les
or
inc
sbb
adc
mov
js
pop
orb
add
out
inc
or
jb
jo
sub
and
cs
mov
inc
scas
aam
ja
sub
lahf
sbb
in
rcl
mov
in
insl
push
push
je
les
aas
fwait
aam
sub
arpl
fwait
inc
mov
imul
mov
lcall
sub
and
inc
test
ret
cmp
movsl
jge
js
ret
mov
stc
adc
add
out
cmp
xchg
mov
dec
cs
js
mov
sbb
dec
out
mov
inc
xchg
test
mov
fwait
stc
in
xor
cmc
push
add
dec
sbb
mov
loope
cmp
sub
add
sub
add
cli
iret
xor
jnp
ss
xchg
jge
mov
ficoml
test
loopne
insl
cmpsl
lds
jl
out
ret
and
loopne
xor
mov
in
shrb
xor
inc
pop
outsb
pop
and
xchg
xor
movsl
ja
imul
and
mov
out
and
adc
popf
cmp
mov
xchg
push
dec
in
rcl
mov
pop
and
shlb
adc
in
jbe
adc
mov
jg
push
fmul
cld
rolb
stos
daa
xor
scas
test
test
icebp
cmpsl
outsb
push
in
outsb
mov
test
pop
gs
fldenv
inc
dec
xor
outsl
clc
sub
xchg
mov
or
scas
xor
mov
mov
dec
add
xchg
divb
and
out
popf
inc
mov
add
nop
pop
call
jp
push
push
push
mov
push
cmp
xchg
sub
stc
or
je
sub
jb
add
xchg
andb
sbb
les
push
jmp
loope
pusha
inc
mov
lods
mov
mov
or
loope
out
mov
push
and
ja
movsl
stos
xor
sbbb
dec
test
pusha
xchg
mov
test
sbb
je
and
mov
imul
outsb
nop
into
mov
xlat
and
xchg
jmp
rclb
and
xchg
mov
sbbl
stos
hlt
clc
das
pusha
sub
enter
insl
jge
rcrb
cmpsl
sub
cmp
and
ret
inc
mov
push
rorb
jns
out
fisttpll
arpl
test
add
mov
pop
mov
push
insb
clc
xchg
push
popa
jg
add
pop
fisubrl
sub
aas
adc
push
frstor
push
das
repnz
lcall
sub
mov
add
dec
popa
xor
add
out
mov
mov
popa
sti
mov
mov
iret
xor
addr16
push
sbb
push
or
pop
sbb
pop
fbld
test
pop
push
dec
push
adc
sbb
xchg
xchg
lea
push
and
ret
pushf
clc
aad
jge
lcall
adc
sbb
xor
jle
mov
xchg
insl
and
cmp
pop
enter
add
jae
cmc
imul
sahf
loop
inc
je
aam
out
dec
mov
add
pop
or
test
mov
out
cmp
leave
cmp
mov
hlt
and
pop
in
xchg
lock
inc
fldenv
pop
lods
xchg
movsl
cmc
xor
call
clc
dec
cltd
lcall
xchg
mov
nop
retw
je
mov
xchg
pop
inc
jg
jae
xchg
cld
aam
fisubrl
lods
das
out
adcb
pop
fcoml
jle
fistpll
or
adc
mov
enter
int
push
or
dec
push
dec
rolb
xchg
ss
jp
adc
jp
loopne
lret
popl
loop
push
pop
pop
test
xchg
xchg
mov
test
xor
dec
bound
pop
popa
cs
or
cmp
popf
cmp
mov
dec
add
adc
addr16
scas
fidivl
mov
insl
fdivrs
pop
dec
cmp
aaa
push
dec
and
ds
adc
aam
int
dec
inc
add
test
imul
xor
lock
imul
imul
xchg
sub
cli
push
mov
adc
mov
divb
outsb
mov
mov
fimuls
out
lcall
mov
repz
fldt
or
xor
insb
pop
push
ljmp
mov
test
std
lods
pop
insb
bound
cmp
shl
es
add
xchg
dec
dec
cmpsl
xchg
sbb
fcoml
inc
push
pop
xor
into
and
cmpsl
xchg
aaa
fsub
jp
sub
insb
mov
jg
mov
pushaw
arpl
cmpsb
rcrl
mov
fisttpll
repnz
and
or
mov
add
clc
cmp
imul
pop
lock
call
dec
mov
into
push
test
sub
dec
adc
push
sbbl
loop
divb
rorb
add
lods
pop
gs
push
mov
inc
aam
test
or
leave
sahf
ret
cmp
gs
pop
xbegin
fmulp
lods
push
xchg
andb
fmuls
cmpl
pop
pop
inc
jmp
mov
shrl
add
pop
jno
mov
dec
inc
sbbb
mov
sub
jo
jp
push
dec
rcl
sbb
mov
sti
xchg
in
jle
mov
std
mov
add
cld
dec
pop
fdivrs
and
jp
pushf
ss
jmp
movb
or
cmp
xor
arpl
cld
add
xor
add
cmp
xor
vcvtsd2ss
aam
mull
inc
pop
dec
rorb
sub
dec
mov
mov
inc
cmp
cmp
jmp
dec
es
fnsave
pop
ss
ss
cmpsb
je
nop
leave
movsb
dec
mov
dec
pop
shl
push
shlb
aam
pusha
mov
std
xor
and
add
or
xchg
cmpb
ljmp
cmp
mov
xchg
fisubrl
or
or
pop
ss
in
test
mov
cmp
loopne
dec
cld
into
aam
jno
or
cs
pop
ja
aad
sbb
ds
xor
aad
popa
test
add
and
add
adc
push
lret
mov
add
andl
push
mov
jo
fsub
pop
ret
out
pop
pop
push
jge
sub
in
inc
cmp
push
int3
cmp
and
lahf
cmp
inc
mov
push
out
shlb
jp
rcll
ja
push
sub
jp
mov
pop
icebp
mov
adc
sbb
pop
bound
push
mov
in
stos
mov
repnz
popf
popa
aas
mov
fildl
adc
add
aam
add
push
mov
orb
mov
sub
cmc
xor
enter
pop
jle
xchg
hlt
inc
movsb
rolb
inc
or
cmp
mov
sub
mov
aad
add
scas
mov
js
sbb
push
loope
ss
fnstsw
repz
or
in
cmpl
cmp
adc
cmp
push
jge
and
mov
push
cmp
ljmp
bound
fsubrs
rol
xchg
nop
loop
and
mov
push
mov
fwait
sbb
add
or
mov
mov
add
inc
and
into
adc
xor
xor
loope
push
add
push
xchg
scas
mov
push
and
push
das
pop
andl
xor
movsb
cmp
in
cmp
aad
pop
insb
fsubrl
xor
and
dec
push
mulb
add
inc
ficoms
push
sub
xchg
xchg
inc
or
cltd
rolb
inc
and
xor
and
dec
adc
lock
mov
sub
push
push
cmp
mov
iret
xor
fwait
cmpsb
test
decb
jge
sbb
dec
mov
and
mov
shll
jle
pop
push
mov
cvtpi2ps
rorb
repnz
fbld
mov
movsb
dec
ret
pop
test
pop
pop
jne
push
mov
or
dec
mov
push
cmp
inc
cld
les
add
inc
idivl
jle
ja,pt
inc
inc
mov
dec
insl
mov
push
std
outsl
xor
lea
dec
lcall
dec
int3
imul
rorb
iret
daa
ffreep
push
jg
adc
arpl
add
aaa
jne
fcoml
push
mov
xor
rclb
cltd
jo
xor
mov
cmp
inc
cli
dec
jb
add
repnz
pop
fnstsw
incl
and
aaa
xor
js
jle
xor
push
adc
xchg
mulb
int3
jmp
mov
add
clc
xchg
sub
adcb
adc
sbb
movsb
xor
or
push
or
pop
iret
imul
dec
xor
movsb
pop
sub
fincstp
inc
stos
arpl
movsl
lods
mov
mov
pop
adc
xorl
mov
rcll
icebp
inc
subl
loope
dec
inc
or
cld
lea
sahf
pop
xor
sub
aaa
je
xchg
dec
sub
loopne
fsubl
xor
lcall
dec
and
jp
push
ds
xor
clc
into
push
add
jae
out
jmp
fdivl
sub
inc
push
xor
add
mov
sti
clc
and
inc
adc
fs
mov
xor
mov
stc
rclb
and
jae
sub
or
jo
sub
mov
add
and
mov
fmuls
das
scas
push
dec
and
pop
hlt
loope
aaa
sarb
add
adc
and
je
mov
call
stos
push
fisttpll
push
clc
lods
cvtdq2ps
pop
mov
pop
mov
inc
loop
xchg
fwait
ja
and
test
adc
int
mov
insb
aaa
cwtl
adc
inc
push
test
mov
sbb
push
fsubrs
xchg
lea
adc
add
push
add
stos
shll
lods
out
xor
add
stc
xchg
inc
lods
and
clc
jns
dec
inc
enter
inc
rorl
push
popf
mov
test
ficoml
mov
xchg
test
jmp
xchg
mov
popf
mov
jno
stc
jno
divl
adc
mov
orl
mov
loope
xchg
xchg
loopne
cmc
pop
adc
cmp
adc
loope
mov
mov
xor
test
arpl
pop
cmpsl
add
bound
mov
xor
sbb
xchg
cmpl
lock
pop
cmp
cmp
dec
mov
fwait
lods
mov
sub
mov
std
stos
add
push
jl
mov
inc
cmpsb
je
xor
fstpt
jecxz
or
inc
jge
cmc
inc
pop
mov
cmp
popf
xlat
add
push
call
mov
loope
push
sbb
lcall
nop
cmp
loopne
dec
jle
adc
sbb
fwait
jns
xchg
fwait
pusha
add
and
push
mov
xchg
iret
out
les
icebp
pop
lock
mov
xchg
out
fcomi
lods
ret
adc
imul
lret
xchg
dec
xlat
movsl
lahf
pusha
lahf
xor
dec
jo,pn
in
rcl
int
sub
fwait
cmc
sub
pop
dec
rorb
push
jg
mov
movsl
aam
aad
jp
test
adc
push
or
and
aaa
shr
iret
dec
aas
push
sub
popa
cmp
adc
jne
daa
cmpsl
cmpsl
jmp
ljmp
sbb
dec
cmp
fcompl
mov
xchg
adc
sub
lret
inc
xchg
pop
mov
cmpsl
mov
and
subb
lock
and
jb
sahf
adc
mov
insb
pop
or
fnsave
mov
negl
sub
inc
insl
adc
mov
lcall
ficoml
scas
dec
jp
jmp
in
ss
mov
dec
call
mov
inc
mov
jae
shld
stos
sub
outsb
insl
add
adc
push
xchg
lcall
test
test
lret
fsubr
lods
dec
mov
xorps
xor
int3
imul
pop
inc
xchg
push
outsl
aad
xor
fstps
cmp
sbb
movsb
cmpsb
sarl
sti
dec
jmp
test
sbb
mov
add
inc
push
dec
pop
popa
in
add
and
mov
inc
loopne
sub
xlat
add
xchg
push
orl
adc
test
addr16
shlb
push
test
and
sub
das
inc
loop
pop
mov
jnp
adc
pushf
lods
icebp
in
cmpsl
sbb
call
dec
popf
mov
andb
jbe
mov
adc
push
loop
pushf
lods
sbb
shr
in
lcall
jbe
jmp
loopne
cli
add
lods
push
imul
daa
out
mov
mulb
or
xorb
cmpb
adc
cmpsb
arpl
mov
or
xchg
add
adc
inc
fucomp
insl
faddl
and
je
dec
in
mov
nop
mov
std
or
rorb
aam
orl
jnp
push
pop
int
jl
sbb
or
aas
test
into
sbb
sub
push
sbb
xchg
push
and
pop
dec
pop
adc
or
test
addl
das
insl
shll
push
hlt
sub
mov
mov
pop
add
gs
cld
push
mov
lods
jecxz
shrb
mov
pop
inc
out
shrb
fwait
rorl
add
shrb
mov
ds
push
pop
out
imul
cmp
fisubrl
jle
movsb
outsb
mov
ds
in
mov
pusha
sbb
clc
xor
pop
les
jne
loope
sbb
ret
sbb
inc
in
lock
enter
xchg
sbb
jns
call
push
adc
sub
mov
pop
pop
sbb
pop
test
jns
push
adc
inc
iret
cmpsl
loop
jg
mov
cmp
inc
sar
jecxz
imul
adc
add
cltd
out
js
xchg
push
sub
pusha
dec
dec
jecxz,pt
mov
lea
push
test
push
sbb
popl
sub
dec
insb
xchg
dec
leave
cmp
pop
sarl
movsb
les
jbe
mov
popa
pop
into
adc
pop
push
push
fsubp
mov
fdiv
adc
jge
das
push
arpl
lods
scas
aad
xor
push
aaa
inc
mov
push
add
pop
push
stc
jbe
lock
mov
jp
xor
adc
push
inc
popf
sub
arpl
shlb
adc
mov
in
adc
lret
loope
sbb
out
adc
sbb
sbbb
imul
and
add
and
loopne
cwtl
loope
test
pushl
sarl
and
jecxz
jmp
mov
scas
test
test
inc
pop
add
cmp
inc
xor
pop
scas
inc
cmpl
push
lock
fsubp
lods
push
loope
push
repnz
roll
lcall
std
push
imul
push
aam
out
inc
ret
movsb
xchg
mov
dec
lret
inc
sti
and
pop
dec
pop
iret
movb
stc
pop
xchg
sbb
sub
call
mov
pop
js
shlb
mov
stc
inc
mov
inc
and
cmc
test
sar
lods
jno
pop
jo
sbb
pop
test
lods
adc
lock
les
adc
mov
fisubs
push
lock
notb
lods
aam
pop
and
fimull
push
popf
dec
lods
xchg
xor
dec
sti
mov
cmp
or
jns
and
add
fstpl
notl
jnp
dec
jno
fwait
sbb
cmc
stos
rcrb
stos
xchg
int3
icebp
fdivs
mov
popa
arpl
fwait
xor
mov
fnstsw
pop
add
cmp
flds
js
dec
rcll
test
int3
dec
sbb
loop
adc
orb
mov
inc
push
mov
jge
xor
xchg
pop
push
pop
pop
stos
lea
cmp
cmp
add
lcall
ja
jl
out
es
cmp
lods
jge
out
movsb
inc
push
arpl
xor
or
pop
mov
sbb
stos
fucomi
push
movsl
leave
mov
inc
cli
je
data16
roll
adcl
pop
mov
push
jbe,pt
int
pushf
push
popa
xor
pusha
fwait
mov
sub
mov
cmpsl
or
jp
mov
sbb
aaa
sub
inc
mov
stos
or
cmp
mov
ja
aad
adc
dec
xchg
dec
ret
mov
imul
data16
jb
into
add
add
inc
movsb
call
gs
das
loope
add
int3
pusha
jae
xchg
dec
jl
scas
ret
pop
iret
out
mov
dec
push
mov
ret
push
punpckhbw
pop
pop
jecxz
out
inc
pop
xlat
pop
imul
xorl
dec
or
sbb
je
out
daa
dec
pop
mov
xor
xchg
inc
xor
adcb
jb
add
dec
dec
add
sub
stos
jne
pop
push
and
sbb
pop
mov
add
sbb
fcmovb
scas
mov
jge
inc
outsl
mov
sub
aad
pop
adc
popa
push
mov
push
cli
scas
push
pop
cmpps
aam
jbe
fisttps
mov
pop
and
aad
popf
loopne
lods
lods
sbb
lea
rorl
mov
inc
mov
bound
sub
push
lahf
jnp
enter
in
mov
subl
and
jnp
aad
add
and
ss
dec
push
cwtl
mov
rcrb
or
and
movsl
mov
stos
sub
inc
ds
cmp
dec
in
mov
lcall
mov
xchg
cmpsb
inc
addl
xchg
and
aad
fildll
popf
lock
or
negl
mov
mov
inc
xor
js
ja
in
jge
jns
xor
imul
fwait
jl
add
jg
icebp
daa
sub
and
add
mov
cltd
test
icebp
pusha
incl
popf
pop
adc
adc
rolb
das
sub
adc
inc
ret
out
mov
mov
pop
mov
xlat
stos
mov
int
xchg
scas
push
cmp
mov
sub
mov
mov
sub
arpl
leave
inc
stos
sub
clc
adc
adc
push
cmpsb
lret
push
mov
lea
mov
and
pop
push
fsincos
xor
test
jns
adc
aam
sbbb
jp,pn
xchg
icebp
xchg
fcmove
jo
mov
fistpl
jne
jmp
aas
or
push
pop
aaa
xchg
rorl
psllq
pop
sub
or
in
and
or
orb
jnp
pushf
adc
call
outsb
into
or
xchg
in
lahf
add
movsl
sub
jle
shlb
and
add
add
jmp
loop,pt
pop
adc
fmuls
xchg
out
fsts
pop
popf
mov
lahf
push
inc
dec
test
lea
push
clc
mov
fldl
inc
mov
mov
inc
adc
jmp
sbb
fadd
call
in
popf
incl
js
add
lods
jnp
jno
aam
negl
mov
cli
dec
dec
pop
xor
jne
insb
int3
or
inc
pop
jnp
cmp
push
in
mov
pushl
or
int
aam
data16
imul
push
push
mov
mov
push
cmc
imul
hlt
xchg
fcmovnu
sbb
add
jp
fcomip
dec
test
adc
fcompl
scas
lock
cmp
imul
cli
and
clc
je
add
inc
pusha
sbb
and
jp
mov
cmc
loop
ret
js
push
and
shl
jg
aad
sbb
add
call
mov
xchg
loopne
js
shr
lds
inc
je
cld
push
mov
or
mov
jg
jmp
inc
mov
sbb
ljmp
push
aam
jecxz
daa
movsb
push
sti
jmp
push
mov
ljmp
subl
ret
xchg
daa
sahf
sahf
inc
mov
xchg
movsb
pop
jecxz
ja
xor
popa
shlb
xchg
mov
mov
mov
push
or
sbb
pop
jp
lods
inc
mov
xor
add
sbb
not
insl
loopne
shl
and
shrl
xchg
adc
int
lock
stc
dec
cmp
mov
dec
loopne
xchg
xor
enter
shl
jg
add
and
mov
mov
sbb
cmp
add
or
cmp
push
xchg
or
cmp
fsubrl
in
mov
pusha
push
test
or
sub
and
pop
lods
xchg
iret
mov
dec
xchg
fadds
mov
adc
daa
and
dec
pop
adc
push
jo
mov
test
dec
jge
push
repz
dec
mov
jbe
les
mov
gs
inc
pushf
xor
cmp
pop
into
scas
lea
dec
loop
das
sub
or
push
scas
hlt
ljmp
xchg
andb
mov
cmp
sysret
clc
shll
leave
fcmovu
sbb
aaa
xchg
cmp
test
sbb
mov
cmp
lods
mov
jecxz
dec
add
inc
push
dec
mov
sub
push
ret
cwtl
aam
xor
push
out
pop
add
bound
inc
paddusb
scas
clc
push
add
dec
jns
jp
out
outsb
fdivrs
mov
cmp
movsl
cmc
rol
sbbb
jle
stos
call
daa
xchg
jle
mov
psubd
rclb
pusha
fcmovne
nop
in
stc
cld
jle,pt
mov
dec
into
sub
mov
sub
cs
icebp
jge
insl
push
mov
fstpt
dec
and
or
hlt
sbb
pop
and
mov
mov
insb
lret
inc
inc
aad
add
test
iret
out
test
loop
jmp
dec
jnp
pop
imul
aam
ret
inc
inc
gs
push
and
stos
sbb
pop
cs
movsl
cltd
int
aaa
add
loopne
sub
mov
pop
ja
sbb
inc
adc
and
fwait
bndldx
jae
mov
jmp
xchg
rclb
iret
and
xor
push
jmp
or
jne
dec
xor
es
sahf
cwtl
mov
das
xchg
or
imul
cmc
mov
push
xchg
cmpsb
jge
and
subb
and
fucompp
call
mov
cltd
sbb
mov
add
mov
lea
sub
pop
add
cmp
mov
lock
xchg
into
jle
push
rcrl
insb
mov
cmp
fdiv
mov
or
xchg
push
dec
mov
mov
or
and
pop
pop
adc
leave
push
push
cmp
mull
nop
lock
dec
or
xchg
xorb
xchg
or
lods
dec
and
or
jl
mov
pushf
cltd
addr16
lods
clc
dec
fs
mov
bound
insl
aaa
or
xchg
adc
push
push
cs
aaa
xchg
add
or
jecxz
push
jl
mov
xchg
mov
pusha
aas
out
or
aam
pop
xchg
mov
xorl
sbb
push
xchg
loopne
cmp
sbb
in
jo
iret
add
mov
pop
dec
push
mov
push
les
add
outsb
outsb
into
cli
in
lds
xor
and
clc
cmc
cmc
icebp
pop
jge
pop
in
push
les
scas
sub
mov
push
adcb
or
scas
ds
cmp
aaa
sbbb
cltd
cwtl
and
jge
scas
les
push
cmc
dec
jl
fcompl
jge
push
xorb
rcll
pop
or
inc
fidivl
dec
adc
push
jno
clc
movsb
mov
jo
les
jne
std
pop
scas
in
adc
mov
inc
or
xchg
daa
sbb
in
jne
ret
cmp
push
pop
clts
or
or
xchg
and
ds
and
mov
sub
inc
lahf
and
or
inc
ljmp
std
popa
xchg
push
int3
sysexit
fdivl
jle
nop
adc
insb
adcb
add
fucomp
xchg
adc
mov
notl
push
adc
mov
decl
mov
js
xor
xchg
stos
inc
jle
cwtl
push
mov
fisubl
add
adc
inc
adc
adc
pop
inc
fidivrl
int3
lcall
clc
cltd
sub
add
ja
xor
scas
lret
push
xor
int
ljmp
mov
mov
or
mov
sbbb
xchg
nop
testl
iret
nop
sub
fincstp
dec
icebp
icebp
xchg
inc
dec
movsb
lods
cmp
mov
pop
add
or
mov
inc
subb
push
add
enter
shr
cld
sbb
stos
jo
mov
les
fildl
pushf
sbb
xchg
xor
mov
lods
inc
cmp
pop
inc
je
xor
cmp
pop
or
shl
or
mov
mov
pop
sub
and
fidivl
sub
inc
or
cmp
adc
add
push
nop
jne
dec
or
test
scas
pop
mov
inc
arpl
into
xor
aam
cli
sub
fwait
imul
icebp
shlb
or
and
push
mov
mov
sti
jecxz
inc
dec
les
js
sbb
dec
loop
insb
scas
cmc
push
icebp
call
sub
les
stos
adc
add
cmp
pop
rcll
mov
push
ss
cmpsl
das
cld
xor
jmp
int3
sub
je
lcall
add
dec
rol
sbb
pop
clc
fdivrp
inc
add
jmp
les
push
fcoml
fdivp
in
rolb
push
add
jno
repnz
ror
ja
jbe
movsb
ds
lret
mov
lahf
mov
outsl
add
aad
jg
cli
orl
movsb
dec
push
rolb
lahf
xchg
loop
insl
adc
xchg
cmpsb
jge
fdivrl
in
cmc
push
int3
push
pop
sub
mov
or
fiadds
xor
in
add
pop
nop
rcrb
fs
jne
sub
orl
jns
mov
lahf
jl
pop
cs
shll
push
sub
popl
jle
lds
mov
cld
rcrb
les
mov
popaw
lea
mov
sub
int3
jl
ss
ret
insb
mov
add
out
dec
push
mov
xlat
sbb
ds
ljmp
xchg
sarl
arpl
mov
adc
jge
enter
jp
cmpsb
es
xor
addr16
les
xor
dec
mov
leave
nop
lret
test
or
loop
push
test
test
pop
pop
jecxz
cwtl
fadds
fisubrs
and
pusha
push
arpl
call
dec
loop
aam
and
repz
mov
dec
stc
lcall
stos
loopne
arpl
mov
es
je
fwait
or
cmp
rcll
and
cli
popf
into
lahf
nop
bound
mov
bsf
mov
cmpb
and
loope
inc
sub
mov
js
xchg
sub
add
in
xor
je
das
adc
mov
js
add
xor
xor
pop
adc
sbb
and
adc
flds
out
cmp
je
add
pop
aas
loopne
lcall
mov
xor
incl
dec
movsl
inc
sub
cli
add
mov
adc
inc
mov
fwait
mov
ds
cld
shl
dec
sbb
pop
aas
add
inc
sti
adc
bound
cs
rcrl
rcrb
shrb
div
cmp
mov
insb
push
imul
lret
daa
mov
sbb
pop
sub
cltd
jle
stos
ds
add
dec
add
push
mov
jle
stos
pop
adc
js
in
and
dec
jnp
mov
enter
inc
test
and
mov
push
cmp
xchg
pushf
lock
movsl
sbb
cmc
xor
bound
inc
std
adc
mov
push
cmc
inc
jae
mov
imul
adc
xchg
and
cltd
sahf
mov
push
stos
jno
mov
mov
imul
cmpsl
add
push
mov
add
pop
or
cmp
je
not
js
sub
adc
mov
clc
inc
pop
ss
or
out
sub
fistl
ljmp
mov
int3
jp
adc
icebp
je
es
jo
nop
insb
cmp
sbb
shll
int3
inc
hlt
int
jnp
pushf
adc
lret
or
popa
daa
test
in
hlt
rcll
es
lcall
std
or
lahf
testb
loop
push
ss
popa
repz
in
xchg
adc
xchg
je
das
xor
pop
and
inc
aas
fadd
jbe
test
lret
xchg
inc
gs
jge
in
xor
ds
jae
and
cmp
clc
sbb
cltd
and
aaa
test
mov
mov
mov
sub
stos
add
push
outsb
xor
inc
inc
mull
cmpsb
dec
mov
inc
arpl
pop
loop
push
aas
dec
or
lret
dec
push
jo
mov
xor
cmp
jae
mov
xchg
jle
mov
rcll
mov
add
inc
push
lds
ljmp
pop
imul
dec
mov
mov
sub
imul
jmp
es
jge
xorl
jbe
mov
inc
inc
cwtl
push
push
sahf
dec
call
add
xchg
xchg
nop
or
mov
jo
js
scas
mov
mov
sarl
rcl
idivb
mov
pop
jl
loopne
fistpl
push
inc
add
fistps
das
push
mov
pop
mov
ds
cmp
dec
jae
fnsave
les
mov
inc
enter
mov
sbb
loop
sub
rcll
pop
or
loope
adc
lret
xchg
and
or
mov
lods
call
call
test
out
sbb
push
add
push
mov
mov
dec
subl
imul
cmp
mov
inc
pop
jecxz
mov
enter
mov
push
pop
add
or
fsubrl
adc
scas
pop
adc
aad
mov
xor
das
push
adc
cmc
stc
jge
iret
mov
fwait
xor
les
ljmp
fcomps
mov
xor
inc
inc
sbb
sub
outsl
adc
scas
adc
push
movsl
cli
jle
loop
pusha
scas
push
ficompl
and
push
push
aad
push
adc
movsl
js
pusha
inc
add
repnz
push
mov
bound
mov
mov
pop
out
clc
jg
pop
mov
sub
inc
in
lock
jae
mov
fisubl
mov
adc
or
hlt
sti
pop
sbb
push
sub
in
or
sub
test
test
movsl
icebp
jp
cli
aam
mov
faddl
loope
cld
inc
mov
les
bound
mov
out
cs
dec
push
cld
mov
ss
jl
push
jb
add
or
je
xchg
add
mov
and
repz
xlat
push
add
mov
lock
sub
aaa
cld
loopne
push
cmp
jno
xor
jmp
imul
insb
mov
enter
rcr
jo
or
mov
ds
and
daa
jne
sar
xchg
aad
and
push
loopne
imul
loope
inc
sub
cmpsb
mov
leave
aam
or
mov
lock
stos
ss
test
inc
mov
out
cld
jle
cmp
cmp
xchg
mov
mov
or
imul
inc
add
and
mov
inc
stos
jmp
cwtl
xor
jg
cmp
pop
and
lock
mov
lret
dec
out
int3
rolb
mov
gs
mov
xor
cs
jmp
out
call
test
push
int
enter
and
dec
aad
sub
data16
ret
pop
sbb
mov
inc
loopne
add
fstps
into
pop
adc
or
addl
pop
xchg
dec
bound
pop
dec
xor
loopne
fbstp
sbb
adc
bound
in
mov
lret
int3
jae
xor
sub
loopne
mov
cs
loop
call
push
stos
jno
sbb
lods
adc
in
pop
inc
push
cmp
add
sub
fdivrl
imul
mov
add
push
rorb
inc
popa
cmpsb
dec
push
inc
mov
mov
jne
adc
push
sbb
ret
pop
ja
push
rcll
clc
push
rolb
inc
nop
push
lret
cld
in
aaa
inc
loope
inc
jge
addr16
loop
imul
lods
shll
and
stos
adc
sahf
je
push
pop
cli
bound
pop
loopne
cmp
mov
jle
test
mov
cmp
js
les
mov
les
mov
add
jb
inc
sub
mov
sahf
adc
pop
arpl
sub
movsb
faddl
clc
adc
inc
int3
xchg
mov
lahf
pop
xchg
jno
arpl
lods
mov
mov
or
dec
popf
xor
hlt
inc
inc
das
cmp
fadds
dec
push
cmp
jg
mov
or
cwtl
adcl
push
into
xchg
test
xchg
pop
mov
add
mov
push
movsb
jnp
inc
jmp
mov
jo
adc
sub
ja
test
mov
add
sti
jge
mov
mov
mov
push
sub
pop
sub
xchg
je
sbb
mov
mul
push
adc
loop
mov
or
inc
xchg
movsl
xchg
adc
push
jne
dec
cmp
inc
jp
popf
iret
sub
sti
or
push
lock
inc
andl
cmp
sub
stos
out
push
dec
lcall
lods
add
scas
cs
add
adc
leave
call
lods
fdivl
movsl
insl
sbb
repnz
add
add
popf
shrl
dec
nop
jmp
and
sahf
es
or
les
pop
sbb
xchg
rdtsc
cmp
ss
cmpsb
push
bound
dec
push
push
fcomps
mov
push
xor
lock
dec
jp
insb
and
and
lcall
clc
aad
sti
or
hlt
mov
lret
cmp
or
or
cmp
inc
adc
inc
xchg
xor
mov
cwtl
negb
xchg
adc
mov
mov
cwtl
fbld
jmp
mov
adc
and
lods
mov
andb
ljmp
push
ss
mov
aaa
out
js
shlb
adc
adc
or
mov
add
icebp
jmp
stos
je
adc
test
inc
mov
cmp
mov
in
movsl
mov
or
dec
rcrl
jb
cmc
mov
out
mov
jbe
lods
adc
sbb
xchg
mov
movsb
jb
shlb
lar
sub
cmp
add
sub
jl
sbb
push
push
jne
add
jmp
xor
pop
add
mov
mov
adc
or
pusha
jg
hlt
adc
ror
out
or
aas
ret
xlat
jmp
pop
cltd
sub
mov
sbbb
pusha
incl
daa
ja
and
add
jnp
scas
and
sub
notb
xor
sbb
enter
out
scas
call
or
cmc
sub
fmul
xchg
and
adc
add
inc
rcl
in
pushf
add
cmp
pop
mov
pop
call
lret
push
jp
pop
mov
or
rcrl
scas
int3
push
add
in
data16
and
cwtl
ret
dec
movsl
push
or
pop
inc
add
pushf
xchg
js
push
adc
xchg
cmc
xor
ds
enter
repz
mov
out
rorb
mov
shl
add
les
jnp
in
aam
loop
pop
movsl
clc
int3
or
pop
mov
in
dec
adc
repnz
pop
stos
lock
mov
xchg
lret
pop
mov
js
lea
jbe
jp
std
aas
or
movsb
inc
push
lcall
sbb
in
fcoms
pop
aad
mov
and
mov
mov
call
outsl
cli
aas
xor
bound
repnz
js
test
shll
adc
aad
and
testl
xor
lds
pop
aam
sbb
mov
mov
icebp
loope
push
jnp
movsb
pushf
bound
das
test
add
jbe
push
imul
mov
push
pop
dec
mov
pusha
dec
push
or
adc
movsb
sti
pushw
cli
sub
scas
les
pop
mov
in
xor
int
pop
mov
pop
outsl
mov
lds
cld
push
xchg
inc
shrb
add
mov
adc
mov
inc
sub
cmp
or
insl
mov
sbb
cmpsb
ret
shlb
clc
xchg
add
pushf
or
fcomps
shll
mov
cmpsb
mov
sbb
fsub
pop
sbb
push
or
jo
stc
mov
cmp
aaa
test
inc
cmp
sub
aam
loopne
stc
xchg
icebp
or
pusha
out
inc
out
pop
mov
inc
movsb
cmpsb
pop
cmpl
dec
push
xchg
pop
sbb
test
push
xchg
jmp
mov
sub
push
jno
leave
pop
adc
sbbb
or
push
inc
push
aas
stos
ljmp
loope
sub
jl
xchg
sbb
ret
jo
lock
mov
repnz
dec
mov
push
xor
mov
pop
xor
sti
fisttpll
scas
and
pusha
movsb
rolb
mov
enter
push
fidivs
pushf
dec
shll
rcrb
cmpsl
push
mov
out
addr16
mov
movsl
dec
dec
xor
dec
aam
pop
cmp
xor
std
sbb
push
mov
mov
mov
scas
mov
insb
rolb
xor
clc
ret
xchg
movsl
sarb
lock
and
pop
mov
jle
test
inc
or
jb
sbb
cli
fildl
dec
popa
cs
mov
enter
or
lods
rclb
push
adc
jg
pop
sub
test
outsb
sbb
jno,pn
push
or
or
sbb
shrb
ss
sbb
mov
testb
or
pop
sbbb
rol
add
lret
pop
add
xor
nop
xor
cltd
ret
jae
scas
xlat
push
das
mov
jno
xchg
shll
inc
inc
in
mov
subl
ja
cmpsb
or
mov
xor
ljmp
and
pop
sbb
jo
frstor
movl
dec
cltd
je
and
adc
clc
inc
js
cwtl
xchg
push
sub
cmp
ret
iret
sbb
dec
movsb
push
lods
aam
cwtl
mov
aaa
lods
mov
clc
dec
fldl
mov
incl
mov
mov
push
xchg
mov
jg
mov
iret
xchg
mov
jmp
dec
xchg
xor
add
cs
mov
loope
sarl
cmp
mov
adc
mov
cli
jg
lret
es
les
xchg
push
xor
aam
xchg
sahf
lock
cmp
ficoms
adc
jg
jg
add
stos
mov
jecxz
mov
push
push
fwait
in
icebp
xor
push
ss
cmpsl
nop
inc
lret
testl
push
shr
rdpmc
inc
ds
scas
imul
mov
adc
push
jo
sahf
pop
mov
dec
mov
push
fcomi
mov
nop
dec
mov
in
cmpsb
fisttpll
das
scas
popa
test
and
test
mov
add
into
loope
mov
xchg
mov
in
popf
mov
pop
jl
adc
mov
pop
push
dec
in
xor
xchg
mov
sbb
lods
outsb
lret
sub
fld
or
or
push
test
inc
adc
es
fnstsw
sub
add
sbbl
movsl
daa
or
pop
enter
je
sti
cmpsl
adc
adc
add
das
mov
xchg
jg
and
xchg
lcall
mov
pop
popa
jge
mov
inc
dec
pop
addl
adc
jne
shll
jnp
lds
clc
loopne
sub
insb
xchg
dec
push
call
std
shl
mov
sbb
jbe
adc
xchg
jb
lock
lahf
lea
addr16
js
lods
xchg
adc
stos
sbb
push
jge
rcr
mov
push
push
pusha
imul
sysret
mov
stos
add
fwait
cmp
repnz
js
in
sub
mov
xchg
or
fs
std
pop
sahf
xchg
daa
popf
inc
xchg
push
add
mov
push
push
inc
or
push
cmc
adc
add
lret
rcrb
imul
cwtl
js
aad
aam
xlat
jbe
lock
mov
inc
add
icebp
mov
push
sub
loop
add
jmp
cs
insb
cmc
jmp
sbb
test
mov
cmovnp
andl
add
adc
xor
mov
scas
daa
xchg
or
sub
data16
fnstsw
test
outsb
add
std
or
inc
imul
jno
std
fisubrs
mov
loope
pop
dec
sbb
std
outsl
lret
mov
pop
sub
lahf
xchg
test
mov
aam
jge
jnp
pop
cmpl
xchg
inc
dec
popf
pusha
mov
call
mov
mov
xchg
adc
test
jo
hlt
mov
rolb
stos
xor
addl
sub
jae
push
cltd
es
loope
push
addr16
repz
addr16
mov
push
and
ja
arpl
jmp
ds
pop
and
outsl
or
cwtl
sbb
es
mov
mov
rcrb
arpl
dec
xor
push
pop
roll
hlt
mov
pop
jmp
movsl
and
jecxz
sti
xor
adc
insb
mov
sbb
in
and
jl
les
sub
mov
adc
sti
add
push
fsubl
push
sbb
jno
adc
das
into
pop
push
cmp
mov
sbb
fisubs
pop
call
inc
add
jecxz
or
adc
adc
mov
pop
push
dec
out
leave
push
cmp
loope
ret
jg
sahf
jne
sbb
sbb
lods
xor
add
jne
into
sub
fstl
push
jmp
imul
fucomip
fwait
dec
mov
add
nop
inc
xchg
aaa
inc
jl
push
jnp
push
cmp
or
flds
xchg
fdivs
test
inc
andb
xlat
stos
dec
add
push
pop
cmp
inc
push
imul
pop
loope
lock
adc
jne
mov
pushf
adc
ljmp
jl
sub
adc
in
cli
mov
dec
inc
and
ljmp
test
xchg
jne
inc
push
lret
cmp
push
jnp
mov
mov
xor
aaa
sub
or
movsl
in
and
insb
jnp
dec
rcrb
js
cmp
ret
xor
jl
sbb
out
inc
and
mov
and
mov
xchg
mov
std
sbb
mov
sarl
or
pop
jne
add
add
cmc
andl
push
dec
xor
sahf
int3
dec
fcoms
fs
icebp
add
dec
cmp
add
es
fidivs
xchg
call
shll
inc
and
stos
inc
and
jns
pop
ss
mov
pop
push
jmp
popa
mov
dec
imul
xchg
xor
sbb
xor
nop
push
add
xlat
add
fcoms
pop
cli
jp
out
jmp
add
orl
cmp
dec
mov
add
icebp
hlt
cmc
enter
aas
jge
add
lahf
shl
jle
add
jle
mov
or
or
dec
adc
shll
adc
sub
aad
inc
add
das
lock
mov
pop
ds
sahf
xchg
xor
mov
test
adc
cmpb
xor
xchg
lds
push
inc
out
lods
push
scas
jecxz
lret
pop
test
xor
jmp
xchg
scas
mov
add
xchg
mov
movsl
and
jp
jle
cmp
out
lods
sbbb
inc
jle
xchg
add
mov
adc
xor
or
adc
subb
fcomps
loop
nop
pusha
aam
cmp
jp
fldcw
xchg
mov
and
inc
cmpsl
popa
add
sub
or
xor
pop
test
loope
dec
lret
sub
mov
lods
add
cmpsb
jge
aas
cmc
rcl
dec
adc
icebp
add
insb
fisubl
xchg
ret
pusha
js
push
shrb
sbb
out
jmp
mov
dec
add
jecxz
nop
push
or
inc
ficoml
pop
mov
test
push
clflush
cmp
mov
cmp
jecxz
ljmp
xchg
ret
rcrb
sub
jecxz
ret
or
in
aam
mov
xlat
sbbl
pop
jge
jp
aad
sub
and
xchg
test
shrl
int
sub
push
sub
mov
icebp
inc
pop
int3
and
ss
enter
adc
ret
pop
lock
xor
cld
mov
xchg
add
inc
fcoml
test
ret
sub
popl
cmp
lret
xor
ret
mov
pop
dec
mov
xchg
pop
sbb
and
in
fstp
push
mov
adc
sub
dec
jl
adc
xor
shll
mov
jl
cmp
mov
in
inc
mov
cmp
nop
call
sub
popf
jp
subb
sub
jnp
rcrb
dec
xor
xor
xor
rcl
xor
stos
repnz
aam
sbb
push
adc
les
pop
js
lods
mov
fucom
or
lock
popa
mov
jle
or
les
pinsrw
lahf
cmp
clc
out
mov
xlat
jp
push
dec
sti
fs
pop
push
adcb
inc
sbb
mov
fnstenv
adc
cmp
sarl
and
sahf
in
into
lods
and
xor
add
cs
adc
mov
cmpsl
sti
jle
jb
xor
movsl
push
loopne
popa
lea
cld
push
js
test
ds
mov
adc
push
sbb
dec
je
loopne
pusha
mov
jl
push
push
icebp
test
insb
sbb
cld
rorb
cmpsb
cs
shl
push
mov
push
adcl
and
mov
mov
std
test
sbb
mov
popf
inc
or
je
xor
mov
outsl
stc
add
call
ljmp
cmpl
mov
inc
jl
loopne
je
scas
orl
stos
movsb
idiv
push
inc
lock
add
clc
add
jne
xlat
mov
pop
or
call
popf
lods
lret
aas
cmp
push
jnp
popf
test
xor
xchg
xchg
enter
icebp
xor
clc
sub
push
loopne
orb
ds
mov
je
adc
daa
ret
jp
int
push
and
xorb
add
push
ljmp
sbb
or
inc
sahf
mov
and
xchg
adc
mov
jg
pop
outsb
aaa
add
cmp
push
adc
lea
out
mov
test
pop
and
les
mov
push
xchg
mov
jge
mov
push
ret
cmp
jecxz
fists
stos
nop
in
pushf
sar
cmpb
repnz
into
movsb
fildl
outsb
jg
mov
sub
adc
lahf
ja
xchg
xchg
out
sti
rorl
mov
sbb
or
icebp
xchg
cmc
or
ljmp
pop
aam
iret
dec
inc
mov
stc
out
inc
xchg
or
leave
pop
fcom
lret
pop
lock
mov
pop
icebp
cwtl
aam
mov
bound
test
jle,pt
adcb
sub
fwait
jmp
pusha
mov
mov
and
aad
out
enter
mov
dec
pushf
mov
idivb
sti
pop
add
adc
sub
test
push
mov
mov
test
xor
subb
xchg
fadd
adc
dec
add
movb
and
mov
xchg
xchg
outsl
jp
push
nop
mov
call
jl
notl
movsb
inc
mov
lret
pop
push
xor
mov
mov
and
and
cmp
enter
mov
sbb
repz
or
cmp
ja
imul
mov
mov
mov
aam
sbb
lods
gs
mov
add
cli
outsl
pop
sahf
push
movsb
xor
mov
les
pop
shlb
mov
add
push
inc
push
mov
icebp
lea
add
xchg
leave
dec
repnz
jo
jmp
ja
insl
mov
push
imul
sub
test
jo
test
adc
sti
inc
cltd
adc
push
add
pushf
fmull
mov
fdivrp
pop
or
notl
and
inc
ret
ljmp
in
nop
pop
in
cmc
ljmp
adc
xor
push
test
add
pop
pusha
nop
and
in
pop
or
sbb
push
sbb
jns
xchg
mov
daa
mov
xchg
mov
or
jbe
clc
in
mov
jg
shl
pop
cwtl
mov
or
cmovae
xchg
enter
sbb
jecxz
cli
daa
scas
mov
or
mov
idiv
or
xor
lock
adc
test
inc
and
sbb
add
adc
in
iret
push
and
faddl
ret
jbe
mov
jg
int3
jno
add
out
xchg
movsb
xor
jne
pop
jmp
nop
dec
and
cli
cmpxchg
cs
pop
pop
jne
sbb
inc
mov
mov
mov
jne
pushf
and
insb
cmp
loop
push
divl
lock
lods
pop
in
sub
sub
pop
jne
sbb
xchg
mov
jmp
je
mov
mov
test
cld
mov
insb
or
jecxz
add
test
aad
icebp
and
fists
cld
sbbb
psubd
sub
js
xchg
scas
shrb
aaa
aam
push
push
or
mov
jmp
dec
dec
pop
cwtl
mov
sbb
out
jl
mov
imul
pop
add
sbb
sbbb
je
loope
pusha
les
sbb
lahf
fldlg2
cmp
test
xchg
test
or
sbb
gs
jmp
dec
rorl
jo
cmpsl
cmpsl
add
repnz
pop
out
push
loope
add
into
outsb
pop
push
mov
or
lahf
mov
add
in
xchg
movsb
adcl
or
cmp
out
ja
outsl
mov
push
xor
daa
xchg
addl
fnstsw
pop
adc
and
addr16
mov
imul
dec
push
pop
lods
or
adc
pop
pop
cmc
adc
enter
and
outsb
mov
xor
aam
lahf
idivl
cli
movsl
and
cmp
mov
aam
loope
dec
adc
mov
fs
dec
push
add
and
xor
and
les
inc
enter
push
test
maxps
inc
and
test
popf
xchg
ret
adc
rclb
ret
aad
jns
add
jl
and
cmc
mov
sub
dec
adc
loop
cli
mov
and
aam
push
mov
mov
mov
rolb
push
jno
inc
push
out
js
cs
nop
and
adc
out
mov
jno
outsl
mov
or
or
rolb
sbb
inc
dec
inc
ds
repz
lret
dec
dec
mov
push
jge
mov
jbe,pt
push
test
jp
call
out
sahf
in
subb
xchg
xor
subb
push
test
cmc
add
popf
inc
ret
jle
imul
rcll
jge
lea
dec
and
xchg
mov
lahf
adc
push
mov
cmp
pop
push
in
sbb
xlat
cli
sub
andps
inc
mov
test
cmp
push
je
jg
popf
jmp
int
and
add
aam
mov
loop
push
stos
sbb
cmpsb
pop
mov
aaa
adc
subb
cmpsl
insb
loope
inc
das
or
loopne
inc
das
pop
aam
cmpsl
scas
jno
jns
in
push
sub
icebp
loopne
pushf
mov
jmp
and
sub
test
fistpll
mov
cwtl
push
cmc
add
adc
repz
xchg
sarb
dec
dec
push
jecxz
fs
pop
ss
gs
adc
popa
test
int3
push
daa
call
lds
sub
sub
stos
movsb
orl
dec
rclb
add
xor
jne
outsl
orb
jl
mov
daa
dec
pop
mov
and
mov
shr
orb
sbb
mov
pop
push
dec
popf
xor
xor
jbe
adc
cmpsl
hlt
int3
mov
cs
add
jmp
adc
and
sbb
push
std
mov
jge
fs
inc
ret
ds
push
and
js
jle
jne
outsl
test
sub
cmp
sarb
push
mov
rorb
sbb
push
gs
roll
popf
adc
sub
inc
or
out
adc
push
add
sub
es
lea
ljmp
ret
jne
sbb
and
fstps
add
aam
mov
pop
fsubs
mov
ret
imul
cwtl
movsl
sub
add
jecxz
sbb
inc
rorb
rolb
inc
movsl
loop
inc
iret
cmp
stc
inc
aaa
adc
xchg
ds
sti
adc
dec
movsl
sub
mov
inc
xchg
mov
cltd
cmp
adcb
or
adc
cli
inc
mov
data16
inc
les
mov
xor
loope
xchg
mov
mov
mov
mov
jge
popa
jbe
adc
std
mov
leave
dec
std
push
in
pusha
jecxz,pn
ficompl
push
xchg
cmp
push
push
hlt
cmp
bound
lahf
push
out
pop
test
jecxz
cmpsl
fs
mov
or
stos
repz
shll
in
dec
cltd
les
pusha
mov
mov
mov
cld
pop
lods
aad
test
popa
cmpsl
ljmp
add
xor
sbb
fiaddl
xor
or
sbb
daa
mov
push
inc
dec
pop
pop
sub
ljmp
adc
xor
add
push
mov
dec
sub
test
test
sub
rorl
mov
cltd
pop
add
stos
lods
sub
dec
popf
pop
sbb
add
push
add
lahf
daa
push
mov
insb
sub
push
push
jg
fcmovnbe
sti
cmp
cmp
sub
movsl
inc
push
dec
xchg
lds
push
xchg
cwtl
jle
jns
mov
jbe
ret
subb
lock
mov
mov
xor
sub
mov
mov
fistpll
xorb
sub
dec
mov
fidivrl
adc
loope
cmp
mov
mov
fld
jbe
mov
lock
adc
subl
mov
jbe
jp
mov
dec
or
daa
mov
mov
or
or
adc
aam
cmp
mov
mov
add
xor
pusha
lds
xor
in
roll
lock
gs
aas
icebp
es
inc
pop
inc
push
inc
or
ret
out
or
sub
xor
and
lret
dec
xchg
inc
out
mov
mov
fisttpl
scas
jo
cmc
xlat
and
pop
sbb
mov
ljmp
jg
add
or
adc
rcl
bound
out
and
push
cmpsb
dec
test
mov
cmp
scas
dec
std
sbbb
cmc
add
add
xor
ss
cmp
aam
and
cmp
pop
push
sub
lds
mov
sub
lock
inc
sub
loope
and
lods
adc
adc
pop
add
call
insl
les
cs
xchg
push
pop
loopne
insb
movsl
jge
push
and
dec
icebp
xchg
jmp
icebp
or
scas
xchg
movsl
arpl
out
inc
test
scas
add
test
add
and
mov
inc
jno
cmp
imul
or
sbb
testl
mov
xor
dec
dec
wrmsr
jge
daa
es
mov
les
test
adc
pop
clc
jecxz
adc
or
iret
cmpl
add
adc
push
xor
add
and
iret
xchg
fidivl
repz
enter
lods
push
cmp
inc
out
jae
pop
mov
inc
int3
out
pop
or
dec
cwtl
scas
inc
popa
sbb
inc
cwtl
dec
ljmp
dec
jg
xor
or
test
test
push
lahf
push
sub
les
xchg
popa
stos
in
fistpl
gs
ljmp
out
enter
xchg
clc
xor
cwtl
icebp
mov
xor
inc
push
push
iret
adc
sub
cli
addr16
jae
sub
jecxz
adc
mov
cmc
add
shll
clc
add
inc
stc
sahf
jae
outsl
lods
cli
pop
mov
bound
in
iret
test
jecxz
aaa
ds
mov
inc
lcall
mov
or
mov
jns
rcl
jecxz
mov
xchg
daa
mov
aaa
nop
xchg
aaa
scas
cmp
insl
push
mov
ret
mov
dec
xor
imul
insl
mov
fwait
jb
cmp
adc
aad
push
jbe
xchg
fldenv
mov
xchg
test
pop
cmpsb
pop
je
filds
push
ret
mov
xchg
movb
rcrb
adc
jne
shlb
pop
jl
pop
outsl
or
adc
loope
lods
mov
or
aam
mov
mov
inc
sbb
or
mov
rcrl
ficoms
pop
mov
or
inc
mov
or
mov
adc
fucomp
adc
sbb
sub
iret
jne
xchg
fs
stos
or
push
mov
sbb
loop
cmc
pusha
inc
daa
dec
insb
loopne
or
fbld
enter
aad
and
mov
pop
mov
xor
ret
bound
andl
ret
cmp
push
ret
sub
aad
pop
mov
cltd
iret
cltd
lods
xchg
push
loop
ret
push
fildll
js
jecxz
pop
cmpsl
test
mov
and
sti
xor
and
adc
lods
and
scas
sahf
mov
cmp
incb
insl
or
push
xorb
mov
xchg
xchg
jp
aad
shrl
stos
or
insb
inc
dec
movsl
dec
pop
loop
lds
icebp
dec
add
scas
sub
cmp
cmpsl
dec
jo
cmpsb
dec
mov
cmpb
xchg
inc
mov
lock
jmp
test
es
and
mov
das
xchg
inc
mov
push
ds
popa
or
push
lock
sub
or
sub
cli
adc
daa
xor
cmc
cltd
fists
pop
mov
jp
add
in
push
fnsave
test
jg
sbb
hlt
pop
arpl
pop
mov
xbegin
mov
cltd
mov
test
or
sub
ret
daa
mov
inc
insl
mov
add
shl
pop
out
adc
add
add
pop
jmp
loopne
clc
mov
pop
stc
push
lods
xor
outsb
movsb
in
cmc
inc
clc
xchg
adc
push
add
pop
addr16
add
mov
mov
or
or
ss
push
inc
out
or
mov
xchg
fidivs
jecxz
xlat
shlb
dec
jns
and
sub
loopne
or
in
push
sub
or
dec
insb
icebp
aaa
mov
icebp
mov
aam
arpl
leave
pop
sbb
mov
ljmp
cmp
insl
fiaddl
imul
and
dec
pop
sbb
popf
or
repnz
aas
jns
mov
fsubrl
or
pop
jmp
mull
mov
jp
loop
xchg
adc
cs
cmc
mov
mov
mov
ljmp
rol
cwtl
aad
in
dec
repnz
mov
cwtl
pop
xchg
add
xor
cmp
mov
iret
jle
cmp
sti
adc
inc
data16
jae
mov
add
cmp
movsl
push
test
imul
inc
mov
mov
cwtl
jge
pop
faddl
ja
lret
das
inc
and
leave
mov
lods
js
idivb
jl
mov
mov
xor
pop
pop
mov
adc
in
imul
add
or
je
test
fimuls
inc
mov
cwtl
xor
aam
enter
dec
xchg
mov
sub
inc
pop
jae
jo
push
addr16
gs
ret
ja
mov
xor
cmpsl
orb
cmp
aas
pop
aas
andb
or
sbb
lds
adc
popf
cmpsb
lahf
mov
ret
test
mov
add
js
movsl
pusha
in
sbb
pop
call
adc
shl
dec
cmp
loope
cmp
mov
loop
jbe
push
jmp
xor
xor
ret
adc
xor
data16
xor
je
cmp
repnz
jno
cmp
xlat
aaa
out
push
out
data16
stos
cmc
in
fidivrs
cmp
call
test
cltd
mov
aas
jecxz
cmp
rorb
xor
test
xlat
dec
popa
daa
std
test
lods
scas
push
loopne
xchg
pop
inc
jp
cmp
add
xor
lret
ss
addl
scas
movsl
add
lods
ljmp
hlt
fisubs
push
push
jp
movswl
dec
inc
adc
ljmp
sahf
rcl
mov
adc
mov
xor
mov
xor
aad
cmp
in
dec
gs
xlat
data16
roll
aaa
nop
xchg
sahf
add
mov
scas
cmp
je
xor
add
je
push
jmp
hlt
test
add
les
js
inc
inc
cld
sarl
jecxz
idivb
xor
cmp
add
add
sub
and
sbb
cli
push
xor
das
cltd
leave
mov
mov
movsb
ret
leave
pop
sub
rorl
dec
add
lds
aaa
push
sti
les
sbb
sub
push
or
mov
daa
mov
and
jno
stc
lahf
mov
mov
stc
filds
add
fisttps
mov
ret
pcmpeqw
xor
mov
xchg
push
cli
mov
pop
sbb
jno
pop
mov
inc
sti
adcl
and
orb
xchg
adcb
out
sbb
sub
rcl
in
push
sbbl
sub
jl
repz
xor
cli
jns
aaa
sub
inc
xchg
inc
pushf
inc
inc
jmp
and
add
push
icebp
lea
scas
cmp
dec
mov
es
pusha
and
dec
into
jns
out
movsl
add
mov
or
fsub
shlb
push
adc
rorb
inc
mov
mov
or
adc
imul
or
hlt
pop
mov
adcb
pmaddwd
jns
add
movsl
xor
test
cltd
mov
adc
cmp
test
in
add
mov
or
test
out
imul
add
xchg
into
lea
enter
xor
ret
incl
add
pop
aaa
and
add
cld
lahf
in
inc
cli
mov
iret
pop
mov
add
testb
popa
add
bound
je
fsubl
jmp
inc
push
push
adc
push
movsb
aas
dec
cmc
test
call
jmp
sbb
test
dec
cld
sbb
loop
pop
mov
xor
and
lcall
adc
xor
test
inc
inc
jb
ror
pop
lods
aam
js
push
loope
cltd
fisubl
orl
adc
add
xor
xor
call
jno
jno
cmp
rolb
push
cmpsl
adc
cmp
adc
push
cmc
dec
dec
push
fisubl
loope
push
adc
xor
loope
sbb
stos
push
decb
jo
sub
dec
add
pop
jmp
push
negb
mov
je
or
mov
inc
rcrb
inc
cmp
jo
nop
xchg
pop
call
lahf
cmp
pop
out
imul
or
jecxz
rolb
test
mov
dec
add
sub
xor
and
push
mov
out
mov
les
loopne
out
std
dec
insb
or
std
das
movsl
cwtl
lret
push
mov
addr16
lods
mov
mov
sbb
push
mov
add
insl
and
test
adc
sbb
xor
movsl
pop
test
js
xchg
and
imul
jge
jl
mov
shr
jo
ja
push
popa
xchg
jne
inc
adc
inc
cs
jecxz
sbb
xchg
test
pop
aad
or
push
and
adc
int
nop
xor
les
test
fwait
sahf
xchg
sub
shld
loop
sahf
aas
clc
or
push
xor
adc
loopne
lds
xor
cmp
push
pop
inc
cmp
push
xorl
xchg
push
mov
sub
mov
push
mov
out
popf
ror
loopne
dec
mov
push
adcl
jmp
jp
fsubs
imul
loopne
aam
cli
dec
pusha
dec
imul
cmpsl
mov
jecxz
mov
add
cmp
fdiv
pop
adc
test
rolb
jb
mov
jo
pop
inc
fwait
xor
cmp
repz
mov
ret
mov
les
cmp
sbb
iret
orb
inc
pop
cwtl
dec
aas
call
and
cmpb
mov
negb
cli
add
in
or
or
xorb
test
loopne
clc
inc
pushf
add
clc
notb
inc
fsubr
outsl
loopne
movsb
sbb
cltd
push
cmc
inc
sbb
daa
inc
fnstcw
add
cmpsb
mov
incb
add
mov
cmp
outsb
push
clc
and
mov
and
jnp
sub
mull
lods
ret
int3
sbb
push
imul
out
jmp
push
inc
fs
jg
pop
pop
clc
pop
fisttpll
popa
jmp
scas
add
sbb
jbe
movsb
push
lods
out
cmpsl
movsb
sar
pop
add
and
loop
cmc
lahf
out
xchg
mov
les
lea
mov
adc
mov
push
mov
lock
arpl
sub
aad
push
sahf
sub
sbb
push
sbb
sub
mov
inc
aas
mov
xchg
gs
lahf
inc
mov
imul
ss
mov
jmp
jnp
jnp
add
xor
or
ja
add
and
pop
aad
mov
cmp
mov
inc
adc
xor
cld
adcl
cli
mov
lods
inc
xchg
loope
subb
mov
rsqrtps
mov
cmp
aas
popa
xchg
and
mov
dec
fistl
push
jo
addl
xchg
push
push
cli
xchg
out
jmp
enter
pushf
push
jae
gs
dec
ret
mov
inc
je
and
cmpsb
cmc
ja
cmp
xor
inc
xlat
mov
call
pop
or
add
fyl2x
add
pause
inc
shrb
mov
or
inc
rorb
test
mov
fcoms
sub
adc
jle
inc
andb
div
loope
inc
fadds
std
xchg
sub
mov
jmp
jecxz
sbb
stos
int
dec
shrb
je
cli
rolb
jg
xlat
mov
push
dec
jle
add
fst
cmc
xor
push
ficoms
pop
or
xchg
push
jle
adc
adc
mov
cmp
jl
dec
add
outsl
scas
pop
test
cltd
bswap
ljmp
inc
inc
into
dec
outsb
or
ret
lahf
jo
ret
jl
add
push
push
in
pop
push
inc
imul
push
jb
xor
cli
jo
pop
and
fs
aaa
push
imul
xchg
jecxz
jecxz
jbe
push
data16
paddb
jecxz
pusha
in
or
xchg
mov
push
mov
mov
iret
adc
inc
aam
inc
jo
fwait
xor
adc
lret
ss
jl
dec
lock
adc
mov
jg
sub
dec
rcrl
mov
sub
mov
cmpsl
fcomip
bound
cmc
mov
fmuls
psrlq
dec
add
or
cmpsb
pushl
inc
inc
nop
fdivrp
xchg
cmp
or
addl
ljmp
push
sub
xchg
xor
jecxz
adc
dec
cmc
fcmovb
sub
push
inc
cmp
insb
add
sbb
mov
fisubrl
jo
mov
cmc
aam
push
or
sti
int3
add
dec
cli
jb
stos
pop
jo
push
in
jl
lahf
adc
lods
and
and
adc
out
jg
gs
sub
pop
and
push
cwtl
je
push
xor
and
push
dec
outsl
mov
je
fiaddl
xlat
and
aam
in
je
xor
and
cli
mov
sub
adc
aam
pop
mov
xlat
std
add
or
and
pop
mov
shll
xor
and
mov
fsubrl
pop
cld
xchg
in
dec
js
imul
into
push
push
xor
icebp
icebp
jno
dec
sbb
ljmp
es
xlat
inc
push
xor
cmc
sbb
hlt
addb
shr
jge
adcl
test
rorb
sbb
call
push
cld
dec
adc
add
out
mov
lds
cli
insb
add
dec
std
jne
mov
mov
xor
mov
push
cmc
dec
aas
sarb
mov
and
scas
insl
clc
and
pop
xchg
xchg
sbb
outsl
xchg
int3
repnz
inc
sbb
xchg
pop
mov
mov
push
out
sbb
bound
sarl
mov
cmp
inc
add
test
mov
xchg
outsb
pop
loope
mov
movl
xchg
jp
nop
push
loopne
sub
push
jle
add
ljmp
ja
xchg
and
pop
inc
pusha
jno
and
add
ret
xor
xor
fmuls
test
pop
xor
xor
sarb
bound
xor
push
stos
andb
mov
cmpsb
push
cmp
in
or
jp
das
inc
push
or
mov
mov
sahf
xchg
mov
mov
lret
adc
add
adc
sarb
push
jl
les
push
xor
subl
icebp
sub
mov
pop
movsb
mov
jg
faddl
inc
cmpsl
pop
aaa
push
fs
fbstp
adc
xchg
sub
movsb
pop
sahf
subb
xor
adc
loop
xchg
inc
and
and
clc
ret
push
inc
sbb
inc
pop
pushf
call
sub
cltd
ret
icebp
fistpl
adc
leave
mov
cmp
sahf
pop
pop
js
xchg
jo
aas
shrb
jp
bound
mov
sbb
sub
xlat
adc
roll
ds
ljmp
stos
repnz
inc
fcmove
add
popf
das
mov
pop
cmp
aam
mov
mov
xor
jae
jle
in
fwait
sub
out
and
jno
loope
lods
clc
mov
cmp
adc
lcall
movsl
int3
cmp
cs
inc
xchg
and
lods
inc
push
jmp
push
push
int3
and
mov
int3
sub
or
pop
xor
bound
xor
inc
pushl
shll
jno
xlat
lock
and
addb
loope
pop
xor
jmp
arpl
mov
xchg
hlt
int
mul
pop
pop
addr16
inc
loopne
push
inc
sub
pusha
add
xchg
push
dec
sub
mov
lret
adc
xchg
es
mov
iret
mov
arpl
xchg
push
jno
mov
out
add
outsl
mov
push
shrb
jo
adc
inc
and
inc
dec
or
add
mov
cmp
sbbb
fnstenv
jnp
out
nop
jae
push
cltd
and
inc
rcr
cmpsb
pushf
and
pop
shr
and
scas
and
rorb
stos
mov
or
or
popf
mov
cmp
rorb
xchg
add
daa
jle
clc
sub
adc
ss
rorl
and
cwtl
push
ds
mov
mov
aas
sbb
cmpsb
jg,pt
outsl
mov
jp
test
mov
setne
jne
push
jge
in
adc
mov
pusha
andl
jg
and
inc
push
ret
movsb
jne
aam
push
add
ret
sub
sub
outsb
xor
shrl
in
mov
aam
dec
cmpsb
pop
dec
or
movsb
ret
mov
adc
mov
shlb
outsb
repnz
je
imul
scas
sbb
sbb
addr16
add
adc
stos
hlt
mov
sbb
pop
sbb
adc
pop
je
je
cmpsl
push
fidivs
aas
ljmp
shrb
sti
inc
inc
xchg
add
sbb
lods
test
ficompl
cmp
negl
clc
les
fdivr
data16
sub
insl
movsb
inc
sub
stos
imul
push
test
fcomps
repz
rorl
or
dec
push
jo
fildl
mov
add
pop
subl
push
out
pushf
sub
or
jb
sbb
out
scas
cld
pushf
add
mov
push
xchg
mov
fistps
clc
push
ds
push
loopne
sarl
jb
ret
add
in
cmc
inc
enter
or
repnz
mov
orb
push
daa
mov
and
mov
ljmp
or
cmc
int
aaa
xor
sub
std
push
push
push
scas
mov
pop
mov
fidivl
cli
xor
shlb
into
rcr
jecxz
enter
loopne
or
xchg
and
rcrb
inc
popa
hlt
loope
pop
out
fdivr
push
xchg
sahf
or
sbb
stos
xchg
sbb
pop
sbb
data16
das
and
mov
cld
mov
inc
mov
nop
stos
mov
imul
or
outsb
addb
sub
push
sbb
push
sub
hlt
jmp
mov
popa
push
decl
adc
jb
or
leave
xchg
fdivrs
push
inc
mov
push
pop
mov
jbe
filds
lea
ja
inc
mov
mov
sub
les
inc
fldl
inc
das
std
jmp
nop
pop
shll
in
hlt
imul
sbb
inc
jno
inc
shll
cmpsb
ljmp
dec
adc
orl
inc
scas
dec
sub
mov
movsl
adc
push
mov
push
xlat
pusha
aaa
insb
sub
pop
pmaddwd
movsb
cmp
xor
dec
cmpl
rcl
data16
jbe
mov
mov
mov
dec
pop
ret
ja
jmp
push
mov
mov
les
push
testl
test
and
cmpsb
adc
dec
pop
add
xchg
dec
dec
jle
xor
clc
sbb
in
inc
repz
imul
and
lahf
pushf
sti
xchg
aam
dec
jb
pop
sub
roll
sub
push
xchg
leave
mov
add
fisubl
pop
nop
jge
xor
sub
adcb
lea
or
push
push
fistps
inc
or
subb
movsl
dec
jg
cmovns
inc
jne
shlb
sahf
cmc
movl
xchg
mov
test
mov
pop
aaa
jb
incl
ficoms
xchg
aad
and
out
fsubrs
lods
and
jns
or
std
push
mov
or
adc
adc
pop
iret
push
add
repz
sbb
mov
leave
cmp
in
dec
push
add
in
adc
loop
rol
imul
repnz
mov
rcll
push
movsb
cmp
data16
sbb
cmpsl
nop
add
mov
adc
rorb
cmpl
push
rorb
jl
cwtl
ret
mov
imul
lods
sbb
add
xorb
add
pop
dec
lret
push
pop
sarb
mov
adc
shll
sbb
rclb
or
and
out
push
or
hlt
cmp
dec
decl
cld
push
in
mov
pop
sbb
testl
pop
mov
sbb
pop
lock
mov
mov
fadds
or
lods
sahf
test
stos
sub
pop
xchg
cmp
push
inc
jge
cld
out
int3
mov
xchg
cmp
cwtl
mov
cwtl
dec
lock
in
out
test
js
pop
dec
mov
adc
loope
jbe
lods
mov
rcrb
jle
popa
jmp
jo
jo
jnp
push
mov
xchg
mov
call
add
sub
mov
fiadds
decl
cmp
cmp
cmp
fistps
jne
add
out
clc
cld
jb
mov
inc
push
shlb
mov
pop
insl
xchg
fwait
xchg
lock
push
lret
mov
xchg
mov
push
push
cs
repz
xchg
fs
call
subl
push
cmpsb
and
nop
add
sbb
jne
aaa
jle
gs
jle
cmp
dec
lcall
add
js
test
push
xor
or
pop
jnp
sarb
aas
icebp
enter
fildll
clc
inc
adc
inc
jl
jno
sub
pop
decb
cmp
roll
mov
out
ficompl
testl
mov
cld
cmpb
scas
mov
dec
cmpsb
push
test
test
rolb
lock
add
enter
loop
mov
cmp
or
cmp
rcl
push
add
xchg
test
sub
xchg
cwtl
es
lock
mov
out
repnz
js
rolb
ret
test
mov
push
adc
push
cwtl
adcl
adc
and
aas
add
out
call
lret
jge
incb
jmp
or
xchg
out
dec
lret
xchg
cmpsb
push
pop
cmp
dec
fistpll
adcb
ret
pop
and
push
pop
ja
jo
mov
add
sar
fnstsw
test
dec
push
inc
movsbl
into
adc
sub
inc
and
fcmovnb
mov
cmp
mov
or
into
les
scas
aaa
pop
jo
cmpsl
sbb
insb
push
jae
imul
ds
les
stc
loop
jo
sub
push
or
xchg
jge
mov
fisttpll
fisubs
push
mov
ret
mov
mov
and
mov
sub
loopne
xor
xor
sti
xlat
or
xor
dec
dec
call
loopne
sub
pop
js
dec
sbb
shll
xorb
fsubrl
mov
dec
mov
sub
shl
ds
push
inc
or
test
jg
incb
push
fsubl
adc
sbb
add
add
fnstenv
and
sub
mov
mov
lcall
inc
aaa
pop
jg
dec
push
ret
dec
mov
mov
push
add
push
test
pusha
cmpsb
inc
mov
add
dec
adc
push
and
and
mov
pop
addb
pop
sbb
mov
nop
push
into
shll
pop
ljmp
and
sub
mov
mov
pop
insb
mov
mov
mov
subb
add
pop
fisttps
lods
and
sub
adc
adc
mov
adc
sbb
adcl
pop
loop
dec
cmp
sub
dec
fisubrs
xlat
mov
inc
xlat
aam
xor
loop
add
dec
mov
lock
jo
jle
pop
or
pop
bound
cmpsb
lcall
or
jo
cmpsb
jbe
sbb
jle
jbe
cld
sub
cmp
inc
movb
test
dec
jp
pop
or
sahf
fcoml
clc
jb
in
mov
lcall
and
loopne
jb
mov
orb
xchg
jne
sub
and
mov
pusha
pop
cmp
mov
adc
movsb
stc
test
mov
push
in
mov
and
and
inc
cld
aaa
sub
mov
adc
add
ds
push
jo
sub
jne
mov
movsb
add
mov
call
pop
jge
std
lock
scas
pop
sbb
jo
cmp
inc
jg
mov
outsb
push
aam
adc
mov
test
nop
sahf
or
jle
gs
fs
movsb
adc
dec
xchg
test
add
out
sti
enter
xchg
cmp
sub
pop
shll
test
nopl
mov
pop
nop
mov
out
sbb
jecxz
xor
lock
and
out
jecxz
mov
sbb
add
mov
add
jbe
ffree
cmp
xor
and
sub
pop
or
ret
add
xchg
bound
imul
pop
aaa
loop
cs
sbb
mov
and
mov
loope
rorb
xchg
ret
loopne
movl
scas
aam
fdiv
call
lret
mov
pop
jo
inc
pop
adc
lret
out
jbe
out
js
add
sub
jl
mov
adc
pand
sbb
and
cmpsb
and
jo
cmp
cvtdq2ps
cmp
xor
and
mov
lods
mov
mov
mov
lods
ret
clc
addr16
cwtl
sub
pusha
cmp
xchg
cmc
cmp
pop
loop
and
out
dec
mov
stos
inc
push
xchg
pushf
rcl
push
pop
inc
dec
loop
inc
imul
mov
or
shl
fisttps
xchg
sub
nop
jge
movsb
adc
cmpsb
orb
xchg
mov
adc
mov
push
and
hlt
xor
xchg
stos
xchg
shlb
push
sbb
cmp
sbbb
xor
imul
cld
jno
mov
jno
or
cmpsl
cmc
fmuls
jne
push
add
addr16
pop
jo
add
mov
je
xchg
lea
adc
in
xor
push
loop
push
hlt
and
jle
adc
sahf
sub
out
hlt
add
jg
pop
add
insl
pusha
xor
fstp
mov
jecxz
pop
add
les
pop
mov
fdiv
ds
inc
push
sahf
mov
or
adc
jmp
arpl
or
cmp
repnz
and
cmp
inc
shlb
faddl
pop
test
shrb
psrlw
aam
lahf
bound
adc
mov
pop
cs
jo
jecxz
mov
gs
data16
jo
lods
jb
pop
or
or
push
xlat
movsb
mov
loop
pusha
sbb
sub
adc
pushf
fisttps
andl
mov
jmp
orb
cmp
jo
xor
dec
inc
dec
scas
mov
lret
mov
mov
xchg
adc
adc
les
enter
clc
outsb
xor
movsl
pop
outsb
scas
pusha
call
cmp
ljmp
in
in
ficoml
cs
mov
jge
inc
int3
out
jno
ss
data16
pop
xchg
push
push
pop
add
or
sub
and
in
jle
jb
mov
lcall
out
andb
cmp
int3
movsb
adc
ffreep
lahf
hlt
adc
repz
out
dec
dec
push
fdiv
insl
xchg
push
jb
sqrtps
ret
push
pop
cmp
aad
xlat
cmp
push
divb
jno
hlt
pop
mov
add
xlat
mov
adc
sub
jae
scas
xchg
jle
mov
xor
lds
jl
sub
inc
insb
test
cmp
jg
insl
icebp
roll
js
add
test
cmp
fiaddl
or
push
sbb
insb
push
not
and
sbb
xor
mov
lret
sti
inc
sub
dec
scas
scas
sub
subl
push
or
ss
sbb
ret
xchg
inc
xchg
inc
pop
pop
loopne
add
sub
xchg
mov
imul
fldl
and
lahf
lods
mov
adc
jns
icebp
mov
dec
push
and
mov
outsl
mov
sbb
mov
dec
or
iret
les
push
jle
sub
add
mov
pop
push
js
fstp
dec
cmpsb
fimull
add
sbb
push
lcall
aam
in
push
repnz
jo
call
notb
in
int3
pop
andb
jns
jo
or
jecxz
je
in
out
aam
jl
pop
out
pusha
imul
daa
shl
and
movsl
xor
xchg
push
lock
add
add
lcall
cmpsl
dec
test
outsb
adc
sbb
fdivr
push
dec
shll
cmpsl
lods
data16
or
js
bound
jl
aas
push
cli
xchg
stc
xor
stos
aaa
mov
dec
lods
insb
and
jns
jge
sbbl
ja
adc
insl
dec
iret
shrl
pushf
sub
or
push
jge
add
mov
subl
adc
or
mov
enter
in
nop
inc
xchg
inc
incl
icebp
out
jbe
incb
jg
sub
push
repnz
cwtl
jge
pop
xor
outsb
jo
addb
push
xchg
add
jge
push
stos
enter
jne
jmp
and
mov
idivl
jae
xchg
hlt
ret
jge
movsb
fstl
add
or
push
cmp
lahf
sub
adc
or
pop
push
call
test
daa
icebp
add
ret
andb
arpl
dec
add
push
dec
mov
push
or
rcr
lods
fadd
jb,pt
push
pusha
jae
xchg
jecxz
jle
xor
xor
push
jl
pop
add
aas
loopne
mov
ja
or
inc
ljmp
add
dec
or
fwait
mov
mov
mov
sbbl
and
mov
push
sbb
xchg
movsb
pop
or
in
and
sub
inc
jo
xchg
inc
adc
mov
lahf
int3
jb
pop
dec
push
test
imul
dec
std
aad
cmp
sbb
inc
aad
test
scas
sub
push
in
mov
pop
subl
incl
adc
daa
loope
pop
out
jae
inc
jecxz
imul
loop
test
xor
mov
and
jg
adc
push
test
or
add
popf
jne
test
ds
push
mov
or
mov
imul
icebp
adcb
fbld
jmp
movsl
or
in
or
inc
add
imul
add
pop
in
jb
ret
je
pop
jecxz
fdivrl
jl
hlt
fistl
imul
xchg
mov
jb
repnz
ret
cmpsl
jae
movsb
loope
ja
test
bound
stos
imul
lods
lods
into
sub
sbb
int3
push
xchg
cmpl
inc
hlt
xor
add
test
xchg
cmp
mov
and
movsw
xchg
sbb
xchg
mov
rclb
xchg
and
aaa
push
push
hlt
sbb
shll
xchg
sub
or
mov
and
or
push
dec
jp
sub
loop
into
rcrl
sahf
jno
bound
fstl
pop
mov
push
adc
xor
aaa
ficoms
das
loope
enter
push
inc
imul
mov
pop
std
dec
xchg
cmp
les
and
mov
mov
nop
out
orl
pop
movsb
dec
pop
inc
movsw
xlat
pop
rolb
repz
or
jp
rcrl
push
fnstenv
mov
push
icebp
out
pop
adc
adc
mov
jecxz
xchg
dec
outsb
es
shlb
test
in
fdivrl
ds
pop
insl
test
pusha
jmp
mov
cmpsb
mov
dec
adc
mov
cmpb
sub
pop
out
lret
mov
mov
and
gs
add
jmp
rorl
xor
add
test
add
inc
shrb
push
mov
scas
in
data16
das
push
mov
adc
ret
add
xchg
sbb
into
filds
sbbb
sub
mov
call
push
fldenv
cmp
adc
aad
mov
pop
fs
fdiv
sub
push
inc
and
jg
fisttpll
popa
pop
and
dec
jp
push
loopne
lcall
pop
cmpsb
mov
xor
mov
sti
push
ret
fdivr
popf
and
sub
push
inc
daa
dec
jbe
pop
shl
jo
dec
dec
or
sbb
mov
imul
movsl
mov
sbb
jg
adc
cmc
das
scas
hlt
mov
icebp
dec
or
jl
fs
push
xchg
into
imul
jno
and
mov
loope
xchg
push
inc
pop
mov
adc
cs
outsb
mov
cs
scas
xor
lcall
or
cmpb
xchg
xchg
and
mov
push
outsb
andl
and
pop
xor
jp
adc
pusha
ret
dec
inc
inc
pop
stos
push
aas
sbb
inc
mov
cmp
jnp
jbe
push
mov
jl
sti
je
cltd
not
and
out
sbb
push
loop
inc
imul
sbb
add
sbbb
les
cmp
jmp
ret
jo
sbb
push
and
int
and
inc
dec
psubusb
lock
sbb
inc
dec
pushf
inc
lods
or
or
and
dec
fadds
xchg
cmpsl
mov
mov
mov
jg
hlt
iret
mov
fdivl
std
sbb
push
pop
inc
inc
subl
jge
inc
mov
lock
lock
push
cli
mov
or
decb
xor
int3
mov
jge
movsb
in
inc
inc
daa
jle
hlt
mov
and
lods
lds
pushf
pop
imull
cltd
xchg
enter
mov
sbb
fnstenv
neg
inc
jg
bnd
mov
and
jmp
lcall
loop
nop
jmp
hlt
xor
ret
clc
inc
mov
mov
fiaddl
or
and
sbb
stos
sti
lods
pusha
pop
decb
in
add
and
rclb
hlt
xchg
push
add
jbe
test
shll
daa
or
pushf
aad
mov
hlt
sbb
inc
add
mov
cmpsb
es
fs
enter
out
inc
adcl
add
cltd
xor
mov
cltd
pop
mov
pushf
dec
or
int
lahf
cli
fcomps
je
je
inc
push
and
pop
call
jno
hlt
cmp
and
push
leave
mov
xor
inc
cli
scas
cmc
scas
cmp
or
push
or
push
xchg
adc
inc
dec
in
push
daa
sub
in
test
hlt
jbe
add
cli
cmpsb
pop
mov
orl
lock
in
inc
sbb
xor
jb
lods
xchg
fmulp
ja
push
ljmp
and
mov
and
add
filds
mov
aam
push
pop
jle
inc
loop
or
lock
mov
stc
push
mov
outsl
rorl
xor
and
aaa
scas
ljmp
push
nop
push
push
rclb
aad
mov
xor
push
dec
faddp
cmp
add
or
lock
subb
scas
idivb
pop
inc
vpsrlw
cmp
dec
inc
es
sahf
or
xor
faddl
mov
outsb
es
fdivp
pop
bswap
mov
and
jecxz
les
pop
push
popf
inc
enter
je
sbb
mov
fldl
push
lds
jo
stc
in
mov
aad
add
mov
cwtl
xor
jg
inc
pop
mov
sbb
inc
jne
mov
arpl
daa
sbb
mov
mov
lds
fsts
push
inc
ficompl
insb
rclb
fldt
push
lahf
pop
and
dec
imulb
jle
xorb
adc
fsub
shll
xchg
jle
inc
sbb
clc
pop
test
mov
cmp
lea
and
std
enter
pop
ljmp
sub
shrb
inc
mov
adc
notb
lea
push
aad
sbb
hlt
test
sahf
mov
out
fmulp
sbb
movsb
inc
push
inc
imul
pop
sahf
and
mov
dec
fwait
or
movsb
xchg
js
loope
add
pop
subl
decl
outsb
fldt
push
mov
and
inc
ljmp
cmp
mov
test
mov
sbb
and
xor
ljmp
or
ja
cld
and
negl
int
es
test
cmpsl
test
add
es
clc
add
imul
aam
xor
xor
xchg
fcompl
dec
xor
cld
pop
pop
mov
sbb
sbb
push
or
or
xchg
or
lcall
pushf
or
std
ror
sti
inc
mov
add
test
shll
insb
xchg
mov
int3
sbb
loop
shrl
cmp
or
xchg
ja
xchg
push
mov
es
jl
cmc
sub
test
imul
loopne
repnz
add
or
mov
pop
loop
push
cmc
ret
inc
push
sbb
mov
inc
push
and
testl
sbb
mov
stos
mov
xlat
xchg
jecxz
xchg
and
mov
inc
mov
or
cmp
jmp
mov
inc
xor
sbb
add
mov
cmp
shll
outsb
or
inc
add
mov
inc
mov
sti
sub
lcall
add
pop
outsb
push
lock
sub
cs
pushf
adc
sub
cmp
pop
out
push
or
adc
loopne
mov
ljmp
ret
rcr
ds
test
mov
call
and
mulb
push
sbb
or
add
push
sbb
add
fs
pop
and
in
test
adc
jno
mov
mov
sarb
or
xor
push
stos
add
test
lcall
aam
adc
loopne
fnstenv
mov
in
data16
js,pt
scas
nop
insl
inc
sbbb
or
js
out
ss
sub
pusha
pop
mov
adc
mov
dec
or
pop
inc
rclb
pop
inc
pop
mov
sbb
push
mov
mov
push
repnz
cli
ret
push
orb
xor
movsb
ss
nop
xor
or
hlt
add
xor
pop
adc
das
add
orl
gs
fstp
fcom
fcomps
mov
sarb
mov
mov
repnz
insb
inc
pop
pushf
adc
sub
add
adc
iret
pop
sub
inc
and
sub
cmc
jmp
pop
dec
dec
pop
sbb
les
mulb
xchg
push
inc
test
movsb
sub
sub
out
movsb
push
test
pop
push
lret
je
adc
add
mov
sub
insb
fbstp
cmpsl
ds
loopne
xchg
bound
mov
add
inc
stos
vxorps
xor
or
sub
pop
decl
pop
xorl
push
shrb
insb
inc
movb
add
test
loopne
loop
stc
adc
push
jo
lret
xorb
mov
imul
lahf
jle
cmp
mov
or
mov
xchg
pop
cmp
addl
sbb
lock
jecxz
in
sub
inc
arpl
filds
sub
movsb
sbb
push
push
int3
push
mov
addr16
xchg
and
push
out
mov
clc
bound
shll
fsubl
push
mov
loope
lods
int3
add
xchg
aaa
pop
inc
rep
dec
cli
xor
pop
loope
mov
dec
inc
xor
inc
aam
fdiv
lahf
clc
dec
fisttps
mov
cwtl
dec
ret
and
aas
test
mov
hlt
push
in
adc
pop
lea
sbb
incb
sbb
ret
dec
mov
pop
sub
clc
or
rorl
xor
andl
push
adc
jl
pop
scas
lahf
shr
add
push
cmp
movsl
pop
add
es
and
mov
mov
dec
sub
or
fildll
mov
call
icebp
sbb
cli
inc
dec
sbb
mov
ficomps
jp
imulb
xor
mov
mov
xchg
push
repz
pop
mov
out
mov
mov
push
in
lods
es
and
mov
xor
repnz
adc
hlt
ljmp
rcrb
imul
call
xchg
test
xchg
add
push
daa
xchg
ficomps
xchg
xchg
out
dec
sahf
test
call
fsubs
ret
xchg
cmp
adc
dec
sbb
mov
ret
cld
orb
es
push
push
stos
mov
outsl
fdivrs
testb
inc
std
pop
dec
mov
inc
test
fwait
inc
push
js
es
lret
imul
push
mov
jo
repnz
mov
add
aas
cli
fildll
sahf
pop
rcr
sbb
xlat
fs
pop
and
clc
data16
mov
jns
push
push
jmp
push
nop
xor
movsb
or
mov
mov
inc
fidivl
je
adc
cmp
cmpl
test
testb
xchg
mov
lock
pop
jo
outsb
clc
jmp
adc
pop
xchg
mov
pusha
clc
bound
fwait
pop
loop
les
add
sub
pushf
insb
int
xor
xor
mov
mov
and
cmc
xor
push
cld
pop
push
xchg
test
jmp
mov
jl
and
cmp
push
in
pop
mov
mov
adc
cmp
test
ljmp
adcb
addr16
add
cmp
or
in
mov
dec
add
push
push
sub
mov
push
scas
ljmp
jmp
je
cmp
sbb
cmp
mov
icebp
add
xor
or
sub
imul
pop
in
lds
fistl
movsl
inc
pop
rorb
cltd
imul
push
pusha
pop
fnstsw
jecxz
mov
lcall
mov
push
add
negb
sbb
fcoml
repnz
cld
mov
imul
ja
ss
ds
aas
push
push
pop
imul
sbb
adc
pop
mov
shrb
call
test
fdivr
jl
sbb
das
mov
jb
cmc
xchg
js
loopne
pop
roll
in
out
inc
xor
aam
leave
fnop
aaa
sbbb
adc
fcomps
rcr
dec
stc
add
pop
push
sub
jb
push
add
ret
adc
cmp
mov
mov
out
mov
ja
daa
je
in
inc
inc
pop
dec
xchg
scas
lock
test
pop
test
int3
xor
inc
arpl
sahf
push
jge
movsb
icebp
or
push
addb
mov
iret
sub
xchg
cwtl
jno
xchg
xchg
push
jne
mov
movsl
mov
adc
roll
add
into
loopne
in
mov
or
adc
add
in
mov
mov
aad
and
mov
cmpsb
add
loop
fisubrl
xchg
aam
or
hlt
mov
les
mov
cmp
cmp
mov
xchg
cli
pop
xchg
lock
sbb
push
cmc
out
mov
jnp
ficompl
cmp
dec
mov
push
mov
mov
ja
jmp
jp
push
or
hlt
aaa
sbb
xor
mov
add
mov
test
mov
push
scas
ds
pop
test
add
jae
adc
pusha
add
xchg
rcl
mov
push
mov
and
cmp
adc
jg
imul
imul
mov
nop
and
cmpsl
sahf
clc
and
mov
jge
sub
push
mov
mov
and
dec
pushf
push
xchg
sub
pop
xchg
loop
sub
fisttps
sbb
push
and
jno
mov
adc
and
push
mov
mov
dec
mov
adc
dec
mov
ds
jge
movsl
out
or
loopne
dec
loop
call
mov
add
aas
add
decb
in
sbb
inc
call
and
push
gs
sbb
lock
mov
mov
adc
dec
nop
lock
push
mov
inc
rclb
ficompl
pop
dec
mov
aad
pop
cmpsb
push
aam
push
inc
pop
push
push
fistpl
shll
mov
adc
iret
sbb
repz
cltd
movsb
sbb
mov
test
push
mov
or
mov
std
pop
mov
fldt
xchg
mov
dec
sbb
push
cmpb
jmp
jns
dec
xor
inc
aam
adc
mov
xchg
fidivl
imul
lcall
pop
sub
or
pop
pop
mov
ret
insl
shll
mov
lock
popf
adc
adc
ljmp
sub
dec
mov
mov
lods
pop
lds
pushf
stos
and
push
sub
sbb
mov
pop
cwtl
leave
fwait
rcrb
fbstp
add
add
ds
ljmp
push
xor
push
mov
scas
push
jo
xchg
jno
imul
cs
arpl
es
jecxz
xor
pusha
inc
mov
adc
call
inc
jg
and
dec
loope
hlt
fsts
cmpsb
enter
and
add
imul
sbb
out
mov
or
pop
cli
repnz
jns
adc
mov
or
arpl
sbb
imul
sti
push
orl
subb
push
mov
stos
out
xchg
pop
inc
scas
pop
cld
add
test
outsl
ret
call
mov
xchg
gs
test
into
rcrl
clc
lcall
pop
pop
pop
pop
xchg
push
pop
loope
jbe
sahf
and
jecxz
jo
rolb
mov
fs
sahf
and
cmp
push
inc
pop
pop
inc
or
pop
lock
test
dec
pusha
and
cmpsb
xor
ror
popf
pop
aam
sbb
mov
cmpsb
nop
mov
in
shll
adc
mov
inc
push
mov
nop
mov
aad
push
push
idivl
ljmp
incl
rcr
dec
adc
adc
push
add
jl
in
push
lea
lcall
adcl
daa
out
cmp
lods
rcrb
pop
aas
mov
cmpsl
sbb
loop
outsb
js
ret
test
sub
sbb
dec
mov
arpl
movsl
xor
xor
orl
xor
pop
lock
std
push
add
and
shl
sub
and
cmp
sbb
dec
popa
negb
rolb
leave
pop
push
mov
jmp
dec
mov
daa
addr16
xor
push
hlt
mov
add
xchg
mov
imul
and
push
lock
aad
or
adc
insb
dec
jmp
xor
sbb
and
iret
scas
loope
test
aad
aaa
fldenv
fimuls
xor
or
imul
mov
je
rolb
movsb
fs
ret
push
push
push
mov
inc
mov
repnz
int
dec
jno
add
push
mov
filds
aas
ficoms
xchg
out
jne
adc
andb
loopne
xor
push
pop
push
dec
mov
xor
movsb
adc
adc
mov
sub
inc
pop
or
jns
fs
rcll
ficoml
fsubs
pushf
cmpsb
adc
out
add
cwtl
inc
xchg
cmp
mov
lock
std
mov
sbb
cmp
mov
add
pop
out
lret
loop
fs
add
adc
mov
rolb
movsb
add
dec
mov
scas
or
cmp
insb
cmpsl
push
enter
xor
push
hlt
sub
mov
mov
cmp
xor
pop
jmp
pop
sahf
and
push
nop
jle
inc
jno
ljmp
sub
addr16
jle
leave
add
dec
test
xchg
aaa
jne
and
add
cmp
xor
xor
rclb
andb
push
add
and
dec
inc
mov
pminsw
gs
dec
pusha
sbb
add
xchg
jno
imul
bnd
mov
and
cmp
leave
sbb
or
outsb
xor
xor
jne
lret
xchg
adc
out
andl
inc
sbb
jne
sti
ja
mulb
and
cmpsb
xchg
mov
jl
popa
loopne
daa
ficoms
sbb
fadd
lret
shl
imul
imul
hlt
loop
add
xchg
xchg
dec
or
inc
orb
fcmovne
or
fnstsw
aaa
or
loop
scas
mov
inc
or
cmp
inc
clc
push
imul
dec
repnz
mov
pusha
imull
xchg
push
and
inc
insb
imul
fistpll
inc
pushf
scas
dec
sub
mov
pop
pop
das
jb
lret
dec
mov
jae
fs
xor
dec
mov
in
mov
push
sbb
scas
jmp
sub
cmc
xchg
push
andl
or
clc
add
mov
dec
sbb
pop
cmp
lea
gs
negl
in
jne
jle
inc
inc
jae
vmovhps
mov
rclb
mov
movsl
outsb
rolb
xor
aad
loopne
pop
aas
or
iret
js
and
addr16
xor
dec
sbb
sahf
pminub
popa
arpl
pop
pop
ljmp
stc
mov
andl
mov
lds
mov
sarb
outsb
mov
mov
fiadds
pop
mov
xor
imul
stos
repnz
dec
ja
add
pop
pop
or
ret
cld
das
push
xchg
out
loop
sub
mov
test
xor
std
push
fisttpll
loope
std
cmc
xchg
push
fs
or
cld
mov
fld
or
es
rclb
sub
and
mov
add
add
pop
push
xchg
xor
imul
jmp
inc
sbb
imul
jo
cltd
aas
pusha
int
xchg
push
mov
rclb
inc
cwtl
and
insl
add
popa
jns
subb
dec
loop,pn
es
aaa
pushf
sub
inc
jl
and
sub
or
or
mov
jbe
insl
xchg
inc
xchg
jb
aas
add
jl
stos
cmc
out
pop
inc
push
nop
or
call
jge
outsb
mov
cld
shlb
xor
fdivs
test
push
jmp
dec
movsl
rolb
fdivl
les
push
sub
xchg
sbb
fcomp
js
xchg
sbb
arpl
mov
mov
sarb
add
xchg
cmp
xchg
push
adc
daa
lds
mov
dec
add
xchg
out
mov
shrl
dec
mov
pop
stos
inc
mov
xchg
mov
nop
fisttpll
int3
aas
adc
movsl
rorl
dec
loope
xchg
shr
je
sub
inc
shr
sub
jl
es
inc
pop
add
sub
lods
sti
flds
mov
add
scas
ds
cs
push
call
xor
pop
pop
pop
jge
sub
fs
push
push
adc
pop
pop
out
dec
in
mov
inc
popa
test
mov
xlat
hlt
push
int3
add
adc
in
jge
loopne
or
sbb
lock
loope
push
push
inc
push
repz
lock
ljmp
repnz
dec
cld
sbb
push
test
mov
xor
mov
popa
or
sbb
xor
jg
inc
pop
ret
jae
sbb
adc
push
dec
xchg
inc
sysexit
xor
adc
adc
mov
mov
ds
lret
add
mov
cmp
sub
lods
stos
inc
sti
lods
jl
pop
repnz
daa
test
lods
fnstsw
pop
push
mov
call
sub
pminsw
fcmovnu
rorb
xchg
fwait
pusha
pushf
mov
and
call
fisubs
jmp
dec
insb
std
push
rorl
imul
mov
or
addr16
or
dec
push
cmp
movsb
cwtl
sbb
cmp
lcall
mov
jle
pop
outsb
inc
mov
or
test
int3
sahf
sub
rclb
test
call
mov
inc
and
fisttpl
jne
sbb
pop
ret
inc
jg
and
jbe
push
jbe
add
or
test
pop
and
movsl
cmp
inc
jbe
xchg
fwait
dec
call
jmp
subb
mov
test
inc
ljmp
cvtps2pi
push
sbb
xlat
mov
ds
jnp
xor
test
pop
xchg
aam
adc
pop
pop
repnz
rorl
ds
mov
mov
ret
ss
mov
sbb
test
mov
mov
leave
mov
mov
and
loope
pop
pop
inc
mov
stos
negb
pop
pop
mov
jecxz
adcl
push
negl
call
mov
inc
mov
and
cwtl
dec
inc
inc
mov
outsl
dec
pop
jno
orb
adc
mov
mov
inc
stos
cmpsb
push
adc
adc
ds
fistpl
in
repnz
push
push
push
stos
jp
js
sbb
and
mov
inc
mov
lock
int
inc
out
jnp
js
push
shrb
push
rcrl
pop
data16
std
pop
nop
mov
loop
xchg
icebp
hlt
enter
pop
popf
add
sub
pop
or
mov
jge
pop
orb
ret
cmp
iret
xchg
sahf
aad
inc
cmc
mov
xchg
mov
and
mov
lock
sbb
sti
hlt
push
ret
repnz
ss
mov
jle,pn
or
orl
inc
pusha
je
lock
inc
inc
lea
pushl
push
adc
arpl
mov
ds
mov
negl
sub
jecxz
fisttpl
add
xor
movl
push
sbb
inc
adc
cmp
or
sbb
test
outsb
mov
or
sub
ljmp
xor
push
or
std
adc
xchg
ret
or
ja
rcrl
mov
rclb
jle
outsb
xorl
jno
mov
scas
mov
es
xor
adc
cmpsb
sbb
js
ret
ret
rorb
roll
mov
out
lret
push
fdiv
push
lea
in
add
adc
shl
dec
jle
pop
cmp
cwtl
push
pop
pop
push
adc
mov
dec
call
ret
push
outsl
sbb
sbb
jno
movsl
dec
iret
cltd
pop
std
pop
movsl
sbb
and
cli
cli
sbb
jg
cmp
xor
mov
js
sti
loope
daa
cmp
adc
mov
and
inc
or
inc
rcr
jle
cli
shlb
rcrb
or
pop
sbb
push
and
or
pop
jo
mov
cmpsb
xchg
clc
dec
cli
sub
pop
xchg
pop
xor
and
push
inc
push
insb
mov
pop
push
loopne
jmp
ljmp
mov
or
cmp
jo
adc
inc
inc
jnp
xchg
scas
pusha
or
sub
fwait
mov
gs
pop
sbb
sub
inc
inc
pop
rorb
sub
mov
sar
push
lods
jge
pop
jb
rcr
mov
mov
movl
cwtl
enter
add
push
pushf
cmp
fdivrs
jg
xchg
inc
in
pushl
out
dec
sti
outsb
add
les
int
outsb
or
jecxz
push
outsl
xchg
or
int
sbb
mov
inc
xor
mov
testb
cmp
sarl
jo
sub
sbb
lcall
xchg
and
push
ljmp
mov
xchg
out
lret
pop
pop
push
jns
js
and
mov
loopne
inc
xchg
pop
adc
outsb
fidivs
rol
pop
dec
push
mov
hlt
xchg
mov
std
loop
sbb
or
ret
pop
jg
push
bound
inc
pushf
and
pop
cmp
and
stos
in
sub
lret
flds
pop
mov
sahf
test
inc
jge
aas
std
mov
nop
shll
xchg
mov
fcomps
xor
call
or
sub
sub
mov
aas
dec
std
cli
mov
xchg
int3
sbb
dec
lods
jne
and
enter
cs
adc
sub
mov
push
push
aas
mov
cltd
std
lock
sub
call
jecxz
repz
dec
dec
aas
mov
or
mov
cmp
rcrb
mov
mov
cmp
adc
or
push
call
loop
cs
cmp
inc
popa
mov
mov
or
add
push
inc
andb
loope
or
adc
push
sbb
sbb
mov
jb
pop
clc
popa
or
sbbl
notl
inc
testb
fsubrl
mov
nop
xor
into
out
sbb
or
fcmovnu
xchg
push
stos
rolb
test
imul
pop
mov
ds
lea
sbb
out
orl
jp
popf
jle
ja
sbb
fiadds
cwtl
js
loopne
lock
jge
mov
jle
fistpl
lock
dec
cmp
pop
jnp
add
outsb
mov
mov
pushl
xchg
mov
mov
cli
or
outsb
mov
lea
ljmp
push
dec
jle
add
popf
movsl
push
lods
sahf
mov
mov
mov
or
jg
imul
cmp
fwait
out
in
popa
test
shrb
js
scas
or
ret
in
sub
push
dec
sbb
icebp
call
push
in
mov
daa
add
mov
ds
sbb
mov
add
and
addr16
jecxz
pop
scas
and
lock
xor
mov
stos
inc
cwtl
mov
jbe
cmp
push
in
loopne
pop
add
sub
inc
cs
fld
idivl
test
mov
sbb
aaa
mov
add
scas
inc
mov
andl
test
dec
pop
and
cmp
movsb
ljmp
xchg
mov
push
inc
xchg
push
movsb
dec
push
aam
les
ror
loope
xchg
aad
sbb
or
push
ja
mov
xchg
push
xor
add
xor
test
mov
or
cmp
and
jl
cmp
fidivrs
pop
jp
cli
call
inc
ret
xchg
ds
addl
push
ret
fstpt
inc
pop
xor
sub
xchg
pushf
pop
insl
call
push
int3
dec
into
lcall
inc
jge
push
imul
push
orb
push
lret
mov
xchg
lds
cmp
and
adcb
sub
xor
mov
xchg
or
in
int3
pushf
push
cmpsl
addb
inc
fs
stc
inc
jecxz
fcmove
dec
jns
mov
jge
cmp
stos
insl
fs
dec
cmpsl
shlb
jp
lret
sub
xchg
add
cmp
sti
loop
or
idivb
outsl
pop
xorb
jno
cmc
and
nop
mov
or
ret
or
or
xchg
dec
pop
icebp
add
pop
mov
sub
fdivrs
lock
sbb
pop
jl
cltd
pop
jge
cmp
xor
test
sarb
insb
pop
jo
add
mov
jmp
xor
jnp
dec
mov
xchg
cmpsl
push
dec
pop
add
cmp
inc
lcall
int
or
mov
call
dec
xchg
lods
pop
mov
jno
mov
iret
mov
adc
in
push
sbb
sbb
xchg
jne
jb
adc
fisubrs
int3
add
push
sbb
out
out
cmp
sbb
xor
dec
push
xchg
arpl
adc
das
in
inc
xchg
sbb
jp
mov
sbb
lds
dec
adc
add
sub
dec
dec
sub
mov
movsb
or
stos
lahf
int3
ljmp
adc
scas
mov
call
sti
bound
negb
hlt
sti
call
or
cld
push
mov
push
hlt
mov
pushl
insb
sub
jmp
cmp
cs
cwtl
aad
ret
stos
sub
mov
insl
ljmp
int3
and
loop
xor
push
icebp
pop
sbb
out
and
or
adc
push
or
mov
mov
push
and
clc
add
push
xchg
cmp
add
and
or
aas
sub
outsb
pusha
xor
mov
lds
into
into
mov
mov
push
xor
sub
xlat
inc
pop
scas
popa
cli
test
icebp
repnz
movsl
push
sbb
arpl
shrl
pop
es
into
mov
dec
jmp
sti
es
gs
add
sbbb
cmp
pushf
push
and
rolb
or
cmpsl
mov
repz
ja
into
icebp
mov
push
add
outsl
movsb
and
and
pushf
sub
pusha
push
cli
adc
ds
aaa
or
std
cwtl
in
sbb
adc
add
das
js
push
xchg
shll
jnp
js
mov
and
mov
pushf
aaa
pusha
ret
je
fistps
xor
mov
xchg
ret
sub
adc
rep
cwtl
xchg
or
out
mov
mov
bnd
loopne
add
or
ret
sub
xor
sbb
adc
inc
mov
mov
aas
xchg
mov
clc
push
pop
and
jno
fsubl
adc
pop
cmc
std
adcl
lea
push
mov
pushf
inc
out
movsb
push
pusha
cmc
xchg
pop
in
or
incl
xchg
lcall
push
sarb
jle
arpl
aad
push
or
mov
call
cmp
or
jo
pop
mov
mov
and
fadds
xor
xor
movsb
movsl
or
loop
movsl
sub
jle
xor
mov
push
in
mov
jae
and
lods
dec
push
mov
pop
jge
rorb
sbb
adc
je
jg
mov
sbb
inc
test
push
add
rorl
out
dec
outsb
add
dec
ljmp
stc
mov
sbb
mov
adc
loop
repnz
ja
jge
sbb
movsb
mov
mov
pop
push
aaa
cld
and
inc
inc
pop
push
xchg
aas
mov
sbb
xchg
dec
fwait
daa
popa
add
inc
and
add
or
dec
scas
bound
cmp
clc
lds
mov
sarl
or
das
mov
mov
dec
adc
and
insb
aam
lock
mov
lea
and
dec
cs
dec
adc
adc
push
sub
cwtl
je
jo
jecxz
out
popf
xchg
mov
lea
bound
jp
mov
jns
cmpsl
adc
or
lock
pop
sub
jns
lock
cmpsb
push
add
xor
addb
pop
adc
mov
or
imul
or
test
ret
mov
cwtl
cmp
dec
es
test
es
std
add
pop
gs
insl
dec
push
out
jp
sti
lahf
repz
xchg
std
int3
mov
mov
aaa
mov
push
jl
sub
fisttps
cmp
icebp
jg
fs
mov
mov
in
mov
shll
push
js
gs
push
jbe
mov
and
pop
push
lock
or
cli
or
cmc
xor
fnstcw
add
lcall
daa
push
aas
jmp
outsl
daa
push
mov
xor
mov
jmp
adc
or
and
mov
cmpsl
push
hlt
push
clc
and
mov
inc
jb
movsb
shl
pop
or
or
lret
jp
add
xchg
or
lahf
andl
movsl
push
jo
cmp
xor
add
dec
pusha
add
ljmp
sti
jp
fldl
sbb
cmpsl
mov
push
test
sub
fs
rcrb
sub
sub
sub
mov
rclb
push
call
je
jne
add
pushl
lods
js
cmp
aaa
jle
add
hlt
pop
xor
jl
aas
mov
lock
mov
out
lahf
clc
stos
das
call
ds
js
sub
push
ss
mov
hlt
dec
pop
lahf
loopne
cli
mov
mov
icebp
data16
stc
lock
sub
imul
pusha
mov
mov
pop
fcmovu
out
fwait
call
jp
sbb
mov
adc
shlb
push
pop
clc
lahf
stc
or
cmpb
lods
cs
jmp
scas
sub
or
push
and
push
add
outsb
pop
xor
je
sub
pop
daa
insb
clc
hlt
inc
xor
lcall
cmc
adc
adc
jge
or
inc
adc
fsub
loop
add
addr16
push
imul
xor
stos
and
jle
push
aas
dec
dec
jecxz
or
clc
popf
dec
adc
mov
adc
movsl
std
stos
jnp
sbbl
xchg
ljmp
jg
into
xchg
test
and
and
pop
or
or
std
mov
icebp
push
cmp
adc
out
and
cmc
and
add
cld
lock
jecxz
jecxz
cmp
pop
nop
shl
sub
testl
push
adc
dec
push
or
jl
cmpsl
pop
sub
push
push
pop
add
jno
xor
paddsb
adcb
cmp
jbe
shll
mov
popf
xchg
adc
pushf
xor
jle
push
sub
sub
outsl
cld
cld
shlb
xor
clc
imul
or
inc
or
lods
adc
test
iret
insb
cmp
lock
data16
ljmp
and
data16
mov
xlat
add
inc
jg
rcrb
sar
jge
push
xor
push
add
adc
jecxz
jae
pusha
xor
mov
ljmp
mov
std
and
iret
lcall
xchg
hlt
loop
mov
mov
xor
dec
pusha
adc
shrl
ficoms
cwtl
movsb
in
cwtl
sahf
rolb
js
mov
push
pop
shlb
negl
add
push
inc
lds
add
push
in
hlt
xor
dec
arpl
and
aas
inc
cmp
sbb
dec
dec
cmpsl
jmp
inc
sbb
jl
push
sbb
lret
js
pop
sub
movsb
sbb
mov
mov
mov
jnp
fisubrs
je
es
out
stc
inc
push
pop
mov
addl
cmp
dec
jmp
sub
mov
mov
leave
ja
xor
jb
mov
mov
lock
inc
mov
jg
xor
repz
lcall
hlt
fldcw
push
xchg
and
sti
subb
out
pop
outsb
lret
ret
pop
les
dec
pushf
push
mov
loope
sub
jb
aas
test
xchg
cs
das
out
jp
xchg
sub
nop
mov
dec
jb
mov
inc
cmpsl
pop
inc
add
inc
mov
loopne
push
inc
lods
add
push
sbb
in
add
jg
mov
rclb
loop
cli
movsl
sub
sbb
mov
inc
xor
pushf
push
test
lods
or
cmp
les
in
inc
into
ljmp
xchg
add
dec
adc
jo
xor
dec
add
pop
add
call
ret
push
push
push
icebp
fcomip
mov
push
test
fiadds
in
into
sbb
xor
or
or
jbe
mov
sbb
inc
pop
push
sub
outsl
xchg
lea
xchg
xor
shl
xor
fidivrl
pop
cltd
mov
hlt
divb
mov
push
popl
lea
sahf
into
test
adc
adc
push
xabort
pop
test
ljmp
das
test
cli
in
js
subb
or
jmp
xchg
push
mov
hlt
shlb
in
bswap
decl
xor
out
nop
jb
and
jg
ss
pop
call
addr16
xchg
clc
ja
dec
cmpsl
mov
or
icebp
rcr
jae
ljmp
ljmp
adc
cmp
mov
push
sbb
mov
lods
fisubrs
insl
cmpb
push
ljmp
das
jae
popf
inc
pusha
decw
fs
out
or
popf
mov
or
insb
push
sbb
or
outsl
mov
add
call
cmp
xor
or
sbb
addr16
push
mov
xlat
adc
and
sub
lahf
js
mov
mov
clc
inc
insb
ficoms
cmpsb
neg
cli
movsb
cmpsl
pop
in
lret
lock
pop
mov
or
dec
jo
movsb
es
sbb
dec
adc
dec
out
pop
outsl
icebp
je
cmp
mov
sub
cld
mov
outsb
imul
mov
fdivs
notb
out
xchg
or
add
in
mov
jbe
aaa
adc
lock
add
sti
mov
mov
aam
add
and
out
mov
into
idivb
add
inc
cltd
cmp
pusha
test
mov
adcb
xor
xchg
jl
jmp
mov
jle
or
arpl
je
xor
outsb
inc
fstps
lock
inc
loope
mov
and
xorl
outsl
adc
ljmp
cmp
jecxz
bndstx
mov
push
cs
cli
lret
rolb
movsb
in
test
and
enter
fcomps
and
dec
bound
mov
push
lahf
addl
xchg
and
pushf
dec
xor
icebp
testb
out
xchg
negl
and
les
sub
pushf
xchg
popf
inc
push
push
ficoml
mov
sub
rolb
cmp
jg
scas
insb
mov
repz
dec
push
clc
pop
pop
stos
jg
test
scas
es
sub
lea
or
rolb
in
inc
lret
or
lods
in
dec
xchg
jp
add
sbb
cmp
or
jbe
lods
mov
push
pop
loopne
clc
inc
mov
mov
or
pop
mov
pusha
mov
jl
rcll
sbb
enter
cmp
dec
push
inc
imul
push
mov
or
es
adc
add
lret
xchg
add
mov
inc
insl
mov
jo
loopne
push
inc
imul
mov
add
lret
jmp
dec
insb
out
in
and
and
ficompl
pop
jle
xchg
jcxz
clc
xchg
clc
mov
push
popf
les
aad
mov
repz
xor
pop
mov
movb
mov
add
adc
scas
int3
pushf
in
sub
mov
and
inc
out
or
dec
ljmp
xor
xchg
movsb
cmpsb
inc
dec
data16
arpl
cltd
push
cmp
push
push
mov
int3
adc
pop
dec
add
pushl
in
inc
hlt
int
xchg
jle
jbe
jo
push
jbe
or
jae
mov
aas
mov
mov
in
nop
jecxz
loope
dec
adc
and
sub
and
int
sub
movd
pop
xor
pop
mov
shrb
sti
pop
jmp
push
popw
lahf
jae
add
out
inc
adc
in
lods
scas
jge
sub
adc
mov
cwtl
push
and
and
mov
insb
pop
out
fnsave
pop
cld
mov
addr16
jb
int3
add
sub
mov
ret
lahf
jb
mov
ret
orb
fdivrp
push
sub
mov
xchg
imul
pop
pop
aas
push
push
mov
mov
sub
inc
dec
fiaddl
ljmp
cmpsl
inc
inc
ja
sub
or
call
push
hlt
dec
adc
daa
mov
cld
mov
loope
jae
and
pusha
movsl
sub
rol
stc
imul
mov
ds
divl
loop
sub
mov
cs
mov
xchg
lock
and
mov
adc
ss
jne
cmpsl
sub
aad
jo
inc
repz
dec
test
sub
fisubl
jo
mov
pop
rorb
sar
cmc
xor
sahf
mov
icebp
xchg
loopne
outsl
add
sbb
ljmp
test
les
xchg
inc
shl
mov
movsb
jle
dec
aaa
lods
test
xor
xchg
ds
testb
test
test
cltd
sub
xor
rolb
out
push
adc
inc
xor
push
sub
lahf
jo
icebp
idivl
push
mov
lock
jmp
inc
and
add
xor
mov
fwait
mov
cmc
dec
push
xor
inc
ja
mov
sbb
rcll
pop
sbb
jecxz
xchg
arpl
mov
jle
movsl
add
push
insl
sub
in
fdivr
pop
enter
mov
jmp
adc
ljmp
adc
or
cwtl
dec
add
rol
dec
lea
mov
adc
aad
push
nop
cmpsb
ja
mov
push
cld
sub
inc
movsb
je
arpl
sahf
or
je
out
je
or
cmpsb
push
ret
iret
sahf
dec
mov
dec
scas
adc
or
jp
mov
shll
add
into
and
adc
cltd
sarb
and
shlb
andb
sbb
hlt
mov
sub
clc
mov
mov
mov
adc
mov
sub
sbb
push
mov
iret
mov
jecxz
loopne
lds
pop
add
ret
jle
push
or
inc
ficomps
and
pop
mov
push
xor
dec
jo
xor
cmp
mov
jo
mov
or
xchg
sahf
adc
js
adc
pop
mov
fs
pop
mov
mov
loop
je
into
push
or
lea
pop
dec
pop
sbb
inc
ret
pop
in
pop
push
je
ja
push
mov
cmp
push
decb
dec
scas
loopne
scas
mov
sbb
jno
cs
lret
lret
sarb
mov
stos
sarb
andb
inc
enter
add
cmpsl
jl
jp
xchg
push
cwtl
cmp
fstps
push
push
icebp
mov
sub
in
inc
inc
sbb
les
sbb
xchg
test
pop
dec
faddp
ds
push
jbe
mov
std
repnz
inc
sub
pop
mov
sub
push
ret
loop
testb
dec
ss
or
scas
cli
or
lcall
cmpsl
in
outsb
ss
popa
pop
lahf
dec
int3
mov
sti
xchg
std
ret
dec
sarl
cwtl
pop
jmp
push
es
mov
stos
inc
push
cmp
mov
xchg
push
icebp
repz
adc
lock
mov
push
insb
adc
movhps
jnp
ds
jmp
mov
mov
jno,pt
lcall
adc
ja
mov
add
iret
add
sar
xlat
fcmovb
sub
adc
hlt
xchg
decb
mov
jne
pop
and
and
cwtl
mov
lock
xlat
test
cli
das
test
or
test
out
jbe
rorb
or
inc
xor
fucom
shlb
pop
xor
ljmp
xchg
cmp
adc
out
cmp
push
inc
lods
pop
push
movsl
add
clc
orl
iret
jle
das
enter
cmp
or
cli
ret
xchg
js
add
mov
iret
mov
add
andb
nop
cmp
negb
pop
es
sbb
sbb
test
sub
ss
jp
mov
dec
and
mov
nop
in
mov
mov
sbb
add
add
mov
inc
push
ror
mov
cmc
js
movsb
dec
aam
insb
dec
mov
adc
dec
mov
cld
imul
pop
addl
test
sub
cwtl
or
aaa
es
and
shlb
pop
cmpsb
rolb
loop
daa
cmc
xchg
jg
mov
stos
jl
shlb
scas
jg
sbb
xchg
pusha
xchg
lcall
fwait
jae
pop
xchg
xchg
insl
jo
shlb
iret
test
cld
xchg
sub
sbbl
loopne
push
jg
xlat
sub
stos
into
and
xchg
cmc
add
xor
sbb
xchg
xor
xchg
hlt
dec
or
and
cmpsl
decb
xor
dec
mov
call
loop
hlt
pop
in
out
icebp
adc
divl
sbb
sbb
push
je
cmp
mov
inc
cli
adc
adc
sbb
add
xor
iret
movsb
movsb
mov
inc
pop
jbe
cmpsl
xchg
inc
mov
mov
orb
cmp
rol
sbb
int3
rcrl
adc
xlat
imul
or
sub
mov
adc
in
jmp
lods
push
add
inc
sbb
fwait
pop
dec
adc
out
outsl
fst
xor
inc
mov
in
call
sub
data16
or
jle
and
fldcw
push
cmpsb
xor
cmpsb
pop
pusha
loop
add
sbb
pop
mov
mov
sbb
add
sbb
sub
mov
aas
adc
adc
or
scas
fwait
xorl
inc
fisttpll
lea
adc
mov
sti
sbb
xor
jp
xchg
test
js
fcmovnbe
ret
fcoms
pop
and
xchg
stos
rcrb
cltd
and
pusha
add
push
scas
or
rolb
xchg
sbb
imul
int3
aaa
sar
push
jae
icebp
mov
push
cmpsb
icebp
test
dec
adc
sbb
loopne
jne
xor
adc
sub
jg
pop
aaa
enter
add
mov
sub
jl
in
push
or
das
pop
jp,pn
pop
subb
arpl
test
adc
sub
repz
xchg
data16
lds
cmp
or
inc
mov
push
je
sub
fstps
movsb
ljmp
sbb
adc
ja
mov
adc
mov
or
or
pop
mov
aad
loopne
std
fdivs
sbb
test
mov
out
in
in
lods
dec
js
sbb
pop
fwait
mov
jmp
imul
and
shll
aad
cld
adc
cmp
cmpsl
inc
or
push
lret
push
adcl
sahf
sub
push
sbb
mulb
call
inc
mov
add
jno
dec
shrb
int3
cmc
call
rclb
rcrl
in
jae
push
or
popa
out
ss
add
mov
adc
cli
addl
mov
push
ja
push
jo
mov
sub
jbe
xchg
pop
xlat
loopne
pop
shlb
ret
imul
cli
add
lods
sbb
jnp
mov
sub
cmp
dec
data16
mov
rcll
subl
push
data16
mov
loop
push
jge
popa
add
js
rorb
adc
hlt
icebp
rolb
mov
push
repz
in
push
inc
lea
ljmp
loopne
jb
dec
add
pop
mov
mov
sbb
jo
je
inc
sbb
adc
out
clc
or
push
cmp
sub
xor
lcall
adc
cmp
in
mov
sbb
mov
jp
inc
jmp
dec
aad
adc
pop
or
push
addb
mov
imul
repnz
outsb
jg
test
and
cwtl
inc
fimuls
pop
sbb
adc
push
imul
out
outsb
or
cmp
dec
ret
dec
into
es
pop
aas
movsl
mov
jecxz
in
fistpl
pop
mov
mov
sahf
pusha
sub
rcrb
test
test
dec
sub
inc
je
or
pop
jle
js
les
push
lods
test
test
test
dec
jecxz
or
push
add
inc
xor
arpl
out
movsb
push
or
adc
xor
sbb
pop
inc
adc
pop
andl
stos
js
xchg
vzeroupper
cwtl
call
outsl
jns
in
jae
arpl
mov
cli
dec
push
rolb
out
sbb
outsl
pop
add
pop
push
adc
dec
pop
mov
sbb
cld
pop
dec
jp
jns
das
inc
push
idivl
sub
ljmp
dec
shr
jg
clc
mov
mov
and
or
jg
pop
scas
faddp
loope
ljmp
mov
mov
cli
das
xchg
insb
jl
sbb
jp
cli
test
std
or
xor
pusha
icebp
jno
hlt
jb
jmp
mov
les
jg
es
js
repz
mov
shll
pop
insb
cmp
cwtl
pushf
mov
mov
adc
scas
push
ret
shrd
aad
jno
enter
and
fs
test
lds
insb
lcall
xchg
outsb
xor
mov
dec
sahf
scas
addb
sbb
dec
cwtl
xchg
push
out
sahf
inc
mov
and
pop
sub
dec
sar
orb
cs
test
mov
push
psrlw
aad
sbb
xchg
jl
add
adc
mov
and
sbb
and
out
iret
lcall
mov
inc
push
jmp
fs
dec
dec
dec
jo
push
sbb
in
aam
jl
jl
outsb
sbb
add
and
pusha
fimull
mov
push
lock
jns
xor
xor
pop
sbb
xchg
je
sahf
jl
push
fiaddl
mov
jne
test
adc
lea
xor
test
sti
jge
pop
bound
and
mov
sbb
xchg
arpl
add
outsb
adc
and
arpl
push
test
pop
push
inc
outsl
gs
jg
icebp
push
add
fistpll
inc
dec
rorb
jb
xchg
int
in
lret
cmp
pop
or
sub
xchg
push
mov
pushf
mov
mov
pop
rcrl
cwtl
jo
lret
test
cli
and
mov
and
adc
xchg
xor
push
test
xchg
jae
pop
pop
pop
dec
nop
adc
ljmp
inc
cmp
in
sbb
mov
xor
mov
mov
mov
mull
and
inc
push
jno
test
bound
shr
push
pop
mulb
mov
mov
out
mov
pop
mov
mov
into
daa
sub
clc
push
xchg
adc
into
dec
pop
push
in
scas
mov
cmp
lahf
test
xchg
pop
add
rorl
lods
loopne
jmp
jo
loopne
pop
pop
pop
add
outsl
loop
incb
jmp
cmpsl
ss
mov
xor
mov
pop
adc
aad
mov
push
test
decl
xchg
push
add
scas
stos
rclb
xchg
add
fst
pop
lcall
or
je
jmp
adc
loopne
addl
nop
push
in
add
add
ja
mov
xor
mov
mov
lret
in
lahf
jne
stc
push
jmp
cmpsl
mov
pop
mov
xchg
pop
cltd
movsl
mov
pushf
ret
jp
std
add
mov
add
or
jno
dec
ja
add
fadd
push
shlb
test
mov
mov
cmpsb
aas
in
xchg
outsb
xor
lahf
cltd
jne
stos
fsubrl
mov
cs
inc
stos
jp
pusha
pop
jecxz
loopne
repnz
cwtl
adc
fwait
sub
pop
cmc
mov
mov
in
fdivs
sub
notl
push
stos
cmpsb
scas
in
or
sub
clc
mov
movsl
pop
sub
add
cmp
pushf
data16
lock
jl
popl
ror
mov
dec
ret
inc
cmp
xor
fisttpll
cmp
adc
push
sbb
jecxz
xor
push
jl
push
repz
push
pop
sub
cmp
pop
xchg
lock
les
push
jae
je
mov
jp
cli
dec
push
xchg
push
insl
lds
cld
aam
lcall
rol
negl
dec
clc
add
pop
lods
daa
or
call
mov
call
scas
mov
xchg
repz
lods
xchg
inc
jb
inc
dec
hlt
pop
inc
clc
inc
sub
dec
mov
cmp
sub
fimull
and
dec
sbb
or
jnp
xchg
adc
or
cmp
nop
loope
and
loopne
shrb
cmpsl
push
dec
adcb
mov
in
push
adc
cli
pop
cltd
cmp
mov
rol
push
push
push
aaa
pop
scas
push
xor
popa
sbb
or
ret
mov
stos
stc
popf
fisubrs
sub
inc
icebp
jnp
lock
mov
sbb
pop
mov
cmp
lret
or
mov
pop
in
mov
loope
pushw
or
push
test
adc
add
adc
pushf
fldt
lock
cmp
cmp
in
sub
and
cwtl
dec
adc
xchg
inc
repz
pop
or
sahf
in
cltd
into
sti
pop
adc
aam
mov
rcrb
pop
inc
mov
js
add
int3
hlt
mov
sbb
adc
aad
fnstsw
and
mov
es
add
and
lock
jb
test
dec
sub
fs
jecxz
ret
sub
or
sub
das
mov
push
jmp
outsl
sbb
push
adc
andb
xchg
mov
inc
ret
rcl
and
sbb
or
jecxz
and
xor
rclb
js
mov
add
std
in
jle
xor
js
mov
add
jg
pop
outsl
gs
in
jmp
pop
out
push
outsl
dec
nop
jl
xchg
jg,pn
cmp
subb
mov
pop
loope
loopne
test
mov
js
cmp
idiv
xor
mov
add
inc
fistl
or
push
jne
jnp
xchg
lret
rolb
pushf
inc
and
cmpl
pop
clc
and
inc
sbb
adc
call
repnz
incl
sub
sub
or
clc
jl
adc
jg
dec
inc
lds
in
popf
xor
js
add
xchg
in
jmp
cmp
fwait
jnp
or
xchg
mov
jle
clc
clc
addr16
sub
call
outsb
pop
pop
jo
mov
orl
push
jmp
sarb
or
xchg
or
int3
orl
sbb
sbb
jne
test
pop
adc
jno
inc
jne
cmc
xchg
mov
mov
in
mov
cmpsl
mov
outsb
dec
push
js
fldenv
mov
mov
or
js
push
inc
ret
sarb
icebp
shlb
sub
lahf
cmp
add
and
or
mov
shr
neg
adc
fmuls
jne
incb
xchg
mov
cmpsb
loop
jo
or
js
icebp
push
mov
out
sbb
push
sub
mov
or
inc
dec
jmp
in
mov
push
mov
loopne
fwait
mov
mov
sbbl
clc
xchg
scas
roll
lret
and
adc
xchg
mov
xor
je
mov
ss
jecxz
insl
dec
sub
xor
push
subl
inc
pop
into
cmpsb
les
hlt
adc
ja
orl
xchg
mov
xchg
mov
lcall
sub
sti
xor
push
std
imul
jno
inc
test
mov
movsb
mov
push
ret
into
loopne
test
hlt
dec
fsubr
shl
cwtl
mov
jmp
mov
add
jg
dec
pop
cltd
inc
cmp
pusha
xor
adc
rcl
jbe
xor
je
les
lea
imulb
cli
cmp
adc
outsb
outsl
dec
and
jecxz
mov
sub
mov
and
das
jmp
dec
adc
or
inc
or
push
cmovs
push
inc
outsl
dec
dec
pop
mov
enter
fucomi
mov
jb
pusha
lock
inc
jae
sub
jp
add
cltd
mov
add
inc
jg
push
push
adc
mov
push
lcall
icebp
test
jne
popa
out
loope
cmp
add
das
push
or
mov
and
inc
push
cmp
cmp
xorl
push
mov
mov
cmp
inc
mov
cld
pusha
std
lahf
daa
and
sbb
icebp
popa
jecxz,pt
push
push
das
test
in
stc
subb
pop
ja
mov
xchg
ss
adc
aaa
sti
pop
dec
dec
mov
cld
call
insb
fcmovnu
push
xchg
dec
mov
lret
stos
lret
popf
mov
sbb
mov
fwait
lea
int3
sbb
mov
jp
fs
shlb
sbb
and
and
jno
push
xchg
enter
ret
ret
pop
and
psllq
and
push
fisubs
out
adc
or
sbb
fiaddl
jecxz
sub
xchg
lahf
pushf
aam
push
adcl
jp
icebp
fstpt
movsl
push
sbb
cmp
and
push
push
pop
mov
push
enter
iret
push
cmpsb
dec
sub
fdivp
daa
push
push
xchg
into
xor
imul
sbb
dec
aaa
pop
adc
fdivrp
ja
push
jecxz
push
sbb
int3
jl
popa
sbb
push
or
push
fidivrs
or
and
ja
repz
lret
and
jb
cmp
cmp
cmpsb
fcoms
sahf
and
cwtl
dec
xor
mov
jp
mov
xor
jge
inc
mov
mul
repz
cmpsl
pushf
iret
aam
pop
lret
cwtl
out
or
cwtl
mov
and
aas
cmp
cmc
into
pop
inc
ljmp
or
imul
or
inc
dec
or
rclb
mov
pop
sub
orb
lret
int3
in
mov
jo
sub
sub
dec
cwtl
je
xor
scas
sbb
jge
jne
or
xor
sub
jno
cmp
adc
les
lock
aaa
test
vcmppd
mov
add
outsb
call
sbb
pop
mov
mov
add
leave
repz
fldenv
adc
push
cmpsb
inc
cmp
xor
mov
pop
jmp
inc
pusha
xchg
or
out
les
mov
xchg
insb
or
inc
adc
cltd
xchg
mov
jle
hlt
adc
clc
jl
or
add
loopne
fsubl
in
rcr
mov
inc
fadd
push
das
adc
or
popa
inc
loopne
mov
icebp
sbb
aas
pop
sbb
std
sub
fs
mov
dec
loopne
cs
jg
lret
mov
jge
adc
xor
cli
sbb
mov
and
add
lahf
cli
fiaddl
lcall
or
add
adc
inc
daa
jle
popf
lock
sbb
aas
cwtl
jmp
fcmovnb
or
add
pop
push
fwait
dec
push
xchg
add
nop
lcall
mov
add
test
mov
mov
lds
inc
dec
repz
add
inc
cmp
mov
cltd
or
aaa
push
xchg
jae
ja
pop
mul
jle
call
mov
fcoml
xlat
jp
cmp
lahf
push
and
incb
push
movb
subb
pop
int3
adc
dec
ret
and
inc
cmp
jl
and
push
int
pusha
or
adc
test
into
add
jnp
js
insb
inc
or
push
daa
jl
add
mov
ljmp
js
lea
loope
adc
dec
mov
es
clc
je
push
ret
pop
outsb
outsl
mov
loope
cltd
cmp
dec
xorl
shl
jmp
dec
add
addr16
test
adc
or
xchg
mov
add
iret
push
jl
iret
addb
push
sbb
sub
aaa
lret
mov
or
call
or
sbb
aas
mov
rcrb
call
dec
inc
inc
push
and
das
add
imul
mov
jp
fwait
mov
in
add
mov
pop
lahf
in
sbb
inc
movb
mov
adcl
inc
dec
mov
xor
pop
mov
mov
addl
add
test
repz
jp
mov
das
and
cltd
fstpl
sub
js
jae
push
mov
lds
pop
cli
jecxz
jg
inc
adc
push
gs
and
and
add
adc
xchg
ss
adc
xchg
scas
adc
inc
in
add
mov
insl
mov
aaa
push
aaa
test
jl
and
cmp
fsubl
push
xchg
sbb
push
out
and
lea
jmp
push
xchg
push
add
fdivr
int
rclb
mov
xchg
cmp
js
mov
inc
cli
das
frstor
sbb
ret
or
fwait
dec
roll
inc
xchg
ds
add
pusha
push
ljmp
jb
aam
mov
pop
shlb
or
sub
data16
adc
call
lea
push
cmp
fs
or
shrb
adc
mov
push
inc
jmp
pop
and
dec
insb
adc
ret
inc
mov
push
je
pop
jmp
pop
adc
pop
inc
jae
das
aad
and
loop
nop
pushf
push
sub
adc
inc
dec
rolb
push
in
or
outsb
lahf
cmp
and
pop
imul
jne
lret
jmp
cmpsb
push
xor
cmp
gs
aad
add
je
dec
test
push
add
add
cmp
adc
mov
push
negb
lahf
adc
inc
push
repnz
insl
mov
mov
lahf
icebp
sbb
xchg
push
scas
inc
hlt
sub
hlt
inc
cmp
jo
jmp
push
loopne
or
psrld
or
fcompl
ret
cmp
pop
rcrb
test
insl
pop
dec
inc
mov
cmp
loope
mov
or
pop
pop
outsl
clc
sbb
aas
inc
lahf
dec
pop
mov
cltd
pop
xchg
in
fprem
adc
inc
mov
pop
roll
and
lahf
fcoms
pop
mov
call
pop
mov
sbb
loop
je
lock
je
dec
nop
pop
or
in
in
mov
and
add
ss
dec
imul
mov
out
cli
add
cmp
xchg
dec
pop
sub
fisttpll
dec
ljmp
inc
pop
fistps
sub
add
mov
dec
flds
add
cli
movsb
push
push
lcall
and
adc
xchg
cmp
nop
adc
fwait
and
and
pop
inc
pop
inc
jne
mov
mov
inc
cmp
jbe
movb
das
dec
sub
jne
gs
test
gs
jnp
jl
and
imulb
je
mov
mov
xor
xchg
cmc
stos
push
lea
or
add
popa
mov
sbb
iret
pop
movsl
push
js
mov
adc
adc
fildl
push
jl
pop
dec
cli
xor
out
sbb
pop
jmp
dec
sbb
and
or
lods
rclb
or
aas
lods
cld
mov
cmpb
push
xchg
test
adc
mov
or
rorb
icebp
rorb
jle
xchg
jbe
insb
lods
xchg
xor
mov
rcrl
inc
js
popa
lahf
aad
or
fmull
inc
sub
cmp
cmp
movsl
pop
push
inc
and
push
sub
push
dec
pop
inc
cli
sub
xchg
adc
or
push
xchg
shlb
mov
add
push
push
add
ret
push
or
daa
shrl
mov
xchg
scas
cmp
dec
lcall
push
jge
hlt
xor
or
pop
in
psubd
outsl
cld
je
bound
adc
fmull
mov
and
clc
inc
xor
fs
cmpsb
call
mov
mov
xor
mov
xchg
dec
jbe
dec
in
xchg
mov
adcl
mov
das
sahf
mov
sub
mov
jne
xor
cmp
rorl
gs
xor
xor
int
test
pushf
outsl
push
and
mov
fdivrp
xor
jnp
jno
xchg
add
into
cmpl
imul
xchg
fisubs
sbb
ss
movsl
stos
int3
inc
sbb
push
ret
movsl
loop
cmc
inc
xchg
dec
inc
sub
adc
mov
aad
dec
insb
adc
scas
jge
lea
popa
sub
add
xlat
call
cmc
adc
push
jl
mov
push
data16
dec
or
aas
scas
pop
imul
push
iret
icebp
addb
rol
mov
mov
xchg
push
lock
sub
add
les
xor
or
push
adc
movsb
lock
leave
add
stos
inc
mov
pop
push
jo
sarb
loop
jmp
mov
push
jbe
movsb
jne
add
fadd
mov
push
in
dec
inc
cli
ds
add
ret
sub
outsb
aas
push
push
pop
sarb
sahf
clc
cmp
jmp
pop
in
sbb
cmpsl
jg
inc
mov
popa
jg
jno
mov
popf
ficompl
sub
add
or
sahf
lret
sbb
add
mov
das
add
mov
mov
pop
mov
push
dec
and
lret
loop,pt
mov
lods
push
arpl
push
push
xchg
flds
mov
jmp
pop
add
sbb
xchg
jge
inc
sbb
sbb
or
mov
ja
adc
in
jae
inc
popa
dec
shlb
pop
push
xchg
loopne
mov
jno
mov
repnz
xor
or
fsubrs
sub
sti
cwtl
xlat
lret
fistpll
int3
fistpll
into
xor
push
fsub
adc
push
adc
adc
jle
js
push
and
jnp
pop
outsl
inc
rcrl
aad
into
in
cmpl
loopne
les
xchg
mov
xor
les
inc
mov
dec
icebp
fcmovb
cmpsb
pop
xor
fcompl
push
jmp
cmp
notb
and
sub
clc
mov
pusha
je
dec
sub
rol
xor
pop
inc
inc
lcall
sbb
add
addb
inc
dec
divps
inc
cmp
push
aam
iret
xchg
das
fmuls
mov
push
stos
addr16
push
or
icebp
xor
mov
inc
dec
mov
mov
jl
popa
xchg
xchg
add
dec
mov
mov
inc
sub
movsb
inc
xor
sub
jne
mov
outsb
movsl
jo
cmp
mov
and
push
movb
xor
test
test
daa
adc
cmp
dec
ret
dec
cmpsl
jno
sub
or
icebp
lea
mov
xor
sub
jg
out
jg
and
dec
insl
movsl
or
lock
cmp
adc
xchg
into
jb
push
or
xchg
aam
xor
pop
pop
test
lods
xchg
icebp
jecxz
inc
xchg
push
jae
enter
sbb
and
iret
xor
jne
lret
testb
xlat
movsb
gs
sub
push
mov
xor
dec
in
xor
add
ja
loopne
rorb
mov
movsb
push
les
popf
dec
mov
sub
lea
lret
xor
xchg
hlt
fs
xor
or
faddl
dec
sub
ljmp
aam
ficompl
adc
sbb
sbb
sbb
cmp
jp
outsb
push
jge
fiadds
pop
mov
data16
in
bnd
ret
call
ss
test
lret
adc
enter
imul
fmull
or
inc
sahf
mov
lret
cmp
ds
push
mov
fwait
dec
push
je
pop
shrb
mov
mov
pop
dec
pop
dec
sti
push
aad
push
inc
lds
and
adc
adc
test
lcall
test
mov
mov
pop
mov
gs
lret
dec
push
mov
outsb
adc
lock
imul
fstl
add
sub
dec
and
xor
aad
lods
out
sub
xchg
add
mov
sub
add
pop
mov
mov
pop
or
cmp
add
pop
dec
lret
mov
ja
jl
jmp
jmp
jg
filds
lahf
cmp
cwtl
mov
fadds
aas
hlt
movsl
in
int
sub
cwtl
mov
mov
jb
cmp
je
ret
cli
ss
pop
or
mov
dec
sub
mov
add
add
or
std
and
sub
and
pop
cs
aaa
xor
push
data16
dec
xor
mov
or
test
add
popa
inc
xor
or
and
or
mov
cmpsb
jg
xchg
test
pop
dec
mov
inc
outsb
nop
xor
testb
arpl
cltd
pusha
bound
outsl
sbbl
and
cmp
lock
adc
push
std
xor
sub
mov
stos
test
inc
xchg
or
out
imul
shll
cmp
scas
dec
mov
mov
jmp
push
sbbb
sahf
faddl
lret
rol
mov
pusha
ret
test
mov
add
pop
or
mov
dec
pusha
insb
xchg
push
pop
mov
sbb
aam
sub
in
mov
push
dec
dec
sub
fs
xchg
dec
into
jne
imul
xor
out
test
cmp
jno
call
imul
rorb
popa
cs
dec
sbb
js
int3
loopne
bound
xor
test
cmp
rorb
loope
mov
arpl
out
pop
push
addr16
mov
push
add
push
mov
xor
sahf
or
dec
pop
sub
mov
aam
hlt
inc
cmp
loop
clc
jp
shlb
loop
mov
rorb
xor
out
lret
scas
mov
ds
test
jae
jne
iret
mov
sub
push
push
shlb
push
jno
sub
imulb
jno
cmpsb
leave
mov
std
xchg
xor
inc
jl
push
shlb
orl
imul
xchg
sbb
call
pop
scas
jo
jne
out
fimull
lret
dec
dec
xchg
ret
fdivl
nop
movsb
shl
jmp
lahf
ret
dec
sbb
sti
inc
dec
mov
imul
xchg
scas
ret
push
push
mov
stos
mov
jae
cwtl
add
xchg
add
xchg
push
xchg
lret
sbb
ret
dec
repz
fs
sub
jl
inc
das
mov
xchg
pop
inc
or
xor
mov
nop
bound
inc
lahf
mov
shl
mov
adc
jnp
or
adc
xor
insb
pop
inc
lcall
fld
and
push
stos
push
ret
aad
out
mov
mov
lock
hlt
add
cltd
sub
add
loope
xchg
add
sbb
in
mov
hlt
loope
cld
adc
push
add
sub
or
dec
inc
pop
enter
pop
ret
cmova
loope
pushf
mov
sbb
sub
adc
cwtl
notb
dec
or
push
fcomps
fstps
and
mov
movsb
jl
iret
xchg
fsubr
popl
push
adc
mov
insb
hlt
ret
loopne
pop
dec
loopne
int3
push
fistpll
lret
add
cmc
sbbb
adcl
lahf
or
mov
adc
sarl
xchg
mov
repnz
mov
addl
daa
push
outsb
dec
xor
jne
mov
cmp
push
sahf
js,pt
pop
mov
sbb
clc
push
pop
scas
in
insb
negl
cmpl
cmp
loop
ret
sar
push
popf
mov
pushf
scas
mov
xchg
hlt
popa
pavgb
sub
jl
test
xchg
mov
push
sub
inc
test
ljmp
fs
add
in
adc
add
jmp
inc
mov
divb
cli
pop
sbb
xchg
add
sub
sub
mov
xchg
call
or
in
jmp
bound
aam
add
add
mov
fsubrs
fiaddl
jbe
ret
repnz
jmp
pop
cmpsb
mov
or
inc
rcrb
sub
cwtl
adc
ja
mov
xor
cli
inc
and
decl
xor
and
and
rol
mov
adc
jecxz
icebp
inc
mov
aam
mov
jmp
inc
jb
addr16
test
lock
int
out
pushf
dec
sti
jns
repz
pop
sub
and
add
lahf
fimuls
sbb
std
xor
sbb
or
sbb
mov
mov
call
lods
aas
mov
adc
nop
cmp
ds
ret
pop
test
push
test
mov
insb
inc
cmc
clc
addb
jle
xor
adc
divl
icebp
pusha
fst
insb
leave
pop
out
scas
js
scas
push
insb
testl
out
dec
stos
xor
lods
lock
or
insl
daa
inc
lahf
repnz
mov
loopne
jecxz
pop
add
call
cli
idivl
cmp
stos
or
push
mov
push
in
add
cli
jno
push
and
jge
inc
int3
add
add
mov
dec
mov
outsb
mov
cmpsl
mov
mov
and
or
add
cmpsb
push
shrb
push
addr16
jne
push
out
lds
mov
inc
mov
fdivrp
or
ljmp
ds
ret
and
ret
pop
and
idivl
adc
add
jl
rcrb
xchg
adc
lahf
push
loop
mov
loopne
pop
in
je
mov
jecxz
shrl
pop
test
xchg
stos
sbb
mov
fldcw
xchg
movb
cmc
fs
arpl
mov
mov
outsb
inc
decl
xchg
adc
ds
dec
test
mov
add
popa
lea
push
test
mov
mov
xchg
mov
xor
ljmp
cmpsl
rclb
sbb
test
rclb
inc
inc
stc
or
mov
movsl
sbb
sbb
dec
mov
push
jo
je
add
popf
pop
lea
mov
lcall
outsb
dec
dec
xor
xchg
mov
jg
notl
inc
inc
shl
nop
shl
cld
mov
lock
mov
outsl
insb
xlat
or
insl
mov
or
mov
cmpsb
dec
leave
add
ljmp
sub
lret
xor
xor
mov
cli
clc
ljmp
dec
mov
cmp
inc
dec
rorb
je
dec
aam
add
add
vpunpckhbw
cmp
jnp,pt
lds
or
mov
cmp
lods
cmp
xchg
es
cld
cmp
push
adc
iret
lea
aam
xorb
push
jp
call
inc
int
dec
stos
inc
in
shll
aaa
lret
mulb
pop
xor
mov
mov
xor
pop
mov
cmp
aas
push
cmp
mov
and
jns
push
add
and
jle
mov
fdivr
mov
repnz
loopne
imul
out
jp
call
mov
push
jg
mov
pop
mov
test
or
out
jecxz
adc
addb
xor
das
xor
push
or
pop
rcl
int
cli
jmp
mov
ljmp
jbe
daa
rcrl
xchg
test
mov
imul
enter
daa
push
xor
jl
sbb
mov
fsubl
cld
hlt
movl
pop
mov
imul
icebp
dec
xchg
sahf
xchg
out
xlat
mov
jae
aaa
push
nop
dec
shrb
jl
xchg
test
push
das
jnp
stc
aas
cmp
pop
shll
xchg
fisubrs
jns
or
les
icebp
pop
mov
mov
xchg
jb
mov
push
lods
and
ljmp
push
lret
and
mov
iret
or
sub
add
mov
lahf
mov
or
add
xchg
out
enter
test
or
jmp
loopne
fs
mov
inc
ret
clc
xor
add
daa
pop
shlb
clc
push
inc
adcb
and
inc
inc
fcmovnb
pop
add
lods
or
cmpsb
fisubl
adc
fsubrs
fs
iret
pop
xor
cmp
or
cwtl
xchg
js
push
add
sub
or
fildl
mov
ficompl
add
cmp
out
push
pop
fistl
roll
mov
cmp
adc
xor
push
inc
pop
add
add
rorb
xchg
call
mov
mov
mov
mov
dec
je
stos
inc
and
sub
lock
cltd
sti
scas
or
js
popf
mov
jnp
add
in
insl
cmp
cmpsb
in
xchg
shl
xchg
jbe
lcall
cmp
xor
push
mov
sub
mov
setp
js
inc
xor
inc
sbb
xlat
add
mov
or
stos
dec
sbb
pop
fisubs
call
roll
mov
ds
cmp
clc
jo
shrb
repnz
divb
xchg
icebp
pcmpgtd
jmp
jb
movsb
movsl
push
xor
iret
outsl
add
and
gs
je
adc
fidivrs
lcall
dec
add
dec
aas
je
add
mov
or
enter
mov
mov
out
out
add
rclb
loop
mov
insb
xchg
sub
jne
fmuls
mov
add
pop
sub
ret
cmp
inc
push
rolb
test
test
adc
scas
incb
arpl
xor
das
mov
or
push
cwtl
push
dec
inc
in
sub
call
or
cmp
mov
or
mov
bound
in
out
push
dec
adc
lcall
mov
cs
roll
lcall
int
mov
insb
and
xor
loopne
mov
xor
cli
mov
jmp
notb
xchg
pop
jge
lods
fcomps
test
mov
adc
sub
pop
cmp
mov
adc
rclb
inc
xchg
add
fstps
pusha
mov
stos
mov
test
adc
rcll
les
or
sbb
imul
mov
shll
xchg
outsb
inc
stos
pop
or
sbbb
dec
dec
fcomp
add
pop
sub
insl
and
jle
int
rcrl
aam
cltd
es
or
fwait
andb
or
fsubrl
and
fmuls
movsb
ret
mov
add
call
out
and
push
adc
loope
bound
andb
aam
fnsave
sbb
xchg
adc
push
pusha
sbb
sub
fcompl
pop
sub
xor
and
pop
jo
stos
xchg
sbb
inc
mov
push
mov
mov
jp
push
movsb
arpl
stos
pop
ret
aam
out
add
out
cs
jmp
shll
add
cmp
jnp
inc
push
icebp
mov
ficoms
sbb
push
adc
cwtl
mov
add
scas
dec
mov
or
inc
decl
pusha
or
mov
adc
outsl
sbbb
cli
push
lret
loopne
mov
jecxz
inc
pushf
cmpsb
cli
cli
ret
icebp
mov
and
aaa
sbb
mov
jmp
lcall
xchg
repz
inc
pop
and
xchg
enter
mov
insb
or
std
inc
xchg
jecxz
mov
js
ds
std
cld
outsb
popa
pop
mov
or
ja
lea
pop
in
lcall
cld
mov
or
mov
sub
lods
adc
daa
fwait
and
leave
lock
sbb
sarl
jo
shrl
inc
cmp
and
xor
test
in
xorb
pushf
push
inc
xchg
push
rorb
cmpsb
mov
jge
pop
and
or
in
mov
fimull
cli
sarl
mov
cmp
pop
stos
add
add
data16
dec
dec
push
jle
test
and
loopne
fisttps
clc
mov
fisubl
adc
orb
stos
pop
orb
test
outsb
inc
mov
jno
imul
inc
loop
ror
dec
xchg
scas
js
lret
pusha
scas
lds
fs
adc
mov
xchg
in
adc
clc
out
lea
and
ret
dec
pusha
roll
cld
jae
mov
ljmp
fcmovnb
subb
inc
mov
mov
js
add
or
scas
outsb
rolb
fisubrl
xchg
jp
or
icebp
mov
aas
sbb
sub
dec
push
mov
cs
add
inc
mov
insb
and
inc
sbb
arpl
jle
inc
inc
fisttpll
push
test
fptan
les
std
mov
cmp
sub
lcall
aad
sub
pop
sbb
cli
das
lock
mov
rcl
jo
insl
ret
jle
or
and
jo
dec
pop
jg
or
clc
jle
ret
jecxz
xchg
jecxz
inc
xor
or
nop
dec
andb
jnp
arpl
sbb
adc
insl
sub
xor
jb
jae
or
mov
jbe
jl
sbb
cld
cmpsb
ret
icebp
sbb
add
test
xchg
and
push
aaa
mov
testl
mov
jo
jnp
clc
pop
sbb
cmpsl
inc
cmpsl
sub
pop
mov
dec
inc
out
stos
adc
loopne
sar
sbb
mov
xchg
inc
pusha
mov
std
leave
rcll
push
ficoms
mov
fisubrl
imul
adc
or
loopne
pop
mov
pusha
mov
cmp
push
in
sahf
ljmp
rcrb
jp
js
xor
xlat
dec
fstp
xor
inc
lret
inc
out
or
sbb
dec
ljmp
lock
xorb
xchg
cmp
pusha
les
pop
test
ret
sbb
pop
inc
jl
mov
and
sarl
xorb
sti
xchg
in
loope
fdiv
cld
or
lock
ret
dec
enter
sbb
push
cmp
add
aad
and
inc
cmovae
dec
call
jge
dec
mov
loope
sub
inc
popa
inc
cmp
adc
test
test
popf
popa
arpl
out
mov
outsl
repz
cmpsb
mov
cld
dec
je
inc
fcmovu
mov
leave
xchg
add
movl
or
test
pusha
mov
fistl
inc
xchg
fsubrs
lahf
xchg
sub
cmpsb
ljmp
mov
xchg
fidivl
and
pop
mov
repz
movl
xor
sub
xchg
sub
cmp
cmc
call
cli
aas
addr16
jp
cs
lds
push
jno
xchg
insb
inc
adc
or
push
stos
or
push
lock
xor
push
adc
pop
pop
push
lock
mov
jb
push
repnz
sbb
ud2
adc
ss
cli
cwtl
pushf
in
test
and
mov
or
int
push
adc
lods
jmp
mov
jecxz
push
inc
adc
ret
andb
call
or
jno
aam
sub
loopne
push
les
aaa
mov
xchg
clc
ficoml
jb
sub
xor
add
pop
mov
jl
into
fildl
xor
push
and
mov
lret
outsb
int3
push
in
arpl
pop
out
push
loope
mov
in
adc
icebp
push
fsubrs
add
xchg
icebp
push
mov
fists
cmp
pop
pop
jmp
jo,pn
sysret
aas
jmp
andl
scas
mov
cmp
sarb
adc
cmp
xor
mov
fs
xchg
sub
dec
notb
dec
or
aaa
jmp
inc
js
movd
xchg
stos
pop
cmp
loop
rolb
jno
es
dec
mov
mov
mov
inc
xchg
rolb
add
sbb
xchg
aaa
clc
dec
out
push
shr
fists
fwait
cmp
cmpsb
mov
je
in
adc
int3
outsb
mov
repnz
xchg
jmp
pop
cmp
cmpl
mov
add
dec
fisttpll
and
dec
mov
js
sbb
lods
outsb
mov
aas
cmp
movsb
push
movsb
pop
arpl
xchg
imul
push
call
pop
daa
test
lods
cmp
mov
ret
lock
cmc
psadbw
cmp
sbbb
push
inc
dec
clc
or
ljmp
int
inc
clc
in
fst
test
je
jbe
adcb
in
sub
mov
ljmp
or
cmc
push
jp
and
outsb
mov
pop
out
mov
int
cmp
inc
xchg
xchg
pop
movsb
cmp
jae
shr
out
jp
daa
cmp
cli
cmc
mov
xor
sbb
das
cvtps2pi
jne
and
std
dec
push
lret
aam
cwtl
push
outsb
xchg
cltd
sbb
cmp
push
mov
dec
pop
dec
xor
scas
mov
adc
add
sbb
mov
sub
test
mov
pop
pop
fisttps
mov
jg
sbb
cmc
test
sub
loope
cmpsl
push
inc
adc
mov
subb
orb
sub
inc
add
lea
mov
das
shlb
scas
std
or
fildll
lods
sahf
xchg
sbb
jl
mov
sarb
ds
mov
iret
add
mov
loope
aad
push
scas
movb
push
or
mov
xchg
icebp
inc
ret
sti
push
and
and
cli
sbb
adc
sbb
sub
xchg
loopne
adc
and
rcrl
stos
inc
mov
mov
mov
cmp
fs
loopne
jae
addr16
mov
jno
xor
andl
and
dec
ja
hlt
push
pop
mov
pop
enter
xchg
fstl
clc
dec
push
jl
xchg
lret
js
dec
fs
mov
pushf
fs
ret
push
jno
loope
or
add
push
jne
sub
push
push
enter
stos
ss
sub
or
xchg
xlat
xchg
xorl
xor
xor
add
push
sub
daa
pop
les
xor
icebp
mov
jno
js
sahf
pop
call
mov
or
sub
add
xchg
pop
adc
mov
sub
jmp
inc
push
hlt
mov
lahf
loopne
sbb
sub
sbb
out
add
mov
mov
rorl
aad
rcl
aad
stos
std
inc
mov
jne
mov
add
das
inc
stos
mov
loope
stos
inc
rolb
cwtl
add
push
cmp
rorl
adc
push
inc
data16
imul
nop
and
jbe
jle
aas
jnp
adc
push
outsl
cmpsl
icebp
add
inc
fs
lahf
or
test
jmp
loope
xor
nop
inc
pop
mov
jecxz
push
jecxz
test
aas
add
stos
add
or
push
lahf
jp,pn
adcl
mov
push
xchg
lcall
push
pusha
xor
push
push
outsb
push
rcrl
mov
push
or
add
jb
jns
test
scas
fnstenv
mov
fistpll
cmpsb
xchg
mov
xorb
xorb
scas
out
push
and
leave
push
adc
pop
loopne
inc
lods
sub
mov
inc
mov
mov
xor
mov
ret
enter
repnz
pushf
mov
inc
jl
adc
jmp
mov
jns
push
nop
sbb
shlb
aam
mov
mov
sbb
cmp
je
pop
fimull
add
push
fwait
sahf
mov
sbb
jle
stc
inc
jo
cmp
les
fisubrl
loop
push
test
inc
iret
dec
sub
pop
shl
sub
pusha
fstpt
adc
sub
jl
aam
xchg
adc
repz
add
int
dec
lret
cmc
sbb
jb
mov
dec
and
jnp
fsincos
mov
add
push
cvttps2pi
loopne
cwtl
dec
dec
push
adc
mov
ret
dec
int
push
rolb
fists
cmpl
enter
inc
push
popf
add
pop
aam
aam
imul
loop
adc
js
addb
into
sbb
stos
jnp
xor
and
pop
and
rorb
push
jmp
ret
mov
fnstsw
aaa
jl
mov
clc
sbb
push
push
cwtl
dec
jbe
lock
sub
sti
js
cmp
ret
dec
xchg
addps
and
mov
push
hlt
mov
inc
push
fstpt
mov
js
daa
add
jae
push
movsb
scas
push
aad
cli
in
test
inc
orl
clc
das
and
xchg
and
stos
subb
hlt
mov
adc
fistps
sahf
jns
mov
jge
push
lret
dec
jo
scas
mov
movsl
ds
pop
add
lods
and
inc
mov
jae
test
je
cmp
cmp
shl
inc
cmp
aam
arpl
inc
dec
jle
sub
dec
mov
push
dec
adc
test
xchg
dec
cmp
ds
push
dec
sub
out
xchg
or
subb
sbb
jmp
insl
cltd
dec
mov
iret
mov
mov
inc
imul
jp
inc
jb
pusha
dec
test
aad
pop
cmp
push
mov
inc
lods
in
jg
fwait
or
setge
and
fisttpll
ficoml
fwait
mov
mov
bound
push
cli
or
inc
mov
push
push
andb
jl
lcall
enter
data16
jnp
arpl
mov
sub
movsl
pop
test
mov
mulb
rolb
inc
shlw
test
ljmp
sub
inc
or
dec
fdivrp
add
sbb
mov
xor
cmp
push
out
xor
int
dec
scas
test
inc
mov
jle
sti
es
in
adc
js
stos
dec
inc
sub
dec
insb
lret
mov
div
inc
movsl
mov
cmpsl
xchg
outsb
pop
mov
mov
and
mov
stos
mov
adc
out
jle
loopne
das
mov
xorb
mov
push
mov
mov
mov
mov
daa
mov
push
or
outsl
mov
pop
dec
adc
push
jne
or
pop
iret
stos
xor
mov
ret
scas
stos
je
aad
imul
push
mov
and
xchg
lea
cmpsl
sahf
je
test
in
add
cwtl
or
mov
shlb
xor
inc
dec
testb
js
xchg
pop
or
pop
fucom
je
dec
dec
jle
icebp
xchg
add
fildl
int3
xchg
pop
xchg
paddusb
jbe
and
dec
cltd
inc
mov
inc
cwtl
aam
pop
daa
shlb
pop
xor
pop
jo
in
mov
xchg
lds
inc
and
adc
lods
sti
js
cmovge
push
outsl
and
mov
fs
adc
ret
test
xchg
mov
adc
xchg
dec
cmp
jbe
push
push
mov
push
inc
cwtl
frstor
and
cmc
jg
lods
rorl
sbb
add
nop
xchg
push
test
lahf
jle
jp
mov
push
fdivl
rorb
dec
dec
nop
sbb
adc
xor
movb
loope
dec
xor
mov
loope
scas
clc
pusha
ret
sub
push
lcall
adc
out
mov
hlt
and
pop
repnz
repz
cmp
jbe
inc
xchg
js
shll
mov
andb
or
scas
jbe
ret
jge
dec
icebp
cmc
add
dec
jnp
cmpsl
ficomps
imul
adc
lock
mov
pop
jp
daa
jge
sbb
mov
and
ja
adc
test
js
mov
loope
sub
pop
mov
hlt
jge
shll
jb
in
sub
shll
cmpl
in
hlt
pop
inc
adc
and
mov
aas
das
mov
scas
sub
push
lods
pop
xor
into
mov
mov
mov
sbb
mov
push
xchg
jge
mov
pop
aaa
add
push
xchg
aas
sbb
adc
outsb
pusha
rcll
mov
inc
sbb
pop
push
xlat
inc
push
pop
adc
jmp
jno
mov
push
pusha
push
dec
int
daa
pop
arpl
add
pop
adc
ljmp
xlat
pop
jge
outsb
or
mov
sub
and
adc
fs
dec
cmp
imul
jg
adcb
test
xor
int3
pop
dec
inc
mov
mov
mov
cmp
loop
insb
lock
ljmp
dec
add
ret
fsubl
mulb
mov
push
out
sbb
and
test
dec
lock
cmp
int
mov
lcall
add
lret
xor
ret
xchg
add
fwait
into
mov
push
cltd
sbbl
ror
cld
cmp
test
lock
push
cmp
sub
add
and
aas
pop
pop
and
fiaddl
add
jecxz
mov
dec
cmp
pop
add
push
fsubl
mov
adc
and
gs
jl
les
cwtl
push
dec
fnstcw
popf
aas
out
sbb
lret
push
ret
fucomip
enter
pop
inc
mov
dec
add
stos
inc
xchg
or
ret
mulb
in
cmp
dec
adcb
sbb
mov
int
push
pop
sub
and
or
mov
pushf
test
adc
jo,pn
mov
clc
adc
push
hlt
pop
mov
sbb
dec
fistpl
inc
jg
sbb
aad
in
mov
mov
fcoml
inc
jge
add
push
add
mov
push
push
xchg
pop
imul
aas
in
ffreep
adc
roll
jae
or
lock
xchg
lods
sti
test
jmp
and
aad
std
or
stos
out
mov
pop
sub
push
lret
cli
in
rolb
xor
testb
cmpsl
aaa
sbb
stc
jg
xchg
add
dec
fmul
addr16
negb
add
and
dec
mov
or
inc
stc
mov
mov
fbstp
xor
push
sub
out
lahf
sarb
sbb
add
jae
push
cmp
outsl
aaa
js
dec
mov
subb
inc
lret
push
add
dec
ud0
xchg
sbb
xchg
adc
xor
pusha
jmp
jle
mov
hlt
add
pushf
cmpb
scas
mov
or
imul
fsubrl
xchg
push
sbb
push
jmp
jp
inc
inc
or
lods
inc
mov
and
xchg
cmp
push
pop
sub
mov
push
icebp
push
arpl
mov
or
loopne
xchg
dec
loope
je
insb
mov
push
xchg
repz
shlb
inc
mov
rol
add
les
ss
and
dec
push
cmp
push
mov
inc
pushf
pop
jb
outsl
rcrl
addb
push
pop
ljmp
std
call
pop
dec
mov
mov
subb
lret
cmp
imul
push
mov
xchg
out
inc
push
jo
pop
nop
jbe
push
scas
sbb
sbb
pusha
cmp
fwait
jg
out
pop
mov
loope
jno
fsub
hlt
imul
es
loopne
pop
or
inc
pushl
mov
and
mov
cwtl
cwtl
ret
xchg
fwait
adc
movsb
mov
shl
fs
sbb
rorb
fsubs
dec
das
mov
std
imul
ljmp
dec
push
pop
test
xchg
outsb
aam
xchg
lcall
sbb
in
pop
rolb
scas
pushf
dec
imul
sub
mov
adcb
aas
xor
xor
or
xchg
push
mov
xor
stc
aas
pop
push
adc
dec
sub
mov
cli
shlb
push
lret
movsb
icebp
or
scas
xchg
push
jmp
pop
rcrb
or
mov
mov
mov
lret
pop
xor
aam
nop
scas
push
enter
mov
inc
jmp
adc
mov
mov
inc
mov
xchg
shlb
push
mov
lahf
test
hlt
test
lret
addr16
and
xchg
aaa
ljmp
jmp
cmp
std
hlt
jno
jo
dec
stc
rclb
and
jp
dec
fwait
and
add
add
push
mov
popa
roll
mov
mov
imul
add
mov
ret
ret
sub
mov
out
aam
in
inc
push
xchg
dec
sbb
mov
dec
mov
xchg
fldl
in
bound
test
push
outsb
test
mov
std
push
sub
addb
clc
lods
inc
out
out
xor
fiaddl
mov
add
push
mov
sub
or
daa
jno
fdivs
mov
adc
bound
push
fidivrs
xor
xor
xor
adc
aad
cmp
cmp
inc
insl
pusha
or
cmp
or
subb
push
aas
jo
adc
lds
add
test
pop
jp
mov
adc
adc
test
dec
outsb
xchg
mov
je
and
or
jbe
in
inc
mov
mov
fstl
pusha
lock
into
mov
pop
push
mov
push
adc
test
cwtl
jbe
dec
sub
shlb
inc
sbb
sbb
cmp
addr16
jle
je
or
les
sub
push
dec
sub
cmp
rolb
ljmp
mov
or
push
nop
cmp
adc
cmpsl
outsl
add
cmc
inc
imul
in
call
jge
fldt
pushf
push
push
shrb
fdivrs
popa
inc
cmpl
sbb
hlt
test
fdiv
cmp
inc
and
dec
lods
jns
pop
jb
mov
pop
fistpll
mov
loop
or
inc
jl
je
mov
xchg
inc
les
jecxz
cmp
ljmp
popa
movsl
inc
inc
mov
add
imul
pop
ret
adc
pop
fadd
aaa
push
test
jo
mov
add
mov
repnz
scas
test
jo
inc
ret
adc
push
cli
cwtl
gs
sub
push
test
cmpb
in
rcrb
fs
stos
xchg
rcrb
leave
std
and
sub
lods
mov
adc
xchg
mov
add
add
xchg
ret
inc
sub
clc
sbb
xor
or
push
loop
mov
push
sub
dec
imul
push
pop
jle
pop
and
xor
and
data16
je
sti
aas
cmpsl
or
aam
movsl
out
cld
das
iret
mov
fcoml
lods
add
adc
dec
cmovs
les
push
in
inc
jl
push
and
dec
mov
fimuls
adc
adc
push
dec
cwtl
in
sub
ss
rcl
push
dec
aam
in
int3
push
int3
lock
adc
sbb
ljmp
add
ljmp
push
lea
clc
mov
adc
push
mov
stos
es
mov
add
mov
hlt
lock
bound
push
lahf
clc
bound
ret
mov
lods
pop
icebp
dec
sbb
push
gs
shrl
ret
out
or
test
xchg
dec
lock
jne
lret
push
pusha
testb
rcrl
cltd
aad
inc
loopne
mov
add
fwait
adc
in
or
movsb
ljmp
adc
sbb
cmp
cli
aas
shll
xchg
sub
in
loope
jo
dec
adc
shll
and
mov
bound
or
jo
cld
inc
or
mov
xorb
pop
mov
mov
fsubrl
sysret
outsl
movsb
xchg
cmc
cmc
call
and
sbbb
mov
lods
inc
sub
push
cld
adc
and
outsl
outsb
inc
mov
sbb
pop
mov
sbb
xchg
enter
iret
das
xchg
fnstenv
int3
and
push
pushf
lock
mov
out
icebp
dec
xchg
fwait
movsb
adc
and
int
icebp
mov
push
orl
out
sub
dec
enter
mov
or
pusha
add
test
inc
add
ret
mov
add
sbb
imul
cmp
incl
adc
lahf
and
jo
sub
test
mov
sbb
hlt
xor
mov
cmc
dec
rcll
nop
rcrl
loopne
inc
hlt
addl
mov
pop
test
jbe
icebp
mov
popf
add
xchg
ss
xor
aad
clc
je
dec
imul
mov
pop
clc
enter
cmpsb
dec
lods
cmp
js
mov
mov
cwtl
cwtl
add
and
fisubrl
ficoml
lods
fwait
clc
cmp
adc
andb
xor
int
jo
and
sbb
mov
insl
push
push
iret
mov
fst
pop
std
aas
mov
or
sbb
xchg
loope
xchg
adc
enter
cmp
ret
pop
add
adc
jae
jecxz
add
int3
out
daa
push
inc
push
push
movsb
and
inc
rclb
adc
hlt
lcall
xchg
push
fcmove
aas
lcall
fwait
icebp
and
lods
test
pop
xor
mov
push
in
inc
and
or
in
add
movsb
shll
or
das
pop
faddl
and
add
frstor
fdivl
jle
jno
jae
pop
and
jle
xchg
in
testb
jmp
dec
addb
scas
mov
pop
or
aad
dec
js
mov
pushf
xchg
outsb
lret
or
cmc
pusha
je
jb
loopne
lock
pop
icebp
add
bound
fcomps
xchg
aad
mov
push
outsw
cmp
paddusb
in
js
push
outsl
cmpsb
mov
mov
push
sbb
and
in
stos
xchg
loop
cmpsb
data16
popa
enter
xchg
jb
xor
xlat
add
or
add
das
and
cli
push
cli
inc
sbb
sbbl
mov
or
aad
mov
sub
jp
jge
mov
push
sbb
xor
push
or
nop
popa
push
es
subb
fs
ficomps
pushf
dec
mov
into
push
inc
rorb
aam
data16
dec
ret
jmp
cmp
jle
jg
pop
rorb
lds
xchg
call
movsb
inc
pushf
xchg
and
sbb
lret
pop
testb
xor
clc
jne
add
cmp
int
push
pop
mov
leave
pop
hlt
lods
addr16
push
push
pushf
adc
rcrl
outsl
mov
mov
sub
inc
sub
addr16
mov
dec
dec
push
int
mov
icebp
pop
cli
lahf
mull
adc
mov
cltd
pop
or
xchg
mov
pushf
test
sub
mov
push
cmpsb
or
cmpb
sahf
les
inc
dec
clc
dec
sub
push
pop
ja
xchg
cmp
pusha
xchg
mov
dec
xlat
sti
or
mov
adc
lcall
out
js
js
cmp
mov
sub
mov
les
pop
fsubrs
ret
pop
sbb
mov
cli
push
hlt
add
add
mov
adc
mov
mov
jo
add
mov
jl
aam
push
fnsave
adc
ret
int
mov
scas
pop
mov
insb
data16
bound
xchg
loopne
cwtl
and
stos
add
mov
imul
scas
sub
scas
push
add
loopew
pop
test
inc
int
push
pop
loope
pusha
sarb
adc
push
jp
insb
shlb
or
test
mov
inc
lret
popa
out
push
pop
sub
test
mov
pop
fcompl
arpl
andb
rolb
inc
call
mov
daa
mov
inc
out
mov
das
clc
mov
cs
sub
ljmp
es
leave
xor
jp
lods
cmp
adcb
adc
or
pop
rcrb
out
loop
xor
cs
lods
jbe
mov
mul
jg
mov
sub
sbb
jg
sar
mov
xor
inc
jge
or
adc
stos
push
jecxz
jo
adc
and
mov
scas
lahf
sub
stos
movsb
jb
insb
cmp
js
jmp
add
pop
addb
xor
movsb
sarl
pop
jge
and
dec
sub
bound
xor
test
mov
add
arpl
cmpsb
adc
add
cmp
jne
jmp
loop
repz
pop
or
fwait
mov
cmp
sub
clc
jge
out
or
adc
ss
je
xor
insb
pop
sbb
mov
inc
aaa
dec
shlb
scas
inc
xchg
push
fs
movb
sub
arpl
mov
sbb
push
stos
add
addr16
inc
mov
adc
inc
jecxz
pop
and
mov
push
adc
adc
mov
out
rcrl
test
mov
pop
cld
cmc
mov
aam
movsb
fdivl
fs
in
aad
arpl
cmpsb
xor
out
test
inc
icebp
push
mov
mov
xor
enterw
ds
adc
fsubl
push
sbbl
xchg
rcrb
adc
mov
hlt
xor
add
pop
out
hlt
mov
ljmp
lods
dec
xchg
xchg
pop
je
adc
mov
inc
xchg
or
or
push
mov
sbb
add
lock
xor
add
pop
sub
imul
loope
lods
loop
stos
pop
push
push
enter
in
daa
cwtl
movsl
pop
xor
out
pushf
fidivrs
add
add
aaa
cld
shr
insb
sbb
bound
mulb
pop
xchg
inc
out
mov
sbb
push
lock
jmp
jo
lock
pusha
fstpl
push
std
inc
jmp
adc
xchg
lea
insl
xor
jp
movsl
stc
je
test
sbb
jl
jbe
mov
cmpsb
call
add
lahf
adc
es
in
iret
mov
sub
dec
push
and
inc
loopne
lret
outsb
jo
int
push
mov
leave
in
and
jo
jno
xor
stos
and
mov
adc
push
sbb
jbe
jp
mov
adc
dec
ret
push
xor
call
decl
lods
sub
and
pusha
flds
ja
hlt
mov
cwtl
std
lods
inc
mov
mov
hlt
fwait
lret
adc
adc
sbb
test
inc
jl
mov
sub
and
iret
mov
pop
test
repz
add
jp
pop
sbb
in
and
or
ds
sbb
add
push
push
xchg
fdivs
data16
test
push
test
rcrb
dec
ret
mov
jmp
aam
xor
adc
xchg
mov
ds
repz
pop
add
jmp
mov
les
cwtl
add
ret
xchg
testb
mov
mov
pop
fs
lahf
inc
and
inc
stos
mov
xor
jo
jne
mov
push
lahf
xchg
push
ljmp
add
sub
inc
mov
and
pop
movsb
xchg
daa
push
jne
push
and
adc
mov
out
and
imull
rcl
hlt
test
pop
fmull
rcrb
jle
xor
testb
pop
mov
xchg
and
adc
clc
out
or
and
jbe
cli
clc
and
fdivl
or
cld
testb
in
push
sub
or
push
or
lods
cmp
iret
mov
inc
aad
rolb
xchg
mov
xchg
arpl
mov
inc
push
jp
loope
test
fdivl
in
cld
xchg
pop
inc
cmp
aam
decb
add
stos
aas
gs
je
dec
in
pop
push
push
repnz
pop
ljmp
and
mov
and
jns
outsl
popaw
into
fs
cmp
subb
pop
xorb
loope
sar
aad
andl
pop
dec
sub
sub
fstl
pop
mov
sbb
and
inc
sahf
sub
jnp
shl
sbb
dec
push
enter
mov
pop
scas
movsb
in
xor
dec
faddl
out
filds
fwait
add
and
test
dec
or
aas
mov
adc
xor
push
xlat
jge
adc
mov
mov
cmp
enter
sti
out
ret
mov
inc
sbb
fisttps
pushf
iret
mov
into
jmp
push
insb
pop
xchg
mov
or
shlb
ja
rcll
xorb
rcrb
cmp
outsb
mov
in
lahf
dec
cmp
cltd
sub
mov
jecxz
scas
bound
dec
xchg
stc
lock
adc
mov
push
xor
push
sbbb
mov
cld
lods
add
ficompl
loop
push
sti
roll
iret
and
imul
roll
insb
or
lds
arpl
out
lock
and
add
decl
stc
adc
mov
xor
cmc
pop
loope
nop
out
adc
in
inc
fistps
dec
test
andb
pop
mov
or
xchg
cmpsb
dec
add
nop
shrl
add
les
popf
into
xchg
lods
xlat
xchg
daa
xchg
sahf
pop
add
sub
cs
inc
int3
addr16
sub
mov
inc
add
into
rcr
data16
push
popf
inc
ret
mov
lods
dec
push
sbb
sbb
adc
enter
push
test
cmpsl
shlb
lock
jne
inc
inc
mov
insb
push
shl
mov
xchg
movsb
orb
decl
cli
sbb
pop
clc
dec
shl
test
lods
inc
in
bound
mov
jbe
es
jno
loop
lea
mov
push
call
nop
scas
lahf
je
or
clc
pop
hlt
add
pop
andb
icebp
out
or
push
test
lods
lahf
pop
loope
cmp
mov
movsb
dec
out
lods
hlt
daa
nop
rorb
mov
add
rolb
cmp
pop
mov
pusha
mov
mov
and
mov
fcmove
mov
stos
cli
xchg
loope
cmp
jo
pushf
ficomps
inc
std
inc
add
and
in
lods
jmp
loopne
and
xchg
addl
movsb
daa
lcall
fs
push
rcrb
test
cmp
andb
vunpckhps
data16
mov
xor
sahf
fs
inc
loope
out
jbe
push
sti
sarl
xchg
or
test
jns
sub
fsubl
mov
pop
or
pop
clc
divl
jg
jle
sbb
pop
sub
or
js
imul
sub
and
inc
dec
sar
dec
jbe
sbb
stc
je
push
jns
pop
sbb
adcb
das
out
mov
xor
sub
outsb
mov
fsub
scas
movsb
aas
add
out
pop
test
dec
cmpsl
jle
add
mov
popa
or
in
loope
jg
hlt
mov
cmpsb
cmp
out
in
ja
sbb
cmp
cs
pop
adc
push
or
test
andb
pushf
rcr
mov
scas
imul
and
sub
mov
test
or
inc
xchg
xchg
dec
mov
mov
inc
clc
xchg
cmp
mov
lea
movsb
into
mov
aam
popl
enter
dec
add
inc
pusha
roll
lahf
aad
loopne
xor
jne
xor
fidivrl
inc
add
ss
sub
es
mov
mov
dec
test
jl
mov
leave
into
sbb
clc
call
push
add
mov
nop
dec
cmpsb
or
push
andl
pop
rclb
or
clc
fmul
sbb
pop
adc
hlt
push
fdivs
ljmp
lock
xor
or
mov
int
jl
pop
data16
cli
mov
mov
jo
fnsave
push
hlt
pshufw
adc
test
and
inc
aam
xor
cld
adc
pop
fucomi
aas
dec
mov
inc
mov
push
jle
xlat
das
or
test
subb
adc
mov
outsl
jle
push
add
orb
or
sbb
fbstp
scas
pop
or
inc
pusha
sub
dec
push
inc
xor
xor
pop
std
imull
jmp
ret
out
jne
add
or
sbb
inc
shll
imul
stos
push
cli
sbbb
sbb
scas
call
stc
push
jle
jae
xchg
inc
out
and
aaa
insb
dec
scas
push
jge
in
xchg
sahf
cmp
and
cmpsl
adc
mov
ja
mov
add
movsl
jb
inc
xchg
inc
test
mov
mov
sub
cwtl
fs
sbb
xor
imul
and
jno
stos
aaa
lea
jo
mov
int3
mov
xchg
cmp
dec
and
mov
mov
flds
leave
ja
push
pop
in
add
ljmp
dec
cwtl
aas
mov
lock
xor
or
lods
ss
or
fprem
push
cmpsb
pop
ja
repnz
movsb
outsl
dec
cli
mov
inc
movsb
cmpsb
test
ficoms
cmc
jp
push
cli
jmp
or
popf
lock
pop
orl
push
mov
shrb
or
ljmp
push
popa
xchg
mov
mov
sub
jo
add
mov
push
or
orl
rcr
xchg
cld
lret
arpl
jbe
pop
clc
pop
push
roll
or
add
xchg
mov
jp
and
gs
scas
inc
rorb
lea
xchg
ds
ja
popa
clc
fildl
cld
bound
cmc
or
ljmp
adc
into
filds
xchg
cli
mov
rorl
pop
xchg
mov
mov
jo
mov
or
sbb
push
ret
lret
xchg
cmp
push
iret
or
out
mov
and
nop
in
jb
mov
pusha
sub
adc
sbb
sbb
sbb
enter
stos
add
sbb
xchg
fsub
jno
and
add
popf
pop
mov
fstpt
inc
or
out
pop
addl
inc
jnp
or
push
and
mov
mov
sub
adc
lock
mov
loope
cmpsb
sub
push
cld
or
sub
xchg
pop
jl
inc
sub
inc
lcall
or
mov
mov
jl
lods
loopne
leave
adc
loopne
and
pop
xor
pop
dec
cmc
mov
jg
pop
rol
bound
pushf
and
sti
call
sub
adc
push
je
test
loopne
mov
pop
xor
sub
mov
adc
roll
stc
fiaddl
paddusb
mov
sub
aad
mov
ficoml
lea
dec
mov
outsb
mov
fldenv
push
pushf
das
mov
pop
xor
test
adc
push
lret
lahf
aas
lcall
jle
or
or
ret
push
std
ss
bound
or
jp
fisubl
sbb
adc
faddl
out
cs
jo
inc
lcall
jno
pop
fwait
mov
xor
pop
popf
sub
sarb
adc
rorb
lods
rclb
and
js
cmp
and
dec
mov
xchg
popa
fcomps
iret
inc
mov
adc
nop
mov
in
push
aad
rol
lcall
pop
or
loopne
icebp
sub
mov
ror
ds
dec
sub
mov
sub
insb
dec
push
rcrl
pop
sbb
jne
addl
dec
aam
pop
lea
xchg
mov
dec
sub
xor
rolb
push
xor
push
test
loope
shlb
or
addb
dec
cmp
outsl
aas
adc
pop
out
pop
mov
pop
outsl
pop
mov
mov
inc
cmpsb
aas
jo
mov
pusha
adc
push
jns
fildl
or
mov
add
jl
pop
mov
cmp
fisubs
scas
ljmp
cld
xor
fcoms
lahf
push
sbbb
add
sbb
xchg
xor
push
lods
pop
sarb
fnstenv
add
mov
xor
push
xchg
adc
mov
iret
in
sub
in
or
test
adc
push
outsl
jge
mov
push
js
xchg
push
out
or
stos
adc
push
mov
pop
add
lock
fstpt
jg
cmpsl
sbb
hlt
cmp
and
mov
out
inc
sub
ficoml
mov
xchg
dec
or
cwtl
faddl
add
dec
or
sbb
call
bound
or
nop
and
sbb
inc
adc
and
out
jle
sub
dec
loop
testb
lock
xchg
push
mov
cmpsl
mov
jb
loope
roll
pop
cmpsb
add
outsb
das
jmp
dec
or
add
adc
inc
int
stos
test
push
add
and
xor
xor
pusha
xor
out
and
mov
fistl
inc
test
cwtl
and
adc
xchg
ret
xor
sub
add
xchg
mov
lcall
sbb
pop
jbe
test
mov
mov
aas
push
dec
mov
aaa
mov
lods
stc
or
imul
jmp
cwtl
xor
xchg
test
or
xorb
repnz
insl
icebp
cmpsl
and
jmp
andl
add
lods
dec
mov
popf
fcmovnb
shlb
and
cmp
adcb
dec
nop
ds
xor
bound
lods
test
inc
inc
inc
jo
cmp
jg
jmp
inc
or
aam
imul
into
aaa
sbb
in
pop
cmp
lods
les
push
xlat
adc
adc
push
mov
lea
jl
sbb
pop
loopne
or
sbbb
or
push
roll
cmp
je
lock
aam
sbb
pop
aas
adc
mov
clc
out
cmp
loopne
cmp
divb
cmp
mov
cmp
xchg
hlt
shll
xchg
mov
xchg
aad
pop
js
aaa
enter
add
push
shlb
cmp
jp
bswap
fnstenv
shll
or
ror
jp
jmp
inc
insl
lods
inc
pushf
loopne
ret
adc
cmp
bound
push
sti
addb
push
shrl
cmpsl
add
adc
jg
mov
es
loopne
lods
mov
loop
stos
and
mov
adc
inc
sub
and
test
neg
xchg
and
and
js
aad
int
outsl
add
push
and
push
xchg
jae
dec
pop
sub
xchg
mov
out
cmp
mov
xchg
jnp
adc
xchg
adc
add
jl
add
ret
or
stos
outsl
xchg
les
push
inc
in
call
pushw
or
adc
rolb
pushf
outsb
out
cmc
jb
or
mov
push
push
movsb
mov
xor
fidivrs
pop
dec
sub
js
fstl
shll
or
movsb
jbe
mov
adc
xchg
pusha
scas
cwtl
fnstsw
sbb
push
les
bound
or
pop
arpl
shrd
aaa
sahf
mov
repnz
adc
mov
or
test
and
xchg
push
adc
add
je
in
lock
mov
mov
fsubl
jbe
sub
loop
call
lcall
daa
jg
push
mov
ljmp
fnstenv
jnp
or
or
sbb
into
jnp
add
iret
fcomps
rorl
stos
sbb
push
sub
mov
sub
inc
mov
and
adc
jo
inc
stos
fbstp
xchg
repnz
in
test
shll
push
andb
jo
subl
mov
xchg
xchg
cmp
push
sarb
or
inc
sarl
mov
dec
idivl
and
repz
orl
dec
pop
pop
pop
ret
lahf
lods
push
and
data16
fdivl
pop
or
sub
fdivrl
and
adc
test
cmp
and
xchg
mov
sub
adc
pop
hlt
adc
jne
dec
lods
dec
aad
rol
adcl
dec
push
in
cld
and
fsubl
sbb
mov
and
mov
xchg
loop
jp
test
cmp
fiaddl
call
insb
movsb
xchg
or
jmp
jne
xchg
movsb
mov
movl
xchg
cs
cmp
mov
jg
lock
gs
inc
sbb
inc
xchg
inc
mov
clc
movsb
pop
xchg
in
adc
and
xor
pop
inc
xchg
lahf
mov
or
dec
or
test
cmc
movsb
push
mov
into
movb
adc
jp
mov
push
stc
icebp
stos
or
dec
sub
es
mov
lock
dec
mov
lret
adc
out
pop
notl
pop
cli
ss
movsb
xchg
into
scas
dec
mov
dec
or
aas
push
shrl
adc
xchg
dec
jmp
mov
inc
clc
in
xchg
pop
sub
stos
xchg
add
std
in
and
and
fisttpll
add
sbb
mov
xchg
pop
xor
or
and
fsts
loop
pop
addl
mov
loopne
sub
xchg
inc
adc
adc
pushl
aaa
add
and
mov
clc
addb
shr
mov
test
mov
sub
inc
into
xor
mov
cmp
mov
cmp
and
pop
jg
and
inc
or
sub
jns
lock
add
mov
mov
loope
shr
push
loopne
cmc
mov
push
movb
mov
or
or
push
es
fwait
mov
fcomps
imulb
mov
inc
or
dec
add
or
adc
xchg
decb
dec
pop
loopne
or
loope
out
aas
imul
fcmovb
cmc
out
inc
mov
xchg
dec
pop
mov
adc
lods
pop
les
pop
test
js
ljmp
cmp
lds
rcll
mov
or
pop
negl
push
sahf
fistps
adc
add
mull
pop
loop
shrb
clc
cmpsb
sbb
enter
inc
pop
shll
jl
sub
push
ss
ss
icebp
nop
push
pushf
xor
sar
sub
cmpsb
movd
pop
or
mov
icebp
mov
adc
enter
orb
push
and
unpckhps
cwtl
jp
ret
fiadds
loopne
dec
fucomp
mov
aam
pop
jbe
clc
les
inc
push
orl
push
cmp
shll
aaa
add
fcompl
stos
addr16
xor
ret
mov
fisttps
xchg
int3
sbb
scas
push
jge
ret
pop
mov
jge
add
xchg
movsl
test
pop
mov
xchg
sub
push
pop
jecxz
lods
adc
add
fstl
fisubrs
mov
xchg
ljmp
movsl
xchg
divb
xchg
cmp
pushf
xchg
enter
or
mov
test
addr16
pop
or
mov
aas
imul
inc
dec
push
ficompl
test
lret
cli
adc
mov
pop
xlat
xchg
pop
cmp
pop
push
mov
stos
push
cmova
ds
mov
jne
scas
add
jmp
jo
inc
popf
jmp
jge
xor
jae
fbld
or
inc
add
imul
pop
jb
or
adc
push
inc
movsb
mov
jmp
shrb
jb
mov
mov
sbb
jle
daa
push
ret
cwtl
mov
push
rcll
mov
inc
and
sti
jnp
mov
push
rolb
scas
mov
arpl
pop
mov
aad
test
push
hlt
jmp
jns
jecxz
cmpsb
or
rcr
mov
sub
cmp
xchg
ljmp
pop
sub
in
jae
lcall
sub
pusha
xchg
je
add
aam
lods
hlt
xlat
mov
call
rclb
and
mov
hlt
data16
sub
jmp
xchg
and
cli
mov
cmpl
insl
stos
fs
mov
add
js
aad
lods
scas
aas
lcall
lods
dec
jecxz
call
or
xchg
push
dec
inc
popa
sub
inc
xchg
mov
and
push
imul
icebp
and
adc
push
lock
xchg
xor
xchg
enter
add
jo
or
mov
xor
inc
adc
sbb
loope
scas
movsb
inc
sbb
pop
and
fcmovu
js
fs
push
movsb
add
jecxz
insb
movsb
mov
lock
ljmp
roll
icebp
roll
das
and
mov
jne
loop
push
xor
mov
out
pop
daa
bound
pop
jg
dec
imul
enter
icebp
xor
int3
add
or
les
xor
mov
or
pop
das
add
or
pop
insb
cs
mov
mov
mov
cmp
stc
mov
subl
movsl
hlt
and
ss
or
in
fbstp
push
notb
movsb
jl
test
lret
sub
sbb
rdtsc
jno
pop
cmp
jp
loopne
test
mov
mov
mov
inc
sub
dec
adc
adc
pop
mov
clc
dec
test
stos
push
es
stc
push
cmp
in
insl
in
leave
mov
mov
push
xchg
mov
movb
or
adc
cmp
xchg
cmpsl
adc
push
cmp
xor
and
in
outsb
cmp
scas
mov
sbb
scas
inc
out
jo
push
jne
mov
push
fwait
ja
jno
movsl
add
aas
lock
mov
std
les
sub
dec
cmpsb
push
cmpb
xor
rcl
nop
push
sub
test
mov
mov
lock
push
pop
fstpl
cld
mov
and
repz
xchg
push
or
shll
loopne,pn
cmpb
mov
pop
lock
pop
push
jbe
pop
mov
mov
and
daa
push
sti
cmp
out
nop
push
add
pop
ja
stos
sub
xchg
add
mov
adc
sub
and
mov
add
ljmp
pusha
mov
xchg
push
mov
mov
cmp
mov
and
out
cltd
cli
dec
cld
mov
or
cmp
cs
cmpsb
xor
add
sahf
shll
xor
nop
out
jl
out
adc
xor
pop
or
jo
add
xchg
pop
xchg
je
rolb
mov
loope
sub
ljmp
or
imul
out
push
int
das
lock
scas
sub
les
add
xlat
rcrl
mov
jg
or
arpl
push
or
add
add
mov
sbb
bnd
adc
les
daa
lods
add
out
hlt
mov
mov
sbb
push
jmp
inc
mov
and
cmp
jmp
ss
mov
ja
nop
adc
dec
add
cli
push
pop
pop
mov
mov
mov
rcll
sbb
push
and
cmpsb
xchg
imul
iret
cli
cmp
jnp
out
cs
add
jae
and
aaa
sbb
mull
ja
inc
insb
mov
outsb
scas
push
xor
ja
leave
js
pop
jo
loope
or
push
nop
inc
insb
sub
pop
popa
add
rcrl
les
ret
and
xlat
xor
mov
cmpsb
es
loopne
or
adc
or
in
mov
aam
mov
sbb
fsub
sub
push
add
mov
push
inc
sbb
frstor
ud0
mov
sbb
sbb
sbb
push
xchg
into
cs
jle
ficomps
lcall
fildl
jle
out
add
scas
rcl
loope
pop
aas
or
sub
jne
je
pop
lret
and
leave
shlb
setbe
fisubrl
shrb
scas
jb
dec
mov
jge
sahf
or
into
or
push
stos
mov
sbb
les
pushf
lds
xlat
daa
stos
les
lods
xchg
inc
loopne
or
cli
adc
jbe
and
or
cmp
rolb
call
mov
test
jbe
loope
nop
mov
hlt
aas
popa
push
lcall
bound
and
xchg
xor
lods
mov
jne
sbb
cmc
mov
mov
rcrl
xor
xor
push
scas
fsubs
in
sbb
pusha
jae
mov
cmp
dec
jg
cwtl
add
mov
mov
jp
aam
sbb
dec
and
or
mov
testl
lods
call
mov
fucomp
mov
stos
inc
popf
pop
icebp
in
mov
shrb
mov
pop
push
xlat
nop
and
pusha
and
jmp
inc
mov
fwait
ret
fwait
inc
rol
outsl
rorb
mov
fistps
push
dec
mov
or
imul
nop
loopne,pt
xchg
jb
rorl
ret
scas
mov
sbb
stos
cmp
loop
inc
ds
inc
push
test
adc
mov
call
pop
xchg
pop
and
add
clc
xchg
add
out
or
ret
das
and
or
std
sti
loope
xchg
incb
or
inc
mov
mov
filds
rorb
test
pop
or
add
leave
ss
lcall
push
add
outsl
and
or
stos
out
arpl
fcomps
pop
fs
dec
icebp
jae
lods
pop
push
lcall
adc
fdivs
insb
push
bound
insb
mov
jno
gs
les
bound
sub
jg
xor
aad
rcrl
imul
sub
mov
add
xor
outsb
xchg
clc
cmp
and
jp
mov
cmpsl
andb
sbb
movsb
rcrb
lods
mov
push
push
push
ret
add
je
shll
shrb
or
jne
ja
imul
jmp
jg
std
cmp
pop
cwtl
call
inc
pop
mov
pop
aam
inc
mov
pushf
and
mov
repz
int3
movb
fcompl
lock
mov
mov
or
dec
add
push
dec
sbb
movsb
adc
divb
push
insl
hlt
adcl
aaa
pop
scas
push
adc
nop
mov
hlt
test
aam
test
insb
mov
insl
fs
movsb
icebp
andb
mov
rcl
fcmovu
mov
pop
bound
imul
insb
dec
enter
arpl
push
xor
or
int
popa
rclb
xchg
int
mov
sub
mov
insb
cli
faddp
jmp
xlat
or
sbb
mov
dec
je
mov
xor
adc
subb
rol
cmpsb
mov
inc
cltd
imull
sub
xor
push
dec
sarl
icebp
jle
push
test
addl
mov
pushf
int3
dec
dec
add
dec
stos
lods
add
inc
fmul
outsb
xor
ss
cmp
or
lock
sarb
outsb
test
cmp
jae
cmp
jae
lret
aaa
mov
into
stc
pop
scas
mov
sub
mov
and
popf
add
test
inc
pop
sub
dec
and
mov
dec
mov
xchg
call
addr16
xchg
cli
cmpsl
pmullw
inc
push
incb
add
ljmp
mov
and
dec
add
dec
xchg
push
jecxz
pop
cmovle
inc
inc
pushf
mov
cld
mov
into
adc
inc
inc
loop
pop
rcrb
je
cmpsb
imul
enter
mov
cmpsb
lahf
outsb
clc
cmpb
xor
xchg
dec
mov
sub
mov
xchg
dec
inc
enter
outsb
inc
push
je
cmc
or
repnz
adc
add
mov
sub
pop
sbb
xchg
int
dec
add
push
std
loop
push
lock
xor
adc
fadd
add
je
scas
shll
shlb
ljmp
movsb
pushf
push
jp
jmp
ret
jb
stc
ljmp
xchg
es
and
sub
je
lods
push
mov
arpl
aaa
xor
mov
js
cwtl
jno
jnp
add
shl
add
ss
mov
loope
fdivs
insl
addr16
jp
xchg
xchg
dec
adc
sbb
push
and
mov
decl
popf
icebp
mov
imulb
jecxz
repnz
adc
sarl
or
stos
bound
mov
sub
jb
inc
sti
sbbb
push
adc
test
aad
test
call
mov
aaa
or
lds
daa
xchg
mov
cwtl
shrl
adc
push
or
test
add
pop
js
bswap
es
jle
mov
xor
jbe
adc
adc
mov
into
jp
sub
dec
mov
mov
les
jp
mov
inc
test
dec
movsb
cmp
dec
pop
pop
shrb
sahf
jp
fnstsw
and
ret
ret
ret
lcall
lods
pop
in
cmp
repnz
jg
sbb
sub
pop
sbb
push
pop
sbb
das
insb
mov
insb
mov
push
orb
inc
cmp
mov
inc
mov
dec
pop
lret
cltd
jecxz
ljmp
sahf
loopne
push
lcall
idiv
and
call
mov
inc
pop
inc
xchg
adc
push
loope
mov
adc
inc
in
daa
enter
push
add
xchg
lods
je
sub
out
jl
imul
mov
pop
inc
push
cmp
pop
or
fcompl
std
inc
adc
cltd
add
cmp
cmp
clc
jl
ret
andb
sahf
and
fwait
std
or
outsb
clc
add
and
ljmp
lods
mov
mov
adc
ja
add
xor
stc
or
and
sti
fistpll
addr16
pop
cld
mov
push
testl
popa
xchg
xchg
push
push
mov
xor
cmp
or
inc
or
enter
sbb
cmp
ret
mov
fs
xor
loope
inc
sbb
lds
jl
mov
ret
pop
imulb
incl
hlt
fcoms
xchg
xchg
enter
into
or
lock
or
push
dec
mov
push
pop
in
mov
and
pop
pop
fs
lcall
adc
daa
dec
decl
aad
dec
adc
addl
mov
cmp
jno
xor
enter
or
jmp
hlt
mov
into
cltd
pop
movb
xchg
pop
pop
lock
push
cli
add
lock
mov
test
and
lods
fildll
xorps
inc
add
lea
sahf
js
pop
jle
xchg
jge
sbb
repnz
dec
fimull
dec
xorb
cmp
daa
jg
out
jo
jmp
mov
xchg
pop
sub
std
xchg
cmc
xchg
cmp
xor
shrb
push
int3
pop
adc
mov
das
movsb
mov
loope
cld
jle
lea
ret
psrad
or
call
pop
shll
mov
outsb
lods
scas
xchg
sub
lock
pop
inc
inc
call
popa
and
xchg
cmpsl
movsb
jl
mov
push
mov
mov
xchg
sbb
sub
rcl
inc
fisubs
test
test
inc
je
mov
xor
inc
popf
enter
cmp
pop
shrb
xor
js
bound
add
xchg
or
cmp
clc
xchg
dec
adc
push
dec
pop
outsl
clc
mov
inc
fcompl
push
fstpl
push
add
stos
fidivl
or
rol
je
adc
sub
xor
push
sbbl
or
push
sub
or
pop
and
lods
movsb
push
les
jp
inc
mov
lock
fadd
lret
and
pop
cmp
mov
inc
add
jmp
jmp
sbb
ret
movd
out
mull
jge
scas
sbb
repz
ss
rorl
fistpl
int3
mov
std
in
jl
hlt
sub
lret
fs
js
sub
js
inc
push
sub
std
and
cmp
fmull
imul
jecxz
rorb
int
inc
dec
pop
xor
and
test
mov
lock
push
add
push
shll
add
mov
xchg
js
into
mov
xor
push
movsb
dec
add
mov
mov
jae
pusha
adc
scas
cmp
pop
jp
push
les
loopne
push
dec
mov
nop
push
fadds
and
ret
nop
test
das
push
stos
leave
mov
ss
enter
std
sbb
in
or
rorb
pop
jb
mov
mov
loope
push
mov
sbb
cltd
add
add
push
ljmp
stc
mov
adc
std
cs
nop
mov
sahf
or
decb
mov
xchg
add
test
or
lods
jmp
xor
or
mov
stc
movsb
cli
movsb
testb
dec
pop
add
pop
lods
jne
loopne
mov
jo
lock
jbe
imulb
test
add
aas
inc
jb
ljmpw
mov
push
shlb
xor
ret
xor
pop
pusha
mov
push
test
and
lock
addl
jle
fcoml
ljmp
mov
and
adc
jle
or
fcoml
or
jge
pop
sbb
ljmp
jge
rcll
jb
add
push
loopne
add
mov
xor
mov
xchg
out
loope
shrl
loop
out
aaa
outsl
insl
arpl
and
push
lahf
gs
push
mov
ret
xor
cmp
daa
and
aad
or
mov
adc
add
jg
mov
sbb
lret
or
fcoml
popl
inc
imull
call
xchg
xchg
mov
pop
ljmp
and
dec
je
ret
mov
sub
scas
push
loop
mov
sub
out
orb
inc
mov
mov
shl
jg
mov
xchg
loope
gs
xchg
dec
jnp
push
sbb
or
jle
cs
jp
hlt
xchg
dec
cmp
push
popa
test
adc
xor
sub
popa
outsb
push
add
lods
and
mov
das
sbb
inc
test
jo
nop
stos
mov
packssdw
sub
push
dec
mov
hlt
mov
adc
pop
test
pop
mov
cmc
pop
test
mov
incl
add
repz
and
cmc
je
sub
iret
xchg
pop
mov
and
and
fs
test
mov
mov
xchg
in
add
inc
add
cmpsl
mov
xor
inc
outsb
fdivp
adc
mov
loope
adc
mov
mov
adcb
test
and
and
ficompl
arpl
shll
je
mov
fidivs
and
xchg
sbb
xorl
inc
bound
nop
movsl
aas
sbb
les
mov
xorb
call
mov
sbb
mov
pushf
loope
repnz
cmpsb
jae
inc
mov
mov
mov
mov
loop
adc
cmp
adc
clc
mov
xchg
inc
stos
incl
add
aas
xlat
sbb
pop
ret
mov
pop
xor
call
or
fldenv
push
out
mov
pop
xchg
rcll
push
inc
sbb
cli
or
inc
js
mov
push
jge
inc
loope
imul
inc
inc
dec
in
pop
cmpsl
mov
or
pop
rorl
push
mov
in
xchg
pop
adcl
mov
adc
cs
cmp
fisubs
adc
ss
push
divl
mov
imul
dec
inc
subb
mov
aaa
cld
mov
and
mov
lret
test
push
and
push
mov
shl
addr16
std
lahf
int
mov
dec
sahf
sub
pop
jb
int3
stos
fisubl
mov
add
lcall
fs
cmp
mov
adc
fstpt
xor
push
sbb
add
sbb
idivb
add
pop
loope
xchg
adc
cmp
out
push
mov
xor
dec
xor
ds
ss
lock
push
inc
fisttpl
pop
sbb
clc
test
addb
shlb
push
inc
lods
xchg
push
aad
adcb
jl
hlt
and
pop
into
xor
call
in
test
adc
push
jb
push
mov
push
dec
sysenter
mov
dec
xchg
sub
adc
inc
movsl
add
rcll
add
push
cmp
cmp
fbstp
mov
imul
popl
mov
int3
mov
add
inc
test
ror
inc
mov
xchg
dec
dec
jno
scas
lahf
jp
adc
dec
pusha
jl
sbb
cmp
enter
scas
fs
mov
in
xor
mov
lods
mov
inc
aas
repz
add
push
lcall
je
and
stos
and
aas
loope
fisubrs
data16
fcompl
adc
ret
insl
mov
inc
stc
aaa
xchg
jo
test
testl
addb
xor
inc
rorb
cmp
or
sar
stos
icebp
lret
or
pop
repnz
pushf
mov
add
xor
mov
mov
mov
out
add
mov
push
cmp
inc
or
sbb
or
mov
push
call
dec
mov
xor
pop
addr16
adcb
ret
aas
jne
and
lods
xchg
lahf
dec
cwtl
sub
inc
add
push
js
test
sbb
iret
and
in
ret
push
or
mov
sub
inc
shrb
push
mov
pop
mov
sbb
mov
lock
fildl
clc
outsb
xorl
mov
cs
xchg
push
adc
and
pop
mov
push
mov
cmc
xor
lds
xchg
mov
push
enter
movsb
data16
pop
sbb
push
inc
inc
inc
xorps
cmp
insb
js
rorl
call
jp
adc
jb
or
rclb
aaa
ja
inc
daa
or
jnp
test
bound
inc
pop
cmpsb
or
iret
add
push
xor
or
sub
or
pop
cld
pop
push
and
addl
mov
mov
xor
loopne
hlt
cmp
xor
push
mov
fdivs
add
xor
mov
mov
daa
xor
xchg
out
add
jmp
in
add
lahf
cli
push
pop
shr
test
mov
out
out
xor
addl
loope
and
xchg
stos
arpl
fwait
mov
push
cwtl
fst
mov
lds
insl
scas
popa
cmp
js
push
ljmp
dec
into
lahf
jle
decl
adc
hlt
inc
loop
out
shrl
cli
dec
mov
fiaddl
aad
sbb
in
jp
mov
inc
cwtl
aad
mov
loopne
dec
ret
jecxz
pop
movsb
xor
pop
xor
mov
enter
add
mov
inc
movl
mov
movsb
or
aas
push
out
or
add
std
push
push
inc
dec
test
std
lods
jns
dec
dec
daa
xor
repz
iret
stos
sbb
call
inc
mov
aad
out
add
mov
cs
fisttpll
insb
out
loopne
xchg
andl
pop
test
xor
and
push
je
pop
jne
repnz
jl
and
fdivrs
mov
pusha
jmp
into
in
mov
movsl
mov
lods
mov
fwait
jae
lea
or
fdivl
in
lahf
xchg
aam
sbb
xor
in
cmp
xor
jbe
rolb
insb
lea
aam
push
pop
aad
pop
int
imul
mov
inc
push
pop
sbbb
add
jbe
push
push
or
mov
xor
add
pop
sbb
imul
lock
imul
mov
push
enter
push
dec
pop
test
test
int3
mov
jne
cs
dec
notl
and
jg
jle
sub
fisubrl
and
out
xchg
test
mov
lock
add
adc
inc
xor
lock
xchg
jecxz
push
mov
and
std
sbb
aam
shll
adc
and
mov
sbb
mov
les
pop
es
push
ret
dec
subl
cmp
ja
sub
push
hlt
addr16
pop
loope
andl
or
xchg
nop
dec
dec
jno
xchg
push
loop
scas
pop
ret
dec
xor
jp
and
jns
jmp
mov
ss
jecxz
pop
es
xchg
mov
out
push
mov
xor
negb
loopne
jns
cld
and
loope
mov
push
cld
cmpb
jo
xchg
mul
and
push
cld
add
test
jnp
ja
pusha
and
aas
movl
aaa
test
pop
jl
shlb
jp
rclb
test
ljmp
icebp
mov
pop
cli
inc
shlb
cmp
cs
jl
cmc
addl
mov
add
aas
repz
adc
and
mov
sbb
cmp
clc
add
jp
aam
add
nop/reserved
dec
or
sbbb
lock
mov
std
lods
sub
lock
fadds
mov
mul
sarl
mov
add
mov
fdivrl
pop
mov
sbbl
arpl
lcall
xchg
movsb
test
stos
push
sti
or
mov
rcll
pop
adc
cli
divb
push
sub
enter
stos
jmp
adc
test
call
jo
sar
hlt
mov
xorb
aas
mov
sub
push
and
dec
pusha
lock
rolb
adc
out
dec
jnp
popa
cld
and
push
push
out
xchg
sbb
push
movsl
mov
out
mov
cmp
ret
jo
js
mov
add
jno
scas
dec
mov
in
popf
fcomp
loop
shrb
inc
rcll
cmp
sub
push
fldcw
sbb
or
and
cmp
arpl
inc
sbb
push
adc
sub
lahf
xor
jmp
inc
inc
pop
sbb
jae
xchg
inc
mov
or
test
fsubs
jae
mov
pop
mov
jle
jns
cmp
or
cltd
mov
movsl
test
insb
in
xchg
adc
call
pop
jb
inc
xchg
mov
shrb
aas
movb
mov
lea
cltd
push
test
mov
and
aas
shr
scas
pop
idivb
push
mov
push
aad
push
or
jno
xrelease
iret
or
or
inc
int
mov
jno
cmpl
ret
mov
inc
shr
xchg
loopne
movsb
push
jnp
jecxz
add
in
dec
sar
add
loopne
test
movsl
inc
shrl
pop
mov
in
and
sbb
cwtl
hlt
cmp
jle
loop
outsb
adc
lea
cli
xor
fwait
sbb
inc
in
pop
ljmp
loope
add
loop
xchg
add
shll
nop
mov
outsb
js
ljmp
sub
out
jb
push
xor
addl
lods
lea
xlat
and
or
mov
mov
pop
and
pop
fsts
mov
pop
sbb
push
lret
mov
stos
test
ja
sub
or
or
daa
testl
loop
cld
movswl
inc
sub
in
sbb
mov
adc
inc
xchg
cmpsb
test
loope
adc
gs
adc
ficompl
aas
sub
cmp
loop
xor
fsubrs
loop
sbb
push
imul
cmpsl
mov
jmp
adc
xor
push
push
mov
mov
add
adc
add
bound
dec
icebp
dec
test
es
sbb
jns
xchg
sbbl
or
das
stos
dec
dec
or
sbbb
pop
test
repnz
fimuls
pop
push
aaa
outsl
in
xor
jg
shll
add
stos
adc
outsl
nop
icebp
in
nop
mov
cmc
insl
push
mov
mov
lret
je
dec
push
mov
inc
push
fs
ret
cmp
jb
test
lea
pop
lods
jo
jp
mov
fs
xor
fildl
jg
hlt
imul
out
mov
pop
int3
call
addr16
cmpsl
mov
dec
pop
mov
les
nop
mov
hlt
xor
jg
cmp
dec
mov
adc
xchg
mov
inc
adc
sub
repz
int3
mov
cmc
inc
or
sub
shrl
add
repz
shlb
pusha
gs
imul
js
in
ja
int3
cli
jle
sarl
rol
fidivs
mov
into
jecxz
inc
sarl
sub
lea
pop
jo
aad
xchg
inc
cmp
test
inc
add
cld
push
adc
adc
inc
stos
and
xchg
inc
ret
adc
cmp
fbld
rcrb
or
push
jne
hlt
fbld
jmp
aaa
dec
test
mov
pusha
lods
inc
shll
repnz
lods
xor
push
sarb
enter
cmpsl
pop
pop
popa
adc
sub
pop
cmpl
lock
addr16
cwtl
push
pop
inc
sbbl
adc
pusha
mov
jo
mov
hlt
pop
pop
and
xchg
mov
sub
pop
popa
xor
cmp
add
push
pop
push
cmpsb
mov
dec
cmc
add
imul
mov
adc
and
jo
and
dec
test
fisubs
jge
push
add
js
and
fcomip
and
push
insb
insb
cmpsb
xor
std
inc
rcrl
mov
pusha
outsl
adc
sbb
push
lock
pop
jl
int
add
pop
mov
loope
mov
push
jp
pop
cltd
clc
sbb
lods
sbb
and
sti
cli
cli
lret
fisubs
aas
addr16
mov
sar
cld
and
cmc
into
and
inc
or
and
push
and
aam
lock
xchg
repz
lahf
mov
add
cmp
rorb
fnstenv
dec
out
cmpb
loopne
cmp
mov
insl
dec
popf
popa
cmpl
lret
jmp
mov
iret
mov
insb
ret
mov
clc
idivb
cltd
xor
mov
movb
out
lods
movsl
shr
jp
xchg
mov
lods
push
call
add
sub
call
mov
ret
repnz
test
dec
sub
pop
inc
cltd
jno
xor
mov
jbe
data16
jge
out
pop
lods
loop
testb
pop
aam
outsb
xchg
repnz
scas
mov
cmp
int
jne
push
lahf
cmp
or
cli
xor
fimuls
dec
in
sub
mov
mov
mov
push
sarl
sub
jmp
and
mov
inc
mov
sbbb
xchg
popf
lcall
andb
add
pop
inc
mov
or
filds
jmp
pop
aam
inc
outsl
sbb
pop
mov
pop
test
mov
sarl
gs
loope
pop
aam
jno
rol
pop
or
cmp
cmp
insl
push
push
or
insb
sahf
in
ret
pop
sbb
pop
lea
push
jle
cltd
fcmovu
cmp
jg
mov
pop
jae
mov
icebp
call
pushf
sbb
xor
pop
sti
out
push
shll
aam
ret
cmp
in
jmp
mov
rcrl
int3
push
xor
pop
insb
jae
aas
mov
push
test
pop
loopne
inc
xrelease
sbb
sbb
bnd
add
mov
or
jnp
xor
mov
lods
sub
movb
mov
sub
push
mov
iret
mov
adc
push
mov
cmpsb
rcll
mov
xchg
out
ret
and
scas
push
pop
das
mov
lcall
pop
cwtl
outsb
out
cmpsb
inc
lret
xchg
dec
mov
pushf
jecxz
test
clc
dec
fildl
jb
into
sbb
sub
test
push
clc
or
mov
lahf
cwtl
cmp
push
mov
mov
push
movups
mov
adc
popa
cmp
sbb
mov
add
mov
in
or
fildll
inc
add
cs
daa
leave
ror
loope
xor
xchg
mov
ret
push
outsl
mov
cmp
jp
mov
insl
sbb
jne
sbb
jle
cmp
add
push
cmc
jno
push
adc
add
out
push
pop
jmp
daa
push
test
add
inc
aam
sbb
fadd
adc
stc
push
pop
pop
test
or
mov
mov
jge
out
pop
mov
inc
jge
xor
movhps
push
pop
add
les
lock
cmp
cmc
mov
inc
or
xor
mov
jno
xor
mov
or
cmc
mov
mov
or
xchg
or
stos
std
shlb
push
imul
push
int3
push
mov
sarb
aas
mov
sub
hlt
sub
call
sub
jecxz
mov
icebp
push
or
mov
aam
mov
mov
scas
lods
je
mov
shlb
icebp
in
inc
shll
or
xor
mov
adc
and
add
add
in
push
sub
lock
ja
cmc
jne
dec
popa
gs
scas
movsb
push
aas
stos
xchg
and
daa
jle
push
cmp
pushf
cmp
or
daa
icebp
mov
and
xchg
xor
loopne
pop
out
ret
aam
shll
test
push
test
xchg
push
je
add
inc
adcb
mov
sub
mov
sarb
add
movsl
jecxz
mov
sbb
or
paddusb
adc
cmp
and
lods
rcrl
add
cmpl
push
mov
push
push
movsl
loopne
test
add
or
test
das
mov
cmc
nop
movsl
pop
xor
fists
add
cmp
jns
stos
inc
lret
lods
stos
test
sub
push
xchg
sti
push
xchg
shll
syscall
call
cmp
lea
dec
inc
push
insb
pop
add
dec
push
and
test
xor
add
dec
xor
dec
xchg
mov
div
sub
ficoms
imulb
xor
adc
pusha
jg
mov
leave
push
dec
mov
roll
sub
jp
push
push
aas
pusha
cmp
adc
add
outsb
xor
or
bound
dec
dec
cmp
movsb
test
cmp
lahf
jne
push
add
pop
add
cld
arpl
fiaddl
dec
popa
sbb
bnd
sub
popa
popf
mov
xlat
mov
xchg
mov
es
ret
paddw
imul
js
and
gs
inc
repz
sub
mov
mov
mov
cmp
xor
rcll
mov
jne
js
pop
sbb
clc
inc
dec
xchg
pop
mov
dec
loop
add
lods
subl
rcrl
outsb
sahf
jmp
shll
jmp
imul
call
pop
add
jo
test
test
xor
cmp
mov
mov
inc
incl
lock
inc
ljmp
mulps
and
dec
test
cmpsb
sbb
lods
pop
into
mov
adc
clc
cld
in
pop
push
pop
scas
xchg
enter
adc
mov
sub
int
sub
pop
cmp
scas
sti
dec
push
and
dec
push
imul
adc
cmpsb
jge
out
xor
rorb
dec
push
repnz
rcrb
inc
inc
inc
mov
jg
mov
loopne
adc
xor
add
ss
mov
xchg
jl
aaa
outsb
xchg
xchg
xorb
int3
sar
test
movsl
outsb
mov
push
cmp
pop
push
stos
lcall
and
lahf
sets
cmpsb
lcall
jnp
addl
jae
popl
aas
jecxz
aas
test
je
hlt
cmp
mov
mov
loop
data16
divb
adc
dec
push
data16
pop
ror
lcall
dec
popf
popa
add
loope
hlt
mov
mov
movsb
xchg
ja
sahf
aad
and
adc
movsl
popf
push
mov
stos
inc
lock
push
outsl
xor
cs
cmp
nop
bswap
jno
jae
add
adc
or
addb
dec
push
push
mov
jns
test
cld
xlat
or
inc
nop
cmp
sub
mov
std
xchg
jnp
or
inc
mov
fdivrp
or
push
int3
xchg
push
movsl
inc
aas
iret
jbe
les
inc
or
pop
and
jge
adc
aas
ja
sub
in
lcall
jo
cmp
cmpsl
mov
xchg
cmp
adc
scas
call
mov
mov
mov
add
adc
jp
inc
out
popa
faddp
xor
lods
mov
fsubr
cmc
sub
mov
lods
adc
dec
cmp
imul
int3
sub
jg
insb
insl
icebp
inc
adc
js
and
xor
push
out
popa
dec
inc
xchg
xor
mov
sub
lds
inc
dec
xchg
add
adc
adc
fnstsw
lea
leave
dec
mov
push
lock
adc
test
sbb
push
stc
adc
scas
mov
gs
jecxz
inc
jg
outsb
xlat
xor
pop
cmp
jno
cmc
fcoms
push
in
mov
fnstsw
punpckhbw
jno
sub
or
mov
or
lret
sti
pop
pop
xlat
mov
lods
fdivrl
popf
loopne
mul
lcall
dec
fst
nop
shrl
and
xchg
ret
ret
push
fsub
xchg
nop
sub
or
or
mov
icebp
sub
dec
mov
int3
push
xor
push
mov
mov
xor
xor
ret
push
cs
andb
pop
sbb
mov
add
sub
lods
xchg
addr16
out
in
lods
xor
xor
inc
add
xchg
dec
jge
mov
or
lea
mov
push
pop
adc
imul
loopne
or
inc
jle
ljmp
aad
jle
push
push
jmp
mov
xchg
testb
sbb
push
or
ja
pop
aam
push
scas
or
mov
mov
fistl
inc
push
sub
jb
ljmp
lods
pushf
sbb
clc
inc
mov
fnstenv
add
das
addl
mov
loope
pop
scas
and
stc
inc
out
add
rorb
mov
pop
shlb
adc
ficoms
xor
jge
lahf
shlb
repnz
dec
cmpsl
sarb
mov
iret
xor
hlt
inc
inc
and
rolb
fwait
leave
sbb
fsubl
lea
inc
imul
adc
aad
loopne
pop
or
repz
stos
int3
fists
xchg
test
in
cmp
mov
in
test
xor
pop
inc
xchg
sbb
xor
adc
add
or
lcall
push
lods
push
or
push
imul
and
inc
pop
jecxz,pn
and
push
cmc
daa
ret
mov
pop
mov
mov
mov
mov
sbb
shlb
xor
or
out
mov
aad
jns
subl
fstpl
or
shrl
stos
or
push
pop
sbb
nop
mov
mov
sbb
jo
xchg
subl
dec
out
mov
mov
stos
pop
pusha
pop
loop
ficoml
shrb
enter
stos
scas
adc
push
repnz
movsb
fadd
fistpll
adc
xlat
imul
xor
jnp
mov
push
in
cltd
push
cmpb
inc
je
sbb
subl
sbb
inc
cmp
pop
mov
push
inc
shll
jo
add
hlt
dec
insl
mov
mov
lcall
push
mov
std
testl
icebp
cmp
and
call
test
pxor
adc
adc
loop
cwtl
adc
or
pop
cltd
add
fdivl
loopne
adc
pop
int3
in
jg
add
mov
and
dec
inc
and
iret
inc
ror
xor
cs
repnz
std
dec
sarb
fcmove
mov
out
cwtl
mov
lock
pop
mov
mov
fmuls
sub
pop
bound
adc
mov
frstor
and
pushf
inc
rcrl
sub
sbb
movl
fists
jae
fadds
lcall
adc
mov
incl
xor
incl
outsl
cmc
sub
mov
mov
push
sbb
add
dec
lret
xchg
add
outsb
ret
outsb
mov
or
iret
fistpl
adc
hlt
and
xchg
stos
mov
cmc
cltd
clc
cmp
pop
jg
enter
sbb
je
mov
mov
sti
inc
and
leave
dec
fsubs
push
mov
pop
iret
aaa
sbbb
push
sbb
or
adc
popa
loope
add
inc
stc
insb
sub
jge
das
mov
mov
ds
popa
push
insl
push
ds
push
test
or
inc
push
and
sbb
scas
jle
ja
fstpl
xchg
test
dec
inc
pop
hlt
lret
int
loopne
pop
aad
sub
jo
incl
mov
mov
xchg
in
mov
inc
shl
es
cmc
adc
jl
lds
test
repz
shlb
stos
mov
sbb
push
xchg
in
mov
in
inc
scas
cmc
sbb
lahf
sbb
jl
les
cmp
pop
ss
cmp
add
cmpsb
mov
aaa
mov
jbe
mov
lods
or
popa
jb
and
mov
add
dec
dec
sbb
sub
push
cld
pusha
add
clc
out
cmp
loope
cmp
mov
xorb
daa
sub
mov
jb
ds
rcll
adc
sub
rorl
paddd
es
pop
jle
stc
jae
xchg
jle
jne
mov
xchg
mov
loope
pop
xor
fs
aas
jmp
inc
lds
jnp
jae
and
sub
stos
pop
test
sub
sbb
pop
sub
jb
insb
add
xchg
bound
lds
cs
jno
jl
add
pop
std
ss
add
mov
pop
inc
test
mov
ret
cmp
fcmovne
dec
cmc
jbe
xor
mov
popa
mov
jge
sub
sbb
mov
pop
test
pop
sbb
das
dec
mov
das
arpl
pop
stos
out
or
pushf
test
imul
femms
outsl
add
mov
mov
fsubs
sbb
or
push
loopne
lcall
pop
test
jl
mov
hlt
push
out
mov
jecxz
call
mov
xchg
bound
orl
mov
cmpb
leave
mov
cli
or
lret
ljmp
popf
xor
push
sub
xor
lods
lods
mov
push
pop
inc
and
xchg
adc
rcr
dec
int
outsl
insb
ucomiss
sbb
stos
andl
mov
pop
pushf
or
cmp
sahf
adc
mov
loop
gs
cmpl
fsubs
adc
bound
lret
push
lock
and
jp
adc
mov
add
lock
sbb
sub
mov
loopne
ds
jmp
hlt
cltd
les
lods
push
lods
clc
pop
mov
fwait
sbb
in
arpl
rorl
fisttpll
jl
fbstp
or
dec
lcall
push
xor
xlat
fidivs
and
into
dec
aas
or
jbe
clc
test
inc
add
pop
sub
cmc
mov
jno
popa
inc
xchg
jo
push
dec
sbb
mov
pop
clc
loopne
adc
out
dec
xchg
xchg
mov
mov
and
pop
je
or
adc
daa
aaa
lret
ud0
fs
icebp
testl
sti
divl
xlat
sbb
dec
adc
push
iret
push
xchg
movsb
das
cli
lods
mov
adc
fbstp
or
mov
sub
nop
xor
sbb
inc
push
decb
mov
mov
sti
mov
sbb
aaa
cld
cli
movsb
js
bound
out
addr16
dec
mov
push
push
dec
adc
roll
dec
repnz
leave
notb
clc
cmp
inc
sbb
les
lock
clc
push
inc
inc
xlat
xlat
xchg
dec
or
adc
and
loopne
lds
pop
int
pop
sarb
es
lahf
stos
push
test
inc
pop
outsl
repz
test
or
aaa
adc
popa
dec
sbb
cs
pusha
hlt
pop
xor
imul
jbe
pop
fisttps
sbb
cli
mov
dec
xor
jl
mov
aaa
xor
in
cmp
or
dec
vmovaps
inc
loopne
xor
mov
xchg
shll
je
pop
into
stc
repnz
insb
ljmp
cli
rcrl
adc
bound
cmp
fwait
scas
int3
fdivl
shl
sarl
loopne
mov
sub
enter
cli
insb
push
ficoms
cmp
jmp
xor
jb
or
fdivr
popl
movsb
or
mov
dec
push
insl
adc
addb
xchg
mov
test
adc
sbb
aas
mov
fmull
sub
rol
jecxz
add
push
adc
insb
pop
nop
push
sbb
ds
pop
or
push
cwtl
pushf
dec
call
xchg
dec
jp
lods
sub
cmp
adc
mov
out
cmpb
mov
mov
jae
flds
dec
push
dec
je
jmp
push
loope
ss
mov
inc
pop
test
xchg
add
xchg
fdivp
rclb
mov
std
and
xchg
inc
add
pop
ret
cmp
add
mov
and
js
jne
mov
call
inc
in
mov
xor
pop
inc
inc
out
faddl
dec
sti
inc
es
pop
add
fdivl
out
dec
mov
imul
mov
and
inc
mov
cmp
add
cmpsb
push
cmp
aaa
cltd
inc
adc
cmpsl
add
inc
lret
jl
dec
cmp
mov
jecxz
push
adc
jle
inc
push
sub
jno
dec
sub
xlat
cs
in
cmovg
mov
testb
pop
fdiv
dec
inc
scas
insb
sbb
and
out
pusha
xor
dec
clc
int
lds
mov
push
pusha
gs
stos
push
and
inc
js
push
pop
jg
fstl
popa
insb
andb
inc
mov
inc
and
mov
mov
pop
jo
sbb
or
sub
add
andb
add
mov
shlb
ret
xor
loopne
pop
vpcomud
inc
ss
test
cmp
jle
sub
mov
pop
call
mov
popf
rcll
js
sub
pop
es
mov
push
js
or
jp
or
and
or
xchg
push
mov
lods
cwtl
fdivrs
cs
mov
xchg
stos
insb
inc
icebp
xor
adc
sub
and
dec
jp
xchg
arpl
inc
sub
xchg
cmp
lea
popf
adc
mov
dec
or
mov
bound
add
pop
test
icebp
fcmovb
mov
add
push
dec
jp
rcr
sub
das
pusha
push
xchg
add
fwait
mov
mov
dec
test
lods
int
les
fwait
push
sarb
inc
add
ljmp
stc
out
push
fld
pop
sbb
mov
test
mov
sahf
mov
sbb
fisubl
mov
and
adc
and
loop
jecxz
shlb
loopne
ret
pop
fmul
ljmp
xor
repnz
jo
dec
sbb
test
jno
cmp
push
cli
xlat
call
xchg
cmp
rorb
mov
rol
daa
xchg
add
or
inc
das
in
xlat
bound
je
push
ret
addr16
pop
adc
mov
pop
add
imul
rolb
jne
pop
pop
xchg
sub
fdivl
jbe
mov
sbb
inc
adc
mov
xor
cli
sti
mov
in
mov
nop
inc
add
adcl
sahf
inc
dec
dec
popa
and
push
pop
pop
sub
or
fs
add
lret
xchg
adc
push
fcomp
into
or
mov
mov
pusha
jmp
mov
adc
cmp
mov
lock
inc
and
mov
pop
fists
pop
lds
mov
add
add
add
ds
inc
out
in
push
and
int
xchg
or
rolb
sub
xor
add
sbb
test
shlb
test
fistpll
ljmp
sbb
in
mov
sbb
ss
in
xchg
inc
int
mov
sti
std
xchg
aad
test
mov
dec
sbb
xchg
xor
sub
jns
and
push
mov
mov
pop
icebp
sbb
mov
js
and
jbe
ret
xchg
repnz
push
or
test
rorl
push
divb
jno
pop
lods
icebp
sub
and
imul
sbb
es
mov
rorb
out
icebp
pop
test
mov
dec
mov
addl
sbb
and
mov
cmp
mov
call
adc
push
adc
pop
popf
into
ds
mov
dec
jge
jle
filds
adc
cmpb
mov
xchg
int3
xchg
lock
andb
push
jecxz
subl
or
or
in
mov
imulb
jp
orb
jle
mov
xchg
xor
mov
add
mov
cmp
mov
pusha
shl
ds
call
or
test
and
jg
or
mov
jbe
or
cli
loopne
test
fsubrs
je
cvttps2pi
add
inc
and
sub
mov
or
insl
stc
fcoml
das
push
and
mov
outsb
cmp
add
inc
je
mov
xor
fmul
popf
mov
pop
sbb
and
mov
add
jmp
fcmovnbe
mov
cwtl
sbb
loope
mov
dec
rolb
pop
js
es
aaa
jecxz
movd
les
pushf
xchg
xor
add
gs
adc
mov
mov
inc
xchg
push
clc
sbb
xor
jo
clc
push
fmuls
inc
hlt
inc
push
cmp
out
mov
xchg
and
push
je
pop
sbb
test
andl
push
fiadds
push
xchg
cli
mov
xchg
js
mov
outsl
out
js
addb
cmc
push
enter
mov
or
push
stc
and
and
push
loope,pn
jge
push
rcrb
fdivl
pop
or
jo
pusha
push
jl
inc
out
pop
aaa
mov
cmpl
cmp
rcrl
add
jle
decl
idivb
dec
adc
mov
or
pusha
in
aaa
xor
and
int3
push
sarb
push
aam
enter
les
pop
dec
outsl
add
aam
add
int3
sarb
rolb
sbb
cs
mov
mov
mov
in
std
pop
push
and
push
repnz
int3
dec
int3
and
cmp
xchg
sbb
xchg
das
mov
or
dec
subl
pop
aam
ficoml
mov
aad
lods
loopne
push
leave
outsl
hlt
cli
mov
add
stos
sub
xchg
scas
add
bound
or
or
sbb
mov
fimuls
or
fsubrl
mov
movaps
mov
jo
inc
dec
adc
lahf
inc
mov
mov
jecxz
outsl
mov
test
out
push
out
cmp
in
push
xor
stc
cmp
stos
or
js
test
add
ffree
push
cmp
je
jmp
outsb
outsl
clc
cmp
les
xchg
push
ss
pop
xor
jecxz
xchg
push
xchg
loopne
scas
ret
mov
mov
dec
clc
into
fistl
push
pop
lods
stos
cmp
orb
and
sub
aam
xchg
jle
pop
cli
jl
clc
lcall
mov
shl
mov
addl
cmp
jbe
popa
mov
push
inc
sub
push
mov
sbb
ret
out
hlt
add
in
test
adc
xchg
fwait
add
adc
adc
mov
inc
jne
mov
mov
in
fsubrs
jge
clc
jne
sub
data16
dec
xchg
hlt
push
sbb
pop
sub
dec
data16
fsubl
xchg
incb
gs
addr16
mov
push
data16
out
push
cmp
xchg
pop
mov
add
and
movsb
aaa
jmp
pop
iret
pop
mov
dec
or
xchg
int3
mov
fisubrl
mov
test
jo
adc
adc
sbb
mov
or
jl
outsl
lock
lods
xlat
popa
ret
outsb
adc
hlt
cwtl
adc
cmc
fs
inc
push
xchg
hlt
fnstenv
call
dec
cld
aam
fwait
ljmp
pop
btr
pop
lods
fsubs
sbbl
mov
icebp
mov
cmp
sahf
pusha
lods
mov
aam
and
sub
clc
mov
out
shll
lret
pushf
divl
dec
aad
push
xor
ficomps
mov
cmpsb
xlat
mov
idivb
mov
iret
mov
adc
ret
mov
and
dec
clc
mov
dec
add
xchg
cli
mov
test
push
and
cmpsl
scas
xchg
sahf
fs
int3
add
dec
sub
leave
movsl
xchg
call
or
call
sub
jne
sbb
mov
adc
and
add
daa
jmp
mov
fidivs
nop
sti
iret
dec
aad
cmp
lds
dec
push
xor
jecxz
mov
jge
adc
sarb
int3
xchg
adc
push
jg
lods
out
cmp
sub
xchg
imul
in
push
out
ss
push
mov
mov
mov
ja
mov
lods
stos
mov
ljmp
pop
and
scas
push
ret
sub
push
inc
aad
int3
scas
ficoms
mov
inc
arpl
ret
scas
sbb
imul
mov
adc
jo
cmp
push
lahf
fs
mov
addb
push
jl
and
pushf
popf
push
adc
pop
inc
jecxz
fidivrs
xchg
out
div
mov
xchg
jne
bound
push
jnp
sbb
lods
cmp
adc
sbb
xchg
and
sub
out
pop
lock
jo
mov
dec
xor
jo
inc
pop
xchg
ret
sub
mov
sub
and
andb
mov
mov
aad
sbb
je
inc
adc
pop
pop
dec
cmp
mov
mov
into
imul
movsb
mov
arpl
stos
mov
ds
fsubr
movsb
adc
clc
or
inc
dec
mov
sub
sbb
hlt
sbbl
popf
cmp
and
rorl
test
jmp
pushf
push
fdiv
jnp
mov
flds
aas
and
adc
shlb
push
sahf
shll
xor
push
shrb
push
add
andl
adc
pop
sub
add
or
mov
sti
add
arpl
dec
shrb
dec
xchg
add
arpl
loopne
sbb
and
sub
xor
iret
mov
cmpsb
xchg
add
cs
pop
jecxz
jmp
sbb
jbe
cmp
jg
cli
cmp
add
jl
mov
push
call
xorb
mov
fsubs
lahf
fcompl
push
inc
inc
or
sti
stos
dec
imul
mov
inc
les
aas
ds
dec
xchg
sbb
dec
xor
nop
sbb
cmp
cmp
pop
jle
inc
inc
into
sbb
mov
dec
jl
push
aam
inc
adc
cmp
pop
pop
into
sub
sbb
sub
rol
add
push
popf
shrl
mov
xchg
pop
mov
lock
dec
sbb
sbb
hlt
mov
push
loope
inc
mov
xorb
imul
aam
je
movsb
mov
lret
fwait
sub
aaa
movsb
jnp
lahf
mov
push
push
outsl
adc
push
inc
bound
or
fcompl
lea
dec
rcrl
add
cmp
es
xchg
push
imul
push
jne
pop
scas
lock
sarb
cmpsb
cltd
add
and
out
sub
xchg
aas
insb
or
sbb
bound
cld
push
inc
out
mov
fldt
adc
jne
push
bswap
data16
xor
sub
add
jo
rcr
mov
cmp
dec
jnp
into
sbb
and
inc
out
fs
stc
cmovb
subb
mov
into
inc
test
jo
xchg
cmp
jle
jg
sbb
and
mov
inc
ror
push
fwait
inc
movsb
dec
dec
out
cmpl
push
adc
inc
arpl
ret
out
scas
and
mov
and
inc
xchg
sub
out
sub
add
inc
pavgw
mov
sti
push
stos
dec
and
imul
leave
stos
jmp
idivb
lods
xchg
shlb
xor
addl
and
mov
push
imul
and
pop
or
call
in
and
out
ret
or
push
clc
ret
insl
pop
push
pop
aam
xchg
jne
or
push
lahf
out
pop
adc
sub
jge
pop
adc
hlt
imul
filds
jg
cwtl
sti
cmp
dec
inc
xor
popa
lods
jle
movsb
and
rcrl
dec
mov
pusha
sbb
cmpsl
push
pop
rolb
add
lods
adc
int3
jg
cmp
cmc
stos
cmp
jp
es
rol
push
xchg
adc
in
mov
sub
loopne
pop
test
inc
ss
ret
xchg
js
add
xor
andl
cmp
mov
cmp
sbb
scas
dec
cli
cmp
sbb
lods
ss
stc
xor
push
cmp
out
mov
mov
mov
xor
out
adc
add
movsb
test
pusha
out
xchg
mov
je
movsb
enter
loopne
fdivl
insb
int3
pop
cld
or
fldt
ret
push
pop
ds
fs
into
insb
or
addl
sub
dec
out
fstl
push
rolb
ret
inc
xchg
js
insb
inc
imul
sbb
ss
loopne
das
cmp
je
push
fcom
into
loop
fwait
dec
lsl
push
and
jbe
inc
sar
mov
push
loopne
jecxz
inc
jnp
and
cwtl
inc
sbb
adc
daa
mov
orb
sti
arpl
fwait
mov
es
lcall
lods
in
cmpsb
or
jo
pop
lds
dec
mov
adc
or
jl
sub
dec
pop
dec
jmp
jmp
insb
push
roll
arpl
inc
mov
inc
add
test
ljmp
or
icebp
loope
or
test
fldcw
jnp
and
addb
es
and
mov
rol
or
daa
xor
jmp
xor
xchg
cmp
inc
push
fnstsw
loopne
mov
push
adc
aas
scas
loopne
icebp
jmp
das
adc
pop
xchg
jo
mov
stos
loop
push
add
adc
pop
test
pop
popf
pushf
fwait
sub
and
mov
clc
adc
leave
and
mov
es
pop
inc
loop
push
mov
dec
mov
pop
test
loopne
adc
in
into
push
pushf
mov
dec
mov
lods
sbb
adc
je
sub
cmp
in
push
sub
and
xor
adc
js
movsl
add
pop
std
push
inc
loope
pop
shrb
js
mov
fsub
jae
shll
ds
test
call
dec
mov
mov
mov
aad
push
and
cwtl
adc
fwait
pop
cmpsl
add
shrb
test
jno
imul
fwait
mov
push
mov
sahf
mov
aas
dec
subb
scas
test
jl
mov
xchg
and
add
push
inc
loopne
lds
push
jge
adc
out
pop
fisttpll
jle
roll
lock
xchg
mov
push
lret
push
sahf
dec
pop
lods
push
mov
xchg
xchg
xor
aaa
imul
xchg
inc
push
call
xchg
sar
sub
das
cmp
cmp
xchg
mov
cld
es
dec
icebp
inc
mov
cwtl
push
adc
aaa
xlat
add
adc
sub
and
sti
xchg
nop
rorb
std
sbb
mov
push
ss
push
push
mov
pop
addr16
sub
xor
sub
cmp
mov
mov
adc
lret
or
loop
cli
mov
cltd
pusha
cmp
ljmp
stos
pop
add
lods
in
xchg
jecxz
loopne
sbb
add
andb
inc
or
mov
push
decb
and
xchg
insb
mov
xor
pop
cmp
movl
xchg
jle
mov
push
loopne
and
outsl
xor
and
inc
sub
popf
movsl
out
inc
test
mov
adc
or
lret
testb
sbb
push
or
andb
ret
ss
loope
cmc
cmpsb
movsb
pop
dec
xchg
stos
or
lock
idivl
mov
inc
dec
nop
xor
cld
rcrl
mov
jo
test
rolb
push
jns
fucom
pop
mov
rorb
pop
out
pop
mov
xor
ret
xchg
fwait
cmp
aas
fidivl
inc
inc
sub
orl
xchg
in
xchg
mov
cld
inc
add
lret
sbb
dec
ljmp
out
aas
xchg
or
cmp
pop
mov
pop
cmp
and
stos
adc
mov
js
pop
nop
hlt
cmpsl
mov
and
xchg
sub
xor
pop
orb
lcall
enter
aas
jp
jmp
movsl
hlt
jne
imul
push
sahf
push
sub
push
jge
pop
ret
push
lahf
lcall
loope
add
jecxz
and
push
pusha
xchg
fisubl
lock
sub
lock
push
test
insl
movsb
hlt
leave
ss
pop
pop
int
sub
or
pop
add
and
loop
cmpsl
out
pop
inc
push
push
jo
adc
add
push
lret
dec
push
inc
xchg
pop
mov
mov
in
std
inc
cmp
dec
fstpl
push
incl
or
sbb
lahf
sbb
shl
fcmovbe
test
mov
pop
jl
adc
imul
icebp
jbe
add
sbb
lods
inc
mov
roll
mov
subb
fs
jge
cli
sub
sti
jb
lods
add
push
test
js
push
sub
sub
cmp
ja
fisubl
clc
lods
xor
add
fmul
stos
xchg
adc
mov
or
aaa
adc
jnp
mov
dec
dec
cmpb
cwtl
mov
jecxz
inc
movl
mov
add
out
lcall
scas
mov
mov
shll
pop
pusha
daa
inc
nop
adc
inc
cmp
push
push
jno
ds
pop
mov
push
jno
cmp
adc
mov
jnp
xlat
or
mov
test
xchg
aam
mov
mov
dec
cmp
sub
imul
dec
pop
ljmp
aas
std
outsl
lods
mov
sti
xchg
mov
jo
dec
notb
daa
out
icebp
test
inc
pop
push
cmp
cli
das
xor
or
test
cli
mov
ret
jle
ret
sbb
and
inc
push
pop
and
adc
or
call
icebp
es
cwtl
push
sbb
jnp
ja
and
fdiv
add
stos
and
cmpl
pushf
mov
push
dec
xchg
aas
pop
jg
adc
jo
lret
inc
and
dec
adc
push
les
ficoms
jl
cmp
pushf
cld
loope
push
and
ds
pop
lods
scas
cmp
xor
xor
cmpsb
jbe
cli
sbb
mov
mov
inc
fcmovbe
push
daa
sub
jmp
sub
xchg
aaa
or
dec
mov
or
cmp
mov
sub
push
stos
inc
clc
inc
mov
movsl
fisttps
rorl
mov
fwait
bound
sub
sahf
dec
ljmp
rclb
sbb
sub
bound
mov
mov
das
add
in
push
sbb
les
bound
sarl
pop
data16
loop
shlb
es
mov
mov
leave
lock
popf
xor
pop
cwtl
cmp
mov
icebp
add
mov
out
pop
and
mov
jmp
mov
and
aas
hlt
and
jge
stos
loopne
test
xchg
sbb
adc
dec
ret
out
jle
inc
loop
inc
mov
push
js
push
add
add
pop
loope
lcall
push
lcall
add
hlt
scas
out
fldcw
icebp
adcb
lds
mov
inc
subl
push
inc
lock
loopne
xor
cli
jecxz
inc
aas
mull
cli
add
fidivrl
push
ds
lods
or
roll
adc
push
pop
xchg
lahf
jbe
or
gs
leave
xor
clc
imul
rcrl
mov
jmp
movsb
insb
pop
addb
imul
mov
loope
add
dec
push
in
loop
ret
into
outsb
dec
mov
aas
addl
repnz
xchg
or
cmc
cli
loopne
jl
jle
insb
inc
fwait
mov
sub
mulb
push
loope
fidivs
in
das
and
js
inc
pop
or
cli
mov
xchg
mov
push
mov
push
mov
or
test
int3
adc
dec
mov
or
insl
hlt
inc
imul
dec
push
fbld
dec
xchg
jmp
stos
clc
sbb
arpl
jb
decb
loopne
adc
pop
inc
bnd
int3
adc
push
loope
xchg
or
dec
enter
shr
xor
or
cmpl
xchg
sti
lods
rcr
lods
inc
lret
push
or
mov
cmp
add
mov
fidivl
or
les
mov
cmp
test
dec
mov
scas
mov
xchg
sbb
aam
das
stos
and
and
je
inc
pop
push
cli
aam
push
mov
cmpsl
sbb
xchg
adc
inc
es
das
pop
adc
jbe
cmp
repnz
and
dec
cwtl
icebp
je
jl
sub
mov
jb
test
mov
sub
pushf
sub
mov
mov
push
adc
sub
addb
mov
ss
arpl
push
xor
adc
push
lahf
cmp
jecxz
aam
dec
inc
in
imul
inc
adc
cwtl
lock
fwait
dec
test
mov
pop
loopne
add
jmp
mov
sbbb
and
inc
inc
cmp
pop
sub
push
ficoms
sub
add
or
inc
aad
nop
xchg
faddp
lock
mov
or
jns
pushf
aam
pushf
or
decb
cmpsb
push
or
mov
sub
lfs
or
sub
cmp
insb
push
pusha
inc
popa
jmp
scas
inc
roll
ja
xchg
xchg
jge
pop
test
mov
and
pop
loopne
or
rcrl
scas
jge
push
outsl
mov
js
cmp
mov
fiaddl
add
pop
xchg
xor
xor
stc
push
jecxz
or
ljmp
jle
add
xchg
ret
mov
sahf
mov
cs
adc
sbb
mov
clc
out
sbb
mov
imul
or
and
pop
push
jge
or
pop
jle,pn
test
xchg
inc
xchg
push
add
pusha
sub
jg
lea
arpl
push
adc
push
adc
mov
outsb
inc
mov
jne
sti
adc
les
push
add
mov
dec
cmc
or
xchg
add
data16
jne
pop
pop
aas
sbb
push
call
mov
lods
mov
inc
mov
daa
pushf
addl
mov
lahf
jb
jle
mov
xchg
mov
jmp
jns
fs
lock
sbb
adc
xchg
insb
or
xadd
shl
repnz
pop
testb
jno
out
into
arpl
add
mov
ret
sbb
stos
gs
pop
lret
or
inc
pop
pushf
test
mulb
movsb
inc
cmp
or
dec
mov
sti
jns
rol
xchg
out
and
jg
and
dec
shlb
stos
xchg
adc
ds
mov
rcrb
sub
mov
cmp
shl
ret
cmpsl
adc
fiadds
jl
std
mov
inc
pop
xor
or
or
pop
clc
or
push
xor
dec
cmp
mov
lret
add
xchg
movsl
push
or
inc
mov
lock
dec
sbb
inc
sub
pop
test
mov
test
mov
loop
clc
test
push
or
cmc
mov
sub
cli
cmpsb
stos
lods
addb
fsubs
sbb
xor
sbbb
push
adc
lcall
cmp
adc
popf
mov
aas
push
add
popl
lds
dec
mov
mov
sbb
cs
das
inc
hlt
popf
daa
pop
pop
repz
inc
test
pop
xor
stos
push
nop
fstpl
je
ret
mov
rcll
es
jge
cwtl
mov
push
xchg
js
clc
addb
je
dec
fbstp
sbb
shl
test
add
mov
cli
leave
sub
sub
dec
sbb
std
sub
add
xor
and
adc
jo
ret
sbb
or
jne
sbb
mov
gs
cwtl
mov
pop
sub
aam
fimull
sbb
pop
imul
sub
dec
les
and
adc
adc
aas
mov
ss
push
div
jge
push
dec
pop
int
dec
enter
shrb
push
and
push
lea
mov
outsb
pop
lods
dec
mov
outsb
mov
adc
dec
and
imul
bound
lds
pusha
dec
mov
call
je
lahf
push
jg
mov
push
call
pop
xchg
xorl
adc
ret
push
sbb
movl
pop
jbe
pushl
sarl
cmp
xchg
mov
jno
jp
mov
xchg
inc
cli
mov
sbb
sub
jl
push
add
dec
dec
fimuls
xchg
cmpsl
pop
push
shrb
js
into
test
outsl
aam
cmpsb
push
out
repnz
les
mov
rcll
enter
movsl
test
daa
pop
outsl
cmp
sub
or
loopne
stos
test
lahf
push
xlat
sbb
adc
mov
popf
adc
aaa
xchg
lds
js
mov
fcompl
fwait
gs
addb
rcl
mov
mov
sub
lods
fwait
mov
cltd
push
js
add
arpl
clc
jl
mov
cmp
mov
push
out
loop
hlt
test
mov
sbb
adc
aaa
add
scas
ficoml
and
or
mov
inc
push
push
sub
pop
or
clc
test
std
pop
xlat
jne
aam
jg
pop
je
add
jl
and
loopne
incb
add
repnz
test
mov
add
and
flds
imul
jno
filds
lret
mov
and
mov
xor
lds
push
test
mov
xor
jge
popf
jmp
fists
lods
or
rcr
or
aam
pop
faddp
out
bound
xchg
sbb
iret
lret
push
movsb
rorl
xor
pop
jo
jo
popa
mov
loope
les
lds
push
add
inc
and
out
in
and
std
std
fs
jne
int
scas
sub
adc
mov
aam
and
or
pop
xchg
cmpsb
movsl
aaa
outsl
mov
dec
push
xchg
jae
int
dec
dec
or
pop
sub
dec
stos
movb
or
cld
pop
int3
mov
std
xchg
test
shr
mov
sbb
ljmp
sahf
mov
push
xor
cmp
push
popa
leave
mov
insb
out
scas
sbb
push
cld
inc
rolb
xor
rcl
ss
pop
mov
pusha
cmp
xchg
jle
test
sbb
mov
jge
fstpl
adc
cld
mov
movsl
xor
and
test
ss
mov
mov
es
sub
mov
and
in
rorb
test
sbb
sbb
hlt
jbe
add
outsb
fistps
test
pop
pop
in
jg
cmp
loope
test
shlb
icebp
aas
scas
pop
insl
and
adc
test
dec
flds
xor
mov
jno
nop
mov
mov
es
sbb
mov
inc
hlt
fs
inc
ret
jnp
jg
dec
iret
in
push
dec
movsl
mov
rol
sbb
and
add
add
push
mov
test
or
hlt
pop
or
rorl
jbe
cmp
sbbl
insl
mov
ss
shlb
shlb
leave
movsb
or
cmpsl
test
out
getsec
sbb
stos
xchg
enter
and
movsb
pop
jb
or
insb
repnz
push
test
mov
aam
out
jl
inc
mov
adc
xor
pop
push
xor
inc
std
sbb
add
aas
fdivs
xor
jno
loop
adc
shlb
push
daa
and
popl
call
and
and
mov
hlt
dec
fisttps
or
loopne
loopne
in
push
or
loop
dec
mov
std
aas
ljmp
aam
push
cmp
mov
sbb
std
movsl
xchg
movsl
into
stos
push
xchg
or
fistpl
push
jp
std
cmp
cmpsb
lods
mov
popl
xor
fstpl
test
gs
or
outsl
lds
add
push
push
lcall
push
cmp
or
and
clc
jns
mov
mov
fcomip
jb
inc
cmp
or
aaa
jno
pushf
scas
pop
mov
in
fistpl
js
or
mov
mov
add
inc
mov
ds
rorb
fsubrs
test
ret
lds
out
sub
test
xchg
add
lods
xchg
dec
js
push
test
xchg
cmp
ss
fs
sbb
in
pop
dec
adc
cmp
sbbl
cmc
push
pop
adc
push
hlt
push
push
lahf
mov
add
sbb
sub
sub
xor
mov
repz
inc
enter
jno
mov
ds
xor
xchg
sub
imul
pop
adc
frstor
jmp
bound
inc
aad
js
pop
mov
ja
popa
inc
dec
pop
cld
jmp
push
outsl
jnp
int3
push
je
test
jle
aas
mov
mov
adc
adc
and
mov
pop
cmp
nop
pusha
cmc
add
loop
jg
orl
push
arpl
lods
or
mov
dec
and
mov
pop
push
cmp
push
cmpsl
sbb
mov
js
bound
push
mov
sar
movsb
mov
adc
mov
rcll
inc
and
dec
xchg
jp
sub
popa
stos
fxch
mov
in
scas
add
je
ret
xor
rorb
push
sti
les
add
sub
ds
mov
jl
test
pop
flds
js
jbe
or
inc
add
pushf
cmp
add
xchg
inc
nop
xor
xchg
push
mov
lods
aad
pop
jl
test
adc
or
divl
jp
mov
std
pusha
xchg
lahf
or
xchg
cmc
adc
ss
mov
adc
enter
adcb
sbbb
gs
rcl
add
jbe
add
dec
add
call
aad
in
lret
comiss
cmpsl
sub
mov
xchg
and
mov
jb
push
sbb
jmp
jo
nop
mov
or
lret
insb
push
ja
and
or
rcl
add
cld
jbe
ret
mov
push
outsb
dec
xchg
mov
cmp
or
prefetch
add
xor
sbb
xchg
clc
adc
test
push
adc
loopne
or
sub
xchg
mov
scas
hlt
mov
mov
mov
xchg
incl
xchg
cmp
movd
adc
mov
fmuls
je
das
xchg
sbb
mov
push
pusha
cmpsl
xor
in
sbbl
mov
push
idiv
mov
cmpl
inc
adc
orb
pop
leave
xchg
inc
outsl
sbb
push
adc
inc
xor
pop
out
push
xchg
mov
jo
or
nop
cli
scas
les
xchg
outsl
orl
sbb
scas
test
jg
adc
fs
inc
adcl
jo
or
mov
adc
orb
mov
or
xchg
cmpsb
cmp
fildl
lcall
push
sbb
lret
sbb
or
call
xor
fs
add
sbb
jl
jecxz
jno
mov
jmp
or
or
insb
pop
or
daa
adc
sbb
xchg
sarl
dec
xor
imul
cmp
ljmp
push
add
pushf
movsb
push
pop
movmskps
cmp
push
ds
push
jne
inc
xchg
js
fidivrs
scas
ret
fiaddl
pop
push
mov
mov
inc
push
imul
jg
cmpsl
xchg
mov
sub
xor
mov
shrl
inc
shl
add
movhps
sbb
pop
cmpsl
sub
mov
sbb
pop
push
iret
mov
inc
pop
sbb
add
mov
push
xor
ret
cli
lods
cs
test
sahf
sbb
pop
bound
xchg
inc
aas
lods
inc
es
movsb
dec
mul
call
jae
add
mov
push
xchg
pop
dec
add
and
or
inc
bound
out
cmp
outsb
pop
stos
into
xchg
mov
mov
or
cmc
rcll
pop
rorb
push
add
addl
mov
out
mov
dec
outsl
pop
push
shlb
mov
adc
aaa
adcb
mov
pop
orb
and
orl
and
movsl
iret
bound
insl
pop
mov
lret
popf
imul
loopne
popf
rcrb
mov
les
scas
test
inc
jl
mov
mov
pop
jmp
add
popl
push
cltd
fmuls
dec
or
std
or
jno
hlt
pop
pop
cmpb
fwait
mov
loope
fidivs
ror
mov
dec
sbb
mov
cmpsb
add
cli
mov
loope
dec
leave
ss
cs
loope
dec
pop
call
insb
or
push
js
imul
aas
pop
rclb
in
ret
movsb
push
lahf
aad
push
outsl
addr16
jecxz
pop
mov
pop
push
jp
orb
mov
mov
push
addr16
rorb
add
mov
rcrl
push
pop
ds
test
xor
sbb
pop
dec
js
sti
xchg
xchg
lods
stos
and
xchg
in
add
lahf
sub
jl
mov
mov
test
lcall
sub
cmc
or
roll
fnsave
and
fimull
pushf
mov
and
mov
sbb
pushf
dec
outsb
sub
mov
jle
and
xlat
xchg
mov
ret
in
and
xor
jae
jae
sbb
push
jbe
daa
push
push
adc
xchg
push
adc
mov
lods
fadd
cmp
pop
pop
mov
xor
inc
loope
pusha
cmp
inc
jle
mov
sbb
pop
xor
movl
ss
in
xor
xor
addl
test
xor
push
xor
jno
outsb
xor
jl
mov
or
movl
out
mov
adc
ror
bound
lcall
adc
sub
dec
push
sar
adc
fdivrp
jo
mov
jle
mov
cli
mov
in
outsb
sbb
cmc
mov
std
lcall
add
adc
push
in
xchg
clc
or
lods
cmp
gs
sti
rclb
outsb
dec
scas
jle
add
dec
xor
std
xor
cld
xchg
push
pop
mov
mov
mov
mov
jg
pusha
sub
cmp
push
pop
and
mov
aam
cmpsb
mov
je
mov
in
push
stos
pop
js
inc
mov
lret
adc
cmp
insb
enter
orl
cmp
cltd
dec
mov
dec
or
cmpsl
imul
shlb
nop
shlb
popa
rcrl
push
add
push
add
mov
loope
aad
push
xor
pop
pop
call
rcr
or
int
subb
xor
enter
or
jg
mov
mov
je
hlt
subb
lcall
xchg
fisubl
shll
mov
in
outsb
pop
inc
fistl
push
or
loop
cmp
cmp
xchg
js
adc
pop
dec
mov
orb
pop
add
testl
stos
nop
lods
stos
popa
adc
push
mov
lahf
inc
insl
insl
movsl
jl
pop
scas
push
push
add
adc
fwait
rcrl
sbbl
add
out
imul
lods
xchg
inc
or
mov
cmpsb
xor
icebp
sbb
stos
loop
adc
pop
aad
fcmovbe
outsl
dec
dec
push
sti
je
das
sbb
mov
testl
into
pop
xor
jmp
adc
adc
sbb
xor
push
je
jle
inc
dec
js
lahf
pop
aad
adc
mov
ror
jnp
xchg
inc
pop
or
add
hlt
fisubs
lret
and
jne
inc
popf
adc
inc
and
into
les
sbb
movsb
jbe
aas
scas
bound
das
push
sbb
mov
dec
out
add
stc
aaa
mov
xor
divl
sub
imul
ret
push
clc
sti
mov
sbb
push
pop
cs
push
and
mov
sub
ret
clc
sub
dec
inc
stc
repnz
out
sbb
icebp
sub
mov
push
jecxz
and
fcoms
or
pop
cwtl
rcll
mov
mov
out
test
add
mov
mov
pop
push
jo
nop
sbb
pop
jnp
push
push
xor
pushf
mov
loope
movsb
aam
jl
pop
xor
cwtl
mov
rclb
push
movsb
jo
shrl
push
cmpsl
test
rcrb
ss
outsl
mov
ret
pop
or
pop
xor
jnp
or
clc
mov
jno
cmpb
cmp
sbb
cmp
int3
maskmovq
divl
pop
inc
and
insl
jmp
pop
cmp
pushf
push
sub
pop
mov
aam
cmc
sar
sub
outsl
aad
sti
fwait
popa
out
sbb
inc
stos
jb
and
jg
cmc
push
call
jo
adc
push
mov
dec
adc
dec
ud2
pop
mov
dec
jnp
mov
or
imul
lods
pushf
enter
push
push
loopne
push
ret
repz
and
lods
adc
call
mov
cmpsb
das
or
insl
test
lds
jo
xlat
lret
jmp
je
mov
icebp
scas
push
outsl
flds
arpl
sbb
or
movsl
stos
mov
push
add
daa
das
sub
cmp
lods
test
mov
decb
test
ljmp
xchg
sub
cs
pop
sbb
enter
pop
popa
dec
out
clc
adc
push
mov
and
adc
clc
ljmp
jbe
jno
ret
and
fiaddl
jne
enter
dec
pavgb
mov
jae
push
mov
mov
jecxz
xor
lret
insl
das
shll
es
jmp
ja
sbb
pop
mov
adc
pop
imul
push
cmp
cmp
push
loop
add
inc
add
stc
fs
adc
shrl
dec
mov
add
push
add
xlat
and
dec
jge
push
mov
lods
fdivp
inc
adc
mov
js
jmp
mov
icebp
lahf
cmc
aas
adc
in
mov
cmp
mov
mov
pop
ljmp
cmp
mov
rorb
jno
xchg
aas
jl
hlt
inc
clc
pop
std
cmp
test
pop
les
sbbb
shlb
movsb
push
test
mov
pop
outsl
lds
xlat
and
incl
pop
cmp
scas
sub
jp
inc
clc
lea
ret
lea
sbb
dec
sub
inc
pop
lock
cwtl
notb
loop
push
jge
adc
push
out
push
pop
in
dec
cld
pop
sub
mov
cli
jmp
mov
addr16
pop
out
xor
cli
pop
call
add
lods
cmpsb
pop
and
push
or
sbb
jg
rclb
inc
stos
lods
or
dec
cld
inc
add
and
imul
bnd
push
faddl
adc
lea
aam
movsb
lods
fsubr
cwtl
xchg
rcrb
scas
jp
mov
cmp
subl
in
sbb
ljmp
bound
imul
or
lcall
xchg
shll
push
insl
dec
adc
cli
loopne
cmp
icebp
mov
arpl
rcrb
mov
stos
out
and
adc
rclb
int3
jne
das
sub
jae
sbb
mov
inc
push
xchg
adc
lock
jle
xorl
mov
dec
push
ljmp
pop
sbb
sub
adc
and
in
fdivs
ret
test
mov
ficoml
xchg
insb
pop
andl
pusha
test
sub
jmp
push
aas
push
icebp
jle
in
and
ljmp
les
in
or
xor
jg
jne
out
xor
insb
clc
lods
dec
cmp
cmpl
jmp
dec
mov
pop
push
push
mov
mov
pop
andl
into
addr16
rclb
mov
insb
pop
aam
shlb
jp,pt
cmpsb
dec
decb
fidivrl
inc
sub
fstpl
mov
dec
push
sarb
pop
or
cmp
and
lods
ja
or
xor
sub
add
fmull
jo
mov
cli
int3
les
inc
leave
outsl
jmp
and
addr16
loop
xchg
xchg
in
insb
arpl
movsb
sbb
sbb
cld
lock
adc
addr16
cs
xor
and
sbb
or
jmp
push
xchg
xor
or
cli
incl
int
testb
shll
arpl
add
insl
xor
mov
sub
or
add
pop
push
fadds
add
sahf
repnz
adc
movsl
fsubs
rcl
inc
inc
ret
aas
add
scas
andb
nop
add
stos
cltd
pusha
push
mov
mov
and
or
sbb
xchg
cmpsb
bsf
cmp
call
mov
iret
lcall
xchg
sub
subb
push
imul
mov
jb
xchg
jp
cmp
lahf
or
or
xor
inc
lods
jbe
inc
dec
jae
jl
cmp
jl
ud2
push
popf
es
aas
pusha
cld
iret
pop
add
aam
mov
cmp
aam
je
lret
cmc
jg
jmp
pop
fbstp
cmc
mov
icebp
adc
ljmp
ds
or
je
roll
faddl
mov
cwtl
add
sub
sahf
ret
movb
das
pop
sbb
dec
fldt
cli
pop
cmpl
sbb
jecxz
xlat
jne
dec
aad
mov
or
mov
loop
or
fstps
sbb
adcb
inc
xchg
add
repnz
mov
sbb
ror
arpl
arpl
push
sub
lods
or
ds
push
push
xor
insl
fs
sbb
or
test
and
ljmp
into
xchg
sbb
stos
aas
pop
clc
or
lods
add
jmp
sahf
mov
out
mov
or
or
cmp
mov
pop
loope
ss
pop
add
test
insl
mov
addr16
cmpsl
outsb
test
loope
subl
loop
aad
ljmp
bound
mov
mov
nop
cld
ret
into
aam
cmp
lea
xlat
in
sub
cli
ljmp
nop
or
fbld
lahf
flds
sbb
xchg
sub
xor
push
xchg
in
inc
movsb
mov
pop
adc
and
inc
adc
clc
or
fsubs
subl
rcl
pushf
in
ljmp
movsb
test
fcoms
mov
xor
ds
jbe
ja
mov
xchg
mov
inc
xor
cmc
test
jmp
pushf
pop
cmpsb
int
lret
es
inc
sbb
cmpsb
outsl
in
pop
into
daa
popf
xor
sbbl
mov
inc
inc
pop
subb
leave
loopne
cmpsb
adc
scas
es
mov
incb
adc
adc
aaa
jp
mov
cs
fmull
mov
repz
sbbb
xchg
or
les
dec
into
into
jo
push
stos
outsl
jo
pop
mov
mov
mov
test
cmp
mov
or
pop
xchg
dec
sbb
jmp
cmp
in
movlhps
dec
sub
gs
scas
mov
pop
popf
sub
cmc
dec
mov
ret
aaa
cmp
ds
push
and
je
lods
addb
sub
shll
or
add
push
xor
mov
or
mov
scas
in
pop
dec
inc
xchg
scas
and
add
decb
jge
jmp
test
loop
imul
loopne
mov
enter
stc
scas
add
call
aad
dec
adc
in
inc
or
inc
pandn
mov
orb
sub
and
pusha
movsb
mov
cmpsb
test
mov
mov
jmp
ljmp
orb
push
xchg
push
mov
mov
cmp
lods
pop
xor
clc
jnp
or
inc
xchg
fmull
xor
out
rolb
push
test
into
sbb
shll
es
mov
jl
pop
fcmovne
and
or
aas
imul
xchg
push
test
into
pop
and
push
aas
jns
push
fistpl
and
and
cs
mov
clc
adc
inc
or
add
mov
fcoms
lods
sarl
jp
pop
jae
pusha
loope
and
fmull
mov
hlt
shlb
cli
stos
sbb
sbb
cmpsb
out
cld
xchg
es
push
fadds
mov
test
jbe
cld
xor
popf
int
push
mov
xchg
imul
outsb
cwtl
mov
loopne
aad
lods
mov
sahf
mov
and
aam
add
or
jp
rorl
mov
push
repz
push
rclb
jb
call
ffree
movsb
js
lret
sub
mov
loope
call
daa
cmp
push
pop
jno
flds
and
sbbb
jge
jl
sbb
popa
loop
adc
nop
rclb
sbb
xor
pop
xchg
and
mov
lret
mov
fdiv
cmpsl
lahf
arpl
mov
mov
inc
push
cmpsb
jo
cmp
call
sbb
inc
jmp
inc
xor
sbb
add
adc
mov
push
int
lret
mov
xchg
or
adc
and
stc
lods
xchg
mov
les
stos
aam
icebp
idivb
cmpsb
mov
mov
push
push
cmc
pop
mulb
shlb
jg
inc
mov
std
or
inc
mov
push
jbe
jne
dec
shlb
or
rol
lret
shll
std
adc
push
popf
shll
push
mov
xor
or
int3
js
or
dec
lret
inc
loop
fld
mov
and
dec
lahf
jecxz
add
pop
addr16
outsb
or
mov
in
incb
xor
jnp
pop
dec
mov
aam
cmpl
test
cmpsb
pop
rclb
jecxz
push
push
rcr
push
pop
lods
dec
sub
and
pop
jb
sbb
outsb
cld
fbstp
fadds
sbb
or
push
sbb
or
and
faddp
popa
add
and
add
xor
cmp
pop
mov
aaa
mov
add
lret
and
push
nop
mov
std
add
adc
aas
mov
sbb
sbb
adc
not
adc
aam
jno
int3
ja
xchg
sub
pop
cld
outsl
js
cs
scas
lods
push
push
and
stos
inc
and
mov
leave
mov
std
imul
test
insl
iret
icebp
fwait
sub
leave
add
sub
pop
int3
ret
inc
jp
fildl
xor
push
xchg
lahf
xor
xor
sub
popa
jmp
sub
add
ficompl
push
mov
push
test
imul
dec
outsl
jne
dec
popf
xchg
hlt
push
inc
adc
enter
mov
pop
cmp
push
movl
scas
pop
gs
push
mov
orb
or
mov
mov
test
test
mov
sbb
or
add
adc
imul
in
adc
mov
mov
ss
sub
mov
pop
stc
jecxz
sub
aam
push
fistpll
mov
push
xor
fcoms
or
test
cmp
mov
out
inc
inc
or
in
dec
out
or
neg
lock
add
inc
movsl
test
imul
mov
or
inc
outsb
js
sbb
lcall
push
push
sub
out
leave
cltd
cmp
aas
js
add
or
inc
pop
dec
xor
jmp
add
insb
out
inc
addl
into
mov
nop
pop
or
out
push
nop
push
mov
inc
inc
js
jle
clc
imul
clc
mov
inc
pop
push
fstpt
dec
cmp
jo
ficoml
hlt
arpl
or
inc
test
imul
mov
insb
inc
lock
push
repnz
pop
cmp
inc
les
rolb
mov
add
rorl
push
jle
push
icebp
movsl
fsubl
xchg
ds
iret
ret
out
orl
mov
cmp
inc
adc
xchg
ret
sahf
insb
fdivrp
add
gs
mov
into
adc
in
push
mov
je
cltd
ljmp
add
addl
into
js
mov
inc
pusha
cmp
sub
inc
lods
out
mov
gs
into
insb
xor
mov
jl
dec
rclb
test
sbb
dec
ret
cld
cwtl
ret
cmp
xor
push
pop
sbb
lahf
push
movb
push
or
jg
js
pop
fidivs
adc
int3
sbb
repz
push
imul
mov
jp
scas
je
test
repnz
rcll
adc
mov
pop
jl
jg
push
cmpsb
mov
aam
fcmove
stos
xchg
inc
into
xchg
ss
out
or
sub
in
sbb
mov
cmp
mov
add
cmp
aas
dec
and
add
das
inc
pop
aas
xlat
add
mov
fistps
ret
sub
lcall
rclb
xchg
lahf
mov
sbb
sbbb
or
push
in
outsl
adc
aaa
stos
mov
or
repnz
or
loopne
scas
enter
lret
cld
or
pushl
in
mov
mov
dec
cld
mov
add
in
rolb
gs
cmp
cli
dec
inc
dec
and
jl
in
mov
inc
shlb
sub
imul
mov
adc
sbbl
pusha
mov
push
rorb
fildll
inc
mov
lea
dec
dec
sbb
jnp
and
jbe
fimuls
lock
addb
jmp
ret
adc
rorl
mov
add
and
cmp
mov
jecxz
cs
xchg
or
inc
fmuls
fidivs
lods
clc
adc
and
push
mov
out
popa
push
test
pop
out
or
loopne
fwait
sbb
and
fisubrs
dec
call
pop
je
sbb
dec
push
mov
xchg
fmuls
and
pop
or
or
scas
das
xlat
sbb
pop
cli
insb
push
icebp
test
cli
aaa
add
in
jne
mov
push
mov
rclb
test
xor
mov
pop
and
imul
mov
and
push
out
add
push
lock
cmp
js,pt
pop
shrb
dec
pusha
sti
pusha
jae
pop
pushf
aam
btr
cld
popf
sub
lret
dec
inc
fistps
mov
or
jmp
ss
pushf
cmp
mov
clc
jge
mov
rcll
sbb
clc
mov
je
or
sahf
in
arpl
and
inc
orl
push
mov
push
pop
loopne
xchg
lcall
negb
test
leave
es
jns
stc
xchg
add
jne
lock
push
jecxz
mov
push
hlt
scas
push
push
bound
loope
adcl
xchg
mov
push
daa
test
adc
mov
arpl
push
push
adc
jecxz
xchg
mov
jle
add
shl
imul
ja
out
sub
pop
and
shl
push
mov
gs
mov
pop
xor
aas
xor
dec
ja
es
mov
inc
push
mov
adc
jno
pusha
adc
fwait
daa
add
movsb
mov
mov
cs
gs
mov
and
mov
and
xchg
push
pop
push
jb
sub
cld
arpl
test
push
pop
cmc
mov
lock
sub
add
test
or
jmp
aam
das
mov
rcr
out
mov
add
or
xor
mov
rorl
or
lock
push
jge
mov
pop
xrelease
jno
scas
add
aaa
jp
dec
pmaddwd
xchg
pop
cmp
ret
clc
mov
shll
dec
lahf
sti
push
push
dec
das
lret
test
mov
test
lea
mov
rorb
shlb
loopne
xor
ljmp
pop
std
punpckldq
xchg
xor
nop
iret
cltd
adc
mov
pop
or
inc
outsl
ljmp
xchg
ljmp
pushw
add
ret
imul
lods
pop
arpl
popf
rcll
or
sbb
or
lock
xor
dec
adc
rcrb
jbe
cld
mov
or
mov
push
ret
loop
cmpsb
in
enter
jp
js
ljmp
pop
sbb
fs
pusha
test
xchg
jge
fninit
int3
andl
cmp
rorl
aaa
dec
cmp
jg
outsb
aad
sub
repnz
sbb
jbe
sub
jne
mov
cmc
jae
xchg
dec
push
repz
into
dec
gs
call
fistl
incb
mov
sub
dec
ret
push
mov
push
ret
ja
sub
mov
and
add
jne
and
arpl
inc
dec
pusha
jnp
dec
imul
fsts
ljmp
mov
cli
xor
or
std
cmpsb
inc
ljmp
andl
ja
push
and
out
popa
adc
mov
push
rcrb
xor
mov
flds
lea
and
xchg
adcb
in
or
arpl
mov
and
rcll
push
adc
dec
addr16
mov
or
sbb
jbe
xchg
lods
pop
sub
dec
add
lods
test
xor
push
nop
call
add
and
repz
mov
pop
push
mov
push
fcoms
ljmp
push
insl
xchg
hlt
movsb
inc
lret
dec
push
out
add
xchg
ja
rol
arpl
mov
fistpll
mov
popf
sbb
sbb
dec
mov
stos
subl
shl
ret
and
das
test
jns
lea
pop
ljmp
mov
dec
std
push
jp
nop
mov
frstor
xor
xchg
sub
dec
xchg
stc
subb
ret
jns
aaa
pusha
mov
cwtl
loopne
loope
mov
iret
or
fidivrl
ficomps
out
add
dec
push
and
outsl
sub
cmpsb
out
shlb
mov
sub
test
pusha
inc
dec
adc
fildl
cmc
xor
data16
xchg
mov
xchg
ror
lock
cli
xorb
add
cli
shrl
jns
cmp
dec
out
fldcw
mov
jp
movsl
or
and
inc
sbb
xor
mov
imul
mov
adc
aam
daa
cli
inc
add
xchg
pusha
aaa
pushf
iret
ja
xchg
call
xchg
and
je
mov
outsl
inc
fiaddl
jle
push
out
adc
dec
insl
add
sbb
push
pop
push
clc
rolb
dec
out
jl
das
mov
xor
aam
xchg
push
jp
out
pop
cmpsl
push
and
cmp
dec
clc
add
xchg
clc
cmpb
movsl
pop
push
push
ret
xchg
and
test
mov
leave
das
sahf
mov
adcl
pop
xor
pop
das
data16
adc
mov
lock
add
push
aas
add
fisubrl
mov
adc
mov
in
shlb
bound
mov
lock
or
dec
nop
outsb
cmpsb
shrl
pop
out
or
scas
add
andl
mov
jg
sbb
push
stos
pop
or
dec
mov
inc
push
cmp
sbb
push
and
or
push
or
outsl
xor
xchg
pop
prefetch
push
push
jo
xor
xchg
daa
sub
mov
xchg
test
cld
lret
fisubl
push
dec
rcrl
cmp
mov
adc
mov
sub
ds
inc
jp
les
mov
sahf
pusha
in
popf
stos
or
add
fdiv
outsb
fisttps
fistps
inc
mov
mov
and
jmp
shr
es
pusha
and
pop
das
mov
out
insb
jno
adc
or
leave
inc
idivb
bound
rolb
outsl
fsubp
sub
movsb
and
flds
das
loopne
jg
dec
add
xchg
cltd
idiv
mov
aaa
jne
es
pcmpeqb
cmp
or
pop
dec
add
mov
shl
dec
fldt
push
cs
sub
aam
in
xchg
dec
rolb
jmp
add
fmuls
ljmp
mov
mov
movsl
mov
add
pop
mov
cmp
test
and
sbb
sbb
hlt
sbb
clc
ljmp
xchg
or
or
inc
add
xchg
and
pop
stc
sub
das
mov
mov
dec
fsub
sbb
lds
sub
inc
call
xor
pusha
iret
ja
jecxz
xchg
mov
imul
dec
push
push
pop
cli
lret
pushf
loop
and
sbb
mov
nop
mov
add
mov
inc
pusha
dec
pop
pushf
scas
and
xchg
fidivrl
lds
arpl
mov
lcall
nop
in
push
sub
add
mov
mov
xchg
dec
js
xor
or
inc
clc
sbb
add
outsb
es
mov
and
xchg
fimull
xchg
and
dec
sbb
enter
rorl
push
mov
push
xlat
rsm
push
dec
jecxz
movsb
xor
lock
stc
out
push
jg
mov
and
pop
and
pusha
cmp
jno
xor
loop
repnz
packuswb
dec
dec
or
test
inc
xchg
xor
pop
daa
call
and
sbb
ss
daa
lods
mov
loopne
out
ljmp
mulb
daa
shrb
out
xchg
push
pop
xchg
pcmpeqb
sbb
out
fsubr
xchg
pop
jno
mov
jae
jb
lock
loopne
sub
mov
jg
pop
in
mov
stc
imul
fdivl
pop
cli
adc
sub
pop
mov
xor
fsubs
jno
stc
aaa
adcl
and
inc
inc
data16
and
cmp
and
pop
cmp
addr16
js
push
dec
loop
cmp
call
mov
sbb
mov
add
inc
inc
mov
add
stos
push
jge
out
lret
mov
mov
je
orl
mov
mov
subl
in
inc
mov
jnp
push
xchg
je
out
imull
inc
jg
lods
das
sub
jle
std
loopne
das
fidivrs
pop
jne
cmc
dec
mov
sub
inc
je
std
sub
xchg
inc
test
xor
repnz
dec
ret
xchg
adc
or
mov
subl
push
jne
loop
jo
inc
imul
jp
clc
mov
mov
inc
pop
iret
xor
dec
mov
xchg
mov
loope
pusha
cmp
lret
aas
xchg
nop
and
aas
pop
sub
into
or
mov
sbb
mov
out
mov
xchg
fadds
ret
lret
fsubl
pop
xor
call
fnstenv
imul
jmp
inc
jp
jecxz
loop
inc
inc
adc
sub
pop
pop
push
add
sub
dec
popa
std
aad
cmpsb
scas
mov
push
mov
add
lds
mov
inc
dec
aas
mov
jl
stc
sub
ljmp
push
xlat
mov
repz
out
dec
cmpb
inc
pop
insl
mov
in
ret
push
mov
jmp
or
orl
sbb
pushf
push
inc
add
fnstenv
xor
sahf
cwtl
jl
lds
int3
sbb
xchg
movsb
mov
std
addr16
and
icebp
sbb
out
xchg
js
shr
cmp
test
movsl
jb
call
clc
sarb
cs
fwait
sahf
jbe
test
cli
xchg
and
jo
jns
and
movsb
adc
lods
ds
adc
pop
xor
mov
cmp
jbe
dec
adc
aaa
sbb
jmp
mov
and
add
pop
or
pop
stos
adc
adc
jnp
xor
rolb
dec
jp
orb
lods
fs
fsubrl
addr16
jl
movsb
mov
or
imul
sbb
xchg
cli
ficompl
mov
jp
inc
mov
loope
or
call
daa
sahf
hlt
and
cld
pop
sub
push
push
js
cli
mov
cmp
js
jecxz
sahf
inc
xchg
sahf
aam
jbe
inc
in
lret
pop
jecxz
je
cwtl
movsb
out
adc
outsb
xchg
dec
and
lods
pop
ret
push
mov
or
pushf
aam
sti
mov
mov
adcl
and
mov
dec
add
jge
stos
cwtl
js
in
xlat
fs
dec
test
add
shll
dec
aas
aam
fsts
inc
cmp
mov
inc
enter
push
pop
jb
pop
ljmp
mov
inc
std
rolb
sbb
dec
push
dec
test
fmulp
sub
fistl
out
pop
in
outsb
add
aam
push
movsb
pop
and
lcall
sub
ss
mov
sub
jo
pop
je
mov
add
call
std
cmpsl
ret
cwtl
or
pusha
push
repnz
xchg
and
addb
aaa
inc
mov
mov
pop
add
aaa
push
push
shll
dec
cmp
lods
jp
idivb
rcl
ret
pop
dec
lods
std
inc
movsl
push
pusha
add
pop
aas
mov
pop
das
mov
mov
add
mov
nop
gs
ret
or
rorb
and
push
aas
sub
lods
imul
inc
bound
lock
mov
cmp
sbb
mov
lods
jbe
jmp
pop
xor
or
or
mov
dec
cmp
test
xor
sbb
jp
cmp
push
mov
jle
loope
ret
bound
adc
aas
sub
sbb
or
jle
and
inc
fs
int
add
mov
jo
in
adc
pop
xchg
jp
clc
add
push
test
cli
adc
hlt
pushl
test
push
or
xchg
cmc
or
popf
in
loopne
sub
arpl
fldz
pop
add
lods
loope
aaa
aam
adcb
into
stc
mov
push
test
test
pop
stos
and
pop
add
div
pop
rcrb
aam
pusha
push
push
xchg
cld
ljmp
test
les
mov
mov
add
stos
jne
shll
dec
shlb
test
hlt
mov
hlt
jae
xor
or
dec
gs
je
xchg
test
and
dec
mov
fs
and
and
push
inc
sbb
add
adc
lods
js
or
loopne
adc
add
add
or
sbb
scas
sbb
int3
hlt
xchg
cmpsb
pop
jg
pop
stos
push
ljmp
pop
js
xchg
mov
popf
fisubrs
jge
or
add
push
sub
sub
sbb
sbb
push
idivb
jne
mov
pop
icebp
rol
mov
push
loopne
mov
das
je
push
pushf
lret
push
sub
lahf
gs
inc
cltd
and
clc
scas
push
mov
mov
shr
aaa
dec
pop
out
cmp
movsl
push
ds
inc
data16
iret
movsb
push
rorb
push
fidivl
xchg
mov
dec
lret
dec
adc
movsl
loope
in
inc
mov
lret
iret
xchg
adc
cs
icebp
sub
add
ljmp
or
xor
scas
bound
cmpsl
add
and
mov
adc
mov
mov
mov
push
cmp
jmp
cli
push
push
adc
mov
fs
outsl
test
loopne
adc
mov
pop
js
in
and
lret
xor
mov
mov
loop
pop
ror
cltd
jecxz
pop
jmp
push
addr16
orl
insb
jl
mov
rolb
jmp
cmp
test
loop
xchg
sbb
push
xchg
jne
xor
mov
and
mov
bound
xchg
sbb
xor
adc
push
adc
mov
clc
add
loopne
xchg
bound
sbb
loop
shrl
add
das
in
cmc
pop
push
ret
cmp
cmp
scas
in
mov
fwait
sahf
mov
or
xchg
adc
add
aam
xor
jp,pt
sbb
in
in
rcl
mov
dec
cli
dec
movsl
subb
mov
je
dec
push
test
mov
jg
sbb
pushf
shll
les
push
sub
in
daa
out
orb
mov
clc
sti
inc
fmull
jno
jge
sub
std
js
jle
jae
aam
imul
clc
inc
cli
sbb
rcrb
ss
mov
leave
mov
das
xor
enter
inc
inc
push
lods
sbb
or
sbb
pop
pop
push
daa
adc
lock
xchg
push
jo
xchg
nop
out
scas
dec
mov
and
js
xchg
cmp
call
dec
dec
ljmp
rorb
je
fidivrl
mov
icebp
mov
cs
adc
adc
sub
xorl
inc
loop
add
pop
inc
aad
add
pop
adcl
dec
int
ret
sbb
mov
mov
xchg
xchg
out
cmpsl
mov
sub
sub
mov
hlt
adc
shlb
enter
sbbl
pusha
stos
test
xor
das
inc
pop
xchg
add
inc
nop
std
ljmp
clc
add
dec
jecxz
mov
or
cmp
test
push
nop
clc
mov
xor
or
hlt
push
and
int3
cs
or
jp
lret
xchg
add
dec
js
jge
add
adc
push
sub
push
sub
test
or
and
jle,pn
cmp
in
mov
push
nop
andl
insb
dec
mov
pop
mov
cld
jo
jbe
loopne
in
add
ljmp
adc
push
push
mov
push
push
dec
or
js
dec
rcl
adc
ret
xchg
push
mov
inc
add
mov
sbb
lcall
cmpl
cmp
sbb
iret
mov
jae
cmp
cmc
xlat
es
cmc
test
inc
scas
mov
std
ret
aad
lcall
mov
jl
stos
pop
cld
dec
sahf
and
jne
rol
mov
xchg
dec
aas
lock
push
pop
fimuls
rolb
dec
hlt
mov
mov
icebp
mov
pop
xchg
pop
mov
lods
push
inc
adc
cmp
cli
mov
xchg
add
and
or
mov
xchg
rcrb
and
adc
xchg
or
or
bound
push
mov
out
in
jnp
adc
mov
sub
pusha
ret
test
movb
pusha
cmp
out
sar
cli
les
lods
lds
mov
and
sbb
mov
lds
mov
inc
loope
outsl
mov
orl
jne
cmpsl
negl
outsl
or
inc
jge
push
outsb
mov
sbb
iret
mov
ljmp
stc
cmp
push
xchg
out
lea
cltd
mov
xor
xchg
add
inc
das
shll
inc
out
inc
call
jecxz
idivl
and
arpl
sub
jecxz
sub
into
enter
ljmp
xchg
scas
cld
bound
push
lret
scas
xchg
shl
clc
popa
dec
mov
inc
sti
pop
imul
movl
ror
push
test
jne
inc
mov
mov
icebp
add
pop
or
test
jo
and
das
ret
enter
add
push
push
add
inc
rolb
mov
sbb
out
cmp
push
int3
adc
inc
xchg
push
cli
jbe
dec
xor
adc
cwtl
sbb
xor
rcr
mov
push
insb
add
jno
outsb
outsl
loop
mov
or
cmp
push
jp
sbb
daa
fdivrl
mov
cmovbe
and
xchg
hlt
and
ret
xor
add
ret
testb
add
aam
lret
xchg
arpl
sub
cltd
xor
xchg
scas
pop
pop
cld
mov
ret
iret
push
xor
out
aaa
cmp
fmul
mov
sbb
int
sahf
adc
inc
jl
mov
mov
jle
sahf
shlb
adc
push
jp
and
cwtl
shlb
pop
mov
add
xor
inc
jl
test
mov
popa
sub
ljmp
push
cmp
ret
stos
movb
test
ljmp
cmp
sbb
mov
into
xchg
mov
xor
pop
pop
mov
data16
pop
in
sbb
add
mov
clc
pusha
sbb
ficompl
pmaxsw
xchg
add
mov
into
out
push
mov
mov
cmc
lcall
ret
mov
mov
mov
jmp
inc
or
mov
mov
add
lea
inc
xchg
mov
call
sbb
out
sbb
push
repz
mov
xchg
into
test
adc
add
inc
sarb
mov
push
movl
shll
mov
clc
fbld
scas
dec
push
rclb
mov
cmp
rclb
test
inc
loop
jne
mov
jle
sahf
out
push
mov
push
xchg
ljmp
mov
pmuludq
mov
pop
pop
cli
jno
stc
sub
mov
xor
sub
mov
sbbb
cld
leave
or
inc
push
mov
and
dec
dec
push
sbb
inc
dec
pusha
xor
cli
in
in
bound
aaa
and
inc
xchg
rolb
int3
lcall
dec
mov
sub
in
mov
int3
add
out
pop
clc
xchg
scas
subl
cwtl
in
scas
mov
mov
test
mov
out
pop
pop
add
lret
xchg
pop
or
aam
add
les
lods
out
test
scas
inc
mov
jecxz
lcall
or
out
push
dec
imul
lcall
mov
adc
jp
or
inc
xor
jle
insl
inc
faddl
mov
push
ds
inc
loope
pop
ljmp
xchg
pop
xor
idivl
das
push
xchg
inc
inc
stos
cmp
shrl
pop
push
sbb
xchg
shrb
sahf
xor
and
xor
into
mov
jecxz
adc
xchg
pop
adc
xchg
aas
jle
inc
test
fistpl
pop
sbb
inc
cmp
in
sub
inc
loope
aaa
add
aad
or
sbb
sub
mov
insl
mov
enter
lcall
std
jo
or
je
xchg
pop
mov
orl
mov
push
mov
mov
push
jecxz
call
popa
out
jp
dec
jl
add
fiaddl
inc
cmp
cmp
sub
popa
jl
mov
inc
test
daa
mov
cltd
fldl
sub
jp
aam
xchg
mov
ss
or
lcall
push
scas
mov
js
loop
add
push
addr16
out
pop
mov
mov
jmp
arpl
sbb
lods
enter
add
lret
cmpsl
cmp
mov
test
addb
loop
mov
orl
hlt
pop
and
sbb
in
jle
call
mov
ret
or
mov
cltd
shll
xorb
scas
sub
jg
jbe
push
ds
adc
cli
jl
leave
jns
stos
dec
xor
and
mov
xor
jb
popf
lea
shlb
dec
addr16
or
loopne
push
ret
mov
clc
mov
pop
repz
or
xchg
jp
mov
ret
cmp
adc
rcll
xchg
jp
xor
aas
aam
rcll
iret
mov
fsubrs
push
mov
push
in
push
or
jns
movsb
inc
push
push
les
mov
pop
adc
insb
sbb
and
pop
xchg
xchg
test
xlat
add
movsb
repnz
mov
mov
sti
mov
push
stos
pushf
inc
push
and
dec
push
pop
add
sbb
les
movsb
ss
add
lods
cmc
push
cmp
mov
call
stos
icebp
mov
cmpsb
test
add
pop
mov
bound
sahf
push
push
jg
ret
mov
stos
and
or
insl
out
mov
and
mov
adc
outsl
jnp
mov
inc
loop
test
sarb
les
faddp
fbld
pop
inc
bound
or
inc
adc
and
adc
call
xor
adc
pop
or
popa
adc
mov
addr16
hlt
gs
push
test
xlat
mov
push
pop
jge
or
and
or
clc
sbb
sti
inc
xlat
xchg
xchg
daa
dec
addb
rolb
mov
inc
in
dec
popa
add
push
fisttpll
add
jbe
gs
sahf
popa
inc
ds
es
mov
rclb
lret
and
jne
fnstsw
cld
and
mov
add
mov
sbb
ret
mov
stos
sub
mov
xor
mov
cli
or
call
cmpsb
jb
pop
and
mov
mov
jecxz
jl
and
shl
fiadds
mov
mov
inc
fwait
mov
dec
adc
ss
mov
mov
aam
pop
mov
popa
sub
mov
lahf
movl
add
push
mov
xchg
js
fldl
cmpsl
fdivs
push
jge
adc
sub
or
imul
std
lock
imull
popa
daa
test
mov
cmpb
push
push
aaa
add
mov
addb
mov
jle
pop
outsl
outsb
pop
sub
addr16
inc
dec
lock
sub
inc
dec
imul
jl
loope
std
dec
inc
xchg
pop
ficomps
xchg
sbb
lds
or
cmpsl
ror
ljmp
incl
cmp
sub
push
hlt
push
sbb
cmp
int3
xor
mov
mov
jp
mov
push
xchg
fld
bswap
iret
cmpb
mov
xor
jl
shr
pop
fmuls
add
mov
call
out
dec
cmp
cs
hlt
subl
sbb
repnz
and
push
mov
shlb
xor
push
rorb
cmp
cltd
cmp
push
ja
push
push
inc
ja
rol
filds
pop
cli
dec
pop
movsl
mov
mov
lods
dec
dec
xor
call
outsb
or
fdivrs
idiv
push
cmp
xor
jmp
orb
xlat
dec
jb
push
dec
adc
cmpsl
mov
pop
shlb
pop
xlat
pop
or
test
mov
imul
sbb
jmp
pop
inc
loop
xor
mov
js
pop
push
mov
dec
fimuls
mov
ret
call
sub
ret
and
sbb
addb
jmp
add
fdivrl
loope
inc
ja
mov
mov
arpl
mov
ficomps
dec
and
mov
mov
cli
adc
lock
dec
push
ja
rolb
leave
sbb
xchg
fs
hlt
cmpsl
ljmp
xlat
rcrb
cmc
xlat
loop
push
scas
sub
dec
push
or
xchg
xchg
and
sub
xor
mov
call
lods
repnz
pop
add
or
incl
cs
std
or
fdivrs
adc
sti
loopne
call
dec
sbb
scas
mov
in
sub
push
xchg
std
mov
lock
cli
push
fwait
sbb
push
scas
jb
cli
xor
dec
rcl
push
pop
dec
test
and
cmp
xchg
ret
xchg
lahf
or
adc
cmp
fsts
shlb
dec
sti
pop
adc
inc
hlt
sub
xchg
test
rorl
ljmp
inc
faddl
lahf
ret
in
rolb
cmpsl
mov
sahf
sti
int
test
sarb
push
sbb
sarb
dec
pop
ja
call
incl
decl
and
lcall
arpl
pusha
pop
clc
jl
add
sub
out
pop
add
pop
and
gs
aas
mov
ljmp
dec
jg
andl
fmull
push
inc
fdivr
jne
ja
js
xor
fadd
mov
cs
js
popa
cs
pop
dec
jecxz
fldl
sub
addl
xchg
xchg
leave
arpl
test
popa
cld
ja
jmp
jle
cmp
iret
inc
gs
jg
push
cmp
or
daa
inc
add
push
and
mov
add
mov
add
cmp
insb
int
adc
adc
jecxz
xor
pop
leave
push
cmp
push
mov
xchg
test
push
mov
mov
int
pop
adc
xchg
movsl
mov
cwtl
push
jo
aad
iret
push
mov
xchg
testb
sub
jmp
cmp
xor
fmul
lret
ss
add
xchg
lock
outsl
jp
push
lods
jg
cmpsb
iret
xchg
mov
xlat
push
imul
pop
and
data16
popa
insb
dec
cmp
and
jno
adc
scas
lock
cmpsb
shlb
insb
add
ficoms
push
sub
inc
xchg
xchg
in
hlt
xchg
loopne
jno
xor
adc
or
mov
add
sbb
test
scas
mov
mov
loop
jnp
insb
incl
cmp
jmp
adcl
jb
xor
push
jo
enter
add
and
lret
movsb
imulb
fs
cwtl
mov
or
push
jmp
dec
mov
inc
mov
and
push
sti
push
cmpsw
push
jne
pop
or
jle
pop
lock
xchg
xchg
add
add
jl
push
sub
mov
xchg
jo
sub
mov
scas
xor
ret
aaa
dec
add
inc
xor
mov
adc
into
rcr
lea
in
or
hlt
imul
adc
push
pop
jo
push
scas
insb
push
mov
xlat
xorps
dec
testl
jmp
or
and
fimuls
push
mov
stos
mov
loopne
aaa
movsb
push
push
pop
mov
cltd
ret
mov
roll
inc
inc
and
nop
and
lea
push
test
push
js
andb
jmp
insb
xchg
cmp
bsf
lret
xchg
and
and
test
clc
jmp
pushf
std
xchg
or
pop
pop
arpl
add
inc
dec
or
sbb
jle,pn
test
dec
test
test
outsl
mov
cmpsl
je
stc
jnp
cmp
fsts
insb
es
lcall
mov
movsb
inc
mov
dec
ljmp
int
jle
lret
ja
outsb
push
jne
mov
adcl
dec
fbld
inc
pop
cmp
in
lock
aaa
mov
inc
pop
mov
in
adc
cmp
insb
cld
push
sub
lret
test
es
call
push
out
in
fsts
shrb
adc
call
add
pop
notl
jb
push
jle
filds
in
popf
cmp
jp
pop
hlt
sbb
xchg
rcrb
dec
dec
mov
fsubs
xchg
sahf
mov
fisubs
mov
cmc
inc
push
add
scas
daa
push
fcmovne
mov
bound
scas
shrl
and
js
out
sub
adc
fimull
test
aas
pop
cld
xor
out
sbb
pop
fsub
and
dec
js
mov
inc
popa
add
cs
addr16
clc
clc
stos
adc
xor
cmpb
rol
jle
jbe
cmp
cmp
xor
cmpsl
sbb
das
jecxz
lods
cltd
push
lret
sar
hlt
test
test
push
std
mov
inc
pop
dec
fimull
mov
ds
mov
out
xor
shll
cwtl
lcall
aaa
mov
or
icebp
sbb
inc
ret
in
movsl
xchg
xchg
lods
scas
lea
lret
pop
cmc
add
loopne
sarl
push
mov
push
push
iret
mov
or
lea
jo
popf
jg
and
mov
subl
cmp
int3
xchg
iret
fsubs
cld
inc
push
push
xchg
jl
sbb
push
outsl
xor
int3
pusha
test
ret
daa
test
std
jp
sbb
insl
shlb
dec
pop
mov
xor
mov
adc
insb
mov
loop
pop
jo
sbb
jo
int
inc
add
orb
or
fchs
in
addr16
mov
and
push
cwtl
mov
and
sahf
arpl
sbb
cltd
sbb
into
xchg
movsb
adc
pop
dec
xor
mov
loopne
adc
cmpsb
test
testb
and
aas
push
sub
popa
in
pop
or
test
mov
arpl
js
dec
bound
leave
popw
fdivs
dec
outsl
xchg
mov
daa
adc
ss
push
pop
and
cli
shrl
push
clc
stc
push
cmp
imul
jb
imul
sbb
sahf
out
dec
xlat
push
sbbb
stos
arpl
jb
lcall
movsl
movsb
ds
outsl
pushf
aad
pop
addb
lret
adc
or
add
neg
push
ret
test
fsts
les
dec
push
dec
xor
dec
sti
dec
sbb
mov
ja
or
jecxz
xchg
in
sbb
add
jnp
sbb
sbb
cs
jnp
js
out
push
clc
scas
xor
push
arpl
fstl
dec
cmpl
jp
add
ret
jl
pop
lods
lahf
xchg
mov
sub
mov
cmp
ret
mov
mov
and
mov
jg
in
cmpsb
test
jl
add
in
pop
out
jecxz
outsl
shll
push
or
xor
addb
fldt
sbb
gs
adc
aas
in
popa
in
mov
sbb
pusha
xor
icebp
sbb
mov
sbb
push
movsl
jle
mov
loope
jl
push
rcll
jno
fdivrl
mov
test
loope
test
pusha
adc
hlt
loopne
mov
in
dec
push
inc
fdivs
and
std
mov
clc
jbe
mov
test
jae
xor
adc
add
or
mov
mov
and
test
cwtl
lds
sbb
in
adc
pop
mov
add
inc
mov
aam
in
pop
jb
sbb
mov
shrl
outsl
aam
add
movl
loope
push
sub
mov
dec
inc
mov
mov
inc
enter
xchg
sbb
jb
cmc
adc
ljmp
std
divl
jmp
xor
call
ret
and
cmp
clc
ljmp
and
into
lret
loopne
xchg
cmpsb
mov
jp
push
out
mov
inc
ja
in
add
jmp
mov
and
dec
ret
bound
mov
orl
ljmp
in
movl
data16
mov
cli
lds
adc
out
xchg
decb
in
jbe
xchg
add
test
pop
sub
dec
je
inc
and
popf
int3
jne
in
out
sub
hlt
rorl
mov
jne
and
sub
mov
ret
out
inc
cmpb
call
mov
pop
mov
mov
xchg
mov
mov
or
add
dec
adc
pop
sub
push
vmovups
cmpsb
add
mov
jo
mov
push
xor
jp
insl
and
cmp
popa
rcll
test
xor
jp
pop
scas
mov
push
cld
and
addl
inc
addl
mov
xor
push
push
fcmovbe
mov
sbb
call
mov
add
push
call
int3
mov
add
outsb
cmpsl
adc
jecxz
imul
and
rcr
mov
ds
mov
rcrb
sub
into
test
inc
pop
pop
iret
mov
popa
mov
dec
es
insb
jl
mov
icebp
ret
test
mov
aaa
and
out
adc
push
inc
fisubrl
int3
jae
ja
pop
movsb
push
fidivrl
xchg
push
jmp
push
dec
cmp
mov
hlt
lcall
incl
mov
jmp
and
xor
pop
je
cmp
jecxz
dec
fidivrl
mov
cmp
pop
mov
lock
stos
ret
insb
setle
mov
mov
adc
outsl
fisttpll
bnd
jl
enter
fiadds
jg
loop
sub
add
ljmp
data16
xchg
in
cmpsb
cltd
adcl
lret
out
cmc
fcomi
sub
mov
movsb
xchg
add
shlb
cmp
call
and
stc
xor
pusha
jae
xchg
xor
dec
jl
jmp
mov
jp
fcoml
jecxz
adc
insl
add
dec
outsl
pop
inc
inc
call
sarb
outsl
push
adcb
aaa
test
sbb
push
aam
jns
mov
cwtl
cld
push
stos
data16
mov
mov
cmc
out
lcall
bound
lea
jecxz
lret
fiaddl
or
loopne
aaa
hlt
fst
pop
lret
cs
and
mov
mov
pop
mov
xor
push
push
pop
sub
cld
pop
movsb
das
or
sahf
xchg
and
and
ja
cmp
dec
jle
cltd
jbe
jecxz
pop
xchg
push
or
add
shrl
imulb
cltd
lahf
aam
dec
xor
lods
pusha
and
inc
sub
loopne
mov
call
mov
addl
xor
xor
xor
add
scas
shll
cmpsl
test
sbb
pop
xchg
pusha
add
fistps
mov
inc
scas
lds
pop
arpl
pop
aam
dec
sbbl
jno
mov
ret
shrl
into
xchg
push
jl
out
pop
push
fstps
push
push
inc
testb
fidivs
dec
push
xchg
bound
mov
mov
push
test
cmp
mov
push
push
out
pusha
mov
mov
and
das
or
xchg
sbb
fcoml
std
push
imul
jl
enter
ja
mov
test
inc
jmp
mov
mov
ja
stos
sub
addl
mov
rcr
xchg
sub
arpl
push
adcl
pop
lahf
lds
aad
outsb
call
mov
add
inc
or
loope
or
inc
cli
aad
fwait
add
add
aad
mov
jns
xchg
jl
lret
fbstp
call
or
and
mov
imul
std
dec
lcall
pop
xchg
test
dec
add
xchg
xor
pushf
and
and
stos
jmp
cmpsb
shl
mov
push
enter
lds
sarb
adc
xchg
das
jge
mov
cmp
dec
fcmovb
lahf
imul
iret
clc
sahf
fisubs
stos
jns
jp
push
dec
lcall
cs
daa
repz
mov
xchg
xlat
shlb
push
pusha
inc
lds
ja
leave
jl
sub
xchg
pop
cli
and
pop
dec
lahf
enter
cmp
subb
xor
add
rcll
imul
adc
mov
in
int
repnz
nop
hlt
mov
sub
sbb
mov
add
adc
js
lret
sub
mov
dec
xlat
stos
ret
lds
je
sub
mov
scas
addb
jno
mov
xchg
pop
sbb
jl
inc
mov
or
cwtl
stos
inc
mov
ficomps
pop
pusha
jne
sahf
xchg
fadd
out
push
or
mov
negb
pop
bound
loopne
jmp
dec
add
push
scas
cmp
cmp
sub
jo
dec
mov
inc
fldenv
cld
add
movsl
aam
insl
push
aas
dec
pusha
push
add
dec
dec
mov
inc
pop
sub
or
pop
xlat
icebp
orb
scas
test
test
outsl
or
lock
inc
mov
push
sub
mov
andl
insb
imul
shrl
nop
test
daa
outsb
std
cmp
mov
mov
dec
mov
lods
inc
jecxz
stos
mov
xlat
daa
in
sub
cmp
cmpsl
mov
mov
cmp
std
dec
push
adc
pop
push
insl
mov
or
popf
mov
aam
cmpsb
pop
loop
xchg
adc
ficoml
add
aaa
add
adc
push
sbb
inc
and
movsb
xor
push
mov
and
xchg
cmp
es
scas
ljmp
cmp
ret
push
repz
or
push
jmp
xchg
shrb
inc
orl
pushf
mov
fmul
cmp
or
dec
in
and
add
addr16
pop
pop
cmp
inc
inc
push
or
fdivp
ret
rolb
sub
loopne
in
push
fcmovbe
push
xor
popa
es
lds
jp
lcall
xchg
mov
push
adc
cli
jmp
mov
or
mov
pop
push
int3
insl
or
and
adc
repnz
adc
test
hlt
mov
and
stos
or
dec
sbb
fs
mov
mov
fsubl
add
rorb
sahf
imul
xor
mov
stos
call
jl
add
add
adc
gs
push
jp
and
push
xchg
jecxz
dec
fnstsw
lea
cmpsl
xchg
rcl
mov
mov
and
xor
popf
sbb
rclb
xor
cltd
xchg
inc
or
call
or
inc
and
mov
aaa
adc
les
sbb
jo
xor
clc
lcall
xor
push
mov
int3
sarb
push
mov
dec
dec
popf
or
pusha
shlb
sub
or
mov
push
arpl
jg
inc
shlb
jl
and
fs
or
aaa
ljmp
sub
push
mov
inc
scas
roll
stos
imul
and
jmp
jbe
inc
sti
arpl
xor
testb
mov
cmp
ljmp
test
rorb
fdivrl
and
mov
orb
or
call
rcrb
loop
hlt
jne
ret
fsubrl
push
cs
cmc
mov
mov
std
sbb
shl
js
fsubrl
lret
or
loope
fs
stos
jmp
xchg
imul
call
sbb
into
dec
add
sbb
jo
ljmp
test
inc
cmp
shl
push
outsl
hlt
jo
inc
pop
pop
das
pop
sbb
and
aaa
aam
mov
dec
pushf
sti
test
lea
enter
shrb
push
cwtl
lcall
cmp
inc
in
and
push
cmp
cli
sub
sbb
cmpb
les
hlt
pop
icebp
sbb
es
faddp
enter
ds
sbb
test
cmpsl
repz
dec
sub
filds
mov
inc
lahf
mov
push
jle
out
js
shlb
sarb
fbstp
test
movl
or
xor
adc
xor
push
aaa
xorl
or
ret
and
popa
in
cltd
je
lods
or
rcl
xchg
xor
pop
clc
mov
jecxz
mov
pop
or
inc
mov
mov
imul
ret
das
sbb
mov
jle
aaa
sub
add
adc
push
push
aad
pop
addl
cmp
or
mov
and
add
hlt
aaa
cmp
jo
jae
fimull
mov
push
xchg
xor
ret
in
out
test
jmp
rol
dec
jbe
clc
pusha
jmp
les
push
sbb
popa
mov
imul
ss
cmpsb
sbb
ljmp
adc
add
mov
shlb
mov
xchg
ds
pushf
adc
fwait
int3
jne
inc
insb
pop
dec
mov
lock
mov
pop
xchg
fiadds
mov
mov
imul
cmp
push
mov
out
adc
loope
add
inc
arpl
arpl
fsubrs
int3
shlb
and
mov
push
xchg
lds
xorb
mov
jecxz
jle
hlt
enter
sti
mov
jg
scas
push
inc
inc
out
stos
xchg
push
adc
fsubl
xor
in
in
pusha
mov
sahf
xor
adc
jmp
jne
jb
cli
sub
xchg
add
js
or
or
jle
xchg
dec
xchg
divb
stos
adc
sub
pop
adc
jae
push
and
add
icebp
pop
cmpps
xchg
push
mov
or
jmp
sbb
loop
mov
xchg
inc
xor
pop
pop
sbb
clc
hlt
and
push
test
xchg
lock
insb
sub
mov
jl
cmc
jo
clc
mov
enter
or
in
pop
lret
jo
pop
cmc
gs
call
inc
lods
lret
or
xchg
mov
test
ljmp
mov
xor
xchg
jle
push
or
into
inc
xorl
sbb
mov
pusha
xchg
jmp
mov
mov
xor
ja
push
in
jnp
data16
push
push
lahf
mov
dec
pop
sbb
lds
inc
lahf
jle
clc
jo
mov
movsb
inc
inc
stos
shrb
mov
xor
call
out
popa
aas
and
test
xor
adc
std
mov
or
lods
cs
popf
adc
lcall
add
movb
addb
add
lret
ja
stos
cmp
cld
or
decb
imul
add
or
mov
pop
cmp
jle
or
push
cwtl
cmpsb
jl
enter
xchg
adc
sarb
cli
mov
xchg
mov
imul
rcll
outsb
dec
xchg
xchg
sbb
pop
push
ss
jb
sbbl
test
js
ljmp
push
add
lods
and
mov
or
pop
notl
or
mov
ret
lret
aam
cmpsb
cs
je
nop
lcall
xlat
out
dec
add
aas
mov
mov
ja
shll
xchg
jle
jmp
or
in
cmp
insb
stc
repnz
lret
mov
inc
int
and
mov
push
sub
and
sbbb
cmp
mov
mov
and
out
adc
loop
add
sti
pushf
sbb
pop
shlb
pop
and
repnz
pop
mov
mov
stc
xbegin
sbb
es
or
insl
dec
cld
jae
loop
push
ds
inc
or
in
ljmp
fidivl
inc
mov
int
arpl
cltd
sarl
mov
jge
and
sbb
pop
xlat
lcall
out
imul
mov
xchg
roll
adc
mov
call
xchg
and
dec
dec
mov
mov
mov
insl
jne
idivb
mov
cmc
xor
pop
aam
cmp
test
xchg
mov
into
pop
in
or
and
jnp
insl
jp
je
subl
mov
mov
jo
sub
dec
fiaddl
adc
leave
rcll
sub
jg
sbb
jae
xor
test
repz
ljmp
rorb
je
dec
fldenv
lds
sub
xchg
das
push
xor
and
push
fadds
fwait
and
or
or
dec
sar
xor
sub
push
pop
loopne
jo
add
ss
repnz
lods
call
inc
aad
cwtl
and
idivl
adc
leave
je
fsubs
insb
and
ret
push
lcall
fmuls
add
fadds
sti
rcr
ss
sbb
or
inc
js
and
out
ret
and
jg
cld
jne
int3
cmp
add
scas
inc
xchg
cld
mov
push
mov
xchg
ss
ds
leave
enter
ficompl
xor
adc
gs
cmp
mov
in
mul
loop
pushf
inc
jmp
movsb
push
cmp
push
mov
ret
dec
pop
cmp
inc
addr16
xlat
insb
adc
sbb
in
push
mov
rolb
mov
mov
ret
ret
aam
shrl
mov
ljmp
and
push
mov
jo
pop
xor
push
in
mov
js
daa
adc
sahf
cld
xor
addb
sub
push
pushl
and
fs
ljmp
push
adc
adc
dec
cmc
movsb
mov
xor
pusha
and
add
popf
xor
movlps
xchg
loopne
jns
arpl
into
out
xchg
pop
icebp
mov
inc
xsaveopt
adc
lcall
or
adc
cmpsl
push
fistpl
cmp
shrb
pop
or
imulb
stos
sbb
repnz
cmp
in
push
adc
mov
mov
or
jno
rclb
ret
xchg
jae
in
lds
in
pop
jle
es
call
dec
push
mov
lock
jbe
pop
add
fimull
jecxz
add
in
mov
fdiv
or
xchg
and
cmpsl
and
mov
enter
push
inc
inc
cmp
loopne,pn
mov
stos
fcmovb
js,pt
aad
inc
adc
jns
mov
mov
jg
std
movsb
cltd
test
jp
inc
cmp
inc
outsl
ficoml
and
pop
sub
out
sbbl
cmp
pop
and
std
es
add
sbb
jbe
mov
test
xlat
outsl
mov
adc
pop
lods
pop
nop
xor
xchg
mov
pop
sub
adc
jns
addr16
inc
test
or
add
in
xchg
aam
pushf
outsl
inc
popa
daa
or
push
repnz
or
xchg
mov
mov
xchg
stos
cmp
popa
mov
je
mov
decl
inc
xchg
and
imul
and
sub
cmpsl
mov
sub
cmp
fidivrl
jae
jbe
faddp
pop
rclb
pop
cli
cli
cltd
les
jl
sti
pushl
in
mov
mov
test
or
js
insb
mov
push
xchg
push
das
push
lock
ret
or
mov
jge
sub
nop
sbb
gs
pop
mov
ljmp
jno
addl
pop
loopne
clc
aas
mov
jae
mov
pop
addr16
test
hlt
insb
andb
sub
add
or
std
ficomps
loope
sub
ljmp
inc
adc
mov
mov
mov
cmc
shl
jecxz
inc
and
inc
ss
mov
lds
popa
cld
imul
xchg
dec
push
push
push
cmp
fs
aas
push
outsb
and
or
jle
add
add
dec
dec
popa
loop
jle
cld
jbe
adcb
cld
data16
xchg
cmp
lret
movsb
cmp
clc
xchg
mov
in
das
sub
push
mov
and
mov
mov
dec
pop
push
adc
dec
mov
pop
and
pop
or
push
std
movsl
mov
icebp
sub
cmpsl
ljmp
lret
insl
movsb
push
leave
flds
ds
repz
popa
mov
jmp
or
arpl
imul
or
adc
rolb
dec
and
out
arpl
rcrl
xchg
push
cmp
ds
loopne
rcrb
dec
lret
cmp
lods
mov
lock
or
aas
lock
mov
pop
pop
popa
in
jbe
cmp
and
loop
cmpsl
aad
jb
sahf
cltd
stos
mov
mov
cmc
add
popf
ljmp
lea
test
sarb
or
int
jno
fwait
mov
dec
cmp
push
je
xor
clc
push
xchg
mov
sbb
bound
push
cld
rorb
mov
xchg
fsubrl
push
inc
fcompl
jecxz
fisttpl
dec
mov
push
mov
test
xor
rcrl
sarb
jle
scas
or
dec
test
mov
aad
dec
mov
ljmp
or
sahf
adc
push
xchg
dec
inc
add
int3
mov
std
mov
ret
cmp
or
sbb
mov
mov
sub
lea
mov
orl
dec
or
movsl
xlat
shl
jnp
or
sbb
call
sub
aas
hlt
mov
mov
xchg
mov
ss
aad
xchg
push
dec
push
push
shll
ds
fs
and
clc
adc
mov
loopne
imul
mov
insl
jbe
dec
cmp
jmp
inc
jno
dec
les
cmp
rcll
adc
dec
and
sbb
dec
rolb
pushl
lahf
ja
dec
imul
test
hlt
test
or
jmp
pop
mov
inc
test
insb
or
mov
jae
pusha
pop
movsb
or
push
mov
std
insb
sub
imul
movsb
jo
clc
push
mov
mov
jl
ret
inc
js
bound
pusha
rcrl
js
push
sub
arpl
das
clc
mov
pop
push
jb
or
and
hlt
into
test
les
rol
cmp
inc
push
mov
dec
pop
movaps
mov
or
xchg
popf
push
sub
fwait
cmp
add
xchg
stc
scas
enter
sbb
hlt
jo
cltd
inc
movsl
adc
lea
cmp
lcall
js
ja
pop
in
je
jle
or
cli
inc
xor
mov
and
xchg
and
fs
call
ja
and
push
pushf
lahf
daa
push
lods
inc
jo
or
mov
enter
js
jbe
add
mov
es
ds
or
cltd
inc
mov
pusha
cmpsl
jo
adc
add
ja
mov
dec
in
test
std
mov
pop
add
jl
push
and
xchg
adc
dec
push
dec
mov
cmpsl
test
mov
lcall
fsub
push
cli
insl
xchg
out
pop
ficoms
mov
pop
out
xchg
push
aaa
xor
push
sbb
in
and
rcll
sbb
gs
cmpsb
push
adc
lea
insl
and
cwtl
mov
lahf
out
out
cwtl
adc
add
mov
es
aam
lock
mov
mov
ljmp
cmp
mov
inc
fucom
hlt
ret
cmp
sbb
out
jl
push
test
lcall
xor
push
push
ja
lods
xor
loop
loopne
jae
pop
adc
test
daa
jmp
xchg
mov
in
push
xchg
xor
or
notb
push
pop
lock
imul
es
push
xchg
test
cmp
lcall
rorl
inc
dec
hlt
cs
sbb
in
and
popf
icebp
push
jne
jnp
iret
mov
mov
hlt
je
inc
mov
jmp
call
pop
lods
dec
lahf
push
or
fs
cmc
or
dec
pop
pop
xchg
dec
cli
adcb
mov
clc
jl
sub
sbb
mov
mov
addb
sbb
cmp
pop
xor
sub
or
ret
pop
pushl
pop
out
lock
mov
adc
jp
inc
cmp
push
adc
and
dec
fimuls
xor
fidivl
add
jg
pop
bsr
adc
in
ret
stos
iret
addr16
adcl
cli
out
add
cwtl
cmpb
lahf
dec
and
flds
jg,pt
sbb
cmc
je
loope
lret
ja
cmp
adc
enter
push
adc
or
or
jmp
mov
mov
shlb
scas
jae
jge
test
pop
lret
sub
out
insl
lahf
mov
popa
data16
mov
ljmp
nop
fs
cmp
push
cs
sub
pop
das
adc
icebp
aad
es
mov
xchg
push
cmp
cld
into
cmp
dec
add
negl
push
cmp
ficoms
adc
dec
jl
stos
imul
push
stos
and
sbb
rcll
in
inc
jns
shrl
pusha
and
push
cmpsb
stos
vandps
shlb
inc
imul
adc
dec
push
xlat
js
push
adc
mov
aam
daa
loope
mov
js
subb
add
fcoml
fwait
stos
ljmp
dec
outsl
fwait
dec
sub
xchg
push
lret
inc
loopne
loopne
mov
lds
add
shll
xorl
aad
mov
add
pop
or
adc
xchg
dec
hlt
adc
cmpsb
call
jne
or
add
std
js
or
mov
les
dec
add
shlb
out
jns
rorl
or
jne
mov
out
int
cmovbe
mov
hlt
pop
ja
mov
xor
repnz
dec
mov
into
pop
ss
xchg
jmp
jne
lods
lock
or
in
sub
insl
dec
dec
loope
loope
cltd
xchg
icebp
test
mov
jae
cmp
inc
insb
aam
inc
scas
lcall
fmull
pop
pop
adc
mov
clc
or
dec
sub
cmp
adc
push
inc
push
movsb
mov
or
xchg
push
cmp
daa
insb
stos
lods
leave
lods
mov
cltd
pmulhw
mov
clc
cli
fadds
xchg
cmp
out
mov
push
sub
pop
jmp
add
cmc
test
jo
mov
add
dec
frstor
inc
dec
xchg
xor
sub
adc
push
aas
mov
add
scas
jmp
xchg
or
add
cmp
push
das
dec
pop
out
dec
pop
mov
mov
xchg
scas
in
jecxz
or
mov
loop
hlt
and
aam
icebp
enter
shrb
cltd
sub
cmp
mov
stos
sahf
jl
popf
jo
or
push
inc
xorb
inc
pop
sub
and
cmp
pop
and
test
push
mov
out
add
inc
mov
cmpsl
jmp
and
dec
and
outsb
dec
pop
adc
push
into
lahf
je
push
ss
add
sbb
pop
imul
pop
jecxz
xchg
mov
pop
cld
cmp
jb
scas
js
shlb
pop
imul
and
xchg
sbb
cmc
adcb
pop
mov
mov
inc
mov
inc
lods
fs
ret
ss
fbld
pop
mov
inc
push
jbe
jae
mov
sub
adc
pop
push
mov
jge
das
sbb
arpl
lret
mov
mov
cli
xor
add
decb
shrl
pusha
cmp
dec
or
insb
aad
lahf
sub
loopne
or
in
push
mov
pop
das
inc
in
gs
cmpsl
int
dec
cmp
xor
cli
and
mov
sahf
jle
addr16
arpl
pusha
stos
rep
arpl
ss
cmp
int
rcl
xchg
out
rcrb
cmpsb
outsl
test
push
xchg
and
push
dec
sbb
pop
test
jmp
push
sbb
sub
sub
dec
xchg
cli
popf
sub
xchg
push
cmp
int
clc
inc
int
hlt
and
pop
xorl
jne
fwait
andb
mov
xchg
stos
push
cmpsl
jae
fstpl
or
sbb
scas
lock
dec
sub
icebp
push
add
leave
push
fnstcw
daa
test
jecxz
mov
jmp
ja
stc
push
cmpsb
push
pop
inc
sbb
leave
fistpl
inc
add
outsb
ljmp
sub
dec
xor
mov
cltd
add
inc
addr16
mov
mov
clc
data16
sbb
mov
ret
cmc
shrb
lds
mov
das
mov
add
xchg
cmp
faddl
les
adc
jo
cmp
sub
xchg
inc
test
pop
push
and
inc
lea
sbb
bound
ret
or
cli
clc
and
or
sbb
push
imul
sbb
das
idivl
data16
imul
pop
or
xor
stos
adc
sbb
popa
rclb
xchg
ds
mov
or
aad
adc
jmp
daa
or
sub
gs
flds
or
fnclex
icebp
dec
push
xor
dec
test
mov
js
cmp
fmul
stos
in
add
add
mov
mov
push
mov
rolb
inc
adc
mov
cmp
pusha
push
adc
daa
add
push
sbb
mov
addr16
js
outsl
lret
imul
mov
add
arpl
jns
dec
jg
into
stos
loope
mov
das
add
xchg
ret
sbb
mov
movsl
lea
outsb
ret
inc
in
mov
push
call
sahf
clc
fmuls
std
dec
pop
dec
rolb
mov
clc
inc
cmpsb
test
loope
inc
xchg
test
push
cwtl
dec
cmpsb
leave
popf
add
mov
add
mov
adc
dec
inc
sbb
fs
add
outsl
lahf
push
push
aad
mov
or
push
dec
loope
jge
mov
ja
imull
sbb
mov
addb
adc
push
mov
xorl
shrb
push
mul
and
cmp
lods
pop
lods
xor
and
out
push
or
pop
or
and
pop
push
add
jp
aas
test
sbb
sarb
movsl
jae
and
push
aas
sub
stos
mov
jmp
out
gs
pop
outsl
xor
xlat
inc
cmp
rcrl
lcall
clc
popf
icebp
dec
gs
scas
int
lcall
std
mov
icebp
fldenv
jle
stos
lcall
lock
xchg
sub
cmp
movsb
rol
xor
sahf
aam
xor
push
dec
inc
movb
mov
test
test
or
pop
pop
mov
pusha
imul
xor
ds
xchg
aas
stos
inc
popa
dec
jge
adc
ja
xlat
mov
sbb
xor
sar
pop
xchg
jge
hlt
jns
int3
xchg
sti
sbb
pop
cmc
cltd
mov
cmp
push
insb
sbb
lret
data16
fs
sub
sbb
xchg
shlb
cmp
aad
cld
shl
jns
jb
sbb
and
dec
ljmp
scas
dec
negl
or
and
push
gs
dec
jmp
and
popf
push
daa
inc
and
mov
sti
shl
repz
or
out
pop
shll
fistpl
ret
rcll
push
lahf
call
push
ret
movsb
dec
out
rcrb
jnp
subl
ret
ret
inc
stos
rclb
xchg
ret
dec
xchg
mov
sbb
inc
mov
call
js
outsl
xchg
lcall
mov
in
outsl
and
cltd
and
push
push
lea
aas
stc
shr
pop
test
test
stos
in
inc
jb
inc
sti
sub
sbb
mov
push
jne
push
lds
jns
push
jmp
popf
mov
jb
xchg
scas
cmpsb
sbb
pop
loope
pop
xor
add
cmpsl
or
jp
lret
or
xchg
cmpsb
mov
dec
xor
addps
sub
sbb
mov
shlb
mov
adc
push
mov
push
adc
pop
je
inc
or
mov
fldl
shl
mov
dec
jo
push
jmp
pop
popf
ljmp
jecxz
sbb
lock
stos
pushf
adc
xchg
orb
xchg
test
inc
sbb
cwtl
xor
inc
pop
xor
add
aad
pop
lahf
mov
and
add
icebp
push
fidivl
pop
pop
sbb
scas
addr16
cli
inc
add
sub
loop
mov
cmp
xor
push
test
popf
dec
shrb
stos
pushl
or
pop
mov
and
rclb
insl
repz
adc
std
or
inc
dec
pop
gs
push
repz
popf
int3
and
imul
loope
rcrb
out
mov
add
enter
add
mov
movsl
cwtl
pop
ja
lret
mov
cmp
sahf
iret
mov
out
leave
pop
sbb
rep
popa
dec
test
push
inc
adc
xchg
adc
icebp
lods
xchg
rcrl
adc
shl
lret
frstor
out
push
cmp
es
cmovne
mov
fisttpll
or
sub
adc
das
sbb
xchg
int
mov
push
adc
mov
movsl
jmp
mov
inc
push
icebp
jmp
push
or
and
cmp
push
add
ret
inc
jne
outsb
push
jmp
mov
xchg
or
mov
faddl
push
fdivs
lods
sub
js
lea
addr16
mov
test
icebp
jnp
fs
shlb
mov
and
insl
push
test
les
jg
jne
lahf
ss
test
leave
push
popa
fs
and
cmpsl
rol
subl
dec
jns
arpl
mov
mov
xor
cmp
xlat
clc
cld
jmp
data16
lahf
xchg
es
hlt
arpl
loope
popf
enter
adc
jge
inc
jp
mov
sbb
orb
stc
push
out
and
push
jg
cwtl
and
adc
add
filds
icebp
lret
daa
mov
dec
xchg
sarl
jp
mov
jl
jno
pop
cmpsb
lcall
rolb
or
cmc
inc
in
xor
add
fcmove
mov
fbstp
scas
mov
popa
es
xor
lahf
dec
aam
shr
inc
add
mov
pusha
js
push
dec
push
lock
ret
inc
bound
sarl
mov
fwait
sub
movsl
mov
lods
pusha
daa
adc
lds
in
lods
int3
inc
jo
mov
push
jge
jge
sub
ss
jmp
arpl
movsb
mov
mull
cwtl
push
pop
gs
lret
push
mov
inc
jp
mov
dec
gs
dec
add
sahf
push
daa
mov
or
push
aam
xorb
ficoms
mov
ret
out
inc
ja
mov
lea
pop
ljmp
or
jge
add
mov
outsl
adc
pop
sbbb
daa
jg
pop
popf
jno
mov
fsubr
movsl
movd
sti
aaa
jmp
pop
cld
pop
or
out
mov
daa
call
adc
je
pop
testl
mov
and
and
call
sub
dec
and
lahf
fstpt
jp
gs
jbe
shrl
push
nop
outsb
sbb
fcomps
fcmovnbe
inc
je
or
xchg
add
movsb
xor
stos
inc
and
sbb
add
pusha
shll
and
insb
test
lock
mov
xor
push
lcall
add
xor
popf
adc
enter
xorb
jmp
and
lea
sbb
shl
jl
mov
inc
push
mov
in
xor
fs
pop
repz
pop
push
sub
jnp
movsl
stos
or
mov
dec
or
popl
mov
mov
test
dec
or
dec
lret
jmp
inc
adc
shll
test
outsl
arpl
cs
inc
rorl
xor
inc
sahf
repnz
mov
xor
sub
jl
sbb
leave
inc
mov
movsb
mov
jg
sub
jae
add
push
adc
loopne
adc
jecxz
sbb
pop
aad
adc
movsl
inc
mov
aam
jno
movsl
xor
dec
add
movsb
addr16
push
push
sub
xor
hlt
mov
mov
jne
shl
imul
xchg
push
rorb
addl
cmp
mov
scas
repz
mov
dec
mov
nop
mov
insl
dec
mov
cmpsb
out
jmp
mov
cmp
sbb
das
fidivrs
call
or
xchg
or
in
insb
ret
dec
xchg
add
lret
mov
or
or
mov
sbb
fwait
lcall
pop
sub
pop
lcall
mov
movsl
inc
sub
test
mov
mov
or
inc
insl
adc
cmpsb
ja
out
mov
jno
and
add
push
xor
aaa
cld
aam
jns
add
pop
call
nop
xor
outsl
ret
cmc
sbb
lock
cmp
and
dec
dec
xchg
cmp
pop
fistpl
dec
movsl
mov
xor
aam
rclb
and
iret
sbb
f2xm1
imul
adc
sarb
sbb
adc
and
imul
push
mov
xchg
sub
push
or
or
cltd
insb
loop
sbb
adc
xorb
xchg
cltd
shlb
sub
lods
mov
inc
in
popa
mov
jnp
insb
je
jo
mov
pop
mov
lock
add
aas
out
cmp
in
push
add
stc
int
mov
add
inc
loop
enter
xchg
shrl
mov
cmp
rclb
jl
and
out
sub
xor
and
and
fisttpll
daa
sbbb
lret
sahf
inc
mov
std
mov
lods
outsl
in
jle
mov
scas
sahf
inc
push
jle,pn
inc
or
repnz
cltd
popf
aaa
mov
xchg
dec
subb
test
push
mov
add
int
xchg
sar
dec
xchg
jp
jno
nop
cld
fstl
lods
mul
and
mov
or
mov
outsb
scas
xchg
sbb
lret
sub
movsb
test
mov
pop
jl
aam
add
cmp
scas
sahf
or
pop
unpcklps
mov
in
loope
inc
mov
movsb
ret
and
fwait
pop
enter
cmp
push
mov
stc
push
inc
into
leave
dec
ret
aam
loopne
nop
cmp
pop
pop
in
js
jne
cmp
jmp
dec
pusha
je
test
daa
fisttpl
jge
lcall
scas
jno
adc
arpl
loop
mov
lods
je
sbb
sub
movsl
loopne
mov
mov
push
add
mov
enter
dec
xor
repz
lock
es
jns
popa
dec
inc
test
adcb
in
xor
pop
shlb
stos
sbb
jp
pop
cwtl
jne
jo
sbb
mov
jo
ds
xor
adc
mov
aad
cmp
mov
push
mov
xchg
jmp
pop
das
rolb
loopne
lods
mov
js
sub
insb
cmp
push
xor
mov
dec
adcl
cmp
push
movsl
cmpsb
sbb
ficoml
andl
in
notl
sbb
das
jne
outsl
fprem
cmpsb
dec
out
mov
js
mov
sub
fs
or
movsl
clc
mov
insl
mov
and
adc
inc
popf
test
jmp
cld
adc
stos
insl
pop
mov
icebp
in
adc
xor
outsl
cli
or
loop
pop
sub
and
aad
dec
rolb
pop
sub
sub
enter
sub
inc
cmp
scas
rorb
sub
mov
aam
ds
xchg
xchg
aas
loop
out
adc
rol
divb
mov
clc
cmp
xchg
cld
jae
ret
mov
jp
sbb
stos
dec
cltd
scas
lahf
notl
add
or
add
in
subl
mov
fildl
lret
sub
jmp
cli
subb
push
insl
insb
mov
mov
push
sub
mov
pop
test
jl
inc
and
shlw
addl
lret
fwait
lock
call
jp
movsb
push
scas
jg
add
cmp
sbb
xchg
mov
stc
jecxz
jecxz,pt
mov
cli
data16
dec
dec
lods
das
xor
jne
inc
popf
lret
add
pop
mov
mov
loop
cmp
ret
imul
jecxz
inc
les
daa
mov
xor
sbb
repnz
data16
xlat
push
or
xchg
movl
ss
dec
mov
or
loopne
add
jmp
or
leave
bnd
xor
mov
clc
loopne
shll
pop
adc
lcall
dec
fcomps
rol
jp
mov
mov
popf
adc
dec
pop
es
rorl
in
rorl
stos
cs
or
call
push
pop
dec
cwtl
rorl
inc
mov
mov
mov
lock
aas
jle
jge
mov
out
add
jnp
movsb
xor
or
ja
sub
aam
sbb
rcrb
pop
jns
and
dec
dec
mov
push
and
xchg
pop
push
fimuls
scas
les
hlt
adc
mov
pinsrw
stos
cmp
jle
into
lock
push
out
xchg
sub
ljmp
adc
aad
add
jle
aaa
icebp
lods
pop
add
xchg
cmp
sbb
jmp
stos
mov
mov
or
mov
jno
pop
mov
out
push
or
and
bound
jp
enter
pusha
pop
icebp
inc
scas
sbb
out
pusha
sbb
aam
and
jecxz
push
sbb
ljmp
pop
enter
xor
fistl
orb
cmpl
mov
sbb
xlat
sub
mov
addr16
mov
cmpsl
push
lock
pop
cli
gs
std
lret
dec
pop
arpl
insb
jno
movl
cmp
daa
clc
rol
push
xor
add
mov
dec
imul
cmp
dec
call
push
nop
cmp
jle
adc
mov
sub
xor
sbb
cwtl
inc
rolb
jge
jo
das
lea
and
dec
addr16
pusha
and
clc
iret
cmp
push
cs
adc
inc
movb
data16
aas
sbb
cmp
pop
orb
loopne
popf
push
cmp
out
pop
pop
push
push
add
cli
movsb
xchg
stos
nop
je
inc
jne
mov
mov
sub
divl
div
sub
arpl
out
push
lock
mov
mov
sti
jmp
push
and
nop
aas
jo
aam
movsb
sbb
mov
lea
loop
movsb
lds
push
sbb
mov
loop
mov
add
dec
fistpl
call
or
pusha
popf
hlt
stos
inc
outsl
mov
iret
adc
imull
test
scas
and
add
test
jmp
push
in
outsb
or
push
xor
leave
pop
inc
les
daa
mov
frstor
addl
mov
lcall
in
sub
test
lahf
sbb
jae
adc
inc
mov
das
dec
pop
lods
ja
mov
dec
cmp
pusha
ret
out
jae
adc
or
push
fmuls
adc
mov
sbb
mov
mov
mov
lcall
dec
icebp
or
push
ret
adc
cwtl
addr16
ret
jbe
dec
sbb
add
out
mov
adc
dec
jecxz
pop
cwtl
imul
or
sbb
push
mov
xchg
add
or
cmp
add
and
insl
in
and
mov
adcl
or
es
lret
subl
out
insl
and
in
or
dec
pop
movsb
mov
fwait
idiv
push
fwait
xchg
cmc
hlt
das
cmp
mov
sub
mov
rcl
ret
xor
inc
pop
mov
mov
shl
cli
pop
adc
mov
mov
cmp
xor
jmp
jnp
stc
push
or
or
xchg
jp
popa
jle
pop
push
sbb
les
cmp
sbb
push
icebp
push
jmp
pusha
push
icebp
test
push
mov
popf
pop
add
scas
aam
pushf
movsl
cmc
je
out
jmp
mov
stos
pop
ficoms
imul
inc
dec
push
jno
sarl
mov
outsb
out
inc
dec
jge
cmp
jmp
and
dec
dec
jno
xchg
adc
insl
imul
push
mov
movsl
out
je
gs
aad
xor
mov
dec
jo
push
jge
test
ljmp
ss
jmp
aam
cltd
fcompl
mov
adc
push
loopne
fs
mov
aad
hlt
mov
push
xor
or
sub
ret
sbb
inc
mov
pop
fnstcw
add
fnstsw
stc
or
push
out
lea
xchg
jg
adc
sub
sti
ficoms
hlt
xchg
cmp
push
cmp
jl
pop
daa
lret
ss
sti
rorb
mov
sbb
inc
pop
jg
je
out
push
frstor
inc
movsb
cmpsb
and
sbb
pop
sbb
mov
test
and
inc
or
dec
dec
sub
pop
ss
and
inc
lahf
jp
inc
popf
push
leave
les
imul
or
add
orl
inc
sub
mov
ljmp
lock
cmc
and
cmp
mov
jmp
sahf
ret
pop
aad
ljmp
cmp
jns
inc
xor
dec
pop
in
test
das
mov
filds
test
arpl
adc
inc
cmp
leave
or
cmp
mov
inc
int
dec
or
mov
jnp
add
push
or
adc
ret
push
lea
push
add
popa
mov
outsl
cmp
in
aad
inc
test
ret
sbb
adc
xchg
push
mov
lret
rorl
push
mov
sbb
push
cmp
mov
push
fs
rolb
cli
push
adc
and
movl
jp
cmp
push
out
mov
leave
xlat
xchg
enter
mov
or
mov
add
adc
and
cld
push
fstp
jecxz
mov
out
inc
movsl
mov
aad
push
inc
in
xchg
mov
cmc
push
push
fdivr
lock
inc
repnz
mov
mov
sub
cmp
mov
nop
or
jg
test
jge
dec
ss
dec
shr
xchg
xor
loope
jo
sub
je
add
icebp
sub
rol
lds
lcall
mov
mov
bts
mov
or
mov
iret
xchg
stos
cmp
setl
pop
xlat
lock
push
mov
aaa
sub
xor
ret
inc
cmp
std
push
inc
cmp
mov
and
lcall
data16
outsl
cmp
mov
inc
das
sbb
pop
cltd
lods
ror
push
add
rcrl
mov
stos
inc
xorb
xchg
sub
popf
push
mov
xor
mov
popa
aas
cmpsb
sbb
loop
mov
test
test
imul
or
push
outsl
es
mov
mov
xchg
bound
push
push
frstor
imul
xor
pop
jne
lods
xor
add
sahf
xchg
dec
add
push
push
sub
mov
or
stos
pushf
into
mov
xor
jmp
or
sbb
sbb
and
mov
stc
test
ds
stos
sbb
shlb
mov
push
push
shlb
out
xlat
mov
push
divl
enter
xor
dec
cld
adc
aam
stos
and
push
lea
mov
jge
outsb
xor
stc
mov
int3
icebp
fisubl
repnz
sub
or
add
mov
pushf
ss
cmp
out
movsl
pop
or
adc
push
lds
outsb
and
shll
fldenv
inc
lret
mov
rclb
mov
dec
add
stos
fwait
xor
andl
in
pop
xchg
rcr
ss
fistpl
adc
sbb
push
in
sub
and
adc
ret
or
clc
sbb
push
mov
call
mov
lods
mov
rcr
int3
jecxz
cmpsl
repnz
daa
movsb
sahf
rcrb
in
xchg
cmp
iret
sbb
sbb
sbb
fldenv
add
mov
push
ret
cmp
or
xchg
add
loope
cld
test
pop
push
inc
xor
ds
std
fsubrl
sbb
cmp
icebp
sub
ljmp
stos
sbb
mov
add
jno
enter
stc
push
in
roll
push
sub
adc
mov
xor
add
sahf
dec
push
dec
adc
cwtl
pusha
mov
stos
add
sbb
mov
clc
rorb
inc
push
mov
push
daa
add
adc
sub
dec
fcoml
xchg
add
mov
mull
insb
in
cli
pop
shrb
les
jae
sbb
or
call
mov
mov
pop
push
add
pop
pop
std
jne
pop
add
pop
gs
sbb
cmp
jo
bound
jmp
pop
fisubs
sbb
cwtl
lcall
push
std
add
fisubs
xlat
daa
xlat
out
leave
mov
and
push
shrb
mov
psadbw
push
and
sahf
inc
verw
int
jbe
xchg
testb
rclb
cmpsb
les
rorl
pusha
xchg
es
mov
loop
xchg
or
dec
in
in
es
ss
xchg
mov
mov
lcall
fdivrs
jmp
cmp
push
sbb
sub
mov
outsl
sbb
adc
lcall
jp
and
sbb
xchg
push
xchg
mov
jbe
mov
add
xchg
push
jmp
push
fcoms
mulb
push
incb
pop
aam
xor
inc
enter
pushf
pop
aas
fstl
lcall
adc
bound
xorl
fsubrl
lahf
cmc
pop
cmpsl
stos
outsl
pop
push
xchg
push
jnp
push
addl
lds
je
rcl
or
mov
xlat
inc
loop
xchg
ret
loope
stos
sbb
cmp
clc
sub
aas
jne
lods
jno
mov
cmp
cmp
enter
mov
add
and
orl
pop
pop
cli
mov
mov
test
test
stos
call
cld
mov
jp
outsb
sbb
xlat
inc
aam
adc
xchg
roll
sbb
jge
cli
ss
mov
jle
mov
arpl
sub
sbb
stos
bound
jno
pushw
sbb
pop
loop
stos
dec
jo
mov
out
rcl
push
mov
cld
out
jb
xor
outsb
test
ss
lds
or
icebp
dec
loope
dec
jae
lcall
mov
fcomi
pop
xchg
nop
andl
adc
callw
into
lock
sahf
adc
cmp
and
pop
testb
sbb
push
arpl
push
sub
push
cmpsl
dec
mov
xchg
icebp
jecxz
jbe
ds
lea
mov
push
add
mov
and
add
cmpsl
push
outsb
mov
mov
call
push
xchg
sub
mov
popl
pop
jge
dec
mov
lds
add
lods
notl
loope
jae
int3
inc
push
push
mov
mov
das
and
adc
sbb
leave
xor
pop
fidivl
sbbl
pop
dec
pop
cld
lods
dec
and
pushl
dec
nop
clc
inc
or
ret
xchg
pop
add
cmp
and
es
inc
pop
frstor
pop
push
jmp
outsb
xchg
ficoms
or
aas
pop
nop
or
aad
inc
inc
push
ss
adc
cmp
mov
or
negb
jecxz
cwtl
sbb
jl
sbb
mov
jle
xchg
mov
in
inc
pop
cld
fisttpl
dec
sbb
repz
and
jmp
ficompl
xor
cmp
pop
xchg
mov
cmp
xor
xchg
aas
cmovs
in
xor
xlat
inc
inc
adc
imulb
call
mov
mov
les
movsl
add
sbb
cld
mov
inc
jmp
scas
mov
and
test
lock
cmc
sub
push
sub
ret
push
lcall
xor
xchg
sub
lcall
sbb
sbb
dec
call
jle
fadd
popf
clc
enter
mov
mov
loop
mov
mov
fdivl
std
aas
push
popl
scas
push
xor
lret
xor
loopne
inc
filds
xchg
jecxz
cmp
mov
lret
inc
sahf
cmp
adc
imul
insl
and
cmpsl
ret
xchg
scas
cmp
mov
in
inc
faddp
aam
push
inc
mull
sub
dec
push
adc
sbb
mov
test
aaa
inc
sbbb
loopne
push
adc
call
scas
dec
xor
cltd
sbb
int
dec
cld
add
imul
mov
jns
mov
adc
dec
fsubrs
and
outsb
mov
lods
std
mov
inc
dec
int
jl
push
jbe
scas
ljmp
mov
testb
test
ljmp
add
inc
xchg
sub
sbb
mov
test
dec
cmp
int3
fs
and
aaa
enter
inc
pop
icebp
dec
je
xchg
push
sub
dec
ds
mov
pop
sbb
in
push
mov
cmp
pop
loope
pop
dec
adc
adcl
inc
inc
mull
jp
sub
lods
xor
lea
lcall
ja
mov
and
inc
pop
xor
jno
push
cmp
dec
xchg
xchg
inc
sbb
test
enter
push
movsl
popf
add
es
jl
call
pusha
cmc
inc
je
call
push
cmp
clc
push
mov
in
and
repnz
rcl
lock
sub
pop
jbe
jg
and
aas
ficoml
stos
test
lret
adcb
mov
jecxz
dec
or
ret
int3
pop
mov
testl
xchg
jo
mov
stos
pop
lret
sub
cli
mov
popa
cmc
and
aad
xchg
jnp
dec
test
jecxz
xchg
inc
nop
cmp
add
sbb
and
std
push
cmpsl
lret
lds
mov
dec
sub
sub
jle
and
rorl
mov
arpl
dec
fnstsw
pushf
jmp
mov
cmpsl
xchg
add
scas
jg
push
jle
loope
cmp
test
cmc
mov
js
iret
jp
jl
lahf
sub
mov
or
xchg
pop
aas
xchg
jb
jp
aas
icebp
sarb
xor
lds
mov
xchg
mov
mov
jl
test
mov
ss
aam
cmp
ds
cmp
dec
pop
icebp
je
loop
insb
nop
addb
cmp
dec
mov
add
sbb
in
gs
or
stos
push
mov
je
xchg
out
aas
xchg
dec
cli
sub
fwait
push
jp
pop
inc
idivl
out
mov
loopne
cmp
clc
pop
xchg
sbb
push
fs
dec
iret
sub
pop
pop
imul
fmuls
cmp
xchg
ljmp
add
push
pop
mov
sahf
adc
add
cwtl
inc
data16
rcll
jno
add
mov
mov
cmp
subl
push
fbld
cmpsl
xor
cld
xor
dec
add
faddl
gs
cli
jnp
popf
and
inc
cwtl
loopne
pushf
inc
js
imul
sub
lret
mov
je
stc
out
bound
lds
cmpb
cmp
xlat
xchg
int
xlat
cmp
shll
pusha
xchg
inc
jecxz
data16
pop
lahf
mov
rcll
aas
shrl
fiaddl
pushl
add
ret
dec
dec
adcl
loop
and
adc
add
fdivl
jl
pop
pop
and
mov
jb
std
mov
subl
sbb
dec
aad
sbb
adc
loop
adc
loope
inc
push
mov
mov
xor
push
fnclex
cld
cwtl
xor
leave
mov
rclb
cmp
push
das
and
push
sbb
repnz
adcl
inc
frstor
mov
loope
dec
aam
cmp
xchg
sahf
ret
nop
dec
mov
mov
push
xchg
cmp
add
pop
pop
push
jne
hlt
cmpsb
jl
daa
pop
xor
mov
mov
sbb
xchg
icebp
cmc
xor
mov
jb
es
aad
sub
into
dec
add
popa
xchg
jo
daa
xor
and
add
xor
lahf
iret
jp
std
ss
outsl
xchg
xchg
pop
inc
out
jmp
pop
ret
sbb
shlb
fimuls
mov
mov
loopne
shlb
sub
and
in
fwait
loopne
or
jae
ret
adc
add
jbe
adc
push
int3
loope
test
add
jbe
adc
pushf
push
add
cmp
mov
mov
mov
scas
mov
sub
mov
jp
pop
cmp
xor
mov
dec
pop
rcll
popf
std
ja
adc
adc
inc
or
mov
imul
push
cmc
mov
es
inc
cmpsl
xchg
cmc
fs
stos
lods
mov
lock
add
ret
lock
xchg
cs
icebp
sbb
pop
adc
jmp
mov
jg
out
add
cmpl
in
cmpsl
mov
pop
jo
mov
jl
dec
loop
jg
or
xor
and
sub
inc
xchg
jl
movsl
mov
data16
adcl
pop
mulb
in
stos
xchg
push
add
test
sub
or
test
pop
mov
push
loope
movsb
jmp
popf
dec
test
movsb
cs
clc
adc
dec
push
test
leave
loop
xchg
rolb
out
inc
mov
push
outsb
lods
stos
pop
pop
das
or
clc
hlt
sbb
lret
mov
mov
sbbb
test
jns
mov
test
pop
ja
imulb
sahf
repnz
xor
jl
xor
sbb
insb
xor
push
sub
add
outsl
lea
sub
push
jge
push
cld
test
in
pop
mov
fdivl
and
loopne
call
inc
cmp
add
js
inc
adc
mov
sbb
lret
add
test
ret
loop
loopne
je
dec
push
push
push
mov
inc
jns
mov
fcomip
outsl
cli
sub
and
sub
sub
lea
xorb
adc
inc
cld
sbb
das
add
and
daa
pop
mov
movsb
es
loop
insl
pop
add
pop
cwtl
pop
stos
xchg
jp
cld
lods
mov
sub
mov
cmp
sub
vpcmpgtw
fidivrs
lret
test
mov
iret
mov
in
sub
cmp
shr
ja
cli
jo
lea
es
mov
nop
inc
pop
lret
and
decb
adc
ret
loopne
push
dec
inc
mov
sbb
add
sub
and
test
ds
pushf
mov
xor
inc
call
sbb
add
testl
add
pop
adc
and
cmp
loopne
or
push
dec
sbb
fildll
adc
sub
mov
out
into
pop
mov
les
xchg
xchg
int3
cli
sbb
popf
out
mov
out
mov
mov
sbb
cmp
jl
loope
or
mov
lahf
sub
mov
pop
push
ja
push
push
ljmp
push
and
cltd
cli
push
loope
jo
in
jp
stc
nop
push
xor
dec
push
push
imul
test
push
jle
dec
push
daa
pop
pop
ret
dec
mov
jmp
out
movsb
sahf
inc
push
sbbb
test
jmp
dec
inc
adc
pop
sub
add
insl
mov
aam
fisubrl
dec
adc
aad
pop
pop
lock
inc
dec
jp
xor
mov
nop
cwtl
lret
insb
test
icebp
fisubs
inc
test
mov
imul
xchg
idivl
cmp
mov
fisubs
shll
mov
icebp
add
jbe
in
ss
xor
addr16
repnz
mov
movsl
jge
icebp
pop
out
inc
out
sub
test
out
sub
sar
adcb
fiadds
dec
std
add
xor
les
cmpsl
sbb
jb
inc
and
and
imul
ss
inc
in
lds
lock
not
movsb
adc
jmp
mov
hlt
enter
pop
rcrb
push
pop
pop
push
test
shl
into
loop
call
shrd
adc
mov
fcmovbe
test
jae
subb
dec
xchg
ss
adc
sahf
and
mov
or
iret
xchg
rsm
push
push
je
push
cmc
test
inc
dec
sahf
inc
jb
mov
mov
orb
jp
cmc
sub
punpckhbw
cwtl
loop
mov
or
sub
add
and
mov
jno
mov
test
or
adc
cli
push
cmp
xor
and
neg
push
pop
outsb
sub
jmp
insl
jo
decb
rcl
adc
push
inc
test
sbb
int
cmpsl
rcrb
out
or
xor
out
ret
cld
fbstp
cli
pop
sub
mov
mov
pop
mov
add
jne
dec
outsl
dec
mov
push
inc
sbb
mov
mov
ret
push
pushf
cwtl
or
or
sahf
out
xchg
loope,pt
mov
icebp
mov
adc
adc
inc
mov
fs
stos
mov
sub
mulb
fs
pop
call
cmpb
sub
divl
clc
rolb
jno
push
sub
rorl
repz
hlt
jecxz
inc
mov
stos
addr16
dec
outsl
add
clc
in
mov
mov
mov
rolb
roll
xchg
cli
and
fadd
scas
or
pusha
enter
shll
dec
ds
into
in
add
ljmp
clc
pop
shlb
push
cmp
mov
imul
test
sbb
xchg
inc
add
sub
jo
sub
mov
adc
push
mov
push
ret
sbb
daa
xchg
cmp
movsb
in
nop
inc
std
inc
lds
popf
sahf
in
aad
or
sub
mov
dec
adc
loop
fistpll
inc
cwtl
dec
mov
mov
push
inc
or
fstl
ret
arpl
sbb
pop
aaa
test
inc
ds
pop
cmc
add
adc
pop
sbb
mov
xchg
movsl
lret
push
mov
ljmp
test
ret
push
mov
fiaddl
and
ret
loopne
inc
dec
push
pop
cmp
stc
or
test
cli
sub
out
push
jl
inc
pop
add
fistl
jb
xchg
xor
add
push
scas
insl
xor
sbb
sbb
adc
rcl
xchg
ret
push
push
cli
mov
jo
lahf
inc
lods
cmpsb
jp
scas
mov
pushf
fstp
std
lock
in
xor
mov
dec
int
lret
push
scas
sub
inc
je
mov
lock
sub
xchg
decl
ret
mov
sub
pop
cmpsb
xchg
sub
add
sub
mov
add
dec
xchg
scas
inc
outsb
into
xchg
pop
push
jns
int3
stos
mov
aaa
pusha
mov
push
pop
popf
dec
or
push
sbb
inc
pop
and
push
pop
jne
ds
out
js
xlat
jns
data16
pop
cld
xor
data16
xor
push
and
sbb
mov
adc
dec
sub
data16
hlt
pop
test
or
or
fxch
jmp
and
jge
mov
ljmp
mov
imul
movb
shlb
repnz
decb
mov
push
and
pop
cmc
clc
pusha
mov
xor
push
push
dec
pop
lret
aam
mov
out
mov
push
mov
out
mov
push
pop
dec
dec
in
nop
xchg
loope
fimull
or
sub
jns
adc
jno
mov
movsb
andl
pop
clc
movl
mov
mov
jp
xchg
out
sub
xor
cmp
add
lea
cltd
and
adc
rcr
imulb
inc
enter
and
mov
sbb
jp
adc
sbb
mov
es
filds
gs
leave
or
std
adc
jo
repnz
dec
add
and
adc
inc
aas
fmul
lret
stos
scas
popf
dec
mov
mov
mov
cmp
lahf
les
pop
xor
push
test
ljmp
adc
pop
popf
jle
rclb
mov
add
test
or
push
scas
xchg
ds
pop
dec
dec
pop
pop
ret
stos
sub
cmpsl
test
mov
jno
push
ljmp
adc
mov
dec
outsl
fs
mov
mov
mov
clc
lock
cs
push
jecxz
xchg
out
outsb
test
push
push
push
sub
sbb
iret
cmp
adc
bound
sbbb
aad
call
out
jmp
mov
add
pusha
test
sbb
sbb
sbb
lods
idivb
sub
mov
lret
fidivrs
and
and
fnstsw
test
sarl
sahf
dec
add
sub
add
aaa
insl
imul
out
push
jp
ret
push
inc
mov
jns
jp
mov
add
ret
sarl
movsb
insl
sbb
test
xor
loope
aas
cli
inc
xchg
xchg
pop
ljmp
mov
mov
or
mov
ds
mov
inc
clc
push
add
into
sub
sbb
xchg
clc
cld
add
dec
mov
sub
pop
out
push
in
inc
imul
fsts
push
mov
sarb
inc
push
sub
jg
ret
scas
push
imul
repnz
pop
ret
push
jbe
adc
js
push
adc
jae
loop
icebp
sub
inc
mov
ds
jbe
clc
and
lock
push
hlt
sub
mov
lret
xor
adc
mov
in
dec
inc
sbb
add
mov
add
dec
outsl
jo
and
cs
mov
dec
cmp
sbb
dec
inc
cld
out
adc
ficoms
movsl
rorl
push
cwtl
js
push
es
dec
mov
or
in
aam
ret
push
lahf
jle
dec
and
rolb
ficoms
push
dec
pushf
cmc
leave
cmp
icebp
add
sub
add
sarb
jb
js
or
lcall
fsqrt
cmp
rorb
or
loop
mov
mov
enter
mov
shll
dec
daa
xor
xchg
test
test
pop
pop
jg
cltd
adc
pshufw
cli
ror
mov
mov
je
sbb
jmp
fdivr
mov
dec
sbb
push
call
jle
sarb
or
mov
mov
jmp
jp
dec
test
je
std
in
addr16
mov
dec
pop
cmpsb
push
mov
lea
pop
push
jbe
insb
jecxz
dec
inc
movsb
push
cmpsb
jae
ss
add
sub
and
ds
xchg
shl
loop
inc
xchg
mov
js,pn
and
lahf
pop
mov
fs
mov
push
lcall
adc
xor
xor
repz
pop
pop
mov
out
xchg
mov
test
fisubs
insb
xlat
mov
sub
aam
jge
jp
mov
dec
sbb
gs
mov
push
sub
pop
inc
xchg
xchg
rorb
xchg
inc
adc
or
and
sbb
add
cmp
mov
insl
shrl
push
xchg
or
sar
or
jg
and
out
and
inc
push
and
mov
sbb
orb
test
xlat
iret
jo
inc
xchg
pop
ss
enter
lock
xchg
or
push
clc
fwait
add
sub
and
int
push
push
jb
mov
jno
inc
sbb
scas
cmpsb
mov
in
dec
loop
aad
xchg
scas
sbb
int3
push
push
cld
mov
jne
mov
test
mov
or
scas
clc
insb
mov
outsl
add
xlat
stos
mov
add
push
std
sbb
dec
xor
mov
add
mov
jecxz
rcll
mov
pop
add
inc
adc
mov
jno
and
dec
inc
jbe
andb
repz
mov
push
in
xchg
mov
js
movsl
fistps
mov
repz
rorb
jle
int
dec
jnp
mov
in
cmp
sub
hlt
jp
scas
xchg
outsb
je
pop
mov
push
xorb
xor
mov
or
mov
lret
out
adc
mov
mov
loop
cmp
out
dec
bound
sbb
leave
mov
fcoml
stos
lret
xchg
lahf
mov
int
les
lahf
mov
call
mov
sbb
fwait
mov
loop
pushf
loop
cmpb
arpl
jle
mov
jno
sub
xchg
push
arpl
sub
mov
rol
add
adc
mov
ja
orb
movsb
lock
loope
rolb
pop
lods
cmpb
das
mov
cs
xor
and
repz
push
push
pop
sub
mov
push
mov
or
or
pop
ficomps
or
sub
into
out
add
sub
pushf
push
dec
push
pop
jle
sub
inc
or
jecxz
adc
adc
out
add
fiaddl
or
nop
ficoms
xchg
popf
xchg
cmp
ss
rcr
bound
and
mov
push
andb
pop
cmp
cltd
mov
jmp
das
pop
xchg
fadd
mov
adc
ret
pop
mov
pop
adc
add
sub
jl
mov
kmovw
dec
pop
pop
cli
pop
clc
nop
js
xchg
sbb
out
outsb
adcb
sbb
cwtl
ja
loopne
aaa
cli
mov
mov
mov
xchg
cmpsb
data16
iret
aad
imul
cmp
fsubrs
inc
ret
lahf
outsl
mov
rcll
fwait
enter
jle
lods
mov
mov
inc
adc
sbb
or
pop
jecxz
fwait
or
call
xchg
out
inc
or
gs
or
cld
stos
add
and
sub
nop
arpl
inc
test
cmp
outsb
cmpsl
jl
hlt
adc
add
sub
jl
dec
loope
or
push
test
ljmp
xor
inc
repz
fisubrl
ret
push
inc
pusha
in
in
push
adc
dec
test
scas
loope
jno
inc
lods
gs
and
jle
jp
repz
cmp
or
add
scas
add
jo
mov
sbb
and
enter
or
xchg
mov
fisubs
cmp
xchg
adc
rcrb
adc
in
sbb
out
cmp
dec
jp
add
pop
pop
mov
add
pop
pushf
sub
sub
dec
in
dec
pop
and
in
sbb
mov
cmp
add
mov
fsubrs
cmp
adc
sub
and
pop
sub
push
js
iret
pop
addr16
fs
jne
jne
lcall
or
pop
ret
xor
mov
aas
jb
das
ss
stos
adc
hlt
push
arpl
jo
push
mov
add
mov
push
ja
fidivrl
sub
or
idivb
fs
sbb
mov
popf
sub
and
movsl
adc
dec
sbb
sbbb
out
mov
dec
xor
mov
mov
fs
lock
rcrb
scas
push
shll
es
add
cli
test
in
adc
shrb
pop
sub
sub
loopne
xchg
out
test
int
insb
adc
daa
pushf
test
pop
xor
ja
dec
push
pop
clc
pop
enter
test
mov
dec
add
call
mov
inc
pop
mov
add
xchg
ret
lea
xor
testb
adc
push
rorl
and
pop
xlat
pop
stos
or
iret
mov
loope
sbb
inc
sbb
lahf
shll
or
addr16
addb
mov
outsb
cld
out
cmpsb
cmp
dec
mov
adc
push
cmp
mov
imul
insb
nop
mov
sub
push
sbb
xor
pop
je
sbb
int
push
jae
out
xor
fisttps
mov
in
mov
jmp
outsl
loopne
icebp
loope
xchg
repnz
ret
or
test
pop
orb
and
pop
mov
inc
inc
cmp
add
push
test
outsl
aas
lahf
or
fisubl
loopne
orl
insb
fwait
test
stos
inc
test
pop
loopne
cmova
sub
rorl
xchg
and
adc
leave
inc
add
in
mov
mov
mov
inc
sub
js
lahf
lahf
cmp
pop
js
adc
push
loop
arpl
andl
add
jae
cmp
lock
push
inc
aaa
pop
or
dec
inc
sti
or
in
sub
adc
in
jl
pusha
call
add
enter
rcrb
jmp
iret
xorb
jmp
push
adc
adc
std
pop
jne
mov
sub
cs
sbb
and
jne
jo
out
xabort
inc
cvtdq2ps
push
sub
jle
fimull
movsb
xchg
les
int3
xchg
pop
jnp
xchg
jo,pn
bound
fcmovnbe
ja
or
ret
mov
xchg
outsl
clc
mov
jae
les
test
xchg
add
jo
or
and
xchg
push
rol
shr
pusha
pop
adc
stos
ljmp
lret
jle
pop
rcrb
sbb
enter
and
fwait
and
add
repz
add
cmp
filds
into
les
fwait
out
xor
xor
iret
push
or
xchg
or
sub
mov
or
movsb
adc
pop
mov
jne
sbb
out
lds
push
push
sub
jg
mov
fmull
mov
test
mov
mov
sbb
xor
and
cltd
pusha
out
les
imul
fs
xchg
add
inc
mov
pop
ret
pushf
jg
push
mov
loope
fisubrl
jle
dec
mov
and
fisubrs
sbb
xor
mov
lods
inc
push
rorb
sub
call
lods
xchg
sbb
pop
ficoml
push
int3
adc
testl
iret
cmp
pop
sahf
movsl
lds
pop
sub
and
je
add
mov
test
mov
sub
or
fnstcw
hlt
js,pt
xor
jl
popa
push
sahf
lods
sub
add
jmp
xor
data16
or
and
xor
push
pop
rorl
add
pop
icebp
cmp
repnz
xchg
mov
or
loop
xchg
jne
hlt
jns
dec
push
sub
js
add
shr
je
push
mov
add
dec
push
cmpsb
mov
mov
push
xor
pop
mov
cmp
fiadds
mov
lcall
lret
pop
mov
xor
fmuls
call
cli
insl
outsl
push
test
aad
pop
cwtl
repnz
imul
or
nop
jo
cmc
imul
and
or
add
xor
andb
andl
adc
ja
into
inc
mov
imul
stos
call
push
incb
mov
push
mov
sbb
loop
sbb
push
inc
out
push
stos
dec
dec
popa
data16
lock
test
test
mov
and
andl
pop
jge
call
mov
xchg
jecxz
cmp
inc
cmp
jbe
mov
jge
xchg
pop
js
ds
stos
inc
cld
xchg
pop
jl
enter
nop
pop
hlt
sbb
addl
shlb
addr16
push
test
test
cmp
scas
xor
je
and
adc
icebp
stc
sbb
or
pop
mov
mov
fmul
inc
das
push
adc
mov
fiadds
dec
pop
stos
xchg
lret
inc
push
and
and
rorb
jae
cmpl
xchg
mov
push
mov
jno
xchg
jne
mov
je
lods
dec
mov
leave
int
xlat
mov
push
scas
sbb
add
push
lret
push
jb
push
lret
xor
pop
andl
or
dec
push
push
pop
icebp
into
test
adc
push
je
adc
sub
jmp
mov
int3
sbb
je
shl
xorb
movsb
bound
out
mov
adc
sbb
ficomps
ds
arpl
sub
lcall
xchg
cmpsl
push
popf
and
inc
dec
adc
or
push
sbb
or
test
cwtl
mov
scas
popa
loope
mov
loope
xchg
add
mov
jnp
or
push
mov
inc
cli
inc
add
mov
inc
xchg
mov
push
jnp
sub
je
jl
loope
pop
decl
push
add
cmpsb
sub
loopne
rorl
popf
push
mov
push
into
int3
aam
mov
mov
adc
mov
cwtl
mov
sub
xor
fstpl
insb
test
mov
or
inc
int3
cmp
mov
push
mov
mov
push
jg
xchg
sahf
cmp
in
xor
outsl
aam
es
adc
hlt
cs
js
push
sub
or
cmovle
jmp
lock
mov
sbb
pop
loop,pn
loopne
sti
xor
push
jnp
in
test
mov
rol
push
fisubrl
mov
mov
cld
dec
sbb
call
test
add
cwtl
mov
inc
or
cli
mov
aad
cmp
lea
adc
xor
add
or
add
push
jns
dec
ret
subl
fisubrs
jb
icebp
orb
push
inc
std
inc
mov
sub
in
or
ss
mov
sub
pop
or
into
cmp
mov
mov
ds
dec
bound
sub
loop
lods
iret
ljmp
push
or
inc
mov
ds
and
dec
aad
push
or
inc
lods
ja
ja
lods
hlt
xor
jg
jecxz
mov
add
sub
call
jae
sub
mov
mov
add
rcl
shl
jno
mov
movsl
xor
or
pop
cmpsb
les
sub
stc
adc
mov
jmp
mov
add
addb
cmp
in
aad
add
cmp
cmp
inc
pop
adc
xor
sbb
out
jnp
jecxz
lods
sub
hlt
and
mov
rolb
push
xchg
popa
pushf
push
xchg
mov
subb
sub
xor
jb
cmp
andl
pop
and
sub
popa
xchg
cmp
pop
add
mov
sub
add
popa
nop
stos
or
pop
scas
add
sub
in
in
loopne
add
mov
ja
ret
jae
ret
ljmp
out
mov
adc
pop
mov
call
loop
movsl
xor
push
jo
lret
adc
shlb
mov
jecxz
lock
push
mov
push
xor
daa
loope
clc
or
call
in
add
mov
les
cld
outsb
dec
and
mov
andl
data16
loope
shlb
xchg
or
rol
lea
pusha
ror
mov
int
xor
fxch
insb
std
jbe
aas
mov
dec
hlt
aam
addb
aaa
int
or
inc
imul
ljmp
adc
scas
xor
ss
outsl
rcll
cmp
into
xor
or
push
push
adc
cmpsl
mov
fisubrl
mov
js
mov
int3
adc
jle
out
lea
push
call
mov
add
js
mov
scas
adc
and
cwtl
arpl
out
pop
stos
lea
ret
inc
stos
xor
push
nop
push
jecxz
incb
mov
les
shlb
cli
pop
cmp
lods
and
cs
loop
dec
movsb
lods
fmull
cmp
xor
jbe
add
jle
aam
mov
scas
add
and
add
out
mov
sbb
pop
jmp
sub
add
add
push
xchg
adc
fisttps
lods
or
sbb
in
jbe
xchg
xchg
cwtl
mov
mov
pop
add
jb
mov
xor
cmc
jno
adcb
mov
add
sbb
lods
xchg
hlt
mov
inc
xor
pop
out
xchg
adc
xchg
loopne
or
cmpl
mov
rolb
imul
add
or
enter
add
mov
adc
dec
sbb
sub
inc
sub
pop
mov
inc
std
ficoms
hlt
fsubrs
iret
out
stos
scas
dec
xchg
pop
inc
rolb
and
push
add
jecxz
push
pop
fs
adc
jmp
pop
inc
sub
xchg
sbb
mov
push
xor
and
test
add
lds
jmp
lcall
outsb
pop
movsb
push
mov
dec
inc
pop
lahf
rcrl
fcoms
sub
xor
imul
mov
or
lcall
adc
ds
push
es
in
push
loop
inc
clc
out
dec
rorl
lea
imul
or
in
sub
mov
int3
pop
xor
test
and
iret
out
cmp
scas
loop
or
push
int3
inc
cld
jb
push
cmp
mov
dec
fstl
add
jle
roll
aam
loopne
or
scas
pop
push
cmp
mov
inc
repz
das
dec
outsl
incl
shl
push
clc
mov
mov
orb
sub
or
in
adc
js,pn
test
cmp
or
inc
into
adc
lds
mov
fldcw
imul
xor
hlt
xchg
fiadds
sbb
shlb
pop
cmc
movsb
shlb
out
iret
jbe
dec
push
jle
sub
cli
push
push
adc
jmp
outsb
inc
mov
or
cs
sub
pop
and
adcl
add
push
jp
aaa
push
ds
mov
adc
jo
loop
shl
shll
leave
cli
lea
mov
inc
out
push
outsb
movb
icebp
xor
mov
mov
fiaddl
icebp
push
adc
push
sub
mov
imulb
mov
int3
cmpb
cli
lahf
xchg
adc
ret
jbe
shlb
test
ja
out
dec
cmp
ja
je
mov
notb
mov
std
enter
mov
ja
pop
jle
adc
jle
mov
lock
cld
push
enter
inc
fisubs
gs
push
ljmp
sbb
ret
or
movl
mov
lea
sarl
orb
fisubrs
vmread
xchg
repnz
pushl
mov
inc
xchg
movb
addl
mov
stc
lahf
cmpsl
rorb
or
cmp
inc
iret
push
dec
in
adc
xor
dec
test
lock
inc
iret
or
cmp
adc
pop
dec
ljmp
mov
cmpsb
xchg
add
and
ds
mov
sub
push
outsb
fadd
xor
xor
and
pusha
or
or
or
sub
ss
ret
or
adc
sar
lock
enter
jne
and
and
mov
test
sbb
aam
mov
push
and
fnstenv
pop
jb
xchg
inc
sub
xlat
mov
pop
push
sbb
xorb
mov
testl
push
adc
imul
sbb
repnz
popa
iret
lock
mov
fxtract
mov
test
dec
xchg
sub
outsb
fists
clc
cwtl
icebp
loop
nop
fsubrs
mov
adc
into
pop
mov
pop
xlat
mov
cmpsl
scas
mov
out
cld
cs
stos
and
inc
dec
cmpb
scas
test
mov
xchg
test
mov
mov
bound
inc
and
out
pop
mov
mov
sbb
xchg
inc
xchg
jecxz
aas
xor
inc
mov
xchg
xorb
cwtl
pop
test
int3
adc
sbb
push
pop
subb
cmp
in
icebp
mov
add
loop
jb
adc
rcll
fwait
pushf
xchg
in
stos
adc
cmpxchg
rolb
clc
ret
push
nop
and
inc
jl
loop
aas
test
adc
cmp
ud0
add
movsb
int
movsb
int3
aam
xor
test
cld
in
jmp
aaa
jge
test
sbb
adc
dec
jmp
lea
cli
pusha
dec
add
mov
fdivrl
push
inc
mull
rolb
and
add
jecxz
mov
loop
hlt
je
push
loop
cmp
out
jp
test
xchg
push
mov
js
insl
shrb
cld
fwait
inc
xchg
dec
lahf
sub
inc
ss
lds
dec
dec
ds
les
fildl
cmp
fisubl
cli
paddsw
sbb
stos
movsl
aas
lods
les
imul
ret
repz
sub
iret
mov
fwait
mov
inc
and
in
or
movsb
mov
orl
mov
and
clc
dec
movsb
out
xorb
xchg
dec
add
jmp
push
pushf
movsl
sub
lods
or
scas
xor
xchg
popa
add
aaa
dec
js
push
xchg
push
stos
sbb
notl
dec
mov
nop
push
add
mov
lock
push
jle
movsl
inc
stos
shll
frstor
add
mov
mov
dec
cmp
push
xchg
jmp
add
xor
call
enter
jno
push
push
xlat
jg
or
sbb
idiv
shlb
mov
repz
ret
ljmp
aad
push
and
into
and
lods
ror
cmp
xorb
enter
add
adc
aaa
loop
add
push
xor
add
mov
mov
cmc
sbb
cmp
imul
in
hlt
jle
loope
fstpl
cmpsb
mov
xor
jecxz
dec
add
repnz
hlt
mov
mov
divl
stc
jo
adc
lahf
dec
filds
mov
js
add
pusha
pop
push
xor
ss
mov
jl
repz
xor
dec
push
xor
jecxz
sbb
mov
add
xchg
rcll
js
cmc
add
push
subl
mov
sub
rclb
inc
xor
aam
test
dec
mov
ficoms
pushf
hlt
or
sub
or
pop
and
mov
pusha
cltd
xchg
mov
and
xorb
and
call
mov
xlat
cltd
fidivrl
push
stc
xchg
or
or
cmp
fs
mov
lock
xor
push
pop
pop
loope
loop
jnp
add
shrb
faddl
pop
aad
and
ret
lea
jg
push
out
or
ljmp
jno
testb
popa
jle
cmp
jb
fwait
loopne
dec
data16
lods
push
sbb
into
mov
mov
and
xor
out
cmpl
jo
std
aam
jmp
inc
fdiv
adc
loop
lret
sbb
mov
mov
icebp
cmp
cmc
out
rcrb
pop
mov
sti
sub
sbb
mov
insb
and
or
in
fs
inc
xchg
loop
inc
dec
out
aaa
mov
push
loopne
add
scas
mov
xor
rcll
sub
movsb
sub
test
pop
xchg
push
pusha
out
and
out
cli
mov
mov
xor
mov
sub
iretw
andb
sub
out
sub
xlat
int3
sbb
test
xchg
mov
mov
mov
sbb
mov
add
dec
push
or
pop
mov
fdivs
adc
adc
cmp
jmp
js
jp
sbb
pop
ljmp
pop
adc
jp
test
push
mov
ret
mov
pop
add
cld
dec
roll
mov
cli
daa
sti
lock
rorb
dec
sahf
orl
and
je
or
daa
int
sbb
fwait
inc
stos
adc
imul
sbb
in
mov
test
jno
jl
in
or
add
ss
lahf
clc
xchg
mov
inc
cltd
test
and
int
pusha
jmp
dec
mov
pop
scas
add
xchg
and
cwtl
or
imul
lcall
cmp
xchg
nop
push
js
jo
div
repnz
out
xchg
mov
shlb
std
jle
xor
and
loope
fs
add
lock
mov
pop
add
mov
jp
push
lds
icebp
loopne
mov
mov
jne
jge
ret
mov
aas
jl
ss
push
and
push
jle
shl
mov
jno
lcall
enter
inc
pop
aad
data16
sub
pop
push
lahf
pop
loopne
mov
mov
xor
ss
push
or
in
leave
scas
or
test
clc
scas
and
dec
clc
rorl
dec
lods
je
mov
jg
mov
leave
insb
dec
fidivl
adc
rorl
mov
jp
decb
xchg
push
xchg
add
mov
fcom
ret
lret
jne
sbb
dec
adc
or
cmp
adc
xchg
sub
add
mov
popa
mov
mov
inc
pop
xor
fmull
cli
inc
cmp
ret
pop
fs
mov
lret
ja
dec
jg
jl
add
pop
dec
dec
insb
and
dec
lods
ss
je
fcomip
pop
mov
es
popa
mov
xchg
cmpsl
js
movsl
cmp
stos
addr16
nop
jnp
pop
pop
xchg
jmp
lahf
out
popa
sbb
test
jo
xchg
mov
cmp
or
xlat
pusha
dec
add
or
jbe,pn
mul
push
shl
test
mov
mov
sub
ss
or
hlt
cmc
in
and
xor
mov
stos
jne
dec
or
dec
sbb
mov
addr16
dec
push
cmp
ret
bound
add
sbb
mov
ret
dec
call
pop
sub
jle
test
lods
cmp
mov
mov
mov
push
pop
clc
add
mov
xchg
xchg
xchg
aas
or
or
sbb
ret
add
dec
pushf
or
movsl
sbbb
mov
repz
fdivrp
xor
daa
xchg
mov
mov
test
loop
pop
mov
inc
cli
push
sar
xor
cmp
fldt
adc
or
mov
adc
pop
sarb
lock
call
ljmp
ds
lcall
or
test
xchg
ss
scas
xchg
push
ss
lahf
ds
pop
or
jne
jmp
push
orb
call
lods
xlat
leave
jae
cmp
ljmp
xchg
xor
leave
fsts
hlt
add
dec
inc
daa
sarl
dec
lret
cwtl
push
lock
mov
xor
sub
ss
mov
or
addb
jle
sbb
mov
into
fimuls
pop
cwtl
loope
adc
push
inc
cmp
test
jmp
xchg
outsb
movsl
adc
jnp
enter
jecxz
or
mov
mov
js
push
icebp
pop
insl
xchg
mov
shlb
jne
mov
push
subb
lret
out
and
jl
loope
jmp
cmp
push
arpl
fs
loopne
inc
pop
cs
in
and
xchg
daa
mov
and
pop
lret
pushw
in
jne
sbb
scas
je
popa
ret
outsb
das
imul
sbb
mov
xor
pop
jmp
arpl
jno
hlt
and
dec
adcl
mov
jbe
dec
xlat
add
fcompl
push
cmp
xchg
ficoms
xor
push
leave
add
outsb
add
mov
mov
inc
add
ret
outsb
loopne
and
push
or
loop
pop
jge
inc
push
cli
es
jge
mov
fucom
filds
jge
cmovb
pop
sbb
les
pop
aam
mov
push
cmpsl
adc
jge
mov
lods
int
mov
cmp
pop
stc
xchg
stos
lea
xchg
or
sbb
loopne
subl
aad
cmpsl
jno
cmpsb
or
mov
scas
fildl
add
stos
in
pop
jle
test
jge
stos
into
cmp
incb
and
lock
inc
add
xor
mov
push
inc
clts
mov
cltd
int
scas
lcall
daa
pop
lcall
lret
pop
inc
pop
dec
xchg
mov
cmc
jp
sub
hlt
xor
cwtl
mov
cmpsl
ds
ss
push
ret
lcall
stos
orb
int3
push
push
lods
jp
add
mov
or
jnp
xor
push
scas
mov
xor
sbb
or
lcall
dec
int
sbb
mov
es
cmp
xchg
xchg
out
cwtl
sahf
dec
or
rcrb
rolb
push
leave
jge
mov
push
cmc
pop
and
sbb
cmc
inc
adc
mov
lret
and
xor
les
mov
daa
int
inc
push
sbb
fcomp
sub
mov
test
sub
pushl
addr16
or
sarb
adc
sbb
mov
out
lock
jb
test
push
push
or
xor
imul
inc
sti
je
pop
in
jg
pop
div
dec
mov
dec
push
and
dec
cmp
lods
mov
mov
into
xchg
mov
jno
adc
mov
pop
jge
jne
nop
push
push
xchg
sub
add
cmpsl
xchg
mov
sbb
xor
sbbb
ljmp
sbb
push
outsb
adc
and
pop
push
movsb
in
incl
popl
add
lds
ret
adc
mov
roll
js
mov
mov
adc
in
add
mov
push
ljmp
push
push
xor
sbb
sub
lds
aad
jle
lods
shlb
xor
adc
jno
add
stc
add
jle
ret
sti
push
pop
mov
or
add
test
mov
pop
pop
sub
out
xor
call
sub
jmp
in
xchg
jecxz
cltd
imul
out
add
mov
stos
lcall
ror
xchg
roll
adc
mov
pop
sbb
mov
xor
mov
xchg
push
xchg
mov
fsubrs
jb
hlt
xor
fisttps
and
xchg
adc
cmp
sub
xchg
xor
or
ljmp
ret
add
cmp
mov
ret
jle
testb
nop
dec
stos
adc
cmp
jmp
shrb
and
push
dec
addr16
sub
adc
testb
jo
lock
repnz
inc
test
sub
mov
rolb
mov
pop
xchg
cmp
test
add
jg
dec
mov
or
nop
cld
cli
insb
or
mov
dec
movb
jns
scas
das
mov
shlb
test
loope
pop
popa
cmp
pop
lret
rep
roll
mov
pop
addl
add
inc
ret
repz
jbe
jbe
loope
sbb
adc
adc
adc
sbb
or
addl
or
pop
sub
or
jge
leave
out
inc
dec
or
fsubrs
inc
imul
test
mov
scas
and
stos
and
loop
loop
xchg
push
jp
test
mov
pop
lcall
fcomip
roll
push
mov
and
adc
jb
inc
dec
loope
aaa
fistpl
or
cltd
or
push
aad
cmp
jne
nop
cmc
cld
outsb
xchg
orb
jmp
and
movsl
maxps
mov
pshufw
dec
xchg
and
shll
loope
lahf
loopne
arpl
les
sbb
push
xor
xchg
rorb
add
sarl
push
dec
pop
ret
ljmp
xor
push
out
loopne
hlt
rcll
scas
or
sub
in
pop
inc
aam
out
sub
and
sbb
aam
and
dec
push
sbb
imul
fs
xchg
add
ret
fimull
adc
add
sbb
cli
mov
adcl
jmp
notl
fidivrs
dec
je
add
xor
inc
pop
adc
lret
and
lock
dec
enter
and
gs
mov
jbe
add
jno
cmpsb
inc
jp
xorl
sbb
fdivrl
pop
sar
or
shrb
mov
push
xlat
idivb
std
dec
sub
mov
out
xchg
loopne
xchg
sub
push
in
dec
jecxz
pushl
int
lods
subl
bound
xlat
lock
minps
push
xor
in
cmp
push
adc
cwtl
mov
jecxz
mov
xchg
jno
or
fldenv
scas
fbstp
jle
xchg
jne
cs
clc
test
popa
repnz
mov
add
aad
mov
nop
pusha
out
and
imul
inc
aam
into
jecxz
dec
push
sbb
icebp
mov
mov
pushf
and
add
sbb
mov
cmp
mov
push
push
sbb
rcrb
cld
sbb
out
iret
inc
push
sub
sahf
xchg
lahf
ror
sahf
dec
mov
mov
scas
rcrl
xchg
add
fists
cmpsb
repz
movsb
jo
pop
pop
mov
and
xor
insb
jbe
push
mov
mov
push
jmp
cmp
loop
push
decl
adc
sbb
add
push
mov
sarl
ljmp
mov
cmp
xchg
adc
in
shl
dec
inc
out
orl
pop
fisubrs
cld
inc
leave
leave
xchg
lahf
leave
inc
ljmp
sbb
cmp
xchg
mov
mov
arpl
adc
in
cmp
xchg
sbb
mov
subl
cmp
xor
mov
lds
aam
shlb
inc
push
lods
idivb
scas
call
inc
and
mov
imul
cmp
push
std
out
mov
sub
mov
jne
nop
dec
xor
insb
pop
xor
sbb
stc
dec
repnz
outsl
sbb
add
int3
xchg
repnz
loopnew
jg
fcoms
outsl
sub
jne
shr
push
push
push
out
jle
push
je
pop
jno
daa
test
js
sbb
mov
loopne
push
pop
fsubrp
rclb
scas
adc
xor
filds
incb
cmp
inc
and
in
out
fiaddl
sarl
mov
mov
mov
xor
push
std
and
and
daa
stos
sub
lds
dec
dec
movsl
ss
mov
dec
inc
mov
push
les
add
incl
addb
sbb
and
pcmpeqd
clc
lock
shl
ret
or
outsl
neg
push
lahf
sub
nop
inc
lock
mov
in
sub
insb
icebp
pop
mov
adc
xchg
icebp
aam
mov
in
test
lcall
xchg
lock
ficoms
push
dec
push
call
inc
repz
aam
outsb
mov
outsb
xorb
aaa
into
push
and
rorb
nop
fs
and
add
jnp
imul
mov
mov
insb
movsl
jecxz
cwtl
push
jecxz
sbb
mov
xchg
mov
bound
hlt
inc
xchg
inc
and
test
jecxz
or
sub
nop
adcl
jge
adc
aaa
rcl
in
jae
jnp
dec
mov
inc
leave
jae
cmpl
fsubs
loope
shll
notb
clc
movsb
sbb
add
movsb
jmp
and
jns
testl
jl
movaps
mov
out
sub
push
dec
pop
inc
inc
sti
dec
addr16
mov
xor
inc
decl
push
jae
push
jb
int
cwtl
sub
addb
loope
fstps
fimuls
test
push
adcb
adc
jecxz
mov
and
sub
xor
in
enter
sub
inc
push
sbb
xchg
std
insl
pop
in
jle
aas
mov
adc
mov
push
dec
xchg
cs
push
sbb
and
inc
inc
mov
test
test
push
xchg
paddd
jo
or
push
jl
mov
imul
mov
mov
xor
dec
sbb
gs
scas
mov
ret
pushf
fmuls
jg
xchg
pop
pop
loop
test
int3
pop
and
inc
pop
add
flds
sbb
pushf
lret
pop
out
mov
rcrl
dec
fadd
push
cltd
cmp
pop
add
sbb
mov
mov
fdivrl
dec
sarl
jl
cld
es
cltd
and
dec
test
sbb
inc
fildl
mov
sub
xchg
sub
nop
xchg
jo
mov
sbb
arpl
ljmp
mov
xor
loopne
imul
dec
in
add
xchg
or
sbb
out
scas
xchg
push
mov
mov
jmp
jg
jp
outsl
in
jge
daa
sub
loope
and
hlt
pop
and
xchg
repz
sbb
les
lds
movsb
inc
fnsave
mov
mov
jmp
dec
sbb
mov
mov
sbb
add
xchg
outsb
dec
xor
aad
push
push
arpl
stos
mov
dec
aas
imul
fildll
mov
dec
lods
popa
adc
test
sbb
daa
scas
jg
mov
mov
cmc
xor
add
out
add
into
sub
pushf
cmc
dec
mov
adc
mov
into
gs
movsb
jo
jb
and
addl
pushf
adc
lea
dec
add
test
in
mov
stos
imul
lds
or
and
mov
cld
cli
sub
push
daa
aaa
jmp
jmp
mov
repnz
enter
xchg
dec
push
jb
adcb
sub
xor
notb
add
nop
loope
std
in
js
or
dec
push
mov
add
adc
psllq
imul
jb
push
xchg
imul
inc
aaa
clc
call
dec
insl
test
jne
cmpsl
mov
push
orb
and
es
mov
push
and
push
out
cmp
inc
fdivrs
lods
pop
testb
push
lret
push
insl
loope
pop
xchg
mov
cmpsl
test
xor
pop
lods
ficoml
inc
pop
das
call
and
arpl
jp
scas
adc
mov
or
sub
sub
pop
outsb
push
sbb
inc
dec
and
dec
add
lea
mov
xor
test
add
movsl
into
and
xchg
aad
inc
pop
sbb
std
mov
and
adc
mov
enter
dec
aaa
sbb
js
xor
stos
xor
ss
test
out
push
sbb
ficoml
std
pop
dec
aad
ret
xor
xlat
mov
mov
lods
sub
xchg
cmp
sbb
cli
dec
adc
dec
jae
push
sub
push
xor
sub
dec
stos
mov
into
sbb
push
jo
jo
xor
dec
xchg
inc
or
es
rclb
inc
mov
stos
mov
pushf
loope
adc
stc
shll
cmc
dec
roll
hlt
nop
xchg
psrad
dec
nop
or
sbb
jnp
stos
ds
shrl
and
pop
loope
pop
hlt
call
sub
dec
fsts
push
cmp
xchg
mov
jge
pusha
xchg
mov
bound
mov
shrb
aam
add
idivb
lea
inc
or
js
into
roll
or
daa
add
enter
mov
or
add
dec
cli
mov
sub
sub
int3
mov
pop
xchg
testb
mov
stc
lret
test
cld
pop
mov
hlt
push
sbb
xchg
mov
xchg
adc
addr16
xor
cmp
mov
adc
ss
jp
sub
pop
std
sub
lcall
sti
stc
xchg
les
lcall
push
ret
add
add
popa
dec
mov
loop
mov
mov
or
mov
cbtw
mov
sbb
adc
xor
or
dec
loope
in
cmpsb
jmp
rolb
leave
sbb
cs
divb
stos
out
xchg
xchg
nop
push
add
dec
lcall
inc
add
add
dec
cmp
or
mov
mov
xor
in
and
jnp
adc
or
call
in
js
aad
out
jmp
insb
pop
inc
in
imul
cs
call
xor
xchg
or
push
cmc
repz
insl
sub
aas
stos
leave
rol
dec
push
xor
gs
pop
testb
fiaddl
jmp
pop
adc
jo
pop
inc
jge
sbb
mov
scas
adc
lds
xchg
pop
sti
dec
call
fwait
sahf
add
movsl
cmpsb
jmp
sub
dec
xchg
add
sbb
and
js
std
and
loope
sbb
xchg
lahf
dec
sbb
pop
sub
fdivrl
add
icebp
mov
cwtl
and
adc
add
ljmp
jno
lock
push
mov
in
dec
mov
sbb
add
push
pop
daa
add
push
push
push
push
das
in
shlb
shl
fwait
lds
sub
or
jge
mov
hlt
jecxz
dec
mov
ret
mov
jbe
mov
out
je
mov
fldenv
sbb
jg
ret
scas
sub
shl
outsb
test
leave
ret
cld
scas
xlat
xchg
mov
push
js
lds
test
add
or
cmp
push
fwait
lea
xchg
out
insl
into
cmp
out
cmp
pop
push
stc
inc
mov
add
lea
mov
sbb
push
push
jne
adc
inc
xlat
clc
cmp
jo
hlt
cwtl
pop
sub
enter
repnz
das
xchg
jno
mov
xor
xchg
and
mov
or
mull
jae
cmp
xor
or
inc
cmp
mov
jmp
jb
xchg
test
sbb
sbb
cmp
or
sbb
rolb
orl
sub
cli
sbb
mov
inc
popa
stos
mov
pop
mov
push
cmpsl
and
jmp
mov
sti
ds
loopne
jbe
jo
mov
jg
gs
into
add
ss
fstpl
dec
mov
cmc
jp
jl
push
adc
inc
sbb
int
and
jmp
scas
dec
push
mov
cmp
jmp
dec
es
scas
mov
sbb
cmc
jmp
xchg
rolb
shrb
mov
mov
pop
iret
mov
mov
jge
and
and
call
outsb
add
out
ja
jnp
and
or
cmpsb
jmp
icebp
dec
xchg
jo
movsb
clc
adc
les
imul
pop
mov
and
jp
in
iret
xchg
outsl
loop
out
ret
fimull
pop
add
out
call
jp
icebp
test
push
pop
icebp
in
insb
nop
mov
out
jl
repz
xchg
ret
xor
je
jo
cmc
sub
lret
xchg
sbb
sub
jno
pop
nop
emms
add
pop
pop
or
lds
mov
popa
xchg
pop
mov
push
out
leave
mov
add
pop
mov
xchg
fwait
leave
lret
insb
loopne
into
mov
call
add
pop
sub
out
into
add
inc
aam
cmp
jge
fdivl
in
mov
sbb
ss
cvtss2si
xor
popf
sbb
cli
xchg
mov
and
cli
lret
jl
push
fstps
jle
xor
dec
sbb
in
lea
test
movsl
mov
push
fildl
sbb
mov
add
jle
and
mov
jno
fsubl
cmc
jle
icebp
sbbb
iret
loopne
add
adcl
and
adc
mov
mov
add
pop
sbb
adc
mov
fdivl
pop
mov
add
sarb
loop
mov
push
adc
das
cld
inc
adc
add
mov
std
les
sub
cmp
mov
aaa
or
push
loopne
xor
push
adc
pop
and
sub
lret
ret
sub
pop
test
sub
mov
dec
icebp
hlt
jne
rorb
ret
mov
loopne
dec
pop
arpl
movsl
xchg
call
push
inc
add
sbb
cmp
pop
loop
aad
push
cmp
mov
stos
push
sbb
lock
cmpb
nop
test
mov
lahf
xor
jb
xor
sahf
scas
icebp
in
mov
icebp
js
std
mov
leave
in
mov
dec
mov
adc
adc
or
sub
inc
loop
adc
xchg
ret
sbb
add
jno
xchg
movsb
out
data16
mov
imul
mov
dec
popa
mov
xor
shrb
adc
dec
and
sarl
rorb
fstpl
jae
fnstsw
sub
sahf
icebp
cwtl
or
lcall
std
ret
cmp
xchg
cwtl
cmpsl
push
insb
cs
xor
ret
mov
jecxz
imul
das
mov
mov
js
jns
xchg
shl
inc
test
push
jmp
lods
je
or
aaa
and
js
das
push
dec
pop
pushl
push
push
push
rorb
add
rcrl
jecxz
stos
jo
jne
ss
sub
adc
stc
sub
push
inc
cmp
lea
cmc
adc
and
stos
adc
lock
divl
xchg
pop
ret
sub
int3
in
test
or
shrb
push
dec
scas
test
push
adc
aad
loopne
stos
adc
insb
fists
imul
outsb
mov
out
dec
popf
add
pop
cmp
enter
stos
outsl
rorb
mov
adc
lret
cmp
push
out
dec
or
xchg
mov
or
call
push
add
inc
adc
push
push
ss
pushf
ja
leave
test
mov
fsubrs
mov
xchg
mov
push
push
inc
adcl
enter
pop
out
xchg
sub
scas
out
std
xchg
jp
xchg
frstor
push
push
fisubs
mov
add
sbb
and
notb
sub
adc
inc
fidivrs
addb
cwtl
jo
in
outsl
les
xlat
push
repnz
dec
xor
sbb
push
mov
inc
mov
rcll
jle
adc
outsb
movsl
cmp
js
jnp
lahf
inc
sub
sbb
stos
imul
mov
int
jl
and
frstor
pop
inc
dec
dec
movsb
dec
dec
sbb
es
daa
add
dec
popf
add
sbb
xchg
fistps
mov
add
xor
icebp
into
mov
stos
or
sbb
pop
sbbl
arpl
mov
mov
push
in
pusha
pushf
push
or
mov
scas
push
fcmovb
addr16
rolb
fstpt
jge
cmpsb
test
jp
leave
enter
aaa
loopne
mov
sbbb
xor
int3
dec
add
mov
daa
loopne
js
fldt
sti
mov
xchg
sbb
fistps
loope
push
sub
or
dec
fwait
dec
shlb
loope
push
roll
leave
inc
add
std
cmc
and
mov
xchg
daa
andb
jle
adc
or
int
ljmp
or
ljmp
cmpsb
adc
xorb
imul
xor
js
or
push
pop
test
add
jp
inc
ret
imul
stos
fldl
lahf
lods
sbb
ret
leave
shlb
cmp
add
mov
fdivs
mov
cmc
add
mov
test
jmp
add
movsb
lahf
sub
call
pushf
imul
sub
mov
dec
jg
lret
loop
testl
push
cld
in
mov
into
mov
pop
insb
pop
aam
loopne
pusha
mov
sti
cmpsb
add
jmp
test
xchg
jno
js
dec
pop
cmp
fadds
xchg
sub
dec
inc
fmulp
addr16
xchg
mov
pop
loopne
inc
inc
loopne
dec
mov
jbe
dec
jo
in
es
test
loopne
test
sbb
add
outsl
es
adc
stos
lcall
sub
addl
ss
call
push
push
lock
test
jecxz
imul
in
pop
and
or
sbb
test
sub
stc
mov
jo
or
out
xchg
xchg
sarl
aaa
adc
mov
andl
jo
int3
pop
cli
imul
ret
lret
xor
jo
mov
fldl
jle
loopne
lcall
mov
daa
les
pop
popa
inc
inc
js
xchg
xor
rcr
pop
mov
inc
mov
dec
fsub
popf
icebp
mov
mov
aas
mov
jle
mov
pop
push
or
push
sub
icebp
sbb
jmp
popa
add
cltd
popa
lods
es
repz
sub
stos
pop
incl
inc
sub
pop
loop
shl
pop
dec
test
adc
adc
sarb
dec
mov
jmp
mov
sbb
out
push
inc
mov
cmp
in
cli
xchg
mov
push
mov
push
call
add
sbbl
shll
andl
xor
sbb
fmull
cwtl
mov
xor
das
cld
xor
push
shl
pop
popf
xchg
shlb
loopne
jns
mov
mov
in
data16
test
xchg
xchg
push
and
out
and
clc
lock
dec
xlat
add
or
loope
mov
mov
push
cmpl
xor
pop
push
pop
pusha
loop
call
xchg
add
sub
xchg
pop
sbb
andb
loope
fsubrs
jg
leave
into
push
jle
rorb
int
mov
inc
cmp
xor
loopne
test
test
fwait
sub
dec
mov
push
sahf
dec
push
adc
clc
mov
pop
enter
insb
adc
jmp
fildl
icebp
sbb
push
push
daa
and
loopne
dec
xchg
fcomps
cmc
mov
outsb
nop
addb
inc
cmp
push
hlt
pop
dec
dec
loope
or
ret
jb
dec
mov
movsb
push
or
fsubrs
out
or
xchg
jb
jne
pop
aam
loopne
sbb
push
jae
mov
jb
aam
mov
test
divl
push
mov
dec
mov
mov
nop
inc
pop
pop
mov
add
jae
nop
loop
std
adc
dec
mov
push
add
or
cld
jg
rcl
push
mov
cmpsb
xchg
add
adc
pop
dec
jg
in
pop
or
cmpsl
push
std
rcrb
jge
push
sub
xchg
sbb
add
nop
ja
inc
ret
inc
push
adc
mov
pop
lock
sti
repz
mov
mov
sub
int
xor
ja
arpl
sbb
aaa
push
cli
stos
rcll
pushf
mov
sar
push
mov
push
xchg
jp
jmp
sahf
fsts
loop
adc
testb
fisubs
jl
add
or
ret
andb
sub
stos
iret
insl
fsubrl
out
fcmovnb
or
or
sbb
jle
stc
cmp
cltd
iret
fisubl
test
dec
mov
not
xchg
xor
push
cmp
outsl
rolb
insl
in
loope
jno
insl
ffreep
adc
adc
adc
sbb
aaa
sbb
mov
shll
movsb
pusha
aas
dec
adcl
xchg
or
lds
and
js
loop
or
jbe
cmp
call
sarb
mov
pop
or
shll
lods
mov
popf
inc
inc
xor
sub
popa
sti
and
insl
aas
lea
sbb
inc
in
icebp
mov
xor
sbb
pop
test
cmp
pop
lock
data16
xchg
xor
or
ds
jl
cwtl
mov
inc
cmc
mov
xchg
lods
and
sbb
repnz
fsubr
inc
mov
xor
mov
lods
aad
and
push
sbb
push
int3
and
clc
sub
out
in
test
jg
fisttpll
jb
or
setb
div
mov
mov
lret
jl
xor
push
daa
dec
fldl
sbb
loope
cmpsb
dec
jb
add
out
jo
in
movsb
popf
out
mov
mov
test
sub
leave
inc
outsl
call
ljmp
stos
dec
leave
jp
mov
int
or
lar
push
test
mov
mov
aad
fs
mov
lods
mov
xchg
aas
scas
int3
icebp
das
xor
push
shlb
xlat
cmp
jecxz
pusha
icebp
ret
or
sub
rclb
push
fmull
daa
pop
or
sbb
lret
arpl
ret
inc
add
dec
clc
test
mov
add
sub
imul
inc
and
jg
xor
ret
mov
mov
mov
fdivr
mov
stos
aaa
mov
aam
and
add
mov
aas
add
jne
test
pop
leave
fcomps
and
xchg
outsb
xchg
xor
sbb
sar
mov
pusha
adc
dec
jmp
popa
lea
pop
enter
xor
pusha
mov
cmp
xor
jae
adc
adc
call
jg
push
and
shrl
adc
jmp
stos
loopne
dec
mov
mov
aas
sti
push
mov
mov
int3
add
test
cmp
dec
xchg
addb
sbb
jp
mov
xor
xor
or
jp
inc
scas
aad
sbb
pop
jecxz
add
sti
mov
jbe
les
lahf
les
js
das
mov
jno
xor
xor
adc
lock
push
std
ret
fst
push
nop
fisttpll
std
or
addl
loopne
sbb
std
das
inc
sbb
add
scas
sub
test
call
jp
jnp
lock
lret
movsb
push
add
jo
mov
fstpl
out
dec
rol
pop
jp
test
push
sbb
mov
xchg
and
fildl
pop
or
fisttpll
inc
fadds
xchg
mov
lcall
out
inc
inc
in
adcb
fistpll
fwait
in
adcl
aas
call
ljmp
inc
dec
inc
sub
add
mov
or
hlt
add
lods
pop
jle
or
cmp
in
nop
xchg
lock
rolb
dec
adc
out
std
push
mov
scas
incb
sub
mov
sub
enter
dec
fs
cwtl
dec
std
fnstenv
or
mov
std
mov
cmp
sarl
or
daa
imul
mov
arpl
dec
or
or
inc
push
mov
and
js
mov
mov
call
dec
mov
aas
pushl
loop
add
sub
xlat
add
cmp
or
cmp
rclb
cmp
mov
xchg
inc
pop
pop
andl
adc
or
lcall
xchg
push
and
xchg
into
icebp
dec
push
fwait
inc
and
loop
mov
pop
dec
repnz
ret
xor
mov
mov
loope
mov
and
pushf
imull
lods
sbb
shl
sahf
jno
data16
js
lahf
add
xchg
add
fnstcw
std
push
or
xor
cmp
push
lds
add
or
push
add
sub
and
insb
mov
jnp
jns
ds
sti
aam
loopne
jno
pop
mov
push
fs
outsl
push
mov
iret
js
pop
sbb
adc
les
enter
mov
shl
mov
shrb
xor
ss
pop
mov
mov
orb
fwait
imul
pusha
push
sub
test
add
nop
pop
loopne
lods
fidivrs
or
pop
pop
inc
sub
repnz
ret
je
cs
leave
ds
dec
push
mov
jbe
je
test
nop
adc
cld
hlt
cld
add
stos
mov
adc
in
mov
sub
pop
rcll
scas
or
push
or
mov
hlt
fdivrp
add
bound
and
sbb
mov
rcrl
push
clc
ljmp
ljmp
jno
cmpsb
clc
jle
lahf
xor
sahf
pop
lahf
xchg
insl
push
out
cwtl
pop
xlat
in
mov
loopne
pop
shr
xchg
inc
rorl
jne
add
adc
inc
adc
mov
inc
jmp
ficoms
mov
cmc
je
push
pop
cmc
and
bnd
cmpl
sub
jg
jne
jl
dec
sbb
cld
pop
sahf
inc
add
cs
cmc
and
jle
hlt
movsl
mov
jecxz
cmp
jle
push
cmc
push
aaa
orb
adc
mov
test
call
cmp
mov
mov
lods
add
push
xchg
fsubl
fwait
aas
stc
loop
je,pt
loope
inc
hlt
sub
jmp
popa
mov
in
mov
mov
mov
sahf
ja
xchg
fimull
fistpl
cmp
add
xchg
push
sub
loop
testl
and
cld
inc
jg
lret
clc
xchg
jle
pop
pop
push
sub
jne
and
mov
pusha
sti
cmp
test
lcall
lret
movsl
or
sbb
xchg
or
outsl
add
in
push
mov
call
pushf
arpl
push
mov
push
jl
or
ret
fdivl
gs
call
cli
jg
inc
dec
sbbl
xchg
adc
lret
xor
adc
push
mov
ret
cmp
mov
lock
push
arpl
mov
test
mov
mov
lahf
xor
pop
leave
addr16
in
mov
mov
rclb
add
cli
and
daa
inc
mov
mov
test
adc
jg
fistps
add
sbb
jb
test
lods
jp
pop
pop
pop
js
loopne
mov
dec
cld
stos
cwtl
adc
inc
icebp
mov
aaa
in
jae
xchg
xor
ret
mov
loop
xor
add
add
mov
rcrb
cli
or
lret
inc
sbb
aas
ret
movsl
xchg
in
or
fnsave
inc
and
out
cmp
adc
sub
aas
push
add
in
mov
sbb
jo
loopne
inc
xor
stos
out
or
lods
cmp
adc
lods
sub
jg
xchg
pop
das
and
pop
rcrb
mov
add
loop
loop
jl
loop
movsb
lahf
push
sub
dec
mov
mov
stos
xor
push
push
jae
lds
nop
es
pushf
inc
insb
jp
adc
sub
cld
inc
add
scas
sbb
scas
addl
or
xchg
dec
rclb
loope
jae
and
insl
das
mov
ret
or
and
and
mov
nop
pop
dec
mov
add
add
sub
or
pop
icebp
and
cmp
sub
adcb
jno
nop
and
sbb
and
lret
add
fs
adc
add
xor
inc
testb
ret
adc
xor
fwait
cli
out
ja
es
orb
dec
insl
or
mov
mov
sbb
jne
push
lea
loope
ficomps
xchg
dec
fnstsw
push
sti
cmpsb
mov
cltd
out
les
fildll
movsl
xchg
push
adc
cmp
out
mov
std
pushf
mov
jp
stos
xchg
jne
in
ret
movsl
pushf
mulb
data16
mov
js
adc
mov
stc
sbb
ret
loop
popf
lahf
xorl
fimuls
aam
int3
push
push
sub
mov
xchg
fwait
es
lods
cmpsb
clc
mov
inc
cmp
sbb
xchg
movb
mov
rcl
scas
into
xor
sbb
pop
inc
incl
subb
add
push
jno
test
add
popa
xchg
jecxz
xchg
cmp
in
mov
shrl
std
lea
pushf
jne
jne
push
dec
mov
or
pop
inc
sti
add
jno
inc
outsl
mov
ljmp
stos
and
jl
adc
adc
xchg
xchg
cmpsb
push
test
dec
mov
push
and
pop
cmp
cmp
mov
cli
imul
subb
es
inc
repnz
dec
xchg
test
adc
loope
xor
mov
daa
pushf
clc
cld
lods
bound
int
je
cmpsl
xchg
loopne
cmp
fidivs
shl
or
xchg
loope
mov
fstpt
sub
mov
mov
stos
iret
std
mov
or
cli
div
jbe
mov
rorb
mov
push
ljmp
mov
orb
push
xchg
orl
popf
ja
jecxz
or
mov
lods
push
add
cld
xlat
jp
shll
cmp
pop
sahf
jle
cmp
cs
mov
push
add
int
mov
aam
xchg
push
or
or
adc
sub
or
dec
ss
sbb
popf
into
push
and
xchg
xor
cmc
cmp
js
inc
and
sub
add
rolb
cmpl
ret
mov
dec
cwtl
inc
mov
pop
shl
inc
and
xchg
lcall
push
or
repnz
in
movsl
push
mov
sub
add
stos
push
les
lret
cmp
mov
fsubl
adc
sub
jl
imul
ret
and
inc
out
xor
in
and
mov
mov
daa
xor
pop
lcall
dec
lahf
inc
push
icebp
sahf
pusha
mov
int3
and
inc
test
xchg
out
pop
and
jg
ret
adc
push
je
out
std
out
cld
test
jne
js
xor
nop
mov
clc
ja
hlt
push
xchg
add
outsl
int
fsubrl
xor
mov
jno
rolb
jo
jo
dec
out
movl
jae
inc
lret
inc
xor
les
inc
xchg
icebp
dec
in
bound
or
imul
mov
mov
repz
fstpl
push
shr
mov
cmp
bound
mov
push
call
mov
ds
enter
aad
out
aaa
stos
dec
and
inc
mov
add
xchg
ds
xor
andl
push
pop
mov
pusha
or
mov
and
loope
jo
xchg
jno
mov
push
lock
adc
fwait
pop
push
mov
add
jg
mov
and
push
jne
ljmp
push
sbbl
ss
out
aaa
and
test
lods
push
push
pop
outsb
push
push
mov
in
inc
xor
pop
xchg
add
push
push
call
or
ss
pop
sbbl
xor
fstpl
lock
pop
sub
insl
mov
arpl
add
or
xor
or
stos
push
sub
mov
cwtl
or
jecxz
icebp
rolb
push
stos
ss
mov
sub
push
arpl
adc
nop
lods
aaa
push
lea
cmp
and
mov
mov
mov
stos
ja
cltd
xchg
call
xor
xchg
add
sbb
and
mov
inc
lea
cld
add
andl
sub
lods
sub
mov
sbb
xor
dec
adc
add
insl
inc
push
dec
fisubs
pop
das
pop
int3
dec
add
pop
loopne
aaa
ss
ljmp
mov
aad
roll
fists
js
xchg
adc
mov
add
decb
std
add
mov
adc
push
clc
and
int3
cs
shll
adc
nop
mov
jmp
lods
sub
pop
push
sbb
std
fisubs
clc
iret
push
pop
std
or
das
jmp
int
and
and
movsl
lods
xchg
movsb
aaa
orl
enter
pop
hlt
pop
mov
out
mul
sti
and
cmp
sub
arpl
hlt
addl
xchg
pop
cld
je
jle
pop
sub
arpl
add
push
ss
test
popf
mov
or
add
rolb
sbb
xchg
pusha
lahf
sti
roll
push
inc
xchg
pusha
push
fisubl
xlat
pop
mov
push
dec
std
shll
cmpsb
imull
nop
das
sub
sarb
or
jae
add
and
lds
add
mov
mov
adc
fldenv
mov
fmull
pushf
repnz
gs
inc
aad
and
es
les
test
cld
pushl
scas
dec
mov
mov
jmp
cmp
mov
push
lret
pushf
ja
cmp
adc
inc
outsl
push
sbb
sbb
add
add
and
sbb
stc
movsl
dec
dec
pushl
mov
xchg
add
mov
xor
adc
pop
es
into
sbb
push
test
aam
and
roll
inc
xor
or
or
fldenv
lock
or
lods
jmp
adc
and
cmp
add
pop
push
insl
add
mov
pop
cmp
pop
cmpsl
mov
adc
xor
lret
or
movsb
mov
inc
clc
mov
inc
push
push
fsubr
xchg
aad
cmp
movsl
shr
movsb
add
js
inc
ljmp
xor
rsqrtps
mov
inc
loope
or
subb
stos
lods
lahf
jno
enter
ror
loope
add
addb
scas
pop
sub
sbb
loopne
mov
sbb
add
in
mov
cld
add
rol
sub
push
mov
jge
mov
xchg
ljmp
push
ret
lcall
push
std
and
inc
aas
nop
jnp
or
dec
lds
jbe
test
roll
and
addr16
jle
je
ret
lods
inc
cmp
mov
fwait
popf
mov
xor
xchg
sbb
jne
in
stos
xchg
rcll
and
fiadds
xor
loope
pop
sbb
pop
adc
in
test
fwait
mov
sbbl
dec
dec
loope
push
js
ret
cli
cmp
stos
ljmp
sbb
inc
loopne
mov
fwait
movsb
xor
fiaddl
pop
adc
cwtl
pop
push
pop
xchg
xor
jle
stc
sub
push
mov
mov
adc
scas
pusha
call
mov
call
in
xor
adc
ret
nop
mov
in
adc
mov
sub
hlt
ss
sarb
ficomps
push
ljmp
enter
ret
adc
cmp
mov
lahf
and
or
addr16
mov
add
ret
xor
sbb
and
test
add
les
inc
mov
xor
popa
sahf
rcr
xorl
inc
cli
inc
daa
mov
rolb
xor
shl
mov
das
outsb
and
push
inc
ja
inc
mov
pop
mov
xchg
mov
pop
mov
jp
adc
in
ja
rol
push
xor
sub
sbb
add
mov
call
push
stos
arpl
inc
sbb
enter
orb
faddl
mov
adcl
jo
or
add
push
push
dec
sar
push
shlb
iret
pop
paddsw
cwtl
aad
ljmp
movsb
popa
test
pop
jb
add
and
cwtl
xor
inc
popl
ret
movsb
divb
movsb
pop
jg
outsb
pop
daa
stos
cmp
pop
cld
and
and
stos
push
ja
sub
and
addl
aam
and
cmp
fcmovb
inc
data16
inc
fimull
and
jge
or
dec
jp
test
scas
push
stos
mov
ljmp
or
pop
pop
andb
nop
push
movsl
jecxz
xor
adc
pop
rol
push
shlb
ja
into
out
jmp
rcll
adc
push
mov
vpavgb
mov
pop
aam
nop
loopne
push
stos
enter
fisttps
mov
add
push
enter
xchg
test
pop
sub
fiadds
sbb
rorl
test
pop
add
mov
xchg
xorb
jae
inc
inc
test
insl
add
mov
jle
adc
daa
jle
je
aam
xor
insl
push
rol
aaa
mov
sub
arpl
pusha
adc
ds
add
push
test
jecxz
push
es
cmp
and
sbbl
cmp
imull
call
fdivl
bound
test
pop
add
and
cmp
dec
xor
std
cmp
jo,pt
sbb
push
sub
inc
mov
data16
lods
pop
and
xor
ljmp
jp
add
mov
fs
or
push
mov
cmpsl
insl
in
fiaddl
sub
shll
pusha
mov
test
lret
ds
pop
mov
pop
and
in
lea
popa
in
test
es
dec
xchg
test
lock
movb
add
addr16
jp
xchg
cmp
pop
and
sbb
orl
in
push
je
leave
rclb
or
cmp
lods
dec
inc
dec
fildl
cmpsl
lahf
clc
ficoml
pusha
add
fst
pop
pop
repnz
sub
imul
xchg
inc
inc
push
pop
and
push
push
outsl
or
jle
pop
sub
rolb
sub
mov
cwtl
or
push
stos
sub
sbb
mov
jnp
sbb
adc
xor
push
adc
out
push
int3
xchg
mov
push
dec
pop
inc
loopne
mov
popf
fwait
mov
xchg
icebp
iret
inc
jg
jecxz
loop
mul
mov
pop
test
add
sbb
rol
rol
out
or
cmpsb
and
sbb
scas
inc
sub
cli
xchg
lcall
dec
mov
lds
pop
jp
outsb
add
lods
mov
movsb
addb
out
enter
das
repz
scas
and
or
test
in
push
sbb
shlb
add
rorl
sbb
fwait
pop
sub
xor
ret
mov
add
aaa
xor
lods
stos
push
mov
push
ss
cmpsb
test
adc
mov
out
add
mov
int3
mov
addb
dec
shlb
rol
xor
inc
or
push
inc
jp
clc
mov
add
jp
es
adc
mov
push
pop
add
test
repz
sbb
filds
repz
xchg
test
inc
jo,pn
in
sbb
ret
xor
unpcklps
shlb
pop
js
loopne
lretw
ss
inc
xchg
and
cmp
dec
cltd
fistpl
jg
jl
cmp
shrl
or
popf
ljmp
loopne
sub
insl
fsubp
sbb
inc
hlt
test
add
inc
in
in
fsubr
xchg
mov
ja
cmp
adc
orb
shl
sub
lock
or
inc
sub
xor
sbb
sahf
pop
shlb
adc
xchg
pop
sbb
cli
mov
xchg
jne
inc
insl
clc
lods
in
ret
adc
cli
mov
ja
dec
in
or
xchg
adc
mov
shlb
xchg
pop
pusha
cld
mov
mov
ljmp
push
nop
inc
inc
jge
lock
mov
pop
jl
mov
roll
outsb
xor
fs
ds
int3
and
mov
shlb
clc
orb
mov
movsb
mov
sub
outsb
lcall
jne
shlb
gs
ljmp
push
pop
cmp
int
and
cmc
cmpb
mov
lods
pusha
and
shlb
imul
jmp
mov
mov
jmp
lods
les
push
jo,pt
push
shlb
imul
pop
js
cs
inc
add
xchg
sbbb
lea
xchg
jecxz
mov
sbb
sbb
cmpl
or
and
cmc
or
inc
pushf
les
and
rcll
push
pop
call
mov
shrb
mov
outsb
loopne
pop
push
stc
sub
dec
xchg
inc
arpl
or
xchg
pop
jp
movsb
push
es
xchg
dec
shll
add
mov
lcall
rcrb
cmp
dec
ss
add
mov
idivb
pop
pop
add
cs
mov
xchg
mov
cmp
and
mov
adc
mov
push
jno
cltd
mov
xchg
mov
jmp
jecxz
out
sahf
add
and
sub
fcomps
pop
adc
lahf
cmpsb
lret
mov
std
js
dec
dec
jbe
xchg
inc
and
inc
inc
imul
mov
cmp
push
mov
repnz
pop
push
jno
les
pop
mov
loop
repz
inc
mov
sbb
ja
mov
xor
ds
jo
pop
loope
mov
js
push
popa
push
out
mov
add
nop
fwait
mov
leave
mov
pop
js
mov
xor
inc
pushf
pop
inc
int
mov
aad
cs
fs
cwtl
xor
popf
test
int3
sbb
sbbl
and
xor
or
lods
roll
fldt
cli
jmp
pop
mov
negb
call
addr16
sub
fbld
add
movb
loop
ret
push
orl
inc
inc
jg
loopne
or
jno,pt
int
into
sbb
inc
inc
jp
clc
dec
inc
mov
bound
mov
call
popa
fdivrl
bsf
xor
add
inc
push
jle
andl
cmp
sbb
in
cmpl
pop
jl
das
sub
push
and
lock
test
inc
mov
outsb
push
mov
push
pop
add
pushf
dec
push
scas
xor
out
mov
test
sub
sbb
lods
lods
push
fs
insl
js
sub
cmp
gs
fmull
shl
and
adc
das
lods
lret
pusha
cmp
shl
sub
lods
xor
rorb
testb
sub
jbe
pushf
dec
adc
add
in
je
insb
push
sbb
cmp
xor
mov
add
jge
mov
inc
jge
xor
add
fcoml
jp
insl
lds
push
divb
in
ret
lcall
xchg
arpl
int3
push
cwtl
in
sub
aaa
adc
mov
clts
mov
inc
shrl
hlt
mov
cmp
dec
add
inc
fwait
pop
push
sub
icebp
subb
fdivr
into
leave
xchg
push
imul
jbe
xor
shlb
lahf
repnz
ss
imul
scas
incl
and
push
ljmp
imul
jmp
call
testb
outsb
in
jbe
sub
loope
imul
and
inc
into
aad
cltd
in
iret
sbb
mov
sub
pop
jl
iret
insl
jl
ror
adc
and
cli
jl
lock
outsl
shr
cwtl
mov
jl
fiadds
loop
dec
pop
lods
loop
mov
stos
mov
add
lock
notl
xchg
and
cs
push
cmp
lret
test
jg
xchg
or
xor
add
icebp
call
subb
or
mov
fsts
clc
push
and
call
xor
xchg
int
orl
sub
sub
lret
js
pop
outsb
out
gs
mov
sbb
dec
cmpsl
and
hlt
add
orb
adc
es
ds
pop
das
mov
adc
xchg
orl
test
ficompl
outsl
outsl
add
in
daa
and
insb
scas
jle
rcrl
cli
loopne
decl
mov
insl
hlt
je
push
pop
out
incb
sbb
pop
xlat
jno
mov
pop
call
pop
mov
sarl
enter
addl
pop
adc
dec
clc
pushf
fiaddl
push
cs
mov
ss
lods
mov
inc
cltd
js
movsb
js
push
cmp
shll
push
lods
sub
pop
or
repnz
mov
adc
mov
loopne
arpl
rclb
rclb
cs
ss
xchg
clc
push
cmp
or
xchg
mov
loope
jns
pop
and
mov
xchg
push
push
cmp
mov
ja
mov
les
inc
mov
repnz
pop
cmpb
daa
pop
loope
adc
les
sub
pop
ficoml
lret
sahf
jbe
lahf
les
jecxz
inc
push
dec
add
and
xor
dec
add
pop
inc
mov
jmp
mov
sar
testl
fcmovnb
xor
jne
data16
out
cmpb
adc
mov
sub
dec
or
push
orl
inc
in
inc
or
jp
push
sbb
fstpl
imul
cmp
jns
stc
inc
pop
call
fs
adc
or
inc
outsb
je
mov
fimuls
cmpsl
adc
mov
movsb
sbb
jnp
aam
in
and
mov
insb
loop
or
sub
sbb
imul
xor
adc
das
mov
jmp
jmp
jle
aaa
movsl
push
scas
sub
out
adc
or
cltd
push
jle
call
pop
add
loopne
rcl
test
outsb
push
inc
pop
xor
mov
rclb
popa
push
xor
sbb
sbb
fstl
xor
sub
mov
add
cmp
xchg
cmp
fstps
cld
cmp
push
rcrl
shr
das
test
xchg
pop
mov
sub
jmp
sub
sub
iret
xor
pop
inc
sub
add
sbb
pop
push
cmp
ret
addr16
int
icebp
push
push
inc
pop
mov
jo
and
mov
cmp
push
rcrl
ret
arpl
jg
scas
adc
adc
inc
lahf
ret
push
mov
mov
clc
sbbl
mov
ss
xor
jle
inc
sub
and
pushf
mov
mov
pusha
push
push
test
cmpsl
in
push
sbb
fmull
leave
mov
stos
scas
iret
lcall
mov
icebp
pop
or
fimull
xchg
push
shlb
mov
inc
push
xchg
mov
ret
test
sar
push
test
lods
mov
inc
pop
gs
mov
push
xchg
gs
mov
jge
popf
sbbb
add
stos
sub
je
shlb
cltd
scas
push
sbb
xor
add
lods
mov
mull
or
cmpsb
test
test
dec
es
stc
popa
add
rorl
cmpsb
test
jno
cmp
pop
jbe
repz
adc
sub
mov
shll
movsb
pop
sub
loope
imul
sub
push
call
fs
sbb
jle
leave
inc
imul
icebp
xchg
and
cmp
xchg
xlat
lcall
lret
mov
jnp
lahf
aas
cs
test
mov
cld
adc
in
push
push
push
jno
mov
mov
es
fcoms
lock
cwtl
xchg
adcb
xor
jbe
rorl
sbb
xchg
pop
rolb
cli
push
xlat
mov
dec
add
addl
push
mov
fsubr
adc
push
xchg
cld
pop
aas
popf
clc
jo
inc
icebp
int
add
or
pop
push
cmp
adcb
stos
fwait
or
mov
mov
xchg
ret
push
and
push
push
mov
sub
lahf
sahf
xchg
sbb
push
mov
add
icebp
sub
pop
cmp
shll
or
pop
or
sahf
loop
adc
mov
xor
pop
mov
cmc
mov
clc
loop
sbb
call
pop
xor
pop
cmp
sbb
or
xor
scas
lock
fstpl
shrl
shl
inc
xor
cmc
shll
gs
lret
xor
lds
adcb
sub
cmp
loopne
leave
jle
dec
lea
fs
mov
inc
out
xor
pavgw
aas
ficoml
dec
test
mul
jb
xchg
sbb
test
call
fimull
pushf
mov
unpckhps
mov
or
data16
sbb
adc
inc
or
push
push
adc
dec
mov
int
jge
iret
pop
xlat
pop
out
dec
cmpsb
adc
je
inc
lahf
add
xor
mov
inc
push
push
jo
xor
pop
es
mov
inc
dec
ret
dec
sub
pop
push
pop
mov
inc
add
mov
shl
sbb
scas
adc
lret
xchg
xor
adc
js
es
aad
add
cmpsl
out
divl
xor
mov
cmp
lret
ret
jl
adc
jle
xor
mov
iret
repz
mov
add
inc
mov
sbbb
daa
adc
testb
adc
sbb
mov
adc
cmp
jmp
sti
popa
repnz
xchg
push
imul
inc
sub
mov
inc
mov
pop
xchg
cltd
push
das
push
push
repnz
mov
js
movl
fidivl
xor
mov
inc
bound
dec
or
jecxz
in
mov
hlt
shl
and
sbb
push
movsl
iret
cmp
dec
mov
leave
stos
roll
loopne
mov
xchg
push
scas
sub
pop
jle
push
test
add
adc
pop
adc
das
push
rclb
add
mov
mov
and
aam
mov
movsl
test
mov
sbbl
push
sbb
inc
ficomps
arpl
rclb
xchg
fidivrs
pop
fldl
loope
jmp
inc
jne
push
fld
insb
fistl
loop
outsb
mov
push
cmp
mov
pop
stos
loope
sbb
dec
rcll
mov
cmpsb
cmp
imul
sarb
push
hlt
insl
cmp
add
shrl
fmull
push
lea
xchg
mov
or
arpl
out
and
nop
pop
or
test
xchg
xor
stos
and
sub
movsb
mov
add
pop
dec
push
jle
xchg
xor
sbb
pop
mov
hlt
fdivrl
lret
aaa
loop
aas
data16
or
stos
cmpb
dec
dec
add
orl
push
mov
and
xchg
pop
mov
dec
imul
out
ljmp
xchg
repz
call
inc
out
outsb
mov
loope
sbb
nop
movsl
testb
shr
cmc
sahf
rcl
ja
sbb
jns
ss
mov
sub
mov
and
mov
or
add
push
fstpt
dec
arpl
pop
rcrl
mov
mov
dec
cmpsl
mov
mov
aas
xor
and
add
mov
cmp
sbb
jno
sti
das
jg
mov
lock
push
xchg
fisttps
gs
cmp
sbb
dec
pop
jle
adc
imul
je
addr16
push
stos
jae
mov
stc
and
fbld
xor
in
in
out
xchg
lods
btc
jecxz
xor
mov
mov
aam
and
aam
push
jo
popa
xor
jp
cs
jno
out
cmc
ret
fcoms
repnz
and
icebp
adc
xor
shlb
lods
dec
xor
fcomi
and
jge
pop
mov
and
add
sub
aam
cld
and
shr
push
adc
jg,pn
lods
test
out
loop
adc
pop
lock
and
cmp
inc
lock
loop
addb
imul
pop
cltd
mov
pop
cmpsl
imul
cwtl
adc
aam
call
enter
inc
clc
das
or
xor
jl
fwait
call
or
dec
jbe
adc
sub
cmp
shrl
pop
aam
push
dec
mov
test
push
push
inc
dec
popa
stos
push
sbb
into
mov
mov
icebp
mov
mov
mov
cwtl
inc
push
cmc
pop
ja
pop
cs
push
and
ljmp
lock
mov
sbb
xchg
add
pop
and
push
cmc
mov
pop
mov
std
dec
and
enter
dec
call
roll
inc
pop
push
inc
cmc
pop
cs
ljmp
out
lret
adc
xchg
call
cmp
inc
loopne
les
push
das
clc
xchg
data16
jne
pop
lret
in
dec
cmp
aam
filds
xchg
popa
cs
pop
loop
mov
clc
and
imulb
sbb
scas
jmp
push
dec
dec
mov
test
jnp
xchg
push
mov
mov
dec
or
arpl
mov
ret
cmpsl
cmpb
jg
jge
in
out
push
out
lock
in
inc
out
mov
loopne
js
aas
jno
dec
insl
jp
push
sbb
je
add
mov
dec
add
cmp
out
or
and
sub
adc
pop
push
jo
sbbb
cmpsl
adc
push
sub
sub
adc
in
sbb
cmp
sbb
movsb
loop
scas
decb
call
dec
sti
or
inc
pavgb
cmp
push
xor
sbb
inc
xor
in
pushf
pop
ljmp
call
inc
adc
push
cmp
add
fs
and
fldcw
cmpsl
loop
cmp
cmp
dec
sbbb
lcall
add
mov
mov
outsl
into
inc
mov
adc
mov
and
bound
bound
pop
mov
test
cmp
fdivrl
and
xchg
les
mov
push
and
or
lods
sbb
push
xchg
mov
hlt
rcr
pop
xchg
pop
ret
lahf
ja
les
loope
dec
or
fs
pop
jnp
jg
mov
xchg
and
adc
mov
nop
pop
out
inc
aas
aaa
pop
mov
lods
xlat
xchg
cmpsb
mov
dec
adc
dec
fucomp
jg
hlt
adcl
jmp
dec
insl
pop
jno
adc
mov
and
insl
jmp
add
ret
pop
push
fdivrs
cmp
cmp
jmp
mov
je
lahf
imulb
icebp
dec
lret
pusha
test
jecxz
mov
sbb
fwait
lds
ret
dec
in
push
pop
dec
mov
cmp
test
jne
sbb
fdivs
pop
push
insb
push
inc
adc
pop
lods
sti
xor
sub
addr16
pop
push
out
push
js
xor
mov
daa
sahf
and
adc
dec
lret
std
test
inc
jno
outsl
aas
sbbl
faddl
pop
dec
dec
fistps
lea
and
cld
cmpsl
lods
xor
popf
mov
add
rorl
testl
cld
xor
gs
sub
mov
pusha
ja
xchg
and
out
inc
inc
fisttps
jne
jb
out
hlt
lahf
js
leave
idivl
pop
inc
or
xor
inc
or
test
ljmp
push
push
lods
mov
jge
rcr
mov
jge
adc
sbbb
xor
sub
or
jb
or
dec
jae
jp
inc
push
mov
mov
js
outsb
and
inc
mov
dec
aas
adc
idivb
xchg
xor
aas
or
call
movsb
push
insb
sub
stos
hlt
jo
in
js
mov
in
sbb
push
push
or
lods
enter
mov
mov
push
xor
rcrl
movntps
push
push
xlat
cwtl
jo
cld
dec
popf
mov
imul
insl
lods
cmc
mov
movsb
cltd
pop
andl
outsb
mov
adcb
pop
jg
push
xor
mov
ds
jl
cld
in
or
inc
adc
sub
pop
sbb
dec
adc
loopne
popa
mov
in
xchg
mov
dec
add
add
in
cltd
stos
sub
push
pop
xchg
je
cld
cmp
dec
loope
loope
dec
jbe
hlt
mov
je
sub
or
sub
sub
dec
pop
xchg
test
clc
add
mov
mov
mov
sbb
prefetcht2
sub
or
adc
sahf
popl
incb
or
cmpsl
pop
ror
in
mov
or
in
inc
inc
adc
sub
pop
or
push
inc
loopne
adc
mov
jecxz
in
adc
loopne
mov
pop
popa
add
jbe
push
clc
mov
dec
or
test
push
decl
mov
lret
dec
or
jg
rol
or
les
jge
stos
add
rolb
push
mov
mov
mov
orl
mov
mov
jge
daa
xchg
xchg
sbb
rcll
mov
push
adc
fs
jbe
push
cmp
sbb
pop
fdivrl
ss
mov
mov
insb
or
fwait
jecxz
test
inc
and
mov
and
test
popa
loopne
mov
dec
pop
rolb
jl
add
sbb
xchg
sbb
bound
push
clc
inc
movl
in
sar
dec
cmp
and
sub
inc
and
and
and
pop
lcall
push
xchg
gs
push
jmp
fs
xor
rolb
push
xor
test
mov
loop
insl
xchg
mov
mov
shrb
jg
ss
icebp
cmovne
mov
out
es
or
dec
sub
in
cs
aad
fldt
fidivs
adc
xchg
jp
inc
xchg
sub
gs
inc
int3
fwait
push
pop
adc
rolb
adc
add
pop
mov
dec
sti
add
dec
subb
pop
add
mull
pop
or
sti
outsl
ss
aad
in
scas
push
xor
gs
and
or
push
scas
ret
xchg
jo
push
das
cmp
cmp
fnstcw
xchg
inc
popa
xor
sbb
loopne
scas
fimuls
sahf
jnp
mov
fcmovnbe
inc
ret
mov
inc
dec
pop
ja
mov
add
cli
rcll
in
imul
mov
lods
aam
sub
fwait
sub
andl
push
sbb
and
bound
popf
push
pop
sbb
into
clc
fiaddl
pop
fsubp
dec
pop
adc
jecxz
stc
test
shrb
push
lahf
icebp
ds
sbb
mov
stos
inc
cmp
cld
rorb
mov
mov
mov
sbb
jns
pop
outsl
insb
outsl
movsb
dec
dec
xchg
push
xor
ffreep
xlat
sub
push
add
repz
sysret
or
lea
and
or
bound
call
mov
mov
scas
pushf
ret
pop
cmpsb
lods
inc
cmp
dec
mov
mov
sub
into
pop
lcall
cmp
jne
loope
mov
frstor
pop
xchg
test
js
jl
xor
repnz
je
or
loopne
lret
les
insb
jmp
mov
mov
mov
ffreep
rcll
test
jns
ret
jbe
into
into
rcrb
js
xor
in
or
mov
cwtl
mov
fstpl
mov
lea
jle
add
in
xchg
leave
xor
loope
stos
push
jge
les
mov
dec
jmp
add
and
loope
arpl
out
fwait
movsb
aad
in
movsb
sbb
mov
iretw
jbe
rorb
fdivp
aas
fdivrl
clc
xchg
std
add
sub
mov
rorl
and
or
stc
add
xlat
jmp
or
add
pop
shl
leave
cwtl
pop
jmp
xchg
pushf
shrl
pushf
sub
subl
cmp
divb
aas
mov
das
push
cmp
mov
or
dec
and
leave
lock
cmp
test
shll
and
jns
addr16
addr16
push
cmp
xchg
fwait
push
jns
mov
pop
and
inc
mov
push
or
sbb
sub
imul
psubd
popf
sbb
inc
inc
xchg
outsb
dec
push
rcrl
loopne
hlt
inc
aad
pop
jl
jle
or
add
sti
int
add
js
xor
xchg
imul
mov
pop
ds
loop
pop
clc
out
xor
lods
clc
cmp
ret
inc
or
jl
xchg
movsb
mov
andb
xor
mov
roll
sbb
xlat
jmp
fadd
add
xchg
mov
lcall
adcb
inc
jle
pushf
addr16
stc
jo
mov
outsb
movsl
lahf
sarl
and
pop
fdiv
cmp
bound
scas
stos
mov
mov
sbb
cltd
xchg
xchg
aaa
inc
push
add
leave
sub
loopne
pop
jbe
mov
fistpll
sbb
push
lods
out
lds
mov
ss
lea
or
or
daa
ficoml
movsl
jp
lods
and
in
pop
inc
andl
jae
mov
dec
xor
dec
gs
adc
jnp
jbe
ret
xor
jnp
push
xchg
lret
leave
xchg
testb
jo
xor
lcall
and
pop
test
mov
into
cmp
cs
fimuls
test
pop
add
inc
lahf
add
add
inc
pop
or
popa
xor
pop
ds
fbstp
rolb
das
and
inc
aam
cli
push
lock
jle
dec
mov
cmp
or
mov
adc
adc
jae
jns
jecxz
data16
popf
xchg
pop
test
xchg
mov
pop
les
xlat
or
adc
add
xor
mov
xor
popf
cltd
shl
xlat
in
out
adc
pop
push
out
je
jle
inc
je
in
push
loopne
adc
mov
fistl
jno
pop
xchg
pop
movsb
rcl
das
fs
xchg
ret
clc
leave
les
or
or
mov
rclb
and
jb
adc
ret
pop
sahf
mov
or
stos
inc
pop
or
mov
daa
addl
push
into
mov
shrb
mov
hlt
mov
das
iret
into
pop
les
dec
cmp
sub
arpl
push
adc
andb
outsl
clc
in
lds
inc
es
cmpsb
stos
mov
pusha
lods
lahf
jmp
push
pop
pusha
push
mov
mov
stos
mov
test
dec
pop
das
xor
stos
lods
adc
add
xlat
mov
mov
clc
ret
orb
jb
push
add
aad
jp
fistl
es
push
push
shr
negb
sbb
cmp
int
push
scas
pop
hlt
inc
shl
dec
lods
pop
mov
mov
jno
mov
or
aas
mov
mov
push
xchg
jl
xor
xor
fmul
jecxz
test
cli
jo
push
cmp
sbb
pop
aam
mov
mov
test
cmpsb
shrb
imul
or
fimuls
cld
sub
or
sbbb
push
cmp
mov
xchg
out
push
test
sysenter
pop
jl
push
or
pushf
xchg
shll
aas
xchg
inc
sbb
fidivrs
dec
jbe
adc
mov
cmpl
loop
push
or
xchg
aad
cmc
aas
cmp
lock
ret
dec
xchg
and
jecxz
sbb
popa
jmp
jbe
out
xor
ljmp
mov
and
mov
xchg
aam
test
push
or
loopne
add
loop
fincstp
mov
jmp
shlb
stos
or
dec
pop
push
daa
sbb
sbb
dec
int
or
dec
jo
aam
dec
mov
jmp
xor
leave
add
jecxz
xor
test
loopne
shll
repz
mov
xor
mov
jnp
shr
negl
sti
icebp
lea
je
sbb
pop
pop
leave
lcall
and
insl
jp
xchg
popw
push
pop
loope
leave
sub
cmp
mov
clc
xchg
xchg
mov
scas
aad
rolb
hlt
fisubl
test
cld
sub
push
fcomps
sub
pushf
cmpb
push
je
shlb
xchg
scas
outsl
lahf
test
and
jge
movsb
dec
out
jae
lods
movb
daa
fistl
aad
add
test
inc
sbb
mov
xchg
outsb
ret
and
jge
pop
mov
adc
sbb
push
mov
into
push
cmc
pop
dec
into
cwtl
jae
movsl
or
xchg
or
xchg
xor
mov
fs
xchg
xor
jl
sub
nop
pop
and
push
ret
or
aas
xlat
push
aaa
cmc
cli
cmpsb
adc
push
cmpsb
invlpg
loop
gs
cmp
push
add
sbb
sarb
mov
ret
or
mov
test
or
popf
jg
in
adc
pop
lea
mov
loopne
popf
push
stos
addr16
mov
in
popa
rcll
cmp
insl
add
inc
loope
lea
sub
adc
add
mov
mov
test
add
scas
xor
test
push
inc
sbb
arpl
aam
mov
sbb
pop
repz
int
mov
and
mov
mov
insb
sahf
push
cmp
pop
xor
sub
aam
rcl
pop
aaa
or
mov
add
push
or
or
lret
jmp
loop
imul
and
frstor
pop
xchg
or
sbb
push
add
jl
test
and
or
or
jno
sub
pop
sahf
test
sbb
cmp
xchg
cmp
push
cld
subl
push
test
je
test
je
stos
loop
and
dec
sub
fs
sbb
add
lea
stos
mov
xor
push
lock
add
xlat
in
loopne
sub
add
js
inc
mov
test
sub
push
mov
jb
lahf
pop
insb
cmp
sbb
sbb
pushf
xor
popa
pop
ljmp
adc
pop
shlb
xlat
out
xor
pop
loope
xor
ret
xchg
cs
jno
add
cld
dec
mov
pop
test
mov
lods
or
jmp
enter
sti
or
adc
inc
shll
rcl
out
subb
pop
mov
out
fidivrl
lahf
adc
xchg
scas
cmp
repnz
xor
sub
stos
sbb
add
dec
jnp
pop
jmp
mov
add
dec
fcmovbe
xchg
jecxz
mov
nop
xchg
adc
cwtl
adc
and
sbb
ljmp
cmpsb
ss
mov
dec
add
adc
xchg
dec
or
loop
and
pop
out
imul
aas
jg
out
out
sub
mov
and
stos
sub
mov
ja
mov
sub
fwait
cmpsl
mov
xchg
jge
stc
icebp
dec
pop
mov
mov
clc
sbb
test
xor
ss
pop
pop
stos
or
cmp
cmpsl
xchg
sbb
frstor
test
xchg
pop
rcl
sbb
imul
stos
or
push
dec
es
pop
sub
push
xchg
jo
jo
cmp
push
out
test
mov
mov
adc
inc
mov
xor
setbe
xchg
scas
or
aad
loopne
dec
lret
stc
push
pop
addl
inc
out
lea
pop
jmp
mov
xchg
outsb
sbb
jl
xchg
cmpsb
push
inc
fwait
sub
movsl
outsb
push
cltd
in
mov
rorl
cwtl
lds
shl
cmpsb
pop
sbb
jne
sub
iret
js
mov
ret
sbb
call
in
push
xor
clc
add
push
pop
and
dec
dec
sbbb
cmc
out
cltd
inc
jecxz
addb
xor
xchg
and
pop
test
lock
mov
insl
test
pop
test
dec
jecxz
mov
mov
add
xor
clc
jbe
jae
jmp
push
fucom
and
mov
add
cmp
stos
rclb
dec
push
stc
roll
les
andl
adc
lahf
test
cmc
fsubs
jno
lret
scas
movsl
inc
scas
sbb
pop
sub
incb
push
outsl
mov
rol
gs
mov
sahf
jno
imul
mov
adc
push
add
adc
and
or
outsl
imul
cs
sub
dec
push
fistps
add
xchg
dec
test
and
loopne
dec
pusha
cmp
cmpsl
jle
cmp
stos
movsb
sub
das
mov
lcall
movsb
xor
adc
pop
popf
lods
xor
jbe
fmulp
icebp
xchg
loope
inc
add
pop
sbb
and
ss
mov
or
mov
dec
and
xor
aas
cmp
pop
jno
cwtl
outsl
inc
cmp
or
mov
fcmovb
dec
bnd
jmp
orl
cmp
xor
test
or
mov
imul
movsl
insb
cmpsb
adc
mov
lods
push
inc
movsl
lea
mov
sbb
bound
adc
jp
cmp
xlat
lcall
adc
push
pop
add
pop
outsl
lods
mov
ret
rcrb
loop
push
sub
add
sbb
pop
dec
mov
repz
cld
cmp
addr16
stc
fisttpll
sbb
test
push
iret
xlat
xlat
shll
jmp
sbb
adc
or
icebp
push
nop
in
and
mov
mull
add
push
data16
pop
mov
lock
insl
test
icebp
sub
xchg
inc
mov
xchg
jle
mov
mov
ret
inc
jae
bound
gs
xchg
sahf
in
lods
pop
cmc
cmp
mov
mov
mov
mov
into
aad
sbb
leave
or
and
out
xchg
subl
sub
inc
stos
jno
jno
pop
repz
ret
nop
cltd
dec
ret
sarl
loope
test
adc
sub
push
lds
xchg
subl
pinsrw
je
xor
sbb
je
icebp
lret
mov
cmp
or
sarb
scas
push
bound
mov
subl
xchg
dec
les
test
test
loopne
push
add
std
adc
imul
imul
adc
or
xor
int3
inc
and
adcb
or
mov
xor
pop
sbb
dec
sub
cltd
mov
jae
mov
ds
sub
je
push
lock
les
je
mov
xor
ret
popa
aas
add
jmp
mov
inc
fistpll
int
or
mov
out
insl
fistpl
subl
add
or
jmp
xor
std
mov
xchg
inc
or
or
push
mov
cmp
scas
cmc
pop
dec
rorl
and
aam
es
cmpl
mov
add
addr16
fldl2e
test
lcall
pop
bound
pusha
or
pop
dec
out
cmp
es
in
insb
mov
pop
sbb
notb
cmpsl
sbb
fidivl
imul
pop
jae
push
jp
cmp
loopne
or
dec
inc
cmp
dec
aas
push
jecxz
aaa
mov
pop
dec
insl
and
sub
cmp
xchg
fiadds
lock
xchg
sub
out
push
loop
adc
xchg
mov
rorb
add
imul
fwait
iret
out
pop
adc
and
pop
and
pop
add
push
in
les
sbb
stc
jo
dec
cmp
mov
loopne
jno
sbb
dec
xor
enter
push
dec
std
inc
je
adc
stc
test
mov
xor
sub
lcall
push
add
add
cmpsb
in
test
psllw
xchg
mulb
xor
push
mov
and
jmp
lock
jo
cltd
imul
or
int3
imul
pop
cmp
dec
cmp
adc
hlt
lds
cltd
sbb
pcmpgtd
xor
xchg
outsb
ret
add
scas
cmc
push
adc
incl
jbe
mov
cmp
inc
push
pop
inc
lcall
mov
mov
adc
test
in
cld
xchg
lret
test
push
test
shlb
fucomip
xchg
fucomip
pop
pop
cmc
jns
and
mov
cltd
pop
inc
inc
into
ss
cmp
scas
aad
mov
push
fwait
add
cmp
lock
or
test
cmp
ret
push
cmp
jp
push
pop
and
mov
cmc
cmc
cltd
and
fnstsw
lods
movsl
pop
dec
lods
pop
jmp
mov
addr16
dec
std
sbbb
cmpsl
jl
das
jl
ds
notl
push
ss
inc
mov
ss
in
pop
fdivl
nop
and
lret
jmp
shr
scas
popf
ret
push
xchg
push
fsubs
jp
cmpl
xor
xchg
lods
les
mov
adc
or
xchg
mov
jae
cmp
jns
sub
outsl
ret
inc
stos
je
mov
push
loopne
fwait
lea
sbb
mov
mov
mov
dec
add
aaa
lods
xchg
addl
shll
inc
mov
mov
mov
fadds
and
gs
mov
jns
jecxz
sbb
fwait
push
jo
mov
mov
adcl
rcrl
dec
xor
cwtl
fnstenv
xorl
cmpl
push
push
mov
inc
dec
sub
add
rclb
mov
dec
jae
pop
lods
dec
cmpsl
push
push
rorl
shll
adcl
sbb
sub
out
faddl
lods
imul
or
pop
xchg
push
jno
cmpsl
xchg
or
fistps
jg
stos
pop
dec
lret
jmp
xchg
lea
cwtl
movsb
sbb
loope
lods
ljmp
jge
nop
std
mov
cmpsl
pop
jne
push
mov
mov
sbb
and
or
and
dec
sbb
inc
add
popa
adc
mov
mov
cmpsl
pop
lds
pop
fwait
in
mov
movsl
sti
xchg
push
shll
mov
mov
mov
jae
call
jae
jno
mov
ljmp
xor
popa
inc
add
xchg
mov
scas
inc
or
shl
add
fs
sbbb
adc
jge
cltd
or
loop
push
sbb
add
and
push
xchg
sbb
insl
pop
add
lods
sbb
mov
imul
dec
mov
dec
xlat
sub
jo
jp
dec
lahf
xchg
mov
adc
push
dec
repnz
sub
daa
inc
inc
cmpb
mov
or
or
loope
push
lds
sbb
jg
hlt
adc
mov
jle
loopne
popf
sbbb
incl
push
inc
rclb
or
cwtl
ret
pop
and
push
int
shlb
es
xor
sbb
pop
push
shll
cs
fdivr
pop
aaa
je
or
lods
cmp
pusha
xor
fsubl
or
jo
inc
fimuls
push
loopne
jecxz
pop
test
sub
mov
clc
ret
add
pop
pop
sub
out
mov
inc
rcr
stos
and
dec
cmp
push
in
std
adc
aam
pop
faddl
fistpll
mov
incb
cli
or
or
jecxz
inc
testl
inc
xchg
in
inc
in
push
mov
rorb
sbb
xor
add
xor
ja
jg
movsl
push
les
jge
jmp
or
sbb
mov
dec
aaa
or
jp
push
or
cmc
adc
inc
pop
test
xor
scas
mov
push
inc
fdivrs
enter
add
cmp
push
add
jae
xor
xlat
mov
ds
sub
jl
jg
icebp
or
sbb
mov
pop
mov
pop
pop
mov
mov
cmp
mov
jle
loopne
mov
ljmp
jl
icebp
xchg
cmp
rcr
std
int3
jp
sbb
or
pop
decl
int3
add
sub
mov
inc
iret
lods
nop
movsl
sbb
popa
and
pop
ljmp
xor
lods
inc
xchg
mov
pop
push
test
adc
outsb
dec
push
xor
adc
inc
sub
cmp
mov
inc
stos
and
mov
mov
push
mov
push
aas
gs
mov
incl
jo
xor
fisttps
aaa
mov
in
push
sahf
cmp
cld
icebp
adc
cmp
cmpl
test
inc
cld
hlt
pop
arpl
or
sub
ret
fidivl
push
call
xchg
mov
inc
fbstp
mov
pusha
mov
push
mov
ret
add
push
loop
in
and
insl
ljmp
xor
inc
or
lcall
push
in
out
daa
adc
bound
daa
nop
push
add
int
pop
cmp
xor
adc
insb
mov
insb
mov
xor
cli
inc
sarl
mov
icebp
xlat
mov
into
lea
cmp
jb
jp
sarb
cmp
es
aam
into
out
inc
jecxz
std
dec
leave
or
pusha
pusha
inc
xor
pusha
mov
jmp
shlb
add
push
and
cld
hlt
or
xor
test
lret
add
push
decl
insl
add
fiaddl
add
outsl
ljmp
push
daa
pop
lahf
sub
mov
cli
clc
nop
popa
insb
mov
les
cld
push
bound
mov
clc
jnp
pushl
fwait
ljmp
idivb
and
push
mov
push
ficomps
outsb
subl
stos
test
jp
loop
loop
test
xorb
dec
mov
xor
cmovo
in
mov
mov
sbb
jecxz
loop
outsb
outsl
or
or
std
pusha
cmp
popa
add
sbb
jg
mov
scas
std
dec
xlat
or
and
xor
enter
insl
inc
xor
pop
in
mov
push
sbb
xchg
sub
mov
sbb
push
outsl
out
inc
mov
xchg
cmp
lods
rclb
outsl
push
pushl
or
fisubrl
mov
push
sub
fwait
cltd
js
xchg
push
xor
mov
mov
decl
fsubrs
xchg
dec
into
mov
push
or
mov
or
lock
add
into
xlat
aam
clc
xchg
mov
inc
loop
lods
es
xor
add
das
inc
sub
add
pop
test
loopne
adc
mov
shlb
jge
pop
jmp
nop
cmpsl
pop
mov
pop
mov
jecxz
dec
clc
lods
adc
rcl
fisttpl
or
pop
sub
dec
mov
xchg
sub
sbb
cmp
jne
or
cli
fs
test
xchg
sub
pop
cwtl
inc
filds
xor
sarl
mov
lods
lcall
pop
fidivs
sbb
add
pusha
aaa
add
repnz
pushf
xchg
mov
pop
js
jle
mov
xchg
loope
xchg
cmp
dec
xor
push
and
fiaddl
push
or
fistpll
jne
movsb
pop
int
or
mov
clc
les
sbb
in
rorb
loopne
adc
push
lea
mov
scas
fidivl
es
je
cmp
sub
ja
lea
movsl
mov
mov
ret
or
jle
mov
push
loop
popf
out
mov
aad
or
pop
lods
adc
loopne
das
add
lret
test
inc
iret
pop
cli
divb
dec
inc
add
lea
dec
es
jecxz
sbb
movsl
add
jns
ret
pop
lcall
mov
loop
int
jnp
sub
jne
cmpsb
pop
mov
fs
loopne
and
rclb
pop
popa
mov
mov
dec
loopne
mov
fstpt
aaa
mov
jl
add
nop
mov
add
xchg
test
mov
sbb
ret
dec
add
inc
mov
xor
jno
outsb
hlt
aas
cli
adc
fcomps
or
aam
cmp
push
jae
xchg
icebp
pop
mov
cpuid
frstor
mov
dec
adc
ret
mov
push
jae
inc
add
cmp
mov
popa
sti
mov
out
sbb
jne
pusha
and
stc
lret
push
xor
cmp
dec
fcompl
jb
sbb
js
test
jmp
insb
jecxz
fstpl
outsl
adc
pop
sub
shrl
and
pop
mov
push
mov
add
push
aam
lcall
sbb
xchg
xchg
aaa
adc
push
jp
bound
test
outsb
cs
cltd
mov
push
mov
sbb
cld
cs
fidivrs
sub
int3
sbb
push
test
jmp
insb
imul
mov
pop
movsl
popa
mov
xchg
stc
fdivr
jo
gs
push
aas
cld
test
adc
sub
push
adc
icebp
sbb
and
je
inc
mov
xchg
mov
fistl
mov
xchg
loop
nop
ror
xchg
arpl
loopne
and
outsl
arpl
test
jns
in
sub
fcomip
enter
pop
mov
push
jge
adcb
loope
sti
jo
ljmp
mov
shlb
daa
sbb
fcom
sbb
cmc
js
clc
dec
mov
mov
nop
inc
or
sbb
and
mov
addr16
mov
mov
xchg
add
xchg
in
xchg
mov
or
sahf
xchg
pop
fnstcw
push
xor
jl
gs
fiaddl
loopne
pop
cmpsb
call
inc
push
orb
imulb
sub
scas
push
cmc
sbb
xor
mull
jno
inc
or
push
subb
xchg
insb
call
mov
push
or
xor
stos
dec
push
jge
inc
dec
mov
call
outsl
enter
cmpb
jo
sbb
sbb
adc
ficoms
aas
lock
addr16
shlb
push
mov
insb
xchg
sub
xor
sub
mov
push
add
rcl
jecxz
stos
insl
ds
jecxz
push
es
or
in
mov
pop
inc
xor
lock
lcall
outsb
or
pop
mov
ret
push
loope
test
mov
pusha
loopne
pop
xor
aam
cmp
mov
fldcw
nop
mov
and
xchg
jmp
nop
stos
mov
lods
rcl
scas
push
jle
inc
mov
add
cwtl
xchg
loopne
insb
es
cltd
inc
push
and
movsb
pop
push
dec
test
jl
add
daa
aas
fmull
or
pop
and
and
shl
sar
sbb
cmc
insb
imul
mov
jp
add
sub
fimull
and
shrl
jg
dec
in
fmuls
hlt
cmp
adcb
xchg
xor
aas
gs
imul
andl
pop
rcrl
pop
pop
add
into
lods
enter
inc
or
sbb
mov
pop
sbb
sbb
cwtl
add
dec
call
jl
test
aam
or
pushf
movsl
fcompl
adc
adc
inc
into
ds
mov
sub
cwtl
add
lea
out
adc
nop
or
std
ret
add
dec
sbb
jle
pop
notl
adc
loopne
outsl
ficoml
outsb
jne
mov
nop
les
pop
mov
aaa
add
cltd
outsb
dec
jmp
push
and
gs
rorl
call
pushf
pop
dec
inc
roll
jle
aas
mov
test
fadds
cld
and
dec
ja
jbe
cld
test
push
push
jl
cmp
inc
fcomip
clc
mov
inc
mov
out
sbb
push
aaa
sub
lret
pop
shl
in
test
pop
xchg
adc
inc
add
cmp
ret
adc
mov
cwtl
jmp
loope
and
xor
es
jmp
push
lret
inc
xchg
adc
loop
sbb
or
dec
xor
xor
or
push
scas
sbb
fs
subl
pusha
hlt
xlat
add
popf
cli
cmp
jo
mov
mov
ljmp
push
push
mov
xorb
inc
pop
insb
sbb
mov
stos
mov
lods
cwtl
push
add
in
stos
xchg
pusha
iret
pop
mov
cli
jae
mov
cli
inc
fidivl
mov
pop
add
adc
loope
add
xchg
aas
cld
mov
stc
push
ss
jo
mov
push
cld
rcll
shrl
inc
xor
out
mov
adc
pop
add
or
icebp
call
cmc
sarb
lods
add
out
rolb
sbb
or
xchg
xchg
xor
xor
adc
cmpsb
fisubs
add
or
ljmp
jae
sarl
mov
jae
cmpsb
and
push
add
shrb
pop
inc
sbb
inc
sbb
mov
and
pop
and
loopne
adc
xchg
pushf
adc
add
js
sbb
push
and
fisubrs
nop
enter
or
add
sahf
push
and
pop
in
aad
and
imul
dec
test
jb
jmp
pop
mov
sbb
das
add
push
mov
loop
mov
xchg
inc
mov
stos
mov
cs
push
stos
sbb
add
inc
add
jecxz
je
dec
loope
gs
sbb
shlb
add
ret
imul
xchg
fidivrl
in
negb
leave
xor
fucomip
dec
aaa
sub
imul
inc
cli
jmp
bound
lahf
push
loope
rcr
sub
les
ret
lods
shlb
repnz
call
fldt
loope
inc
pop
dec
nop
mov
sarb
dec
loope
lcall
xchg
adc
xchg
mov
mov
test
add
adc
push
cmpsb
jno
and
insb
push
push
loopne
movsb
push
test
cmp
jle
and
sub
adc
idivb
cmc
ljmp
mov
mov
cmp
dec
cltd
cmp
add
and
or
adc
lods
aaa
bound
and
add
mov
fnstsw
pop
add
add
out
divb
fadd
dec
adc
cld
xor
push
dec
icebp
push
mov
lret
inc
push
sub
pusha
xor
and
ljmp
cwtl
sti
fmuls
in
cmp
fists
inc
movsl
call
push
repnz
popl
stos
jae
pop
mov
or
jo
adc
imul
loopne
add
lock
gs
jns
popa
ljmp
sbb
pop
lock
or
aas
movsl
xlat
xchg
push
and
mov
ficompl
lahf
test
jg
ds
cmp
xor
mov
xlat
xchg
xor
fldenv
lods
loopne
push
rol
inc
cmpsb
add
sub
sbb
js
adc
mov
loop
mov
push
sub
daa
and
xor
xchg
sub
fisttps
xor
out
xchg
add
xchg
mov
pushf
mov
mov
popa
das
scas
lds
and
mov
std
jp
cmp
out
mov
pop
dec
fiaddl
loope
mov
xchg
sub
loope
xchg
fcomps
mov
and
and
ds
lock
add
test
mov
dec
jg
out
xor
adc
dec
sbb
mov
mov
test
lods
and
add
mov
mov
mov
fsub
jbe
dec
dec
sub
imul
add
dec
enter
cmp
and
cmpsl
xor
sub
fnstsw
mov
ficomps
outsb
insl
test
cli
cmpsl
pop
call
cli
mov
or
sbb
mov
jmp
sbb
pop
cmpsb
xor
in
push
shrl
data16
hlt
cmp
loopne
or
mov
clc
dec
pushw
in
cmpsb
adc
xchg
les
movsl
lds
sahf
pushf
lahf
out
push
fisttpl
xor
mov
inc
add
or
fimuls
mov
push
jg
sub
dec
int3
mov
pop
cwtl
inc
fisttpl
xchg
pop
add
dec
bound
popl
decb
pop
loope
dec
sub
fsubs
and
sbb
je
adc
sbb
leave
sti
arpl
xor
outsb
mov
test
pop
fs
andnps
subb
ret
or
mov
sahf
stc
jb
lds
jmp
sbb
out
cli
mov
loopne
stc
hlt
sub
xlat
rclb
add
lret
movsl
pop
mov
and
xor
clc
in
jge
pop
inc
xchg
aad
lock
add
sbb
shrb
jp
xchg
aad
mov
add
mov
sbb
sub
xor
push
sbb
dec
shl
cli
sar
imulb
imul
pop
add
pusha
sbb
test
out
jnp
inc
dec
loopne
sub
mov
jge
xchg
js
test
push
jno
fistl
add
jl
or
push
sub
mov
mov
test
fbstp
dec
daa
jl
movsb
push
sbb
jb
sti
jno
andb
xchg
mov
daa
incb
int
inc
rclb
push
in
jge
imul
jno,pt
sub
inc
int3
sub
adc
push
fs
cmp
cld
xlat
lds
enter
xor
push
jp
mov
lret
xchg
or
mov
mull
pusha
xchg
or
add
push
push
es
jl
and
mov
xchg
xchg
push
mov
and
pushf
les
mov
xor
xorb
dec
lock
sbb
es
out
shrb
pop
xor
cwtl
imul
xor
push
sbb
mov
out
leave
pop
fs
mov
push
mov
xchg
mov
ficompl
or
loope
mov
data16
and
sbb
jne
shl
or
jge
jne
stos
adc
into
inc
mov
xor
loope
and
lods
das
insb
loop
daa
sbb
stos
pop
das
out
mov
push
cmp
cmp
pop
dec
and
fsub
inc
xlat
fiaddl
nop
loopne
in
loopne
adc
mov
mov
push
mov
outsb
jo
jg
adc
scas
js
inc
and
loop
test
jne
pop
dec
clc
add
fisubs
loopne
out
bound
and
inc
xor
sbb
arpl
shll
sbb
inc
fmulp
lods
xlat
push
cmp
push
movsl
ret
mov
aam
sbb
or
popa
pcmpeqw
mov
insb
sti
outsl
fisubrs
dec
push
and
push
jg
and
cmp
add
xchg
and
xchg
aad
and
mov
hlt
mov
or
daa
push
imul
test
lret
sub
clc
or
and
sub
mov
jecxz
fidivl
test
stos
imul
cmc
add
mov
es
adc
jg
gs
mov
and
ret
or
inc
add
aaa
dec
sub
xor
and
or
inc
xor
shlb
cld
jne
movsl
stc
cmpsl
sub
adc
dec
cld
stos
ljmp
nop
push
flds
into
cmp
movsb
aam
or
push
stos
loopne
insl
cmp
enter
add
outsb
loope
aam
sbb
bound
movsl
rcrl
jmp
mov
jne
and
rclb
stos
inc
loope
or
cmc
rcr
or
sbb
mov
dec
push
cmpsb
adc
xlat
movsl
cltd
testl
xchg
mov
cmc
rorl
je
xchg
notl
scas
jmp
mov
pop
jo
jle
shl
or
cmp
imul
cmp
adc
adc
xchg
push
jge
call
sbb
mov
ljmp
mov
mov
or
out
fnstenv
and
out
push
pop
ret
stos
jmp
imul
fimuls
xchg
sbb
cmpsl
jbe
in
aaa
push
loop
repnz
xor
in
mov
xor
jg
add
out
fbstp
jnp
add
out
pusha
xor
je
std
lret
movsl
sbb
sahf
data16
in
mov
push
daa
loope
cmp
lahf
and
rcrl
inc
dec
lret
pop
jge
test
rclb
shlb
pop
adc
xor
and
lahf
mov
popa
or
push
cltd
movsb
sub
mov
jmp
dec
and
inc
inc
pop
imul
xchg
arpl
xchg
scas
int
mov
out
jle
push
pop
scas
push
fldenv
adc
jecxz
pop
add
mov
es
mov
push
jnp
xchg
or
sub
sub
sbb
test
cs
cmpl
sub
inc
mov
push
sbb
out
jecxz
ja
lahf
jne
pop
inc
jnp
es
pop
xchg
dec
add
bnd
and
jns
add
add
or
sbb
and
xlat
xor
or
cmp
jle
sub
test
add
push
rcl
stos
cmp
cmpsl
inc
add
xchg
insb
dec
and
mov
popf
insb
or
popa
std
lods
std
je
cmp
int3
gs
jmp
push
add
ja
inc
cmp
mov
mov
sub
popf
or
jp
jnp
inc
ss
mov
lods
lds
icebp
mov
add
sub
inc
arpl
cli
loopne
js
lret
and
mov
call
stos
test
jl
fsub
xor
nop
pusha
inc
mov
sub
ljmp
lds
jl
lea
iret
xor
mov
out
enter
test
add
clc
pop
and
jl
pop
adc
and
sbbl
test
sbb
cmp
neg
pop
outsl
lahf
jge
leave
inc
or
push
sbb
mov
push
leave
pop
loope
icebp
rcrl
or
stos
xor
cmc
cmp
stos
xor
stos
push
mov
adc
dec
push
mov
adc
inc
xor
inc
mov
test
add
inc
in
inc
call
xchg
lock
rolb
pop
dec
ret
jae
loope
push
das
movsb
mov
jmp
imul
loope
jge
push
test
mov
pop
push
mov
jle
push
cmp
cmpsl
mov
lock
add
rolb
adc
aaa
mov
rol
sub
shl
adc
push
pop
pop
jno
cmp
dec
stos
mov
call
adc
pop
push
xchg
dec
mov
test
add
push
xchg
ret
sbb
imul
daa
sbb
lret
push
xchg
out
mov
aad
xlat
sub
inc
sbb
fs
pop
cli
popa
xchg
or
stos
xchg
arpl
or
mov
jp
push
inc
xlat
ret
js
xchg
repz
scas
aaa
aad
es
push
mov
sarb
jp
or
mov
ret
cld
jne
les
cmp
cmp
mov
lret
fwait
dec
ret
adc
cmpsl
addr16
push
cmp
leave
mov
sub
or
cmp
cld
add
stc
ds
lret
test
aam
sbb
ficoml
push
sbb
ret
and
and
and
jno
in
jnp
sbbb
loopne
lock
call
mov
iret
lods
inc
mov
outsl
sbbb
gs
test
dec
lret
jp
adc
inc
dec
call
cmp
cmp
xor
push
in
mov
mov
push
fwait
add
xchg
lds
push
or
or
add
sub
inc
and
xchg
add
sub
mov
rcrl
add
add
shl
sbb
insb
pop
and
cmp
rorl
mov
data16
xor
out
roll
nop
inc
inc
xchg
and
adc
rolb
mov
mov
jb
rol
adc
pushf
cmpb
inc
cld
inc
mov
scas
push
aad
cmp
cltd
dec
add
mov
add
jbe
cwtl
loopne
leave
repz
bound
rorl
xchg
in
adc
xor
sub
xor
push
mov
stos
in
aad
loope
aaa
sub
xchg
cmpsb
adc
adc
scas
test
and
sub
pop
scas
aad
dec
jbe
pusha
mov
adc
leave
mov
nop
lret
lods
cmc
ret
jne
jl
push
mov
insb
sub
mov
mov
add
sbb
mov
dec
test
out
cmp
out
daa
daa
sbb
sbb
inc
jns
pop
ffree
jb
add
pop
sbb
jo
cmp
jb
dec
and
or
les
sub
xchg
out
mov
inc
mov
popf
andb
xlat
outsl
icebp
jmp
mov
sbb
lea
pop
imul
lods
scas
clc
insl
lods
jmp
and
into
xor
outsl
loop
loopne
pop
andps
iret
cmc
popa
sbb
push
sbb
add
scas
ds
mov
arpl
push
push
rcrb
bound
sbb
mov
cltd
fiaddl
fstpl
mov
add
or
movsl
jno
and
sbb
leave
add
add
jp
lock
hlt
dec
mov
popa
pop
mov
stos
shlb
xchg
and
jns
dec
mov
addr16
pop
inc
ljmp
popf
jno
ficoms
loopne
xor
xor
inc
ljmp
cmp
fistpl
insb
mov
push
jge
lret
sbb
sbb
test
push
mov
adc
rolb
push
fsubs
pushl
lahf
xor
sub
scas
mov
mov
and
sbb
mov
pop
cli
xchg
out
out
mov
and
jno
cli
insb
jp
cmp
inc
pop
sbb
add
lahf
sbb
das
dec
imul
and
mov
inc
fldt
jmp
jo
push
cmp
aam
mov
sbb
cmpb
test
std
popf
fimuls
lea
sub
call
push
lret
stos
ret
rol
dec
sub
cli
push
fwait
cmp
inc
mov
mov
jbe
leave
xor
jl
xchg
mov
push
mov
imul
or
xlat
les
sbb
sub
pop
xor
loopne
mov
stos
pop
ret
pop
test
xor
outsb
rolb
adc
xor
dec
repnz
or
leave
or
lock
repz
loopne
or
xchg
jle
inc
push
mov
bound
cmp
sub
add
xor
mov
loope
push
or
jnp
jne
mov
loope
testl
inc
imul
test
out
dec
inc
dec
mov
gs
jbe
int3
sbb
mov
sub
popf
sbb
cli
and
cmpsl
pop
ja
clc
cmp
adcl
int3
xchg
add
sub
icebp
push
jno
dec
cmpl
rcr
pop
mov
bound
push
cmc
aam
mov
inc
mov
pop
sbb
adc
pop
fisttpl
scas
sbb
add
pop
mov
insl
clc
arpl
jns
xlat
sbb
stc
dec
sahf
int3
mov
inc
mov
mov
push
data16
in
sub
pop
out
cmp
rorb
or
mov
push
xchg
pop
or
mov
mov
cmp
push
movmskps
pop
dec
popa
adcb
mov
lret
pop
mov
push
mov
push
jne
inc
push
lret
sub
dec
push
lods
in
push
xor
xchg
js
dec
fwait
or
mov
rcl
into
sub
mov
jle
mov
aad
push
pushf
push
scas
rcrl
mov
sbb
movsl
mov
rcrb
sub
scas
sahf
js
and
aam
push
pop
mov
lret
adc
jbe
and
dec
jle
mov
js
add
cltd
sbb
fdivr
or
xchg
ret
lret
les
xorb
rolb
push
bound
in
pop
xor
sbb
sbb
sub
pop
leave
xchg
cmc
pop
cmpsl
jmp
int
sub
add
outsl
lock
push
or
adc
fildll
mov
ret
push
inc
mov
mov
out
fnsave
out
add
popa
cmpsl
xor
cmp
data16
sub
insb
fcmovne
xchg
out
push
out
mov
movsb
dec
sti
sub
push
pop
addb
mov
shl
jns
loopne
js
pop
fmull
add
mov
adc
sbb
and
test
rorb
dec
xor
movsl
aam
test
lock
insb
push
push
xchg
loopne
stos
adc
adc
inc
inc
jecxz
bound
iret
add
jecxz
in
in
loop
adc
sahf
push
iret
dec
push
push
cmp
dec
jmp
mov
popa
negl
fidivs
pop
out
cmpb
sub
jg
das
mov
xchg
iret
ret
cmp
pop
and
call
mov
xchg
test
cs
mov
roll
xchg
xchg
pop
js
and
popa
shrb
cmp
bound
mov
mov
inc
or
rcll
or
xchg
aam
add
dec
callw
mulb
xchg
loop
mov
adc
mull
seta
xor
adc
fs
xor
sti
and
adc
mov
popf
into
push
loopne
adc
add
in
movsl
adc
rorb
pop
stc
mov
cwtl
rcl
mov
test
inc
in
sub
cld
sti
es
sbb
mov
xchg
pop
adc
ret
enter
and
lea
sub
out
cli
pop
sbb
addr16
adc
dec
sbb
jecxz
scas
push
xchg
jmp
xchg
jnp
movsl
test
lea
sahf
loopne
loope
add
pop
rolb
dec
jnp
negb
sbb
sbb
call
ret
stos
adc
sbb
push
repz
mov
push
cwtl
andl
inc
or
mov
jo
mov
mov
mov
lcall
gs
shll
mov
mov
lods
lods
fs
adc
jecxz
cmp
js
push
cli
push
xor
lcall
aam
mov
mov
jne
mov
xchg
or
pop
test
bound
pushf
daa
mov
std
jno
imul
andps
hlt
mov
pop
dec
push
in
jle
cmpsb
test
mov
and
int3
and
int3
sub
mov
les
call
out
sbb
outsl
pop
test
shll
jbe
mov
stos
cmp
das
cli
test
mov
or
sbb
nop
insb
xchg
fs
je
int3
inc
lock
daa
or
aam
jnp
mov
test
enter
js
mov
aaa
sub
hlt
sub
pop
or
shll
sub
mov
mov
fldcw
mov
push
add
and
cs
mov
sbb
movsb
inc
es
push
sub
pop
test
subps
icebp
sub
call
dec
sahf
pop
lret
jmp
ret
mov
push
dec
aas
xorb
jmp
mov
ret
fwait
stc
dec
mov
and
and
loope
and
push
and
add
sar
add
sbbb
or
add
cmp
sbb
sahf
clc
shrl
inc
hlt
dec
xchg
dec
cmpsl
pop
mov
cmp
mov
sbb
sbb
adc
adc
mov
movsl
or
jnp
jae
mov
mov
mull
sti
mov
fnstsw
add
add
addb
ds
xor
in
movsb
pop
inc
push
adc
cmp
or
daa
int3
sub
fadd
out
xchg
das
inc
push
lea
pop
int3
push
js
xchg
mov
jle
and
sbb
lret
insb
cmp
hlt
mov
lds
ret
mov
mov
lcall
fmul
add
lahf
movsb
adc
pop
xchg
subb
and
add
and
cmpsb
cld
pop
push
outsb
mov
add
or
lock
sub
popf
ret
push
sbb
lock
dec
pop
das
adc
std
clc
inc
mov
pop
add
ds
enter
cmp
dec
jb
xlat
dec
enter
jne
lds
ljmp
inc
mov
dec
je
sahf
aad
shrl
jle
movsl
shlb
loopne
mov
pop
test
xor
cmp
jae
aas
data16
cmp
bound
movsb
xchg
push
aaa
ss
gs
and
mov
insl
mov
fisubrl
ljmp
xchg
sti
js
nop
add
jg
repnz
pop
fldl
dec
mov
outsb
and
push
and
cmpsl
iret
notl
push
aam
rclb
test
mov
adc
ja
cmpl
mov
mov
add
jno
push
movsl
fsubrp
daa
ja
hlt
hlt
ljmp
sahf
mov
popf
pop
cmc
test
out
mov
pop
xchg
ljmp
testl
daa
sbb
jnp
insb
pop
fdivs
aad
in
sbb
inc
cmc
hlt
ret
addl
sbb
and
xor
popa
negl
iret
pop
call
fwait
jp
icebp
dec
pusha
mov
cmp
xor
xor
sbbl
push
mov
lods
or
aad
aam
lods
daa
icebp
je
jmp
orb
push
pop
shrb
pushf
mov
push
push
subb
ss
lahf
subb
sub
and
scas
iret
jo
sbb
or
inc
ljmp
ljmp
incl
add
negl
mov
and
or
repz
pop
pop
mov
or
inc
inc
and
mov
sub
pop
mov
mov
das
cmp
pop
adcl
mov
in
fs
nop
fcomp
cwtl
cmp
loope
js
pusha
js
push
sbb
or
push
jne
decl
insl
adc
mov
dec
adc
sarb
mov
test
in
mov
pop
and
cmpsl
fcmovnb
paddsw
nop
jmp
pop
sbb
aas
loop
inc
adc
les
xlat
mov
ds
mov
dec
cmpsl
mov
ret
inc
xchg
xchg
lds
mov
jo
cmp
sbb
es
leave
imul
test
and
and
xor
bound
insb
adc
and
xchg
push
fistpll
ds
push
xchg
outsb
jg
movl
loope
or
jg
add
or
pop
daa
lds
pop
shlb
sti
es
or
add
es
or
andl
pop
clc
mov
sahf
loopne
adc
xchg
pop
push
adc
or
jl
add
xchg
jl
sub
ja
adc
mov
das
xchg
stc
sub
cmp
popa
test
test
push
pushf
pop
push
fs
pop
outsb
cmc
push
popf
cmp
sbb
pop
jp
clc
loope
push
push
and
cmp
jmp
dec
xchg
adc
push
sbb
js
inc
adc
iret
push
ss
mov
sbbb
cmc
jmp
jle
in
clc
mov
or
or
mov
inc
adc
arpl
sbb
sbb
out
sbb
inc
mov
xor
jp
pop
dec
and
push
stos
push
push
loopnew
pop
movsl
mov
push
jp
in
lret
jae
lds
push
add
dec
jecxz
test
adc
in
pop
shlb
sti
sbb
rcr
inc
in
pop
mov
mov
icebp
sub
call
mov
fs
jle
inc
popa
mov
push
mov
mov
mov
and
mov
sub
popf
cs
test
mov
cmp
mov
mov
popf
lcall
gs
xor
add
mov
rcrl
popa
loope
shll
into
stos
cmpsl
mov
or
adcb
sub
fiadds
mov
shr
pop
insb
dec
in
push
mov
add
test
cmp
mov
and
mulb
les
jg
push
loop
test
dec
add
ja
lret
push
jl
jecxz
push
xor
mov
cmovb
sahf
aam
inc
fistl
pop
pop
js
call
mov
aas
es
xor
fists
insl
shll
xchg
and
rorl
sbb
add
fsts
popa
and
xorl
test
cmpsb
sbb
push
psubw
shll
cmp
in
mov
out
ffree
stos
dec
mov
test
loopne
sbb
daa
jecxz
mov
rcr
popa
inc
jge
movl
scas
sub
and
popa
out
fisubrs
movsb
mov
dec
jp
sbb
push
and
sbb
inc
pushf
mov
push
test
stc
ljmp
cmpl
mov
sbb
push
cs
adc
adc
mov
mov
jmp
jne
push
sbb
int3
add
addr16
fcomi
xor
xchg
insl
and
aad
rcrb
push
xor
pop
sar
cld
lods
sbb
inc
push
lods
cmp
addr16
les
mov
mov
mov
lea
pop
push
cmpsl
pop
xor
int3
mov
jnp
pusha
mov
dec
sbb
lahf
add
prefetch
or
sub
mov
cmp
pop
ss
pop
movsb
xor
insl
jp
sub
lods
arpl
mov
push
xor
xchg
mov
popf
add
xor
add
and
pop
ret
sub
aaa
dec
roll
rcrl
cmp
les
sub
mov
int
pop
je
sub
sub
mov
ficoms
je
push
and
mov
adc
inc
push
lods
lods
cmp
xchg
loopne
inc
sahf
mov
xor
in
inc
xchg
jge
or
ficoms
inc
repnz
jl
cmp
std
test
push
clc
xor
push
test
cmpsl
add
jb
test
in
push
adc
js
pop
test
ret
sahf
adc
ficomps
mov
mov
xchg
test
aaa
xchg
int3
popf
xchg
or
jmp
cli
push
repnz
xor
movsl
pop
test
pop
mov
add
cmp
sub
aad
mov
xchg
pop
push
movsb
cmp
data16
insb
int3
jbe
xchg
mov
push
mov
pop
rcrb
inc
ret
shrl
adc
pop
lret
jbe
and
cmovb
orb
ret
enter
xorps
bound
loopne
pop
xchg
xchg
add
dec
mov
fsubrl
mov
shrl
mov
es
mov
lods
mov
inc
mov
pop
shr
cmp
or
mov
or
pop
or
adc
jmp
rolb
sbb
lods
popa
sub
orb
add
test
or
pusha
insl
add
mov
test
add
insb
mov
cs
out
aad
or
rcll
jmp
cli
mov
jb
dec
add
icebp
mov
inc
push
lcall
sahf
jp
xchg
push
sbb
push
sbb
or
sub
adc
jns
or
mov
cmp
notb
inc
ljmp
push
xchg
cmp
inc
jge
sbb
mov
pop
dec
cmp
mov
and
call
fcmovb
arpl
mov
sbb
pop
pop
mov
or
sub
dec
cmp
jo
out
movsb
jo
xor
cli
jbe
sbb
loop
sti
scas
hlt
cmp
push
pop
xor
xor
xor
xor
mov
inc
icebp
xchg
adc
xchg
ja
mov
ja
jns
je
test
out
mov
xorl
sbb
sahf
push
cmp
leave
xor
clc
imull
and
push
xchg
ljmp
pop
jle
mov
cmpb
sbb
sbb
mov
in
cs
xchg
ss
es
jg
or
adc
daa
fs
push
nop
push
xor
or
scas
outsb
or
in
adc
repnz
xlat
mov
loop
ds
push
addb
xchg
cld
mov
out
invlpg
mov
xchg
test
pop
and
clc
outsb
dec
sti
in
push
fdivrs
xorb
rcrb
repz
pop
mov
dec
jl
cmc
loope
adc
push
add
add
lahf
lds
jg
ret
pop
xchg
movsb
movsl
rol
ds
add
cmp
es
adc
fldt
rolb
lcall
data16
push
mov
es
pop
jmp
outsl
push
jnp
sub
fsts
mov
pop
fisubl
hlt
fisttps
xor
push
test
and
es
lock
cmpsb
test
sbbl
fwait
ds
adc
or
rol
daa
enter
pop
fildll
outsb
scas
xor
add
cmp
lret
fucomip
mov
dec
je
cmp
leave
jl
sbb
rcll
ret
or
stos
inc
js
adc
mov
scas
movsb
cmp
cmp
sub
or
test
push
inc
cmp
aam
mov
std
mov
pop
mov
xchg
bound
inc
mov
xlat
and
sbbl
aaa
ds
inc
rorl
out
test
jp
dec
sub
pop
into
mov
adc
sbb
push
movsl
cmpl
jp
in
inc
or
out
mov
mov
jne
pop
pop
lock
xchg
scas
mov
movsl
xchg
nop
pusha
shlb
out
push
sbb
ret
ljmp
cmpsl
mov
push
jno
stos
std
adc
jno
pop
xchg
mov
cmp
mov
in
push
jecxz
push
inc
insb
mov
xor
sbb
mov
cmc
add
mov
bound
xchg
xor
or
pop
stos
jns
mov
aas
ja
push
cli
jno
daa
add
inc
cli
mov
and
or
xor
xor
pop
ret
sub
ret
into
and
jno
dec
ljmp
adc
bound
addr16
arpl
pop
test
dec
repz
insb
loop
pop
sbb
inc
mov
test
or
mov
add
int
dec
call
sub
xchg
loop
xor
ljmp
push
movsl
xor
sarl
sahf
jb
jb
arpl
lds
ljmp
das
mov
les
sahf
mov
int3
clc
jg
rcrl
loope
mov
fdiv
dec
ja
push
lea
stos
das
sub
movsb
stos
loope
lret
adc
adc
xorl
orl
out
mov
push
cmc
mov
add
shr
xor
push
adc
mov
lods
cmovs
push
or
addr16
push
jmp
popf
inc
movsl
add
inc
jl
sbb
gs
push
pop
repz
push
cmpsl
call
add
scas
imul
pop
mov
jne
inc
es
shll
xor
addr16
repnz
sbb
push
mov
mov
push
mov
bound
pop
mov
mov
pop
jp,pn
arpl
cmpsb
xchg
or
cmp
and
adc
or
stos
out
push
sbb
dec
or
roll
imul
jo
cmp
jecxz
std
cmp
mov
jmp
lock
sub
aaa
xchg
pop
popa
popf
add
xor
push
or
or
adc
jecxz
sub
jge
xchg
or
cmp
sbb
rolb
vpor
test
call
jg
cmc
shr
je
pop
cmpsl
mov
scas
mov
aam
rol
lret
push
or
xor
mov
leave
or
aaa
ret
xlat
add
xor
xor
push
xchg
jbe
adc
push
inc
inc
cmp
and
xchg
test
pop
js
or
iret
inc
cli
mov
addr16
push
adc
xor
mov
outsl
sbb
enter
mov
mov
nop
cmp
jmp
fbstp
ret
inc
pop
mov
clc
or
aam
mov
rorb
adc
rolb
cs
es
in
or
test
xorl
jg
push
stos
xchg
test
std
test
shrb
out
mov
mov
aas
pop
adc
cwtl
push
out
aas
dec
xchg
push
ret
or
sahf
and
mov
push
das
js
mov
mov
out
xor
icebp
jge
shufps
mov
cld
rorb
mov
dec
es
adc
mov
imul
cmpsb
adc
sub
dec
stos
jns
fdivrp
pop
pop
shl
or
sti
xor
call
or
mov
imul
jmp
test
cmp
push
lret
test
mov
mov
sbb
pop
jecxz
lods
xchg
sti
cmp
movsl
js
add
xor
lret
and
gs
inc
inc
xor
xor
push
or
adc
push
jl
push
cmp
push
stc
cwtl
test
ret
es
hlt
hlt
mov
hlt
inc
cmc
inc
int
repz
or
stos
mov
lret
jl
cmp
jmp
add
push
jo
test
clc
scas
sbb
adcl
js
testl
ret
xchg
sbb
mov
loope
repz
sub
ficompl
push
dec
mov
mov
xor
pop
addb
dec
jne
push
mov
or
xchg
jle
ret
lock
or
sbb
or
scas
fidivs
adc
xlat
sbb
pop
icebp
xor
cs
jo
test
or
out
aaa
push
or
mov
xlat
gs
sub
adc
subb
jg
fidivs
pop
or
and
adcl
call
ret
xorb
lock
daa
loopne
enter
cltd
mov
mov
fidivl
out
lea
test
inc
js
call
jno
xchg
aaa
lcall
dec
jg
mov
lea
or
test
les
xchg
mulb
fisttpll
loop
cmpb
add
stos
fadd
ficoml
and
pop
aaa
aas
mov
mov
xchg
jmp
lea
and
add
add
sahf
in
js
test
pop
push
leave
sti
test
mov
loope
enter
mov
icebp
adc
jno
loop
call
mov
adc
mov
inc
in
and
cmp
in
ljmp
je
inc
or
data16
and
jle
and
fmull
nop
jmp
clc
nop
lods
subl
into
ljmp
hlt
xchg
orl
push
lcall
add
inc
inc
ret
add
pushf
cwtl
cvttps2pi
and
test
aas
mov
and
mov
aas
add
pop
cmc
cmp
mov
pop
sbb
cmp
mov
push
int3
pop
mov
mov
sub
ret
mov
cwtl
or
mov
adc
or
push
inc
push
clc
lea
pop
aad
add
or
ffreep
sbb
js
jg
xor
rcrl
jns
push
lock
das
mov
js
cmp
fs
inc
xchg
lock
inc
pop
push
sbb
push
mov
push
loopne
xor
loopne
pop
pusha
push
popf
jle
cmp
pop
cmp
hlt
bound
inc
mov
jnp
mov
lret
lahf
enter
sbb
add
pop
sbb
test
mov
movsb
shl
xor
fisttpl
adc
xchg
scas
push
enter
adc
pop
inc
mov
pop
clc
enter
add
add
cmp
push
loopne
mov
aaa
insl
fsubp
jecxz
insl
pop
add
fdivrs
adc
fidivl
decl
sahf
or
mov
inc
or
xor
push
pop
ds
inc
incb
dec
or
ja
lcall
push
jo
cmp
xor
ja
add
cmp
fsub
and
mov
and
jp
or
insl
jnp
mov
xchg
sub
adc
cmpsb
sbb
push
jl
mov
jmp
xchg
or
ror
mov
lea
jmp
mov
mov
push
leave
mov
push
jge
cmpb
ljmp
mov
xor
cmp
psadbw
cmp
cmp
xchg
adc
inc
stos
mov
popf
andl
mov
call
repz
push
loope
fisttps
dec
enter
cltd
dec
inc
test
xor
pop
int
fucomp
cmp
mov
pop
and
push
push
cmp
and
fildll
mov
xchg
out
orl
ljmp
idivl
push
enter
lods
mov
adc
ss
insl
int
xchg
bound
loopne
xor
push
mov
mov
pop
dec
push
jmp
clc
movsb
jae
xchg
pop
lods
mov
push
scas
fmul
add
ret
mov
rcl
cmp
add
aaa
andl
inc
cmp
aam
mov
sahf
cmp
inc
test
out
push
sub
nopl
sarl
ds
pop
stos
das
cmp
test
notl
mov
test
repnz
lds
mov
repnz
mov
cmpsb
scas
push
add
adc
hlt
mov
scas
push
jno
mov
ds
jns
xchg
or
xor
test
add
mov
ret
lcall
adc
push
pop
dec
or
push
fnstenv
push
lds
test
and
xor
data16
jb
andl
int
sub
xchg
sbb
sar
aad
pop
pop
lcall
std
mulb
lods
es
push
sub
inc
scas
les
out
pop
lcall
jle
ret
inc
jnp
push
adc
loope
adc
or
test
test
daa
pop
pop
mov
push
ds
mov
mov
sub
inc
js
sarb
mov
sub
jbe
xchg
push
pop
mov
jb
xchg
push
add
ljmp
pushf
nop
in
jno
or
sub
bound
xor
cmc
rorl
cmp
cmp
jg
add
es
movsl
fwait
sub
mov
or
adc
mov
insb
mov
adc
jo
es
cmpsb
inc
xor
sbb
xorl
lods
mov
xchg
iret
dec
aaa
xchg
or
push
not
add
loope
mov
sbb
in
and
sbb
jae
dec
cmp
push
lret
inc
jge
pusha
push
cmp
pop
cmp
add
adc
shlb
out
arpl
fcoml
xor
jns
aad
add
outsb
mov
popa
ljmp
pusha
in
ja
pusha
jmp
xor
lods
dec
or
adc
les
push
pop
add
rcrb
jns
xchg
fsubrs
and
fadds
mov
adc
xchg
sbb
insl
mov
loopne
add
mov
in
leave
mov
imul
and
mov
shll
into
call
loopne
test
inc
cmp
scas
push
mov
jp
and
pop
mov
cmc
lock
push
add
add
or
in
add
pop
adc
leave
repz
lahf
mov
scas
mov
add
dec
jae
dec
out
jnp
out
xor
in
xchg
insb
ret
push
les
jae
scas
aaa
faddl
jno
jle
mov
cmp
shl
add
jge
mov
inc
daa
xor
sub
clc
inc
adc
adc
add
sub
popf
bound
mov
push
outsb
es
stc
inc
lret
push
inc
inc
pop
mov
push
adc
nop
adc
aam
loope
fcoms
xor
pop
sub
movsb
cmp
shl
add
adc
sbb
outsb
cmp
xchg
ds
push
mov
cmp
inc
insb
push
mov
sbb
xor
lahf
pop
je
jnp
and
pop
cmp
ror
adc
xchg
cmp
sbb
dec
call
pop
mov
movsb
scas
frstor
jb
or
arpl
jno
inc
or
lea
jl
pop
or
sbb
push
or
ljmp
stc
or
dec
add
sarl
loopne
and
or
add
cmp
xor
adcb
sarl
xor
decb
stc
or
pushf
aaa
int3
jo
stc
nop
mov
lret
in
mov
or
shl
adc
jg
dec
and
loope
roll
repnz
sub
sbb
xchg
jp
data16
xor
dec
mov
mov
cmp
mov
xchg
call
sbbb
xor
js
fimuls
cmp
cld
adc
adc
sub
sbb
callw
rcll
and
scas
mov
push
rolb
xor
nop
adc
mov
clc
pusha
xor
pop
mov
imul
xor
subb
addr16
pop
sub
adc
fstpl
aas
lock
loope
mov
add
lock
adc
dec
cmpsl
out
push
and
mov
or
adc
xchg
inc
les
mov
xchg
out
test
add
mov
jecxz
pop
cmp
xchg
hlt
push
out
xor
ss
fstpt
clc
xor
adc
arpl
sbb
sbb
daa
aas
add
getsec
dec
cmp
adc
into
dec
dec
dec
mov
sbb
or
adc
xchg
xchg
out
sbb
mov
dec
js
lea
cmpsl
out
and
js
push
pop
jg
test
lcall
adc
mov
push
movsb
inc
mov
cmp
movsb
pushf
nop
xorb
sbb
push
xor
xchg
rcrb
mov
cmp
es
inc
xchg
xor
rcrl
test
mov
push
lea
add
and
cmpsl
imul
xor
rcrb
ss
sub
xchg
sti
jmp
int3
ss
pop
call
inc
imul
pop
lods
jecxz
pop
clc
jo
cltd
icebp
adc
jmp
dec
add
mov
push
sbb
dec
rcr
jb
rorl
add
dec
mov
mov
int3
nop
packssdw
js
add
pop
pusha
stos
scas
sub
adc
xor
loopne
jno
mov
mov
mov
lods
sbbl
faddl
repnz
sbb
lret
push
mov
fildll
popa
jnp
ret
imul
xlat
xchg
icebp
es
mov
cmc
or
mov
add
gs
shlb
lahf
cs
popa
adc
aas
push
inc
ficomps
sbb
sub
xchg
cli
push
and
aad
dec
or
dec
xchg
ss
mov
lea
ss
xlat
and
cmpsl
xchg
and
scas
cmpsl
inc
pop
cmp
pop
loope
and
es
addl
sbb
pop
jmp
adc
sub
cld
add
sub
xchg
cmpsb
lock
pop
push
mov
jp
xor
xchg
lret
add
bound
lods
xchg
mov
movsb
push
lea
mov
js
fldl
out
pop
push
jmp
je
sarl
xchg
out
popa
lret
inc
cmpsl
or
push
emms
popa
in
sbb
ret
lcall
addl
test
lahf
cli
xchg
push
or
aam
cmp
data16
popf
pop
out
sbb
sahf
pop
mov
and
dec
mov
movsl
cmp
add
adc
test
mov
mov
repnz
lds
jecxz
icebp
cmp
jecxz
jno
dec
cmpsl
pop
fldt
xor
js
mov
add
aas
loopne
or
mov
outsb
adc
outsl
cmc
jge
jo
out
dec
aam
xor
jo
xchg
lock
xlat
sbb
mov
lock
js,pt
push
mov
icebp
inc
pop
cmpsl
int3
shl
push
sbb
adc
ss
or
movsl
add
fidivrs
arpl
sti
mov
adc
ret
rorl
ficoml
scas
stc
mov
addr16
aad
popa
fbstp
or
inc
pop
rol
xchg
xchg
or
outsb
movb
scas
pusha
pop
xor
fmul
sbb
ljmp
push
popa
in
fcmovnu
adc
jo
imull
add
js
je
xor
mov
aam
test
sbb
aad
ror
aas
add
cmp
sbb
and
cmp
scas
push
fst
adc
jecxz
cmc
and
xchg
mov
xchg
cmpsb
dec
and
cmpl
push
daa
pop
push
or
cmpsl
or
mov
xchg
mov
cmp
mov
out
insl
mov
idiv
mov
mov
dec
inc
mov
enter
pop
in
mov
mov
add
add
mov
and
ja
cmpsb
icebp
or
mov
outsl
jne
mov
sbb
mov
lret
add
mov
sub
jecxz
test
icebp
pop
gs
push
test
out
or
mov
pop
dec
rcll
mov
jo
andb
add
sbb
repz
mov
dec
inc
adc
inc
jge
je
aad
aas
je
mov
addr16
call
icebp
ja
dec
lea
inc
movsl
mov
fildl
std
addr16
cwtl
dec
sub
pop
arpl
pusha
inc
jmp
test
mov
mov
or
sbb
pop
inc
shlb
xchg
shrb
add
lret
mov
lock
xchg
and
cmp
push
in
xchg
cmpsb
sub
xor
aaa
fnstsw
xchg
into
xchg
pusha
les
aam
frstor
les
push
dec
call
xor
push
je
pop
jecxz
or
dec
and
out
fadd
lret
dec
mov
ret
fimull
or
pop
mov
cmp
cmc
mov
mov
aad
cwtl
xorb
hlt
lcall
rcll
stc
xor
cs
cld
push
aaa
inc
xchg
stos
je
aam
xchg
xlat
out
and
or
push
push
cmp
pop
pop
sub
cmp
sbb
fcoms
cmp
cmpb
cmpl
lock
testl
test
pop
adc
sbb
or
mov
mov
adc
xchg
mov
mov
cmp
rorl
push
or
dec
incl
pop
mov
aas
inc
cmp
jmp
mov
movsb
inc
jecxz
push
jbe
test
lods
push
adc
cmp
pop
loope
aad
or
lcall
mov
xchg
xchg
std
push
stos
popa
stos
sbb
cmc
push
in
dec
cmp
pop
push
sub
mov
cmp
xchg
pop
shll
test
or
addr16
jo
mov
stos
xchg
mov
rclb
dec
sub
adc
popa
jb
in
lock
adc
mov
pop
xor
ret
add
dec
sbb
scas
addb
rorl
add
pop
xor
inc
mov
int
adc
das
add
daa
ljmp
pop
pop
xchg
xchg
ds
aam
mov
in
inc
and
jne
jb
pusha
push
fstl
cmp
sub
xor
dec
lcall
jle
push
out
sbb
adc
dec
push
andb
jmp
adc
sbb
mov
pop
nop
or
xor
jae
adc
int3
mov
dec
dec
mov
pop
adc
xor
xchg
ss
mov
xchg
mov
popa
or
addr16
xor
sub
and
pop
push
hlt
shrl
sub
xor
inc
xchg
into
mov
adc
repnz
cmp
dec
in
jb
dec
and
shlb
or
add
add
dec
pop
lds
in
jp
dec
imul
and
inc
jg
jmp
imul
adc
mov
ds
dec
mov
js
int3
mov
dec
aas
loopne
inc
mov
sub
xor
imul
mov
jne
movsb
in
nop
mov
scas
inc
inc
test
dec
out
adc
mov
pop
ja
push
sbb
aas
mov
add
push
sbb
scas
les
test
test
jo
push
imul
fsubl
stos
mov
or
scas
loopne
mov
lock
std
test
or
pusha
outsb
jl
pop
jno
mov
mov
adc
ficompl
mov
es
cld
cli
dec
fwait
cltd
sub
jmp
mov
xchg
jo
push
push
std
jno
pop
mov
int3
and
loopne
sub
stos
arpl
aam
cmp
hlt
fimuls
xchg
jno
mov
lods
out
lret
add
popa
add
test
xchg
jns
rcl
jmp
aad
shlb
xor
rcrl
mov
sub
pop
mov
ret
push
mov
push
and
push
adc
ret
adc
add
popf
xor
movsb
xor
mov
mov
dec
or
out
inc
xlat
mov
movntq
fsubs
sub
mov
enter
mov
jle
sbb
xchg
je
andl
cmp
push
aam
cmpsb
in
push
sti
jbe
ds
adc
and
shll
nop
js
and
into
in
xlat
adc
jmp
xchg
mov
dec
sti
xor
mov
or
cmp
xchg
incb
dec
mov
lods
icebp
or
outsb
cmp
je
cli
jno
mov
popa
fwait
test
xchg
add
push
dec
cmpsb
mov
stos
test
lods
add
fisubl
out
stc
cwtl
push
mov
mov
sti
andl
mov
sbb
mov
in
adc
rolb
push
pop
or
dec
jae
loopne
mov
sbb
test
dec
inc
dec
aas
mov
pop
cmpsl
ljmp
inc
testb
mov
xchg
xchg
jno
add
and
jg
jl
es
mov
js
jmp
jecxz
dec
cmp
insl
mull
mov
aam
nop
mov
xor
lods
shrl
push
ds
mov
mov
jne
pusha
cmpsl
and
repnz
bound
loope
xlat
or
outsb
jecxz
fcom
aad
xor
call
sbb
fdivrl
dec
int
test
fildl
push
and
fcomps
popa
push
inc
sahf
subb
pop
pop
clc
repnz
jne
hlt
clc
lahf
sbb
ficomps
mov
push
fcmovne
xchg
push
pop
or
jb
sbb
js
xlat
fldt
ss
lcall
lds
or
xchg
cltd
sti
and
mov
test
rclb
dec
and
jecxz
das
add
loope
movsb
or
lock
gs
enter
jbe
and
shl
outsb
mov
int3
sbb
ss
adc
int
push
cmp
scas
push
hlt
pop
pop
shlb
push
jmp
xchg
pop
adc
mov
or
test
pop
inc
in
stos
loopne
data16
push
test
xchg
push
cld
aad
es
mov
out
fxch
pop
sub
adc
xor
cmp
mov
add
cmc
pop
loopne
cmp
sub
into
or
adc
sub
push
and
jecxz
imul
out
cmp
sbbl
in
inc
aam
enter
xchg
mov
lea
fldt
or
je
push
or
sahf
fmul
push
and
movsb
dec
push
cs
dec
xor
aas
dec
bound
rcll
cli
movsb
ja
lret
fcompl
js
popa
test
jmp
popf
jmp
xchg
pop
add
insl
test
popl
insb
repz
into
dec
inc
jge
loope
ljmp
jg
scas
inc
int3
loop
imul
mov
pop
idivb
ret
aam
ss
mov
vsubsd
mov
loope
sub
xor
push
bound
inc
add
inc
add
insb
fisubl
and
popf
push
insl
out
jnp
dec
xchg
les
and
jne
push
das
xlat
jb
mov
xor
lea
sbb
ret
clc
add
ret
mov
mov
movsb
push
mov
sbb
in
aas
sub
hlt
or
adc
imul
xor
xor
adc
sbbb
js
movsl
cmp
ljmp
jae
add
movb
xor
and
cli
mov
fcmovb
jb
pop
sbb
loop
sbb
and
jg
add
push
mov
clc
imul
xchg
loop
and
das
inc
pop
sub
adc
or
lea
rclb
push
cmp
mov
xchg
sbbl
jl
xchg
nop
das
mov
or
mov
ljmp
jg
rcrb
add
bound
stos
stc
mov
dec
add
sub
movsl
push
and
pop
rolb
fisubl
test
mov
gs
push
bound
aaa
rclb
xor
cs
pop
push
cmpps
or
add
push
mov
test
daa
insl
sub
fwait
inc
mov
insb
push
and
push
adc
add
cld
push
filds
jo
cmp
mov
xchg
leave
mov
and
stos
push
sub
mov
add
pop
sbb
mov
icebp
pop
cmpl
js
sbb
inc
fs
loopne
sbb
cmpsb
xor
andb
pop
mov
out
add
aad
dec
sub
out
sbb
jnp
ss
xchg
pop
fiadds
inc
aam
xchg
dec
in
push
pop
xor
and
cld
mov
mov
sub
cmp
push
jecxz
mov
add
je
pop
loop
jo
mov
xchg
into
in
test
adc
mov
mov
sbbb
xor
inc
bts
xor
incl
jecxz
inc
movsl
pop
and
mov
pop
xchg
jo
loopne
mov
mov
jb
jmp
and
movsl
mov
lods
push
push
push
lahf
push
mov
add
inc
int
hlt
xor
or
and
mov
data16
pop
dec
sbb
stc
dec
cli
nop
jl
cmpsl
or
mov
push
push
jmp
xchg
jge
ljmp
inc
mov
push
or
xchg
and
jne
adc
cmpsb
das
cmp
mov
outsl
push
fdivrl
idiv
cmp
sub
mov
mov
sub
mov
lcall
imul
sahf
push
subb
add
sub
test
lcall
mov
adc
and
arpl
mov
fists
push
adc
and
sarb
in
cld
ja
lcall
inc
sbb
ret
xchg
outsl
lcall
jno
aas
or
push
mov
ljmp
jge
sub
arpl
sti
cmp
sbb
dec
mov
and
ljmp
pop
mov
mov
fsts
rol
and
jge
adc
andb
out
mov
addb
mov
pop
xchg
aad
cli
or
push
out
sbb
clc
cmpsl
adc
mov
cld
add
ret
imul
mov
loopne
pushf
test
in
lods
jle
jg
xchg
adc
xchg
out
pop
push
gs
pop
repz
pop
aaa
test
pop
loopne
pusha
or
cmp
shrb
jae
add
jmp
mov
imul
pusha
fimuls
push
mov
aas
jecxz
and
ret
divb
movsb
sub
imul
popa
xchg
pop
mov
pop
in
movsl
pop
mov
rcrb
adc
push
fbstp
mov
clc
mov
addl
enter
test
stos
fdivs
aad
xor
sti
xor
xchg
test
mov
test
mov
popf
in
sub
adc
xchg
mov
leave
std
xor
xchg
pop
or
ja
cltd
adc
mov
jno
pushf
in
cmc
repz
jl
mov
pop
negb
into
cli
push
or
out
test
out
ret
mov
jle
test
popf
mov
mov
pop
mov
mov
ret
xchg
or
lea
into
fisttps
dec
inc
std
popa
popf
mov
orl
shlb
push
fmuls
lock
icebp
ret
jp
inc
jge
adc
pop
xor
loopne
sub
lock
pusha
xor
mov
pop
andl
int
sbb
mov
rcrb
insb
pop
push
je
xorl
mov
ljmp
insl
mov
jbe
test
mov
lods
push
sub
fcomip
popa
and
mov
and
nop
push
test
ss
push
icebp
lds
adc
push
jl
and
pop
notb
mov
sbb
cmp
jle
popf
sbb
bound
sub
das
loop
or
dec
je
sahf
inc
arpl
jno
pop
cs
mov
pop
in
mov
dec
mov
pop
loop
ljmp
outsb
clc
das
lods
or
fwait
pop
push
or
shrb
push
aam
mov
out
dec
mov
sub
mov
enter
cmp
insl
mov
mov
stos
lods
decb
orb
orl
and
or
pop
das
mov
adc
inc
dec
adc
jno
mov
mov
inc
vcomisd
loopne
loop
mov
push
add
mov
imul
jne
add
in
push
test
scas
jno
sub
mov
pop
ss
arpl
adc
xchg
aam
in
in
and
enter
divb
jnp
cs
jmp
je
cli
push
inc
adc
dec
xor
pop
adc
add
push
pop
add
jg
std
add
cmp
and
pop
mov
sub
push
jbe
push
icebp
mov
loope
mov
cmpsl
jg
bound
adc
mov
out
mov
push
fwait
psadbw
rorl
pushf
shl
aas
dec
or
es
lock
imulb
pop
pop
outsb
pop
in
ds
rcrl
fadds
inc
jmp
mov
and
int
out
pop
cmc
add
and
jge
add
in
mov
ficompl
sbb
adc
bound
jge
push
cltd
push
into
fsubrp
bound
pop
stos
scas
scas
dec
rcll
adc
sub
out
and
jmp
ret
jp
cs
ljmp
cmp
mov
es
outsl
inc
jae
mov
and
loopne
mov
adc
lret
jmp
sub
dec
pop
dec
fcoms
jmp
jge
clc
ret
testb
lret
jl
adc
pop
inc
loopne
xchg
call
pop
jge
xchg
pop
add
dec
xor
mov
ror
andb
push
mov
jbe
nop
xchg
test
clc
addr16
push
pop
shlb
mov
ja
icebp
int
and
xor
neg
mov
pop
inc
cld
aas
cs
jg
cli
cmp
jo
inc
add
mov
ds
popa
adc
sub
pop
pushf
icebp
aam
and
xchg
cmc
push
aas
arpl
int3
sbb
adc
jns
add
inc
lods
loop
and
adc
out
inc
call
leave
pop
mov
cmp
mov
call
xchg
mov
ret
in
pop
push
es
pop
add
inc
adcl
rol
mov
mov
fistpl
pop
call
fldenv
ds
cwtl
xchg
mov
scas
cmp
cli
adc
jbe
mov
or
sbb
inc
scas
fwait
or
jl
mov
dec
push
aam
in
add
adc
fisubrl
iret
data16
scas
and
sbb
cwtl
clc
fistps
adc
pop
fs
scas
inc
les
or
cmp
jo
ret
or
sbb
mov
mov
fsubr
dec
pop
adc
sbb
jecxz
imul
stos
inc
data16
push
sahf
xchg
inc
icebp
xorl
push
xor
dec
rcrb
xchg
jo
rcrb
mov
divb
mov
cmpsb
gs
cli
push
scas
xchg
imul
mov
mov
dec
mov
loopne
hlt
inc
fbstp
repnz
pop
sarl
imul
test
subl
lea
enter
mov
push
inc
cmp
sbb
jo
add
popa
xor
mov
adc
add
push
lds
cmp
xchg
cld
mov
xorl
adc
cmp
mov
add
lea
add
fiaddl
fsubr
cmp
mov
add
cld
xchg
stc
mov
add
sahf
sbb
outsl
pop
sbbl
cmpl
adc
out
sbb
pop
mov
add
adc
gs
lods
push
ds
or
or
test
mov
mov
inc
push
or
lcall
call
cmp
push
push
fsubrs
fisubl
sub
repnz
push
js
and
into
shrl
fadd
xlat
sbb
mov
add
mov
push
insl
or
mov
and
in
jb
aad
cmp
jl
mov
add
push
sbb
dec
mov
mov
or
imul
enter
add
inc
add
mov
jg
push
or
mov
data16
ljmp
or
inc
add
sbb
imul
std
insb
pop
insl
inc
cmp
hlt
aas
adc
push
daa
movsl
sbb
mov
xor
loopne
js
adc
add
and
add
or
mov
jle
cmp
pop
cltd
xorl
jge
lock
mov
iret
dec
adc
push
cmp
xchg
sarb
sti
imulb
je
js
adc
bound
push
int3
js
dec
cmp
xchg
aas
repz
ss
cld
sub
jb
scas
mov
cmp
jb
mov
xor
dec
sbb
xchg
lret
aam
and
lock
mov
decl
xchg
dec
inc
bound
pop
scas
filds
loope
je
push
lock
xchg
adc
jo
mov
or
test
jno
out
das
mov
movsl
mov
loopne
mov
mov
push
sbb
flds
aas
pop
xchg
xchg
xchg
or
mov
push
ret
cld
in
out
les
mov
add
lods
pop
rorl
loopne
or
mov
inc
outsb
inc
inc
lods
fs
inc
cltd
or
bound
inc
xchg
mov
dec
add
shrl
jge
mov
rcrl
pop
xchg
push
sub
or
mov
jle
jecxz
inc
push
sub
loop
push
test
je
or
dec
or
or
mov
ud0
xor
add
fadd
adc
leave
mov
cwtl
push
inc
sti
adc
andb
mov
enter
xchg
jle
js
sub
cli
andl
js
rcrb
loopne
vaddsd
add
aaa
push
test
push
sarb
push
cld
lds
scas
mov
xchg
mov
pop
lahf
mov
loop
xor
arpl
nop
and
push
dec
jge
adc
sbb
test
mov
subb
pop
push
scas
mov
push
add
leave
sub
add
loope
outsb
adc
xor
sbb
popl
or
cmp
shlb
je
loopne
jecxz
push
enter
xor
or
sbb
xchg
or
inc
mov
push
int
xlat
xchg
xor
xchg
notb
hlt
mov
iret
mov
pop
shr
add
mov
outsb
mov
xchg
or
sahf
mov
in
imul
incb
lahf
jmp
mov
decb
js
and
push
sti
test
rcll
ss
dec
cmp
pop
adc
je
insl
inc
lret
or
and
add
dec
hlt
adc
shr
lahf
mov
scas
popa
sahf
sahf
ret
mov
cmp
push
out
test
ret
test
mov
arpl
dec
mov
cmp
fmull
loope
lock
mov
add
notl
fisubs
sub
dec
sub
in
call
inc
aaa
sbb
aad
inc
test
pop
lahf
push
and
fs
push
test
in
pop
pusha
in
cmc
pop
cltd
sub
jbe
pop
and
cmp
pusha
jb
mov
jg
in
xor
jnp
sbb
sbb
or
and
cmc
pop
dec
push
or
or
lahf
adc
icebp
sub
and
call
add
sub
loop
adc
popl
icebp
adcl
jb
mov
mov
adc
adc
xor
cmpl
cmpsb
or
mov
inc
clc
imul
jmp
int
decl
shll
cltd
insl
movsl
sbb
in
push
movsl
repnz
mov
scas
add
outsb
mov
mov
xchg
scas
loop
mov
inc
adc
mov
pop
mov
aad
and
in
push
push
aaa
test
gs
cli
dec
xor
push
cmovg
sbb
ret
movsb
mov
fstpl
rorb
lods
ja
mov
add
xor
out
dec
hlt
daa
rcrb
filds
rorb
adc
cmpsl
inc
mov
fildl
inc
fwait
shll
xchg
xsaveopt
lods
xchg
inc
pop
add
jle
lock
mov
cmp
cmpsb
cli
dec
outsl
in
lahf
push
dec
and
aaa
dec
or
inc
popf
icebp
cmp
and
out
push
jb
mov
sub
xchg
sbb
loope
xchg
jle
movsb
xor
mov
inc
inc
push
push
leave
inc
movsl
pop
jmp
add
inc
mov
enter
adc
push
in
push
ret
mov
xchg
into
cmp
je
pop
aam
push
pop
mov
aam
add
xchg
popa
divb
loopne
lds
xor
jle
xor
push
cli
add
pop
sbb
mov
sub
aas
mov
sahf
rcrl
lea
out
mov
rcrb
jmp
out
clc
cmp
jmp
int
dec
js
push
pop
fnstsw
cmp
or
ret
call
push
push
arpl
add
aad
cltd
push
fs
push
fldenv
aam
addl
push
sbb
es
pop
sahf
or
jp
jp
inc
negl
and
scas
push
adc
arpl
cli
jae,pt
jl
push
call
push
outsl
imul
mov
xchg
jecxz
xchg
push
stc
cld
xchg
aad
lods
and
dec
out
scas
out
es
cmp
sbb
xchg
adc
jbe
lahf
sti
dec
aas
rolb
js
ret
jb
jae
mov
movsl
arpl
popa
loope
inc
cmpb
shlb
aaa
dec
js
add
pop
in
xor
or
xchg
dec
xchg
mov
fldz
rolb
push
dec
loopne
sarb
inc
popa
lods
jno
inc
push
std
outsl
inc
and
in
out
add
pop
push
push
dec
cmp
xchg
nopl
int3
test
or
pop
stos
fld
out
aam
nop
adcl
inc
clc
jo
mov
aad
test
aas
movsb
stos
add
cwtl
mov
aaa
and
sbb
leave
cmc
xchg
cmpl
cmpl
sbb
pop
ljmp
sub
xor
cs
and
cmp
into
dec
hlt
testb
les
mov
popa
jo
adc
ds
pop
clc
xchg
nop
mov
ss
lock
pop
cmp
xchg
es
ret
hlt
fistl
inc
les
call
icebp
and
sub
or
mov
and
mov
je
cmp
test
in
mov
or
mov
rcl
mov
fwait
jle
dec
ljmp
sub
testb
pop
lret
fidivrs
loopne
xor
or
sub
xor
dec
outsl
xchg
hlt
cmpl
adc
das
sub
dec
fldl
lods
clc
adc
ja
inc
repz
sub
arpl
daa
cli
mov
ja
add
outsl
jmp
and
sub
mov
xchg
jne
je
push
aam
cmpb
add
jb
test
test
cmc
movl
mov
dec
mov
push
push
and
rclb
je
pop
push
ljmp
mov
add
int
push
adc
das
or
pop
add
inc
mov
ret
cs
sub
xchg
or
xchg
cmpsb
test
aaa
pop
cmp
push
add
inc
sub
jnp
aaa
ss
ficompl
insb
mov
sub
lahf
rorb
mov
jle
in
mov
in
icebp
fwait
clc
push
stos
push
jmp
mov
inc
lds
std
loope
gs
test
sbb
push
fildll
mov
addr16
ret
and
lods
mov
pop
xchg
and
mov
ss
and
call
sahf
xchg
dec
lods
mov
mov
jbe
hlt
adc
aas
dec
rcrl
mov
jg
jecxz
push
ljmp
jae
or
rorb
test
or
insl
mov
cwtl
test
loope
pop
dec
inc
inc
xchg
insb
dec
call
xlat
pop
lcall
mov
xchg
pusha
sbb
push
imul
mov
jge
icebp
push
shlb
inc
push
outsl
lea
js
cld
inc
push
imul
xor
fadds
push
imul
xorb
ret
out
xchg
jns
repnz
dec
mov
test
push
test
fsubl
adc
rclb
inc
pop
push
inc
roll
inc
and
fbld
or
faddl
adc
call
rol
adc
dec
jbe
stos
mov
push
les
loop
cmp
fcmovbe
or
xchg
stc
scas
or
or
orb
aad
cmp
lds
jnp
cmp
cs
jle
jg
stos
in
sti
je
in
inc
pop
cli
mov
lds
mov
adc
xor
rcrb
pop
pop
nop
std
pop
rcrb
jmp
sbb
push
test
inc
test
insb
mov
dec
sub
xor
inc
xchg
out
pop
fdivr
xchg
xchg
mov
xchg
jne
fsubr
dec
loope
mov
or
loope
inc
mov
push
ret
cmpsb
adc
xchg
jp
ret
add
pop
pop
icebp
add
test
push
mov
cld
sbb
icebp
movsl
scas
adc
xor
aaa
inc
or
pop
jl
mov
xchg
outsb
lds
or
jg
push
lahf
aam
mov
cltd
mov
lea
jno
sub
out
scas
enter
cmp
dec
sub
negb
add
subb
mov
mov
cwtl
mov
cltd
insl
mov
sbb
iret
aam
or
into
and
sbb
mov
das
into
lret
mov
sub
leave
js
jge
mov
clc
cmpb
fmull
xchg
push
pop
xchg
dec
inc
adc
push
and
in
sub
inc
rcrl
mov
xchg
mov
add
jbe
or
aaa
xchg
mov
aaa
mov
hlt
jbe
fmul
dec
inc
xchg
add
enter
jbe
sub
lods
mov
sub
sbb
fcmovnu
or
jmp
arpl
sub
mov
call
shlb
ds
push
push
mov
int
ret
pushf
les
aam
sub
nop
aaa
pop
dec
push
enter
pop
xor
out
push
ret
adc
sbb
pop
push
lods
scas
mov
pop
and
adc
and
push
ss
aam
sub
or
mov
jo
in
cmp
adc
xor
push
sub
popa
stos
lds
scas
dec
xchg
inc
ret
aad
push
pop
push
mov
sti
fsubs
xchg
cs
xchg
dec
shrb
adc
lahf
and
xorb
or
pop
xor
push
in
outsb
repnz
pop
popf
add
shrb
dec
sarb
fsubrl
hlt
testl
xchg
push
addr16
call
cmp
sbb
sub
pop
lods
xchg
and
add
leave
cmp
jg
jecxz
push
mov
fsubrs
or
pop
add
pop
jg
js
xchg
in
cmp
or
loope
outsb
cltd
les
adc
pop
lcall
imul
pop
loop
xor
ficompl
faddl
mov
lea
push
cwtl
shl
push
mov
out
incb
nop
ss
sub
pushf
mov
dec
mov
sub
out
stc
cmp
mov
das
jbe
xchg
sub
loop
cmp
ljmp
inc
add
mov
xor
cld
pop
and
xor
or
xchg
add
stc
xchg
jne
rcr
pop
scas
xchg
mov
mov
aad
cmp
or
inc
adc
filds
push
je
and
rclb
sub
adc
scas
int
pop
dec
icebp
jge
sbb
jp
and
pop
outsl
scas
xchg
inc
xor
out
pop
add
pop
shrb
and
sbbb
hlt
mov
adc
lock
dec
std
mov
pop
call
add
and
test
inc
or
and
sbb
outsb
in
in
mov
add
dec
clc
xor
idiv
dec
sbb
or
daa
cmc
adc
push
inc
cmpsl
int3
in
mov
ljmp
add
out
adc
mov
mov
loopne
sbb
jmp
xchg
mov
lock
jecxz
fwait
fmul
mov
ss
xlat
xlat
insb
add
sti
or
subb
sbbl
pop
dec
push
jmp
test
cld
cltd
movsb
push
sarb
hlt
add
repnz
lcall
and
les
push
inc
jb
adc
add
xor
test
pushf
ret
std
loopne
icebp
inc
adc
add
sarb
or
mov
out
jno
jno
mov
cmp
fldl
ficompl
daa
sahf
scas
repz
les
loopne
icebp
add
das
jne
rclb
and
fists
repnz
lret
imul
mov
ficomps
in
stos
lret
ret
pop
js
push
and
lods
mov
fcom
and
das
je
lock
add
or
shlb
daa
mov
or
js
rorl
xchg
cmp
sub
mov
sub
test
shlb
push
adc
in
scas
jb
aam
das
rolb
mov
outsb
testb
adc
in
loopne
stos
inc
push
push
mov
sub
imul
xchg
add
scas
xor
dec
xor
inc
ds
fmull
cmpsl
rcl
pop
aam
mov
xchg
mov
pop
jmp
mov
ja
mov
loop
fildl
xor
in
add
mov
jo
sbb
enter
inc
sti
jmp
add
dec
fs
outsb
sbb
hlt
push
pop
aas
out
xchg
push
xor
sbb
mov
mov
fdivrs
add
andl
jg
inc
inc
ljmp
dec
faddl
pop
lcall
mov
stos
adc
push
adc
xchg
divb
clc
inc
mov
mov
ret
test
xor
inc
ret
decl
xchg
fstl
mov
adc
cmp
pop
inc
xchg
mov
rorl
jo
dec
mov
pop
js
lcall
icebp
dec
andb
sbb
ficoml
ss
mov
sub
jae
pop
inc
sub
sub
jle
pop
xor
fwait
mov
leave
mov
shrb
add
test
push
lods
add
add
push
mov
dec
popa
dec
add
cmp
or
cmp
jb
pop
add
shll
std
or
jmp
sub
sbb
jp
inc
mov
outsb
mov
add
lea
and
cmp
lds
dec
xor
dec
into
or
push
out
loopne
test
dec
or
sbb
pop
scas
inc
push
add
cmp
jp
cmpsl
call
cmp
pusha
shll
in
jno
pop
push
jl
mov
jecxz
cmpsl
pop
xchg
clc
and
inc
pop
push
imul
mov
lock
cld
xchg
popf
jne
insl
mov
pushl
lods
mov
sbb
aas
push
test
push
in
jne
lret
mov
pop
cmp
ds
out
and
mov
xchg
fiaddl
cltd
call
rcll
mov
mov
je
aad
mov
pushf
ror
movl
test
lcall
scas
sub
cmpsb
negb
add
and
dec
or
mov
dec
repnz
adc
cmp
int3
cmp
sti
aas
loope
testl
sti
adc
jmp
loopne
out
fcoms
sbb
mov
mov
jecxz
ss
jns
enter
loope
push
fidivs
xchg
mov
sub
data16
sub
ret
call
sub
rorl
out
add
mov
dec
mov
mov
adc
fcomps
fstpt
call
inc
aaa
xchg
mov
xchg
scas
inc
insl
push
add
push
fwait
add
ljmp
pop
int
push
scas
add
ret
int3
dec
lods
fistpll
pop
lock
xchg
jecxz
inc
rolb
addb
movsl
dec
hlt
cmpl
push
mov
xor
and
jae
add
and
stos
add
movsl
aaa
scas
mov
fimull
mov
sti
cmp
mov
pop
sub
or
int
test
dec
xor
push
jg
orb
les
lods
sbb
mov
decb
push
and
sbb
inc
mov
jae
addl
outsb
aad
xchg
aas
and
and
js
sub
mov
xchg
incb
pop
ljmp
scas
loopne
and
les
ljmp
hlt
ret
sbb
movsb
jle
call
jg
nop
es
in
pusha
rclb
cmp
or
sbb
xor
shl
cmpsl
mov
fwait
test
shll
xchg
xchg
inc
shl
push
push
sbb
hlt
rclb
fcoms
push
mov
aad
jmp
out
dec
push
or
add
cli
push
fisubrs
jae
pusha
loop
loopne
and
leave
dec
incl
sahf
sbb
mov
movsl
mov
push
or
fstpt
xor
out
push
cs
and
xchg
push
xor
or
pop
out
je
imul
mov
or
sub
pop
scas
push
dec
mov
stos
out
push
push
xor
cwtl
sbb
fiadds
add
and
decb
pushl
loope
jg
out
nop
sub
clc
pusha
std
jnp
test
pushf
cld
adc
mov
les
pop
fildll
aam
movsl
rolb
mov
scas
rcrl
ret
push
ljmp
mov
push
shlb
addb
out
sub
cld
lahf
hlt
inc
in
test
pusha
ficoms
mul
repnz
repz
adc
mov
and
dec
popl
sub
pushf
imul
lods
in
cmc
and
daa
lds
sahf
inc
mov
add
popa
mov
ja
push
dec
jo
adc
mov
sbb
outsl
push
adc
add
cmp
xor
cmpsl
xchg
scas
and
add
loop
pushf
mov
out
adc
mov
lods
fldcw
pop
dec
cli
jbe
jne
and
setb
mov
dec
pop
jb
mov
and
aad
pop
cmp
push
jo
sub
adc
push
sub
add
cmp
enter
mov
add
adc
adc
pop
movl
lea
cltd
xlat
or
jbe
lret
popa
outsl
adc
dec
cli
imul
push
aam
cs
nop
pusha
sub
fs
ds
sti
and
adc
add
fcoms
je
call
into
and
cmpsb
push
mov
push
jbe
xchg
adc
or
and
es
and
fdiv
js
push
cmp
popf
data16
cmp
xchg
shll
leave
cmpsb
sbb
lret
sar
faddl
sub
xor
enter
adc
jo
xor
push
je
push
xor
mov
lahf
mov
lods
incb
loop,pn
push
inc
imul
mov
pop
cld
add
loop
fadds
das
sarb
pop
lret
dec
xor
addr16
inc
push
aas
stos
push
scas
mov
push
mov
add
push
inc
les
shr
ds
cmpsb
mov
hlt
jg
test
sub
add
push
add
jge
inc
mov
data16
push
push
cltd
aaa
mov
orl
mov
mov
pop
sbb
adc
push
fnstcw
mov
shl
pop
adc
cmp
mov
ds
mov
add
mov
adc
imul
xchg
testb
jnp
jecxz
push
jno
pop
mov
icebp
lret
lock
mov
ret
fstps
jno
add
jae
or
fdivrl
jne
popf
push
xor
push
inc
xlat
mov
aas
rcl
in
call
mov
push
or
jb
adc
outsl
add
xorb
and
mov
xchg
movb
push
std
imul
mov
icebp
fstpt
jbe
arpl
jge
sbb
xchg
fwait
push
sahf
cmpb
dec
decl
test
fcmovb
mov
and
sbb
rcl
inc
sub
pop
cmp
punpcklbw
sub
dec
outsl
push
or
pop
es
sar
jle
dec
and
pop
leave
dec
sbb
lret
push
mov
shlb
data16
sub
jnp
cmp
test
pop
mov
dec
dec
sbb
addr16
jae
mov
cmp
jge
mov
icebp
push
push
iret
js
and
addl
aam
mov
or
cltd
lcall
mov
xchg
xchg
gs
je
inc
adc
jno
mul
pop
xor
js
xorb
xchg
notl
dec
lret
mov
dec
je
sub
and
mov
inc
arpl
inc
aad
js
sub
loopne
pop
jl
jg
xlat
inc
mov
cmpsb
adc
cwtl
testb
sahf
push
out
pop
xlat
push
clc
push
jp
out
sbb
decl
add
cmpl
rol
dec
or
add
xchg
mov
push
mov
fsubrl
loopne
sbb
xchg
popa
call
jmp
fadd
inc
jne
lock
jg
jo
stc
cmp
int
sbb
lds
cli
adc
ljmp
mov
dec
test
sbb
inc
pop
outsl
cld
js
inc
in
dec
cmp
hlt
in
in
lds
or
xchg
dec
je
inc
inc
inc
mov
pop
ds
ss
pop
and
loopne
add
sar
dec
pop
dec
xor
jmp
cmp
jp
scas
sub
lcall
mov
push
and
pop
mov
xor
inc
xchg
sbbl
into
lahf
mov
mov
inc
in
movsl
loope
cmc
int3
push
pop
inc
dec
jae
pop
adc
fsubrl
cmpsb
dec
cmp
and
sub
adc
mov
mov
sub
jae
lods
subl
jg
leave
cmp
mov
dec
cs
mov
cmp
cmp
push
fmul
cmp
xchg
jp
mov
xorb
xor
jle
je
fnstsw
mov
xor
mov
clc
xor
push
dec
fistpll
mov
sahf
push
push
dec
pop
jo
sub
push
repz
lahf
andb
jp
push
ds
fcmovnb
lea
mov
icebp
dec
xchg
or
jb
mov
cs
daa
shlb
aad
rorb
mov
xor
jl
into
sub
lods
or
lods
pusha
stos
es
std
inc
mov
jbe
test
xchg
mov
in
daa
mov
push
bound
out
xor
lret
sub
sbb
jae
std
stos
pop
rol
add
loop
dec
hlt
xchg
xchg
mov
dec
push
push
jo
jns
ficoms
jb
adc
adc
or
aaa
inc
mov
push
pop
cmp
pop
sbb
fistpll
adc
push
sbb
push
inc
sub
popf
lods
sbb
inc
and
es
mov
in
pop
data16
dec
lock
add
es
repz
jbe
mov
inc
inc
xchg
dec
xor
jle
lea
lock
adc
sbb
das
lods
dec
add
mov
rcrb
pop
fdivr
xor
push
jo
cli
dec
insl
fists
roll
aaa
push
int3
scas
ror
jg
hlt
cmp
or
cld
daa
hlt
xchg
nop
insb
into
xor
std
jns
push
das
sbb
mov
nop
pusha
sub
sahf
mov
mov
mov
in
into
push
ret
jb
mull
mov
fsubl
mov
cmp
dec
iret
in
sub
xor
js
sbb
je
cmp
mov
outsb
lret
lret
xor
aam
js
out
jmp
jmp
imul
xor
sarl
data16
insl
in
add
pop
inc
inc
pop
sbbb
aas
repnz
xchg
or
xor
xor
clc
or
or
sahf
and
cs
pop
cltd
cmc
jecxz
nop
add
inc
in
ljmp
mov
pop
xorb
xor
cmpsb
mov
mov
lock
adc
add
fnstenv
push
inc
sub
inc
mov
cmp
insb
daa
pop
adc
adc
aaa
popf
inc
int
gs
sub
dec
aam
pop
sbb
dec
and
lahf
or
mov
loopne
mov
jno
test
mov
mov
push
stos
in
mov
ret
movl
pop
push
pop
jae
call
and
inc
int
cmc
shrl
cmpsb
xchg
xchg
or
pushf
push
lds
cmp
push
mov
fisttpll
mov
enter
push
fwait
scas
add
mov
mov
mov
inc
ljmp
lahf
fsubl
popf
xchg
push
shlb
sub
adc
das
ds
lock
pop
fcomps
or
mov
inc
rcrl
pop
lahf
inc
ret
movsb
sbb
add
pusha
sub
adc
pushf
dec
lret
stos
dec
pop
adc
adc
test
xchg
loope
ret
or
and
inc
hlt
mov
jne
lea
dec
shrl
mov
scas
test
cmp
shll
ret
repz
ss
stos
cltd
or
imul
bound
jo
mov
mov
inc
adc
out
cmpsb
mov
add
and
iret
scas
cmpsb
jo
repnz
fsubs
mov
mov
fistpl
dec
call
cs
aad
out
frndint
mov
stos
or
xor
pop
mov
lods
and
mov
in
test
js
icebp
mov
mov
std
or
mov
dec
in
sbb
loopne
mov
in
add
call
js
bnd
mov
loope
pop
sub
dec
xchg
cltd
rorl
dec
mov
push
ljmp
cld
aam
pop
aaa
fstps
and
xchg
popf
pop
js
sub
sbb
cwtl
in
dec
movsl
or
sub
add
sub
data16
ret
loope
sarl
notl
scas
pop
mov
ljmp
test
mov
rorb
push
fadds
mov
call
jmp
cmp
or
pop
and
xchg
sahf
loopne
test
and
outsb
lahf
lds
mov
outsb
sbb
mov
out
frstor
in
js
fidivrl
sarb
mov
xor
sub
xor
out
push
sbb
orb
xor
jo
stc
jns
adc
roll
and
mov
mov
mov
or
push
adc
insl
mov
push
or
push
fildl
hlt
mov
pop
push
jns
loop
mov
dec
mov
cmp
iret
stos
and
int3
jb
adc
xchg
fldl
and
cmpsb
mov
ja
xchg
movsl
fdivs
shrl
cs
adcb
cmp
add
sub
sarb
and
pop
mov
or
imul
int
push
jae
clc
aam
cmc
push
in
inc
sbb
or
jo
shl
lock
loope
sub
jle
dec
sbb
imul
imul
cmpsb
lods
rorb
cmp
shlb
clc
movsl
xchg
rol
jge
mov
lods
pop
insl
dec
sar
sbb
jo
sbb
pop
pushf
in
in
inc
nop
dec
gs
outsl
test
mov
mov
mov
push
inc
push
sub
push
push
sbb
jecxz
pop
mov
adc
push
adc
sbb
or
and
js
iret
popa
clc
adc
int3
test
add
or
addr16
cmp
cmp
sub
icebp
test
loopne
imul
int
js
xchg
sub
jl
sub
sbb
out
and
pusha
mov
mov
out
adc
cmp
test
xor
std
sbb
xchg
mov
dec
push
bnd
xchg
jle
out
cmc
or
fnsave
je
std
mov
or
shlb
add
daa
mov
mov
jnp
ret
push
inc
mov
adc
maxps
movsb
repnz
adc
stos
lods
mov
inc
cwtl
sub
shrb
in
jg
mov
scas
mov
lods
xor
cltd
ficoms
shlb
inc
outsb
xchg
clc
mov
push
fstpl
js
mov
dec
nop
inc
pop
int
dec
push
out
dec
in
pop
xchg
push
loope
pushf
js
pop
out
shlb
add
insl
mov
ljmp
adc
inc
push
mov
adc
lock
loopne
lods
sti
ret
rclb
sub
or
negl
sub
add
cmpl
icebp
stos
movsl
mov
iret
xor
jmp
es
lods
cmp
mov
cld
mov
and
xchg
cmp
cmp
test
mov
pop
leave
dec
das
push
ljmp
mov
xchg
sub
repz
jg
lock
das
lahf
jmp
xor
rolb
ret
sbb
adc
push
sub
sub
test
xchg
push
xchg
xchg
dec
dec
mov
push
cmp
aad
push
lcall
cli
xor
xchg
xor
xor
and
add
xchg
adc
push
stos
test
xchg
enter
inc
call
inc
shlb
sahf
xor
ret
adc
idivb
cmp
xchg
sub
pusha
dec
push
and
mov
repnz
fistl
dec
adc
or
loop
loop
mov
mov
xor
lock
jg
cli
xor
inc
xor
add
add
lock
add
lods
dec
in
enter
mov
out
sbb
fstp
xor
insl
mov
mov
cmp
insb
cld
sti
mov
or
add
cmp
xlat
push
or
pop
mov
xor
fsubrs
or
add
cltd
popf
fdivrs
rcl
inc
dec
dec
cli
das
add
pusha
or
mov
aad
scas
mov
cmpsb
push
in
adc
nop
cwtl
adc
mov
loope
hlt
stos
xchg
xchg
aaa
sbb
xchg
jo
mov
idiv
dec
in
movsl
and
ret
mov
out
icebp
push
pop
jo
add
fldcw
movsl
cmp
aas
and
gs
in
push
adc
push
and
add
mov
add
dec
data16
sbb
sbb
inc
imul
mov
lods
scas
lock
cwtl
ficoms
jp
xlat
std
mov
add
jle
clc
pop
call
nop
les
lcall
or
loop
mov
add
add
mov
pushf
daa
mov
mov
loope
loop
jmp
inc
xchg
adc
pusha
sbb
pop
mov
xor
add
arpl
shll
adcb
inc
roll
adc
insl
cmp
mov
fcomp
imul
inc
cmpsl
fdiv
push
inc
sti
push
push
dec
mov
push
cmp
imul
std
adc
lods
push
loope
cmp
add
lcall
maskmovq
and
filds
hlt
xor
fiaddl
jbe
iret
adc
inc
scas
shll
clc
adc
xchg
mov
sar
pop
xchg
xchg
and
jne
fstps
or
and
mov
lock
push
rolb
lret
nop
pushf
sbb
mov
mov
mov
clc
arpl
push
les
addb
or
xor
pop
lcall
mov
loop
loop
jb
xchg
popa
orb
mov
mov
inc
divps
dec
and
insb
inc
inc
aaa
push
test
or
divb
mov
insl
cmp
sub
pop
sahf
fsubs
cmp
rorl
addb
adc
aaa
out
mov
sti
jge
dec
stc
or
pop
push
popf
fcmovnbe
add
add
js
xchg
and
mov
mov
dec
loopne
lods
and
in
daa
insl
xchg
pop
push
mov
out
in
out
sbbb
into
rorl
and
xor
mov
and
orb
push
and
mov
push
cs
push
adc
push
push
adc
xrelease
rorb
adc
or
or
gs
hlt
inc
dec
inc
cmp
popf
clc
in
cld
sbb
add
inc
push
cmp
xor
adcb
fbstp
and
dec
mov
rclb
cmp
adc
mov
out
mov
xchg
in
hlt
rorl
push
idivb
lea
add
mov
mov
test
xor
dec
mov
sbb
lods
or
mov
xchg
mov
bound
aas
shrb
add
or
jecxz
lods
add
sub
loop
add
rcrb
shlb
jo
push
add
insb
jmp
aas
repnz
call
clc
iret
sub
test
add
jb
push
cmp
cmc
pop
aam
xor
outsb
jo
je
cmpsl
outsb
or
lods
push
push
add
loope
arpl
add
and
rcrb
mov
fcompl
push
xor
pop
jl
and
jp
xor
mov
mov
adc
jmp
add
inc
dec
cmp
repz
xchg
stc
mov
push
jle
dec
push
adc
aaa
in
push
jo
les
cmc
cmpb
push
adc
js
xchg
xchg
icebp
bound
outsl
sbb
push
mov
adc
rcl
xor
add
mov
or
out
sahf
scas
xchg
adc
add
mov
mov
insl
cwtl
pop
pop
test
mov
ljmp
mov
dec
push
jecxz
push
test
sbb
scas
fs
cmp
fldl
ljmp
cmpsb
out
iret
out
sub
movb
inc
sub
shrl
add
xor
lahf
pop
mov
push
ja
xchg
or
cmpsb
jno
xchg
adc
and
add
int3
xadd
nop
das
movb
xchg
ljmp
fwait
mov
cmp
cld
imul
pop
sbb
pop
iret
sbb
and
xchg
popa
inc
arpl
or
daa
or
xor
add
insl
inc
jmp
jle,pn
sahf
xchg
xchg
adc
push
fwait
sub
jmp
vandpd
pop
sbb
jle
scas
loop
roll
cmc
pop
cmp
push
mov
xchg
lock
addl
repz
push
add
dec
clc
xchg
jae
scas
ljmp
jb
ds
lahf
sub
dec
xchg
adc
cltd
inc
mov
sub
inc
cmp
jbe
or
outsb
test
dec
stos
mov
pop
jne
sbb
mov
sub
and
xchg
lods
ret
adc
icebp
or
push
cmp
push
xlat
popa
push
mov
movb
xor
lock
inc
dec
dec
xor
or
pop
add
inc
jg
roll
lods
inc
xchg
jp
test
movsl
cli
rcrl
mov
push
aam
popl
in
xchg
pusha
in
or
int3
aas
add
mov
xor
sub
xor
orl
cmc
dec
jnp
mov
push
pop
int3
adc
das
push
cmp
add
movsw
insb
mov
xchg
sbb
lods
add
mov
int
dec
in
adc
aaa
dec
test
mov
cs
mov
pop
pop
je
mul
pop
das
xchg
add
pusha
outsl
add
outsb
push
cld
inc
push
push
movsb
stc
call
data16
test
mov
xor
and
sti
sbb
mov
and
in
mov
mov
call
rorl
or
push
sahf
cwtl
mov
and
add
sub
xchg
gs
sub
sbb
repz
or
outsl
sbbl
and
mov
loope
cmp
inc
push
push
sub
mov
push
mov
shlb
adcl
fidivrl
fdiv
adc
aaa
cmp
fstl
jmp
push
loop,pt
cmp
dec
fdiv
mov
mov
mov
sbb
jmp
mov
add
sbb
xor
stos
push
dec
cld
and
cmp
imul
mov
out
in
rorl
bound
fdivrp
mov
ret
cmpsb
add
xchg
xchg
fucomip
sub
xor
movsb
and
test
jg
pop
jo
add
outsb
and
and
imul
sub
xor
xchg
rorb
pop
fiadds
fwait
ret
dec
mov
lfs
ret
push
mov
mov
jbe
cli
lock
mov
push
mov
fwait
xchg
pusha
lcall
pop
mov
test
sub
and
mov
insl
ljmp
shll
and
push
aaa
pop
add
leave
les
cmpsl
inc
add
push
shl
xchg
lcall
lea
sbb
xor
call
inc
gs
fwait
enter
dec
jno
push
sar
je
add
jg
push
push
mov
sahf
inc
into
adc
sub
push
ja
cmp
repnz
adc
loope
or
sbb
xlat
cmp
out
rorb
lods
or
jecxz
ds
lret
clc
stos
jmp
or
jbe
sarb
mov
jb
mov
clc
dec
adc
clc
js
aaa
aam
add
jns
cmc
dec
rolb
mov
push
sbb
sbb
push
mov
mov
sub
pop
std
stos
shrb
clc
fisttps
xchg
mov
xor
aas
test
arpl
push
adc
add
clc
add
test
mov
or
fwait
lock
sub
pop
adc
jbe
xchg
in
mov
and
jle
add
clflush
or
daa
movsb
add
mov
or
xchg
mov
or
pop
lcall
jle
dec
aas
mov
inc
jp
sbbl
and
pushf
mov
imul
and
insb
in
cs
movsb
out
lcall
clc
lds
sbb
push
jge
dec
aaa
mov
mov
mov
stos
jno
aas
lea
stc
xor
mov
jl
inc
out
xchg
in
push
cmp
test
push
sti
js
rolb
or
sbb
adc
jmp
and
ljmp
repz
push
mov
or
or
mov
or
sub
or
cmp
das
arpl
sbb
cmpsb
push
mov
dec
add
test
jb
pop
iret
and
mov
jg
insb
adc
loopne
dec
add
adc
lock
xlat
fwait
dec
pushf
mov
ret
add
and
je
add
pop
push
push
pop
and
movsb
sbb
pop
sbbb
push
ss
movsl
adc
addl
jb
das
notb
pop
call
mov
sbb
inc
insb
hlt
xor
or
addb
aam
or
lods
jbe
nop
mov
lea
cmc
lds
cmpsl
mov
mov
daa
dec
sbb
ret
adc
sub
out
push
cs
mov
xor
sub
pop
xchg
inc
bound
aad
jle
jo
dec
jo
mov
pop
dec
popa
adc
cld
jge
mov
bsf
std
rorl
mov
add
ja
jmp
adc
loopne
sbb
push
sub
data16
xor
xor
shll
iret
and
movsl
sti
roll
pop
cmp
loop
adc
inc
je
jo
add
lcall
ret
mov
cmp
adcl
cmc
mov
faddl
mov
dec
dec
scas
xor
pop
inc
fs
pop
push
test
cmp
lea
mov
pop
adc
popa
fbstp
shrb
inc
mov
fmul
aad
mov
rcrb
xchg
test
cmp
cmpsb
or
movsl
mov
xchg
lods
loopne
aaa
aaa
mov
mov
test
bound
pop
aas
dec
jecxz
leave
inc
sbb
outsb
imul
dec
aad
adc
in
test
jp
jae
pop
dec
incb
lods
fistpl
push
mov
dec
inc
add
lods
leave
test
sbb
inc
sbb
pslld
pop
or
jns
fisubl
or
or
outsb
xchg
cs
jge
dec
inc
or
mov
mov
insb
andb
cmpsb
les
pop
push
xchg
icebp
cmp
cli
pop
xlat
xor
jo
ret
aaa
pop
pop
mov
pop
xor
inc
clc
mov
std
xor
inc
mov
in
fcoml
add
add
mov
pop
or
and
es
or
jecxz
pusha
js
adc
shl
push
push
dec
into
sbb
js
mov
push
push
mov
push
or
sub
sti
mov
pop
es
mov
pop
or
push
pop
adc
into
leave
push
or
mov
cwtl
mov
fwait
test
scas
dec
sub
mov
test
sbb
xlat
stos
adc
mov
ret
repz
adc
and
rcrb
inc
and
pop
cs
adc
xlat
ret
mov
xor
lret
pop
ss
fisubrs
push
repnz
xchg
push
ljmp
sub
jmp
das
les
addr16
insl
sub
xor
fldt
xchg
sbb
mov
pop
incl
push
pop
std
mov
negl
test
push
pusha
fsubrl
sbb
insl
mov
aas
xchg
push
icebp
add
cmp
ljmp
xor
call
hlt
push
mov
dec
cld
mov
sub
sub
sahf
adc
mov
andl
dec
and
fmuls
rcr
sub
adc
sub
lods
rcll
xchg
mov
jno
dec
mov
cmc
push
stos
pop
clc
popf
out
out
lahf
pop
cmpsb
or
idivl
in
xchg
movsb
pop
daa
push
ret
cmp
clc
ja
jmp
decl
pavgw
outsb
sbb
inc
push
enter
pop
je
push
test
std
ljmp
mov
sub
arpl
mov
out
in
xchg
sbb
jle
inc
sti
push
push
mov
mov
jbe,pt
pop
clc
mov
ret
test
sbb
sub
jne
or
mov
stos
push
imul
scas
dec
pop
jl
loop
push
sub
es
jge
sub
pop
push
adc
or
mov
inc
add
inc
sti
sub
enter
mov
mov
cmp
jle
in
mov
in
mov
mov
test
mov
out
ret
jae
jmp
cmp
ret
mov
ficoml
dec
xor
push
ljmp
jecxz
xor
inc
mov
test
cmp
pop
dec
push
xchg
cmp
sub
add
inc
cmp
inc
js
mov
jle
sti
jbe
in
mov
ja
add
pushf
mov
mov
jmp
lods
push
jp
add
pop
hlt
testl
xor
sub
add
call
enter
push
jb
scas
mov
or
jae
fsubrl
inc
bound
mov
mov
rclb
pop
leave
and
fnsave
or
orl
push
subb
or
loop
stos
test
mov
in
cmpsb
jne
and
ljmp
imul
addb
lods
inc
rclb
jnp
jle
stc
loopne
imul
ljmp
cmp
jg
xchg
stos
in
repnz
into
aam
dec
lahf
imul
sbb
xor
adc
xor
adc
cmc
push
les
sub
subb
and
int
sub
xor
cmp
out
mov
enter
and
shl
imul
movsl
repz
cld
and
and
add
test
fidivl
sub
xchg
std
les
jg
adc
or
jle
lds
mov
mov
pop
int3
enter
add
fildll
mov
xor
jge
dec
jecxz
jae
pop
shrb
mov
push
clc
push
rcrb
ljmp
mov
sbb
fnstenv
xchg
cmp
inc
mov
cmp
and
lock
outsb
cmp
sub
dec
dec
xchg
mov
sub
movsb
shlb
adc
loope
popa
xlat
stos
je
xchg
fistpll
add
rcrb
mov
ja
pushf
inc
and
sbb
out
inc
in
sbb
lds
cmp
fdivs
mov
aam
repnz
add
add
daa
fsts
inc
repz
addb
sbb
in
dec
inc
aam
aad
stos
or
pop
inc
push
cmp
mov
mov
mov
dec
sbb
xorl
rcrl
fcmovne
inc
and
inc
add
aas
cmp
jbe
sub
cmp
ljmp
adc
mov
jo
test
enter
mov
loope
sub
in
scas
ret
or
pop
ficoml
or
mov
dec
mov
rcll
or
mov
cli
pop
pop
pusha
and
shr
adc
das
adc
inc
or
or
cmpsl
push
mov
loope
add
lods
mov
nop
sbb
lods
movsb
je
into
cmpsb
dec
add
inc
frstor
test
or
std
ficoml
daa
cmp
add
cltd
xchg
or
mov
roll
mov
and
lret
dec
push
or
imul
mov
lods
push
inc
jmp
iret
sub
aad
cmp
adc
sti
fildll
loop
insl
sbb
xchg
xchg
cmp
push
movsb
mov
sub
or
pop
outsl
test
mov
stc
dec
jg
into
out
mov
or
sub
jp
xchg
rorb
fsts
lds
mov
loop
add
mov
mov
jmp
cld
add
test
xchg
rcrb
js
cmp
cmp
fisubs
mov
test
fldl
rorb
push
pop
push
cmp
lods
notb
pop
cmc
les
frstor
fwait
adc
or
andl
loope
xchg
mov
icebp
adc
cli
scas
sub
mov
notl
and
stos
jae
fidivrs
in
test
pminsw
dec
jecxz
out
push
testb
arpl
and
mov
in
inc
fldl
dec
sub
popf
aam
add
pop
inc
adc
sahf
pop
dec
rclb
adc
sub
push
imul
clc
mov
outsl
jecxz,pn
insb
pop
or
out
jnp
scas
int3
cli
aaa
xchg
xchg
scas
jb
push
add
in
dec
inc
xor
mov
add
mov
in
je
inc
and
xlat
mov
and
insl
pop
test
sub
cmpsb
jo
fldcw
add
push
mov
test
mov
mov
inc
pushf
xchg
xor
or
loopne
and
add
hlt
das
out
push
inc
xlat
push
clc
adc
lret
rcrl
or
es
or
pop
sbb
adc
sti
dec
mov
repz
outsb
mov
inc
cld
ljmp
sar
push
add
cmp
fiadds
push
out
xchg
mov
and
xor
mov
loope
iret
mov
div
sub
mov
mov
xchg
jae
push
clc
jno
push
or
mov
inc
jb
or
cmp
mov
xchg
mov
sbb
adc
test
dec
fistpl
dec
dec
stos
arpl
mov
test
push
and
les
dec
test
mov
and
gs
dec
mov
sahf
insl
enter
jl
aaa
loopne
ljmp
bound
mov
scas
fisttpll
hlt
mov
fbstp
repnz
adc
hlt
xlat
stos
or
out
subb
jg
ficomps
and
or
inc
push
cmpsl
mov
in
push
fcmovnu
dec
and
mov
sar
std
jp
mov
fstps
rolb
leave
push
xchg
jno
fsubrl
jne
jecxz
inc
push
mov
test
cmpsb
shlb
xorb
cmc
inc
or
mov
jle
xchg
jb
add
test
jge
faddl
sarb
cmpsb
lea
pop
jo
pop
out
add
push
adc
stos
mov
dec
sub
addb
push
xchg
dec
xchg
inc
push
gs
sbb
cmpsl
call
pop
test
jno
jge
and
cmc
shlb
dec
ficoms
and
adc
clc
in
aaa
mov
xlat
ret
jge
and
and
clc
lock
sub
mov
scas
rclb
xchg
ljmp
jle
sbbb
push
inc
pop
add
outsl
xor
rorb
pusha
jae
cmp
mov
shl
or
and
pop
repnz
xchg
lock
mov
or
fucomp
push
mov
inc
mov
mov
or
into
insb
and
mov
and
iret
inc
mov
pop
loopne
lahf
push
aaa
das
inc
pop
nop
pushf
pusha
push
pop
cmp
or
jge
fists
push
dec
loop
push
cmp
mov
jo
push
inc
test
mov
jge
loopne
test
imulb
jnp
scas
dec
jne
mov
sbb
and
lahf
xchg
insl
mov
ret
push
inc
fsts
incl
enter
stos
lcall
or
xchg
dec
xchg
mov
cmovge
mov
call
into
ret
out
int
aas
inc
cmp
repnz
inc
xor
pop
jecxz
pop
pop
mov
ret
into
jae
xchg
adc
or
mov
std
mov
xchg
xchg
addl
mov
push
ss
ja
sub
fwait
mov
pop
iret
test
push
fstpt
ret
fwait
mov
and
gs
jp
sub
cli
shlb
dec
xor
lock
dec
scas
out
push
nop
movsb
scas
idivb
mov
fs
mov
push
dec
js
dec
loope
cmp
inc
adc
cmp
ljmp
dec
sbb
jmp
cli
sub
sub
push
cmp
fisubl
scas
cmp
xor
pop
inc
inc
inc
pop
loopne
or
sbb
out
fs
int
xor
adc
lods
push
adc
stc
adc
loope
push
mov
js
stos
cmp
push
scas
stc
and
adc
and
sbb
lahf
sbb
and
icebp
filds
cmpl
fsub
xchg
jle
push
sub
mov
aaa
cmpsl
scas
dec
jecxz
out
sub
dec
lock
pop
imul
inc
push
and
and
or
add
inc
sub
push
js
lods
xchg
jg
mov
mov
loop
scas
fdivrp
push
inc
mov
and
test
mov
aad
inc
jecxz
xor
inc
jo
adc
cs
sbb
stc
jo
sub
test
and
xchg
mov
add
dec
cmpsl
and
ljmp
push
loopne
push
mov
sub
push
out
outsb
int
sub
push
xor
mov
lret
ds
xchg
add
push
ror
xor
out
lods
ret
mov
sub
aad
mov
jo
or
sarb
cmp
push
out
mov
fs
sbb
scas
in
sbb
movswl
lods
int3
aas
push
es
xor
in
test
jno
pop
cmpsb
mov
fstp
cltd
inc
push
roll
sbb
push
mov
inc
pop
dec
mov
sub
aas
dec
or
icebp
data16
shlb
testb
push
jge
ljmp
ret
add
shll
pusha
jno
push
movsl
inc
fwait
push
mov
dec
fs
lock
leave
add
mov
and
dec
jg
mov
scas
out
popa
sub
and
lret
lods
mov
pop
cmp
xorl
mov
andl
out
rorl
testl
pushf
bound
outsl
mov
push
mov
pop
rorb
jne
dec
aad
arpl
das
sbb
sub
cmp
ljmp
outsl
pop
daa
xor
jg
or
inc
cmc
add
push
mov
ret
adc
and
idivb
fmull
jecxz
adc
lock
adc
mov
dec
loope
stos
dec
daa
sbb
imul
sub
jmp
mov
icebp
sahf
iret
jp
sub
jbe
mov
push
iret
push
cltd
inc
mov
out
push
jmp
das
cmp
adc
shrb
filds
push
mov
in
loopne
nop
or
cmpsl
addr16
dec
jmp
adcl
ss
popa
int3
cmc
pop
ljmp
popa
cmp
push
sub
xor
cmp
pop
jecxz
mov
mov
rclb
add
and
ss
daa
jns
push
ss
sub
mov
std
shr
mov
fildll
ret
xor
jmp
inc
jo
ljmp
call
cmp
fdivrp
cmp
jge
sub
stos
push
adc
test
mov
lds
mov
ficomps
push
add
js
rcrb
and
and
mov
mov
xchg
jo
mov
cltd
mov
mov
incb
int3
dec
mov
xchg
xchg
std
stos
addr16
jbe
cmp
scas
add
mov
cmp
cmpsl
insb
pop
inc
mov
loop
dec
gs
imul
add
mov
hlt
xor
adc
xor
nop
or
shlb
das
shr
mov
cmp
cli
shlb
inc
and
push
loop
iret
push
ret
inc
scas
and
xor
jmp
mov
xchg
jge
xchg
cmpsb
or
pop
or
inc
fnstcw
pop
mov
enter
cs
sbb
push
mov
cmc
iret
push
jne
lea
dec
es
pusha
iret
addl
dec
jnp
inc
push
cmp
sub
sbb
sub
adc
lea
sub
fwait
loope
jbe
out
hlt
imul
push
lock
jge
in
adcb
or
or
adc
mov
sub
dec
fstl
je
dec
cmp
sahf
mov
pushf
mov
stos
test
or
xchg
mov
loop
bound
in
gs
bound
push
sub
mov
lock
cwtl
scas
mov
testl
pop
jnp
inc
insl
inc
sbbb
mov
cmpsl
and
rcl
bound
mov
mov
in
test
and
sbb
lods
inc
and
xchg
xchg
dec
and
fnstenv
dec
pop
in
xchg
push
test
push
fimull
xchg
ja
ret
sbb
inc
or
ss
inc
sbb
in
dec
pop
cmp
hlt
stos
sbb
xor
ret
dec
pavgw
mov
jo
popf
or
lret
lahf
fs
int3
pop
shrb
dec
jg
loope
add
and
mov
je
fs
bound
mov
xor
nop
push
and
divl
add
or
mov
shll
scas
loope
cmp
ficoms
aas
call
rclb
scas
mov
or
lds
mov
lret
in
test
pop
push
call
adc
and
and
pop
sbb
ret
jle
add
or
shl
stos
movsl
adcl
xchg
sbb
cmp
inc
mov
mov
ret
mov
sbbb
jp
jne
jge
mov
mov
xor
cmpsb
cli
ds
push
jl
push
push
or
cli
outsb
scas
insl
pusha
dec
inc
sbb
pop
outsl
xadd
addb
add
xor
or
das
or
mov
or
or
jno
ret
and
stos
clc
fisttpl
mov
pop
pop
stos
mov
popa
hlt
stc
fmuls
inc
add
icebp
inc
and
push
pop
jnp
stos
cmp
enter
ljmp
fiaddl
lods
xchg
test
nop
and
fdivrs
roll
addb
aas
shl
pop
add
stos
outsb
dec
insb
xchg
outsb
inc
sub
loope
xor
mov
enter
inc
jne
jo
sbb
scas
fstpl
push
shl
push
push
repz
and
adc
pusha
xor
lods
adc
mov
and
dec
and
or
cmpsb
xchg
inc
xor
scas
test
inc
out
xchg
inc
mov
or
dec
jg
fs
adc
mov
jl
dec
cwtl
fisubl
jb
mov
inc
imul
fisubs
in
jl
and
mov
and
jge
xchg
sahf
cli
and
mov
sti
fsubp
sti
jmp
fsubrl
clc
mov
jb
fsubr
add
insl
hlt
mov
fsub
add
xlat
ret
adc
mulb
jns
imul
je
das
fidivrl
inc
cltd
mov
dec
ss
adc
out
ret
sarb
mov
and
inc
sub
outsl
mov
xchg
pop
mov
aad
xlat
pop
loope
rorb
rol
stos
and
cmp
dec
fidivrl
clc
jg
push
adc
jmp
mov
sub
fildl
iret
pop
clc
test
popa
add
jns
inc
sub
fstpl
pop
push
push
jbe
sti
mov
lock
xor
daa
and
rorl
popa
mov
icebp
inc
loope
insl
scas
cmp
aas
inc
sub
jo
movsl
and
dec
ret
cmpsb
xchg
push
cwtl
int
add
addr16
mov
mov
sub
out
aaa
cli
push
cli
cmpsl
outsb
lds
push
jmp
icebp
mov
xor
dec
mov
mov
cmc
lret
xchg
movl
or
xor
insb
shlb
loope
push
imul
mov
and
push
dec
loop
int3
inc
pop
dec
mov
and
mov
inc
sbbl
mov
rorb
pusha
pop
ret
xor
clc
ficoml
add
sarl
cs
xchg
push
movsb
loop
sub
adc
lods
mov
mov
addl
inc
in
scas
cmpsb
imul
inc
call
sub
mov
adc
inc
es
int
sbb
sarl
orb
cmpsl
mov
jle
adc
push
inc
mov
addr16
xchg
gs
ljmp
mov
pop
pop
xor
push
mov
or
jmp
mov
pop
js
push
mov
or
xor
inc
dec
mov
loopne
je
xchg
mov
cltd
and
or
ljmp
jo,pn
dec
sbbl
rcll
cwtl
dec
test
bound
mov
jbe
lea
mov
gs
aas
test
les
mov
jns
fwait
lcall
and
orb
shl
popl
sbb
inc
sbb
pop
ja
sbb
ret
into
fwait
sbb
pop
pop
pushf
push
or
cmp
adc
hlt
cmp
notb
mov
std
les
out
cs
jmp
mov
in
pusha
and
add
and
adc
mov
ret
inc
mov
xchg
pop
jb
sbb
cmp
cs
inc
roll
xchg
sub
xchg
pop
and
rorl
push
cmpsl
insl
sub
testb
dec
addl
and
shlb
mov
mov
fisttps
mov
movb
cmpsl
push
mov
pop
pushf
daa
das
ss
movl
xor
and
bound
or
jne
push
test
shll
adcb
repz
sub
les
sbb
mov
jg
mov
push
or
push
or
dec
cmp
pushf
subb
pop
jmp
jb
addl
mov
jg
push
mov
sub
int
mov
mov
lock
xchg
xchg
aad
hlt
or
sbb
add
add
loopne
pop
je
cmpb
jge
pop
call
mov
daa
push
dec
sbb
and
arpl
inc
cli
shll
gs
sbb
mov
arpl
xlat
imul
rcl
aam
inc
dec
mov
cs
loopne
xor
mov
loope
cmp
xchg
mov
adc
mov
leave
adc
jmp
insl
xlat
rcrl
ret
adc
inc
out
add
pop
cs
es
fdivp
jp
ja
xor
pop
jl
clc
sbb
ss
cmp
mov
xor
pop
and
insl
jmp
or
rorb
sub
jecxz
dec
gs
mov
sbb
add
call
gs
cld
add
popf
test
std
jmp
stos
adc
jns
ret
je
mov
inc
mov
pop
jl
enter
and
stc
das
fidivrl
nop
cld
or
and
adc
mov
jne
mov
jne
sbb
repz
xlat
shl
add
sub
push
adc
jmp
mov
rclb
loop
out
lea
repz
lret
mov
cmp
gs
rolb
mov
insl
int3
xlat
or
loop
mov
adc
dec
inc
imul
inc
pushf
aad
insb
and
icebp
ret
sbb
fstpl
jp
cld
add
sub
ror
jmp
and
incb
mov
xchg
push
xor
das
bswap
xor
aad
jmp
cwtl
inc
adc
or
lahf
mov
adc
mov
sub
fcmovnb
hlt
mov
pop
sub
pop
lahf
adc
inc
xchg
and
mov
fldl
popa
clc
adc
fistl
sbb
mov
adc
xchg
data16
xor
jle
std
add
jne
loop
jl
dec
enter
jp
addr16
jo
mov
int3
or
fs
pop
movsl
pop
aam
jnp
lock
sub
mov
cwtl
pop
clc
or
and
mov
icebp
jecxz
test
sub
cmpsl
insb
inc
das
or
ja
imul
push
add
cld
out
or
out
test
sub
gs
clc
movsl
stos
or
imul
sub
or
push
add
adc
mov
inc
jne
sar
rol
cmpsl
push
leave
xchg
loopne
js
push
xchg
cmp
lock
gs
pop
mov
in
jbe
inc
std
leave
jb
scas
pop
mov
lcall
ss
imulb
rorb
cmc
popf
lcall
sub
xchg
ret
adc
es
sbb
scas
cmpl
mov
aaa
inc
pop
cmp
add
sub
jb
adc
mov
and
sbbl
sub
fwait
add
scas
mov
fneni(8087
mov
mov
test
ficoms
lahf
aas
dec
xchg
gs
stos
shlb
ror
mov
mov
dec
mov
add
nop
into
test
stos
mov
fnstcw
sub
lds
mov
mov
add
dec
and
jmp
lret
das
cli
mov
jb
lock
mov
clc
js
adc
push
and
push
outsl
mov
add
dec
filds
mov
repz
mov
mov
ret
cld
shlb
sub
sbbl
pushf
ret
lds
sbbb
ret
lods
mov
rolb
inc
ljmp
cmp
push
pop
gs
jo
mov
ud0
icebp
add
mov
movl
and
dec
outsb
pop
lahf
mov
xchg
js
inc
call
add
sub
push
mov
std
lds
ret
nop
sub
ja
jl
push
js
jne
fwait
cmpb
les
pop
lds
pop
ljmp
ret
pop
lods
je
std
jnp
dec
mov
jecxz
lahf
pop
dec
push
xor
adc
ss
adc
xor
mov
push
inc
add
cmpb
imul
mov
pop
sub
pop
xor
adcl
cmp
dec
or
fiadds
lcall
loop
insl
mov
faddl
mov
add
mov
xor
mov
mov
out
push
xchg
pcmpeqb
sbb
pushl
test
mov
push
push
loopne
popa
in
inc
mov
sbb
pusha
dec
pop
jge
and
push
or
popf
scas
and
popa
adc
inc
icebp
sbb
clc
int
lret
sbb
pop
ss
mov
xor
loop
ja
dec
jo
je
xor
stc
loopne
rclb
js
mov
inc
test
pop
repnz
xor
icebp
in
inc
lock
ss
fisttpll
add
and
out
sub
adc
pop
jns
pop
cmp
cltd
adc
sahf
stos
enter
js
push
jl
jbe
lock
sub
pop
cmp
aaa
cmp
mov
stc
movsl
fdivrl
les
les
mov
lods
ss
loop
repnz
xlat
sub
imul
add
fsubrl
cmpsl
mov
mov
test
notl
jle
or
pop
roll
mov
test
sbb
inc
inc
mov
ljmp
dec
or
inc
mov
jmp
inc
and
and
fs
bound
loop
daa
leave
sbb
ja
ret
mov
sub
sahf
xchg
loopne
lock
push
inc
xchg
fildll
cltd
pop
fistpll
jo
test
test
in
mov
pop
bound
adc
push
adc
mov
ss
lea
pop
sbb
push
jle
push
pop
hlt
inc
add
scas
inc
ret
xor
call
das
in
mov
fwait
aaa
fidivl
aaa
imul
adc
fists
push
mov
mov
add
insl
test
hlt
mov
gs
pusha
jp
addr16
in
mov
aam
rorl
jl
pusha
inc
inc
scas
xchg
popa
pop
add
xchg
xor
cld
mov
jg
xlat
jecxz
rcrl
mov
xchg
sbb
stc
sub
xchg
or
in
mov
inc
mov
mov
push
test
push
les
movsl
pop
aas
rolb
sti
jg
fs
dec
jae
dec
sbb
sub
cwtl
or
mov
jp
test
jno
test
inc
xchg
sbb
in
dec
inc
push
pop
cmc
dec
xlat
negl
push
psraw
mov
leave
add
xchg
add
aad
test
mov
jle
or
shll
bound
push
cmc
mov
movsb
sub
jmp
orb
mov
push
nop
dec
scas
icebp
hlt
sti
pop
jo
lahf
rolb
sahf
sbb
or
add
inc
popa
cmc
js
push
push
or
sar
div
cmp
inc
shll
lret
sub
mov
adc
sbb
push
aam
shl
in
xchg
out
add
loope
mov
xlat
inc
mov
xorl
xor
dec
sbb
js
lds
jmp
or
mov
cmp
jae
jle
mov
add
xor
jl
js
xchg
xor
in
mov
pop
cmp
sbb
sbb
sub
xchg
inc
ret
icebp
cmpsl
pop
jo
xchg
inc
lret
push
and
jge
mov
push
mov
shll
adc
fbld
je
int
js
pop
lahf
lret
or
insl
cwtl
push
dec
cmp
add
sub
xchg
inc
lds
adc
ret
and
fs
js
lcall
xchg
loop
aas
sub
mov
sub
push
add
pop
icebp
mov
sub
pop
mov
mov
add
cmp
xchg
shlb
add
bound
or
jae
adc
hlt
sub
dec
push
cmp
xchg
ds
mov
xor
movsb
lods
and
lock
fnstenv
cmpsb
mov
pop
adc
push
sbb
jns
mov
xchg
shlb
add
outsb
jl
xadd
jne
xor
xor
stos
lods
inc
add
adc
mov
vpunpckldq
and
pop
nop
or
pop
mov
sbb
mov
inc
sub
ds
xlat
push
or
movsl
lcall
imul
cmpsl
mov
in
cmp
inc
inc
pop
out
pop
sub
mov
cwtl
add
add
jg
pop
sub
xchg
sub
sub
dec
or
sbb
and
addr16
mov
daa
lret
pop
or
shlb
popa
int
push
jecxz
dec
int
xor
insb
pop
xor
in
or
pop
out
sub
jne
push
xchg
mov
ljmp
mov
mov
dec
jne
shr
jp
jno
jmp
and
outsb
pop
push
mov
add
push
adc
push
pop
or
fs
xchg
or
push
mov
dec
xor
addb
pop
dec
mov
jmp
mov
mov
or
aaa
int
and
cmp
mov
dec
aam
mov
adc
insl
adc
inc
imulb
jecxz
or
mov
adc
jge
push
mov
test
mov
mov
test
icebp
fs
sub
xor
lods
stos
xor
dec
mov
fildll
nop
aaa
test
int
xor
lahf
or
dec
in
push
es
push
and
xor
popf
jmp
mov
inc
cmp
fs
sbb
add
icebp
mov
add
jae
ret
fsubs
lds
das
mov
ja
jmp
adc
out
sbbl
pop
mov
arpl
cmp
mov
mov
add
bound
insb
mov
leave
test
adc
ds
mov
xor
add
inc
cmp
cmp
imul
arpl
idivl
add
pop
repnz
mov
cmc
stos
fildl
sub
jecxz
mov
pop
mov
push
xchg
pop
leave
stos
inc
xor
dec
xor
ja
inc
dec
push
or
pop
in
adc
notl
popa
mov
shrl
movsl
push
hlt
sub
loopne
shlb
movsl
cmp
aam
je
mov
cmpsl
loopne
jge
out
xchg
rclb
dec
and
mov
xor
popf
jae
out
push
ret
push
mov
pop
sub
icebp
popf
jecxz
and
lods
lahf
inc
jge
in
xchg
or
gs
les
test
movsl
add
mov
mov
sub
or
jne
stos
xchg
inc
mov
icebp
bound
jnp
nop
sbb
push
outsb
sub
or
or
push
mov
std
adc
mov
cmp
add
cmc
pop
add
cli
les
aam
std
pop
inc
hlt
add
cwtl
add
testb
fcom
roll
orl
lcall
pop
jecxz
pusha
fwait
shl
gs
or
inc
cmp
pop
dec
mov
push
or
sub
push
and
or
xchg
add
sti
ret
adc
lret
xchg
xor
test
popa
add
and
dec
imul
sub
pop
pop
lds
xor
mov
addr16
loopne
aas
push
adc
jno
sub
pop
sub
outsb
aaa
mov
repz
xchg
dec
rcrb
jle
mov
add
je
data16
adc
xor
pop
inc
jmp
lret
cmpsb
ret
jmp
jmp
aaa
scas
jno
push
psubb
int
push
leave
xor
or
cmpsb
lret
pop
addr16
sbb
gs
cmpsl
outsl
fst
aaa
filds
inc
setl
push
mov
or
das
adc
rcrl
push
dec
cltd
cli
adc
or
xor
mov
add
fsubrs
pop
dec
pop
cmp
fsubrs
push
cmp
sbb
dec
dec
mov
and
out
test
or
clc
mov
ficoml
shlb
test
ljmp
loope
jecxz
lret
jno
mov
loopne
aaa
cmp
setl
xor
cmp
xchg
mov
in
test
lret
jecxz
lods
lods
jno
out
and
movsl
rol
sbb
jmp
and
push
xchg
popf
test
fwait
dec
out
filds
stos
hlt
cs
and
gs
sub
fnstsw
add
adc
mov
lods
adc
pop
jmp
rorb
add
inc
cmp
dec
mov
imul
sbb
push
jbe
popa
ror
clc
sub
add
push
mov
inc
sbb
sbb
das
cli
in
add
or
bound
mov
stc
in
inc
mov
or
jno
ret
lahf
dec
pop
test
and
test
adc
mov
std
xchg
shrl
jno
ret
shl
push
push
cmp
push
fstps
sbbl
push
subb
sbb
test
lea
ret
daa
pop
and
mov
loope
push
adc
mov
sub
movsl
stc
ljmp
mov
int
pop
inc
sbb
sub
cmpsb
mov
xor
jge
adc
popa
inc
lcall
mov
dec
lods
jne
sbb
js
test
ret
mov
jp
les
pop
outsl
loopne
adc
in
xchg
and
mov
je
aad
mov
push
push
lock
push
xor
push
push
in
jnp
jne
and
sbb
das
push
daa
xlat
daa
sarl
jmp
cmpsl
arpl
pop
sbb
jge
jp
scas
add
adc
adc
cwtl
cmp
inc
jge
aas
popa
aam
ds
xchg
sbb
fimull
add
pop
icebp
in
pop
xlat
daa
rcrl
incl
dec
mov
mov
pop
cmp
push
into
lds
add
xchg
pop
ret
test
arpl
andl
sarl
outsl
imul
dec
std
or
inc
xor
adc
test
and
int
outsl
nop
aaa
jecxz
inc
jge
sub
mov
test
hlt
add
cmp
test
push
jmp
mov
dec
cmp
sub
mov
pop
add
repz
lea
fmuls
pop
insl
xor
data16
incb
dec
jo
loopne
lods
sub
or
pop
adc
sub
mov
cmp
mov
out
inc
das
daa
scas
daa
shr
mov
aaa
stos
out
or
inc
add
pusha
insl
mov
mov
popa
rorb
insl
xchg
adc
xor
fdivrs
and
mov
lock
divb
aam
xchg
jl
or
pusha
pop
movsl
push
dec
sub
cmc
ja
adc
int
push
sbb
add
push
aas
mov
loope
mov
push
movsb
mov
or
and
lea
cs
pop
jbe
ss
std
xor
dec
fwait
ja
out
inc
or
push
call
ret
jnp
pop
ss
mov
dec
push
je
lahf
mov
bswap
push
adc
iret
xor
fldt
ret
inc
inc
pop
xchg
enter
cmp
test
sub
mov
sbb
sbb
sbb
jnp
into
push
pop
psubq
mov
pusha
push
or
cltd
and
mov
and
push
js
les
jl
xchg
cmp
xor
pop
popf
pop
lock
lret
xor
add
mov
push
mov
setle
cltd
adc
mov
in
or
mov
dec
pop
inc
mov
jo
add
mov
filds
and
dec
test
pop
es
bound
adc
xchg
mov
daa
fists
jb
push
rcr
push
popa
add
jmp
or
inc
mov
bound
xor
jno
pop
pop
mov
imul
popa
cmpsl
add
adcb
out
add
mov
mov
jmp
xor
cmp
stc
popa
pop
sub
insl
inc
add
mov
mov
lock
in
cmp
je
outsl
sub
test
pop
mov
jns
jmp
subb
adc
add
sub
jecxz
fs
adc
cmp
popa
dec
mov
mov
enter
or
sbb
add
add
cmpsl
dec
ret
mov
dec
test
add
mov
jmp
xchg
inc
sub
movsl
shlb
xor
push
xchg
jg
lret
adc
mov
ja
movsb
aaa
push
dec
sbb
xor
and
imul
aaa
sub
jb
cmp
add
adc
test
dec
add
or
xchg
jmp
add
subb
xor
and
or
mov
xchg
ret
add
daa
jle
fimull
and
aam
add
pcmpeqb
cmp
jl
pop
or
imul
test
test
mov
cmc
lds
or
mov
or
data16
mov
pop
add
jmp
leave
adcl
aam
popf
mov
mov
outsl
pop
inc
and
shll
lock
test
and
or
mov
bnd
adc
xchg
test
ss
xchg
pushf
sbb
stos
clc
jp
shlb
insb
jne
int3
pop
aad
andnps
aas
ret
insb
jecxz
and
in
or
and
sti
or
cmc
push
sub
popa
iret
pusha
adc
dec
lret
pop
xchg
imull
push
das
cmpsb
cmp
imul
popw
mov
cwtl
adcl
mov
cmp
or
mov
pop
jp
push
jg
sbb
xor
pop
cld
push
mov
add
out
jns
xchg
lret
roll
adc
adc
shrb
orb
imul
cmp
xchg
repnz
clc
loop
mov
nop
or
ret
test
popl
pusha
pop
sub
gs
dec
xchg
add
mov
adc
int3
cmp
cmpb
or
les
popf
in
xchg
mov
xchg
and
add
psraw
dec
dec
rcr
inc
or
leave
movsb
lret
mov
sbb
lret
sub
out
test
clc
mov
cld
xchg
lcall
fimuls
leave
cmp
or
fbld
add
scas
cmp
xchg
mov
pop
int3
jnp
popf
xor
in
scas
jnp
ss
cmp
or
adc
orb
xchg
xor
dec
dec
xor
push
dec
sbb
mov
je
or
push
cli
cmc
cmpsl
loopne
mov
jp
ror
insb
add
sub
movsb
pop
push
loopne
jno
cwtl
cld
add
xchg
jne
and
out
xor
leave
mov
jnp
jmp
shlb
rol
rcrl
cmpsl
xor
adc
inc
sbb
mov
adc
dec
scas
pop
pop
pop
stos
lods
fsubs
mov
insb
cld
cmp
leave
pop
mov
stc
add
or
inc
push
jnp
rcrl
push
dec
scas
ds
xchg
addb
xor
mov
dec
push
and
xor
push
jecxz
add
mov
pop
push
out
sbb
and
mov
dec
movsb
loope
jp
xor
out
cmp
xchg
push
mov
clc
dec
gs
xchg
test
rorb
adc
lret
fwait
xorl
fisttpll
adc
imul
inc
inc
or
cmp
fcoml
adc
add
xor
movsb
ret
mov
jnp
shrb
test
ja
push
fs
push
rolb
jmp
add
cmpsl
cmp
imul
std
cli
test
or
sub
popa
adc
shll
adcl
jmp
addr16
add
les
imul
or
push
loop
mov
adc
stos
cmp
xor
sub
sub
and
stos
xor
push
fnsetpm(287
jnp
loope
gs
out
jmp
imul
stc
jl
xor
sbb
pop
xchg
psrlq
outsl
xlat
inc
shr
jmp
mov
sbb
andb
jno
sbb
mov
stc
inc
rolb
in
dec
cmp
aas
mov
out
jmp
scas
fadds
xor
add
push
rol
pushf
xchg
or
arpl
pushl
je
stos
data16
sbb
enter
jne
cmpsl
insb
and
jl
dec
and
loope
pop
bswap
pop
push
je
lods
pop
lahf
jp
es
sbb
sbb
fcoms
pop
cmp
pop
aas
call
xchg
mov
and
push
not
inc
outsb
mov
loopne
push
aaa
mov
push
ret
aas
jge
or
xchg
jne
ret
hlt
inc
fisubs
mov
jb,pn
sahf
mov
mov
add
ror
and
int3
scas
inc
inc
je
incl
ja
pop
dec
mov
lods
iret
mov
xorb
ja
xchg
js
inc
lea
push
inc
shll
mov
inc
inc
lods
enter
adc
add
ficompl
test
and
das
fidivrl
mov
mov
pusha
ret
sub
je
lods
adc
xor
or
cmpb
push
inc
dec
cltd
xchg
inc
jmp
and
sub
jne
ds
fwait
mov
xor
pop
int
xor
dec
out
adc
mov
scas
les
dec
jg
xchg
inc
pop
test
orb
pop
sub
shll
inc
xorl
fwait
inc
inc
out
imul
cmpsb
and
xor
aaa
hlt
pop
mov
mov
push
ficompl
jae
inc
inc
xor
sarl
pminsw
jae
mov
inc
into
xor
mov
out
inc
cwtl
sti
sub
iret
hlt
lods
xor
push
pop
lcall
es
movsl
xor
aam
arpl
xor
std
xchg
aad
add
movzwl
stos
and
stos
push
fs
je
inc
or
push
pop
dec
mov
xchg
mov
incl
sub
mov
lcall
mov
aaa
mov
test
lcall
test
or
adc
cmpsl
ds
xchg
decb
inc
aas
adc
dec
sub
mov
test
inc
mov
mov
and
mov
add
push
sbb
sbbb
push
pushf
lods
add
hlt
ss
mov
mov
jo
add
aad
and
xor
or
push
scas
andl
and
je
in
push
sub
into
xchg
sub
rcll
ja
aaa
sti
pop
shll
sub
cli
push
add
adc
mov
pop
adc
xchg
rorb
mov
adc
adc
mov
mov
cmp
incb
ret
mov
cmp
orb
push
add
dec
xchg
mov
add
jle
in
add
sar
sahf
and
into
xchg
xor
lock
add
jo
ret
sbb
sub
jp
push
adc
insl
mov
sub
insl
xchg
hlt
and
scas
cmp
inc
mov
mov
iret
fcoml
aaa
ret
les
ds
rcrb
jge
arpl
pop
and
add
jae
sti
aam
les
test
pop
xchg
loope
pop
push
clc
push
flds
leave
outsb
mov
int
add
loop
in
lods
lar
mov
adc
ret
add
cld
psubsw
rcll
lret
cmc
aaa
cmp
jne
addb
shlb
aam
jecxz
int
mov
jle
push
cmpsb
mov
push
adc
mov
pusha
push
insb
or
aam
test
sbb
add
ss
fistl
out
push
or
cmp
jbe
bound
xchg
das
xlat
and
sub
cmp
xchg
or
sbb
mov
je
inc
sub
lods
lods
pop
add
or
adc
push
pop
lahf
or
sahf
out
and
in
fadds
out
ljmp
lea
arpl
dec
xchg
dec
xor
lods
imul
push
rorl
add
mov
sbbl
mov
repnz
popf
push
push
daa
sub
xor
scas
frstor
sub
mov
out
and
icebp
aas
loope
ss
aad
or
js
mov
sub
cli
mov
sub
dec
push
repnz
loope
xchg
push
les
clc
cmp
and
xchg
xor
mov
stos
pop
cmp
pop
xchg
lock
filds
sbb
ja
rorb
test
stos
mov
insl
mov
f2xm1
jg
add
inc
inc
mov
lock
pop
mov
adc
mov
mov
or
push
lahf
mov
jl
cmp
add
daa
shrb
movsl
stos
adc
imul
js
sahf
dec
jb
jmp
das
js
push
sub
adc
push
mov
push
dec
sbbl
sbb
cmp
cld
call
jns
adc
cmp
stos
lcall
and
dec
popf
jg
pop
cwtl
pmaxub
in
int3
sub
push
clc
leave
in
adc
jp
test
mov
and
ljmp
mov
bound
add
insl
add
loop
push
mov
mov
adc
push
sbb
mov
and
add
or
fcoms
js
jge
fstpl
xor
sbb
jmp
dec
add
lahf
pop
imul
inc
and
mov
insb
lods
push
pushf
mov
add
jmp
scas
andb
adc
cli
adc
inc
dec
dec
imul
inc
mov
out
adc
adc
sbb
sub
cmp
rclb
rcrb
xchg
pop
mov
pushf
add
inc
addl
mull
jns
call
jp
repz
mov
xor
or
into
pop
push
repz
test
ds
mov
mov
aaa
add
sub
inc
movsl
adc
or
adc
xchg
mov
rol
add
idiv
dec
loope
xchg
or
push
fisubs
je
push
inc
cmp
mov
pop
out
add
movsb
rolb
int3
ret
into
push
jge
imul
movsl
inc
pop
loopne
scas
push
loopne
xor
adc
out
paddusb
aas
jge
aas
stc
test
rcrb
js
popf
stc
sbb
in
cmp
lock
adc
lock
and
or
sbb
pop
repnz
clc
pusha
sbb
fstpl
into
push
arpl
jb
mov
addr16
hlt
mov
push
mov
inc
clc
mov
cmpsl
loop
sti
sahf
jp
ds
cmp
jne
ret
loop
adc
and
mov
sbb
inc
shlb
into
mov
out
int3
dec
mov
mov
adc
std
sub
dec
sub
ja
mov
ss
mov
paddw
int
mov
add
sub
outsb
nop
sbb
xor
inc
push
lret
rolb
or
sub
pop
mov
into
cmp
add
cmpsl
ja
in
sbb
test
fadd
clc
xchg
lahf
mov
das
lock
into
cwtl
mov
adc
sbb
cmp
in
lds
lods
cmpsb
cmp
dec
push
dec
cwtl
jno
jne
mov
xchg
push
jp
out
mov
ret
inc
adc
cwtl
adc
aad
inc
loope
xor
push
inc
das
lret
outsb
scas
data16
dec
orl
cli
adc
in
fsts
and
cwtl
sub
jne
xchg
mov
adc
roll
js
sbb
dec
cwtl
mov
pop
dec
sbb
inc
lret
xor
xlat
fneni(8087
ja
xchg
lods
dec
cmp
xchg
js
cmpsb
jo
pop
mov
sti
adc
imull
shll
pop
loopne,pn
pop
ss
add
xchg
out
fucomip
mov
lahf
add
rcrl
xchg
rcll
mov
mov
dec
rcrl
sub
jp
jecxz
push
mov
jle
mov
dec
jle
xor
repnz
lret
insl
sbbb
imulb
loope
iret
icebp
push
shl
es
stos
mov
and
or
gs
xor
fsubr
mov
mov
shrl
cs
sbb
shl
sub
mov
pusha
stos
cwtl
xchg
xor
xor
lods
add
fisttps
je
icebp
std
inc
mov
je
cmpsl
movl
cmpsl
dec
xor
mov
and
enter
mov
cmp
lds
movsb
imul
dec
stc
cli
lea
xchg
movsb
movsl
out
jbe
ret
mov
push
incl
push
inc
jmp
ds
xlat
sub
lcall
pop
ss
clc
mov
sub
out
repz
jno
test
pop
and
stc
add
mov
fidivl
push
adc
test
ret
or
mov
pop
xchg
jge
mov
jb
dec
test
sahf
add
mov
adc
mov
fimull
sub
pushf
xchg
in
int
sub
push
push
mov
inc
add
jb
rorb
push
cmp
jp
jg
lods
enter
dec
sub
sbb
jle
ss
push
fimuls
xchg
mov
daa
xchg
push
inc
inc
pop
aam
mov
loop
adc
jo
mov
shl
stos
shll
push
dec
mov
in
mov
test
lock
jo
insl
lcall
and
ret
dec
push
xchg
icebp
jae
mov
sarl
dec
xor
adc
cmp
fs
sub
int3
add
mov
scas
idiv
mov
adc
call
inc
aaa
mov
mov
jl
mov
arpl
mov
pop
lcall
popl
jle
insb
testb
frstor
mov
test
cmpb
lock
cs
ret
mov
sbb
or
sbb
adc
scas
pop
das
push
test
inc
cmpl
adc
push
mov
movsb
adc
ss
sbbl
out
mov
lea
add
push
add
popa
sub
mov
push
mov
mov
loopne
dec
mov
sti
inc
mov
jbe
adc
shrb
and
jne
pushl
adc
xor
adc
out
mov
adc
out
pop
cmovp
pop
adc
je
std
lahf
inc
push
inc
js
int3
adc
test
lcall
cmp
push
mov
addr16
lock
jo
mov
adc
adc
jns
jbe
js
add
vpbroadcastb
sarb
ja
in
mov
adc
fmuls
js
xor
dec
lcall
punpckldq
fcomip
inc
shll
pop
xchg
incl
inc
addr16
and
mov
pop
and
icebp
sub
and
mov
cmp
push
in
rclb
inc
movl
rorl
int
mov
adc
call
stos
jle
lahf
rcrb
mov
xchg
push
lea
inc
jne
mov
mov
roll
icebp
mov
rorb
icebp
lcall
test
pop
addl
mov
jp
inc
fstpl
lcall
xlat
mov
mov
lea
test
and
dec
and
jno
loop
mov
add
or
push
push
stos
push
test
lcall
pop
adc
mov
ficomps
rolb
adc
out
rorl
imul
sarl
push
sahf
dec
mov
cli
movzbl
pop
add
or
lock
push
cwtl
add
and
mov
out
inc
int
in
mov
in
punpckhdq
mov
jle
mov
pop
pop
inc
adc
orl
insl
pop
rorb
aad
cmp
mov
mov
mov
fs
mov
mov
ss
lret
cmp
ss
or
inc
mov
hlt
arpl
sbb
mov
mov
jno
in
dec
js
ljmp
rolb
inc
sub
bound
dec
sti
rorl
add
pop
ss
jmp
pop
push
mov
sbb
je
jo
xor
or
inc
ret
push
mov
mov
sub
pop
mov
mov
xor
divl
test
or
sbb
sub
rclb
xchg
add
insl
pop
cmp
mul
ljmp
cmp
stos
aas
mov
add
shrl
in
cmp
pop
inc
xor
push
adc
cmc
sahf
inc
addb
push
jae
cmp
add
jecxz
mov
dec
js
cmp
sbb
les
push
sbb
xlat
nop
inc
ss
add
lret
jl
inc
pop
jp
out
data16
sub
fldl
cmc
int
lods
mov
addb
test
cmpsb
call
loopne
imul
sub
int3
fst
adc
push
in
sub
scas
mov
sbb
jge
aad
adc
sub
dec
push
pop
ret
in
push
clc
mov
scas
cmpsb
cs
loope
xor
push
mov
movsb
push
in
pop
fists
dec
daa
cmpsb
ja
les
orl
lea
in
cmp
pop
push
adc
scas
jmp
pop
test
cmp
lods
inc
subl
push
fdivl
jle
push
sarl
lods
loop
ret
inc
fstl
add
test
mov
jge
xor
or
sub
std
fwait
test
fcmovne
mov
shlb
sbb
popa
jmp
sahf
rorb
jno
mov
adc
clc
nop
cwtl
adc
cwtl
cmp
cmpsb
cmp
lcall
cmp
and
jle
fiadds
mov
add
in
ffreep
das
rorb
mov
mov
push
mov
cmp
inc
pop
bound
mov
xchg
cmp
add
and
add
test
sub
les
sub
imul
or
push
das
xchg
out
pop
mov
int3
mov
ljmp
data16
int
xor
addr16
inc
cmpsl
sbb
outsl
aas
cltd
push
test
in
dec
push
ja
xchg
push
cmpl
cli
pop
loope
mov
movsb
jle
es
fmul
fisttps
jg
cmc
sbbl
pop
repnz
xchg
lcall
and
out
jg
shl
andl
cwtl
and
cld
push
lods
test
xor
lock
xchg
pop
stos
mov
jl
jle
mov
or
outsb
mov
jbe
mov
push
jecxz
nop
cmp
xchg
sub
loope
das
iret
aad
lods
inc
int3
shll
out
inc
pop
js
xor
sbb
mov
dec
mov
aad
stos
jno
fwait
cmp
dec
enter
jmp
sti
sub
rcr
or
scas
loope
pusha
push
cmp
mov
test
aam
ret
jecxz
movsb
mov
ds
cmp
loopne
jnp
fdivrs
mov
out
dec
and
nop
pop
icebp
loopne
mov
shll
test
mov
in
je
inc
fisttpl
js
fnstsw
mov
or
ret
and
sbbb
mov
in
or
insl
pop
jnp
sar
mov
xor
xor
pop
aam
sbb
xchg
mov
and
test
adc
jne
cmovne
stos
out
dec
inc
hlt
fcmovnu
xchg
xchg
sub
dec
jns
push
lods
dec
rcrl
push
xor
push
subb
sbb
divb
jne
jno
aas
mov
subb
cli
fistpll
and
push
push
mov
cmpsb
adc
sbb
daa
sbb
push
sub
imul
cmpb
xor
dec
mov
mov
dec
nop
js
aaa
insb
adc
dec
mov
jge
popf
mov
cmpsl
inc
std
mov
pop
sarb
dec
in
dec
push
mov
pushf
hlt
push
and
divb
adc
adc
shr
or
in
insb
rolb
and
out
insl
and
inc
aas
xchg
xchg
add
push
fisttpll
mov
push
cwtl
popa
rolb
adc
adcl
jecxz
add
dec
rcr
stos
cmp
push
xor
aam
mov
mov
repz
pop
xchg
fisttpl
sub
mov
fwait
push
lret
shll
inc
adc
mov
clc
addb
roll
push
xchg
xor
or
out
mov
mov
pusha
xchg
mov
std
ficoml
cltd
xor
and
arpl
xor
jo
imul
cmp
add
enter
add
insl
or
push
mov
adc
jo
cli
pop
push
cmp
sbbb
sbb
ja
jl
xchg
aas
mov
xchg
in
xchg
mov
jnp
lock
test
and
lcall
ja
inc
sti
dec
cld
sbb
aaa
ss
jo
adc
loope
push
xor
sahf
cmp
nopl
inc
inc
and
jnp
cmc
jge
mov
repz
mov
fisubl
jecxz
movsb
xchg
xlat
pop
stos
je
stc
out
xor
add
pop
sbb
lret
lods
pop
lock
sbb
shl
dec
mov
jno
mov
out
sarb
adc
pminub
ss
lock
cmpb
ljmp
pop
pop
and
jmp
adc
pop
adc
sbb
and
add
jne
mov
outsl
jg
sarl
push
pop
xchg
fadd
js
movsb
cmp
adc
sbb
pop
insl
mov
cli
pop
and
arpl
popa
scas
js
popf
jb,pt
icebp
lcall
lods
lret
xor
pop
rol
outsb
dec
mov
dec
clc
inc
les
adc
jae
adc
pop
push
call
and
add
sbb
jle
inc
cmp
es
cmp
sarb
sub
lahf
and
add
inc
shlb
ljmp
push
jp
add
add
adc
dec
cs
dec
adc
pusha
call
xchg
popf
je
push
clc
push
adc
or
setb
rcll
xchg
adc
mov
xor
stos
in
cli
sahf
fnstsw
mov
adc
mov
jle
mov
sub
std
adc
xchg
jno
cwtl
movsb
inc
clc
insl
sub
das
js
inc
sarb
andl
sub
mov
cmc
ss
and
mov
cli
jnp
test
pusha
dec
add
ffreep
sbb
insb
inc
scas
rcrb
mov
jecxz
hlt
mov
and
sub
cwtl
pop
ficoml
lret
xchg
push
mov
popf
movsb
sahf
ja
out
repnz
outsl
sbb
cld
mov
inc
mov
mov
cmpb
out
rclb
mov
insb
pushl
sub
fstl
pusha
jno
dec
push
sbb
push
sbb
mov
jbe
mov
or
fwait
inc
jle
add
loopne
add
out
mov
or
mov
into
in
sbb
pop
ja
or
fwait
inc
lods
repnz
adc
lret
cli
xchg
cmpsl
inc
arpl
dec
push
stc
or
jo
jo
cmp
add
or
icebp
add
xchg
dec
lretw
adc
mov
or
dec
icebp
jl
adc
rol
cmp
push
dec
loope
cmp
xor
out
es
rcrb
scas
sbb
rcll
clc
movsb
test
sbb
fbstp
test
mov
setge
icebp
test
dec
mov
loopne
add
inc
ret
mov
aam
add
sbb
cld
or
out
enter
mov
pop
lret
mov
in
push
push
jg
jl
mov
xor
mov
dec
pop
js
mov
pop
mov
js
in
jecxz
addb
lahf
enter
out
and
rolb
and
adc
dec
lock
sub
inc
sbb
inc
aam
lock
and
xchg
xor
lods
fildl
sti
out
insb
sbb
jp
push
hlt
jecxz
iret
and
and
cld
pop
push
scas
pop
rclb
push
xor
loope
sarb
cmp
mov
int3
lock
data16
push
test
jne
add
std
mov
fdivr
nop
sub
fnclex
mov
inc
push
or
lret
das
dec
inc
mov
pop
int3
dec
fisubl
dec
loope
daa
dec
popl
in
insl
cltd
addb
mov
ret
sub
inc
cld
pop
je
in
push
repnz
pushf
adc
xchg
inc
sub
lret
out
cmp
inc
movb
sub
adc
inc
test
insb
mov
sbb
loope
into
push
loopne
call
mov
dec
xor
mov
push
nop
stc
and
out
adcl
scas
and
push
xor
inc
inc
and
and
clc
fisttpll
imul
jge
push
or
outsb
cld
loop
imul
mov
sub
ja
xor
push
test
sub
out
and
sub
or
into
test
lret
outsb
cmp
pusha
clc
loope
roll
mov
rcrb
daa
sub
jno
cmpb
fimuls
inc
pop
fisttpl
sbb
add
rorb
jg
mov
ja
andl
add
xor
mov
xchg
cs
mov
je
mov
add
sahf
cmpsl
sbb
ret
inc
lea
loopne
adc
fcmovu
ja
adc
cmc
xchg
xchg
bound
xchg
sub
mov
cwtl
pop
inc
dec
sub
mov
inc
or
push
xchg
enter
rcrl
pop
aaa
pushf
and
sub
mov
aad
inc
rclb
jne
jg
outsl
fs
xor
inc
mov
cmc
dec
jecxz
test
sti
dec
lods
pop
cmp
adc
rorb
sahf
aad
and
cmp
push
push
inc
jne
add
outsb
shll
scas
add
inc
hlt
pop
mov
les
in
or
xor
stos
xor
jbe
bound
lock
push
repnz
jl
jns
out
inc
inc
negb
out
cmp
mov
mov
in
aam
in
lret
dec
pusha
dec
inc
das
test
mov
ret
jg
cwtl
xor
outsl
ljmp
inc
pop
jecxz
jg
fwait
ljmp
bound
sbb
js
cmpsb
outsl
push
xchg
mov
push
daa
jne
mov
andb
add
xchg
fiadds
push
aam
adc
pop
int
insl
push
mov
xchg
xor
shrl
leave
mov
jne
mov
add
dec
adc
jmp
fisubrs
mov
xchg
bound
rcr
sub
and
and
mov
adc
test
inc
jge
dec
add
ss
sahf
iret
cmp
imul
test
pop
pop
and
inc
in
push
andl
hlt
xchg
test
out
in
and
lods
cld
jp
sub
sbb
sub
test
bound
pop
push
add
ret
and
fmull
stos
xchg
hlt
gs
xchg
scas
or
or
pushf
cmp
push
in
add
mov
add
add
into
xor
mov
sbb
xor
mov
inc
adc
stos
mov
daa
insb
ss
adc
adc
inc
js
cmpsl
or
sub
loopne
jge
mov
stos
dec
push
mov
xor
add
lret
mov
add
pop
testl
sub
mov
or
pop
pop
hlt
mov
stos
loop
mov
xor
out
loopne
and
pusha
mov
xor
movsb
jle
sub
jecxz
nop
jecxz
cmp
adc
jecxz
rcll
movsl
enter
add
add
into
cmpsb
loopne
sahf
cli
loopne
jecxz
xchg
clc
push
sub
pusha
sbbb
or
mov
cmp
cmc
or
inc
les
xlat
mov
arpl
mov
mov
adc
lahf
or
test
dec
icebp
cmpsb
pop
enter
sub
and
jmp
sti
cs
enter
mov
inc
std
jg
pop
dec
jae
mov
and
cwtl
add
push
shlb
dec
sbb
fadds
out
xchg
and
push
test
test
fisubrl
cmc
xchg
sbb
and
insb
clc
mov
cld
gs
dec
mov
cmp
loopne
add
fsubr
jmp
js
dec
fwait
nop
call
push
mov
dec
cmp
shrl
jno
and
inc
jp
in
stos
mov
mov
das
jo
add
jb
int3
mov
and
sub
pop
rorb
xchg
lcall
dec
jecxz
mov
lock
dec
and
cmp
test
out
dec
and
je
and
lods
add
enterw
and
cmp
sub
jb
sbbb
nop
push
mov
into
mov
sbb
dec
adc
bnd
mov
sub
les
or
mov
mov
testb
aas
and
sbb
scas
sub
dec
into
popa
in
inc
loopne
add
inc
and
test
out
push
or
push
int
jle
pop
scas
add
xchg
and
in
test
xchg
adcl
loop
push
and
mov
mov
dec
js
xchg
loop
inc
rcll
neg
stos
popa
dec
add
push
xlat
insl
jecxz
push
aad
mov
insb
shlb
scas
mul
out
test
mov
pushf
or
insb
push
adc
mov
inc
dec
pop
dec
movsb
call
add
sbb
fnstcw
fistl
mov
inc
pop
jo
shlb
ret
outsl
loop
gs
jo
sbb
es
add
adc
je
jmp
or
sbb
adc
sbb
dec
sub
inc
in
scas
mov
pop
lea
jle
in
push
fists
or
les
sbb
orps
pop
xor
jno
add
jmp
aaa
jns
jge
mov
fidivrl
or
sbb
mov
js
ret
movsl
adc
jnp
push
fsubrl
add
ss
cmovb
inc
xlat
xorb
add
stos
inc
es
je
cli
test
jne
push
sub
pusha
jg
xor
lret
movsb
adc
mov
test
cwtl
scas
movsb
jecxz
push
out
add
adc
jbe
mov
pop
xor
movsl
xchg
push
test
int3
xchg
mov
or
push
pushf
cmc
orl
mov
add
mov
dec
add
adc
push
dec
pop
xchg
mov
jmp
jbe
addr16
out
lret
push
inc
insb
lds
and
push
sti
shl
or
lds
dec
pop
xchg
call
mov
mov
fs
add
sbb
sub
shrb
add
and
jmp
push
movsl
mov
jae
aas
mov
movsl
gs
pop
stc
or
fcmovnbe
daa
inc
inc
iret
hlt
cmp
cmpsb
fbld
jg
mov
rcl
rcll
adc
and
jg
lods
ds
inc
stos
sbb
or
add
fcomps
jo
jle
add
push
push
std
push
imul
cmp
mov
xorl
enter
decl
pop
and
mov
les
ljmp
icebp
aas
adc
jg
lods
push
fcompl
mov
or
inc
lret
pop
test
jle
mov
mov
clc
andb
ss
or
arpl
cmp
std
adc
frstor
aad
dec
jnp
add
lret
mov
and
sahf
icebp
push
xor
push
movsb
inc
jg
dec
sub
push
inc
xchg
push
out
pushw
outsl
jno
sar
rcll
repz
pop
les
push
lcall
adc
fs
pop
cmp
mov
daa
ret
and
stos
clc
dec
push
xchg
cltd
pop
rorb
je
mov
add
push
fcoms
xchg
and
sbb
cld
dec
adc
jmp
sbb
jp
or
shll
mov
data16
pop
out
mov
je
cli
sbb
mov
cmp
movl
repz
clc
adc
ljmp
daa
xchg
and
and
in
xor
add
pop
adc
nopl
push
sahf
andl
xor
cmp
push
out
aas
mov
add
lock
push
sub
mov
xchg
mov
std
xor
int3
bound
ljmp
push
cmp
and
cs
fcmovbe
xlat
jg
test
or
add
and
in
and
inc
shr
cmp
ror
pushl
push
sti
pusha
scas
lods
out
jecxz
jg
sbb
call
lods
mov
xchg
aas
dec
jmp
lock
jg
jg
mov
adc
push
in
add
nop
dec
or
loopne
mov
pop
mov
add
add
adc
in
sbb
push
inc
fnstsw
add
ret
enter
cmp
popa
or
mov
mov
es
clc
add
fdivrl
aas
stos
add
mov
dec
insb
xchg
in
pshufw
sub
xchg
ret
daa
mov
cs
adc
outsl
dec
and
and
cmpl
and
mov
xor
fs
fisubrs
sbb
adc
cmpsl
mov
xchg
cmpsb
into
mov
and
pop
ss
imul
jo
mov
push
inc
sbb
adc
sub
inc
xchg
lock
imulb
mov
adc
adc
outsb
insb
bound
outsb
mov
divb
mov
loopne
scas
scas
jg
out
je
imul
add
cmp
addr16
insl
and
add
shll
xor
mov
fmuls
fs
lahf
lahf
icebp
mov
pop
lea
imul
enter
call
fwait
popa
pop
cmpsl
push
and
out
push
cmp
ss
lahf
outsl
adc
pushf
mov
je,pn
push
inc
lcall
cmovs
jae
andl
out
mov
sbb
lea
lcall
add
das
push
jl
sbbb
pop
mov
xor
push
adc
mov
cld
aaa
inc
imul
lea
or
cmp
mov
pop
rol
sbb
sub
sub
lods
cmp
arpl
xchg
jmp
jo
lods
hlt
sarl
mov
pop
adcb
sahf
push
pop
out
inc
or
add
scas
xchg
in
lods
or
xchg
out
sbb
push
ja
or
adc
pop
jl
lea
dec
adc
lods
lahf
icebp
sbb
or
daa
mov
shlb
xchg
adc
xor
int
mov
movsl
sub
insb
mov
pushf
ficoml
lods
push
mov
push
ljmp
cmpsl
adc
pop
rcl
xchg
mov
xchg
fcmovbe
xchg
popa
push
sub
mov
mov
push
add
inc
xchg
test
movsb
notb
lock
cmp
notb
adc
xchg
stos
jbe
pop
popf
xchg
jle
ljmp
dec
pusha
jnp
pop
sub
or
dec
ret
ret
push
jg
fcompl
adc
pop
fs
push
je
mov
and
movsl
pop
cli
cwtl
pop
sbb
jnp
push
xor
push
push
loop
shlb
and
movsb
mov
mov
xorl
push
adc
loop
aaa
push
xor
test
adc
and
popa
or
jne
mov
mov
jg
inc
add
enter
mov
pop
push
aam
lret
rcrb
and
sbb
mov
sbb
lods
mov
divb
nop
ret
mov
sub
aam
push
lock
insb
nop
mov
das
xor
adc
pop
jmp
lahf
cmp
mov
cltd
loope
and
loop
out
mov
movsb
dec
sbb
jae
or
dec
fs
or
jo
adc
orb
jg
and
jno
std
xchg
decl
repz
cmpsl
jae
push
je
sbb
outsb
or
loopne
xchg
cmp
inc
inc
mov
mov
push
and
jle
test
inc
cmp
lret
adc
cmpb
cmp
js
int3
xchg
negl
fs
dec
jne
or
jg
adc
mov
or
push
dec
outsb
mov
popa
cld
dec
jb
cmpsl
enter
jle
sbb
fistpl
or
aam
fiadds
cli
cld
xchg
rcr
jg
push
out
jecxz
lret
inc
pusha
rclb
sbb
mov
dec
mov
jl
mov
data16
xorb
mov
mov
add
jmp
and
add
mov
out
pop
movsb
push
in
outsb
cmp
dec
pop
push
es
iret
sub
std
mov
push
lock
lcall
or
fisttpl
adc
xchg
daa
dec
cmpb
jo
and
lret
bswap
bound
shlb
push
add
sbb
fcmovu
orb
nop
cmp
mov
and
fnstenv
lock
cli
xchg
data16
sub
jmp
mov
push
push
mov
mov
loopne
loop
jnp
or
push
test
mov
xor
cmc
push
ffree
mov
rol
xchg
mov
aaa
dec
add
add
add
inc
loop
js
add
cmp
outsb
aas
adc
dec
aad
and
add
xor
fcomps
mov
add
pop
xor
add
cli
add
int3
cmp
add
das
sub
xor
mov
in
add
xchg
add
mov
daa
lods
mov
mov
and
adc
mov
pop
dec
aam
xor
aad
ljmp
inc
test
jl
loop
xchg
fwait
rorb
in
xchg
outsl
cmp
xchg
les
pop
push
xchg
dec
movsb
or
js
aaa
pop
call
into
xor
sub
inc
cld
mov
add
addl
les
push
push
and
dec
pushf
mov
inc
ret
jle
sub
adc
xchg
scas
jmp
cmpsl
out
add
clc
jmp
or
xchg
nop
xchg
and
outsl
mov
pushf
inc
xchg
test
inc
mov
cmp
test
dec
xchg
push
cmp
enter
jle
mov
mov
test
mov
mov
and
add
mov
push
add
repnz
fsub
shlb
cmp
push
popf
nop
popa
loopne
shrb
in
clc
dec
outsb
add
cmp
push
lea
or
stc
mov
cmp
dec
xchg
cli
std
pop
xchg
mov
mov
inc
mov
sbb
stos
pop
fistps
into
add
xorl
out
jne
fcmovbe
jno
inc
dec
paddd
jecxz
cli
inc
ss
lds
clc
adc
mov
lds
mov
dec
fadds
loopne
cld
andb
ret
pop
xor
imul
xor
fisttpl
hlt
jno
xchg
or
mov
negl
xchg
mov
and
adc
lds
shlb
pusha
jbe
stos
call
push
mov
out
mov
addb
mov
sub
mov
scas
jmp
dec
jmp
insl
sbb
push
sub
jp
repnz
sub
mov
inc
ds
push
lods
pop
cld
sbb
xor
out
js
dec
repz
adc
outsl
cs
aam
nop
imul
fcomps
cld
enter
or
mov
fstpl
sbb
data16
sub
xlat
aas
iret
in
xor
push
cmp
or
adc
shll
or
lea
mov
jo
pop
lcall
fsubrl
sbb
imul
inc
adc
jns
pop
outsb
cmp
or
mov
pop
iret
xor
xor
push
or
aaa
lock
adc
iret
mov
pop
test
outsl
ret
cltd
in
sub
fldt
jecxz
sti
pushw
lods
dec
shl
mov
push
and
dec
mov
or
jae
xor
rcl
or
lock
lahf
xor
add
pop
sbb
adc
lret
sub
sahf
pop
test
cmp
fstpt
pop
or
fwait
fs
test
sbb
dec
ret
lock
inc
or
imul
mov
mov
push
xor
jecxz
jno
jmp
dec
cltd
inc
pop
mov
lahf
cltd
inc
push
cmpsl
jns
insb
adc
fs
ss
xchg
mov
mov
scas
es
iret
jmp
sub
fwait
and
loope
ds
dec
sbb
in
jmp
out
bswap
test
or
lods
xchg
sbb
pop
jae
jnp
dec
sahf
les
leave
adcl
push
push
sti
fiaddl
ret
adcb
stos
inc
inc
call
mov
pushf
push
movsl
and
daa
xchg
mov
cmp
pop
adc
cmp
pop
add
mov
inc
pop
or
push
insb
shrb
adc
and
jecxz
mov
clc
and
hlt
shrb
push
outsb
add
fsqrt
adc
stos
mov
lea
icebp
mov
dec
aaa
cs
inc
ja
mov
sbb
push
mov
adc
pop
inc
or
jp
mov
enter
in
inc
sbb
lods
lds
push
lock
xchg
mov
sbb
repnz
jno
mov
xchg
mov
or
mov
sbb
adc
rcr
scas
icebp
cmp
pop
xorb
aad
mov
adc
pop
jl
adc
insl
ljmp
push
xor
or
daa
cmp
mov
sahf
daa
mov
add
sbb
mov
stos
pop
movsb
lfs
mov
rorl
xor
fwait
add
mov
jge
js
fdivrs
scas
dec
fisttpll
stc
inc
dec
cwtl
rclb
xor
lahf
fstl
mov
xchg
pop
scas
aad
scas
cmpsb
or
leave
cli
pop
jae
idiv
mov
cmpsl
sahf
lods
sub
addr16
mov
and
sub
ds
xchg
mov
mov
pop
cmpsl
jmp
loope
ret
cltd
mov
bound
ud2
and
mov
cmp
jbe
xchg
pop
aaa
xlat
cmp
xor
sub
test
jp
mov
dec
and
sar
add
ret
xor
mov
sbb
dec
imul
xchg
pop
out
jge
sbb
mov
stos
adc
jne
scas
pop
cmp
orl
mov
jb
mov
add
pop
mov
xchg
movsl
inc
adc
add
push
loopne
pop
push
mov
pop
jge
nop
roll
lcall
cmp
cltd
lcall
js
hlt
inc
mov
test
out
dec
bound
sub
xchg
push
movntps
call
jl
test
nop
imul
dec
iret
ljmp
adc
xchg
xchg
xor
jle
cmp
pop
movsl
jge
and
xor
push
add
dec
mov
or
and
mov
add
push
sbbb
sub
out
mov
and
adc
and
cmp
or
adc
add
lods
aam
xchg
mov
mov
movsl
jmp
cmpsl
fsubp
or
sub
and
pop
fld
mov
push
jle
cmp
cmp
xor
ss
push
fcmovnb
out
je
pop
add
xor
insb
cmpsb
xchg
sbb
lds
or
test
add
mov
inc
mov
push
jle
out
jnp
and
inc
and
cli
cli
mov
jp
inc
cmp
cmp
jp
hlt
xlat
test
cld
mov
mov
dec
nop
add
xor
js
cmp
out
push
inc
jecxz
lock
outsb
add
stc
push
push
mov
fsubrs
je
icebp
inc
push
testb
push
xor
xchg
lock
jp
and
add
jne
ror
jecxz
xchg
add
xchg
jae
add
and
adc
rcrl
pop
pop
std
scas
xor
adcb
cmp
jo
imull
adc
push
push
outsl
add
sbb
xor
lods
sbb
inc
pusha
xor
fwait
ds
cmpsl
push
mov
inc
daa
clc
popa
ret
test
jecxz
lods
pop
je
mov
inc
adc
push
lods
jae
push
roll
mov
addb
pop
mov
lock
ja
movsl
push
enter
jmp
repz
stos
push
pop
add
push
aam
xor
jle
lret
and
and
push
mov
leave
gs
cmc
xlat
or
lock
mov
or
popf
inc
mov
jo
xor
pop
cwtl
ljmp
or
mov
pop
mov
cmp
mov
pop
mov
sbb
jns
je
pop
js
stos
dec
xor
xchg
lcall
les
push
xor
inc
or
movsl
mov
mov
fbld
jnp
loop
scas
and
loope
add
mov
lcall
sub
push
mov
ss
or
pusha
stos
insl
imul
notl
push
addr16
ret
cmp
mov
pop
add
inc
xchg
scas
js
js
adc
cmp
dec
xchg
imull
jle
ds
pop
mov
pop
lret
clc
cltd
clc
push
and
mov
xchg
xchg
out
stc
rcr
jnp
sbb
jb
pop
les
enter
mov
pop
fld
addl
mov
je
xor
iret
cld
nop
cmp
sarb
xchg
imul
loopne
in
mov
icebp
loope
or
scas
dec
lea
lret
lahf
je
icebp
mov
push
insl
dec
popw
cwtl
pop
movsl
out
xchg
daa
mov
xor
dec
cmp
cmp
ja
dec
sub
aaa
testb
inc
pop
mov
pop
bound
pushf
pop
mov
cmp
pusha
jge
xchg
sub
lahf
imul
dec
add
rcrl
lea
movsl
dec
loop
mov
lds
clc
jle
add
sbb
push
xor
daa
mov
jo
std
fidivrs
mov
fidivrl
mov
rcr
fwait
cmp
add
mov
cld
roll
insb
pusha
movsl
int
loopne
loopne
fcomps
xor
adc
push
pop
test
mov
adc
js
mov
loopne
shl
adc
mov
jmp
movsl
clc
gs
jmp
xchg
popa
das
jnp
imul
lcall
add
dec
mov
mov
push
mov
call
add
push
xchg
sti
adc
fcmovnbe
push
ljmp
xchg
icebp
dec
mov
pop
pushf
inc
stos
shlb
mov
movsl
sahf
rorb
sub
shrb
dec
and
mov
and
inc
out
pushf
fwait
sti
shll
push
bound
sbb
mov
mov
dec
sub
in
cmpsl
mov
jmp
sbbb
cmp
testb
dec
or
dec
jb
push
jmp
cmpsb
ror
movsl
dec
dec
lahf
xchg
push
pop
loopne
data16
dec
or
cmpsb
pop
pop
pusha
cltd
ret
push
add
movsb
sub
jmp
aad
jno
sub
cmp
test
mov
push
pop
dec
cmp
xor
add
cs
jecxz
xlat
sbb
xchg
inc
add
inc
push
pop
rcrb
ljmp
pop
cwtl
divb
jg
cld
inc
lock
mov
lret
jb
dec
or
add
leave
jecxz
out
mov
int3
and
loopne
pop
jecxz
cmc
daa
test
daa
test
icebp
mov
loopne
cmp
inc
mov
cmc
sub
rcll
xchg
addl
imul
iret
inc
and
idivb
dec
push
inc
push
mov
pop
push
int
inc
shll
mov
into
xchg
loope
test
cmp
lock
xorb
arpl
adc
hlt
inc
sub
das
add
or
fidivl
xor
lock
je
cmp
cwtl
cld
sub
cmc
add
xchg
je
lock
sub
jno
js
clc
mov
cltd
cmp
lea
xchg
pop
movsb
pushf
pop
pop
negb
ja
push
cmpsb
jp
cmp
or
adc
adc
pop
lahf
stos
jne
hlt
xchg
fisubl
sub
mov
or
leave
ffree
mov
pusha
pop
adc
rol
in
test
mov
push
lahf
jecxz
fadds
push
rol
xchg
cwtl
sbb
pop
or
clc
jo
lret
or
cltd
dec
jl
out
push
jg
int
es
popl
add
push
jmp
insl
adc
jbe
jge
xor
jnp
cmpsl
add
and
pop
or
push
push
xchg
add
in
aaa
sbb
dec
pop
scas
xchg
gs
repz
lock
cmp
rorl
adc
mov
daa
jecxz
or
or
xor
or
push
std
jmp
fldlg2
hlt
movsb
test
mov
ret
pop
push
jl
sahf
push
mov
dec
stos
cmova
pop
sbb
mov
daa
movsl
cltd
sub
inc
inc
xchg
or
jnp
call
pop
cmp
dec
xor
roll
dec
repnz
shlb
mov
xchg
xor
mov
loop
cs
or
xchg
rcrl
mov
sbb
add
callw
in
mov
xchg
lcall
stos
out
stc
rclb
push
mov
jge
pop
sbb
rep
lcall
fstpl
test
mov
lds
jmp
inc
adc
mov
mov
jmp
je
std
ljmpw
dec
sbb
outsb
cmp
add
cmpsb
aad
xchg
mov
ljmp
push
cld
cmp
fidivl
pop
es
sub
or
out
hlt
loopne
mov
call
mov
mov
adc
mov
add
mov
fsubs
pop
cmp
rolb
jmp
xchg
cmp
xchg
sbb
pop
lret
and
popf
rcrb
hlt
popa
iret
add
aam
dec
push
push
frstor
cmc
mov
add
pop
cmc
xchg
inc
fucomp
jbe
cmp
ret
cmpsl
pop
push
inc
std
bound
pop
inc
xor
clc
sahf
jo
lahf
inc
rol
hlt
je
jne
inc
mov
nop
lea
sbbb
into
enter
or
adc
cmp
and
dec
and
pop
adc
mov
pushl
jl
mov
das
call
es
cmp
mov
mov
lret
or
fldl
pop
add
mov
loope
test
fs
cvtps2pi
pop
pop
inc
jae
mov
or
scas
and
xchg
or
adc
fisttpll
sub
repnz
and
fiaddl
fdiv
aam
aam
xchg
jae
mov
xchg
jns
pop
arpl
clc
nopl
pop
shlb
aam
xchg
rorb
outsl
mov
rorl
pop
outsl
aam
sahf
adc
fwait
xchg
or
scas
mov
mov
or
icebp
jmp
lret
popf
adc
sbb
pop
xorb
jmp
push
in
pop
pop
jp
aad
push
scas
sub
xchg
xor
int3
xor
jno
jg
mov
sbb
cmpl
out
xchg
gs
negb
inc
scas
in
scas
mov
hlt
and
mov
ret
mov
roll
outsl
mov
inc
fdivrs
xor
ljmp
inc
fwait
cli
mov
push
lock
and
inc
sbb
in
inc
dec
ret
jmp
pop
jbe
sahf
inc
dec
inc
mov
pop
adc
adc
icebp
sbb
leave
adc
cld
cli
and
adc
les
cmpsl
and
mov
adc
insb
sub
inc
aad
test
scas
inc
fdiv
and
cmpl
sbbl
pop
or
stos
stos
push
jo
jge
stc
push
cmp
and
pushf
lcall
cli
cli
movsb
jnp
mov
xchg
sbbl
adc
loopne
or
and
cmp
jmp
mov
aam
fsts
mov
cmpl
sub
insb
pop
fucomi
ds
adc
fidivl
pusha
int3
cld
jg
push
test
xchg
add
in
pushf
loopne
es
mov
adc
or
adc
pop
jl
jb
xor
jno
subb
jo
xor
xchg
das
mov
mov
enter
rorb
ret
push
idivl
pop
das
out
gs
and
mov
jbe
pop
lret
jecxz
push
lret
idivb
mov
insl
lret
daa
in
divb
cmpl
pop
mov
aaa
nop
sbb
fnstcw
xchg
std
aam
fucomip
clc
jecxz
inc
jp
jbe
je
lret
pop
jb
pop
add
mov
rcl
pop
in
adc
or
pop
adc
lcall
fmuls
push
jecxz
xchg
xor
adc
out
adc
arpl
mov
mov
sti
cmp
or
dec
mov
das
orl
cmp
jno
aaa
sub
incl
rorl
mov
sub
mov
rorl
insl
lea
test
pushl
es
mov
adc
jmp
jmp
xchg
call
loope
cmpsb
ja
ret
jns
ljmp
adc
pop
mov
clc
jl
or
les
mov
cwtl
add
addl
mov
add
mov
add
mov
js
xchg
xchg
sbb
mov
push
call
popa
xor
mov
scas
adc
mov
add
jg
call
dec
bound
jge
aas
xchg
rclb
lahf
mov
fmull
cmp
or
and
lods
imul
ret
dec
adc
jb
ljmp
mov
call
repnz
mov
cmp
sub
roll
and
xor
or
movsl
push
mov
ficoml
call
sub
push
test
sbb
mov
aad
shll
into
repnz
or
cmp
inc
and
adc
cmp
add
sbb
lea
dec
insb
aas
dec
call
jmp
pop
movzbl
mov
hlt
cmp
outsb
push
loope
and
mov
or
nop
xor
nop
pushf
mov
or
cmp
and
add
dec
gs
push
psraw
dec
cld
or
pop
sbb
test
dec
es
jns
lock
loope
cli
mov
aam
ja
xchg
inc
test
add
test
lods
pop
call
lods
test
push
jg
xchg
cmp
and
mov
push
cmp
jle
lods
mov
push
mov
pop
lods
jb
loope
sub
jno
sar
mov
or
sub
rorl
sarl
add
roll
add
lcall
mov
out
pop
push
scas
fsts
xor
in
shrb
cmp
cli
aad
sub
outsb
inc
jp
popa
sar
mov
popf
mov
mov
adc
movsb
lock
jbe
int
or
fmuls
loopne
or
lock
imul
xchg
and
aad
add
shlb
adc
or
out
cmp
xchg
push
aaa
jns
sbb
jne
rclb
adc
mov
inc
shr
adc
sbb
shr
movl
or
mov
shll
sti
mov
push
fs
and
mov
sbb
lcall
pop
or
cmpl
es
xor
add
jmp
push
jns
mov
push
sbb
movsb
push
jp
push
mov
call
and
adc
inc
mov
out
push
dec
push
leave
cmp
fwait
es
and
and
outsb
icebp
mov
in
and
mov
jmp
arpl
out
fsubrl
push
jns
cwtl
mov
dec
pop
call
aad
cmp
add
popa
cli
out
mov
mul
adcb
add
cmc
test
pusha
cmp
push
stos
ret
sub
loopne
adc
outsb
inc
and
sbb
cltd
cwtl
xchg
add
jmp
mov
ds
and
mov
sbb
pop
mov
stc
mov
inc
bound
jbe
push
std
sbb
add
mov
int
push
mov
or
and
test
dec
and
xor
push
enter
xor
adc
outsb
fwait
push
fdivrl
pusha
loopne
imulb
lock
cmp
mov
loop
aas
and
inc
add
or
pop
out
outsl
ljmp
pop
adc
cmpsb
mov
cmp
push
pop
cmp
or
or
scas
adc
adc
lock
clc
mov
ret
js
fbld
fcmove
add
pop
stos
adc
andb
pop
lock
ds
mov
lods
subb
dec
cltd
mov
cmp
mov
jne
lahf
xchg
sbb
das
stos
js
push
xor
lahf
add
or
and
icebp
jp
cs
in
aad
nop
ret
cld
test
in
cwtl
cli
cmp
and
jbe
das
cltd
pop
push
icebp
hlt
adc
ficoms
inc
xor
aaa
inc
adc
lea
scas
mov
cmpsb
mov
and
sbb
sub
add
mov
and
clc
mov
movsl
into
out
ret
cmc
loope
lahf
inc
or
adc
jecxz
fwait
mov
dec
jecxz
add
outsb
inc
mov
push
jl
mov
cmpsl
aaa
cwtl
push
adc
popa
outsl
jge
sbb
lods
adc
movsb
shlb
mov
movsb
cs
ret
or
pushf
les
or
jp
pop
push
jge
cmp
push
test
imul
push
dec
stc
insl
loop
cmp
rcrl
dec
fadds
into
mov
les
outsb
cmpsb
cmc
daa
mov
lret
cmp
xor
cs
mov
adc
mov
out
test
lahf
xchg
stos
aas
and
aam
inc
inc
xchg
test
lret
es
cld
shl
sub
xchg
dec
neg
jp
or
sub
jae
ret
xchg
fwait
cmp
push
pop
add
lret
gs
inc
movsb
push
push
xchg
aaa
mov
sub
lret
je
movsb
mov
push
push
cmpsb
push
mov
aas
cmp
mov
sbb
mov
insb
jmp
and
call
fmull
imul
push
out
jg
mov
xor
test
push
fisubs
xchg
ret
mov
sub
jl
fsubrl
adc
mov
cmpsb
dec
dec
add
nop
push
mov
fildll
sbb
adc
pop
lods
dec
cld
mov
xchg
and
iret
mov
mov
fldcw
fwait
inc
jbe
add
add
adc
xor
adc
imul
lret
outsb
add
cmp
mov
or
bound
xor
inc
dec
mov
enter
test
rclb
cld
sub
mov
mov
mov
and
push
test
sbbl
push
pop
lock
mov
mov
push
data16
aad
add
mov
outsl
aaa
cld
ss
js
and
jg
aad
mov
inc
sub
jmp
cmp
and
movsb
inc
cld
xchg
dec
push
and
icebp
cmp
add
cli
sbbl
fdiv
and
out
ss
or
lahf
subb
repz
fwait
cli
xchg
test
lock
add
inc
push
pop
and
movsl
push
cmp
lods
push
sbb
cmpsb
dec
ds
pop
mov
mov
add
das
adc
add
jno
mov
pop
pushf
aam
shrb
jmp
mov
enter
inc
dec
jl
cmp
test
test
fildll
ds
js
das
mov
ljmp
out
adc
cmp
test
adc
sub
inc
and
mov
mov
cmp
dec
jmp
nop
jge
je
mov
xlat
pop
jo
fdiv
repz
cli
lods
xchg
aas
sbb
sub
add
cmc
jbe
leave
inc
lock
out
pushf
dec
test
pop
xchg
sub
jl
call
in
divb
gs
aaa
test
sub
leave
push
scas
add
mov
and
adc
aas
addr16
or
xlat
jo
xchg
test
push
stos
test
mov
lock
push
movsb
pop
out
xchg
pusha
fdivrl
ss
ret
inc
fs
xor
jmp
adc
dec
mov
std
icebp
adc
popa
inc
movsb
movsb
ljmp
mov
inc
inc
icebp
incb
inc
ds
xor
mov
fwait
mov
int
sbb
push
mov
rcrb
incl
out
jecxz
clc
push
shll
adc
int
rclb
add
cmp
popf
push
lret
adcb
sbb
rolb
cmp
sbb
loopne
inc
and
scas
inc
test
js
test
adc
loope
adc
jl
pop
shrb
add
sub
xor
rorl
mov
xchg
pop
mov
out
xchg
xchg
xor
mov
ret
stc
jge
xchg
je
inc
xchg
xchg
testb
inc
pop
sub
out
notb
inc
or
mov
lock
lds
test
cmp
add
add
push
loopne
pop
inc
xchg
xchg
xchg
add
pop
out
popa
stc
xchg
pop
imul
jmp
lea
xchg
mov
add
and
sbb
xor
loopne
mov
scas
jmp
xor
lahf
ret
push
xchg
jb
movsb
popf
or
push
dec
cmpsb
jg
xor
mov
imul
mov
add
or
lret
daa
das
fadd
jnp
cs
xor
call
jmp
fcomps
push
pop
outsl
int3
shll
andb
jge
push
cmc
jmp
pop
in
dec
call
call
xchg
xchg
insb
in
orb
std
out
ret
inc
sub
jmp
test
xchg
scas
call
test
adc
pushf
stc
inc
cmp
cli
xchg
ja
lret
jecxz
push
ja
jo
fstps
push
jmp
bound
or
fbstp
lock
cmp
ret
addb
aas
xor
movsl
dec
push
adc
aad
outsb
jle
fdivrs
cmp
ret
std
out
xor
mov
shrl
pop
addb
sub
sbb
inc
sbb
aas
and
test
or
mov
dec
xor
xlat
imul
mov
mov
shll
hlt
inc
jp
fmull
loopne
cmp
adc
fdivr
inc
shrl
fs
stc
sbb
mov
orb
lds
mov
xor
add
or
inc
add
fcoml
push
test
aas
wbinvd
fsubs
mov
subb
shr
ss
movb
and
and
or
rorl
pop
mov
push
repz
push
add
adc
addb
push
popa
loopne
mov
inc
xorl
add
jo
mov
or
and
jmp
adc
jno
adc
shl
mov
cmp
adc
mov
sub
cli
iret
mov
stos
push
push
sub
xor
inc
push
mov
xor
dec
fbstp
call
mov
mov
sub
in
push
jl
scas
pop
mov
mov
call
or
out
inc
fs
sbb
add
or
or
or
mov
mov
test
jb
pop
mov
or
gs
add
fwait
xor
rorl
fwait
inc
sub
leave
jne
dec
aad
hlt
push
mov
out
xor
leave
xor
cli
pop
arpl
pop
scas
sub
adc
or
mov
test
inc
jge
mov
adc
insb
adc
dec
popf
shrb
test
andb
cmp
cld
dec
jmp
adc
imul
arpl
mov
lcall
mov
or
stc
rcrl
push
mov
jmp
or
ficoml
xor
jbe
rol
sahf
pop
mov
ljmp
ljmp
int
pop
jbe
push
pop
push
orl
loope
ja
mov
test
fwait
fwait
xchg
addb
sbb
adc
sub
mov
inc
cs
and
add
add
sub
xor
cld
filds
dec
std
mov
fidivl
jmp
xlat
test
out
sbb
fs
inc
test
push
mov
mov
test
out
inc
ljmp
xor
ret
mov
pop
rol
push
push
decl
or
enter
inc
imul
je
xchg
push
jne
std
into
dec
sbb
nop
out
mov
jg
in
inc
sbb
and
or
xor
mov
or
push
add
in
addr16
js
addl
pop
std
aas
test
mov
push
jae
sbb
cltd
cmp
or
sub
mov
add
mov
jae
fwait
shll
mov
cltd
loop
cmpsl
jae
aad
cwtl
jle
es
push
lahf
jl
pop
add
loope
mov
xchg
xor
cmp
aas
mov
mov
test
pop
loop
push
mov
sub
mov
shr
xchg
aam
movsb
pop
addb
pop
je
mov
out
ds
outsb
cmp
cmpsb
icebp
pop
shlb
mov
add
mov
inc
es
or
in
movsl
jg
xor
in
stos
jecxz
sub
movsl
cmc
stos
fcmovb
add
add
or
pop
dec
push
xchg
sub
xchg
dec
mov
push
mov
cmpsb
mov
add
test
pop
cwtl
fsubl
ljmp
call
sbb
sbb
dec
lods
insb
loopne
dec
dec
int3
jo
mov
insl
or
xor
sbb
xchg
pushw
add
iret
arpl
push
jg
mov
mov
in
mov
sbb
adc
push
ljmp
pop
in
shr
xchg
clc
adc
jne
ljmp
loopne
sub
stos
call
jb
mov
inc
xor
rcr
jp
sbb
stos
mov
aam
test
fadd
mov
scas
inc
hlt
inc
cmp
lds
bnd
imul
cmp
popf
xchg
add
sub
sahf
mull
cmp
push
pushf
xchg
and
adc
fidivrs
xchg
sbb
ja
flds
and
lcall
inc
inc
and
loopne
sub
mov
cmpsb
sar
mov
lods
dec
mov
lods
or
shll
sub
mov
or
sbb
mov
fdivl
lock
inc
ret
iret
fistl
mov
push
inc
xchg
and
cmpl
jmp
jmp
scas
sub
jl
jecxz
mov
pop
lock
cmp
inc
jle
and
cltd
mov
daa
inc
mov
ja
jmp
mov
push
sahf
mov
cmp
add
mov
mov
in
test
jmp
popa
or
hlt
and
ss
sbb
mov
inc
push
lahf
xor
fidivs
jno
jle
shld
es
xchg
movsb
fstps
std
outsl
inc
js
cmp
cli
or
faddl
xor
mov
pop
stc
data16
dec
cmp
mov
mov
mov
dec
ss
es
pop
shlb
rolb
nop
ret
add
dec
mov
cld
cmp
mov
mov
xadd
pop
pop
aad
pushf
fiaddl
bound
adc
inc
shrl
lret
mov
lods
cwtl
jmp
fcmovne
mov
cmp
cmp
inc
mov
push
xchg
iret
adc
xlat
icebp
jb
or
xor
gs
adc
divb
fcomps
sub
ds
dec
jno
and
xchg
fidivrl
push
shlb
push
and
inc
mov
jo
xor
add
inc
pushf
or
or
jo
jns
in
inc
cmp
mov
scas
sti
in
mov
js
sbb
mov
mov
add
xor
mov
les
fsubr
or
frstor
push
add
std
cwtl
mov
dec
mov
sbbb
imul
cmpsb
and
mov
add
mull
pop
jmp
add
stos
cltd
stc
or
pop
lea
call
push
mov
mov
add
test
icebp
sahf
fldt
or
mov
mov
push
mov
add
pop
arpl
inc
pop
push
adc
mov
loopne
subb
mov
jno
xor
xor
mov
unpcklps
loope
insb
insl
cmc
sbb
xor
aam
xchg
mov
add
shrb
int
cltd
data16
or
pop
push
push
sar
sub
in
dec
adc
sub
jns
push
xchg
js
push
pop
or
pop
aad
mov
loope
mov
lds
push
fcmove
fucomip
ret
fcmovu
cwtl
and
rorb
imul
mov
and
or
dec
sahf
cmp
fisubl
mov
cli
cld
scas
lods
cs
fbld
sub
and
mov
mov
aaa
jmp
inc
xchg
mov
movsl
adc
das
and
sbb
out
fcompl
mov
cli
lar
mov
mov
out
mov
mov
aas
xchg
in
fcmovu
fadds
daa
xchg
icebp
iret
push
test
imul
push
hlt
or
xchg
test
inc
pusha
mov
dec
pop
lret
pop
lock
test
std
ror
cmp
loope
and
comiss
inc
repz
dec
mov
dec
pop
test
or
xchg
sahf
and
dec
out
push
scas
push
xor
popf
loopne
clc
int3
addr16
mov
xor
outsl
popa
add
mov
js
cmpsb
and
fs
push
ja
cmc
pop
xor
xor
int
and
test
adc
scas
clc
mov
mov
mov
mov
pop
adc
pop
inc
and
pop
cmpsb
scas
in
sbb
mov
inc
adc
jle
add
scas
shl
shr
adc
lods
mov
lock
ss
insb
pop
jnp
ret
ljmp
add
dec
and
data16
xchg
cld
push
ffreep
cmp
ljmp
dec
shll
mov
hlt
xor
in
stc
or
jmp
pop
mov
jle
push
or
sbb
in
into
repz
adc
mov
test
push
pushf
add
into
stos
mov
imul
or
inc
or
dec
loope
loopne
sti
or
push
add
push
fs
imul
cmp
repz
movsb
add
pop
aas
cmpsb
adc
cmp
es
les
dec
adc
nop
cli
add
and
lods
sub
xor
insl
and
clc
sub
fists
xchg
add
cmp
rcrb
inc
or
subb
mov
xor
cmp
shr
and
lods
xchg
mov
lods
pop
push
scas
push
adc
sbb
jecxz
add
mov
rcrb
jg
mov
push
jmp
test
aas
rolb
stos
stos
je
lods
sub
aam
out
xor
jno
popfw
rorb
sti
add
mov
cmp
push
loopne
and
popa
andl
cld
movsl
mov
sub
mov
sbb
add
inc
inc
and
push
outsl
cmpsl
les
jne
inc
gs
sbb
movb
testb
or
popa
mov
js
sbb
dec
dec
mov
dec
add
in
sbb
shr
pusha
push
mov
mov
inc
or
sub
js
adc
ret
pop
fbstp
and
push
inc
out
adc
stc
mov
jg,pn
loope
mov
xor
leave
rol
inc
shrl
pop
push
stc
push
or
add
test
dec
ljmp
and
scas
push
in
cmpsl
dec
mov
sti
test
push
das
sub
jae
pop
imul
push
sbb
push
xor
add
inc
dec
and
jmp
or
pop
ss
cmp
mov
lods
xlat
cld
or
lahf
xor
pop
cmp
adc
jb
mov
xchg
xor
dec
fwait
cld
and
jmp
popf
add
push
lret
dec
popa
loop
js
lods
pusha
dec
pop
sahf
subb
inc
dec
out
fdivrs
inc
push
and
pop
ret
ret
shr
fcomp
adc
xor
add
mov
fldcw
ret
nop
andl
jmp
inc
dec
and
adc
and
lea
nopl
repz
mov
andb
jp
xor
pop
ja
out
fsubl
push
dec
cwtl
pop
jge
rorl
push
sub
out
jle
out
or
pop
jp
mov
cmpl
dec
ss
rcll
icebp
fistl
jb
xchg
fildl
xchg
pop
pop
pop
mov
sub
mov
push
sub
shrb
adc
mov
lods
sbb
les
pop
mov
lock
cmp
fsubl
add
add
mov
lods
rorl
xchg
sbb
add
push
sti
fildl
and
mulb
cwtl
sub
push
fimuls
cmp
aam
fs
pop
cmpsl
notb
addb
or
insl
repz
pop
cmp
lods
mov
loop
std
fcoml
cmp
add
cmc
inc
cmp
cmp
jle
inc
aas
mov
push
popa
xor
dec
or
fldcw
or
push
les
fimull
xor
lds
jg
cmp
sub
mov
or
jge
nop
scas
shrb
leave
ret
push
add
mov
movsl
stc
sbb
filds
mov
or
decb
icebp
insb
xchg
filds
add
inc
jns
push
pop
imul
push
or
xor
ret
popf
cmp
jg
dec
clc
pop
sbb
and
or
nop
lret
and
iret
test
loope
push
cs
dec
push
inc
push
and
in
pushf
mov
imul
inc
test
fs
in
mov
cmp
mov
and
jnp
xor
dec
ss
dec
xchg
push
mov
sbb
adc
inc
pop
repnz
add
inc
adc
shr
jns
adc
or
sahf
into
jle
cmpsl
cmpsb
sub
movsb
adc
adcb
push
addr16
sub
inc
insb
add
and
sub
inc
push
cmp
lcall
cld
xchg
test
jle
add
jl
or
and
mov
shll
cmpsb
loopne
lcall
ljmp
jg
dec
xorb
sub
in
cmpsb
cmpsl
sub
das
or
or
addb
xchg
or
mov
add
push
add
shlb
jno
movsb
into
push
and
adc
inc
test
and
outsl
mov
xor
pop
popa
icebp
push
stc
and
insb
cmpsl
add
or
ficoms
jl
sbb
or
jge
ret
xchg
push
xchg
xlat
iret
out
sbb
or
sub
mov
and
ret
subb
push
mov
and
xlat
add
pushf
dec
gs
push
dec
arpl
stc
or
pop
add
pushf
divb
xlat
test
ret
sbb
and
pop
sbb
insl
mov
dec
mov
xor
lahf
and
roll
sub
mov
sub
js
xchg
imul
mov
cmpl
leave
push
mov
push
sbb
icebp
jg
fldt
mov
push
loopne
cmp
jno
jae
and
mov
sub
mov
les
mov
shl
mov
or
dec
mov
mov
xchg
sbb
push
xchg
add
movsl
jnp
je
lds
add
mov
out
dec
rcl
push
fistl
pop
sub
add
scas
rol
mov
sbb
out
inc
aaa
adc
aaa
repnz
subb
movsl
inc
test
adc
outsl
dec
xchg
cli
sahf
or
aam
stos
stc
ljmp
lea
rorb
or
aam
bound
enter
or
adc
fwait
imul
sub
sbb
jno
aam
and
arpl
lock
add
roll
xor
or
xchg
es
cmp
pop
add
mov
mov
mov
sbb
mov
and
cli
ss
fst
sub
mov
or
mov
ret
push
in
or
sub
aaa
shrb
xor
scas
adc
jo
js
dec
mov
inc
xchg
sub
inc
pop
inc
jae
lea
pop
andl
hlt
xor
inc
stos
xor
cmp
mov
sub
add
inc
das
mov
sbb
je
int
pusha
mov
cmpsl
aaa
xchg
push
mov
add
test
and
xor
xchg
rcrb
xchg
mov
mov
cmpsl
shlb
das
or
adc
imul
adc
xor
push
hlt
arpl
pusha
xchg
scas
inc
cmp
inc
loope
inc
add
pushf
repnz
mov
or
aad
jae
jmp
call
adc
shll
stos
ss
inc
ja
out
push
fwait
cmp
lahf
sub
inc
inc
inc
enter
lahf
adc
or
hlt
mov
xor
sbb
jmp
inc
subb
mov
sbb
rorl
and
xor
xor
push
or
mov
push
icebp
adc
mov
and
jl
xor
add
xchg
repnz
lcall
push
lret
cmp
out
mov
xchg
test
sarl
add
inc
fisttpll
lock
popa
xchg
add
adc
dec
push
js
push
and
pop
xchg
push
cmpsb
xchg
pop
lods
xchg
cmp
xchg
mov
fcomps
push
sbb
inc
pop
adc
je
xchg
adc
cwtl
rclb
and
push
pop
fldcw
mov
add
sub
and
mov
xor
push
cmpsb
cli
loope
and
mov
add
mov
mov
fwait
lret
inc
pop
sbb
and
fisubrl
in
clc
or
add
bound
inc
mov
popa
mov
jge
sarl
stos
addr16
cmp
dec
xor
vxorps
xor
js
jle
scas
addl
sarl
adc
jg
lcall
push
clc
insb
pop
rol
fiadds
repz
adc
cmp
sub
in
pop
lea
clc
lret
adc
pop
loopne
and
test
test
push
rorb
aas
adc
sub
adc
mov
and
mov
or
jne
test
or
imul
pop
xlat
add
push
lods
lcall
fdivs
ljmp
stos
sbbl
roll
mov
push
jne
xor
aas
pop
pop
pop
pushf
mov
inc
xchg
mov
push
pop
xchg
test
int
rcl
pop
sbb
cltd
enter
aam
lods
nop
adc
push
xor
sub
dec
xorl
hlt
sbb
pop
pop
inc
out
adc
sarb
cmp
push
test
cmp
cmpsb
inc
jnp
mov
xor
cmp
jbe
adc
add
js
lret
je
mov
xchg
sub
push
aas
jge
push
lret
dec
or
daa
adc
inc
loopne
cs
shrl
jae
sbb
xor
jne
lea
aas
ss
loopne
push
pop
mov
mov
xchg
mov
mov
fwait
mov
xchg
and
pop
or
arpl
test
icebp
add
or
fnsave
add
int
pop
cld
std
les
sub
dec
xor
sbb
cmp
inc
jge
out
in
and
and
or
add
sbb
adc
jo
stos
loope
sub
inc
in
outsl
xorb
push
mov
mov
outsl
movsl
mov
and
test
adc
rcl
stc
movsl
push
push
bound
sti
add
jns
lea
shrl
mov
shr
add
scas
mov
sar
fdivs
adc
fwait
adc
scas
ds
or
addr16
cmp
inc
int3
push
mov
je
xor
icebp
lods
fwait
ret
mov
adc
fcmovnbe
xchg
out
test
jns
ror
ret
pop
push
inc
loope
push
dec
sbb
pop
ret
aam
xchg
adc
push
jno
das
inc
sbb
xor
cmpsb
push
jmp
pop
inc
pop
out
and
dec
push
int3
and
cmp
pop
insl
subl
fimuls
mov
idiv
mov
and
loope
cmpsb
dec
inc
mov
adc
adc
test
sbb
push
and
call
call
imul
push
es
pop
jmp
inc
or
xchg
mov
jle
push
sub
sbb
mov
sub
mov
push
out
mov
daa
sti
and
pop
daa
ret
dec
cmp
dec
rorl
dec
leave
mov
outsl
push
lret
loop
push
mov
adc
in
aam
mov
lret
lcall
adc
jno
cwtl
xor
fsubrs
and
or
iret
pop
das
mov
mov
or
clc
js
iret
dec
sbb
lret
js
jb
shlb
jns
pop
mov
mov
mov
pusha
call
aam
scas
or
sub
jge
add
fdivr
jl
pop
fucompp
or
inc
aad
not
outsb
loop
add
push
fimuls
icebp
xor
iret
jl
mov
adc
mov
ret
sbb
mov
loopne
xor
mov
cmpsb
lcall
jbe
dec
insb
jl
push
inc
or
das
or
jecxz
cwtl
jle,pn
cmp
fsubrp
subl
decb
and
push
jns
rclb
iret
and
push
cmp
xor
cltd
xor
add
clc
inc
or
scas
mov
mov
dec
filds
cmp
and
bound
pop
mov
pop
outsb
sbb
int
jo
lahf
xchg
xlat
and
lock
add
dec
or
test
fdivp
pop
mov
adc
stos
movsl
xchg
xchg
test
push
into
cli
sbb
cli
dec
les
cltd
fstpl
inc
jecxz
pusha
lcall
push
ljmp
clc
js
xlat
mov
inc
dec
mov
mov
add
ds
adc
out
xor
mov
int
sti
jns
add
call
fisubl
xor
bound
pop
inc
loopne
mov
out
testb
fisttps
lods
lret
mov
or
xchg
sub
pop
subb
jnp
push
ja
stos
pop
in
in
clc
imul
dec
xchg
xchg
adc
sahf
pushf
mov
lock
pop
mov
outsl
jo
inc
shlb
xor
arpl
xor
mov
inc
pop
test
jne
mov
inc
aas
xchg
fsubrs
movsb
les
jmp
or
adc
hlt
mov
mov
cmp
pop
outsb
mov
leave
inc
das
pop
rol
add
xor
xchg
and
aaa
pop
es
xor
jbe
inc
loope
sub
ljmp
mov
and
cwtl
out
fistl
popa
pop
jb
jg
xchg
push
xchg
push
cmc
loop
xchg
cmp
fldt
std
test
enter
mov
fiaddl
fldl
xor
lea
mov
cmp
mov
daa
jno
xor
cltd
jo
or
dec
or
movsl
mov
lock
popa
sbb
sub
gs
insl
push
xor
mov
cld
popa
xchg
mov
pop
sbb
or
pop
enter
push
test
or
cmp
push
mov
push
fimuls
mov
mov
or
xchg
rcrb
push
icebp
inc
jg
outsl
test
into
push
add
push
push
pop
adc
pusha
in
add
sarb
lds
xor
aam
sub
leave
fstps
mov
stc
std
xchg
mov
lea
pop
sub
xor
test
inc
fsubrl
inc
idivl
sbb
inc
into
pop
fldl
clc
roll
popf
mov
andb
aaa
mov
push
or
shl
xor
lahf
mov
adc
loopne
lock
fwait
sbb
hlt
loop
adc
mov
mov
addb
lea
jecxz
es
cmp
fld1
xlat
scas
incl
jg
into
push
loop
callw
pop
dec
arpl
dec
xlat
cmp
adc
pop
subl
es
mov
mov
rorb
push
add
xchg
dec
or
scas
iret
inc
stc
lahf
ss
rcll
or
inc
cmp
adcb
std
and
gs
sbb
sbb
stos
xchg
adc
inc
out
repz
mov
mov
lret
clc
gs
or
sub
adc
mov
daa
and
pop
mov
mov
or
hlt
lea
out
andb
sti
push
movsl
or
push
andb
rorb
lahf
push
cs
lea
jbe
and
jnp
sbb
pop
xchg
sbb
sub
clc
cli
push
jl
aam
push
sti
sub
lea
js
xchg
pop
jl
popa
orb
fsubrl
push
mov
mov
fistps
arpl
testb
pop
imul
push
push
pop
pusha
jbe
push
mov
popa
mov
xchg
inc
add
sbb
cmp
add
sub
mov
clc
sbb
jb
mov
cmpsb
push
pop
add
call
mov
push
shlb
pop
add
sarl
and
incb
mov
push
sub
mov
ljmp
dec
and
pop
add
or
outsb
mov
mov
data16
push
jge
inc
loope
sub
cmp
fdivrs
outsb
movb
or
push
rcll
bound
cmpsl
repz
lea
shll
mov
mov
ffree
pop
pop
lcall
shrb
add
mov
adc
jnp
sbb
pop
imul
ret
pop
nop
adc
sti
dec
lahf
jp
aam
push
sub
mov
fwait
mov
adc
lea
shlb
cmp
int
sub
push
jmp
loop
movsb
les
xor
xchg
add
jnp
shlb
nopl
mov
pop
dec
inc
xor
mov
mov
out
sub
je
mov
std
mov
scas
outsl
mov
fldenv
add
or
stc
mov
lock
or
or
nop
sbb
push
pop
stos
rcll
vpslld
sub
push
jg
das
rorl
dec
insl
add
mov
sbb
inc
ret
inc
aad
push
ss
cmpsb
aaa
les
mov
xor
mov
inc
into
xchg
aam
nop
mov
push
sarb
pop
adc
cmp
xchg
ss
inc
xor
jno
xor
pushf
fldt
sbb
movsb
xchg
mov
cmp
and
mov
and
xor
int
adc
cmpsb
mov
or
or
sbb
inc
out
jg
decl
mov
xor
cmp
and
insl
dec
push
fwait
mov
out
or
rolb
enter
pop
dec
fisttpl
test
enter
sub
stos
sub
mov
ret
orb
cmp
adc
jl
lahf
inc
push
adc
lea
call
and
cmp
xor
aas
and
in
adc
loop
decb
and
mov
lret
and
mov
clc
pop
lds
in
rclb
or
out
rorl
outsl
xchg
andb
insb
test
stos
imul
or
lock
push
pop
add
mov
addl
or
js
into
jp
pop
mov
es
add
je
jne
inc
cld
sbb
xchg
subb
push
repz
or
pop
loopne
pop
cmp
dec
rorb
insb
lret
jb
in
sbb
bound
fistpl
adc
and
lahf
mov
inc
movsb
mov
adc
mov
rorb
inc
dec
les
movsb
push
movsb
add
enter
push
or
inc
enter
je
dec
int
and
loopne
negb
bound
iret
sbb
jnp
jge
fnstcw
sub
push
jecxz
mov
inc
xchg
rolb
push
cld
dec
fcmovu
and
xor
nop
cmp
push
imul
xchg
mov
inc
shll
stos
stos
xchg
xchg
jno
ret
push
clc
pop
je
scas
or
cwtl
hlt
ret
cmp
call
or
push
nop
fmul
mov
xorl
xor
inc
clc
inc
js
js
mov
cwtl
sahf
sub
fs
and
mov
and
jne
mov
adcb
jb
jbe
or
add
out
sti
in
jno
inc
mov
lcall
ficoms
repz
movsb
push
xor
pushf
xchg
aad
arpl
mov
inc
jle
mov
mov
inc
repz
filds
int3
clc
jg
sbb
push
cmc
jl
or
push
push
sub
adc
push
or
mov
inc
xlat
sbb
mov
or
jle
mov
imul
fwait
add
mov
inc
sub
mov
scas
lds
inc
push
out
stos
pop
and
sub
and
in
mov
inc
pop
and
inc
icebp
insb
daa
add
mov
xchg
push
jns
push
or
inc
add
or
pop
push
mov
adc
cli
test
cmpl
leave
es
cmp
bound
into
push
rol
mov
rolb
sub
test
add
xchg
rcrb
inc
xchg
add
add
test
mov
lret
inc
pop
xchg
xchg
pop
mov
mov
andl
xor
mov
inc
es
sbb
shl
lea
mov
mov
rclb
popf
jmp
movsb
mov
push
and
xchg
js
loopne
or
outsl
dec
les
inc
mov
loopne
subb
shlb
loopne
add
scas
in
and
and
mov
jb
cwtl
sarb
punpckldq
adc
mov
or
mov
mov
inc
nop
push
movsb
inc
bnd
add
add
cmp
out
ljmp
loop
es
out
sbb
sub
in
mov
push
imul
mov
loope
ret
xor
jg
inc
std
insl
and
xchg
pop
adc
das
popa
xlat
cmp
inc
mov
add
dec
xor
aad
hlt
inc
mov
loope
std
or
inc
pop
add
jg
inc
subb
bswap
mov
cmpb
jl
js
and
mov
dec
jp
in
repnz
mov
xorb
nop
lcall
leave
add
pushf
pop
jge
pop
mov
push
outsb
and
push
adc
inc
mov
insl
inc
not
jecxz
pushf
add
test
insl
ljmp
andb
pop
jb
stos
mov
pop
dec
fimull
imul
pop
testl
mov
rcrb
or
mov
sub
add
sbb
mov
sbb
jecxz
cli
lock
mov
mov
jl
push
sti
jns
adc
test
inc
xchg
add
faddl
fdiv
loope
mov
scas
nop
sbb
add
jne
lret
fcoms
pushf
jp
flds
mov
cmp
adc
pop
mov
test
jp
sti
push
pop
bound
and
fidivs
push
les
add
add
dec
comiss
cmp
dec
jmp
sbb
hlt
xor
das
js
sahf
push
ror
es
xor
push
hlt
or
je
shll
cli
xchg
sbb
push
in
pop
into
push
jmp
adc
dec
mov
fisttps
fildll
mov
aad
test
jo
mov
cmp
es
xabort
pop
sbb
jge
test
ljmp
jae
cmp
jp
jo
call
push
pop
sbb
mov
ds
push
inc
or
daa
test
cmp
inc
push
or
lock
test
dec
outsl
cli
adc
into
sbb
sarb
xchg
shlb
push
pop
shrb
adc
sub
jo
dec
loop
pop
jp
push
adc
inc
xchg
cli
shrb
js
sbb
dec
xchg
pusha
cld
push
dec
or
xor
jge
std
loope
pusha
fildll
movsl
idivl
or
xchg
decb
adc
invd
jne
mov
clc
and
mov
sbb
insb
inc
ret
sbb
mov
mov
push
inc
das
iret
mov
inc
pop
pop
mov
inc
rorb
icebp
mov
das
cmp
test
adc
xor
rclb
rcrl
test
adc
roll
cmpsl
mov
pusha
sub
dec
stc
sub
xor
adc
push
ljmp
mov
sub
dec
cwtl
inc
in
outsl
adc
test
call
or
scas
push
pusha
xchg
push
lahf
push
mov
and
ss
divl
or
cmc
addl
mov
nop
insb
push
jge
mov
lock
rorb
add
sub
xor
lahf
test
pushf
and
sub
add
mov
addl
add
lcall
rcrb
test
je
add
jge
out
dec
testb
pop
and
xor
scas
jmp
in
mov
push
test
mov
fwait
shl
xchg
fidivrl
pop
cmp
scas
pop
mov
out
in
xchg
adc
mov
ret
or
add
aam
adc
icebp
push
mov
inc
ljmp
inc
repz
divl
dec
pop
ljmp
aad
or
push
lea
cwtl
dec
cmp
mov
or
pop
cltd
push
mov
jle
or
jmp
add
add
cmpsl
push
cli
movsb
sahf
je
sub
pop
les
cmp
inc
out
mov
ljmp
stos
xchg
dec
mov
jecxz
mov
mov
nop
or
adc
mov
pushf
xchg
fiadds
enter
inc
add
pop
push
jl
push
scas
pop
loope
mov
out
fdivl
ret
or
out
push
and
dec
shl
movsl
and
and
jecxz
cwtl
out
jb
imul
inc
push
in
mov
fdivp
mov
jl
dec
inc
push
push
adc
jbe
push
jle
stos
in
and
cli
add
aas
scas
sub
lock
arpl
pusha
sub
push
dec
in
jp
and
movsb
push
ja
dec
jecxz
cmc
and
inc
jne
addb
cmp
push
outsb
inc
jmp
adcl
push
bound
mov
mov
es
daa
repnz
mov
pop
clc
adc
jle,pn
add
test
mov
push
and
or
mov
outsb
sahf
filds
scas
inc
or
clc
or
fnstcw
fists
hlt
ret
fists
adc
sub
sbb
and
sub
dec
fcmovnbe
mov
fnstenv
xchg
cmp
into
les
xchg
insl
rcr
cmovp
and
inc
adc
mov
mov
adc
scas
cli
mov
xchg
aam
cmc
dec
std
mov
add
gs
cli
push
inc
ficoms
movsl
pop
pop
jl
push
pop
outsb
mov
cmpsb
xor
sbb
int3
es
sub
add
and
mov
xchg
sbb
clc
jnp
push
adc
mov
add
sub
push
jl
fsubrs
add
push
incl
or
or
sahf
test
jno
lcall
std
movl
arpl
mov
shlb
cwtl
outsl
cmp
or
loope
cld
sub
testb
jae
jl
insb
or
lock
mov
fstpt
adc
and
jge
imul
sbb
cld
frstor
inc
jnp
jle
test
aas
rcrl
xchg
lahf
jecxz
pop
or
push
into
or
xor
ret
mov
and
scas
lret
jo
subb
lret
xchg
cmp
xor
inc
xchg
fcmovu
xchg
lods
insl
xchg
cwtl
mov
aas
rolb
mov
rorl
mov
push
sti
setp
movsl
dec
xor
mov
mov
sub
add
loope
pop
sbb
arpl
dec
lods
sub
mov
or
jmp
jne
icebp
mov
call
icebp
jmp
shlb
pop
xchg
test
xor
dec
xor
mov
add
pop
xor
xchg
ds
jae
es
lret
add
and
and
fwait
adc
add
fs
inc
fadd
rsm
sub
lock
icebp
inc
repnz
div
fcoms
inc
adc
xchg
clc
lock
sti
in
jbe
out
push
imul
push
pop
adc
add
xchg
inc
or
and
cmp
adc
adc
rorb
or
loope
jo
xor
push
jno
jb
inc
cli
mov
nop
lret
std
pusha
arpl
xchg
sti
cmp
cwtl
imul
sub
dec
dec
insl
cmp
sahf
adc
and
stos
add
stos
sbb
repnz
out
mov
mov
cmp
add
inc
pop
jb
and
ss
std
shlb
cltd
add
bound
or
inc
jno
add
addr16
jg
call
push
mov
pop
repz
jne
inc
clc
imul
add
jmp
sbb
mov
je
es
xchg
shrb
imul
push
pop
inc
loope
lods
mov
jp
fsts
mov
mov
or
int
mov
data16
sub
jp
dec
mov
les
add
and
cmpsb
rcr
fiadds
movsb
mov
cli
js
xor
nop
sbb
jae,pt
out
ds
hlt
adc
mov
scas
mov
das
pop
xchg
cld
jo
sub
dec
xchg
and
add
mov
lock
and
mov
es
and
fwait
ss
sub
pop
add
cltd
mov
loop
dec
lods
adc
pushf
cli
pop
pop
loope
jmp
out
imul
jle
sbb
test
jmp
lret
and
clc
cld
repnz
mov
or
fwait
sbb
aam
lea
pop
fisttpll
xchg
dec
fs
subb
add
cld
add
push
or
jmp
decb
test
pushf
dec
das
sub
adc
sarb
sub
pop
ljmp
adcb
xor
movntps
xchg
mov
shlb
sub
dec
jae
jge
cmp
or
sbb
out
rol
cs
mov
pop
mov
scas
cli
xor
cs
cmp
or
loopne
popf
adc
cmpsl
and
std
pop
inc
ljmp
dec
push
lods
pop
cli
aad
inc
test
adc
cmp
sbb
stos
mov
jmp
push
ja
mov
sub
xchg
cmp
cld
dec
and
xchg
jmp
dec
in
mov
push
and
jno
mov
roll
or
sub
testb
inc
mov
inc
xor
and
int3
gs
cwtl
jg
pop
je
imul
pushw
mov
stos
sbb
jnp
ja
cmp
adc
xor
add
fistps
mov
call
jle
lahf
call
insl
pop
xchg
push
stc
mov
push
sub
enter
mov
xor
add
or
push
nop
mov
cmc
lea
roll
repnz
pop
adc
jecxz
sub
or
adc
lret
mov
dec
push
xchg
adc
mov
sarw
sbb
out
mov
cwtl
fadds
inc
mov
pushf
negb
movsb
cmc
rclb
movlps
mov
push
or
mov
xchg
fdivs
idiv
imul
sbb
push
cld
xlat
xor
adc
or
inc
dec
inc
inc
mov
push
lods
sbb
add
cmp
fmuls
mov
pop
sub
in
push
in
mov
scas
nop
mov
adc
xchg
sub
les
sti
sbb
pop
adc
pop
or
pop
add
popa
loope
outsl
pop
dec
insb
fistpl
adc
or
test
mov
out
mov
sbb
push
jge
lcall
lds
cs
out
paddb
into
fldcw
dec
repnz
fistpl
jp
jbe
cli
fsubrl
xor
mov
dec
xor
jp
lret
je
repnz
sub
cmp
movhps
mulb
enter
inc
xor
and
dec
lret
or
mov
outsl
into
adc
aas
test
add
jne
mov
pop
call
mov
jne
push
mov
push
xchg
test
insl
aaa
aam
xchg
or
outsb
jo
aam
leave
sbb
push
mov
jb
iret
cmp
or
test
pop
in
inc
ret
mov
mov
out
sbb
outsb
or
adc
pop
hlt
movswl
enter
test
sahf
test
adc
dec
cmpsb
inc
pop
or
js
sbb
fnstsw
fcompl
out
sub
push
add
sbb
repz
das
adc
jecxz
mov
lods
pop
imul
sub
loope
push
cli
push
jno
fildll
or
cmp
mov
cli
dec
adc
lods
fcmovu
sbb
and
jecxz
hlt
fs
or
ss
dec
mov
shll
and
inc
dec
adc
mov
xor
jne
stos
iret
jnp
lret
popa
shlb
cli
inc
cmp
mov
mov
sbb
add
mov
outsb
test
not
mov
xor
jne
mov
mov
imulb
sbb
sbbl
rorl
add
cmp
jecxz
lea
cmp
push
fsubrs
xor
ljmp
rolb
and
loopne
jo
dec
fmuls
sub
jge
mov
sarl
pop
pop
lock
andb
dec
adc
lcall
std
xor
rolb
movsl
shl
cmpsb
push
out
adc
cltd
dec
out
mov
mov
dec
adc
adc
stos
rclb
dec
clc
xor
cmove
loop
dec
mov
mov
jbe
pop
test
movsb
xor
push
das
lock
adc
pop
std
inc
or
add
xchg
pop
les
insb
sbb
popa
or
enter
mov
inc
data16
pop
jecxz,pn
xchg
cs
aam
or
add
cmc
sub
ret
leave
insl
jae
adc
imul
test
push
inc
addl
scas
lea
aas
sub
push
aas
cmp
sbb
xchg
inc
sbbl
pop
cli
bound
xchg
jo
dec
push
lahf
pop
lock
or
xlat
cmp
dec
pop
mov
push
nop
hlt
inc
test
adcl
cmpb
adc
and
test
inc
adc
sub
xchg
push
inc
data16
cmc
push
pop
ret
aad
fiadds
inc
mov
loop
cmpsb
pop
adc
test
mov
sbb
xor
mov
and
dec
pop
lret
xchg
xor
test
pushl
add
sbb
dec
popa
jge
pop
lods
pusha
fwait
lcall
sarl
int
xchg
lods
mov
std
pop
xchg
movl
ds
jp
jp
inc
push
ret
mov
sbb
sub
out
fucomi
imull
jns
xchg
insb
daa
xor
nop
and
les
or
loop
lea
test
add
cltd
pop
inc
fsubl
xorb
add
das
lods
mov
aad
xchg
pop
push
dec
inc
pop
int
push
xor
imul
adc
test
jge
and
mov
sbb
std
mov
xchg
lcall
sbb
xor
push
cmp
add
sub
sbbl
cmp
mov
push
loopne
loopne
mov
dec
xor
sbb
pusha
lock
cmp
xchg
push
fsubrl
and
jns
xor
pop
ss
cwtl
push
mov
dec
push
pop
hlt
insl
jo
subb
pop
cmp
fs
clc
jmp
bound
rorl
jmp
in
jge
cmp
mov
call
jbe
or
enter
and
sbb
xlat
out
adc
lds
pop
dec
sub
fldl
loopne
cld
sbbb
jl
rcrl
mov
adc
test
lea
dec
jo
outsb
inc
mov
pusha
jno
inc
pop
or
clc
ljmp
cmp
xchg
push
push
push
psubd
xor
and
mov
dec
aas
rcl
insb
jbe
test
fsubs
enter
cltd
mov
loop
sti
adc
roll
push
adc
mov
sbb
jmp
add
or
mov
jp
movsb
push
mov
cli
xchg
push
icebp
mov
and
out
daa
cld
and
fcoms
xor
mov
xchg
jmp
loop
push
jo
mov
mov
stos
pop
out
icebp
movaps
xor
lea
cmp
sub
in
push
jl
and
ret
push
mov
inc
sahf
mov
xor
in
aaa
pushf
stos
lret
nop
sbb
adc
test
shr
cltd
adc
xchg
adc
int3
xchg
data16
mov
jg
jecxz
js
pop
out
pop
pop
or
pop
insl
fldcw
repnz
mov
outsb
test
pop
inc
sub
mov
jb
ds
repz
xchg
pusha
mov
add
mov
scas
sbb
mov
rorb
mov
xchg
push
jb
sbb
jbe
or
adc
mov
inc
movsb
je
inc
sarl
notl
lcall
lods
xchg
dec
inc
mov
dec
add
lahf
add
push
adc
loope
or
mov
cltd
mov
test
dec
rorb
test
ja
fnstenv
push
pop
cli
add
mov
adcl
pop
cmp
test
cmp
jmp
pop
inc
ret
mov
sub
xchg
push
inc
iret
pushl
cmpb
mov
mov
loop
sub
shll
mov
add
and
dec
xlat
add
mov
push
xor
out
xor
and
mov
lcall
inc
rcrb
aad
ror
hlt
call
xchg
mov
inc
decb
lea
aas
pop
orl
inc
mov
nop
scas
push
jl
decb
adc
mov
aad
dec
subb
test
sarb
pop
jbe
nop
shlb
or
and
jecxz
decl
and
push
mov
xchg
and
das
sbbb
pop
jno
mov
xchg
mov
popf
xchg
out
sbb
xchg
or
jo
adc
xchg
repnz
out
push
jb
jg
sbb
mov
enter
testb
pop
sub
and
sbbb
mov
nop
sub
movsl
test
sub
rolb
stc
or
mov
in
sahf
dec
mov
repnz
lods
pusha
jg
and
pop
xor
jg
cmp
add
ja
cmp
test
loope
add
inc
push
insb
orb
popa
test
push
or
cmp
cmpb
xor
ljmp
rcr
hlt
enter
dec
xor
dec
mov
cld
loope
stc
loopne
jbe
push
push
adc
push
push
mov
xor
shlb
sbb
dec
dec
mov
ja
std
mov
faddl
sarb
mov
or
sub
pause
aam
sub
les
mov
daa
or
test
dec
adc
cld
call
cwtl
add
mov
xor
jne
pop
mov
inc
push
jo
sbb
dec
nop
push
pop
pop
ss
jne
pop
rolb
mov
jle
subb
cmp
xchg
push
mov
je
outsl
jno
mov
or
dec
pop
push
movsb
scas
or
inc
mov
in
ds
lret
push
repnz
push
push
mov
iret
dec
and
leave
movsl
add
movsl
add
test
jbe
xor
push
pop
inc
ds
cmp
xchg
jle
cmp
dec
loop
dec
fdiv
adc
lods
pop
cmpsl
add
sub
and
mov
jbe
inc
mov
je
or
arpl
shl
mov
jmp
jo
negb
out
insb
call
dec
or
sub
pop
mov
popf
mov
ret
mov
je
jmp
xor
lods
loopne
inc
out
xor
pop
lret
inc
and
rcrb
rcl
pop
mov
les
decb
outsl
xor
outsl
frstor
orb
pop
ss
mov
push
scas
mov
std
mov
inc
es
jp
pop
add
inc
jecxz
inc
jle
inc
shr
xor
cmp
jp
shlb
xor
push
xchg
jecxz
and
inc
cmp
mov
adc
mov
xchg
lret
test
pusha
lock
idivb
inc
insl
or
adc
or
mov
or
inc
push
dec
shld
rorb
mov
dec
sub
cmpsb
push
clc
pop
inc
aam
stos
or
lods
stos
mov
lret
sub
push
repnz
xor
sub
outsl
loope
loopne
mov
pusha
xchg
sahf
mov
mov
push
pushf
arpl
mov
rorl
jbe
in
es
xor
and
inc
pop
inc
xor
and
fadd
inc
or
pop
out
inc
movb
push
mov
push
cli
fidivrl
fcoml
in
jno
adc
cmp
jmp
sahf
cli
and
movl
and
mov
ja
movsb
fisttps
roll
ret
sub
push
orl
jecxz
clc
dec
push
add
mov
dec
dec
fbstp
jmp
ret
or
jle
add
xlat
mov
xchg
mov
pop
xchg
and
sbb
adc
xor
or
aad
xchg
mov
mov
nop
loop
mov
mull
icebp
jne
cli
lock
jmp
add
cld
rolb
pop
xor
and
cli
js
jb
out
mov
in
xchg
sti
mov
adc
enter
xchg
fwait
inc
xchg
add
icebp
arpl
sbb
movsb
adc
shlb
cs
aas
jge
add
mov
jl
sub
cmpsb
aam
xchg
or
mov
xor
pop
xchg
and
push
das
push
push
sbb
xor
cli
jne
sbb
rcll
fldl
push
push
cmp
loopne
mov
mov
dec
repnz
xorb
pop
test
adc
mov
nop
iret
shlb
xor
cmp
lods
inc
adc
cmp
stos
inc
lahf
cmp
sahf
jo
fstpl
inc
xor
out
cli
cmp
leave
stos
cmp
loope
call
lret
cmp
jae
pop
inc
or
mov
into
lahf
ret
and
ja
test
mov
add
mov
mov
dec
jge,pn
movsb
or
repnz
pop
or
pop
cmpb
cmp
push
ret
push
or
hlt
inc
add
and
dec
dec
insl
dec
add
xorb
arpl
popa
sbb
call
mov
xchg
adc
jecxz
mov
xchg
pop
shll
dec
cmp
jle
nop
mov
push
pop
pop
rolb
add
lods
pop
cs
enterw
xchg
sbb
fwait
push
shll
aam
dec
mov
pop
add
mov
movsb
imul
cmp
push
mov
cmp
mov
loopne
test
iret
loope
sar
push
mov
or
sbb
jo
mov
adc
jmp
movsb
inc
cmpsb
push
mov
add
and
xor
sbb
mov
cmp
aas
push
add
fidivrl
push
push
fnstenv
or
inc
sbb
pop
ret
push
lcall
dec
cli
push
aaa
mov
lods
inc
movsl
cmpl
xchg
sub
lahf
icebp
jmp
jnp
fwait
adc
jmp
sti
adc
sbb
jbe
faddl
lahf
mov
cmpsb
je
orb
fimuls
stos
sbb
aad
jle
outsb
cmp
stos
bound
or
xchg
cmp
lea
outsb
push
js
addl
sbbb
scas
xor
sbb
movsl
leave
or
or
or
add
out
outsl
loopne
cmp
repnz
sbb
popa
jno
cmp
fcmovnu
or
ljmp
jns
jg
mov
insl
ljmp
pop
iret
scas
lock
aam
clc
lods
scas
out
pop
dec
inc
sahf
lcall
hlt
outsl
out
adc
repz
cld
xchg
cli
xor
or
xchg
xor
push
pop
cmp
xor
js
hlt
adcl
mov
lods
bound
jb
mov
push
and
jbe
mov
dec
fistpl
xor
insb
rorb
popf
lea
or
add
jne
adc
ljmp
lods
sbb
pusha
mov
or
andb
add
mov
fcoms
push
dec
les
xor
cmp
movsb
xor
jg
in
ret
add
lahf
leave
shlb
lds
inc
push
js
lods
xor
testl
mov
inc
into
push
jb
insb
pusha
aad
or
push
xchg
fstpl
push
adc
ret
popa
pop
jecxz
add
and
out
xor
xchg
inc
xor
aam
arpl
sbb
and
pop
addr16
or
notl
outsl
xchg
fstps
and
in
push
ds
hlt
stos
mov
xor
or
mov
add
pop
cld
mov
lcall
lea
lret
inc
dec
into
xchg
and
xor
push
je
push
push
arpl
daa
imul
sbb
mov
add
cld
push
dec
sub
movzwl
fldt
jns
enter
fdivrs
mov
mov
fdivl
fidivrl
and
jle
lock
dec
sbb
and
jno
fmuls
adc
add
dec
ret
xorl
dec
sbb
adc
add
push
mov
xchg
test
clc
dec
or
xchg
iret
push
jl
push
imul
addr16
pop
lock
shlb
adc
mov
xor
test
pop
add
aad
cmpsl
mov
in
inc
idivl
test
adc
cmp
or
xor
pop
sbb
call
cwtl
add
getsec
popa
or
push
mov
xor
cmp
mov
cmp
movl
mov
pop
hlt
in
adc
out
stc
mov
aam
dec
mov
adc
sarl
pop
push
jg
jle
jecxz
cltd
in
movsl
mov
jg
insl
cld
inc
dec
aad
jge
enter
js
pop
jl
jmp
dec
popf
nop
lds
pop
insl
xlat
cmpsb
sarb
jb
pop
jmp
scas
sbb
xor
mov
xor
in
sbb
push
sbb
jge
je
pop
in
and
imul
mov
adc
lods
orb
mov
xchg
pop
xchg
jg
xor
xorb
fistps
rorb
repnz
fstps
push
push
jp
jb
jae
jle
add
cmp
mov
mov
cmc
frstor
or
add
pop
mov
mov
xchg
jno
pop
std
mov
fldenv
add
cld
rolb
fdivrl
aas
insb
mov
sbb
ds
jo
jbe
repnz
mov
xchg
dec
mov
and
incl
mov
outsb
fs
push
push
add
fadd
or
sbb
call
sarl
xchg
inc
jmp
xchg
xor
icebp
cwtl
mov
xor
add
shrl
movsl
mov
stos
dec
and
xchg
dec
stc
pushf
mov
push
pop
mov
das
jl
lahf
jmp
xlat
add
dec
sarl
sub
sub
add
dec
js
mov
add
add
pop
lods
lock
leave
inc
mov
lcall
lret
xlat
push
jl
loopne
lock
inc
rcrb
pop
loopne
nop
inc
faddl
icebp
or
jp
sub
adc
stos
xchg
pusha
js
notl
xchg
fs
xlat
cltd
jbe
mov
ljmp
aam
loop
adc
mov
inc
mov
sbb
jmp
loopne,pn
leave
or
dec
jecxz
loopne
jle
insl
cmp
mov
or
add
cmp
loopne
popf
fisubrl
sbb
stc
push
xchg
push
cmp
fsubr
pop
inc
out
xchg
jmp
cli
sti
or
ds
lret
mov
adc
inc
push
sbb
mov
ss
add
fsubl
fbld
mov
in
jecxz
or
or
adc
mov
or
clc
mov
loope
mov
movsb
adc
into
add
cmc
sub
sub
in
cmp
shrb
outsb
clc
cli
cld
loop
inc
ret
lods
loopne
or
sbb
js
nop
out
jb
add
pop
insb
mov
mov
xchg
mov
gs
pop
popa
int3
push
dec
push
mov
divl
cld
or
pop
aaa
ds
push
push
push
cld
ja
shlb
and
mov
andl
sarl
push
jno
and
ds
add
push
bound
fisubl
push
out
xchg
shl
hlt
xchg
mov
lods
test
push
xor
andb
dec
in
test
sbb
cmp
lahf
dec
add
adc
shrb
xchg
inc
lods
je
enter
sti
sub
mov
pop
test
add
add
stos
cmpsb
add
clc
adc
stos
out
mov
lods
js
push
fdiv
ss
pop
mov
bound
mov
stos
in
gs
dec
push
mov
pop
mov
cmp
mov
imul
cmc
cmc
dec
xchg
dec
xchg
daa
or
lods
or
pop
mov
dec
add
adc
adc
out
popa
inc
or
push
push
mov
daa
adc
test
add
sarb
push
sbb
mov
jno
mov
cltd
paddsb
lahf
add
notb
mov
sub
sahf
inc
mov
adc
test
stc
je
add
pcmpeqw
sub
out
pop
mov
cmc
mov
nop
sbb
pop
fdivs
inc
or
adc
xadd
lods
pusha
sub
sbb
add
xchg
lods
and
pop
push
or
mov
xor
cmp
sbb
movsb
mov
pushf
and
movsb
sbb
pop
cmp
mov
sbb
pop
mov
sbb
dec
leave
adc
imul
ds
and
in
and
call
adc
lock
cmpsl
sbb
push
jnp
shl
inc
test
jmp
gs
pop
sub
lock
mov
xchg
and
lcall
pop
clc
lods
lcall
mov
adc
das
out
and
mov
in
and
add
jp
pop
mov
adc
jp
mov
loop
mov
subb
or
push
shlb
or
js
xor
fadds
mov
insb
loopne
popa
adc
aad
lcall
arpl
mov
jmp
xor
jl
enter
stos
mov
add
xor
jo
adc
faddl
shll
push
xor
lods
call
sub
hlt
sarb
lea
add
adc
jle
aad
push
add
xchg
loopne
jo
xorb
inc
ja
sahf
in
push
cmpsl
cmp
sbb
inc
xor
xchg
mov
repz
std
imul
je
inc
lods
js
iret
pop
inc
dec
xlat
inc
jl
sarb
mov
push
es
stc
cmp
xor
aaa
jo
or
push
lds
loopne
adc
movsl
pop
push
add
jp
repnz
cmp
jmp
push
jbe
xor
mov
in
sub
sbb
scas
pop
add
adc
loope
inc
fs
fcoml
adc
dec
loopne
xor
bswap
shll
push
clc
push
adc
movsb
pushf
cmp
mov
shll
add
sub
add
pusha
jecxz
pop
sahf
push
gs
push
or
rcll
aad
jecxz
pop
xchg
xorl
das
dec
test
jge
push
imul
mov
fwait
push
es
hlt
cmp
or
adc
inc
xor
ret
ljmp
inc
sbb
pop
icebp
jecxz
lret
sub
inc
mov
mov
mov
jno
pop
adc
adc
push
pmaxub
sbb
push
sub
xchg
xorb
add
aas
xor
cmc
mov
cs
loopne
xor
mov
or
push
cmp
adc
jge
testb
sub
push
loope
fistps
or
push
and
mov
int
bound
mov
lods
mov
dec
mov
pop
xor
inc
cmpl
fmull
lea
loop
clc
jg
mov
enter
in
cld
mov
pop
das
adc
clc
dec
inc
nop
mov
mov
out
sbb
adc
daa
pop
push
add
lods
bound
dec
inc
push
pop
movsl
sub
leavew
xor
push
mov
mov
or
punpckhdq
shrb
iret
mov
ficompl
inc
lds
xor
iret
inc
adc
mov
xorl
mov
pop
nop
adc
loopne
mov
cli
and
pop
mov
push
mov
fsubrs
mov
adc
or
cmp
jne
imul
adc
lock
pop
out
adc
xor
movsb
out
push
jne
sbb
scas
ss
sub
lock
push
in
mov
fiadds
cld
fsub
ret
mov
mov
add
push
fs
lods
sahf
inc
jmp
mov
push
push
lret
enter
mov
sbb
jle
test
ret
jb
adc
fldl
mov
sub
jo
cmp
ds
repz
xchg
and
cmp
pop
add
push
push
loopne
jp
sahf
std
clc
mov
pop
inc
cld
mov
popf
fidivl
mov
rcrl
and
or
rolb
pop
xchg
ret
push
adc
loope
pop
mov
pop
inc
or
lret
mov
xchg
push
or
rcll
or
mov
adc
xchg
rcl
pop
jle
cmp
hlt
adc
sub
xchg
or
sub
push
lds
xchg
ret
lds
mulb
sbb
jns
cli
loope
cmp
jo
cmpl
addb
adc
imul
fdivrs
mov
mov
cs
aas
cld
mov
cmpsb
stc
xchg
add
inc
add
and
sbb
pop
cltd
mov
mov
sbb
cmp
loop
sbb
into
es
add
enter
inc
or
mov
sub
out
stos
sbb
les
add
call
and
pop
ja
test
dec
pop
test
and
std
fucomip
push
mov
in
push
stos
fs
mov
fsubr
pop
inc
stos
xor
cmp
jae,pt
sub
push
test
mov
je
fwait
dec
dec
pop
add
dec
rcrb
or
jno
arpl
sub
addl
and
jnp
inc
hlt
xor
inc
or
movsl
outsb
adc
adc
jbe
and
aas
mov
ljmp
in
stos
jbe
push
rcr
fistps
xchg
inc
cmpsb
clc
scas
xchg
cltd
mov
cwtl
ret
mov
and
add
add
jmp
int
pop
popa
mull
inc
movsb
adc
or
sub
in
enter
js
mov
rolb
sub
mov
xchg
stos
fists
sub
cmp
roll
arpl
mov
mov
push
icebp
nop
pop
inc
dec
mov
push
sub
orl
je
xlat
or
shll
cmpsl
push
jmp
nop
cli
jg
ret
ret
enter
and
jo
mov
pop
adc
or
xchg
lods
xchg
pop
test
add
push
push
jmp
dec
add
jl
push
aas
sbb
outsb
or
jne
cmp
and
adc
and
popa
mov
shlb
loopne
arpl
pusha
pop
sbbl
xchg
inc
add
push
xor
mov
mov
mov
adc
pop
push
or
bound
test
jae
jno
js
add
cmp
ret
inc
add
int
jno
movsb
call
cmp
push
sahf
pop
movsb
and
adcb
jecxz
pop
add
mov
add
push
rolb
adc
ljmp
inc
loope
fwait
nop
adc
push
mov
stos
xor
jbe
push
stos
fwait
out
add
into
pushf
fisttpl
push
add
sbb
jne
add
aas
push
incl
stos
outsb
mov
movsl
adc
pop
lahf
and
mov
hlt
mov
mov
imull
pop
loopne
dec
mov
lcall
sub
sub
scas
pusha
push
aad
adc
leave
pop
add
sti
cmp
ljmp
jno
jecxz
fdivr
ret
js
sub
dec
cmp
sbb
mov
adc
decl
mov
mov
sbb
sbb
sub
sbb
icebp
hlt
sbb
mov
xchg
roll
sbb
popa
sub
add
sbb
push
jge
sbb
jp
icebp
inc
dec
test
sub
adc
ret
outsl
mov
push
xor
mov
pop
pop
push
dec
in
adc
add
mov
mov
add
cwtl
add
adc
mov
jnp
shr
pop
sti
setp
mov
cli
dec
push
dec
xor
add
add
xlat
pop
insl
movups
jp
test
inc
inc
pop
lods
loopne
push
push
imul
movsl
in
push
mov
inc
gs
pop
xlat
das
dec
loope
test
mov
outsl
mov
popf
sub
stos
sbb
pushf
dec
xchg
lock
jmp
inc
add
xchg
push
es
pop
popf
in
mov
scas
insl
insb
push
fadd
bound
adc
or
lds
mov
and
mov
mov
jbe
push
jns
loopne
fldt
dec
pop
cmp
cmp
clc
rcr
inc
or
ficoml
xchg
xor
pop
mov
push
pusha
adc
mov
rcll
dec
or
lock
mov
inc
mov
aad
add
push
das
ret
shl
add
cmp
jne
add
sbb
mov
cmp
jp
ds
stos
pushf
fmuls
jg
lods
aaa
and
mov
or
xchg
or
cmp
cmp
push
lods
mov
stos
in
cmp
mov
push
lahf
or
inc
push
icebp
sub
pop
in
cmc
adc
sarl
out
stos
sbb
addb
jmp
adc
icebp
lods
loope
mov
xchg
enter
popl
mov
loop
aad
ret
in
dec
shll
sub
loope
adc
icebp
jp
dec
cltd
and
shrb
mov
and
adc
test
das
xor
mov
bound
jp
es
push
lret
xchg
adc
mov
ljmp
sub
mov
push
negb
jmp
dec
mov
jb
rcrl
pop
xor
push
call
add
aam
movsb
idivb
nop
iret
add
lea
or
lcall
sbb
xorl
movsb
lock
out
fwait
cmp
dec
aas
imul
mov
shrb
pop
inc
imul
cmp
mov
inc
or
rcrl
rep
fs
pusha
fwait
add
jle
xchg
fcompl
push
cmp
sahf
or
mov
mov
cmp
insb
jge
cwtl
imul
ss
pusha
add
orb
inc
mov
or
mov
into
test
push
enter
lods
push
or
pushf
add
movsl
jno
sbb
sub
adc
out
xor
repnz
stos
cmp
fisttpll
scas
add
sbb
dec
adc
outsb
cwtl
call
fistps
inc
int
push
faddl
cmc
push
not
dec
adc
cmp
push
jg
pushf
mov
scas
andb
mov
sub
vmovapd
test
add
fdivs
push
mov
mov
fs
loope
clc
enter
pushf
enter
ljmp
pop
dec
imul
adc
jge
jge
pop
or
xchg
lret
push
inc
sbb
jo
push
in
pop
lret
cld
sbb
and
fcmovu
in
jo
push
or
je
cmc
out
rcrb
or
sub
pop
repnz
inc
cli
cmp
int3
lea
dec
cs
lods
nop
push
jo
push
int3
mov
pop
xor
inc
mov
sub
push
call
out
mov
pop
pop
pop
movsl
mov
adc
mov
and
lods
jno
sarb
jno
jle
jmp
cmp
rorb
mov
fdivrs
dec
mov
jo
je
push
mov
push
test
adc
cltd
jp
mov
aad
mov
lods
add
fmul
pop
jne
clc
sub
in
subb
xor
lcall
stos
mov
leave
mov
push
shrb
push
mov
dec
adc
clc
add
call
nop
add
ja
jae
fs
sti
clc
sbb
test
je
das
dec
jecxz
cmp
inc
in
loopne
mov
aas
push
or
repz
bound
jecxz
xor
mov
cmp
push
fisttpl
mov
or
or
shlb
stos
mov
xor
sub
add
sub
sbb
mov
inc
mov
push
shlb
popa
daa
jecxz
pop
dec
shlb
jno
ja
and
repnz
dec
fimuls
je
dec
mov
mov
stc
add
adc
pop
pop
xor
add
mov
push
jns
stc
mov
dec
push
dec
xchg
call
rcrl
or
xchg
sub
sbb
xchg
in
cmp
in
shlb
push
xor
cwtl
mov
sbb
test
flds
nop
std
and
inc
mov
pop
jl
or
outsl
ds
cli
fisttps
mov
stos
add
or
icebp
in
mov
adc
mov
xor
add
jno
fdivrs
fsubrs
stc
dec
sub
mov
add
mov
rorb
clc
cld
jbe
repnz
adc
mov
add
xor
out
sbb
pop
jb
push
xchg
or
negb
fs
xor
fsubrl
pop
mov
clc
sbb
cmp
push
mov
clc
push
or
stos
inc
dec
out
mov
xchg
add
mov
pop
mov
out
ljmp
or
adc
ret
lock
cmp
call
pop
lds
mov
subl
jecxz
sbb
loopne
cmp
mov
push
mov
addb
shll
sti
xchg
mov
mov
sahf
cmp
cmpsb
in
cmp
sti
xchg
test
sbb
xchg
xchg
aas
clc
ja
shrb
xchg
pop
mov
inc
push
gs
subl
cs
mov
leave
shl
shll
xchg
cs
add
dec
mov
imul
add
fsubs
jge
pop
outsb
adc
and
lret
mov
test
inc
add
push
fwait
loope
mov
xchg
bound
mov
loope
pop
scas
int3
dec
or
lock
and
lret
sub
ds
js
xchg
sub
mov
jl
cmp
mov
test
sbb
sbb
aad
loop
int3
inc
push
sbb
mov
inc
push
pusha
jmp
ffree
loopne
sub
pop
jne
ret
outsb
cmpsl
inc
jle
jp
orb
cmp
mov
inc
push
fdivrp
cmpb
cmpsb
enter
mov
cmpsl
shl
xor
mov
dec
in
xor
ds
mov
adc
add
push
sti
sar
shll
jnp
xor
or
icebp
jg
imul
add
mov
pop
movsb
dec
or
mov
clc
mov
inc
inc
dec
hlt
in
adcb
mov
inc
aam
iret
pop
cld
mov
insb
arpl
sahf
push
sbb
out
mov
rcl
inc
movsb
data16
ljmp
imul
pop
push
jl
rorb
in
cmp
xchg
ret
roll
push
mov
sbb
cwtl
xor
jmp
cmpb
cld
fsubl
jp
lcall
popf
inc
dec
aaa
add
repnz
ljmp
mov
aam
mov
jecxz
sub
out
jb
mov
out
sar
pusha
add
push
add
sub
sub
stos
cmpsb
dec
jge
jmp
je
and
or
xor
pusha
ret
insl
cmp
sub
cmc
inc
adc
mov
sub
das
sub
adc
mov
andl
lcall
outsb
iret
mov
loope
rcrb
out
jmp
xor
int
inc
jne
adcl
enter
sti
push
les
inc
aam
ss
add
adc
sbb
and
and
push
sbb
add
fidivl
and
add
fistl
ljmp
mov
cli
dec
and
and
xor
push
mov
lcall
in
imul
push
inc
mov
dec
push
push
outsb
sub
lcall
rorb
mov
inc
pop
dec
aas
push
xor
push
mov
push
test
and
xchg
int3
xchg
and
xchg
es
mov
scas
adc
movsb
mov
sbb
sbb
mov
sub
adc
sbb
neg
cli
iret
insl
push
aas
sahf
push
lret
and
test
xor
push
fistpll
into
dec
in
inc
data16
or
mov
data16
add
testl
shrb
pop
stos
sub
lahf
mov
cli
push
jle
sti
and
dec
sub
jo
cltd
call
inc
or
shrb
adc
ds
jno
ss
pop
negl
inc
pop
test
xor
ss
fldenv
jnp
or
dec
push
mov
push
push
pop
sub
xor
jp
stc
mov
addb
mov
outsl
sub
mov
inc
shlb
pushw
push
cmpl
or
std
xchg
dec
push
into
repnz
icebp
das
mov
pop
mov
jge
lcall
fdiv
add
xor
fs
mov
aas
push
mov
jbe
setl
fistpl
and
inc
inc
rorl
mov
rcrb
fdivrp
mov
mov
dec
stos
ret
fidivrl
cli
jge
add
inc
mov
lret
popf
jnp
aam
nop
rcr
into
mov
dec
pop
mov
das
clc
pop
sub
imul
rolb
in
dec
mov
xor
sbb
sbb
mov
wbinvd
call
loope
adc
sub
shr
in
outsl
rcl
enter
or
scas
call
adc
repz
mov
sbb
pop
aam
rol
push
stos
clc
pop
dec
mov
mov
adc
jl
fadds
add
test
adc
sbb
movsb
pop
cli
jp
adc
pop
incl
mov
push
jae
cmp
lods
js
rolb
in
popa
lods
rorw
add
or
mov
add
jb
shl
aad
mov
xchg
insb
fcoms
fsubl
sub
xor
jns
das
pop
addr16
aad
std
ds
jge
shl
or
jb
push
mov
xchg
es
mov
ss
loope
push
and
cmp
mov
stc
adc
mov
negl
xor
adc
pop
scas
test
push
test
inc
mov
xchg
or
dec
inc
repz
jmp
ret
push
push
ds
pop
scas
mov
xor
cmpsb
movsb
repnz
inc
mov
enter
push
ret
sub
cmp
push
inc
fsubs
sbb
mov
test
push
xchg
sub
leave
or
xchg
mov
test
mov
es
lods
cmp
aam
sub
das
or
push
dec
inc
mov
insl
or
mov
mov
sub
mov
push
js
xchg
fldcw
fcmovnb
sti
fs
xor
mov
and
sbb
sahf
xchg
push
rcrb
mov
mov
aas
xchg
in
dec
pop
ljmp
es
inc
and
das
or
subb
xor
sub
sbb
dec
bound
lds
cmp
xchg
pop
enter
xchg
inc
and
mov
loope
enter
in
test
fists
rolb
mov
jbe
mov
hlt
paddq
lds
xchg
test
popa
xor
ret
mov
icebp
mov
cmp
leave
push
mov
sahf
imul
jbe
repz
pop
je
adc
ljmp
mov
xor
rolb
shr
fstp
pop
xchg
xor
cmpsl
jnp
mov
or
movsl
fists
mov
adc
jmp
push
popa
mov
shll
or
scas
add
jmp
pusha
fdivs
cmp
fimuls
pop
mov
xchg
sbb
inc
popf
and
adc
jg
inc
lea
cwtl
and
inc
cmp
push
popa
or
mov
jge
scas
add
cmp
cmc
adc
dec
jbe
mov
adc
or
iret
dec
stc
add
hlt
loopne
xchg
inc
push
inc
roll
mov
pop
sarb
enter
into
es
inc
test
insl
pop
xor
xor
movsl
out
fstl
mov
push
addb
lahf
dec
mov
lea
mov
sbb
imul
outsl
icebp
fsts
push
mov
dec
fmuls
jae
mov
xor
aas
addl
ficoml
addr16
push
jecxz
or
push
into
ds
lea
addl
dec
clc
lahf
mov
cmc
cmc
sub
or
inc
xchg
in
leave
push
cli
and
mov
pushf
aam
mov
mov
loop
jbe
jno
xchg
jns
aad
lds
data16
inc
cld
outsb
ss
shrb
std
mov
xchg
popa
icebp
aas
data16
popf
push
cmp
sahf
and
mov
into
imul
push
jle
testb
jmp
sbb
or
lea
cmc
enter
xor
addps
mov
mov
xchg
push
cmpsl
test
push
outsb
push
mov
leave
push
push
sbb
ror
popf
cld
cmp
and
mov
adc
and
pop
inc
mov
icebp
jmp
outsb
dec
jp,pt
cld
ds
pop
xchg
xchg
mov
dec
or
mov
jl
xor
jo
add
stos
je
imul
or
rclb
adc
out
inc
cmp
sub
push
mov
test
test
lods
ret
scas
mov
js
repnz
sbb
jbe
adc
fcmovbe
andb
repz
push
dec
xchg
jb
cmp
and
cmp
and
sbb
cmp
pop
mov
mov
xchg
lods
data16
or
cwtl
adc
sub
push
push
outsl
jle
scas
adc
lret
xchg
mov
add
fimull
or
addl
test
mov
outsl
sub
dec
mov
jl
scas
scas
fdivr
or
fwait
dec
or
lock
push
les
mov
xchg
aam
cs
xor
ret
fimull
or
loop
inc
movsb
xchg
xor
test
push
jp
push
pop
xor
and
mov
xlat
and
adc
pop
movsb
call
les
push
cmpsb
jmp
and
jb
in
jle
loop
sbb
sub
call
inc
lods
mov
fildl
lds
add
ljmp
mov
test
es
fstl
inc
cmpsb
inc
popa
bound
repz
pop
or
daa
clc
rclb
mov
dec
cltd
xor
ja
jmp
sbb
mov
icebp
js
scas
pusha
sbb
sub
leave
pop
xchg
push
sbbb
pop
adc
cld
inc
lea
lea
lock
sub
sbb
add
push
mov
jb
or
inc
jo
ja
sbb
cltd
and
and
pushf
jbe
add
or
pop
cmp
out
jbe
push
insl
out
or
sub
ss
dec
mov
jnp
aas
jnp
mov
ficoml
jbe
mov
fwait
jge
in
pop
call
mov
sub
ja
rclb
sahf
lods
test
mov
orb
jae
adc
mov
hlt
xchg
cltd
push
push
movb
jl
lock
mov
fimuls
jmp
loop
mov
inc
mov
inc
or
icebp
add
hlt
sub
dec
xchg
mov
inc
clc
dec
js
adc
cld
mov
sbb
pop
mov
cmp
xchg
movsb
int3
inc
out
adc
push
pushf
xor
pop
sbb
lods
xchg
sub
push
dec
adc
jle
mov
aaa
mov
fs
mov
or
sbb
inc
and
push
cmp
xor
dec
push
adc
pusha
stos
mov
leave
add
gs
xchg
dec
xor
fldl
dec
dec
cmp
sbb
sub
mov
clc
jp
lods
and
lar
cli
jg
pusha
out
add
nop
jbe
sub
pop
dec
imul
shlb
jno
in
sti
fiaddl
mov
push
xchg
cmp
mov
orb
aas
fcoml
add
outsb
pop
inc
mov
std
adc
and
popa
or
cli
push
cld
mov
in
sbb
push
ficompl
cmpsb
add
add
sti
cmp
jle
shll
sub
sub
lret
sub
aas
sub
sbb
insl
outsb
pop
shrb
pop
xor
mov
push
cmp
fldl
adc
push
jo
filds
bound
sbb
xor
or
gs
leave
pop
std
add
rcrb
ret
fistps
mov
push
dec
das
and
sub
repnz
push
dec
jg
inc
sbb
and
push
mov
jo
fwait
mov
dec
cmp
inc
mov
xchg
pushf
std
xchg
je
and
xchg
xchg
push
jae
rcrb
cmp
inc
fxch
jno
adc
dec
push
xchg
and
out
mov
jb
cmp
jnp
jo
mov
icebp
dec
lock
jns
fs
lret
mov
mov
rolb
aas
nop
mov
prefetch
pop
cld
es
or
xlat
out
fsubs
aad
les
mov
adc
stos
or
je
sbb
test
jmp
adc
jb
rclb
or
pushf
incl
popf
dec
sub
insl
jne
test
out
adc
test
xorl
push
or
dec
and
loopne
pop
xchg
jno
pop
inc
dec
or
xor
les
bswap
mov
mov
sti
outsb
call
mov
dec
dec
add
loop
aam
xor
pop
mov
cs
out
mov
add
daa
jne
add
lret
inc
inc
ja
dec
jb
call
faddl
addr16
hlt
push
mov
aam
fsubrs
xor
xor
mov
rcrb
push
fadd
sbb
lret
adc
es
dec
add
inc
push
add
andb
lcall
add
inc
adc
push
lahf
inc
cltd
dec
fmull
and
push
pop
xchg
push
movsb
aaa
xor
aaa
int
js
scas
or
jae
add
lret
repnz
mov
lret
push
or
xchg
push
and
xchg
es
sub
add
push
ds
enter
sub
sbb
lahf
shr
repz
add
outsb
aas
sub
daa
fs
xchg
fdivrs
push
out
mov
ret
or
sbb
adc
sbb
les
call
sbb
inc
test
inc
lods
dec
test
mov
mov
xor
enter
pop
mov
pop
sbb
pop
push
outsb
pushf
imul
data16
jae
jl
pop
icebp
int3
xor
and
mov
clc
adc
addr16
mov
adc
xchg
jg
jl
fisttpll
pop
loopne
push
xor
and
addb
or
xchg
imul
push
test
imull
xorb
in
ljmp
jl
popa
push
pop
mov
pop
mov
add
xchg
mov
or
imul
pop
adcb
dec
xlat
in
pop
add
loopne
inc
repz
jbe
ja
ds
push
fbld
sub
lea
cmp
mov
hlt
sub
pop
shll
shrl
mov
add
jle
push
pop
cld
mov
sbb
jle
and
xor
xchg
inc
sarb
sub
push
sub
into
sub
fistpl
fisttps
fdivrs
sub
ret
mov
adcb
fcmove
cmp
pop
sub
pop
and
sub
cmove
push
dec
in
scas
orb
imul
pushf
pop
enter
and
push
imul
or
xadd
cmc
xlat
insb
jne
push
jne
shlb
loopne
push
mov
and
int3
adc
imul
les
jp
lock
scas
adc
cmp
cmp
fsubr
and
lahf
pusha
pusha
or
add
and
fsubrs
xchg
pop
imul
subb
add
fdivp
push
add
daa
call
cmp
pop
roll
or
jg
cli
loopne
lret
inc
imul
adc
imul
fldt
daa
cwtl
jns
addr16
clc
addl
xchg
das
jae
push
push
xorl
lds
adc
fisubrs
and
add
fidivrs
push
add
dec
cltd
push
add
lock
test
jmp
pop
fistps
in
nop
cltd
push
push
imul
hlt
loopne
addr16
daa
jbe
push
push
dec
and
and
or
fmull
mov
std
or
and
xor
inc
shrb
bound
iret
rcrl
mov
pushf
xchg
hlt
lret
addl
mov
out
and
loop
ljmp
dec
addl
push
test
lock
xlat
je
push
enter
inc
xchg
xchg
mov
pop
sub
cld
and
dec
roll
ljmp
jge
jne
pop
and
mov
in
pusha
jno
sbb
cli
ret
push
lods
add
cld
outsl
icebp
mov
push
and
adc
xchg
les
loopne
sbb
roll
mov
pop
push
and
mov
sub
push
inc
loope
or
mov
insb
fiadds
mov
xchg
push
pop
inc
shlb
rolb
aad
test
and
dec
sbb
jae
pop
fwait
cli
dec
xchg
sbb
test
ret
test
dec
sbb
movsl
pop
mov
xchg
sbb
mov
mov
and
fcmovnb
les
loope
rolb
or
sbb
fisttps
jne
mov
fsubp
pop
call
pop
jp
adc
mov
cmpsb
nop
mov
bound
test
dec
pop
inc
roll
or
inc
cvtps2pi
sub
icebp
clc
xor
in
jl
andb
and
mov
mov
sub
ljmp
add
jl
or
and
aam
insb
bound
cld
jmp
clc
mov
adc
mov
xchg
inc
xlat
adc
mov
mov
xorb
and
sub
mov
lea
xchg
mov
rolb
add
mov
cwtl
sbb
mov
fcmovb
or
and
jp
adc
mov
imul
mov
pop
test
dec
mov
jb
stc
andl
cli
xchg
or
pminub
and
push
ss
int
pop
push
push
ss
mov
xor
sbb
mov
and
push
flds
sbb
loopne
inc
cld
aaa
mov
mov
mov
aas
loop
jp
insb
leave
jg
mov
push
cmp
shll
cmp
add
xorb
inc
mov
movsb
or
add
cmp
add
xchg
js
sbb
in
xor
loopne
cld
mov
inc
scas
sbb
or
mov
clc
sbb
lcall
ja
movsb
dec
mov
sarl
add
out
xrelease
rcr
add
ret
rolb
sbb
push
stos
and
push
inc
cli
lret
andb
dec
mov
cwtl
cmp
inc
and
jmp
inc
mov
xor
shr
aad
cmp
xorb
mov
mov
repnz
ret
fiadds
je
out
fld
xchg
mov
or
inc
mov
mov
jecxz
insl
push
fisubs
dec
stos
fnstcw
adc
add
dec
sarb
jl
sub
jb
cld
adc
mov
aaa
out
clc
pop
out
out
ret
jno
pushf
dec
add
cmp
dec
jmp
mov
cmp
stos
cmp
icebp
or
push
pop
or
xor
and
clc
imul
mov
pop
jo
pop
lret
ret
js
daa
lret
cmp
lods
dec
gs
mov
lds
gs
jb
lret
test
inc
or
std
and
pop
or
xor
ljmp
repnz
lods
push
outsl
clc
mov
cmp
push
push
les
jno
sarl
js
outsl
xchg
mov
mov
fs
cmp
sub
inc
jle
ret
sbb
inc
aam
xor
inc
xor
xchg
jmp
movsb
pop
loope
xor
push
psubsb
lock
and
fdivp
popa
xor
frstor
pop
or
mov
fs
or
mov
outsb
or
enter
xchg
aam
shl
adc
pop
out
mov
adc
mov
sub
ljmp
leave
sbb
je
adc
pavgw
leave
push
or
pop
mov
pop
ret
push
pop
inc
mov
int
add
mov
dec
mov
mov
imul
jnp
xchg
push
negl
pop
ljmp
inc
ss
or
outsb
push
and
jmp
cmp
mov
lock
ret
imul
push
sub
or
shll
cwtl
jbe
scas
jg
fsubl
orb
jmp
pop
sbb
mov
push
pop
je
mov
in
inc
cs
inc
outsl
pop
add
push
or
or
jp
push
sub
or
xor
inc
cmpsl
jb
xchg
mov
negb
push
lret
bound
jecxz
push
lcall
les
jecxz
mov
dec
inc
imul
in
push
mov
sub
or
aas
loope
pavgb
shl
push
dec
xor
or
nop
xor
sub
inc
scas
adc
incl
adc
mov
adc
pop
sahf
ljmp
sub
pop
mov
mov
jo
jg
loop
and
movsl
addr16
into
fdivrs
test
nop
jecxz
xor
mov
sbb
lcall
sbb
xchg
pop
movsb
jp
test
fs
adc
xchg
cmp
sub
cmp
push
cmp
cmpb
roll
in
test
push
adc
orl
mov
dec
cmpsl
mov
fwait
push
popa
inc
mov
jg
inc
lds
pop
lret
test
and
movsb
fs
jb
in
subb
leave
and
push
hlt
jo
cmp
das
pop
gs
movsb
inc
cmp
pop
test
dec
imul
js
out
adc
or
in
ror
mov
push
cmc
mov
cmp
mov
sub
xchg
mov
sar
pop
sbb
call
rclb
ret
cli
xchg
push
dec
and
je
inc
or
fistl
mov
mov
xchg
shrl
cmc
fcomps
xchg
nop
gs
test
or
pop
ljmp
jp
clc
and
subb
outsl
or
dec
pop
outsb
add
cmpsl
insb
pusha
add
sub
mov
xorl
xor
ljmp
cmp
or
cmp
lret
lea
lock
cmp
icebp
mov
fisubrl
test
ret
movsb
inc
push
xorb
popf
fistps
sbb
pop
cwtl
pop
and
jns
outsb
mov
cmc
push
shrb
xchg
dec
xchg
insb
dec
test
shll
add
scas
mov
dec
sbb
dec
stos
popf
adc
lea
nop
pushf
inc
aas
lods
pop
jbe
push
adc
xchg
outsl
cmpsl
out
lea
mov
mov
pusha
es
mov
cltd
into
xor
xor
insb
data16
mov
pop
or
xor
pop
inc
inc
aas
std
movsl
and
cmp
mov
js
inc
dec
sbb
insl
movsb
push
inc
mov
mov
xchg
cs
jnp
rolb
sub
rorb
mov
mov
push
cmp
jge
call
or
fists
sub
push
out
test
push
jle
adc
gs
dec
xor
cmc
imul
test
adc
mov
xor
pop
outsb
sbb
inc
add
cli
cmpsl
dec
and
mov
leave
clc
xlat
in
add
jo
add
add
sbb
adc
pushf
mov
andb
push
nop
in
adc
inc
jo
xorl
cmc
push
mov
pop
mov
dec
fwait
std
fdivl
ljmp
inc
and
xchg
xlat
mov
sbb
push
mov
adc
pop
mov
push
pushf
cli
dec
cld
enter
test
push
cwtl
sub
nop
jbe
push
je
loope
cmp
xor
aam
addb
loopne
jbe
dec
ret
into
outsb
js
ret
mov
xor
enter
lods
adc
push
mov
fsubp
xchg
sub
rcrl
jge
inc
add
sbb
sbb
dec
call
les
jg
push
lret
in
pop
rcr
push
ljmp
mov
push
mov
push
add
mov
sbb
jo
pop
rolb
mov
mov
adc
cli
xor
in
mov
sub
hlt
test
mulb
adc
test
xchg
sub
cs
xchg
pop
ret
jp
aam
scas
mov
cmc
mov
mov
rolb
in
int3
nop
mov
in
adc
rcl
inc
add
jp
xor
bound
pop
add
gs
pop
les
and
lods
pop
pop
test
pop
pop
loope
mov
jne
mov
repz
jecxz
insb
sbb
mov
cmp
sbb
lods
or
jecxz
test
push
dec
add
mov
sbb
in
jbe
ret
and
test
repz
sahf
inc
ret
xchg
xchg
pop
xchg
ret
xchg
hlt
dec
inc
sub
cmc
arpl
arpl
adc
xchg
dec
xor
mov
xor
or
cmp
repz
gs
mov
aas
gs
test
mov
pop
sbb
inc
inc
push
inc
ret
in
imul
nop
in
xor
cmp
inc
and
test
call
test
inc
xor
stos
sbb
ret
mov
and
movb
sub
pusha
push
adc
stos
or
lcall
lahf
dec
ret
jp
mov
ud0
test
jle
mov
or
pop
pop
adc
sbbb
or
popa
fs
repz
mov
cmp
fisubs
cmpsl
dec
xchg
xchg
ret
pusha
leave
in
movl
ds
push
xor
pop
adc
pop
push
outsb
sub
loopne
icebp
jl
dec
idiv
jnp
in
adc
lock
rcrl
mulb
inc
aas
movsb
cmc
outsb
scas
ret
or
adc
popa
std
aam
loopne
xchg
inc
pusha
push
das
push
mov
and
pop
push
mulb
popa
out
leave
and
addr16
inc
mov
aam
xorb
push
fwait
mov
add
xor
pop
es
mov
into
push
stos
inc
cmp
incb
pop
xor
mov
lcall
add
mov
pop
enter
imul
mov
fsubrs
aad
jmp
mov
pop
bound
push
repz
fcmovnbe
sbb
mov
mov
lret
xchg
jb
dec
or
sub
cmp
sub
mov
fisubrs
lods
cmpl
mov
mov
lret
dec
cmp
mov
popa
jle
mov
and
or
movsb
aad
push
mov
adc
aam
mov
lods
mov
xchg
addl
lods
aaa
adc
xor
shlb
pushf
xchg
jbe
movsb
daa
sarl
cltd
lock
dec
loop
imul
shl
sbb
rorb
cmp
icebp
mov
stc
mov
js
xor
mov
add
dec
daa
subl
bound
mov
in
stos
pusha
insb
ret
cld
loopne
sahf
pushf
jbe
or
pavgb
or
roll
call
adc
push
push
mov
stos
adc
cltd
mov
imul
jo
lahf
cmp
pop
jle
test
or
sbb
add
mov
ja
push
pop
inc
or
push
sbb
sub
and
add
xchg
roll
jno
mov
fmull
push
fimull
xchg
mov
movsb
mov
xor
rcrl
rcr
mov
dec
jbe,pn
or
loope
outsb
jg
adc
and
mov
pop
clc
cs
xlat
xchg
movsb
pop
add
sub
jecxz
lret
pop
inc
xchg
dec
in
imul
cli
test
sbb
aam
andb
data16
xor
lcall
fiadds
pusha
nop
in
ss
add
aaa
push
in
cmpsl
mov
xor
test
pop
dec
xor
jle
rorb
arpl
aaa
adc
mov
js
xlat
add
or
aad
call
sbb
sbb
dec
icebp
push
inc
insl
and
or
stc
sub
mov
stos
jp
call
inc
adc
mov
push
inc
mov
roll
dec
lahf
shr
dec
inc
icebp
in
add
mov
mov
arpl
js
imul
cmpsb
dec
sub
fsub
mov
fwait
pop
inc
and
lcall
andb
xor
jae
idivb
push
cmp
aam
ljmp
mov
repnz
push
ret
mul
mov
fistl
xor
xchg
aas
mov
cwtl
inc
test
stc
or
adc
mov
jle
sarb
dec
shll
out
daa
ds
jle
clc
pop
pop
sbb
push
fwait
jp
xchg
repnz
repnz
test
cltd
mov
testb
dec
push
dec
inc
jp
fsubp
out
xchg
xor
xor
ja
xchg
aam
call
jle
sti
sbb
sbb
popf
inc
or
or
lock
aas
jl
test
and
cmp
mov
icebp
mov
dec
fwait
mov
inc
call
fsub
adc
lea
rorl
xlat
sub
adc
insb
pop
test
jl
xchg
cmp
pop
mov
sbb
push
or
mov
mov
and
cmp
add
xor
aaa
mov
cmpsl
or
pop
mov
adc
xor
js
push
dec
add
mov
ljmp
test
inc
lods
ret
xor
sub
mov
or
sub
mov
and
adc
fmuls
mov
jo
xchg
cmp
cmpsb
jl
or
cmp
inc
lret
mov
inc
mov
pop
mov
lods
int3
or
or
gs
add
movsb
stos
or
in
push
adc
loopne
jmp
or
pop
add
adc
sub
inc
push
bound
xlat
push
test
jmp
mov
in
rol
jmp
adc
pop
ss
pop
ret
push
lea
shrb
ljmp
je
ljmp
int
push
xor
insl
push
adc
inc
sbb
mov
ljmp
mov
pop
pusha
shrl
dec
nop
outsl
enter
sub
adc
test
lock
adc
xchg
mov
jns
xorl
pop
out
xlat
imul
cld
jo
insl
and
add
and
dec
and
mov
outsl
fs
out
decb
test
jl
adc
sarb
inc
push
shl
or
insb
hlt
push
and
nop
cmpsl
lds
cmc
inc
loopne
clc
subb
jnp
add
pop
mov
insb
mov
popa
xlat
and
scas
mov
ret
adc
xchg
out
xlat
nop
addr16
mov
call
loopne
jge
push
pop
dec
out
not
xor
pop
or
dec
xchg
out
cmpb
mov
je
pusha
or
fidivrl
insl
clc
add
leave
mov
subb
test
les
mov
inc
or
int
ss
lds
loopne
rcrb
or
adc
push
out
mov
cmp
and
adc
loop
sub
je
or
cwtl
arpl
cmc
imul
cmp
popf
mov
cmc
pop
sar
sbb
sub
shll
sub
push
jp
mov
cmc
add
and
jns
dec
sar
das
cmp
push
mov
pushf
insl
popf
fists
xchg
and
loopne
xor
mov
mov
dec
ja
xor
jno
xor
adc
mov
or
fdivs
popf
jp
test
je
jg
dec
xchg
mov
repz
hlt
mov
xchg
test
test
jg
sub
movsl
add
push
jmp
loop
inc
push
jl
and
mov
pop
jge
inc
adcw
test
inc
jecxz
add
jl
dec
add
les
pop
sub
jnp
cli
mov
adc
mov
mov
loopne
adc
fstpt
call
js
mov
orl
ja
adc
je
jp
cld
pop
jne
cmp
add
dec
pusha
lcall
cld
xor
add
mov
out
add
add
xlat
cs
les
sub
rolb
sbb
clc
bound
and
sbb
jmp
dec
or
add
mov
adc
je
push
cmp
mov
mov
fadds
je
scas
pop
and
rcll
jge
mov
add
fdivrs
js
push
fisubs
jmp
add
jmp
imul
xor
inc
jnp
test
jbe
pop
cltd
and
in
jge
ss
mov
imul
pop
test
mov
push
sbb
mov
loop
fdivs
lods
sub
mov
xor
ror
popf
mov
daa
data16
jns
lea
hlt
fistl
xor
shlb
mov
scas
pop
jp
adc
movsb
dec
sbb
jle
lea
mov
lcall
mov
lcall
or
fildll
mov
sub
xor
arpl
push
sti
fistps
push
mov
adc
bound
fdivp
sahf
pop
rclb
mov
mov
sbb
jnp
popa
lret
xor
hlt
outsl
std
cmpsl
rolb
cmpsl
lea
sbb
mov
xchg
push
pop
loopne
mov
nop
xchg
sarb
subl
inc
adc
addr16
inc
push
inc
call
xor
das
orl
scas
shlb
add
das
mov
cs
xor
or
call
test
inc
imul
add
leave
xchg
fisubs
push
cmc
jnp
pushf
push
pop
adc
push
xor
pop
icebp
fwait
cmc
push
es
mov
mov
inc
sbbb
leave
call
and
or
sarb
out
imul
aam
cmp
mov
call
popa
cmp
pop
jae
xchg
roll
sbb
or
xor
lods
push
xchg
hlt
mov
cmp
ds
lea
or
jp
orb
ja
stos
cmpsb
test
mov
xchg
and
ja
xor
mov
das
jo
testb
push
xchg
push
mov
mov
scas
and
mov
inc
cli
push
bound
cmp
jb
mov
test
dec
mov
push
outsb
dec
pop
mov
in
sbb
rcrl
mov
pushf
dec
add
movsl
std
add
cmpsl
mov
mov
jo
loopne
pop
dec
dec
daa
lcall
mov
mov
clc
fst
push
rclb
or
sbb
lods
popa
add
push
mov
movd
jo
insb
cmp
sbb
xor
sbb
sbb
addb
ror
xor
rcrl
xchg
out
mov
cmp
cmp
dec
test
jg
mov
call
push
add
xor
into
rclb
xchg
push
jl
push
add
std
es
adc
and
and
or
add
popa
jg
sbb
xlat
jg
loopne
insl
movsl
add
sub
sub
mov
jl
outsl
and
push
nop
sti
cwtl
out
js
lcall
andl
repnz
rclb
fisubs
cmc
xor
add
mov
xor
ret
fisubs
xor
insl
mov
push
dec
sub
lock
add
push
adc
addr16
lahf
inc
imul
push
xchg
negb
pop
stc
inc
aam
out
pop
shlb
mov
jl
xchg
xchg
lock
ficoml
dec
rcrb
xchg
adc
mov
mov
add
daa
cld
xchg
jbe
dec
push
xor
and
shlb
inc
rorl
jae
adc
in
data16
jle
xchg
test
adc
xor
pusha
mov
or
je
mov
lret
ljmp
bound
xor
test
inc
clc
add
mov
out
or
loopne
imul
mov
cld
sub
idivb
or
imul
cmp
je
hlt
add
jo
sub
outsl
int3
pushf
fwait
sahf
mov
call
sbb
loope
loop
push
nop
leave
jmp
jl
clc
fcoml
shr
jmp
push
inc
jo
roll
aam
mov
sti
pop
ljmp
dec
mov
sbb
xchg
loop
scas
fs
idivb
std
adc
mov
sti
faddl
add
fldl
loope
andl
int
stos
test
call
and
pop
lock
test
sbb
data16
clc
fs
adc
sub
xchg
and
je
adc
mov
movsb
or
pop
adc
in
outsl
push
lret
pop
mov
cmpsb
cmp
mov
inc
mov
fs
lcall
negb
int3
mov
ja
sbb
test
adc
or
xor
pop
sub
fistpl
cmc
mov
push
or
mov
or
adc
je
int3
and
out
and
xchg
adcb
imul
jno
mov
popa
out
push
out
inc
rcrb
shlb
add
aam
pop
pop
mov
inc
neg
fists
out
shll
inc
cwtl
mov
std
stos
add
ficoms
cli
jmp
mov
popa
dec
xor
bound
pop
dec
ds
mov
dec
sub
js
insl
lods
sbb
data16
mov
and
sbb
add
jg
cmp
jo
add
loop
xor
leave
push
mov
sahf
shll
aas
into
push
sbb
or
adc
sbb
repz
and
mov
or
shrb
call
scas
nop
repz
jbe
imul
mov
les
cmp
push
push
popa
filds
adcl
push
psubb
push
or
ss
jbe
loop
mov
popa
fldcw
cmp
xchg
mov
cld
or
and
mov
dec
outsl
push
in
push
lret
and
xor
mov
lahf
enter
cmpsb
cwtl
mov
push
jo
ljmp
adc
push
cmpsb
add
sub
push
fiadds
pop
xchg
mov
test
cmovne
adc
lea
lret
jno
add
ss
popa
pop
sahf
lock
enter
adc
xorb
leave
dec
adc
jp
repz
push
mov
cli
mov
cmp
xchg
aas
jb
lret
enter
or
pop
ret
popa
rclb
push
pop
nop
mov
xchg
sbb
add
ja
mov
cmpsb
movb
xor
push
lahf
cmc
inc
stos
mov
out
mov
neg
data16
loopne
sbb
fs
test
pop
xor
dec
dec
sub
dec
push
pop
mov
inc
sub
push
clc
fildll
lods
out
cwtl
inc
adc
lcall
push
das
or
mov
mov
dec
fisttpl
xorb
test
loop
popl
js
sub
fwait
or
push
lds
and
xchg
ljmp
push
insl
xor
mov
push
pop
add
call
xchg
out
fimull
fcoml
mov
ficoml
stc
mov
mov
push
movsl
xorb
sub
enter
scas
gs
inc
out
rcrl
in
lret
mov
mov
jl
adc
or
fs
jle
out
movsb
in
fmul
xchg
push
outsb
mov
lcall
mov
sbb
fs
mov
add
ljmp
scas
daa
xchg
inc
push
es
pop
mov
aas
jns
add
dec
aad
mov
push
nop
ret
pop
and
mov
popf
test
dec
pop
mov
out
je
add
mov
stc
cmp
shll
xor
xor
or
int
ljmp
add
enter
inc
cmpsb
cmp
lock
mov
shlb
xchg
jge
mov
xor
dec
iret
xor
jnp
cwtl
inc
cmpb
adc
sti
adc
mov
push
ficompl
or
lods
das
clc
push
fcomip
push
jno
daa
orl
xor
clc
and
add
sbb
scas
jb
mov
leave
push
mov
mov
inc
or
aaa
mov
cs
mov
daa
xchg
sub
pop
sbb
mov
jnp
lock
cltd
in
sbb
rclb
jbe
clc
sub
mov
xor
aaa
fcmovb
lret
sub
ret
mov
adc
scas
imul
es
inc
cld
int3
mov
lcall
pushf
cmpl
in
scas
ret
xor
push
or
cmpsb
test
loop
mov
pop
sub
adc
ret
sbb
les
test
fistpl
inc
mov
daa
in
leave
adc
xchg
pop
mov
sub
xorb
mov
xchg
lods
inc
add
sbb
ss
and
push
mov
lea
inc
mov
cs
inc
jge
inc
outsb
push
mov
adc
sub
or
ds
pushf
fldt
jle
hlt
enter
mov
mov
xchg
fstpt
arpl
in
add
fs
insl
test
sbb
cs
movsb
push
out
insb
rcrl
jbe
mov
mov
pop
xor
mov
push
mov
bound
popl
decl
mov
movsl
add
pop
add
or
push
push
test
push
out
out
aaa
mov
aad
xchg
aad
fimull
sbb
test
loope
out
test
sbb
lcall
mov
cwtl
xor
xchg
adcb
lea
push
test
fimuls
insl
test
mov
push
inc
xor
mov
xor
dec
test
sbb
outsb
iret
xchg
imull
pusha
test
add
sub
push
loopne
pop
xchg
icebp
enter
sbb
jp
ljmp
not
ret
xchg
dec
sbb
xchg
cmpsl
sbb
push
push
and
aam
jg
add
adc
pop
movsb
mov
pop
fsubl
jnp
dec
ret
movhps
add
jb
dec
mov
les
adc
movsb
into
lcall
dec
aad
cwtl
cli
decl
mov
in
sub
mov
sub
sub
xor
adc
test
ret
xchg
mov
lods
cmp
jnp
es
js
inc
hlt
jl
sub
scas
movsl
cmovno
enter
xorb
sbb
pop
add
pop
out
repz
decb
js
shr
pop
mov
cmp
arpl
dec
enter
sbb
aas
ret
roll
rclb
dec
inc
fwait
push
adc
cmp
jg
push
sbb
xor
jge
inc
and
mov
jmp
mov
push
push
cli
je
into
imul
push
mov
mov
or
push
pop
dec
incl
adc
pop
and
pop
mov
inc
insb
sar
add
add
inc
xchg
mov
ja
imul
and
fs
sub
xchg
addb
mov
and
jg
fwait
sbb
sbb
rcr
xchg
mov
inc
js
adc
pushf
movsl
or
xor
jae
rorl
push
scas
adc
inc
es
xchg
jno
insl
ret
sbb
shlb
scas
and
mov
and
ret
out
or
das
mov
cmp
inc
mov
mov
clc
out
push
pop
mov
jmp
insl
push
mov
and
xor
hlt
pop
push
mov
repz
repnz
mov
shr
sub
inc
lcall
jns
jb
adc
mov
std
inc
ljmp
cwtl
adc
add
dec
push
jbe
data16
xor
pop
jecxz,pt
imul
scas
in
push
lcall
and
pop
loop
mov
clc
sbb
push
jecxz
nop
add
and
add
mov
adc
and
lods
addb
or
cwtl
test
cwtl
insb
outsl
clc
mov
lds
sub
dec
xor
or
jne
and
bound
add
inc
inc
mov
adc
in
adc
addr16
in
sbb
out
subl
out
sub
mov
mov
and
ss
sub
mulb
dec
jecxz
cmp
inc
push
lods
mov
jo
imul
filds
aam
mov
int3
loop
push
jno
sahf
and
pop
xor
scas
sbbl
bound
mov
in
mov
dec
sbb
add
pop
popf
jae
xchg
sbb
rcl
clc
ss
iret
and
push
adc
pusha
loop
add
pop
push
inc
subl
xor
outsl
subb
gs
mov
inc
sbb
sbb
lret
or
and
scas
jnp
icebp
cmp
xchg
outsb
sbb
inc
int3
fcomi
mov
push
mov
sbb
cmp
pop
mov
fwait
inc
inc
inc
daa
mov
ret
pushl
xor
pop
in
and
mov
pop
into
sub
pusha
add
imulb
call
bound
insb
rcll
in
push
mov
stos
adc
sarl
mov
or
roll
cmp
lahf
inc
je
or
xchg
iret
adc
cmc
dec
pop
and
scas
mov
cmp
scas
jge
jo
push
adc
cmpsl
adc
or
ljmp
sbb
stos
hlt
mov
pop
test
dec
outsb
std
das
inc
movq
sub
lods
in
ljmp
dec
fimull
xchg
in
push
adc
dec
clc
dec
inc
call
test
subl
inc
test
push
and
ljmp
bound
jb
ret
sub
enter
adc
pop
pop
pushf
popa
fstps
or
dec
aaa
dec
sub
jp
repnz
pop
jbe
loope
push
stos
add
push
sub
pop
mov
cmp
loop
sahf
pop
mov
push
jp
insl
adc
test
sbb
and
fstl
gs
scas
hlt
mov
cmp
mov
jae
push
adc
pop
icebp
pop
insl
ljmp
cli
outsb
adc
mov
fdivl
and
movsb
mov
xor
enter
gs
mov
adc
loopne
push
mov
cwtl
pop
jns
arpl
and
pop
rclb
cld
mov
pop
xchg
out
lret
aad
insb
push
ficompl
into
adc
ret
cmpsb
sub
fimull
popf
out
mov
orb
sbb
and
mov
pop
repnz
stos
sbb
outsl
sbbl
push
rclb
mov
imul
push
and
sub
js
push
lods
lcall
dec
dec
clc
push
mov
stos
pusha
sub
pop
push
call
iret
mov
test
subl
imul
adc
inc
popa
mov
movsb
lock
call
outsb
clc
aam
call
movzbl
ja
cmovle
mov
fcoms
mov
int
push
notb
and
mov
rclb
out
fildll
lods
xchg
xchg
xchg
pushf
jle
cmp
adc
jne
leave
bound
push
xor
mov
push
shrl
data16
pusha
mov
mov
dec
shll
das
adc
mov
loopne
inc
in
adc
std
sub
pop
push
inc
out
xor
loopne
dec
lock
jp
mov
fwait
mov
mov
and
mov
aas
adc
fbstp
mov
add
idiv
cmp
pop
test
movl
or
add
pusha
subb
js
mov
push
xor
fimuls
les
and
sub
scas
pushf
add
mov
or
push
adc
xlat
jg
push
cld
ja
inc
mov
loop
mov
into
push
inc
adc
loopne
loopne
cmp
fld
mov
dec
out
and
notb
push
xor
push
or
lcall
inc
cmc
or
mov
inc
rcrb
insl
loop
arpl
jb
xchg
es
mov
push
sbb
adc
and
loop
pop
enter
enter
push
leave
imul
mov
inc
pop
mov
cmp
out
or
jl
jmp
mov
sub
scas
jne
add
add
imul
and
push
mov
out
xchg
inc
mov
sarb
shlb
js
jp
frstor
aaa
popa
mov
cmpsb
and
rorl
add
cmpsl
pushf
insb
adc
ret
js
add
shll
mov
mov
clc
jmp
lds
test
mov
or
scas
insb
mov
xor
push
jbe
in
jmp
scas
out
adc
mov
mov
out
push
sar
lret
jno
rolb
push
stos
sti
and
sub
icebp
pushf
int3
xchg
fdivr
mov
daa
stos
pop
jecxz
imul
xchg
xchg
xchg
stos
rclb
or
mov
add
cmp
aaa
mov
pop
mov
dec
adc
daa
mov
xor
loope
cmp
call
sub
mov
or
and
push
jne
popa
pop
mov
stos
fsub
call
add
xchg
dec
das
call
scas
dec
mov
call
insl
mull
pusha
in
xor
dec
int
inc
out
adcb
xchg
xchg
mov
sub
mov
pop
mov
loopne
insb
xlat
jne
test
rorb
fsubrs
loopne
mov
xor
aad
xchg
call
xor
mov
scas
jle
inc
popf
or
adc
sbb
jg
inc
lods
push
mov
mov
test
jle
lret
push
test
add
or
cmp
push
jmp
push
adc
icebp
jno
pop
add
ficoml
inc
xchg
loopne
mov
or
mov
cmp
scas
cmpsb
dec
mov
dec
loope
adc
icebp
mov
ljmp
iret
cmpsl
push
cli
out
stos
mull
mov
mov
sbb
add
scas
incl
mov
ljmp
xchg
clc
fdivs
pop
in
in
pop
call
aad
mov
jo
jns
cmp
xor
testl
mov
into
xor
cmp
jl
mov
cld
rolb
xlat
jnp
ljmp
jg
dec
out
cwtl
enter
inc
sbb
jp
sub
add
cmc
iret
inc
testb
jbe
push
in
inc
xchg
jle
fwait
push
add
inc
inc
xchg
enter
sar
jg
mov
mov
cmp
add
test
push
jecxz
ss
cmp
cli
lahf
xchg
arpl
push
mov
add
enter
stos
or
mov
push
int
adc
pushf
je
pusha
and
imul
mov
mov
or
adc
leave
arpl
cmpsl
adc
push
add
pop
pop
adcb
add
cmc
xor
movsb
clc
adcl
pusha
popa
cmp
scas
pushf
movsb
call
mov
fisttpl
and
mov
push
ret
test
or
in
fstl
aaa
inc
jle
cmpb
leave
in
push
rcrb
adc
test
xchg
ss
fldenv
add
fldl
imul
mov
push
lcall
inc
sbb
xorb
sub
mov
insb
std
xor
xchg
push
jnp
enter
dec
test
clc
pop
data16
xlat
shrl
sub
ss
mov
inc
cmpsb
xchg
popa
sbb
add
in
and
lret
cld
push
es
inc
dec
cmp
in
add
test
mov
adc
xor
mov
test
inc
repz
sbb
jle
xchg
test
add
xchg
sahf
sbb
test
push
add
inc
push
inc
or
loop
inc
scas
dec
insb
bound
aaa
aaa
inc
sar
rorb
jl
aam
outsb
xor
imul
mov
inc
stos
adc
dec
jnp
lock
dec
lds
aas
push
call
or
hlt
repnz
mov
popa
cmp
lcall
cmp
or
stos
or
cmp
dec
call
outsl
mov
sub
test
pop
lcall
sbb
xchg
jae
add
dec
scas
pop
xchg
adc
mov
xorl
pop
add
mov
lret
mov
icebp
jmp
or
fwait
push
rorb
mov
aad
mov
ret
vpaddw
loopne
pop
cmp
pop
push
jo
push
das
xchg
mov
xor
mov
inc
xor
jecxz
jbe
xchg
clc
in
cmp
add
mov
cmp
mov
leave
dec
mov
adc
shrb
mov
outsb
and
in
cmc
andb
lcall
das
adc
bound
pop
loopne
cmp
add
cmp
jg,pn
jge
xor
dec
cli
or
lret
and
adc
aam
out
mov
sahf
add
lret
into
mov
xchg
xchg
mov
cmc
mov
imul
cwtl
dec
scas
loopne
jbe
dec
aam
in
sub
inc
xchg
imul
add
rcrl
adc
jbe
loope
inc
inc
mov
sub
in
js
mov
loope
mov
loope
rorb
push
xchg
in
mov
cmp
ljmp
fsubrs
add
sbb
imul
mov
incb
dec
jnp
andb
mov
or
arpl
icebp
sbb
scas
js
neg
fcmovb
mov
adc
nop
push
add
cwtl
push
adc
hlt
pop
out
shlb
movsb
dec
mov
sub
mov
ret
aas
push
xor
push
jp
lea
lods
loopne
shl
enter
sub
aam
loope
mov
test
jp
js
fidivrs
fsubrs
popa
bound
inc
push
inc
jne
jl
cltd
push
cmc
inc
inc
lods
addb
push
mov
mov
fists
fistpll
outsl
ljmp
jmp
imul
add
or
in
adc
das
cwtl
mov
cmp
shll
cmc
xchg
arpl
add
std
push
sbb
test
sub
je
inc
mov
icebp
inc
push
fildll
jo
cld
mov
or
adc
inc
push
add
add
cmp
sub
ss
push
pop
inc
mov
mov
xchg
jbe
or
imul
std
and
pusha
daa
stos
jl
mov
das
jp
cmp
jb
aas
cbtw
mov
pop
add
mov
jecxz
and
mov
mov
inc
fmuls
xchg
ljmp
dec
mov
sbb
ljmp
fisubrl
xorb
out
mov
das
push
add
ds
lcall
cmp
lret
test
and
cwtl
push
sbb
inc
xor
add
icebp
cmp
inc
push
fucomp
push
push
pop
or
mov
rcl
jg
lret
sub
lock
mov
frstor
fildl
mov
cmc
mov
roll
mov
push
push
scas
rorb
cs
in
sbb
inc
pop
sub
dec
jge
jmp
iret
mov
and
shrl
add
mov
repnz
adc
fcmovnb
sub
push
movsl
ds
add
add
xchg
inc
or
or
addl
std
lods
push
ret
idiv
into
inc
je
mov
cmc
cmp
adc
mov
inc
rorb
push
imul
fsubr
or
xchg
popf
outsb
add
sub
or
adc
dec
shlb
movsb
sub
es
sbb
sub
adc
jg
lods
lock
xor
cmpsb
dec
push
pop
pop
call
aam
jp
dec
or
lea
addb
mov
push
lock
inc
sti
mov
pop
mov
cmp
jl
pop
mov
rcl
int
arpl
testb
jg
imul
fidivs
mov
xor
fisubl
lods
mov
scas
fcmove
aam
ljmp
push
cmp
dec
add
or
sbb
aad
mov
push
mov
push
arpl
xchg
cli
cmpsl
shlb
out
mov
sub
sbb
inc
mov
sbb
jl
sbb
mov
mov
pop
mov
and
sbb
adc
fstpt
jno
sub
xor
and
rorb
out
sub
loope
push
cmpsb
stc
sub
outsl
jge
push
notl
mov
shrl
or
cmp
mov
clc
shrd
loope
mov
mov
or
fs
adc
adc
cld
js
jmp
or
push
dec
cmp
jnp
mov
dec
nop
hlt
popa
nop
and
jmp
dec
cmpsl
test
fisubrl
jbe
push
or
jle
test
bound
orb
xchg
push
adc
insl
aas
pop
outsb
sbb
ss
in
pop
mov
add
mov
lret
mov
cs
mov
icebp
loope
or
addl
mov
std
xor
cld
std
mov
stc
inc
in
pop
inc
fcmovu
jmp
fs
and
mov
mov
inc
inc
mov
pop
mov
ret
pop
fstpt
aas
jl
push
stos
es
jl
mov
aam
dec
jl
pop
mov
scas
roll
cmp
xor
pop
cmp
inc
stos
mov
in
fiaddl
pop
scas
mov
add
adc
sub
jae
ljmp
das
gs
push
jae
add
sub
pop
xchg
bound
xchg
into
jg
dec
cwtl
push
imul
push
movsl
jae
lret
sub
ss
push
mov
and
adc
pop
inc
mov
cli
mov
sar
inc
out
ficoml
subl
cmpsb
cmp
xchg
sahf
pusha
mov
push
inc
sarl
sbb
xchg
jns
pusha
test
add
out
and
ret
into
fadds
jne
dec
in
xor
mov
fcmovnbe
pop
mov
pop
mov
stos
push
jp
add
and
decl
or
jl
xor
or
lock
ja
test
ljmp
mov
faddp
ret
xchg
nop
xorb
rcrl
add
dec
stc
adc
ror
pusha
sarb
jp
xchg
cmp
jmp
ret
daa
dec
dec
sbb
aas
push
scas
es
lods
and
xchg
or
jnp
rorl
push
add
ss
mov
mov
mov
pop
int3
dec
hlt
xchg
fsubr
andb
push
cltd
cmp
lcall
pusha
sub
mov
inc
jnp
sbb
and
loopne
dec
imul
push
or
js
add
gs
lods
ds
shr
movsb
or
leave
mov
xchg
sub
clc
stos
sbb
pushf
lcall
pop
lock
popf
lods
aaa
fistl
loope
xchg
cmp
mov
xor
mov
movsb
idivl
mov
out
dec
scas
push
sub
sahf
or
scas
js
cmpl
lds
in
push
inc
ljmp
loope
das
movsb
mov
push
xchg
loop
jnp
adc
jp
add
lea
and
sbb
push
mov
xchg
cs
scas
pusha
movsl
js
sbb
inc
inc
dec
pop
cmp
out
mov
fcomi
dec
sub
jecxz
pushf
stos
pop
dec
fyl2x
dec
jle
lcall
imul
fst
adc
push
or
jg
lcall
repnz
sbb
dec
jmp
mov
or
pop
mov
sub
mov
add
rcr
xor
loopne
in
jo
clc
and
pop
or
cmovno
mov
mov
std
jo
aad
and
xlat
call
lahf
add
xor
pushf
les
and
sti
int3
loope
push
mov
mov
inc
add
cli
or
jle
push
mov
push
mov
sbb
or
andb
cli
arpl
lods
mov
sub
aam
stos
jle
sub
mov
jbe
cmc
imul
fwait
popa
cmp
mov
jbe
push
jle
mov
mov
scas
test
stc
fst
lahf
xchg
xor
sub
xchg
mov
dec
je
fiaddl
pop
aam
sbb
std
movsl
nop
mov
imul
pmuludq
cwtl
pop
sub
call
in
mov
inc
adc
sub
adc
div
add
push
rcrb
sub
out
je
pop
lock
sbb
adc
shr
sub
mov
xchg
inc
push
and
test
xchg
clc
cld
leave
shll
stc
mov
dec
mov
rorb
outsb
sbb
fldl
push
jo
pop
sbb
bound
call
cmp
std
sbb
mov
mov
subb
adc
cmp
popf
adc
and
sbb
cmc
testb
test
sub
adc
fucomi
loop
sub
jbe
les
sub
xor
pop
pop
dec
dec
scas
pop
cmc
mov
sub
imul
in
adc
rorb
in
popa
mov
outsl
or
int
jp
sub
or
jae
popf
cli
ljmp
xor
cmp
gs
xor
sbb
and
push
sbb
out
sbbb
outsb
cltd
incl
xchg
lods
push
cld
stos
jne
jb
xchg
xchg
decb
add
sbb
test
jmp
fiaddl
jno
inc
nop
pop
push
jb
std
or
ficompl
dec
sub
sub
or
fbld
dec
insb
inc
and
sbb
std
shl
xchg
pop
mov
inc
jnp
cld
adc
inc
mov
outsb
ljmp
and
stc
mov
xorb
mov
dec
push
rclb
inc
aad
or
cmp
mov
fs
push
negb
nop
mov
and
jg
pop
pop
mov
mov
sub
adc
and
jo
push
stos
push
mov
sbb
inc
adc
dec
mov
rcl
dec
sbb
fstl
push
xchg
xor
dec
idivl
stos
stos
repz
adc
adc
ja
mov
jne
pop
mov
pop
pop
pusha
clc
and
sub
push
wbinvd
sub
cmp
pushf
dec
pop
mov
push
mov
inc
int
fwait
cmp
aam
imul
ret
mov
add
jmp
imul
and
and
das
mov
aad
adc
clc
dec
mov
call
clc
gs
mov
mov
inc
fdiv
sti
pop
icebp
sub
cld
or
push
adc
mov
inc
mov
mov
int
stc
fisubl
jb
scas
in
jno
js
outsb
ja
ds
out
add
je
adc
nop
push
test
push
jbe
pop
mov
mov
dec
test
cli
loope
mov
les
loopne
loop
sbb
sbb
inc
xchg
fwait
popa
push
add
mov
cmp
pusha
std
call
cmpb
fistps
and
cmpsb
mov
add
lock
es
loope
xchg
push
test
xchg
jge
jns
jns
or
mov
xor
add
push
test
xor
movsb
or
mov
loope
pop
lock
push
jle
je
inc
int3
fimuls
fmuls
ja
fnclex
pop
lock
mov
xchg
add
jle
jecxz
sub
push
pop
insb
inc
inc
jno
subl
fidivrs
fcomps
rolb
mov
les
push
ds
sub
popl
jno
jecxz
sahf
lock
xor
movsl
add
cmp
movsl
xor
or
xor
into
roll
hlt
movsl
rcrb
add
xchg
insl
std
dec
mov
or
xor
push
in
sub
sub
mov
xlat
daa
jl
movsb
push
xchg
xor
mov
pop
aam
and
dec
jmp
inc
in
pop
in
xchg
xchg
aam
pop
and
and
in
loope
ret
mov
in
push
cld
mov
xchg
into
adc
mov
lahf
jp
in
add
add
mov
imul
je
cmpsb
pop
sub
adc
cld
divb
lock
pushf
sbb
inc
push
fistpl
lcall
shl
test
ss
pop
pop
aam
shl
add
pop
in
and
cmp
movaps
add
jo
sti
nop
mov
mov
mov
stc
pop
pop
incb
adc
repnz
lock
inc
adc
inc
test
xchg
jecxz
jne
std
cmpsl
cltd
pop
dec
or
add
dec
in
fdiv
cs
inc
lods
cmpxchg
out
cmp
mov
cli
outsl
add
jl
and
cmc
in
mov
std
jle
mov
pushf
pop
out
xchg
repz
dec
js
or
mov
mov
mov
cs
adcl
and
pop
sti
addr16
mov
mov
mov
bound
pop
dec
mov
dec
mov
xchg
aaa
adc
pop
mov
dec
push
add
daa
sub
leave
outsb
or
push
jg
cmp
das
cli
rcl
mov
aam
pushf
dec
mov
mov
sbb
test
mov
cltd
cmp
mov
imul
dec
lret
add
mov
dec
call
jg
sub
mov
or
sti
or
dec
jp
loopne
outsb
sbb
inc
in
mov
outsb
subl
dec
mov
shll
clc
fmull
test
mov
mov
fsubrp
arpl
add
das
sbb
insl
scas
pop
out
fists
inc
pop
jg
fisubrl
ljmp
in
movq
inc
jmp
xor
sbb
cmp
cmpsb
push
pop
lods
aad
push
fdivl
sub
lahf
fcoms
ret
jb
stc
and
jp
xchg
fldcw
and
sub
scas
mov
repz
fsub
fs
clc
pusha
push
loopne
and
or
into
pop
sub
es
inc
jle
sbb
mov
outsl
adc
test
mov
imul
fs
mov
or
dec
popa
and
addb
or
je
or
andb
outsl
xchg
push
mov
pop
and
jne
and
loope
adc
inc
sbb
ljmp
xchg
jne
jbe
loope
mov
dec
and
pop
sub
hlt
push
mov
repnz
lods
pop
stos
loopne
sub
cmp
or
dec
jl
ss
add
xchg
inc
cmp
xor
mov
xor
cld
call
in
loope
dec
xchg
sbb
pop
add
ret
xor
mov
dec
jb
xchg
loopne
inc
imul
test
insb
bswap
stos
movsl
mov
xchg
cmpsb
and
popa
mov
push
fucomip
xchg
pusha
push
movsb
aam
test
test
fsubp
sbb
ret
xor
iret
movsb
xor
mov
call
xor
push
lods
pop
xor
lock
insb
mov
addr16
orb
sbb
aad
jle
mov
dec
sub
testl
dec
cmpsb
daa
jp
fs
fisubrs
ds
adc
ja
push
aas
nop
jp
adc
es
stos
js
lahf
scas
xor
popf
mov
cmpsl
cmp
mov
cld
mov
push
cltd
fiaddl
imul
jmp
into
xor
mov
lods
fstl
test
adc
and
jns
cli
cmp
in
stos
out
outsb
jg
adc
and
inc
lods
lds
scas
inc
mov
stos
daa
loope
shll
addl
xchg
shr
clc
hlt
pop
rolb
jp
jmp
cmp
fwait
adc
cli
icebp
cmp
rcll
pop
inc
and
xlat
or
dec
inc
subb
mov
pop
cmp
bound
mov
jg
push
push
xchg
and
rcrb
xchg
xlat
push
inc
inc
stos
dec
aam
mov
cltd
jne
inc
xor
push
std
dec
inc
cmp
adc
push
cmp
jns
dec
outsl
xchg
dec
add
inc
mov
cld
movsb
and
roll
jle
cmp
mov
xor
mov
xchg
jmp
movsb
sbb
addl
pop
mov
adc
push
xchg
pop
dec
xchg
rolb
jge
jno
sarl
rolb
jo
je
inc
mov
test
in
xor
jge
rorb
negb
mov
jbe
cmc
push
pop
fiaddl
pop
outsb
push
mov
sbbb
adc
pushf
out
nop
cmp
sub
xchg
mov
mov
mov
int
inc
call
movsb
xchg
ret
adc
xchg
push
out
loope
cmc
fldcw
and
loopne
in
lahf
sub
mov
mov
pslld
adc
or
xchg
mov
sbb
mov
sbb
sbb
or
es
nop
cwtl
ljmp
xchg
inc
jg
push
outsl
add
cld
fisubs
cmp
mov
xchg
mov
mov
sbb
push
les
decl
mov
jmp
and
pushf
std
fmuls
stos
insb
ss
inc
dec
in
lret
add
xor
jl
incb
xchg
mov
mov
xlat
mov
push
mov
cld
mov
mov
out
cli
dec
imul
pop
ret
add
fsubrs
mov
mov
push
xchg
and
lods
je
inc
mov
pop
ficoms
xlat
nop
rcrb
xchg
cmp
jl
xchg
cmp
and
and
sbb
dec
test
dec
popf
das
rol
mov
cli
int3
xchg
inc
pusha
xor
movb
test
shlb
add
rcrl
mov
mov
in
cmp
xor
xchg
push
js
mov
adc
leave
clc
ja
clc
js
lock
mov
xor
sbb
mov
push
mov
dec
xor
loopne
gs
sahf
push
add
push
xchg
adc
mov
imul
jecxz
mov
sub
sahf
push
xchg
test
fistl
cmc
rcrl
ds
add
xchg
inc
jns
mov
and
lock
add
cs
dec
pop
or
repnz
adc
mov
add
xlat
stc
mov
shll
adc
mov
jecxz
push
dec
xchg
sub
jmp
adc
int
bound
rorb
outsl
push
cmp
orb
and
xor
inc
test
cmp
inc
rclb
shlb
sbb
mov
repz
add
jo
aaa
pop
dec
push
mov
and
mov
or
inc
test
mov
dec
sbbl
pop
icebp
and
test
test
lock
jge
sbb
cmp
es
sub
stos
arpl
jp
inc
mov
cmp
arpl
divl
mov
cmp
icebp
sub
lea
push
hlt
outsl
ds
mov
sbb
sbbl
inc
je
sub
fndisi(8087
fisttpll
mov
pushl
sub
cmpsl
outsb
add
lea
xor
adc
test
jo
outsb
jmp
push
inc
mov
lock
ret
aam
aad
arpl
xchg
mov
add
adc
push
imul
fsubrs
lcall
loopne
movsl
pop
mov
cmp
dec
movb
aam
push
sti
test
xor
fdivp
lcall
inc
jg
adc
lret
rcl
xchg
push
rorl
dec
test
xchg
jecxz
cmp
fwait
mov
and
push
mov
jle
int3
mov
movsb
add
aam
mov
xchg
xor
push
sarb
mov
lds
sti
js
nop
or
sub
ret
hlt
ljmp
dec
xchg
test
fistpll
and
add
push
push
lcall
inc
sub
adcl
lret
dec
sbb
adc
out
mov
shrb
cmpsb
push
inc
mov
mov
sub
cmp
jae
mov
xchg
jg
cmp
repz
mov
mov
pusha
or
rcll
ror
xor
sbb
or
imul
dec
xchg
xor
pop
cmp
sub
mov
pop
das
xor
stos
jl
pop
cld
sub
decb
movsl
bound
add
stos
cmp
inc
inc
sarl
cmp
adc
add
mov
mov
sbb
das
popa
mov
lods
jno
push
sbb
sub
pop
sbb
test
andb
cmp
mov
hlt
mov
xchg
fstl
adc
sub
lds
icebp
shlb
je
ret
call
dec
fiaddl
mov
movsb
mov
cmpsl
cmpl
call
xor
pop
sub
mov
gs
xchg
push
mov
mov
ds
sub
in
shr
mov
add
xchg
push
nop
inc
push
or
xor
add
inc
cmp
aam
jb
and
out
push
icebp
sbb
mov
clc
ret
in
add
insl
sbb
sub
cmc
pusha
sti
test
dec
mov
push
in
lods
ljmp
add
pop
jmp
cwtl
sub
pop
int
xchg
test
xor
cmpsb
je
call
in
punpckhbw
imul
lods
sbbb
adc
movsb
push
roll
stos
push
inc
sbb
xorl
cli
mov
gs
mov
test
jb
ret
fstl
pop
loop
std
popf
lret
jecxz
js
dec
mov
fdivrs
sub
cmpsl
inc
shl
add
pop
rcll
and
jle
jo
ret
dec
fbstp
call
cmp
sub
add
mov
push
inc
lds
arpl
cmpsb
mov
lret
fisubs
dec
mov
push
add
jl
xchg
add
out
in
ret
mov
test
pop
and
test
int3
sbbb
xchg
clc
mov
cli
add
enter
rorb
in
lods
outsb
pop
mov
fsts
testb
fiaddl
mov
stc
lcall
xchg
or
xchg
push
sbbl
pop
jl
jle
mov
mov
in
rcrb
push
std
cmp
or
xor
inc
sahf
lods
das
push
in
call
or
and
xor
jl
ficomps
cmp
and
adc
adc
sub
inc
add
lcall
jns
mov
jle
shll
dec
or
gs
stc
sbb
mov
xor
fnstsw
lahf
je
ljmp
scas
mov
inc
or
push
icebp
push
jg
mov
out
movsb
fidivl
lcall
aas
dec
adc
mov
mov
sub
add
stos
pop
lods
dec
aad
pushf
loopw
push
and
gs
mov
clc
shll
mov
jb
push
and
mov
ficompl
dec
pop
push
push
test
mov
mov
ret
xchg
lock
fistl
xchg
out
xchg
lods
or
aam
sub
test
dec
call
adc
sbb
in
or
inc
adc
lods
xor
dec
pop
xchg
shr
enter
adc
jo
jmp
dec
xor
jmp
adc
adc
mov
fbld
shlb
sbb
jl
fcmovnbe
and
outsl
cmp
gs
adc
cld
filds
mov
loopne
jbe
and
divl
hlt
mov
leave
movl
sbb
mov
cld
je
pusha
dec
jecxz
or
pop
in
add
lea
jne
into
shrl
and
adc
fldt
call
xor
mov
push
xchg
dec
bound
pop
push
cmp
mov
adc
push
loope
jecxz
sbb
add
xchg
mov
pop
cmp
inc
into
push
orb
cmp
orb
adc
jmp
jbe
or
adc
pop
mov
mov
mov
xlat
mov
sbb
push
ret
mov
or
jo
dec
ss
xchg
xor
js
pop
mov
push
call
aad
jecxz
pop
inc
jecxz
into
sub
sti
adc
xor
push
xor
jns
arpl
scas
and
std
pushf
cltd
or
mov
mov
cld
xchg
push
jecxz
jg
jle
rol
inc
data16
mov
add
inc
int
mov
cs
push
push
clc
cmp
push
sbb
xchg
push
aam
ror
icebp
dec
out
cmp
jle
outsl
adc
and
mov
adc
jmp
xor
adc
test
mov
ljmp
or
test
test
jge,pn
dec
add
adc
add
inc
mov
dec
cli
add
fnsave
mov
inc
mov
js
sub
clc
shrl
adc
cmp
mov
loopne
mov
fistl
sbb
test
stos
or
xor
mov
jl
enter
fisubl
test
mov
mov
xchg
adc
push
or
pop
icebp
mov
outsb
push
popf
dec
loopne
imul
and
pop
icebp
fcmove
popa
pushf
enter
xchg
sbb
shrb
icebp
mov
pop
inc
fdivrs
mov
or
or
shrl
xchg
mov
dec
test
aam
xor
pop
mov
xor
es
inc
adc
mov
loope
outsl
jns
outsb
cwtl
pop
and
lret
pop
push
aas
and
sub
shl
dec
hlt
dec
dec
popa
jno
inc
pop
lock
push
fistps
bound
sbb
test
popa
pop
ret
sub
push
mov
outsb
and
dec
rol
cmp
or
fnstenv
jmp
pop
nop
cltd
jmp
xchg
movsb
jge
inc
or
clc
loop
dec
insb
insb
pop
adc
and
sbb
xorb
xchg
test
fsubs
fisubs
pop
inc
cmp
pushf
subl
clc
mov
cli
and
add
jae
outsb
pushfw
dec
int
jle
or
and
in
subb
mov
fistpl
incb
test
and
jecxz
jle
loop
lcall
js
imul
jecxz
mov
adc
pop
in
adc
fsubs
pop
dec
inc
dec
dec
filds
jl
inc
out
or
orl
pop
fcomps
incl
adc
xchg
rolb
xchg
cwtl
adc
xchg
add
adc
pop
inc
repnz
mov
flds
mov
aas
xor
xchg
fiadds
cmp
xchg
jmp
int
jb
mov
dec
inc
pop
xor
into
jp
or
xor
pop
pop
loop
enter
jbe
push
imul
popf
movsb
testb
cli
cmc
cli
inc
adc
adc
lods
and
ret
or
or
out
mov
jecxz
jg
pop
add
mov
popa
rorl
xchg
icebp
les
div
fildll
cs
xchg
xchg
push
fs
ja
xchg
js
adc
nop
inc
pop
js
mov
into
and
sbb
loop
jmp
scas
jo
imul
push
cmc
push
and
mov
repnz
push
loopne
jecxz
dec
add
sub
aaa
push
sbb
inc
xor
hlt
outsb
and
dec
sub
nop
cwtl
mov
ficoml
insl
sbb
inc
sbb
and
in
mov
insb
loop
popa
int3
sti
das
test
out
lahf
test
sbb
stos
loop
xchg
dec
cmp
push
and
or
ficomps
aam
pop
jle
popl
sub
pop
ret
mov
inc
or
or
das
cmp
push
push
sbb
mov
dec
lret
sub
pop
roll
cwtl
dec
pop
hlt
cli
rcrb
cwtl
inc
cmp
outsl
jo
or
pop
repnz
repnz
loopne
lock
add
outsb
add
sbb
and
lret
add
jecxz
clc
test
mov
sub
loopne
mov
insb
iret
xor
test
push
cmp
push
push
stos
mov
fidivrs
mov
mov
push
push
fadd
pop
cmpb
movsb
subb
xchg
add
push
xchg
rorb
jno
add
loopne
sar
mov
stos
sub
cli
es
sub
shlb
or
jecxz
push
fnsave
push
xchg
stc
ss
loop
add
jae
aad
gs
out
xor
pop
add
test
hlt
mov
rorl
mov
pop
lock
cmpsb
inc
sub
lods
push
or
or
mov
xor
iret
mov
int
mov
ret
mov
push
sub
stos
dec
ss
scas
test
repnz
pop
js
mov
jb
std
subl
and
sahf
fs
add
mov
fwait
js
inc
add
sub
sub
stos
adc
xchg
cmc
push
sbb
out
xor
jmp
loopne
jg
roll
mov
pop
pushf
adc
out
out
lods
push
decb
data16
push
shrl
js
xchg
xchg
mov
arpl
xchg
and
dec
push
push
rcrb
cmpb
mov
movsb
fsubl
push
stc
inc
fldt
and
aad
cs
adc
fsubrs
es
fbld
mov
test
inc
mov
mov
add
push
and
mov
cmpsb
push
mov
or
jmp
mov
ret
xchg
cmp
mov
adc
pop
mov
mov
mov
sarb
movq
outsl
push
and
pushl
pop
imul
stc
add
out
jle
je
sbb
pushf
int3
and
adc
xchg
push
lcall
xchg
pop
sahf
fisttpl
mov
inc
test
push
jae
adc
scas
sbb
shrb
jns
jmp
insl
xor
sub
jp
std
daa
push
cld
push
nop
inc
push
mov
imul
sbb
rolb
mov
add
fwait
mov
pop
lods
out
test
mov
fidivs
or
push
ljmp
xchg
mov
pop
inc
popa
dec
xlat
aas
inc
add
sahf
sub
xchg
and
mov
std
pop
jp
iret
cs
scas
sub
push
inc
scas
xorl
push
stos
and
fiaddl
or
and
mov
adc
mov
dec
pushf
pusha
push
fisttpll
ja
jmp
and
lds
pop
jg
sbb
pop
arpl
xor
push
jmp
test
sbb
sbb
rorl
mov
inc
sbb
je
xchg
notl
or
es
push
sbb
pop
mov
pop
dec
pop
sub
mov
popl
jge
ljmp
aad
lock
jle
stos
sar
add
nop
adc
sar
mov
dec
adc
cmp
cmp
xchg
inc
roll
shrl
je
call
ja
dec
jnp
movntps
inc
ret
inc
pop
or
dec
lock
sbb
dec
loopne
xorb
mov
ljmp
lods
push
dec
js
movsl
mov
adc
inc
xor
mov
mov
pop
hlt
aad
cmpsl
inc
cli
or
mov
shrb
arpl
jbe
mov
test
push
in
cmp
call
adc
call
cmp
pop
jo
push
jno
and
aam
pop
shlb
or
inc
inc
outsl
clc
xchg
stos
pusha
adc
jle
lret
adc
push
js
cmp
mov
incl
jg
icebp
out
fs
lds
ffreep
push
stos
adc
stos
pop
insb
aaa
mov
jb
mov
loopne
aam
jle
dec
int3
cmpsl
mov
sahf
inc
sahf
or
and
push
add
jnp
push
adc
insb
mov
lods
cmp
cli
fldcw
outsl
mov
mov
shrl
jbe
or
mov
sub
movsb
dec
pop
loopne
jl
xchg
xor
icebp
jecxz
sub
jbe
aam
pop
jge
add
push
leave
push
pop
dec
clc
ds
iret
dec
adc
or
fsub
pop
adc
adc
jecxz
and
imul
xor
mov
add
cmp
mov
les
push
mov
in
xchg
rcrb
scas
dec
inc
imul
dec
and
pusha
mov
iret
fucomip
hlt
jnp
add
xlat
out
dec
dec
aaa
arpl
cmp
out
sbb
aaa
dec
shlb
scas
inc
loope
add
inc
cmp
shlb
sbb
add
add
xchg
call
and
orl
outsb
fdivr
sbb
pop
xor
lret
push
adc
stos
das
cwtl
les
dec
daa
push
mov
xchg
adc
imul
jo
outsl
add
or
out
mov
inc
sti
add
data16
outsl
adc
fwait
inc
loopne
xchg
push
mov
or
test
enter
sbb
cmp
push
cmp
mov
cltd
cmp
cmc
loopne
or
leave
outsb
and
lret
xchg
test
pop
pushf
cmp
sub
test
lods
in
sub
movsl
fstpt
mov
mov
fdivl
imul
shll
insb
outsb
cmp
mov
sbb
sbb
or
or
mov
leave
xchg
lock
repz
mov
xlat
xchg
mov
and
dec
cwtl
lea
lods
push
rolb
pop
and
or
pop
sbb
js
sbb
arpl
imulb
push
stos
cmpsl
cmp
hlt
repz
inc
mov
int3
imul
lods
vandps
fisttpl
or
mov
push
xchg
fs
insl
dec
adc
out
push
aad
outsb
xchg
mov
xor
add
iret
add
xor
and
orb
sub
cmpl
mov
push
aas
mov
sbb
dec
or
jmp
adc
gs
sbb
gs
test
pop
dec
push
add
ja
ss
divl
mov
pop
daa
jmp
jg
fadd
cmp
jle
ret
shr
and
addr16
loope
jecxz
jb
fistl
sub
jbe
mov
sbb
test
int
add
cmpsl
subl
call
add
mov
mov
out
sub
inc
cld
inc
stos
fsubl
mov
sarb
inc
test
cwtl
adc
ds
adc
or
inc
sarl
fildl
mov
pop
sbb
xchg
push
cmp
mov
insb
pusha
cs
inc
stos
inc
cmpsb
sub
mov
lcall
pop
ljmp
mov
test
dec
and
mov
rol
push
aam
jb
test
sar
sbb
loopne
inc
xlat
mov
insl
lods
in
or
sub
mov
mov
xor
mov
repnz
push
mov
sbb
cmp
ss
rolb
mov
data16
add
jmp
cmp
pop
inc
xor
mov
push
test
loope
dec
in
xor
pop
mov
pusha
scas
mov
cmc
or
cs
fwait
mov
cld
lret
fsubs
and
fidivl
sbb
rcl
inc
in
inc
call
pusha
xchg
or
xor
add
jl
ret
test
js
nop
in
adc
aas
jle
adc
cmpsb
cmpsb
pop
mov
pop
xlat
daa
test
stos
jge
cmp
cmpsl
mov
icebp
andb
stc
stos
fldl
and
sub
mov
dec
push
cmp
pop
pop
pop
sub
jp
cli
jno
call
jmp
in
dec
pop
aaa
dec
aas
xchg
mov
icebp
xchg
xchg
ljmp
cmp
div
jne
or
fcmovu
adc
ffreep
and
adc
jns
pop
jnp
clc
pop
lock
int3
or
or
push
inc
pusha
mov
lock
idivb
cltd
idivb
push
mov
gs
cmpsl
mov
cwtl
cmpsl
push
ss
mov
pop
inc
jae
pushf
fs
and
decl
cmp
lcall
call
pop
daa
pop
push
or
mov
and
clc
cmc
xchg
jmp
and
mov
jbe
sub
add
sbb
and
adc
sbb
xchg
test
cmp
loope
cmp
in
or
gs
cmpsl
inc
sbb
ja
mov
hlt
addr16
mov
mov
xchg
jge
mov
cmpb
xor
inc
shll
test
rorl
imul
addl
mov
aas
fisttpl
in
sbb
imul
adc
push
jb
inc
gs
cmp
cwtl
jp
cmpsb
jg
dec
sbb
jnp
clc
push
je
mov
icebp
inc
pop
cli
test
rolb
xor
xchg
push
adc
xor
stos
mov
clc
add
lds
in
test
lcall
xchg
ljmp
mov
xor
pop
fcoml
out
inc
sahf
mov
out
std
jp
add
ret
dec
sub
ds
movsb
adc
scas
cmpl
faddp
inc
fadd
xchg
and
mov
mov
inc
lcall
push
ds
fstpt
sub
lock
movb
arpl
cmp
xchg
stc
jecxz
dec
lahf
sub
mov
je
stc
popa
cs
rolb
lret
inc
das
loope
jp
leave
xor
lcall
mov
inc
lods
dec
enter
xor
jnp
push
xchg
roll
filds
mov
cmp
adc
or
sbb
sub
inc
mov
push
push
mov
mov
mov
jbe
leave
daa
cmp
out
jo
mov
dec
dec
insl
or
shr
dec
and
test
nop
mov
cld
adc
sti
xchg
push
pop
add
inc
cld
adcb
pop
fdiv
jo
push
hlt
pop
cmp
mov
stos
into
inc
xor
push
push
mov
jmp
aam
rcrb
scas
out
adc
movsb
dec
lea
rcr
in
xchg
insb
xor
add
mov
shll
and
fwait
aam
mov
add
xchg
xor
dec
insl
jno
mov
nop
pop
push
je
add
pushf
enter
insb
jae
lods
push
xchg
mov
mov
xchg
add
loopne
inc
dec
sub
rolb
shlb
addr16
orb
out
add
fwait
shll
pop
test
mov
or
insl
call
int
inc
xchg
push
mov
adc
add
dec
jbe
push
push
lret
clc
lods
cmp
push
xchg
stos
mov
outsl
and
pop
xlat
or
lret
js
bts
loop,pn
adc
inc
stc
dec
pop
or
int3
xchg
and
loope
xor
cld
orl
mov
inc
push
clc
and
or
lods
xchg
hlt
shll
test
dec
xor
loop
xorl
dec
dec
adc
fdivr
xchg
cld
pop
into
sbb
std
jnp
mov
neg
fiaddl
adc
mov
xchg
mov
fucomp
push
xor
movl
cwtl
jl
push
movsl
pushf
mov
push
loopne
ret
mov
and
outsb
xor
sub
cmc
inc
out
sub
daa
fistpl
cmovge
in
xchg
fs
cmpsb
or
inc
pop
leave
stos
lahf
adc
loope
push
stos
push
and
add
incl
mov
cmp
les
in
repnz
jmp
inc
sub
js
repz
xor
pop
mov
gs
cmpl
pop
lock
adc
jbe
inc
or
pop
fcmovbe
cwtl
mov
dec
push
sti
mov
call
loop
adcl
loop
mov
inc
jne
nop
pop
or
mov
ds
dec
mov
movsl
or
inc
add
icebp
in
pop
dec
pop
lods
test
add
push
xchg
cli
cmc
aas
rcll
sahf
push
mov
inc
sbb
push
sbb
mov
mov
faddp
sarb
insb
in
jp
mov
xchg
ss
clc
xlat
cli
sub
xlat
mov
cmp
push
dec
les
loop
jg
push
fdivrs
xor
mov
pop
mov
shlb
and
call
sub
pop
fwait
int
adc
loopne
ret
add
inc
rclb
cmpsl
sub
xchg
shrb
mov
pop
xchg
push
daa
aad
and
xchg
and
in
lock
inc
add
sti
mov
es
xorb
inc
push
sub
test
shlb
and
dec
ljmp
aam
xlat
add
out
cs
sahf
and
xchg
mov
inc
sub
xorb
jb
test
xchg
lds
fs
mov
pusha
xchg
ficoml
popf
push
shlb
ja
cwtl
inc
cmp
add
adc
nop
jno
mov
arpl
add
inc
sbbb
push
cld
jne
ss
call
jg
sahf
inc
or
std
xchg
cmp
loope
and
mov
jmp
sbb
test
pusha
lret
jp
in
dec
push
loop
das
xor
shlb
gs
or
rcrl
pop
cmp
xchg
xor
cwtl
repnz
pop
xor
or
xchg
cs
add
int3
fistpl
adc
fdiv
stos
insl
pop
movsb
xchg
push
scas
stc
sbb
add
call
sbb
push
test
pop
mov
out
pushf
imul
loopne
xchg
movsl
mov
xchg
rol
inc
or
lcall
xor
sub
incl
popa
mov
mov
movsb
add
or
fisubrs
or
lods
test
stos
ret
sub
stos
pusha
int
ret
mov
insl
adc
pop
jns
aas
mov
pop
push
daa
jecxz
pop
inc
and
lahf
and
stos
mov
pushl
adc
cmc
les
dec
mov
paddusw
ss
pop
aad
movsb
push
sub
push
aad
das
sbb
sbb
mov
add
mulb
or
test
xlat
ret
in
cmp
jns,pt
subb
imul
mov
mov
mov
xchg
cli
xchg
fisubs
push
movsb
test
pop
dec
pop
mov
cmp
push
pop
add
call
bound
popf
cmp
or
cli
je
dec
dec
pop
fdivr
or
jmp
jne
in
into
mov
ja
std
cltd
mov
lahf
loope
call
jle
mov
mov
xchg
push
pop
mov
loopne
jecxz
ret
pop
cwtl
xor
push
lret
push
lock
subl
fsubr
bound
or
push
lock
jo
or
leave
pop
std
mov
cmp
scas
mov
clc
or
jge
jg
push
add
fadds
xlat
clc
lcall
call
adc
push
push
addr16
mov
sbb
popf
roll
mov
xchg
int3
out
loop
inc
adc
inc
out
rol
in
jp
push
dec
adc
or
add
mov
sarb
loopne
and
adc
pop
adc
jecxz
scas
rol
sub
loope
andb
outsb
psrlq
add
jp
sub
insb
or
sarl
push
push
lock
pushf
adc
sbb
aas
sub
lods
jle
arpl
xchg
rclb
negl
xchg
jle
mov
add
fdivrs
fdivs
pop
in
inc
add
jg
push
or
pop
movsl
mov
dec
fisubs
pop
test
adc
cmp
and
or
faddp
dec
loop
and
cmp
push
jle
nop
lods
clc
add
and
xlat
cs
inc
arpl
jb
push
iret
inc
jnp
pusha
imul
adc
dec
in
jne
jno
xchg
stc
test
sbb
shl
jns
push
pop
addb
js
call
scas
jg
xchg
lods
push
fisttps
inc
sub
mov
jo
pop
lahf
mov
jno
and
push
sub
pop
mov
xor
adc
pop
cmp
sbb
lds
cmc
in
and
addl
adc
aas
or
imul
cmp
mov
iret
pushf
mov
cmpsb
pop
lret
fisttpll
dec
and
jbe
out
loopne,pn
shll
jbe
nop
push
mov
adc
jle
nop
cs
int
leave
gs
pushf
xchg
in
xor
faddl
jmp
sub
dec
jno
jo
mov
fsubrs
test
lock
inc
mov
popa
femms
das
sbb
enter
push
cmp
cmp
cli
mov
les
nop
test
ret
sti
adc
sbb
sahf
sub
clc
jne
pop
incl
push
and
sub
add
jcxz
inc
jge
sbb
into
adc
sub
mov
addr16
sub
and
xchg
mov
or
mov
adc
ss
int
int3
ljmp
cmp
cs
popf
cmc
ds
imul
and
nop
rep
sbb
clc
push
mov
das
hlt
mov
sub
cld
cltd
decl
aaa
stos
jb
push
or
icebp
mul
sub
js
popf
hlt
loopne
add
lds
cmp
outsb
xor
repz
add
jp
dec
jbe
mov
inc
loopne
adc
pop
jle
xor
loope
pusha
insb
cwtl
push
bound
bound
pop
sbbb
movsb
mov
orl
dec
xchg
add
in
jnp
icebp
push
xchg
adc
mov
push
inc
sarb
and
sub
dec
leave
test
es
ss
imul
mov
ret
addb
aaa
repnz
shll
sbb
pop
std
and
mov
lahf
xor
movsb
jne
rorl
pop
dec
lods
outsb
sbb
add
int3
les
nop
mov
pop
shrl
dec
and
xor
cwtl
cltd
pusha
daa
dec
jne
mov
cmp
movsb
jo
jo
pop
test
or
loop
pusha
pop
inc
and
aas
outsl
jg
lahf
and
adc
xchg
jo
lret
nop
enter
pop
in
jecxz
and
das
xchg
mov
in
loop
cmp
sub
pop
rclb
xchg
stos
pop
xchg
rorl
gs
decl
lret
xchg
cmp
lds
mov
outsb
push
inc
stos
push
mov
lock
mov
mov
push
icebp
mov
mov
int3
push
int
pop
cld
and
inc
dec
loopne
pusha
sub
mov
inc
outsb
or
pop
mov
sub
xchg
inc
xchg
dec
cmc
push
gs
testb
inc
inc
sbbl
pop
sbb
mov
xchg
insl
lcall
sbb
cs
adc
add
mov
popa
push
ss
clc
divb
pop
pop
ret
jl
imul
inc
xor
pop
jne
add
push
or
pop
mov
mov
xor
jae
or
aaa
stos
cli
adc
sub
sub
xor
clc
mulb
sub
orb
xor
leave
aas
dec
or
icebp
std
adc
push
inc
cmc
mov
rorl
jmp
add
scas
dec
mov
xchg
fbld
lahf
mov
loop
and
jns
and
aaa
rol
jle
movsl
mov
mov
aas
jmp
push
xor
cmp
push
clc
stc
pushf
xchg
xlat
popf
inc
inc
enter
adc
lock
rcl
movsl
jg
sub
insl
jnp
fbld
lods
repz
add
mov
cmp
add
rorb
adc
divb
sti
adc
mov
iret
ror
add
test
mov
dec
cmp
das
nop
aaa
outsl
or
fdivl
dec
inc
insb
fstps
fistps
push
xchg
pusha
adc
andb
test
pop
push
js
mov
push
mov
mov
ret
icebp
sub
test
jge
aad
mov
adc
test
lds
popa
inc
in
je
and
decl
cmp
jge
icebp
xor
and
insl
lcall
mov
popa
fadds
inc
mov
add
add
add
cmp
pop
lcall
imul
xor
bound
loopne
stos
mov
xchg
dec
add
test
aam
scas
icebp
add
adc
mov
or
xor
inc
test
cs
es
xchg
cmc
shlb
divb
and
dec
push
dec
aad
push
dec
inc
pop
subb
lret
push
loope
icebp
lds
or
mov
jge
push
fdivp
mov
addr16
ret
repz
mov
fcoms
sbb
or
adc
ljmp
and
pusha
mov
xchg
dec
sahf
ss
add
loop
xchg
js
and
adc
sub
outsl
adc
mov
inc
pop
jbe
mov
les
insl
popa
dec
stos
or
int
flds
lcall
inc
mov
or
or
hlt
icebp
add
push
mov
sub
xchg
mov
int3
cld
cmc
jb
cmp
adc
in
add
outsl
xor
mov
sub
add
aam
adc
outsb
clc
push
fwait
ret
or
xor
mov
mov
adc
mov
jmp
inc
add
arpl
je
lea
mov
mov
pop
sub
sahf
cmp
fldenv
js
xor
pop
mov
or
call
inc
jmp
pusha
or
pop
adcb
cs
sbbb
and
add
xchg
dec
inc
add
push
push
add
inc
repz
jbe
mov
mov
in
sbb
mov
rcr
test
dec
loopne
aaa
mov
pop
add
loopne
push
pop
sbb
gs
ret
popf
push
pop
rcpps
jl
dec
in
seta
mov
inc
jl
pusha
jmp
push
lahf
dec
call
inc
push
enter
adc
or
mov
inc
xchg
add
stos
inc
or
cmpsl
push
jo
test
sbb
adc
outsl
sbb
mov
push
add
sbb
pop
inc
sbb
dec
shlb
movsl
push
push
mov
push
data16
fdiv
loopne
mov
test
pop
jno,pt
shll
dec
cmp
mov
jp
xchg
push
push
and
rcl
adc
data16
sbb
pop
rorb
mov
xchg
enter
pop
add
jno
bound
sbb
bound
push
cli
das
dec
inc
sbb
jae
cmpsb
ja
fwait
sub
push
mov
and
cs
adc
jnp
mov
inc
sbb
sti
fadd
adc
cmp
xchg
push
jb
pop
xorl
roll
sub
je
movsb
call
shlb
and
jp
xchg
mov
dec
lds
call
jg
mov
popa
leave
mov
inc
nop
push
lods
orb
mov
jno
jb
orb
add
sub
or
mov
jb
fists
pop
mov
mov
push
lods
les
xchg
aaa
push
jg
rcl
sub
loope
jg
lods
jge
xor
out
popl
scas
cmp
sub
mov
fdivrs
xchg
pop
push
sub
jmp
cld
push
int3
xor
movsl
or
cmp
or
cwtl
mov
cmpsb
jmp
mov
out
mov
add
push
push
sbb
cld
sbb
or
lods
lock
lret
pushf
bound
hlt
mov
aas
push
dec
and
cltd
fsts
push
push
jmp
sub
cmpsl
sbb
pop
push
js
adc
mov
mov
jp
jno
or
mov
cs
movsl
jmp
push
sbb
das
test
or
outsl
movsl
or
clc
repz
movlps
mov
inc
sbb
shrb
pushf
xchg
pop
cmp
sti
or
aad
or
mov
adc
push
js
add
pop
fsubrs
icebp
mov
inc
adc
push
mov
mov
fs
clc
add
mov
xor
pop
or
add
inc
out
mov
imul
inc
sbbb
push
nop
lock
adc
jle
xor
cmpsb
push
jno
push
or
cmp
jp
cmp
lret
mov
mov
cmp
jns
das
and
lods
ss
test
mov
mov
dec
rorl
push
mov
jle
sbb
inc
xor
inc
imul
jp
xchg
pushf
or
add
push
cmpsb
call
or
iret
sub
jg
call
dec
scas
and
sub
xchg
ret
xor
add
push
icebp
scas
xor
adc
dec
mov
addr16
std
insb
xchg
fbld
mov
jecxz
sbb
push
or
mov
pop
push
in
mov
mov
imul
pusha
sub
pop
js
lods
mov
rorl
jmp
in
push
pop
int3
dec
add
and
jecxz
sbb
loopne
loopne
lods
adc
bound
push
iret
test
dec
add
and
push
sbbl
xor
inc
js
out
mov
shll
subb
xorl
jnp
mov
pop
and
pop
mov
sbb
xchg
pop
lcall
pop
pop
mov
mov
sbb
xor
cmp
mov
loopne
push
adc
inc
adc
jnp
mov
loopne
sbb
orl
aaa
adc
adc
ja
push
roll
shll
outsl
push
jne
insb
add
pop
cmp
pop
pop
mov
repnz
ljmp
or
filds
jae,pn
cmp
inc
mov
arpl
ljmp
pop
cli
imul
dec
push
xchg
fldcw
inc
inc
or
add
fldt
ja
adc
test
fld1
out
add
pop
add
or
fdivrl
lahf
adc
inc
inc
sbb
test
xchg
lods
call
inc
adc
in
jl
lea
add
and
outsb
jns
ljmp
cmp
mov
dec
or
jecxz
cmp
xchg
and
ret
pusha
cwtl
data16
inc
cmp
or
mov
loope
scas
push
jne
stos
jnp
pusha
mov
imul
aas
or
dec
rol
add
out
jecxz
pop
pop
pop
sub
addr16
push
ret
inc
sub
outsb
loope
jne
jle
ficomps
jno
nop
push
lods
clc
pop
sub
sub
test
fdivp
xor
mov
push
mov
sub
push
sub
shl
or
mov
aas
outsl
cmp
mov
pusha
pop
fwait
sti
push
cli
xchg
cmp
mov
dec
dec
xor
bound
cs
pop
daa
sub
lods
mov
mov
jmp
loopne
clc
and
mov
jno
jle
jnp
hlt
insb
adc
lret
and
call
jo
mov
je
sbb
xchg
add
jns
fwait
cmpl
popa
jns
xchg
xor
sbb
in
jp
cmp
clc
loopne
mov
fwait
push
xor
andb
or
jbe
fwait
arpl
movsb
sahf
push
push
xor
and
stos
gs
sub
fcom
pop
sub
adc
cmp
sti
inc
arpl
mov
xchg
addb
out
add
mov
leave
cmp
pop
adc
or
ds
or
and
enter
adcb
or
js
fisubrl
dec
xor
lods
testb
push
dec
pushf
xor
lock
mov
xchg
xchg
inc
inc
jecxz
and
inc
mov
loopne
mov
cmp
mov
mull
inc
sbb
pushf
adc
shlb
add
jp
shlb
xchg
lods
loope
int3
cs
pop
inc
mov
in
mov
inc
or
xor
pop
dec
out
frstor
inc
imul
or
pop
mov
scas
ljmp
loop
sub
rolb
int
or
or
outsb
add
push
ds
pop
rcll
xchg
adcb
or
add
aaa
cmp
cmc
cli
adc
cli
lods
inc
imul
dec
das
xlat
emms
xor
cmp
inc
iret
dec
movsl
sbb
xchg
jmp
push
lcall
mov
popf
loop
inc
outsl
jl
sbb
adc
sub
jle
adc
es
inc
lock
pop
or
xor
pop
pop
rclb
push
lds
inc
cmp
imul
aam
jle
sub
jno
sbb
jl
stos
mov
inc
movsb
push
push
and
mov
dec
ret
ret
les
mov
ret
add
jb
sbb
inc
or
mov
xchg
lock
je
push
inc
sbbb
fdivrs
repz
inc
jnp
mov
push
jae
aas
cmp
and
movlps
mov
sub
faddl
dec
movsl
andb
dec
bound
push
push
pusha
rolb
xchg
add
test
pop
cltd
andl
shll
mov
insb
orb
push
aaa
fcoml
das
rolb
cmp
mov
aad
fwait
mov
scas
push
scas
lea
out
xchg
inc
rorl
orb
ljmp
dec
push
jl
sbb
push
pop
or
add
xchg
daa
outsb
cli
jb
scas
jb
outsb
sahf
jle
inc
bound
mov
enter
into
cli
pop
adc
iret
pmaddwd
xor
pop
das
and
ja
fcmovu
or
mov
jle
repnz
ret
jo
sbb
lret
adcb
les
push
xchg
pushf
fadd
or
es
xchg
sarl
pop
inc
insl
lret
lods
and
loopne
and
in
sbb
pop
or
testl
cld
int
sub
or
fisttps
cmp
nop
movsl
and
out
icebp
mov
pushl
pop
mov
sbb
push
fwait
in
inc
pushf
fmuls
dec
adc
or
movsb
push
cltd
ret
loope
imul
mov
inc
ret
insl
add
and
cmc
inc
into
addr16
movb
pop
sbb
dec
ds
and
mov
jle
xchg
testb
mov
inc
loopne
jecxz
dec
fwait
sub
cmp
imul
fiaddl
pushf
pop
scas
xor
inc
popf
jmp
add
sahf
and
add
enter
ja
rcr
das
adc
or
shl
das
stc
mov
in
movsl
or
div
or
subb
icebp
pop
lahf
nop
lcall
in
aaa
mov
xchg
push
mov
ret
adc
mov
cmpsb
daa
inc
adc
imul
cmp
push
mov
cmp
or
and
and
notb
dec
les
scas
adc
sub
sub
mov
pop
orl
push
lods
sarl
jns
getsec
xchg
add
lds
xchg
sbb
data16
fstpt
sub
aaa
xor
arpl
and
sbb
jmp
ss
or
xor
dec
outsl
andl
inc
aad
mov
idivl
int
pusha
imul
bound
jno
enter
enter
jge
dec
mov
cmpsl
call
xchg
pop
fs
xor
movsl
sub
imul
adc
pop
loopne
lret
addr16
sub
or
jbe
movb
adc
imul
notb
fwait
out
mov
shrl
jns
pop
pop
add
dec
insl
xchg
add
mov
mov
adc
dec
jmp
jnp
inc
lcall
js
push
clc
and
outsb
and
fcmovnb
daa
aaa
mov
ds
xor
dec
cmp
dec
mov
jnp
or
scas
mov
inc
repz
sbb
push
popf
xchg
imul
add
shrl
xchg
mov
outsl
sbb
push
and
lds
mulb
pop
cmp
scas
aas
es
hlt
and
sub
das
nop
movsl
jmp
mov
loopne
pop
push
and
pop
jp
adc
add
mov
dec
add
cmp
xchg
std
stc
mov
outsl
xlat
bndstx
lods
xchg
inc
ljmp
push
test
push
cmpsb
frstor
xor
fld
adc
rorl
inc
mov
jno
int
outsb
pusha
push
loopne
js
popf
scas
xchg
dec
mov
dec
adc
and
mov
out
and
loope
int
addr16
mov
cltd
loopne
call
add
adc
push
sub
mov
add
scas
shlb
mov
int
jmp
mov
arpl
push
fwait
loop
sub
out
lret
mov
jmp
loop
movsb
add
out
bound
sub
pop
mov
in
jmp
addr16
lods
xchg
pop
jge
loopne
sbb
inc
cltd
push
pop
sbb
xor
xchg
inc
add
sbb
iret
jg
cwtl
jmp
sub
ret
sbb
inc
sbb
jp
clc
insb
adc
in
je
cmc
adc
ret
inc
and
stos
cmp
sub
dec
mov
into
jbe
pop
shlb
lock
xlat
incb
xlat
inc
pop
push
cltd
addr16
mov
clc
pop
sahf
cs
in
sbb
xor
test
scas
das
xor
popf
adc
std
cmp
les
popa
out
sub
cmp
es
test
or
aam
mov
shll
imul
add
jo
mov
xchg
enter
out
mov
rcl
sub
pop
aaa
cltd
xchg
loopne
enter
ret
adc
pusha
stos
mov
addr16
and
fcmovbe
ficoml
xor
dec
dec
add
fiadds
jne
mov
sbb
hlt
add
mov
cmp
add
adc
test
inc
cli
pop
push
shlb
push
dec
sub
insl
xchg
mov
mov
and
lods
mov
mov
xchg
inc
outsl
inc
dec
sub
mov
or
pusha
add
lock
lahf
loopne
test
sti
push
cs
pop
adc
repnz
addl
inc
dec
xor
les
dec
popf
cmc
sbb
notl
adc
mov
cmp
pop
test
in
mov
jge
movsb
mov
pop
jnp
cli
sbb
mov
pop
andb
sbb
mov
inc
push
mov
jne
mov
aas
dec
pop
xchg
inc
pushf
ljmp
jle
cmp
popf
sbb
pop
loope
imul
sub
jmp
mov
push
lret
xor
xchg
test
adc
mov
mov
stc
cmc
outsl
push
cltd
jmp
adc
pusha
test
aas
notl
hlt
popa
sbb
inc
inc
cmpsl
testl
or
push
and
cmp
xor
jne
lods
jnp
and
loope
xchg
les
lcall
icebp
mov
test
fdivl
fwait
mov
add
sbb
cwtl
bound
call
movsl
fs
mov
test
push
pop
jecxz
cmp
sbb
xchg
and
push
ja
sub
loop
into
out
xchg
add
xor
push
or
pop
lods
xor
fldt
ds
cmp
lahf
into
mov
imul
xor
add
mov
and
insl
je
cmp
es
orb
sub
mov
sti
add
dec
cwtl
aad
mov
filds
inc
and
sbb
xchg
and
loope
iret
movsl
sahf
sub
dec
rorl
adc
push
roll
sbb
jmp
sbb
mov
aas
cmp
adc
push
sub
into
sar
sti
xchg
fadds
mov
sub
pop
add
sahf
movb
lahf
mov
or
cmp
rolb
add
push
lahf
sub
push
inc
sub
xchg
xchg
cwtl
dec
dec
bswap
inc
add
and
jmp
cmp
jle
cmpsb
andl
sbb
sbb
call
lcall
aas
iret
xchg
add
adc
mov
cmp
mov
adc
int3
or
mov
jno
popa
sbb
jmp
jnp
and
test
xor
mov
xchg
sub
stos
push
movsb
push
add
and
fisttpl
aam
bound
int3
test
int3
rolb
sarl
push
add
daa
pop
sbb
jle
paddusb
cmp
mov
sbbl
pop
loopne
int3
movsl
pop
jmp
pop
fbld
jns
and
push
clc
add
mov
popa
push
fldcw
sub
inc
movsl
loopne
cmpsb
rcr
gs
dec
mov
mov
test
popa
mov
cli
xor
cmp
mov
stc
cmp
bound
inc
inc
pop
shl
push
push
xchg
lcall
in
inc
loopne
cli
iret
hlt
push
push
push
aad
xchg
iret
inc
pop
loop
mov
jecxz
mov
aad
pushf
or
push
inc
cmpsb
sub
ret
or
add
inc
inc
push
sti
pop
cmpsl
adc
xchg
dec
or
pop
ficoml
sbb
sbb
lock
jae
inc
mov
in
clc
push
sub
cmp
cli
hlt
fwait
jge
xchg
pusha
dec
out
fisubl
lock
ret
add
loopne
in
push
cs
fdivp
leave
xchg
cmpsb
sub
or
sbb
cmp
gs
mov
fnsave
xor
loop,pt
mov
icebp
mov
nop
add
int3
mov
jno
std
mov
push
cmp
sub
adc
stos
gs
pop
dec
movl
scas
lahf
cmc
pop
icebp
xchg
inc
pop
adc
xor
nop
xlat
or
sub
fwait
adc
add
mov
pushf
xchg
cmp
or
fistpll
test
push
lcall
xor
test
sbb
jnp
push
sbb
stc
inc
adc
mov
sub
shrb
cmp
adc
loopne
imul
in
leave
adc
aam
stc
cwtl
and
cmc
inc
sbb
jp
pop
add
cmp
fwait
cltd
sbb
xchg
adc
nop
or
insb
rcr
mov
inc
push
popa
xor
imul
xchg
or
loope
es
xchg
cmpsb
pop
jp
xlat
mov
fists
fucomp
inc
add
lods
adc
push
and
testl
dec
lods
pop
cwtl
test
inc
inc
mov
dec
sub
cmpsl
cmp
aaa
aas
data16
loop
cli
cmc
mov
aaa
popf
xor
xchg
mov
test
dec
out
fistpll
lahf
mov
clc
adc
sbb
cs
int
cli
sbb
mov
pusha
out
jns
je
push
in
shll
push
punpckldq
pop
fsubrs
lret
mov
mov
fstpt
and
mov
sub
loope
mov
out
test
sub
leave
or
test
mov
outsb
dec
ljmp
je
add
add
and
sub
push
lods
push
sub
pop
pop
pop
xchg
mov
adc
orl
popa
cmp
mov
push
data16
xor
repz
mov
mov
jg
mov
out
sbb
pushf
fwait
adc
stc
xchg
test
xor
adc
jge
ret
fs
divb
pop
and
jle
mov
add
lods
loop
and
lahf
or
adc
data16
xchg
fdivrs
cmp
sub
roll
arpl
neg
push
aas
rol
add
cmp
push
or
inc
stos
ljmp
in
lods
sub
icebp
mov
inc
cs
icebp
xchg
es
push
lock
hlt
xchg
mov
dec
imul
and
popl
shrl
js
cmc
repz
sbb
push
xchg
cmp
jmp
scas
and
iret
pop
aam
or
popa
fidivrl
test
pop
shl
mov
adc
adc
fsts
xor
ds
jne
xchg
je
call
add
add
outsb
lods
add
shll
dec
sbb
aas
rclb
cmc
cmp
int
outsl
testl
leave
repnz
xlat
mov
sbb
jne
leave
xlat
pushf
lods
pop
mov
or
inc
mov
in
dec
es
int
ret
jns
mov
pop
test
mov
outsl
mov
shlb
adc
pop
js
xchg
outsb
mov
push
cltd
rol
scas
sbb
and
pop
clc
adc
test
jle
cli
push
das
fbld
xchg
cmp
stos
adc
mov
or
xchg
movsb
jecxz
pop
out
sahf
jge
and
adcl
pop
jg
addb
mov
scas
andb
popa
fsubl
daa
mov
pop
mov
in
sbb
add
ja
jmp
fcmovnb
or
jmp
sub
shlb
pop
xchg
and
insl
outsl
shrl
inc
movl
cwtl
mov
jo
cmp
mov
ljmp
push
shll
jmp
xor
add
sub
jnp
sahf
leave
mov
dec
lcall
nop
int3
fidivrs
mov
inc
push
jno
pushf
add
in
mov
cmpsb
das
js
mov
push
cld
in
repz
mov
dec
stos
fwait
jae
add
cmp
test
cmp
inc
inc
push
fsts
test
mov
add
push
mov
jecxz
movsb
hlt
sub
loope
inc
ror
lock
sbb
aas
cs
push
cmpsl
mov
mov
xchg
xor
push
xchg
cwtl
jp
xorl
push
out
add
or
pop
cmpsb
pop
xor
cmpl
xchg
or
inc
cmp
cmp
pop
jno
push
cmp
cmpsl
mov
scas
cmp
dec
xor
mov
adc
mov
jns
mov
inc
xorb
cmc
test
inc
sti
mov
mov
mov
daa
sbb
xchg
iret
xchg
das
lds
ret
sub
andl
jb
daa
push
ds
orb
xchg
mov
xorl
mov
adc
andb
and
xchg
inc
movsb
xchg
test
push
xchg
das
scas
jo
adc
cmp
xchg
jbe
rcrl
ds
int3
lahf
or
and
je
stos
sbb
iret
mov
xchg
and
mov
aad
incl
pop
insl
sbb
sahf
test
sbb
or
mov
hlt
fsub
aaa
cmpsl
cld
ljmp
test
inc
add
cwtl
or
jecxz
mov
push
push
call
ret
xor
inc
dec
xchg
sub
imul
dec
icebp
mov
pop
imul
test
je
outsb
and
dec
les
add
nop
imul
jle
sbb
stos
xor
push
push
popf
cmp
pop
mov
aaa
orl
inc
dec
lret
js
or
lods
pop
xchg
test
sti
push
sbb
pusha
xor
test
scas
popf
hlt
mov
mov
mov
loope
lock
mov
nop
mov
adc
adcb
or
icebp
aad
rclb
icebp
movsl
mov
scas
cmpsl
mov
xchg
in
sub
push
sbb
test
dec
sbb
adc
add
adc
in
hlt
in
mov
out
es
mov
fstpl
repnz
cwtl
xchg
scas
aam
popf
sub
push
mov
mov
bound
lahf
cmpsl
into
addl
rclb
and
test
pusha
popf
adc
das
stos
xchg
push
xor
sti
xchg
jno
mov
or
je
int
ljmp
ret
jge
jae
adc
loopne
sbb
aas
jns
mov
jno
mov
cmp
dec
adc
in
dec
push
pop
mov
add
test
das
xor
push
cltd
imul
xchg
inc
rorb
scas
fdivrs
enter
cmp
ret
cli
inc
das
jle
test
dec
das
lods
mov
mov
scas
xchg
fs
ss
cwtl
adc
cli
xchg
popf
pop
xlat
jge
xchg
mov
xor
mov
push
xor
in
mov
sub
cmpsb
cmp
mov
push
xor
scas
inc
fisubs
aad
mov
xor
inc
mov
xchg
inc
mov
pop
push
xchg
inc
js
sub
enter
mov
jmp
jae
out
cmp
hlt
add
sub
shll
std
push
sbb
call
out
mov
les
sbb
test
js
mov
ds
cmp
lar
data16
in
adcl
cltd
pusha
pop
stos
inc
aad
dec
jp
ret
dec
sub
or
negl
pop
lea
lea
inc
clc
push
sbbl
mov
cmp
movsb
xchg
jp
sub
or
test
mov
ljmp
ljmp
fs
cmp
xchg
xor
fcmovbe
pop
mov
clc
inc
arpl
adc
daa
and
roll
popa
in
je
inc
jno
add
cmpsl
jo
fwait
inc
and
or
sbb
rcrb
stos
cmpsb
push
mov
mov
aad
and
hlt
mov
mov
iret
push
xor
push
or
push
or
aad
addr16
in
xchg
or
aad
dec
js
adc
sub
icebp
push
jle
test
sub
mov
mov
xor
fwait
push
cmp
aad
or
pop
rolb
and
or
and
add
stos
fsts
stos
xbegin
xchg
xchg
jmp
int3
gs
scas
mov
arpl
mov
stos
mov
leave
add
pop
mov
lea
mov
aaa
pop
loopne
cmp
xchg
sub
enter
adc
mov
inc
addr16
icebp
cwtl
and
ret
adc
sub
push
inc
pusha
shll
loopne
mov
cwtl
ljmp
push
sbb
insl
pop
dec
sub
aam
pop
arpl
lods
pop
adcb
imul
in
lods
and
mulb
xchg
and
stos
sbb
jmp
orb
mov
jbe
loop
in
inc
int
jg
sub
push
and
mov
shrl
push
pop
push
sub
loop
test
cmp
in
repz
fldenv
inc
int
mov
push
movsb
sub
jbe
jns
sbb
or
les
insb
mov
in
and
cmp
fnsave
cmp
jns
xchg
xchg
cmp
and
std
sbb
mov
pushf
cmp
sbb
mov
sbb
cltd
pop
jge
add
rorb
jnp
xchg
push
aaa
sbb
mov
xor
subl
sbb
test
or
fnstsw
in
mov
out
push
and
outsb
cmp
pop
mov
mov
je
dec
fistl
es
and
xchg
outsl
cli
add
shrd
inc
pop
pop
mov
inc
dec
adcl
xchg
and
ret
adc
scas
pop
scas
das
lock
xchg
lods
out
je
xchg
fldl
ss
pop
scas
shl
incl
xor
dec
fucomip
lock
add
gs
ret
jp
xchg
or
xor
in
and
ja
add
lea
xchg
adcl
push
xchg
add
dec
adc
xchg
dec
fsubs
or
mov
dec
gs
scas
push
sbb
hlt
dec
shr
movsl
dec
or
sub
pop
jne
push
dec
ret
adc
cmp
or
push
test
xor
imul
push
add
cmp
imul
nop
mov
scas
mov
mov
cmp
xchg
dec
mov
cmc
inc
mov
inc
pop
or
je
xchg
stos
lret
int
dec
mov
mov
adc
in
mov
daa
jmp
xor
movsb
fdivl
ficoml
test
pushf
cltd
inc
jae
mov
jo
shr
in
fldcw
and
mov
stos
jl
xchg
dec
jns
inc
or
aam
arpl
dec
xor
mov
movsb
stos
in
daa
mov
cmp
xchg
ss
movsb
xorl
cmp
js
cmp
mov
in
and
hlt
aad
jne
sar
add
mov
push
or
in
fsts
addl
sbb
xor
add
ffree
and
adc
adc
jne
sbb
mov
mov
in
jg
xchg
and
icebp
das
or
mov
orl
dec
sbb
xchg
clc
inc
lds
push
ret
call
rol
fcmovu
xchg
ljmp
push
call
fs
push
push
int
scas
aas
lods
jg
adc
or
loop
inc
ljmp
inc
mov
push
fldt
xor
cld
and
inc
loop
cwtl
aas
push
sub
add
in
cmc
adc
orb
cmp
divb
mov
dec
mov
add
stc
lock
cmc
mov
xlat
mov
icebp
in
pop
mov
les
shll
fldl
jl
cltd
je
cs
stc
aam
out
imul
jne
cmp
and
aam
loopne
daa
mov
mov
test
cmpsb
and
ret
xchg
imul
push
leave
xchg
jge
jl
stos
gs
lea
jne
ffreep
inc
hlt
cmpsb
pop
add
loopne
push
dec
add
lea
jnp
in
cwtl
mov
push
and
js
loope
mov
ss
inc
in
add
mov
add
js
jecxz
inc
arpl
xchg
ss
add
rorb
iret
push
aam
inc
sub
faddl
inc
cs
imul
and
das
sahf
inc
mov
pop
aad
mov
test
push
push
popf
adc
les
push
add
or
pop
js
popa
pop
loope
mov
stos
sti
ja
adc
xor
mov
pop
pop
filds
or
cmc
push
arpl
sbb
subl
or
iret
enter
cmp
or
add
push
js
popa
pusha
cmp
popw
dec
pop
and
fs
sub
mov
addl
mov
in
adc
loop,pn
add
cmp
ficomps
or
push
mov
shll
sbb
ret
xchg
mov
or
mov
loopne
int
jne
test
cmpsb
pushf
or
js
ror
aas
outsl
inc
mov
mov
and
xchg
cwtl
cmp
push
pop
or
sub
lret
insb
lcall
inc
push
xchg
xor
jl
lret
xchg
popa
push
pushf
or
jno
movsb
or
cmp
imul
repnz
stos
shll
or
testl
ret
jb
xor
mov
add
in
test
cmp
or
das
lds
aaa
add
js
test
dec
cwtl
add
std
int
sbb
adc
rcrb
sahf
inc
mov
or
into
lds
fbld
inc
mov
jno
push
data16
adc
dec
adcl
fs
adc
lods
or
pop
rorl
cmp
dec
test
aas
xor
stos
lcall
add
add
add
sbb
mov
push
push
and
leave
sbb
mov
inc
or
out
lock
xor
inc
push
arpl
out
xor
das
mov
adc
and
in
sbb
cmp
or
insl
mov
in
xor
mov
aad
mov
lahf
and
push
cmpsb
shl
pop
xorb
xor
scas
pop
mov
ffree
icebp
loopne
xchg
aam
add
rorl
mov
mov
sub
sbb
jbe
clc
jns
or
mov
adcb
cmp
pop
lret
sub
pushf
pop
popl
lret
rorb
lods
scas
dec
pushf
sub
rcrl
inc
or
inc
fwait
sub
mov
xchg
inc
ret
dec
aas
dec
push
sbb
xlat
xchg
daa
aad
mov
sbb
iret
add
mov
pop
sub
xchg
les
shll
xchg
icebp
ret
es
xchg
mov
and
push
mov
sbb
xchg
js
sti
nop
les
pop
in
movsb
data16
or
rcl
sbb
out
adcl
mov
push
adc
cli
ds
pop
push
dec
insl
lea
test
mov
xchg
out
adc
test
rolb
hlt
dec
cmc
adc
cmp
bound
outsl
ja
pop
mov
popf
dec
jp
sub
outsb
jo
loopne
dec
and
in
sub
dec
mov
mov
fdivrl
or
cmp
and
test
or
movsl
mov
xchg
aas
das
cwtl
pusha
xor
cmc
jl
and
mov
stos
xorb
loopne
mov
ret
mov
scas
xor
or
sbb
daa
inc
mov
adc
rclb
insb
mov
sub
add
fsubs
test
pop
xor
jg
jmp
mov
test
jp
adc
aad
pop
out
add
imul
js
pop
in
dec
mov
js
xchg
jp
adc
inc
push
das
outsb
ds
pop
es
adc
mov
cltd
xor
push
push
cmpb
and
dec
fisubl
dec
nop
dec
outsb
or
scas
or
lods
adc
cmp
lock
aas
xor
lods
rcr
adc
mov
sti
or
lret
sbb
and
dec
out
push
add
scas
enter
in
daa
fmulp
inc
test
sarb
pusha
repnz
mov
lock
pop
cmp
mov
push
enter
test
addl
add
mov
call
adc
sub
into
dec
lret
out
sbb
cmc
dec
lcall
xchg
fiaddl
icebp
jecxz
ret
pusha
inc
sti
dec
jns
push
pop
lock
lcall
mov
and
and
int3
cwtl
gs
mov
mov
jge
bound
movsl
insl
cwtl
or
sahf
pop
jmp
push
or
or
add
mov
or
loope
not
xchg
inc
inc
jno
int3
sub
mov
push
cmpl
dec
add
pop
cmp
sti
mov
sahf
shlb
xlat
jge
or
push
xchg
pop
shrl
scas
insb
cmpsb
ss
and
cmp
lea
and
pop
xchg
mov
outsb
lds
fistps
out
xor
sub
xor
mov
adc
pushf
out
ret
xor
xchg
aaa
sbb
fldt
cmp
add
xchg
jnp
pop
fnstsw
loope
int
xchg
xchg
xchg
adc
jg
push
leave
cmovg
pop
mov
out
ret
adc
stos
and
lret
xor
fisttpl
sarl
out
bound
inc
mov
in
sbb
push
pop
loop
outsl
movsl
dec
fdivr
imul
xorb
cli
ret
xor
pop
mov
mov
sub
dec
fsubrl
or
mov
aas
xchg
and
push
inc
test
mov
inc
pop
push
lahf
or
sub
mov
sbb
mov
and
fistpll
hlt
fcmovb
popf
ret
jae
push
mov
lods
push
sbb
jg
mov
jge
pop
cmp
sub
movhps
pop
jge
sbb
xor
sub
loope
insl
stos
inc
daa
dec
ss
ret
retw
mov
icebp
or
sub
lahf
sub
inc
in
mov
fsts
nop
ret
shlb
mov
aaa
cmp
mull
cmp
add
and
xor
jno
push
test
and
pop
out
es
jle
and
std
jo
pop
push
xchg
mov
mov
sub
in
movsb
sbb
mov
sti
cmp
lcall
mov
dec
add
in
mov
dec
mov
sbb
add
pop
les
push
iret
cld
jecxz
xchg
push
nop
jp
out
sub
xchg
add
sbb
xor
adc
lds
int3
xor
mov
add
cli
xor
test
xchg
movsb
call
add
push
and
jmp
pusha
jb
test
fwait
cmpsb
push
sarl
adc
test
push
sbb
subl
incb
or
and
add
pushf
mov
lds
leave
call
cmp
bound
insl
sbb
or
jno
mov
mov
ds
xchg
pop
in
cmc
outsb
movsl
lock
jb
mov
pop
pop
pop
sub
js
or
jno
sub
rol
cli
cmpb
mov
stos
inc
imul
lds
dec
cmp
fldenv
dec
out
es
mov
jmp
nop
dec
sbb
mov
sbb
int
negl
push
data16
mov
or
inc
ja
sarb
xchg
loopne
or
outsb
mov
sbb
cmp
xchg
lock
sbb
pop
jg
cwtl
or
inc
arpl
xchg
sti
and
in
jp
push
sarl
gs
xor
pop
inc
loope
roll
int
loopne
cli
push
or
lods
fadds
mov
imul
movsl
scas
sahf
scas
sti
mov
loopne
mov
addr16
sbb
cmp
insl
or
cs
sub
xchg
out
pop
adc
jae
test
xchg
repz
add
imul
cmc
clc
jg
pop
fstpt
mov
dec
aaa
pop
jb
hlt
pop
pop
aaa
icebp
sub
adc
addr16
xor
enter
xor
test
ljmp
hlt
xchg
fldl
scas
or
or
add
mov
mov
mov
loopne
mov
sub
pop
sbb
mov
lcall
gs
rclb
add
cs
shlb
int3
scas
lods
pop
test
lahf
sbb
jne
mov
mov
adc
xorb
adcl
icebp
fwait
push
or
rol
or
dec
pop
pop
dec
int3
test
pop
sub
or
dec
lods
fwait
movntq
cmp
lahf
lock
test
pop
or
lea
mov
pop
mov
xchg
xlat
push
stos
lds
push
stc
flds
popa
lret
xchg
hlt
mov
scas
sbbl
flds
rclb
cmp
push
jecxz
rcrb
add
and
mov
movsb
jmp
jge
rorb
jmp
mov
hlt
mov
pop
sub
jne
jb
lret
rolb
jne
or
mov
mov
and
jnp
inc
int
dec
cmp
xlat
imul
cs
fadds
sub
subb
xor
testl
add
mov
movsl
inc
js
inc
rcrb
int
adc
adc
mov
dec
jno
add
ret
add
mov
sub
gs
xchg
or
push
xor
dec
std
inc
dec
add
jmp
jmp
push
xchg
aaa
out
jne
out
pop
out
push
jb
out
sbb
inc
push
sub
sub
or
nop
push
in
jnp
test
lods
cmp
inc
int3
xchg
imul
jmp
pop
mov
sarl
xchg
xchg
loopne
pop
stos
jb
mov
int
lods
fistps
lahf
adc
push
sub
mov
mov
lock
imul
dec
mov
fucomi
sarl
in
xor
jo
push
mov
les
cld
nop
loope
scas
inc
mov
xchg
orl
pop
jo
mov
rorl
cmp
stos
and
mov
inc
add
sbb
jno
pop
push
pop
mov
add
mov
mov
xor
cmp
out
sub
fs
push
mov
les
xchg
stos
adc
jp
scas
adc
outsb
loope
pusha
dec
jno
mov
pusha
dec
mov
movsl
pop
cmp
testl
call
pop
cli
push
mov
jne
pop
add
xor
mov
popf
out
out
mov
inc
loope
adc
fadd
dec
fsubr
pop
push
orb
add
mov
fiaddl
clc
dec
inc
loopne
or
dec
push
xor
and
cmp
mov
inc
push
daa
pop
lret
arpl
dec
rorb
movsl
cmp
pop
xchg
das
jp
and
jb
inc
sub
imul
leave
sahf
push
mov
jl
pop
popf
xor
rclb
sub
in
push
fists
mov
jb,pn
jmp
arpl
jmp
shlb
sbb
cmpsl
xchg
mov
mov
jl
sbb
adc
pop
pushl
pop
cltd
xlat
lods
push
push
imul
outsb
and
and
sbb
fs
stos
adc
int3
jne
sub
and
pop
vmwrite
xchg
lahf
dec
arpl
sahf
sub
clc
sub
dec
inc
xchg
xchg
jno
nop
and
mov
cmp
rcrb
in
or
lea
nop
xchg
fildll
rcrl
jne
sbb
int3
add
icebp
rclb
mov
dec
jg
adc
cwtl
loopne
jmp
pop
adc
dec
dec
inc
rolb
enter
sub
mov
inc
les
pop
mov
sbb
or
pop
xchg
xor
push
sub
sub
movsl
bound
dec
lds
jecxz
loop
aam
pop
movsl
sbb
je
jge
push
sets
cmp
pusha
jl
push
dec
xchg
and
popl
xor
adc
push
es
and
push
inc
mov
pop
jae
dec
lret
push
adc
hlt
repz
pop
add
dec
mov
sub
pop
sbb
mov
jp
icebp
add
jl
cmp
cmpsb
adc
pop
outsl
mov
add
insb
inc
dec
cmp
push
loope
sti
shr
lea
outsb
rclb
sbb
aam
sub
mov
dec
fs
pop
dec
les
scas
in
sbb
adc
pop
mov
mov
call
adc
sbb
notb
xor
mov
xor
mov
fwait
cmpsl
cmp
xchg
data16
push
pop
and
aas
mov
ret
push
stos
pop
xchg
fsubl
lods
xor
clc
xor
hlt
lock
addr16
xchg
in
cmp
cwtl
push
les
iret
jmp
ja
push
jae
mov
xchg
test
aam
xchg
and
or
cmp
inc
cld
push
sbb
ss
inc
dec
sbb
nop
pusha
pop
mov
mov
popa
pop
in
lea
xor
push
jmp
arpl
fwait
cmc
jae
dec
xchg
lock
push
mov
rcl
mov
pop
push
push
mov
bound
xlat
repnz
imul
cmp
les
xor
rorb
je
sub
repnz
flds
pop
jbe
mov
divl
inc
xchg
xchg
mov
pop
dec
xchg
inc
cmp
int3
sbb
adcl
xor
sub
sub
cmp
or
mov
fmuls
jo
outsl
mov
dec
cmpsl
pop
dec
jge
scas
push
sbb
xchg
lret
or
mov
sub
add
jbe
add
sub
sbb
jmp
test
or
mov
fcmovnu
subl
dec
rdtsc
hlt
lret
mov
std
subl
fadds
test
aas
xor
lods
movsl
pop
in
ret
sbb
sbb
xor
sbb
inc
fbld
jbe
stc
pushf
stc
rclb
dec
or
shrb
pusha
sub
je
pushf
inc
sbb
pop
test
mov
les
aad
and
inc
jbe
int
dec
jp
inc
mov
inc
push
rclb
call
jg
jns
mov
in
jo
cmc
cmp
rorb
pusha
jge
jo
movsb
xchg
stc
mov
inc
cmp
lahf
add
mov
push
push
icebp
push
xor
sbbl
push
jno
mov
push
into
and
jecxz
lea
inc
clc
push
sahf
popf
in
pop
jae
inc
mov
lcall
fs
pop
xchg
inc
sbb
lahf
xchg
out
clc
xor
pushf
cwtl
xor
pop
fcomps
dec
fnstenv
cmpsl
andl
fstpl
clc
and
out
pushf
outsl
loopne
cli
lds
ljmp
xor
ja
cltd
dec
pop
movsl
jns
mov
push
ljmp
pop
outsl
jl,pt
sarl
std
push
cwtl
mov
xchg
pop
test
call
fcmovbe
adc
cli
popa
add
icebp
inc
lock
sbb
or
dec
aaa
add
fisubl
xor
mov
cmp
or
mov
push
cld
decl
push
xor
fwait
or
sub
insb
xor
test
sub
dec
pop
sti
pushf
mov
fldl
setp
out
jp
loope
xchg
cmp
add
add
mov
mov
cmp
pushf
fnstsw
arpl
imul
and
das
dec
xorb
test
push
loopne
dec
push
jge
shrl
enter
nop
f2xm1
iret
dec
pop
loop
pop
adc
or
loopne
push
add
pop
das
xor
fidivrs
or
lahf
dec
mov
mov
pop
les
xchg
sbb
mov
xchg
ret
xchg
test
push
pushf
lcall
or
inc
or
mov
xchg
int3
add
out
push
sbb
or
jo
loopne
adcl
inc
xorb
ficompl
dec
sub
inc
aad
ljmp
cmp
lahf
dec
pop
add
js
sbb
adc
sbbl
aas
sub
mov
jbe
mov
or
rcrl
dec
dec
mov
sub
dec
mov
adc
mov
add
sub
cs
or
movsl
jns
fnstsw
pop
and
loope
add
jbe
xor
mov
aad
xchg
mov
jp
int
cmpsb
add
cmp
sub
ror
jge
jg
sahf
arpl
sbb
adc
mov
lock
add
dec
call
xchg
inc
popa
sbb
addr16
inc
sbb
mov
shlb
jb
adc
test
cmp
adcl
or
shlb
dec
mov
xor
ret
loopne
push
mov
add
loopne
fs
and
icebp
mov
xor
popa
mov
sti
add
push
mov
push
mov
inc
sbb
mov
adc
insb
sbb
in
lods
push
add
mov
inc
out
mov
rcl
cli
mov
fcomi
mov
mov
dec
test
and
jmp
add
in
push
add
aas
mov
cmp
aam
inc
jmp
sarb
and
xor
push
ja
mov
mov
mov
loopne
xchg
inc
or
pop
cmc
loopne
sub
dec
repnz
scas
push
pusha
mov
cmp
addr16
mov
jle
gs
fisttpll
clc
mov
push
push
adc
mov
dec
cmp
or
je
xchg
jl
or
push
imul
sti
jo
adc
test
sbb
adc
loope
scas
pop
imul
pop
sbb
mov
out
mov
daa
pop
ljmp
mov
or
dec
ss
jb
mov
insl
push
jge
dec
pusha
lret
scas
adc
adc
xchg
xor
adc
lret
jb
mov
mov
dec
cld
and
cs
gs
xor
pop
xor
call
lock
movsb
int
add
outsb
xchg
out
or
js
cmp
lcall
mov
je
sarl
rorl
adc
lret
or
inc
fiaddl
adc
push
mov
jo
and
leave
push
jmp
push
loop
mov
sar
lahf
sub
out
add
movsb
pusha
call
jmp
les
addb
cmp
fldl2e
xchg
adc
sahf
test
and
je
test
push
ret
mov
mov
add
mov
dec
adc
or
wrmsr
ret
pop
sti
add
mov
dec
mov
mov
jb
and
test
lds
das
decb
and
push
jmp
dec
cltd
fbld
outsb
push
mov
lods
pop
pop
inc
fwait
mov
mov
hlt
mov
pushf
add
int3
cld
pop
mov
sbb
inc
fcoml
paddb
mov
mull
adc
test
fisttps
fcomi
pushf
mov
pop
jo
mov
jle
sub
inc
push
sbb
mov
cwtl
push
adc
jg
push
sbb
outsb
adc
dec
or
mov
mov
mov
sbb
add
dec
xchg
mov
js
pop
jae
lea
inc
insl
mov
inc
mov
xor
mov
mov
fs
push
lret
push
and
int
ret
les
xor
aam
or
ds
sub
dec
ficompl
sbb
cld
nop
lds
jp
pop
lock
mov
pop
repz
add
fs
mov
push
pop
sarb
hlt
xor
adc
arpl
dec
cmp
sub
push
or
and
mov
xchg
fwait
call
je
hlt
dec
adc
out
adc
int
cwtl
movsl
mov
hlt
xchg
ljmp
out
sahf
adcl
mov
lods
rorb
sub
jmp
mov
aad
mov
mov
movsl
mov
enter
movl
mov
xor
or
mov
push
lea
movsb
sbb
movl
jae
lret
jns
clc
xor
cmp
sbb
mov
ss
lahf
ret
and
pop
sbb
xorl
mov
push
inc
sub
mov
shrb
sahf
mov
mov
jne
jp
xchg
lock
push
and
xchg
mov
dec
xchg
cmpsb
cmp
lahf
jg
mov
push
cmpsl
enter
andl
dec
loope
xchg
push
mov
lods
scas
movsb
mov
lea
ret
or
adc
xchg
lock
adc
mov
xchg
inc
sub
inc
mov
cld
push
push
push
mov
cmp
stos
mov
das
fnstcw
lock
data16
loop
mov
icebp
pop
arpl
dec
lret
sarl
inc
iret
pop
and
das
mov
jno
lret
inc
stos
xor
jg
push
mov
ljmp
adc
cwtl
fdivs
ficoml
mov
dec
sbb
jmp
divb
clc
cmp
sub
std
xor
mov
fimull
or
push
js
pop
sub
adc
aas
dec
lcall
xchg
pop
pop
test
sub
and
clc
xor
jg
mov
mov
ss
loope
jp
and
push
mov
mov
mov
call
or
inc
dec
xchg
push
dec
je
orl
loopne
add
xchg
dec
std
dec
jecxz
cmp
mov
outsl
data16
adc
jp
adc
pop
mul
pop
or
sub
addl
repz
je
xor
cmp
jo
dec
or
pop
lds
and
and
mov
popl
lock
pop
dec
sub
sub
cmpb
loop
scas
inc
pop
popa
shlb
std
adc
adc
mov
and
inc
sbb
mov
fimull
dec
xchg
mov
sub
dec
add
outsb
mov
adc
jg
sbbl
addr16
enter
mov
jbe
xchg
loopne
outsl
xlat
cmp
in
inc
out
inc
je
test
out
xor
xchg
stos
mov
sbbb
mov
cs
add
push
dec
leave
adc
jecxz
xor
xchg
loop
adc
sub
nop
cmc
std
xor
xor
push
dec
clc
cli
xor
loopne
pop
xchg
pushf
ret
ds
sbb
or
std
inc
xor
sahf
cmp
bound
pop
cli
test
iret
dec
cmc
rcr
out
sti
mov
dec
xchg
jnp
or
js
ss
lods
js
sub
xor
cmpsb
pop
dec
ja
inc
push
adc
inc
shrb
es
adc
add
lods
push
mov
mov
jb
xor
sub
sub
jg
inc
xor
cmpsl
pop
add
pop
repnz
stos
pusha
stos
je
mov
ja
pop
inc
and
movsl
push
les
jmp
out
adc
cltd
pushf
mov
aaa
sbb
pusha
xor
jle
ss
hlt
xchg
pusha
sbb
push
jecxz
lock
je
pop
dec
stos
in
dec
mov
push
into
xchg
int3
test
pusha
mov
ss
or
jae
fadd
aam
gs
cmpsb
sahf
pop
mov
cmc
fisttpl
xchg
lods
ja
jp
stc
push
add
jbe
in
jl
stos
insl
pop
adc
and
and
test
adc
out
roll
xor
mov
or
dec
sar
push
rorl
mov
xorb
aam
scas
pop
add
clc
dec
pop
ja
orb
and
jnp
mov
aas
sahf
add
out
pop
push
sbb
dec
sbb
lea
out
adcl
test
inc
gs
cmp
push
aam
aam
lret
or
hlt
ja
adc
cmp
fisubrs
adc
pop
sbb
and
dec
shlb
sbb
in
mov
inc
dec
mov
sahf
or
add
adc
popa
fisubs
into
dec
sbb
pop
inc
sbb
sbb
mov
pop
sahf
aas
mov
loope
jg
mov
mov
jge
or
or
mov
stos
and
int3
add
sub
sarl
inc
add
mov
sarl
out
xchg
xlat
fs
gs
paddd
mov
mov
in
repz
push
jb
pop
xchg
jo
or
out
inc
int3
pop
fmull
iret
cmp
push
dec
pusha
inc
adc
sub
add
outsb
mov
and
cmpb
jne
mov
rorb
lock
push
mov
sub
mov
lcall
dec
ror
jo
pop
pop
add
leave
mov
leave
and
push
inc
jg
test
rcl
adc
xor
pop
inc
xchg
add
xor
ja
add
js
iret
cmp
bound
mov
in
jg
aad
push
std
cli
cltd
cs
loop
mov
pop
push
add
stos
pop
or
jae
stc
and
jge
lock
in
mov
jle
fisubl
push
mov
mov
xorb
jle
pop
iret
test
hlt
jmp
les
fldenv
out
or
push
xchg
mov
cmp
flds
into
add
sub
push
adc
pop
pop
pop
pop
iret
push
jnp
mov
je
jge
mov
mov
dec
std
lods
push
add
push
xchg
push
xor
lds
bound
xlat
and
push
mov
mov
push
xlat
adc
cmpb
pop
outsl
les
clc
push
adc
xchg
clc
sbb
testl
cmp
pop
and
shl
lods
push
mov
xchg
cltd
fcom
and
mov
pop
mov
push
cmpsl
sub
push
mov
test
negl
mov
clc
jno
or
in
fdivrp
sub
clc
shll
imull
inc
cs
lahf
ljmp
cmpsl
fistpl
insb
push
dec
adcb
dec
add
lea
xchg
cmc
addl
aaa
sbb
xor
pop
inc
and
scas
or
cltd
in
clc
xor
mov
aaa
sbb
out
or
fwait
dec
pushf
cli
add
dec
orl
pop
or
ret
push
jl
push
leave
push
out
inc
repnz
movsl
ds
bound
loop
mov
xchg
cmpl
pop
add
ljmp
jmp
dec
or
push
rcl
xchg
popa
mov
rcll
sbb
mov
lea
mov
and
lret
std
icebp
xchg
movsl
xor
xor
inc
pop
cmp
push
fbstp
pop
ds
jl
iret
notl
cld
sbb
and
stos
outsb
add
jle
scas
call
push
xchg
push
fs
and
js
jno
sub
push
jne
inc
push
xchg
adc
or
icebp
stos
je
fisubl
lsl
aam
testb
xchg
inc
adc
cmp
cmp
rolb
shrb
push
movsb
mov
fsubrl
fidivs
mov
inc
jbe
adc
dec
xor
test
popf
mov
and
imul
out
or
jns
push
adc
fidivs
pop
add
pop
nop
loopne
ljmp
loopne
repz
add
xor
dec
loopne
aam
push
xchg
cmp
or
inc
jmp
pop
push
stos
push
add
cmpsl
test
movhps
dec
jb
lret
pushf
mov
xchg
in
aas
mov
insl
dec
dec
push
insb
cmp
leave
mov
movsb
sub
xchg
xchg
pusha
xor
sub
js
pop
mov
aad
iret
pop
les
in
test
mov
or
jecxz
sbb
and
pop
or
cmc
pusha
test
mov
lcall
pop
push
fcoml
popa
mov
adc
mov
sbb
hlt
xor
dec
ss
push
cmpb
dec
lea
scas
cmpb
js
popf
aad
jg
ret
push
lahf
push
add
sarb
jo
cs
cmc
dec
insl
rcll
lea
out
pop
mov
mov
js
cli
cmpsb
xor
xchg
xchg
cmp
and
fstl
adc
sbb
or
xchg
insb
out
nop
in
cmp
scas
mov
loopne
sub
insl
cld
xor
test
sbb
dec
xor
lock
shll
int3
or
shrl
fimuls
push
add
pop
jle
mov
lcall
push
out
sahf
testl
cmpsb
into
clc
pushf
push
mov
dec
pop
mov
test
out
lock
loope
dec
add
inc
loope
pop
js
and
add
xor
call
xchg
fs
movsl
push
stos
mov
xchg
jbe
push
in
lock
push
push
xchg
aad
dec
or
xchg
cmc
and
ljmp
push
fcmovnbe
sub
cmp
icebp
jne
mov
and
cmpsb
cli
aam
inc
iret
and
test
add
addb
adc
leave
adc
xchg
dec
adc
hlt
mov
das
cmp
ficomps
xor
mov
mov
imul
sub
stos
push
dec
mov
ret
test
idiv
arpl
pusha
push
pop
push
out
xchg
sub
das
mov
shrb
xlat
sbbb
push
inc
repnz
icebp
inc
das
xor
call
mov
fidivs
clc
mov
mov
test
push
aad
add
shl
and
and
xchg
imul
dec
xchg
ret
adc
jb
jns
ret
jns
sbb
test
dec
mov
aad
adc
push
and
mov
fnstenv
pop
mov
pop
out
lods
out
loopne
adc
faddp
out
pop
out
mov
jne
orb
fbld
call
pushf
je
xor
sub
daa
gs
mov
popa
rorb
push
loopne
stc
add
adc
jge
cli
mov
pusha
cwtl
adc
les
stos
aam
aas
cli
pop
dec
push
push
daa
push
lock
and
cmc
inc
sbb
mov
lods
pop
loopne
xchg
nop
xor
imul
inc
cli
cmp
or
mov
test
daa
push
push
push
stos
mov
and
adc
scas
push
cmc
inc
ficompl
push
cwtl
jle
shrb
cld
vpsrad
outsb
jne
cmpsb
xchg
and
mov
inc
push
popl
repz
insl
clc
icebp
shll
mov
dec
cmp
cmp
cwtl
inc
sbb
xchg
enter
cmp
ret
dec
xor
inc
scas
ds
mov
iret
test
mov
in
inc
or
out
xor
dec
lahf
bound
push
push
cmp
icebp
add
movsl
scas
mov
into
loopne
jl
mov
andl
js
push
loop
mov
mov
mov
add
cmp
add
mov
mov
mov
dec
shll
jmp
insb
jge
pop
cmp
aaa
std
pop
mov
push
adc
jns
test
and
xchg
imul
cld
xor
sub
push
pop
mov
or
add
xor
xor
and
xor
mov
dec
pop
popf
xchg
cltd
sbb
push
popf
je
sub
out
xchg
adc
or
sub
pop
andl
vpmullw
loope
xchg
fwait
xor
inc
or
xor
mov
add
shlb
mov
mov
loope
leave
push
or
loopne
lea
pushf
pop
inc
lret
and
lret
jmp
loop
xchg
sbb
add
pusha
push
dec
out
sbb
jb
ss
xor
cmpsb
insb
mov
mov
push
sar
out
les
mov
and
inc
pop
mov
cmp
mov
push
std
rcl
hlt
fcomps
xor
inc
xor
xchg
dec
jo
sbb
rorl
push
test
cmp
addl
xlat
pop
mov
dec
movsb
andb
test
and
jno
sbbl
xchg
int3
pop
orl
out
mov
mov
ficompl
push
fdiv
jge
mov
jo
in
arpl
out
sbb
push
ljmp
nop
adc
ret
pop
mov
and
cmpsb
dec
sub
adc
loope
ds
mov
mov
call
mov
cmp
shr
sub
dec
or
push
loope
mov
cmp
loop
cld
frstor
adc
pop
inc
rcl
arpl
pop
dec
je
pop
enter
xchg
jo
loop
pop
adc
fimull
imul
add
mov
and
jb
lods
ja
xchg
pushf
outsl
xchg
imul
xchg
hlt
adc
adc
adcb
xchg
inc
add
sarb
push
inc
loop
insl
cmp
cwtl
lods
adc
jne
scas
add
cs
and
add
in
cmp
sub
popa
xchg
scas
sub
cmp
or
or
adc
cmp
out
popf
sbb
out
stos
rorb
jl
push
dec
and
fldenv
testb
cwtl
into
xor
testl
insb
test
push
mov
test
inc
jmp
in
push
adc
sbb
outsb
inc
mov
or
sbb
in
adc
scas
cltd
add
cld
and
sbb
pop
inc
xchg
jb
lret
ret
call
je
idivb
push
stos
add
cmp
cld
cwtl
push
sub
mov
push
sub
jne
or
or
mov
icebp
xchg
fists
adc
insb
push
mov
jne
lods
push
adc
adc
into
cld
int3
shr
popa
and
jo
aas
xor
pop
rolb
cld
mov
lret
cmp
add
aad
sbbb
mov
test
out
adc
xchg
pop
pop
divb
outsb
fsubs
dec
xor
adc
divl
jecxz
pop
xchg
cwtl
add
cld
pop
test
hlt
in
inc
inc
stc
or
jl
bound
test
sub
lret
pushl
xor
and
and
mov
mov
add
xchg
or
lock
push
lods
je
or
out
mov
sub
cmc
dec
fcoms
cmp
mov
cmp
clc
ljmp
loope
xchg
xor
into
iret
inc
mov
loope
add
in
xchg
sbb
rclb
mov
or
dec
push
cmp
push
nop
fistps
cmp
sahf
xchg
icebp
push
cmpsb
push
into
or
dec
cmpsl
test
lock
aas
sbb
adc
les
mov
je
outsl
outsl
arpl
js
add
or
mov
push
mov
dec
cld
arpl
cld
aas
ljmp
dec
xchg
loop
enter
jl
dec
mov
outsb
add
lock
jae
sub
xor
inc
orl
mov
leave
push
fs
popf
push
push
xchg
push
test
jmp
ret
in
js
jg
hlt
inc
and
dec
push
fcompl
ss
push
icebp
inc
mov
aas
subb
lods
mov
inc
aam
push
mov
pop
jl
fistl
lock
jg
int3
pop
push
sti
test
fbstp
mov
test
pusha
cmp
ret
or
add
mov
sbb
mov
adc
mov
jnp
or
push
inc
sahf
repz
add
and
outsb
and
inc
std
cs
rol
cmp
push
mov
lock
mov
aam
pop
scas
push
inc
call
mov
cs
pop
pop
mov
jo
xor
fisttpll
aas
mov
sub
and
dec
sbbb
mov
cld
ja
jp
sub
jno
imul
or
mov
adc
sub
and
cli
add
xor
inc
out
fs
inc
inc
lret
aaa
push
cli
lds
push
test
in
lcall
into
inc
xor
add
hlt
add
fsubrs
test
jo
jno
sbb
stos
ds
mov
cli
jbe
mov
dec
fstpl
jns
xchg
or
js
pop
inc
ret
mov
js
mov
dec
xchg
jl
out
test
push
daa
cli
mov
sahf
clc
fimull
in
xchg
in
ja
inc
pop
lret
adc
ds
les
stos
test
std
adc
fmul
ja
loope
xchg
mov
sub
std
sub
push
nop
stc
outsl
scas
js
fstpt
inc
dec
data16
adc
inc
push
outsb
mov
inc
bound
mov
push
lock
fistl
dec
int3
leave
sbb
mov
in
mov
insl
call
into
lods
or
pop
cs
or
push
pusha
cmpsb
stos
scas
adc
adc
pop
dec
sub
xor
hlt
add
mov
xor
adc
mov
fbld
lods
cmp
sub
mov
test
add
xchg
out
adcb
cmp
outsb
or
or
dec
sub
addl
sbb
fdivr
push
fldl
inc
sbb
sub
jge
fs
stos
inc
sbb
xchg
pop
subb
mov
icebp
fmuls
mov
sti
sub
mov
xchg
cmc
push
outsb
lahf
and
sub
repnz
movsb
inc
cld
je
andb
mov
or
dec
les
aas
pusha
push
loopne
lock
sarb
out
sub
mov
bound
nop
mov
je
pusha
push
mov
pop
jae
loop
adc
or
ret
and
inc
call
jmp
cmpsb
in
sti
lret
ret
xchg
mov
jo
js
loop
incb
xor
inc
push
add
ret
pop
in
dec
push
loop
dec
jnp
shrb
cmp
fnstcw
gs
daa
aas
ljmp
movsb
add
pop
fdiv
or
lcall
dec
rol
ret
scas
in
in
movsb
jb
cmp
lds
das
sarb
mov
pop
adc
cs
mov
lea
in
pop
test
testb
jne
jp
loope
cmp
sub
imul
les
and
inc
pop
or
repz
add
fcomi
jle
jle
sbb
or
mov
add
std
dec
fdivr
push
imul
adc
mov
lds
dec
sbb
incl
out
cmpsl
sahf
jmp
mov
js
mov
mov
das
jne,pn
fs
sbb
and
testb
fstl
faddl
mov
sub
cs
cmp
fs
add
outsb
fldt
data16
cmp
or
lret
add
sti
xchg
sar
lcall
call
push
movsl
lret
mov
addl
cwtl
js
bound
pusha
mov
iret
pop
icebp
push
dec
cmp
add
pusha
mov
xchg
mov
orb
sbbl
mov
fs
push
fidivl
mov
cmpsb
dec
in
or
clc
fsubp
mulb
mov
enter
bound
mov
mov
sbb
inc
push
mov
xlat
pop
dec
mov
repnz
scas
fldcw
test
jmp
pop
xchg
movsb
jnp
adc
pop
inc
shrb
lock
pop
mov
push
mov
les
outsl
mov
pop
mov
cli
and
fisubs
aaa
cmc
cmp
jp
in
xor
xchg
fimull
mov
push
push
sbb
inc
push
mov
sub
cmp
nop
lods
decl
js
mov
dec
or
test
sub
stos
outsb
cld
unpcklps
stos
dec
addl
push
daa
pop
clc
xchg
or
mov
xchg
xchg
xchg
push
daa
cwtl
ret
aaa
pushf
or
jne
xor
inc
cvtps2pi
les
pop
mov
push
sarl
lods
lods
scas
dec
rorl
dec
push
lahf
dec
push
add
fimull
jnp
rolb
cmpsb
and
repz
mov
fdivr
pop
cli
jp
push
xchg
cmp
or
mov
jbe
and
cmp
fcompl
icebp
and
add
lea
mov
push
in
sbb
or
add
sahf
and
imul
fs
cmpsb
sub
in
mov
xlat
sub
repz
push
lods
cmp
std
and
or
imul
femms
sub
mov
and
popa
out
xchg
pop
mov
mov
lcall
in
dec
ficompl
adc
inc
add
insl
pop
push
push
fnsave
aaa
and
mov
cmpsb
dec
xor
pop
add
xor
std
rcrb
cs
dec
cmp
out
repz
pop
loopne
stos
data16
fimuls
mov
sahf
push
sbb
stos
sbb
lock
andl
cmp
movsb
out
nop
out
pop
cmp
or
pop
dec
aam
mov
adcb
outsl
aaa
mov
rcrb
call
js
call
jb
jbe
out
fisttps
lock
fbld
shrb
cli
pop
add
push
sbb
addr16
shlb
cmp
or
dec
xchg
fs
pop
sbb
ss
adc
dec
jmp
or
or
add
addl
sbb
add
mov
or
inc
dec
mov
add
mov
jo
popf
sbb
clc
lcall
popa
shll
pusha
daa
xchg
out
mov
test
rcl
add
sub
mov
les
imul
je
test
popa
add
sbb
mov
jno
rcl
jmp
sub
cmp
lahf
push
clc
xor
add
aad
xor
and
jno
add
leave
adc
cmp
cmpsb
inc
aam
dec
jge
mov
add
mov
inc
sub
push
les
inc
xchg
data16
xchg
or
icebp
test
sub
cmp
mov
inc
jo
test
cmp
add
shll
clc
dec
or
iret
addr16
or
ds
imul
imul
dec
mov
es
adc
push
or
out
ds
aas
inc
xchg
pushf
out
xor
mov
ljmp
dec
loope
inc
xchg
jne
sbb
push
je
or
inc
cmp
outsb
and
insl
or
jle
out
add
int
adc
sub
sti
add
jg
in
xchg
cld
jb
and
dec
cmp
filds
rclb
cmp
sti
lods
fsub
push
test
jbe
pop
add
mov
cmp
jge
jno
sbb
cwtl
push
cli
clc
jg
mov
andb
sbb
insb
subb
arpl
jne
inc
jg
xor
test
stos
mov
pop
pop
movsl
inc
lods
out
sbb
decl
movsl
inc
mov
pop
clc
sbb
adc
or
fisttps
jno
pop
pop
inc
push
dec
loopne
cwtl
pop
and
inc
stos
insb
rcl
pop
jl
or
div
cmc
xchg
mov
mov
or
add
stc
xor
or
cmp
jp
push
adc
jmp
stos
gs
add
sarl
jnp
loopne
mov
or
fldln2
pop
and
add
and
jne
es
mov
push
popa
jp
or
mov
sub
outsl
icebp
push
add
dec
mov
push
or
lcall
jge
jo
jb
in
rolb
inc
adc
cmpsl
iret
pop
jno
dec
pop
mov
adcb
adc
lock
inc
stc
movsb
xchg
mov
sub
jle
adcb
rorl
cs
sub
loope
lods
sub
sbb
mov
mov
cmp
es
imull
mull
popa
cmp
movsb
enter
out
jl
jmp
popl
sbb
or
loopne
mov
push
nop
addr16
xorb
popf
adcb
xor
call
push
push
push
cwtl
imul
add
outsl
flds
xor
dec
icebp
dec
aas
add
fildl
add
xchg
xchg
loope
out
or
enter
test
push
cmp
les
dec
sbb
scas
lods
sbb
and
cs
ljmp
mov
dec
adc
mov
push
lea
fcmovnu
test
js
push
shrb
inc
pop
pop
cmp
push
nop
xor
push
sahf
jbe
ds
sub
push
mov
xlat
imul
testb
mov
push
push
mov
dec
sahf
or
outsb
ja
xchg
mov
pop
pushf
inc
pop
imul
inc
inc
nop
add
fiadds
jecxz
jp
xchg
pop
cmp
cmp
lods
aaa
sbb
das
xchg
cmc
outsb
add
mov
adc
and
aam
mov
xchg
pop
or
push
das
aam
inc
xchg
mov
in
pushf
pop
and
xor
lret
xchg
push
pop
mov
mov
cltd
cmp
mov
insl
call
adc
pop
loop
imul
enter
dec
leave
xor
mov
mov
neg
lcall
sub
jne
xchg
mov
cltd
pop
cmp
sub
add
or
xor
mov
cmp
mov
stos
idivb
js
dec
sub
sub
inc
inc
pop
mov
loop
mov
adc
inc
cld
movsb
sbb
pop
lahf
daa
push
adc
mov
fdiv
and
adc
xor
jecxz
cltd
dec
xchg
mov
jno
pop
adc
ret
hlt
jmp
addr16
fdivrs
leave
orl
mov
call
jne
xchg
test
popf
mov
xchg
xchg
push
arpl
mov
pop
mov
xlat
loop
add
and
addr16
clc
push
shr
test
js
scas
dec
inc
bnd
test
fs
cli
pop
jne
lret
pop
xor
cmp
mov
shlb
popf
xchg
bound
or
mov
inc
sbb
fidivrl
imul
sbb
loopne
mov
add
lods
sub
movsb
dec
inc
mov
mov
mov
ret
or
inc
shrb
out
cwtl
ja
add
xchg
pop
jmp
test
dec
in
mov
adc
clc
jo
push
js
in
lahf
inc
or
fdivs
push
cmc
mov
inc
out
sbb
xchg
movsl
movsl
inc
rolb
test
loope
xchg
incl
bound
in
jmp
push
adc
lods
jne
cwtl
adc
sub
stos
inc
mov
pop
repnz
pop
stos
shrl
lock
xor
add
aad
dec
adc
adc
cld
imull
ffreep
jle
mov
add
cli
cmpsl
adc
clc
pop
xor
pop
gs
test
and
aaa
push
loopne
push
adcb
movsb
stos
cmpsb
addr16
add
rcrl
jo
or
jg
into
push
pop
lds
lock
push
sbb
loop
xchg
rcrb
sub
sub
xchg
xchg
xor
mov
pusha
push
insb
push
jle
mov
inc
add
cmpsl
xchg
mov
mov
in
stos
mov
mov
or
jnp
pop
jge
or
enter
sub
test
mov
rorl
push
mov
mov
xchg
and
push
dec
sbb
mov
ret
dec
leave
inc
add
xor
push
mov
add
mov
add
icebp
inc
xchg
pop
ja
jle
xchg
mov
bound
dec
and
jp
adc
call
fs
adc
leave
fidivrl
jg
adc
or
adc
out
outsl
lcall
ds
push
mov
dec
dec
aaa
sub
fiaddl
es
fbstp
sbb
sbb
insl
inc
pop
sub
stos
mov
inc
mov
push
mov
cwtl
cmp
cmpsb
mov
sub
fcmovb
cli
or
ss
mov
js
cwtl
or
popf
lods
adc
push
push
push
pop
xorl
sahf
and
scas
scas
jo
aad
push
fidivrl
push
push
mov
outsb
sub
and
rcll
aad
stc
je
jge
pushf
jecxz
aaa
sbb
mov
mov
mov
mov
push
dec
movsl
jecxz
loope
cmc
sbb
xor
faddl
sti
scas
push
mov
pop
lret
scas
jmp
rclb
cmp
jl
xlat
jle
mov
lahf
rolb
popf
insb
fistps
icebp
aam
stos
xor
sarb
inc
jmp
pop
add
or
fldl
xor
push
xchg
shrb
xor
rorl
inc
inc
mov
cli
mov
add
cmp
and
jno
sub
fnstenv
aam
pop
aas
es
notb
rol
test
test
in
xchg
or
cmpsl
cmp
icebp
jmp
inc
sbb
or
sub
adc
sbb
jnp
inc
inc
jle
pop
cmpsb
xchg
mov
cli
insl
filds
pop
push
mov
fdivr
jecxz
xchg
lods
mov
ljmp
adc
dec
faddl
xchg
scas
int3
fdivs
or
pop
inc
test
out
add
aam
push
fwait
out
mov
repz
enter
push
jmp
cli
or
fidivrl
lock
cmc
adcl
sub
das
in
lods
dec
sub
dec
scas
or
ret
pop
mov
pop
inc
inc
inc
cs
push
sti
js
lds
push
or
adc
jno
push
int
les
pop
stos
mov
loope
and
push
sbb
std
daa
shl
inc
pop
inc
inc
in
sbb
data16
mov
fimuls
rclb
fabs
jne
or
js
in
movsb
sbb
or
insl
sub
push
lock
addr16
dec
inc
inc
int
adc
push
rcrl
push
adc
test
mov
mov
data16
and
mov
mov
fsubl
stos
mov
mov
shll
rcrl
testb
and
cmp
das
add
mov
ss
pop
pushf
add
sbbb
add
mov
mov
cltd
iret
xchg
int
imul
test
lods
and
shll
mov
xlat
enter
dec
dec
add
sbb
jecxz
adc
pop
fstpl
add
dec
sub
out
insb
cmp
lahf
aam
leave
mov
push
xlat
add
mov
xchg
fnstenv
pop
add
add
inc
mov
mov
cmc
pop
mov
adc
and
in
sbb
mov
sub
pop
inc
pop
dec
iret
mov
xor
jae
rorl
inc
xchg
adc
in
add
pop
hlt
push
jnp
sbb
mov
pushf
fimuls
std
into
sbb
hlt
lock
ret
push
out
jecxz
push
pop
dec
pop
clc
pop
cs
cli
jge
ret
test
cwtl
iret
mov
iret
dec
sbb
cwtl
dec
movsb
pop
and
mov
mov
cmp
adc
repnz
shrb
inc
dec
sbb
cld
add
adc
add
pop
mov
xor
mov
ds
lea
mov
cmc
clc
adcb
cwtl
pop
push
lods
mov
dec
or
cld
fists
mov
sar
es
cmp
arpl
pop
mov
fildll
and
sbb
inc
mov
jbe
add
cmp
sbb
or
adc
jbe
cmp
lcall
stos
cmp
testl
inc
or
int
jl
xor
popf
mov
inc
cmpsb
ja
ss
daa
ljmp
ljmp
aas
mov
aas
dec
aam
or
pop
pop
fnstenv
push
add
jne
push
out
mov
inc
jmp
nop
sbb
ljmp
scas
repz
pop
pusha
pop
sub
sbb
lcall
loope
push
pop
lcall
gs
adc
jnp
stos
or
popa
inc
lock
mov
lea
mov
test
imul
and
cmpsl
hlt
jmp
lds
ja
xorl
pop
cmpb
lret
cwtl
aas
xchg
inc
insb
lods
xchg
outsl
clc
sub
inc
pop
push
addl
scas
cmpl
xor
cli
andl
dec
sub
push
int
mov
mov
sbb
and
mov
shrb
inc
inc
sub
js
andb
popa
gs
jb
inc
mov
jmp
push
add
cmp
fs
andl
add
add
int3
test
mov
xchg
add
push
out
fidivl
pop
mov
lds
jo
push
stos
hlt
inc
ja
scas
xor
nop
inc
out
jne
cmp
adc
inc
mov
adc
test
loopne
lahf
pop
xchg
add
xor
pop
sbb
and
bound
inc
ds
pop
popf
inc
pop
add
sub
xchg
push
push
mov
dec
cli
mov
loop
sbb
pusha
cmp
clc
fldt
mov
mov
addr16
lret
cmp
scas
sbb
mov
mov
xchg
sbb
data16
or
adc
sub
jg
cmc
mov
imul
push
or
mov
int
in
aam
pop
add
mov
xchg
jo
jno
pusha
enter
iret
daa
inc
pop
call
jl
js
leave
add
nop
and
adc
xchg
in
in
int3
add
shll
cmpsb
push
mov
cmc
push
dec
mov
sub
push
pop
sub
add
or
lret
ficomps
aad
ss
insb
xor
pop
mov
mov
aam
cld
in
int
stos
add
inc
test
enter
in
lods
xor
scas
mov
lea
add
daa
ss
xor
and
je
rcr
aam
scas
psubb
and
sub
outsl
fistl
cmp
stc
shl
ret
jne
arpl
pop
mov
adc
xlat
test
adc
ret
xchg
xchg
jge
lahf
jp
cmp
sub
sub
adc
jbe
hlt
pop
aam
inc
push
cmpsb
sub
xchg
jns
add
lods
fcmovb
jo
clc
inc
aas
xor
cs
sbb
push
sbb
out
xchg
test
dec
sub
mov
mov
mov
in
mov
imul
lds
aaa
sar
dec
aam
movsb
push
shr
lds
loopne
mov
jle
mov
pop
mov
icebp
jno
xor
nop
add
xor
pop
cli
mov
cmp
movsl
popf
inc
fldl
pop
push
or
push
or
in
add
inc
cli
mov
inc
or
pop
aaa
popa
movsl
push
mov
sarb
xchg
adc
or
cli
pop
push
or
push
push
sbb
fcmovnu
mov
sbb
icebp
pop
aad
adc
add
dec
jb
or
mov
sbb
mov
mov
rclb
add
icebp
js
iret
rorb
and
inc
ds
adc
push
jp
xchg
aaa
sbbl
mov
adc
loope
ss
mov
dec
pop
xchg
shrb
or
or
inc
cmp
sub
in
push
mov
and
pop
jmp
leave
sbb
iret
push
push
sbb
inc
xchg
xlat
add
adc
inc
fcoml
mov
mov
je
xchg
aam
sub
mov
leave
rcl
pop
leave
inc
imul
push
into
add
inc
push
std
and
es
or
notl
xchg
mov
in
ret
inc
movsb
cmp
xchg
cmpsl
ds
xchg
stos
xchg
mov
cwtl
fisttpll
insl
xchg
gs
sbb
int
inc
jo
ds
test
jae
mov
mov
jb
movsl
and
mov
jp
jnp
and
rol
cmc
movsb
push
movsb
pop
mov
pop
xor
push
xlat
mov
popa
popf
push
pop
je
cmp
inc
push
mov
inc
or
rclb
add
dec
cmpsl
out
cltd
nop
cltd
jmp
jp
mov
inc
lods
add
je
sub
rcr
sahf
mov
loope
push
cmpsl
lods
in
push
xchg
ljmp
sub
shll
xchg
xchg
cwtl
gs
test
nop
push
movsl
mov
or
rorb
shll
mov
pop
loope
aam
bound
inc
lret
arpl
add
mov
mov
rcrl
cmp
rorl
or
out
js
pop
arpl
jle
push
pop
pop
fwait
enter
pusha
push
shrb
pop
hlt
shlb
dec
mov
mov
sbb
mov
lahf
js
loope
xor
xor
addl
int3
fdivp
mov
lcall
inc
outsl
xor
pushf
loope
mov
loop
cmp
or
push
jne
and
mov
inc
jb
add
ret
cmpsl
repnz
push
pop
dec
sbb
inc
pop
xchg
mov
icebp
jp
aaa
push
xor
imul
ja
jle
lods
lds
ror
mov
scas
fdivl
inc
scas
pushl
js
cmp
js
sub
cmovbe
mov
out
pop
addr16
je
insl
pop
mov
sub
es
push
mov
addr16
inc
ljmp
dec
lahf
mov
or
not
mov
jne
shr
dec
and
cmpsb
addb
call
cmp
cmc
les
aas
mov
in
test
adc
js
inc
push
outsl
jno
adc
and
cltd
xor
inc
jbe
xchg
fmull
sti
xchg
cmp
inc
dec
mov
rcll
jo
mov
dec
jmp
cs
mov
aam
sub
add
mov
push
dec
les
adcl
ja
cmpsb
sti
test
pop
cmpb
inc
adc
incl
loope
mov
sub
in
sbbl
xchg
mov
pop
push
adc
jno
jge
into
push
mov
sbb
push
stos
sub
pop
adc
rol
sub
and
insl
mov
ret
inc
mov
jbe
leave
add
push
pop
popa
mov
fwait
pop
push
inc
cltd
sbb
add
xor
push
push
push
icebp
or
pop
pop
fsubs
mov
mov
xchg
inc
pop
insb
cwtl
aad
and
arpl
adc
add
lds
xchg
call
inc
mov
xor
cmpb
sub
or
bound
adc
dec
jg
add
mov
jne
ficompl
push
mov
leave
loope
pop
push
test
jo
daa
xchg
pop
push
cli
cld
arpl
jp
sbbb
loope
adc
push
ret
and
inc
xchg
and
mov
fisttps
add
push
and
addl
and
xchg
out
or
cmpsb
not
mov
lea
xor
gs
or
std
mov
test
jo
loope
icebp
loope
sbb
jb
clc
fs
xor
scas
dec
outsb
test
xchg
cmp
sbb
arpl
and
jae
cmovo
imul
jp
add
addr16
xchg
mov
clc
sahf
sti
xor
inc
cmp
dec
shrl
es
daa
clc
shlb
shrl
ret
mov
addr16
sub
pop
rcl
pushf
in
inc
xorl
stos
fbld
sub
xchg
pop
notl
lahf
add
fnsave
dec
ljmp
clc
ret
xchg
test
fistpl
aas
pop
mov
pop
xor
pop
push
stos
xchg
xchg
clc
sarl
ret
andb
gs
xchg
add
mov
dec
aas
or
mov
leave
repz
jnp
mov
aaa
jns
sbb
jmp
and
jg
and
and
cs
push
test
aaa
push
testl
or
popa
ret
lea
in
mov
and
outsb
insl
add
fisttpl
push
or
icebp
orl
fadds
mov
loope
mov
fwait
or
clc
jne
push
popa
and
xchg
adcl
and
test
js
xor
outsl
flds
and
dec
es
mov
loopne
adc
cmp
pop
stos
aad
push
in
leave
push
xlat
and
loope
jbe
mov
sahf
popa
scas
jo
in
cmp
clc
add
add
popa
or
sub
xchg
aad
inc
adc
and
mov
or
rorb
add
pop
push
mov
aam
and
add
scas
fisttpll
incb
cwtl
adc
in
outsb
xchg
pusha
xchg
and
jmp
shl
fdiv
xchg
push
in
movsl
inc
push
pop
mov
inc
mov
ret
jg
mov
orb
pop
into
and
mov
ret
pop
aas
cwtl
and
jns
xchg
adcl
xchg
mov
lods
adc
adc
cmc
das
jno
mov
pandn
xor
jmp
rcrb
or
jmp
rolb
sti
add
inc
in
pop
adc
test
mov
mov
add
rol
dec
popf
negb
scas
add
lret
adc
bound
das
xlat
std
push
sub
jle
xor
cld
cli
cmp
icebp
inc
scas
sub
xor
push
std
add
add
inc
aaa
sub
jecxz
repz
pop
jns
out
mov
clc
mov
subl
cmovg
push
push
add
add
loope
xchg
jl
call
popf
movswl
ds
dec
jge
lds
popa
inc
push
push
inc
test
in
insb
push
add
int3
sub
pop
frstor
pop
das
sti
inc
adc
mov
in
les
rcrb
adc
popf
roll
push
or
push
xor
lea
xchg
test
inc
mov
dec
mov
arpl
test
out
sti
push
xchg
xchg
jp
fimull
or
xchg
mov
mov
inc
inc
fisttpl
nop
sub
pusha
cmpb
sbb
int3
cli
cmp
xor
xor
mov
ret
ss
sub
pop
rcr
pop
ficomps
je
and
fisubs
mov
call
push
ffreep
ds
and
push
stos
orb
inc
stc
mov
dec
adc
pop
cli
setno
dec
lods
jmp
adc
dec
xchg
push
sbbl
adc
jno
dec
jle
adc
cld
pop
pop
jp
xchg
js
or
inc
lahf
cmc
inc
and
jb
daa
test
das
sub
inc
jmp
ljmp
fcoms
cmp
xchg
mov
arpl
and
mov
lahf
mov
pop
xchg
dec
xlat
xor
ret
xor
jno
push
je
lret
lcall
jg
fnsave
and
adc
cltd
jno
mov
out
cld
add
mov
bound
push
enter
stos
xor
test
in
cli
jo
cmpxchg
cli
dec
pop
xchg
jnp
cmp
test
xchg
mov
scas
mov
jo
xchg
es
pushl
sub
or
and
enter
mov
stos
add
add
sbb
push
pop
aaa
nop
ds
hlt
fbstp
mov
imul
or
cmp
shll
sahf
jg
inc
pop
std
add
or
jo
das
mov
push
aad
xchg
push
mov
or
ret
sub
sub
and
lahf
sbb
xor
jo
sub
xor
fidivrs
repz
loope
addl
lock
mov
popf
loope
add
fucomi
sahf
xor
mov
jge
inc
lahf
hlt
rclb
mov
xchg
repnz
daa
or
inc
cmp
sti
repz
and
divb
xor
xchg
ja
add
aad
and
sub
clc
movsl
add
xor
mov
mov
rorb
stos
sti
loop
adc
mov
pop
xchg
mov
enter
aad
jbe
add
or
push
dec
leave
rclb
jb
pop
hlt
push
or
jecxz
loop
inc
aaa
add
hlt
and
push
sbb
mov
and
cmpl
pop
test
pop
int
ss
lock
cli
dec
gs
cld
pop
daa
sub
inc
jp
sbb
pop
push
jnp
sub
or
push
and
mov
cmpsl
pop
adc
int3
xor
jl
test
xchg
cmp
mov
cwtl
mov
xor
sub
sbb
jge
mov
lods
cmpsb
dec
shl
cmp
dec
xor
mov
or
mov
in
push
ds
xor
jmp
mov
ja
icebp
cmpsl
or
or
xor
in
inc
fisttpl
jne
jge
push
or
lret
aam
xchg
pop
dec
add
mov
lahf
dec
aaa
add
inc
cli
push
rcll
jle
testb
mov
gs
shll
js
paddsw
push
sub
movsb
jae
fsubr
decb
cmpsl
loop
mov
addb
pop
mov
in
push
mov
or
das
les
shlb
cmp
pop
sbb
xchg
adc
incl
icebp
cli
test
arpl
or
orl
into
add
lock
repnz
scas
fsubs
pusha
mov
insl
lret
cltd
test
cmp
jo
insl
push
std
xchg
movsl
cmp
pop
cmp
mov
mov
sbbl
faddl
shlb
push
stos
xor
inc
fisubrs
sahf
sbb
push
jb
or
cmp
jnp
push
flds
lahf
ds
lret
lea
push
pop
ret
loop
shrb
sub
pop
and
jge
sbb
adc
lret
loopne
test
jle
push
lds
dec
mov
shl
pop
cmpsb
sbb
push
outsl
add
xor
xor
hlt
jle
adc
rclb
into
push
xchg
ds
rorb
jp
xchg
mov
movb
pop
fildll
loop
stc
push
xor
adc
sbb
inc
cmp
nop
cwtl
mov
dec
sub
popf
sbb
jnp
jbe
sbb
imul
xor
pop
push
imul
jbe
mov
xor
cmpsl
push
pop
in
idivb
xlat
and
push
sarb
sub
cmp
jo
sbb
loope
jl
and
pop
mov
dec
inc
dec
adc
cmc
movsl
insb
insb
ret
push
in
jmp
ja
xchg
pop
repz
sbb
pop
pushf
fmull
mov
daa
lock
mov
and
and
clc
xor
adc
subb
sbb
inc
out
outsl
ljmp
xchg
xor
nop
or
adc
gs
push
mov
mov
adcl
shlb
mov
rolb
sub
xchg
lahf
lock
lcall
rcll
jmp
rclb
inc
sub
push
out
or
sub
mov
jl
sbb
xor
pusha
scas
mov
mov
pop
jg
xchg
sbb
push
pusha
rorb
add
clc
lret
inc
neg
xchg
movsb
push
add
jb
cmpsl
js
lds
xchg
inc
push
fisttps
mov
jge
push
and
xchg
repnz
or
lods
jl
in
jge,pn
pusha
cmpsl
xor
dec
push
sti
loope
lock
inc
sbb
sub
rorb
sbb
fiadds
and
js
std
int
mov
dec
mov
push
xor
cmp
fisubrl
iret
xchg
dec
cld
or
ja
push
roll
cltd
insb
loopne
aas
jl
push
imull
sub
push
push
mov
jno
lcall
or
fmul
push
sub
sub
mov
push
jnp
scas
push
stc
jo
rcrl
inc
icebp
cmpsb
ret
sub
in
std
mov
shll
jo
inc
jecxz
loopne
add
sbb
adc
mov
mov
xor
ljmp
test
movsb
xchg
js
out
xlat
ds
mov
rorl
lods
add
jnp
imul
xchg
inc
mov
hlt
mov
in
mov
adc
mov
sub
mov
loopne
push
movl
negb
bound
outsb
xchg
test
jno
or
push
fisubs
movsb
jg
and
push
test
inc
push
cmp
adc
insb
cmp
cld
lret
ljmp
cli
lahf
pop
fdivrl
xchg
cli
shlb
push
fstpl
lahf
push
mov
ret
push
ret
popf
lods
mov
lahf
daa
or
cmpb
das
lret
push
addb
mov
cmpsb
adc
lods
cmp
adc
adc
push
pop
cmovle
imul
push
aad
jmp
outsb
shlb
sub
and
inc
xor
or
repz
call
test
xchg
add
fisttpl
negb
sarb
into
cs
add
lods
punpckldq
inc
jnp
popa
ss
jmp
cmpsb
pop
aas
xor
jecxz
test
inc
cmp
fwait
ds
add
stmxcsr
std
jmp
addb
cmc
lea
mov
mov
sub
sub
test
shll
adc
mov
mov
ret
jle
test
mov
jo
mov
lods
scas
hlt
cmc
sub
cmp
fcoms
pop
pop
aad
jle
imul
mov
xor
pop
dec
cmpsl
in
scas
cli
pop
mov
push
in
dec
add
xchg
ja
sub
enter
sbb
fisttpll
jns
and
pop
or
mov
and
lahf
outsb
loope
add
aas
lahf
rolb
mov
lds
dec
dec
in
inc
inc
or
addb
aad
xor
xchg
sbb
aam
sbb
lret
insb
inc
popa
stos
cli
cmp
add
je
xchg
aas
lock
mov
icebp
pop
inc
push
jbe
jmp
shr
movsb
mov
les
push
fdiv
dec
xor
loope
call
ja
test
loopne
scas
mov
inc
dec
xchg
inc
mov
test
xor
add
ljmp
js
out
dec
sbb
cmpsl
lock
out
cmp
and
aam
test
icebp
enter
andl
or
test
jmp
jb
loop
xchg
add
mov
sbb
scas
enter
out
repz
or
fimull
pop
test
push
fbld
mov
lock
mov
shlb
ljmp
js
testw
pusha
or
add
jmp
xchg
or
xchg
leave
and
stc
scas
add
ds
lds
popl
iret
call
shrb
data16
out
roll
cmp
cmpsb
jb
jmp
jge
ret
sbb
out
or
shrb
test
inc
inc
jg
clc
in
mov
insl
jmp
or
loopne
xor
and
daa
je
insb
leave
lret
test
mov
popa
negl
dec
mov
test
lods
jne
xor
or
call
lock
aad
pushf
and
stos
sbb
fstl
push
mov
pop
outsl
pop
pop
push
jecxz
inc
adc
in
fildll
jno
mov
jge
adc
scas
xchg
cmp
add
std
inc
dec
push
mov
ret
xor
jno
push
and
test
rcrb
dec
xchg
jl
jecxz
dec
pop
insl
pop
rclb
jg
or
test
push
nopl
dec
sarb
mov
sub
dec
testl
adc
fcmovu
sbb
clc
loopne
daa
popf
mov
aad
jmp
xor
jp
inc
popl
pushf
loope
dec
movsl
jmp
imul
cmp
lret
jmp
mov
add
movsb
sarl
rorb
pop
or
mov
push
outsb
inc
js
and
shrb
hlt
add
push
cli
arpl
cs
repnz
or
outsl
jge
inc
or
or
sbb
push
mov
mov
jl
pusha
jnp
mov
push
cmp
dec
and
inc
adc
aas
aad
clc
push
adc
mov
inc
dec
adc
out
pusha
mov
jecxz
and
lahf
sahf
push
fimull
in
fucomp
pop
pushf
lock
scas
out
xchg
popa
push
jae
mov
jns
mov
test
orb
jmp
je
mov
fs
rcrl
add
ljmp
xlat
mov
mov
imul
test
xlat
daa
jbe
mov
pushf
cli
lret
or
pushf
mov
addl
add
hlt
jle
lods
push
sbb
sub
pop
mov
cmp
sti
adc
insl
pop
popf
mov
jb
xor
or
cli
adc
cld
les
xchg
in
add
pop
stos
imull
inc
and
daa
pop
pop
dec
js
sub
add
cmpsb
cmp
outsl
jo
pop
ror
or
fistpll
icebp
mov
pop
in
repz
sub
bswap
cmp
jge
lods
xchg
dec
mov
in
shrb
add
lds
sbb
test
shr
push
mov
sub
rcrl
loope
aaa
lea
mov
mov
inc
inc
adc
jg
and
scas
andl
loope
sbb
cmp
push
sbb
enter
imul
add
sub
shlb
mov
lret
fwait
xchg
imul
aad
mov
outsl
lods
and
add
cld
cli
fisubrs
mov
xor
into
cmp
adc
subb
stos
ret
rorb
cli
out
outsb
cmp
ja
loope
pop
pop
cld
jl
sub
xchg
mov
sbb
pop
pop
sbb
push
lea
orb
testb
pop
xor
mov
xor
mov
bound
xchg
xchg
in
sbb
mov
outsl
jno
xchg
xchg
sbb
add
inc
push
xchg
fsts
rolb
les
loop
loop
mov
insl
xchg
mov
repz
cmp
mov
mov
add
shl
push
shl
icebp
shrl
rorb
pop
push
jmp
cltd
and
sahf
sbb
mov
mov
adc
loope
cmp
adc
roll
add
pop
movsl
inc
testb
mov
pusha
movl
lock
jno
sub
xchg
mov
and
sahf
mov
mov
loop
adc
std
mov
jp
adc
shlb
dec
loopne
shr
pop
push
pop
loopne
cmp
sub
fcmovbe
add
adc
jle
mov
mov
sbb
test
pop
mov
out
and
dec
mov
jo
cmp
or
scas
pop
cwtl
stos
mov
and
adc
push
and
out
hlt
jge
aaa
rcr
mov
sub
adcl
add
sbb
pop
or
mov
jg
rol
mov
jns
dec
je
fsubr
mov
dec
imul
aas
add
pushf
enter
mov
mov
imul
mov
or
cwtl
mov
adc
dec
lret
push
jbe
mov
cmp
and
xchg
pusha
jl
add
push
pop
dec
imul
dec
xrelease
jl
in
mov
movsl
subl
push
pusha
ljmp
sbbl
pop
jae
add
in
pop
fucomp
imull
cmp
and
push
cmp
test
adc
dec
loopne
in
pop
pop
in
mov
out
add
mov
in
loop
adc
aad
subps
cmpsb
in
js
sar
push
arpl
int
dec
das
push
std
mov
int
push
jl
adc
cmc
inc
xchg
sahf
or
insl
or
cmpsb
mov
add
jbe
stos
mov
mov
pop
dec
and
insb
test
inc
sub
xchg
mov
xchg
inc
mov
jb
test
dec
pop
xor
mov
and
scas
es
sub
sti
sub
popa
inc
adc
xor
loope
mov
add
clc
mov
jle
mov
pop
dec
xchg
cmp
icebp
jo
scas
mov
adcl
xchg
cs
inc
test
push
cmc
mov
mov
xchg
movsl
lock
les
cmp
mov
rolb
rclb
and
popa
inc
popf
lret
xor
pop
pop
or
loopne
push
fwait
and
xchg
jmp
sub
jecxz
or
out
cmp
dec
xor
nop
xor
mov
fcmove
and
scas
sub
mov
pop
mov
pop
cmp
mov
addl
les
inc
sti
jb
loopne
cwtl
or
scas
aaa
mov
out
lret
aas
and
or
mov
pop
push
push
lahf
inc
sub
inc
or
adc
scas
mov
popf
sbb
pop
jb
push
fwait
aad
cli
repz
js
mov
or
mov
cmc
mov
sti
in
push
cmpsb
sbb
sbb
jb
loope
popf
inc
pop
xorl
test
std
out
xchg
jno
push
jmp
imul
mov
and
or
cmp
pop
stos
movsb
lcall
sbb
ret
inc
sub
orl
inc
add
jne
pop
sbb
push
cmp
inc
in
shlb
lea
shlb
sbb
push
mov
sub
or
test
jmp
push
mov
aaa
mov
push
clc
sbb
add
mov
decb
push
push
scas
sti
loopne
jecxz
pop
cwtl
push
cmc
xchg
dec
jge
jmp
je
pusha
xchg
test
or
mov
inc
sti
jne
adc
push
xchg
in
nop
cmp
inc
pop
add
add
iret
aaa
and
jg
sub
mov
mov
inc
roll
sub
add
loop
mov
dec
fiadds
ret
pushf
adc
dec
fidivrl
bound
mov
jle
inc
divl
mov
cmp
mov
std
stos
mov
idivl
and
xor
cs
xchg
test
xor
inc
rolb
shl
mov
dec
xor
cmc
pop
inc
pop
mov
test
fucom
inc
mov
sti
outsl
cmp
jecxz
insb
cltd
sbb
dec
xchg
mov
or
ret
inc
stos
out
pop
push
decl
aam
dec
sahf
ljmp
xor
and
xchg
push
jle
cmpl
push
mov
mov
loope
add
scas
sub
cwtl
or
adc
or
decl
inc
loope
or
dec
xchg
pop
pop
ret
mov
cltd
sub
stc
je
hlt
mov
xchg
pop
dec
outsl
push
add
adc
xor
imul
jle
inc
mov
in
rep
or
pop
pop
inc
leave
stos
xchg
out
les
dec
push
and
mov
mov
cmp
inc
call
fwait
test
adc
push
adc
into
mov
add
les
movsb
xchg
test
idiv
dec
fisttpll
imul
xor
rcll
mov
sbbb
add
shlb
adc
xchg
inc
mov
mov
call
cli
xor
jmp
or
mov
mov
test
mov
jl
mov
nop
cmp
xlat
pop
and
adc
add
ds
cld
or
add
push
insb
or
mov
add
cmpl
rcrb
lret
jmp
test
aam
push
dec
loopne
test
adc
mov
inc
adc
push
test
mov
pop
stos
or
andb
sbb
mov
or
pop
psllw
jge
out
cmp
fs
fmull
cmp
xchg
sub
popa
and
cmp
xorb
cmp
jmp
sub
or
outsl
add
mov
mov
xor
bound
inc
xchg
pop
add
add
nop
cwtl
insl
xor
je
push
pop
roll
jle
orb
loopne
mov
or
les
mov
ljmp
mov
roll
in
in
jg
cli
cmp
add
fs
pop
pop
je
call
xchg
add
pop
scas
test
sbb
mov
mov
push
xor
jl
sbb
inc
xchg
cltd
sahf
leave
out
pop
negb
nop
mov
ds
add
mov
push
loopw
loope
movd
dec
enter
adc
pop
or
sahf
sbb
add
or
dec
jb
in
mov
adc
mov
mov
xor
and
fcom
sbb
popa
das
sub
pop
pop
pop
out
push
mov
xchg
ja
lods
mov
push
pop
clc
pusha
stos
push
pusha
push
xlat
std
mov
xlat
mov
ret
mov
pop
jo
or
fistpll
repnz
ret
loope
adcb
push
insb
add
repnz
ret
mov
mov
xchg
test
je
add
inc
mov
cmpb
mov
mov
fsubrs
std
add
cmc
daa
stos
popa
add
imul
push
popf
xchg
or
add
xchg
xor
add
mov
loope
mov
add
push
or
xchg
pop
or
mov
les
lods
gs
pop
and
cmp
cld
mov
jnp
xchg
cli
testb
test
xchg
mov
enter
sbb
adcl
mov
std
sti
inc
adc
hlt
sbb
pop
sub
imul
cmp
xlat
daa
notl
jle
mov
mov
sub
and
or
sarb
nop
rorb
pop
adc
int
and
jb
inc
fsubs
les
adc
add
xor
or
jae
outsl
dec
dec
fbstp
mov
pop
jge
out
out
in
push
adc
adc
xchg
scas
repnz
or
inc
mov
mov
sub
enter
leave
sahf
out
les
inc
ficomps
cmp
pop
adc
push
sub
adc
mov
movsb
outsl
dec
sub
xchg
mov
jg
xor
mov
sub
les
mov
and
jb
or
movbe
push
push
sub
sub
xor
jmp
jbe
nopl
ss
loop
push
push
pop
sub
aam
scas
jg
mov
ret
sbb
sbb
dec
jmp
dec
mov
jl
add
adc
cmp
in
adc
arpl
in
lcall
jecxz
pop
push
mov
sti
aas
adc
and
adc
adc
ljmp
pop
lods
push
xchg
push
outsl
repnz
cmova
and
ss
repnz
movsl
stc
sub
sbb
xchg
sub
jno
je
cmp
inc
push
or
pop
xor
jle
sarb
xor
dec
shll
scas
mov
js
cmp
and
cmc
inc
nop
stc
dec
in
mov
fcmove
rcll
mov
cli
je
xor
sahf
loop
vrsqrtss
aas
stos
insl
pop
add
stos
xchg
mov
add
or
jl
nop
add
push
and
mov
mov
xlat
scas
dec
mov
stos
and
inc
jp
sqrtps
sbb
jg
cld
add
push
pop
sti
push
and
add
pop
dec
pop
sbb
dec
or
adc
and
inc
andl
pop
std
adc
and
jp
mov
clc
or
fs
ljmp
jns
ret
or
fldt
insb
mov
les
sub
cmp
and
and
in
or
pop
fisubs
or
insb
inc
inc
fwait
inc
aam
or
or
mov
test
jge
pop
add
fidivl
imul
dec
outsb
out
and
hlt
mov
iret
push
and
test
xor
pusha
outsl
mov
mov
daa
in
mov
add
mov
insl
adc
pop
scas
mov
test
stc
lcall
stos
and
push
sbb
into
sbb
adc
lods
adc
sbb
pusha
in
movsb
jmp
clc
mov
sahf
and
sub
inc
pop
nop
mov
cmpsb
pop
jecxz
add
aad
push
js
ret
add
leave
cmp
pop
fdivl
or
iret
clc
in
xor
mov
jecxz
scas
icebp
cmpsb
pop
in
xor
popa
adc
lods
mov
cmp
sbb
lret
test
and
inc
sub
mov
aam
fsubrl
dec
jle
js
psubd
xchg
repnz
pop
std
push
push
sbb
int3
test
into
cmp
jecxz
xor
cmp
aam
cs
jno
mov
jecxz
push
sbb
loope
cmc
decb
cld
cmp
sub
je
cmc
dec
mov
pop
pop
push
sahf
sbb
rorb
adc
rcrb
jle
mov
int3
rcrl
enter
push
pop
int3
mov
insb
cmp
adc
xchg
jp
orb
cltd
movb
mov
xor
push
mov
adcb
movsl
faddl
negb
das
test
cs
std
fsubrs
mov
fs
leave
push
mov
sub
push
add
scas
sbb
imul
test
das
pusha
sti
sbb
and
xor
jno
clc
jns
push
mov
iret
jmp
adc
inc
xchg
mov
push
lahf
jbe
add
rorb
cs
movsb
imul
xor
in
jmp
js
das
or
loop
subb
repz
icebp
fistpll
dec
sub
sub
sub
or
cmp
fists
jne
and
sbb
sti
add
testb
enter
push
sub
jbe
mov
mov
jae
mov
add
cltd
mov
clc
js
hlt
xchg
cld
aas
dec
pop
shrl
dec
xor
incl
ret
adc
and
cmc
sti
adc
inc
adc
arpl
mov
mov
push
mov
mov
or
in
ss
jo
lods
mov
mov
pop
jmp
mov
sbb
fsubr
pop
stos
and
pop
adc
pop
cmp
add
rcrb
and
fiaddl
mov
dec
mov
aaa
mov
fistpl
xchg
add
das
ret
popf
pop
scas
test
shlb
inc
insl
xor
rcrb
dec
xor
or
push
add
shrb
test
fldl
adc
add
jecxz
notl
out
pop
sbb
cmp
sub
xlat
mov
test
js
and
and
sbb
inc
popa
inc
aas
and
sbb
clc
or
iret
daa
scas
adc
ds
sbb
xchg
xchg
les
xchg
jo
jmp
adc
ljmp
or
das
je
sub
dec
shrb
sbb
mov
iret
mov
push
sarb
incl
cmp
sbb
mov
xchg
ret
mov
sbb
ds
or
add
leave
ret
adc
mov
ss
cmpsl
loopne,pt
pop
cmp
sbb
int3
fchs
adc
push
ds
mov
into
mov
adc
add
out
and
xor
push
adc
mov
ficomps
adc
or
arpl
pop
test
pusha
in
iret
and
adc
pop
jl
cmpsb
add
call
and
adc
jg
hlt
in
mov
jle
stc
sub
inc
jge
ret
add
imul
xchg
sbb
xchg
hlt
pop
lcall
clc
xor
fidivs
xor
dec
push
es
push
add
out
rorl
jb
hlt
sub
inc
xor
ret
sahf
inc
js
iret
cmp
dec
fnstsw
sbb
adc
shrl
mov
das
out
or
fcompl
sub
dec
push
mov
inc
mov
daa
insl
sub
jg
test
xor
jo
xor
in
mov
mov
push
dec
xor
cli
and
mov
das
cmp
add
dec
push
fbstp
or
adcl
pop
inc
mov
hlt
fdivrl
addb
cmpsb
hlt
sub
pop
test
jmp
mov
xor
sub
jo
sahf
data16
pushf
sbb
addl
mov
pop
ss
int3
dec
adc
clc
ret
loopne
sarl
imul
pop
ss
cmp
fsub
and
inc
addl
cmc
adc
jae
ds
clc
aaa
dec
and
sbb
pop
incl
cltd
into
and
mov
and
pop
out
out
inc
in
and
xor
pop
fdivrl
test
sub
lock
incl
rcll
sbb
ljmp
out
sub
or
xchg
jne
jmp
pop
push
fildll
dec
testb
rclb
int3
in
fsts
lods
test
push
mov
mov
jmp
or
ljmp
mov
jae
sbb
mov
dec
mov
sbbl
mov
sbb
mov
adc
and
dec
nop
js
inc
ret
daa
mov
lea
mov
ret
jg
and
roll
test
daa
lods
xchg
sahf
mov
lds
xor
addl
adc
scas
or
into
rol
icebp
popf
mov
and
dec
mov
or
mov
jge
or
ljmp
pushf
push
sub
mov
aam
outsl
jne
pusha
xchg
daa
ja
aaa
insl
push
add
and
aas
ds
arpl
xchg
push
mov
pop
std
pop
movsl
mov
mov
pushf
into
push
pop
jmp
mov
mov
or
cli
inc
sti
adc
mov
cli
divl
xor
xor
mov
xor
sti
subb
scas
and
rorb
ficoml
add
sbb
icebp
es
scas
shlb
pop
add
test
mov
cmpsb
das
in
sti
jne,pt
loop
fadd
xor
repnz
add
lods
js
or
xchg
out
arpl
pop
cmp
pushf
icebp
pop
sub
sub
cmc
add
pop
movsb
xor
rcrl
jne
mov
cmp
and
push
push
xor
xor
push
add
popf
xor
sub
push
adc
cli
int3
fwait
popa
fs
and
shlb
push
jbe
loopne
cmp
mov
test
add
pusha
nop
and
jmp
xor
scas
jno
addr16
push
ljmp
outsl
xchg
push
sahf
lret
inc
or
mov
jmp
fchs
lea
clc
loop
adc
cmp
mov
push
js
subl
mov
stc
pop
add
inc
push
xchg
sarb
pop
mov
mov
stos
adc
ja
dec
loope
sbb
jge
ds
sbb
mov
dec
mov
lock
popa
fnstcw
int3
in
inc
dec
mov
lret
push
mov
mov
lret
es
insb
ret
iret
int3
pop
loopne
pop
push
xor
push
js
lods
pop
jl
mov
fisubl
dec
and
or
push
je
test
rcr
xor
adc
rolb
loope
sbbl
xchg
jbe
sub
pop
push
les
popa
icebp
jmp
sub
inc
adc
shll
inc
fidivrs
push
pop
ds
test
cmp
into
adc
push
jmp
std
push
sarl
jb
mov
push
out
popa
iret
and
inc
jae
mov
clc
mov
sub
jecxz
in
dec
pop
xchg
std
cmp
out
pop
jecxz
push
push
test
lcall
adc
inc
adc
mov
mov
sub
and
inc
push
cmc
jns
repz
jb
insb
loopne
jo
pop
push
ret
ret
popf
mov
mov
xchg
mov
les
dec
sbb
adc
or
dec
idiv
insl
idiv
lahf
fcomp
daa
stc
mov
sahf
aam
add
xlat
aaa
adc
xchg
movsb
push
inc
jg
push
jo
cwtl
adc
mov
fisubrs
xchg
xor
imul
aam
out
add
adc
jle
pushfw
insb
dec
xchg
js
adc
pop
adc
out
and
xsha1
cmpsb
or
inc
pop
ret
cli
imul
fldenv
mov
loopnew
movsb
mov
pop
push
js
jmp
fwait
lock
stos
xchg
mov
pop
mov
push
xchg
push
outsb
mulb
jb
pushf
test
push
pop
mov
push
lea
xor
cli
jl
lds
imul
and
test
and
inc
xchg
push
push
rcr
iret
mov
out
jp
mov
scas
or
fs
xor
out
ret
cmp
fldt
sbb
xchg
xchg
or
lahf
fiaddl
push
push
test
lret
out
orl
out
add
xlat
ss
je
jae
mov
or
cmp
pop
rcrb
ret
mov
shll
je
push
mov
lods
mov
daa
mov
pushf
add
fildl
dec
cltd
push
sbbb
ljmp
roll
mov
ficoms
add
cmp
fstps
fiadds
mov
cmpsb
mov
ret
repnz
lock
pop
cmovle
int3
add
add
ljmp
and
cltd
and
cmp
sub
ret
mov
jge
wrmsr
lock
je
fcomps
andb
inc
mov
dec
xchg
sbb
scas
adc
test
lock
sti
add
dec
test
shl
pop
adc
dec
das
jae
repnz
fists
lret
sbb
or
arpl
push
pop
add
ja
mov
in
cmp
pop
mov
fstps
inc
mov
stos
in
std
cmp
xchg
imul
lcall
pop
addb
push
mov
pop
push
rorb
jo
fmuls
pushf
ss
cld
push
dec
aaa
dec
pop
repnz
fs
stos
push
mov
cli
mov
ficoms
and
dec
push
fiaddl
lods
mov
inc
mov
or
jo
inc
std
mov
sub
inc
jl
dec
cmp
push
outsl
push
lret
sub
add
mov
aas
rorl
jnp
int3
fstpt
ret
cmpsb
xor
adc
pop
cmp
shrb
rorl
scas
pop
jmp
cmp
dec
xchg
test
scas
jle
pop
aam
jnp
les
sub
ds
cmpsl
mov
das
jecxz
stos
sbb
insl
push
sub
jmp
outsb
ret
iret
mov
fwait
lods
mov
adc
inc
test
xchg
out
add
cli
xchg
inc
mov
rcrl
xchg
push
ficoms
pushf
orl
sbb
xchg
lret
push
sbb
stc
adc
stos
jnp
ds
push
dec
jge
or
cmc
adc
imul
imul
lea
pop
data16
xchg
jb
or
nop
xchg
jbe
add
or
xchg
push
adc
inc
pop
leave
es
lcall
pushf
cmpsb
in
cld
and
push
cs
jno
inc
lret
scas
pusha
inc
test
cs
roll
cmpsl
lock
jg
dec
add
jp
mov
popa
sahf
imulb
ss
stos
xor
xor
sahf
and
je
shlb
mov
je,pn
mov
addb
jo
sbb
xchg
sahf
sub
and
xchg
mov
jg
cmc
push
and
dec
push
popf
lock
movsb
xchg
add
inc
jge
ret
pop
je
add
mov
pop
pop
stos
ja
pop
test
sbb
mov
xor
dec
loop
mov
outsl
adc
adc
add
pop
and
mov
pop
rolb
repz
decl
adc
ficompl
lock
int3
xor
push
lret
mov
pusha
lds
daa
cmpps
js
xor
int
pop
dec
mov
shlb
and
std
movsl
xor
inc
mov
adc
and
pop
imul
fistpl
int3
fsts
imul
jp,pt
and
adc
nop
outsb
jl
lods
jg
dec
inc
addr16
push
adc
xchg
mov
les
int3
loope
jp
push
movsl
and
xchg
adc
pop
mov
or
jp
xchg
and
lea
addr16
inc
dec
icebp
out
push
mov
leave
push
test
movsl
pmullw
divl
in
divl
mov
or
in
mov
inc
dec
pop
rclb
lret
push
jbe
stos
lods
out
cld
imul
fiadds
adc
jg
add
imul
or
sahf
and
push
imul
mov
push
jp
jg
cmc
imul
sbb
sub
mov
pop
jbe
mov
sbb
cmpl
mov
je
shll
jmp
dec
sbb
jmp
test
mov
jge
inc
in
into
pop
mov
rol
dec
aad
movsb
movl
or
mov
xor
mov
cmpsb
pop
jl
push
pop
shl
inc
in
or
lret
inc
xchg
xor
sbb
xor
and
or
add
movb
daa
adc
ja
stos
push
cwtl
gs
mov
dec
stc
xchg
pop
lds
shlb
mov
loope
xchg
xor
dec
sbb
lock
scas
mov
es
push
mov
scas
in
dec
sbb
pop
sbb
adc
sbb
scas
xchg
faddl
ljmp
clc
stos
adcb
or
dec
sti
jp
cli
pop
lds
jb
sar
aaa
test
cmp
popl
daa
inc
push
cmpsl
push
aas
mov
push
add
mov
push
out
popa
mov
std
pusha
mov
test
inc
dec
scas
sbb
dec
into
xor
enter
fsubrs
fimuls
cmp
and
cli
lock
xorb
mov
shr
or
lods
jo
cmp
mov
test
push
sub
loopne
push
jne
rcll
jne
filds
mov
cmpsb
arpl
or
dec
inc
test
xchg
insb
loop
sub
jp
psubsw
mov
jle
mov
xchg
inc
movsl
ret
sbb
mov
jl
adc
mov
mov
shrb
mov
popl
pushw
add
incb
es
and
xor
cmp
and
xchg
push
fdivl
cmp
out
in
fdivrs
data16
aaa
in
jno
jl
icebp
jo
pop
mov
mov
xlat
mov
jle
inc
imul
jae
dec
outsl
jae
dec
adc
sub
sahf
aas
adc
xchg
xlat
jl
add
test
in
cmp
or
in
dec
mov
mov
push
jno
ror
jle
call
mov
cwtl
sub
out
inc
pop
cltd
pminub
outsl
or
sub
mov
jp
les
hlt
sbb
push
push
test
add
sub
mov
shlb
jge
adc
cmp
and
or
stos
xor
sub
outsl
dec
inc
rcll
fwait
int
push
push
ficoms
call
je
push
fwait
push
call
sbbb
leave
and
lret
cmp
cmp
cmp
adc
jmp
fstl
ret
mov
pop
nop
adc
fwait
hlt
notb
push
ljmp
in
add
loop
inc
ja
jbe
mov
aaa
ss
xor
pop
nop
push
insl
inc
push
fbstp
add
jb
mov
rorl
cli
outsb
int
fnstsw
push
call
adc
xchg
xchg
lds
push
pop
dec
adc
rol
fs
jge
fildl
xor
jne
push
out
xchg
push
scas
pop
call
test
and
xchg
inc
cmp
cmp
adc
sbb
cmc
add
push
ret
xchg
adc
xchg
sub
ret
cmpsb
gs
or
test
add
scas
pushf
std
dec
or
dec
mov
jge
popl
xchg
dec
or
iret
pop
out
mov
stos
in
and
mov
adc
inc
ret
xor
pop
movsb
and
popf
cmpsl
mov
cmp
sar
loop
mov
cmc
sub
out
ret
fbld
in
add
lods
es
and
les
add
jp
loope
mov
inc
jl
test
or
pusha
dec
mov
pop
mov
push
shll
gs
push
or
notl
push
loopne
repnz
mov
cmp
mov
add
loope
sahf
cmp
mov
or
es
inc
sbb
lods
inc
cmpsb
pop
push
int3
pop
or
jmp
mov
mov
mov
rclb
jecxz
es
xchg
and
loop
clc
sub
cmp
mov
cwtl
adc
xor
les
sub
in
and
inc
movsb
aas
jge
std
call
scas
or
ja
js
jg
push
or
push
rcrl
std
nop
mov
push
mov
aam
pushf
lcall
cmp
mov
test
lock
adc
mov
xchg
call
or
pand
push
inc
adc
xchg
fnsave
sub
test
outsl
dec
mov
jns
xor
jge
adc
enter
js
popa
lret
jge
inc
xchg
std
mov
dec
xadd
pop
insb
test
push
nop
insb
mov
cmp
xor
vaddpd
add
sbb
or
in
out
sub
xor
inc
inc
dec
or
or
insl
jbe
or
call
push
push
mov
push
and
jno
push
cmp
fisttpl
clc
mov
or
push
xchg
mov
lahf
fidivrl
repnz
loop
call
sarl
and
mov
inc
or
bound
fcompl
mov
cltd
mov
add
push
and
push
mov
jnp
ret
adc
in
jl
inc
add
loopne
ret
lret
dec
jp
fadds
pop
stc
fcomp
push
mov
adc
dec
xor
js
std
jge
mov
dec
daa
dec
pop
fucomi
pop
aam
imul
dec
int3
push
aas
enter
sbb
push
pop
add
inc
cmp
adc
xchg
out
add
dec
fwait
cmp
xor
pop
lea
sbb
inc
add
inc
push
pop
sub
ficoml
and
push
addb
setno
cs
sub
push
sub
cmp
pop
jns
shrb
movsb
cmpb
add
dec
sub
arpl
stos
or
testl
pop
es
loop
sbb
add
push
and
pop
mov
stos
and
mov
mov
test
mov
cmpsb
push
mov
pop
dec
movsb
push
inc
out
sbb
out
jb
stos
scas
jle
and
aam
and
mov
inc
cmp
pop
in
pop
xor
out
aad
invd
mov
test
test
mov
mov
fsts
dec
xor
scas
adc
pushf
mov
pop
mov
movsl
push
cmp
sub
sbb
mov
fiaddl
cld
jne
in
es
pop
ljmp
cmp
cmpsb
fildll
insl
mov
sub
mov
bound
jno
pop
punpcklwd
and
fdivr
sub
cmp
into
adcb
icebp
sbb
sub
push
pop
aad
sub
dec
daa
push
loope
shrl
or
jl
cld
push
xor
jb
loop
add
push
inc
fdiv
mov
mov
mov
or
test
mov
mov
mov
movsb
mov
lea
lea
and
jno
cmp
loopne
sub
out
bound
push
push
sti
mov
insb
call
incb
inc
or
pop
mov
popa
int3
sbb
jge
jge
xchg
mov
cmp
dec
cmp
les
lahf
movsb
sbb
xchg
dec
add
hlt
dec
icebp
inc
xchg
sbb
into
mov
hlt
push
adc
pusha
orb
sub
add
cmp
out
and
js
mov
insl
mov
jo
and
clc
pushf
push
pop
jnp
lock
fstpl
sbb
loope
xchg
and
push
roll
std
push
mov
add
add
xorl
jmp
clc
mov
mov
fs
movsl
dec
rorb
call
cmpsb
jo
mov
repz
sbb
push
mov
rcll
and
mov
cmp
roll
adc
pop
mov
out
mov
sub
and
mov
inc
dec
push
das
mov
pop
fstp
outsl
lds
xor
mov
lahf
push
push
or
mov
sub
arpl
cmp
std
cmp
xlat
mov
sub
push
mov
adc
pop
mov
negl
or
scas
and
fwait
cltd
sbb
cmp
sub
add
outsl
jmp
repz
ss
mov
cmp
data16
cli
cmpl
and
xor
outsb
inc
jg
xchg
scas
jle
mov
dec
test
fwait
adc
cmp
pusha
loopne
decl
cmpsl
mov
shlb
orl
inc
dec
mul
in
xlat
xchg
std
sub
mov
loopne
push
mov
jnp
xorb
orl
sbb
jb
dec
into
xor
sub
insb
mov
jg
insl
xchg
pop
testl
out
add
out
push
test
insb
mov
lea
jmp
fstl
cmpsb
cmpsb
fs
fcomps
mull
nop
or
inc
inc
test
xchg
xor
lods
repnz
pop
test
adcl
jg
push
stos
dec
adc
lock
mov
lock
cmc
mov
xor
fdivrs
pushf
mov
std
and
loopne
pop
cmpsl
cmc
or
dec
aaa
aam
xchg
enter
push
arpl
ret
popf
and
sarl
xchg
mov
cmp
or
popa
push
xor
push
dec
adc
cli
sqrtps
sub
push
adc
pop
dec
das
int
push
out
mov
loopne
dec
popf
bound
sbb
xchg
cld
adc
mov
pop
out
inc
outsl
add
mov
add
aas
and
rorb
cmp
xchg
mov
mov
pusha
cmp
divl
dec
pushf
jno
lcall
lret
je
dec
call
cld
mov
jge
or
sub
add
addr16
hlt
sbb
movsl
fld
outsb
test
fsubrl
jo
daa
test
loop
add
ret
aad
mov
jmp
shrl
pop
jo
repz
mov
adc
jle
mov
push
push
insb
int3
out
mov
popa
movsl
mov
push
addb
fnstcw
and
mov
pop
rol
sbb
pop
and
xlat
pop
packuswb
adc
rcrb
pop
inc
test
push
mov
hlt
js
inc
xor
sbb
aad
clc
cmpsb
push
xor
fmulp
xchg
pop
daa
mov
ja
movsl
jbe
int3
loope
jecxz
lea
push
jo
outsb
repz
push
shrb
add
sti
mov
inc
mov
pop
dec
pop
shlb
jle
jo
sbb
mov
push
fsubrl
mov
mov
mov
or
mov
mov
pusha
pushf
adc
inc
aad
stos
mov
and
jecxz
sub
or
push
add
push
pop
cmpsl
push
ja
ret
aaa
or
or
jo
push
popa
cli
les
adc
leave
push
cmp
and
dec
jecxz
repnz
ljmp
xor
mov
jnp
sbb
or
adc
inc
add
adc
cmpsl
cmp
rcll
inc
add
jl
add
jge
movsb
push
cmp
cmp
add
lret
mov
mov
inc
or
ljmp
mov
pusha
sub
xlat
push
pushl
sbb
mov
arpl
lods
xor
lods
not
sub
or
sbb
lods
jg
es
lock
jmp
pop
outsl
add
push
xchg
std
dec
push
inc
cwtl
sub
and
cmp
in
call
stc
push
sbbb
dec
mov
jge
das
mov
cld
stos
and
call
push
das
push
cmp
adc
sbb
or
mov
fmuls
lods
cmpsl
add
clc
loop
repz
sahf
js
xor
xor
dec
cmpb
pop
cmpsb
popa
and
sbb
jo
mov
je
sahf
and
jp
rcrl
and
loope
test
jns
sub
mov
jle
and
nop
mov
bound
lcall
in
add
add
xor
aam
test
setl
into
and
add
aad
sahf
outsb
xor
fdivrs
test
dec
clc
lods
push
add
lea
shl
jae
out
cmp
mov
jecxz
dec
mov
imul
jecxz
aaa
ret
cmp
jp
inc
pop
inc
dec
cmpsl
xchg
sub
sub
inc
bound
repnz
into
testl
jb
push
cmpsl
imul
mov
jecxz
cmc
jo
sbb
lea
add
cmp
out
push
or
jae
push
shr
push
imul
pop
shrb
loop
jo
cmpsb
sbb
jmp
rclb
mov
adc
out
clc
and
jno
push
fs
cmpsb
mov
sbb
out
xor
push
xchg
shrl
stc
rolb
addr16
jbe
fwait
bound
sahf
sub
jl
cwtl
dec
insl
mov
stos
scas
adc
sub
nop
fcmovnb
cmp
fs
jb
inc
pusha
hlt
sbb
inc
cmpsl
leave
push
mov
xchg
add
das
xor
pop
add
push
adc
mov
push
jle
mov
push
data16
adc
or
lds
outsb
cwtl
js
or
jne
sbb
jns
pop
sbb
outsl
and
jno
mov
sbb
rcll
lds
sub
dec
mov
popf
sub
scas
insb
jl
and
outsb
and
sub
cmc
in
daa
loopne
pop
cmpsl
ss
cmp
outsb
cmp
cmpsb
sub
add
pop
mov
dec
dec
gs
push
ret
sub
lods
arpl
rcr
lds
add
inc
loope
pop
inc
dec
xor
mov
push
jmp
mov
iret
aas
push
add
sub
cld
shlb
or
lods
or
mov
pop
dec
sbb
in
pop
and
std
mov
inc
ss
dec
add
pop
in
push
cmp
pop
pop
fwait
aam
fwait
sbb
movsb
shll
add
out
push
repnz
imul
aam
cmpl
leave
sub
es
or
inc
adcb
sbb
add
pushf
movsl
iret
arpl
lods
outsb
pusha
es
pusha
inc
jp
dec
cld
std
sbb
mov
mov
outsb
pop
lahf
aad
mov
cmpl
adc
pop
ret
cmp
test
xorl
mov
call
nop
popa
mov
aaa
sbb
imul
mov
pop
cmp
gs
popf
fs
ret
movsl
loop
or
pop
jnp
inc
or
sub
jle
aaa
das
xor
push
xor
or
xor
ljmp
sbb
mov
mov
add
jp
dec
push
mov
lds
js
ljmp
cmpsb
cld
les
popa
mov
fsubrl
pop
mov
inc
and
xor
pop
add
xor
fs
lcall
xor
add
or
mov
movsb
push
cs
addr16
mov
xor
mov
cmc
push
jo
decl
lds
jmp
cmp
imul
dec
push
in
xchg
inc
xor
aas
lcall
addl
mov
outsl
sti
clc
fucom
loope
mov
in
mov
push
xlat
add
les
inc
sub
sbb
inc
ret
es
push
repz
aad
push
add
xchg
movsb
add
push
mov
or
iret
inc
scas
stos
imul
adc
scas
and
cwtl
xor
xchg
lods
or
lock
cli
mov
sbb
and
pop
and
test
das
cwtl
cmp
idivb
loopne
sub
inc
inc
jl
dec
sti
pop
mov
xor
cmp
arpl
je
pop
in
jp
add
sarl
inc
shll
mov
cli
jg
adc
ficomps
loop
push
movsl
pushf
cmp
or
ret
outsl
mov
pop
mov
sbb
push
push
mov
aad
into
xor
insb
lods
ror
loope
sbb
jae
test
adc
or
mov
add
loop
dec
ljmp
aad
lea
push
rcr
jge
rcrl
cmp
sub
shrb
push
fists
jge
scas
mov
or
mov
adc
push
adc
insb
loopne
dec
xorl
sub
ret
cmpsl
fsubl
pop
sbb
sbb
adc
int3
sahf
in
lds
ja
adcb
leave
xor
mov
mov
bound
lock
lea
loop
mov
stos
or
std
icebp
inc
popl
jg
push
jl
and
mov
sub
aam
jno
cmc
or
xorw
cli
pop
pop
loop
repz
pusha
and
test
fisttpl
mov
xor
inc
test
fadds
sti
adc
pop
adc
mov
lret
cmp
addl
lods
sbb
js
in
rolb
imul
lods
pop
push
sbb
mov
call
xlat
xor
pop
cmp
add
std
mov
out
and
fs
dec
pop
loop
into
or
sbb
je
dec
or
pop
insl
daa
aad
lahf
ljmp
cmp
sub
mov
dec
sarb
cmp
jle
nopl
xor
inc
sbb
mov
rclb
icebp
push
ret
xor
cmp
das
jns
dec
out
aas
xor
pop
shll
push
lcall
das
jnp
inc
mov
and
fwait
and
jbe
movsl
ds
aam
test
add
shl
scas
pop
loopne
jl
repnz
into
test
gs
int
pop
pop
sbb
and
pop
xlat
clc
xor
inc
test
sub
jg
push
cmpsb
loopne
pop
nop
jb
lret
push
mov
aad
xchg
in
mov
out
stos
cmpsl
push
push
lds
push
xor
push
inc
dec
imul
stos
xor
add
dec
lock
adc
call
dec
fldcw
adc
xorl
out
sub
inc
mov
or
in
adc
movsb
pop
cltd
push
adc
dec
imul
loopne
and
sar
adc
leave
fcmovnu
loop
sbb
sti
mov
add
adc
loope
cmpb
mov
cmp
daa
nop
imul
out
lahf
push
pop
sbb
adc
cs
inc
orb
lock
or
ljmp
sub
movsb
cmc
leave
call
lcall
xor
jae
pop
ljmp
xchg
imul
xchg
int
ficoms
insl
mov
pusha
rcll
push
lods
les
add
ret
xor
lahf
cmp
cs
xor
add
popf
int
adc
sbb
jecxz
xchg
pop
outsl
jg
lahf
cmpsb
xchg
or
pop
aas
or
outsb
mov
pop
movsl
dec
mov
jns
iret
shrb
adc
loope
mov
push
pop
add
btsl
nop
inc
push
cmpsl
shr
mov
mov
lods
inc
shll
add
jp
sbb
inc
aaa
cmp
add
hlt
cmc
icebp
lock
aam
push
add
inc
fnstsw
out
sbb
mov
dec
ret
xchg
xor
addr16
dec
mov
pcmpgtd
dec
fs
jecxz
je
xchg
out
dec
mov
test
inc
les
xchg
mov
or
sub
loope
adc
or
andb
mov
movsl
ja
ret
dec
pop
sub
mov
xor
ljmp
sbb
stos
dec
mov
sbb
outsb
mov
and
mov
mov
fstp
movl
outsb
dec
aam
sbb
push
ljmp
pusha
mov
mov
loop
ror
push
adc
js
xchg
mov
cmp
add
push
pop
push
js
jp
mov
mov
test
fisubrl
cmp
shll
aas
and
jne
test
sub
mov
imul
cmp
push
stos
jmp
rcrl
je
push
in
mov
fcoms
inc
imul
mov
sub
pop
mov
lahf
jb
or
ljmp
fisubl
mov
jno
dec
cmp
sub
jecxz
pop
jle
loope
shlb
mov
pop
std
iret
loope
push
push
out
dec
pop
add
mov
lret
scas
xor
fs
cmp
ljmp
pop
fsubs
imul
leave
xor
sti
mov
cld
ss
or
fwait
add
and
xor
lods
dec
jno
scas
and
lods
das
aad
repnz
sahf
mov
stc
lahf
fmuls
mov
inc
and
push
clc
jge
xlat
xor
or
or
mov
sarb
sub
inc
call
bound
shl
insb
pop
mov
mov
roll
pop
pop
dec
insl
mov
fiadds
and
adc
jl
mov
rorl
ja
cmpsl
pop
adc
jl
bound
xchg
imul
repz
push
and
mov
mov
xchg
dec
mov
mov
cmp
jae
pop
sbb
pop
mov
jnp
cmp
pop
push
mov
outsl
or
mov
and
enter
aas
jo
mov
enter
adc
ret
push
outsl
add
jnp
lret
rorb
xor
push
sahf
cwtl
lret
sub
sbb
bound
push
pop
push
jle
push
pop
xchg
inc
xchg
pop
fstpl
popa
add
mov
pop
mov
push
add
sub
and
jns
xchg
mov
inc
mov
mov
mov
sbb
cmp
lea
mov
and
int
insl
or
and
jg
scas
or
or
jmp
aad
xchg
add
mov
inc
jge
jno
inc
dec
adc
xchg
jl
std
sbb
mov
inc
adc
xor
sbb
fs
and
mov
pusha
xor
gs
jns
or
cld
aam
sti
adc
aaa
lock
sbb
jo
sub
pop
add
paddsb
xchg
orb
iret
mov
ljmp
cmc
dec
and
das
testb
aaa
out
cmc
lahf
pusha
mov
mov
pop
stos
popa
insb
pop
loopne
inc
jb
std
and
ljmp
lea
adc
lds
data16
jo
pop
fadds
sti
test
mul
mov
pop
loop
cli
sub
sbb
push
out
mov
jle
inc
adc
adc
sub
xchg
push
cwtl
or
add
sbb
in
test
clc
jp
pop
adcl
mov
or
dec
add
sbb
push
pop
pop
pushf
xor
and
and
cmc
adc
push
pop
inc
dec
add
pop
loopne
in
xor
fnstsw
adc
sub
inc
loope
insb
xor
mov
in
into
jmp
pop
call
ficoms
out
add
inc
bound
jbe
inc
aas
lea
xor
mov
cmp
jae
mov
rcrl
inc
xor
je
xor
or
clc
xor
push
lock
inc
jp
dec
sub
push
xchg
mov
pop
icebp
adc
dec
into
popa
mov
loopne
pop
sbb
insl
inc
movsb
outsb
xchg
push
jno
mov
call
jg
sub
push
xchg
dec
fnsave
lret
out
test
cmp
test
test
andb
mov
and
cmp
ret
cli
mov
push
mov
mov
pop
nop
jge
pop
movsb
lds
cmc
add
add
lahf
in
ss
inc
fldl
outsl
sahf
add
lock
mov
daa
or
mov
push
adc
hlt
mov
aas
shll
cmp
push
mov
stos
inc
fstps
and
loop
cmp
outsb
mov
push
pop
testb
test
jno
and
adc
mov
pop
loop
mov
sahf
dec
or
xchg
rcrl
je
call
cmp
add
sub
sub
or
imul
sbb
sbbl
stos
inc
cmc
lret
push
mov
mov
outsl
push
andb
mov
and
xchg
or
add
add
mov
cld
mov
push
sbb
sbb
cmp
add
sub
inc
dec
loopne
in
push
sbb
push
insl
sbb
jp
cmp
inc
ss
dec
xor
test
repz
sbb
sub
xor
testb
scas
dec
cli
add
cmp
adc
jmp
sbb
inc
repz
fadd
xlat
hlt
repz
or
and
xlat
add
arpl
mov
pop
or
pop
xchg
call
lea
push
clc
add
lahf
dec
lret
icebp
mov
rorl
inc
push
jne
rdtsc
cmp
xchg
mov
pusha
nop
mov
and
divb
mov
insl
cmp
sub
mov
fwait
adc
or
mov
scas
icebp
fs
add
aaa
jle
jnp
lock
sbb
sub
mov
bound
inc
cs
inc
aaa
fcomps
push
sbb
sbbl
in
mov
sub
add
lds
jbe
sub
test
ret
es
and
inc
imul
das
mov
lods
enter
jecxz
sub
inc
mov
sbb
dec
test
cld
je
sbb
push
cmp
pavgb
inc
dec
sti
je
fs
test
add
mov
popf
notb
jno
add
pop
lock
jmp
stos
cltd
or
loop
xchg
and
cmc
mov
stc
call
and
jmp
sti
ss
add
daa
add
push
sub
nop
lods
add
clc
fisttpll
cltd
rcrb
push
in
push
ret
test
sbb
mov
aam
mov
jecxz
popa
negl
sbb
jl
ret
adc
rclb
cmp
fcoml
push
fld
jmp
xor
sub
jge
dec
inc
sbb
xchg
and
jo
push
aad
add
sbb
fsubs
or
mov
push
aaa
mov
hlt
ret
or
sbbb
adc
adc
jbe
xchg
cmpsl
repz
loopne
push
insb
bound
add
fidivs
add
jnp
pusha
sub
loop
add
arpl
push
add
pushf
ret
pop
popa
loopne
mov
test
jg
fisubs
jg
sbb
sbb
sbb
fwait
mov
add
shl
shl
pushf
and
movsl
ljmp
dec
lds
ds
dec
sar
and
jecxz
lock
dec
pop
insb
pop
push
mov
adc
ljmp
mul
jge
in
dec
jmp
adc
sub
in
or
mov
sub
mov
adc
stos
gs
adc
jmp
jne
ret
lahf
xor
das
jge
rol
xchg
and
push
or
pop
les
mov
pop
jmp
jle
iret
lret
xor
push
in
add
xor
adc
sarb
pop
adc
aam
mov
jno
std
popf
sbb
sub
or
mov
loope
repnz
pop
inc
test
pop
repnz
scas
fwait
lret
mov
inc
xchg
pusha
movsl
hlt
cmp
push
inc
out
sbb
enter
adc
mov
dec
and
or
xorb
mov
inc
xor
xchg
insb
aad
mov
xchg
test
daa
sbb
jge
or
xor
add
pop
call
andl
js
hlt
orb
pop
daa
ja
add
pop
in
cmpsl
popa
jle
xor
cmpb
cmpsl
adc
inc
adc
push
mov
rolb
imul
lret
call
xchg
xchg
out
cli
lock
push
push
enter
xchg
nop
outsb
or
call
call
bound
pop
arpl
push
in
sar
in
adc
xchg
fnstcw
imul
pushf
push
dec
andps
xlat
inc
pop
sahf
push
int3
daa
jbe
mov
jecxz
mov
les
imul
cmp
adc
aam
cli
dec
cmpb
test
insb
mov
out
int3
ss
push
inc
daa
stos
aaa
mov
push
mov
push
inc
dec
cmpsl
adc
stos
movntps
push
mov
movsb
sarl
cmp
adc
push
push
test
outsl
pop
cli
jp
je
shll
lock
lret
outsb
inc
inc
sbb
or
cltd
movsb
rcrl
xchg
rolb
jb
xchg
ret
push
jge
mov
mov
pop
adc
xor
adc
jl
fistps
test
fldt
cmp
and
aam
mov
aaa
jb
adc
stos
xchg
pmulhw
das
push
add
das
xor
inc
pop
lock
insl
and
add
or
sub
dec
lret
jne
lcall
mov
in
sub
mov
jne
cmp
icebp
in
mov
insb
scas
jno
adc
int3
xchg
cmc
dec
xabort
dec
sbb
iret
cmpsb
xchg
mov
call
mov
cld
scas
loope
lock
pop
adc
cmpsb
dec
roll
test
or
pop
decb
xchg
jecxz
pop
jo
and
adc
popa
and
into
jecxz
clc
pop
dec
adc
frstor
mov
push
jecxz
adc
or
arpl
shlb
insb
cmp
add
je
aad
cmp
add
subl
inc
cltd
inc
icebp
xchg
pop
mov
addl
lods
xchg
xchg
fcompl
repnz
add
cltd
dec
movb
les
mov
jno
test
outsl
cmpsl
stos
ret
sub
shll
mov
cmp
daa
cmpsl
dec
inc
jl
nop
std
daa
jb
les
loopne
sbb
push
in
and
inc
lds
xlat
xor
xor
jl
add
mov
adc
popl
popf
loopne
notl
inc
push
adc
jb
enter
sbb
leave
pmulhuw
push
stos
inc
and
movsb
lret
cmpb
dec
pop
pop
pushf
shr
xlat
xor
js
mov
hlt
jmp
cmpl
sbb
mov
pop
push
out
inc
lret
adc
clc
mov
out
adc
clc
lods
push
je
std
pop
subl
sub
lock
sbb
jecxz
and
rorl
clc
push
loope
sub
aaa
in
aad
and
loop
scas
movsl
or
jo
imul
xor
jp
addr16
cli
mov
orl
aas
mov
les
mov
mov
xor
jg
popf
test
add
push
pusha
sbb
xchg
in
mov
xchg
mov
and
int
pop
inc
ds
dec
ret
inc
shll
mov
imul
icebp
and
cld
mov
out
pop
les
call
inc
pusha
push
sub
int3
insl
loopne
rcrl
test
fstp
push
mov
jmp
sahf
sub
sub
data16
add
push
pop
or
mul
mov
rorl
cmpsb
xchg
cmp
push
mov
sub
rorb
iret
sbb
data16
pop
and
jae
xor
and
mov
xchg
add
test
mov
or
cwtl
scas
cli
add
into
xor
cmp
add
ja
mov
inc
add
pop
fiaddl
cmp
addr16
pop
inc
mov
rclb
mov
movb
jg
jle
imul
lds
lods
xchg
sbb
rorb
std
aam
lods
jno
or
push
bound
sbb
push
sbb
in
lock
adcl
pusha
scas
popa
mov
or
les
adc
fs
jle
add
popf
dec
daa
icebp
adc
dec
inc
pop
add
jp
push
cmp
xor
out
mov
xchg
sub
cmp
arpl
or
sbb
adc
outsb
loop
mov
mov
cmp
push
test
inc
outsb
cmpsl
in
jl
xchg
mov
inc
xor
std
in
in
sub
cli
pusha
cmpsl
jmp
sahf
out
add
negl
mov
push
and
push
lret
pop
push
fldcw
sti
in
mov
adc
dec
inc
dec
sbb
mov
call
and
popf
orl
movsl
movsb
ds
sub
xlat
xor
push
xor
cmc
fcmovbe
imul
push
push
js
lock
jmp
fiaddl
xor
aam
jp
jecxz
push
jl
adc
jecxz
add
push
sahf
mov
lcall
cmp
and
sbb
push
jmp
cmc
test
push
repnz
insl
mov
add
arpl
pop
fldenv
mov
testb
ficompl
cmpsl
xor
push
stos
dec
pop
loope
arpl
dec
in
arpl
inc
xchg
adc
add
into
popa
out
dec
imul
nop
xchg
xchg
jmp
adc
cld
daa
lret
mov
mov
and
pop
inc
mov
rorb
test
les
pop
jae
or
xchg
cmpsb
in
sbb
add
test
and
add
mov
ror
sbb
clc
push
cmpsb
pop
aas
enter
adc
sbb
pop
pop
pop
xlat
or
sub
xlat
add
or
mov
jb
dec
xchg
pop
sub
test
push
frstor
or
adc
pushf
call
mov
mov
imul
and
mov
in
in
inc
mov
lea
or
sub
loop
dec
sbb
stos
das
lock
jae
loope
jnp
sub
jg
movsl
and
sbbb
or
jo
shr
mov
and
inc
pusha
jnp
or
je
daa
flds
fisttpl
push
dec
add
sbb
inc
das
or
cmc
in
js
out
icebp
push
aaa
aam
dec
push
cwtl
and
inc
dec
clc
inc
mov
dec
sbb
dec
lahf
or
popf
out
mov
rolb
pop
in
sbb
cmpsb
mov
mov
fnsave
cwtl
rcll
jbe
jle
mov
in
addl
or
jecxz
pushl
push
minps
sahf
jne
mov
imul
push
lcall
in
xchg
js
add
jno
shl
inc
adc
out
jecxz
sbb
mov
lcall
cmp
sbb
jo
jns
shr
rorl
jnp
xchg
xorl
mov
stos
mov
movsb
adcl
repz
in
mov
nop
cmp
jnp
mov
xchg
xor
lods
and
das
pushf
xlat
sbb
enter
mov
stc
test
and
jnp
rcll
pop
jbe
mov
outsb
jmp
imul
pop
xchg
mov
hlt
insb
ret
pop
popa
je
pushf
divb
fidivl
test
cmpsl
sub
sub
pop
in
aam
test
mov
pop
rolb
dec
repnz
orb
push
mov
jg
clc
lcall
hlt
lcall
and
pop
ret
add
or
mov
jmp
sbb
xor
cmc
lahf
ret
fsubrs
rolb
dec
cmp
mov
movsl
fwait
adc
jge
aad
add
sub
lahf
ficoms
and
pop
ljmp
out
adc
enter
jns
jno
fwait
pusha
test
cwtl
mov
mov
fdiv
mov
roll
fistps
mov
test
mov
push
aas
clc
bound
adc
inc
std
xchg
push
loop
and
lahf
cmc
repnz
popa
add
loope
and
fwait
mov
mov
jno
lahf
fsubl
int
add
jno
mov
mov
ljmp
sub
mov
sub
mov
adcb
popf
adc
imulb
lea
jg
pop
test
outsb
cmpsl
ret
jmp
mov
mov
inc
add
sti
roll
push
add
lds
pop
xor
sbb
mov
jno
cmp
or
shl
ljmp
lods
data16
mov
test
loopne
mov
push
xor
insb
dec
jmp
je
negl
and
mov
lret
pop
rcrl
add
and
push
out
leave
adc
sub
add
shl
pop
jno
sub
cmpsb
mov
cltd
cmp
jl
fisttpl
mov
cmp
aam
mov
stc
add
jns
xor
sbb
inc
pop
push
add
cli
fwait
and
dec
lods
sbb
ret
fdivl
pop
cmpl
sub
rcr
lret
xor
lret
add
sbb
lds
or
bound
idivb
xchg
mov
js
mov
mov
cmp
mov
test
adc
sub
sbbl
popf
xor
or
in
mov
dec
pop
rorl
je
scas
out
jl
jmp
inc
sub
scas
push
mov
add
test
subb
icebp
jmp
add
sub
dec
aad
pop
jl
and
sub
scas
pop
sbb
adc
loop
jno
lds
and
in
in
lds
sbb
cmp
stos
dec
js
mov
push
adcl
add
lret
add
cmp
mov
sub
xor
flds
fcomp
lea
sub
inc
fs
and
jno
xchg
int3
out
cmp
inc
dec
outsl
push
outsb
ss
dec
push
push
or
rcl
mov
lds
leave
sbb
jno
jmp
adc
je
push
inc
cld
test
and
aaa
jb
je
sbb
shlb
mov
dec
pop
orb
fcoml
inc
cld
xor
mov
inc
movsb
adc
imul
pusha
icebp
dec
je
das
popa
nop
mov
bound
adc
ret
pop
pop
adc
shrb
mov
test
mov
adc
stos
push
les
scas
add
icebp
mov
popf
mov
out
mov
ror
pop
cmp
imul
cmc
sub
add
pusha
pusha
sub
push
mov
mov
cmp
lcall
inc
dec
rorb
jp
imul
and
jne
call
adc
imul
push
aaa
jg
das
dec
mov
sub
push
inc
mov
mov
jg
sub
in
mov
add
mov
mov
xor
dec
inc
leave
ret
push
inc
dec
add
inc
rcrl
neg
cmp
sti
or
leave
ret
mov
add
dec
outsb
inc
test
dec
inc
xchg
sub
fldcw
add
add
out
ja
push
sti
fisttpl
imul
mov
pushl
mov
inc
add
inc
outsb
aaa
loop
inc
cmp
mov
add
and
jb
scas
ss
jnp
mov
pop
aaa
insb
ljmp
in
test
jne
rcrl
dec
insl
inc
fildl
std
pushl
add
pop
fiadds
int3
dec
push
jbe
mov
ret
dec
jo
mov
adc
inc
sub
pop
andl
sub
push
dec
xor
out
ret
insb
inc
lock
out
insl
jns
jg
call
stos
xor
fistpl
pop
cli
ret
dec
sbb
push
shr
call
clc
add
push
out
push
sub
ds
push
jo
add
push
arpl
adc
jge
inc
jbe
dec
pop
xor
or
insb
ja
dec
inc
icebp
push
call
mov
pop
xor
mov
add
lahf
loope
bound
add
cmp
bound
sbbb
mov
imul
loop
xchg
inc
jb
dec
jo
dec
incb
ret
ss
fistpl
mov
jo
dec
int3
stc
mov
xor
dec
mov
jb
mov
cwtl
push
repnz
jbe,pt
je
shlb
dec
add
sbb
repnz
ljmp
push
push
jno
dec
loopne
push
call
jmp
shlb
mov
push
setne
xchg
inc
mov
out
lldt
inc
mov
xchg
outsb
mov
xlat
inc
outsl
dec
jo
pop
sbb
ret
sarb
sub
jl
lahf
push
fiadds
inc
shll
fs
dec
inc
data16
mov
fcoml
test
in
add
sbb
pop
mov
jae
arpl
jmp
jne
mov
mov
push
test
xor
dec
add
push
in
push
push
jg
in
subb
add
dec
and
lea
dec
js
aas
int
inc
clc
xor
jle
add
fs
jns
or
ret
push
pop
cmp
sbb
or
inc
cmp
sub
add
mov
jg
push
lea
push
gs
xor
and
jae
aam
lods
xor
jo
repz
or
mov
shrb
xchg
mov
repz
mov
add
inc
dec
add
dec
test
dec
xor
xor
es
sahf
jmp
hlt
inc
gs
repnz
negl
inc
jl
neg
icebp
push
aas
test
push
pop
mov
inc
xor
sbb
cli
inc
inc
imul
mov
add
dec
pop
push
fs
push
mov
setbe
je
xchg
loop
call
mov
insl
popa
fisubrl
mov
pop
popa
aaa
dec
pop
pop
xor
arpl
mov
loop
lahf
jbe
rcrl
mov
sarl
push
mov
jle
add
adcb
clc
xchg
filds
push
dec
and
movsl
dec
add
js
sbb
mov
lods
imul
cli
dec
sti
inc
ret
cwtl
dec
addl
fstl
addr16
jg
rorl
ss
inc
ret
push
sahf
fldt
fs
push
xchg
push
push
test
dec
pop
lds
enter
jbe
inc
ret
test
mov
pop
addr16
xor
dec
mov
mov
dec
dec
hlt
cmp
rcrl
dec
xor
cmp
push
inc
inc
add
sbb
outsb
lock
mov
popa
jns
push
cmpb
add
lret
in
dec
test
add
mov
popf
inc
roll
xor
xchg
jle
out
in
mov
inc
fimull
mov
fsubr
push
cmp
dec
xor
fimull
inc
gs
mov
inc
push
xor
inc
loopne
insl
ss
push
sbb
ret
inc
imul
enter
out
inc
add
pop
push
pop
mov
jne
pop
add
add
test
adc
repz
or
jnp
fdivp
jg
popf
adc
push
dec
inc
push
inc
je
dec
push
xor
jns
or
push
lds
mov
push
push
outsb
inc
lea
mov
mov
loop
sar
pop
dec
int3
bound
jmp
js
mov
ss
pop
adc
sbb
mov
push
in
pushf
mov
jb
cld
push
lret
inc
cmp
add
or
jne
loope
push
add
pop
pop
dec
mov
loopne
mov
movsb
bound
lock
xchg
push
dec
push
and
sbb
sbb
mov
ljmp
xor
test
fcmovb
sbb
jle
rclb
adc
cmp
add
jge
jns
cs
dec
fidivl
aaa
jl
iret
test
inc
js
and
xor
push
pop
jl
push
test
call
pop
xor
adc
pop
xor
add
mov
xchg
cwtl
jo
xor
ss
or
jbe
pmulhuw
imul
inc
dec
add
push
loop
addl
or
ljmp
xchg
imul
test
mov
xchg
inc
movl
dec
dec
jbe
mov
push
push
mov
dec
lods
rcll
dec
add
mov
push
mov
push
insl
pop
dec
mov
call
ret
gs
inc
popa
add
shl
xlat
aas
or
push
mov
push
lret
jbe
popa
push
and
push
imul
xrelease
cwtl
mov
dec
dec
adc
dec
lret
bound
jle
jb
jge
insb
cld
cli
repz
pop
push
dec
ret
xchg
loop
rorl
jnp
inc
ret
std
outsb
dec
or
inc
push
pushf
inc
fcmove
test
lret
xor
jne
push
dec
push
cli
pop
outsb
bound
stc
dec
addb
mov
cs
dec
out
inc
dec
push
jns
outsb
push
mov
jb
jmp
fldl
xchg
shrb
xor
js
cld
or
dec
cld
in
sarb
dec
jg
push
loopne
test
insl
add
jbe
add
in
inc
aam
test
lock
aaa
push
jmp
fs
push
es
mov
sub
push
out
add
callw
pop
pop
jo
dec
fldenv
lock
xchg
inc
hlt
loope
sbb
jle
mov
mov
pusha
mov
dec
and
fadds
fcmovu
ret
fimuls
sahf
sti
int3
ss
mov
xlat
daa
jp
hlt
test
loop
jl
adc
or
inc
insl
inc
add
jo
lock
push
or
sbb
xor
inc
or
jbe
inc
fs
mov
xorb
outsb
inc
inc
dec
mov
jge
inc
sti
ret
lcall
lret
je
imul
je
sarb
arpl
dec
pop
mov
adc
push
js
clc
adc
imul
add
sbb
push
cli
inc
mov
sbb
sbb
imul
jle
jo
hlt
push
or
sub
xchg
call
push
gs
xor
adc
xchg
and
add
cmpsl
or
loop
fs
cld
test
add
movb
shlb
daa
rolb
in
push
push
push
in
shlb
adcb
addr16
mov
fs
push
fs
dec
mov
mov
jge
jae
xor
lret
clc
cli
orb
inc
loopne
push
jp
mov
dec
roll
adc
int3
jnp
and
loop
outsb
inc
lret
dec
dec
ss
arpl
or
inc
xchg
fdivrs
or
mov
ret
pop
sub
pusha
aaa
dec
xor
ret
jne
pop
cmp
adc
je
dec
clc
add
outsb
inc
inc
add
scas
inc
mov
push
mov
dec
lock
imul
mov
inc
push
xacquire
dec
ss
cmp
add
sub
enter
pop
xor
xor
add
nop
dec
push
cmpsb
dec
and
ljmp
mov
push
inc
push
shlb
sub
mov
clc
test
push
ja
sbb
inc
jle
shll
jl
addr16
dec
jae
dec
add
fimuls
ret
push
dec
insl
dec
pop
push
bound
sbb
lock
movl
push
pop
jns
adc
loopne
add
adc
jp
adc
js
push
jno
jmp
xor
adc
inc
bound
jb
ds
cmc
sub
cmp
inc
jp
dec
sbb
dec
mov
add
mov
les
jb
xchg
pop
or
lahf
iret
jnp
jge
mov
xlat
mov
daa
xor
arpl
mov
inc
dec
arpl
idiv
push
cmp
or
jns
inc
and
dec
hlt
ja
push
test
clc
inc
mov
sbb
cld
mov
add
ret
adc
jle
test
push
adc
or
loopne
push
and
pusha
push
dec
insl
adc
pop
inc
outsb
xor
xchg
pop
outsl
clc
loopne
adc
xchg
and
xchg
dec
lds
stc
mov
jne
mov
xlat
lods
or
sarb
push
dec
sbb
push
dec
test
in
mov
dec
dec
fs
dec
adc
push
fucom
xor
dec
dec
js
lea
pop
or
out
sub
cmp
outsb
cmp
in
sbb
outsl
je
and
lock
jae
pop
ficomps
xor
cs
adc
push
jo
and
add
data16
in
mov
push
arpl
mov
insb
scas
inc
xchg
outsb
push
xor
xchg
in
mov
jns
ret
mov
ljmp
dec
js
icebp
cwtl
xor
inc
ficoms
arpl
inc
jns
dec
lret
dec
jb
stos
jecxz
add
push
and
leave
test
jg
inc
push
mov
xor
xor
push
inc
ja
jge
sub
push
push
xor
iret
jg
push
dec
jbe
push
xor
pop
inc
dec
xor
mov
and
pop
fs
inc
adc
iret
loop
clc
and
sub
jmp
dec
dec
jne
mov
xorl
dec
jns,pn
jns
mov
addr16
popf
arpl
xorb
mov
mov
xor
cmc
jg
dec
push
mov
stos
sar
pop
cmpsb
cmpsl
cmpl
push
idivl
push
push
lods
into
sbbl
stc
aad
fistpl
inc
insb
ret
inc
es
dec
ret
aas
lcall
pusha
repnz
idivb
int3
push
push
js
sub
cwtl
insb
and
dec
rorb
test
push
jb
or
dec
aas
mov
cli
sub
je
mov
pop
dec
dec
gs
push
aas
pop
push
add
cmp
iret
mov
inc
nop
xchg
aad
rclb
arpl
fisttpll
adc
jle
ss
cmp
push
adc
sbb
fstps
xchg
call
ss
inc
test
and
ss
jmp
push
inc
fisubrl
ret
popl
out
jge
cmp
inc
cwtl
ds
js
or
je
ficoml
je
inc
aaa
mov
dec
arpl
inc
push
clc
popl
mov
bound
cld
aam
xchg
dec
push
xor
mov
call
cmp
pusha
lahf
push
fs
popa
popf
shrb
dec
inc
cmp
js
es
inc
dec
dec
pop
inc
ja
pushf
adc
pop
pop
inc
xor
inc
jno
push
xchg
sub
add
ds
mov
js
dec
js
jge
jg
lret
fcoms
popa
dec
inc
ja
loope
pushf
inc
mov
ja
lret
push
pop
cmp
movb
add
cmp
addr16
dec
out
insb
push
je
xor
jae
call
fdivs
int3
shll
scas
sbb
icebp
xor
push
inc
push
sub
inc
inc
fcompl
es
ret
dec
xor
and
and
cmp
and
out
addr16
xor
inc
xor
sub
lret
test
xchg
jo
cwtl
mov
mov
ret
dec
xchg
sahf
outsl
negb
addr16
mov
aaa
dec
fisubl
inc
dec
pop
cld
lods
push
inc
fimull
pop
or
std
mov
jbe
int3
adc
loopne
ret
dec
dec
outsl
adc
test
sti
inc
enter
inc
adc
and
es
dec
mov
sub
cmp
loopne
adc
rorl
inc
push
cmpb
jecxz
sbbb
outsl
jo
js
cmp
pop
mov
push
cmp
fdivl
xchg
sub
ror
inc
daa
sbb
rcrb
cmp
xchg
xor
insl
jae
jne
mov
adc
sbb
xor
adc
pop
xor
add
pushf
xchg
aam
xchg
xor
aad
push
mov
xchg
enter
mov
push
mov
push
mov
add
pushf
std
ret
xchg
jbe
push
addb
dec
jbe
inc
insl
cld
cmp
repnz
in
mov
cmpsl
in
dec
pop
push
lret
in
outsl
mov
mov
dec
jbe
in
inc
jo
pop
loopne
inc
xor
inc
addr16
rcrb
lods
ret
inc
daa
aad
push
push
xchg
pop
push
outsl
stos
push
cmp
jp
xor
mov
jbe
inc
clc
fstps
aad
mov
xchg
inc
cmp
xor
push
popa
push
mov
in
inc
pushf
xchg
dec
cmpsl
aam
push
xchg
jne
jns
mov
lods
pop
jl
push
inc
dec
ss
testb
dec
ret
jne
mov
sbb
movsb
mov
add
jno
cmp
jo
outsb
xor
jg
jmp
sub
inc
insb
out
push
pop
mov
rclb
imul
sbb
dec
xor
cmp
addr16
dec
cmp
or
imul
dec
clc
outsb
xchg
push
add
cmp
push
dec
mov
mov
clc
ljmp
testb
sbb
ds
jl
call
mov
push
inc
into
xor
test
and
dec
push
loop
js
cmp
pop
jl
lret
insl
inc
loopne
loopne
sbb
push
dec
lods
jae
aam
lods
fildll
push
pop
push
insl
cmp
xor
add
or
push
ret
push
push
ds
iret
inc
dec
leave
xor
lock
xchg
and
adc
enter
push
stos
mov
repnz
enter
ja
rcr
xor
movl
js
push
dec
dec
adc
ret
sub
mov
push
mov
roll
push
insb
inc
insb
push
mov
js
dec
dec
mov
or
push
imul
lods
test
push
xchg
xchg
loopne
call
dec
inc
les
mov
fs
scas
mov
jo
jp
pushf
dec
call
pop
or
mov
testb
cmp
inc
dec
cmpsl
test
add
je
aaa
orl
lock
iret
mov
shlb
out
xlat
xor
decl
inc
pusha
idivl
fdivs
cmpsb
push
sbb
mov
into
les
inc
cmp
xchg
xor
push
inc
jae
cmp
sub
cmp
pop
arpl
push
flds
xor
dec
cmp
fistps
mov
cmpsb
ljmp
jno
loop
je
push
mov
imul
sub
dec
in
loop
and
push
je
inc
sbb
sarb
je
push
or
mov
cli
dec
inc
je
scas
jl
push
dec
call
jae
dec
jo
loop
sti
aaa
adc
clc
int3
push
mov
xchg
lret
mov
dec
insl
inc
push
pop
inc
or
addr16
rorl
incl
dec
jbe
ja
push
push
adc
fisubl
movsb
movsl
mov
mov
testb
es
pushf
test
jns
ljmp
push
ss
sub
add
cmp
dec
xchg
rorl
test
push
mov
xor
pop
lods
shlb
jo
xor
inc
clc
inc
test
dec
cmp
outsl
mov
push
jb
outsl
jo
test
cwtl
push
mov
fs
mov
jo
adc
mov
ret
cmc
mov
jne
call
dec
inc
data16
dec
sbb
clc
xlat
decb
fnstenv
dec
xchg
dec
adc
push
movsb
lret
mov
lock
sbb
ret
add
inc
dec
dec
adc
out
add
pop
clc
cmp
push
push
movsl
jle
bound
xor
fmull
outsl
push
cmp
inc
jne
or
or
jp
lock
inc
push
xchg
out
stos
or
lods
ficomps
stos
or
mov
dec
pop
mov
cltd
push
shlb
mov
xlat
and
js
test
jno
mov
inc
dec
inc
lret
dec
fildl
outsb
pop
inc
rdpmc
jg
and
outsl
jle
cld
inc
mov
dec
outsl
cmp
push
push
mov
mov
push
push
and
cli
pop
in
test
add
push
mov
push
dec
jmp
jecxz
movsl
push
loopne
xor
xchg
dec
push
stos
rcll
lret
clc
mov
cvttps2pi
pop
push
mov
cmp
repnz
movsb
ret
add
adc
test
inc
inc
mull
and
mov
or
arpl
or
dec
arpl
mov
push
psllq
lret
sub
and
pop
and
cmp
pop
lcall
jmp
cmpb
ds
jne
std
out
imul
ret
xor
adc
dec
sub
mov
es
xor
lret
cltd
pop
es
ss
push
jns
jae
sub
jo
imul
xor
inc
adc
cld
pop
push
push
dec
add
dec
clc
dec
or
xor
ljmp
cld
adc
inc
inc
outsl
gs
js
mov
test
lret
mov
ljmp
cmp
push
cwtl
push
ret
add
in
pop
cmpsl
pop
cmp
imul
mov
bnd
add
pop
ljmp
cmpsl
jp
adc
cmp
pop
push
roll
adc
je
pop
cwtl
cmp
jno
dec
pop
push
push
and
dec
dec
leave
cmp
cmpsl
int3
mov
add
aam
push
shlb
inc
std
add
ja
push
xor
jne
xor
insb
pop
jns
add
sub
test
std
push
lahf
out
inc
push
inc
ja
aam
es
je
pop
test
ror
mov
push
push
ds
pop
xchg
test
mov
mov
roll
int3
ret
inc
inc
jne
mov
xlat
inc
jnp
dec
inc
push
sub
ja
bound
sbb
fwait
inc
xor
hlt
or
push
inc
mov
xor
push
sub
push
mov
negl
add
add
add
clc
imul
cmp
je
dec
add
addr16
test
add
mov
inc
pop
or
cmp
cs
inc
loope
sbb
pop
mov
enter
repnz
or
sahf
push
and
dec
nop
pushl
push
iret
push
mov
popa
push
loope
sti
cmc
add
pusha
into
xor
ja
popa
add
scas
xchg
jp
pop
mov
push
adc
pop
lock
ror
ret
push
pop
dec
push
insb
incb
je
mov
push
dec
push
nop
pushf
xchg
rol
or
dec
idiv
inc
rclb
mov
push
arpl
lock
mov
jb
loopne
push
and
cmpsl
pop
scas
inc
dec
shrl
adc
push
sti
aam
int3
push
rcl
fmuls
or
adc
push
pop
outsb
adc
inc
arpl
test
mov
xchg
push
insb
dec
push
pop
or
jbe
jmp
mov
or
push
aaa
fsubrs
inc
js
inc
dec
mov
ret
add
cli
inc
push
mov
add
faddl
push
cmp
add
pop
dec
mov
ret
jae
imul
push
xlat
ss
jbe
in
push
popa
aaa
stc
jmp
inc
xchg
push
push
enter
push
xchg
bound
fidivrs
xchg
sub
fists
and
into
xchg
cmp
cld
jmp
fs
shr
out
outsb
xor
icebp
dec
outsb
insb
imul
jle
je
clc
and
lret
bound
imul
adc
or
scas
insb
sbb
jp
mov
mov
sti
mov
inc
imul
jbe
push
mov
sub
hlt
dec
jle
insl
mov
add
add
dec
jb
bound
cmp
stos
pop
xchg
dec
cmp
jecxz
dec
mov
cmp
hlt
add
js
sahf
xchg
dec
jo
mov
pusha
pop
ljmp
lock
sahf
insb
push
ja
nop
xor
dec
cmp
xor
shll
into
ret
add
test
mov
fdivl
mov
pop
add
add
xor
in
inc
sub
cmp
fisubrs
mov
ljmp
dec
mov
ror
ljmp
adc
fisttps
mov
or
insl
mov
test
outsb
out
jo
cs
mov
push
xchg
cmp
mov
aam
jo
adc
call
push
mov
ds
stc
dec
lahf
loopne
cld
test
arpl
sub
inc
scas
jmp
dec
sbb
outsb
xor
mov
push
jo
dec
mov
ret
shrb
cld
add
rol
add
xor
int3
cmpsb
dec
lds
movsb
lahf
bound
ret
push
dec
mov
dec
lods
mov
jecxz
pushf
xor
dec
mov
in
xlat
ret
cmp
pop
fs
inc
pop
js
mov
push
inc
out
inc
mov
or
rcrb
pop
dec
bound
outsb
inc
imul
xor
jne
insl
notl
inc
test
test
stc
stos
addr16
push
dec
es
movsl
mov
inc
decl
jne
inc
rolb
xor
inc
hlt
jbe
lods
or
xchg
outsb
fisubrl
xchg
jle
jb
gs
jbe
inc
stos
add
adc
or
cmpsl
pop
hlt
popa
push
push
jb
push
push
push
lods
add
test
dec
xor
dec
aad
jp
jae
insl
inc
mov
or
shr
insl
mov
cld
push
lret
mov
push
ja
jb
inc
popa
int3
decb
pop
sbb
insb
jbe
mov
popf
cmpb
push
js
popa
jno
pop
cli
in
and
push
add
push
push
ja
sub
jne
adc
rcrl
inc
into
stos
mov
aad
jne
je
push
mov
push
dec
insb
jns
test
mov
push
inc
arpl
popa
push
mov
add
dec
addr16
push
push
inc
dec
cmp
jo
fisubrs
cmp
fistpll
cmp
es
inc
mov
mov
adc
mov
ret
push
iret
in
adc
inc
dec
push
push
add
push
lea
loope
xchg
and
js
call
dec
push
dec
sub
push
or
and
sub
ret
data16
push
addr16
test
test
loope
push
xor
rolb
add
pop
cld
mov
add
inc
push
sahf
movsb
das
jbe
sbb
dec
dec
jnp
js
adc
popa
clc
outsb
dec
inc
jg
push
inc
call
not
out
push
imul
mov
cmp
cmp
pop
clc
push
jns
in
loopne
push
sub
push
push
test
inc
mov
ret
pop
pop
imul
scas
sub
xchg
out
xchg
roll
je
js
jb
pushf
orl
std
dec
inc
and
adc
mov
aas
dec
cld
xchg
addb
flds
mov
mov
xor
push
inc
fidivs
jp
imul
pusha
arpl
push
mov
loope
dec
jle
pushf
addr16
pushf
dec
outsb
inc
sarl
pop
or
lret
inc
mov
jne
ret
insb
arpl
outsl
bound
test
lods
inc
jns
rorb
lcall
js
or
push
mov
push
loope
adc
fadds
adc
jo
in
add
push
dec
or
sbb
or
orb
out
push
pop
adc
stos
adc
mov
and
sub
add
stc
mov
inc
jmp
adc
or
push
insb
cmp
sbb
jnp
jae
dec
and
push
popa
mov
lods
scas
jp
adc
imul
addr16
sahf
sub
in
popf
es
dec
jns
dec
dec
dec
in
sarl
ja
xor
outsl
xorb
inc
imul
sub
jo
out
ficoml
inc
out
insb
outsl
add
mov
in
ljmp
shll
cmpsb
imul
arpl
insb
push
pop
out
divb
sub
mov
dec
sbb
sbb
pop
aas
dec
clc
mov
loopne
push
add
es
adc
add
dec
in
lods
sub
push
mov
push
push
and
jb
arpl
push
jb
xorb
adc
xor
popw
push
insl
mov
jle
adc
add
cmpsb
add
aas
daa
sub
arpl
fiadds
pop
add
int3
lock
test
push
ss
fldl
filds
das
lcall
hlt
cmpsb
aad
mov
fbstp
les
mov
lahf
loop
inc
jle
es
add
stos
push
inc
push
jae
jnp
push
add
nop
fldl
fidivrl
push
into
test
add
mov
fiadds
lahf
dec
jecxz
ja
fnstenv
or
js
dec
insb
loopne
cmpb
or
pop
dec
sub
xlat
cld
enter
push
insl
adc
adc
out
shl
xor
xor
imul
lock
or
pop
inc
jg
sub
je
sbb
je
outsb
mov
aaa
push
pop
push
jo
ss
cmpsl
inc
outsb
je
xlat
enter
push
inc
scas
fcom
jnp
inc
mov
push
mov
ljmp
inc
movsb
add
add
sbb
nop
in
dec
test
jl
aaa
xchg
mov
cmp
push
push
notb
mov
adc
xor
sti
pop
mov
lahf
out
mov
adc
mov
sbb
mov
cmpsl
add
fdivs
repnz
and
outsb
mov
insb
sbb
push
aas
popf
cli
push
or
rorl
sub
decl
bound
ja
mov
std
popf
cmp
or
data16
call
hlt
push
mov
sub
and
loop
fistl
outsl
int
imul
mov
sahf
shrl
call
ds
pusha
mov
lahf
adc
ret
loopne
xchg
repz
scas
aam
stc
aas
sbb
lcall
outsb
lret
sub
int
movsb
cld
pop
mov
mov
inc
movsb
ljmp
cmp
decl
push
fs
pushf
mov
mov
in
or
push
ds
cld
sbb
in
and
lcall
jbe
jmp
dec
testb
sbb
pop
subl
cmp
sub
stc
test
adc
sub
push
gs
idiv
outsl
mov
popa
arpl
xor
xor
pop
push
and
and
notl
or
frstor
incl
mov
xchg
int3
sub
pop
mov
pop
sub
fwait
inc
jmp
movsl
jmp
jns
xor
jbe
repz
sub
mov
data16
inc
or
dec
sub
inc
jecxz
jmp
fistpll
test
mov
shrl
icebp
sbb
xor
clc
popa
xchg
imul
ret
icebp
dec
lods
or
inc
sbb
mov
mov
daa
outsb
jo
mov
lret
mov
shl
jmp
xchg
inc
adc
shll
js
cltd
cmpsl
add
rolb
adc
xchg
lock
repnz
vcvttpd2dqx
lds
jg
mov
in
mov
ds
out
pop
push
test
mov
mov
pop
pop
xchg
inc
jmp
stc
or
mov
int
js
out
add
rcrl
mov
and
push
mov
pop
cwtl
mov
push
lea
je
scas
int3
fistpll
mov
lea
dec
xchg
out
mov
jge
icebp
cmp
std
ljmp
and
scas
push
lcall
sub
out
mov
je
js
add
lock
xor
arpl
xchg
int
out
cmp
daa
inc
insb
test
lock
loopne
mov
lcall
or
mov
xor
pop
ja
jp
add
inc
and
pop
sbb
cmc
scas
cmc
push
mov
in
push
mov
jo
cwtl
pop
mov
jbe
push
ficoml
and
jbe
push
mov
jp
testl
dec
xchg
fs
fwait
push
push
mov
mov
test
sub
hlt
add
divl
movsb
and
mov
loop
push
mov
divl
sub
mov
fstpt
cmp
lret
sub
mov
jb
push
push
xor
clc
and
add
outsb
dec
aas
clc
dec
das
push
sub
cltd
fisttps
stos
cli
repz
push
mov
mov
mov
nop
aaa
js
cmpsb
fwait
lcall
outsb
push
rolb
cmp
cld
jge
or
ds
loop
mov
sub
xor
jmp
mov
cwtl
ljmp
add
out
xor
sub
scas
clc
out
clc
ret
or
xor
push
or
push
mov
in
fnstsw
adc
sbb
inc
xor
jne
outsl
and
pop
cmp
mov
pop
loopne
mov
mov
jle
in
xchg
lods
and
cmp
mov
sbb
mov
mov
pushf
and
pop
mov
inc
push
ds
scas
in
mov
lock
cli
push
cmp
ss
lods
repnz
mov
leave
mov
adc
loop
adc
sub
fists
jmp
cmpsb
aaa
and
push
ja
ds
std
adc
xor
mov
cmp
enter
pushf
jmp
and
out
fmull
jecxz
shrl
ljmp
sbb
outsb
sbb
icebp
and
sbb
std
add
inc
jmp
jnp
outsl
int3
sub
jp
lds
clc
aaa
mov
cmp
inc
fisubl
aaa
out
jp
xchg
and
pop
mov
repnz
xchg
inc
lds
out
cwtl
fildll
cmc
xor
in
push
dec
sahf
in
mov
das
dec
shll
mov
mov
cli
push
push
and
mov
rol
xchg
shl
push
mov
cli
outsl
cs
daa
xchg
xchg
mov
jno
add
and
add
jl
xchg
jne
rol
fisubrl
mov
and
dec
xchg
jnp
ret
and
fwait
jns
jg
iret
or
mov
push
fisubrl
jno
jae
inc
outsl
lock
js
shll
sub
scas
dec
pavgb
ret
loop
cmp
ds
das
push
mov
dec
outsl
mov
pop
pop
mov
add
mov
movsl
lods
mov
jl
fdivrp
stc
repnz
ret
movsb
iret
daa
inc
or
mov
sub
jg
pop
sbb
shll
js
mov
pop
pop
pusha
mov
lcall
dec
mov
and
mov
push
and
inc
push
adc
mov
adc
icebp
jmp
pop
mov
gs
clc
cmpsb
rcr
mov
jnp
test
and
dec
cmp
jmp
inc
push
leave
mov
and
xor
dec
mov
int
outsb
adc
clc
pushf
loopne
clc
or
stos
outsl
xchg
ficoml
add
fimull
pop
cld
mov
sub
mov
pop
push
sbb
rcrl
clc
xchg
aaa
jns
pop
add
jnp
and
or
outsb
cld
jl
loop
sub
cmc
and
fwait
mov
mov
nop
pop
sub
rcrl
repnz
repz
inc
sbb
jg
mov
cwtl
cltd
push
mov
mov
or
out
sbb
jb
pusha
mov
and
pop
and
incl
icebp
cmp
and
and
pop
push
mov
and
out
or
fwait
push
xor
jno
outsb
cld
pop
cmpl
mov
stc
sbb
xor
jg
lret
mov
or
pushf
pop
xchg
lahf
mov
mov
sub
jp
int3
rcrb
sub
and
call
add
mov
into
pusha
mov
addr16
mov
mov
push
cmp
sbb
pop
clc
add
push
mov
rcr
xor
cmp
sbb
dec
iret
or
mov
jg
add
lock
stos
and
inc
sbb
dec
sub
aam
pop
mov
into
jge
add
icebp
xchg
loopne
gs
pop
mov
push
add
mov
ljmp
test
mov
into
clc
cwtl
xchg
je
rcrb
pop
push
sti
jo
xor
inc
inc
clc
adc
push
inc
out
subl
outsb
pop
loope
pop
std
int3
incl
ret
inc
icebp
xlat
cld
pop
and
out
add
push
rol
inc
lds
rorl
adc
decb
notl
shrb
xchg
test
pop
icebp
adc
pop
jo
sbb
out
scas
call
flds
or
push
lock
mov
enter
xchg
adc
xor
xchg
jecxz
aaa
loope
out
and
xor
jmp
xchg
out
lock
add
push
enter
outsb
loopne
jns
in
mov
xorb
dec
stc
dec
cmc
jns
or
fs
in
jmp
add
fisubl
push
pusha
sbb
outsl
out
insl
stc
add
test
inc
mov
fcompl
pop
cmp
sbb
and
ljmp
mov
icebp
divl
es
hlt
inc
jnp
adc
add
outsb
add
incl
cmpsb
aas
fisubl
neg
dec
stos
mov
mov
popf
push
push
and
loopne
loop
iret
adc
into
fnstsw
outsb
mov
cmc
das
ficompl
add
pop
mov
dec
mov
cltd
scas
or
sbb
jp
aas
clc
stc
insl
fidivs
adc
dec
pop
jo
mov
stos
pop
mov
dec
fisttps
mov
xchg
js
outsb
adc
add
lock
testl
sbb
mov
outsl
js
pusha
cmpsl
and
add
dec
add
sub
fcomip
xor
or
aaa
pop
jle
add
mov
mov
and
mulb
inc
shlb
lods
call
cmc
add
imul
mov
xchg
into
push
std
mov
sbb
sbb
dec
in
add
mov
aad
add
jnp
fdivl
jp
jns
xchg
push
mov
push
clc
lahf
aaa
outsb
push
mov
inc
lret
popf
adc
clc
adc
jp
push
das
cli
pop
and
jbe
sub
cltd
idivl
cmp
fcompl
jmpw
mov
scas
mov
pop
jnp
jge
andb
xchg
jo
pop
mov
and
adc
or
cmpb
mov
rorb
dec
rcrl
fiadds
xchg
add
cmpsb
mov
mov
or
push
inc
inc
mov
push
mov
push
cli
lahf
sub
hlt
add
ret
dec
pop
repz
or
movlhps
outsb
pop
loopne
xchg
js
xchg
in
mov
xchg
mov
das
inc
cmp
ja
mov
in
and
fidivl
and
mov
push
push
andps
ja
bound
adc
movsb
in
je
outsl
cld
dec
inc
xchg
sbb
xchg
decl
es
xchg
mov
or
cmp
and
cli
addb
adc
pop
adc
out
inc
daa
adc
xchg
das
cld
nop
lods
loop
bound
ret
mov
std
insb
jmp
or
mov
jle
adc
mov
shll
test
pop
pusha
pop
pop
and
mov
nop
add
sbb
pop
xorb
scas
insl
test
jg
das
int
ss
sub
popa
adc
out
jno
pop
push
mov
repnz
aad
inc
and
inc
mov
inc
add
dec
xchg
pop
jl
jge
dec
sbb
push
mov
incl
cld
sbb
pop
lahf
inc
jg
test
and
add
add
shl
mov
mov
jmp
pop
sub
mov
int3
or
cmp
add
lret
jmp
fdivr
aad
cmp
xor
divl
push
and
sahf
ficoms
jmp
repz
outsb
or
pop
jle
aam
or
adcb
pusha
and
insl
scas
imul
shll
mov
and
dec
test
bound
lock
lods
mov
insb
jg
stc
sbb
mov
outsb
rolb
shrl
cs
add
stos
jmp
jg
mov
rclb
inc
xorb
dec
out
outsl
adc
out
out
push
jne
xchg
or
dec
and
stos
mov
in
icebp
mov
add
scas
loope
js
jo
insb
leave
adc
and
loopne
fstp
xor
pop
ficoml
inc
out
mov
and
jnp
push
orl
in
inc
es
adc
clc
cmpsl
pop
nop
icebp
in
mov
pop
outsb
shll
add
test
xor
and
fisubl
and
notl
mov
jp
lahf
dec
inc
sbb
fwait
mov
inc
or
aas
sahf
jno
stos
inc
jae
insb
add
or
jmp
scas
inc
inc
nop
lcall
cld
and
cld
lock
inc
mov
lea
push
addb
rclb
test
outsb
fsubr
dec
dec
sub
dec
cmc
dec
and
add
and
outsb
mov
popa
ss
mov
lea
inc
push
test
mov
sbb
mov
repz
addr16
mov
pop
leave
imul
insb
outsb
enter
mov
repz
aaa
fnstsw
or
outsb
cmp
push
test
cmp
cld
lret
xchg
pop
pop
mov
cs
call
sbb
jo
add
fstps
mov
dec
fsubp
push
fsubs
push
xchg
cmp
sbb
push
aas
rorb
mov
nop
pop
das
and
lcall
dec
adc
lret
sbb
push
es
cmpsl
push
mov
jnp
cld
pop
stc
add
popf
mov
pop
mov
xchg
xchg
insl
jmp
filds
out
pop
inc
dec
mov
jge
mov
cmp
ds
rol
stos
out
nop
adc
inc
call
test
mov
std
xchg
mov
movsl
stos
jns
sub
out
or
out
mov
pop
add
dec
sbb
pop
or
clc
idivb
pop
clc
xchg
pusha
jno
dec
and
pop
sti
ficoml
lret
call
and
jecxz
loope
jle
aaa
mov
clc
daa
jne
daa
xchg
mov
sbb
sub
mov
push
cltd
push
xchg
dec
cmp
jmp
daa
mov
push
nop
pop
mov
sub
out
mov
lock
jge
shlb
xor
arpl
add
mov
btc
and
inc
repz
adc
stc
cld
add
lahf
inc
sahf
pop
scas
jmp
push
cmp
pop
xchg
sarb
mov
lock
scas
mov
push
mov
test
data16
scas
lahf
leave
outsb
aas
mov
mov
in
outsb
out
nop
push
and
or
fcoms
ja
loope
js
loop
sub
push
jmp
mov
cltd
xor
xchg
fdivrp
or
and
popa
mov
test
stos
xchg
xchg
cmp
sbb
pop
nop
mov
mov
adc
inc
jo
pop
cmp
loop
inc
mov
jns
mov
pop
mov
jecxz
and
mov
stc
mov
pushf
into
jns
sub
mov
mov
hlt
push
dec
mov
movsl
ja
outsb
and
pop
and
pop
jmp
sbb
dec
mov
rcrb
mov
rolb
fcompl
int
outsb
outsb
loopne
scas
les
fnstenv
mov
rorb
lahf
xchg
fxch
rolb
add
jl
add
test
push
rcrl
mov
aam
mov
sbb
enter
dec
ret
mov
sbb
outsb
es
mov
sub
out
push
test
mov
pop
mov
out
arpl
psrad
in
sbb
or
das
mov
jb
loopne
nop
mov
mov
test
repz
mov
push
adc
cli
inc
inc
rclb
sar
cmpsb
add
inc
cli
repz
popa
xchg
xlat
outsb
xchg
mov
cmp
pop
ja
mov
dec
xchg
icebp
call
loop
loop
inc
pop
mov
sub
repz
mov
dec
mov
in
lock
icebp
adc
in
sub
sbb
mov
shll
addr16
push
inc
jge
xchg
outsb
sub
mov
iret
test
mov
jbe
push
dec
shrb
aas
push
mov
or
into
aaa
xchg
and
in
mov
mov
mov
out
jae
lretw
stos
pop
fcoml
inc
fisubrl
add
cs
movsl
or
or
add
push
aas
inc
jns
sbb
inc
sub
jecxz
out
add
mov
movsb
inc
xchg
push
push
pop
and
mov
cmp
aas
or
cs
mov
and
and
mov
dec
push
inc
jmp
popl
pop
loope
jmp
xor
pop
inc
imul
jns
push
sub
pop
pop
sbb
sbb
ss
cmp
out
js
cmpsb
xchg
das
lods
ss
sbb
loopne
or
jmp
jb
push
mov
lret
jns
push
call
cld
sub
bound
and
jns
jl
adc
xchg
stos
dec
mov
push
push
mov
hlt
add
pop
daa
dec
pop
add
mov
mov
mov
ljmp
or
xlat
jge
scas
imul
push
shll
mov
in
nop
add
dec
test
mov
cmp
decb
sbb
cmpsb
in
enter
or
push
push
lds
hlt
fcmovnb
lcall
dec
std
add
pushf
inc
add
jns
std
dec
and
cmpsl
jb
int3
xchg
sub
pop
jle
fmull
pop
push
mov
cmpsb
cmpb
xlat
int
je
roll
mov
jg
xor
test
push
cmp
xrstor
icebp
sub
push
int3
loopne
mov
imul
mov
jp
ja
mov
xor
mov
scas
mov
jmp
stc
fldcw
adc
mov
or
cmp
lds
add
ficoms
pop
daa
jnp
mov
std
cli
mov
repnz
and
in
dec
jl
add
adc
push
jmp
dec
fldenv
mov
adc
inc
outsb
xor
les
sbb
insb
nop
dec
test
es
incb
fistpll
scas
cld
hlt
dec
push
test
les
scas
xor
repnz
fs
and
outsl
lcall
outsl
pop
push
mov
mov
fwait
pop
mov
cltd
popf
dec
mov
das
outsb
incb
fcmovbe
inc
adc
arpl
add
cmpl
movnti
pop
mov
loopne
dec
mov
dec
adc
fwait
mov
dec
sub
jl
mov
mov
and
fdivrs
jns
cld
jns
pop
and
push
aam
pushf
loop
stos
lods
cmp
adc
push
inc
mov
clc
arpl
shl
mov
mov
hlt
xchg
cli
fndisi(8087
aam
cmp
inc
lcall
pop
and
inc
fcmove
jp
and
mov
mov
jb
sub
daa
mov
cmp
icebp
pop
jecxz
and
or
std
cli
aaa
adc
fstp
push
and
inc
sub
lahf
movsl
pop
or
and
dec
mov
jo
add
insb
jecxz
lods
lods
cmc
add
mov
cltd
setne
xchg
aaa
aas
rorb
fcmove
adc
paddd
push
ds
cli
mov
aas
add
mov
loop
ret
dec
ja
add
mov
adc
pop
mov
jl
mov
jmp
gs
add
xchg
outsl
mov
popa
in
mov
or
cmp
xchg
outsl
sub
pop
sub
pop
jg
sysenter
inc
and
movsb
or
nop
dec
jecxz
dec
jg
push
outsl
stos
jg
fnstcw
and
add
xchg
sbb
cmp
add
pop
jmp
cmp
mov
adc
fiaddl
or
aaa
js
add
adcl
dec
jb
clc
js
push
aad
rclb
mov
mov
and
xlat
dec
jae
test
cmp
fisttpl
insb
pushf
or
cmc
sbb
cmpsl
lcall
mov
and
adc
imull
or
mov
lret
inc
cmp
aas
shrb
fcomp
dec
out
push
dec
pop
cmp
mov
xchg
popf
fimuls
std
cmp
loop
xor
xchg
repz
std
mov
cld
cli
xchg
pop
js
outsb
sub
shl
push
fisubrs
scas
pop
pop
mov
fucomip
test
lret
jmp
add
imul
daa
inc
lahf
add
pop
mov
popf
jno
mov
pop
loope
add
call
inc
mov
pop
push
mov
or
mov
rorl
je
rolb
mov
sbb
lock
mov
mov
sub
inc
and
insb
mov
imul
sarb
and
mov
cld
push
data16
loopne
sarb
sub
mov
dec
and
xchg
jle
push
clc
imull
add
push
dec
push
mov
dec
idivl
xchg
jo
cmp
icebp
sbb
jns
lret
ja
scas
enter
imul
int
pop
pop
and
scas
outsb
jnp
mov
nop
jmp
cld
movsb
add
adc
fdivp
iret
sarl
and
mov
push
outsb
dec
mov
popa
pop
dec
shl
push
icebp
xor
mov
ds
push
sbb
and
push
push
dec
test
idiv
inc
jne
dec
out
movsb
mov
jmp
fimuls
stc
add
or
shlb
pop
lods
rcll
push
lock
loopne
or
xchg
nop
dec
mov
jmp
xor
das
arpl
ja
ja
fildl
lods
les
fldpi
pop
xchg
imul
outsb
fidivl
or
xor
dec
incl
mov
stc
jl
mov
push
add
sub
sbb
xor
add
bound
push
and
addl
push
sub
fdivl
pop
mov
push
or
out
inc
push
push
cmp
mov
push
mov
adc
inc
push
add
cmp
in
cmpsb
aas
call
fmull
add
fsubs
test
mov
call
out
and
lahf
lock
mov
jmp
push
sub
sub
adcl
and
jg
mov
inc
and
push
fcoms
jecxz
mov
and
xor
jne
sbb
dec
mov
incl
gs
les
stc
adc
cwtl
mov
pop
adc
dec
inc
fcmovbe
push
shlb
push
insb
enter
mov
stos
jns
nop
repz
jns
and
push
cmp
movl
sar
test
inc
mov
mov
jle
xchg
ret
xor
and
mov
jle
popa
lods
dec
jge
bound
jecxz
mov
pop
push
pop
fimull
scas
outsb
xor
jno
dec
stc
add
icebp
cmc
sbb
movsl
xchg
je
add
xchg
les
loope
sbb
dec
mov
fiadds
or
mov
jno
add
rcrb
in
bound
push
lds
dec
pop
shlb
mov
xchg
and
sub
clc
cmpsb
lea
mov
fisubl
pop
leave
cmpsl
or
xchg
test
ret
xor
decb
sub
and
dec
sub
and
or
sbb
mov
out
testb
and
test
inc
pop
pushl
call
test
or
es
mov
push
pop
and
loope
push
fimuls
jmp
inc
mov
add
pop
imul
dec
push
clc
cs
jg
and
pop
push
dec
ds
gs
ficoml
decl
mov
lret
neg
mov
jge
add
mov
jae
ret
add
mov
lock
sbbl
jno
push
xlat
pop
lods
out
cmc
cmp
and
sub
outsb
mov
and
dec
and
test
jnp
mov
or
fwait
ljmp
fwait
movb
mov
out
outsl
mov
and
push
outsb
or
cmc
mov
jb
repz
mov
lcall
push
push
inc
xchg
adc
push
jge
aas
sbbl
mov
insb
push
dec
xor
dec
js
and
movsb
pop
stos
cld
and
pop
stc
push
mov
lret
stc
mov
adc
xlat
or
outsb
decl
fcmovbe
mov
sbbl
mov
shll
jg
inc
loopne
imul
insb
inc
sub
sbb
aaa
pushl
loop
das
lahf
add
or
add
jb
das
add
jno
pop
and
push
cmpl
xor
daa
pushf
pop
pop
outsb
cmp
push
and
es
cmp
repnz
aam
lahf
out
dec
das
ret
push
js
inc
subl
cmpb
push
cmp
lret
jae
insb
fiadds
mov
xorb
loope
mov
add
cs
inc
push
push
fsts
mov
addl
data16
decb
test
shll
cltd
outsb
mov
push
loop
adc
daa
mov
or
jmp
outsb
xchg
xor
adc
int3
inc
lahf
std
imul
jne
cmp
clc
push
or
sbb
add
fwait
test
les
cmp
jo
dec
mov
dec
and
pop
and
dec
mov
fstps
pop
mov
aaa
filds
mov
jnp
inc
cmp
xor
and
jo
lock
xchg
and
fisubrl
jg
decl
fidivl
xchg
jmp
jae
push
nop
push
leave
adc
bound
mov
test
jbe
xor
jg
inc
scas
loopne
sub
pop
imul
mov
cmp
mov
mov
daa
bnd
leave
jbe
aad
cmpsw
cs
jne
fildll
mov
sahf
es
jmp
add
jl
sbb
xchg
dec
stos
lret
jns
xchg
sarl
test
subl
push
and
dec
adc
and
outsb
cmp
xchg
dec
lods
fcomps
out
sti
rcrl
xlat
xor
inc
and
ja
adc
add
cld
and
pusha
mov
fisubl
test
outsb
cmp
shlb
adc
nop
icebp
mov
int
cwtl
insb
pop
mov
push
add
in
mov
adcl
ficoml
mov
mov
js
jp
bound
gs
lock
jae
mov
or
mov
in
data16
in
call
enter
out
push
shrb
mov
dec
xchg
aaa
add
imul
jg
lahf
inc
std
jg
mov
add
sar
adc
inc
out
scas
or
repnz
fldenv
les
cltd
shrb
sub
inc
icebp
inc
fcoms
cwtl
add
dec
mov
mov
dec
rcr
out
jecxz
cmp
mov
repz
cmc
test
insb
adc
pop
insl
pop
popf
add
scas
shlb
insb
add
clc
dec
stc
dec
jmp
lds
rep
popa
push
inc
adc
mov
adc
or
push
enter
pop
add
aad
aam
sub
rolb
jae
ret
xchg
outsb
mov
orl
xchg
loop
aas
add
jb
jns
fwait
push
incl
fcmovb
push
shrb
aad
sahf
mov
push
aam
lds
fstpt
andl
or
xchg
aas
mov
mov
popf
add
inc
cmpsb
mov
dec
ret
adc
mov
daa
adc
dec
jle
rorb
pop
or
dec
aas
inc
or
outsb
or
repz
scas
mov
and
int3
outsl
or
fcoml
cli
fisttpll
pop
decl
xchg
lock
lcall
xor
mov
ss
ljmp
jle
js
xor
out
push
gs
bound
push
jmp
cmpsb
pop
cmp
js
bound
mov
xor
jae
sub
sbb
dec
nop
push
push
push
and
add
dec
and
cmpsb
and
into
mov
clc
push
dec
or
iret
jge
inc
test
jecxz
int
mov
push
popa
mov
jns
movsl
mov
cmp
negb
jmp
in
and
pop
push
cmp
xchg
ljmp
mov
addb
or
jo
test
dec
in
lret
sub
cmp
sub
add
or
push
fisubrl
lock
fimull
je
imul
fstp
in
fistps
fmuls
mov
lret
out
add
jg
mov
pop
pop
scas
inc
mov
das
and
cmpsl
pop
jmp
mov
in
jnp
jle
dec
mov
and
mov
and
out
or
dec
outsl
ret
pop
mov
xchg
cmc
jmp
iret
outsb
lock
rolb
mov
push
in
jg
xor
fwait
das
xchg
pusha
sub
sub
in
pop
adc
mov
jmp
jmp
cmpl
jle
xor
outsb
adc
inc
mov
dec
scas
int3
in
cwtl
push
jmp
fimull
ja
jle
dec
sub
mov
ret
jl
mov
pop
add
out
xor
xchg
popa
dec
xchg
and
inc
mov
rcl
mov
and
and
das
icebp
add
push
out
push
mov
inc
sbb
shrl
outsl
in
push
jecxz
mov
fs
cli
fnstsw
in
lods
fsubrs
add
test
es
dec
nop
andb
jg
repnz
outsb
push
int
andb
or
inc
clc
imul
pop
mov
and
dec
pop
fiadds
or
mov
mov
in
les
mov
inc
and
add
jne
mov
mov
add
fcmovbe
or
out
lods
es
jecxz
lahf
jg
imul
add
add
mov
dec
and
movsb
lods
mov
dec
fmuls
jle
and
pop
outsb
int3
dec
xor
insl
sbb
sub
clc
xlat
pop
fistpl
and
adc
sbb
mov
sub
sub
scas
nop
or
lock
jle
insb
ds
mov
jg
fmull
xor
mov
sbb
shl
dec
decb
xor
jae
rorl
push
scas
xor
pusha
cltd
mov
jle
mov
and
adc
mov
div
ja
inc
dec
mov
movsb
clc
sbb
lret
cmp
fsubl
add
add
clc
mov
add
mov
add
movsb
fwait
lret
ret
xchg
sub
mov
jns
sbb
je
pop
jmp
aaa
xchg
lods
or
sub
rcl
or
mull
das
fdivs
aam
xchg
test
dec
xor
push
js
lahf
test
dec
lret
pop
loop
cld
adc
ljmp
lret
lock
shr
das
les
outsb
daa
testb
sub
push
aaa
adc
cmc
jb
dec
mov
adcb
aam
pop
icebp
fimuls
cld
push
rclb
popf
push
shll
or
add
mov
lret
pop
loop
cwtl
dec
push
push
pop
add
mov
das
and
dec
fwait
ja
das
insb
mov
popa
cmpsl
ss
jge
add
or
add
mov
jmp
inc
inc
aas
push
ja
jno
in
add
xchg
lods
cmovb
ljmp
cmpsl
pop
or
lock
call
xchg
stos
hlt
insb
mov
pop
loopne
and
ret
sub
sbb
fnstsw
add
cltd
ja
and
mov
mov
push
in
dec
fldl
add
repz
das
shrb
and
inc
cmp
test
cmp
push
mov
adc
outsb
mov
ja
inc
dec
jnp
sbb
rcrb
fisubs
inc
in
es
mov
jmp
es
pop
mov
push
and
pop
and
in
jmp
iret
sbb
adc
jmp
cmpsl
adc
jne
andl
dec
lahf
dec
ret
jbe
xchg
test
mov
pop
fsubp
lret
lods
fldl
in
pop
mov
js
lock
fidivrs
adc
clc
and
les
shrb
movsb
gs
cmp
nop
dec
sbb
dec
ss
pop
outsl
fdivrp
ficoms
and
sbb
ss
movsb
lahf
pop
jp
outsb
dec
inc
xchg
sbb
dec
push
mov
fcomps
stc
jns
pop
pusha
lock
sub
leave
and
fidivs
fidivrs
jo
sub
loopne
divb
push
out
and
mov
pop
mov
insb
movsl
cmovp
or
and
sbb
out
inc
sbb
mov
mov
mov
lea
cmp
xchg
jp
mov
xchg
mov
adc
jg
cmp
cmp
sub
dec
mov
shlb
into
jg
fwait
cmp
inc
icebp
lret
out
sti
pop
mov
mov
xchg
and
mov
ljmp
insb
mov
lock
inc
xchg
push
call
in
lcall
icebp
imul
dec
std
mov
push
pop
push
cld
jbe
das
rclb
inc
mov
mov
clc
jmp
mov
sbb
out
loopne
aas
mov
dec
push
add
fsubl
dec
pop
clc
xchg
popf
mov
popa
cli
push
jo,pn
imul
ljmp
decb
jne
sub
mov
push
xor
add
retw
and
mov
xlat
ret
push
repnz
dec
clc
dec
pop
inc
lret
mov
mov
dec
mov
dec
add
push
push
adc
popf
test
xchg
push
sbb
inc
nop
jle
fwait
lahf
outsb
ficompl
xchg
decb
and
sub
xor
push
mov
cmp
sbbb
in
xchg
aaa
or
add
bound
xor
jecxz
pop
add
adc
mov
sub
arpl
or
dec
mov
pushf
fdivl
xchg
in
out
les
fdivrp
inc
xor
ret
hlt
daa
lock
insb
sahf
mov
pushf
outsb
mov
cmp
inc
jns
xchg
jge
mov
mov
loop
sar
or
dec
ficompl
pusha
movsb
icebp
dec
das
push
mov
nop
inc
jnp
xchg
push
or
imul
jge
cmp
test
xchg
and
es
dec
loop
xchg
xchg
shr
add
inc
and
fucom
xor
arpl
pop
mov
popf
imul
fildl
pop
jg
or
mov
pusha
in
and
pop
push
mov
cmp
in
mov
mov
nop
dec
jp
sbb
data16
js
ret
insb
jmp
cld
je
loopne
dec
add
jae
sub
out
cmpl
or
xchg
pop
dec
add
sub
jg
psrlq
mov
xorb
dec
mov
xor
rorb
and
push
daa
out
iret
insl
jb
jbe
mov
sahf
push
and
and
xor
dec
push
iret
hlt
mov
popl
clc
int
outsb
jp
mov
jb
jge
cmc
fwait
das
shl
sub
push
jno,pt
popa
pop
mov
jo
xor
and
pop
stos
mov
out
dec
push
bound
mov
pop
repz
test
jecxz
pushf
push
and
xchg
call
xchg
sub
xchg
pop
pop
mov
xchg
push
dec
enter
lods
mov
push
inc
ret
test
xchg
mov
xor
add
adc
mov
test
in
fstl
dec
out
mov
mov
mov
push
pop
cmpsl
sti
xchg
dec
mov
lods
fimuls
lock
std
push
sbb
pop
nop
pop
stc
rorl
push
mov
stc
push
adc
or
inc
nop
in
sub
sar
insb
sbb
dec
fwait
push
jecxz
add
insb
or
scas
fidivrl
xchg
popa
push
pushf
xlat
mov
adc
cli
xchg
xchg
std
jae
pop
push
pusha
add
aaa
ljmp
mov
pop
mov
or
das
outsl
mov
mov
enter
sti
insb
pop
adc
lea
add
dec
push
add
ret
fwait
push
mov
xchg
jo
add
and
das
insl
cld
dec
add
mov
sahf
dec
mov
ror
pushf
mov
fistl
jg
pinsrw
xor
testl
sbb
imul
jle
mov
adc
xor
lock
movsb
push
dec
push
add
xor
dec
mov
adc
push
push
shlb
cmp
pop
aam
cmc
or
jle
or
cmp
jnp
lock
xchg
and
xchg
jae
dec
or
add
add
cmp
and
jmp
js
mov
std
shll
int
jg
and
push
or
inc
jl
inc
mov
cmc
sbb
jle
lods
hlt
inc
inc
jp
adc
test
out
xchg
jno
popa
js
aas
ss
arpl
subb
les
lahf
and
dec
mov
add
xchg
add
ljmp
fistpl
mov
cli
or
bound
jl
push
mov
push
aam
loop
fidivrl
popf
lods
add
test
sbb
jne
mov
pop
mov
pop
jo
loopne
mov
daa
jo
add
cmp
inc
aaa
adc
dec
clc
fdiv
frstor
ret
lock
idivl
jns
mov
pop
fadds
addr16
dec
jge
cmp
and
dec
stos
arpl
insb
aaa
mov
outsl
add
and
int3
adc
aas
pminub
dec
jmp
ja
sbbb
dec
rcrb
mov
cwtl
daa
outsl
dec
es
sbb
inc
scas
sub
fcoml
add
mov
scas
mov
add
lcall
out
fmull
out
pop
mov
pop
idivb
in
mov
imul
es
scas
mov
xorb
sbb
fisubrs
ja
sbb
cmovp
pop
loop
mov
int
xchg
dec
incl
inc
jnp
cli
jb
lret
add
outsb
and
sub
push
loop
icebp
inc
jl
pop
sub
das
jp
ss
lock
or
mov
notb
inc
faddl
mov
cld
xchg
pop
jo
mov
jbe
incl
and
jno
sbb
das
outsb
int
jge
loope
dec
lahf
xchg
and
xchg
repnz
pop
clc
out
dec
sub
or
movsl
ret
jb
rcrb
fwait
outsb
xorl
lods
and
adcl
test
pop
hlt
xchg
hlt
cld
mov
and
nop
incl
inc
add
ficoml
and
test
adc
pop
ret
and
enter
pop
mov
mov
mov
in
std
sbb
add
arpl
js
mov
fldcw
rol
orl
sarl
cmp
icebp
mov
ljmp
mov
push
push
and
faddp
xchg
es
add
or
nop
xchg
push
movsl
ja
out
or
dec
push
add
les
sub
mov
pop
movsl
jno
mov
jno
ret
sbb
push
hlt
cld
movsl
pop
scas
les
inc
dec
dec
or
inc
sub
xor
inc
std
and
mov
inc
cld
icebp
inc
fmuls
fdiv
sahf
ret
mov
push
jo
and
roll
and
mov
test
sub
adc
out
mov
std
out
dec
inc
mov
hlt
sti
add
mov
add
fdivrs
add
das
jg
pop
push
leave
dec
dec
mov
int3
aam
lock
insb
sbb
jle
add
cmpsb
imul
pop
or
or
and
fidivl
shlb
loopne
shrl
sahf
pop
and
pushf
add
add
xorl
xchg
and
or
jp
lahf
pop
lods
fsubrs
icebp
add
or
mov
fs
rcl
xor
dec
mov
and
pop
jecxz
mov
push
xchg
jecxz
fwait
lock
add
jl
and
mov
fsubl
fcomi
stos
and
ret
mov
dec
outsl
rolb
fisttpll
fsubr
in
inc
aaa
mov
arpl
mov
outsl
add
mov
in
mov
dec
scas
rolb
mov
stc
cmpsl
mov
nop
mov
and
stos
aaa
lahf
mov
jmp
sbb
fisubrs
repnz
mov
jge
stc
aas
fsubrl
or
sbb
int3
inc
data16
ja
dec
xchg
rolb
add
stc
stos
hlt
mov
lcall
mov
clc
pop
or
aad
add
aam
jno
adcb
outsl
rorb
lahf
push
add
push
loop
mov
cmp
mov
xchg
xchg
and
aam
push
push
std
lahf
cmp
loopne
sub
sti
subl
mov
xchg
mov
add
je,pn
sub
and
imul
std
out
push
fld
cmp
clc
fisubrs
inc
loopne
int3
cmc
outsb
jl
mov
imul
mov
push
leave
inc
loopne
push
int3
cli
inc
les
sub
xchg
xchg
or
jle
cmp
ljmp
cli
rcr
add
out
imul
cwtl
and
adc
add
cld
mov
dec
insb
or
jle
decb
orb
rorl
pop
dec
sti
and
mov
fst
inc
mov
ljmp
decl
mov
fisubl
stos
and
scas
or
mov
mov
push
push
mov
mov
push
pop
xchg
cli
jno
or
push
mov
adc
fadd
xor
push
ljmp
mov
fldcw
pop
dec
in
pushf
mov
or
aaa
add
fstpt
fidivrl
in
push
mov
and
sub
andl
pop
fdivrl
ja
decb
xchg
jge
mov
popl
decb
jmp
add
lahf
mov
jle
mov
jae
add
and
jp
xchg
inc
lock
mov
mov
pop
and
sbb
loopne
adc
jb
inc
notb
ss
nop
or
cmp
adc
add
js
ror
sbb
hlt
das
decl
push
mov
pop
push
aaa
shrl
loopne
faddl
je
repz
clc
and
mov
dec
mov
js
push
pop
clc
iret
xlat
and
or
shlb
call
mov
ja
push
mov
incl
daa
mov
jl
in
xchg
test
and
scas
add
popf
sbb
insb
xchg
and
or
loopne
jb
sub
cs
mov
jp
outsb
mov
and
andl
and
hlt
inc
call
add
push
mov
mov
mov
mov
sahf
in
xor
adc
mov
mov
push
outsl
mulb
jmp
nop
sub
mov
adc
lea
sti
sub
rcrb
xchg
push
jmp
mov
mov
dec
ret
xchg
repz
subb
mov
mov
hlt
insb
sub
out
xchg
sub
arpl
stc
add
ss
loope
mov
fistpll
push
xor
adc
mov
inc
inc
add
shlb
mov
mov
pop
jmp
lock
xchg
movsb
dec
dec
inc
js
mov
lock
aas
orl
dec
lahf
in
mov
mov
clc
cmpsl
mov
nop
subb
add
mov
mov
add
fidivl
mov
outsl
jecxz
cmpb
mov
add
stos
hlt
mov
pop
orb
xor
xchg
lock
add
push
outsb
xchg
push
addr16
popf
nop
mov
es
dec
js
dec
and
push
loop
aas
shlb
or
xchg
das
push
ret
out
icebp
iret
aam
cmc
bnd
and
add
mov
jo
push
and
lcall
sahf
pop
addb
mov
cwtl
rorb
dec
ss
push
xchg
cli
js
outsb
aaa
insl
out
push
movsb
mov
xor
push
add
lock
dec
cld
xchg
incl
ret
mov
outsb
or
sub
inc
aad
mov
mov
mov
sub
loopne
mov
jp
cmp
shrb
es
cmp
or
data16
xchg
decb
push
in
inc
and
lahf
lock
cld
scas
aas
add
and
cmp
repz
and
push
rorb
xchg
sub
aad
push
add
das
mov
sub
scas
nop
xchg
fldcw
add
out
push
das
data16
mov
daa
sub
mov
push
loopne
rcr
loop
scas
in
pop
stos
aas
nop
ljmp
jmp
pop
jbe
cmpl
push
inc
cmpsl
sbb
stos
jg
scas
adcl
sub
mov
xchg
test
inc
sbb
sarl
mov
movsl
adc
jle
add
jg
in
add
mov
dec
mov
cmp
add
movsl
aad
enter
push
fisubrl
mov
mov
aam
inc
sub
je
in
imul
cmp
xor
mov
frstor
xchg
stos
xchg
mov
mov
leave
stos
lahf
dec
pmulhuw
mov
adc
dec
inc
mov
test
aaa
jns
es
mov
push
push
fimuls
push
data16
cmp
out
shlb
and
sbb
mov
jo
xor
xchg
insl
aaa
mov
clc
jl
inc
stos
or
aas
fcomps
jg
fcmovnbe
addr16
insb
pop
push
data16
adc
or
arpl
pop
cld
outsb
faddl
sub
jo
popa
mov
cld
cld
add
and
mov
loop
jns
mov
and
sbb
dec
flds
mov
call
adc
fbstp
and
add
pop
ds
dec
jb
lahf
pop
nop
movsl
not
xorb
shrb
dec
adc
lahf
lahf
mov
mov
add
inc
lcall
inc
lods
popf
mov
push
adc
cmc
jbe
sub
and
shrb
add
xor
push
mov
inc
xor
push
cli
mov
xor
push
mov
add
jb
shr
or
out
jg
and
es
mov
enter
jnp
clc
adc
ja
and
cld
mov
xor
loope
mov
gs
sub
dec
jg
jo
or
faddl
add
jg
xchg
and
imul
roll
pop
es
mull
jnp
ficompl
and
ficoml
sub
pop
loopne
mov
add
mov
fists
and
sbb
in
test
movsb
jg
mov
jecxz
popa
loope
xchg
bound
pusha
insb
lock
dec
mov
in
and
jno
arpl
adc
jle
sbb
jmp
cld
dec
and
cld
mov
lret
and
shrl
sub
adc
pop
andl
mov
outsl
adc
jnp
daa
hlt
xor
sub
mov
es
mov
das
dec
pop
mov
push
push
dec
addb
sub
jg
inc
roll
cld
loope
cmp
sahf
sbb
scas
pop
mov
add
jl
xchg
add
pop
adc
sbbb
nop
mov
xchg
jp
lods
repnz
lret
nop
ret
lock
inc
sarl
aas
add
mov
adc
jns
fisubl
sahf
aas
fistpl
jmp
add
les
pop
push
clc
aaa
xor
loope
lods
fisttpll
inc
or
jmp
jno
icebp
pop
mov
cmpsb
aas
clc
dec
pop
add
dec
mov
mov
cs
sub
sbb
cmp
sub
and
pushf
lea
js
aad
addl
ss
lock
pop
mov
std
pushf
test
sub
ss
fldt
divl
mov
mov
mov
and
mov
arpl
push
imul
hlt
xchg
inc
fsubrl
insb
rclb
or
cmc
push
xlat
incl
pop
jne
int3
arpl
push
cmpsl
or
outsl
pop
shlb
das
or
popf
addb
mov
pop
aad
clc
adc
xlat
sar
mov
aad
icebp
dec
sahf
and
decb
sbb
jno
add
fwait
pop
jb
aaa
sbb
das
add
incb
pop
add
test
std
scas
es
mov
les
hlt
push
popa
cmpsl
dec
subl
mov
bound
fisubs
sbb
scas
pop
scas
filds
add
inc
and
dec
xchg
pop
mov
jg
out
fistps
jo
icebp
push
or
mov
popa
insb
mov
push
cld
pop
cli
shl
xor
adc
mov
add
lock
dec
xchg
fstpt
imul
adcl
adc
ljmp
mov
jo
sbb
xlat
pop
lcall
cs
dec
xchg
addb
dec
push
std
push
and
pop
pusha
jo
sub
mov
je
sbb
lahf
pushf
fsts
push
pop
sbb
add
push
or
cmp
insb
xlat
push
lds
jecxz
dec
into
cs
shr
js
cmp
mov
mov
pop
ret
and
loope
xor
fsubl
js
jns
xor
popf
mov
popa
aam
mov
bound
out
add
ljmp
std
fbstp
es
cmpsl
cltd
loope
mov
test
xor
fdivrl
adc
mov
outsb
xchg
sub
xor
and
mov
imul
and
inc
or
stos
lahf
lcall
insb
clc
inc
pop
lock
fcmovu
dec
out
sub
or
dec
xchg
inc
and
insl
push
xor
dec
mov
jbe
add
pop
sub
adc
sbb
adc
ret
inc
jns
fbld
xchg
mov
std
sbbl
in
push
mov
jp
movsl
jge
sbb
add
jg
jb
lods
fs
stos
dec
ja
push
xchg
adc
or
add
mov
mov
sub
insb
rclb
sbb
aaa
mov
jo
ffreep
lahf
mov
ds
push
mov
aad
lcall
lret
push
fcomps
lods
hlt
jmp
in
dec
aaa
dec
mov
mov
xchg
ficoml
xchg
cmp
mov
pusha
out
insb
add
outsb
icebp
lahf
jg
fcoms
dec
jle
out
out
mov
fisttps
test
cmc
movsb
mov
loope
shlb
dec
add
pusha
jae
and
mov
jo
pushl
imul
xchg
outsl
or
xchg
xchg
xchg
jno
fistpll
rorb
sbb
xor
adc
scas
fadd
or
or
mov
cld
or
mov
pop
jmp
jp
rcr
jnp
and
mov
and
test
pop
lock
pop
mov
and
dec
push
mov
adc
int3
dec
mov
inc
mov
or
cmp
add
dec
cmp
scas
jne
jno
push
pop
outsb
and
add
mov
inc
dec
cli
xchg
xchg
ret
iret
pop
insb
fimull
lret
jecxz
xchg
es
daa
test
insl
cld
adc
and
hlt
loope
loop
insl
jns
dec
aaa
ret
push
ret
lcall
mull
and
outsb
inc
push
push
pusha
cmp
mov
out
sbb
in
in
inc
mov
cld
aaa
mov
and
mov
cld
in
pop
xchg
cmpl
mov
gs
dec
xor
in
popf
les
push
jle
jl
fstl
stos
or
push
mov
inc
mov
lods
mov
push
push
lods
add
mov
inc
loope
arpl
repz
and
lea
fstl
dec
push
nop
loope,pn
sub
xchg
mov
cwtl
xchg
push
jno
jge
mov
mov
out
jne
sbb
jns
outsb
hlt
cmpsl
mov
mov
add
lcall
das
std
adc
adc
xlat
xor
inc
js
loopne
mov
dec
mov
das
std
sarb
dec
div
sub
inc
inc
fucom
test
dec
mov
inc
data16
adc
std
loop
and
rclb
test
cmp
push
sarb
negl
mov
nop
leave
jo
add
inc
mov
aas
cmpl
mov
lea
mov
ret
dec
icebp
jnp
outsl
dec
fs
ret
mov
ret
clc
and
pop
js
mov
sub
movsb
cmp
aad
nop
add
lock
inc
out
push
dec
scas
test
xchg
mov
sarb
int
jb
xor
out
or
test
dec
test
pop
cmc
mov
dec
dec
stc
icebp
push
mov
pop
lock
and
add
jl
scas
mov
dec
mov
inc
testb
sbbb
icebp
sbb
stc
jno
cmp
dec
scas
xchg
ret
hlt
out
xchg
andl
stc
shll
inc
mov
sub
cmp
pop
cmpl
lds
movl
xchg
pop
inc
lds
mov
addb
adc
ret
and
xchg
mov
movsb
cld
mov
mov
mov
sahf
icebp
aaa
mov
push
add
cmp
and
sub
sahf
mov
push
jle
mov
mov
std
cld
out
jecxz
jl
insb
ret
or
cmpsb
cmp
pop
mov
fcmovu
mov
fisubs
lock
scas
mov
lret
add
sub
inc
xor
sub
adc
push
js
fiadds
sub
outsl
jb
adc
shll
insb
test
aas
xor
push
inc
push
loopne
cmp
add
dec
mov
push
fwait
mov
xlat
jmp
outsb
aaa
xchg
cmp
mov
mov
xchg
dec
or
clc
cmp
xchg
or
adc
mov
add
stc
inc
mov
add
sbb
icebp
daa
iret
cmpsb
rcrb
and
mov
adc
aad
nop
jo
lods
out
mov
pusha
ds
mov
int3
sbb
adc
imul
jg
es
jle
outsb
clc
inc
clc
push
cli
pusha
jae
adc
sbb
mov
cmp
mov
rcll
mov
outsb
xchg
fisubrl
mov
andl
fstpt
arpl
add
jmp
mov
and
adc
pop
imul
insb
repnz
push
ficompl
adc
mov
mov
scas
mov
mov
pop
and
xor
fisubl
std
and
pusha
mov
and
stos
movsb
leave
lods
cwtl
mov
jg
xchg
lcall
mov
inc
xchg
mov
cs
push
or
fisubrs
mov
inc
dec
inc
pop
clc
push
rorb
jne
sub
out
mov
add
adc
mov
mov
mov
pop
loop
sahf
xchg
clc
add
adc
jnp
ficompl
rol
and
add
jno
or
lods
push
inc
xchg
orb
push
mov
sub
dec
jl
mov
jge
xchg
das
lock
mov
jecxz
loopne
sbb
inc
insb
ljmp
jo
and
or
push
insl
jmp
ret
push
cmp
jne
push
fsub
scas
lea
sti
push
aad
xorb
mov
push
xchg
je
ret
mov
mov
aaa
sub
xchg
es
loope
push
sub
std
or
data16
jg
loopne
clc
and
pushf
mov
clc
daa
loope
mov
out
gs
bound
push
jl
cld
incl
and
adc
fstpt
cwtl
fisubs
lret
lods
mov
loop
mov
ss
sub
scas
mov
and
scas
int
cmc
cli
addr16
mov
dec
daa
insl
in
dec
jl
and
lock
mov
push
rorl
rcll
pop
push
cmp
add
sub
mov
pusha
cld
sbb
cmc
cmp
adc
pop
mov
add
add
mov
mov
pop
movsl
das
shrb
or
scas
icebp
push
dec
fiadds
sbb
mov
jne
fidivs
mov
jo
pop
adc
mov
push
nop
and
mov
add
ja
and
add
mov
push
and
inc
jnp
mov
ljmp
mov
lock
lods
das
xorl
in
hlt
pop
clc
test
or
jecxz
mov
jecxz
pop
mov
mov
call
leave
mov
nop
scas
into
and
scas
or
xchg
xor
test
test
aad
ja
icebp
inc
jb
fsubr
in
fnsave
std
call
icebp
push
nop
stos
sub
push
mov
pop
jmp
mov
pop
je
xchg
insb
mov
nop
outsb
add
push
lahf
sub
mov
xor
andb
pusha
push
popa
mov
fcmovu
hlt
inc
out
push
std
dec
aaa
cld
xchg
stos
push
dec
inc
inc
fistpll
and
fistps
insb
fidivl
inc
cmpsl
dec
test
pop
aam
dec
outsb
lret
popf
xchg
mov
mov
stc
jge
dec
lahf
add
push
cmp
inc
add
inc
dec
mov
or
clc
stc
dec
cmpsb
add
nop
sub
add
fwait
or
inc
inc
push
std
and
adc
aaa
cmovs
js
lock
and
pushf
cs
outsb
fnsave
pusha
fisttps
add
pop
jge
xchg
nop
cwtl
pop
imul
mov
in
fcoml
sub
push
ljmp
or
stos
dec
push
icebp
push
jle
xor
mov
adc
and
enter
aas
call
testl
movsl
or
js
add
ss
loope
pop
lds
or
test
cs
mov
adc
inc
push
xor
cld
xor
or
jecxz
mov
inc
and
idivl
xor
mov
add
pop
mov
jo
fdivrs
dec
sbb
loop
pop
pop
xchg
cwtl
add
and
sarl
in
stc
pop
decl
mov
pop
xchg
and
sbb
dec
xchg
in
bound
mov
test
inc
mov
decb
hlt
mov
push
cmp
outsl
mov
push
mov
add
call
lock
mov
push
xor
mov
dec
xchg
subb
lahf
cld
and
into
and
imul
out
mov
dec
repnz
jb
insb
xchg
out
mov
sbb
scas
cld
outsb
loope
push
mov
test
fcomi
jno
cmp
mov
mov
xor
mov
cmpsb
inc
sti
dec
jno
mov
adc
pop
shr
and
mov
mov
dec
nop
out
popa
rcrb
in
or
and
out
loopne
outsl
or
xchg
mov
data16
or
jns
lret
clc
sub
pop
movsl
std
arpl
popf
test
and
xchg
xchg
sub
pop
rorl
adc
outsl
movsb
shl
adcb
sub
sbb
loopne
in
xchg
mov
adc
mov
and
outsb
jbe
pop
mov
test
cltd
push
es
outsb
sahf
mov
pusha
nop
fcompl
add
shrl
movb
outsl
jae
subl
jo
aas
mov
jbe
and
lea
shrb
insb
rolb
clc
xchg
out
xchg
xor
mov
pop
pop
pushl
and
push
cmp
cmp
fists
dec
out
lahf
loop
je
dec
adc
iret
sbb
inc
int
outsb
dec
inc
push
inc
sbb
xchg
aas
sarb
push
sti
push
out
sbb
add
xchg
fildl
adc
cmpsb
sbb
add
mov
mov
cmp
loope
es
mov
pop
ret
mov
mov
adc
rolb
mov
dec
es
mov
xchg
cs
xchg
adc
das
fnsaves
mov
dec
cmpb
popf
jae
xor
out
mov
sarb
into
push
sub
xchg
mov
push
rcrl
imul
lds
outsb
clc
push
xor
sti
mov
inc
xchg
cld
dec
jmp
add
pop
movsl
sbb
int3
push
imul
popf
daa
pushf
es
aam
and
mov
cmp
mov
jbe
mov
jb
call
cld
jg
fwait
enter
bound
dec
dec
dec
xchg
fadds
push
and
xchg
lods
ficompl
sbb
rorl
inc
jo
insb
push
pop
fidivl
and
out
push
fsubrl
nop
out
jmp
mov
mov
lds
sarb
loope
out
out
push
sub
fldcw
cld
push
and
out
in
mov
adc
sub
dec
mov
pop
mov
fs
sub
scas
mov
ret
sets
sbb
icebp
clc
push
xlat
pop
int
faddl
jmp
add
ficoms
pop
dec
test
xchg
popf
sub
or
cld
aas
lods
pop
rolb
and
pop
addb
mov
and
cmpsb
fwait
lock
mov
fnsave
data16
push
test
xchg
clc
loop
test
outsb
add
push
call
mov
xor
in
jmp
daa
lock
mov
repz
push
sbb
incl
and
jo
repz
sti
pop
or
mov
pop
rcrb
les
xchg
into
cld
rcrb
pop
mov
mov
inc
dec
cmp
outsl
or
xchg
push
cmc
or
xchg
mov
push
mov
jg
fmull
mov
xor
and
jno
mov
das
clc
push
jnp
mov
dec
dec
sub
inc
scas
mov
xor
mov
clc
out
movsb
push
mov
or
sbb
and
imul
jno
add
and
and
mov
push
and
xor
movsl
mov
fcom
sbb
add
dec
and
movb
push
add
jo
imul
push
pop
inc
cld
pop
xor
shlb
dec
mov
jecxz
and
adc
notb
push
test
pop
add
and
inc
cltd
movsb
pop
aaa
roll
and
and
bnd
clc
cltd
dec
cmp
jg
jb
lret
les
insb
pop
enter
rorl
sub
mov
outsb
dec
ret
add
stc
xorb
popf
xchg
js
outsl
mov
xor
test
sub
sub
cli
dec
cmp
mov
dec
xor
ss
push
jo
xchg
jb
mov
push
sub
and
lea
push
dec
int
lcall
adc
sbb
imul
sbb
lods
arpl
xchg
ret
add
jmp
sti
imul
sbb
xchg
inc
and
push
dec
mov
lds
or
insb
dec
sbb
arpl
ja
jo
sub
and
adc
lods
adc
shl
jne
es
mov
push
pop
and
mov
dec
mov
loop
jne
daa
cs
dec
scas
movsb
rcr
test
add
jl
ljmp
std
push
dec
fildl
mov
cmp
push
ret
nop
lcall
xchg
mov
out
ds
std
add
mov
mull
fmul
fcmovnb
loopne
jne
push
mov
xorl
dec
push
dec
shl
in
push
ret
ret
incl
sti
popa
outsb
sub
mov
insl
clc
aaa
test
mov
push
lea
dec
loopne
lock
mov
stos
xchg
inc
add
lea
inc
dec
push
adc
and
inc
and
pop
pop
pop
out
mov
in
add
xor
std
arpl
jbe
daa
jae
ljmp
dec
popa
and
test
push
js
jb
inc
js
jle
jo
sbb
popa
inc
jecxz
adc
and
jnp
and
lock
filds
cmp
fisttps
push
lods
out
outsb
cld
inc
and
jo
pop
cli
mov
xchg
mov
xor
mov
fsts
or
clc
dec
dec
divl
fwait
inc
mov
mov
add
xchg
in
in
dec
pop
xor
cmp
add
std
fsubs
sti
je
je
cwtl
cmpsl
or
pushl
outsb
push
gs
js
gs
mov
pushl
outsb
inc
imul
insb
push
fdivrp
jg
gs
jo
popa
je
push
sbb
jb
outsb
je
jb
push
jae
dec
fs
mov
popa
jae
inc
sub
test
mov
mov
xor
jne
dec
jecxz
and
test
jo
insb
insb
ds
outsl
insl
insl
xor
aaa
cmp
popa
mov
gs
imul
fistl
popa
add
sbb
push
jne
popf
mov
insb
jns
push
data16
xorb
loope
add
imul
rcr
adcb
jg
gs
push
sbb
add
dec
mov
cmp
fsubrs
dec
outsb
test
and
jnp
xor
popa
insb
imul
shrl
mov
sbb
popa
addr16
outsl
js
mov
dec
push
jbe
outsl
ja
or
fiadds
lret
mov
jg
adc
xor
push
mov
out
fcoms
push
adc
pause
mov
fnsave
add
mov
sbb
sbb
or
jo
insb
dec
or
dec
inc
or
xchg
sarb
insl
mov
push
fs
scas
push
add
scas
cs
out
sarl
xor
mov
insb
jae
testl
inc
pop
ret
das
or
shrb
fs
xchg
xchg
shlb
sub
adc
dec
push
movsb
aad
call
loopne
mov
and
mov
push
dec
mov
sti
repnz
push
rolb
in
adc
push
or
lea
or
dec
ret
or
add
add
add
add
inc
xchg
mov
in
xchg
push
jmp
nop
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
shlb
shlb
add
mov
