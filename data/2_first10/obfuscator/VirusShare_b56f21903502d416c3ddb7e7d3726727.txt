int
pop
mov
adcb
sub
jecxz
insl
push
xchg
pop
lahf
inc
data16
andb
inc
loop
sbb
into
mov
inc
inc
stc
cmp
loope
cmpsb
leave
or
mov
sub
xchg
inc
xchg
xor
mov
jns
pusha
and
in
aam
and
insb
cs
jne
cltd
xor
fdivrl
je
pop
lods
add
fwait
push
or
stos
jne
lea
adcb
popa
bound
flds
call
loopne
cmc
sti
leave
cmp
adc
push
dec
adcb
pop
mov
jne
into
xchg
mov
out
movsb
push
cs
mov
or
mov
cmp
lret
icebp
push
jb
icebp
cs
rolb
stos
jmp
jl
and
lock
mov
xchg
and
and
cwtl
sub
adc
imul
push
xor
subl
add
add
or
add
mov
cs
xchg
movsl
mov
cmpsl
adc
pop
scas
mov
jns
ud0
not
outsl
addr16
adc
ror
insb
lea
xchg
mov
sbb
adc
lcall
jp
mov
sti
push
or
scas
out
aaa
pop
mov
outsl
pop
mov
pop
xchg
sbb
popf
loopne
pop
aas
jg
push
jmp
movl
call
dec
pop
outsb
pop
out
mul
dec
nop
cmpsb
test
test
and
dec
insb
pop
cltd
xchg
dec
flds
mov
push
pop
mov
dec
mov
sub
sti
dec
dec
pop
fcomp
add
adc
add
add
pusha
out
mov
jno
mov
jge
test
xor
sahf
fmull
jg
aas
dec
ja
dec
lahf
insl
shlb
push
out
lds
mov
in
lret
sub
gs
stc
idivl
mov
sbb
popa
cmpsl
adc
push
mov
sub
insl
dec
push
fs
je
rcl
call
push
mov
xchg
sbb
cmp
and
and
clc
cwtl
push
loope
movsl
and
sbb
sbb
repnz
inc
test
loopne
push
inc
dec
cs
ret
and
mov
inc
mov
mov
and
pop
rclb
dec
adc
xlat
sbb
mov
cmpsl
daa
dec
pusha
movl
call
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
xchg
inc
pop
add
add
add
jb
xor
fs
insb
add
std
mov
add
push
lea
jmp
lea
jb
push
pushl
pushl
pusha
lea
jmp
mov
pushf
mov
push
pushl
ret
movl
mov
pushl
mov
lea
jmp
pushl
call
add
dec
gs
popa
addr16
outsl
js
add
pop
or
add
and
lret
mov
inc
cmp
adc
push
push
mov
aam
mov
and
es
loopne
jb
or
mov
arpl
out
pushf
or
jmp
or
jo
xchg
mov
call
sbb
out
xor
ret
mov
cltd
cltd
call
pop
mov
pop
fwait
pop
adc
std
inc
test
outsb
in
mov
dec
dec
aad
aaa
test
mov
mov
and
xlat
stc
jmp
lock
mov
dec
notl
pusha
mov
sldt
flds
out
push
shl
push
test
js
lret
in
push
aas
xchg
ss
dec
arpl
decb
nop
xlat
inc
js
and
mov
jecxz
addl
push
into
lcall
hlt
nop
nop
cmpl
sbb
das
imul
arpl
js
out
sbb
lds
cmp
test
pop
or
lret
aas
lds
xor
int3
sbb
imul
leave
push
xor
movsl
xchg
int
pop
fisubs
push
mov
repnz
dec
mov
mov
ret
adc
pop
xchg
cmp
push
push
pop
dec
das
and
xchg
shlb
andl
call
mov
leave
call
movl
adc
in
mov
add
popa
insb
inc
jb
add
imul
add
mov
fs
je
push
call
dec
clc
movb
bt
bt
rol
pusha
pushl
lea
call
cmp
cmc
cmp
jmp
mov
sbb
lds
mov
mov
stos
xor
jl
fwait
andb
sub
pop
fistps
mov
negl
mov
xor
mov
push
mov
cmp
sbb
sbb
mov
adc
movb
fisubs
lahf
je
mov
cmp
icebp
fcompl
es
outsb
fs
pop
pop
xchg
xor
fs
adc
adc
mov
test
adc
cmp
sahf
and
mov
ds
imul
mov
add
out
cltd
sbb
xor
pop
mov
loope
adc
leave
out
lret
jl
aas
scas
push
cmpl
lea
iret
push
lds
lock
xor
inc
jno
add
sbb
popa
cltd
xor
sbb
cmp
push
mov
push
push
movb
cmp
pushl
lea
ja
push
add
jmp
movb
jmp
pushf
clc
cmp
cmp
movzbw
lea
jmp
bt
cmp
add
push
jmp
pusha
mov
pop
pusha
bswap
mov
pushf
mov
lea
jne
pop
movsbw
bswap
call
bndstx
lds
inc
popf
roll
cmc
outsb
mov
popa
loop
les
xor
stos
pop
pop
push
sahf
inc
into
inc
inc
mov
lret
into
jmp
pusha
insl
or
mov
pop
sbb
sbb
fdivr
dec
mov
iret
xor
adc
fistl
shll
sub
sti
adc
mov
rcl
pop
stc
xchg
xchg
je
out
mov
and
arpl
dec
xor
xor
popf
pop
stos
xchg
sub
xor
stos
lock
mov
scas
sub
adc
xchg
pop
add
xor
inc
ror
ror
xor
test
xchg
inc
sub
lahf
mov
and
xor
rcr
mov
pusha
clc
xchg
bts
bt
shl
shl
mov
cmc
cmc
test
pusha
sub
jmp
pushf
add
push
mov
cmc
jmp
je
bt
jmp
cmp
add
dec
jecxz
add
add
add
add
pop
add
dec
add
stc
in
add
and
add
sbb
add
add
scas
cmp
push
sbb
mov
xor
pop
stc
mov
jecxz
pop
loop
imul
jl
cmp
dec
mov
repz
mov
xchg
jecxz
inc
xor
adc
jb
mov
inc
mov
call
pop
xor
lret
test
int
adc
dec
lret
jecxz
in
std
adc
inc
xor
je
push
stc
ja
idivb
scas
sbb
sbb
mov
push
sbb
rcrb
lods
mov
jnp
mov
adc
push
enter
pop
cli
sti
popa
dec
dec
fiadds
adc
xor
sarl
addr16
add
stos
inc
jecxz
arpl
dec
lret
pop
ja
and
rcrb
mov
jmp
out
test
mov
je
xchg
outsl
enter
pop
loop
mov
jl
fnstcw
mov
mov
in
mov
int
movsl
sub
dec
push
push
mov
lds
pop
loopne
js
push
mulb
cs
rolb
or
pop
jmp
push
ret
mov
aaa
sub
dec
sub
cli
pop
outsl
nop
xor
mov
push
push
push
adc
pusha
lret
iret
cmp
adc
ror
ficompl
imul
pop
sti
push
out
mov
lds
popa
or
add
es
xchg
dec
adc
fdivl
xor
mov
fwait
imul
fwait
es
dec
xchg
xor
jo
subl
jne
jecxz
cwtl
mov
aas
and
sub
jmp
or
imul
lea
outsb
jno
jge
data16
jb
xchg
or
xor
jle
sarb
stc
lods
inc
xor
and
cli
insl
mov
mov
out
mov
enter
jmp
mov
imul
ja
insb
push
add
les
mov
lret
jl
fdivrs
xor
mov
mov
cmpsb
cli
pop
dec
lods
or
mov
movl
adc
arpl
fnstcw
lods
mov
adc
mov
mov
cmp
lret
dec
loop
and
cli
jb
fidivl
add
jne
and
add
push
and
pushl
mov
lea
jne
mov
mov
pusha
lea
jmp
dec
mov
ror
cmc
clc
add
cmp
stc
cmc
neg
jmp
stc
cmp
or
pusha
lea
je
sete
pushf
mov
jmp
stc
cmp
pushf
pushf
lea
jb
push
cmc
test
stc
cmp
mov
lea
ja
setnp
shl
inc
setae
add
shr
cmp
bt
mov
mov
cmc
cmc
stc
cmp
jmp
jmp
call
test
mov
adcl
push
xchg
sbb
fstpt
and
sbb
jnp
pop
outsl
hlt
sbb
mov
sbb
ficoms
pushf
pushf
pop
jge
sbb
ret
push
nop
push
gs
or
adc
lea
sub
fwait
or
dec
sub
jl
mov
test
ret
loop
sbb
mov
xchg
lahf
jns
aaa
shrb
gs
mov
pop
movsl
and
cmp
push
lea
inc
fstl
sub
ds
popf
rorl
jmp
cmp
pusha
lea
jbe
xchg
ror
test
sub
clc
mov
mov
neg
inc
cmp
xor
mov
bts
neg
add
adc
inc
shr
shr
xchg
jmp
movw
cmc
clc
or
push
pushf
movw
pushf
lea
je
bt
pusha
mov
jmp
mov
push
nop
outsb
mov
rcrl
lcall
cld
cmpsl
rorl
lcall
push
adc
mov
mov
imul
aaa
lds
add
mov
adc
pop
ror
data16
mov
mov
sub
mov
jge
xchg
roll
jg
lret
dec
cli
hlt
or
test
pop
test
and
mov
shlb
rcl
mov
jno
cmp
pushf
push
shl
pushf
pushf
pushl
call
jne
adc
vmovdqa
je
xchg
fdivrl
jo
in
je
fucomip
fiaddl
push
scas
mov
daa
sub
mov
nop
xchg
ret
inc
hlt
shlb
jno
push
xor
push
cmp
les
mov
xchg
mov
xchg
cli
outsb
rclb
into
xchg
jle
es
inc
mov
popa
shll
aad
je
sub
out
adc
mov
stc
pushf
sub
pushl
mov
rep
mov
call
push
jmp
pushf
lea
jne
push
inc
pushf
call
pusha
cmp
call
pushl
pushl
popl
push
push
push
pushl
ret
and
sbb
out
lds
fcos
imul
out
mov
pusha
and
mov
add
ja
pop
xlat
shl
mov
sbb
test
rorl
push
mov
jecxz
jmp
jmp
mov
pushf
fistpl
shrb
mov
mov
sbb
dec
mov
in
jb
xchg
fldt
test
sbb
mov
test
sbb
sbb
xor
and
jnp
mov
cs
outsb
fiadds
incb
shlb
jmp
jmp
clc
bt
repnz
jmp
bswap
bsf
bt
add
pusha
mov
pushl
mov
mov
not
not
push
lods
bt
pushf
cmp
xor
movw
jmp
lea
lea
mov
mov
pushf
pop
bswap
sets
push
pusha
bswap
pop
movzbl
lea
jmp
je
jmp
in
dec
push
adc
imulb
out
jo
xchg
iret
aas
sub
jmp
xchg
iret
cmp
pop
dec
dec
or
fisubrl
int3
cmp
adc
mov
fisttpll
in
add
and
mov
xor
cmp
add
xchg
sub
les
popa
mov
cmpsb
mov
gs
and
loopne
sub
aaa
testl
addr16
arpl
jg
xorl
pushl
popfw
pushf
inc
movb
pushf
adc
lea
pusha
pushf
pushl
ret
push
dec
pushf
test
shl
mov
setns
jmp
pushl
lea
jne
jmp
movzwl
btc
shr
push
mov
jmp
call
mov
mov
lea
pusha
call
push
mov
lea
jae
cmp
test
stc
cmp
cmp
call
push
call
jmp
xchg
mov
adc
lds
in
jb
xor
les
add
sbb
frstor
mov
stos
in
js
xchg
xor
mov
cs
mov
test
stc
pop
daa
dec
lods
in
mov
testb
nop
ficoml
dec
fdivl
jecxz
mov
xor
enter
cmpl
jmp
ret
jnp
cmp
fs
jae
call
jmp
mov
jmp
pushf
lea
je
jmp
addr16
out
lds
jo
orb
mov
mov
mov
in
sbb
repz
leave
sbb
bound
cli
sub
mov
sbb
jle
cmp
inc
test
daa
dec
jnp,pn
stos
cmc
push
push
in
sbb
inc
bound
test
inc
inc
xchg
out
sub
repz
movntq
pop
out
inc
in
jo
into
jmp
and
and
ja
pusha
lea
jb
jmp
pushf
mov
out
mov
stc
jg
mov
cs
jp
cmpsb
lret
xchg
fs
std
or
lea
lds
cmc
xchg
lods
lret
arpl
rcll
add
mov
test
push
rcll
out
lds
fidivs
notb
in
and
sbb
cmp
jne
fstpl
add
mov
fs
loop
bound
movsl
push
mov
sbb
push
push
leave
sbb
lcall
push
jns
cmp
or
and
fmul
or
daa
jge
add
cmpsl
jp
imul
pop
popf
mov
mov
addr16
xchg
hlt
mov
push
daa
and
jp
incb
adc
jne
inc
std
cmp
or
ja
movsbl
push
mov
call
add
loopne
cmp
pop
das
mov
xor
test
mov
jns
icebp
xchg
mov
sub
sahf
test
inc
lahf
xor
scas
sbb
lock
or
xchg
outsb
ja
mov
xchg
insb
push
mov
sarl
subl
mov
dec
gs
ljmp
ja
pop
add
insl
lcall
imul
push
jecxz
sbb
jne
int
sbb
mov
push
mov
push
pushf
jmp
adc
lds
push
pusha
jle
scas
enter
push
and
push
cli
test
sub
mov
xor
add
jecxz
xchg
push
pop
pop
sti
hlt
mov
adc
mov
outsl
push
pop
mov
adc
adcl
cli
inc
mov
adc
mov
push
mov
sti
arpl
mov
sub
or
mov
js
push
out
ds
sahf
mov
sahf
test
lea
stos
mov
sub
add
pushf
pushl
lea
je
jmp
push
dec
cmc
jmp
push
adc
or
and
arpl
adc
jnp
jbe
dec
sbb
lret
std
sti
cmp
imul
dec
xchg
movsl
adc
sbb
sarb
jmp
sbb
xor
mov
pop
movsl
mov
out
and
loop
enter
jecxz
lea
vpmaddwd
mov
inc
testb
xchg
out
fcomi
or
lds
push
sub
pushf
stos
cmp
adc
in
iret
subl
sub
sub
call
sbb
in
mov
sahf
cs
jp
dec
int3
and
inc
fsubl
inc
test
sbb
push
aas
aas
push
cmpsb
add
sub
jns
cltd
rorl
jmp
mov
xchg
or
jnp
mov
iret
inc
fsubr
sbb
dec
pushf
rcl
or
mov
pop
adc
bswap
pushf
add
lea
xchg
mov
or
cmpsb
in
cmp
fucomp
and
or
in
xchg
mov
pushf
pushf
lea
jmp
lea
jb
pushf
lea
jmp
stc
call
push
mov
push
lea
jne
daa
cmc
sub
dec
mov
cmc
add
mov
adc
mov
stc
bt
test
test
push
movw
mov
lea
je
clc
sub
test
cmp
push
lea
ja
call
add
out
adc
mov
cmp
add
out
add
loop
add
out
add
cmp
add
pushf
lea
call
call
movl
mov
pushl
popl
pushf
pushf
pushl
ret
dec
enter
lds
dec
mov
inc
jl
dec
mov
stc
icebp
inc
xchg
pop
mov
push
jae
push
fildl
xor
sub
dec
cmpsb
and
mov
test
shl
mov
pop
lahf
pop
push
inc
iret
cmpsl
lahf
aas
cmpsl
aaa
mov
inc
fdiv
repz
ljmp
or
lds
mov
rolb
cwtl
inc
call
sub
rep
sar
mov
adc
mov
dec
lods
or
lea
cmpsl
ds
dec
ja
sbb
cmp
and
clc
jo
cltd
xlat
inc
fisttps
xchg
pop
cmpsl
daa
incl
lock
sbb
fs
jb
xchg
movzbw
mov
movzbw
movl
call
call
lds
popf
add
dec
inc
and
fs
aas
xchg
outsl
cmp
aas
lret
xchg
loop
gs
incl
add
xor
jns
scas
mov
xor
movsl
jne
sub
sub
inc
call
cmp
scas
pop
and
jmp
rorb
xchg
jp
jecxz
rorb
cli
or
loop
xorl
pop
cld
dec
and
adc
adc
insb
in
inc
push
ret
sbb
or
jmp
dec
pusha
cwtl
cmp
mov
xlat
daa
fldt
stc
mov
adc
arpl
nop
jecxz
add
and
addl
inc
cmp
xor
dec
cmc
xor
call
push
adc
jmp
pushl
lea
ja
not
jmp
lea
jp
push
lea
je
stc
pushf
test
add
call
sub
adc
out
lds
pop
pop
or
adc
daa
cmp
mov
test
addb
mov
cmpsl
leave
pop
shll
mov
mov
mov
ret
and
jl
fidivl
dec
xlat
lahf
scas
dec
pop
xchg
negl
bt
stc
clc
add
push
cmp
pusha
movzwl
add
rcl
adc
cmp
mov
call
repnz
pushf
lea
jne
shl
sbb
mov
xor
stc
and
neg
sub
and
add
not
mov
test
bt
clc
sub
bt
jmp
xchg
xchg
xor
xchg
or
nop
fcomps
inc
or
fs
ljmp
cltd
xlat
inc
imulb
inc
sbb
cmp
sbb
loop
xchg
sub
jle
std
and
pop
add
push
mov
divb
cs
fsubp
es
sbb
xchg
inc
sbb
jae
fmul
pop
out
lds
push
push
hlt
bound
inc
pushf
jns
ret
movsl
es
loop
push
insb
dec
test
jl
sbb
incb
outsb
jo
loop
push
addl
js
adc
push
scas
xchg
add
jnp
xchg
sbb
fsub
lds
cmp
pop
xchg
insl
sbb
push
xchg
cltd
xchg
sbb
ja
mov
aaa
xchg
roll
and
add
pop
into
jle,pn
cmpsb
push
push
mov
xchg
jle
cmp
xchg
dec
arpl
mov
pusha
push
movzbw
mov
push
mov
push
movw
pushl
ret
cmc
clc
shl
jmp
add
lea
cmp
mov
cmc
sbb
setl
adc
add
rcl
movl
bsr
pusha
sbb
mov
sub
push
test
mov
cmp
pushf
push
lea
jbe
shl
pusha
xchg
inc
sub
bt
rcr
or
xor
mov
lea
sar
bsr
lea
shl
mov
shl
add
pusha
shl
shr
shl
pushf
mov
cmp
shl
sbb
add
call
xchg
scas
cmp
xlat
lea
jae
test
stc
cmp
pushf
jmp
movl
pushf
movb
lea
jmp
add
bt
neg
call
pushf
mov
pusha
call
add
lea
pushf
neg
add
mov
push
movw
pusha
jmp
pushf
call
pop
dec
jl
out
mov
mov
idivl
popa
xlat
daa
outsl
mov
dec
add
mov
fbstp
adc
cmp
cmp
add
mov
sub
push
pop
pop
xor
push
inc
dec
jecxz
mov
push
es
rcr
insb
pop
mov
pop
nop
add
or
cmp
pushf
cmpsb
push
sbb
jo
rclb
push
lea
jne
shl
shl
shld
mov
test
pusha
pushf
add
jmp
mov
lds
xchg
adc
jno
xchg
xchg
leave
ret
dec
mov
enter
fnstcw
and
cmpsl
leave
aas
loope
cmpsl
addr16
lahf
xchg
outsl
pop
dec
daa
or
ja
push
jne
arpl
dec
subl
dec
xor
xchg
dec
xlat
inc
clc
in
dec
or
jo
mov
mov
cmp
popf
xor
loop
xor
shll
mov
mov
xchg
inc
arpl
xor
fsubp
js
inc
push
sbb
adc
cmp
add
leave
mov
push
xchg
loop
in
enter
in
xor
sbb
sub
call
jp
push
cmc
rorb
sub
mov
cmovb
into
pop
jge
push
popa
dec
and
addr16
rcrl
push
push
push
mov
mov
pop
add
popf
jmp
lret
push
add
add
push
add
push
add
rclb
sbb
push
add
lcall
add
add
add
mov
lea
jo
je
clc
pusha
cmp
lea
push
push
pusha
pushl
pushl
ret
movl
pusha
jmp
movl
jmp
movb
movsbw
pushf
mov
setb
call
bsf
rol
sub
cmc
mov
pusha
cmp
pushf
clc
and
clc
bt
add
lea
bt
add
pushf
call
call
mov
movsbw
mov
lahf
pushl
lea
pushl
xchg
lea
pushl
cwtl
pop
movl
movsbw
pop
movb
lea
pushf
call
pushf
mov
pusha
pushf
mov
push
xchg
bswap
movsbw
bswap
movl
mov
not
lea
pushf
jmp
mov
inc
pusha
lea
jmp
pushf
cmp
movb
call
pusha
mov
lea
je
push
lea
jmp
or
cli
dec
cld
inc
cli
out
dec
enter
stos
gs
mov
and
sub
sbb
clc
xchg
lock
rorb
adc
test
cmp
shlb
rcl
outsb
ss
pop
leave
mov
stos
gs
xor
sarb
xor
leave
push
xor
roll
roll
mov
xlat
fsubrl
js
pushf
aad
adc
dec
sbb
mov
or
cmp
add
sub
mov
mov
sbb
mov
sub
je
ljmp
int
pop
mulb
jle
out
push
push
out
push
ds
es
push
add
enter
mov
pop
xor
push
bt
stc
stc
ror
movw
inc
jmp
mov
push
rep
movsbl
pop
mov
movb
pushl
pushl
mov
lea
jmp
lahf
lea
pusha
mov
jmp
pushf
movb
push
movl
pusha
movl
lea
jmp
outsl
jnp
add
adc
nop
testb
push
movsl
add
inc
pop
orb
subb
aas
cmp
cmp
jmp
mov
cmp
inc
pop
out
notl
mov
out
mov
pop
jae
leave
mov
dec
std
jae
mov
xor
sub
lea
push
lock
idivb
lock
sub
nop
repz
jmp
xlat
mov
xor
stc
sbb
jnp
lods
cmp
add
test
add
out
push
enter
xchg
sub
mov
jbe
in
jmp
imul
insb
leave
mov
lret
shrl
sbb
adc
sub
add
jle
push
cmp
sbb
xor
mov
stos
and
out
rolb
xchg
loop
dec
movsl
out
add
sub
pusha
mov
call
fidivs
rclb
rcrb
in
mov
inc
or
loopne
in
mov
test
and
pop
sbb
stos
test
jns
hlt
test
divl
mov
cmp
repz
add
sub
in
repz
add
je
sub
xchg
aam
les
hlt
lret
or
ret
gs
rcrl
xchg
sub
cmp
or
lods
cmp
jnp
idivb
in
sub
mov
jno
and
fwait
xchg
loope
mov
pop
call
jns
add
enter
leave
jl
jmp
dec
stos
mov
jecxz
fs
and
cltd
inc
stc
xor
outsl
jp
mov
mov
subl
int
loop
mov
sub
inc
sub
scas
scas
mov
mov
and
lds
fsubr
movsl
sbb
add
enter
or
mov
pushl
ror
jmp
pusha
movb
pusha
xchg
movb
pushf
call
jmp
pushf
pushf
pushf
dec
mov
bt
rol
cmp
shr
call
push
pushf
lea
jmp
lea
jne
test
add
test
btc
mov
clc
push
or
call
lea
jne
jmp
push
pushl
pushf
movl
pushf
pusha
pushf
movl
movb
push
pushf
lea
jmp
pushf
lea
je
pusha
ror
add
dec
mov
cmp
push
add
mov
stc
clc
mov
sar
not
shl
shld
mov
cmp
test
push
cmp
pushf
mov
call
mov
pushf
jmp
shl
sub
mov
stc
jmp
push
movsl
cmp
and
sub
hlt
pop
aas
jbe
inc
inc
and
pop
shrl
adcb
loop
div
mov
fiadds
push
or
cwtl
std
sub
inc
inc
mov
mov
mov
mov
icebp
push
leave
and
add
dec
outsl
popa
fs
imul
add
lds
add
loop
pusha
mov
jmp
inc
call
call
push
jmp
in
in
lds
out
push
xchg
aas
popa
punpckhwd
xchg
fildll
ds
mov
lds
pop
shlb
mov
rcr
in
xchg
mov
pop
push
mov
mov
push
jbe
pop
dec
pop
clc
dec
sub
mov
or
pushf
movl
pusha
push
mov
movl
pusha
push
lea
jmp
setl
mov
lahf
setb
lea
call
insl
mov
pusha
adc
jecxz
aam
and
shl
pusha
and
arpl
adc
jecxz
jo
arpl
pusha
and
inc
and
shlb
pusha
adc
push
adc
jecxz
inc
repz
adc
and
jae
mov
pusha
lea
jmp
mov
push
pushl
push
lea
call
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
stc
add
bt
pusha
mov
push
pushl
test
push
test
call
xchg
cmpsb
push
std
in
vmovupd
inc
dec
popa
outsl
push
andb
or
pop
loopne
stos
lcall
in
cmp
push
sub
inc
or
popa
shrl
sub
inc
and
push
jle
test
cmp
and
pop
xchg
xor
lds
decl
add
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
mov
push
movl
mov
movl
pusha
lea
jmp
movb
mov
movl
movb
call
push
pop
mov
setnp
pusha
pop
jmp
fsqrt
call
jecxz
jecxz
stos
gs
adc
daa
adc
int3
cmp
lcall
pusha
mov
add
cmp
cmpsl
loop
adc
xchg
dec
sbb
sub
add
xchg
movsl
sbb
ljmp
inc
sub
les
jl
pop
dec
clc
jmp
mov
jmp
in
lds
shr
loope
mov
dec
pop
fidivrl
mov
jo
leave
inc
ficompl
in
xor
lcall
and
popa
dec
mov
ljmp
sbb
jo
les
insl
lret
rcrl
lret
mov
test
mov
dec
leave
les
imul
les
outsb
nop
xor
mov
cmc
cmpsl
or
mov
stos
pop
xorl
jle
enter
js
push
notb
lcall
mov
pop
lahf
pop
or
pop
cli
fisubrs
adc
xchg
pop
mov
ffree
xor
ret
stos
dec
orb
outsl
icebp
xchg
mov
in
cmc
or
ja
add
loope
fsts
cli
adc
enter
lcall
cmpsb
mov
xor
cmpsb
or
scas
bound
lods
push
bnd
aas
mov
xor
and
aam
pushl
pop
test
push
or
mov
and
pop
aam
repnz
ret
mov
lcall
data16
mov
and
fs
jne
pusha
call
inc
bt
cmp
setge
movsbw
lea
jmp
call
movl
mov
movl
push
lea
jmp
cmp
lea
jg
jb
jmp
jmp
pusha
pushl
pushf
lea
jne
setle
not
mov
mov
pusha
pushf
movb
lea
jmp
sub
pushf
cmp
call
lea
je
jmp
cmc
shl
in
lds
sbb
cld
inc
dec
sub
and
aad
in
add
into
inc
push
hlt
jo
fidivrs
push
pushf
std
cmp
jle
repnz
lea
lods
mov
jl
iret
pusha
inc
adc
sarl
cmpsb
add
mov
cmp
outsl
inc
push
sti
mov
add
aas
mov
mov
push
xor
insl
movsl
rep
mov
repz
and
and
mov
push
mov
mov
in
lds
divb
out
push
sbb
jle
mov
dec
stc
loop
xchg
push
push
repnz
pop
subl
push
in
adc
mov
dec
dec
fs
cmpsl
mov
push
jg
iret
daa
scas
aaa
xlat
cmpsl
dec
sti
xor
rol
shll
ja
cltd
lods
sbb
in
vdivss
push
jo
inc
mov
push
outsb
rorb
pop
fldl
sub
push
and
orb
add
test
into
out
sub
cwtl
mov
out
inc
icebp
lea
fldln2
sub
ffree
add
jbe
sub
out
dec
cmpsl
pop
pop
pop
push
xlat
mov
sbb
mov
lods
mov
lea
push
mov
pusha
call
jmp
mov
adc
mov
lea
jmp
lea
jne
call
pusha
pushf
pushf
lea
jb
test
jmp
movsl
xchg
in
mov
iret
add
fwait
mov
rorb
inc
dec
push
sahf
cs
inc
push
stc
sbb
loop
add
aam
iret
out
ja
xchg
mov
out
into
rcrl
xlat
cli
cmpsl
cmp
mov
dec
cmp
pop
or
lea
imul
push
push
js
lea
mov
cmp
cli
notl
mov
cmp
mov
mov
push
test
mov
les
push
negb
cld
imul
lds
push
add
jp
adc
ret
jmp
hlt
mov
loopne
adc
shlb
das
sysret
sbbb
outsb
push
std
lods
aam
test
mov
jnp
add
sahf
fimull
je
out
shrb
inc
adc
popf
push
lds
inc
push
fldt
xchg
xchg
push
stos
cli
mov
mov
test
inc
aaa
dec
xor
stos
push
mov
adc
push
push
shl
imul
lds
inc
sbb
dec
xor
cmp
shrb
enter
fsubs
fcom
aaa
popl
test
mov
xchg
xor
cmp
gs
aad
pop
and
sub
mov
xchg
dec
xorl
aaa
repnz
decb
insb
mov
add
lods
xchg
dec
mov
stos
arpl
push
and
imul
lds
sbb
mov
xorb
mov
jae
add
fdivrs
push
and
mov
cmp
and
test
mov
jge
and
lahf
jo
xor
mov
or
iret
movlps
sbb
out
pop
jo
js
cs
es
das
fwait
dec
pop
lret
mov
test
popa
dec
int
jns
and
test
mov
and
int3
jnp
pop
mov
lods
movl
je
push
push
movb
pushf
pushf
lea
jmp
clc
stc
ror
call
bt
cmp
or
push
pushf
pusha
lea
jne
bsr
call
lods
xor
pop
loope
dec
sub
and
cmovle
mov
aaa
popl
outsl
or
sub
or
gs
add
sbb
mov
mov
pop
ret
and
push
movsb
xor
ret
imulb
in
cmpsl
sub
adc
daa
outsl
push
push
fistps
dec
adc
mov
cmc
popf
mov
cmc
in
lds
nop
mov
xchg
test
cmpsl
sub
adc
xor
pusha
lods
sub
mov
fstl
out
and
jp
jmp
popf
mov
in
mov
push
mov
int
adc
add
mov
dec
xchg
insl
sahf
xor
mov
ss
lcall
dec
fisubrl
ljmp
pop
xor
cmp
ret
dec
adc
xchg
push
xor
rcrl
cld
pushf
push
lods
int3
in
insb
aam
mov
outsl
aas
pop
lret
lea
mov
push
pusha
pushl
ret
movl
pushf
push
mov
pushf
lea
jmp
pushl
cmp
mov
lea
ja
cmc
clc
stc
imul
pusha
add
pushl
movb
push
lea
jmp
xchg
cmpb
in
lds
push
mov
add
pop
test
pop
pop
jg
push
lahf
xor
dec
adc
add
pop
pop
pop
cmp
dec
loopne
pop
cmp
pop
popf
andl
add
lods
test
test
inc
inc
cld
repnz
sbb
cltd
push
sbbb
cmpsb
arpl
sub
mov
push
sbb
sbb
mov
in
dec
xchg
dec
lds
int
pop
ficomps
push
mov
insb
fildl
idivb
les
mov
out
push
scas
cmc
xchg
ds
jbe
test
loopne
or
js
insb
cmp
jmp
loope
outsl
mov
xchg
push
stos
xchg
int3
cs
lods
fsubs
lret
sub
clc
data16
inc
pop
in
and
push
dec
repz
xorl
or
or
inc
rolb
mov
cwtl
lret
adc
call
pop
rcrl
imul
pusha
rorb
call
daa
pop
inc
sahf
mov
adc
jne
scas
cmovp
negb
sbb
pushf
lock
inc
or
sti
movsb
xchg
fadds
fcomp
xchg
int
test
clc
pop
or
adc
insl
loopne
insb
in
pop
mov
inc
or
xchg
arpl
jl
std
dec
pop
add
insl
dec
push
sub
inc
inc
ja
xlat
ss
inc
outsl
push
push
mov
cli
adc
inc
das
leave
outsl
sahf
lds
fidivl
sbbb
pop
inc
mov
std
fstpl
sbb
rorb
or
push
insl
cmp
sldt
or
pushf
jmp
xchg
mov
or
btc
movzbw
add
shld
btr
test
mov
clc
stc
test
push
pusha
jmp
mov
stc
clc
mov
test
cmp
call
imul
gs
xor
cs
insb
add
fs
jae
push
add
jb
cmp
jmp
sub
xchg
sbb
cmc
movsbw
cmp
mov
sar
mov
cmc
pushf
xchg
shl
shl
mov
pusha
stc
stc
sub
jmp
mov
pusha
push
pushl
push
lea
jmp
add
lds
mov
xchg
xorl
mov
push
aaa
idiv
shrb
mov
inc
mull
pop
rcrl
cltd
dec
mov
or
lods
shll
gs
push
fnstcw
or
es
mov
insl
mov
out
mov
dec
out
and
inc
into
cmp
pop
dec
out
xchg
lea
push
add
inc
dec
sarb
cs
movsl
push
lret
shl
push
orb
call
into
cli
jecxz
or
mov
mov
inc
lods
xchg
iret
fwait
enter
cmc
frstor
fs
jbe
add
xchg
mov
test
cmc
stc
not
add
shr
and
mov
shl
add
movzbw
sbb
movl
pushf
xor
push
mov
bt
jmp
jmp
jmp
lea
jb
push
pushf
pushl
lea
jmp
add
push
movb
lea
je
cmc
push
add
movb
lea
jmp
pusha
cmc
add
call
pusha
inc
pop
icebp
in
cmc
jecxz
arpl
gs
aas
cmp
dec
int3
sub
mov
mov
push
inc
pop
mov
ret
aas
cwtl
sbb
pusha
pushf
mov
mov
xchg
subl
lret
xor
insl
xor
repz
int3
sub
pop
mov
jecxz
orl
mov
push
fwait
outsl
pop
lock
lds
call
ret
add
dec
int3
sub
icebp
pop
mov
dec
ud0
mov
add
cltd
xlat
iret
xchg
adc
fcomip
xchg
xchg
adc
inc
ljmp
in
stos
cmp
adc
ret
mov
mov
inc
cmp
cmpsl
cmp
pop
cwtl
xor
mov
mov
sub
insl
cmp
jmp
loope
sbb
xchg
add
or
movb
sub
scas
and
add
movsb
fwait
aaa
push
mov
cltd
and
xchg
outsl
sbb
orb
cs
xchg
mov
movsb
pusha
movl
pushf
movw
movl
pushf
pushl
lea
jmp
movsb
daa
mov
cltd
mov
outsl
mov
mov
add
sub
out
sbb
loop
data16
in
dec
and
scas
das
xlat
test
push
push
pop
lcall
sbb
into
cs
cmpb
lods
and
xor
cmp
mov
negb
notb
mov
jmp
call
pop
dec
sub
lds
lods
subl
aad
jmp
ss
addl
stos
in
xchg
push
sub
ja
mov
fdivrs
cmp
leave
mov
sub
loopne
jbe
pop
lahf
jg
pop
add
mov
dec
ret
cwtl
nop
iret
hlt
cmp
mov
sub
cmp
xchg
jp
into
stc
sub
jmp
jnp
stos
adc
insb
or
mov
int3
sbb
and
adc
dec
mov
sbb
not
seto
mov
inc
inc
call
jmp
push
stos
pushf
pushf
lea
jmp
clc
sub
pusha
call
mov
lods
bt
cmc
call
sub
adc
pop
xchg
xchg
jne
fwait
ret
sub
sbb
and
stos
lret
mov
push
sbb
out
sbb
cmp
cltd
orb
mov
rclb
outsl
cwtl
fldenv
mov
repz
test
adc
insl
into
jnp
cwtl
push
iret
arpl
ljmp
movsb
mov
mov
jecxz
mov
sbb
xchg
jg
or
add
shr
jns
sub
and
pop
add
daa
pop
insl
fcmovne
std
in
in
dec
pusha
shlb
lret
xlat
inc
test
push
repz
cmc
ljmp
fisttps
pop
test
out
jmp
jo
test
inc
pop
lock
push
pop
repnz
ss
in
pop
dec
movsl
or
mov
cmp
xchg
jmp
ficoml
or
arpl
jo
in
fmuls
inc
nop
xor
pusha
or
mov
adc
sub
push
out
add
rclb
and
movb
jmp
pusha
call
jl
mov
push
clc
inc
jo
add
imul
lahf
hlt
je
sub
shll
mov
xor
sbb
imul
pushf
add
mov
lahf
pop
cmp
push
sub
mov
dec
cmpsl
pop
int
push
sub
test
or
cmpsl
push
mov
popa
xchg
jno
andl
mov
ds
fadd
jp
movb
jmp
movb
mov
mov
pushf
mov
pushf
pushl
pushl
ret
les
test
in
lds
nop
cmpsb
push
jbe
push
mov
arpl
mov
dec
inc
sub
cmc
xchg
dec
jbe
mov
mov
outsl
pop
aas
emms
out
scas
mov
ret
mov
ja
jno
push
cwtl
sub
pop
or
out
sbb
fidivl
sub
daa
orb
push
cwtl
jge
rcrb
inc
shrl
xchg
pop
sbb
cli
inc
lds
fcmovbe
ret
addr16
jmp
push
idiv
adc
mov
and
and
xchg
fstpl
mov
xor
or
mov
inc
xor
or
add
sub
call
push
lcall
mov
xor
pushf
pushl
lea
jmp
pusha
call
neg
jmp
mov
sti
cmp
stos
out
dec
sub
ds
inc
outsb
mov
iret
and
out
xchg
popf
cmp
mov
fdivrs
rcpps
cmp
mov
jae
movsl
test
or
dec
pop
jae
in
fs
mov
insl
inc
mov
inc
test
popa
icebp
inc
sbb
imul
sub
dec
and
das
arpl
out
sbb
mov
and
mov
lcall
mov
cmp
add
mov
cmp
hlt
mov
loop
ret
lea
jne
bswap
rcl
bsr
rcr
mov
jmp
lea
jl
je
jmp
pushf
cmp
pushl
xor
call
lea
jne
jmp
jmp
call
shl
out
jmp
arpl
mov
iret
sub
xor
pop
and
push
enter
enter
lret
cmp
loop
fsubs
pop
fcompl
or
shll
std
xor
out
iret
xor
jg
inc
sti
outsl
xor
xchg
pop
fcompl
out
add
sub
xchg
sub
movsl
pop
fnsave
int
and
adc
in
ds
sub
lea
call
jne
insb
ljmp
add
ss
pop
mov
inc
xchg
loop
lret
add
mov
push
mov
cmp
jnp
or
push
je
shr
adc
and
sahf
dec
pushf
pusha
xchg
push
dec
test
adc
xchg
pop
test
sbb
leave
das
cwtl
in
or
mov
jecxz
pusha
in
scas
testl
mov
pusha
enter
cmpb
cmp
adc
push
mov
mov
dec
cmpsl
int3
stos
sub
dec
call
push
jo
mov
outsb
push
out
data16
inc
aam
mov
push
repz
shr
int
pop
add
mov
cmp
add
dec
call
adc
in
lds
cltd
lahf
or
shrb
cmp
xor
xor
and
push
ja
aaa
leave
jmp
pop
mov
rorb
push
inc
shrb
call
adc
pop
fldenv
test
out
int
insl
sub
pop
xlat
ret
outsb
pop
scas
les
sub
lock
clc
data16
add
mov
scas
fdivl
addr16
cli
pop
lcall
decl
outsb
sub
mov
pop
scas
les
les
sbb
scas
jle
cmp
jne
call
mov
loopne
fstpt
and
and
scas
les
outsb
cmp
jg
mov
mov
push
in
mov
and
sbb
daa
xchg
cltd
xchg
loopne
cmp
aas
lds
and
sbb
fsubs
fwait
ja
add
sahf
call
jmp
lahf
cmp
push
sub
mov
insl
faddp
cmp
sub
push
xchg
ja
push
mov
mov
mov
stc
test
jmp
call
cmp
call
add
test
add
call
lea
call
call
pop
ljmp
push
inc
test
jb
sub
mov
ret
icebp
sub
push
aam
sbb
loop
xchg
in
dec
mov
mov
sbb
add
rorb
inc
xor
loop
cmp
push
xor
shrb
bound
mov
xlat
lret
out
lds
xchg
jno
sbb
mov
add
mov
adc
push
out
test
scas
cwtl
sahf
cmp
cmp
dec
stc
jge
fisttps
cwtl
enter
fnstsw
add
xchg
mov
pop
jl
cmp
cli
add
mov
jns
int3
dec
add
lea
ja
pusha
pushl
lea
jb
bt
push
pusha
cmpb
call
lea
je
push
cmp
pusha
jmp
popf
push
test
in
lds
jno
xor
rcll
mov
jbe
das
test
into
inc
sub
or
add
jno
xchg
mov
repz
filds
push
in
inc
adcl
xchg
imul
enter
dec
pop
push
das
xchg
cltd
incl
adc
xchg
stos
inc
les
ret
or
xlat
das
mov
lahf
mov
sti
imul
push
call
mov
lds
mov
and
dec
and
and
mov
mov
lds
pop
inc
xchg
cld
insb
push
mov
mov
fmul
fstp
mov
ret
jns
out
push
and
movsl
clc
call
jp
jle
popf
loope
cmc
and
inc
mov
popf
mov
xchg
fwait
mov
sbb
call
clc
and
test
jb
or
sbb
in
mov
adc
pop
mov
lret
arpl
rcrl
mov
cmp
cmpsl
mov
jns
pop
cmpsb
test
dec
inc
dec
jmp
mov
xlat
pop
cmp
dec
int
mov
lds
decb
sbb
adc
mov
sub
in
lds
stc
pop
loope
pop
xlat
sbb
sarl
lea
sub
cmpsb
or
or
lea
cmp
mov
pop
pop
stc
insl
xor
aas
stos
sub
push
fcompl
sub
fists
inc
fcoms
in
push
xchg
add
add
insb
jno
cltd
pop
mov
add
mov
shlb
and
or
xor
mov
mov
out
and
inc
stos
pushf
repnz
xor
imul
jae
call
pusha
call
rep
lea
mov
mov
lea
jmp
lret
in
lds
cmp
cwtl
mov
cmp
in
dec
and
jg
push
outsb
xchg
and
lcall
or
adc
push
cmp
push
sub
mov
insb
fdivr
pusha
dec
sub
test
xor
sbb
mull
outsl
pop
mov
aas
pop
daa
xchg
subl
cmp
inc
xchg
push
in
or
aam
push
or
ficoml
je
jp
push
shrb
mov
push
iret
adc
xchg
repz
mov
sahf
dec
dec
incl
movsb
movsl
outsb
rorl
xor
and
or
or
lds
and
and
cli
bound
fs
jbe
pushf
pushf
dec
stc
rol
lea
jne
pusha
push
pushl
lea
call
cmc
clc
cmp
cmp
jmp
mov
movzbw
mov
push
mov
not
lods
cmc
cmp
pushf
xor
pusha
not
movb
mov
pushf
dec
clc
movb
movl
movb
ror
jmp
dec
test
call
push
lds
test
movsl
mov
or
fisubl
adc
lods
sbb
pop
dec
jle
mov
mov
out
inc
repz
dec
mov
sti
rcll
arpl
xor
mov
mov
mov
cmc
cmc
add
bt
clc
test
jmp
insl
loop
lds
mov
jne
popf
jae
mov
lods
and
dec
sbb
mov
test
and
sti
xchg
les
jo
jbe
aad
in
je
mov
xchg
push
ljmp
sub
xor
or
je
or
les
sbb
dec
add
out
lock
inc
loop
lds
jbe
push
mov
out
lahf
jg
lret
sub
xor
lods
xchg
jns
sbb
push
repnz
cmp
aaa
or
test
cmp
imul
into
jb
les
lods
sbb
sbb
mov
cltd
outsl
jnp
fists
lods
adc
pop
jnp,pn
xor
add
loope
addl
test
loop
leave
jle
jl
fs
cmp
fisttpl
stos
popf
ret
ror
mov
clc
cmc
mul
sbb
lods
js
fistl
mov
pop
mov
jle
movsl
jb
cmc
jb
aas
bound
jns
xchg
test
das
dec
movsl
pop
iret
push
gs
dec
xlat
xlat
pushf
sub
int
mov
aaa
mov
int3
push
adc
les
aam
imul
lds
xchg
lock
dec
mov
aas
pop
jmp
fs
or
dec
push
out
int
mov
xor
loopne
gs
inc
jmp
mov
daa
ret
std
or
mov
mov
mov
aas
ljmp
pop
sub
dec
dec
xor
mov
pop
adc
xor
cmpsb
mov
in
pop
cmpsb
or
adc
jno
xlat
ja
outsb
gs
data16
or
js
jae
shrl
sub
mov
inc
scas
shll
xchg
out
cmp
push
sahf
xchg
pop
jno
add
mov
jl
jbe
jp
insb
sub
or
cli
daa
shll
arpl
dec
in
dec
push
push
movsl
aad
lods
mov
jp
inc
mov
inc
push
mov
and
dec
testl
in
vsubps
xchg
popa
xor
in
and
hlt
xchg
lret
clc
inc
into
pop
ds
data16
push
pop
push
in
mov
inc
cmp
inc
xor
mov
add
mov
or
push
sub
push
loop
out
fucomip
lds
jns
rcll
mov
pop
mulb
adc
adc
cltd
daa
mov
pusha
mov
xchg
stc
popa
jl
shll
push
pxor
les
xchg
daa
pop
xchg
pop
sbb
in
cmp
pop
dec
push
pop
or
jge
mov
or
xchg
pusha
fistpl
mov
inc
dec
xchg
jmp
jns
cld
pop
movsb
daa
xchg
dec
mov
aaa
scas
mov
dec
gs
in
popf
jne
fisttpll
popf
add
cmp
xor
and
movzbl
mov
push
push
pushl
ret
mov
lds
divl
data16
fs
inc
xorl
in
enter
push
fdivl
movsb
jp
cmpsb
sbb
pop
imul
push
push
sti
dec
pop
icebp
pushaw
comiss
inc
jnp
stos
cmc
push
cwtl
insb
sbb
addr16
ds
mov
hlt
mov
loop
roll
mov
cmc
fisttpl
pop
fs
shlb
sub
push
in
and
insb
cld
fs
cld
xchg
add
lods
nop
mov
out
testl
in
lds
test
and
fcomps
adcb
scas
add
push
shrl
jle
mov
jp
mov
insl
fucom
test
cltd
aaa
mov
int
mov
lds
scas
lock
sahf
aaa
xchg
outsl
cmpsl
push
mov
pop
adc
cmp
jb
add
mov
jns
mov
int
mov
mov
xchg
mov
lock
rcr
iret
add
pop
call
dec
dec
xchg
jns
mov
or
mov
outsb
sbbb
sbbb
loopne
jmp
jecxz
cmp
call
lea
jae
push
push
lea
jne
jmp
mov
pushl
push
push
pushl
ret
pusha
mov
clc
or
call
mov
setb
inc
not
sete
mov
push
movb
pushf
lea
call
pusha
mov
push
jmp
js
cmp
in
dec
cwtl
testb
cmp
dec
mov
lcall
mov
pop
sbb
adc
addb
stos
test
mov
in
adc
popf
xor
dec
sub
jge
xchg
scas
lcall
mov
fildll
cltd
and
test
push
cmp
push
cmp
push
xor
adc
hlt
dec
pushf
clc
xchg
sub
and
daa
mov
or
cltd
or
jl
cmc
or
sub
aas
aas
mov
adc
add
mov
push
nop
push
ds
test
divb
xchg
adc
inc
outsb
dec
xor
lret
aaa
and
dec
xchg
mov
cmp
add
ret
addr16
sub
into
adc
add
and
aaa
xchg
sub
jne
xchg
dec
pushf
test
fstpt
mov
jnp
inc
mov
movsb
mov
add
push
xchg
dec
std
push
xchg
aam
aas
mov
into
shl
adc
sbb
xchg
pop
add
iret
mov
loopne
mov
jecxz
sbb
into
mov
subb
lods
inc
jmp
out
sbb
sti
test
inc
jecxz
mov
scas
imul
outsb
push
out
jle
out
push
mov
test
push
cld
lea
jne
pushf
jmp
aas
jl
fsubr
pusha
mov
xor
ret
xchg
push
loop
jbe
call
and
lds
xchg
test
in
mov
or
xor
sub
test
cmp
push
lock
sbb
jmp
mov
mov
mov
les
je
imull
dec
and
sub
pop
icebp
sbb
out
int
adc
cmp
sbb
negb
dec
mov
xchg
cmp
fistl
sahf
jo
rcr
cmp
push
sahf
adc
lret
jnp
xchg
loopne
push
adc
pop
pop
push
out
pop
ret
gs
add
jb,pt
test
push
push
mov
loop
mov
mov
and
sub
shlb
xor
add
dec
or
mov
call
setg
mov
lea
call
clc
cmp
add
movb
pusha
clc
call
pusha
lea
pop
movzbw
lea
movsbw
movsbw
mov
push
push
lea
call
pushf
pusha
pushf
jmp
jmp
or
mov
lret
in
xor
sbb
stc
push
and
xor
fcomps
adc
xchg
pop
fidivl
xchg
sbb
aam
or
popa
lcall
sbb
call
addr16
outsb
test
popa
in
repnz
mull
push
call
cmp
add
push
or
cmpsb
test
and
push
cwtl
xlat
inc
xchg
mov
pop
inc
cmc
sti
add
pop
in
mov
xchg
lods
and
xor
or
cli
jb
sbb
dec
mov
mov
ds
and
push
loop
pushf
mov
call
cmp
push
movzwl
shr
pushl
pushf
mov
test
cmc
stc
stc
add
cmc
stc
stc
test
mov
jmp
movl
pushf
movb
pushl
popl
mov
pushf
pushf
pushl
ret
mov
pop
lea
push
jmp
scas
in
cmc
fldln2
lds
subb
test
test
jae
mov
test
jnp
mov
test
inc
in
or
xor
fnstsw
and
ret
adc
imul
pushl
dec
lea
push
fs
loopne
and
pop
mov
bound
sarl
mov
push
inc
and
popa
loop
bnd
dec
mov
pop
fwait
ret
jo
scas
push
sahf
push
outsb
xchg
ss
scas
in
pop
xchg
sub
insl
jae
add
mov
test
sbb
rol
btc
add
jmp
shl
lock
lds
ret
aad
push
mov
negl
dec
xor
add
lds
cmp
jbe
push
clc
xchg
cmpsb
pusha
adcb
call
lahf
adc
mov
mov
insb
jne
fistpl
gs
xchg
popf
push
repz
loope
int3
add
aas
mov
mov
jp
jb
cs
inc
inc
cmpsl
imul
lods
dec
daa
jge
mov
lret
or
enter
xchg
cmp
aaa
shl
sarl
xor
mov
test
fbld
les
faddl
in
hlt
fs
pusha
ror
sbb
aaa
xchg
dec
fsubr
cli
in
and
push
xor
pop
xchg
mov
jo
stos
out
repnz
push
cmp
divl
add
popf
or
cwtl
dec
dec
xor
shll
cld
jle
push
sahf
pop
cs
inc
ss
sahf
push
dec
mov
add
or
mov
call
int3
js
fsubr
sub
lods
ret
and
inc
xor
in
shlb
cmp
sbb
imul
pop
push
pop
sbb
pop
fcmovu
sbbb
bound
inc
arpl
dec
pop
rcll
int3
js
rcr
mov
loopne
dec
mov
cwtl
test
mov
jmp
int
xchg
lds
shlb
jmp
cmc
imul
jmp
sbb
lds
shrl
psrlw
pop
sbb
ror
rol
xchg
add
mov
xchg
ljmp
in
aad
test
cltd
cmp
mov
loopne
dec
mov
and
popf
push
das
cmp
mov
or
je
iret
pop
cmp
pusha
add
scas
push
xor
sub
mov
cmp
test
lahf
sbb
test
cmp
icebp
mov
adc
xor
test
xlat
in
cmpsl
shl
fnstenv
scas
jns
adc
and
push
int
fisttpl
jl
sbb
addr16
push
notb
cmc
test
inc
dec
or
je
sub
jl
push
test
xchg
add
xchg
in
je
aam
mov
stos
and
das
das
ret
jb
call
pushl
pushl
lea
jae
bts
or
stc
mov
call
lea
jae
pusha
not
mov
lea
bsr
pushf
rcr
mov
rol
pusha
shl
shrd
mov
test
jmp
xchg
add
aaa
jmp
xchg
cmpsl
xchg
pop
shll
pop
imul
pop
in
add
and
es
movntq
sub
loop
pusha
or
test
add
mov
mov
jno
std
inc
mov
cmc
lea
sub
pusha
lea
je
test
cmp
jmp
xchg
jbe
push
pusha
movl
mov
pushl
lea
jmp
aam
dec
in
xchg
out
aas
mov
stc
daa
jno
push
test
cmp
sbb
fadds
cs
mov
jo
adc
add
mul
lds
sti
lahf
fadds
test
shll
mov
inc
cs
scas
mov
loop
ja
lods
les
xor
fstpt
cltd
insl
xchg
stc
fnstenv
cmp
aas
out
inc
rorl
cltd
mov
jno
icebp
push
call
ja
pop
fisubs
cli
fildl
cmp
call
cmp
cmp
jmp
jmp
cmp
pushl
pushf
pushl
pushl
lea
jbe
shr
mov
xadd
jmp
pop
and
and
xchg
sahf
adc
cs
mov
cwtl
inc
je
cmp
movsl
lcall
jp
pop
xor
aas
mov
mov
imul
sti
daa
pop
cmpsl
adc
add
cmpl
mov
cld
cmc
jbe
cmpsb
jl
jns
jge
xor
and
pop
jg
jbe
jae
and
mov
cmc
daa
inc
add
xchg
sub
std
jnp
je
push
dec
imul
mov
jle
xchg
or
outsb
ljmp
jbe
add
mov
cmp
addr16
jnp
add
std
mov
in
xor
jle
jbe
xor
or
jmp
push
ja
jg
mov
adc
cmp
ljmp
ja
std
iret
daa
xchg
xchg
cmc
mov
xchg
in
out
out
pop
je
ds
stc
jle
xchg
sub
std
jnp
ja
aam
sub
jg
sti
xchg
cmp
addb
jns
mov
test
addb
aas
mov
jp
xor
jbe
arpl
cmp
push
imul
xor
cld
push
add
jp
or
das
in
lahf
or
xchg
xchg
fsubl
push
dec
sarb
adc
cli
cmpsb
call
bnd
and
or
cmp
mov
cld
scas
and
and
repz
cmc
pop
mov
jp
jp
xor
xor
pop
out
jae
incl
push
adc
xchg
sahf
adc
outsb
out
dec
in
lret
scas
pop
xchg
xor
push
inc
sbb
dec
jbe
stc
mov
and
mov
xor
jecxz
pop
cmp
cmc
hlt
fs
jle
push
test
js
repnz
jge
xor
mov
jae
dec
imul
clc
jp
call
adc
or
je
faddl
adc
jge
ret
out
mov
bnd
es
repz
lea
dec
and
out
push
lock
cmp
or
xorl
push
xor
jg
add
xchg
mov
test
pop
jge
or
xor
xor
stc
jl
cld
sbb
add
stc
jecxz
outsl
jg
xchg
arpl
cli
push
aas
std
add
jns
cld
cmpsb
sahf
fldln2
sbb
xor
inc
adc
jae
stos
cs
ljmp
into
jo
adc
lock
in
cmpsb
sub
fcoml
nop
sbb
push
out
pop
and
sbb
out
in
outsl
and
and
and
divb
aaa
jmp
and
mov
or
jmp
xor
jecxz
and
cmp
ljmp
mov
data16
dec
sti
xor
call
lock
cld
jl
push
orb
cli
stc
sti
jb
xchg
sub
xor
in
cmp
andb
xor
cli
hlt
addr16
cli
stos
cmp
cwtl
pusha
mov
fsubl
out
in
jmp
jo
fidivs
jbe
gs
adc
and
std
lods
cmpsb
das
and
pop
mov
adc
and
cld
xor
clc
int3
add
notl
testb
push
ja
or
jb
adc
xlat
pop
xor
insl
jbe
and
xchg
xchg
jp
jge
adc
xchg
xchg
xor
stos
lcall
or
repnz
or
std
jp
mov
xor
arpl
loop
sbb
orb
mov
pop
bnd
or
je
sub
imul
sub
xchg
mov
sti
ret
mov
ret
daa
popf
sti
xor
popf
rsm
inc
xor
ja
decb
adc
out
mulb
cmpsb
incl
xchg
popa
xor
mov
sti
adc
je
shll
inc
adc
lret
jae
xor
jp
mov
sbb
outsb
dec
xor
clc
xor
nop
and
sub
adc
xchg
or
xchg
mov
js,pn
xchg
je
and
mov
pop
fcompl
mov
bound
loopne
cmp
jmp
xchg
divl
or
ja
jae
jo
push
fistpll
lock
scas
ljmp
xor
jno
and
add
adc
xchg
mov
lret
mov
rorb
jbe
rolb
mov
mov
mulb
mov
or
cmp
dec
xchg
dec
xchg
je
pop
outsb
ljmp
xchg
pop
jp
ret
out
movsb
pop
xchg
sbb
sub
and
rsm
je
fwait
cmc
mov
xor
xchg
lock
mov
mov
xor
jno
testb
loopne
mov
notl
arpl
cwtl
mov
xchg
call
mov
adc
sahf
out
insb
push
mov
aas
in
xor
xchg
or
fdivr
pop
daa
mov
call
das
xchg
cmp
stc
in
jg
fnstenv
mov
call
aas
repnz
pop
mov
or
repz
std
jge
mov
ljmp
lock
sahf
addb
dec
std
xchg
call
mov
mov
das
mov
or
das
xchg
pusha
je
ljmp
fsubrl
call
loopne
xchg
jmp
shrb
sbb
xor
out
xor
mov
mulb
ja
nop
and
sbb
pop
sub
mov
es
dec
aaa
div
ja
fdivr
cmpsb
xlat
sub
push
push
stos
xor
inc
stc
jno
loop
jl
scas
addb
fildll
stc
jbe
ja
and
sbb
jno
cmp
adc
stc
das
push
cmp
sub
pop
adc
adc
push
pop
bound
mov
sub
lcall
incl
mov
mov
and
or
xchg
fstp
xor
mov
mov
repnz
add
xchg
pushl
cmc
adc
shlb
push
ja
fdivr
cmpsb
sahf
sub
repnz
sub
stc
push
xchg
sub
xchg
cmp
lcall
das
add
pop
add
stc
dec
inc
hlt
inc
lock
cwtl
js
jae
bound
jno
loopne
jg
out
outsb
mov
js
mov
jp
ss
mov
or
xor
lods
ja
xor
cmp
int
xchg
mov
sahf
push
inc
pop
or
xchg
mov
jno
sbb
xor
jns
stos
cmp
cld
notl
mov
mov
insl
cmp
push
stos
xor
call
and
out
cmp
jmp
insb
call
sub
xchg
arpl
ja
rolb
pushl
aas
repz
xchg
jo
enter
mov
cld
pop
incl
lcall
sub
sbb
ljmp
cld
sbb
jno
pop
aaa
inc
cli
adc
test
cmp
xchg
fstpt
imul
out
mov
xchg
ljmp
dec
sub
push
repz
popf
es
and
push
stc
mov
rolb
jle
mov
or
addb
sub
cmp
popa
call
cli
js
jmp
iret
call
mov
jmp
std
in
xorb
js
decl
push
cs
jmp
cmp
xchg
push
push
or
sub
iret
cmp
dec
inc
pop
repnz
je
fiaddl
xchg
and
cmp
sahf
xchg
or
mov
fildll
decl
js
clts
mov
lock
movzbl
inc
mov
pop
push
xchg
push
pop
mov
clc
insl
sub
pop
jp
scas
sbb
jns
aaa
ficoml
jmp
js
sub
pop
ja
xchg
lcall
mov
xor
mov
jge
push
inc
jbe
mov
xchg
jo
mov
sub
mov
jbe
jo
insl
fwait
lcall
ljmp
jp
xchg
popf
inc
imul
sahf
xor
in
call
popf
push
cmp
jnp
in
jns
xchg
test
pop
mov
repz
cli
je
mov
push
js
cli
in
xor
jl
pop
inc
stc
out
mov
inc
cmp
andb
jl
dec
imul
test
add
cmp
stc
arpl
and
data16
jge
or
or
add
cli
jnp
aas
jp
andb
xorl
mov
movl
xor
js
es
popa
maskmovq
mull
mov
push
aam
fstl
movlps
add
jg
addb
mov
es
daa
mov
sub
mov
add
mov
mov
aas
cmp
push
hlt
push
les
adc
jbe
mov
cmp
mov
dec
stc
mov
ds
es
mov
test
add
seto
mov
dec
mov
lods
and
adc
xchg
xor
mov
dec
ljmp
dec
push
sub
cmp
lahf
sbb
loopne
in
leave
xor
add
sbb
sbb
jns
mov
or
sbb
push
mov
rcr
ficompl
scas
mov
ss
test
sub
cmp
aas
cmp
jae
cmpsl
cmp
pop
mov
cmpsl
aas
popf
push
stos
mov
and
es
and
cmp
jbe,pn
push
jl
ss
xor
or
je
push
push
or
mov
and
mov
fdivrl
mov
mov
mov
push
and
aaa
sti
das
gs
jo
adc
xchg
repz
jae
imull
cld
negb
dec
pop
outsb
pop
xchg
jg
dec
dec
push
cmp
js
push
insb
pop
bound
test
dec
aaa
pop
mov
sub
pop
pop
hlt
mov
jl
mov
sbb
cmpsl
inc
pusha
cli
xorb
sahf
adc
jns
or
and
js
stos
outsb
push
jmp
add
push
cs
cmp
sub
sbb
and
cmp
movsl
jle
inc
stos
rcl
push
sbb
and
cmpsl
fimull
jge
xchg
cld
sbb
xor
or
add
xor
adc
mov
and
xorb
cmp
std
xchg
and
adc
cmpb
sbb
idivb
or
daa
pop
cmp
jle
cmp
or
jl
mov
inc
cmp
mov
or
lock
cmp
mov
dec
and
xchg
bound
mov
pop
aaa
sar
mov
push
mov
test
arpl
dec
adc
cmp
pusha
jl
adc
std
lock
ds
mov
mov
sbb
sarb
cmpsl
push
mov
inc
cli
mov
sti
incb
sti
lret
repnz
ja
and
mov
ss
cmpsl
pop
cld
adc
outsb
subb
add
inc
xor
or
xor
xchg
push
push
sub
mov
scas
scas
push
mov
movsb
sarl
add
lret
cmp
pop
roll
vmovapd
add
xchg
xchg
sbb
fildll
xchg
fsubl
jbe
and
outsb
xor
fdivs
xor
inc
or
push
fcompp
mov
sbb
cmp
stos
loop
mov
sahf
mov
imul
mov
cmp
imul
out
push
pop
cmp
std
cmp
pop
cmp
xor
sbb
mov
add
push
xchg
out
lcall
mov
push
pop
mov
inc
xchg
jae
mov
dec
push
dec
mov
add
mov
xchg
sub
sub
adc
inc
mov
fistl
dec
inc
push
repz
fldenv
clc
dec
bound
data16
push
dec
jp
adc
xor
lods
pusha
push
inc
gs
adcl
xor
dec
push
sbb
ret
mov
mov
loop
pop
cmpsl
sti
cltd
inc
shlb
jp
sbb
call
pop
fiadds
mov
mov
adc
xor
test
aam
negb
cs
mov
into
aaa
cld
repz
push
aas
daa
es
ret
xchg
imul
push
xor
hlt
push
in
sub
jo
xor
or
cmpsl
or
adc
jle
mov
imul
nop
push
loop
mov
lahf
jmp
push
cmp
cmp
bound
sub
hlt
mov
ja
cmp
cmp
popa
pop
nop
xor
sub
mov
sbb
es
push
push
clc
jp
pop
jo
sbb
jb
push
mov
sub
loop
mov
cmp
pushf
das
fcoms
fadd
mov
adc
mov
xor
xchg
push
pop
pop
mov
dec
js
mov
stos
nop
xchg
cmp
add
push
xor
icebp
aad
mov
addr16
xor
dec
pop
sbb
pop
jnp
cmp
and
mov
and
das
outsb
jb
int3
push
aam
dec
pop
sbb
mov
lods
lods
ss
xchg
add
enter
mov
sbb
sbb
inc
push
inc
dec
push
adc
push
cld
test
lods
xor
inc
push
xor
and
stos
fucomip
jb
mov
pop
mov
movsl
xchg
popa
pop
and
cmp
into
push
inc
mov
cmp
or
sub
adc
outsb
stc
xor
imul
sbb
cmpsl
test
inc
or
sti
rorb
push
adc
fiadds
sti
sbb
cmc
roll
es
rcrb
rcrl
cmpsl
push
pop
mov
inc
jb
cmp
mov
and
push
jg
sbb
xchg
jo
xchg
cmpsb
push
add
mov
mov
push
dec
jle
into
jle
add
cld
rsqrtps
dec
jbe
xor
or
into
jbe
mov
cmp
ss
inc
fnsave
sbb
out
into
push
mov
dec
mov
mov
jne
cmp
xchg
stos
cmp
fwait
xchg
xor
aaa
xor
jmp
sbb
cmp
and
jp
jns
dec
fistpll
cli
mov
pop
mov
sub
inc
dec
push
cmp
js
jmp
add
push
xchg
cmp
adc
ret
pop
sbb
fs
pusha
pusha
adc
pop
sbb
xor
mov
pop
and
test
mov
popf
push
add
sub
xchg
in
ss
outsb
cmp
mov
cmp
mov
dec
ljmp
imulb
mov
cmp
fimuls
mov
enter
pop
add
out
add
push
jne
repz
imul
cmp
pop
cmpsb
mov
mov
int
test
and
or
dec
adc
bound
pop
adc
aaa
lret
sub
and
loop
push
adc
test
repnz
jns
inc
movsb
adc
mov
mov
xor
scas
jle
or
mov
rorl
xchg
cmpsl
pop
cmp
cwtl
jmp
mov
sbb
data16
mov
mov
push
xchg
dec
icebp
adc
jbe
out
mov
cmp
cmp
test
push
mov
mov
sbb
jp
xor
mov
push
mov
xorl
jae
mov
das
cmp
insb
repnz
mov
scas
xchg
mov
add
inc
pop
sbb
aaa
mov
or
xchg
push
das
lods
and
cmpsl
pop
or
data16
aaa
add
mov
out
dec
pop
pop
or
mov
popa
test
mov
mov
pop
sub
pushf
cmpsb
sbb
and
xchg
sbb
dec
jle
scas
pop
orl
jno
lret
jecxz
out
jbe
xor
mov
mov
cmp
imul
out
push
mov
lock
int
push
xor
data16
or
mov
push
dec
inc
mov
cmp
inc
cmp
sahf
cs
xor
cmp
sub
dec
inc
pop
mov
cmp
xor
xchg
adc
es
push
pop
add
ss
into
xchg
iret
fnstenv
addb
and
cmp
cmp
mov
bound
ja
addr16
cmp
loope
popa
rcr
jbe
in
mov
jle
cli
adc
or
cmp
or
test
stos
xor
push
mov
fists
push
inc
lods
push
jno
mov
mov
sbb
out
and
mov
sub
push
test
ja
inc
dec
inc
test
dec
xor
lods
mov
cwtl
jae
pop
xor
cmp
dec
mov
ret
ret
mov
cmp
push
pushf
inc
adc
dec
dec
popf
xchg
pop
or
cmpsl
cwtl
inc
sub
xor
dec
or
out
add
out
imull
ss
cld
mov
jne
xor
lret
femms
jae
cwtl
push
icebp
lods
bound
and
xchg
stc
mov
clc
test
test
movsb
dec
sbb
orb
js
lock
mov
sub
jns
aas
shl
cmp
xor
hlt
daa
xchg
inc
xor
jbe
fstpl
mov
in
hlt
adcb
or
jg
cmp
pusha
xchg
add
mov
jno
cmp
pop
inc
mov
pushf
and
xor
push
icebp
lahf
insb
lock
incl
stos
fbld
add
out
test
jle
jp
or
testb
sahf
and
icebp
mov
shrl
inc
and
cli
mov
cmp
dec
push
xor
aaa
dec
jecxz
cmp
lret
mov
int3
sti
ss
jbe
daa
dec
or
inc
mov
push
cmp
xor
sbb
in
sbb
rcr
pop
jbe
jp
inc
neg
ljmp
dec
bound
cs
push
mov
scas
sub
test
inc
pop
xor
mov
mov
lahf
lret
xor
dec
sub
test
sti
mov
cmp
aaa
jnp
mov
shll
int
mov
in
mov
or
mov
mov
sti
pop
lret
fsubs
fnstcw
pusha
inc
mov
or
sub
loope
cmp
cmp
sti
pop
cmc
addb
aas
sub
push
shlb
pushf
jbe
cmc
pushf
sbb
mov
aaa
push
lock
cltd
mov
cmp
sbb
and
push
cmpsb
loopne
xor
es
xchg
adc
lret
stos
cmp
and
outsl
ss
mov
cmpsl
sar
xchg
push
mov
sti
test
clc
iret
push
mov
dec
pop
daa
xor
xor
mov
cmp
pop
sbb
sbbb
sub
sub
dec
add
fdivl
jmp
pop
ds
inc
and
gs
xor
mov
or
mov
lret
out
call
dec
mov
movsb
adc
push
ljmp
addb
fildll
mov
jo
mov
test
cmp
mov
adc
fs
xor
lahf
dec
mov
mov
inc
add
dec
ret
xchg
sti
push
pop
pop
xchg
xchg
sqrtps
xchg
sbb
or
push
mov
and
add
mov
push
push
mov
push
mov
stos
jle
cmp
add
push
icebp
xchg
jns
pop
lds
mov
and
mov
mov
push
scas
jnp
mov
add
xchg
dec
sbbb
jo
pop
dec
inc
cmp
dec
pop
mov
lret
sub
pop
jp
or
cli
push
jb
push
es
jne
inc
lahf
mov
cs
out
out
and
mov
fiadds
fcomps
into
lods
pop
cmp
jge
lret
shl
sbb
inc
sahf
xor
mov
stos
stos
mov
mov
sbb
ret
dec
loop
pop
inc
sbb
scas
bound
xor
push
aaa
push
cmp
jae
or
dec
or
pusha
inc
les
xor
adc
out
dec
mov
mov
push
pop
xlat
ss
ss
xor
push
cmp
leave
mov
cs
push
arpl
xchg
mov
mov
xchg
xlat
or
rol
sub
xor
dec
gs
lcall
dec
movsb
jns
popf
add
std
mov
xor
or
adc
pop
cmp
lea
push
pop
out
movhps
pop
inc
or
scas
dec
or
fcmovnu
jbe
mov
jp
pop
mov
inc
sbb
or
daa
or
pop
insl
mov
pop
xor
cmp
push
sub
cmpsl
rorl
add
rcrb
mov
sbb
mov
and
daa
fcomip
jge
cmp
adc
adc
lahf
nop
mov
pop
sbb
les
fdecstp
mov
shrb
jno
adc
das
mov
cmp
jne
or
sbb
or
cmp
cmp
push
add
xchg
push
rclb
repnz
and
lods
add
cmp
adc
xor
xor
movsl
mov
xor
sahf
mov
test
lret
lret
lahf
mov
in
xor
lods
dec
out
lods
inc
jnp
mov
test
js
sahf
sub
cmp
or
movsb
lea
mov
lret
xchg
daa
je
mov
push
int3
shlb
fdivrs
jg
ret
or
adc
std
xchg
daa
push
test
dec
outsl
jnp
or
bound
mov
or
adc
movsl
pop
int3
and
notl
and
inc
aas
in
test
mov
mov
repnz
inc
div
xchg
dec
push
push
rcrl
sbb
push
xor
call
cmpsb
xor
es
in
mov
mov
adc
scas
add
push
pusha
test
or
out
ss
fwait
inc
lods
xlat
mov
es
mov
dec
loopne
push
call
or
push
mov
insb
mov
cmp
push
xor
adc
jno
mov
pop
push
aam
sbb
pushl
insb
dec
jns
add
xor
sub
mov
sub
into
push
jae
pop
mov
sbb
mov
out
sub
scas
jbe
or
mov
push
cmp
adc
xchg
mov
sbb
push
roll
cwtl
ss
sbb
xor
or
pushf
lea
lods
inc
repnz
xchg
xchg
mov
sub
aad
lret
and
mov
push
cli
mov
xor
mov
cmp
cmp
or
and
cmp
lahf
inc
and
mov
sahf
mov
clc
xor
and
das
sub
add
push
sub
add
dec
pop
mov
rolb
xchg
loop
sub
mov
sbb
es
pop
cmp
sub
push
orl
sahf
mov
jo
lahf
ja
mov
in
loopne
sub
data16
daa
xor
das
jmp
lcall
cld
pop
add
daa
sub
ficoml
mov
xchg
mov
mov
sub
mov
mov
sub
les
cmp
add
jno
test
sub
mov
mov
outsb
cmp
pop
subb
push
sub
inc
mov
hlt
pop
verr
lock
jns
in
outsb
xchg
add
mov
xor
pushf
fcomp
or
mov
dec
scas
sti
lcall
clc
ja
xor
test
sub
pop
sbb
call
stos
cmp
loop
push
daa
lods
sbb
mov
dec
pop
pop
and
xchg
test
arpl
lret
test
cmp
movsb
test
outsb
cmpsl
fisubl
xchg
or
pop
cmp
cld
sbb
ss
xorl
cli
aaa
shlb
mov
mov
lcall
cmp
mov
es
cmp
test
sub
mov
cli
cmp
and
dec
cs
xchg
inc
jg
mov
cmc
adc
movsl
cmp
lods
mov
lcall
sub
sub
cmp
dec
out
out
xor
es
and
cmpsl
cmp
cs
dec
lahf
mov
rorb
adc
or
mov
lret
pop
out
mov
cli
cmp
fisubrs
dec
pop
inc
xor
inc
xchg
sub
mov
xchg
sti
pop
cmp
inc
rorb
movsl
in
inc
dec
lods
cmp
mov
int3
jns
aas
cli
cmpsb
std
nopl
dec
xchg
das
push
lea
cs
or
adc
movsb
push
or
ljmp
lahf
dec
adc
mov
push
aas
ret
sti
push
stos
andb
adc
ds
adc
lret
cmp
add
jbe
mov
sbb
repz
xchg
das
cmp
sbb
and
push
xor
mov
push
xchg
decb
cmp
pop
std
dec
stos
cwtl
fmulp
mov
mov
and
sub
cmp
in
test
xor
out
es
or
lret
jbe
xchg
dec
pop
cmp
inc
lret
mov
or
cmp
shlb
into
addl
xchg
xor
les
fwait
inc
mov
aas
cmp
inc
mov
cs
or
add
mov
aad
sbb
imul
sbb
cmp
mov
dec
test
fucomp
adc
mov
pop
pop
sahf
stos
xchg
inc
cmc
outsl
shl
xor
mov
cmp
adc
or
xor
aad
cmp
mov
sub
shrb
inc
mov
mov
pop
sub
and
mov
lret
mov
inc
daa
outsl
imulb
sti
lahf
dec
mov
adc
xor
mov
stc
add
or
setge
push
sbb
imul
mov
cmp
ja
sub
xlat
jle
int
mov
xor
add
and
adc
xor
sub
pop
sbb
push
sub
pushf
repnz
lret
cmp
ss
cmp
fisubrl
sub
mov
xchg
pop
cmp
xor
pop
subb
mov
outsb
rorb
inc
adc
sbb
mov
mov
imul
fwait
imul
inc
push
add
pusha
cs
lods
and
daa
aas
ds
or
cmp
mov
and
sub
ret
add
mov
ret
inc
lret
sub
ja
pop
inc
adc
mov
rorl
sbb
test
dec
outsl
adc
rcrb
icebp
xor
inc
sub
cmp
jae
xor
adc
stc
fcmovu
or
or
add
xchg
inc
testl
mov
or
aas
mov
rcll
data16
push
movsl
cmp
decl
hlt
pop
sahf
cld
sbb
ud0
jp
sbb
push
and
test
and
sti
pop
jl
jle
xchg
adc
and
imulb
sti
inc
incb
mov
and
stos
fnsave
cwtl
xor
enter
subb
mov
xor
fwait
sub
mov
xor
lret
mov
xchg
je
addb
lea
ret
or
sub
mov
or
inc
pop
cmp
lods
cmp
xchg
outsl
in
xlat
lret
idivb
cwtl
mov
enter
sbb
or
mov
cmp
pop
cmp
cli
stos
dec
push
mov
jnp
cmpsl
loopne
cli
nop
rorb
js
sub
loopne
dec
lds
adc
sbb
pushf
pusha
cmp
mov
cmpsb
dec
xchg
fisttps
subb
or
xor
lea
xchg
sub
adc
and
sbbl
jbe
mov
mov
and
vxorpd
insl
nop
sbb
das
lea
inc
or
mov
mov
in
cwtl
dec
cli
and
inc
gs
arpl
aaa
inc
pop
ret
fstpt
push
push
outsl
int
stc
sbb
cmp
and
xchg
sub
sub
dec
cli
ret
or
cltd
push
insl
fcoms
int3
mov
test
testb
dec
sbb
adc
dec
push
inc
mov
popf
adc
lret
fidivrl
mov
mov
dec
mov
movsb
fdivrp
lods
xchg
cmp
or
popf
dec
push
sub
mov
cwtl
push
sub
cmp
xor
movsb
dec
notl
fldenv
or
aaa
mov
jno
pushf
and
sbb
int3
sbb
jp
ret
mov
dec
stos
xor
out
mov
xor
mov
xchg
fisttpl
sahf
mov
ljmp
xchg
xor
cwtl
inc
pop
xchg
cmp
cmp
es
adc
mov
sub
mov
push
add
mov
sub
aad
inc
sahf
inc
add
adc
sub
out
incl
adc
dec
adc
or
xor
adc
shrb
call
in
rcrl
dec
daa
or
aaa
aas
cmp
cmp
int3
addr16
cmp
mov
daa
loopne
push
fcos
cli
aas
bound
sbb
scas
stos
cmp
or
jae
add
cwtl
inc
sbb
mov
push
sub
xchg
movsl
scas
dec
dec
test
out
jg
sub
dec
ret
push
xor
sbb
dec
xchg
fmull
pop
xchg
push
fnstcw
push
mov
aaa
sub
imul
push
or
xchg
pop
mov
shlb
jbe
and
cmp
ret
jle
adc
daa
add
mov
into
pop
jecxz
mov
dec
sub
repz
mov
jb
movsb
or
push
mov
cmpsl
cmp
cmp
mov
inc
lret
mov
popf
insb
jge
sbb
cmp
mov
fmull
xlat
xor
test
or
xchg
adc
jmp
dec
xor
decb
aaa
xchg
adc
mov
sub
inc
adc
cld
shufps
enter
stos
stc
cmp
add
xor
jbe
aas
mov
add
aaa
jg
adc
cmp
call
bound
add
xor
imul
push
fstpt
cmp
jp
mov
pop
or
icebp
mov
push
xor
mov
jecxz
popa
sbb
adc
rcll
mov
mov
lret
mov
mov
pop
popf
rorb
sub
cmp
outsb
pop
std
leave
lock
cmp
cltd
fs
int
sahf
rorb
daa
std
jnp
mov
jle
cmp
stos
jnp
push
or
cmp
dec
test
andl
lret
and
xchg
sub
sub
fdivrs
movsl
cmp
add
fwait
cmpsb
lret
pop
xchg
dec
jge
cltd
cld
mov
push
add
lahf
inc
scas
pop
jbe
pop
push
adc
pop
stos
cmpb
inc
sbb
pop
addr16
mov
mov
xchg
xchg
sub
mov
push
push
ret
dec
cmp
xor
mov
aas
xchg
arpl
shr
mov
mov
test
sti
pop
sbb
hlt
outsl
scas
ret
xor
scas
mov
fwait
mov
fisubl
inc
mov
push
hlt
jbe
in
mov
cmp
lds
and
in
scas
mov
xor
pop
aas
sub
and
xorl
dec
sar
jmp
inc
adc
pop
fbstp
sbb
mov
or
mov
mov
push
and
mov
sbb
addb
jno
inc
inc
ljmp
test
outsb
adc
mov
cmp
cltd
mov
lods
fdivrl
or
lret
cmp
dec
popf
xor
and
fucomp
xor
mov
inc
mov
stos
dec
mov
mov
cld
ret
pop
cmp
hlt
mov
lret
sti
scas
cmp
jb
pop
cld
and
push
and
call
or
dec
scas
outsl
pop
mov
add
outsl
sbb
cwtl
cmp
dec
and
or
xor
cmpl
into
dec
mov
ds
lahf
imul
aad
jnp
cmp
cs
scas
xchg
and
mov
jnp
lahf
mov
mov
scas
daa
mov
mov
scas
aam
adc
mov
cmp
mov
loopne
mov
call
out
lods
js
cld
add
xchg
and
xor
fimuls
xchg
or
xchg
cwtl
jp
sub
call
paddd
in
lahf
das
addl
jg
lret
and
cmc
dec
outsl
outsb
addb
inc
pop
jle
sahf
or
sub
sbb
ja
mov
pop
fldenv
lcall
cld
aad
hlt
movsl
pop
adc
push
add
dec
imulb
pop
sbb
mov
xor
daa
lret
rorl
es
or
cli
into
adc
mov
sti
or
shl
adc
and
push
or
add
pop
cs
loope
sbb
shrb
sti
cmp
sti
pop
loopne
std
push
lcall
scas
dec
subb
mov
insl
out
mov
clc
dec
movb
dec
push
out
dec
add
mov
loope
xchg
mov
pop
fnstcw
mov
or
sub
mov
test
sti
adc
xchg
sub
inc
inc
lahf
mov
orb
mov
out
loopne
inc
stos
mov
cmpsb
shlb
push
ja
push
adc
movsl
cmp
cmp
mov
gs
lock
jno
sub
cmp
or
jg
outsb
jl
mov
adc
cmp
mov
jne
aas
ror
sti
mov
xlat
fs
movsl
inc
xor
sbb
xchg
push
in
cmp
sub
lret
jnp
stos
push
mov
sub
mov
rcr
sbb
ljmp
inc
pop
jmp
fdivs
mov
mov
push
mov
nop
imul
cmp
cmp
mov
test
push
sti
call
xchg
adc
push
and
sub
mov
xchg
stos
push
popf
outsb
jnp
mov
popf
cmpsl
inc
idivb
cmp
jp
loop
fbstp
jl
clc
aad
cli
js
sbb
dec
pop
inc
or
clc
cld
daa
cmpsb
xchg
xor
pop
and
mov
idivb
sti
in
fwait
add
pop
or
pop
test
mov
pop
repnz
or
leave
push
jle
jo
decb
loopne
mov
pop
ss
aaa
xchg
js
rcrb
lret
das
jbe
and
sbb
lret
xchg
popa
inc
int
mov
jl
xchg
je
cltd
test
ss
pop
mov
sbb
mov
push
fcomps
idivb
mov
call
and
pushl
inc
inc
pop
mov
xor
mov
repnz
fisubrl
cmp
mov
cmpsl
push
mov
mov
push
std
sub
xchg
push
dec
push
jmp
jbe
sti
push
scas
inc
mov
push
sar
mov
mov
jg
sarl
mov
mov
mov
call
out
and
jo
cmp
cmp
ret
pop
push
inc
lret
pushf
sti
fisubs
addb
jg
outsb
lods
dec
addr16
jae
sbb
lret
in
mov
sbb
mov
ret
pusha
xor
daa
ljmp
jle
mov
fs
cmp
pop
mov
lcall
add
dec
stos
add
dec
out
lods
aas
lret
mov
pop
cs
enter
ds
sub
adc
test
and
arpl
lret
xor
mov
in
push
fildl
xchg
stos
clc
dec
cmp
push
idivl
lret
aaa
cmp
pop
push
mov
std
mov
ret
and
ja
fdivs
dec
add
movsb
pop
cmp
inc
mov
aaa
xchg
add
jbe
dec
and
pop
mov
or
cmovb
jno
push
loope
push
imul
adc
sbb
dec
inc
fwait
xchg
or
mov
mov
jne
jmp
dec
push
push
xchg
in
es
xor
mov
sarl
jg
gs
pop
xchg
xchg
imul
or
and
jne
xor
mov
mov
pop
push
outsl
cmp
jnp
jp
jno
orb
js
xor
push
jnp
push
lret
adc
in
out
xchg
int
pop
mov
popf
mov
pop
cmp
notb
xor
das
mov
mov
fisubs
mov
mov
jg
je
pop
mov
fwait
jb
or
jge
lods
loopne
dec
pop
fldl
jno
push
dec
cli
test
je
push
ror
pop
push
inc
sub
sarb
cli
add
xor
insl
cmp
and
and
sti
push
mov
daa
popf
mov
test
outsl
cmp
adc
cmp
adc
xchg
add
sti
sbb
dec
daa
jbe
jbe
dec
mov
adc
dec
cld
pop
cmp
cmc
dec
call
shl
or
imul
xor
xor
notl
js
mov
push
mov
cmp
push
add
adc
and
jmp
nop
dec
sub
lds
fcmovnb
push
push
push
cmp
jmp
adcb
arpl
dec
push
pop
push
leave
push
pop
sub
mov
lea
sbb
pop
and
aas
cmp
dec
in
and
inc
vmovhps
cmp
lahf
adc
adc
xor
stc
sti
out
pop
test
sahf
sti
lret
mov
inc
mov
pop
pop
js
add
adc
mov
pop
pop
enter
mov
pop
lahf
mov
cmp
cli
xor
ret
jg
fisubs
daa
mov
je
cltd
mov
or
inc
fnstcw
mov
mov
mov
sbb
jmp
jge
ret
sbbl
adc
sbb
stc
mov
xor
in
xchg
aam
adc
push
fnstenv
imul
and
add
add
iret
mov
push
pop
sbb
mov
inc
fstps
push
dec
or
int
sub
sarb
lret
mov
xchg
popf
cmpb
pminub
inc
sbb
sub
push
or
mov
dec
cmp
ret
lock
movsb
icebp
cmp
xchg
mov
pop
xchg
stc
les
or
sbb
xchg
lods
adc
or
sub
push
data16
loopne
inc
inc
xor
or
mov
lock
adc
stc
sbb
dec
int
dec
mov
pop
xchg
or
lret
ss
xor
xchg
inc
xor
and
test
sbb
xchg
dec
adc
cmp
gs
mov
dec
mov
cmp
gs
movsb
sbb
inc
xor
add
xchg
jp
inc
addr16
xorl
movsb
or
dec
mov
pop
pusha
les
dec
dec
stc
aaa
lret
incl
stc
mov
aad
or
pop
pop
test
mov
in
jo
inc
push
fsubrl
mov
mov
xchg
push
jle
mov
call
sub
dec
sarb
adc
fistpll
and
sbb
sub
cmp
lock
mov
cli
xchg
mov
dec
test
mov
xchg
insl
dec
push
faddl
adc
inc
adc
mov
dec
nop
push
and
xor
test
pop
dec
outsb
fstpl
mov
stos
cmpsb
popf
xor
sub
mov
je
sub
mov
popa
dec
jg
xchg
sbb
and
aam
or
cld
cmp
xor
mov
lret
push
ret
adc
das
movsl
fsubrp
mov
or
loope
je
out
xor
sbb
jge
outsl
mov
insl
jle
loope
aas
or
xor
mov
and
sbbb
inc
add
fidivrl
mov
lret
mov
daa
shll
sbb
or
iret
mov
add
jp
mov
mov
pop
mov
dec
or
imul
ds
lret
scas
jb
sub
cmc
insb
cmc
int3
scas
mov
cld
xor
in
or
dec
mov
cmp
sub
sti
clc
adc
dec
xor
cmp
xor
pop
rcrl
mov
test
push
loopne
inc
xchg
mov
mov
scas
mov
lods
aad
jp
sbb
jl
or
cmp
lret
pushf
pop
jb
mov
pop
or
mov
xchg
loop
fmull
es
sub
push
sti
pop
ljmp
cli
cld
aaa
jecxz
daa
sub
rcl
pop
aam
mov
xchg
sti
pushf
dec
inc
dec
xchg
dec
lret
popa
dec
into
pop
sub
mov
clc
add
pop
cmp
aaa
inc
pop
shrb
test
cmp
mov
jge
push
jecxz
scas
lds
dec
lods
pop
cmp
adc
adc
mov
cmp
outsl
push
inc
xor
pop
mov
cmpsb
cld
mov
mov
loop
cli
mov
stos
adc
xor
in
mov
and
cld
push
lahf
inc
mov
ljmp
insb
mov
xor
and
mov
scas
sbb
nop
sub
cmpsb
cli
inc
xchg
cmp
cmp
xchg
lcall
cli
mov
mov
out
mov
out
pusha
repnz
or
imul
bound
cwtl
sti
mov
and
insb
mov
pop
es
push
cmp
sbb
mov
lock
push
jg
push
cmp
daa
cltd
pusha
repnz
pop
pop
andb
hlt
push
push
pusha
pop
ret
aaa
aam
das
xchg
sti
xor
ret
cs
sahf
call
adc
inc
pusha
ss
inc
mov
inc
xor
mov
daa
and
out
mov
add
sub
insb
cmpsb
jmp
je
in
mov
mov
insb
pop
adc
pop
xchg
inc
dec
dec
shll
mov
inc
pop
cmpsl
imul
sbb
mov
psubsw
and
dec
xchg
sub
addb
and
ds
or
mulb
xchg
xor
scas
adc
lahf
push
sub
int
jl
lea
or
and
adc
sbb
mov
sub
jb
xchg
cld
sbb
push
stos
mov
mov
mov
pop
xor
xor
mov
sarl
pusha
outsl
popf
mov
sbb
pusha
icebp
outsl
hlt
add
push
lret
ljmp
pop
fxch
inc
movsl
rclb
stos
lods
cmpb
imulb
mov
cli
inc
fsubrs
pop
je
ss
inc
lods
insb
les
daa
jbe
in
test
das
push
jnp
cli
clc
out
pop
notb
jle
xchg
cwtl
fidivrs
xchg
mov
mov
test
mov
addl
cmp
pop
push
cmpsl
dec
into
mov
pop
xchg
lcall
inc
cmp
xchg
mov
inc
push
jnp
mov
cli
nop
aaa
mov
cli
cld
sbb
les
xlat
data16
xor
daa
pop
cltd
lret
out
cmp
decl
and
test
adc
lea
mov
pop
int
mov
add
jecxz
in
or
cmp
or
sbb
or
mov
stos
outsb
pop
hlt
push
or
gs
dec
sahf
mov
and
fst
cmc
into
mov
sti
push
imul
cwtl
pop
stos
mov
jmp
sahf
sbb
cld
fwait
insl
bound
mov
notb
dec
fxch
fwait
ss
xchg
xchg
clc
mov
roll
lea
ret
xor
sbb
sahf
xchg
movsl
cmp
pop
cmp
cmpb
cli
sbb
daa
stos
add
mov
push
jp
cmp
sti
aad
je
sbb
dec
repnz
pusha
cmp
lock
stos
adc
sub
adc
cmovo
into
and
lcall
inc
pop
js
push
jb
adc
es
mov
repz
test
dec
and
push
sbbb
hlt
orb
mov
push
jb
push
or
add
cli
hlt
or
aaa
sbb
xor
adc
testl
cmp
pop
mov
sub
out
es
xchg
lret
xchg
in
jno
push
sub
pop
adc
cmpsb
mov
test
adc
adc
mov
add
js
push
cld
scas
cmpl
push
dec
test
or
fwait
stos
xor
call
cmpsb
jl
sbb
aaa
scas
adc
iret
mov
dec
pop
dec
jo
inc
in
mov
jp
cmp
pop
ss
mov
xor
push
sub
mov
data16
jg
shrl
mov
test
mov
xor
rolb
xlat
movsb
mov
pop
mov
sbb
insb
sub
jnp
or
xor
mov
xor
sub
push
cmp
jmp
dec
sahf
fisubrl
adc
sbb
pop
inc
test
xor
loope
ss
fdivrl
jp
jo
fidivrs
mov
cmp
sbb
call
test
add
jns
lahf
clc
stos
lcall
or
xchg
movb
cmp
pop
nop
cs
or
repnz
aaa
mov
aaa
sub
dec
pushf
movsb
dec
outsb
lret
test
inc
aaa
andb
mov
cmp
mov
inc
pop
cltd
pcmpeqb
sbb
xchg
cmp
cltd
and
insl
jbe
outsl
cld
xor
daa
imul
lret
sbb
mov
pusha
ret
mov
lock
scas
xor
lds
sub
fnsave
cmp
and
and
sbb
cmp
hlt
outsl
pushf
rcr
dec
jl
mov
and
mov
out
dec
jo
adc
mov
xchg
cmp
mov
lahf
inc
lret
ss
sub
fimull
shrl
fidivrl
sub
pop
lret
push
adc
pop
mov
adc
out
mov
das
cmp
fwait
pop
jl
lock
mov
ja
mov
daa
add
es
jge
test
add
add
inc
aaa
lret
mov
sbb
imulb
pop
push
aaa
dec
mov
cmp
lret
fwait
subb
cmpsb
incb
add
dec
cmpsb
dec
cmp
dec
sub
or
std
xor
sbb
js
inc
fsubl
andl
mov
neg
lea
movsl
dec
lret
add
movl
sti
cld
mov
cmpsl
inc
mov
pusha
inc
mov
sbb
ficomps
mov
mov
lret
adc
pop
cmpsb
xor
xlat
stos
int
mov
push
aam
inc
aad
cmpsb
jbe
jno
mov
fidivl
lahf
movsl
shlb
mov
and
movsb
push
inc
aad
mov
dec
enter
nop
or
lahf
mov
pusha
xchg
pop
les
add
in
pop
cs
mov
mov
into
xor
fists
insb
mov
mov
pop
pop
xor
imul
cld
mov
pop
mov
adc
xchg
ss
test
xchg
dec
push
mov
out
enter
fnstsw
xlat
aaa
mov
inc
push
and
adc
outsb
sar
rcll
fs
pop
jne
add
dec
sbb
jo
pop
cmp
sarl
pushf
sbb
mov
outsb
xchg
pop
and
inc
or
push
or
dec
sahf
ljmp
pop
movsl
pop
inc
lds
mov
sub
ljmp
mov
add
inc
stc
xchg
nop
lret
mov
jp
or
rolb
scas
dec
dec
lahf
in
or
pop
adcb
lret
fisubrl
add
xor
addr16
sbb
mov
cmpsb
inc
dec
into
orb
stos
mov
test
sub
xor
mov
xor
mov
shl
xor
rol
inc
test
mov
insl
jmp
fisttps
sub
cmp
push
fimull
cmp
fwait
ret
xchg
inc
cmp
icebp
movsl
test
fisttpll
mov
into
mov
add
or
sbb
xor
inc
inc
push
xchg
dec
push
call
popa
jecxz
divl
cmpb
lret
filds
jns
lea
aad
or
je
jbe
out
lds
movsl
sub
add
arpl
sbb
ja
lods
pop
cli
negb
cmp
lret
add
push
fidivl
or
or
mulb
xchg
push
sbb
push
cmp
gs
sub
call
or
or
adc
flds
push
pop
cli
cwtl
inc
in
add
cmp
ficomps
pop
daa
mov
sbb
jae
push
dec
sbb
mov
push
std
aas
adc
cmp
aam
fcomps
lret
andb
mov
xchg
aaa
sbb
xchg
xchg
loope
mov
push
fcomps
fs
in
mov
mov
pusha
jb
and
ret
cmp
jp
scas
mov
push
ret
jmp
pushf
and
arpl
cs
lret
test
sub
mov
mov
or
xor
sbb
push
aas
or
adc
clc
or
mov
add
cmp
addl
inc
pop
xor
or
rorb
xor
cmpsb
sub
stos
mov
xor
or
dec
nop
arpl
adc
scas
add
pop
or
xor
sub
mov
and
cs
mov
mov
hlt
push
das
sbb
mov
mov
xor
fstps
test
dec
popf
aas
aam
cli
jge
xor
xor
sti
pop
mov
cmp
jge
dec
aas
rcll
ss
adc
push
pop
sub
lahf
pusha
xor
or
cwtl
or
sbb
jb
nop
or
inc
and
sbb
adc
mov
adc
mov
inc
dec
pop
cmp
mov
sub
in
sti
insb
mov
push
mov
adc
aaa
mov
in
dec
bound
testb
adc
mov
and
in
aaa
cli
xor
mov
mov
mov
jb
pop
fadds
jle
dec
std
xlat
or
inc
jbe
xor
mov
notl
je
and
sbb
sub
mov
adc
cmpsb
sub
xor
scas
xor
and
jl
dec
aaa
adc
xor
cmp
lret
jo
into
sti
jge
sub
sub
fistps
ret
cmp
xchg
dec
sbb
xchg
inc
jb
addr16
jge
subb
mov
cmpsb
cmp
adc
mov
sti
pop
sub
sub
adc
push
sub
mov
cmp
pop
frstor
jl
or
adc
call
and
mov
mov
jns
lods
pop
mov
sti
xchg
push
imul
dec
push
test
inc
or
or
xchg
dec
push
cmp
out
sbb
xorb
das
mov
jbe
push
fistps
adc
in
outsb
test
out
stos
add
sbbb
mov
out
xor
lahf
insb
popa
pop
fld
jmp
xor
sbb
and
mov
icebp
arpl
push
mov
jecxz
scas
dec
out
xor
and
dec
clc
pop
sbb
pop
adc
jmp
in
lcall
nop
or
xchg
daa
xchg
aad
adc
sbb
sbb
sti
cmp
inc
outsl
mov
add
fwait
inc
xchg
sub
mov
mov
jo
test
outsb
cmp
in
add
cld
jns
jo
mov
push
fnstsw
or
dec
dec
pop
pop
dec
aaa
pop
cli
sbb
pop
mov
and
test
dec
jns
xchg
clc
mov
mov
xchg
jbe
insb
imul
xchg
in
cmp
es
jmp
fstps
dec
cmp
orl
mov
mov
dec
divw
leave
ret
stc
imul
jp
inc
lods
or
sbb
aad
xchg
xchg
aad
mov
fidivl
push
push
stos
push
xchg
mov
ja
mov
jl
pop
or
xor
and
repz
lret
lds
aas
pop
inc
mov
or
das
jae
jb
add
es
dec
add
mov
mov
cmp
pusha
iret
subb
add
fimuls
push
or
out
sbb
lcall
mov
fidivs
bound
sbb
flds
push
out
scas
xor
inc
test
mov
push
mov
adc
push
pop
lea
call
lea
jo
pusha
sahf
pop
aaa
shll
dec
xchg
cmpsl
rol
lahf
mov
xchg
iret
jl
mov
xlat
mov
js
mov
inc
sahf
inc
stos
out
xchg
dec
test
add
dec
cmp
mov
fwait
dec
dec
incl
inc
mov
roll
es
sbb
int3
mov
in
pushf
pop
lods
jecxz
push
call
push
pushf
nop
lods
bound
sbb
adc
sbb
js
or
xchg
cmp
dec
lea
lret
out
ss
xchg
and
imulb
lret
sub
pushf
iret
mov
pop
mov
les
inc
lods
popf
or
cmpsl
in
dec
fldt
mov
popf
xchg
imul
adc
scas
mov
ss
lods
sub
pushf
xor
cmp
fistpll
xchg
cmp
mov
or
das
aad
enter
out
adc
data16
pop
dec
mov
cs
xchg
sti
test
js
loopne
jmp
and
lret
ss
or
xor
jnp
andb
cltd
mov
xchg
jg
movsb
push
imul
fistpl
call
loop
push
or
test
dec
adc
push
push
in
mov
dec
mov
xchg
xlat
and
mov
pop
ss
xor
loop
push
jns
sbb
cmpsb
xchg
mov
je
test
test
testb
sbb
jle
xor
sub
bound
xchg
mov
fcoml
adc
inc
inc
cwtl
cmp
fnstcw
or
push
ss
cmpsb
push
das
mov
out
mov
xor
test
jmp
jbe
jle
jp
pop
mov
jo
sbb
dec
mov
sbb
pushf
push
and
xchg
mov
push
adc
daa
icebp
xchg
aas
ljmp
cmp
pop
pop
push
cmp
loope
lods
stc
out
and
push
inc
test
adc
push
ret
sbb
mov
mov
aas
sbb
jo
xor
imul
sbb
jle
das
xchg
mov
mov
fchs
and
xchg
lret
aaa
lcall
fnstsw
pop
clc
pusha
mov
cmp
sahf
fwait
inc
cltd
add
movsb
mov
pop
cli
setae
sarb
push
add
dec
push
jbe
jns
mov
mov
adc
push
fnstsw
push
aaa
xor
mov
xchg
stos
sbb
sub
mov
mov
mov
xchg
fidivrs
sub
aaa
cmp
mov
cs
jp
mov
push
sbb
jbe
clc
push
daa
xor
test
cmpsl
pop
jecxz
mov
mov
dec
mov
cmc
push
test
cmp
movsb
int3
popf
xchg
out
decb
stc
in
sbbb
imul
inc
mov
or
and
inc
adc
jg
mov
fcmovb
cmp
sbb
adc
pop
mov
adc
sbb
jecxz
out
outsb
repnz
pop
pushf
cmpsl
sbbl
or
and
ret
scas
ja
out
outsb
sbb
ud0
inc
add
out
outsb
mov
shlb
inc
bound
insl
or
sbb
fnstenv
jp
and
mov
decl
fsts
dec
or
xchg
pop
cmp
and
cmp
xor
movsl
push
mov
rcll
inc
mov
and
out
push
sub
dec
pushf
rol
lods
mov
int3
das
xor
je
push
adc
jnp
cmpsb
scas
mov
jg
sub
inc
push
cmpsb
pop
ja
sub
sub
mov
sarb
stos
pop
dec
pusha
rorb
outsl
and
xchg
in
cmp
cmpl
mov
xor
scas
sub
mov
pop
mov
push
mov
pop
rclb
mov
mov
mov
sub
xor
in
lcall
cmp
jo
out
cwtl
mov
cmp
xchg
fistps
push
les
aam
xchg
pop
test
pop
sub
movsb
hlt
outsl
repz
lcall
bnd
cmp
cmp
mov
and
sarl
sbb
stc
add
or
pop
lea
adc
insb
lock
inc
dec
dec
out
push
sbb
out
sbb
jg
cmc
iret
lcall
mov
push
mov
cmp
fdivrp
mov
inc
pop
insl
aaa
pop
sbb
cmp
jae
ficomps
call
or
cs
test
or
sbbb
dec
sbb
mov
adc
test
rcll
aaa
out
cmpsb
ds
xor
outsb
cmp
mov
test
mov
push
out
jbe
and
mov
mov
pop
sub
xlat
add
gs
adc
xchg
mov
and
lret
or
ss
sbbb
add
movsb
cld
sub
ss
ss
mov
xchg
cmp
lret
mov
test
in
sbb
gs
sub
fbstp
dec
jp
jle
ret
mov
xchg
mov
nop
inc
outsl
add
xchg
xchg
fstl
jmp
dec
add
test
out
inc
cltd
lret
and
pop
mov
sub
stos
xor
mov
mov
loope
sbb
xor
push
dec
pop
data16
std
push
xor
mov
xchg
fsubrp
lret
mov
pop
nop
dec
ss
inc
bound
mov
or
lods
dec
test
dec
pop
gs
jnp
je
cwtl
inc
xor
inc
lds
mov
xor
mov
pop
push
push
stos
ret
inc
inc
pop
cmpsb
rcl
into
mov
jp
movsb
add
xchg
data16
mov
push
cmpb
sub
lret
cmp
jmp
pop
cmp
scas
dec
cmpsb
fisttps
dec
xlat
bound
adc
clc
mov
ret
int
lea
test
movsb
in
movsl
scas
mov
shrl
idiv
fstpt
and
aas
push
add
cmpsl
dec
mov
mov
add
dec
sub
fwait
mov
in
std
pop
jae
cltd
lret
insl
ret
imul
jo
xor
cmpsl
inc
sub
push
jl
mov
cld
inc
sbb
mov
out
cmp
dec
nop
mov
sbb
mov
push
push
sbb
movsb
cwtl
sub
mov
xchg
pusha
push
cs
adc
out
jmp
jge
sbb
dec
shr
dec
nop
jbe
mov
cwtl
sub
lea
pop
mov
push
inc
sub
dec
fucomi
mov
loopne
stos
jmp
push
ss
fidivrs
mov
test
mov
pop
mov
xor
mov
sbb
std
xor
jb
mov
fxch
cmpsb
add
or
ja
mov
lret
jecxz
outsl
mov
xchg
mov
mov
mov
lds
das
push
ret
xchg
and
int
ja
sbb
mov
fisubrs
gs
sub
dec
mov
sar
push
imul
mov
mov
popf
lock
push
mov
sub
inc
inc
mov
movsw
xchg
mov
pop
push
out
pop
scas
lcall
mov
mov
lahf
dec
pusha
addr16
adc
sub
loop
les
bound
jg
pop
mov
mov
inc
jle
cmp
cmp
es
fnstsw
sbb
and
arpl
add
xor
xor
mov
cli
std
es
int
lods
lret
fnstsw
inc
lret
mov
fidivrs
pop
or
xchg
inc
mull
pop
lea
lret
mov
ret
cmp
sub
adc
push
cmp
mov
mov
inc
pop
arpl
dec
mov
mov
cmp
sub
cmp
arpl
dec
scas
and
cs
xor
std
fimuls
es
and
movsb
xor
xor
mov
xchg
pushf
movsl
scas
mov
mov
and
mov
movsb
arpl
adc
pop
add
jl
mov
dec
or
add
xor
jle
scas
pushf
xor
or
mov
sub
lds
in
ret
mov
cs
cs
lret
cmp
shlb
scas
xor
fdivrs
lock
inc
cmp
testb
shll
dec
movsb
xchg
fs
outsb
adc
ja
dec
mov
inc
out
cmpl
pop
mov
dec
add
sbbb
arpl
jle
mov
nop
inc
ljmp
andb
mov
mov
jle
mov
jb
cmp
lret
mov
push
mov
aas
and
and
and
lret
popf
loope
inc
and
sbb
addr16
repnz
push
and
daa
call
idivl
clc
sti
xchg
mov
fucomp
fidivrl
jp
aas
inc
pop
cs
popf
jg
aas
xor
mov
pushf
les
sbb
sbb
into
test
push
das
dec
or
cmp
cld
adc
std
mov
add
and
daa
or
cmp
pop
inc
push
imul
jl
lea
xor
test
sbb
repnz
mov
es
filds
adc
out
inc
cmp
fnstsw
loop
jg
add
pushf
xor
dec
sarb
mov
mov
or
sahf
movsb
cltd
ret
xor
mov
push
jp
mov
sysexit
mov
lret
mov
adc
or
sub
cmpsb
inc
call
mov
dec
sahf
aaa
push
mov
inc
loop
mov
loope
lcall
addb
subb
cmpsl
add
cmp
and
or
pop
jns
cmpsl
cmp
mov
add
dec
mov
lret
outsl
or
mov
mov
dec
mov
inc
sbb
sub
or
mov
adc
mov
ss
or
aas
in
incb
mov
push
pop
push
ss
aaa
out
sub
stc
push
mov
pusha
sbb
imul
or
mov
add
out
rclb
dec
mov
or
xor
mov
aaa
sub
es
cmp
adc
mov
pop
cmp
fstpl
dec
sbbb
js
mov
ja
lods
jecxz
or
xchg
loope
mov
add
cmpsb
enter
cmpsl
jle
mov
sub
rcl
movsl
pusha
int
cmp
hlt
movsl
loope
outsb
xor
daa
mov
std
es
das
lcall
ds
into
mov
pop
jp,pt
and
fimull
mov
or
xchg
int3
xchg
and
dec
jg
cmp
sti
test
aad
pushf
icebp
add
cwtl
add
loopne
xchg
dec
in
sub
pop
dec
push
or
idiv
mov
out
pop
mov
sub
jns
jle
lret
sarl
add
icebp
push
loop
sti
fists
cmp
inc
mov
adc
xor
dec
jmp
cs
cli
and
sbb
sub
mov
jno
push
push
cmp
pop
or
mov
les
push
rcrb
inc
pop
call
mov
or
inc
and
pop
arpl
add
in
andb
jp
imul
xor
dec
adc
mov
pop
cmp
mov
divb
hlt
repnz
adc
dec
jge
out
push
xor
jmp
add
aas
or
sbb
pusha
mov
inc
fstl
adc
mov
call
mov
lahf
sbb
cmp
pushf
push
mov
mov
inc
adc
repz
shlb
dec
bound
shrl
mov
pop
ret
pop
mov
push
adc
mov
mov
mov
mov
xor
inc
mov
push
pop
stos
or
js
mov
mov
sti
push
and
cwtl
mov
xlat
mov
jg
lret
adc
into
stc
sbb
pop
mov
cmc
inc
mov
cmp
aaa
cmpl
lret
mov
mov
pop
es
xor
lret
xor
cwtl
inc
ds
cmp
inc
sahf
mov
or
or
pop
and
sti
mov
cltd
outsl
into
inc
or
mov
or
sti
cmp
inc
jns
xchg
or
pushf
push
sbb
int3
mov
pop
test
jp
dec
sahf
inc
aas
sbb
jno
cmp
or
or
mov
jg
aas
sbb
lret
xchg
leave
rorb
inc
lods
pop
xchg
xchg
and
int3
push
cli
xchg
cmpsl
sbb
dec
js
cmp
dec
mov
stos
pop
jbe
and
pop
scas
inc
je
scas
aas
stos
dec
lahf
data16
frstpm(287
jbe
jp
adc
mov
mov
lods
scas
jb
mov
das
sub
inc
and
or
sub
mov
je,pn
jnp
and
sbb
lcall
add
sbbl
push
adc
andb
cs
adc
mov
jnp
dec
pop
lcall
pop
sbb
es
or
clc
clc
push
out
aaa
lret
cli
stos
xorb
xchg
insb
jnp
pusha
mov
inc
or
adc
pop
cmpsb
call
mov
pop
mov
lcall
scas
and
movsb
mov
mov
fidivrs
incb
shrb
cld
les
test
js
aaa
ffreep
lods
inc
sub
leave
add
rorb
mov
sahf
and
mov
and
rorb
add
pop
pop
sti
fistpl
jo
sbb
mov
adc
cmp
cmp
int
data16
mov
in
mov
push
rol
pop
mov
ror
mov
cmp
jmp
sub
test
pop
add
or
fwait
dec
dec
push
out
mov
insb
lcall
cmp
push
fwait
dec
inc
xchg
les
sbb
mov
lret
cwtl
jb
lods
cmp
jo
lds
jp
sti
xor
xor
movb
xor
xor
inc
test
int
push
mov
jb
pop
ret
adc
daa
adc
jmp
test
into
sub
pop
sbb
daa
cmp
inc
sub
push
cmpsl
pop
cmp
out
dec
cmp
out
lahf
xchg
test
test
stos
push
test
scas
pop
insb
xor
pushf
sub
cmp
add
sub
cmp
fnstsw
sti
cmp
xchg
cli
jbe
fidivrl
fwait
mov
cmp
and
and
stos
lret
loope
das
int3
icebp
sarb
ss
addb
dec
mov
pop
aam
insb
inc
cmp
rcll
sbbl
sbb
sti
outsb
or
cmp
iret
pop
out
pop
cwtl
xchg
push
xor
xchg
xchg
jl
pop
inc
cmp
dec
mov
insb
pop
or
aaa
mov
dec
inc
xchg
mov
pushf
je
xor
mov
adc
cmpsl
lods
jo
movsb
hlt
xorb
aas
insl
mov
mov
iret
xchg
insb
nop
aaa
lea
ss
mov
fwait
shll
cmpsl
inc
cld
sbb
dec
cli
inc
or
cli
xchg
jge
fdivrl
icebp
cmp
and
mov
jmp
loop
dec
jae
cmp
xor
ss
xchg
mov
sar
negl
add
cmp
jbe
xchg
push
xchg
push
xor
ror
outsl
xchg
int
imul
pusha
clc
aaa
fistpl
and
sub
lcall
push
mov
jnp
inc
xchg
pop
int3
pop
mov
dec
adc
and
scas
repz
mov
mov
ficomps
es
push
mov
xchg
add
icebp
adc
loopne
mov
add
aam
push
dec
lcall
pop
pop
rcl
xchg
cmpsb
pop
lods
les
mov
mov
pop
ja
xor
xor
jl
mov
or
mov
jnp
rolb
mov
sbb
mov
idivl
push
jp
lret
mov
push
jo
std
pop
lcall
imul
out
cmp
stos
cmp
sti
clc
cmp
cld
xorb
adc
inc
mov
cmpl
int
mov
inc
jge
add
dec
imul
xor
sahf
mov
gs
in
jo
ljmp
in
sbb
push
jecxz
fwait
out
inc
cmp
push
or
mov
add
push
cs
pop
into
xchg
xchg
or
outsl
bound
test
ret
and
xor
and
aas
adc
fdivs
cltd
or
adc
pop
sarb
sti
es
inc
xor
xchg
iret
in
push
leave
das
insl
inc
addr16
test
fld
and
pop
idivl
jbe
out
and
sbb
sbb
shll
in
push
pop
inc
mov
lret
pusha
iret
mov
fiaddl
cs
clc
pop
ja
cmp
loopne
jmp
push
jp
jl
loope
pop
jmp
adc
sbb
cs
jnp
cmp
movsb
inc
mov
sub
decb
repz
push
cwtl
scas
xor
notb
sbb
push
cmp
sub
daa
cld
xor
imul
sbb
pop
cld
lahf
xor
xor
push
fwait
pop
ja
sbb
xchg
cmc
cwtl
mov
mov
push
inc
jmp
mov
jnp
xlat
fisubrl
xor
sub
lret
cltd
pusha
fmul
push
mov
es
dec
cld
out
divl
sub
fdiv
or
mov
inc
sahf
cmpsl
dec
jnp
jmp
xor
cltd
xor
dec
nop
lret
push
imul
mov
pop
faddl
lret
gs
cmp
jb
lea
cli
cmp
inc
rorl
notb
or
cmpsb
or
dec
sbb
inc
push
dec
psrlw
out
mov
mov
add
jge
ja
sub
outsb
or
into
xchg
mov
sti
movb
loope
jmp
mov
xchg
cmpl
aaa
push
test
push
orb
out
pop
xchg
nop
out
jo
fwait
dec
popf
add
jp
insb
fldenv
sar
push
mov
add
lea
fwait
inc
int
aad
push
pushf
pop
push
sbb
xchg
mov
inc
dec
aam
pusha
cmp
add
xor
ljmp
bound
xchg
sbb
or
or
das
mov
daa
xor
sti
fsts
xchg
cli
or
cli
xor
rcrl
add
jae
addr16
stos
in
fisttpl
std
jle
out
ss
and
cmp
xor
rolb
cmp
cmp
inc
movsl
push
lret
sbb
movsb
repnz
sbb
xor
jp
xchg
mov
lret
addr16
and
subb
addr16
xchg
mov
pop
pop
loop
xor
inc
sub
push
xchg
aas
cmp
push
lods
lret
int3
mov
pop
aas
cs
jbe
xchg
dec
das
push
dec
mov
aaa
lret
inc
pop
pop
aas
and
dec
sbb
mov
dec
adc
xchg
in
cmp
pop
imul
jg
rcll
movsb
push
or
data16
scas
inc
mov
bound
mov
pop
add
popa
cmc
and
pop
push
cld
mov
xor
sub
outsl
mov
in
xchg
and
push
xor
xor
push
daa
das
pop
das
fnstsw
push
push
sub
mov
sbb
sar
scas
jae
xor
push
xor
cld
pop
pop
mov
mov
aas
jl
divb
add
mov
mov
or
jge
jbe
adc
push
xchg
std
inc
bound
fcompl
mov
mov
adc
pop
sbb
cmp
ss
fnstenv
popf
pushf
cmp
adc
xchg
inc
jg
test
xchg
cmpsl
jmp
jo
clc
mov
sbb
scas
pop
cld
lea
sbb
xor
incl
sub
ss
jp
lcall
rclb
cltd
add
xchg
jae
mov
jp
lods
icebp
ljmp
mov
es
mov
xchg
call
jno
mov
mov
dec
push
test
test
pop
ja
jb
lods
push
mov
cli
inc
xor
jle
jmp
jge
sub
mov
inc
xchg
daa
push
cmp
pop
dec
jne
cld
sbb
dec
dec
lahf
dec
mov
fidivs
jne
imul
lods
jge
sbb
xchg
push
mov
dec
push
jno
cmpsl
fwait
data16
xchg
mov
add
mov
mov
iret
and
xor
inc
rolb
adc
cli
xor
cmpsl
xor
add
mov
ljmp
out
in
xchg
psignb
sbb
ror
lahf
inc
ret
dec
in
dec
lock
lcall
scas
xchg
mov
int
cmpb
sbb
stos
inc
lcall
jge
xchg
push
mov
idivl
inc
lret
pushf
dec
mov
cmp
ss
and
lds
loope
movsb
xchg
dec
or
jge
jg
dec
aaa
and
adc
mov
int3
jnp
inc
jp
lret
xor
xchg
arpl
sub
mov
imull
jno
in
mov
lea
adc
mov
mov
fcmovnu
mov
inc
sub
cmp
sub
fisubl
xor
jecxz
pop
clc
mov
sarl
jnp
call
mov
lds
bound
cld
jo
mov
arpl
push
incl
cmpsl
pop
arpl
dec
or
or
sahf
inc
push
mov
cld
push
jne
xor
ss
aas
lret
fdivr
std
sahf
out
or
xor
les
lret
xor
std
pop
jbe
cmp
add
into
xor
push
repnz
scas
ss
mov
mov
pop
in
jae
ss
insl
push
mov
add
jo
sahf
sahf
ljmp
mov
je
cli
or
loop
and
pop
or
mov
sbb
cli
push
jg
sub
mov
mov
shll
daa
inc
sbb
or
jge
sbb
sub
sub
mov
lret
mov
cmp
shl
and
mov
divb
xchg
xchg
xchg
adc
sub
in
push
push
lea
and
push
fildll
mov
lret
loop
xchg
das
sub
icebp
lcall
jns
mov
roll
xchg
mov
adc
xchg
mov
or
inc
dec
icebp
mov
pop
fstl
mov
sahf
mov
arpl
adc
cwtl
int3
jb
jbe
cmpsb
out
pop
adc
or
not
ss
mov
push
sbb
mov
fisttps
cmpsb
sbb
push
cmp
mov
jae
sbb
mov
shr
dec
push
mov
rol
repnz
cmp
adc
pop
xor
scas
jecxz
xchg
add
mov
cmp
mov
rcll
or
pop
pop
or
push
rorb
or
mov
jle
pushf
ss
mov
ds
mov
add
mov
jg
imull
jns
mov
lods
andl
adc
leave
mov
dec
push
jg
or
cmp
rcr
adc
dec
pop
or
out
ds
lock
jne
ss
fldenv
sub
arpl
pop
andb
inc
cld
mov
imul
mov
orb
mov
scas
adc
fs
loop
dec
cmp
out
aaa
popa
pop
aas
fnstenv
pop
lods
popf
into
push
mov
mov
or
mov
and
dec
and
shll
mov
mov
data16
outsb
mov
push
cli
out
cmc
imul
inc
push
xor
das
mov
xchg
xor
cltd
mov
mov
pusha
mov
jmp
cld
pop
jbe
lahf
cmp
mov
adc
fdivs
or
testl
les
jle
add
testl
sub
jl
stos
ss
jle
sbb
mov
pop
mov
lahf
popf
adc
inc
jl
lds
addr16
push
out
daa
xor
inc
cwtl
jbe
mov
sub
jmp
lds
js
or
pop
mov
mov
sbb
adc
adc
sbbl
mov
xor
cmp
cmp
das
mov
xchg
xor
xor
adc
push
fs
jl
ss
scas
cmp
push
aad
cli
jmp
jmp
les
orl
pusha
sbb
push
inc
jle
call
add
jbe
lret
jo
divl
cmp
adc
xlat
mov
xchg
sahf
mov
add
std
imulb
dec
xor
enter
or
jg
aaa
or
outsl
lods
movsb
xorb
outsl
jge
lea
cli
xchg
jecxz
mov
mov
pop
enter
out
dec
adcb
xor
mov
pop
insb
pop
xorb
dec
xlat
scas
and
test
mov
std
or
add
inc
or
adc
inc
rclb
sbb
xchg
jns
xor
pop
fwait
jp
scas
sub
imul
lret
cmp
shll
jp
sbbb
scas
sbb
movsl
xchg
bound
cmp
sub
and
je
jl
inc
and
push
dec
push
dec
mov
sub
inc
sbb
pop
adc
aas
and
lret
sbb
or
jg
lea
sbb
dec
test
add
sbb
xor
leave
push
aaa
lret
inc
sbb
add
fucom
sahf
inc
aas
sbb
inc
insl
adc
roll
fldl
xchg
outsb
fbld
mov
inc
mov
std
pop
fwait
cli
icebp
out
fiaddl
and
cmp
or
aam
insb
adc
aaa
data16
imul
jo
push
test
shl
test
pop
xor
jl
pop
cltd
in
icebp
popa
pop
xchg
scas
jae
lcall
adc
dec
dec
mov
clc
and
inc
or
icebp
mov
dec
jb
mov
data16
mov
xchg
mov
jbe
mov
sbb
or
lcall
cmp
add
sbb
bound
inc
pop
lret
daa
clc
adc
aas
mov
mov
loopne
mov
mov
or
mov
push
xchg
js
add
cmpb
cli
xor
xchg
fildll
adc
cmp
into
sahf
cmp
or
xchg
mov
scas
insb
jl
cmp
jb
dec
scas
inc
cmp
xor
dec
push
and
pushf
mov
imull
cmp
xchg
ja
add
dec
aaa
add
in
sbb
inc
cmp
insb
pop
call
cmp
fisubs
addb
jns
xor
aaa
daa
daa
and
push
aas
mov
test
sbb
and
aaa
mov
cmp
outsb
pop
adcb
adcb
jae
mov
jecxz
adc
rclb
call
lods
cmp
pop
cmp
cli
pop
sbb
cli
mov
jle
les
lret
lahf
ljmp
mov
jno
mov
cmp
adc
mov
sub
cli
xchg
dec
mov
mov
fs
test
jp
aas
scas
nop
cltd
pop
rorl
push
mov
das
mov
and
xchg
dec
sub
dec
sub
xor
daa
mov
mov
sbbb
scas
jo
sbb
sub
mov
pop
and
cmp
push
sbb
sarb
mov
insb
xchg
xchg
scas
int
lods
mov
and
pop
mov
jl
and
and
xor
orl
lret
cmpsb
mov
cld
mov
outsb
mov
and
ja
xchg
sbb
add
add
jp
orb
popa
pop
pushf
cwtl
cwtl
pusha
js
pop
add
outsb
addr16
aaa
es
pop
rolb
sub
xor
cmpsl
push
sub
jnp
sbb
dec
fs
jp
sub
dec
ds
cltd
mov
mov
mov
inc
pushf
out
or
daa
lret
jg
dec
inc
dec
addr16
dec
push
jmp
ss
inc
push
sahf
inc
out
aas
leave
in
adc
pop
and
loopne
sbb
inc
pop
cs
jmp
push
lcall
mov
aas
jp
outsl
hlt
repz
in
neg
add
mov
push
xor
test
push
test
clc
or
in
pop
and
mul
pop
jp
lcall
xlat
roll
mov
jmp
mov
test
mov
inc
cmpl
mov
pop
pop
jne
outsl
mov
sbb
test
test
outsl
stos
xchg
and
clc
mov
arpl
popf
and
push
pushf
add
xchg
repnz
jnp
lods
mov
mov
xchg
sub
mov
dec
and
insb
inc
push
or
std
jp
or
mov
xlat
cs
push
dec
dec
les
xchg
adc
mov
or
xchg
popa
xor
cmpsl
incb
and
jle
in
and
lcall
dec
mov
cld
or
clc
mov
loope
add
add
lret
arpl
loopne
and
sub
pop
icebp
fstpt
mov
into
outsb
sbb
add
stos
mov
xlat
xchg
mov
sbb
mov
pop
pop
lret
push
cmp
pop
push
sbb
pop
mov
mov
add
push
add
dec
mov
or
lcall
and
jl
and
leave
sub
jno
lcall
cmpsl
xchg
mov
mov
cwtl
push
xor
or
push
and
pop
and
fiadds
inc
sbb
mov
outsb
adc
fwait
inc
mov
pop
jecxz
pop
sub
xchg
cld
sub
aad
scas
mov
mov
addr16
pop
inc
sbb
xor
mov
shll
xchg
jns
xchg
aaa
jg
aad
pop
adc
cwtl
xor
icebp
inc
insl
add
xchg
idivl
iret
mov
cmc
imulb
faddp
inc
and
push
dec
fwait
or
or
inc
and
hlt
jns
or
push
cmp
jle
sti
mov
push
scas
or
data16
inc
orb
xor
fwait
dec
lock
mov
inc
sbb
adc
fsubp
xor
stos
test
int
dec
mov
xor
xchg
jmp
xchg
int
das
mov
xor
mov
mov
fidivrl
cmp
lret
mov
or
xor
mov
ss
xchg
sub
pop
scas
arpl
bound
cmp
es
sub
loope
dec
mov
inc
mov
nop
push
scas
out
mov
test
push
fimull
test
push
sub
cmp
sahf
pop
xchg
xchg
cmp
cmpsl
es
push
cmp
test
ss
jo
jp
adc
stos
sbb
jle
push
jae
sub
aaa
inc
add
push
aaa
nop
xchg
addr16
push
cmp
xchg
mov
je
rol
lcall
sbb
inc
subb
xchg
dec
sbb
cmp
test
in
inc
cmp
out
sub
cs
sub
push
add
outsb
xor
movsb
jo
loope
cmp
stc
mov
cmp
sub
mov
js
stc
outsl
dec
das
mov
add
xchg
shlb
cmpsb
out
popl
pusha
or
out
push
mov
sbb
cli
or
div
in
cli
bnd
mov
jmp
push
inc
push
lret
repz
adc
cltd
sarb
ja
loop
push
xchg
and
xchg
popa
rorl
cs
std
ret
mov
pusha
andb
fdivrs
in
adc
push
cmp
cmp
pop
cmp
mov
xor
ret
inc
movb
inc
pop
xor
cld
jmp
out
das
fdiv
pop
pop
push
icebp
adc
call
sub
aad
lret
aas
cltd
ss
lcall
inc
dec
call
sbb
jbe
jl
cli
ss
js
lods
push
js
mov
push
inc
cld
jle
mov
mov
mov
sti
shll
sub
xchg
lcall
arpl
aam
outsb
jle
adc
and
es
jnp
lahf
fcompl
ret
imul
inc
or
rcll
mov
movsl
sub
ja
mov
into
mov
push
mov
fimuls
pop
push
arpl
aaa
lcall
lock
add
inc
fildll
mov
mov
mov
sub
adc
bound
mov
stc
out
and
shlb
or
jnp
mov
sub
lods
fidivrs
mov
je
push
ret
sub
cli
mov
adc
push
mov
icebp
lock
xchg
push
ret
or
xchg
jnp
fs
pop
lea
sub
mov
cmp
jle
and
mov
xchg
cmp
mov
push
cmp
aad
data16
ljmp
xor
xchg
lds
loopne
sub
in
jo
inc
add
call
push
dec
xor
lahf
pop
pop
mov
sub
and
xlat
or
and
mov
cld
enter
stos
pop
call
add
imul
inc
mov
lcall
xlat
loopne
inc
pop
idivl
sbb
mov
push
xchg
xchg
and
cmp
xchg
scas
adc
or
subl
push
outsb
jnp
mov
xchg
mov
cmp
ja
test
push
leave
push
pop
repnz
pop
xchg
cmp
divb
hlt
cmp
adc
das
mov
scas
mov
jae
mov
subb
stc
ja
mov
xor
test
mov
mov
xchg
mov
into
adc
insl
xchg
lcall
mov
inc
divl
sbb
insb
call
xchg
sarb
xor
xor
adc
fistpll
ds
cmp
cmp
std
sti
mov
xchg
xor
jmp
xchg
add
sub
inc
cli
cmpsb
xor
jmp
adc
fcoms
mov
add
and
andl
lahf
out
fsubl
dec
or
dec
mov
lock
xor
sub
sub
adc
jl
add
scas
pushf
jbe
aad
sbb
xor
xchg
cmp
cmpsb
and
testb
jns
xor
sbbb
nop
aas
scas
push
mov
repz
mov
push
and
cltd
xchg
sti
xor
cmp
mov
lds
push
mov
aas
xchg
adc
sbb
jne
test
xor
xor
or
mov
and
mov
es
dec
ret
mov
test
in
and
nop
mov
or
fidivl
add
xchg
mov
jo
xchg
sbb
lahf
pop
xchg
test
jb
or
js
jp
test
pusha
testb
mov
sub
sub
stos
scas
sbb
out
dec
mov
fs
and
mov
sarb
mov
sub
push
sbb
daa
addr16
lahf
xor
sbb
mov
or
dec
jb
ja
push
mov
dec
xchg
pop
mov
rcl
dec
fwait
cmpsl
xchg
int
cs
inc
cmpsb
xor
xchg
mov
push
movsl
push
push
cld
fwait
and
dec
jbe
mov
mov
gs
pop
sub
rol
cmp
dec
lret
jl
enter
cmp
mov
in
daa
pop
sbbl
jg
xchg
mov
push
cltd
cmp
pusha
movsl
xchg
add
sarb
ss
dec
inc
pop
mov
mov
test
or
sti
orb
lcall
cmp
adc
movsb
inc
pop
jns
inc
in
inc
cmp
andl
xor
add
cmp
movsl
int3
xchg
mov
adc
mov
xor
jmp
dec
andl
int
aas
sti
into
sbb
imul
bound
or
mov
lods
sarl
fnstcw
xchg
or
dec
mov
cmp
mov
loopne
ja
ret
xor
sbb
mov
inc
sbb
bound
es
xor
mov
xchg
cmp
cld
and
cmp
xchg
test
cli
push
jp
pop
shrl
leave
fwait
pushf
add
and
in
sahf
jp
lret
les
dec
ljmp
cmp
adc
cmp
xor
out
gs
sub
mov
arpl
fwait
sub
adc
pop
es
inc
mov
adc
cli
in
pop
adc
jge
mov
lcall
cmp
cmp
cmp
mov
cmp
xor
xlat
sti
cmp
push
adc
xchg
ret
mov
mov
pop
stc
lcall
add
jg
or
loopne
fucomip
cmpsb
dec
pop
or
insb
ljmp
dec
sarb
mov
lret
xchg
inc
dec
mov
sub
adc
lods
in
push
push
sti
mov
pop
fsub
xor
sub
mov
lret
aam
loope,pn
push
cmp
xchg
xchg
push
stos
out
pop
and
mov
repnz
inc
mov
sub
stc
sub
cli
xor
xor
mov
push
xor
push
xchg
xchg
ret
add
shlb
jecxz
pop
cmp
es
dec
cmp
pop
dec
test
fisttpl
test
pop
xchg
sub
and
std
pushf
cmp
adc
cmp
rcll
pop
sub
hlt
mov
in
adc
rcl
inc
mov
lock
push
xchg
int
cmp
mov
mov
bound
mov
mov
inc
lahf
hlt
aas
xor
xlat
sbb
adc
or
xorb
cmp
jg
test
sub
cld
cs
lods
cmp
mov
mov
shl
xor
adc
dec
and
hlt
cld
and
ss
jecxz
pop
mov
pop
fisttpll
lods
jnp
dec
adc
sub
lea
sti
inc
or
jle
ret
mov
xchg
push
inc
mov
call
sub
cld
xor
adc
mov
pop
repz
lods
cli
into
dec
lods
cmp
sti
cld
or
dec
xor
mov
mov
daa
cmpsb
xchg
sbb
pop
icebp
push
mov
lahf
imul
scas
mov
sbb
cld
xor
push
sbb
imul
sub
scas
shrl
clc
xchg
xor
add
sbb
ret
roll
dec
mov
imul
mov
mulb
cmp
jl
sahf
ljmp
in
into
je
fsubrl
cwtl
pop
pop
xor
mov
mov
out
cmpb
ja
pop
lahf
xchg
dec
cmpb
mov
push
shlb
mov
sbb
cmp
push
jmp
scas
stos
in
pop
dec
cmp
dec
mov
mov
out
or
cwtl
xchg
aas
push
or
cli
ljmp
lcall
movsb
mov
xchg
ret
lret
sti
xor
mov
mov
cli
and
lret
lock
fnsave
in
push
jns
outsl
xchg
fwait
pop
pop
xorb
or
sub
cmp
pop
adc
mov
push
mov
repnz
sbb
xchg
ja
cmp
mov
cmp
fstps
mov
jp
mov
dec
mov
arpl
pop
push
sbb
sbb
sub
xchg
xor
fsubrs
or
pop
imul
popf
rorb
stos
stos
pop
jno
sbb
jg
loop
lret
stos
mov
aas
rcl
sub
add
daa
and
sbb
into
xor
adc
das
rorl
movsl
mov
fld
std
lret
sub
cmp
mov
mov
orl
js
stc
dec
jbe
add
mov
cltd
fimull
push
push
ret
pop
sbb
loopne
push
call
fldt
pop
sub
sub
sbb
das
mov
cmp
fst
lahf
test
cwtl
mov
lret
or
int
mov
xor
and
xchg
int3
push
loop
mov
sbb
adc
fbld
stos
pop
inc
sub
push
or
mov
std
fcmovne
shlb
or
ret
adc
jp
cld
lret
popf
ficompl
xchg
or
xchg
call
xchg
fs
and
push
lcall
outsl
aaa
xor
or
cmp
dec
sbb
jnp
movsb
pop
pusha
xlat
dec
xchg
popf
lods
xchg
sub
push
or
and
add
sahf
xor
pop
push
xor
aaa
mov
sti
imul
lea
inc
test
xchg
mov
ret
push
cmpsl
mov
xor
mov
hlt
mov
in
orb
stc
xchg
jl
or
cmc
cmpsl
lods
xor
xchg
sub
es
in
and
pop
std
dec
pop
fbld
inc
pop
in
push
scas
cs
push
leave
add
pop
imul
mov
xchg
pop
scas
sub
add
jp
pusha
and
mov
xor
cmp
mov
scas
jl
dec
mov
or
divl
in
scas
in
mov
nop
in
ficoml
mov
ljmp
dec
xchg
enter
or
push
das
mov
cmp
mov
subl
fs
lods
call
adcb
scas
push
notl
fs
dec
mov
out
lcall
ljmp
fisubrl
outsb
clc
inc
mov
xchg
inc
pop
shl
ss
push
push
int3
inc
mov
rorb
dec
pop
and
push
repz
pop
ret
negb
xchg
cmp
and
mov
push
mov
rcr
outsl
inc
mov
sarb
das
cltd
scas
iret
mov
test
sbb
adc
mov
lret
cmpl
push
test
mov
pushf
cmp
popa
aad
cli
pop
dec
adc
imul
lods
dec
aam
sub
popa
scas
nop
add
jg
fdivr
stos
mov
push
adc
cli
pop
hlt
shrl
mov
sbb
sbb
mov
sbb
popf
repnz
xlat
pop
loopne
imul
jbe
int
mov
popf
xchg
inc
or
jge
lods
mov
pushf
fldcw
sub
movsb
divb
lock
cmp
stc
cmp
mov
adc
notl
ss
mov
scas
cmpsl
sahf
es
mov
cmp
fildll
std
mov
xor
add
es
xor
dec
cmpl
and
pop
mov
pop
mov
sbb
outsl
mov
loope
enter
mov
inc
fstpl
jnp
jbe
xchg
movups
repnz
dec
sbb
push
lret
lcall
mov
pop
add
cmp
int3
lods
divb
test
pop
pop
pop
aas
push
cwtl
stos
pop
aas
je
push
cmp
jns
mov
test
xor
cmp
imul
xchg
sbb
xor
xchg
aaa
dec
scas
jp
pushf
cmp
out
or
into
cmpsb
repnz
dec
cwtl
lods
pop
test
into
repz
mov
enter
test
jbe
push
loop
sub
sarl
xor
int
je
or
aas
loope
mov
nop
xchg
jae
test
lea
and
stos
jp
mov
fimull
es
lret
xchg
add
pop
js
sub
jno
lcall
add
in
pop
movsb
loopne
inc
ret
ror
lock
in
jle
in
dec
in
adc
ja
xor
outsb
jp
sub
mov
adc
cmpsl
mov
in
jo
sub
cmp
movsl
test
sbbl
sahf
fwait
lods
ss
inc
mov
inc
repz
inc
add
pop
jp
pop
adc
cld
aam
cmpl
dec
xchg
stos
xchg
mov
push
imul
loopne
je
nop
js
dec
sbb
adc
inc
mov
xchg
dec
es
mov
pop
inc
mov
add
fstpt
jg
sub
mov
mov
cmpsl
stos
das
daa
mov
inc
inc
test
xor
push
stos
es
popa
adc
fstpl
dec
lods
sbb
mov
shlb
jecxz
push
and
pusha
mov
rclb
jbe
loopne
or
mov
cs
aas
pusha
rdtsc
rolb
addb
and
push
aaa
push
out
jo
add
fnsave
loopne
inc
mov
mov
adc
fs
sti
stos
pop
push
xchg
mov
sub
and
stc
in
lahf
lret
aas
pop
das
or
push
xchg
jmp
cltd
mov
sti
xor
dec
sub
mov
ret
xor
or
cmp
xor
daa
movsl
or
test
popf
inc
mov
mov
cmp
les
lods
push
add
pop
xchg
adc
or
or
add
mov
mov
lods
loope
aaa
xor
xchg
mov
inc
movsb
mov
adc
outsl
adc
test
outsl
pop
inc
jp
jg
incl
cld
lahf
add
xorl
add
jle
xchg
stc
imul
lock
mov
mov
lods
push
mov
push
or
aam
push
stos
out
pop
mov
add
mov
sub
xor
sbb
cmpb
adc
adc
mov
movl
jge
comiss
or
stos
and
xor
icebp
inc
pop
fwait
sub
xorb
addb
ljmp
push
inc
mov
add
jmp
cwtl
insb
andl
cmp
cmp
xchg
sub
out
cmp
push
add
xor
mov
popa
fadds
ja
inc
popf
outsb
adc
sbb
arpl
add
cli
subb
sub
push
mov
adc
rorb
dec
xchg
dec
lods
dec
mov
gs
inc
add
mov
into
mov
push
push
xchg
test
xor
shlb
fisubl
cmp
mov
insb
test
pop
dec
xor
mov
sub
push
call
std
sbb
test
mov
aaa
cmp
adc
mov
sbb
mov
mov
lcall
out
sub
rolb
mov
xlat
dec
xchg
mov
outsb
mov
lret
adc
dec
mov
test
hlt
fwait
stos
sbb
ret
test
add
das
in
out
cmc
shl
js
in
sub
inc
cmp
lcall
fucomp
xchg
add
xchg
jp
xor
mov
mov
ljmp
add
stos
pop
lret
insb
je
ret
cmp
cmp
arpl
cmp
mov
sti
xchg
or
cltd
loope
dec
push
xor
adc
cmc
aaa
test
sub
das
mov
pop
mov
cmp
or
movsl
and
lret
rorl
das
cmc
cmp
lods
mov
adc
cwtl
imul
mov
rcrb
push
xor
repnz
mov
push
jno
cmp
push
mov
subb
in
or
mov
cmpb
subb
mov
cmpsl
jbe
sub
jp
adc
pop
pop
inc
mov
movl
scas
rolb
icebp
xchg
jb
lret
or
inc
stos
or
xchg
mov
inc
movsb
jp
fstl
push
pop
pop
sbb
aam
xor
and
std
adc
sub
fdivp
mov
cmp
mov
addl
jnp
cmp
sub
aaa
in
outsb
scas
mov
lods
stos
in
or
cli
add
adc
out
cmp
mov
rcrb
xchg
jbe
xor
mov
jp
shlb
jp
and
das
push
mov
cmp
or
lcall
xchg
scas
sub
inc
pop
stos
call
lock
in
decl
movsl
xor
stos
jo
cmpsl
xchg
add
mov
popf
pop
mov
cli
cmp
adc
jl
imul
or
test
mov
hlt
or
stos
push
push
pop
aam
sub
sbb
cmp
cmc
xchg
in
and
fs
xchg
push
mov
scas
stos
dec
sahf
sbb
mov
pop
mov
sbb
std
lock
or
sbb
dec
movsb
inc
mov
test
add
push
sub
or
outsl
sahf
sub
dec
mov
test
or
jno
insb
add
jecxz
or
aas
and
test
sbb
mov
cmp
xchg
fs
leave
sbb
out
mov
push
or
mov
lret
sbb
inc
xchg
inc
pop
stc
mov
addr16
mov
sub
mov
mov
js
sti
sarl
xor
add
hlt
push
mov
mov
popa
stc
adc
xchg
iret
fstps
push
lret
stos
adc
lcall
mov
pop
cmc
fistl
mov
cmp
add
pop
lret
push
xchg
push
or
test
ljmp
mov
outsb
xchg
adc
jbe
push
cmp
das
cmp
inc
adcl
test
mov
dec
adc
xchg
and
adc
xchg
fldenv
mov
mov
dec
lahf
addl
aas
xchg
or
outsb
mov
mov
pop
jp
fsubrs
mov
pop
rcrl
std
cmpsl
movsb
lea
sbb
das
loopne
scas
rclb
aaa
test
dec
leave
or
xor
mov
icebp
pop
repnz
pop
aad
or
and
xchg
jg
sahf
mov
push
lods
jb
add
bnd
add
std
xlat
add
jb
hlt
xchg
les
sbb
insb
and
das
push
jle
lret
add
movsb
mov
lock
es
dec
lret
in
dec
xor
xchg
test
sub
inc
fstp
pusha
or
and
mov
mov
sbb
mov
test
dec
ret
mov
fs
adc
cmp
insb
scas
jl
mov
xor
cwtl
fiadds
xor
mov
loope
push
popa
xor
and
cwtl
cmp
mov
pop
push
mov
lock
jnp
out
jp
rclb
jae
lahf
test
test
xor
rcrl
mov
mov
xchg
ror
rcrl
outsl
mov
in
sbb
sbb
or
inc
inc
in
push
imul
xlat
arpl
fidivrs
inc
ss
cmp
mov
jnp
xor
push
inc
jp
adc
or
jne
pusha
mov
jge
clc
mov
dec
xchg
mov
sub
cld
lret
cmp
fimull
or
in
rcrl
jns
sub
adc
gs
sarl
mov
dec
mov
dec
mov
arpl
or
push
sub
mov
or
xchg
repz
cli
and
inc
insl
sbb
cs
inc
sbb
mov
lcall
int3
push
cmp
jp
daa
push
mov
pop
jle
sarb
xchg
mov
jnp
dec
mov
stos
lahf
das
sbb
mov
rclb
sub
and
sbb
mov
sbb
jge
insb
xor
daa
jae
sbb
jl
mov
or
stc
mov
test
hlt
mov
sbb
dec
jmp
xchg
enter
dec
jle
inc
fidivrl
stos
flds
jne
add
nop
jae
mov
pop
ret
test
jnp
and
repz
pop
mov
lahf
lcall
adc
or
popf
mov
sub
push
add
mov
dec
cli
cmovno
adc
test
out
or
cmp
loop
inc
outsl
mov
mov
mov
pushf
mov
jae
fs
loopne
jmp
mov
sub
ss
push
xor
jge
mov
mov
outsl
pop
stos
fs
jp
push
ja
stos
push
cmp
dec
sbb
lcall
adc
mov
pop
fsts
inc
dec
es
mov
pop
xor
push
jle
jp
adc
insl
es
mov
sub
aaa
mov
inc
inc
mov
push
scas
lret
add
inc
mov
cmpsb
cmpsb
xor
sbb
mov
sbb
jnp
mov
dec
stos
adc
aaa
and
push
push
jg
cmp
xor
stos
cmp
jno
add
outsl
fidivrs
mov
or
mov
push
xchg
and
call
mov
push
cmp
xor
clc
mov
mov
xor
sub
pop
xor
xor
mov
cmp
cmp
ret
shll
mov
cli
mov
dec
xor
xchg
push
fidivrs
sub
aas
adc
movsb
or
cli
inc
das
cltd
das
adcb
xor
aam
dec
inc
inc
mov
sub
imul
imull
jbe
sub
fisubs
lret
sub
movsb
add
lods
sbb
sbb
shll
xor
das
mov
mov
xor
cld
aaa
mov
lahf
cmp
into
cwtl
sub
jno
push
lret
dec
xor
cmpsl
mov
mov
je
xchg
scas
inc
scas
es
lcall
or
adc
sub
xchg
or
and
leave
mov
lret
mov
push
xor
pop
and
and
sub
xor
lret
ja
lret
ja
mov
adc
movsl
xorb
jo
lahf
adc
xor
lret
popw
cmp
cli
mov
xchg
and
cmp
jge
xor
call
mov
dec
push
push
push
aas
out
push
enter
mov
jns
pushf
xchg
stos
loope
jge
ficoml
or
dec
pop
push
arpl
xorl
lret
jp
cmp
cmp
jnp
jno
xor
out
stos
inc
aaa
stc
inc
add
lret
pop
and
pop
mov
negb
push
push
mov
sub
movsb
jle
lcall
xor
inc
dec
mov
lret
adc
sbb
dec
mov
mov
js
xor
jmp
pop
mov
insb
test
inc
out
shr
xchg
stos
in
in
in
sub
or
jle
mov
call
cmp
push
sbb
fisttpll
mov
jg
mov
flds
out
lret
clc
and
fistl
push
cs
pop
push
clc
xor
sti
mov
mov
sub
or
dec
push
shlb
imul
xchg
sub
xor
aad
sti
repnz
arpl
jne
jne
cmc
inc
mov
loop
inc
mov
adc
mov
mov
pop
push
loope
lea
xchg
cmpsb
mov
pop
jo
sbb
push
test
xlat
mov
xchg
jo
push
popa
mov
xchg
or
xchg
out
mov
lock
push
push
jge
aaa
cld
addl
add
mov
ss
or
and
jnp
les
mov
mov
cli
cmp
mov
jecxz
clc
pop
pop
lret
popf
pop
enter
mov
movsb
daa
sbb
and
lret
aaa
inc
and
insl
sbb
sub
mov
xor
sahf
cmp
dec
loop
sub
jmp
aas
cmp
nop
lcall
xchg
and
pop
cli
mov
movsl
rcrb
cmp
movsb
aam
jbe
mov
lods
mov
inc
pop
ret
or
pop
add
inc
jnp
hlt
pop
into
psubd
leave
push
test
cmp
gs
and
xor
push
mov
ficompl
inc
cmp
sbb
movsb
outsb
inc
xlat
add
insb
insb
pusha
push
arpl
mov
lea
jge
daa
ja
pop
fstp
push
push
sub
add
je
in
push
jns
xor
movsl
pop
mov
mov
lods
jge
pop
pop
iret
sti
fiadds
mov
movsb
nop
bound
mov
dec
dec
lds
push
or
lods
and
in
jmp
test
adc
fisttpl
inc
sub
mov
fwait
loopne
push
aad
fmuls
icebp
jo
jg
aaa
scas
and
pusha
xchg
mov
insb
pop
shll
jb,pn
data16
pushf
xor
cmc
jmp
xor
and
jge
inc
mov
cltd
mov
mov
fnstcw
jo
hlt
jg
lret
xor
arpl
mov
pop
lods
xchg
sahf
pop
add
pusha
xchg
das
push
jnp
lret
cmp
pop
stos
sub
or
xor
mov
adc
int
lret
mov
xor
out
cmp
aad
pushl
rcll
clc
stos
fwait
repnz
and
cld
cmpsb
lods
or
int
out
rcll
orb
jg
cmp
jo
push
jnp
xchg
push
jb
inc
lret
test
cmp
andl
mov
imul
mov
ss
insb
inc
cli
cmp
adc
call
or
dec
pop
jp
mov
pop
in
cs
lcall
mov
dec
jmp
dec
xor
cld
mov
in
xchg
cmpsl
pop
xchg
scas
sub
js
xor
inc
icebp
jns
mov
jae
cmp
push
xor
imulb
pop
cld
nop
dec
in
pop
rcll
jecxz
cmp
sub
sub
jne
add
das
push
cs
or
aad
jl
and
ret
and
in
rcll
cld
dec
push
add
xor
ss
sti
sub
or
push
pop
out
aad
flds
xor
mov
test
xor
xor
das
popf
and
lock
mov
sub
ss
dec
jo
fcoms
addr16
push
clc
add
arpl
pushl
fwait
xchg
repnz
cmpsb
pop
mov
mov
lods
cmp
or
inc
dec
pop
lret
mov
cwtl
jb
jl
sahf
cmp
pop
imul
popf
and
xor
repnz
dec
adc
fisubrl
cmp
aaa
ljmp
lock
push
mov
fnstcw
dec
xor
pop
add
mov
pusha
xor
adc
scas
mov
dec
das
into
xlat
ss
xor
add
jmp
cmpsl
cmp
xor
mov
push
mov
ljmp
inc
sarl
sub
xlat
and
scas
fldt
fistps
sub
cmp
and
jmp
outsl
push
loop
ret
sbb
and
ljmp
inc
jp
out
sarl
cmp
pop
add
adc
or
push
sarb
inc
adc
or
sbb
ss
aad
cmp
mov
andb
add
scas
mov
xchg
ds
mov
inc
mov
cmp
pop
jg
jbe
inc
pop
js
iret
daa
jb
push
cmp
sbbb
pop
jo
loope
push
insb
xor
sub
xchg
or
or
push
or
mov
stos
sbb
jbe
fiaddl
push
ficompl
nop
mov
jge
cmp
adc
lahf
mov
scas
xor
mulb
pop
lods
pusha
xor
or
sysenter
inc
or
ret
cmp
incb
xor
jns
mov
sar
mov
xchg
mov
scas
lds
mov
inc
xchg
and
das
xor
cltd
pop
xchg
lret
in
ds
jnp
jp
loope
std
sbb
std
scas
call
adc
imul
loope
jno
pop
jp
jmp
xor
lea
cmpsb
dec
insl
mov
pop
push
out
xchg
inc
sti
fdivrp
sub
fisubl
jp
mov
sbbb
pushf
aaa
sbb
je
cltd
sub
fdivrs
aad
sub
adc
mov
lods
mov
cmp
cmp
pop
sbb
jnp
mov
inc
int
enter
pop
movsb
aas
jp
lds
sub
or
jp
cmp
adc
add
aaa
xchg
and
xchg
pop
mov
inc
sbb
rcrl
insb
sub
clc
and
mov
mov
gs
into
sahf
aas
mov
stos
mov
mov
mov
in
sbb
mov
sahf
dec
dec
mov
or
jbe
jmp
xor
leave
cmpsb
out
push
scas
es
cmp
sti
cmpsl
shll
and
in
sbb
lret
jp
mov
stos
jbe
pop
inc
cli
pop
cmp
cld
xor
cmp
movsl
xchg
dec
sbb
in
pop
push
pop
mov
lcall
xor
inc
test
or
and
cmp
enter
mov
dec
adc
je
sbb
clc
adc
insl
dec
aaa
adc
pop
ja
adc
ret
lcall
sub
cmp
pop
test
push
xchg
jnp
pushf
imulb
mov
cmp
add
mov
xor
pop
mov
test
jge
mov
loop
cmp
mov
dec
cwtl
jp
cli
mov
popf
mov
dec
fs
icebp
xchg
jbe
jae
inc
cmp
pop
decl
push
sarb
cltd
lret
fnstcw
lods
xchg
fimuls
shlb
stos
or
stos
inc
cmp
mov
fwait
mov
sbbb
insl
xor
cmc
mov
ja
es
ret
cmp
lret
sub
xor
scas
and
adc
mov
mov
in
add
cwtl
xor
dec
push
cltd
out
cmc
pop
xor
cmp
push
rcrl
fldt
cmp
sbb
xor
jae
add
inc
dec
es
mov
pop
push
into
lods
or
mov
cmpsb
adcl
inc
fisubl
mov
cmp
push
fwait
es
test
test
push
dec
out
sub
cs
sbb
cmc
xchg
and
pop
inc
mov
ret
cli
sti
xchg
lea
push
fstl
cmp
sahf
fdivrp
test
jae
jne
mov
inc
or
cmp
outsl
mov
or
mov
mov
cwtl
adc
xor
clc
bound
pop
and
cmpsl
dec
rcll
ficoms
inc
lret
adc
xor
es
inc
enter
pop
lock
mov
rclb
sbb
pop
ljmpw
xor
nop
cmp
adc
xor
cmp
jb
cmp
repz
adc
adc
mov
jp
and
push
arpl
dec
add
ret
repz
mov
cmpl
repnz
dec
inc
std
and
xor
dec
cwtl
stc
lret
fisubl
jnp
repnz
sti
xor
dec
mov
mov
push
xchg
xor
jns
cld
push
sti
push
std
cli
adc
xor
imul
stos
movsl
test
dec
mov
jbe
mov
fnstenv
adcl
enter
lahf
jo
xchg
lret
xchg
mov
sbb
mov
ss
mov
dec
xor
cmp
mov
inc
rclb
xchg
dec
sbb
bswap
xor
mov
aas
sbb
mov
mov
dec
mov
ss
call
push
lahf
xchg
mov
sahf
stos
dec
fdivrl
push
lea
call
shll
test
dec
push
mov
fbstp
jnp
sub
into
mov
pop
add
sub
cmp
or
movsl
cli
js
cmp
push
inc
aaa
adc
ja
and
mov
cmp
adc
ret
dec
aaa
rcrl
fstl
xchg
and
arpl
iret
pushf
fs
scas
mov
ret
push
imul
icebp
add
inc
cmp
fistpll
lret
stos
xor
and
inc
xlat
xchg
sbb
subb
sub
mov
jmp
pop
lret
daa
cmp
inc
xor
sbbb
es
jno
mov
pop
fcomi
sbb
test
or
jnp
xor
jbe
mov
gs
imul
mov
or
jge
js
pop
sti
xor
mov
push
cli
dec
or
imul
pop
int
insl
roll
std
pop
add
xchg
push
xorb
adcl
jbe
arpl
lcall
fwait
xchg
mov
mov
movsb
inc
repnz
andb
jno
and
movsl
push
es
mov
sub
mov
xor
icebp
jns
mov
outsb
sar
jp
cmc
push
mov
packssdw
hlt
test
and
pusha
sahf
xchg
scas
xchg
fiaddl
ret
sarb
cmp
cmp
in
xchg
sbb
in
jb
fdivrp
inc
frstor
push
cmpsb
movb
cmc
cmp
sbb
sarl
dec
xor
cmc
fsubs
pop
inc
into
or
cmp
xor
and
lahf
adc
es
xor
cmp
adc
fwait
inc
xor
clc
jbe
and
rolb
jno
pop
pop
outsl
push
sbb
ja
dec
int3
ja
sbb
cs
add
jge
inc
stc
dec
xor
xor
dec
jl
jb
sub
mov
inc
fldt
out
inc
dec
mov
jbe
pop
ret
lret
mov
push
and
cli
bound
inc
pop
cs
enter
enter
sub
and
int3
imul
sub
shll
jo
cmpsb
outsb
iret
mov
mov
out
jge
outsb
iret
dec
mov
iret
imul
das
mov
cli
add
xorb
xchg
jecxz
cs
mov
push
xchg
jecxz
jo,pn
inc
call
or
adc
lea
mov
cmp
out
and
inc
push
adc
mov
mov
mov
mov
inc
mov
xchg
adc
lds
dec
mov
roll
fwait
xor
addl
xchg
jns
outsl
cmp
mov
and
xchg
adc
dec
inc
fsubrs
pop
mov
push
mov
xchg
movsl
pop
int3
iret
jecxz
mov
aam
jecxz
adc
mov
pusha
mov
add
lods
mov
and
fimuls
lods
pop
pop
daa
add
lret
xchg
and
fwait
xor
inc
pop
push
int
xchg
or
jmp
dec
inc
icebp
subps
xchg
dec
jno
lret
and
mov
dec
jns
cmp
mov
daa
mov
mull
xchg
das
mov
or
aas
mov
adc
rcrb
mov
lock
out
jp
movsb
jl
jle
dec
pop
mov
or
inc
jb
mov
scas
push
mov
jne
out
or
mov
fidivs
stos
jmp
add
cmp
flds
or
xchg
out
cltd
loope
sub
push
daa
je
dec
or
and
xchg
popf
push
jne
cmp
sub
lea
sub
shl
fcoml
jns
and
outsb
ffree
jg
mov
in
mov
cld
pop
ljmp
sub
xchg
mov
mov
cmp
dec
ljmp
cmp
jb,pn
mov
shlb
sub
mov
cltd
mov
outsb
mov
mov
lretw
cwtl
inc
testb
dec
xlat
xor
in
je
loopne
lret
aas
inc
mov
cwtl
pushf
inc
and
add
push
aas
jge
cmp
iret
xor
jge
sbb
mov
mov
dec
pushf
lahf
dec
cmpsb
pusha
fcomps
pop
mov
or
inc
shrb
adc
cwtl
push
fisubs
out
xlat
mov
xor
dec
subb
imul
mov
mov
mov
call
or
cld
addr16
fcoms
xor
xchg
mov
mov
jns
push
jle
push
mov
sbb
adc
fidivrs
pop
inc
pop
inc
lods
sbb
addr16
sbb
js
inc
sub
inc
mov
ret
push
mov
sbb
movsl
sub
cs
inc
lret
mov
xchg
dec
fcoms
pop
mov
popa
inc
xor
out
or
adc
jp
dec
in
xchg
cmp
add
inc
aas
mov
sahf
icebp
add
inc
scas
les
lcall
xchg
dec
jns
cmp
xchg
xchg
xor
inc
adc
cmp
or
mov
sbbl
aas
xorl
inc
mov
xchg
jns
mov
xor
test
sahf
out
popa
sbb
lahf
dec
sub
push
outsb
mov
sub
leave
pop
or
xor
cmpl
mov
mov
push
xor
xor
mov
sti
ficoms
xor
or
add
jbe
mov
dec
mov
lods
add
fsts
and
push
iret
movsl
pushf
mov
mov
push
fs
cmp
cwtl
inc
out
inc
pushf
pop
inc
test
dec
cmp
cmp
and
pop
aam
lret
mov
test
or
sbb
push
notl
pop
daa
popf
fwait
jo
mov
fcomps
xchg
mov
cmc
xchg
in
outsl
lock
lods
ss
scas
and
dec
mov
xor
or
xchg
push
or
xlat
add
aad
movsl
lret
and
or
mov
jmp
aas
cmp
push
cld
inc
and
pop
push
shrl
daa
or
mov
xchg
outsl
in
sbb
movsl
pop
push
sbb
mov
xor
xchg
das
add
stos
cmp
mov
mov
xchg
mov
icebp
push
aaa
jle
test
sub
jbe
and
pusha
insl
dec
je
lcall
lock
xor
sahf
sub
add
lret
xor
or
mov
push
pop
mov
inc
xchg
push
dec
cld
nop
pop
in
sbb
repnz
cmp
cmp
fidivs
lret
jae
xor
outsl
js
sbb
adc
es
dec
int3
clc
push
adc
in
adc
hlt
push
pop
push
pop
in
fs
out
mov
sahf
mov
jae
cmp
or
adc
cmc
cld
pop
xor
mov
mov
mov
adc
hlt
pop
sub
cmp
test
sbb
xchg
or
aam
ret
fidivrs
aaa
jg
fst
or
inc
sahf
xor
cmpsl
fstpt
ret
out
in
popf
cmc
aad
pop
pop
inc
lods
dec
add
push
push
mov
or
xlat
sbb
imul
mov
xchg
pop
jmp
pop
inc
push
dec
movsb
and
sbb
add
adc
push
sub
and
pop
lret
jno
adc
hlt
test
mov
sahf
cmp
in
inc
into
cs
shrb
lds
data16
and
cli
xchg
jp
inc
pop
xchg
adc
mov
das
pusha
movsl
sub
pop
sbb
cmp
pop
ss
int3
pushf
add
adc
mov
lret
inc
mov
ret
push
call
sbb
inc
mov
cmp
loope
out
mov
int
adc
xchg
mov
jo
sbb
sbb
in
jo
movsl
scas
mov
jp
sbb
inc
cmp
mov
or
iret
stos
fiaddl
mov
stc
shrb
fwait
fwait
aaa
enter
add
enter
mov
ret
nop
cmp
mov
push
std
sbb
stos
jne
ds
jnp
and
sbb
cmp
pop
jp
scas
inc
in
adc
inc
pop
lret
push
xor
dec
inc
xor
add
mov
sub
jb
or
cmpb
jecxz
cmpsl
ret
xchg
sub
jo
mov
loop
inc
mov
jae
test
hlt
pop
xchg
ljmp
inc
add
inc
dec
daa
les
push
pop
insb
mov
fwait
lods
or
nop
mov
mov
xor
and
dec
out
and
sbb
and
mov
push
cld
pusha
inc
daa
inc
mov
fxch
scas
sbbb
push
cmp
xchg
adc
push
xchg
push
add
pop
arpl
jle
sti
lods
cwtl
cmp
testb
and
inc
mov
sub
in
test
lcall
cmp
xchg
xor
scas
insl
scas
cmp
push
mov
rcrl
jnp
xor
ja
mov
mov
adc
pop
pop
sarl
stos
dec
ret
xchg
dec
or
pop
adc
add
pop
pusha
cmpsl
shrl
arpl
adc
mov
sti
cltd
jnp
inc
sbb
add
push
mov
lods
sbb
jbe
add
repnz
mov
pop
int
out
and
push
out
jno
push
and
jmp
mov
xchg
jae
xchg
dec
sub
lds
in
sub
sub
fwait
push
jmp
sbb
mov
out
add
test
lcall
test
inc
loope
ljmp
mov
jecxz
add
filds
into
cmc
inc
cli
rorb
and
xor
jne
adc
mov
mov
push
mov
mov
in
mov
pop
pop
push
pop
icebp
or
lods
lret
fwait
mov
or
pop
xchg
loop
xchg
dec
movsl
jno
xlat
add
js
sub
cs
jae
jp
ret
or
outsb
mov
es
push
testb
fstps
mov
jno
xor
or
mov
mov
push
es
lret
mov
jle
pop
mov
std
pushf
test
mov
in
mov
pop
imul
repz
cmp
scas
pop
gs
cmp
dec
ret
mov
mov
js
aad
xor
or
xor
jmp
pop
adc
inc
xor
aas
outsl
ljmp
jle
lods
push
add
cmp
xor
push
or
inc
sbb
jo
sbb
lea
outsb
lea
push
mov
dec
ret
gs
sbb
pop
push
pop
mov
fidivl
jle
sarb
xchg
xor
imul
mov
mov
and
inc
std
cltd
push
fildll
mov
daa
push
test
lcall
jmp
mov
scas
cmp
into
int
pop
scas
ss
mov
pop
push
outsl
or
push
add
lock
and
sub
movsb
fidivl
xchg
fildl
negb
xor
jecxz
push
cmp
dec
daa
mov
leave
lcall
fcom
ds
mov
in
scas
jge
inc
inc
adc
sbb
mov
pop
adc
pop
or
sub
pop
in
outsl
mov
ss
inc
add
inc
je
shrb
cmp
jle,pn
sbb
adc
cmpl
mov
pop
mov
push
fistpll
cltd
pop
nopl
or
mov
sti
subl
loopne
scas
jnp
sub
or
add
sub
xlat
stos
jle
xchg
xchg
mov
add
cmp
filds
inc
jbe
sbb
sbb
in
jno
xor
out
sti
mov
xor
dec
adc
lcall
pop
fdivr
out
ret
ds
and
add
mov
std
shlb
pop
mov
mov
dec
fwait
sbb
sub
jg
pop
xor
add
jg
stc
fidivrl
insl
and
push
outsb
inc
test
xchg
ret
adc
xchg
mov
sub
fisttpl
dec
mov
xchg
push
pop
mov
jl
fsubrl
ss
mov
jae
movb
mov
pop
mov
sahf
stc
cli
scas
sti
shrl
shrl
cmp
mov
into
icebp
das
loopne
lret
cmp
inc
jp
and
lahf
gs
inc
orl
jb
jg
pop
loop
add
pop
mov
or
or
pop
aaa
mov
jnp
dec
pop
sbb
cmc
fadds
iret
mov
adc
mov
pop
jne
adc
sahf
pushf
int
push
mov
sti
mov
out
out
lcall
lahf
sti
aad
push
sbb
add
jecxz
mov
cmp
stc
add
jecxz
push
pop
mov
pop
xor
jecxz
and
imul
add
fimuls
js
sbb
dec
out
scas
push
mov
ret
ficompl
imull
pop
cmp
loope
sub
mov
cmp
ret
fwait
sub
pop
mov
cltd
dec
ds
ret
mov
push
jg
fwait
push
sbb
xor
xor
mov
jb
dec
js
rorl
pop
inc
nop
or
adc
fwait
mov
jge
cwtl
mov
jno
les
mov
sub
mov
add
sub
das
lret
es
mov
add
fwait
inc
and
or
mov
adc
lods
xor
add
push
mov
pop
jl
xchg
xchg
and
movsl
adc
fisubl
test
push
xor
aaa
inc
sub
popf
push
mov
or
mov
xor
mov
cmp
xor
ret
std
std
cmp
push
repnz
jge
int3
loop
dec
out
push
leave
fidivrl
cmpsb
rcll
pop
out
into
lret
in
mov
sti
and
dec
push
inc
adc
xchg
sub
divb
add
out
pusha
es
shl
adc
xchg
xor
out
cmpsl
test
out
mov
lods
xor
int
je
inc
mov
mov
mov
sti
dec
xor
or
sbb
xchg
lahf
xor
inc
lret
aam
repz
scas
and
out
xor
aam
push
sub
lods
mov
mov
sub
call
cmp
hlt
sub
ret
out
cltd
cmp
lret
ss
cmp
fwait
aam
outsb
sbb
sub
ja
push
pop
xchg
and
lea
pusha
push
bound
popa
mov
mov
jg
push
pop
ficompl
es
jge
xor
and
lret
cli
xor
in
mov
mov
mov
mov
cmp
icebp
pop
mov
push
shll
sub
scas
push
aaa
ss
movsb
mov
push
es
cmp
mov
adc
mov
je
mov
pop
jns
aaa
push
xchg
shrb
mov
cs
fwait
mov
mov
fimuls
pop
and
std
mov
pop
xchg
mov
cltd
js
xor
adc
adc
aas
loope
ret
pop
mov
pop
dec
pushf
loop
popf
movsb
dec
aad
push
dec
lods
push
add
inc
push
push
push
sarb
mov
fld
fistpl
sub
into
out
mov
fisttpll
lock
mov
jno
in
adc
or
cmpsl
xor
dec
xchg
mov
push
mov
mov
sti
or
and
dec
arpl
adc
mov
and
sbb
sbb
sbb
sbb
std
sbb
out
sub
das
mov
or
out
scas
aaa
add
cmpsl
cmp
and
mov
jp
pop
push
and
xchg
pop
arpl
xor
mov
and
lret
rorb
ss
xor
clc
push
sub
sbb
xor
das
or
shll
pop
xor
xor
jne
ss
xor
cmp
cmp
or
jle
ret
mov
jbe
aaa
push
xlat
dec
cmp
pop
imul
inc
push
js
mov
xchg
lods
rcr
jne
addr16
or
mov
inc
cmpsl
aaa
cmp
pop
sub
or
cld
js
fimuls
mov
mov
lahf
mov
rcr
xor
aam
loopne
sbb
cs
shrb
dec
in
cli
pushf
cmc
jg
cmp
aas
bound
mov
iret
test
popf
cmp
sti
ss
fisubl
push
jle
dec
inc
mov
test
adc
dec
dec
mov
add
pusha
xor
lock
cld
xor
dec
jmp
or
call
lret
scas
call
mov
lock
sti
test
hlt
adcb
repnz
mov
cmp
mov
push
mov
mov
cld
add
popa
or
push
std
xlat
aad
inc
lret
out
push
sbb
cmp
push
add
sbb
movb
lret
add
add
adc
decb
push
jo
call
or
pusha
decl
sbb
sti
cmpsb
mov
inc
cli
push
sbb
fcomps
into
test
and
adc
mov
leave
pop
mov
orb
sbb
pushf
mov
cmp
in
js
cld
mov
scas
ljmp
or
fs
stos
pop
aas
jmp
mov
out
push
pop
inc
shlb
mov
jmp
sub
movsb
lret
dec
push
mov
stos
add
ja
lock
sub
out
xor
mov
xlat
leave
jo
cs
stos
cwtl
pop
rcl
outsl
xchg
adc
stc
jecxz
clc
push
lcall
sub
fnstsw
cli
ja
sahf
rorl
popf
cmp
xor
dec
int3
sahf
rcll
xor
cmp
clc
jp
adc
cmp
mov
popf
out
or
sahf
adc
shll
mov
adc
inc
or
pop
jmp
sti
and
mov
inc
and
cmp
mov
out
mov
sbb
cmpsb
sti
aad
orb
shr
pusha
mov
dec
dec
pop
sahf
int
pop
enter
sbb
jb
adc
repnz
xor
lods
adc
pushf
int3
js
jle
outsl
out
out
dec
mov
xor
push
js
lret
out
ss
nop
dec
sbb
sbb
mov
mov
push
dec
loop
add
insb
cmp
scas
push
imul
adc
mov
push
scas
in
inc
scas
push
add
mov
cld
xlat
iret
jnp
rcl
mov
dec
mov
idivl
add
xchg
dec
inc
push
loopne
dec
fwait
push
inc
pop
inc
lret
cmp
cs
movsl
lret
mov
in
and
push
inc
mov
push
mov
push
cltd
push
imul
jns
inc
push
fcomps
push
cmp
and
cmp
push
cmp
cmp
and
shr
pop
add
fnstenv
cmp
xchg
xor
jbe
insb
push
aaa
jl
adc
cmp
jo
outsb
push
je
js
add
cmp
arpl
pop
mov
adc
xchg
mov
or
mov
fbstp
mov
lret
jae
es
mov
xchg
movsl
push
adc
push
cld
jnp
jle
lret
ret
cmp
sbb
aam
out
fdivrl
mov
xchg
lret
fabs
mov
or
stos
mov
lret
sbb
xor
mov
outsl
jns
aaa
dec
scas
cwtl
repnz
loopne
loopne
add
add
in
and
jb
and
inc
lahf
mov
jne
in
mov
xor
es
mov
cmp
lret
xor
imul
xchg
push
push
sbb
stos
insl
das
or
insb
lret
std
cmp
xor
std
push
push
enter
xchg
mov
jp
bound
cmp
stos
test
push
xchg
xchg
in
das
cli
mov
lret
sahf
sbbb
inc
jns
pushf
and
call
imulb
jecxz
das
mov
incl
enter
mov
cld
sbb
je
insb
sub
mov
stc
movsl
pop
lea
xor
daa
mov
jg
lcall
pop
push
mov
roll
fistpll
ret
and
nop
bound
sub
cwtl
lret
jmp
and
xor
pop
cltd
adc
dec
cmp
mov
imull
push
xor
push
sub
add
mov
mov
shrb
xchg
xor
cli
xor
inc
jns
dec
mov
cmp
xor
movsl
xor
gs
xchg
mov
sub
inc
arpl
cmpsl
push
inc
push
cmp
adc
mov
sbb
xchg
shrb
push
fcompl
xabort
hlt
push
test
mov
dec
cld
js
push
mov
cmp
cmp
je
push
loopne
cli
mov
push
mov
pop
cs
jo
inc
xor
movsb
or
imul
xorl
lret
push
jl
and
cld
sbb
mov
insb
mov
aas
mov
loop
mov
shl
fidivs
xor
pop
sub
imul
test
mov
dec
mov
das
hlt
hlt
or
push
gs
cmp
andl
lock
xchg
ss
pop
and
fs
jns
loope
cmp
cli
cmpsl
jl
cmp
adc
push
lods
arpl
cmp
pop
flds
and
and
jns
jbe
lods
push
or
adc
ljmp
xor
rcrb
xor
in
mov
push
popf
jg
cmpl
lods
nop
sub
aas
pop
shll
mov
cmp
mov
lret
and
mov
mov
mov
in
sub
inc
pop
pop
cmp
jb
pop
mov
jb
push
data16
push
mov
dec
stc
shrb
outsb
in
fidivrl
shlb
jo
jns
outsb
mov
mov
mov
mov
aas
inc
cld
sub
pop
inc
scas
push
inc
or
push
add
stc
mov
xchg
outsb
xchg
cltd
ret
int
outsb
testb
pop
outsb
push
push
jge
mov
test
add
push
pop
nop
pmaxub
dec
xchg
mov
fs
sub
test
das
xchg
seto
push
add
pushf
sub
mov
test
sti
push
iret
cs
mov
adc
push
bnd
out
outsb
pushf
repnz
mov
dec
add
jecxz
into
daa
cmp
adc
mov
mov
or
or
pop
jbe
sbbl
movd
sub
out
mov
dec
repnz
cmp
add
push
dec
inc
mov
lret
xor
nop
cmp
push
pop
adc
sbb
js
mov
inc
mov
pop
imul
ficompl
mov
sbb
or
jbe
mull
pop
and
push
cmp
fisubrs
cwtl
push
lret
sub
inc
or
dec
pop
ficomps
std
das
inc
sarb
into
js
pop
ja
insb
jbe
add
mov
dec
inc
pushf
cmpsb
jg
add
pop
and
cs
js
inc
js
inc
cmc
sahf
movsl
aas
mov
divb
clc
pop
sbb
cmp
mov
cmp
fldt
ret
dec
ss
adc
test
in
sbb
test
sbb
lock
sbb
imul
xor
mov
cmpb
sahf
in
hlt
pop
sbb
scas
pop
decb
lcall
pop
cmp
xor
xlat
negb
fsubs
push
sar
push
aaa
shrb
push
ret
aas
rcrl
pop
pushf
jbe
sbb
aas
lods
lret
inc
mov
mov
sub
and
xchg
jnp
jge
movsl
clc
pop
push
mov
mov
jp
adc
mov
lret
loopne
stos
fistps
in
lea
sbbb
bound
pop
jbe
mov
rcrl
enter
test
xchg
mov
adc
mov
mov
sub
and
cld
pop
and
aas
insb
or
cs
mov
ss
ror
stos
or
sub
push
jmp
jbe
call
mov
sti
cmp
mov
ss
xor
sti
dec
xor
movsb
lahf
pushf
out
inc
cmp
fs
sbb
outsb
fstps
rcll
or
lea
mov
pusha
mov
mov
mov
xor
xchg
mov
les
dec
aas
neg
ret
mov
jnp
and
lea
pop
fs
mov
cmp
inc
sbb
int
mov
pop
adcb
ficomps
insb
jbe
inc
cs
out
inc
iret
dec
jb
cmpsl
js
or
mov
scas
push
push
push
bound
ret
push
dec
ljmp
and
out
negb
mov
xorl
dec
cmp
dec
lret
js
adc
cltd
ss
outsl
push
mov
xor
scas
lret
push
mov
mov
and
scas
push
outsl
sub
pop
xchg
mov
loope
lock
sub
addr16
cld
mov
mov
pushf
js
jb
stos
mov
cmp
adc
sahf
daa
pop
push
jae
into
cs
mov
pop
inc
mov
test
sbb
das
js
jb
pushl
fs
ret
jmp
cs
pop
leave
jne,pt
fnstcw
push
cmp
add
jns
mov
nop
popf
das
push
mov
mov
int3
dec
lds
out
mov
pop
pop
rcrb
cmpb
inc
mov
inc
mov
insb
add
mov
cmpsl
mov
inc
mov
dec
cmp
lret
sbb
aad
xor
sub
ss
aam
lahf
inc
add
jbe
aam
cltd
int
ss
jp
lret
add
xor
jecxz,pn
bound
dec
ljmp
push
ds
arpl
xchg
pop
jo
xor
imul
jmp
cmp
dec
mov
inc
fcmovbe
fwait
cmpsl
shlb
pop
push
dec
repnz
inc
test
or
adc
inc
dec
test
sbb
leave
and
lahf
mov
or
push
inc
test
dec
adc
push
inc
jg
mov
inc
mov
dec
jno
cmp
dec
inc
decb
cs
cwtl
adc
addr16
dec
lret
sti
sub
sbb
bnd
enter
xor
cmpsl
icebp
scas
push
in
push
repnz
pop
or
jo
addb
jo
je
test
push
ss
fwait
cmp
insb
cmc
sbb
jl
cmp
jae
xor
mov
out
lods
xchg
inc
cld
sbb
jno
push
pop
shrb
je
pop
mov
push
iret
iret
sbb
sbb
pop
cltd
jl
idivb
repnz
pop
pusha
inc
push
out
jns
cmc
xlat
pop
dec
xchg
pop
or
icebp
out
negb
dec
shll
scas
inc
and
test
outsl
test
pop
dec
scas
sbb
inc
and
outsl
jo
cli
mov
out
mov
mov
out
shll
push
and
dec
dec
clc
pop
xor
dec
add
push
push
aas
or
jb
ja
and
stos
test
nop
pop
mov
mov
jp
aas
cs
es
ja
or
mov
lea
ss
push
roll
out
sub
sbb
mov
push
inc
jns
dec
inc
push
mov
xchg
jmp
mov
push
outsl
and
xor
rorl
cmp
cltd
jns
orb
push
push
sahf
pop
push
cld
cltd
mov
cs
xor
jg
call
es
sahf
int
cli
jge
mov
mov
bound
inc
push
inc
push
ret
mov
aaa
and
mov
sar
aas
cli
mov
xlat
jb
inc
pop
hlt
inc
hlt
inc
test
add
sahf
ficoms
pop
cld
cmp
push
shlb
push
xchg
push
xchg
mov
fcmovbe
pop
imul
dec
lods
xor
shll
mov
pop
test
movsl
mov
icebp
lcall
test
and
jle
mov
fwait
push
rolb
inc
cmp
fldcw
ds
jle
sbb
jp
pop
pop
and
or
out
pop
mov
mov
add
xchg
inc
and
xor
dec
out
out
cwtl
aas
push
ss
mov
mov
push
xor
jne
push
aaa
cmp
ss
std
fstpt
mov
loop
pop
test
aas
cmp
mov
push
je
cmp
bound
scas
pop
adc
lcall
pop
xor
pop
bound
and
adc
inc
mov
or
cmp
xchg
xchg
mov
mov
in
cmp
pushf
ss
dec
bound
xor
xor
sbb
push
xor
cmp
cmp
idivb
mov
fsincos
pop
pop
sub
aas
imulb
fisttpl
push
pusha
cs
fdivrs
or
mov
xor
cmp
in
aaa
mov
stc
dec
push
xchg
adc
mov
adc
jl
out
jbe
imul
mov
and
mov
movsl
mov
inc
lcall
pop
and
cmp
or
gs
rcll
aaa
mov
lea
push
jmp
and
out
lret
aaa
mov
cmp
xor
xor
aas
cmp
sbbl
pop
mov
cmp
aad
loop
dec
and
sub
mov
lcall
jbe
std
adc
fs
mov
cmp
xor
ret
dec
mov
mov
in
dec
call
leave
mov
push
xchg
xchg
rolb
std
pusha
or
addr16
je
cmp
andb
add
sbb
movsb
mov
imul
jecxz
cmp
scas
mov
sub
cmpsl
xor
mov
pop
neg
scas
push
fs
add
scas
fcos
dec
iret
cmp
lods
pop
std
xchg
mov
fidivrl
and
xchg
les
pop
cmp
mov
push
mov
or
mov
xor
les
jecxz
sbb
push
inc
push
incl
adc
pop
add
xor
test
mov
xor
xor
pop
sti
jne
sbb
add
ja
cmc
add
push
xor
jl
aad
pop
inc
loop
cmp
sub
lret
mov
rcr
test
mov
into
shrb
bnd
aas
jle
insl
push
sbb
insl
outsb
loope
flds
adc
push
inc
jno
cmp
adc
ss
adc
outsb
leave
mov
or
mov
pop
sbb
pop
imul
push
and
lret
gs
jo
sub
dec
inc
js
mov
adc
adc
dec
fwait
test
dec
or
loope
mov
ljmp
nop
push
pop
mov
mov
xlat
mov
adcl
push
gs
add
insl
xor
mov
cmp
enter
sub
mov
lahf
and
dec
cli
cmp
adc
mov
dec
adc
mov
outsl
pop
stos
les
test
and
ret
incl
pop
out
sti
lahf
ja
cmp
add
sub
push
clc
outsb
jp
lret
sub
xor
dec
ss
aam
jge
inc
movsb
into
xchg
inc
dec
mov
test
pop
inc
cmp
mov
sub
ljmp
fs
cld
das
sahf
cmp
push
adc
shll
pop
jnp
sub
push
or
repnz
sub
out
jle
mov
and
setle
add
adc
sbb
push
prefetch
jo
movsl
sahf
jle
or
or
sti
adc
inc
lret
inc
data16
pop
push
fcmovnu
cmp
mov
aaa
jg
jb
imul
das
push
daa
ss
sahf
movsb
cmp
cli
data16
push
xor
inc
jp
sbb
and
adc
xor
js
outsl
das
popa
and
cli
dec
aaa
inc
xor
aaa
popf
cmp
mulb
das
sbb
or
imul
sbb
dec
das
inc
out
ja
into
mov
add
jbe
outsl
aaa
bound
pusha
sbb
dec
das
inc
and
cli
sub
and
adc
or
add
andb
jo
popa
aaa
pop
xor
dec
bound
pop
mov
imul
push
and
pop
adc
sub
jle
cmp
paddusw
xor
mov
stos
cs
mov
pop
jo
sub
mov
stos
stos
adc
mov
cwtl
sbb
sbb
and
out
cs
adc
and
sub
push
sub
stos
and
sub
roll
cmp
mov
inc
mov
test
mov
stos
sub
mov
sti
xchg
aad
cs
je
or
aaa
mov
ret
mov
add
push
shlb
test
nop
push
mov
or
pop
repz
fwait
xor
xor
and
daa
xor
out
nop
adc
movsb
sub
xchg
dec
fiadds
cmp
sub
push
and
inc
pop
mov
push
or
nop
xchg
cmp
rcrb
cmpb
pop
mov
inc
pop
jno
cld
aaa
cmp
push
jbe
idiv
jbe
inc
imull
inc
sarb
mov
cmp
mov
ss
ds
mov
xor
mov
mov
lods
cs
das
ds
xor
sub
stos
sub
and
cmpsl
sub
and
mov
push
sahf
pop
sbb
sbb
pushf
adc
xchg
sbb
cwtl
adc
adc
push
lret
push
mov
jg
or
mov
xchg
dec
add
shll
adc
push
scas
ss
xor
dec
sub
add
mov
push
mov
popa
xor
test
mov
jp
jns
sub
shlb
lcall
mov
cmp
pop
sbb
nop
movsl
daa
lods
jg
mov
cmp
sbb
xchg
xor
sbb
adc
xchg
pushf
sahf
pop
sub
jg
and
jl
aaa
sahf
xor
mov
pop
jo
xor
inc
xchg
rcrl
sub
or
inc
test
scas
inc
out
or
mov
psraw
adc
push
pushf
or
and
sarl
test
sbb
xor
daa
or
and
push
mov
or
test
mov
xor
and
bound
stc
mov
loop
lahf
rcrb
fucomip
or
pop
mov
or
popf
cmp
mov
jb
icebp
add
xor
inc
add
cmp
out
es
sub
divl
mov
test
xor
popa
lcall
dec
cld
mov
lods
ffreep
xor
jae
mov
lods
aas
imul
pop
stos
jnp
stos
and
sbb
pop
mov
xchg
out
mov
cmp
fidivl
cmp
daa
inc
std
or
in
or
and
jbe
shrl
cmpsb
push
push
inc
addr16
sbb
xor
sbb
fdivl
xor
add
push
mov
pop
je
js
clc
jns
add
daa
and
mov
lods
jmp
mov
xor
daa
adc
dec
bound
jmp
adc
and
pop
push
mov
add
jmp
pop
daa
sub
in
push
repz
inc
movsl
sahf
addr16
xchg
cmpsb
mov
or
test
scas
lahf
stc
add
lock
and
jne
sbb
adc
cmp
mov
js
or
mov
jnp
es
loope
scas
test
xchg
sub
sbb
sbb
or
xchg
pop
rcl
fimull
imul
aaa
test
and
cli
scas
sahf
adc
pusha
cmp
push
and
and
test
xchg
scas
daa
mov
fwait
loopne
mov
push
lods
dec
pop
icebp
push
lahf
adc
aas
pushf
arpl
push
popa
mov
sub
dec
jb
lahf
stos
iret
das
fistpl
enter
xchg
add
mov
lahf
push
mov
inc
jl
sbb
push
jo
and
cs
mov
aas
pop
sub
out
or
xorb
sub
mov
pop
jg
pop
aas
out
and
cs
aas
jecxz
or
cmp
ja
aas
mov
les
cwtl
lods
aas
pop
cmp
xor
hlt
mov
xchg
aas
popa
jle
aaa
popf
pop
cli
xchg
and
stc
jp
cli
jnp
jl
jne
jbe
divb
js
jno
jb
bnd
je
insl
in
outsb
ds
outsl
out
jo
imul
jmp
in
gs
ds
out
call
loop
jecxz
in
fstpl
ficomps
pusha
loopne
fstps
ficompl
pop
fcoml
push
ds
push
xlat
pop
fcoms
push
rclb
push
aam
int
ds
dec
iret
push
rorb
dec
ds
dec
int3
inc
lds
movb
enter
mov
les
icebp
jae
sar
stos
lock
ljmp
sbb
lock
sbb
xchg
adc
sub
pushf
sti
in
mov
xor
lods
push
push
mov
inc
mov
loope
adc
icebp
xchg
pusha
adc
test
lcall
xchg
add
cwtl
or
jp
add
pop
mov
or
add
sbb
push
sbb
jmp
sahf
push
inc
adc
sbb
sbb
and
push
ss
test
imull
and
sbb
jl
or
xchg
and
nop
dec
inc
mov
cmp
xchg
mov
or
and
cmp
xor
cs
cltd
shll
inc
cmp
xor
cwtl
xchg
xchg
ud2
dec
sub
popa
adc
test
mov
jge
std
mov
push
cmp
jbe
repz
lods
lock
adc
cmpsl
daa
and
js
sarl
xchg
jbe
mov
cwtl
inc
mov
cwtl
xor
daa
and
pop
cwtl
sbb
xor
bound
cmp
movsb
fwait
pop
sub
fs
jns
je
sub
xor
mov
cmpl
or
mov
pop
fsubs
mov
outsb
pop
adc
xor
xor
jo
or
and
adc
xor
cmp
sbb
and
in
out
aaa
pushf
aas
push
jp
push
and
outsb
mov
jle
jge
es
icebp
add
xchg
outsb
ss
or
add
xchg
pushf
sub
setl
add
movsb
or
out
lcall
mov
push
scas
cmp
or
nop
stos
bound
pop
ficomps
mov
jle
or
mov
adc
sbb
dec
xor
add
xor
mov
arpl
orb
mov
pop
xor
xor
loope
cltd
cmp
cmp
and
jbe
icebp
addl
imul
cli
js
jb
fldt
fwait
pusha
lcall
insl
ljmp
adc
out
inc
push
in
mov
je
push
dec
xorb
insb
mov
cmp
jo
mov
sub
push
xchg
ja
inc
mov
notl
andb
pop
push
mov
into
xor
fidivs
xchg
orb
mov
mov
sti
mov
push
xchg
push
mov
es
jl
negb
pop
notl
xchg
pop
xchg
xor
outsl
pusha
fsubl
mov
add
lock
push
sub
inc
or
nop
pop
or
fs
adc
push
mov
jge
mov
jl
andl
sbb
push
sub
lret
add
mov
cltd
dec
cltd
add
add
mov
jmp
or
push
mov
or
test
lods
jnp
cs
stos
mov
push
pop
call
pushf
jp
or
pop
push
push
push
fs
push
lahf
fcompl
and
lcall
into
add
lods
add
int
push
mov
mov
inc
and
adc
pop
mov
cmp
sbb
ss
mov
scas
movsl
mov
push
stc
aas
cltd
or
test
mov
and
push
or
sahf
in
pop
mov
test
lahf
mov
add
inc
xchg
mov
inc
lahf
aas
or
jge
cld
pop
orb
mov
xchg
mov
xchg
sub
sbb
and
xor
sbbb
aas
xchg
mov
mov
scas
inc
xchg
xchg
add
push
and
and
pop
jbe
xchg
daa
add
sbb
lcall
jle
inc
sarb
cwtl
add
jbe
xchg
pusha
mov
add
aas
push
mov
mov
sbb
mov
nop
or
mov
inc
fs
pop
in
scas
ds
xchg
sub
inc
jno
pop
insl
sub
mov
inc
sbb
dec
or
inc
orb
sub
push
inc
stos
pop
mov
jge
aas
lcall
push
dec
rcrl
fbstp
mov
xor
jge
add
lds
sbb
jno
dec
xor
mov
pusha
orl
aam
or
push
xor
adc
mov
dec
les
addb
pop
mov
fisttpll
pop
pushf
xor
mov
dec
mov
out
mov
aas
sbb
xchg
adc
push
scas
js
sub
stos
aaa
jo
sti
cs
pop
jl
sahf
adc
sub
mov
iret
and
sub
test
xor
sbb
cmpsl
xor
ud2
pop
pop
sub
xor
lcall
mov
mov
addr16
andb
sti
inc
mov
mov
pop
cs
sub
mov
sbb
das
repz
xchg
frstor
cmp
int3
aas
enter
sub
lahf
xor
mov
test
xor
mov
mov
lock
shll
imul
fidivl
out
jl
adcb
sbb
mov
push
mov
cs
push
call
mov
movsb
sub
ljmp
push
mov
cmp
cmp
sahf
xor
addr16
or
rcl
pop
adc
notb
packssdw
xor
out
adc
iret
loopne
stos
push
adc
jo
xor
push
divb
addr16
sbb
lcall
ja
sarb
ss
xchg
sbb
push
or
scas
sub
or
and
sti
addr16
cld
ss
sub
pusha
rolb
jnp
sub
aaa
push
dec
xchg
or
inc
scas
aas
insb
and
sub
or
xchg
cmp
sub
pushf
jmp
daa
out
iret
je
push
xchg
movsb
fadds
adc
aaa
jb
dec
mov
in
rolb
mov
js
repnz
xchg
mov
push
out
cmp
jl
inc
ja
imul
inc
out
xchg
sahf
stos
shrl
or
xor
in
jbe
cmpsl
adc
inc
mov
cs
mov
sub
imul
mov
push
inc
pop
pop
out
fstpl
and
xor
das
inc
fwait
xor
sbb
and
mov
cmp
pop
mov
aas
cmp
cmp
aas
xor
sahf
jne
lahf
stos
push
sub
xor
cmp
repnz
sbb
mov
cs
push
xor
pop
insb
sarb
daa
es
push
imul
sbb
imulb
stos
xchg
insl
ss
out
jbe
jo
pop
jmp
push
repnz
ja
sbb
inc
cs
add
scas
cmp
xchg
movsb
out
movsl
sti
xor
xor
scas
mov
insb
pop
cmpsl
push
mov
cmp
jecxz
cmp
fnstenv
mov
pop
in
xor
cs
es
lods
cs
mov
divl
test
jne
mov
orl
in
xlat
mov
das
inc
imul
pop
mov
cwtl
pop
and
inc
cmp
jo
xor
jg
js
xor
imul
xor
ss
dec
inc
jg
jge
mov
stc
mov
out
push
stos
test
cmp
mov
call
pop
popa
scas
aad
push
fidivl
rorb
xchg
xor
sub
cmp
or
and
scas
daa
push
xlat
push
ss
dec
ret
jge
jg
sub
pop
push
mov
ss
ljmp
cmp
sub
jle
movsl
scas
cmpsb
cmp
jbe
or
es
and
rcll
inc
in
cmp
push
stos
push
push
adc
sub
cmp
sahf
sub
and
mov
cmp
aaa
cs
test
xor
jl
mov
adc
xor
sub
mov
push
sub
pop
aaa
sub
negb
das
cs
aaa
scas
das
xor
xor
adc
add
sbb
inc
mulb
das
cmp
imul
inc
aas
in
mov
ds
push
sub
push
cmpsl
xor
divb
xor
adc
cs
daa
and
push
aaa
pop
xor
pusha
negb
and
cli
data16
insb
xor
jo
outsb
das
je
js
cli
jle
add
es
aaa
or
push
sbb
negb
push
and
es
sub
xor
das
sub
push
or
cwtl
cmp
mov
dec
xor
sbb
mov
jle
jbe
inc
loope
ss
xchg
lcall
push
inc
sub
pusha
cltd
lea
cmp
cmp
mov
pop
sub
cs
call
mov
sbb
es
movaps
xor
das
push
ss
movsl
xor
cmp
jo
divb
das
mov
aas
jle
fisubs
xor
cli
cs
std
push
push
cmp
pop
shlb
pop
cmp
je
adc
fistps
mov
xor
cmp
jle
jb
push
cs
pop
mov
inc
fstp
mov
sub
push
pop
xlat
adc
ds
loopne
mov
ds
les
mov
lret
xchg
clc
lahf
xor
in
jle
int3
xor
aaa
cmc
aad
loop
pop
and
imul
add
pop
test
jl
lret
cltd
arpl
push
ds
shll
aam
dec
ret
ret
lret
jge
xchg
lahf
out
dec
ds
pop
inc
stos
movsl
cmp
sub
inc
gs
loopne
add
mov
rcll
sbb
clc
ds
nop
pop
fdecstp
xor
mov
out
sbb
jns
add
sbb
mull
sbb
rclb
insl
ja
cmp
out
cs
sbb
jl
mov
push
push
mov
cli
ret
mov
inc
test
jle
jle
sbb
repz
ds
pop
push
pusha
mov
jo
sub
pop
inc
cs
movsb
cmp
out
push
mov
inc
jle
adc
icebp
add
sub
nop
mov
adc
push
mov
mov
insb
loopne
inc
inc
push
imul
mov
cmpsl
movsb
fs
add
fdivs
stc
pop
les
push
mov
jmp
jle
sbb
into
pushf
mov
dec
fcmove
ja
xchg
mov
cmp
jae
jle
mov
mov
out
std
jle
scas
pop
dec
fs
sti
add
ds
xchg
fidivrs
xchg
mov
aaa
jecxz
jle
inc
movsl
cld
cmp
ret
and
xor
lret
test
inc
test
push
adc
push
aam
cwtl
sbb
scas
sbb
movsb
jb
and
lahf
cmpsb
pop
insb
and
scas
cli
and
icebp
bound
shll
mov
mov
mov
pop
ds
shll
xor
scas
jle
inc
lcall
pop
pop
xchg
push
and
jg
outsl
call
mov
jmp
loope
mov
ds
lods
and
xchg
xchg
gs
orl
pop
dec
pop
test
ret
dec
pop
sub
ds
mulb
mov
les
in
js
test
aas
push
pop
inc
aam
push
adc
pop
jb
and
dec
out
xor
imul
xor
jbe
in
inc
das
sbb
inc
cmp
adc
xchg
add
jmp
dec
movsb
das
mov
pop
andl
daa
or
popa
and
mov
cs
add
xchg
adc
nop
bound
es
sbb
in
and
addr16
adc
push
mov
es
adc
push
mov
mov
push
lods
es
jle
out
xor
xchg
xor
or
pop
cld
cmp
pop
stc
mov
data16
scas
jne
mov
push
dec
and
adc
movsl
call
insb
out
sub
xor
xchg
imul
in
lea
pop
jae
movsb
fiaddl
insl
jl
mov
mov
dec
xchg
iret
cmc
dec
fists
out
pop
out
pop
mov
dec
xor
xchg
inc
incb
jb
arpl
cmpsl
push
xor
jmp
iret
aad
mov
push
outsb
aas
and
icebp
inc
outsl
dec
lret
inc
mov
xchg
mov
fistpl
and
aad
mov
xchg
cmc
int
mov
jl
icebp
filds
shlb
push
jns
push
dec
dec
inc
inc
dec
inc
ret
inc
push
cmp
dec
ss
cmp
inc
xor
cs
xor
sub
es
sub
and
push
inc
and
sbb
push
inc
sbb
mov
inc
add
cld
inc
js
je
out
inc
pop
inc
iret
inc
movb
mov
xor
add
jmp
adc
pop
dec
leave
sub
pop
push
mov
std
es
xchg
dec
mov
daa
mov
negb
sub
test
push
pop
dec
pop
dec
mov
sub
and
movsb
sti
sbb
lds
aam
iret
aad
lods
movsb
sbb
aas
and
aad
mov
xchg
sub
sub
and
and
push
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
fbld
push
not
out
inc
out
pop
mov
dec
jle
testl
and
cmp
inc
lods
and
xchg
dec
test
sti
aad
aad
aad
fistpll
out
popf
out
filds
clc
dec
call
ljmp
lret
dec
inc
pusha
in
mov
xlat
stos
sar
lcall
call
testl
add
xor
cmpsl
ret
stc
mov
cltd
push
mov
jg
test
dec
jp
gs
xor
push
stc
and
sbbl
lret
cmc
repnz
inc
ret
lret
push
ret
mov
jl
ja
pusha
inc
mov
pop
scas
or
add
lds
mov
insl
in
sub
sub
pop
xor
adc
bound
stos
negl
push
xor
adc
bound
shll
pushf
ja
sbbl
in
ret
pop
ret
leave
ret
ret
and
cmp
xor
scas
xor
add
cwtl
jge
adc
jae
out
jge
jge
jge
xor
movsb
sbb
pop
mov
insl
jg
insl
in
popa
lods
push
sti
adc
jecxz
mov
lods
fidivl
into
cltd
lret
and
inc
addl
inc
outsl
inc
imul
inc
in
pusha
inc
pop
inc
push
inc
rolb
dec
inc
lds
stos
jo
push
jno
jne
rclb
mov
xchg
cs
mov
sub
sbb
cwtl
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
fbstp
mov
pop
fistpll
loope
pop
ficoml
sub
adc
jbe
inc
outsl
inc
ljmp
push
mov
inc
nop
dec
test
push
jae
jge
jge
jge
jge
jge
jge
jge
xor
sub
insl
add
je
sahf
hlt
lcall
in
dec
lods
enter
and
adc
int3
or
inc
lcall
sub
in
jecxz
pop
in
ret
mov
imul
and
ja
add
add
jge
jge
jge
jge
jge
jge
jge
jge
jge
xchg
and
and
fs
test
jmp
inc
dec
jbe
dec
or
ja
sub
out
dec
setge
xor
movsl
jne
aad
mov
xchg
jns
jl
jb
leave
pop
into
mov
push
and
sub
lds
add
add
jge
xor
test
stc
cmp
movsl
test
add
pop
lea
call
out
or
mov
std
add
add
add
test
xchg
mov
fisubl
push
ficoms
sub
push
xchg
adc
and
movsl
jmp
mov
imul
dec
inc
cmp
sahf
push
add
dec
ret
mov
sbb
xor
or
test
in
arpl
cmp
sub
jmp
test
lock
sti
test
push
mov
hlt
fstps
stc
and
and
es
movsb
pop
aad
dec
add
add
add
pop
inc
or
add
inc
addb
jge
jge
jge
jge
jge
jge
xchg
inc
jg
aaa
add
decl
jl
jbe
out
rol
std
push
xchg
push
pop
mov
xor
adc
dec
sub
les
push
lods
jle
sub
in
jl
lods
cmpsb
mov
mov
xor
call
dec
xor
sub
scas
mov
scas
sub
xor
hlt
outsl
or
dec
pop
adc
pop
fisttpl
push
xor
movsb
scas
hlt
test
sbb
popf
mov
repz
imul
aam
iret
popf
inc
popf
popf
ret
xor
aaa
jnp
pop
jo
lods
sahf
and
jge
xchg
mov
push
fs
jmp
testb
outsb
das
or
daa
hlt
lret
mov
jbe
add
jb
jmp
fs
xor
pop
sub
cltd
add
xor
mov
and
mov
xchg
push
pushl
and
ja
push
inc
into
lret
lret
cltd
mov
xor
and
push
xor
cmc
das
and
movsb
mov
fcmovnb
mov
mov
push
lret
adcb
fdivl
pop
xor
add
add
sub
cmpsl
sub
ss
push
and
mul
pusha
filds
test
push
pop
lret
dec
pop
mov
dec
xchg
dec
jb
fldenv
sub
jp
pop
add
jge
sbb
mov
cli
into
je
jnp
pop
popf
dec
xor
jb
out
push
mov
sub
sti
mov
out
and
in
enter
sahf
ja
jle
fcomip
xlat
insl
iret
out
dec
scas
scas
outsl
jmp
cmp
lret
out
sbb
mov
shll
dec
fisubrs
cmpsb
pop
std
or
xor
daa
xchg
hlt
jnp
mov
pop
test
fisubl
xor
pop
dec
fisttpl
mov
jp
fs
add
mov
and
push
dec
xor
adc
adc
inc
fmul
adc
fisubl
sbb
jns
xor
jo
and
movsb
lcall
or
repz
pop
pop
push
jnp
inc
aaa
adc
sbb
and
sahf
ds
imul
imul
cmp
hlt
lds
mov
insl
cs
xchg
imul
jb
je
outsb
in
jo
push
insb
xchg
and
mov
cmp
sbb
incb
mov
push
cmc
aad
aad
aad
fildll
and
push
fbld
xlat
sbb
lret
or
inc
push
insb
arpl
cmp
cmp
scas
mov
insl
lcall
in
sub
in
clc
clc
pushw
sub
jo
addr16
xchg
pop
cmc
rcl
lret
aad
push
xor
cli
scas
jmp
fstps
push
adc
pusha
call
mov
adc
dec
push
mov
mov
and
add
and
mov
stc
cmp
movsb
nop
or
dec
or
dec
jge
xorb
jne
ja
icebp
adc
and
in
jecxz
fucomp
push
bound
mov
rcrb
cmpsb
mov
shll
mov
jae
pop
movsb
jno
sbb
fcompl
mov
and
xor
jne
fcmovu
into
add
sub
test
hlt
pop
aaa
gs
push
mov
shlb
test
pusha
push
aaa
jne
sub
out
xlat
fld
fcmovnb
aad
xlat
rol
push
aaa
insb
ss
es
dec
mov
subb
jle
mov
popf
xor
sub
js
jne
adc
push
jne
aad
mov
stos
pop
mov
dec
jl
cmp
and
hlt
add
js
and
push
aad
push
mov
jne
aad
mov
xchg
js
data16
inc
idivl
mull
outsl
sbb
pop
push
lret
retw
inc
ret
xor
add
cmp
pop
inc
push
inc
inc
jno
xor
hlt
and
adc
push
dec
dec
jbe
pop
jle
inc
cmpsl
inc
cmp
sub
data16
sbb
and
add
add
sahf
jle
and
popf
jo
push
insb
test
leave
fs
pop
push
pusha
dec
arpl
inc
push
inc
push
inc
dec
inc
dec
inc
inc
inc
inc
test
xor
xor
sub
in
aas
and
sbb
adc
lds
jl
xor
aad
mov
xchg
outsb
cmc
jo
push
popa
mov
shlb
pusha
pop
pop
push
inc
pop
lcall
mov
leave
dec
push
inc
imul
sub
movsb
sbb
cs
xor
es
sti
and
dec
push
leave
sbb
adc
adc
push
lret
mov
leave
push
push
or
push
mov
mov
lcall
and
cmp
cmp
cmp
mov
pop
inc
mov
out
jecxz
pop
daa
rclb
jne,pn
andb
push
inc
push
dec
mov
pop
and
rcrb
sahf
subl
incb
fistl
call
dec
lock
fs
out
out
insb
mov
pop
mov
jecxz,pn
push
out
pop
leave
loop
push
inc
fnsave
aad
imull
sbb
loope
push
in
pusha
pop
sarl
in
and
addr16
jmp
fld
lret
aad
pop
push
xorb
addr16
cs
loopne
jmp
pop
aaa
mov
enter
xor
rcl
imul
test
mov
dec
movsl
pop
aas
lahf
cmp
add
hlt
cmp
and
jmp
sub
dec
and
xchg
push
pop
sbb
dec
clc
sti
leave
arpl
repnz
sti
or
decl
cli
push
enter
jl
and
mov
scas
push
and
movsb
cmpsl
adc
repz
mov
lcall
nop
jae
mov
sbbl
pop
push
sbb
cmpl
and
popf
sbb
inc
cmp
sub
lds
iret
mov
mov
cs
cmpsl
lods
pop
and
mov
mov
sarb
lock
sbb
jge
push
lcall
add
loop
and
jmp
xchg
push
inc
and
mov
sbb
add
addr16
push
mov
push
push
inc
das
das
or
push
push
xchg
pop
sahf
cmp
sub
mov
roll
add
loop
lds
pop
sbb
lret
mov
cs
xchg
sbb
adcb
mov
adc
sub
addl
dec
pop
ret
or
sub
mov
adc
sbb
pop
and
popf
sub
and
je
inc
call
fimull
xchg
ss
movsl
sub
es
mov
and
fwait
jns
mov
mov
push
cmpsl
mov
iret
push
and
and
outsb
cmp
and
dec
pop
jnp
insl
lods
std
mov
push
fwait
das
pop
mov
movl
sbb
call
sahf
mov
pop
lahf
js
xchg
dec
jp
jl
dec
insb
je
jne
xlat
stos
lahf
mov
movsb
dec
pop
movsl
push
sahf
ficoml
test
daa
pop
push
xor
jg
mov
mov
sbb
lahf
scas
adc
push
test
sbb
adc
sbb
push
test
inc
adc
jo,pn
in
dec
add
cmpsb
or
pop
xor
xor
xor
cmp
imul
cmp
notl
mov
testl
aaa
dec
xor
addl
sub
jp
sub
fdivrl
and
out
add
sbb
xchg
mov
add
sub
push
pop
mov
cmp
or
push
sub
imul
mov
xor
rolb
mov
repz
jo
add
subl
fst
sbbb
ja
andl
adc
cltd
lds
adc
aam
fabs
sbb
sbb
cs
mov
test
aas
push
or
sbbb
ljmp
cmpsl
xor
es
test
mov
sbb
add
or
pop
cmc
sahf
mov
sbb
ljmp
adc
add
sbb
stos
xor
add
add
sub
xor
and
xchg
pushf
scas
add
pop
sbb
add
push
sub
int3
setnp
dec
pushf
lods
scas
xchg
sbb
sbb
cmp
ja
or
xchg
cs
pop
xchg
xchg
scas
lock
nop
daa
adc
das
or
jae
jp
jecxz
pop
das
jae
push
pusha
dec
mov
and
pop
fwait
push
xchg
adc
jb
iret
jge
sub
cs
shl
or
arpl
mov
inc
into
sbb
scas
sahf
nop
pop
or
fstps
lock
sub
mov
sbb
lahf
and
cmpsb
pop
mov
or
into
movsb
push
sbb
xchg
jnp
mov
arpl
js
movsb
mov
sbb
jp
mov
jo
data16
adc
int
adc
adc
stos
imul
into
fsubrs
out
negb
and
or
movsl
sub
sbb
stos
sub
jnp
mov
sbb
lahf
sbb
int3
and
mov
movsb
outsb
or
xchg
xor
jle
movsl
cmpsl
cmpsl
push
or
pop
cmp
inc
cmpsl
cmp
or
lcall
xor
je
and
aas
cmp
dec
clc
lods
and
jne
insl
push
pop
and
adc
jmp
lahf
and
ljmp
sbb
jbe
dec
ljmp
mov
jp
and
jl
test
mov
hlt
leave
in
lds
inc
aaa
pop
incb
dec
inc
cmc
fsts
imul
and
int3
lods
lods
or
or
scas
xor
stos
mov
int3
addl
mov
and
das
xlat
jne
xor
dec
js
and
int
mov
push
shll
call
and
jbe
xchg
xorb
movsl
and
push
popf
lea
test
lret
xchg
mov
xchg
ret
pop
cld
aas
xor
add
cmpsb
sub
sysret
add
fwait
mov
daa
and
dec
cmp
xchg
jnp
jo
fstpl
das
sbb
sar
in
lods
lret
adc
xchg
jmp
jmp
sbb
fs
mulb
cmp
mov
aas
sti
rol
mov
dec
inc
mov
inc
push
sub
jecxz
ljmp
cs
pop
loopne
ss
das
and
and
and
or
repz
imul
stc
lds
sub
test
adc
divb
xor
jl
xor
arpl
imul
and
test
cmp
cli
adc
scas
and
mov
mov
pop
es
sbb
int
and
daa
cmp
jl
mov
and
xor
xchg
push
fwait
jno
mov
sbb
xchg
jbe
dec
inc
mov
lods
sti
es
cmp
andl
pop
es
aaa
pop
je
sub
or
and
das
adc
xor
in
pop
push
sti
jmp
sbb
xchg
sti
adc
xchg
cmp
or
push
shrb
and
adc
cmp
jbe
adc
pop
mov
pop
adcb
or
dec
icebp
aaa
fcomp
sahf
mov
aam
sbb
mov
aas
mov
sahf
xlat
and
push
subl
jnp
sub
mov
and
stos
mov
mov
and
adc
xchg
fstl
loopne
hlt
stos
clc
and
ljmp
call
mov
push
vpxor
pop
ret
std
aas
imull
popa
mov
and
or
or
mov
jne
subl
pusha
xor
movsl
sbb
push
mov
subb
mov
sbb
mov
repnz
and
and
js
mov
mov
push
shll
push
shrb
cmpsl
cs
insb
xchg
aaa
cmp
mov
nop
negl
stos
and
xchg
scas
and
adc
mov
cld
and
inc
xlat
pop
sub
fisubrl
fisubrl
fnstenv
dec
bound
not
jae
bound
adc
lret
push
sbbl
xchg
pop
push
mov
clc
mov
push
imulb
in
or
sbb
fidivrl
iret
push
aaa
mov
sbb
and
dec
popf
xor
dec
flds
andb
jo
ja
jae,pn
mov
add
mov
rorl
popa
add
and
sub
inc
cs
test
push
dec
add
pop
mov
and
dec
mov
cmp
sub
cmpsb
lods
imul
mov
out
fstps
aam
adc
rorb
lock
or
push
cld
lock
mov
pop
movsl
das
nop
or
cld
scas
dec
nop
sub
add
sbb
xchg
push
rorl
push
sbb
xor
into
xchg
inc
cmpsb
jmp
jg
mov
mov
sbb
and
cli
jns
add
in
inc
ja
and
adc
and
loop
sbb
lods
out
cmpsb
mov
mov
dec
lea
mov
ljmp
and
adc
jecxz
testl
xchg
xor
jo
mov
aad
std
push
xchg
test
jp
mov
fwait
movsl
or
pop
push
cltd
fwait
pop
push
out
jbe
sahf
cli
cmpsl
cmp
lods
scas
test
cmpsl
xor
or
daa
sbb
fwait
xchg
and
divb
insb
in
mov
xchg
leave
jno
and
sgdtl
push
rcll
cs
cmpsb
insb
push
pop
scas
dec
test
cmc
in
test
dec
jae
aad
mov
or
xor
mov
or
out
arpl
in
cmp
pop
inc
roll
out
cmp
mov
adc
xchg
and
popf
mov
and
outsl
push
xchg
out
pushf
adc
fsubp
cmpsl
mov
pusha
sub
cmp
and
shll
jecxz
outsl
and
syscall
push
pop
dec
aad
comiss
imul
loopne
pop
inc
arpl
imull
pop
sbb
xor
push
mov
cmp
dec
mov
fsts
push
sub
cmp
jo
mov
nop
sbb
jnp,pn
push
in
clc
mov
mov
lods
sub
dec
pop
daa
ja
lock
push
mov
in
adc
rorl
jbe
shll
push
shll
inc
ljmp
mov
fimuls
loopne
cmpsl
repnz
in
and
shlb
inc
push
ret
movsb
cwtl
ss
pop
mov
and
cmp
cwtl
es
cmp
pop
mov
xor
xchg
in
add
or
daa
pop
hlt
pop
cmpsl
sub
jns
sub
mov
out
mov
adc
mov
xor
add
test
jno
cmp
fmull
shrl
xchg
fmuls
addr16
test
cmp
sub
ret
leave
lock
andl
pop
mov
mov
imul
in
dec
push
mov
ret
jecxz
movsl
in
mov
leave
xchg
cmp
hlt
and
dec
dec
cmpsl
sbb
nop
test
inc
jno
movsl
sbb
movsl
xchg
inc
stos
shlb
lahf
sti
movsl
add
daa
mov
and
pop
mov
or
push
mov
cmp
testl
repz
sbb
or
ljmp
mov
xchg
or
push
or
pop
xchg
or
and
sti
jge
imul
xor
insl
mov
scas
repnz
es
imul
adc
inc
hlt
jecxz
mov
jne
js
int
mov
jg
out
ljmp
call
xchg
inc
in
sub
ljmp
fwait
mov
sbb
sub
enter
and
or
jbe
in
add
and
movsb
je
sub
mov
loope
pop
mov
or
cmp
xlat
cld
jmp
test
lcall
jmp
pop
repnz
outsl
add
mov
scas
ss
xchg
push
ja
cmpsb
pop
loopne
jb
hlt
mov
je
inc
mov
push
hlt
in
or
imul
xlat
mov
lret
lret
shl
shll
call
push
jns
shlb
pop
icebp
lret
xchg
add
jo
and
or
lret
cmp
mov
movsl
lods
pop
inc
pop
and
lock
jae
rol
fcoml
and
push
push
sub
out
dec
fldln2
jo
fs
shr
sarl
hlt
enter
jno
xchg
sub
inc
call
int
testl
xchg
and
fwait
lock
mov
xchg
or
mov
mov
clc
leave
aaa
test
daa
sbbl
add
scas
hlt
pushf
mov
shrb
mov
dec
dec
call
adcb
imul
lahf
push
xchg
out
xchg
push
ret
inc
jb
call
aaa
mov
inc
sbb
xor
cmp
or
das
cli
das
and
pop
lcall
cltd
xchg
mov
sub
and
and
mov
out
sbb
xchg
pop
jge
jmp
xchg
hlt
mov
lret
fabs
cs
push
jg
arpl
or
xchg
mov
add
inc
cmc
dec
inc
subl
lock
flds
xchg
mov
cmp
mov
out
mov
pusha
fdivl
insb
aas
inc
mov
in
hlt
mov
popa
lcall
xchg
push
sub
andl
hlt
xchg
cmpsl
mov
in
pop
dec
cmp
test
sub
add
add
fcoms
push
dec
dec
test
ja
push
xlat
and
sbb
mov
mov
stos
or
mull
lea
std
scas
mov
fisubl
int3
push
cwtl
lock
push
inc
xchg
push
sub
outsl
les
adc
adc
or
inc
add
call
scas
push
sub
scas
inc
mov
mov
sub
cltd
pop
lahf
dec
test
jb
test
mov
or
push
add
scas
and
and
outsl
lret
fwait
addr16
push
push
push
lods
cs
cmpsb
les
push
fstpl
ja
push
inc
push
push
bound
fisttpll
inc
js
jo
test
popf
and
hlt
and
je
mov
lds
push
sbb
push
inc
cmp
into
dec
ss
shll
jmp
and
fnsave
push
mov
jno
add
sub
jmp
mov
and
or
fcomps
cmp
mul
jge
jle
test
sbb
inc
lret
loopne
mov
xchg
aaa
mov
cmpsl
leave
out
xor
je
add
push
sbb
jmp
mov
ret
sbb
cmpsl
xchg
aaa
icebp
test
insb
push
enter
xchg
rclb
outsl
mov
push
loopne
jne
inc
or
cwtl
leave
lea
pushf
sub
pop
sbb
jecxz
sbb
inc
and
sarl
push
xchg
pop
push
adc
testl
inc
hlt
loop
add
dec
jmp
mov
jae
fwait
inc
hlt
imull
dec
push
in
sub
mov
aaa
sahf
into
add
sar
mov
adc
sbb
dec
xlat
insb
addr16
and
addr16
out
test
andl
pop
pop
fwait
repnz
test
sub
mov
or
aas
and
xchg
or
fcoms
and
imul
mov
pop
jne
ret
dec
push
lds
sbb
clts
xor
push
aaa
popf
movsl
in
and
dec
adc
mov
fwait
cltd
movb
cwtl
or
or
inc
lcall
sbb
xor
es
pop
xchg
and
adc
pop
mov
jb
or
inc
sahf
sbb
adc
flds
cwtl
adc
mov
ds
add
mov
stos
js
stc
mov
shlb
adc
and
popf
add
stc
or
mov
mov
xor
pop
and
and
push
out
xchg
mov
movups
ret
and
add
dec
xchg
sbb
dec
and
sahf
fwait
cmp
push
lcall
test
mov
cltd
push
insl
pop
lahf
sbb
lret
cmp
pop
orl
fwait
test
and
adc
mov
mov
mov
sahf
icebp
cmpsb
mov
xor
jle
xchg
stos
sbb
pop
adcb
sbb
mov
pushf
fwait
test
add
mov
mov
xchg
insl
stos
push
sbbb
pushf
adc
out
cs
or
sbb
add
pop
or
adc
add
sbb
es
sbb
dec
nop
mov
daa
push
cmc
xchg
push
mov
adc
jmp
cmpsl
dec
test
xchg
sbb
xchg
out
lret
mov
add
es
or
sbb
mov
inc
and
pushf
add
push
mov
mov
or
aaa
mov
jle
nop
pop
adc
sbb
sbb
jbe
sbbl
or
xchg
scas
mov
or
ret
jbe
outsb
popl
xor
cltd
push
or
xor
mov
mov
xchg
out
cmp
lcall
adc
mov
fmuls
push
outsl
jle
and
mov
xchg
setbe
or
adc
xor
es
cmpsl
stc
scas
adc
push
and
movsl
movsb
adcb
std
adc
outsb
add
sbb
xchg
lret
es
std
pop
rclb
movsl
sbb
cmc
pop
cmpsb
pop
lcall
adc
pop
aas
pop
xor
sbb
xchg
and
sbb
sbb
xchg
es
sub
inc
mov
mov
in
hlt
or
fwait
add
mov
pop
sbb
push
lahf
fisubrl
mov
xchg
adc
mov
adc
cwtl
add
xchg
sahf
andb
xchg
mov
cmp
arpl
sbb
adc
cwtl
sbb
pop
sub
pushf
cmp
add
xor
mov
lcall
test
mov
and
andb
xchg
subb
addr16
lahf
fcompl
or
or
adcb
pushf
adc
stos
fsubs
push
sub
lcall
sahf
jb
out
pop
or
and
mov
and
aas
add
or
cmpsl
sbb
sub
dec
add
fwait
pop
cmpsb
cwtl
and
sub
sahf
cmpsb
aaa
mov
and
rorl
sarb
jle
movsl
andl
add
mov
jge
lods
mov
and
xchg
dec
xor
dec
jp
sbb
mov
sahf
pop
rorl
sbb
imul
pop
pop
mov
in
adc
pushf
loope
push
sbb
add
adc
and
lahf
pop
mov
pop
fcoml
and
or
stos
fcomps
and
pushf
cld
mov
xchg
adc
test
or
push
add
andl
repnz
inc
adc
leave
pop
jb
sahf
adc
push
repz
mov
daa
add
cmp
adc
and
pop
arpl
insb
nop
fnsave
es
cmpsl
add
push
adc
das
pushl
gs
lahf
aad
orl
rcll
pop
pop
add
outsl
mov
lock
push
jle
cwtl
or
add
mov
sbb
mov
push
adc
xchg
push
data16
pushf
jb
adc
mov
xchg
fwait
sbb
es
stos
xchg
mov
add
xchg
addb
decb
je
or
add
mov
or
out
xor
pop
jp
sbb
dec
lahf
and
dec
sbb
daa
adc
fwait
cmpsl
sbb
leave
pop
movsl
fsubs
push
popl
test
cwtl
je
xor
cmc
rcrb
js
inc
xchg
add
repz
cmpsb
sbb
cmp
es
or
mov
jmp
mov
adc
xchg
es
sbb
add
xor
je
add
adc
daa
and
mov
or
xchg
jge
fwait
cwtl
mov
mov
mov
lods
pop
pop
xchg
xchg
mov
push
mov
sahf
add
and
test
and
xchg
mov
cmc
add
lcall
push
add
fistpll
inc
or
pop
xchg
cli
sub
outsb
popf
adcb
cmp
test
cmpsb
daa
orb
mov
push
loope
sahf
fwait
xchg
stmxcsr
negl
xchg
or
popl
aam
je
mov
xchg
jbe
jbe
inc
mov
shl
adc
push
stos
loopne
or
jae
and
jb
adc
sbb
sbb
stos
jle
cltd
mov
mov
aaa
sbb
or
xchg
add
push
mov
lahf
cwtl
mov
pop
incb
sbb
lahf
loope
cltd
and
cwtl
cmp
fwait
cltd
stos
adc
inc
sbb
and
sub
sbb
fstps
je
or
sbb
mov
es
nop
pop
xor
add
xchg
test
rcrb
mov
jle
pop
or
or
jnp
mov
es
mov
aas
unpckhps
fwait
cmpsb
ficoms
adc
and
nopl
pop
or
test
ja
imul
imul
add
lds
mov
xchg
outsb
sub
jge
mov
lcall
sbb
sahf
pop
jbe
adc
push
xchg
mov
sbb
mov
mov
xchg
inc
pop
cmp
test
cmc
push
fs
xor
insb
sbb
ljmp
mov
fs
sbb
adc
popf
adc
cmpb
or
sahf
cs
inc
xchg
mov
pop
inc
add
xchg
daa
mov
imul
or
int
adc
lods
loope
xchg
add
test
xchg
movsl
inc
sub
xor
mov
ret
push
mov
xchg
out
aaa
push
shlb
jle
sbb
xchg
es
push
lahf
fsubrs
cmpsb
mov
and
cltd
cmp
and
lahf
dec
add
mov
push
nop
data16
xor
xchg
sbb
leave
inc
add
xchg
sbb
mov
mov
xchg
fnstsw
add
movsl
fwait
pop
pop
add
push
jle
lcall
cmp
push
adc
cs
or
lret
push
adc
test
scas
xchg
sti
adc
lret
inc
mov
bound
mov
add
adc
sub
and
push
mov
xor
adc
pop
xlat
stos
lock
mov
pop
je
sarb
pop
jb
xor
adc
sub
mov
lcall
dec
stos
xchg
cmpsb
nop
test
mov
ss
inc
push
es
mov
cltd
movsl
push
flds
cld
sahf
pop
es
pop
and
and
fwait
adc
inc
push
daa
cmpsl
and
add
punpckhbw
push
leavew
sbb
and
cmpsb
push
daa
aaa
push
aaa
pop
ret
outsb
cli
sbb
sub
leave
lods
mov
pop
sub
push
mov
push
dec
adc
popf
pop
add
movsl
xchg
adc
mov
imul
lahf
rcrl
push
in
mov
add
sub
cwtl
stos
mov
add
xchg
mov
inc
ljmp
add
dec
aad
pushf
mov
ret
jne
fildl
jmp
or
pop
mov
pop
cmpl
push
push
je
adc
sbb
out
xchg
and
and
mov
add
cmpsl
or
push
nopl
and
clc
lcall
mov
ja
adc
jne
xchg
sub
mov
sbb
rcrl
rorb
xor
int
pushf
adc
adc
add
mov
stos
data16
add
adc
std
mov
mov
mov
push
adc
sbb
and
and
mov
mov
jnp
pop
adc
add
sbb
and
decb
sbb
ds
xchg
daa
xchg
xchg
push
ljmp
mov
lahf
xchg
adc
lds
data16
xchg
xor
out
pop
sbb
pop
aas
pop
adc
data16
test
jnp
in
and
loop
aas
fstl
lds
test
leave
and
adcb
sbb
jne
sub
rclb
xchg
or
sbb
adc
pop
xor
or
fidivrs
stos
pop
mov
xchg
pop
sbb
mov
sub
lahf
push
add
in
test
sub
pop
xor
mov
mov
sub
or
push
adc
shll
add
xchg
inc
xchg
inc
adc
push
sbb
addr16
sahf
adc
mov
lahf
mov
es
inc
popl
cmpsl
test
daa
xchg
loopne
aas
lea
sbb
stos
pop
mov
sbb
push
pop
push
popa
xor
cmpsb
outsb
mov
int
mov
jl
xor
and
xchg
out
neg
mov
push
sbb
and
adc
xchg
adc
pop
sub
lahf
shll
sbbl
sbb
jle
and
xchg
and
adc
push
and
pop
mov
mov
sbb
add
cmp
push
dec
xchg
pop
movsb
mov
es
cwtl
outsb
je
adc
sub
or
adc
mov
jo
fsubs
loop
mov
sbb
adc
mov
aas
aad
xchg
xchg
mov
adc
mov
adc
adc
sub
or
add
sub
sahf
stos
mov
rorb
cltd
cmpsb
mulb
sbb
mov
mov
test
and
push
add
push
pop
rclb
jge
pop
or
mov
sti
aad
jle
or
mov
adc
pop
sahf
xchg
pop
mov
es
nop
push
scas
outsb
movsl
enter
imul
jmp
and
adc
es
out
or
sbb
test
movsb
mov
loopne
sbb
push
xchg
inc
xchg
mov
fwait
pop
dec
adc
jb
cmp
or
es
cmp
adc
sbb
sbb
or
sbb
jmp
xchg
jbe
mov
pop
mov
sahf
pop
daa
pop
cmpsl
fisubrs
pop
outsl
or
mov
or
or
mov
cmpsb
lods
add
cltd
xor
or
lahf
fwait
sub
or
test
mov
sahf
dec
push
into
and
push
cmp
or
lcall
adc
loope
mov
dec
mov
pushf
lcall
test
sub
sbb
daa
mov
jae
sbb
dec
jg
fists
imul
nop
mov
push
movsl
insl
fwait
mov
lods
push
jle
cmpsb
mov
stos
push
pop
lahf
sbb
sbb
pop
add
andl
push
dec
pop
or
repnz
inc
adc
or
cmc
inc
or
mov
mov
mov
sub
test
xchg
mov
jmp
scas
sub
and
and
add
xor
test
push
cmpsl
add
and
adc
out
mov
mov
inc
fisubrl
pop
mov
jns
sbb
iret
pop
aam
push
das
xchg
lcall
xor
movhps
adc
xchg
enter
rcrb
cltd
cmpsl
push
xorb
fwait
fwait
mov
pop
and
orb
lcall
push
mov
add
sbb
sub
subl
push
pop
es
stc
add
lods
sbb
or
xchg
jge
xchg
xchg
sub
pop
stos
pop
xor
cwtl
pusha
xchg
pop
rclb
and
inc
sbb
add
jg
mov
sbb
adc
jb
enter
xchg
mov
mov
push
ds
mov
lahf
adc
add
jno
nop
jg
or
xor
fists
jle
and
inc
repnz
cld
push
pop
sbb
push
mov
insb
jle
hlt
rclb
push
daa
add
dec
sbb
test
out
stc
fmull
mov
lds
add
push
mov
sbb
xchg
sahf
jl
pop
sbb
pop
nop
dec
rorb
inc
or
xor
loop
or
adc
dec
jle
xchg
sbb
mov
fistpl
add
xchg
push
loopne
mov
dec
stos
nop
mov
add
adc
nop
andb
sbb
dec
data16
sub
lahf
mov
repz
outsb
sbb
daa
or
adc
sbb
je
mov
and
add
pushf
ds
sahf
cltd
mov
int3
leave
pusha
pop
pusha
xchg
and
test
sub
notl
lds
adc
loopne
lds
sahf
adc
dec
xchg
aaa
adc
jg
and
or
lret
das
cwtl
pop
add
or
xchg
rcrb
mov
fwait
sbb
push
or
xchg
and
test
pop
jmp
sbb
pop
xor
fldl
add
push
aad
pop
add
subb
pop
add
cwtl
dec
jge
sbbl
mov
and
cmc
mov
push
sub
add
xor
sbb
adc
pop
cmpsb
xchg
test
jb
outsb
add
xchg
sbb
sbb
fs
mov
and
pushf
adc
xor
fwait
mov
push
ret
jle
orl
lret
cmpsb
pop
fildl
push
fwait
test
jl
or
adc
or
add
xchg
pop
aas
mov
mov
cmpsl
jns
hlt
clc
jle
movsl
xchg
and
icebp
push
xchg
sbb
xchg
cltd
cmpsl
and
and
add
cmp
es
xchg
mov
cmp
pop
test
test
shll
adc
add
mov
adc
add
movsl
mov
std
pop
mov
xchg
mov
cltd
sub
xchg
or
mov
pop
inc
push
leave
inc
int
shr
mov
dec
daa
mov
cmpsl
adc
push
lcall
pop
and
pusha
cwtl
mov
xchg
inc
sub
ja
lahf
inc
dec
fidivs
leave
push
dec
push
sahf
cmpsl
rcrb
or
dec
xor
adc
sbbl
pop
ds
or
lahf
mov
mov
jbe
xor
loop
cmpsl
pop
es
adc
sbb
dec
pushaw
sub
and
fwait
xlat
sub
jecxz
xchg
mov
cwtl
adc
or
es
jg
adc
xchg
and
add
into
jg
add
push
sbb
jbe
mov
pop
push
adc
inc
or
and
setp
nop
adc
mov
sbb
nop
sbb
push
movsl
pushf
pop
mov
sbb
xor
test
ficomps
adc
fidivrs
or
inc
mov
sbb
push
dec
push
daa
sub
add
mov
out
jle
adc
ret
mov
push
mov
mov
add
xor
and
push
testb
outsb
xchg
mov
cli
push
inc
add
dec
insb
or
adcb
xchg
pop
cmpsl
mov
data16
sbb
or
sub
data16
or
sbb
sbb
adc
rorb
jb
sbb
mov
jbe
xor
and
orps
or
lahf
insb
fwait
xchg
dec
ljmp
stc
push
movsl
setne
push
inc
mov
xchg
and
daa
orb
cmpsb
movsb
or
push
mov
sub
adc
ret
sbb
fisubs
fwait
or
or
xchg
mov
dec
xor
inc
mov
sahf
pop
push
xchg
pop
and
mov
mov
adc
sahf
push
fsubs
jmp
xchg
movsl
popf
sub
mov
cmp
sbbb
adc
add
pop
rolb
push
and
outsb
dec
xchg
add
mov
leave
outsb
in
pop
add
fs
sbb
or
stos
dec
or
pop
xchg
push
jns,pt
add
scas
and
out
rcll
inc
and
sbb
mov
jne
mov
lahf
stc
jmp
xchg
or
xchg
cwtl
dec
pop
stos
and
sub
adc
bound
sbb
push
pop
sbb
push
and
cs
mov
pop
int3
mov
pop
stos
sbb
mov
mov
xchg
daa
test
and
lret
sbb
or
mov
and
mov
and
lret
add
push
adc
mov
add
out
cmpsl
mov
xchg
adc
cmc
pop
outsb
add
or
add
inc
nop
or
sub
mov
xor
push
sub
and
add
and
adc
aaa
push
mov
mov
sub
xchg
adc
in
mov
xlat
push
sbb
sbb
sbb
mov
test
mov
pop
nop
lcall
push
sbb
adc
sub
subl
lea
or
adc
aad
xchg
adc
mov
pop
pushl
sbbl
add
sbb
sbb
mov
push
dec
inc
cwtl
xchg
inc
or
addl
fwait
mov
push
pop
adc
sbb
push
pushf
push
xchg
fbstp
and
subb
daa
add
adc
xor
adc
pop
jle
xchg
adc
adc
jb
add
fwait
sbb
push
lcall
xchg
jmp
aas
mov
stc
bound
lahf
int
movsl
repnz
mov
test
add
pop
icebp
sbb
repz
pop
orl
dec
add
inc
sub
andb
idivl
adc
mov
mov
nop
and
mov
cmp
jno
and
mov
es
sahf
or
and
dec
pmaxsw
test
jp
xchg
rcrl
enter
xor
xchg
fwait
cmp
ds
sbb
xchg
adc
sub
xchg
mov
xchg
stos
mov
lahf
dec
cmpsl
xchg
jbe
xchg
nop
fwait
sbb
adc
and
sub
mov
inc
xor
fwait
roll
das
fisttps
sub
outsl
add
xor
nop
mov
filds
int
mov
stc
add
or
mov
mov
sub
sub
rorb
adc
or
push
xlat
mov
sub
mov
adc
or
xchg
ret
outsl
mov
and
jb
or
mov
xor
adcb
ds
mov
out
fldt
jp
into
hlt
dec
dec
and
mov
xchg
add
adc
add
adc
push
or
and
cmp
fwait
mov
mov
cmp
orl
test
pusha
rcrb
mov
mov
dec
mov
das
cs
adc
mov
sbb
gs
mov
mov
je
adc
sbb
and
or
sbb
fs
pop
and
mov
imul
daa
mov
adcb
add
adc
ja
sbb
mov
scas
pushf
dec
sbb
mov
aas
xchg
xor
jecxz
or
pusha
jge
aam
les
setne
dec
push
cmpsl
sbb
inc
pop
mov
adc
fstpt
aas
movsl
rorl
pop
xor
add
or
xchg
xchg
pop
xchg
pop
and
test
sbb
aad
bound
out
sub
jne
test
and
nop
pop
js
sahf
pop
push
es
lret
leave
adc
or
pushf
fwait
pop
and
jbe
mov
enter
nop
push
iret
dec
fistpl
popf
push
sbb
bound
addr16
xchg
or
mov
pop
mov
mov
or
push
jno
add
test
mov
sub
je
xor
xchg
or
sahf
or
cmpsb
mov
pushf
add
dec
pop
pop
nop
lahf
lods
mov
adc
and
outsb
ret
test
daa
sbb
mov
cwtl
aaa
add
mov
push
pcmpeqd
mov
or
pop
wrmsr
xchg
and
mov
movsb
out
jle
fdivrs
xorb
divb
inc
lahf
sbb
mov
and
adc
push
pop
xchg
sub
or
sbb
push
sub
divb
adc
sbb
stc
es
sub
test
pop
hlt
jle
stos
adc
orb
xchg
mov
stc
xor
into
xchg
mov
adcl
push
sbb
rcrb
and
pop
mov
mov
and
mov
mov
mov
movaps
add
cmpsl
add
adc
sbb
test
xchg
pop
xchg
pop
call
sbb
sub
mov
aas
xchg
adc
or
sub
xor
mov
jne
push
ds
xchg
test
sub
outsb
pop
roll
iret
adc
ss
mov
mov
sub
repnz
sbb
jnp
add
mov
xchg
cwtl
ds
sahf
jb
mov
mov
cltd
sbb
lods
adc
test
daa
mov
sbb
pop
and
push
and
mov
jnp
fs
sbb
lcall
pop
mov
daa
add
push
rcll
fwait
outsb
cmpsb
or
jge
sub
xchg
jecxz
push
mov
icebp
sbb
pushf
mov
lcall
push
sbb
add
or
sub
inc
sub
insb
and
cmc
ja
pop
adc
or
and
clc
ds
addb
pop
xor
mov
jge
ret
push
push
aam
cmpsl
cmp
test
and
inc
pop
jnp
add
mov
cwtl
gs
outsl
or
in
jae
sahf
nop
sbbb
insb
add
jecxz
and
les
adc
jo
push
mov
or
cwtl
inc
sub
inc
push
data16
pop
pop
push
mov
addl
es
orl
cmpsb
jb
inc
subb
push
push
pop
sbb
jbe
lahf
adc
xchg
cwtl
popf
xor
pushf
notb
and
jg
orl
mov
mov
jle
xchg
sbb
shll
out
push
pop
add
cmpsb
iret
push
sbb
adc
push
sub
aas
sbb
jl
push
sahf
xchg
mov
lahf
stc
ds
test
addb
inc
sbb
inc
sub
test
mov
mov
rcrb
inc
pop
jb
hlt
mov
xchg
pop
fwait
loop
add
adc
aad
jmp
or
xchg
fidivrs
les
cmpsb
nop
dec
fists
stc
lock
les
sbb
xchg
adc
sbb
cmpsb
dec
cltd
imul
fmuls
insb
jle
test
xor
inc
sahf
cmpsl
lahf
pushf
mov
xchg
sub
mov
and
mov
cwtl
fcoml
add
cmp
or
jnp
adc
cmpsb
push
xchg
pop
mov
fldl
daa
cmp
sbbl
lahf
shrl
aas
cmpsl
mov
pushf
jp
pop
aaa
mov
lret
fwait
push
xchg
dec
or
adc
mov
ja
sbb
inc
fwait
push
outsl
push
mov
js
loope
movsl
xchg
daa
cltd
nop
push
jecxz
sbb
adcb
adc
aad
inc
in
add
xor
setb
movsl
cltd
push
std
adc
fwait
and
cmpb
and
movsl
inc
mov
test
mov
sti
ljmp
inc
or
mov
mov
jmp
adc
push
push
add
retw
mov
mov
xchg
sub
sbb
ja
and
mov
mov
addl
hlt
mov
sbb
mov
xchg
adc
sbb
jl
jbe
cmp
mov
or
cmpsb
and
sbb
jg
xchg
roll
sbb
clc
jg
xchg
xchg
dec
mov
pop
jge
nop
xchg
add
or
mov
pop
push
dec
stos
sbb
push
inc
adc
lahf
jle
cmpsb
add
mov
std
add
test
push
nop
fisttps
xor
jno
out
adc
pop
pop
imul
mov
outsb
dec
daa
adc
call
insb
mov
notb
cmpsl
push
and
sub
cmp
subb
cmc
add
cwtl
sahf
mov
or
sbb
mov
push
sbb
cmpsl
sub
cmp
cwtl
add
dec
orl
xchg
push
pop
in
mov
es
dec
lods
pop
andl
push
sub
and
stc
sub
mov
outsb
inc
sbb
out
aam
mov
pushf
popf
pop
inc
adc
test
je
orb
mov
mov
into
call
mov
pop
push
sbb
and
cmpsl
or
or
jge
mov
pop
or
andl
inc
xchg
dec
rorb
andl
mov
pop
sbb
xchg
bound
daa
sbb
aas
pop
and
push
sbb
xchg
stos
lods
je
movlps
inc
sub
imul
daa
test
dec
inc
sub
sbb
pandn
fcompl
xlat
cmp
leave
or
andb
jl
mov
add
and
mov
test
xchg
jb
dec
sbb
aaa
lcall
fimuls
push
adc
mov
dec
stos
or
daa
mov
mov
out
cmp
add
shrb
orb
sbbl
adc
lcall
sub
add
nop
clc
sbb
aad
sbb
sarl
xchg
xor
test
scas
xlat
enter
sub
pushf
push
xor
leave
rorl
sarb
daa
xchg
push
adc
insl
pop
sub
inc
mov
jo
iret
sbb
sub
aas
aas
xchg
sbb
jecxz
xchg
cmpsb
xchg
and
shl
daa
xor
cmpsb
mull
sbb
xor
sbb
mov
jb
je
mov
mov
sbb
adcb
lods
mov
lea
sbb
jbe
push
pop
stos
adc
imul
dec
xor
popf
sbb
test
dec
mov
or
sub
inc
push
xchg
dec
or
inc
sub
aas
and
adc
xadd
or
aaa
sbb
sbb
es
movswl
test
mov
xor
mov
sahf
mov
es
inc
movsl
sub
lcall
cmpl
mov
mov
andb
es
push
frstor
cmpsl
adc
pop
sbb
icebp
rclb
pop
mov
add
mov
icebp
and
rorb
lds
xor
movsl
adc
enter
outsl
xchg
cmpsb
fs
xor
das
sbb
sahf
fwait
cmp
mov
jp
dec
or
mov
fst
lods
add
dec
mov
xor
xchg
test
and
adc
add
or
das
pop
cmp
cltd
icebp
dec
rorb
inc
xchg
out
jnp
enter
es
movsl
jns
dec
fcoml
pop
adc
mov
cltd
add
add
sbb
clc
mov
rcrb
xor
out
incl
pop
xchg
adc
mov
push
xchg
mov
dec
clc
jb
sbb
mov
scas
sbb
or
cmp
sub
test
leave
dec
cltd
sbb
shlb
inc
and
cmpsb
movl
pushf
pop
add
dec
sub
adc
add
sbbl
sbb
fildll
xlat
or
outsb
xchg
mov
stos
int3
mov
dec
mov
and
mov
and
nop
lds
or
jecxz
leave
or
test
sub
and
jae
xchg
pop
xchg
aaa
sbb
xchg
cmpsb
or
imul
sbb
add
adc
jmp
sbb
xor
jg
pop
xchg
mov
add
sbb
mov
push
mov
arpl
test
adc
push
xchg
cmpsl
loope
mov
adc
popf
dec
adc
insl
xchg
sbb
mov
xchg
aaa
test
rcrl
xchg
mov
sub
std
sub
mov
pop
sub
mov
outsb
sbb
sub
add
les
sub
lods
push
jle
mov
lea
decb
and
mov
sbb
mov
test
pop
xchg
sbb
cmc
xchg
cltd
mov
scas
or
aad
pop
sbb
mov
mov
xchg
je
movsl
pop
add
pop
jns
xchg
test
and
push
addb
clc
lcall
or
int
dec
adc
xchg
xchg
mov
sbb
mov
mov
lds
testb
pop
xchg
xchg
adc
dec
pop
stc
add
mov
orb
sub
mov
iret
rcl
daa
cwtl
xchg
es
add
sub
stos
sub
push
orl
sahf
repnz
pop
dec
sbb
inc
or
dec
sub
pop
mov
or
cmpsb
adcl
les
add
pushf
es
xchg
aaa
adc
and
add
xchg
imul
data16
xchg
pop
ljmp
je
jbe
shll
sbb
adc
sahf
adc
cli
test
and
xchg
int3
aam
pop
push
sbb
fstp
xor
pop
lahf
mov
add
test
lahf
gs
notl
dec
je
adcb
sub
add
int
dec
je
gs
sbb
mov
adc
mov
inc
fcomi
ds
adc
adc
stos
test
adc
or
sbbb
xor
movsl
push
adc
jle
daa
adc
jbe
inc
cltd
fwait
mov
mov
test
sbb
and
adc
or
test
lods
xchg
or
fs
mov
sbb
nop
iret
cmpsb
and
cli
sbb
cmp
es
ret
cmc
scas
jo
mov
add
or
push
or
mov
xor
inc
sbb
and
push
add
xor
js
stc
ror
or
mov
nop
test
addl
sbb
and
xor
in
xor
add
in
add
and
pop
mov
mov
pop
mov
std
sub
add
adc
mov
mov
sub
sbb
jae
lcall
sbb
mov
mov
and
test
cs
mov
add
mov
je
mov
aas
pop
and
add
ja
xchg
fistpll
pushf
or
sbb
sbb
mov
adc
mov
es
xchg
mov
ficoml
xchg
push
xlat
add
int3
movsl
sbb
xchg
sbbb
adc
adc
jle
adc
sbb
lcall
xchg
sbb
inc
movsl
adc
jnp
gs
fistps
xchg
sbb
mov
pop
and
push
mov
pusha
enter
cmp
data16
iret
insl
jae
xchg
adc
ret
inc
test
adc
xchg
xchg
cmp
adcl
cmpsl
sbb
xor
mov
imul
pop
inc
test
xchg
adc
sbb
mov
andl
mov
or
movsl
stos
int
add
sbb
adc
test
lds
sbb
aaa
test
mov
pop
pushf
add
cmp
test
mov
xchg
cltd
lods
out
and
xchg
adc
cmpsl
fldenv
fwait
jb
adc
or
mov
ret
push
mov
adc
test
lret
je
adc
sbb
jmp
mov
in
movsl
sub
pop
pop
pushf
and
fsubp
adc
add
pop
jl
sbb
mov
mov
hlt
push
fwait
adc
nop
and
xchg
mov
xor
adc
or
mov
and
aad
xchg
nop
cmpsb
sbb
hlt
mov
mov
lods
dec
in
xchg
dec
insl
mov
test
shrl
orb
ret
and
test
pop
je
mov
out
mov
xchg
fiadds
mov
mov
push
lcall
daa
sbb
add
out
fs
inc
sbb
sahf
push
jle
mov
outsb
adc
push
sbb
or
mov
push
xorb
mov
xor
nop
or
mov
movb
scas
sbb
xchg
sbb
xor
in
xor
dec
cwtl
mov
add
je
adc
sbb
mov
bound
push
sbb
inc
fwait
xor
mov
sbb
or
pop
cmp
xor
add
mov
or
jnp
xchg
sub
adc
push
fadds
mov
and
cwtl
hlt
xor
xchg
ds
mov
xor
dec
mov
in
dec
mov
cmp
adc
movsl
push
mov
xchg
jl
sub
sbb
or
push
inc
mov
pop
pushl
aad
sbb
shll
pop
and
mov
dec
fidivs
mov
pushf
jb
inc
push
test
xchg
andl
or
and
mov
mov
jo
andl
mov
fwait
xchg
or
jmp
inc
push
or
adc
push
dec
push
data16
xchg
cmp
movsb
cli
cwtl
add
mov
or
xchg
push
movsl
mov
fdivl
je
add
push
test
push
lods
dec
cmpsb
xchg
adc
inc
adc
add
sbb
mov
dec
and
pop
cmpsl
or
sbb
add
nop
cmp
stos
xor
sbb
scas
jbe
adc
cmp
mov
adc
daa
push
pop
fwait
loopne
test
inc
insb
cmp
jo
adc
test
ds
sbb
adc
mov
mov
jne
sbb
mov
aas
inc
sub
insb
inc
mov
or
dec
sub
adc
cmpsb
jmp
pop
sbbb
orb
mov
add
sgdtl
sub
xorl
push
hlt
daa
pushf
incb
adc
jle
and
sahf
or
xor
dec
sub
mov
sbb
movsl
mov
cmp
or
aas
pop
sahf
pminub
xchg
mov
sbb
lcall
cltd
mov
test
xchg
adc
mov
mov
mov
add
fmulp
add
test
xchg
cli
jnp
popa
gs
insl
sub
ret
scas
enter
ret
xchg
xchg
lahf
push
rolb
mov
sbb
xchg
cwtl
mov
cltd
fwait
je
mov
int3
mov
jle
sbb
sahf
pop
cmpsb
outsl
jmp
pop
mov
mov
mov
andl
mov
out
push
push
mov
inc
push
lahf
push
sub
orb
lcall
pop
dec
dec
orb
inc
cltd
xchg
mov
sbb
test
test
push
dec
orl
iret
loop
xchg
push
jae
sub
adc
xlat
add
or
mov
scas
push
out
pop
mov
cmpsb
xchg
into
shufps
pop
mov
inc
fwait
mov
mov
xor
pop
cltd
iret
stos
pop
adc
push
nop
mov
cld
dec
cmpsb
or
ret
or
push
mov
jb
sbb
lods
test
or
and
sbb
add
clc
xchg
pop
sahf
mov
push
xor
leave
inc
ficoms
xchg
cmpsb
inc
movsl
lcall
xchg
sbb
sub
fildll
daa
jle
pop
and
adcl
cltd
or
les
dec
xchg
xchg
and
repnz
jb
dec
adc
subl
lods
mov
or
mov
push
scas
mov
mov
cmpsb
adc
jb
xchg
cmp
mov
adc
sub
lea
sbb
sbb
ss
sbb
sbb
or
je
sbb
inc
sbb
mov
pop
adc
movd
push
fiaddl
cmpsl
and
inc
mov
lcall
mov
xchg
and
or
test
mov
andb
fwait
sbb
dec
mov
cs
lret
cmpsl
and
pop
andb
mov
cltd
test
xchg
xchg
or
aas
xor
xchg
add
sub
mov
dec
test
adcb
cmpb
or
mov
xchg
stos
fsts
mov
inc
test
adc
mov
jbe
jb
inc
mov
sbbl
or
adc
add
inc
or
mov
adc
pop
cmpl
sbb
sbb
add
xchg
test
sbb
rorb
ret
orl
prefetcht1
mov
sub
daa
fwait
adc
out
push
xchg
fildl
xchg
cwtl
adc
inc
xchg
and
and
sbb
sbb
in
or
mov
mov
paddsw
add
sahf
dec
nop
add
addb
mov
xchg
inc
lods
sub
adc
sub
sbbb
push
sahf
adc
cwtl
add
je
daa
xor
mov
aaa
xchg
add
scas
add
lahf
sbb
add
cwtl
rcrb
mov
andb
add
mov
mov
adc
inc
scas
mov
mov
and
cs
or
nop
lcall
xchg
adc
sbb
adc
sbb
xor
js
cmc
mov
mov
cmc
fwait
sbb
and
cmpb
or
lahf
push
xor
int
or
adc
lock
imul
and
xchg
dec
aaa
sbb
add
sbb
xchg
xchg
push
mov
jb
jle
push
push
dec
sbb
add
mov
add
adc
pop
movsl
pop
ficoms
adc
stos
xchg
mov
int3
cmpsb
test
enter
sbb
mov
xchg
sbb
cltd
dec
cs
push
mov
test
lcall
xchg
mov
adc
add
dec
orl
add
insl
mov
pop
stc
mov
les
cmpsl
bound
mov
ret
sahf
outsl
and
and
je
inc
int3
scas
sub
sbb
cmp
mov
mov
adc
adc
ret
add
inc
sbb
bound
and
in
cmp
jg
xchg
lcall
sub
dec
stc
pop
push
add
push
pminub
sahf
fwait
nop
or
aaa
and
push
outsb
hlt
adc
sub
clc
mov
movsl
inc
ret
mov
sbb
and
add
pop
sbb
mov
mov
push
mov
sbb
les
mov
xorb
fldcw
daa
xchg
mov
mov
mov
adc
inc
add
xor
movsl
mov
and
xchg
sbb
add
xchg
adc
sbb
xor
add
push
or
pop
daa
xchg
or
mov
lahf
test
push
xchg
sbb
call
inc
mov
push
mov
cwtl
mov
movsl
stos
cltd
stc
into
sub
mov
mov
or
cmpsb
cmpsl
loop
lret
jle
push
dec
test
pop
adc
pop
aas
fs
cwtl
sbb
inc
or
adc
mov
pushf
mov
sbb
ret
push
repnz
adc
jecxz
mov
xchg
mov
sub
adc
jge
xor
adc
pop
je
into
xchg
and
sbb
inc
adc
cmp
mov
adc
sbb
jb
fnstsw
push
lods
and
mov
out
sub
and
jge
mov
test
dec
sbbl
mov
loop
movsl
es
xchg
cmc
or
imul
mov
xchg
mov
lods
cmpsb
sbb
jl
call
adc
mov
sbb
fwait
sub
decb
pop
adc
mov
and
pushf
cmpsb
je
sbb
xlat
and
iret
push
and
mov
lods
movd
sbb
mov
adc
or
pushf
jbe
es
bound
mov
push
mov
ret
cmpsb
inc
or
pop
ret
sahf
loope
sbb
xlat
pop
lock
mov
cmpsl
and
gs
inc
mov
or
add
mov
stc
pop
and
std
test
or
inc
xchg
inc
xchg
lahf
stos
cmp
repnz
fcomps
jle
and
pop
bound
fstps
xchg
iret
stos
bound
and
and
jbe
jnp
cmpb
jle
adc
sbb
pop
pushf
adc
sbb
pop
addl
or
xor
or
adc
lcall
sbb
mov
stc
cmp
daa
lsl
mov
mov
cmp
dec
mov
out
aas
dec
add
popa
movsl
pop
int3
pop
movsb
mov
dec
push
mov
adc
push
jo
sbb
pop
add
push
add
bound
sbbb
adc
mov
or
das
sbb
xor
pop
mov
subl
fwait
or
add
stc
bound
add
add
jg
or
enter
mov
out
or
and
daa
orb
pushf
jbe
leave
xlat
push
add
inc
mov
arpl
fsubs
sahf
pop
cltd
xchg
es
sub
push
sub
push
mov
lahf
cmp
dec
loopne
mov
mov
mov
lods
cwtl
mov
or
or
adc
add
push
mov
mov
dec
ret
xor
jmp
loop
mov
rclb
xchg
mov
loop
imul
pop
bound
insl
sbb
cmp
sahf
inc
push
iret
mov
cmpps
sub
arpl
stc
xchg
or
in
add
lcall
pushf
adc
popf
or
orl
inc
pushf
and
xchg
lods
xor
int
insl
sbb
stos
mov
xchg
or
adc
je
sbb
cmpsl
add
push
xchg
shrb
mov
push
mov
lahf
out
and
mov
sbb
xchg
outsb
pop
lcall
mov
cmp
mov
mov
shlb
mov
or
sahf
pop
sbb
mov
adcl
loopne
and
ja
mov
push
orb
mov
sahf
lahf
adc
test
mov
in
out
addb
stc
sbb
and
pop
scas
mov
cwtl
mov
and
add
and
nop
mov
test
test
sahf
in
dec
cmp
adc
push
mov
or
sub
push
push
bound
push
or
nop
pop
push
cmpsb
pop
sahf
data16
mov
andl
mov
xchg
daa
imul
sub
inc
adc
arpl
jmp
xchg
int
adc
lods
xor
and
mov
xchg
cpuid
lcall
xor
test
stos
xchg
sbb
fwait
aas
sbb
jecxz
dec
or
mov
fisubrl
addr16
sub
pop
or
stos
xor
dec
les
test
cltd
inc
and
fs
dec
adc
xchg
cmpsl
test
add
mov
jb
sub
cmpsb
mov
jns
cmp
sub
sbbl
mov
sub
adc
outsb
inc
adc
mov
and
xchg
mov
mov
sbb
pop
fildl
push
or
or
mov
or
mov
mov
jle
adc
xchg
inc
popf
ja
sbb
loopne
add
xchg
mov
xchg
mov
cwtl
mov
jg
add
sbb
mov
shrl
lods
mov
xorb
dec
divl
rorl
mov
sbb
dec
dec
xchg
mov
adc
mov
sub
adc
mov
shll
sub
or
stc
jp
movsl
pop
push
adc
mov
mov
cmp
sbb
push
mov
es
sub
sub
inc
adc
cmpsb
repz
pop
adc
mov
xchg
and
mov
inc
fnsave
ja,pt
lahf
add
stos
sbb
adc
cmpsb
adc
push
test
sbb
data16
sbb
push
loop
pop
bound
and
push
adc
xor
push
mov
mov
cmpsb
lcall
loope
clc
cmp
repz
sbb
es
ss
fstpl
xchg
mov
or
popa
sbb
push
sahf
mov
pop
adc
mov
imul
or
jns
hlt
push
xchg
stos
adcb
pop
lods
pop
pushf
orb
xchg
or
sbb
jp
push
sbb
jno
addb
addb
xchg
jl
xchg
inc
mov
sbb
pop
daa
pop
adc
fimuls
sub
mov
std
mov
clc
and
ret
pusha
sbb
fsts
stos
sbb
add
ds
adc
fs
shll
jle
push
aas
sbb
dec
mov
and
mov
andl
lret
sti
leave
stos
adc
inc
arpl
push
adc
jbe
adc
push
jbe
mov
pop
sahf
sets
adc
adc
cld
add
push
rorb
pop
sbb
add
adc
mov
fisubs
stos
lahf
sahf
or
mov
jne
and
mov
xchg
or
mov
iret
rcrb
inc
add
lahf
mull
or
nop
cltd
add
jg
mov
rcrb
filds
adc
sahf
push
pop
cs
push
movsb
sbb
mov
and
xchg
fwait
dec
dec
add
bndldx
xor
or
and
xchg
xchg
push
cld
and
jle
sbb
xchg
iret
and
popf
test
mov
push
sahf
cmpsl
loope
into
and
and
pushf
sub
wbinvd
enter
xchg
lahf
mov
mov
lods
movsb
stos
add
sbb
sbb
and
jne
pop
mov
aas
je
or
mov
add
xchg
adc
xchg
scas
add
je
movsl
push
mov
xchg
ds
cmpsl
fwait
sbb
push
or
jns
sahf
adc
sbb
cmpsb
orl
aas
pop
xchg
xchg
cmpsl
sbb
enter
xchg
cwtl
data16
test
cmp
adc
and
mov
sbb
cmpsb
and
sub
or
sbb
lcall
int
sbb
xchg
xchg
mov
cmpsl
pop
sbb
pushf
mov
xchg
adc
xor
pop
sahf
xchg
ds
test
jae
popa
xor
daa
adc
mov
sbb
adc
adc
fldl
pop
mov
xchg
mov
mov
xor
cmp
push
xor
pop
xchg
pop
lcall
mov
sbb
mov
popa
bound
jno
inc
ret
les
cmpsl
cmp
jmp
cwtl
and
jb
xchg
daa
and
xchg
xchg
xchg
sbb
adc
and
mov
xlat
cmp
mov
setno
sbb
inc
mov
movl
enter
stos
mov
xchg
sbb
movsb
or
popl
lahf
lret
inc
adc
cmpsl
and
or
cmpsb
fldln2
sti
test
mov
pop
mov
add
add
add
daa
and
cltd
adc
in
outsb
cmpsb
push
push
or
sbbl
xchg
or
ret
notb
add
lret
inc
test
mov
pop
pushf
adc
movsb
sbb
sub
push
dec
adc
mov
mov
inc
xor
daa
mov
push
xchg
push
orl
dec
popl
add
inc
negb
mov
daa
cmpsl
cmp
mov
xchg
cmpsb
cmp
in
add
jg
or
lods
adcb
xchg
fwait
adc
mov
dec
mov
stc
fisubrs
das
xor
sbb
cmovno
testl
and
adc
sbb
rolb
lahf
loopne
mov
popa
shlb
mov
dec
xchg
dec
push
mov
cmpsb
jbe
out
insb
adc
sbbl
adc
aad
add
xchg
cmpsl
adc
xchg
mov
and
or
jbe
out
push
aad
add
xor
cmpsb
rclb
out
cmc
sbb
lods
popa
inc
and
outsl
dec
fisubs
stos
cmpsb
add
icebp
sahf
andb
mov
adc
adc
xor
test
fwait
loope
insl
cmpsl
stos
sbb
stos
mov
fldt
sbb
sub
ret
scas
mov
xor
or
adc
stc
xor
sub
mov
in
rcll
movsl
mov
outsl
clc
push
ss
or
daa
sbb
xlat
lcall
push
dec
sub
movsl
into
dec
pushf
cmpsb
mov
adc
and
movntps
mov
and
or
or
flds
xchg
xchg
daa
and
adc
xchg
sysexit
xchg
fs
mov
sti
dec
push
sbb
aam
cmpsl
xor
orl
inc
or
lret
inc
pop
bound
xchg
pop
push
pop
cld
jo
es
data16
paddsb
mov
inc
iret
test
cmpsb
int3
jle
add
xchg
hlt
andl
mov
dec
xor
fnstenv
xor
or
jg
sbb
into
scas
nop
cmpsb
insl
ficompl
pop
and
dec
xor
add
nop
xchg
lcall
out
mov
jnp
pop
in
test
mov
pushf
mov
jecxz
add
rolb
add
lcall
adc
insb
sub
mov
sahf
mov
les
xchg
sub
xchg
subb
daa
test
mov
lahf
leave
out
inc
or
aas
add
mov
xchg
and
sahf
movsl
push
sbb
mov
mov
add
or
mov
sbb
iret
xor
inc
mov
fistps
and
outsb
push
test
lret
sbb
lahf
jo
mov
ds
cmpsb
or
xchg
xchg
add
and
sahf
and
inc
sbb
jp
aam
jb
jle
mov
jb
sub
sbb
jle
add
xor
xor
sub
push
outsl
negl
out
stc
nop
lahf
mov
enter
push
nopl
push
adc
push
scas
xchg
lcall
test
mov
mov
pushf
cs
sbb
js
aaa
adc
jle
adcb
mov
or
scas
pop
and
jmp
or
adc
adc
adc
pop
mov
xchg
dec
lods
xchg
dec
sbb
outsl
push
aam
test
ret
or
popa
dec
adc
sbb
push
enter
jbe
inc
cltd
adc
xor
mov
test
sub
cltd
popl
pop
add
mov
insl
sub
and
subb
xor
xchg
mov
xchg
jmp
lds
test
and
inc
push
sbbb
stc
les
mov
cmpsl
xchg
adc
stos
inc
mov
in
add
or
cmpsl
add
xor
adc
inc
xchg
xor
mov
sbb
cltd
test
lret
mov
scas
inc
es
lahf
and
rcrb
dec
sub
cmpsb
adc
out
scas
enter
add
sbb
pop
jae
adc
out
sbb
sub
or
shrl
push
push
ja
cwtl
dec
jle
adc
or
mov
movsb
jmp
xchg
xchg
mov
sub
adc
lcall
xchg
xchg
add
daa
push
aaa
push
cmp
mov
sbb
stos
or
push
jne
add
push
xchg
stos
pop
xchg
mov
lock
adc
or
sbb
in
push
inc
shlb
mov
scas
cmp
or
xchg
sbb
mov
adc
jl
sbbl
rolb
adc
test
and
lahf
mov
pushf
push
fwait
xchg
mov
mov
and
stc
cmp
adc
mov
cmp
adc
outsb
loope
out
inc
mov
sub
je
xor
mov
mov
in
ljmp
pop
fsubrp
sbb
inc
dec
pop
add
mov
sbb
into
adc
and
mov
lods
pop
ret
mov
push
test
sbbl
inc
sbb
hlt
adc
pop
mov
sub
xrelease
and
fwait
mov
scas
add
icebp
or
add
or
mov
cmp
dec
jg
pop
sub
inc
inc
mov
xor
jnp
test
sbb
or
iret
lahf
data16
xchg
aaa
adc
push
dec
iret
fwait
adc
pop
cmpsb
pop
clts
adc
xchg
orl
repnz
mov
mov
es
push
pop
add
jb
loope
lods
jnp
sbb
popf
and
cmpsl
insl
roll
mov
ja
fwait
pop
imul
mov
stos
mov
or
lcall
inc
xchg
pop
mov
adc
and
mov
xchg
xchg
pusha
xchg
add
adc
xchg
sub
aad
adc
lahf
mov
jne
nop
call
push
or
sbb
fwait
and
lcall
mov
add
xchg
jle
or
sub
mov
and
sub
sub
or
or
jg
cmpsl
pop
mov
cmp
addl
sub
dec
aaa
or
add
sarb
mov
pop
inc
sbb
lcall
inc
cmpsb
xchg
mov
or
cltd
xchg
nop
mov
sahf
test
pop
push
and
and
loopne
stos
enter
cmc
repz
adc
dec
adc
and
push
fisubs
out
jbe
pop
mov
xchg
test
lret
xor
data16
ret
es
push
cmpsb
mov
daa
out
data16
fsubl
jle
cltd
or
stc
movsb
or
sbb
and
xor
lods
out
adc
lcall
imul
or
sbb
xor
test
and
inc
inc
pop
fwait
pop
sbb
xor
sbb
mov
repnz
xchg
adc
pop
data16
add
xchg
mov
dec
inc
xor
shll
mov
or
or
jne
sbb
adc
dec
add
mov
mov
pop
mov
iret
or
mov
std
sbb
sub
adc
pop
xchg
cltd
add
icebp
mov
fldcw
nop
or
movsl
negl
mov
lcall
push
add
xor
sbb
cmp
lock
lret
es
adc
adc
adc
mov
je
test
lahf
adc
adc
movb
pusha
adc
add
lahf
cmpsl
add
loope
adc
push
sub
add
mov
mov
inc
cmc
cmpsl
push
inc
adcb
add
es
adc
test
jns
sbb
and
and
or
mov
mov
pop
outsl
xchg
int
mov
xchg
es
jns
add
fucomip
jnp
add
mov
repnz
push
or
dec
daa
add
jbe
movsl
push
pop
dec
inc
cld
gs
rclb
lahf
add
or
or
pop
sub
mov
sar
and
inc
sbb
mov
pop
push
adc
stos
cltd
xchg
sahf
movsl
pop
popa
adc
mov
fldenv
insb
add
sbb
sbb
xor
push
sbb
cli
mov
in
ucomiss
test
pop
xchg
cmpsb
movsl
inc
push
adc
lods
xchg
adc
lods
sbb
rcrb
lcall
adc
push
jmp
enter
pop
xor
inc
adc
in
sub
andl
nop
cmpsl
xchg
lcall
aas
adc
adcb
push
rorb
ss
xchg
mov
test
divl
or
lahf
or
pop
ds
iret
and
add
push
pop
xchg
je
and
movsl
adc
bound
cmp
push
jo
cwtl
cmp
and
or
and
mov
mov
les
out
mov
or
xlat
xor
or
stos
cmp
sbb
adc
test
pop
inc
or
or
mov
inc
cli
loope
mov
sub
test
jb
nop
push
mov
or
cltd
mov
shlb
mov
dec
bound
cs
jmp
adc
sub
or
push
and
mov
int
jne
aas
cmpsb
and
add
mov
xchg
lock
jge
or
push
pushf
fnsave
xchg
shrb
jne
mov
adc
test
or
ds
cltd
pushf
sbb
sub
add
inc
test
xor
and
mov
setns
mov
xchg
mov
push
push
mov
sbb
pop
cld
orl
add
adc
sub
xchg
inc
mov
sub
test
orl
xor
inc
or
add
int
pop
dec
pop
xor
xchg
xchg
aaa
xchg
js
xchg
fidivrl
cwtl
movsl
xchg
addl
jg
inc
dec
adc
xchg
loopne
sbb
addr16
andb
adc
xchg
mov
cmpsl
push
fsubs
cwtl
sbb
fwait
popl
stc
sahf
jecxz
and
xchg
out
jne
cs
inc
or
adc
je
ret
cmp
add
out
and
cmpsb
mov
and
adc
pop
xchg
xchg
pop
jmp
push
and
adc
icebp
pop
clc
addb
addr16
lahf
push
cmpsb
mov
inc
or
inc
and
andb
fbstp
xchg
fwait
push
fsubs
push
push
xor
loope
add
jb
adc
leave
std
adc
sub
lods
cmp
cli
mov
mov
inc
push
sub
dec
mov
mov
pushf
push
insl
outsl
mov
add
cmp
add
sub
or
and
push
jns
and
cltd
nop
loopne
and
sub
jo
add
adc
mov
or
or
and
xchg
add
push
scas
inc
pop
lahf
xchg
scas
pop
loopne
rclb
loopne
loopne
insb
adc
inc
lods
adcl
adc
xor
add
mov
cmp
push
roll
add
mov
daa
ret
aaa
add
mov
xchg
xor
mov
xchg
sub
mov
mov
and
stos
movsl
ret
xlat
xchg
and
mov
outsb
adc
daa
mov
sbb
sbb
test
xchg
xchg
pop
pop
mov
add
cld
pop
adc
push
adc
adc
icebp
push
jecxz
jb
pop
and
adc
push
sbb
sbb
outsb
mov
adc
stos
in
test
fs
pop
or
and
mov
or
xchg
push
sbbb
mov
inc
sbbb
add
insb
mov
pop
push
add
add
mov
adc
mov
imul
inc
dec
add
cmp
jnp
mov
add
out
add
addb
sbb
test
pop
fstps
dec
nop
or
pop
pop
push
mov
addl
les
popaw
sbb
sub
fdivl
sbb
adc
pushl
orl
cmpsl
pop
add
fbld
pop
and
cmp
push
sahf
cltd
mov
loope
jl
sub
or
mov
adc
sbb
push
mov
mov
loop
sbb
pop
mov
xchg
cmp
cwtl
mov
add
fwait
or
xchg
mov
cmc
sbb
adc
sti
cwtl
push
mov
pop
and
pop
or
lods
mov
or
je
dec
arpl
add
sbb
push
add
dec
xchg
sub
xchg
or
mov
out
push
and
adc
or
and
dec
jbe
inc
and
xchg
add
or
hlt
adc
or
xchg
mov
out
dec
mov
mov
sbb
inc
aaa
sub
sbb
test
sahf
jno
orb
cmpsb
gs
lcall
push
outsb
daa
add
xor
mov
xor
outsb
inc
jbe
insl
add
pop
sub
loopne
jmp
dec
add
push
fwait
push
cmpsb
add
adc
and
xor
and
mov
xchg
add
pop
xor
call
dec
fiadds
mov
cmpsl
or
je
xor
push
jl
and
add
mov
or
sbb
sahf
xor
sbbl
and
sub
and
xor
push
cmpsb
fimull
add
or
or
push
cltd
jmp
data16
xchg
sub
lahf
cwtl
sub
xorb
sub
pop
mov
mov
xchg
ds
pop
ret
inc
mov
adc
dec
sahf
or
mov
bound
das
push
jbe
or
xor
cmp
mov
in
push
and
and
mov
xchg
add
add
cmovne
push
lcall
aaa
adc
cmpsb
cmp
sub
jae
pop
cltd
ds
xchg
test
sbb
ds
sbb
jg
movsl
cwtl
inc
jbe
cmp
stos
cmpsl
sbb
aas
adc
sahf
adc
cs
adc
aas
das
nop
xchg
add
pop
fnstenv
xchg
hlt
sbb
push
pop
xor
lret
pop
fcmovu
fsts
xor
inc
mov
aaa
movsl
orb
or
jo
pop
and
xchg
or
sub
ljmp
push
adc
xchg
iret
lret
pop
test
pop
in
sbb
daa
cmp
sub
or
pushf
adc
mov
adc
adc
cmp
icebp
and
or
pop
out
popa
adc
sbb
subb
stc
repnz
jne
cmc
xchg
add
clc
std
inc
mov
adc
movsl
xchg
test
mov
and
adc
pop
xchg
cwtl
sub
push
adc
lretw
test
adc
lahf
push
xor
or
mov
test
ss
sbb
mov
and
lcall
xchg
fdecstp
sahf
xchg
les
add
cltd
mov
or
mov
jne
pop
insl
add
xchg
sbb
jle
adc
test
xchg
bound
xor
adcl
inc
jle
test
add
sub
sbb
sub
xchg
adc
and
sbb
and
sub
pop
jb
jbe
inc
movsl
lods
andb
fdivl
dec
and
test
and
sub
fwait
stos
mov
ljmp
lahf
repnz
sbb
cs
xchg
nop
mov
mov
inc
clc
pop
inc
xchg
sbb
dec
cwtl
sahf
xchg
adc
cmpl
add
or
popa
lea
outsb
ficompl
sbb
mov
je
mov
aad
adc
pop
jge
clc
push
lods
mov
inc
sahf
pop
adc
push
and
pop
or
dec
pop
movsl
inc
test
inc
or
add
mov
xchg
mov
jle
adc
ror
add
jbe
dec
add
and
sahf
jmp
inc
pop
rolb
push
pushf
xchg
push
jbe
adc
push
add
adcl
or
pop
rclb
mov
cmpsl
mov
cmpsb
dec
fisubs
or
mov
mov
outsb
xchg
or
xchg
mov
add
into
jne
or
es
mov
pop
sub
push
sub
enter
push
adc
aas
push
mov
inc
cltd
mov
or
adc
xchg
mov
mov
add
mov
push
pop
or
sub
add
add
nop
push
jne
sahf
adc
xchg
pop
fbld
stos
push
pop
push
lods
and
loopne
cmc
lds
aaa
mov
sbb
sbbl
or
ss
fstl
movl
outsl
and
inc
sbb
add
pcmpgtd
mov
std
mov
or
lahf
pusha
mov
adcb
sbb
sbb
cli
lahf
nopl
or
arpl
mov
cmp
cwtl
pop
loopne
cmp
and
sub
add
cs
xchg
add
leave
and
fisubs
mov
mov
mov
test
fdivrs
pop
cmp
pop
sbb
mov
pop
and
jecxz
adc
cmpsb
xchg
pusha
lods
lcall
hlt
xor
cwtl
xchg
cmpsb
hlt
mov
push
gs
cltd
ss
jb
adc
lcall
inc
or
dec
add
pop
push
mov
xchg
jbe
rolb
mov
cltd
jg
inc
and
or
mov
mov
lahf
sbb
sbb
test
adc
push
daa
push
sbb
lret
dec
dec
aad
mov
and
mov
pop
or
adc
shrd
lock
jg
push
pop
stos
clc
dec
nop
sbb
lgs
adc
es
loope
pop
stc
test
sub
xchg
int
lahf
fdivrp
xchg
pushf
es
je
sub
movsl
cwtl
adc
xchg
pop
jo
sub
xchg
xchg
ret
mov
pusha
sbb
mov
cwtl
and
push
adc
adc
adc
pop
xor
mov
xchg
into
lea
xchg
mov
mov
and
pop
or
adc
xchg
sbb
fisubrs
add
cwtl
movsb
cmpsl
push
xchg
sbb
add
xchg
sub
mov
lock
je
xchg
add
outsb
push
es
iret
mov
bound
or
jb
mov
sbb
xchg
mov
cwtl
orl
stc
rcrb
xor
sub
sbb
mov
push
sbbl
int
je
mov
lods
xchg
jp
and
and
push
inc
roll
fimuls
test
pusha
inc
jmp
and
cwtl
adc
scas
xor
jo
test
cmpsl
add
jb
pusha
lgdtl
ja
mov
cld
pop
or
mov
cmp
sbb
push
jo
xchg
cmpsb
stos
pushf
jle
adc
push
stc
inc
test
repnz
push
sbb
sbb
sbb
sbb
subl
mov
dec
add
dec
xchg
call
or
sbb
xor
xchg
or
test
mov
sbb
lss
lahf
mov
insb
sbbb
cmp
mov
rcrl
shll
adc
adc
in
or
sbb
rcr
movsb
imul
cli
aas
pop
lcall
xchg
std
or
or
arpl
insl
xor
dec
dec
mov
sub
cmp
mov
xchg
and
or
cltd
jbe
stc
iret
adc
sbb
sbb
xor
mov
or
add
mov
add
sub
adcb
icebp
ficoms
or
js
addl
cmc
mov
and
cmp
and
lahf
xchg
adc
inc
jbe
adc
mov
cltd
xchg
mov
cmpb
stc
ja
and
popa
adc
and
push
sbb
or
sbb
lea
lcall
jb
mov
mov
xchg
pop
jle
and
movhps
xchg
dec
fwait
sbb
adc
mov
andb
or
pushf
lcall
ss
stos
nop
adcb
mov
es
mov
pushw
sbb
inc
ja
adc
sub
leave
adc
std
jb
mov
mov
fwait
push
cmp
add
or
push
adc
sub
xchg
mov
or
mov
adc
mov
pop
stc
cmpsb
mov
sbb
andl
and
sbb
add
ret
sbb
andb
xchg
inc
pop
or
dec
js
cmpsl
pop
push
jb
sbb
cmp
mov
seto
mov
es
jecxz
fwait
cmpl
out
mov
xor
xchg
mov
sbb
or
add
aam
fsubl
sbb
lahf
or
and
or
sub
xor
ss
orb
test
nop
pop
cwtl
xchg
stos
mov
xchg
lods
mov
push
jp
sbb
add
adc
inc
cmp
sub
fs
mov
movb
xchg
add
xchg
jne
rcll
mov
int
mov
es
adc
mov
cwtl
pop
sub
push
sbb
ud1
mov
in
lahf
popa
inc
mov
or
dec
mov
jb
std
sbb
lods
mov
test
jne
sbb
adc
cmpsb
cli
movswl
daa
xchg
or
call
rorl
push
es
add
sbbl
cld
xchg
and
mov
mov
pop
push
sbb
and
mov
mov
pushf
push
insb
add
sbb
xor
mov
xchg
hlt
lock
xchg
out
movsl
lcall
in
jbe
dec
and
call
sbb
dec
mov
mov
or
and
cmc
dec
push
sbb
mov
adc
mov
mov
xchg
addr16
push
or
adc
mov
mov
pusha
int
xchg
and
add
bound
sti
cmpsb
mov
add
test
cmp
dec
cs
adc
mov
sbb
lods
xchg
or
mov
cmpl
cmp
ds
xchg
xchg
dec
adc
push
adc
add
dec
xchg
pop
adc
inc
push
ret
mov
andb
ss
fadds
sub
nop
aaa
mov
push
mov
jne
lds
loopne
sub
adc
push
out
pop
es
enter
add
xchg
mov
scas
adc
jo
cmp
sbb
mov
in
xor
rcrl
subl
adc
sub
bound
mov
xchg
cmp
imull
and
or
lods
xchg
cwtl
jg
test
mov
or
filds
mov
aas
push
mov
mov
pop
mov
sub
adc
loopnew
xor
pop
fbld
adc
mov
xchg
sbb
jbe
lret
or
xchg
sbb
adc
pop
cld
stos
pushf
mov
es
or
data16
xor
mov
cmpsb
aam
xchg
xor
into
mov
test
or
lcall
or
adc
sahf
pop
mov
test
popf
or
inc
inc
lods
or
cmpl
sub
xchg
decl
xchg
cmp
enter
jbe
ret
mov
pop
lcall
fisttps
sbb
or
sbb
pop
push
test
xchg
fwait
rcrb
xor
push
mov
pop
sbb
fwait
cmpsb
pop
xor
int3
and
sbb
sbb
sub
jle
out
and
insb
or
int3
les
cwtl
adc
and
dec
add
cmpsl
outsl
loop
push
mov
sbb
jmp
adc
scas
repz
into
in
cmpsb
scas
mov
cwtl
dec
lock
xchg
mov
xchg
push
pop
enter
sbbb
jns
je
pop
fstpl
in
mov
lret
movsb
mov
fwait
mov
mov
or
jnp
nop
or
push
ficoms
stos
loopne
stc
add
cmp
inc
adc
xchg
xchg
xchg
sti
sub
and
and
adc
addr16
inc
cmpb
mov
xchg
jns
insb
xchg
or
jnp
lods
sub
mov
jle
xchg
push
or
sbb
sbb
inc
mov
mov
or
dec
cwtl
cmp
outsl
push
pinsrw
cmpb
xor
mov
mov
or
ret
xchg
idivl
mov
xor
add
fstpl
cmp
xchg
sbb
adc
cmp
popf
stc
mov
xchg
pop
fwait
movsl
lahf
cs
pushf
pop
je
test
cltd
or
and
daa
xor
ds
lahf
add
sbb
sub
icebp
ds
and
mov
rorl
loop
lret
inc
pop
push
adc
xchg
pushf
pop
xor
add
mov
int3
movsl
hlt
fmuls
cmpsb
jl
push
mov
cwtl
sbb
add
pop
xchg
sbb
dec
or
push
sbb
pop
in
xchg
mov
add
leave
stos
inc
push
decb
adc
aaa
mov
xchg
mov
sub
adc
mov
mov
add
imul
add
mov
pop
cs
and
fwait
scas
dec
cmpsl
int
jge
sbb
test
xchg
mov
add
or
and
pop
lods
adc
dec
mov
sbb
xchg
xchg
pop
or
pop
sub
and
sbb
inc
cmp
fbstp
dec
sbb
xor
jp
loope
mov
test
movsl
dec
popa
xchg
in
jne
sub
ds
add
sbb
adc
mov
sbb
test
sub
scas
or
outsb
or
mov
arpl
sub
push
cltd
mov
pusha
add
adc
mov
adc
mov
inc
xchg
fwait
lcall
lods
adc
adc
or
pusha
fimuls
pushf
cmpsb
dec
xchg
pop
or
mov
mov
and
nop
xchg
or
aas
imul
mov
inc
jg
nop
sahf
mov
sbb
xor
adc
sbb
or
or
xchg
xchg
add
ds
data16
cltd
fisubs
adc
sbb
pushf
pop
or
lcall
xchg
mov
insb
test
add
push
sbb
daa
add
or
mov
mov
add
pop
movsl
or
push
cltd
clc
xchg
mov
xchg
jg
cmpsb
pop
addr16
inc
mov
mov
push
flds
mov
sbb
and
jb
out
outsl
or
mov
incl
sbb
sahf
fs
icebp
push
je
sbb
mov
sbbl
sbb
push
or
push
mov
add
ljmp
fistpl
pop
pop
or
outsb
insl
cmpsl
adc
out
pop
add
push
insb
lcall
adc
jbe
add
add
mov
mov
sub
xchg
imul
cmp
push
sbb
xor
into
add
ds
sbbb
and
xchg
xor
jle
sbb
mov
scas
andl
lret
push
jbe
mov
add
sbb
push
sbb
test
mov
xor
sub
add
push
mov
es
mov
xchg
outsb
ljmp
mov
add
outsb
movsl
mov
mov
adc
pop
faddl
jle
mov
adc
fiadds
mov
dec
ficoms
fisttpll
add
mov
and
push
push
pop
sbb
push
push
xchg
add
jb
xor
popa
sti
cmp
les
cs
adc
pushf
pusha
adcl
stc
xlat
add
pop
mov
sbb
dec
in
and
je
cmpsl
push
cld
xchg
fisubrs
or
mov
mov
mov
adc
mov
jne
std
clc
adc
mov
pop
sbb
sbb
adc
pop
mov
xchg
lahf
push
fldenv
stc
pop
test
sbbb
mov
lahf
mov
jg
adc
movsl
add
pop
pop
lret
pusha
test
lds
outsb
pop
xchg
xchg
adc
xchg
cmpsl
pop
or
push
fistps
adc
mov
orb
outsb
add
in
fwait
mov
xchg
cltd
sbb
sub
or
sbb
sub
mov
adc
nop
xchg
sbb
xor
and
mov
jle
sbb
cmpsb
xchg
push
jo
add
lret
jb
icebp
dec
inc
xchg
xor
cmc
sbb
push
lds
mov
mov
and
sbb
sbb
sbb
lret
and
hlt
jns
cmp
inc
xchg
and
or
cltd
lods
inc
push
pop
jge
aaa
xchg
lods
xchg
popf
aad
jp
test
xchg
xchg
adc
ret
pop
pop
orb
cld
push
addb
push
pop
je
nop
mov
mov
ss
xor
pop
arpl
push
inc
pushf
sbb
xchg
lret
test
rolb
or
pop
int
push
xadd
adc
movsb
fwait
andb
lock
mov
orl
cwtl
cmpsb
es
or
mov
dec
test
ljmp
mov
call
insl
les
es
in
inc
sub
arpl
mov
xchg
sbb
fwait
dec
ja
mov
xor
and
inc
dec
xchg
or
fmuls
xchg
xchg
add
adc
dec
imul
xchg
dec
dec
mov
cmpl
pop
xchg
inc
jle
je
mov
lcall
sub
lret
mov
sti
mov
sbb
xchg
fs
sub
rcrb
push
pop
cs
mov
adc
cltd
jg
or
mov
push
jg
and
stos
mov
and
pop
andb
jmp
adc
sbbb
aaa
add
mov
sbb
push
cmp
add
mov
add
bound
push
dec
adc
subl
mov
sbb
mov
mov
movsl
outsb
jecxz
bndstx
xorb
adc
test
clc
cmp
mov
es
mov
orb
pop
sbb
pop
xchg
jbe
push
daa
jb
icebp
add
lahf
rcrb
sbb
test
mov
cwtl
jp
stos
add
and
or
pop
xchg
add
inc
xchg
or
push
and
adc
movsb
mov
inc
filds
or
cmp
mov
add
sbb
rorl
andl
xchg
pop
cltd
jmp
lret
pop
cvtdq2ps
jns
incl
hlt
dec
xchg
push
sbb
mov
add
aaa
mov
mov
sbb
sub
xchg
test
mov
cmpsb
mov
stos
push
jne
add
vpunpckhwd
inc
out
xchg
sub
jnp
mov
pop
leave
negl
cs
ret
mov
mov
loope
jmp
mov
and
dec
or
jb
sub
cmpsl
in
adc
mov
push
pop
sub
sti
inc
aas
out
add
jle
xchg
mov
mov
ljmp
cmpsl
nop
daa
daa
sub
ds
mov
lahf
xchg
mov
cmovne
inc
popa
jb
outsb
inc
mov
add
cmovb
sub
cltd
add
mov
and
mov
add
mov
sbb
and
cmp
mov
add
xchg
xchg
adc
dec
adcl
xchg
mov
cwtl
xchg
sbb
or
stos
mov
mov
sbb
mov
lods
add
lods
mov
lods
in
aam
lea
mov
xchg
lahf
into
mov
nop
mov
sahf
sbbb
cltd
notl
mov
adc
sbb
sub
test
mov
mov
adc
or
roll
mov
into
mov
es
add
and
mov
rorl
stos
xchg
mov
or
and
aaa
or
pop
mov
leave
arpl
fildll
dec
nop
push
cmc
aas
mov
nop
incb
das
fs
or
sub
push
xchg
add
and
push
cltd
mov
push
inc
lcall
adc
sbb
push
sahf
jbe
or
xchg
cltd
pop
dec
or
adc
mov
aaa
mov
rclb
cmp
push
cmp
andb
push
xor
pushf
icebp
push
rcrb
outsl
mov
sahf
and
mov
sar
and
or
mov
add
mov
or
and
cmp
and
add
jbe
hlt
cmp
pop
shlb
sbb
mov
cmpsb
cmp
cmpsb
inc
pop
mov
adcb
ljmp
add
mov
inc
daa
movsl
cwtl
push
orb
xchg
sbb
add
adc
add
test
xor
push
daa
xorl
js
cmpsb
mov
adc
xchg
je
mov
xchg
lret
fwait
mov
pop
enter
sub
movsl
cmc
aas
sbb
stos
nopl
inc
fwait
mov
or
mov
or
mov
adcl
nop
mov
xor
lahf
pop
and
or
add
pushf
stos
sbb
out
outsl
adc
adc
test
fistl
jp
mov
cmpsb
push
push
mov
nop
ret
push
xchg
cmpsl
into
rcrb
push
mov
or
pop
cltd
xchg
jg
mov
and
scas
adc
mov
add
stos
mov
mov
or
jo
mov
stos
aas
adc
push
cmpsb
adc
push
and
or
icebp
cmp
iret
mov
xor
xor
and
jmp
push
mov
test
or
ja
xor
sub
dec
xchg
add
pop
es
push
sahf
jne
and
adc
cli
mov
push
bound
and
cltd
mov
icebp
pushf
dec
leave
xchg
pop
ret
lret
jae
or
adcb
lcall
in
jg
pushf
sbb
mov
pop
mov
lcall
mov
ror
inc
xchg
xchg
xor
movsl
jp
push
pushf
mov
inc
pop
add
loope
nop
adc
mov
inc
mov
dec
movsl
xorl
sbb
jmp
or
fdiv
lret
test
dec
pop
xchg
pop
test
cwtl
or
or
inc
test
mov
adc
jae
inc
sub
cld
and
add
xchg
lods
mov
gs
bound
xchg
mov
and
sub
pushf
add
cli
movsl
xchg
std
mov
and
js
xchg
ljmp
aam
decl
pop
and
xchg
aas
xchg
sbb
add
ja
in
jnp
push
cmp
inc
xchg
push
xchg
mov
les
fldl
add
jmp
mov
mov
or
push
jge,pn
clc
xor
cmpl
lahf
xchg
xchg
sbb
sbb
pcmpgtd
jbe
sbb
into
and
movsl
inc
xchg
mov
addl
adc
lahf
stc
movsb
push
cmpsl
pop
stos
push
adc
sbb
daa
je
movsb
xchg
dec
sub
fistps
adc
and
and
mov
outsl
jecxz
adc
movsb
mov
jg
pop
pop
xchg
cwtl
mov
test
movsl
pop
or
mov
xchg
mov
cltd
pop
shrl
adc
or
cmp
jns
sbb
pop
lea
andb
fistps
adc
dec
cmove
add
mov
xchg
cmpsb
inc
mov
pop
mov
sub
or
test
test
or
jle
and
xchg
mov
xor
sbb
in
or
xchg
mov
call
add
jp
icebp
cs
jne
adc
cwtl
jg
and
or
sbb
bound
xchg
aas
insl
movsl
test
cwtl
cmc
cmp
inc
pop
sub
mov
aam
in
icebp
cltd
pop
add
push
ret
enter
sbb
ds
or
sbb
sub
adc
adc
sti
pop
xchg
or
jle
mov
add
sub
add
inc
cmpsb
adc
cmp
xchg
xchg
js
popw
and
adc
and
sahf
pop
inc
cmpsl
xchg
xor
mov
gs
push
pop
ljmp
cltd
mov
or
daa
and
jne
adc
or
add
addr16
inc
imul
outsb
and
jl
stc
adc
xchg
mov
lds
cmc
xchg
adc
out
cmpsb
imul
lahf
sbbl
push
jno
lcall
adc
push
jne
pushf
rorb
add
cmp
sub
adc
add
rcr
xchg
or
xchg
add
ret
shrb
dec
lahf
mov
dec
jns
cmovl
mov
xchg
add
mov
imul
mov
lahf
loopne
pop
cld
or
addl
mov
cmp
and
mov
jg
cmpsl
push
xchg
mov
shrd
in
test
jns
or
shrl
aaa
and
sub
xchg
jae
imul
inc
aam
xor
es
mov
mov
pop
inc
xor
sbb
clc
pusha
or
loopne
pop
je
lcall
push
xor
add
imul
add
mov
roll
add
xchg
or
popf
ja
push
cmp
cmpb
add
mull
rcrl
into
add
or
enter
add
aas
fsubl
nop
les
mov
sbb
or
jae
out
inc
cltd
sti
mov
xchg
jno
mov
and
cltd
pop
fisubrs
cwtl
and
pop
add
into
loop
push
sbb
insb
gs
jb
mov
cwtl
daa
dec
das
cltd
pop
xchg
hlt
xor
and
sti
cmp
and
icebp
inc
add
ja
mov
jno
stos
or
out
sub
cwtl
mov
movl
inc
xchg
or
xchg
sbb
and
daa
and
inc
std
orb
cltd
xchg
mov
xchg
cmp
ljmp
adc
jg
cltd
inc
cmp
or
add
xor
mov
xor
mov
dec
cmpsb
mov
bound
fsubrl
mov
popf
test
es
push
js
xchg
les
push
pusha
fcompp
xchg
add
aas
adc
cmpsl
mov
inc
fwait
adc
adc
out
lods
mov
pop
sub
mov
cltd
cs
adc
sbb
sarl
xor
xchg
bound
or
fwait
adc
and
stos
sub
enter
and
ret
or
mov
cltd
adc
mov
pop
and
xchg
xchg
dec
movsl
cmpsl
test
dec
dec
pop
sbb
into
and
mov
xorl
cmp
sbb
push
mov
cmp
pushf
inc
jg
or
test
fwait
cmpsb
dec
push
imul
sub
test
pop
testl
lret
incl
push
pop
mov
cli
xchg
xor
and
inc
imul
pop
cltd
mov
xor
daa
mov
mov
or
mov
xchg
inc
sub
mov
mov
inc
add
jae
push
push
sbbl
sti
fstpt
xchg
sbb
popf
push
lret
lcall
sbb
pop
scas
mov
in
sti
or
pop
test
add
or
inc
xchg
stc
mov
sbb
push
push
sub
sub
sbb
outsl
lock
das
sarb
mov
or
add
mov
movb
sbb
or
adc
or
int
movsl
fldenv
aaa
out
aaa
mov
mov
mov
cmp
shll
aas
or
xor
mov
sti
jb
push
add
and
inc
sbb
mov
dec
add
dec
adc
pop
jle,pn
push
or
mov
outsl
dec
lahf
out
sar
xor
xchg
pusha
xor
cmc
sub
sti
filds
negb
mov
ja
mov
loop
adc
fwait
gs
pop
push
or
rcrl
mov
cltd
mov
or
movsbl
adc
xchg
xchg
xor
mov
jg
inc
adcb
pop
cs
pcmpeqb
cmp
adcb
adc
add
inc
cwtl
push
bound
nop
push
jle
cmpsl
cmpsb
stos
xor
cmpsl
ret
xchg
pop
or
pop
out
push
and
out
adc
cmp
adc
add
lods
push
xlat
loope
mov
pop
add
xchg
pop
or
xchg
cmpsl
add
xchg
add
adc
pop
xchg
lret
hlt
pop
stos
dec
insl
xor
xor
or
sahf
adcb
mov
cmc
adc
or
push
mov
jle
add
mov
arpl
sbbb
rorb
add
jbe
rcrb
pushf
add
xchg
dec
pop
lods
or
mov
sub
adc
mov
xchg
mov
cmpsb
lods
pop
push
inc
pop
sub
xor
fimull
pop
test
or
test
pop
in
lahf
mov
sbb
sbb
push
jg
scas
mov
loope
push
push
stos
or
add
xchg
aas
andl
inc
and
mov
xchg
decb
xchg
lret
mov
adc
or
jp
adc
cld
adc
mov
lret
pop
cltd
fldcw
xchg
mov
cmpsb
cmc
icebp
mov
dec
inc
sub
out
xchg
aam
scas
sbb
and
xchg
xchg
bound
adc
pop
rorb
sbb
sbb
adc
xchg
mov
pop
cltd
add
dec
and
push
xchg
add
mov
andb
mov
sub
test
push
adcl
cmp
or
in
inc
test
orl
test
outsb
jmp
xchg
adc
mov
add
vpmacsdql
cs
and
mov
test
or
adc
movsl
xchg
pop
or
lahf
mov
cmpsl
pop
jnp
add
repnz
orb
sbb
push
mov
mov
cmp
jne
ret
cmc
movsl
adc
mov
add
ficompl
inc
jno
sub
aaa
add
jg
mov
mov
and
test
je
mov
sbb
sub
cmc
add
fwait
imulb
sub
in
ja
orl
push
add
insb
fdivs
sub
jae
sbb
xor
imul
push
mov
outsl
or
ret
es
int3
sub
test
xchg
jbe
adc
cmpsb
xchg
test
or
fldt
adc
sbb
push
xor
hlt
adc
cmpsl
adc
sub
aas
insl
stos
adcl
jl
add
test
mov
mov
mov
sarl
pop
adc
js
xor
insb
mov
xor
incb
pop
mov
xchg
jg
or
test
cmpsb
adc
sbb
sahf
sbb
or
imulb
add
movsl
lahf
push
jbe
inc
mov
mov
cli
mov
or
je
cmp
sub
mov
jb
mov
sub
xor
cmp
pop
mov
mov
mov
push
out
mov
aaa
jmp
mov
or
xor
popa
or
stc
add
sahf
sub
cltd
and
inc
dec
jae
andb
pusha
and
in
mov
or
adc
xchg
and
notl
cmp
rorb
and
pop
xchg
lret
test
ficoms
sbb
mov
or
and
and
cmpsl
sbb
mov
outsb
jle
xchg
adc
sub
dec
mov
daa
or
or
nop
cs
sub
sbb
dec
push
xchg
pushf
cli
sbb
movsl
sti
stos
test
jne
nop
pop
and
mov
add
into
jle
testl
mov
mov
cmpsb
aaa
lods
adc
cmpsb
loop
sbb
jo
dec
cwtl
movb
pop
add
lods
push
xlat
xchg
stos
adc
test
imul
sbb
pop
sahf
push
popf
add
and
push
mov
test
mov
or
pop
push
adc
pop
pushf
mov
sahf
xchg
test
pushf
push
pop
pop
scas
dec
pushf
xor
jge
mov
and
ja
daa
mov
sahf
sbb
add
mov
cmpsl
xorb
fcoms
pop
pop
push
pop
dec
sahf
cmpsb
sbb
out
lret
sahf
xlat
mov
pop
push
pop
push
mov
mov
sub
and
sbb
add
fwait
adc
xchg
loopne
jle
and
stos
bound
adc
fs
and
adc
push
int
pop
push
stc
pop
ret
cld
mov
sub
sbb
push
movsl
add
loope
cli
pop
in
xor
inc
aas
nop
mov
pop
sahf
push
xor
fwait
mov
adc
adcb
jmp
and
pop
mov
inc
push
inc
xchg
call
sbb
pop
pushf
or
scas
aaa
push
mov
pop
pop
sub
adc
adc
xchg
adc
xchg
or
mov
fwait
jecxz
js
pminsw
add
pop
push
stos
test
xchg
sub
mov
sbb
mov
add
push
pop
out
or
add
xor
sbb
aaa
mov
add
xchg
mov
sahf
bound
movsl
fwait
add
std
iret
insb
out
sbb
pop
es
test
jge
cmp
xchg
addl
mov
dec
adc
pop
and
mov
xor
mov
xchg
out
mov
mov
or
nop
or
cmp
inc
sub
cli
ds
adc
xchg
sbb
les
inc
add
sbb
inc
pop
mov
pop
push
add
cmpsb
push
cmpsl
push
orl
es
movsl
jle
sahf
push
xchg
sub
inc
cmpsl
mov
into
mov
ficoml
loope
adc
pop
repnz
or
ret
cs
cwtl
or
pop
xchg
adc
xchg
push
insb
jb
dec
cltd
sbb
pop
xor
xchg
sub
xchg
rcll
sbb
sub
or
and
sbb
or
lcall
sbb
sbb
stos
mov
or
gs
es
scas
xchg
pop
inc
dec
mov
rcrl
pop
movsb
cltd
add
xorl
inc
nop
mov
and
xchg
adc
sbbb
push
inc
jb
inc
test
cmpsl
jbe
mov
inc
xchg
subb
add
shlb
mov
adc
or
je
cmp
test
add
fbstp
xchg
jne
jg
lahf
into
add
cmpsb
mov
sub
mov
cmp
daa
cwtl
xor
push
sub
sbb
mov
ss
cmpl
push
in
xchg
pop
inc
mov
adc
bound
mov
adc
mov
adc
in
xor
sti
mov
or
xchg
push
mov
push
dec
sub
fidivrs
sbb
jbe
push
lcall
lea
test
pop
outsl
arpl
pushf
clc
dec
mov
mov
xchg
mov
sub
add
push
orl
add
adc
jbe
cs
test
or
jmp
push
daa
sbb
jno
adc
sub
adc
mov
testl
xchg
pushf
int
pop
and
dec
test
sahf
movsl
jge
mov
ja
sbb
ret
fdivrs
cltd
jno
or
test
daa
mov
or
aaa
xchg
subl
adc
cmp
cmpsb
add
cmpsb
mov
pop
cwtl
jmp
xor
jle
adc
mov
mov
mov
enter
ja
adc
jb
cmpsl
ss
lret
cmp
pop
xchg
sub
xor
push
mov
lcall
pop
xor
adc
jle
mov
add
cli
shll
aas
outsl
pop
cwtl
mov
out
sbb
sbb
data16
xchg
jo
mov
sahf
test
adc
fwait
inc
jle
and
or
xchg
add
sbb
adc
dec
aas
add
cwtl
fcomip
mov
or
sbb
sub
inc
daa
cmp
mov
xchg
popl
in
pusha
xchg
push
sbb
mov
adc
sbb
mov
test
xor
pop
ret
fnsave
cmc
aaa
ficompl
shr
add
sbb
xchg
sahf
add
adc
sbb
or
xor
xchg
clc
lods
or
mov
scas
mov
dec
mov
adc
es
dec
adc
je
and
push
mov
notl
pop
stos
cmp
mov
dec
cmpsb
lods
mov
adc
mov
movsl
dec
and
sbb
or
andl
mov
add
stos
mov
add
mov
push
xchg
and
pop
inc
aam
pop
test
or
inc
dec
sahf
pop
repz
sbb
mov
rolb
stc
xor
xchg
xchg
mov
pusha
outsb
stc
pop
fidivrl
add
cs
hlt
je
push
pushf
outsl
pop
xchg
xchg
xchg
push
and
mov
lods
mov
inc
out
inc
xchg
out
stos
in
jb
lock
mov
xorb
inc
aaa
lahf
lcall
xchg
xchg
inc
mov
jp
add
sahf
out
xchg
adc
cmp
lahf
and
push
insl
lds
push
lcall
test
sbb
adc
pop
rorl
or
xlat
mov
stos
loope
sbb
mov
sbb
test
xor
into
rorb
mov
lahf
lret
mov
jno
add
push
or
pop
cmp
cmc
lods
js
repz
pop
mov
push
lahf
add
xor
mov
mov
jne
pop
xchg
dec
mov
dec
pushf
bound
lcall
adc
push
lea
mov
dec
imul
adc
mov
adc
push
pushf
insl
dec
lcall
lahf
mov
add
jbe
int
lret
and
cmpsb
popl
sbb
xchg
mov
or
and
mov
sbb
mov
and
adc
inc
mov
pop
xchg
add
adc
lcall
xchg
sub
sbb
sbb
cmpsb
xor
add
xchg
and
sbb
inc
ficoms
xchg
adc
push
mov
inc
push
lahf
fsubrp
and
push
fists
and
fidivs
xchg
outsb
jmp
add
adc
jg
sbb
xchg
shlb
mov
mov
xchg
loope
mov
sub
stos
xchg
popf
mov
lea
xor
xchg
pop
fcomps
push
cmpsb
pop
int3
std
lods
jl
cmpsl
fildl
lea
push
jno
pop
sbb
and
in
cmpsl
push
cmp
enter
sub
sbb
loope
lahf
cmpsb
push
pusha
test
mov
mov
or
sbb
add
mov
stos
inc
addr16
xor
fwait
movsl
xchg
add
lahf
xlat
adc
and
daa
cwtl
mov
dec
lea
push
sbb
or
inc
xchg
sbb
pushf
cmpsl
xchg
dec
adc
pop
add
mov
ds
cwtl
movsl
adc
add
mov
mov
sbb
push
es
std
pushf
sbb
cltd
cwtl
xchg
dec
sub
hlt
push
pop
xor
mov
mov
cmp
and
fldl
lret
dec
or
movsl
fwait
add
add
dec
add
sub
mov
movsl
and
mov
adc
sbb
aaa
fisttps
push
pop
inc
add
cmpsl
fidivrs
inc
xor
mov
sub
jle
sahf
mov
and
nop
adc
add
imul
mov
lahf
pop
sbbb
data16
or
cmp
cltd
hlt
push
cld
sbb
xchg
out
adc
pop
ds
adc
call
pop
mov
mov
adc
push
sub
xor
cmp
repz
fs
ds
adc
jae
stc
adc
and
loopne
push
xor
sub
xor
sarb
pusha
out
stc
sbb
sub
dec
mov
addl
sub
add
cmpsl
inc
pop
and
hlt
pop
lahf
sbb
sbb
repnz
fmuls
inc
cmpsb
leave
cmp
shll
sub
sarl
or
inc
mov
mov
add
es
outsl
lods
pop
fwait
dec
cwtl
sbb
sub
cs
pop
mov
cmp
adc
or
lret
sub
mov
lret
inc
pop
mov
adc
xchg
push
xor
xchg
mov
pushf
dec
push
lahf
push
xchg
adc
dec
sbb
hlt
ds
adc
pop
cmpsb
insb
sarb
sbb
dec
and
cmp
inc
sbb
adc
and
dec
aaa
adc
mov
mov
mov
addl
adc
into
notl
ja
or
mov
mov
xor
or
mov
cs
push
mov
sbb
adc
cmpsl
aas
call
xchg
lahf
mov
aas
xchg
xchg
mov
mov
shl
cmp
xchg
inc
or
and
lock
nop
shll
jns
or
iret
dec
lcall
aam
xchg
cmp
sub
mov
adc
adc
cmp
sbb
es
sbb
pop
aad
pop
or
ds
sub
mov
icebp
aas
pop
sahf
cwtl
mov
xor
inc
mov
adc
out
bound
mov
dec
rol
dec
daa
mov
jnp
xchg
inc
adc
mov
or
sbb
xchg
adc
adc
mov
popf
fs
sbb
and
addr16
aaa
cwtl
int
popa
cmpsl
mov
mov
xchg
sbb
adc
adc
pop
sub
cmpsl
ret
pushl
adc
or
cltd
fisubl
insl
add
lods
lahf
das
int
or
push
cltd
or
lea
fiadds
push
daa
add
pushf
and
call
push
xchg
daa
inc
data16
addb
faddl
push
sahf
jae
and
pop
std
adc
add
jge
mov
pop
sbb
hlt
js
cmp
and
sysenter
pushf
sbb
mov
out
mov
and
pusha
lahf
or
mov
xchg
sbb
cs
sbb
cmc
dec
add
movsl
mov
jmp
bound
inc
sahf
fwait
mov
or
lahf
sbb
test
xor
gs
inc
daa
out
cli
sub
mov
or
aaa
es
cmpsb
ss
mov
xchg
cltd
lods
daa
pop
stos
cli
xor
xchg
aad
jnp
pop
nop
add
test
mov
and
pop
pop
xor
cltd
inc
loopne
jle
setno
aaa
inc
pop
pop
add
xchg
nop
pop
adc
xchg
xchg
dec
jle
shll
jne
mov
pop
jno
ja
sbb
and
xchg
outsl
jmp
aas
notb
imul
ja
dec
jno
jnp
adc
add
or
mov
sbb
sbb
mov
fldcw
jae
add
xchg
adcl
into
pop
lods
inc
pop
sub
push
or
cmpsb
or
lods
xchg
mov
push
pop
sub
icebp
pop
jl
jle
cmpsl
or
sub
pop
das
adc
xchg
and
sbb
prefetch
movsb
sub
jb
cltd
dec
sbb
cltd
data16
pop
jg
les
cmp
test
inc
andl
push
adc
xchg
and
adc
or
sub
sbb
xor
aam
ret
add
mov
sbb
loopne
pop
stc
adc
loope
jge
sbb
stc
jb
add
es
cwtl
xchg
or
lcall
xlat
adc
popaw
xchg
sbb
pop
mov
nop
cwtl
cs
xchg
jns
push
test
or
cmp
sbb
xor
dec
mov
cmp
or
cmpsb
sbb
jecxz
xorl
fisubrl
cmpsb
ja
lret
sbb
outsb
xor
mov
mov
xor
push
in
and
or
shll
das
add
add
subb
xchg
sbb
inc
and
pop
test
lahf
mov
mov
add
cs
sbb
ffreep
mov
lret
stc
enter
adc
into
fstpt
enter
fs
sbb
jge
jb
mov
pop
mov
sbb
jb
loopne
pop
stc
jmp
sbb
inc
sbb
pusha
jecxz
vrsqrtss
sbbl
jp
and
push
out
mov
lods
stos
pop
mov
es
sub
daa
fdivl
ret
mov
cwtl
pop
into
lret
psrld
aaa
test
mov
sbb
leave
adc
mov
mov
and
cmp
hlt
arpl
or
mov
insb
cmp
sbb
call
mov
add
xchg
mov
dec
jge
mov
je
add
and
or
insb
mov
sub
xchg
jnp
and
insb
xor
mov
lcall
lcall
push
lds
push
subl
sub
fnsave
out
pop
pop
sub
add
or
cli
mov
mov
cwtl
add
into
stos
scas
outsb
sub
pop
sbb
aas
sbb
ljmp
adc
mov
nop
xchg
je
cmpsb
cmc
ret
push
pushfw
test
and
mov
cmpsb
and
inc
movsl
add
nop
ret
fistps
mov
adc
inc
xchg
inc
movl
mov
jg
add
pop
xchg
push
pop
add
or
mov
aaa
push
fwait
xor
ret
xchg
push
rclb
sbb
or
adcl
jbe
mov
pop
adc
xchg
or
int3
insl
aaa
es
cltd
add
mov
add
adc
xor
xor
adc
movsl
aas
push
add
xchg
scas
repnz
ud1
and
mov
cmpsl
cltd
inc
pop
xchg
mov
add
jbe
rorb
mov
xchg
loopne
jg
icebp
repnz
and
sbb
jb
mov
adc
adc
clc
int
ja
dec
add
push
lods
outsb
cmp
lcall
xchg
ds
lahf
jbe
movsb
xchg
mov
ror
jp,pt
sub
cs
adc
mov
rclb
mov
mov
lods
push
xor
andb
sbb
mov
push
aam
jl
mov
sub
shlb
mov
xor
cmpsl
sbb
xchg
into
sbb
and
cwtl
mov
sbb
arpl
shlb
sbb
cmp
nop
pop
cmp
int3
adcb
push
dec
adc
out
push
addl
pop
or
pop
xor
cs
jo
cs
push
or
jg
and
insb
adc
addb
lahf
mov
cltd
xchg
outsl
sbb
dec
pop
cwtl
push
cwtl
or
lods
lcall
jb
push
add
mov
lods
pop
and
addb
cmpsb
sbb
scas
cs
je
hlt
cltd
push
lahf
jbe
mov
shll
adcl
mov
dec
mov
andb
sub
aaa
xor
mov
je
xlat
cltd
push
insl
sarl
cltd
add
and
cmp
add
stos
mov
mov
mov
cltd
mov
adc
xchg
jb
lods
xchg
adc
cmpsb
mov
scas
add
mov
and
lds
mov
or
int3
je
cli
jg
mov
xor
icebp
filds
and
mov
mov
adc
cwtl
sub
jg
sub
mov
dec
xchg
push
daa
pop
mov
dec
adc
sub
lds
xor
add
lahf
sbb
push
pushf
sar
stos
out
sbb
push
lds
adc
xchg
es
sbb
fimuls
mov
push
sbb
inc
into
cmp
cmpsb
and
in
mov
and
loopne
dec
cmp
mov
mov
xchg
xchg
or
out
scas
push
jnp
adc
add
xchg
int
sahf
hlt
sbb
mov
xchg
adc
sbb
pop
inc
shlb
mov
or
add
mov
sarl
mov
sbb
inc
out
push
daa
dec
mov
inc
orl
xchg
add
mov
mov
hlt
inc
sbb
mov
nop
adc
daa
xchg
test
xchg
daa
je
popl
adc
cwtl
adc
sbb
cmpsb
and
xchg
aas
ret
sbb
lahf
jbe
jle
fwait
test
mov
sahf
sbbb
push
fidivs
adc
sbb
movsl
cmpsl
outsb
and
mov
stos
or
cli
xor
lds
fnsave
mov
adcl
mov
fs
bound
and
jge
cmpsb
dec
mov
add
or
mov
daa
add
insb
lods
sbb
sahf
bound
mov
pop
and
sbb
sbb
sbb
push
xchg
imul
xchg
mov
pop
dec
and
sub
mov
dec
mov
mov
into
loope
cmpsb
mov
incb
lcall
add
adc
push
push
or
pop
pop
jle
and
mov
ljmp
add
cmpsl
add
dec
mov
fists
rcrl
sbb
or
xchg
add
mov
or
dec
insl
sbb
data16
xchg
pusha
arpl
mov
add
mov
sahf
mov
xor
and
fincstp
test
add
and
and
xorb
xchg
jo
cmp
cwtd
nop
jmp
call
sbb
dec
sub
data16
aaa
outsb
sbb
jb,pn
adc
jbe
xchg
cmpsl
or
aad
adc
or
mov
adc
adc
xchg
adc
dec
test
mov
push
arpl
xchg
sub
mov
mov
dec
mov
xchg
aad
inc
xchg
cmpsl
dec
or
or
aam
dec
or
xor
or
pusha
push
mov
mov
add
je
dec
mov
movsl
lea
inc
pop
mov
je
push
sbb
test
jmp
mov
inc
xorb
lahf
in
mov
xor
sbb
divl
xchg
dec
xchg
pop
pop
cli
ja
addl
mov
mov
push
lahf
or
and
mov
fsts
mov
ljmp
or
inc
test
outsb
xor
cmpsb
sub
movsl
adc
xchg
rcrb
add
in
and
ret
sbb
fwait
mov
sub
pop
push
jb
jbe
jno
movsb
mov
aas
jbe
leave
es
xorb
cmpsl
add
aas
sbb
add
sahf
cmp
es
in
adc
adcl
jg
cmc
aas
sbb
add
dec
or
cmpsb
adc
out
add
mov
pusha
inc
pop
push
or
je
dec
sbb
adc
aaa
inc
sahf
and
cmp
xchg
mov
out
sbb
adcb
lcall
popf
pop
and
orl
jecxz
adc
movsl
sub
adc
or
mov
push
pop
or
add
mov
xor
cmp
adc
sbb
inc
jnp
int
enter
pop
sbb
add
sahf
add
ss
mov
enter
and
ds
mov
adc
cmp
mov
pushf
xchg
mov
ja
inc
ret
rcr
add
mov
inc
mulb
outsb
out
fwait
add
xor
movsl
push
inc
test
xor
sub
push
test
mov
mov
nopl
orb
arpl
leave
add
inc
jo
out
mov
or
cmp
fwait
mov
mov
inc
fistpll
lret
aad
aaa
ret
out
adc
inc
push
je
jbe
adc
sbb
xor
and
cmp
sbb
lods
sub
and
rorl
mov
cwtl
test
add
mov
stos
sahf
inc
insb
outsl
mov
fisubrs
sbb
lock
ret
jo
or
pop
dec
xchg
sbb
mov
lahf
pushf
xchg
mov
and
add
or
mov
sti
sub
push
leave
or
fisubl
hlt
cmpsl
sahf
and
inc
test
hlt
sbbb
add
or
xchg
xchg
pop
fldenv
call
add
mov
adc
add
icebp
add
and
add
jne
xchg
es
adc
jbe
xlat
sbb
push
add
xchg
sbb
push
jns
adc
cmpsl
dec
mov
adc
and
sbb
enter
pop
cli
loopne
mov
adc
pop
push
mov
mov
dec
add
mov
movsb
xor
cmpsl
ja
aaa
dec
lret
mov
inc
or
xchg
sbbl
loopne
push
jbe
jo
les
mov
jge
ljmp
and
nop
cltd
cmc
pop
adc
mov
aas
xchg
pushl
xchg
mov
mov
xchg
cltd
mov
xor
pop
sbb
outsb
andb
jb
aas
stos
mov
cmpsl
xchg
mov
and
inc
lret
sub
mov
icebp
pop
dec
aas
jg
cmpb
sub
out
lcall
xor
push
cmp
and
push
lods
data16
push
inc
pop
add
mov
les
push
xchg
add
xchg
jno
inc
movsl
shll
and
jle
lahf
stos
mov
je
cmp
filds
das
lcall
add
xor
inc
lcall
dec
xchg
inc
aaa
mov
sbb
subb
or
js
cld
add
sbb
test
mov
jle
lcall
jbe
movsb
pop
pushf
push
dec
int
sub
lcall
and
mov
movsl
adc
pop
inc
mov
mov
adc
gs
push
aaa
xchg
mov
adc
mov
les
mov
dec
adc
adc
repnz
daa
push
mov
rcrl
pop
dec
mov
insb
jb,pn
add
add
arpl
mov
xor
outsb
xchg
or
pop
xchg
lcall
inc
push
sub
or
add
push
aaa
mov
loop
filds
xlat
pop
std
and
mov
xor
sub
xor
leave
xchg
inc
mov
mov
cltd
add
mov
and
cld
dec
adc
xchg
sub
add
pop
sbb
mov
dec
js
rclb
push
or
add
add
js
rcrb
mov
daa
xor
adc
cmpsb
xchg
stos
nop
fsts
loope
sarl
fiaddl
jl
sbb
movsl
andb
sbb
stos
je
sbb
jp
js
fisttpl
sub
xor
xchg
mov
cmp
or
ljmp
negl
mov
sbb
xchg
mov
mov
xlat
bswap
xchg
push
sub
fidivl
mov
sbb
xchg
mov
add
mov
xchg
sub
mov
pop
mov
cmp
pop
and
fistps
shlb
lret
mov
adc
jns
xchg
or
xchg
or
mov
cmpsb
sbb
inc
daa
sub
xchg
xchg
aas
sbb
iret
fistpll
pop
adc
push
adc
jo
mov
cmp
pop
push
movsl
sbb
sbb
mov
xchg
or
into
sub
std
pop
cmp
or
cmpsb
ds
movhps
xor
movsl
pop
fistpl
icebp
sbb
jg
out
leave
and
mov
lcall
clc
addr16
and
sbb
lock
pop
add
dec
mov
mov
and
gs
jno
dec
lods
in
lret
sbb
loopne
fs
xchg
mov
jns
mov
cmp
cmp
inc
and
mov
test
leave
dec
popl
stc
sbb
ss
adc
es
sbb
xchg
repz
leave
mov
xchg
popl
les
mov
popf
push
insb
test
sub
loop
cwtl
pushf
and
and
or
xchg
int
add
mov
add
xchg
inc
sbb
inc
ljmp
mov
subps
imul
add
mov
and
inc
cwtl
inc
scas
inc
out
mov
sti
sbb
inc
das
je
sub
pop
jp
mov
mov
cwtl
sbb
adc
cmp
and
pop
aad
imul
and
adc
fwait
orb
xor
adc
sub
or
orb
inc
inc
cltd
inc
in
das
iret
insb
sub
fsubs
sbb
adc
jne
adc
in
call
lea
push
mov
cmpsb
stc
push
adc
mov
adc
mov
xor
insb
jnp
lahf
addr16
jno
repnz
mov
adc
int
or
jno
xor
aam
mov
inc
cltd
jg
or
sbb
sbb
adc
dec
aaa
xchg
jb
jg
or
lahf
and
or
lds
testl
inc
cmc
and
loopne
sbb
sub
add
mov
loope
mov
xchg
fistpll
filds
sub
dec
mov
mov
sbb
mov
xchg
lahf
xchg
pop
jl
mov
jle
or
test
xchg
sub
cld
jae
fwait
je
cmpsb
scas
adc
aad
int3
mov
mov
mov
scas
in
addr16
mov
mov
inc
fcmovnu
iret
adc
jbe
push
cmpsl
lret
dec
or
stos
push
mov
and
adcl
negb
add
pop
adc
adc
sahf
mov
xchg
adc
sub
test
gs
cs
das
lcall
imul
je
add
pop
add
cmp
adc
xchg
pop
and
or
cltd
mov
cmp
and
push
and
fisttpll
xchg
pop
inc
rclb
add
mov
ret
and
je
xchg
aad
fwait
inc
dec
std
sbb
add
cmpsl
hlt
lahf
inc
push
ficomps
adc
mov
cmp
sahf
scas
mov
mov
adc
pop
push
sub
fists
test
sbb
movl
jmp
pop
or
cli
lahf
add
inc
adc
test
xchg
sbb
mov
sub
jae
stos
xchg
adc
mov
sbb
add
xchg
pushf
loopne
push
mov
mov
xchg
mov
adcb
cmpsb
test
ret
sbb
jle
sahf
cltd
xchg
pushf
dec
aaa
dec
stos
in
jg
or
js
push
mov
les
inc
outsb
mov
enter
test
lods
leave
xchg
cmpsl
cmp
mov
bound
xchg
addb
sbb
push
or
adc
adc
popf
and
loope
sub
vmread
out
inc
rcll
xchg
into
sub
sti
daa
lcall
lcall
xchg
lcall
adc
ja
mov
xchg
fsubrs
shll
or
xlat
sub
cwtl
cli
push
add
sahf
sub
sbb
jle
pusha
and
sbb
inc
or
mov
in
stos
push
divb
ret
imul
push
jbe
xchg
lcall
arpl
cmp
push
andl
lcall
push
xor
fsubrl
mov
sahf
sbb
mov
sbb
push
stos
pop
or
je
andb
cmpsb
mov
jae
jp
push
mov
sbb
scas
pop
les
adc
adc
cmp
mov
sbb
mov
xchg
das
xchg
sbb
pop
rcrl
and
sub
bound
add
mov
lret
mov
iret
je
repnz
pop
and
push
jnp
pop
xchg
fiaddl
scas
and
add
ja
jle
mov
xchg
pop
sbb
mov
or
cmp
imul
adc
divl
fdivl
ficoml
sub
add
jl
cmpsb
jb
rorb
jl
aad
loope
add
es
pop
or
adc
jg
insl
pop
adc
pushf
js
lods
sahf
sbb
mov
xor
sub
adc
inc
int3
das
scas
popa
push
js
adc
mov
pop
subl
imul
hlt
lret
cmpsl
adcl
lret
fcoms
dec
jo
orb
xor
sbb
lahf
js
cmc
cmc
xchg
pop
scas
shrd
jo
mov
push
cmp
lret
repz
sub
cmpl
xlat
or
adc
sbb
sahf
in
dec
push
mov
clc
dec
stos
push
dec
pop
je
ljmp
sbb
rolb
fld
or
dec
fs
sub
stos
mov
sahf
fwait
test
jno
and
outsb
hlt
js
xchg
test
out
into
mov
mov
push
mov
cmpsb
mov
pop
and
xchg
setno
lea
dec
adc
dec
dec
mov
and
mov
mov
xchg
and
push
add
adc
xchg
dec
je
mov
imul
mov
sbb
adc
cltd
fists
push
mov
sti
movsl
mov
inc
push
push
mov
pushf
jnp
sahf
int3
mov
add
mov
sbb
arpl
je
add
or
mov
sbb
icebp
cmp
cmpsl
aas
adc
xchg
lahf
sub
mov
test
nop
push
push
test
sbb
xor
mov
mov
sbbl
icebp
adc
jno
and
je
sbb
dec
sub
cwtl
xchg
aam
insl
mov
xchg
stc
mov
push
xchg
sub
insl
xchg
xor
hlt
add
add
cmpsl
sbb
dec
or
mov
mov
add
lahf
lods
nop
or
cmp
fwait
pop
adc
dec
xchg
or
jo
lock
mov
orb
ret
loop
cmpsb
cwtl
inc
adc
scas
fs
out
sti
sbb
sub
xchg
movsl
or
adc
or
ret
jle
or
mov
and
pushf
adc
lcall
cmp
mov
mov
sbb
and
or
mov
dec
test
push
dec
push
lcall
repnz
clc
lcall
pop
mov
imul
sbb
and
mov
das
dec
adc
ret
xchg
lds
push
mov
xchg
mov
inc
pop
mov
jg
lcall
mov
or
test
pop
sbb
sbb
dec
xor
cmp
and
mov
sar
jno
cmpsl
psrlq
inc
xchg
mov
jl
mov
jl
clc
lock
adc
je
pushf
sbb
cmpsb
or
lcall
or
test
mov
stos
sbb
es
sbb
add
mov
call
imul
in
enter
nop
xor
add
sub
or
adcl
adc
les
or
xchg
xchg
aas
adc
daa
pop
jl
adc
add
pop
sahf
push
push
push
or
mov
add
pop
aaa
aam
in
sub
jno
push
xor
mov
mov
pop
rolb
ret
and
xchg
test
ficoml
cmc
xor
jo
xor
xor
mov
jb
jne
sahf
imul
add
lcall
push
addr16
add
pop
lods
add
or
or
adc
or
jge
aaa
cmp
stos
adc
and
cmp
and
jge
sbb
jl
pop
sbb
fwait
or
xchg
sbb
dec
imul
add
in
data16
lds
mov
loope
adc
jne
les
cmp
and
and
mov
add
lods
or
je
sub
add
pushf
nop
xlat
cmp
aaa
adc
daa
adc
add
insb
sbb
mov
les
dec
sub
add
xchg
aad
pop
ds
subb
and
push
insb
lods
mov
fiaddl
jnp
or
popl
mov
cmpsb
loope
push
es
call
test
cmpsb
xchg
add
mov
mov
pop
jbe
mov
push
xorb
mov
push
movsl
clc
pop
jle
adc
push
stos
mov
or
push
pop
sub
xchg
repnz
mov
add
popf
xchg
mov
lret
or
nop
sbb
inc
fistps
imul
mov
xchg
dec
push
sbb
ja
and
and
push
adc
mov
or
push
pushf
dec
jbe
loope
dec
and
pop
push
sub
cmp
push
mov
xchg
out
add
push
pop
mov
pop
test
xchg
sbbl
sbb
pop
cwtl
movsl
push
push
int3
push
out
movsl
stos
xchg
and
fadd
push
sti
mov
enter
jle
sbb
pushf
inc
xchg
ret
push
xchg
jne
pop
test
pop
lcall
je
popa
flds
cwtl
mov
loope
sti
shlb
cmp
sbbb
xchg
mov
mov
cmpsl
mov
pushf
adc
dec
loop
inc
and
pop
or
int
negb
mov
cmpsb
sbb
add
fwait
inc
subb
in
add
std
bound
roll
and
mov
cmp
cltd
es
insb
jo
mov
or
xchg
xchg
movsl
mov
mov
fildl
jns
pop
add
sub
mov
sbb
stc
jle
inc
lret
mov
sbb
push
ficompl
mov
push
rcrl
ret
adc
iret
int
adcb
movsl
mov
aaa
mov
outsl
ficompl
call
ficoml
nop
mov
or
iret
sub
cmpsl
mov
stos
mov
pop
and
out
add
mov
mov
arpl
xor
daa
es
xor
pop
out
clc
xchg
mov
inc
sub
jno
xchg
xor
sub
movsl
mov
mov
cld
fwait
or
jp
mov
movsl
adc
xchg
cmpsl
jne
and
lods
xchg
push
dec
and
sub
clc
add
popl
pop
mov
hlt
sub
xor
sub
push
movsl
adc
dec
cwtl
movsl
adc
popa
push
fisubl
or
cmc
pop
adc
pcmpeqb
insb
dec
adc
out
in
and
adc
scas
mov
mov
push
test
es
pushf
add
bound
jb
sub
stos
pop
mov
cmp
add
in
add
add
or
and
add
fisttps
mov
sbb
fwait
or
lcall
jg
mov
lahf
lods
dec
fsts
fsts
mov
add
idivb
adc
sbb
sub
test
mov
lfs
lahf
or
outsl
rclb
sahf
adcb
sti
btc
int
ret
stos
push
inc
xchg
aaa
test
inc
xlat
adc
daa
test
xlat
sub
add
pop
mov
mov
sbb
adc
fwait
arpl
mov
adc
dec
inc
and
nop
pop
xchg
daa
adc
jb
movsl
pushf
cmpsl
pop
adcl
xchg
cltd
adc
add
xchg
sub
mov
mov
cltd
daa
or
mov
or
bound
mov
xchg
or
mov
cwtl
jl
adc
add
mov
adc
fldt
adc
sahf
pop
int
je
push
xor
dec
jg
fwait
xchg
add
movsb
jae
or
sahf
add
adc
mov
mov
iret
vmovhps
push
dec
sbb
xchg
mov
sbb
push
pop
es
int3
insb
je
sub
mov
stc
loope
jmp
dec
sbb
xor
push
adc
std
fistpll
fildll
xchg
shl
xchg
xchg
aaa
and
addl
cltd
stos
loopne
stc
push
lds
aaa
sbb
aas
andb
int
xchg
lock
cs
cltd
push
sbb
push
sbb
adc
pop
rcrb
sti
mov
push
sbb
jb
inc
mov
inc
xchg
pop
sbb
jbe
jbe
out
fmull
mov
adcl
add
mov
lods
sahf
in
subb
adc
cwtl
cmc
mov
xor
mov
push
push
sub
adc
jmp
sbb
sbb
xchg
xchg
pop
lahf
movhps
ja
jge
out
fcompl
mov
xchg
test
movsb
and
mov
xor
cwtl
cmc
jg
sbb
stc
mov
cmpb
mov
xchg
cwtl
sub
mov
lgs
push
les
mov
adc
xchg
and
mov
mov
std
dec
cwtl
xorl
inc
mov
mov
xchg
and
mov
mov
push
cmpsl
bound
nop
cltd
or
jp
push
scas
push
jge
push
mov
xchg
xor
mov
mov
mov
adc
data16
movsb
adc
mov
or
out
insb
mov
xchg
xor
in
aas
cltd
pop
sbb
stos
dec
inc
mov
sar
xchg
mov
mov
pop
jae
or
inc
push
push
xchg
shll
ja
jb
push
adc
pop
jmp
fidivl
mov
pushf
xchg
push
mov
mov
push
mov
mov
nop
mov
orb
or
stc
ret
xchg
je
es
adc
fimull
jne
mov
cs
sbb
mov
cltd
adc
or
pop
xchg
pushf
pop
mov
jb
data16
lcallw
pop
jl
cmp
mov
mov
test
daa
sbb
scas
and
mov
sti
lahf
cwtl
or
int
xor
jecxz
cmpsl
sub
into
pop
lahf
pusha
nop
pop
popf
mov
cmpsb
add
out
mov
jmp
cmp
add
imul
outsb
sahf
ss
vpcmpeqb
xchg
inc
sub
mov
xor
cmpsb
test
push
int3
mov
jb
inc
xchg
adc
movsl
int3
pushf
and
dec
jg
and
sahf
or
pop
push
stc
xchg
mov
je
into
inc
sbb
iret
add
mov
adcb
xchg
fildl
push
or
and
mov
or
mov
mov
pop
cmp
or
or
or
xchg
in
or
xchg
lret
sbb
clc
xchg
or
and
movsl
push
and
call
mov
sub
mov
sbb
adc
pop
adc
sbb
mov
xchg
and
mov
aas
aad
iret
xchg
test
sub
mov
mov
xchg
pushf
adc
movsl
stos
and
push
pop
adc
xchg
adc
mov
sbb
adc
aaa
add
cmp
add
add
aaa
hlt
mov
xchg
xchg
push
and
lock
adc
sbb
mov
inc
in
adc
lret
push
cmp
cmpsl
test
mov
sub
lods
add
popf
fstpl
adc
jmp
adc
push
stos
or
rcrb
sub
inc
lods
or
and
lss
sbb
stos
sub
xor
or
cmp
shrl
lods
es
and
test
fsubrl
pop
sub
xchg
pop
push
mov
nop
and
daa
mov
sbb
sbb
sbb
inc
ret
stos
daa
sbb
mov
adc
sub
pushw
pop
cmp
mov
pop
lods
and
adc
popa
jae
lcall
mov
and
call
and
test
sbb
mov
xchg
shlb
or
ds
or
adc
pop
sbb
fwait
sbb
adcb
cmpb
mov
sbb
lahf
repnz
cmpsl
mov
sub
add
shlb
push
or
je
mov
adc
mov
insb
fsts
shlb
push
lods
pop
lahf
adc
sub
loopne
and
test
pushf
pushf
cmp
fcompl
pop
mov
inc
push
xchg
out
dec
and
push
imul
daa
lcall
mov
out
or
and
jge
mov
out
xchg
inc
jb
sbb
inc
xchg
sbb
mov
cmpsl
and
dec
bound
pop
in
popf
or
je
pop
data16
add
sahf
jl
or
sbb
mov
xchg
xchg
dec
or
pop
fldl
xlat
jne
mov
or
outsb
add
pop
cmp
add
or
or
xor
adc
push
adc
mov
pop
ja
or
sti
jle
pop
daa
push
inc
xchg
mov
and
mov
xchg
sbb
push
lcall
nop
pop
test
dec
mov
add
cmp
or
sbb
movsb
sbb
bound
and
mov
push
add
pop
inc
fiaddl
push
hlt
mov
in
mov
adc
jecxz
jge
jns
or
cmpsl
add
cmpsb
je
sbb
sbb
mov
sar
mov
jae
sbb
cmc
inc
icebp
cmp
jge
hlt
pop
bound
pop
cmpsb
aaa
mov
and
mov
add
mov
adc
cltd
test
mov
mov
sbb
xchg
pop
and
or
sbb
ret
movsb
adc
sbb
addb
stc
data16
mov
adc
mov
aas
dec
or
in
and
inc
inc
incb
fwait
or
xor
cmp
inc
or
mov
sbb
stos
test
pop
sbb
jge
sbb
movsl
lahf
push
cs
orb
cmp
push
adc
aaa
pushf
sbb
pop
add
lcall
sti
in
xchg
adc
repnz
and
xchg
xor
xchg
pop
sbb
inc
out
int3
mov
out
subb
mov
cwtl
and
aas
or
dec
mov
divl
inc
adc
in
xchg
xchg
hlt
lahf
jo
sbb
mov
jne
add
sti
or
out
push
or
inc
adc
xor
pop
sbb
es
pop
adc
or
sub
das
and
pushf
pop
jns
aas
sub
and
adc
adc
xchg
add
mov
movsl
xchg
and
push
xorl
jecxz
cmpsl
daa
add
gs
cmpsb
xchg
jbe
test
mov
mov
test
push
orl
mov
fnstsw
lahf
sbb
test
pushf
jae
dec
adc
mov
push
or
jb
adc
call
mov
into
add
adc
xchg
cmpsl
imull
pop
mov
mov
clc
pop
sahf
xchg
push
mov
outsb
sub
xchg
xor
mov
push
add
stos
pop
push
adc
daa
cmp
cmp
add
enterw
xor
xchg
and
adc
xchg
fmull
sbb
adc
push
mov
push
inc
mov
addw
or
nop
in
cltd
mov
daa
sahf
movsl
mov
cmp
inc
cltd
push
mov
mov
cli
es
pop
dec
sbb
sub
icebp
cmpsb
dec
xchg
push
adc
mov
adc
add
bts
sbb
decb
sub
mov
pop
cmpsb
xor
xchg
xchg
jle
sbb
add
cli
and
shll
je
cwtl
pop
js
into
mov
mov
jmp
fdivs
sub
jmp
sbb
ja
or
add
and
inc
cmpsl
inc
stos
jae
jbe
jb
mov
daa
sbb
ret
popl
incl
loopne
stc
xchg
loop
cli
inc
dec
sub
mov
sub
fimuls
lret
adc
pop
mov
lock
pushf
je
inc
sahf
inc
pop
xor
jge
and
sbb
push
rcrl
adc
mov
push
cwtl
lcall
gs
cmp
xchg
and
mov
push
and
or
add
sbb
xchg
aas
mov
sub
loope
es
test
dec
xor
inc
js
mov
sub
movsl
and
sub
les
in
add
add
inc
std
mov
mov
xchg
and
sub
xchg
pop
pop
mov
xchg
sbb
pop
mov
outsb
cld
adc
or
adc
add
sub
outsl
xchg
jl
push
cwtl
add
jbe
jg
stos
std
add
mov
inc
and
aas
pop
or
or
je
push
out
pop
lahf
jmp
lods
mov
sub
inc
adc
mov
dec
xchg
jb
lea
mov
inc
sbb
cmc
sbb
loope
nop
xchg
arpl
imul
pusha
xchg
outsb
add
daa
dec
sub
mov
push
push
sub
outsl
sbb
mov
daa
in
add
push
adc
scas
das
mov
iret
cmp
push
jle
xchg
test
sbb
add
insb
and
push
lcall
nop
jbe
repnz
aad
mov
mov
inc
lahf
and
xchg
dec
xchg
nop
cmp
mov
imul
call
mov
ficompl
bound
pop
adc
add
mov
xchg
fs
pop
xor
or
insl
test
stos
lret
adc
ljmp
mov
test
fisttps
je
loopne
pop
adc
xchg
cld
pusha
cmp
mov
aas
je
inc
sbb
pop
add
cli
inc
mov
add
pop
and
dec
sbb
je
or
nop
int3
sub
jne
dec
mov
fnsave
gs
jl
pop
cli
pop
or
shlb
stos
enter
adc
mov
subb
or
mov
jno
in
push
add
cwtl
andl
inc
xchg
dec
je
mov
lods
rclb
mov
dec
push
push
fiaddl
inc
push
pop
inc
jge
sub
pop
scas
dec
test
and
nop
pop
mov
inc
fistps
cmpsl
mov
push
fistpl
cli
repnz
mov
enter
xor
inc
xor
daa
sbb
pop
mov
xor
xor
mov
dec
mov
pop
bound
sahf
sub
repz
lret
add
out
cmp
xchg
mov
inc
xchg
icebp
adc
lcall
lea
adc
pop
mov
mov
xchg
mov
test
stos
mov
cmpsb
jns
xchg
push
dec
fwait
inc
add
dec
fisttpll
adc
lret
xor
cmp
test
cs
add
nop
mov
stc
cmpsb
push
cwtl
adc
adc
js
hlt
adc
xchg
push
pop
cmp
and
add
and
sahf
add
cmpsl
iret
test
and
loopne
mov
test
mov
or
mov
inc
jge
addb
and
sarl
bound
and
dec
sbb
inc
add
mov
mov
sbb
sbb
cmpsb
sbb
xchg
sub
pop
shll
cwtl
lahf
pop
jo
adc
lcall
mov
xchg
or
mov
into
cltd
enter
cmpsl
call
sbb
movsl
lahf
dec
xor
sbb
mov
jg
test
sbb
mov
cmp
xor
mov
pushf
cmp
pop
mov
or
add
or
fwait
sbb
mov
lahf
jo
loop
xchg
push
xchg
dec
lods
adc
pop
ud0
mov
xor
adc
cwtl
inc
xchg
jge
jno
sub
mov
adc
adc
outsl
ret
push
inc
sub
ds
sbb
pop
mov
add
xchg
mov
mov
jns,pt
and
mov
adc
mov
lret
nop
xchg
scas
dec
lret
add
and
mov
ucomiss
jb
adcl
and
or
xchg
les
iret
daa
mov
es
sbb
xchg
mov
adc
ret
daa
mov
orb
push
cwtl
test
or
sub
xchg
sbb
adc
push
sti
rcr
cmp
movsb
mov
aaa
in
lea
xchg
cmpsb
or
push
or
xchg
mov
in
xchg
push
dec
adcb
inc
push
out
hlt
in
sbb
cmp
adc
adc
sbb
hlt
fiadds
test
outsb
mov
rclb
or
adc
add
inc
mov
es
mov
inc
or
or
xchg
adcb
mov
and
cmp
pop
mov
xchg
mov
push
enter
add
add
mov
lahf
mov
aaa
add
mov
es
or
pop
je
sbb
or
mov
test
cwtl
aam
jo
sbb
dec
mov
mov
sbb
repz
mov
pop
sbb
loopne
push
nop
int3
dec
mov
sbb
and
sub
ud1
adc
sub
inc
pop
adc
pop
sub
add
scas
pop
add
enter
mov
mov
fstpl
adc
lods
lcall
fmull
xchg
xchg
adc
scas
daa
push
push
test
add
sub
mov
xchg
lahf
subl
or
push
dec
mov
adc
xor
cltd
sbb
xchg
sub
into
addr16
add
daa
pop
pop
js
push
pushf
mov
sub
xchg
movsb
pop
mov
leave
shl
dec
aaa
mov
lds
daa
xchg
mov
stos
sbb
mov
xchg
or
xchg
jbe
cmp
mov
test
cmp
mov
mov
lcall
mov
push
push
cmp
add
cmpsl
scas
xor
pop
nop
and
pusha
jnp
pop
test
jle
mov
pop
outsl
push
push
pop
mov
push
mov
lcall
cmc
adc
in
mov
or
cmp
outsl
inc
pop
add
sbb
push
sbb
mov
aaa
mov
sbb
aas
xor
cmpsb
lods
inc
jl
insl
push
add
xor
movsl
add
lods
or
inc
sbb
add
in
in
adc
adc
pushf
stos
xchg
and
rclb
cmp
ljmp
and
pop
add
xchg
push
mov
fcompl
addl
mov
add
push
adc
add
mov
add
dec
in
jns
setbe
adc
xor
mov
adc
and
pop
or
inc
xchg
xchg
mov
test
pop
adc
mov
adc
jp
xchg
outsb
push
pop
xchg
loope
dec
xor
subb
in
jp
dec
rclb
adc
cli
fiadds
inc
adc
jg
nop
lahf
bound
test
sub
movsl
add
xor
inc
sub
and
jl
fs
inc
adc
and
jg
or
sub
jno
adc
jb
lret
adc
xor
jg
sahf
cmovnp
in
lcall
mov
xchg
mov
sub
mov
pop
inc
xchg
bound
xchg
test
adc
mov
adc
mov
cwtl
movsb
push
cmp
adc
sahf
cld
xchg
add
pop
adc
ljmp
cmpl
push
mov
cmpsb
mov
add
mov
sbb
mov
xchg
adc
or
xorl
subb
mov
sbb
jge
inc
add
or
loope
in
and
stos
add
adc
xchg
ret
push
mov
adc
xchg
and
or
pop
mov
cltd
movsb
adc
test
scas
mov
stc
jb
icebp
push
push
lret
ret
or
test
mov
inc
andb
sbb
mov
outsb
test
in
aaa
add
test
push
pushf
mov
dec
iret
push
pop
sbb
inc
lds
adc
dec
outsb
or
sahf
jbe
sub
and
nop
je
fisttpl
push
pop
mov
dec
mov
xchg
inc
js
fisttpl
aam
mov
sbb
cmp
mov
xor
sub
arpl
xchg
outsl
fistps
stos
nop
add
cmp
mov
adc
sbb
rolb
pop
lds
popa
ja
stos
cmpsb
aad
pop
xor
or
pop
sti
push
fistpll
push
dec
test
mov
and
ret
xor
sbb
and
or
sbb
loopne
mov
sbb
cmpsb
daa
adc
leave
lods
jmp
push
sbb
add
pop
xchg
fildll
out
pop
push
out
sub
inc
mov
movsl
jge
mov
psubb
cwtl
and
add
mov
inc
jns
add
xor
mov
add
push
mov
inc
sub
adc
ds
cmpsb
lahf
fwait
and
adc
xchg
mov
cli
lods
adcb
jo
enter
jbe
iret
push
inc
adc
and
movhps
add
getsec
xchg
sub
jge
aaa
cltd
xchg
xchg
inc
shrb
xlat
mov
and
mov
je
xor
jg
std
cmp
cli
push
fs
dec
outsb
fbld
hlt
jle
xchg
add
adc
mov
sub
mov
cmc
sbb
mov
sahf
mov
dec
xchg
test
inc
cmp
xchg
push
mov
add
pop
out
mov
sub
pop
dec
sub
aas
sbbb
pop
jb
dec
add
cs
out
aaa
mov
or
outsl
mov
addb
pop
or
pop
movlps
or
pusha
or
lcall
or
pop
outsl
mov
femms
mov
sbb
fwait
xchg
ss
je
adc
and
ja
sub
push
in
lcall
mov
add
jo
or
adc
sub
pop
mov
fsts
and
filds
lahf
sub
and
lods
xchg
mov
stc
lds
sbbb
shl
adc
jl
cltd
xor
and
add
sub
shrl
cwtl
fs
mov
xor
add
sbb
mov
popa
adc
cwtl
loope
cmc
jbe
cmp
pushf
push
ds
cwtl
test
pop
xchg
xchg
inc
movsl
loope
ret
mov
cli
jns
fcoms
aad
aas
xchg
out
je
mov
adc
sbb
xchg
lods
jne
andl
fwait
sahf
fidivs
push
mov
cmp
pop
or
dec
mov
xchg
mov
loope
inc
test
add
pop
loopne
inc
rorl
pop
pop
lds
or
dec
fdivs
mov
xor
pop
jle,pn
adc
jle
add
int3
add
into
jg
mov
xchg
clc
jne
lret
push
jg
movsl
adc
pop
bound
js
ja
aaa
inc
ret
test
daa
mov
jb
adc
inc
movsb
adc
push
xchg
pop
xchg
test
cltd
xchg
pop
xchg
add
imul
loopne
data16
xlat
int3
jle
add
push
jge
test
or
lahf
cmp
fisubrs
xchg
loopne
sbb
xor
adc
jae
or
xchg
mov
fistpll
or
test
stos
cwtl
dec
adc
sarl
ja
push
or
xchg
sbb
push
push
or
jbe
test
lods
lock
icebp
imul
sbb
push
andb
in
add
cwtl
sub
daa
mov
add
and
xchg
and
adc
add
outsl
inc
sbb
and
lcall
push
scas
adc
pushf
cltd
cmp
bound
adc
mov
mov
aaa
or
push
xor
xchg
or
pop
lret
inc
jmp
adc
push
andb
ret
cs
and
mov
pop
mov
stos
cltd
push
add
push
je
mov
mov
stc
mov
xchg
mov
or
inc
cs
xchg
fldcw
mov
sbb
popa
push
setbe
sub
jb
mov
xchg
insb
arpl
test
inc
xorb
cmpsl
and
test
add
daa
jb
sbb
int
mov
adc
push
popa
push
stos
push
or
xor
xchg
sbb
adc
jns
and
lahf
or
pop
loopne
lods
mov
xor
add
jg
add
cwtl
pop
or
dec
in
jmp
mov
jmp
mov
nop
sbb
decl
leave
mov
cmc
adc
mov
fisubl
or
cmpsb
add
xor
add
das
cmp
test
sahf
sub
out
je
adc
pusha
cmpsb
adc
sbb
mov
lcall
or
add
pop
sahf
test
jecxz
test
mov
mov
mov
xchg
stos
or
lods
xor
pushf
push
sub
pop
xchg
sbb
xor
mov
sbb
mov
andl
addr16
and
mov
mov
or
or
or
xlat
sbb
lods
sbbl
cli
adc
and
and
and
daa
push
pop
cmp
xchg
sbb
sub
mov
sbbb
fists
insb
add
sbb
insl
xor
insl
mov
aaa
scas
xor
mov
mov
es
mov
pop
aam
pop
iret
mov
sbb
lds
jo
lds
add
or
lcall
sbb
in
mov
and
lahf
pop
sub
cmp
and
xchg
cmp
cltd
sub
mov
add
lcall
sbb
add
mov
stos
js
pop
mov
sahf
rorb
or
rclb
fwait
sbb
push
addr16
adc
jge
jb
jb
sbb
andl
stos
xor
mov
incb
sbb
push
jmp
rcrl
je
adc
or
sbb
mov
shl
push
into
frstor
mov
pop
sti
cmc
xchg
in
jno
test
scas
aas
push
stos
fwait
and
stos
jmp
xchg
sbb
add
mov
xor
push
adc
test
cmc
inc
int
insl
mov
out
loope
pop
lahf
ror
mov
xchg
push
cmc
mov
mov
sbbl
aaa
add
pushf
aas
dec
adc
cmpsb
push
inc
iret
push
lahf
push
enter
adcb
push
mov
xchg
xchg
or
xor
jecxz
es
mov
loop
stos
pushf
jge
pusha
fwait
mov
sbb
jb
dec
add
xor
adc
pop
adc
nop
icebp
dec
adc
sbb
frstor
adc
or
mov
add
std
mov
jle
sar
clc
jno
jo
sbb
adc
rclb
inc
pop
hlt
xchg
lret
pop
psrlw
cmp
add
add
xchg
dec
xor
aaa
xchg
xchg
xchg
mov
mov
mov
and
test
es
pop
testb
sahf
jne
scas
lds
scas
cwtl
push
mov
xchg
sub
movsl
adc
cmpb
arpl
push
lods
mov
aaa
cs
das
cltd
and
jle
or
sbb
pusha
dec
fbld
je
ljmp
enter
sbb
pop
xorb
xor
sbb
jb
push
pop
push
sub
xchg
stos
lock
lahf
and
and
sub
or
xchg
jg
pop
adc
test
pop
and
cwtl
cmp
pop
into
add
es
fwait
or
mov
imul
xchg
test
or
sbb
mov
cmp
pop
rorb
shlb
push
mov
cmp
xchg
jmp
sbb
outsl
fwait
sti
scas
xor
adc
mov
and
xchg
or
mov
mov
or
adc
or
push
and
pop
cltd
xor
adc
and
and
sahf
cmc
mov
adc
and
mov
sbb
sub
adc
mov
fs
jle
mov
or
dec
ds
mov
inc
stc
push
xchg
hlt
mull
mov
es
xchg
sbb
test
or
adc
stc
jno
and
add
and
or
sbb
cwtl
and
flds
add
add
dec
jbe
push
jbe
test
or
jp
dec
jb
lcall
std
test
call
outsb
sbb
jg
or
push
push
inc
mov
and
pushf
add
mov
fs
mov
push
fbstp
push
mov
aaa
daa
add
fwait
aas
sbb
mov
push
xor
sti
mov
lahf
push
adc
in
test
and
lcall
stos
cmp
pop
mov
jge
jne
negb
out
lods
je
out
negb
je
mov
jge
push
sbb
sub
pop
xchg
mov
sub
push
sbb
mov
stos
aas
or
xchg
es
or
fdivrp
sahf
push
mov
sbb
sub
cmpb
lcall
pusha
insb
loope
adcb
jmp
mov
add
mov
xchg
push
sbb
aaa
xchg
xchg
or
les
xchg
add
add
jle
or
lret
les
push
rcll
fildl
insb
pop
jg
movsb
movsl
push
sub
mov
arpl
adc
or
add
arpl
push
inc
sub
mov
mov
cmpsb
xor
pop
mov
mov
and
fs
mov
shrb
adc
xor
adc
scas
xchg
cmpsl
pop
xchg
jne
mov
subb
stc
jge
nop
add
push
inc
jb
dec
cmpsl
imul
ljmp
dec
mov
test
or
xchg
mov
add
cltd
clc
roll
xor
pop
adc
cmp
sahf
sahf
cmpsb
fmull
es
pop
dec
adc
popf
mov
stc
test
push
cld
ss
icebp
mov
inc
outsb
sbb
repz
dec
outsb
fists
test
mov
iret
es
movsb
xchg
pop
and
xor
push
rclb
xchg
mov
mov
in
inc
dec
add
mov
pop
xchg
jne
add
adc
mov
mov
int3
je
add
mov
daa
and
push
mov
fists
jge
data16
cmp
add
xor
pop
xor
xchg
push
test
adc
sbb
dec
dec
iret
nop
jbe
pop
das
cltd
sahf
out
shll
xchg
fisubs
pop
pop
adc
sub
rclb
sbb
lds
daa
and
cwtl
dec
mov
mov
xor
or
sbb
adc
outsb
cmp
clc
mov
or
lahf
setbe
iret
dec
mov
push
sbbl
bsf
pop
pop
nop
and
mov
push
lods
adc
loop
xchg
lcall
popl
and
xor
mov
sbb
push
xor
mov
mov
mov
xchg
fwait
cmp
test
cwtl
mov
jmp
je
cs
imul
cltd
add
sbb
fwait
xor
pop
or
leave
loope
push
lret
push
or
sbb
fisubs
push
add
mov
adc
jge
mov
sbb
cwtl
mov
pop
mov
push
sub
hlt
cmc
daa
xchg
sbb
cmp
mov
xchg
test
js
fwait
lcall
pushf
mov
hlt
fiadds
daa
adc
rcll
cmpsl
jb
aaa
xchg
sbb
aaa
push
aas
add
or
dec
sub
xchg
mov
jge
mov
add
push
je
jg
sub
xchg
movzbl
xchg
add
pusha
add
or
xchg
pop
mov
and
xor
nop
or
lods
leave
jl
mov
or
jno
test
jne
imul
je
jns
imul
or
cmpsb
xchg
mov
idiv
out
and
add
lahf
mov
inc
or
pop
adc
es
cmp
mov
andb
mov
sbb
mov
pushf
or
fisubs
inc
lcall
jbe
jb
pop
pop
cmpsl
sahf
mov
cmpsb
lret
jae
xchg
sub
mov
push
fs
and
pop
inc
dec
push
call
int3
or
adc
mov
jg
xchg
hlt
dec
xchg
inc
sub
sbb
or
adc
push
xor
mov
arpl
adc
adcb
test
cmp
ljmp
mov
cmp
jb
push
mov
popa
and
adc
or
cmpsb
test
mov
push
jb
and
sub
sahf
xorb
or
cwtl
mov
arpl
inc
push
test
sbb
out
out
mov
fistl
adc
xchg
orl
in
sbb
imul
mov
pop
loop
xchg
popa
flds
add
test
cwtl
adc
adc
push
test
adc
jmp
sahf
clc
xor
rcrl
popf
sbbb
loopew
popa
cltd
pop
cmpsl
pusha
push
adc
inc
or
mov
dec
and
or
xchg
xchg
add
cld
inc
pushf
xchg
mov
nop
xchg
cmp
or
pushf
fwait
mov
es
mov
cwtl
add
mov
mov
sbb
scas
mov
pop
int3
cltd
out
je
mov
jno
jge
mov
sahf
je
xor
test
sub
jg
sub
cmc
pop
and
in
sbb
push
mov
push
lods
mov
push
adc
cmp
mov
push
or
les
gs
mov
pop
int
mov
out
aaa
dec
inc
out
mov
pop
pop
mov
test
mov
adc
add
lcall
inc
pushf
mov
aaa
add
test
add
xor
mov
mov
mov
add
xchg
fldcw
add
out
and
ret
jo
mov
das
les
pop
sbb
lea
es
mov
nop
sub
cltd
jns
add
and
mov
mov
push
xor
add
fdivl
push
lods
test
mov
mov
adc
addr16
or
or
add
sbb
iret
cltd
jl
sahf
xchg
mov
adc
cmpsb
xchg
cmpsl
push
push
or
in
adc
lret
scas
stos
inc
sbbl
pop
and
inc
out
sub
and
jb
enter
dec
sbbb
je
dec
leave
mov
sub
xor
sub
xor
mov
ret
mov
sbb
nop
adc
cmp
adc
or
ljmp
rcll
and
mov
movsl
mov
nop
sti
hlt
es
cmp
add
adc
mov
lds
pop
cmpsb
aam
dec
mov
jne
add
add
xor
loopne
fidivrs
pop
les
jge
ja
fwait
and
add
loope,pn
xchg
adc
jbe
ret
push
addr16
sbb
psrlw
adc
xchg
pushf
mov
ret
mov
mov
and
jne
mov
xchg
jle
mov
rcll
adc
iret
hlt
and
adc
sub
xchg
push
push
jle
adc
jnp
xor
mov
cmpsl
movb
adc
add
or
nop
mov
dec
xchg
fistl
add
out
sbb
add
outsb
lret
mov
mov
ljmp
add
mov
xchg
and
push
pop
dec
insb
mov
in
cmp
pusha
xchg
sbb
leave
mov
mov
and
push
xchg
push
movaps
inc
lcall
ret
or
add
testl
mov
ljmp
xchg
mov
dec
stos
sub
push
iret
sti
pop
cmp
sbb
push
les
insb
mov
jge
lods
cmpsl
sub
jne
or
xchg
pushf
xchg
fbstp
fisubrs
loopne
into
movsl
and
dec
jbe
xchg
add
mov
mov
inc
push
mov
sbb
mov
aas
test
stos
sbb
adc
push
pop
push
je
sub
or
xchg
and
pop
stos
or
rolb
stos
cmpsb
push
mov
imul
xchg
cld
push
leave
or
cmp
sbb
mov
jge
dec
mov
rorl
sub
movsl
mov
push
inc
mov
fwait
adc
inc
int3
sbb
movsl
les
mov
adc
cmpsl
fwait
cltd
sbb
test
lods
mov
int
jo
or
sbb
push
cld
and
daa
lea
aaa
xor
outsb
enter
jb
and
add
push
xchg
and
sub
adc
xchg
cmpsb
add
mov
dec
and
rolb
adc
mov
nop
and
pop
push
adc
sbb
rolb
test
inc
or
dec
fstl
cwtl
mov
sbb
std
push
cmpsl
push
es
insb
test
incb
mov
cli
xorb
mov
dec
ficoms
adc
adc
push
adc
mov
and
mov
lcall
xor
or
movsb
sbb
fwait
add
mov
mov
test
int
data16
es
subb
inc
popl
outsb
mov
enter
dec
shll
mov
xchg
sbb
gs
mov
mov
mov
in
adc
mov
mov
sub
sbb
mov
aad
mov
xchg
loopne
dec
dec
xor
adc
mov
clc
dec
pop
movhps
mov
sahf
punpckhwd
daa
ret
fs
sbb
push
push
push
adc
js
jg
lahf
pop
push
sbb
xor
or
aas
sub
mov
shll
add
fisttpl
jne
dec
inc
jbe
rclb
xchg
xchg
clc
cs
jnp,pt
and
inc
sbb
sub
outsl
add
les
xchg
inc
andl
xchg
sahf
push
sub
outsb
inc
xchg
sarl
cmp
adc
ja
xchg
mov
adc
popa
je
das
dec
xchg
push
or
int3
and
mov
xor
dec
shrl
sbb
cltd
mov
lods
push
test
xor
sbb
pushf
adc
lret
adc
bound
cmp
jnp
sbb
xor
insl
or
pop
mov
and
pop
into
xchg
xchg
or
sub
push
xor
cltd
add
push
sahf
stos
cmpsl
push
bound
dec
and
mov
pop
test
je
and
movb
sbb
pop
mov
lea
sbb
mov
xchg
aas
sbb
lahf
lret
popf
lcall
jb
xchg
push
filds
fwait
or
adcl
pop
and
mov
cmpsb
pop
test
inc
adc
mov
sbb
pusha
and
xchg
incb
adc
data16
aaa
inc
rcrb
pop
add
rcll
mov
add
xor
xor
mov
lahf
test
sbb
or
stos
adc
sti
mov
icebp
sbb
xorps
and
sbb
cmpsl
mov
sbb
pop
sbb
test
inc
push
adc
add
push
inc
dec
loope
lahf
lds
jg
or
aad
cwtl
enter
xor
mov
mov
and
mov
out
sub
adc
cmp
xchg
mov
fwait
lahf
stc
cli
fmuls
imul
sbb
xor
cs
sub
jno
lcall
lcall
pop
mov
jbe
hlt
pop
sbb
and
cmp
cmp
subb
aas
stos
and
and
push
or
jg
insl
or
pop
pop
cmp
mov
lcall
es
movsl
xchg
fdivl
push
or
or
push
add
lahf
sub
and
xlat
je
xor
nopl
sbb
pop
cmpsb
mov
lcall
or
or
push
pop
pop
andb
mov
adc
ret
sub
pop
inc
out
jecxz
mov
add
adc
adc
es
or
mov
cmpsb
sti
dec
add
mov
xchg
call
xchg
jle
or
stos
xchg
sub
adcl
stos
mov
scas
sbb
mov
dec
sub
fs
adc
add
lea
and
xchg
mov
mov
fistps
xchg
cmpsl
pusha
fiadds
test
dec
xchg
pop
add
or
lahf
and
arpl
lods
mov
or
sbb
nop
cmc
daa
xlat
sub
add
jbe
mov
les
adc
inc
and
xchg
mov
std
add
add
sub
xchg
mov
lahf
ret
jae
mov
pop
fucomi
test
and
mov
cmpsl
add
inc
mov
adcb
loope
je
cli
cmp
es
mov
pop
nop
add
je
or
push
add
aaa
push
fldl
sbb
pop
jmp
lret
pushl
and
hlt
cs
adc
inc
adc
sub
mov
jle
add
jbe
xchg
test
xor
pop
js
sbb
pop
test
mov
movsb
xor
aaa
mov
orb
inc
adc
add
ljmpw
adc
pop
mov
lds
aaa
movsl
or
cltd
aaa
and
mov
xchg
add
lahf
mov
dec
outsl
dec
mov
xchg
andb
xor
xor
lcall
xchg
data16
add
mov
cli
ss
movsb
add
push
je
mov
inc
fcoms
mov
xchg
mov
lea
mov
popf
mov
or
test
xchg
lcall
and
adc
pop
adc
int
pop
hlt
popf
xchg
push
jecxz
lret
cmc
je
and
mov
jg
or
lock
add
mov
add
and
mov
pop
in
sub
mov
xchg
insb
mov
je
insl
mov
jb
pop
mov
rorb
adc
xchg
push
sub
shlb
xchg
jp
cwtl
fwait
std
sahf
adc
popl
pop
add
xchg
bound
cmp
sbb
mov
lret
add
cmp
or
mov
dec
mov
cs
bound
scas
jnp
mov
ljmp
sbb
loop
aad
cmc
xor
and
scas
gs
lock
xor
lods
addb
jl
and
movsb
adc
or
stos
pop
cmpsl
pushf
nop
sub
lret
into
pop
adcb
jecxz
cmp
add
rclb
cmc
jae
mov
mov
es
push
jb
enter
icebp
adc
mov
int
fldl
mov
xchg
add
in
fs
mov
cmpsb
xlat
xchg
pop
scas
loop
push
pop
mov
pop
loopne
movl
xchg
sub
pusha
lods
stos
mov
sbb
fstps
adcl
shrl
add
xchg
fcomps
or
fcoml
pop
mov
add
dec
pop
mov
mov
adc
out
adc
rcrb
inc
ss
xor
adc
xchg
loopne
mov
daa
and
addr16
xchg
xchg
dec
shrb
push
pop
inc
xchg
add
mov
fisttpl
mov
loopne
jb
mov
lcall
push
sti
lahf
cmp
pop
movsl
mov
xor
and
pushf
dec
cmp
pop
js
or
adc
fldenv
sbb
xor
lcall
daa
add
dec
or
jb
outsl
gs
sub
lahf
imul
mov
lods
sbb
sbb
push
aas
adc
mov
push
xchg
jo
ss
sbb
sub
sbb
jmp
test
xor
cmpsb
mov
lret
mov
ljmp
cmpsb
xchg
out
lret
fwait
cs
adc
cltd
cltd
xchg
sbb
movsl
jg
test
push
cmc
push
icebp
sbb
adc
sub
dec
test
mov
rclb
cltd
add
xchg
or
cmp
push
xchg
pop
and
push
adc
mov
insb
add
movsl
xchg
add
imul
push
pop
pop
mov
pop
push
pushf
push
xor
rclb
pushw
cld
lcall
xchg
dec
aas
out
pop
pop
jg
mov
cmc
pop
imul
movsl
push
inc
jbe
sub
or
sub
cmpsb
mov
xchg
mov
incb
mov
lcall
inc
mov
adc
jg
hlt
adc
adc
and
cmp
cltd
push
xchg
jp
xchg
lahf
add
sbb
mov
icebp
cmp
pop
push
movsl
mov
push
adc
cmp
bound
push
push
xor
inc
mov
pop
cmp
fwait
adc
ss
xchg
movsb
mov
pop
jp
sub
into
sub
and
push
std
adc
lock
aas
fwait
pop
stos
inc
scas
add
fisttpl
pushf
je
inc
jp
or
xchg
or
mov
push
sub
out
orb
add
add
sub
cwtl
push
mov
and
dec
adc
adc
sub
pop
sbb
xchg
pop
add
fwait
jbe
imul
push
adc
adc
into
xor
outsb
movsl
pop
enter
mov
call
lods
lods
or
sub
lods
pop
cmp
push
sub
lret
enter
lahf
aad
ret
inc
xchg
mov
iret
bts
loope
or
sbb
les
setns
pop
pusha
orb
pop
push
sub
sti
sub
adc
fwait
lods
and
sbb
mov
xchg
inc
mov
cmp
jp
inc
jbe
inc
xchg
add
jb
xchg
mov
or
aas
sbb
sbb
mov
inc
or
mov
fwait
mov
lods
arpl
and
mov
push
mov
rorb
cvtps2pd
xchg
enter
sbb
sub
jbe
add
adc
push
add
cltd
pop
mov
xchg
cmp
cmpsl
add
das
xchg
xor
orb
jnp
sbb
sbb
sub
iret
adc
clc
sti
aam
xor
or
mov
adc
test
xchg
add
or
sbb
test
mov
jnp
adc
xchg
ret
bound
mov
rolb
pop
sub
mov
pop
popf
mov
xchg
int
dec
add
lock
dec
nop
mov
das
stc
pushf
sbb
dec
xlat
mov
lods
or
add
repnz
or
mov
mov
or
orl
test
adc
in
adc
popw
mov
jbe
call
xchg
bound
fs
dec
xchg
add
in
pop
or
mov
lcall
sbb
adc
ret
movsl
jo
pusha
out
iret
adcb
outsb
cwtl
and
add
jge
bound
mov
sbb
adc
enter
or
and
xchg
fwait
scas
sub
in
pop
add
lcall
into
ja
call
push
sbb
xchg
cmp
mov
mov
enter
adc
adc
xor
iret
adc
pop
testb
sub
xor
push
lock
jle
jl
or
add
add
dec
push
xor
xchg
sbb
bswap
fdivr
cwtl
andb
dec
jl
and
idivl
xchg
inc
je
adc
andl
or
andb
test
xchg
imul
aas
add
add
fcomi
mov
xchg
int
pushf
dec
stc
xor
or
int
jo
repnz
nop
xchg
lcall
adc
in
lds
arpl
mov
mov
ss
jmp
mov
mov
pop
xchg
or
jge
xor
mov
mov
push
push
stos
xorl
cli
mov
add
pop
push
ljmp
cmpsl
mov
sbb
mov
arpl
sahf
fistpl
mov
cwtl
sbb
stc
or
push
jbe
mov
jae
mov
aas
fistl
fstps
sahf
mov
add
dec
movsl
sarb
dec
sbb
mov
adcl
aam
jne
cmpsl
dec
jb
cmp
and
inc
adc
je
cmpsl
popl
js
lahf
mov
xchg
push
dec
push
sysexit
movsl
adc
sub
mov
fdiv
movsbl
daa
mov
and
aaa
xchg
adc
lods
iret
push
cli
aaa
sbb
push
add
aas
adc
sti
xlat
pop
jge
or
or
xchg
cmpsb
mov
jecxz
ret
pusha
cmp
sbb
adc
nop
test
lods
loopne
add
sahf
pop
push
daa
push
mov
jmp
xlat
insb
mov
jg
pop
push
cs
push
je
add
and
xor
aaa
xchg
in
or
xchg
xor
sahf
out
mov
mov
sbb
push
sub
stos
cwtl
jg
sbb
jmp
sahf
push
jbe
xchg
sbb
and
sbb
sbb
daa
test
xchg
lea
xchg
xor
mov
in
jns
push
les
outsl
jo
in
mov
and
test
rolb
mov
ret
es
cmpsl
add
rorb
test
pop
lret
jg
mov
enter
pop
xchg
mov
insl
lods
pop
frstor
pop
cwtl
nop
adc
test
popl
fwait
popf
add
loope
xor
add
push
sbb
xorl
add
and
mov
sub
mov
mov
mov
inc
inc
xchg
data16
mov
add
push
mov
into
xor
adc
mov
jle
lcall
mov
mov
and
ljmp
in
push
mov
or
mov
sbb
sbb
cmpsb
nop
nop
pop
and
pushf
pop
pusha
call
int
xchg
fadds
push
ltr
leave
sbb
test
push
fadds
sbb
push
cmpsl
je
int
in
fistl
xchg
xchg
pop
call
sub
fisubl
adc
jne
adc
test
or
out
xchg
inc
fiadds
out
clc
push
dec
call
mov
mov
shll
test
xorl
movups
mov
xchg
aas
andl
add
repz
sahf
aaa
movsl
es
xchg
cltd
sbb
adc
sahf
in
cmpsb
mov
stos
std
sub
nop
ret
xor
push
and
pushf
icebp
sbb
loop
icebp
mov
or
mov
jb
jb
mov
adc
inc
or
or
cmpsl
pop
movsl
add
pop
push
mov
adc
xchg
jbe
and
ss
push
lret
adc
pusha
inc
mov
sahf
fwait
mov
mov
insb
and
adc
jge
sbb
mov
xchg
out
mov
call
adc
jg
and
pop
dec
ds
or
cmpsl
adc
ljmp
cs
and
and
mov
inc
sbb
mov
sub
dec
cmp
or
nop
into
hlt
popf
cli
inc
fnstcw
dec
or
pushf
cmp
pop
lcall
ret
or
mov
and
jns
fwait
push
mov
mov
cpuid
daa
nop
ret
es
movsl
mov
sbb
nop
cltd
inc
sub
lcall
sbb
into
sbb
push
lahf
jbe
pop
add
mov
adc
mov
jno
sbb
inc
pop
popl
sahf
or
sbb
adc
push
xchg
iret
xchg
inc
aad
cmpsb
cmpsl
outsb
push
or
and
es
sub
dec
or
push
xchg
jb
int3
push
adc
mov
jns
pushf
subb
adc
mov
mov
adc
stos
or
push
xchg
push
mov
sahf
xchg
das
test
adc
iret
cmpsb
lock
fldl
inc
enter
test
adc
sbb
mov
mov
lahf
and
scas
push
aam
stc
gs
stos
or
nop
mov
fwait
mov
mov
mov
pop
push
sti
daa
mov
iret
xchg
sbb
adc
sbbl
push
std
std
add
xchg
sbb
pop
je
fisttps
frstor
push
sbb
xchg
sbb
sbb
add
daa
movsl
ficoms
scas
mov
enter
xchg
add
push
mov
mov
inc
je
xchg
pop
or
cmc
and
sarl
mov
xchg
and
imul
lcall
test
mov
test
adc
in
mov
or
xchg
push
dec
xchg
pop
addr16
outsb
pop
mov
sub
or
or
call
cwtl
sbb
sub
add
pop
xchg
hlt
add
push
decl
movsl
adcl
or
dec
mov
pop
das
sbb
mov
daa
cmpb
cmpsl
orl
pop
mov
out
push
sbb
mov
jns
xor
cmp
and
mov
adc
je
rep
sbb
cmp
mov
adcb
mov
jg
add
push
cwtl
fbstp
adc
mov
lahf
xchg
clts
out
add
es
sahf
xchg
sbb
sub
arpl
pop
enter
clc
mov
sbb
mov
daa
xor
rol
mov
hlt
sub
cwtl
aam
jg
mov
cmpsb
sbb
adc
aaa
xor
cmp
and
fwait
mov
push
or
sbb
lods
sahf
or
jb
outsl
inc
pop
rorl
cs
xchg
inc
orl
or
xchg
aas
and
orb
sti
mov
push
aaa
mov
scas
cwtl
dec
fisubs
cmpsb
lret
cs
cmpsl
and
or
or
mov
adc
cli
movsl
push
sbb
sub
adc
add
cmpsl
xchg
add
xor
sbb
roll
lcall
mov
pop
jl
jle
pop
mov
test
sbb
adc
push
scas
mov
cmpsb
je
add
out
mov
dec
xchg
jg
test
cmc
fisubs
popf
insb
cmpsl
test
jne
repz
daa
cmp
movsl
or
lahf
add
jo
mulb
aam
cmp
mov
lcall
xchg
inc
sbb
sbb
shr
push
mov
leave
mov
jbe
call
add
sbb
imul
lods
push
bt
mov
and
sbb
xchg
add
mov
mov
push
rolb
stc
or
xor
mov
dec
and
add
push
xchg
daa
pop
push
jbe
sub
loop
into
loopw
jno
or
mov
daa
xchg
aaa
pop
sar
or
dec
dec
and
jbe
mov
outsb
add
push
dec
loopne
push
cld
sbb
cmpsl
adc
sahf
cmp
insl
or
rcrl
pop
jne
xor
xor
lcall
mov
mov
jno
jae
adc
ret
adc
and
pop
aaa
orl
shll
xchg
or
sub
lcall
lods
sets
jno
mov
sub
mov
or
adc
mov
sbb
mov
je
std
dec
stos
adc
pop
xor
fistpll
test
xchg
adc
sbb
xchg
cs
pop
out
and
data16
data16
sbb
xchg
xchg
roll
mov
ljmp
test
movsb
mov
int
sbb
pusha
imul
mov
adc
repnz
push
mov
pop
sbb
push
xchg
xchg
inc
mov
adc
ds
add
mov
cli
pusha
inc
jecxz
add
jg
xchg
aam
mov
sbb
and
cmp
adcl
nop
in
and
push
cmc
in
xchg
sbb
push
into
cmp
fstl
testl
out
add
rol
lcall
adc
pop
das
pop
daa
push
pop
cltd
sbb
jbe
adc
dec
sbb
inc
shr
sbb
fldcw
xchg
stos
les
add
outsb
mov
inc
or
mov
xchg
push
sbb
fldenv
or
adc
fcoml
ret
adc
stos
mov
fwait
outsb
jns
jb
push
lcall
lods
adc
and
and
fs
mov
pop
es
add
and
xchg
push
shrl
sbb
stc
iret
or
sbbl
add
and
vpshad
pop
cmpb
popa
push
add
sbb
mov
lcall
inc
aaa
mov
adc
mov
mov
adcb
adc
sub
cmp
std
je
cmp
cli
cmp
popl
sahf
es
test
sbb
movsb
xchg
and
lahf
nop
add
adc
aad
pop
mov
or
sub
sbb
inc
lods
inc
in
inc
sub
xchg
push
popf
xor
add
or
mov
js
adc
pop
test
xor
inc
xchg
jo
fdivr
stos
mov
push
pushf
or
daa
dec
push
imul
xlat
inc
xchg
cmc
push
nop
xchg
or
pop
shrl
xchg
push
pop
sahf
add
cmpsl
push
cwtl
fwait
mov
jbe
inc
pop
xor
nop
add
xchg
incb
sbb
int3
fnstenv
pop
shrl
lock
and
mov
dec
fdivp
sahf
imul
xchg
inc
pop
adc
test
sub
adc
arpl
xchg
mov
mov
jno
iret
out
push
lock
es
or
and
lods
lret
outsb
sbb
pop
adc
xchg
and
mov
add
adc
sti
adc
sar
xlat
xor
mov
cwtl
jo
sbb
pop
adc
jg
mov
popf
or
push
adc
addl
movsl
sub
sbb
pcmpeqb
cs
push
adc
mov
or
aaa
add
pcmpgtb
or
adc
pushl
sub
shufps
stc
cmp
cwtl
xchg
push
or
push
pop
fprem1
shlb
mov
sti
xchg
int3
les
or
mov
in
cmpb
pop
sbb
stc
fmuls
mov
and
mov
insl
add
cmp
pop
push
pop
sbb
in
xor
mov
inc
mov
sbb
or
sti
mov
lods
xor
xor
jb
mov
xchg
fwait
sbbb
stc
lods
fistl
test
mov
fildl
adc
push
adc
add
xor
lahf
psubusb
mov
xchg
mov
fcmovnb
lret
pop
pusha
pop
loopne
arpl
decb
mov
arpl
mov
cmp
movq
or
mov
out
cwtl
mov
mov
mov
insb
mov
sbb
lods
sahf
mov
cmpsb
sbb
fistps
lods
mov
xchg
mov
lds
and
data16
or
mov
stmxcsr
cmc
or
testl
or
cmp
mov
xchg
xchg
adc
xchg
mov
or
xchg
add
pushf
mov
subl
cmp
sub
mov
and
cmpsl
xchg
iret
or
pop
fcmovne
into
addr16
sub
add
mov
adc
andl
jb
sbb
jg
or
dec
test
jmp
cmpsl
add
adc
and
add
adc
mov
cmp
adc
dec
and
popf
pop
adc
add
daa
bound
xchg
mov
jae
or
data16
pop
das
pop
mov
nop
adc
or
add
cmp
nop
or
pushf
test
adc
shl
arpl
je
rclb
push
sbb
int
scas
mov
ror
test
add
add
xor
data16
add
mov
or
mov
xor
lret
pushf
dec
dec
sarl
jb
sbb
fnsave
and
aaa
or
sbb
es
sub
adc
into
push
sub
inc
and
sub
addr16
cmp
adc
daa
es
in
and
pop
and
or
data16
es
mov
out
add
jmp
nop
jmp
inc
xchg
xchg
es
add
adc
popf
mov
inc
dec
or
popf
lock
or
mov
lcall
xchg
fistps
fstl
sub
mov
clc
pop
xor
and
fwait
pop
sbb
lret
aam
cs
xchg
dec
mov
mov
fimull
cmpsb
icebp
rolb
cltd
adc
or
xchg
sbb
adc
cltd
nop
pop
fistpl
pop
push
or
ja
popl
sub
sub
imul
inc
and
lods
clc
or
jno
movsl
cmp
push
pop
mov
mov
mov
pop
test
adc
test
scas
mov
adc
sbb
shlb
or
pop
in
lahf
xchg
xchg
lahf
fbld
sbb
cs
sub
orb
adc
sbb
pop
pop
and
subl
daa
data16
mov
mov
pop
dec
nop
mov
cmc
add
sub
fs
fcoms
andl
xchg
pop
imul
dec
cwtl
inc
and
add
mov
pop
inc
sub
ljmp
movsl
sahf
loopne
nop
rorl
mov
add
andb
and
add
pop
mov
push
dec
stos
cmpsb
inc
or
or
lahf
xor
mov
dec
add
loope
xchg
mov
cmpsb
inc
jb
test
jp
add
xchg
jmp
mov
mov
mov
pop
and
add
inc
aaa
lcall
push
jmp
sbb
mov
aaa
dec
mov
add
adc
xchg
sbb
push
pop
inc
andl
inc
sub
aad
mov
cmc
je
pop
icebp
adc
jo
aaa
push
sub
add
push
je
dec
cltd
lea
mov
adc
sbb
adc
xor
jg
es
jb
lods
mov
or
daa
adc
add
stc
pop
daa
andb
es
insl
mov
cmp
push
mov
sbb
cltd
adc
mov
test
mov
stos
xor
mov
mov
decl
inc
loopne
inc
inc
mov
push
les
je
inc
pusha
nop
push
mov
clc
xor
shlb
cmp
push
pop
xchg
cmp
xchg
xchg
sbb
imul
psubsb
push
nop
cmpsl
push
xor
xchg
out
repnz
cmpsb
dec
inc
cmpsb
mov
inc
sbb
dec
pop
push
jge
lcall
mov
add
or
data16
nop
mov
dec
inc
and
es
sbb
fwait
push
subl
pop
fwait
setns
mov
sbb
pop
xor
mov
pushf
sbb
push
pusha
pushf
leave
cs
sahf
mov
adc
pop
mov
inc
addl
cli
fidivs
mov
adc
fildll
inc
stos
sbb
jle
movsl
adc
ja
mov
push
inc
sbb
pop
mov
lret
lahf
in
mov
sti
xchg
mov
repnz
xsave
adc
or
or
stc
movsb
sbb
pop
sbb
or
enter
push
add
sbb
sahf
loopne
lods
imul
mov
and
mov
and
jae
pop
xchg
or
jbe
xchg
adc
lret
xor
or
sub
inc
pop
pushf
sub
fiadds
cmpsl
shll
sbb
sbb
push
mov
add
idiv
sti
cwtl
pop
les
mov
pop
xchg
sub
hlt
push
mov
lcall
cmp
dec
pop
rorl
lea
or
cli
movsl
cmp
out
cmpsl
and
pop
lahf
test
xor
adc
fsts
inc
rclb
movsl
adcb
mov
xchg
ret
lret
and
pusha
enter
cmpsb
pop
dec
adc
mov
aas
push
xorl
fbstp
adc
push
add
cmp
in
jmp
mov
sahf
or
cwtl
xchg
int
and
orb
pop
fidivs
aam
int
std
add
jns
hlt
push
mov
daa
bound
and
sbb
or
sub
sbb
sub
add
add
adc
adc
mov
call
lret
sbb
aaa
add
faddl
sbbl
add
mov
mov
sarb
outsb
pushf
adc
clc
sub
es
pop
xor
sbb
sbb
mov
sbb
sbb
pop
inc
rclb
add
je
movsl
mov
or
divl
add
and
or
popl
sub
rcrb
gs
push
mov
pushl
or
stos
jnp
cmpsl
mov
filds
daa
cmpsb
and
lret
fisubrs
cmpsl
jns
push
jne
or
aas
pop
sbb
mov
jns
adc
sbb
pop
mov
sub
rcll
xor
cmpsb
xchg
gs
lea
das
es
es
lcall
pop
sub
fisttps
jp
out
mov
leave
dec
shrl
pop
xchg
jne
outsb
mov
fwait
mov
jbe
clc
push
mov
movsb
xchg
adc
ss
loopne
lods
clc
rclb
add
pop
cmp
andl
mov
js
push
push
mov
dec
test
popf
add
negl
cmpsl
outsb
out
mov
and
push
dec
nop
sbb
outsl
lret
fwait
mov
inc
add
xchg
pop
pop
out
stc
add
xor
sub
or
mov
aaa
sbb
bound
push
xor
bound
pop
popf
or
cmpsl
mov
mov
xchg
adc
pusha
lock
fcmovnu
icebp
add
xorb
shrb
mov
in
push
jge
push
icebp
stc
mulb
sbb
xchg
xor
sub
cmpsb
daa
mov
pop
lahf
xchg
or
cwtl
cmp
xchg
mov
xchg
dec
clc
nop
mov
or
int3
push
jmp
pop
std
aad
daa
mov
add
mov
dec
es
adc
xchg
push
sub
out
or
clc
adc
or
into
cwtl
inc
mov
inc
pushf
in
push
inc
mov
fwait
sti
test
jbe
clc
inc
adc
loopne
andb
imul
pop
push
inc
js
xchg
adc
xchg
in
sub
sbb
pusha
mov
xor
ret
push
dec
lcall
or
sub
mov
je
cwtl
cmp
push
daa
mov
insw
xchg
rorl
jb
hlt
aas
mov
sti
fildl
sub
mov
mov
mov
fwait
mov
ret
adc
loop
je
jns
xor
mov
daa
push
mov
addr16
cvtpi2ps
xchg
stc
test
sbb
sub
xor
mov
sub
mov
popa
jge
das
addb
stos
jecxz
popa
es
add
cmp
mov
pop
add
jbe
ror
outsb
iret
pop
inc
imul
bound
stos
scas
das
sahf
push
pop
inc
add
add
stos
sbb
cltd
adc
in
cmc
fwait
inc
push
adc
jp
mov
es
or
insb
adc
and
or
cmp
daa
add
mov
out
cmp
jp
sbb
jl
and
sub
in
inc
dec
in
sbb
push
je
daa
sbb
mov
stos
sbb
es
out
sub
adc
lret
scas
pushf
je
push
sbb
push
imul
push
stos
imul
imul
jmp
adc
or
mov
pushf
adcl
hlt
cmpsb
bndstx
cltd
xor
hlt
xor
fstl
mov
pop
out
cmp
xchg
ja
add
loopne
pop
out
adc
jecxz
and
addr16
add
xchg
test
xor
sub
fimull
push
mov
js
repz
adc
fstpt
jbe
dec
rorb
mov
test
adc
mov
cmpsb
cmpsl
jb
fwait
sbb
xchg
inc
mov
ret
pop
daa
adcl
mov
and
out
or
mov
sbb
es
adc
rorl
mov
sahf
adc
and
fwait
mov
add
rclw
jle
cwtl
xchg
adc
or
in
mov
add
add
subl
push
jo
mov
xlat
mov
push
mov
xchg
or
adcl
mov
pop
cwtl
adc
or
jns
push
mov
daa
mov
sbb
ret
or
lahf
mov
cmpsl
sbb
lcall
push
add
or
loopne
fstp
adc
or
movsb
aaa
mov
or
sbb
push
cwtl
sahf
rorl
xor
mov
xchg
adc
mov
mov
push
mov
lahf
mov
adc
xor
xchg
dec
fwait
xor
aam
aas
mov
cmp
or
xchg
mov
lcall
mov
pop
add
xor
or
cwtl
pop
test
jle
sub
adc
mov
xor
add
cli
xchg
and
test
sub
lar
mov
xchg
or
std
call
fistpll
cmpsl
add
lds
and
dec
daa
sbb
mov
fwait
mov
sbb
outsl
fidivrl
cs
mov
cmpsl
in
mov
sub
pushf
mov
mov
ficomps
into
shrl
mov
push
sub
aaa
xchg
sahf
push
cmp
xchg
mov
cwtl
add
xchg
jb
dec
sub
pop
and
aam
mov
adc
mov
sarl
test
pop
xchg
or
cmp
cltd
push
adc
mov
daa
nop
adc
clc
cwtl
jle
xchg
mov
lahf
mov
test
mov
inc
mov
add
aaa
push
inc
filds
cwtl
mov
xor
pop
pop
pop
add
mov
xorl
daa
dec
mov
ret
mov
xchg
add
adc
lahf
cltd
pop
cmpsb
jnp
and
mov
inc
push
rclb
dec
cmpsl
xchg
ds
cwtl
daa
add
sbb
jp
and
xchg
fnstenv
sbb
xchg
cltd
adc
or
es
pop
in
push
xchg
cmp
mov
dec
mov
out
xchg
xor
enter
mov
dec
xchg
jb
inc
add
into
mov
inc
mov
rorb
mov
movsl
or
mov
pop
fwait
stos
divl
nop
xor
or
add
adc
out
ret
popf
jge,pt
jb
out
jb
push
push
adc
ret
mov
pushf
xsha1
cmpsb
mov
sahf
sbb
scas
xchg
xchg
or
cmp
push
andb
push
inc
nop
and
je
mov
jge
sub
aad
push
push
mov
lcall
mov
push
orb
in
cmpl
or
mov
icebp
pop
leave
pop
xchg
sbb
mov
xchg
adc
dec
push
jge
outsb
loope
nop
enter
xchg
mov
loopne
xchg
pcmpgtd
fisubl
mov
daa
mov
pop
xchg
es
adc
outsb
mov
mov
sbb
test
nop
mov
and
inc
fwait
mov
loop
cmp
je
push
or
sbb
mov
mov
out
xor
mov
adc
xor
and
fimull
mov
sbb
jbe
mov
jg
mov
test
adc
rclb
xchg
outsb
aad
sbbb
repz
sbb
push
pop
clc
push
sub
add
add
cmp
pusha
mov
or
test
stc
sub
in
aam
push
cmp
cmc
cmpsb
cmpsl
je
pop
cltd
jl
sarl
push
push
adc
adc
push
test
insl
aas
adc
or
mov
fwait
nop
inc
xorb
adc
push
lcall
dec
jle
or
and
cmp
test
xchg
push
daa
daa
dec
and
je
mov
jne
mov
mov
sahf
jecxz
push
fwait
and
cs
mov
sub
adc
dec
sysret
callw
mov
jne
popl
jmp
push
out
popa
jecxz
pop
jno
inc
dec
xchg
dec
push
hlt
xor
cmp
cmp
sbb
xchg
mov
divl
fwait
lea
cmp
daa
cmp
xchg
or
xchg
mov
dec
nop
orl
aad
adc
or
outsb
push
addl
pop
mov
xchg
ds
adc
lcall
loopne
jo
inc
xor
sbb
cmp
jb
mov
je
test
lods
mov
sahf
stc
mov
test
xchg
imul
xor
dec
and
orl
push
xchg
mov
mov
xchg
adc
cmp
movsb
sub
pop
movsb
daa
mov
mov
and
lcall
and
xchg
add
adc
ljmp
or
cmpsl
xor
and
adc
negb
je
sub
cmp
sbb
or
adc
push
dec
add
sbb
push
sub
add
jg
xchg
inc
lahf
movsl
lahf
fs
stos
nopl
sbb
inc
daa
sbb
dec
ret
fwait
and
test
mov
dec
icebp
pop
inc
jge
sub
dec
pop
mov
sbb
stc
or
int3
xchg
push
mov
xchg
sub
cmpsl
insb
jae
movsl
push
push
into
inc
add
push
aaa
ja
mov
add
sbb
bound
push
mov
clc
test
adc
mov
movsl
xchg
xchg
repnz
daa
sbb
mov
cmpsl
test
pop
mov
pop
mov
sahf
or
inc
sbbb
cmpsb
sbb
sbb
xchg
mov
adc
sbbb
xchg
mov
cs
and
stos
push
shlb
outsb
ss
push
xor
inc
ss
mov
mov
inc
mov
and
cli
or
nop
mov
adc
mov
adc
mov
mov
mov
cwtl
mov
loopne
mov
dec
xor
dec
sub
dec
add
mov
cwtl
jg
mov
pop
sub
jbe
dec
adc
cs
xchg
pop
ja
ljmp
repnz
sbb
loop
cmp
mov
jbe
adc
xchg
test
fwait
cmpsb
lahf
push
movsb
cwtl
outsb
fstl
shrb
pushf
push
adc
adc
lods
cmp
pop
sub
mov
jno
ficoms
pop
movsl
or
cmp
icebp
aad
sbbl
sbb
loopne
mov
bound
mov
and
or
mov
or
push
sbb
sub
inc
popa
sbb
addl
xchg
sbbb
int
or
and
pop
daa
sub
or
cmpsb
xchg
sub
mov
inc
aad
fiadds
sbb
insb
ret
mov
xchg
adc
add
and
daa
mov
arpl
sub
sbb
mov
xchg
cwtl
mov
jle
or
adc
add
jbe
jbe
sbb
mov
aam
aas
stos
movsl
adc
cmpsl
enter
dec
and
mov
ror
push
add
daa
push
sbb
xchg
test
push
ficoml
orl
nop
xchg
jb
jbe
rolb
jle
or
adc
sbb
xor
cs
outsb
pop
movsl
mov
mov
xchg
rorl
mov
test
adc
adc
lcall
or
out
pop
xchg
push
xchg
daa
dec
pop
jbe
mov
push
xchg
fisttpl
jbe
sbb
movb
pop
jae
and
cmpsl
mov
mov
pop
lahf
test
std
fildll
adc
adc
cmp
pop
mov
cmp
loope
add
xchg
mov
add
jl
add
push
push
or
inc
mov
mov
sbbb
or
sub
adc
mov
lahf
pushf
adc
jae
xor
sbb
mov
sub
jg
cltd
jg
push
mov
mov
mov
adc
fwait
xor
cpuid
test
sahf
fwait
cmpsl
push
ficomps
sub
push
xor
pop
jmp
cli
sarb
pop
sbb
imul
nop
push
pop
adc
mov
sbb
push
add
inc
lcall
aas
cs
dec
push
xor
mov
test
sub
or
pop
jbe
push
mov
fwait
hlt
push
lcall
adc
out
cltd
and
adc
shll
pop
loopne
lcall
or
push
or
ljmp
loopne
push
in
fucomi
testb
mov
test
push
or
adc
xchg
and
pop
mov
sbb
dec
test
cmpsl
cmp
movsb
sbb
add
mov
add
or
mov
inc
je
pop
scas
add
or
ficomps
mov
sbb
outsb
mov
lods
cltd
or
shll
in
sbb
xchg
mov
hlt
aad
lcall
inc
cld
add
loop
xchg
ds
push
popl
adc
lcall
jl
push
pop
sub
pop
add
icebp
into
lcall
dec
or
sbb
pop
add
sbb
mov
inc
aaa
mov
sbb
xchg
cmpsb
or
mov
xchg
push
pusha
es
push
xor
add
test
mov
adc
xchg
sahf
sub
mov
mov
popl
mov
xchg
aas
add
mov
mov
push
xor
cwtl
sbb
addr16
mov
in
sahf
mov
insl
sub
jbe
lcall
or
sbb
popf
cmpsb
add
sbb
mov
and
lcall
push
and
daa
sahf
cmpsl
lret
mov
push
add
inc
or
data16
xchg
sub
inc
out
popf
fbstp
cmc
cld
push
mov
pop
cmp
jo
stc
add
jg
rolb
cltd
loope
xor
sbb
rcrl
cwtl
mov
and
sbb
dec
lcall
jecxz
sub
cwtl
mov
mov
mov
xor
and
jp
nopl
or
adc
and
push
test
je
mov
jbe
cmpsl
pushf
sbb
cld
mov
add
ja
or
sub
or
daa
dec
or
imul
mov
lret
mov
xchg
movsl
sbbb
movsl
rcrl
sar
leave
sbb
sete
xor
xchg
pushf
inc
test
and
fwait
out
sarb
or
xchg
cltd
popa
jmp
xchg
stos
jb
and
xchg
out
push
cmpb
sub
xchg
dec
pushf
sub
xor
ror
nop
pop
fistpl
jg
mov
lea
test
dec
mov
arpl
inc
or
imul
mov
mov
enter
inc
xchg
pusha
sub
push
andl
and
lcall
daa
add
xchg
mov
sbb
sbb
cwtl
sbb
xchg
adcb
adcl
xchg
push
call
sbb
and
push
dec
add
jo
es
and
outsb
setnp
adc
sub
and
xchg
daa
mov
sahf
mov
ret
aas
insl
test
sbb
add
sbbl
mov
mov
insb
sbb
adc
mov
push
jns
mov
sahf
mov
movsl
and
mov
mov
daa
mov
sbb
lods
sbb
xchg
xchg
xor
adc
xor
mov
or
sbb
pop
cmp
sub
add
ror
jbe
cwtl
adc
add
push
adc
daa
aas
and
pop
imul
mov
xchg
add
and
sbb
mov
jmp
xchg
adc
mov
hlt
scas
pop
scas
jg
jl
mov
or
out
mov
sbb
addl
mov
sub
xor
cmpsl
or
add
push
push
sub
add
xchg
xchg
sahf
add
mov
mov
push
mov
push
mov
mov
arpl
sub
xchg
int
mov
out
xchg
sbb
add
or
ljmpw
sbb
sbb
sub
xchg
inc
jae
mov
jno
sbb
mov
test
inc
and
mov
jg
mov
dec
inc
sub
push
adc
sahf
sbb
jmp
and
insb
sub
adc
mov
mov
in
push
iret
cmpsb
push
sub
mov
mov
pusha
adc
jg
psubw
pop
mov
add
pop
pop
sbbl
push
cmpb
push
fwait
je
mov
sub
or
xchg
lea
addb
nop
jb
mov
mov
add
jle
sbb
pop
adc
lahf
mov
adc
jg
or
xor
mov
bound
mov
outsb
in
inc
sub
push
pusha
adc
mov
bound
xor
or
test
stc
or
mov
add
xchg
in
jge
pop
pop
in
adc
arpl
xchg
loopne
mov
imul
dec
ja
or
mov
cmpsl
mov
adc
adc
xchg
out
mov
cs
pcmpgtb
lock
movsb
adc
jo
cwtl
xchg
or
sbb
je
adc
inc
pop
arpl
icebp
adc
adc
ja
cli
arpl
cmpsl
adc
divl
sbb
and
lcall
xor
outsb
or
aas
sgdtl
fbstp
mov
mov
scas
in
pop
flds
aas
sub
xchg
mov
inc
xchg
lahf
pop
xchg
mov
jb
add
insl
jb
test
xor
mov
fisubrl
adc
mov
mov
fwait
cmpsb
cmp
dec
pop
add
outsl
cli
pop
and
xor
adc
decb
push
sub
andl
scas
std
jecxz
push
add
femms
lcall
sbb
aaa
jnp
or
negl
pushf
mov
sub
push
je
mov
sbb
mov
mov
sub
enter
xor
sub
mov
mov
sbb
inc
pop
adc
insb
mov
pop
mov
sbb
mov
lea
or
sbb
sahf
lcall
incb
sub
pop
adc
jg
test
or
insl
inc
rclb
push
pushf
je
push
fimull
in
and
adc
mov
cltd
xchg
or
pop
cmp
xchg
sbb
cwtl
inc
mov
push
pop
fiaddl
jge
jecxz
fldl
sbb
xchg
mov
cmp
cmp
prefetcht0
sbbb
add
iret
mov
xor
sbb
aam
pop
ficompl
addl
arpl
and
xchg
lcall
push
mov
cmpsb
popa
push
sub
inc
push
bound
mov
xchg
adc
and
sbb
sbb
xchg
sbb
stc
or
lock
and
push
cmc
or
ljmp
pop
mov
xor
or
cwtl
scas
or
ljmp
sbb
imul
pop
xor
pop
je
imul
je
pop
xchg
scas
or
lret
imul
daa
pop
arpl
or
push
cmpsl
or
testb
decl
push
or
inc
mov
fstpl
xchg
dec
or
les
imul
xchg
dec
xor
daa
or
insl
test
test
dec
add
jmp
mov
mov
mov
xchg
sahf
stos
add
aas
fwait
mov
stos
shll
mov
or
sbb
add
add
subl
jg
push
shlb
cmpsb
sbb
sub
loop
stos
pop
adcb
cwtl
test
popl
daa
cmp
mov
and
in
rcl
leave
xchg
lcall
les
jge
adc
fwait
pusha
mov
movsl
cwtl
inc
xchg
adc
push
lret
sahf
xchg
pop
jno
icebp
std
mov
mov
xor
stos
movsl
or
push
sbb
lods
add
outsb
roll
daa
mov
and
bound
xor
test
inc
mov
mov
andb
push
daa
xchg
sbb
dec
xchg
sub
sarl
inc
or
ret
jg
adc
and
jge
or
nop
fcoml
fsubl
test
test
mov
ret
mov
pop
test
bndldx
mov
fwait
adc
mov
sub
cmpsl
shrb
nop
rcrb
fcomps
inc
sbb
add
ret
sbb
aaa
popl
or
stc
push
cmpb
cltd
and
sbb
jo
pop
jg
sbb
pop
pop
push
addb
or
pop
xchg
inc
mov
add
pushf
pop
cltd
out
lock
inc
add
mov
test
jle
sbb
adc
pop
nop
sub
ja
sahf
pop
sbb
adc
and
and
xchg
push
jle
inc
fbld
test
inc
setg
pop
movl
cmp
xchg
inc
sub
mov
aaa
cwtl
xchg
add
ficoml
push
mov
or
pop
out
arpl
add
lcall
jle
adc
inc
shlb
test
lcall
adc
xchg
mov
test
pop
loopne
mov
xchg
sbb
or
mov
add
or
sbb
push
pop
adc
sahf
sbb
add
sbb
insb
mov
mov
or
dec
sbb
cwtl
or
add
cmpsl
cwtl
mov
and
pushf
mov
fwait
or
sub
add
mov
xchg
adc
int
sbb
adc
rolb
mov
fwait
test
test
stos
adc
fimull
cmpsl
mov
jnp
xchg
add
dec
mov
dec
xchg
xor
cmpsl
in
daa
cmp
es
out
ret
jb
pop
sbb
sbb
icebp
repnz
loopne
push
fsubl
adc
dec
xchg
lret
jbe
fwait
sbb
and
fiadds
das
mov
jge
inc
adc
mov
adc
xor
jne
and
cmpsl
adc
add
xchg
pushf
pop
sbb
jbe
aaa
push
adc
mov
mov
test
xchg
sar
mov
cmpsl
mov
mov
mov
or
jecxz
lods
inc
xchg
xchg
imul
push
or
sbb
or
sub
rcrl
gs
jae
or
adc
arpl
mov
pop
push
dec
cmp
adc
xchg
sbb
or
rorb
adc
mov
xor
adc
std
jle
stos
xchg
andl
sahf
inc
sub
sbb
sbb
pop
push
or
jbe
sbb
mov
add
mov
daa
mov
sub
sbb
and
xchg
data16
ficoms
adc
mov
mov
sbb
cld
mov
and
es
mov
int
jno
lahf
push
pop
push
sbb
imul
sub
xor
cmp
push
in
rcrb
incl
mov
fwait
sbb
mov
and
mov
push
jg
pop
fsubrp
add
call
or
movsb
mov
mov
mov
and
jge
mov
mov
mov
adc
psubusw
rcrb
xchg
mov
xchg
lahf
lock
or
dec
mov
xor
sti
and
sti
xchg
nop
jle
and
push
push
fs
adc
mov
xchg
push
andl
pop
pop
xchg
and
push
and
jo
rol
push
mov
jg
sahf
sub
and
inc
incb
daa
and
inc
dec
and
ja
and
cmpsb
out
pusha
test
sbb
adc
unpckhps
mov
test
jnp
add
es
xchg
cwtl
dec
std
xor
fisubrs
pop
je
or
adcl
shll
movsl
mov
cmc
xchg
ret
scas
fldt
dec
sbb
fisubl
mov
dec
test
movsl
fbld
or
cmpsb
shrl
xchg
adcl
cmp
in
lahf
add
push
pop
es
and
mov
xchg
sbb
or
mov
mov
dec
stos
xchg
ret
inc
mov
std
enter
mov
daa
cmp
sbb
add
pop
fwait
sub
das
and
mov
pop
or
inc
adc
jbe
sbb
in
jmp
adc
test
adc
xchg
and
or
add
push
push
pop
sub
mov
mov
js
sub
xchg
pop
pop
sahf
inc
adc
inc
cmc
inc
xor
lcall
mov
mov
add
cmpsl
mov
or
stc
lea
outsl
add
test
push
inc
xchg
movsb
pop
adc
popl
sbb
test
lcall
mov
adc
mov
xchg
mov
lahf
and
xchg
mov
or
shld
adc
mov
addl
mov
adc
mov
mov
sbb
andb
adc
leave
mov
pushf
mov
in
test
lret
cmp
xchg
out
xor
ret
xor
xchg
or
popf
sbb
insb
dec
aas
sbb
and
push
cmp
or
sahf
or
rolb
pop
daa
add
jg
cmpsl
mov
popl
add
sub
shll
or
outsb
lret
stos
or
test
mov
add
pop
and
xchg
data16
hlt
pop
sbb
repnz
mov
sub
mov
push
add
out
dec
mov
cmpsb
fwait
les
cs
test
ret
sub
mov
jmp
and
bound
sbb
sbb
aas
and
scas
sbb
pop
or
mov
xchg
mov
es
add
add
xchg
inc
or
fs
lods
add
mov
xchg
add
lahf
out
pop
sbb
or
mov
and
sub
and
add
cmp
mov
mov
pop
and
mov
test
push
lcall
cmp
pop
mov
loopne
adc
and
pop
adc
push
pop
pop
jbe
sbb
repz
inc
add
nop
mov
add
jge
bound
ret
es
add
xor
adc
xchg
pushf
and
or
push
push
push
sti
xchg
movsb
test
stos
imul
or
cmp
adc
inc
out
mov
or
mov
jb
outsl
lds
setle
xchg
sbbb
mov
lea
sbb
and
or
adc
call
dec
mov
cmp
sti
in
sbb
fwait
imul
mov
add
les
adc
and
add
cmpsl
bound
adc
test
ds
pop
mov
mov
sahf
mov
fbld
addr16
adc
fidivs
add
test
adc
mov
fwait
insb
jnp
xor
push
and
add
adc
mov
into
out
cmpsb
sbb
dec
xor
pop
cltd
aas
inc
push
and
fildll
lds
test
shll
xchg
and
xchg
mov
add
or
pushf
adcl
lret
dec
pusha
mov
mov
aas
mov
or
sahf
inc
push
xor
lahf
xor
in
pushf
push
xchg
add
mov
stos
xchg
mov
je
add
mov
mov
cli
out
mov
add
mov
clc
adc
cwtl
daa
or
fsts
push
mov
add
fs
or
daa
sub
out
movsb
mov
out
lods
fldenv
je
mov
or
push
and
pop
or
sbb
sub
cmpsl
out
test
and
jne
push
pop
addr16
lahf
xchg
mov
xchg
mov
sbbl
jbe
xlat
dec
mov
sti
or
xchg
test
add
sbbb
lds
lds
sbb
mov
xchg
mov
in
test
sbb
xor
cs
pop
mov
shll
xchg
jne
inc
mov
add
test
dec
arpl
cs
rorb
les
cmc
js
cltd
dec
sahf
mov
stos
adc
adc
movsl
nop
mov
pop
mov
cmp
xchg
mov
fisubs
add
mov
xlat
xor
xchg
push
stc
enter
cmc
sbb
push
jb
and
movsb
andb
pushw
xchg
jb
push
cwtl
and
or
add
mov
outsl
out
jne
inc
mov
movsb
or
mov
popf
cmpsb
adc
mov
jne
fstpl
mov
or
enter
mov
pop
sub
adc
and
mov
sbb
repnz
sbb
sub
mov
push
mov
push
pop
sub
stos
movsl
xchg
lahf
adc
push
aas
jge
cmpsb
xchg
and
popl
sub
frstor
jb
ret
push
xchg
push
sahf
adcl
and
mov
adc
shrb
cmc
or
sbbl
jb
enter
fstl
sbb
adc
mov
xchg
outsb
jg
xchg
and
fisubrl
mov
je
sbb
pop
pop
push
out
cmpsb
aaa
cmpsl
mov
pop
add
jle
or
test
movsb
lahf
pop
les
sub
mov
add
cmp
data16
psllq
jecxz
and
lahf
insl
int
mov
cmc
ljmp
sbb
cwtl
bound
sbb
sub
in
push
popa
aaa
adc
push
ficoms
popf
adc
in
sbb
sub
sub
std
mov
or
sbb
xchg
loop
cwtl
sbb
cli
jle
pop
pop
fstl
jns
xchg
sahf
roll
pushf
jg
and
sbbb
lahf
test
mov
push
fwait
lea
pop
pop
call
mov
jp
xor
add
mov
sarl
add
adc
jg
push
iret
mov
dec
jnp
cwtl
mov
and
jmp
add
pop
and
adc
stc
test
push
gs
test
or
add
and
xorl
cpuid
push
mov
data16
inc
hlt
sbb
mov
bound
pop
outsl
jae
lret
pop
sbb
jbe
cmp
pop
es
dec
daa
adc
je
mov
jnp
pusha
sub
xchg
mov
and
push
and
jbe
xchg
sbb
daa
mov
leave
hlt
sbbb
xchg
xchg
popl
test
mov
mov
mov
stc
fisubs
psubw
or
fimuls
sbb
adc
adc
xchg
std
loop,pn
or
leave
ret
stc
popa
flds
dec
aaa
mov
sbb
xchg
mov
or
push
pop
iret
test
into
fs
sbb
inc
inc
daa
or
mov
cltd
mov
mov
sahf
add
outsb
stc
mov
mov
sbb
imull
daa
pop
mov
xor
sbb
xchg
adc
lahf
sub
cmpsl
je
aam
adcb
sbbl
pop
xchg
stc
jbe
orl
sub
mov
xchg
es
dec
xchg
clts
jl
sbb
sub
mov
cmp
cmp
and
xor
jae
cmpb
les
sbb
sbb
adc
cmp
mov
imul
xor
dec
pop
mov
pushf
into
jns
testl
adc
fisttps
test
mov
adc
jbe
sub
add
add
mov
jne
sbb
mov
jb
mov
fwait
cmpsb
lds
bound
nop
sub
mov
sub
xchg
fsubrs
fisttps
out
fsqrt
movsl
test
push
add
fwait
loop
xchg
mov
jmp
sub
jne
pop
add
cltd
xchg
push
jb
adc
or
xchg
and
add
sub
cld
mov
add
pushf
fxch
fwait
aas
std
and
insb
cltd
into
jns
std
adc
xor
mov
sbb
mov
xchg
ret
or
loopne
mov
jns
mov
pop
xor
xchg
jno
and
lahf
sbb
jbe
adc
cmp
and
xchg
mov
sbb
add
cmp
push
lods
cli
and
test
fbld
in
jg
mov
mov
stos
jb
inc
mov
mov
in
xchg
mov
cmpsl
pop
js
lahf
mov
fildll
std
sbbb
push
inc
sbb
dec
mov
lret
fimuls
xchg
orb
mov
adc
mov
pop
les
lea
mov
or
mov
stos
fwait
dec
xchg
add
dec
lahf
fwait
pushf
stc
push
push
sbb
mov
xchg
dec
cmp
mov
sub
push
jbe
xchg
xchg
jg
cwtl
pop
lcall
jbe
dec
push
cld
cmc
ret
adc
sbb
xor
xchg
cmp
pop
pop
push
add
mov
cmpb
cmpsl
mov
data16
mov
add
adc
test
ja
sbb
sub
jb
mov
es
mov
dec
add
mov
sbb
aaa
repz
xchg
mov
xchg
mov
andb
sub
dec
push
ficomps
pop
push
jbe
adc
lcall
adc
sbb
cltd
cli
add
aam
wbinvd
sbb
cwtl
mov
mov
adc
sbb
je
pop
js
ja
mov
add
and
cwtl
or
adc
sbb
lcall
mov
xchg
sbb
jg
xchg
push
cmp
inc
lahf
call
or
pop
mov
sti
adc
push
call
aam
mov
xchg
adc
outsl
sbb
ud2
pop
and
xchg
jecxz
adc
lods
cwtl
mov
mov
sbb
iret
push
out
and
sbb
dec
xchg
xor
sarl
cmp
in
xchg
or
cltd
mov
sub
mov
mov
mov
movsl
mov
xchg
inc
fwait
push
fisubrl
mov
push
sbbb
sub
cs
lcall
pinsrw
dec
leave
add
sbb
gs
adc
mov
cmpsb
add
jbe
dec
fs
sbb
add
jbe
iretw
jge
popf
pop
add
pop
sbb
or
mov
xchg
mov
mov
fisttps
sbb
mov
mov
xchg
movsl
mov
sbbb
iret
and
adc
test
pop
adc
mov
push
sbb
les
lahf
sahf
les
std
add
push
enter
pushf
adc
mov
add
adc
adc
jo
lods
sbb
sbb
hlt
add
sub
daa
push
and
outsb
xor
lods
mov
xor
xlat
mov
mov
adc
add
data16
and
and
sbb
xor
mov
aad
lcallw
or
sub
mov
in
mov
mov
and
daa
adc
or
clc
pop
dec
sbb
pop
xchg
add
clc
mov
ficomps
pop
xchg
mov
ficoml
movsl
jnp
daa
sbb
pop
pop
inc
pop
mov
sbb
and
lahf
add
adc
add
lods
pusha
addr16
add
cmpsb
nop
iret
mov
movsl
rorb
andb
test
sbb
or
xorb
pushf
adc
adc
movsl
lea
aas
stc
mov
cwtl
fildl
xchg
outsb
or
pop
sbb
inc
ja
pop
push
jge
or
and
add
pop
out
sbb
adc
mov
lock
add
fstps
pusha
pop
jecxz
test
and
and
lahf
leave
out
adc
cld
push
call
xor
or
jns
fcomip
rcrl
mov
mov
pop
inc
sahf
repz
in
lret
cmpsl
adcl
and
xchg
push
xor
pop
or
sbb
cli
mov
jg
lret
mov
xchg
ret
add
add
inc
pop
or
dec
adc
data16
mov
adc
nop
mov
data16
dec
mov
iret
add
loopne
mov
adc
sahf
mov
sbb
inc
mov
or
addb
lods
mov
sbb
xchg
mov
sbb
xor
xor
aas
lcall
shl
mov
mov
fsubrl
pop
cltd
movsl
xchg
addb
outsb
rclb
stos
push
dec
xchg
mov
add
or
jb
data16
mov
pop
xchg
cmpsl
jg
mov
test
mov
lret
push
lahf
sbb
fwait
inc
lods
mov
xchg
sub
push
xchg
mov
jno
xor
jg
mov
or
xor
cmp
sbb
sbbb
rorl
pop
dec
popl
xor
rcrb
adc
push
xor
pop
xchg
leave
sub
mov
pop
mov
cmp
push
sub
or
sbb
sahf
mov
or
sbb
pop
cwtl
sbb
mov
sbb
xchg
mov
push
push
xorb
sbb
sbb
leave
movsb
jns
lcall
mov
lcall
jle
mov
sbb
sub
add
pop
popl
cmp
arpl
movsl
mov
arpl
xchg
add
mov
adc
adc
hlt
popl
adc
dec
fld
or
mov
or
cwtl
cmpsb
push
les
cs
add
xchg
inc
cmp
xor
push
mov
add
dec
xchg
dec
push
nop
cltd
adcb
mov
lret
cli
and
shlb
jle
sahf
push
xchg
sbbl
pop
jno
add
or
xor
int3
adcl
lcall
aas
cmpsb
movsl
test
push
mov
or
mov
sub
or
inc
mov
shrl
xchg
pop
les
mov
pop
sahf
xchg
es
push
xchg
sbb
xchg
xchg
clc
push
mov
fwait
pop
add
jbe
jb
xor
or
adc
cmpsb
adc
pop
pop
jg
test
fs
xchg
cwtl
test
mov
mov
scas
add
inc
mov
mov
jp
cwtl
add
mov
movsl
gs
fwait
sub
test
xchg
test
dec
dec
aam
mov
sbb
xchg
adc
loope
insb
push
sbb
xchg
movsl
outsb
insl
sbb
xchg
jecxz
es
or
mov
mov
negl
sub
sahf
sbb
xchg
mov
pop
in
add
xor
jno
lahf
mov
inc
subb
or
cmpsb
pop
jl
cmp
mov
add
jecxz
mov
push
orb
daa
push
pop
xchg
lds
add
test
mov
xchg
sbb
and
xchg
adc
mov
es
nop
inc
dec
lret
shrl
mov
pop
fdivs
pop
xor
es
xchg
sbbb
mov
nop
lcall
mov
sbb
data16
xchg
dec
lods
jne
jns
cmpsl
pop
push
mov
cvtpi2ps
and
adc
lahf
stos
and
xor
or
dec
cltd
jbe
inc
movsl
inc
push
push
hlt
pop
mov
push
std
sahf
lods
push
sarb
xchg
mov
mov
inc
punpckldq
add
ds
jbe
int
jecxz
xchg
cmpsb
xchg
stc
sbb
jnp
sti
pop
sar
cmp
gs
xchg
jb
or
or
push
rclb
sbbb
or
aad
andb
xchg
cmc
fdivrs
test
xchg
fwait
lcall
and
mov
xchg
fistpll
repnz
mov
adcb
inc
mov
je
test
enter
dec
test
arpl
inc
jge
dec
lahf
sbb
adc
inc
lods
or
push
xchg
and
vmread
xor
adc
xchg
movsl
adc
xchg
cwtl
xchg
inc
and
jno
aas
mov
or
es
pop
mov
test
cmpsb
adc
mov
ret
test
mov
push
es
xchg
mov
add
nop
sbb
and
and
pop
sbb
je
xchg
jbe
xor
aaa
adc
xchg
out
mov
fs
mov
scas
or
jo
sbb
sbb
movsb
mov
sub
push
adc
std
out
jb
pop
cmpsb
aas
fs
xchg
mov
mov
cmp
push
xor
pushf
mov
sub
es
fiaddl
add
lahf
dec
jmp
test
mov
fwait
mov
shrl
cs
sbb
add
push
and
xchg
jb
mov
or
mov
jge
push
dec
fnstcw
sbb
mov
dec
jo
pop
sahf
jbe
dec
or
push
and
adc
mov
and
test
fidivrl
mulb
or
test
cmc
stos
sub
sbb
les
sbb
push
xchg
imul
sub
or
push
dec
cs
adc
mov
pop
loope
repz
loope
add
cmp
jmp
dec
xchg
sub
xchg
push
and
insb
pop
sub
sbbb
push
push
xchg
data16
xchg
andb
add
sub
adc
xorl
cmpsb
pop
mov
movsl
scas
out
scas
push
jmp
pop
add
adc
std
add
and
xchg
jb
mov
sbb
xchg
add
bound
and
pop
sub
add
sub
mov
orl
or
mov
cmpsl
ret
mov
add
mov
xorl
lcall
sarl
adc
pop
push
mov
or
cwtl
enter
cmpsl
cmpsb
or
cmp
lds
shrb
orl
pop
adc
je
mov
xchg
push
pop
fsubl
inc
and
xchg
sub
dec
sarb
ficompl
bound
test
pop
pop
dec
pop
rorb
insb
ds
mov
lcall
dec
xchg
mov
cltd
test
cmpsl
sbb
daa
es
mov
xchg
mov
mov
xor
add
or
cwtl
daa
fdivrp
adc
inc
bound
cs
push
add
adc
outsb
jp
in
push
jle
add
jbe
inc
daa
shrl
sub
adc
push
or
mov
push
inc
add
inc
lahf
clc
inc
repz
mov
pusha
xor
push
xchg
adc
mov
dec
jno
adc
push
xchg
or
adc
push
mov
adc
or
es
mov
aaa
sbb
loope
dec
cmpsl
add
lods
and
sub
sub
sbb
push
add
pop
movsl
inc
and
xchg
push
inc
movsl
mov
iret
xchg
xor
mull
pushf
ss
aaa
sbb
mov
cld
mov
push
add
movsl
or
mov
testb
cltd
mov
mov
bswap
rorb
pop
sbb
pop
testl
sbb
or
cmpsl
jb
pop
mov
sub
sahf
pop
scas
fildll
and
es
or
adc
mov
pop
outsl
cltd
pop
adc
daa
sbbl
sbb
in
mov
mov
xchg
xchg
mov
adc
xchg
stos
cmpb
mov
or
pop
push
mov
add
cmp
add
mov
lds
xchg
sbb
mov
add
sbb
lods
add
pop
mov
mov
cmp
loopew
sti
in
aad
or
lods
or
adc
add
mov
push
add
add
mov
xchg
rclb
wbinvd
mov
adc
test
pop
mov
add
add
add
daa
dec
dec
sub
or
mov
lds
sub
movsl
test
loopne
adc
dec
stos
xchg
adc
adc
inc
push
js
xchg
add
push
aad
jbe
push
orl
fwait
add
cmc
gs
mov
sets
sbb
mov
daa
aaa
cmp
je
jbe
or
adc
sbb
adcb
fwait
xchg
lods
or
pop
adc
xor
cmpsb
or
add
repnz
cmpsl
push
loope
add
jbe
xchg
shlb
stc
add
push
scas
mov
xchg
fwait
xor
stos
test
add
nop
cwtl
or
popa
and
or
ret
test
bound
add
adc
loopne
adc
inc
sbb
push
pop
fiaddl
xchg
movsl
sub
adc
cmpsb
jg
aaa
cmpsl
xchg
or
out
sahf
sub
and
or
andb
es
nop
std
push
pop
daa
sbbb
invd
movsl
ds
adc
add
out
shr
gs
cmc
sahf
ljmp
xchg
mov
nop
adc
mov
les
dec
jg
or
adc
xor
push
xchg
mov
sbb
xchg
add
lcall
pop
aas
sub
add
adc
mov
adc
je
orb
jp,pn
enter
push
dec
les
lods
adcb
sbb
inc
mov
pop
cmpsb
pusha
mov
or
inc
sbb
pop
lcall
sbb
lcall
xchg
jne
adc
adc
sbb
mov
lcall
stc
popf
mov
dec
push
or
iret
leave
roll
and
les
adc
or
stc
scas
xchg
mov
or
pop
mov
pop
mov
cmpsb
add
gs
add
jns
jo
pop
xchg
ret
pushf
loopne
negb
dec
mov
xchg
mov
fsubs
mov
and
xchg
push
mov
fcomps
rorb
test
popf
push
out
add
cmp
xchg
mov
movsl
push
movsl
pop
cltd
lea
fidivs
xchg
ret
mov
or
and
pop
lahf
cs
xchg
mov
lret
stc
daa
stos
add
inc
cmpsl
lods
or
add
pop
pop
add
in
and
and
and
xor
hlt
cs
mov
mov
int
mov
xchg
mov
mov
mov
push
or
movsb
stc
daa
test
mov
dec
sbb
mov
mov
cmpsb
aas
xor
orl
sub
xchg
clc
push
adc
rclb
andb
aas
nop
adc
mov
sub
cmp
sbb
addl
pop
mov
push
xchg
add
xchg
mov
jae
add
add
push
adc
mov
mov
add
sbb
sbb
std
push
xor
sbb
add
xor
sbb
sbb
lahf
divw
nop
movsl
inc
jg
mov
pop
and
add
cwtl
mov
jno
add
aad
cltd
stc
mov
mov
mov
lcall
cmpsb
mov
setl
push
mov
xchg
cmpsl
out
xchg
mov
mov
into
cwtl
dec
lcall
mov
sti
push
cld
addr16
cmpsb
mov
data16
dec
leave
inc
sbb
rcrl
mov
inc
outsb
sub
sub
aas
and
add
push
imul
lahf
xor
add
ss
daa
stos
sbb
paddd
xchg
pop
sti
das
mov
enter
sbb
inc
push
addr16
or
nop
sbb
add
add
sti
test
or
cmp
push
adc
outsl
or
or
test
mov
and
loope
mov
ljmp
sbb
ds
ret
cwtl
jnp
into
and
and
inc
push
push
cmp
xor
stos
inc
xchg
or
stc
sub
fwait
mov
mov
test
mov
mov
and
and
mov
adc
add
adc
pop
test
pushf
jle
pushf
mov
bound
add
sbb
xor
pop
sbb
cltd
sub
lcall
dec
sbb
dec
xor
xor
and
mov
mov
dec
adc
jbe
addl
dec
adc
push
xchg
std
adc
and
add
pop
mov
xchg
lds
push
adc
jb
aam
pop
mov
or
rcrl
int
mov
xchg
cmc
arpl
nop
mov
ffreep
add
xchg
pop
cmc
adc
fs
push
and
lret
push
outsb
inc
sysret
clc
inc
add
subb
xchg
lret
aaa
nop
xor
lods
sar
cmpsl
fmul
loope
add
shl
sub
nop
sbb
and
out
insb
stos
or
xchg
fstpl
xor
out
add
push
mov
mov
xchg
pop
out
and
sub
aas
orb
mov
sbb
and
cmp
add
fldl
dec
outsb
stc
rolb
cmp
cmpsl
bnd
pop
and
inc
dec
mov
or
adc
cwtl
ret
leave
lret
push
or
stc
imul
sbb
adc
aas
jbe
sbbl
cmc
ljmp
xchg
sub
cmp
add
nop
dec
je
xor
mov
and
or
mov
sbb
movb
adc
xchg
xor
mov
pusha
add
mov
les
mov
movsl
test
jns
fistps
lahf
push
dec
mov
sub
fstpt
lods
adc
add
dec
hlt
push
mov
ljmp
es
movsl
xchg
int
mov
xchg
cwtl
sub
test
andl
pop
fisubrs
push
sbb
lods
and
sahf
sub
push
test
into
stc
mov
adc
cwtl
push
outsl
xchg
sbb
mov
or
adc
enter
push
jbe
icebp
jl
je
inc
daa
jbe
outsb
jecxz
mov
pop
pop
jns
or
sub
xor
xchg
pavgb
mov
pop
out
outsb
push
jne
mov
lea
in
push
ret
out
xchg
cmp
or
add
push
maxps
cltd
cwtl
or
je
lds
sbb
lahf
adc
lcall
mov
xor
sbb
pcmpgtb
or
pop
mov
pop
mov
movsl
and
cmp
fwait
and
inc
sahf
xor
sbb
sbb
mov
mov
push
inc
xchg
mov
mov
mov
pop
add
xchg
movsl
mov
push
dec
or
jbe
hlt
or
xchg
mov
sarl
test
lahf
pop
jl
aas
adcl
cmp
sbb
aad
push
aas
xchg
es
mov
and
sbb
push
lcall
or
xchg
add
xchg
pop
leave
mov
mov
or
test
fiadds
add
je
mov
shlb
inc
jg
pop
push
mov
jb
outsl
or
mov
arpl
dec
pop
lahf
sbb
cmpsb
mov
call
jp
adc
mov
lahf
enter
iret
inc
adc
lahf
inc
xor
push
and
fwait
stc
ds
call
and
cmpsb
dec
loopne
jle
sbbl
mov
mov
test
dec
pop
rcrb
mov
sbbb
xchg
loopne
jg
xchg
iret
push
push
mov
in
rcrl
mulb
aaa
mov
sbb
mov
adc
cltd
jle
lahf
test
add
cmpsl
xor
cmp
push
in
out
fidivrs
sbb
adc
add
adc
push
lcall
push
popf
outsb
cmp
fwait
mov
pop
fnsave
adc
adc
dec
add
xchg
fsubrs
sbbb
cmpsb
pop
mov
mov
or
pop
inc
fwait
cltd
bound
push
cmp
bound
cmc
je
and
outsl
jmp
stos
pop
and
rolb
imul
inc
adc
jb
aas
mov
sub
test
arpl
ljmp
xchg
iret
imul
jl
lea
sahf
mov
or
mov
mov
and
jecxz
lods
push
adc
inc
pop
sbb
mov
es
stos
push
pop
pop
test
sbb
mov
mov
mov
movsb
jbe
iret
mov
mov
sbb
lock
pushf
or
rclb
sub
xchg
lahf
cltd
movsl
bound
xchg
stos
sbb
push
imul
or
pop
xor
add
es
sbb
es
cmc
cltd
jno
jecxz
mov
inc
imul
mov
sub
pop
mov
mov
ds
sbb
add
orl
inc
adc
push
movsb
sbb
fs
sub
cli
push
pop
push
mov
sub
add
mov
pusha
clc
push
stos
add
fwait
xchg
inc
iret
mov
stc
xchg
scas
xchg
xchg
mov
in
pop
outsb
jne
dec
sbb
add
pop
stc
cmp
xchg
cwtl
jne
pop
adc
mov
psubw
or
es
adc
loopne
mov
les
lcall
sahf
sub
inc
xchg
adc
mov
out
push
cmpsb
sbb
rorb
or
inc
mov
bound
nop
popf
mov
mov
movsb
push
aaa
es
xor
in
mov
rorb
jle
or
nop
mov
add
jno
or
or
jg
or
popl
inc
mov
ret
aas
andb
sbb
xor
push
pop
mov
aaa
add
add
fnstenv
and
mov
or
sahf
or
lahf
daa
add
add
adc
iret
sbb
or
lcall
mov
fwait
sbb
aad
movsl
mov
add
xchg
mov
data16
adc
movsl
std
ret
xchg
je
adc
pop
push
std
mov
pop
scas
xor
inc
es
cmpsl
adc
or
sub
and
and
cmpsb
scas
out
and
mov
test
fwait
add
inc
outsl
jle
adc
divb
mov
mov
lock
adc
pop
enter
sbb
xchg
push
mov
cmc
mov
daa
inc
nop
sbb
mov
add
xchg
stc
fisubs
ret
or
push
cmc
push
int3
mov
cs
nop
push
movsl
xchg
add
je
adc
or
mov
xchg
mov
pop
les
jecxz
dec
cmp
mov
jb
ret
push
jle
mov
rcll
and
sub
sub
popf
icebp
or
cmpsl
je
popf
add
prefetch
mov
pop
mov
adc
fs
mov
cmp
adc
mov
enterw
adc
mov
pop
clc
and
in
mov
xchg
dec
inc
sbb
add
or
mov
pusha
nop
xchg
jbe
mov
cli
leave
rolb
pop
mov
daa
lods
xchg
xchg
sbb
stos
push
test
push
mov
or
dec
dec
xchg
push
inc
lret
cmpsb
adc
xchg
adc
out
xchg
or
ficoms
mov
or
or
or
cli
sbb
sbb
das
mov
sub
sub
xchg
cwtl
inc
cltd
and
adc
mov
shlb
cmpsb
stos
std
add
rclb
pop
cmpsl
or
and
and
scas
nop
lahf
add
pop
mov
divl
push
mov
xchg
adc
aaa
push
mov
pop
adc
js
adc
pusha
mov
mov
push
push
mov
mov
xor
andl
jb
mov
mov
cmp
jbe
test
dec
and
lahf
aam
ficompl
xchg
mov
enter
test
dec
adc
movsl
jecxz
stos
dec
mov
lahf
or
pusha
cmp
or
sbb
js
sub
pop
jae
xchg
push
icebp
mov
mov
cmp
or
test
add
test
mov
aaa
sub
addr16
test
sub
adc
pop
jbe
xor
lahf
sbb
mov
push
sub
fiadds
mov
jg
cltd
add
ret
mov
xor
inc
cmp
shlb
cmpsb
add
xchg
push
and
adc
sbb
adc
inc
add
cmpsl
and
cwtl
pop
lret
rcll
movsl
aas
dec
sub
sub
dec
lods
xorl
mov
mov
pushf
push
mov
fwait
jg
mov
adc
xlat
adc
and
insb
xchg
adc
je
stos
addl
hlt
mov
fwait
cmp
int
push
mov
ud2
or
xchg
dec
in
push
ds
pop
or
clc
shl
les
xchg
jne
fwait
shll
dec
mov
add
in
sbbl
std
lods
sub
and
imul
inc
sbb
or
imul
pop
rorl
adc
inc
sahf
mov
mov
xchg
dec
adc
stos
daa
inc
mov
cli
nop
inc
into
inc
cwtl
xchg
ljmp
sub
iret
inc
cltd
and
pushf
inc
sbb
es
enter
mov
adc
inc
sbb
sbb
cwtl
ss
stos
pop
mov
sub
arpl
les
mov
mov
leave
xor
and
mov
mov
pop
sbb
test
xchg
xchg
hlt
adc
lods
fwait
fs
imul
adc
pushf
sbb
dec
fistpll
subb
add
out
rolb
pop
push
fwait
adc
cltd
sbb
cmpsb
das
nop
jl
pop
mov
test
lock
add
nop
push
xchg
add
cmpsl
mov
aas
adc
fdivrs
push
inc
sbb
sbb
cmpxchg
lahf
xchg
cmp
jmp
je
add
sahf
push
nop
daa
pop
cltd
xorb
sub
test
gs
sbb
es
sub
and
mov
adc
ljmp
sub
mov
cmp
mov
add
mov
xchg
sub
sbb
cltd
push
daa
xchg
pop
cmc
jns
sub
cmpsl
and
lock
jle
push
and
hlt
inc
xchg
pop
fwait
stc
mov
sbb
jo
sbb
cs
add
icebp
lahf
xchg
in
repnz
add
lcall
icebp
or
add
xchg
call
push
pusha
pop
xchg
bound
sbb
out
out
sbb
mov
bound
es
andb
pop
sbb
mov
adc
mov
loope
adc
xchg
orl
adc
jns
movsl
sbbb
rorb
pop
fs
call
and
mov
test
cmpsl
mov
xchg
addr16
push
add
jmp
xchg
stos
fwait
aaa
lcall
je
pop
sub
lcall
aaa
push
push
add
jle
pop
orl
mov
jmp
sub
dec
sysenter
xchg
sbb
cmc
lods
adc
cmp
pop
mov
mov
ret
mov
sahf
addl
xor
xchg
mov
sub
sbb
jl
sbb
adc
cmp
jmp
jb
sub
pop
mov
loopne
or
lcall
push
dec
cmpsl
movb
or
movsl
add
sbb
fbld
mov
mov
test
cltd
test
pop
lahf
and
sbb
xchg
jg
pop
cmc
mov
add
fs
and
mov
addr16
dec
push
sub
mov
stc
sub
push
std
fistps
les
outsl
sub
jmp
push
sub
xchg
mov
mov
nop
sbb
ss
xchg
mov
push
xchg
lods
xchg
adc
mov
xorb
push
in
sbbl
push
mov
cwtl
test
mov
loope
xchg
cwtl
mov
pusha
inc
and
adc
out
mov
je
dec
dec
mov
jb
pushf
fwait
aaa
xchg
pushf
mov
sahf
sub
xor
cmpb
fwait
daa
pop
add
icebp
push
xchg
xor
push
mov
pop
cwtl
push
call
rcrl
aas
sub
gs
sbb
cmpsb
xchg
cld
insl
aaa
sbb
add
xchg
scas
push
or
sbb
pop
or
sbb
add
inc
mov
adc
push
push
bound
sbb
mov
pushw
inc
add
adc
ss
mov
dec
stc
filds
addl
shll
adc
push
or
cmc
pop
or
mov
notl
push
and
xchg
mov
fisttpll
sbb
bound
pop
ljmp
sub
push
or
rcrl
lods
dec
les
inc
xor
xor
or
jb
sbb
aad
sbbb
pushf
mov
decl
or
cmc
cwtl
cmc
jl
pop
test
push
outsb
and
jge
mov
adc
insl
aas
movsl
mov
jge
repz
pop
mov
push
int
imul
movsb
cmp
adc
jmp
pushf
or
xchg
mov
sbbl
adc
stos
lahf
sbb
sbb
jb
xchg
subl
xor
ud2
add
cmpsl
imul
adc
push
test
cmp
pushf
jg
push
sbb
push
mov
je
xor
or
or
xor
jmp
mov
sbb
cli
sub
ds
xchg
mov
or
adc
sbb
inc
nop
cmp
or
xchg
push
cwtl
cltd
xchg
pop
mov
cmp
push
adc
push
mov
xor
add
test
cmp
sbb
inc
cmpsl
mov
mov
xchg
stos
nop
mov
and
lea
mov
adc
fwait
inc
scas
hlt
push
mov
push
dec
add
pop
fwait
aaa
push
das
orl
sbbb
add
daa
jl
push
adc
adc
inc
sbb
sub
sarl
mov
pop
data16
lahf
es
rclb
lods
sbb
push
or
jge
or
andb
or
or
xchg
test
adc
push
or
and
sub
inc
or
xchg
jmp
fidivl
outsb
xor
or
pop
aaa
cmp
cwtl
mov
cltd
xchg
scas
add
cli
mov
jns
mov
sub
inc
mov
fwait
xchg
rcrb
pusha
add
and
jo
adc
sbb
pop
mov
add
adc
xor
sub
mov
inc
orl
pop
push
add
xchg
and
adc
lds
pop
mov
or
test
pushf
out
bnd
sub
lcall
bound
mov
sbb
nop
cmp
cmp
icebp
xchg
test
adc
movsl
push
pop
sbb
xorb
sbb
fwait
pop
xchg
mov
cmp
lods
push
pop
adc
xchg
xchg
lahf
lods
sub
push
das
xchg
xchg
test
adc
xchg
cwtl
cmpsl
lock
mov
add
adc
adc
xchg
cld
push
inc
mov
fucomi
lea
movlps
mov
sbb
mov
or
mov
add
xor
fucom
adc
outsl
lahf
fsubr
pusha
jbe
pop
or
xchg
andb
pop
and
sbb
pop
pop
adc
push
adc
lcall
cltd
mov
pop
jmp
or
xchg
mov
inc
sbb
out
test
add
pop
stos
add
in
out
cmpl
adc
push
jge
test
ja
mov
mov
lcall
or
or
xchg
push
jb
mov
loope
orb
and
add
mov
dec
cmpsl
adc
or
cmp
sbb
arpl
sbb
repnz
movsl
test
add
sub
movsb
adc
enter
mov
jbe
cmp
adc
cmpsb
sbb
nop
sub
mov
sbb
adc
dec
and
popf
pushf
sub
or
lahf
mov
pop
cltd
jp
std
aaa
xchg
xor
addb
and
cmpsb
test
xchg
aaa
stc
mov
into
adc
add
test
add
jle
mov
push
lock
insl
adcl
andb
lahf
daa
mov
ja
jbe
sbb
adc
push
cmp
test
aaa
rorb
cmpsl
cwtl
sbb
sbb
adcb
lods
dec
or
fdivrs
push
test
or
mov
jb
mov
sti
xchg
cmp
je
mov
out
sbb
pushf
fidivrl
pop
sub
pop
mov
sbb
jle
push
and
and
xor
mov
mov
ja
jns
xchg
pop
rolb
inc
mov
lea
pop
add
and
cltd
adc
lahf
out
add
lods
pop
fwait
and
xor
dec
adc
cwtl
cld
jae
dec
dec
sbb
popf
adc
pop
mov
loopne
cld
inc
add
or
bound
and
sbb
or
pop
or
xor
pop
ds
sbb
adc
add
test
mov
lret
sub
test
test
pop
sub
lret
lods
push
mov
aaa
and
daa
scas
aas
lds
dec
mov
cmovno
aas
or
or
inc
popf
mov
cmpsl
adc
cmpsb
fwait
or
ret
movsl
loopne
movnti
aas
pop
pushf
cmp
jle
adc
andb
and
stos
jle
lahf
sbb
cs
xchg
lcall
das
add
mov
add
or
cmpsb
lcall
xor
ret
pop
jb
sbb
sbb
inc
pop
data16
and
push
jbe
int3
xchg
jecxz
sub
sub
adc
sbb
dec
or
aas
push
jg
mov
lcall
adc
mov
mov
js
push
and
or
push
push
or
mov
adc
daa
fidivs
and
sar
pushl
adc
pusha
scas
jg
sbb
push
insl
sbb
xchg
mov
adc
fwait
lock
cli
out
ja
es
ret
pop
sbb
and
dec
movsl
and
fsubl
sub
int
push
fwait
or
lcall
sub
and
out
rol
aam
inc
xor
movsl
cltd
jbe
lods
xchg
popl
adc
xchg
xorb
lahf
or
test
nop
xchg
insb
add
es
insb
mov
or
idivl
xchg
es
rcrl
rorb
mov
inc
es
dec
rolb
sbb
addb
adc
mov
fidivrl
jg
xchg
push
xchg
mov
and
fistps
sub
sbb
movsb
adc
push
pop
cwtl
dec
xor
add
mov
cmc
inc
and
adc
adc
pop
mov
mov
add
and
jle
jb
mov
loope
lcall
cmpsl
push
test
and
dec
xchg
pushf
daa
add
lahf
jns
sbb
pop
adcb
dec
sbb
mov
and
cmc
xchg
add
xchg
mov
enter
jmp
xchg
jns
mov
or
mov
push
push
sub
test
gs
or
pop
jne
adc
stos
mov
dec
add
and
mov
pop
stos
mov
adc
fisubrs
and
xchg
xchg
incb
add
es
std
pop
int3
ds
daa
and
dec
push
cmp
test
add
or
inc
aas
sti
sbb
mov
aaa
xchg
cmpsl
xchg
mov
push
cmp
sbb
sbb
cwtl
orl
sbb
xchg
or
les
rclb
jl
or
out
xchg
xor
roll
adc
push
xchg
add
mov
movups
test
cmpsb
add
bound
bndstx
daa
pop
ds
fwait
mov
pusha
add
data16
and
and
add
push
or
push
call
fwait
test
mov
mov
fwait
ja
out
cmpsl
xor
stos
fwait
lcall
mov
add
aaa
sahf
cmp
xchg
dec
sub
lret
sbb
mov
sbb
xchg
adc
add
nop
inc
pop
adc
or
sbb
mov
mov
or
or
cmp
addl
daa
test
aam
push
pop
stc
add
cmpsl
daa
mov
xorb
arpl
pcmpeqw
dec
mov
outsl
xor
or
or
jle
add
and
pop
mov
push
push
pushf
mov
sub
pop
cmp
shrl
sahf
and
adc
xchg
fs
mov
mov
inc
sbb
sbb
xchg
cld
dec
cmp
adc
push
hlt
cmpsl
sub
sbbb
xlat
mov
dec
das
sub
xor
inc
xchg
pop
cmp
frstor
mov
dec
mov
mov
scas
adc
lcall
cmp
fnstsw
push
sbb
or
or
mov
data16
mov
sarb
lea
test
pop
fstps
dec
lods
shll
jmp
jne
inc
test
or
mov
dec
les
push
xor
and
sahf
jo
mov
lcall
push
hlt
adc
add
xchg
sbb
rcrb
xchg
sbb
hlt
stc
or
repz
shlb
add
es
jo
rcrb
mov
cmpsl
imul
daa
jbe
fwait
push
xor
xor
lea
pop
aas
test
mov
ficoms
adc
daa
imul
xchg
jo
pop
sub
mov
stos
es
adc
aad
mov
cmp
fxch
in
cmp
mov
cmpsl
dec
pop
pop
popa
pop
mov
push
dec
sbb
push
pop
mov
and
adc
xor
enter
sbb
xor
xchg
pusha
pushf
sbb
inc
jge
dec
mov
dec
sub
sahf
cmp
mov
add
nop
or
xchg
test
fwait
lcall
test
adc
inc
and
push
iret
and
push
sub
orl
mov
xor
es
adc
mov
sbb
pop
add
into
test
lcall
cwtl
add
adc
adc
negb
or
or
inc
push
add
and
add
inc
jmp
gs
push
and
popa
lods
xchg
add
fisttpl
inc
mov
sahf
xchg
sbb
sbb
xor
or
sbb
xor
push
cmp
in
movsl
inc
mov
adc
sbb
jp
in
movsl
jns
sahf
adc
and
or
add
test
cmc
jecxz
xchg
sbb
insb
rcll
inc
hlt
inc
add
and
jbe
add
push
ret
call
push
divl
aaa
xchg
fwait
adc
jmp
mov
nop
push
out
mov
cmpsb
xchg
xchg
inc
sbb
cmpsl
or
mov
repz
jnp
jle
add
xchg
mov
inc
cltd
sbb
mov
add
inc
cmpsl
arpl
int
xchg
inc
add
test
add
mov
adc
movsl
dec
outsb
and
xchg
or
and
add
popf
adc
je
inc
outsb
cmp
or
test
arpl
xchg
push
in
mov
cmpsl
mov
dec
inc
lahf
adc
push
add
push
pop
push
std
dec
sub
mov
jecxz
xchg
or
and
adc
sbb
cs
xchg
cld
inc
or
lcall
pop
cltd
cli
jecxz
lods
scas
repz
cmpl
and
mov
insb
add
mov
je
in
xchg
adc
lret
cmp
test
adc
mov
mov
cmp
andl
sbb
inc
cwtl
mov
es
mov
jmp
jg,pn
ret
adc
js
mov
lods
cmpl
mov
xchg
sbb
or
mov
shlb
push
jns
xor
insl
adcl
repz
je
or
add
pop
outsl
sbb
xchg
sbb
sbb
shll
mov
jle
sub
mov
xchg
xor
stos
or
mov
cli
clc
roll
mov
xchg
sbb
fs
ds
stos
sahf
lahf
sbb
cltd
xchg
popf
andl
or
loop
repnz
xchg
das
adc
aam
push
push
xor
add
xchg
ja
call
lock
sbb
push
push
mov
xor
xchg
add
xchg
lahf
daa
and
mov
xchg
adc
lcall
and
adc
xor
or
test
cltd
in
sbb
test
and
mov
add
or
ret
es
out
adc
lret
pop
sbbb
test
push
daa
mov
sub
stos
xlat
je
cmp
mov
sti
sbb
cli
test
movsl
stos
mov
mov
dec
xor
sub
cmp
or
int3
aas
mov
mov
js
in
inc
test
push
or
adc
je
inc
adc
enter
aas
xlat
sbb
fiaddl
ficompl
add
cmp
ja
jge
jnp
xchg
movsb
outsb
push
adc
push
daa
mov
bts
push
inc
push
test
mov
aaa
mov
xchg
push
mov
fildll
push
test
pop
stos
mov
ja
mov
jb
je
mov
fstl
add
sub
push
push
add
inc
mov
test
sbb
and
lods
xchg
push
xchg
sti
adc
or
mov
movsb
mov
jno
or
dec
jae
mov
add
add
int3
sub
adc
arpl
xchg
cmpsb
loop
cltd
sbb
dec
adc
add
std
sub
inc
ss
fs
xchg
mov
and
addb
or
mov
daa
fwait
lcall
jb
inc
xchg
adc
aas
mov
adc
and
or
sub
cwtl
aaa
jecxz
lods
sbb
or
ja
jl
out
sbb
pop
call
push
movl
xchg
inc
and
mov
cltd
adc
pop
enter
sbb
rorl
ret
lds
pop
sub
adc
adc
push
mov
push
mov
sbb
js
or
mov
pop
repnz
test
xchg
mov
cmp
pop
pop
push
adc
jp
xchg
adc
std
stos
ret
xchg
xchg
out
lods
jo
xchg
out
imul
pop
decl
adc
lahf
and
add
lock
or
ffree
lock
pop
into
mov
cs
or
add
out
daa
dec
adc
jle
sbb
test
adc
inc
sbb
out
and
addr16
xor
mov
mov
cltd
sub
or
stos
push
adc
sub
test
aam
and
pop
add
pop
inc
mov
es
addr16
add
push
xchg
sbb
andb
daa
aaa
inc
mov
xchg
jno
sti
pop
and
sub
jae
mov
nop
daa
pop
les
pushf
push
out
je
orl
xchg
xor
test
sub
pop
addr16
aaa
xor
or
je
xchg
lahf
notb
lods
mov
adc
mov
jo
jbe
cwtl
and
jle
pop
mov
xchg
cmc
adc
je
ret
cltd
cld
push
adc
mov
xor
fistps
mov
sbb
rolb
sbbb
pop
mov
and
add
popf
dec
nop
mov
and
adc
or
xchg
stc
sbb
mov
add
icebp
push
nop
test
jmp
mov
pop
lcall
xchg
pop
int3
inc
or
xchg
movsb
pushf
xchg
push
clc
mov
out
xchg
xor
sbb
push
fwait
orl
xchg
das
lea
jne
xor
stos
mov
sbb
aas
sbb
mov
fidivrl
or
mov
stos
jmp
mov
sbb
or
pop
lret
inc
cmp
pop
and
mov
push
mov
adc
fnstsw
lret
mov
sbb
mov
cmpsl
push
mov
sbb
adc
insb
mov
and
daa
or
mov
and
loop
adc
add
push
iret
cmp
es
and
adc
sbb
mov
adc
mov
je,pn
bound
push
cmpsb
or
movsl
jmp
ja
adc
cltd
xor
es
pushf
lods
or
and
or
cmpsb
into
mov
jne
xchg
test
imul
jmp
xchg
pop
sbb
dec
mov
mov
or
imul
sub
mov
dec
adc
mov
inc
adc
or
add
jbe
cltd
mov
jae
or
sbb
cs
call
adc
and
loop
push
sbb
add
and
push
pop
sub
nop
adc
fwait
cmp
sti
cwtl
pop
add
pop
lret
push
xchg
daa
sbb
add
inc
into
lds
xlat
pop
sbb
pusha
add
inc
loope
subb
es
and
xchg
mov
xchg
sbb
cmpsb
add
xchg
mov
inc
add
lcall
lock
sahf
movsl
adc
test
adc
and
xchg
sbb
mov
sub
lcall
xor
lahf
add
pop
ficomps
and
cmpsb
adc
and
and
sub
and
addl
lock
and
push
push
mov
int3
adc
arpl
pop
lods
stc
push
pushf
insb
sbb
mov
outsb
cmp
loop
cmpsb
and
or
scas
cmc
jne
or
add
jle
adc
or
jb
nop
adc
sbb
popa
lcall
into
daa
adc
sbb
out
mov
dec
push
or
fwait
sbb
mov
pop
xchg
aad
or
cmpb
xor
pusha
push
jg
or
mov
subb
sub
hlt
push
roll
xor
sbb
std
ja
or
mov
int3
or
xor
add
cmp
jnp
sbb
cs
adc
movups
and
adc
xor
loope
js
scas
mov
outsb
out
out
mov
mov
xchg
mov
or
sub
cmc
or
pop
sbb
mov
enter
insb
shrb
pop
adc
cmp
push
adc
data16
outsl
cmp
stos
aas
xchg
lahf
xchg
mov
add
pop
or
adcb
cmc
fisubrs
xor
mov
addb
sub
es
cmp
adc
mov
sub
pop
mov
insb
dec
test
dec
pop
hlt
jge
outsb
enter
pop
adc
test
xor
or
out
stos
sub
sbb
xchg
mov
inc
mov
sbb
and
fwait
mov
pop
jmp
fidivrs
and
pushf
ss
jo
icebp
sbb
je
mov
cli
out
or
mov
gs
lahf
mov
and
fsts
sti
dec
cmc
cmp
adc
xor
movsl
mov
dec
std
dec
cmp
test
add
mov
cld
jbe
push
or
test
addr16
or
mov
xchg
xchg
adc
repz
or
loope
pop
mov
mov
addl
add
inc
or
mov
mov
sbb
cmpsb
mov
movsb
adc
adc
mov
pop
jb
push
pushf
sbb
out
sub
ss
sbb
adc
jg
sub
pusha
and
jno
cmp
popa
push
pop
lods
and
cmc
loop
mov
stos
lock
pop
xor
addr16
cmpsb
mov
add
pop
add
push
sbb
jbe
in
pop
decl
xor
xchg
aas
mov
test
in
or
sbb
xor
xor
sti
xchg
dec
inc
jle
sub
and
bound
jbe
adc
cmpsb
and
pop
sub
xor
add
ret
sbb
sbb
add
xchg
or
mov
outsl
add
test
cmp
in
fistpl
add
sbb
adc
adc
outsb
dec
ljmp
mov
test
leave
or
pushf
xchg
cs
cmpsl
leave
mov
adc
cwtd
xchg
add
nop
xchg
or
cmpl
xorb
aas
mov
cli
or
jns
add
ficoms
les
cltd
sahf
xor
or
clc
in
imul
out
in
jle
cltd
test
pop
or
xor
xchg
cltd
sbb
adc
cmp
xor
jno
xchg
mov
dec
adc
add
jb
sub
xchg
pop
lahf
subb
xchg
hlt
pusha
in
loopne
stc
adc
sbb
inc
add
pop
or
push
enter
mov
sbb
cltd
fidivrs
fwait
mov
inc
add
mov
xchg
cmpsl
flds
add
mov
add
js
dec
push
sahf
sub
mov
fwait
movsb
sub
and
add
cli
xchg
pop
sbb
sbb
sbb
xchg
pop
nop
stos
fwait
and
add
loope
sbb
incb
mov
fistl
dec
sbbl
pop
je
add
adc
cwtl
adc
ds
sbb
dec
cmp
mov
cmpsl
pop
xchg
push
popl
fwait
adc
cmp
lcall
mov
dec
shll
or
xchg
mov
lcall
add
pop
mov
xchg
cmpsb
pushf
mov
daa
sbb
pop
mov
sti
push
sbb
add
add
mov
xor
and
and
xor
cmpsb
mov
inc
adc
xchg
mov
cmp
ljmp
jb
mov
add
icebp
inc
stc
xchg
pop
adc
jge
xor
and
xchg
xor
adc
pop
or
or
xchg
nop
lock
and
fmulp
mov
inc
push
xchg
xchg
dec
sbb
sbb
lcall
loop,pn
cmp
dec
mov
xchg
daa
sbb
cmpsb
fidivs
sub
and
jl
xchg
sbb
fisubl
and
jge
inc
nop
pop
cmpsl
test
loopne
mov
sbb
sbbl
inc
sub
push
mov
fs
mov
pop
adc
mov
test
lcall
and
mov
xor
mov
ss
sbb
ljmp
mov
stc
mov
adc
xchg
sahf
into
push
push
cltd
or
pop
adc
or
vmovdqa
push
add
or
dec
jp
nop
jl
jmp
xchg
sbb
adc
mov
loopne
pusha
xor
sti
je,pn
inc
pushf
mov
repz
and
clc
lock
mov
in
sub
sbb
jno
pop
add
push
addr16
pop
fisttpl
fiadds
lret
cli
std
mov
pop
test
add
addb
xchg
mov
mov
mov
sbb
sbb
xor
nop
fs
xchg
jo
sub
push
xlat
jp
and
into
frstor
pop
pop
xchg
adc
add
out
insl
mov
sbb
pop
fsubs
mov
lcall
fidivs
cmp
sbb
ss
adc
cltd
and
push
aas
sub
mov
cmpsb
mov
xor
pushl
dec
add
xchg
dec
sub
outsb
push
daa
adc
sbb
adc
adc
dec
gs
sbb
es
cwtl
les
adc
seto
dec
cmpsl
mov
pop
mov
mov
out
or
shlb
test
cmp
jmp
sbb
mov
cs
sbb
add
mov
pop
pop
cmpb
push
mov
cmp
mov
lods
cli
dec
cmp
stc
jle
mov
sbb
orl
pop
xchg
dec
mov
fwait
xchg
sub
pop
addb
or
iret
push
es
cmp
push
mov
xor
pushf
add
test
cs
mov
mov
or
ss
lahf
fiaddl
inc
push
and
dec
rol
pop
pop
frstor
mov
mov
lcall
arpl
nop
adc
xor
sub
adc
sbb
mov
adc
or
aaa
lahf
bound
fwait
cltd
xchg
sbb
pop
sbb
add
popf
sbb
mov
sub
pop
dec
sbb
sbb
push
rolb
sbb
sahf
xchg
stc
addr16
inc
add
dec
add
jle
cwtl
or
push
leave
sbb
jge
sbb
add
jne
syscall
andb
adc
jo
stc
fwait
movsb
adc
movsl
cltd
into
pop
sbb
test
jbe
jge
sbb
add
mov
jle
sub
push
mov
dec
jmp
mov
in
dec
jl
xchg
mov
mov
xchg
fwait
xchg
xor
mov
mov
js
adc
sub
inc
sbb
faddl
popf
xchg
jo
xchg
cmp
sub
cmpsb
lret
rcrb
mov
jb
jo
pop
stos
lahf
adc
pop
or
cmpsl
or
aas
fwait
lahf
and
mov
sub
sti
es
sub
inc
cmp
xor
in
adc
aaa
lret
mov
cltd
and
xchg
add
addr16
mov
mov
adc
cmpsb
jb
pop
je
xchg
mov
inc
mov
mov
loopne
or
mov
xor
mov
jbe
sub
xchg
and
cli
mov
sbb
inc
sbb
lret
out
out
inc
fisubs
xorb
sti
xor
lock
xchg
je
mov
xchg
and
and
adc
mov
cmp
xchg
mov
pop
sbb
push
or
or
or
sub
ficomps
pop
imul
mov
daa
cwtl
adc
add
les
clc
pop
sbb
sub
cmpsl
in
or
jbe
mov
cmp
mov
mov
rorb
sbb
mov
sarl
lret
das
lret
cmp
adc
mov
lods
fimull
test
cmpsl
xchg
jb
iret
fsubl
mov
sbb
aam
or
jle
and
adc
adc
jb
int
movsl
jg
addb
fisubl
cmp
push
mov
xchg
cltd
pop
mov
jae
sub
aaa
pop
adc
sbb
pop
pop
hlt
adc
lea
mov
xchg
es
cmpsb
cmpsl
pushf
inc
add
lea
push
and
je
cmp
es
or
add
pop
sbb
add
push
imul
nop
add
sbb
sti
or
mov
and
out
xchg
in
je
or
lods
sbb
add
lahf
je
loop
add
mov
pop
add
add
lcall
sub
push
push
and
sub
int3
outsl
scas
repz
adc
andl
xchg
sahf
jge
sbb
xchg
pop
or
xchg
fistps
adc
in
sub
fiadds
mov
xchg
mov
pop
rcll
pop
or
mov
jns
sbb
xchg
add
dec
xchg
sahf
hlt
add
mov
or
stos
aam
lock
dec
xchg
arpl
or
je
mov
cltd
insb
popf
adc
adc
rorb
pushf
outsb
cmpsl
mov
mov
lahf
sub
dec
clc
mov
imul
cmp
cmpsb
outsl
mov
sub
xchg
pop
sarl
mov
sbb
cltd
dec
xchg
and
clc
or
cwtl
add
xchg
addb
and
aad
sub
cmpsb
add
nop
sbb
insl
call
mov
imulb
mov
fidivs
xchg
sbb
mov
loopne
mov
loopne
adc
cltd
mov
cwtl
xchg
fistl
adc
mov
je
sub
fisttpll
adc
insb
xchg
mov
aaa
push
mov
cmpsb
jo
inc
xchg
inc
mov
adc
push
mov
fwait
daa
outsl
icebp
fists
subb
sub
add
fidivrs
or
test
scas
or
stos
xorl
push
or
insl
mov
push
gs
out
out
mov
es
dec
xchg
cmpsl
bound
mov
rorl
and
arpl
add
mov
adc
into
lds
mov
add
add
dec
bound
mov
inc
inc
adc
jne
mov
mov
nop
cltd
xchg
sbb
lcall
ret
dec
or
adc
icebp
push
sti
test
ss
je
mov
or
sbb
xor
jbe
ret
and
fsubrl
mov
sbbl
vpmacsdd
pop
fcoml
dec
pop
add
mov
push
sub
mov
cs
hlt
push
and
mov
lock
insl
mov
xchg
xchg
fs
sbbb
js
fdivp
xchg
adc
mov
push
daa
nop
push
xchg
daa
or
xchg
cmp
jp
adc
push
inc
dec
in
push
jns
orl
mov
mov
sub
stos
xchg
sub
mov
push
nop
in
mov
mov
xchg
sub
test
pop
pop
xor
push
adc
stc
les
sbb
xchg
cmc
fdivr
add
mov
sahf
lret
pop
pop
sub
sbb
xor
mov
xchg
jbe
les
sbb
repnz
adc
andl
sub
push
mov
cmp
push
jecxz
and
inc
mov
jg
pushf
nop
jno
movsl
lahf
add
lock
stos
test
push
inc
sbb
jb
cmp
add
pop
and
xor
xchg
sub
movsl
mov
push
clc
dec
setbe
or
add
cld
subb
mov
or
adc
ret
divl
pop
adc
or
mov
fwait
cmpsl
bound
repz
data16
mov
cltd
adc
xchg
adc
or
or
int
xor
mov
rcrl
xor
daa
xchg
push
adc
in
test
inc
mov
cmpsl
stos
dec
repz
sbb
push
and
xchg
mov
mov
xchg
inc
pop
mov
xchg
mov
mov
pushf
jne
inc
jle
out
leave
jecxz
lret
sti
imul
cmp
pop
sub
in
or
jg
sub
mov
xchg
push
shlb
mov
pop
sbb
gs
pop
or
insb
xorb
loop
push
xchg
pop
mov
mov
sub
mov
sub
sahf
cmpsl
mov
sbb
adc
loope
sub
adc
lcall
sub
mov
xchg
dec
lea
push
pop
outsl
inc
lahf
sbb
loopne
mov
cmp
push
and
test
les
mov
add
mov
mov
mov
in
sub
xchg
xchg
sbb
or
dec
sub
add
mov
sbb
cmpsl
xor
or
and
cltd
adc
stos
sbb
adc
cmp
je
cmpsb
cmpsb
and
rolb
add
sbb
js
sub
add
or
sbb
in
pop
or
jo
leave
xor
setno
mov
fistl
jae
mov
sub
jle
cmpsl
adc
pop
data16
mov
pop
mov
mov
mov
or
xor
aam
test
insb
adc
sbb
mov
pop
push
add
adc
mov
bound
cmp
nop
ret
mov
sbb
adc
mov
pop
cmc
or
xor
add
outsl
cmpsb
mov
cli
fnstcw
cmpsl
push
cli
cmc
fmulp
mov
xchg
movsl
push
pop
add
or
filds
sbb
into
int
cmpsb
mov
outsb
sbb
xor
sub
mov
jb
add
les
daa
lahf
sbb
fisubrl
sbb
lahf
pop
and
sub
data16
nop
lcall
adc
or
daa
aas
sbb
mov
push
or
fwait
inc
lods
and
cmpsl
xchg
jg
sbb
hlt
push
out
lea
pop
sbb
in
mov
pop
ret
cmpsb
aam
enter
ds
lcall
mov
pop
je
mov
addl
xchg
or
out
mov
movsl
sub
movsl
mov
mov
xor
dec
inc
mov
pop
and
mov
sub
cwtl
mov
mov
mov
jp
pushf
sahf
inc
push
dec
xchg
add
lods
cltd
stos
xchg
and
push
pop
inc
ja
and
sti
fcmovb
leave
cmpsl
pop
pop
add
imul
push
sbb
dec
sbbb
outsb
adc
mov
pop
dec
stc
xchg
xchg
or
sub
push
test
mov
push
jnp
sbb
mov
mov
sbbb
test
dec
cmp
mov
pop
aas
mov
test
hlt
rolb
subl
or
mov
cmpsb
aaa
sti
gs
ja
push
fwait
mov
jle
sbb
sbb
lods
xchg
test
sbb
or
add
push
data16
popl
sub
xchg
add
cmp
dec
xchg
sbb
inc
sub
add
push
adc
jns
cltd
push
dec
xchg
and
adc
icebp
sbb
or
lea
jle
dec
jle
sbb
pop
pop
rclb
adc
outsl
adc
insb
mov
jb
push
adc
inc
sub
aaa
sbb
xchg
cmp
or
cmpsb
and
dec
sbb
sub
mov
adc
cmpsb
es
sbb
or
adc
xor
test
je
mov
loope
jecxz
cwtl
push
mov
lea
sbb
or
sahf
inc
xchg
addb
mov
adc
adc
sbbb
call
fnstenv
mov
cli
cltd
mov
add
pop
ljmp
shll
pushf
sbb
movlps
movsl
adc
loop
mov
cmp
and
mov
stos
nop
adcb
xchg
mov
jbe
daa
mov
mov
xchg
test
aaa
sbb
or
ficompl
ds
mov
es
clc
mov
sbb
xchg
pop
and
cmp
mov
dec
sbb
movsl
dec
push
test
daa
imul
aad
mov
mov
jns
pop
pop
mov
mov
or
dec
je
xchg
adc
icebp
jne
pmaxub
or
push
xchg
lahf
orl
mov
sahf
xor
mov
adc
xchg
lcall
cmp
mov
sahf
inc
and
push
rclb
sub
pop
mov
jb
movsb
sahf
adc
sbb
sub
dec
data16
pop
sbb
sbb
pop
push
mov
mov
out
pop
adc
outsl
mov
mov
or
mov
mov
sbb
je
popa
sahf
dec
pop
push
cli
mov
repz
xchg
sbb
adc
divl
in
add
or
lcall
mov
psrad
sbb
and
xchg
iret
xchg
xchg
cmp
xchg
push
adc
or
mov
mov
cmp
add
sti
xchg
cli
cltd
fdivrs
lods
mov
cltd
adc
adc
cmpsl
push
fstl
cmpsb
xor
fwait
mov
and
or
mov
rorb
mov
in
xchg
orl
xchg
xor
add
push
sbb
mov
adc
mov
sub
movsb
sub
cmp
sahf
mov
and
push
lret
sub
adc
lock
cli
adc
in
lcall
addr16
xchg
add
push
add
loope
in
pop
adc
sub
pushf
nop
lcall
cwtl
test
sbb
sti
or
cmp
iret
xchg
xchg
cltd
lret
push
es
mov
sahf
or
xchg
jmp
lcall
dec
pop
ret
sbb
adc
jae
inc
sub
add
inc
test
in
push
cltd
inc
daa
dec
sbb
out
fwait
outsb
sahf
cwtl
xchg
or
adc
mov
and
sbb
adc
dec
inc
cmpsl
out
shll
cltd
out
std
push
cltd
mov
sbb
lcall
add
nop
aas
test
and
push
int
mov
jle
jne
pop
sbb
pusha
mov
aaa
repnz
sub
je
shl
mov
inc
cli
add
cwtl
pop
adc
inc
mov
inc
cltd
sbb
call
or
daa
mov
xchg
movsl
mov
sti
stc
mov
push
out
hlt
mov
iret
sub
popf
sub
out
add
je
and
push
mov
sbb
and
sbb
mov
mov
sahf
xor
and
nop
add
inc
daa
adc
lret
iret
es
nop
mov
sub
xchg
cs
lcall
sbb
in
xorb
xchg
js
cs
xor
xorl
jo
movsl
out
cmpsb
or
or
out
mov
and
mov
dec
xchg
inc
xchg
dec
aas
or
xchg
lahf
movsl
jb
and
or
pop
sbb
cld
sbb
imul
std
mov
xor
sub
addl
outsl
and
push
mov
fwait
es
mov
mov
cmp
test
sub
rorl
fimull
push
inc
mov
sbb
loope
sbb
movsl
add
nop
sub
mov
mov
hlt
mov
xor
pusha
add
adc
mov
lds
pop
out
inc
jnp
pusha
sub
cmp
or
mov
xchg
mov
lods
xlat
inc
insl
daa
mov
cmp
pop
pop
test
scas
sahf
dec
pop
dec
push
pop
or
or
fwait
xchg
xor
cs
and
mov
adc
insl
popf
nop
mov
sbb
jl
adc
and
xor
lahf
mov
cwtl
jo
jecxz
insb
push
add
outsl
sti
fisubs
mull
mov
inc
mov
mov
cwtl
pop
in
sahf
xor
incb
mov
add
mov
pop
push
cli
mov
nop
adc
cmp
pop
or
push
sub
sbb
push
add
loope
test
add
add
or
and
cwtl
xchg
and
cmpsl
insb
sbb
cmp
adc
movsl
xchg
cltd
stos
fimull
xchg
pop
jg
data16
push
es
ret
cmpsb
jle
jg
xchg
xchg
sahf
jb
bound
gs
and
cs
xchg
rcrb
insl
cmpsb
shll
sbb
pushf
jbe
jb
cmp
adc
xchg
andb
es
sub
int
xor
nop
cmp
fnsave
fisttps
xchg
addr16
daa
movhps
out
insl
sbb
inc
aaa
push
mov
dec
jl
cmpsl
lods
adcl
mov
pushf
or
sub
and
mov
mov
mov
mov
jecxz
add
fwait
mov
push
dec
js
fcomps
adc
mov
mov
dec
fbld
cmp
lsl
mov
ret
fstps
dec
and
and
push
or
sbb
rolb
mov
xchg
pop
in
jle
nop
pushf
sbb
fwait
test
lods
xchg
or
xchg
mov
add
fiadds
pop
nop
add
or
data16
lcall
shlb
loopne
shlb
sub
sbb
cltd
push
orl
sbb
mov
and
xchg
fimull
std
push
test
xchg
sub
cmpsb
sbb
mov
cltd
js
xor
lods
pop
or
mov
xchg
pop
mov
repz
add
jae
or
test
cmp
xor
sub
pop
je
rorl
daa
add
mov
mov
fwait
dec
jg
xchg
les
xlat
or
fistpll
push
mov
subb
movsb
adc
push
test
xor
and
xchg
mov
sub
lcall
and
mov
dec
mov
pop
sbb
sub
xchg
inc
cmc
aaa
and
mov
mov
xchg
jle
xchg
push
cltd
movsb
sbb
mov
sbb
sub
xor
subl
inc
jae
pop
into
sbb
mov
je
cmp
mov
push
mov
push
push
ret
add
fstpl
sbb
shlb
cmpsl
daa
xchg
adc
xchg
mov
push
fisubrl
movsl
mov
inc
and
or
or
mov
xchg
xchg
adc
xchg
popf
sahf
xchg
pop
sbb
or
test
lods
dec
sub
sub
ss
sbb
fadds
inc
daa
sbb
add
clc
stc
inc
xchg
cmpsl
or
stc
pop
cli
jbe,pt
and
sbb
push
pop
jbe
aam
inc
mov
cmpsl
pop
sbb
clc
xor
test
cmp
push
inc
enter
sbb
push
imul
nop
xor
pop
or
mov
lret
and
xchg
test
push
mov
pop
sbb
mov
test
push
scas
mov
mov
xchg
clc
mov
ret
fs
sbb
in
xchg
mov
das
sbb
mull
mov
xchg
test
pop
mov
push
or
cmpl
orb
mov
cmovno
dec
and
cmp
sub
xchg
andb
xor
scas
fiaddl
xor
dec
add
test
sbb
ret
aaa
pushl
sub
cli
and
sbb
adc
and
leave
xchg
aas
orb
or
mov
cmp
hlt
push
adc
cmpsb
adc
aaa
adc
xor
pusha
mov
in
enter
adc
jb
and
lcall
sbb
and
hlt
jno
gs
in
cmpsl
xchg
adc
adc
sbb
test
pop
inc
inc
or
aaa
or
push
stos
mov
add
xor
mov
adc
cmc
and
mov
dec
add
adc
pop
and
or
jb
push
mov
push
push
sbb
push
pop
mov
adc
je
push
sbb
mov
cmpsl
push
jg
pop
testl
daa
dec
adc
sbb
inc
jge
sahf
sti
and
js
mov
xor
jo
jp
dec
jg
sbbl
xor
cwtl
or
add
inc
mov
sahf
mov
and
mov
push
xor
mov
xchg
mov
jnp
inc
mov
mov
or
cmpsl
cwtl
in
dec
daa
data16
icebp
movsl
cmpsl
cmp
sbb
insl
lahf
mov
xlat
sbb
xchg
call
sbb
mov
lea
ficoml
fisttpl
sub
ds
and
push
dec
mov
xchg
lret
ficompl
mov
je
inc
add
mov
pop
sub
lahf
add
sub
pop
loopne
iret
in
inc
and
jo
or
popf
fmuls
pusha
fimuls
mov
xchg
push
movl
cwtl
mov
or
lret
mov
push
jb
rolb
adc
inc
or
outsb
and
fwait
lahf
nop
fisttpll
xchg
enter
sbb
or
sub
add
dec
mov
adc
add
sbb
cmp
int
lcall
pop
xorl
xchg
sbb
cltd
and
imul
mov
adc
xor
dec
pop
sub
addb
int
int
jmp
mov
sub
sbb
and
sti
or
mov
aaa
mov
adc
sbb
mov
movsb
add
pop
stos
sub
xchg
push
jmp
lahf
orl
pop
xlat
cwtl
dec
cli
push
ja
adc
stos
inc
mov
and
pusha
mov
insb
sbb
sbb
pop
dec
fildll
outsb
scas
sbb
xor
lahf
mov
aas
adc
or
or
pushl
and
aas
xchg
pop
mov
push
xchg
xchg
shrb
push
fildl
mov
push
cmpsl
sbb
mov
subl
or
sbb
pusha
inc
into
cs
je
xor
sarl
mov
nop
adc
xor
xor
xchg
aas
mov
xlat
sub
push
icebp
adc
adc
adc
outsb
inc
pop
sbb
pop
cmp
pop
ret
push
lcall
jae
xchg
or
pop
or
inc
lods
nop
lcall
xchg
xchg
or
add
xor
pop
xchg
cwtl
dec
dec
jle
cltd
or
adc
loopne
data16
daa
push
mov
cmp
test
inc
jge
in
pop
jge
adc
push
or
pushf
xchg
fists
add
sarb
pusha
dec
nop
sbb
int
sbb
fists
out
cltd
sbb
sbb
daa
cmc
lret
test
cmpsl
pop
pop
sub
cmp
fldcw
adc
dec
test
fsubl
rcll
and
xor
jg
adc
pop
mov
xchg
mov
adc
push
lahf
mov
sahf
xor
mov
rcll
cli
pusha
cmp
je
xlat
add
inc
ss
dec
or
inc
or
cmp
fnsave
mov
ret
adc
andb
mov
sbb
push
sub
lea
maxps
xchg
nop
jb
rcrl
je
out
pop
sbb
add
es
push
pusha
gs
cmp
inc
jb
add
mov
mov
shll
push
fwait
and
mov
adc
pop
add
test
sbb
test
xchg
xchg
enter
sub
sbb
andl
add
xor
or
call
int3
and
orb
push
jle
sahf
mov
pop
hlt
call
lds
pop
mov
pop
fisubrl
sub
outsl
adc
sbb
pushl
arpl
cld
jae
pop
cmp
pop
cmpsb
and
and
or
add
mov
pop
pop
xorl
add
xchg
pushf
mov
out
cmpsb
cmc
add
sbb
push
cwtl
mov
enter
mov
mov
movsl
pop
or
sbb
mov
cmpsb
mov
adc
mov
sub
sbb
sub
js
mov
cwtl
xchg
xchg
lret
insl
aas
pop
int3
push
dec
pushf
sbb
sub
pop
mov
js
and
sub
add
out
fwait
add
movsl
xchg
mov
cwtl
sub
andb
lods
outsb
pop
push
movsb
aaa
add
xchg
xor
loope
dec
je
clc
in
mov
pop
je
dec
nop
mov
mov
jnp
add
stos
cmp
repz
or
add
push
lods
add
push
movsb
lahf
adc
mov
or
dec
cmpsb
adcl
and
daa
loope
jmp
sar
cmpsl
outsb
mov
xlat
add
fwait
daa
cmp
shl
mov
xchg
mov
imul
pop
mov
inc
push
je
dec
xor
dec
or
orl
aas
mov
daa
test
cltd
loope
mov
or
and
jae
sbb
inc
mov
or
sti
pop
pop
movhps
stos
addl
sbb
add
movsl
pop
add
sahf
into
test
push
lret
mov
inc
mov
ds
jbe
dec
test
adc
popa
xor
ret
push
mov
xchg
push
test
add
jecxz,pt
cltd
or
aas
mov
and
lods
jno
mov
inc
xchg
addr16
dec
fstl
mov
fildl
xor
or
sbb
add
inc
dec
cmpsl
stos
je
cmc
lock
cmpsl
jbe
popf
jg
cwtl
inc
jecxz
push
in
fstsw
pop
daa
addl
out
and
push
push
ss
icebp
jge
add
fwait
mov
add
or
fbld
inc
test
or
pop
cmp
mov
lahf
and
cs
icebp
sub
xchg
fwait
pushf
mov
inc
xchg
int
cmp
rcll
pop
sbb
mov
or
mov
les
xchg
and
daa
pop
sub
cmpsb
cli
loop
movl
add
and
mov
add
mov
add
and
sbb
pop
dec
cmp
jle
adc
adc
stc
and
ret
sti
push
xchg
ljmp
orl
nop
or
sbb
scas
inc
adc
push
dec
je
mov
or
es
or
fisttps
xchg
xchg
push
cltd
jnp
addr16
clc
pop
sahf
inc
add
pop
es
into
sub
mov
cli
dec
jge
xchg
jo
jbe
sbb
mov
je
mov
add
add
adc
dec
or
xchg
nopl
push
dec
xor
addl
pop
out
or
push
call
push
cltd
ss
rcl
inc
pushf
add
adc
or
jle
mov
loop
es
xchg
fwait
subb
cwtl
enter
enter
xchg
inc
daa
inc
sbb
push
pop
xor
bound
push
push
or
or
popf
add
sti
cmp
jb
cltd
or
orb
push
add
and
daa
es
push
inc
ficomps
nop
xlat
adc
xor
data16
sahf
sbb
adc
outsb
xchg
cmpsl
movsl
xchg
mov
add
or
lahf
jle
lcall
xchg
adc
push
cmpl
xchg
adc
mov
pop
test
inc
lahf
cmpsl
jae
mov
cwtl
pop
add
nop
sahf
and
adc
or
xor
cltd
pop
jno
mov
lock
add
or
lea
test
cmp
lcall
stos
jp
mov
test
aam
in
mov
dec
sahf
icebp
or
dec
sbb
and
jg
sbbl
jle
cltd
add
sub
and
lcall
frstor
mov
sbb
addr16
ds
mov
pushf
test
fstpl
inc
push
pushl
sbb
lahf
movsl
jb
jb
in
cmc
cmc
xchg
ss
xchg
sub
adc
adc
scas
mov
je
arpl
int
test
mov
sub
xchg
or
add
lahf
test
xor
ss
pop
and
push
loope
cltd
ret
sub
movsl
daa
push
jnp
xchg
adc
or
repnz
pushf
andb
mov
mov
and
insl
mov
cmp
cli
out
outsl
in
out
daa
out
je
mov
sahf
xchg
sti
push
loope
pop
add
adc
es
mov
or
ljmp
or
or
and
xchg
push
mov
dec
cwtl
movsb
xchg
pop
movsb
add
test
fstl
jge
rolb
fcoml
int3
xlat
adc
xchg
sbb
mov
inc
xlat
sbb
sub
or
lret
xcrypt-cbc
cmpsl
xchg
sbbl
in
leave
sbb
enter
sbb
xor
jl
or
jl
mov
jae
arpl
adc
xchg
sbb
mov
mov
fildll
add
sbb
lret
xchg
outsb
push
push
cmpsl
add
xchg
jns
test
call
xchg
mov
push
lea
mov
cmpsl
ret
scas
scas
hlt
mov
and
push
fcoml
push
sbb
mov
test
clc
negl
and
shll
jbe
push
xchg
sub
jl
icebp
sbb
pop
jg
or
pop
lcall
inc
es
push
jg
shrb
or
icebp
loopne
addb
sbb
xchg
aad
jnp
cmpsb
ja
xchg
sub
fsts
or
inc
jo
repz
sub
or
sub
sub
je
sub
jle
xchg
pusha
xor
xchg
push
sbb
pop
and
xchg
lock
dec
xor
xchg
inc
and
fimuls
mov
cmpsb
mov
mov
pop
js
out
mov
subb
call
inc
push
icebp
push
xchg
icebp
mov
icebp
lea
je
xchg
lahf
or
lods
test
adc
inc
cs
sbb
sub
inc
testl
shrb
movsb
inc
xor
icebp
jbe
pop
in
mov
in
xchg
cld
or
stos
sub
sahf
addr16
lcall
and
and
xchg
pop
lds
and
sub
fstl
and
nop
or
dec
icebp
pop
shrl
test
add
fsubp
xchg
call
popa
je
inc
stos
in
jp
inc
jo
sbb
pushf
and
repnz
pusha
xor
or
jbe
sbb
adc
add
sbb
and
cltd
iret
enter
jge
mov
test
stos
lds
sbb
lods
inc
sub
add
cli
sbb
icebp
lcall
adc
repz
arpl
dec
add
sub
jle
ss
inc
les
in
pop
push
leave
ret
cmp
sbb
mov
add
in
cs
and
push
xor
xor
mov
mov
insl
push
mov
repz
sbb
inc
pushf
jl
je
lret
sbb
loop
cmpsb
sbb
xor
mov
lock
mov
imul
inc
mov
or
sbb
push
insb
clc
push
je
icebp
or
js
loop
rcrl
je
inc
fsub
imul
sbb
pop
cmp
mov
or
test
mov
std
xor
adc
xchg
xchg
pop
orb
xchg
nop
push
pop
movsb
shrl
mov
cmp
xchg
add
jo
xchg
popa
adc
dec
test
subb
sbb
fwait
cmp
mov
std
and
lahf
adc
sbb
loope
aam
mov
pop
add
arpl
imul
or
inc
pushf
or
stos
or
jmp
out
test
fwait
xor
sbb
pop
out
jnp
mov
out
pop
add
xchg
sbb
xchg
and
mov
adc
cltd
adc
sti
xchg
push
xchg
test
shll
test
iret
loop
std
mov
dec
loop
adc
stc
sahf
or
mov
add
adc
or
cmpsl
inc
lods
mov
jo
ret
stos
jle
xchg
setns
add
fimuls
or
mov
dec
pop
or
push
dec
mov
das
and
or
mov
jb
outsb
sub
mov
test
xchg
mov
mov
mov
jmp
ret
mov
out
daa
xor
and
pop
mov
mov
mov
outsl
or
add
pop
ret
add
add
mov
fstpl
into
je
sbb
fwait
cwtl
xchg
sarl
cmp
sbb
mov
nop
inc
mov
adc
cmp
add
xchg
sbb
sbb
sarb
add
and
daa
cwtl
jg
cmp
sbbb
xchg
or
test
cltd
sub
mov
mov
or
pop
lretw
mov
mov
js
popa
ss
adc
lahf
pop
aam
dec
fwait
stos
dec
mov
mov
or
add
or
or
sbb
add
int
add
mov
mov
xchg
mov
or
pop
mov
inc
mov
fsubs
push
push
mov
sub
adc
nop
or
and
or
dec
push
cmpsb
jg
fldcw
nop
std
pop
add
movsl
mov
int
cld
leave
add
int
dec
test
pop
dec
mov
lea
jbe
fstl
mov
jmp
es
cwtl
dec
dec
sti
roll
and
in
xchg
dec
adc
nop
pop
adc
inc
jge
cltd
outsb
testb
leave
mov
mov
ficoms
es
pop
adc
mov
mov
pop
movsl
mov
xchg
push
call
and
pushf
jbe
sbb
lcall
nop
cwtl
xchg
cmpsl
xchg
mov
or
push
add
and
mov
les
cs
pushf
adc
and
bound
int
xchg
and
push
aas
xor
adc
fwait
or
xchg
lahf
add
inc
adc
cmp
cmpsl
or
test
xor
add
lea
sub
fstl
cmpsb
sub
inc
xchg
test
inc
lea
adc
jle
push
add
popa
cwtl
addl
pop
mov
mov
incl
cwtl
aaa
mov
int3
mov
adc
add
sbb
push
cltd
aad
push
in
nop
mov
cwtl
adc
dec
wrmsr
adc
repz
ja
mov
adc
rorb
add
adc
and
pop
push
adcb
std
aaa
lcall
jp
sub
sbb
or
mov
and
mov
nop
adc
mov
popl
cwtl
cmpsl
lahf
icebp
push
movsl
lret
add
mov
int
mov
pop
jg
mov
sbb
mov
mov
push
dec
or
xchg
sahf
aam
sbbl
or
pop
inc
xchg
aaa
adc
outsl
imul
lods
xchg
pop
push
jo
sbb
aas
xchg
push
cmpsl
fwait
rcrl
mov
xorl
mov
test
inc
ds
mov
sbbl
adc
lea
bound
sbb
mov
fwait
and
jmp
cli
cmpsb
inc
inc
aaa
mov
xlat
sbb
pusha
sub
dec
test
cltd
push
pop
cmpsb
adc
adc
sub
mov
jbe
cmpsl
add
sbb
data16
and
add
xchg
setb
sbb
dec
sbb
mov
in
cli
lcall
sbb
mov
aad
movsl
or
adc
sub
push
add
insl
xor
dec
mov
lret
xor
lock
imul
add
pop
xor
xchg
fwait
clc
push
mov
test
adc
cmp
xor
mov
pop
les
movsl
cmp
je
jbe
mov
ds
sbb
scas
js
add
push
sub
das
or
daa
push
dec
and
nop
insl
ds
mov
sbb
jae
or
push
sbb
cmc
stc
fs
mov
cmp
les
xchg
or
incl
cmpsb
or
test
dec
push
sbb
and
add
test
pop
in
adc
data16
movsb
ds
xchg
xchg
or
cmpsb
imull
dec
or
mov
sbb
andb
test
movsl
add
cmp
cltd
adc
sahf
inc
xchg
stc
or
cmp
mov
xchg
pop
lahf
nop
out
loop
movsl
jbe
sbb
xor
repz
aad
adc
fbld
movsb
inc
or
inc
fildll
dec
sbb
scas
movsl
mov
sub
xor
push
dec
pushf
test
movsl
stc
jo
sbb
pusha
scas
loopne
mov
push
xchg
and
mov
mov
mov
sbb
mov
fwait
or
pop
adc
cltd
adc
inc
push
mov
fiadds
fs
add
test
inc
mov
mov
mov
mov
or
mov
adc
mov
sbb
dec
cwtl
mov
xor
adc
dec
jno
push
sahf
lock
sbb
pop
inc
sub
mov
andl
adc
pop
lods
xchg
iret
push
pop
movsb
push
testb
adc
mov
test
or
fisubrs
pusha
lahf
fwait
sbb
mov
sbb
jecxz
sbb
and
push
and
insl
lcall
mov
jnp
jecxz
add
push
xor
xchg
inc
pop
test
cld
hlt
push
jo
or
lcall
and
xchg
xchg
xchg
daa
sbbl
mov
sbb
incb
mov
sub
aad
mov
add
outsl
cmp
or
inc
xchg
pop
lods
pushf
seta
jb
or
adc
aam
popf
daa
lcall
int3
and
fwait
imul
jbe
xchg
sahf
loopne
jge
lahf
iret
loop
mov
mov
adc
addl
sbb
aaa
mov
sti
sahf
dec
adc
int3
stos
maskmovq
divl
or
adc
std
sbb
arpl
xchg
bound
scas
cmp
sahf
mov
mov
adc
test
add
mov
nop
and
dec
enter
addl
adc
pop
shlb
mov
dec
add
adcl
ficoms
pop
push
pop
xchg
mov
daa
jne
or
fdivrp
pop
adc
pusha
fdivrl
add
je
mov
aaa
fbld
xlat
cmp
inc
xchg
pop
and
mov
les
ficompl
into
rorb
or
pop
xchg
mov
cmp
aaa
xchg
inc
ss
sub
pop
xchg
rorl
and
inc
or
jns
xchg
xchg
dec
sbb
sbb
xor
and
and
sahf
int3
test
sbb
xchg
mov
es
or
xchg
and
cmpsl
sbb
push
cwtl
sbb
notl
push
aaa
mov
cmpsb
xchg
jp
rcrl
pop
mov
pop
sbb
sub
shlb
orb
adcl
movsb
mov
and
mov
cmc
inc
pop
lods
test
in
cmp
mov
fwait
dec
nop
adc
lahf
sub
xor
or
sub
add
insl
xchg
push
sahf
mov
xor
stos
xor
inc
add
inc
sub
xchg
pop
add
orb
pop
cmp
aas
xchg
or
mov
xor
icebp
add
inc
pop
adcl
dec
sahf
mov
frstor
test
addr16
xchg
cli
xchg
stos
cli
fstpt
push
xchg
pop
add
push
push
mov
cmp
add
in
bound
adc
sbb
xor
out
imul
in
add
mov
lds
sbb
mov
jns
lahf
cmp
cmp
lds
adc
xor
mov
or
mov
jecxz
sbb
mull
mov
js
fwait
sbb
insl
or
and
mov
lahf
iret
mov
inc
sahf
mov
mov
jecxz
inc
sarl
sbb
aam
dec
movsl
add
andb
xor
ror
mov
push
pop
sbb
or
mov
xchg
mov
cmc
int3
popa
jle
movsl
adc
mov
cmp
xchg
xchg
push
fisubrs
push
sub
xchg
and
out
cmpsl
pop
xchg
scas
adc
lea
adc
xor
sbb
adc
es
sub
mov
jns
or
out
push
sbb
xchg
test
loopne
add
ficompl
and
ds
adc
sbb
cmp
sbb
hlt
push
movsl
add
jb
shll
sbb
sub
aam
dec
loop
adc
js
fs
xchg
idivl
adc
push
xchg
out
ja
cmpsb
fstps
lret
sahf
add
mov
loopne
xor
cmc
add
stos
fildll
insl
je
adc
ds
pop
sub
or
sbb
jg
pop
cmpsb
faddp
or
or
fdecstp
mov
mov
push
push
inc
xor
arpl
mov
or
sbb
jle
sbb
cltd
push
pop
icebp
cwtl
bound
test
xchg
je
es
inc
dec
pop
inc
xchg
add
pop
mov
xor
or
mov
cmp
cmpsl
mov
fadds
mov
rcr
add
mov
cmp
xor
pop
jg
mov
mulb
and
test
and
dec
xchg
jb
jb
enter
sti
sbb
or
rcrb
or
movsl
cmpsl
lds
jecxz
sbbb
push
test
fwait
pop
mov
adc
push
mov
lret
cld
jne
mov
enter
sbb
and
cmpsl
cltd
mov
stos
cmpsb
lcall
dec
add
sub
and
iret
stos
iret
mov
or
lcall
into
frstor
daa
lahf
scas
fisttpl
pop
adc
or
adc
mov
or
stc
nop
or
flds
and
mov
fidivl
adc
dec
or
mov
cmpsl
sub
mov
pop
sbb
outsb
fistpl
add
xchg
arpl
add
out
rcrl
arpl
and
pop
sbbl
or
mov
push
mov
push
test
inc
sub
fs
gs
dec
fs
pop
sbb
test
mov
add
ret
xchg
adcb
adcb
sbb
mov
sub
mov
xchg
sbb
hlt
fldcw
cmc
shrl
inc
cmpsl
test
and
aaa
adc
or
add
or
shlb
nop
lcall
or
frstor
sub
adcb
mov
push
push
xor
test
xor
xor
inc
jge
icebp
push
cli
mov
adc
lahf
mov
and
fsubs
sbb
mov
jg
mov
mov
mov
shlb
cmpsb
inc
or
pop
cmp
push
jns
divps
mov
adc
and
push
mov
xchg
aas
std
adc
leave
mov
inc
shrb
mov
loopne
movsl
test
int
or
add
in
push
data16
sbb
xor
adc
xchg
jle
in
inc
inc
inc
cmpsb
sbb
add
in
loope
bound
out
and
xchg
sub
mov
xchg
sub
jge
aas
pushf
mov
jns
mov
dec
movsl
rcrb
push
cwtl
loopne
mov
mov
pop
mov
daa
or
and
into
sahf
pushf
cmpsb
int
mov
inc
add
xchg
sbb
mov
inc
pushf
adc
push
push
pop
adc
xchg
adc
push
sbb
lea
fwait
pop
dec
pop
xchg
daa
adc
mov
movb
subl
mov
mov
stos
aaa
add
adc
xchg
xchg
sbbb
xor
daa
mov
movsl
ret
push
mov
sbb
adc
jo
mov
mov
pop
xor
imul
sbb
stos
or
leave
orl
pushf
or
mov
mov
lea
and
pop
xchg
adc
popf
lcall
adc
mov
sti
pop
fdivr
iret
xchg
mov
je
divb
pop
call
jmp
xlat
or
loopne
xchg
sub
sbb
xor
jne
addl
sbb
movsl
sbb
andl
xchg
pushl
mov
push
pushf
out
arpl
stos
pop
or
and
add
push
mov
or
lods
je
movsl
and
mov
sub
and
mov
add
mov
adc
mov
jmp
and
dec
xor
xchg
add
fisubs
sub
push
aaa
xchg
fwait
pop
aaa
in
cmp
pop
xor
add
xor
pushf
mov
sbb
mov
xchg
insb
ret
mov
push
dec
pop
jb
sbb
xchg
add
cmpsl
jbe
aaa
and
push
sbb
scas
das
bound
sub
mov
mov
inc
addb
bound
adc
inc
fiaddl
test
mov
push
mov
xchg
mov
sbb
flds
icebp
adc
aaa
pop
xor
popf
sub
rolb
sbb
test
xor
dec
jns
mov
adc
es
icebp
adc
fstpl
adc
aam
jp
push
xor
sbb
and
mov
xor
mov
add
sahf
push
mov
and
aaa
stos
aas
mov
in
mov
sahf
adcb
lds
adc
adc
sub
je
add
add
clc
xchg
or
cs
or
xchg
adc
xchg
push
ds
mov
pop
data16
or
push
test
and
mov
or
mov
push
add
jns
mov
popl
test
leave
call
sbb
rcll
and
or
test
pop
adc
mov
or
pushf
xchg
jbe
sbb
insl
mov
dec
movsb
addb
adc
stos
mov
dec
or
es
xor
mov
add
cmp
inc
pop
sbb
test
stos
mov
sbb
aaa
sub
and
mov
ljmp
mov
stc
adc
lcall
cmpsl
dec
xchg
sbb
cwtl
aam
popf
or
pop
pusha
sbb
test
jne
into
adc
add
push
inc
sub
xchg
add
bound
add
data16
pop
orb
test
add
data16
cmp
aas
xor
lahf
mov
xchg
or
add
push
jno
rcrl
daa
loopne
dec
les
xor
push
mov
mov
pop
jne
sub
adc
mov
fistpll
mov
into
and
loop
mov
push
push
mov
pop
add
mov
and
or
jne
stos
pop
ljmp
icebp
in
dec
cmpsb
cs
push
mov
adc
xchg
add
inc
cltd
adc
and
pop
xchg
mov
test
jp
xchg
dec
add
mov
sbb
xorb
mov
mov
nop
movsl
sub
xor
lock
sub
and
adc
sbb
sbb
xchg
xor
popf
inc
xchg
pop
xchg
push
adcb
push
mov
pop
adc
jbe
into
lahf
incb
fiadds
test
inc
jg
add
movsl
cmpl
cli
shlb
fsubp
sbb
das
mov
sbb
es
xchg
sub
xor
mov
int
mov
jge
mov
lcall
adcb
xor
nop
adc
into
or
cs
mov
xchg
xchg
push
xchg
sbb
fisttpl
mov
xor
jne
add
push
mov
and
pop
inc
xor
cmp
adc
inc
es
jmp
mov
mov
daa
adc
dec
jge
adc
xor
push
or
sbb
adc
cmc
sbb
xor
adc
mov
xor
or
das
ds
mov
pop
adc
dec
nop
jb
incl
dec
jge
outsb
push
adc
cmpsl
cltd
or
xchg
dec
jne
cli
mov
sub
je
mov
dec
cmpsl
pop
pop
aam
mov
fs
cmp
xchg
jne
or
and
insb
sarb
xchg
and
mov
popa
add
sbb
add
sahf
add
and
or
ret
sbb
bound
xor
movsb
adc
add
inc
movsl
sbb
or
scas
in
popf
out
mov
fists
sbb
push
rcrb
fldenv
mov
jg
xchg
dec
pop
daa
xchg
ss
sub
mov
cmpl
sbbl
bound
arpl
sub
or
cmp
mov
or
lcall
xchg
dec
adc
addl
outsl
xorl
sbb
mov
mov
es
or
or
xor
mov
sbb
repz
adc
mov
loope
pusha
xor
insb
sub
call
sub
xchg
xchg
adc
push
adc
adc
imul
sbb
mov
unpckhps
dec
or
ret
push
cmpsl
daa
adc
inc
sub
xchg
int
pop
add
cmpsl
in
pop
dec
or
mov
and
out
add
jae
pop
push
inc
loopne
cltd
inc
stos
out
rolb
imul
xchg
cmp
pop
out
sub
mov
cmp
out
xchg
adcl
loope
test
jg
sbb
sahf
lcall
sub
add
mov
or
xchg
sbb
jecxz
inc
sbb
andb
fdivrl
adc
add
xchg
xchg
dec
jae
mov
and
lods
adc
cmp
or
sbb
and
es
test
jb
sub
sbb
cmpsb
je
mov
out
call
pop
pop
lahf
add
pop
mov
fmuls
mov
jno
xor
and
mov
es
fwait
mov
stc
fldl
cltd
xor
cwtl
lahf
xor
mov
mov
movl
inc
sub
adc
fwait
sbb
mov
pop
cmpsl
cmp
push
mov
movsb
pop
xchg
lret
push
divps
xchg
pushf
add
jb
jbe
sti
dec
sub
xchg
mov
lods
xor
adc
mov
in
xchg
lds
in
flds
xchg
sarl
out
and
movsb
mov
sbb
sbb
mov
dec
std
adc
inc
push
jo
mov
xor
sbb
fwait
xchg
pop
cmovbe
sbb
cmc
mov
sahf
add
sub
jecxz
dec
xchg
sbb
xchg
lahf
outsb
movb
sbb
jge
fbstp
push
add
cmpsb
enter
sahf
and
push
add
outsl
add
iret
lahf
sbb
mov
xchg
mov
pop
push
sub
popf
mov
cltd
cmpsl
mov
adc
pop
dec
lahf
ret
sbb
popa
cmp
inc
mov
xchg
cmpsb
sbb
and
sti
xor
cmp
lahf
ficompl
jae
jle
andb
or
adcb
sbb
push
lods
lcall
add
mov
ss
add
sbb
pop
lods
lcall
movsb
add
sbb
mov
inc
cmpsl
mov
repz
inc
adc
cmp
std
mov
add
bts
cmp
jno
cwtl
loope
dec
inc
sbb
fld
fstpt
sub
cmp
add
adc
lahf
pushf
xchg
dec
push
dec
rcll
add
fidivs
xchg
mov
inc
sbb
lret
sbb
xchg
mov
test
cltd
add
sbb
push
test
dec
sub
add
sbbl
mov
xor
cwtl
cmc
adc
cltd
sub
xchg
call
add
out
and
mov
mov
lcall
xor
mov
shlb
stc
xor
cmp
pop
mov
negl
xor
pushf
sbb
je
sbb
pop
xor
adc
movsl
dec
mov
or
mov
xchg
mov
stc
mov
xchg
mov
mov
dec
xchg
movsl
and
pushl
push
and
inc
leave
push
mov
mov
popa
adc
sti
and
or
xchg
push
jp
or
cs
jb
mov
adc
int3
scas
cld
movsl
cmp
xor
xor
xchg
pop
jecxz
and
mov
mov
xor
xor
inc
dec
sub
cmp
and
sub
sbb
adc
cmpsb
xchg
sbb
adc
sbb
dec
and
cmpsb
push
or
insb
xchg
leave
mov
rorl
sbb
dec
xor
cli
sub
xchg
scas
push
mov
subb
scas
inc
mov
scas
mov
and
aad
sbb
mov
jbe
movsl
cmpsb
mov
dec
ljmp
fbld
xorb
leave
xchg
fwait
adc
pusha
adc
mov
sbb
imul
mov
mov
imul
insb
sub
mov
xor
es
std
cwtl
mov
cmp
movsl
push
xchg
cmpsb
push
push
or
push
adc
lahf
pop
outsb
xor
mov
hlt
nop
mov
mov
add
mov
ss
lods
mov
cwtl
or
inc
jb
mov
mov
and
and
fwait
pop
mov
ds
cmovns
cltd
sbb
movsl
add
data16
lods
mov
stos
add
adc
mov
add
xchg
pop
jo
jb
inc
mov
adc
fwait
lcall
sti
leave
push
sbb
jns
xchg
and
sbb
pop
xchg
mov
add
pop
nop
adc
dec
push
mov
pop
adc
mov
sub
cmp
add
pop
cwtl
jl
cmp
scas
mov
andb
mov
add
mov
add
jmp
mov
in
sbb
or
mov
nop
add
add
stos
jg
test
cmpsb
je
lret
xchg
xchg
cmpsb
daa
add
sbb
sub
cmpsl
adc
adc
rolb
je
mov
roll
adc
sarb
add
sbb
add
sub
es
xchg
cli
xchg
sti
sbb
sub
mov
inc
lcall
push
sahf
movl
and
add
inc
clc
or
jbe
sbb
push
inc
adc
mov
test
rcrb
pop
xchg
movsl
int
mov
test
add
in
cmp
mov
adc
jge
inc
sbb
adc
daa
test
add
sahf
mov
sub
lcall
adc
fdiv
push
inc
mov
sbb
aaa
std
ret
jnp
movsb
rorl
je,pn
sahf
jb
aaa
mov
or
insl
pop
xchg
test
fstpl
jecxz
mov
or
xorb
dec
lahf
sbb
jbe
push
outsb
and
seta
push
xchg
sbb
sbb
add
lock
mov
pushf
xor
test
xchg
add
sub
loopne
push
test
xor
es
push
lahf
or
and
pop
aad
xchg
sbb
sub
xchg
clc
lahf
lcall
mov
test
and
inc
mov
xor
xchg
xchg
inc
stc
out
cmc
push
inc
out
sahf
push
in
add
lods
sbb
pop
push
sbb
ljmp
cltd
in
lea
lea
outsb
jne
nop
out
daa
sbb
fwait
sbb
mov
sarl
mov
pop
jns
ds
sahf
pop
pop
sub
sbb
test
push
nop
adc
xchg
cmpsb
mov
pop
cmpsl
sbb
ja
nop
dec
jge
add
or
xchg
cmpsl
push
pop
inc
popl
pop
sahf
pop
pop
std
mov
mov
push
dec
loopne
mov
mov
xor
pop
mov
int3
lret
in
dec
sub
add
loope
sbb
sahf
push
lret
inc
sbb
adcl
scas
or
je
pushf
and
jecxz
sub
jne
sbb
movsl
sub
rolb
insl
stc
sub
pop
inc
mov
mov
or
and
sbb
andps
ljmp
imul
cwtl
mov
mov
adc
xor
pushf
adc
mov
cmp
lods
daa
push
mov
mov
pop
nop
xchg
adc
or
cltd
sub
fstpl
mov
mov
xor
cmp
in
cmp
adc
xchg
clc
adc
mov
jae
test
loop
neg
xor
lret
push
aam
push
sbb
pushf
sub
and
dec
sub
or
ja
adc
outsb
arpl
mov
test
jg
pop
pop
or
adc
sub
adc
notl
test
mov
stos
test
mov
sub
mov
jno
outsb
fbld
adc
sarl
es
pushf
xchg
sub
xchg
xchg
xchg
jo
imul
movsb
je
jle
mov
fmulp
adc
nop
or
iret
iret
and
fcmovnu
add
addr16
pop
push
mov
inc
adc
sbb
xchg
lcall
xchg
adc
dec
and
mov
xor
aas
fidivs
adc
sub
pop
adcl
sub
xor
into
mov
ja
and
sahf
mov
adc
ds
xchg
stos
pop
dec
cmpsl
wbinvd
push
adc
or
push
sbbl
lret
mov
and
inc
adc
cli
xor
sbb
aad
push
xchg
push
mov
push
sub
popf
in
cli
sbb
lods
cwtl
sahf
mov
xchg
mov
sbb
inc
xchg
lcall
and
sbb
jo
pop
sbb
out
pop
jg
pushf
sbb
mov
inc
mov
fimuls
push
xor
pop
adc
mov
jle
mov
cwtl
sbb
push
lock
inc
pop
push
inc
sbb
cltd
adc
xchg
sbb
and
test
mov
inc
mov
xchg
sub
sub
fstps
lods
sub
pop
sub
lret
adc
addb
inc
bound
mov
out
xor
mov
mov
movsl
inc
adc
inc
mov
ss
inc
mov
btl
mov
int3
adc
adc
je
and
icebp
mov
lds
andl
sub
sub
xor
push
out
adc
cwtl
sub
dec
mov
mov
or
dec
pop
mov
mov
leave
jge
sub
insb
sbbb
in
call
and
je
insb
inc
mov
inc
push
push
mov
mov
add
jmp
lods
rorb
orl
push
xchg
dec
rclb
outsb
push
xchg
and
fwait
pop
xchg
fdivs
mov
or
mov
rolb
mov
inc
xchg
xchg
sbb
jl
in
fidivrs
or
ja
sbb
cmp
es
movsb
inc
test
xor
adc
mov
lcall
and
adc
and
loopne
mov
jle
push
mov
sbb
sahf
inc
pop
mov
adc
sbb
mov
or
imul
daa
xor
adc
mov
adc
cmp
adc
movsl
mov
add
pop
add
adc
nop
mov
test
add
xchg
fwait
lahf
sbb
adc
out
test
fsubrs
mov
pushf
roll
sbb
xchg
adc
fistpl
or
or
sbb
frstor
and
lret
mov
test
push
lcall
mov
adc
or
xchg
and
test
xor
pop
add
xchg
roll
add
jb
xor
xchg
mov
xor
sbbb
adc
xchg
sbb
aaa
and
xor
lods
xchg
mov
cwtl
pop
mov
xchg
or
inc
fwait
sbb
ja
fwait
icebp
nop
sbb
loopne
daa
mov
orl
dec
mov
xchg
and
add
or
and
or
aam
enter
pop
jmp
jns
mov
shrl
adc
adc
dec
dec
adc
cs
sti
adc
stc
cmpsl
sbb
or
sbb
xor
mov
mov
sbbl
xor
or
or
adc
push
add
sub
mov
push
xchg
add
add
xchg
fists
pop
addb
mov
outsl
cli
xchg
out
pop
cwtl
or
sahf
and
and
mov
sbb
cmp
mov
add
xchg
sub
and
sahf
lea
mov
dec
inc
jnp
repnz
rorb
mov
cmpsb
bound
pop
adc
mov
out
mov
test
mov
data16
pop
nop
mov
adc
lahf
adc
sbb
and
sahf
in
xchg
test
add
mov
cli
fwait
or
inc
mov
movhps
cmp
sbbb
inc
orb
addps
popf
sbb
pop
dec
sbb
fwait
addr16
testl
and
int
iret
mov
pop
setne
pop
mov
mov
dec
cli
test
popf
dec
dec
xchg
cwtl
imul
fidivrs
inc
adc
push
mov
pop
out
and
rorl
adcb
mov
mov
lcall
or
add
xchg
and
subl
mov
aaa
daa
or
xor
sbb
sub
lods
mov
inc
decl
pop
lret
lcall
dec
or
test
add
mov
pop
shlb
xchg
je
mov
mov
sbb
lds
mov
push
xor
jmp
pop
adc
sbb
movsl
faddp
lahf
and
mov
cmpsl
sbb
jecxz
adc
adc
jne
aaa
and
pop
sbb
inc
xchg
pop
outsb
mov
movsl
or
aas
nop
or
push
pop
orl
and
xchg
sbb
orb
xchg
bound
inc
in
xchg
jb
jbe
xor
mov
mov
or
cwtl
push
imul
rcrb
mov
sbb
jo
scas
es
leave
lock
js
jbe
or
fldl
cwtl
jle
andb
mov
nop
mov
mov
xor
sbb
cwtl
daa
add
pop
or
or
movsl
es
and
xchg
mov
xchg
dec
xchg
mov
sbbb
mov
sub
sbb
ret
sub
sbb
outsb
jne
sbb
push
sub
adc
stc
mov
xchg
scas
movsl
es
mov
adc
mov
add
cmpsl
lcall
cmpsb
loopne
sahf
xchg
fsubrp
or
int
mov
nop
or
je
pop
add
push
jbe
cmp
movsb
adc
xchg
pop
sti
adc
dec
xchg
xor
or
xchg
sbb
mov
inc
pop
xchg
fisttps
js
aas
sub
dec
pusha
adc
dec
and
jecxz
sbb
mov
adc
add
fisttps
xlat
push
mov
cmpxchg
mov
add
lds
daa
sbb
nop
mov
adc
mov
add
rorl
adc
xor
pop
mov
mov
sbb
int
lock
jmp
sbb
mov
or
aam
pusha
xor
lret
das
inc
pop
jecxz
or
mov
aam
fadds
xchg
sub
or
or
jecxz
je
sar
pop
inc
test
sub
mov
cmpsb
stos
shlb
fiaddl
push
sti
sbb
mov
std
inc
movsl
daa
xor
stos
test
fisttpll
nop
pop
xchg
subb
pop
mov
movb
iret
shlb
mov
adc
xorb
stos
mov
fwait
out
aad
imul
xchg
mov
arpl
mov
daa
pushf
xchg
js
test
push
jnp
jb
in
cli
xchg
adcb
pop
fwait
cwtl
test
sahf
jb
push
push
data16
pop
aaa
xchg
xchg
inc
and
je
test
adcl
pop
jl
adc
cltd
rorb
es
sbb
gs
xor
mov
or
pop
test
rorb
cwtl
andl
mov
jl
inc
pushf
rcrb
daa
mov
cmpsl
xchg
stos
pop
push
mov
or
shll
mov
add
push
sbb
xor
mov
jmp
pushf
aaa
adc
fiadds
adc
mov
jecxz
je
dec
incl
sbb
cmpsl
ljmp
andl
pop
sub
lods
adc
or
mov
mov
xchg
sahf
rorb
cld
lret
pop
xchg
inc
lcall
test
or
pop
fidivrs
sbb
data16
mov
sbb
into
mov
push
mov
mov
mov
mov
add
xchg
xchg
xor
mov
or
fucomi
or
inc
fmulp
cwtl
std
ljmp
or
mov
ret
push
jbe
mov
sbb
adc
lret
mov
and
loopne
mov
arpl
pushw
mov
mov
js
jle
or
stos
cmpsb
push
loopne
inc
dec
add
test
hlt
or
mov
add
inc
and
mov
and
sbb
cmpsb
mov
lods
sahf
pop
dec
fiaddl
cmpsl
pop
adc
sbb
push
sub
mov
xchg
adc
cmp
sbb
std
mov
mov
or
mov
cmpsb
adc
push
or
xchg
setb
scas
push
cmpsb
mov
lcall
data16
xorl
fsubrp
daa
push
subl
lcall
sbb
sbb
push
and
xchg
pop
scas
mov
daa
sbb
cwtl
sbb
and
lret
ss
adc
jb
adc
mov
enter
push
or
sbb
cwtl
jg
sbb
add
push
adc
fwait
daa
mov
or
cwtl
sahf
add
ret
add
sbb
pop
pusha
adc
add
out
cmpsl
movsl
mov
rcr
jle
insl
adc
xor
cmpsl
and
push
les
jns
outsl
hlt
push
popa
mov
mov
hlt
lret
subb
and
sbb
cmp
sahf
lret
xor
icebp
sub
mov
mov
mov
cwtl
decb
cmpsl
mov
inc
jns
dec
sbb
add
push
pop
xchg
test
push
je
xchg
movsl
cmpsb
or
cli
fstpt
adc
cwtl
movsl
pop
sbb
js
enter
mov
out
pushfw
and
mov
addl
xchg
loop
sbb
pop
lods
scas
mov
and
mov
nop
sahf
les
mov
daa
fistps
sbb
movsl
data16
sti
js
test
call
xor
xchg
in
jbe
test
and
fwait
cmp
mov
mov
add
lods
or
jb
pop
sbb
inc
adc
je
add
cwtl
cli
push
add
movsl
adc
dec
push
mov
sub
sbb
mov
dec
or
mov
cmpsb
mov
nop
push
adc
mov
push
int3
mov
fimull
adcl
jne
lret
js
outsl
cmpsb
push
mov
mov
nop
pop
rcrl
xchg
sub
mov
test
cmp
or
sbb
sbb
adc
enter
aaa
mov
sahf
rep
jo
mov
lret
add
add
mov
inc
adc
sahf
jbe
int3
push
xchg
adc
in
xor
and
xor
add
dec
and
lds
adc
jp
add
pop
ficoml
sbb
cli
or
test
cwtl
in
pop
or
add
shll
mov
scas
fdivrl
lahf
sbb
es
mov
adcl
mov
xchg
jno
cmpsb
jmp
dec
mov
cmc
mov
pop
mov
cmpsl
push
mov
inc
mov
adc
data16
sub
adc
mov
fwait
inc
dec
push
sbb
push
adc
lcall
jge
inc
adc
fwait
push
pop
aaa
popl
adc
adc
fwait
addb
in
adc
xchg
push
mov
test
pop
mov
nop
mov
xchg
sbb
test
and
jbe
jbe
sbb
movsl
sbb
mov
mov
aad
add
pop
nop
add
adc
or
enter
mov
cltd
add
movsb
dec
mov
mov
inc
push
loopne
incb
sbb
scas
fimuls
xchg
push
sub
sbb
sub
jmp
and
fistpl
pushf
and
jecxz
mov
and
sub
xchg
cmp
jle
ret
bswap
in
ljmp
cs
test
fcomi
das
xorl
lods
daa
add
ja
push
std
push
sbb
cmpsb
push
dec
adc
stos
mov
std
add
sti
xchg
mov
mov
inc
sbb
jecxz
mov
dec
dec
sahf
adcl
pop
cmp
insl
pop
mov
xchg
or
outsb
push
pop
aam
imul
cltd
xchg
test
and
or
icebp
or
sahf
cmpsb
sub
mov
fiadds
mov
sahf
ret
stc
jnp
cwtl
add
pop
add
jne
bts
pop
sub
mov
es
cs
pop
inc
adc
daa
in
addb
fnstsw
cmp
loope
es
loope
xchg
mov
les
adc
and
mov
adc
sbb
add
push
lret
xor
xchg
les
les
test
outsb
bound
sbb
mov
aas
insl
adc
dec
pop
add
push
loopne
lahf
dec
test
xor
adc
adc
sbb
subl
or
adc
movsl
add
sub
and
push
loope
dec
nop
in
adc
test
adc
jns
lock
xchg
xchg
add
sub
or
scas
orl
xchg
lods
mov
jle
add
gs
enter
into
lcall
mov
cwtl
mov
xchg
xor
xor
mov
stos
push
cltd
stos
xchg
mov
inc
and
dec
cmp
jbe
adc
mov
push
mov
push
sbb
mov
sahf
in
mov
pop
pop
test
mov
push
or
or
mov
adc
fwait
sub
xor
pushf
rcll
mov
orb
dec
pop
cwtl
lcall
daa
dec
xchg
les
lea
sub
pushf
es
jecxz
and
pop
adc
fwait
sbb
cs
mull
push
or
mov
jp,pn
lods
xchg
adc
xchg
call
adc
mov
fs
movq
or
into
sub
add
mov
setp
sti
pushf
sub
inc
push
fwait
jle
lcall
inc
mov
or
pop
adcb
xchg
cmpsl
cmp
add
hlt
mov
adc
testl
pop
or
adc
in
sbb
pop
out
add
push
rcrl
mov
loopne
sbb
es
or
xchg
xchg
ret
adc
addb
lret
mov
push
test
sbbb
add
mov
or
or
rorl
xor
out
xchg
dec
fisubrs
lcall
mov
xlat
sub
mov
cmp
or
xor
mov
aas
xor
data16
mov
daa
xchg
lea
sbb
xchg
stos
sub
and
mull
push
xchg
test
or
push
sar
push
mov
push
add
sub
adc
cltd
adc
adc
dec
dec
movsl
add
or
and
sbb
add
push
aam
xchg
mov
je
sbb
mov
test
imul
in
pop
and
pop
mov
xchg
data16
bound
adc
xchg
fiadds
add
test
sbbl
jb
mov
stc
andb
sbb
mov
dec
cmp
pop
xchg
int3
mov
mov
jl
xchg
repnz
or
add
aas
and
push
push
inc
or
test
mov
xor
mov
negl
outsb
dec
lahf
pushf
rcl
or
sbb
out
or
and
adc
lcall
pushf
mov
imull
mov
sahf
and
test
push
pop
sub
jbe
aaa
mov
xchg
lds
daa
push
or
es
stos
push
mov
adc
add
addr16
pop
rorl
movsb
test
adc
push
and
cmpsl
add
xchg
cld
test
push
and
mov
sbb
jno
cmc
mov
test
sbb
inc
jge
inc
test
test
test
jge
sbb
bound
adc
mov
imull
add
andl
adc
sbb
inc
sub
mov
xchg
or
ds
fwait
or
or
pop
add
sbb
dec
sub
adc
mov
inc
adcb
xchg
stos
sbbb
stc
or
rolb
cmpsb
mov
jb
sub
daa
lds
or
or
push
sub
cmp
movsl
mov
es
inc
fisubl
lret
fucomip
pop
push
or
sbb
mov
xor
pop
push
addl
lods
sub
adc
es
gs
push
sbb
push
movsb
cmpsb
xor
mulb
shll
mov
inc
cmp
and
add
sub
xchg
xchg
subb
mov
test
pop
adc
sub
add
popa
sbb
jle
adc
lods
and
mov
je
and
aaa
mov
in
or
sub
xor
mov
repnz
es
push
pop
imul
xchg
or
aaa
cmc
sahf
add
testb
jno
out
andb
test
add
or
cmpsl
sbb
stc
icebp
sbb
mov
xchg
pop
bts
sub
sub
imul
xor
pop
daa
movsl
bound
and
lcall
incl
jle
lahf
movsl
adc
xchg
in
inc
lock
aaa
imul
inc
andb
jmp
loope
or
sub
cs
add
inc
cmpsl
test
jne
mov
pop
cltd
push
xchg
xor
or
add
mov
sbb
addb
push
pop
out
or
xor
or
adc
int3
cmpsb
test
fsubs
add
divb
mov
add
mov
hlt
inc
mov
adc
cmpsb
stos
adc
negb
sub
adc
push
out
orb
pop
or
nop
add
out
jno
sbb
pusha
andb
or
into
repz
test
shrb
lods
sbb
andl
cmpsb
or
mov
mov
pop
or
orb
add
dec
cltd
scas
or
mov
aad
fldl
lahf
nop
pop
push
cltd
mov
xlat
mov
adc
fiadds
sbb
mov
xchg
and
lcall
mov
or
call
sbb
aas
sbb
or
xchg
sub
xchg
mov
pushw
mov
jp
inc
mov
mov
mov
sbb
add
fbstp
pop
sbb
mov
push
imul
cmpsl
push
mov
sub
push
mov
xchg
adc
jnp
or
xchg
adcb
or
mov
fwait
adc
push
xchg
xchg
subl
mov
xchg
inc
movsl
xchg
xchg
aaa
in
cs
or
jge
mov
test
pop
fsubrp
subl
hlt
fld
xchg
sahf
jle
ds
mov
pop
stos
stc
rclb
push
out
outsb
fstps
xchg
jb
lea
adc
jg
sahf
adc
mov
mov
cmp
lahf
les
pop
cltd
es
shrb
sahf
adc
insb
sbb
or
js
sbb
xchg
sbb
cmp
test
xchg
popf
popf
nop
and
or
aaa
xor
sbb
fisttpl
jmp
mov
js
pusha
lods
pusha
push
fldenv
in
shl
stc
jno
orl
outsl
pop
stc
andb
data16
lods
sbb
lahf
inc
mov
icebp
xor
adc
imul
aaa
data16
cltd
cmp
test
xchg
movsb
add
mov
out
push
adc
xor
aas
sub
pushf
cmpsl
dec
pop
test
cmc
sahf
adc
push
push
mov
sbb
adc
xor
add
mov
push
es
xchg
adc
bound
je
sbb
cwtl
sbbl
or
test
test
add
mov
inc
xchg
inc
xchg
mov
dec
add
adc
mov
xchg
pop
aaa
push
and
outsb
and
sahf
cmpsl
cmp
stos
xchg
mov
sti
in
je
or
insb
push
sbb
add
insl
rorb
sahf
xchg
cmp
jbe
jle
adcb
bound
push
or
adc
fwait
shll
pop
jb
test
push
and
mov
les
dec
sarl
mov
or
xchg
movb
mov
xchg
lahf
inc
aas
adc
sub
stos
loopne,pt
stos
or
std
sub
lods
decl
or
test
or
lcall
mov
or
aam
je
xchg
or
and
push
ja
xchg
mov
mov
and
pop
aaa
add
or
push
adc
lret
ret
dec
push
ret
mov
adc
mov
daa
aam
and
andb
push
push
rclb
cmp
mov
xchg
cli
cmpsl
inc
lahf
sbb
sbb
dec
jbe
mov
pop
xchg
sbb
gs
out
xor
cmpsb
xor
xchg
push
adc
ret
aaa
movsl
cmp
lcall
les
out
and
xchg
xchg
xchg
ret
mov
cmp
sbb
sbb
rolb
sub
andb
mulb
sub
pusha
sbb
mov
shlb
mov
ja
mov
cwtl
add
sbb
pop
dec
mov
xchg
imulb
js
sbb
pop
xchg
adc
pop
lea
push
cmp
movsl
inc
daa
lds
jl
pop
aas
xchg
and
in
popl
clc
fists
sbb
xchg
adcl
push
mov
jo
roll
adc
xchg
adc
sahf
adc
sbb
and
addl
sub
jmp
add
enter
mov
jo
out
mov
jmp
fsubrs
jle
lahf
pop
add
pop
or
or
mov
push
jno
sub
mov
inc
ret
aaa
inc
data16
and
repz
add
and
adc
sbb
lock
sahf
pop
pop
enter
push
cmpsl
sbb
sub
aas
pushf
add
push
into
pop
add
shrb
mov
sbb
and
inc
aas
lahf
or
nop
mov
sti
loope
ret
rolb
sbb
xchg
pop
loopne
fwait
xchg
mov
add
outsb
fildll
dec
pop
rolb
movsl
mov
and
pusha
testb
xchg
or
sbb
pop
xor
pop
xchg
pop
cwtl
adc
pop
popf
aad
inc
mov
test
sub
notb
or
mov
adc
repnz
clc
push
mov
xchg
cmpl
es
in
in
sbb
rolb
repnz
inc
loopne
jg
xchg
or
stc
fsts
xchg
sbb
pop
adc
adcb
mov
xchg
and
movsl
cmp
in
cmp
dec
inc
sub
cwtl
mov
mov
or
add
xor
sub
sbb
out
mov
data16
pop
nop
and
subb
jae,pn
cmpsb
xchg
and
mov
movsl
inc
inc
mov
mov
pop
cmc
push
adc
sbb
push
mov
fwait
cmpsb
push
arpl
xor
or
cmpsb
mov
mov
lcall
inc
cwtl
lahf
push
leave
cli
xchg
inc
mov
mov
and
test
ja
sbb
add
mov
add
add
and
cltd
xchg
mov
jl
xchg
into
nop
dec
inc
adc
cmpsl
xchg
test
mov
sbb
xlat
mov
and
and
popf
ja
and
lahf
movsl
fwait
and
data16
jle
scas
add
jne
mov
test
negl
or
addb
pop
rcl
push
pushf
xchg
iret
xchg
insb
pop
pop
xchg
push
pop
push
mov
mov
lahf
cmpsb
inc
imul
xchg
sbb
and
repnz
je
xchg
test
push
inc
or
push
mov
nop
es
mov
sets
jne
lock
pop
mov
cmpl
or
xchg
sbb
mov
adc
dec
ds
mov
cmpl
outsl
dec
adc
xor
inc
je
xchg
pop
xor
jmp
fsubrp
xchg
or
test
mov
push
rorl
stos
mov
xchg
jle
mov
sub
push
mov
test
or
test
mov
adc
insl
xchg
and
cltd
mov
mov
jb
inc
sub
jb
out
mov
pop
dec
sub
outsb
and
stos
jb
sbb
stc
xor
pushf
mov
sub
cmpsb
mov
jle
lahf
mov
jbe
sub
mov
adc
andb
adc
xor
inc
and
xchg
jp
xchg
pusha
and
adc
add
and
hlt
jle
or
inc
and
xchg
pop
sbb
ror
aaa
jmp
lock
cmovns
mov
xor
scas
adc
dec
mov
pop
adc
sub
pop
push
lret
xchg
sub
dec
mov
fildl
or
pop
pop
je
scas
inc
sbb
loope
and
mov
push
test
add
pop
rorb
fldl
lods
outsb
pop
cmpsl
or
nop
aaa
xchg
xchg
dec
fstpt
dec
sub
popa
xor
andl
dec
sbb
movsl
ret
loope
loope
or
dec
or
sahf
jno
and
inc
xchg
mov
adc
xchg
add
add
sahf
out
es
adcl
xchg
push
and
adc
movsl
add
or
lea
adc
arpl
pop
mov
cltd
jle
mov
xchg
dec
push
inc
pop
adc
add
jg
sub
adc
iret
pop
push
pusha
loopne
pop
fisubs
add
adc
pop
or
sbb
testl
xchg
mov
js
or
stos
push
movsl
cltd
mov
jne
pop
xchg
sbb
repnz
mov
push
jg
sub
sub
adc
aaa
icebp
mov
dec
inc
mov
cltd
ds
or
and
mov
jne
shll
and
and
cmp
add
jg
test
enter
cmp
push
sub
and
out
fwait
sbb
sbb
and
lea
or
pop
xor
decl
stos
and
xchg
add
jo
fisubl
ret
lds
sbb
add
jns
and
push
mov
nop
or
divb
xchg
roll
sbb
adc
jne
int
sbb
cmc
clc
outsb
or
push
add
pop
adc
sbb
sbb
or
daa
adc
movsl
push
jbe
pop
data16
mov
inc
fcoms
and
jo
xor
cltd
add
push
ficoml
or
les
insl
cmpsl
dec
add
cmpsb
pop
sbb
xor
dec
cmpsb
arpl
mov
add
mov
inc
jns
sbb
sub
add
jg
add
mov
cmp
xchg
cmp
jbe
data16
or
sub
ja
sbb
mov
jae
push
addl
adc
lret
popf
or
stc
lret
xchg
add
pop
push
rolb
cs
clc
hlt
or
jp
push
mov
dec
dec
jnp
sahf
or
xchg
cmp
push
pop
rorb
xchg
test
push
sti
and
cwtl
sti
inc
das
mov
out
lret
pop
pop
xchg
xchg
mov
sbb
pop
mov
pushf
xchg
enter
adc
sub
fstl
in
pushf
pushf
and
or
xchg
push
addr16
pop
mov
mov
cmpsb
jp
dec
subb
pop
or
sbb
and
add
leave
push
cwtl
xor
add
cmp
popl
outsb
add
dec
adc
mov
xchg
xchg
cs
add
outsb
inc
or
jl
clc
sti
dec
cwtl
cmc
mov
test
push
mov
rcrb
flds
push
sti
add
fwait
push
sbb
sbb
lcall
mov
fwait
nop
pop
xlat
mov
sub
mov
mov
jge
adc
sbb
sbb
cmpsb
shrl
sbb
mov
jnp
loop
nop
pushf
andl
cltd
aam
in
sbb
ds
cld
movsl
in
jle
add
icebp
mov
xchg
lcall
stc
adc
cmpsb
jbe
out
mov
enter
mov
pop
xor
sti
gs
mov
xor
mov
adc
or
daa
iret
scas
rep
jle
or
ret
popf
pop
in
pop
rorl
mov
adc
in
sbb
dec
sub
dec
popf
fwait
mov
mov
cmpsl
push
xchg
jbe
adc
out
stos
sub
sbb
xchg
lods
or
xchg
inc
mov
dec
scas
and
les
xor
push
mov
xorl
scas
gs
dec
mov
and
jl
pop
shr
sub
aaa
mov
mov
mov
mov
negl
and
cmpsl
sahf
push
jecxz
scas
pop
mov
inc
sti
mov
es
into
xor
and
shlb
mov
imul
lahf
mov
add
and
mov
js
xchg
pop
push
push
add
mov
movb
sub
aaa
pusha
aas
lods
adc
mov
and
mov
sub
cmp
sahf
add
gs
jge
mov
incl
cmpsl
shll
call
xchg
daa
or
push
loopne
sub
mov
xchg
sbb
mov
adc
sbb
es
shll
jge
imul
add
jb
cwtl
nop
xchg
push
setb
mov
push
mov
cltd
subb
ret
mov
pop
aam
pop
add
loope
push
fidivs
add
cltd
add
cmpsb
pcmpgtd
adc
mov
inc
mov
pop
inc
mov
in
aaa
outsl
xchg
fiadds
daa
adc
sbb
and
lcall
aad
xchg
lea
pop
xchg
aaa
pop
mov
or
aas
sbb
movsl
cltd
sbb
leave
into
test
cmpsb
jae
fwait
xchg
cmp
stos
jbe
add
es
push
icebp
push
sub
and
inc
test
add
push
jns
sbb
or
mov
mov
and
jmp
sbb
jecxz
or
jecxz
repz
and
and
or
sub
adc
xor
sbb
aas
mov
inc
andb
inc
cmp
mov
add
mov
adc
popl
xor
xor
stos
adc
mov
cmp
add
or
adc
sub
adc
icebp
sub
mov
insb
sub
scas
sub
into
dec
fisubrl
mov
mov
mov
sbb
loop
push
mov
inc
stos
push
mov
adc
addr16
push
xchg
fwait
test
sarb
push
adc
mov
rcl
dec
mov
mov
push
xor
dec
or
sbb
and
mov
adc
inc
jne
adc
inc
sbb
rclb
call
sbb
mov
sub
sahf
clc
dec
mov
es
dec
cmpsb
push
xchg
cmpsl
es
pop
sbb
je
sbb
sbb
xchg
mov
sub
xor
loopne
push
movsl
xchg
pop
push
xor
xor
or
and
arpl
mov
mov
movsb
mov
movsl
mov
adcb
mov
aam
pushf
int
popa
imul
mov
pop
adc
pushw
or
and
xchg
and
jbe
inc
xchg
pop
lods
lods
xchg
add
cmpsb
add
jb
sub
and
mov
inc
sahf
sub
dec
fldl
aas
sbb
mov
lods
leave
push
push
or
ret
lret
bound
adc
xor
pop
rolb
es
lahf
xchg
pushf
pop
mov
sbb
test
lods
mov
adc
add
dec
xchg
pop
lods
popa
push
adc
adc
inc
stc
ja
andl
stos
enter
inc
fchs
addl
outsl
dec
push
cmp
xchg
bound
mov
or
sub
mov
sbb
mov
mov
scas
test
vmptrld
into
mov
lock
pop
push
or
daa
test
cmovle
nop
adc
inc
jbe
out
mov
test
leave
clc
add
mov
pop
idivb
nop
mov
adc
xor
jg
adc
pop
or
mov
adc
ja
cmove
bound
sbb
cwtl
incl
xchg
xchg
daa
push
adc
sahf
mov
xchg
cli
les
mov
ret
mov
mov
xchg
push
xor
sub
es
xchg
mov
mov
jg
or
mov
sbb
mov
lods
xchg
test
movsb
mov
dec
fcompl
push
outsb
int3
xchg
outsb
rorb
mov
mov
int
rolb
xchg
mov
sbb
es
test
andb
add
xchg
lcall
es
subb
nop
arpl
xchg
ds
and
mov
adc
mov
fsts
pusha
dec
jg
or
mov
add
repz
je
inc
imul
sbb
jle
mov
pop
dec
or
push
testl
les
ja
iret
leave
arpl
mov
xchg
and
gs
xchg
dec
sub
daa
nop
imul
cpuid
std
mov
out
sbb
xorl
adcl
int
xorl
adc
popf
xchg
or
adc
add
push
add
jmp
xchg
leave
aaa
xor
pop
fnstenv
movb
cmp
adc
test
pop
push
add
lret
scas
jecxz
je
or
pop
in
sbb
sub
pop
mov
jbe
lret
scas
pop
iret
fldenv
cmpsb
or
xchg
jbe
orl
xor
cwtl
xor
rcrb
imul
mov
jbe
adc
fstps
pop
and
mov
push
jle
xchg
xchg
pushf
or
jno
and
cwtl
pop
dec
xchg
and
sbb
sbb
push
and
or
je
std
addb
pop
xchg
call
push
mov
call
xchg
data16
push
mov
mov
clc
sbb
xor
stos
mov
cmpsb
shlb
dec
iret
out
jmp
popa
sbb
xor
cli
push
cmc
adc
pushf
mov
push
or
hlt
aaa
pop
lret
cmp
sub
movsl
pop
cmpsl
outsb
push
fwait
and
mov
add
stc
sbb
lahf
mov
mov
inc
js
mov
fwait
ja
cmp
jecxz
adc
and
ljmp
sub
push
test
mov
sub
out
jg
cmp
popf
imul
mov
and
lahf
into
xchg
adc
sub
fwait
inc
dec
sbb
sbb
movsl
adc
adc
mov
mov
mov
or
pop
cmpsb
sub
and
xor
insl
or
iret
adc
ss
popl
sbb
lcallw
cs
add
and
test
xchg
or
dec
mov
sub
or
fnstcw
test
push
or
xchg
or
or
cwtl
in
bound
sbb
adc
cs
insb
insb
sub
and
pop
lcall
loopne
adc
mov
fs
mov
jo
mov
repnz
pop
add
or
jg
pop
sbb
and
mov
sbb
pop
mov
mov
std
dec
pop
add
cwtl
ljmp
popf
std
xchg
dec
adc
xor
mov
xchg
pop
mov
jbe
andl
sub
or
or
movsl
sbb
dec
test
and
sbb
lods
fiadds
out
into
dec
add
add
push
mov
mov
xchg
sub
lock
dec
inc
adc
xchg
stos
mov
xchg
jg
ud2
cwtl
mov
out
sbb
aaa
mov
pop
mov
mov
cli
and
fnstenv
pusha
sub
rol
xchg
or
mov
xchg
adc
into
sub
js
dec
jge
push
inc
or
mov
xchg
xchg
inc
sti
mov
bound
pop
or
xchg
mov
sub
add
add
sub
lods
xchg
hlt
fisubs
popa
sub
iret
ljmp
adc
mov
sbb
mov
mov
add
push
addb
pop
mov
pop
dec
xor
stc
cmp
pop
stos
les
mov
and
mov
or
maskmovq
testl
add
pop
push
orl
mov
cltd
mov
push
in
je
lahf
or
or
xchg
xchg
cmp
or
pop
mov
lahf
push
aad
add
mov
pushf
sbb
push
xchg
cwtl
wrmsr
lea
xchg
fwait
lret
jno
mov
idivb
and
mov
nop
dec
roll
stos
mov
xor
mov
mov
popl
sbb
aas
push
pop
xchg
adc
ficoms
icebp
je
mov
mov
lahf
cmpsl
dec
mov
stos
sbb
pop
enter
dec
and
inc
cmp
xchg
in
dec
inc
mov
fimuls
and
or
add
and
daa
mov
mov
xchg
imul
es
inc
sbb
sub
adc
sysret
xor
adc
mov
andl
dec
xchg
pop
es
popf
mov
mov
adc
xchg
cmpb
cmpsb
and
xchg
xchg
mov
mov
mov
nop
add
xor
sbb
sub
adc
int3
mov
rcll
and
sbb
and
sub
mov
pop
in
sti
sbb
push
mov
or
jnp
mov
xchg
mov
hlt
pop
ds
pop
fwait
xchg
dec
popa
add
fidivs
cmpsb
and
mov
dec
fsubrp
and
and
or
jecxz
fsubrs
movsl
daa
dec
mov
push
mov
lea
mov
mov
sbb
insl
dec
mov
mov
or
cltd
adc
dec
mov
and
ror
cmpsl
adc
loope
xchg
xchg
or
pop
cwtl
pop
jp
adc
daa
inc
xchg
pop
fcomps
lahf
mov
cltd
shlb
or
add
pop
mov
test
sbb
pop
adc
sahf
jmp
or
mov
lcall
sbb
cs
sbb
sub
jb
xchg
push
push
pushf
adc
or
xor
push
push
sub
fwait
addb
adc
nop
out
jge
insl
mov
or
lcall
mov
cwtl
add
inc
outsl
mov
sub
pop
js
sarb
push
arpl
jae
fistpll
mov
daa
leave
fwait
adcb
lock
fwait
rorl
cmp
xchg
sub
push
data16
and
xchg
cmp
into
ljmp
jg
xchg
add
mov
xchg
adc
jg
or
ret
inc
cltd
sub
outsb
jo
and
adc
adc
pop
mov
roll
jmp
push
addr16
inc
pop
jbe
mov
insb
jo
inc
or
test
xchg
lahf
or
je
rcrb
lret
add
push
daa
mov
js
mov
and
inc
mov
add
jp
sbb
cltd
cmpsl
mov
mov
pushf
pop
mov
push
pushw
es
sbb
dec
fidivrs
mov
push
loop
pop
ja
or
mov
mov
dec
xchg
pop
mov
xor
test
adc
mov
xor
pop
and
test
xchg
fs
mov
pop
or
or
outsb
xor
add
inc
xchg
mov
adc
jge
adc
push
sub
pusha
es
stos
cs
xchg
or
hlt
mov
xchg
jg
adc
sub
clc
mov
js
movsb
sub
movsl
popf
shll
mov
jo
out
divps
mov
cltd
lcall
dec
push
adc
pop
inc
or
aaa
cmp
fadds
jb
mov
pop
cltd
sbb
dec
mov
cmp
xchg
or
mov
pop
stos
xor
adc
test
xor
test
movsl
mov
lods
and
leave
cwtl
xchg
insl
jge
push
gs
insb
or
bound
jb
std
mov
jge
and
jnp
mov
mov
mov
orb
pop
in
add
imul
push
sub
or
xor
adc
xlat
cmp
imul
rolb
je
add
in
mov
imul
xchg
stos
orb
push
pop
adc
cmp
mov
add
add
xchg
dec
fcoms
fildll
jg
stos
sbb
scas
outsb
pop
mov
adc
pop
and
adc
and
dec
pop
and
test
sbb
pop
sahf
cmpsb
out
mov
es
add
add
pop
pushf
stos
pop
sub
int
dec
push
loopne
pusha
mov
sbb
test
lods
sbb
mov
test
mov
mov
aam
cmc
cmp
cmc
add
mov
or
cmp
push
xchg
pop
or
insb
push
mov
bswap
pop
data16
or
test
xorb
xchg
movsl
cltd
test
repz
or
or
xchg
dec
xchg
mov
movsl
or
call
test
dec
fdivrl
adc
xchg
addb
js
pop
jbe
jae
mov
mov
jns
mov
push
dec
adc
mov
test
xor
pop
mov
mov
or
cs
fwait
pop
adc
mov
inc
hlt
push
inc
stos
add
add
mov
mov
imull
adc
mov
and
xor
pushf
movl
push
loopne
xchg
mov
add
loopne
lahf
add
inc
mov
nop
dec
ret
adc
mov
pop
add
addl
inc
sbb
ficoml
dec
in
mov
and
mov
sahf
sbb
xchg
sbb
fisttps
or
jns
add
add
xchg
jle
or
push
add
stos
sahf
into
or
sub
test
xchg
push
add
or
sbb
fnstsw
outsl
mov
lahf
xchg
push
das
andb
pop
mov
cmpsw
sub
add
out
cmp
pop
mov
lahf
jae
xchg
sbb
ss
add
ret
push
sbbl
cltd
adc
pop
sbb
inc
sub
int
pop
cwtl
lahf
add
mov
cmp
jg
fistps
sbbl
lret
cs
lcall
xor
and
xchg
std
or
cmc
cmovg
fwait
xor
sbb
xor
or
stc
in
pushf
mov
adc
jg
push
jbe
sbb
nop
data16
jp
clc
adc
inc
adc
add
mov
or
push
imul
stos
and
adc
icebp
gs
inc
jbe
add
push
loopne
mov
dec
push
les
mov
mov
mov
mov
je
jo
out
popf
gs
add
nop
test
mov
notb
jg
xor
pop
or
aaa
mov
push
pushf
movsl
inc
xchg
mov
mov
shll
lea
push
and
mov
mov
add
es
orl
or
dec
sahf
sub
mov
fsts
insl
jno
in
pop
mov
mov
fdivs
push
or
sub
or
add
mov
mov
in
enter
aam
mov
mov
jno
mov
add
xchg
adc
adc
inc
sbb
push
inc
adc
mov
inc
stc
xor
daa
cmp
shlb
jle
mov
pushf
dec
and
adc
mov
imul
add
sbb
or
mov
xor
add
inc
into
clc
or
stc
mov
sahf
and
adc
sbb
pop
adc
pusha
cli
sbb
xchg
mov
es
push
sbb
jns
insb
jle
push
mov
data16
sahf
and
movsl
inc
jp
mov
out
xchg
xchg
stos
mov
mov
pop
xor
test
cmpsb
pop
cmpl
add
pop
pop
add
test
pop
bound
sahf
or
mov
sub
arpl
adc
subb
cmc
std
add
push
and
sbb
enter
pop
repz
inc
sbbl
and
icebp
add
inc
adc
outsl
inc
stos
lcall
or
movsb
and
test
pop
push
add
cmpb
andl
xchg
and
inc
sti
sub
jnp
pop
subl
testb
or
aas
and
xchg
xchg
dec
jnp
adc
sbb
cmpsl
lods
fidivl
xor
cmp
jbe
mov
scas
popa
mov
adc
jb
rcr
sbb
mov
or
data16
sub
cwtl
mov
xor
sbb
mov
add
adc
push
dec
or
xchg
sub
xor
mov
mov
inc
xadd
subb
mov
add
aaa
hlt
cmp
inc
test
ljmp
mov
das
popa
adc
push
bound
adc
fnstsw
add
lods
scas
testb
cmpsb
add
sbb
sub
sbb
adc
pop
sub
add
addb
stos
jg
mov
loop
sahf
and
or
lahf
popa
leave
add
enter
push
lahf
push
pop
arpl
int3
ja
mov
sub
add
addl
mov
or
inc
pushf
lea
inc
ficomps
and
adc
inc
pop
movsl
jl
mov
cwtl
pop
stos
adc
pushaw
cmpsb
xchg
fdivrs
and
sub
test
or
pop
test
mov
gs
add
nop
adc
add
lds
pushf
sbb
mov
lods
pop
movsl
fdivp
xchg
popf
inc
ja
mov
or
pop
pop
xchg
push
data16
adc
out
sub
mov
add
dec
outsb
xor
sbb
xor
mov
nop
xorb
lea
mov
cwtl
adc
fxch
and
push
mov
sti
adc
lcall
cwtl
cmp
subb
js
mov
rcr
subb
popf
sbb
xor
mov
lcall
aas
push
cmpsb
pop
test
into
mov
mov
fwait
lahf
inc
push
sahf
or
or
cmp
mov
or
dec
cli
sbbl
dec
test
mov
xor
xor
ret
push
arpl
sub
adc
push
and
pcmpgtw
mov
adc
mov
mov
sbb
push
push
xchg
sbb
xchg
insb
xchg
ds
mov
add
or
stc
adc
pop
pop
incb
xor
dec
or
lcall
pop
pop
or
daa
add
hlt
dec
jmp
lods
cmpsb
and
adc
add
push
jb
sbb
aaa
fwait
outsb
inc
and
mov
xchg
es
add
aaa
xor
add
xor
test
sahf
or
ficoml
push
adc
lahf
sub
sbb
lcall
mov
jge
push
cs
shlb
adc
xchg
or
add
movsb
mov
insb
jmp
in
xchg
cmp
jbe
dec
mov
in
mov
mov
inc
pop
pop
movsl
xchg
adcl
push
into
cmp
xchg
enter
pop
adc
repnz
add
daa
xchg
sub
add
pop
data16
aam
inc
iret
xchg
fs
jg
addl
or
inc
and
xchg
push
je
pop
loope
cmc
xchg
mov
mov
aas
aas
sbb
jg
daa
push
cmp
fwait
xchg
xchg
sub
add
loopne
sbb
mov
cmp
xchg
adc
jge
push
insb
jb
mov
or
cwtl
pop
je
xor
sbb
mov
sahf
and
mov
add
in
inc
pop
sub
sbb
fstps
jno
adc
sbb
add
jbe
xchg
sbb
xchg
popf
inc
shll
insb
int3
dec
sub
xchg
mov
cltd
mov
lret
pushf
or
fildll
sbb
add
insb
mov
sbb
add
xchg
xchg
or
icebp
or
xchg
xchg
xchg
test
out
inc
sbb
je
lret
data16
adc
push
das
push
cltd
inc
adc
into
jns
int
adc
inc
or
addl
mov
aam
sbb
pop
push
and
shlb
xchg
or
inc
or
test
sbb
shll
jne
add
bswap
inc
lret
in
fdiv
notb
mov
icebp
push
mov
xchg
xchg
or
mov
add
test
sbb
mov
shlb
cmpsb
xchg
dec
lret
adc
pop
mov
adc
xchg
xchg
mov
or
andb
inc
mov
sbb
std
or
xor
js
xor
sbb
sbb
mov
xchg
add
sub
push
mov
mov
adc
sbb
xchg
sbb
cwtl
or
xor
adc
aas
inc
and
push
cli
jp
sbb
xor
xchg
push
add
nop
push
or
cmpsl
mov
push
adc
mov
aas
cli
cld
sarb
pop
pop
movsl
sub
and
imul
cmp
movsl
xchg
cwtl
cmp
outsb
pusha
sbb
cmpsl
add
ds
popl
dec
movsl
outsl
pop
inc
cmp
push
incl
arpl
inc
or
aas
lahf
mov
mov
push
adc
sahf
cmp
mov
sbb
imul
dec
xor
mov
int
sbb
scas
jnp
push
mov
xchg
or
sbb
mov
dec
ja
mov
pushf
sbb
mov
sbb
jno
xor
mov
jle
sbb
push
sub
push
andl
push
comiss
xchg
push
jge
lahf
data16
mov
lea
xchg
jbe
sbb
imul
adc
jle
mov
hlt
push
jecxz
test
sbb
xor
test
jb
cmpsb
mov
xchg
dec
jbe
or
or
add
xchg
lahf
sti
adc
lret
mov
adc
adc
or
clc
xchg
xor
xchg
and
push
sti
mov
in
stc
insl
mov
pop
pop
add
cmp
xchg
sbb
push
data16
data16
xchg
mov
push
nop
fwait
mov
xchg
mov
mov
xchg
add
push
cmc
sub
popl
cwtl
mov
xchg
and
or
stos
movswl
insl
sbb
cli
testl
loop
imul
aaa
push
pop
das
and
mov
add
adc
mov
jg
mov
pop
mov
cltd
fs
cmp
pop
fidivs
xor
and
jns
or
pushf
and
fwait
sbb
scas
pop
xchg
inc
andl
or
adc
sub
arpl
aam
sarb
add
adc
xchg
cmp
xor
xor
cmp
cmpsb
fs
push
addl
lock
aas
push
cltd
xchg
sbbb
inc
inc
mov
xchg
bound
xor
es
mov
iret
icebp
andb
jle
adc
cmpsb
in
jle
adc
sbb
cmp
ja
mov
cltd
jmp
jg
bts
rorb
xor
dec
adc
add
inc
ficomps
mov
pop
sbb
lret
pop
push
mov
xchg
cmpsb
mov
sbb
loopne,pn
pushl
adc
jg
or
mov
jmp
sbb
inc
orb
push
data16
add
mov
xchg
les
mov
xchg
flds
xchg
and
mov
mov
mov
movsb
mov
and
mov
mov
adc
or
or
mov
lock
push
out
xchg
arpl
mov
and
pop
sahf
or
cwtl
sbb
xchg
push
jl
dec
adc
cmp
insb
cmpsl
mov
add
mov
xchg
into
inc
xchg
test
sbbl
orb
sub
mov
cli
icebp
and
xchg
mov
pop
and
call
mov
lret
dec
sbb
cmpsb
add
fs
and
daa
push
das
mov
sbb
stos
cli
sbb
cwtl
adc
lcall
push
sbb
or
cmp
in
xor
jbe
mov
fldenv
and
inc
add
or
je
push
test
flds
sub
imul
inc
or
pop
push
icebp
sub
add
and
xchg
push
push
mov
enter
sub
test
cmpsl
and
add
mov
or
or
mov
orb
cmc
pop
cmp
test
jae
inc
or
xor
mov
add
sub
sbb
sub
dec
xchg
xor
cmp
mov
and
movsl
pop
je
loope
cmpsl
mov
adc
push
test
sahf
jg
sub
pop
lret
push
sbb
or
xor
xor
sub
push
cmp
jbe
push
xchg
push
add
cmpsb
or
and
or
test
pushf
adc
add
dec
fbld
xchg
dec
adc
pushf
push
pop
sub
mov
icebp
inc
fwait
jge
outsb
add
aaa
addb
adc
mov
adc
testl
ja
clc
dec
push
ficomps
in
mov
insb
adc
mov
pop
mov
lds
xchg
icebp
push
jmp
push
or
mov
cltd
mov
xchg
xchg
test
or
xchg
sbb
mov
inc
add
fmuls
aas
sbb
sti
mov
adcb
test
xchg
int
sub
adc
mov
nop
std
mov
adc
sarb
add
and
mov
and
sbb
jb
les
std
cmove
aas
mov
sbb
jb
xor
int
in
mov
xchg
xchg
ret
mov
lds
inc
pop
adc
rclb
jg
outsl
test
xchg
push
popa
data16
mov
inc
or
fwait
xor
aas
test
std
adc
pop
mov
sub
mov
push
sbb
and
jno
out
sbb
pop
sub
mov
sub
mov
and
add
inc
mov
sbbl
or
xchg
adc
adc
dec
sbb
sub
adc
mov
fistpll
pusha
data16
push
rcll
xor
mov
jo,pn
xchg
aas
sbb
movsl
xchg
inc
dec
pop
ficomps
cwtl
fs
xor
mov
sbb
cmp
xor
cmpsb
add
mov
jl
imulb
mov
leave
mov
cmp
add
test
xor
pop
pushf
sub
sbb
xchg
or
mov
movsl
stos
push
sbb
dec
push
mov
cmpsl
xchg
cltd
mov
xchg
movsl
pop
cmpsl
push
fcoms
mull
sbbb
pop
and
pop
rcrb
add
jge
adc
pop
cmpsl
push
arpl
lahf
push
xchg
jbe
fwait
mov
lcall
sahf
or
inc
negl
into
movsl
sbb
add
and
push
jmp
cmpl
pop
lea
xchg
das
sbb
mov
cwtl
xchg
or
rcll
popa
xchg
lcall
testl
and
adc
push
mov
je
cmp
xor
xchg
xor
hlt
push
mov
insb
das
rorb
mov
ret
jns
push
addl
cmpsl
addb
ret
hlt
mov
es
aas
pop
xchg
mov
sub
jg
push
stos
pop
loope
subb
jne
sbb
sbb
mov
je
cmc
sbb
fwait
add
pop
pop
mov
lahf
rorl
sbb
push
leave
mov
nop
into
xchg
and
lods
sahf
adc
cmpsl
daa
fsubs
stc
push
adc
mov
jle
mov
mov
add
mov
pop
rorb
cmp
sub
out
adcb
pop
or
jmp
daa
pushf
or
lahf
or
xchg
push
or
jb
mov
subb
jg
adc
xchg
or
sbb
je
fstl
jne
je
mov
movsl
pop
xchg
lahf
mov
sbb
dec
adc
or
mov
adc
jecxz
test
in
movsl
and
es
ja
loop
ret
push
test
and
movsl
mov
call
mov
bound
movsl
sbb
pop
push
mov
mov
xchg
mov
push
adc
jb
sbb
mov
adc
cmp
mov
sbb
or
test
xchg
mov
dec
jge
inc
stos
test
ss
repz
xor
cmp
jge
push
xor
mov
test
les
inc
leave
xchg
add
mov
sbb
sbb
mov
mov
mov
lods
sub
push
and
aam
xor
mov
add
or
test
cld
add
cmp
inc
or
add
test
das
inc
mov
cmp
cmp
sbb
push
sbb
or
cmpsb
cmpsl
mov
xchg
mov
xchg
sahf
ret
jg
push
sbb
mov
push
jmp
into
xor
lds
fwait
jae
rorb
inc
ja
cmpsb
or
cmpsl
dec
fwait
lret
inc
pushf
lahf
mov
mov
adc
dec
cmp
mov
imull
xor
mov
outsl
cmc
cmpsl
pop
pop
mov
inc
inc
add
adc
mov
cmp
xchg
inc
inc
sbb
icebp
xor
or
pop
dec
mov
jg
sub
sbb
sub
mov
cmp
lods
adc
and
adc
or
mov
dec
xchg
adc
cmp
aas
pusha
mov
xchg
push
and
push
inc
sbb
lods
cwtl
add
pop
insb
pushf
add
subl
and
shll
adc
add
mov
jecxz
roll
xchg
xchg
loopne
add
les
inc
dec
loope
cwtl
pop
dec
inc
int3
add
mov
sbb
xorl
mov
clc
je
push
test
es
cmpsb
mov
push
test
orl
inc
daa
test
mov
and
cmc
stc
outsl
pushf
nop
mov
and
jmp
sbb
bound
js
cli
xchg
cmc
pop
sti
xchg
pop
sbb
xchg
dec
mov
mov
or
pop
sbb
xorb
inc
cmp
push
shrl
or
cs
or
mov
int3
adc
inc
xchg
lods
daa
adc
sub
and
xchg
ljmp
ficompl
adc
cmpsb
sbb
loopne
push
mov
sub
mov
mov
mov
pop
add
mov
iret
xchg
imulb
sbb
addl
out
call
outsb
pop
push
lahf
mov
aas
sub
add
xchg
sahf
add
xchg
jbe
fs
sub
mov
pop
mov
adc
scas
pop
jg
mov
adc
mov
adc
lcall
xor
hlt
pop
or
adc
mov
sbb
dec
push
inc
cmpsb
sbb
or
nop
jbe
mov
orl
inc
pop
adc
jmp
dec
nop
xchg
cli
pop
aas
add
xchg
inc
test
lcall
lods
add
pop
add
xchg
xor
aad
inc
cmpsb
cwtl
mov
and
sub
or
mov
mov
or
xor
mov
pop
or
mov
in
add
pushf
ss
pushf
pop
lahf
pop
and
ffreep
add
cltd
and
iret
test
and
mov
in
pop
or
clc
jnp
sub
mov
arpl
cmpsb
sub
mov
out
mov
adc
out
xor
cmp
pcmpeqb
stos
mov
nop
xor
add
mov
mov
or
push
stos
dec
adc
push
cltd
mov
xchg
dec
xchg
aas
in
mov
cli
dec
sbb
add
inc
rcrb
cli
sbb
nop
mov
shll
out
stos
subb
push
mov
mov
jg
pushf
add
test
add
inc
mov
mov
sbbl
xor
orb
sub
mov
pop
add
rol
push
fisubl
mov
mov
add
sbb
sub
mov
roll
or
jg
sbb
adc
pop
andb
sahf
add
pop
add
adc
fadds
orb
fwait
cli
stc
aaa
xchg
sbb
xchg
xchg
aaa
lcall
outsb
sahf
or
pop
sub
push
adcl
xor
xchg
in
jne
data16
xchg
btcl
sub
mov
adc
push
push
cmp
sbb
mov
push
sahf
out
push
or
inc
xchg
add
sbb
mov
mov
pushf
add
xchg
sbb
mov
adc
enter
inc
mov
das
and
adc
mov
push
outsl
xchg
adc
movsl
sbb
or
or
adc
bound
add
sbb
ficomps
fstpt
jg
mov
fcomps
and
mov
mov
cmp
and
adc
sub
inc
mov
xchg
pop
ja
lahf
jmp
xor
cmp
cmpsl
fwait
outsb
jg
lds
jecxz
xor
arpl
imul
xor
movsl
fwait
test
mov
cmp
shll
jle
and
adc
adc
cwtl
mov
jno
xchg
or
dec
push
mov
or
and
jg
push
outsb
xchg
mov
xchg
xchg
and
adc
stos
add
sub
popf
adc
outsb
sub
adc
inc
or
fwait
or
sbb
xor
adc
movb
test
test
jle
xchg
xcrypt-ecb
cmpsl
or
xor
ss
int3
mov
xor
xchg
mov
mov
push
xchg
lcall
ds
sbb
mov
or
mov
test
cmpsb
mov
mov
popa
jp
add
mov
punpckldq
adc
adc
jl
mov
sbb
mov
push
adc
out
inc
stc
push
xor
test
popf
cmpsb
mov
and
lods
adc
jle
push
mov
test
mov
in
xchg
cltd
adc
repz
fistpl
jns
cltd
mov
or
adc
xlat
push
mov
repnz
je
cwtl
into
bound
jp
rcrb
push
jne
add
data16
add
mov
pop
lea
addb
cs
push
jb
jbe
inc
xchg
ret
je,pn
fidivrl
cmp
test
add
pop
pop
adc
xchg
push
mov
push
cmp
test
lahf
cmp
fs
jle
mov
mov
push
jge
sub
stc
cli
pop
xchg
push
push
inc
and
xor
add
imul
jb
xor
mov
mov
sahf
mov
je
sub
add
xchg
adc
leave
xor
cmp
or
addl
xchg
sbb
inc
and
dec
cmp
push
dec
mov
stos
inc
adc
add
xor
mov
mov
push
movsl
movb
dec
dec
lahf
pop
sbb
adc
test
jno
test
and
sbb
or
jb
mov
test
orl
test
cmp
adc
sub
adcb
rcrb
and
push
xchg
lea
mov
fcoml
movsl
out
insb
push
cmpsl
mov
pop
cli
lods
push
push
jbe
fwait
adc
daa
std
aam
imul
pop
pop
out
test
mov
mov
cltd
mov
add
sub
adc
jo
xor
aaa
sahf
cmp
sahf
jle
or
fs
cmp
aad
mov
xor
insb
fwait
aas
test
sti
mov
xor
mov
or
popf
flds
test
sbb
sbb
mov
push
mov
push
nop
push
inc
sbb
movsb
cmpsl
test
rcrb
push
aas
ret
add
add
das
pop
sbb
pop
icebp
stc
push
std
stc
andl
mov
or
sbb
mov
in
ss
test
add
mov
sbb
push
hlt
insb
mov
sbb
pop
adc
xchg
and
add
add
mov
sub
sbbb
or
inc
arpl
and
sahf
or
test
xchg
je
cmpsb
ret
movsl
jmp
push
xchg
incb
sbbl
dec
test
inc
cltd
mov
and
aaa
test
lock
push
add
data16
inc
cmpsb
jbe
inc
pop
mov
lock
adc
xchg
add
ja
adc
jbe
and
aas
incl
insb
cmp
push
mov
mov
das
addl
dec
add
sahf
and
inc
andb
xchg
gs
mov
xor
push
pushf
adc
adc
xchg
pop
xor
mov
int
cmpsl
nop
mov
or
pop
sbb
mov
or
sahf
insl
pushf
add
mov
dec
test
xchg
cli
ljmp
jg
mov
inc
sbb
bound
or
je
movsl
shll
lret
and
mov
mov
dec
daa
xchg
mov
mov
and
outsl
xor
mov
or
inc
or
xchg
sbb
push
aad
or
cwtl
xchg
add
and
add
pop
xchg
xlat
push
sbb
or
jp
pop
xor
jae
xor
int3
addr16
inc
sbb
test
sbb
aaa
pop
xchg
xchg
rclb
fstpl
add
adc
inc
hlt
es
ficoml
movsl
sbb
push
or
enter
sbb
xchg
pop
inc
jno
sub
push
int3
rcrb
mov
or
jno
ja
sbb
push
cwtl
adc
jb
sub
mov
or
pushf
sub
dec
out
in
sub
je
mov
mov
jmp
sub
xor
das
mov
jo
movsl
dec
mov
or
or
and
push
sahf
js
lahf
ljmp
push
jbe
fbld
dec
xchg
mov
sbb
nop
add
fwait
data16
sbb
mov
lcall
sbb
pop
or
pop
es
cwtl
and
sahf
sbb
sbb
xor
push
adc
pop
hlt
jns
and
cmpsb
lahf
lcall
movsl
mov
sbb
in
mov
lahf
adc
sbb
insl
sub
stos
sbbb
pop
sbbb
and
inc
clc
mov
mov
rolb
test
lea
movsl
jbe
inc
or
je
mov
mov
jg
jbe
xor
sahf
cmpsb
sti
xchg
pop
lea
dec
sbb
and
jg
adc
pop
adc
data16
mov
xchg
adc
or
cmc
mov
sti
add
mov
xchg
outsb
jb
adc
lea
xchg
mov
cwtl
adc
fcmovnb
dec
lcall
movsl
daa
faddl
xchg
xorb
jb
mov
sub
icebp
jns
sbb
jbe
push
mov
mov
sti
cmpsb
add
cs
xchg
or
out
stc
or
adc
cmc
repnz
and
cmc
mov
inc
xchg
mov
imul
xor
xchg
pcmpgtw
push
mov
fwait
or
cwtl
mov
mov
gs
mov
mov
mov
mov
push
pop
push
aas
sub
adc
xor
pop
sub
pop
sbb
sbb
adc
push
pop
bswap
mov
ret
or
gs
cwtl
mov
sbb
push
inc
stc
or
fidivs
cmpsb
movsl
xor
into
call
mov
nop
xchg
pop
xchg
and
jb
inc
mov
leave
adc
arpl
adc
add
jb
pusha
inc
mov
fimull
mov
in
push
mov
push
xchg
add
mov
add
add
stos
ja
bound
xchg
push
subl
and
mov
fmull
test
js
stos
into
mov
pushf
addl
sbbl
sbb
movsb
ds
adc
or
mov
frstor
mov
std
push
sbb
test
adc
cmp
jne
jo
daa
movb
dec
xchg
adc
mov
sbb
mov
xchg
dec
fisubrs
scas
mov
and
and
inc
mov
push
sahf
je
test
jg
adc
pop
stc
lods
stos
mov
stos
dec
add
movsl
lcall
xchg
movsb
scas
mov
pop
ret
pop
das
std
vpand
sti
or
sbb
cltd
fisttpll
or
adc
ja
adc
push
es
push
adc
xchg
data16
cmpsb
lret
ror
inc
add
inc
sti
cmp
lods
jl
sbb
lahf
lret
mov
sbb
es
scas
or
or
lock
pushf
mov
sbb
loopne
jg
nop
push
roll
xchg
icebp
mov
cltd
or
lahf
add
cs
and
cwtl
lahf
movsl
inc
sub
inc
sub
popf
lods
cmpsb
daa
lock
mov
adc
mov
sbb
cltd
sbb
fidivrs
nop
push
sbb
leave
inc
xchg
lods
jnp
daa
push
xor
inc
lahf
jbe
jb
adc
popa
jge
mov
add
sub
mov
add
adc
scas
adc
push
mov
and
mov
adc
mov
out
sbb
xchg
push
or
adc
lahf
xorl
push
xchg
sbb
xchg
movb
sahf
fstpt
push
mov
nop
cwtl
test
mov
xchg
mov
inc
push
push
xchg
movsl
outsb
iret
adc
ljmp
andl
lahf
nop
xor
mov
add
xor
cmp
test
and
xchg
cmpsb
cmp
in
test
test
es
mov
and
cmpl
push
mov
stos
daa
mov
into
hlt
adc
lods
or
sub
jmp
push
je
push
in
dec
xor
or
insb
push
xchg
mov
sbb
mov
pop
dec
adc
push
adc
lahf
enter
adc
pop
mov
clc
xchg
and
pop
cmp
and
pushf
cmpsb
aaa
mov
sbb
test
sbb
cltd
dec
xchg
sbb
mov
pop
dec
mov
stos
fwait
rol
and
sbb
or
cmp
pop
push
inc
xor
nop
xchg
mov
int
gs
xor
mov
sbb
cmp
leave
push
cmp
out
inc
rolb
fwait
xchg
and
jle
sub
cmp
xchg
cld
xor
xchg
pop
icebp
pop
push
subl
lods
sbb
cmp
adc
xchg
and
add
pop
push
and
loopne
stos
add
sbbl
adc
pop
sbb
sub
mov
cmp
leave
and
sti
add
jns
cmpsl
push
test
rolb
dec
xchg
jp
jae
adc
mov
rorb
xchg
insl
jp
iret
add
movsl
movsb
sbb
insb
mov
xor
cmp
imul
xchg
mov
xchg
mov
mov
add
or
push
or
sub
mov
mov
adc
je
push
inc
sbb
mov
mov
xor
fs
test
adcl
jnp
lock
mov
pusha
jne
and
xchg
pop
pop
clc
pop
pop
xchg
test
or
sbb
push
adc
push
push
orb
test
stos
sbbl
cmpsb
fwait
or
add
sub
ret
std
loopne
gs
push
and
or
sbb
fwait
incl
mov
inc
cmpsl
sbb
pushf
or
mov
jmp
inc
daa
adc
iret
rclb
adcl
or
xchg
cmp
mov
mov
movsb
mov
mov
adc
mov
popa
movb
xchg
jb
cli
in
sti
or
push
lds
inc
push
cmc
or
adc
rorb
pop
call
outsb
xchg
pushf
xchg
xor
gs
sar
xchg
aas
jle
sbb
scas
mov
xchg
or
and
add
pop
push
addr16
je
pusha
dec
inc
outsb
pop
cwtl
and
cltd
imulb
sbb
stc
push
outsl
mov
sbbb
ds
push
and
dec
adc
xchg
mov
mov
cmpsb
pop
pop
mov
test
push
push
loopne
js
lds
xchg
stos
cltd
add
or
mov
ss
and
mov
lcall
adc
jg
sbb
adc
sbb
xchg
loopne,pt
test
xchg
data16
iret
pop
dec
stos
pop
cmpsb
inc
pop
pop
dec
pushf
cmpsl
push
iret
fcomi
sbb
scas
xor
test
push
fisubs
xchg
sbb
inc
sub
mov
mov
xchg
push
dec
pop
popf
sub
mov
add
mov
sbbb
orb
icebp
movsl
cmpsl
out
xchg
ja
lahf
mov
imul
push
sbb
adc
pop
pop
into
lds
and
cmp
push
pop
lock
add
stos
push
xor
imul
mov
or
and
fcmovnbe
or
dec
pop
jb
add
and
and
adc
in
fwait
jmp
xchg
lret
inc
pop
imul
cs
sub
push
xor
pop
cwtl
cmpsb
test
push
dec
rcll
stc
orl
sahf
push
mov
mov
movb
push
sbb
jge
inc
movsl
mov
push
roll
shlb
sub
test
push
sti
and
mov
push
or
clc
iret
jp
popa
mov
adc
push
or
cmp
xchg
bound
ss
mov
mov
push
jge
sbb
xchg
cmp
inc
or
push
and
dec
add
jl
insl
cmpsb
mov
sbb
sbb
int
mov
stos
or
sub
test
xchg
fldpi
test
xchg
cmpsb
push
fsubrl
jg
cmpsl
lahf
pop
add
and
mov
js
inc
xchg
mov
cmp
movups
mov
bound
and
pop
adc
stos
adc
popf
or
or
sets
adc
adc
outsb
pusha
mov
mov
sub
outsl
or
movsl
mov
inc
or
adc
cmpsl
cmpl
orb
push
add
sbb
or
pop
xchg
sahf
int
push
push
sbb
or
andl
add
mov
sbb
test
sub
in
mov
nop
xor
leave
dec
push
stos
or
movsl
setb
sbb
into
mov
mov
or
and
xor
add
or
std
cwtl
push
and
mov
xor
add
call
or
movsl
and
xor
sub
xor
sbb
cltd
pop
xchg
xor
adc
push
ja
cmp
sub
xchg
jb
data16
mov
push
jg
and
loope
sbb
in
fistl
fldt
cmovge
sub
mov
add
sbb
mov
mov
cmpsl
ficoms
or
pushf
mov
push
outsl
jle
cmpsb
sbb
fwait
hlt
adc
sti
add
xor
repnz
or
sbb
xchg
adcb
xor
rorb
test
outsl
aaa
mov
loope
outsb
movsb
adc
lret
movsb
negl
stos
cltd
jns
sbb
xchg
movsl
inc
pop
or
mov
xchg
pop
inc
aad
jb
xchg
pushf
or
add
mov
cmc
push
pop
cmpsb
adc
sbb
sub
mov
jo
sbb
sahf
pop
add
pop
sbb
scas
dec
jg
nopl
xchg
xchg
test
lahf
inc
aaa
adc
cli
call
mov
sub
push
mov
int
loopne
pop
and
add
stos
and
push
pop
or
and
mov
mov
xchg
sub
push
mov
push
sbb
lods
les
mov
cwtl
pop
mov
mov
or
testl
popf
cwtl
loopne
mov
inc
mov
nop
push
aam
call
mov
ffreep
arpl
out
sar
pop
mov
mov
sbb
mov
and
bound
sahf
daa
adc
mov
xchg
dec
cwtl
xchg
sub
test
push
cmpsb
dec
or
or
xchg
outsl
lcall
test
inc
pop
xchg
cmc
inc
dec
ret
lcall
fstps
dec
and
pop
in
mov
adc
repz
push
adc
adc
xor
push
dec
stc
std
decb
pop
push
or
adc
xor
mov
mov
xchg
push
pop
sbb
es
xor
icebp
jmp
adc
push
xor
ljmp
push
sub
out
cmp
adc
mov
jnp
and
pushf
mov
push
fisubs
lcall
mov
outsb
mov
icebp
adc
adc
sbb
and
adc
cmp
push
popa
lcall
add
mov
or
jbe
in
sahf
pop
cmpsl
pop
adcb
add
dec
aaa
cmpsb
dec
sbb
ret
push
xchg
lcall
shlb
stos
sahf
adc
jb
or
aas
cltd
xchg
push
dec
fisubs
sub
mov
inc
data16
and
or
add
sahf
pop
jg
adc
orl
fwait
lcall
cs
jbe
jbe
mov
es
lahf
loopne
or
push
or
adc
xchg
mov
fwait
mov
push
pop
cwtl
jb
lea
dec
jmp
sahf
mov
push
mov
or
out
pop
cmpsl
sbb
test
mov
mov
cmpsl
fs
stos
push
outsl
data16
fwait
mov
adc
test
sbb
pop
or
sbb
in
pop
fimull
pop
dec
or
fwait
mov
sbb
add
cmpsl
or
push
jb
mov
dec
add
ljmp
push
ss
push
sete
dec
mov
or
orl
stc
rclb
add
cmpsb
pushf
jmp
or
and
cmpsl
push
sub
lcall
jne
push
inc
sahf
add
fwait
insl
or
pop
sbb
push
pushf
xor
pop
loope
or
push
dec
xchg
adc
or
or
into
loop
add
jl
mov
mov
inc
pop
adc
sarb
or
and
subl
sub
icebp
inc
out
mov
adc
int
sub
sbb
into
pop
mov
cmpsl
inc
adcl
adc
add
shll
std
xorb
inc
cli
and
or
and
andb
enter
sub
inc
leave
adc
mov
xchg
mov
inc
mov
test
mov
push
or
pop
mov
cmpsl
fwait
sbb
sub
pop
cmpsb
stos
int3
or
jbe
mov
fwait
nop
fldenvs
mov
and
lods
or
add
xchg
sahf
inc
sbb
sbb
sub
es
sub
or
inc
mov
pop
mov
shrb
ja
jecxz
sub
xchg
add
lcall
jbe
mov
sub
sbb
subb
add
cltd
add
stos
xor
xor
push
pop
cmp
mov
add
out
add
sbb
test
push
mov
lods
test
cmpsb
xchg
lahf
decb
mov
and
xchg
sbb
cmpsb
psraw
sarl
cwtl
push
dec
jo
and
std
sub
mov
mov
sahf
pop
dec
jns
add
and
sbb
or
into
sbb
cmp
fldcw
mov
cmpsb
inc
aaa
xchg
add
xlat
xchg
lock
out
push
cmp
mov
adc
or
fs
mov
xchg
mov
and
add
sahf
sbb
sbb
movsl
orl
mov
push
mov
jo
sbb
sbb
sub
into
jg
mov
sahf
fwait
mov
sbb
xchg
lahf
aas
lods
ficomps
or
jb
pop
mov
daa
xor
inc
sub
cwtl
lea
rolb
enter
jle
fwait
adc
out
jo
scas
jecxz
xor
mov
out
jne
cmpsl
or
ret
dec
jns
pop
je
notl
xorb
ret
and
push
and
shll
xchg
arpl
ja
sbb
sahf
lret
push
sti
jl
mov
push
xor
add
std
sub
pop
lret
pop
andb
inc
xchg
or
in
adc
outsl
sub
addr16
nop
sbb
push
mov
xor
cwtl
push
stos
ljmp
push
cmp
data16
sbb
jl
addb
xlat
dec
ja,pn
or
xchg
or
inc
jg
add
add
push
dec
sbb
btr
pop
push
filds
xchg
mov
push
std
add
mov
pop
lods
mov
or
or
sbb
lcall
add
mov
stc
sbb
sub
adc
cmp
mov
pop
pop
sahf
mov
sbb
clc
inc
inc
data16
outsb
aaa
adc
mov
mov
or
push
movsl
mov
bound
mov
and
pop
sbb
sub
inc
inc
sub
pavgb
mov
test
push
rcrl
adc
sub
add
lods
movzbl
add
xor
or
adc
push
repnz
and
sbb
sahf
test
sbb
pop
xchg
push
out
or
sub
or
cmp
xchg
add
fildl
xchg
jne
andb
cltd
leave
out
test
rcl
inc
add
fwait
gs
mov
aaa
sbb
flds
adc
sbb
adc
adc
sbb
leave
mov
sub
dec
into
mov
mov
xlat
out
and
add
pop
push
sahf
sub
push
movsl
and
and
mov
xchg
pop
mov
and
adc
pop
movsl
sbb
and
inc
and
movsl
or
push
add
adc
cmpsl
sbb
or
push
and
out
cwtl
sbb
cmpsl
mov
mov
sbb
xchg
xchg
fwait
mov
fs
or
negb
mov
cltd
sahf
and
push
sbb
movsl
xchg
sbb
pop
xchg
xlat
mov
mov
rol
xchg
cmp
and
and
dec
outsl
cwtl
mov
and
adc
sbb
pop
push
movsl
adc
jnp
imulb
inc
sub
xchg
fwait
fs
adc
push
sub
enter
and
stos
adc
push
mov
inc
jns
out
fldenv
sbb
std
sub
mov
pop
into
push
push
push
mov
nop
mov
pop
add
dec
push
mov
xchg
cmp
cmc
mov
mov
add
outsb
or
sahf
movsl
cld
jge
cs
outsb
inc
sbb
aaa
fwait
mov
or
jle
adc
jg
sbb
mov
and
push
pop
data16
push
nop
jae
cmp
push
stc
xchg
jb
movsb
sbb
push
movl
and
lret
ret
daa
and
je
xchg
add
sbb
cmp
bound
cmp
adc
lods
or
rolb
cwtl
add
xchg
adc
sub
call
xlat
inc
mov
pop
pusha
xchg
movsl
adcl
adc
mov
inc
mov
sbb
in
pop
push
inc
xor
sub
outsl
sub
push
pop
mov
sub
inc
add
bound
outsb
std
xchg
and
dec
push
mov
adc
and
add
mov
or
inc
mov
sahf
push
mov
xchg
and
mov
and
mov
fwait
sub
mov
sbb
pop
jecxz
xchg
cwtl
push
push
insl
mov
bt
jae
sahf
sbb
hlt
inc
loop
mov
push
jae
pop
fldt
or
add
cmp
add
cltd
xchg
sub
rcrb
ret
imul
popf
jle
xchg
sbb
sbb
nop
and
sbb
sbb
inc
testl
sub
iret
nop
popf
or
sahf
cwtl
bound
test
lods
decl
stos
rorb
xchg
xchg
fchs
inc
leave
bound
fildll
adc
inc
nop
ret
xchg
mov
mov
mov
pushf
stc
stos
mov
paddb
cmc
lds
mov
or
or
lret
and
dec
fldl
xor
push
cli
shlb
mov
ret
push
inc
stos
sbb
stc
pop
adc
sub
sub
mov
ror
add
dec
jle
mov
add
sbb
push
add
push
fcoms
aas
hlt
fwait
pop
enter
lahf
and
test
stos
mov
adcl
stos
mov
pop
leave
out
xchg
add
cmpsb
push
movb
add
std
sbb
jo
cmpb
nop
cmp
lret
lahf
outsl
mov
ljmp
mov
xchg
push
xchg
add
in
dec
popa
nop
pop
or
push
mov
or
push
popa
gs
jp
sub
loopne
sbb
mov
dec
scas
loopne
int
sbb
pop
stos
jno
mov
add
fs
pushf
ficomps
cltd
mov
fbstp
lock
adcb
inc
sbb
inc
data16
sahf
inc
sahf
or
inc
sub
mov
jle
cmpsb
xchg
mov
or
or
cmp
out
mov
dec
or
ja
fldl
xchg
mov
mov
sub
cmp
mov
mov
sub
mov
aam
pop
ror
xchg
sbb
aas
stos
lea
and
mov
es
sbbl
in
bound
mov
lods
adc
out
push
testb
ret
aas
aad
xchg
push
and
xchg
stc
push
ljmp
lahf
sub
or
out
dec
push
pop
js
sbb
lods
push
pop
push
sbb
push
xor
sbb
mov
mov
mov
fstps
cmp
cltd
or
mov
lods
ficomps
add
adc
jle
mov
sbb
sbb
cmp
push
mov
sbb
or
inc
mov
aas
daa
mov
fiadds
pop
stos
dec
jns
inc
adc
rcrl
mov
push
addb
sbb
mov
sub
aaa
mov
imul
inc
sbb
test
loop
cmpsl
xchg
push
xchg
inc
cmpsb
subb
xchg
mov
and
lahf
sbbl
pop
push
xchg
mov
and
mov
xchg
adc
add
dec
add
lahf
cmpsb
sbb
mov
xchg
fwait
mov
mov
fstl
mov
or
push
stos
xchg
out
xor
xchg
test
or
xor
push
mov
test
cmp
pop
and
sahf
nop
xchg
mov
add
dec
cmpsl
mov
xchg
mov
add
aas
nop
pop
mov
sub
sub
jle
xchg
stos
add
in
cmp
xorb
loopne
mov
imul
lcall
sbb
aad
or
push
mov
push
clts
fistps
or
mov
outsb
inc
fwait
pop
or
subb
sbb
enter
sti
lahf
mov
sti
addr16
push
hlt
jp
leave
es
and
xchg
inc
inc
dec
pop
cmpsb
arpl
dec
sub
das
cwtl
add
fwait
inc
nop
je
fstps
mov
fldcw
mov
xchg
and
mov
adc
adc
psrld
cld
ja
ds
test
sub
mov
dec
lahf
jbe
jb
lea
dec
mov
nop
popf
or
dec
ja
mov
pusha
ret
sbb
xor
xor
or
sbb
or
and
outsl
ds
cmpsl
xchg
or
lods
or
xchg
or
add
sbb
fdivrp
xchg
or
pushf
cltd
jbe
fldl
jg
cmp
and
popf
sub
fdivl
adc
push
fcomps
lds
xor
fnstsw
lret
rcrl
jle
pop
pop
adc
es
mov
shrl
stos
iret
sub
call
aaa
xor
mov
adc
insl
sahf
inc
nop
mov
cltd
push
cbtw
movsl
jbe
sub
movsl
push
mov
clc
mov
ss
repnz
pop
add
adc
pop
pop
movsb
inc
lea
adc
dec
add
dec
sub
and
mov
clc
xlat
daa
cwtl
shrl
ljmp
ret
dec
adc
repnz
xchg
add
rcrl
popf
cmpsl
cwtl
mov
adc
lds
mov
je
push
jmp
inc
movsb
mov
push
sbb
add
out
and
jns
pop
inc
mov
xor
adc
rcr
sub
sbb
les
fsubl
jge
adc
or
lahf
lcall
push
pusha
xchg
outsl
adc
adc
lret
pop
fistpll
cwtl
push
dec
jbe,pn
lahf
and
fnstsw
adc
sbb
push
lret
lret
xchg
mov
mov
inc
pop
dec
add
and
add
push
mov
xor
addr16
xor
cmp
cwtl
test
imul
jne
cwtl
cmpsb
add
add
cmpsl
xorps
sbb
sub
add
add
cwtl
adc
dec
adc
mov
dec
mov
movsl
pusha
call
pusha
addr16
push
pop
xchg
adc
out
ljmp
paddb
ror
mov
pop
mov
insl
das
and
or
add
in
xor
adc
or
inc
add
jb
mov
test
fisubl
xchg
sbb
sbb
add
test
pop
adc
movhps
pop
xor
mov
dec
jge
repnz
imul
adc
mov
adc
fs
push
xor
ds
or
xchg
mov
std
dec
xchg
outsb
pop
test
fists
ds
adc
and
lahf
adc
fimuls
fsts
rcr
mov
xchg
sbb
lods
xchg
push
ds
or
push
dec
sbb
fnstenv
mov
mov
cmp
cltd
xor
sbb
xchg
lahf
shl
xchg
push
xchg
ret
add
xchg
push
push
pop
fsubs
push
add
push
nop
sbb
or
pop
testb
sbb
xchg
icebp
push
iret
cmp
or
jbe
in
pop
pop
mov
data16
xchg
mov
dec
sbb
add
test
xchg
adc
pop
jmp
push
sbb
stc
lcall
mov
lcall
pushf
por
loope
jle
loope
sbb
je
or
icebp
and
mov
and
insl
rclb
xchg
jmp
mov
cmpb
lcall
cs
loope
sbb
xchg
sbb
enter
sbbl
mov
push
xchg
inc
fisubrs
mov
and
aad
add
adc
data16
xor
mov
adc
sub
xchg
cmpsb
adc
xchg
das
sbb
xchg
test
sbb
mov
pcmpeqd
mov
cmp
pop
add
mov
adc
sub
push
push
pop
cwtl
or
shrl
push
sub
sahf
clc
push
dec
push
push
mov
push
inc
stos
or
pop
or
jb
jb
jb
sub
mov
add
out
movsl
jge
sub
rolb
pop
dec
fisubs
add
push
inc
nop
and
mov
push
inc
inc
xchg
and
loopne
xor
cwtl
mov
lock
sbb
pop
jl
mov
movsb
cmpsl
adc
lea
xchg
nop
punpckldq
dec
sbb
data16
sbb
out
mov
rclb
or
xchg
lahf
pop
push
sub
daa
in
test
insb
dec
xor
or
out
adc
xchg
pop
xchg
fwait
pop
popa
mov
sbb
xor
xchg
sub
sub
leave
push
mov
cmp
cmp
add
stos
daa
cmpsb
test
mov
cmpsl
clc
inc
mov
les
cmpsb
add
into
mov
cltd
xchg
test
sbb
cs
sbb
iret
daa
mov
xor
or
pop
lret
sub
xor
lcall
and
cmp
popf
daa
inc
dec
adc
cmpsb
xor
push
data16
aaa
xchg
push
sub
push
lea
sti
cltd
and
sbb
fisubs
add
mov
mov
adc
xchg
sbb
shrb
sbb
fwait
enter
fisubs
push
lods
mov
out
je
and
xor
ret
mov
push
inc
je
adc
mov
mov
mov
mov
xchg
sbb
ret
mov
cmpsl
and
xor
imul
repnz
lahf
mov
xchg
popf
lret
subl
xor
je
fwait
cmp
adc
cmpsl
popl
dec
mov
mov
pop
repnz
aas
sbb
add
pop
mov
dec
xchg
cmpsl
push
sbb
ret
inc
pop
pop
pop
popa
ror
add
arpl
push
jg
sbb
rcr
pop
dec
pop
pop
les
and
shld
cmpsb
push
popa
cmp
loopne
and
pop
ficomps
push
into
mov
mov
cltd
push
aam
cltd
or
test
in
sub
pop
incl
dec
dec
sahf
mov
lcall
mov
icebp
adcl
push
sub
xchg
hlt
movsb
push
cmp
push
mov
mov
arpl
out
sbb
and
and
dec
mov
lea
or
add
std
mov
cltd
sahf
sub
mov
mov
mov
and
xor
sbb
mov
xchg
or
mov
mov
mov
pop
push
add
add
and
mov
mov
xchg
mov
lcall
scas
test
or
push
sbb
add
mov
into
add
into
fwait
push
xchg
mov
jge
sub
cli
movsl
push
pop
mov
mov
ds
adc
xor
mov
js
sar
cmpb
xor
pop
or
push
dec
mov
cmp
lcall
sub
mov
or
lods
andl
or
out
je
mov
adc
xchg
mov
mov
std
adc
stc
xchg
daa
xchg
push
add
stc
dec
xchg
mov
mov
fwait
push
decl
or
inc
push
mov
lcall
cwtl
outsl
mov
lods
sbb
adc
and
add
bound
fsts
lcall
push
pop
andb
jnp
sbb
add
jmp
pop
and
and
inc
cwtl
push
pop
mov
es
add
sub
add
push
xor
jbe
mov
xor
mov
mov
shrb
xchg
and
aas
aaa
or
push
jns
mov
or
fsts
jae
fmulp
adc
sub
jnp
cmpsb
jbe
out
lds
scas
cmpsl
ja
add
or
adc
pop
pop
mov
sub
cmpsl
mov
test
fwait
aas
hlt
test
mov
dec
mov
sbbb
sbb
pop
hlt
adc
ds
mov
cltd
popa
xor
and
enter
mov
jle
or
push
out
pop
and
add
mov
test
cmp
cltd
sub
aaa
adc
adcl
shrb
nop
and
dec
or
xchg
dec
xchg
pusha
mov
mov
push
enter
add
mov
push
movsb
jbe
adc
pusha
test
mov
sahf
cmp
and
sbb
xor
lods
dec
push
movsb
sbb
adc
xchg
in
jge
adc
xchg
add
add
sub
sbb
test
mov
pop
fwait
xchg
and
jbe
jbe
mov
xchg
push
popf
dec
movsl
fwait
ret
inc
pop
out
cwtl
push
add
lret
mov
cli
cmc
cld
in
jo
mov
dec
and
adc
add
imul
loop
push
mov
inc
mov
add
push
xchg
and
mull
mov
sbb
mov
adc
pushf
adc
or
push
scas
jg
cmpsl
cs
data16
push
add
loopne
or
xor
adc
fwait
pusha
lods
js
out
outsb
fwait
adc
rcrb
pop
adc
pop
jb
jb
jbe
mov
mov
lcall
lahf
insb
loopne
inc
movsb
mov
inc
nop
xor
insb
fwait
push
lahf
sbb
jnp
adc
sub
or
bound
fmulp
xchg
push
movsl
cltd
adc
jg
or
cmp
loope
lds
ret
aas
cmpsl
test
mov
sarl
add
dec
mov
mov
sub
test
xchg
ja
sbb
ret
xchg
mov
push
pop
add
lahf
pushf
hlt
movsb
gs
lret
mov
push
xchg
sbb
xchg
cmp
xlat
sbb
aaa
adc
dec
adc
test
stc
jle
ret
jne
fiaddl
mov
or
lcall
sbb
cltd
add
mov
cmp
cmp
mov
movsb
mov
push
sub
or
or
popf
sbb
andb
adc
adc
sub
sub
out
sub
lods
mov
movsl
adc
sbb
clc
mov
push
dec
inc
dec
mov
sub
roll
or
inc
rcrb
bound
sbb
pushf
pop
arpl
lcall
mov
stos
adc
push
scas
or
jle
adc
fimuls
push
add
sbb
xchg
jecxz
sbb
hlt
sub
mov
pop
push
test
dec
mov
test
jbe
and
adc
stc
fld
mov
adc
add
popf
dec
jno
push
and
adc
fisttps
mov
je
xchg
and
sbb
mov
daa
dec
mov
lds
pop
mov
jle
or
cwtl
and
pushf
aad
sbb
adc
dec
sub
mov
mov
insb
push
lcall
mov
xor
push
data16
repnz
add
cmpsb
mov
dec
test
add
sub
add
and
in
movaps
and
sbb
jge
data16
mov
inc
xchg
stos
sbbl
dec
test
or
fnop
cmpb
js
xor
mov
movsb
inc
lret
jne
adc
cmpb
or
mov
add
xor
mov
icebp
inc
and
lcall
adc
pop
adc
mov
jne
xchg
stc
push
sub
popf
outsb
dec
add
stc
sbb
mov
dec
cmp
and
and
cmc
sbb
jns
or
xchg
sbb
xor
lock
add
sbb
daa
or
insl
add
mov
iret
sahf
in
ss
shll
jmp
sbb
orl
jge
nop
out
inc
cmpsl
rclb
insb
out
cmc
ret
add
cmpsl
mov
int
je
mov
mov
sbb
sub
lahf
fcmove
movsl
or
xchg
xchg
outsb
jno
adc
adc
push
or
test
lahf
adc
or
aam
jle
xchg
mov
mov
negb
sbb
outsb
pusha
xor
push
adcl
cmp
stos
jnp
mov
cmpsl
adc
sub
movsl
or
fmull
pusha
pop
adc
jne
adc
faddl
fstpl
xorl
or
mov
fwait
adc
andb
pop
push
rorb
jbe
mov
popl
xor
or
mov
mov
cltd
push
xor
lock
ret
mov
mov
pop
mov
fnstcw
paddd
mov
push
leave
fwait
and
sub
push
adc
adc
data16
daa
lcall
adc
shrb
mov
clc
add
mov
xor
iret
and
jle
in
push
add
sbb
test
mov
push
mov
sub
je
adc
sub
sbb
mov
and
fildll
pushf
sbb
mov
add
add
pop
add
and
adc
and
es
data16
xchg
or
add
mov
adc
xchg
dec
aaa
or
jnp
test
adc
addr16
clc
xor
sub
dec
adc
lcall
data16
xchg
std
inc
std
and
adc
cmp
dec
outsl
cmp
ljmp
xlat
hlt
pop
jg
and
inc
add
adc
dec
adc
cmpsb
and
push
pop
stos
pushf
add
adc
pop
xchg
je
mov
or
mov
enter
xchg
inc
sahf
add
push
cmpsl
sar
jp
mov
push
sti
add
daa
jle
or
adc
and
mov
fwait
stos
sub
xchg
data16
daa
mov
mov
sub
inc
jnp
lahf
mov
out
jno
jle
cmp
xchg
adc
inc
xor
sbb
mov
imul
or
test
cltd
xchg
and
mov
push
jg
lahf
mov
jne
mov
addl
orb
jg
or
lods
mov
daa
ror
lahf
aas
enter
addl
jecxz
adc
hlt
adc
out
in
cmp
cmpsl
sbb
movsl
andb
jge
test
or
lcall
sbbb
and
dec
cltd
decb
xchg
mov
mov
test
pop
jge
add
cltd
arpl
mov
push
or
and
mov
ljmp
sahf
adc
add
adc
sarb
add
pop
icebp
inc
mov
jl
pop
pop
jno
xor
and
mov
stc
outsb
jmp
je
mov
cmp
jb
xchg
sbb
xchg
adc
sbb
add
push
cmpsb
loopne
mov
pop
xchg
or
scas
sbb
xchg
sahf
lahf
inc
fldt
mov
adc
cmp
daa
xchg
mov
mov
cmp
adcl
cltd
mov
mov
and
mov
mov
pop
sbbl
data16
sbb
add
jbe
xor
mov
fdivrs
xchg
fistps
enter
gs
dec
xchg
mov
add
xorb
dec
lods
adc
aad
jmp
fbld
jp
mov
pusha
addl
xor
sti
xor
pop
fldenv
daa
cmpsl
lret
add
adc
xchg
jo
push
xor
mov
push
pop
push
lods
add
or
xchg
movsl
dec
mov
fisubl
xchg
bound
add
lret
test
mov
sub
imul
cwtl
push
jg
test
daa
adc
xchg
pop
mov
mov
adc
lods
nop
cltd
stc
adc
js
bound
inc
adc
push
ud0
mov
push
outsl
pop
pop
xchg
or
or
lcall
in
and
push
testb
mov
xchg
mov
sub
addb
add
rclb
xchg
mov
inc
and
or
dec
and
cmpsl
je
jb
jg
rcrb
mov
jae
xchg
mov
sub
mov
adc
movsw
and
or
mov
sbb
mov
addr16
test
xchg
xchg
lcall
fnstcw
stos
outsb
mov
nop
lcall
push
hlt
push
sub
mov
stc
sbb
sbb
cwtl
add
cmp
sbb
mov
xor
xchg
mov
add
sahf
test
fs
xchg
pop
enter
inc
mov
add
add
test
push
scas
mov
andl
jb
sbb
push
sub
mov
or
lock
and
sbb
jae
adc
mov
cs
lds
cs
pop
push
mov
aas
mov
adc
lods
mov
mov
fstpl
mov
add
cmpsb
cwtl
stos
sahf
jnp
insl
cmp
adc
push
dec
pop
daa
add
fldt
stos
cli
test
dec
jo
sub
add
pop
xchg
push
push
sbb
es
stos
cltd
lcall
hlt
jge
sahf
jl
ret
jb
mov
xchg
mov
add
mov
xchg
jg
adc
movsl
mov
sbbl
jp
loopne
lret
cmp
int3
shlb
sbb
call
stc
mov
or
xchg
les
xor
mov
push
js
sub
mov
hlt
mov
push
xchg
rcrb
sub
xor
cmp
or
sub
mov
mov
add
mov
pop
sahf
sbb
pushf
lahf
sub
and
xor
adc
nop
test
sub
aaa
and
adc
or
add
sub
xchg
jmp
push
das
orb
cmpsb
iret
add
adc
nop
sbbl
jp
sahf
pop
or
pop
cltd
fdivrl
xchg
addl
xor
cmp
adc
std
sahf
fisubl
mov
frstor
adc
daa
loope
sub
add
mov
mov
cli
pop
cli
repz
and
ficomps
xchg
jno,pn
add
mov
xchg
cmp
je
bound
popf
adc
cld
cmp
bound
and
inc
xchg
xor
mov
cmc
inc
pusha
or
addb
lahf
xchg
in
or
mov
cmp
or
orb
rclb
or
aaa
ljmp
and
aas
test
push
stos
cmpsl
cmpsb
lahf
mov
pop
mov
cmp
mov
cmp
or
push
pop
sbb
sbb
xchg
addb
jae
pop
lcall
sub
mov
addr16
stc
js
test
je
daa
movsb
sbb
jle
cwtl
or
adc
push
ds
cmp
lods
dec
xor
add
sbb
xor
lret
lahf
pop
sub
test
adc
mov
test
sbb
dec
adc
dec
dec
dec
aam
out
xchg
add
or
sub
push
std
adc
push
fldcw
sahf
or
pop
pop
mov
mov
nop
iret
jne
fdivrs
call
shrb
jbe
cmp
setg
sbb
ret
rcrb
adc
daa
sbb
sbb
aas
sbb
movsl
pushf
jp
clc
gs
lcall
test
into
and
add
push
adc
mov
gs
or
daa
cmpsb
inc
es
lret
sbb
add
sbb
test
xchg
sti
inc
inc
push
test
lahf
nop
dec
and
mov
subb
lods
add
xchg
push
mov
xchg
push
sbb
push
sub
subl
mov
je
add
adc
pop
and
aaa
pushf
mov
das
push
mov
jg
daa
jg
mov
or
rclb
mov
es
stc
pop
lock
fs
add
jb
loope
test
and
pop
repnz
inc
xchg
cwtl
cmp
daa
push
es
orl
and
aaa
xchg
mov
scas
and
push
loopne
jmp
dec
and
or
lahf
lods
pop
pop
sbbb
xchg
inc
es
adc
jae
movsl
pop
mov
xchg
sub
xchg
lods
sub
and
into
pop
xchg
xchg
popl
enter
xlat
xor
xchg
test
mov
gs
aas
adc
add
push
mov
push
aam
cli
inc
sbbl
mov
push
fnstsw
cmpxchg
sbb
adc
repnz
xor
aaa
cmpsl
or
push
nop
mov
inc
sub
adc
mov
out
add
movsb
jmp
mov
sbb
xchg
fwait
push
arpl
sbb
sahf
mov
mov
mov
xchg
adc
xor
xchg
lods
push
stos
mov
cmp
jb
sbb
into
adc
sub
ja
mov
aas
xlat
test
mov
jge
aaa
or
das
or
xchg
xchg
add
pushf
and
cmc
pop
adc
inc
mov
das
pop
cwtl
cmpsb
fildll
xchg
adc
call
adc
xchg
imul
mov
add
into
rcrb
into
cmpsb
es
sbb
sbb
daa
xchg
scas
mov
or
push
pop
cmp
in
mov
or
mov
popf
pushf
sbb
jge
cltd
pop
adc
cmpsl
out
mov
push
into
and
push
adc
dec
test
xchg
fisttpll
or
xchg
jbe
sub
test
mov
pop
mov
xchg
cwtl
sbb
mov
and
jbe
sbb
sub
adc
loop
ss
mov
jo
pusha
xchg
js
pusha
cmp
fwait
aaa
aad
call
xchg
mov
stc
clc
sub
xchg
pushf
mov
jge
mov
add
inc
aas
or
sbb
cltd
fstp
or
sbb
cmp
jl
mov
sbb
mov
add
xchg
mov
sbb
and
inc
and
sbb
pusha
movsl
jle
fidivrl
mov
adc
dec
xor
mov
sub
jg
daa
pop
sbb
xchg
or
mov
and
ficoml
add
jbe
mov
xchg
fs
mov
dec
test
sahf
mov
add
mov
mov
mov
inc
add
push
pop
or
mov
gs
or
or
cltd
pop
dec
xchg
adc
add
and
xchg
pop
and
and
mov
sub
imul
add
lahf
sbb
ja
xor
jmp
insb
js
mov
pusha
pushl
cmove
cli
push
bound
mov
in
mov
adc
stos
pop
mov
mov
inc
and
push
xchg
js
daa
outsl
andl
push
lock
pop
jns
je
test
lcall
pushf
or
mov
and
std
push
xor
lahf
movups
adc
adc
ja
xchg
or
xchg
setle
cmp
and
adc
cwtl
nop
outsl
loop
ss
sbb
test
cmp
adc
cmp
pop
es
scas
add
sbb
xchg
cmp
movsl
or
pop
rorl
nop
sub
test
test
pop
jbe
inc
orb
or
in
jg
xchg
add
jns
fwait
inc
xchg
mov
lcall
insl
popf
and
mov
pop
lret
fs
or
adc
loope
xchg
pop
add
in
add
movsl
add
mov
mov
cmpsl
ss
and
sbb
push
xchg
bound
test
pop
test
cwtl
adc
and
into
pop
mov
mov
sbb
or
mov
mov
add
stc
out
aaa
adc
mov
mov
adc
stos
fisttpll
mov
sarb
adc
into
fcompl
jge
xlat
push
or
xchg
mov
cmp
lcall
cltd
sbb
sbb
adc
xor
shlb
mov
xor
cmp
push
les
push
rdtsc
mov
stc
xchg
movsb
je
into
aaa
cmpsb
orb
and
mov
mov
lcall
mov
adc
adc
adc
adc
add
sub
mov
or
sahf
mov
lods
inc
jle
mov
xchg
mov
or
push
pop
rcrl
cltd
add
push
xchg
adc
mov
jg
xchg
push
sqrtps
cmp
out
nop
or
cmpsb
mov
mov
cwtl
add
push
lods
leave
out
adc
sbb
pop
push
sti
test
cmp
clc
mov
data16
mov
shlb
popf
adc
lret
inc
mov
lret
sbb
repz
xchg
mov
in
mov
test
in
push
call
push
pop
mov
sbb
push
mov
sub
xchg
xor
xor
test
xchg
add
pop
and
mov
fisttps
dec
fwait
in
xor
sbb
or
adc
inc
pop
bound
movl
mov
addr16
jg
pandn
sbb
pop
cmp
jb
call
mov
mov
insl
insl
mov
cwtl
xor
sbb
loop
or
je
push
mov
or
sbb
lcall
xchg
mov
fbstp
mov
add
pushf
mov
xchg
mov
adc
mov
add
jbe
and
or
ds
mov
repz
loopne
mov
aas
aas
or
xor
cwtl
sub
sub
and
jno
sbb
add
insl
cmp
fldenv
mov
sub
mov
cmp
mov
imul
sbb
sub
sbb
mov
xor
mov
mov
jle
and
push
xchg
and
ret
cmp
mov
sbb
and
xor
add
lcall
or
popf
std
fcoms
test
es
sbb
lock
mov
mov
jge
sub
fiaddl
pusha
mov
ud2
xchg
mov
xchg
sbb
mov
push
mov
ds
nop
mov
lret
xchg
adc
adc
js
adcl
jbe
xchg
lcall
mov
pop
xor
cmpsb
loope
cmp
or
fwait
push
add
arpl
je
rclb
mov
test
jbe
jb
mov
xor
xchg
adc
or
movsb
and
pop
pop
inc
mov
sub
cwtl
and
sbb
mov
fisubs
or
mov
clc
mov
mov
adc
ret
jle
mov
mov
es
gs
int
or
into
mov
mov
dec
and
sub
sti
mov
push
and
pop
adc
and
sbb
lods
adc
mov
ds
or
mov
xchg
xchg
mov
push
sbb
and
insb
cwtl
sub
mov
lret
fimuls
add
out
int3
cmp
mov
push
pop
in
cmpsl
fisubrl
cmp
dec
mov
xor
add
nop
fnstsw
enter
pop
movsl
pop
and
mov
mov
cmp
mov
ljmp
test
sysret
daa
adc
lcall
jne
imul
add
or
pop
mov
sbb
push
stos
xchg
xchg
pop
and
xchg
pop
pop
and
lods
mov
adc
nop
inc
cltd
dec
mov
xchg
daa
std
mov
mov
lods
push
leave
pop
pop
mov
daa
add
pop
dec
jne
in
call
add
mov
mov
sbb
xchg
addr16
jne
cltd
xchg
add
les
or
outsb
add
outsb
out
xchg
adc
aaa
aas
and
xchg
or
inc
sbb
sbb
adc
cmpsl
sub
mov
xchg
mov
push
mov
insb
mov
cmp
and
pop
mov
adc
int
sub
pop
and
stc
pop
movb
pop
sbb
mov
sahf
leave
xchg
or
imul
dec
jg
mov
mov
test
nop
pop
std
cmpsl
mov
or
mov
dec
les
aaa
rcrl
lods
cwtl
sahf
add
fistps
push
outsl
jno
dec
movsl
sub
fwait
imul
xchg
jg
or
cmc
rcrl
pop
movsl
and
jb
jbe
hlt
add
or
test
or
sahf
inc
adc
add
pop
lahf
out
sbb
sub
frstor
pop
data16
mov
fldl
je
add
daa
sub
in
adc
add
sub
andb
stos
adc
sbb
lcall
movsb
cltd
mov
xchg
sbb
cmp
mov
aaa
orl
dec
rcll
lea
jb
popa
shlb
std
push
push
pop
jmp
cld
fildll
test
push
pushf
arpl
lcall
stc
hlt
push
or
stos
mov
fstp
xor
sub
inc
xor
or
sbb
pop
mov
xor
lcall
pop
pop
movsl
push
or
dec
xchg
bound
sbb
adc
movsl
xchg
cmpb
add
sbb
fstpl
lret
or
mov
dec
sub
mov
mov
cmc
xchg
js
mov
mov
and
push
cmc
stos
mov
cmpsb
or
pop
rcr
mov
bound
jb
scas
dec
sbb
scas
mov
sbb
sub
pop
xor
enter
cmpsl
cwtl
sbb
push
nop
mov
lds
fstps
lcall
jns
fwait
xchg
sbb
sbb
pop
mov
mov
cmp
test
stos
add
addb
jne
pop
mov
sete
jl
sbb
mov
mov
add
daa
test
push
sub
dec
adc
rcll
stos
and
movb
sbb
pop
and
or
push
jle
fwait
cwtl
lahf
mov
nop
mov
sbb
rorb
loopne
jg
and
xchg
sbb
push
or
stos
jnp
cmc
mov
ret
or
pop
iret
mov
adc
sub
mov
add
cli
xor
push
sbb
push
push
rorl
add
icebp
push
nop
jbe
and
sub
adc
adc
adcb
fcoms
and
js
sbb
daa
cwtl
mov
mov
mov
pop
adc
jge
lods
adc
movsl
nop
sub
adcl
aaa
sahf
stos
mov
jmp
test
test
sbbb
xchg
add
std
adc
push
xchg
sbb
push
andb
andb
movsl
test
xchg
cmp
jo
nop
cmpsb
pop
sub
movsl
add
mov
adc
push
sbb
sub
adc
cmpsl
std
xor
mov
push
cli
movsl
aam
push
mov
xcrypt-cfb
cmpsl
and
sbbb
add
mov
mov
xchg
sahf
roll
and
jbe
dec
mov
push
or
mov
and
rclb
mov
lods
push
sub
add
es
push
mov
and
fistl
dec
xor
xor
mov
dec
movsl
push
bound
cld
js
shl
sbb
cmp
aad
push
or
mov
aam
lods
into
or
cmp
xchg
sbb
add
or
push
ds
adc
cltd
jbe
outsl
imul
mov
sub
dec
testl
and
adc
add
stos
mov
xchg
and
test
movaps
imul
push
ror
mov
mov
cmp
adc
mov
nop
inc
popf
out
push
cmp
sbb
movsb
popl
or
adc
xchg
adc
inc
sbb
and
xchg
mov
xchg
push
cmc
xchg
and
pop
cmova
aas
les
sbb
mov
std
mov
and
adc
sahf
outsb
rolb
je
mov
jne
adc
or
pop
or
inc
or
jne
cld
test
push
mov
pop
nop
fwait
adc
mov
add
adc
ret
mov
xor
or
test
rorb
cmpsb
xchg
or
mov
cmp
adc
or
sbb
mov
jmp
push
pop
rorb
mov
add
push
andl
sbb
xchg
ljmp
mov
inc
push
outsw
popf
sbb
andb
cld
cmpsl
mov
jb
jb
xor
lcall
dec
movsl
push
cmp
push
aam
in
ficompl
inc
sub
and
cmp
orb
or
xchg
loope,pn
xchg
daa
dec
inc
jecxz
imul
or
sbb
cmpsb
mov
aam
pushf
adc
mov
fsubp
or
push
or
add
bound
or
addl
or
inc
and
mov
lahf
into
bound
lcall
jp
add
mov
pop
sbb
push
fwait
subb
xchg
movsb
mov
xchg
lds
inc
jg
mov
or
jl
or
adc
cmpsb
daa
mov
pop
call
adc
mov
movsl
sbbb
cmpsb
mov
and
jge
pop
stc
in
add
sub
sbb
mov
outsl
adc
mov
es
iret
fildl
add
aaa
daa
mov
test
fwait
xchg
xchg
rorl
sbb
lea
insb
js
xchg
adc
pop
jbe
add
add
adc
cwtl
or
add
clc
pop
fwait
add
fucomip
add
mov
sbb
aaa
sbb
and
mov
sahf
shl
fwait
jle
lcall
push
mov
jno
aaa
testb
xchg
sti
mov
out
or
mov
scas
push
pop
mov
push
popf
or
test
xor
stos
sbb
xchg
push
daa
addl
inc
adc
mov
and
adc
xchg
jae
les
jg
mov
adc
mov
into
popf
push
xor
jne
xor
push
iret
inc
adc
cwtl
add
jle
test
and
push
xchg
mov
jge
movsb
call
sub
enter
vmwrite
je
add
pop
push
orl
add
pop
pop
sbbb
or
movups
jg
xchg
mov
mov
push
lret
and
ret
pushl
inc
nop
es
sahf
mov
std
mov
inc
fstp
je
or
adc
inc
pop
xchg
push
daa
or
and
xor
add
mov
push
cwtl
add
ljmp
add
repz
add
outsb
fisttps
pop
adc
and
stos
cmpsb
jo
fbld
cwtl
add
aam
lods
xchg
js
inc
xor
mov
ffree
enter
incl
lock
sbbl
pop
sbb
ret
call
xchg
sbb
or
sbb
insl
jmp
dec
xorb
rclb
sbb
pmulhw
xchg
push
aam
setnp
sahf
inc
lahf
or
das
mov
test
mov
sbb
dec
mov
int3
loopne
aas
rcll
xchg
adc
bound
lea
mov
or
xchg
nop
cwtl
aaa
int
adc
mov
jle
mov
pop
popl
xchg
add
mov
sahf
pop
mov
push
mov
pushf
adc
inc
xor
mov
out
xchg
xchg
sub
pop
sahf
cwtl
es
fmul
sbb
outsb
daa
adc
fisttps
push
jae
test
int3
mov
xor
and
sbb
cmpsl
jb
sub
movq
push
adc
shlb
daa
sub
sbb
aaa
and
imul
add
add
pushf
adc
add
mov
aam
xor
sbb
add
movsl
cmpsl
pop
mov
push
fbstp
pop
xchg
aaa
in
scas
adc
lahf
push
enter
cltd
cmpsl
or
jle
mov
xchg
mov
add
sbb
nop
and
inc
adc
es
pop
cmc
pop
dec
inc
push
mov
setle
pop
into
daa
bound
cmpsl
aaa
inc
push
mov
movsl
xchg
pop
stc
add
mov
out
cmp
mov
xor
xor
or
lcall
mov
mov
dec
add
mov
sbb
mov
adc
ficomps
and
paddq
test
xchg
mov
or
mov
or
mov
or
pop
fs
out
and
xor
pop
or
push
jno
cmp
add
pushf
or
or
fisttps
mov
sbb
fucomip
mov
add
mov
jae
xchg
adc
fiadds
mov
mov
pop
dec
lods
mov
adc
nop
sbb
xchg
popa
cmpsb
add
dec
push
nop
push
xor
sbb
pop
mov
and
lcall
je
or
xor
push
pop
jecxz
loope
stos
sti
mov
mov
dec
stos
pushl
icebp
aas
xor
aaa
ds
mov
mov
xchg
movsb
mov
mov
lea
std
ljmp
jne
pop
mov
sub
xchg
dec
xchg
jb
adc
dec
sahf
int3
or
fwait
adc
jle
gs
jo
pop
push
out
mov
adc
inc
add
and
lods
cmpsb
sbb
mov
or
mov
in
popf
pop
push
lcall
bound
mov
aas
insl
pop
add
nop
out
movsb
es
imul
in
sub
sub
data16
xchg
jbe
adc
jmp
ja
mov
je
popf
pop
pushf
setp
xchg
rclb
mov
syscall
mov
add
push
je
lcall
cmpsl
pop
enter
adc
cltd
push
movsl
nop
daa
jmp
mov
mov
add
jnp
adc
mov
stos
stc
xor
es
das
jns
sahf
cli
mov
lock
mov
outsl
movsb
fcom
repz
ja
arpl
dec
loope
jp
jnp
mov
jecxz
inc
cmpsb
mov
xchg
xchg
xchg
mov
pushf
xorb
jle
pop
xchg
push
add
inc
in
cwtl
cmpsl
or
lods
aam
rcrb
jge,pn
inc
push
mov
pop
push
mov
cmp
data16
adc
inc
or
push
adc
xlat
dec
lods
in
gs
mov
test
pop
adc
dec
inc
jg
mov
cmp
dec
add
add
xchg
mov
lahf
push
add
xchg
mov
insl
xor
pushf
je
popf
in
cmc
mov
sub
mov
xor
daa
push
ss
hlt
fistpl
or
mov
sbb
int
pop
jge
dec
sub
cltd
ror
xor
cmpsb
es
in
mov
mov
fsts
dec
fadds
mov
pop
sub
js
and
mov
inc
inc
xchg
mov
mov
xchg
add
daa
xchg
jno
pop
je
and
push
dec
mov
ret
push
push
lahf
or
push
sbb
mov
lahf
sub
movsb
imul
adc
lea
xchg
push
add
stos
lods
push
xor
lods
xchg
out
adc
das
xchg
jge
outsl
je
cmc
sbb
adc
sbb
mov
arpl
fsts
sahf
push
push
and
out
sbb
aad
enter
sbb
enter
jae
dec
mov
adc
lret
lret
call
je
cmp
and
pop
pop
out
sbb
pop
icebp
stos
cmpsl
out
push
clc
dec
pushf
je
xchg
dec
ja
xorl
clc
jb
jno
fdivs
out
sbb
mov
xor
add
and
mov
add
add
add
call
hlt
dec
and
pop
jb
inc
mov
call
mov
je
push
clc
pop
aaa
pushf
xchg
js
rolb
je
ret
pop
imul
adc
jle
add
cmp
dec
cld
sti
jo
cld
pop
mov
mov
cld
add
push
and
or
adc
test
xor
pop
insb
repnz
ficompl
repnz
test
dec
je
movsb
pop
sahf
xchg
lds
push
sbb
popf
pushf
jg
mov
pop
sahf
mov
jg
add
add
or
shll
roll
loop
add
pop
xchg
sbb
orl
or
je
icebp
jg
mov
je
lahf
stos
popa
je
push
sbb
xchg
or
pop
arpl
testb
je
insb
sbb
mov
and
xchg
pop
xchg
data16
shll
xchg
and
gs
jge
and
sbb
push
jecxz
and
lock
or
je
or
je
sub
jo
jnp
sub
subl
sbb
movsb
or
xchg
sbb
adc
xor
add
sub
xchg
sub
push
add
xchg
mov
lret
stos
pop
mov
mov
jmp
or
daa
cmpsb
add
push
xchg
inc
add
test
adc
jle
xchg
lahf
sbb
adcb
out
and
mov
daa
or
pop
test
inc
add
test
and
adc
outsl
fstl
mov
pop
loop
pushf
inc
mov
adc
adc
inc
mov
sbb
or
pop
mov
or
ds
and
cltd
ret
cs
or
leave
fwait
jo
add
mov
into
cs
daa
mov
rclb
or
cmp
cmpb
pushf
cwtl
cmpsl
or
sbb
test
xor
xor
sbb
pop
xchg
fadds
and
pop
mov
daa
sbb
and
xor
test
sub
adc
adc
mov
stos
and
lret
or
xor
lods
pusha
xor
testl
push
sbb
push
sahf
je
cli
fadds
adc
arpl
xchg
jge
test
test
sub
mov
mov
jae
je
or
mov
push
push
into
pop
stc
imul
pop
mov
push
pop
mov
test
cld
jmp
in
sbb
movsl
sub
sub
xchg
adc
je
xor
sbb
sbb
inc
scas
fwait
scas
scas
cmp
xchg
loopne
imul
fwait
int
stc
add
jg
mov
cltd
push
sub
cwtl
xchg
in
sbb
fildl
and
and
push
or
mov
inc
mov
sti
leave
or
adc
sahf
and
subl
imul
cmc
mov
sub
adc
push
gs
xchg
insl
push
hlt
daa
xchg
jno
lock
inc
ret
test
adc
push
in
inc
sbb
movhlps
test
xchg
in
mov
in
add
sbb
je
bound
xor
icebp
bound
jbe
xchg
jmp
nop
sub
adc
jnp
sbb
fidivrl
imul
xchg
popa
aaa
push
lods
add
je
xchg
mov
adc
lods
sbb
push
xchg
add
jae
jno
stos
stc
sub
push
ret
inc
and
ss
inc
je
xor
or
lret
xor
mull
add
or
add
bnd
sbb
sub
mov
push
sub
add
jge
sbb
ja
pop
je
arpl
adc
xchg
out
sbb
pushf
add
and
mov
cmpsb
sbb
je
mov
push
pop
xchg
xchg
mov
mov
fwait
add
jge
pop
push
cltd
stos
ljmp
bswap
repz
std
push
nop
cmpsl
movsl
sub
lcall
dec
pushf
mov
es
mov
xchg
adc
or
nopl
xchg
cmpsl
jmp
push
setno
mov
xchg
cld
int
scas
test
adc
inc
or
imul
pop
inc
pop
dec
mov
cmpsb
adc
push
pop
sub
adc
dec
or
dec
movhps
adc
push
pop
xchg
insl
test
repz
aaa
and
and
jns
mov
addb
or
mov
push
out
mov
int3
cli
sub
sahf
scas
and
or
outsl
mov
adc
sti
sbb
loopne
aaa
jb
adc
push
xchg
or
adc
push
sbb
xchg
pop
add
out
add
cmpsl
fwait
mov
push
pop
bound
sbb
stos
push
lahf
xor
push
fisubl
inc
jnp
loop
lahf
xchg
inc
cltd
pushf
cwtl
and
dec
sub
add
leave
mov
fstl
dec
mov
cltd
sbb
xor
mov
xchg
jbe
sbb
xchg
mov
nop
and
adc
xor
rclb
lcall
add
jmp
cmpsb
push
sub
add
pushf
sbb
mov
mov
mov
test
ret
es
adc
or
inc
mov
mov
pop
mov
xchg
add
jbe
sbbl
push
mov
test
mov
stos
pcmpeqb
in
adcb
incl
mov
mov
test
maskmovq
testl
sub
jbe
sbb
lahf
xchg
aas
fs
push
or
sbb
inc
and
sbb
and
adcl
xchg
aas
mov
ja
pop
xchg
add
cmp
sbb
iret
or
or
cmpsl
mov
inc
or
sbb
fldenv
xchg
add
fstps
lcall
cmp
mov
sub
adc
mov
xor
mov
addb
adc
cwtl
sbb
add
sub
mov
je
bound
test
cmpsb
sahf
outsb
movups
sbb
cltd
lahf
xchg
sbb
jns
add
xor
nop
mov
loope
outsb
ds
adc
sub
or
lods
mov
sbb
xchg
cmpsl
test
orl
xchg
xchg
outsl
add
mov
xchg
xor
adc
adc
setbe
test
add
xchg
es
xchg
pop
imul
or
lock
xchg
mov
js
mov
inc
fwait
adc
test
in
or
sub
mov
push
popl
jae
mov
or
or
sbb
cmpsb
sbb
sbb
and
inc
add
add
xchg
fcomps
cltd
in
xchg
inc
jno
fistpll
mov
xchg
and
fnstsw
stos
adc
daa
nop
adc
add
adc
push
test
sbb
mov
scas
and
sub
fistpl
xor
or
dec
sbb
sahf
in
xchg
je
xchg
or
mov
je
inc
cmp
mov
dec
jno
daa
sbb
push
inc
sbb
cmpsb
mov
or
or
or
outsb
es
xchg
pop
xor
xchg
lds
adc
insb
dec
movsl
mov
call
sbb
mov
rolb
es
movsl
pop
or
xchg
fwait
inc
xchg
cmp
add
sbb
cmp
cmpsl
addb
xor
cli
mov
or
xchg
xchg
inc
fwait
mov
jge
mov
push
cmp
rorb
xchg
or
sbbl
std
jne
aad
in
es
add
adc
cmp
test
outsb
rcll
and
mov
jne
xchg
mov
pop
lds
mov
xor
movsl
and
es
fwait
sbb
icebp
bound
sub
stos
mov
lods
adc
adc
inc
or
pop
mov
mov
inc
popf
xchg
jne
add
bound
pop
xchg
leave
cmpsb
jge
in
iret
addr16
rorl
fildll
push
cwtl
dec
ficoms
mov
pop
lcall
and
xchg
and
or
dec
cwtl
mov
sbb
lahf
into
rcrb
nop
and
adc
mov
push
jns
sub
xor
push
lcall
movsl
in
add
mov
test
cmp
lret
jb
mov
sahf
sbb
fimuls
lods
xor
add
xchg
stos
xor
sahf
push
jg
xchg
lahf
in
roll
sbb
out
sbb
pop
adc
fistpll
push
sbb
jmp
mov
mov
das
pop
pop
aam
stos
subb
inc
jne,pn
push
stos
enter
add
mov
mov
add
xchg
or
jecxz
rclb
pushf
xchg
stos
pop
jg
sub
cmp
xor
punpcklbw
xlat
test
aas
dec
push
cltd
pop
or
sti
pop
adc
mov
xchg
cmpsl
pop
xor
pop
pushf
xor
xor
mov
cmpsb
outsb
xchg
pushf
mov
adc
jae
or
xchg
pushf
stc
aas
jg
sbb
lds
mov
pop
pop
xchg
push
cmpsl
adc
or
test
mov
sbb
fwait
es
sub
sub
ret
nop
lsl
lahf
add
mov
mov
adc
mov
mov
mov
push
inc
cmpsl
cmpsb
sub
movsb
sbb
pop
add
jne
movsb
pop
sub
sbb
push
sbb
mov
loopne
fcoml
pop
or
mov
arpl
setl
pop
adc
xchg
mov
push
jp
xchg
jb
sub
mov
xchg
adc
mov
ficomps
sub
sbb
pop
lea
icebp
add
and
add
pop
pushf
push
sbb
push
jbe
out
mov
cmpsb
xchg
mov
add
dec
andb
je
cs
xchg
add
pusha
orl
or
or
xor
cs
mov
add
or
mov
jb
jbe
outsb
in
mov
lcall
or
inc
daa
mov
adc
insb
je
rcll
cmp
xchg
and
and
sbb
jl
add
fistl
mov
or
aaa
addb
and
fwait
mov
xchg
pop
sub
cmp
pushf
push
mov
lods
add
lahf
lods
sub
inc
or
push
outsb
cwtl
fwait
cltd
jb
iret
test
or
add
movsl
sub
xchg
into
xor
adc
pop
mov
and
dec
add
test
jecxz
sbb
cwtl
xchg
sub
lret
cmp
mov
and
xorb
add
mov
mov
sbb
out
jae
push
pop
push
fcmovu
pop
fxam
clc
adc
xchg
mov
xchg
jp
push
adc
add
xor
inc
lahf
mov
movsb
sbb
stos
fs
pop
cmp
adc
xor
add
dec
push
jp
push
sub
lcall
and
popf
mov
push
test
mov
mov
pop
and
xchg
int
mov
adc
in
or
cmp
push
mov
xor
seto
ret
scas
push
fcoms
or
xchg
aas
jae
xchg
adc
pop
loopne
ds
and
xchg
pop
stos
push
imul
xchg
adc
movsl
test
add
xor
popf
inc
int3
lret
loop
iret
add
test
or
xchg
es
repnz
sbb
lahf
sbb
in
xchg
push
mov
sub
gs
push
xchg
jl
sbb
or
pop
cltd
loopne
xchg
mov
nop
and
lock
test
adc
mov
or
std
mov
sahf
aam
jns
cli
inc
cli
outsl
cwtl
jnp
mov
andb
popf
mov
mov
cld
cs
outsl
outsb
mov
cmpsb
scas
jp
xchg
jno
or
adc
inc
sub
mov
push
mov
mov
negb
mov
mov
test
add
pop
sub
dec
movsl
lahf
push
popl
divb
xor
jae
test
out
push
xchg
mov
adc
mov
lahf
mov
lcall
pop
stos
mov
cwtl
or
mov
xchg
movsl
adc
add
sbb
in
inc
std
xor
sbb
adc
jle
xchg
out
mov
fldt
or
and
pop
cli
mov
or
popa
es
stos
dec
xchg
fdivrs
xchg
lcall
or
orb
sub
mov
cs
dec
packuswb
test
pop
repnz
adc
add
hlt
jnp
subb
push
add
cmpsb
push
sahf
lock
frstor
iret
pop
adc
add
or
shrb
push
sbb
imul
cltd
sbb
cli
mov
dec
push
nop
or
jo
movsl
xchg
mov
xchg
dec
insl
sbb
in
add
or
mov
movsl
sbb
mov
mov
jmp
adcl
sbb
pop
sub
or
repnz
mov
mov
mov
mov
cltd
lahf
stos
and
rcr
mov
lcall
pop
push
hlt
xchg
and
inc
mov
push
cltd
cmpsl
je
cwtl
jmp
jne
inc
inc
test
sbbl
mov
cs
push
push
mov
stos
sbb
hlt
fwait
test
sub
pushf
in
mov
add
mov
test
loopne
cs
xor
orb
adc
add
mov
sub
add
lret
inc
jecxz
mov
ret
dec
and
aaa
mov
cmpl
mov
push
mov
jno
xor
jbe
jg
push
push
sbb
pop
insb
cltd
test
pop
add
sahf
dec
sbb
mov
lods
push
push
sbb
and
xchg
movl
xchg
mov
or
lcall
pop
push
mulb
xorb
xchg
fmull
lret
aas
dec
pop
and
adc
into
sbbl
mov
ret
cmp
and
andb
testb
xchg
inc
push
sub
pop
or
fldenv
sbb
lret
cs
adc
icebp
push
loopne
cltd
or
and
add
pop
sub
adc
sub
pushf
lret
jge
xchg
or
mov
jo
sub
sbb
and
cld
idivl
sub
js
or
mov
enter
pop
std
mov
jbe
add
jb
sub
xchg
mov
or
sbb
pop
and
pushf
pop
stos
cmp
and
or
sub
mov
adc
and
sbb
pushf
push
sbb
xor
lret
cmpsl
lret
xchg
sbb
or
xchg
lea
insl
adc
add
and
imul
pop
jb
pop
lds
dec
test
mov
aas
cmpsl
xchg
fisubrs
cmpsb
mov
call
subb
sahf
mov
dec
xchg
sbb
push
mov
push
cs
test
add
lods
mov
adcl
xor
pop
mov
jo
push
mov
hlt
aaa
out
xor
sbb
test
inc
mov
aas
xchg
pushf
wbinvd
test
outsb
sub
xchg
stc
and
test
decb
fwait
sub
cltd
pop
xchg
mov
ret
fstps
lods
push
mov
or
lods
lahf
aam
xor
pop
jl
iret
jecxz
pop
sub
rcll
push
mov
xor
xlat
and
lret
adc
lock
sub
aad
xor
adc
outsb
test
jnp
xchg
int
pop
inc
pop
jg
xor
push
int3
sub
mov
data16
and
in
sub
in
adc
cmp
add
cmpsb
mov
xor
mov
lret
lods
jae
mov
aaa
add
sahf
adc
xor
jge
jp
sub
adc
cmpsb
xchg
add
sub
mov
mov
xor
pusha
sub
mov
inc
cltd
or
sub
mov
adc
data16
cmpl
mov
loopne
pop
pop
inc
outsb
dec
adc
or
lcall
sub
inc
sbb
mov
fstps
sbb
mov
mov
cwtl
jg
or
hlt
adc
mov
jmp
cmpsb
add
and
lcall
push
es
adc
mov
ds
xchg
jne
cmp
cwtl
pop
mov
adc
and
arpl
sbb
movsl
mov
mov
adc
ljmp
insb
mov
sub
xchg
cmp
sbb
push
mov
fstp
adcb
or
mov
adc
cmp
sti
mov
and
xchg
andl
push
mov
xchg
xchg
xchg
and
rcr
mov
and
mov
xchg
and
dec
xor
pop
andb
out
or
xor
adc
stc
cmpsl
add
arpl
mov
sti
sub
adc
add
mov
add
inc
addb
fldenv
shlb
cwtl
mov
add
mov
cmpb
xchg
mov
push
mov
movsl
mov
add
pop
and
pushf
cwtl
cmp
lcall
push
push
nop
or
bound
add
or
adc
sub
mov
adc
mov
mov
cltd
std
pusha
or
test
mov
xor
pop
and
je
popf
mov
inc
test
addr16
add
pop
xchg
pop
dec
push
test
mov
push
nop
xor
dec
and
decb
sub
adc
adc
jne
and
stc
sahf
aad
cmp
push
mov
popl
xchg
pop
mov
adc
sub
pop
jle
lcall
orb
insb
pop
dec
mov
add
xchg
xchg
pop
jne
sbb
adc
mov
je
stc
xchg
lahf
int3
adc
add
sbb
adc
jp
or
insb
out
stc
adc
cmpsl
popl
adc
nop
mov
ret
push
mov
imul
xchg
inc
mov
dec
mov
push
test
mov
cmp
mov
or
bound
jb
and
xchg
cmpsb
mov
jno
movsl
xchg
jb
mov
dec
sbb
dec
and
add
and
inc
pop
call
xchg
clc
aam
mov
es
in
out
into
xchg
adc
mov
sbb
int
cltd
sbb
cwtl
rorb
cli
mov
ret
sbb
inc
xchg
scas
cmp
cmpsb
orl
add
and
sbb
test
les
sbb
xchg
adc
inc
mov
imul
jg
or
data16
sub
js
xchg
jmp
xchg
push
test
adc
push
bound
inc
add
mov
jl
or
xchg
adc
dec
mov
scas
dec
inc
mov
or
orl
cmpsl
jb
sub
xchg
mov
pop
test
mov
or
xchg
add
and
push
sbb
stos
cltd
cmpsb
add
mov
pop
stos
loopne
add
mov
jg
adc
jg
mov
sbb
xor
adc
dec
mov
daa
push
adc
and
cs
mov
bound
and
sbb
daa
jbe
add
add
inc
lcall
out
shlb
cmc
jb
lods
divb
or
sbb
add
in
mov
cmp
xchg
jbe
add
xor
push
pushf
mov
dec
inc
orb
sbb
add
push
stos
sbb
data16
movsl
and
das
mov
add
sub
cmpsb
in
orb
je
insb
clc
jle
cmp
add
in
push
mov
and
daa
xor
popa
adc
adc
inc
pcmpeqd
xor
sub
shl
aas
int
xchg
pop
mov
push
pop
or
sbb
pushl
js
popf
insb
cmpsl
sbb
mov
push
mov
or
push
jp
xchg
outsb
dec
sahf
mov
cmp
iret
sbb
xor
add
gs
and
jae
pop
sbb
orl
lret
call
dec
gs
xor
jg
nop
add
adc
and
test
mov
outsl
xor
push
stos
orl
adc
mov
mov
mov
pop
mov
add
imul
daa
add
add
ret
jle
or
xchg
cmovle
shll
mov
push
aaa
adc
outsl
mov
idivl
push
lahf
and
pop
leave
push
inc
cmpsl
nop
sbb
pop
push
xchg
dec
lods
and
lods
test
xor
adc
cmpsb
mov
and
or
or
sbb
xchg
movsl
sub
cmp
adc
rclb
adc
and
call
mov
and
outsl
pushf
jb
sbb
insl
lods
mov
or
sub
sub
jbe
int3
push
cmpsl
out
lods
dec
jl
push
mov
xchg
dec
and
outsl
lods
cwtl
paddusw
orb
push
and
pushf
es
nop
lods
gs
or
or
sbbl
jbe
sbb
test
addb
sbb
xchg
xchg
les
sbb
rolb
hlt
repz
sbb
xlat
mov
call
inc
add
and
stos
inc
adcl
sbb
or
out
je
mov
mov
dec
loope
sub
or
adc
adc
sub
ljmp
das
mov
je
xor
shrl
jae
cmp
xchg
imul
adc
int
adc
jno
insb
mov
xor
ret
movsl
xchg
sbb
sub
pop
xor
sbb
push
fbstp
mov
adc
sbb
pop
push
popl
fistps
pushf
and
test
int3
sub
or
mov
push
cmpsb
je
push
es
popw
jbe
sbb
inc
and
test
xor
insb
dec
mov
adc
jns
jbe
or
les
add
cmpsl
xchg
in
push
fisubl
cmpsb
imul
adc
or
je
es
lock
or
pusha
test
dec
mov
add
lds
mov
or
push
jnp
push
pushf
fs
sub
or
mov
fmulp
sub
sub
fstps
test
testl
pushf
jae
std
adc
lods
lahf
mov
gs
les
add
mov
lds
jno
xchg
popw
jnp
pop
dec
sub
mov
xchg
pop
pop
cmp
lcall
in
pop
dec
sub
and
andl
mov
es
pop
jbe
adc
nopl
cmp
sub
sub
lods
js,pt
push
and
daa
cmpsb
orl
jae
push
inc
adc
mov
mov
or
add
imul
cmpsb
ja
outsl
cmpb
sbb
adc
add
jg
add
fstpl
out
sbbl
cli
add
cmp
lahf
stos
sbb
xchg
xchg
add
xchg
daa
dec
and
ljmp
dec
jne
dec
leave
sbb
xor
daa
mov
xor
mov
repz
aam
xchg
sbb
jbe
cmp
cmpsb
pushf
int
and
shll
pop
jb
movsl
add
mov
fs
mov
mov
stos
movsb
xchg
fs
sub
sub
in
cmp
pop
xor
xchg
mov
cmpsb
jbe
leave
push
jp
test
lea
jnp
les
aas
daa
cwtl
stos
add
mov
add
adcb
popf
or
push
mov
xchg
cld
das
aad
push
fsts
xchg
mov
jno
sub
cmp
sbb
sub
daa
in
ljmp
adc
call
mov
insl
ja
sub
or
cmc
sub
mov
add
add
outsl
cli
sub
pusha
sbb
cmc
mov
je
pop
pop
mov
cmpsl
in
add
cs
mov
sbb
vpcmpeqb
jmp
js
movsl
fwait
push
push
inc
test
mov
adc
pusha
dec
negb
aaa
push
cmpsl
sbbb
idivb
or
xchg
dec
cwtl
fwait
mov
mov
xchg
je
fwait
sub
lds
adcb
xchg
xchg
mov
dec
jmp
xchg
add
cld
mov
loopne
repz
pop
jb
aaa
add
xchg
shlb
or
fwait
rorb
cltd
lods
mov
and
push
loope
adc
movsl
or
add
ja
mov
jno
bound
sbb
loopne
testb
push
test
mov
cmc
mov
mov
cli
sub
mov
mov
jle
mov
es
adc
sbb
cmpsl
dec
clc
lcall
aam
push
insb
imul
xchg
fmulp
imul
cmpsb
cltd
in
inc
cwtl
leave
and
dec
je
xchg
sti
std
ja
aaa
push
sub
mov
sub
or
je
je
mov
nop
addb
sub
adc
push
pop
sbb
je
lahf
sbb
pop
sub
push
push
inc
mov
popa
je
cmc
push
addb
clc
dec
je
notl
adc
test
xchg
test
mov
xchg
mov
flds
or
pop
or
dec
bound
lcall
bts
decl
fmull
push
mov
add
and
bound
fists
sar
adc
fwait
pushf
inc
jbe
xor
adc
xor
sub
sbb
out
cmpsl
push
add
das
addb
xchg
sub
cmp
adc
into
mov
cltd
push
adc
test
mov
and
lahf
cmp
aas
cmp
fcmovne
xchg
test
sbb
lcall
push
adc
pop
adc
sbb
arpl
lods
sub
inc
nop
cltd
leave
mov
inc
xchg
pop
mov
enter
mov
je
xor
mov
adc
jo
mov
filds
xchg
mov
aam
inc
cmp
add
xchg
adc
add
pop
je
lret
imul
je
and
dec
mov
push
outsb
lret
and
add
sbbl
add
xchg
pop
mov
jno
dec
adc
mov
or
dec
js
mov
sbb
lods
adc
mov
jne
push
or
filds
scas
je
insb
int
sbb
jne
and
add
aas
repnz
xchg
gs
frstor
fidivrl
add
je
gs
and
xlat
je
inc
jo
sub
xchg
scas
sub
je
push
jbe
loop
je
cwtl
sbb
pop
lds
fucomi
and
mov
xchg
xor
adc
fimull
test
add
and
adc
pop
fcoms
mov
pushf
lahf
cmp
add
xchg
enter
mov
dec
xchg
lcall
jge
dec
adc
ret
ja
std
pop
iret
sbb
sbb
sbb
repz
daa
cmp
xchg
arpl
cmp
xlat
push
push
sarl
loopne
inc
je
cmp
jb
and
std
sbb
daa
jmp
call
mov
mov
stos
es
sbb
dec
mov
adc
mov
pop
sbb
es
xchg
andb
sahf
cld
inc
daa
lcall
pop
mov
cmp
ldmxcsr
jl
je
add
adc
jno
std
cwtl
xor
cmp
mov
fwait
icebp
mov
or
add
xchg
lods
fcomi
fwait
xchg
mov
shll
or
les
push
in
add
pop
es
xchg
test
and
addl
fwait
cmpsb
and
xchg
adc
lahf
aas
push
mov
pop
inc
mov
enter
orb
xchg
sub
outsl
sub
pop
inc
sub
sbb
fwait
imul
je
add
mov
nop
stos
sbb
sbb
push
je
cmpsl
xchg
inc
sbb
aaa
sub
xlat
mov
jp
pop
sbb
cmpsb
bound
sbb
cmp
inc
cmp
xor
xchg
push
hlt
mov
cli
movsb
xchg
test
adc
push
pop
stos
xor
and
xchg
and
or
push
jmp
flds
cmpsl
cltd
in
push
dec
cmpsb
inc
sub
jb
push
mov
xchg
mov
pop
mov
in
push
ffreep
fldl
sbb
add
xchg
iret
mov
pop
movsl
xchg
xchg
inc
call
dec
xchg
int3
inc
pop
mov
dec
xchg
push
adc
daa
jbe
sbb
cs
inc
mov
adc
cmpsb
daa
dec
fisubrs
xchg
aaa
test
pop
push
sbb
mov
xchg
sahf
sbb
dec
mov
push
out
dec
mov
cmpsb
lret
pop
sbb
cmp
scas
mov
inc
push
or
adc
lret
mov
lahf
cmpsb
lcall
add
test
cwtl
lock
push
clc
call
in
leave
or
mov
mov
xchg
mov
xchg
dec
out
popf
lcall
loopne
ds
pop
xchg
mov
sbbl
xchg
lret
sbb
sub
je
fistpll
lds
mov
enter
pop
ficompl
mov
cli
ja
mov
ficompl
inc
mov
or
add
mov
into
sub
cltd
daa
inc
es
lods
setnp
pop
xchg
adcb
xchg
fs
xor
pop
cltd
adc
aas
leave
movsl
adc
fnstcw
jnp
lods
cltd
fs
mov
stos
mov
aas
data16
push
cmpsb
mov
xchg
cs
xchg
xor
add
data16
es
mov
or
scas
xchg
cli
je
cmpsl
sti
xlat
int
test
lcall
stc
adc
mov
lcall
adc
adcl
add
add
mov
adc
leave
popf
bound
add
int
adc
div
movsl
inc
test
jg
mov
xchg
push
sbb
call
adc
lcall
mov
and
lcall
bound
adc
inc
ds
adc
scas
push
mov
sbb
sub
add
stos
push
sbbw
and
mov
jle
adc
add
test
mov
mov
sbb
mov
test
pop
add
inc
sub
push
sub
xchg
mov
and
loop
mov
pop
repz
xchg
ds
xchg
jle
sub
dec
lret
xchg
jl
jnp
bound
mov
pop
xchg
adc
add
in
sub
stc
mov
mov
je
add
xchg
adc
sub
mov
mov
sub
xchg
pop
dec
or
xor
xchg
mov
add
mov
daa
mov
and
sti
pop
daa
pop
xor
mov
sub
adc
sub
and
add
insb
push
popa
cltd
movsl
inc
push
pop
ja
outsl
fists
push
xor
imul
pusha
pop
adc
mov
xchg
stos
xchg
mov
xchg
movsl
lods
leave
jle
sbb
test
or
sub
dec
in
aad
add
mov
mov
hlt
xor
mov
push
popa
sub
xchg
pop
cltd
rorl
pop
mov
inc
mov
pop
pusha
push
stc
rorb
sbb
repz
outsl
mov
bound
sahf
loope
jl
or
xchg
inc
pop
xchg
bound
xchg
rorl
dec
test
insb
sub
pushf
xchg
sbb
cmp
in
pop
inc
inc
or
cs
shlb
adc
pop
lahf
sbb
aas
xchg
aas
pop
sahf
xchg
test
mov
mov
dec
stos
cmpl
and
adc
mov
xchg
lret
pop
mov
and
mov
push
xor
mov
test
xor
fisubrl
aas
rclb
cmpsb
pop
push
pop
je
ret
push
xchg
xor
xchg
cltd
xchg
scas
xor
sbb
mov
inc
or
sbb
push
sbb
dec
mov
pop
movsl
mov
sbbb
cwtl
stc
xlat
shll
fimuls
pop
xor
sbb
jns
mov
add
pop
sbb
pop
aam
mov
mov
xchg
loopne
xchg
std
mov
xor
or
jb
incl
sub
xchg
or
ja
fwait
stos
cmpsl
jbe
data16
xchg
sbb
in
push
and
xor
dec
aas
add
push
int3
les
mov
cltd
add
mov
xchg
ja
fwait
cmp
mov
inc
xor
pop
lock
movsl
sbb
and
lret
adc
sbb
mov
sbb
fisttps
cmp
js
jg
sub
sbb
lods
mov
lods
add
xchg
jbe
and
sbb
nop
fwait
adc
xor
jno
mov
decb
cmpsl
xor
adcb
jge
jb
cli
inc
aas
cmp
and
jle
es
bound
cmp
add
dec
pop
jnp
movsl
cmp
adc
cmpsb
imulb
sub
mov
inc
cmp
sub
stos
loopne
into
in
repz
adc
or
mov
out
je
xrstor
rolb
scas
jecxz
push
ret
push
pop
test
dec
mov
add
movsl
add
and
mov
and
sti
jb
and
pop
dec
push
into
adc
add
enter
xchg
push
mov
pop
xchg
push
mov
and
mov
nop
mov
pop
adc
pop
xor
adc
gs
xchg
xor
in
clc
xor
or
xchg
add
dec
pop
mov
mov
outsl
daa
popl
pop
rorb
xchg
mov
cmpsl
cli
call
dec
rorb
xchg
lods
push
cltd
inc
imull
mov
aaa
fsubrp
sahf
push
lcall
mov
daa
sbb
adc
mov
lahf
xchg
lcall
push
sub
add
jle
mov
pop
sar
cmc
outsl
subl
xchg
or
sub
adc
sub
es
cmp
mov
js
pop
insl
cltd
push
sub
or
mov
data16
sbb
mov
fadds
xor
adcb
xchg
out
inc
ja
ret
lods
pop
push
adc
mov
mov
movhps
and
inc
or
pop
mov
adc
cmp
je
adc
xchg
aad
fildll
shlb
or
cmp
movsw
test
jbe
lods
add
add
xor
sbb
mov
mov
mov
sbb
xchg
add
call
mov
inc
sti
scas
pop
and
lahf
sub
mov
sbb
rcrl
andb
jb
pop
mov
or
or
mov
and
and
call
sahf
cltd
cmp
fwait
and
ja
pop
std
push
push
mov
mov
adc
xchg
cmpsl
sub
fwait
adc
sahf
sbb
test
adc
adc
stos
add
inc
test
sub
adc
add
push
sub
nop
fwait
dec
sbb
mov
xchg
ficoms
cmpsl
daa
adc
pushf
mov
pop
jnp
rep
mov
xchg
and
cmpsl
scas
pop
frstor
fildll
or
push
mov
pop
mov
xchg
popa
mov
int3
cmpsl
xchg
add
xchg
mov
cmpsb
insb
iret
rolb
jl
pop
inc
dec
lahf
jb
pop
ficoms
sahf
cmc
mov
lret
es
adc
dec
mov
mov
fwait
movsl
pop
fs
or
es
add
lahf
mulb
dec
sahf
rcrl
sbb
mov
lds
and
pop
xchg
aaa
add
enter
jbe
sbb
subl
add
cmp
pop
xchg
cmp
mov
sbb
or
call
insl
sub
fisubs
pushf
pop
lret
mov
clc
pop
arpl
adc
cmp
fwait
cwtl
ja
sbb
lahf
addb
sbb
bound
mov
gs
stc
stos
sbb
mov
xchg
daa
mov
adc
or
outsb
or
adc
xchg
mov
rolb
xor
sbbl
sub
fimuls
adc
das
in
sahf
bound
push
push
cmpb
dec
add
jae
out
adc
add
pcmpeqb
push
jnp
inc
ds
cmpsl
adc
test
xchg
adc
mov
adc
add
push
orb
ficoml
clc
jle
pop
and
push
xchg
negl
add
mov
adc
adc
or
cltd
add
rorb
cwtl
mov
jmp
push
pop
test
xchg
ja
jbe
jbe
and
mov
addb
pop
or
add
pop
jns
or
lcall
adc
adc
orl
xor
adc
dec
mov
sbb
and
das
lcall
and
add
movsl
xor
jecxz
push
fs
jbe
sub
mov
sbb
xor
lods
lods
mov
nop
aas
andl
es
mov
movsl
adc
mov
xor
loopne
test
pop
ljmp
sbb
jge
sub
mov
mov
lods
ficomps
sbb
inc
enter
inc
mov
sbb
jg
and
mov
aad
mov
xchg
add
enter
xor
mov
jnp
sub
push
outsb
aaa
pushf
mov
xchg
adc
push
xor
mov
adc
push
and
push
fcmove
push
outsb
or
cmpsb
cmp
test
jg
bound
and
rolb
and
je
insl
mov
clc
jbe
mov
inc
mov
call
or
stos
and
jae
mov
insb
in
and
or
adc
and
nop
ja
cmpsl
sahf
lea
mov
test
lahf
jne
pop
in
pop
lock
sbb
sub
cs
add
or
aaa
jge
lahf
adc
sub
cmpsb
stos
add
inc
xchg
mov
mov
inc
mov
push
insb
in
mov
and
incl
and
inc
outsb
add
lret
xchg
stos
mov
or
jge
jbe
add
sbb
inc
lods
mov
jnp
add
js
push
push
clc
pop
add
mov
push
xor
in
sub
pop
mov
or
aaa
icebp
jae
fnsave
adc
lahf
xchg
jl
cltd
dec
lock
jp
mov
sbb
mov
or
roll
rclb
loop
add
dec
btrl
xchg
nop
incb
mov
nop
add
xchg
cltd
mov
pop
mov
xor
xor
cmpl
sbb
or
mov
push
xor
or
or
xchg
clc
mov
mov
stos
sub
cmp
or
push
enter
mov
ja
mov
adc
inc
sub
test
adc
mov
push
mov
sub
orb
lahf
test
inc
xor
sub
pop
andb
sbbb
std
movsb
or
mov
fcompl
jnp
add
sub
push
aaa
sbb
mov
lods
push
je
xchg
adc
mov
int
mov
pop
loop
sbb
cmp
push
orb
dec
pop
pop
and
mov
add
or
shlb
sahf
or
sub
push
xor
or
test
daa
bound
sbb
xor
insb
add
sahf
outsl
mov
fstl
popf
es
pop
mov
dec
pop
adc
sbb
cmp
mov
mov
sub
mov
xchg
shrb
mov
sbb
arpl
sub
inc
lock
adc
loop
popf
sbb
sub
sahf
dec
roll
nop
mov
aas
out
mov
adc
xor
pushf
jne
adc
adc
fstpl
pop
bound
fcmovne
adc
pop
xchg
sub
movsl
and
ficoms
cmpsb
dec
adc
mov
mov
add
and
cwtl
aad
xor
adc
pop
mov
cmpsb
or
or
or
out
dec
pop
test
iret
insl
pop
or
or
and
xchg
push
fmull
and
sbb
lea
lods
aas
pushf
test
and
or
cmp
ja
mov
or
xchg
lret
repz
pop
stos
es
sbb
dec
push
pop
and
in
call
jmp
sub
mov
cltd
adc
ret
sbb
jbe
xchg
add
mov
inc
cmovbe
movsl
repz
pop
xor
add
daa
mov
xchg
out
push
je
jge
test
pop
push
jb
or
inc
sbb
add
fwait
xchg
mov
sub
orl
nop
adc
sti
inc
xchg
adc
lea
cmpsb
xchg
mov
pop
or
loop
sbb
fcoms
pop
push
dec
xchg
adc
fs
dec
fwait
sub
xchg
stc
flds
ret
mov
and
fistl
push
cltd
stc
out
nop
sbb
xchg
outsb
jecxz
lret
fs
jo
add
pop
push
fbld
mov
sbb
scas
adc
mov
mov
jg
xchg
push
insl
or
push
mov
inc
std
jnp
and
cwtl
xchg
xchg
or
mov
mov
sbb
add
xor
lcall
xchg
jle
push
addb
and
mov
into
popa
push
movsb
push
ret
xchg
fwait
pushf
xchg
push
in
xchg
mov
inc
cmpsb
inc
sbb
cmp
imul
push
nop
fwait
sub
and
mov
add
adc
adc
mov
xchg
xchg
orb
pop
sub
orb
or
jbe
mov
xchg
xchg
int
sbb
adc
pop
push
add
mov
sbb
inc
cmpsb
jb
aaa
xchg
xor
dec
mov
adc
sbb
test
xchg
cmovg
sbb
dec
aas
pop
xchg
mov
add
adc
movsl
adc
adc
lcall
test
pushf
stos
inc
sahf
dec
push
dec
xchg
popf
sbb
inc
xor
mov
outsl
xchg
pushf
inc
je
pusha
jbe
or
pop
adc
cmc
popa
add
mov
adc
pop
divw
fldcw
mov
vmptrst
mov
mov
cltd
and
test
pusha
movsl
pop
stc
cs
sbb
xchg
punpckldq
cmpsb
test
loopne
mov
in
mul
imul
lahf
jno
stc
ret
mov
fsubl
inc
or
gs
lods
xchg
or
cltd
mov
test
ja
test
fsts
cltd
inc
jns
push
je
add
mov
loope
fists
and
movsl
or
jle
mov
xchg
mov
aas
push
movsl
adc
std
cmc
add
or
mov
xor
stc
mov
or
fadds
movl
add
inc
pop
or
pop
fdivp
setge
fcompl
push
and
daa
mov
repz
inc
xor
mov
sub
mov
fistpl
adc
in
cmp
shlb
xchg
int
fimull
jae
or
sbb
mov
insb
imul
daa
setle
add
xchg
bound
jbe
sbb
xchg
or
aas
fldenv
dec
bound
lods
mov
test
inc
cs
aas
or
cmpsl
mov
sub
xor
scas
sub
mov
jle
xchg
fwait
and
mov
add
lret
xchg
xchg
adc
push
es
lcall
daa
sbb
sbb
cmpsl
addl
test
pop
adc
mov
ret
cmpsb
mov
sub
jno
outsl
dec
enter
mov
xor
add
data16
aam
iret
leave
outsl
adc
mov
popa
or
adc
mov
mov
adc
pop
je
fisubrs
nop
std
jne
dec
daa
mov
push
sbb
push
mov
mov
es
jle
mov
mov
mov
pop
adc
mov
push
or
stos
mov
sbb
xor
and
sarl
je
xor
sub
mov
mov
mov
xchg
add
inc
rorb
call
fisttpll
or
adc
adc
scas
popf
push
add
shrb
adc
movsl
sub
adc
push
adc
sub
mov
lahf
pop
adc
mov
push
repnz
mov
pop
mov
sbb
insb
sbb
push
sbb
les
or
cli
mov
sub
jne
or
scas
loope
ficomps
jno,pn
and
pop
ja
mov
jle
setbe
cwtl
push
jbe
sub
sub
push
mov
sub
push
mov
andb
xchg
adc
adc
and
bswap
ja
adc
add
in
jbe
sbb
in
mov
add
fwait
xor
jle
mov
sahf
pop
sub
push
andb
ret
std
daa
nop
aaa
lahf
dec
jnp
xchg
mov
cmpsb
ds
nop
bound
mov
stos
and
mov
pop
pushf
arpl
push
lahf
xchg
or
test
addb
add
dec
dec
cltd
sbb
mov
xchg
cwtl
adc
out
jbe
mov
ret
movsbl
mov
mov
inc
mov
movsb
aas
jno
sbb
jl
daa
dec
cwtl
push
popf
shlb
push
mov
pushf
sbb
sbb
adc
mov
aaa
lcall
test
lahf
xchg
sbb
sbb
or
jbe
inc
daa
leave
int3
sub
es
xchg
jne
jle
fwait
stos
pop
or
mov
add
ja
mov
je
push
cmpsl
xor
pop
mov
and
mov
imul
mov
push
rol
cmpsl
or
add
inc
lea
adc
pusha
pop
fs
lcall
mov
addl
insb
jbe
data16
inc
push
pop
adc
pop
pop
mov
or
xchg
enter
mov
or
std
mov
sbb
xchg
xchg
dec
push
clc
xor
lahf
sbb
loope
xchg
lds
sti
es
dec
xchg
jb
hlt
jg
adc
jns
and
mov
sbb
pop
mov
sub
mov
fwait
pop
push
mov
pop
std
es
mov
bound
cmc
in
daa
mov
out
cltd
mov
ja
movsb
and
pop
sub
nop
cs
in
adc
movsb
lcall
aaa
lahf
mov
jp
jle
xchg
cmpsl
inc
lock
int
sub
bound
jo
push
and
xor
in
ss
mov
push
and
add
xchg
mov
inc
inc
cmp
sbb
mov
mov
adc
pop
sbb
cmpsl
and
jge
and
call
xor
mov
shlb
loopne
jg
mov
mov
and
out
es
or
rorb
mov
pop
cmp
insl
and
adc
add
addl
sbb
and
dec
mov
cwtl
movsl
mov
cmpsb
push
mov
sub
mov
adc
out
insl
xor
adc
adc
xchg
nop
or
xchg
mov
mov
test
mov
cwtl
sbb
inc
xchg
popf
xchg
adc
add
mov
and
pop
adc
outsl
cmpsl
add
xchg
int
sbb
fdivs
rcrb
sbbb
and
adc
or
add
pusha
mov
xor
add
rclb
or
pop
adc
xor
or
mov
ss
in
sbb
test
pushf
mov
daa
cmp
add
sahf
jae
push
ret
and
mov
xchg
popa
mov
sbb
cmp
loopne
xor
sub
sub
cs
push
pop
aaa
pop
mov
jmp
inc
fcoms
gs
lret
add
adc
add
popf
jmp
adc
xchg
sbb
mov
xchg
mov
out
das
lcall
mov
jb
jg
cli
out
xor
push
mov
or
mov
cwtl
mov
inc
je
es
xchg
sbb
mov
cmpsl
or
mov
inc
and
cmp
xor
or
xchg
std
xchg
jb
lret
dec
add
clc
add
pop
daa
adc
sbb
ds
cwtl
adc
cmpsb
imul
shlb
rclb
xor
hlt
mov
mov
pusha
xchg
push
mov
mov
xchg
fwait
add
cmc
sub
adc
rclb
lods
je
or
jmp
jne
mov
xor
adc
push
je
or
fwait
sbbl
repnz
push
adc
and
out
test
pop
mov
push
repz
mov
out
xchg
or
dec
jbe
imul
sbb
loopne
jns
jnp
ficomps
sbb
jge
sbb
movsb
mov
or
cmpsb
jecxz
je
sbb
addr16
mov
xchg
xchg
or
jno
fwait
mov
cmp
and
sbb
sbb
pop
xorl
out
xchg
movsl
hlt
mov
mov
or
loop
mov
or
and
sub
adcl
ds
scas
push
push
mov
mov
cmp
xchg
sbb
mov
mov
daa
xor
lahf
in
sahf
mov
mov
movsb
mov
sub
sub
inc
adc
outsb
xchg
mov
dec
std
pop
sbbb
adc
and
add
or
lcall
mov
add
sub
cli
xchg
xor
and
sbb
sub
aaa
mov
pushf
mov
push
mov
mov
add
int3
and
test
cmpsb
and
jbe
sbbl
hlt
movups
adc
xor
and
fwait
sahf
xor
push
add
adc
jo
pushf
insl
and
and
jp
adc
mov
sbb
std
adc
addb
xchg
stc
xor
mov
sub
jbe
rorl
add
adc
mov
cmp
jge
sub
push
add
xchg
cmpsb
xor
daa
jg
mov
sbb
sbb
mov
push
sub
dec
mov
es
adc
add
cltd
push
addl
mov
mov
in
add
mov
fildll
adc
xor
xchg
gs
mov
mov
cmpsl
sbb
arpl
pushf
sbb
mov
mov
sub
movsb
or
lcall
cltd
mov
test
sub
mov
mov
add
mov
insl
mov
mov
fs
lret
fldenv
mov
orl
or
xor
add
mov
mov
jo
mov
sub
xchg
sub
daa
pushf
mov
add
adc
cmpsl
or
push
mov
stos
mov
push
dec
jge
and
adc
xchg
jg
adc
and
insb
mov
or
outsb
nop
adc
iret
mov
pop
mov
pop
aad
jbe
xorb
sub
sbb
inc
cmpsl
ret
sub
sbb
xchg
add
xchg
xchg
mov
inc
dec
cli
add
rcrb
mov
fwait
and
xchg
repnz
pop
xor
sub
sub
xchg
inc
aaa
cwtl
cmp
jb
lret
mov
push
xchg
mov
mov
adc
ret
inc
sbb
lahf
loopne
cs
and
aas
rcrb
and
pop
push
jle
daa
add
mov
jno
jnp
cwtl
jbe
outsb
xor
test
daa
xchg
lea
rcrb
pop
stc
sti
daa
adcl
stos
ds
cmpsl
addl
subb
xchg
push
fistps
nop
mov
or
hlt
mov
cmpsl
pop
sahf
jg
sbb
mov
es
add
mov
lret
add
sbb
bound
jb
jb
dec
xchg
pop
and
sub
sbb
es
nop
pop
sahf
mov
out
jle
cmpsb
cmpsl
add
pop
xchg
push
mov
mov
lcall
movsb
cmpsb
lahf
rep
add
cli
sbb
add
test
fs
xor
pop
aaa
inc
mov
xchg
mov
cwtl
adc
or
lcall
adc
dec
or
aaa
xchg
push
cwtl
mov
leave
mov
push
es
out
stos
push
scas
movsl
into
mov
pop
aad
mov
nop
xchg
fsubrl
pop
adc
or
cwtl
inc
mov
sub
and
fiadds
and
adc
push
daa
cmpsl
xor
or
adc
sahf
loope
es
push
jge
ljmp
fs
push
add
leave
cltd
push
push
pop
add
adc
adc
xlat
aas
or
mov
stos
sbb
mov
xlat
adc
pop
push
or
push
xchg
or
pop
insl
xchg
inc
and
es
ds
adc
mov
daa
ret
and
adc
inc
adc
add
arpl
movsl
jo,pn
addr16
or
mov
nop
mov
mov
daa
sbb
lahf
pop
pusha
pusha
mov
hlt
movsl
mov
lods
or
les
std
adc
add
or
adc
in
mov
xlat
aas
and
or
fisubrs
stos
ret
fwait
cltd
sbb
and
andl
pop
cmp
or
aas
aas
jo
loop
mov
lahf
xchg
mov
fistpll
mov
test
mov
cmpsl
ja
push
fiaddl
push
mov
fisttpll
test
adc
jb
out
jae
cwtl
adc
sbb
xchg
add
jecxz
pusha
pusha
fnstcw
data16
or
pop
rcrb
daa
add
and
hlt
ja
adc
into
fstpl
enter
add
stc
fildll
mov
lret
outsb
int
cpuid
pop
mov
add
adc
or
xchg
test
lds
out
mov
stos
xor
jno
sub
push
sub
mov
lcall
pop
push
nop
aam
sbb
dec
jne
or
aad
mov
rcr
dec
xchg
test
test
jg
push
psubb
nop
or
add
je
arpl
xchg
mov
dec
cs
jle
cltd
and
mov
andl
push
ja
sbb
stos
jle
push
add
add
stos
daa
movb
pop
inc
add
pop
cmp
nop
jae
enter
mov
daa
pop
stos
mov
mov
and
jle
lret
test
data16
fcmovne
sub
xchg
xchg
xchg
pop
loope
mov
mov
je
stos
mov
sub
mov
and
iret
ss
add
xchg
pop
es
mov
mov
sarl
hlt
sbb
mov
pushf
xchg
pusha
mov
mov
cli
dec
jns
fwait
push
sub
xor
push
sbb
movb
lcall
fwait
mov
insb
or
sbb
mov
out
mov
mov
test
je
push
les
mov
cmpsb
daa
movsl
add
jbe
loope
xor
stos
mov
xchg
sbb
lcall
sbb
fwait
shrb
adc
cmpsl
mov
add
ja
lods
rcrb
or
push
sub
pop
jo
sub
adc
or
sbb
repz
mov
add
pop
mov
dec
jg
mov
sbb
mov
sbb
pop
sbb
pop
xor
mov
xor
jge
or
add
push
pop
loopne
nop
xorb
mov
jne
mov
adc
mov
and
mov
push
and
icebp
mov
sahf
jbe
jb
cmpsl
add
sbb
sbb
xchg
cmpsl
aaa
mov
sub
lahf
dec
test
or
sbb
repnz
nop
lea
inc
pushf
mov
lods
mov
ds
pop
daa
adc
xor
adcb
je
and
sbb
add
gs
repnz
into
into
push
sub
ja
fistpl
mov
or
mov
and
mov
jns
sbb
adc
nop
cs
stos
or
cltd
adc
or
xchg
cmpsl
sub
and
jns
mov
jae
sahf
xchg
cs
jo
movsl
pop
into
sbb
and
and
push
jg
sbb
pop
xchg
je
jle
mov
subb
and
pushf
dec
cltd
data16
adc
inc
or
int3
cmp
iret
sbb
cwtl
bound
lods
xchg
or
into
setno
sbb
xor
cmp
jbe
aaa
cmpsl
mov
xor
sbb
popf
and
fstl
or
cmpsb
sbb
ret
cwtl
pop
lcall
aas
into
sbb
fdivrp
jmp
push
mov
lahf
and
or
xchg
data16
incl
icebp
sbb
lret
andl
inc
mov
out
adc
pop
push
sbb
orb
sbb
adc
mov
loopne
adc
icebp
scas
mov
out
cmpsl
sub
test
daa
daa
mov
push
jbe
mov
xchg
fistps
ja
stc
adc
fwait
cli
push
testb
push
insl
mov
mov
xor
push
out
adc
cmc
sbb
fwait
dec
fmuls
and
mov
adc
outsb
std
xchg
sbb
pop
dec
or
push
sti
imul
xchg
inc
sbb
cwtl
pop
xor
xchg
xchg
movsb
mov
adc
sbb
clc
lea
add
xlat
aas
mov
jle
test
stos
sahf
rorb
cmp
stc
jge
jmp
xchg
cmpsl
fidivrs
xchg
xchg
mov
adc
movsl
xchg
aas
or
sub
xchg
sbb
in
fidivrs
daa
mov
loopne
pushf
push
outsb
adc
lahf
add
jbe
mov
mov
and
mov
lcall
jle
test
cmp
mov
adcb
inc
mov
pusha
aaa
stc
mov
mov
or
in
dec
es
cwtl
cmpsb
mov
bound
enter
call
into
fildl
add
add
cmpsl
sbb
adc
test
nop
imul
mov
sbb
xchg
add
push
or
addl
sbb
xchg
popl
pusha
mov
aaa
daa
stos
in
data16
orl
pushf
jbe
sub
xchg
dec
mov
mov
pop
insl
jae
movsl
and
out
test
lcall
loop
addl
sti
and
or
jge
movsl
fwait
out
cmpsb
xchg
out
cltd
xchg
loopne
and
cli
ror
xor
addl
push
pop
sbbb
inc
or
push
mov
subl
test
movsl
mov
inc
dec
mov
aam
sub
jbe
iret
pop
pop
mov
dec
stos
or
pop
and
pop
sbb
fwait
sub
mov
es
push
sahf
icebp
dec
jmp
xchg
push
xchg
mov
adc
sbb
das
lcall
or
test
pop
inc
jne
out
aas
mov
sbb
sbb
pushf
xor
jp
sahf
popl
repnz
and
lods
inc
sub
add
orl
or
shll
fwait
cmpsl
pop
ds
fwait
or
adc
sbb
xchg
dec
push
sahf
push
imul
dec
cmp
daa
pop
nop
mov
mov
adc
scas
mov
shlb
add
or
pop
inc
ret
in
mov
sbb
mov
lcall
aaa
cmp
add
cmpsl
orb
sbb
andb
pop
fstps
add
lea
mov
cmp
jmp
cltd
mov
mov
sbb
xor
frstor
lahf
dec
cmovnp
sub
cmp
popa
add
mov
inc
adcb
adc
cwtl
cmpsl
test
pushf
xorb
test
pop
dec
pop
fimuls
sub
or
mov
mov
shrb
push
mov
sahf
sub
or
jg
push
sub
sbb
orb
js
xchg
and
pushf
inc
js
mov
sbb
outsb
mov
sub
leave
mov
sti
jo
insb
sbb
sbbl
shlb
or
push
mov
lahf
push
or
xor
mov
mov
or
mov
or
int
mov
mov
xchg
cmpsl
mov
dec
mov
mov
cmpsb
clc
mov
xchg
mov
in
or
cmp
adc
iret
and
sbbb
inc
sub
xchg
sahf
fildll
nop
imul
daa
leave
sub
push
cmp
jb
jne
pushf
sub
or
adc
testl
and
adc
cmp
mov
and
int
subb
popa
adc
jb
movb
xchg
sub
movsb
adc
jae
dec
cmpsl
pop
pop
or
lcall
or
sbb
cmp
xor
mov
fidivrl
or
jno
add
xor
cmc
test
adc
and
hlt
sahf
cltd
es
sbb
rcrb
adc
inc
or
push
imul
mov
mov
xchg
xchg
adc
xchg
mov
lods
xchg
xor
xor
lods
pushf
jo
sub
mov
sub
dec
pop
test
cmpsl
pop
pop
xor
add
push
bndldx
lock
mov
add
mov
mull
push
and
pop
jb
push
add
or
movb
movsl
pop
ret
dec
xor
xchg
sbb
pop
push
push
add
mov
add
mov
imul
and
lahf
mov
retw
xchg
jbe
inc
or
adc
adc
mov
fwait
into
sbb
sahf
jle
scas
mov
and
ljmp
loop,pn
ret
push
mov
lcall
mov
jbe
adc
sbb
mov
sbb
stos
xchg
movsl
cmpsb
mov
pop
sbb
dec
mov
jmp
out
lcall
andps
into
lcall
adc
and
adc
mov
mov
andl
data16
stos
ret
adc
aas
xchg
cmpsb
iret
cs
nop
outsb
jbe
mov
bound
pushf
addr16
cltd
and
pop
push
mov
adcl
jb
sub
nop
mov
xchg
push
inc
test
mov
add
xrelease
xchg
pop
aad
adc
ret
adc
mov
add
sub
inc
mov
pop
rclb
test
jne
adc
adc
inc
movsl
pusha
inc
sbb
imul
movsl
xor
sbb
sbb
cmp
stos
scas
test
xchg
outsl
sti
inc
dec
sbb
jecxz
je
movl
adc
nop
and
stc
rolb
sbb
mov
sbb
ss
sbb
mov
mov
inc
sbb
insl
ds
outsl
test
js
bound
adc
mov
subb
push
mov
dec
daa
and
push
pop
push
jbe
adc
mov
lcall
cmp
or
fwait
inc
incb
arpl
adc
cmc
or
lcall
cmp
insl
mov
shrb
aaa
inc
pushl
push
nopl
andl
pop
popf
mov
push
xor
xchg
and
cmpsb
push
dec
add
cmp
sub
sbb
sbb
loopne
add
xchg
xchg
inc
xchg
dec
cmp
push
cwtl
and
push
adcl
sub
adcl
sbb
xchg
lahf
cli
add
mov
xchg
adc
push
test
jb
addl
addl
es
xor
and
or
pop
jbe
sub
add
aas
adc
sahf
xchg
sbb
jge
xchg
mov
inc
test
maskmovq
imull
jecxz
mov
xor
xchg
mov
push
mov
inc
imul
or
insb
je
xor
pop
pop
xor
roll
sub
filds
cltd
add
repnz
jecxz
inc
or
and
jnp
cwtl
adc
pop
cmpsl
and
pop
inc
mov
fimuls
and
xchg
or
nop
mov
test
fwait
movsl
inc
jmp
mov
xchg
mov
lcall
cmpsb
mov
add
mov
and
jecxz
pushw
mov
cwtl
roll
test
rcrb
hlt
xchg
test
sub
xor
test
rcll
in
lret
xchg
jbe
and
aaa
mov
cwtl
sbbb
jge
movsl
jns
sub
lea
xor
xchg
inc
daa
mov
mov
sbb
pop
and
mov
or
inc
mov
dec
loop
xchg
mov
add
cmp
jge
cmpsb
ljmp
sbb
push
mov
add
add
mov
lahf
mov
add
clc
je
jg
mov
sbb
bound
mov
stc
repnz
mov
sub
sbb
xor
mov
mov
lcall
xchg
mov
fwait
dec
insl
pop
jne
xchg
xchg
daa
pop
imul
mov
mov
sub
cmpb
dec
adc
in
xchg
fwait
adc
pop
bound
xchg
jle
pop
mov
pop
xchg
cmc
pop
cmc
cmovle
aaa
pop
xchg
daa
inc
push
lods
push
xchg
inc
add
je
add
cltd
fistl
add
nop
mov
cli
xchg
inc
mov
sub
sbb
adc
dec
add
mov
xchg
jne
stos
sbb
loop
sbb
adc
add
cmpsl
mov
sbb
sub
movsl
or
sbb
cmpsb
subl
add
outsl
in
test
cmp
xchg
scas
mov
mov
push
movsb
cltd
sub
fwait
shr
out
in
rcrb
and
fisttpll
inc
lahf
add
push
mov
out
cmp
xchg
loope
std
jg
add
pop
faddl
mov
cmp
adc
sahf
sbb
or
push
adc
ret
pop
jecxz
dec
and
jg
mov
sahf
stc
movsb
inc
sub
pop
rclb
xchg
add
mov
cmp
sbbb
sbb
push
or
jbe
jb
or
test
sub
push
sub
xor
adc
daa
mov
sub
mov
es
or
aad
inc
sbb
cwtl
mov
or
or
repz
lcall
mov
and
cmp
mov
cltd
aaa
pop
jmp
mov
les
push
or
sbb
mov
test
loop
cmp
sbb
mov
xchg
cwtl
or
stc
sahf
or
scas
stos
test
pop
aad
xchg
mov
aas
and
daa
outsb
jge
pop
xchg
adc
stc
dec
adc
nop
ljmp
mov
daa
mov
mov
cmp
mov
jne
add
mov
push
lcallw
mov
mov
sbb
addl
mov
sbb
stc
repnz
repz
test
and
fs
mov
adc
or
or
and
out
xor
dec
sbb
sbb
lock
add
in
mov
mov
sti
mov
push
mov
rcrl
pop
cmpsl
add
sub
mov
sbbb
mov
sub
loopne
push
test
aaa
or
hlt
mov
mov
orb
imull
sbb
xorb
mov
xor
lds
insl
mov
adc
out
push
rorb
iret
sub
jmp
cmp
mov
cmovge
mov
cmpsl
cmp
push
xchg
pop
adc
test
shld
cltd
sub
inc
jnp
lahf
or
add
mov
pop
addl
jbe
dec
sub
sub
adc
dec
xlat
sbb
lock
xchg
xchg
xchg
add
sbb
push
sbb
int3
sbb
cmpb
adc
fwait
sbb
adc
sbb
nop
mov
pop
lret
in
add
xorl
fadds
jle
add
adc
int
lcall
daa
push
rcll
into
sbb
sbb
cmpsb
mov
es
fwait
or
or
push
in
mov
pop
adc
or
mov
lods
sbb
daa
adc
inc
lcall
xchg
mov
fdivp
inc
adc
push
sub
xor
or
push
sahf
inc
adc
popf
and
push
adc
adc
mov
js
jmp
and
mov
mov
add
test
mov
orl
cmp
xchg
jno
mov
cltd
nop
push
jnp
add
ret
jmp
cmpb
fwait
add
clc
pushf
loopne
adc
jns
scas
jb
test
mov
lahf
or
push
or
test
inc
pop
fists
add
pop
pushf
push
lret
adc
aad
addb
or
sub
xchg
inc
jbe
pop
add
xor
and
xor
cmovo
pushf
add
push
mov
dec
aam
ljmp
xor
js
adc
add
ret
add
mov
rcrb
stc
arpl
xchg
push
or
add
fs
mov
sbb
iret
pop
mov
jo
sub
or
ja
nop
and
test
or
sub
and
loopne
test
test
mov
xor
mov
mov
or
pusha
fisubs
sbb
inc
sbb
lods
sub
dec
call
aaa
sbb
sub
cmp
push
and
andb
and
cmpsb
and
and
and
cmpsl
hlt
push
mov
ds
adc
cwtl
cmpsb
xchg
es
sub
fists
rorl
sahf
aad
ss
aam
jp
mov
sysret
inc
roll
ficoms
adc
and
loopne
addb
xor
xor
mov
jbe
fs
test
call
pop
sbb
dec
mov
add
in
jl
pop
mov
inc
sub
dec
and
mov
test
scas
fisubl
mov
sbb
mov
movsl
push
add
mov
cltd
dec
mov
mov
ret
dec
sahf
sub
sbb
cmpsb
pusha
icebp
jns
inc
lcall
popf
aas
cltd
andl
pusha
sahf
outsl
daa
movsl
int3
test
sbb
jne
jo
mov
mov
xor
pop
pop
cwtl
sbb
loop
sbb
test
jns
push
push
jae
adc
scas
and
and
and
sub
xor
das
mov
adc
push
rcr
adcl
and
cmp
adc
jns
mov
lret
insb
incb
xchg
add
ljmp
mov
rclb
adc
push
stos
push
mov
nop
mov
nop
mov
push
add
push
stos
mov
push
lea
ljmp
xchg
out
jl
push
add
xor
sbb
sub
fwait
mov
data16
outsb
mov
stos
pop
sbb
test
andb
ficomps
inc
sub
adc
mov
mov
test
jb
stos
mov
cltd
in
sbb
xor
getsec
pop
jae
dec
cmpsb
test
fnstcw
sub
add
fwait
xchg
popl
and
lods
adc
sbb
lds
add
aam
sbb
loope
adc
cmp
cmpl
adc
test
stos
cmpsb
mov
test
mov
pop
cmpsl
xchg
mov
lret
lods
xchg
mov
push
sbb
movsl
sbb
mov
add
aaa
pop
cmpsl
jg
adc
add
sub
dec
adc
push
mov
cwtl
maskmovq
idivl
push
push
mov
icebp
add
sbb
mov
test
mov
and
jle
mov
cwtl
sub
pop
inc
movsl
cmpsl
mov
orl
popl
mov
mov
dec
push
jb
jb
jbe
rclb
dec
cmp
test
lcall
pop
push
push
add
sbb
sub
sub
pop
push
pop
push
sub
clc
pop
add
mov
pop
sahf
mov
and
shll
je
mov
mov
nop
adc
aas
add
add
xchg
sbb
inc
push
and
add
mov
add
mov
mov
out
or
cmpsb
jbe
mov
pop
adc
mov
inc
sbb
or
xchg
pop
and
sbb
mov
mov
cli
rcr
pop
pop
fwait
dec
addl
bound
xor
adc
loopne
xchg
xchg
pop
mov
and
bound
and
mov
movsl
dec
outsl
lcall
pmulhw
xchg
cld
ret
or
add
pop
pop
aaa
or
cwtl
outsb
cmp
outsb
xchg
fs
ja
mov
ret
jg
stos
lea
scas
add
pusha
pop
insb
push
xchg
out
mov
mov
or
aam
push
out
cmp
cmpsb
imul
insl
add
aas
cmpsb
add
jb
sbbb
dec
shll
xchg
xor
iret
sahf
mov
decl
stos
push
mov
out
pop
repz
sahf
sub
mov
and
push
sbb
dec
notw
andl
sbb
subl
pop
in
mov
and
nop
inc
mov
pop
rcll
into
mov
xor
cwtl
xchg
dec
mulb
pop
cli
cmpsb
adcl
adc
mov
sub
push
push
lea
xchg
enter
xor
mov
iret
in
mov
cmpsl
xchg
push
cmp
inc
fwait
out
sbb
add
icebp
mov
mov
mov
popf
xchg
jmp
mov
xchg
mov
xchg
add
push
mov
movsl
or
cmp
add
adcb
aad
call
adc
test
mov
push
xor
mov
push
faddl
mov
iret
pop
sti
test
cmpsb
pushf
andb
adc
lods
mov
inc
xchg
mov
dec
test
adc
lahf
xor
icebp
cmp
xchg
ret
or
jecxz
dec
sbb
cmpsb
xchg
and
sub
cmpsb
push
adc
sbb
daa
lods
scas
in
inc
scas
inc
test
sub
test
add
lods
xchg
cmpsl
mov
sbb
lret
adc
push
cwtl
xorl
xchg
daa
pop
xor
sbb
data16
rorb
sub
add
gs
mov
adc
imul
in
inc
sub
xchg
ljmp
rcrl
repnz
dec
jb
lods
or
add
push
lahf
inc
sbb
test
xchg
dec
sahf
mov
in
add
sbb
lret
sahf
insl
pop
jo
add
mov
adc
fimuls
popf
mov
cvtdq2ps
int3
pusha
jb
pop
lods
adc
mov
cmpsb
aad
push
mov
js
pop
mov
add
mov
push
es
xchg
es
andb
subl
pop
lcall
xor
dec
stc
inc
mov
sbb
nopl
or
xchg
mov
push
cmovs
test
mov
je
cmpsl
xorb
out
xchg
mov
inc
in
sahf
daa
addl
mov
mov
push
loopne
in
out
sahf
loope
fcompl
adc
stc
inc
rolb
insb
subl
cld
xor
xchg
cmpsl
cltd
add
lds
and
mov
jge
sub
and
test
inc
lahf
inc
push
out
pop
cld
andb
xlat
cmpsl
test
ficomps
mov
inc
and
xchg
cmpsb
lret
fwait
pop
pop
mov
mov
adc
pushf
push
xchg
fnsave
jnp
sbb
sarb
add
mov
stos
cmp
xchg
cmp
sbb
or
adc
adc
sub
inc
and
mov
adc
lahf
or
adc
jg
divb
jns
mov
add
sbb
inc
mov
ret
push
adc
out
dec
leave
ja
or
aas
and
or
sbbb
or
stc
xor
adc
xchg
sbb
inc
out
gs
loopne
and
cmp
pop
mov
pop
cltd
test
clc
push
inc
jb
adc
xor
add
mov
sub
jecxz
xchg
sysexit
pop
pop
add
movsb
lea
loopne
dec
lahf
push
leave
cmpsb
xchg
loopne
push
or
xchg
or
xor
mov
jl
dec
pusha
cmp
pushf
adc
mov
add
push
adc
mov
or
inc
inc
mov
adc
xchg
and
js
das
adc
xchg
jle
mov
add
data16
inc
push
std
mov
stos
std
es
lea
cmp
popf
ret
xchg
mov
lds
mov
jecxz
adc
shlb
out
in
inc
test
sub
xchg
add
fwait
mov
jecxz
xchg
fcoms
sbb
xchg
or
cmp
jl
dec
mov
push
push
and
sbb
lahf
je
xchg
mov
popa
sarb
cmp
nop
push
lcall
push
in
outsb
mov
mov
pop
jmp
jecxz
sbb
xchg
ret
es
mov
xchg
jno
call
adc
jno
nop
fwait
cmp
mov
inc
inc
lods
mov
mov
push
jmp
and
mov
jmp
jmp
test
sbb
add
add
push
and
cmp
movsb
mov
mov
sbb
cmp
mov
stos
cmp
xor
mov
add
sbb
and
or
push
icebp
jge
enter
cmpsl
inc
push
lods
fbld
push
xor
jecxz
push
aas
or
rcll
mov
cmpl
sbb
stos
pushf
add
sbb
negl
nop
mov
sbb
sbb
mov
sub
cmpsb
es
mov
out
cmpsb
fs
arpl
add
and
stos
ljmp
mov
or
lahf
cltd
push
xchg
jbe
fnstsw
movsl
pop
fbstp
sbb
in
xchg
adc
movsb
and
in
push
sub
les
mov
cli
sub
mov
mov
sub
adc
mov
or
stos
add
add
in
add
xchg
sbb
mov
ja
cmpsb
sahf
push
xchg
dec
mov
ljmp
mov
cltd
adc
mov
mov
add
sbb
push
pop
adc
movsl
adc
add
add
mov
push
pop
fnstsw
push
adc
dec
movsb
adc
jb
aas
pop
push
sbb
or
cmp
cmp
sbb
ss
sbb
lods
and
mov
mov
sbb
pop
add
repnz
cmc
addr16
fisubl
mov
xor
clc
clc
push
das
xchg
sbb
sbb
mov
cmpsb
ret
cmpsb
data16
sbb
es
sbb
add
test
pop
repz
test
mov
lods
inc
sbb
sbb
cmovle
lahf
data16
xchg
cwtl
dec
call
cltd
sbb
xor
mov
mov
mov
xchg
and
es
cltd
lods
sbb
pop
inc
test
inc
pop
or
add
test
aas
adc
orb
popf
add
les
sahf
xchg
jg
push
rclb
leave
fs
jmp
cmp
adc
outsl
mov
sbb
nop
xchg
and
add
mov
xchg
pop
inc
cltd
pop
pop
vmread
pop
pop
vmwrite
pop
push
push
fwait
xchg
adc
inc
xorb
mov
in
aam
or
outsb
cmp
sbb
pop
or
sbb
add
ja
rcrb
jb
shl
jg
or
cmp
sub
mov
test
jb
inc
bound
mov
xor
and
pop
outsl
add
out
xor
inc
cltd
dec
pushf
ret
lock
or
popf
mov
pusha
loopne
mov
data16
mov
lods
orb
lcall
sbb
jl
outsl
mov
addb
std
test
movsl
inc
pop
sbb
xchg
mov
push
xchg
popf
test
or
daa
fdivrp
xchg
pop
ss
je
mov
inc
xor
inc
loopne
outsb
shrb
mov
ret
leave
push
and
cmpsl
int3
outsb
icebp
es
sbb
cmp
xchg
adc
inc
fwait
mov
data16
xchg
scas
xchg
mov
pop
dec
add
outsl
loopne
xchg
add
sub
mov
inc
mov
xor
xchg
inc
sbb
jb
shrb
and
mov
push
fildl
add
and
cmp
sbb
andl
jbe
jno
mov
adc
push
and
pop
add
and
inc
popf
inc
inc
sbb
aad
adc
mov
xchg
shlb
cmpsb
mov
sahf
jmp
hlt
push
dec
clc
aas
inc
pushf
stos
sti
lret
mov
and
sub
out
fldl2e
sahf
add
pop
jbe
xor
xchg
and
and
outsl
insb
ficomps
mov
mov
inc
xchg
mov
add
or
mov
push
movsl
mov
push
adc
test
fwait
mov
lahf
xchg
xorl
loopne
lsl
testb
iret
pop
mov
xor
out
stos
out
rol
or
int3
push
je
mov
xchg
push
xchg
imul
dec
push
mov
mov
mov
xchg
out
mov
adcb
add
lds
movups
and
scas
or
mov
data16
jo
jno
xor
and
sbb
inc
pop
mov
pop
mov
mov
inc
enter
sbb
adc
fistpl
lock
mov
xchg
jne
pop
mov
xchg
ljmp
or
mov
pop
je
pop
getsec
sbb
mov
es
cmpsb
sbb
test
inc
jge
jbe
and
test
xchg
dec
mov
sub
xchg
lret
sbb
and
push
aas
insw
jbe
out
jmp
outsb
sbb
xorl
hlt
xchg
sub
loopne
mov
mov
ret
ret
stos
pop
adc
cvttps2pi
sub
scas
iret
push
orl
xchg
sub
bound
aas
mov
xchg
mov
pop
fwait
out
cmp
ss
incl
xchg
stos
add
sahf
cmp
xchg
nop
and
pusha
adc
lods
mov
adc
mov
mov
repz
dec
pop
andl
or
sarb
jae
adcl
cwtl
lods
xor
ja
fnstsw
inc
sub
fcmovu
orb
int3
lahf
or
inc
cmpsl
cmp
xchg
add
test
sbb
in
pop
inc
inc
or
jb
cli
or
sbb
movsl
xchg
add
imul
fistps
loop
das
and
and
xchg
jno
xor
push
or
mov
mov
cmpsl
inc
pop
out
jb
ficompl
mov
fcoml
stos
dec
fs
lods
or
lock
mov
sbb
jge
test
jl
or
sbb
jno
inc
fwait
test
loope
xor
xchg
into
xlat
pop
push
inc
or
cwtl
mov
aaa
daa
xchg
mov
lods
loope
sbb
fcoms
pop
cmp
mov
xor
imul
adc
inc
sti
mov
xchg
sbb
or
sbb
sub
push
jg
stos
cmp
ss
or
sub
and
mov
jbe
out
xchg
mov
xchg
lcall
adc
xchg
mov
push
cwtl
add
sbb
mov
and
lahf
push
les
sbb
xlat
test
loope
or
fstpl
sbb
insb
pop
or
inc
daa
xchg
pop
ja
sbb
adc
ja
or
sub
xchg
mov
add
dec
pop
mov
mov
daa
or
pop
fimuls
nop
adc
push
sbb
mov
xchg
es
cltd
sub
pop
and
arpl
test
push
mov
adc
rclb
pop
roll
lcall
adc
mulb
mov
stc
repnz
sbb
nop
rolb
add
pop
cwtl
pop
pop
xchg
adc
fincstp
in
mov
mov
sbb
add
cwtl
cmpsb
gs
pop
aad
jns
ja
adc
adc
dec
mov
mov
stos
or
out
mov
adc
xor
shrb
pop
addb
inc
loopne
push
addl
xchg
ret
movhps
or
das
cmpsb
popf
dec
pushf
xchg
hlt
dec
mov
push
out
dec
into
arpl
push
sub
jb
add
xchg
sbb
insl
sub
adc
adc
mov
shlb
sbb
test
pop
mov
dec
mov
adc
cmp
iretw
mov
lahf
add
and
sub
xchg
push
movsl
push
shll
pop
cltd
aad
lahf
mov
bound
test
rolb
mov
rclb
inc
dec
and
mov
in
fmulp
mov
int
mov
jno
cmp
mov
xor
or
data16
stos
jns
mov
je
loopne
divps
xchg
cmpsl
mov
outsl
dec
fisubs
cmp
sahf
cltd
push
pop
xchg
int
emms
sbb
xchg
mov
cmp
xchg
pop
adc
ret
adc
adc
sbb
loop
je
or
adc
adc
mov
jae
frstor
adc
sbb
jbe
popa
mov
add
fsts
lods
jae
jge
and
add
fidivrl
or
in
lock
imul
inc
bound
or
or
adc
ret
inc
subb
imul
push
or
and
push
or
sbb
adc
sbb
pop
inc
xchg
mov
pop
add
cmpsb
mov
xor
dec
pop
pop
test
in
sbb
dec
pop
and
mov
and
or
xchg
mov
mov
ret
mov
cwtl
push
adc
mov
xchg
add
xchg
mov
push
stc
and
add
xchg
jg
adc
das
mov
shrl
daa
xchg
xchg
mov
mov
sub
lret
imul
adc
mull
mov
mov
xchg
inc
cmpsb
subb
es
lcall
stos
daa
mov
mov
xchg
mov
out
rclb
fwait
mov
lret
outsb
add
mov
cli
mov
sbb
repz
popf
std
sbb
mov
jo
pop
xchg
test
mov
xchg
ret
mov
xor
insl
push
incb
sbb
sbb
test
lea
mov
cmpsl
sarl
and
or
inc
cmpsl
inc
imul
mov
nop
add
subl
or
lahf
mov
mov
mov
and
aaa
pop
xchg
insb
xchg
mov
inc
scas
out
cmp
sahf
xchg
sbb
movsb
mov
inc
sbb
add
fstp
xchg
adc
sbb
imul
and
jne
pop
ficoml
fwait
and
dec
inc
xchg
mov
and
imul
mov
cmp
push
sub
mov
cmp
pushf
es
fwait
add
or
xchg
or
and
and
sahf
mov
ss
add
dec
mov
mov
xor
add
stc
or
add
dec
mov
adc
sbb
movaps
cmpsb
and
mov
mov
xlat
xor
dec
mov
jb
mov
xchg
add
clc
fwait
and
xchg
or
jbe
inc
push
int3
jno
mov
sbb
mov
adcl
fwait
adc
dec
pop
xchg
lods
lcall
mov
or
cltd
iret
add
or
jge
popf
popl
cmc
dec
xlat
fcomip
mov
out
xchg
les
sbb
stos
xchg
pop
mov
add
adc
xchg
inc
cli
add
je
mov
or
sbb
js
lcall
mov
cmpsl
cltd
mov
cmp
ja
cmpsl
add
mov
cltd
mov
leave
jmp
test
sub
and
adc
or
lds
mov
je
daa
addr16
dec
loop
cmc
fisubs
adc
mov
test
cmp
das
mov
rolb
sbb
mov
or
xchg
lahf
dec
lock
pushl
dec
pop
adc
into
pop
mov
adc
add
pushf
dec
xchg
jno
adc
jb
popf
daa
mov
sub
stc
xchg
jg
stos
add
adc
adc
nop
jle
adc
sbb
push
add
je
cwtl
dec
movsl
addr16
rorl
bound
sbb
add
xchg
xchg
adc
mov
push
aaa
sbb
or
sbbb
sbb
xchg
mov
lahf
cmpb
push
out
push
ret
insb
insb
inc
and
pop
arpl
add
jns
push
lahf
sbb
or
adcb
mov
xchg
push
inc
or
nop
and
std
xor
add
rcrb
cli
addr16
mov
push
lahf
lret
push
fldt
aam
imul
pop
outsb
enter
mov
xchg
mov
lret
daa
ljmp
cmpsb
inc
cmpsb
test
add
out
dec
stos
sbb
or
xchg
dec
rorl
sbb
pop
aaa
xchg
adc
sbb
cwtl
lds
inc
mov
fs
cmp
mov
mov
sbb
mov
sahf
sbb
and
adc
inc
fldl
je
adc
mov
xchg
cmp
sbb
mov
pushf
mov
cmpsb
jle
pop
add
push
inc
add
sub
rcrb
mov
adc
frstor
nop
cmpsl
mov
ds
xchg
lret
adc
inc
inc
xlat
imul
or
mov
jb
iret
inc
es
adc
arpl
xchg
pop
jno
mov
jbe
adc
call
adcb
movsb
mov
cmpsl
cmp
cmp
je
mov
sbb
sbb
and
dec
and
test
xchg
mov
repnz
fwait
add
mov
dec
sbb
es
inc
xchg
and
and
adc
mov
jle
sbb
or
jo
je
rorl
pop
out
sbb
stos
inc
adc
xchg
cmp
gs
push
mov
sbb
jg
add
pop
subb
jp
data16
mov
cmpsl
dec
mov
or
cmp
xor
or
xor
xlat
mov
hlt
stc
xor
and
ja
mov
cmpsb
mov
push
sbb
fwait
cmovp
sub
popf
ja
mov
insb
aad
loopne
adc
mov
adc
out
mov
in
outsb
adc
push
adc
cmp
mov
aas
rorl
cmpb
xchg
sbb
and
sub
movsl
loopne
stc
mov
add
mov
cltd
imul
aaa
sahf
adc
jp
insl
mov
xchg
test
stos
sahf
in
test
sub
sbb
inc
pop
lods
push
xchg
xchg
push
pop
xchg
jg
mov
fimull
mov
sub
sub
sub
inc
pop
add
add
rcrb
fdivl
gs
push
je
aaa
popl
loope
nopl
xchg
or
daa
xchg
test
mov
add
xchg
xchg
subb
add
or
xor
sbb
xor
ljmp
notl
lret
inc
in
add
adc
jo
sbb
inc
test
inc
setns
push
jl
test
shrb
mov
ret
sbbb
je
int
testl
pop
and
in
sbb
or
movsb
fnstsw
xor
mov
mov
xorb
mov
adc
push
shlb
push
mov
sbb
mov
add
in
adc
aaa
lcall
ret
xor
mov
addr16
addr16
cli
sub
out
or
iret
and
daa
mov
cs
sbb
cmp
and
lock
and
inc
std
enter
sub
cmp
mov
in
fcoml
enter
je
jmp
xor
cwtl
or
jns
add
fimuls
mov
mov
insl
mov
or
je
arpl
and
mov
mov
or
and
mov
mov
test
pop
cmpsl
adc
sub
jg
or
pop
xchg
cmp
adcb
inc
cmpsl
sbb
dec
lock
mov
test
call
data16
hlt
jl
fcoml
mov
and
sbb
mov
add
loopne
jle
cmpsl
mov
or
lret
arpl
sub
es
add
mov
inc
inc
mov
inc
fwait
xchg
ret
adc
pop
xchg
pop
ret
dec
dec
jge
and
test
cld
inc
push
es
mov
inc
sbb
and
gs
mov
call
pop
and
pop
cmpsb
cmp
adc
sbb
xchg
or
fwait
mov
jae
into
imul
pop
or
xchg
int
mov
adc
jge
sbb
inc
xor
push
test
jo
cltd
icebp
adc
xor
fwait
xor
nop
test
cmp
mov
or
xchg
or
mov
lahf
jle
pop
mov
aam
push
fwait
lods
and
add
pushf
lcall
push
dec
xchg
lret
push
sub
ret
xor
mov
xor
sbb
cmpsl
cmpsb
and
add
pop
scas
add
sub
push
pushf
cltd
addb
in
xchg
enter
adcb
pop
test
inc
mov
fisubs
in
and
jp
mov
std
outsb
sti
or
sub
roll
cmp
and
dec
aaa
sub
sub
xchg
mov
shufps
adc
jae
cmpsl
or
xchg
or
dec
es
mov
daa
js
fisubrs
nop
imul
or
or
pop
es
cmp
adc
cwtl
xchg
data16
xor
mov
mov
xchg
xor
lods
sub
adc
test
jge
push
ja
test
adc
xchg
pop
xchg
or
sub
je
daa
push
push
pusha
lahf
orb
mov
mov
das
push
mov
add
test
sbb
in
pop
and
pop
push
in
sarl
cmp
or
lahf
jb
sbb
rcrl
xchg
dec
mov
or
dec
sar
mov
sgdtl
test
pushf
or
pop
xor
scas
movsl
dec
sub
je
push
lods
adc
icebp
sahf
xor
xchg
int3
or
pop
add
xchg
xchg
mov
add
jge
adc
and
or
jb
and
add
test
lcall
out
sbb
sbb
cli
adc
pop
mov
sub
or
daa
push
xchg
fwait
bound
sbb
je
rcll
sarb
adc
push
pop
and
mov
adc
xchg
lock
mov
out
arpl
cmc
js
xchg
mov
addb
and
test
add
jp
mov
xor
xor
addr16
inc
cs
and
mov
pop
mov
jmp
add
push
enter
inc
sbb
je
inc
jb
xchg
push
push
add
lds
arpl
push
mov
pusha
dec
leave
scas
push
inc
ret
cmp
cmc
icebp
test
aaa
movsb
ss
test
shll
cmpsb
xchg
data16
xchg
repz
or
push
add
mov
mov
mov
mov
dec
and
adc
mov
push
sbb
popf
clc
pushf
add
aaa
sub
dec
orb
sub
mov
sub
and
sub
movd
xor
or
xchg
xchg
je
add
jg
push
inc
fsubs
xchg
pop
and
fs
xchg
ficoms
and
adc
mov
test
stos
lcall
jo
jb
sbb
sub
dec
adc
lds
outsl
cld
or
pop
adc
aam
mov
data16
ret
bound
or
and
xchg
dec
cmpsl
inc
and
jge
or
mov
scas
inc
xchg
cmp
negl
add
or
repnz
xor
pop
stc
clc
and
dec
push
test
add
add
add
stos
sbb
decl
pushl
cmpsb
mov
mov
and
decb
push
ja
imul
les
lahf
or
add
rcrl
fsubrl
and
push
xchg
jbe
adc
and
daa
dec
and
mov
xchg
push
aaa
ljmp
in
mov
imul
gs
fiaddl
push
mov
sbb
mov
add
jo
add
into
jo
adc
and
orb
xchg
xor
adc
mov
sbb
adc
sbb
push
xor
cwtl
hlt
push
mov
test
mov
ds
addl
sbb
dec
pop
dec
subb
sahf
inc
xor
jmp
testb
cmpsl
cmp
inc
dec
xor
mov
outsb
dec
push
adc
and
or
mov
mov
adc
into
sub
mov
mov
push
pop
cmpsb
xchg
sbb
stos
adcw
ret
addl
xchg
decb
fwait
cmp
test
dec
cmpsb
xor
in
adc
and
push
add
inc
dec
adc
xchg
mov
cltd
iret
test
cwtl
or
mov
mov
into
mov
mov
mov
popf
inc
pop
sbb
sub
cmp
and
sbb
incb
sub
sub
mov
mov
aas
xchg
stos
xchg
es
sub
add
daa
xchg
cmp
test
jmp
test
mov
xchg
lret
xchg
popf
push
and
lret
lods
pop
jle
adc
adc
mov
testl
cmpsl
or
xchg
mov
fld
mov
mov
push
sbb
mov
nop
fidivl
scas
add
add
cmpsl
inc
test
push
mov
mov
jge
jle
cltd
stos
mov
mov
clc
xor
add
cwtl
lahf
mov
sbbl
push
mov
stos
sar
pop
xor
cmpsb
in
lahf
test
add
jae
leave
xchg
out
mov
ss
cwtl
adc
mov
pop
jge
inc
lods
sbb
es
stc
xchg
push
pop
and
movsl
xchg
sahf
lcall
scas
sahf
fisubl
or
rcll
lahf
roll
stc
xor
mov
sub
xchg
pop
xchg
cmp
add
stos
aad
stos
mov
jae
adc
sub
ficoms
sbb
sub
mov
popf
lcall
adc
nop
mov
adc
pop
icebp
jl
dec
test
xchg
adc
mov
sahf
sbb
mov
mov
xchg
std
jne
push
mov
xor
sbb
xor
mov
cmpl
and
pop
inc
mov
mov
adc
mov
cwtl
or
mov
push
loop
adc
xchg
add
test
xor
or
imul
movsl
lcall
sbb
xchg
xchg
sbb
nop
iret
fcompl
and
daa
or
mov
mov
push
cmpsb
daa
dec
sub
mov
rolb
jg
fistl
stc
dec
movsl
fwait
xor
dec
mov
outsb
mov
pop
push
or
je
pop
and
lahf
test
popf
cwtl
jb
sub
xchg
fdivs
xchg
jp
xor
mov
sbb
pushf
fwait
rorb
into
sbb
pop
dec
sbb
adc
fnstsw
pop
dec
mov
xchg
or
sub
sbb
push
ss
adc
or
ret
push
fimuls
aad
sbb
mov
scas
cld
ja
push
mov
push
lds
lcall
pop
arpl
fists
dec
cmpsl
dec
aas
fidivrs
xor
daa
sbb
mov
or
and
xchg
rclb
inc
lcall
dec
sbb
or
mov
inc
xlat
and
sahf
push
pop
push
int3
xor
jecxz
out
pop
shlb
pop
inc
xchg
jb
inc
add
push
int
and
inc
cmpsb
cmp
or
jmp
mov
inc
lahf
int3
mov
cltd
lods
sbb
push
xchg
ds
pop
out
loopne
cmpsb
cld
xlat
fnstsw
adc
pop
add
dec
sbb
and
aad
sbb
mov
mov
cltd
xchg
xchg
mov
push
xor
and
mov
data16
xchg
cmp
outsl
test
jne
mov
and
cmp
xchg
add
mov
mov
xorb
in
cmp
scas
sub
sbb
aaa
push
adc
xor
ror
mov
pop
sub
pop
orb
loop
xchg
or
insl
ljmp
lahf
mov
mov
sub
adc
mov
mov
inc
xchg
sbb
xchg
decl
or
pop
mov
xchg
adc
fstpt
scas
mov
push
out
adc
aaa
lods
iret
in
sahf
nop
cli
mov
push
mov
sub
mov
sahf
push
sbb
xchg
mov
sbb
dec
xchg
decb
hlt
inc
jecxz
jnp
add
std
popw
mov
push
into
test
lret
pop
sahf
sbb
sahf
fisubl
cwtl
dec
sahf
rcrb
and
int3
pop
sub
xchg
or
jae
mov
into
and
arpl
push
inc
fwait
add
cs
pushw
jge
xchg
sbb
sub
mov
and
stos
movsl
push
xor
or
jne
push
sub
fidivrl
scas
sbb
bound
lcall
adc
rolb
sbb
inc
stc
and
xchg
xchg
dec
loopne
aaa
cmp
sbb
jge
data16
cltd
mov
sbbb
or
push
mov
data16
jnp
add
mov
sub
pop
sbb
dec
aaa
add
mov
xchg
and
int3
push
fisubrs
mov
pop
adc
and
jmp
and
mov
mov
adc
add
popf
add
sbbb
aad
or
ret
inc
pop
mov
lock
loope
fldenv
sbb
lahf
push
adc
dec
ficoml
sbb
cli
adc
movsl
xor
in
and
rol
movb
mov
jb
adc
pushf
rolb
inc
andl
test
push
dec
sbb
out
lahf
push
ret
jno
movsl
sbb
adc
sbb
xchg
pop
daa
jne
sub
sti
aas
and
sub
pop
cmpsb
cltd
mov
adc
xor
negl
mov
test
push
xchg
add
pop
and
movsb
xchg
imul
xchg
xor
je
jbe
enter
xchg
and
mov
and
cltd
fistps
jle
mov
xchg
xchg
pop
jns
shrl
movsb
movsb
or
pop
adc
aam
mov
sahf
mov
mov
aaa
and
lcall
in
or
adc
sbb
jg
mov
inc
xchg
nop
inc
fwait
or
test
filds
xchg
adc
pop
dec
and
lock
mov
inc
lea
or
lahf
xlat
movsl
sub
pop
shll
lcall
ss
push
or
aas
mov
cltd
lahf
leave
xlat
cmovbe
or
mov
mov
cmpsb
xchg
std
mov
mov
sub
daa
lcall
adc
sbb
pop
nop
push
out
ret
mov
inc
fstps
cmp
adc
cltd
mov
pushf
scas
movsl
adc
and
xchg
daa
push
sbb
sahf
pushf
add
popl
mov
sub
fwait
push
xor
inc
sbb
int3
cmpsb
jle
ficoml
adc
xchg
cld
das
aas
jb
pop
mov
mov
xchg
jmp
or
push
sub
mov
pop
mov
lahf
movsl
ficoms
imul
cwtl
adc
jge
cs
pop
mov
inc
cltd
aaa
push
xchg
mov
sbb
cld
icebp
xchg
nop
cmpsb
pop
jae
xchg
cmp
pop
and
sbb
adc
bound
imul
and
mov
cwtl
aas
add
or
pop
mov
inc
inc
mov
cltd
pop
movsb
add
mov
inc
ret
pop
dec
and
lret
jns
cmpsl
push
pop
in
and
pusha
subb
sbb
sahf
sbb
adc
xchg
add
cmp
add
adcb
add
pop
in
dec
aaa
mov
sahf
aad
pop
cmpsl
fbstp
jecxz
addl
shlb
or
ficoml
inc
test
jb
or
push
mov
sbb
sbb
mov
stos
xchg
xchg
xchg
fcmovnb
call
sysexit
cwtl
lahf
xor
sub
je
je
sbb
adc
cmpl
mov
push
sahf
sub
sahf
jbe
mov
sub
and
xchg
add
stos
adc
lods
into
daa
sahf
dec
mov
xchg
and
lds
mov
adc
lret
sbb
mov
adc
pop
fsts
loope
imull
mov
push
push
mov
arpl
rcrb
cmpsb
sbb
mov
sarl
xchg
adc
sub
push
cmp
inc
adc
out
add
je
add
pusha
push
decb
adc
or
fbld
leave
scas
adc
mov
outsb
jno
jbe
mov
adc
jnp
cli
test
jb
bound
leave
mov
dec
test
aas
arpl
and
pop
jno
fidivs
fwait
daa
push
jo
adc
adc
sbb
and
test
adc
push
jg
lea
fbld
xor
bound
aaa
xchg
xchg
mov
test
pop
sub
inc
std
mov
adc
lcall
js
clc
pop
jae,pn
jb
push
mov
fwait
data16
shlb
lret
xchg
cmpsb
enter
pop
lods
mov
xor
sbb
lea
dec
xchg
test
inc
adc
mov
leave
sti
inc
or
subl
push
or
test
test
mov
mov
dec
pop
ret
mov
sbb
cli
sub
pushf
incl
test
mov
cmpsb
and
jne
xchg
test
dec
das
pop
mov
subb
pop
sbb
mov
sarl
or
xchg
sbbb
pop
inc
xorb
mov
sbb
lods
mov
and
push
sub
mov
cmpsb
sbb
pop
sub
or
adc
jnp
push
shll
sbb
movsl
in
or
adc
cmpsl
mov
daa
aaa
popf
sarb
sbb
and
cwtl
add
push
add
sub
movsl
mull
mov
inc
lods
push
dec
jae
adc
adc
test
sbb
sub
movsb
mov
into
dec
xchg
xor
mov
sub
cmpsl
fstpt
adc
pop
mov
cs
sbb
or
cwtl
bound
call
sub
pop
mov
cli
orb
or
popa
jecxz
fstpl
adc
and
mov
mov
or
xchg
mov
mov
sti
mov
ret
mov
stc
sub
push
pushf
pusha
and
xor
mov
sbb
mov
lcall
mov
dec
xchg
mov
mov
xor
sub
dec
xor
cmp
test
pop
mov
sbb
adc
bswap
mov
sahf
push
aaa
add
outsb
mov
inc
jmp
adc
movsl
mov
into
inc
xchg
mov
sar
stc
fdivrs
cmp
aaa
push
mov
or
aaa
mov
aas
jge
push
adc
xchg
sbb
xchg
test
sbb
bndldx
and
ja
cmpsb
aas
cmp
add
in
adc
inc
push
in
adcb
pop
stos
mov
mov
add
and
inc
jge,pt
xchg
mov
push
aas
jmp
mov
cmpsl
sbb
xor
lcall
sub
xchg
mov
lds
das
and
mov
push
dec
test
or
xchg
sahf
lret
cmp
mov
sub
push
mov
add
fisubs
andb
mov
sub
mov
fldl
es
nop
xchg
dec
sbb
enter
ficoml
add
adc
cmpsb
sahf
xchg
mov
in
pop
mov
jmp
call
pop
cwtl
lcall
cmp
in
adc
adc
lcall
pop
addr16
pop
cmp
xchg
fists
mov
inc
add
stc
test
cmc
mov
test
mov
mov
fwait
out
cwtl
lea
lret
lret
push
loop
jb
jbe
mov
ud1
xor
mov
mov
pop
cmpsb
mov
add
sbb
pop
or
clc
rorb
and
daa
aas
data16
dec
inc
sub
fwait
stos
and
sbb
push
and
cmpsl
adc
xor
add
adc
xchg
cmp
sbb
shrb
out
or
pop
insb
cmp
lahf
adc
xor
adc
mov
xor
and
cmp
sub
adc
test
mov
daa
fnstcw
xchg
or
or
sub
fwait
jp
adc
adc
inc
movsb
mov
xchg
inc
push
ret
xor
movsb
ficoms
dec
xchg
adc
inc
inc
mov
jmp
test
jbe
sbb
aaa
test
and
mov
pop
mov
je
inc
fadds
mov
adc
push
push
xchg
mov
add
xchg
rorb
and
pusha
inc
mov
jmp
and
das
mov
daa
cmp
xor
test
inc
mov
pop
clc
adc
sbb
add
out
inc
inc
pop
test
cs
adc
cmp
dec
sub
mov
mov
andb
stos
adc
xchg
decl
or
add
leave
inc
xchg
sbb
jne
inc
into
rorl
imul
sbb
or
adc
popf
mov
popf
sahf
xchg
mov
sub
sbb
insb
mov
mov
ret
sub
sbb
add
add
sub
ja
sbb
pop
xor
movsl
sbb
jnp
fadds
lods
push
rolb
xlat
or
addb
adc
loope
push
adc
fildll
loopne
mov
lahf
add
mov
shl
mov
and
sub
adc
xor
pop
or
pop
cld
rclb
adc
out
jb
add
mov
jmp
pop
insl
or
cmp
daa
and
pop
sbb
movsl
sbb
mov
inc
outsb
sub
aaa
xchg
stos
leave
mov
sbb
and
jg
cwtl
fadds
sbb
cltd
dec
es
adc
and
inc
and
pop
pop
xchg
or
incb
sub
or
test
test
fisubrs
and
mov
sub
jmp
and
cltd
jle
mov
popf
mov
bound
test
fwait
jnp
xchg
adc
xchg
inc
sub
mov
cmp
xchg
jge
and
or
or
mov
movlps
pop
mov
cwtl
test
mov
and
cltd
nop
inc
push
mov
lahf
adc
sub
fwait
lods
mov
imul
and
mov
inc
sbb
xor
scas
inc
or
mov
mov
icebp
adc
and
mov
add
sub
test
and
mov
ucomiss
or
cwtl
nop
aaa
or
fwait
mov
add
pusha
pop
and
sbbl
or
sub
cltd
cmp
push
fldt
movsb
enter
mov
and
adc
push
add
lods
pop
xchg
sbb
and
mov
adc
and
jns
pop
popl
imul
je
enter
movsl
cs
mov
add
es
nopl
cmp
xor
or
sbb
les
push
mov
mov
fsubp
dec
mov
in
push
subl
je
push
and
cmpb
and
push
jge
cmpsl
inc
mov
dec
mov
pop
test
ja
or
mov
and
mov
pushf
mov
sub
jg
lcall
adc
inc
or
inc
setp
push
aaa
push
aaa
mov
and
lret
int3
clts
push
pushf
sbb
data16
ret
test
cld
popf
aaa
cmp
ja
iret
add
xchg
nop
or
and
adc
add
pop
jne
fs
mov
add
stos
or
sbbl
or
add
pop
adc
enter
xchg
cld
dec
inc
push
cmp
pop
pop
dec
adc
mov
out
jne
sub
cmpsl
movsl
mov
xchg
pop
pop
and
into
mov
cmpsb
xor
pusha
andb
mov
mov
sbb
mov
sub
mov
std
sahf
ret
xchg
mov
xchg
cs
outsl
movsb
push
std
xchg
mov
nop
or
and
mov
cmpsb
mov
mov
and
in
movsl
mov
sbb
pusha
push
jg
sbb
pop
lds
add
mov
mov
push
cmp
and
jno
adc
xchg
lahf
or
cltd
pop
inc
loope
ds
pop
add
cmp
mov
pop
cltd
out
pop
popf
test
gs
sub
orl
sub
into
xchg
push
pop
enter
inc
inc
sbb
sbb
push
xchg
adc
mov
xchg
daa
push
add
mov
out
xor
adc
cmpsb
jbe
xor
mov
add
fwait
sbb
fsubrs
add
push
cmpsl
or
sbb
inc
cmpsb
adcb
jns
xchg
xchg
xorl
and
or
test
cmpsl
mov
lds
test
clc
inc
adc
or
and
and
sbb
push
lods
sbb
or
stos
rcrb
jecxz
out
out
sub
or
and
jle
adcb
add
cmp
jb
jno
cs
rcrb
xchg
test
loopne
aas
into
test
dec
movsl
sub
or
xor
xor
sbb
fisttps
jae
dec
test
sahf
inc
cmpsb
xor
sub
mov
and
adc
sbb
andb
xchg
push
daa
or
add
or
xchg
stos
cltd
push
jno
xchg
dec
and
mov
sbb
sbb
dec
popf
pushf
mov
sbb
js
ffreep
adc
and
lea
bound
inc
aas
xchg
sub
sbb
test
jge
sbb
sbb
stc
mov
ja
int3
mov
mov
movzwl
test
gs
mov
adc
aaa
push
xor
test
cli
lahf
jnp
mov
decl
clc
inc
lcall
sahf
iret
out
inc
daa
les
fldl
test
daa
lcall
mov
es
pop
xchg
sub
fistps
push
jbe
enter
mov
insl
pusha
lods
and
xor
dec
dec
push
jne
push
pop
push
xlat
cmp
inc
xchg
xchg
add
sub
xchg
mov
adc
sub
push
cmpsb
sub
inc
and
pop
pop
xlat
arpl
sub
mov
mov
mov
mov
les
xor
fstpt
pushf
pop
xchg
mov
xchg
cmp
sub
jl
je
jbe
sbb
inc
adc
mov
fwait
xor
mov
jb
xchg
cmpsb
lods
push
mov
lods
mov
xor
add
and
xchg
rcl
pop
adc
divl
mov
fldcw
push
xchg
mov
mov
sub
inc
xchg
adc
faddl
xor
dec
pop
cmp
repnz
aam
cmp
and
push
xor
sub
cmpsb
fisttpl
scas
mov
sbb
inc
push
xchg
and
aaa
pushf
mov
add
cltd
andb
mov
test
mov
add
inc
or
xchg
xchg
ds
adc
push
push
add
stc
pop
fcomps
inc
popa
xchg
sahf
jle
addb
lahf
out
cmp
pusha
mov
dec
mov
fcoml
or
xchg
sbb
ljmp
sbb
add
sahf
loopne
sbb
mov
pop
nop
test
pop
push
loopne
xor
xchg
dec
mov
std
dec
and
aaa
or
je
nop
lahf
push
and
or
or
xchg
mov
adc
jmp
sbbb
push
mov
repnz
adc
sub
movsl
cltd
bound
inc
jl
and
xchg
add
mov
or
sub
jb
or
cmp
xchg
push
pop
push
mov
mov
ret
or
inc
or
fwait
orl
sub
adc
add
in
sahf
ljmp
scas
test
add
aaa
lret
mov
mov
mov
xchg
dec
lock
sbb
pop
pop
push
inc
fildll
out
adc
or
or
jg
and
jns
into
mov
daa
andl
xor
mov
or
xchg
and
add
stos
mov
outsl
xor
mov
sbb
movsb
sub
dec
lods
shrd
adc
add
push
pop
adc
and
cmpsl
ficoms
mov
xchg
add
inc
lcall
xor
ficoml
jnp
mov
aam
pop
std
dec
sti
and
push
stos
adc
es
sbb
mov
dec
sti
mov
andb
lcall
fwait
sub
and
nop
dec
xchg
test
mov
mov
int
push
sbb
mov
xorl
arpl
xchg
into
add
push
sahf
add
jecxz
inc
or
jle
cwtl
add
setnp
popf
and
ja
or
mulb
mov
out
aas
mov
fisubs
inc
cli
faddl
cmpsb
lret
es
dec
inc
lcall
int
pop
pop
mov
push
pop
filds
sbb
sbb
enter
push
cmovp
cwtl
cmp
or
sbb
push
lcall
or
into
aas
sahf
mov
addb
jg
mov
cwtl
sbb
mov
mov
scas
pop
cltd
movsl
add
sbb
sbb
sbb
test
sbb
and
mov
sbb
inc
and
sahf
pop
sbb
ja
in
cmc
xor
add
cmpl
xor
stos
xchg
jle
or
and
sbb
data16
cmp
adc
pop
sub
inc
mov
adc
mov
xchg
leave
mov
inc
adc
and
jo
jle
adc
push
and
popl
xchg
or
mov
pop
cmp
sub
pop
dec
aas
pop
adc
mov
bound
subb
lret
and
push
sub
add
mov
or
subb
ror
sbb
sbb
or
rolb
or
mov
add
ret
xchg
or
iret
into
pop
dec
out
xor
and
mov
or
xor
cltd
add
aad
add
adc
jl
stc
mov
stos
mov
pop
xchg
es
subl
adc
pop
and
and
movsl
mov
hlt
cmpsl
daa
test
sub
adc
adc
add
subb
pop
adc
inc
or
lcall
inc
pop
add
fwait
stos
je
arpl
mov
mov
sbb
sub
mov
bound
movsl
mov
nop
push
jg
push
dec
xor
pop
xor
xor
mov
mov
jno
pop
mov
add
rorl
test
inc
cmpsl
or
sub
xor
sahf
mov
sbb
inc
add
js
push
adc
daa
cmpsb
or
inc
adc
cmpsb
adc
adc
movsl
xchg
sbb
lahf
sub
lret
orl
les
jb
mov
adc
hlt
push
stos
xor
data16
lret
scas
je
mov
xchg
mov
lret
xchg
sbb
adc
scas
cmp
or
sbb
inc
xchg
loope,pn
outsl
dec
cmc
and
jo
and
test
nop
mov
pop
in
hlt
add
sbb
push
xchg
enter
sub
add
push
loopne
lahf
jg
sbb
dec
ficomps
scas
cmpsb
loope
loopne
xchg
sbb
je
inc
push
sbb
stc
xchg
test
add
xchg
cwtl
sbb
add
lods
fistpl
ret
mov
xchg
ds
stos
mov
push
lret
and
xchg
data16
in
jge
and
sti
push
pop
andl
sub
mov
lret
cmp
test
mov
jecxz,pn
int3
fisttps
mov
add
stos
outsl
outsl
lahf
mov
negb
bound
xchg
adc
mov
mov
mov
sbb
es
shlb
and
lea
cmp
ret
cmpsb
icebp
pop
cltd
adc
and
mov
data16
nop
mov
xchg
orb
and
cwtl
aad
and
jge
add
subb
daa
pop
lods
adc
sub
fildl
or
aad
sub
scas
sbb
mov
xchg
and
les
je
mov
mov
sbbb
and
xchg
pop
movsl
xor
out
and
pop
mov
or
cmpsl
inc
sbb
es
inc
add
mov
sbb
sti
mov
or
or
mull
push
sub
std
adc
test
jp
dec
stc
push
inc
xchg
mov
adc
add
pop
movsl
and
xor
dec
xchg
popa
or
adc
push
inc
sbb
and
pop
add
imul
push
xchg
adc
inc
lret
lcall
loope
xor
imul
or
pop
mov
sub
sbb
adc
sbb
cmpsb
lds
xchg
adc
jo
mov
cmpsl
movsb
sbb
loopne
inc
xchg
sahf
aaa
test
cltd
mov
fs
addl
adc
pop
pusha
mov
adc
nop
fwait
sub
pop
xchg
lahf
arpl
mov
lahf
movsl
inc
paddusw
mov
sub
adc
lahf
stos
lret
pushf
jl
lds
mov
mov
jmp
int
daa
andl
imul
cmp
mov
lea
jge
cmpsb
pop
jbe
test
pop
fwait
lea
mov
add
daa
xchg
adc
pop
cmpl
sbb
adc
xchg
jne
cmp
pop
iret
push
in
push
dec
sbb
jb
sub
stos
mov
mov
mov
mov
mov
sbb
dec
adc
sub
adc
or
pusha
sahf
negb
sbb
sahf
jge
out
testb
xchg
pusha
xor
out
mov
xchg
or
dec
fstps
cmpsl
adc
outsb
add
mov
movsl
push
or
or
mov
push
imul
cltd
xchg
mov
popa
fwait
mov
mov
adc
loopne
jle
push
sahf
orl
push
inc
shrb
inc
mov
xchg
cmpsb
jmp
or
mov
adc
mov
mov
adc
dec
gs
push
sub
pushw
ja
xchg
orb
iret
pushf
or
mov
or
and
lcall
and
sbb
test
pop
push
int
out
call
nop
lcall
movsb
fwait
adc
xchg
or
ja
mov
jmp
cmp
sbb
xchg
movsl
jns
add
stos
sbb
mov
mov
ror
rol
cmpsb
xchg
pushf
and
jmp
mov
xchg
pop
dec
adc
lods
mov
sbb
mov
cs
bound
or
xchg
mov
inc
sti
push
es
mov
pusha
mov
jno
shlb
xchg
xchg
mov
es
pop
fimuls
or
mov
pop
cwtl
shlb
mov
mov
xchg
sbb
pop
add
test
inc
lcall
sbb
jo
outsb
mov
cltd
or
daa
adc
jae
gs
lret
leave
xchg
add
pop
xchg
pop
adc
pop
ja
std
mov
cmp
pop
xchg
sbb
push
lea
pop
fwait
mov
push
mov
adc
push
sahf
inc
inc
andl
aas
mov
test
bound
scas
aaa
lcall
aas
sbb
jns
jp
mov
cwtl
xchg
aas
mov
or
or
cwtl
add
push
mov
jbe
mov
push
pop
mov
add
popa
test
sbb
test
xchg
mov
rcrb
cmpb
cs
mov
inc
mov
mov
inc
lcall
mov
cmp
add
push
es
pusha
jns
fcmovnu
jmp
lcall
ficoms
nop
and
add
mov
test
xor
cmpsl
nop
iret
sub
je
pop
out
dec
adc
pop
sub
pushf
jl
dec
xchg
and
nop
xchg
out
iret
adc
popf
or
rcrb
sahf
jns
xlat
pusha
inc
mov
adc
add
pop
movl
in
or
or
movsl
add
xlat
or
mov
js
push
mov
xor
cltd
mov
enter
mov
add
lret
test
sbb
xchg
rorb
mov
into
xor
add
or
aam
pop
lcall
dec
or
or
xor
lock
sbb
cmpsb
pop
mov
ret
cmp
xchg
sahf
inc
push
decb
out
inc
mov
add
rcrb
or
adc
sbb
outsb
fldl
or
cmovl
add
fbstp
js
jle
xchg
xchg
or
bound
cmp
sbb
mov
orb
xchg
add
aaa
repz
add
cwtl
or
mov
movsl
adc
mov
mov
adc
ficomps
add
pcmpeqb
into
mov
xor
push
insb
push
aaa
sbb
dec
lods
pop
mov
mov
sbb
dec
adc
out
sti
dec
shlb
adc
cwtl
xchg
pop
pop
aaa
test
and
je
inc
dec
test
sbb
test
xchg
push
in
adc
mov
lds
sbb
nop
add
and
cmp
add
fcompl
pop
push
fstps
fcomps
add
ret
mov
popf
add
mov
jnp
pop
sub
enter
mov
mov
xor
ficompl
lcall
sbb
fwait
adc
test
push
xor
push
outsb
mov
inc
inc
addb
std
mov
and
sub
lcall
cmp
mov
icebp
xchg
pop
dec
jg
orl
or
mov
mov
mov
inc
xor
adc
pop
sbb
cwtl
lcall
adc
rolb
mov
stc
push
push
push
add
pop
jb
popf
nop
mov
xchg
rcrb
mov
in
and
cmpsl
or
daa
cmc
cmpsb
cmpsl
add
and
mov
adc
mov
lea
insb
pop
and
sbb
sbb
adc
mov
mov
rolb
or
aas
sub
nop
ds
xchg
sbb
bound
add
les
or
xchg
or
sub
mov
pop
sbb
and
sbb
cmpsb
adcl
roll
sub
lahf
adc
sbb
push
xchg
cltd
jb
jbe
subl
add
nop
inc
mov
jae
ret
pop
sbb
push
or
lret
cmp
or
mov
jbe
sbb
mov
stc
inc
fidivrl
int3
es
hlt
pushf
xor
adc
roll
add
nop
loope
std
mov
xlat
sbb
rol
pop
add
add
cmp
jae
rcrb
test
sbb
mov
ret
mov
jmp
push
int3
shll
jb
lret
mov
sub
sbb
xchg
je
in
xor
xchg
mov
xchg
pushf
sbb
adc
mov
or
mov
inc
fsts
or
movsl
pop
mov
sub
fbld
or
sbb
stos
movsl
cmpsb
mov
mov
xor
movsb
jo,pn
or
mov
dec
cltd
lea
fsubl
outsl
arpl
cmp
xor
xor
add
ds
nop
mov
callw
lahf
xchg
fcompl
movsb
pop
and
pushf
mov
xor
cmp
or
outsb
cltd
mov
ss
aaa
xchg
lahf
mov
inc
cltd
pop
subb
sbbl
xchg
mov
pushf
subps
je
sbb
rcrb
scas
aad
xor
sbb
xor
stos
shr
pop
jnp
sbbb
aam
cmp
push
add
aam
adc
cwtl
sbb
fwait
mov
fnstcw
cli
mov
mov
stos
xchg
je
xchg
loope
xchg
cltd
cmpsb
arpl
std
push
fwait
adc
jae
cmc
mov
add
xor
sub
add
sbb
sbb
sub
cltd
mov
sub
or
mov
jnp
insl
cmpsb
je
xchg
sahf
ss
sub
cli
cmp
sub
or
test
jge
mov
and
sbb
ud2
sub
sbb
xchg
stos
hlt
rclb
add
fimuls
mov
push
add
cmpsl
lahf
outsb
add
adc
mov
adc
adc
cmpsb
mov
into
adc
lcall
fwait
or
xor
and
adc
fwait
lcall
mov
add
push
mov
and
or
mov
sub
pop
pop
cwtl
sub
or
cltd
adc
mov
test
adc
pop
cmpsl
cltd
ret
mov
mov
add
bound
sbb
and
aad
and
adc
xchg
xchg
sbb
movsl
xor
push
aas
and
nop
sbb
adc
test
mov
sbb
inc
mov
or
xchg
mov
add
add
mov
mov
add
dec
or
or
call
mov
xor
mov
xchg
xor
xchg
cmp
out
adc
mov
and
or
mov
in
xchg
cli
mov
or
test
push
cltd
pop
or
mov
xchg
lahf
adc
lods
mov
daa
jno
mov
rorb
rcll
aaa
or
nopl
push
adc
adc
jg
mov
lret
push
lcall
inc
pop
cltd
add
push
sbb
movsl
push
add
cmpsb
fwait
orl
jb
in
push
outsb
mov
or
mov
iret
push
xchg
mov
lcall
xchg
sbb
mov
mov
pop
pop
cltd
cmpsl
mov
lea
andb
out
outsl
psrlq
imul
sbb
sub
and
sahf
push
cwtl
adc
jno
mov
xor
stos
loopne
sub
xchg
mov
or
hlt
pop
and
cwtl
adc
xchg
add
pushf
rcrb
pop
push
rclb
sub
xchg
add
mov
imul
xchg
cmc
xor
test
or
xor
xchg
xchg
or
cmpsb
lds
mov
mov
adc
mov
loopne
movsl
and
push
test
stos
push
jo
add
xchg
mov
cmp
add
pop
adc
cmp
les
pop
mov
mov
fs
xchg
push
xchg
fiaddl
mov
test
push
sti
or
bound
pop
push
mov
mov
add
lcall
inc
sbb
mov
sbb
pop
cmpsb
repz
movsb
pop
pop
in
cli
lea
xchg
add
sbb
mov
popf
push
lcall
xchg
add
sbb
in
or
push
push
xchg
std
jp
in
sub
cmp
out
mov
jae
sbb
add
cvtps2pi
test
cli
adc
jmp
test
mov
dec
into
mov
add
adc
insb
outsl
rorb
loope
xlat
nopl
adc
testl
jno
mov
xchg
mov
add
and
pop
mov
push
add
mov
adc
push
add
sahf
fstpl
ret
cmp
aad
lods
xchg
mov
mov
jmp
sbbb
xor
sbb
sarl
adc
mov
movsl
dec
ja
mov
test
mov
lahf
jnp
je
cs
adc
ret
push
mov
outsl
dec
stc
arpl
rorl
push
xor
mov
sub
mov
xchg
inc
fwait
bound
jbe
data16
int
and
test
pop
jge
outsw
roll
sbb
push
je
mov
xchg
lcall
and
mov
es
inc
jg
adc
call
mov
mov
push
pop
mov
fdivl
sbb
shrb
cmpsl
xchg
inc
xchg
lret
or
mov
movsl
aaa
or
push
add
xor
aad
bound
loop
sub
fwait
dec
outsb
or
imul
loopne
scas
inc
and
push
mov
out
cs
shll
or
mov
std
je
test
repz
sbb
inc
hlt
xchg
push
out
rcrl
sbb
push
lea
mov
jp
push
scas
pop
push
faddl
sub
or
or
mov
movsb
xchg
or
aas
sbb
xchg
cmp
test
sbb
add
and
push
sbb
rcrb
mov
lcall
fistps
mov
xchg
lcall
mov
aaa
pop
mov
mov
adc
xchg
inc
jo
add
daa
adc
push
cld
cmpsb
rorl
lahf
dec
xchg
movb
or
xchg
xchg
adc
inc
cmpsb
rolb
push
inc
or
add
and
or
outsb
jb
adc
add
es
inc
sbb
mov
cmp
sub
xchg
mov
push
hlt
sahf
mov
outsb
cmp
adc
arpl
and
nop
add
cmpsb
xor
cwtl
pushf
je
or
cmp
pop
xchg
sbb
scas
test
or
cltd
or
mov
mov
lret
pop
or
xchg
dec
aas
adc
fstps
push
pop
or
fs
and
repz
insb
and
pop
push
mov
mov
rcll
inc
pop
sbb
add
popf
mov
rcrb
sub
mov
shlb
jle
push
nop
daa
data16
and
or
fwait
dec
addl
enter
ret
sub
inc
sahf
pushf
jno
mov
sbb
fcompl
test
sbb
je
jnp
adc
cwtl
inc
into
movsb
jl
sbb
adc
xor
xchg
pushf
sbb
test
jle
sbb
adc
jl
pop
push
adc
cmp
push
pop
iret
test
cli
push
jne
mov
cmp
add
cmp
sbb
push
xchg
mov
ret
inc
mov
stc
call
dec
ja
call
mov
test
cmpsl
xor
or
or
xor
and
cld
sbb
add
scas
xchg
sbb
xlat
nop
fisttps
add
push
jo
int3
cmp
or
test
sahf
lcall
sub
mov
sbb
mov
ret
xor
cpuid
dec
add
aas
pop
sub
push
incb
andb
and
add
xchg
mov
adc
xchg
jb
jb
out
mov
je
jbe
in
inc
and
cmpsb
mov
cmovne
cs
icebp
sbb
iret
or
fwait
xchg
cs
or
dec
mov
stc
mov
aad
cmp
test
push
and
mov
mov
add
cli
cmp
lods
es
iret
sbb
subl
push
sbb
ljmp
jg
jno
sub
xchg
in
mov
add
push
iret
sbb
pushf
insb
loopne
aaa
sarb
bnd
push
test
dec
mov
push
loop
add
sbb
xor
xchg
sbb
mov
cmp
pop
insl
jg
add
push
sti
xchg
xchg
or
mov
outsb
inc
cmpsb
addr16
in
cli
inc
pop
lcall
xchg
pushf
mov
cmpsb
loop
add
xor
sub
mov
and
xchg
mov
mov
jp
dec
mov
and
mov
inc
fdivrs
sbb
daa
fwait
bound
out
cmp
xlat
jae
mov
add
push
mov
cltd
adc
orb
fldcw
mov
adc
mov
or
mov
jecxz
push
add
inc
sbb
jle
cwtl
sub
sub
or
sub
sub
pop
cmp
inc
pop
xchg
fsubrp
mov
dec
xchg
lcall
adc
mov
test
or
xchg
sti
out
mov
cltd
fldenv
ret
xchg
mov
sub
adc
mov
mov
or
cltd
cmp
add
pop
pop
or
mov
xlat
xorl
loope
cmp
cmpsl
xchg
add
lods
and
insb
add
sub
and
xchg
lahf
xchg
xchg
dec
fwait
adcl
lods
pop
mov
adc
pop
xor
in
dec
cmpl
jp
xor
and
in
mov
or
add
mov
or
lods
mov
stos
iret
sub
sub
xor
leave
xor
mov
push
jmp
nop
add
sahf
sbb
pushf
lcall
push
pop
pusha
pop
adc
jg
mov
test
mov
mov
inc
add
mov
pop
fldenv
addl
xchg
or
inc
cmp
jbe
mov
pop
or
sbb
dec
push
or
lcall
scas
lods
mov
fsubs
rorl
or
xchg
popaw
jg
sbb
movsb
or
je
sub
fimull
mov
in
fildll
hlt
xchg
lcall
xor
cltd
pop
mov
pop
pop
fmuls
jg
add
sub
mov
cmp
cmp
dec
sub
xor
movsb
sub
or
xor
pop
mov
mull
paddsb
es
push
push
hlt
add
add
and
xchg
daa
mov
mov
adc
orl
adc
lahf
xchg
add
daa
sbbb
sbb
sbb
je
or
decl
sbb
and
sarl
or
ret
or
icebp
aam
xchg
sbb
mov
movsl
adc
in
fwait
and
mov
or
stos
sbb
std
xchg
cmp
lahf
ret
xor
ds
sub
xchg
stos
mov
sbb
in
pop
xchg
add
rcrl
nop
mov
mov
repz
lret
sbb
xchg
sub
pop
adc
adc
fisttpll
add
cmpsb
scas
pop
ljmp
mov
jecxz
loop
out
add
mov
xlat
cmp
addl
sbb
mov
inc
inc
pushf
pop
imul
movsb
cmpsb
jo
sarl
mov
daa
out
sbb
pop
movb
mov
push
vmptrst
sbb
cs
cmpsb
adc
test
cmp
push
push
xchg
add
cltd
or
cli
inc
xor
movsb
and
int
lods
and
inc
mov
cli
xchg
xchg
pushf
pop
je
push
xor
jge
aaa
sbbl
inc
mov
aaa
in
or
xchg
pushf
sub
and
sub
cmpsl
mov
cmp
rolb
sub
faddp
sbb
mov
mov
repnz
scas
sub
lret
mov
es
sub
cmc
cvttps2pi
adc
movsl
add
out
mov
outsb
int3
and
push
je
mov
pop
ljmp
andb
pop
push
aas
adc
in
pop
jb
enter
inc
push
or
mov
and
leave
arpl
xchg
or
into
mov
add
dec
insl
lea
mov
aas
dec
cmpsl
xchg
dec
imul
inc
adc
push
adc
inc
sbb
lods
pop
cmp
mov
xchg
fcomip
adc
loopne
inc
test
sbb
addb
pop
daa
stc
out
out
xchg
out
in
mov
xor
cmp
pop
or
push
sbb
sbb
jno
xor
mov
or
sub
cs
mov
in
sbb
test
cmpsl
cmc
in
lcall
test
pop
push
inc
add
rcr
movsb
pop
xchg
pop
inc
xchg
jbe
insb
xchg
and
pop
adc
rcll
sbb
in
push
mov
movsl
mov
xor
lds
jle
sbb
xchg
jb
outsl
and
lahf
pop
xor
mov
pushf
sbb
xchg
jne
ja
movsl
inc
sbb
adc
sar
addr16
stc
xchg
test
jle
pop
pop
daa
call
push
rclb
xchg
lahf
or
in
lcall
fildll
pop
push
adc
shl
mov
adc
jge
xor
movsl
push
push
cmpsl
mov
mov
xchg
pop
dec
ficomps
mov
or
mov
or
nop
nop
je
fisubs
add
jmp
xchg
dec
fwait
sbb
int3
pop
xchg
sbb
test
mov
xchg
mov
fisubl
add
or
add
pop
sahf
insl
nop
xchg
push
push
mov
cmpsb
mov
je
mov
in
xlat
aaa
test
mov
es
adc
fwait
push
sub
test
aas
sahf
xchg
sbb
pop
pop
sahf
or
cmpsb
test
mov
rorl
cmpsb
push
dec
lds
stos
mov
jge
stc
xchg
imul
adc
jg
mov
jp
sahf
ja
test
scas
sbb
mov
sbb
mov
cmc
jo
add
ds
adc
lahf
inc
xor
mov
mov
sbb
pop
jecxz
test
sbb
test
add
es
or
cmp
mov
xor
fwait
mov
mov
test
daa
fsubrs
or
pop
ljmp
lahf
sbb
dec
xchg
pushf
dec
xor
adc
add
pop
pop
repz
lods
and
inc
push
jb
outsl
aaa
cmpl
add
rorl
aaa
mov
cwtl
adc
call
adc
add
sbb
insb
mov
dec
out
js
push
sbb
fcoml
call
push
daa
add
xchg
jle
lcall
xor
cmovp
test
in
jns
add
je
sahf
add
xchg
push
mov
popf
push
jl
pop
sub
cmp
adc
mov
stc
call
loope
out
sahf
imul
dec
addr16
mov
push
xor
mov
stc
mov
nop
push
mov
xchg
pop
sbb
lcall
insl
cmpsl
mov
daa
cmpsb
mov
add
pop
mov
pop
adc
movsl
sub
cmpsl
xchg
pop
cmp
xchg
and
and
push
cmc
sbb
std
or
jb
jp,pn
ret
jge
adc
pop
or
aas
pop
sbb
xchg
test
lahf
scas
cmp
push
fwait
jge,pt
xchg
shlb
pop
lea
add
pushf
nop
and
std
or
cwtl
xchg
or
std
dec
movb
push
cmpsb
fcoms
push
sbb
js
cmpsb
je
sbb
xchg
pop
jecxz
jnp
jmp
or
xor
and
stos
sbb
hlt
inc
adc
out
lahf
push
push
xchg
dec
adc
fistpl
aas
pop
xchg
mov
push
in
cltd
xchg
or
pop
add
xchg
sbb
jbe
int
sti
fwait
xchg
mov
or
fwait
mov
or
call
jge
rcrb
add
inc
sub
pop
xor
lods
seta
mov
xchg
dec
xchg
xchg
adc
out
push
fimuls
cltd
insl
adc
stc
xor
test
outsb
stc
or
stos
mov
orb
sub
push
sub
push
mov
aam
ret
xor
jb
jbe
adc
push
adc
or
mov
push
mov
mov
and
dec
lahf
ret
arpl
jae
mov
add
call
dec
aad
sahf
pop
push
jbe
mov
or
lods
fists
adc
sub
mov
adc
or
cmp
push
pop
jno
es
into
repnz
dec
and
push
movsb
lcall
ficoml
adc
mov
sbb
adc
jbe
xchg
rep
stos
add
sub
xor
adc
mov
sub
fdivrl
adc
jb
jle
pushf
pop
push
xchg
push
adc
pop
mov
in
adc
stos
pusha
mov
daa
hlt
adc
in
sub
pop
stc
mov
es
mov
inc
aas
jp
pop
sub
adc
lret
push
into
sub
add
fbld
inc
or
add
orb
pop
or
mov
imul
mov
inc
add
pop
stc
pop
dec
pop
gs
ja
pop
adc
or
out
data16
or
sbb
ds
adc
add
mov
or
cwtl
push
or
fmulp
xchg
std
movb
sbb
fbstp
adc
cli
sub
or
lcall
lds
and
bound
das
mov
mov
aas
or
cmpsl
jnp
lods
sbb
xor
jo
xor
mov
lock
pop
rcrl
sbb
xchg
mov
daa
fcoms
jns
cwtl
adc
and
or
icebp
or
pushf
clc
push
mov
cmpsb
push
cmpsl
sub
xor
sbb
mov
lea
jmp
mov
jnp
jbe
adc
int3
sub
cwtl
jno
inc
add
sbb
imul
cmpsb
fisubrs
and
cmpsb
je
mov
xchg
into
call
and
push
and
mov
daa
xchg
xchg
sub
and
lock
jb
adc
test
xchg
nop
jle
mov
test
jbe
mov
push
movsl
mov
fimuls
popa
pop
pop
add
imul
adc
adc
push
xor
xchg
sti
rcrb
push
aaa
push
mov
fwait
std
jge
fisttpll
sub
mov
xchg
sbb
adc
jnp
mov
loopne
jle
cmpsl
sbb
or
cmp
lea
inc
mov
jno
sbb
and
movsb
dec
cmp
lock
xor
mov
push
mov
mov
nop
adcl
pop
pop
je
mov
mov
mov
lea
push
pop
and
push
and
pop
dec
mov
xchg
adc
push
push
in
cltd
outsl
jg
push
add
xchg
lret
cmpsb
sub
pop
mov
pop
push
xor
mov
loop
inc
push
pop
mov
pop
aaa
mov
or
mov
shll
or
sbb
sub
sbb
adc
dec
mov
sbbl
aam
out
push
jbe
add
adc
pop
or
or
sub
xchg
dec
inc
xchg
add
leave
or
bound
pop
clc
xchg
pop
out
add
adc
fmull
xchg
xchg
cmpl
sbb
sahf
pop
or
sub
xchg
movsl
pop
cwtl
out
mov
bound
adc
or
hlt
pop
outsb
mov
adc
add
aam
jmp
xchg
stc
fstl
daa
adcb
xchg
lds
mov
cli
dec
fistpll
pop
sahf
pmaddwd
and
hlt
and
push
cltd
mov
add
dec
mov
pop
scas
and
das
inc
sbb
mov
inc
xchg
nop
fwait
pop
loopne
aas
jb
add
push
xchg
mov
sti
fsubrs
cmp
jb
adc
loop
mov
pop
aam
xchg
imul
add
cmp
dec
sahf
in
mov
je
xchg
dec
and
sbb
mov
mov
je
cwtl
ret
es
daa
adc
push
mov
inc
movsb
sbbl
dec
sbb
adc
pop
xlat
pop
push
sbb
jb
call
sbb
mov
or
add
movsl
je
push
iret
aam
mov
xchg
or
mov
mov
jns
adc
mov
orl
sbb
cwtl
inc
inc
lds
pop
cmpsl
in
lods
sbb
cltd
adc
outsl
xchg
inc
mov
subb
sarl
fwait
int
xor
jle
adc
nop
or
sub
in
lea
cwtl
inc
ss
and
lcall
inc
push
cltd
or
sbb
adc
cs
pcmpeqd
xchg
push
or
jbe
loope
gs
push
imul
cmp
cmp
pop
add
sub
sub
and
mov
inc
add
dec
fisubs
sbb
mov
sbb
pop
or
adc
adc
jg
adc
dec
mov
dec
mov
sbb
xchg
push
adc
imul
add
stc
cmp
cmpsl
adc
cmp
test
sbb
pop
adc
and
sbb
sbb
jl
pop
xlat
xchg
jg
pop
dec
mov
xor
or
jbe
adc
xchg
pop
je
dec
pop
imul
pop
sbb
lahf
add
xchg
dec
jp
mov
scas
mov
stc
lcall
scas
push
pop
xchg
fwait
sahf
cmpsb
xchg
pop
adc
cmp
pop
xor
jecxz
xchg
fs
xor
lfs
adc
mov
xchg
fs
mov
add
ret
dec
cmpsl
lahf
inc
xchg
mov
popl
mov
or
out
mov
push
cltd
mov
and
inc
jecxz
xor
andb
imul
pop
fidivrs
mov
fnstcw
imul
adc
push
push
bound
sbb
and
mov
addr16
mov
jno
pop
xor
mov
test
push
or
insb
mov
pop
gs
and
aas
xor
sbb
test
sbb
mov
mov
and
xchg
pop
push
or
data16
in
ljmp
ss
seto
movsl
int
jg
dec
stc
sub
sub
xor
es
test
lock
or
iret
imul
sbb
fistpll
or
and
lahf
cmpsb
arpl
sbb
sbb
stc
fsts
lods
rcrb
movsl
orl
push
sbb
adc
jo
in
inc
cli
push
or
dec
adc
decb
orl
mov
cmovg
adc
es
push
adc
divl
aad
add
or
ret
arpl
jmp
cmpsl
adc
xchg
mov
scas
fwait
aad
sbb
add
icebp
cmpsb
cwtl
inc
inc
sbb
jb
out
or
mov
xor
mov
xchg
rorl
movb
cwtl
leave
push
mov
sbb
mov
cltd
mov
jb
jbe
and
nop
imul
pop
or
mov
xor
sbb
sub
popa
mov
push
sbb
std
lcall
xchg
add
nop
xorb
dec
lods
pop
dec
les
iret
int
movhps
mov
push
mov
and
mov
mov
cmp
insl
movsl
adc
add
daa
pop
adc
mov
nop
into
inc
stos
and
pusha
pop
loopne
inc
je
daa
inc
sub
or
andb
or
std
out
out
int
pop
inc
pop
or
enter
mov
push
cmc
mov
pop
mov
sub
xor
sbb
sub
lcall
and
mov
add
or
pop
xchg
jb
adc
add
pop
sub
inc
test
push
addl
xchg
or
pop
pop
enter
cmpsl
and
mov
daa
sbb
sbb
clc
stc
pop
and
mov
xor
sbb
movsb
icebp
or
mov
add
xchg
jl,pn
lds
and
jb
sub
daa
and
adc
sbb
nop
adc
ja,pn
jbe
sbb
dec
pop
push
dec
cmpsb
bound
and
xchg
mov
shlb
push
mov
adc
mov
adc
mov
mov
sbbl
es
push
add
or
data16
pop
and
outsl
addl
mov
xchg
cli
and
out
add
ljmp
mov
movhps
bound
add
addb
imul
movsl
rcrb
mov
or
cmpsb
add
xlat
lds
xchg
xchg
mov
xchg
sbb
pop
lahf
pop
adc
sbb
mov
xchg
pop
jnp
pushf
dec
mov
sub
sub
fistpl
jnp
lahf
lods
pop
mov
fisubrl
sbb
movsb
sahf
mov
mov
jle
or
sarl
lock
stos
inc
outsb
xchg
sub
mov
xor
pop
lcall
daa
or
je
in
in
push
arpl
es
lcall
out
sbbb
mov
jbe
mov
lahf
add
pusha
dec
pusha
pop
jle
adc
and
mov
add
adcl
add
adc
jg
mov
fwait
test
mov
cmpsb
add
ja
sbb
push
xchg
outsb
rcrl
dec
sbb
inc
test
xchg
xchg
fwait
pop
adc
jmp
inc
mov
xchg
dec
sbb
adc
sbb
mov
daa
rorl
pop
sbb
data16
aas
pop
pop
adc
mov
cmp
adc
push
pop
adc
js
inc
repnz
pop
cmpsl
insb
push
mov
push
and
pop
sub
jns
pop
bound
imul
loope
cli
mov
sbb
test
push
test
sub
adc
mov
movsl
jne
add
mov
and
cmp
daa
pop
add
stos
sub
cwtl
push
mov
push
pop
add
or
sub
mov
andb
dec
xor
adc
mov
add
mov
pop
push
mov
rorb
lock
or
sub
test
add
in
orl
pop
add
pop
aad
sbb
aad
sti
mov
pop
mov
lcall
in
dec
mov
ds
adc
push
and
stos
andb
or
fildll
aad
or
fwait
pop
inc
xchg
std
sbb
cmp
nop
addr16
xchg
jg
add
mov
add
add
outsb
mov
daa
cmpsl
mov
lret
or
sub
xor
mov
add
and
lcall
and
or
mov
add
mov
sbb
in
out
xchg
adc
adc
mov
sub
mov
pop
and
cmpsb
mov
sub
fwait
mov
xchg
pop
push
or
lods
pop
std
test
jb
xor
jmp
pop
outsb
mov
andl
pop
xor
cmp
adc
sahf
aaa
stos
mov
incb
fidivl
sbb
mov
cltd
addb
mov
data16
int3
scas
xor
jle
dec
push
xchg
sbb
lea
pusha
mov
fisttps
jb
dec
jno
data16
mov
loopne
mov
dec
xchg
rorb
xchg
fcomps
mov
stos
inc
jo
add
out
fcoml
pop
xchg
int3
int
push
nop
xor
add
mov
iret
test
mov
lods
and
add
cmpsl
mov
mov
jg
pop
jl
xor
pop
out
fdivrp
cmpsl
movsl
pop
sub
and
adc
cmp
push
sbb
push
or
call
sbb
int
insb
or
adc
push
js
adc
xchg
sub
out
aaa
aam
adc
pop
inc
or
sbb
or
sti
mov
push
cmpl
fwait
sbb
cltd
insb
sbb
add
or
and
push
jne
adc
mov
add
cmpsl
mov
repnz
xchg
cs
mov
cmp
jbe
jb
lods
fwait
cmpsb
add
and
add
and
cmp
push
adc
lcall
fildl
out
je
sub
jbe
imull
xchg
aas
inc
or
xchg
cltd
sbb
cli
fidivrl
or
daa
xchg
lods
sbb
jbe
sub
cwtl
lahf
pushf
icebp
fiaddl
inc
xchg
mov
sarb
pushf
es
loopne
inc
js
push
into
out
inc
inc
nop
push
push
xchg
mov
subb
push
inc
adc
scas
push
jge
outsb
arpl
mov
xor
in
inc
or
lret
dec
xchg
or
test
inc
or
mov
mov
insb
xchg
prefetch
sub
add
jle
lahf
or
insl
mov
xchg
adc
daa
je
add
mov
pop
push
cmpsb
nop
sub
mov
sbb
pop
dec
jb
mov
mov
es
adc
out
push
testl
sti
add
stc
adc
test
pop
mov
mov
dec
adc
je
or
rol
stos
adc
fidivl
into
nopl
sbb
sub
cmpsb
xor
add
cltd
adc
out
push
adc
cmp
daa
out
cli
mov
mov
push
pop
cwtl
or
push
outsl
mov
add
data16
pushf
xchg
push
shlb
cwtl
push
sbb
add
mov
sbbl
cmpsl
ret
push
mov
fnstsw
push
or
xor
xchg
xchg
xchg
insb
adc
or
add
orb
mov
es
jb
jb
mov
adc
lret
push
mov
push
fimuls
mov
xchg
adc
sub
mov
xchg
cmc
call
lret
xchg
push
adc
cmpb
xchg
and
data16
es
jbe
jb
and
xchg
cmp
cmp
adc
imul
adc
arpl
cmp
aaa
adc
adc
subl
adc
or
movsl
sub
mov
mov
inc
xchg
xchg
adc
xchg
lahf
jns
addr16
pop
mov
adc
and
cli
sub
push
lret
push
test
es
sbb
lea
or
adcl
adc
cwtl
xchg
sahf
push
pop
inc
add
sbb
adc
ja
pop
ss
test
ds
and
mov
xchg
cmpsb
mov
es
fiaddl
sahf
mov
xchg
mov
mov
lahf
push
cltd
inc
movsl
xchg
inc
or
xchg
pop
fistps
fstl
dec
mov
add
pusha
ss
cmp
cli
out
mov
cmc
lds
ret
inc
push
cld
mov
inc
mov
mov
and
add
or
jp
test
mov
sub
mov
jbe
hlt
rclb
xchg
sarb
or
insl
or
mov
push
sub
add
xor
imul
sub
mov
aaa
aam
mov
aas
lods
adc
dec
gs
adc
stc
imul
orb
mov
push
mov
inc
popfw
add
fimuls
sahf
fbld
push
push
sbbb
and
and
movb
sub
xchg
inc
mov
xchg
and
adc
sub
mov
mov
shrb
xchg
jle
fucomip
push
mov
mov
push
data16
dec
mov
mov
push
add
test
mov
sti
jne
ficoms
add
mov
pop
je
mov
xchg
loope
inc
lahf
xchg
popf
test
push
push
xorl
xchg
adc
adc
je
jno
pop
rorb
nop
sbb
mov
lahf
ljmp
push
aad
adc
hlt
mov
cs
add
rorb
incb
outsb
dec
mov
push
xchg
jo
daa
jno
pop
sub
mov
fldcw
xchg
movaps
push
test
dec
out
sbb
xchg
aad
addr16
int
mov
pop
jge
repnz
adc
and
inc
adc
inc
and
cltd
pop
jle
sahf
test
aaa
or
mov
push
sbbl
bound
add
inc
stos
dec
out
xchg
lahf
adc
mov
out
or
je
jb
jb
mov
dec
es
add
mov
daa
lret
ds
cwtl
adc
jb
mov
or
or
jb
ds
mov
test
pop
jl
hlt
out
rclb
push
mov
outsb
int3
nop
sub
pop
mov
mov
imul
lret
dec
pop
inc
mov
inc
xchg
jge
and
nop
inc
mov
pop
sbb
dec
scas
pop
es
insl
dec
xor
push
cmp
and
mov
fwait
add
jg
mov
pop
nop
mov
bound
mov
sbbl
adc
pop
sub
movsl
sahf
sahf
jp
mov
inc
mov
movsl
cmp
pop
lods
xchg
add
push
push
ja
dec
daa
mov
mov
jbe
lahf
push
pop
and
add
pushf
sahf
sbb
lcall
push
mov
inc
or
pushf
sbb
inc
sbb
cmp
lahf
lcall
leave
cmpsb
push
sbb
lcall
add
js
jg
mov
gs
xor
cmp
or
enter
mov
push
mov
lods
cmpsb
in
in
sbb
push
std
aaa
jnp
mov
jmp
int3
mov
fwait
jns
or
mov
inc
aas
dec
adc
fwait
roll
cwtl
xchg
sbb
or
xchg
outsb
adc
sub
or
push
add
stos
sbb
mov
sti
xor
ss
dec
or
je
xchg
sahf
outsl
lods
lock
and
cs
xchg
sub
mov
test
iret
fcmovne
and
add
aad
fwait
jl
ss
and
inc
pop
test
push
cmpsl
or
dec
testl
es
and
xchg
xor
outsb
sbb
wrmsr
mov
add
ficompl
add
adc
icebp
dec
and
sahf
fnstenv
cmpsl
outsb
adc
sub
lods
xchg
mov
inc
movsl
cmpsb
inc
push
push
mov
pop
fdivs
es
jle
pushf
cmpsl
fwait
and
mov
add
orl
stc
sahf
adc
sbbl
add
or
test
andb
adc
shrl
cmpb
cs
xchg
xor
pop
das
xor
pop
leave
mov
adc
test
and
and
test
adc
fsubrp
es
xor
pop
push
xchg
inc
test
xor
stos
mov
iret
sbb
lahf
dec
pop
xchg
scas
mov
xor
xchg
inc
xchg
aam
or
cmpsb
push
mov
movsl
sbb
in
leave
fstps
adc
icebp
sbb
and
out
cld
cltd
jmp
je
adc
daa
mov
cltd
mov
into
or
sbb
jg
rcrb
mov
and
push
adc
mov
inc
es
pop
movsl
push
data16
and
aam
or
mov
sbbl
xchg
test
push
xchg
push
bound
xchg
or
dec
xor
lods
adc
or
mov
ja
cmpsb
inc
sbb
test
push
mov
andl
inc
loop
or
pop
push
push
jnp
mov
jne
and
xchg
psubsb
push
add
mov
sub
xor
aaa
pop
mov
or
pop
cmp
pop
xor
int
jne
xchg
push
adc
adc
lcall
push
jl
or
jecxz
insb
xchg
subl
fcomps
cmpsb
cmpsb
dec
aas
pop
mov
sbb
jecxz
dec
lods
dec
mov
daa
sbbl
jae
dec
pop
adc
sbb
cmp
xchg
inc
sub
sbb
adc
comiss
adc
adc
or
mov
or
pushf
adc
adc
pop
mov
cmpsl
shrb
and
inc
mov
mov
sub
xchg
push
cmp
push
and
orb
xor
mov
adc
clc
push
inc
outsl
pop
push
rclb
aas
add
xchg
mov
xchg
sbb
mov
sbb
aaa
stos
mov
sti
add
dec
inc
mov
shll
jle
pushf
jae
mov
sbb
pop
in
adc
sub
and
inc
cmp
or
mov
sahf
sahf
dec
mov
or
jbe
andl
adc
jl
mov
popf
pushf
push
rcrb
dec
adcb
mov
xchg
mov
pop
adc
fs
adc
inc
aad
inc
cltd
jb
cmp
js
xchg
sbb
sbb
jb
mov
mov
movsl
adc
xchg
add
push
syscall
pop
and
pop
sti
cmpsb
xorb
into
icebp
mov
xchg
addr16
cwtl
fwait
mov
xchg
and
push
movsb
adc
adc
ficoms
inc
dec
adc
movsb
es
add
inc
jb
push
pop
lods
push
pop
xchg
adc
mov
add
mov
or
out
inc
push
sbb
or
xor
testl
nop
jge
xor
cwtl
dec
pop
adc
pcmpeqd
sbb
dec
sbb
mov
xor
cmpl
cmpsl
push
adc
dec
sbb
mov
lret
jp
rclb
add
mov
and
pop
mov
push
sub
cmp
icebp
push
andb
icebp
mov
xchg
push
sidtl
cmpsl
xchg
out
gs
arpl
addb
in
adc
and
pop
adc
or
xchg
xlat
xchg
sbb
adc
aaa
mov
lret
xor
or
daa
sbb
mov
add
test
lcall
sahf
adc
mov
mov
mov
sbb
or
adc
pop
xchg
cmpsb
xor
lret
or
fsubrs
mov
cmpsb
nop
pushf
rolb
fwait
xchg
sbb
push
mov
sbb
pop
push
dec
and
lcall
add
pushf
jns
xchg
lea
test
or
data16
or
push
sub
stos
mov
push
pushf
fists
ja
lahf
cld
fstpl
pop
daa
lahf
es
and
repz
lahf
insl
inc
je
cmc
notb
mov
outsb
sub
fildll
or
xor
adc
or
xchg
ds
xchg
mov
sahf
cwtl
imul
push
dec
push
and
ds
pushf
mov
add
sub
add
mov
addb
cmpsl
decb
arpl
add
and
cmp
dec
aaa
xchg
scas
nop
mov
sub
xor
lea
mov
mov
pop
push
xlat
add
inc
int3
xor
push
sub
nop
imul
sbb
cmpsb
xchg
mov
cmp
lar
add
call
lock
or
cmpsb
dec
in
add
movsl
pushl
and
mov
pop
xchg
inc
nop
pop
lods
adc
push
inc
data16
mov
xor
fs
adc
mov
cmp
je
test
xor
movsl
push
mov
es
stos
sub
mov
shlb
adc
pop
scas
jns
outsb
popa
add
nop
adc
and
adc
sbb
xor
pop
adc
add
cmc
inc
lret
test
mov
sub
ljmp
sbbb
adc
lahf
sahf
movsl
stos
inc
push
test
mov
inc
jae
inc
adc
xchg
cmp
test
and
nop
xchg
xchg
test
pop
adc
inc
xor
out
sbb
es
test
add
or
sbb
fisubrs
lahf
insl
ss
xchg
add
sahf
mov
mov
xchg
mov
roll
popf
mov
sahf
fistps
inc
push
add
lock
aas
sbb
pop
loopne
stc
adc
or
mov
jl
mov
push
in
mov
mov
sahf
push
mov
or
adc
and
adc
mov
inc
mov
lahf
stc
daa
sbb
sbb
adc
nop
add
sbb
or
mov
cmp
fwait
mov
test
loop
lahf
cmpxchg
xor
pop
or
mov
jno
and
or
test
xchg
and
inc
xchg
or
test
sbb
pop
cmpsb
pushf
xor
sub
popa
add
js
jne
xchg
pop
cvtdq2ps
dec
fwait
adc
data16
adc
and
stc
ret
inc
insb
aaa
sbb
mov
hlt
hlt
inc
fisubrs
pop
dec
mov
inc
adc
cmpsl
inc
xchg
push
mov
pop
adc
mov
sbb
mov
test
or
in
int3
rolb
cmpsb
fisttpl
sbb
std
mov
aam
ret
add
into
pop
lods
xor
fcoms
es
dec
jecxz
jmp
movl
mov
outsl
sub
mov
in
sbbb
or
cmpsl
sub
les
or
push
cmp
xchg
xor
testl
cmpsb
bound
jle
pop
pushf
and
and
or
inc
push
and
push
mov
inc
add
mov
adc
mov
sub
or
aaa
mov
adc
sub
cmc
nop
mov
mov
sub
or
mov
mov
sahf
jmp
stc
sbb
daa
addl
inc
dec
pushf
jno
cmpsb
add
or
lcall
push
stos
scas
dec
cmpsb
mov
fistpll
sbb
pop
sub
lock
pop
test
pop
movsl
aam
adc
decb
mov
loopne
dec
push
ss
and
mov
push
xor
int3
pop
pop
pop
test
and
mov
aaa
sub
stc
mov
loopne
pop
ja
inc
adc
cmp
test
inc
fistps
push
stos
xor
mov
push
lock
adc
mov
shll
lret
jg
es
cmc
xchg
mov
je
lahf
adc
int
cmp
shlb
xor
leave
jge
xor
daa
mov
cmpsb
xchg
and
aas
xchg
push
xchg
xchg
sbb
xchg
or
and
adc
and
jg
adc
or
xorl
scas
push
daa
js
push
daa
cmpsb
jl
push
adc
jg
push
in
lahf
sbb
roll
and
mov
ficoml
inc
sbb
xchg
adc
mov
xchg
push
and
leave
cmpsb
cmp
pop
data16
in
pop
das
mov
pop
or
adcl
lret
iret
pop
or
sbb
sti
or
popa
xchg
mov
fs
rorb
mov
mov
pop
push
pop
sbb
mov
push
es
xlat
hlt
in
lds
dec
in
mov
pop
pop
mov
adc
fwait
xchg
mov
xchg
mov
add
ret
push
lret
or
stos
insb
sbb
test
cmp
sbb
xorl
add
mov
mov
addl
lods
stos
aas
add
jne
loope
pop
icebp
or
scas
pop
pop
aas
or
movsb
sub
lahf
cmp
movsb
pop
pop
movsl
sbb
jo
xor
out
mov
sbb
and
lret
xchg
mov
mov
sub
or
mov
es
jo
in
xchg
push
sub
cmpsl
jb
mov
test
cmp
add
sbb
mov
jne
and
inc
pop
mov
and
je
add
into
mov
pop
jb
adc
adc
xor
iret
cwtl
cs
pushf
les
int3
sub
stos
xchg
cmpsl
push
dec
pusha
and
adc
cmp
test
in
mov
mov
es
sbb
add
xchg
or
and
sbb
dec
add
jbe
jb
dec
mov
sahf
dec
and
gs
mov
cli
sbb
inc
add
lods
inc
push
pop
dec
or
sbbb
cmp
lcall
push
nop
je
invd
add
pop
dec
xorb
call
je
jbe
addr16
mov
lahf
fwait
lcall
pop
cld
cmc
add
adc
push
or
ds
xchg
xchg
cmp
dec
sub
adc
adc
arpl
pop
push
xchg
jns
or
mov
lcall
sbb
icebp
jno
push
dec
sbb
out
out
cmpsb
or
pop
data16
out
pop
mov
xchg
movsb
cmpsl
adc
or
sub
mov
adc
dec
mov
in
pop
rcrb
mulb
sbb
push
jl
fs
jb
aas
or
and
add
lahf
mov
xor
or
mov
inc
cwtl
sbb
cli
add
mov
jle
pop
loop
dec
jmp
and
mov
or
std
sbb
push
sub
sub
sub
mov
xchg
jne
xchg
jmp
or
or
mov
dec
std
stos
ret
push
cmp
cmpsb
jg
test
mov
shrl
adc
or
mov
mov
fadds
sbb
popl
mov
sub
fwait
cmpsl
and
mov
xlat
ret
dec
xchg
fldcw
sbb
mov
mov
pop
add
call
and
xchg
mov
lods
mov
mov
adc
inc
fnsave
in
xchg
fistl
mov
fmuls
add
fists
lock
fcompl
sahf
mov
es
adc
lock
data16
jb
cmp
mov
sbb
sbb
stos
aaa
out
cwtl
mov
cmpsb
mov
inc
sbb
cmp
cltd
mov
dec
or
jle
and
cmpsb
mov
jg
jge
movsb
lea
xchg
add
pop
adc
push
enter
or
adc
jbe
add
insl
mov
into
mov
cmpsl
std
mov
fwait
and
cmpb
or
xor
movsl
mov
xchg
je
inc
inc
mov
movd
and
pushf
mov
test
sbbb
mov
push
pop
add
push
mov
xor
lock
and
cwtl
xchg
or
mov
adc
sbb
mov
or
daa
bound
movsl
mov
sbb
nop
mov
add
jbe
adc
inc
sbb
test
xchg
mov
test
shr
pushl
adc
repz
aaa
sbb
ja
push
cmp
adc
mov
add
push
mov
or
dec
push
fbld
mov
in
pop
mov
fprem
cmp
aas
or
add
pop
add
lar
adc
daa
out
sahf
lcall
data16
adc
sbb
mov
add
jmp
pop
dec
test
and
xchg
add
mov
test
sub
cli
sub
ds
xchg
and
jmp
test
test
cmp
pop
xor
inc
mov
call
mov
push
push
stos
lahf
sbb
xchg
xchg
adc
jbe
push
sahf
sub
sbb
inc
cmpsb
lret
dec
mov
cmpl
or
mov
jge,pn
cs
pop
sub
or
sbb
es
sub
sbb
pop
fists
pop
sub
lret
xor
add
lahf
lods
sbb
sarl
pop
out
adc
mov
pop
xchg
mov
pop
pop
xchg
mov
mov
sub
cwtl
loopne
and
aaa
pop
sub
dec
jecxz
shr
xchg
and
xor
push
mov
es
cmp
adc
jmp
cmp
stos
xchg
xchg
inc
pop
scas
and
push
sub
pop
sbb
je
into
addr16
cltd
sbb
push
arpl
and
mov
mov
rcrb
adc
fs
add
mov
cvttps2pi
cli
mov
test
aas
xchg
or
push
pop
pop
add
add
mov
mov
mov
adc
cmpsl
movsl
daa
ja
leave
scas
sub
fwait
inc
inc
adc
addb
imul
adc
sbb
xchg
xchg
mov
mov
dec
pop
cmp
or
pushf
jmp
pop
loope
add
sbb
andb
jge
pop
adc
pop
lods
sbb
in
pop
push
cmpsl
adc
dec
cmp
push
stos
adc
inc
cwtl
sahf
lret
push
or
or
testb
mov
mov
push
mov
je
in
es
jbe
fisttpll
or
adc
dec
sbb
adc
sbb
sub
lea
sahf
loopne
sbb
mov
cwtl
into
add
leave
int
sbb
sub
cmpsb
sub
nop
or
sbb
push
lcall
jbe
adc
ud1
aad
out
mov
inc
mov
push
push
sar
push
std
sbb
addr16
popf
mov
and
daa
dec
mov
pop
mov
sbb
je
int3
stos
xchg
or
lahf
xchg
adc
push
pop
loopne
ljmp
xlat
adc
xchg
mov
mov
scas
js
ficoms
cltd
test
and
mov
xchg
loope
das
outsb
inc
add
pushf
jg
sbb
rcrb
push
scas
xchg
mov
add
add
add
movsb
sarl
sbb
das
pusha
pop
and
mov
add
mov
or
mov
addb
cli
and
mov
pop
xchg
sahf
or
adc
mov
scas
xor
mov
sub
out
iret
lcall
adc
xor
pop
adc
inc
cwtl
mov
jge
mov
addr16
push
bound
sbb
push
add
pop
push
fbstp
mov
jmp
sbb
and
insb
inc
popf
mov
or
sbb
pop
pop
enter
mov
sub
test
test
xchg
iret
and
mov
jl
cltd
inc
aam
jnp
sbb
mov
sub
pop
lods
test
fdivrs
fmuls
stos
in
cs
nop
movsl
sbb
inc
sbb
mov
test
movsl
fidivrs
test
push
stos
dec
and
nop
mov
daa
xchg
inc
mov
jmp
sbb
xor
fwait
test
loop
or
sbb
sbb
inc
pop
pop
shrb
daa
sub
lahf
out
pop
sbbl
dec
fcompl
pop
pop
pop
mov
lods
in
cli
cwtl
adc
sbb
js
sub
xchg
lods
sub
cmpsb
dec
imul
mov
sarb
push
or
and
jb
jbe
mov
test
sbb
mov
and
lcall
cmc
pop
xchg
cwtl
mov
or
shrl
dec
sbb
push
ja
sbb
cwtl
jmp
xor
test
les
sbb
mov
sbb
jle
in
inc
and
daa
mov
stos
xchg
and
cmpsb
sub
jle
and
push
add
rorb
push
xlat
or
or
bound
and
or
lea
xchg
mov
dec
fcompl
int3
daa
add
nop
cmp
mov
ljmp
pop
std
pop
pushf
add
daa
jge
sahf
bound
sets
hlt
or
xchg
adc
leave
es
pop
ret
xchg
je
jmp
dec
pop
loopne
xor
stc
mov
popa
xor
cmp
sbb
sub
in
push
lea
dec
xchg
jns
pop
sahf
orb
push
sbb
in
xor
cltd
mov
push
xchg
push
pop
mov
dec
es
hlt
fistps
xchg
pop
push
in
sbb
enter
nop
jle
daa
mov
lods
movsl
adc
jo
sbb
call
out
sbb
addl
xchg
cmp
mov
cli
push
cli
mov
movsl
adc
xchg
adc
scas
mov
xchg
and
cmp
psraw
mov
mov
and
jno
pop
jl
add
mov
subl
mov
inc
ds
adc
fwait
xorl
pusha
icebp
pusha
push
push
dec
pop
mov
sbb
test
dec
adc
xorl
mov
cld
adc
push
fists
adc
pop
adc
cld
and
mov
and
bound
xchg
jle
mov
pop
jb
sbb
movsl
xor
mov
pop
sbb
or
inc
and
sbb
ss
sbb
pop
ret
subb
or
daa
pop
fstps
dec
loopne
mov
or
sub
adc
jbe
fwait
mov
jecxz
sub
or
add
orl
aas
adc
or
or
dec
xor
repz
mov
xor
pop
sahf
lcall
push
add
outsb
sbb
sub
jbe
sbb
loop
test
dec
and
lods
lcall
leave
or
pusha
or
sub
mov
or
sbb
xchg
xorb
mov
jecxz
loope
sub
sub
mov
pop
mov
add
adc
jb
mov
outsl
sbb
jbe
lods
push
test
push
es
pushf
aas
add
out
mov
sbb
fld
aaa
xchg
arpl
cwtl
dec
pop
mov
addl
stc
mov
icebp
ss
ffree
aad
fnstenv
or
add
ficoml
or
xchg
mov
mov
nop
add
aas
in
add
push
mov
or
lds
sbb
xor
fwait
shlb
ret
aaa
mov
jle
add
lcall
mov
stos
pop
pop
decl
xor
mov
inc
lods
aaa
lcall
repz
out
orl
mov
and
je
daa
data16
test
sbb
push
pushf
stos
xchg
test
and
std
sbb
adcb
dec
pop
mov
out
std
pop
icebp
fisubs
mov
scas
sub
mov
xchg
mov
out
push
daa
pushf
adc
daa
dec
and
pop
push
inc
push
sub
sahf
add
or
push
and
jmp
xchg
sbb
fwait
movsl
add
cmp
call
or
pop
and
repnz
in
cmp
cmpsb
imul
nop
or
lahf
fdivrp
xchg
adc
sar
sbb
fisttpl
sub
pushf
iret
stos
cli
add
xchg
repnz
adc
push
into
inc
mov
lock
cmpsb
popa
mov
sbb
mov
pop
mov
dec
cltd
ja
xchg
aaa
mov
mov
pushf
push
fbstp
mov
mov
push
and
mov
lcall
push
mov
sbb
adc
adc
sbb
setge
mov
movsb
je
lret
push
sbb
sbb
cs
jb
xor
test
outsb
add
xchg
push
sbb
popl
add
cli
pop
or
pushl
xchg
push
or
adc
dec
xchg
xchg
vunpckhps
mov
sbb
xor
dec
adc
scas
xor
push
int3
inc
cmp
mov
in
jge
mov
in
xchg
xchg
add
inc
xor
push
in
cltd
nopl
xor
mov
movsl
mov
pop
mov
cmp
decb
mov
sub
lcall
test
mov
in
sub
andl
pop
adc
dec
add
sbb
in
pop
sahf
cltd
dec
add
bound
cmpsl
jle
pop
mov
sub
xor
push
jns
mov
sbb
xor
mov
dec
aas
fwait
inc
pushf
pusha
gs
adc
fcos
test
xchg
addl
aas
pop
adc
adc
in
cltd
or
and
xor
add
je
jbe
clc
stc
cmpsb
xchg
dec
cwtl
push
dec
pop
rclb
mov
sbb
adc
movsl
push
sahf
mov
loop
sbb
mov
and
or
mov
sbb
sub
inc
push
pop
sbb
sbb
mov
add
lock
mov
mov
mov
decl
or
pop
adc
test
xchg
jle
or
xchg
add
and
mov
push
pop
mov
stos
add
mov
jbe
xchg
dec
cmp
sbb
lods
mov
and
xchg
add
pop
dec
int3
popf
stos
push
sti
cmpsb
outsb
push
push
fwait
bound
fistpll
mov
adc
adc
sub
and
inc
cli
cmpsb
adc
cld
adc
fstpl
lock
rorb
pop
xchg
or
out
and
cltd
jg
xchg
int
fmuls
cli
xor
push
fwait
mov
add
push
loopne
jb
outsl
xchg
sahf
jbe
cs
or
mov
jo
je
shrb
dec
adc
test
data16
lods
push
pop
stc
lock
icebp
mov
mov
lea
adc
ret
sbb
xor
ret
data16
out
cmp
sbb
hlt
outsb
push
test
pop
cwtl
push
mov
xchg
gs
stos
adc
inc
pushf
lods
sbb
xchg
xor
or
adcb
adc
cmp
lock
pusha
mov
jmp
mov
or
popl
test
xchg
sub
test
lock
or
cmp
cs
sbb
loope
mov
rorb
rcll
mov
repnz
mov
sahf
adc
push
pop
or
sub
jle
adc
add
mov
or
fwait
pop
and
push
push
or
cmpsl
xchg
test
lcall
addr16
and
es
frstor
pop
sub
inc
xchg
icebp
cmp
mov
dec
or
adc
fmuls
sub
daa
xchg
cmp
test
imul
adc
add
sbb
test
adc
xor
and
insb
push
pop
lds
push
pushf
fwait
daa
jb
mov
mov
add
xchg
jns
pop
cltd
push
jle
add
add
lods
dec
dec
adc
std
adc
sub
mov
adc
push
push
pop
cmpsb
sbb
orb
inc
pop
jmp
mov
inc
inc
xchg
jg
daa
pop
mov
adc
mov
and
mov
cli
xchg
pop
mov
push
cltd
xor
dec
sbb
sbb
mov
jo
mov
sub
ja
arpl
inc
sub
add
mov
mov
cmp
sub
adc
sbb
push
mov
add
adc
nopl
or
je
inc
mov
adcl
mov
mov
in
sub
sahf
jbe
pop
fiaddl
outsb
jp
cltd
lods
adc
or
lret
xchg
dec
jle
and
nop
jbe
add
cwtl
sbb
mov
mov
adc
idivl
pop
push
leave
jo
jg
or
mov
mov
sbbb
loop
and
mov
mov
jno
imul
lods
sbb
inc
mov
lret
rclb
mov
cmpsl
movsb
and
cli
add
mov
sbb
inc
sti
push
rorl
les
es
inc
ja
xor
xchg
or
xor
ja
push
add
mov
push
push
pushf
or
sbb
mov
dec
sub
nop
xchg
mov
push
or
add
dec
cltd
int3
pop
jle
adc
sub
daa
add
xchg
sbb
add
mov
test
add
sbb
mov
fwait
lcall
cmpsl
mov
cmpsb
add
and
fs
xor
mov
mov
mov
addl
mov
xchg
and
push
adc
lea
sub
out
xchg
add
lahf
xchg
popl
cmpsl
or
nop
daa
stc
push
sbb
test
xchg
push
xor
xchg
pop
sub
pop
and
jno
xor
sti
pop
mov
dec
jmp
adc
mov
push
data16
mov
sbb
adc
push
popf
mov
cmpsl
rorl
mov
pop
add
cmpsb
push
mov
mov
cmpsl
and
outsb
mov
fwait
push
mov
pop
jbe
shlb
cltd
dec
adc
stc
in
iret
out
in
inc
mov
imul
imul
and
sub
mov
xor
xor
ja
sbb
neg
inc
sbb
xor
dec
adc
pop
lcall
into
add
jmp
cwtl
sbb
push
pop
adc
adc
add
xchg
aaa
adc
aaa
pushl
icebp
mov
mov
add
push
push
call
std
decb
cmpsb
sub
fidivs
pop
ds
lcall
and
mov
and
addb
out
cs
clc
dec
cltd
or
loope
aas
inc
xchg
mov
mov
add
cmp
cwtl
adc
int3
adc
push
sub
xchg
mov
xchg
dec
adc
add
test
pop
mov
pop
sbb
jb
inc
nop
sbb
xchg
std
outsb
insl
adc
mov
jb
xchg
mov
jle
adcl
jb
add
mov
mov
cmpsb
lea
into
jge
aas
xchg
adc
sbb
cmp
mov
sbb
sub
mov
dec
sub
sbbl
mov
xchg
mov
dec
adc
rorb
or
pop
pushf
cmpsb
cwtl
push
jg
or
dec
pop
xlat
in
inc
jl
es
stos
mov
cmpsl
rcl
pusha
lcall
adc
xchg
fidivrl
cmp
mov
dec
adc
fimull
out
orb
mov
push
dec
cmp
sbb
ja
cmpsl
stos
dec
incl
mov
lret
push
cmpsb
lcall
push
push
jle
cmpsl
add
pop
data16
push
scas
test
xchg
ficompl
stos
add
jbe
mov
add
jne
sub
mov
and
mov
add
xchg
inc
jle
sbb
xor
test
and
stos
and
rclb
fwait
push
mov
bound
mov
mov
mov
js
loopne
and
pusha
outsl
pusha
mov
inc
jo
add
imul
into
je
insl
adc
xchg
and
add
xchg
xor
pop
adc
test
fstpl
sahf
rcrb
mov
fstps
sub
les
daa
inc
and
jb
mov
addl
mov
outsb
pop
xchg
xchg
add
jb
fwait
cmpsl
into
dec
cs
adc
andl
cmp
and
les
jge
cmp
or
pop
mov
push
sbb
lods
xchg
sbb
and
adc
lcall
xor
sbb
mov
fwait
adc
fidivrs
test
xchg
cli
xchg
push
addl
mov
pop
insb
jno
mov
mov
mov
mov
inc
pop
int3
add
adc
sbb
adc
pop
test
ds
mov
sbb
add
add
xor
arpl
sub
xchg
push
stos
test
push
fwait
dec
adc
scas
lods
pusha
pop
or
xchg
cmpsb
pop
cmpsl
fimuls
movsl
daa
xchg
hlt
movlps
adc
sahf
fcomp
inc
cwtl
xchg
cmp
push
scas
mov
bound
jns
test
es
inc
je
adc
lods
and
or
adc
fidivrs
lds
jmp
push
stos
mov
addl
movsb
sahf
push
cmc
nop
sbb
sub
test
mov
xor
cmpsl
or
xchg
pop
stc
fs
fisttps
adc
popf
adc
jmp
mov
sub
pop
fistpl
sahf
fists
push
setb
sahf
out
add
pop
pop
or
xor
in
and
cmp
test
jns
cmp
pop
xchg
mov
aas
sahf
or
fstpt
jle
and
sbb
adc
add
mov
cmpsl
pop
std
push
xchg
adc
or
jle
cmpsb
add
daa
aas
dec
add
sbb
xchg
inc
aaa
add
xor
push
mov
xchg
push
xchg
shlb
push
mov
cltd
pop
mov
adc
adc
outsb
push
xchg
sub
push
push
and
and
push
mov
pop
test
fwait
loopne
jle
or
popf
fwait
mov
scas
xchg
fnstenv
sbb
cmp
int
in
mov
stos
into
xchg
mov
int3
inc
dec
cmpsl
sub
mov
jno
cld
scas
sbb
cwtl
into
push
sbb
je
xchg
inc
movsl
cmp
std
testl
enter
cmp
cmpsl
fwait
jbe
and
pop
test
adc
insb
xchg
adc
mov
xchg
and
adc
setle
push
int3
xchg
aad
sbb
xchg
xchg
lea
xchg
and
mov
mov
pop
sub
push
scas
rclb
test
mov
jl
xchg
add
or
xchg
xchg
jb
push
adc
adc
xor
sbb
outsb
stos
fwait
movsb
adc
and
push
nop
add
xchg
mov
mov
pop
aam
in
mov
and
add
lds
dec
mov
pop
xlat
mov
adc
sub
mov
test
sub
lret
and
daa
stc
nop
add
add
es
jb
sbb
cmp
aas
mov
inc
out
inc
or
mov
lcall
cwtl
cmp
pop
sbb
in
pop
adc
mov
enter
pop
mov
shrb
and
adc
loop
outsb
sbb
lods
ss
inc
mov
xchg
cmp
mov
add
and
mov
cltd
cmp
inc
sub
bound
mov
mov
sbb
pushf
or
cmpsb
and
roll
or
insb
cli
adc
loop
test
mov
pushf
mov
std
lcall
mov
or
sbb
cmp
and
xor
cmpsl
and
push
mov
popl
push
mov
push
cs
out
lods
dec
and
cwtl
pop
ret
add
mov
add
pop
inc
jle
mov
insb
xlat
and
cmpsb
lcall
mov
mov
dec
cmpxchg
cwtl
xchg
mov
and
adc
pop
sub
pop
loopne
and
adc
mov
pop
sbb
je
outsb
fildll
movsl
inc
or
adc
add
xchg
fs
cmpb
xchg
outsb
mov
pop
mov
std
fwait
pop
sbb
mov
pop
sub
adc
push
mov
adc
or
mov
cmove
sub
or
sbb
mov
xchg
cli
mov
add
mov
fcmovnu
xchg
mov
decl
adc
cmc
xorl
add
mov
fwait
insb
data16
shrb
loope
mov
push
jle
adc
push
dec
movsw
adc
pop
aaa
fstps
sbb
loop
pop
stos
ret
cmpsl
std
jg
rolb
cmp
cmp
cld
or
sahf
fistps
sbb
sahf
arpl
or
inc
data16
xchg
in
mov
or
or
pop
cmpsb
sbb
addr16
mov
mov
push
je
or
dec
mov
xchg
arpl
fistps
mov
sbbl
pushf
inc
es
inc
xchg
inc
or
and
adc
mov
and
subb
jb
stos
sub
pop
mov
or
cli
mov
inc
sbb
jle
xchg
xchg
push
xor
adc
int
mov
test
lods
dec
movsl
std
lahf
pusha
decb
adc
add
jmp
inc
notb
ret
out
movsl
ret
lret
mov
jb
add
nop
dec
jne
es
or
sbb
xchg
lahf
adc
mov
sub
pop
mov
adc
mov
add
pop
mov
loopne,pn
leave
es
fisubl
mov
test
insb
dec
mov
ds
nop
xchg
xchg
jle
mov
sub
mov
roll
lahf
push
js,pn
xchg
jbe
sbb
sub
out
lahf
cmp
sub
mov
sbb
xchg
sub
add
mov
xchg
mov
mov
fstl
adc
push
insl
jbe
rorb
bound
sbb
jbe
fwait
mov
pop
gs
imul
xchg
xchg
xchg
fwait
sbb
dec
xchg
pushf
lahf
add
and
sub
dec
cmp
cwtl
std
mov
mov
sub
cmovo
es
inc
pop
icebp
fwait
and
mov
adc
sub
pop
aaa
stos
cmp
sbb
inc
subl
rolb
xchg
or
pop
push
add
std
data16
sbb
mov
cmovb
movsl
mov
adc
push
repnz
mov
cmpsl
inc
jle
adc
sbb
inc
or
loope
cld
cmp
or
loope
cmp
cmp
test
lods
adc
aam
sbb
sub
daa
mov
std
sahf
jb
inc
cmpsl
clc
iret
ds
mov
sub
sbb
sub
mov
test
jb
xchg
and
jl
lds
mov
sbb
pop
pmuludq
lahf
jmp
movsl
lahf
jnp
sarl
jecxz
or
sub
sub
cmp
xchg
mov
and
and
sbb
jbe
aas
or
cmpsb
push
mov
jp
and
or
mov
sub
inc
int
push
or
daa
cmpsl
mov
hlt
mov
xor
fwait
mov
sbb
sub
inc
or
iret
mov
jge
test
jae
adc
dec
push
mov
sub
sbb
and
or
rol
cmp
or
xor
cmp
xchg
mov
movsl
out
ret
inc
add
fldt
xchg
xor
scas
cs
add
lods
and
add
mov
dec
cmpb
mov
test
lds
mov
xchg
pusha
push
test
decb
xlat
xchg
nop
mov
dec
pop
jl
mov
adc
mov
and
pop
adc
push
sub
mov
and
stos
add
pushf
jns
push
test
stos
inc
ficoml
adc
test
nopl
push
mov
sbb
xchg
sbb
inc
adcl
roll
inc
sbb
xchg
sbb
push
je
xchg
adc
into
sbb
test
hlt
addb
daa
pop
dec
sahf
mov
nop
scas
sahf
pusha
stos
sbb
adc
mov
mov
pop
pop
adc
or
call
xor
cmp
movsb
xchg
and
mov
stc
sub
cli
pop
sahf
cli
inc
cmp
xchg
push
mov
adc
rclb
sbb
outsb
mov
in
jge
or
pop
sub
aaa
test
pop
add
jbe
call
sub
xchg
enter
add
test
mov
je
or
in
mov
addr16
stc
lods
gs
mov
ds
xchg
pushf
stos
sbb
movsl
inc
sub
ret
mov
pop
subb
mov
xchg
or
aam
inc
mov
outsb
inc
xchg
or
add
loop
and
xor
sahf
add
pop
fsts
sbb
mov
push
inc
aas
test
pop
xchg
mov
clc
jle
sbb
divb
into
xchg
xchg
and
mov
cmpsl
xchg
mov
outsb
test
popl
mov
and
pop
mov
cld
mov
orb
cmpsl
or
mov
add
add
pop
imul
mov
mov
mov
cltd
or
xchg
mov
mov
pop
or
cltd
or
push
jle
and
mov
outsb
popa
push
lds
mov
pop
jb
loopne
add
pop
jle
shlb
andl
sbb
sub
cmp
push
arpl
inc
add
or
cmp
mov
adc
aam
jo
movaps
or
test
in
inc
push
pop
mov
sub
movsl
sbb
and
sti
add
lea
push
mov
add
xor
int
add
mov
sbb
int
pop
add
xchg
jmp
sub
push
fwait
xor
pop
ret
and
sbb
xor
mov
mov
push
push
stos
dec
test
orb
mov
xchg
push
jo
in
cmpsl
xchg
cmpsb
adc
cltd
mov
xchg
mov
pop
lahf
test
xor
push
jbe
inc
pushf
xchg
stos
adc
push
mull
mov
sbb
sbb
sbb
js
sti
pushf
inc
or
xchg
in
push
imul
inc
mov
lcall
je
adc
cmp
andb
mov
in
adc
repnz
dec
sub
popf
add
jp
pop
aad
nop
pop
mov
sti
pop
or
pop
mov
push
stos
std
sahf
pop
sub
lea
fidivl
fldenv
xchg
adc
mov
xlat
mov
push
cmc
xchg
jle
add
mov
push
and
sbb
ret
adc
pusha
mov
or
add
mov
ljmp
mov
test
lds
jo
push
stos
and
cli
popl
popf
negl
lea
push
sbb
adc
pop
push
mov
mov
sbb
and
push
and
lcall
daa
sti
xchg
clc
ljmp
mov
rolb
dec
jno
lcall
sub
cwtl
xlat
popf
push
ret
and
add
pushf
adc
cmp
aaa
stos
xchg
mov
mov
mov
cmp
pop
and
icebp
add
andb
pop
cmpsb
mov
ficomps
push
aaa
xchg
movsbl
fadds
stc
sub
pop
outsl
je
mov
mov
test
or
jae
adc
fstps
adc
xchg
les
adc
lods
sbb
incb
sub
es
sbb
add
lcall
mov
adc
cmp
imul
jp
adc
call
pushf
fwait
pusha
testb
shll
movb
data16
sub
pop
push
movsb
or
sbb
add
fwait
outsb
ljmp
push
loope
inc
popf
xor
add
and
xchg
xor
test
mov
mov
and
je
sbbb
push
lret
xchg
inc
add
mov
or
outsl
movsl
add
and
mov
aaa
jo
push
mov
add
inc
pop
cmpsl
lods
ja
lea
mov
xor
ja
adc
mov
mov
add
and
inc
pop
or
and
mov
mov
mov
bound
and
and
pop
iret
sub
pusha
or
add
enter
test
das
test
and
es
push
loope
sarb
daa
nop
pop
xchg
rorl
adc
mov
pop
aas
xchg
sub
pop
push
pop
mov
mov
call
xchg
pop
aaa
adc
test
daa
mov
fs
sub
and
pop
mov
aaa
out
xchg
test
cmpsb
adc
jle
cmp
lahf
mov
pop
daa
xchg
adc
mov
popf
xchg
push
repz
add
sbb
jp
xchg
aad
test
cwtl
pop
or
xchg
mov
add
dec
aad
hlt
movsl
mov
jbe
xchg
pop
fsts
cltd
or
inc
movl
add
int
adc
push
pop
loopne
mov
add
and
xchg
popf
mov
loope
sub
sysret
stos
mov
push
cwtl
test
pop
jmp
mov
sub
mov
xchg
add
pop
movsb
sbb
emms
or
sub
add
push
pop
sbb
add
or
pop
xchg
xor
sarb
dec
sbb
xchg
sbb
xor
adc
fs
pop
shrb
jbe
pop
stos
rcl
les
jle
or
mov
add
sbb
outsb
jno
add
fwait
sbb
es
mov
inc
inc
add
inc
push
sub
xor
popl
mov
sahf
ss
lds
or
sub
out
and
xor
sbb
or
push
add
push
sbb
sbb
push
xchg
or
lcall
xchg
mov
or
dec
leave
sahf
jno
mov
and
cmpsb
xchg
test
test
test
xchg
cmp
mov
sbb
xchg
dec
stos
cmp
mov
mov
sbb
push
int3
jb
mov
daa
pushf
dec
mov
popw
push
jb
pop
sub
or
cwtl
adc
scas
xchg
setns
and
sbb
repz
inc
ficomps
xchg
push
and
fldt
or
jnp
fists
mov
adc
std
pushl
add
mov
inc
lret
cmpsb
adc
jmp
mov
push
sbb
cld
adc
and
lahf
fldenv
sub
nop
mov
or
add
add
icebp
adc
jno
adc
mov
cwtl
pop
je
push
cmpsb
fidivrs
push
or
hlt
add
aaa
daa
mov
addb
jno
mov
into
test
sbb
xchg
sub
mov
push
mov
movsl
inc
mov
and
cltd
test
cli
mov
lock
xchg
add
push
push
movsl
mov
xor
mov
jl
mov
sub
add
xchg
adc
sbb
add
adc
push
jle
xchg
or
mov
jno
dec
lahf
xchg
out
ret
gs
add
push
test
jg
add
mov
ficoml
test
les
sbb
in
das
push
mov
adc
cwtl
flds
add
mov
or
test
test
mov
daa
cmpsb
xchg
and
lds
pop
pushf
push
sbb
jno
cmp
daa
es
xchg
sbb
pop
and
out
mov
and
stc
int
stos
adc
mov
add
mov
pop
mov
adc
stos
lock
xchg
xchg
jbe
xchg
and
mov
lret
add
mov
pop
xor
inc
mov
lahf
pop
xchg
mov
push
mov
or
or
test
sub
and
shll
add
mov
dec
sti
push
jge
cmpsl
push
cmpsl
dec
pop
aam
cmpsb
movsl
pop
inc
and
adc
rorb
dec
push
add
je
pusha
addr16
cli
mov
adc
sub
movsl
dec
cltd
xor
dec
jbe
vaddsubps
mov
aaa
fistpll
inc
inc
sbb
mov
mov
sub
jp
xor
mov
xchg
push
and
push
lahf
sbb
andb
mov
stos
aas
prefetcht2
xchg
rorl
sbb
sti
or
adc
xchg
sub
jl
add
dec
daa
xchg
push
sahf
jae
fstpl
mov
add
xor
fistl
adc
mov
mov
or
aad
push
cwtl
sbb
nop
pop
adc
pushl
add
adcl
and
push
xchg
xor
mov
fwait
incb
xchg
add
mov
jnp
in
xchg
xor
cmc
jle
lcall
adc
icebp
xchg
and
fwait
unpcklps
mov
xchg
adc
sub
cmpsb
in
mov
pop
xchg
jbe
lret
ret
je
mov
cmpsb
adcb
outsl
lea
or
sahf
pop
xor
cs
sbb
xchg
sbb
push
and
cwtl
js
or
leave
sbb
test
push
stos
or
xchg
xchg
jnp
into
shrb
pop
add
dec
shlb
nop
cld
xor
add
or
sahf
jo
pop
cmpsb
ret
push
in
lcall
adc
insb
mov
xchg
mov
pushf
cmp
fistps
push
js
add
or
xchg
add
sub
pushf
dec
mov
nop
xchg
pop
dec
pop
xorb
pop
sbb
mov
dec
aaa
sbb
inc
aas
insl
sbb
test
insb
push
lds
and
aad
mov
add
sbb
je
pop
in
scas
pusha
sbbl
iret
push
jge
fwait
xchg
adcl
pop
mov
inc
addr16
mov
addr16
sub
sub
and
loope
jge
inc
dec
rolb
lahf
add
lds
mov
pop
loop
je
and
mov
sbb
mov
xchg
xor
sub
xor
mov
cmp
add
add
inc
mov
fistps
movsl
jnp
or
push
arpl
std
mov
or
addr16
outsb
and
add
lcall
test
mov
orb
loopne
push
fstl
std
or
icebp
mov
out
pushf
adc
ja
stc
sbb
out
lahf
mov
into
mov
xchg
stos
mov
hlt
pop
pop
sti
aas
aam
mov
mov
xchg
stos
loope
sub
fwait
add
push
and
add
xchg
imul
cwtl
test
xchg
cli
push
sarb
pop
mov
sbb
fwait
mov
mov
fwait
sahf
iret
push
sbb
mov
gs
or
pusha
mov
mov
cmp
jb
push
push
or
mov
insl
push
cmpsl
cmpl
enter
and
addr16
imul
sbb
cmpsb
std
mov
jno
xor
aam
xlat
mov
mov
nop
add
add
push
test
push
or
mov
lahf
and
mov
inc
stc
mov
es
adc
loopne
cmp
pop
pop
mov
movsl
mov
and
bound
sub
fs
pop
mov
test
outsl
jle
bound
mov
aas
adc
and
and
lahf
pop
pop
clc
and
cmpsl
aaa
inc
fs
push
mov
push
cwtl
xor
js
movsb
sti
add
inc
andb
mov
mov
push
sbb
adc
out
shrl
xchg
cwtl
xchg
xor
movsl
add
or
pop
mov
pushf
nop
inc
adc
add
les
cld
or
adcl
jno
rclb
sub
in
push
xchg
call
jg
or
push
sbb
adc
push
decb
add
adc
cmpsb
adc
xchg
dec
into
rol
mulb
sub
pop
adc
sbb
xor
pop
mov
cltd
push
outsb
nop
jb
jb
inc
out
inc
push
mov
or
movsl
mov
wbinvd
add
xor
popf
inc
jb
xor
pop
xor
sub
mov
adc
mov
aad
pop
dec
sub
mov
mov
pusha
cs
fidivrl
jae
adc
mov
mov
sbb
lret
sbb
cmp
je
jns
sbbl
push
imul
stos
mov
sub
mov
pop
xchg
cmp
mov
add
addb
lods
fwait
xchg
or
dec
add
js
mov
xor
lret
fwait
addr16
inc
pop
xchg
jp
xchg
movsl
mov
push
jbe
mov
xor
xchg
cwtl
lcall
or
xor
or
ret
aaa
outsb
aas
mov
fldpi
jg
cwtl
mov
lods
xchg
int3
jne
push
mov
aad
or
push
jbe
outsl
dec
push
sub
pcmpeqd
pushf
cwtl
cmpsb
mov
mov
xchg
ja
mov
xchg
xchg
int
mov
das
or
fldl
xchg
jb
mov
add
outsb
xchg
sub
test
pop
xor
adc
inc
cmpsb
inc
or
pusha
dec
test
adc
sub
xchg
mov
or
movsl
cli
mov
and
scas
jg
in
addr16
invd
es
pop
lahf
pop
outsb
sub
dec
add
mov
push
shrl
mov
xor
inc
mov
push
es
in
adc
and
out
sbb
mov
fisubrs
add
jge
dec
jg
es
jnp
xchg
subb
mov
jns
add
cld
add
lcall
movsb
adc
daa
xchg
jae
or
sti
dec
mov
xchg
iret
in
cli
xchg
push
mov
jbe
mov
pop
mov
iret
out
mov
je
jecxz
sbb
addb
icebp
cmp
leave
adc
fwait
mov
inc
sbb
adc
cs
xor
push
mov
adc
js
and
add
pop
xchg
inc
cmp
test
in
rclb
pop
cltd
sbb
cmp
fstl
adc
inc
stc
add
sbb
mov
dec
xchg
sbb
ret
adc
orb
outsl
sbb
or
sbb
jle
sbb
loope
fs
xor
xchg
je
test
push
mov
add
and
cmpsl
mov
fwait
iret
sbb
es
pop
mov
pushl
adc
pop
addl
and
loopne
mov
push
mov
or
mov
in
mov
cs
mov
inc
xchg
add
int3
push
cmpsb
lcall
add
mov
push
pop
push
aam
pushf
ret
xor
je
loope
test
and
int
pop
adc
push
std
nop
filds
xchg
inc
mov
cmpsb
pop
push
jae
cltd
data16
mov
sbb
sub
fisttpll
shlb
sub
mov
fisubs
es
lret
mov
mov
cli
mov
popa
mov
sub
cmpsb
add
insl
mov
and
jecxz
fwait
out
gs
imul
pusha
push
lahf
mov
mov
pop
addr16
sahf
mov
lahf
stos
sbb
je
xchg
adc
data16
jb
mov
mov
rclb
cltd
daa
shl
pusha
cmp
adc
xor
jle
test
lahf
or
push
mov
cmpb
pushl
cmc
arpl
or
lcall
mov
test
mov
xchg
push
fwait
pop
jo
xchg
pop
mov
adc
lahf
fs
cli
add
push
subb
lcall
push
lds
sbb
add
subb
hlt
mov
vpmulhuw
jb
add
rolb
mov
lea
cwtl
sbb
aam
add
lret
outsb
adc
push
testb
xchg
test
setne
popa
cmpsb
mov
je
push
stos
sbb
mov
sub
inc
pop
lret
cmp
or
or
adc
pushf
add
pop
mov
adc
dec
xchg
add
daa
popa
sbb
stos
and
mov
sub
xor
xor
pop
ds
or
and
mov
xchg
cmpl
mov
push
stos
les
bound
push
mov
inc
sub
or
push
add
jmp
push
sub
sub
mov
movsl
pushf
mov
scas
xchg
xchg
insl
scas
scas
ds
mov
nop
cmpw
push
jg
or
adc
sbb
sbb
add
xchg
leave
and
cwtl
or
adc
and
faddl
sti
addr16
add
xor
add
mov
dec
stos
iret
push
hlt
mov
xor
xor
inc
or
mov
or
xchg
lcall
movsl
sbb
xchg
cmpsl
pop
and
popf
sbb
jo
scas
mov
jecxz
mov
idivb
insl
cmpsb
ret
push
dec
cltd
test
push
lods
mov
jl
je
popf
or
add
or
movhps
or
daa
bound
mov
adc
in
mov
cwtl
add
add
mov
movsl
stos
mov
mov
test
inc
pusha
and
push
cmpsb
jb
mov
bound
or
and
mov
mov
cmpb
fldcw
xchg
mov
or
aas
filds
inc
xchg
adc
add
sbb
xor
lds
push
push
add
push
sbb
push
lahf
iret
push
test
and
mov
or
mov
pop
push
imul
dec
test
mov
nop
mov
stos
cltd
test
adc
push
icebp
push
push
dec
cwtl
sub
and
jle
sub
mov
sbb
sbb
add
das
test
sbb
ss
hlt
mov
cmpsb
arpl
pop
mov
push
push
cmpsl
adc
popa
mov
or
aas
cmpsb
adc
enter
movsb
je
pop
jle
xchg
sbb
ret
adc
push
and
pop
cmp
and
ret
sbb
mov
xchg
and
movsl
xchg
sbb
icebp
sahf
jne
test
mov
sbb
and
or
push
sub
inc
mov
ja
ret
and
push
in
push
sbb
sbb
mov
pushf
mov
mov
call
pop
cmpsl
xchg
adc
lahf
xchg
push
mov
leave
test
sbb
add
sbb
adc
out
test
push
test
aaa
mov
sub
mov
xor
sbb
or
mov
fstpt
adc
adc
sub
mov
ljmp
movsl
xchg
dec
adc
sahf
xchg
cmp
adc
or
shlb
test
push
nop
add
or
and
mov
cwtl
xchg
inc
cmpsb
jbe
xchg
add
daa
xchg
pop
dec
jle
mov
or
and
std
daa
mov
mov
push
jge
test
dec
mov
xchg
outsb
leave
cmpsl
add
fstl
sbb
xchg
in
daa
push
and
es
mov
mov
pop
pop
xchg
nop
daa
mov
pushf
sub
es
mov
nop
cmp
xchg
les
xchg
lods
push
sub
xor
cmp
pushf
inc
or
mov
xchg
mov
movsl
mov
ds
mov
add
sbb
xchg
add
test
test
inc
andb
add
xchg
mov
stos
push
add
sbb
mov
shll
pushf
cmp
xchg
pop
out
rcrl
fwait
pop
add
xchg
fwait
mov
sbb
add
and
xchg
xor
fwait
lahf
add
mov
push
in
pop
loopne
xchg
test
pusha
xor
pop
fsubs
pop
stc
addl
xchg
daa
mov
adc
mov
lahf
in
je
push
movsl
lcall
sub
or
or
and
adc
or
sbb
lock
loope
dec
scas
mov
pop
mov
mov
pop
or
or
mov
push
xor
sbb
sahf
hlt
mov
jbe
mov
test
iret
push
data16
cmpsb
jb
hlt
cmc
push
movsb
or
nop
mov
jle
add
add
mov
jg
or
pushf
into
movsl
adc
int3
pop
jb
mov
and
in
lcall
pop
push
sbb
cld
sbb
xor
pop
lods
fcomip
mov
shrb
xchg
mov
inc
dec
mov
pusha
les
mov
scas
push
int3
cmpsb
mov
xorl
imul
mov
xor
icebp
bound
sahf
test
pop
lods
adc
and
sbb
hlt
ficompl
jne
push
and
adcl
mov
iret
xchg
jbe
daa
mov
icebp
adc
or
mov
xchg
mov
lahf
dec
inc
fsubl
notl
aaa
adcb
dec
jo
sub
jbe
cmp
mov
add
out
je
xor
cwtl
clc
incl
or
je
or
xor
jo
mov
mov
loop
fimull
inc
xchg
and
cmp
and
andl
push
cmpsb
jg
add
xor
push
sbbb
sbb
add
mov
lea
inc
cmp
cmp
push
add
mov
sysret
pusha
cmp
or
xchg
cli
test
adc
addl
or
mov
and
jbe
mov
xchg
pop
shlb
movsl
xchg
incl
pop
jae
iret
mov
push
pop
and
mov
sub
add
and
xchg
mov
mov
push
xchg
test
add
xor
aas
sub
and
movsl
andb
mov
push
dec
or
es
xor
xor
cltd
aam
push
ja
adc
cmpl
jecxz
jb
fwait
sbb
mov
add
cmpsb
je
sbb
jmp
jle
scas
andl
sbb
ficompl
stos
push
pop
out
push
test
adc
cltd
jne
add
orb
cmpsb
inc
add
cmp
pop
mov
sub
lea
mov
mov
fstps
les
mov
mov
ss
xor
or
pop
add
adc
push
cmp
lcall
sub
cs
sbb
and
sbb
sub
aaa
or
mov
js
adc
out
scas
or
lahf
into
mov
rcrl
sbb
or
push
cmp
sbb
lahf
adc
mov
lcall
mov
pop
outsb
fisttps
pop
pop
or
ror
mov
or
or
mov
pop
nop
push
adc
lahf
xchg
add
lods
pushf
mov
xor
or
pop
pushf
adc
mov
mov
sbb
jne
inc
popf
pushf
cmove
xchg
nop
das
mull
or
sahf
rclb
pop
adc
mov
mov
mov
stos
loopne
sbbb
or
add
add
inc
cmpsb
cmp
aas
movsl
xchg
or
and
jg
xchg
or
imul
es
mov
mov
addr16
add
cs
and
push
lds
mov
movsl
mov
loop
push
scas
ret
xchg
pop
enter
add
mov
sbb
dec
aad
je
rorb
cmp
inc
sbb
outsl
pop
cwtl
mov
push
add
data16
push
mov
cs
mov
es
dec
push
adc
mov
and
or
xor
sub
xor
mov
add
fimuls
adc
and
rclb
or
mov
inc
ret
jnp
adc
mov
adc
js
mov
shrb
rolb
xchg
xchg
push
pop
nop
pop
jo
adc
jbe
mov
pop
lahf
loope
cmpsb
andb
pop
push
mov
scas
add
push
into
add
mov
mov
movsb
test
sbb
int
mov
sbb
sub
or
movsl
push
lds
xchg
and
nop
adc
imul
mov
dec
xor
sbb
and
aaa
or
mov
repnz
daa
adcl
mov
comiss
fsubrs
mov
or
dec
push
lds
adc
adc
dec
mov
inc
push
sbb
stc
andl
jg
adc
add
aam
pop
xchg
mov
pop
lcall
into
rcrb
mov
add
and
adc
add
push
and
add
lcall
pop
cmp
mov
pop
jg
cmpsb
xchg
daa
sahf
jo
adc
and
test
mov
inc
ret
xchg
push
stc
jns
mov
cltd
mov
mov
insb
pop
sbb
add
xor
aaa
adc
sbb
movsl
adc
or
and
pmuludq
or
rcrb
sbb
popf
mov
xlat
push
jnp
xchg
cmp
mov
mov
inc
es
push
inc
mov
sbb
xchg
inc
lcall
adc
mov
add
sbb
adc
add
fwait
xchg
pushf
adc
sbb
inc
sbb
imul
mov
fs
add
jl
xor
movsb
sbb
push
pop
adc
aad
and
xchg
add
pop
xchg
inc
adc
clc
push
or
add
jg
pop
popl
jb
data16
mov
sbb
mov
dec
and
dec
mov
xor
mull
movsl
pop
push
scas
and
movsl
adc
xchg
lea
inc
negb
out
sbb
pushf
ljmp
adc
fsubrs
add
add
cmp
dec
je
add
pusha
add
inc
dec
movups
ret
aad
sbb
es
outsl
jb
setne
push
xor
es
sahf
ret
and
push
or
mov
ljmp
and
int
mov
lds
add
enter
mov
cmpsb
imul
mov
push
lcall
xchg
mov
cmp
ljmp
orb
inc
xchg
mov
loope
lret
into
andl
pop
mov
sbb
mov
in
inc
mov
cltd
adc
leave
stos
mov
sbb
xchg
out
adc
pop
xchg
dec
incb
xchg
and
or
or
aaa
scas
inc
mov
dec
jbe
xchg
adc
push
jg
dec
or
push
xchg
push
ffreep
pop
jo
push
test
adc
cmpsl
and
pusha
ret
push
imul
jg
movsl
sbb
pop
and
mov
sbb
adc
sahf
sbbb
or
mov
call
and
in
mov
add
push
xchg
insb
pop
lods
nop
adc
mov
test
xlat
es
sub
mov
lahf
xchg
in
movsl
cwtl
mov
cltd
or
push
xchg
or
lods
fisttps
fildl
lds
sub
jae
out
out
and
rol
rcrb
daa
mov
mov
mov
sbb
push
sbb
das
test
inc
enter
pushf
sbb
lcall
jbe
adc
adc
cmpsl
pop
push
aaa
out
in
dec
fidivs
loope
dec
mov
and
jne
lret
shll
xchg
and
or
mov
dec
or
adc
inc
and
cli
add
nop
inc
sbb
mov
adc
inc
xchg
xchg
daa
gs
aaa
mov
popa
mov
fwait
jo
xor
mov
cltd
dec
adc
icebp
push
pop
mov
lcall
xchg
jmp
jb
mov
lea
testl
scas
push
sbb
test
dec
in
cmp
mov
rcrl
xor
adc
pop
mov
push
xchg
adc
in
xchg
cmc
int
push
mov
push
push
mov
mov
cwtl
sahf
das
mov
sbb
or
push
dec
test
es
jle
xchg
cmc
scas
jo
xchg
pop
pushf
xchg
push
adc
fwait
out
bound
fs
outsb
and
dec
sar
mov
decl
mov
mov
and
loopne
mov
rcrl
data16
pop
imul
fwait
jle
cwtl
or
sbb
popl
sahf
inc
xchg
lcall
rorl
push
fwait
aaa
add
sbb
cwtl
cmpsb
aas
loopne
and
pop
and
cmp
sbb
mov
or
and
and
daa
pushf
mov
fbld
ret
stos
and
cmc
inc
std
rcrb
xchg
outsb
jb
sbb
sub
rolb
mov
stos
jmp
sarb
incb
cmpsl
add
addb
pop
sti
cwtl
mov
cs
clc
shlb
loop
push
mov
mov
adc
add
jmp
inc
lahf
xor
lods
or
popa
xor
pop
sub
sbb
sub
sbb
outsl
aas
mov
nop
or
lods
and
add
jae
nop
adc
or
jl
pushf
mov
jns
mov
adc
aam
xchg
push
cmp
jg
mov
jp
lds
mov
ffreep
sbb
jne
inc
aas
and
es
fisttps
push
loope
call
xchg
data16
lods
sahf
fiaddl
mov
mov
fs
stos
or
mov
stos
pop
xchg
and
sbb
adc
sbb
adc
xor
add
aaa
mov
add
sbb
sahf
pop
mov
inc
push
sbb
sbb
push
mov
cmp
test
jne
adc
arpl
and
in
inc
testb
hlt
dec
pop
adc
mov
jle
adcl
sahf
lods
adc
or
xchg
test
cmc
sbb
inc
aaa
xchg
sbb
add
pop
sub
jge
scas
mov
push
or
sub
nop
add
pusha
imul
mov
inc
jge
sub
xchg
mov
mov
sbb
or
cmp
inc
rcl
pop
push
aas
test
dec
sub
mov
aaa
xchg
sbb
and
fnstsw
cli
mov
int
pop
call
movsl
cmp
inc
add
fstps
and
clc
xchg
ss
xor
pop
cltd
mov
mov
fldcw
sub
mov
test
out
fisttpl
inc
bound
push
dec
adc
xor
sub
bound
push
orb
mov
and
and
mov
or
and
out
lods
lret
or
ret
push
je
inc
xchg
cli
cmp
enter
lcall
cmc
push
adc
xchg
add
adc
xor
mov
xor
push
inc
or
outsb
jl
cmpsb
adc
mov
adcl
xor
lods
inc
or
xorl
cmpsl
mov
lcall
mov
adc
cmp
add
mov
xor
fisubrl
xchg
iret
jmp
pushf
add
xor
adc
mov
mov
push
je
cwtl
xchg
std
andl
pop
sbb
ja
mov
enter
xchg
inc
xchg
xchg
adc
sbb
nop
test
dec
bound
sbb
xchg
mov
test
cmp
adc
sbbb
scas
je
push
inc
mov
xchg
sub
movl
fwait
sahf
mov
and
mov
mov
sub
add
daa
movsl
pushf
cltd
xchg
pop
cmpsb
inc
push
xor
je
test
cmp
pop
idivl
jbe
cmp
pushf
sub
dec
cmpsl
pusha
and
nop
inc
xor
sti
or
orb
int3
fwait
mov
icebp
push
mov
push
data16
sbb
cltd
scas
add
add
xchg
pop
sbb
xor
and
or
mov
sub
mov
sbb
cmpsb
fstpl
pop
xchg
inc
push
mov
add
rclb
mov
and
adc
push
and
mov
jge
loopne
test
push
sub
ds
push
je
cmpsb
cmp
sbb
es
adc
xchg
add
or
adc
or
xor
xor
and
fwait
mov
outsl
mov
inc
cmpsl
mov
leave
imul
push
shrb
and
or
sbb
arpl
adc
pop
xchg
pop
or
mov
push
push
sbb
mov
mov
mov
xor
add
mov
push
lcall
dec
pop
jg
sahf
shl
icebp
aas
dec
fwait
orb
vdivps
or
push
mov
dec
emms
push
aaa
xchg
xchg
pop
mov
lock
pop
test
sbb
mov
rcrb
and
push
mov
dec
and
or
rcll
add
xor
sbb
mov
add
jbe
or
mov
stos
sbb
xor
mov
pop
lods
incl
xor
push
jecxz
add
push
sahf
adc
mov
or
out
sahf
xchg
inc
lret
ja
orl
push
lods
cmpsl
mov
out
add
mov
sbbb
adc
lcall
into
add
addb
into
mov
adcb
pop
sbb
movsl
call
sbb
add
push
stos
or
pop
mov
pop
mov
mov
ficomps
adc
sub
sbbb
mov
sub
mov
or
cmp
add
mov
adc
jne
mov
and
pop
jg
je
and
or
cltd
test
push
or
xor
movsl
cmp
add
and
out
jno
lea
clc
adc
mov
mov
rolb
pop
inc
dec
cmp
adc
fisttps
or
mov
sahf
inc
jg
nop
pop
test
sahf
jns
xchg
and
mov
mov
mov
ja
sbb
cmpsl
push
adc
pop
popa
xchg
mov
and
cmpsb
sbb
cmpsl
and
stc
pop
dec
mov
fisubrs
and
addl
sub
and
fwait
sub
sbb
mov
adc
nop
add
pop
and
jecxz
cmpsb
out
sahf
xchg
mov
or
mov
test
push
add
cltd
std
xchg
sbb
addr16
icebp
mov
push
mov
sbb
in
add
or
aas
pop
mov
cmpsb
stc
sbb
mov
enter
pop
mov
es
inc
mov
andb
mov
mov
push
and
daa
mov
setle
aad
xchg
add
lahf
add
mov
loop
add
pop
sbb
dec
pop
popf
daa
rorl
sbb
mov
ds
mov
cmc
dec
adc
or
xchg
test
jp
mov
or
pop
xor
push
and
or
lea
and
popf
fwait
and
jge
test
inc
cmpsb
mov
daa
mov
andb
cmpsb
xchg
mov
je
xchg
cwtl
add
and
push
dec
daa
cmpsb
mov
or
xchg
mov
punpckhwd
xor
mov
mov
adc
aaa
inc
lods
jns
je
jp
mov
or
sub
mov
std
mov
or
je
add
inc
sbb
xchg
or
mov
cmpsb
xchg
sbb
mov
xor
mov
mov
cmp
sti
sub
sbbl
xchg
mov
xchg
mov
adc
or
dec
cwtl
lcall
int
inc
sbb
jmp
push
fadds
mov
push
fdiv
push
sbb
cmpb
xchg
es
mov
lcall
jb
sbb
sbb
lret
popf
lcall
xchg
mov
aas
mov
dec
mov
and
pop
and
xchg
xor
add
sbb
mov
and
ficoms
xor
mov
add
adc
mov
jne
lcall
mov
cmpl
xchg
iret
mov
cli
mov
xchg
push
mov
sbb
lahf
jbe
test
loope
rorb
xchg
mov
xchg
ljmp
sbb
movsb
adc
xor
sub
icebp
inc
cmpsb
sbb
std
in
cmpsl
aaa
add
stc
les
cltd
xchg
push
xor
or
push
pushf
sahf
sbb
push
mov
sahf
in
rcrb
pop
xor
orl
cmp
xchg
mov
sbb
mov
or
inc
xchg
jae
cmpsl
add
ret
ss
popf
sub
pop
or
les
loopne
lret
icebp
or
pusha
or
aas
daa
sbb
inc
addb
popa
mov
inc
daa
adc
xchg
jo
pop
jle
fwait
mov
xor
jnp
and
adc
push
es
fwait
mov
jge
sub
xchg
sub
mov
cs
inc
es
fistpl
adc
push
add
subb
mov
fwait
cmp
lahf
sbb
cmp
or
inc
xchg
cs
mov
cmpsl
or
xchg
cwtl
xchg
enter
test
push
pusha
sub
and
adc
push
push
or
push
rep
push
xchg
adc
mov
jae
adc
cltd
xchg
lret
js
mov
js
mov
jle
pop
nop
pop
test
cs
mov
mov
sbb
nop
pop
jp
xlat
sub
js
xchg
cmpsl
add
mov
xor
mov
addl
add
mov
sub
pop
mov
mov
aas
inc
add
sahf
sbb
movsl
leave
dec
push
pushf
sub
sbb
aas
sahf
es
dec
sbb
sbb
hlt
push
mov
adc
cld
lods
subb
dec
nopl
es
add
push
sti
mov
mov
sbbb
cmpsl
push
mov
imul
add
add
hlt
popa
mov
push
xchg
pop
movsl
add
inc
into
movsb
inc
cs
adc
lods
mov
inc
out
pop
punpcklbw
orb
and
popf
shl
adc
adc
imulb
add
push
xchg
xchg
jle
popl
add
cwtl
aam
pop
outsb
pop
push
nop
xchg
adc
jb
mov
test
daa
mov
cmpsl
add
xchg
xchg
xchg
push
sbb
sbb
jnp
sbb
stc
shlb
mov
add
jb
dec
pop
clc
sbb
shrl
sahf
adc
out
lcall
testb
nop
mov
mov
fisubrl
lcall
movsl
jp
pop
cltd
pushl
cmpsl
xchg
mov
push
fwait
stos
insb
and
rolb
pcmpeqd
mov
es
mov
addl
xchg
pushf
comiss
sbb
fwait
or
in
or
icebp
shl
in
repnz
fisubrl
das
jge
pop
adc
add
insb
xchg
sbb
lea
daa
dec
cmp
xorl
sub
sarb
mov
xor
inc
xorb
insl
or
cltd
ds
fwait
or
hlt
push
dec
shlb
shlb
adc
or
inc
sbb
ret
sub
imul
std
jno
add
mov
outsb
jno
mov
pop
fsubs
sbb
int
adc
scas
dec
mov
mov
je
aas
test
xchg
test
push
dec
divl
ss
les
inc
adc
jbe
loope
dec
pop
test
and
out
loopne
sub
sub
add
cmp
xlat
adc
stos
xchg
mov
lods
mov
xchg
pop
dec
add
outsb
rolb
jb
add
sbb
daa
xor
stos
adc
pop
mov
push
pop
adc
into
xchg
or
xchg
sahf
xchg
dec
xchg
dec
sbb
mov
or
and
sbb
out
movsb
and
adc
pop
adc
sbb
cmp
cmpb
mov
int
sbb
inc
fwait
xor
js
loope
pop
and
jg
sbb
aas
sub
xor
test
add
cltd
cwtl
dec
fisttpll
pushf
pop
pop
mov
sbb
lods
data16
inc
cmc
mov
adc
frstor
push
or
mov
aas
mov
cmpsb
mov
jg
mov
mov
or
cmp
xor
mov
and
xchg
dec
pop
xchg
fwait
rcrb
lods
movsl
mulb
addb
sbb
push
lock
aad
push
fcoml
jnp
or
lahf
leave
adc
jg
add
push
lahf
xchg
adc
jbe
mov
stos
and
getsec
dec
xor
dec
mov
test
rcll
pop
adc
mov
sub
mov
sbb
cli
mov
cmp
mov
or
add
roll
les
cld
lcall
test
dec
jmp
mov
sbb
inc
or
mov
sbb
sbb
adc
jle
or
cmp
mov
aam
aad
add
sbb
sbb
or
rorl
or
xor
std
sti
adc
xchg
jbe
cmp
mov
lret
pop
and
xor
out
lahf
add
test
adc
mov
int
mov
dec
sbb
xor
mov
sbb
ret
cmpsb
inc
inc
cli
lds
jg
xchg
push
xchg
mov
cltd
movsl
and
iret
je
ficomps
jb
mov
xchg
daa
jae
add
and
mov
mov
xor
xor
pop
mov
mov
adc
cmp
test
adc
adc
mov
pop
xchg
sbb
es
sbb
dec
cli
aad
aas
dec
xchg
mov
jb
hlt
jne
fistps
jbe
decl
push
orl
lods
cwtl
or
stos
or
outsb
jbe
ret
xchg
mov
adcb
adc
adc
cltd
stos
sbb
je
mov
test
inc
jl
add
sub
add
mov
lods
sub
adc
aaa
xchg
rorb
adc
push
pop
add
xchg
push
inc
pop
cmpsb
or
xchg
data16
call
push
into
adc
push
xchg
bound
pop
adcb
test
mov
mov
sbb
adcl
adc
cli
cmp
xor
adc
mov
pop
xor
add
mov
jb
or
sbb
adc
lcall
adc
adc
lcall
mov
mov
shll
sub
mov
nop
xchg
cmpsl
push
shlb
je
lret
mov
sbbb
aaa
mov
cmpsl
cmpsb
sbb
repz
or
xor
decl
cmp
and
iret
jmp
sbb
or
cmp
jge
lret
aaa
jne
lea
stos
adc
mov
jo
shrl
cmp
enter
iret
lcall
jb
xchg
xchg
fs
adc
cmpsb
push
movsb
adc
roll
xchg
adc
lea
pop
xchg
pop
ja
je
insb
sbb
adc
jmp
stos
mov
or
xor
add
cmpsb
push
xor
xchg
push
sahf
movsl
xchg
mov
xor
sbb
jp
jl
add
sbb
adcl
and
mov
cmp
dec
lret
aas
rorb
lahf
scas
shl
and
lahf
mov
pop
jno
rorb
mov
in
push
and
bnd
daa
cwtl
pop
es
pop
jge
mov
or
mov
out
sti
outsl
mov
aam
jno
movl
mov
lods
cwtl
mov
xchg
sub
cmp
mov
in
jge
mov
mov
xor
inc
cmp
jb
adc
aas
or
mov
jmp
or
cwtl
fwait
mov
or
arpl
daa
pop
mov
mov
rcrl
xor
xchg
xchg
cwtl
adc
int
fxch
data16
sbb
push
jbe
aaa
and
pop
cmp
sbb
or
aam
adc
insb
sahf
cmp
push
mov
inc
fisubs
pushf
popf
daa
xchg
insb
lcall
imul
decl
icebp
jne
mov
dec
cmpsb
sti
sahf
daa
xchg
fbld
cmpsb
pop
sub
mov
inc
push
lds
movsl
gs
pushf
je
sbb
arpl
pop
daa
or
sahf
adc
shlw
in
pop
xchg
lahf
add
cmpsl
and
sbb
lds
pusha
ret
mov
push
pop
jbe
adc
cmp
lahf
or
adc
popf
cltd
pop
cmp
incb
mov
ds
mov
push
mov
ficoms
test
mov
xor
xchg
inc
adc
push
lcall
inc
push
fstps
cmpsl
lods
xchg
and
mov
sbbl
mov
push
sahf
mov
mov
mov
mov
lcall
repnz
pop
push
adc
sbb
adc
xor
pop
jae
sub
lret
mov
dec
adcb
pop
and
int3
sbb
fwait
dec
xchg
xor
mov
mov
sub
xchg
xchg
lret
sahf
lock
xor
sub
cmp
push
or
jg
cltd
push
jnp
int3
lods
lcall
xchg
iret
rorl
daa
adc
pop
out
ficoms
mov
mov
sbbl
sbb
es
lahf
rcr
xchg
cmpsl
inc
sti
cmc
inc
mov
cmp
xchg
mov
lahf
je
dec
or
fists
fsubl
add
mov
sbb
stos
cmpsb
daa
adc
dec
xchg
mov
and
lahf
dec
add
sub
push
mov
sahf
movsl
add
pop
cmpsl
xchg
setg
mov
sub
addr16
cmp
xchg
cs
adc
or
jb
or
dec
pushf
sub
mov
test
pop
mov
or
es
xchg
and
sub
push
xor
addr16
mov
cmp
jmp
add
setl
sbb
pop
pop
mov
sbb
mov
jb
xchg
xor
mov
add
cwtl
add
add
ds
or
adc
push
xchg
shlb
xor
imul
int
mov
fldenv
lods
mov
test
xchg
outsl
inc
pop
pop
push
dec
adc
push
add
cmpsb
and
aad
lcall
pop
bound
aaa
mov
loope
lcall
pop
jp
stos
pushf
dec
daa
iret
xchg
je
mov
mov
cwtl
or
mov
jg
cmpsl
mov
xchg
jecxz
xor
mov
ss
or
pop
dec
dec
pop
rolb
push
js
sbb
adc
test
and
mov
cmpsb
les
push
addl
ret
mov
sub
sbb
mov
mov
adc
xor
in
cmpl
dec
mov
xchg
inc
add
pop
adc
test
push
xlat
mov
sbb
jno
subl
or
leave
adc
stc
pop
xchg
stos
movsl
sbb
mov
pop
push
lahf
push
xchg
and
pop
dec
sahf
add
aaa
mov
mov
adc
sahf
push
adcl
pushf
adc
mov
jbe
sbb
in
inc
shll
ficoml
mov
or
enter
sahf
push
inc
cmp
xor
mov
xchg
mov
dec
addb
xchg
push
pop
pop
test
adc
mov
ss
pop
add
adc
inc
or
lcall
push
sub
jmp
sbb
fwait
adc
xchg
dec
sub
xor
stc
xor
pop
movd
pushf
or
pop
adc
xchg
fwait
out
push
sahf
cltd
jbe
outsb
push
adc
nop
adc
test
or
loope
pop
adc
and
stc
shl
cmc
icebp
mov
aad
pop
push
sub
inc
or
cmp
stos
mov
and
insb
mov
pop
pop
test
xor
or
sub
dec
cwtl
jno
aaa
xchg
xor
stos
jg
nop
dec
mov
aas
xchg
adc
push
cltd
sbb
mov
fidivs
or
sbb
and
push
and
lgs
sbb
repnz
hlt
adc
mov
add
mov
aas
out
cmpsl
adc
xchg
add
or
pop
mov
pop
sbb
xor
leave
mov
jbe
add
xchg
pop
daa
cmp
enter
notl
dec
xchg
xor
rep
pop
xchg
loope
inc
cmp
push
lcall
jg
pop
ret
cmp
pop
sbb
mov
xchg
add
mov
lcall
jle
sbb
adc
and
test
pop
movsb
and
scas
pop
scas
xchg
pop
scas
jecxz
or
mov
jo
xchg
call
push
push
jnp
adc
or
or
xor
or
dec
or
into
cltd
or
lcall
dec
sbb
data16
arpl
add
mov
inc
jmp
adc
movq
add
mov
push
test
jb
adc
sub
dec
ficomps
adc
adc
or
add
mov
and
or
sahf
cmp
sbb
dec
js
mov
xchg
xchg
jmp
fstl
cmpsb
call
sbb
bound
mov
into
in
sbb
cmpsl
cs
and
xor
cmpsb
push
popf
aaa
movsl
sbb
xor
addb
add
push
popl
lcall
sti
xor
mov
test
adc
xor
pushf
mov
je
jo
mov
imull
data16
jb
lea
bound
cmpsl
add
jle
mov
jmp
pop
and
pop
aaa
inc
dec
orb
or
nop
fs
movsl
adc
sbbb
sub
push
inc
push
mov
xchg
xor
add
les
add
mov
decl
push
in
adc
scas
and
add
mov
loopne
mov
sbb
rcll
inc
and
cmpsb
shlb
push
data16
adc
xchg
xor
adc
mov
cmp
pop
and
mov
pop
push
test
outsb
push
daa
mov
mov
mov
and
pop
sub
mov
inc
mov
xor
das
popl
mov
mov
cmpsl
mov
push
mov
mov
jb
ja
add
or
mov
sbb
inc
adcl
push
es
mov
nop
pop
popw
xchg
lcall
loopne
ja
or
mov
clc
inc
mov
pop
int
sbb
cli
je
sysexit
test
cmp
and
mov
mov
mov
aaa
adc
pop
fs
cwtl
sbb
dec
mov
lcall
mov
pop
sbb
cmp
jge
mov
mov
mov
test
fwait
es
cmpps
mov
add
pushf
sbb
xchg
sbb
xchg
add
mov
loope
mov
or
es
enter
jbe
and
sub
mov
xchg
adc
sub
inc
decl
sbb
lcall
xchg
mov
test
dec
sbb
dec
push
mov
sbb
cwtl
add
or
pop
sbb
or
mov
mov
aam
out
xchg
fmuls
lds
daa
into
dec
and
es
adc
inc
xor
mov
aas
pop
xchg
add
mov
or
sbb
cwtl
fwait
or
adc
cmpsb
iret
fisttpll
movlps
mov
pop
sbb
faddl
arpl
or
mov
enter
aaa
dec
xor
aam
xor
inc
dec
jo
mov
mov
lds
and
adc
inc
pop
xchg
inc
and
shrb
mov
mov
cs
mov
cs
mov
push
and
xor
add
xor
sub
fildll
popf
mov
push
cmpsl
out
cli
mov
cwtl
mulps
xchg
jo
xor
jg
or
jb
popf
test
std
sbb
insl
sub
fildl
push
jns
daa
xchg
cmpsb
shll
adc
xor
lods
sbb
loope
xor
push
rcr
pusha
lcall
out
push
jl
mov
and
cltd
fsub
inc
adc
add
shrl
lahf
sub
nop
sbb
in
aaa
adc
aaa
mov
pushf
or
push
mov
lds
cmp
popa
and
xor
mov
leave
rol
in
or
mov
fdivrl
inc
mov
or
bound
xchg
push
adc
aam
push
pusha
dec
fsts
mov
scas
adc
aaa
pop
adc
bound
or
fidivrs
fisubl
dec
adc
mov
roll
mov
dec
mov
vmptrld
sub
lea
and
adc
mov
mov
dec
lahf
xchg
fcmovnbe
sbb
arpl
test
xchg
es
rcrb
xchg
mov
gs
sbb
mov
test
xchg
xchg
pop
int
cmpsb
add
sbb
loop
push
jg
adc
movsb
es
gs
xor
and
imul
sbb
xor
xchg
dec
mov
or
cmpsl
mov
and
push
dec
xchg
or
xchg
push
pop
push
mov
pop
ja
push
and
fwait
mov
mov
jb
dec
cmpsl
adc
into
mov
stos
aaa
aaa
repnz
rolb
lcall
mov
push
sahf
into
movsl
xchg
and
sbb
mov
or
cmpsl
push
push
shrb
adc
bound
int3
and
mov
sbb
and
pop
inc
pop
mov
es
popf
mov
adc
cmp
or
pop
mov
pop
ret
sbbb
lret
mov
mov
loopne
fsubs
inc
xchg
or
sub
mov
es
xor
outsl
dec
aas
jl
add
add
pushf
push
adc
xor
mov
insb
jb
and
xchg
fninit
sbb
sbb
mov
inc
sbb
lcall
pop
xor
sub
mov
mov
push
and
xchg
sahf
pop
pop
cs
sahf
hlt
into
xor
in
or
leave
dec
cmpsl
and
add
push
insl
push
and
or
xchg
push
pop
adc
cmpsl
and
pop
cli
add
mov
mov
dec
xchg
daa
inc
or
pop
adc
sbb
loope
adc
mov
mov
or
push
pop
inc
cwtl
xor
and
mov
insl
dec
sub
mov
sbb
sbb
sub
cmp
test
mov
sbb
sbb
inc
cmpsl
sbb
cmp
sbb
sbb
push
sub
xchg
loopne
gs
daa
mov
mov
mov
adc
and
xchg
nop
sub
icebp
sahf
mov
sbb
fisttpl
cmpsl
xchg
data16
adc
popf
popl
cmpsb
or
pop
sub
ljmp
mov
push
dec
stos
andl
cltd
sbb
pushf
subl
mov
or
movsl
xchg
mov
sti
dec
addl
pop
inc
outsb
sbb
test
cwtl
cmp
adc
sub
jns
ja
pop
xor
cmp
je
enter
jb
lahf
mov
add
cwtl
lock
and
pop
ds
mov
sub
test
in
mov
cmpsb
pop
sbb
cmpsl
inc
push
ficompl
adc
adc
nop
sub
xchg
sahf
mov
xchg
sub
cwtl
inc
daa
or
push
movsl
cltd
inc
imul
xor
lahf
das
in
lahf
sbbl
imul
sbb
cmpsb
or
or
mov
movsb
je
pop
sbb
jle
mov
adc
fiadds
imul
rolb
add
mov
push
stos
adc
or
in
add
mov
sub
adc
pop
mov
xlat
dec
je
xorb
fstpt
popl
xchg
in
mov
or
mov
xor
xchg
add
adc
or
adc
push
sbb
xchg
cmpsb
pop
pop
sbb
add
push
shrb
pop
mov
stos
cmp
imulb
sub
adc
push
mov
pop
mov
in
push
mov
in
mov
pop
lcall
stos
or
xchg
mov
lcall
add
jle
push
adc
fldl
push
mov
daa
addr16
dec
push
shll
cmpsb
push
lods
daa
mov
sub
loope
out
push
add
mov
mov
xor
cmp
nop
inc
add
jp
dec
cmpsb
push
pop
fwait
or
gs
jmp
into
aas
mov
ficoms
jle
cmpsb
xchg
mov
out
outsl
pop
sahf
inc
xchg
push
fildl
and
and
movsb
add
mov
xchg
cmp
xchg
dec
dec
mov
mov
sbb
popa
orl
adc
fldcw
sbb
shll
fldenv
lods
daa
add
or
ficompl
cmpsb
mov
sbb
jge
xorb
sahf
xchg
addl
sbb
rorb
adc
in
xchg
loop
stos
inc
pop
or
pop
or
sbb
inc
incb
sbb
xchg
test
es
xchg
mov
stos
xor
xor
mov
push
daa
inc
add
mov
fstpl
inc
enter
sbb
push
xorb
adc
sbb
push
pop
lods
mov
sbb
in
cmpsl
mov
mov
sbb
push
xchg
add
lahf
jb
in
dec
or
xor
cltd
dec
mov
nop
xchg
xchg
xchg
test
stc
aad
xchg
mov
or
or
lock
or
lock
ret
pop
mov
xchg
pop
arpl
mov
or
adc
pop
js
mov
xor
adc
sub
sbb
stos
in
add
pop
add
mov
je
setle
sahf
xchg
daa
mov
ret
or
jae
lret
out
adc
aas
sahf
lahf
or
or
insl
stos
lock
push
icebp
sub
sbb
and
orb
mov
outsb
pusha
test
mov
push
mull
dec
xchg
or
cmp
popf
lds
pop
scas
xchg
add
and
stos
push
ret
je
mov
scas
stos
lea
push
cwtl
pop
and
test
push
xchg
cld
mull
mov
dec
into
add
test
mov
xchg
leave
bound
lcall
and
or
lds
xor
inc
pop
bnd
sbb
movsb
add
xchg
aad
pop
mov
push
int3
mov
inc
cmpsb
jbe
stos
adc
bound
int
fs
and
sbb
and
adc
pop
inc
xor
mov
sub
sbb
cli
stos
add
jp
adc
jns
jbe
nop
or
add
push
int3
dec
or
gs
je
push
outsl
dec
jp
out
mov
xor
or
adc
push
pop
pop
xor
cltd
or
rcrl
push
sbb
or
aaa
or
add
lea
adc
movsl
xor
xchg
pop
jle
mov
mov
pop
cmp
sahf
xchg
sub
ret
fimull
cwtl
pushf
lahf
movsl
les
xor
inc
or
xchg
xchg
mov
fptan
daa
mov
ret
lods
movsl
test
mov
lahf
ljmp
dec
cmp
add
ret
add
and
sbb
push
adc
push
add
mov
or
adc
or
sbb
adc
fwait
or
lret
sbb
icebp
push
fidivrs
xchg
adc
add
add
and
sbbl
cmc
repz
outsb
add
call
es
sbb
decl
xchg
adc
ds
test
or
movhps
cmpsl
sahf
push
adc
adc
and
mov
adc
pop
sbb
mov
adc
sahf
or
pop
sbb
scas
adc
push
push
adc
lcall
mov
adc
and
inc
mov
xchg
mov
cmovbe
push
sbb
xor
mov
xchg
dec
push
xchg
xchg
mov
aam
pop
mov
or
je
mov
mov
adc
gs
rcll
push
mov
lcall
xchg
and
pop
pop
mov
adc
cmpsb
arpl
sbb
or
shl
or
adc
add
adc
sbb
sbb
pushf
xchg
jbe
mov
pop
push
fmull
and
cmp
sbb
aaa
add
mov
xchg
cvtps2pi
cltd
test
add
push
sahf
cmc
mov
lcall
xchg
and
fildll
lahf
clc
inc
sub
xchg
xchg
adc
cmovb
mov
or
adc
sahf
mov
mov
sysret
aad
daa
flds
sbb
or
sub
add
test
sti
addb
fcmovnb
or
sbb
adc
out
imul
adc
mov
test
cmp
test
outsb
leave
test
cmp
mov
jno
mov
pusha
inc
adc
nop
fwait
push
cltd
cmpsl
inc
or
or
in
mov
push
ds
adc
int3
pop
sti
xchg
sahf
or
orb
nop
adc
lea
and
xor
add
or
xchg
scas
mov
mov
test
dec
int
sub
xchg
pop
es
add
adc
icebp
push
inc
xchg
xchg
jge
lds
cwtl
std
movsl
leave
jno
sbb
aaa
inc
push
inc
mov
push
sbb
pop
and
push
cmpsl
movhps
xor
fmull
pop
mov
movl
add
dec
xchg
jbe
ds
cwtl
fwait
ud2
mov
xchg
int
sahf
xchg
adc
mov
mov
lahf
or
nop
xchg
sbb
or
popf
adc
mov
mov
add
mov
lcall
cltd
sub
cltd
test
lds
xchg
push
jbe
in
movsb
cmp
testb
adc
in
cmp
adcl
mov
jb
add
inc
andl
adc
sbb
lds
inc
mov
or
add
mov
xor
jae
sbb
cmpsl
xor
cwtl
jmp
ret
ds
lahf
xchg
leave
and
stos
inc
or
jb
in
inc
dec
jg
add
adc
aaa
mov
arpl
fidivs
add
ss
jb
mov
adc
or
xchg
hlt
fidivs
iret
push
cmpsl
sahf
mov
fdivl
adc
fistpll
sbb
adc
add
mov
or
or
or
loopne
aad
mov
orl
xchg
sub
aaa
call
pop
dec
jecxz
stc
sub
xchg
aad
xchg
daa
lahf
cmp
push
pop
sbb
roll
in
cli
pop
pushf
out
push
mov
test
xchg
mov
lock
xor
pop
pop
mov
dec
cmp
sub
pop
aaa
fwait
into
leave
sarl
sbb
sub
int
fs
sbb
dec
and
test
mov
pop
cmpsb
mov
and
xlat
mov
adc
pop
mov
fwait
sub
xor
mov
push
sub
inc
mov
and
and
xor
mov
icebp
push
repnz
inc
js
cwtl
je
pop
xor
sub
out
pop
leave
mov
mov
nop
push
add
xchg
decb
clc
xchg
pop
stos
shl
mov
xchg
mov
jge
mov
and
or
mov
add
mov
cmp
xchg
test
pop
xchg
fiadds
es
dec
sbb
call
data16
or
or
out
movsl
test
jbe
daa
and
sti
rol
mov
aaa
je
add
clc
nop
insb
and
and
xor
nop
mov
and
sbb
jbe
mov
test
mov
xchg
push
push
adc
sbb
fstl
aam
repnz
sub
movsl
stos
add
adc
cmc
mov
sbb
sub
sahf
ja
and
push
or
test
push
sbb
lahf
xor
mov
movsb
and
push
adc
xorb
or
arpl
nop
xor
mov
jge
insl
xchg
aaa
xchg
lcall
andb
paddusb
sub
testb
lds
inc
mov
iret
add
adcb
and
add
jns
cmp
or
xor
sahf
cmpsb
cmpsl
add
movb
popf
pop
mov
jecxz
test
mov
mov
pop
add
sbb
jnp
mov
negl
test
sub
push
es
add
fwait
int3
in
xor
mov
adcb
mov
and
lcall
and
adcl
add
and
jl
cs
mov
retw
adc
add
inc
sbb
push
xor
jne
mov
cmpsb
orl
mov
mov
push
cmp
scas
mov
lcall
addb
pop
sahf
mov
cmpsb
sbb
in
and
mov
or
sbb
movsl
stos
or
inc
push
ret
xchg
adc
adc
ds
sbb
orb
sub
jb
sub
or
sub
add
push
push
push
nop
xchg
sbb
inc
mov
pop
mov
call
dec
xchg
sub
push
sbb
sub
out
notl
mov
adcb
xchg
mov
mov
mov
mov
es
insl
fwait
pop
loop
xchg
cli
cs
adcb
aad
mov
incb
adc
cmpsb
or
popa
mov
xchg
outsb
xor
cs
add
aam
sub
lea
add
stos
cmpsl
cltd
inc
rorl
pusha
sbb
cmpl
cmp
sbb
and
jle
mov
subl
aaa
cltd
cmpsl
movsl
mov
gs
cmpb
push
stos
jae
mov
inc
nop
cmp
sahf
sub
mov
nop
mov
or
pop
push
inc
xchg
and
pop
xchg
stos
adc
sbb
mov
adc
dec
dec
fmull
jg
cs
cmp
and
in
xchg
pusha
test
orb
xchg
pop
inc
sahf
jmp
and
inc
cmpsb
mov
push
scas
add
pop
pop
test
mov
test
gs
sbb
inc
xor
dec
adc
mov
pop
loopne
bound
xor
push
xor
mov
cwtl
add
adc
bswap
or
outsb
mov
std
stc
xchg
and
sbb
dec
test
jp
xlat
and
mov
jbe
stos
stos
test
lcall
nop
adc
xchg
sbb
test
xor
xor
xchg
mov
adc
cmp
cmpsl
rcrl
lcall
jb
icebp
push
cmp
or
push
xor
call
es
pop
sbb
pop
stc
ja
adc
lcall
jg
or
stos
negl
mov
mov
cmp
inc
xor
je
inc
sahf
je
in
jne
mov
outsl
pop
lcall
lcall
stos
mov
mov
mov
shll
xchg
mov
cld
ja
adc
lcall
jns
mov
adc
lcall
lods
cltd
je
ja
or
push
insl
mov
dec
scas
ja
jbe
sbb
sahf
lcall
add
mov
xchg
mov
insb
lcall
cmp
xorb
ret
and
sub
xchg
mov
pusha
sbbb
add
fnstsw
sub
jb
mov
pop
pop
dec
adc
cmc
xchg
cmpsl
sub
js
out
je
or
mov
cmc
sbb
add
fsubs
xor
add
into
mov
pop
or
aam
sti
xchg
or
mov
xchg
adc
sbb
mov
adc
push
cltd
pop
in
dec
mov
mov
sub
mov
adcl
fistps
xchg
sbb
push
adcw
pop
movsl
daa
xchg
push
roll
mov
inc
std
dec
pop
out
mov
sbb
and
jnp
sbb
and
cli
mov
cli
push
mov
lcall
or
mov
adc
and
pushf
pusha
xchg
xchg
test
movsb
and
cmp
add
or
adc
pop
cltd
pushf
nop
mov
movsl
lret
les
lcall
lar
mov
movups
sbb
and
dec
inc
je
test
add
sbb
or
inc
xchg
lods
fwait
cmpsb
or
movsl
inc
stos
xchg
mov
xchg
ret
dec
mov
sbb
sbb
fwait
ret
add
xchg
push
sbb
ja
or
pop
xchg
ficoml
mov
fwait
mov
lcall
cmpsl
sbb
mov
xchg
subl
sbb
clc
adc
scas
js
xchg
jae
xchg
push
lahf
dec
cmp
out
mov
adc
or
mov
insb
mov
sbb
ljmp
lods
jmp
xchg
mov
dec
aas
leave
push
adc
jmp
xchg
adc
hlt
adc
jl
and
iret
addr16
stc
adc
mov
lds
pushf
mov
fwait
push
xchg
pop
hlt
sbbl
add
inc
mov
pop
inc
push
xor
mov
lods
adc
adc
sbb
stos
mov
xor
or
pop
push
jns
sbb
inc
into
cmp
jbe
cwtl
dec
call
xchg
outsb
xchg
lcall
mov
pop
pushf
cmp
shrb
mov
psllq
dec
sub
sbb
pop
je
mov
mov
or
xchg
iret
or
mov
mov
mov
adc
cmp
dec
add
ds
add
mov
mov
sbbb
outsl
mov
in
sbb
orl
aam
pop
or
push
cmc
sub
cwtl
push
xor
xor
cmpsl
mov
imul
lcall
mov
rcr
jo
add
test
rcrb
jne
sbb
add
mov
adc
je
cli
pop
mov
inc
cmpsb
pop
aaa
adc
jb
mov
lock
or
sbbl
mov
fidivrs
xchg
adc
cmp
xchg
xchg
mov
inc
pop
mov
lods
sahf
mov
dec
lahf
and
movsl
gs
mov
mov
addr16
test
sub
prefetcht0
inc
rolb
push
sbb
xchg
pop
lcall
cmpsb
imul
imul
xor
clc
addb
or
and
daa
jecxz
cld
xchg
adc
cmp
sbb
test
push
add
jbe
xchg
es
xchg
shrb
fnstcw
and
jg
cwtl
sti
icebp
ds
add
and
sbb
test
repz
lcall
xchg
and
sbb
mov
adc
insb
aaa
xchg
cmp
mov
jbe
mov
adcl
xor
or
mov
ds
and
mov
sbbl
sahf
mov
pop
pop
lock
mov
add
fwait
xchg
jnp
test
mov
push
into
and
clc
push
aas
xor
sub
mov
je
push
mov
lahf
mov
sbb
fsubrs
mov
pop
or
jns
mov
sbb
fwait
sbb
lea
inc
xchg
pop
adc
fwait
mov
sbb
or
sbb
cmp
fwait
daa
and
sbb
pop
fistpl
nop
jb
mov
xchg
xchg
shll
lcall
out
sub
dec
mov
xchg
or
mov
or
pop
or
xchg
cmc
lods
addr16
xor
mov
das
mov
loopne
faddp
or
push
adc
test
shr
adc
pop
xor
jle
mov
cwtl
mov
aas
test
test
push
adc
fs
sub
jb
sbb
adc
mov
xor
mov
sbb
repz
adc
or
insl
mov
js
sub
test
das
sub
sbb
gs
pop
mov
shrl
jge
mov
xor
push
mov
pop
cltd
add
std
pop
xchg
xchg
ret
xchg
lds
pushf
or
lcall
incl
mov
dec
or
sahf
popl
pop
pop
pop
mov
bound
icebp
pop
sbb
pop
push
or
test
or
mov
xor
cltd
and
jae
xchg
mov
cmp
shl
cli
mov
adc
mov
mov
add
ret
inc
jae
jbe
jb
data16
push
mov
sbb
lahf
jns
cltd
fstpl
and
mov
jnp
imul
pop
rorl
mov
sub
leave
cli
aas
invd
cmp
mov
sub
jb
mov
adc
pop
mov
mov
pop
lcall
mov
pop
stos
push
sbb
daa
data16
mov
push
xor
xor
xchg
cmp
stos
adc
inc
and
add
pop
xchg
push
dec
or
fsubrl
xchg
adc
push
sub
or
sbbb
add
xchg
daa
or
sbb
pop
pop
adc
mov
add
push
call
mov
pushf
inc
sub
cwtl
std
add
pusha
add
jbe
loope
mov
or
xor
mov
mov
add
inc
popf
sbb
enter
xchg
mov
cmpsl
fnsave
lock
popf
sbb
adc
push
addr16
adc
xchg
push
pop
sbb
xchg
sahf
sub
in
fstpl
sbb
or
stos
adc
mov
pop
inc
inc
or
cmpsl
mov
rclb
es
pop
mov
mov
loopne
arpl
xlat
sbb
xchg
cmpsb
mov
xchg
or
push
pop
or
mov
jne
pop
gs
mov
jecxz
xchg
stc
inc
xor
and
mov
shlb
mov
out
sahf
inc
jbe
sub
call
jbe
aad
push
jbe
push
push
pop
add
mov
icebp
test
outsb
mov
iret
mov
add
pop
cwtl
setbe
and
fwait
or
pop
mov
jle
mov
lahf
scas
pop
mov
lret
dec
es
sbb
sbb
mov
lahf
dec
repnz
cmc
or
push
jb
xor
mov
in
sahf
into
push
or
cmpsl
xchg
movsl
hlt
lods
sbb
dec
mov
add
pop
sbb
dec
aaa
cltd
dec
shrl
lahf
sbb
cmp
shll
in
inc
inc
mov
outsl
lcall
jle
sub
sbbl
test
add
push
fwait
dec
and
movsl
lcall
sbb
dec
mov
cmp
add
xor
cmp
test
and
fimull
incb
cmp
mov
xchg
test
fistpl
xchg
mov
inc
inc
dec
adc
push
std
jbe
adc
sbb
xorb
xor
or
push
pop
push
sbb
pop
mov
adc
lahf
dec
cmpsl
mov
pop
xchg
adc
ror
mov
enter
ret
stc
sbb
xchg
add
jb
push
cs
insb
inc
mov
or
and
sbb
sti
push
add
adc
mov
pushf
or
mov
push
push
adc
mov
sbb
cmp
xchg
sbb
arpl
xchg
adc
mov
mov
add
cmp
sub
push
rorb
mov
es
lcall
pop
pop
add
adc
das
mov
xchg
ljmp
cmp
mov
inc
jmp
xchg
inc
lods
xchg
pop
dec
mov
aaa
adc
xchg
cmpsb
and
push
add
cltd
mov
or
sbb
mov
aas
mov
sahf
xlat
pushf
mov
cmp
xchg
jb
sbb
sub
adc
js
lods
inc
mov
cmp
sbb
push
sbb
push
dec
add
sub
sahf
pusha
xor
cli
or
sti
cmp
sub
insl
stos
pop
daa
xor
inc
mov
mov
sbb
sti
pop
xchg
xor
mov
xchg
sub
cmpsb
into
xchg
in
xchg
adc
daa
fs
test
mov
pop
add
xchg
rclb
fwait
in
fidivrs
int
ret
jg
mov
jb
push
push
daa
push
add
adc
inc
xchg
nop
inc
pushf
push
pop
mov
cs
adc
xor
sbb
mov
addb
daa
mov
pop
sbb
or
xchg
xchg
sbb
cmc
push
or
sbb
pop
inc
jle
nop
cltd
or
pop
sub
adc
cmp
orb
and
mov
lahf
xor
xchg
dec
aam
sub
xchg
add
hlt
xor
pop
dec
jo
cwtl
cmp
je
in
lcall
push
push
xchg
pop
mov
sbb
rolb
adc
dec
and
fiaddl
mov
push
rclb
or
pop
cmp
add
jbe
sbb
sbb
call
adc
or
sti
es
orb
adcb
mov
xchg
rolb
jb
jb
push
or
pushf
adc
lcall
outsb
sahf
push
adc
int3
mov
iret
sahf
or
and
add
es
xchg
cmpsb
push
and
cs
sub
cmpb
adc
adc
xlat
mov
fwait
data16
sub
out
jg
cvttps2pi
dec
pop
add
popw
movsb
xchg
or
jo
sub
sub
mov
xchg
inc
jbe
lods
adc
aam
loopne
push
ret
sbb
sub
sbb
orb
cwtl
sbb
xor
sbb
mov
sahf
scas
repnz
imul
xchg
mov
clc
add
out
xor
cmpsb
xchg
mov
or
inc
mov
mov
mov
fwait
mov
enter
push
push
sbb
popa
add
xchg
xchg
adc
test
adc
mov
dec
mov
cmp
sbb
sub
test
arpl
aas
rolb
mov
xor
sub
pushf
inc
lahf
rcl
daa
jp
adc
pop
or
add
mov
add
or
nop
into
jne
es
push
sbb
cltd
jg
lahf
jb
dec
add
or
pushf
test
sub
pop
mov
sbb
inc
aaa
test
xor
cli
sarb
jmp
je
inc
ret
adc
xchg
cwtl
out
sarl
jmp
adc
std
add
bound
mov
adc
rclb
or
adcl
inc
mov
je
fidivs
mov
add
vmovq
push
repnz
adc
punpcklbw
pop
fs
mov
addl
test
adc
cwtl
sti
repz
shrb
dec
icebp
add
pop
aaa
add
mov
aam
lock
mov
cs
push
fisubs
adcl
adc
cmp
daa
jle
lcall
mov
insl
cwtl
push
outsl
jne,pn
jmp
sahf
xor
xchg
pushf
ret
add
or
pop
popf
cmpsl
sub
push
push
sbb
or
mov
dec
cltd
inc
sbb
aam
sbb
sub
mov
testl
je
stc
xacquire
adc
inc
movups
dec
add
orb
xchg
cmpsb
or
into
mov
cltd
imull
adc
dec
popl
mov
mov
and
mov
push
inc
mov
push
xchg
adc
xchg
andb
data16
xchg
ficompl
bound
in
push
adc
sub
fwait
loopne
push
lds
push
fmuls
mov
adc
adc
inc
scas
lahf
inc
cwtl
enter
dec
add
mov
aaa
leave
pusha
dec
pop
jl
mov
push
loope
inc
mov
push
jns
jbe
and
add
push
xor
cli
adc
add
movq
adc
cltd
and
mov
daa
sub
mov
sahf
lock
xor
je
lods
movsl
mov
inc
mov
add
cwtl
lret
or
fisttpl
pop
pop
or
nop
and
sub
js
cmp
es
pop
lcall
pop
cmpsl
adc
imul
je
aad
sub
push
mov
mov
or
jecxz
js
push
mov
mov
pop
push
clc
cwtl
xchg
xchg
adc
mov
cmpb
cmp
cltd
jbe
enter
cwtl
adc
ret
add
xchg
pop
lret
cltd
jecxz
or
pop
in
mov
setg
adc
xor
adc
les
and
test
cmpsb
and
or
movsl
dec
in
movsb
lock
adc
pop
daa
or
push
mov
push
push
and
lods
pop
test
xchg
and
adc
inc
push
mov
cmpsl
add
xor
fwait
xor
fiaddl
inc
mulb
cmpb
inc
fldl
add
inc
cwtl
dec
add
adc
or
test
xor
rcrb
sbb
int
mov
mov
stos
xchg
sbb
imul
rolb
inc
mov
xchg
xor
enter
hlt
mov
sub
in
push
pop
mov
and
and
add
push
lea
movsl
mov
out
jle
lahf
cwtl
mov
cmpsb
or
jge
adc
flds
hlt
movsl
fdivs
adc
mov
pop
cmpsb
adc
cmpsl
stos
clc
dec
jbe
adc
xchg
adc
mov
std
sub
lcall
sbb
inc
push
or
dec
mov
loopne
cmp
sbb
popf
adc
cmpsl
mov
daa
adc
push
cmpsl
or
jle
sub
aaa
sbb
fwait
cmp
and
adc
lods
push
cmp
nop
loopne
inc
mov
jne
add
sub
sbb
shll
nop
add
ret
pop
or
fimuls
fwait
dec
pop
mov
cwtl
test
mov
ret
inc
or
xchg
adc
js
inc
and
sbb
lods
sub
outsb
xor
and
inc
fists
cltd
cli
adc
push
fwait
jle
sahf
mov
and
sbbb
mov
xchg
adc
adc
ucomiss
adc
lahf
mov
aas
dec
push
xchg
cmpsl
mov
aaa
orl
sahf
or
lcall
das
stc
test
cmp
inc
add
push
and
pop
addl
stos
jb
and
xchg
aaa
push
jecxz
or
pop
clc
adc
jns
test
pop
lahf
mov
jb
sbb
sbb
xchg
jb
int3
scas
sub
adc
inc
add
mov
mov
jnp
push
mov
pop
cmovb
xor
xorl
adc
in
adc
and
sbb
adc
outsb
mov
add
push
inc
mov
lret
pop
mov
jmp
push
fcoms
dec
sbb
lret
sub
mov
lods
nop
adc
cmp
dec
popa
inc
push
xor
decb
xchg
xchg
cli
aaa
std
mov
sbb
daa
pop
jmp
lcall
inc
lahf
and
jecxz
test
adc
popl
sbb
ja
and
and
mov
arpl
daa
sbb
mov
stos
sub
dec
mov
jo
nop
mov
test
mov
mov
into
bound
sbb
mov
add
insb
and
add
mov
mov
std
mov
and
add
mov
add
into
or
jne
dec
mov
pop
xchg
pushf
xchg
sbb
negb
fldl
dec
lahf
sbb
push
and
sbb
lds
mov
and
dec
mov
movsb
add
cmpb
mov
imul
pushf
adc
rcrl
adc
outsl
bound
das
divb
mov
jg
pop
dec
and
int
inc
leave
adc
fwait
dec
loopne
dec
sbb
jne
in
rolb
or
js
adc
mov
xchg
mov
call
flds
stos
pop
je
dec
es
and
xchg
mov
cmpsl
xchg
inc
orb
cmp
test
mov
xor
xchg
orl
daa
pushf
test
mov
sbb
scas
lret
incl
xchg
int
dec
push
jp
or
xadd
or
xchg
mov
jns
cli
push
aas
xchg
mov
push
mov
dec
outsb
shll
mov
andb
push
fnsave
sbb
sbb
adcb
mov
xchg
aas
or
dec
lea
adc
ficomps
mov
ret
cmovnp
hlt
mov
mov
in
andl
push
xor
mov
shr
ljmp
jne
or
daa
mov
xchg
lcall
sbb
fidivrs
mov
jb
mov
orl
sbb
loope
addb
cld
mov
xchg
mov
sbb
je
jnp
pop
mov
orl
and
sbb
sbb
adc
in
sub
add
cwtl
bound
loopne
and
dec
stc
xchg
or
sub
imull
sub
sub
test
lock
test
sbb
adc
sahf
in
fsubrs
xchg
test
sub
loope
xchg
or
pop
dec
adc
mov
inc
sahf
xchg
add
clc
iret
push
sub
sahf
popa
sbb
pop
add
xchg
push
push
jbe
mov
nop
and
pop
fildll
mov
aaa
sbb
dec
xchg
mov
adc
and
fiadds
nop/reserved
lock
xor
mov
movsl
or
add
sbb
ss
mov
push
or
mov
sahf
adc
cs
adc
mov
push
fwait
mov
mov
adc
outsl
mov
sub
jmp
add
lea
pusha
mov
xchg
cmp
fucomi
or
inc
cli
je
int
stc
push
add
and
sbb
sub
or
aad
ficoml
xor
xchg
xor
mov
mov
cmp
fldt
adc
sbb
xchg
les
test
sbb
into
cmp
xchg
push
pop
popf
add
fmuls
test
sbb
ljmp
push
cmc
push
mov
ficoms
sbb
xchg
pushf
mov
push
data16
aam
cltd
xlat
jg
out
push
xchg
adc
jl
mov
adc
push
adc
jb
xor
sahf
pop
sub
into
test
inc
cltd
in
fadd
or
aam
mov
cmpsl
mov
lahf
xchg
nopl
adcl
mov
es
mov
pop
or
sbb
sub
repnz
push
cmp
into
aas
add
jno
nop
leave
xchg
inc
pop
ja
test
sub
sub
mov
lods
sbb
addr16
sbb
sahf
sbbl
cmpsb
adc
xchg
out
pop
adc
xchg
jns
pop
jne
lcall
and
dec
push
mov
loope
push
add
rorb
rorb
movsl
jg
add
loope
xchg
mov
inc
test
je
es
xchg
mov
cmpsb
mov
movsb
cmc
or
movsl
add
dec
ret
mov
inc
adc
inc
lods
mov
sub
in
scas
addb
sbb
test
xchg
enter
ss
xchg
stos
cli
sar
std
nop
and
jmp
into
sub
insb
test
cmpl
and
xor
lcall
dec
mov
xchg
mov
sub
mov
push
add
xor
push
mov
mov
inc
mov
stos
adc
dec
adc
xchg
mov
adc
sub
lahf
pop
jne
test
enter
and
ljmp
addb
jbe
sbb
outsl
sbb
sbb
push
pushf
mov
xchg
sbb
xor
xor
scas
xchg
xchg
jge
rclb
add
add
int
jmp
add
xchg
sub
add
inc
pop
mov
dec
mov
add
lcall
jns
adc
mov
dec
lahf
pop
pop
push
add
daa
inc
adc
test
scas
sub
dec
and
sbb
cli
mov
mov
jo
lahf
test
inc
jbe
dec
in
sahf
cmpsl
data16
or
xor
mov
xchg
fisttpl
sti
lret
nop
fxch
pop
add
mov
int3
cmp
xchg
push
mov
mov
sbb
mov
sub
xor
mov
pusha
mov
xor
xchg
mov
xor
cmp
xor
adc
xchg
sarl
xchg
pop
mov
mov
es
lods
imul
pop
lret
aad
call
pop
mov
adc
movsl
lahf
add
xchg
jle
mov
popl
stc
int3
test
stos
add
cmpsb
xchg
stc
or
aad
mov
daa
xchg
sbb
nop
cmp
and
cmp
fwait
xor
cmp
inc
cmp
cwtl
inc
fwait
mov
lahf
xchg
sahf
push
xchg
rorl
or
incl
mov
inc
mov
pop
lcall
jne
pop
pop
int3
xor
test
les
repnz
cmp
pop
ret
mov
mov
fdivrp
test
pop
pop
es
xchg
xchg
mov
jae
stc
popl
push
inc
pop
add
leave
mov
cmpsb
sbb
aas
sbb
mov
dec
or
ja
and
test
and
dec
adc
dec
jle
fwait
sbb
test
add
push
ja
test
push
xchg
push
push
add
sub
mov
mov
push
inc
xchg
adcl
int
push
and
arpl
lret
lret
adc
daa
push
pop
dec
sarb
and
inc
push
add
push
orb
test
or
pop
aas
lahf
sub
cwtl
xchg
dec
test
adc
cmpsb
jbe
lret
mov
mov
loopne
mov
sbb
in
xor
aas
sbbl
sar
mov
or
andb
and
fs
sbb
xor
mov
es
add
cwtl
mov
jle
or
ret
and
xchg
cwtl
aaa
stos
ret
push
push
push
adc
mov
test
sti
std
jns
es
iret
sbb
and
xchg
jo
cmp
imul
push
pop
xlat
add
inc
mov
pop
or
mov
adc
or
call
jbe
fwait
test
adc
adc
push
lock
inc
adc
int3
add
int3
add
add
sub
jecxz
adc
jb
mov
adc
adc
fwait
add
lahf
push
ret
arpl
fmuls
pop
cmpsb
imul
push
add
jae
loopne
sbbb
inc
xchg
popf
xor
sti
push
adc
subb
jne
or
add
pop
je
test
mov
sbb
call
setle
inc
or
lcall
in
mov
inc
mov
mov
and
fstpt
insb
inc
xchg
sub
xchg
push
cmp
sbbb
iret
stc
ja
sbb
sahf
mov
sbb
and
data16
icebp
inc
incb
int3
sub
sbb
andl
adc
add
push
adc
lahf
and
rcrl
mov
or
nop
mov
sbb
jp
sti
or
inc
sahf
lret
cmpsb
movsl
mov
aaa
pop
mov
adc
pop
ss
mov
add
jo
xor
imul
fildll
add
test
xchg
pop
insl
sahf
fwait
lcall
insb
or
add
add
cmp
jne
xchg
dec
les
je
cmpsb
imul
aad
sub
pop
rolb
test
mov
lock
adc
mov
mov
cwtl
data16
adc
orl
mov
pushf
sahf
scas
pop
pop
inc
pop
dec
rcrl
lahf
xor
push
andb
movsl
adc
sbbl
clc
sub
and
xchg
sub
pop
and
mov
sub
mov
or
mov
stos
or
stc
dec
fiaddl
xor
fs
adc
daa
or
pop
repz
ljmp
or
movsl
inc
jge
cmp
adcb
pop
add
lods
xchg
cltd
pop
str
lcall
mov
mov
testb
mov
mov
sbb
sbb
adc
insl
pop
es
and
adc
pop
mov
das
daa
pop
int3
into
push
inc
es
outsl
push
cli
xchg
or
add
daa
cld
sub
sub
sub
jb
lret
fsubrl
xchg
sbb
cmpl
xchg
xchg
mov
lea
add
insb
jle
pushf
xchg
iret
add
mov
mov
les
cmpsb
cmp
test
enter
mov
mov
jbe
jge
std
or
jge
xchg
aas
and
dec
mov
inc
push
jbe
sbb
sub
adcl
nop
add
cmp
mov
jg
xchg
and
mov
nop
fwait
pop
push
sahf
cmpsb
mov
and
fwait
lahf
fstl
add
dec
mov
mov
and
scas
adc
xchg
test
cmpsb
rcrb
mov
add
fisubrl
push
lds
subl
push
add
addr16
push
adc
lret
es
adc
les
and
jmp
rcll
or
mov
mov
cmpl
add
loop
xchg
pop
pop
pop
sahf
outsb
cmp
sbb
adc
fidivrs
cs
or
xor
adc
add
add
mov
xchg
mov
mov
mov
aaa
cwtl
pop
aas
jns
xchg
cmp
out
or
cmpsb
bound
sbb
sbb
mov
mov
cwtl
mov
in
xchg
adc
sbb
sahf
mov
cmc
sbbb
cmp
sbb
mov
aas
and
data16
and
and
add
test
out
mov
jle
sbb
pop
aaa
mov
add
lahf
fidivrl
add
sbb
inc
imul
inc
lds
jb
sub
sub
pop
cmpsb
push
jge
jae
leave
xchg
mov
filds
inc
cmp
mov
xchg
jb
mov
sahf
fwait
adc
mov
stc
xor
std
add
imul
cmpsl
adc
into
pop
mov
mov
adc
xchg
sbb
cmp
xchg
nop
adc
push
adc
mov
mov
dec
sub
jl
and
push
mov
mov
adc
jle
adc
pop
jge
icebp
sahf
cmp
or
test
stos
or
test
daa
fsts
sbb
adc
push
daa
push
jne
pushf
mov
mov
push
test
sub
adc
fisttpl
ja
add
xchg
bound
or
sbb
pop
mov
decl
ljmp
leave
adc
inc
adcl
rorl
in
int
loop
jg
add
adc
clc
jbe
add
xchg
cli
dec
sti
xchg
inc
jbe
add
stos
sbb
or
xchg
adc
enter
arpl
push
sbb
sbb
push
and
or
pop
mov
mov
sbb
push
xchg
push
add
add
jmp
xchg
andb
mov
cmpsl
jg
push
jbe,pn
adc
push
jb
jbe
xor
adcl
pusha
cmp
inc
push
xchg
in
mov
mov
sbb
xlat
and
scas
rolb
or
scas
dec
fsts
and
adc
and
add
enter
out
ret
mov
jg
sbb
adc
pop
or
pop
sub
adc
xor
sbb
stos
sbb
sbb
jle
daa
es
test
dec
lret
sbb
je
and
inc
ja
fbld
or
mov
and
inc
pop
pusha
sub
test
sub
pop
popa
movsl
xchg
cwtl
dec
xchg
adc
addr16
and
lahf
aam
les
adc
mov
mov
cltd
cwtl
xor
out
cmp
call
mov
test
xlat
mov
sbb
sbb
jg
sbb
pop
lcall
adc
sub
pop
inc
leave
inc
adc
xchg
pop
xor
lcall
mov
xchg
push
mull
sub
mov
adc
je
jmp
lods
adc
cmpsb
cltd
and
ds
dec
sbb
xchg
sbb
xchg
cmpsb
sub
aaa
mov
or
mov
push
ljmp
fcmovnu
adc
push
sahf
xor
cltd
in
push
psubusw
or
cmpsl
inc
push
xor
lcall
mov
cltd
or
xchg
jle
add
bound
shr
mov
adc
daa
bound
test
popl
stos
xor
adc
xchg
mov
push
sub
mov
mov
fwait
cmpsl
and
pop
jg
jb
xchg
xchg
mov
cmpsl
movsl
loop
pop
pop
cmp
sbb
movsl
pop
sbb
pop
loopne
gs
mov
xchg
xchg
xor
push
adc
std
pop
inc
cmc
loope
mov
daa
add
xchg
mov
out
inc
pop
arpl
dec
and
and
sahf
pusha
inc
add
or
out
iret
jmp
cmp
push
xchg
push
mov
xchg
inc
je
or
lahf
dec
nop
lcall
mov
mov
call
sbb
fadds
xchg
out
or
cmpsl
mov
push
iret
dec
pushf
add
daa
adc
lds
pop
or
xchg
pop
add
pop
fwait
cmp
or
mov
mov
jle
add
push
stos
xchg
loope
jo
pop
xchg
mov
sti
pop
add
xchg
sbb
pop
popf
sarl
push
or
mov
xchg
adc
out
mov
cltd
daa
mov
mov
or
test
and
jg
xchg
xchg
into
xchg
sub
int3
bound
daa
jb
mov
pop
add
push
and
pushf
xchg
adc
orb
pusha
flds
je
sbb
xchg
test
jb
popf
sahf
or
and
sbb
or
stc
adcb
stc
decb
or
lods
les
mov
in
xchg
push
jo
push
push
addb
sbb
mov
and
outsl
push
lahf
mov
adc
mov
push
inc
xchg
mov
pushf
sub
add
inc
adc
cmp
add
add
and
adc
mov
nop
lahf
shrl
adc
in
xchg
cmp
or
or
test
or
push
jb
out
and
int
sbb
pop
add
sbb
sub
ljmp
mov
test
or
xor
or
lcall
int
xchg
mov
pop
mov
xchg
cmpb
pop
jmp
add
bound
xchg
inc
pop
mov
sbb
data16
es
sahf
lahf
in
or
push
lahf
xchg
lods
xor
or
add
jnp
mov
mov
pop
cmp
sbb
jge
mov
add
loopne
fists
adc
jnp
int
adc
jbe
push
sahf
mov
aad
daa
lods
ret
test
fwait
adc
in
add
cmpsb
test
mov
push
dec
jge
cmpsl
pop
mov
pop
push
es
pop
jp
adc
xchg
leave
pop
lcall
mov
or
push
cmpsl
inc
and
push
adc
sahf
xchg
xchg
and
test
pushf
cmp
pop
outsb
inc
or
andl
xchg
loopne
inc
addr16
repnz
inc
xchg
xchg
mov
xor
xor
push
xor
xchg
adc
lods
test
mov
andb
cwtl
cmp
jb
cmp
cmp
jo
insb
les
sti
and
cli
xchg
lds
pop
mov
mov
cmp
add
or
mov
sbb
sbb
sub
mov
mov
and
cwtl
jno
pusha
pop
out
es
retw
sub
pop
jne
adc
cs
sub
lea
xchg
dec
sbb
adc
cltd
push
icebp
push
mov
out
lods
mov
or
add
pop
xchg
cmp
and
mov
adc
xchg
mov
lahf
sub
and
xchg
mov
add
xchg
es
mov
test
and
adc
mov
lahf
adc
in
add
or
pop
sbb
jl
xchg
mov
pop
mov
or
adc
xchg
cli
outsl
cmp
mov
mov
mov
xchg
movsl
or
stos
adcl
pushf
sub
cmp
and
mov
test
es
out
dec
sbb
xor
out
inc
adc
mov
test
bound
cmc
pop
mov
adc
xchg
add
jno
orb
xchg
sbb
popl
stc
lock
cmp
add
pop
xor
mov
adc
dec
lahf
add
mov
cltd
push
cwtl
push
pop
fwait
mov
sbb
test
and
add
adc
cmp
pop
and
insb
or
std
and
subl
xchg
cltd
xor
sbb
dec
in
push
imul
lcall
cltd
test
fists
cmp
sbb
pop
and
adc
loop
test
jg
sbb
inc
sbb
daa
add
movsb
pop
adc
lds
sbb
push
xchg
fsubl
jge
daa
lahf
adc
push
sbb
xor
or
add
addr16
test
jbe
mov
or
rol
popl
int3
movsb
pop
into
dec
inc
les
rclb
orb
xor
add
jbe
and
mov
daa
fwait
pop
push
sub
push
lea
push
add
mov
icebp
lret
arpl
mov
dec
push
es
repz
lahf
cmp
mov
pop
ficoml
or
addl
add
fwait
and
mov
cwtl
inc
jo
scas
sub
leave
mov
frstor
pushl
and
nop
in
lods
pop
jns
fwait
sub
mov
inc
dec
xchg
cmp
into
lods
add
mov
scas
sahf
test
mov
xchg
dec
jne
enterw
dec
aas
sbb
pushf
sbb
sbbl
cmp
lfs
jge
inc
adc
or
xchg
dec
mov
sbb
or
sbb
xchg
pop
pop
or
or
in
cmpsb
dec
push
mov
adc
roll
xchg
push
push
jb
in
adc
test
pop
mov
xor
mov
pusha
pop
push
mov
xchg
or
xorb
mov
push
and
mov
mov
mov
dec
daa
sub
pushf
adc
stos
lret
out
and
nop
clc
sbb
adc
or
and
sbb
popl
adc
or
stos
lods
cmpsl
xchg
in
push
xchg
adc
adc
xor
mov
mov
cmp
push
imul
sub
xchg
or
push
call
test
push
dec
roll
xchg
int
aad
add
test
ds
pop
add
pop
jae
inc
cmpb
fiaddl
and
adc
add
push
pushf
leave
cmpsb
shlb
or
inc
sub
inc
push
lcall
movsl
cltd
xchg
dec
mov
test
xor
or
push
out
push
xchg
fisubl
mov
or
xchg
sub
fcmovne
jle
sbb
daa
sbb
push
mov
adc
cmp
lahf
jbe
stos
mov
mov
dec
nop
pop
insb
enter
inc
cltd
lds
and
pop
add
xor
adc
push
mov
inc
mov
mov
mov
adc
iret
inc
cmpsl
adc
push
mov
or
and
loop
dec
adc
xchg
xchg
fistpll
dec
push
xor
ljmp
adc
pop
jns
sbb
rorl
or
mov
push
sbb
lahf
daa
sbb
adc
pop
test
arpl
pop
fmuls
sbb
or
fwait
pop
push
lods
add
mov
dec
pop
cwtl
adc
in
cmp
movsl
inc
gs
cmp
jne
mov
xrelease
subb
nop
mov
xor
icebp
cwtl
ds
cmpsl
fwait
sbb
add
add
mov
xchg
adc
movsb
mov
mov
jge
mov
mov
pop
or
sbb
jnp
and
stos
lcall
enter
add
lret
pop
in
sub
jbe
sbb
adc
es
mov
add
and
inc
sub
xchg
cwtl
call
lcall
mov
cwtl
or
adc
xchg
cmp
xchg
and
ficoml
adc
das
mov
xor
rcrb
sbb
xchg
pusha
mov
pop
mov
ret
loope
add
jecxz
add
mov
xchg
xor
adc
or
pop
mov
cltd
sahf
mov
mov
or
adc
push
fwait
mov
fadds
cmp
add
cwtl
hlt
fidivs
lds
or
mov
es
mov
lret
ss
loop
aad
add
js
push
xchg
and
mov
push
push
addr16
push
mov
pusha
push
cltd
and
lds
xchg
adc
orb
mov
add
sbb
rolb
clc
push
scas
xchg
mov
mov
mov
jle
cld
dec
pop
mov
push
jno
mov
or
jp
sbb
adc
sbb
aas
adc
mov
or
lea
mov
pop
pushf
cltd
in
mov
daa
outsb
and
jb
sbb
or
mov
stos
xchg
mov
mov
in
mov
cmp
aaa
push
lock
movsl
ficomps
sub
pop
es
push
mov
jbe
xor
cmpsb
sbb
addl
cmp
xor
add
sbb
rcll
sub
mov
mov
lcall
aam
mov
pop
xchg
adc
sahf
add
pop
push
mov
cmpsb
push
mov
sbb
stos
ret
xor
xchg
repnz
test
sub
mov
mov
mov
es
or
pop
mov
je
adc
xchg
xchg
adc
jae
push
mov
pop
sbb
sbb
leave
push
subl
aad
lds
push
cmp
add
adc
push
std
mov
adc
add
lahf
push
lahf
cli
fwait
adc
push
enter
test
test
in
jns
sahf
pop
xchg
adc
xchg
pop
push
xchg
mov
cli
or
pushf
movsl
xchg
movlps
pop
mov
mov
bound
pop
add
mov
mov
aaa
sbb
mov
dec
xchg
mov
fwait
pmulhw
jo
jecxz
pop
cmpsl
mov
fnstcw
enter
sahf
xchg
xlat
xchg
jecxz
lcall
jbe
mov
add
adc
xor
sarl
xor
aaa
cltd
lahf
mov
mov
add
je
mov
pop
int3
pop
lcall
rcll
test
cmpl
lahf
mov
mov
sahf
jl
jo
push
mov
xor
jb
movsl
ds
mov
sahf
and
jg
pop
pop
arpl
sub
data16
bound
mov
mov
push
cwtl
add
sub
mov
mov
pop
not
fisttps
mov
add
mov
aas
mov
lahf
sub
sahf
fmull
inc
add
xchg
dec
test
or
push
sbbb
adc
xchg
adc
mov
subl
inc
inc
lods
vmread
sbb
push
outsb
or
xor
and
sbb
adc
adc
mov
mov
es
sub
imul
or
mov
std
mov
add
mov
jmp
sbb
nop
xchg
xchg
sbb
ret
jge
aad
adcb
movzwl
clc
xor
xchg
push
push
arpl
data16
stos
and
sub
mov
enter
data16
or
adc
adc
std
dec
je
daa
mov
pusha
mov
frstor
or
push
fstpt
pushf
sahf
in
mov
push
lods
sub
adc
cmp
loopne
jg
movsl
fiadds
stos
data16
push
pop
inc
insb
add
pop
hlt
push
das
outsl
mov
jl
push
cli
mov
lret
int3
scas
push
aas
inc
xchg
test
inc
clc
pop
nop
pop
lahf
outsb
imul
fisubs
sub
and
pop
add
mov
mov
dec
mov
jbe
mov
into
pop
adc
pop
or
mov
test
fildl
std
rolb
les
in
cmp
add
pop
inc
jb
mov
fidivrs
stos
cli
cmp
push
pop
pop
add
test
loope
test
jno
pop
push
mov
xchg
pop
sbb
fadd
in
leave
jo
je
movsb
imul
test
nop
push
movsl
add
cmp
sub
add
sti
jno
popa
xchg
jmp
lahf
std
sbb
daa
andb
jg
xchg
xchg
mov
imul
nop
les
mov
les
aas
adc
in
xchg
xchg
or
data16
mov
inc
bound
push
mov
dec
push
or
and
mov
adc
test
sahf
dec
sahf
arpl
adc
mov
mov
dec
shlb
xchg
jmp
mov
xor
jl
push
and
test
mov
push
add
aaa
mov
xchg
or
popf
push
orb
add
popf
imul
aas
or
dec
scas
or
fwait
and
pushf
stos
jl
arpl
hlt
pop
sub
cltd
data16
mov
dec
lods
and
lret
or
lds
rolb
sub
fwait
adc
mov
loopne
jle
mov
xchg
jb
sub
adc
daa
bound
popl
adc
xchg
lahf
xchg
xchg
je
pop
push
add
decl
adc
adc
mov
nop
mov
sbb
cmpsb
mov
ss
cmp
gs
mov
adc
fwait
sti
sub
mov
and
lahf
or
and
mov
inc
adc
mov
mov
icebp
xor
ljmp
sbb
inc
push
js
cwtl
test
or
add
lahf
mov
sbb
mov
inc
cmpsl
es
ss
fs
xchg
adc
mov
add
mov
adc
mov
xchg
stos
out
sbb
mov
pop
mov
adc
sar
add
add
mov
pop
add
aas
sbb
xchg
fwait
jo
mov
pusha
hlt
inc
movsl
xchg
xchg
or
push
mov
sub
jne
out
mov
adcl
sbb
popf
sbbb
xor
es
std
enter
cwtl
adc
pushf
or
pop
cmpb
and
adc
daa
mov
pop
mov
addl
add
and
inc
mov
aas
sbb
adc
dec
addl
mov
mov
adc
mov
xchg
lea
dec
rcll
mov
inc
fldcw
sbb
xchg
inc
sub
test
jbe
xchg
cmp
fsubl
mov
xor
int
sbb
sbb
dec
dec
cmpsl
lcall
outsl
xchg
mov
sbb
mov
sub
gs
jmp
pop
or
mov
mov
lcall
dec
adcl
test
xor
adc
adc
cltd
jne
adc
roll
xchg
orb
lea
mov
ja
iret
mov
pop
data16
mov
xchg
data16
mov
xor
es
popf
out
dec
push
xchg
ja
mov
fs
xchg
movsb
sbb
sbb
mov
lret
cltd
or
and
aas
sarl
mov
or
orb
xor
data16
mov
and
jns
rorb
or
int
imul
xchg
jp,pn
adc
insl
and
es
or
jl
xorb
aaa
lahf
mov
pop
call
sbb
cli
sbb
inc
jb
adc
ficomps
mov
js,pn
jb
mov
mov
mov
pop
imul
lahf
mov
cmpsl
or
sub
or
xchg
dec
pop
xchg
mov
adc
rol
push
xor
xor
or
movsl
adc
pusha
jle
adc
sub
repz
mov
test
or
or
bound
push
mov
pop
xchg
bound
mov
xchg
or
lods
fwait
iret
lret
dec
pop
sub
or
sbb
push
lcall
add
mov
enter
add
inc
ds
mov
and
sbb
sbb
and
cwtl
loope
push
dec
adcl
repz
push
sahf
inc
cwtl
xchg
push
mov
sbb
sbb
mov
sub
sbb
bound
mov
sub
cmp
push
movsl
stos
sub
add
or
push
insl
iret
movsb
fistpl
sub
mov
cltd
xor
mov
jle
adc
sbb
dec
daa
subl
lret
add
push
jl
push
pop
sub
mov
mov
repz
or
or
pop
adc
data16
lea
adc
xor
sub
je
into
jbe
mov
test
out
rcrb
stos
push
and
mov
nop
adc
xchg
outsb
ljmp
xor
out
addb
mov
jo
leave
mov
pop
mov
pop
mov
adc
xchg
aam
mov
mov
btr
and
cmp
clc
pop
xchg
jmp
je
and
pop
dec
andl
or
mov
jb
lahf
cwtl
add
xor
mov
test
mov
push
sbb
or
sub
ja
mov
or
cmp
and
dec
sahf
scas
add
xchg
inc
and
fwait
pop
sub
xchg
mov
lods
inc
mov
shl
scas
or
xchg
push
push
sbb
shlb
sbb
mov
inc
adc
mov
xchg
xchg
jae
add
sbb
xor
mov
and
lret
fcompl
daa
faddp
add
sahf
sub
jae
inc
push
pop
sub
add
daa
xchg
xchg
cmp
pop
mov
sub
cmp
xchg
mov
sahf
mov
xchg
cmpsb
adc
es
xchg
jge
mov
xor
add
sbb
cltd
dec
cmpsl
and
adc
je
xor
bound
test
mov
dec
sub
adc
clc
aas
pop
sahf
adc
xor
pop
add
inc
or
push
jle
cltd
mov
adc
sbb
or
mov
das
inc
rorl
jne
dec
nop
sbb
xor
fxch
stos
cli
inc
jmp
xor
or
push
adc
mov
cltd
add
shll
pop
lcall
or
sahf
adc
xchg
xorb
pop
prefetchnta
add
adc
mov
add
push
sub
pop
mov
fwait
xchg
ja
sbb
inc
std
js
xor
push
mov
pop
ret
insl
push
insl
pop
cmp
pop
xchg
and
cltd
or
push
mov
xchg
xchg
add
pop
mov
mov
adc
bound
negb
pop
xor
sbbl
xchg
mov
pop
aaa
or
aad
cltd
xor
push
jle
sbbl
pop
call
and
nop
xchg
fwait
je
fldt
sbb
mov
cwtl
sbb
or
mov
and
mov
pop
ret
xchg
je
jo
test
je
sbb
adcl
lahf
xchg
adc
cmp
push
mov
sbb
addb
sbb
call
jle
gs
xchg
sbb
xchg
shll
daa
pminsw
out
mov
sbb
pop
xchg
sub
add
pop
jg
adc
xchg
mov
lock
aas
xchg
or
stos
cwtl
mov
or
cmc
rolb
movsl
add
je
pop
xor
jge
andl
je
jge
inc
ljmp
fdivl
testb
je
xchg
scas
inc
pop
pop
je
imul
sbb
inc
xlat
pop
je
ljmp
sbb
inc
icebp
mov
push
je
and
lahf
out
inc
push
mov
adc
pop
sbbl
aaa
pop
cmpsb
fstl
push
sub
in
aaa
and
gs
dec
cld
aaa
insb
and
xor
xchg
mov
pushf
or
outsb
sbb
sbb
out
pop
jne
addb
jle
or
pushf
adc
dec
sub
inc
cmpl
push
or
xchg
fwait
adc
cmpsb
mov
nop
cmp
cmp
test
lret
inc
push
cmpsl
fwait
fwait
xchg
outsb
ss
call
push
sti
sahf
mov
mov
or
cwtl
jle
or
nop
std
addb
adc
push
addr16
sti
mov
mov
imul
sbb
add
adc
rclb
mov
lahf
sbb
mov
xchg
add
and
xor
popf
xchg
sbb
lods
shll
xchg
xchg
push
mov
sbb
push
adc
push
fucomp
lahf
imul
sub
or
pop
xchg
xchg
fldl
mov
inc
outsb
sub
aaa
nopl
cltd
mov
cmpsb
lahf
addb
mov
push
xchg
sbb
or
add
mov
aas
cmpsl
or
adc
orl
lahf
mov
or
sbb
xlat
cmpb
pop
insb
sahf
mov
adc
mov
add
fwait
pushf
orb
shr
shl
sbb
in
or
pop
pop
push
mov
orl
dec
in
inc
cmpsl
scas
add
add
inc
repnz
cmovae
mov
es
jge
xchg
pop
inc
push
cmp
setne
adc
rcll
in
mov
out
je
lret
xchg
mov
sub
sub
aad
scas
or
jbe
and
sbb
outsl
fwait
stos
test
mov
xchg
mov
lcall
out
fstpt
fsubrp
cltd
inc
sahf
push
sbb
or
mov
daa
mov
xlat
aaa
xor
or
fwait
mov
xchg
mov
cltd
and
add
es
mov
mov
lcall
fstps
add
push
jmp
jecxz
mov
daa
sbb
sbb
icebp
adc
xchg
sub
mov
sbbb
pop
jbe
icebp
push
inc
mov
mov
mov
pop
jle
mov
xchg
mov
stos
inc
or
and
cmpb
lahf
rcrl
add
push
test
cli
xchg
cltd
adc
aaa
aaa
aaa
clc
pop
int
mov
test
test
rcrb
mov
jns
nop
push
mov
sbb
push
jp
add
lret
enter
or
cli
fidivrs
xlat
or
aas
mov
in
rcll
dec
movsl
xchg
jle
xchg
mov
jmp
xchg
push
int
repnz
mov
cmp
hlt
test
cld
arpl
lea
test
jg
mov
cmp
outsb
inc
xchg
add
pop
cmp
pushf
je
jb
push
fwait
insb
lcall
sbb
add
lcall
and
lods
pushf
adc
ret
std
into
lock
rcrb
pushf
mov
imul
test
adc
cmpsb
add
fldcw
xchg
movsb
aaa
mov
in
ja
aaa
pop
aaa
add
mov
out
clc
xchg
mov
jle
xchg
pop
cmp
mov
or
mov
sub
push
push
mov
bound
push
and
mov
adc
cmpsb
push
sbbl
xchg
ja
mov
pop
daa
and
lock
push
imul
or
or
cs
push
cmpsl
pop
and
xchg
inc
test
push
jle
movsl
nop
stos
and
or
or
and
mov
xchg
sti
fnstsw
js
dec
add
mov
lahf
adc
cmpsb
xchg
add
xchg
daa
add
adcl
pusha
jnp
mov
add
push
orl
pushf
cs
mov
add
dec
mov
adcl
xor
inc
sub
mov
fucomp
popl
cmp
icebp
clc
popa
and
je
bound
mov
push
fwait
or
call
shll
add
mov
xchg
int3
nop
mov
cmp
mov
mov
adc
inc
mov
cmp
cmp
and
mov
adc
arpl
pop
dec
add
push
cmp
cltd
arpl
xchg
subb
and
sub
or
or
xor
cltd
or
adc
fld
nop
xchg
bound
add
mov
int
ret
ds
and
add
jb
cmp
sbb
cwtl
enter
dec
adc
clc
adc
daa
ret
sbb
lea
add
xor
xchg
mov
cmpsb
cmovo
jg
sbb
cmp
push
iret
mov
pushf
adc
bound
inc
and
xchg
mov
push
cmc
adc
mov
mov
sbb
dec
xchg
jbe
xor
mov
sbb
adc
stos
pop
outsb
incb
sbb
adc
adc
out
mov
pop
jo
aas
mov
mov
mov
jns
pushf
enter
sbb
or
cmp
xchg
inc
test
outsb
inc
cwtl
adc
inc
pop
test
or
stc
push
mov
push
notb
mov
negl
xlat
xor
scas
xchg
es
mov
sub
adc
push
subl
push
mov
sbb
or
mov
add
jge
dec
sub
or
and
cltd
pop
xor
je
xchg
adc
jl
or
add
adc
cmpsl
test
jp
add
test
mov
cmp
jb
lahf
xchg
in
inc
add
sbb
iret
mov
mov
sbb
xchg
adc
movsl
adc
cmpsb
lahf
and
sbb
adc
xchg
out
adc
adc
lods
sbb
shlb
xchg
mov
pop
or
mov
repnz
sbb
pop
jne
mov
push
cwtl
test
test
cltd
les
adc
fmuls
andl
add
in
flds
inc
mov
push
jno
pop
adc
ja,pn
nop
fwait
insl
and
xchg
out
rorb
insb
xchg
mov
test
daa
fwait
sahf
or
inc
sahf
roll
sahf
fimull
adc
or
add
add
ret
aaa
es
xorb
fimuls
cmpsl
push
add
nop
cltd
xchg
test
pop
enter
and
and
jb
pushf
xchg
daa
psrld
adc
mov
mov
mov
xchg
mov
orl
dec
or
jg
pop
fwait
in
xchg
es
xchg
aaa
or
add
in
and
insl
xchg
mov
daa
or
adc
cmpsb
sbb
push
adc
andb
push
sahf
sbb
int
mov
mov
loopne
cmp
or
sub
inc
sub
lahf
pop
dec
jne
or
fsubl
pop
xor
nop
push
ficoml
sbb
dec
fisubrs
or
and
mov
dec
test
push
mov
ds
cltd
adc
or
and
hlt
fwait
adcb
sbb
xor
mov
shlb
push
shrb
xchg
adc
push
filds
sbb
arpl
dec
fidivl
or
fldcw
out
mov
std
xor
std
popf
test
bound
sub
xor
lods
lcall
sbbl
sub
add
or
sbb
pop
or
mov
orl
cmp
push
sbb
pop
xchg
adc
xchg
daa
and
lret
mov
sub
push
mov
xchg
orl
sbb
xchg
push
pop
mov
insl
pop
mov
jae
mov
es
adc
sti
orl
xchg
jl
pop
das
sbb
jae
and
sbb
push
fs
add
pushf
lcall
inc
push
xor
push
pop
cmpsl
cwtl
dec
mov
or
add
stc
pop
mov
jge
xchg
jle
or
pop
bndldx
popa
mov
jnp
xor
jbe
sbb
movsl
std
adc
xchg
push
mov
sbb
rcrl
xchg
mov
jp
and
xor
add
test
xor
push
fwait
adc
lea
repz
inc
add
mov
setbe
data16
fwait
cltd
push
add
decb
cmpsb
in
jmp
or
and
pop
or
adc
daa
adc
push
add
bound
sub
mov
xor
roll
lcall
test
cmp
cmp
push
push
cmp
sub
sub
mov
xchg
cli
outsb
and
mov
push
push
sub
or
hlt
test
sbb
xchg
sub
sahf
or
mov
push
stc
outsl
jge
and
cwtl
or
movsl
sbb
stos
andb
mov
dec
mov
mov
cltd
mov
push
and
sbb
add
mov
or
inc
outsl
lahf
or
push
pop
scas
lahf
mov
or
test
mov
pushf
mov
loope
mov
out
push
and
add
sbb
or
mov
loopne
jmp
out
andps
je
dec
cmp
aas
and
pop
and
cmpsl
out
jns
pop
cmpsb
lcall
mov
adc
xor
push
les
xchg
cs
stos
sbb
mov
dec
mov
int3
add
dec
popa
add
add
cmp
mov
sub
sbb
jg
mov
iret
mov
fidivrs
push
xchg
scas
cmp
jmp
inc
pushf
orl
adc
aas
mov
cmpsl
pushfw
lcall
sbb
orb
pop
cmc
lock
ja
xchg
push
or
dec
adc
inc
xor
mov
jge
std
add
push
mov
fwait
push
mov
or
pushf
jbe
sub
lahf
xchg
mov
mov
testb
adc
lahf
je
add
cvtps2pi
mov
xchg
adc
cmp
pop
push
push
sub
or
adc
and
add
xor
pop
insl
lods
add
inc
sbb
mov
bound
aad
push
mov
xchg
push
mov
cmpsb
sub
ds
sbb
sbb
cmpsl
dec
mov
jecxz
jbe
sub
adc
jecxz
imul
mov
data16
or
aaa
es
fmul
sbb
pop
xchg
xchg
fwait
aam
push
sbb
add
sbb
jb
jb
rcrb
xchg
add
cmp
pop
mov
arpl
in
and
out
xchg
lret
fnstsw
xchg
or
push
xchg
push
cltd
lcall
mov
push
rorb
std
adc
inc
or
sbbb
add
imul
or
lods
xchg
mov
mov
mov
scas
adc
xchg
xchg
mov
test
add
adc
test
fwait
lcall
jne
sbb
icebp
add
adc
mov
sbb
outsb
xchg
stos
outsb
mov
adc
mov
add
add
pushf
int
xchg
xchg
lahf
xor
inc
cli
mov
add
jg
pop
inc
arpl
mov
push
lcall
mull
push
xor
stos
nop
cld
andl
and
test
andb
xchg
add
data16
sbb
fdivrs
sub
jle
jmp
and
xchg
lahf
pop
inc
and
adc
mov
pop
or
xchg
daa
push
dec
or
or
cmpsb
loopne
in
pop
test
mov
mov
add
cmp
pop
stc
sub
sub
adc
jl
loop
pop
call
daa
jno
and
mov
mov
pop
jno
lret
movsl
push
mov
jmp
mov
movsl
sub
test
mov
xor
mov
outsb
cmp
push
and
dec
out
add
xor
adc
xchg
mov
mov
std
fstps
sbb
mov
daa
or
mov
fwait
bound
sbb
bound
cmpsb
push
pop
or
add
mov
cli
mov
add
fs
jg
adc
adc
add
pop
dec
subl
jecxz
test
mov
pop
and
test
add
xchg
nop
xchg
push
mov
sub
inc
fnop
pusha
mov
or
pop
call
test
das
and
or
sub
and
xor
insl
sub
lods
xchg
sbb
and
adc
jle
push
jo
inc
pop
sbb
popa
mov
sbb
or
xchg
jb
cmp
mov
pop
xor
stc
push
cmpsl
or
push
pushf
sbb
or
mov
adc
cmovns
mov
xchg
or
stos
pop
cmpsl
jecxz
notl
cmc
int
movsl
cltd
add
cmpsb
xchg
not
mov
push
frstor
test
cltd
add
xchg
fstps
in
test
or
adc
push
xor
mov
andl
add
and
stc
pop
aad
adc
cwtl
pushf
fisttpll
lret
rclb
jnp
sub
cs
mov
jno
sbb
insb
ret
xchg
stos
sub
push
pushf
xor
fisubrs
or
sub
push
mov
outsb
pop
lock
adc
dec
roll
loop
sbb
or
pop
add
lahf
std
add
inc
xchg
lea
bound
and
xchg
dec
mov
sbb
mov
stc
dec
or
mov
stos
sahf
pop
add
and
sbb
lret
push
pop
jle
popl
fwait
mov
mov
outsb
mov
stos
rcrb
lds
sub
das
cmc
test
add
dec
fimuls
or
mov
idivb
cmpsb
adc
push
mov
push
adc
push
jbe
out
mov
dec
xor
push
test
sbb
adc
les
cwtl
sbb
or
adc
add
in
clc
mov
stos
or
pop
jmp
loope
mov
cmc
and
andb
sub
mov
mov
cmp
push
xchg
xor
cmp
cmp
lods
mov
xchg
mov
sbb
add
cmp
mov
push
sahf
in
sbb
mov
mov
aas
dec
adc
push
push
addl
popf
mov
mov
aas
or
cwtl
cli
addr16
outsl
lahf
dec
xorl
or
push
stos
cmpl
in
nop
push
cmp
xorl
jbe
or
mov
cmpb
pop
mov
cmpsb
mov
fisubs
pop
cs
xchg
or
rcrb
hlt
pop
test
dec
sub
sbb
adc
mov
and
cld
flds
ljmp
pop
stos
pop
push
les
jnp
ret
inc
and
cmp
aaa
and
add
sbb
in
pop
adc
and
or
xchg
mov
inc
push
adc
test
orl
mov
sub
pop
int
jno
or
jecxz
pop
pop
daa
mov
subb
add
mov
or
add
outsb
loope
xchg
out
add
pop
aas
test
or
daa
dec
dec
orl
mov
add
mov
sbb
add
jbe
outsl
jp
enter
pusha
mov
xchg
mov
aaa
test
stos
xor
xchg
push
je
mov
or
nop
cmp
fwait
adc
cwtl
mov
mov
adc
lret
mov
mov
add
addr16
ret
ljmp
pop
adc
out
inc
pop
push
dec
xchg
sbb
pop
xchg
sbb
mov
mov
fwait
or
or
adc
test
insl
push
sbb
xchg
js
imul
adc
or
sbb
mov
jae
or
movsl
add
xchg
inc
mov
adc
or
xor
aaa
pop
mov
bound
jbe
inc
sbb
je
push
enter
adc
xor
adc
cmp
pop
decl
imul
es
scas
xchg
cwtl
adc
icebp
adc
cmpsl
popl
test
sub
mov
and
or
pop
or
bound
xorps
pop
dec
fmulp
and
pushf
mov
or
sahf
hlt
loop
inc
popf
xchg
fisttpl
pop
add
jle
outsb
sbbl
xchg
notb
subb
add
sbb
pusha
stos
addb
push
cwtl
pop
cltd
lahf
push
sbb
je
sbb
xchg
xchg
lcall
and
or
pop
xchg
xchg
xor
sub
xchg
pop
add
cs
mov
cwtl
xchg
or
sysenter
xchg
adc
adc
pop
mov
mov
and
cmp
fwait
push
cmpsl
pop
je
xchg
cmp
pop
imull
mov
outsl
mov
dec
cmpsl
xor
adcb
add
mov
ljmp
xchg
addl
and
cmp
daa
stc
ret
or
test
mov
mov
push
mov
daa
movsl
add
inc
xchg
cli
sti
jg
stos
cmpsl
sahf
jl
test
xchg
sbb
in
push
pop
mov
jae
pop
mov
lahf
and
jmp
cmp
bswap
push
push
adc
and
dec
sbb
xchg
inc
push
and
dec
mov
cmpsl
or
sbbb
sbb
mov
or
cmp
push
sbb
inc
adcl
je
jl
fwait
test
add
adc
add
sub
cmpsb
mov
adc
mov
pop
jge
sbb
in
js
pop
add
dec
push
xchg
and
or
sub
sub
repnz
add
xchg
enter
lahf
iret
cmp
xchg
xchg
sbb
movsl
mov
mov
add
sarb
inc
mov
mov
fwait
jge
sbb
cmpsl
jge
xchg
xor
je
pop
cmc
leave
inc
jne
and
or
aaa
pusha
pushf
mov
jp
xor
adc
sub
mov
mov
sbb
push
les
imul
adc
push
fcomps
jle
pop
movsl
xchg
leave
xor
mov
sbb
sbb
jbe
jbe
movb
movsl
sub
push
andl
lods
jge
adc
int3
shlb
or
cmp
add
add
mov
daa
or
popf
sbb
dec
add
lods
sbb
fwait
mov
dec
rol
mov
or
sbb
int3
movsb
loop
lahf
hlt
popl
or
stos
enter
adc
int3
leave
dec
inc
xor
lahf
lcall
hlt
and
xor
into
ror
xchg
pop
xchg
adc
mov
andl
nopl
or
cmp
xchg
cmp
jbe
xchg
mov
es
jae
and
mov
rcrb
sub
add
xchg
dec
cwtl
int3
xchg
test
fsubrp
or
add
sbbb
mov
sub
or
push
insb
ret
sahf
jb
sbb
sahf
ja
push
pop
jbe
sub
stos
xchg
in
das
cwtl
into
aam
sub
sahf
in
and
sbbb
dec
dec
lea
or
pop
test
sub
lods
jge
push
pushf
push
mov
lcall
xchg
movsl
sbb
dec
dec
pop
pushf
dec
pop
xor
sbbl
gs
and
scas
xor
aaa
and
cs
lds
sbb
std
or
xchg
push
inc
mov
mov
test
sub
sbb
aaa
adc
shrl
subb
jecxz
hlt
nop
add
jo
sbb
xchg
sbb
jmp
pop
mov
cwtl
adc
inc
lret
data16
iret
push
adc
and
or
sbb
push
adc
sbb
jmp
push
xchg
dec
cmpsb
lea
cmpsl
es
push
ret
inc
or
movaps
inc
or
test
invd
or
fcos
mov
jle
test
lcall
inc
and
and
push
adcl
and
push
test
or
pop
bound
es
imul
adc
or
icebp
push
xchg
std
lcall
inc
insb
mov
jg
mov
push
xchg
movsl
int
clc
or
jne
add
push
lret
sahf
xchg
and
mov
push
fmuls
dec
seta
mov
sbb
ja
push
push
xchg
pop
sbb
xchg
mov
ja
addr16
mov
add
mov
mov
cltd
mov
add
in
int
sbb
sub
xor
mov
stos
push
xchg
aaa
xchg
xchg
sub
push
roll
in
cld
adc
xchg
mov
lcall
cwtl
mov
mov
xchg
insl
jp
adc
stc
and
mov
stos
lds
lods
mov
push
jbe
cmp
xchg
jmp
int3
fwait
cmc
dec
mov
mov
jb
sbb
popf
and
sbb
lods
sbb
pop
sahf
push
xchg
test
sbb
mov
sub
and
and
adc
orb
cltd
enter
fcomi
mov
mov
adc
xchg
mov
mov
or
sub
sub
out
mov
fwait
jg
and
subb
add
add
push
sub
cltd
add
hlt
add
adc
pushf
hlt
dec
adc
jo
push
pop
cltd
push
fwait
fwait
js
stc
rcll
jae
jmp
sbb
or
sub
lods
add
inc
sbb
add
pop
jae
sub
add
popf
insb
mov
pushf
fnsave
aas
xor
mov
mov
insb
je
mov
add
xchg
cmp
push
les
push
xchg
sub
arpl
stos
mov
xor
aam
notl
or
xchg
sbb
mov
sbb
flds
andl
xchg
push
sub
jge
gs
cld
xchg
gs
lret
add
and
jb
outsl
pop
jge
pop
pusha
or
into
mov
test
test
sub
jo
push
fiaddl
popa
je
sub
ret
xor
les
dec
dec
pop
mov
cmc
jae
mov
call
fimull
xchg
cltd
lds
xchg
sub
inc
sbb
je
and
mov
sub
mov
jbe
or
int
jl
pop
lock
xchg
fwait
mov
adc
xchg
adc
adc
xorl
mov
inc
adc
push
bound
clc
cmovl
incl
mov
lcall
pop
push
mov
fists
adcb
adc
fwait
fs
sub
cltd
lock
inc
imulb
rcr
inc
int
test
cmc
xor
mov
xor
dec
adc
xchg
ja
data16
mov
icebp
inc
push
mov
push
xchg
xchg
xchg
xchg
mov
outsb
xor
add
and
movd
outsb
aas
or
mov
lock
xchg
xchg
mov
push
pop
inc
mov
sbb
cmpsb
sbb
add
test
or
xor
dec
punpckhdq
fldcw
add
xchg
mov
ss
mov
and
mulb
adc
cltd
shl
adc
push
test
or
test
sbb
xchg
sbbl
jno
pop
dec
aaa
or
in
cmpsl
mov
xor
mov
pop
pop
xchg
dec
outsl
daa
aas
mov
test
rcrl
mov
dec
pushf
mov
add
int3
mov
mov
add
adc
sbb
mov
push
dec
adc
cmpsb
xor
mov
movsl
pop
std
push
mov
jnp
or
es
xchg
add
adc
rcrb
cmpsb
fnstsw
xchg
mov
sbb
add
adc
sbb
fwait
xor
add
and
pushf
pop
popl
mov
cmp
push
loopne
add
xor
jle
pushf
xchg
ss
sbb
xchg
mov
pop
daa
xchg
adc
in
adc
movsl
fisttpll
pop
inc
decb
and
xchg
sub
aaa
push
pop
fldenv
sbb
decb
bound
out
fnstenv
cmp
lahf
add
mov
sbb
sahf
add
sub
and
and
sub
jo
mov
adc
xchg
and
and
lahf
push
jmp
cmc
loope
std
add
adc
or
sbb
add
rcrb
jmp
sti
xor
mov
adc
movsb
mov
or
pop
and
es
xor
dec
in
adc
aaa
cmpsb
adc
fstl
fistl
mov
mov
lcall
adc
or
xchg
lcall
add
sahf
cwtl
mov
cmp
mov
xchg
adc
mov
add
xor
es
es
cmp
add
inc
adc
xor
xchg
xchg
cmpsb
je
add
add
sarb
pop
xor
data16
adc
sbbb
and
in
push
fdivrl
inc
xchg
push
pop
and
jb
jno
mov
mov
cmpsl
pushf
xchg
stos
adc
and
or
pop
sbb
mov
jle
inc
mov
mov
inc
adc
push
pop
xchg
daa
sahf
sbb
mov
cs
ret
adc
cmp
xchg
and
sbb
fisttpll
fnstsw
pop
xchg
cmpsl
sub
xchg
inc
dec
mov
inc
sbb
xor
push
cmpsl
xor
mov
xchg
int
or
or
jns
subb
cli
lods
fprem1
lea
leave
mov
dec
cltd
xchg
test
mov
cmp
add
ds
xchg
cli
adc
xor
xor
or
lret
ret
rclb
lcall
pop
aaa
xchg
lahf
movsl
jmp
sub
adc
xchg
jle
mov
adc
dec
aas
lahf
cmpsl
xchg
sbb
jno
andl
sbb
in
mov
fcoml
bound
sbb
and
xchg
shlb
test
lcall
inc
shlb
inc
jmp
loop
sbb
sbb
add
mov
stc
add
dec
or
mov
jg
or
sub
mov
push
inc
mov
lea
xchg
add
shll
push
add
cmpsb
or
movsb
sub
daa
inc
mov
iret
idiv
jp
xchg
and
pop
push
adc
cmp
dec
jp
and
add
mov
cmpsl
mov
in
arpl
add
test
punpcklbw
jb
add
sbb
icebp
sub
das
and
add
inc
adc
jmp
dec
sbbl
pop
test
in
add
es
sub
add
push
sbb
adc
pop
ss
add
xchg
mov
test
dec
test
cltd
adc
mov
inc
in
adc
and
jb
sub
sbb
sbb
xor
adc
stos
test
adc
dec
nop
xlat
inc
xor
repnz
or
cltd
xor
pop
adc
jle
movsl
xchg
mov
insl
lock
push
hlt
sbb
adc
mov
dec
pop
jne
mov
push
mov
je
cmp
fbld
rclb
test
jne
add
imulb
xor
jbe
fwait
sbb
or
xchg
pop
and
or
cltd
adc
punpckldq
sbb
xchg
add
bound
std
es
mov
or
adc
inc
mov
ss
add
mov
adc
test
dec
add
cwtl
xor
aaa
outsl
inc
push
push
cltd
cmpsl
sbb
sbb
int3
adc
rclb
data16
xchg
int3
xchg
add
adc
sub
mov
or
mov
push
xor
xlat
bound
loop
xchg
mov
xchg
sub
int3
sub
sub
push
push
jle
sbb
jb
test
aaa
adc
and
xchg
sub
push
pop
mov
inc
or
push
jge
push
push
jle
movups
inc
xor
pop
mov
fwait
cltd
sahf
ja
mov
mov
cmp
and
add
in
add
sub
push
adc
cltd
or
jle
adc
adc
xchg
pop
mov
adc
push
mov
movsl
pop
xchg
clc
jle
mov
sbb
fisubs
clc
adc
inc
adc
pop
in
ja
addb
inc
inc
ret
cmpsl
dec
dec
and
outsl
test
test
aad
push
lahf
rclb
andb
or
data16
pop
mov
push
cwtl
mov
add
cmpsl
push
pop
lds
jbe
outsb
test
popf
mov
mov
je
ret
dec
nop
repnz
adc
xor
dec
inc
mov
sbb
rcr
setne
jnp
mov
push
stc
pop
xor
adcl
pop
adc
pusha
pop
dec
mov
and
mov
sbb
stc
fwait
pushf
cmpsb
outsb
cs
pop
je
xchg
inc
stos
add
lcall
push
ret
aas
daa
or
inc
adc
lea
lahf
bound
insb
loope
fwait
imul
sbb
sbb
sbb
loopne
es
movsl
or
fwait
insl
cli
daa
adc
pop
sub
and
add
adc
mov
jle
sbb
cmp
pop
mov
push
sti
or
sbb
mov
fwait
adc
push
iret
xor
sbb
bnd
fnsaves
sbb
sbb
add
je
xor
xor
mov
pop
add
js
sub
and
nop
test
inc
add
mov
cmp
xchg
sarl
xchg
stos
xor
inc
jg
jle
and
and
mov
aad
cmc
mov
fiaddl
sbb
sbb
fists
mov
adc
xchg
insl
adc
aas
mov
lahf
cmpsl
push
inc
add
fs
daa
es
ficompl
dec
pop
imul
jbe
mov
push
outsb
cmpsl
add
addb
xor
mov
pop
xor
sub
sub
sbb
mov
cltd
jae
xor
aam
push
pushf
mov
aam
les
mov
add
add
cltd
sbb
cmp
aas
adc
xchg
ljmp
addr16
into
out
cs
add
xchg
add
mov
pop
and
adc
xchg
xor
pop
pop
test
fists
unpcklps
addl
sbb
test
nop
xchg
xchg
xor
or
scas
xor
pop
test
fsts
cld
adc
idivl
xor
pop
mov
jbe
push
cltd
jb
pop
adc
sbb
or
pushw
nop
push
je
incb
test
jg
xchg
lahf
iret
mov
add
xchg
int
aaa
adc
fstpl
pop
sbb
push
nop
cmpsb
sbb
adc
test
ds
andb
mov
sbb
xor
addr16
sbb
mov
ret
mov
adc
or
xor
jge
mov
mov
dec
loopne
add
clc
adc
mov
fwait
rclb
cltd
xchg
or
into
xchg
sahf
fadds
inc
xor
dec
mov
leave
add
sahf
loopne
sub
sub
xchg
mov
nop
and
pusha
sbb
inc
adc
xchg
mov
sbb
mov
inc
lahf
sub
sub
adc
adc
cmp
add
pop
pushf
pop
mov
aad
cwtl
inc
cmp
jb
out
lahf
pop
shll
rolb
cli
inc
cmp
rcrl
aad
sbb
or
pop
andl
adc
or
jbe
mov
pop
mov
inc
cltd
adc
adc
adc
xchg
xor
or
fldenv
mov
pushf
pop
mov
mov
stos
adc
mov
inc
jb
inc
mov
popf
sub
adcb
sbb
in
loop
cmp
mov
push
xchg
xor
add
add
lcall
cmp
or
incb
and
lret
xorb
dec
out
lcall
test
popf
sbb
mov
cmp
mov
cmc
ret
sbb
sub
cmp
lea
or
sbb
repnz
mov
stos
push
mov
pop
mov
push
aad
xorb
push
push
aas
push
or
and
pop
pop
mov
nop
sbb
es
data16
sub
sub
out
sub
or
movsl
add
or
stc
inc
daa
ret
cmp
ja
adc
cmpsb
dec
pop
sahf
outsl
mov
pushf
add
xchg
pop
addr16
int3
and
push
adc
sbb
mov
aam
pop
sub
adcb
mov
pop
mov
or
jbe
popf
setle
mov
test
and
push
push
pop
test
fidivl
iret
xchg
mov
sbb
pop
sbbb
test
and
and
cmp
lods
adc
dec
out
mov
aaa
add
cmpl
lds
jbe
xor
sub
pop
sbb
sub
add
pushf
lea
mov
enter
mov
cs
jbe
jb
lods
lcall
pop
shlb
xchg
jae
pop
insl
jbe
outsb
push
push
mov
or
scas
or
adc
pop
orb
jmp
push
sbb
bsr
bound
data16
and
push
pop
pushl
setnp
rcrl
out
cmpsb
xchg
dec
icebp
mov
inc
loopne
cmp
mov
mov
xor
mov
sub
xchg
mov
xor
sub
xor
cmp
mov
in
mov
mov
xor
pop
xchg
xor
xchg
xchg
pop
sbb
sbb
dec
andb
sbb
out
data16
mov
mov
mov
add
mov
cltd
lret
fcompl
aaa
or
and
xchg
jg
add
les
or
jl
lods
enter
les
push
or
mov
push
pop
mov
push
add
nop
cltd
cpuid
jge
dec
pop
adc
mov
or
sbb
fldt
add
xor
add
test
pop
xor
cwtl
out
sub
xor
mov
mov
push
pop
jnp
sub
aam
lods
xchg
ss
jp
mov
psubusw
mov
es
add
push
or
jge
jbe
jle
lahf
adc
mov
add
sub
pop
push
aaa
cmpsb
mov
pop
mov
sbb
push
dec
loopne
outsb
inc
adc
sub
sahf
mov
mov
ljmp
jge,pt
sbb
add
imul
lcall
jns
push
push
adc
cltd
fs
loop
sbb
mov
fstpl
or
mov
mov
movsb
sbb
nop
jle
and
adc
xchg
adc
je
mov
inc
pop
mov
xchg
out
xor
sbb
pop
repnz
pcmpeqw
mov
rcll
pop
jbe
pop
lea
pop
sbb
mov
or
cmp
setns
xor
or
test
movsl
adc
dec
sbb
pop
iret
mov
test
inc
gs
mov
mov
in
mov
popa
stc
adc
pop
or
mov
mov
cs
jae
ret
cmpsb
lea
or
or
sarb
pop
add
xchg
dec
inc
mov
jmp
hlt
sbb
sub
adc
xorl
and
mov
jb
xchg
adc
mov
ss
out
xor
stos
gs
mov
lcall
adc
syscall
xchg
sub
xor
and
les
inc
or
lretw
mov
adc
mov
pop
mov
movsl
cmpsb
nop
lahf
lds
in
ljmp
cmc
cld
fimull
test
sbb
dec
and
sub
jnp
xchg
adc
xchg
es
xchg
popa
aaa
adc
fwait
out
or
mov
sbbl
mov
fists
or
mov
xchg
xchg
jmp
out
pop
add
jge
pop
test
xchg
out
push
cmc
and
shll
scas
nop
cwtl
jnp
mov
std
and
pop
push
ljmp
adc
xchg
loop
nop
aas
jg
adc
jb
fwait
and
stos
sub
xchg
cmp
or
data16
pop
mov
and
adc
xlat
mov
ljmp
xor
cli
sub
rorb
pop
stc
dec
stc
or
and
jecxz
add
sbb
popf
roll
vxorpd
test
mov
mov
mov
jno
je
push
subl
adc
mov
outsl
mov
jle
sbb
adc
and
xchg
lahf
jle
sbb
mov
xchg
mov
adc
sub
and
add
sbb
adc
or
add
mov
sub
xor
iret
mov
fistps
cltd
mov
sarl
jbe
push
adc
sbb
xchg
mov
pop
loopne
dec
or
mov
cmc
stc
je
or
or
inc
xchg
pop
pop
inc
add
test
sub
dec
xchg
iret
shll
sub
sub
cwtl
mov
lcall
iret
adc
or
and
xchg
push
insl
or
mov
sahf
push
addl
fwait
xchg
mov
mov
adc
mov
roll
inc
js
leave
xor
fwait
test
scas
xor
shrl
adc
mov
sbb
int
nop
xchg
out
xchg
fcomps
adc
stc
lcall
fistps
xchg
adc
push
and
cmp
add
cmp
jl
fistl
mov
adc
or
fldenv
cmpsl
push
xchg
test
fwait
xchg
dec
cmpsl
sbb
sahf
sbb
insl
jge
pcmpeqd
scas
adc
and
hlt
mov
hlt
aas
fwait
pop
push
push
test
iret
pop
xor
add
and
sub
lods
cwtl
or
outsb
sub
sbb
push
xchg
push
push
sbb
pushf
or
push
loope
out
arpl
xchg
jl
jle
adc
in
sbb
test
lret
pop
pop
adcl
cmpsb
mov
xchg
cmp
loop
dec
and
dec
cltd
lods
fiadds
pushf
push
sti
lds
hlt
sahf
mov
jo
push
mov
add
data16
sbb
out
popf
fwait
sbb
push
sub
dec
mov
sbb
add
xchg
pushf
xchg
icebp
sahf
pop
adc
imul
jle
sbb
nop
adc
jge
mov
lahf
cltd
ljmp
sub
xor
cmp
sbb
loope
imul
fdivl
lahf
ss
adc
xchg
leave
pop
push
sbb
scas
sbb
sub
sub
movsl
inc
inc
outsb
into
and
mov
cwtl
xchg
lahf
sub
and
and
pop
lret
or
mov
mov
sarb
cmpsb
addr16
mov
jb
mov
and
out
mov
pushf
es
les
data16
push
and
sbb
pop
pop
mov
or
or
cli
add
mov
xchg
es
cmp
adc
sbb
adcb
hlt
sub
pop
iret
jbe
lods
add
gs
push
test
xor
jne
test
nop
bound
lock
mov
or
pop
xor
xchg
es
pop
lret
rcl
stos
pusha
cld
xor
fists
push
loop
mov
out
ss
repnz
subl
mov
push
cltd
adc
and
test
fmuls
and
sub
mov
and
lods
sbb
pop
and
add
sub
or
scas
inc
add
xchg
mov
sbb
mov
mov
adc
outsl
sbb
fsubp
pop
shl
int
aaa
jecxz
xchg
mov
jns
and
and
mov
xlat
je
jge
or
aas
daa
add
gs
sub
inc
ss
loopne
push
mov
cmpsl
jge
mov
daa
adc
cmpsl
sub
pop
mov
mov
addl
add
mov
or
xor
mov
enter
cmp
cltd
add
je
pushf
inc
lahf
or
cs
sub
sbb
icebp
sbb
adc
add
test
mov
test
ret
test
mov
movhlps
or
pop
adc
hlt
cmp
mov
mov
or
dec
sub
add
lcall
hlt
popa
mov
push
jns
pop
sub
inc
cwtl
sbb
mov
add
mov
add
js
mov
ds
or
mov
xor
sub
mov
bound
aas
mov
add
dec
aad
sbb
out
and
sub
je
out
enter
scas
test
jno
aaa
int3
sub
adc
jp
add
mov
cwtl
shlb
rcrl
or
or
fisttpll
mov
adc
cwtl
xchg
jne
sahf
cmc
daa
jmp
xchg
jp
lock
push
sbb
mov
and
adc
adc
stc
add
mov
dec
fmull
pop
lahf
inc
and
push
add
sub
add
cmpb
test
dec
hlt
sahf
xchg
sbb
ljmp
add
daa
test
mov
in
push
js
push
adc
lret
aaa
test
fmull
mov
mov
xor
adcb
lcall
and
fwait
sbb
fwait
push
in
jno
aas
daa
sbbl
adc
cltd
xchg
add
xchg
adc
nop
sub
or
mov
imul
mov
pop
mov
push
mov
add
fwait
test
scas
xchg
pop
cmp
decb
sbb
sahf
inc
xchg
cmpsb
cli
je
stos
jg
adc
cmpsl
xor
fwait
adc
lea
mov
mov
fdivr
sbb
mov
and
xor
cli
lret
pop
adc
aam
mov
pop
mov
xchg
adc
addr16
test
mov
mov
or
mov
xchg
test
push
xchg
inc
inc
sbb
add
xchg
mov
movsb
pushf
nop
adc
add
and
inc
adc
dec
xchg
pop
cmpsl
andl
ftst
dec
jne
std
push
mov
xchg
adc
mov
sbb
ficoms
cmpsb
ss
stos
es
push
add
cmpsb
push
dec
sbb
xchg
mov
out
nop
push
mov
jae
sub
push
pusha
repz
mov
xchg
test
subl
adc
xlat
and
and
les
push
sbb
repz
xorb
sub
dec
xchg
shrl
sbb
setne
data16
nop
cmpsl
xchg
ret
cmp
sbb
mov
xor
jb
andl
mov
add
mov
aas
jle
adcl
stos
adc
or
push
or
ja
in
push
inc
mov
cmpl
sbbl
ret
or
mov
add
add
mov
mov
adc
mov
xchg
jmp
pop
mov
mov
xchg
xchg
sahf
mov
push
cmpsl
lock
cmp
jg
jl
pop
xlat
ficoms
add
xchg
aaa
sbb
adc
add
std
data16
sub
lcall
mov
sbb
or
jne
adc
push
push
stc
xchg
mov
jo
sbb
fcoml
mov
lret
xor
je
movsb
mov
repnz
sbb
jnp
and
jle
xchg
test
or
add
jb
pop
or
sar
cmp
pop
lods
xchg
jne
lret
cmpsb
inc
xlat
push
mov
mov
pop
loopne
mov
cmpb
add
in
mov
cmpb
dec
fwait
adc
sbb
and
mov
orl
mov
xchg
jns
or
jl
cmpsb
cwtl
popl
sub
push
and
mov
inc
daa
popf
mov
mov
daa
test
aam
mov
adc
dec
outsb
aad
imull
xor
sub
aaa
mov
fwait
test
xor
in
in
test
sub
jbe
int
nop
inc
imul
mov
add
pop
xchg
or
lock
fmull
xor
sbb
sub
sbb
fidivs
aaa
shll
rcr
mov
aas
andl
pusha
add
adc
xchg
andb
int
or
dec
adc
xchg
or
mov
sbb
hlt
or
mov
mov
outsl
jne
test
imul
jg
sbb
push
xor
lcall
and
add
mov
mov
lcall
and
sahf
sub
adc
jno
mov
xor
cmp
sbb
sbb
in
pop
xlat
lahf
rorl
push
xchg
mov
sbb
push
xchg
xor
mov
mov
mov
push
inc
cwtl
decb
shrb
movsl
mov
cmp
pushf
push
test
je
mov
shlb
call
add
mov
cli
mov
push
jle
or
fwait
stos
mov
jno
and
adc
movsl
stos
xchg
or
ret
std
or
adc
decb
dec
movsl
mov
pop
xorb
sarl
inc
sub
nop
push
mov
mov
cmp
lcall
push
popa
fistps
and
aas
sbb
and
test
jo,pn
sbb
pop
mov
mov
inc
add
mov
mov
mov
add
mov
sahf
imul
into
pop
es
lahf
lcall
adc
xchg
add
xor
aaa
adc
xchg
lcall
fbstp
jno
push
iret
adc
shrl
push
adc
lcall
xchg
daa
pop
push
xchg
fwait
sbb
jno
mov
or
adc
iret
movsl
adc
jge
cs
test
cwtl
mov
ss
pop
sub
mov
rolb
mov
fcmovnu
nop
sbb
sbb
je
add
adc
sbb
jl
mov
jle
add
and
sbb
xchg
mov
xor
add
push
sarl
sbb
mov
pop
pop
icebp
sbb
movsl
mov
cwtl
pop
xor
test
jg
es
mov
jmp
daa
mov
aas
popw
sbbl
hlt
nop
adc
mov
cltd
scas
adc
stos
shrb
inc
sub
movzwl
pop
mov
addr16
lcall
adc
mov
nop
jle
adc
andb
aam
iret
leave
addb
add
imul
pop
jne
inc
inc
sub
and
flds
or
int
adc
mov
jns
pop
lods
push
mov
and
sahf
subl
xchg
aaa
or
dec
ja
adc
push
in
lcall
xchg
pusha
orl
adc
dec
xchg
sbb
xor
mov
xor
iret
dec
push
sbb
frstor
mov
mov
inc
fidivs
push
ficoml
data16
pop
mov
inc
imul
cltd
daa
fwait
test
add
mov
cmpsb
cltd
push
fimuls
sahf
xchg
ret
cs
mov
nop
inc
cmpsl
mov
mov
pop
sbb
test
pop
xor
out
lcall
xchg
xor
or
mov
inc
push
pop
xor
xchg
wbinvd
mov
pop
push
push
sbb
cmpsb
or
mov
mov
adc
xchg
push
xchg
dec
mov
xchg
lock
stc
cmp
mov
xchg
add
lcall
mov
and
push
enter
bound
test
or
addl
js
roll
aaa
pop
sbb
stos
mov
lahf
xchg
cmp
ljmp
dec
lret
ret
movsl
je
rorb
or
adc
rcr
repnz
add
mov
xchg
sbb
cwtl
sahf
xchg
cmp
lahf
test
aas
sub
sahf
xchg
xchg
add
loope
pushf
mov
sub
push
rcrl
and
pcmpeqw
and
mov
addb
jmp
xchg
push
jb
jb
nop
mov
decl
je
add
adc
mov
mov
mov
sbbb
sti
jl
or
mov
sub
sti
and
push
mov
and
sub
or
into
adc
lret
adc
cmpsl
and
subb
adc
mov
movsl
gs
or
sbb
jnp
cmpsl
bound
xchg
lcall
jbe
aaa
xchg
mov
adc
add
popa
pop
sub
xor
add
jbe
and
cmc
adc
xchg
sbb
inc
outsl
das
cmp
rorb
mov
mov
fwait
cltd
cwtl
pop
inc
jo
subb
jbe
lods
adc
fwait
cmpsb
sbb
and
cltd
adc
mov
add
sahf
in
arpl
inc
pop
psubd
jb
inc
mov
pusha
push
movsl
cmp
cmpsl
push
mov
insb
sbb
push
pop
adc
je
xchg
jo
cmpsl
lahf
cltd
out
lret
cli
sub
sbb
dec
adc
mov
stos
fisttpll
mov
push
popf
movsl
rorb
xchg
xchg
add
cltd
inc
faddl
test
lods
inc
cmpsb
dec
jl
sub
mov
pop
bound
pop
mov
sub
cltd
adc
sbb
inc
aad
sbb
pop
push
sbbb
cmp
add
jle
movups
jne
adc
mov
je
mov
loop
sub
adc
andl
fstps
loopne
xor
add
and
mov
nop
and
xchg
adc
add
cmpsl
adc
shll
xchg
pop
enter
xchg
add
adc
pop
sbb
mov
mov
mov
dec
fwait
lahf
cmc
ret
sbb
testb
xchg
es
mov
nop
fiadds
mov
xlat
rcll
mov
xchg
sbb
inc
daa
adc
adcl
dec
pop
jns
xchg
sub
xchg
xchg
mov
stos
mov
out
ljmp
mov
lods
pushf
pop
or
ljmp
and
sub
pop
cmp
or
xchg
add
fldenv
add
lcall
push
movsl
daa
sbb
xchg
mov
cmpsb
les
fbstp
mov
pop
mov
sbb
mov
ret
scas
mov
xchg
add
movsl
adc
subb
jle
adc
sti
test
test
xchg
fucomip
in
rclb
sbb
xchg
lret
xchg
xchg
push
dec
nop
xchg
clc
cmc
lea
fst
es
mov
inc
or
mov
dec
xor
call
test
gs
addr16
mov
xchg
cmpsl
cmpsb
adc
cmpsl
daa
inc
push
adc
js
lret
mov
cli
and
mov
test
lahf
aam
add
inc
insl
add
cltd
adc
push
push
insb
xchg
mov
test
scas
addr16
xor
lods
adc
push
jns
xchg
or
xchg
and
push
sbb
imul
push
popf
mov
xchg
aaa
xchg
mov
push
cmpsb
pop
or
cltd
mov
mov
cmp
fnstsw
in
les
sbb
sbb
sbb
mov
pop
and
jl
mov
xchg
mov
dec
cmpsb
dec
fwait
inc
and
lahf
xchg
push
cmpsl
pop
in
mov
mov
adc
push
push
pop
pushf
mov
dec
lcall
pop
shrl
mov
cwtl
and
rolb
aad
aaa
and
xchg
add
sub
and
mov
jle
ljmp
xchg
ljmp
or
push
mov
xorl
mov
xchg
inc
push
mov
xchg
adcb
into
push
xchg
leave
out
mov
lods
sbb
xor
int3
inc
push
push
sub
js
adc
lcall
test
loope
mov
lret
jne
mov
sahf
std
push
jp
and
insl
and
jbe
mov
sbb
sub
lods
mov
filds
lea
ja
or
or
mov
scas
lcall
cmpsb
pusha
pop
cmp
dec
sub
test
cs
sbb
sub
mov
pop
cwtl
rolb
and
dec
push
test
lods
int
xchg
jb
data16
add
and
xor
cmp
mov
in
sbb
fnstsw
lahf
fnsave
cwtl
pusha
lret
mov
push
xchg
mov
xchg
xchg
adc
fwait
xor
jo
mov
aas
mov
adc
sbb
add
jb
sub
add
cli
test
mov
sbb
lahf
push
jmp
or
pop
jno
jge
cwtl
nop
xchg
test
add
mov
xchg
sub
or
lcall
adc
je
lea
add
mov
sbb
or
ds
sbb
xchg
mov
adc
clc
cli
leave
jne
sti
pop
mov
inc
add
and
jo
lahf
jle
inc
inc
sbb
les
movsl
mov
ret
xchg
mov
inc
sbb
pushf
jb
cmp
lcall
fwait
mov
loop
pop
or
cmova
and
mov
mov
ds
xchg
addl
xchg
mov
inc
nopl
xor
jmp
xchg
add
iret
into
push
scas
mov
xchg
add
mov
xor
fnsave
or
mov
adc
sbb
stos
mov
fwait
in
sbb
hlt
xchg
mov
sub
clc
cmp
movsl
insb
add
dec
push
jge
add
sub
mov
add
mov
xor
aas
sbb
push
xchg
or
xor
mov
nop
dec
jb
dec
push
mov
adc
jmp
sbb
jle
pop
loope
and
pop
xchg
iret
and
movsb
ja
mov
mov
mov
xor
icebp
sbb
cli
lahf
and
or
in
add
cmp
fwait
sbb
and
je
cltd
pop
in
mov
add
jg
cmpsb
jnp
es
lret
xchg
cmp
push
test
rcrl
jns
mov
gs
adc
mov
cmpsb
pop
pop
and
int3
aad
lcall
adc
adc
xchg
cmp
or
je
and
or
out
cmp
mov
sbb
rolb
or
xchg
cmp
xchg
pop
test
and
xor
out
repnz
mov
orl
mov
cltd
andl
add
push
or
push
icebp
fwait
pop
dec
or
mov
xchg
clc
fldlg2
push
mov
pop
mov
xchg
cmp
jb
or
out
test
into
mov
push
xchg
loopne
pop
pop
mov
push
sahf
mov
arpl
cmpsl
out
sub
pusha
cmp
addb
xchg
xchg
mov
lcall
cmp
outsb
popa
cmp
xchg
adc
or
push
adc
sbb
adc
jnp
and
sub
sub
ja
xchg
or
loope
push
mov
sbb
and
xor
xchg
mov
shl
lcall
in
xor
arpl
sbb
mov
cwtl
movsl
jg
or
pop
push
mov
stc
inc
cwtl
mov
mov
or
in
popf
sbb
test
stc
js
cmc
mov
add
fists
pop
loopne
xchg
test
cwtl
jg
mov
sahf
xchg
std
pusha
outsl
stc
jne
push
fs
inc
adc
add
sbb
cmp
subb
sbb
mov
pop
es
sub
inc
mov
xchg
mov
mov
cmpsb
push
shld
into
xchg
lret
adc
or
lods
mov
imul
push
adc
mov
lcall
mov
xchg
xchg
dec
dec
sbb
outsb
xchg
cwtl
cltd
mov
mov
mov
jg
adc
dec
cmpsl
cmpsb
or
inc
xchg
xchg
push
xor
mov
into
mov
or
sbbb
lret
jecxz
repnz
sub
in
fidivs
sbbb
and
sbb
psubd
sbb
jmp
add
adc
hlt
adc
mov
cmc
cmc
and
sahf
jecxz
jg
mov
mov
in
cmpsb
dec
and
and
adc
lahf
adc
adc
stos
setnp
mov
xchg
popl
adc
adc
lcall
mov
mov
mov
movsl
or
and
adcb
stos
mov
adc
cmp
xor
cmpsb
cltd
jge
xchg
cltd
adc
adc
dec
outsl
mov
mov
cli
add
ret
dec
sub
mov
lcall
mov
mov
aas
es
sbbb
add
and
dec
jo
push
inc
cltd
test
push
add
cmpsb
mov
je
push
pop
dec
lea
dec
xor
pop
arpl
fmuls
or
js
cmp
pushf
scas
sbb
inc
add
sbb
loope
repz
pop
pop
add
sbb
out
adc
and
in
cmp
es
xchg
frstor
push
mov
dec
aas
sub
cmpsl
mov
mov
popf
adc
xchg
xor
pop
push
ss
test
shll
in
test
push
lcall
mov
ret
movsl
mov
insl
insb
inc
movsb
jno
cmpl
mov
cmpsl
sbb
mov
push
data16
nop
adc
cmp
pop
xchg
lea
scas
or
leave
lahf
aas
lcall
imul
xchg
jbe
cwtl
cmpsl
add
adc
mov
pop
sbb
es
dec
sub
inc
sub
jo
shll
mov
mov
or
mov
cmpsb
xchg
mov
add
add
mov
sbb
mov
cmpsl
pusha
sbb
scas
cli
cmp
add
or
and
mov
movsl
dec
mulb
aaa
cmp
sub
in
mov
outsb
pop
add
cmpsb
popf
orl
mov
aas
outsb
mov
adc
call
pusha
add
sbb
lods
cmc
push
sbb
popf
mov
pop
andb
add
mov
cmp
add
daa
cmp
pop
pushf
xchg
lahf
mov
cmp
adc
stos
and
xchg
xchg
cvttps2pi
jbe
cli
sub
sub
pop
movsl
aas
mov
movsl
shlb
loope
clc
lret
shll
hlt
imull
test
ret
cmp
nop
lcall
fmull
cmc
add
sub
sahf
lahf
aas
cmp
add
arpl
cmpsl
mov
cltd
cwtl
mov
cli
cmp
cmp
inc
cmp
push
das
data16
cmpsb
enter
sbb
imul
and
add
sbb
add
scas
xlat
fsts
cmc
faddl
mov
sub
xor
pop
pop
add
lahf
imul
mov
call
jnp
movsl
xor
lret
xchg
cli
adc
jns
test
and
add
sbb
add
xchg
cmc
pushf
icebp
fcmovu
cmc
lods
cmp
loop
test
pop
add
add
cltd
add
stc
add
popf
add
je
add
add
jmp
pop
pop
add
fdivl
jo
add
je
enter
sbb
testb
je
or
jl
push
je
or
add
and
inc
rcll
je
add
and
mov
add
add
add
cltd
add
stc
add
popf
add
add
jmp
pop
pop
add
fdivl
jo
add
cmpsl
add
je
testb
je
or
jl
je
inc
add
popf
aas
sub
xchg
shrb
pop
sub
or
cwtl
mov
mov
mov
adc
pop
or
daa
sahf
sbbl
fistps
mov
sbb
or
mov
adc
push
pop
call
stos
mov
add
mov
xchg
cmpsl
dec
adc
adc
cltd
xchg
test
mov
pop
pmullw
cmp
out
std
iret
xor
pop
jge
mov
js
pop
sub
std
inc
sbb
jle
stos
mov
cmp
mov
sbb
mov
lret
push
icebp
sub
imul
cmpsl
inc
adc
push
and
sarb
or
insb
mov
dec
and
mov
insb
jbe
mov
daa
lods
lcall
sbb
and
test
test
popa
jle
je
xchg
xchg
sub
add
push
sbb
ja
cmp
mov
popf
mov
mov
xor
je
fadd
mov
dec
imul
je
stos
imul
push
fstp
mov
push
jge
pop
jmp
icebp
pop
jg
or
xchg
adc
cmpsb
mov
out
cmpsl
lahf
pop
and
outsb
cmp
imul
inc
fwait
and
and
push
mov
or
mov
aas
push
adcl
push
mov
mov
or
jo
test
imul
push
pop
arpl
cs
arpl
addb
je
mov
jle
stos
push
inc
adc
daa
xchg
fs
inc
sbb
stos
xorl
lret
out
push
mov
mov
js
push
and
je
push
outsl
inc
cmp
insl
or
xchg
cmpsl
jne
push
lret
push
je
cmpsb
inc
js
movsl
xchg
push
mull
or
clc
dec
sub
fisttpl
push
stos
push
je
mov
jle
stos
push
and
sub
xor
test
xlat
xchg
push
cltd
je
jbe
insb
or
or
inc
loopne
call
das
push
mov
mov
or
mov
and
jae
shlb
lret
in
mulb
in
gs
or
subl
nop
xor
cld
sub
mov
or
xchg
sbb
int3
sub
push
pop
push
xchg
and
call
mov
mov
add
inc
add
xor
test
adc
scas
push
mov
mov
and
xor
xchg
cmpsb
lret
adc
inc
mov
add
cmpl
mov
xchg
daa
mov
fstl
dec
fcoms
sub
or
adc
dec
push
dec
and
mov
and
xor
sqrtps
mov
jae
insl
sti
mov
lods
xchg
movsb
das
mov
or
and
and
xchg
pop
insl
lds
lods
sub
inc
mov
ja
movl
nop
jb
das
sbb
aad
mov
dec
sbb
outsl
or
push
and
or
lahf
mov
mov
and
dec
daa
and
cwtl
and
xchg
test
and
std
das
stos
and
ret
ja
mov
push
daa
std
lret
sbb
mov
xchg
push
xchg
push
add
rorb
nop
cmp
mov
mov
mov
xor
pop
cmpsb
addr16
mov
add
test
scas
and
adc
mov
pop
lock
daa
xchg
out
push
cmpsl
movsl
scas
sub
and
adc
mov
mov
cmp
andb
jns
cmp
and
push
nop
and
or
cmpsb
mov
daa
in
mov
sub
push
and
mov
js
cmp
push
daa
movsl
scas
cmpsl
cmpl
test
and
and
loopne
shlb
stos
cmp
pop
cmpsl
or
or
mov
mov
cmp
or
mov
pop
inc
mov
imul
pop
daa
or
mov
test
and
inc
push
in
push
loopne
stos
cmp
mov
stc
sub
inc
or
aaa
mov
nop
and
addr16
lcall
dec
daa
xchg
pop
xchg
cmp
sub
sbb
and
pop
push
shrb
loop
aas
outsl
sbb
ljmp
es
lret
jp
push
lahf
mov
pop
jae
or
and
aam
subl
add
out
jmp
sub
add
outsl
or
or
or
adc
punpckhbw
push
imul
daa
in
sub
adc
cmpsb
and
test
xchg
sbb
xchg
sbb
lahf
and
pop
loopne
fwait
mov
out
pop
loopne
fwait
mov
repnz
pop
nop
inc
lcall
icebp
dec
sub
repnz
pop
nop
pop
pop
sub
repnz
pop
nop
fs
bound
popa
adc
push
icebp
data16
pop
pushf
scas
push
mov
mov
add
movsl
scas
es
jb
mov
mov
pop
cmpsb
inc
cmpsb
add
sti
imul
pushf
lods
pop
lds
mov
arpl
xchg
sbb
or
lcall
inc
cmpsb
mov
inc
sbb
or
scas
cmpsb
cwtl
push
push
sbb
cmovo
push
jecxz
xor
push
sub
and
mov
and
pop
xor
sub
sub
and
in
nop
daa
ret
push
add
and
pop
aaa
and
jno
jnp
push
imul
adc
inc
jmp
flds
pop
es
es
fldl
mov
cmpsb
cmpsb
add
movsl
scas
cmpsb
andb
jo
call
and
daa
gs
lahf
sub
fwait
loope
jmp
adcb
jg
dec
or
cld
or
insl
das
push
adc
mov
test
test
inc
jbe
test
push
test
and
mov
push
ljmp
repnz
inc
cltd
push
fwait
nop
adc
mov
adc
in
pushf
jnp
test
sbb
pop
fldt
or
daa
bnd
sbb
stc
adc
hlt
push
insb
addr16
addr16
pcmpeqw
fwait
pop
xor
push
les
jns
jnp
jbe
jo
es
inc
jp
jae
sub
sub
nop
jg
es
arpl
sti
pop
loopne
daa
pop
pusha
dec
daa
js
xchg
sub
in
and
outsl
ss
daa
icebp
mov
and
cmpsb
clc
cmp
and
fisubrl
mov
leave
xor
push
cmp
out
sub
arpl
arpl
mov
xlat
ljmp
and
push
dec
jnp
sub
sbb
push
adc
es
bound
push
enter
cmp
dec
nop
addl
repnz
mov
xor
ja
pop
xor
mov
cs
pop
jno
and
xor
xchg
push
jbe
jp
imulb
and
inc
add
es
adc
and
xchg
std
out
mov
and
lea
sbb
and
and
push
and
imul
xchg
aas
adc
je
int3
xchg
add
inc
out
data16
mov
push
xchg
push
adc
push
and
in
xor
pop
push
stos
mov
or
push
clc
mov
das
ret
and
data16
jecxz
xchg
loopne
inc
dec
jno
icebp
xorb
aas
sub
xor
stos
add
jne
xchg
das
and
and
pop
mov
sbb
pop
imul
aaa
cmpsl
or
and
dec
repnz
xchg
and
mov
lock
js
test
and
into
jle
xchg
imul
sbb
sbb
fdivrl
pop
push
xor
pop
daa
push
sub
ja
ficompl
stos
test
js
sub
sti
xchg
sahf
pop
or
lcall
xchg
pop
rclb
mov
or
or
dec
adc
sub
repz
cmpsw
sbb
cwtl
cmpsb
and
cmp
pop
jno
cmp
jbe
pop
ljmp
pop
dec
gs
or
and
adc
nop
dec
push
xchg
cmpsb
repnz
jnp
dec
jo
xlat
stc
jnp
adc
mov
jb
push
cmp
je
sbb
test
or
shrb
xor
jmp
push
pushf
das
jbe
insl
jmp
in
cmp
adc
and
push
jb
jbe
xorb
sub
aam
and
cli
in
jb
push
push
jle
sbb
adc
pop
and
add
das
adc
push
mov
xchg
xlat
dec
das
sub
add
cmpsb
pop
add
icebp
mov
dec
pushf
push
pop
and
negl
adc
pop
and
jle
repz
and
sub
cmp
notl
fs
push
or
dec
add
inc
cmpsl
subl
and
daa
push
xor
mov
or
jge
fdivl
dec
push
sub
xor
xor
dec
aaa
fdivrl
push
add
adc
pop
js
cmp
pop
xor
and
test
push
popl
test
add
stc
or
and
sbb
and
daa
repz
pop
sub
xchg
sbb
xor
pop
test
adc
hlt
cmp
push
stc
inc
adc
jecxz
jbe
or
push
pop
push
and
adc
jmp
cmpsl
and
push
mov
push
lock
or
pop
sbb
daa
push
add
outsl
push
shll
push
cmp
in
nop
dec
or
mov
imul
xor
outsb
loop
fildll
push
aaa
rclb
xor
and
jmp
jb
mov
cs
sbb
xchg
pop
and
or
push
mov
jge
aaa
mov
cmp
sbb
sub
inc
inc
std
fadds
and
jb
and
and
out
and
jne
stc
pop
ds
xchg
lret
adc
cld
jp
arpl
adc
fidivl
xchg
jne
cmp
lds
lcall
inc
mov
mov
aaa
xchg
cmp
push
ret
out
and
es
mull
jae
mov
inc
adc
mov
in
inc
addl
test
imulb
mov
jno
dec
sub
push
push
xchg
jne
je
cmpsl
push
ljmp
cmp
sub
imul
add
cmpsl
and
and
ds
fsts
pop
mov
sbb
sub
adc
cmpsb
jmp
rcrb
pop
loope
or
mov
stos
pop
cli
sub
clc
or
inc
and
lahf
xor
jbe
stos
sbb
setl
or
push
sti
mov
xor
fsubl
mov
xchg
sub
sbb
or
inc
sbb
xchg
dec
or
ret
push
aas
xor
xor
mov
xor
and
push
pop
push
mov
mov
push
adc
push
xlat
add
mov
push
test
fdivrl
sub
inc
cmp
pop
icebp
xor
lcall
inc
adc
and
pop
push
imul
mov
lods
or
or
test
shlb
popa
or
icebp
addb
sub
jl
adc
push
pop
add
and
inc
sbb
in
testl
cmp
dec
sbb
fwait
mov
fcompl
aas
and
imul
mov
cmpsb
sub
sub
and
mov
lea
fs
push
xchg
sbb
addr16
es
adc
cmpsl
push
inc
dec
rcr
js
xchg
sub
adc
push
xchg
and
das
jae
xchg
adc
decl
dec
pop
sbb
dec
out
test
and
mov
ss
std
outsb
dec
xor
fs
test
and
adc
ja
addr16
dec
jge
sub
sti
or
sbb
jg
adc
mov
icebp
fdivl
dec
mov
stos
xor
cmpsl
mov
in
dec
or
lahf
pop
xchg
mov
divb
dec
pushf
sbb
xor
sti
and
mov
jg
dec
inc
andb
out
orl
jp
imul
sbb
pop
sbb
push
mov
movsl
pop
mov
dec
sub
movb
sub
flds
ss
mov
pcmpgtw
jge
daa
jb
push
scas
and
mov
out
in
cmp
xor
mov
jmp
notb
inc
push
dec
jmp
push
xor
repnz
mov
call
adc
or
imul
mov
push
shll
or
mov
add
cli
or
arpl
sub
lds
push
in
es
jns
or
sbb
sti
mov
add
std
clc
ror
add
cmpsl
shlb
pop
xchg
cwtl
sub
rolb
adc
pop
xlat
stos
pop
sbb
mov
pop
loopne
xchg
jnp
mov
ret
cwtl
mov
clc
stos
add
xor
fsubl
xor
test
dec
fs
mov
mov
mov
stos
insl
scas
sbb
std
sbbb
jg
mov
iret
push
jbe
jns
mov
movsl
fisttps
push
mov
pop
adc
test
cmp
inc
sub
in
loopne
iret
fs
and
inc
clc
stos
xchg
jne
lods
and
xchg
imul
outsl
ja
or
mov
mov
arpl
cs
xor
js
dec
test
arpl
jne
jg
testl
inc
jno
add
addr16
pop
dec
pop
shll
mov
pop
xchg
mov
adc
fldenv
mov
bound
jne
and
dec
lea
fldenv
test
push
or
pop
xor
decl
lar
pop
and
mulb
xchg
sub
mov
mov
pop
add
or
dec
pop
pop
inc
shlb
cmpsl
inc
adc
xchg
add
pop
into
loop
mov
xchg
or
inc
ds
or
push
dec
insl
xor
nop
cmp
cli
data16
xor
lods
mov
int3
shlb
rcrb
pop
mov
das
lcall
pop
mov
insb
and
fwait
stos
push
and
sub
int3
xchg
or
sbb
push
dec
dec
stos
sub
or
add
push
xchg
and
sahf
rep
mov
stos
and
xor
loopne
jp
push
xlat
mov
imul
fisubl
jecxz
fmul
push
cli
cmpsb
fnstenv
lret
js
outsb
jl
es
mov
sbb
jnp
aam
fsubrl
pop
push
add
out
jge
jno,pn
xchg
sbbl
or
jae
out
dec
sbb
neg
xchg
flds
cmp
aas
add
xchg
adc
dec
lret
xor
sbb
inc
xor
js
inc
imull
pop
xor
mov
mov
popa
ds
cs
gs
inc
sbb
pop
mulb
mov
add
pop
jbe
outsb
lret
lea
mov
aad
pop
and
sbb
sbb
loope
xor
es
xchg
jae
int3
icebp
aad
push
add
out
push
ja
xor
cmp
dec
and
daa
fistps
push
adc
jbe
lea
ret
stc
add
cmc
hlt
adc
and
lea
or
xchg
insl
dec
popa
jge
or
cmpsl
addr16
jno
sub
sub
pop
cmc
add
xlat
adc
push
or
dec
adc
gs
add
cmovp
adc
adc
or
cmp
outsb
sti
xchg
xchg
aad
lods
mov
rolb
jbe
jne
xor
addb
jnp
pop
pop
dec
and
sbb
ret
shrl
and
divl
and
jge
aad
lods
and
jns
loop
push
repz
xor
xchg
xor
xor
adc
pop
jnp
jle
mov
sub
sub
push
nop
mov
jge
mov
cld
test
stos
fsts
xchg
jne
xchg
cmp
adc
xchg
xchg
mov
pop
push
adc
shlb
add
push
sub
adc
fistpl
cmpsb
and
lar
push
push
dec
movsl
cld
pop
pop
sub
mov
push
les
and
outsl
jbe
xchg
or
sub
xchg
jns
jno
push
nop
dec
and
mov
out
adc
xor
stos
push
lock
dec
scas
daa
lret
mov
leave
push
push
leave
push
mov
jne
mov
adc
popa
pop
cmpsl
mov
push
and
imul
sbb
jo
insb
jns
cwtl
push
inc
mov
scas
clc
and
daa
je
loopne
sub
mov
pop
insb
mov
cld
cmc
cmp
dec
jae
add
andb
push
add
jno
xchg
mov
popa
push
mov
push
dec
jle
xor
bound
and
roll
test
inc
test
ss
fisubl
dec
add
or
mov
mov
push
icebp
fildl
sub
lret
rolb
shr
jo
sbb
jbe
pop
cmp
mov
or
mov
jnp
ret
or
dec
mull
imul
gs
movsl
xchg
aaa
ret
xchg
jne
dec
fwait
mov
cmpsl
and
or
push
xchg
in
adc
pop
pop
mov
push
pop
push
mov
add
mov
lret
stos
mov
mov
dec
jno
jge
orb
xchg
dec
pop
mov
ss
cmpl
adc
add
and
arpl
lods
rclb
test
jmp
sub
aas
xor
jp
cmovae
cmpsl
inc
insl
rclb
pop
repz
es
jecxz
jnp
test
aam
xor
lock
push
cmc
sub
popf
jno
xchg
stos
or
push
pop
hlt
xor
xchg
sub
and
or
stos
mov
pop
lcall
stos
push
inc
mov
sub
test
ds
inc
mov
xchg
mov
pusha
pop
bound
xchg
nop
and
add
xchg
and
and
lea
dec
out
cli
sub
and
or
andb
xchg
rolb
mov
jo
push
insl
xchg
or
inc
inc
je
fwait
and
mull
push
cmp
sbb
and
add
xchg
dec
sbb
push
push
sub
mov
call
icebp
lea
ds
xchg
dec
or
fwait
adc
xchg
pushf
scas
test
mov
and
push
adc
and
or
push
sahf
aaa
and
fwait
jae
mov
lret
lcall
jmp
mov
adc
cmc
sbb
ds
mov
in
sbb
mov
xchg
mov
mov
push
pusha
dec
mov
rol
std
cmc
clc
jmp
push
pushf
lea
jae
jmp
cmp
call
movl
jmp
xchg
xchg
adc
call
imul
movsl
lret
lods
test
add
push
push
shrl
fnsave
lods
pop
dec
rcrb
ja
outsl
dec
comiss
stc
scas
icebp
cltd
inc
flds
push
sbb
mov
mov
add
jbe
mov
mov
scas
mov
xchg
repnz
push
lcall
enter
das
inc
fnstenv
call
xchg
dec
xchg
adc
xor
mov
and
xor
ret
sbbl
pop
add
push
stos
mov
sbb
push
jns
fnstcw
push
shll
sahf
adc
push
sahf
sub
call
mov
sub
or
and
mov
mov
lret
test
inc
and
outsb
sub
orl
call
shll
jne
std
cmp
xchg
inc
inc
add
out
xor
xor
jmp
sbb
mov
fists
cmc
clc
lret
imul
pop
lret
aad
ja
cs
es
dec
out
ss
jle
push
scas
push
jmp
jp
mov
stos
cmp
jne
mov
test
test
pop
stc
mov
add
mov
and
adc
das
iret
enter
subl
and
fcoms
fadds
and
or
inc
sbb
jns
lcall
sub
pop
cwtl
iret
ror
cmp
cmpsl
stc
mov
cmp
cmpsl
cmp
loopne
mov
data16
add
js
adc
pop
loope
pop
adc
push
stc
add
add
inc
mov
dec
test
cli
imul
pop
adc
test
test
cmp
lock
lock
cmp
movsb
push
adc
cmp
leave
xor
adc
cmpsb
sub
mov
mov
push
inc
lds
rorb
cmp
mov
jae
test
push
mov
test
sti
add
mov
sub
fisubrs
adc
loop
mov
mov
xchg
pop
loop
dec
sarl
pop
shll
cmp
rclb
cwtl
sbb
and
lods
arpl
adc
rcrb
add
xorl
and
jae
jmp
pusha
arpl
call
mov
sbb
stos
int
aad
mov
jl
hlt
xlat
out
adc
sub
mov
into
es
test
dec
pop
push
mov
ror
dec
or
mov
je
and
les
lea
shlb
mov
push
out
decl
test
push
push
out
incl
movw
lea
jmp
in
cld
in
lds
jo
cwtl
jbe
outsb
or
dec
fidivs
mov
iret
xchg
cmp
mov
lahf
mov
loope
orl
pop
sbb
out
neg
mov
lret
dec
out
imul
jle
rcrl
call
fdivrp
adc
and
popa
cwtl
cmp
jno
ss
sub
sub
daa
ret
push
gs
insl
inc
aam
scas
test
lds
lcall
sbb
call
sub
orb
fmull
or
mov
mov
push
sahf
notb
push
in
cld
dec
lret
jmp
cli
call
in
jecxz
lds
dec
ja
adc
mov
mov
mov
add
xchg
lret
cmp
pop
mov
out
jg
jmp
fsubl
popa
cmpsb
ficompl
or
and
data16
stos
scas
ja
dec
ret
sub
jne
dec
mov
enter
xchg
imul
jl
adc
fdivrl
or
repz
pop
jle
repnz
jo
mov
pusha
lea
mov
or
mov
aam
mov
and
dec
push
loop
loope
aas
lcall
and
jae
pushf
pushl
lea
call
push
push
adc
pushf
pushf
lea
jae
jmp
adc
insl
lea
addl
nop
or
popa
js
xchg
cmpsl
mov
and
test
inc
or
pop
cs
cs
jne
jmp
push
pop
mov
js
test
movsb
int3
jnp
inc
loope
popf
sub
mov
or
popf
std
imul
add
outsb
mov
scas
lret
lds
push
loop
test
push
hlt
sbb
sbb
xchg
arpl
in
cmpsb
or
ret
xchg
xor
rolb
shlb
lds
mov
or
insl
cmp
fst
or
adc
inc
dec
in
dec
lds
sbb
xor
and
lret
into
lret
cld
xchg
pop
lret
shl
jge
xor
js
and
repz
repz
add
movsb
xchg
loopne
push
sbb
jp
mov
dec
rcll
test
cltd
and
jmp
ror
add
cmp
inc
dec
inc
setg
xchg
cwtl
sbb
mov
cmp
sar
or
not
mov
call
pop
not
jmp
push
lea
call
bt
cmp
pushf
lea
jae
test
pusha
cmc
cmp
pushf
lea
jae
cmp
cmp
jmp
pushf
lea
je
pusha
add
cmp
pushf
jmp
dec
mov
negb
push
push
adc
clc
pop
out
sti
fdivs
fildll
bound
iret
sti
cmpsl
test
pop
fadds
mov
js
dec
xor
and
xchg
test
in
pop
icebp
lret
vpmacsww
dec
jl
sbb
mov
mov
xchg
addr16
in
or
or
add
jbe
je
aam
xor
sahf
pop
inc
inc
mov
mov
and
js
lcall
pop
daa
imul
repz
push
shl
pushf
js
arpl
and
mov
xchg
dec
pop
mov
or
push
repnz
daa
mov
jp
or
mov
dec
ljmp
xor
gs
cmpsl
or
cld
sti
arpl
lods
frndint
jl
or
ss
cmpsb
dec
es
movsl
mov
inc
adcb
call
add
jmp
jmp
xor
fsubl
add
xchg
loop
pop
xor
add
bound
das
out
cltd
mov
dec
daa
fmull
cmp
ljmp
xchg
mov
inc
dec
addl
cs
mov
inc
inc
ret
and
mov
dec
sbb
in
hlt
mov
jb
push
rorb
adcb
add
pusha
pusha
lea
jmp
fcmove
fucomip
vmovupd
lcall
rcr
das
mov
jns
push
push
rcl
add
sub
mov
push
mov
scas
jecxz
sbb
imul
pop
cmp
sarl
incb
mov
mov
cwtl
nop
test
add
sub
pop
out
ss
pusha
add
pusha
neg
pushf
dec
pushf
stc
bt
stc
xor
pushf
ror
movb
mov
jmp
es
popf
and
ret
sbb
sti
in
jecxz
xchg
popf
lcall
fimuls
sbb
scas
xlat
mov
sub
leave
jg
imul
dec
jne
cmp
mov
mov
inc
and
call
pusha
xchg
out
lods
lahf
ss
in
dec
sbb
add
insb
fs
lods
mov
fwait
imul
and
xchg
jmp
jmp
xchg
mov
fucomip
lds
adc
xor
mov
and
mov
ret
pop
dec
ret
push
inc
xchg
int3
cli
or
or
ret
dec
stc
out
fdivs
sub
xor
lock
stos
insl
mov
adc
or
mov
insl
packsswb
or
adc
call
outsb
shrb
adc
cmp
enter
stos
xchg
lret
les
and
jge
cmpsl
xor
inc
test
das
jmp
hlt
and
push
push
xlat
add
aam
shll
mov
loope
xor
adc
mov
jp
call
push
jp,pt
mov
sbb
pop
scas
sbbb
cmc
pop
call
into
and
cltd
pop
xchg
sub
mov
mov
xor
mov
ficomps
mov
xchg
push
in
or
cmp
adc
pushf
mov
mov
movl
pushf
lea
jmp
pusha
jmp
push
call
pushf
pushl
bt
pusha
or
push
pushf
call
insl
mov
xor
pusha
roll
arpl
adc
and
jo
jo
shl
pusha
and
arpl
adc
jecxz
jo
arpl
pusha
and
inc
and
shlb
pusha
adc
push
adc
jecxz
inc
repz
adc
and
jae
xor
inc
lods
jae
and
stos
int
in
in
mov
leave
mov
out
sub
cmp
jbe
adcl
cmp
test
fdivs
jns
rcr
xchg
or
lahf
xor
sbb
shrl
stos
lcall
add
pop
add
in
add
outsb
cli
rcr
call
lret
les
hlt
mov
pop
sahf
es
test
nop
push
pop
jns
cmp
adc
lret
sbbb
sbb
out
insl
sbb
lea
dec
setnp
pushf
pushf
lods
stc
neg
stc
jmp
repnz
mov
call
xchg
push
lock
xor
jecxz
jnp
cmp
in
imul
rorb
inc
popa
fwait
aaa
stos
push
test
and
pop
loope
out
xor
sbbl
inc
pop
leave
sub
stos
or
xlat
das
mov
jl
test
adc
push
cmp
jmp
sub
xor
sbb
mov
int3
insb
jne
out
sbb
xchg
or
add
mov
push
hlt
mov
jl
xchg
les
adc
js
mov
lea
je
jmp
call
pushf
adc
pushf
push
call
add
inc
gs
outsl
fs
gs
imul
add
sahf
setb
movl
movsbw
mov
not
pushf
setl
mov
movl
jmp
push
lock
std
std
add
insl
xchg
inc
cli
mov
and
pushf
mov
pop
adc
xor
bound
lods
std
jge
dec
in
js
dec
inc
and
aam
pop
leave
add
jmp
xchg
out
test
jl
cwtl
mov
pop
rcll
push
out
adc
inc
pop
push
or
mov
push
inc
or
lahf
loope
leave
popa
rcrl
imul
loop
enter
push
mov
mov
ss
inc
and
hlt
out
int3
lods
int3
mov
dec
mov
pop
xorb
mov
imul
loope
enter
xchg
aad
or
adc
inc
pop
fucomi
lds
cli
jno
add
inc
mov
loope
enter
cmp
mov
lahf
xor
pop
jmp
lods
xor
push
clc
fidivrl
jnp
cmc
lods
add
fstpt
adc
sub
rcrl
inc
aad
int
call
cmp
or
stos
push
sti
inc
push
aas
sarl
mov
jo
insl
mov
mov
aam
movsb
push
testl
shl
xchg
mov
dec
scas
out
data16
sahf
xchg
loope
sbb
fdivrl
idiv
ror
jmp
push
bound
call
and
or
fs
ret
cwtl
and
xor
add
stos
mov
push
jb
rcrb
fcoml
in
das
push
xchg
imul
out
fwait
std
popf
nop
jbe
jg
pop
adc
or
jne
test
test
pop
sbb
fcoms
je
xor
sbb
js
sub
sbb
mov
sub
dec
nop
je
addr16
xchg
sub
and
add
pusha
cmp
scas
add
push
lahf
cmp
lds
scas
cwtl
jbe
lock
into
ss
push
into
scas
sub
rcl
out
movsb
out
push
cmp
push
mov
and
lea
inc
mov
jnp
pop
lods
pop
and
lcall
aad
aad
sub
lds
dec
sbb
cmpsl
mov
pop
dec
sbb
jp
adc
cld
cmp
or
mov
popa
je
lods
cwtl
mov
add
sub
add
pop
cmc
test
pop
xchg
adc
popf
push
dec
xchg
stc
add
xlat
lods
or
pop
add
mov
aam
enter
daa
decl
jg
xorb
push
negb
jle
data16
data16
addr16
cld
das
xchg
test
jecxz
pusha
clc
clc
stc
cmp
jmp
add
cmp
cmp
pusha
lea
jb
pusha
lea
jmp
xchg
test
fld1
adc
mov
in
mov
xor
and
enter
mov
sti
mov
stos
les
xchg
mov
iret
lret
paddq
adc
clc
outsb
cli
pop
mov
and
lahf
dec
out
iret
mov
inc
aam
scas
insb
adc
or
xchg
divb
mov
movsb
push
out
out
pop
ljmp
data16
or
das
jg
pop
scas
daa
ljmp
movsb
mov
xchg
and
add
es
adc
lds
lds
and
mov
or
and
xor
adc
adc
inc
lods
xor
mov
xor
cmp
adc
rclb
jbe
inc
or
and
fwait
gs
out
pop
dec
and
push
pop
push
mov
push
xor
loope
push
add
cmp
popf
in
dec
jae
outsl
mov
jle
xor
add
sbb
fstpt
rcrl
pop
std
adc
dec
fisubl
data16
vpshufhw
out
pusha
rclb
gs
inc
fdivrs
xor
add
iret
out
xchg
ret
adc
shll
adc
xchg
xlat
xchg
lock
inc
cmp
into
pop
dec
jb
sub
pop
xor
sub
mov
loop
inc
andb
inc
fisttpl
arpl
lret
add
call
fildl
mov
pop
daa
and
push
lcall
cmc
rcrl
rcll
jo
out
loop
mov
es
sbb
dec
in
add
pushf
je
lods
add
xchg
or
and
inc
sbb
sbb
rorb
cwtl
pop
mov
lods
push
inc
daa
outsb
out
jnp
fisubrl
or
pop
cmp
mov
orl
cmp
xchg
and
cmp
cmp
loopne
test
icebp
je
inc
filds
cli
loopne
stos
shll
seta
fldenv
and
or
mov
or
jnp
pusha
jb
mov
cmc
pop
shrb
cmp
xchg
push
mov
movb
stos
xor
sub
xor
mov
push
loop
push
call
jp
cli
push
pop
loop
push
int3
loopne
fnstcw
outsl
cwtl
pop
push
test
out
mov
jl
add
enter
mov
aaa
xchg
mov
inc
scas
mov
mov
outsb
push
lock
dec
lret
jbe
cmp
repz
loopne
popf
test
arpl
pop
xchg
and
sti
outsb
cmp
loopne
sbb
or
lcall
push
out
push
push
sahf
jbe
cld
mov
mov
stos
cmc
in
aad
lds
aas
mov
daa
pop
and
popf
sahf
lock
mov
shll
out
rcl
mov
or
and
cli
loopne
daa
clc
push
lods
dec
out
fwait
or
ljmp
adc
aas
jp
shlb
cwtl
add
xchg
inc
popf
stos
cmc
dec
pushf
fs
gs
int
inc
movzwl
fldenv
dec
mov
inc
imull
xchg
mov
jae
mov
or
in
std
add
aam
or
loope
int3
adc
and
icebp
jg
adc
and
adc
test
mov
mov
push
push
cmp
pusha
lea
jne
shr
cmc
mov
call
ret
pusha
adc
lds
jnp
imul
adc
push
loop
jmp
mov
and
jne
rcrl
dec
repnz
dec
dec
xor
mov
daa
sub
cli
sbb
ret
sbb
addr16
push
xor
js
adcb
mov
mov
shlb
push
sbb
jbe
out
jae
dec
fdivp
fcoms
push
mov
push
fimuls
jbe
ds
xchg
sbb
inc
pushl
lea
je
push
add
pushl
pushf
push
cmp
movw
push
lea
jb
pusha
movb
lea
jmp
cmp
cmp
call
sbb
aam
lds
dec
test
adc
shlb
out
or
insb
in
inc
rcll
jge
cmp
into
addl
push
in
mov
cmp
inc
jmp
pusha
push
mov
out
es
ret
push
shl
pop
cmpsb
lea
jne
push
lahf
movb
pop
pushf
pushf
pushf
mov
setbe
lea
jmp
pushl
pusha
lea
ja
jmp
ja
pusha
call
pushf
pushf
or
movb
jmp
cmp
add
call
leave
mov
aam
lds
cld
sbb
mov
roll
xchg
ret
icebp
mov
xor
inc
lcall
jle
lods
into
jns
push
push
jns
jle
arpl
into
pop
lret
jmp
push
ljmp
in
jl
test
xchg
movsb
dec
cli
test
bound
fbstp
and
enter
inc
bt
cmp
cmc
cmp
cmp
movzbw
lea
cwtl
mov
jmp
mov
rcr
pop
xchg
mov
pop
stc
xchg
inc
mov
aaa
mov
divb
enter
clc
jnp
or
pop
iret
icebp
and
rcll
mov
lcall
bound
dec
adc
sub
mov
roll
dec
dec
sub
sub
mov
jle
out
movl
movsb
sahf
inc
dec
test
adc
sub
aam
sbb
sub
mov
pushf
inc
lea
dec
jmp
movl
pusha
pushf
lea
jmp
xor
call
lea
jmp
mov
call
mov
lea
je
push
not
lea
setnp
lea
xchg
push
movzwl
jmp
cwtl
cmp
jecxz
mov
insl
imul
sbb
loope
test
dec
shl
inc
lahf
sbb
cmp
loopne
repz
inc
gs
mov
and
add
mov
add
mov
cmpsb
jle
movsb
cmp
push
call
movl
push
call
mov
push
pushl
pusha
lea
jmp
jae
aad
call
pop
inc
outsl
sub
cmpsl
pop
xchg
icebp
xchg
nop
pop
outsl
cs
cs
lds
aam
cmpsl
mov
inc
mov
ret
mov
push
pusha
dec
call
loopne
lock
sub
cmp
and
jmp
dec
cld
pushf
lea
jmp
push
call
decl
rcl
lds
inc
mov
push
jp
divb
ret
pop
and
icebp
inc
jmp
jb
and
movsb
mov
mov
mov
int
stos
inc
lahf
sbbb
cltd
icebp
cmpsl
xchg
sbb
sti
test
adc
xchg
sti
and
or
les
push
adc
and
into
adc
pushf
jmp
add
push
out
fbstp
xor
outsb
cmc
xor
test
pop
xlat
dec
in
pusha
push
dec
cmpsl
mov
and
rorl
mov
mov
daa
mov
inc
sarl
js
cmpsb
mov
lods
aad
mov
push
mov
jae
or
push
rcrb
jno
mov
cmpsb
mov
push
push
dec
into
arpl
push
sbb
aaa
xchg
inc
adc
dec
rolb
jae
dec
dec
sbb
cmp
fmull
loope
leave
xor
xchg
ljmp
sbb
iret
lahf
push
mov
mov
mov
lret
sbb
ja
ret
pop
mov
lds
push
mov
fisubrs
je
xlat
fiaddl
add
dec
iret
pop
leave
inc
and
adc
adc
jno
mov
sbbb
xchg
add
inc
jmp
rcrl
mov
dec
adc
jae
sub
mov
jae
pop
jle
dec
sarb
lock
mov
rorl
add
jno
push
jno
sub
sub
scas
mov
nop
xchg
negb
nop
pusha
pusha
jmp
lea
jne
jmp
push
push
dec
shr
lds
sahf
enter
mov
pop
pop
out
dec
jo
cmp
outsl
leave
fnsave
scas
or
cld
pop
mov
mov
push
mov
mov
pop
sub
push
mov
dec
add
mov
aaa
rorl
adc
shrb
aas
popa
jg
pop
adc
adc
adc
and
stos
push
jo
dec
dec
xchg
jbe
cmpsb
std
pop
adc
jg
pop
xchg
lds
and
cltd
xchg
cmp
out
mov
and
push
loop
lahf
les
call
fdivrl
nop
out
int
ficoms
add
out
dec
bnd
mov
mov
push
addb
xchg
adc
mov
or
or
orb
sbb
cmpsb
xchg
repnz
add
std
pop
dec
stos
sbb
xchg
popa
jno
dec
lcall
mov
cmpsl
aaa
out
mov
andps
cmc
adc
and
jmp
cmc
sub
jp
pushf
bt
cmp
push
lea
je
bt
pusha
cmp
movw
cmp
pusha
mov
call
push
call
scas
in
test
lds
mov
sbb
repnz
stos
xchg
adc
xor
push
mov
dec
fidivrs
xor
ret
adc
pop
add
and
dec
pop
nop
fcompl
jae
ret
pop
dec
das
lret
jmp
jp
outsl
xchg
pop
xchg
or
dec
sub
cli
and
int3
mov
fisttpll
sbbl
gs
sarl
out
ja
into
test
sub
daa
jnp
and
adc
add
mov
mov
fbld
xlat
mov
or
movl
mov
pusha
not
not
lea
pushl
movl
pusha
jmp
pusha
test
or
pusha
pushf
push
call
lds
insl
inc
sub
jp
in
lods
ds
insl
inc
and
data16
push
cli
and
push
sub
cmp
call
inc
lret
xor
insl
lds
xor
bound
dec
scas
add
xlat
sub
orb
mov
test
add
js
push
adc
aas
adcl
inc
mov
out
inc
cs
mov
lret
inc
test
cmpsb
pop
jnp
and
das
xchg
in
dec
aam
add
arpl
jnp
xor
mov
daa
into
mov
and
cmpsb
push
sbb
aad
adc
jae
and
jmp
repnz
adc
repz
repz
out
pop
jp
lcall
or
sarl
pop
enter
test
cwtl
and
rclb
fsubl
adc
push
loopne
nop
jno
movb
call
push
call
fwait
cmp
pop
jle
out
dec
mov
xchg
inc
jo,pn
nop
and
cmpsl
xchg
cmp
mov
jmp
and
mov
push
out
das
out
dec
mov
loopne
imul
pop
roll
in
lods
jecxz
dec
jecxz
subl
repz
mov
shr
inc
xchg
adc
call
and
insb
ret
ja
jg
push
xchg
scas
pop
fbld
out
add
adcb
mov
xor
add
aaa
push
sub
mov
xor
and
sbb
out
outsl
dec
push
mov
shlb
jmp
idivl
orl
mov
imul
imul
and
scas
pop
xor
in
enter
pop
push
mov
add
shrb
js
shrb
mov
adc
int3
xor
fstpl
lret
call
xor
imul
cmp
adc
xor
ja
lahf
clc
mov
popf
sub
pop
push
ss
cmpsb
xchg
push
mov
not
pushf
lahf
pushl
popl
push
setne
pushf
lea
mov
not
movb
lahf
pushl
movl
jmp
lods
lock
sub
mull
push
fadds
push
iret
push
pop
mov
pushf
cmp
and
cmp
push
into
movsb
sbb
pop
loopne
cltd
sub
push
aad
jae
movsl
insb
or
mov
fsub
xchg
add
xchg
scas
mov
leave
xchg
sbb
and
shrl
imul
push
jno
mov
jg
cmpsl
adc
jge
inc
movsl
adc
xchg
les
aad
filds
mov
fiadds
stc
out
xor
jae
push
jo
sbb
out
cmpsb
cmpsb
add
xor
pusha
mov
pop
adc
pop
sub
add
inc
fs
cmpsb
mov
fs
cmp
cmp
xor
rolb
repz
mov
dec
cmp
mov
mov
jp
sub
adc
xor
sbb
push
sbbb
push
dec
pop
push
es
scas
cs
ficoms
dec
ljmp
jmp
add
daa
mov
jns
icebp
imul
into
das
loope
dec
push
rcl
lock
or
mov
jp
rol
sub
and
imul
shl
popf
rorb
adc
outsb
lcall
nop
daa
jnp
cmc
mov
ds
icebp
mov
fucomi
loopne
dec
dec
mov
loope
and
add
test
jg
test
std
leave
aas
aas
jp
push
mov
mov
inc
adc
movsb
add
mov
gs
cmp
adc
or
jmp
cmc
mov
dec
fnstcw
inc
inc
addr16
push
xor
ss
sbb
xchg
enter
into
and
push
sarb
lods
push
push
addr16
pop
lret
aad
cmp
inc
xrelease
mov
lock
pop
in
mov
pushf
jns
jge
sahf
xchg
mov
jae
outsl
jbe
lcall
mov
fisubs
rclb
movsb
ret
sbb
mov
push
or
lahf
das
xchg
or
and
les
cmpl
jno
dec
loop
sbb
leave
decl
add
aas
adc
mov
or
adc
cmp
test
cmpsl
cmpsl
cmpsl
inc
iret
ja
and
mov
in
cmc
test
ret
shl
call
aad
in
in
adc
fnsave
mov
fnsave
ds
sbb
jbe
inc
push
cmp
ret
dec
fwait
popf
and
std
mov
mov
fsubp
imulb
adc
pop
faddl
pop
xor
call
push
ficompl
and
loope
and
inc
pop
or
stos
dec
pop
in
xlat
sahf
dec
pop
xchg
testl
xchg
out
cmp
frstor
int
cmc
lea
push
dec
into
loopne
dec
cmp
dec
fwait
icebp
bswap
mov
call
lea
jne
pushf
push
pusha
mov
pushf
push
pushf
mov
pushf
movb
pushf
lea
call
push
movw
pushl
call
mov
lds
jge
fldl
cmc
jecxz
stos
lds
sub
push
inc
mov
repnz
dec
xchg
adc
add
push
pop
pop
pop
mov
dec
mov
sbb
cmc
stc
daa
js
jp
fiaddl
dec
lret
mov
adc
popa
fdivrs
jo
movb
dec
test
xor
jmp
lea
je
stc
cmp
push
pusha
lea
jne
push
inc
movw
push
inc
pushf
pusha
pushf
lea
jmp
cmp
mov
jne
test
pusha
clc
cmp
jmp
cld
pop
inc
call
flds
push
outsl
or
icebp
mov
fnsave
es
fiadds
cld
jbe
jecxz
inc
mov
int3
lret
inc
cmp
fstps
jo
push
ss
repz
cmp
xlat
jnp
inc
lds
call
mov
shr
mov
out
push
das
pop
add
push
aas
mov
pop
inc
or
mov
loopne
jo
or
xchg
mov
rcr
adc
test
cmp
bound
sbb
addr16
sbb
jl
lea
sti
andl
fwait
lret
mov
dec
testl
sub
add
mov
inc
bt
test
bt
cmp
setbe
lea
cwtl
lahf
jmp
call
xchg
or
out
push
daa
sbb
stc
add
xlat
pop
ja
testl
in
pop
add
clc
or
lret
loope
mov
mov
mov
dec
xchg
jp
popa
pop
sarl
sti
cmc
add
inc
push
lret
and
mov
xchg
adc
or
or
push
not
mov
mov
call
jmp
xlat
hlt
out
call
add
add
loopne
sub
pop
clc
xor
xchg
xor
pop
xor
std
dec
sahf
aas
testl
daa
rcrl
xchg
es
scas
push
mov
add
inc
jmp
jp
inc
xchg
test
leave
sbb
adc
and
cmc
bound
repnz
lds
pop
fistpl
clc
dec
add
mov
aad
lds
icebp
jns
sub
loope
and
mov
dec
cmpsb
mov
inc
xchg
and
mov
bound
push
lcall
xchg
xor
insl
ss
xor
aad
pop
mov
imul
cld
cmp
pushf
pop
pop
mov
ljmp
xchg
sbb
shr
outsl
pop
test
out
repnz
sbb
shll
pop
mov
and
mov
mov
imul
inc
xor
jmp
mov
mov
pushf
lea
jae
bt
pushf
cmp
jmp
dec
pushf
mov
pusha
not
inc
mov
not
mov
jmp
pusha
pushf
lea
call
jmp
add
add
add
addb
add
dec
jecxz
add
add
add
add
pop
add
dec
add
stc
in
add
and
add
sbb
add
add
pusha
movl
call
mov
lea
pusha
pusha
pushf
lea
call
jmp
pushf
lea
jne
movzbl
jmp
or
fisubrl
dec
test
ret
pop
mov
in
fnsave
mov
jbe
enter
insl
arpl
ret
cmp
sti
imull
adc
inc
mov
in
or
insl
lea
sub
cmc
xchg
fnstsw
push
fwait
cmp
adc
pop
in
add
sbbl
fs
mov
sub
stos
dec
ljmp
lret
cmp
sub
addr16
jmp
call
jmp
pop
lods
sbb
call
pusha
outsb
mov
dec
mov
jle
mov
into
movntq
push
push
out
mov
fsubp
fisttpll
bound
add
fmull
jp
or
push
jb
test
out
aam
dec
push
xor
push
pushl
lea
je
cmp
bt
add
clc
clc
pushf
jmp
pushf
pushf
push
call
cmpsl
movsb
ds
adc
jg
xchg
mov
dec
fcmovbe
ljmp
fstpt
cs
pop
mov
arpl
mov
or
push
push
fiaddl
fwait
movsl
xor
push
pop
enter
jne
push
pop
jg
jb
js
sbb
pop
pop
dec
shll
mov
aas
movsl
popa
xlat
data16
and
push
xor
mov
aam
mov
data16
rorl
mov
orl
mov
ljmp
cmp
fs
lcall
imul
xchg
out
test
sbbl
popa
stc
sub
mov
popa
loope
ljmp
or
mov
cli
inc
inc
and
lods
push
fstps
jmp
fs
call
call
pop
pop
inc
ret
shll
pop
mov
push
je
cmpsl
dec
jge
jb
dec
dec
mov
sbb
iret
fsub
out
inc
pop
test
aam
pop
fwait
push
xlat
lahf
roll
cmp
push
test
xchg
fcoms
adc
jo
push
mov
add
lret
stos
scas
js
pushl
sub
mov
sub
shrb
inc
sub
push
pop
ljmp
add
add
int3
cmc
sub
movl
mov
lea
jo
pushf
movl
push
movw
pushl
pusha
lea
jmp
je
lret
shr
pop
cltd
lahf
and
xor
cmp
push
cmp
push
out
call
push
xchg
fstpt
xor
pop
rcll
in
test
or
cmc
call
mov
enter
pop
xchg
mov
js
fsubs
lock
adc
jmp
adc
pop
sahf
outsb
jle
adc
lds
push
push
push
mov
mov
sbbl
mov
add
xchg
std
sbb
cmp
icebp
mov
das
jmp
jg
inc
dec
dec
xchg
mov
rcrl
das
lahf
imul
icebp
sbb
pop
push
cmp
shrl
int
aam
call
adc
pop
xchg
sbb
scas
shl
adc
loopne
iret
aaa
pop
xlat
jb
lods
sbb
insl
jb
cmp
xor
jge
cltd
jmp
aam
cmpsl
cmp
xchg
ret
js
rcll
into
dec
mulb
jle
xchg
ss
out
aam
push
rolb
push
mov
lds
repnz
pushf
repnz
or
pop
js
ret
loop
aas
xor
jb
push
dec
nop
lock
xor
add
xor
cmpsb
jbe
jbe
inc
faddp
je
test
dec
mov
lds
xchg
sbb
outsb
daa
cmpsl
movsb
mov
sub
xchg
and
test
xor
mov
js
fadds
mov
add
in
stos
or
insl
loop
xor
cmc
fwait
scas
mov
mov
xor
in
addr16
sbb
jnp
pop
mov
fwait
jg
add
mov
js
dec
lahf
call
dec
cmpsl
insb
sahf
push
or
cmp
pop
pop
aam
insb
add
and
popa
push
addb
pop
cli
rolb
pop
bnd
mov
rcrl
inc
out
xchg
shll
insb
xor
push
bt
lods
fadds
fdiv
xor
movsl
sub
mov
jb
lahf
mov
mov
cmc
jl
add
scas
pop
push
pop
push
xor
cli
pop
aam
sub
pusha
pop
or
movb
loop,pn
in
sub
nop
test
js
js
sbb
dec
cmpsb
clc
push
pop
mov
cmp
sbb
fsubrl
adc
and
pop
int3
mov
xor
test
cmp
inc
out
mov
pop
mov
mov
outsb
xchg
add
aam
mov
pop
add
mov
mov
cmp
mov
push
test
jne
imul
mov
out
push
dec
sahf
inc
js
mov
cmp
inc
das
leave
xchg
xchg
xchg
inc
out
xchg
ret
cs
pop
ficomps
jge
fisttpl
pop
test
cmc
mov
pop
int
es
fwait
adc
dec
loopne
sbb
xchg
lahf
or
jmp
fwait
popf
adc
lea
xchg
xchg
outsl
dec
push
push
sbbb
rclb
repnz
xchg
idivl
stc
add
popa
cmc
ret
mov
filds
inc
stc
fistps
out
mov
daa
inc
dec
je
repnz
aad
test
cmp
or
adcl
cmp
pop
and
test
cltd
sbb
mov
xchg
xlat
inc
xlat
call
rorb
ljmp
add
call
call
or
popa
mov
xor
xchg
ds
fcomps
or
aad
fnstcw
cmp
aad
in
leave
stc
xlat
pop
mov
fidivs
aas
in
sarl
cld
or
cmp
xor
mov
mov
aas
cmp
dec
and
sub
mov
insl
fmulp
pop
mov
inc
lahf
cmp
incl
ds
dec
or
push
jecxz
cld
lods
adc
inc
arpl
das
mov
std
push
test
and
cli
mov
mov
popf
jg
enter
inc
or
cmp
inc
and
sbb
hlt
jp
pop
test
dec
mov
sbb
ficomps
jecxz
fsubs
cld
cltd
push
xchg
ds
dec
mov
ret
sub
lret
cmp
push
jno
fldenv
ficoms
daa
mov
nop
data16
and
call
jns
outsb
lds
cwtl
clc
and
and
imul
pop
adc
es
int
inc
inc
out
pop
dec
pop
sub
push
mov
dec
loope
xor
gs
push
jbe
cs
gs
and
outsb
push
mov
jle
jb
enter
clc
jle
cmpsl
addr16
dec
js
aaa
shll
sub
mov
xchg
push
cmp
je
push
cmp
dec
in
cmpsb
fistpll
aaa
pop
rcrl
lretw
rcrl
scas
inc
jns
push
inc
xchg
adcl
xchg
fnstsw
mov
xchg
inc
sbb
xchg
xor
cli
into
add
daa
mov
xor
or
dec
and
rcrb
fmulp
sub
inc
pop
mov
lock
test
dec
xchg
push
lret
push
movsb
cs
test
lret
jne
sub
cmc
jle
jle,pn
or
stos
scas
jbe
orb
cmc
leave
push
cli
adc
lret
enter
mov
imul
subb
mov
cmp
mov
pop
cmp
dec
fistpl
push
cld
xor
and
push
cli
sbb
add
sub
cmpsb
mov
xchg
xor
cltd
arpl
dec
movsb
movsl
xrelease
dec
xorl
lret
and
mov
nop
mov
jp
cld
push
and
dec
data16
imul
or
out
fmuls
cld
cltd
jle
pop
adc
sbb
sarb
test
ror
xor
pop
pop
lret
and
xchg
popa
inc
or
lcall
sbb
or
ss
es
lcall
cmc
cs
cmp
dec
dec
and
jle
pop
lods
popf
push
fwait
xor
das
sub
and
adc
dec
mov
in
inc
clc
cmp
lcall
pop
cmp
jg
inc
mov
cli
xor
ljmp
xor
daa
and
pop
daa
mov
les
insl
inc
je
pusha
mov
pop
add
xorb
sbb
sbb
leave
sub
add
nop
inc
aaa
inc
cs
dec
aas
xor
das
pop
add
xor
cmp
xchg
dec
push
push
jge
test
ss
into
xor
sub
cli
repnz
mov
scas
push
push
mov
aaa
push
mov
push
mov
pop
push
rclb
in
dec
cmp
mov
out
sbb
mov
lret
mov
pop
mov
mov
lret
inc
push
lret
mov
out
cmp
pop
rorb
inc
je,pn
sbb
jg
repnz
mov
push
mov
cwtl
jo
ret
xchg
mov
mov
push
mov
movsl
pop
xor
push
push
sti
jbe
fistps
js
xchg
fidivs
aas
rolb
loop
daa
pop
loop
vmptrst
into
adc
lds
jmp
jae
jnp
xor
ret
mov
cmp
sarl
and
jmp
dec
cmp
daa
cmp
fsubrl
cmp
push
adc
jle
jnp
cmp
add
mov
outsl
adc
or
fistpll
das
divl
pop
push
ss
xor
jmp
movaps
stos
adc
pop
sbb
popw
pushf
je
add
and
inc
pop
sub
imull
outsl
sbb
dec
pop
inc
int
push
scas
adc
cmp
scas
inc
scas
dec
cmp
push
jb
sub
je
mov
cmp
push
loopne
int
sub
push
in
dec
clc
jbe,pn
jae
data16
adc
daa
jl
ds
sbb
das
mov
jae
cmp
shlb
and
cmp
jbe
ds
mov
ss
loopne
push
bound
jbe
adc
inc
jp
jae,pt
daa
je
add
pop
mov
jnp
add
dec
sbb
mov
push
jl
sub
jb
push
bound
dec
xchg
xor
push
scas
xor
ss
jle
jb
push
and
ss
cmp
cmp
outsb
sahf
push
mov
sub
cmp
jbe
jbe
jbe
add
jmp
cmp
or
js,pt
js
jo
adc
inc
ss
sbb
pop
mov
out
push
push
stos
ds
ja
cmp
pop
pop
scas
push
subb
xor
scas
and
div
cmp
sub
xor
andb
es
adc
ss
sub
mov
pop
add
push
push
pop
fs
push
das
bound
cmp
and
push
lcall
lcall
and
insb
scas
cmp
cmp
jle
aaa
cmpb
sbb
mov
mov
inc
fcmovb
jp
xlat
dec
je
lret
push
andb
cmpsb
dec
aaa
jmp
arpl
jge
clc
push
fwait
xchg
int3
sub
es
mov
lret
cmpsb
and
or
sbb
sbb
fwait
lods
ds
je
and
ret
push
or
enter
jae
or
adc
imul
cmp
xor
xchg
pop
or
xchg
push
cmpsl
mov
xor
insl
mov
rorb
push
adc
or
push
mov
pop
mov
dec
mov
xor
cmp
je
add
aaa
into
cmp
sub
subb
outsb
cmc
cmp
or
scas
adc
lock
sub
sub
push
lds
je
dec
fwait
bound
or
cli
jb
or
lret
push
xchg
and
xor
dec
cli
leave
sbb
sub
imul
cmpsb
dec
mov
push
jp
mov
pop
test
cmpsb
sarb
lcall
xchg
cmp
pushf
lret
sbb
leave
ss
pop
call
aad
ret
lret
pop
xor
data16
xor
rorl
adc
sub
mov
cmp
jle
push
lret
jmp
popf
inc
xor
push
xor
or
aaa
stc
adc
call
xchg
xchg
cmc
cli
iret
adc
cmp
xchg
mov
or
mov
jns
mov
es
or
pop
lret
insb
cld
popf
cmp
fisttpl
mov
xor
push
sarl
mov
xor
imul
sub
lret
sbb
mov
mov
repnz
cld
sub
add
pop
cmp
fisttpl
pop
int3
sbb
ss
dec
test
adc
cmp
mov
cwtl
dec
or
jecxz
aaa
and
mov
inc
inc
cmp
stos
movsb
dec
ja
inc
sbb
inc
push
push
mov
xor
and
xchg
jb
fcomp
lcall
stos
mov
jno
decb
pop
adc
mov
xchg
inc
push
daa
and
mov
aas
mov
cmpsl
xchg
mov
xchg
jp
mov
repnz
ss
fstpl
mov
xor
jg
jp
int
sbb
imul
and
fists
add
scas
repnz
rorb
sub
and
pop
outsb
mov
jge
push
sub
into
mov
adc
xor
sub
ljmp
jg
add
bound
cmp
mov
sub
inc
lret
lcall
data16
mov
ret
cmpsl
stos
js
xor
xchg
sub
fistpll
or
scas
rclb
dec
inc
jae
inc
cmpsb
idivb
je
lret
rorl
out
nop
push
leave
sbb
mov
rcrb
dec
xchg
jo
cmc
lods
push
jno
and
fs
in
mov
mov
adcl
call
mov
fbstp
rcl
adc
jg
mov
push
dec
sub
cli
nop
sbb
fildll
push
sti
aaa
jp
jge
jp
jp
or
lods
push
fisubrs
fildll
gs
ret
add
lret
jl
stos
push
enter
push
inc
push
es
mov
or
mov
push
lret
and
mov
fdivp
cli
add
sub
and
les
mov
sub
das
cmp
inc
or
or
mov
push
mov
mov
pslld
pop
mov
jmp
out
mov
bound
mov
jl
mov
loopne
xchg
cld
jle
sub
push
pop
xor
je
mov
bt
or
mov
ja
jb
movsb
lahf
sbbb
sti
ljmp
xchg
dec
pop
mov
xor
add
rol
fcmovnu
lds
pop
adc
adc
dec
mov
stos
pop
test
bnd
mov
adc
sti
lcall
fidivrl
ss
movsb
pop
pop
data16
jnp
sub
mov
sar
dec
mov
outsb
dec
shl
movsb
sti
add
sub
sarl
cmp
jns
adc
pushl
test
lds
cmpsb
cltd
adc
jecxz
sub
stc
jle
inc
or
shrl
aaa
lret
out
and
xchg
leave
ss
mov
lea
pushf
in
mov
cmp
lods
into
sti
sbb
jmp
jnp
jns
sub
xchg
lahf
mov
lretw
lret
jmp
pop
dec
add
lret
sub
int3
scas
ja
inc
pop
inc
mov
dec
int
and
js
in
lret
push
pop
sub
lret
or
clc
aas
jle
cli
adc
nop
push
cmp
mov
sub
outsl
sub
dec
outsl
xor
aas
sbb
xlat
cmc
aam
or
out
jnp
sbb
xchg
mulw
mov
jle
cmp
fmuls
or
adc
fmuls
jbe
sbb
addr16
xchg
cs
outsl
pop
or
inc
ret
push
in
push
outsb
repnz
jae
push
icebp
sub
push
aaa
aam
dec
mov
iret
jns
fidivrl
test
lcallw
push
scas
inc
inc
sub
scas
adc
hlt
or
add
rcr
or
sub
xchg
inc
jmp
daa
mov
push
and
push
enter
push
ljmp
mov
sub
mov
adc
mov
xor
push
sti
inc
ss
jnp
sub
fiadds
fstpt
dec
sarb
jae
push
fdivl
cmp
mov
es
pop
fisubrl
push
pop
sahf
mov
fmulp
mov
aas
out
push
dec
sub
jbe
repnz
sub
pop
mov
into
imul
pushw
in
push
ljmp
sub
divl
repnz
xchg
mov
mov
test
push
inc
mov
jle
lret
sbb
negb
pop
or
sbb
aas
das
sbb
nop
mov
mov
and
ss
xchg
jg
push
sbb
push
adc
mov
enter
arpl
push
and
cmp
imul
jl
aaa
adcb
cmp
mov
in
dec
outsb
aaa
fimuls
cmp
leave
cmp
je
mov
ret
cs
das
daa
ja
fisubl
aas
mov
pop
push
sbb
popa
xor
leave
pop
aad
dec
pushf
shrl
stos
sub
push
push
sub
stc
movsl
aaa
mov
leave
lea
jbe
mov
ret
stc
data16
sbb
and
ja
js
lret
aas
xchg
mov
mov
bound
pop
inc
mov
jg
dec
gs
out
ljmp
rolb
push
jbe
cs
shlb
cmp
jne
pop
sarl
fwait
or
xor
and
and
xchg
jbe
push
dec
sub
inc
or
gs
outsl
add
sub
push
fiadds
sbb
movsb
enter
into
jnp
jle
jl
fisubs
sbb
cmp
sub
dec
pop
js
nop
mov
enter
push
push
pop
pop
stc
xor
lret
int
dec
cmp
push
push
push
add
stc
fisubs
popa
aaa
push
add
push
jp
sti
add
fadd
aas
sbb
or
dec
mov
jp
jge
pop
push
pushf
movsl
lcall
rorl
dec
cmpsb
cmpsl
mov
addb
cmpsb
pop
dec
jl
lods
sar
shlb
and
pop
hlt
fs
sbbb
enter
push
dec
mov
pop
pop
pop
jb
jbe
lods
cmp
fucomip
mov
jg
jp
xor
add
lret
les
into
lea
pop
mov
sbb
ljmp
lret
xchg
ja
sbb
mov
sti
mov
push
into
cwtl
mov
orl
push
in
inc
dec
adc
pop
and
push
in
pop
out
lret
nop
mov
or
repnz
out
data16
adc
mov
xchg
push
pusha
pop
mov
pop
xor
mov
jle
std
data16
dec
jg
cwtl
xchg
sbb
addr16
cmp
lret
cmp
xor
scas
mov
inc
imul
cmpsb
pop
jns
fs
pushf
inc
dec
cmpsb
test
and
ja
loopne
pop
lret
lret
or
xchg
scas
add
scas
pop
jge
movsl
sbb
pop
mov
or
or
sbb
push
repz
dec
push
or
out
jge
je
fnsetpm(287
fdiv
jle
mov
pop
fwait
mov
mov
jmp
and
pop
sahf
popaw
arpl
lods
fisubrs
ljmp
repz
add
jnp
pop
mov
mov
lcall
mov
sbb
push
cmp
in
shlb
xor
cmp
mov
xor
cld
cmpl
sub
hlt
mov
dec
lods
sti
cmp
push
push
pop
mulb
cli
cmp
add
mov
adc
push
mov
sbb
cli
lret
sti
sub
cmp
xlat
or
hlt
cmp
mov
cmp
mov
test
cmp
arpl
mov
hlt
cld
sarb
popf
ja
pop
cmp
rcrb
stos
and
cmp
jl
enter
pop
or
pushf
mov
inc
addr16
mov
adc
xchg
cmp
nop
stos
inc
push
pusha
scas
cmp
dec
rcl
out
adc
and
ss
popf
jle
and
or
inc
sbb
push
jle
dec
jb
jge
fdivs
cs
mov
cld
push
mov
loop
cli
jp
inc
unpckhps
aaa
cli
in
movsl
cmpl
cmp
inc
sub
mov
xchg
imul
mov
or
call
xor
out
insb
cmp
xchg
adc
lods
lahf
mov
lcall
jp
dec
cmp
lahf
mov
pop
mov
adc
movsl
jl
in
cmp
adc
jns
lret
mov
aaa
jl
decl
cmpb
inc
orb
out
rcrb
adc
inc
push
xor
sahf
das
add
xor
or
push
adc
lds
mov
test
popf
cld
mov
inc
adc
es
stos
jle
adc
inc
mov
sub
mov
jle
rcl
fnstenv
enter
sub
adc
mov
inc
pop
mov
pop
outsb
jecxz
leave
popf
cli
push
sarl
jmp
iret
inc
push
cmc
push
or
out
arpl
gs
ret
je
jno
decb
adc
adc
jno
mov
insb
and
ret
inc
pop
gs
cmpsb
cld
and
sub
inc
mov
mov
pop
dec
mov
and
dec
ds
or
sbb
fstpt
mov
std
cmpb
push
add
cltd
mov
sub
lock
jg
pop
mov
push
push
daa
arpl
cmp
inc
and
mov
mov
pop
cmp
es
dec
addr16
or
sub
sti
cmp
jno
popa
je
lret
or
sub
jle
or
sbb
cmp
mov
fwait
push
jno,pn
imul
or
adc
mov
xchg
ja
xchg
outsl
dec
sub
pop
xchg
xchg
or
mov
jp
or
icebp
cmp
sbb
sbb
mov
cs
dec
cs
dec
lcall
push
rcrb
pop
loope
cmp
cmpsb
loop
call
inc
jecxz
lret
pop
ljmp
sub
inc
xchg
xor
pmulhuw
jmp
lock
das
sub
inc
lret
insb
xchg
jno
int3
ficoms
or
lahf
imul
inc
into
push
dec
or
push
mov
jmp
and
inc
xchg
clc
jae
and
dec
push
xlat
arpl
fwait
inc
jg
es
mov
jp
and
cli
insb
aas
imul
or
jne
int
test
nop
mov
jno
popa
and
dec
sub
or
sub
sbb
sub
pushf
fsubl
mov
jbe
lds
jle
loopne
inc
mov
push
outsb
xlat
fidivrs
into
fs
out
mov
movb
scas
or
sbb
ror
add
push
jne
rcrl
lods
sub
sti
dec
rol
bound
dec
addr16
aad
mov
js
adc
mov
and
outsb
push
shl
and
adc
in
lock
jbe
or
adc
push
cwtl
push
xor
mov
fldt
es
xchg
clc
mul
and
ficoms
dec
loopne
or
inc
inc
xchg
xor
push
mov
cmp
mov
jmp
inc
cmp
imul
out
fwait
cli
sbb
cltd
cmpsb
in
cmp
sub
cmc
add
sbb
jno
cmp
xchg
jb
mov
jne
imul
sbb
pop
out
ret
and
ss
push
rclb
and
fiadds
stos
jl
popa
push
xorb
cmp
ds
loopne
mov
rorl
jno
sbb
jle
out
rorl
movsl
mov
lret
sub
jg
or
add
cmp
dec
xor
cli
stos
push
aaa
add
fistpl
push
mov
mov
xchg
pop
pop
add
sub
fnstcw
sub
mov
roll
inc
cmc
mov
in
in
inc
pop
fnstsw
dec
inc
outsb
repz
call
push
xchg
pop
int3
mov
mov
add
mov
or
scas
and
loop
mov
lcall
and
bound
cmp
push
mov
inc
inc
cli
flds
int
pop
jo
xor
inc
cmp
movsl
sub
ficoms
jl
idivb
hlt
repz
es
push
dec
mov
ss
cmpsl
arpl
jae
dec
lret
inc
repz
dec
and
dec
sub
and
clc
mov
sbb
pop
daa
sahf
in
pop
or
jo
inc
pushf
out
and
fs
inc
dec
loopne
and
sbb
mov
sub
lcall
jg
cmp
aaa
xor
xor
dec
ss
mov
cli
sub
mov
repnz
or
pop
stc
lods
je
enter
push
mov
jo
inc
cmc
push
jnp
mov
lret
push
push
enter
adcb
adcl
jb
add
dec
enter
inc
inc
aaa
rcrl
aaa
cmc
cli
add
into
inc
adc
mov
fcmovu
jl
ret
inc
and
or
mov
sub
ljmp
inc
xchg
jns
ja
test
fists
jle
sbb
iret
dec
adc
in
jl
mov
jbe
fwait
xchg
lods
xchg
int3
sub
xor
xchg
pop
fldcw
add
and
call
aaa
inc
pusha
inc
lcall
xchg
add
push
cmp
jnp
sbb
pop
jle
push
xchg
jnp
xchg
inc
or
sbb
es
xor
mov
repnz
inc
lds
pop
dec
pop
add
lret
cs
jns
adc
test
mov
dec
rorl
loop
dec
dec
mov
into
fucom
push
imul
cs
pop
bound
dec
or
adc
pop
into
ss
cs
jle
lods
push
dec
cmp
push
adc
dec
push
sahf
xor
sarl
ja
pop
xlat
aas
enter
xchg
scas
clc
dec
xchg
jecxz
sub
insb
dec
fistl
mov
and
push
pop
cs
pop
test
push
cmp
out
xlat
bound
lret
das
test
xor
mov
sbb
dec
sub
lret
xchg
fdivrl
mov
je
inc
in
pop
dec
ja
mov
inc
gs
mov
and
cwtl
mov
test
notl
mov
pusha
and
push
shrb
jne
pop
jmp
mov
scas
std
pop
inc
repnz
lea
xchg
jmp
jo
xchg
je
movsb
rcl
aaa
jp
cld
mov
fldt
jle
mov
xor
sbbl
jnp
movsl
fildl
fisttpll
add
imull
pop
ljmp
lret
mov
inc
adc
aam
jmp
roll
pop
sbb
xor
sub
xor
fiaddl
repnz
push
push
mov
mov
sbb
lcall
inc
xor
lods
insb
loope
inc
aam
xchg
pop
jl
xchg
xchg
add
daa
xor
ds
lea
cmp
lret
or
sub
jmp
xor
in
push
jle
inc
js
xor
lods
and
pop
add
daa
mov
or
mov
dec
lret
xor
cmp
lret
sub
outsb
sbb
mov
test
jp
inc
pop
push
jo
cmp
push
lret
lods
sub
or
in
jb
out
je
es
cli
cmp
aam
jns
mov
les
enter
inc
roll
jge
pop
or
mov
jno
fs
push
fs
or
cmpsb
push
imul
nop
testb
mov
ret
inc
sarb
in
aas
xchg
arpl
sti
xchg
loopne
jp
dec
xor
rol
shll
and
sub
add
pop
mov
mov
ficompl
pop
sbb
inc
sub
nop
cmp
pusha
fidivrl
aam
jp
push
loope
cmp
pop
out
fs
xchg
mov
jg
cmpsb
ds
lret
pop
ljmp
add
movsb
mov
mov
lods
push
mov
psubsw
aad
mov
inc
adc
add
jp
lret
xchg
xor
mov
inc
pop
push
push
push
or
cmp
mov
jp
insb
test
jo
gs
movsb
cmp
inc
push
jg
adc
divl
mov
lds
sbb
pushl
adc
lock
stos
inc
cmp
xchg
add
fs
and
push
mov
adc
cwtl
pop
icebp
stc
and
std
nop
fdivl
jecxz
mov
pop
pop
js
push
dec
push
lods
mov
sbb
inc
cmc
sub
xor
gs
andl
xchg
pop
adc
xchg
rol
dec
cmp
mov
shrb
ds
cld
loope
in
ret
or
mov
addr16
lret
mov
stc
jg
mov
fwait
sti
cmp
xor
fwait
sub
pop
dec
dec
mov
cmp
dec
loopne
fldenv
ret
es
adc
sub
xchg
and
xchg
ret
test
sub
cmp
pushf
jns
stos
jb
dec
or
sub
adc
mov
jp
xor
ret
mov
cmp
mov
aas
or
cs
adc
xchg
push
outsb
movsl
sbb
cmp
push
rcl
mov
or
push
mov
push
clc
repnz
jg
insb
test
cmp
aaa
sbb
sub
cmp
push
xlat
fidivl
adc
adc
fdivrl
mov
dec
jne
mov
testl
xorb
add
cmp
dec
sub
sbb
pop
jbe
sbb
xor
cmpsl
leave
push
fistps
inc
xchg
sub
fwait
xlat
xor
ja
mov
dec
ficoms
xor
jp
dec
mov
adc
xchg
inc
mov
inc
mov
sub
sub
fwait
inc
adc
jnp
dec
adc
jle
cmc
pop
ds
inc
filds
fisubrs
dec
cmp
adc
add
add
mov
inc
cld
mov
or
in
jle
dec
push
push
out
mov
push
js
notl
pusha
push
shll
and
inc
pusha
lret
or
jno
jnp
cmp
in
movsl
inc
xchg
push
inc
lcall
cs
cmp
inc
aas
arpl
adc
in
scas
orb
les
cld
lret
jae
in
ljmp
int3
mov
pop
adc
into
loope
jge
stc
dec
inc
ss
mov
testb
lahf
pop
dec
mov
dec
cld
push
out
pop
or
jp
cs
lret
gs
jb
xchg
cs
cmp
lret
jl
sti
repz
xor
sub
in
xor
jl
roll
repz
imul
aad
decb
insl
idiv
pop
and
jno
pop
popa
adc
arpl
or
adc
xchg
movsb
int3
sub
andb
inc
fxch
addl
cmpl
mov
int3
stos
into
or
orb
mov
lcall
push
sbb
dec
cwtl
loop
pop
cmp
xor
dec
ss
sarb
stc
les
fsubl
aad
int
scas
pop
push
ud2
cltd
ljmp
cwtl
popa
mov
cmp
push
in
out
mov
lahf
lock
lock
mov
scas
pop
outsl
out
mov
pop
inc
lea
add
push
loop
xlat
rcr
imul
aaa
push
xchg
loop
mov
in
cmp
jl
sub
or
roll
push
or
fiaddl
stc
xchg
es
sub
xchg
mov
xor
icebp
mov
lahf
cmp
mov
push
sub
scas
js
mov
arpl
cmp
daa
xor
xchg
js
add
xor
bound
or
sbb
pop
mov
fidivl
das
xchg
push
sub
paddd
gs
cwtl
inc
icebp
stos
jns
adc
xchg
or
sub
aaa
dec
sub
mov
push
push
sbbb
movsl
mov
sbb
stos
hlt
ss
jmp
js
pop
pushf
pop
mov
fstpt
cmp
rclb
xor
imul
data16
sbbb
adc
xor
clc
ljmp
insb
add
xor
and
xchg
mov
add
orb
sub
push
add
clc
sbb
sbb
or
inc
xor
jb
jecxz
add
loopne
mov
es
stc
inc
xor
push
push
sub
or
fadds
out
jmp
enter
daa
out
add
imul
xchg
inc
sub
dec
outsl
cmovg
cld
cmp
fnstcw
adcl
inc
dec
inc
sub
push
mov
fisttps
and
jbe
adc
andb
leave
in
enter
nop
je
loop
setle
xchg
icebp
pop
dec
mov
jle
dec
lret
mov
sbb
push
inc
push
aas
push
dec
sub
xchg
sar
test
sub
js
ret
xor
inc
cmpl
adc
or
inc
popa
dec
je
inc
mov
ret
or
push
inc
mov
push
scas
pop
dec
dec
sbb
mov
mov
dec
push
fiadds
add
dec
cmc
out
jno,pt
add
cmp
shlb
mov
jle
pop
sub
cmp
es
pop
ds
cltd
sbb
inc
mov
lret
repnz
cmpsb
pop
aaa
or
xchg
lcall
fisubl
xchg
jno
enter
xchg
inc
xor
or
push
cmp
mov
stos
jb
ss
sti
repz
test
cmp
jbe
push
out
mov
mov
addl
push
jg
lret
ja
sahf
jne
out
leave
inc
cmp
rorb
imul
aam
rorb
or
in
imul
inc
cwtl
test
add
js
mov
in
sbb
pusha
inc
mov
into
or
movsl
add
cmpsb
ret
xor
dec
xchg
push
pop
jp
in
out
in
testb
sbb
mov
pop
js
pop
rcrl
icebp
sbb
sahf
jmp
dec
es
bnd
lret
faddl
inc
js
or
fwait
es
insb
cltd
testl
insl
insb
mov
pop
sbb
arpl
shrb
mov
je
mov
adc
mov
ficoml
pop
adcl
aas
mov
ss
jo
movsl
xchg
fidivs
cmp
pop
or
nop
mov
test
or
decl
pop
mov
std
or
add
lcall
test
fimuls
adcb
mov
adcb
pop
lods
out
add
mov
xorl
stos
lds
ficomps
repz
mov
fmuls
mov
ss
in
rorl
jbe
mov
enter
xchg
add
push
ss
sub
xchg
or
icebp
mov
xor
cmp
sbb
push
sahf
rorb
xorb
ljmp
and
dec
mov
inc
inc
repz
hlt
test
jb
cs
popa
cmp
adc
test
loop
push
outsb
add
fildll
lds
pop
push
push
xchg
and
hlt
repnz
sbb
sbb
sub
addb
mov
push
test
lds
lods
dec
dec
mov
sub
mov
inc
mov
fadds
xor
icebp
fwait
inc
jecxz
aaa
mov
fstpl
out
stos
pusha
daa
pop
cld
mov
push
cli
or
lcall
and
xchg
inc
mov
mov
clc
sbb
or
xchg
testb
inc
cmpsb
lock
inc
bound
xor
mov
or
mov
outsb
mov
inc
ret
in
ds
or
data16
xlat
lock
movswl
ret
adc
sbb
cs
mov
xchg
popl
jge
add
mov
test
in
cmp
jno
mov
add
or
mov
ljmp
out
cmpb
ja
fwait
xchg
sub
jb
and
push
roll
xlat
push
je
push
jae
filds
stos
xchg
je
cmp
out
addr16
or
jo
mov
pop
enter
cmp
adc
outsb
and
cmp
cli
cmp
mov
jecxz
sub
push
mov
xor
pop
dec
pushf
loopne
mov
sub
cmp
push
xchg
mov
pop
ret
mov
jo
adcb
lea
adc
sahf
test
cmp
xchg
cmp
out
pop
dec
cmpl
add
jnp
insb
repnz
fimuls
jge
clc
dec
insb
lea
rorl
popa
js
jg
lret
adcb
testl
mov
scas
icebp
dec
lods
and
mov
daa
movsb
inc
iret
std
mov
or
out
pop
sbb
sbb
pop
cmc
dec
outsb
xchg
sbb
pop
mov
cmp
pop
mov
pushf
sbb
xor
or
xor
xchg
pop
mov
pop
xor
adc
mov
fcomps
mov
xchg
or
cmp
subl
dec
push
xorl
pusha
jo
das
hlt
pop
inc
push
fcomps
outsb
enter
icebp
iret
sub
in
daa
fstpt
mov
pop
inc
cmp
lret
cli
mov
sbb
hlt
sub
mov
aam
aaa
pop
xchg
add
xchg
push
enter
fnstsw
dec
dec
dec
hlt
sbb
lea
jbe
xor
mov
inc
sahf
out
jp
data16
xchg
out
inc
rorl
push
rclb
nop
inc
sbb
std
push
sbb
addr16
adc
pop
and
jle
into
sar
jmp
push
mov
leave
mov
shrb
mov
pop
imul
xchg
mov
ret
add
iret
sar
dec
pop
fiaddl
ds
leave
mov
sbb
sti
xlat
inc
inc
push
dec
pop
adc
xchg
aas
cmp
enter
in
mov
push
pop
mov
loopne
mov
sbb
jmp
daa
imul
xchg
push
inc
cmc
push
mov
sub
dec
daa
hlt
imul
dec
cli
and
ljmp
scas
sub
orb
mov
adc
pusha
aam
sbb
subb
sbb
cmp
jg
sbb
cmp
ficompl
es
jo
sbb
aaa
adc
ja
ret
sub
dec
pop
jo
lcall
out
ss
sbb
pop
sarl
mov
cmp
insl
int
jnp
push
scas
arpl
or
sub
or
fsubrs
dec
sub
sub
icebp
pusha
mov
gs
xor
mov
sbb
sub
dec
mov
testl
mov
mov
add
sub
lret
push
jmp
dec
pop
jno
sahf
pop
out
and
cwtl
xor
cmp
or
mov
movl
cs
jb
xchg
dec
inc
mov
push
loopne
jmp
mov
rcrl
aas
adc
jle
cmp
fwait
mov
mov
xchg
dec
sub
and
loopne
insb
and
je
mov
mov
das
fisttpl
scas
mov
cmpsl
fs
sub
dec
xchg
sub
shrl
fbstp
jle
dec
cmp
jmp
sub
jle
mov
mov
add
pushf
inc
mov
hlt
mov
push
sub
add
mov
enter
inc
adc
sar
mov
jnp
sbb
dec
test
push
dec
cwtl
sbb
out
cmp
inc
adc
fists
ret
mov
pop
out
call
mov
aaa
and
aaa
add
inc
xlat
mov
stos
pop
cltd
sbb
push
mov
in
jg
rcll
ret
pusha
and
jp
cld
add
or
dec
inc
mov
mov
jle
jmp
or
mov
push
or
xor
mov
daa
aas
mov
sub
sub
push
imul
xor
add
jno
or
popa
inc
fdivrp
dec
loope
jmp
push
xlat
dec
sbb
pop
lret
adc
bound
ja
je
ficompl
dec
rorb
xor
mov
fwait
lret
dec
loop
sahf
icebp
adc
adc
mov
pop
and
test
movsl
dec
fstps
adc
jle
inc
cld
mov
hlt
dec
mov
push
adc
or
daa
in
mov
outsb
insb
ss
sbb
mov
data16
jle
lods
mov
js
daa
jns
adc
adc
insb
push
shl
mov
mov
arpl
mov
sarl
push
mov
add
push
ret
push
fistpll
sbb
sar
pushf
pop
pop
sbb
loopne
lret
mov
sub
xor
icebp
lcall
xor
fucomp
pop
mov
or
pop
mov
xor
inc
mov
in
cltd
mov
in
shr
sbb
gs
jb
cmp
mov
mov
jo
test
sub
jmp
in
inc
mov
imul
aaa
pop
push
call
and
xchg
fdivr
mov
fidivrl
mov
jle
shr
pop
out
pop
sbb
lds
jb
lret
mov
inc
dec
cmp
loope
rcrb
dec
repz
push
add
xor
divb
loop
xor
jg
into
or
cwtl
outsb
jae
lahf
lcall
cs
loope
xor
fwait
xchg
scas
lea
rorb
adc
or
enter
jcxz
push
push
dec
aas
sub
je
mov
repz
add
adc
ret
sbb
xlat
sub
in
jle
jle
push
aaa
inc
fildll
pop
sbb
mov
rorl
push
es
enter
cs
or
or
dec
mov
inc
pusha
pop
test
dec
das
dec
sbb
jbe
ss
icebp
movsl
push
jg
dec
xchg
adc
jb
push
cmc
cmp
pop
pop
into
sbb
push
adc
add
aas
pop
sbb
push
push
add
inc
push
jmp
outsl
sub
lcall
add
jno
inc
adc
mov
xchg
lcall
scas
cmp
outsb
imul
adc
jb
sbb
adc
mov
dec
inc
dec
pop
lods
cwtl
dec
mov
mov
ss
mov
ficomps
sbb
call
ss
rcrl
push
fs
xchg
dec
cmpsb
mov
push
fildll
pop
mov
pop
in
fs
arpl
cld
mov
lret
pop
mov
pop
xor
lock
lret
fcoml
je
mov
fs
push
sub
mov
jecxz
pop
push
enter
in
jge
or
inc
mov
or
aas
ret
jle
sub
rol
cltd
ds
icebp
mov
cmp
fnstsw
xor
xchg
inc
out
mov
fstps
or
push
mov
mov
mov
add
cli
popa
loope
stos
lret
aas
pop
dec
push
mov
imull
movsl
jle
clc
cmp
test
lret
sbb
xchg
movsb
aaa
lock
dec
pop
lods
arpl
jle
lret
sub
cmp
inc
inc
ret
cltd
inc
pop
fisttpll
dec
pop
mov
xchg
add
jae,pn
mov
int3
jne
mov
or
hlt
add
mov
mov
fwait
into
jecxz
jb
inc
ficompl
in
fucomip
inc
rorl
cmc
test
or
cmc
movsb
push
lds
xchg
add
int
insl
push
inc
inc
jg
es
dec
js
outsl
ret
shll
das
lret
add
push
aam
xor
aas
scas
ret
mov
mov
subb
mov
mov
adc
fdivl
sbb
icebp
dec
movsl
or
inc
push
lods
pushw
xor
add
and
lods
and
jle
mov
pusha
jle
test
and
repnz
jno
dec
cmp
ja
ss
inc
jo
cmpsb
inc
pop
cmp
xor
scas
sbbb
shlb
pop
scas
ss
push
in
ljmp
pop
cmp
lahf
mov
dec
clc
or
add
pushf
push
xor
push
out
pop
adc
or
sub
cs
stos
insl
test
scas
pop
scas
cltd
fisubrl
push
cmpsl
stos
mov
sbb
cs
cmp
adc
les
das
pop
jnp
jbe
push
in
dec
ss
mov
lea
pop
push
cs
jnp
pop
es
or
data16
adc
adc
jo
xor
and
sbb
cmp
shrb
adc
jl
fsubrs
jae,pt
daa
push
jl
jbe
cmp
hlt
mov
mov
xor
or
pop
insb
pop
jg
data16
out
adc
jle
jae
cmpsl
push
scas
push
pop
push
xor
jg
pop
inc
cwtl
push
insb
subb
pop
adc
xor
sahf
push
lea
sahf
pop
xchg
ds
push
repnz
push
mov
cmp
adc
ss
or
adc
and
lcall
and
xor
adcb
scas
outsb
mov
jo
xor
push
jl
xor
or
cmp
xor
or
pop
mov
pop
push
stos
jbe
and
push
jnp
or
inc
mov
or
scas
add
bound
adc
add
adc
xor
ds
inc
cs
adcb
inc
add
shrl
cmp
lock
xor
and
cmp
jle
push
sbb
lock
cmp
xor
push
xchg
insb
lcall
out
sub
pop
adc
loopne
mov
dec
ret
push
adc
inc
inc
mov
and
push
or
loopne
sub
dec
movl
sbbb
ja,pn
dec
out
fnsave
xor
lret
mov
mov
inc
daa
or
xor
filds
or
and
popf
sar
rcrl
fdivrs
add
ret
cmp
inc
insb
in
aaa
inc
ds
enter
mov
stc
repnz
fimuls
lret
outsl
add
mov
mov
inc
ror
into
aas
pop
cmp
inc
push
sub
out
push
out
int
and
ja
or
push
xlat
ficoms
mov
ss
ja
adc
cs
mov
pop
xlat
push
frstor
sub
push
ss
adc
mov
popa
jmp
enter
mov
imul
test
in
add
mov
ficoms
mov
push
dec
es
sub
sub
inc
fdivs
pop
sub
mov
jp
mov
pop
pop
fstpl
lea
jne
adc
mov
inc
push
mov
push
pop
in
ss
xchg
outsl
pop
popf
cwtl
inc
xchg
shlb
mov
fs
inc
jg
mov
inc
pop
push
inc
fcom
or
push
cld
jbe
pop
faddl
jle
push
jg
inc
add
loope
daa
filds
sbb
or
pusha
xchg
add
dec
inc
aaa
dec
into
xchg
loope
lock
xchg
cmp
stos
sti
and
dec
or
cli
dec
es
out
lahf
dec
jp
popf
mov
sarl
sub
icebp
push
inc
pop
inc
cmpsb
es
lret
xor
cmp
addr16
xor
dec
test
push
push
dec
cmpsb
outsb
js
xor
xchg
dec
mov
movl
pop
das
mov
aam
or
jbe
pop
xor
aas
push
aas
in
sti
xchg
lret
inc
addb
mov
push
dec
lret
cmp
jb
pop
das
inc
mov
pop
stos
icebp
cli
mov
lret
cmp
cmp
mov
or
cld
inc
test
and
pop
testl
loop
cmpsb
sti
or
stc
xor
je
sbb
repnz
mov
lcall
lock
sbb
dec
in
rclb
stos
shrl
js
cmp
imul
stos
pop
ret
or
add
mov
rorl
inc
pushf
add
cmp
cli
push
mov
cmp
push
bound
mov
lcall
in
cs
lds
lret
cmp
push
repnz
les
cmp
loopne
push
sub
push
or
jb
jbe
inc
xor
sbb
imul
pusha
mov
rol
mov
out
nop
hlt
loopne
dec
xor
enter
shlb
or
pop
test
add
inc
ja
jmp
les
xor
pop
sub
xchg
pop
cwtl
inc
dec
cmp
loope
sti
inc
mov
xor
dec
mov
mov
jmp
pusha
push
inc
ja
std
push
dec
pop
adc
add
aaa
out
add
pop
and
sub
xchg
cmp
push
mov
scas
or
cltd
stos
cmpsb
push
dec
lods
xchg
xor
mov
adc
jnp
movsl
cmp
loop
inc
loope
cli
test
mov
sahf
sbb
and
sub
jns
hlt
sarb
push
sbb
inc
inc
shrl
add
movq
lcall
jno
or
mov
aaa
dec
loope
lret
jmp
mov
xor
stos
sbb
jns
add
ret
pop
push
xchg
or
pop
cld
test
in
and
rolb
fldenv
fwait
repz
xchg
stos
outsl
push
sbb
inc
clc
pop
movsl
inc
or
loope
adc
lds
xlat
mov
mov
adc
xchg
lret
movsl
xchg
lret
pop
sbb
das
sarb
jp
sarb
push
xchg
sub
push
sub
test
inc
insb
inc
testb
push
ret
mov
bound
mov
sbb
stos
jle
test
stc
jmp
push
dec
insl
mov
pop
push
sbb
dec
pop
mov
das
cli
cmp
cld
inc
push
ja
dec
push
or
sub
mov
jo
ja
lret
ret
stc
mov
out
xchg
scas
mov
pop
roll
popl
test
mov
inc
xchg
ja
cvtpi2ps
dec
sbb
popa
inc
sbb
dec
pop
lret
aas
inc
jmp
inc
clc
or
add
jp
push
xor
dec
je
xchg
shrl
sbb
sub
or
lea
ret
mov
aas
and
dec
mov
cwtl
mov
fs
adc
movsl
push
addr16
push
es
xor
ficompl
adcl
dec
push
fwait
inc
subl
pop
mov
jl
pop
add
fsubr
adc
xchg
int3
jmp
cmp
out
in
mull
push
outsb
jl
mov
cmp
icebp
fidivrl
push
lcall
inc
jnp
xchg
cli
inc
cmp
jb
dec
dec
movsb
inc
pushl
xchg
or
inc
cmp
enter
aas
iret
pop
lret
ret
ds
or
js
fs
pop
clc
xchg
pop
cs
push
clc
and
pop
loope
loope
pop
adc
mov
loop
shll
push
sbb
icebp
pop
dec
rcrb
mov
cmpsb
addr16
fbld
test
push
and
or
lods
mov
fwait
cmp
adc
outsb
test
mov
inc
pop
shrb
mov
mov
push
adc
ss
out
sbb
add
or
iret
imul
cwtl
dec
and
xchg
test
inc
mov
ss
aaa
sub
les
leave
cmp
pop
mov
lret
nop
data16
stos
dec
shrb
xchg
cmpsb
pop
inc
inc
shlb
lds
mov
push
ja
jge
inc
dec
push
shlb
jle
mov
inc
sbb
pop
dec
adc
dec
push
test
ret
fildl
adc
mov
cmpsb
jno
mov
aad
pushf
push
icebp
ds
rcrb
dec
ss
mov
inc
xchg
daa
add
test
lods
ss
mov
push
pop
daa
mov
inc
out
jmp
rorb
lahf
and
mov
scas
es
cmp
imulb
jns,pn
ret
sub
sub
test
inc
arpl
cmp
push
lss
in
lods
out
and
mov
xor
and
stos
push
jle
xor
popl
cwtd
ss
push
xchg
xor
pop
push
movsl
iret
sbb
mov
jp
sbb
adc
push
lds
add
daa
fsubl
jbe
loopne
cmp
push
jb
es
cmp
push
mov
pop
movsb
pop
test
push
pop
adc
cs
stos
dec
add
movsl
push
sub
cmp
xor
mov
and
mulb
or
scas
jl
es
cmp
and
push
mov
mov
cmp
sbb
sbb
pop
inc
jle
sub
sub
push
outsb
or
fdivs
ds
jle
scas
mov
pop
or
cwtl
xor
ficompl
mov
pop
jbe,pn
sbb
push
fildll
push
adc
jle
push
hlt
xor
andl
sbb
and
ds
push
imul
jo
cmp
cmpsb
inc
xchg
bound
push
sbb
push
cli
lods
ss
mov
push
cwtl
inc
push
ds
insb
lahf
push
sbb
js
add
sub
or
lock
adc
lahf
push
add
push
cmp
xchg
data16
sbb
adc
adc
inc
cmp
andb
push
push
push
imul
ret
jle
ss
sub
cmp
xor
jns
jnp
aaa
dec
xor
jo
or
sub
imul
jbe
lock
push
pop
sub
push
test
imul
push
mov
jo
ds
cmp
dec
mov
sti
pop
sbb
pop
and
imull
push
es
and
loop
push
fnsave
push
sbb
mov
xchg
adc
iret
and
aam
mov
pushf
sbb
mov
xor
jmp
lret
cs
and
subb
ljmp
fisttps
mov
xor
dec
es
and
pop
loop
push
movsl
add
xchg
fwait
adc
mov
inc
jmp
aaa
sti
cwtl
jo
pop
js
mov
pop
mov
push
mov
mov
cmp
sub
aam
sbb
xchg
sbb
dec
adc
inc
out
test
or
into
mov
dec
je
xor
and
ror
ljmp
mov
pop
mov
inc
dec
xor
testb
sbb
and
xchg
adc
insb
xchg
sbb
add
push
add
xorl
push
jnp
add
stos
xchg
xchg
hlt
aas
test
ss
push
push
lds
adc
cmp
mov
pop
dec
loope
pop
xchg
mov
cld
lods
adc
or
push
pop
pop
shrb
dec
jo
sbb
je
in
inc
cmp
pop
es
jle
pop
outsb
imul
pop
push
cmp
mov
sbb
ficomps
lret
mov
add
test
loopne
dec
scas
pop
insl
bound
je
cmp
dec
cs
sahf
mov
and
ret
ret
dec
sets
push
jle
sub
sub
mul
dec
push
je
rclb
mov
cmpsl
sahf
push
fs
cmpsl
jne
inc
jno
adc
sbb
arpl
pusha
xor
pop
cmp
inc
adc
loope
sti
loope
push
fnstcw
xchg
push
sbb
jns
dec
das
sbb
and
cwtl
lcall
unpckhps
sub
icebp
ja
movsb
lret
aam
mov
jo
daa
stos
cmp
mov
pusha
int
pop
lahf
int3
inc
push
es
lds
rol
daa
cmpsb
js
sarb
sub
das
movsl
inc
lcall
mov
push
jmp
adc
mov
or
xor
andl
mov
jecxz
inc
leave
cwtl
jmp
movsl
sub
cs
adc
in
cmpsl
sti
movsl
sbb
cmpsl
dec
int3
and
les
addr16
inc
lret
clc
xchg
fisubrl
mov
xchg
insl
cmpsl
cli
cmp
lock
cwtl
call
insb
lods
dec
cmp
xor
jmp
dec
sti
jle
jge
jle
lret
mov
mov
sub
sbb
adc
inc
shr
jl
inc
sbb
jg
rcr
test
aaa
inc
stos
push
subl
fs
adc
scas
lock
push
and
jb
in
arpl
inc
mov
dec
and
adc
loop
dec
push
ret
sub
mov
lret
push
leave
fstl
fidivs
inc
loope
in
jno
xor
lds
jle
lods
cmpsl
fdivp
lret
push
dec
xchg
sbb
cmp
ficoms
enter
loope
lret
or
pop
test
cmp
cwtl
fnstcw
pop
and
adc
scas
bound
test
gs
icebp
xchg
idivb
lds
add
add
lahf
push
je
push
inc
mov
push
shll
icebp
cmp
jno
pop
aaa
mov
push
pop
xchg
inc
mov
mov
xchg
aam
das
aam
out
adc
adcl
pop
ficoms
movsl
jbe
xor
dec
lods
add
mov
xchg
jle
loopne
jnp
sbb
adc
inc
or
sub
stc
test
push
mov
or
loopne
pop
jp
es
mov
out
or
push
dec
pop
shr
mov
shlb
jns
ljmp
aas
add
pop
shll
adc
sbb
pop
mov
mov
test
sbb
sub
orb
xor
inc
es
rorb
aaa
faddl
adc
sbb
xlat
in
jg
xchg
mov
dec
inc
pusha
cs
lcall
std
daa
jno
rol
or
push
inc
sbb
xchg
dec
outsb
cmp
adc
add
push
test
test
and
mov
mov
ds
rcll
ret
xchg
dec
pusha
pop
popl
adc
push
movsl
jne
pop
sbb
push
xchg
inc
popf
push
push
mov
sarb
out
mov
fbstp
mov
mov
dec
into
ljmp
out
leave
test
xchg
and
aaa
cmp
scas
aaa
into
lret
pop
ljmp
cmpsb
cwtl
in
sub
add
neg
arpl
sub
xchg
pop
gs
pop
sti
sbb
cmp
push
cltd
mov
sar
dec
ss
cmp
bound
push
addr16
mov
scas
pop
sbb
ret
mov
pop
push
int
loopne
push
lods
mov
xor
stos
adc
lahf
pop
cld
pop
js
outsl
lods
sbb
inc
or
mov
idivb
nop
push
daa
add
aaa
shrl
lret
enter
mov
sub
pop
push
aas
cld
cmp
das
imulb
fiadds
pop
and
push
and
leave
mov
jg
adc
mov
xchg
idivb
mov
fisubrl
dec
pop
cltd
aas
sub
xchg
sbb
fmul
dec
mov
mov
jns
dec
mov
sbb
cmp
aaa
es
mov
mov
cmpsb
add
ret
std
fcmovu
cmp
cmp
jp
lret
frstor
mov
stos
push
pop
repz
sarb
lds
ja
lcall
lret
adc
aaa
mov
mov
aas
es
mov
mov
lcall
pop
gs
mov
mov
push
orl
or
xchg
test
aad
cs
inc
cli
daa
cmc
and
je
popf
lcall
aam
push
jg
adc
push
xor
mov
incl
mov
push
leave
xor
stos
popa
roll
lods
cmp
add
xor
scas
in
mov
stos
pop
or
call
cli
pusha
inc
mov
push
lock
push
xchg
dec
pop
cmpsb
inc
inc
cmp
adc
cli
cmpsl
push
lea
lret
pop
mov
pop
xchg
mov
inc
dec
inc
lcall
lock
ja
das
dec
cmp
xor
cmc
jl
xor
imul
sbb
je
mov
insb
jp
es
push
mov
shrb
or
je
sti
mov
jl
mov
pop
popa
loopne
repnz
rcl
mov
xchg
inc
repnz
aas
pop
push
and
gs
xchg
sub
inc
cmp
mov
ljmp
aam
ljmp
push
mov
cmp
pop
pop
mov
lcall
inc
adc
pop
sub
aaa
lock
mov
daa
cmp
cmpsl
mov
insb
jo
test
sbb
flds
sbb
cmp
push
or
in
xchg
in
dec
xchg
dec
cs
or
mov
xchg
dec
insb
loope
sbb
pop
push
push
clc
xchg
add
scas
xchg
mov
sbb
loope
add
add
lods
divb
test
inc
sbb
sbb
fsubl
dec
addr16
inc
sbb
bound
adc
adc
aas
fmul
lretw
int
lods
outsb
sub
mov
test
cwtl
dec
adc
push
insb
aad
loop
sub
mov
repnz
jnp
dec
dec
cs
sub
cmp
lock
mov
sub
sub
adc
jbe
cmp
sub
mov
repnz
icebp
or
xchg
sub
and
int3
mov
js
cmp
xchg
adc
mov
add
push
cs
js
lcall
je
fidivrl
aam
adc
iret
sti
or
and
and
push
and
xlat
mov
das
test
aam
xlat
mov
cwtl
popa
arpl
adc
fsubrs
scas
adc
jbe
es
push
mov
bound
jl
mov
xchg
or
jp
mov
inc
ja
sbb
andl
xchg
or
aaa
adc
scas
pushf
es
push
adcb
mov
outsl
sbb
lock
arpl
sub
repnz
std
repnz
ds
loopne
xchg
or
fdivl
lcall
cld
ljmp
andl
push
roll
loope
push
mov
lds
out
mov
sub
sbb
cmpsl
push
lret
mov
stos
xor
and
arpl
add
in
push
add
xchg
test
inc
fsubs
imul
iret
mov
inc
sbb
push
push
push
adc
arpl
mov
std
gs
mov
inc
xorb
jge
or
test
mov
adc
mov
loop
mov
inc
pop
in
fidivrl
out
pop
dec
lea
icebp
lcall
xchg
daa
data16
sub
push
imulb
jnp
and
push
repnz
fs
sbb
add
cld
sub
and
call
sbb
xchg
dec
fildll
ret
in
mov
loopne
popf
mov
enter
fdivr
sbb
cli
xlat
loopne
ss
xor
dec
mul
dec
je
inc
popf
cmpsb
sarl
inc
mov
mov
push
dec
lds
pop
adc
mov
imul
cltd
push
and
rcrl
test
cmp
dec
fcomi
fwait
push
jo
xchg
sbb
mov
xchg
sti
test
xor
dec
aam
or
xchg
push
repnz
pop
jge
adc
daa
ficomps
imul
pop
mov
cmpsl
push
std
inc
jg
pop
push
aam
mov
pop
pusha
movsl
mov
xor
cs
push
fdivr
lcall
pushf
popf
inc
sbb
mov
lret
sub
sub
stc
lret
mov
cmp
icebp
mov
in
jecxz
or
push
jbe
pop
push
stc
sub
ja
jge,pt
pop
jns
lret
cmpsb
inc
icebp
shlb
cmp
inc
xor
sbb
jae
or
enter
repnz
inc
cltd
inc
fimuls
arpl
pop
push
xor
push
or
and
and
adc
pop
sub
idiv
in
adc
push
cld
and
jbe
ja
mov
ja
inc
xor
mov
push
push
jne
jmp
out
jbe
push
cmp
lcall
jecxz
cs
fimull
cmp
fs
sub
xchg
sahf
sbb
mov
pop
sub
xchg
mov
ja
dec
xor
cld
jnp
push
mov
dec
bound
add
clc
ds
or
mov
lret
scas
ret
cmp
mov
mov
push
adc
adc
lods
jle
jle
jae
fdivp
mov
insb
nop
popf
jg
fisubrl
dec
js
out
ds
or
xchg
sbb
jp
dec
fwait
xchg
mov
imul
bound
xchg
sub
xchg
mov
rcll
mov
cmp
rol
sbb
lahf
inc
mov
jp
cmp
xchg
add
roll
push
cmpsl
sub
push
pop
push
loope
mov
out
sbb
xor
xor
sub
stos
pop
adc
xlat
sub
or
mov
push
adc
xor
jnp
push
enter
iret
lahf
xchg
add
xor
cmpsl
mov
or
aas
or
stos
jne
lea
mov
hlt
dec
add
adcb
mov
xchg
lahf
and
jmp
test
mov
cld
stc
inc
imul
push
pop
gs
stc
and
dec
movsb
add
pop
jp
adc
dec
sub
xchg
mov
xor
ljmp
jo
push
jp
xor
aaa
in
mov
stc
lcall
mov
mov
inc
sub
push
das
in
push
fneni(8087
movsl
inc
ds
lods
lea
cmp
jns
mov
data16
xor
rcr
cltd
jno
inc
inc
xchg
fidivs
lret
xorb
mov
mov
dec
adc
inc
dec
ret
test
lret
std
stos
ret
mov
push
out
adc
sti
pusha
loope
xor
adc
and
movsl
frndint
push
sahf
mov
roll
mov
out
cmpl
pop
mov
fisttpll
cmpsl
aam
adc
inc
inc
enter
jne
mov
push
adcb
aad
push
stos
jbe
mov
enter
mov
std
inc
push
jno
outsb
and
clc
jp
push
nop
xor
outsl
jp
cmp
pusha
lahf
or
repz
pop
mov
cs
and
adc
push
fstpt
fwait
out
or
dec
xabort
fcoml
adc
ss
add
test
jle
repz
sbb
inc
popa
cld
movsb
aaa
mov
jo
je
inc
rol
js
lods
sbb
mov
out
push
dec
loopne
pop
jnp
mov
mov
adc
jo
mov
or
jmp
xor
fsubr
enter
fldenv
sub
ljmp
fisubrl
test
mov
xor
xor
jmp
dec
lods
sahf
push
dec
inc
xlat
ds
pop
cli
pusha
cld
fnstsw
pop
js
cmovp
sbb
ret
pop
inc
inc
cmc
mov
or
ss
sub
lods
push
mov
mov
pop
incl
cmp
movsb
pop
jle
cs
push
dec
push
into
andl
xor
add
cmc
shlb
iret
push
pop
dec
ret
aaa
adc
test
pop
pop
xchg
push
mov
cmp
lods
xchg
rol
dec
jno
jmp
inc
cmpsb
mov
mov
or
cmp
xor
int
loop
and
mov
ljmp
ret
dec
cmc
cmp
mov
dec
dec
popa
ret
push
mov
mov
inc
insl
mov
push
ss
hlt
ficoms
rorl
mov
aam
out
nop
adc
das
push
inc
imul
pop
and
movsl
mov
jbe
int3
shll
std
mulb
dec
std
icebp
push
inc
fistpll
xchg
sbb
fisttpll
iret
fwait
push
call
push
mov
data16
xchg
addr16
adc
jl
pop
mov
or
mov
cmpsb
mov
fistpll
mov
in
enter
fiadds
sbb
out
sub
mov
outsb
mov
push
lgs
repnz
into
daa
jbe
ret
add
push
shl
decb
shl
jmp
dec
adc
push
sub
xor
imul
rep
inc
outsb
pop
mov
mov
pop
cwtl
dec
push
adc
fs
cmp
jmp
push
ds
leave
push
loopne
jp
imul
mov
int
xchg
std
addr16
mov
and
push
xchg
std
xchg
call
mov
xor
push
xchg
fbstp
mov
push
out
lock
and
test
pop
idiv
pop
inc
ja
xor
cmp
ret
push
cs
sbb
test
insb
xchg
ja
in
adc
cmp
mov
xor
idivb
sbb
repnz
mov
xchg
fmull
pusha
dec
test
stos
pop
jmp
pop
ret
inc
loopne
cmpsb
loop
cs
jp
shl
sti
lret
add
push
inc
into
or
pop
sub
pushaw
mov
push
adc
mov
mov
push
ffree
rcl
inc
lds
fisubs
lods
popf
cltd
mov
jb
sbb
sbb
fs
repz
into
cmp
sbb
xor
dec
in
xchg
call
pop
sub
test
jae
adc
xchg
stc
loop
xchg
es
shr
loopne
mov
xchg
adc
or
jl
push
pop
pop
cmpb
shrb
je
xchg
mov
fcompl
dec
dec
cmp
sbb
iret
pop
cli
cs
rorb
dec
sub
icebp
clc
or
xor
mov
dec
sub
push
stc
lds
jge
pushf
cld
aas
int
decb
mov
lret
jb
sbb
adc
mov
mov
push
push
mov
fcomps
inc
jecxz
out
push
mov
fxam
sub
negb
jne
dec
sbb
insb
push
cs
sbb
sbb
pop
das
nop
mov
es
cmp
adc
and
les
data16
jo
lcall
mov
add
mov
dec
mov
lret
mov
arpl
fs
cmp
aas
dec
inc
pop
dec
cmpsb
addr16
fcomp
test
and
lret
pop
adc
insb
ret
or
arpl
jle
push
lret
in
pop
adc
pop
xchg
push
rcrl
test
inc
sbb
push
sbb
cmp
dec
dec
inc
sti
cmpsb
jb
sbbb
mov
mov
movsl
mov
or
stc
xchg
lea
mov
xchg
mov
pop
and
ret
mov
ljmp
scas
dec
test
adc
dec
jp
cmp
cmp
mov
movsb
add
mov
jno,pt
enter
dec
lods
adc
call
das
mov
dec
cmp
lret
into
add
pushf
mov
bound
in
ret
cli
sbb
sarl
popf
sbb
into
into
call
fimuls
or
sar
sub
enter
out
mov
outsl
into
cmp
rclb
jle
leave
add
pop
jbe
xchg
adc
adc
ja
in
xchg
xchg
push
lret
pop
jae
loope
mov
jo
les
shll
fs
insl
pop
inc
mov
push
fwait
rclb
fimull
sub
sbbl
hlt
jbe
mov
xor
sbb
or
dec
js
movsl
pop
into
jne
or
cmpsb
dec
cli
inc
jge
mov
mov
jo
xchg
cmc
fcoms
mov
cld
sbb
mov
and
push
sub
jle
sub
out
push
sti
sarl
xchg
push
and
inc
jo
addr16
sbb
std
or
xchg
or
pop
lock
adc
stos
and
adc
sub
inc
push
out
and
pusha
enter
lods
or
adc
jg
push
pop
add
clc
push
insb
in
aaa
pop
aaa
xchg
cmp
sbb
enter
cltd
sbb
outsb
mov
pop
movsl
pop
adc
movsl
jecxz
sbb
xchg
mov
addr16
jb
and
or
subl
inc
je
outsb
dec
es
les
mov
mov
imul
inc
sbb
jle
push
test
mov
pusha
jbe
push
aaa
dec
popf
vmwrite
and
xor
dec
xorl
mov
cs
mov
jle
jb
and
sti
push
shll
or
jle
mov
sub
dec
jp
or
jge
lahf
xor
sbb
sbb
mov
sub
fidivl
and
ret
pop
push
mov
sub
jp
push
or
lret
out
test
jbe
out
pop
lods
adc
fidivrl
jle
outsl
rcll
xor
nop
push
jo
jno
pop
stc
or
sbb
es
psllw
mov
push
test
xor
add
nop
jg
pop
sbb
jg
mov
push
sub
sbb
leave
out
movsl
scas
pop
mov
lret
shr
jmp
mov
stc
and
stos
dec
test
je
sahf
lret
sub
imul
adc
lds
xor
xor
push
inc
pop
ret
cld
jg
inc
out
fwait
mov
mov
daa
sub
loopne
ljmp
cmp
sbb
jle
mov
push
pop
out
lret
jle
fimuls
mov
fs
test
xor
sbb
pop
cwtl
sub
jg
push
or
idivl
lock
sbb
arpl
btcl
mov
shlb
stos
fisubrl
and
les
pop
jg
cmp
xchg
inc
fs
dec
push
jle
or
adc
lods
insl
fsts
mov
in
push
mov
jno
test
adc
xchg
adc
adc
ret
jg
imul
inc
sub
daa
inc
dec
pop
test
mov
andl
rcrb
outsb
or
mov
add
int
bnd
sbb
xchg
pop
jno
xor
inc
push
push
or
sub
mov
lods
push
icebp
pop
sub
and
inc
dec
push
mov
or
mov
pop
fdiv
push
push
daa
mov
dec
sub
sahf
fnstcw
lret
arpl
or
data16
sbbl
cwtl
cmpsb
ret
push
ja
dec
cli
fisubs
mov
mov
lock
xchg
sub
inc
aam
negl
dec
arpl
mov
ret
icebp
ret
cmp
cmp
dec
xchg
xchg
shl
dec
adc
pop
or
shlb
push
inc
ficoms
popf
lea
lret
stos
insb
les
add
add
enter
ret
mov
push
loope
push
adc
shlb
pop
mov
dec
sub
cmp
cld
inc
fidivrs
add
sbb
dec
mov
mov
hlt
aaa
and
and
xchg
cmp
mov
hlt
lret
stos
scas
cmp
in
neg
dec
jbe
lret
lods
push
loope
xchg
inc
lahf
dec
shrb
scas
jmp
dec
mov
pop
mov
fsubrp
jmp
out
pop
clc
pop
push
scas
enter
sti
ljmp
aam
daa
divl
sbb
jb
sub
sub
and
sub
xchg
int3
xor
test
nop
je
xchg
inc
rolb
fs
repnz
movsl
mov
adc
out
add
adc
cmp
ljmp
sbb
inc
push
out
adc
sub
lea
fsubs
cs
pop
rcr
or
xor
lock
sub
cmp
bound
mov
dec
sbb
and
sbb
mov
inc
adc
jo
or
add
xor
mov
sbb
inc
mov
int
xor
dec
outsl
lock
aas
jmp
cmpb
jp
push
xchg
je
cmpsb
dec
test
repnz
rcr
xchg
adc
mov
shrl
jb
lret
cltd
test
add
in
lret
test
addb
xchg
jge
lret
ja
push
sub
pop
bt
int
cwtl
nop
sbb
aam
sub
mov
lods
popf
ljmp
mov
fwait
and
imul
cmp
cmpl
sbb
decb
mov
mov
xchg
outsl
lods
push
mov
iret
sbb
sub
or
int
push
rcrb
sysret
or
cltd
out
or
or
inc
mov
movsb
and
loop
xor
loopne
data16
lds
ret
arpl
xor
sub
lret
dec
cmp
add
mov
inc
and
mov
push
dec
mov
sahf
push
lock
gs
mov
cs
adc
insb
jns
jle
jo
sbb
push
dec
pop
test
pop
adc
or
pop
push
insb
jge
mov
mov
jg
je
mov
pop
pop
fcomps
or
cmpsb
lods
push
mov
aam
mov
jle
mov
lds
jle
es
movsl
dec
jbe
lahf
and
mov
jmp
int3
ja
cmpsb
pusha
les
das
ret
sti
pop
arpl
aam
add
lock
lods
ja
sahf
dec
mov
sbb
push
cld
js
ret
rclb
mov
gs
pop
pop
scas
add
pushf
inc
pop
xchg
fisttpl
aas
cmp
js
test
lcall
paddsw
cmp
pop
into
inc
in
push
out
inc
bound
jne
shlb
mov
sub
subb
push
loope
pop
scas
leave
jmp
cmp
cld
hlt
scas
gs
stos
scas
mov
mov
xor
xorb
mov
incb
adc
pusha
jecxz
inc
push
and
subb
add
adc
sub
or
xor
int3
xchg
into
pop
jp
fsts
cltd
int
jg
and
xchg
mov
mov
int3
fxch
sub
jle
dec
sbb
xor
xor
push
test
fs
cmpl
mov
mov
jbe
cmp
pop
xor
lcall
and
jmp
scas
lock
pop
imul
mov
mov
inc
icebp
movsl
push
mov
mov
inc
lock
lock
pop
push
mov
adc
stos
xchg
mov
and
les
push
mov
ficompl
inc
push
inc
loopne
xlat
mov
test
cmp
dec
cmp
enter
mov
lea
or
in
je
ss
jno,pn
inc
dec
out
mov
fldenv
dec
pop
push
dec
adc
push
mov
pop
es
loopne
orb
jne
mov
adc
ds
fstpt
xor
jp
cmpsb
popf
dec
rcll
mov
xorb
inc
push
sbb
hlt
aas
pop
dec
in
mov
cld
jle
inc
push
push
test
lahf
xlat
pop
mov
mov
pop
ljmp
pmaxub
mov
mov
stos
fdivrs
inc
fbld
jle
fadd
inc
adc
pop
test
inc
aad
dec
mov
movsl
stc
dec
lea
fstpl
scas
mov
test
inc
bound
push
xlat
lods
fists
sbb
push
call
pusha
add
dec
insb
dec
jno
pop
lret
inc
xor
fldt
jecxz
hlt
xchg
test
arpl
mov
int3
cmp
adc
add
inc
ja
lret
and
movsl
jp
lcall
ret
sahf
lods
push
jbe,pn
clc
mov
mov
add
cmp
rclb
add
es
mov
cs
out
pop
xor
clc
pop
inc
fldcw
lret
inc
mov
sbb
cs
imul
mov
mov
ja
sub
mov
xchg
bound
mov
jg
pop
fsubrl
into
or
push
inc
lahf
leave
insb
js
xor
scas
adc
je
lods
dec
or
cmpsb
mov
out
in
mov
repnz
int3
sub
into
inc
xor
gs
es
xor
fidivl
or
cmp
pusha
add
lds
pop
sarl
jp
popf
push
ljmp
push
loop
mov
ret
enter
rorb
lret
insb
pop
inc
xchg
aad
inc
cs
repnz
or
xorl
call
and
sub
and
cwtl
and
repz
cld
repnz
cltd
or
pop
jmp
stc
fdivr
in
and
mov
push
fisttpll
shll
and
add
mov
push
or
outsl
pop
loopne
xlat
aas
xchg
inc
pusha
popf
sbb
jmp
icebp
hlt
or
hlt
xchg
es
arpl
xchg
and
adc
fnstsw
ds
or
push
jg
int3
fiaddl
sub
mov
mov
inc
jo
mov
cld
rolb
jecxz
fwait
adc
ret
fisttpl
pop
xor
std
pop
sub
lahf
push
hlt
xchg
neg
mov
pop
aaa
xchg
dec
sub
cli
and
lcall
inc
or
mov
stos
mov
add
clc
icebp
pop
dec
mov
int
push
pop
je
addr16
cmp
fwait
or
idivb
lret
dec
popf
outsl
sub
mov
jbe
in
sar
dec
pushf
and
inc
daa
mov
xchg
aas
sbb
inc
or
dec
and
js
inc
or
imul
and
pop
or
pop
arpl
xor
out
xor
mov
sbb
xchg
cmp
sub
xlat
mov
push
jbe
repnz
or
ret
pop
dec
arpl
fwait
shr
imul
mov
bound
ss
inc
pop
dec
fwait
xchg
xlat
fisttpl
mov
in
inc
and
repnz
mov
and
ljmp
xchg
xor
xor
jns
xor
jno
ret
mov
les
test
pushw
inc
mov
sbb
xchg
sti
mov
mov
les
leave
or
lock
jbe
ret
mov
jp
out
mov
fwait
repnz
repz
rorl
lods
inc
xor
sti
push
and
mov
fistpll
and
cltd
sub
cs
jns
imul
repz
or
push
adc
cmp
sub
sub
add
mov
push
std
fucomip
out
call
cmp
es
inc
fnsave
in
movsb
cmpb
daa
mov
test
push
pop
xchg
sub
adc
mov
ss
mov
jno
xor
test
ret
sub
cmp
sbb
push
sbb
pop
adc
inc
out
jae
ss
fidivrs
jae
aas
inc
inc
and
es
ljmp
cmp
gs
ljmp
and
or
mov
xor
jecxz
ror
adc
sub
mov
adc
data16
add
sub
ljmp
sbb
adc
jg
mov
arpl
mov
mov
lcall
test
scas
dec
aaa
in
lcall
call
jl
push
cli
jl
xchg
jno
and
inc
sbb
bound
inc
adc
push
inc
pop
push
sub
adcb
add
pop
add
add
inc
pop
jl
sbb
sahf
inc
adc
push
leave
or
ss
push
mov
inc
mov
cmp
jbe,pn
adc
int3
mov
and
cs
cmpb
es
js
pop
divb
adc
jne
mov
jg
xor
bound
push
xor
ss
js
adc
push
pop
cmp
pushf
cmp
adc
cli
add
adc
or
push
sub
xor
push
and
ss
jo,pn
jl
push
dec
adc
inc
cmp
xchg
adcb
sbb
xor
jae
daa
inc
push
pop
rcll
xor
sahf
push
sub
sbb
and
outsl
inc
xor
outsl
jbe
push
push
repz
sub
push
inc
jle
jo
inc
push
jbe
pop
xor
push
inc
mov
xor
adc
cmpsb
add
jo
cmpsb
stos
fsubl
rorb
fnstsw
addb
movsl
xchg
push
or
jle
mov
xlat
shll
cs
daa
xlat
in
imul
pop
adc
or
cli
sets
pop
les
enter
imul
and
jmp
or
fisttpll
lret
imul
mov
dec
lret
sti
popa
pop
dec
dec
jnp
add
ljmp
aaa
int
cmp
xchg
pop
mov
inc
xor
mov
xor
in
xlat
mov
inc
lret
icebp
push
out
xchg
pusha
enter
fisubrl
hlt
jno
xchg
push
loopne
fdivs
lret
dec
cli
cwtl
mov
lods
pop
mov
fmulp
ds
leave
inc
sub
cli
fildll
outsb
jns
scas
adc
push
stos
push
stos
loope
and
cld
loope
test
or
or
cmp
xor
jbe
and
pusha
inc
cmpb
mov
xlat
mov
push
jecxz
xor
pop
pusha
out
cmp
rolb
loope
scas
sub
sbb
enter
sbb
mov
ret
dec
dec
lret
push
sub
js
clc
or
cld
popa
mov
lret
add
loop
vpcmpeqd
lahf
fnstenv
jno
xor
stc
mov
and
mov
xlat
dec
inc
into
add
pop
lret
lcall
in
arpl
push
cmp
mov
in
pop
jno
sahf
xchg
xchg
jp
dec
shlb
pop
pop
pop
jle
in
add
jbe
out
xchg
adc
sbb
das
movsl
sar
pop
mov
call
lcall
icebp
fnstcw
or
mov
and
and
div
jno
lret
sub
sub
inc
testb
loopne
mov
push
out
sub
not
mov
aam
shl
outsb
rorb
or
dec
ret
mov
sub
push
inc
fcmovbe
js
popf
lret
adc
stos
mov
ret
cli
xor
mov
push
jnp
mov
ret
push
dec
mov
mov
test
fs
fstpl
jle
faddp
jg
jecxz
lods
inc
or
or
and
ss
or
subl
daa
loope
xchg
rcrl
insb
and
push
mov
hlt
xor
mov
lret
std
scas
in
cmc
test
xor
pop
or
pop
enter
cmpsl
fwait
decl
cmp
fwait
sub
cmpsb
dec
mov
cmp
fs
repz
ret
sub
clc
cli
lods
enter
pop
fidivrs
push
dec
xor
mov
sbb
lret
mov
addr16
xchg
jno
lock
fnstcw
xor
inc
fstps
sbb
jo
inc
adc
push
and
mov
les
mov
into
sti
jnp
push
xor
adc
shll
loope
sbb
ret
adc
arpl
add
lods
dec
dec
push
lea
lret
push
negb
or
cmp
test
sar
push
sahf
lcall
aad
es
jp
sub
push
pop
cmp
and
xlat
pop
jp
in
dec
inc
cmp
sahf
es
dec
lea
and
jb
das
sub
mov
push
dec
pop
push
adc
testb
mov
mov
mov
outsb
sub
pxor
andnps
dec
je
sub
popf
mov
repnz
cmp
fstl
into
sarb
fucompp
add
ljmp
xlat
ror
mov
rorb
icebp
loope
dec
pushf
pop
xorb
int3
dec
xchg
inc
sbb
or
mov
inc
push
pop
les
shl
push
or
roll
hlt
out
dec
or
leave
mov
sub
pop
pushl
or
sub
sbb
cmpsb
in
xchg
rol
or
div
jp
mov
pop
in
and
sbb
div
and
es
into
lods
sub
enter
pop
mov
dec
xchg
outsl
mov
push
and
lcall
lret
adc
cmp
pop
mov
popa
xchg
xchg
push
jb
and
sbbb
pop
cmp
imul
jbe
xor
mov
dec
in
lea
scas
cld
vhaddps
xchg
repz
into
test
pop
and
dec
sbb
data16
lock
movsl
enter
adc
cli
add
aaa
aad
adc
popf
repnz
xchg
cli
sub
loopne
pop
lcall
aaa
stos
adc
pop
js
ja
xor
les
push
rol
xchg
cmp
xchg
jae
enter
mov
fstpl
int
fwait
ja
pop
fimull
lods
or
repz
or
fnstcw
xchg
pop
ret
enter
stos
aas
mov
jle
sbb
loop
cmp
and
or
inc
sarl
ss
cmc
hlt
jbe
dec
aas
jg
test
mov
sub
les
pop
bound
pop
mov
inc
inc
cs
add
push
cmp
out
hlt
mov
rcrb
dec
popa
xchg
cmp
mov
shrl
icebp
ss
addr16
jg
dec
xor
fcmovnb
and
scas
dec
pop
cmp
iret
movsl
enter
aam
jns
popf
jmp
in
or
ss
ss
out
sub
shlb
movsl
mov
mov
push
mov
std
dec
jbe
push
or
push
mov
jp
sbb
test
cmp
mov
jge
jno
es
xor
or
lahf
in
mov
inc
mov
mov
xchg
pop
notb
inc
sub
cmp
xor
cmpsb
icebp
ret
cmp
dec
aas
loope
fcmovnb
lret
repz
sahf
cmc
movl
call
inc
or
mov
xchg
jae
cli
int
jmp
mov
jp
addr16
jae
movsb
jmp
jl
cld
push
sbb
clc
loop
ret
in
adcb
iret
mov
ret
in
faddl
fwait
sbb
data16
loope
pop
stos
leave
add
push
ja
scas
iret
daa
ss
je
xorl
mov
call
hlt
movb
inc
cwtl
inc
outsb
movsl
subb
pop
lock
cmp
mov
dec
nop
incl
out
sbb
add
inc
mov
mov
int3
js
fmuls
push
adc
cs
fucomp
mov
dec
inc
stos
outsl
imul
lds
mov
or
shl
loopne
leave
icebp
mov
jne
repnz
xchg
in
outsl
or
das
orl
and
adc
dec
int3
inc
movsl
jbe
pop
dec
mov
je
jp
jge
and
aam
das
je
sbb
pop
xor
outsb
xchg
clc
imul
dec
inc
es
or
lret
gs
push
push
sub
out
cli
aas
lcall
mulb
aam
add
push
dec
push
mov
pop
mov
scas
scas
ss
xchg
ss
mov
mov
or
in
xlat
and
jb
inc
xor
pop
movlps
mov
xlat
lds
dec
sub
repnz
hlt
je
lods
rolb
clc
dec
add
outsl
add
mov
adc
push
jno
sti
push
hlt
dec
orb
out
mov
mov
je
aaa
xor
es
das
or
xor
dec
xchg
addb
push
push
push
xchg
lret
sarb
inc
out
std
push
adc
add
dec
jb
inc
insb
rorl
fnstsw
test
je
pusha
pop
jle
test
aas
ret
xchg
and
lret
mov
pop
xchg
dec
jno
fsubs
sbb
sarl
aaa
movsb
test
and
call
inc
pop
mov
jae
xor
cmp
pop
loope
and
loopne
dec
idivl
call
push
mov
push
lods
and
inc
mov
jp
push
enter
sbb
test
or
push
add
xor
cmp
pop
mov
inc
lods
mov
push
out
in
enter
call
mov
movsl
aaa
dec
mov
lods
ss
faddl
mov
add
mov
addl
mov
ret
pusha
inc
arpl
lret
jg
cltd
mov
rcll
fdivs
push
insb
dec
mov
dec
out
xor
sahf
in
hlt
inc
arpl
mov
enter
push
xor
int3
mov
test
mov
push
xchg
xlat
jmp
test
mov
or
inc
xchg
ljmp
mov
sub
mov
dec
push
jno
jns
push
xchg
test
cwtl
mov
pop
cli
push
fidivl
xchg
xor
mov
push
lcall
pop
xchg
mov
aad
add
jo
push
int3
inc
mov
adc
or
sub
xor
fnstenv
lcall
es
cmpsl
and
stc
xchg
outsb
pop
mov
jecxz
push
jl
cmp
xchg
cmpb
jecxz
jmp
ja
in
test
mov
mov
stos
lret
sbb
mov
xorl
xor
dec
pop
lods
xchg
adc
mov
ja
pop
add
mov
jns
scas
push
aaa
dec
mov
jno
push
out
shl
push
pop
dec
adc
imul
add
push
jb
xor
jb
mov
in
sub
or
mov
sahf
lock
sarl
sbb
inc
lea
movsl
out
mov
push
mov
add
dec
push
scas
enter
lret
jbe
outsl
sbb
jbe
inc
or
xor
push
cli
out
iret
dec
loop
sub
pop
sbb
adc
pop
das
cmp
xchg
add
lret
or
inc
popa
enter
pop
rcll
into
and
or
setle
jne
inc
push
pop
push
jp
push
xchg
addr16
pop
sbb
push
rclb
inc
push
aas
inc
mov
lahf
sbb
dec
sbb
inc
sub
mov
dec
adc
test
imul
sbb
dec
push
aad
flds
cs
inc
cwtl
xchg
xchg
or
adc
mov
add
mov
inc
insb
cmp
dec
out
mov
adc
popa
sbb
dec
dec
inc
xchg
mov
bound
push
xor
fimull
sub
in
inc
popf
inc
cmc
mov
jno
repnz
pusha
xor
ret
xchg
jle
dec
xor
push
add
sti
ss
test
leave
pushf
add
cmp
push
add
or
ret
mov
pushf
cmp
pushf
fst
mov
push
lds
popa
xchg
and
loope
sbb
cmc
inc
subb
add
aas
sbb
mov
and
clc
push
xchg
imul
out
ss
pop
cmc
adc
fcomps
xchg
or
xchg
shll
rclb
inc
clc
xchg
push
jae
scas
mov
pop
movsl
dec
fistps
fmuls
pop
and
gs
cmp
xor
test
push
or
ror
les
lret
push
dec
js
fiaddl
call
sub
add
mov
loopne
scas
and
je
sbb
inc
scas
movsl
jo,pn
repz
adc
and
inc
icebp
xchg
mov
in
adc
fucompp
adc
aaa
lret
xchg
addl
push
ret
aam
mov
or
out
hlt
mov
shlb
movsb
fcmovne
mov
xlat
cmpsl
lds
mov
dec
dec
mov
addr16
test
mov
xor
inc
push
dec
jb
sbb
lds
rcr
push
pop
adcb
jl
cld
sbb
sbb
aam
movsb
fwait
xor
push
out
scas
and
ret
aam
in
sbb
xchg
dec
mov
pop
lret
test
imul
ja
bound
xchg
rcrb
xor
xor
sub
inc
lret
add
push
and
in
outsb
mov
negl
and
inc
daa
loopne,pn
dec
inc
push
pushfw
or
or
mov
mov
push
adc
ss
xchg
icebp
sbb
xchg
dec
es
mov
call
fst
sub
ss
jmp
xorl
pop
scas
mov
dec
mov
addl
test
xlat
dec
fsubl
stos
iret
xor
test
push
sub
xchg
dec
mov
jno
jg
daa
lds
xchg
and
push
push
fisubrl
out
mov
xor
fs
imul
sahf
icebp
adc
pop
push
lret
dec
ljmp
cmpsl
xor
mov
mov
cmp
inc
pop
jno
add
daa
aaa
rcll
xor
pop
jb
fnstcw
pop
shl
lods
aas
fcmove
jge
sbb
sub
jno
pop
jp
xchg
add
mov
je
push
push
movsl
lret
add
ret
or
dec
nop
dec
imul
fsubs
or
scas
pop
push
xchg
lret
clc
add
mov
jne
aad
lcall
cmp
jl
jle
and
dec
mov
dec
xor
pop
mov
cmp
xchg
push
je
movsb
insl
mov
sahf
dec
lods
mov
out
fs
xlat
pop
adc
push
cmc
ror
adc
xchg
sarl
les
sarl
inc
or
inc
cmpsl
xlat
cli
pusha
lret
mov
lds
cmp
cmp
xchg
cmp
mov
xchg
jmp
jmp
jb
lret
inc
mov
sub
icebp
jp
sub
je
xor
ds
mov
mov
fs
mov
rolb
cld
push
xchg
test
sub
cpuid
stos
mov
imul
cmpl
cmp
jg
adcl
add
je
ret
popa
sahf
cmp
dec
aaa
push
jb
movsl
fdivp
inc
jbe
inc
stos
dec
and
jbe
lret
in
jle
ror
adc
xor
xor
lods
sahf
cmc
pop
jno
push
lret
es
ja
jmp
rcr
dec
pop
cmc
sub
push
push
or
sbb
mov
mov
stos
fnsave
bnd
cli
mov
movsl
lock
push
arpl
je
xor
mov
sbb
push
or
enter
xlat
je
imul
mov
pop
xchg
out
lock
push
lds
mov
inc
stos
movsl
daa
aas
ss
popl
mov
adc
cltd
ja
lods
push
rorl
hlt
xchg
mov
enter
xor
testl
jno
mov
inc
mov
cmpb
jns
enter
sbb
cmpb
fiaddl
add
loopne
fstpt
mov
outsb
hlt
mull
bound
xchg
cwtl
jmp
pop
jmp
cld
setge
cmp
fisubrs
shlb
dec
xlat
mov
rorb
xchg
inc
jle
adc
mov
cld
xor
mov
call
dec
movsl
or
jbe
movsb
jle
adc
das
clc
dec
ret
into
mov
insb
lahf
icebp
loopne
test
mov
mov
sub
rcrl
sub
jne
or
adc
stc
push
dec
inc
inc
dec
cmp
push
xor
xchg
push
lds
arpl
jle
ret
repnz
fidivrs
cs
dec
ret
out
pop
mov
test
push
aaa
push
and
lret
mov
push
jmp
sbb
scas
and
push
push
pusha
pop
sbb
outsl
push
ss
jge
cmp
or
mov
pop
sbb
sbb
cli
sub
sbb
add
aaa
dec
or
jb
test
je
jns
fwait
out
xchg
icebp
pop
dec
dec
xchg
mov
movsb
ja
scas
xor
push
sub
sbb
and
and
cmp
dec
es
jo
push
jbe
js
daa
cmp
xchg
adc
cmp
into
addb
sbb
into
hlt
or
mov
imul
sub
fldcw
mov
mov
addl
in
cmp
sub
push
pop
call
inc
jp
cmp
and
cltd
mov
stos
lods
mov
ss
scas
push
insb
push
jle
jle
fiaddl
xor
fisubrl
push
nop
or
mov
cmp
call
sahf
scas
cmp
push
xchg
mov
mov
cs
jb
icebp
pop
pop
jmp
sarb
pop
rorl
nop
pushf
adc
or
sbb
push
push
dec
ret
pop
je
or
ud0
sti
lahf
xchg
sub
adc
dec
mov
ret
das
idiv
cwtl
addb
cmpl
xchg
lahf
popf
xor
jb
test
stos
cs
mov
repnz
xchg
push
inc
xlat
add
mov
push
addr16
dec
pop
cld
mov
sahf
mov
cmp
ss
pop
mov
jmp
ror
dec
pop
jbe
hlt
scas
cmp
inc
dec
fsts
movsl
in
adc
test
adc
sbb
sahf
test
xor
sar
pop
addr16
mov
push
push
es
jb
jmp
add
cwtl
sub
mov
push
push
xor
lahf
inc
jbe
call
sub
out
sbb
ja
lea
mov
outsl
into
and
dec
cli
test
pop
das
cmc
inc
pop
mov
repnz
test
dec
iret
sub
sub
jne
jne
sahf
std
dec
dec
lcall
fiaddl
pop
in
push
cmpl
adc
imul
sub
aaa
fwait
pop
inc
dec
divb
jp
pop
sub
clc
jb
sbb
movsl
push
outsl
and
cmp
push
fimuls
jl
cltd
inc
dec
mov
shrb
fwait
lret
enter
jg
jmp
jp
fwait
mov
sbb
mov
ret
into
sub
repnz
inc
add
fnsetpm(287
push
pop
movsl
dec
dec
inc
sub
aaa
jns
sub
pop
and
mov
flds
xlat
jb
dec
aam
pop
stos
std
lret
add
jbe
mov
xchg
dec
lods
pusha
aas
add
movsl
sub
pop
mov
jg
xchg
dec
test
popf
inc
aas
jmp
lcall
sub
add
push
js
pop
daa
fsubs
adc
pop
jo
push
pop
xor
js
xor
loopne
fs
mov
stos
xor
inc
addb
adcl
push
or
push
call
lea
insl
mov
dec
push
mov
out
stos
mov
xchg
push
pop
dec
fsubl
and
in
jo
lret
sub
sbb
add
sarb
fnstenv
sbb
lret
push
in
xor
mov
adcb
dec
xchg
cs
lods
test
dec
sub
cmp
loope
jecxz
xchg
js
mov
jge
xchg
cltd
and
das
ret
cmp
or
fistl
pop
or
dec
lods
sbb
xor
stos
adc
pop
cmpsb
lods
loopne
pop
xchg
fcomp
cmp
les
iret
xchg
daa
nop
lea
xchg
clc
das
dec
adc
inc
js,pn
arpl
push
imull
lcall
popa
es
lods
cs
add
repz
shrb
aas
push
add
pop
cld
push
cs
ret
cmc
aam
pushf
in
mov
push
int3
lret
push
adc
imul
inc
xchg
add
iret
gs
and
sbb
movb
jle
dec
mov
popf
nop
inc
mov
push
push
push
fldl
sbb
neg
cmp
ret
gs
jmp
jge
test
cmp
or
mov
dec
jle
inc
test
inc
ja
cmc
mov
push
mov
mov
ficoms
jl
inc
mov
in
testl
mov
ja
sbb
inc
pop
adcl
faddp
push
mov
pop
cmp
cwtl
orb
lret
push
jecxz
push
mov
xlat
shll
add
xor
xor
inc
mov
xor
mov
ljmp
pusha
dec
cmp
loopne
bound
sub
mov
lret
mov
fmuls
cmp
push
cmp
hlt
lds
and
mov
imul
dec
mov
shll
and
push
cmc
arpl
test
sbb
push
mov
fstpt
jg
jg
mov
jecxz
and
xchg
mov
cmp
ret
fisubrs
mov
call
or
inc
insl
or
imul
and
sub
xchg
sbb
cmp
arpl
push
test
in
pop
loope
andl
adc
nop
dec
adc
fucomp
inc
or
jecxz
dec
xor
cmp
int
decb
sarl
test
mov
cmp
add
inc
pop
ds
sar
push
in
cmp
outsl
cmp
inc
ss
sub
lret
dec
fwait
testl
roll
xchg
mov
ficoml
ds
dec
cmpsl
push
pop
push
lcall
push
cmpsl
ss
fdivrs
fsubl
gs
rcrb
mov
lods
inc
fnsave
sub
mov
insb
inc
rorl
neg
movsl
push
push
lods
insb
adcl
dec
inc
loope
fmuls
sub
push
out
in
adc
cwtl
and
add
pushf
lret
adc
out
mov
xchg
cmp
icebp
adc
cmp
push
mov
dec
cmpsb
loopne
lret
xor
push
repz
es
cmp
in
jg
mov
nop
adc
mov
in
cli
and
mov
sbb
test
lret
sub
outsb
ja
mov
dec
iret
fidivrl
xchg
enter
add
sahf
jl
cs
mov
sbb
lret
dec
aas
push
inc
inc
rcrb
or
mov
fmulp
repnz
ds
je
or
add
mov
push
sub
aaa
add
andb
negl
jg
scas
add
xchg
test
dec
inc
sub
adc
cmc
adc
enter
sbb
pop
push
mov
shll
mov
shrb
push
lods
and
and
mov
ja
outsb
test
test
or
rcr
sbb
sbb
or
sbb
jb
lcall
fmuls
dec
loop
xor
lea
sbb
pushf
cmp
dec
cmp
dec
cmp
mov
push
add
sbb
sbb
les
mov
lods
push
btc
ret
outsb
divl
mov
pop
shrl
jle
std
out
dec
popa
push
or
mov
inc
xlat
sti
adc
jl
ss
lret
in
shlb
mov
dec
enter
adc
sbb
ret
push
jo
aas
dec
jb
pop
dec
js
ja
sub
dec
rcrb
jecxz
out
adc
pop
and
rorb
fcomps
push
popa
call
lds
sar
mov
addl
jno
xchg
xchg
icebp
aaa
dec
xchg
jl
enter
mov
in
inc
mov
and
js
jmp
enter
jmp
mov
add
int
daa
adc
fdivs
mov
out
shrl
add
mov
push
cmp
repnz
fwait
sbb
repnz
pusha
inc
cmp
pop
in
sqrtps
xlat
fsubrs
ficoml
popf
ret
repnz
sub
sar
mov
sub
jno
aad
adc
cmp
push
leave
dec
into
pop
dec
jmp
push
repnz
fnstenv
mov
std
xor
dec
sbb
leave
pop
pop
push
or
push
xchg
and
dec
dec
orb
inc
sub
mov
push
jge
aad
pop
cmc
sub
mov
icebp
xchg
push
outsb
mov
mov
fdivs
inc
xchg
fstl
divb
sub
lea
leave
sbb
popf
cmpsb
sahf
cltd
jb
dec
xor
inc
add
jmp
mov
cmp
jg
jnp
jl
push
aas
inc
add
ret
scas
xchg
dec
ljmp
cmp
dec
mov
xor
arpl
dec
dec
nop
pop
je
jge
nop
or
cwtl
sub
inc
xchg
mov
jl
enter
mov
mov
jle
enter
mov
mov
mov
outsl
lret
jbe
sub
insl
push
dec
in
lds
ds
movsb
mov
dec
repnz
loop
cmpsl
pop
sub
std
adc
out
repz
adcl
imul
adc
fwait
jl
adc
mov
mov
jge
icebp
dec
rorb
push
sbb
fmuls
jo
mov
dec
out
jg
pusha
add
lret
daa
sbb
out
xchg
push
jge
scas
xchg
jle
lods
cmpxchg8b
jl
cmp
xchg
mov
leave
cli
cmp
loopne
or
lahf
cmp
ljmp
sub
push
cs
or
sbb
aaa
mov
jmp
cmp
insb
in
mulb
cmp
pop
sbb
nop
inc
sub
test
push
stos
int
test
dec
sbb
push
hlt
and
jne
mov
sbb
cmpl
jno
aaa
xchg
push
int3
dec
pop
rcll
add
cmp
fldcw
mov
mov
xor
psllw
jecxz
sub
sub
xchg
cmp
dec
and
addr16
inc
fcomps
and
adc
dec
call
ret
xchg
or
test
push
cmp
out
shlb
stc
sbb
pop
mov
fsubs
adc
mov
mov
push
inc
call
sbb
dec
lds
push
mov
rorl
fnstcw
xor
jne
stos
pop
lret
loopne
jmp
dec
fistps
and
xchg
mov
adc
push
fisubrl
and
mov
mov
jae
and
pop
js
mov
test
jno
ja
inc
aas
sub
lret
mov
lods
add
mov
lods
inc
ds
cltd
js
ja
call
je
and
dec
lock
clc
pop
push
jae
sbb
push
sbb
mov
push
push
sbb
mov
pop
inc
lret
mov
add
ficompl
or
out
mov
andps
inc
xchg
lods
gs
mov
addr16
jg
mov
inc
xchg
icebp
and
clc
xchg
mov
sbb
enter
push
xor
sarl
cmp
bound
stos
adc
sbb
das
jp
loop
ret
fs
dec
jp
lret
scas
jb
fwait
jb
jp
insl
xor
add
xchg
push
pushf
mov
mov
inc
pop
daa
or
xorl
ret
cmp
sub
jg
fists
pop
xchg
cld
xor
in
cmp
rcr
jb
add
shl
fxch
shrb
test
or
dec
push
inc
push
icebp
xadd
sbbb
cmp
jmp
in
sub
movsb
jge
mov
or
mov
fbstp
adc
push
outsb
xchg
sbb
test
jecxz
das
dec
notl
addr16
xor
lcall
inc
bound
xor
adc
mov
xchg
outsb
cmp
xchg
in
decl
sub
cmpsl
dec
cmp
loop
mov
inc
fwait
inc
or
fmul
int
or
mov
and
jg
inc
mov
cwtl
arpl
cmp
fs
popa
insl
lods
imul
mov
rolb
mov
mov
add
inc
adc
cmp
dec
outsb
push
dec
ljmp
push
mov
pop
frstor
fwait
mov
mov
lock
push
or
cs
cmp
mov
jns
pop
push
insl
sbb
jge
icebp
pop
cmp
xor
adc
js
imul
inc
bound
ret
jge
enter
mov
cld
das
les
in
cmp
pop
out
push
xchg
dec
xchg
andl
int3
lret
adc
pushf
or
mov
ss
fmulp
dec
xchg
insb
xor
cmp
lcall
stos
aam
popf
mov
jmp
xorb
fnsave
add
in
jmp
cmpsl
nop
rcl
lods
or
ss
push
fwait
test
sub
mov
ljmp
cli
push
xchg
out
push
sub
xchg
jno
pop
dec
cmp
cs
and
xchg
inc
mov
ja
jle
push
icebp
mov
cmp
and
push
icebp
push
lahf
incb
divl
leave
hlt
push
add
xchg
inc
scas
mov
xor
jp
cmp
test
pop
adc
jecxz
push
int3
jb
cmpsl
push
call
test
jle
repnz
jg
pop
cmp
jg
lcall
jle
dec
shlb
in
or
sub
into
dec
scas
cmpsb
jp
xor
popf
ss
inc
sbb
cmp
lock
fidivrl
movsl
pop
repz
sarb
fmull
mov
pop
je
fsubrl
fcmovne
pop
xor
loopne
mov
outsl
jle
dec
xchg
dec
cmp
mov
dec
or
mov
or
lahf
lcall
fisubrl
or
aaa
jl
jo
adc
mov
cs
enter
imul
dec
pop
inc
push
sub
insl
mov
into
cmp
sbb
push
mov
sarl
in
cli
jns
mov
in
xorl
jne
xor
fimuls
mov
je
mov
xchg
test
jg
sbb
mov
pop
jnp
loope
test
out
ret
popf
push
xor
adc
cmpb
bound
std
leave
sbbb
jnp
inc
mov
scas
mov
sarl
ja,pt
xor
test
add
and
repnz
pop
sbb
mov
sarl
les
out
lret
jns
das
cmp
lds
add
xchg
inc
sub
add
inc
fstl
push
arpl
jge
pop
mov
cmp
jge
cmp
int
incl
xchg
push
inc
cmp
leave
dec
mov
mov
adc
iret
pop
mov
lret
movsl
add
stos
push
sbb
sbb
push
jge
call
pop
push
xorb
xchg
jl
cld
shl
push
or
lret
and
cwtl
orb
adc
negl
adc
leave
pop
fwait
add
cli
xchg
pop
scas
loopne
sbb
loopne
jecxz
ja
mov
or
movsl
pop
xor
and
rorl
or
es
mov
int3
inc
cmc
pop
lds
mov
subb
push
cmp
fadds
pop
push
mov
or
sbb
ljmp
fisubrl
xor
bnd
pop
inc
flds
jp
pop
hlt
inc
stos
adc
mov
mov
adc
arpl
pop
xor
dec
stos
mov
push
in
incb
jbe
xchg
push
cmp
mov
mov
mov
divl
mov
jb
dec
movsl
sub
ret
in
dec
test
dec
xor
fdivrl
imul
adc
hlt
xor
cli
ja
outsb
xor
adcb
inc
shrl
or
inc
push
mov
repz
jae
cmp
nop
lahf
adc
js
clc
les
and
xor
push
mov
dec
in
fsubr
aas
jge
push
xor
mov
loope
or
leave
shll
sbb
cmc
mov
lret
dec
or
scas
hlt
aas
enter
sarb
and
cli
inc
outsl
sbb
aaa
sbb
or
xor
jo
jle,pt
divl
add
xor
loope
and
adc
lds
mov
movsb
jmp
cmp
xor
enter
rcrb
notb
inc
mov
jb
mov
fidivl
xchg
sbb
sbb
mov
lret
pusha
daa
adc
cmp
gs
push
roll
xor
lea
rcr
cmp
cmp
dec
mov
mov
xor
sub
jmp
sbb
sub
test
sub
sbb
add
xlat
scas
jg
out
shll
nop
pop
dec
cltd
adc
cmpb
dec
scas
jg
and
and
icebp
dec
loope
jnp
add
dec
les
or
push
or
dec
push
fwait
in
and
ficomps
rcll
cwtl
ja,pn
addb
loopne
out
add
xlat
mov
iret
mov
cmp
fists
repnz
add
inc
mov
sbb
lea
cmp
imul
xchg
bound
adc
pop
int
int
inc
test
inc
aas
sub
out
lock
dec
pop
lret
imul
or
dec
or
mov
addr16
dec
fmuls
out
add
shr
je
addr16
push
mov
fucomp
jne
loope
out
sub
mov
mov
jbe
xchg
or
xor
lahf
mov
sbb
cmp
inc
popf
sarl
dec
cld
bound
enter
fdivs
fbstp
stos
les
aad
loopne
int3
pop
mov
jp
dec
and
dec
xchg
xchg
mov
dec
pop
clc
repnz
sub
mov
push
add
push
sbb
inc
mov
loope
xlat
jae
loope
pop
arpl
imul
addb
xor
lahf
loope
ficoms
xor
stc
and
inc
inc
pop
das
xor
push
adc
mov
or
cmp
lds
lcall
dec
repz
shrb
xor
jo
cmp
sbb
sbb
aas
sub
rep
aas
or
inc
mov
popa
cli
iret
xor
or
fadd
je
and
pop
add
lea
test
inc
sti
or
insb
addb
aas
cltd
add
pop
cmp
ljmp
lock
push
andl
jmp
push
pushl
fwait
sbb
xchg
arpl
adc
xchg
andb
adc
cmp
faddl
es
es
les
push
sub
mov
mov
loopne
shlb
js
aad
aaa
mov
pop
sti
sbb
pusha
daa
fidivrs
pop
inc
ljmp
mov
or
xchg
push
enter
sbb
sbb
rcll
and
enter
mov
test
int
idivb
add
pusha
xchg
jmp
mov
dec
jae
ficomps
sub
jmp
and
lock
jbe
xchg
outsl
cs
cwtl
inc
adc
push
aaa
cmpsb
shr
call
pop
je
imul
sub
inc
mov
hlt
cmovnp
pop
into
mov
out
aas
lods
cmp
xor
mov
movsl
inc
mov
sbb
dec
out
aam
dec
push
jbe
cmpsb
add
lea
hlt
movsb
mov
mov
pop
cmp
fsubs
es
popf
jns
mov
sarl
adc
dec
pop
and
mov
push
rclb
pop
addr16
add
outsl
push
inc
out
std
jo
cmp
push
fcoml
sbb
mov
jmp
adc
cmc
push
cmpsl
lock
in
repnz
iret
sub
mov
and
fsubl
push
xchg
jp
cmp
lcall
jnp
test
push
aaa
inc
add
es
jle
dec
lret
jns
dec
cli
outsl
lahf
dec
mov
jg
push
outsb
mov
sbb
fsubs
jp
or
test
ja
arpl
sub
sub
jle
sub
dec
cmpsb
das
jbe
mov
sub
xchg
inc
in
xor
movsb
pop
mov
mov
push
lret
adc
outsb
or
js
adc
dec
mov
rorl
idivb
or
pop
jbe
adcl
or
jmp
insl
arpl
push
dec
xor
mov
cmp
scas
dec
int
lcall
clc
data16
push
pusha
push
mov
pushf
add
les
js
cmp
xlat
test
lock
dec
xlat
mov
pop
lea
jecxz
push
std
push
aaa
dec
sub
rcrl
jg
add
mov
fdivl
mov
add
xlat
jno
jo
jne
pop
mov
cld
dec
xchg
in
daa
or
jns
xchg
or
shrb
push
pop
btc
jp
fbstp
sub
testb
pushf
xor
loopne
lret
jns
mov
xchg
imul
shlb
ret
hlt
jbe
xchg
outsb
push
jge
jb
inc
roll
call
push
js
adc
nop
inc
pusha
test
ja
and
scas
pop
lret
pop
jmp
or
sub
aam
mov
add
jg
inc
dec
mov
icebp
sbb
int
xor
dec
outsb
clc
push
jne
sub
pop
lds
sbb
inc
add
push
pop
or
enter
pusha
jb
pop
adc
mov
sbb
push
mov
xchg
iret
push
xchg
cmpsb
fists
add
leave
adc
mov
pop
xchg
into
xchg
gs
xchg
inc
xchg
stc
mov
pop
aas
cmpsb
sbb
xor
int3
and
or
shrl
mov
xchg
es
stos
sbb
fbstp
popf
insb
pusha
ss
cmp
mov
inc
xchg
sbb
pusha
cmp
cmp
dec
jle
hlt
rclb
sub
mov
jns
cmp
in
outsb
pop
jmp
mov
xor
les
and
xor
push
mov
pop
pop
bound
cmp
mov
jns
lds
jo,pn
sbb
ss
xor
sub
add
cmp
and
xchg
inc
xor
fistpll
and
test
nop
xor
and
loop
mov
adc
cmp
or
clc
lcall
xorb
jne
les
sub
mov
sub
sub
or
or
xor
mov
mov
cltd
leave
jle
mov
mov
rolb
xor
adc
pop
data16
int
adc
xchg
cwtl
cmp
ss
and
ss
aaa
push
cmp
pop
subb
mov
sbb
scas
jp
sub
outsb
xchg
sarb
add
pop
add
push
sahf
xor
push
or
dec
insb
push
xor
mov
push
and
push
cmp
sub
or
lods
std
stos
insb
cs
push
sub
idivl
cs
outsl
jb
jle
pop
and
sub
pop
js
jbe
pushf
cmp
dec
insl
xor
pop
pop
jbe
sbb
and
dec
adc
cmp
pop
or
sub
jl
adc
push
xchg
add
jl
nop
sub
outsb
adc
xor
sub
xchg
push
and
js
lcall
and
push
insb
and
daa
jb
push
cmp
call
rorb
mov
dec
pusha
mov
mov
jecxz
sbb
inc
fidivrs
fistpll
mov
mov
dec
test
data16
insb
sti
sub
lcall
push
pop
pop
fwait
shrb
mov
enter
cmp
jge
scas
dec
mov
shll
sbb
xchg
jmp
sub
sarl
cmp
je
in
stc
xchg
lret
or
inc
mov
add
sarb
movl
mov
pop
lret
bound
mov
int3
imul
repnz
daa
cmp
mov
jecxz
mov
mov
arpl
push
or
push
into
jmp
popf
push
pop
and
mov
mov
fs
mov
testl
jle
into
sub
jp,pt
xor
ret
inc
rcll
int3
insb
adc
les
or
addl
loopne
ret
mov
pushf
add
fs
or
fcompl
inc
push
ret
dec
sbb
fwait
gs
cs
push
and
and
hlt
adc
imul
mov
xchg
add
jle
jns
sti
das
push
movsb
icebp
imul
cmc
in
rcl
ljmp
push
shr
mov
dec
cmp
in
lock
mov
pop
in
into
or
mov
inc
rcrb
jle
add
inc
sub
mov
push
mov
js
mov
testb
lret
mov
fs
loopne
clc
lea
inc
inc
pop
jns
xchg
ds
je
xor
or
mov
pop
test
xchg
push
pushf
push
mov
ss
stos
lahf
cli
fbld
xchg
or
xchg
xchg
xor
adc
or
adc
mov
std
mov
idivb
or
push
mov
add
popf
sub
mov
pop
fwait
popa
test
sub
mov
mov
xchg
dec
mov
inc
jp
push
mov
in
pop
je
jmp
sbb
test
inc
loop
cmp
icebp
and
pop
dec
inc
dec
dec
icebp
sub
je
cmp
test
pop
mov
std
lock
mov
mov
shrl
orl
fidivl
aad
in
push
stos
fcmovbe
test
pop
cmp
or
imul
arpl
mov
test
cli
jp
xchg
sbb
dec
sbb
push
dec
jnp
inc
adc
pop
dec
movsl
dec
dec
inc
mov
loopne
test
mov
mov
mov
out
mov
rcrl
inc
lods
rorl
and
sub
xchg
test
xchg
ja
test
xchg
sub
lret
sub
in
jno
cld
ret
xchg
das
out
enter
xor
lods
jl
inc
movsl
adc
mov
mov
imul
icebp
adc
ret
out
xor
ljmp
scas
imulb
jo
cs
fucomi
pop
mov
sbb
cmp
mov
push
pusha
jnp
or
push
push
scas
js
push
mov
icebp
mov
or
adc
push
xchg
and
xchg
lea
jmp
call
dec
dec
je
addr16
cs
pop
mov
pop
cmp
std
cmp
pop
sbb
mov
or
push
or
inc
cli
mov
and
mov
and
outsl
or
sub
cmp
pusha
sahf
and
rclb
jg
lret
shll
jl
jecxz
inc
xor
shl
repnz
and
add
inc
imul
dec
pmullw
mul
fmul
cli
cmp
sti
dec
mov
cwtl
push
mov
dec
jle
iret
lods
out
add
clc
xlat
int
mov
mov
cmpsb
sbb
xchg
ret
inc
sbb
shlb
or
dec
jb
jp
in
lcall
fnstsw
mov
or
lret
pop
fcomps
mov
sub
xor
cs
enter
pop
add
test
es
sbb
cmp
mov
cs
mov
popa
je
mov
mov
bound
pop
test
pop
push
push
adc
mov
jb
push
ljmp
and
lret
imul
push
movsb
fadd
xchg
pop
dec
adc
mov
roll
jg
jmp
xor
cmp
in
and
or
mov
in
in
and
cs
call
aaa
jnp
push
call
xor
movsb
cmpsl
test
jo
xchg
jne
aas
outsl
xchg
dec
adc
enter
push
sbb
xor
fucomip
inc
popa
dec
mov
jp
loopne
pop
cwtl
lock
add
sbbb
out
sbb
push
or
cmp
sbb
rorb
dec
inc
cli
shr
repnz
stos
lcall
dec
sub
or
jae
pop
or
dec
mov
ds
adc
and
push
dec
dec
loope
jns
cmp
mov
imul
and
inc
ret
dec
mov
test
sub
test
dec
faddl
idivl
xchg
movsl
ja
push
cwtl
jmp
or
cld
xor
arpl
pushf
fildll
shlb
or
sub
push
mov
fwait
adc
xor
jno
mov
in
cmp
cmp
adcb
push
fisttpl
shl
pop
adc
xor
test
outsb
mov
xor
fldt
dec
mov
test
inc
movsl
rolb
ret
shll
push
ss
push
ss
lahf
pop
jle
clc
xchg
mov
stos
lcall
xor
mov
sbb
inc
ss
sub
sbb
mov
jnp
insl
push
pushw
jo
and
loop
outsb
mov
and
inc
je
sbb
sub
fs
and
add
push
push
inc
sbb
aaa
cmp
addr16
cmp
out
dec
jne
cmp
push
mov
sub
cmp
jbe
and
fistpll
xor
cs
and
repnz
mov
lods
cltd
outsl
jle
cmp
outsb
jp
push
push
push
and
loopne
sub
je
insb
push
jg
ja
cmp
sbb
cmp
push
scas
cmp
adc
adc
cmp
sarb
cs
fs
and
sub
addb
addr16
cmp
scas
push
sub
sub
jo
lcall
ja
cmp
dec
outsl
sub
cmp
sub
push
test
jbe
pop
adc
sahf
cmp
jo
jae
aaa
cs
jo
push
outsl
je
pop
jbe
subb
push
jmp
ds
cmpsl
dec
lahf
sahf
push
sbb
dec
stc
das
and
cmp
stos
adc
mov
ss
sbbb
sbb
adc
adc
xchg
or
fs
push
sbb
jp
notl
or
push
mov
fs
pop
xor
outsl
stc
cmp
push
dec
fdivr
cmp
subb
sbb
jb
sub
idivl
repnz
jmp
push
test
adc
data16
nop
sbb
or
xorb
shlb
out
insb
push
xchg
push
int3
std
xlat
outsb
ret
aad
fwait
jmp
cli
aas
jp
xchg
xchg
push
lods
dec
iret
dec
lods
push
push
hlt
jae
int
fwait
jge
fnstsw
dec
lret
rcll
push
pop
arpl
cmpsb
inc
movsl
pop
int3
shll
cmp
shlb
jg
scas
sahf
push
lret
push
pushf
or
xchg
fwait
pop
scas
in
into
mov
enter
mov
jl
inc
mov
push
int
es
loope
aam
stos
jp
and
gs
inc
push
push
mov
pop
test
inc
add
cs
popa
mov
mov
cmpsb
xor
jl
and
add
ljmp
outsb
cmc
mov
inc
xor
dec
aaa
mov
iret
in
imul
je
xor
sbb
ficoms
int3
hlt
push
movsl
and
and
mov
inc
dec
aas
insb
fdivr
dec
add
cwtl
pusha
xchg
ret
fs
div
push
push
or
or
pop
inc
xchg
arpl
jnp
fistpll
mov
inc
xchg
fsubs
ds
push
shl
repz
addr16
push
sbb
mov
outsb
pop
pop
mov
lds
adc
inc
push
clc
dec
xchg
pop
lock
mov
inc
xlat
cmp
in
lcall
loopne
mov
sti
cmp
mov
test
cs
lea
mov
mov
clc
pusha
out
cmpsb
mov
loopne
in
testb
es
cltd
shll
ss
pop
dec
mov
addr16
pop
lea
ficoml
dec
mov
int
stc
mov
lret
xchg
fistpll
mov
and
cmp
mov
inc
jo
mov
push
pop
cli
mov
adc
je
jp
in
or
push
xor
fnstsw
push
pop
and
test
lods
sub
lret
jo
jne
or
add
mov
in
ds
stc
push
xchg
popf
pushf
adc
stc
fs
lret
and
jge
cli
bound
sbb
sarl
dec
inc
xchg
pop
adc
mov
fimuls
inc
lret
mov
pop
pop
mov
ss
ss
mov
add
adc
loop
sbb
dec
jnp
pusha
in
cmp
inc
call
inc
fnsave
mov
outsb
xchg
dec
xchg
inc
sti
cmp
pushf
and
es
or
shll
dec
in
sbb
mov
cmp
xchg
sub
and
out
loop
cmpsl
popa
or
inc
jl
aas
aam
inc
ss
push
inc
or
cmp
and
push
orl
dec
sub
or
fistps
roll
xor
shll
dec
cmp
dec
jl
cmp
or
inc
pop
test
ret
and
lret
faddp
lock
push
mov
mov
push
pop
mov
sbb
outsl
nop
pop
pop
aam
movsb
push
mov
ja
movsl
in
xchg
sbb
pop
pop
cli
sbb
test
mov
sti
mov
mov
in
sub
xor
jbe
dec
push
push
repnz
adc
inc
pop
mov
sbb
push
add
pop
mov
cli
rol
add
lea
std
pop
sbb
mov
pusha
sub
xchg
stc
sarb
loop
jns
push
lcall
push
jbe
dec
cltd
mov
inc
leave
pop
call
add
add
cmp
in
rorl
mov
outsb
or
push
cwtl
cmpsb
adc
jle
or
dec
fs
out
push
icebp
sbb
arpl
clc
mov
or
adc
lock
mov
decb
sbb
jbe
xlat
sub
pop
dec
mov
mov
cmp
pop
xor
in
sub
divb
pushf
dec
imul
sti
es
inc
mov
pop
xchg
xchg
sub
add
adc
fildll
fdivl
arpl
lret
lret
std
lea
popf
sub
xchg
aas
push
mov
outsl
loope
jo
and
sub
dec
decl
loope
sbb
repnz
lret
xor
lods
test
es
jg
push
sahf
shrb
pop
adc
adc
loope
and
mov
pop
cmp
in
enter
pop
int
or
in
xchg
jb
pusha
mov
test
xor
adc
xchg
mov
inc
mov
inc
push
or
bnd
push
inc
insb
jbe
iret
inc
push
sub
push
ja
sub
inc
jp
sub
pop
rol
sub
call
insb
cmpl
push
je
inc
insb
dec
mov
xchg
sub
cmpsb
xchg
pop
jb
out
mov
aam
xor
movsb
dec
fcomps
push
or
sub
cs
or
push
mov
pop
pop
fcompl
lret
sub
scas
bound
inc
mov
mov
bound
aaa
imul
jp
loop
mov
pop
cmp
sub
fidivrl
leave
movsl
jp
aam
mov
sbb
cmp
adc
jo
mov
pop
inc
sar
aad
xchg
pop
inc
mov
pusha
ds
jle
test
cmp
hlt
cs
aas
negl
dec
test
ljmp
rcr
or
xor
fbld
adc
xchg
pop
ficoml
mov
xchg
cmp
test
fimuls
push
ret
jbe
adc
jecxz
mov
adc
cmpsb
jb
faddp
stos
pop
fcmovnbe
dec
sub
xchg
mov
leave
push
jl
nop
sbb
das
or
inc
repnz
sub
cmp
cmp
dec
push
lds
aas
dec
push
fstpt
cmc
inc
push
cmp
stc
xor
jecxz
pusha
cmp
inc
add
test
sbb
ss
mov
sub
mov
aam
inc
into
inc
loopne
push
loop
mov
jle
mov
dec
dec
xchg
cmpsb
inc
insb
enter
in
add
andl
cmp
dec
aad
test
mov
xor
addr16
and
aad
das
cmc
and
mov
negb
mov
inc
loopne
idivl
and
arpl
inc
or
cli
aas
clc
cmp
adc
xchg
push
add
dec
hlt
sti
sub
pop
testb
ret
dec
aaa
fstl
dec
xlat
inc
mov
addr16
lea
fstpt
in
mov
adc
sahf
cmp
inc
sti
sub
xor
or
pop
or
call
pop
loopne
fwait
scas
je
xchg
filds
mov
pop
push
lahf
ret
sbb
sbb
and
xchg
xchg
inc
mov
and
and
xchg
jb
sub
jnp
xchg
push
lret
or
sbb
push
icebp
xor
mul
mov
stos
push
push
sahf
mov
test
pop
xor
out
aaa
dec
es
pop
fmull
sbb
fdivl
cmc
ficoms
xchg
jp
xor
or
arpl
lock
int3
pop
cs
ja
dec
cmp
pop
movsb
or
out
xchg
mov
mov
jo
inc
sub
sbb
adc
popa
ss
movsb
push
ds
js
push
sub
inc
arpl
into
dec
loopne
and
add
je
aas
xchg
imul
enter
sbb
mov
xorl
jle
rclb
fistl
test
xor
mov
pop
mov
daa
xchg
lods
out
lahf
mov
popf
jbe
sbb
sub
scas
pop
stc
fsubr
jecxz
stos
sbbl
mov
pop
das
mov
enter
cwtl
jmp
cs
out
add
pop
jb
in
jb
add
mov
adc
jne
xrelease
in
dec
lock
mov
or
test
ret
sbb
xchg
xchg
decl
cmpl
jmp
xchg
rolb
scas
lret
into
dec
movsl
adc
pusha
enter
sahf
push
sbb
mov
aas
loopne
push
lret
adcl
dec
mov
inc
mov
push
and
dec
mov
fisubs
add
in
pushf
mov
mov
xor
out
xchg
sbb
int
jl
jl
pusha
repnz
jp
call
jae
jl
dec
mov
dec
cmp
rcll
xchg
movsb
jle
and
std
aas
cld
les
sarl
and
cmpsl
in
ds
cld
call
dec
xchg
movsl
mov
out
sub
jb
pop
fisubrs
inc
jle
ret
sub
jns
push
and
gs
or
sbb
pop
xchg
xor
and
pop
cmp
ss
pop
dec
icebp
adc
dec
xchg
loope
adc
push
out
icebp
sbb
add
pop
fcoms
cmc
xor
xor
push
testb
mov
xor
nop
add
add
sub
xor
decb
pop
std
adc
or
or
and
dec
xchg
jbe
loop
or
daa
je
adc
mov
dec
jle
jle
ret
ficomps
in
dec
mov
out
jmp
mov
push
mov
push
mov
fistps
mov
jb
lret
mov
xchg
cmp
loopne
add
pop
shrl
clc
add
test
ficomps
adc
sti
dec
rorb
xchg
addb
sub
push
je
pop
jnp
cmp
popa
in
jbe
mov
jbe
aam
pop
dec
xchg
loopne
pop
ret
fnsave
out
add
sbb
divl
cmp
mov
and
pop
notb
mov
iret
call
jbe
sti
mov
cmp
jl
sub
loopne
cmp
dec
lcall
jae
xor
divps
rol
jp
xorb
ret
popf
fidivs
push
jb
sti
sub
push
lcall
or
outsb
popa
jge
hlt
dec
xor
rcll
inc
pop
adc
jg
mov
sub
mov
lahf
or
jecxz
add
inc
pop
loope
add
jb
mov
ret
mov
xchg
movsl
stos
scas
subl
sbb
ss
cli
notb
adc
cltd
inc
ret
iret
mov
sbb
jbe
popf
sahf
movsl
xor
cli
mov
inc
push
enter
push
aam
adc
andb
pop
adc
inc
dec
mov
push
or
jecxz
out
stos
push
add
jbe
stc
inc
sarl
lret
sarl
mov
movsl
notl
aaa
aaa
mov
jo
push
mov
inc
fwait
lea
and
jp
cmc
sub
adc
or
imul
pushf
sub
inc
xor
pop
cwtl
ss
pop
jb
cld
stc
shlb
xor
pop
mov
popf
or
or
pusha
xor
cmp
jg
jb
xchg
daa
mov
daa
lret
xchg
out
lea
and
dec
ljmp
jne
adc
je
ret
or
pop
push
in
cmp
dec
xchg
jbe
in
pop
dec
mov
sbb
enter
das
out
test
adc
xchg
pop
push
jbe
dec
in
pop
xor
adc
cmpsb
add
cld
pushf
lret
dec
push
dec
lea
and
loopne
imul
add
jl
adc
out
data16
cmp
jnp
lods
sbb
jg
lret
mov
adc
adc
sbb
cs
inc
push
dec
xchg
adc
jbe
js
es
xor
inc
pop
daa
push
cmp
dec
or
repz
mov
push
test
enter
ja
lea
ja
fisubs
or
and
fs
xchg
fimull
or
frstor
pop
sub
cld
xorb
mov
pop
push
dec
mov
sbb
cmp
sub
inc
pop
push
lds
std
mov
xchg
or
or
pop
movsb
lahf
push
mov
adc
sbbb
in
je
xchg
fwait
insl
in
push
dec
cmp
pop
mov
pop
das
adc
shl
xlat
adcb
mov
stos
adc
sbb
add
aad
inc
scas
mov
mov
test
icebp
notb
and
dec
pop
cli
lret
test
add
ja
xchg
sub
ds
cmp
dec
out
xchg
xlat
js
es
mov
jl
mov
stos
and
xor
ret
mov
pop
aaa
mov
push
ret
js
repnz
xor
into
in
pop
push
sub
subb
xor
or
movsl
leave
je
rdmsr
adc
in
push
pop
ss
mov
dec
sahf
jmp
xchg
fs
sub
cs
lcall
mov
mov
inc
ficomps
mov
sub
addr16
repnz
cmp
sar
stc
fidivl
out
lret
jnp
cs
jae
inc
lea
mov
cmpsl
sbb
xchg
movsl
test
adc
ror
repz
je
gs
pop
xchg
pop
jle
cli
cmpsb
xchg
pop
fisttpll
out
jbe
in
stc
ficomps
cmp
lret
pop
jge
leave
lock
inc
daa
sti
repnz
leave
adc
xor
lods
test
mov
add
or
test
pop
fstpl
push
lea
outsl
adc
addb
dec
xor
pop
jno
add
jg
jns
lahf
icebp
pop
rorb
arpl
inc
ficoml
enter
inc
test
aaa
jg
iret
ds
dec
in
dec
lret
xor
vcomisd
pop
jmp
repz
idivl
rorl
les
das
sti
xchg
ja
outsb
das
mov
fcomi
jbe
les
xchg
mov
std
xor
cwtl
aaa
dec
data16
inc
lea
xchg
test
les
jne
push
adc
dec
test
cmp
jl
sub
jl
dec
test
xor
add
inc
pop
faddp
jae
pop
pop
pop
popf
xorl
movsb
pop
push
and
adc
or
rcrl
xor
pop
movsl
loope
sbb
clc
push
jge
sbb
dec
outsl
push
and
and
push
mov
sti
lret
lods
divl
negb
es
sbb
push
fiadds
test
sahf
mov
in
sti
cld
enter
pop
int
adc
sahf
stos
dec
seto
loop
mov
dec
mov
sarl
xor
sub
pop
daa
lods
sbb
cmp
push
and
fists
into
add
fimuls
mov
outsl
pushf
jb
je
cmp
jge
pop
and
dec
lahf
popf
insl
add
mov
jb
je
sbb
push
inc
xorb
loop
sub
or
stos
xchg
adc
inc
add
push
pusha
sbb
dec
mov
push
stos
movsl
pop
or
push
ror
jp
jle
leave
dec
leave
shll
pusha
jp
bound
ljmp
iret
fldl
sti
sar
std
scas
or
add
xor
xchg
enter
push
mov
sbb
dec
sbbb
dec
adc
jp
call
adcl
mov
scas
cwtl
data16
in
roll
mov
bound
dec
cs
es
jle
or
pop
xor
and
cmp
push
inc
dec
imul
mov
lock
push
dec
push
ja
fadd
jbe
sbb
dec
mov
adc
pop
inc
push
xor
mov
sbb
addr16
inc
out
cmp
mov
int
sahf
inc
sub
xchg
faddp
and
in
push
lret
bound
sub
scas
cmp
push
mov
mov
and
idivl
mov
jl
and
xchg
xchg
or
push
data16
call
nop
icebp
xchg
outsb
lea
mov
xchg
jge
lret
shll
mov
add
sub
mov
sub
mov
std
pop
push
enter
push
inc
dec
mov
pop
mov
xchg
shlb
repz
lret
or
xor
fistpll
scas
xchg
pusha
mov
mov
dec
fcmovnu
shlb
cmp
fs
add
in
push
and
or
or
out
mov
xor
xor
adc
cmp
push
pop
jle
inc
jp
and
dec
xor
add
inc
dec
xchg
adc
mov
mov
dec
sbb
and
lret
push
add
adc
push
mov
mov
jbe
pushf
fwait
mov
dec
xor
xor
push
mov
sbb
aam
mov
pop
mov
aas
adc
xchg
stos
jns
dec
dec
shlb
inc
mov
cmp
jp
mov
push
je
pusha
mov
jns
adc
in
adc
push
shrb
int
cmc
lds
rdmsr
xor
rcl
mov
cmp
dec
idivb
push
dec
fwait
inc
xchg
inc
and
push
jl
or
test
loopne
cmp
nop
imul
or
and
jge
add
mov
clc
lods
push
je
int3
jge
lahf
inc
notl
inc
xchg
imul
test
or
outsl
jp
enter
mov
jo
xchg
enter
inc
insl
jae
loope
in
push
adc
push
inc
dec
xchg
cmp
loope
and
sbb
ds
sub
ret
push
or
rcrl
je
push
scas
and
dec
jo
lcall
or
lcall
push
adc
jle
movsb
xchg
fdivl
jle
test
adc
jno
adc
mov
xor
aas
out
ss
jle
pusha
dec
adc
inc
mov
cmc
mov
in
inc
mov
repz
xchg
jns
jle
in
lret
add
inc
mov
inc
jb
xlat
rolb
mov
cmp
lret
mov
sarb
pop
faddp
adc
cmp
bnd
loopne
inc
neg
lret
sbb
rorl
push
xchg
inc
int
push
mov
push
std
jg
sti
daa
mov
push
fdivrs
add
sbb
dec
sub
mov
cmp
incb
out
and
push
cmp
lret
cmp
push
jmp
jge
mov
inc
sahf
mov
mov
inc
and
ret
adc
in
fcmovne
mov
fmull
mov
addb
ret
sub
mov
ljmp
dec
add
lods
ret
aas
test
add
rorl
mov
mov
daa
rol
pop
pop
clc
ret
cli
ret
inc
shlb
lret
rolb
stc
mov
inc
fsts
les
mov
jbe
frstor
sbb
push
int3
sbb
mov
dec
dec
scas
test
inc
xor
push
stos
push
lret
shlb
push
fistpl
test
ja
lods
dec
ret
or
jbe
out
add
adc
loope
and
js
dec
in
insl
addb
xor
fwait
ss
inc
mov
rclb
dec
dec
in
ror
jo
cli
adc
or
inc
lods
mov
xchg
sub
out
movsb
sbb
add
das
push
or
jmp
jbe
test
ja
adc
addr16
lret
sbb
lahf
jne
popf
push
mov
adc
adc
sub
or
shrb
subb
jb
wrmsr
rcrl
sarb
push
sbb
adc
inc
pop
and
push
in
loopne
negl
add
pop
dec
adc
mov
sub
ret
push
dec
jg
outsl
mov
cmp
lret
fldl
inc
mov
inc
sub
pop
lcall
das
rclb
sbb
in
jns
jle
adc
inc
aaa
or
cmp
jecxz
cmp
xchg
prefetchnta
popf
ficoms
xchg
scas
cmp
inc
and
jo
aaa
push
pop
cld
xchg
sbb
or
stos
push
jbe
cmp
fwait
mov
test
ljmp
sahf
mov
mov
pop
scas
cmc
cwtl
loopne
mov
imul
inc
mov
outsb
and
addb
dec
cs
notb
fldl
fsubl
icebp
jnp
pop
jp
xchg
jp
orb
mov
lret
fstpl
jb
adcb
mov
mov
inc
or
lea
ret
push
sub
xchg
outsb
sub
dec
jbe
je
test
inc
outsl
add
not
cmp
out
mov
push
mov
lret
shlb
aaa
pop
pusha
mov
push
popf
les
lahf
xchg
sub
ret
lea
nop
dec
or
or
lock
add
xchg
cs
dec
lahf
push
push
mov
ret
cli
call
insl
add
inc
inc
test
fmulp
lret
add
cmpsl
ret
pop
sub
ds
mov
push
pop
cmpsb
mov
insl
or
push
jp
xchg
sarb
gs
xor
pop
dec
lcall
call
stos
push
imul
lods
js
xchg
ss
fldcw
pop
mov
push
xor
sti
xlat
push
mov
inc
mov
cli
dec
pop
shr
dec
in
inc
pop
rcll
in
inc
ljmp
xchg
cmp
inc
xchg
inc
cmpsb
or
inc
aas
hlt
stc
shrl
dec
adc
cmp
test
cwtl
into
add
or
cld
out
rclb
or
adc
adcb
sbb
aaa
push
adc
lds
mov
mov
xchg
mov
push
xor
pop
inc
sbb
stos
xlat
ja
adc
xchg
xchg
mov
mov
adc
test
adc
loopne
push
xchg
sbb
sbb
pushf
jp
push
arpl
loope
enter
cs
dec
test
add
xlat
dec
mov
xchg
pop
popa
loope
pop
mov
ret
mov
pop
pop
dec
loope
test
pop
add
jp
mov
or
mov
pop
es
stc
dec
js
push
sbb
push
mov
popf
outsl
in
push
cmc
pop
xchg
sbb
inc
sub
sbb
adc
xorl
sbb
es
mov
lret
lret
sub
push
fwait
sahf
pushf
xor
xchg
sbb
dec
repnz
clc
inc
adc
loopne
cli
inc
mov
fs
out
dec
jle
push
or
sbb
inc
cmp
xor
int3
cmp
mulb
mov
cmp
or
subb
test
lods
lods
cmp
adc
je
mov
in
xchg
pop
loope
lea
cmp
scas
mov
dec
adc
sbb
add
cmp
push
sbb
imul
lret
adc
lcall
loope
pop
jb
push
aaa
adc
fwait
jnp
dec
stc
push
fs
cmp
repz
hlt
repnz
lcall
jno
xor
or
jg
lret
test
inc
mov
ret
xchg
testl
cltd
rol
fnstsw
push
imul
adc
pop
jge
enter
dec
in
pusha
xor
cltd
jbe
rorb
int3
loopne
icebp
lret
push
mov
inc
icebp
add
pop
aad
push
pop
popa
aas
lods
xor
cwtl
imul
je
jo
fs
sub
sub
stc
mov
ret
mov
into
lahf
cld
outsl
dec
loop
test
sub
dec
fmull
loopne
shlb
and
dec
pop
sbb
aas
inc
or
xchg
inc
xor
dec
std
push
pop
jecxz
clc
ret
inc
lret
xchg
ret
cwtl
fisttpll
mov
jo
insb
ja
xchg
roll
fldl
mov
sbb
in
mov
jl
dec
sbb
leavew
mov
push
dec
insb
roll
mov
test
jp
pop
mov
mov
push
sbb
loopne
xchg
jae
pop
inc
enter
fcomps
popa
sbb
movb
push
test
jb
movsl
stos
mov
pushf
jo
shlb
and
dec
and
jle
push
sbb
inc
mov
cmc
dec
mov
push
mov
xor
in
cmpsb
stos
add
push
cs
dec
cmp
mov
pop
fisubrs
pop
xchg
lods
ss
in
outsb
cmpsb
and
jp
clc
cs
or
outsl
and
cmp
mov
mov
push
xor
sbb
sbb
pop
loopne
cld
jae
ss
setle
cs
mov
and
call
cli
xor
mov
lea
inc
js
sbb
pop
cmpsl
sub
negb
push
shll
push
jg
jne
jb
in
pusha
sub
mov
and
js,pn
push
scas
pusha
xor
loopne
mov
push
xor
mov
adc
or
or
mov
add
jp
sbb
cmp
inc
test
fwait
pop
cmp
and
push
js
or
add
xchg
js
sbb
xor
sbb
sbb
sbb
or
push
out
inc
inc
mov
shlb
push
inc
outsb
jbe
pop
jle
lods
ret
pop
pop
pop
stos
cmp
mov
adc
xor
and
sahf
loope
pop
adc
js
clc
inc
xchg
sbb
sub
mov
stos
movsb
outsb
push
outsl
cmp
push
daa
cmp
bound
push
pushf
pop
mov
sbb
mov
dec
ja
cmp
push
repnz
xor
fcoml
js
adc
bound
cs
ss
sahf
push
ss
push
xor
pop
cmp
test
pushf
ss
out
dec
mov
sbb
jo
ss
testl
inc
dec
stos
and
bnd
mov
ss
cmp
dec
ss
sub
data16
cs
inc
sarb
xor
sub
adc
inc
imul
jl
andb
idivl
sub
shlb
and
xchg
jle
dec
sti
mov
cmp
ss
fcompl
push
cmp
mov
popf
mov
jmp
shrb
fisubrs
lea
fiadds
rclb
or
xor
fbld
dec
addr16
cmp
sti
mov
and
or
jp
aam
push
enter
bound
mov
pop
push
pop
ficomps
aas
fbld
shll
clc
mov
dec
fwait
sahf
inc
loopne
bound
repz
or
xor
decl
andb
out
lret
rolb
xor
inc
loopne
call
mov
scas
push
cwtl
jns
dec
jo
xor
adc
outsl
mov
xor
leave
add
jno
mov
cmpsl
and
gs
mov
loopne
adc
fnstcw
jp
push
lret
test
pop
mov
je
inc
add
fcom
inc
add
aaa
aam
push
lods
add
ss
and
outsb
cmc
or
jg
cmp
dec
movsl
lods
and
pop
inc
mov
push
mov
fldcw
mov
fs
jmp
scas
loopne
push
and
jmp
inc
lahf
pop
cltd
fs
es
popa
jp
aad
cmp
arpl
lods
xor
cmp
test
aas
cmp
sub
lret
popf
mov
mov
dec
or
out
xor
mov
imul
fimuls
scas
jbe
sub
insl
mov
sub
mov
int3
lret
ret
psrld
mov
out
push
mov
cmp
push
lods
xchg
faddp
mov
roll
in
mov
jae
pop
sbb
add
xor
inc
dec
sub
fidivs
dec
jge
scas
pop
or
and
fildl
push
dec
outsl
mov
inc
rorb
je
aas
push
notl
sub
mov
mov
notb
cmp
test
or
push
lods
adc
je
ja
das
pop
cmp
xor
jbe
inc
push
adc
jne
sbb
xor
or
cmp
mov
les
xor
sub
mov
mov
es
add
mov
add
mov
push
clc
dec
ud2
dec
mov
cs
pop
cwtl
sarb
or
jmp
lods
or
adcb
imul
es
cs
std
sbb
adc
adc
aaa
push
dec
pop
inc
pusha
xchg
aad
cmp
cli
sbb
sbb
sbb
je,pt
ucomiss
sub
jl
adc
leave
mov
mov
pop
or
jg
insb
ss
push
adc
jp
lret
lret
cmp
test
push
or
and
xor
inc
test
xchg
jg
xchg
ret
jle
cwtl
cmpl
dec
cltd
icebp
xchg
cmp
mov
push
pop
enter
or
jp
mov
jl
cli
cmp
pop
pop
popa
lahf
cli
sbb
aaa
lret
and
xchg
test
movsl
ljmp
cmp
fwait
sar
cld
pop
jnp
iret
bound
out
pop
jne
dec
inc
sbb
in
cli
jecxz
xor
fdivl
or
push
sub
mov
or
cwtl
fildl
push
mov
sbb
sub
cwtl
sub
pop
aam
xchg
outsl
sbb
sbb
cmpl
stos
dec
insb
xor
aaa
out
mov
bound
or
push
insb
pop
sub
push
dec
inc
fcomp
mov
pop
cmp
push
mov
in
lcall
adc
dec
adc
sub
lret
enter
sbb
dec
xchg
shr
cmp
arpl
mov
cmp
adc
in
push
push
lret
xchg
jp
xchg
out
icebp
cmp
pop
add
xor
sbb
push
mov
push
add
jbe
lcall
xor
add
mov
enter
jmp
mov
mov
mov
or
dec
sub
lods
imul
in
jae
cwtl
inc
add
sub
sbb
fdivs
lods
xor
jle
pusha
sbb
push
mov
in
adc
aas
and
xlat
aaa
lret
in
xor
or
mov
call
outsl
shrl
jp
out
adc
addr16
or
imul
cmp
push
sbb
or
fadds
popa
sub
rorb
xchg
pop
sti
sbbl
cltd
gs
lea
mov
pop
test
aad
stos
jl
sub
mov
mov
sbb
push
ss
xchg
jle
xchg
mov
inc
fdivl
fwait
inc
shrb
stc
and
clc
push
jle,pn
inc
mov
xor
adc
rclb
push
movsb
sbb
jl
lret
push
les
test
add
mov
dec
pop
and
pushf
mov
add
clc
dec
imul
lret
movsl
das
push
mov
loopne
pop
xor
push
lcall
push
fidivl
pushf
test
nop
nop
mov
sbb
dec
push
outsb
jg
aad
xorl
call
mov
push
sub
movsl
cli
and
jae
lret
sub
ret
push
dec
lds
scas
ret
xchg
out
lret
hlt
and
lahf
jle
cmp
cmp
dec
ret
push
lret
dec
add
ds
cs
mov
and
xorl
cmp
jnp
push
xorl
xchg
hlt
add
xchg
push
and
push
lret
pop
push
clc
in
jge
jge
bound
icebp
lock
inc
push
mov
pop
jle
or
mov
ret
addr16
push
mov
add
shrb
negl
adc
xchg
mov
xchg
xchg
push
dec
jle
sbb
enter
push
inc
in
mov
inc
xchg
and
jge
pop
hlt
cltd
or
ret
adc
dec
jo
dec
in
jmp
int
cmp
pop
je,pt
mov
fld
adc
pop
mov
les
mov
ret
add
add
mov
add
in
shlb
pop
xor
mov
mov
push
dec
xchg
cli
gs
fdivrs
rcrb
popa
sub
pop
loopne
push
outsb
test
sbb
jecxz
xchg
aas
jle
pop
dec
mov
or
mov
push
adc
or
inc
or
sub
jecxz
or
add
xchg
out
inc
inc
dec
lds
cmp
xlat
jl
sbb
jle
data16
xchg
out
in
and
jg
popa
lea
mov
or
sbb
aam
pop
jo
hlt
clc
push
adc
pop
cmp
bound
das
enter
cmc
jb
in
push
jle
xchg
cld
in
add
lret
jno
cli
xor
push
push
lds
mov
lret
jl
fistpll
dec
mov
arpl
out
mov
mov
jp
cmpb
outsl
mov
sbb
jns
mov
xlat
inc
xchg
call
push
push
cld
xchg
ja
sti
popa
jg
in
push
push
sub
add
adc
lds
dec
mov
nop
mov
test
push
xor
cmpsb
push
in
and
inc
jno
jo
inc
fimuls
jmp
dec
rclb
fstl
lea
and
sbb
sub
xor
xchg
sbb
jg
arpl
xor
fsubs
imul
mov
outsl
sub
aas
push
pop
or
xor
pop
pushf
cltd
mov
dec
sbbl
or
push
lret
ss
mov
dec
and
stc
xchg
fmul
pop
inc
rclb
cs
sbb
ficompl
sub
andb
in
stc
out
jp
rclb
in
xchg
ret
outsl
cmp
sbb
lea
popa
sbb
add
dec
sbb
jae
mov
mov
sbb
fisubl
sarb
cmp
push
cmpb
pop
pop
xor
add
adc
xchg
cli
dec
and
dec
lahf
cli
dec
cmp
and
or
sub
mov
sub
cmc
pop
movsl
ret
jo
int
jecxz
dec
cmp
clc
cmp
xor
mov
ja
sti
jo
fucomi
into
fstl
jb
jns
test
mov
std
out
stos
inc
ljmp
xchg
lcall
fsub
and
dec
es
sbb
push
inc
data16
mov
insl
lock
adc
sbbl
enter
rcrb
adc
insb
popa
fisttps
and
jg
xor
mov
loopne
adc
and
cmp
orb
aam
or
or
push
int3
inc
in
push
ljmp
push
jp
cli
pushf
dec
mov
mov
jno
push
cmp
jp
ja
ja
pop
inc
dec
setle
cs
jno
cmc
aas
push
sub
mov
fidivrl
les
pop
mov
movsl
jbe
ret
testl
leave
add
dec
sbb
sub
int
sbb
aas
dec
test
ficomps
mov
inc
loopne
jns
cmp
mov
inc
mov
sub
call
and
int3
enter
adc
icebp
scas
cmp
hlt
push
iret
push
enter
aaa
mov
or
lret
sub
xchg
sahf
lret
dec
in
cs
sub
pop
xchg
mov
mov
into
fcmove
push
or
dec
mov
in
or
cmp
adc
int
gs
jno
inc
or
cmp
pop
movsl
pop
and
jns
sarb
sub
xchg
mov
sti
pop
sub
inc
sbb
pusha
xor
xchg
andl
and
mov
cmp
ss
push
and
pop
xchg
cmpsl
pop
sub
cmp
fidivrl
and
mul
adc
sub
sbb
js
into
pop
jno
fidivl
add
lock
mov
je
mov
and
xor
mov
repnz
ss
pop
mov
test
mov
sbbl
adc
scas
lea
mov
mov
aaa
dec
inc
sbb
lret
lea
fs
ljmp
push
inc
fs
lcall
rol
mov
les
je
gs
push
xchg
lods
ret
rcrb
push
leave
dec
pop
mov
pop
xchg
outsl
cmp
lods
inc
push
pop
mov
pop
pop
adc
call
sub
sbb
cmpsl
pop
test
sti
mov
and
stc
movsl
adc
adc
push
fisubrs
push
cli
dec
movsl
rclb
push
jecxz
repnz
dec
inc
insl
pop
and
push
cs
xor
dec
mov
in
addb
mov
mov
push
fldl
lahf
je
xor
es
aaa
js
mov
dec
add
data16
negb
jl
inc
and
push
mov
enter
push
or
dec
sub
jbe
sub
xor
and
mov
in
ret
lock
in
decw
mov
incb
push
jl
arpl
cvttps2pi
pop
cmp
fcomip
adc
cmp
cld
add
test
mov
fadds
push
mov
stc
outsb
out
and
loop
jno
incb
insb
pop
mov
lret
clc
mov
mov
pop
jle
movsl
adc
orb
inc
jb
xor
mov
mov
or
pop
cmp
fnsave
rcl
inc
cmp
fwait
in
add
loop
adc
jb
test
jle
mov
mov
aad
leave
es
or
push
inc
call
call
aaa
mov
mov
push
add
add
dec
outsb
push
jae
push
sbb
out
jo
rcrb
inc
xchg
shlb
lea
jecxz
push
fcmovbe
inc
fsubrs
push
push
insl
out
aas
inc
and
mov
push
ret
fildl
add
ret
imul
sbb
and
push
insl
sub
and
sbb
jle
cld
sub
mov
dec
fadds
inc
ret
dec
inc
mov
or
lcall
cmpsl
mov
les
addr16
leave
dec
inc
push
or
mov
fldcw
es
push
cltd
int3
or
mov
fldl
inc
xchg
push
out
aam
cwtl
bound
cmpsb
repz
jb
xchg
pop
mov
stc
push
mov
jmp
cli
loope
mov
push
addr16
loope
sub
adc
or
in
mov
pop
aad
push
jl
xor
inc
pusha
xor
in
cmpsb
sub
mov
lods
push
xchg
in
andnps
xorl
dec
jle
mov
int
cld
mov
lret
adc
fdivrs
mov
rorb
jle
adcb
push
loopne
pop
enter
ss
dec
adc
scas
xchg
pop
push
test
mov
pusha
in
aaa
inc
mov
leave
addr16
dec
insl
mov
shlb
iret
cmp
stos
xlat
dec
mov
add
cld
mov
cmc
in
and
lret
fldcw
xor
rcl
mov
mov
pushf
sub
mov
scas
xlat
cli
cmp
cmp
dec
into
jnp
xchg
cmpsl
test
iret
shlb
orb
adc
jmp
or
fwait
cs
ss
std
xchg
or
aaa
fs
cwtl
xor
fstp
cmp
inc
in
cwtl
hlt
je
adc
xchg
pop
loop
jg
lret
jbe
sti
sbb
adc
lret
inc
pop
clc
add
adc
xchg
dec
ret
mov
sarb
gs
mov
loopne
adc
lods
clc
pop
mov
jle
aas
jnp
pop
lock
pop
push
dec
inc
mov
add
inc
or
mov
arpl
fstps
add
add
arpl
adc
icebp
loope
std
mov
cs
cs
out
mov
dec
dec
shrb
pop
fwait
shr
jmp
decb
push
and
pop
xchg
mov
dec
sub
test
repnz
addr16
xor
nop
lret
dec
js
cmp
push
inc
inc
cmp
stos
mov
sub
lret
add
jecxz
xlat
xchg
pop
in
lock
int
mov
or
inc
add
push
sar
sahf
jg
rorl
lds
adc
sub
repz
les
mov
xor
lods
lret
ret
andb
dec
and
and
jbe
jb
std
push
lods
test
ja
loopne
pop
test
cmp
xchg
adc
and
xchg
outsb
dec
adc
std
in
push
fsubrl
inc
mov
adc
jo
dec
popf
mov
push
or
nop
sub
xchg
dec
dec
xchg
inc
ret
mov
js
pushf
jb
xor
mov
mov
or
xor
cmp
pop
add
add
and
cmp
push
jg
adc
mov
xchg
inc
push
cwtl
add
sbb
jle
scas
adc
call
negb
pop
push
ret
or
push
movsl
in
add
into
fcomi
addl
jb
js
test
dec
jmp
orb
les
mov
xor
adc
cmp
loopne
cld
hlt
pop
jmp
jo
mov
xchg
ds
dec
aas
adc
push
enter
push
pusha
jae
xlat
inc
fcmovbe
scas
jne
xlat
push
shlb
stc
mov
add
mov
mov
addr16
sbb
or
aam
lds
sub
inc
ljmp
loope
inc
clc
negb
and
jnp
adc
dec
mov
loopw
cmp
cmc
mov
nop
xchg
mov
cs
lret
ss
jb
sub
push
cwtl
adc
jae
sub
adc
mov
lret
dec
in
sub
in
jb
jp
fnsave
or
push
aam
xor
loopne
ja
in
push
pushf
mov
or
jp
pop
cli
jbe
mov
xor
addr16
xchg
pop
push
es
or
pop
pop
sub
cld
cmp
and
push
adc
push
aaa
test
loop
popf
xchg
int
repz
out
pop
fsubl
pop
push
fsubrl
pop
xchg
mov
xor
xchg
add
in
fdivs
dec
clc
fdivs
xor
sub
ja
int
sub
ret
cmpsb
out
dec
or
inc
cltd
mov
sub
rolb
xchg
add
aad
jp
inc
insl
jle
nop
pop
push
divl
fwait
daa
sub
sbb
bound
fiaddl
jp
je
fst
pop
mov
test
adc
sarb
jno
daa
scas
xor
push
mov
cwtl
jl
xchg
loope
pop
jecxz
jle
cld
fstpl
mov
fdivrs
scas
xor
push
xlat
outsb
fnsave
dec
lret
dec
ret
rol
sub
insb
lcall
fidivs
enter
pop
xchg
loopne
or
lahf
xchg
cld
lock
outsl
mov
aaa
rcll
mov
pop
fimuls
pusha
xor
mov
imul
cs
ss
cmp
test
inc
jg
dec
xor
movsb
call
jns
add
add
sbb
xor
ss
fidivrl
sbb
lcall
pop
sub
push
icebp
rolb
data16
mov
jp
stos
fs
push
or
ret
mov
mov
je
les
ss
les
jle
mov
inc
inc
sbb
ret
sti
xor
pop
mov
push
jnp
adc
xor
add
js
jle
sbb
cmp
outsb
inc
mov
xchg
dec
dec
mov
mov
pop
inc
mov
mov
inc
jle
add
into
jns
test
cmp
hlt
jo
je
fsubp
ds
call
fidivl
push
sbbb
xchg
inc
jnp
idiv
pop
jle
sbb
xchg
inc
ret
mov
lods
ret
xlat
mov
mov
dec
test
inc
out
mov
cmp
inc
or
inc
push
ja
in
inc
push
and
sub
mov
jmp
mov
sbb
or
adc
xchg
dec
push
xor
je
push
or
in
jle
cmp
rclb
fcmove
sbb
fs
mov
mov
test
xorl
aaa
and
pop
cmp
int3
and
or
loopne
in
fisubrs
testl
sub
dec
lret
ja
int3
sub
push
adc
fdivrs
subb
jle
inc
pusha
std
jge
fisubrl
das
jle
jbe
icebp
mov
adc
cmp
mov
dec
addl
sbb
aaa
sub
cmp
lret
daa
jp
sub
xor
pop
outsl
push
ja
shrb
push
cmp
lret
out
pusha
push
xchg
jbe
hlt
por
ja
pop
fisubrl
mov
push
xchg
push
int
les
aam
insl
fnstsw
in
xor
fidivrl
sbb
push
scas
std
pop
lret
dec
ja
sub
xlat
jnp
lret
movsl
ljmp
cld
jecxz
ret
ja
jecxz
jg
and
incb
enter
inc
xchg
iret
insb
scas
lock
xor
push
sub
sbb
dec
add
pop
sbb
xchg
cmp
jge
stc
dec
jp
push
inc
mov
push
jp
adc
jmp
dec
pop
int3
jmp
xlat
pushf
lret
xor
fs
mov
sub
je
or
fistl
adcb
call
popf
das
add
aaa
fstps
xchg
ja
clc
or
cli
rcrb
mov
movsl
inc
ljmp
jle,pn
push
xchg
or
data16
sub
and
and
int
popf
fdivl
clc
cmp
gs
jl
mov
adc
mov
jle
cmpsl
arpl
pop
or
and
hlt
and
xchg
inc
test
lret
push
data16
les
in
mov
mov
dec
mov
loopne
adc
andl
mov
je
push
or
sbb
add
mov
jmp
out
cli
lods
fmuls
lods
or
fnsave
dec
push
hlt
cmp
mov
xchg
add
outsb
loop
sbb
aas
or
cltd
sbbb
mov
ja
shrb
inc
pop
xor
sar
pop
cld
test
lock
push
gs
test
es
rcrb
mov
mov
mov
daa
dec
inc
sbb
or
xchg
pusha
movsl
adc
scas
xchg
into
add
inc
sub
jl
cld
lret
jo
mov
js
pop
push
ret
hlt
out
arpl
dec
pop
popf
cmp
lods
call
or
lock
mov
cltd
add
cmp
xchg
inc
test
push
jb
and
shll
arpl
and
dec
fnstsw
jp
mov
hlt
dec
lods
test
sti
dec
test
pop
cmp
sub
mov
xchg
and
xor
dec
mov
lret
pop
jb
sbb
xchg
dec
cmp
xor
push
adc
int3
inc
pop
xor
dec
gs
ret
testb
aaa
sbb
out
lret
mov
mov
jl,pn
ret
jle
push
pop
sarb
int3
loop
mov
das
or
movsl
mov
out
fidivrl
push
shlb
mov
lret
enter
mov
inc
sti
cmp
mov
pop
sahf
out
orb
sub
lods
push
xchg
cmp
push
mov
cmc
addr16
out
dec
mov
or
pop
in
adc
in
dec
add
lret
fwait
mov
push
mov
sbb
rol
insl
in
out
push
jno
push
mov
and
aas
jb
jmp
lret
or
pop
ja
cwtl
jb
dec
sahf
sub
jmp
in
lods
ret
dec
in
jne
lret
imul
leave
mov
pop
jb
iret
shr
sbbb
push
jl
sbbl
inc
ret
movaps
add
push
mov
xor
scas
cmpsl
cmp
cmp
push
jge
xchg
ja
sbb
mov
stos
flds
sub
es
fidivrl
cmpb
cmp
pushf
xchg
lock
adc
sub
or
xor
push
or
xchg
int
adc
bound
pusha
inc
filds
inc
out
repz
stos
or
mull
imul
cmpsl
mov
lods
js
sarl
xor
negb
jp
scas
movsl
inc
push
dec
hlt
push
pop
push
and
stos
mov
dec
cmp
fwait
xchg
xchg
jo
cmp
xchg
in
call
ficoms
shlb
sub
dec
pop
enter
aaa
lret
jo
addl
mov
das
push
inc
dec
sti
mov
pusha
sub
jp
jle
ret
and
pop
cmp
mov
sub
and
mov
es
add
shlb
adc
fs
mov
jo
mov
scas
in
sbbb
dec
je
sub
xor
lds
insl
sbb
arpl
shlb
pop
sub
cmp
int3
sub
mov
xor
pop
sbb
imul
push
mov
popf
and
adc
mov
dec
cmp
pop
sbb
sbb
pop
aam
cmp
mov
cmc
fwait
aam
mov
test
lret
cli
add
pop
mov
lods
mov
cmpsl
inc
jne
dec
pop
ret
aas
aas
adcb
outsb
outsl
imul
out
or
in
inc
or
inc
popa
mov
mov
add
pop
mov
scas
xor
movsl
fdivs
jecxz
sub
jecxz
inc
or
lahf
fucomip
adc
test
inc
xchg
jl
sub
out
jae
mov
clc
jge
mov
pop
cmp
inc
push
imul
in
nop
out
cmpsb
inc
setp
xor
test
mov
fisttpl
push
pop
and
cs
in
fucom
jo
pop
sarw
cld
adc
adc
adc
jp
mov
inc
arpl
loope
fldl
and
orl
daa
sti
in
push
dec
lock
push
pop
mov
dec
psubusb
dec
std
fucomi
jno
adc
lahf
mov
xchg
mov
pop
aad
lret
and
dec
mov
je
loop
sti
es
add
fyl2xp1
cmp
aam
dec
xor
aas
add
push
pusha
xchg
inc
push
adc
or
sub
imul
sbb
fisubrs
test
or
in
ret
adc
sub
sahf
mov
cwtl
pop
sbb
loop
pop
popa
mov
dec
test
cmp
sarl
or
test
xor
inc
pop
test
fwait
aam
insb
lret
repnz
stos
lds
shlb
xchg
aas
jo
leave
sti
aam
pop
xor
cmp
aaa
in
sahf
dec
sub
inc
ret
es
or
jecxz
je
sub
add
inc
pusha
adc
out
and
fisubs
jmp
call
fcomp
sarb
cli
mov
ss
jnp
je
dec
pop
cmp
adc
dec
xchg
fistpll
fwait
out
rcll
adc
jle
sub
pop
fdivrl
push
inc
lea
or
xor
cld
jb
aad
nop
rorl
sub
jg
stc
aam
daa
mov
dec
cwtl
cmp
jl
daa
sbb
push
dec
xchg
push
movsl
in
les
mov
hlt
mov
push
push
pop
sub
ja
cmp
jnp,pt
lods
or
mov
lahf
dec
xchg
ret
clc
das
lds
insb
arpl
mov
mov
mov
stc
xor
scas
push
mov
sbb
or
jg
rcl
in
add
aas
xor
mov
push
pop
das
xor
leave
sub
xor
shll
dec
daa
lret
jb
js
aad
jg
mov
sbb
out
jae
inc
xchg
imul
push
mov
iret
arpl
push
jae
clc
adc
aas
or
addr16
inc
movsl
xchg
insb
fsubs
addb
push
xor
subb
cmp
mov
ret
push
dec
aaa
divl
adc
insb
xchg
fyl2x
jp
push
xchg
lret
aam
pop
xchg
outsb
adc
adc
ss
cmpsl
dec
xor
ja
jg
xchg
xor
test
add
push
cwtl
lret
pop
and
add
fisttpll
xchg
repz
je
rcr
andl
sbb
xor
jmp
sbb
xor
or
or
pusha
pusha
jne
cmpsl
cwtl
jmp
sub
pusha
push
leave
xor
pop
adc
sub
ucomiss
inc
push
mov
dec
push
jg
imul
ja
rcl
lods
sbb
sbb
sti
aad
sbb
inc
faddl
pop
pop
sbb
shrb
adc
pop
push
or
inc
and
mov
lret
roll
push
push
pop
cmp
aas
dec
mov
test
fbld
into
dec
pop
xchg
inc
xchg
inc
dec
or
add
and
and
push
aaa
dec
inc
imul
jae
mov
je
fdivrl
leave
ja
in
mov
ljmp
inc
test
imul
jmp
sub
iret
mov
jo
jbe
or
sahf
push
roll
push
shl
inc
cmc
icebp
pop
stos
and
icebp
cli
scas
mov
push
mov
lds
push
leave
cmp
aas
lret
int3
xchg
xchg
sahf
add
sbb
mov
pop
sar
inc
out
aas
inc
xchg
jnp
mov
xor
out
mov
xor
add
fbld
or
mov
xchg
dec
jmp
dec
js
loopne
adc
xchg
aaa
pop
mov
or
rcrb
push
jbe
lods
je
jl
sbb
lcall
test
sub
lods
xchg
pop
adc
fldcw
stos
scas
mov
or
ficoml
imul
popa
sbb
cs
dec
fcmovnb
popf
mov
sbb
imul
adc
js
sbb
fwait
adc
lcall
popa
lock
call
test
ret
sub
pop
adc
inc
and
cmp
xchg
data16
jle
out
mov
inc
int
sub
pop
adc
insl
pop
jmp
ror
daa
jg
rcll
mov
xchg
bound
lret
mov
xchg
adc
or
and
adc
mov
xlat
jbe
jmp
dec
lea
enter
test
shrl
out
pushf
xor
gs
cli
sub
js
push
mov
jns
and
aas
test
mov
xor
cmpsb
cmpsl
fnstenv
enter
clc
sub
test
leave
lea
or
loop
arpl
mov
cmp
inc
add
cld
popa
mov
pop
push
push
jmp
lods
add
cli
or
jbe
fwait
aad
mov
sbb
or
cmc
mov
aad
pop
aaa
lret
push
iret
cld
testl
inc
mov
ret
cs
cmp
add
and
fidivrs
aaa
lock
pop
inc
pop
push
fwait
push
loop
mov
pop
lock
xchg
push
mov
movsl
cmp
sahf
out
outsb
call
xchg
mov
ss
shr
fidivrs
test
jae
xchg
shl
pop
addr16
xchg
mov
push
sub
mov
cli
sub
pop
cmp
xlat
dec
xchg
mov
cmp
cwtl
mov
ja
xchg
push
enter
push
cmp
popf
in
sub
out
mov
inc
mov
push
in
into
mov
sub
aaa
je
pop
mov
inc
decb
fs
addr16
push
push
push
in
adc
mov
pop
rcll
imul
shr
mov
pop
cld
iret
addl
dec
mov
inc
repnz
cmc
dec
lcall
cmp
mov
cmpb
xchg
inc
fadd
pop
sar
push
mov
and
out
jne
icebp
push
mov
outsb
or
inc
lea
xor
je
imul
xchg
add
push
loop
cli
outsb
mov
or
push
mov
ds
pop
inc
cmp
xchg
xchg
push
pusha
dec
insl
out
ret
mov
lcall
mov
sbb
fisttpll
stos
fwait
and
inc
push
jns
jmp
add
arpl
dec
fs
incb
inc
pusha
mov
inc
and
mov
jmp
mov
xor
jae
jno
and
loop
add
es
inc
lea
pop
aas
or
ret
vpmacsdqh
mov
adc
hlt
fcoml
and
push
dec
sub
bound
lods
ret
sub
lock
test
xor
dec
js
fmul
jle
fwait
ljmp
fistpll
mov
fistl
rcrl
pop
loope
mov
mov
pop
je
les
sub
mov
fsubrs
or
mov
pop
add
ja
decb
lret
inc
stos
fisubs
and
sbb
in
jg
mov
fmuls
lea
ss
aam
mov
inc
repnz
dec
jg
out
ljmp
cwtl
ds
pusha
dec
outsl
icebp
or
push
ljmp
lret
mov
insb
leave
icebp
ret
adc
push
push
sbb
inc
iret
mov
sbb
mov
mov
jno
pop
adc
stc
mov
jg
data16
push
fbstp
sbb
cmp
jle
dec
jle
adc
jb
dec
movsl
jge
sbb
xchg
insb
cmp
jg
sahf
xchg
dec
aam
cmp
sbbl
sub
jg
sub
sahf
sar
cmpsl
or
fdivrl
ret
or
mov
mov
lock
int3
daa
test
jae
lods
xor
es
sub
adc
inc
mov
xor
jmp
cli
cwtl
sbb
imulb
inc
adc
jns
xorl
sub
movsb
mov
cmp
ret
and
fcomps
neg
cld
loope
inc
xchg
dec
stos
stc
sbb
ljmp
sub
popl
jae
lret
mov
loopne
in
pop
mov
out
aas
test
sahf
adc
out
rorl
cmpsl
movsl
fwait
das
dec
push
jg
lret
stos
mov
jge
adc
and
mov
push
jnp
stos
jmp
xchg
mov
clc
ret
iret
sbb
cmpsb
mov
cli
push
minps
xor
mov
fisubrl
sub
lret
cld
or
lret
test
jno
cmpsb
in
mov
xchg
mov
sub
mov
clc
flds
xchg
mov
inc
xchg
pop
lret
xchg
idivb
fildll
rol
popf
aas
rolb
cmp
push
enter
fiadds
bound
lret
xor
pop
xchg
dec
inc
loopnew
pop
ss
lods
or
fcmovbe
jecxz
xlat
pop
mov
sbb
sbb
push
mov
mov
add
subb
sbb
ds
xchg
dec
ja
push
and
fbstp
or
xor
inc
push
cli
ret
cmp
insl
fimull
pop
cmpsl
push
lret
jecxz
mov
xor
sahf
cli
push
cwtl
xchg
aas
sbb
xchg
outsl
insl
push
adc
insl
aad
outsl
lret
inc
test
mov
pusha
inc
ds
push
or
and
inc
xchg
shll
stos
sbb
stos
jbe
push
js
imul
sub
push
sbb
sub
jo
mov
push
fisttps
xlat
xchg
test
mov
enter
jne
xor
leave
dec
nop
add
add
mov
jbe
lret
les
shlb
inc
push
inc
call
mov
xchg
xchg
les
cmp
icebp
mov
ljmp
fsubrs
notb
xor
call
imull
scas
xor
push
cmpsb
lret
sbb
pop
jbe
cmc
or
movsl
out
cmp
xchg
repz
mov
adc
mov
inc
lock
in
dec
jmp
push
or
jge
jbe
jbe
imul
adc
adc
jae
in
inc
lods
out
arpl
or
lea
lea
push
or
sub
mov
in
ja
add
arpl
adc
adc
loopne
aaa
adc
mov
pop
movsl
ret
inc
push
sub
dec
mov
xor
pop
lahf
jbe
push
dec
mov
jmp
and
jno
cli
es
sub
mov
cs
sub
les
push
xchg
aaa
pop
lret
push
lret
jne
inc
mov
and
cmc
xchg
cwtl
push
ficompl
hlt
mov
pmulhuw
test
call
ds
clc
cli
sub
xchg
sub
lret
iret
les
sub
stos
sub
pop
push
cmpsb
lea
sub
scas
cmp
js
hlt
and
push
mov
rorb
popf
cmp
out
popf
fmuls
add
out
aas
dec
in
inc
ja
cwtl
out
add
cmp
push
xchg
pop
pop
inc
mov
add
push
imul
or
mov
loopne
vmulpd
in
shll
lea
lea
roll
inc
add
jbe
jle,pt
jae
aas
filds
xchg
je
mov
pop
outsb
repz
icebp
xor
mov
sub
iret
xchg
lods
loopne
dec
inc
enter
ret
push
jo
jle
shll
dec
xchg
inc
es
repnz
lret
push
js
adc
and
fiaddl
pop
jo
fidivs
dec
mov
negl
adc
decl
hlt
out
or
dec
mov
pop
cmova
gs
xchg
test
and
ss
loopne
decb
repz
adc
push
in
fwait
ja
lods
mov
mov
std
cs
push
cmp
outsb
inc
clc
push
push
mov
fcompl
sti
cmpsb
mov
hlt
cli
add
dec
pop
cmpsb
fdivl
xor
xor
aad
xor
lret
jecxz
add
mov
or
push
imul
inc
sbb
push
pop
jo
mov
xchg
xor
jne
daa
push
sarb
stc
inc
mov
movsl
cmp
mov
xchg
rorl
add
aas
ret
mov
xchg
fmulp
push
scas
icebp
sub
in
loopne
imul
pop
sub
imul
or
loop
inc
aaa
pop
push
pop
dec
inc
jno
leave
mov
pushf
cmp
jp
add
inc
adc
mov
cli
sahf
shl
lret
mov
lods
pop
inc
or
je
orb
fadds
arpl
sbb
nop
pop
sahf
xchg
stos
dec
cli
ret
cmp
call
inc
dec
sbb
mov
xchg
outsl
hlt
loopne
cmc
fwait
pusha
push
push
push
push
add
aaa
xchg
imul
insl
stos
push
pop
and
daa
mov
arpl
rcrb
sti
es
inc
mov
push
psrad
jno
mov
xchg
and
bound
inc
jbe
cmp
sub
out
sub
inc
sahf
dec
adc
push
or
lahf
lock
xor
jle
dec
imul
xchg
xor
fmul
loopne
and
jb
sbb
sub
cmp
lret
inc
cmp
ffreep
or
push
pop
lret
pop
and
adc
push
xor
shlb
fs
inc
or
xchg
jmp
dec
gs
lds
icebp
inc
dec
and
sub
test
jle
ja
cmp
inc
jbe
sub
js
mov
inc
mov
and
orb
rcl
loop
fwait
testb
sub
inc
push
xor
rcl
das
mov
dec
inc
push
xchg
mov
out
push
push
jle
mov
ret
xchg
or
aad
mov
ljmp
xchg
fwait
push
mov
mov
sbb
inc
mov
push
jns
je
jbe
in
sbb
rcl
push
dec
outsl
cmpsb
pop
ss
xor
std
loopne
and
popf
not
jp
or
imul
adc
bound
cmp
in
lock
mov
xlat
popf
pop
jo
cltd
lahf
add
pusha
sub
push
dec
or
add
push
cs
lret
int
in
aas
pop
xchg
sbb
hlt
movsl
pop
imul
dec
pop
bound
sbb
xchg
and
or
mov
aas
dec
pop
mov
xor
and
push
stc
mov
jl
mov
ret
sub
and
sub
cs
outsl
dec
outsb
popf
or
sub
in
sti
pop
enter
mov
lcall
jo
ret
popf
xchg
mov
stos
push
push
lcall
fimuls
sub
inc
inc
inc
adc
filds
jle
jmp
push
xchg
mov
cmp
xchg
and
out
xlat
sbb
shrb
add
loopne
test
movsb
fnstsw
cmp
nop
fstps
xchg
out
in
fidivl
or
pop
ja
inc
jl
cmp
cmp
loope
dec
arpl
push
sbb
aam
and
cmp
int3
mov
xor
loopne
and
pop
sbbb
aam
xor
or
push
int
repnz
pop
sarb
push
adc
int
roll
es
mov
inc
push
or
mov
call
pop
rcll
and
jo
jle
dec
in
aam
int
movsb
fldl
les
call
or
aam
fisttps
adc
sbb
lcall
hlt
xchg
jmp
xor
fwait
loopne
clc
xor
push
add
std
inc
sub
ret
sbbl
pop
mov
sarl
or
inc
xchg
and
jp
push
sbb
movsb
js
push
lahf
adc
xorb
movsl
mov
aad
pop
mov
nop
insb
cwtl
xlat
nop
insb
pusha
fidivrs
fadds
jmp
push
inc
test
pop
or
mov
cmp
adc
aam
test
rol
jp
je
ficoms
mov
push
pop
cmpsb
push
or
fs
fistpl
adc
dec
fs
stos
jl
int
xlat
inc
sar
leave
mov
pop
inc
rol
rol
sti
add
xchg
sti
mov
push
mov
in
cmpsl
lea
mov
inc
dec
mov
bound
ljmp
jle
je
inc
inc
push
inc
inc
notb
and
cmp
cs
lods
adc
pop
bound
pop
mov
lahf
mov
push
iret
xor
inc
inc
mov
rorb
cwtl
push
or
jecxz
xchg
incl
movsl
sub
inc
or
add
fwait
int
sub
fwait
pop
xor
push
cs
pop
adc
xor
sub
aas
inc
dec
lret
dec
fdiv
xchg
pop
ljmp
dec
sub
or
inc
jae
and
fs
sub
push
mov
push
enter
xchg
push
sub
push
rclb
testl
aaa
pavgb
vmovsd
adc
inc
stos
jle
scas
pop
pusha
mov
xchg
dec
ficoms
add
jns
xchg
bnd
cmpsb
xchg
loopne
mov
negb
out
aas
xor
xor
xchg
adc
in
aaa
dec
lods
jle
sahf
arpl
push
shrl
movsl
push
inc
mov
or
sub
data16
std
js
je
mov
sbb
cmpsb
mov
divl
out
ficompl
dec
not
test
mov
imul
or
lahf
divl
enter
ja
push
dec
push
sub
rcll
sbb
adc
int
pop
das
sub
shlb
fld
xchg
scas
popl
dec
sahf
push
push
cmp
mov
add
jmp
mov
mov
mov
mov
sbb
xchg
cwtl
enter
or
test
pop
sbb
es
sbb
mov
shrl
mov
and
sbb
in
dec
iret
stc
adcb
mov
lods
imul
lcall
movsl
fdivrl
inc
add
jl
sub
scas
dec
aad
jge
fwait
xlat
adc
push
js
ja
ja
mov
dec
call
into
mov
dec
pop
out
mov
add
popa
xor
xchg
jb
clc
mov
fptan
jbe
cmp
lea
mov
cmp
xchg
je
pop
mov
dec
fstpt
inc
repnz
mov
mov
hlt
cld
xchg
aam
loope
insb
ret
jae
or
mov
add
inc
sbb
ret
pop
adc
dec
lret
insl
mov
inc
adc
fstpl
pop
aas
push
push
les
and
xchg
jmp
popa
pop
jg
dec
pop
add
and
sbb
pop
ret
mov
rorl
aas
rcll
movsb
addr16
pop
dec
test
or
add
xchg
mov
sti
iret
mov
add
adc
mov
pop
lea
push
cmp
pop
sub
es
push
and
sbb
out
std
std
outsb
xor
xor
cmp
cmpsb
repz
or
jo
hlt
xchg
lret
and
subl
dec
test
test
jmp
test
loope
sti
into
lds
lcall
lock
jae
mov
push
mull
into
xlat
adc
jnp
stos
pop
adc
sub
dec
and
movsl
jmp
in
inc
pusha
cld
enter
cmp
mov
push
dec
loopne
dec
rorb
dec
outsl
xchg
int3
aad
cmp
xlat
mov
xchg
int
adc
inc
or
gs
jg
jnp
xchg
dec
adc
cmpsl
sbb
pop
adc
lods
mov
push
test
roll
dec
sbb
int3
int3
ret
std
jp
pop
je
or
aas
xor
push
pop
xor
jle
jle
jl
xchg
sub
or
jge
fs
ja
scas
sbb
pop
dec
mov
mov
test
add
dec
sbb
gs
in
xor
jp
ja
cli
xor
inc
pop
stc
add
dec
repnz
fdivr
pusha
cmp
pop
and
das
and
pop
mov
mov
push
aam
enter
into
mov
test
in
test
jns
jp
jbe
mov
add
ret
ja
pusha
cmp
jg
mov
mov
movsb
fsubs
fwait
xchg
xor
push
cmp
lods
clc
ja
cwtl
mov
movsb
mov
pop
dec
shll
add
lret
loop
mov
mov
sti
jp
or
sub
pop
aad
sbb
ror
js
std
xor
les
sbb
add
pushf
jle
cmpsb
fwait
imul
nop
aas
push
mov
enter
daa
inc
mov
in
cmovs
in
je
call
or
das
fnsave
inc
hlt
ja
adc
nop
rol
lahf
mov
dec
mov
cmp
pop
inc
lds
sbb
xchg
aaa
add
stc
pop
xchg
sbb
popa
sub
mov
cmp
notb
lea
in
pop
inc
mov
xchg
in
dec
and
sbb
fs
mov
movsb
lds
add
xlat
int
sbb
ds
inc
jnp
xchg
mov
inc
bound
mov
add
enter
sbb
mov
inc
scas
insb
jnp
add
or
and
insb
adc
pop
dec
dec
imulb
int
mov
dec
mov
call
fnstenv
mov
or
cmp
pop
movsl
xchg
mov
or
rclb
cs
sub
in
pushf
lea
jns
fs
sub
fldl
cwtl
lret
add
push
fs
jns
test
or
fwait
sbb
clc
or
jns
test
jg
in
les
or
jecxz
xchg
add
adc
inc
add
jno
mov
leave
add
jle
pop
call
addr16
cmc
mov
pop
fists
jo
cmp
cmp
andl
xchg
jae
jb
adc
lods
and
jmp
rorl
inc
cmp
xorb
cmp
and
add
pop
imul
pop
sbb
inc
jo
adc
scas
iret
jbe
shlb
push
cmp
jb
jge
in
dec
xor
pop
movsb
icebp
push
je
dec
mov
push
aaa
pop
shlb
mov
mov
push
dec
dec
ds
pusha
aas
inc
je
imul
rcl
inc
push
fsubrp
mov
sub
mov
lret
push
inc
pop
test
aas
push
lret
sbb
and
cwtl
mov
jle
vpcmpeqb
mov
mov
pop
or
aaa
pop
xchg
repnz
je
ret
xchg
and
in
and
inc
aas
jle
out
or
push
dec
pop
push
je
push
pop
push
enter
and
lret
and
fdivs
loope
push
std
cmp
dec
fwait
push
dec
mov
lcall
mov
lods
adc
mov
dec
push
mov
scas
cld
and
mov
hlt
cmpl
adc
fwait
mov
jns
stos
cmc
pop
mov
std
mul
fisubl
je
bts
xor
orl
jno
cmp
push
mov
pop
push
inc
cli
dec
incb
mov
lahf
dec
cmp
lret
lods
dec
loopne
sbb
clc
xchg
loope
xchg
fs
or
cli
mov
shll
movsb
in
rol
cs
xchg
and
cmpsb
inc
dec
push
lahf
stos
pusha
adc
mov
lods
icebp
mov
pop
jb
or
xor
or
and
pop
mov
daa
lret
mov
add
sahf
sti
stos
xchg
stos
dec
fldenv
jge
inc
add
push
lds
lods
subl
dec
add
sub
or
les
jp
pushf
in
mov
or
pop
lahf
jecxz
mov
fists
je
roll
pop
sar
in
ljmp
inc
sbbl
bound
mov
inc
adc
mov
rorl
cmc
inc
xor
ret
inc
in
inc
loop
push
rcrl
cmpl
cli
push
or
or
dec
insb
jbe
pop
sti
jecxz
cmp
lret
add
and
imul
xchg
jno
addr16
aas
cld
out
in
lahf
lea
loopne
cmp
push
push
jo
dec
add
mov
das
cmpxchg
int
hlt
inc
stc
adc
sarb
icebp
sub
jle
in
leave
cli
dec
dec
fisubrl
nop
mov
sbb
pop
int
inc
rcl
mov
shll
xor
push
shlb
mov
ret
adc
les
mov
lods
imul
xor
fisttpl
mov
adc
dec
int3
mov
push
lods
lahf
xlat
xor
pop
jnp
mov
inc
ljmp
jg
mov
push
imul
mov
pop
mov
add
js
sub
lcall
mov
inc
jb
enter
adc
cmc
pop
mov
adc
cmp
lods
addb
adc
adc
and
ret
push
mov
clc
cwtl
pop
mov
inc
out
clc
push
std
cltd
push
push
outsb
dec
xorb
pop
aad
jbe
addr16
jns
jns
push
cld
cmp
cmp
pop
dec
cmp
push
cmp
in
loopne
mov
fsts
sbb
shll
popa
lret
push
xchg
xchg
lea
sub
int
dec
mov
loope
jg
add
ret
pop
jle
inc
mov
adc
jb
inc
mov
inc
cmp
xor
sub
divl
pop
inc
mov
mov
sarl
sti
fildl
sub
aas
mov
pop
enter
int
je
push
flds
xor
pop
imul
out
dec
and
out
cmp
test
push
pop
into
es
mov
mov
or
fsubrs
jo
jmp
ret
aas
aam
xchg
loope
sbb
and
arpl
push
ljmp
lea
push
es
shl
xchg
mov
and
mov
mov
mov
xor
or
xor
cmp
aad
nop
sub
cmpsb
push
lret
ss
mov
lret
sbb
or
les
adc
nop
fwait
in
ljmp
xchg
cli
mov
push
out
aas
push
lock
jo
xchg
ds
incb
int
xchg
aaa
fcomi
cwtl
pop
andb
add
and
outsb
xchg
lret
inc
cmp
cwtl
pop
loope
addr16
icebp
imul
divl
xor
lcall
push
mov
add
sub
fsubs
fcmovnbe
int3
rcrl
fiaddl
dec
cmp
push
sbb
pusha
aaa
inc
inc
pop
in
std
andb
and
roll
ficoms
stos
decb
sub
or
cwtl
addr16
mov
add
sahf
les
add
imul
add
dec
pop
inc
lods
sbb
cmpsb
sbb
das
jl
testb
xchg
call
jmp
sbb
jl
push
mov
inc
test
lret
jecxz
lods
push
push
xchg
or
mov
jb
cmpsb
or
mov
pop
pop
xchg
or
sub
lret
repnz
adc
push
lret
and
cmp
rcl
mov
addr16
daa
nop
roll
mov
dec
adc
xor
jl
movsl
pop
out
or
and
test
mov
jp
outsl
adc
repz
mov
push
and
out
xchg
xor
jbe
ret
sbb
pop
sub
inc
jo
loope
push
aad
lret
mov
roll
pop
lret
in
fadds
insl
out
rcrb
inc
pop
jnp
adc
outsl
int
imul
pushf
popa
rol
insl
lods
sbb
nop
dec
dec
or
add
das
icebp
sbb
rorl
push
jmp
or
and
push
dec
and
dec
and
ret
aas
cmpb
sarl
or
mul
sbb
add
lret
inc
jecxz
xchg
test
or
push
push
ret
mov
mov
push
call
xchg
fwait
in
adcb
nop
lock
hlt
add
iret
movsb
mov
dec
pop
jge
cs
mov
mov
aam
mov
adc
outsb
mov
push
inc
lret
aam
adc
sahf
cs
xlat
dec
icebp
pop
inc
into
stos
add
cld
arpl
hlt
lret
orl
or
xchg
or
cs
stos
fwait
adc
roll
sbb
pop
fisubl
mov
sahf
jb
or
adc
test
xchg
cmp
adc
mov
or
adc
lahf
ss
pop
cli
push
adc
cmp
mov
movsl
or
cltd
inc
jmp
pop
mov
loop
mov
xchg
jg
ret
xor
test
sub
and
adc
lods
inc
sbb
sbb
xor
adc
jmp
cmpsl
cs
jle
sbb
bound
fistpl
aaa
lcall
dec
pop
rorb
push
test
outsb
xchg
adc
movaps
jg
mov
sbb
aaa
mov
pop
jp
addb
jle
aas
call
cltd
test
pop
ja
hlt
pop
pop
ficomps
adc
xchg
ret
imul
fwait
add
cmovle
lea
xor
push
clc
xor
xchg
cmp
xchg
sahf
xchg
pop
push
hlt
pop
stos
cwtl
es
xor
or
addr16
icebp
adc
sub
jo
int3
or
add
pop
pop
js
mov
xchg
add
xor
arpl
push
push
mov
sub
pop
jnp
inc
or
inc
xchg
jb
sbb
dec
xor
push
sub
inc
ret
or
notrack
mov
scas
push
js
inc
push
cs
inc
jbe
jle
xchg
pop
dec
mov
and
outsl
jb
add
cmp
lret
enter
or
push
xchg
and
and
enter
jns
rol
pop
mov
cwtl
fadds
mov
inc
out
cmp
cmp
and
xor
loop
pop
mov
inc
icebp
push
sti
sub
cmp
out
cmpsl
add
clc
or
ljmp
lret
ja
xchg
inc
push
addr16
es
push
or
jbe
std
xlat
popa
lock
cli
mov
push
dec
xchg
pop
add
push
enter
dec
ror
insl
and
mov
les
or
mov
adc
test
sub
sub
adc
ja
decb
inc
mov
pop
pop
pop
je
cwtl
mov
nop
sub
incb
or
xor
push
out
pop
add
mov
jns
add
push
insb
shrb
push
data16
sub
push
inc
in
push
adc
lret
add
dec
cmp
dec
jle
rol
jns
and
push
mov
inc
sarb
dec
cmp
ljmp
fdivl
std
pusha
adc
cld
scas
ljmp
cmpb
xchg
sub
pop
aas
pop
or
adc
or
xchg
shr
ror
pop
inc
lods
in
imull
lods
neg
or
inc
add
lret
dec
scas
push
add
pop
adc
pop
push
adc
clc
jg
xlat
sbbb
push
mov
data16
es
push
arpl
loopne
aam
inc
ljmp
int
xchg
pusha
cld
push
out
movsl
fisubrs
xorb
ret
imul
pop
js
sbbb
inc
cmp
mov
dec
out
scas
add
gs
aas
rorl
les
sub
mov
scas
mov
fsubs
into
in
dec
pop
imul
ds
mov
xor
or
rcl
rcrb
adc
mov
mov
sti
sbb
decb
aaa
imul
aaa
decl
shlb
push
aaa
hlt
fsub
mov
fsts
cld
push
jne
lret
sub
adc
pop
stc
sbb
arpl
imul
mov
push
mov
sti
xorl
ret
add
pop
cli
mov
mov
sbb
std
shll
cli
push
int
xor
pop
dec
gs
popa
inc
in
pop
mov
cli
out
into
enter
push
in
pop
mov
pop
aaa
in
xor
jmp
shll
cmc
inc
dec
and
push
lret
repz
lea
push
or
mov
ret
push
dec
enter
push
daa
cs
push
pop
sti
and
dec
push
insl
int3
xchg
arpl
xor
stos
xchg
test
int
cmp
and
das
pop
loopne
cli
jno
or
inc
mov
pop
test
sbb
xor
aas
cld
popa
add
cmp
dec
sub
dec
test
decl
popf
movsl
insb
lret
cli
sub
push
push
pop
inc
sbb
lret
out
es
inc
pop
sar
fistps
adc
pop
flds
xor
lret
add
fwait
call
rolb
lea
cld
xor
rclb
mov
lea
dec
in
or
xor
loopne
int
aas
jg
mov
or
outsb
xor
cmp
push
test
inc
adc
bound
jl
hlt
mov
jmp
sub
gs
xchg
mov
rolb
fcomps
gs
add
jbe
pop
shlb
inc
addl
lret
scas
iret
test
sbbb
lea
js
scas
mov
jae
adc
decb
fadd
mov
mov
pop
jbe
dec
mov
fisubrs
push
in
jecxz
mov
or
cs
push
fldt
mov
inc
shl
sbb
lods
out
push
inc
push
add
ficompl
xchg
mov
push
dec
inc
sub
pop
push
xchg
movsb
clc
xchg
push
lea
repz
adc
in
jne
jl
sub
outsl
inc
lods
xchg
sbb
add
ss
and
pusha
jge
pop
sbb
inc
adc
out
rclb
dec
or
jmp
mov
rorb
int
push
xchg
sub
xchg
sbbb
mov
fwait
sub
xorl
pop
inc
and
movsl
loop
adc
cs
dec
mov
lds
rcrb
outsb
sub
inc
xor
inc
lods
cld
xchg
or
enter
add
pop
or
xchg
adc
xchg
fidivl
pusha
dec
mov
pop
pop
adc
add
aas
popf
lret
jecxz
fcom
xor
mov
jno
imul
movsb
ljmp
lcall
mov
ret
daa
and
and
jb
mov
repz
pop
es
sub
roll
or
les
sarb
fwait
mov
ss
lea
fwait
ss
shlb
cwtl
xchg
inc
mov
mov
pop
fidivrl
inc
fistl
add
out
lea
insb
mov
pusha
cmp
div
test
xchg
mov
pop
push
lret
mov
jmp
lods
aaa
and
inc
inc
pop
jmp
scas
fwait
ror
xchg
in
mov
loope
lret
lret
shll
mov
enter
jbe
sbb
ficoml
ret
cmpsl
je,pt
inc
test
lret
sub
test
push
dec
lock
int3
aam
enter
mov
and
aaa
je
push
dec
mov
fwait
scas
dec
subl
in
int
je
or
outsb
stc
fcmovb
or
test
ret
inc
jns
loop
push
mov
dec
push
inc
test
inc
pop
sti
cmp
incl
and
mov
jns
push
jle
sahf
or
out
enter
inc
cmpsl
lock
js
jle
xchg
imul
das
dec
sbb
push
out
cs
push
into
data16
das
cs
cmp
push
loope
mov
popa
xor
dec
cmp
add
or
push
mov
mov
dec
xchg
cmp
xchg
mov
int
daa
sub
xchg
fstpl
mov
xlat
xchg
pop
sbb
sbb
mov
jle
inc
dec
shr
ds
pop
ljmp
mov
mov
mov
ror
push
sarb
push
xor
inc
enter
inc
in
ret
fldcw
ja
icebp
lea
les
insl
test
movsl
data16
inc
pop
fwait
mov
imul
adc
push
jge
cld
out
xor
xor
xchg
daa
addb
inc
push
sbb
jge
fisttpll
icebp
es
fucomi
adc
inc
cwtl
add
sbb
dec
fucom
imul
call
inc
mov
push
mov
out
xchg
xchg
je
push
push
test
aaa
pop
mov
iret
or
and
ds
pop
adc
sub
adc
jp
push
or
fistpll
bound
sarl
addr16
mov
data16
in
movsl
cmpsl
insl
pop
xchg
mov
lods
jno
fdiv
jmp
adc
mov
fists
in
push
mov
repz
out
sbb
cmp
mov
sahf
test
sbb
inc
test
pop
pop
dec
or
testl
lcall
test
sbb
sti
add
or
pusha
cs
sti
inc
cmc
lods
jg
xor
out
in
pop
xlat
xor
es
sub
xor
sbb
sub
adc
adc
mov
xchg
stos
stos
idiv
lret
mov
jle
shr
dec
out
jle
mov
add
push
jbe
movsl
hlt
sbb
or
cmp
rcr
and
ljmp
sub
movsb
test
jno,pt
enter
lea
leave
push
fprem
mov
fadds
in
ds
imul
out
stos
inc
mov
jns
icebp
cmp
add
jmp
mov
push
cmp
popaw
outsb
pop
fcoml
dec
add
and
pop
add
pop
cmp
xchg
sbb
shrl
addb
jecxz
je
enter
fdivl
test
ja
mov
imul
pushl
fsts
les
ljmp
sbb
and
mov
movhps
mov
mov
pop
push
mov
dec
push
xchg
clc
fisubs
dec
roll
pusha
movsl
iret
jbe
ljmp
aaa
ss
cmp
mov
into
mov
jo
push
fsts
xchg
mov
jns
jle
daa
dec
dec
cwtl
xchg
lods
in
dec
xchg
push
sbb
ret
movsb
imul
outsl
sahf
xlat
sub
push
fnsave
or
adc
cmpsl
nop
sub
pop
sar
adc
aad
pop
ja
push
stc
sti
mov
cmp
into
cs
or
lret
add
and
mov
lcall
xchg
pusha
sbb
add
dec
test
ss
lcall
pusha
jae
mov
cmp
mov
cmp
pop
push
adc
and
int
add
es
push
cmp
sti
aam
dec
mov
out
push
fmul
xor
bound
inc
inc
fcmovb
add
call
cwtl
dec
xchg
or
lret
push
push
mov
fisttpl
sbb
mov
push
ret
or
arpl
test
test
stos
loopne
push
mov
pop
cmpsb
adc
arpl
daa
mov
push
aaa
les
stc
sub
fists
fisubs
push
push
push
dec
test
sahf
test
mov
fidivrl
xor
xor
cmc
push
je
xchg
fisubrs
fdivs
in
subb
les
xor
sub
inc
xor
inc
out
std
stos
cwtl
xchg
pop
xor
pop
fiadds
inc
add
ret
xchg
xor
add
inc
inc
push
inc
lods
into
lret
lret
and
es
pop
mov
dec
mov
add
xchg
in
mov
call
xor
fndisi(8087
mov
add
dec
sub
add
inc
lods
ss
sub
pop
sbb
and
cli
pushf
enter
mov
mov
cmp
fimull
jmp
decl
shlb
push
xchg
pop
push
stos
cwtl
call
cmc
lods
rcll
rcll
imul
adc
dec
sbb
ret
es
repnz
xor
ror
or
mov
or
es
pop
jmp
sbb
adc
out
jne
sbb
rcrl
mov
sbb
pop
andb
cmpsl
pop
test
mov
lods
push
fisubrl
xor
test
mov
inc
sub
xor
xchg
shll
clc
fnstsw
fdivrs
aas
push
int
push
scas
adc
sarl
xor
and
mov
cmpl
ror
testb
sbb
mov
out
in
add
push
cld
sbb
xchg
lret
pop
int3
cmp
dec
or
or
es
pop
fcmovu
mov
lds
ds
negl
dec
mov
jmp
fs
or
push
sub
mov
adc
add
bound
das
out
aam
pop
xlat
mov
fidivrs
das
ret
add
repz
mov
sbb
dec
int3
jbe
cs
rclb
xchg
outsl
sub
inc
push
push
sbb
std
aaa
push
arpl
lods
inc
mov
xchg
sti
into
add
loopne
push
jle
mov
pop
jle
inc
arpl
jle
xor
shrl
movsb
aas
std
out
fcoml
inc
or
or
mov
es
insl
movsl
and
push
hlt
dec
sahf
inc
cmp
dec
sahf
vpsrad
pop
rorl
into
dec
mov
inc
lea
imul
pusha
mov
pop
loopne
xchg
in
xchg
mov
test
pop
sti
mov
fistl
cmp
inc
ret
aas
out
jb
enter
jb
inc
test
jecxz
pop
fwait
int3
push
add
testl
leave
jmp
test
cli
mov
cmpsl
mov
dec
push
hlt
jbe
arpl
je
add
and
mov
cmpsb
mov
rcrb
pop
daa
jp
adc
push
test
icebp
jge
jl
or
icebp
sahf
loope
shl
xchg
and
fisubs
loopne
enter
sahf
aad
sbb
jbe
and
lret
pop
cmp
in
lret
scas
mov
mov
pcmpeqw
enter
jg
dec
in
jecxz
rorb
adc
pop
jl
lret
jg
je
imul
bnd
mov
loope
stos
das
cwtd
mov
and
aas
aam
add
inc
repnz
sar
and
mov
and
mov
adc
movsl
xchg
sub
arpl
pop
repz
pop
movsl
leave
fcomps
jle
xor
lods
sub
cli
cmp
pop
cmp
mov
testl
pop
dec
lea
jb
and
mov
pusha
sbb
xchg
insl
sti
mov
clc
dec
aaa
add
add
inc
dec
jbe
aaa
jb
arpl
bound
mov
sub
adc
andl
pop
sbbb
or
lods
xchg
jp
rcll
jno
pop
mov
outsl
adc
sub
sbb
in
or
xchg
xchg
loopne
jle
or
dec
imul
sarl
jnp
lea
mov
in
inc
das
mov
aas
push
out
and
xchg
test
xchg
hlt
push
sub
dec
inc
mov
add
aam
jo
mov
mov
fstl
cmp
xor
ss
push
jmp
cmp
pop
xor
cs
in
lea
mulb
push
pop
jg
ss
cs
test
sbb
jp
cmp
es
mov
xor
jns
cmpsb
out
mov
cmpsb
mov
jp
jl
add
cmp
out
pop
ret
pop
xor
mulb
cmpsb
mov
cs
xchg
mov
lcall
push
add
jae
xor
sbb
push
inc
or
and
adc
mov
cmpsb
in
cmp
cmovns
repz
mov
mov
in
jge
jg
xchg
ljmp
clc
xor
inc
mov
cmp
inc
cmp
cmp
and
push
imul
xor
push
stos
sub
xor
jo
pop
xor
jp
adc
pop
cwtl
add
lahf
push
push
mov
jl
push
cmp
inc
adc
sahf
inc
sbb
pop
mov
push
xchg
push
sarb
cwtl
inc
push
jnp
jp
cmp
and
jp
add
xor
push
out
shl
pop
sbb
sbb
add
sub
mov
push
ja
jnp
or
ljmp
pop
sub
cmp
xor
adc
or
sbb
sub
mov
cmp
js
es
subb
insb
xor
mov
inc
jo
pop
aaa
jl
jb
call
push
adc
loop
jp
adc
or
push
or
inc
bnd
push
sbb
jo
push
xor
divb
jbe
jae
cmp
jnp
sub
push
xlat
sbb
push
push
pop
es
adc
push
and
push
sbb
jl
adcb
cmp
outsl
adc
es
jl
jle
adc
mov
sbb
lea
mov
test
lea
and
adc
lock
xchg
pop
ljmp
push
lret
mov
imul
test
jno
gs
int3
push
inc
push
jno
popf
sub
xchg
inc
pop
popf
call
mov
dec
je
ja
xchg
mov
pop
jnp
inc
js
repnz
mov
mov
scas
iret
inc
sub
mov
pusha
inc
fsubrp
aas
cmp
lret
sbb
addr16
mov
dec
loopne
mov
mov
sub
fidivrs
imul
dec
aam
in
inc
cs
dec
gs
outsl
in
leave
lret
shll
inc
rorl
cmp
into
or
aam
mov
in
jnp
int3
bound
stos
fwait
pop
outsb
inc
pop
lods
leave
mov
mov
fistpll
push
fstpl
pop
cmp
lret
loopne
aam
or
lods
aaa
lahf
xchg
stos
and
loope
cli
mov
push
pop
pop
pusha
insb
aaa
inc
mov
mov
aas
fs
lock
dec
mov
lods
out
in
sub
add
leave
lret
and
inc
cmp
in
loopne
loope
into
inc
rorl
add
mov
dec
xchg
jg
mov
movsl
in
dec
lcall
push
sbb
or
fsubrs
ss
xchg
mov
clc
xchg
lret
dec
inc
arpl
ret
add
cmpsl
or
sbb
jb
sbb
js
xor
jle
cmp
icebp
adc
std
pop
ss
inc
adc
imul
enter
in
pop
sahf
sahf
movsl
lret
popf
jno
jbe
xchg
mov
ret
repz
aas
fstpt
mov
stc
add
inc
push
pop
je
div
lret
pop
mov
jmp
je
dec
mov
push
outsb
pop
popf
jecxz
in
repnz
xor
pop
mov
push
clc
dec
mov
gs
sar
jbe
jbe
call
sub
pop
and
fidivrl
mov
mov
push
shll
mov
fisubrl
sbbb
call
inc
stc
cli
sub
mov
filds
mov
push
inc
push
int
sub
mov
push
mov
jle
jle
scas
movsl
sub
pop
testl
and
insl
mov
cmp
push
push
lret
into
jg
pop
or
pop
jge
jl
push
repnz
sbb
jno
aam
push
jecxz
jecxz
jae
mov
mov
imul
dec
lock
dec
fnstenv
hlt
inc
dec
lods
mov
jne
mov
inc
adc
xlat
cmp
arpl
sti
push
fs
es
loopne
fcmovnbe
testb
mov
push
dec
lret
leave
jo
mov
fs
or
icebp
or
cmc
xchg
mov
cli
pop
aaa
dec
cmp
sub
jle
inc
or
call
pop
aam
push
jb
es
xor
cmpsl
jns
adc
pop
add
xor
push
xchg
push
pusha
pusha
inc
jnp
aaa
cmp
and
sbb
pusha
fwait
sbb
pop
andb
sbb
mov
pop
xor
mov
sarb
lea
lcall
push
cmp
ljmp
mov
fldl
loopne
sbb
lock
insb
out
ffree
fxam
int
jmp
dec
cwtl
pusha
mov
add
in
push
sbb
int
aam
ficoms
mov
jno
mov
cwtl
enter
dec
std
inc
aaa
lret
mov
or
cmp
push
or
inc
lahf
cs
inc
cli
ss
dec
pop
cmc
sub
lods
pop
jl
cs
cwtl
hlt
stos
mull
leave
dec
sbb
in
clc
shll
push
cmp
ljmp
addr16
xchg
shll
icebp
sub
push
popa
jecxz
pushf
dec
es
mov
ja
ja
pop
pop
call
ret
jp
loop
jo
cmp
popf
movsl
dec
xchg
mov
bound
leave
icebp
fwait
enter
mov
pop
push
dec
xorl
inc
push
lock
roll
or
cmp
sub
scas
mov
dec
ret
mov
add
jg
ja
js
inc
data16
jle
push
inc
imul
cmp
lcall
cmp
sbb
adc
and
cmp
popa
daa
outsb
ss
fnstsw
xlat
inc
and
js
movsl
push
adc
clc
pop
sbb
push
mov
repz
sub
push
mov
hlt
inc
mov
or
xchg
ret
idiv
cmc
lods
sarl
in
cmp
mov
dec
sbb
sub
imulb
jo
jge
xchg
scas
enter
das
and
mov
sti
jbe
rcl
sbb
cld
loop
mov
sub
mov
cmp
pop
out
icebp
inc
gs
xlat
pushf
mov
out
sbb
jl
test
mov
es
jl
inc
push
mov
jmp
enter
jne
lret
push
xchg
or
inc
lods
cmp
aad
jge
sti
inc
mov
mov
test
pop
mov
lcall
cwtl
add
int
xchg
or
lahf
nop
ss
mov
jbe
mov
adc
test
push
cmp
addr16
dec
xchg
rorb
mov
test
cli
pop
aaa
scas
dec
aaa
xchg
outsw
push
push
popa
lret
dec
or
je
ret
mov
add
add
mov
out
push
out
and
ret
push
jl
push
lahf
or
stc
ss
mov
shrl
mov
inc
cmpsl
test
loopne
addr16
jmp
js
inc
inc
push
dec
gs
rol
jmp
shrb
mov
cmp
or
sti
dec
add
mov
xor
mov
mov
cmp
mov
sbb
aaa
dec
movsl
mov
push
data16
mov
adc
sub
jg
mov
cmp
movsb
mov
mov
add
add
pop
push
cmp
lds
adc
mov
xchg
inc
push
jno
jbe
call
dec
mov
stos
out
sub
mov
rorl
es
mov
enter
xor
xchg
jg
out
and
fwait
inc
icebp
adc
add
mov
adc
cmpsb
shlb
loopne
inc
repz
scas
nop
sbb
popf
dec
push
dec
mov
or
testl
cmp
pop
jmp
mov
and
stos
insl
jmp
push
int
inc
into
cmpsl
jg
cmp
jle
enter
fistpll
loope
sar
daa
push
repnz
out
fisttpl
call
pop
fistpl
data16
dec
adc
jae
cs
or
xchg
adc
pop
sahf
stc
pop
roll
xchg
test
or
lsl
mov
mov
fstl
sub
jmp
cli
rorl
cwtl
inc
dec
popf
into
addl
push
push
repz
cmpsb
pushf
loop
mov
aas
dec
jne
or
inc
adc
jno
sub
pop
pop
xchg
and
mov
pop
inc
mov
loop
subl
jecxz
add
hlt
add
aas
stos
or
adc
int
jl
pushf
les
jae
dec
es
jmp
dec
mov
mov
inc
mov
rcrb
inc
in
ljmp
sbb
and
and
ss
mov
stc
stos
inc
nop
insl
int3
aaa
scas
std
sbb
jb
stos
enter
jp
ret
push
jbe
out
mov
xchg
shr
cs
cmp
push
mov
fs
push
repz
sub
pop
ret
shlb
test
cli
cmp
cmp
sub
adc
mov
ret
lret
add
cmp
or
push
jmp
jp
add
out
ret
in
or
insb
loopne
mov
sub
mov
mov
pop
sub
cwtl
dec
fistpll
scas
mov
jns
popa
fwait
lods
rcrl
sub
inc
jo
jmp
mov
xchg
ja
mov
xorl
test
push
or
or
sbb
add
cltd
dec
adc
fmul
incb
fcomps
xlat
add
adc
dec
cmp
add
js
roll
push
push
stc
sbb
push
pop
test
sahf
fstps
lret
pop
addl
movsl
cwtl
ret
inc
jbe
pusha
sub
lds
test
arpl
inc
adc
sarl
or
loop
mov
inc
push
push
push
mov
push
cwtl
cmp
rcrl
insl
inc
push
push
push
fisttpl
mov
dec
mov
test
in
lock
insb
out
das
shlb
push
out
ljmp
roll
mov
imul
in
ja
mov
rol
sub
dec
dec
and
add
std
decb
lret
mov
out
lret
pop
adc
xor
leave
sahf
lea
mov
icebp
fisubrs
cmpsb
shlb
fcmovnu
push
lret
enter
lock
sub
loopne
inc
jns
push
push
inc
ds
mov
fimuls
jle
fdivr
pop
mov
mov
and
and
sub
repnz
sub
and
dec
cmp
pusha
mov
fidivrl
add
sub
adc
jmp
notl
fsubrs
enter
push
imul
into
ror
mov
sbb
and
xchg
lea
xchg
dec
sti
incb
pop
aas
and
shl
jb
fwait
das
shll
into
or
sbb
rcl
mov
outsb
adc
cld
push
loopne
xchg
xchg
adcl
in
mov
push
jle
push
neg
stos
icebp
and
ds
sar
in
cltd
daa
jp
lock
sub
ret
fsubs
mov
lcall
imul
cmpsb
pop
lret
aaa
and
fnstcw
and
je
ss
clc
pop
stos
cmp
dec
aaa
lods
cs
push
pop
cmp
jle
cmovp
fdivs
imul
fidivrl
lret
mov
jno
psubsw
mov
cli
push
or
mov
dec
mov
sti
aas
mov
ja
pop
mov
call
push
or
push
or
xchg
dec
sub
scas
jl
pop
xchg
in
sbb
dec
cli
sti
inc
xor
inc
je
adc
sub
mov
dec
jo
xor
mov
movsl
fs
push
les
cli
mov
xor
and
adc
sti
ret
sub
push
xchg
inc
fisubrs
mov
fwait
xchg
mov
test
cmp
lret
and
cmp
dec
imul
add
jecxz
orb
aam
repz
dec
cmpsl
xlat
out
push
mov
sbb
inc
pop
push
shl
dec
cmp
inc
push
push
jnp
push
mov
inc
mov
repz
jo
inc
pushf
bound
fdivrs
mov
fnsave
xor
hlt
les
ja
fstpl
test
or
sbb
aad
mov
loope
push
xor
jle
cld
arpl
adc
cmc
js
aaa
and
decl
std
inc
pop
mov
std
mov
lret
loop
mov
push
aad
and
push
mov
adc
arpl
or
loopne
std
idivb
mov
mov
sub
ja
aam
xor
dec
mov
enter
fsincos
cmp
arpl
mov
mov
adc
xchg
pop
int3
fwait
mov
mov
out
fcmove
stos
mov
add
cltd
push
adc
cmp
enter
in
pop
xlat
cli
mov
push
push
jno
clc
sbb
cwtl
sbb
cs
mov
or
mov
int
enter
sub
jmp
dec
dec
leave
fwait
into
pop
jo
sti
pop
pusha
or
mov
das
cmp
in
int
sbb
mov
push
ljmp
or
pop
mov
inc
ljmp
pop
mov
ss
jbe
ds
inc
xor
or
pop
and
push
sub
lret
ljmp
mov
mov
pop
push
bound
icebp
push
mov
pop
lock
push
std
inc
xor
mov
sub
jae
loop
pusha
pop
cld
sbbb
cmp
adc
inc
sahf
push
es
outsb
push
lahf
xchg
ds
xlat
mov
fistl
enter
add
push
push
or
fistpl
and
mov
and
pop
pop
xchg
mov
lret
xor
mov
div
sbb
shrl
lret
mov
pop
pop
and
ret
cmp
test
sbb
inc
adc
gs
mov
sub
push
push
mov
pop
sbb
cmp
lret
push
sbb
in
adc
mov
frstor
cmpb
call
fmull
and
push
cmp
push
jl
xchg
js
fsubrl
roll
cltd
fiadds
test
fsubs
mov
push
fnstsw
push
or
fldt
aaa
push
les
adc
aaa
lcall
test
mov
popa
pop
sbb
ret
xchg
inc
fstl
xchg
aaa
clc
mov
cwtl
ficompl
dec
inc
mov
data16
pushf
jle
or
lea
mul
add
lret
shlb
cmp
stos
pop
scas
mov
aam
das
add
cli
fisubrs
andl
in
lock
dec
sub
ja
movsl
mov
fisubs
pushf
push
mov
mov
sbb
jmp
jle
or
mov
fistpll
sub
inc
xor
and
push
rcrl
je
stos
ret
push
add
pushw
pop
mov
mov
aaa
sub
outsb
pop
push
sbb
push
aas
sarb
mov
ret
movsl
adc
and
push
mov
lret
idiv
rcrb
aaa
iret
test
loopne
mov
std
ror
mov
mov
jnp
sbb
dec
inc
mov
in
mov
mov
das
fwait
ljmp
sarl
sbb
lcall
mov
mov
in
je
or
mov
js
lods
mov
je
daa
gs
jl
dec
pop
clc
rcrb
pop
ljmp
add
pop
icebp
xchg
xchg
fwait
mov
inc
dec
daa
sub
in
in
jmp
sbbl
enter
push
test
or
enter
push
add
idiv
dec
adc
enter
out
test
addr16
xor
test
xor
xor
out
xor
cmp
mov
hlt
movsl
xor
sub
cmp
mov
iret
sbb
dec
pop
ja
fistpll
pop
mov
dec
cmpsb
xchg
xor
outsb
cwtl
and
and
xchg
repnz
push
jno
hlt
shll
xor
add
lret
mov
movd
stc
insl
cmc
dec
cltd
rcl
clc
in
or
clc
jno
pop
jp
cmp
and
adcb
add
inc
cmp
cmp
ret
and
cmp
xor
mov
rorl
add
ret
push
or
xorb
fwait
pusha
out
push
cmpsl
in
fwait
mov
xchg
loopne
cmpsb
out
sub
cmp
pushf
test
cmp
out
add
test
roll
or
sbb
or
jne
ret
xor
push
imul
aam
js
test
mov
aaa
dec
in
push
imul
pop
out
loope
mov
add
cmpsb
call
ss
xchg
clc
push
xchg
cli
cwtl
push
pop
dec
jl
out
jp
xchg
add
add
push
nop
jno
std
push
inc
jecxz
mov
pop
mov
enter
pop
xchg
pop
mov
lret
jge
roll
adc
push
fs
test
inc
add
inc
hlt
adc
idiv
or
jns
ss
inc
jnp
add
mov
push
push
jns
inc
and
icebp
flds
dec
pop
pop
out
adc
insb
mov
sbb
ss
icebp
in
pop
or
sbb
push
aaa
enter
in
cmpsb
repnz
pop
xor
cmp
sub
sbb
daa
insb
push
test
jne
push
cmp
adc
mov
pop
sub
inc
lods
mov
dec
xor
push
and
adc
mov
xchg
lock
lods
stc
mov
xor
push
and
xor
ret
ret
inc
stos
data16
and
aaa
dec
adc
mov
les
jbe
pusha
dec
mov
push
pop
ljmp
cli
fldz
sub
cltd
sub
sbb
ljmp
pop
test
add
in
mov
inc
dec
xchg
mov
sbb
icebp
sbb
dec
xor
mov
test
sar
fsqrt
in
sbb
or
shll
cs
xor
dec
mov
xlat
aas
mov
jo
movsl
loopne
and
dec
out
adc
nop
sub
push
test
dec
pusha
or
xchg
adc
inc
sbb
jo
adcb
mov
bound
inc
cmpsb
cmp
jmp
cmp
xchg
sarb
mov
sub
jbe
icebp
imul
mov
rcrl
adc
or
and
jne
xchg
das
sbb
push
sbb
push
push
sub
shlb
loop
cmp
pop
jecxz
adc
in
ja
dec
aaa
sbb
sbb
scas
les
xchg
pop
adc
ret
arpl
rorb
sbb
sub
rclb
xor
aas
push
push
adc
movsl
lcall
out
les
arpl
test
xchg
bound
inc
push
hlt
or
adc
jne
roll
mov
fistpl
rcrl
jle
xor
jbe
call
push
outsl
xor
push
add
push
jp
or
punpckhbw
ljmp
dec
addl
imul
lret
push
push
js
cli
cmp
mov
pop
stos
push
imul
ss
int
sbb
fwait
lret
sbb
push
outsl
add
ret
jb
in
out
data16
cmp
mov
mov
jle
sbb
enter
mov
sbb
xchg
aas
mov
cmp
xchg
std
arpl
test
ss
shl
jbe
inc
sarb
fcmovne
cmc
and
dec
pop
das
dec
adc
cli
inc
int
push
xchg
sub
push
test
movsl
rcrb
icebp
dec
push
push
push
cmp
mov
inc
mov
out
iret
mov
inc
in
das
insb
xor
add
jg
or
std
pop
lret
ja
inc
nop
sub
mov
in
mov
push
clc
or
mov
adc
xor
movsb
or
xor
inc
aas
mov
add
xchg
sub
xchg
push
jge
aam
xor
ja
dec
sbb
scas
add
push
xorb
aas
pop
mov
adc
hlt
xchg
outsl
dec
push
mov
cmp
cld
call
fwait
loopne
popf
dec
inc
mov
arpl
sub
mov
jo
fidivrs
cli
lahf
ret
out
mov
leave
mov
push
test
push
ret
dec
and
sbb
sub
mov
dec
jno
hlt
sub
inc
pop
dec
shrb
movsl
fiadds
aad
lret
adc
or
cmc
dec
mov
mov
mov
pop
icebp
dec
das
pusha
xchg
ret
push
imul
mov
arpl
lcall
stos
and
push
inc
and
aam
in
dec
movsl
out
out
mov
test
mov
push
clc
in
fs
mov
testb
xchg
movsb
jbe
cmp
ja
lret
test
xor
jnp
stc
stc
dec
jle
shll
stos
negl
cmp
loop
jg
arpl
sub
loopne
leave
jp
jecxz
lret
icebp
inc
pusha
cmp
data16
sbb
aaa
mov
popf
dec
lcall
fisubl
dec
fnstcw
cmpsl
inc
shrl
sahf
jno
mov
cmp
int3
clc
dec
sub
adc
in
mov
xor
xor
jmp
jl
mov
fs
pusha
jp
push
sub
lods
push
mov
mov
jno
scas
outsb
in
xbegin
mov
inc
mov
test
ss
gs
cmpsb
popf
inc
inc
mov
fisubs
and
inc
cmp
cli
cli
push
icebp
mov
xor
cs
push
rorb
and
push
popa
pop
cmp
test
inc
idivb
xor
subb
jecxz
push
inc
adcb
outsb
imul
cmc
aaa
lret
mov
cli
mov
pop
adc
scas
js
fisubrl
jns
and
jp
lret
pop
in
push
pop
mov
dec
cld
js
cltd
call
les
mov
push
push
jle
lods
jnp
inc
enter
pop
ret
pop
push
sbb
pushf
cmpsl
imul
xor
inc
in
std
mov
push
sub
andb
sbb
fstl
adc
mov
enter
lret
xchg
sbb
fwait
aad
xchg
lods
aas
in
iret
jmp
xor
jne
cmpsb
pop
shlb
sbb
push
sbb
outsb
pop
jle
inc
fwait
lret
inc
loopne
push
sbb
sub
pop
pusha
jp
aam
add
jp
dec
inc
add
xchg
fstp
push
xorl
sub
pop
in
sbb
loop
movsb
jmp
in
test
stos
dec
jp
mov
inc
repz
jo
jmp
out
and
or
test
lahf
lea
jb
ja
leave
mov
mov
rcll
mov
lcall
push
insb
jle
jns
mov
jmp
or
jbe
decb
dec
mov
cmp
ss
mov
test
inc
incb
loopne
lret
xlat
ljmp
mov
push
int3
and
mov
pop
out
or
sti
arpl
movsl
ja
dec
xor
dec
fwait
inc
pusha
dec
out
xchg
pop
jbe
adc
in
clc
aaa
cmp
jl
imul
daa
mov
sbb
cwtl
loop
jnp
out
sbb
lcall
ss
fwait
or
and
pop
xor
pop
into
adc
and
cli
and
sub
test
ss
inc
mov
shll
xchg
add
and
jbe
adcb
mov
xchg
std
repz
add
or
and
lods
sbb
pop
loopne
push
movsl
ret
test
pop
cmp
dec
xor
movsl
or
fdivrs
enter
xor
roll
outsb
ror
ret
js
aad
shll
flds
test
add
jle
inc
mov
pop
pop
sbb
sbb
jo
imul
inc
cmp
pop
lock
push
pop
loop
sbb
or
sub
xchg
out
lret
loop
cmc
sbb
inc
bound
lret
jmp
js
and
loop
lcall
movsl
inc
adc
je
mov
and
and
iret
pop
cwtl
call
cmp
jp
mov
pop
sbb
dec
and
dec
sbb
fimuls
mov
jp
sub
std
dec
and
sbb
mov
lds
mov
mov
dec
or
jp
std
pop
sbb
shrb
and
cld
mov
dec
loope
std
repz
cmp
or
arpl
mov
jns
sub
push
inc
outsl
mov
and
lock
lea
jle
push
or
into
insb
fcmovnbe
mov
popa
push
cmp
adc
jl
add
scas
lock
fcmove
push
xchg
or
mov
add
dec
imul
bnd
or
clc
test
pop
adc
test
xor
and
sbb
test
iret
lds
or
jae
adc
push
xchg
xchg
mov
sbb
push
test
out
mov
sti
outsb
lds
rcrb
dec
pop
adc
fidivl
mov
daa
cli
iret
jge
mov
jmp
fisubs
dec
adc
jo
movsb
sbb
mov
pop
jo
or
or
cmpsb
sub
lods
lret
inc
dec
sbb
pop
cmp
push
mov
push
les
fwait
xchg
fst
inc
add
dec
push
mov
dec
pop
lret
xchg
mov
inc
adc
in
jmp
lods
lret
lahf
adc
dec
push
fxch
mov
fimull
sub
test
idivb
movsb
inc
pop
cmpsb
loopne
gs
mov
add
mov
mov
fiadds
test
sti
pop
dec
popa
js
cmp
je
and
pop
mov
cmp
and
aas
mov
dec
push
iret
mov
jle
inc
xchg
ret
in
jb
imull
jns
add
lds
or
cli
jle
or
dec
jmp
jp
and
dec
cmpb
dec
xor
ret
adc
pop
mov
jmp
cmp
ficoml
xchg
or
shr
jne
mov
jns
loope
mov
pop
inc
test
rcr
outsl
sub
aas
jb
jnp
int
dec
mov
adcl
mov
fs
ja
sbb
xor
emms
xchg
loop
dec
adc
ja
mov
adc
cwtl
pusha
in
popa
je
push
out
sub
inc
imul
in
iret
lods
mov
sbb
inc
pop
sahf
mov
fmuls
js
aam
js
pusha
outsl
aas
xor
pop
repz
jno
inc
jns
and
cmp
pop
xor
dec
jb
fs
stos
ss
adc
lret
mov
les
fimuls
xor
negl
fcomps
pop
xchg
add
and
lret
xor
out
aaa
int
and
in
lea
sahf
popa
loop,pt
xor
outsb
call
inc
lcall
fisttpl
iret
aad
ret
loope
mov
cmp
jbe
xchg
lcall
mov
xchg
stos
xor
xor
sbb
lds
xor
sub
mov
xchg
dec
addl
jle
incb
ds
adcl
sarb
imulb
xchg
dec
xor
mov
lret
pop
add
loope
orb
mov
filds
or
sahf
or
pop
movsl
movl
jp
xlat
in
sbb
in
int
hlt
push
jle
mov
ror
dec
out
gs
iret
jmp
adc
aas
lret
or
adc
push
bndldx
aad
std
hlt
or
frstor
xor
in
icebp
test
iret
std
repnz
loope
negl
mov
adc
imul
fsubrl
add
jp
add
mov
loopne
scas
pop
pop
sub
dec
xor
aaa
dec
scas
idivb
xchg
add
mov
adc
loopw
push
call
movsl
shlb
inc
sbb
xchg
inc
mov
lahf
adc
iret
cwtl
lods
inc
mov
les
jmp
push
rcrl
jp
cmpsb
push
pop
and
cmp
push
mov
mov
add
mov
mov
in
pop
jecxz
add
sahf
push
aam
xor
push
dec
sahf
incl
or
add
push
es
enter
inc
loopne
les
push
cmp
dec
ds
sub
inc
lret
mov
inc
jb
testb
xor
mov
sbb
cmp
outsl
xchg
jg
dec
aas
and
dec
fwait
sub
cs
cwtl
xchg
lret
jl
daa
pop
xchg
movsl
jg
jne
sbb
repz
pop
fisubrs
daa
inc
or
xlat
cmp
ret
mov
pop
xlat
iret
inc
xchg
xor
push
jp
ret
aas
push
and
jg,pn
cmpsb
mov
sahf
dec
arpl
jg
loope
int3
jmp
popf
jle
icebp
rorl
test
xlat
into
or
xchg
testb
push
sub
cmc
xchg
mov
and
sub
mov
insb
ror
mov
or
xor
jecxz
jb
push
mov
dec
lret
popf
aas
jno
dec
xor
pop
xor
xchg
inc
shll
and
orb
push
inc
add
dec
mov
sbb
mov
sbb
lahf
je
push
add
adc
inc
rcl
enter
das
adc
les
cmp
xor
scas
mov
fwait
xor
andb
push
popa
test
xchg
add
dec
xlat
aas
movsb
iret
lahf
inc
sbb
or
les
in
fisubrs
sub
aam
mov
sti
and
inc
fldt
aaa
fiadds
cmpsl
push
sub
cmpsb
test
push
push
dec
mov
jle
out
cmc
cmpsl
jmp
xchg
inc
add
sub
sub
adc
rclb
ds
adc
xor
pop
pop
aas
out
sub
dec
mov
and
mov
mov
mov
lods
js
dec
lds
ficomps
ss
fstpt
mov
mov
cmp
movsb
xchg
adc
mov
popf
icebp
mov
int3
mov
dec
loop
clc
ss
jp
hlt
sbb
mov
inc
idivb
add
imul
jg
cld
addr16
mov
push
stos
in
or
fiaddl
mov
repz
addr16
hlt
je
pop
xor
adc
mov
cwtl
ficomps
jp
cmp
adc
inc
push
enter
in
fwait
mov
add
sub
push
ret
test
or
or
push
fnstcw
or
sbb
lock
aad
sub
shrl
cmp
cld
jecxz
aaa
decb
enter
sub
je
dec
inc
stos
mov
inc
cli
xchg
xlat
pop
lea
inc
or
mov
and
add
lods
push
fwait
idivb
or
jnp
pop
arpl
xor
push
addr16
fnstsw
fsubs
pop
xchg
sub
and
cmp
mov
lahf
lods
dec
mov
mov
mov
dec
fsubs
je
mov
push
add
cmp
inc
leave
jno
mov
jp
pop
xchg
dec
iret
jb
popa
push
ret
outsl
adc
ret
push
adc
pop
stos
pop
inc
and
jmp
push
lret
jae
aaa
mov
aaa
and
mov
sti
adc
and
fcmove
sub
jae
hlt
pop
ja
aam
dec
sbb
mov
test
dec
inc
in
jge
int3
xchg
and
pop
inc
out
mov
sbb
mov
lret
aad
adc
cmpsb
nop
cmp
imul
dec
rorl
mov
inc
adc
in
push
cs
mov
lock
bound
ret
imull
mov
fmulp
test
dec
pop
das
call
iret
mov
movsb
decl
dec
push
xor
es
xchg
shrl
ret
cmc
and
jge
push
inc
push
or
cmp
sub
or
dec
xor
das
clc
sahf
stos
js
add
push
stc
mov
xor
add
inc
mov
or
cmpsb
leave
xor
sbb
gs
int
ljmp
mov
cmpsl
jae
daa
movsl
iret
lea
test
hlt
shll
jae
pop
mov
rcl
ss
or
push
fcomps
lock
bound
xchg
lods
pop
sarl
adc
pop
test
shl
hlt
dec
sbb
or
stos
in
or
sub
pushf
mov
inc
fsub
lret
push
add
pop
icebp
pusha
insl
call
aas
cli
shr
push
xchg
lcall
imul
xchg
daa
aas
inc
mov
mov
dec
push
cs
dec
test
mov
jp
out
cmp
test
and
fistpll
and
ret
jns
daa
std
mov
mov
cmpsb
pop
adc
inc
sbb
loopne
sub
cld
add
lcall
mov
xchg
mov
xorb
jbe
adc
mov
mov
fildll
dec
mov
push
lods
lret
pop
scas
out
sub
mov
sbb
and
sbb
inc
popf
adc
loopne
pusha
in
xor
push
ds
in
mov
dec
popf
lds
lahf
or
addr16
mov
pop
je
mov
sub
hlt
xlat
fwait
mov
mov
popf
pop
add
dec
orb
push
mov
sti
mov
repz
cmp
js
lcall
mov
xchg
or
mov
mov
std
sub
fwait
push
jp
cli
std
dec
xchg
add
insb
push
in
dec
sarb
jne
test
fimull
xchg
paddsb
es
nop
adc
pusha
in
call
cvttps2pi
push
and
dec
in
push
push
arpl
ror
ror
pop
cmp
lret
stc
bound
pop
sbb
aas
jl
mov
xor
je
add
xchg
rorb
xor
out
imul
je
scas
lahf
aaa
and
sarl
ss
sahf
add
movsl
out
repnz
lahf
pop
fcompl
addr16
test
out
pop
in
cmp
lods
ss
and
mov
les
fcmovb
xorl
push
enter
cmpsb
jno
inc
sub
xor
ret
ds
insb
dec
jmp
push
fstl
and
or
outsb
or
int3
pop
aad
push
mov
mov
stos
xchg
sub
cmc
sbb
and
dec
cmp
lods
or
push
in
jbe
push
sbb
lock
in
sub
std
out
aas
sbb
fnstsw
jg
mov
sub
ljmp
mov
xor
js
ret
mov
leave
ss
ficompl
jo
xchg
shrb
fdivrl
in
jno
fs
je
scas
dec
xchg
mov
ret
sub
sbb
mov
cmc
cmp
pop
dec
pop
je
cvtps2pd
into
mov
pop
jbe
cli
hlt
cs
int3
sahf
inc
mov
and
cmp
xchg
ret
pop
xor
jnp
arpl
adc
fidivrl
inc
rorl
mov
or
inc
out
fiadds
inc
es
mov
cmp
mov
fs
cmp
and
jl
or
fcoms
cmp
inc
sub
sub
xlat
out
dec
mov
cli
add
sub
xchg
sub
mov
arpl
repnz
testl
mov
add
inc
mov
mov
dec
aaa
js
and
lods
gs
sbbb
int
rol
or
ret
push
add
xchg
jo
leave
xchg
inc
inc
sub
cmp
inc
mov
shl
push
push
and
sub
mov
mov
adc
enter
sbb
sbbb
cltd
sub
xchg
pop
cmpsb
jo
sbb
jg
xor
mov
xchg
enter
lret
xlat
mov
jno
inc
ret
mov
pop
pop
dec
scas
jmp
iretw
push
pop
mov
xor
or
xor
loop
push
pop
pop
pushf
xchg
shlb
popa
nop
fdivrl
or
sbb
push
mov
add
das
dec
pusha
add
push
in
mov
adc
and
das
out
adc
dec
mov
pop
cmp
ficompl
inc
std
xchg
ret
loopne
push
fwait
cmp
mull
pop
or
and
or
lods
add
pop
lcall
mov
fwait
bound
call
xor
pop
jbe
sbb
xor
cli
into
lea
inc
adc
mov
fdivl
lock
xor
paddb
and
call
ja
push
or
lret
jbe
movsl
test
addr16
cmp
ljmp
sub
std
dec
pmaxsw
mov
sbb
xor
and
aam
leave
hlt
pop
push
adc
cmp
jae
out
into
iret
in
lock
inc
scas
jl
int
sti
push
inc
mov
out
inc
aam
xor
fdivrs
push
fidivl
xor
inc
in
mov
mov
dec
in
mov
neg
inc
jecxz
jmp
and
xor
push
fdivrs
sub
movsb
cmpsl
repnz
jp
sub
xchg
xchg
pop
dec
adc
ds
jle
mov
or
imul
push
popa
mov
pusha
or
outsb
add
enter
daa
sbb
xchg
fldt
jp
outsb
shrb
xlat
cmp
lcall
xchg
lea
pop
leave
jecxz
cmpsl
adc
and
xor
es
mov
fiadds
cwtl
out
lsl
shr
out
dec
push
pushf
int
fcmovne
inc
ds
xchg
sbb
lret
mov
mov
ss
and
jnp
pop
ficomps
dec
hlt
loopne
ror
cltd
sbb
dec
js
mov
sub
and
mov
push
gs
insl
aas
and
xlat
mov
inc
movsl
adc
cmp
incl
fs
add
mov
and
notl
adc
daa
sub
movsl
adcb
or
adc
mov
dec
jne
pop
cmp
adc
dec
adc
test
in
xor
lea
or
push
inc
cmpsb
out
mov
xchg
out
push
or
les
mov
mov
inc
les
jns
enter
inc
or
cs
test
sub
mov
xor
in
cli
mov
pop
xchg
movl
cmp
mov
std
ja
adc
mov
shll
mov
or
mov
fnstenv
bound
ret
decb
scas
pop
add
aam
cmp
jle
dec
jecxz
imulb
cmp
lret
xacquire
jl
out
ja
mov
adc
or
daa
cwtl
je
das
test
mov
push
lea
icebp
xchg
and
scas
test
insb
push
mov
cmp
jmp
in
outsb
mov
aas
pop
sub
mov
dec
mov
push
mov
sbbb
sti
lret
popf
jl
push
call
mov
jle
aas
pop
xchg
js
mov
or
cmp
push
mov
hlt
add
pop
mov
sbb
pop
ret
es
ss
mov
dec
push
mov
ret
adcl
pusha
dec
and
arpl
xchg
nop
inc
mov
jecxz
sti
fidivs
jl
shll
or
or
push
sub
push
push
gs
stos
and
ret
or
sub
mov
and
dec
push
andl
jns
mov
add
idivb
inc
and
jo
inc
or
cld
fistl
dec
in
andl
dec
ror
push
aas
aas
xchg
jg
and
sbb
sbb
mov
in
pop
int3
dec
jge
fisttps
add
push
mov
xchg
inc
fsubrs
popa
lret
fsubrl
jbe
je
cld
mov
mov
sbb
sar
add
push
fdivs
jmp
cmpsl
mov
insb
or
fidivl
icebp
popa
xor
pop
ffreep
cld
cmp
xor
enter
daa
dec
notb
outsl
lret
pop
sub
test
inc
cmp
or
mov
movsl
cmp
push
push
adc
mov
add
les
or
gs
jecxz
fwait
dec
int
leave
xchg
and
adc
insb
push
mov
ret
into
sbb
stc
inc
loopne
ret
dec
pop
sbb
aam
mov
scas
call
aas
xchg
pop
fwait
ret
dec
jp
leave
inc
rcr
and
rorb
jge
pop
je
dec
add
into
xor
ret
mov
cmp
add
jg
push
lret
jge
pop
mov
push
xchg
dec
push
xlat
jg
fwait
xor
mov
pop
in
ds
xchg
cld
inc
clc
imul
or
push
std
inc
adc
sub
rorb
arpl
xchg
jmp
cmp
fbstp
xor
out
hlt
sbb
hlt
push
adc
mov
pusha
jp
push
mov
iret
mov
int3
insl
mov
mov
push
or
lret
test
int
xchg
jge
clc
stc
cmp
push
je
dec
rclb
arpl
lret
lea
xchg
sub
jg
mov
fadd
inc
aaa
push
insb
inc
sti
loopne
inc
push
test
sahf
jmp
mov
push
movsl
sub
pop
dec
push
cwtl
outsb
sbb
pop
dec
outsb
cmpb
insb
and
scas
ret
sahf
enter
mov
movsl
pop
xchg
int3
and
mov
mov
cmpsb
aas
out
push
mov
mov
push
mov
xor
icebp
pusha
or
ja
dec
push
mov
and
adc
pop
jae
andl
pop
nop
push
jns
bound
push
fadds
lods
cmpb
stos
inc
dec
cmp
mov
inc
add
nop
mov
imul
xchg
loope
lret
bound
jl
and
push
cmp
jge
es
outsl
jecxz
sub
in
or
notl
stos
fildl
pop
adc
mov
inc
pop
mov
jg
test
ret
xchg
xor
mov
iret
cmp
aaa
mov
outsl
mov
and
jmp
rorl
in
call
sbb
lahf
pminsw
push
test
aaa
int
incb
jnp
adc
ret
push
out
notl
aas
pop
push
cmc
mov
jle
mov
loope
aaa
fcmovb
daa
addr16
fsub
jg
xchg
add
mov
push
rcll
shll
mov
ds
mov
inc
std
rcr
mov
mov
gs
or
jge
icebp
aaa
adc
xchg
std
lcall
pop
out
cmp
adc
mov
xlat
mov
jg
mov
ffreep
mov
lret
pop
adc
dec
test
xor
adc
sarb
inc
pop
inc
cs
cmp
adc
jnp
dec
iret
jae
pop
xor
cmp
inc
outsl
lock
popf
sbb
cli
pop
or
clc
inc
mov
repnz
in
and
icebp
sahf
je
lret
ljmp
aam
nop
push
push
imul
adc
cmove
xor
in
jp
cmpsl
sbbb
xchg
scas
das
in
sub
ds
cld
cmp
inc
pop
and
je
pop
enter
aas
ret
inc
sub
imulb
xchg
jbe
cwtl
popl
dec
mov
sub
push
nop
xor
dec
mov
clc
xchg
pop
push
test
sbb
stos
jl
jle
rolb
pop
sub
std
pusha
repnz
cs
in
jbe
xchg
xchg
cmp
scas
pop
test
sub
sbb
loope
pop
xchg
inc
inc
out
mov
fnstenv
sub
fdivr
xorl
or
mov
enter
xchg
lods
cmp
mov
je
ss
ja
iret
adc
sbb
incb
js
movsl
lock
into
push
jge
mov
lret
add
shll
inc
addb
out
clc
shll
jge
ss
rclb
je
or
jo
in
push
subl
in
xchg
fstps
iret
push
dec
inc
repz
cmpsb
push
adc
cmp
mov
sbb
in
pop
inc
mov
sub
or
or
int3
jg
and
fwait
cs
repz
cwtl
fdivrs
push
hlt
jo
dec
lea
cmp
add
mov
hlt
xchg
mov
pop
inc
inc
loopne
mov
inc
push
xchg
enter
inc
add
ret
add
dec
enter
add
fwait
jp
sti
leave
into
dec
mov
pop
push
fbld
sbb
scas
dec
ja
and
fstl
mov
movsl
iret
shll
les
xor
es
or
aaa
dec
xchg
jg
mov
mov
icebp
sahf
inc
into
or
ljmp
stos
jo
or
fwait
push
outsl
push
dec
pop
je
mov
pop
dec
xchg
ss
lret
sub
pop
repnz
call
mov
mov
push
jmp
in
popa
cmp
inc
paddw
mov
mov
cmpsb
stc
lock
pop
fbstp
mov
jp
aad
xchg
push
push
loope
lods
and
mov
jp
cmpsb
xor
in
inc
add
sub
subb
push
mov
std
test
stc
jle
in
inc
adc
lods
pop
lret
repnz
xchg
ror
mov
dec
sub
out
cmp
and
jns
adc
mov
cmp
jnp
shl
push
push
xor
push
loop
add
iret
dec
ret
add
fiadds
adc
out
scas
cli
and
mov
cld
pop
cmp
mov
stos
aas
fiaddl
jnp
push
je
jae
or
push
pop
outsb
test
dec
cmp
ss
je
lahf
cli
subb
jnp
lcall
push
xchg
cmpps
jae
mov
fimuls
pop
icebp
and
test
rorb
loop
imul
dec
add
rcll
rcll
cmp
inc
jecxz
push
inc
lds
imul
call
lods
mov
enter
mov
xchg
mov
sub
inc
aas
xchg
decl
dec
std
inc
sbb
push
fndisi(8087
sbbl
jle
shrl
or
mov
pop
cmpsb
pusha
add
inc
mov
or
or
lcall
pop
cs
sub
and
jl
sbb
jbe
xor
xor
mov
xlat
xchg
insb
adc
mov
cmp
mov
mov
call
int3
sub
in
add
add
mov
mov
sbb
or
jl
cmp
add
and
popa
jb
xor
pop
mov
stos
pusha
mov
sub
jbe
cmpsb
call
jl
and
or
sub
cs
in
dec
sbb
ss
sub
sbb
pop
shll
cmp
int3
inc
cmpsb
jp
mov
adc
sti
push
into
push
adc
jnp
lods
sbb
mov
mov
add
sbb
loop
popa
out
adc
mov
xchg
repz
out
rcrl
cmp
dec
bound
pusha
xor
stos
aad
cmp
test
jle
cld
jl
cmpsb
xchg
inc
fs
mov
imul
cmp
outsl
xor
hlt
pop
fldenv
or
pop
jecxz
divl
mov
cmpsl
push
sbb
popw
pusha
sbb
cmp
or
ss
scas
inc
xchg
adc
mov
ja
cmp
scas
push
pushf
xor
push
sbb
xchg
nop
push
add
fdivl
push
pop
cmp
jg
repz
pop
scas
and
sub
data16
xchg
push
pop
lcall
push
xchg
push
cwtl
add
sbb
bound
sub
cwtl
sub
push
and
cmp
fcomps
push
sahf
inc
cmp
bound
jle
jb
inc
je
cmp
xor
adc
pusha
scas
adc
inc
testl
push
insb
insb
outsl
ss
push
push
sbb
xor
outsb
outsl
jb
cmp
jb
js
sbb
pop
pop
push
sbb
push
pop
push
mov
push
ja
jne
pop
pop
push
add
aad
ss
cmp
pop
imull
mov
hlt
push
cs
imul
cmp
inc
xor
scas
xchg
push
scas
xor
adc
pop
push
fnstcw
mov
inc
pop
sub
xorb
sbb
sahf
inc
sub
jle
pop
push
adc
bound
inc
scas
push
ja
or
xorb
jp
insb
cmp
sbb
inc
xor
scas
dec
sahf
sbb
cwtl
and
mov
mov
inc
jno
mov
sbb
sub
int3
iret
icebp
mov
subl
jl
cmp
aam
pushf
jno
inc
scas
pusha
push
dec
mov
into
sub
clc
jg
stc
inc
test
mov
enter
lods
xor
out
sbb
and
movsl
mov
movsl
test
fndisi(8087
xor
aam
fwait
pop
hlt
pop
lret
adc
mov
dec
and
xchg
or
dec
aad
sbbl
imul
ficoms
push
icebp
adc
nop
test
outsl
cli
aaa
sbb
cmp
cmpsl
xor
fwait
std
jg
and
jo
or
push
dec
push
jp
and
dec
xor
lock
stos
cmp
aaa
xchg
ret
stos
mov
out
cmp
add
sti
jmp
fcmove
mov
pop
loopne
jb
rorl
fwait
cli
dec
js
out
mov
mov
sti
push
shlb
jge
xchg
aaa
cmp
or
ret
or
rcll
sbb
ljmp
jmp
inc
push
int3
ret
pop
cli
dec
movsl
imul
push
pop
call
inc
in
mov
pop
jnp
arpl
cmpsb
push
stos
ror
cltd
sbb
fdivrs
adc
jl
popa
inc
js
cmp
scas
push
out
add
sbb
jno
pop
sbb
cmp
shlb
fnsave
lret
lret
jge
push
sbb
pop
inc
cmp
nop
and
cld
push
and
imul
sub
popf
inc
fcomps
sbb
test
or
pop
mov
jg
cmp
cwtl
jbe
out
aam
sub
ja
fisubrl
fildl
inc
or
xchg
push
xor
enter
stos
cmp
dec
sub
adc
or
xchg
or
mov
pop
repnz
aam
stos
fs
pop
jno
scas
inc
fimuls
cmp
std
mov
mov
enter
lret
xchg
fidivrs
mov
std
mov
mov
int
cwtl
xor
and
cwtl
xchg
pop
test
dec
lea
and
popa
or
iret
pop
sbbb
scas
test
je
cwtl
jp
mov
xor
enter
adc
push
add
repz
sbb
mov
sub
inc
cwtl
or
pop
fwait
cmpsl
insb
out
lret
lret
and
jne
nop
pop
pop
or
mov
sbb
inc
test
mov
mov
push
lahf
jo
xor
stos
in
lds
movsl
pop
adc
movsl
in
push
jle
fsub
rorl
sarl
in
pop
stos
jb
and
les
lret
mov
xchg
stos
or
sub
cmp
sbb
jl
jbe
mov
pop
fdivrl
iret
je
pop
xor
outsl
movsl
push
mov
add
dec
jmp
mov
les
mov
das
in
mov
cmp
jbe
rorb
adc
test
sub
ffreep
push
or
pop
addr16
xor
aaa
add
and
jbe
inc
aaa
xor
arpl
out
lods
dec
jle
add
pop
jb
adc
mov
push
sub
jge
push
pop
inc
loope
lret
mov
pop
insb
std
stos
cmp
cmc
insl
mov
adc
pushl
add
adc
cmpsb
jmp
push
adcb
sarl
jmp
test
jg
scas
testl
xlat
jp
dec
sub
xor
ljmp
mov
repz
inc
jle
xchg
push
push
jle
gs
jl
xchg
je
lea
mov
xchg
lock
xchg
imul
jno
sbb
xchg
outsb
and
fimuls
sub
mov
icebp
ret
dec
xchg
sbb
enter
addr16
fmuls
in
xchg
jp
dec
inc
or
roll
dec
xor
push
mov
inc
or
adc
int3
leave
cld
adc
popa
aaa
and
sti
pop
sub
cmp
jg
inc
sub
push
pop
sbb
incl
cmp
adc
fs
fstpt
pop
das
enter
pusha
enter
add
aaa
dec
fcmovu
xor
leave
std
lret
dec
stc
mov
daa
mov
fwait
nop
std
dec
inc
jnp
loop
in
iret
fiaddl
jae
xchg
add
adc
pop
in
enter
cmp
clc
je
add
dec
rcrl
adc
je
cli
xchg
mov
in
xor
cli
ja
inc
dec
lcall
push
popa
mov
mov
push
push
ret
xor
rolb
mov
mov
pop
in
sbb
dec
jge
mov
lea
push
xchg
mov
pop
pop
fdivs
leave
mov
xchg
mov
sbb
dec
xchg
ss
xlat
cmp
dec
outsl
dec
pushf
in
xchg
sub
xchg
int
sbb
inc
mov
je
ss
mov
data16
into
aas
jno
dec
bnd
mov
xlat
add
jae
icebp
std
jb
xchg
jg
jp
inc
and
rcrb
mov
daa
in
pop
nop
ret
and
lea
sahf
dec
rcll
adc
ret
into
jg
or
icebp
lcall
mov
mov
dec
in
jmp
rcl
sub
adc
cmpb
push
jecxz
inc
scas
aam
push
lret
dec
int
dec
sti
into
and
mov
ret
adc
sti
arpl
xlat
pop
das
inc
cmpsb
push
enter
add
jecxz
in
jae
lahf
push
mov
dec
sub
dec
ret
dec
out
das
adc
dec
lret
jo
xchg
push
cmp
push
or
sbb
call
call
aas
or
cltd
inc
push
pushf
cmp
faddl
iret
jge
jmp
sbb
mov
mov
aas
rcrl
test
xchg
push
enter
xor
ret
xor
jns
inc
inc
movsl
mov
pop
mov
and
push
jnp
dec
arpl
imul
xor
pop
adc
rol
pop
movsl
cmp
mov
test
int
xchg
push
or
add
push
xchg
push
lods
inc
dec
mov
call
cmpsb
fidivrl
cli
add
cmp
fnsave
cmp
push
sar
sbb
or
in
xchg
jbe
inc
aaa
clc
sbb
push
jg
or
jb
or
push
mov
lret
lods
or
inc
ljmp
dec
pop
push
out
and
in
adc
sub
mov
es
cs
into
dec
xor
push
in
imul
pop
scas
loope
inc
adc
out
xor
enter
jle
push
cmp
or
aam
movb
pop
dec
add
outsl
call
cltd
adc
dec
push
inc
or
xor
inc
fcoml
or
jo
mov
stos
inc
aas
push
int
or
push
inc
hlt
or
lea
mov
ja
cmc
dec
pop
into
iret
test
and
add
pop
lret
and
mov
gs
and
sbb
ds
in
and
and
dec
movsl
mov
clc
fldenv
movsb
cmp
in
or
fwait
or
push
or
adc
sbb
mov
sbb
lret
enter
pop
xchg
in
mov
aaa
lcall
sbb
mov
and
lods
out
mov
pusha
pop
fsubr
mov
fidivrl
and
sbb
xchg
add
cltd
stc
dec
pop
cmp
data16
jb
inc
ja
inc
cmpsb
push
sbb
jmp
push
fistps
addr16
mov
gs
dec
cwtl
shlb
push
popa
lcall
out
jno
pusha
ja
xchg
or
dec
insl
pusha
das
mov
arpl
mov
cld
popl
dec
incb
rorb
xor
mov
push
ja
push
jmp
add
fnsave
jnp
fsubrs
stc
ja
sub
mov
es
nop
aaa
arpl
ret
fstps
addr16
in
jae
xchg
dec
mov
or
jbe
sub
and
xchg
das
jmp
xchg
xchg
test
lock
ficoml
and
repz
mov
sti
mov
push
les
aas
and
cwtl
jo
lret
aas
pop
inc
inc
adc
ficoms
xchg
push
jecxz
scas
push
iret
rorb
xchg
inc
push
jecxz
push
jmp
inc
push
daa
pop
jb
int
add
icebp
sbb
jge
stos
shlb
dec
xor
out
test
and
mov
mov
test
add
into
imul
std
std
mov
subb
or
cmp
lock
cld
shl
repz
je
add
insb
cltd
out
mov
xchg
xchg
xchg
jne
and
and
test
daa
pop
rclb
les
testb
jg
xchg
lret
cld
jg
addr16
in
xor
or
mov
sub
jne
int3
clc
in
push
loop
and
repnz
xor
pop
fdivs
push
orl
scas
cmp
popa
push
xor
test
and
loope
mov
fisubrs
push
jmp
dec
test
pop
test
mov
xchg
dec
mov
mov
mov
push
cmc
enter
test
mov
clc
test
pushl
pop
mov
stos
inc
test
push
jle
test
in
loop
sub
push
inc
outsb
push
adc
test
cmp
shll
rcr
das
insl
lods
call
pop
lret
pop
pop
xor
sub
jg
dec
push
les
mov
dec
into
adc
pop
daa
nop
and
into
jb
mov
movsl
cmpsb
and
jp
xorb
adc
aam
sub
addb
add
cmpsl
cmp
cltd
mov
xchg
test
pop
shlb
push
inc
or
push
lods
int
stos
pop
inc
daa
lods
mov
or
mov
xchg
out
scas
or
test
lret
fstl
jo
sub
and
repnz
shll
push
dec
mov
js
ret
adc
rcrb
xchg
repnz
adc
sbb
mov
ret
jb
sti
mov
dec
shll
loopne
or
fimuls
cli
dec
push
inc
mov
aaa
push
cmp
and
jle
mov
jb
popa
gs
lods
sub
andl
lret
xchg
out
sti
daa
mov
call
sub
sub
adc
cmp
int3
lcall
inc
mov
inc
add
pop
jge
in
pop
gs
fdivrs
inc
fisubl
cs
rcrb
insl
push
inc
lret
push
out
sbbb
push
les
and
fwait
arpl
mov
add
mov
fldt
xchg
inc
sbb
pop
pop
adc
sahf
pop
shl
ja
sti
cmp
arpl
xchg
mov
sbb
clc
fstps
aad
and
sarl
mov
popa
push
cmp
ret
pop
fwait
rcl
sub
push
inc
pusha
fwait
cmp
cmp
movsb
and
xchg
lods
lea
xor
sbb
ficoms
fistpll
sub
cmp
movsl
sgdtl
add
sub
xchg
clc
pop
dec
pop
pop
cmp
push
dec
ja
or
enter
movsl
ljmp
fstpl
jne
xlat
in
mov
and
loopne
outsl
cs
arpl
dec
and
loop
nop
jmp
mov
fwait
and
lret
dec
xlat
xchg
xor
aam
sahf
jae
stos
xchg
adc
aad
dec
sarb
lcall
ds
push
inc
sub
dec
xor
lods
mov
push
sti
imul
inc
jecxz
inc
aaa
jb
jbe
cmp
rcr
and
add
mov
aam
popa
inc
lret
inc
mov
into
lods
xchg
test
mov
sbbb
mov
inc
jl
jne
scas
cwtl
shl
testl
push
sahf
loope
movsl
pop
andl
stc
inc
mov
xchg
push
mov
gs
mov
vandnps
and
xchg
cmp
outsb
dec
fldt
or
push
and
jnp
and
xorb
dec
fs
fidivrs
loope
mov
loope
lea
cmpsb
mov
mov
fcoms
shlb
enter
mov
das
lock
fildll
inc
aaa
aaa
dec
shlb
and
pop
adcb
pop
or
shl
xchg
jmp
jbe
cmp
cmp
mov
pop
icebp
and
clc
mov
push
lea
mov
pop
js
ljmp
bound
cmp
aad
inc
cld
pop
cmp
xor
push
scas
cmp
dec
jp
mov
xor
hlt
fidivrl
rcrb
fists
inc
lock
loope
ss
cmp
push
pop
es
dec
jle
int3
loopne
sub
scas
cmp
cmp
push
lahf
mov
ss
cmp
inc
push
je
out
mov
sub
xor
jle
jo
mov
mov
jl
cmpb
and
bound
add
rcll
out
in
mov
jbe
out
jnp
jl
sub
scas
jns
jle
cmpsl
lret
cs
push
sti
in
ss
insb
xchg
ret
es
in
xor
add
gs
adc
push
jae
cmpsl
jbe
scas
pusha
mov
ss
sahf
dec
xchg
or
movsl
push
lcall
or
jbe
pop
cs
push
mov
das
jp
cmp
push
test
adc
ss
js
push
inc
jp
cmp
and
sub
push
cmpsb
outsb
jecxz
sub
outsb
imul
adc
inc
sahf
xor
or
sbb
cs
shlb
cmp
mov
pusha
daa
mov
dec
adc
push
ljmp
jl
js
or
sub
jbe
adc
sbb
pushf
pop
sub
xchg
push
adc
lcall
jbe
sbb
xor
dec
repnz
sub
sub
jb
mov
dec
js
stc
rcll
pop
es
mov
xchg
dec
dec
jno
push
adc
mov
rcll
mov
sbb
ds
dec
dec
jbe
pop
cs
sub
scas
jbe
jp
jle
es
cmp
adc
scas
mov
jbe
sbb
adc
adc
push
mov
js
push
xor
jp
js
hlt
push
and
subb
push
sub
fsubrl
xchg
and
js
adc
pop
addb
dec
js
jbe
push
ret
jp
sub
dec
jecxz
inc
test
aas
out
push
aas
or
hlt
arpl
fisttps
loop
dec
sbb
mov
jno
test
rcr
dec
xchg
or
ficoms
lret
xor
inc
rolb
test
arpl
xchg
out
cmp
cmp
dec
push
xor
subl
push
lods
std
jb
push
or
pop
rolb
fnsave
shlb
push
mov
lds
mov
cmp
cmp
dec
gs
cmc
push
popa
lret
cltd
sahf
rorb
loope
aad
out
icebp
mov
in
bndldx
pop
jbe
push
stos
push
into
adc
add
ret
xlat
stos
enter
push
out
inc
mov
les
pop
loopne
dec
daa
jbe
rcrl
psubq
xchg
jl
pop
aaa
sub
lds
fidivl
popf
dec
cmp
adc
sbb
adc
add
jns
xor
mov
inc
cltd
bound
divl
out
cld
push
mov
fcoml
je
dec
jno
jo
inc
adc
xchg
aad
jbe
enter
das
adc
les
add
pop
mov
xor
mov
mov
mov
pop
xchg
test
out
call
xor
jmp
pop
inc
adc
cmp
lret
in
test
inc
jp
or
test
push
rorb
xchg
inc
sub
xor
loope
fmull
ja
pop
jnp
or
push
lea
pop
ja
das
dec
sbb
dec
arpl
sbb
add
loop
lods
sub
xor
mov
loopne
cwtl
lods
xchg
xchg
cmpsl
ret
dec
or
sarl
mov
arpl
and
enter
xchg
movsl
ret
push
or
and
pop
push
xor
movl
add
mov
xor
cwtl
xchg
pop
into
fs
popa
test
mov
fcmovu
sbb
stc
test
dec
jp
fldcw
lock
pop
mov
jle
pop
push
dec
fcomps
test
sarl
rorl
mov
cmp
and
scas
push
push
cmp
inc
cmp
aam
aaa
or
iret
mov
inc
in
jnp
cmpsb
inc
sahf
adc
xor
inc
in
fwait
pop
in
sbb
cmp
push
mul
push
push
push
or
loop
popw
xlat
cld
lcall
xorl
dec
push
jle
or
in
sarl
add
lcall
or
out
in
mov
push
cltd
mov
add
push
out
jp
mov
push
es
dec
loope
rol
aaa
lret
inc
jle
lock
jle
je
add
ja
lret
aad
es
scas
jle
pop
push
mov
adc
or
popa
mov
fidivs
mulb
mov
lret
fsincos
sub
xchg
pop
push
adcl
push
gs
shrl
push
aad
push
out
cmp
jecxz
popa
jns
mov
into
xchg
sub
nop
cmpl
pop
and
rcl
insb
jge
add
shrb
je
pop
les
pushf
push
add
push
popf
adc
xchg
pop
mov
hlt
ljmp
add
add
sbb
and
data16
and
mov
push
or
sbb
cmpsb
jns
test
cld
mulb
mov
ss
mov
or
or
std
push
push
int
fcmovu
pop
pop
xchg
movsl
adc
sti
jb
punpckhbw
ss
rcrb
push
mov
in
enter
jb
lea
jecxz
std
xchg
aad
cmp
cs
cwtl
cltd
mov
les
leave
cmp
xchg
repz
pop
fistps
xchg
inc
fisttpll
push
popf
pop
aam
and
xchg
int
test
scas
cs
aas
stc
mov
adc
aaa
inc
mov
mov
ds
inc
cli
dec
push
fwait
into
imul
pop
int
mov
fldl
test
cli
cmp
xlat
rcrl
inc
lea
clc
push
sub
pusha
iret
scas
xor
lret
adc
mov
xor
pushf
aaa
cld
push
out
mov
jg
mov
ds
out
outsb
dec
and
jo
jnp
aas
or
push
push
mov
mov
dec
dec
or
cmp
in
test
ja
inc
pop
dec
cmp
jno
push
cmp
adc
push
arpl
lret
or
adc
push
or
pusha
xor
jb
xor
or
push
mov
inc
repnz
mov
ja
mov
shrb
push
icebp
inc
xor
mov
push
or
mov
cmp
add
cmp
enter
and
inc
popf
jle
es
ret
sbb
aaa
stc
dec
add
mov
mov
jecxz
mov
movsb
ds
mov
pop
sbb
aas
mov
dec
lret
aam
lret
jbe
or
into
movsb
mov
test
stos
mov
dec
aas
pop
or
cmp
pop
aaa
dec
mov
leave
hlt
sbb
or
xchg
jbe
int3
mov
jno
into
insl
in
xchg
sub
scas
ljmp
dec
and
das
cmpsl
mov
lcall
adc
push
inc
inc
popa
adc
and
xchg
mov
mov
jle
or
add
iret
cli
sbb
or
and
mov
fwait
int3
in
out
pop
lea
push
mov
int
and
test
pop
fadds
sbb
adc
mov
push
stos
inc
sbb
push
mov
fisubs
lods
or
fidivl
lods
out
dec
retw
xchg
pop
mov
pusha
cmc
or
mov
cmp
xor
lock
mov
ret
mov
mov
out
push
mov
cli
add
pop
loop
mov
imulb
in
testb
ja
xchg
push
sbb
dec
cs
adc
fnstcw
sub
xor
lock
xchg
pop
sub
ror
cmpsl
push
pop
inc
cmp
mov
into
xor
lret
xchg
stos
js
inc
inc
xchg
lock
inc
adc
push
les
xchg
jo
and
mov
inc
daa
add
andb
in
ja
xchg
or
push
xchg
or
shlb
js
icebp
aas
or
test
in
loope
push
push
loope
or
cmp
pop
cmp
pop
dec
popa
mov
rcrl
into
jb
pop
les
jl
mov
add
sbb
lods
push
cli
out
mov
dec
cmp
in
push
imul
sbbb
push
dec
jmp
or
shlb
cli
mov
out
fstl
cli
mov
clc
or
or
lahf
push
das
mov
mov
aas
pop
fiadds
outsl
popf
dec
xchg
out
fwait
ss
pop
test
push
mov
cmp
bound
inc
std
mov
dec
dec
push
aad
jle
fs
cs
mov
xchg
adc
sbb
fldl
mov
hlt
clc
dec
adc
cmp
cld
int3
push
mov
push
xchg
dec
mov
in
push
inc
stc
push
mov
in
lock
movsb
enter
and
mov
push
or
mov
mov
mov
cmp
adc
or
jle
gs
mov
xor
pop
popa
ror
fbstp
push
cmp
lods
jmp
rcrb
sbb
sbb
mov
out
lea
adc
stos
mov
jb
loope
cltd
mov
inc
lods
sbb
sti
aad
add
pushf
lods
testl
pushf
fistl
xor
out
call
in
movsl
aas
pop
pop
cmpb
shrl
cli
jae
enter
mov
inc
push
push
lret
shrl
add
or
lea
xchg
jge
rclb
jo
mov
cli
lret
call
stos
sarl
movsl
sub
inc
push
rcl
mov
cmp
dec
enter
and
cli
sarl
mov
pushf
pusha
sahf
add
dec
data16
je
pop
pop
mov
push
or
or
jg
ror
pop
or
and
stos
push
dec
mov
ljmp
inc
adc
mov
mov
lcall
jg
iret
pop
into
cmp
cs
sbb
adc
movb
in
mov
sbb
outsl
int3
lret
js
or
dec
or
aam
lcall
xchg
out
adc
ds
loope
jle
push
fwait
inc
fldl
jg
mov
xor
push
movsl
mov
dec
in
sub
jae
in
xchg
shlb
fiaddl
adc
lds
daa
mov
push
loopne
lds
jae
xchg
xor
pusha
add
mov
je
cli
fdivp
cmp
push
clc
std
xor
push
cltd
pop
sbb
xchg
xor
mov
mov
push
mov
lcall
jp
pop
inc
xor
sub
fdivrl
push
inc
mov
mov
pushf
xor
mov
idivb
inc
adc
xchg
mov
adc
xchg
into
mov
les
hlt
jmp
enter
or
xchg
fcoml
mov
les
jbe
push
dec
cmpsb
mov
das
sbb
and
push
repz
les
cmp
roll
mov
lret
js
mov
shlb
into
jle
jae
jmp
mov
in
lods
xchg
sub
nop
in
jnp
jae
sbb
add
nop
sbb
mov
popl
mov
inc
jbe
ret
dec
xor
inc
enter
aaa
je
push
insb
jp
pop
jmp
and
lods
adc
sbb
add
fnsave
cmp
js
and
cwtl
es
aaa
jge
clc
xor
cmp
jne
pop
push
adc
sub
lods
pop
shll
pop
stc
addl
inc
test
mov
clc
fs
mov
xorl
pushl
pop
mov
outsl
lret
out
xor
pop
and
pop
sbb
icebp
loope
pop
imul
pop
sti
cs
mov
fmuls
xchg
lcall
xlat
xchg
cs
rorl
js
mov
and
hlt
adc
stos
aas
jg
loope
xchg
ja
adc
push
sahf
cltd
push
mov
int3
ja
sbb
dec
cmp
dec
xchg
adc
sbb
data16
inc
xchg
jmp
pop
int3
incb
push
cli
mov
inc
push
in
push
into
mov
mov
lret
or
scas
test
test
mov
rcrl
xor
mov
jecxz
xchg
arpl
mov
mov
aam
pop
sbb
icebp
ss
add
fisttpll
nop
pop
cmp
stos
push
stos
arpl
mov
push
data16
call
xchg
push
and
mov
add
push
cmc
cmp
fistl
cmp
repnz
out
pushf
data16
mov
mov
repz
test
push
imul
stc
fmuls
push
mov
fsts
push
notl
popa
mov
pusha
ficomps
loopne
je
push
pop
adc
push
aaa
inc
call
pusha
xor
inc
sbb
fwait
mov
pop
add
jae
movsb
fcmovnu
inc
dec
pop
subb
add
xor
adc
or
int
sbb
lret
xor
bound
adc
xchg
sarb
cwtl
popf
jl
das
leave
sub
cmp
es
sar
dec
sbb
and
or
jp
xchg
xor
ljmp
jle
inc
cwtl
mov
mov
pop
fadds
pop
or
shlb
lret
and
push
ret
cmp
cmc
stos
dec
pop
cwtl
jmp
cmpsb
jle
xor
lods
loop
les
lods
xchg
divb
dec
int
mov
inc
dec
testl
ss
movsb
mov
int
mov
jl
push
push
jb
pop
push
dec
in
adc
cmp
ss
xor
xchg
in
hlt
sahf
mov
lret
hlt
xor
inc
cli
mov
push
push
jbe
xor
scas
xor
movsl
inc
icebp
dec
push
sub
out
jge
repnz
or
pop
xor
and
inc
enter
cli
xchg
jle
or
addb
dec
aas
fnsave
and
iret
nop
jbe
mov
dec
jecxz
pop
push
sbb
mov
test
xchg
je
sarb
aad
push
dec
mov
aas
sbb
push
shll
leave
cmp
test
adc
enter
jecxz
and
inc
xor
clc
mov
fisubl
into
adc
jge
inc
push
cli
stc
mov
push
lret
cmp
cmp
repnz
mov
insb
inc
clc
je
inc
aaa
loope
ret
scas
xchg
jg
push
push
lret
loop
popa
jns
dec
push
aaa
icebp
lea
inc
sub
inc
ds
orb
inc
push
outsb
mov
pop
xchg
les
rclb
fisubl
mov
repnz
cltd
mov
insb
ret
pusha
dec
mov
jle
mov
lods
add
enter
or
push
pop
inc
cmpsb
test
mov
xchg
dec
les
push
inc
jle
or
pop
xchg
pushf
nop
outsl
cmp
jg
les
xlat
mov
and
xor
loope
nop
out
lock
add
push
test
sbb
xchg
addb
ret
sub
out
push
inc
ficomps
lock
dec
mov
sar
mov
rcrl
insl
rorl
ret
sub
hlt
or
cmp
movsb
jmp
sbbl
addr16
add
test
cmp
in
push
insl
lods
ret
xor
or
test
gs
in
icebp
sbb
das
pop
pusha
mov
pop
dec
aas
jb
mov
ret
jmp
adc
fs
cli
xchg
cmpsl
dec
adc
ret
fldl
adcb
lret
loope
sub
push
mov
xchg
das
stos
cmp
ds
fidivs
sbb
xor
in
inc
sub
xcrypt-ctr
cmpsl
popf
mov
neg
jle
add
push
inc
int
or
lods
pop
mov
ret
push
aam
jecxz
pop
mov
pop
inc
inc
or
sbb
mov
mov
cli
inc
mov
or
push
dec
int
sbb
add
cli
dec
loope
repnz
ss
je
cmpsb
enter
jae
flds
jmp
or
push
dec
lret
and
inc
lds
mov
cmp
xchg
push
or
ss
mov
pop
push
xchg
je
or
jb
cmpsb
pop
sbb
fsubrs
out
push
pusha
test
inc
les
mov
sub
adc
cld
jge
xchg
sahf
inc
xchg
adc
pop
flds
es
bound
pop
fdivrl
lret
jae
decl
push
cmp
and
mov
mov
add
sbb
mov
inc
faddl
jbe
xor
aas
cmp
outsb
mov
lock
aaa
cmpsl
lahf
std
inc
pop
dec
mov
xor
out
jl
and
popf
mov
jbe
dec
lret
fisubrl
sbb
push
repnz
and
mov
call
ds
inc
and
push
sub
pop
insl
addr16
mov
pop
or
clc
xor
int3
cmp
sbb
sahf
cmpsb
out
jge
stc
mov
loop
fidivs
mov
and
rdmsr
sar
push
pop
stos
sub
xor
mov
popaw
shlb
fnsave
js
cli
ds
ret
sbbb
fnstsw
xchg
dec
push
mov
mov
dec
push
clc
sbbb
cmp
aam
add
inc
push
aas
aaa
mov
insb
cs
loop
cmpsl
fildll
or
sbb
push
mov
in
add
jns
mov
test
aaa
inc
push
movsb
adc
push
sti
es
pop
mov
call
ret
mov
pop
jns
mov
cmp
ds
aad
sub
mov
das
xlat
sti
inc
push
mov
test
loope
ss
pop
mov
test
and
xor
repnz
incb
cmp
ja
mov
cmp
mov
pop
dec
dec
cs
cmc
pop
adc
pop
popf
mov
xchg
in
push
mov
cmp
adc
jecxz
jle
ret
mov
shlb
pop
mov
js
inc
mov
or
push
cmp
inc
enter
sbb
aaa
addr16
iret
and
mov
sbbb
xchg
fstpt
dec
push
sbb
ret
les
mov
lret
stc
mov
mov
inc
ds
pop
aam
mov
fisttpll
repz
aad
lahf
jp
cmpb
in
dec
pop
sbb
ds
pop
icebp
jl
jl
adc
pushl
cmp
mov
filds
push
or
mov
loop
aas
cli
cmc
and
and
push
mov
adc
xor
adc
leave
mov
cmp
push
stc
mov
adc
or
and
mov
mov
push
cmp
test
and
mov
int3
rcr
jns
es
outsl
cmpsb
icebp
std
push
inc
ds
jb
xor
push
inc
fidivrl
popf
ds
aam
mov
es
das
sub
mov
sbb
adcb
push
ret
pop
dec
and
repnz
scas
ss
xor
lahf
jno
cmp
lock
shlb
xlat
fmuls
jbe
mov
and
orl
pop
cmp
mov
xchg
pusha
mov
mov
push
and
adc
cmp
mov
push
imul
ss
jge
cmc
adc
std
out
sbb
sbb
hlt
mov
sub
sbb
aas
xchg
sarb
call
popf
xchg
push
pop
mov
lock
and
mov
mov
outsb
jl
sub
incb
jmp
push
cmp
test
lahf
in
jp
in
xorb
xor
icebp
mov
lods
sub
and
iret
flds
cmp
adc
dec
sub
mov
mov
lahf
mov
shrb
cmp
lret
jns
ds
cmp
lods
push
movsl
aaa
or
cmp
lcall
pop
xor
hlt
mov
mov
dec
jle
mov
mov
push
out
decl
adc
jae
pop
arpl
sub
sub
cs
mov
pushw
daa
xor
testl
dec
dec
pop
sub
cmc
push
adc
cmp
mov
aaa
cli
outsb
push
ss
jmp
sbb
add
mov
cmpl
mov
dec
inc
mov
push
fcoms
cmc
xor
push
sbb
jo
lods
fs
xlat
sbb
das
add
fdivrs
mov
cmp
cmp
adc
mov
inc
add
pop
and
xchg
mov
pushf
jbe
push
mov
stos
cltd
aas
push
pop
cld
mov
push
std
mov
or
cmpsl
add
sbb
or
mov
dec
jle
xchg
inc
cld
hlt
in
cmp
pop
das
outsl
and
add
rclb
movsb
dec
or
subl
xchg
in
test
add
mov
mov
add
es
push
cmp
imulb
sar
pop
pop
ds
jle
lds
inc
lock
xor
fidivrs
jae
add
mov
xor
outsl
test
inc
push
jne
add
fnstcw
inc
rcrl
sub
push
pop
and
pop
add
shll
cmp
pop
loopne
cmp
out
cmp
and
cltd
mov
enter
ljmp
xor
dec
pushf
sub
mov
mov
test
jg
inc
loope
sub
int
fsubp
cld
sahf
pushf
es
adc
mov
mov
pop
jns
or
pop
movb
xor
jle
orl
pop
xor
in
inc
gs
pop
mov
mov
xor
adc
push
mov
xor
jne
inc
push
test
mov
mov
pop
or
adc
ss
sbb
scas
cmp
pop
call
hlt
lods
mov
mov
bnd
call
push
pop
aaa
push
sub
in
into
dec
mov
bound
lea
addr16
fldt
pop
mov
dec
in
jle
jle
in
adc
jp
cld
sbb
rcll
cmp
pop
mov
int
incb
aaa
ljmp
gs
in
mov
aas
lds
xchg
xchg
shll
xchg
sbb
inc
xchg
mov
inc
lods
push
mov
pop
mov
and
inc
mov
pinsrw
out
dec
ds
add
xor
insb
cmp
cs
mov
inc
mov
movsl
xchg
push
fwait
dec
cwtl
jb
loopne
in
stc
insl
lret
xchg
push
push
inc
ds
aam
mov
xor
push
dec
xor
mov
lcall
aaa
push
ret
push
inc
jecxz
daa
lods
leave
ds
rclb
adc
mov
fisubrs
aaa
pusha
mov
jbe
cmp
cltd
cmpsb
dec
jo
lret
inc
aas
loopne
pop
inc
cs
ret
jnp
aaa
xor
frstor
mov
gs
hlt
mov
and
cmpsb
xor
xchg
notl
cmp
pop
or
ds
mov
pusha
dec
jmp
lods
push
mov
xor
aaa
push
aam
sbb
inc
ds
mov
inc
into
mov
mov
dec
mov
cs
pop
call
es
inc
pop
cmp
aas
cmp
fmull
cld
cs
sub
mov
aaa
mov
mov
bnd
jbe
imul
pop
mov
add
lods
mov
push
std
inc
cmp
icebp
pop
lahf
xchg
sub
xlat
dec
adc
ljmp
and
divl
mov
sub
nop
imul
cmpsl
es
dec
mov
movsb
pusha
dec
adc
sbb
xor
push
mov
mov
pop
popa
xchg
or
push
out
out
arpl
mov
insl
push
es
mov
sub
xor
fdivs
xchg
and
iret
mov
call
mov
mov
cs
dec
push
das
cmpsl
imul
mov
test
ds
call
fistl
pop
sbb
mov
addb
cmp
sbb
add
and
adc
popf
mov
jle
and
stc
pop
xor
push
cmpl
loopne
pusha
subl
ds
stos
xchg
and
cs
mov
dec
push
inc
and
inc
add
outsl
test
sub
jno
mov
or
inc
and
fstp
mov
jb
fwait
inc
pop
xchg
pop
fcomps
xchg
out
dec
push
sbb
roll
lret
xchg
cmp
add
decb
sbb
sbb
in
and
push
shll
mov
adc
int
das
loope
mov
ljmp
mov
and
adc
mov
mov
add
sbb
test
xor
fstps
js
push
mov
hlt
rorb
xor
cs
enter
push
dec
inc
ss
mov
xor
test
mov
mov
cli
sbb
mov
or
dec
mov
adc
add
cltd
repnz
fs
jl
and
push
fbstp
adc
dec
jle
fwait
inc
bound
mov
ds
out
sub
popa
push
xlat
aaa
pop
lods
stos
pop
xor
mov
jbe
xor
pop
cmp
ret
jp
mov
iret
insb
loope
lods
mov
cmp
push
mov
mov
mov
je
xchg
adc
nop
loope
ss
or
pop
adc
jp
jp
inc
mov
sub
subl
pop
ds
and
aam
adc
sbb
inc
or
mov
push
stos
ja
insl
push
push
mov
es
data16
mov
adc
loop,pt
add
xchg
jecxz
sbb
movsb
es
cmp
adc
aas
sarb
movsl
add
pop
int
in
push
push
aaa
ds
das
mov
push
mov
aas
or
xchg
mov
push
jbe
inc
iret
lret
xor
mov
pop
inc
cwtl
movsl
in
mov
push
loop
sahf
scas
mov
xchg
movsl
out
sti
mov
add
aaa
mov
movsb
aaa
pop
mov
mov
mov
idivb
push
inc
mov
loop
ffree
arpl
dec
fidivl
es
pushf
dec
mov
rorb
leave
pop
loop
dec
hlt
inc
sbbl
inc
push
sbb
pop
ljmp
dec
adc
cmp
pop
arpl
adc
nop
sbb
mov
push
pop
push
dec
ds
les
mov
xor
mov
call
inc
rcrl
shll
sub
mov
out
xor
decb
mov
das
dec
adc
cmpsl
outsb
mull
pop
aaa
movsl
fwait
aaa
lds
int
mov
push
xchg
insb
mov
insl
sahf
andb
pop
push
lods
pop
pop
mov
cld
xchg
int
and
xor
lods
shrl
cmp
enter
jg
dec
add
mov
ror
xchg
ds
xor
jne
push
jecxz
inc
jae
adc
cltd
push
aad
xchg
aaa
jp,pt
and
stc
pop
inc
pop
or
mov
rcrl
aaa
push
add
cs
aas
mov
push
idiv
and
sbb
fidivl
es
mov
loopne
pusha
inc
xchg
xorl
mov
and
inc
mov
pop
aas
out
hlt
pop
mov
repz
mov
dec
mov
xchg
jns
repz
mov
mov
inc
inc
and
cmp
cmp
aad
push
xor
div
jb
push
pop
dec
hlt
push
lea
out
loopne
ds
jno
jbe
or
adc
pop
je
pop
std
cmp
aaa
dec
push
pop
repnz
fstps
ljmp
jle
or
cwtl
jmp
into
pop
insb
cmp
outsl
arpl
dec
fldz
cmp
cmp
or
mov
out
lods
xchg
ds
and
sbb
mov
scas
int
lahf
adc
adc
cs
jge
cmp
dec
or
mov
mov
jl
ret
xor
frstor
icebp
jo
and
jns
push
aad
push
xchg
mov
push
lock
mov
cwtl
xor
sbb
sub
ret
pushf
mov
cmp
pop
mov
mov
cmp
pop
push
inc
cmpsb
mov
hlt
loope
cmp
into
xor
aad
bound
mov
push
xchg
adc
cmp
mov
leave
pop
mov
pop
in
adc
outsl
cmp
stc
mov
push
int3
cmc
int3
pop
mov
outsl
cmpsb
out
cmp
mov
mov
or
push
jo
std
mov
call
in
jp
dec
ds
ja
and
or
or
fwait
jbe
dec
cmp
es
mov
pop
xchg
test
pop
loope
and
push
sbb
clc
es
xchg
or
cmp
aas
jl
xchg
xlat
test
sub
inc
lea
test
out
sbb
fisubrs
push
mov
jne
ror
cs
xchg
pop
cs
out
pop
movsl
mov
jg
fildl
sub
into
fildl
bsf
lea
push
in
sub
repnz
jle
dec
mov
arpl
mov
pop
mov
dec
push
add
sub
push
jbe
loop
in
sbb
mov
xchg
cmp
add
pop
jp
push
pushf
pop
lods
add
or
popa
add
and
out
mov
xor
test
lret
jecxz
rclb
ds
dec
ret
inc
jp
and
sub
insl
mov
ds
sub
sbb
sub
fcompl
rcl
add
pop
aam
add
pop
sbb
std
lcall
loopne
mov
inc
ja
daa
insl
jmp
pop
cmp
add
cli
cmp
push
sbb
jne,pt
sarb
imul
test
cmpsl
das
fstpl
aaa
jg
push
inc
dec
xor
mov
std
inc
movsl
or
mov
frndint
scas
loope
shl
xor
jge
out
inc
jle
fisttpl
inc
xchg
mov
stos
xor
rcll
bnd
cmp
jns
jge
cmp
pop
test
std
push
lods
cmp
ja
push
push
xor
hlt
mov
xor
int
jle
mul
xchg
push
mov
add
add
sbb
push
sbbb
lods
pop
or
mov
push
adc
adc
or
pop
test
dec
push
add
orl
rcrb
jg
xor
mov
ja
or
ds
inc
xlat
or
jmp
pop
test
or
jbe
pop
xor
daa
cmp
in
lcall
or
test
mov
outsl
adc
mov
sbb
mov
es
cmp
cmpsb
sub
clc
lock
in
mov
inc
rorb
aas
shrl
mov
jg
mov
movb
push
cs
into
outsb
and
lahf
ds
lds
adc
imul
je
and
loope
xchg
out
jl
in
and
shl
adc
repnz
scas
cltd
fucomip
mov
pop
ds
sbb
xchg
add
xor
xchg
pop
loopne
cs
adc
mov
xchg
xchg
jbe
mov
ficoms
mov
xchg
adc
fsts
fisttpl
rorl
adc
ret
pusha
push
mov
lahf
adc
fldl
add
dec
add
xchg
les
ja
mov
rorl
ds
jg
cmp
pop
xchg
outsl
jle
in
in
ficompl
inc
imul
mov
and
sbb
ds
imul
cmpsl
or
mov
adc
aaa
sbb
insl
outsb
push
mov
push
inc
insb
mov
in
sub
jmp
mov
fsubs
hlt
jnp
or
fistpll
xlat
in
mov
add
call
lret
gs
cltd
popa
shlb
or
mov
xor
ljmp
sub
sbb
gs
jp
jp
test
xor
out
xor
push
push
outsl
pop
xchg
imul
in
mov
push
jge
and
ss
fdivs
xor
lods
sub
lret
push
sbbl
out
ret
push
add
loop
mov
test
cmp
or
loop
ret
pusha
lods
es
roll
pop
shrb
and
call
mov
inc
dec
stc
pop
push
dec
loopne
mov
fs
mov
push
call
pushf
fwait
sub
jmp
mov
fstl
and
jbe
test
lods
mov
cmpl
mov
push
les
jle
std
out
call
push
daa
shl
es
hlt
outsb
ds
ja
popa
out
jmp
hlt
push
popf
call
faddp
pop
pop
mov
scas
xchg
sbb
lret
lods
rcrl
lcall
loope
sub
outsb
dec
push
sti
inc
aas
mov
push
leave
add
pop
push
jle
dec
inc
leave
movsb
std
push
add
test
mov
pop
lcall
cld
ds
adc
push
inc
icebp
inc
imul
cmc
xchg
cs
xchg
cli
pop
mov
mov
jmp
xchg
inc
repz
ja
mov
push
imul
stc
jo
hlt
cmp
mov
pop
pop
sub
rcll
cmp
cmp
adc
repnz
idiv
rclb
clc
cmpsb
scas
add
decl
leave
mov
sbb
cmp
lods
jecxz
push
cwtl
xchg
flds
inc
and
dec
mov
icebp
call
jae
test
dec
stos
dec
mov
mov
push
je
flds
pop
aam
cmp
inc
call
leave
cmp
jnp
jmp
shr
push
lock
and
cmp
iret
insl
test
es
dec
stc
negb
mov
mov
jmp
inc
cwtl
push
lret
jmp
mov
and
push
jne
es
insb
in
mov
std
lods
icebp
flds
pop
mov
test
aaa
jo
mov
loope
adc
ljmp
mov
pop
les
jle
ja
repnz
outsl
mov
push
leave
pop
mov
popf
push
push
addl
sarb
je
loopne
push
fs
inc
inc
imul
in
sub
mov
mov
inc
lcall
xchg
inc
cld
xchg
dec
es
jmp
cmp
sub
xor
cmp
mov
ljmp
test
cmp
mov
jl
mov
jae
iret
jle
adc
in
add
push
dec
lds
test
lret
pop
inc
shll
xchg
retw
ss
je
inc
pop
out
or
adc
mov
lahf
stos
ficoml
inc
mov
sahf
adc
jmp
cmp
push
ret
mov
hlt
out
ret
out
cmpsb
push
faddl
mov
jae
notb
rorl
sbbl
mov
sahf
imulb
test
aam
test
mov
sbb
dec
cmpsl
cmp
lods
popf
mov
mov
inc
sub
mov
xchg
aaa
dec
pop
inc
mov
inc
xor
or
mov
mov
jbe
cwtl
dec
pop
mov
ljmp
mov
out
or
sti
test
mov
sahf
mov
mov
fidivl
xor
mov
mov
add
cmpsb
adc
xor
mov
mov
inc
aas
aaa
mov
pop
fdivrl
pop
sbb
jmp
xchg
cmp
add
enter
mov
dec
mov
aad
rcll
pop
sahf
or
jge
add
in
jo
sub
pop
xchg
and
xchg
push
sarl
jl
push
add
fidivs
add
sub
std
push
pop
ret
aas
adcl
ds
pushf
jl
mov
movsb
pop
mov
jno,pn
mov
pop
dec
sarb
push
inc
pop
pop
test
sarb
mov
out
push
scas
xor
faddp
aad
mov
or
and
jbe
lods
jle
ss
dec
and
jns
inc
shll
inc
inc
inc
inc
mov
mov
std
int
mov
mov
decl
sti
inc
scas
dec
xchg
push
fdivs
sbbb
add
add
pop
stos
push
mov
inc
mov
xchg
xlat
test
pop
sti
mov
sbb
jle
popa
fsts
cltd
inc
jge
mov
mov
icebp
pop
mov
mov
ret
fs
push
mov
sub
cmp
pop
mov
stos
xchg
cmp
stos
ficoms
mov
inc
les
xchg
push
pop
test
sub
aas
in
gs
xchg
pop
pop
les
sti
inc
push
inc
adc
dec
movsb
add
test
cmp
xchg
aaa
das
call
push
jb
ds
push
inc
int3
sbb
inc
insb
lcall
mov
mov
mov
mov
and
call
rolb
fcmovnb
xchg
bound
push
xor
fnstcw
adc
mov
jno
mov
test
jbe
jle
mov
xchg
push
inc
cwtl
cmp
and
inc
mov
mov
lcall
aaa
ds
adc
rolb
xorb
mov
sbbl
push
outsl
fistpll
xor
push
xor
inc
shrb
lea
and
ret
push
mov
dec
and
push
jmp
mov
flds
insb
pop
sub
rcr
mov
pop
jne
rolb
call
inc
test
jmp
inc
pop
push
add
inc
xchg
jmp
fdivrs
cld
sbb
dec
loop
lock
enter
push
mov
scas
push
cmp
out
xor
ds
ret
push
lds
xor
pusha
push
scas
aas
mov
dec
jp
sarb
jnp
cmp
xor
inc
call
and
out
dec
adc
and
mov
mov
jo
xchg
out
mov
cmp
adc
cmp
mov
pusha
pop
pop
movsl
mov
les
rcl
pop
daa
xor
in
jb
cmp
sub
sub
mov
fwait
push
push
aaa
aam
add
stc
movsb
push
cld
cmp
shlb
adc
mov
ja
and
mov
mov
lea
mov
xor
repz
fdivs
gs
ds
dec
repz
inc
mov
stc
inc
sbb
sbb
dec
sti
xor
jle
cwtl
mov
add
add
sub
dec
mov
dec
fdivl
jb
inc
loopne
mull
jnp
pop
pusha
mov
sbb
lret
and
das
xor
das
jns
stc
sbb
xor
cwtl
mov
inc
shll
aas
dec
jbe
mov
iret
sti
je
jp
sbb
push
mov
jmp
pop
pop
jbe
or
enter
dec
test
mov
and
sbb
jle
cmp
or
jae
push
cmp
cmp
fnstsw
push
jg
pop
and
and
sub
les
arpl
push
stc
xchg
pusha
inc
pop
mov
and
and
xchg
sub
mov
lea
in
xor
inc
cltd
sub
ror
jb
fwait
cwtl
imul
cmp
dec
cmp
xchg
jmp
dec
gs
jno
lret
cmp
pop
and
adc
pop
sbb
es
sub
xor
aaa
cs
ds
jge
pop
loop
incl
lcall
mov
cwtl
sub
mov
loopne
push
lcall
loope
int
cmpsl
cmp
test
mov
cli
fidivrs
sub
mov
push
out
fcoml
popa
jb
cli
push
mov
mov
add
popa
or
xchg
daa
xchg
loop
cltd
sub
adc
sbb
cmp
enter
cld
inc
jl
test
ss
cli
push
sub
add
adc
or
negb
lret
sbb
and
mov
mov
mov
sti
repz
push
xor
dec
or
or
mov
or
dec
cmp
pusha
inc
es
mov
mov
pop
cmc
fs
popa
xchg
mov
push
lds
sbb
fstps
pop
push
repnz
sbb
aaa
loope
stc
fsubs
std
out
loop
jns
adc
mov
fdivrl
daa
mov
cwtl
xchg
dec
cld
push
jb
ds
fidivs
stc
pop
pop
inc
mov
push
cli
int
push
inc
jmp
cmp
mov
lret
out
inc
mov
xchg
ljmp
push
push
aas
xor
push
jo
lea
adc
lds
in
inc
push
test
or
stos
jl
sub
or
adc
les
lret
mov
xchg
es
mov
test
xchg
aas
lcall
scas
jno
sti
jae
dec
lret
xor
jecxz
sub
imul
inc
jge
je
or
cld
and
inc
imul
es
xor
push
jle,pt
loopne
dec
jae
xor
or
push
push
xor
jb
xchg
mov
dec
cmpsb
and
add
lds
pop
ds
pop
sbb
popa
dec
xor
data16
inc
dec
aad
sbbl
push
ds
or
xchg
add
jle
pop
data16
loop
mov
lcall
out
or
and
ds
push
cmc
mov
sub
add
leave
mov
ds
cmp
gs
loop
ds
or
add
xor
mov
aas
imul
adc
inc
and
add
enter
je
ds
sbb
loope
out
mov
add
enter
mov
xchg
mov
xchg
and
sub
lods
mov
push
xchg
dec
shlb
push
add
ljmp
dec
addb
inc
clc
xchg
in
repz
jno
inc
and
mov
or
dec
lds
push
xchg
xor
push
cltd
sbb
in
ds
inc
xor
and
insb
cmp
ds
ret
xchg
fnsave
test
std
jae
ds
sub
test
insb
mov
fadds
ds
roll
fs
cmp
push
addr16
sbb
push
cs
imul
jno
ljmp
mov
ja
dec
sub
xor
test
out
fadds
push
mov
jb
into
pop
push
std
lock
ds
addr16
xor
sbb
out
jmp
in
mov
cltd
and
sub
mov
outsl
arpl
push
xchg
xchg
or
ds
les
jnp
xchg
loopne
push
jns
xor
inc
xlat
es
lcall
mov
jbe
jp
or
xchg
ror
in
mov
pop
ja
adc
pop
or
ds
pop
hlt
cmc
or
jecxz
sbb
imul
loope
dec
or
insl
adc
inc
jecxz
ds
insb
out
and
adc
xchg
std
sbb
jle
mov
cmp
lods
jne
rorl
jp
xor
dec
sarb
or
mov
cmp
icebp
lcall
xchg
sub
daa
jg
imul
mov
mov
insb
mov
mov
in
fdiv
sahf
dec
pop
cmp
inc
mov
scas
inc
ja
bnd
and
or
test
ds
dec
and
mov
push
ds
mov
movsb
add
fnstcw
lods
and
mov
mov
loope
sbb
adc
mov
jle
shlb
inc
xchg
and
push
subl
lea
out
fstpl
jge
cmp
aaa
pop
cmp
mov
or
ds
aad
adcb
add
rorb
pop
xor
ds
mov
aas
push
mov
jle
push
out
test
pop
adc
mov
jbe
shll
std
jne
cltd
xor
fstl
ds
jae
loop
aad
scas
fdivrl
adc
icebp
pop
into
popf
lds
stos
cmp
sbb
push
cwtl
add
push
lcall
idivb
dec
ja
andb
jne
xor
push
push
dec
aad
cmpsb
std
outsl
decb
and
cltd
push
cmp
xchg
add
ds
or
cwtl
ds
stos
addl
popa
sbb
lret
loopne
sbb
add
mov
fbstp
mov
sbb
in
push
push
leave
xchg
xor
jmp
mov
addl
aas
repnz
popa
jns,pn
das
data16
ds
adc
jbe
lret
push
pop
jmp
inc
cmpb
repnz
xchg
std
ds
xorl
inc
sbb
mov
fidivrs
push
popa
mov
mull
stc
and
repz
add
add
xor
pop
test
and
fisubs
mov
or
repz
lcall
ds
jmp
and
jle
pop
neg
test
mov
jecxz
insb
add
das
and
mov
sbb
and
lods
pushf
add
and
dec
lds
cmpb
adc
dec
dec
xor
out
ds
add
fs
jl
mov
cmpsb
sbb
fidivs
filds
xchg
pushf
pop
sub
xor
mov
lcall
and
add
jae
dec
inc
outsb
addr16
lret
sub
cs
xchg
sub
mov
jle
xlat
push
push
jl
mov
popa
out
fwait
xor
pop
hlt
mov
stos
insl
sbb
pop
std
sub
jle
enter
sbb
xor
addb
mov
dec
test
dec
inc
jno
xchg
xor
int3
inc
mov
xor
inc
dec
imul
into
mov
mov
mov
jne
pop
xlat
push
fsubs
mov
mov
bound
mov
pop
push
sub
push
jns
roll
push
ds
insb
or
cmp
mov
scas
and
xor
xchg
sbb
dec
out
dec
cltd
das
push
ds
sub
pop
es
xor
push
mov
cmp
pop
cmp
adc
mov
mov
sub
push
push
add
sbbb
out
cmc
xchg
cli
mov
ds
cmp
xchg
call
jne
mov
xchg
pop
fisttpl
ss
pop
fnstsw
inc
jb
loope
lods
sbb
push
mov
loopne,pt
mov
sbb
ds
sbb
or
xchg
cmp
out
adc
dec
mov
push
inc
out
loopne
ds
jg
cmp
loope
aaa
and
data16
and
mov
daa
sub
add
sbb
mov
shrl
mov
adcb
push
and
ds
add
mov
ds
dec
or
push
test
mov
pushf
jnp
frstpm(287
jecxz
pop
lock
mov
xchg
mulb
scas
xor
mov
pop
pop
push
fcomp
lods
jne,pt
push
pusha
hlt
mov
mov
jmp
lock
dec
jns
mov
push
ds
push
cmp
xlat
mov
mov
cs
xor
adc
sbb
inc
jecxz
push
shrl
add
mov
out
lds
mov
aad
cmp
push
cld
lret
xchg
pop
ds
stos
mov
push
into
xchg
inc
mov
dec
stos
loop
push
mov
les
push
ret
dec
add
cmp
jae
pop
push
rclb
cmpsb
or
inc
inc
sub
and
cmpsl
sub
divl
aas
pop
dec
mov
ds
xchg
cwtl
int3
sti
stc
fdiv
inc
gs
cs
mov
mov
mov
dec
jge
sub
das
push
inc
out
mov
ds
repnz
push
push
or
addr16
daa
mov
pop
sbb
jle
pop
mov
adc
cli
test
outsb
push
inc
fwait
xor
jnp
and
jp
add
mov
xor
es
or
xor
lret
mov
mov
dec
sbb
dec
dec
and
jle
mov
push
adcl
fstpl
out
xchg
inc
jl
inc
lcall
mov
fldl
xor
mov
sar
sub
ret
mov
sbb
movsb
jbe
or
stos
sti
cli
lea
xchg
add
rol
xchg
fs
test
mov
dec
add
mov
cmp
adcb
xor
push
dec
es
es
xor
test
sbb
dec
sbb
or
in
xchg
jl
movsb
fiadds
repz
push
add
push
jae
or
jge
cmpsb
flds
push
dec
sub
mov
cmp
das
icebp
cmp
jle
or
shl
pop
dec
pop
bound
inc
xor
jg
lret
mov
and
leave
cmp
pop
inc
pop
inc
or
sub
notl
xchg
cld
je
int
loop
sub
mov
cmpl
sbb
jb
mov
xchg
sbb
cmp
inc
push
hlt
hlt
pop
or
mov
dec
mov
inc
cwtl
shrb
call
push
dec
shl
jne
pop
imul
sti
repz
jnp
dec
push
aas
inc
stc
popa
jle
movsb
cli
fstl
mov
mov
scas
sub
insl
out
outsl
cmpsl
outsl
out
aas
inc
xchg
ficoms
push
pop
enter
mov
in
insb
pop
mov
leave
dec
test
mov
aaa
fdivrs
mov
scas
sbbb
sbb
movsl
cmp
sub
repnz
inc
mov
mov
pop
sbb
and
mov
sahf
mov
cs
inc
sarb
push
mov
inc
dec
lret
lods
lock
pop
cwtl
xchg
adc
or
cmpsb
sbb
sbb
ja
in
rorl
inc
in
out
cmp
bound
sbb
cli
xor
mov
push
lock
pop
push
and
adc
xchg
xor
imul
paddb
lret
inc
scas
sbb
pop
cmp
push
sub
imul
cwtl
jge
cwtl
fwait
aam
enter
lock
daa
jb
push
pushf
xchg
out
cwtl
jecxz
jg
orl
lret
in
mov
lret
icebp
js
ficoml
push
dec
mov
sbb
sbb
std
dec
lret
daa
movsb
push
ss
mov
pop
shll
lret
mov
push
in
jle
xor
fs
jb
xchg
inc
je
inc
jae
lahf
adc
mov
adc
std
inc
into
or
mov
push
mov
push
fisubrl
push
scas
scas
push
popa
popa
adc
sahf
adc
fisubrs
cmp
and
stc
addr16
outsb
pop
and
lret
cmp
div
decl
cs
pop
mov
and
pop
xchg
inc
stos
cli
cmp
push
jbe
cmp
mov
sbb
out
out
adc
inc
add
cld
cwtl
cmp
adc
dec
outsb
repz
repz
jae
mulb
or
lds
pop
jb
push
push
xchg
ficoms
xor
inc
outsb
sub
or
jp
cwtl
dec
dec
inc
cmp
mov
and
xor
push
jno
aas
icebp
jne
dec
cmp
cwtl
push
mov
and
sub
into
dec
pop
scas
xor
insl
sub
xor
push
mov
std
jl
sar
es
dec
mov
mov
dec
mov
mov
add
mov
js
adc
outsl
in
cmp
popa
xorl
cmp
movsb
mov
das
or
mov
jo
ss
stos
jecxz
ja
jmp
push
xor
ja
mov
sub
fisttps
ficompl
xor
or
xchg
ja
aam
cwtl
rclb
adc
mov
stos
int
push
push
jle
int3
jg
mov
inc
lret
cs
adc
out
xor
insb
test
lcall
popf
mov
mov
mov
in
push
sub
pushf
addl
xchg
lea
jecxz
pusha
fwait
test
idivb
inc
adc
addr16
sti
mulb
inc
andl
xor
xor
xor
cmp
sbb
jl
lret
inc
mov
push
jl
pop
jmp
outsb
cmpsl
lret
pop
lods
sbb
push
ret
mov
mov
movsl
lahf
xor
pop
out
rolb
pop
pop
jnp
push
cmp
outsl
fstpl
stos
pop
mov
cmc
cmp
push
jb
icebp
cmp
ds
add
bound
cmpsl
sbb
cmp
and
ss
neg
push
and
jbe
inc
dec
mov
adc
roll
inc
cmpsb
hlt
lahf
cmp
push
pop
es
push
int
jne
mov
aad
sub
icebp
and
xchg
ret
addr16
jle
lods
divl
lret
sub
es
xor
rolb
clc
iret
clc
pop
push
mov
std
bound
cmp
sahf
jo
fcompl
push
cli
ficompl
mov
push
imul
gs
push
lret
or
fwait
jb
int
fldt
pop
sbb
xor
sbb
push
add
scas
ja
mul
mov
daa
push
negb
adc
test
addb
insl
lret
push
jp
or
aas
dec
pop
cmp
sub
adc
lcall
or
xor
scas
mov
adc
out
add
pusha
lret
out
dec
lcall
clc
add
inc
dec
dec
and
testl
push
fwait
outsl
push
and
lcall
inc
push
xor
push
sub
ds
decl
clc
push
pop
mov
xor
fisttpll
in
mov
xchg
rolb
push
out
push
fimuls
cmc
xor
lret
mov
or
sbb
adcl
or
andb
ds
mov
push
jecxz
inc
sahf
js
pop
push
adc
jle
pop
add
fwait
cli
sbb
ss
nop
cmp
xchg
fdivrl
xchg
fcoml
xchg
outsl
subb
movsl
mov
cmp
jl
aaa
enter
or
push
popf
ja
cs
fnstcw
push
out
jecxz
mov
jne,pt
xchg
enter
mov
in
push
and
call
frstor
jg
mov
testb
sbb
out
scas
push
mov
xchg
mov
cmp
add
cmp
xchg
loope
cmp
or
jp
sbb
lret
xchg
lret
fwait
adc
cmc
adc
jnp
cmp
outsb
add
dec
sbb
cmp
outsl
lret
mov
dec
adc
and
push
push
pop
mov
cli
enter
js
rclb
subl
xor
push
sub
dec
pop
ret
out
mov
jp
inc
sahf
xor
aad
pop
add
add
div
mov
daa
jne
jbe
pop
cmp
jb
push
inc
push
mov
inc
lahf
sub
sbbb
inc
in
fdivrs
xchg
mov
bound
aas
or
cmc
pop
jno
ds
insl
sub
xchg
cli
mov
data16
mov
mulb
inc
push
ret
push
nopl
mov
mov
jbe
mov
xor
mov
jge
and
test
pop
repnz
cwtl
lret
stc
push
xchg
push
call
dec
cmp
pop
cmp
loop
movsb
mov
cmp
sbb
pop
pop
jmp
jne
xor
dec
and
leave
add
out
dec
cmp
fcmovb
mov
push
dec
cmc
pop
jae
xchg
inc
cmp
incb
or
push
scas
cs
lock
mov
or
dec
mov
andl
imul
mov
sbb
divb
mov
pop
dec
and
lcall
mov
jbe
sub
aaa
or
inc
sti
enter
out
sbb
and
push
popa
xchg
cmp
add
push
dec
dec
je
sub
out
es
es
jle
push
mov
mov
jbe
nop
and
dec
xchg
or
int3
pop
adc
mov
stc
leave
xchg
iret
sbbl
dec
rol
mov
fwait
inc
xor
mov
sbb
push
cli
xchg
mov
inc
mov
push
xchg
xor
outsb
pushf
xor
cs
test
mov
mov
incl
mov
ds
jle,pn
jnp
rcrb
push
mov
mov
cmp
mov
jae
sbb
cmp
mov
sub
jl
jp
mov
mov
add
cmpl
push
mov
push
cld
imul
pop
lret
cmc
xchg
loope
adc
jne
mov
hlt
xchg
push
mov
loop
imul
lcall
pushw
jbe
add
push
scas
cmp
cmp
xor
fmull
fisubrs
xor
dec
mov
sub
shrb
mov
cmpsb
add
pushf
sbb
popa
rol
icebp
pop
iret
push
mov
out
push
and
repz
and
sbb
loopne
inc
in
push
sbb
out
push
sub
mov
cmc
ljmp
mov
cmp
in
add
push
imul
jp
ljmp
mov
cltd
inc
sbb
pop
pop
enter
bound
push
ss
pop
popa
xor
imul
xchg
pop
ficomps
push
xchg
je
lock
xor
and
daa
xchg
sbb
ret
mov
dec
pop
outsl
dec
sbb
inc
jne
leave
shlb
mov
aaa
andl
repz
in
cmpsb
js
mov
pushf
mov
mov
std
cli
xor
scas
cmp
xor
aaa
stc
enter
stos
ss
mov
call
sub
mov
xlat
jne
aad
or
xchg
jle
jmp
daa
loop
adc
mov
jo
lret
dec
packssdw
pop
dec
shlb
pop
or
std
lea
es
and
add
push
fcomps
pop
pop
adcl
daa
mov
push
loopne
orl
cs
je
clc
test
mov
sub
cld
testb
in
xor
mov
mov
push
jl
loope
sarb
mov
add
fcmovnb
mov
mov
es
into
xor
insl
push
add
loope
aam
aas
mov
scas
push
mov
jne
or
mov
mov
mov
mov
sub
mov
push
sub
pushf
idivl
bound
pop
test
push
mov
mov
xchg
pushf
fwait
sub
pop
cmp
clc
inc
inc
sbb
aas
test
mov
mov
aad
jbe
stos
dec
cwtl
ja
push
dec
mov
movsb
mov
es
mov
adc
dec
lret
loope
jns
call
jmp
or
sti
ror
fcomip
adc
fistpll
dec
or
mov
sbb
jbe
js
mov
adc
jmp
jle
inc
push
arpl
fs
cltd
jle
ja
iret
sbb
mov
mul
es
fiaddl
inc
pop
ficoms
cmp
add
enter
jl
cld
jnp
lods
das
or
jne
add
ds
jg
stos
or
fnstsw
xchg
jae
sti
cli
adc
mov
or
bound
cmpl
mov
add
adc
adc
pop
adc
jle
movsb
or
out
stc
lea
pop
cli
imul
mov
in
jo
sbb
cwtl
pop
fs
push
pop
push
jle
sbb
icebp
xchg
stc
ds
push
ljmp
sbb
lret
jg
jbe
mov
cmp
push
sbb
add
pop
push
lret
sub
loope
jno
orb
pop
jp
pop
push
push
dec
push
mov
jae
pop
push
dec
popf
les
les
je
inc
jg
xchg
xor
push
loopne
pop
or
cwtl
outsl
cmp
stc
sub
mov
lods
repz
in
lret
daa
push
lret
mov
mov
xlat
and
nop
fmul
pop
aaa
mov
fucomp
test
cs
sbb
mov
cmpb
jne
sarb
jb
adc
cmpsb
jecxz
fisubs
popf
iret
scas
cmp
mov
add
lock
imul
pop
push
inc
and
mov
and
xor
sbb
mov
dec
movsl
rcll
mov
lret
repnz
dec
arpl
and
pop
and
mov
mov
inc
and
adc
mov
in
enter
or
cmpb
mov
in
repnz
mov
inc
std
fs
cli
push
pop
lea
je
lret
cmp
xchg
insl
inc
lcall
psraw
inc
or
mov
test
xchg
fnstsw
popa
rcrl
lea
mov
loope
ss
sti
popa
cmp
mov
cmc
pop
arpl
mov
push
imul
add
dec
lgs
inc
cltd
test
pop
dec
jne
ds
test
mov
in
mov
mov
inc
cmpsl
test
fcoms
jge
mov
aad
ficoms
sub
add
mov
fnstenv
xor
push
mov
mov
ds
push
mov
xchg
daa
pop
addr16
or
in
inc
pop
mov
cmc
ds
add
shll
pop
mov
lret
jbe
ds
dec
sbb
mov
cmpl
das
hlt
xchg
lea
rorl
mov
sub
test
stos
jp
ds
daa
gs
cli
push
xor
push
mov
jne
push
jge
cmp
divl
or
xlat
arpl
mov
mov
ds
sub
in
mov
andb
rcrb
mov
ds
xchg
xchg
sarl
mov
sub
ds
inc
daa
inc
jo
sbb
push
aaa
sbbl
xor
adc
mov
test
jmp
fisubrl
jne
rorb
adc
pop
push
jle
adc
out
cmp
add
or
cmp
and
mov
cmp
adc
sbbb
dec
jg
ds
xchg
es
adc
inc
in
cmp
loopne
adc
lcall
mov
push
in
add
dec
pushf
jp
adc
inc
loop
mov
pusha
mov
aam
fcmovnbe
jle
test
fdivrs
cmpl
push
jl
movb
mov
std
ss
cmp
cmp
cmc
mov
mov
dec
and
outsl
sbb
icebp
fidivrl
jmp
cmp
push
mov
in
mov
daa
dec
in
sar
int
into
cltd
fdivrs
push
inc
mov
mov
push
xor
dec
test
sub
fstpt
mov
icebp
mov
mov
int3
sarb
mov
fsub
outsb
movsb
sti
push
ds
cmpsb
in
mov
jae
push
lea
adc
adc
movsl
cld
jp,pt
in
or
jnp,pt
pop
outsb
cs
or
shl
pop
aas
and
pop
or
pop
mov
cmpsl
icebp
mov
xchg
jo
cs
sbb
hlt
push
inc
or
ds
into
jge
and
adc
mov
aas
or
scas
jle
outsb
les
sub
inc
pop
data16
cmp
arpl
lret
cmp
in
mov
loopne
or
addl
comiss
and
jo
mov
ret
cmpsb
jmp
ds
pop
xor
inc
jecxz
inc
dec
scas
ds
mov
xor
ds
sbb
inc
push
movsl
cs
mov
push
sbb
stc
nop
sbb
in
mov
fsubr
aam
adc
and
pop
inc
add
and
imul
jmp
and
mov
cltd
repnz
push
adc
gs
int
inc
lods
imulb
subb
pop
push
insb
arpl
addr16
xlat
mull
movsl
xchg
jae
inc
mov
push
fsubl
outsb
out
mov
xchg
out
test
push
and
bound
push
pop
or
xchg
data16
in
lcall
xchg
cli
mov
inc
sub
push
mov
sbb
sbb
in
sub
or
repnz
fstl
pop
jne
test
inc
imul
jle
lods
add
sub
std
popf
mov
inc
xchg
pop
lods
pop
push
dec
push
inc
lock
pop
and
ds
js
shlb
loopne
in
push
xchg
and
mov
adc
mov
out
push
jp
xchg
xlat
dec
popa
in
cmp
mov
xchg
mov
xchg
shll
inc
dec
xor
popf
push
mov
ljmp
jecxz
inc
mov
gs
aad
push
mov
ds
add
punpckhbw
ja
lret
lahf
test
push
rol
mov
sub
sub
pusha
ds
outsl
cmp
ja,pt
scas
pop
fwait
test
push
jle
mov
pop
adc
xor
xchg
jnp,pt
movsl
cmp
mov
push
iret
jle
push
repnz
xchg
ficomps
push
jle
mov
mov
mov
jle
test
daa
cmp
mov
jle
sbb
ds
loopne
inc
insl
or
inc
jl,pt
lods
popf
jmp
into
fs
mov
and
sbb
movsb
jnp
and
je
bound
inc
mov
mov
shr
push
mov
dec
lods
loopne
pushf
add
fdivs
push
xor
movsb
cli
or
xor
clc
xchg
add
pop
mov
pushf
sub
sbb
jmp
jle
cmc
dec
sbb
push
test
sub
dec
pop
ds
xchg
xchg
sarb
inc
jecxz
push
int3
cmp
mov
imul
dec
dec
xchg
inc
ss
xor
pop
pop
mov
mov
push
xchg
cmpsb
push
imul
inc
jb
jns
inc
call
sbb
ds
xor
lret
xchg
xchg
xchg
ds
sti
inc
adc
ds
icebp
pop
popa
ds
jae
repnz
mov
sub
inc
pop
lahf
scas
mov
jmp
sbb
jae
xlat
mov
dec
mov
orb
push
mov
mov
movsb
int3
in
push
ss
ds
add
in
mov
incl
add
mov
jle
mov
stos
ds
jae
outsl
dec
nop
pop
test
xor
out
sub
mov
push
sbb
lcall
jbe
ds
jae
repnz
mov
sahf
out
adc
xor
dec
ficompl
insb
or
xchg
dec
push
sbb
in
or
jne
push
push
gs
sub
mov
repz
or
imul
cmc
cwtl
cmp
xor
dec
xchg
push
in
mov
jge
mov
add
cmpsb
lds
and
cmp
lea
hlt
arpl
mov
out
sub
ds
jmp
push
mov
mov
xor
in
pop
pop
dec
push
dec
std
ds
mov
or
sti
mov
out
mov
daa
jo
xor
xchg
je
adcl
ret
and
ljmp
mov
test
pop
mov
jle
xchg
mov
xlat
push
mov
jp,pt
pusha
das
jo
dec
sti
int
mov
adc
xor
das
movswl
rcll
jne,pt
rorl
fs
ds
mov
or
adc
ds
mov
ja
sbb
sbb
cwtl
mov
in
popa
pop
lods
in
js
dec
push
mov
jle
and
adc
sub
lahf
fwait
lret
ret
cwtl
pop
adc
test
imul
xchg
js
mov
or
add
sub
and
jae
mov
jmp
cs
adc
sbb
mov
fsubrl
inc
popf
pop
dec
imul
push
or
jb
xor
jnp
out
ds
fs
cs
stos
ds
or
call
lods
xor
sahf
mov
in
mov
cmp
movb
nop
jns
and
inc
mov
jmp
sub
pop
aas
adc
rorb
sbb
or
inc
and
adc
cmp
xchg
mov
inc
jb
xor
rclb
stos
test
mov
sbb
test
lret
sarl
add
rorb
addr16
ffree
mov
es
rep
scas
pop
lret
sub
sbb
sti
in
arpl
aaa
mov
pop
push
test
jbe
cmc
xor
push
out
xlat
add
pop
sbb
xorb
or
xor
icebp
outsb
rep
in
test
xchg
iret
movsb
es
in
rcll
jno
jbe
sti
popa
xor
int3
icebp
xor
sti
ja
dec
faddp
jle
fcomps
push
mov
push
ficompl
jle
loopne
mov
jl
popl
sub
mov
adc
enter
cltd
inc
push
shll
inc
lahf
inc
jle
jb
mov
pusha
sub
in
je
ret
cwtl
cld
ja
hlt
lret
lret
mov
mov
xchg
je
sbbb
push
out
insb
lret
das
xchg
cmp
loope
inc
push
cmpsl
dec
dec
or
subl
jl
inc
mov
cmp
pop
inc
mov
call
into
dec
cmp
inc
and
push
jbe
sbb
cmp
pop
dec
aaa
mov
imul
lret
imul
pop
add
sbb
ret
stc
mov
lret
out
int3
incb
xchg
xchg
or
jno
add
xor
pop
rorl
int
mov
pop
lahf
loopne
jmp
xor
scas
jg
stos
fsubrs
add
ja
scas
adc
test
imul
jg
enter
movsl
or
sub
inc
jle
mov
adc
mov
aas
inc
push
jg
test
data16
stos
ja
or
jns
pop
daa
jb
lods
dec
dec
xchg
inc
orb
cmp
ds
jbe
sbb
jne
arpl
lahf
mov
mulps
xchg
ja
movsl
mov
lcall
mov
jbe
sub
or
ss
mov
loope
or
loopne
lret
orb
in
mov
or
lret
xor
mov
pop
xchg
iret
mov
pop
pop
or
xor
in
arpl
or
inc
dec
mov
dec
outsl
sbbb
cmp
subb
jne,pt
mov
mov
mov
fwait
enter
jmp
mov
mov
mov
sbbl
or
cmpsb
int
mov
dec
and
cmpl
ret
jb
push
jae
popf
add
ja
inc
fisttpl
lcall
lea
hlt
aas
push
cli
inc
mov
xchg
add
mov
ds
jns
cmp
push
pop
sbb
lods
imul
mov
xchg
call
ds
jecxz
aaa
xor
adc
mov
jle
orb
jge
xor
decb
jle,pt
cwtl
out
xchg
jnp
push
call
pop
push
lock
pop
jnp,pt
cld
dec
jp
mov
lods
xchg
pusha
ja
jl
push
dec
fwait
mov
dec
test
xchg
test
adc
iret
xchg
jmp
mov
push
test
jno
xchg
mov
ljmp
sbb
sub
xchg
ds
cmpsl
in
js,pn
ds
lcall
and
jle
test
xchg
shrb
leave
incl
outsl
dec
test
repz
dec
jne
idivl
nop
mov
mov
pop
fidivrl
pop
jecxz,pt
imul
push
data16
mov
mov
cmc
ds
or
xchg
jne
lods
roll
ret
and
repnz
out
popa
mov
fidivrl
or
mov
mov
jle
not
lods
testl
xor
jle
lods
sbb
xchg
xor
sahf
adc
mov
rolb
push
testb
add
ds
mov
loop
mov
int
xchg
pop
and
mov
or
jbe
ds
nop
and
add
jg
cmp
adc
xorb
mov
dec
mulb
push
sbb
mov
lret
sarl
mov
adc
mov
aam
outsl
and
push
add
xchg
imul
cmp
push
mov
roll
jecxz
xor
lods
hlt
mov
ljmp
fs
dec
dec
dec
mov
jle
mov
mov
pop
mov
sbb
scas
xor
pop
mov
dec
pusha
cmp
ds
in
lahf
mov
mov
popa
ljmp
lds
js,pt
fmull
daa
sub
mov
or
ds
xor
lods
iret
mov
push
sbbl
and
imul
or
push
pop
xchg
ds
aaa
jg
cmp
fdivrs
mov
mov
dec
and
xchg
push
sbb
repz
mov
imul
enter
fcompl
pop
push
ds
das
and
ret
xchg
xor
dec
addr16
or
inc
cmp
sbb
lret
lds
mov
sbb
lret
or
sub
fiadds
sbb
dec
ds
mov
data16
mov
icebp
or
dec
lcall
adc
mov
dec
mov
cld
dec
push
test
flds
jnp
push
loop
in
sbb
sbb
cmp
inc
xor
push
popf
fidivs
jge
mov
aas
push
cmpl
inc
dec
bound
stos
test
cmp
mov
rcrl
jbe
pop
push
jle
loope
in
push
scas
test
rcrl
sbb
dec
inc
nop
xlat
rolb
jno
mov
mov
stc
int
and
fidivrl
inc
cmpsl
pushf
mov
pop
push
jb
mov
pusha
cmc
adc
dec
or
xchg
cmp
ja
and
xor
addr16
icebp
pop
arpl
add
cmp
inc
cli
jno
or
add
sahf
ss
mov
xchg
push
lret
idivl
fwait
mov
pop
and
xchg
fyl2xp1
js
rclb
mov
addb
lret
push
add
mov
mov
pop
or
and
xchg
pop
insb
xchg
xchg
lds
sub
xor
jb
xor
sbb
mov
iret
in
shlb
dec
das
leave
mov
dec
mov
xchg
dec
orb
clc
jbe
add
lock
shlb
mov
or
xchg
js
jp
addr16
mov
push
adc
inc
lcall
lds
push
xchg
inc
and
lret
lods
inc
adc
lods
data16
clc
in
ds
pop
jbe
push
cld
inc
jno
pop
pop
add
ljmp
push
adc
dec
mov
je
jp
sbb
cs
pop
call
sti
cli
sbbl
add
out
scas
out
cmp
test
mov
push
xchg
sbb
jp
imul
xchg
cmpsb
pop
cmp
arpl
addr16
push
xchg
dec
mov
mov
inc
inc
clc
jp
mov
mov
dec
fnsaves
test
inc
pop
mov
xchg
lret
or
xchg
imul
lods
int
js
add
in
jmp
mov
call
incl
dec
sub
fcompl
add
push
adc
and
mov
cmpsb
cld
push
sahf
cmpsb
lret
mov
xor
cmp
xor
mov
loope
lods
mov
lock
lahf
sbbw
rcll
lock
push
lods
xlat
jb
jbe
mov
inc
setge
daa
sti
sbb
shrb
mov
dec
add
aam
push
in
in
xor
pop
dec
repnz
and
repz
out
or
cmpxchg
dec
aaa
int3
jp
jbe
and
pop
cmovp
lock
pop
mov
pop
mov
lcall
les
add
push
std
and
sub
fnstsw
repnz
fnstenv
pop
jnp
push
xor
mov
aam
ds
sbb
pop
adc
pop
inc
loop
int
ds
cmpb
int3
jbe
insl
add
sbb
mov
lock
ds
out
lods
jl
pop
bound
dec
pavgw
lret
sub
sub
jne,pt
ja
repz
sub
fistps
pushf
movsl
mov
out
jle
mov
mov
mov
hlt
test
add
sar
inc
adc
jne
or
push
scas
mov
icebp
adcb
ds
sahf
fimuls
sub
pusha
adc
jmp
test
push
sti
mov
pusha
jb
ja
in
cmp
lahf
push
cld
test
push
sbbl
cmp
jbe
jp
push
test
sbb
test
mov
adc
pop
adc
push
fmul
add
ds
andb
aam
mov
inc
fstpl
adc
inc
out
push
jle
xor
sbb
ds
adc
fildl
in
pop
mov
lods
cltd
pop
adc
mov
stc
add
push
sub
popf
in
prefetchnta
outsb
sbb
test
lcall
shll
push
or
das
mov
roll
imulb
cmp
mov
nop
sub
mov
aas
pop
pop
mov
mov
push
and
jl
aas
aaa
push
ds
popa
fnstsw
inc
xchg
xchg
sub
pop
push
fsts
mov
test
sbb
xor
pop
xchg
cwtl
pusha
xor
sbb
leave
cmpb
dec
lods
clc
cmpsb
fidivs
add
cmp
jle
gs
jecxz
cmc
mov
xor
dec
mov
or
inc
push
in
leave
mov
insl
fsubr
arpl
daa
aas
aaa
push
or
scas
jge
xchg
outsl
aad
xchg
rcl
ds
mov
bound
add
sbb
jmp
pushf
push
pushf
mov
cmpsb
imul
push
js
ds
jno
cmp
xchg
adc
and
cmpsl
jnp
pop
sub
xchg
andl
ds
cmp
push
shll
enter
cmp
nop
hlt
loopne
lahf
xchg
fcoms
jbe
or
cmp
sbb
push
pop
ret
inc
sub
cli
jne
or
insb
stos
inc
leave
mov
std
push
dec
and
lods
xchg
fcoms
pushf
mov
inc
xor
pop
mov
mov
xchg
jl
cmpsl
mov
ds
flds
add
jbe
adc
movsb
in
fidivrs
bound
mov
addb
sbb
jbe
ds
scas
pop
jecxz
xor
inc
cmpl
shrl
or
aad
lret
push
sub
dec
data16
dec
and
ja
mov
push
test
xchg
cltd
push
adc
add
fs
cmp
shl
or
js
and
aam
mov
mov
or
jbe
out
mov
mov
pop
arpl
fdivs
sti
pop
cmp
jge
sub
add
push
push
xchg
mov
fcmovnb
fsubrl
stos
mov
test
xor
xchg
sbb
mov
adc
adc
pop
xchg
push
push
pusha
dec
lds
xor
data16
fadd
repz
cmc
aad
inc
imul
inc
push
jg
inc
inc
mov
jg
or
fcomps
and
out
data16
and
js
dec
add
rcl
inc
mov
dec
or
mov
mov
jle
cltd
pop
insl
adcl
aaa
aas
push
out
xor
mov
adc
out
or
jecxz
push
jge
inc
and
xor
int
loop
push
xor
sub
mov
dec
mov
clc
ja
ds
das
dec
roll
cmp
aad
and
push
jmp
push
dec
dec
push
mov
jae
pop
pop
sbb
sbb
nop
ds
ss
mov
dec
jne
ds
mov
inc
es
jl
inc
mov
outsl
mov
incb
xchg
popf
aam
jle
mov
ret
add
push
pop
clc
push
cmp
cmpsl
add
frstor
pop
sbb
fld
add
sub
pop
cmp
mov
mov
popa
insl
cmpsl
andl
movsl
mov
inc
out
popa
aas
stos
mov
mov
shrl
lret
mov
cltd
ja,pt
or
mov
add
jmp
ss
sahf
cs
hlt
fdivs
pop
jle
pop
add
daa
pop
push
adc
ds
aam
mov
flds
js
into
adc
push
inc
push
and
inc
outsl
jo
repz
loopne
jl
fsubl
cmove
sbb
aam
addb
adc
iret
ds
push
xchg
sbb
icebp
mov
int3
inc
cmpsl
push
jle
or
jge
ds
pusha
shlb
and
aas
mov
dec
and
mov
int
iret
pop
test
sub
ds
or
rep
add
js
out
sarb
aas
jle
mov
adc
mov
sub
rclb
dec
ds
outsl
je
add
inc
lcall
fwait
lahf
mov
or
dec
ds
mov
sbb
ds
es
mov
xchg
dec
jg
divb
ret
outsb
inc
sub
repz
lea
rclb
add
sar
outsl
dec
sbb
or
dec
in
fistpll
and
inc
in
jl
daa
aaa
xchg
sbb
adc
sahf
mov
jg
loope
jle
out
daa
mov
adc
mov
mov
ds
cmp
sbb
cld
leave
scas
push
test
adc
mov
int3
jp
je
mov
scas
ljmp
add
lock
push
push
imul
fdivrl
fbstp
shl
mov
mov
ret
pop
ja
push
aaa
mov
cmpsl
or
shll
out
mov
aas
mov
add
jle
in
call
in
fiadds
sbb
pop
lret
xchg
jle
adc
imul
ja
cli
call
push
scas
aaa
mov
push
sbb
and
sbb
mov
mov
dec
jns
ds
sub
ret
inc
pop
dec
pop
ds
or
dec
mov
shr
mov
xchg
rorb
adc
inc
pop
and
ds
pushf
dec
jne
mov
jle
cmpl
fld
sub
sbb
push
inc
insl
sbb
ja
movsl
in
scas
stc
fistpll
sub
pop
int3
xchg
pop
mov
aaa
ds
sbb
mov
aaa
push
jmp
dec
xor
mov
aaa
adc
rol
cmpsl
jne
jle
add
sbb
or
loopne
sub
adc
mov
shll
lds
out
leave
mov
testl
cmp
imul
mov
aas
and
mov
adc
push
test
lock
pop
xlat
shrl
aaa
fisubrs
lds
pop
jge
dec
and
into
outsb
dec
cli
mov
adc
loopne
cs
pop
sbb
lods
jne
rcrb
stc
loope
ds
pop
cmpsl
shl
lock
cmp
icebp
sahf
cmp
in
cs
sbb
jg
ret
loope
aam
ja
outsb
lahf
iret
cmp
xchg
std
int3
jl
and
popf
aas
lcall
pushf
icebp
aaa
outsb
cld
ret
insl
xchg
pop
or
inc
cmp
pop
jbe
cmc
int
scas
cmp
inc
xor
in
sub
lret
adc
std
push
push
xchg
mov
inc
cltd
mov
xor
cmp
xor
pop
sub
mov
mov
cmc
xor
fidivrs
pop
push
ja
mov
ffreep
in
pop
mov
and
loope
add
cmc
pop
popa
mov
cmp
js
xlat
jle
mov
mov
leave
gs
jp
sub
ds
sahf
cld
out
jb
push
mov
shrl
cmp
shrb
fstpt
xchg
sbb
and
adc
and
cs
push
sub
cmpb
andl
or
xchg
jb
lret
cwtl
push
imul
cs
shrb
popa
aaa
leave
lcall
aad
jecxz
pop
add
lds
cmp
test
das
sbb
push
popa
xor
xchg
mov
les
out
ds
or
inc
lea
js
sbb
jno
inc
lds
ds
stos
mov
jle
repnz
push
cmp
cs
pop
mov
push
jo
arpl
xchg
ds
das
push
or
fdivrl
and
pop
popa
push
xor
rolb
push
cmp
xor
xor
or
fnstcw
dec
fimuls
lret
jmp
cmp
js
aam
inc
mov
xchg
rolb
jb
mov
fldt
push
jmp
and
cs
fisubrl
imul
mov
push
leave
mov
inc
sbb
or
rclb
and
dec
sahf
es
mov
cs
daa
movsb
cmp
cld
cli
adc
mov
aaa
ffree
negb
pop
aas
and
jg
or
pop
push
sbb
adc
pushf
jl
and
push
inc
popl
cmp
aaa
cltd
xchg
jp
js
xchg
aam
std
out
icebp
jbe
nop
jle
inc
lods
cmp
mov
mov
outsl
mov
shrl
and
das
or
adc
jb
leave
ds
xor
aad
lods
jae
pusha
lock
and
push
push
aaa
sub
scas
sub
imul
cmp
mov
in
pop
and
dec
ds
shl
or
icebp
aam
mov
insl
outsb
cmp
sbb
aaa
jg
adc
and
mov
cmp
inc
lahf
xlat
jle
sbb
xchg
mov
clc
dec
fwait
shrl
inc
fdivrp
out
loopne
aaa
movsl
repz
xchg
mov
dec
lret
mov
sbb
xchg
rcrb
mov
push
ds
inc
mov
cmp
xor
into
nop
insb
pop
xchg
cltd
and
dec
sub
push
outsl
or
jg
popa
add
idivl
fcmovne
push
dec
dec
sbb
jnp
mov
xchg
push
jno
mov
sahf
rcrl
mov
insl
out
inc
lahf
pop
xor
or
mov
icebp
outsb
xor
mov
mov
pop
sub
insb
int
sbb
cs
inc
in
xchg
sbb
cmp
jbe
fidivs
in
mov
mov
sbb
aas
and
add
movsb
mov
popf
pop
mov
mov
add
outsb
pop
aaa
and
mov
push
xor
mov
mov
stc
movsb
dec
pop
mov
rolb
and
cmpsb
es
mov
push
imulb
rclb
sub
test
imul
xor
test
stc
mov
imulb
out
adc
mov
cmp
incb
pop
sub
dec
es
push
or
cmpsb
and
push
cmpsl
sub
mov
mov
jb
push
pop
popf
pop
sbb
push
sub
daa
sti
lahf
rep
jmp
bound
mov
out
xor
add
dec
dec
push
outsl
xor
es
addr16
push
cltd
decb
cli
daa
xor
inc
xor
and
pusha
mov
incb
mov
lcall
adc
inc
cmpsb
push
jle
test
mov
mov
mov
pop
movsb
cvtps2pd
aaa
aaa
sbb
mov
loope
in
lahf
push
stc
and
testl
xor
daa
dec
sbb
jbe
push
cmpsl
pop
cmpb
scas
cli
mov
pop
mov
hlt
jecxz
ljmp
es
and
xor
sahf
test
and
xor
shrl
and
xor
pop
popf
mov
dec
daa
std
mov
mov
aam
sti
and
jbe
movsb
adc
pusha
sbb
mov
cmpsb
mov
insl
test
xor
adc
mov
adc
in
push
icebp
push
and
aas
dec
clc
push
push
jl
xor
cmpsl
clc
cmpsb
imul
out
dec
push
fsubrs
dec
outsb
dec
and
shlb
push
jle
and
mov
sbb
sbb
jge
inc
daa
mov
test
and
js
rcll
xchg
movsb
xchg
cmpsb
xor
adc
test
cltd
mov
and
idivb
je
xchg
hlt
icebp
sbb
push
jp
mov
mov
test
data16
test
cs
mov
and
adc
mulb
aas
sub
mov
cmpsl
stc
pop
mov
icebp
mov
outsb
mov
pusha
push
mov
and
movsb
inc
jbe
sbb
fisttpl
push
data16
es
js
out
jbe
and
shlb
jg
and
add
nop
cmpsb
in
pop
push
mov
scas
push
and
pop
fsubs
xor
mov
out
mov
ret
mov
adc
daa
mul
cmpsl
es
push
inc
dec
mov
push
and
fisubs
mov
dec
push
mov
mov
sub
ret
mov
stos
inc
mulb
cs
test
push
xor
push
jmp
mov
mov
repnz
inc
jg
divl
sub
sti
push
test
cmpsl
mov
xor
lret
dec
xchg
jbe
ss
pop
es
mulb
xor
add
insl
jbe
mov
and
sub
cs
test
cmpsl
das
and
cwtl
and
jne
mull
push
inc
dec
and
inc
cmp
sbb
andb
sub
push
insl
and
lret
xlat
push
stos
mov
mov
jl
xor
lcall
add
sub
hlt
cli
mov
insb
cmp
sbb
sahf
adc
cmpsb
xor
pop
sub
xchg
je
in
mov
mov
imul
subb
ss
dec
pop
push
mov
add
mov
jno
inc
add
push
cmpsb
mov
xor
call
jbe
mov
and
xor
lock
pop
sub
andl
mov
mov
pusha
sahf
popf
cmpsl
cld
fisubrl
pop
mov
and
mov
fldcw
xor
mov
push
xor
and
push
test
mov
mov
lods
adc
pop
jne
cmp
xor
push
ror
mov
neg
add
push
sbb
sub
bswap
bsf
push
lea
dec
bsr
push
neg
adc
mov
bswap
cmc
mov
rcl
shl
xadd
push
mov
mov
rcr
shr
xor
lea
mov
not
lods
push
neg
shl
xor
push
call
clc
cmp
test
jmp
lea
ja
mov
pop
pusha
movsbw
mov
mov
lea
call
sub
lds
add
pop
mov
outsl
cltd
out
imull
xorb
xor
push
cmp
and
jle
pop
into
adc
dec
hlt
sbb
fildll
aas
pop
ror
loopne
mov
inc
xchg
lahf
ja
pop
dec
mov
push
das
sbb
mov
add
bt
call
rol
sar
sub
mov
cmc
jmp
xorl
out
stc
dec
dec
movl
jmp
and
stc
jg
rorl
mov
loop
inc
iret
pushf
jo
mov
repnz
xchg
dec
inc
fldenv
xor
int
movsl
pop
push
mov
sub
cwtl
inc
int3
das
mov
push
sub
adc
sub
sub
mov
xor
push
pop
pusha
adc
mov
push
rolb
jne
mov
call
ljmp
xor
loopne
sbb
insl
dec
lods
jne
lds
dec
mov
insb
in
inc
jmp
data16
adc
add
sbb
jl
xchg
add
ljmp
sub
scas
xor
icebp
push
adc
jl
fs
and
lret
mov
enter
fnsave
push
dec
xchg
stos
jnp
fistpl
arpl
cwtl
test
ret
lock
mov
lea
jae
jmp
aam
dec
adc
das
xorl
xchg
iret
shll
sbbb
lods
push
ljmp
inc
adcl
dec
push
adc
push
cs
dec
stc
dec
push
sbb
mov
popa
leave
xor
adc
xor
add
adc
push
ja
aas
daa
sbb
daa
movl
lea
ja
sbb
adc
pushf
add
clc
inc
pushf
not
mov
clc
pushf
cmp
movw
lea
jb
pusha
cmp
pusha
lea
ja
stc
cmc
call
dec
fdiv
adc
lds
lcall
bound
add
push
jg
mov
dec
insb
or
xor
xor
inc
int3
adc
adc
pop
add
scas
mov
cmp
mov
sbb
pusha
xor
mov
loop
ljmp
push
inc
inc
xor
pop
mov
add
or
jmp
sbb
push
clc
sahf
pop
lods
sbb
out
scas
mov
clc
sahf
sarb
xchg
repz
jmp
leave
pop
sbb
or
or
repz
adc
jg
gs
adc
add
xor
mov
pop
aas
filds
aas
lahf
addr16
cmp
int
mov
inc
repz
push
mov
pusha
movb
movl
call
call
mov
pushf
stos
movb
mov
lea
jmp
pushf
movl
pushf
push
mov
lea
jmp
not
pushfw
popw
shl
mov
pushf
test
test
neg
call
cmc
jbe
adc
ss
and
cmp
fisubrl
cmpsb
orl
test
addr16
mov
push
mov
cmpsl
adc
fcoml
sub
adc
and
jle
dec
push
jns
add
push
adc
pop
inc
dec
add
lahf
jns
insb
bound
test
and
jne
dec
xchg
push
aam
in
sub
cltd
pop
xor
jae
or
loopne
dec
sub
pop
cwtl
es
out
cmp
call
add
add
stc
sbb
add
add
add
add
add
add
shr
sbb
in
sbb
aam
sbb
add
add
add
sbb
mov
inc
scas
sub
ret
mov
dec
and
mov
addb
incb
push
imul
pop
mov
add
clc
in
loope
fs
sahf
cmpsl
mov
pop
fstpt
mov
bnd
xchg
inc
xchg
xor
push
les
xchg
rcll
push
dec
cmp
leave
dec
mov
mov
outsb
lea
cmp
insl
hlt
roll
roll
mov
push
push
scas
adc
adc
xor
in
lds
mov
push
leave
inc
sub
jns
addr16
push
sub
or
pop
repz
adc
or
out
inc
add
dec
push
enter
out
popf
lods
dec
hlt
and
inc
pop
and
jp
gs
std
int3
data16
jl
cmp
mov
sub
or
pop
jno
mov
ret
push
pop
cmp
adc
hlt
adc
and
sub
addr16
mov
push
icebp
inc
push
sbb
push
jl
cmp
test
lret
pushf
insb
movsl
jnp
out
and
xchg
or
insb
or
lret
mov
add
pop
jl
dec
pop
in
insb
push
bound
jno
push
adc
add
js
out
std
jo
mov
out
insl
lcall
push
add
jae
jmp
popf
mov
jl
cmp
outsb
inc
xor
std
fdivs
fs
jae
jmp
pop
int
movsb
mov
sbb
in
nop
dec
outsb
add
mov
adc
dec
or
mov
inc
jbe
xchg
in
sub
mov
or
ret
adcb
and
scas
cli
adc
mov
cmp
xor
sti
mov
insl
jns
stos
adc
sbb
dec
fidivl
enter
pop
int3
bound
or
out
and
pop
adc
fsubs
lds
stc
cwtl
lods
pop
rorl
stc
rep
lcall
jg
mov
push
sub
cmpsb
inc
test
imul
jg
jno
lods
cmp
mov
shrb
in
inc
sub
pop
fmuls
std
cmp
ja
cmpsl
bound
pop
ror
push
cmp
divl
xchg
and
xchg
syscall
in
popl
xor
ds
sbb
mov
xlat
outsl
sbb
jecxz
std
fiadds
sbb
sbb
push
push
inc
cltd
ret
pop
in
add
test
movsb
loope
lods
pop
loop
jg
in
scas
std
dec
pop
jae
mov
mov
xor
add
xchg
and
mov
xchg
xchg
fcoml
aas
push
sub
into
ja
outsl
cltd
xorb
pop
scas
repnz
mov
dec
xlat
sbb
sbb
push
icebp
adc
rcrl
popf
outsb
pop
test
cmp
jns
sub
bound
fistps
cmpb
mov
leave
je
das
test
sub
insl
fxch
mov
jmp
adc
fisubrl
push
out
xchg
add
fstps
es
shr
cmpsl
sbb
jnp
dec
fists
les
push
out
clc
subl
adc
repz
ljmp
cltd
arpl
test
iret
jne
fdivs
dec
dec
int
shrd
xlat
fdivs
out
sbb
adc
dec
cmpb
outsb
dec
and
insl
ds
cwtl
push
sub
and
jge
fcoms
inc
pop
pop
test
lret
xchg
mov
inc
movsl
aad
push
add
out
fdivr
aaa
mov
dec
xchg
add
out
out
out
je
or
mov
aam
ja
lea
sbb
pop
sbb
repz
iret
test
loopne
test
insl
sub
bound
inc
fldenv
das
pusha
and
sub
mov
cmp
mov
call
ret
xchg
adc
dec
pushf
out
push
cmp
jno
sub
mov
iret
movsb
sbb
fcomps
ja
lods
mov
add
jae
dec
fadd
sbb
add
jge
pop
and
sub
xchg
sub
fcomi
sub
sti
sbb
enter
add
incb
pop
inc
jo
mov
sti
pop
ficoms
mov
pop
sub
adc
jecxz
insl
hlt
imul
xor
pop
sub
mov
push
scas
andb
out
sbb
mov
loopne
cmpl
fildll
mov
xor
nop
sbb
push
jmp
cmp
push
pop
cmp
adc
sti
pop
pop
ja
sub
inc
aam
xchg
pusha
pop
pop
jecxz
and
arpl
nop
mov
insb
scas
xchg
mov
push
insb
in
lcall
jns
insl
mov
cmp
mov
loopne
dec
ss
jbe
pop
inc
pop
sub
insl
cmp
and
add
clc
jl
pusha
adc
pop
or
gs
hlt
push
js
out
lods
adc
mov
ret
jb
ret
add
jnp
mov
mov
dec
lods
mov
adc
loope
test
xor
mov
inc
imul
jge
xchg
nop
dec
ljmp
test
mov
mov
outsl
std
jae
pop
cld
movsl
mov
sbb
ja
push
xchg
add
insb
cwtl
std
gs
pop
fsubrs
jg
push
fwait
cltd
ljmp
xor
mov
add
ja
mov
cs
inc
or
dec
push
push
jae
mov
loopne
dec
xor
fisubrs
jl
jno
sub
mov
mov
pop
je
lock
shll
mov
inc
pop
sbb
insb
pop
xchg
inc
cmpsl
fwait
or
and
adc
inc
pop
sti
sbbl
int3
fsts
les
fisttpll
and
outsl
inc
push
adc
xor
pushf
pop
dec
push
dec
sub
inc
inc
pop
jecxz
jae
lret
pusha
int3
xor
insl
pop
mov
dec
arpl
je
loope
lea
mov
sub
cmp
mov
mov
adc
cmp
out
ljmp
push
imul
jne
dec
aas
movsl
jb
pusha
andb
lahf
adc
std
sub
popl
sbb
inc
fwait
aas
xlat
adc
xchg
cmp
out
mov
fildl
or
fcoms
or
dec
sbbl
mov
sub
xor
vpunpckldq
ja,pt
mov
mov
sbb
push
cmpsl
inc
and
fnsave
mov
inc
mov
dec
jp
adc
adc
pushf
xchg
movsb
sbb
jne
mov
cmp
mov
jp
es
jl
inc
scas
mov
mov
pop
aam
jae
mov
fdivrs
and
or
insb
sahf
lret
int
rcrb
mov
cld
jge
xor
leave
cltd
jmp
mov
mov
xchg
sbb
int3
pop
repnz
push
mov
inc
push
xlat
cmpsl
pop
or
out
mov
sbb
mov
cmp
or
jbe
cltd
aaa
jecxz
and
gs
pop
cld
lods
sbb
cmp
pop
xchg
shrb
std
mov
inc
pop
out
imul
cmpb
stc
fildl
cmp
and
xchg
scas
je
cmp
push
outsb
stos
and
xor
outsb
sbb
stos
lock
test
and
mov
dec
sub
fdivs
repz
xchg
aas
dec
mov
or
cmpl
imul
sbb
les
popf
aam
dec
and
jnp
das
popf
fs
popf
mov
sbb
push
cwtl
jb
rcrl
jb
jo
negl
cmp
sub
push
imul
loope
mulb
mov
movsb
adc
arpl
mov
jge
dec
jb
or
popa
stos
stos
sub
in
test
xchg
sbb
out
mov
in
es
icebp
movsb
mov
xchg
xchg
das
push
push
call
fnsave
int3
outsb
pop
test
jno
insb
mov
mov
jp
imul
leave
mov
sub
mov
push
je
push
lcall
xor
push
cltd
sti
ds
sbb
xchg
jno
popf
test
cltd
lret
sub
jp
jo
adc
mov
jle
arpl
jmp
shld
jbe
mov
pushf
loopne
dec
adc
xlat
and
lcall
lods
adc
mov
movsw
cmpsb
stos
push
mov
ja
fsub
imul
jo
mov
pop
push
mov
mov
or
mov
or
jle
fimuls
ret
cmpsb
popf
dec
pushf
xchg
mov
mov
jle
cld
xor
push
test
lahf
popa
push
fistpll
rol
stc
js
mov
pop
fstpt
jae
sahf
push
negb
test
mov
xchg
es
shll
cmp
loope
add
xchg
mov
cwtl
loopne
fcoms
adc
push
lcall
stos
pop
adc
or
sti
lret
adc
jo
mov
ffreep
aad
xchg
fucomp
jl
orb
and
popa
pop
test
ficompl
icebp
adc
clc
add
lret
pop
pop
in
push
cmp
dec
jmp
xor
jb
dec
fucomi
mov
cmp
pusha
fistpll
mov
fcmovu
sub
dec
lret
push
mov
mov
call
in
jg
xchg
stos
cld
pop
adc
jb
cmp
into
shrb
mov
sti
add
scas
sub
dec
adc
stos
hlt
les
or
sub
add
popf
stc
cmp
push
push
test
into
sub
in
pop
sahf
lock
add
ljmp
cmp
pop
pop
xor
ret
std
and
sub
sahf
xor
adc
push
sbb
jge
push
push
mov
jmp
loopne
in
sahf
push
jg
out
jnp
push
sti
movl
test
fmull
pop
test
adc
into
xchg
mov
mov
sti
ds
mov
fisttpl
jb
decl
shlb
sbb
xchg
imul
pop
mov
xor
sub
adc
dec
fsts
mov
jo
shrl
mov
je
push
gs
stos
sub
and
mov
ss
leave
pop
lods
xchg
repz
pop
dec
lds
xchg
ret
push
sub
daa
push
nop
cmp
scas
lock
dec
adc
push
int
inc
addl
mov
mov
xchg
mov
mov
inc
sar
fsubrs
into
ljmp
rclb
fwait
idivl
aam
dec
out
lret
jg
pop
roll
pop
pop
inc
pop
out
mov
test
js
loopne
push
inc
cwtl
dec
ss
bound
ljmp
add
aaa
adc
ljmp
push
xor
les
inc
dec
adc
out
or
rcll
push
xor
dec
ret
xchg
mov
cli
adc
jmp
mov
bts
or
shld
cmp
add
sbb
mov
test
push
test
pushf
call
test
sub
push
mov
rep
pusha
lea
jae
pop
push
push
pushf
lea
jmp
add
mov
push
sub
movsb
rol
sub
fisttpl
dec
push
js
sbb
mov
in
fsubrl
sub
mov
dec
xor
fsubl
pop
mov
andl
xchg
ret
sbb
mov
push
lcall
lods
sbb
movl
loope
jp
or
ja
sbb
shll
dec
pop
mov
ror
or
xchg
pushf
lea
je
cmp
stc
jle
cmp
pusha
pushl
lea
je
pushf
pusha
pushf
lea
jmp
jmp
mov
movb
push
lea
jmp
inc
push
pushf
not
inc
pushl
shl
call
jmp
pushl
popl
cmc
push
pushf
call
call
xor
mov
scas
mov
imul
pop
add
loope
test
test
cmpsb
rclb
into
xor
cwtl
pusha
cld
xor
mov
adc
fs
adc
outsl
sbb
jo
push
mov
cmp
flds
or
add
out
jg
or
out
xchg
cmpl
sub
xor
mov
dec
add
lds
mov
iret
push
lahf
inc
stc
in
call
or
daa
pop
repz
out
xchg
fs
push
rclb
inc
insl
cmp
sbb
sarl
icebp
popa
add
leave
jno
movl
pusha
movw
movl
movw
movl
pusha
pushf
mov
lea
jmp
in
push
movl
pusha
push
jmp
mov
movw
lea
ja
pusha
lea
jb
test
pushf
call
lea
je
bt
push
pushf
cmp
cmp
call
lea
call
pusha
pushl
lea
jae
cmp
stc
cmp
xor
jbe
call
jmp
and
bt
stc
add
pushf
lea
jmp
pushf
movb
movl
pushf
movb
pushf
jmp
pushf
lea
jae
pushf
cmp
clc
cmp
call
movl
pushf
movl
push
push
push
pushl
lea
jmp
aam
rol
lahf
mov
neg
movzbw
mov
sbb
cmp
dec
movzbw
shr
shr
test
btc
rol
mov
test
push
stc
or
pusha
lea
je
neg
movzbw
pushf
add
pusha
cmc
bsr
bts
sub
stc
not
or
bsf
shr
test
stc
shr
or
mov
or
bsf
xor
jmp
scas
sbb
aam
movsb
jb
cmp
lret
pushf
mov
inc
sti
xor
enter
jns
lds
arpl
sbb
aam
dec
inc
dec
sub
icebp
mov
in
in
adc
pop
mov
call
push
ja
lahf
dec
ficomps
test
adc
decl
cwtl
les
mov
aaa
xor
dec
shl
rcr
mov
test
add
setle
rcr
shr
mov
bt
test
jmp
sub
call
cmc
jbe
add
vpshufhw
into
xor
icebp
shll
mov
adc
aam
sbb
test
inc
xor
shrb
ret
push
daa
mov
sarl
or
leave
scas
mov
pop
dec
mov
dec
dec
xchg
pop
and
int
push
hlt
sbb
mov
and
jp
xor
jne
dec
sub
mov
hlt
push
fcmovu
inc
push
or
lods
jne
mov
add
mov
aad
cld
mov
int
mov
sbb
call
loopne
xchg
mov
orb
into
xchg
adc
lods
loope
sub
cmc
aam
and
fcmovbe
sub
mov
push
sub
aad
mov
pusha
not
call
sbb
mov
jmp
xchg
adc
ret
pop
mov
mov
test
add
sub
push
outsb
arpl
inc
dec
aad
sbb
cmp
rcr
adc
das
vmptrld
pop
xchg
bswap
and
sub
shr
sub
and
pusha
movl
pushf
movl
pusha
pushl
pushf
mov
lea
jmp
call
not
pushl
lahf
mov
push
jmp
shl
rcl
shl
mov
stc
cmc
pusha
pusha
cmpb
call
lea
jne
bt
bsr
mov
stc
add
bt
call
push
pushl
popl
movb
pushl
ret
mov
sbb
out
jne
jecxz
lret
cmc
repz
pop
dec
out
sbb
push
sub
mov
xchg
push
cmp
jno
or
add
adc
inc
inc
adc
adc
dec
lods
xchg
xchg
cmc
popf
fistl
int
pop
inc
dec
xchg
jae
stc
lods
push
or
sti
xor
xor
int
cmp
lds
jp
inc
pushf
push
pop
jns
ja
rolb
inc
dec
dec
addb
inc
dec
pop
adc
popf
push
pop
movsl
rep
in
fnsave
scas
cmp
push
neg
mov
sbb
push
adc
inc
imul
ljmp
jmp
cmp
icebp
jge
xor
scas
inc
outsl
dec
jb
rclb
push
sub
add
lahf
addl
add
test
xchg
xor
xchg
and
insl
cmp
mov
rclb
add
xchg
ror
pop
in
jge
int3
in
rcr
data16
inc
mov
arpl
int
js
inc
in
out
dec
popf
rorl
int
adc
sub
push
add
rorl
fldcw
inc
in
mov
cld
add
push
cli
jnp
xchg
rcrb
pushf
lea
ja
pushf
movb
lea
jb
call
push
ret
out
mov
xor
movsb
mov
fiaddl
pop
je
in
jmp
dec
and
lods
jge
test
in
fldenv
shll
mov
movsb
add
cmp
xor
je
pushf
push
xchg
sbb
mov
bt
neg
adc
add
and
not
inc
pusha
shr
inc
movzbw
shr
mov
call
cmc
ror
push
movw
push
jmp
roll
out
cwtl
add
enter
cmp
mov
movsb
jb
repz
jg
lds
add
shrb
movsb
sub
add
mov
lods
pop
jnp
ja
loop
or
inc
scas
mov
pop
movsb
inc
test
mov
insb
jp
pop
sub
std
inc
scas
mov
cs
and
inc
sub
pop
mov
mov
jle
aad
pushf
mov
loope
daa
sub
out
dec
mov
xchg
jae
xor
xchg
xchg
repz
in
out
inc
sti
add
arpl
sbb
and
outsl
xchg
xor
jecxz
stos
mov
mov
mov
sbb
jecxz
out
mov
fbld
cmp
ds
pop
loope
mov
inc
pop
xchg
jo
addr16
sti
icebp
xchg
out
pushf
xchg
push
mov
daa
in
mov
and
aaa
and
lret
inc
dec
in
pop
das
xor
inc
in
mov
outsl
jns
inc
lret
cmc
add
push
sar
fucomi
hlt
sub
jb
mov
shlb
mov
mov
psubd
pushf
adcb
mov
add
adc
testb
call
adc
cmp
inc
pop
dec
and
xor
xlat
je
xor
dec
popf
and
ds
daa
aaa
xchg
outsb
js
pop
sub
imul
dec
sbb
jl
push
daa
pushf
fistl
je
arpl
add
mov
cmp
cmp
sarl
pop
cwtl
cmp
loope
cmp
push
xor
mov
repnz
arpl
jecxz
push
push
push
not
mov
pusha
pushl
movb
lea
jmp
lea
jae
bt
add
jmp
movb
movw
rol
pushf
pushl
push
push
inc
push
not
test
call
push
clc
mov
cmp
jmp
rol
movb
xor
call
pushf
pushf
pusha
lea
je
cmc
cmp
push
pusha
pushl
movb
pushl
ret
enter
out
shll
adc
mov
outsl
push
inc
jns
addr16
mov
xor
pop
mov
pop
pop
mov
mov
test
inc
repnz
push
sbb
into
cmpsl
test
ja,pn
sbb
sbbl
cltd
jmp
xchg
lods
jae
jp
daa
xchg
gs
xor
roll
loopne
inc
pop
mov
adc
lret
or
loope
adc
push
pop
xor
or
clc
clc
jmp
fstpt
sti
out
xchg
cmc
sbbl
and
add
cmpsl
jo,pt
pop
xchg
push
ret
dec
and
addr16
add
sub
adc
mov
enter
sbb
ja
pop
js
lea
clc
out
inc
xchg
es
inc
sbb
cmpsb
into
jns
mov
inc
pop
cmp
stos
mov
jne
les
int3
shlb
xchg
aam
test
insl
cmc
jge
add
insl
lds
scas
scas
mov
sub
mov
movw
lea
jb
pushf
pusha
pushf
push
lea
jmp
cmp
movb
jmp
xor
sti
out
push
enter
sbb
push
add
mov
mov
cmp
sub
out
sbb
mov
shl
dec
lds
jne
movsl
gs
dec
sub
lds
pop
pop
xor
stc
out
je
inc
ljmp
jb
stos
sub
sub
or
shlb
lcall
fs
and
fdivl
mov
clc
or
sbb
adcb
add
fld
add
mov
xor
jmp
mov
pushl
mov
movl
pushf
mov
pushf
pushl
popl
pushf
pusha
pushl
ret
mov
lds
cmp
sti
cmp
into
lret
and
outsl
dec
cli
cwtl
test
mov
outsl
and
jge
mov
pop
mov
or
cmpsb
dec
cmp
stc
pusha
rol
cltd
popf
lock
xchg
pop
in
mov
sub
out
aam
mov
push
pop
mov
lahf
lret
jo
lods
inc
xor
in
pop
dec
xchg
lds
xchg
push
mov
mov
in
add
out
push
lahf
aas
out
cmpsl
ja
xchg
out
mov
mov
adc
movl
pushf
call
lea
jbe
lea
ror
mov
lea
bsf
add
xor
mov
movsbw
ror
shl
rcr
add
lea
movl
movsbl
cmp
dec
clc
mov
test
cmc
cmp
call
sbb
and
lahf
cmp
test
ja
out
mov
push
sahf
fisttpl
les
dec
adc
fcoms
fnstenv
lds
xor
ficoms
sbb
sbb
inc
ret
dec
mov
test
xor
pushf
pushf
inc
clc
dec
cmc
adc
dec
dec
mov
or
popf
pusha
call
stc
and
jmp
inc
je
clc
out
movb
mov
pop
mov
cmpsl
lods
dec
cmp
adc
inc
std
jns
icebp
dec
icebp
das
popa
mov
adc
mov
adc
dec
stc
inc
idivb
adcb
pop
pop
mov
and
shll
cmpb
in
int3
popf
mov
push
loopne
shlb
cmp
pop
jo
push
ljmp
mov
cld
pushf
stos
jl
les
jl
lods
dec
pop
push
pushf
inc
cmp
test
repz
es
inc
push
leave
jb
jle
add
cmp
mov
mov
xorb
into
lods
cmp
fcompl
bnd
and
fiadds
gs
repz
fsubrs
hlt
dec
fcomps
inc
rcl
mov
inc
pop
mov
adcb
es
sahf
push
push
scas
pop
xchg
scas
push
aad
cmp
jle
fs
jge
ja
shr
neg
clc
dec
add
shl
cmp
pushf
mov
movb
pushf
cmp
pushf
push
jmp
add
bt
cmc
mov
cmc
stc
call
push
adc
das
icebp
outsl
popa
iret
leave
and
and
aaa
xchg
and
ljmp
mov
add
call
dec
lds
lds
in
cs
inc
mov
xchg
lret
fbstp
or
sbbb
push
cwtl
std
or
lea
pop
lock
sub
xchg
test
hlt
pop
dec
dec
inc
iret
mov
mov
sub
and
jo
leave
sbb
ficomps
cmp
xchg
mov
mov
scas
push
dec
clc
cwtl
dec
and
inc
and
push
add
ja
pop
outsl
stos
pop
push
lea
jmp
movl
out
mov
mov
lock
adc
int
mov
hlt
je
es
cmpsl
fisttps
jb
sub
jne
cltd
mov
add
dec
inc
stc
imul
sub
sub
orl
stc
push
pushf
sub
pushf
lea
jbe
pusha
pusha
lea
call
jmp
sub
mov
out
aaa
icebp
das
push
outsl
fldcw
clc
inc
arpl
lahf
sbb
ja
stos
xor
sti
fimull
jl
sub
and
xchg
xor
in
push
cmp
mov
or
push
jns
sbb
rorl
aad
cmp
aad
push
jmp
mov
push
inc
cmp
neg
push
mov
bt
sub
call
lea
call
pusha
push
lea
jb
pushf
push
pushl
ret
movb
mov
movb
jmp
xchg
mov
cmc
out
rcll
jge
dec
fwait
test
push
mov
mov
and
mov
cmp
lcall
insb
add
fidivrl
sbb
push
xchg
xor
je
lahf
notb
aaa
addl
xlat
add
push
shrl
xchg
repz
cmc
or
repz
and
jecxz
add
add
inc
adc
cwtl
inc
pop
enter
fdivs
xor
data16
dec
setg
dec
bt
setno
rol
pusha
push
pushf
stos
setp
call
push
mov
call
adc
movb
jbe
cmpsl
pop
cmp
mov
bound
stos
jg
test
or
pop
scas
and
mov
sti
sub
into
movsl
dec
push
dec
push
adc
out
enter
lea
xor
pop
mov
xchg
jne
out
fwait
adc
or
lea
outsl
fcompl
xchg
adc
lods
xor
ds
or
movsb
adc
pop
out
xor
jge
xchg
mov
mov
sbb
add
sbb
mov
dec
jbe
leave
mov
pop
loope
popa
jns
mov
psrlw
idiv
lret
cmp
mov
xchg
into
outsb
mov
fdivrl
iret
addb
inc
push
out
cmp
add
sub
cmp
lahf
outsl
jg
stos
dec
or
cwtl
pop
adc
pcmpeqb
inc
nop
xchg
cwtl
lret
and
js
icebp
ror
addr16
or
push
shlb
mov
stos
bnd
adc
jb
in
movsb
iret
and
insl
es
ret
xchg
cwtl
lea
pop
xchg
daa
test
xchg
repnz
into
sbb
pop
addr16
ljmp
adc
push
addr16
xchg
push
stc
iret
cmovp
inc
add
stos
jmp
rol
movsb
imul
loop
dec
fdivr
sbb
ret
mov
mov
sbb
jnp
cld
scas
mov
sahf
add
inc
and
mov
fs
pushf
push
lea
jmp
call
lea
call
pushf
lea
jmp
jp
pop
repz
fimuls
or
mov
xchg
lock
push
mov
mov
incl
xchg
sub
das
inc
xor
insl
push
shll
movsb
std
cwtl
lock
sbb
mov
dec
cmpb
enter
xor
int
ficompl
clc
fs
and
ja
scas
cli
and
shr
loop
cli
push
stos
repnz
lret
inc
inc
scas
leave
mov
mov
sbb
mov
insb
lret
jmp
in
xor
sbb
pop
repz
adc
mov
jge
jae
cwtl
shll
xorb
cmp
jmp
mov
adc
lret
rolb
push
enter
xor
push
loopne
les
push
shlb
jmp
sub
mov
stos
pushf
movb
pusha
push
lea
jmp
call
or
lds
movsl
jae
sti
fstl
mov
mov
mov
dec
mov
rcl
and
cmp
jg
aas
pop
xchg
add
cli
pushf
shrb
test
adc
pushf
scas
dec
xchg
sbb
jo
xchg
inc
movsb
mov
imul
mov
add
add
dec
sub
mov
pushf
lea
je
xadd
xor
jmp
call
stos
pop
lods
icebp
out
cmp
sub
shr
loope
pop
lahf
rorb
fstl
test
push
jl
mov
fcomps
imul
fnstcw
popf
nop
dec
sti
xchg
popf
sub
xchg
jge
jo
hlt
outsl
loopne
sti
push
xchg
syscall
pop
icebp
out
add
incb
fsubrs
call
sti
lock
xor
xchg
nop
pop
add
fwait
sub
in
cmp
jb
or
adc
pop
or
pop
cmc
int
sub
rcl
mov
cmc
jmp
jmp
push
mov
bsf
lea
xor
mov
setne
xor
bsr
not
push
add
xor
push
shr
shl
push
shl
push
bts
xchg
push
stc
not
mov
and
shrd
btc
mov
inc
sub
movsbl
bswap
mov
pusha
test
pushf
or
call
push
jmp
lea
jb
push
clc
cmpb
movb
pusha
lea
je
pusha
lea
jne
shld
shr
jmp
pop
lea
pusha
mov
jmp
stc
test
cmp
pusha
call
stc
test
call
pushf
movzwl
movsbw
bswap
mov
bt
jmp
lea
je
movzbw
not
pusha
add
stc
sub
jnp
push
dec
mov
pushl
stc
add
clc
test
push
mov
lea
lea
mov
mov
jmp
lea
je
mov
xchg
not
lea
bswap
not
movzbl
movzwl
je
lea
push
pushf
mov
pushf
mov
call
jmp
add
push
call
repz
out
out
pusha
es
decb
dec
pusha
push
dec
out
or
hlt
jmp
imulb
inc
xor
shrl
test
push
mov
inc
inc
lock
pop
cmp
in
movsl
xor
bound
sub
xchg
mov
and
sub
adc
insl
or
dec
sbb
and
dec
lahf
scas
jle,pt
ss
sub
stos
adc
lret
ds
lock
mov
cmp
lock
pop
rcr
out
and
stos
rol
adc
push
xor
inc
fs
out
or
test
cs
mov
xor
mov
dec
push
dec
jecxz
mov
inc
cli
fmull
push
mov
xor
dec
or
lea
jne
addl
mov
out
ds
mov
add
inc
cwtl
add
jle
je
js
sbb
ret
shll
cmp
lret
mov
mov
push
popa
mov
fsubrp
out
push
shlb
push
ret
loop
mov
lret
mov
push
xchg
jmp
ja
xchg
pop
push
out
pop
movsl
jmp
fs
out
sbb
leave
sub
pop
ljmp
pop
loopne
repnz
cltd
cs
push
xor
std
mov
pop
jb
jge
std
jge
mov
mov
loope
clc
es
jmp
out
aad
and
mov
dec
xlat
xor
stos
jmp
xlat
movsl
in
mov
aas
rcll
xchg
cwtl
mov
orb
fisttpl
mov
out
ja
stos
inc
mov
pop
push
pop
xchg
nop
and
sub
repz
xchg
inc
imul
test
add
dec
xchg
jge
sub
adc
mov
lods
daa
sub
sahf
inc
xchg
es
push
lcall
pop
fisttps
lret
lods
sbb
lahf
inc
icebp
aaa
add
xor
fadds
add
push
fstl
push
inc
mov
cmp
push
mov
movsb
in
jge
xor
mov
movsl
lret
scas
fisubl
bound
nop
cmp
stos
arpl
mov
cld
loop
cmpsl
rorl
or
addr16
shr
mov
jno
mov
mov
lret
cmp
push
fmul
push
mov
mov
into
clc
pushl
lds
fsubr
in
push
jl
fs
add
xor
xor
movsl
xchg
and
cmp
jb
xor
jo
xchg
cltd
jo
cld
xor
roll
out
jl
inc
dec
sahf
mov
sahf
int
xor
das
and
mov
scas
aas
clc
push
lea
dec
sub
pop
mov
stos
and
sbb
mov
rcrl
xchg
negb
push
enter
int
jmp
xchg
cmp
adc
mov
push
int3
add
cmp
push
jmp
call
mov
pusha
pushf
lods
bt
call
push
inc
lea
pushf
lea
call
push
lea
jg
push
adc
pusha
lea
call
jmp
popa
ret
out
pop
loop
sbb
add
cli
cmp
lahf
inc
icebp
fsubs
addl
or
push
movsl
and
dec
lahf
mov
inc
cmp
sti
test
xor
out
outsl
sbb
xor
in
mov
popl
cmp
popf
fcmove
and
fisttpll
lret
jo
int3
and
pop
shl
insb
and
xchg
xchg
lods
movsb
std
nop
lea
cli
push
leave
pop
iret
je
js
adc
lds
aad
mov
or
orb
and
pop
mov
pop
mov
popa
stc
shll
mov
outsb
mov
loop
jmp
jecxz
jecxz
mov
inc
lret
sub
out
cmp
xchg
xor
jnp
or
fsubl
std
fcoms
out
pop
test
dec
in
xchg
mov
push
pop
jns
imul
sarl
test
rclb
ror
jmp
mov
clc
jb
add
test
cmp
pusha
cmp
movzwl
jmp
pushl
jmp
call
push
pushl
mov
pushl
pusha
pushf
lea
jmp
rcl
movzbw
not
xor
bswap
pop
movsbl
mov
mov
pop
push
movw
movsbw
not
mov
bswap
jmp
mov
lds
jno
mov
dec
iret
inc
in
pop
dec
ja
loope
xchg
aam
jb
mov
mov
jg
mov
or
add
xor
pusha
dec
mov
addr16
jg
adc
loopne
mov
lods
das
xor
mov
or
mov
xchg
mov
push
enter
mov
or
mov
aam
sbb
jg
xorl
loope
insb
cli
push
es
mov
mov
clc
mov
into
pop
xchg
or
je
iret
mov
int3
add
pop
popa
mov
adc
lret
ja
sub
xchg
cwtl
dec
fiaddl
cmp
testb
pop
ret
pop
jbe
pop
mov
cltd
mov
xchg
inc
outsl
cltd
std
les
add
cli
adc
scas
dec
loope
xor
fisubs
pop
pop
in
push
in
movsb
cmp
push
mov
xor
mov
jb
lods
mov
test
xor
or
aad
call
dec
leave
dec
roll
rorl
pop
fnstenv
pushf
outsb
xlat
outsl
iret
dec
sahf
lea
jb
pusha
cmp
stc
cmp
jmp
loope
jecxz
out
addr16
outsl
popa
xchg
jmp
test
pusha
push
cli
xor
call
inc
dec
cltd
cmp
jle
incb
scas
pop
pop
nop
daa
out
jg
xor
jb
jo
add
sahf
mov
gs
ljmp
jns
fdivrs
decb
inc
out
sahf
ds
push
cs
neg
insb
dec
add
idiv
clc
clc
pusha
sub
lea
jmp
cmpsl
adc
fwait
in
int
mov
lea
sti
mov
push
inc
push
xchg
fs
fdivl
lea
movsb
adc
das
lcall
cltd
mov
mov
test
out
dec
or
fdivr
mov
aam
out
mov
mov
jle
iret
or
scas
mov
popa
and
sahf
es
fidivs
xchg
dec
sahf
es
outsl
sbb
movsb
into
lea
je
pusha
pusha
pushf
lea
jmp
jmp
movl
pusha
push
mov
lea
jmp
call
pusha
mov
pusha
movl
movb
lea
jmp
test
pushf
call
pushf
movb
call
sbb
int
arpl
xchg
mov
pop
iret
scas
jbe
and
jl
inc
cmpsl
scas
imulb
xor
xchg
dec
outsl
out
call
mov
and
jge
cmp
sbbl
in
lods
mov
mov
mov
ret
lret
lods
push
xchg
dec
aaa
cmpsl
insl
cmp
cmpb
pusha
pushf
mov
movb
lea
jne
or
mov
jmp
aam
lret
out
lds
daa
leave
outsl
loope
push
fxch
jge
fldt
xor
sub
sub
mov
mov
push
cmp
stos
xchg
cmp
mov
inc
adc
sub
and
inc
loopne
pushf
xchg
dec
push
pop
dec
fsubrs
mov
jmp
add
test
inc
outsb
scas
and
call
outsl
cmp
inc
push
aas
fnstcw
imul
jbe
ss
xor
subb
shll
pop
daa
xchg
mov
inc
xchg
xor
in
aad
jno
divl
pop
call
test
test
out
and
pop
in
mov
in
in
xor
fs
test
xlat
or
cmp
mov
xor
call
inc
dec
fwait
jae
sbb
rcll
lcall
inc
call
shrb
mov
rol
jle
push
lea
jae
jmp
call
mov
out
lds
sub
daa
jno
dec
outsl
xchg
loope
addb
pusha
xor
push
das
push
cwtl
mov
fstps
dec
push
and
out
mov
mov
or
gs
xor
mov
adc
out
mov
in
cmp
push
cmp
inc
mov
mov
data16
xchg
scas
jae
lret
push
daa
fidivrs
je
xorl
push
push
dec
mov
mov
notb
mov
cli
cli
je
pushf
test
push
adc
dec
push
inc
popf
or
mov
cmp
filds
mov
leave
fnstsw
xor
jbe
inc
movsb
es
shlb
adc
fwait
adc
pop
lret
jbe
push
adc
cmp
mov
mov
mov
fwait
cli
xchg
mov
imul
in
or
hlt
sub
les
les
testl
push
sahf
loope
pop
push
pop
lods
dec
lock
inc
sub
inc
mov
gs
adc
jno
or
push
pop
ljmp
mov
filds
cmc
mov
xchg
fldt
push
push
adc
cmp
bound
shr
loopne
test
and
xchg
push
xchg
cmp
sub
xlat
pop
sbb
aad
ret
or
push
lock
std
std
adc
dec
mov
ret
jae
icebp
ss
dec
lods
imul
ss
outsb
pop
cld
jge
jbe
in
mov
arpl
push
pop
lret
in
and
test
sar
push
add
cmp
inc
out
arpl
xchg
push
push
lods
inc
jne
pop
arpl
bound
and
jmp
adc
inc
jmp
call
inc
jmp
stc
clc
push
cmp
jmp
pop
mov
out
adc
bndstx
xchg
xchg
or
ss
ret
pop
push
xchg
sub
push
cmc
adc
jle
xchg
out
pop
xchg
ja
into
push
xchg
push
mov
mov
push
in
aas
pop
push
out
xchg
xchg
daa
mov
pop
push
pop
cmp
push
xchg
xor
push
pop
pop
sbbb
push
out
aad
insl
add
and
jp
out
mov
mov
cmp
mov
jp
push
push
xor
int3
ret
bound
out
xlat
lods
push
sbb
push
inc
inc
in
scas
test
push
xchg
xchg
bound
addr16
push
frstor
inc
sarl
pop
push
pop
cmp
push
stos
in
repnz
cld
xchg
xchg
in
add
push
scas
dec
fildll
out
pop
mov
xor
sbb
out
adc
cltd
pop
aaa
mov
push
popf
and
push
out
adc
jnp
mov
push
loop
stos
repnz
mov
out
aam
test
orb
cld
push
xchg
repz
mov
cmp
out
xlat
rorb
or
gs
out
aam
scas
loopne
adc
cld
xchg
xchg
in
add
jl
xchg
insl
push
je
pop
jg
jb
push
ret
movsl
out
push
out
push
xchg
pop
pop
mov
cld
adc
aas
xor
jle
lea
cmp
jae
aam
or
adc
xchg
bound
out
push
stos
gs
inc
or
out
push
stos
sbb
mov
push
push
jnp
push
scas
out
sbb
add
pusha
movl
call
pusha
push
lea
je
test
cmc
test
add
call
jae
inc
mov
pushf
mov
mov
not
inc
jmp
jmp
insb
dec
push
loop
lds
scas
cwtl
xchg
pusha
adc
movsb
pop
dec
xlat
int
insl
loopne
sbb
sahf
adc
je
pop
mov
mov
dec
adc
pop
jbe
adc
jbe
jne
mov
mov
inc
mov
repnz
pop
inc
sub
je
ficompl
in
je
jl
into
pop
push
addl
icebp
cmp
mov
cltd
test
cmp
xor
sti
cli
insb
pushf
pushf
in
mov
int3
in
inc
push
sub
pusha
pusha
lea
call
call
inc
out
loopne
call
and
adc
inc
jo
inc
cld
mov
push
flds
lods
jge
mov
out
cmp
cmp
pop
out
sub
ror
out
add
lcall
adc
shlb
sub
cmp
shrb
add
sub
clc
incl
pushf
stc
pusha
cmp
mov
cmc
cmp
test
movw
call
pusha
call
movb
pushf
cmp
bswap
lea
pop
push
movsbw
pop
mov
pushf
call
pushf
adc
call
movl
push
pusha
pushl
pushf
lea
jmp
jmp
pop
test
loopne
lds
aam
in
adc
repnz
ret
cmpb
insl
or
scas
push
fwait
adc
std
push
mov
mov
rcl
jge
bound
call
cli
pushf
aad
andb
call
shl
mov
shl
and
in
xor
in
nop
lcall
fcmovnbe
or
push
dec
mov
push
adc
push
cltd
xor
loopne
jmp
cmpsl
inc
add
into
shl
mov
jne
sub
popf
in
xor
dec
inc
push
stos
and
lds
inc
cmp
dec
fnstcw
mov
sub
jp
mov
push
jne
mov
cld
adc
and
xchg
sub
xor
mov
arpl
incl
and
into
mov
in
inc
popa
inc
jmp
xor
fwait
out
xchg
scas
aaa
push
mov
or
mov
ret
xchg
test
mov
arpl
inc
sbb
pop
xchg
push
or
dec
outsb
push
pop
pop
test
push
lods
imul
xchg
ss
daa
sahf
mov
rorl
add
pop
mov
mov
jecxz
mov
popf
pop
sub
add
decl
mov
cmp
call
je
cmp
out
mov
jp
jb
push
mov
cld
dec
hlt
frstor
mov
mov
pusha
xchg
mov
add
rcrl
lods
mov
cwtl
call
push
ret
test
fwait
and
out
add
push
xor
xchg
add
out
xor
xorb
sbb
sub
mov
int3
int3
or
hlt
fsubrs
cli
call
adc
jae
jge
mov
inc
jecxz
in
ljmp
dec
or
jne
cmp
pop
lods
mov
mov
imul
sarl
and
cmp
dec
nop
shlb
bound
cmpsl
sbb
xorb
aaa
adc
mov
arpl
ja
popa
mov
aad
push
fsubp
or
lds
pop
lret
mov
inc
xor
mov
jo
hlt
pop
mov
sub
jp
add
and
or
add
xchg
out
inc
cwtl
rorb
jl
pop
pop
mov
push
inc
xchg
add
sub
add
je
push
notl
cmp
scas
pop
std
jns
add
lods
add
xchg
and
in
dec
cld
jl
mov
cmpsl
mov
adc
cmp
pop
in
fcmovnu
out
outsl
sbb
inc
jns
sub
jns
jg
dec
add
ljmp
push
in
mov
cld
sub
dec
xchg
hlt
fs
mov
dec
mov
push
mov
push
addl
jecxz
or
cmp
sub
flds
mov
shlb
pop
adc
pop
out
push
mov
cs
in
push
stos
dec
aad
outsb
daa
mul
mov
pushf
add
mov
add
jnp
mov
aas
lahf
daa
out
dec
push
pop
jg
ja
xor
int
xor
mov
cltd
mull
inc
and
inc
out
jge
ret
and
and
inc
repz
lcall
jne
pop
arpl
xor
movsl
repnz
popf
sbb
shl
cwtl
push
xchg
push
sbb
pushl
xchg
mov
into
push
adc
and
jo
push
nop
lock
call
sub
push
add
add
aaa
fstps
fisttps
push
xlat
jg
aas
call
and
lods
adc
add
add
stc
bt
push
das
lea
adc
btc
mov
lahf
sub
lea
setl
cmp
push
xor
xor
dec
push
bsf
push
or
inc
aad
sub
cwtl
lea
pusha
mov
pusha
jmp
pusha
call
nop
xor
xchg
mov
sbb
adc
jg
and
jns
and
dec
xchg
xor
mov
cli
aam
fcompl
or
in
mov
bound
call
loop
sub
fxch
lds
mov
repz
dec
test
cmc
or
mov
insb
int3
roll
aam
iret
into
es
inc
jl
cmpsl
adc
push
push
push
mov
jle
fsubrs
lcall
mov
ret
sub
push
jmp
inc
push
sub
clc
leave
sub
call
sbb
cwtl
inc
and
push
es
or
push
jle
mov
dec
dec
and
push
jb
sbb
adc
ljmp
inc
mov
cmpb
call
pusha
mov
pusha
push
push
mov
lea
jmp
mov
pusha
bswap
pushf
lea
mov
pushf
pushl
ret
leave
pop
imul
lds
ds
push
or
andb
xchg
xchg
sbb
add
inc
jno
pop
or
sti
stos
xor
cmp
add
or
xchg
lcall
mov
mov
pop
arpl
fs
sbb
lods
add
ret
stos
mov
out
mov
loop
bound
mov
xchg
popa
fstps
sub
adc
push
adc
data16
sarb
pop
and
lea
je
cmp
clc
pushf
pusha
or
movb
call
mov
scas
lds
scas
shlb
mov
out
jmp
jmp
dec
les
adc
push
dec
mov
add
add
out
jb
pop
push
or
cli
ret
ds
shll
aas
imul
adc
sbb
xor
ret
inc
pop
and
lahf
add
xchg
jl
mov
xor
inc
inc
sub
mov
sbb
idiv
xor
or
cltd
cmp
inc
jno
jno
cmp
jae
int
mov
lea
shl
rcl
xchg
xadd
aad
clc
aas
mov
push
xor
stc
mov
lea
stc
push
xchg
movsbw
stc
mov
clc
jmp
call
repnz
inc
xor
cmp
pop
mov
and
sub
pop
push
sub
xor
and
adc
lret
aaa
pop
and
shrb
orl
mov
cmpsb
cmp
lret
cmp
sti
xor
mov
aaa
cli
fld
mov
ja
popa
cmpb
push
dec
pushf
mov
pop
inc
mov
cmp
add
cmpsb
push
lret
sub
cmp
adc
je
dec
mov
and
fldcw
sbb
lret
ds
push
mov
mov
sti
xor
int3
bound
cmp
into
cmp
int3
push
pop
out
das
sbb
mov
push
or
jbe
sbb
add
xchg
adcl
in
repnz
jns
in
dec
adc
aad
inc
adc
cmp
es
cwtl
mov
jmp
cmp
adcb
lds
xchg
std
pusha
out
mov
ja
mov
add
repnz
test
and
xor
cmp
jle
mov
pop
add
add
cwtl
inc
popf
int
mov
jmp
fimuls
jp
in
test
or
mull
push
jle
dec
faddl
sbb
mov
data16
jle
push
mov
icebp
cmpsb
jo
mov
xchg
cmc
in
das
cs
repnz
and
inc
scas
pop
mov
je
push
loope
test
addl
cmpsl
idivl
xor
mov
daa
adc
mov
adc
addr16
push
stc
arpl
pop
test
sbb
mov
aaa
mov
mov
out
xchg
dec
adcb
test
add
push
mov
add
out
cmpsb
js
mov
test
inc
lods
add
mov
or
lahf
cmp
add
mov
cmp
or
cmp
aas
cmp
adc
cmp
mov
aaa
add
andl
jg
sbb
stc
scas
mov
jle
push
ljmp
pop
arpl
cmp
mov
sahf
mov
sbb
xor
inc
cmpsb
scas
push
jle
pop
cmpsb
cmp
sarl
and
xor
cltd
pop
stos
repnz
cmp
cmp
cmp
mov
push
push
cmp
pop
mov
push
sbb
adc
sub
mov
sbb
int3
mov
inc
mov
js
cmp
mov
ss
scas
pop
xor
push
push
xchg
mov
nop
aas
add
es
jle
dec
jmp
das
mov
cli
fs
jo
dec
sarb
pop
mov
push
pusha
and
mov
mov
cmp
mov
sub
push
xchg
dec
add
mov
or
stos
adc
or
push
mov
push
sub
or
or
mov
jl
mov
stos
adc
sahf
out
outsb
das
mov
sub
pusha
into
pop
mov
data16
push
ljmp
lds
stos
jbe
cmp
jg
mov
pop
xlat
test
andb
mov
xor
repnz
xor
mov
and
inc
pop
out
jo
dec
xor
mov
pop
sub
ss
cltd
cmpsb
jp
cmp
sbb
push
sub
cmp
and
cmp
sbb
mov
cmp
sbb
jne
jle
cltd
or
js
mov
fmull
xor
adc
pop
shl
outsb
fbld
test
sub
mov
and
mov
and
push
das
xor
repnz
and
dec
inc
jb
dec
pusha
mov
mov
push
mov
sub
sub
fs
sub
mov
stos
adc
out
sbb
int3
mov
mov
xor
adc
cmp
shrl
or
jp
arpl
pop
mov
scas
cmpsl
mov
xor
inc
cmpsb
es
sub
add
jo
divl
mov
test
js
sbb
out
pop
dec
xlat
cmp
push
cmp
dec
pop
cmp
xchg
bound
pusha
and
pop
push
les
inc
jp
adc
cmp
mov
scas
add
dec
subb
pop
add
subb
ficompl
jle
insb
mov
cmp
pop
mov
and
adc
cli
je
cmp
add
daa
jle
jp
cmp
push
pop
mov
inc
fwait
mov
jb
xor
jns
sub
sub
lods
test
aaa
jne
ss
shl
mov
jecxz
and
incb
pop
xor
popf
and
jb
sub
mov
pop
mov
or
push
mov
mov
or
inc
cli
mov
push
int3
sub
ja
sbb
add
push
push
and
lcall
xor
push
sub
sbb
ss
push
adc
divb
mov
inc
mov
ss
mov
sbbl
icebp
sub
adc
scas
adc
pop
mov
ret
pusha
xchg
pusha
dec
cmp
or
fwait
mov
scas
sarb
scas
inc
sti
ret
sub
mov
push
inc
fnstcw
and
xor
ljmp
dec
jns
push
xchg
xchg
xchg
push
xchg
dec
mov
xor
mov
outsb
cld
jle
shll
scas
mov
enter
pop
xor
ss
push
sub
xor
xor
inc
jbe,pn
pop
adcb
scas
push
add
cmp
push
xor
iret
cmp
and
cmp
js
xor
mulb
cmp
je
cmp
add
sub
into
xor
xor
ss
push
cmp
js
cmp
xor
xor
mov
mov
xor
xchg
mov
jl
mov
divb
and
cli
pop
mov
daa
xchg
xor
pop
inc
cmp
push
mov
inc
cli
cmp
stos
pop
xchg
cs
mov
sbb
cmp
lods
cmp
out
es
cmp
push
mov
jle
inc
ss
cmp
and
push
xchg
lcall
test
arpl
jl
testl
out
push
es
cmp
mov
or
cmp
jbe
xor
insb
sub
and
xor
adc
cmp
loop
xor
bound
sahf
les
orb
and
jl
data16
dec
jp
push
adc
and
jl
subb
js
push
mov
aam
jp
aad
ss
push
imul
mov
fdivrl
push
push
pop
sub
pop
pop
jl
jle
and
dec
pop
adc
pop
scas
add
sub
fimull
js
sbb
inc
jne
push
mov
pop
xor
fldenv
scas
dec
pop
mov
int
jp
loopne
outsb
pop
adc
and
jp
push
mov
ss
xchg
sub
mov
dec
sub
test
cmp
xor
mov
sub
inc
sbb
sbb
sbb
adc
popa
sbb
pop
mov
xor
jp
adc
scas
inc
out
push
sub
mov
stc
and
lcall
or
adc
sub
xchg
push
or
mov
pop
mov
jnp
inc
add
and
add
pop
sub
jl
adc
lret
push
cmp
mov
xchg
xor
cmp
sub
xor
enter
sub
aaa
imul
dec
mov
push
push
sub
sub
cltd
pop
mov
add
push
adc
sub
mov
mov
push
adcb
or
push
scas
xor
dec
out
sbb
inc
cmp
and
cmp
mov
push
jnp
into
and
or
pusha
or
cli
cmp
sub
js
jl
sbb
inc
xlat
mov
or
mov
roll
push
pop
cmp
push
jl
mov
push
dec
je
mov
push
xor
xor
ret
cmp
lret
jnp
movsb
mov
cmp
adc
sahf
int
mov
sbb
sbb
sub
aas
insl
sbb
add
mov
sub
das
push
scas
xor
aad
iret
idivb
das
lods
into
adc
jle
inc
push
daa
jb
mov
bound
pop
arpl
or
mov
ja
inc
sbb
mov
mov
xchg
pop
sbb
push
cs
loop
sub
push
and
dec
and
and
and
or
out
cmp
and
nop
sub
xchg
mov
fiadds
fimuls
bound
mov
sub
sub
mov
push
loop
sbb
xor
xor
sti
cmp
aas
dec
outsb
scas
xchg
or
outsl
pop
cmp
inc
js
sub
movb
cmpsb
mov
and
push
loopne
pop
xor
fmull
mov
xor
mov
sbb
inc
and
xor
iret
adcb
add
loope
cmpsb
pop
xor
orb
cmp
push
fildl
mov
push
mov
inc
push
cmpsl
scas
add
adc
inc
sbb
cli
inc
aad
je
out
pop
sub
je
sub
adc
mov
outsl
push
dec
mov
jl
push
pop
cli
push
aaa
push
stos
fidivrl
dec
xchg
inc
adc
jle
add
jno
or
mov
ret
push
dec
mov
sub
fs
or
xor
pusha
ss
out
mov
and
inc
pop
jl
jle
xor
mov
inc
cs
dec
xor
mov
and
dec
xor
cmp
jle
enter
mov
mov
jp
fiadds
insb
out
mov
and
cltd
xor
cli
or
xchg
divb
repnz
xor
ljmp
pusha
data16
xchg
fidivrl
sbb
je
repnz
sbb
xor
and
sti
inc
sbb
xchg
ss
jbe
sub
dec
cmp
adc
out
pop
scas
push
adcb
and
or
bound
pop
xchg
push
jl
arpl
jne
cmpsb
cmpsb
sbb
mov
lods
or
es
mov
add
mov
sbb
lcall
andb
push
sahf
je
adc
int
adc
mov
sbb
scas
or
xor
cmpsb
push
jbe
scas
js
push
dec
sbb
outsb
mov
push
data16
es
insb
cmpsb
xchg
fs
sub
push
ss
xlat
daa
pop
ret
push
cmp
cmp
sbb
mov
lret
or
dec
sub
push
sbb
sbb
je
pop
cmpsb
jbe
pop
mov
shlb
mov
jle
add
sub
mov
mov
push
movsl
jnp
pop
xchg
push
dec
or
mov
lcall
and
gs
cwtl
mov
dec
idivb
pop
lcall
adc
dec
xor
mov
mov
sahf
cmp
mov
dec
lahf
xor
sbb
push
std
or
xchg
mov
mov
dec
cmp
xor
jle
pop
addr16
xchg
sbb
xor
dec
lahf
xor
lahf
test
nop
xor
dec
lods
xor
sbb
push
push
and
add
testb
lods
inc
cli
out
sub
xor
mov
mov
aas
add
sbb
cmc
inc
int3
testl
jb
mov
mov
aaa
cmpsb
adc
mov
dec
mov
or
add
adcb
test
stos
pop
scas
cmp
cmpsl
or
add
call
mov
dec
orb
mov
mov
lds
adc
mov
pop
and
and
inc
les
sub
mov
jle
mov
insl
jp
repnz
repnz
mov
ss
fldenv
sub
sbb
mov
jp
outsb
mov
idivb
pop
pop
xorb
inc
mov
jbe
pop
inc
add
call
mov
cmp
js
xor
or
outsb
aaa
pusha
movsl
push
mov
mov
push
es
jle
fs
jno
mov
pop
mov
sub
cltd
ljmp
cmp
gs
movsb
ss
xor
adc
js
jb
cmpsl
cs
shrl
xor
push
cmp
or
cmp
aad
sbb
and
mov
sbb
push
popa
arpl
cmp
dec
movsb
push
add
stc
sub
add
jne
jg
xor
pop
push
in
movsb
pop
push
inc
xor
jg
cmp
jnp
and
cmp
cmp
sub
cmp
sbb
xor
pop
fnstsw
out
mov
mov
rclb
jle
orb
jae
mov
and
mov
push
rol
push
mov
mov
inc
fcompl
cmp
daa
stos
mov
push
imul
lahf
mov
pop
insl
mov
mov
es
cmp
and
sbb
sti
push
add
push
repz
loope
scas
cld
xchg
insb
jo
inc
int3
fnstsw
aaa
cmpsb
sub
mov
cmpsl
xchg
mov
cmp
mov
push
mov
push
mov
inc
cmpsb
popf
mov
and
xorb
jl
push
jns
mov
rcrb
lahf
push
jmp
in
stos
mov
ret
sbb
push
jle
sti
out
and
lea
pop
les
aaa
jle
jp
daa
push
pop
inc
sub
push
shl
xor
test
lahf
out
in
jmp
xchg
jbe
pop
push
in
inc
dec
stos
insl
es
jno
push
xchg
add
ds
idivb
pushf
js
xchg
jnp
pop
sahf
pop
mov
das
jle
lods
cmp
xor
ja
lods
ds
inc
incl
out
pop
sbb
push
repz
add
nop
jo
cmpsb
inc
mov
loopne
jbe
dec
push
dec
subps
mov
xor
je
icebp
xor
dec
jo
xchg
push
ss
sbb
push
cltd
inc
mov
mov
es
add
adc
mov
scas
scas
push
and
dec
ss
and
dec
xor
jge
mov
pushl
mov
inc
cs
fs
insb
pop
xchg
pop
jl
inc
sub
das
pop
pop
int
adc
and
pusha
xchg
lahf
mov
xchg
pop
xor
cmp
cmpsb
inc
cli
cmpsb
jbe
xchg
and
outsb
xor
cmp
bound
push
cmp
push
xchg
pop
jp
ss
cmp
xor
daa
adc
cmp
push
mov
push
or
icebp
push
xchg
adc
and
dec
es
push
or
adc
adc
or
bound
and
xor
cltd
sbb
cmp
jge
hlt
scas
lcall
mov
aas
xor
cmpsl
mov
adc
mov
push
push
cs
mov
or
sbb
mov
push
xor
cmp
xor
adc
pop
and
inc
mov
enter
and
jp
bound
inc
and
inc
fidivrs
jbe
outsb
xor
negb
and
cmp
icebp
mov
xor
mov
mov
pop
das
inc
sbb
pop
hlt
out
idivb
dec
inc
jnp
push
nop
sub
aaa
imul
cmp
adc
inc
and
inc
mov
cmp
xor
mov
sbb
xor
repnz
adc
xlat
bound
adc
mov
sbb
jb
jp
mov
xchg
add
mov
ss
and
sub
adc
inc
sub
decb
cmp
mov
cmp
xchg
and
mov
cmp
addr16
cmp
inc
pusha
fs
mov
xor
xor
cmp
xchg
xor
or
xor
cmp
push
cmpb
and
inc
clc
test
cmp
inc
lahf
jp
andb
ss
mov
jl
xor
pop
xor
bound
clc
add
iret
adc
lahf
mov
cwtl
in
xor
dec
lahf
cmp
stc
sub
fs
xchg
xor
mov
aas
jne
repz
jl
xor
pop
push
adc
inc
xchg
jno
sub
pusha
dec
xlat
arpl
sub
je
movb
cli
jbe
dec
testb
xor
cli
xor
xchg
push
sub
cmp
scas
xor
out
aaa
scas
push
sahf
insb
push
roll
xlat
out
sub
inc
push
hlt
jae
or
dec
outsb
mov
mov
sbb
mov
ret
cmp
mov
cmp
adc
sbb
data16
jno
or
jle
or
mov
mov
sbb
mov
lea
sbb
push
xchg
or
sbbb
dec
sbb
cmpsl
stos
or
mov
negb
inc
cmpsb
sub
adc
ja
aam
pop
adc
gs
outsb
sbb
jbe
jl
loop
and
mov
dec
cmpsl
xor
mov
pop
push
adc
dec
sbb
mov
pop
mov
xchg
stos
push
mov
mov
mov
daa
ljmp
mov
mov
ja
imul
mov
sbb
insb
aaa
push
stos
bound
out
add
pop
ret
adc
pop
mov
bound
cmpb
mov
adc
cmp
and
or
jle
mov
ss
fsubrl
ret
mov
cmp
push
pop
and
push
arpl
jnp
fs
cmp
jmp
cmp
testb
lods
pop
push
es
fstps
frstor
or
xor
ss
fcoml
hlt
cmp
inc
ret
mov
cmp
cmp
pop
and
mov
jp
loop
inc
nop
mov
xor
test
mov
pop
dec
or
aad
outsb
nop
and
adc
lods
mov
mov
lcall
xchg
pusha
insl
aaa
ret
mov
bound
repnz
sarb
sub
imul
add
fsubrl
and
inc
cmpsl
push
mov
push
dec
dec
loopne
push
repnz
daa
scas
add
jmp
in
bound
push
icebp
sbb
sbb
cli
or
scas
jp
pop
sub
or
outsb
mov
ss
push
xchg
or
jnp
mov
and
data16
aad
xor
nop/reserved
out
inc
mov
cmpsl
ljmp
mov
lea
inc
insb
sahf
in
jb
je
out
fiaddl
sbb
pandn
sbb
aas
jbe
mov
pop
push
ss
and
add
sub
ss
xor
push
inc
jmp
ret
cmpsl
jo
xor
scas
std
cmp
sub
or
sbb
pusha
xor
mov
cmp
cmp
ss
adc
push
in
es
cmp
cs
cmpsb
sub
sub
mov
inc
push
and
add
add
add
stos
out
xor
ljmp
push
add
sub
push
es
cmp
pop
push
adc
stc
das
lret
jnp
and
ret
mov
mov
std
xor
mov
cmp
or
sub
mov
pop
cmp
push
adc
push
lahf
in
xchg
sbb
push
sbb
ss
rclb
mov
js
adc
add
pusha
bound
pop
nop
and
xchg
mov
add
cmp
test
jb
stos
jle
aad
lods
sub
test
leave
xchg
xor
push
pusha
jle
dec
mov
stos
bound
jl
pop
mov
push
cmp
add
sbb
adc
out
std
loopne
push
sub
push
pusha
cmpsb
or
dec
pusha
jbe
inc
jp
inc
ss
inc
dec
daa
ss
movsb
xchg
cmpsl
dec
out
sub
mov
push
sbb
or
or
jle
cli
jb
pop
push
adc
stos
pop
mov
pop
and
cli
inc
mov
lret
mov
mov
das
mov
cli
add
jl
je
push
push
inc
jp
dec
cs
xor
sbb
adc
or
add
jb
jo
data16
das
push
and
cmp
xor
sub
sub
pop
ficoms
or
add
subb
and
cli
pusha
aaa
pop
xor
dec
imul
jb
or
lock
pop
clc
inc
sbb
sub
add
pop
sti
push
adc
aam
cmovle
cmp
push
sbb
add
jp
je
push
cli
pop
aaa
pop
xor
dec
jp
int3
mov
das
xor
sub
cli
push
mov
mov
push
shll
push
xor
out
and
fwait
mov
insb
nop
aas
sub
aas
adc
dec
cmp
mov
daa
xor
aas
and
aas
cmp
pushw
aas
insb
mov
ss
aas
push
cmpsb
mov
pop
mov
cs
mov
cs
or
test
jle
xchg
jle
mov
xchg
movsb
inc
push
adc
in
es
lcall
in
dec
push
mov
nop
subb
pop
mov
xor
stc
cmp
adc
push
and
stc
cmp
scas
push
inc
xchg
stc
cmp
push
insb
mov
cmp
dec
push
push
cmpsb
stc
sub
mov
cs
outsb
ret
xor
fs
sub
xor
jb
xor
mov
cmp
lahf
adc
sbb
mov
clc
cmp
pop
jno
dec
dec
mov
xor
int3
mov
rolb
jp
lahf
mov
pop
inc
xor
xchg
pop
jl
inc
sbb
adc
jp
idivb
andb
sbb
sti
push
push
push
push
add
mov
test
jo
adcb
mov
dec
sbb
dec
cmp
adcb
daa
jbe
scas
xor
xchg
xor
mov
sbb
fs
jp
sbb
bound
icebp
inc
jbe
mov
push
rorb
mov
adc
and
jbe
adc
adc
mov
je
aas
cmp
cs
adc
cmp
jl
out
add
add
pop
inc
sub
inc
push
sub
push
ret
aas
add
sbb
cmp
sub
cli
je
ret
sbb
pusha
xchg
pcmpgtd
adc
jge
sarb
mov
fwait
sub
xor
pop
lcall
test
add
inc
lret
cltd
mov
cmc
sbb
push
cmp
push
js
cmp
adc
inc
cltd
ret
adc
push
or
bound
dec
xlat
mov
inc
ss
push
cmp
jns
push
mov
and
mov
or
inc
mov
jle
mov
cltd
xor
pop
iret
jl
jbe
ss
scas
mov
pushw
lcall
cwtl
adc
sahf
andb
inc
mov
ss
or
cmovle
xchg
and
iretw
out
adc
add
sub
pop
sub
jno
adc
lret
bound
sub
mov
dec
push
aaa
push
push
sub
add
inc
ret
adc
idivl
ds
nop
push
cs
test
clc
adc
xchg
pop
and
push
lock
xor
inc
xor
imul
add
pusha
pop
sbb
push
jecxz
addr16
push
repnz
mov
sub
addb
jmp
imul
es
pop
js
xchg
adc
dec
xchg
sbb
dec
mov
push
mov
cmpsl
sub
and
iret
xor
pop
push
xor
mov
cli
xlat
aaa
leave
xor
and
pushf
inc
pop
je
or
scas
push
pop
push
push
mov
mov
dec
and
dec
js
or
cmp
ss
arpl
cmp
push
jo
cs
dec
dec
sbb
sub
mov
dec
ltr
mov
adc
cmp
dec
aaa
and
mov
lock
test
nop
or
cmp
sub
and
jne
pop
sbb
jae
push
cs
jecxz
dec
mov
mov
push
xchg
mov
mov
or
add
and
jo
sbbb
jbe
mov
repnz
inc
daa
or
push
pop
sbb
inc
dec
in
mov
mov
push
pop
mov
xor
pop
xchg
mov
push
cs
das
mov
cli
or
add
js
outsb
mov
mov
out
or
inc
into
cmp
mov
mov
adc
mov
daa
sbb
or
push
lahf
and
daa
xor
mov
fwait
jb
jle
daa
mov
xor
ret
repnz
repnz
cmpb
dec
ss
push
jns
or
xchg
or
in
movsl
push
fdivl
repnz
jbe
fs
add
cmp
dec
mov
scas
adc
jo
xor
mov
repnz
mov
cmp
shlb
pop
ss
enter
es
mov
jle
js
push
fs
push
and
jp
mov
xor
sbb
push
das
andb
pop
cli
push
aaa
dec
test
das
xor
and
cli
push
aaa
or
add
js
outsb
das
and
jp
rcl
mov
adc
jle
jl
insb
and
dec
mov
cmp
xor
sbb
or
add
js
cli
fs
push
xor
ss
das
or
or
insb
aaa
bound
push
sub
lcall
dec
mov
jl
xor
sub
push
and
push
cli
or
add
jp
js
outsb
daa
inc
mov
dec
bound
sbb
inc
mov
and
sbb
adc
or
add
jp
je
insb
and
dec
aaa
dec
das
cmp
inc
xor
sub
and
push
and
or
jle
jbe
jo
negb
push
mov
cmp
xor
sub
and
and
push
or
or
jp
js
outsb
imulb
and
cli
dec
xor
cli
mov
and
sbb
adc
adc
add
js
outsb
xor
negb
dec
and
mov
cmp
mov
jb
lcall
push
cltd
cmpsb
jne
adc
and
mov
ss
pop
jo
push
jbe
ud1
push
mov
pusha
mov
and
stos
cmpb
bound
push
stos
xor
jb
xchg
mov
insb
adc
jmp
jp
jne
ret
and
mov
cmp
xchg
ss
cmp
xchg
xor
push
mov
jnp
and
loopne
dec
and
xor
push
sbbb
cmp
shlb
jnp
and
enter
sbb
push
stc
pop
jbe
call
movsl
inc
xor
sub
pop
nop
cmp
sbb
mov
mov
push
add
cmp
sbb
cmc
jle
jp
idivb
sahf
adc
imul
test
pop
lock
mov
add
dec
insb
push
divl
push
les
inc
inc
adc
negl
shll
and
dec
sahf
insb
fstpt
push
pop
fcmovb
adc
inc
push
push
lods
clc
push
test
push
xor
iretw
sarb
sub
push
jl
jno
add
clc
andb
sarb
cmp
jbe
mov
aas
aas
jp
pop
sarb
inc
jb
mov
jbe
push
mov
outsb
push
fcmovnu
dec
jp
adc
imul
push
add
jp
xor
and
dec
xorb
fwait
sub
outsb
sub
cmp
and
and
jne
insb
xor
sbb
scas
inc
push
dec
pop
or
sub
adc
mov
mov
test
sub
mov
xor
jle
mov
orl
xor
pop
adc
negl
lcall
add
adc
testb
cli
out
fldenv
pop
mov
insb
repnz
mov
movsl
scas
push
jbe
fs
scas
cs
xchg
sbb
push
pop
pop
push
mov
cs
jb
jl
pop
pop
xor
adc
and
loopne
adc
xor
mov
jo
sbb
and
lea
scas
or
fwait
nop
bound
in
clc
push
sub
cmp
or
push
pop
pop
cmp
cmp
pop
pop
sub
dec
adc
cmp
jbe
outsb
inc
inc
sbb
nop
jb
sub
xor
jle
lds
and
outsb
push
xchg
clc
frstor
jbe
cmp
push
mov
scas
shrw
fiadds
lahf
inc
pop
xor
add
mov
ljmp
mov
mov
push
mov
sbb
add
sub
push
shl
inc
repnz
mov
mov
idivb
adc
push
pop
scas
push
mov
inc
mov
das
xor
es
push
or
pop
sbb
inc
jb
and
sahf
xor
pop
pop
push
xchg
mov
add
add
aas
es
mov
dec
iret
test
adc
ret
jle
mov
mov
outsb
pop
outsb
xchg
adc
mov
mov
lods
cmpsb
pop
push
add
pop
subb
das
sbb
or
icebp
mov
sbb
das
ss
xchg
xor
push
out
es
jl
adc
insb
in
sti
inc
pusha
cmp
or
js
loopne
cli
pop
test
test
add
ret
insb
js
addr16
icebp
je
xor
shr
sub
push
pop
fs
sahf
pusha
mov
push
mov
sub
loopne
jl
xchg
pusha
out
cltd
sub
notb
mov
sub
adc
in
push
or
push
out
cmpsl
xchg
adc
push
daa
mov
cmp
xchg
cmpb
push
sbb
cltd
pop
daa
cmpsb
xorb
idivl
dec
les
sbb
xor
or
jp
lds
push
aaa
je
cmp
jl
sbb
jb,pn
cmpsb
and
push
mov
inc
dec
cmp
cmp
sub
into
pop
pushf
sarl
sbbb
loope
pusha
outsb
adc
pop
pop
scas
aad
dec
cli
int3
mov
xchg
aas
mov
sbbl
imul
das
stos
and
loope
fistpl
int
ss
movsl
lahf
cli
xchg
aaa
mov
std
sbb
imul
das
jecxz
aad
push
or
jnp
and
dec
xlat
scas
mov
inc
and
cmp
xchg
or
lods
cmp
jno
cmp
xorb
xchg
pop
cmp
xchg
push
cmp
sbb
xorb
and
jp
sbb
adc
ja
adc
fs
mov
lcall
bound
dec
into
inc
cmpl
js
cmpsb
cmp
shrb
mov
scas
sub
sbb
pop
mov
mov
fwait
inc
in
add
out
dec
and
and
sbb
rcrb
inc
stos
adc
pop
sub
inc
mov
push
outsl
adc
and
aas
jg
insl
mov
jle
adc
loopne
ds
jns
lds
or
int
mov
mov
mov
fistpl
xchg
es
aam
scas
cmp
idivb
and
inc
and
pop
and
les
dec
jo
and
out
cli
outsl
aaa
out
xor
jmp
mov
mov
aaa
and
repz
ja
mov
mov
lods
mov
sbb
repnz
rclb
cmp
or
mov
mov
sbb
jnp
sahf
lcall
mov
sbb
sub
mov
or
mov
and
adc
fmul
vmovshdup
jno
push
loope
push
testb
sbb
ja
push
jle
aad
mov
sbb
imul
shl
lods
xor
out
pop
mov
icebp
mov
adc
pop
pop
mov
repnz
pop
imul
decb
cmp
out
add
ja
jbe,pt
repnz
rcrl
loop
sub
mov
daa
jb
xor
cmc
xchg
testl
mov
push
aaa
mov
xor
ficomps
pop
sub
xor
pop
and
pop
mulb
repnz
je
jb
jnp
mulb
and
ljmp
jp
fwait
lcall
cltd
add
cwtl
xchg
ud2
pop
stc
xchg
mov
sbb
xor
push
xor
cs
das
mov
inc
mov
rclb
mov
in
xor
fdivl
adc
pop
pop
xchg
sub
sbb
push
es
outsb
fidivl
ljmp
mov
lret
and
inc
sub
aaa
xchg
fwait
pop
shrb
mov
xor
sahf
in
jge
mov
sbb
repz
mov
jmp
cli
pop
mov
sub
fcomps
adc
stos
test
mov
and
sbb
cmp
adc
adc
imul
imul
xor
push
mov
sbb
cmp
xor
dec
xchg
cmp
pop
mov
ja
lahf
mov
cmp
push
or
sub
mov
mov
mov
fsubrl
divl
and
sub
mov
sub
imul
das
int
mov
and
int3
xchg
flds
mov
cmp
sbb
xor
xlat
dec
add
ret
inc
xor
out
fidivrl
stos
movsl
lcall
mov
mov
sti
jge
sbb
ds
mov
out
ds
pop
xchg
lock
push
push
addr16
out
btc
outsl
dec
xchg
mov
ss
add
xchg
cld
push
ds
idiv
push
or
dec
ds
or
lcall
daa
adc
mov
push
mov
cmp
mov
cld
pop
fnstsw
sbb
sub
daa
sbb
sbb
out
sbb
stos
cwtl
and
push
add
and
xor
movsb
lods
mov
mov
push
inc
xor
pop
xchg
ds
leave
sub
outsl
jl
dec
nop
cmpsb
and
sbb
ss
jae
or
xor
aas
js,pn
dec
add
and
adc
inc
inc
inc
adc
xchg
push
sha1msg1
mov
mov
ss
vfixupimmsd
aaa
pop
push
inc
adc
add
mov
jo
test
imul
push
shlb
push
xchg
inc
es
add
xor
sub
cmpsb
dec
sbb
and
mov
xlat
jp
inc
jp
push
cmp
push
xchg
dec
dec
sbb
sbb
sub
mov
sahf
pop
dec
sbb
xor
pushl
xlat
dec
xor
inc
jp
pop
loop
pusha
movsl
setns
ret
mov
ficoms
mov
scas
add
pop
loope
push
inc
inc
xchg
mov
and
mov
xchg
sub
cmp
push
or
ja
cmpsb
dec
adc
or
pop
xchg
outsb
out
sbb
dec
and
fdivr
cmp
sub
xor
das
dec
lcall
mov
pshufw
push
add
sbb
lahf
int
sub
sbbb
divl
jp
mov
sub
cmp
inc
mov
js
adc
add
push
or
pusha
out
pusha
js
mov
ss
add
or
cmp
loop
jp
add
mov
xor
inc
jl
cmpsb
js
aad
mov
xchg
dec
ja
pop
bound
mov
adc
je
lea
mov
push
mov
ret
pop
aaa
test
mov
andl
aaa
fnstenv
rcll
push
lret
sbbb
add
and
jecxz
mov
sub
adc
pop
mov
nop
push
and
push
pop
push
push
movsl
jp
adc
jnp
or
cltd
pop
scas
sub
lods
mov
insb
xchg
data16
fs
adc
pop
push
lret
stos
dec
sbb
cs
in
bound
inc
inc
add
push
ljmp
or
xor
dec
inc
xor
sbb
or
cmp
mov
outsl
cmp
pop
or
push
jne
mov
dec
and
jecxz
cltd
or
cmp
push
test
xchg
push
xor
xor
mov
mov
xchg
pop
mov
lods
adc
xchg
pop
fs
daa
adcb
repnz
xor
cmp
pop
xlat
fdivs
xor
sahf
jge
dec
movsb
push
sbb
or
push
pop
sub
mov
cmpsb
jl
or
cmp
loope
ja
xor
sub
jl
jle
and
fs
fstpt
adc
pop
sub
aas
jne
and
xor
mov
sub
or
jb
inc
stc
jp
xchg
and
and
lahf
or
mov
scas
cmp
or
cmp
dec
or
pop
insb
pop
sarl
adc
daa
mov
lahf
shlb
and
gs
and
bound
fimuls
inc
push
add
pop
push
add
xor
cmove
sub
cmp
push
mov
dec
add
push
insb
xchg
lahf
bound
add
subl
scas
jb
cmp
xor
mov
sbb
and
fsqrt
shll
pop
xchg
xor
adc
lahf
mov
les
push
insb
cs
add
stos
xchg
add
and
xor
stos
sub
insb
add
push
pushf
xchg
jmp
jb
std
nop
pop
and
or
inc
adc
or
pop
repnz
jnp
pop
push
int
sbb
sub
lds
js
xchg
jb
aaa
jp
popf
js
push
stos
adcb
data16
pop
sbb
scas
push
pop
sub
xor
jno
test
cmpsb
xchg
sub
cli
cmp
dec
loope
scas
adc
insb
lret
rclb
adc
sbb
loopne
lcall
dec
add
xor
xor
push
inc
push
mov
mov
adc
xchg
mov
scas
adc
cmp
cltd
jo
pusha
outsb
sbb
ss
add
sbb
sti
push
push
js
ret
add
leave
and
xchg
sub
cmp
xor
rcrb
mov
sahf
jns
xor
cli
dec
aaa
or
inc
or
inc
mov
cmp
push
mov
and
cmpsb
jle
mov
push
jmp
push
cmp
cmpsl
sub
sub
mov
aad
leave
es
or
and
mov
rolb
aas
sbb
xchg
pop
push
mov
mov
sbb
inc
inc
adc
in
jp
sub
xor
push
cmp
cmp
addb
xchg
pusha
ss
xlat
cmp
stos
mov
fs
sub
test
jp
out
mov
dec
add
stc
xor
dec
dec
test
xor
movsb
ret
or
push
jbe
je
mov
push
mov
insb
cmpsb
cmpsb
dec
pop
movsb
push
out
lods
xchg
push
out
mov
xlat
sub
cmp
push
std
cmp
adc
pop
mov
mov
jl
bound
mov
stos
stos
dec
push
jno
pop
xor
xor
insl
andb
cmp
sbb
je
cmp
pusha
mov
ss
inc
jle
scas
cmp
xor
js
or
jp
pop
dec
xchg
inc
invd
push
jp
sbb
inc
insb
and
or
xorb
mov
mov
mov
mov
adc
testb
mov
xor
pop
fwait
or
dec
jmp
orl
push
jg
cmp
andl
addl
or
add
cmp
push
sbb
cmp
add
cmpsl
cs
sub
sub
jnp
jp
xor
je
pop
adc
mov
adc
addb
pop
mov
cmp
je
jnp
js
clc
push
jp
xor
je
inc
scas
inc
sbb
jle
ficompl
cmpsb
cmp
andb
je
ss
and
imul
sub
mov
push
insb
inc
pop
sbb
cmp
xchg
clc
sub
adc
or
add
pusha
lds
push
pop
cmp
in
jb
and
mov
jmp
mov
dec
pop
orb
adc
push
pusha
cs
stc
scas
pop
bound
pop
and
test
or
dec
jp
cmp
xor
xchg
jmp
jg
std
mov
pop
jl
sub
mov
jle
aad
repnz
idivb
sbb
add
ljmp
push
xchg
pop
sbb
shrl
push
fisubs
scas
or
mov
mov
mov
sub
bound
xchg
repnz
mov
inc
jl
and
and
or
mov
cmpsb
adcb
mov
cmpsl
inc
jbe
stos
adcb
sbb
add
mov
pop
inc
push
outsl
mov
xor
jl
xor
jle
sbb
xor
xor
xor
jp
pusha
sub
xor
mulb
pop
mov
lods
insb
fsubp
je
mov
rorb
cmpsb
pop
mov
xor
clc
xlat
insb
pusha
aas
and
xchg
cli
sub
aas
imul
dec
push
cli
sbb
pushf
push
jmp
cli
pop
or
cmp
push
push
xor
std
sub
mov
loopne
or
mov
cmp
jnp
fs
and
mov
adc
sti
in
xchg
inc
adc
bound
add
jl
push
pop
mov
push
sub
cmpsb
push
xchg
xor
mov
pop
movsl
inc
pop
and
lods
and
jbe
push
xor
cmp
insb
jl
jp
inc
xchg
lods
fiadds
cmp
cltd
cld
jns
jne
or
stos
xlat
mov
mov
stos
scas
mov
xchg
pushf
data16
jo
pop
jbe
out
jne
adc
bound
mov
adc
cmp
xor
or
es
mov
dec
es
add
jle
lds
mov
adcb
loopne
cld
stos
pop
dec
inc
icebp
insb
add
stc
in
sbb
dec
adc
sbb
stc
bound
xor
pushf
stc
jl
jnp
add
fcomp
ret
add
xor
xchg
cmp
jae
addr16
outsb
inc
push
sub
pushf
adc
adc
mov
mov
adc
jl
xchg
mov
adc
push
mov
and
outsb
or
pop
xor
and
inc
jne
pop
jp
pop
push
jbe
adc
sbb
sub
pop
cs
scas
adc
mov
inc
push
pop
or
pop
push
lea
or
and
sti
jle
ss
outsl
sub
pop
sbb
mov
push
sub
fs
pop
mov
inc
jbe
mov
fs
nop
dec
inc
push
inc
jle
shll
adc
in
ret
push
jmp
outsb
jmp
mov
and
push
adc
push
js
adc
and
mov
leave
insb
ljmp
pushw
cmp
xor
cmpsb
or
cs
mov
sbb
sub
sbb
xor
push
lret
jle
inc
pop
cmp
jo,pn
sub
into
js
push
fmul
add
cmp
push
clc
or
cmp
pop
lahf
mov
xchg
popf
lcall
andb
mov
xor
mov
cmp
sbb
sbb
sub
sub
stc
jp
jno
jb
rolb
nop
sbb
sub
sub
push
outsb
sub
clc
fsts
adc
mov
das
or
mov
push
jne
mov
lcall
je
lahf
xor
jb
sub
xor
cmp
or
mov
push
fildl
or
lahf
xor
repnz
push
ss
jp
repnz
insb
add
ss
sub
andb
cli
mov
or
lahf
xor
fwait
xor
scas
xor
repnz
stos
xor
xor
cmp
sub
pop
adc
icebp
mov
mov
pop
bound
mov
xchg
mov
pop
jle
lahf
cmp
add
mov
js
push
pop
adcb
jb
xchg
pop
xor
push
jp
lahf
mov
adc
sub
add
aas
fidivl
xchg
sub
sbb
push
ss
js
adc
and
jae
lcall
pop
and
iret
test
aaa
jne
sti
lea
add
jnp
jb
outsb
pop
mov
xchg
jo
or
adc
icebp
nop
jle
push
add
mov
or
movsl
mov
mov
std
xor
sbb
mul
das
aad
iret
sarl
lods
aaa
cmpsl
xor
push
jno
pop
jle
xorb
jle
mov
or
nop
inc
and
mov
popa
js
add
push
pop
jb
out
in
fwait
push
ret
or
hlt
adc
jl
mov
push
ss
loopne
stos
or
and
push
ja
pop
xor
clc
xor
outsb
add
xor
cltd
push
mov
ja
js
push
icebp
push
nop
mov
add
mov
imull
xchg
loopne
stos
sbb
adc
add
arpl
or
pop
or
pop
inc
inc
inc
bound
js
push
lock
or
push
adc
jbe
das
jle
stos
bound
test
push
add
push
into
in
dec
ss
cltd
outsl
add
pushw
add
jo
and
xor
insb
xor
dec
mov
pop
and
and
pusha
jnp
js
sub
mov
jb
pop
push
sub
push
mov
int
rorb
adc
dec
test
and
insb
cmp
sub
pop
cs
jo
cltd
mov
sub
int3
stc
cmp
mov
push
cmpsl
outsl
xor
subb
js
rcll
jnp
pop
and
jle
divb
jp
cmpsb
xorb
mov
outsb
push
adc
mov
fs
cmp
or
outsb
mov
idivl
in
push
movsl
push
pop
js
dec
fnsave
and
daa
push
sahf
ss
or
adc
mov
adc
mov
js
sub
inc
pop
push
mov
cld
ss
loop
shrb
jo
aad
jno
push
and
ss
mov
shrb
pusha
pop
test
dec
add
fs
dec
in
dec
es
inc
or
dec
ficompl
xor
mov
and
mov
push
stos
and
js
push
jbe
and
push
push
and
pop
mov
loope
xor
pop
dec
push
pop
sub
imul
rorl
movsl
ficompl
jno
xor
push
xor
sahf
mov
push
mov
push
mov
movsl
adc
sahf
or
pusha
cmp
xchg
inc
mov
xor
aam
das
pusha
or
cs
cmpsl
scas
jle
mov
add
jl
clc
sbb
push
je
mov
push
jb
xchg
add
fidivl
pushf
sbb
xor
cmpb
inc
mov
cs
cmp
aas
cmp
ret
xor
sbb
jle
scas
pop
cs
cmpsl
cltd
fwait
push
and
cmp
es
pop
inc
icebp
push
push
sub
inc
lahf
push
xor
je
mov
pop
int3
pop
cli
adc
xchg
push
jno
dec
dec
outsl
mov
inc
add
pop
xchg
push
or
xchg
fs
or
sub
add
xlat
imul
inc
frstor
xchg
imul
cmp
imul
scas
dec
or
cmpsb
jbe
xchg
scas
push
mov
ss
push
imul
cmp
and
jmp
push
and
imul
xor
jbe
and
cmp
jmp
pusha
pop
stos
popf
outsl
jbe
cmp
ss
jl
push
pop
xchg
fistl
iret
sub
xchg
pop
xchg
fidivl
dec
xor
inc
addr16
cmp
and
add
fcom
push
outsb
xchg
inc
mov
test
das
or
mov
gs
push
fidivl
sub
pop
js
xchg
sub
jbe
inc
data16
outsb
fsubr
loop
mov
jbe
inc
subb
cmp
ja
cwtl
xor
das
and
sbb
mov
sbbb
scas
lock
adc
push
pop
pop
imul
sti
push
xorb
addr16
jl
mov
ret
mov
cmp
sub
push
adc
jb
mov
jbe
jl
pop
aad
ds
add
adc
outsb
xor
push
je
push
mov
cli
and
ret
mov
cmp
outsb
jb
mov
pop
dec
fdivr
xor
jo
cmp
out
dec
fdivrs
push
outsb
push
inc
lahf
xor
xor
outsb
push
loop
cmp
cmp
sub
data16
ss
ljmp
inc
sub
cs
push
stc
cli
sub
or
sub
push
xor
fistl
xor
mov
xor
test
out
bound
ss
cli
sub
fs
ss
sbb
js
cs
pop
adc
pop
push
jns
inc
pusha
inc
push
popa
xchg
pop
sti
pop
adcb
rcrl
popa
xchg
pop
mov
xchg
and
jmp
fstpl
xlat
test
ret
cs
and
lea
mov
jl
add
add
pop
data16
xchg
dec
or
mov
push
add
dec
pop
dec
push
icebp
jp
pop
sti
jl
add
xorl
icebp
push
adc
xor
clc
adc
xchg
xor
jnp
xor
push
in
mov
adc
jbe
ja
stos
pusha
pop
bound
dec
and
xchg
inc
es
push
adc
sbb
jle
or
push
dec
xchg
push
inc
movsl
aaa
xor
and
fwait
insb
bound
jmp
cmp
push
insb
cmpl
or
js
adc
cmp
testb
sbb
sub
jnp
sbb
jnp
call
jmp
jp
in
xchg
data16
or
and
add
stos
adc
aaa
push
cmp
clc
push
testl
sub
stos
add
xchg
push
dec
pop
sbb
fildl
cs
sbb
xor
pusha
cmp
outsb
cmp
pop
pop
add
cmp
jg
test
sbb
lods
cs
inc
push
clc
cmp
adc
adc
xchg
cmp
add
mov
jb
mov
dec
adc
lods
dec
movb
lods
push
scas
loopne
test
scas
fwait
xchg
test
sbb
xor
push
cmp
inc
cs
mov
js
push
punpcklbw
fwait
sbb
cmpsl
subb
ds
in
jo
jge
mov
cmp
mov
jno
add
push
icebp
mov
inc
jmp
inc
mov
sbb
bound
pop
pop
es
push
fstp
jge
pop
and
mov
inc
sub
push
mov
add
cmp
push
mov
inc
pop
add
jl
imul
xor
ss
es
sbb
jl
imul
sbb
dec
and
mov
mov
pop
inc
lods
pop
push
bound
pop
cmp
jne
inc
stc
cmp
pop
jbe
dec
sub
nop
das
push
jo
movsl
mov
stos
add
das
es
pop
insb
aaa
mov
jp
mov
sub
or
jl
push
or
sub
fs
dec
mov
ret
fisubs
repnz
das
fwait
inc
pusha
or
cmp
cmp
xchg
or
fs
sbb
jle
daa
sub
jp
pop
and
xor
es
jne
add
fs
dec
push
sub
inc
push
xor
les
jbe
sbb
pop
mov
inc
xor
pop
lcall
inc
imul
pushf
pop
fs
ret
pop
xor
mov
popa
dec
dec
inc
add
cmp
push
cmp
or
pop
lods
cmp
aad
push
pop
inc
ss
out
mov
mov
dec
add
mov
jbe
ficoms
pop
mov
data16
jl
dec
push
pop
cs
push
add
sbb
pusha
adc
loop
mov
jnp
push
adc
out
es
jp
jecxz
lods
cmp
es
and
jne
mov
sub
xor
js
sbb
or
and
xor
and
sbb
cs
jle
push
fisubs
loop
dec
dec
add
insb
shl
mov
mov
scas
pop
adc
js
sub
sub
adc
sbb
sbb
sbb
sbb
subb
aas
mov
out
stc
pushf
cmp
pop
jp
js
pop
bound
adc
je
jo
mov
insl
pop
sbb
mov
inc
sbb
test
mov
pushf
adc
popl
mov
mov
insl
xchg
ss
sbb
test
sbb
mov
push
cmp
pop
nop
std
push
cmp
xchg
popf
add
sub
inc
or
fwait
nop
adcb
in
mov
mov
in
xchg
clc
pop
daa
xor
lahf
sub
ss
ss
lcall
mov
push
sahf
lahf
or
xchg
pop
mov
es
mov
mov
imul
xchg
or
xchg
inc
push
test
mov
cmpsl
repnz
mov
cmp
imul
xlat
mull
test
cli
xchg
adc
outsl
icebp
je
scas
adc
pop
insl
sub
clc
stc
push
inc
add
mov
out
cmpsl
stos
pop
pushf
sub
sbb
fnsave
aaa
std
push
ds
fstpt
or
loopne
mov
leave
bound
push
xor
adc
stos
out
repnz
ljmp
cmp
mov
and
pop
or
mov
fiadds
aad
bound
mov
adc
jb
push
dec
inc
adc
adc
orb
cs
sbb
push
daa
cmpsb
and
inc
outsb
or
jmp
cmpsl
xchg
call
pop
push
mov
nop
xchg
out
fiaddl
or
adc
mov
out
test
pop
mov
and
not
mov
xor
pop
mov
inc
sbb
cmpsb
stos
cmp
add
repnz
mov
mov
pop
and
push
ja
jle
pop
nop
repnz
lret
xor
sbb
nop
out
shll
xlat
sarb
sbb
pushf
dec
es
cmpsb
add
test
mov
nop
or
shr
sbb
push
jb
xor
fadds
test
popa
jb
shll
cltd
dec
fwait
cwtl
js
imul
in
inc
int3
pusha
ss
jnp
pop
jns
xor
sub
mov
sbb
ja
lcall
and
jb
mov
xchg
push
or
sub
test
inc
xor
test
rclb
fiadds
bound
or
in
repnz
sbb
dec
adc
rol
and
fisubs
and
push
or
nop
and
fdivl
ja
sahf
push
mov
sbb
mov
popa
add
dec
popf
jo
pushf
scas
or
popa
ss
fwait
and
push
mov
lock
adc
adc
insb
mov
sub
ss
add
inc
pop
cs
addb
icebp
cmp
popa
je
inc
adc
xor
scas
inc
sub
dec
cmp
jle
jge
mov
xor
je
sbb
outsb
push
aaa
enter
scas
push
jo
out
mov
push
fdivs
sbb
mov
sub
mov
adc
rcrb
mov
out
add
loopne
js
cmp
pop
out
add
and
dec
or
mov
cmp
push
bound
adc
je
or
push
cmp
jbe
jle
jp
mov
inc
cmp
xchg
or
icebp
rorl
mov
popf
mov
push
stos
mov
idivb
xor
inc
outsb
enter
xchg
pop
add
test
scas
es
mov
outsl
outsb
xor
push
pop
pusha
cmp
jnp
iret
sbb
jl
push
jb
mov
aaa
cmp
pop
mov
adc
insb
stc
mov
inc
mov
cltd
sub
test
xor
adc
push
jne
data16
xchg
notl
imul
fldcw
sub
fnstcw
lahf
sbb
cmp
add
and
sub
mov
rcrl
pop
jmp
mov
andb
pop
outsl
push
xor
push
pop
mov
xchg
pop
mov
mov
scas
dec
and
xor
xchg
dec
xchg
push
jo
cltd
adc
dec
and
adc
idivb
mov
faddl
and
push
movq
or
lea
adc
adcb
cmp
inc
mov
cmp
cmp
mov
or
sbb
mov
je
lahf
xor
or
mov
pusha
js
cmp
adc
cli
xchg
pop
sub
pop
xchg
hlt
mov
mov
js
push
adc
es
dec
xlat
cld
sub
sbb
sub
pusha
and
sub
pop
dec
push
aaa
cli
mov
psraw
lret
sbbb
or
cld
sbb
sbb
jp
lcall
xor
xor
pop
sbb
lahf
sbb
ret
pusha
js
notb
fstpt
push
xor
mov
xor
fstpl
adcl
mov
cvtpi2ps
pop
adc
or
scas
adc
lret
adc
xchg
adc
push
je
push
sub
pushf
push
sbb
sbb
xorb
sbb
pushf
lahf
cwtl
or
push
mov
pop
jnp
sbb
pop
dec
shlb
cmp
or
or
jle
rorb
imul
xchg
ja
jae
jl
cltd
bound
pop
cmc
icebp
mov
inc
mov
cmp
jp
push
and
outsb
cltd
add
nop
stos
jb
sbb
mov
pusha
push
add
loop
push
insb
loopne
pop
xchg
push
scas
pusha
and
cmc
divb
jle
hlt
pop
mov
pop
dec
xor
cld
ss
dec
inc
sbb
pop
push
mov
mov
pop
mov
push
sub
push
xor
mov
pop
or
hlt
pop
jbe
mov
sbb
dec
cld
ss
dec
js
lahf
mov
sahf
sbb
ja
sbb
xor
sub
xchg
mov
lcall
push
bound
cmp
inc
daa
ljmp
in
pop
or
mov
or
mov
pop
mov
xchg
ds
push
jge
xchg
mov
and
sti
mov
adc
mov
xchg
lea
scas
xchg
aas
pop
pop
pushw
jg
inc
clc
xchg
hlt
xchg
and
outsb
and
add
cmpl
adc
sub
test
dec
xchg
xor
cmp
mov
and
int
dec
cmpsl
or
pop
dec
push
xor
scas
inc
add
adc
push
sbb
jno
out
pop
or
mov
mov
push
ss
xor
into
dec
mov
pop
xor
out
jle
push
outsl
and
xor
push
mov
or
cmp
fs
mov
jbe
and
nop
add
orb
into
jae
jmp
mov
xor
adc
sahf
rcrb
pop
inc
push
xchg
lea
jo
in
outsl
outsb
jne
xor
cmp
inc
fwait
call
xchg
out
jo
sbb
and
mov
imul
pushf
inc
pop
nop
into
loopne,pt
jns
inc
pop
xlat
push
mov
push
enter
mov
cmp
lods
pop
cwtl
or
enter
addr16
adc
pop
lss
xor
push
das
mov
dec
sar
ljmp
nop
js
jb
aaa
outsb
cmp
cs
dec
adc
mov
pop
add
stos
xchg
push
push
sbb
xor
push
sbb
loopne
sub
sub
push
and
pusha
jg
lock
sbb
es
adc
push
mov
movb
sarb
cs
jl
jbe
scas
cmpb
popa
adc
cmp
call
cmp
test
lret
xchg
cmpsl
jl
sbb
testb
stos
cmp
cs
fcoml
adc
pop
sub
inc
xchg
mov
jns
mov
lret
into
adc
xor
leave
test
addr16
ret
push
mov
imul
imul
or
and
cmpb
mov
sub
addl
ds
adc
jb
mov
mov
jl
or
es
sbb
sub
pop
cmpsl
jmp
out
ss
cmp
ret
test
xor
jne
icebp
cmpsl
enter
std
lea
pop
in
dec
push
push
pop
cmp
sbb
dec
adc
xchg
aam
and
fdivrl
mov
dec
push
rcrl
ds
and
cmp
bsr
mov
mov
inc
scas
cmp
fsts
stos
lret
fiaddl
xlat
xchg
cmp
push
pushf
cs
pop
xchg
mov
les
pop
and
sub
imulb
les
mov
sub
test
cs
xchg
mov
pop
pop
cmpsb
rcrl
adc
in
cmp
jp
mov
je
push
daa
js
mov
mov
and
lahf
les
and
dec
mov
sbb
dec
inc
jg
fistl
add
ds
pop
arpl
mov
mov
xchg
adc
add
inc
xchg
adc
sub
xchg
xor
mov
adc
sub
pop
dec
nop
fdivrs
or
mov
or
xchg
pop
mov
cmc
push
aas
inc
and
mov
jbe
dec
or
mov
ret
ja
test
mov
add
xchg
rclb
popa
out
mov
sbb
push
movsl
adcb
xor
xor
and
adc
xor
mov
or
xor
fists
and
aas
inc
dec
inc
sub
xorl
fwait
ds
rclb
jne
scas
push
loope
ds
sbb
dec
lods
pop
mov
out
push
dec
mov
cmp
add
and
lret
or
cmpsl
adc
pop
cwtl
unpckhps
push
cmp
sub
mov
push
mov
fucomp
or
add
or
out
sahf
sbb
and
lcall
jno
lods
add
sbb
cmp
xor
fcmovnb
and
cmp
rorb
inc
adc
sub
sub
xchg
outsb
inc
add
jle
mov
jle
or
rclb
stc
sub
sub
xorb
sbb
mov
and
and
mov
push
cmp
lea
jge
shlb
inc
push
je
xchg
mov
je
jb
push
sbb
or
out
or
sbb
pop
sti
add
cs
jae
rclb
xor
push
leave
cmpsb
mov
cmp
and
mov
mov
cmp
mov
cmc
adc
pop
sub
loopne
jp
push
ds
mov
or
xchg
sub
and
test
pop
sahf
ja
sub
sbb
adc
imul
js
pop
jae
mov
lds
inc
jl
adc
movups
mov
sub
mov
xchg
into
outsb
test
divl
cmc
nop
xchg
cmp
lahf
push
jbe
ljmp
jmp
das
scas
adc
cmp
mov
cmp
xchg
cmp
jg
add
xor
pop
or
push
sub
push
pop
xchg
push
inc
mov
or
imul
dec
xor
sbbb
pop
ret
sti
cmp
jo
cmp
mulb
and
cld
bound
xchg
cmp
cmp
insb
sbb
cmp
outsb
imul
jp
je
ss
sti
jbe
and
jae
sbb
sub
ljmp
jle
sbbl
dec
xchg
inc
jl
add
jl
sbb
addb
pop
testl
js
ja
cmp
das
inc
or
xchg
pushf
xchg
jg
cmp
pop
cs
jg
ja
sbb
inc
dec
adc
jg
bound
lret
cs
mov
sub
inc
fs
fwait
mov
scas
sub
sbb
jno,pn
push
jnp
aaa
pop
jnp
push
add
cmpsb
dec
clc
inc
js
sub
adc
push
pop
test
sub
dec
push
enter
xchg
xchg
xchg
out
adc
das
aas
icebp
aam
insb
pusha
sbb
cmp
push
push
sub
or
cli
push
cmc
jns
pop
out
pusha
xor
outsl
cltd
push
push
cwtl
sahf
dec
mov
pushf
dec
mov
push
add
repnz
pushf
jno
adc
mov
mov
loop
inc
pop
add
pop
lahf
mov
xchg
xor
adc
jp
aam
cmp
sub
aam
cmp
sbb
xlat
ja
pop
leave
dec
xor
jmp
sbb
inc
pop
xor
cs
cltd
stc
dec
and
cmpsb
xor
scas
sub
push
add
cli
mov
jp
nop
lea
mov
xor
cld
and
sbb
xchg
adc
mov
mov
pop
adcb
xor
mov
out
mov
mov
inc
or
mov
loopne
and
push
stc
cmp
int
andb
cmpsb
dec
inc
pusha
dec
push
nop/reserved
adc
add
mov
aas
and
push
xor
mov
cltd
cmp
mov
or
scas
or
mov
mov
mov
lret
sbb
pusha
adc
cmp
push
pop
and
xorb
jl
outsb
add
popa
push
pop
pop
scas
pop
and
jbe
lahf
jb
push
adc
lcall
and
pop
and
mov
sbb
test
xchg
mov
jb
mov
mov
aad
add
int
scas
leave
shlb
ds
subb
movsl
pop
xor
cmp
cmp
out
stos
pop
loopne
test
push
into
jp
jo
xor
out
jo
gs
xchg
sbb
push
push
data16
mov
shrl
mov
xchg
fnsave
jmp
push
dec
das
push
dec
sbb
pop
add
adc
pop
stc
mov
enter
push
lcall
js
ds
leave
xor
out
pop
inc
mov
push
sub
pop
cmp
outsb
mov
mov
ret
cmpsl
bound
push
fdivrs
xor
mov
insb
mov
mov
and
rcrb
seto
pop
sbbb
or
adc
sub
cmc
cltd
icebp
ss
and
push
push
cli
and
add
rorl
adc
sbb
mov
idivb
pop
cltd
mov
jae
push
mov
mov
js
xor
mov
push
lcall
data16
push
inc
lret
mov
push
sbb
inc
xchg
sbb
lods
into
sbb
sbb
out
mov
pop
repnz
pop
iret
sbb
jae
xchg
cmpb
mov
or
adc
je
mov
out
ljmp
jle
mov
mov
loopne
test
cmp
mov
sbb
fdiv
roll
and
fs
xchg
sub
addr16
imul
mov
in
push
pop
inc
mov
lret
aas
xor
mov
push
mov
je
sub
mov
and
mov
dec
sub
ja,pt
nop
mov
ds
stos
adc
and
adc
sbb
fnsave
xor
jle
fstps
cltd
arpl
or
push
test
and
stos
outsl
inc
arpl
pop
jnp
data16
insl
push
mov
xchg
pusha
inc
js
fcomip
scas
mov
call
jno
xor
dec
xchg
and
movsl
fldcw
ret
jmp
iret
and
mov
cmpl
loope
pop
ds
dec
lcall
push
adc
xor
lods
mov
push
xchg
or
push
aam
xchg
xchg
mov
or
xor
sti
ds
adc
or
mov
adc
and
push
jl
cmp
adc
insl
lretw
adc
into
jno
push
dec
inc
or
jle
adc
sub
sbb
loopne
lock
push
pop
rclb
stos
in
sub
jg
mov
push
adc
cld
lods
fprem1
arpl
cmpsb
xor
repnz
add
dec
sub
and
jle
rcll
je
xor
es
mov
adc
xchg
jne
adc
daa
sbb
add
flds
ss
clc
pushf
xchg
stos
add
push
aaa
leave
inc
and
out
xchg
xchg
ss
dec
adc
dec
out
sbb
jns
jp,pt
cmp
or
dec
mov
xor
and
sub
sbb
push
or
jp
adc
adc
mov
lods
xor
mov
xorl
stos
xor
aaa
cs
pusha
and
bound
shlb
xor
mov
inc
push
fmuls
or
xchg
pop
jno
pop
add
cmp
outsl
xchg
push
in
ja
stc
cmp
stc
cmp
jp
cmp
stc
jbe
inc
mov
test
daa
mov
and
mov
add
clc
lods
pop
fdivs
jl
ds
fwait
adc
insb
cmp
xlat
jae
imul
js
mov
adc
xor
mov
push
xchg
xchg
jo
stos
daa
mov
aas
push
add
subl
xchg
ds
mov
or
insb
pop
insl
push
or
jo
scas
test
sub
orb
loopne
mov
fwait
pop
pop
repz
cmp
lret
pcmpgtb
cmp
cmp
aad
sbb
mov
push
lods
mov
nop
jp
arpl
xchg
fistps
call
movsl
mov
jb
jg
jbe
lock
sub
sti
xchg
ss
xchg
jbe
insb
repz
cmp
xor
repz
inc
stos
aaa
push
inc
push
push
mov
cwtl
adc
inc
xor
pusha
pushf
sbb
cmp
pop
add
ss
xchg
nop
mov
mov
or
data16
mov
add
lods
subb
pop
in
jle
xor
sbb
add
or
jbe
adc
subl
cltd
xchg
dec
clc
mov
dec
ljmp
inc
scas
sub
xchg
xchg
xchg
shr
enter
jb
sub
push
pop
scas
jp
addb
sti
insb
xor
fidivrl
and
in
je
xor
or
jo
cmp
jne
pop
movsb
add
cmp
std
loope
push
jmp
add
loopne
xchg
push
bound
cmp
sbb
dec
mov
cmpsb
dec
loope
push
je
xor
imul
ss
outsl
and
adc
inc
lds
fsubp
xchg
dec
mov
and
lods
pop
cli
outsl
mov
test
cmp
sbb
jp
cmp
fs
inc
jae
repnz
xor
or
add
shrb
mov
jbe
xchg
adc
mov
inc
movsl
adc
jbe
ds
and
pop
adc
cs
inc
push
mov
xor
ss
mov
add
mov
scas
cs
mov
jns
push
test
cmp
and
sbb
sub
movsl
pop
mov
sub
popf
add
mov
mov
icebp
das
lods
jp
inc
inc
addl
jno
inc
push
es
push
mov
cwtl
sbb
mov
jl
push
pushl
add
and
pop
jg
xor
or
xor
bound
pusha
jo
lcall
data16
cwtl
mov
or
xor
daa
jno
jb
mov
daa
mov
ljmp
xchg
xchg
or
mov
addl
add
pop
repnz
sbb
sbb
push
mov
mov
xor
or
adc
cmp
adc
lock
sub
aas
fs
in
popf
das
pop
push
xchg
jl
adc
mov
or
xor
adc
out
sarl
outsb
dec
xchg
or
cmp
aas
aas
and
ja
xchg
out
stos
bound
aaa
or
add
mov
outsb
leave
and
mov
sub
out
sub
sbb
nop
in
jo
push
sbb
pop
and
ja
or
dec
and
sub
pop
mov
adc
xchg
and
sbb
sbb
scas
xor
pop
sbb
and
stc
je
dec
insb
push
fwait
ret
lahf
push
jnp
cs
add
push
push
xor
cs
pop
or
icebp
push
out
cs
cmp
pop
xor
jle
orb
sub
add
cmp
xor
sbb
inc
cmp
aas
mov
jo
and
add
mov
add
stc
addr16
add
daa
sbb
cmp
xor
pop
lcall
sub
xchg
inc
or
push
jnp
sub
add
xor
pushf
aaa
cmp
and
pop
imul
and
xchg
jmp
test
mov
cmpsl
out
cmp
shlb
and
sbb
aas
out
xor
xchg
sbb
sbb
insb
jbe
sbb
pop
sbb
stos
cmp
ss
insb
mov
es
adc
cmpsb
dec
and
outsl
cmpsb
repnz
lahf
xchg
and
push
mov
mov
mov
cmpsb
pop
dec
aaa
inc
sarb
push
push
push
jns
cmpsl
sub
and
sbb
fisubl
sub
push
or
sub
mov
push
sahf
xchg
cmpsl
xor
daa
or
fidivrs
mov
das
into
jle
aaa
nop
xlat
adcb
jl
aas
xchg
cmpsl
sbb
and
dec
lcall
arpl
aaa
xchg
sub
pusha
dec
stos
sbb
push
sbb
es
nop
pop
or
lahf
cld
addr16
arpl
adc
or
cmpsl
dec
das
sub
popa
sbb
sbb
pop
mov
fmuls
push
dec
bound
lock
sbb
cmc
inc
pusha
lahf
stos
xchg
cmp
push
jmp
sbb
sbb
repz
test
push
out
push
lods
cli
and
fisubl
adc
nop
sahf
nop
and
arpl
repnz
sbb
insb
popa
sub
cmp
movsb
push
imul
pusha
cmp
les
inc
xchg
bound
jbe
xchg
sub
inc
push
ret
jno
addb
xchg
sub
jge
or
je
andb
dec
subl
sbb
xchg
xor
sbb
jne
sub
or
ljmp
cs
jbe
aam
je
cmp
xor
aaa
rolb
popf
sti
insb
push
fs
jno
xchg
push
pop
sbb
pushf
setbe
ja
sbb
orl
push
xor
lcall
es
mov
mov
dec
add
pop
inc
xchg
xchg
mov
mov
or
xor
push
jo
or
sub
stos
jne
mov
ja
xor
xor
push
dec
es
aas
into
xchg
enter
sub
test
add
pop
and
es
cmp
mov
outsb
or
fwait
adc
clc
adc
cmp
aaa
push
xchg
xor
rcrb
xor
mov
jle
mov
adc
pcmpgtd
jbe
mov
pop
sti
push
ds
xchg
dec
or
lea
outsb
shl
and
mov
xorb
mov
in
inc
and
jle
dec
ljmp
outsb
push
jl
jmp
out
cs
sbb
aad
mov
jp
das
stc
cmp
cmp
addl
cmp
push
mov
jns
cmp
jp
jmp
test
xor
clc
push
in
pop
xchg
pop
pop
popa
mov
loopne
mov
jb
add
je
sub
sbb
push
and
out
and
je
and
test
nop
popa
add
and
movsl
mov
or
imul
mov
pop
nop
mov
lock
sbb
andb
dec
inc
xor
pop
iret
inc
cld
gs
cmp
daa
decb
lea
andb
adc
repz
leave
data16
les
dec
xor
loop
lcall
cmp
imul
cld
sub
sar
xchg
movsl
mov
aam
cld
jecxz
loopne
xorl
cmp
cmp
ss
sbb
sub
sbb
sbb
sub
lods
lahf
xchg
sbb
stos
xor
jno
outsb
cli
xchg
xorb
or
jo
sub
arpl
add
stc
xor
daa
pop
aas
xor
sub
xor
aaa
xchg
or
adc
cmp
xor
inc
inc
ss
je
mov
sbb
das
sti
cmp
adc
adc
and
aad
cmp
jnp
jns,pt
push
xchg
adc
icebp
cmp
xchg
cmp
adc
insb
or
xchg
cli
sbb
test
aaa
sbb
push
xor
adc
or
xchg
cmp
jns
sbb
xor
js
jl
mov
xor
mov
js
xor
addb
cs
push
repz
mov
xchg
jne
inc
sbb
pop
jp
push
pop
imul
or
push
pop
jmp
fidivs
and
sub
mov
or
andb
push
cmp
cs
ja
sub
mov
jle
cmpsb
xchg
xchg
jae
pop
xor
dec
mov
mov
xorl
scas
sub
jge
insb
mov
ret
xchg
outsb
jnp
add
adc
test
es
rcll
cmp
inc
xchg
in
insl
rorl
or
xchg
int
add
sbb
cmp
mov
pop
pop
push
aas
movl
pop
lret
cmpb
or
mov
js
in
es
in
cmp
add
mov
nop
out
mov
jle
mov
adc
sub
movsb
or
sub
les
cs
pop
xchg
lock
xor
or
cmpsb
cmp
push
sbb
push
xchg
inc
push
shlb
jns
sub
adc
push
stos
xor
out
loopne
add
inc
sbb
mov
out
mov
xor
xchg
cs
xchg
adc
into
fidivrs
cmp
or
ljmp
subl
xor
xor
xor
jbe
mov
pop
ds
sub
test
divl
mov
ja
xchg
addb
push
sub
pop
icebp
and
pop
icebp
mov
ss
bound
pop
cld
into
adc
mov
ss
insl
pop
insl
dec
pusha
mov
pusha
fs
cmc
jno
mov
adc
cmp
aaa
sub
push
xchg
jae
insl
scas
jo
rol
shrl
testl
sub
push
jb
xchg
cmp
in
nop
push
jb
xor
mov
shrb
adc
xchg
adc
ss
sub
lds
xchg
das
jb
mov
xchg
imul
push
adc
or
push
sub
xchg
cmpb
push
mov
jbe
adc
mov
add
mov
push
loopne
addb
and
stos
push
xorb
cwtl
and
pop
cmc
xor
sahf
scas
aas
mov
sbb
aaa
xchg
mov
xor
cmp
push
adc
jnp
xchg
stc
pop
nop
sub
data16
pop
mov
jmp
jno
cltd
insb
xor
mov
or
xor
xchg
adc
cltd
sbb
xor
add
pop
push
inc
pop
adc
add
push
dec
jbe
xor
sbb
je
pop
sbb
cmp
adc
sub
insb
pop
cmp
add
or
xor
push
stos
jbe
push
mov
jo
sbb
ss
adc
xchg
sbb
sbb
jbe
mov
in
addl
mov
lea
loope
rorb
xchg
pop
addb
push
jle
aaa
xchg
icebp
mov
and
stc
sub
cmp
jp
pop
or
or
outsb
clc
lods
mov
or
pop
pusha
mov
rolb
scas
cmp
std
cs
push
xchg
cmc
sbb
sub
bound
sub
insb
sub
sub
push
or
pop
stos
xor
dec
orb
or
icebp
pop
ss
xlat
rolb
repz
mov
cmpsb
and
add
sub
push
adc
cmc
or
adc
lret
xor
pusha
sti
insb
push
push
push
push
mov
into
pop
ss
cmp
stc
imul
sbb
mov
test
test
es
icebp
notb
bnd
cmp
es
popa
push
cmp
cmp
jbe
xor
mov
and
lea
les
jge
add
adc
pop
push
loopne
insl
ficomps
and
mov
clc
add
xchg
cli
xchg
add
dec
xor
push
aas
push
push
jae
inc
dec
pop
mov
push
inc
div
pop
aas
dec
jb
mov
adc
cmp
cmp
jns
push
mov
sub
xchg
repz
jbe
sar
icebp
popf
xchg
push
cs
lcall
cwtl
cs
jg
pop
or
mov
push
insl
filds
subb
int3
adc
jl
and
or
add
ja
jno
xchg
cmp
clc
jl
push
mov
cs
sbb
adc
xchg
or
jle
sbb
jle
push
sbb
or
push
mov
xchg
adc
scas
mov
xchg
xchg
mov
notb
sbb
dec
mov
in
std
add
mov
push
mov
xor
imul
pop
inc
push
sbb
insb
mov
icebp
cmc
fucomi
push
add
xor
xor
mov
jne
jae
push
insb
leave
lea
xchg
jbe
push
mov
xor
push
test
aas
cwtl
mov
xchg
lahf
xchg
cvtps2pd
adc
jle
add
jg
iret
cmpsl
inc
push
repnz
dec
scas
add
pop
add
inc
shlb
rorb
xchg
add
int3
dec
repz
nop
sbb
jl
out
or
icebp
adc
jb
adc
dec
sbb
mov
out
adc
adc
push
xor
sbb
jb
and
add
xor
cmp
mulb
incl
cwtl
and
pop
popa
dec
push
jl
out
push
adc
lea
insl
outsl
js
fisubrs
xchg
or
dec
or
sbb
adc
lock
call
xchg
in
sub
xor
dec
sbbb
push
adc
adc
sub
push
jbe
xchg
arpl
fisubrs
arpl
sbb
xor
xchg
mov
adc
cmpb
or
lahf
ss
out
push
mov
sahf
inc
mov
pop
jl
sbb
xor
add
lods
and
cmp
ljmp
or
adc
jo
lahf
scas
icebp
sub
inc
sbb
xchg
or
cli
cmp
js
es
lods
cmpsb
mov
pusha
jbe
xchg
lock
js
inc
cmp
xchg
psllw
sub
adc
mov
in
push
fs
and
inc
and
cs
mov
mov
jle
les
sub
xor
lret
dec
fs
mov
xchg
cmp
dec
sub
xorl
addr16
bound
adc
test
lock
sbb
sub
pusha
pop
jl
aas
add
js
das
add
test
push
dec
js
jbe
cmp
je
mov
repnz
ljmp
dec
mov
sub
push
jmp
mov
or
push
and
inc
or
shlb
stos
sub
xchg
add
xor
push
push
jp
nop
in
test
mov
andb
jae
add
dec
js
push
fimull
push
jne
pushf
andl
xchg
orb
icebp
pop
cmp
cmpsb
add
sbb
in
cmp
push
out
sub
mov
adc
xchg
sti
pop
js
jb
cwtl
lea
xor
sahf
sbb
sbb
sub
in
ret
sub
mov
xor
jmp
out
das
lcall
and
hlt
sbb
vpmacssdql
adc
mov
add
arpl
sbb
ret
lods
adc
jbe
xor
mov
jae
adc
fwait
out
push
add
cmp
xchg
and
les
or
pop
pop
jg
jge
das
or
mov
movsl
jae
das
xor
inc
and
push
jmp
sub
or
lcall
jecxz
in
ret
notb
je
rclb
xchg
rol
xchg
aaa
int3
pmullw
pop
xor
ret
mov
cmp
insb
das
enter
inc
js
lea
or
xor
adc
ret
js
pusha
or
or
xor
pop
inc
add
adc
cli
mov
sbb
dec
or
inc
lcall
popf
jecxz
sbb
outsl
icebp
ljmp
jno
subb
sbb
rcrb
and
sub
inc
jo
xor
ret
pusha
jge
jno
and
adc
lea
shrl
xor
sub
jl
in
sub
aaa
int
sahf
adc
nop
sbb
sbb
and
jno
mov
rcll
sbb
fs
push
pop
push
jg
test
xchg
scas
cmp
dec
jb
cld
adc
lret
mov
sub
addr16
inc
or
mov
sarl
into
gs
ret
add
sbb
pop
out
cmp
pop
scas
cmp
cld
or
cmp
arpl
cmp
xor
stos
es
outsb
sbb
sbb
add
jb
sbb
sbb
lock
dec
stos
cmpl
push
and
movsb
jb
test
in
jno
fs
movsl
cmp
out
orb
or
xchg
cld
sbbb
push
scas
push
shrb
or
and
inc
inc
push
push
jmp
xor
aas
xchg
lods
or
add
jbe
insb
pop
cmp
pop
dec
xchg
pop
sbb
add
xor
push
dec
aad
lock
cltd
clc
in
or
test
in
xor
sbb
fdivs
mov
cmp
jb
adc
dec
push
adc
push
xchg
inc
jns
test
xor
pushf
cmp
pop
inc
add
jle
jae
push
pop
cmp
jg
inc
pusha
xor
clc
jnp
shrb
inc
xchg
mov
inc
push
jge
cmp
clc
ret
xchg
lret
cld
fwait
and
rol
mov
adc
xchg
mov
cltd
jns
scas
pop
lock
or
jg
pusha
xchg
jecxz
xlat
cs
scas
and
mov
daa
out
mov
lods
jle
inc
or
loop
mov
rclb
or
sub
dec
fimuls
add
ljmp
xchg
pusha
mov
push
jno
mov
bound
jb
mov
xchg
mov
rcl
cmp
mov
or
dec
mov
push
subb
xchg
inc
adc
jnp
jp
lods
lahf
mov
push
or
mov
popa
les
lcall
mov
xor
es
scas
mov
in
adcl
dec
sub
and
arpl
mov
out
push
mov
sbb
cmp
addl
sarl
xor
movsl
cmp
stos
sahf
mov
jge
dec
movsl
sbb
mov
mov
gs
aad
push
loop
add
jl
js
jb
cmpsb
test
test
mov
adc
xor
lods
xchg
psubw
and
roll
pop
das
arpl
jmp
push
popf
cmp
push
pop
repnz
jbe
xor
dec
jp
paddq
rcll
rorl
cmp
lret
data16
push
and
mov
pushf
icebp
jl
mov
imul
xchg
cmpsb
xchg
sbb
jg
test
mov
jmp
stos
lcall
inc
sbb
and
jbe
xor
pop
out
push
sub
ss
pusha
cs
lods
cmp
jge
mov
loopne
and
mov
aaa
add
lods
cmp
or
cmpsb
add
cmp
scas
bound
inc
lods
push
xchg
js
xchg
sub
mov
aas
jl
sbb
lahf
sub
sub
jnp
cmp
push
pop
push
fsubrs
push
add
or
pop
lods
cmc
fildll
imul
xchg
aad
push
jp
dec
sbb
pop
lock
cmp
std
fs
imull
and
jb
pushf
mov
sbb
pop
lcall
xchg
hlt
fnstsw
or
jne
es
ja
push
sbb
lods
js
pop
cli
out
and
sub
sub
dec
pop
xchg
adcb
sahf
jp
adc
sub
inc
mov
repnz
mov
jb
scas
in
pop
outsb
xchg
sub
jmp
mov
mov
ja
test
cmpsl
cld
mov
cmp
add
pusha
sub
inc
inc
xor
xlat
pusha
adc
cmc
mov
bound
jns
dec
popa
fwait
push
xor
and
jp
mov
mov
and
bound
aas
push
mov
lahf
push
incb
popf
insl
sahf
outsb
test
stc
cmp
mov
ss
shll
cmpsb
pop
sub
xor
outsl
ss
jmp
sarb
cs
movsl
jge
sub
pop
add
inc
sarl
fistpl
jb
dec
xchg
cmp
xor
xor
adc
xchg
mov
pushf
fstps
adc
mov
sarb
rclb
inc
jle
push
fisubs
mov
lahf
pop
push
cmpsl
cmpsl
and
mov
push
sbb
jle
mov
pop
pop
repnz
sbb
popf
mov
sub
outsb
pop
sub
push
add
adc
push
test
and
bnd
cmpsl
jns
data16
sub
jbe
mov
jle
mov
arpl
push
sbb
or
fwait
or
xor
xchg
mov
sbbl
sub
leave
dec
sub
mov
add
or
sub
daa
mov
scas
mov
dec
sbb
daa
insb
jp
clc
mov
or
lahf
mov
in
dec
sub
mov
cmp
and
aad
clc
shll
sarb
ss
add
inc
mov
fsubp
faddp
adc
add
call
push
push
rcrb
pop
fs
jle
out
daa
ljmp
pop
movsl
jb
in
inc
imul
cwtl
insb
in
mov
outsl
xor
out
mov
aaa
pushf
lods
les
mov
in
push
lds
ds
hlt
jl
and
dec
xor
icebp
das
xchg
cmp
push
pusha
xor
adc
jno
xchg
int3
push
pop
add
cmp
jmp
push
inc
push
ds
push
mov
test
mov
ret
inc
fadd
inc
jp
push
mov
dec
xor
xchg
pusha
int3
lds
insb
or
mov
int
jle
dec
cmp
mov
cmp
testb
xor
sub
mov
xchg
shll
push
xchg
test
jle
hlt
rclb
orb
ds
out
add
inc
pusha
push
adc
enter
pop
inc
nop
push
adc
cs
jle
bswap
pusha
out
xor
sahf
loop
popf
idiv
adc
loope
pop
push
pop
add
lret
xchg
sub
int3
pop
fbstp
mov
or
stos
pusha
bound
push
outsb
mov
jbe
dec
jle
and
mov
or
cs
and
jg
test
xor
sbb
dec
insb
div
incl
sub
sub
hlt
mov
xchg
cmp
jle
push
jo
mov
sbb
testl
jae
sub
iret
xor
mov
mov
and
dec
mov
xor
mov
std
ds
push
pusha
cmpsb
xor
cs
enter
scas
xchg
lods
leave
ds
xchg
xor
sbb
mov
pop
inc
aad
ds
in
xchg
scas
ret
cmpsb
push
sarl
insb
push
pop
xor
imul
addb
push
dec
lret
mov
or
call
lods
jp
ds
jge
add
dec
sbb
xchg
popa
mov
ret
insb
imul
adc
jp
or
xchg
addr16
jno
cs
sbb
popf
punpckhbw
push
jne
dec
adc
mov
jnp
aas
cmc
add
push
xor
push
cmp
pop
pop
cs
or
js
ret
dec
out
loopne
lcall
and
test
daa
cmp
and
aas
stc
pop
xchg
sbb
xorb
mov
dec
mov
pop
call
inc
push
mov
xor
mov
test
add
sbb
jb
cvtps2pi
jbe
mov
and
shll
lock
sbb
je
inc
mov
add
popa
pop
ss
fs
inc
fnstsw
push
mov
addr16
mov
sarb
cmp
inc
pop
ret
test
cmp
cmp
dec
in
xor
mov
adc
bound
adc
xor
cmp
lret
cmc
sbb
mov
bound
mov
sub
mov
push
cmp
es
out
inc
leave
adc
mov
inc
int
mov
push
sarl
mov
xchg
and
test
xor
mov
movsb
cmp
xor
xor
popa
jmp
mov
mov
mov
bound
mov
push
inc
ret
sarb
adc
mov
cld
fstpl
dec
dec
inc
lds
int
sbb
pop
mov
xor
nopl
adc
sub
mov
mov
mov
fildll
fs
roll
aas
xchg
rcr
aam
lret
cmpsl
inc
push
jo
and
sti
push
mov
push
imul
shl
inc
filds
cmp
adc
cmp
mov
push
inc
xlat
mov
aad
jnp
pop
dec
mov
mov
xor
jo
xor
inc
movsl
ss
mov
jecxz
fildl
push
out
lcall
mov
cmp
or
sub
dec
mov
imul
push
lret
pusha
mov
or
rolb
push
sti
ud1
cmp
cld
mov
icebp
jl
sbbl
les
add
push
cmp
lahf
mov
aas
mov
dec
ffreep
nop
add
negl
aas
fs
adc
xor
ja
lods
xor
aad
mov
aas
jbe
aad
push
das
sub
mov
aam
mov
xor
imull
add
push
mov
mov
push
jnp
sub
mov
push
aas
xchg
inc
mov
cmp
inc
test
mov
out
das
sahf
jmp
mov
xchg
sbb
arpl
pop
and
lds
mov
mull
std
jmp
daa
inc
xor
pop
pop
pusha
sbb
mov
inc
add
lcall
xor
mov
mov
cli
rclb
cs
scas
mov
xchg
mov
js
inc
mov
iret
sbbb
lods
and
pushw
push
fsubl
sti
mov
mov
inc
sub
xchg
cmpsb
xor
pop
push
outsl
iret
cmp
aad
dec
data16
inc
fildll
adc
xchg
mov
jbe
jae
push
cmp
sub
mov
xchg
shll
mov
xor
mov
mov
pop
addb
dec
xor
push
testl
imulb
int
mov
into
jbe
outsl
cmp
ret
stos
mov
xor
lcall
pop
or
mov
lahf
xor
cld
and
sub
sbb
xor
mov
xchg
jecxz
or
push
in
lds
xor
add
and
test
xor
out
loop
jecxz
aas
xor
das
adc
fistpl
inc
cmp
push
out
mov
into
add
cmp
cld
and
push
mov
push
jo
jne
jp,pn
adc
and
mov
cmp
push
xlat
push
aad
loope
push
sub
movl
mov
das
das
lea
xchg
ja
fbstp
dec
xor
aad
mov
cmpsb
into
pop
scas
mov
into
cltd
movsl
cmp
repz
jmp
pop
loope
push
iret
aas
cmp
in
push
das
in
sub
adc
fcmovnu
mov
sub
push
hlt
scas
aad
out
cmp
int
xor
inc
xchg
clc
in
and
pop
leave
scas
inc
adc
adc
lock
scas
das
cmp
cmpsl
aas
clc
lds
fimuls
loop
aas
jecxz
in
pusha
push
rorb
cs
pop
sub
scas
xlat
ret
mov
mov
and
mov
and
mov
jp
shrb
adc
stos
pop
dec
lods
das
mov
mov
aas
sbb
lcall
inc
pop
and
dec
jo
imul
aaa
cld
lock
xor
mov
jns
movsl
aas
xchg
mov
pop
popa
in
ljmp
dec
mov
add
lods
addb
daa
xor
mov
pop
and
loope
cmp
lock
jns
cmpsb
scas
mov
cmp
fucom
push
adc
mov
xor
cmpb
std
mov
cmp
popw
mov
dec
inc
in
mov
push
mov
das
imul
mov
push
fs
lock
adc
mov
sub
scas
pop
shll
mov
inc
mov
aas
xlat
push
mov
jmp
cwtl
add
add
ljmp
les
push
inc
rcrb
and
mov
jns
and
adc
stos
loopne
inc
cmp
mov
mov
xchg
xchg
aaa
push
arpl
xchg
sub
mov
adc
das
inc
subb
xor
orb
and
decl
dec
mov
and
scas
aas
pop
sbb
pop
sub
sub
cli
js
add
dec
inc
cmpsl
cmp
icebp
addr16
push
int3
in
cmp
out
dec
push
jg
scas
lahf
sub
push
in
or
cmp
ds
insb
into
shlb
jp
cltd
call
cmp
lret
pusha
mov
adc
outsb
fstpl
dec
clc
dec
dec
loop
ds
iret
mov
hlt
lds
mov
adc
aaa
xor
mov
imul
cmpsb
push
mov
mov
test
test
std
inc
bound
mov
sbb
sub
hlt
sbb
clc
lods
fsubl
or
int
data16
adc
sub
pop
and
or
stos
add
clc
add
jg
cmc
push
add
and
inc
daa
mov
and
jo
push
sub
adc
xchg
jo
outsb
shll
push
jb
and
lcall
add
mov
cli
loop
pop
das
push
mov
mov
fwait
push
jle
sbb
or
jo
shrb
xor
jb
mov
sarb
in
jl
cmp
cmp
fdivrl
xor
mov
cmp
xor
xchg
cmp
mov
leave
insl
mov
xor
mov
inc
mov
mov
sbb
shll
or
dec
outsb
push
cmp
dec
adc
cmp
pop
aas
jo
cmp
lahf
call
inc
fnsave
arpl
movsb
test
jge
mov
aaa
scas
cmpsb
sahf
cmp
das
xchg
daa
imul
cmp
pop
mov
pop
jg
add
fnstsw
mov
mov
test
sub
and
cltd
sbb
adc
adc
mov
pop
insb
mov
cmpl
addb
stc
jp,pt
jnp
idivl
jno
icebp
jb
jae
out
jo
ds
out
ds
arpl
ds
loopne
fstps
pop
push
xlat
pop
fcoms
push
rclb
into
dec
iret
push
rorb
dec
ds
inc
dec
enter
inc
ret
sbb
cs
aas
push
jo
push
mov
cmp
mov
xor
jle
cmp
mov
xchg
pop
outsl
push
sarl
inc
mov
cmp
into
mov
rcrl
push
or
lea
rclb
shl
jno
push
push
in
push
push
popf
mov
pop
mov
loopne,pt
loope
outsl
push
gs
test
jecxz
inc
push
lock
movsb
jmp
push
push
dec
xchg
mov
dec
cs
pop
mov
arpl
inc
pop
inc
jle
xchg
cld
mov
cli
and
jne
jae
test
lock
and
fmuls
or
movsl
out
xor
into
test
fadd
ds
pop
mulb
push
xor
mov
stos
pop
sub
test
jle
arpl
cli
xor
mov
inc
mov
dec
mov
push
testb
mov
lock
inc
add
sbb
scas
inc
mov
push
sbbl
fsubs
test
sub
xlat
push
or
rol
fidivrl
sub
fisttps
sbb
ds
xor
dec
fidivrl
scas
aam
test
or
es
or
pop
xlat
mov
sub
mov
cltd
pop
call
xchg
decl
cmp
loop
pop
add
adc
jle
mov
adc
push
jge
mov
mov
fsubrp
test
mov
xlat
lock
jae
sbbl
jno
xor
push
dec
popf
daa
stos
xor
mov
mov
cltd
sti
fsubl
inc
xchg
dec
cmp
push
add
mov
jbe
xchg
pop
inc
ds
cld
sbb
sub
xchg
xchg
mov
insb
dec
test
ret
call
repnz
movsb
xchg
pop
jle
aaa
into
mov
push
sbb
and
ds
push
fs
dec
xchg
jmp
lret
arpl
roll
xor
adc
inc
in
inc
dec
out
mov
test
and
mov
pmaddwd
test
scas
ds
test
jge
mov
pop
in
mov
pushf
test
add
sub
cltd
sub
leave
outsb
lds
movsb
ds
push
add
and
pop
negb
cmp
mov
int3
addl
xchg
ficoms
arpl
jne
ds
push
insl
xor
inc
ds
mov
cltd
ds
subb
and
pop
std
add
mov
ds
mov
iret
jns
dec
mov
hlt
shrb
push
xor
mov
out
inc
add
ds
xor
cs
sub
inc
mov
push
push
ds
repz
leave
pop
sbb
popf
ss
dec
aam
pop
shll
and
std
movsb
sbb
lods
mov
bound
mov
loop
stc
int3
adc
jp
mov
jl
orl
out
out
jle
and
push
pop
adc
in
lahf
mov
mov
xchg
sub
ss
pop
sub
jb
popa
test
in
jl,pt
mov
mov
jne
mov
mov
addr16
ret
push
add
insb
cmp
mov
adc
and
ljmp
fsubs
inc
mov
sahf
xor
aas
sub
ja
jmp
xchg
xor
adc
into
mov
lds
lods
loope
fs
jl
mov
ss
into
sbb
ds
bt
lods
insb
gs
imul
ds
pop
inc
popa
dec
cmp
stc
loopne
mov
sbb
mov
mov
mov
bound
aam
jp
push
xchg
sub
out
fcompl
ds
mov
xor
mov
mov
inc
jmp
adc
outsb
pop
call
sbb
xchg
push
mov
lock
inc
test
mov
jle
fsts
sbb
adc
cmc
mov
xor
mov
mov
std
lahf
out
les
inc
sbb
adc
adc
dec
mov
mov
int3
movsb
mov
aaa
ds
or
imul
stos
jb
sub
inc
add
fnstcw
sbb
icebp
call
leave
test
push
adc
nop
ds
mov
or
ds
mov
and
and
out
popa
xchg
nop
orb
push
mov
cmp
inc
test
iret
lea
lret
inc
cs
or
addr16
and
mov
mov
inc
dec
inc
ds
push
pusha
add
outsl
fnstenv
cs
fbstp
jo
push
xchg
ret
imul
decl
lcall
xor
pop
int3
gs
and
stc
sarl
lock
subb
dec
dec
xor
daa
xchg
ds
mov
mov
inc
mov
jp
inc
test
lea
push
adc
inc
out
xchg
mov
cmpl
loope
sahf
mov
add
data16
aaa
pop
jle
je
or
ds
sub
mov
jnp
mov
insl
mov
mov
mov
mov
jno
dec
mov
adc
dec
push
sub
repnz
jo
hlt
int3
jae
lods
call
fldl
dec
cmp
jne
decl
fwait
inc
jg
mov
and
in
loope
int
sub
push
in
mov
andl
sbb
pop
mov
adc
js
inc
pop
in
lods
mov
xchg
into
jbe
jne
ds
roll
in
inc
xchg
push
fmul
sarl
in
inc
sub
test
jae
loope,pt
or
push
fiaddl
jne
daa
lods
ficoms
cmp
sub
inc
loope
ds
shl
inc
loop
jge
ds
shll
xchg
xorb
ds
sub
adc
jno
xchg
fimull
push
ja
cltd
xchg
lcall
mov
xor
fiadds
iret
test
pop
data16
insl
mov
sub
xchg
daa
sbb
adc
popf
dec
jg
and
pop
sbb
mov
gs
ds
inc
add
mov
and
insb
push
push
mov
cmc
mov
imul
adc
ds
mov
dec
mov
out
cltd
add
ja
mov
in
ficomps
adc
lcall
dec
and
fnstsw
mov
fidivrs
mov
std
cmp
add
loopne
mov
and
push
xchg
pusha
or
add
xor
sub
sbb
jb
ds
js
daa
ret
lds
loope
lret
sbb
in
adc
lods
cmp
push
in
sbb
and
jo
jle
cwtl
push
mov
shlb
mov
lret
add
push
daa
ds
sub
jmp
xchg
pop
ja
mov
adc
lcall
xor
sub
es
addb
loop
out
frndint
pop
ljmp
outsb
jo
dec
mov
adc
in
pop
ds
das
arpl
pop
pop
bound
int
popl
cmpsl
sub
incb
cmp
ficoml
outsl
jnp
inc
pop
push
mov
jle
inc
popf
cmp
test
mov
add
outsb
dec
mov
bound
mov
setg
xor
lret
mov
jns
jmp
data16
push
cmp
cmp
cmp
int3
ret
xor
cs
pop
jns
outsb
mov
mov
into
sub
push
rolb
bound
jg
mov
lahf
out
popf
cmp
bound
cmp
mov
es
mov
sub
xor
xor
cltd
dec
xor
popa
mov
cmp
lds
jne
and
cmc
idivb
mov
cmp
dec
scas
pop
shlb
inc
mov
push
sub
test
inc
ss
pop
sbb
sub
add
jbe
dec
das
das
mov
ficompl
cmp
mov
daa
sbb
cmp
cmp
inc
cwtl
pop
pop
mov
cmp
mov
sbb
mov
sub
inc
rorl
cmp
cmp
add
ja
mov
cmp
or
lods
cmp
mov
scas
jbe
outsl
cmp
les
push
lret
add
ud1
fstpl
and
lahf
scas
stos
and
cmp
sub
iret
test
insb
push
aam
and
mov
daa
cmp
sub
rorl
cmp
cmp
cli
sub
dec
push
pop
sbb
and
scas
fldcw
rorb
ret
push
int3
pop
push
or
mov
jb
mov
cmp
loop
fists
xor
xor
jbe
xchg
scas
cmp
daa
sbb
mov
movsb
stc
mov
dec
pushf
mov
cmp
inc
std
stc
ss
mov
adc
scas
mov
adc
xchg
scas
and
sbb
sbb
mov
mov
mov
pop
mov
adc
jbe
dec
xor
jbe
orb
and
mov
mov
and
test
ss
push
cmp
dec
lods
lods
lods
jae
mov
cmpsl
fidivrl
fistl
out
out
jecxz
scas
mov
fidivl
daa
xchg
mov
pop
or
inc
mov
insb
sub
int
xor
cmp
aad
jbe
popf
movsl
sbb
lahf
in
int
lods
lds
in
ds
enter
pop
cmc
cmpl
fldl
fwait
repz
pop
hlt
imul
and
mov
xchg
xchg
fsubp
pop
or
cs
incl
xchg
movb
mov
cmp
jecxz
ds
and
jne
mov
or
jnp
pop
mov
sub
insl
mov
cltd
jle
lods
push
nop
ds
out
mov
aad
les
je
xor
aas
lahf
cmp
nop
dec
test
and
dec
push
mov
push
or
filds
mov
cmp
outsl
sbb
push
sub
mov
std
inc
push
inc
stc
out
ds
adc
ljmp
test
jp
and
add
or
lret
and
ss
sbb
mov
inc
xor
jae
and
add
call
ds
or
mov
or
push
fdivrs
popa
ds
lcall
push
pusha
mov
mov
pop
pop
mov
movsb
sbb
lahf
jg
cwtl
push
ds
in
mov
or
repz
adc
mov
sbb
call
cmp
lods
sbb
xchg
mov
stc
loope
popa
dec
mov
ds
fadd
pusha
movsl
cmp
xchg
pop
push
dec
mov
cltd
sbb
out
mov
ja
mov
in
dec
nop
fdivrs
sub
cmp
inc
xchg
mov
cmc
xlat
lret
sbb
mov
pop
test
test
pushf
cli
dec
loope
int3
add
jle
daa
add
push
sub
cmp
ljmp
and
pop
sahf
int
xchg
jle
fcmove
sahf
adc
cmp
mov
jg
adc
dec
sub
xor
mov
push
adc
leave
mov
xchg
mov
cmp
push
mov
xorl
xchg
pop
movsl
jno
in
iret
dec
inc
pop
xchg
inc
je
daa
shlb
lock
cmc
cs
pop
inc
mov
inc
ja
mov
mov
cmp
test
xchg
cmp
insl
ret
addr16
movsb
cmp
iret
lea
aas
test
sbb
clc
mov
push
loopne
jp
fwait
jne
mov
lcall
pusha
mov
sbb
jp
lcall
lcall
mov
xchg
ss
inc
pop
mov
lahf
je
mov
outsb
fcmovnu
push
mov
int3
sub
jecxz
ficompl
xor
stos
dec
aaa
xor
xchg
mov
xchg
xchg
and
xor
scas
and
aas
fstl
pop
sbbl
dec
popf
cmp
or
das
add
pop
das
and
ficompl
rcl
lock
mov
cmc
mov
jle
mov
scas
jnp
sbb
ss
jp
cwtl
les
xor
insl
in
xor
pop
out
mov
shlb
bound
and
xchg
mov
cmp
movsb
aaa
and
loop
pop
ds
cmp
lahf
mov
iret
cmp
fdiv
xchg
mov
movsb
mov
sub
sbb
cmp
les
jns
movsb
scas
rcrb
mov
sbb
sarb
mov
sub
inc
pop
xchg
sbb
mov
aaa
mov
dec
aas
imull
idivl
mulb
mov
sbb
outsl
xor
mov
cmp
pop
cmp
repnz
cmc
cmp
push
lea
out
mov
mov
outsl
mov
xchg
lea
lods
js
lret
jne
mov
mov
cmp
movsb
xor
iret
inc
pop
xor
ja
cmp
lea
mov
mov
into
jbe
dec
aas
lods
movsl
scas
mov
jp
dec
push
cmp
xor
mov
xchg
dec
mov
mov
mov
cs
loopne
pop
lods
out
arpl
mov
mov
daa
stos
das
mov
sbb
test
push
cwtl
xchg
arpl
fdivrs
dec
out
pop
push
out
sub
jmp
cmp
adc
sbb
stos
mov
push
int
popa
pop
cmp
xchg
jbe
jp
xor
push
fadd
pop
add
sarb
es
lret
xchg
iret
test
pop
mov
mov
test
dec
aad
mov
lea
scas
inc
inc
and
repnz
or
jg
frstor
loope
test
jmp
xor
or
push
icebp
xchg
or
sbb
mov
mov
es
dec
mov
test
sahf
pop
aaa
push
mov
into
sub
dec
in
imul
bound
push
pop
in
push
ds
and
aam
jecxz
ds
outsl
mov
jno
ds
into
jno
aas
xchg
mov
dec
pop
adc
jle
cmp
inc
cltd
das
and
pop
push
lock
cmp
mov
in
mov
lret
inc
lods
shlb
xor
jle
lods
mov
mov
mov
mov
push
lods
cmp
push
lret
cmp
jle
mov
sarb
and
inc
xor
jg
pop
jmp
cmc
xchg
daa
adc
mov
or
mov
xchg
jg
jo
xchg
outsb
pop
insl
or
test
shl
inc
ret
mov
mov
mov
cli
scas
mov
cmp
pop
cmp
in
cmp
or
mov
cmp
pop
or
rol
push
push
mov
jle
mov
mov
jp
cmp
dec
mov
inc
pop
mov
scas
mov
cmp
in
push
xchg
sub
pop
cltd
in
idivl
and
fwait
jmp
xchg
mov
xchg
clc
push
cmpsl
mov
cltd
bound
sarb
shll
bound
pop
inc
dec
sahf
iret
jmp
push
mov
mov
scas
push
ret
fimull
ffreep
cmp
scas
orb
lock
or
push
cmp
mov
cltd
pushf
repnz
fcmovne
in
jbe
add
sbb
cmc
popf
sti
cmpsb
cmpb
mov
lret
cmc
inc
ss
pop
push
fistpl
test
jmpw
aaa
sahf
cmc
jmp
cmp
push
test
jbe
jns
movsb
push
adc
dec
sbb
push
and
xchg
inc
hlt
into
cmp
jne
or
xchg
jne
jbe
and
pusha
inc
mov
pop
and
and
scas
and
insb
mov
stos
cmpsl
push
popf
pop
int
mov
out
mulb
enter
scas
dec
mov
fstpt
adc
adc
imul
cld
fstpl
or
lods
fucomp
mov
sti
cmp
adc
shr
nop
jmp
dec
sbb
dec
into
cmp
cmc
lock
xlat
pop
adc
push
cmp
aaa
cmp
loope
jp
mov
jle
cld
or
xor
js
xchg
cmp
inc
sub
xchg
daa
xchg
sub
lahf
add
ljmp
lds
adc
adc
and
cmp
jno
push
adc
cmp
jnp
fsubs
sbb
cmp
std
fs
adc
dec
out
js
daa
xor
cmp
imul
adc
inc
mov
cmp
inc
aaa
mov
adc
ja
inc
inc
sbb
mov
cmp
clc
in
sbbb
jcxz
test
pop
das
jo
mov
mov
sarb
orb
mov
in
cmp
and
je
lret
push
mov
push
gs
cmp
shrl
insb
fs
pusha
push
mov
arpl
pop
push
mov
and
sub
mov
or
pop
inc
ss
add
jns
rclb
add
cmp
cmp
in
dec
jb
or
mov
mov
mov
xor
jno
or
outsb
cmpsb
mov
sub
test
and
mov
jbe
daa
cmpsl
push
sub
cmp
mov
ss
mov
sub
aaa
mov
std
xchg
movsl
cld
push
pop
ror
scas
push
cmp
stos
rcrl
cltd
idivl
scas
ss
mov
xor
fsubrl
push
push
xor
dec
jecxz
jo
rcll
or
mov
aas
in
dec
cwtl
inc
in
das
outsb
xchg
xchg
mov
mov
cmp
ljmpw
adc
imul
adc
add
lcall
leave
bndstx
mov
outsl
test
cmp
jne
mov
inc
xor
loopne
push
imul
jp
inc
jbe
dec
cmp
push
jecxz
push
movsl
xchg
cs
push
inc
gs
scas
mov
cmp
xchg
push
loope
addb
mov
jge
and
mov
aaa
pop
test
sub
ds
shlb
dec
ja
std
cmp
nop
test
adc
test
jbe
jo
dec
iret
addr16
xchg
aad
sbb
cmp
sub
adc
push
fmull
fs
ss
cmp
xor
inc
aaa
lods
lret
sub
jo
es
and
cwtl
xor
into
lods
push
cld
ss
jnp
icebp
pmullw
fistl
aaa
sub
sbb
mov
mov
mov
mov
es
mov
mov
mov
repnz
mov
ss
ljmp
xlat
rolb
lret
outsl
or
ss
leave
sbb
ds
icebp
dec
or
jmp
and
add
dec
shll
loopne
pusha
sub
insb
out
jecxz,pt
cmpsb
daa
arpl
lcall
sti
jbe
jp
pop
or
js
hlt
test
xor
push
dec
out
mov
test
dec
icebp
and
add
ds
pusha
and
out
sahf
mov
xchg
stos
ret
fiaddl
test
dec
sub
jo
lods
sbb
inc
mov
fists
mov
repz
loope
pop
nop
arpl
test
adc
addr16
xchg
dec
adc
testl
in
push
data16
cmp
int3
or
xchg
mov
mov
icebp
push
push
mov
in
mov
stos
lret
xchg
push
sbb
cmpsl
lea
xor
ds
sbb
ds
fs
push
inc
push
daa
mov
imul
test
lahf
inc
std
pop
in
mov
add
mov
cli
cs
mov
stos
push
cmp
push
cld
inc
and
movsl
mov
shrb
push
out
adc
test
sbb
add
int3
adc
inc
popa
cmp
loopw
cmpb
out
rorb
fs
jle
and
adc
and
ret
loope
pop
outsb
ds
cmp
dec
cmc
cmp
mov
xor
or
push
sti
fiadds
xlat
mov
jle
jp
xor
ds
outsl
es
outsb
push
sub
in
lods
popf
les
call
pop
gs
mov
aad
sub
dec
mov
je
and
outsb
sarb
mov
adc
or
imul
ret
mov
xor
popf
loopne
push
or
rorl
pop
stos
mov
xchg
rcl
cmpsl
jmp
aam
adc
or
or
clc
popf
pop
cs
cmp
fwait
aas
xor
jbe
and
jle
mov
stos
inc
aas
xchg
push
fs
mov
dec
fcmovnu
xor
push
int
dec
inc
es
ds
inc
sub
nop
movl
bound
repnz
dec
mov
insl
rcll
add
mov
ficomps
push
sbb
dec
fnstsw
adc
mov
inc
jge
fwait
add
mov
int3
movsl
pop
gs
jb
xor
data16
sbb
cli
ds
jne
cmc
mov
and
outsb
inc
cmpsb
in
cltd
cmp
int
add
sbb
pop
push
xor
jb,pt
repz
cmp
in
pop
mov
nop
adc
or
add
push
movsl
loopne
jae
filds
out
sbb
cld
mov
cli
movsl
sub
shl
cmpsb
add
jae
es
xchg
arpl
mov
stc
into
cld
sbb
pop
add
ret
or
jecxz
pop
jmp
push
in
lods
int3
mov
push
jbe
mov
mov
inc
push
test
xlat
jo
add
lods
pusha
popa
lahf
pop
jbe
ds
mov
push
sub
movsb
jo
mov
push
mov
mov
jl,pn
nop
add
daa
xor
push
mov
adc
dec
mov
ds
or
call
enter
ds
in
ss
jp
jle
ja
mov
xlat
shl
jnp
jl
mov
and
pop
in
movsb
sbb
cmp
pop
pop
cmp
aas
inc
fidivl
cmp
movsl
int
je
push
cmp
ds
xor
sbb
out
xor
push
adcl
mov
lds
je
jl
mov
mov
xor
dec
add
lea
rorl
cs
push
pop
cwtl
xor
jecxz
add
xor
mov
test
pop
push
int
xor
les
add
stos
pop
cmp
rorl
push
clc
fnsave
or
js
int
mulb
mov
das
push
in
adcl
xchg
adc
aas
jbe
mov
or
jl
sbb
dec
sub
mov
and
or
frstor
jl
lret
jp
cmp
ret
shl
jp
add
mov
mov
sbb
cmp
icebp
inc
lret
jcxz
rorl
and
rorb
mov
push
push
pop
sahf
movsl
cmp
mov
call
jecxz
push
leave
cs
pop
pop
out
movsl
xchg
pop
cmp
shrb
mov
cs
in
pop
pop
rorb
lds
mov
inc
jge
sub
sub
mov
mov
movsl
aaa
cmp
mov
adcb
scas
sbb
in
inc
add
and
or
scas
add
lds
es
pushf
inc
xor
inc
and
push
inc
loop
aas
aas
mov
sub
nop
lds
sahf
mov
dec
mov
mov
adc
movsl
xchg
sarw
inc
aaa
adc
add
inc
pop
ljmp
les
pusha
add
xor
xchg
shlb
daa
les
lds
add
lret
test
sub
xor
or
out
and
mov
std
mov
jbe
lret
pop
sbb
jbe
scas
aaa
je
mov
decb
mov
xor
scas
push
or
push
sub
ror
mov
mov
xor
scas
push
daa
lods
rorl
idivl
ret
clc
inc
dec
fidivrl
lret
pop
and
mov
es
dec
cltd
daa
in
movsb
push
sub
pop
pop
enter
mov
mov
mov
mov
fbstp
mov
out
push
stc
cmp
and
ret
inc
sbbb
adc
repnz
cmp
mov
mov
mov
or
inc
sub
mov
rorl
xchg
mov
lcall
jge
in
mov
pusha
mov
xchg
pop
daa
dec
mov
xchg
loopne
cmp
movsl
sub
ret
or
inc
mov
sub
xor
in
push
scas
fwait
mov
pop
ss
daa
ds
lret
adc
push
popf
push
xor
int3
test
xchg
sbb
mov
cmc
cltd
inc
shlb
mov
stc
enter
ljmp
bound
aam
add
into
pusha
cmpsl
mov
fnsave
jge
mov
add
sbb
push
mov
stos
mov
jbe
movsl
ds
pusha
xchg
cld
ja
lea
push
icebp
dec
jle
fstl
sti
inc
mov
aam
repz
mov
stos
loopne
mov
jmp
dec
ja
cmpl
jno
into
sbb
pop
jle,pt
pop
test
xchg
push
dec
cmp
mov
inc
aam
ds
fwait
les
mov
shr
or
and
jnp
fstps
push
mov
pusha
rol
push
ja
pop
push
ds
jb
stos
mov
addl
sub
xchg
out
imul
jecxz
inc
dec
in
or
cli
sub
mov
mov
nop
push
jle
xor
xor
or
cmp
imul
or
push
push
or
test
sbb
ds
mov
loop
sub
jo
repz
mov
in
test
pusha
lds
and
ret
popf
cmpb
lods
cmpsl
lahf
out
stc
sbb
andl
insb
loopne
popf
adc
mov
mov
pop
jle
push
cs
lods
jbe
mov
xchg
and
mov
mov
inc
mov
repnz
push
mov
inc
mov
fadds
mov
dec
sub
pop
jl,pn
push
pop
mov
lahf
std
arpl
cltd
adc
outsl
xor
and
pop
mov
fstps
mov
lock
fisubs
inc
out
mov
add
ds
mov
sbb
sti
and
add
sbb
pop
adc
mov
or
push
fidivs
movsb
push
add
or
into
mov
insl
xlat
cwtl
pop
fimull
jno
lea
fcompl
lds
add
sbbb
loopne
inc
in
andl
mov
stc
ds
push
cltd
jae
lret
sub
imul
pop
lds
push
lock
push
mov
jne
fidivl
sbb
push
divb
jmp
bound
mov
mov
adc
mul
jne
sub
dec
sbb
lods
ds
jae
push
shll
pop
mov
mov
xchg
out
bound
ds
mov
inc
and
pop
cmpsl
cmp
mov
lea
xor
mov
xchg
mov
fnstenv
jnp
push
pop
out
jp
shrb
push
lcall
outsl
jnp
push
std
je
into
add
pop
popa
pop
jecxz
cmp
into
cmp
ret
jg
add
and
xchg
les
cltd
mov
inc
mov
xchg
scas
lcall
popf
mov
cltd
push
outsb
inc
mov
je,pt
xor
jle
add
dec
popf
mov
sub
jbe
mov
jmp
or
in
mov
mov
dec
inc
sbb
outsb
xchg
stos
xor
ds
mov
aaa
and
cld
inc
roll
jge
insl
mov
mov
inc
or
inc
repnz
sub
xchg
fldt
mov
inc
stc
jno
push
cmpl
jg
cld
idivl
pop
mov
jge
add
loopne
ss
lahf
movsl
pop
arpl
mov
adc
lret
adc
and
dec
cmpsb
push
in
dec
jae,pt
mov
sub
sub
mov
or
test
dec
lea
je
shll
ds
add
orl
push
ds
push
cmpb
popf
jno
fs
subl
cli
xchg
shrl
es
gs
ret
or
ds
cmc
fs
out
inc
add
pop
adc
mov
xor
or
aaa
aam
jae
inc
lret
inc
test
cltd
push
jbe
jmp
add
mov
icebp
int
cli
mov
jnp
and
jmp
ds
push
push
mov
mov
sub
push
in
sub
jb
mov
mov
iret
cmpl
add
mov
xor
jl
aam
fnstcw
daa
lret
add
xor
rcrl
mov
xor
inc
sbb
mov
loop
adc
mov
push
push
jp
inc
ds
int3
shll
jle
lahf
jbe
ds
in
sub
ds
ja
sbb
dec
ds
adc
xlat
lea
ja
mov
jp
xchg
and
and
int3
xchg
mov
aad
sub
loopne
pop
das
call
popf
ds
sub
icebp
mov
lods
pop
jp
mov
add
inc
jae
cmpl
sub
mov
rep
das
test
push
ret
pop
aas
jno
push
loopne
mov
shl
and
xchg
jle
cmc
push
mov
jle
jecxz
sbb
mov
mov
jo
test
loope
bound
jg
ds
icebp
out
inc
xchg
or
jnp
int
inc
sub
lret
dec
lods
icebp
sub
dec
data16
xor
adc
repz
loop
xor
cld
cwtl
ds
jne
aad
loopne
sbb
mov
fimuls
mov
jae
sbb
dec
mov
xor
pop
out
in
daa
add
imul
xor
icebp
es
mov
loopne
ds
aas
lock
fisubl
mov
icebp
andb
jmp
stc
lods
adc
popf
test
push
shufps
fbstp
mov
or
mov
dec
ret
xchg
insl
stos
aaa
stos
pop
data16
mov
out
cltd
imul
bound
adc
std
mov
mov
lds
ficomps
int3
mov
enter
icebp
insb
test
cmp
out
or
das
xchg
mov
pushl
mov
cmpsb
enter
call
cs
pop
cmp
lods
adc
mulb
call
ss
mov
bound
inc
adc
iret
xchg
sti
test
cmp
push
adc
test
test
negl
popa
data16
and
push
neg
mov
inc
or
mov
sub
fwait
lods
in
in
mov
pusha
sub
xorb
ds
mov
mov
add
dec
pusha
push
test
mov
xchg
aad
or
sbb
arpl
dec
lahf
and
cltd
enter
int
in
jge
mov
test
push
inc
xor
xlat
adc
lcall
cs
mov
xor
jno
je,pt
add
adc
dec
xchg
ds
inc
lds
push
or
call
add
ds
stos
lds
mov
pop
push
dec
insl
aad
in
cs
and
ds
xlat
pop
pop
jbe
cld
ds
leave
shl
popa
adc
ds
add
imul
stos
int
jle
loopne
aaa
ds
in
fsubl
loope
pushf
cmp
ds
add
pusha
mov
or
sub
nop
pop
mov
dec
push
sbb
pop
loope
in
std
xor
mov
xchg
sarb
push
lret
fmuls
ds
or
push
mov
mov
bound
jo
fs
fucom
dec
pop
idivb
pop
sti
xchg
shl
mov
pusha
test
mov
add
dec
adc
imul
notl
ds
icebp
mov
int3
mov
cltd
xchg
push
push
stc
testl
mov
test
xchg
out
add
lods
xor
mov
pop
lods
push
enter
jb
inc
xchg
ds
out
ds
jmp
fnstcw
dec
and
adc
loopne
pop
xor
outsb
in
jne
cmpsb
jecxz
inc
in
out
add
or
aam
push
insl
ds
adc
imul
mov
ds
loope
mov
lods
mov
jle
inc
into
jo
imul
push
inc
icebp
adc
stc
int
movsl
adc
test
in
cmp
loope
and
mov
rcrb
loopne
das
pop
and
ds
fwait
add
adcb
clc
aam
pop
adc
lock
imul
mov
fwait
daa
add
fistps
add
ds
xor
in
ds
scas
insb
lea
ds
cmp
mov
jl
add
ret
lcall
ds
sbb
in
cmp
and
dec
les
cli
add
push
xor
add
mov
jae
lcall
gs
data16
pop
loop
ds
cmp
dec
and
pop
pop
dec
insb
and
into
ds
push
in
sub
add
dec
roll
xor
lea
cs
in
cs
adcb
inc
mov
xlat
ljmp
ficoms
ds
cmp
dec
ds
sub
movsl
ds
in
cmp
jle
mov
push
pusha
inc
adc
and
adc
dec
sti
ds
lods
out
mov
inc
out
pusha
lock
inc
cld
inc
lahf
fldln2
mov
es
or
or
sub
mov
mov
lret
lods
notl
lods
loopne
cld
stos
popa
ds
divb
push
ljmp
inc
in
mov
mov
popf
push
fs
inc
adc
arpl
xchg
psadbw
ret
out
mov
rol
push
fiaddl
test
pop
fistpll
outsl
std
mov
jno
hlt
sub
stc
jnp
in
outsb
and
data16
fsub
sarl
leave
imulb
mov
pop
popa
mov
mov
cli
popl
sbb
mov
cmp
pop
sbb
loop
cmp
and
mov
popf
push
in
mov
and
inc
int
inc
sub
dec
pop
push
cmp
pusha
fcoml
ds
lods
cld
push
fwait
xchg
fidivrl
test
or
inc
insb
out
test
mov
imul
push
loop
adc
jb
aas
jge
inc
and
push
pcmpeqw
ds
arpl
ds
stos
movsb
clc
je
and
outsb
rcll
ds
sub
adc
repnz
mov
cmp
adc
inc
in
adc
inc
aaa
mov
cs
mov
scas
jbe
lret
ss
movsb
mov
ret
mov
mov
pop
xlat
test
jmp
sub
mov
ja
rcrb
shll
outsl
test
sub
ss
sbb
sub
test
fidivl
lea
mov
add
pop
mov
xor
fwait
stos
aas
mov
mov
xchg
xchg
and
arpl
lods
call
mov
shl
mov
jo
adcl
ja
and
push
movsl
push
xchg
into
and
icebp
data16
adc
lods
insb
loope
jae
mov
loopne
rclb
xchg
mov
adc
push
cld
jnp
and
add
inc
cmp
dec
push
sub
std
mov
lds
in
popf
sbb
dec
addr16
mov
popa
ss
mov
ds
xchg
mov
jno
jmp
fucomi
and
stos
lret
fnstcw
jnp
movsb
std
adc
jns
cwtl
dec
mov
and
pushf
out
mov
popa
add
int
jle
aam
jp
ds
mov
sbb
scas
mov
jmp
xor
stc
mov
test
xchg
mov
std
inc
xchg
lcall
aaa
mov
jmp
shl
ds
cmp
filds
rcr
sbb
mov
lahf
call
ss
in
js
or
dec
sbb
sbb
fidivrl
mov
sti
mov
out
gs
and
adc
sbbl
cmp
out
xor
mov
jle
lret
cmp
push
adc
sbb
test
icebp
mov
scas
es
mov
int
daa
sbb
push
imul
xchg
mov
jp
and
cmpb
jns
adc
jne
cli
in
aaa
cmp
enter
mov
insb
add
std
jg
je
add
push
mov
push
fimuls
clc
gs
int
test
scas
jbe
sub
cmpsb
ja
add
mov
ds
leave
int3
mov
mov
test
dec
push
mov
push
das
out
movb
jno
bound
inc
ds
mov
fwait
xchg
ds
jo
push
and
mov
fcoml
call
jmp
add
test
inc
or
loope
add
stc
adc
mov
sarl
adc
add
push
inc
xor
dec
sub
hlt
sub
jle
cltd
filds
ds
pusha
mov
cmp
scas
sti
rclb
inc
xchg
mov
daa
push
hlt
lea
mov
mov
dec
cld
push
fcmovnu
push
test
aas
test
subb
mov
ds
ret
xchg
inc
mov
dec
push
ss
ds
into
lea
mov
jl,pt
inc
add
push
adcb
lret
mov
adc
and
ds
ja
out
dec
mov
sub
test
push
dec
sub
in
cltd
xchg
xlat
out
pop
or
popf
ds
test
xor
cmp
push
jns
pop
push
adcb
mov
fstpt
add
jne
inc
xchg
xchg
inc
mov
xchg
insl
inc
pinsrw
inc
in
dec
mov
mov
push
push
mov
adc
test
mov
mov
shlb
cmp
pop
stc
pushf
xor
sbb
xor
sar
fcomp
lods
ljmp
jecxz
lods
ds
mov
push
loop
mov
ds
sbb
and
push
insb
jbe
subl
dec
out
adc
xchg
cltd
popa
mov
xchg
ds
fadd
roll
add
imul
xor
mov
dec
into
in
adc
aam
xor
mov
jnp
mov
cmpsl
xor
lods
mov
inc
dec
sbb
push
aam
push
pop
outsb
ret
push
icebp
xchg
xchg
inc
cli
cmp
push
fs
fwait
bound
sti
push
notb
xor
in
adc
mov
xor
js
jmp
std
ror
ds
loope
sub
mov
lret
xor
call
shl
jno
inc
dec
sub
addr16
sub
mov
mov
sarl
sti
int
mov
or
mov
push
sub
xchg
adc
push
or
rorb
mov
sub
mov
ljmp
sub
ljmp
mov
les
mov
push
xchg
jg
shrl
movsb
pop
dec
dec
rorb
neg
xchg
insb
sub
scas
xor
cmp
ds
lcall
mov
cld
mov
dec
es
ds
xor
std
test
out
xor
lock
popa
aad
inc
ret
mov
push
jbe
addr16
das
push
bound
push
sarb
in
and
sub
loop
int3
push
dec
xlat
out
lret
aas
pop
mov
test
push
in
add
ds
jae
ret
mov
aam
out
daa
idivb
outsb
inc
loope
mov
movsb
cmp
push
adc
xor
cs
shl
cltd
or
stc
mov
idivb
pusha
addr16
scas
aas
mov
push
sahf
cmp
push
cmp
xor
ds
push
adcl
mov
mov
adc
mov
sub
pop
mov
fldenv
xchg
mov
xlat
push
sub
ds
cmp
xchg
push
and
popa
jge
sub
sbb
jecxz
movsl
jns
aam
cmpl
lods
xchg
adc
mov
push
rorl
ja
push
scas
xchg
pop
loopne
inc
and
in
mov
shl
pop
inc
call
ds
push
inc
xor
out
push
int3
pop
fisttps
and
lcall
xchg
loop
bound
aas
clc
pop
stc
mov
insl
inc
std
int
cwtl
mov
dec
in
inc
sti
adc
call
dec
mov
push
fidivs
test
movsl
out
fildll
fcompl
pop
fnstsw
popa
cld
and
aam
xchg
mov
sub
cmp
cld
jmp
mov
cmp
imul
lds
sbb
test
inc
or
popf
cmp
fcomps
es
cmp
inc
sub
mov
pop
sbb
jmp
pop
scas
and
enter
daa
fdivl
cmpsb
out
or
and
pop
das
adc
andl
loop
mov
cli
mov
add
int3
and
xor
adc
push
mov
dec
cmp
cmpsl
adc
inc
pop
sbb
scas
jb
inc
cmp
adc
sbb
arpl
aaa
jno
mov
mov
aam
cmp
jle
sbb
sub
mov
outsb
ja
fstp
push
out
inc
xor
mov
mov
add
cs
xor
jp
aas
test
ffree
pop
loope
int
data16
pop
cmp
ja
lods
cli
mov
lea
pop
aam
push
cmp
sub
popa
adc
inc
jb
mov
adc
add
sub
push
loope
xchg
arpl
outsl
sbb
and
adc
xchg
xor
cmp
push
dec
sub
jp
mov
sub
and
jbe
dec
shlb
shrb
xor
sub
inc
cmc
mov
popl
and
mov
mov
sub
rcll
aas
test
out
mov
out
aad
push
imul
cli
sbb
jmp
mov
sub
pop
pop
lock
pop
pop
jo
and
pop
sbb
addl
cmp
imul
mov
lcall
outsl
cmp
mov
xor
inc
fildll
cmp
mov
cs
and
jle
ss
xchg
adc
xchg
sub
sbb
mov
cmp
cmc
popf
push
push
pop
scas
and
sbb
mov
sub
das
mov
mov
inc
cmpb
and
push
mov
jo
pop
outsl
sub
inc
mov
cmp
sub
movl
test
push
inc
xchg
mov
jno
popa
jo
and
shll
lcall
cmp
test
imul
adc
in
into
lds
cltd
scas
and
pop
push
cmp
xor
rorb
jbe
outsl
scas
mov
fucom
xchg
mov
into
shlb
test
lret
mov
xor
mov
aaa
mov
enter
push
push
mov
mov
cli
mov
scas
adc
cltd
insl
xchg
add
arpl
movl
fcoml
imul
lret
sub
mov
push
ss
loop
push
xor
mov
xchg
insb
inc
outsl
push
das
mov
fldenv
pusha
sub
or
ds
lret
pop
fsts
pop
int3
push
jbe
xor
or
dec
xor
xor
enter
mov
lock
pop
cmp
ja
ja
inc
pop
xchg
scas
ss
or
mov
push
fst
aaa
and
test
xor
outsl
cmp
adc
add
in
pop
sub
pop
inc
mov
and
sub
bound
test
sub
mov
mov
jge
adc
mov
mov
outsl
xor
jne
mov
lods
xchg
or
mov
cmp
idivb
cmp
ret
add
scas
mov
mov
aad
inc
mov
scas
xor
and
jns
push
xor
in
mov
mov
pop
enter
popa
push
sbb
or
cmp
add
iret
cmp
cld
sbb
push
mov
mov
sub
mov
std
cld
sbb
scas
xor
ss
mov
inc
xlat
dec
scas
dec
mov
sbb
mov
jmp
inc
andb
push
xor
sub
cmp
jnp
das
mov
and
lock
shrb
cmpb
cmp
lahf
cmp
scas
inc
mov
into
jbe
jmp
mov
cmp
add
aaa
shlb
scas
cmp
cmp
into
sbb
pop
lahf
sub
call
xchg
mov
jp
add
mov
sub
ss
clc
jge
xchg
cmp
and
jmp
stos
pop
cmp
mov
jge
sbb
mov
pop
xor
mov
adc
outsb
arpl
dec
xor
loop
in
pusha
fstpl
aad
fstl
mov
ss
ficomps
dec
out
hlt
push
push
addr16
push
mov
xor
pusha
xor
cmpsb
into
xchg
mov
das
xor
cs
fadd
push
or
shl
bound
push
lea
adc
je
xor
cltd
mov
jp
test
push
loop
loope
fs
inc
push
jecxz
ljmp
call
in
arpl
aam
mov
scas
insb
xchg
cs
cmp
pop
adc
in
add
cli
rcll
sub
xchg
into
outsl
jne
in
popf
mov
push
push
jmp
sahf
xchg
xor
mov
daa
cmp
jns
adc
in
push
lret
ficompl
inc
mov
cs
pop
mov
dec
pop
jmp
fmulp
inc
cmpl
les
out
mov
jo
aas
lods
js
xchg
xor
pop
push
xchg
jp
inc
pop
mov
ljmp
jecxz
xor
fisubrl
aas
sub
sub
mov
out
xor
mov
ret
insl
jo
xor
insb
mov
adc
aaa
sub
sarb
aas
mov
adc
loopne
push
daa
adc
sub
cmp
dec
pop
shrl
fldcw
jecxz
loop
addr16
sub
cmpsb
sub
push
cs
out
inc
aaa
loop
cmp
punpckldq
lea
lea
mov
aas
xor
mov
call
add
cmpsl
adc
sub
xor
sbb
adc
xchg
aaa
xchg
mov
lea
mov
ret
dec
lret
in
cmp
xchg
or
enter
jge
xchg
enter
jle
mov
sbb
icebp
inc
pusha
bound
mov
mulb
mov
and
mov
jp
das
jb
das
adc
arpl
cmpsw
jle
addr16
push
mov
mov
mov
mov
arpl
push
cbtw
mov
sbb
dec
popf
mov
dec
test
push
insl
fs
ret
lea
add
push
in
out
push
jbe
loopne
or
add
mov
fldenv
dec
sarb
ds
xlat
sub
mov
xchg
add
shll
mov
mov
dec
jle
jb
push
ds
cli
in
cmp
dec
lods
cltd
push
sub
loop
and
adc
lods
je
lcall
ds
inc
or
repnz
fnstsw
cli
and
sub
test
inc
ds
in
dec
icebp
out
ds
xchg
adc
mov
dec
hlt
xor
aam
mov
sti
or
es
inc
sbb
push
xor
loope
add
jle
in
js
xor
fisubs
in
dec
xchg
xor
dec
out
jmp
call
outsl
ja,pt
scas
rorb
jae
mov
pop
jle
shlb
js
out
mov
xchg
ds
mov
inc
inc
fucomp
fdivrl
ds
mov
jae
dec
ds
mov
mov
fiaddl
jb
cmp
xchg
insl
inc
sbb
and
incb
repz
pop
xor
nop
cmp
push
jns
cmp
jbe,pt
popa
sti
lods
gs
ds
cltd
cmp
mov
subb
mov
cmp
fnstcw
cmp
mov
bound
fsts
sub
cmpsb
inc
add
or
icebp
ret
and
ds
nop
outsl
cmc
mov
cmpsb
jmp
add
and
in
adc
mov
cwtd
push
cmp
mov
jbe
out
call
jmp
sbb
cmp
cmp
adc
adc
jbe
push
inc
in
push
dec
mov
int3
mov
test
mov
xchg
mov
cmp
dec
add
stc
pop
fwait
gs
inc
in
xchg
mov
movsl
dec
cmp
cmp
sbb
jnp
jmp
pop
int3
xlat
fisubrs
sbb
pushf
mov
imul
scas
mov
cmp
mov
movl
xor
cmp
pop
lahf
pop
rclb
add
shrb
mov
cmp
xor
pop
aad
pop
pop
cmp
dec
or
sbb
andl
xchg
cwtl
nop
sarl
cltd
and
pop
and
pop
popa
jp
sub
outsb
and
xchg
cmp
cmp
pop
pop
push
das
sub
mov
test
test
frstor
push
mov
pop
and
pop
cmp
cli
mov
out
sbb
adc
mov
and
mov
sbb
scas
mov
adcb
divb
iret
and
sub
aaa
dec
out
mov
lret
cmp
mov
mov
lret
mov
test
cli
jae
cwtl
sbb
xor
loop
jl
into
cmp
adc
das
fwait
leave
loope
jp
das
pop
jge
lret
mov
xor
cmp
push
cwtl
xchg
cmp
faddl
out
mov
sub
dec
pop
addr16
mov
jle
aaa
pop
lock
sbb
push
pop
cmp
jmp
sub
jno
push
jns
pushf
pop
jnp
imul
cmp
mov
out
xchg
aas
and
sub
lret
les
sbb
into
pop
sub
jecxz
cmpsl
int
dec
decb
pop
sub
cmc
pop
test
repz
aam
sbb
and
mov
gs
and
test
scas
sub
adc
xor
cmpsb
stc
sub
mov
clc
cmp
dec
lahf
mov
sbb
pop
or
pop
mov
cld
and
and
lahf
push
outsl
daa
mov
sub
and
cs
inc
loop
dec
lahf
and
jle
cmp
icebp
xchg
add
mov
jle
adc
jle
aaa
cli
repnz
shll
loope
mov
dec
scas
out
sub
imul
xor
sub
pop
dec
inc
inc
dec
mov
push
xchg
jmp
sub
sub
xor
mov
ret
pop
dec
inc
popa
lds
or
fistpll
and
jg
test
dec
imul
mov
mulb
and
and
faddl
popf
in
add
addb
roll
push
test
and
pop
mov
mov
pop
bound
jo
add
cmp
stos
mov
sub
push
ds
jae
je
dec
stos
sub
scas
icebp
loope
xor
dec
rorl
adc
adc
into
insb
or
insl
ss
jno,pt
sbb
outsl
jae
mov
push
es
cmpsb
mov
and
daa
mov
inc
rcrl
jp
mov
and
add
in
lcall
mov
cmp
insb
icebp
mov
cmc
jbe,pt
cs
aam
ds
mov
in
or
xchg
out
lret
sbb
mov
enter
movsb
fmul
out
repnz
cmp
popf
mov
push
jle
mov
mov
insb
add
mov
mov
out
mov
std
addb
inc
loope
inc
or
mov
jle
sbb
popa
addr16
lds
mov
andl
adc
imul
in
test
aam
lret
movsb
inc
int
pusha
cmc
inc
adc
inc
in
outsl
lods
js
pop
fnstenv
pushf
subl
jne
mov
and
sbb
adc
push
pop
push
inc
sbb
lcall
jge
push
pop
divb
xor
push
add
nop
jp
jecxz
sbb
jle
stc
dec
xor
mov
cmc
sbb
and
movsl
jle
and
test
int3
inc
add
or
cli
cmpsb
mov
and
cs
pop
insb
push
push
sbb
pop
jmp
mov
add
stos
push
lret
jno
lea
call
loope
lahf
xorb
xchg
lods
arpl
pop
jp
pop
mov
stos
fcoms
mov
mov
dec
imul
je
pop
psllq
roll
andl
pop
xchg
dec
pushf
sbb
ja
fdivs
xlat
xor
loopw,pn
push
adc
rol
push
jns
or
das
dec
rcrb
stos
and
lea
ret
sbb
loopne
ds
repz
cltd
fwait
xor
xchg
pusha
lcall
mov
lods
xor
adc
fdivl
dec
dec
xchg
xchg
loopne
cmpsb
and
int3
push
imul
mov
pop
in
sub
mov
cmp
ds
loope
and
mov
dec
dec
ds
xchg
cmc
push
cld
jl
scas
ds
popf
or
mov
sub
inc
and
outsl
stos
add
jo
cmpb
sbb
add
ds
adc
adc
mull
out
lret
orl
sbbl
in
pop
outsb
ja
jmp
les
adc
add
or
movsb
jle
sub
and
add
push
inc
lahf
xor
lds
mov
cmp
or
push
jl
add
push
xchg
into
jle
cmp
cmp
sub
xchg
movsb
mov
loopne
sbb
inc
dec
push
in
jp
out
ds
gs
mov
adc
das
testl
xor
pop
xchg
xchg
push
inc
fisttpl
sbb
mov
ds
scas
arpl
or
jg
aad
cmp
pop
inc
xchg
pusha
push
call
adc
aas
aas
pop
jl
xor
movsb
movsl
loopne
sub
pushf
mov
pop
inc
idiv
xor
lock
sahf
sub
push
adc
push
imul
popa
or
push
fiaddl
jb
ds
inc
mov
mov
xor
mov
dec
stos
sub
dec
adc
xor
push
push
pop
nop
data16
jecxz
pop
dec
shl
adc
fmuls
mov
and
fnstenv
ds
aam
in
popa
mov
ds
fsubs
mov
ds
pop
rcrl
fs
in
test
xor
push
ds
sbb
dec
adc
jns
sti
int3
inc
push
fstps
andb
xor
ds
or
xchg
stos
dec
in
aaa
or
sbb
jl,pt
mov
fisubl
mov
mov
pop
adc
sub
sub
aam
fs
ljmp
mov
ds
enter
out
imul
das
pop
inc
or
sub
hlt
ds
push
cltd
inc
ds
xor
mov
ds
inc
add
pop
popf
mov
test
lock
std
pop
xor
test
in
ljmp
lea
call
xor
adc
ds
sbb
sbbb
xor
rolb
push
insb
fs
gs
popa
inc
cwtl
int3
xor
pop
mov
pop
cld
or
dec
push
sbb
jp
popa
ds
ret
jmp
call
xchg
les
mov
jg
and
out
out
fs
repz
add
ds
popa
jae
and
lock
lods
add
jecxz
addr16
ds
cmp
inc
stc
fildll
xchg
inc
sbb
add
xchg
mov
jecxz
mov
pop
pushf
cmpl
dec
jae
scas
sbb
cmp
out
xchg
jmp
jg
test
pop
jnp,pt
jecxz
int
inc
jne
fistl
arpl
imul
mov
ds
xchg
lods
dec
fdivl
rcrl
add
aas
jmp
cmp
cmp
jecxz
sub
and
mov
fists
outsl
adc
lret
dec
orb
pop
jp
fisubl
adc
cmp
sub
mov
pop
inc
xchg
cmc
push
in
jo
in
adc
jae,pt
test
adc
sub
ds
mov
mov
mov
repz
inc
dec
lret
dec
pop
mov
mov
jg
lret
push
aam
mulb
sub
inc
bound
ds
mov
pop
rorb
xor
pushf
or
mov
ds
push
add
pop
test
cmc
mov
jp
xor
bound
ds
add
mov
cmc
cli
mov
push
rcrb
jns
dec
dec
xchg
mov
ja
or
push
sarl
movsb
xchg
sbb
mov
adc
pop
jmp
leave
ds
inc
or
pop
inc
sbb
mov
fs
mov
loope
pushw
xor
xchg
sbb
mov
jo
jno
jp
pop
es
add
inc
ret
fsts
mov
xchg
aaa
enter
out
out
fs
lahf
mov
iret
dec
std
lods
data16
xchg
out
rorl
mov
jp
push
lods
sbb
jne
movsb
call
or
sbb
ds
add
push
shlb
mov
jae
mov
pushf
and
jmp
ds
ret
xor
mov
inc
xchg
pushf
cmpb
or
mov
and
filds
push
inc
lea
xchg
push
out
loope
sub
inc
sub
pop
mov
add
aas
outsl
mov
dec
xchg
push
mov
mov
pop
mov
out
hlt
pop
pop
or
in
scas
mov
inc
and
cmp
mov
cmp
icebp
add
orl
cmp
xchg
test
scas
fstpl
fwait
push
sbb
and
scas
ss
and
imul
call
clc
stos
jns
sahf
adc
hlt
test
push
icebp
lea
cmp
lock
shrl
flds
cmpsb
add
or
cmp
cmp
cli
aas
stos
mov
mov
push
pusha
mov
pusha
aad
test
dec
pop
inc
mov
sbb
cwtl
les
mov
punpcklbw
xchg
sub
dec
mov
pusha
fwait
adc
adc
loopne
ljmp
inc
mul
aas
fiadds
insl
xlat
into
mulb
xchg
inc
into
arpl
mov
scas
les
sbb
mov
scas
daa
test
and
scas
pop
and
or
adc
sub
cld
fstl
in
scas
scas
imul
out
lock
cld
fstl
add
scas
scas
jbe
jmp
dec
out
fucomi
enter
cmp
mov
cmp
stos
pop
adc
cmpsl
and
sbb
push
mov
jg
pop
fstp
cmp
pop
popf
cmp
mov
push
rcrl
imul
cmp
fwait
stos
and
dec
notl
aad
pop
out
and
pop
jmp
jp
push
les
pop
dec
loopne
sbb
daa
push
imul
and
into
stos
outsl
cmp
stos
push
scas
lods
dec
fildll
stos
out
adc
sub
cs
jmp
sub
cmp
jo
stos
or
pop
push
stos
scas
stos
jbe
leave
adc
push
cs
push
stos
adc
or
idivl
pop
mov
icebp
mov
andl
xlat
cli
jbe,pt
test
cmp
cmp
lds
push
repz
mov
jno
cli
jae
sbb
leave
mov
or
mov
pop
or
fs
fisubl
xchg
js
clc
push
sub
dec
sub
sbb
std
and
jb
andl
xacquire
cmpsb
fwait
or
sbb
es
push
or
xsha1
cmpsb
or
cmp
ss
mov
lcall
mov
sub
aas
or
inc
mov
jb
icebp
sbb
xor
cmp
adc
xchg
imulb
loope
test
mov
scas
and
push
sub
cmp
orb
cmp
cmpl
addr16
mov
lahf
mov
insl
test
pop
inc
pop
mov
sbb
call
mov
push
mov
dec
arpl
ud1
negb
cwtl
push
xor
ja
and
sarl
movl
add
icebp
xor
jl
cmpl
pop
in
jno
cmc
pop
mov
and
push
jg,pt
jbe
pop
mov
ds
das
sbb
jl
xor
enter
jns
and
inc
push
inc
orb
adcl
mov
ret
mov
push
inc
insl
sub
inc
jno
scas
xlat
pop
add
aas
and
mov
aaa
fwait
rcrb
aam
pushf
push
in
mov
sahf
or
pop
mov
inc
leave
mov
mov
mov
in
sbb
ja
rcll
movsl
testb
ds
mov
js
inc
add
iret
sar
pop
inc
sbb
cmp
orl
fistpll
mov
test
fst
enter
js
scas
jnp
fwait
mov
in
sub
ds
aaa
sub
pop
fucomp
aad
test
inc
imul
repnz
sahf
ljmp
mov
mov
lods
hlt
pop
in
mov
out
daa
sub
dec
cmpsl
jo
and
insl
lahf
inc
std
inc
popf
movb
out
scas
cwtl
lcall
xor
fwait
ds
pcmpeqw
adc
jae
ds
and
ds
ja
dec
or
imul
cmc
movsl
repnz
mov
dec
jae
pop
loop
add
movsb
mov
and
push
fs
add
mov
inc
ljmp
ds
xchg
or
or
sarb
addr16
gs
mov
pop
sub
testb
inc
jge,pt
xchg
jnp,pt
sub
test
sti
movsl
sarb
aas
push
lock
add
pushl
xor
or
enter
add
ds
xor
xor
and
into
rcl
fsubs
callw
adc
cli
inc
adc
fwait
sbbl
cmp
xchg
scas
out
mov
dec
std
andb
int3
test
stc
pop
cmp
mov
inc
jp
jle
addr16
ds
adc
push
push
fs
xorb
add
add
lods
push
nop
mov
jbe
jmpw
ds
fsubp
push
test
popf
sbb
jne
orl
push
ds
jmp
mul
ds
or
xchg
pop
jge
sbb
add
sub
fldl
mov
shrb
mov
jmp
mov
insb
add
dec
adc
ja
jb
xor
fildll
mov
or
jge
test
dec
aas
pushf
lea
xlat
push
out
ds
jns
mov
and
dec
inc
sub
ret
iret
shrl
bnd
inc
pop
data16
mov
or
hlt
push
jecxz
cs
fistps
mov
pop
cmpsl
lahf
jmp
or
popa
ficoms
ds
pop
add
in
mov
or
xchg
dec
mov
add
aam
pusha
and
arpl
xchg
fldcw
insl
dec
ds
cmp
jecxz
pop
mov
shlb
inc
sbb
out
roll
mov
jmp
mov
or
mov
int3
lods
cs
orl
sub
orb
xor
add
mov
leave
icebp
pop
fisubl
addr16
and
inc
rclb
mov
push
inc
aam
ds
push
mov
mov
in
sub
pop
mov
ds
push
jmp
pop
inc
mov
aad
out
shl
lret
into
jns
icebp
int
mov
ds
and
inc
xchg
in
push
mov
std
cmp
fidivrs
ja
mov
mov
push
loopne
jle
testb
aas
pop
jp
dec
mov
imul
daa
ds
mov
dec
mov
stos
mov
sahf
or
inc
and
mov
xchg
in
and
dec
xchg
mov
in
or
les
adc
dec
lret
outsb
xor
dec
ror
clc
mov
inc
ds
test
pop
lds
mov
scas
mov
mov
jle
outsb
add
sbb
and
dec
mov
fidivrl
repnz
in
pop
xchg
jnp
vshufps
testl
push
orl
dec
mov
xchg
stos
loope
adc
daa
aam
dec
fdivrl
mov
movsb
dec
and
add
ds
aas
fistps
jb
jo,pt
fimuls
mulb
mov
call
jecxz
push
out
cmc
cmp
jge
and
mov
inc
test
mov
into
stos
inc
push
rcl
push
movsl
mov
add
xchg
dec
dec
mov
sub
dec
call
jle
or
mov
dec
icebp
fistpl
add
ds
lahf
ja
cmp
lods
imul
fcmovne
cmc
pusha
test
sub
dec
loop
in
int3
xor
daa
xor
repnz
stos
mov
adcb
daa
push
xchg
or
pop
mov
pop
rcll
mov
lds
lods
stos
jle
ds
inc
push
push
cmp
mov
and
aas
mov
aaa
dec
cwtl
sbb
inc
cmp
and
test
inc
cmp
xor
cmpsl
movsb
filds
and
mov
mov
adc
lsl
xor
iret
jle
lret
push
xlat
push
or
mov
in
fbstp
jne
push
cmp
pop
or
jo
inc
and
lret
notl
data16
loope
push
ss
popa
in
sbb
cmp
jne
stc
pop
sbb
jge
inc
outsb
jle
sub
inc
cmp
and
sbb
fisttps
pusha
mov
bound
and
jne
cmp
mov
test
in
pop
pop
lcall
adc
cmp
xchg
shrl
mov
push
dec
pop
lret
cmp
or
jge
add
or
pop
sbb
mov
movsb
js
dec
push
pushl
sub
mov
scas
push
pushl
jge
loopne
pusha
jmp
rcl
stc
cmp
pop
push
jp
scas
aas
fadd
imul
jge
cmpsl
insl
sbb
es
scas
cmp
adc
movsl
cld
fstpl
mov
and
cmpb
enter
cmp
insb
scas
sbb
outsl
stos
and
and
sbb
int
scas
jne
pop
data16
rorl
je
movsl
cmpsb
fistpl
ds
jecxz
ljmp
cmpsb
or
fcmovnb
dec
sub
mov
push
cmp
je
scas
adc
mov
sbb
adc
cmp
stc
ss
andl
mov
movsl
mov
mov
mov
loope
adcl
cmpsb
push
kmovb
mov
push
dec
mov
pusha
mov
in
out
add
or
jp
push
push
dec
pop
aad
pop
xlat
push
data16
or
jecxz
movsl
ss
pop
ss
pop
pop
sub
arpl
push
mov
pop
rcll
xchg
sub
mov
push
in
push
push
sub
bound
scas
cmp
aas
mov
int3
aaa
xor
xchg
cmp
mov
aaa
cmc
test
cmc
popf
pop
add
mov
push
les
inc
mov
adc
xor
push
test
cmp
fcompl
push
repz
aas
int
add
inc
xchg
xchg
mov
test
scas
pop
mov
sub
lahf
xchg
inc
sahf
xor
xor
shll
push
fwait
mov
cs
dec
mov
lods
inc
xchg
shll
cmp
mov
out
out
jo
xlat
cmp
dec
adc
mov
jno
mov
mov
arpl
sarl
jne
inc
ret
add
adc
pop
pop
cwtl
cmp
jns,pt
inc
jns
idivl
mov
mov
inc
cmc
test
ficoml
sbb
pop
jbe
xchg
mov
sub
pop
mov
xchg
pop
push
inc
mov
xor
adc
sahf
xor
js
popa
es
fstl
ret
movsb
jno
in
icebp
cmp
pop
push
mov
cmp
sbb
dec
inc
push
and
das
xchg
jp
movl
cmp
or
outsl
je
or
inc
ljmp
ds
mov
in
pop
dec
imul
sbb
cmpsb
inc
mov
cmp
mov
ret
mov
pop
adc
ret
out
lahf
scas
cmp
enter
xchg
jno
daa
lock
and
and
xor
jmp
xor
lock
orb
cmp
les
mov
aaa
xor
orb
div
rcrb
fmull
xchg
les
adc
xor
sub
pop
adc
push
out
popa
movsl
pop
and
mov
js
add
add
lea
stos
cmpl
jmp
adc
shl
and
push
rorb
mov
inc
pop
pop
mov
jp
movl
xor
fidivrl
jmp
jo
inc
add
mov
addb
push
sbb
mov
dec
rolb
sub
test
fwait
mov
xor
fstpl
fwait
push
std
add
mov
loope
or
scas
pop
mov
rorl
mov
and
insl
or
cmp
inc
adcb
adc
xlat
mov
cmp
leave
sbb
insb
shl
push
dec
adc
add
inc
pop
clc
sbb
cmp
mov
xchg
cmpsb
scas
mov
fs
pop
cmp
jmp
cmp
xlat
cmp
sub
xchg
jp
inc
mov
idiv
or
pop
bound
js
pop
ss
out
in
push
or
ss
inc
fildl
int
adc
aad
lods
test
push
cmp
cmp
sbb
test
push
inc
and
aad
inc
cmp
mov
mov
jmp
lea
sbb
fstpl
mov
aaa
cmp
push
cmc
and
pop
cltd
mov
and
dec
xchg
adc
cmp
sub
sbb
cmp
mov
xchg
mov
lds
loopne
sub
dec
sti
mov
adc
mov
and
cmp
test
adc
sarl
mov
lds
lock
cwtl
jle
jo
repz
dec
cmp
xor
pop
inc
mov
inc
push
jecxz
sbbl
mov
aas
test
incl
jmp
dec
call
mov
pop
add
mov
in
lods
inc
cmpsb
mov
xchg
xor
mov
and
outsl
stos
or
adc
add
xchg
dec
adc
lahf
mov
mov
jmp
imul
les
popf
lahf
cmp
push
fs
sbb
sarl
clc
lahf
jge
mov
mov
idivb
dec
pop
mov
das
scas
sub
cmp
mov
adc
inc
andb
daa
pop
cmp
inc
das
xor
mov
jne
push
pop
sbb
inc
dec
mov
add
hlt
sbb
scas
icebp
xchg
imul
push
sbb
jns
sbb
or
xchg
jmp
push
andb
mov
je
push
cld
xchg
orb
add
outsl
xor
shll
pop
adc
pushf
mov
cwtl
lods
test
fstpl
ss
mov
loope
fwait
xchg
sbb
inc
jb
jbe
jns
adc
scas
cmp
add
in
cmp
test
xor
gs
test
fstpl
ss
pop
cltd
xchg
mov
jge
scas
dec
cmp
outsl
cmp
les
adc
and
mov
sbb
aaa
push
cmp
stos
xor
fwait
xchg
pop
dec
scas
add
inc
mov
pop
shlb
clc
and
xchg
and
js
scas
or
push
dec
mov
lahf
mov
push
pop
popa
das
pop
inc
pop
inc
ss
mov
xor
aaa
xchg
mov
cmp
mov
mov
mov
lss
mov
adc
scas
or
mov
jns
nop
jp
or
xor
sub
pop
adc
pushf
adc
xchg
xor
sub
scas
je
jbe
dec
lods
mov
lods
xorb
xor
cs
dec
cs
mov
scas
add
scas
or
xchg
jbe
dec
das
and
pop
imul
das
subb
xor
and
mov
xchg
xchg
and
or
mov
scas
xor
pop
mov
mov
push
mov
adc
or
mov
inc
subl
loop
pop
movsb
rorl
arpl
mov
sub
mov
mov
mov
aad
rcrb
add
dec
cld
les
xor
push
inc
sbb
insl
jns
xor
ss
test
movsb
cmp
and
ds
aaa
mov
mov
sbb
mov
pop
jp
pop
mov
cmp
les
jae
lahf
cmp
mov
jl
jns
stos
jp
rorl
mov
push
stos
stos
scas
cli
cmp
popa
mov
out
lods
xor
cmp
mov
fstpl
je
mov
outsl
or
call
les
pop
adc
test
and
inc
cmp
sbb
sbb
addr16
out
fs
sub
adc
adc
adc
cmp
aam
aam
popa
push
out
push
std
cmpsl
addr16
jbe
mov
daa
stos
dec
add
or
enter
ror
out
stos
mov
les
pop
rcrb
adc
addl
xchg
addb
xor
pop
shll
hlt
and
xchg
mov
ss
adc
inc
addr16
ror
jp
lock
cmp
cmc
idivb
loope
pushf
jb
in
xchg
std
bound
push
and
xor
mov
cmp
enter
divb
inc
and
pop
add
mov
cmp
mov
scas
mov
scas
push
mov
cmp
inc
jg
or
mov
fmuls
sbb
push
loopne
xor
mov
dec
push
pop
out
pop
aas
popf
pop
cmp
sbb
cmp
sbb
fidivrl
cmp
push
mov
mov
or
push
lds
loope
cs
bound
dec
notb
sub
rclb
ret
sti
repnz
mov
sub
mov
adc
cmp
les
fisubrs
dec
lods
sbb
sti
mov
mov
adc
dec
stos
cltd
aaa
xchg
xor
es
push
push
in
mov
xchg
adc
dec
stos
cltd
mov
xor
or
sbb
push
mov
les
cmp
mov
adc
std
in
pop
lods
ss
cmp
sahf
icebp
imul
and
test
jnp
cmp
sbb
ret
pop
pop
push
cwtl
push
shl
xlat
out
aas
aaa
mov
dec
mov
sbb
scas
mov
in
fdivrs
push
fcmove
into
test
sbb
pusha
cmp
mov
xlat
inc
inc
faddp
imul
adc
js
adc
inc
aaa
daa
mov
loope
jg
out
pop
push
sarb
roll
push
cmp
cli
cmp
pop
test
sbb
out
mov
inc
arpl
aam
lret
movsb
fbld
pop
cmp
mov
cmp
loop
xor
aad
out
in
jmp
xchg
pop
jbe
pop
rorl
adc
sbb
mov
scas
negb
cmpsb
push
hlt
cmp
repnz
out
cli
mov
dec
mov
push
jle
mov
faddl
push
cmp
clc
jne
pop
pushf
pop
cmp
movsl
and
mov
adc
cmpsb
adc
cli
cmp
mov
mov
pop
cmpsb
call
gs
xor
pop
cli
xchg
cs
in
add
mov
mov
mov
mov
xor
xchg
jnp
push
mov
out
jp
imulb
xor
mov
aaa
sbb
xor
adc
push
repz
and
mov
lcall
cmp
out
jo
or
lods
sub
lods
pop
mov
std
mov
mov
mov
lcall
outsl
jns
xor
mov
test
rcrb
mov
sub
mov
out
jge
lock
lea
pop
xor
mov
add
push
call
xor
lods
pop
mov
push
gs
enter
inc
pop
scas
jecxz
xor
xor
mov
xor
mov
mov
and
ljmp
xor
lcall
imul
data16
jg
push
aaa
mov
aad
push
fstp
pop
stos
les
imul
xchg
mov
imul
cmp
stos
cwtl
mov
cwtl
scas
adc
adcl
inc
cli
adc
cmp
mov
mov
mov
lock
xchg
mov
testl
sub
std
mov
mov
mov
fsts
mov
cmpsb
mov
testb
mov
stos
movsl
insb
movsl
in
fwait
scas
and
sbb
lods
and
lret
sub
in
mov
mov
dec
and
pop
ss
mov
add
mov
and
hlt
and
mov
lahf
test
loope
lret
ficomps
leave
ja
or
fistpll
cmp
aam
daa
sub
cmp
cmp
int
jbe
jne
cmp
mov
mov
xor
sbb
mov
cmp
out
jbe
dec
shrb
scas
mov
and
mov
cmp
rcrl
and
jns
mov
mov
fsts
cmp
mov
xor
push
cmp
aas
cmp
cmp
pop
adcl
outsb
ret
mov
mov
pop
int
adc
mov
adc
push
and
aaa
and
incl
rcl
or
inc
cs
imul
stos
out
jg
push
clc
mov
mov
add
out
pop
ja
cmpsl
cmp
or
cmp
cmp
rol
sub
and
pop
pop
xor
or
lock
cmp
push
and
ss
and
shrb
adc
mov
and
inc
sbb
fisttpl
adc
mulw
dec
fidivrl
pop
mov
xor
pop
hlt
sbb
adc
ja
sbb
scas
mov
addr16
sbb
loope
push
and
push
test
aas
and
push
loope
test
jo
push
mov
inc
lret
and
adc
cltd
dec
stos
cmp
out
bound
xchg
dec
jnp
imul
and
loopne
addr16
add
push
aas
adc
sub
push
mov
adc
ret
sbb
leave
test
addr16
ret
push
mov
imul
xor
mov
adc
arpl
fucom
jns
sub
clc
stos
mov
dec
dec
mov
sahf
mov
test
mov
or
pop
cmp
bound
xor
ds
nop
add
cmpsb
push
dec
mov
add
das
jns
lcall
cmp
ud2
fisttpl
xor
and
pop
mov
rcrb
out
popf
lret
push
mov
mulb
mov
sub
andl
inc
data16
sub
mov
adc
scas
rol
mov
sbb
repnz
add
sub
xor
jns
inc
jg
jb
rcrb
nop
mov
push
mov
cmp
aas
xor
ds
popl
mov
pop
cmp
shlb
mov
xchg
loopne
sbb
dec
and
sub
jo
sub
adc
xlat
fnsave
cmp
mov
pop
outsb
in
push
pop
popf
push
xchg
lods
and
cmp
jl
aas
sarb
mov
cli
test
bound
or
mov
mov
jp
mov
ror
mov
cwtl
cltd
cmp
loope
shll
ret
movsb
dec
adc
pop
scas
jns
pop
ds
emms
cmp
int
repz
adc
fcmovnb
ds
mov
jo
dec
mov
ror
pop
cmpsl
add
pop
inc
fildl
inc
ds
test
shlb
ds
pushf
and
and
lods
adc
mov
fistpll
mov
inc
aad
lock
stc
push
cwtl
fsubr
jns,pt
adc
sbbl
or
insb
in
iret
jno
adc
pop
pop
inc
repnz
mov
incb
adc
movsb
test
mov
xchg
push
ds
xchg
in
xchg
bound
mov
shrb
fs
add
pop
ds
add
mov
jo
pushl
sub
or
outsb
cld
leave
jp
or
into
in
ds
rcr
dec
jnp
shr
and
lds
loopne
pop
sbb
stos
jl,pt
sub
ds
fnstsw
or
jmp
mov
pop
xor
xchg
xchg
fs
mov
mov
cmp
test
sbb
js
pop
pop
js
das
jmp
ds
cs
in
xlat
cwtl
pop
cmc
push
jae
js
movl
loope,pt
aad
shll
mov
ss
mov
and
adc
addr16
test
aam
xor
outsb
adc
pusha
movsl
jle
std
cmp
aad
push
or
mov
xchg
hlt
and
inc
sub
test
aaa
and
adc
cmpsl
ret
xchg
xor
fwait
ret
data16
mov
leave
sbb
cmp
out
mov
xor
jle
or
ret
mov
fdivrs
insb
bound
pop
mov
or
pop
or
push
loopne
cmp
mov
test
imul
or
push
jp
mov
sahf
ds
xor
mov
and
push
addr16
and
test
imul
imulb
pop
push
inc
pop
ret
sbb
icebp
jp
leave
loope
inc
xchg
cmp
mov
loopne
jno
sbb
mov
insl
xchg
sub
and
roll
es
frstor
or
ds
sub
mov
dec
mov
or
mov
sbbb
daa
xor
jle
aam
mov
jg
dec
inc
add
pusha
mov
jmp
jl,pn
ret
rorb
sub
imul
pop
scas
xor
or
or
mov
mov
or
jns
cmc
mov
addr16
faddp
inc
lea
lahf
or
push
rcrl
mov
pop
dec
pop
clc
jb
adc
push
xor
xchg
out
scas
sahf
xor
icebp
ds
mov
sub
xchg
mov
sub
inc
imul
inc
pop
mov
cmp
dec
push
in
pop
out
incb
cmpl
fadds
idivl
orl
sti
ds
test
push
scas
out
ds
nop
jp
cld
fcomp
lcall
adc
gs
dec
loop
sbb
mov
xchg
inc
sbb
dec
ds
lret
sahf
mov
cmp
in
mov
sub
ja
sbb
mov
imul
lods
jl
cmp
cltd
iret
fdivl
enter
std
xor
mov
mov
int3
pop
add
jnp
adc
sahf
jp
jne
mov
aad
xor
out
pop
mov
mov
jne
dec
pushf
adc
xchg
insb
fs
lods
jp
jae
xchg
lcall
mov
bound
xchg
pop
mov
shl
js
and
mov
clc
test
data16
ds
mov
sub
int3
outsb
lock
or
in
add
stos
iret
cmp
imul
and
xchg
mov
jp
and
enter
cmpsb
mov
and
gs
cmpsl
pop
test
ds
or
xor
mov
xor
mov
cmpl
outsl
shrb
ds
aam
and
jbe,pt
std
out
push
mov
mov
or
xor
lds
push
fistpl
push
jle
fstpl
jae
push
sbb
and
pop
jne,pt
cltd
imul
xor
test
mov
mov
jp
rorb
mov
or
push
sti
pop
cmc
clc
lods
enter
xor
mov
fs
xor
idivb
and
and
mov
mov
push
xchg
push
push
inc
popa
in
dec
sub
adc
in
std
jmp
jge
lea
adc
pusha
push
ds
cmp
push
ds
aas
pop
test
in
mov
xlat
in
lods
popf
jns
push
imul
and
lcall
sbb
es
adc
inc
out
push
into
mov
pop
ds
jo
inc
ds
test
mov
lret
jae
inc
imul
test
push
jge
xchg
aad
adc
popa
mov
fstpt
cmp
cmc
fidivs
inc
in
mov
sub
sub
add
dec
ljmp
adc
dec
add
jns
nop
int
dec
pop
mov
sub
xchg
int3
fldl
inc
stos
ds
jmp
sti
in
ds
xchg
xlat
out
ja
dec
mov
ret
xchg
jb
jno
xor
repnz
mov
mov
rorl
fwait
dec
lret
sub
sub
inc
ds
dec
pop
xchg
call
cmp
inc
addr16
int
mov
jns
fisubrs
fsubl
sub
aas
js
adc
lods
xor
mov
and
cmpsb
xchg
loope
mov
mov
xor
and
stos
sbb
sti
loope
mov
and
jno
sbb
jmp
ljmp
mov
xchg
ror
or
xorb
sub
push
cmpsb
cmp
cmpl
and
sbb
pop
mov
cmpsl
jg
mov
pop
ficoms
sbb
dec
and
add
xor
cmpsb
lds
adc
test
cmpl
pusha
and
jl
inc
fsubrs
push
in
call
add
jge
out
sti
popa
adc
cmp
sti
repz
mov
clc
rol
and
adc
cmp
nop
adc
movsl
cmp
ss
das
loope
xchg
leave
cmp
mov
jmp
cmp
cmp
lods
rorl
mov
int3
inc
aaa
cmp
sbb
movsb
sub
mov
into
scas
mov
imul
xor
jge
inc
rcr
stos
std
xchg
mov
movsb
xor
orl
lret
cmc
lret
jge
xchg
xor
inc
cmp
jbe
mov
jmp
cltd
inc
popf
xor
push
mov
mov
ss
pop
inc
jne
mov
les
pop
push
and
call
mov
lea
es
pop
xor
repz
jns
xor
dec
not
mov
imul
ss
outsb
loop
out
fcom
push
aad
cs
pop
aas
sbb
repnz
in
fidivl
cmp
call
push
fisubrl
mov
xchg
pop
inc
loopne
pop
into
pop
sahf
pop
push
aas
daa
cmp
xor
add
fmul
aaa
push
lcall
int
pop
push
adcl
ret
pop
pop
inc
loop
cs
call
pop
mov
fiadds
in
jp
xlat
inc
jne
outsl
push
dec
in
mov
data16
xchg
dec
inc
icebp
sarl
push
dec
push
jmp
pop
push
jg
jg
jae
jo
stos
scas
mov
sub
sub
fdivrs
out
adc
sub
mov
xor
push
shrb
outsl
loop
sarb
mov
inc
pop
mov
adc
das
popf
sub
mov
ja
mov
xor
ja
cli
mov
daa
sbbb
aaa
xchg
mov
test
mov
xor
pushf
mov
sbb
dec
push
fistps
sbb
xor
jge
push
mov
mov
mov
mov
push
inc
and
mov
data16
scas
pop
inc
into
add
mov
cmp
int
mov
cmpb
rorb
cli
xor
jge
jne
in
mov
fs
sub
cmp
mov
aam
iret
mov
inc
jp
pop
dec
les
scas
fstl
into
or
inc
scas
pusha
sahf
mov
sbb
scas
ret
lea
jae
cwtl
stos
in
aas
pop
enter
lock
insl
aas
ljmp
sbbb
jne
shlb
dec
sarb
cmp
mov
es
xchg
or
stos
fldenv
fnstenv
bound
or
fisttpll
js
and
sub
mov
std
dec
mov
add
mov
cmp
push
je
mov
and
ds
movsl
daa
loope
or
dec
mov
stos
call
xlat
bswap
mov
hlt
es
outsl
mov
scas
insl
pop
xchg
mov
pop
fistpl
mulb
insl
mov
mov
add
mov
fcompl
scas
sahf
lret
adc
or
adc
jp
or
imulb
insb
cmpsl
aas
inc
push
lds
imulb
outsb
das
mov
lahf
jp
inc
inc
pop
loop
fstp
outsl
subb
out
or
push
flds
pushf
inc
xchg
ss
inc
mov
sub
int
sub
mov
mov
in
or
xor
dec
mov
mov
mov
leave
mov
and
mov
ret
add
imulb
mov
nop
inc
push
adc
mov
mov
dec
stos
sub
jns
push
xlat
sub
outsl
sbb
cmp
xor
lea
imul
dec
ja
aas
imul
lret
rcll
sub
jcxz,pn
push
push
mov
inc
roll
fisttpll
cmp
sub
lcall
xchg
sub
inc
lods
fstp
dec
insl
and
mov
call
dec
bound
js
incl
cmp
ret
xor
aaa
mov
xorb
mov
leave
inc
xor
xchg
fwait
xchg
sbb
sub
inc
cmp
mov
push
xchg
int3
leave
cmp
stos
ss
fstpl
and
scas
dec
adc
and
outsb
push
pop
mov
mov
cld
fstpl
push
push
mov
das
outsb
add
aas
outsb
shr
sarl
test
add
mov
ss
fcom
lcall
mov
call
mov
and
jcxz
sbb
movsb
jmp
out
ficoms
dec
xchg
movsb
jle,pt
and
and
dec
ss
adc
out
cs
les
jae
mov
stos
movsl
pop
and
pop
fsubs
jle
sub
cmp
jns
stos
scas
popa
fwait
ds
pop
fs
pop
adc
aas
or
pop
lds
cmp
rcl
test
cli
cmpsl
mov
pop
inc
or
dec
into
pop
inc
das
inc
jno
pusha
dec
and
or
insb
enter
popa
jle
add
jmp
test
inc
xchg
dec
mov
add
xchg
push
aaa
pop
xor
xchg
lcall
in
jb
ja
push
sub
data16
fdivrs
mov
call
ds
mov
lea
jp
in
cmc
pop
inc
mov
push
aam
sbb
jbe
sbb
sbb
xchg
dec
nop
mov
mov
fisttpl
cmp
dec
add
lea
and
pop
mov
lret
dec
cli
inc
movsb
into
arpl
fwait
ds
notb
and
and
insl
push
aad
cmp
je
andb
xchg
xor
stc
jle
cmpsl
into
in
xorl
mov
ds
xchg
ds
or
ret
out
sbb
xor
or
fsubrp
rcr
mov
in
lret
pop
and
sbb
dec
inc
shll
mov
mov
stos
pop
scas
cmp
mov
xor
inc
clc
push
sbb
fists
pop
cmp
jl,pt
or
jp
or
xchg
mov
bound
xor
push
mov
sbb
and
outsl
jle
in
fcomp
mov
pop
cmpsl
add
xchg
nop
mov
int3
and
aad
inc
rcrl
arpl
push
pop
push
xchg
mov
inc
xchg
adc
sub
mov
sbbb
divl
jbe
push
mov
cmp
mov
dec
int3
add
jae
mov
mov
cld
ds
je
push
jbe
jb
inc
or
jp
je
sub
in
sub
xchg
addr16
adc
or
mov
mov
outsl
dec
push
stos
arpl
ds
aam
pop
testl
xlat
adc
dec
imul
mov
mov
in
mov
jo
adc
jbe
mov
mov
ja
adc
xchg
cmpb
fistpl
ds
aas
pop
xor
xor
jecxz
ljmp
push
test
mov
in
scas
pusha
sub
shrl
cld
adc
ret
stos
ds
jl
or
outsb
add
push
mov
mov
outsl
sub
shrb
lcall
add
dec
mov
js
dec
ds
cmp
leave
ds
cmp
clc
xchg
jp
inc
xchg
mov
mov
sbb
adc
jb
cs
fstpl
dec
adc
xor
cmp
lods
xlat
adc
loope
or
scas
fnsave
cmp
cld
fstpl
inc
and
sbb
and
sbb
inc
jns
rcl
stos
inc
aaa
mov
subb
das
add
ss
leave
sbb
mov
fldenv
xor
ds
fsub
in
dec
cld
xchg
cwtl
and
inc
jle
ljmp
inc
xchg
mov
push
pop
insb
shlb
sub
rcl
inc
adc
jl
fnsave
inc
push
push
fsubp
sub
sub
fmull
pop
popa
mov
lret
and
out
inc
inc
sub
dec
xchg
xchg
lock
jmp
mov
js
pop
sub
out
in
push
dec
arpl
or
and
jae
ds
cmpsl
or
filds
xchg
xchg
xchg
adc
imul
xchg
shlb
fiaddl
aaa
and
in
xchg
or
push
inc
sbb
ds
jae
shr
ja
add
sbb
adc
sub
xor
rorl
or
ret
fistpl
cmp
ds
aam
and
ds
mov
dec
faddl
xchg
dec
repz
push
ds
cmp
mov
sub
mov
popa
cmpsb
ret
cmp
aaa
insb
mov
lock
push
fs
out
loope
rep
ds
sahf
jg
mov
pop
ds
push
jns
xchg
sarb
xor
jle
cmpsb
aad
or
jbe
aaa
stos
jp
sbb
movsb
inc
test
cmpsb
ds
push
fs
in
int3
ds
adc
mov
pusha
dec
sbb
adc
lret
mov
addr16
ds
aad
jge
lds
push
popa
fiaddl
out
jge
ds
cmp
jg
mov
lcall
roll
xchg
jmp
lds
jmp
push
sub
mov
cli
iret
push
sarl
inc
xlat
xchg
sbb
stc
push
nop
inc
pop
mov
jmp
test
inc
xlat
dec
std
xor
call
inc
repnz
stc
movsl
and
repz
mov
jg
dec
adc
push
int3
pop
dec
insb
and
cmpsb
jns
adc
in
push
mov
mov
jp
add
mov
dec
fsubrs
xor
dec
aam
stc
sbb
mov
test
mov
pop
xor
sbb
and
icebp
scas
cmp
cmp
lea
pop
mov
cld
ds
jmp
or
inc
push
mov
inc
lds
lods
mov
daa
sub
lea
dec
sbb
jle
scas
stc
shll
push
push
add
movsl
push
dec
adc
mov
xor
stc
jns
or
shlb
iret
popf
daa
addr16
cs
mov
jae,pt
jecxz
pusha
popa
jp
mov
fcoms
cmc
dec
std
mov
sub
movl
les
lahf
xor
cmp
arpl
sbb
add
sar
iret
dec
out
lods
int
and
add
mov
xchg
jecxz
into
std
mov
aam
in
pop
pop
insb
das
out
mov
test
imul
sarb
scas
inc
dec
test
and
lea
pusha
xor
jmp
in
xchg
push
ja
mov
lret
ret
adc
jge
sarb
inc
fldt
mov
push
ds
ja
xlat
inc
and
mov
popf
imul
fdivrs
out
adcb
mov
stc
mov
xchg
mov
mov
test
or
js
push
xchg
xor
mov
nop
insl
in
cmp
into
jle
cmp
outsl
jne
imul
das
jno
roll
xor
cmp
mov
mov
outsl
scas
movsb
mov
ret
xchg
mov
dec
lds
call
and
xchg
add
shll
push
jle
aam
or
adc
and
ret
dec
add
ret
sbb
mov
movsb
movsl
pop
ds
pop
repnz
mov
adc
out
or
jp
add
icebp
sub
jbe
xchg
ficoms
and
inc
popf
push
push
rorl
mov
add
call
repnz
mov
sbb
pop
xlat
mov
mov
mov
inc
mov
jmp
adc
xlat
fs
movsl
ds
in
lds
mov
push
xor
ds
push
bnd
and
xor
jo
sahf
mov
jae
sub
mov
fs
adc
mov
rcrb
lret
xchg
sbb
inc
loope
bound
push
lret
mov
sub
sbb
fs
inc
mov
popf
mov
cmp
pop
adc
ds
scas
icebp
push
sub
les
clc
mov
lret
out
std
outsl
mov
aam
cli
pop
je
add
jl
int3
push
mov
add
or
push
orl
mov
jle
stc
or
cmp
sub
push
xchg
sbb
fucomi
dec
adc
jmp
hlt
inc
loope
cmpsb
mov
xchg
jbe
mov
mov
cli
dec
orl
notl
jecxz
test
mov
sub
inc
loop
mov
adc
hlt
outsl
ds
iret
aad
pop
sbb
xor
sbb
fimuls
rolb
cmpsb
mov
sbb
mov
jp
mov
cs
dec
mov
jne
ret
add
test
mov
inc
int3
ljmp
adc
jle
in
outsl
fucompp
sti
xor
sbb
ret
addr16
mov
push
fwait
push
mov
xlat
push
cmp
add
les
std
addr16
dec
in
ds
xlat
or
dec
clc
mov
enter
out
dec
sbb
pop
dec
out
ds
aam
push
add
neg
mov
dec
adc
sahf
sub
or
mov
aas
lea
shll
dec
shll
in
inc
jle
fists
add
stos
xchg
mov
or
and
jnp
daa
popl
movsb
mov
jg
fs
iret
orb
lret
jns
enter
xchg
xlat
call
lods
xorl
rcll
cmp
repz
mov
outsb
ds
push
or
pop
lock
xchg
adc
iret
in
cltd
dec
mov
aam
fimull
push
icebp
imul
ret
xor
shlb
pusha
cmpl
lret
lods
mov
ds
mov
fstp
call
xor
loopne
ds
lret
mov
out
pushf
add
fnstsw
into
xor
stos
ljmp
jo
in
aas
sbb
adc
adc
mov
scas
jle
cmp
push
xor
stc
mov
sub
fs
stos
ret
add
mov
ffreep
and
mov
daa
fs
xchg
xchg
mov
int3
and
pop
out
cmpb
sub
dec
mov
inc
jle
adc
lds
jge
dec
arpl
pop
ds
pusha
lods
cmp
imul
push
insb
xchg
popa
mov
aam
outsb
imul
je
loop
fwait
out
xor
fisttpl
or
imul
cmp
sarl
std
popf
cld
push
push
jae
jp
xlat
xchg
call
aam
ds
arpl
sub
pop
xchg
cmp
and
mov
push
subl
lods
mov
adc
dec
or
shll
fildl
jg
fwait
jnp,pt
xor
insb
fisttpll
ds
and
jl
addr16
mov
xchg
inc
mov
lods
mov
call
xchg
dec
or
push
in
sbb
out
aam
stos
in
mov
rcll
daa
fldenv
ds
pop
push
frstor
cmp
add
aas
inc
hlt
dec
mov
cltd
inc
inc
push
cmp
push
jge
xchg
mov
add
xor
sahf
inc
ds
xchg
dec
add
sbb
dec
inc
adc
mov
add
jle
rcrb
shlb
popf
pop
mov
mov
stc
mov
or
mov
inc
mov
sahf
dec
in
mov
mov
jmp
or
ds
flds
idivl
and
mov
push
mov
sbb
mov
jl
bound
mov
dec
lea
mov
pop
mov
inc
ds
loopne
outsl
imul
ds
dec
mov
ds
fiaddl
sbb
test
mov
mov
inc
cltd
into
dec
popf
pop
mov
mov
hlt
push
xchg
jmp
jns
ds
imul
cmp
test
daa
and
pop
sub
push
jns
mov
ds
lea
pusha
sti
test
insl
mov
test
and
push
hlt
lahf
and
sbb
leave
stc
add
sub
int3
cs
icebp
mov
mov
testb
dec
outsl
push
imul
jge
or
ds
test
outsl
popa
out
mov
std
mov
mov
add
data16
jp
sbbl
jo
xor
cmp
lret
mov
push
xchg
les
cld
imul
jbe
xor
mov
stos
xchg
cmp
mov
push
sub
daa
std
mov
loopne
or
push
dec
and
in
mov
movsl
mov
adc
mov
inc
rcrb
or
and
xor
dec
cmpsb
mov
movsl
pusha
mov
sbb
or
test
jne
cmc
sub
addps
das
sarl
xchg
or
push
call
loopne,pt
inc
jo
cli
clc
xor
push
add
je
push
or
jo
push
fildll
xchg
dec
jbe
mov
add
ds
clc
popa
pop
mov
nop
jg
pop
imul
sbb
cmc
lds
pop
add
ds
adc
sub
xor
imul
repz
fwait
pop
mov
mov
int3
mov
fisttpl
jo,pt
mov
adcb
inc
or
mov
mov
gs
dec
or
aas
ds
scas
jno
lea
mov
sub
repz
sbb
or
xchg
cld
push
add
sub
rcrb
int
cmpsb
or
imul
jno
mov
mov
imul
or
leave
ds
loope
mov
mov
mov
rcr
xchg
mov
ds
pop
or
nop
cmp
mov
pop
mov
sbb
cmp
dec
lods
inc
xor
pop
es
mov
xchg
dec
mov
icebp
inc
aad
dec
popf
stc
in
ds
mov
dec
mov
inc
cmp
pushf
sub
cwtl
inc
sub
das
test
lods
mov
cmpsb
xchg
repz
ja
ds
inc
out
mov
add
lea
dec
adc
lock
jmp
mov
fisubrl
out
ds
add
add
test
mov
push
stos
sub
sub
cli
out
addr16
push
test
mov
testl
ds
jae
jl
and
xlat
adc
out
test
repnz
mov
jae
lret
pop
mov
mov
sub
movb
sub
push
sub
and
inc
inc
push
inc
movsb
and
xchg
cld
fwait
arpl
mov
adc
imul
jnp
jno
lahf
leave
fs
scas
call
mov
ds
inc
test
lds
fucomi
mov
jp
cld
push
mov
sar
jns
popf
ds
movsl
push
sub
xchg
cmp
mov
mov
jne
xor
inc
ds
xchg
dec
rcr
lea
mov
xor
inc
cmp
xchg
lods
mov
rcll
daa
shlb
xchg
pop
popf
push
gs
cltd
scas
das
and
rcr
xchg
loopne
ds
insl
aaa
jecxz
mov
jle
test
mov
in
inc
test
lods
or
mov
dec
imul
jne
test
cmpsl
mov
inc
xchg
ds
es
loopne
mov
test
not
test
or
add
loopne
add
inc
out
or
push
icebp
mov
lock
ds
jne
pushf
fbld
cmpsl
ds
dec
jl
bound
adc
fimuls
jle
int3
mov
or
mov
jmp
call
push
xchg
and
or
ds
cmpsb
fisttpl
jne,pt
jnp
adc
lock
int3
roll
sbb
mov
add
sbb
xor
scas
ds
popa
push
ja
adc
outsb
sub
jb
push
mov
das
orb
out
int3
xor
popf
ds
fs
in
aaa
add
mov
jle
fcoms
lods
mov
dec
adc
lret
fidivrl
ds
out
loopne
lcall
rorl
ds
icebp
int
mov
jo
xor
in
jns
mov
roll
inc
ret
fistpll
xor
stc
gs
stos
push
enter
movsl
jp
sbb
imul
push
lcall
xchg
clc
jae
mov
aaa
add
dec
dec
mov
jge
cmp
iret
jmp
sbb
sti
inc
cmpl
aas
rorb
arpl
fucomip
dec
pop
inc
adc
ss
mov
cmp
pop
mov
sbb
pop
int
push
aam
test
sub
int
xlat
pusha
std
mov
pop
cmp
pop
inc
push
movsb
fldl
pop
sarl
movsb
shl
ds
sub
xchg
ds
sbb
mov
ror
ds
aad
imul
add
ds
inc
xchg
dec
mov
inc
mov
daa
mov
outsb
push
fiaddl
sbb
mov
pop
lcall
mov
aas
fmulp
mov
inc
stc
rcll
add
mov
push
imul
lods
inc
nop
sub
jno
iret
ds
clc
rolb
ds
sarb
jg
mov
stos
cmp
ds
frstor
mov
jmp
les
inc
insl
xor
fsubrs
stos
pushf
scas
loopne
icebp
mov
int3
pop
xchg
scas
xor
stos
ds
adc
mov
mov
ds
scas
mov
jge,pt
xchg
add
sbb
jns
aas
sahf
call
mov
lods
jmp
in
fidivrs
xor
push
mov
or
push
pop
sarl
sbb
pop
inc
mov
mov
scas
sti
sbb
cmc
xchg
loop
push
aam
inc
sub
fwait
or
and
push
pop
insl
mov
and
cmpl
mov
push
adc
in
mov
negl
mov
pusha
gs
mov
lock
cs
sti
lods
cltd
sbb
jle
leave
push
jae
dec
mov
ds
and
movsl
push
fmuls
inc
popf
mov
les
xor
sub
cmp
mov
dec
xchg
push
into
inc
xchg
and
out
xchg
sbb
mov
int
and
inc
out
mov
addb
xor
aaa
mov
cmp
dec
aam
aaa
dec
aas
shlb
mov
sbb
mov
in
dec
and
and
and
adc
bound
lods
popf
outsb
idivl
push
test
sub
stos
cmp
out
and
push
fwait
pop
mov
pushf
cmp
jle
lods
sub
ds
test
push
fstpt
or
lea
mov
popa
imul
mov
mov
test
jecxz
fxch
add
pusha
pop
lds
xchg
bound
std
and
gs
or
lret
mov
out
dec
pop
fsubrl
ds
mov
daa
mov
pop
adc
cmp
xor
and
lods
fsubrs
mov
test
mov
out
push
mov
inc
dec
mov
ljmp
jo
jns
mov
js
addb
shlb
mov
jge
pop
push
icebp
xor
lods
pop
pop
scas
fisubrl
push
inc
aas
mov
jns
repz
cmp
lock
mov
add
mov
xor
jg
and
cli
ja
push
ret
sub
pop
mov
lahf
inc
mov
dec
xor
inc
mov
jecxz
andl
xchg
lods
data16
mov
sub
mov
lahf
pusha
ds
inc
fwait
iret
int
add
sbb
mov
stc
jl
sub
xor
push
inc
xchg
dec
ret
ds
jnp
xchg
jno
out
ds
mov
cmp
icebp
loop
ds
lds
xor
push
or
mov
sbb
arpl
jmp
sub
lcall
pushf
ds
mov
inc
jmp
mov
push
cmc
into
aad
xchg
dec
fsubr
add
push
jno
dec
mov
imul
sbb
adc
cmp
int3
fsts
call
lds
dec
cmc
jge
dec
and
lcall
clc
push
mov
jne
mov
les
sbb
dec
lcall
sub
inc
repz
sub
shll
dec
adc
inc
push
test
pop
mov
icebp
sbb
jae
add
test
out
imul
sub
test
ds
push
push
aas
jecxz
mov
mov
mov
inc
add
loope
xor
mov
test
mul
bound
adc
xchg
into
lsl
fnstcw
movsl
jne
cltd
les
pop
shll
mov
add
test
nop
into
stos
and
add
xor
xor
lods
pusha
es
popa
ror
mov
sub
xor
notb
xor
scas
inc
int
push
mov
loop
push
cmp
mov
mov
scas
sub
cs
nop
xlat
popf
adc
jecxz
sbbl
and
jmp
add
insl
sarl
sub
ds
cmp
in
jo
ja,pt
scas
fimull
mov
cld
cmpsl
pushf
out
push
and
xchg
xlat
and
dec
pop
dec
mov
adc
push
cld
cmp
sbb
outsb
rcrb
xchg
and
adc
rorl
inc
mov
mov
add
xchg
mov
cmpsb
inc
js
movsl
push
jns
out
inc
dec
pop
and
dec
das
push
pusha
movsl
fs
pop
push
and
pop
popf
inc
stc
fstpl
call
mov
gs
sarb
jecxz
in
ss
push
aaa
mov
scas
or
popa
in
fistl
sbb
add
ss
mov
hlt
xchg
jno
in
nop
mov
cmp
add
lret
outsl
lret
push
jno
inc
pop
mov
mov
test
ljmp
push
pop
cmp
add
jne
bound
fstpl
pop
cltd
cmp
sub
and
push
and
inc
ss
sub
std
push
mov
push
call
roll
and
adc
dec
jns
mov
fisttpll
in
sbb
xor
pop
xor
loopne
inc
adc
ds
cmp
mov
xor
push
pop
lret
sbbb
push
scas
mov
mov
leave
std
adc
fistpl
sub
push
inc
test
jle
popf
mov
aas
jbe
adc
pusha
add
adc
and
cmc
xchg
push
les
fadd
shll
in
movsb
inc
jle
inc
enter
lea
in
out
dec
popf
stc
xchg
push
shrl
sub
subb
jp,pt
and
in
jbe
mov
in
ds
or
iret
adc
inc
dec
mov
inc
mov
in
insl
cmp
imul
cld
lret
mov
pop
repz
mov
mov
push
mov
jle
sbb
imul
inc
mov
xchg
ds
sahf
dec
cmc
add
cld
mov
dec
push
mov
adc
imul
pop
popa
pop
and
test
imulb
xchg
push
pop
filds
into
mov
inc
push
mov
scas
int
idiv
pop
push
cmpsb
xor
mov
test
jecxz
inc
frstor
out
fcmovnb
xchg
jb
test
dec
fs
dec
sub
jmp
loope
cltd
jns
and
dec
in
das
lret
adc
mov
ffree
sbb
xchg
mov
repnz
jecxz
sub
adc
mov
mov
jno
fwait
mov
fcmove
lret
jp
lea
mov
mov
add
jae
fistpll
ret
xchg
push
and
and
sub
xchg
pop
xchg
jg
and
sbb
mov
mov
test
mov
jne
fsts
xlat
xchg
test
ds
and
imul
flds
mov
pop
popa
mov
ds
dec
sbb
pop
sub
fisttpll
movsl
aas
push
shll
mov
mov
sub
inc
jne
mov
ja
or
lods
or
jle
adc
pop
into
ds
mov
cmc
mov
fldcw
sti
adc
lods
sbb
stc
arpl
cmp
mov
xchg
sbb
sahf
jo
lcall
jno
testl
cli
jge
xor
dec
lds
inc
push
inc
ds
add
or
scas
inc
sarl
addl
xchg
loope
lahf
imul
pop
notl
jnp
jo
aam
imulb
mov
ds
in
cmp
sbb
xor
in
adc
or
addl
and
sbb
and
ss
mov
mov
cwtl
push
dec
insl
rcrl
mov
pushf
sbb
ds
sub
clc
loop
jecxz
ud2
add
push
outsl
sarb
jb
test
sub
shll
fisttps
cld
jmp
mov
popf
lea
loope
int
adc
cwtl
pop
idivb
or
pop
push
mov
cltd
sbb
ja
lods
and
sub
negb
inc
nop
inc
fstpl
loope
fsubrp
lret
hlt
fdivrs
inc
add
jge
push
lahf
adcl
mov
sub
push
fidivs
ds
cmp
xlat
das
repnz
inc
loope
dec
sub
mov
sbb
ds
xlat
lahf
insl
push
dec
mov
popf
out
inc
mov
dec
dec
inc
xor
outsb
stc
std
push
sbb
shlb
mov
loopne
es
in
mov
jl
and
mov
jo
and
inc
jecxz
pop
pushf
jge
stos
imul
xor
jns
jle
adc
outsl
and
sahf
ds
sub
iret
int
push
sub
mov
fiadds
and
repnz
inc
cs
orl
daa
mov
popa
fldl
arpl
jle
loop
mov
pop
mov
mov
mov
sub
mov
loopnew
mov
sbb
dec
ds
lods
add
mov
or
inc
ds
xchg
mov
xor
and
pop
pop
ds
out
popa
cltd
movsb
jae
in
sub
or
sbb
push
pusha
pop
rcll
in
push
or
cmp
xor
stos
xchg
mov
xchg
push
pop
arpl
ds
into
mov
mov
mov
stc
int3
mov
aas
pop
and
lods
call
data16
outsb
jae
ja
int3
adc
lea
cmpsl
jno
jne
sahf
sbb
mov
aad
inc
jmp
into
fldcw
mov
xor
dec
pusha
jmp
dec
cltd
mov
add
bound
cmp
xchg
rclb
dec
push
outsb
arpl
cmpb
leave
in
stc
enter
sbb
into
mov
inc
ds
adc
push
scas
jecxz
mov
jg
sbb
mov
sbb
and
movsb
pop
xor
push
addr16
cmc
outsl
and
mov
aaa
or
jp
in
jbe
sub
add
sbb
shlb
les
ss
je
andb
push
pop
sub
push
out
mov
push
jmp
pop
inc
mov
sub
adc
dec
jns
stos
pop
pop
js
pop
sub
cmp
arpl
jno
push
xor
incl
xorb
in
push
lds
push
loopne
push
outsl
push
out
adc
jbe
add
pushf
pop
cmpsb
and
mov
pusha
push
imul
adc
sub
cmp
push
pop
push
cmpsb
xchg
je
cmpsb
in
popa
sbb
leave
shlb
or
aaa
imul
cmp
and
pop
mov
pop
mov
or
dec
daa
lcall
fstp
sub
jnp
stc
xor
dec
outsb
sbb
mov
xchg
adc
mov
out
pop
leave
loop
pusha
inc
popa
sub
loopne
addr16
jmp
test
ret
pop
fldcw
lret
jo
icebp
adc
push
push
sub
fisttps
outsl
cmp
inc
call
pop
bound
out
dec
xchg
leave
imul
or
mov
in
inc
icebp
inc
cmp
daa
adc
subb
xor
xchg
mov
test
daa
ret
fwait
jp
ss
into
xchg
test
in
es
cmpsb
push
pop
sub
jp
mov
sti
les
int3
xor
xor
mov
fidivs
push
add
ret
pop
jae
jnp
add
sub
sub
sbb
int
fwait
imul
nop
mov
aaa
scas
xor
and
cmpsl
stc
mov
sti
xor
jb
sub
aas
fsub
fs
adc
fs
sub
pusha
cmpb
add
cmp
pop
aaa
lods
ret
jno,pn
out
lods
cmp
jge
fnsave
stos
dec
adc
jle
dec
xchg
cli
mov
inc
cmpl
ds
push
fwait
popf
and
ja
mov
aad
es
rcrb
push
mov
sbb
rclb
jmp
test
cmp
mov
mov
jle
shll
or
jbe
pop
cmc
sub
ds
adc
or
ss
arpl
sbb
mov
inc
movsl
mov
xchg
cmp
dec
xchg
cmp
stc
inc
fidivrl
pop
cld
pop
loop
cmp
ljmp
sahf
in
and
dec
lods
mov
jns
data16
and
xchg
sbb
add
negl
hlt
dec
fcompl
jl
xchg
sarl
ret
xchg
xchg
ds
in
sbb
fisttps
std
loopne
fbstp
fisubrs
in
dec
inc
xchg
inc
ds
jp
mov
rol
and
sbb
popa
dec
xor
outsb
repz
or
push
cmp
scas
mov
xchg
iret
mov
or
loope,pt
movsb
test
ds
mov
sub
cmpsl
mov
idivb
lds
ds
inc
xsaves
mov
sub
dec
int3
ds
inc
into
pop
clc
dec
cld
add
mov
ds
addr16
fs
push
shl
pusha
adc
ds
ds
jp
jmp
dec
add
loopne
call
stc
or
cmp
jle
iret
lods
pop
rcll
clc
and
cld
cmp
stos
inc
mov
std
sub
mov
movsl
stos
cltd
test
ds
inc
xchg
lods
daa
jle
das
cmp
int3
rcr
sbb
lods
mov
stos
mov
cs
iret
mov
cmp
loopne
pop
sbb
mov
pop
iret
jp
inc
out
xchg
adc
iret
add
inc
xor
les
jp
cld
fstpl
mov
dec
scas
add
dec
sbb
test
and
sahf
scas
or
jmp
jge
fnsave
cltd
dec
cmp
aas
xchg
ds
cmp
xor
pop
out
xor
mov
lcall
mov
lret
rcrb
dec
xchg
loop
mov
leave
inc
xchg
or
adc
cmpsb
push
stos
and
test
xchg
mov
inc
jg
xor
sub
jmp
cmpsb
mov
stos
enter
push
flds
add
lods
out
add
cbtw
sbb
ja
mov
repz
push
inc
xchg
add
cmp
sbb
imul
sbb
push
das
pusha
mov
ret
mov
and
ss
mov
insl
out
sub
push
das
adc
in
imul
and
arpl
and
sbb
inc
xchg
or
lods
cmc
divb
pop
das
testl
sbb
outsl
add
mov
faddl
mov
xor
push
out
push
pop
lcall
aas
adc
bound
add
aad
sbb
imul
adc
mov
push
mov
xchg
pop
out
xlat
dec
lcall
push
adc
pop
es
rorl
ds
rcrb
xor
test
bnd
ds
pop
std
jp
inc
cltd
inc
ds
rcrl
roll
mov
js
aad
dec
mov
lret
shll
inc
cs
jbe
sub
xchg
jle
in
mov
pop
mov
xor
dec
sti
add
insl
cli
out
add
ds
and
jmp
mov
outsb
jne
pop
addl
or
popa
out
js
in
mov
ds
xor
fwait
leave
cltd
sarl
mov
mov
loopne
lock
mov
aam
jle
add
sub
loop
xchg
jg
jnp
dec
fisubrl
lahf
mov
aaa
pop
ds
mov
arpl
sbb
ljmp
mov
stos
aas
cmc
mov
xchg
mov
leave
inc
pop
push
mov
movsl
jmp
mov
shlb
imul
push
jecxz
fcoml
jmp
fucompp
out
repnz
es
outsl
inc
cwtl
pop
dec
pop
adc
mov
fistpll
sbb
jp
out
push
arpl
inc
loope
aaa
inc
pop
cmp
push
push
bound
inc
push
cmpsb
push
or
in
or
daa
xor
imul
push
in
push
rclb
addb
mov
addr16
orb
jns
lret
icebp
adc
mov
aaa
cmp
cmp
xchg
stos
push
daa
jge
adc
xlat
sbb
lock
ljmp
fstl
fnstcw
addb
scas
sub
out
mov
out
push
outsl
cmp
mov
and
sti
scas
cmp
and
in
dec
addr16
xchg
insl
sub
dec
push
sub
scas
fwait
mov
icebp
pop
mov
arpl
inc
fwait
rorb
cmp
cmp
bound
fnsave
lret
mov
mov
filds
push
cmp
cwtl
jb
in
call
orb
jbe
pop
call
out
sub
push
jno
xchg
dec
lock
mov
cmpsl
sub
stos
into
and
shrb
mov
mov
cmp
inc
jns
jbe
and
push
fistl
pop
rcrb
idivb
out
mov
push
test
fnop
jg
push
cs
decb
dec
adc
scas
jo
push
xor
dec
mov
mov
inc
fs
pop
mov
notl
cmp
mov
movsl
push
scas
xor
fstpl
fistl
or
pushf
adc
xchg
push
test
push
sub
mov
rcr
and
mov
jb
mov
insb
xchg
mov
call
lds
dec
sub
into
test
ror
scas
dec
je
test
std
jle
cmp
pop
fsub
lret
scas
lods
mov
enter
sbb
fldl
cs
adc
push
cmove
and
out
pop
in
ljmp
inc
or
xchg
insl
mov
push
out
test
mov
dec
out
loop
jecxz
push
repnz
rorb
mov
sub
inc
mov
iret
mov
fcoml
js
xlat
dec
xor
push
push
aaa
je
mov
inc
mov
aad
je
mov
sbb
sbb
adc
fcmovb
push
dec
adc
imul
lea
push
aas
xlat
addr16
cmpsl
push
add
scas
in
aam
fldcw
in
jge
and
push
push
imul
add
les
mov
jle
xor
mov
pop
stos
xchg
push
fldln2
dec
add
cmp
xchg
mov
int
add
int
sub
aaa
fsts
scas
mov
cmpb
xor
push
shrb
rorb
mov
xor
test
rcrb
or
les
and
mov
mov
loop
mov
pop
andl
push
lods
adc
fisubrs
outsb
data16
inc
pop
fldl
xchg
adc
mov
sub
jns
loop
mov
push
mov
bound
sbb
adc
jmp
push
xor
mov
popa
loop
push
lret
inc
insb
sub
mov
and
mov
lcall
mov
cmp
mov
cmp
xor
cmpsl
imul
mov
aad
pop
mov
test
inc
test
sub
xor
movsl
or
xor
mov
sbb
sbb
jl
push
lods
cmp
fisttpl
xor
leave
aam
cwtl
cs
arpl
sbb
outsl
mov
dec
cmp
pop
mov
test
movsl
and
bound
jp
push
mov
fstl
jp
dec
add
pop
jnp
imul
jp
cli
mov
icebp
int
push
ss
addl
lret
arpl
and
call
pop
and
mov
xor
mov
rcll
push
stc
xor
gs
add
pop
push
lret
and
idivl
push
xor
push
sbb
loopne
mov
das
cld
movsl
jne
push
push
jmp
jg
mov
stos
and
ss
fstl
jl
loopne
mov
lea
movsb
inc
cmp
and
popf
rcrb
scas
lds
cld
fstpl
add
xchg
xchg
mov
insl
mov
cmp
mov
mov
std
jle
mov
aaa
sbb
sub
sar
or
mov
lods
inc
int3
jbe
test
dec
stos
movsb
xchg
jl
fcomip
loop
test
shrl
sbb
push
xor
cmp
pop
fabs
movb
and
adc
mov
outsl
and
sbbb
sti
mov
loop
mov
lret
stos
mov
add
cmp
inc
sbb
aaa
loopne
in
loopne
decb
ret
sbb
pop
xlat
arpl
xor
loope
scas
sub
mov
loope
add
aaa
addr16
jle
cmp
dec
aas
inc
mov
mov
rorl
cmp
mov
outsb
cmp
adc
arpl
outsl
cmpsl
and
sahf
mov
mov
aas
scas
jp
rorl
ss
push
mov
mov
loope
cs
xor
cmp
jbe
adc
mov
shlb
cwtl
mov
or
pop
mov
dec
cmp
and
push
bound
dec
data16
pop
cmp
inc
ja
lds
ss
nop
ret
fs
mov
push
mov
mov
sbb
pop
add
jmp
lret
ss
roll
out
call
adc
cmp
cli
pop
xchg
mov
jp
and
jns
in
or
les
lds
or
add
jl
and
push
push
push
jmp
push
and
es
xchg
push
xchg
add
pop
lahf
ljmp
mov
fiadds
jl
lods
xor
sub
pushl
adc
cmpsl
in
sub
sbb
mov
mov
fstpt
adc
mov
cmp
mov
mov
inc
cmp
xor
push
xchg
pop
int
pop
fwait
mov
sub
test
cwtl
mov
jp
ret
jl
sbb
in
iret
push
mov
jb
js
into
lods
push
testl
lahf
fisubrs
dec
sti
test
sbb
cmp
jp
ret
dec
cli
es
cmp
xchg
test
jp
ret
in
lahf
cmp
inc
shll
pop
cld
mov
and
pop
dec
pop
xchg
pop
mov
out
push
push
fs
jg
lahf
or
inc
xor
mov
or
ss
sub
jl
sbb
decb
lret
dec
xor
cmp
sbb
cmp
xor
add
aas
out
pop
in
fistpll
add
inc
cmpsb
mov
and
enter
aad
sub
imul
pop
mov
mov
xor
pop
mov
dec
into
mov
iret
cs
cs
test
aas
sub
lret
in
sub
mov
xor
pusha
jmp
jmp
sub
mov
jp
inc
pop
jmp
fmulp
push
lds
add
adc
mov
jp
inc
pop
out
shll
add
sbb
scas
mov
sbb
pop
mov
adc
xor
xor
pop
push
ljmp
jecxz
shr
insl
outsb
dec
addr16
pop
add
pop
lcall
cli
sbb
mov
jnp
fimuls
outsl
inc
imul
das
and
outsb
push
gs
rcll
fdivrs
std
pusha
and
inc
les
inc
fcoms
pop
int
pop
pop
pop
dec
stos
add
xor
mov
xchg
cmp
and
ds
mov
enter
inc
aas
push
mov
pop
jl
and
cmp
cltd
gs
adcl
jg
in
cmp
push
jo
xchg
xchg
insb
jnp
fisttpll
popf
fimuls
adc
cmp
in
mov
sub
sbb
jns
imul
mov
pop
pop
dec
inc
mov
cmp
stc
ss
aas
sub
mov
in
xor
ja
subb
pop
add
xchg
jno
sbb
int
sar
cmp
and
scas
cli
mov
dec
mov
cmp
icebp
add
outsb
stos
dec
inc
scas
jbe
outsl
lods
and
lcall
sub
dec
mov
pop
mov
cld
fstpl
lahf
scas
scas
je
sub
repz
aas
cmp
xor
inc
aas
stc
jecxz
sbb
adc
push
cmp
inc
das
lods
jmp
rcr
dec
lods
pop
es
scas
xor
jbe
dec
adc
loope
xlat
ret
inc
jo
pop
lock
xchg
pop
push
imul
es
inc
enter
loop
adc
es
and
popa
in
xlat
cs
pop
xchg
jbe
lods
outsl
xchg
and
ss
es
mov
push
vmread
loop
ljmp
fwait
lret
out
pop
in
xchg
xor
jge
leave
dec
ss
xor
ret
mov
movsl
pop
pop
aas
sub
test
cmp
lock
test
fstpl
xlat
xor
jge
xchg
cmp
inc
aas
cmc
popf
fistps
xchg
cwtl
adc
cmc
cmp
dec
xchg
add
push
jb
ss
ljmp
lahf
icebp
cli
sbb
adc
stos
mov
xor
cmp
les
cwtl
adc
out
adc
cwtl
or
xchg
aaa
clc
addr16
jp
rorl
jp
outsb
jg
mov
iret
ficomps
popa
inc
and
cmp
cmp
mov
xorl
xchg
notb
xor
push
push
adc
mov
mov
in
cmp
mov
and
test
inc
dec
cmp
cld
fstpl
or
inc
stos
stc
mov
inc
es
cmp
insb
xchg
sbb
int
sbb
cwtl
push
lock
ja
mov
mov
mov
and
ds
cmp
dec
mov
push
jl
outsl
lea
and
aad
clc
test
push
sti
mov
les
data16
inc
and
in
jp
mov
insb
jb
cli
outsl
daa
das
ss
jmp
arpl
push
xchg
or
sahf
mov
out
cmp
adc
inc
ds
push
xlat
loopne
pop
push
xor
rcll
movsl
fldt
cs
aaa
pop
mov
shll
xor
movsl
cs
call
aad
pop
push
sbb
jns
jo
outsb
fdivrs
mov
mov
xor
test
sub
cs
push
jo
loope
jecxz
das
sbb
inc
jg
mov
mov
lcall
sub
out
rolb
push
mov
cmp
xor
mov
aaa
pusha
cli
mov
movsl
cmp
dec
popf
push
daa
sbb
mov
mov
mov
push
pusha
out
outsl
in
loop
cmp
cmp
xchg
xchg
mov
push
adc
pop
push
add
mov
into
imul
ret
or
int
xor
test
mov
mov
loope
mov
addr16
pop
adc
scas
scas
scas
test
inc
ss
je
insb
mov
xor
scas
rorl
mov
scas
scas
jae
xor
repnz
push
lahf
mov
jb
sub
cmp
ss
cltd
iret
mov
jle
rolb
stc
insl
clc
or
mov
jge
es
pop
sub
ss
sahf
es
cmp
scas
divl
inc
dec
mov
les
ja
aaa
mov
push
xor
mov
dec
xor
jbe
mov
mov
cmp
subb
cmc
icebp
mov
stc
stos
inc
sbb
mov
loop
sub
xor
jne,pt
mov
xorb
daa
jns
adc
lahf
mov
lods
test
pop
lret
jbe
cmp
jmp
inc
aaa
mov
adc
xor
inc
or
xor
orb
into
pop
jnp
mov
popa
mov
bound
add
daa
pop
rcrb
mov
push
daa
dec
mov
aaa
cwtl
sub
fucomi
ljmp
and
in
sbb
sub
cmp
daa
mov
setbe
inc
mov
insb
loope
fistl
rclb
push
movsl
pop
jmp
xchg
mov
daa
cmp
pop
imul
adc
jbe
jp
xor
xchg
das
int
imul
std
sub
mov
xchg
jbe
daa
stos
sbbb
cmp
push
test
sbb
push
inc
and
jo
and
incb
pop
mov
jmp
fwait
ret
fwait
movsl
mov
lret
imul
pop
aas
jmp
rcrl
adc
mov
mov
sbb
add
push
es
push
adc
xchg
mov
inc
outsl
pop
jo
cld
stc
inc
int
and
push
pop
aad
push
arpl
scas
rcrl
les
xchg
sub
sub
inc
jbe
pop
sub
dec
mov
pushl
push
cmp
out
and
dec
pop
inc
push
and
jo
xor
inc
cmpsb
adc
imul
jecxz
inc
lea
dec
sub
icebp
push
dec
sbb
jb
dec
jge
jne
mov
push
scas
jae
je
scas
divb
dec
pop
jge
mov
cmp
push
lcall
inc
stc
scas
jg
mov
mov
cmp
lahf
mov
mov
leave
std
xor
test
pop
push
shrb
push
cmp
cltd
pushf
fists
std
pop
lcall
mov
mov
loopne
shlb
dec
scas
sti
jns
jmp
mov
sahf
es
push
pop
ss
cmpb
out
add
loop
pop
sub
jne
pop
pusha
cltd
into
pop
and
ja
pusha
stos
das
adc
cmpb
inc
fcoms
in
and
and
adc
loop
push
jecxz
scas
mov
sub
add
and
scas
je
cmp
into
xorl
or
in
aaa
xchg
cltd
and
xchg
mov
nop
int
xor
dec
add
sbb
roll
xor
xchg
lret
cmp
cwtl
cltd
and
sahf
sbb
adc
daa
dec
scas
fadd
idiv
xor
push
pop
sub
cmpsb
sbb
xchg
pop
andb
stos
das
cmp
les
push
cmp
fs
daa
adc
sub
mov
mov
cmp
enter
sub
jns
and
test
fstl
addr16
int3
xor
enter
rcll
rcll
gs
pop
fnsave
jns
pop
mov
jmp
push
pmulhuw
ret
cmpsb
dec
mov
adc
push
inc
push
mov
cmp
imul
ds
faddl
cmpsl
pop
or
mov
stos
out
fs
pop
inc
es
dec
jnp
lret
mov
int
shl
daa
cltd
xchg
pop
pushf
inc
xor
test
mov
sbb
out
es
cmp
pop
and
adc
dec
push
test
rorb
lret
pop
mov
pop
cmpsb
push
fldcw
push
jbe
ds
sub
ds
andb
les
filds
jp
push
pop
jg,pt
out
inc
jne
es
jns,pt
ss
cmp
stos
jno
mov
xor
add
rolb
dec
mov
rol
pusha
fistpll
push
mov
mov
push
adc
pop
std
xor
mov
out
nop
xchg
sbb
cmp
paddsw
ds
stos
js
pop
push
mov
add
fists
jg
push
cmp
data16
int3
les
xlat
orps
xchg
mov
sub
cmp
mov
push
mov
pop
imul
add
test
ja
pop
xor
dec
imulb
mov
push
out
rorb
add
ds
loopew
fwait
sbb
mov
push
ss
mov
ds
mov
lahf
mov
dec
lea
xorb
jle
jae
fists
fsubrl
es
imulb
lcall
ret
mov
rorl
mov
mov
dec
fildl
sub
mov
subb
mov
push
jmp
cmpsb
xchg
sti
mov
pop
es
sbb
outsb
and
mov
mov
out
pusha
ds
lods
xchg
loope
aam
jmp
and
dec
mov
push
outsl
ds
repz
in
ds
cld
repnz
loop
fcomps
aaa
push
jno
push
inc
imul
or
sarl
cltd
iret
test
ds
pop
cmp
fistl
jg
mov
mov
pop
sub
fdivrl
das
lds
movsb
dec
aad
andb
push
sbb
jmp
ds
cltd
dec
xor
fucom
in
mov
data16
push
fdiv
push
mov
cmp
mov
push
push
gs
sub
inc
stc
push
icebp
xlat
test
lahf
stos
fisubs
in
inc
lods
adc
sti
adc
push
cmc
test
ja
push
jae
sub
push
mov
mov
add
adc
scas
or
frstor
aaa
push
loop
push
les
inc
popa
mov
das
lret
nop
lahf
mov
out
cmp
ss
fwait
daa
leave
test
mov
mov
orl
es
xor
dec
push
dec
and
or
lcall
sbb
testl
sub
daa
xchg
adc
in
scas
and
cmp
xor
mov
mov
push
iret
and
outsb
mov
cmp
roll
inc
mov
mov
movsl
ret
lahf
and
movsb
inc
mov
push
test
add
les
and
xchg
xor
jmp
cmc
push
jg
imul
enter
ss
imul
mov
aas
xchg
ficompl
in
jae
mov
rorl
stc
icebp
loop
int3
xor
xor
rcr
int
or
int3
jne
cmp
inc
cmp
xchg
sub
lods
mov
sub
xor
pop
sub
loop
mov
in
xor
dec
sub
dec
adc
orl
cmp
inc
jmp
cmp
call
mov
adc
jno
ds
aaa
cmp
outsb
xchg
outsl
xor
mov
inc
or
fdivs
pop
shl
cs
push
fstl
filds
sub
loopne
aad
mov
cli
andl
movsl
xchg
sbb
and
add
and
xchg
lret
jae
jge
sub
mov
stc
pop
pop
jp
xor
rorl
or
orb
dec
lcall
inc
adc
xor
outsl
adc
scas
rorl
ds
mov
inc
aaa
adc
sbb
mov
icebp
xchg
imul
xor
sub
jp
mov
sub
les
js
jns
lds
add
scas
mov
ss
or
cwtl
movhps
push
rcrb
lret
lods
notb
sub
mov
mov
cmp
mov
add
sub
cs
pop
dec
pop
lret
ss
sub
pop
cmpsb
and
mov
jp
daa
adc
xchg
jge
xchg
jne
scas
sub
mov
mov
jg
movups
xchg
les
scas
mov
scas
sub
add
sbb
fidivl
inc
cltd
push
cmp
xchg
mov
leave
inc
ss
out
test
jp
inc
cwtl
arpl
mov
jg
das
mov
stos
add
shll
and
push
push
dec
push
xor
adc
int3
aaa
mov
push
sub
daa
jbe
sub
jg
shl
or
scas
cmp
rol
aaa
int3
mov
cmp
inc
mov
daa
fistpl
je
xlat
dec
mov
out
sbbl
adc
les
outsb
pop
pop
addr16
push
cwtl
mov
dec
lret
pusha
cmp
add
push
xor
fwait
out
mov
adc
outsl
xorl
mov
inc
mov
ret
push
jnp
push
inc
mov
inc
imul
xor
xchg
nopl
je
test
xor
mov
pusha
cmp
inc
mov
pop
mov
sub
ljmp
and
insb
xor
mov
addr16
fdivrl
cmpl
cmp
addr16
pop
cwtl
pop
adc
inc
sub
pop
push
rol
cmpsb
imul
jo
sub
mov
enter
aas
inc
lret
adc
xchg
out
add
cld
xor
fsts
jle
cmp
fildll
out
ss
cs
sub
push
daa
out
mov
sarl
inc
push
les
sarl
push
les
and
fldt
dec
push
jecxz
push
fmull
mov
and
xchg
sub
scas
les
mov
mov
lods
xor
cmp
sbb
clc
sbb
lods
and
in
je
or
inc
out
lock
mov
or
inc
testb
pop
xchg
lock
xchg
cmp
nop
adc
sub
pop
in
es
int3
out
xor
pop
jg
adc
mov
mov
popa
scas
push
mov
mov
ret
cs
cmpsb
jle
mov
xor
cmp
xchg
imul
mov
dec
mov
sub
divb
and
inc
fisttps
outsl
stos
inc
pop
pop
nop
pop
es
sub
cli
mov
fs
aaa
sub
mov
mov
inc
scas
pop
mov
cmp
inc
pop
aad
sub
movl
cltd
xor
into
mov
into
notb
ret
pusha
and
stc
das
cmpsb
cltd
cmp
into
sub
cmpsb
adc
scas
jl
cmp
inc
lcall
cmp
cmp
popf
pop
ss
in
dec
andb
out
sti
xchg
sub
and
mov
inc
stos
mov
subb
jo
ss
jo
cld
into
jbe
outsl
sub
push
ficoml
mov
jg
push
jne
test
sub
jns
sbb
sbbb
scas
jbe
sub
cmpsb
mov
sub
test
and
mov
jbe
daa
cmpsl
push
sub
cmp
mov
cmc
dec
mov
cmp
test
adc
dec
mov
cmp
xor
pop
and
cmpb
cltd
lahf
pop
cmp
les
and
cmpb
sahf
imul
inc
scas
mov
mov
inc
jns
popf
out
mov
lahf
inc
scas
sbb
mov
push
sub
stos
mov
jmp
sub
cmpsl
outsl
pop
dec
inc
mov
inc
adc
sub
push
ds
push
lret
mov
sbb
pop
movsl
and
cmpsb
neg
loope
xor
xchg
rcrb
jbe
jne
inc
pop
sbb
xor
outsl
mov
push
cld
bound
xor
sbb
fstl
scas
sti
hlt
dec
and
mov
dec
lods
lahf
cmp
mov
shl
adc
ud0
insl
out
scas
pushf
test
jne
stos
movsl
add
xor
dec
cltd
mov
das
cld
fstpl
or
xchg
lods
lods
scas
sbb
xlat
jne
stos
sub
mov
mov
cld
fstpl
fwait
or
sub
aad
mov
scas
mov
adc
mov
dec
mov
pop
jge
aas
mov
outsb
stos
jbe
jns
sbb
rorl
addb
jmp
mov
subb
rol
mov
sahf
mov
bound
or
es
and
fstpl
cmp
cmp
mov
and
cmp
cmp
inc
test
fistpll
scas
push
mov
cmp
clc
cmp
xchg
orb
popf
sub
loop
push
cmp
jns
ljmp
insl
push
xlat
add
aam
pop
outsb
aad
out
cmpsb
sub
push
pop
push
and
lahf
scas
cmpsb
and
sbb
sbb
pop
push
cltd
inc
push
adc
aad
pusha
aad
adc
cwtl
stos
adc
stc
pusha
cmp
into
xor
stc
pusha
mov
pop
add
cmp
addb
mov
fdivs
sub
mov
cmp
xchg
adc
xor
and
xchg
pop
inc
sbb
das
stos
pop
pushf
hlt
out
andl
daa
sbb
es
mov
push
ljmp
pop
sbb
mov
fwait
or
xchg
mov
icebp
mov
es
shl
std
loop
xchg
je
stos
jp
shlb
ret
icebp
scas
movsl
adc
dec
int
cmp
xor
cmp
stos
lods
pop
mov
leave
ret
insl
dec
leave
mov
aad
stos
bound
sub
jns
sub
out
aad
jne
jbe
stos
push
sbb
sub
pop
sarl
sub
sub
std
scas
aas
aad
pop
idivb
std
sarb
sbb
xor
scas
mov
scas
std
outsl
mov
adc
std
push
scas
push
aaa
inc
sti
and
icebp
and
cs
std
and
clc
push
lea
adc
fldenv
jo
lods
cmp
movsb
mov
mov
mov
and
scas
mov
mov
cwtl
loopne
cmp
add
xor
adc
sub
mov
mov
and
or
ret
cmp
add
mov
mov
adc
movsl
scas
cmp
inc
shrb
aaa
mov
cwtl
ss
sub
pop
cmpsl
jp
add
mov
inc
daa
js
push
xchg
sbb
out
test
inc
mov
inc
jmp
iret
adcb
add
addb
and
cltd
fs
mov
mov
jle
shl
mov
adc
add
inc
cld
fstl
jne
stos
mov
dec
cltd
push
cmp
cmp
inc
cld
fstpl
and
lahf
in
xor
mov
cmpb
stos
sbb
test
scas
loope
pop
adc
jae
popf
and
insb
jge
das
inc
das
aaa
cmp
jbe
outsl
xor
fidivl
int
test
mov
aad
aaa
cmp
das
pop
mov
xchg
adc
roll
out
test
daa
insl
cmp
dec
inc
push
cmp
mov
loope
pushf
insl
aaa
xchg
cmp
sbb
int
scas
sbb
jp
mov
xlat
fiaddl
loopne
shrb
xor
pop
mov
mov
ss
cwtl
ret
popf
push
pop
inc
loope
mov
and
insl
adc
scas
mov
lea
mov
sub
ja
fimuls
xlat
add
mov
mov
stos
inc
lods
lods
cmp
out
test
fdivs
xor
arpl
xchg
pop
xor
xor
mov
push
inc
loopne
push
fistpll
push
lahf
cli
pop
xchg
nop
cmp
dec
mov
out
fwait
dec
mov
push
and
dec
stos
inc
push
push
push
pop
fnstsw
out
mov
ds
jg
or
push
inc
ds
mov
out
cmpsl
aam
repz
inc
jbe
sbb
outsb
or
push
idivb
pusha
cmp
aaa
inc
movsb
cmp
scas
lods
xchg
sbb
mov
imul
push
xor
pop
inc
imul
pop
mov
ret
mov
nop
cmpsb
or
shll
add
push
in
pushf
xor
aas
outsb
into
mov
cmp
add
and
jl
mov
cmpsl
or
cmp
jle
inc
mov
cmp
sub
aas
sti
add
mov
cmp
ss
stc
mov
imul
sbb
or
jle
adc
push
or
cmpsl
xchg
push
lahf
xchg
dec
xchg
mov
mov
and
and
cmp
outsb
mov
lods
mov
or
jb
inc
cmp
mov
pop
mov
sub
and
xchg
push
nop
sbb
push
cwtl
cmp
sub
lods
cmp
pop
lea
inc
mov
jle
daa
rcr
orb
xchg
shlb
mov
adc
cmp
dec
mov
jo
loop
dec
dec
cmp
add
mov
pop
jge
jbe
in
mov
aam
mov
popf
movb
subl
fcmovu
ss
add
mov
cmp
mov
aaa
cmpsb
outsb
sahf
xchg
mov
daa
cmp
ret
ds
pop
scas
xor
cmpsl
sub
jg
lahf
ds
into
xchg
sub
negl
adc
ds
cwtl
dec
nop
inc
out
ds
mov
sbb
ds
pusha
pop
push
dec
lock
enter
jns
jno
popa
pop
push
dec
inc
mov
cmp
leave
shll
js
jns
test
push
scas
cmpsb
aaa
inc
push
xchg
mov
cmp
jg
fidivrs
bswap
pop
pushl
pop
mov
mov
jbe
mov
push
add
out
mov
aas
cwtl
and
nop
dec
jno
cld
jg
test
mov
and
loop
ds
pushf
xchg
mov
mov
std
outsl
push
jp
dec
push
push
ds
rorl
ret
sahf
icebp
fs
lods
push
popf
pop
call
mov
test
fmull
pop
push
mov
inc
mov
les
xor
mov
and
gs
pop
lret
movsb
sarl
or
adc
xor
cmc
push
jle
xchg
inc
out
pop
fnstsw
lods
test
cmpsl
ljmp
and
add
test
scas
loop
gs
xor
dec
xor
roll
ds
subb
lret
lods
xor
sahf
push
dec
xchg
aam
or
ds
test
loope
into
movl
jno
xchg
lock
inc
mov
adc
test
dec
mov
xor
xchg
cmpsl
js
push
inc
cmc
ds
loopne
push
mov
ss
and
std
fwait
ds
stc
ret
fdivrl
addb
xlat
xchg
mov
xor
adc
dec
mov
int3
ds
xchg
inc
adc
movsb
popf
imul
inc
ds
lret
mov
enter
mov
pop
test
rcrb
push
jl
imull
lcall
int
shl
dec
jp
sbb
pop
fstpl
xchg
lret
fisttpl
movsb
stc
pop
mov
nop
jb
and
jecxz
push
ds
bound
rcll
cmpsb
loopne
xor
lods
stos
in
addr16
out
push
sub
ds
fidivrl
icebp
movsb
inc
in
ret
notb
test
movd
and
lret
add
roll
dec
adc
rep
sub
fistpll
shl
pop
jb
les
mov
addr16
sub
and
sub
pop
arpl
push
and
jmp
push
xchg
push
dec
adc
rolb
mov
ds
mov
popf
lret
jmp
fiadds
add
xchg
xlat
xor
cs
mov
push
mov
xchg
mov
inc
pushf
sbb
std
jmp
in
mov
cs
adc
enter
test
roll
les
out
push
movb
mov
repnz
xchg
movsb
add
pusha
adc
fnstenv
shll
jecxz
mov
jp
movsb
sub
add
jo
inc
xchg
enter
adc
mov
mov
adc
mov
loope
xlat
mov
jmp
rcll
ja
lds
out
add
test
cmp
enter
sbb
movsl
in
loop
gs
in
insl
jns
mov
lret
and
push
call
dec
icebp
mov
dec
fsts
roll
mov
cmpsb
insl
lret
mov
aad
pop
jmp
pop
xor
ds
dec
inc
repnz
inc
and
or
jmp
mov
divl
and
and
xlat
ds
arpl
ds
mov
adc
or
jge
add
xchg
ds
sbb
mov
cltd
add
loopne
bound
test
bnd
cmpsb
enter
in
fldt
int
repz
enter
jecxz
cld
push
sub
hlt
mov
int3
xchg
mov
fistps
ds
jmp
dec
aam
xchg
mov
ret
mov
xlat
and
in
fisttpll
fmull
pop
icebp
inc
insl
ds
sub
fstl
mov
rorl
mov
cmp
jg,pt
addr16
jge
int3
ds
lods
cmp
push
xchg
movsb
loope
imul
cltd
add
inc
push
sbb
ds
js
out
jbe
pop
ds
add
std
xor
fsub
sub
push
pop
inc
fnstcw
pop
sarl
xchg
or
lret
inc
test
jecxz
cmpsb
pop
ds
in
arpl
cmovg
mov
push
pop
sub
mov
sub
adc
cld
mov
add
dec
push
ds
shl
push
fbld
mov
shrl
xorb
xchg
and
jne,pt
stc
xor
ds
lds
hlt
ds
mov
and
call
hlt
add
adc
cmp
sbb
in
pop
movsb
sahf
xor
xchg
test
popa
and
js
mov
mov
push
cs
popf
lret
or
icebp
lea
test
pop
cmpb
rorl
inc
lds
add
mov
xor
xor
cmpsb
or
mov
pop
lea
xchg
adc
xor
sahf
inc
jge
cwtl
push
pop
daa
add
ds
ds
add
rcll
das
mov
inc
xchg
and
and
mov
pop
push
outsb
pop
lcall
mov
out
add
mov
mov
ret
sbb
and
js
and
xchg
sbbl
aad
cmc
push
les
mov
inc
and
hlt
std
dec
sub
mov
and
pop
adc
push
int3
jge
or
add
xor
jl
iret
pusha
ds
out
nop
ds
pop
insb
push
repnz
mov
push
sarl
repz
mov
adc
mov
in
xchg
dec
call
xlat
mov
rclb
je
sbb
jb
js
sarb
outsl
cmp
out
cmpsl
pop
or
lods
pop
pop
fadds
xor
xchg
add
in
ja
aad
push
jne
ds
shll
mov
int
mov
fs
cs
xchg
mov
xor
je
xor
icebp
outsb
push
xchg
xlat
pop
mov
out
clc
push
insb
mov
in
xor
and
popa
popf
or
leave
or
mov
int
movsb
mov
adc
aam
lds
mov
push
xor
or
lods
or
ds
orb
lcall
lods
cli
shlb
add
push
shll
and
jle
les
mov
adc
ds
arpl
jbe
sub
xchg
mov
mov
push
imul
inc
out
repz
test
call
jo
sahf
mov
inc
out
add
mov
jno
cwtl
popf
ret
push
xchg
push
mov
ds
fimuls
xchg
dec
test
jno
cmc
mov
rcrl
mov
sub
dec
sub
ds
xlat
data16
cmpsb
inc
es
daa
repnz
and
jns
out
std
subl
ja
bound
hlt
frstor
inc
ret
ds
pop
xlat
hlt
div
sarl
mov
xchg
cmp
cmp
sub
xor
jmp
test
mov
daa
dec
and
movsl
mov
pop
out
filds
test
pop
cmc
subl
cmpsb
push
mov
cwtl
push
clc
push
ds
adc
mov
fs
addr16
dec
cs
push
push
ds
jae
dec
dec
idivb
cmpsl
cs
test
push
push
inc
movsb
ds
sbb
fucomp
dec
dec
outsl
ds
popa
scas
cs
ss
ds
in
in
mov
enter
les
mov
mov
pop
inc
inc
mov
les
notl
dec
lods
adc
inc
mov
jae
rolb
ds
lahf
jp
mov
repz
mov
xchg
mov
pop
inc
jnp
jl
flds
inc
lods
fnstcw
and
push
es
add
mov
imul
mov
mov
xor
jmp
ds
mov
cmpsb
sub
loop
xor
dec
test
sbb
pop
fidivs
add
out
xor
add
shrb
in
scas
pop
lock
dec
xchg
ds
cmc
pop
pushw
or
inc
sarl
dec
adc
fwait
aaa
arpl
xor
lock
sarb
xchg
jmp
test
xchg
daa
fdivrp
sahf
jle
adc
ds
mov
push
popa
test
outsb
mov
xor
adc
and
sub
mov
sub
mov
dec
stc
mov
push
push
out
pop
outsb
fildll
test
ds
es
bswap
or
lock
mov
gs
fsts
push
inc
mov
leave
outsb
mov
jge
adc
in
jno
cmp
mov
cmc
mov
lock
jnp
out
repz
es
adc
sbb
mov
repnz
xchg
fst
inc
movsl
nop
adc
sub
ret
dec
dec
add
add
mov
xor
dec
mov
sbb
push
lods
call
xchg
mov
jl
ljmp
or
icebp
xlat
lods
xchg
sti
nop
aam
inc
and
pop
or
insb
mov
int3
xor
test
mov
notl
in
pop
push
pop
push
fstp
xchg
push
xlat
add
jnp
cmp
aad
ja
or
ds
rcl
push
insb
cmp
mov
mov
cltd
push
popf
ficoms
lock
fnstenv
sbb
icebp
gs
fidivrs
inc
aad
cltd
addr16
mov
xor
push
fistl
sub
leave
dec
test
aam
lahf
mov
mov
add
add
adc
fisubrl
xor
push
add
mov
push
inc
popf
pushf
dec
rolb
or
rorl
shlb
cmp
ds
sub
xlat
mov
cmp
ret
out
je
fsub
pusha
movb
ljmp
pushf
xchg
test
lea
pop
mov
pushf
pop
les
aad
dec
neg
jne
repnz
fmul
jae
ja
ds
nop
andb
ds
pop
sub
mov
jle
aaa
pushf
jb
sarb
nop
xor
sub
cmp
adc
xchg
loopne
push
mov
popa
loop
test
out
enter
add
shlb
fsubrl
ret
pop
daa
ds
sbbb
fidivs
adc
or
push
push
aad
and
mov
mov
push
mov
inc
pop
adc
pop
jle
out
testl
pop
push
or
movsb
pop
jmp
aam
std
xlat
mov
and
outsl
cwtl
mov
sub
fnstcw
test
daa
push
mov
inc
mov
aad
in
xchg
xor
data16
cmpl
mov
int3
les
xchg
xchg
jb
daa
fisttpl
push
dec
imul
ds
jge
leave
sbb
push
out
xchg
or
in
and
xorl
pop
shr
rcrl
cltd
aas
jno
mov
outsl
jne
push
inc
adc
xor
js
mov
add
mov
mov
ds
sar
xor
adc
fildll
add
stc
jne
adc
test
loop
bound
jg
xor
ds
test
hlt
inc
iret
sbb
in
repnz
jo
or
cmc
ljmp
mov
int3
xchg
push
inc
lea
pop
out
aaa
lds
fbstp
xor
push
dec
xchg
ret
fldlg2
push
mov
sub
mov
pop
outsb
or
mov
inc
enter
sub
cmc
aaa
mov
fnsave
jecxz
dec
movsb
push
mov
lret
lea
cmp
mov
xchg
mov
jno
mov
mov
dec
push
dec
dec
lods
mov
jle
daa
cmp
mov
xor
rcll
jle
dec
mov
je
cmp
mov
mov
aaa
fdivrs
daa
imul
loop,pn
into
aad
sbb
sarl
pushf
loope
jge
mov
mov
push
inc
pop
lret
ds
jb
sarl
jae,pt
adc
and
pop
jo
or
int
data16
fs
stos
mov
lret
shlb
pop
fildll
sub
ds
repnz
hlt
mov
lret
movsb
mov
ds
cld
divl
cmpsb
mov
xchg
jb
iretw
lods
push
loope
push
sub
rorl
add
aad
imul
sub
xor
or
cld
test
cltd
ds
lds
outsl
and
stos
jecxz
mov
jnp
push
cmpsb
and
call
lret
pop
in
test
xchg
lret
push
jecxz
enter
mov
insl
cli
pop
test
mov
imul
push
jge
icebp
adc
shrb
sbb
js
adcl
jne
cmc
ds
push
cmpsb
sub
loope
ds
in
in
and
rclb
ret
in
jo
rcrl
dec
push
rcrb
cmc
xchg
dec
mov
jge
fadds
in
movsl
pop
pop
xchg
test
mov
mov
xor
test
cmp
mov
ds
in
clc
inc
pop
mov
mov
jecxz
ret
mov
imul
push
push
mov
ds
in
xchg
mov
lods
jle
adc
sbb
inc
data16
cmp
inc
imul
rcll
cmpsb
aam
jae,pt
sbb
sub
mov
vmread
fisttpl
dec
lock
ds
push
dec
shl
test
mov
scas
pop
pop
xlat
gs
cmpsb
mov
dec
insl
sub
insl
les
mov
mov
movsb
xchg
lcall
imul
out
test
sub
lret
inc
leave
test
xor
adc
mov
test
xchg
ds
je
mov
aad
pop
push
pop
fdivrp
bnd
ss
ds
pop
push
lods
ds
shlb
les
ds
xchg
sbbb
fs
xor
lods
dec
lahf
mov
inc
adc
mov
filds
in
mov
hlt
clc
ds
imul
mov
cmp
sub
push
aam
jge
lods
jle
enter
xor
les
mov
mov
je
mov
push
call
imul
arpl
repz
lret
sbb
sbbl
adc
fidivrs
inc
xor
ds
pop
lods
xchg
mov
arpl
insl
jmp
add
adc
outsb
cmp
xchg
lea
mov
fnstcw
lods
test
std
int3
fnstsw
int
repnz
pop
mov
scas
mov
pop
add
and
pop
xchg
scas
fisubrs
adcl
fstpt
sbb
adc
mov
out
imul
mov
in
mov
test
data16
sub
sbb
out
mov
push
dec
cmp
jns
es
popf
mov
dec
fcomp
xchg
test
fsub
sbb
ds
xor
add
sbb
pop
fsts
es
pop
cmp
ds
xrelease
imul
mov
mov
mov
and
out
lods
mov
out
ds
fidivrl
xchg
pop
sbb
fs
xor
jns
lret
cmpsl
xchg
xor
faddp
adc
rorb
movsb
sbb
or
pop
pop
and
mov
fsubr
push
repz
push
adc
mov
shll
ret
mov
mov
or
fidivs
fldenv
xlat
inc
lret
inc
jmp
stc
mov
lcall
addr16
insb
sub
jo
mov
xchg
adc
cltd
dec
sbb
dec
add
pop
out
sarl
js
sbb
xchg
ds
lods
mov
mov
in
xchg
leave
lahf
fisubrl
movsb
xchg
cmp
and
outsb
xor
int3
stc
mov
mov
fisubrs
imul
ds
xchg
mov
push
mov
lods
push
fwait
in
jbe
hlt
dec
fnstcw
outsl
cmc
add
test
aad
push
cld
gs
lret
ds
inc
rcrl
fisubs
and
dec
push
clc
loop
pop
insl
jl
inc
lret
and
bound
and
add
mov
ds
adc
jmp
xor
xchg
cs
lds
arpl
adc
in
fcom
test
sbb
mov
inc
jge
inc
cmpsb
xor
into
lahf
pushf
mov
mov
lds
inc
xchg
rcr
dec
dec
hlt
cmp
inc
adc
mov
push
xor
data16
out
push
les
and
fstpt
lcall
leave
std
push
add
mov
pop
mov
jmp
cmp
cmp
dec
and
shrb
cmpsb
repnz
push
leave
mov
jecxz
xchg
add
sti
push
jne
in
lods
jp
or
jmp
fcoml
ds
push
sub
outsl
dec
cltd
ds
xlat
in
jmp
or
adc
das
inc
adc
adc
es
mov
mov
int3
inc
adc
std
jmp
inc
mov
push
daa
sub
lret
mov
cmp
popa
inc
into
fdivrl
mov
jmp
int3
dec
xrelease
jge
js
popf
and
add
pop
mov
inc
cmc
xchg
lret
ror
push
rorl
jb
movsb
outsb
jp
adc
ds
scas
roll
leave
les
sti
ds
mov
in
shlb
arpl
es
popf
xchg
addr16
test
popf
xor
les
ret
ds
cmp
xor
iret
insb
sbb
pop
in
mov
sbb
loop
outsb
sbb
mov
movsb
test
pusha
sbb
shrb
popf
jl
xchg
aam
and
and
hlt
push
xor
pop
adc
arpl
mov
lret
aaa
out
int
cltd
fwait
dec
add
cli
lods
insb
adc
dec
xor
scas
sub
mov
mov
bound
adc
in
mov
test
ds
dec
loope
fdivrl
cltd
sub
filds
push
sbb
shrl
jle
fmul
in
mov
sbb
insb
call
mov
jb
cli
nop
pop
in
fcomps
fisubrl
cmp
adc
jle
xchg
cmp
pop
adc
fwait
xchg
outsl
movsb
xor
inc
rol
enter
xor
mov
cmpsl
ja
jge
mov
in
iret
mov
loopne
mov
dec
push
xor
imul
into
or
ds
test
inc
lods
adc
xor
repz
inc
jmp
mov
inc
mov
jle
fucomi
ds
inc
jmp
push
adc
xchg
inc
ret
rcr
sti
outsl
add
pushf
out
xchg
movsl
inc
int
es
add
sbb
mov
stc
mov
insl
xchg
ljmp
lahf
mov
jecxz
mov
movb
mov
xor
jno
ds
dec
or
test
mov
fwait
sub
push
aad
es
mov
into
xchg
cld
mov
mov
enter
inc
je
lea
inc
sarl
inc
test
dec
jbe
jmp
add
inc
and
mov
enter
ljmp
roll
pop
add
and
mov
xor
popf
mov
xchg
jbe
add
jmp
xor
clc
xor
ret
stos
sti
ss
mov
lods
jno
sbb
pop
in
adc
jl
cs
mov
ret
mov
fcom
lock
int
mov
push
dec
mov
mov
stc
push
dec
into
ret
xchg
cli
les
stos
sbb
repz
push
cmpsl
push
mov
push
leave
aam
xchg
pop
add
les
push
scas
dec
jecxz
pop
lret
je,pt
mov
outsb
data16
int3
aas
push
jecxz
movsb
dec
jmp
mov
push
fldt
popf
ret
pop
mov
xor
outsb
rcr
mov
inc
not
ds
repnz
insl
sbb
cmpsb
xor
lds
xlat
inc
ds
sahf
repz
iret
pushf
or
sbb
mov
loope
xor
or
ljmp
dec
out
add
test
popa
mov
shll
adc
add
scas
fcom
aas
mov
roll
sub
ljmp
movsl
shr
mov
sbb
jecxz
push
or
int3
sarb
enter
dec
icebp
cwtl
popf
push
jns
ret
inc
jb
or
push
popf
mov
int3
fldl
gs
in
sub
and
loopne
adc
test
dec
and
xor
push
jns
push
mov
sar
out
ret
out
jmp
aad
add
lret
ret
push
dec
and
in
in
inc
xbegin
add
out
sbb
arpl
in
jmp
lea
lods
xor
and
int
jle
fucomp
mov
sbb
pop
clc
andw
sub
es
lcall
ss
lods
push
xor
cltd
int3
lods
push
dec
fidivrl
cli
and
cmp
stc
cmp
mov
sub
mov
and
mov
jbe
sub
mov
or
movsl
xchg
pop
test
mov
aaa
ss
bnd
daa
jo
adc
lods
mov
push
add
nop
mov
sub
pop
dec
adc
sti
add
dec
aas
pop
push
inc
lahf
xor
sub
xor
mov
mov
push
mov
cmp
inc
sysexit
sub
mov
stos
stos
jg
sar
dec
cmp
pop
scas
push
pop
mov
add
jb
cmp
test
pop
sbb
sbb
call
or
add
sbb
or
xchg
ret
dec
mov
mov
pop
lret
cs
cmp
xchg
adc
seta
addr16
ja
das
mov
cmpb
mov
cmp
sbb
pop
mov
mov
mov
cmp
mov
cltd
loop
and
inc
dec
adc
popf
addb
lods
scas
cmp
aaa
jle
lcall
into
mov
mov
pop
aaa
push
pushf
xchg
mov
mov
aam
mov
sbb
out
loope
inc
mov
cmp
dec
mov
add
sahf
lds
nop
mov
test
movsl
add
jae
movsl
mov
mov
xorb
pop
stc
sbb
sbb
mov
xchg
mov
lods
xor
cmp
cmp
xor
push
pop
push
sub
add
popf
inc
pop
xor
nop
mov
jns
mov
mov
cmpsb
repnz
mov
mov
push
cmpsb
xchg
in
int3
ficoms
jbe
pop
xchg
adc
sahf
ficoms
fiadds
fisubrs
ficoms
fimuls
repnz
mov
inc
mov
das
dec
fsubrl
lahf
insl
std
sub
cmp
inc
daa
orb
cmp
or
and
and
fmuls
cmpsb
lret
add
xor
lea
cs
push
adc
jecxz
sbb
xchg
test
es
push
lods
lahf
nop
or
xchg
sahf
adc
pop
mov
sbb
pop
mov
sarb
cs
push
leave
push
mov
movsl
jp
add
push
shl
bound
dec
mov
daa
and
or
scas
addl
jns
test
or
pop
and
and
pop
cmpl
adc
dec
add
rcr
lods
arpl
pop
add
jnp
scas
test
push
arpl
or
inc
rcl
jnp
out
mov
nop
xchg
gs
cmp
ss
rorl
lret
cltd
inc
fbld
es
mov
pop
in
nop
out
jg
and
inc
or
test
nop
out
mov
mov
sbb
and
sub
sub
or
test
and
xor
es
push
adc
and
int
cs
sbb
adc
in
cmpsl
scas
xchg
fisubs
xchg
pushf
daa
lea
adc
jbe
cli
gs
in
push
cmc
les
cmp
cmp
adcb
fucom
repz
cmc
lcall
daa
and
mov
cmpsb
and
test
xor
adc
mov
lahf
cmc
or
mov
mov
xchg
or
cmp
arpl
pushf
sbb
mov
jecxz
add
mov
lret
sbb
and
mov
lods
xchg
sbb
and
test
dec
stos
cmp
sbb
movsb
jg
test
add
andb
sub
movsb
sarl
popf
dec
sub
and
clc
vmwrite
mov
jg
sub
orb
enter
and
inc
mov
or
or
popl
fstps
xchg
push
pushf
sbb
cmp
int3
loope
add
add
jmp
clc
add
daa
and
and
lahf
jbe
mov
or
jmp
sbb
cmpb
cmpsl
sbb
sub
or
insb
cmp
xor
dec
add
in
iret
out
push
xchg
call
xchg
mov
gs
mov
sub
outsl
mov
fsts
mov
mov
cmp
mov
mov
adc
out
sbb
movsb
cmc
cmp
fwait
xor
inc
pop
cmp
cmpsb
cmp
xchg
ds
xor
xchg
xor
divb
inc
sub
pop
cmp
test
ja
outsl
and
xchg
xor
push
dec
inc
ds
or
adcb
iret
stos
and
mov
mov
lds
lds
jge
lahf
in
icebp
lds
jge
mov
lds
mov
sub
fldenv
aas
cmp
fmull
aaa
test
dec
dec
ds
mov
xchg
pop
ds
idivb
cmpsl
cmp
lahf
pop
inc
mov
jg
loope
or
ds
outsl
sub
and
push
stos
sbb
ds
nop
mov
mov
mov
jo
mov
clc
shll
sub
fs
lock
mov
adc
add
push
pop
ds
dec
inc
mov
ds
repnz
sub
sbb
or
jnp
shrb
push
dec
mov
ret
movsb
fst
ds
aam
jl
ds
xchg
push
jmp
test
std
mov
dec
imul
outsb
ljmp
mov
inc
dec
js,pt
outsl
loope
jne
mov
push
cmp
daa
arpl
mov
xchg
or
push
ret
mov
add
xchg
and
add
ds
loop
out
daa
push
pushf
cltd
xchg
les
bswap
dec
mov
ds
cmpsb
mov
ja
insl
cwtl
subb
in
mov
pop
inc
jp
testl
ret
push
movsb
dec
xor
jae
mov
mov
outsb
test
mov
rclb
in
add
mov
xor
mov
adc
push
cld
sub
imul
mov
dec
jecxz,pt
mov
es
mov
push
dec
in
ds
dec
loopne
sub
sub
push
add
cmpsl
sub
ds
xchg
mov
das
mov
fsubp
mov
aad
sub
cli
or
divb
in
dec
push
cld
adc
iret
pop
enter
lods
inc
push
mov
mov
xor
testb
mov
fcoml
pop
push
std
xorl
push
push
mov
cli
cmp
add
cwtl
xchg
cmp
xor
push
lahf
test
sahf
dec
ds
stos
sti
mov
flds
pop
or
imul
mov
rolb
out
cld
xlat
aam
jl,pt
xchg
imul
mov
mov
icebp
jl
mov
pop
leave
scas
ja
shrl
icebp
adc
jae
enter
pop
mov
dec
mov
inc
es
dec
pop
push
mov
mov
mov
in
into
outsb
movsb
nop
shlb
xchg
jle
fdivrs
adcb
ljmp
jecxz
fimull
les
out
mov
imul
xchg
ds
addr16
cmp
or
aas
sbb
mov
xchg
sub
repz
cmpsb
mov
aas
jl
lods
stos
mov
mov
xor
inc
in
mov
imul
cmp
and
jmp
inc
rorb
pcmpeqw
dec
insb
sarl
shlb
and
mov
and
ds
repnz
aaa
rolb
dec
xor
ss
imul
bound
push
dec
mov
loopne
ja
or
test
mov
mov
mov
ljmp
das
in
cmpsl
ds
push
cltd
jmp
popf
xchg
out
fcomps
mov
insb
ds
adc
jnp
cmc
in
dec
pop
mov
sbb
aam
sub
aas
repnz
mov
mov
and
int
mov
sti
daa
xlat
shll
xchg
jb
in
das
jle
loope
xor
fnstenv
xchg
push
jle
mov
mov
scas
add
arpl
inc
fistl
sbb
ds
in
aad
mov
rcll
sub
add
mov
adc
aam
xchg
ds
mov
inc
aas
lods
push
or
bound
data16
test
dec
dec
negb
pop
mov
mov
test
inc
popa
push
outsl
add
sbb
dec
loop
pop
ds
cmp
in
repnz
ds
xchg
cwtl
je
adc
ds
int3
lret
imulb
outsl
ja,pt
stos
sbb
dec
mov
sbb
daa
jno
pop
ss
scas
and
sbb
hlt
cltd
ds
sbbl
fildl
push
lahf
sbb
sub
cmc
ds
add
cli
inc
adc
pop
dec
jns
ljmp
loop
repz
popa
mov
ds
jp
xchg
mull
and
ds
sub
adc
enter
push
add
aas
pop
mov
pop
test
loop
jne
ljmp
scas
hlt
mov
pop
dec
pop
dec
lret
ds
leave
mov
ret
add
or
ds
push
push
movsb
and
mov
aam
aad
loope
push
jl
cmc
fsubr
mov
fwait
es
popf
inc
jge
xchg
and
pushf
jno
cld
ficoml
dec
test
pop
mov
jecxz
mov
aas
stos
bound
cli
and
mov
jbe
fisttps
mov
ds
test
sbb
ds
pop
fadds
out
or
push
add
js
popf
or
add
mov
jae
jmp
ljmp
push
and
test
mov
push
popa
nop
mov
stc
aas
jg
mov
or
xor
mov
movsb
rcrb
lahf
mov
in
mov
mov
lret
int
xchg
sbb
inc
ds
js
pusha
and
inc
sbb
push
ds
jns
loop
push
xchg
mov
dec
xchg
ljmp
leave
push
pop
ds
movsl
aas
scas
out
or
dec
lret
add
cmp
ds
jmp
adc
xchg
das
out
lahf
mov
outsl
xor
jg,pt
jne
scas
ds
loop
sub
ret
adc
out
sub
cmp
divb
fildl
mov
jecxz
mov
imul
iret
inc
ds
loopne
and
mov
jnp
push
inc
sub
lahf
ds
jnp
add
adc
ds
out
pushf
push
mov
xchg
jns,pt
xor
ja
lods
jmp
loopne
cld
subl
mov
mov
inc
xorb
jae
insl
inc
inc
add
fimuls
cmc
in
ds
jno
sbb
movsb
daa
xor
outsl
push
cld
add
sub
dec
icebp
sub
fmul
in
cli
call
test
push
inc
mov
mov
dec
push
clc
movsl
pushf
sub
xor
mov
cs
ds
mov
push
std
ds
push
int3
lds
nop
adc
mov
add
and
inc
xor
dec
stc
or
in
xchg
cltd
cmc
jge
mov
ds
int3
push
dec
xchg
or
scas
sub
in
ds
sbb
mov
mov
xor
stos
jns
xor
pop
inc
test
pop
sarb
loope
cld
iret
js
loopne
ds
int
fbstp
xor
clc
adcl
or
sbb
pop
or
jmp
fs
dec
pusha
rorl
pop
sbb
mov
push
lock
xlat
mov
jne
popa
ds
test
daa
xor
lock
aaa
dec
aas
pop
lods
scas
xchg
mov
jl,pn
nop
pop
xor
insb
test
cmpsb
inc
ja
dec
lahf
adc
outsb
jno,pt
jp
div
mov
cltd
fnstsw
leave
imul
and
mov
out
int
dec
arpl
mov
addr16
mov
stos
std
daa
mov
movsl
xchg
das
fstps
out
pushf
mov
ds
xor
loop
xor
call
sar
mov
repz
paddsb
bound
ljmp
and
inc
mov
icebp
push
inc
lret
or
and
mov
pop
sub
ds
mov
mov
test
mov
loopew
xchg
dec
sub
dec
xor
push
push
jle
xchg
add
stos
inc
stc
adc
mov
movsb
dec
stos
mov
mov
pop
movsb
ja
ds
popa
lret
or
ds
push
xor
xor
fsts
cltd
stos
pop
dec
stos
ds
dec
repz
ds
cltd
pop
jno
aam
pop
sbb
push
js,pt
xor
and
lea
jae
jb
mov
imull
in
push
ret
and
or
fcoms
mov
inc
and
cmc
ds
dec
add
ret
jae
fsubr
push
jecxz
lock
add
mov
cmpsb
push
pop
aas
loop
pop
insl
xor
push
adc
sbb
inc
jno
idivl
jle
adc
push
mov
xlat
cmp
add
mov
adc
ds
xchg
or
insl
pushf
dec
ds
mov
insb
sbb
scas
mov
dec
dec
sarb
inc
jne
cmp
pop
mulb
pop
fstpt
cmpsl
jbe
ret
bndstx
xchg
out
dec
and
mov
add
std
mov
cmp
in
xlat
ds
or
cmp
push
push
enter
cmp
mov
fsubl
ds
mov
outsb
js,pt
lock
sbb
mov
xor
out
ds
adc
cs
mov
mov
outsb
mov
inc
add
les
ficoml
fistpll
ja
xchg
mov
xchg
movsl
xchg
hlt
ficoms
mov
int3
fs
cmp
outsb
call
aad
xor
pop
dec
adc
xchg
mov
mov
add
lods
sub
aaa
jle
cmp
push
jne
mov
inc
inc
fcompl
lods
xchg
pop
ret
pushf
insb
daa
ds
sbbb
or
sbb
fsubrs
inc
enter
and
push
lret
lret
sub
mov
sbb
xchg
mov
mov
mov
sti
inc
inc
jecxz
pop
adc
push
mov
xlat
or
mov
arpl
mov
sub
jp,pt
xor
lea
and
test
jecxz
bound
xchg
adc
mov
sbbb
fnstcw
mov
cwtl
aas
ja
pop
sahf
inc
ds
inc
pop
mov
lds
enter
mov
pop
mov
int
fildll
push
xchg
ds
cmc
xor
pop
dec
adc
daa
es
pusha
popf
cld
dec
jle
inc
push
or
jmp
inc
inc
sbb
xor
push
ds
xlat
int3
out
dec
and
shrl
sarl
dec
cmp
xor
repnz
dec
inc
or
stc
jmp
add
pop
mov
es
lret
mov
dec
xchg
push
ljmp
aaa
add
mov
shrb
out
ljmp
cwtl
inc
xor
mov
xchg
dec
jnp
cmp
push
jle
lea
test
addr16
loopne
jecxz
js
movsl
xchg
push
rorw
push
sti
jb,pt
hlt
mov
push
xchg
adc
jns
jbe
cmp
roll
fists
mov
lcall
sbb
fstpt
cmpsb
or
icebp
mov
jle
ficoml
sub
push
cmp
ljmp
xor
scas
decl
sbb
adc
cwtl
fdivs
cltd
in
mov
ret
sbb
add
dec
hlt
xchg
jecxz,pt
aad
push
cwtl
pop
and
adc
adc
ds
mov
xor
sbb
xchg
xor
pop
stos
ds
mov
into
loop
sub
mov
mov
xorb
popf
ficoms
or
and
jle
add
ret
push
xorb
mov
push
jecxz
inc
testb
movsl
out
sub
lods
adc
outsl
loopne
les
lock
sub
xchg
xor
daa
add
fwait
sarb
push
insl
mov
lea
lds
mov
pop
adc
pop
pop
addr16
movsb
or
loop,pt
adcl
dec
xlat
sub
cltd
jle
and
inc
testb
test
jne,pt
insl
dec
lret
mov
psubw
xchg
dec
mov
mov
ficompl
jbe
scas
data16
or
and
or
mov
mov
testb
inc
fidivrl
mov
jge
mov
jp
ds
lret
or
lds
imul
ljmp
lcall
pop
jg
mov
out
push
and
ds
push
aam
pushf
pop
mov
mov
mov
rclb
dec
loopne
pusha
outsb
jp
popf
aaa
push
jne
sbb
mov
ds
inc
stos
int
and
out
jb
rcr
push
popa
or
ljmp
push
push
adc
fsubs
scas
jle
pop
jmp
and
jae,pt
adc
test
pop
mov
xlat
nop
xchg
xor
jno
stos
repz
add
in
ds
jge
insl
mov
mov
sub
mov
push
jnp
xor
and
pushf
scas
xchg
inc
test
outsl
in
sub
mov
sbb
mov
mov
xor
jmp
pop
ds
jb
push
add
xor
add
or
adcl
push
push
xchg
sbb
and
ds
xchg
cld
ds
inc
shrl
pop
sahf
jnp
cwtl
cmp
sub
jns
testl
rcll
fistl
jl
aam
cmp
sbb
xchg
xor
ds
dec
cmpb
or
mov
loopne
dec
ds
mov
push
data16
scas
inc
imull
notb
cmp
mov
jno
into
pop
jecxz
xchg
inc
sbbl
ds
stos
cwtl
mov
xor
pop
sbb
insl
xchg
aas
rolb
inc
std
adc
pushf
xchg
adc
leave
leave
jg
movsb
xor
xorb
push
adc
aad
or
faddp
ds
sbbb
dec
mov
inc
and
dec
mov
aam
jl
mov
push
in
stos
mov
jge
sbb
mov
mov
push
pop
xor
rcl
adc
xor
dec
cwtl
cmp
dec
xlat
movsb
aas
ds
lahf
sub
shll
dec
push
adcl
testb
cltd
outsl
mov
push
inc
leave
shlb
imul
sub
ds
mov
sbb
sahf
ljmp
dec
or
cli
xor
in
mov
test
push
jbe
std
bound
ds
int
jge
js
fs
push
stos
jle
or
xchg
mov
adc
lahf
pop
xlat
mov
ds
or
mov
and
adc
aam
lcall
into
inc
pusha
pop
push
jo,pt
scas
cld
sbb
mov
addr16
movsl
push
in
jo,pt
aaa
inc
pop
shll
push
mov
scas
pop
and
xchg
out
int3
cmp
dec
jmp
cmp
out
sbb
mov
mov
inc
cmpl
sarl
lods
add
cli
inc
add
mov
jge
std
ds
seto
clc
sbb
mov
lcall
inc
add
movsl
ds
shlb
in
push
cli
mov
ja
mov
mov
add
lret
out
inc
iret
ds
adc
stos
lock
ds
push
and
data16
xor
pop
outsb
jno
lods
push
jl
ds
sub
std
or
test
xchg
push
mov
scas
ds
js
push
add
xor
push
jne
jmp
repz
inc
sbb
cwtl
ret
mov
or
shll
jle
rorb
movsl
ret
push
mov
rcl
iret
or
je
es
sub
jo
daa
out
sub
xchg
enter
ds
xchg
jmp
lods
pop
mov
inc
jae
push
mov
pop
or
dec
sbb
in
into
xlat
or
inc
inc
jle
xchg
mov
outsb
jp
or
mov
notrack
mov
mov
ret
stos
mov
xor
jle
dec
fildl
lret
mov
hlt
fsubrl
ds
addb
inc
out
sbb
test
test
add
mov
mov
rorl
in
inc
call
sbb
mov
and
imul
clc
movsl
xchg
xchg
inc
call
rclb
insl
subb
sub
xor
cmpl
adc
xchg
push
lret
cmpb
movsb
js
xchg
addl
mov
cld
cltd
addb
fildll
xchg
stos
aad
in
outsb
out
sub
sub
aaa
sbb
ds
sub
sub
push
test
repnz
aaa
outsb
lods
jl
push
ds
test
lret
fnsave
adc
dec
popf
mov
cs
mov
jmp
std
loopne
fwait
stc
jne,pt
scas
xor
imul
pop
stos
mov
ds
pusha
loope
mulb
push
xor
movsb
sbb
lea
dec
shll
adc
lods
jne,pt
test
xor
push
xchg
xlat
jbe
add
push
adc
rorb
mov
or
mov
adc
or
cmpsb
mov
loopne
jns
imul
mov
add
cmp
js
aad
inc
aas
sub
arpl
xchg
push
dec
jne
cmp
mov
icebp
imull
jno
ds
adc
jns
std
mov
mov
mov
pop
mov
sub
inc
ds
call
xor
pop
pop
ds
arpl
jmp
in
ja
out
stc
pop
push
or
lahf
cmc
jmp
call
pop
adc
mov
sbb
xchg
int3
lret
lds
and
pop
test
enter
mov
adc
cmc
cmpsb
jae
jnp
pop
ds
cld
xor
jmp
add
insl
lcall
std
js
loope
sbb
ds
jle
mov
push
aad
dec
cmpsl
mov
xlat
les
cmc
rcrl
dec
test
inc
adc
mov
lcall
aad
and
jbe
jo
lods
les
lds
jne
sbb
fsubl
stc
out
xor
sti
nop
or
sbb
mov
enter
jge
sarb
lds
idivl
mov
and
xchg
sbb
or
pop
mov
jge
lcall
rorl
pop
enter
xor
xor
and
mov
mov
std
fcmovbe
mov
sti
dec
mov
test
or
mov
pop
push
add
inc
xor
adc
std
xlat
scas
pop
repz
mov
dec
stc
ds
lret
sbbl
negb
repnz
jmpw
scas
sarb
inc
push
mov
aaa
rcr
fnstsw
popf
cmp
inc
cmp
mov
ss
fildll
mov
ljmp
out
inc
xor
ds
ss
lods
and
jmp
mov
mulb
or
js,pt
pop
xchg
scas
ljmp
mov
jae
out
pop
ds
out
insb
shl
testl
mov
or
cmp
xor
pop
sub
outsb
lret
int
sub
fmull
scas
shrl
aas
int3
test
and
mov
sbb
movsl
sub
cmc
lock
sbb
movl
mov
popa
inc
fidivrl
jns
out
je
mov
or
adc
push
dec
out
ds
insl
std
test
ds
add
popf
pop
loope
call
mov
test
adc
mov
xor
xorl
into
and
xor
aas
jl
or
jmp
mov
mov
aad
out
fcmovnbe
sar
cld
pop
ds
push
xchg
popf
push
aad
jecxz
add
mov
and
adc
mov
inc
jp
xor
or
mov
ds
fstl
or
lods
pop
ds
aad
lret
adc
mov
xchg
mov
inc
dec
adc
push
pop
icebp
imul
inc
fnstsw
mov
inc
leave
inc
sarl
lret
sub
mov
mov
pop
cmpsl
in
pop
popa
pusha
push
jle
leave
fnstcw
popa
push
xor
xchg
fisubrs
ds
dec
lea
mov
inc
loope
cmp
jnp,pt
insl
js
sahf
cwtd
pop
outsb
jbe
or
mov
shlb
xor
out
cmpsl
test
lret
cmp
and
orb
sbb
pop
xchg
push
ds
xor
out
jne
test
mov
and
xor
dec
ficoms
gs
pop
cltd
cmp
mov
ret
aas
scas
jge
fmul
std
push
inc
les
mov
lods
orl
xchg
aam
add
or
adc
popf
cmpsb
mov
xchg
jle
lock
inc
mov
or
cmp
test
daa
or
push
sbb
mov
jle
sbb
andl
dec
clc
and
mov
rorl
dec
incl
push
dec
xlat
fistps
cmpsl
or
xchg
dec
mov
in
lcall
out
orb
mov
pushl
mov
in
sub
pop
add
subl
jb
mov
cwtl
add
pop
xlat
sub
dec
neg
adc
loop
or
aaa
lds
mov
lock
push
xchg
into
xor
mov
and
jbe
push
jge
ja
ret
mov
jno
mov
adc
dec
outsl
lret
cmc
xor
stos
out
mov
shrl
inc
aam
mov
js
mov
push
inc
pop
ds
add
mov
scas
pop
ds
mov
jns
shll
adc
jbe
mov
ja
nop
xchg
sub
mov
outsl
mov
pop
popa
loopne
fidivrl
out
repz
mov
lcall
cmpsb
mov
outsb
cmpsb
dec
inc
dec
sub
loop
in
ret
test
adc
pop
push
dec
inc
test
cmp
pop
inc
inc
xor
cs
sbb
cli
movsb
cmp
std
and
cmp
jnp
mov
negb
pushf
xor
ds
fsubp
test
dec
enter
ds
adc
ds
data16
lea
daa
ds
ljmp
aas
ss
sbbl
mov
pop
sub
or
ja
jl
jno
stc
xlat
xor
jg
repz
jo
leave
xchg
std
jne
int3
push
push
ja
dec
fwait
ds
mov
fisttpl
mov
fldenv
cltd
xchg
xchg
scas
mov
push
inc
rcr
jno
ds
addl
mov
lret
popf
gs
mov
mov
ficomps
loop
mov
ds
fcoms
les
mov
call
mov
sbb
jmp
xor
mov
lcall
mov
cs
jle
adc
xchg
jecxz
psrad
and
mov
sub
fcomip
jb
and
xor
lcall
mov
push
addr16
mov
mov
jmp
and
add
ds
sub
ds
iret
cmpsl
jno
int3
lret
insl
push
rol
lahf
adcl
push
mov
dec
sahf
ds
jnp
or
imul
inc
rcll
sub
pushf
bound
lock
push
mov
jmp
xor
mov
xorb
imul
cmp
or
jg
ja
cwtl
loop
test
xchg
add
out
xchg
push
ds
fdivrl
gs
js
int3
and
dec
push
xchg
lret
add
jecxz
pop
push
in
ljmp
pop
ret
bound
pusha
mov
mov
mov
decl
outsb
fwait
jle
cmp
mov
outsb
mov
dec
stos
in
dec
inc
inc
xchg
mov
orps
xor
adc
icebp
sbb
sbb
rcrb
mov
mov
add
lcall
and
inc
mov
aad
xor
cmp
push
ds
and
and
jnp
sbb
pop
ret
adc
mov
pop
jbe
sub
cmp
mov
push
mov
push
or
scas
push
and
jle
dec
sbb
sti
mov
sarl
xlat
fwait
rolb
ds
push
sub
push
imul
test
ss
repnz
jge
rorb
mov
sarb
mov
notl
enter
add
shl
adc
and
pusha
fsubrs
cmpsl
scas
mov
sbb
test
das
cmc
push
cltd
xchg
mov
xor
adc
sub
leave
mov
ds
into
lea
test
fstl
stos
mov
xor
sbb
mov
push
icebp
lock
dec
inc
or
sahf
dec
and
js
test
or
push
sbb
pop
ds
jae
ds
iret
je
cltd
imul
mov
push
push
ds
push
push
out
cs
sub
outsl
push
shll
or
inc
sti
mov
in
icebp
add
jg
pop
adc
xlat
ljmp
mov
pop
pop
pop
push
jge
and
adc
cld
ds
lods
out
fs
add
imulb
inc
test
loope,pt
jb
mov
add
lcall
outsb
aad
cltd
or
mov
fcmovnbe
jmp
inc
mov
fisttpll
xor
and
jb
mov
sub
out
push
cmp
mov
cld
sub
ds
pop
xchg
and
sub
add
push
jl
jae
ljmp
lods
mov
xchg
mov
lds
sarl
std
xchg
pop
adc
ds
inc
push
mov
jle
fwait
cld
mov
pusha
out
fcomip
es
jbe
ds
adc
ret
mov
aad
dec
out
sub
xchg
rcrb
sub
adc
mov
sahf
mov
mov
mov
xchg
and
jecxz
sub
inc
mov
xchg
fstpl
or
dec
mov
lcall
and
ret
pop
add
sarl
jns
mov
bound
mul
lock
orl
enter
jecxz,pt
aam
fcomps
mov
mov
mov
aaa
push
pop
adc
scas
ds
and
ds
push
add
mov
popf
cltd
inc
jle
stos
inc
cld
popf
in
xchg
mov
inc
cmpl
add
jae
fs
lahf
call
jo
rclb
aam
adc
je
and
lods
xor
pop
and
cmpsb
mov
jle
mov
es
inc
xor
repz
loopne,pt
xor
mov
in
lock
and
bound
mov
sahf
adc
out
inc
test
dec
dec
shll
ds
loop
fistpll
out
bound
loope
jecxz,pt
scas
lcall
mov
pop
in
inc
mov
push
jge
mov
add
sub
lods
mov
dec
add
ret
mov
ds
add
popa
xchg
cmp
mov
mov
jbe
mov
xor
pop
jge
inc
sub
ds
push
shlb
adc
addb
gs
aas
idivl
dec
sbb
ret
ds
sbb
xor
fbld
jle
jns
pop
popf
rorl
out
test
jo
push
iret
sub
or
lahf
sarl
xor
and
int
pop
lcall
mov
mov
mov
out
imul
aad
cwtl
divl
sahf
add
add
mov
xchg
frstor
add
dec
adc
mov
nop
or
in
and
mov
sub
xor
sarl
dec
test
shll
adc
cltd
push
hlt
fldl
sarl
inc
insl
jb
pushf
xor
jno
push
ficoml
cmpb
lds
xor
add
mov
aas
mov
test
xor
sub
cwtl
test
push
sub
ds
and
mov
mov
out
pop
push
mov
bound
loope
push
dec
xchg
push
ds
pop
bound
or
adc
outsb
imul
stos
mov
sub
adcb
mov
int3
adc
xor
int
ds
lret
cmpsb
pushf
sbb
sarl
jae
or
lock
sti
xchg
shlb
ds
into
sub
push
bound
ds
div
in
ds
fs
out
push
cmp
stc
xor
add
je
ds
jecxz
test
repnz
sbb
fs
xor
imul
mov
fdivrs
or
jg
pop
int
and
cmp
mov
iret
adc
mov
mov
cltd
in
jge,pt
jmp
aam
dec
cli
xor
aad
pop
pop
jns
xor
or
jae
cli
ds
fcomip
pop
xor
aaa
pushf
ds
cmp
sbb
and
jns
sub
mov
int
pushf
divb
jmp
pop
jecxz
mov
or
xchg
mov
scas
mov
xchg
rclb
fwait
int
aaa
sarl
mov
dec
push
xor
or
mov
dec
xlat
push
lcall
mov
mov
ret
mov
rolb
scas
xchg
mov
dec
sbb
xor
push
dec
or
out
lods
divl
ds
dec
jecxz
add
pop
jns
sbbl
mov
and
call
shll
or
cltd
pop
ds
add
inc
or
sarb
fs
cmp
jne
xor
adc
and
mov
shrb
dec
pop
mov
push
leave
add
scas
jno
test
sub
testl
stos
mov
fimuls
sbb
mov
rcrb
ja
adcl
clc
ds
out
lods
jnp
jns
cmp
pushf
cmp
add
or
lds
cmpsl
popa
xchg
loop
leave
fldcw
cwtl
lgs
ds
mov
movsb
ds
lods
movsl
outsl
sbb
in
out
mov
add
ret
pop
std
mov
or
ds
ficoms
ds
shrl
jg
leave
push
lea
popa
inc
shll
inc
pop
xor
outsb
mov
jge
jnp
je
int3
or
std
mov
jbe
dec
out
cli
sub
add
scas
test
es
fnsave
pop
push
mov
dec
sub
addb
xlat
xor
xchg
scas
inc
insl
mov
mov
shll
xchg
dec
adc
ds
movsb
xchg
test
repnz
pop
jne
jecxz
sbb
mov
clc
outsl
enter
stc
fsubrl
aas
cmc
dec
mov
int
mov
or
aaa
mov
pop
pop
jge
mov
insb
dec
push
and
orb
mov
xchg
movsl
aad
fnstcw
leave
popa
ret
call
cmpsl
xor
shlb
scas
lret
push
movsb
mov
push
inc
push
pop
xorl
pop
and
rol
mov
dec
in
cltd
aam
ds
loop
sub
inc
adc
xorb
lret
std
test
mov
bound
mov
jne
test
repnz
cmp
push
mov
pop
jle
test
push
pop
pop
imul
xchg
ds
std
mov
pop
dec
ds
cmp
stos
push
aad
adc
jl
pop
jae
inc
add
ds
out
push
daa
insl
cmp
test
sti
dec
lods
rorb
or
dec
mov
roll
mov
xor
ret
lahf
inc
aad
hlt
adc
pop
jno
mov
push
and
jo
xchg
sub
dec
test
inc
ds
fldcw
movsb
xchg
mov
cmp
lods
lret
sub
inc
pushf
arpl
push
mov
insl
push
pop
into
lea
in
loop
adc
mov
xchg
adc
adc
mov
xchg
inc
jle
fcmovb
lods
and
push
in
outsl
ds
lds
pop
ds
jae
lret
pop
add
xor
scas
popf
scas
xchg
aaa
adc
pop
ds
dec
jecxz
scas
cli
test
push
dec
push
add
xchg
pop
ja
lock
lea
jmp
push
lds
mov
mov
icebp
in
mov
dec
mov
test
int3
cmp
add
ds
xor
pusha
enter
fst
int3
inc
sti
sahf
push
std
jns
sbb
pop
ds
cwtl
bound
ds
std
cli
inc
int3
jmp
xor
in
push
jl
ja
mov
stc
push
xchg
push
aas
out
ds
shlb
xchg
mov
ds
xchg
xchg
mov
jmp
cmp
add
mov
push
cs
jp
add
mov
pop
inc
ja
and
mov
lret
cmpl
add
and
lcall
or
sahf
adc
jp
pop
sbb
mov
push
fdivrl
mov
fwait
mov
and
jle
push
adc
out
je
pushf
inc
loopne
pop
pop
pop
jge
fstpt
imul
loope
pop
xchg
movsb
ds
xchg
add
mov
sub
push
sarb
xor
popf
and
orb
xor
push
mov
fucom
movsl
mov
jnp
sar
xchg
hlt
pop
in
sbb
cmovnp
or
fdivrl
sub
jl
out
ds
mov
pop
fsubrs
dec
dec
icebp
ds
mov
or
pop
test
pop
lods
mov
aaa
ds
daa
fbld
and
adc
pop
or
push
sub
and
lret
test
add
stc
insl
dec
push
call
pushf
and
dec
in
inc
sbb
cmpb
inc
push
add
xor
sub
sub
sarb
lea
sbb
mov
xchg
xchg
and
fwait
mov
mov
sub
in
or
ljmp
insl
xlat
jl
and
loop
pop
jge
mov
fs
pop
xrelease
add
sub
push
lret
mov
cmc
sahf
dec
jne
pop
rclb
gs
in
push
mov
pop
mov
inc
incl
pushf
cmp
jns
fnsave
inc
mov
push
cmpsb
pop
cmpsl
call
xlat
out
mov
sub
leave
cwtl
fs
pop
mov
mov
jmp
push
mov
loopne
push
pop
rol
sub
mov
mov
sbb
ds
xchg
das
xorb
dec
int
sbb
aaa
fstps
incl
add
fistpll
outsb
je
dec
adc
stos
mov
adc
int3
dec
imul
push
jmp
fcmovnbe
pop
js
push
stos
ds
outsl
imul
divb
sbb
stc
add
fs
mov
outsl
xchg
scas
sbb
dec
fdivrl
jo
mov
dec
xchg
ds
jecxz
pop
in
add
int3
xchg
subl
mov
cmp
dec
adc
imul
xchg
loopne
dec
insl
dec
pop
ds
shlb
mov
push
insl
push
mov
pop
mov
xor
lds
mov
or
ds
mov
mov
mov
cmc
pop
push
shlb
jns
ds
dec
mov
ds
lea
dec
pop
lahf
pushf
and
inc
inc
ds
loopne
mov
fwait
shll
jge
fildll
ds
push
cld
cmp
fnsave
shll
mov
imul
jns
adc
mov
stos
lods
sub
ret
push
mov
cwtl
imulb
inc
fisubrs
adc
xchg
mov
leave
cmpb
out
jnp
push
rcrb
lock
add
fsubs
jge
cld
inc
mov
iret
pushf
push
or
ret
jle
shll
mov
xchg
mov
push
jmp
iret
adc
ds
mov
loopne
jne
xchg
mov
xchg
sbb
push
ret
fidivrl
xchg
negb
icebp
mov
sarb
and
clc
ds
ljmp
ds
iret
pop
mov
ds
dec
push
mov
jge
mov
dec
mov
imul
push
adc
xchg
fimull
ljmp
adc
imul
stos
data16
fldl
add
inc
sbb
mov
adc
lds
fisttpll
mov
ds
ss
lods
mov
pop
ds
mov
ljmp
dec
ds
add
cmp
inc
or
popa
jle
cmp
push
std
imul
popa
xor
mov
cmp
lret
pop
mov
mov
cmpsb
xchg
outsl
mov
mov
sbb
inc
stos
sahf
jle
lds
mov
rcl
mov
in
loop
cs
ds
in
jl
lcall
mov
lods
pop
fnstcw
inc
add
or
cmp
jb
arpl
stc
fwait
cli
lock
mov
aas
jbe
ds
insl
cmc
mov
data16
push
filds
push
xor
lret
dec
aaa
push
iret
enter
ja,pt
jns
jle
movsl
in
ds
mov
int3
jne
pop
ret
push
add
repnz
cmp
shll
loopne
fnstcw
sub
lcall
imul
lds
jnp
cmc
ds
inc
fisttpl
nop
adc
xor
prefetch
or
adc
add
sarl
pop
jno
xchg
out
out
loope
xor
pop
pop
jnp
mov
push
push
aam
mov
es
xchg
mov
sar
fwait
push
sbb
mov
jmp
xchg
mov
sbb
test
xabort
xchg
sbb
mov
xchg
ds
pop
loopne
lock
mov
xchg
vminss
sarb
sub
mov
pop
mov
lods
mov
jecxz
outsb
inc
push
mov
xor
cmc
rcrl
les
inc
mov
scas
nop
insl
outsb
mov
adc
jbe
ds
enter
dec
jnp
negl
inc
jmp
jl
xchg
dec
leave
mov
inc
lret
lret
into
inc
inc
pop
test
add
xor
and
test
lcall
shll
ja
daa
es
ds
mov
xor
push
loop
push
aam
jne
push
aaa
mov
loope,pt
in
jg
mov
sub
sahf
fmulp
sarb
sub
movsb
mov
mov
lret
adc
dec
ret
lock
inc
incb
or
lea
ret
mov
cmpsl
fcomps
popa
mov
sub
shlb
mov
mov
mov
fs
jae
or
sahf
in
mov
mov
push
inc
mov
ds
test
das
sbb
stc
jle
mov
cmc
or
and
shlb
xchg
ds
cs
out
and
sbb
sbb
or
jmp
push
aam
clc
cld
cmpsl
int3
int
jne
and
or
adc
sbb
ds
mov
cmpsb
roll
mov
cwtl
stc
dec
or
inc
lea
inc
mov
out
xchg
dec
cmp
ds
pop
push
hlt
fwait
mov
aad
sbb
sti
push
daa
cmpsb
pop
mov
jg
jp
xchg
fldcw
jmp
mov
jae
pop
imul
rdpmc
mov
out
mov
pop
mov
inc
and
pop
mov
sbb
xchg
cmp
jge
and
mov
lods
popf
inc
cmpb
lret
int3
pop
mov
bound
inc
push
ds
xchg
sbb
ds
shr
dec
push
in
cmpsb
and
jge
inc
decl
test
and
mov
pop
fs
ds
leave
loopne
adc
imul
mov
xchg
ds
mov
push
mov
rcr
lcall
pop
dec
in
dec
movsb
push
ds
call
fs
shlb
sbbb
push
jns
sub
movsb
scas
adc
bound
jle
je
xchg
ja
rol
mov
mov
mov
xchg
and
or
and
das
sti
sub
jmp
cmp
lcall
fwait
mov
push
or
or
in
jae
push
push
pop
aam
in
jno
js
cwtl
jle
pop
xor
pop
push
pushf
xlat
movsb
jno
mov
dec
or
sti
mov
sub
mov
jle
add
stc
and
dec
dec
testl
and
bound
or
ds
sbb
sub
dec
mov
sbb
out
jg
and
leave
xorb
pop
out
mov
push
scas
sbbl
push
ds
dec
dec
jnp
adc
mov
lock
jp
mov
jno
dec
inc
shll
push
shrb
sbb
mov
adc
sub
and
xor
dec
lock
in
pop
icebp
ja,pt
jnp
cmc
xor
push
ds
js
std
je
pop
xor
loope
dec
cmc
mov
xor
push
cmp
dec
mov
dec
lret
dec
pushf
push
mov
movsb
sahf
mov
leave
rcll
loopne
cwtl
sti
mov
mov
pop
ret
dec
or
sbb
push
mov
push
test
jno,pt
test
bound
or
in
jle
mov
adc
mov
jge
ds
jb
ret
lret
jecxz
popf
in
test
push
dec
sbb
mov
jmp
cmp
scas
lea
into
sahf
cmp
out
bound
jp
ds
lahf
stos
int3
inc
test
mov
sub
xor
xlat
leave
lret
push
xchg
test
in
and
arpl
dec
iret
mov
dec
pop
xor
push
shl
add
mov
xchg
ds
push
stos
or
mov
inc
mov
jle
insb
std
test
loop
push
and
jno
ds
movsl
imul
popf
push
mov
xlat
test
mov
sbb
dec
ds
lods
clc
adc
xlat
jns
enter
push
mov
dec
dec
jae
adc
inc
ds
xchg
mov
mov
jl
jle
xchg
fsub
mov
mov
mov
and
push
stc
inc
xchg
outsl
xchg
push
xor
lret
add
push
shl
gs
outsb
inc
or
call
push
pop
cmp
add
push
push
jge
xchg
jbe
push
clc
movsb
test
jne
addr16
call
loop,pt
ljmp
je
daa
and
mov
ds
enter
jp
out
xor
pop
dec
fisubs
icebp
lods
shlb
icebp
cld
gs
or
stos
push
jle
push
or
or
xchg
push
ds
inc
fisubl
inc
aam
sub
daa
pop
out
adc
fadd
ds
mov
push
pushf
sbb
enter
in
int
insb
addr16
push
pop
mov
pop
test
mov
shlb
movsb
push
jmp
imul
mov
or
mov
jno
push
pushf
mov
ds
push
hlt
mov
push
ret
repnz
mov
imul
insl
lret
mov
xor
ds
dec
add
cmp
and
test
in
lods
je
call
popf
icebp
adc
mov
jge
xchg
movsl
pop
adc
fwait
mov
mov
and
pop
in
xchg
ds
jo
sbb
ss
ja
outsb
sysenter
jge
or
test
cmp
adc
mov
loop
push
ds
xchg
and
jnp,pt
ja
sahf
push
mov
jae
aam
ds
mov
jecxz
pop
adc
ds
sahf
stos
sbb
int3
in
mov
fldcw
inc
gs
xchg
scas
movsbl
pop
lcall
test
and
in
mov
ds
inc
or
xor
jle
add
lea
push
shlb
sbb
pop
jle
xor
lret
and
mov
addl
sbb
pop
popf
outsl
push
pop
add
ds
xor
mov
outsl
or
mov
ds
push
out
scas
out
in
movsb
shlb
mov
and
dec
not
xchg
xchg
push
popa
stc
loope
in
ds
movsl
and
mov
or
out
jg
xchg
cmc
js
and
jbe
insb
out
mov
xor
imul
jo
push
xor
sahf
mov
mov
xor
add
ds
or
ds
push
and
pop
cli
jae
jne
jle
or
addl
pop
lock
divps
int
movsb
ds
arpl
loope
mov
jle
ljmp
cmp
addb
leave
push
ds
aam
add
mov
dec
fnstcw
add
lods
push
ds
sub
iret
sbb
jp
lahf
popf
dec
pop
sbb
and
and
xor
out
mov
out
inc
mov
insb
add
dec
mov
jl
ds
adc
neg
inc
pop
ffree
lea
loope
inc
insl
mov
jl
pusha
mov
lea
ret
sbb
fisttpl
pop
sbb
cs
icebp
adc
repz
movsl
loopne
mov
data16
sarl
aas
stos
sbb
cmc
scas
jge
xchg
inc
mov
popf
inc
mov
repnz
mov
lods
push
sub
movsb
mov
pushf
fimull
ret
test
push
out
and
add
push
jns
jg
in
mov
popf
ljmp
pop
je
dec
jg
push
dec
and
sbb
adc
fxch
ds
std
loope
inc
xchg
sub
and
mov
fsubr
fstl
xchg
ds
rol
inc
cwtl
and
jo
loope
pop
inc
or
push
leave
outsb
nop
idivl
or
imul
sub
adc
inc
sti
mov
enter
ja
mov
pushf
jmp
push
push
shlb
push
scas
cld
and
sarl
jns
and
sbb
pop
xor
add
jae
cli
popf
push
bound
push
jno
xorl
mov
jmp
pop
xchg
adc
xlat
dec
lds
inc
pop
aam
lods
mov
ret
loop
ds
fistl
mov
lods
inc
and
adc
aas
mov
enter
push
pop
into
cld
push
ds
aas
sbb
rcrl
jle
push
popf
dec
std
dec
pop
hlt
loope
jge
dec
in
and
add
add
lfs
aad
dec
fsts
mov
xchg
leave
outsb
mov
cmp
pop
and
loop
fildl
icebp
ds
nop
ljmp
stos
push
cwtl
xchg
cmp
or
sbb
es
outsl
loopw
mov
dec
fldt
shrl
sub
pop
pop
or
mov
pop
insl
test
mov
mov
in
xchg
mov
cmp
sbb
push
sub
cmp
aaa
dec
in
pushf
mov
mov
jne
xchg
int3
inc
ret
sarb
push
lods
sti
xchg
loope
cmpsl
bound
and
mov
outsb
pop
aad
mov
mov
xchg
cltd
mov
sbb
bnd
cmp
sbb
mov
ds
add
ja
cmp
ds
pop
cmp
mov
aas
push
std
xor
add
dec
test
addb
roll
pop
mov
push
push
imul
push
pop
stos
sbb
fbstp
adc
shlb
in
addb
mov
pop
jge
enter
mov
adcb
lahf
jp
stos
mov
mov
ds
xbegin
xlat
pop
dec
xchg
sbb
pop
push
imul
pushf
and
sbb
icebp
cld
xchg
xor
ds
mov
lods
push
mov
mov
jb
popa
adc
sahf
push
push
sub
out
sbb
ds
xor
test
mov
mov
jle
mov
test
ds
repnz
jnp
ds
mov
std
repz
loopne,pt
test
sbb
mov
cli
lahf
cmpsb
sti
jbe
push
test
xlat
mov
test
pop
jnp
mov
sbb
imul
ds
ret
cmpsb
aam
aad
inc
dec
mov
stos
inc
push
xchg
push
addr16
dec
xchg
push
xor
mov
xor
ds
mov
bswap
pop
in
iret
mov
pop
cmp
aad
sub
push
push
xchg
in
push
shl
es
pop
jecxz
cmc
mov
adc
pop
fistl
mov
cmc
shll
mov
aas
mov
lds
mov
xchg
dec
mov
fidivrl
mov
in
jg
xlat
sbb
ds
push
mov
mov
dec
xor
repnz
pop
and
mov
jbe
pushf
je
dec
loop
hlt
sub
xchg
ds
mov
int
vpmulhuw
popl
push
sub
jge
dec
pushf
stc
repz
insl
int3
sbb
xchg
xor
int
mov
xor
mov
adc
mov
cmpl
pop
dec
dec
jno,pt
mov
mov
pop
jns
es
jmp
hlt
fnsave
sti
mov
push
push
sbb
jbe
mov
divl
xchg
int
cmpl
jecxz
ljmp
push
cmc
andb
mov
cmp
mov
std
xchg
arpl
cwtl
push
or
sbb
call
push
test
insl
add
andl
sub
xor
adc
lods
jle
loop
inc
push
lods
roll
int3
or
adc
pusha
push
mov
sbb
cmpsl
jl,pt
jne
cli
movsl
dec
int3
push
icebp
aaa
mov
testb
sbb
negl
dec
filds
ljmp
shl
mov
sub
lahf
sub
xor
and
in
lock
adc
adc
jae
sbb
cmp
xor
sub
popa
sub
mov
icebp
push
mov
sbb
xor
test
loope
mov
bound
add
push
cwtl
sbb
jbe,pt
xchg
lret
jne
mov
std
jl
mov
push
ds
bound
sub
rcll
sbb
and
dec
and
mov
inc
repnz
enter
push
jl,pt
add
int
mov
sub
ror
ret
scas
jno
fiaddl
idivb
sub
mov
add
cmp
and
xor
outsb
mov
ds
xchg
lock
pop
popf
push
jno
mov
imul
fstpt
inc
push
test
mov
bnd
mov
pop
leave
cmpsb
adc
add
push
mov
or
ret
inc
in
test
stos
scas
movsl
rcl
adc
ds
movsb
pop
rol
inc
pop
mov
xchg
jns
jle
popa
loope
fsubrl
iret
std
imul
shlb
int
ds
pusha
dec
xor
mov
in
iret
push
inc
inc
push
inc
or
fildl
roll
clc
pop
sub
mov
repz
popa
in
or
xchg
sbb
mov
or
inc
mov
xchg
mov
shrl
jecxz
mov
ds
or
std
mov
movsb
arpl
shll
add
xchg
loope
aaa
mov
shlb
lods
inc
inc
in
or
gs
enter
jle
pop
ds
mov
sub
sbb
cmp
push
leave
cmc
sub
cmpb
std
movl
stc
sbb
fxch
mov
enter
pop
out
push
aas
lods
insb
mov
push
pop
mov
or
jge
xchg
popf
fld1
jle
mov
bnd
nop
sub
push
pop
ds
out
xchg
bswap
out
std
ds
ret
orl
push
fcmove
outsb
pop
xlat
mov
bnd
outsl
in
jne
fidivrs
dec
add
ds
mov
jae
ds
push
out
push
sub
mov
pop
jmp
mov
popa
subl
out
pop
in
push
and
loopne,pt
jl
mov
daa
ds
jns
dec
inc
imul
stos
out
pop
add
loopne,pt
mov
push
ds
mov
sbb
dec
add
out
and
or
ds
es
into
test
rcrb
sbb
jb
popf
aaa
lcall
and
shr
mov
loope
inc
xor
in
and
dec
sarb
inc
xor
add
lcall
in
mov
xchg
outsl
loop
test
add
cltd
sbbb
mov
fildl
inc
fadds
fidivl
in
adc
xlat
mov
iret
mov
add
jbe
addr16
in
push
mov
ds
mov
test
xor
jns,pn
fists
adc
pminub
xchg
mov
dec
ds
movsb
jnp
jb
dec
into
ds
call
xchg
sub
xlat
push
push
mov
xchg
fcomip
inc
into
test
push
ds
imul
mov
lock
outsb
bound
jbe
ds
je
fwait
adc
xor
jo
inc
icebp
mov
inc
sub
repz
or
xacquire
xlat
dec
ds
dec
shl
rolb
dec
adc
inc
xor
xchg
push
lahf
pop
mov
shrl
stos
popf
jle
popa
pop
push
call
xor
push
xlat
rolb
ljmp
pop
adcb
ds
mov
push
sub
cmp
inc
test
sarb
imul
sub
ds
loopne
leave
bound
lcall
cmp
adc
mulb
leave
mov
inc
ds
mov
jns
push
into
sti
aaa
dec
imul
sub
jg
add
ds
jmp
pop
or
es
loopne
fwait
jle
iret
xchg
sub
ds
mov
lods
test
sbb
mov
loop
add
cs
ds
imul
add
push
xlat
push
shl
xchg
push
or
pop
inc
out
stos
aas
sub
dec
ret
cmc
sub
push
call
pop
outsb
ds
in
dec
mov
ds
jbe
mov
jmp
inc
arpl
movsb
fidivrl
and
rcrl
dec
sub
ds
mov
sbb
int3
es
mov
sub
stc
mov
jnp
in
dec
inc
enter
add
mov
sub
fsubrs
mov
mov
sub
push
jle
test
ds
insl
sbb
mov
cli
add
and
sbb
pop
xchg
push
mov
sbb
enter
sub
dec
xchg
ds
dec
adc
xchg
fimull
jle
pop
pop
addr16
sarb
or
mov
shlb
cld
sub
jae
xchg
push
mov
not
js
cmpsb
xchg
jle
shll
gs
stos
pop
mov
and
lods
in
sti
mov
jne
lock
sub
add
ds
cltd
sbb
std
push
ds
jmp
shll
cltd
xchg
push
or
ds
cwtl
test
jns
inc
dec
and
out
dec
ds
mov
push
sub
loop
int
loopne
or
ds
pop
je
popf
inc
enter
ffree
xchg
mov
in
fmulp
xchg
jl
cmpsl
cmc
ds
imul
movsl
mov
insb
div
sub
outsb
dec
push
and
sub
ficoml
cmpsb
adc
call
aad
mov
pop
lcall
xor
fsubl
shr
icebp
imul
mov
push
fidivrs
lcall
xor
sbb
xor
int3
mov
xlat
pop
xchg
fs
mov
inc
mov
mov
pop
inc
into
loope,pt
mov
push
pushf
gs
fiaddl
outsb
xchg
sub
ds
pusha
enter
mov
inc
push
fdivs
adc
insb
pop
stos
mov
mov
ds
xchg
imul
mov
mov
dec
pop
leave
lods
mov
xchg
sbb
nop
clc
xchg
out
loope,pt
inc
cmp
sbb
push
ds
lret
jmp
mov
mov
shlb
iret
dec
ds
cwtl
push
adc
clc
mov
stos
lods
dec
mov
bound
push
push
jbe
ds
lds
jecxz
mov
fisubs
shr
sub
or
leave
pop
aad
jno
adc
adc
les
ds
adc
adc
xor
mov
dec
addl
repz
and
mov
int3
in
ds
and
push
popl
jge
xor
jg
adc
push
jmp
mov
xchg
rorb
push
and
fstp
mov
cmpsl
mov
xor
test
cwtl
repnz
sahf
popf
jmp
xor
ljmp
inc
fdivrs
xlat
fcmove
push
jmp
push
adc
mov
dec
aad
sarb
ljmp
ds
inc
mov
pusha
mov
push
testl
mov
push
mov
ds
std
jmp
mov
outsl
adc
pop
adcl
add
sbb
dec
mov
jmp
push
ds
insb
and
aaa
cli
iret
ds
sbb
xchg
cmc
pop
ds
inc
lods
lds
adc
insl
mov
pusha
xor
fwait
call
mov
mov
mov
mov
jp
stc
inc
cmc
push
add
mov
test
pop
inc
dec
push
int
lret
int3
mov
adc
xor
jge
bound
ret
inc
cmpl
in
pop
fnstenv
lahf
xchg
fnsave
rcrb
or
cli
xor
lods
pop
mov
inc
data16
int3
in
notl
addl
aas
sahf
dec
sub
ret
mov
mov
test
push
add
push
sbb
icebp
ds
cld
push
loope
mov
shll
sub
sub
int
nop
or
aas
ljmp
fdivrl
in
sbb
stos
mov
ds
dec
arpl
out
add
lods
fabs
inc
in
xchg
push
rorb
mov
jecxz
push
or
sbb
cmp
je
push
cltd
cmp
mov
push
loopne
or
xor
movsl
lock
push
int
jge
xchg
push
mov
ds
jnp
pop
and
xchg
mov
les
call
loop
dec
sbb
imul
sbb
push
sub
ds
icebp
xchg
xor
js
insb
xchg
dec
lock
jmp
xor
push
xor
pop
mov
test
add
popa
sarb
sub
sbb
push
push
sbb
ret
add
loope
ds
pop
lds
shlb
cltd
nop
add
call
ds
iret
inc
xchg
xor
test
insb
test
popf
ds
ficoms
lds
popf
ja
ds
jmp
jecxz
in
mov
in
sarb
mov
mov
cwtl
pshufd
and
mov
xlat
clc
and
and
shll
jecxz,pt
into
push
ds
cmpsb
mov
adcb
and
push
repz
add
mov
push
rcll
jle
mov
mov
jmp
jecxz,pt
dec
mov
pushf
fadd
shll
mov
inc
or
add
jmp
imul
mov
stc
pop
pop
jmp
mov
jle
bound
sarb
push
jno
pop
push
jae
mov
mov
lods
dec
sarl
jno
mov
push
mov
jmp
xchg
fistpl
push
mov
xor
scas
clc
rol
std
lods
mov
and
ds
dec
push
inc
stc
nop
inc
je
xchg
scas
fistl
imul
shll
push
gs
pop
jle
mov
ds
jbe
or
ds
pop
pop
jmp
clc
mov
lret
andl
and
push
mov
fidivrl
lods
dec
or
fldl
in
xor
icebp
popf
dec
sub
jmp
lods
lock
int
lods
inc
jno
lcall
leave
xchg
mov
ret
mov
bound
pusha
cmp
ds
je
sub
mov
ds
loopne
mov
add
out
sub
enter
fdivl
dec
les
in
mov
xchg
xchg
xor
xchg
pop
test
add
test
pop
inc
ds
std
sbb
xchg
and
push
jle
push
stos
es
jno
sbb
ds
leave
adc
shlb
ds
inc
pop
jge
sbbl
hlt
mov
jl
jo
mov
push
mov
lods
inc
jp
fildl
lret
mov
mov
dec
lods
clc
xchg
jae
lahf
cmp
push
jle
pop
adc
cs
mov
data16
lret
ds
jae
mov
mov
dec
stc
jo
roll
xor
jle
out
xchg
xchg
cmp
add
sub
inc
xchg
rorl
test
or
test
dec
shl
sbb
insl
ds
pushf
outsb
inc
pop
ret
push
loop
not
fwait
cltd
js,pt
pop
ljmp
jmp
lcall
or
mov
nop
push
and
xor
push
ds
add
nop
test
push
mov
mov
add
loop,pt
xor
mov
jge
ds
rorl
pop
and
mov
dec
rorb
popa
mov
or
pop
sbb
das
mov
xchg
repz
dec
lcall
and
push
sub
mov
xchg
popf
fucomi
jge
sar
mov
xchg
inc
inc
dec
ds
into
test
jnp
xchg
mov
jle
lea
lds
add
adc
insb
fs
dec
xor
or
hlt
push
ds
cwtl
inc
mov
sbb
jne
fcoms
cltd
xchg
add
mov
xchg
xchg
lahf
mov
int3
push
jnp
ds
lods
inc
std
test
pop
je
out
andb
lret
arpl
jp
dec
mov
mov
or
push
insl
and
xor
xchg
add
cmpl
xchg
lcall
sub
xchg
imul
test
mov
add
ds
or
sub
andl
push
pop
sub
sub
pusha
imul
aas
add
xor
xchg
mov
and
sbb
sub
fs
int3
dec
xorl
ret
cmp
or
inc
mov
push
cmp
insl
adc
fimull
pusha
mov
ja
xchg
xchg
inc
or
adc
loope
or
outsl
mov
inc
aam
je
sub
ds
fbld
movsl
test
cmc
movsb
mov
faddl
adc
frstor
movsl
mov
jle
and
jae
xor
jmp
sbb
pop
insl
pop
imul
xchg
loopne
dec
push
cmp
shlb
sbb
and
ficoms
push
dec
fwait
cmpb
cmpsb
pop
cld
lock
sbb
cltd
movb
dec
xor
jo
mov
cmc
add
fcompl
mov
jbe
push
ja
pop
shlb
dec
and
mov
call
loopne
dec
adc
or
es
gs
jle
out
add
add
xchg
ds
por
call
movsl
mov
sub
scas
testl
inc
bound
add
enter
xchg
jp
movsb
stos
insb
ror
movsb
outsl
jne
out
or
rorb
addr16
push
inc
pop
push
leave
insl
and
lcall
pop
lcall
mov
movsl
int
mov
xor
cs
push
mov
mov
cmp
call
aam
in
into
ds
mov
xor
mov
ds
push
sbb
pop
sub
jb
jle
jae
mov
mov
insb
mull
and
inc
sub
xlat
pop
dec
rclb
adc
outsl
mov
push
push
stos
cmp
mov
jp
cli
outsb
sahf
jne
inc
out
aas
fists
call
test
mov
xor
flds
mov
xchg
jno
leave
or
mov
pop
ret
and
ds
pop
pop
mov
mov
lock
aas
pop
cmp
inc
fidivrl
testb
les
mov
into
adc
subl
ds
adc
mov
fildl
dec
xchg
lcall
gs
xlat
jno
jle
push
imul
loope
rolb
xor
dec
movsb
ds
pop
sahf
sub
or
xchg
ds
xchg
divb
ds
loope
fistpll
mov
test
dec
ds
xchg
int
sbb
and
cmpsb
arpl
pop
out
popf
sarl
pop
adcl
lds
push
pop
aaa
mov
mov
mov
mov
and
cwtl
mov
or
and
insb
jle
mov
jg
xlat
stos
and
out
pop
fcoml
icebp
dec
ds
pop
pop
mov
mov
dec
mov
xor
push
sub
push
push
pop
push
pop
pop
cmpb
into
inc
push
fstps
ret
mov
test
mov
adc
cmc
es
mov
mov
jg
add
mov
repnz
dec
arpl
icebp
out
test
mov
daa
dec
mov
mov
cmp
call
cwtl
push
xor
mov
in
lock
lds
sbb
jge
mov
pop
sbb
pop
inc
push
pushf
pop
push
xchg
adc
sub
jg
ds
pop
enter
into
ds
js
in
jg
xchg
fidivs
loop,pt
cmp
push
add
daa
xchg
mov
rcrl
jg
outsb
jb
movsl
cld
or
dec
mov
and
jno
inc
inc
mov
in
sub
cmp
ja
iret
pop
pop
fucomip
mov
lret
jmp
inc
xor
mov
jno,pt
mov
pusha
fisubrl
xor
jle
fldenv
xor
adc
ja
rcrl
outsl
pop
dec
sarb
ds
pop
jle
pop
ds
xor
sub
sub
fistpl
out
mov
imul
iret
aas
mov
push
int3
ds
add
jbe
lcall
xchg
in
jnp
andb
ds
jno
and
mov
sub
mov
xchg
aad
pop
or
sub
xchg
cmp
and
fldl
data16
cmpsl
loopne
sahf
jb
leave
dec
pushf
xor
push
pop
jecxz
gs
aas
pop
jle
inc
add
in
cld
repz
mov
sbb
ds
call
cwtl
ficoml
bound
cmpsl
jnp
arpl
call
popf
dec
xchg
fdivs
jno
out
loope
mov
xchg
mov
xor
stc
testb
in
cld
dec
aaa
dec
mov
outsb
test
cmp
jb,pt
leave
pop
in
jg
ds
shr
xor
movsb
shll
ds
and
adc
sarb
push
pop
jno
call
nop
mov
ds
into
push
aam
jae
and
sub
loop
ret
repnz
test
xor
jle
mov
ss
and
inc
xor
push
in
std
aam
fwait
and
out
inc
clc
add
pop
dec
cwtl
or
ljmp
mov
xor
fmull
pushf
sub
daa
mov
imul
rolb
insl
mov
xchg
sahf
pop
pusha
ja
test
mov
push
iret
addr16
outsb
cmpsb
sahf
inc
ds
shrb
lds
cs
test
pop
stc
xor
sbb
push
outsl
adc
mov
jle
xchg
cmpsb
lods
ds
sbb
xchg
subb
and
mov
popf
addr16
hlt
ja
pmaxsw
dec
imul
inc
lods
ds
es
sub
sbb
pop
sahf
mov
mov
add
inc
mov
push
cmc
ds
dec
int3
das
or
mov
sbb
cmp
cmp
test
and
dec
mov
fnstcw
decl
sub
in
jmp
and
icebp
movsb
xor
enter
xor
pop
dec
jg
adc
ds
pop
mov
in
ds
push
dec
xlat
mov
jg
lock
pop
push
pop
cmp
inc
ds
orl
dec
dec
int
test
rcrl
adc
lret
mov
outsb
jae
imul
lods
add
xlat
push
rol
rcrl
jmp
inc
and
test
int
lods
xlat
sarb
mov
dec
mov
pusha
mov
cmp
inc
mov
add
cmp
out
hlt
dec
call
loopne
cld
sbb
jbe,pt
lods
push
inc
mov
xchg
and
jbe
or
ds
nop
inc
jno
enter
jle
addr16
jb
cli
inc
sub
pusha
jg
mov
rcrl
lea
loopne
pushf
push
je
icebp
movsb
ja
outsl
fxch
or
dec
pop
dec
ljmp
mov
adc
cmp
in
ds
loope
mov
idivl
add
fisubrl
jge
lahf
sbb
jg
or
sbb
fs
popa
add
adc
cld
mov
stc
ja
ret
mov
addr16
int
dec
push
call
dec
fsts
fsubr
shll
or
dec
aaa
cmp
push
dec
into
sbb
cmp
jae
jmp
fdivrs
lcall
out
fs
mov
xchg
mov
ds
fwait
push
in
add
orl
push
mov
push
icebp
xor
mov
sub
arpl
ffree
push
data16
ds
add
push
insl
sar
rcll
lret
mov
mov
dec
xor
adc
ret
inc
stc
sub
popf
icebp
adc
jne
arpl
or
xchg
jo
aad
sbb
sbb
adc
pop
adc
and
test
push
shll
mov
repnz
lea
iret
outsb
add
sarl
push
sub
add
sub
mov
mov
scas
int
inc
lods
xor
push
insl
out
int3
loope
imul
mov
and
lds
leave
outsb
mov
in
adc
inc
and
sti
jbe
hlt
lea
loop
scas
imul
xchg
ds
xor
xor
mov
scas
push
xchg
arpl
outsb
jg
imul
in
xor
mov
or
mov
imul
test
ds
std
icebp
ficompl
pop
mov
iret
push
adc
fnstsw
test
sub
dec
les
ds
fcoms
xchg
xlat
push
cmp
inc
xchg
adc
ja
sbb
jmp
inc
mov
ds
sub
adc
xchg
in
jbe
inc
cmp
out
mov
mov
ret
ds
loop
nop
je
rolb
sub
dec
jle
mov
enter
jge
add
inc
mov
addr16
adcl
stos
outsb
adc
jns
mov
sbb
sbb
push
sbb
or
cmpsl
test
pusha
int3
lea
pop
in
jmp
ja
mov
dec
push
mov
fdivs
jae
das
or
in
xchg
dec
dec
mov
sarb
jmp
bound
sub
dec
cltd
ds
mov
lret
mov
rolb
test
or
addr16
stos
js
cmpsl
jnp
cmc
shlb
in
testb
data16
jne
push
xor
xor
clc
jb
in
mov
adc
mov
mov
cmc
xchg
inc
inc
lea
push
inc
mov
into
ds
test
mov
cltd
push
mov
int3
dec
jp
push
popa
ds
pop
jge
dec
xor
xchg
pop
imul
or
into
ja
pop
mov
sbb
xchg
pusha
lahf
pushf
ds
fs
mov
inc
cmp
arpl
ljmp
adc
push
clc
movsb
jo
jle
pop
jl
idivl
insl
inc
fiaddl
pop
mov
fwait
mov
pop
addr16
inc
ds
test
stos
mov
enter
lea
mov
cmp
add
scas
mov
xchg
pop
pop
pop
and
dec
aad
pop
or
dec
add
mov
jmp
xchg
nop
fisttpl
jg
ds
push
lahf
lods
shlb
into
sub
push
sub
xor
jle
pop
mov
jge,pt
iret
dec
dec
mov
int3
adc
sub
xchg
aam
ds
sbb
dec
pop
xor
push
xor
dec
mov
jbe
sub
lret
std
ds
das
in
leave
xchg
inc
arpl
fsub
dec
push
les
lds
mov
lods
rclb
ret
push
call
in
ja
iret
push
or
xorb
sarl
lods
out
int3
push
cli
lock
daa
pop
ds
xor
popa
and
ds
aam
xor
loope
in
jb
popf
jmp
lgs
in
pop
xchg
mov
jle
out
mov
dec
stos
test
loope
mov
mov
inc
ret
pop
in
ds
xchg
insl
sub
leave
cmc
ds
cltd
inc
out
fcomp
xor
inc
mov
andl
loop
out
ds
sbb
sbb
movsb
add
xlat
or
aad
pop
and
insl
imul
adc
add
jecxz
loope
inc
loopne
pusha
repz
aam
adc
cmp
push
adc
repnz
outsl
jle,pt
mov
ds
hlt
jmp
sub
jae
push
outsb
jp
cmpsb
stos
ds
lea
sahf
test
leave
sbb
mov
and
adc
push
andl
add
popf
jl
mov
push
mov
fmuls
or
out
adc
mov
imul
lcall
ljmp
es
in
sub
cld
push
push
rcrb
add
xor
sub
add
repnz
jecxz
sahf
dec
push
ds
insl
and
xchg
or
push
popf
lods
pop
xchg
lcall
mov
fdiv
xorl
shr
test
inc
call
adc
push
pop
clc
mov
or
ret
push
mov
jg
clc
aad
dec
ds
add
jl
jo
jbe
ds
sub
xor
mov
lret
popf
call
popf
sub
test
add
push
lea
inc
movsl
mov
pop
jbe
or
sub
popa
imul
out
jno
movsb
fisubl
jle
jnp
into
lods
jmp
push
xchg
in
loope
ds
add
mov
loop
les
mov
jnp
jle
out
mov
shrl
xchg
push
dec
arpl
rorb
fidivrs
jl
dec
jne
icebp
and
dec
jle
nop
test
xchg
imul
pop
cmc
scas
ja
sub
mov
mov
dec
push
mov
mov
jb
bound
loop,pt
mov
dec
ds
adc
mov
mov
xor
mov
inc
shr
sub
outsb
clc
xchg
push
push
jnp
xor
xor
orl
sbb
xchg
gs
mov
xor
xor
jae,pn
cmp
add
fwait
mov
sbb
mov
xchg
and
ja
ret
lods
push
inc
cltd
add
xor
adc
call
fadds
inc
mov
test
test
lods
add
xchg
mov
das
pusha
sub
scas
pop
notb
std
or
stos
scas
fnstcw
and
xchg
repnz
test
sbb
dec
pop
outsb
cmpsb
nop
jmp
dec
mov
push
mov
loop
ds
scas
aam
mov
xchg
nop
xchg
cmp
ds
mov
mov
or
test
inc
in
rorl
fsts
ds
cltd
adc
or
lea
dec
sbb
outsb
lock
scas
testl
inc
mov
aaa
mov
jo
icebp
push
add
add
sub
outsl
les
orl
dec
mov
sbb
daa
es
xor
stos
cwtl
fnstcw
and
jae
jb
mov
mov
dec
inc
and
ds
les
loope
jge
shl
into
sarb
sbb
mov
ljmp
ds
cwtl
dec
and
in
mov
mov
xor
aas
mov
lods
sar
inc
subl
scas
stc
shrb
daa
aad
mov
and
cmp
lret
mov
loopne
fs
roll
mov
inc
mov
aas
xor
ds
and
in
aad
mov
pop
inc
shl
cmpl
ret
das
hlt
sub
xchg
ds
out
jmp
aam
sbb
sub
fs
es
sub
xor
cmp
fistps
ficompl
mov
mov
push
ss
mov
xchg
ds
enter
jns
dec
jo
cmc
pop
call
pushl
cmp
mov
stos
jo
cmp
mov
nop
pop
movsb
or
ds
inc
sub
sbb
sbb
inc
fwait
push
pop
xor
push
fs
mov
cmp
dec
cmpl
pop
arpl
mov
es
ds
loopne
pop
loope
cmp
adc
push
cltd
ds
push
xor
flds
out
mov
cmpsl
sbb
mov
mov
mov
in
inc
fcompl
add
call
sahf
aas
dec
xor
pop
push
mov
loop
adc
dec
sub
aad
xchg
add
ds
shrb
insb
add
and
mov
loopne
ds
dec
ja
mov
inc
aam
mov
or
movsb
fistps
dec
mov
mov
mov
xlat
or
push
addl
mov
push
repnz
imul
lcall
sarl
leave
pop
mov
ret
movsb
inc
dec
jle
add
pusha
sar
dec
and
popa
sbb
testb
call
das
mov
mov
xor
inc
enter
xchg
mov
call
sub
movsb
or
mov
ja
lods
push
pop
dec
test
xchg
les
pop
add
dec
nop
repnz
pop
mov
mov
mov
push
adc
cmpsb
sub
jbe
js
and
lret
push
in
inc
or
negb
jmp
mov
test
int
sbb
add
jg
ds
cmp
outsl
idivl
push
add
push
push
jecxz
mov
add
jb,pt
jmp
sub
out
inc
mov
pop
arpl
mov
or
ds
push
and
ret
ds
or
rcrl
rep
lahf
pop
out
ret
fsubrs
mov
ds
cmp
mov
push
aam
adc
mov
aam
mov
pop
insl
and
jle
sarl
cltd
xchg
aad
mov
inc
ficoms
loop
call
add
push
shlb
rolb
mov
jns
adc
pop
imulb
dec
rclb
outsl
xor
idiv
pop
movsl
sub
int3
sbb
je
push
sbb
sub
xlat
sub
fnstenv
jmp
lcall
test
fists
ds
cmpsl
orb
jge
jns
cmc
adc
mov
ds
sub
lods
or
mov
mov
ss
jmp
xchg
ds
xchg
es
sbb
fwait
daa
js
insb
add
ds
cmp
ss
push
inc
lods
adc
inc
xchg
ljmp
clc
push
and
or
adc
pusha
cmc
pop
push
mov
arpl
push
dec
ds
cmp
or
fidivrl
lret
xor
xchg
ds
xchg
testl
cmc
iret
push
xchg
mov
jnp
shr
out
hlt
inc
mov
stc
stc
adc
fcmove
cmpsl
push
xor
mov
cmp
clc
jle
sub
xor
dec
lds
test
dec
ljmp
pop
js
jmp
lret
or
push
add
lods
ret
lds
lret
mov
ds
inc
xor
xchg
ds
ljmp
xlat
std
shrl
sbb
mov
out
adc
out
aad
mov
mov
push
mov
sbb
leave
ds
in
out
jmp
movb
inc
jg,pt
sub
fs
xchg
xlat
sti
inc
push
xor
inc
xchg
data16
sub
pop
insl
add
sbb
incl
cld
lea
and
js,pt
stos
sbb
push
in
in
mov
pushl
jo,pt
mov
jne
stos
cmp
sbb
cmp
cmp
pop
call
push
jle
mov
xchg
pop
arpl
mov
sti
fnstsw
and
inc
jmp
icebp
aam
decl
jl
or
sbb
sahf
lock
inc
mov
ds
call
shlb
mov
and
xchg
mov
jl
inc
test
js
cltd
push
mov
push
xor
imul
dec
adc
imul
sbb
inc
ds
lds
mov
ds
mov
pop
fcoml
sarl
jle
sahf
aam
idivb
data16
mov
inc
lret
lock
jcxz
ds
icebp
mov
into
xchg
hlt
ds
mov
pop
fwait
cmc
push
aas
pop
push
dec
xchg
pop
pop
fstpl
and
cltd
xor
mov
mov
dec
mov
sub
xchg
push
jbe
add
outsl
jae
cmp
fstpl
lahf
mov
faddl
push
xor
add
adc
cwtl
and
jg
cmp
pop
lret
jne,pt
int3
test
iret
or
mov
mov
sbb
out
dec
std
pusha
pushf
mov
push
jle
push
pop
scas
into
adc
mov
inc
mov
shl
and
cmp
rorl
push
loopne
adc
data16
and
push
and
dec
ds
push
inc
cwtl
ds
cmpsl
ss
xor
scas
lods
cmp
test
aas
dec
dec
add
std
inc
sub
or
ds
mov
push
aam
shlb
sub
test
mov
ja
insb
gs
adc
add
mov
ljmp
in
or
ds
andb
cs
jge
aad
fidivrl
mov
testl
jbe
mov
cmp
lret
adc
ds
xchg
shll
in
fucomp
inc
mov
xchg
fcom
stos
mov
inc
popf
jl
cmp
xor
fisttpll
adc
cmpsl
movsl
sti
mov
or
push
arpl
pop
cltd
push
stc
xorb
popa
add
push
inc
jmp
loop
xor
dec
iret
jle
in
stos
xchg
das
mov
mov
lea
adc
pop
fildll
push
inc
xchg
xchg
cltd
iret
test
ds
in
xchg
ret
xchg
add
fs
cltd
mov
jno
in
xchg
inc
mov
inc
andb
jae
mov
sub
ds
imul
jo
idiv
lcall
int3
call
gs
lahf
inc
xor
jo
push
adc
cli
or
test
rorb
popf
push
mov
add
fldl
int
in
push
fsubs
ds
arpl
mov
repz
pop
es
jge
lea
mov
mov
lcall
push
cld
cwtl
push
fwait
xor
xor
lds
es
push
dec
ds
scas
jg
mov
and
cmpb
mov
dec
cmp
fstpl
fildll
inc
mov
push
ds
ljmp
xor
jbe
sbb
or
push
pushw
sbb
icebp
mov
mov
inc
mov
mov
out
insb
mov
push
loopne
sti
mov
insl
in
or
adc
inc
adc
cmp
fcmovbe
sbb
fdivrl
sub
out
xor
push
xor
dec
shlb
jle
mov
sbb
arpl
subl
scas
adc
test
pushf
lret
fisttpll
or
xor
add
mov
pop
xchg
pop
push
test
pop
add
lods
xchg
xor
movsl
lods
sub
sub
xor
dec
sbb
jb
arpl
mov
test
sarb
mov
pusha
out
ds
stos
xchg
jno
icebp
fwait
cmp
int3
add
xchg
mov
mov
add
xchg
inc
imul
mov
sbb
mov
ds
cmpsl
mov
gs
xor
mov
push
arpl
jp
cltd
popf
ds
lret
mov
mov
sahf
mov
pop
lods
push
enter
xchg
jmp
sti
sarb
jb
sub
jno
sub
ljmp
fwait
xchg
jo
adc
ds
dec
or
inc
jl
dec
ds
imul
in
cld
not
ds
iret
scas
xchg
outsb
ds
test
ficompl
mov
push
inc
mov
jbe
xlat
fnstenv
pop
xchg
lock
jecxz
xchg
mov
cmpl
xchg
pusha
movsb
cwtl
ds
test
pusha
or
fcomp
dec
out
ja
aas
xchg
nop
inc
test
jge
das
movsl
ljmp
xor
imul
aam
inc
add
sub
push
pop
in
or
sarb
filds
xchg
out
pop
xchg
mov
xchg
rcr
cmp
cwtl
dec
jle
inc
fnstsw
jbe
fstpt
aam
call
sub
jle
or
lahf
mov
pop
addr16
jmp
xor
or
stos
xchg
std
cltd
mov
ror
jns
dec
ljmp
lret
fdivs
lahf
ds
int3
orl
jb
jne
aad
and
xchg
mov
and
jp
xor
sbb
mov
in
fldl
inc
inc
rcrl
lret
or
jp
inc
scas
fnsave
push
ds
in
pusha
fsts
add
outsl
fcompl
mov
sbb
fwait
mov
pusha
sahf
popa
dec
jg
aas
jo
stos
and
lret
lods
pop
xor
test
in
jge
ret
fnsave
cld
fsubs
jle
cmp
pop
or
jno
mov
cmp
cmp
movsb
or
mov
orl
insl
jmp
ds
bound
jbe,pt
aad
testb
jo
lock
sub
dec
lods
shlb
fwait
test
cli
inc
gs
aam
test
insl
dec
adc
pop
popf
or
mov
sahf
adc
mov
pop
or
jg
cld
cmpsb
pusha
sub
mov
pop
outsb
nop
lea
mov
outsb
or
push
cmpsl
fsubrs
cmp
call
ds
pop
ret
iret
pop
ds
add
rorl
out
out
out
movsb
shll
inc
in
pop
sti
jnp
repz
jne
fisttps
fidivrl
in
sbb
repnz
jg
and
xchg
mov
ret
mov
test
pop
push
stos
xor
ds
jl
std
ds
mov
jne
push
mov
orl
scas
nop
jb
xchg
cs
jp
repnz
cmp
mov
jge
pop
enter
pop
adc
stc
jb
push
aas
out
nop
push
xchg
inc
mov
jp
call
les
mov
fdivl
sbb
gs
mov
mov
jbe
mov
ds
push
lret
mov
cld
push
jle
jno
out
pop
push
ds
sub
ds
sub
ss
test
dec
mov
shll
adc
outsb
push
add
xor
pop
mov
loope
xchg
fisttpl
rol
rcl
repz
jle
movsb
and
add
mov
hlt
sarb
jnp
loopne
xchg
adc
daa
cmp
andb
cmp
jecxz
ss
xchg
pop
pop
scas
adc
cltd
in
movsl
adc
mov
jle
pusha
mov
inc
jns
jmp
adc
inc
mov
ds
cld
test
push
pop
and
in
loope
rolb
xor
xchg
inc
xchg
pop
ds
out
mov
cmp
repz
insl
and
lock
mov
test
fs
bound
mov
sahf
or
arpl
imul
adc
sbb
lock
call
aam
mov
sarl
add
mov
jmp
rcrb
fcmovnu
clc
outsb
ret
cmp
dec
mov
sub
or
lods
lahf
push
xchg
jb
imull
jns
popf
loope
ds
inc
mov
mov
push
pushf
popf
mulb
and
dec
sub
out
inc
pop
adc
sub
adc
ds
push
lret
or
aas
test
xchg
mov
bound
ds
dec
xor
mov
sub
test
adc
add
mov
stc
push
inc
idivb
lcall
popf
xor
and
cli
ds
clc
ja
sahf
inc
lods
inc
mov
aas
jae
jle
data16
gs
mov
outsl
imul
or
cltd
cmc
out
ja
xchg
push
pop
flds
add
movsb
shll
cld
mov
jge
sub
movsl
pushf
movsb
outsb
js
mov
inc
stos
ds
loope
xchg
jo
mov
lods
call
pop
mov
cs
in
test
push
movsb
jb
mov
ficoml
les
notb
mov
lods
out
mov
sbb
jne
push
jno,pt
sahf
les
out
int3
xchg
ds
inc
sub
mov
jp
popf
push
das
dec
xor
sahf
nop
scas
pop
lahf
push
or
mov
mov
lock
mov
mov
lcall
lds
inc
dec
and
outsb
je
inc
ds
jecxz
mov
xchg
inc
lahf
mov
cmp
sub
ds
loop
push
sbb
cmp
inc
xchg
fsts
dec
ds
out
dec
mov
inc
adc
outsb
test
lret
negb
lcall
rcll
pop
pop
ja
ds
loopne
push
insl
pop
mov
cmp
xorl
lcall
mov
cmc
cltd
mov
xorb
decb
jmp
add
bswap
pop
mov
movb
test
xor
mov
add
push
repz
pop
cmpsb
ds
cmc
or
sub
push
sbb
daa
jp
js
je
ljmp
mov
push
push
ds
fldenv
popa
fmull
mov
adc
ds
dec
in
push
jg
mov
ds
int
lods
movsb
test
pushf
in
cmc
sbb
mov
push
mov
fs
fmul
pop
xor
xor
pop
push
sahf
push
mov
inc
cmp
stos
xchg
inc
outsb
lods
jbe
sarl
outsl
shll
cmp
ret
push
add
jne
rclb
stos
lock
movsb
xchg
adc
movsw
jne
mov
mov
sti
andl
inc
sub
popa
ljmp
sbb
cmc
adc
push
pop
inc
leave
or
cli
cltd
push
test
cmp
pop
in
xor
outsb
fcoml
and
mov
pop
cmp
ss
jno
jg
and
add
xor
cwtl
add
inc
dec
mov
test
inc
jecxz
mov
add
mov
mov
jne
add
mov
ds
adc
dec
adc
sub
mov
sbb
xchg
mov
pop
cwtl
add
popl
ds
add
testb
mov
loope
fistl
pop
inc
icebp
ds
jns
daa
rcrb
push
mov
add
pop
push
cwtl
pop
ds
xor
aad
mov
loope
cmpl
shr
pop
mov
cmc
stc
leave
mov
ds
stos
xor
out
cltd
fsubr
adcl
shrb
add
sub
lods
aas
aad
std
shl
xchg
push
pusha
out
ds
push
incl
fidivrl
and
xchg
ss
movsb
int
ds
and
in
dec
mov
lods
dec
addb
push
lcall
sub
shl
inc
mov
jg
mov
sub
sbb
cmpsl
sbb
jle
mov
clc
pop
bound
popa
fidivrl
lret
xor
and
sahf
add
add
mov
mov
nop
mov
mov
insl
lods
inc
dec
std
xchg
jle
in
cmpb
xor
sub
or
call
imul
sub
imul
pusha
lods
mov
inc
and
out
jle,pt
std
fmul
mov
mov
mov
sbb
cmp
fldl
stos
mov
adcl
fwait
pop
or
aaa
push
add
cmpsl
es
xchg
push
adc
flds
mov
ds
jno
jne
dec
inc
popf
cli
xchg
clc
jge
xchg
les
out
dec
and
test
jle
inc
jle
sbb
push
insb
inc
es
leave
push
int
add
pop
jle
aas
lahf
test
cs
mov
jl
pop
dec
hlt
movsl
mov
rol
out
in
sahf
sbb
daa
ds
or
or
or
sub
cld
aaa
into
subl
sub
jge
sub
jg
test
rorb
pusha
outsl
lods
ds
mov
sub
sti
mov
jle
jecxz
inc
aas
mov
mov
and
lods
pusha
ret
mov
jg
dec
push
pop
fdivrs
adc
xor
xchg
negb
inc
sbb
int
scas
es
add
js
sahf
push
movsb
stos
xor
sub
pop
nop
lret
push
lret
sbb
jle
jb
call
jae
and
pop
mov
lcall
mov
js
mov
je
sbb
sbb
ss
adc
cld
sbb
ds
mov
push
lds
xchg
stos
cmc
mov
int3
jle
mov
sarb
incl
inc
rcrl
add
sub
push
mov
shrb
call
pusha
cmp
sub
out
jle
add
aam
mov
ds
push
aaa
mov
bound
add
icebp
sbb
iret
decl
scas
mov
or
inc
cmc
lret
dec
hlt
or
enter
std
leave
lea
jmp
stos
es
idivl
ja
popa
dec
ds
imul
sbb
es
test
lods
mov
testl
ds
das
call
mov
popa
aad
cs
ret
mov
pop
outsb
pushf
add
sbb
pop
js
sbb
push
lods
ds
int
inc
cwtl
lret
hlt
cmp
sbb
mov
sar
mov
push
add
mov
cld
ss
mov
mov
fistpl
cltd
ds
cmp
sub
cmp
je
and
fstp
icebp
sarb
push
inc
in
inc
mov
popa
ret
testl
xor
jnp
or
aad
ljmp
push
rorb
mov
fabs
mov
jb
xor
jle
pop
cwtl
push
adc
pusha
mov
or
ds
cld
mov
ds
xchg
cltd
adc
cli
ret
adc
mov
aam
inc
jne
push
ds
add
jmp
leave
inc
mov
sub
dec
xor
mov
ds
add
std
nop
xor
and
in
dec
mov
jno
push
cld
xor
jg
test
addl
mov
push
mov
sbb
dec
icebp
add
ss
divl
ret
fst
mov
sub
mov
int3
sbb
and
pop
push
add
movsl
inc
push
and
dec
mov
jae
cwtl
pusha
je
push
lcall
pop
pushf
xchg
das
sbb
sbb
jle
ljmp
push
icebp
adc
mov
jo
ja
mov
adc
popf
xor
ljmp
or
dec
adc
mov
jb
in
sub
ljmp
outsb
test
add
sahf
mov
mov
ds
shlb
imul
scas
push
pusha
sbb
pop
jno
xor
mov
mov
push
add
mov
or
imul
loope
mov
mov
xchg
shr
xchg
push
or
dec
pop
ds
nop
addl
ds
jnp
scas
in
ds
dec
or
push
test
jle
sbb
fmuls
jnp
ds
sub
jmp
icebp
loop
ds
push
jb
insb
xchg
add
fnstsw
add
cld
jno
jmp
dec
push
lret
xor
mov
inc
adc
ucomiss
dec
xor
adc
inc
push
ja
inc
sub
out
or
ds
push
sbb
adc
test
mov
addr16
dec
rorb
outsb
outsl
xchg
lods
cmp
dec
imul
mov
insb
dec
loop
inc
jecxz
ret
int
jge
push
xchg
push
fldcw
das
jae
aad
ds
jg
lahf
and
cmc
dec
ds
pop
jo
scas
sub
and
mov
jle
fimull
clc
je
int3
into
inc
push
xor
lahf
add
inc
mov
test
fnclex
mov
lods
shl
lret
iret
addl
pop
sahf
cwtl
test
inc
xor
mov
in
mov
lahf
xchg
insl
test
insl
icebp
mov
xchg
jp
xlat
addr16
cltd
ds
in
idivb
in
add
push
mov
adc
push
lahf
mov
loope
leave
rolb
jle
mov
mov
and
add
mov
cmp
in
out
jo
imul
mov
ds
xor
sub
cmp
push
sbb
sub
out
adc
inc
and
cmp
dec
mov
push
jb,pt
cmpsb
dec
mov
jo
xor
adc
inc
push
int
ds
and
jl
nop
inc
ds
shl
movsb
mov
gs
fiaddl
es
outsl
ds
lods
fwait
xor
ds
popf
clc
mov
jns
mov
loopne
daa
jmp
aas
pop
fsubr
pusha
dec
mov
repz
xor
jle
lods
ja
movsl
mov
and
loop
xchg
fwait
mov
push
xchg
rolb
les
test
add
push
dec
jecxz
jno
scas
aaa
out
fs
daa
adc
filds
fwait
ds
xchg
adc
adc
add
inc
xchg
fstpt
ds
dec
push
sahf
push
dec
ds
daa
add
inc
lret
jge,pt
int3
jnp
push
rcrl
add
mov
inc
dec
ds
inc
repz
mov
mov
xchg
scas
mov
or
mov
and
sub
adc
scas
gs
lcall
push
movsb
jl
mov
inc
loop
inc
mov
vmwrite
fmuls
xor
or
mov
mov
faddl
ja
call
ds
pop
jns
ret
xor
dec
je
inc
rorb
xor
jmp
dec
mov
push
jp
xchg
mov
inc
push
mov
sub
data16
ds
enter
push
lcall
push
jle
dec
dec
into
addl
aaa
out
jae
ds
push
sub
adc
add
mov
cmp
sbb
mov
jle
bound
cmpsb
or
push
popf
add
notl
dec
sub
jge
insb
jle
clc
cld
in
ret
adc
fldenv
inc
push
ds
jne
mov
daa
jmp
adc
aad
ds
lret
jmp
adc
sbb
xor
dec
fstps
dec
sub
lcall
jno
sbbb
repz
sbb
les
jb
fsubl
jb
in
test
inc
jns
and
aas
lret
fidivrl
push
sbb
in
or
loope
cmp
cmc
cwtl
sti
xchg
sub
popf
dec
inc
mov
mov
mov
push
insb
xor
dec
ffreep
fbstp
inc
or
xor
and
mov
loopne
outsb
lret
jp
mov
dec
push
push
ret
cmp
loope
in
aaa
insl
jge
mov
bsr
sti
imul
call
jbe
cmc
ds
jmp
out
or
fnstsw
lea
push
jno
mov
fsts
cmp
dec
popf
pop
psrlw
int
hlt
lret
jmp
divb
ds
iret
arpl
inc
mov
les
and
ds
adc
jno
mov
ficoml
cmc
fwait
mov
stc
inc
mov
jmp
lods
xchg
nop
bound
sbb
dec
sahf
dec
in
ljmp
dec
sbb
adc
push
cmc
ds
mov
lods
jbe
sbb
inc
or
loop
mov
jns
cltd
clc
mov
mov
ds
imull
ret
xor
lcall
ret
test
sbb
mov
dec
inc
ds
cmc
addr16
mov
shrb
lahf
mov
push
not
adc
mov
aas
inc
adc
in
cltd
fisubrs
mov
dec
xchg
pushf
les
dec
in
icebp
sarl
jbe
pop
dec
int
psrad
jns
subb
and
xchg
aaa
or
cmp
je
into
xchg
inc
movsb
dec
push
aaa
setge
adc
mov
mov
push
ljmp
loope
sub
int3
inc
popf
add
ret
mov
shl
lea
sahf
xchg
lcall
xchg
mov
das
pop
ds
les
or
push
pop
sub
pop
fdivrl
icebp
dec
jp
push
lods
mov
cmc
aad
xorl
mov
jge
mov
mov
es
cs
xchg
ret
in
lahf
std
ds
dec
sub
shrl
ds
push
xor
cmp
cmp
mov
pop
sub
sti
mov
add
das
pop
out
xor
movsb
fstpl
fs
in
inc
stos
inc
imul
mov
adc
ds
lret
mov
stos
sbb
into
push
xchg
mull
ret
pop
lods
dec
jno,pt
mov
jle
or
out
xlat
jl
loopne
lods
lds
jg
enter
and
int
adc
ds
movsb
mov
jge
lds
icebp
sbb
pop
daa
addl
inc
mov
push
lcall
jl
dec
ljmp
in
sti
fstps
push
jae
repnz
hlt
lcall
and
add
cmp
cltd
xlat
inc
add
pop
cmp
inc
out
ds
sarb
into
mov
es
leave
jg
pop
mov
addr16
cmp
mov
out
ds
rorl
ds
fistl
dec
jl
push
add
ds
or
push
mov
add
push
lods
xor
aad
inc
fnstenv
imul
mov
pop
jo
aas
loope
lods
ljmp
cmp
dec
popf
pop
push
rcrl
inc
push
and
and
ja
int3
sub
mov
pop
imul
ds
aad
lret
cmc
nop
xchg
dec
rolb
rcll
mov
adc
jg
adc
cmp
pop
aas
or
inc
pop
mov
clc
xor
pop
jb
jle
cmp
or
sbb
iret
pop
xchg
mov
jb
lods
cmpsl
cmp
and
push
inc
xor
ds
xor
and
sub
xlat
mov
cwtl
mov
mov
jno
mov
sbb
ds
lods
sbb
jae
add
daa
add
xor
imul
bound
pop
jge
lret
mov
xor
je
sub
test
xor
xchg
mov
rclb
and
mov
mov
roll
pop
adc
push
fisubrs
sarb
jp
mov
mov
xor
in
daa
jp
ds
mov
decb
stos
pop
enter
pop
xor
and
mov
jmp
push
lods
rorl
pop
loop
add
insb
outsb
testl
stos
jle
inc
loopne
ljmp
lcall
add
arpl
idivb
cmpsb
jbe
sub
ds
sbb
mov
xor
pop
std
pop
sub
sbb
out
xchg
lods
inc
outsl
jl
leave
ds
or
dec
xor
mov
test
push
cmp
ds
sbb
cmpsb
int
data16
idivb
out
add
jae
scas
bound
mov
pop
out
ds
sub
bound
jle
mov
lock
mov
mov
es
sub
lcall
mov
mov
mov
mov
add
ds
movsb
outsl
clc
mov
jb
mov
ds
inc
ds
movsl
pop
mov
cwtl
jle
jecxz
inc
mov
xorl
in
push
aaa
repz
fwait
sub
jbe
lods
arpl
jmp
in
incb
mov
xchg
aaa
jecxz
cmpsb
and
iret
mov
sub
xor
jb
imul
mov
add
les
ds
popf
jns
xchg
loope
mov
int3
pushf
aam
jno
addl
add
sbb
aad
dec
hlt
rcrl
xchg
iret
ds
or
aad
sub
push
jb
mov
scas
popf
push
dec
push
mov
imul
inc
inc
pop
cmp
dec
ljmp
rol
test
and
movsb
jle
imul
fbstp
sbb
mov
pop
pop
pop
ds
std
xor
inc
push
mov
inc
nop
pusha
lods
clc
ds
pop
adc
loope
xchg
ds
jp
push
cwtl
filds
mov
scas
xchg
ds
xchg
dec
sub
jle
loop
cmp
sbbb
pop
arpl
popa
jae
xchg
out
add
xor
call
push
jp
loop
popa
mov
xor
ss
mov
xchg
pushf
movsb
cmp
cmpsl
mov
insb
mov
jmp
xor
add
imul
fdivrs
jnp
shlb
xor
mov
negl
push
inc
or
push
push
push
aam
ja
loopne
inc
dec
shrd
inc
leave
or
call
movsl
mov
iret
inc
fldt
repnz
outsl
fimull
js,pt
mov
push
pop
lock
jp
xchg
aaa
flds
xor
xor
cmc
adc
in
ds
jmp
inc
bound
out
ds
je
aam
xchg
pop
decl
leave
test
xchg
aaa
jmp
jne
in
sub
pop
xor
cmp
icebp
cmpsb
sbb
dec
outsl
xchg
loope
iret
adc
ja
into
ds
lea
bound
cmp
aad
out
fidivrs
jmp
loop
sub
sbb
xor
stc
adc
ds
sub
and
xor
ds
sbb
inc
pop
dec
or
clc
jae
add
mov
test
dec
push
adc
lods
movsl
nop
adc
mov
hlt
push
adc
stc
cmp
push
stos
cmc
leave
ds
and
sub
inc
cmpsb
call
and
mov
push
loopne
sub
xor
int
in
jge,pt
dec
das
sbb
lods
loopne
jne
mov
in
nop
push
xorl
ja,pt
dec
fsts
sub
repz
push
add
dec
divl
push
cmc
pop
imul
ds
sbb
dec
mov
jecxz,pt
or
and
push
mov
sbb
lods
pop
push
jno,pt
loope
mov
stos
xorb
mov
bound
cltd
push
aad
cmp
std
loop
pusha
sbb
jg
dec
ja
mov
rcrb
sub
aaa
icebp
sbb
das
xorb
pop
and
and
push
xchg
lock
idiv
xchg
sarb
addr16
fsubl
int3
aam
mov
test
aad
pop
xchg
xor
cwtl
sub
pop
imul
sahf
cs
ds
in
shlb
push
popa
xchg
imul
pop
and
hlt
push
ds
icebp
mov
in
cmp
cmc
lea
fs
add
add
jle
test
inc
or
inc
push
mov
in
cmpsl
loope
adc
dec
loopne
mov
or
ljmp
cmpsl
xlat
fldcw
jg
jbe,pt
mov
jmp
ret
es
mov
ss
cmpsl
ljmp
push
in
inc
ds
mov
mov
ds
fdivrl
repnz
sbb
mov
xchg
jae,pt
adc
leave
imul
test
mov
inc
loope
ds
push
nop
out
mov
mov
outsb
push
or
pushl
pop
repnz
push
repz
mov
dec
or
sbb
xchg
ds
dec
dec
inc
mov
xchg
mov
in
cltd
imul
mov
push
cltd
push
sbb
sub
fildl
lret
fs
add
std
leave
and
arpl
xchg
xchg
xchg
jnp
or
cld
jmp
shlb
sub
jl
shlb
decl
jo
jo
add
movsl
inc
ret
sub
lds
icebp
sbb
inc
ds
jnp
lea
inc
add
inc
dec
mov
cmp
mov
dec
stos
popa
pop
xor
pusha
cmpsb
lea
arpl
jge
or
test
jns,pt
push
xchg
xlat
popl
ds
dec
fmuls
das
faddl
and
insb
xor
pop
pop
push
mov
icebp
popa
fwait
mov
jno
cmpl
adc
push
daa
and
dec
fsts
adc
cmpsl
ds
aaa
pop
fidivs
scas
add
mov
xchg
aad
or
xor
lods
imul
lods
shll
mov
shlb
inc
add
lds
stc
push
icebp
xchg
dec
leave
sub
loopne
enter
xor
inc
orb
lock
imul
inc
ds
cmp
jae
mov
ds
sbb
mov
jle
cmp
aaa
mov
lods
sub
fildl
aam
movsb
lret
call
in
repz
fidivl
pop
test
imul
in
scas
lods
bound
pop
push
inc
cmpl
dec
ja,pt
out
lret
jle
xor
insl
mov
lahf
sbb
mov
cmp
pop
sbb
stos
idivl
popa
jge
or
and
jecxz
ds
jp
lock
mov
add
ds
in
in
push
in
ja
ds
std
mov
mov
jo
rol
xchg
ds
xchg
sbb
std
sarl
fnstenv
pop
add
in
dec
jle
lods
int3
vdivss
popl
jle
ds
sub
mov
fxch
dec
xchg
fdivrs
lret
push
cmp
dec
push
das
stos
xorl
sbb
shl
ds
cmp
dec
mov
mov
push
jl
lcall
js
cmc
in
jmp
clc
cmp
ja
xchg
jb
ds
mov
lret
sbb
sub
sbb
xor
cmpsl
pusha
jge
xchg
addb
and
stc
jmp
jno
loop
mov
in
mov
ds
ret
xchg
fildl
push
dec
stos
add
pop
std
in
jmp
sbb
cltd
jns
in
adc
shlb
int
add
inc
mov
xchg
push
inc
xor
jb
mov
pusha
ret
popa
adc
sbb
popf
in
adc
out
and
cmp
lcall
xchg
dec
ds
lret
push
ds
scas
arpl
push
sbb
lods
pop
dec
scas
loope
dec
and
jnp
mov
sbb
lcall
fdivrp
mov
xor
fstpt
aad
gs
pop
faddl
int3
movsb
cmp
cmp
and
pop
out
push
ds
mov
dec
dec
push
orb
pop
jnp
dec
out
push
mov
movsb
aas
sub
imul
aad
xorb
jae
pop
ds
mov
mov
lods
jne
xchg
push
dec
js
dec
adc
sbb
fdivrs
lods
rcll
jbe
dec
out
mov
iret
pop
jp
ret
into
ds
mov
call
movsb
aad
jle
std
mov
mov
lods
adc
push
sbb
ds
jb
sti
std
in
mov
int3
cmp
stc
fsubl
shlb
add
sub
aas
sahf
das
ds
inc
xchg
sub
jecxz
jecxz
cmpsl
push
out
cmp
and
fildl
lods
dec
xor
insl
pop
cli
or
dec
dec
xor
and
int
js
pushf
cli
sarb
xchg
add
cmp
loopne
xor
pop
cwtl
pop
outsb
es
and
mov
mov
jns
mov
outsl
jle
inc
xor
pop
leave
mov
cmp
sbbl
pop
mov
jnp
inc
jbe
xchg
ds
in
bound
ljmp
xor
push
push
lcall
xlat
cvttps2pi
shll
push
pop
mov
movsb
daa
in
sub
filds
icebp
inc
pop
mov
lret
pop
jge
cli
xchg
loope
mov
shl
mov
add
test
or
ds
mov
cld
cwtl
mov
cltd
jno
jmp
cmc
rolb
mov
arpl
shlb
out
xchg
ds
and
mov
cmp
cwtl
jmp
jle
sbb
lock
aam
ds
imul
ljmp
stos
cmpsl
pushf
aaa
dec
jne
add
repnz
and
xchg
jle
mov
insl
mov
int3
dec
and
jl
ret
dec
movsl
ds
jno
push
inc
lahf
int3
and
lods
or
outsl
add
adc
popa
ds
repnz
inc
pusha
or
jb
or
mov
jmp
addr16
stos
outsl
outsb
insl
dec
sarl
mov
fldl2t
adc
out
rcl
andl
loope
mov
rolb
test
xchg
sub
sbb
lock
inc
mov
push
cmc
mov
rorl
xor
nop
loop
dec
repnz
xor
in
jge
mov
popf
movsl
je,pt
adc
inc
add
mov
jae
sar
lcall
cmpsb
aam
aas
cli
jne
sub
pop
out
lods
ds
mov
orb
popa
dec
test
jbe
xchg
jle
cltd
dec
jmp
decl
movsb
and
repnz
xlat
or
clc
insb
add
ds
push
cwtl
test
xor
js
es
ret
notl
imul
loopne
je,pt
mov
xor
mov
jae
enter
pop
sbb
lcall
sbb
xlat
aas
incl
add
enter
lret
mov
bound
aaa
pusha
dec
jl
ds
sub
insb
dec
cmp
lret
dec
add
push
xchg
ds
ficoml
mov
ljmp
ja
je
cmp
cmp
and
xchg
cltd
mov
jns
mov
mov
sub
and
cmp
ds
adc
inc
ds
xor
loopne
enter
mov
jp
mov
ret
mov
mov
fwait
sub
xchg
in
mov
incb
aam
fsts
sub
in
mov
dec
cmpsb
call
cmpb
jb
mov
push
mov
pop
ds
test
cmp
mov
xchg
dec
jbe
mov
ds
xor
mov
push
popf
pop
cmpsl
pop
mov
push
lods
pop
das
inc
ds
pop
add
inc
adc
sbb
bound
mov
push
jg
xchg
ds
inc
mov
lret
sub
fwait
jb
adc
push
jbe
sahf
mov
cli
fwait
pmulhuw
mov
jle
ljmp
cwtl
push
int3
jb
je
or
ds
sub
fnstenvs
negl
ds
jmp
jno
mov
jl
movsl
jle
sbb
mov
ds
je
cltd
mov
outsl
imul
fs
rclb
inc
sbb
lods
jecxz
xchg
test
test
fdivrs
imul
cli
or
ds
cmc
pushf
pop
stc
mov
cmpsb
rcll
dec
imul
loop
adc
jle
or
pop
aas
and
push
inc
out
mov
cmp
sbb
aam
mov
loope
push
imul
loopne
xchg
xchg
test
pop
lret
jb
jns
ds
lds
xor
mov
movsb
and
dec
adc
adc
cs
dec
out
ds
daa
jae
mov
nop
ja
inc
cmp
ds
das
dec
aam
mov
cmpl
test
ds
stos
into
or
pop
cmp
sbb
and
mov
cmc
icebp
push
add
dec
pusha
pop
pop
mov
sub
faddp
rol
int
popa
dec
mov
dec
call
mov
es
inc
iret
gs
sub
jl
lcall
fdivl
arpl
mov
sbb
into
jl,pt
mov
sub
hlt
sub
or
mov
aam
fsts
jmp
dec
pop
cwtl
in
jo
dec
idivb
into
rclb
fnstsw
or
std
mov
sub
pop
mov
add
push
or
or
insb
jecxz
sub
sbb
push
test
dec
test
add
and
fcomps
lods
xchg
sti
adc
jle
loopne
jecxz
test
xlat
popa
repz
mov
mov
sub
hlt
pop
loope
or
ds
jns
mov
movsl
mov
push
xchg
and
sub
dec
popf
push
lret
mov
out
fstpl
cld
es
adc
sarb
loope
inc
lcall
push
adc
int3
in
ds
pop
leave
lock
xchg
bound
inc
js
faddp
lods
xor
imul
sbb
mov
and
mov
loopne
mov
pop
sahf
adc
arpl
dec
inc
pop
pop
and
loop
mov
pop
and
mov
sub
sbb
sbb
jle
and
xorl
pop
push
stos
adc
add
pop
mov
inc
sarb
sbb
cli
lods
fisubrl
add
stos
mov
mov
insb
sbb
inc
nop
mov
adc
sbb
push
outsb
pop
push
dec
cs
mov
leave
pop
jae
fs
xchg
cmp
sub
or
push
pop
pop
mov
sbb
cmc
xor
push
push
aad
popf
cltd
loope,pt
test
cmp
stc
ds
or
adc
loope
push
mov
icebp
xchg
mov
shlb
xor
pop
fsts
mov
fwait
lahf
hlt
decl
dec
push
inc
mov
cmpsl
sub
inc
or
push
push
aaa
push
jb
mov
fisttpll
add
dec
cmp
or
mov
pop
mov
push
sbb
or
cs
add
mov
xchg
in
popa
daa
and
or
ds
jecxz
inc
push
in
lds
cltd
xor
test
lods
push
fildl
jb
adc
arpl
in
push
dec
fbstp
push
xlat
sub
repnz
dec
sbb
dec
cmp
adc
xchg
and
cld
push
aaa
mov
test
push
mov
or
aad
inc
jge
ds
scas
jl
pop
lds
or
ret
ja
ds
loope
mov
les
fistpl
int3
arpl
or
mov
push
iret
and
mov
push
aam
js
sar
cmp
imul
cmp
movsl
mov
sub
inc
cmpl
in
in
xchg
stos
fidivrs
jg
jo
jl
inc
test
ds
std
loopne
lods
clc
ds
in
imul
inc
xchg
xor
or
jmp
das
mov
add
jl
mov
pop
xchg
mov
lods
sbb
sbb
in
jno
jne
leave
ds
xorb
add
mov
mov
and
jne
lcall
jno
mov
iret
ds
xchg
test
loop
mov
add
mov
xor
lcall
cmc
movsb
push
cmp
xchg
and
fildl
mov
ds
fcomps
ja
fldcw
roll
mov
enter
push
dec
xor
and
cmp
shrl
hlt
adc
xchg
mov
movsb
jns
mov
or
int
aam
jmp
loopne
popa
clc
cwtl
sbb
mov
std
loop
dec
fs
ret
pop
aas
rolb
fsub
jns
push
js
aam
dec
xlat
dec
lret
mov
ds
xchg
mov
xor
lods
mov
pop
fs
iret
addr16
mov
out
cs
fwait
pushf
data16
call
push
mov
enter
push
push
loope
jge
sbb
pop
int3
pop
rol
ds
in
push
aas
jnp
mov
push
into
xchg
aas
rcrl
cwtl
lahf
mov
fdivrs
add
sbb
data16
ds
faddl
dec
cltd
lods
pop
aad
add
fnstsw
xor
mov
mov
lret
fdivp
push
test
push
pop
int
ds
hlt
adc
aaa
ljmp
inc
aam
inc
repnz
fdivrs
es
and
ficoml
in
je
push
jge
aas
leave
add
int3
dec
jecxz
daa
xchg
push
mov
sahf
mov
not
pop
ss
mov
in
insb
xchg
bound
stc
test
xchg
push
xor
push
aas
loop
jo
ds
inc
sti
inc
xchg
push
int
cmpsb
and
jecxz
sub
es
shll
sub
pushl
ret
int
jp
popa
addr16
leave
jle
outsb
ljmp
ds
sar
xchg
popf
hlt
ds
mov
mov
push
insb
push
test
jo
jae
scas
lahf
jno
mov
lds
push
insl
dec
jo
mov
ss
outsb
sub
jne,pt
xor
aad
scas
add
lret
inc
push
push
lds
in
stc
ds
sub
and
cmc
add
push
lods
xor
andb
das
in
fidivs
aam
mov
mov
fwait
ds
pop
imul
pop
incl
inc
shrl
ds
adc
xchg
movl
pop
cmc
ds
push
xchg
cmp
jne
ds
inc
loopne
and
push
xor
inc
int3
jle
insb
add
xor
jbe
xchg
dec
pop
add
aaa
cmp
les
lods
in
lods
xchg
shrb
pop
imul
cmpsl
aas
pop
pushf
fcompl
inc
mov
xchg
push
stos
sbb
cmc
and
ds
loope
ret
int
sub
sahf
push
ja
and
mov
lea
jno
mov
loopne
ds
repnz
mov
pop
cltd
outsb
out
jp
mov
xor
repz
shrb
add
es
pop
and
jae
imul
sub
or
rcrl
mov
mov
ds
fmul
loope
jns
and
dec
fucom
mov
sbb
movsl
sub
mov
xlat
push
add
insl
mov
xor
outsb
xchg
fwait
sub
mov
jle
fst
inc
jecxz
lret
push
into
inc
jle
dec
scas
bound
repnz
dec
xor
adc
aas
lcall
push
ds
xchg
lret
dec
adc
in
loop
mov
int3
mov
shlb
or
push
stc
mov
dec
call
xor
scas
lret
imul
jo
push
mov
mov
mov
pop
push
push
sbb
lret
fs
mov
push
scas
xchg
jnp
adc
adc
loop
shll
test
mov
pop
out
xchg
adc
or
inc
ds
pop
add
mov
test
cmpsb
repz
repnz
ds
push
ds
xor
pop
push
nop
mov
sub
jmp
xchg
inc
cmpsl
les
fs
test
jl
xor
sub
jo
xchg
pop
mov
aaa
sub
push
and
jnp
jecxz
ret
movsl
dec
push
sbb
outsw
lahf
aas
inc
lret
cmp
dec
setge
dec
imul
loop
hlt
cmp
adc
push
inc
ja
xor
sbb
inc
push
mov
xlat
stc
pop
mov
sub
in
xchg
icebp
mov
fstp
ds
mov
and
outsb
dec
add
lret
push
cmp
shrb
decl
ds
fisttpll
jbe
dec
mov
xchg
sbb
aas
stos
inc
fstl
pushf
push
add
ds
lods
jg
adc
pop
sub
cs
mov
add
sti
ds
push
cmpsb
mov
cmp
adc
outsb
fisttps
jg
xor
mov
ds
inc
pop
mov
cmpsb
dec
inc
dec
inc
mov
xchg
int3
inc
pop
test
sub
mov
pop
std
cmp
push
pushaw
dec
sub
jle
sub
adc
or
imul
add
ja
stos
mov
mov
or
mov
adc
insl
frstor
filds
pop
dec
out
adc
into
xor
pop
xor
cmpsb
sub
es
movsb
stos
push
lcall
out
cs
mov
inc
jb,pt
lahf
xor
shr
inc
test
mov
push
pop
push
sarb
mov
mov
ds
idivb
xchg
loope
xor
sbb
push
aas
mov
fabs
xchg
push
jp
cwtl
in
nop
xor
jge
push
out
mul
sarl
adc
jne
add
mov
rol
or
inc
pop
lcall
xchg
mov
dec
push
mov
xor
outsb
cli
mov
cltd
push
fbstp
test
shlb
mov
mov
xchg
pop
enter
ds
fcmovnu
push
jmp
sub
ds
mov
nop
mov
xchg
sbb
xchg
and
in
sub
nop
mov
cmpb
rorl
sub
adc
mov
mov
adc
xor
out
push
pop
sahf
shr
rcll
xlat
loop
cmc
jb,pn
cwtl
jge
cmp
mov
mov
fbld
cmpsl
sarl
cmovb
and
cmp
push
dec
int3
les
add
test
sub
xlat
lcall
and
or
sahf
ds
dec
dec
jg
jl
mov
nop
sub
mov
mov
cmp
cmpsb
jne
jecxz
test
push
pop
mov
addl
cltd
mov
sbb
ds
addr16
add
mov
sub
mov
out
jp
pop
insb
fsubs
ud2
push
insl
imul
mov
push
dec
aas
adc
mov
aas
jle
ds
rcl
mov
aas
inc
inc
sbb
pop
and
mov
sbb
lret
addr16
ret
push
jnp
in
mov
adc
cmc
pop
sub
into
mov
ds
stc
mov
test
out
push
push
xchg
jb
rcrb
mulb
pop
in
mov
sub
negl
and
repnz
xor
dec
dec
pop
lods
pushf
jge
push
push
xchg
mov
sub
stos
sub
pop
test
mov
mov
cmp
ljmp
dec
nop
outsl
loopne
dec
cltd
mov
sbb
xor
jbe
xchg
outsb
adc
test
out
jo
mov
xor
in
push
test
stos
xchg
cmp
inc
fstpt
data16
popf
mov
mov
aaa
adc
or
in
stc
ret
orb
sbb
fsts
pop
jae
or
loopne
ds
fidivs
shll
leave
sbb
out
lods
jno
push
sub
in
xchg
pop
adc
enter
into
movsl
push
mov
push
scas
add
ds
cmpsb
pop
sbb
sub
addr16
cmp
mov
mov
ds
gs
in
or
or
add
insl
cmc
popa
jp
or
rorb
daa
mov
cmc
lahf
ljmp
dec
int3
aaa
mov
inc
test
pop
imul
pushl
add
mov
pop
xchg
fwait
jb
pop
or
or
shlb
ret
arpl
jle
lods
popf
negb
xor
pushf
push
icebp
ret
add
lret
sub
sub
add
sarb
cwtl
jecxz
ds
fs
popf
mov
xlat
leave
shll
int
jecxz
cli
pop
mov
push
cmpsl
mov
dec
jbe,pt
sbb
jb
inc
outsl
jle
cmp
ds
mov
jb
in
out
xor
sub
dec
jb
mov
popf
inc
mov
inc
adcl
aaa
mov
ret
cmc
insb
add
inc
stc
mov
mov
shrb
and
inc
bound
int3
jb
repz
in
xchg
cltd
mov
pusha
imul
xor
push
xchg
int
jmp
mov
push
inc
lock
push
mov
pop
ja
push
dec
fidivl
test
adc
add
cmp
inc
rcll
enter
test
out
adc
movsb
xchg
push
pop
sub
mov
mov
mov
sbb
popf
add
ds
mov
je
fmuls
ds
mov
cmp
mov
jo
outsb
pop
xchg
leave
ds
push
mov
add
jg
inc
pop
dec
lock
stc
jmp
push
mov
loopne
adc
les
and
xchg
xlat
mov
lahf
aam
lret
add
mov
sbb
ds
daa
add
or
orl
sarb
test
neg
add
adc
dec
mov
and
mov
in
push
ds
fdivrs
fistpl
push
lods
sbb
and
test
popa
stos
repz
dec
mov
lcall
pop
push
ficoms
fcoml
mov
and
mov
div
rorb
inc
jle
nop
das
sbb
sub
popf
pusha
jo
ds
fcoms
xchg
or
aam
jno
push
mov
add
bound
xlat
in
sbb
ds
ljmp
and
rclb
pop
dec
daa
sub
das
call
mov
pusha
push
sub
jle
xchg
push
add
xchg
int
cli
scas
mov
cmp
fildll
pop
add
test
ds
int3
cwtl
sub
movsb
aad
mov
mov
lea
sub
jb
push
scas
lcall
fidivs
int3
or
jns
mov
rolb
dec
jne
sub
sbb
add
and
jle
stos
neg
lods
test
arpl
cmpsb
int
push
sbbl
subl
mov
arpl
cmp
ds
jns
sarl
add
hlt
or
aaa
in
and
mov
lret
xchg
ds
gs
outsl
ljmp
loop
pop
cmp
xor
xchg
push
outsl
push
neg
test
xor
jle
lock
ss
push
xchg
gs
ds
and
sub
xchg
or
ret
inc
movsb
fs
bound
xchg
in
inc
fcmovbe
mov
sarb
jle
or
cld
rclb
inc
add
and
adc
call
sahf
ds
loop
fdivr
sub
jne
jmp
fnstenv
outsl
fsubs
dec
mov
out
dec
add
mov
mov
pop
testb
cmp
mov
scas
lock
ss
jle
sahf
call
and
mov
pop
jp
pop
jb,pt
nop
popf
imul
mov
or
out
jg
aas
dec
and
aam
xor
shlb
divb
repnz
jecxz
push
addr16
mov
add
imul
imul
dec
sbb
xor
fs
insl
cmp
sub
xor
in
inc
add
imul
mov
sbb
rcrb
xchg
jp
mov
mov
inc
inc
dec
push
mov
mov
xor
sarl
add
aam
sti
imul
xchg
int3
in
add
ds
pop
jl
adc
pop
cld
sub
jle
and
dec
hlt
adc
in
ret
pop
jnp
cmp
movsb
stos
push
mov
or
sub
sbb
rorl
enter
fnstenv
inc
lods
scas
adc
loop
push
loope
mov
inc
inc
jle
lea
cltd
cwtl
cmp
pop
mov
mov
pop
in
out
sbb
ds
into
jle
lcall
flds
cmp
mov
cmp
mov
leave
push
fdivrp
xor
call
dec
jecxz
jmp
fnsave
mov
int3
repnz
xchg
mov
xchg
push
frstor
inc
cmp
mov
xchg
inc
mov
popf
mov
rcrb
add
ds
xor
inc
out
mov
jnp
sub
xchg
gs
mov
mov
pop
dec
mov
test
lods
leave
jp,pn
xor
jns
loope
std
ds
fcomp
or
lahf
clc
lret
pop
out
dec
pop
ds
into
imul
outsl
ds
or
lcall
mov
adc
xor
lahf
ljmp
scas
outsb
mov
mov
xchg
jns
stos
adc
mov
out
fcom
dec
fldl
cmpl
ret
int
push
cmc
push
xchg
sbb
push
add
mov
iret
xchg
adc
enter
push
mov
mov
adcb
xorl
sub
jbe
filds
adc
jns,pt
inc
pushf
leave
clc
mov
repnz
jle
andl
lds
pop
xor
popa
xor
add
jle
inc
xchg
jo
out
stos
cld
pusha
push
dec
rorl
mov
push
icebp
scas
jge
popf
push
fstl
jle
xchg
xchg
stos
clc
and
aas
pop
mov
iret
sub
adcb
or
das
sub
fdivrp
inc
in
pop
ds
inc
dec
pushf
mov
stc
jge
mov
inc
out
cmove
pop
in
lds
mov
sti
shl
sub
lods
sub
mov
cmp
sub
mov
int
mov
je
test
dec
sub
in
outsb
insl
lret
shll
pop
jecxz
sbb
sub
jle
adc
push
cmpl
cmp
ds
inc
enter
or
ds
mov
adc
mov
pushf
pop
adc
add
jmp
insb
ds
fisubs
test
movsl
jae
dec
xchg
jb,pt
sub
cwtl
enter
xchg
popf
in
cmpl
mov
xor
pop
fldln2
sub
jnp
ds
push
jmp
xchg
sub
ds
clc
call
lds
mov
mov
mov
inc
or
arpl
dec
ds
loop
lahf
mov
push
out
imul
cmc
test
shl
dec
mov
in
dec
adc
retw
mov
adc
pop
mov
mov
fistps
das
mov
je
inc
mov
fidivrs
xchg
std
ds
mov
testb
shrl
push
aad
xor
and
ljmp
or
mov
fstps
dec
mov
test
xchg
pushf
adc
lret
xor
lds
les
ds
leave
loop
rol
xchg
xor
movsbl
call
dec
cmpsl
inc
and
flds
dec
adc
cs
xor
cmp
push
stos
in
jo
cmpsl
mov
insl
int3
pop
bound
fisubl
mov
fsubs
xlat
inc
adc
rcl
in
lcall
sbb
cmp
sbb
push
xchg
mov
mov
stc
xor
hlt
in
cmc
push
xor
jle
or
fmul
ds
insb
imul
push
push
xchg
shll
in
lret
and
mov
bound
testl
sub
aad
negb
in
xchg
int
pop
fistpl
and
lods
inc
sub
mov
lods
fstpl
shlb
pop
ds
push
push
ds
xchg
cld
jno
ja
ds
jmp
mov
add
pop
lods
mov
leave
pushf
loope
testl
lea
icebp
ds
sub
mov
cmp
adc
aam
jle
xchg
ret
loope
test
stc
adc
ds
inc
sbbl
mov
adc
lock
lret
cld
xor
repz
mov
adc
subb
jg
sub
fstpt
in
std
jge
sub
dec
mov
xor
pop
std
mov
push
push
dec
jl
sub
sub
arpl
mov
lcall
cmpb
sbb
fsts
adc
faddl
test
mov
ds
jne
jp
outsl
cmpsb
jb
push
mov
dec
mov
in
ret
mov
in
std
add
inc
rorl
ds
sbb
ret
xchg
jne
pusha
dec
stc
mov
inc
mov
sub
push
addr16
pop
push
ret
ds
sub
out
outsb
pop
test
test
xchg
ret
int3
inc
les
or
mov
jge
adc
dec
xor
jg
shll
lcall
xlat
pop
insl
adc
sar
inc
jle
ja
sub
pop
xchg
lds
inc
inc
ds
adcl
movsb
addr16
jg
scas
or
and
dec
sub
xchg
xchg
pop
imul
rcr
xchg
xchg
inc
mov
shlb
mov
popl
sbb
mov
into
ds
in
jecxz
clc
inc
stos
xor
imul
jae
pop
mov
inc
xchg
jne
push
push
outsb
ds
jg
sarb
int3
test
sbb
xchg
lahf
ds
sbb
xchg
jb
std
cmp
jno
lods
pop
mov
outsb
scas
cmp
xor
int
jle
inc
leave
push
ds
rol
jecxz
and
and
lock
xchg
aas
lahf
daa
lret
xor
aam
push
add
sub
push
cmpsl
mov
jae
adc
out
inc
bound
js,pt
sub
push
jbe,pt
dec
call
ds
bsf
rcll
out
pop
pop
stos
xor
rcl
fnsave
xchg
xchg
les
std
fimull
push
mov
jae,pt
data16
or
ficoms
sahf
inc
xchg
movb
popa
test
test
fistpl
inc
ds
in
xchg
push
fcompl
adc
fimull
push
out
xor
ds
cltd
pushf
pop
mov
in
ss
inc
inc
int
std
xor
pop
mov
lock
into
ss
int3
notb
sbb
xor
pop
aad
ja
fsubrp
aad
xor
das
mov
inc
mov
fwait
jle
mov
xchg
jl,pt
rorl
popa
outsl
sub
cld
adc
lret
inc
ds
sub
push
stos
out
fnstenv
fisubs
dec
in
inc
mov
mov
jns
fdecstp
icebp
fsubrl
fwait
ror
mov
ret
push
mov
ds
negl
rcl
mov
xor
pop
dec
xlat
xor
negl
in
cmp
xchg
outsb
xor
jl
mov
add
mov
ds
adc
stos
popa
ds
fstp
push
jb
xchg
jmp
push
xorb
or
mov
xchg
jp
mov
mov
gs
pop
addr16
inc
js
into
dec
adc
push
jo,pt
cmc
and
pop
adc
mov
xor
loop,pn
push
jecxz
inc
dec
fistpl
pop
int
in
sarb
mov
cmp
add
mov
sbb
test
subl
fsubr
cld
ds
jno
test
popa
sbb
or
ds
dec
orb
aaa
out
test
pop
bound
sbb
std
lahf
inc
xor
movsl
push
pop
cld
push
movups
dec
movsl
mov
std
test
adc
movsb
call
rolb
enter
out
cmp
inc
push
push
rcr
ds
lods
nop
xchg
mov
and
js
bound
mov
inc
cmpl
orl
xchg
enter
cmc
rcrl
xchg
xor
fwait
xor
inc
cli
dec
mov
lea
icebp
cwtl
and
pop
pop
sub
jns,pt
or
aam
push
inc
xchg
mov
push
adc
inc
ja
inc
repnz
mov
push
sub
in
mov
negb
fcompp
leave
xchg
push
icebp
dec
pop
xchg
jb
sbb
dec
xor
aam
jle
out
mov
add
mov
sti
movsl
icebp
push
xchg
xchg
or
and
mov
dec
mov
dec
std
test
mov
popf
mov
pop
sub
or
or
cli
add
xchg
inc
aas
sub
jo
sahf
das
insl
push
insb
sub
ret
fidivrl
ror
loope
int
ds
out
pop
push
ds
push
data16
aad
pop
mov
js
xchg
inc
adc
enter
fdivl
ds
int3
push
jb
cmp
or
push
imul
insb
aaa
jle
jbe
push
push
inc
jbe
or
cli
cs
xchg
push
in
notb
int3
ds
lret
ljmp
test
mov
mov
ja
dec
in
and
mov
dec
mov
ret
jno
jle
in
or
mov
scas
loope
out
xchg
pop
cmpsb
mov
test
cwtl
mov
stc
jno
ds
inc
aas
sti
cmpsl
sub
adc
test
cmc
mov
xchg
adc
cli
adc
mov
mov
cmp
test
out
in
mov
mov
sub
int3
out
andl
push
dec
push
xchg
add
xchg
xor
mov
xor
leave
sbb
lea
pop
into
fcomps
cwtl
dec
jno
mov
push
test
xor
ds
bound
cmp
nopl
push
and
pop
pop
lods
cld
call
xchg
loope
xchg
push
add
in
int3
aas
add
xchg
cmp
mov
idivl
mov
push
or
test
xchg
inc
outsb
cltd
xchg
ds
sbb
xchg
mov
mov
int
mov
add
fmul
adc
pop
ds
roll
hlt
out
xchg
pop
inc
xchg
lahf
jecxz
push
sbb
ds
adc
xchg
fdivrl
and
imul
ficomps
lret
inc
and
push
enter
inc
mov
ds
pop
dec
jp
mov
mov
xchg
sub
adc
sub
or
jge
dec
dec
mov
dec
push
aaa
dec
dec
ds
sbb
jnp
aam
lea
jno
test
jp
pop
jo
lods
test
jmp
push
lret
jb
lods
or
jbe
ds
add
dec
aam
outsl
sbb
enter
cmpsl
dec
out
ds
in
ret
popa
in
add
in
leave
mov
cmpsb
jb
push
jnp
and
test
lea
xor
pusha
xor
mov
aaa
les
mov
lahf
mov
clc
ds
push
std
test
cmp
inc
repz
aad
movsb
call
int3
cmc
loope
sahf
xchg
int
xchg
push
mov
xor
ljmp
loop
sub
or
mov
jg
outsl
mov
pop
push
fimuls
aam
in
ret
xchg
mov
ds
jmp
xor
bound
sub
cmp
jne
and
ds
mov
ds
pop
mov
add
mov
pop
xor
xor
mov
xchg
or
mov
xor
fs
xchg
inc
jl
inc
inc
stos
data16
sub
mov
outsb
in
add
cli
sbb
in
dec
mov
or
xor
xlat
leave
in
adc
ds
bnd
rcll
je
mov
jb
pop
repz
test
xchg
ljmp
push
adc
popa
fstpt
dec
lock
jbe
out
jne
fldz
mov
and
scas
dec
in
insb
out
inc
stc
mov
rol
cs
cmp
mov
inc
pop
je
femms
shl
int
xchg
pop
aad
pop
out
sub
mov
pop
sub
call
mov
pop
dec
aam
xchg
jno
xor
pop
das
push
sub
inc
fsubs
push
cli
loop
mov
inc
pop
out
arpl
jmp
std
iret
and
mov
pop
xchg
sbb
shrl
sahf
aaa
xor
mov
out
popa
ss
fs
add
imul
lret
pop
inc
popa
xchg
adc
test
jb
adc
andb
jne
pop
shll
pop
ljmp
or
xchg
ds
and
inc
fwait
xor
cs
or
pop
ds
neg
mov
call
ds
mov
daa
insb
mov
ds
dec
xchg
sarb
loop
ds
pop
jmp
mov
sti
add
ds
icebp
pop
sub
in
cltd
jbe
ds
add
xchg
mov
ljmp
cmpl
in
bound
je
xor
mov
movsl
loope
push
adc
mov
aad
xchg
sbb
or
adc
bound
ds
testl
xor
inc
sub
shll
xchg
pop
rcrl
pop
scas
xorb
sbb
jmp
loopne
jecxz
pop
imul
fdivs
and
mov
std
fists
jb
inc
aad
addl
sbb
sub
or
sub
mov
repz
mov
nop
loop
in
lods
push
rcr
stos
dec
out
ds
cmpsl
xchg
dec
mov
sbb
andl
jno
loope
inc
inc
lret
xchg
int3
and
jle
mov
inc
decl
negb
and
mov
or
push
lret
lods
outsl
ror
in
mov
data16
hlt
leave
or
cmc
pop
pop
mov
and
bound
sub
ds
loopne
adc
frstor
hlt
sbb
ds
or
pop
mov
movsb
es
cmp
popf
mov
jle
mov
es
adc
push
aad
shrb
jecxz
ds
sub
cmpb
daa
rcrl
inc
mov
out
loop
test
sbbb
xlat
mov
inc
adc
fnstsw
inc
jb
sub
pusha
lds
fcmovnbe
push
leave
popa
mov
ds
sbb
clc
shll
daa
mov
mov
sub
push
pop
push
inc
or
push
in
xchg
jnp,pt
dec
aaa
imul
xor
mov
into
out
mov
lcall
mov
nop
xor
sub
add
lcall
dec
ds
fsts
add
std
and
ds
dec
cmp
sbb
clc
sbb
jnp
cwtl
mov
dec
ljmp
sarb
in
or
adc
lock
scas
into
push
mov
add
mov
sub
insl
push
loop
ds
jnp
push
lcall
pop
add
inc
fdiv
mov
mov
fcoms
and
ret
jecxz
mov
xchg
mov
incb
inc
push
rcrl
inc
mov
pop
xlat
push
cmpsl
push
and
dec
adcb
sbb
clc
push
ficoms
push
add
mov
jecxz,pt
int3
icebp
jbe
insb
mov
push
cmpsl
push
dec
push
ds
dec
pop
add
add
lea
lahf
loope
cmp
pop
and
in
lds
push
repnz
cmc
lea
inc
mov
sub
nop
mov
fstp
int3
loope
cmp
sarl
inc
dec
iret
scas
ds
cmp
dec
sbb
push
ds
sbb
fcomip
cs
rcl
cmc
cltd
xor
ja
xchg
ds
jecxz
ficompl
clc
ds
mov
std
and
mov
aam
inc
scas
sti
ds
addr16
test
andl
sub
push
mov
mov
push
xchg
add
or
clc
sbb
fmuls
mov
das
jns
cmp
dec
sbb
dec
aam
jmp
lret
add
stos
push
mov
fildl
fs
push
popf
add
ds
mov
loope
rcr
addr16
jecxz
mov
cwtl
stc
pop
adc
lcall
cmpb
jae
pusha
inc
sub
lods
addps
dec
scas
and
push
add
adc
sbb
pop
lds
and
pusha
xlat
or
cmpsl
fs
push
shl
jg
pop
fwait
push
outsb
call
fcmovnu
push
add
fsubs
push
pop
jle
in
pop
gs
inc
insb
aam
in
ds
add
mov
jmp
cli
push
loope
mov
jle
repnz
jmp
mov
jno
imul
jle
add
fldenv
inc
ds
filds
roll
test
jle
mov
mov
inc
lahf
or
shld
adc
leave
xchg
test
mov
int
inc
push
mov
sti
out
ret
adc
jbe
and
das
fwait
clc
jbe
add
je
push
es
cmp
fbld
push
outsl
in
out
adc
jns
jle
nop
lds
or
int
cli
movsl
arpl
add
aam
insl
out
bound
add
mov
push
jp
clc
aaa
imul
gs
popf
adc
loope
and
mov
add
dec
xchg
ror
dec
test
ds
out
rorl
jecxz,pt
cmp
int
push
imul
hlt
aam
sbb
mov
leave
sub
rcr
push
testl
xchg
imulb
cmpl
in
dec
xchg
sub
pop
and
inc
clc
into
and
jp
nop
jne
outsl
mov
jnp
ja
insb
pop
out
sbb
fldl
mov
jge
das
sbb
push
test
add
xchg
mov
jecxz
or
daa
cmp
push
xor
pop
sub
mov
dec
mov
mov
imul
shlb
xchg
pop
lock
push
mov
inc
xchg
sub
mov
mov
andl
mov
xlat
sbb
xor
in
lds
roll
in
int
loopne
add
push
fwait
mov
psubd
loop
sub
fbstp
cmp
imul
les
jecxz
loop
cltd
stos
and
inc
adc
imul
ret
or
mov
outsb
jae
add
mov
fdivl
sbb
fists
jne
push
dec
aad
push
push
call
mov
mov
or
dec
in
inc
rcrl
mov
lock
sahf
ja,pn
push
mov
pop
sbb
mov
or
in
xchg
mov
pop
push
aam
test
fnstenv
rcrl
mov
and
sbb
jae
jno
cmp
inc
pop
mov
repnz
aam
fwait
aaa
xlat
pop
or
dec
test
jne
dec
xchg
shll
adc
dec
lds
mov
testb
jns
mov
leave
jnp
mov
roll
out
sub
or
jecxz
or
jnp
dec
rclb
rcrl
xor
std
xor
push
pop
mov
mov
aas
dec
mov
std
in
leave
int
inc
fwait
ret
cmpl
es
arpl
xor
mull
scas
data16
out
sarl
add
add
into
inc
sbb
push
inc
stos
ds
in
or
ds
inc
or
lods
push
aam
push
cmpl
mov
jg
push
push
pushf
bound
ja
jno
jecxz
mov
mov
ds
cmc
mov
and
mov
mov
pop
dec
lea
into
adc
jne
iret
inc
jge
push
xchg
out
lods
shll
ficompl
cmc
mov
inc
pop
mov
sub
jmp
ds
aaa
pop
fbstp
xchg
int3
je
xor
pop
rorb
xor
stc
pop
push
add
ja
pushf
lock
push
dec
jp,pt
xor
mov
xchg
fwait
ds
repz
fldcw
push
mov
inc
imul
jmp
push
hlt
fs
or
idivl
enter
sbb
out
push
jb
scas
adc
dec
lret
cmpsl
mov
fsubs
les
mov
fbstp
push
xchg
shll
jle
dec
sbbl
call
imul
fwait
xchg
lcall
mov
pop
jle
inc
subb
test
repnz
pop
out
popa
stos
popf
lods
movsl
add
aaa
fdivrl
fdivs
sub
out
mov
lret
cmpsl
lods
adc
lods
mov
je
inc
loope
inc
and
ficomps
addr16
jle
scas
imul
insb
movsl
sub
int3
mov
mov
mov
std
orb
mov
mov
jbe
add
stos
push
repz
jne
jae
push
hlt
lahf
loope
mov
xrelease
aam
les
roll
jmp
aas
jle
sbb
push
jecxz
jne
clc
sub
and
mov
and
cs
inc
mov
dec
inc
andl
add
inc
or
mov
mov
xchg
jnp
jb,pt
jno
jg
or
sbb
push
jge
or
shl
idivl
or
loopne
ds
jns
cli
xchg
das
sbb
xor
push
idivb
lock
and
mov
adc
push
xchg
and
mov
xchg
jo,pt
fidivrs
aas
outsb
xor
push
push
in
mov
or
cs
mov
sbb
mov
sub
sti
ds
arpl
lods
lock
sahf
inc
fdivs
adc
ds
adcb
mov
cmp
mov
cmpsb
subb
loope
mov
inc
pop
stos
push
jecxz
xor
sub
inc
push
faddl
hlt
cs
aaa
cmp
push
out
popf
aas
imul
jno
and
fndisi(8087
out
icebp
mov
pop
jg
xchg
sub
jle
xchg
insl
scas
mov
xchg
iret
ds
jge
and
nop
jmp
sub
xchg
jb,pt
mov
ss
or
adc
cmp
jno
das
fsubl
pop
sub
xor
sbb
push
mov
sahf
mov
movsb
adc
push
lcall
ret
aad
insb
push
iret
repnz
ficoml
sbb
lcall
lea
or
inc
test
frstor
and
mov
fmuls
ds
std
in
inc
and
xchg
cmpsb
mov
add
push
mov
pop
ss
push
shrb
lcall
aad
sub
push
push
dec
imul
xor
fnsave
mov
inc
cs
sarl
rolb
ds
lock
stos
push
sub
mov
ja
ret
sbb
loopne
aaa
testb
inc
inc
jg
stc
dec
add
jnp
sarb
or
sub
enter
ds
add
fdivrs
push
or
xor
push
lods
in
jne
xchg
enter
inc
mov
mov
test
pop
cmp
jno
fistps
add
pop
scas
mov
sub
cmp
fucom
dec
mov
dec
ss
ror
fildll
push
mov
shlb
lret
sbb
enter
cltd
mov
mov
lods
jae
mov
ds
fimuls
mov
inc
add
notb
mov
mov
dec
ljmp
loope
push
loopne
xor
mov
cwtl
add
mov
adc
stos
jl
ds
mov
cld
movsl
jg
ds
hlt
xlat
add
ja
fidivs
nop
cmp
fnstcw
out
lret
mov
xchg
out
ds
xor
mov
xchg
sarb
add
jo
mov
imul
pop
push
loope
cmp
add
cmpb
sub
daa
bound
ret
ljmp
mov
push
shll
sti
inc
lods
or
aam
insl
pop
test
mov
pusha
inc
or
faddl
std
scas
lods
lods
xlat
push
pop
pop
adcl
movsb
fwait
popa
mov
mov
jge
std
fmul
push
xchg
inc
mov
bound
pusha
pop
imul
insb
mov
pop
and
inc
fmul
cmpsb
fistpl
ficoms
adc
mov
add
mov
xchg
stc
pop
pop
jle
adc
cltd
mov
mov
inc
in
loope
ds
add
pop
or
xchg
mov
and
jno
scas
dec
je
cmp
in
in
adc
mov
ret
dec
mov
jne
sbb
sti
mov
mov
inc
push
cmc
ds
mov
or
mov
cs
mov
or
popw
adc
out
fldcw
adc
add
mov
and
mov
movsl
mov
sbbl
std
inc
pusha
add
or
bound
push
lea
push
push
pop
dec
lret
mov
neg
fstps
rolb
mov
lods
cmpsl
aad
push
dec
dec
imulb
sub
or
mov
xchg
or
sbb
ds
flds
mov
lahf
jo
pop
dec
pushf
xor
mov
push
hlt
mov
loope
jp
enter
inc
repnz
cmc
jp
stc
shrl
int3
xor
mov
daa
clc
aaa
xorl
xchg
fsubr
aaa
lea
sbb
mov
nop
fcmove
popf
jle
cmp
xchg
cli
insb
ljmp
popa
push
push
aas
xor
test
mov
dec
loope
mov
jg
jb
sahf
pop
add
out
lods
mov
mov
xor
loop
jno
ds
push
lock
ds
mov
push
and
adc
add
mov
clc
das
in
jbe
insb
jmp
out
aad
gs
sub
adc
mov
mov
imul
pushf
ss
push
addl
mov
mov
nop
ds
jecxz
mov
lahf
test
dec
pop
lds
gs
jbe
mov
ds
fmuls
sbb
mov
imul
jne
ljmp
dec
add
lea
jae
ds
mov
mov
add
pushl
pop
xor
push
inc
cltd
mov
ret
orl
insl
loopne
aaa
sub
ds
mov
imul
call
pop
jnp
xchg
scas
cltd
popf
cld
and
push
movsb
js
lcall
xor
jl
call
ds
mov
aad
add
mov
jle
aam
addr16
mov
dec
iret
dec
mov
and
inc
and
pop
mov
adc
mov
jbe
ds
insl
xor
lret
mov
mov
mov
jmp
adc
xor
push
mov
push
stos
dec
jecxz
fldl
ja
popf
in
aad
mov
int3
loope
cmp
inc
and
es
js
pop
das
jo
into
imul
jns
pop
xor
cmp
scas
add
jbe
nop
pop
jle
and
lcall
scas
push
outsl
ds
dec
lods
repnz
sahf
fs
shrb
pop
push
jno
xchg
daa
or
leave
sub
aaa
jp
mov
xchg
xor
fsubrs
arpl
jge
pushf
xor
outsl
mov
addb
dec
int3
mov
lods
dec
ror
jae
clc
loope,pt
jg
pop
xchg
ret
xor
xor
daa
insl
cmp
mov
xchg
pop
mov
jno
jecxz
mov
adc
jle
add
imul
or
addl
xor
ds
mov
pop
lahf
div
popl
xor
push
xchg
inc
xorl
xor
or
jle
fistpll
stos
ds
repnz
pop
cltd
ds
sbb
inc
enter
ds
push
lret
xor
loope
mov
rcll
sarl
ret
add
loopne
pop
push
sub
jecxz
or
stos
cmpsb
ljmp
add
inc
movsb
ds
jbe
and
or
mov
sbb
jecxz
es
and
ds
lahf
jmp
test
inc
mov
or
jo
and
mov
icebp
sub
push
sbbb
dec
aaa
push
out
jge
jmp
fnsave
ds
movsl
lods
mov
xchg
scas
push
pop
sub
aad
inc
test
in
pop
dec
addr16
cli
inc
aas
ds
push
stc
pop
dec
mov
mov
push
popa
add
dec
jecxz
or
sub
testb
and
test
loop
lahf
or
jns
mov
mov
ror
and
jnp
mov
or
sbb
push
dec
rolb
movsb
cld
loope
loop
mov
jle
mov
cmp
movsl
or
jmp
cmc
ds
loop
or
xlat
iret
push
push
sub
addr16
nop
add
jne
pop
dec
and
mov
out
dec
pop
xchg
xchg
pushf
sub
jl
pop
sti
stc
push
es
adc
push
in
push
sahf
ljmp
dec
lods
push
ds
inc
std
mov
and
int3
pushf
call
iret
push
cmp
jge
or
adcb
mov
mov
jbe
mov
movsb
fcmovnb
xchg
loopne
add
adc
mov
sub
xchg
ds
test
js
jge
ds
xor
jnp
fwait
xor
cli
push
add
lods
xlat
fisttps
ljmp
sahf
out
fstpt
sbb
mov
jmp
rclb
pop
fldl
sarl
cli
lahf
sub
adc
mov
pop
and
ds
fxch
dec
and
cld
inc
jb
push
pushl
xlat
shlb
ds
or
test
imul
fnstenv
inc
push
aas
pop
cmpb
jbe
inc
sub
scas
les
insl
mov
fucomi
ss
sarl
repz
call
adc
mov
xchg
push
mov
frstor
ds
dec
xchg
adc
mov
out
je
add
in
iret
es
or
sbb
lock
push
mov
and
ds
sub
out
ds
push
mov
ds
inc
icebp
call
push
dec
xchg
push
aam
xor
ds
mov
jno
addr16
es
fistpll
inc
mov
or
ficoms
sbb
adc
js
and
inc
pusha
imul
sub
in
cltd
aas
mov
mov
jge
or
and
cli
imul
ds
cwtl
pop
add
stos
xchg
out
xchg
jecxz
fwait
ds
ss
imul
push
push
les
divl
imul
hlt
pop
push
push
es
ljmp
push
test
enter
lock
hlt
jbe
ret
or
sbb
das
sahf
dec
dec
iret
lret
fldl
or
cmc
sub
push
inc
int
or
mov
mov
daa
mov
dec
mov
popf
pop
stc
insl
mov
jnp
adc
mov
loop
out
mov
or
jbe
inc
movsb
mov
adc
mov
inc
cmp
enter
aaa
mov
or
cmp
int3
ds
mov
mov
adc
xchg
lock
lock
hlt
mov
ds
fadd
pop
xchg
bound
mov
sub
lods
iret
aas
sub
push
rorl
lret
dec
ds
add
add
test
cmp
lods
mov
xor
pop
add
push
cmp
aaa
add
xor
ds
cmp
xchg
inc
test
ds
sub
add
mov
loope
xor
out
mov
bound
sarb
mov
enter
xchg
sti
pop
bsr
ds
and
out
jle
sub
ds
mov
jns
in
ds
mov
dec
cmpl
dec
xchg
push
inc
call
test
jo
pop
add
push
dec
ds
pop
jno
jl
or
popf
imul
lcall
add
movsl
mov
push
mov
adc
adc
mov
fwait
mov
loopne
or
dec
mov
ds
popf
xchg
daa
jne
shll
jnp,pt
fsubrs
cli
in
push
inc
ds
cmpsb
pusha
in
adc
mov
xor
stos
xchg
jo
cmp
pop
xor
js
int3
mov
dec
xchg
xor
xor
jge
ds
mov
inc
mov
notb
insb
fcomps
pop
sbb
push
sbb
in
push
test
idivl
and
or
enter
pop
mov
insb
xor
inc
or
adc
es
jmp
adc
pushf
sub
cli
stos
mov
pop
xor
push
cwtl
xorl
dec
into
add
inc
jno
mov
jbe
inc
cmpsb
mov
int3
dec
loop
push
imulb
cmp
xor
xchg
xor
pop
sbb
mov
les
enter
jno
mov
into
clc
int3
in
ja,pt
cli
negl
outsl
ljmp
imul
call
mov
push
ds
in
rolb
mov
sub
fwait
mov
fcoms
inc
shrb
les
and
jnp
sub
insb
ret
aad
int3
addr16
sub
icebp
sbbb
mov
mov
xchg
daa
imul
rorl
jne
xchg
xor
rol
in
stos
mov
xor
ds
bound
xchg
test
icebp
data16
push
aas
rorb
lods
adc
mov
test
adc
xchg
scas
ja,pt
xor
lods
mov
pusha
xor
push
jo
mov
addl
mov
test
jbe
xchg
xchg
ds
sub
mov
in
or
mov
cwtl
rorb
mov
es
xchg
jb
lods
fs
movb
in
mov
aas
jae
jns
adc
ds
jne
in
sub
push
sub
shlb
and
andl
mov
mov
push
jo
aam
fidivl
push
xor
push
jns
or
mov
push
es
scas
shrl
rolb
popa
dec
and
in
pop
jno
out
int
popl
iret
aad
imul
std
inc
cwtl
shlb
mov
pop
push
ret
xor
xchg
dec
ret
lods
call
cmpsl
mov
jl
imul
jge
ds
jbe
dec
std
mov
lods
add
sahf
cld
faddl
rcl
in
dec
xchg
sub
mov
shrb
mov
xor
mov
test
rolb
leave
pop
sbb
jecxz
test
notb
fdivs
cs
imul
imulb
cmp
ficoml
or
ds
notl
or
mov
xor
jb
stos
dec
ds
xchg
std
test
ds
fnstsw
cmc
loope
ds
inc
jl
or
mov
rcr
pushf
fnsave
mov
cmp
xor
push
mov
aas
add
fdivs
push
xchg
and
add
negb
popa
dec
push
pop
icebp
mov
cltd
and
sahf
mov
daa
mov
jns
mov
or
mov
add
roll
sti
sahf
xor
inc
sbbl
adc
xchg
lahf
adc
nop
sbbb
ds
jbe
ds
enter
add
xor
iret
pushf
jno
jp
xor
fidivl
das
ds
adc
xchg
movsb
xchg
push
jle
imul
add
ds
and
cwtl
xor
or
and
add
lods
dec
in
pop
inc
mov
xchg
mov
sbb
jle
sub
push
adc
or
jnp
cmp
ret
add
mov
clc
dec
push
ljmp
mov
fidivrs
inc
mov
lds
mov
push
xlat
orl
nop
hlt
cmp
ds
sbb
daa
pop
jg
xor
pop
push
xor
popa
ds
pop
push
loopne
aad
inc
add
ds
mov
cli
movsl
xor
aas
test
stos
or
or
push
or
dec
icebp
mov
aad
iret
inc
loope
test
mov
mov
sub
xor
pop
enter
mov
sub
xor
mov
and
gs
and
outsl
in
nop
ds
mov
jmp
insl
lds
xchg
loop
mov
xchg
pusha
pop
lods
shll
sub
cmpsb
shll
ret
cwtl
xor
lds
jle
les
jae
jp
pop
xchg
xor
xor
mov
cmp
pop
fildl
ds
pushf
inc
jmp
inc
mov
sar
ds
sub
pop
dec
mov
or
shrb
jecxz
add
jl
js
sti
mov
lret
cmp
aaa
fld
ds
cmp
dec
ds
mov
push
jmp
xchg
shrl
out
arpl
ds
jno
xchg
inc
dec
or
jnp
sbb
mov
loopne
out
jp
inc
jns
das
cltd
in
ret
mov
xor
mov
push
test
in
jo
and
mov
ja
adc
jne
mov
cmpsl
test
adc
add
sub
in
cmp
mov
mov
out
push
mov
aas
div
ljmp
call
addr16
imul
lahf
fnstcw
in
inc
sub
clc
jnp
inc
shl
sbb
ds
stc
add
add
scas
fwait
mov
divb
aam
and
push
lods
call
es
xchg
sub
ds
lds
inc
sub
lea
jecxz
idiv
ds
mov
pusha
push
jb
ds
xor
cwtl
mov
mov
js
test
mov
aam
xor
outsl
cmp
push
push
lods
ror
mov
lret
and
ds
out
jae
xor
sbb
int3
adc
add
shrb
enter
mov
cmp
arpl
jne
jge
sub
fnstcw
pop
das
movsb
int
mov
sti
xchg
adc
loopne
push
sub
jnp
xor
push
sbb
mov
xchg
test
fs
mov
ds
lret
xor
mov
repz
outsb
mov
push
and
push
jmp
subl
out
jne,pt
aam
jbe
gs
sahf
sub
popf
aad
jecxz
add
lahf
aaa
or
lcall
and
js
nop
cmp
add
sbb
pop
adc
mov
pop
push
jg
sub
xor
aaa
push
mov
fimull
mov
ss
xor
andb
xchg
inc
in
pop
xor
sub
ds
sub
ret
mov
lahf
stos
jbe
pop
fnstsw
lods
outsb
fstpl
int
inc
adc
or
ret
add
cltd
mov
orl
test
ds
or
int3
incl
pop
jle
test
scas
mov
cmp
add
sbb
mov
imul
jecxz
subl
mov
shl
mov
xchg
fnstsw
lods
pop
in
adc
mov
and
insl
mov
les
xor
outsb
pop
pop
cwtl
sub
or
xor
scas
and
sbb
sahf
cs
loopne
pop
in
divl
jl
xchg
dec
xchg
popf
push
or
ds
adc
or
icebp
jecxz
ret
inc
je
add
cwtl
fistpll
push
test
adc
out
lea
push
xor
pop
push
jle
cmp
xchg
mov
das
data16
push
and
inc
mov
cmpsl
addr16
ds
push
dec
sbb
xor
ds
add
jne
mov
ficompl
fcoms
mov
int3
pop
or
jge
loope,pt
sti
cmp
cld
outsl
daa
int3
and
pop
out
push
jmp
test
ss
sbb
sub
adc
movsb
push
lds
jbe
mov
ds
pop
je
insl
ds
outsl
xchg
out
aam
xchg
jg,pt
inc
xchg
shl
pop
popf
push
dec
ds
pop
fisubrl
push
sti
xor
mov
jmp
xchg
mov
mov
jge
int3
jb
push
push
test
out
ret
arpl
mov
sub
addb
ds
jo
jb
scas
lock
mov
daa
lcall
ds
popf
push
push
mov
mov
aam
push
jo
js
cmpsl
inc
add
loope
jg
adc
mov
fnsave
mov
dec
pop
xchg
xor
jle
fistpl
nop
dec
mov
mov
jle
ds
in
loope
and
mov
imul
xchg
in
push
ds
jns
out
fldl
cmc
pop
int3
jle
aad
popa
jns,pt
pop
das
pop
cmp
js
std
cmp
jg
imul
adc
sub
in
and
mov
sbb
inc
pop
fnstcw
fistl
xor
jnp
jbe
add
addr16
mov
mov
in
xchg
or
pop
dec
int
test
insb
and
push
pop
loope
xor
dec
outsb
cmp
jp
jbe
push
cmp
push
xchg
and
cmpl
loop
cld
adc
sbb
repz
push
outsl
fsts
sahf
mov
imul
test
out
adc
ja
imul
fbld
pop
xor
fwait
mov
add
enter
scas
ds
jmp
push
inc
test
mov
ds
loopne
insb
sub
fwait
xchg
ds
inc
pop
jmp
adc
stos
push
cwtl
jg
ds
aam
ret
mov
pop
frstor
enter
or
sbb
cli
ds
push
insb
inc
and
mov
scas
sub
pop
jmp
mov
cmp
sub
mov
mov
ds
adc
inc
loop
repnz
lods
xor
xor
dec
sar
fidivrl
insl
mov
xchg
inc
ds
or
mov
or
roll
sbb
sub
ja
clc
es
nop
ds
mov
cmpsl
sub
out
popa
shll
pusha
insb
sbb
aad
sbb
ffree
out
push
aas
stos
cmpsb
cli
push
mov
mov
push
pop
adc
bound
inc
fisttpl
test
data16
fidivrl
push
jmp
push
fstpt
inc
adc
imul
cli
shrb
ds
pop
inc
adc
ds
sub
mov
repnz
mov
loope
pop
mov
ficomps
ud1
jecxz
gs
jmp
cwtl
sarb
push
inc
jl
dec
imul
pop
outsb
push
pop
mov
ds
sub
sbb
in
xor
pop
sub
daa
jge
outsb
icebp
in
or
sub
inc
lret
hlt
cli
cmc
fcoml
xor
or
shlb
repz
mov
mov
jne,pt
mov
jbe
sbb
cmp
pop
xchg
stc
mov
push
in
adc
xor
fisubrs
cli
int3
xchg
movsl
aas
cmp
ret
and
inc
stos
push
mov
imul
aam
mov
imul
inc
or
push
ds
xchg
dec
fcmovbe
mov
rcrl
scas
es
hlt
pop
ds
addr16
mov
cld
dec
int
mov
ds
mov
gs
popf
scas
jne
fldcw
add
into
adcb
ds
push
xlat
shl
mov
lahf
je
dec
insl
xorb
adc
sub
les
rcrb
jl
imul
dec
ds
push
mull
or
jo
push
std
scas
and
add
enter
inc
fwait
rol
mov
fisubrs
lcall
push
imul
icebp
int3
mov
inc
sub
dec
ja
ljmp
and
loop
pop
dec
jns
movsb
filds
mov
push
and
ds
jge
roll
dec
lret
push
mov
in
cmp
cltd
mov
or
lods
outsb
loope
ret
jne
add
loopne
mov
enter
fbstp
stos
pop
mov
cmc
cwtl
jmp
icebp
push
pop
mov
insl
pop
ds
ret
add
push
or
and
push
or
imul
fcoms
mov
inc
fucomip
add
push
jno
push
mov
ret
push
fs
sarl
fnstcw
aaa
sub
in
test
xlat
push
arpl
and
syscall
popf
outsl
adc
jne
call
and
adc
jle
push
in
bound
fbld
push
fimuls
shrl
mov
or
push
lods
sub
loopne
jle
jnp
xchg
xchg
jb,pt
ljmp
mov
shll
das
pop
negb
cmp
pop
cli
lock
push
pop
jecxz
pop
mov
fistl
leave
out
mov
cmpsb
int3
mov
jne
loope
mov
inc
xchg
jmp
hlt
ds
mov
or
inc
xchg
popf
xchg
xor
insl
fisttpll
mov
xchg
push
ret
ds
lock
out
jmp
pop
or
and
sub
mov
sbb
pop
daa
mov
jnp
flds
xor
stc
xor
cs
xor
cmp
jecxz
shlb
ds
vpshaw
xor
push
jmp
inc
scas
mov
iret
and
dec
roll
mov
pop
rcr
leave
push
les
dec
std
js,pt
sbbl
add
xchg
ds
jecxz
mov
movsb
out
push
stos
pushf
pop
ds
stos
xchg
push
leave
dec
cs
jns
mov
mov
ret
sbb
or
pop
push
mov
push
in
ds
pop
adc
mov
mov
repz
leave
push
ds
ret
out
xorb
test
mov
pop
jno
outsb
fistpl
xor
sbb
inc
je
imul
xor
out
add
int3
in
jbe
ret
orl
loope
mov
push
outsl
sahf
cmc
xor
cs
or
add
pushf
clc
arpl
sub
jae
ds
int3
and
cmp
sbb
aaa
jg
int
dec
mov
mov
cmpl
rorb
ds
arpl
mov
fdivrs
popf
dec
subb
add
inc
sbb
inc
ds
loope
test
arpl
inc
xlat
mov
mov
push
ds
cmp
sbb
dec
test
notrack
iret
inc
jne
ds
xchg
rcrl
push
pop
nop
mov
dec
sar
xor
jo
daa
bound
imul
enter
fdivrl
lods
dec
pop
sbb
loope
outsb
jp
das
pop
je
sub
clc
mov
test
pop
test
mov
int
fidivl
push
lcall
ds
sub
push
mov
jl
cld
fstps
in
jge
inc
dec
ds
cmpsb
addw
int3
insl
out
dec
mov
add
inc
int
xor
fsubrp
mov
out
rcrl
fsubs
add
rorb
imul
lds
aaa
pop
ds
xchg
shll
jge
mov
addr16
ds
sub
pop
dec
inc
add
fnstenv
or
ds
mov
divb
sub
sub
pop
xor
push
xchg
mov
bndstx
cmp
idivl
inc
int3
jmp
mov
ds
in
pop
loop
sbbl
add
pop
mov
ds
mov
lahf
xchg
rcll
mov
xchg
outsb
jle
ret
or
and
jns
ss
cmpsl
mov
loopne
scas
jb
ds
gs
imul
mov
shll
ret
and
mov
ds
into
test
mov
shlb
out
out
add
icebp
ds
mov
notb
jle
sub
pushf
lea
push
leave
les
mov
mov
mov
fcom
shlb
pop
xor
and
std
in
lds
mov
mov
cmpsl
pop
add
cmc
popf
lds
sub
mov
xor
mov
jle
mov
scas
lret
ds
rorl
mov
mov
fucomi
cli
std
ds
pop
jnp
loopne
fidivl
ds
jmp
mov
mov
ds
test
adc
jo
loop,pt
in
insb
mov
mov
sub
mov
jbe
ds
mov
movsl
mov
sub
lret
mov
inc
xchg
mov
adc
pop
jne
inc
push
mov
dec
les
fcompl
int3
pop
push
mov
mov
bound
xor
aaa
dec
ds
cmp
inc
add
xchg
mov
add
shll
sub
mov
lahf
jmp
xor
push
mov
cmpb
enter
mov
gs
fnstsw
ds
mov
add
sbb
sbb
testb
int3
movd
inc
addb
rcrb
cmp
dec
add
add
ljmp
outsl
add
sti
jge,pt
pop
ja
push
mov
jnp
in
movb
fnstsw
inc
ret
stos
data16
inc
or
lods
pop
fwait
jbe
adc
popf
adc
inc
xor
scas
adc
test
fwait
sahf
ds
adc
arpl
sbb
mov
jns
popa
add
cmp
sahf
push
aad
popf
dec
cld
shll
and
mov
push
mov
push
mov
sbb
ja
divb
into
hlt
mov
pusha
sbb
roll
inc
test
lods
std
push
or
ret
mov
es
jmp
ds
repz
dec
lods
and
jl
lock
sbb
mov
adc
sub
ficompl
test
pushf
xor
mov
fs
repz
loope
int3
pusha
fisubl
mov
xchg
jb
xor
mov
dec
cwtl
sbb
repz
sarl
jg
insl
xor
scas
xchg
mov
setg
adc
sub
loope
push
sbb
shlb
lods
shlb
push
js
imul
das
sbb
jl,pt
mov
mov
mov
ret
jecxz
hlt
lods
vmovdqa
dec
inc
inc
push
sbb
outsl
jnp
xor
adc
adc
divps
xor
ds
push
sahf
rcr
cld
and
loop
insl
mov
sub
push
outsb
push
and
or
mov
sbb
into
dec
mov
cmp
and
daa
ds
xorb
popf
fs
push
ret
ds
inc
dec
sbb
ds
popa
mov
inc
outsl
icebp
movsbl
jnp
notb
fiadds
pusha
or
cli
int3
fisubrs
aad
jne
and
pop
ds
jno
add
nop
inc
xlat
mov
push
push
insb
aas
lcall
mov
ret
sti
dec
int
mov
jecxz
or
and
rcl
xchg
fnstsw
into
icebp
out
mov
std
mov
ds
or
push
repnz
js
mov
pop
pushf
loope
sbbb
pop
mov
jmp
cmpb
out
add
sbb
add
clc
pop
mov
and
mov
fistl
aad
aad
sub
and
inc
cmp
xchg
outsl
jle
xchg
ds
scas
nop
notl
xor
rcl
inc
decl
cld
jb,pt
xchg
out
push
hlt
idivb
cmpsl
test
inc
mov
dec
inc
cmp
xor
daa
pop
sarb
cmpsb
fadds
insb
dec
xor
mov
cmp
ds
push
ja
jns
aad
outsb
jnp
mov
jbe
cmc
xchg
xor
test
dec
jns
xchg
adc
push
xchg
shlb
aam
mov
mov
xor
ds
mov
lods
add
repz
sub
mov
push
pusha
gs
pushf
mov
out
jmp
pusha
mov
adc
sbb
xor
jle
jl
ret
cmpsl
xor
pop
iret
mov
push
adc
fnstcw
add
xor
mov
adc
mov
cmp
mov
ds
sbb
sbb
or
lock
mov
xchg
insl
add
cli
enter
pop
adc
mov
or
fisubrl
jecxz
pusha
inc
fdivrl
es
push
push
xchg
rclb
sub
ja,pt
xlat
mov
push
or
mov
sub
mov
and
mov
inc
dec
ds
movsb
mov
ds
push
mov
shl
idivl
popa
cmpsb
inc
mov
mov
into
insb
sbb
rorb
or
ds
push
movsb
rclb
sbb
imul
sbb
add
adc
or
sub
leave
repz
test
ja
lods
test
lea
ds
sub
nop
cld
jge
mov
addr16
xchg
pop
ds
mov
mov
pop
adc
adc
xor
outsb
mov
repnz
iret
xor
mov
sbb
push
and
inc
push
mov
cld
popf
mov
and
push
sub
movsl
shr
rolb
jecxz
test
addr16
jae
mov
loopne
fnstsw
out
aas
cltd
mov
jle
pop
push
and
pop
or
add
mov
mov
addr16
in
cmp
push
inc
mov
insl
sub
pop
inc
mov
sbb
sarl
stc
mov
xchg
jecxz
test
ds
insl
outsl
sbb
mov
mov
mov
ds
stos
cmp
xchg
popf
inc
xchg
mov
lds
ds
xchg
cmp
sub
stos
ds
push
ds
sbb
shrb
jmp
cmp
adc
les
jecxz,pt
loopne
ret
test
ds
add
mov
lahf
mov
or
sbbl
hlt
mov
shll
pop
and
out
lcall
adc
fucom
ss
pop
jb
sbb
xor
push
pop
je
adcb
int3
test
fwait
and
ds
out
call
mov
dec
xor
push
mov
ds
sub
adc
loop
outsl
adc
pop
push
lahf
mov
jnp
ret
and
push
movsl
test
int3
pop
push
sbb
jmp
xor
ds
das
pop
ljmp
jne
sbb
fcmovnbe
mov
mov
aaa
pop
mov
and
ljmp
and
imul
sarb
add
std
orl
mov
arpl
mov
shlb
rorl
mov
fldl2e
addr16
sub
enter
cwtl
sbb
movsb
cmp
lock
cmp
adc
mov
push
loopne
mov
add
ja
bound
mov
enter
mov
sbb
jnp,pt
cld
push
lds
ds
dec
fmuls
andl
xchg
xchg
mov
cltd
add
ds
adc
jge
ds
andb
mov
loop
mov
dec
addl
or
jns
aam
push
adc
push
jle
sbb
mov
fdivl
lock
pop
rolb
test
add
mov
mov
mov
in
int3
pop
push
mov
push
jg,pt
call
dec
add
lret
ljmp
imul
fsincos
loope
pop
sbbl
mov
pushw
cmp
fldenv
test
xor
lock
cmp
cli
sub
jns
xlat
adc
jle
or
adc
lea
or
jnp
lcall
pusha
aad
cltd
ss
mov
push
mov
movsl
xlat
add
loop
xchg
push
ds
mov
pop
dec
lods
ds
es
aas
enter
sub
into
lret
aad
dec
stos
mov
std
lods
add
stos
fnstcw
scas
insl
inc
sub
mov
es
lret
push
cmovs
dec
ds
fidivrl
sbb
loope
insl
ds
or
fs
mov
imul
aad
lret
mov
push
rorb
jmp
aas
mov
pop
pop
imul
ja
adc
xchg
popf
mov
xchg
sub
mov
outsl
repnz
rcrl
dec
sub
cmp
subb
push
popa
sarb
and
data16
out
in
mov
sbb
ds
inc
dec
fists
pop
dec
popa
push
imul
into
sbb
imul
test
fwait
inc
addr16
psubb
cmp
cmp
sub
mov
xchg
out
adc
ds
xchg
or
pop
aaa
xchg
jne
ds
lahf
xchg
dec
ds
stos
push
jno
shrb
addr16
xchg
cwtl
fcoms
iret
add
push
mov
add
or
or
stos
push
xchg
ds
repnz
sub
mov
push
push
dec
pop
inc
aad
xchg
shll
or
ret
jp
ds
aam
sub
aaa
or
je
fsubl
shll
pop
or
sarb
sahf
mov
mov
cmc
fisubrl
fildl
adc
jo
mov
mov
sub
mov
xor
dec
fnstenv
sub
rol
mov
push
inc
dec
mov
add
mov
add
out
ds
xchg
push
adc
hlt
jle
daa
mov
mov
and
frstor
inc
pop
jle
sbb
mov
sahf
xchg
ds
fwait
adcl
push
mov
sbb
sub
mov
jnp
ljmp
fadds
xchg
fbstp
mov
fs
fdivrl
jnp
in
jmp
jmp
cmp
shlb
adc
cld
cmpsl
js
aas
outsb
jnp
ds
mov
insl
xchg
popf
inc
dec
mov
jb
pop
jb
int3
into
popa
xlat
and
scas
and
push
test
cmp
outsb
in
push
jle
movsb
and
mov
mov
jle
ret
mov
xlat
mov
icebp
fstps
push
cmpsb
ret
ds
sbb
add
adc
addr16
jno
jecxz
adc
mov
and
sub
push
sub
sbb
dec
mov
sahf
adc
sbb
mov
fs
sub
jmp
cmc
xchg
pop
inc
and
ficoml
pop
push
test
outsl
sbb
inc
nop
dec
and
gs
adc
clc
xchg
ljmp
ja
inc
mov
pop
push
jp
sarb
int
hlt
cmp
pop
mov
sti
mov
add
pop
inc
in
mov
out
movsb
jp
daa
imul
lods
les
lods
xor
scas
cmp
xor
inc
mov
imulb
add
add
leave
rcll
fld1
inc
je
ds
mov
sub
adc
xchg
shll
push
sub
ds
dec
and
int
cmpb
popa
fsubl
sbb
mov
sub
pop
das
call
mov
movb
mov
push
pop
ds
or
xchg
insl
idivl
lahf
xor
adc
je
lods
xor
mov
or
ds
arpl
lret
mov
push
iret
fiaddl
loop
or
ds
insb
dec
popa
mov
dec
adc
iret
add
sbb
sub
jo,pt
jnp
out
sbb
xchg
xor
cmp
aaa
push
movsb
scas
or
call
fnstenv
dec
dec
push
push
ds
out
xchg
mov
add
cmpl
imul
xchg
int
xchg
movsb
add
cwtl
daa
lcall
out
inc
fnstcw
push
mov
imulb
ds
jg
cwtl
fyl2x
clc
cmpsb
fs
and
mov
pop
adc
and
ds
ret
push
lret
rolb
ds
mov
or
push
daa
mov
pop
imul
sub
inc
clc
add
xlat
xor
and
or
out
or
xlat
adc
sahf
push
stos
pop
push
dec
xor
js
jle
es
mov
ret
and
in
loop
xchg
outsb
shll
mov
test
iret
out
sti
cmpsb
loop
dec
clc
lods
cli
mull
xor
cmc
push
pushf
fisubrl
xchg
mov
lea
sbb
pop
mov
cwtl
jmp
sub
pop
push
sahf
push
sbb
in
call
push
test
lods
insl
cmpsl
pop
xchg
clc
loope
mov
les
xchg
push
mov
pop
mov
mov
mov
addr16
sbb
cmpb
fcoml
imul
inc
pop
ffreep
sti
inc
lea
xor
cmp
repz
lods
stos
jp
jg
adc
sbb
mov
dec
pop
jl
dec
idivl
std
xor
imul
dec
ds
mov
mov
mov
fidivl
xchg
dec
pop
test
pop
mov
mov
mov
enter
sub
test
icebp
push
cwtl
scas
les
push
xor
cmpl
xchg
pop
xorl
out
ret
mov
and
out
jecxz
mov
push
rorb
insl
jne
imul
cwtl
idivb
xor
pop
adc
cmp
xchg
add
jno
into
rorb
popa
sbb
pop
loop
cmp
add
ds
nop
adc
ds
gs
aad
pusha
mov
inc
and
or
cmpsl
jno
or
push
push
bound
add
ret
pop
dec
cld
jmp
dec
fnstcw
ffreep
pop
psraw
sub
lods
mov
push
pop
xchg
jo
xor
pop
push
leave
xchg
inc
in
cmpsb
fstpt
cwtl
mov
ja
sub
ss
sbb
mov
sbb
ds
lods
and
ret
test
mov
jmp
mov
iret
stc
sub
loope
pushl
push
cmp
cmpsl
cmc
aad
in
sbb
ficoml
jl
ud0
mov
dec
mov
das
negl
jg
ds
lahf
or
mov
cmc
aas
add
in
pop
sub
ret
insl
adc
mov
mov
aad
cwtl
fcmovnbe
hlt
test
dec
in
rcrl
popa
mov
dec
stos
ds
pop
push
into
dec
rorl
inc
mov
mov
lods
out
ret
adc
xchg
jmp
lahf
movsb
and
sub
loopne
shr
sub
fisubl
out
mov
lret
adc
and
testb
ljmp
lods
ds
lods
andb
stos
pop
ds
sub
xor
mov
mov
push
mulps
push
test
xor
stos
mov
ds
loop
add
ja
dec
cwtl
adc
mov
mov
orb
pop
jge
into
in
xor
mov
and
aad
pop
inc
xor
pop
lea
or
and
gs
push
fnstcw
cmp
add
sbb
pop
jg
fstps
jp
les
pop
testl
cmp
ds
cwtl
cmp
sub
in
mov
lret
pop
push
ds
dec
fwait
xor
jo,pt
xchg
jno
xor
das
dec
mov
add
cmp
jmp
ds
mov
mov
gs
push
rcll
cmp
mov
mov
pop
out
mull
xor
cld
aas
jl
mov
cmp
cmp
ds
popf
mov
sub
and
sahf
lahf
testb
sub
inc
push
int3
std
jl
mov
fisttpll
xlat
aam
test
pop
ds
push
xchg
pop
and
mov
jbe
in
lea
dec
xor
adc
and
add
jp
fnstcw
insl
xchg
jp
popa
cld
ds
dec
xor
sbb
cmc
mov
mov
push
xchg
shlb
popa
mov
xor
ja,pt
jno
aas
add
add
mov
aaa
aas
mov
mov
mov
leave
jbe
adc
xchg
fildl
sahf
cmp
ljmp
push
pusha
jbe
cmp
push
push
xchg
ds
gs
loop
mov
jae
pop
popa
fisttps
cmp
jl
leave
stc
and
iret
xor
subl
adc
cltd
ljmp
fstpt
lahf
xor
add
dec
shlb
popl
cwtl
pop
adc
jecxz
push
push
sbb
data16
dec
clc
iret
inc
aaa
out
or
leave
adc
mov
mov
pop
jge
sbb
inc
and
push
mov
dec
mov
mov
iret
repnz
push
xchg
push
outsb
xchg
mov
mov
jnp
imul
cli
and
xchg
jb
cmp
icebp
ret
cltd
sub
addr16
ds
ljmp
repz
push
sti
test
ficompl
mov
icebp
push
dec
scas
mov
sbb
jb
pop
mov
or
xchg
aad
inc
xlat
aas
popf
adcb
xor
jbe
adc
idivb
sub
int3
and
xor
pop
or
sub
push
ja,pt
xchg
pop
cmp
test
iret
incl
sub
stos
idivb
pop
dec
in
loopne
mov
xchg
xor
scas
ds
mov
ffree
cs
mov
pop
jb,pt
or
mov
cltd
mov
leave
jmp
mov
jae
repnz
jle
push
push
loope
push
sti
popf
push
int
ds
shl
movsl
xchg
mov
adc
xchg
and
lret
das
int3
ds
pop
mov
pop
test
mov
das
movsb
xchg
mov
std
pop
mov
dec
fcmovu
sub
xor
fisttpl
cmpsb
push
add
imul
shll
test
add
into
or
inc
icebp
ds
mov
adc
push
push
mov
xor
dec
ds
mov
cli
push
inc
jmp
ds
push
mov
ds
test
ds
cld
mov
bound
cmpsb
adc
ret
dec
push
adc
mov
dec
inc
or
adcl
cwtl
jl
sub
sub
ds
mov
mov
adc
push
jne
ds
jle
cli
and
dec
adc
sub
imul
ds
mov
sbb
pop
fmuls
and
adc
mov
imulb
iret
loopne
push
out
push
rclb
addr16
pop
sbb
ds
ret
cli
add
ret
inc
push
rcr
pop
lret
jmp
mov
jle
into
jp
xlat
xchg
xor
pop
mov
jbe
add
xor
leave
ret
hlt
testl
mov
cmp
sbb
fwait
xorb
adc
cli
jmp
inc
std
ds
push
pushf
xorb
xchg
lock
sbb
xchg
or
xor
and
hlt
xor
inc
jle
and
mov
mov
daa
in
xchg
rclb
sbb
inc
or
movsb
or
jnp
add
nop
and
xchg
rolb
call
pop
push
subb
adc
jmp
mov
mov
and
aad
in
dec
xor
ds
jl
mov
sub
cmp
lahf
xor
pop
outsb
inc
xchg
and
fisttps
ror
inc
xchg
mov
mov
jb
test
test
mov
mov
mov
ror
fisubrs
das
push
pop
ds
jecxz
sbb
pop
pop
into
or
cli
sbb
imul
inc
rol
sti
dec
mov
pop
leave
add
ds
jmp
mov
mov
inc
jecxz
add
ds
in
in
outsl
pop
pop
ds
and
pusha
loopne
mov
ret
fs
ds
mov
imul
mov
dec
dec
fnstcw
out
fs
cmpl
call
lret
jbe
mov
faddl
ds
jmp
out
lock
lret
mov
cmp
pop
push
dec
mov
insb
lods
loop,pt
sbb
mov
or
adc
cld
dec
inc
mov
ds
test
arpl
mov
fistpl
and
imul
jge
sub
ds
hlt
cmc
inc
mov
ds
mov
adc
mov
xor
std
xor
ds
int3
mov
inc
mov
mov
adc
rcrl
xor
jne
aas
clc
ffree
sub
cs
sarl
mov
ja
push
or
adc
loop
pop
imul
cwtl
loopne
test
inc
inc
mov
repz
ja
mov
or
mov
aaa
push
cwtl
jnp
mov
popa
sub
dec
dec
or
sbb
cmp
inc
mov
xor
push
or
xor
jmp
push
movsb
ret
push
les
and
jno
adc
adc
jmp
cmp
mov
fwait
aam
inc
in
jb
mov
pop
inc
cmpsl
pop
sbb
ds
das
loopne
pop
clc
and
jle
pop
add
fnstsw
fidivl
fimuls
insb
outsb
rep
xor
in
push
or
cmp
cs
hlt
fsubr
movsb
jp
and
jg,pt
jle
dec
fstpl
aam
mov
dec
add
lods
scas
push
and
rcr
ds
pushf
mov
inc
inc
xchg
outsb
fsts
repz
imul
jb
xchg
fstpt
xor
push
inc
sbb
idivb
std
aad
mov
inc
lret
mov
fdivrl
push
mov
std
mov
mulb
int
xchg
stc
fbld
lea
jnp
jo
sti
dec
dec
mov
fs
out
lea
ret
int
xorl
and
scas
mov
ds
fistps
ds
dec
fmul
lock
test
or
jbe
ds
in
in
fwait
pushf
push
inc
xor
push
mov
push
scas
cmp
push
adc
sbb
sbb
ret
pop
dec
mov
test
decb
test
iret
out
lock
fstl
repnz
in
push
jb
push
popa
mov
mov
xchg
push
push
cmc
inc
dec
pop
mov
adc
test
mov
dec
jmp
popa
dec
dec
movsl
mov
and
mov
cli
lcall
jbe
cs
push
mov
imul
and
jp
mov
inc
mov
jmp
loope
xchg
sbb
sub
mov
adc
inc
lahf
into
jecxz
outsb
inc
mov
dec
popa
jmp
push
stos
lods
push
call
pop
push
push
jo
pop
inc
into
shlb
xor
arpl
aas
int3
xchg
test
rolb
jmp
cmp
out
fs
pop
enter
sbb
loope
pusha
lret
jns
scas
lcall
daa
mov
lea
jp
ja
jmp
or
jne
pop
mov
inc
ds
ds
loop
jbe
xor
adc
mov
dec
add
jbe
insb
sbb
push
lods
ret
and
mov
loope
cmpsl
lcall
xchg
jecxz,pt
lret
in
pop
ds
xchg
sub
adc
addb
xchg
xor
xchg
test
mov
mov
movsl
in
ds
cltd
xor
and
ds
mov
scas
enter
out
xor
jae
imul
cmpb
repnz
test
push
sarl
cld
mov
je
pop
out
pusha
aas
mov
lret
sbb
pop
sub
rorw
xchg
sbb
xor
mov
divb
jno,pn
inc
stos
mov
ds
pop
sbb
sbb
dec
pop
or
popa
outsl
add
and
push
sbb
jae
push
js
inc
pop
mov
ds
movsb
gs
int
out
push
add
fbstp
outsb
sarb
cs
xor
jg
dec
hlt
xchg
sbbl
or
jge
inc
add
rorl
in
mov
pop
sbbw
xchg
and
cmp
add
pushf
xor
out
stc
jno
insb
es
pusha
jg
dec
mov
fldl
add
xchg
cltd
or
loop
xlat
xor
outsb
mov
push
sub
or
push
mov
mov
loope
aam
cld
pop
jecxz
std
inc
shl
ds
mov
jo
fwait
mov
push
decb
sub
push
cmp
ds
add
popa
inc
inc
pop
push
pop
sub
ds
frstor
mov
mov
push
pusha
dec
xor
fs
push
test
outsb
clc
fcomp
fists
imull
sbb
in
sub
push
ds
std
add
dec
lds
ret
cmc
xor
push
adc
out
pop
test
into
pop
adc
fst
mov
popf
mov
pop
lahf
mov
mov
loop
icebp
repz
movsb
ds
push
iret
fst
gs
mov
sub
shrl
pop
in
jno,pt
sub
push
jb
xor
jbe
nop
inc
xor
pop
and
xchg
jge
out
sbb
cli
cwtl
sub
pushf
les
mov
add
lods
hlt
popa
int
mov
out
pop
jle
sub
lret
dec
aam
xchg
repnz
repz
pushf
loope
imul
mov
pop
aas
sub
mov
cmp
push
and
xor
push
push
pop
xchg
cmpsl
adc
pusha
aam
fimull
roll
push
in
sub
push
daa
pop
mov
push
dec
add
mov
and
cmp
jecxz
sub
lock
ret
mov
ds
sbb
fmul
jnp,pt
into
cltd
lea
ds
ret
or
rep
sub
ds
cwtl
lahf
inc
loop
mov
and
mov
xor
sbbb
cmp
add
cld
negb
push
xor
push
stos
push
jns
arpl
jge
popa
jle
test
scas
lret
sub
inc
sti
ds
orl
xor
cwtl
sbb
shll
popf
loop
jno,pt
insl
mov
imul
or
cs
out
sbb
in
cmpsb
cmpl
dec
lods
fs
xor
daa
mov
jae
jbe
push
stos
mov
and
arpl
ds
pop
add
dec
ret
mov
mov
fsub
push
jo
add
xchg
xor
push
mov
xor
xchg
cmp
imul
ds
sbb
out
sbb
int3
jne
loope
inc
xor
into
and
xchg
inc
jle
stos
sub
pushf
xchg
ror
ds
jmp
out
enter
and
stc
dec
or
stos
push
push
push
or
push
xor
mov
jnp
mov
xor
cmpsb
sbb
bound
lods
sub
mov
push
test
loope
test
jae
insb
decb
xor
lods
cmpsl
sbb
jns,pt
dec
mov
xchg
sub
mov
pop
mov
sbb
sub
jmp
sub
shr
and
in
pop
sub
dec
loopne
fbld
inc
mov
mov
arpl
dec
mov
sahf
cld
pusha
dec
insb
dec
xor
sub
call
jb
cwtl
sbbb
lock
pop
cmp
inc
ds
mov
lcall
ja
xor
or
es
lods
add
inc
enter
jl,pt
aaa
mov
daa
imul
ds
and
mov
popf
addl
nop
or
and
sbb
cmp
fcomps
sub
hlt
test
and
pop
iret
dec
pop
sub
xor
lahf
subl
icebp
add
flds
stos
adc
subl
dec
adc
jge
test
sbb
jb
xchg
add
or
aam
testb
sbb
mov
ds
mov
jae
cmp
movsb
rolb
xchg
mov
mov
inc
in
sub
in
jno
sbb
idivb
arpl
les
int
push
xor
xchg
lret
out
fcomps
jecxz
ds
pop
jbe
aas
xor
mov
push
or
arpl
test
sub
in
andl
repnz
pusha
dec
ss
or
aaa
jle
jne
aad
mov
arpl
inc
lcall
and
data16
sbb
push
insb
mov
push
and
fs
mov
adc
dec
xchg
int
mov
jp
sarl
adc
cmp
add
or
jbe
push
jle
scas
loope
xchg
jb
xchg
xor
fstps
mov
stos
adc
pop
leave
pop
fiaddl
or
xor
out
outsb
lret
jnp,pt
mov
insl
mov
repnz
push
cs
push
lret
push
push
lcall
xor
ds
loope
mov
xlat
xchg
in
lcall
cld
ds
fsub
mov
mov
or
jmp
scas
call
ds
xor
add
stos
mov
out
in
sub
jl
pop
pop
xchg
clc
inc
mov
adc
mov
and
jmp
out
les
mov
xor
inc
std
fcoms
cmp
and
ret
repz
inc
sbb
arpl
mov
jmp
adc
mov
push
gs
cwtl
aas
mov
mov
xchg
mov
aam
inc
aaa
mov
fsqrt
popf
es
ds
enter
xchg
ds
xor
pop
push
sub
mov
jbe
jo
mov
inc
dec
ret
orl
push
je
xchg
ds
mov
popa
sub
mov
pop
xor
fcom
pop
push
dec
ljmp
mov
out
pop
ds
and
mov
or
sub
nop
popa
mov
mov
push
jno
pusha
jne
mov
ds
icebp
xchg
fstpl
insb
xchg
and
mov
xchg
mov
add
test
mov
int3
int
cmc
out
imul
ficoml
mov
fcoms
popf
xor
or
das
dec
sbb
xchg
cmpsb
ds
pop
lds
fstpt
jmp
jno
sbb
mov
in
inc
pusha
mov
ds
mov
ret
mov
popf
and
push
mov
add
ds
repnz
sub
mov
cmp
ds
push
cmpl
fucomp
orb
mov
repnz
push
mov
or
sbb
jmp
addb
cs
cmp
movsl
lods
lcall
push
mov
outsl
xor
pop
fwait
ds
push
int3
sahf
sub
repnz
push
cwtl
sub
push
clc
push
lods
xor
mov
aas
ret
cmpsb
stos
cmp
imul
les
ds
mov
bound
xchg
push
data16
ret
ds
push
xchg
lea
adc
dec
xchg
xor
or
jle
jne
fdivrl
add
cmp
inc
fnstcw
or
scas
cmpsl
inc
sar
repz
imul
scas
ds
cmc
xor
add
ljmp
mov
out
cmp
sbb
mov
sub
xchg
xchg
jnp
enter
pop
repnz
sbb
ds
add
xchg
xchg
mov
insl
sbb
cmp
and
jle
int
test
andl
movsb
mov
jle
int
and
lea
aas
mov
jo
fsub
pusha
dec
shlb
and
pop
mov
icebp
pop
push
inc
lods
out
out
imul
push
mov
jmp
pop
mov
les
test
cmp
lock
dec
sub
cmp
outsl
inc
addb
sub
add
xchg
adc
arpl
mov
ficompl
inc
int3
test
push
fwait
cmpb
rolb
add
stc
fsub
and
push
shr
sbb
mov
add
xor
test
scas
sbb
adc
pop
in
movsl
jno
ret
sahf
sti
fstpl
movsb
cmp
pop
push
fldcw
adc
xor
or
outsb
fnstsw
popa
movsl
adc
dec
push
shll
shr
int3
nop
mov
fcmovne
or
scas
daa
std
push
dec
xchg
fnstcw
sub
mov
jge
push
shll
loope
lods
pop
jmp
mov
fisubrl
xchg
popf
fcmovnu
fisttps
loop
add
lds
sbb
arpl
out
subb
aad
cmp
lods
shr
jmp
pop
add
cltd
dec
dec
out
imul
jno
popa
adc
jne,pt
lock
push
lcall
cmp
push
dec
sar
ds
stos
sub
popf
mov
ret
push
dec
or
inc
movq
sub
push
test
aaa
mov
repnz
testl
pop
add
sub
or
mov
pushf
xor
ds
fidivs
loop
insl
push
sub
pop
push
ds
ret
testl
lock
fsubp
jmp
xor
adc
inc
lret
clc
decl
pushf
movsb
loopne,pt
jo
jno
jle
ds
popa
jbe
test
xor
rcll
loop
mov
loope
xchg
add
addr16
jmp
fiadds
cltd
mov
pushf
ds
fsubl
sbb
ds
ret
into
push
arpl
mov
hlt
sahf
jb
int
ds
mov
xchg
add
sub
jp
sbb
pop
jns
and
lock
adc
and
dec
mov
pop
lods
jge
arpl
and
pop
jle
add
xor
out
cmc
cmp
add
pop
scas
out
mov
adc
xchg
xchg
ljmp
dec
popa
push
mov
fxch
and
test
lahf
rcrb
or
pop
clc
sub
leave
testb
cmpb
adc
mov
sbb
and
add
xor
mov
add
fistpll
cli
mov
out
sbb
jns
cmp
dec
and
es
scas
pop
icebp
pop
inc
stc
in
push
ds
jecxz
xchg
push
pop
mov
xor
jae
popf
in
aaa
xchg
mov
ds
mov
int3
clc
mov
jle
insb
cmp
xchg
push
nop
daa
push
push
ds
mov
sub
imul
fmull
outsl
jbe
sbb
mov
cmpsl
repz
adcl
lahf
das
stos
outsl
jecxz
pop
nop
adc
add
push
fcom
push
ds
or
shlb
pop
lcall
sub
lods
scas
fdivs
xor
jle
fincstp
push
cwtl
mov
xchg
mov
adc
aas
sub
and
inc
inc
sub
mov
mov
ljmp
into
push
add
jl
mov
les
fisubl
lods
test
add
loopne
out
push
das
mov
cmp
popf
mov
sbbb
pop
fucom
das
inc
xchg
mov
push
add
ds
rol
jne
shlb
fisubrs
pop
push
inc
and
xor
adc
rclb
lahf
cmp
pop
lret
bound
pushf
and
jge
shll
dec
xor
cmpsl
rcr
push
dec
arpl
cmc
mov
rolb
add
pop
inc
push
pop
xchg
rolb
icebp
aaa
jbe
jle
xchg
ds
adc
push
mov
test
adc
subl
frstor
add
ds
xor
sbb
cmc
sub
out
xchg
sub
cmp
push
std
mov
test
icebp
hlt
add
mov
ficoms
cmp
xchg
mov
iret
cmpsb
insb
ds
xchg
mov
or
or
ds
inc
mov
inc
jg
ret
mov
adcl
arpl
or
cli
add
mov
pushf
das
jle
outsb
cmpsb
shr
xor
sbb
lret
inc
movsb
inc
dec
adc
imul
adc
push
push
out
mov
jg,pt
rol
enter
scas
adc
repz
mov
test
loope,pt
int3
jecxz
cmpsl
out
sub
xor
cwtl
inc
andb
imul
int3
push
mov
ds
adc
stc
lock
pushfw
sbb
mov
xchg
dec
movsb
pop
mov
fisttpl
xor
and
adc
mov
decb
mov
movl
lock
cltd
es
data16
inc
mov
mov
xchg
imul
popf
mov
std
or
std
ds
adc
pop
test
push
ficoml
ret
aad
shlb
push
pop
mov
pop
mov
xchg
cs
lea
aam
js
test
push
push
ds
rorl
jne
lock
sarb
jmp
mov
pop
out
imul
and
xchg
jp
sub
out
mov
jle
fiaddl
sub
adc
push
in
pop
ret
cmpsl
mov
mov
xor
inc
mov
ret
jle
into
aad
jecxz
xchg
or
pop
sub
inc
movsb
clc
fwait
xor
xor
adc
add
pop
push
ds
add
dec
movsb
js
icebp
jnp
ja
sub
xchg
dec
jle
les
ret
mul
out
jg
ds
popf
scas
repz
pop
sbb
adc
mov
int
das
push
jmp
mov
addl
jns
lretw
loop
repnz
ret
loopne
inc
sbb
fadds
inc
pop
jnp
jle
lret
es
dec
fwait
push
sbb
push
in
pop
insb
lods
ror
fistpll
jno
mov
loope
adc
aas
xchg
dec
leave
pop
sub
xor
xor
sarb
xlat
repnz
rclb
jge
mov
out
and
ds
xor
sub
xchg
mov
pop
inc
add
imul
ds
cs
ret
mov
rcl
add
pop
push
mov
rcrl
pop
dec
cmc
loop
jmp
es
cmp
data16
dec
push
mov
xchg
stc
mov
ds
lods
jl
xchg
stos
loop
in
jbe
addb
data16
rcrl
insl
adc
stos
mov
dec
adc
mov
dec
pop
and
lock
sbb
cmp
inc
mov
and
mov
lret
mov
push
add
push
push
aas
cmpsb
xorl
loopne
cmp
scas
ja
lds
test
int
in
push
ja
ds
jecxz
ljmp
std
shll
out
cmpl
or
push
fcoml
push
mov
stc
push
insb
jne
mov
imul
sub
jecxz
bound
inc
gs
insl
mov
xchg
inc
jns
jbe
mov
adc
xchg
dec
or
mov
jg
or
sbb
mov
push
xchg
fidivrl
mov
bound
iret
pop
pop
jbe
pop
add
mov
cli
movb
adc
cmp
xchg
cwtl
mov
stc
lds
mov
sbb
out
jmp
shll
xor
sub
jl
adc
loopne
sbb
ds
outsl
and
xor
xor
pop
push
sub
clc
xor
test
xor
jle
push
into
cmp
fisubl
imul
mov
pusha
xchg
ds
es
mov
cmp
dec
add
leave
sarl
add
push
sub
or
rcl
adc
iret
popf
jns
into
pop
fdivrs
ds
outsb
lahf
mov
inc
sarl
jne
dec
mov
jmp
pop
inc
subb
shll
insb
rol
mov
nop
pop
pop
rorw
int3
je
adc
xchg
clc
ds
jnp
imul
push
lahf
lcall
or
mov
mov
out
xor
mov
sbb
or
xchg
gs
mov
ftst
out
jbe
push
aam
and
popf
fdivrs
hlt
cmp
mov
ja
dec
cmp
sahf
mov
push
sarb
cltd
xchg
test
jmp
jl
sbb
cmpsl
dec
mov
dec
imul
cltd
addr16
or
in
fidivs
push
into
das
imul
mov
sbb
sub
insl
sbb
adc
aas
fabs
repz
int
lea
xchg
push
sub
push
xor
mov
jne
jle
jl
ss
jae
sub
sahf
and
mov
inc
and
push
xchg
rclb
sahf
mov
cld
xchg
aas
mov
sub
cmp
mov
mov
movsb
mov
test
inc
mov
cmp
dec
sysexit
xchg
sub
or
in
lea
call
dec
outsl
icebp
fistpll
jo
int
jge
inc
sub
sub
hlt
mov
xor
mov
stc
sarb
xchg
fimuls
or
push
and
leave
jle
xchg
dec
jb
jmp
ds
lods
gs
mov
fbld
or
lahf
push
data16
int3
push
ds
mov
scas
mov
adc
cltd
jno
adc
sbb
xorl
andb
adc
mov
adc
mov
shl
stos
jle
popf
and
out
lods
out
call
mov
sub
in
xor
jle
inc
imul
sbb
pusha
les
xchg
loop
popa
mov
ljmp
sbbb
mov
call
cmpsl
lahf
xchg
pop
ds
ljmp
out
xor
loopne
frstor
dec
or
movsb
add
dec
pop
mov
std
and
mov
loopne
pop
inc
lods
mov
sbb
mov
pop
or
loop
fcmovnb
out
movsl
mov
popf
flds
mov
mov
and
sub
mov
into
pusha
add
adc
mov
xor
pop
repz
ds
lret
ljmp
aas
out
sti
pop
push
jnp
add
ds
adc
popf
xor
std
xor
pop
sub
jle
dec
aam
mov
orl
movsb
mov
fwait
test
add
ja
mov
jnp
divb
ds
mov
or
sub
in
mov
pop
sbb
ds
xchg
lds
jmp
addr16
es
mov
mov
add
fcompl
fst
daa
aad
push
imull
lods
jno
or
mov
adcl
mov
adc
scas
dec
sarl
jno
dec
lret
mov
test
xor
xor
pop
adc
push
push
roll
xor
fnstenv
call
ds
adc
pop
lods
imul
inc
or
ds
xor
jns
push
ds
lods
xchg
or
mov
es
pop
xlat
ds
or
sbb
loopne
mov
inc
call
mov
ds
cmpsl
mov
ja,pt
jnp
pop
shrl
adcl
fwait
add
leave
test
stc
in
sahf
push
faddp
ds
mov
les
imul
insl
add
stos
sub
movsl
jl
or
dec
repnz
lret
ds
or
ds
mov
stos
or
mov
push
xor
fcoms
cwtl
lods
and
xor
cmp
aad
shll
mov
fistpl
pusha
outsb
mov
imul
pop
mov
testl
mov
aam
adc
out
fstpt
stos
gs
mov
lock
pusha
mov
dec
mov
mov
adc
sub
iret
testb
xor
rcrb
in
jae
adc
mov
outsl
push
push
cmp
in
ds
xchg
orl
jnp
push
xor
lea
xor
xchg
ds
subl
jge
test
dec
jae
xor
sbbb
mov
rcrb
cs
pop
mov
ds
mov
jbe
cwtl
aad
enter
lds
or
lock
fldt
cmp
cmc
inc
jo
cmp
cmp
imul
iret
jne
ds
ds
gs
out
or
add
in
add
jae
push
mov
ds
mov
idivb
into
cmpsl
xor
sub
add
ds
fistps
ret
jae
aas
xchg
test
sub
jp
push
push
frstor
mov
insl
imul
mov
sub
das
ret
mov
aas
cltd
xchg
int
movsb
stc
cli
ds
cld
shlb
imul
adc
jnp
push
repz
add
ds
in
imul
sbb
into
mov
ret
popf
movsb
daa
adc
notl
mov
rcrl
popf
push
flds
dec
fisttpll
stc
or
push
in
pushf
pop
ljmp
or
mov
inc
mov
out
ret
rolb
push
ds
jne
aam
mov
ret
lahf
sti
test
roll
xchg
mov
inc
jno
lret
jg
jge,pt
pusha
dec
and
pushf
xor
mov
pop
sub
ds
add
adc
mov
xor
dec
or
out
mov
cltd
pop
adc
jle
and
movsb
xchg
cmp
ret
add
popl
sub
jb
movsb
lock
mov
cmpl
ds
xchg
jl
addr16
int3
or
imul
scas
sub
insb
arpl
iret
dec
sahf
mov
cmp
sbb
jae
outsl
cmp
dec
rolb
jmp
aas
jmp
cmpsl
adc
cmp
ja
pop
rcrw
push
dec
adc
xor
imul
and
std
notl
cmc
dec
popf
xor
lahf
shr
xchg
lea
out
jecxz
cmpsl
xchg
fdivr
shll
stos
xchg
or
ds
inc
shrl
mov
js
inc
mov
shrl
push
inc
js
sbb
adc
xchg
sarb
rorl
ret
mov
add
gs
mov
or
fwait
mov
xor
fldt
adc
repnz
movsb
jmp
gs
shll
pop
cmpsb
lods
ds
jle,pn
ljmp
dec
repnz
mov
sbb
arpl
popaw
dec
dec
mov
push
push
sub
mov
cmpsl
mov
bound
lods
out
mov
lret
ficompl
cs
inc
into
hlt
test
push
in
pop
and
or
ds
push
jno
push
mov
add
cli
pop
mov
bound
lock
xchg
jns
lods
aaa
push
sub
pusha
sti
lret
aam
jo
pop
push
inc
xor
inc
ds
icebp
cwtl
xchg
rorb
notl
jns
xchg
inc
aas
lods
inc
and
out
lret
sbb
push
dec
pop
xlat
addr16
loopne
lods
dec
bound
xorb
shr
insl
enter
add
sub
cmp
dec
das
out
in
mov
inc
lods
dec
pop
inc
pop
out
inc
sti
mov
push
pushl
lret
pop
mov
shrl
pop
jl
ds
mov
in
out
cld
mov
in
push
dec
jmp
xchg
mov
jb
pop
hlt
dec
mov
cmovae
pop
lahf
fwait
ds
adc
bound
in
add
cmp
xor
push
adc
loop
ds
aam
hlt
jmp
jle
imul
mov
or
jle
push
ds
cmpsl
mov
mov
pop
jb
lahf
or
mov
cmc
fidivrl
ds
mov
sbb
stos
aaa
pop
dec
adcl
push
imul
adc
push
shrl
pushf
jecxz
mov
mov
test
loop
lret
pusha
test
sbb
sub
sub
and
in
popa
ds
fsub
test
mov
mov
cs
xchg
movb
ds
lds
lea
mov
inc
loop
push
daa
movsl
aaa
xor
mov
jbe
pop
mov
je
mov
jle
mov
jne
shl
test
jle
mov
lcall
roll
popa
pop
fadd
sub
cs
pop
xor
sbb
add
adc
ds
enter
push
xchg
fdivrl
aaa
dec
and
mov
loopne
jecxz,pt
jns,pn
cwtl
aas
out
add
mov
inc
xor
dec
push
cmc
cltd
adc
loopne,pt
push
add
inc
lea
ds
aam
loope
adc
mov
adc
jns
mov
or
xchg
sub
add
mov
xlat
push
push
mov
jo
push
fwait
xor
jno
mov
sub
or
mov
push
test
dec
jno
or
ja
mov
movb
xchg
ds
stc
leave
rolb
inc
insl
mov
ds
xchg
dec
dec
gs
sub
sbb
insb
repz
arpl
cmp
imul
pop
gs
xchg
jl
pop
das
jb
ds
xor
cmp
sti
in
ret
ds
roll
push
test
mov
and
imul
xor
rcrl
pop
mov
mov
clc
cli
scas
dec
xchg
mov
out
sub
mov
push
mov
ljmp
jcxz
ds
int3
lret
imul
ret
out
hlt
ljmp
sbb
jle
int3
je
sub
jl
push
and
insl
push
xchg
lock
mov
dec
push
mov
pop
dec
inc
enter
and
in
pop
xor
adc
push
mov
cmp
jmp
mov
push
cltd
ret
outsb
imul
lret
xchg
pop
jne
mov
jb
arpl
ds
enter
or
or
dec
les
xor
sahf
mov
mov
aad
imul
test
loop
ds
insb
fnstenv
or
and
pop
popf
aam
or
shrl
sbb
adc
enter
pop
decl
push
dec
daa
movsb
push
test
mov
and
enter
sub
mov
and
ror
jb
xchg
std
popf
into
js
xchg
cmp
push
mov
clc
mov
push
out
dec
movsl
dec
shll
inc
xchg
fisubl
mov
ds
cwtl
lcall
frndint
mov
mov
popa
add
mov
inc
mov
push
loopne
push
sarb
lds
in
in
sarb
sub
repnz
iret
arpl
outsl
pop
xlat
pop
push
sbb
test
loop
sti
jp
cmpb
jns
push
mov
xor
jo
or
subl
inc
cli
or
rorb
adc
cltd
notb
add
daa
inc
fwait
push
movsb
ds
xchg
and
pop
vdivpd
add
and
cmp
xor
insb
fwait
jecxz
push
xor
adc
sub
sbb
push
into
add
test
or
push
gs
ds
mov
add
mov
cwtl
jg
ds
mov
xor
adc
or
xchg
lcall
ret
mov
fbld
jle
pop
xor
jp
sbb
pop
adc
push
jbe
ds
mov
sbb
lock
xor
jmp
stos
sahf
sarl
push
int
mov
pushf
inc
mov
sbb
fs
cmp
fistpll
test
dec
push
cld
and
adc
mov
fidivrs
mov
js
ds
mov
scas
xchg
add
cmp
pushf
mov
int
adc
ds
icebp
mov
xchg
sub
cwtl
inc
sub
popf
adc
mov
push
pop
push
rcl
ret
mov
loop
push
inc
mov
out
jb
jp
mulb
lahf
pushf
fiadds
arpl
add
fists
mov
mov
ret
jne
inc
jo
sub
sub
lret
xor
mov
pop
mov
push
mov
movsb
cmp
jnp,pt
pushf
ljmp
sti
stos
pop
pop
mov
inc
xchg
xor
jmp
ja
sub
mov
rorb
mov
data16
sbb
mov
int
mov
dec
push
mov
jle
adc
inc
stos
lds
lods
ret
jle
inc
cmc
mov
fistl
xlat
stos
mov
or
pop
jmp
dec
fs
jo
ds
shrl
jns
jnp
loopne,pt
and
mov
sbb
adc
je
adc
sbb
out
stos
mov
negb
mov
loope
push
leave
icebp
mov
loop
push
push
in
movsb
sbb
ds
pusha
cmp
mov
cld
js
inc
mov
pop
sbb
aaa
es
rcrl
jge
adc
rcr
subl
cli
cmp
or
shll
fs
ds
ljmp
mov
xchg
or
add
dec
adc
ds
jg
xor
jmp
sarl
adc
mov
xor
ds
rep
in
pushl
rorb
pop
scas
outsl
push
lahf
cwtl
push
pop
loop
dec
mov
imul
ds
jge
add
aas
aad
loop
or
jmp
pusha
sub
sub
lock
ja
or
cmp
in
sbb
insl
inc
push
mov
dec
lret
dec
xchg
icebp
push
arpl
subl
jne,pt
ficoms
and
xchg
cwtl
mov
mov
mov
std
sub
dec
push
xorl
mov
push
jnp
clc
fcmovnb
enter
loope,pt
fisubrl
mov
fldcw
movsl
cmp
or
popf
xchg
ss
dec
in
jge
mov
pushf
data16
push
mov
sbb
push
das
cmpb
and
ds
adc
dec
push
addl
pushf
inc
mov
sahf
xor
mov
insb
icebp
cmp
sbb
loope
stos
add
mov
stos
ds
adc
nop
inc
std
fs
lods
cmc
les
mov
or
orl
mov
pop
dec
pop
dec
and
lods
mov
sub
jp,pt
ret
xor
jbe
sahf
cmp
or
loope
fwait
in
push
rcll
ds
cwtl
fmull
sub
or
dec
ds
jmp
mov
ds
mov
gs
jle
loopne
push
mov
adc
mov
adc
dec
adc
sub
repz
add
mov
jb
outsb
jp
and
add
sbb
iret
sub
and
jno
xchg
push
mov
mov
mov
and
outsb
imulb
into
xor
xor
add
jecxz,pt
rclb
mov
ds
stos
sbb
pop
gs
imul
cwtl
jp
test
loopne
xchg
les
shll
mov
aaa
mov
pop
pushf
sub
fcoms
jle
pop
bound
cmp
dec
add
and
jb
pusha
loopne
ds
addr16
lret
mov
outsl
cmc
inc
sbb
jb
idivl
or
sbb
xor
xchg
fnsave
sahf
bnd
jg
sbb
pop
xor
shl
push
mov
cmpsb
pushf
adc
cld
mov
ljmp
xor
xchg
subl
add
fwait
push
sub
call
jbe
add
push
aas
imul
xchg
sub
pop
sbb
les
incl
in
and
call
rcl
stos
es
xchg
ds
inc
mov
lret
xchg
push
push
fnsave
incb
lods
push
insl
paddw
ds
xor
js
mov
lahf
push
movsl
les
ds
xchg
bound
insl
dec
ds
rclb
shll
stos
ds
cld
sub
cmp
iret
dec
dec
xor
movsb
cwtl
pop
jb
popa
dec
ljmp
repz
dec
dec
movsb
leave
cli
mov
inc
jnp
call
loopne
push
mov
ret
sub
ds
mov
push
jbe
or
rclb
adc
ds
adc
cmc
mov
scas
fs
push
fdivs
outsl
sbb
cmp
sbb
ds
inc
push
lcall
dec
pop
xor
rclb
in
push
adc
sahf
sub
pop
inc
and
push
add
mov
sbb
insl
stos
jbe
mov
and
mov
push
push
outsl
in
cmp
fdiv
sub
cmpsl
xchg
lcall
insb
xchg
pop
add
adc
xchg
ds
xor
roll
insl
or
inc
add
adc
sbb
push
fidivl
fnstsw
aas
xchg
ds
call
js
cmp
jno
addr16
int
dec
test
shrb
and
and
out
lret
ds
fwait
into
pop
pop
cmc
sbb
mov
xchg
push
push
lret
cmpsb
mov
jle
or
dec
jns
cmp
pop
fiaddl
adc
pop
aas
xchg
into
ljmp
adc
push
inc
push
cmp
lock
out
adc
loop
xlat
ret
inc
inc
and
aaa
add
jnp
xchg
mov
ds
mov
jne
out
jae
int3
dec
enter
inc
ret
adcb
fadds
cmp
sbb
dec
aad
jle
xlat
mov
mov
data16
outsl
jp
mov
sti
dec
sahf
movsb
push
xor
je
movsb
insl
jmp
cs
out
orb
lea
push
daa
mov
cli
mov
jle
xor
jnp
xor
or
add
mov
jle
lods
mov
stos
dec
sti
popf
dec
fs
mov
sahf
ds
pop
ljmp
outsl
ja
pop
stos
push
xor
xor
mov
fildll
jns
icebp
addr16
arpl
xorb
inc
jbe
mov
mov
mov
xchg
mov
ds
sub
sti
pop
xchg
ds
aad
rcrl
sarl
jle
push
xchg
sarb
push
popf
dec
cmc
data16
push
jo
push
jb
sub
pushf
shlb
ljmp
xor
xchg
fisubs
xchg
adc
add
mov
out
int3
fdiv
test
adc
data16
jno
ds
lods
xchg
cmc
imul
pop
movsb
sbb
daa
adc
xor
xchg
gs
clc
lods
into
inc
and
dec
mov
in
sbb
or
add
push
xchg
mov
jg,pt
adc
pop
mov
lea
jl
dec
or
xchg
or
dec
inc
mov
jbe
call
mov
pcmpgtd
es
ds
stos
out
jecxz
push
mov
inc
jle
test
into
fsts
lret
jns
jg,pt
sub
and
int3
adcb
mov
mov
lret
push
repz
xor
mov
push
cmp
outsl
lahf
push
ds
sbb
andl
ss
loope
lret
mov
pop
gs
mov
sub
int3
mov
inc
cmp
add
lds
inc
lahf
mov
push
test
add
sub
lock
xchg
dec
adc
das
xchg
sub
cld
sahf
mov
sbb
mov
loop,pt
sub
int3
scas
xor
push
ds
sub
push
fcmove
lea
dec
sub
imul
cltd
push
inc
adc
ds
dec
decb
mov
mov
jge
inc
or
ja
lods
sbb
in
sbb
outsb
jg
cs
pop
outsl
out
xor
loop
jle
jbe
lahf
jg
mov
mov
out
adc
stos
add
ds
inc
sbb
in
ds
ja
dec
scas
fs
imul
pusha
icebp
movsb
cld
lcall
inc
push
sub
dec
and
clc
fldl
aam
je
repz
popa
cli
stos
ds
fwait
push
xor
data16
dec
mov
mov
outsb
ds
inc
jecxz
nop
cwtl
xor
aad
popa
test
push
push
lahf
mov
test
inc
push
adc
dec
dec
roll
leave
imul
mov
push
je
ds
jae
test
hlt
ds
dec
leave
push
push
ja
mov
testl
arpl
adc
cmc
iret
mov
jl
pusha
inc
dec
xor
cltd
into
mov
ds
stos
fistpll
in
ret
ds
mov
aas
inc
xchg
mov
sbb
mov
lahf
mov
out
mov
sahf
sub
pop
ljmp
sbb
fwait
jecxz,pt
jns
add
pushf
lock
fs
rorl
bound
or
jmp
test
hlt
xchg
ds
out
jl
movsb
pop
mov
adc
lock
mov
ja
lods
ds
daa
in
sbb
je
dec
pushf
lcall
mov
mov
dec
cmp
jmp
pushf
mov
inc
jle
cmpl
ret
xchg
dec
or
jmp
jae
push
mov
pop
mov
pushf
ds
hlt
out
imul
std
loopne,pt
mov
out
pop
adc
ds
pushf
sub
enter
jb
inc
imul
jbe
shlb
scas
sub
pop
ds
lcall
cli
aam
push
or
inc
ret
sbb
mov
es
addr16
mov
mov
cwtl
inc
inc
jae
mov
inc
or
int
xchg
pop
and
fisttps
sbb
dec
and
mov
ds
push
faddp
add
das
mov
outsl
xchg
ffree
jecxz
imul
fdiv
sub
dec
or
add
mov
fbld
cmp
push
enter
jbe
mov
mov
pop
mov
jg
negb
fcoms
dec
repz
je
ds
mov
outsb
push
test
jbe
xchg
arpl
test
mov
lods
in
sbb
in
mov
sub
fs
ds
les
sbb
push
adc
mov
int3
pop
cwtl
and
and
sub
ds
xchg
cli
or
js
mov
push
lcall
repnz
shrl
jle
xchg
inc
push
jo,pt
pusha
sbb
pop
pop
sbbl
outsb
cld
and
mov
leave
std
xor
out
sub
jg,pt
cmp
mov
mov
pop
xchg
mov
jns
dec
mov
loop
dec
xchg
mov
lds
dec
mov
mov
rorb
mov
sbb
mov
ds
mov
jnp
fistl
into
movsb
lret
call
and
ds
cmp
hlt
jmp
ds
sarl
pop
dec
pop
mov
fldt
mov
adc
dec
hlt
xchg
fdivrl
addl
xor
shll
stos
add
test
mov
cmpsb
pop
jb
clc
jnp
in
jmp
sub
dec
jle
shlb
xor
mov
push
pop
out
xor
stc
pusha
dec
dec
insb
sub
popf
sbb
je
mov
shrl
pop
daa
ds
mov
push
jle
movsb
mov
add
bound
stos
push
icebp
adcb
aas
mov
push
and
xor
push
pop
fsts
ds
sub
xor
inc
iret
je,pt
hlt
out
popl
push
mov
in
jge
fimuls
mov
mov
ds
outsb
push
xor
or
orl
xor
add
lret
divb
inc
jns
pop
out
cld
movsb
xchg
cmp
pop
sarl
jne
pop
sbb
lods
mov
jnp
lahf
xchg
xchg
lcall
aaa
push
xchg
and
pushf
xchg
movsb
fisubrs
insb
sbb
stos
test
cld
inc
aam
loopne
shrb
add
sub
jo
outsl
ficomps
xor
roll
cmp
call
popf
lods
das
stc
outsl
xchg
ds
adc
mov
insb
jle
leave
repz
or
lret
xor
mov
out
mov
int
ljmp
fisubs
mov
mov
ds
mov
inc
cmpl
sbb
sub
pop
cmp
outsl
roll
arpl
rol
cmpsb
mov
adc
pop
sbbl
mov
cltd
cmc
not
or
stc
movsb
loop
outsb
push
jb
dec
fsubrl
xchg
lcall
push
adc
add
imul
cmpl
ds
iret
dec
aaa
xchg
ds
in
xor
adc
scas
lock
cs
sub
add
inc
inc
clc
adc
ds
xchg
add
fdivrs
rcrb
cs
stc
dec
push
mov
mov
xor
fsubs
jne
ds
push
imul
ds
dec
fs
cmp
mov
sbb
push
mov
out
sti
jnp
int3
ds
mov
loopne
jbe
xchg
push
in
sub
popf
sub
mov
jmp
ds
arpl
dec
sbb
lods
sarb
xlat
add
or
pop
push
push
add
aam
pop
jle
pop
lret
mov
in
push
xchg
fstpt
cmc
fimuls
mov
and
sbb
bndldx
ds
mov
popf
push
mov
iret
imul
xchg
lds
ret
ds
icebp
imul
movsb
mov
xor
sbb
fwait
aas
ds
imul
ds
push
jecxz
mov
ljmp
ds
out
daa
sbb
iret
lock
mov
jo
icebp
xchg
cwtl
inc
repnz
stos
aas
adc
jge
sbb
clc
mov
sub
pop
pop
fnsave
xchg
shrl
xor
test
jno
mov
sub
ficoml
cli
popa
dec
dec
or
sbb
mov
xchg
test
pop
push
jae
xor
xor
in
jno
ds
leave
inc
repz
add
push
test
popf
cmp
sahf
mov
inc
cmp
ljmp
pop
mov
mov
sti
mov
addb
stc
xchg
xchg
mov
push
push
pop
mov
add
push
out
popf
jne,pt
push
loopne
js
in
xchg
push
inc
push
icebp
mov
lcall
or
adc
addr16
dec
outsb
cmpsl
adc
or
dec
daa
sbb
sub
sbbl
inc
ret
aad
aam
xor
mov
ds
or
ds
ds
shll
sbb
pop
mov
adc
ds
jns
lahf
pop
test
shrb
out
dec
pop
mov
imul
in
cmp
dec
cmpsl
lds
dec
mov
mov
dec
daa
sbbl
test
loope
jno
scas
add
rorl
dec
pushf
mov
jg
inc
mov
dec
rcll
inc
lret
push
enter
jno
les
and
sbb
iret
inc
lods
dec
fucom
ds
in
pushf
mov
test
push
sbb
ds
in
mov
jg
and
arpl
cs
inc
xor
cmp
out
push
and
dec
mov
ds
sub
lods
mov
shl
mov
cmpsb
xchg
adc
loope,pt
lahf
ss
pop
mov
loop
push
bound
pop
add
negb
adc
std
sbb
jle
and
test
subb
or
hlt
jo,pt
pop
adc
mov
lcall
ljmp
scas
mov
lahf
xchg
sub
cltd
sbb
mov
jb
mov
inc
inc
fmull
jno
xchg
mov
xor
jae
pop
jno
fisubs
mov
sar
jle
add
insl
icebp
ds
rcll
mov
jbe
jbe
lock
jle
cmpsl
push
lret
mov
jl
jle
loope
lds
scas
pop
jle
mov
sub
inc
je
mulb
cmpsb
js
pop
pop
xchg
fs
xchg
mov
mov
mov
and
out
inc
jge
in
ds
mov
dec
popa
jecxz
add
lcall
arpl
xchg
stos
inc
mov
dec
push
jne
inc
mov
rcll
fildl
stos
jnp
rcrl
push
or
fwait
xor
mov
inc
sub
imul
js
insl
stos
jle
fists
rcll
push
or
std
mov
pop
mov
mov
repnz
fnstsw
add
scas
loop
mov
mov
adc
jle
decb
adc
divl
fsubrl
jecxz
jle
adc
ret
out
addr16
ds
mov
jne
lret
cmp
ljmp
pop
movb
aam
ds
and
xchg
test
mov
lods
push
pop
mov
in
adc
mov
dec
pop
lock
lods
fldt
aam
inc
jb
out
pushf
inc
pop
stc
aad
push
jmp
rolb
scas
ds
test
xor
pop
push
bound
in
xchg
pushf
cld
gs
xlat
mov
mov
fwait
xor
jecxz
inc
mov
xor
xchg
mov
jle
jbe
push
cmp
into
fidivrl
inc
push
or
ds
ret
xchg
fdivr
add
bound
pusha
inc
addr16
xor
pop
pop
mov
push
mov
or
int
in
xchg
shl
lock
cmpb
pushl
push
jb,pt
iret
bound
dec
pop
or
jns
aaa
stc
shl
aam
xchg
clc
insl
adc
adcb
jne
adc
mov
push
cmpb
pushf
mov
xor
add
push
sbb
and
adc
ds
in
ficomps
cmc
je
cs
pop
ret
loopne
sub
loop
add
addb
jl,pt
sbb
repz
push
sbb
and
push
cmpb
sub
push
lret
movsb
adc
sub
jno
aad
lods
ds
out
add
ds
pop
or
fstpt
jb
pop
shrb
dec
pusha
movsl
inc
ds
loop
outsl
pop
fdivrl
jl
std
aam
mov
jp,pt
out
xor
ds
imul
push
cs
cmp
jp
stos
jo,pt
sub
and
ds
or
ja
inc
mov
push
jnp,pt
xor
cmp
ret
xchg
mov
sar
inc
aad
arpl
push
cmc
mov
xor
out
ds
adc
push
push
push
ds
push
ds
adc
jns
dec
push
mov
ret
jmp
les
test
decb
clc
je
inc
cwtl
xor
xchg
inc
add
fs
dec
xor
dec
sahf
int
adc
cs
ds
sbb
iret
fildll
pop
outsb
aas
add
data16
idivl
movsb
jmp
mov
mov
xor
add
pop
dec
or
sarb
psllq
sahf
ds
lea
xor
jle
int3
mov
or
cmpsb
jno
cli
mov
xchg
inc
jecxz
jb
jg
mov
out
int3
push
and
sbb
cmpsb
in
fwait
pop
pop
call
cli
xchg
jbe
mov
rcr
into
or
jle
adc
orb
and
cltd
cmp
jno
and
aaa
xchg
pause
fsubs
rcrl
xor
lcall
clc
ja
xchg
adc
out
ds
repz
mul
jo
dec
mov
xlat
ljmp
push
inc
cmp
xchg
sahf
into
fnstenv
lods
adc
mov
inc
mov
cmc
and
and
or
push
lods
pop
arpl
dec
mov
pop
push
ds
inc
notl
dec
push
ds
insl
iret
int
xlat
mov
jmp
insb
aas
pop
aad
jecxz
cmpsb
aam
int
mov
nop
push
adc
mov
inc
fdivrs
test
ds
pop
repz
out
dec
idivl
xchg
ds
cmpsb
stos
inc
jg
sub
mov
mov
sbb
je
inc
mov
inc
xchg
ds
movsb
in
lea
and
popa
shrl
outsl
mov
stos
cmc
dec
mov
cvtpi2ps
jp
xlat
fcomp
mov
inc
sarl
sbb
dec
jle
in
cmpsb
movsb
mov
iret
push
add
and
jns
cwtl
mov
sbb
shlb
cltd
dec
adc
ja
adc
or
stc
mov
mulb
dec
lea
dec
in
aad
add
jae
insl
xchg
into
push
cmp
xor
cmpsb
test
mov
ds
xchg
frstor
fwait
popf
dec
ret
fptan
popa
mov
movsb
ds
aas
xor
add
cmp
ds
dec
jecxz
dec
not
mov
push
lds
pushf
popa
lret
cmp
fucomip
sarb
add
test
sbb
jae
push
cmp
bound
push
shlb
push
cmpsl
pop
xchg
inc
sub
push
adc
ds
mov
out
fld
sub
ja
stos
and
ds
or
out
scas
xlat
mov
imul
insl
rorb
loope
or
fisttpl
xor
mov
or
ds
mov
mov
jl
ds
mov
dec
ds
push
popa
push
shll
push
mov
mov
fs
xor
pop
enter
ds
mov
cmp
push
lds
cmpl
push
xlat
mov
bnd
test
je
int3
or
or
andb
lock
popf
sbb
mov
insb
adc
xor
int3
sub
out
pop
pop
sbb
xor
push
inc
ds
popa
stc
fnstsw
cmp
mov
test
fnstenv
sub
jmp
xor
cld
jmp
jo
rcll
aad
int3
jne
inc
testl
dec
pop
dec
xlat
in
dec
mov
mov
jae
mov
dec
jns
out
je
mov
icebp
sub
mov
aaa
cmpb
adc
ds
bound
xchg
push
sub
lcall
in
cmp
sbb
mov
aad
js
rcll
idivl
mov
push
sub
xor
jbe
jp
jle
ss
cmp
decb
into
test
loopne,pt
jmp
fnstcw
push
pop
fsubrl
scas
loope
fisttps
mov
jmp
push
jns
icebp
pop
pop
andb
sbb
mov
mov
inc
push
movsb
pop
push
or
ds
clc
xchg
lcall
ds
cli
xor
dec
popa
lret
xor
sahf
xchg
imul
cmp
mov
pop
mov
cmp
sub
sub
xchg
stos
in
call
movsb
pop
out
je
jmp
pushf
mov
pop
loopne
inc
add
push
aaa
mov
jns
lret
mov
xlat
push
ljmp
out
dec
push
pushf
adc
fimuls
xchg
push
pop
ds
dec
jmp
xchg
cmp
sub
movsb
pop
je,pt
daa
dec
test
out
xchg
sarl
jae
pop
andb
push
int3
xchg
stc
out
inc
adc
ss
mov
adc
dec
inc
mov
ds
sbb
ds
stc
mov
push
fnstsw
movd
aas
push
mov
dec
dec
mov
dec
lods
adc
add
mov
xor
not
xorl
iret
ds
daa
jecxz
jl
ds
and
inc
jne
mov
ds
sub
pop
pop
xor
repnz
push
mov
jnp
adc
gs
push
lods
cs
mov
inc
lahf
jae
inc
xchg
dec
pop
push
outsb
dec
imul
mov
jle
jge
xchg
mov
add
inc
adc
sub
stos
ret
mov
mov
mov
repz
mov
or
dec
in
mov
aam
jmp
ds
xchg
add
push
aad
pop
ds
sbb
jnp
sbb
mov
xor
sahf
cmpb
cli
test
jge
adc
int
roll
inc
cmp
aas
dec
sub
movsl
mov
mov
ds
leave
test
inc
aam
mov
loopne
ja
jo
pop
sub
pop
mov
add
adc
lds
int3
movsl
hlt
mov
sti
mov
pusha
out
addr16
loope
bound
lds
shrl
mov
pop
jl
pusha
sahf
inc
and
arpl
mov
loope
out
pop
pop
ds
xor
sbb
cmpsb
mov
sub
int3
mov
sub
ffree
in
repnz
ljmp
cmp
mov
iret
sbb
xor
jbe
sbb
cwtl
or
loop
ret
cmpl
jmp
and
jo
insb
shr
loopne
dec
mov
stos
sbb
adc
and
and
ds
out
imul
push
mov
test
sbbb
ds
ret
icebp
inc
repnz
jae
sarl
clc
push
or
jo
push
stos
inc
movsb
cmp
mov
xchg
test
xchg
cmp
jno
xchg
lcall
hlt
jb
push
xor
pop
add
ds
and
fisubs
add
lret
or
lea
jne
or
xchg
test
fimull
and
test
out
fdivrs
sbb
ds
aam
xor
icebp
xor
aas
pop
add
out
push
test
cld
mov
sbb
and
ds
dec
pop
test
or
test
jmp
xor
les
dec
cmpsl
shrb
sbb
insb
jb
loope
mov
lcall
pop
sbb
lds
dec
add
lock
sub
pop
push
sahf
out
mulb
lahf
inc
dec
lret
in
xchg
ds
int
iret
mov
aam
inc
aad
shll
and
test
sub
mov
cmpsl
sbb
divl
ds
jno
xor
xchg
test
sub
dec
xor
sub
xchg
imul
out
adc
add
std
cmpsl
in
ds
mov
cmpb
sub
sbb
mov
ds
ljmp
cmp
ds
nop
iret
test
in
mov
fidivl
ds
lret
aaa
mov
mov
pop
ds
mov
test
sarb
mov
in
insl
bound
inc
ds
dec
jae
add
in
adc
imul
cmp
dec
inc
mov
add
cld
mov
aad
xor
mov
scas
jno
add
ds
inc
sub
in
lods
sbb
mov
mov
fisttps
shlb
jno
cltd
pop
jb
inc
outsl
mov
sti
add
sbb
mov
std
dec
xchg
cli
xchg
or
push
fidivrs
int3
or
gs
ficoml
pop
xor
mov
mov
xchg
cld
shrb
pop
push
jp
mov
adc
mov
lock
mov
mov
ror
inc
pop
sub
xor
les
jne
filds
add
push
xchg
dec
stc
mov
xchg
std
dec
mov
jmp
out
dec
lods
rolb
sbb
cmpb
jno
arpl
or
and
cmp
cmp
jg
adc
data16
xor
icebp
insl
ds
fiadds
ds
sbb
mov
rorl
gs
mov
fwait
push
jmp
jmp
mov
xor
inc
test
sub
jo
popa
outsb
mov
inc
ds
and
shrl
in
fidivrs
xor
cmp
xchg
push
jecxz
mov
out
stc
or
imul
pop
lock
jb
xchg
cwtl
test
cld
fisubs
stc
add
xchg
fnstsw
and
adc
fs
fdiv
iret
dec
mov
popa
aam
cmpsl
sarl
ficompl
add
orb
mov
aam
jbe
adc
ds
inc
cmp
sub
daa
fcoms
scas
sub
xchg
cwtl
ds
dec
push
inc
inc
jae
imul
mov
std
loope
lahf
fisubrl
adc
scas
mov
js
mov
rclb
sarl
inc
pop
gs
js
ret
sub
sub
mov
rcrb
pop
xchg
mov
cwtl
dec
js
fsubr
ds
jecxz
and
pop
fnstsw
test
or
fistpll
cwtl
push
push
mov
pop
dec
mov
fnclex
sub
push
nop
xchg
mov
mov
mov
xor
sub
outsb
jnp
icebp
ret
js
insl
stos
xchg
flds
bound
push
xor
fistpl
push
cld
pushf
mov
inc
shll
or
dec
push
into
mov
sub
mov
jecxz
cmc
orl
ds
addr16
andl
mov
sbb
add
mov
cwtl
xchg
and
xchg
das
je,pt
add
sbb
orb
cmpsb
mov
and
inc
sarb
in
out
mov
mov
out
cmp
ret
in
or
mov
or
lds
aas
jge
ds
sahf
jne
cld
mov
lods
pushw
lret
ljmp
mov
or
mov
clc
mov
add
sbb
or
xor
cs
pop
imul
ds
fsubrs
push
daa
das
ds
out
or
je
ds
mov
jns
stc
xor
daa
rcrl
test
rol
rcrb
and
neg
ja,pt
adc
jbe
inc
leave
dec
xor
xorl
xlat
jecxz
jns
aaa
mov
ja
adc
mov
out
fdivs
fsts
mov
and
jmp
push
outsl
ds
test
add
js
jbe
cmpl
test
sbb
mov
xchg
push
cmpsb
dec
push
xchg
sahf
mov
mov
stos
mov
hlt
xor
xlat
std
xor
jne
fstpl
shl
scas
fistl
inc
popf
pop
inc
jmp
lret
fsubrp
ror
sub
add
pop
pop
cmpl
ljmp
pop
inc
adc
mov
test
std
clc
inc
divb
stos
xor
pop
lcall
push
fcmovnbe
dec
aam
sbb
movl
subps
and
xor
insb
mov
xlat
loope
inc
jmp
outsb
out
mov
mov
pop
cltd
loop
das
mov
xchg
or
test
add
jnp
pusha
push
ds
lock
sub
add
pop
pop
xor
js
scas
bound
mov
mov
jne
xor
mov
iret
sbb
fdivrs
out
int3
pop
inc
aam
adc
movsb
pop
fldl
cmp
jl,pt
sbb
and
js
ds
loop
repz
cmpw
push
sub
pop
jbe
or
dec
inc
outsb
mov
das
divl
test
les
outsl
xor
pop
loopne
insl
fdivrl
movsb
pop
inc
mov
jmp
jno
pop
rcr
loop
sub
xlat
or
lods
aaa
sub
test
ds
pop
sbb
fdivs
pop
mov
mov
mov
push
add
popa
lcall
lock
jno
push
mov
cmpsb
notl
mov
aam
cwtl
movb
sub
xor
leave
push
dec
cmp
fdivs
into
fildll
cltd
ds
mov
jmp
sti
lea
insb
ss
xor
jae
addl
fwait
pop
ds
dec
aad
int3
je
loopne
sbb
pop
ds
pop
out
xor
pusha
pop
fnstsw
jns
imul
orl
int3
cmc
push
ds
pushf
roll
test
pop
shll
mov
cs
cmp
mov
mov
and
mov
cmp
inc
mov
or
cmp
mov
mov
sub
es
sub
nop
mov
push
or
mov
cmp
mov
pop
aas
sahf
ss
cmp
lcall
lods
xchg
mov
mov
sbbb
addr16
sub
movsb
sahf
inc
push
inc
adc
sbb
rcrl
orb
dec
mov
ja
push
inc
sbb
inc
inc
dec
popf
jns
inc
sbb
pop
das
pusha
pop
sbb
test
lahf
and
jmp
mov
data16
mov
jle
mov
mov
mov
jle
xchg
test
push
loop
es
sbb
ds
seto
or
jmp
sub
inc
push
xchg
add
inc
adc
out
cld
cmp
es
xor
cmp
jns
jbe
pop
xchg
pop
sbb
fistl
sarb
rcrb
xchg
cmp
aas
mov
mov
mov
scas
cmp
cmpsb
pusha
inc
xor
mov
xchg
jmp
inc
fs
add
jle
sbb
push
mov
lahf
sub
int3
mov
test
sbb
sub
push
testb
and
mov
das
and
or
xor
xchg
popf
mov
xchg
cmp
jns
lret
push
cmp
mov
or
and
dec
mov
mov
and
xor
jo
xor
jnp
mov
sbb
mov
sub
push
nop
addl
es
lea
mov
mov
inc
push
imul
bound
test
pop
fimuls
fisubs
das
cmp
out
and
jp
jl
inc
mov
daa
cli
cld
rcrb
adc
xchg
inc
and
mov
cmpl
shll
lahf
rcrb
mov
sti
bound
adc
jle
aas
ficoms
nop
loopne
in
daa
shrl
pop
out
sub
mov
jmp
into
fs
fidivrs
pop
dec
pop
loop
fistps
cmpsl
pop
push
pop
aas
mov
inc
cmp
adc
add
mov
mov
inc
aaa
fistpll
xor
sub
mov
or
mov
das
shlb
pop
mov
cmp
mov
lret
cli
test
cltd
sub
pusha
stos
sbb
test
mov
mov
out
cld
ss
cmp
cmpw
popf
pop
adc
pop
cwtl
stos
test
sbb
sub
fwait
inc
ret
or
pop
cs
cli
pop
mov
das
scas
push
jecxz
test
push
push
push
shlb
xchg
sahf
bound
sarb
aad
cmp
cmp
pop
dec
mov
enter
add
cmpl
aas
cmp
mov
xor
test
xor
mov
mov
add
jmp
or
mov
sub
sarl
stos
inc
cld
lahf
call
fnstsw
mov
mov
aad
pop
aaa
scas
cmpsb
sahf
cmp
mov
mov
ds
imul
cmp
mov
cmpsl
sysret
nop
jg
xor
fnsave
in
cwtl
sub
and
cltd
sbb
adc
adc
and
outsl
mov
mov
add
popf
packuswb
xchg
add
add
add
and
inc
icebp
xchg
jae
aaa
push
mov
sbb
mov
push
mov
out
scas
mov
and
cmp
sahf
xchg
mov
das
cmp
cmp
push
jle
mov
inc
mov
xor
into
mov
ja
xor
shl
jg
push
push
shrb
push
and
ds
rcr
dec
ror
call
movsl
push
and
push
lret
insb
ds
and
dec
ds
dec
fucomi
xorb
sbb
cmp
sahf
xor
jle
cmpsl
xchg
inc
mov
sub
add
ds
mov
inc
mov
adc
je,pt
addr16
dec
ret
ds
test
add
sbb
inc
push
push
mov
mov
popf
es
or
xchg
test
cli
push
icebp
xchg
xchg
sbb
movsl
dec
push
pop
mov
fidivl
push
and
in
or
jl
xchg
movsl
add
loop
lods
rorb
xchg
ds
arpl
add
lds
icebp
adc
fs
push
sbb
cmp
imulb
mov
cmpsl
ja
xor
xchg
ds
sub
ret
aad
int3
mov
hlt
lea
cs
ds
xchg
fcoms
mov
rcll
xor
jmp
stc
lods
push
xchg
sub
mov
dec
pusha
or
rcrl
in
das
cli
mov
int
arpl
repz
lea
mov
dec
loopne
js
sbb
xor
orb
leave
jb
insb
mov
lahf
sbb
cwtl
clc
sbb
jecxz
xchg
aad
ds
xor
sub
fmul
faddp
ja
ds
mov
or
xchg
in
mov
mov
mov
scas
repnz
xchg
xchg
loope
inc
push
mov
mov
xchg
inc
fstpl
add
inc
mov
movsl
sub
mov
xor
shll
scas
sbb
jecxz,pt
mov
ds
mov
stos
or
cmp
mov
sbb
shrl
in
fiaddl
ffreep
out
arpl
sub
stc
std
inc
icebp
and
aas
aaa
and
idivb
inc
loope
push
ss
pop
sarl
adc
lods
xor
js
pop
mov
scas
sub
cmp
js
adc
xchg
jg
addr16
cmc
and
push
sub
adc
sarb
sbb
inc
and
add
aas
test
cmpsb
mov
aam
xchg
mov
sbb
mov
sbb
scas
cld
mov
data16
mov
ret
jp
adc
jns
das
std
lods
bound
cmp
mov
pop
fs
push
add
dec
mov
mov
fwait
and
cld
in
out
push
ss
pusha
aaa
mov
jnp
jecxz
lods
cli
mov
aas
out
inc
mov
and
fwait
xor
fstps
sub
test
jns
adc
rolb
add
addb
or
mov
mov
sbb
popf
push
mov
mov
sub
cmpsl
jmp
movlps
fldenv
mov
cmp
mulb
mov
fnstsw
push
loop
bound
lahf
add
push
cmp
lahf
lods
into
jl
push
add
adc
mov
sbb
stc
and
adc
in
fdivrl
adc
and
push
fwait
ss
std
inc
ss
std
mov
sbbl
lods
jae
lods
ss
int3
out
jg
dec
xchg
adc
fsubs
dec
repz
inc
test
and
test
dec
mov
xchg
push
leave
xor
push
xchg
shll
push
cltd
mov
inc
ss
mov
mov
or
mov
cs
and
dec
aam
mov
mov
std
mov
jo
loope
xor
jbe
ficoml
shrl
into
or
sbb
jp
xchg
adc
mov
into
cmp
lds
mov
scas
xchg
je
ss
jecxz
jo
mov
scas
jecxz
dec
adc
cmp
xchg
pop
mov
hlt
out
pop
out
push
call
mov
jge
fsts
jg
cmp
add
xchg
inc
sub
rorb
add
pop
inc
insl
mov
hlt
push
xchg
add
in
into
lds
jecxz
sub
fadds
add
or
test
jbe
xor
cmp
adc
inc
stos
dec
xor
mov
jbe
mov
xchg
pop
inc
daa
push
ds
out
xchg
cmp
scas
mov
jnp
arpl
and
mov
mov
fists
pop
lret
scas
cmp
fcompl
adc
mov
fwait
divb
mov
cmp
cmp
pusha
pop
or
add
adc
iret
jl
xchg
outsb
jb
jp
pop
ss
push
mov
cmp
inc
push
cmp
inc
and
xor
push
aas
xor
mov
das
cmp
sbb
mov
xor
mov
das
cmp
mov
sub
cmpsb
lods
inc
xor
mov
sbb
inc
mov
cmp
mov
test
das
cmp
cmp
mov
jg
mov
out
cmp
push
movsl
imulb
mov
or
adc
inc
jnp
dec
ret
jne
xor
scas
std
cmp
mov
dec
add
cmpsl
js
bound
mov
cmp
addr16
sub
mov
stos
cmp
or
cmp
jo
stos
dec
add
ss
cmp
adc
or
add
mov
xor
dec
jb
xor
repnz
jnp
movsb
and
cmp
push
aas
addr16
std
and
data16
push
jae
jne
stc
mov
inc
jl
dec
mov
inc
lahf
push
pusha
jle
and
xor
cmp
and
cmp
rcrb
mov
fistl
jle
adc
stos
jne
push
ss
cmc
pusha
push
jle
add
ss
push
or
pop
cmp
sahf
out
xor
arpl
pop
sbb
xor
negb
scas
add
xchg
lods
pop
push
add
push
mov
jp
add
lret
ss
dec
inc
stc
jnp
movsl
jle
scas
and
sbb
ss
adc
and
les
push
addr16
mov
cli
insb
jmp
mov
adc
jp
mov
mov
out
cmp
or
mov
pop
sbb
shlb
mov
aaa
or
mov
cmp
push
scas
add
mov
gs
and
cs
pop
or
jbe
cmp
cwtl
loopne
mov
sbb
ss
cmp
push
mov
shl
and
rorb
test
test
sub
test
js
xor
and
enter
add
negb
cmp
push
sbb
daa
or
mov
or
and
movsb
xor
adc
sbb
sub
es
mov
cmp
jecxz
rorb
lea
xchg
xorl
inc
add
or
add
add
xchg
push
xor
dec
mov
push
xchg
xor
mov
cmp
sub
lods
ds
pusha
sarb
sbb
aas
sarb
mov
sbb
mov
push
or
xor
cmp
mov
stos
xchg
pop
xor
es
pushf
sbb
xor
js
shlb
repz
stos
sub
cmpsl
adc
cmp
pop
and
mov
ds
inc
aaa
jns
sub
sarb
orb
and
repz
les
cmp
or
stos
add
aaa
popf
scas
lahf
cmp
inc
xor
mov
pop
aaa
sbb
sub
std
cmp
xor
mov
sub
mov
insb
and
mov
ffreep
ss
inc
sub
cmp
and
inc
outsb
xor
jbe
cmc
movsl
mov
pop
inc
adc
movsl
fdivrl
xor
shrl
cmp
inc
js
mov
xor
test
lret
mov
mov
and
outsb
mov
mov
cmp
aaa
inc
xchg
cmp
push
xor
fwait
or
sbb
popa
sub
adcb
add
popa
ret
int
xchg
or
lods
mov
dec
or
push
xor
push
repz
xlat
mov
popa
push
je
pop
xor
std
pop
adc
push
xor
push
cmp
inc
mov
loop
jnp
sub
push
xor
fdivr
das
fs
adc
orb
into
add
mov
in
stc
ret
dec
stos
dec
xor
mov
mov
cmp
adc
add
xor
mov
adc
adc
jbe
sbb
push
xor
imul
or
lods
mov
and
scas
jle
mov
mov
movsl
or
mov
js
sbb
ss
negl
push
lret
dec
cmpsl
push
stos
sub
popf
xor
lahf
adc
cmp
movsb
xor
cmpsb
mov
xchg
dec
lret
cmp
add
add
jp
repz
pushf
or
or
inc
les
pop
and
or
mov
jns
mov
mov
xor
inc
inc
or
xor
and
sub
xor
push
shlb
adc
cmp
xchg
xor
scas
xor
mov
das
jle
jmp
jle
stos
mov
push
adc
sbb
xchg
lods
cmpsl
push
mov
mov
divl
and
mov
xor
xor
or
or
sbb
add
xor
and
push
fnsave
xor
shlb
lods
das
cs
inc
xchg
mov
or
cmp
cmpsb
enter
repnz
movsl
mov
cmp
add
ja
jle
aaa
in
outsb
ret
inc
inc
jb
sbb
jnp
xor
mov
mov
jae
jns
and
sub
ss
inc
pop
imull
ss
push
or
cld
out
xor
testb
fwait
aam
or
and
mov
cmp
scas
inc
lret
sbb
xchg
cmp
aas
lock
aas
lods
dec
out
jle
dec
pop
jno
cld
or
push
cmpsb
push
dec
xor
xor
xor
jno
push
xchg
jp
sub
and
das
xor
sbb
pusha
sub
mov
jo
cmp
and
scas
sub
xor
jns
sbb
sti
add
cmp
scas
daa
mov
push
daa
cmp
idivl
add
cmp
inc
add
ret
add
mov
daa
js
and
mov
jle
popf
push
jp
ss
lods
push
mov
cmp
push
stos
mov
movsl
cmp
cld
out
xor
testb
sub
test
and
xor
fs
or
jo
or
jmp
mov
into
push
out
lcall
popf
fimull
xor
sub
xchg
inc
adc
pusha
mov
or
fmulp
sub
ss
cmp
pop
pop
and
mov
mov
daa
pop
sub
out
mov
stc
add
insb
aaa
aas
mov
cmp
and
cmp
mov
sub
icebp
mov
mov
loopne
xchg
push
mov
pop
neg
fidivrl
inc
adc
popf
movsl
pop
xchg
loope
adc
loop
adc
frstor
or
stc
shr
int
mov
mov
add
jno
xchg
mov
jbe
shlb
and
incb
xor
add
jp
push
shll
or
mov
les
xor
daa
jo
cs
lahf
mov
sub
and
dec
bound
xchg
inc
add
jle
inc
aad
jecxz
pop
dec
shlb
sahf
inc
jnp
mov
and
sbb
cwtl
mov
add
mov
lret
dec
sbb
xor
ret
adc
inc
mov
xchg
pop
lock
jbe
lods
pop
xor
inc
ljmp
jnp
aaa
and
fdivl
call
fsubl
cmp
rcrb
inc
movsb
cli
inc
sub
adc
and
cmp
clc
ss
push
dec
jnp
dec
orl
and
dec
cmp
inc
lea
jo
xchg
add
int3
imulb
out
mov
loopne
cmpsb
and
sbb
and
add
test
or
mov
ret
movsl
rclb
sarb
daa
fstl
cmp
mov
pop
cmc
xchg
addr16
inc
and
es
inc
xchg
pop
pushf
cmp
push
inc
adc
gs
jle
and
int3
cmpsl
fbstp
movsb
push
sub
push
mov
and
shrb
cmp
je
and
xor
and
sub
cmp
cmp
mov
sahf
sub
add
or
add
outsl
inc
fstpt
fwait
cmc
sarl
in
push
ja,pn
cmp
cmpsb
cmp
popf
icebp
xor
nop
mov
sub
mov
pop
cltd
xchg
jle
inc
or
movsb
and
and
movsb
fistps
mov
mov
and
push
jge
sbb
arpl
addr16
mov
mov
add
gs
cli
or
loope
ljmp
lret
push
inc
int3
mov
imul
or
lcall
xor
js
sbb
adc
sub
sbb
stos
push
push
test
loop
lret
lods
loopne
mov
jno
sub
leave
outsb
and
mov
test
sub
sbb
pop
and
lcall
cmp
jg
cmp
jl
cs
and
and
or
lods
mov
jbe
lods
xor
jbe
add
sbb
mov
xor
xor
rcl
and
and
movsl
cs
inc
push
jo
mov
outsb
xchg
mov
test
pop
push
mov
or
mov
mov
loope
repnz
fisubs
test
pop
inc
das
or
and
sub
cmp
mov
dec
jbe
test
push
in
mov
push
mov
repnz
and
jbe
jl
adc
xor
cmp
sbb
sub
sub
mov
lahf
ret
enter
les
cmp
jp
or
sub
jns
jnp
push
xor
sbb
push
jp
mov
enter
aas
fnstsw
sbb
jo
xor
call
dec
es
cmpxchg
mov
mov
sub
adc
mov
mov
sub
add
mov
sub
out
pop
mov
and
mov
cmp
es
xorb
dec
push
push
stc
push
mov
in
aad
jae
adc
aas
loope
jp
pop
test
push
xchg
es
mov
cmpsb
scas
or
scas
std
inc
scas
mov
jmp
add
sbb
or
inc
es
mov
xorb
and
sub
insb
mov
mov
in
repz
pop
repz
les
cld
jbe
pop
pop
sarb
push
test
mov
jl
adc
inc
je
cmpsl
and
sbb
js
pop
mov
imul
sbb
out
or
cwtl
data16
in
jecxz
cmp
mov
inc
in
insb
cmp
mov
sti
mov
andb
xor
mov
out
xor
sbb
xor
add
xchg
insl
lahf
mov
sub
faddl
repz
pusha
push
mov
xor
sub
cmp
push
loopne
sbb
mov
mov
cmp
pusha
xor
mov
xor
mov
dec
adc
dec
push
xchg
mov
les
jno
xor
push
mov
cmp
push
push
ret
sbb
pusha
mov
inc
push
mov
mov
pop
jp
jmp
inc
enter
jno
sub
mov
ss
in
sub
fisttpl
add
std
mov
or
mov
ret
aad
cmp
mov
jb
sub
xor
mov
cmp
out
sub
push
testb
sbb
inc
sbb
add
mov
or
push
je
mov
or
dec
adc
lea
mov
mov
adc
lea
cs
jmp
ret
dec
dec
adc
sub
push
mov
and
xor
lret
inc
push
lret
ficompl
mov
and
dec
mov
loope
pop
pop
inc
add
fistl
push
loop
jo
hlt
insb
int
sahf
mov
add
mov
pushf
stos
sub
sub
roll
xor
lret
xor
movsb
add
and
add
mov
aas
test
ljmp
sub
sub
ss
mov
mov
push
push
daa
gs
jp
ficomps
test
sarl
sub
or
xchg
cmp
mov
sbb
push
les
xor
pusha
popa
testl
adc
mov
add
xor
cld
aas
cmp
mov
dec
rolb
pushf
add
lock
ss
sub
inc
mov
addr16
movsb
and
ret
je
adc
xor
or
xor
cmp
mov
inc
in
aaa
mov
push
adc
or
sub
sub
jle
sbb
sub
cs
jns
adc
push
xor
addr16
add
cld
mov
movsl
push
jbe
inc
aas
add
icebp
push
shlb
jne
pop
cmp
mov
and
pop
dec
sbb
jne
into
add
mov
int3
xchg
add
inc
mov
jle
into
sub
scas
dec
and
or
sub
das
xor
cmp
or
mov
mov
push
jnp
ss
test
imul
mov
jp
stos
shrb
ss
mov
mov
xor
mov
pop
loop
cmp
insl
mov
jne
nop
data16
je
cmp
push
cmp
sbb
hlt
pop
or
fsts
ret
adc
pop
rclb
mov
fdivl
add
mov
xor
cmp
lret
jmp
cmp
lods
xchg
dec
and
movsl
loopne
aas
rol
or
daa
sbb
jno
inc
inc
lgs
mov
or
sbb
jno
movsl
das
shlb
xchg
adc
std
pop
cmp
jne
push
movsl
icebp
inc
mov
inc
xor
inc
out
fwait
lcall
jne
sub
sti
jle
inc
mov
sub
mov
mov
and
add
jns
inc
adc
pop
scas
lahf
fldenv
xor
jb
aaa
cmpsl
mull
cmp
in
mov
imul
or
pop
inc
mov
push
mov
dec
lods
mov
jle
sub
xchg
pop
scas
mov
mov
inc
mov
or
subl
cmpsb
out
daa
inc
add
pop
in
adc
mov
cmp
jno
adc
in
int
and
and
pop
push
jno
inc
out
lcall
adc
outsl
out
in
or
ss
adc
xchg
xor
sbb
adc
pop
dec
push
sbb
enter
dec
mov
xor
das
fstpt
sub
and
add
or
xor
mov
adc
sbb
insb
sarl
mov
pop
cs
cmp
cmpb
inc
stos
sti
and
add
scas
xor
sub
insb
sub
lods
fisubrl
sub
dec
test
jl
add
sarb
fdivrp
sub
sub
lock
cmp
aas
xorb
and
mov
jno
push
xchg
or
mov
icebp
and
push
and
mov
cmp
push
sub
bound
and
stc
orb
stc
insb
ja
fistpll
mov
xlat
aad
les
mov
xor
mov
lods
test
es
jle
xor
mov
cmp
mov
xchg
xor
pop
adc
and
and
jbe
or
and
rcl
and
mov
cmp
pop
xorb
and
cmp
adc
nop
sub
xchg
and
xor
ja
add
fcmovnbe
lcall
jl
dec
int3
je
mov
cmp
incb
jp
cmp
xor
sub
fwait
gs
jb
or
adc
cmp
ret
xchg
les
pop
ss
cmpsb
jle
ret
mov
inc
xchg
sub
dec
inc
adc
mov
pusha
dec
and
xor
loop
ja
sti
adc
pusha
pop
js
dec
lahf
sub
dec
fwait
sub
or
pop
add
mov
mov
stos
repnz
in
ror
or
mov
pusha
sub
add
pop
filds
pop
inc
sbb
iret
xor
mov
cs
push
xor
mov
push
lock
or
xor
mov
hlt
ret
mov
inc
xor
les
xor
and
or
pminub
inc
inc
push
sbb
cltd
or
cmp
data16
pop
shl
mov
cmp
add
lea
and
jnp
push
add
mov
adc
sub
add
cmp
inc
pop
loope
mov
adc
adc
mov
loopne
mov
int
adc
lret
sub
pop
cs
adc
adc
mov
popf
daa
push
lods
mov
lret
sub
xor
stos
inc
or
in
adc
cld
jp
jne
add
jl
aas
insb
fs
push
push
cmc
push
aas
or
enter
pop
dec
cmpsl
and
call
mov
sbb
mov
incl
adc
or
je
dec
xor
repnz
xchg
fdivl
cmpsl
or
sub
enter
aaa
icebp
fsubrl
aas
pop
jl
dec
ljmp
lcall
add
rclb
add
nop
sub
jl,pn
xchg
sub
es
fs
cmp
push
dec
add
stos
xchg
add
cmpb
cmp
jbe
inc
arpl
xor
pop
cltd
mov
mov
jns
adc
lahf
mov
push
sub
outsb
outsl
jl
lods
inc
mov
lods
pop
jle
or
inc
adc
cmp
mov
cmp
out
jl
inc
xchg
pop
lods
lahf
mov
mov
adc
test
mov
fs
pop
xor
je
jle
sub
or
adc
pop
jge
inc
ljmp
jl
xor
movsl
mov
dec
cmp
daa
cmp
and
cmp
lret
repz
xchg
xor
jno
lods
sub
adc
xor
xchg
test
cmpsb
mov
les
pop
arpl
sbb
sub
in
mov
sti
pushf
push
adc
push
push
xchg
into
inc
mov
adc
out
mov
sub
arpl
xor
fdivl
popa
mov
sub
sub
push
cs
pop
sub
es
or
rorb
inc
xor
sub
or
adc
inc
mulb
sub
sub
fs
out
leave
cmp
lcall
push
pusha
stos
sub
mov
lcall
jbe
inc
lea
jp
cs
scas
sarb
mov
popl
sbb
xor
cmp
or
cmp
pop
xor
jno
or
repnz
adc
sub
xchg
jge,pt
xchg
faddl
adc
aaa
mov
and
inc
inc
add
mov
mov
call
mov
push
mov
inc
add
shll
push
cmp
sub
mov
inc
push
jo
adc
lcall
or
mov
leave
xchg
pushf
pop
stos
jno
jno
mov
or
inc
mov
mov
icebp
dec
pop
sub
and
pop
add
scas
xor
pushf
xchg
push
push
sub
cs
aaa
push
clc
mov
xor
adc
ljmp
xor
aaa
cmp
mov
dec
cmp
cltd
dec
cmp
push
lods
pop
mul
xor
adc
inc
loop
notb
add
nop
imulb
sbb
fisubrl
ja
mov
cmp
dec
adc
mov
dec
jno
test
lea
adc
imul
mov
mov
jbe
idiv
ds
xchg
scas
mov
add
sub
jp
inc
sub
imul
mov
push
xor
mov
pusha
mov
sub
inc
mov
cmp
jno
or
add
jo
enter
jmp
inc
mov
cmp
das
pop
es
lahf
push
scas
cmp
dec
pop
popa
xor
dec
inc
daa
sbb
out
inc
sub
and
adc
jge
cs
mov
subb
lock
fisubs
jmp
out
mov
sub
xchg
sbb
mov
scas
mov
or
and
xor
cld
negb
nop
or
ret
shlb
dec
sar
cmpsl
inc
movsl
xor
rcl
pushf
cmp
adc
outsl
push
sarl
push
sub
cmp
or
popf
je
and
and
les
out
dec
or
xchg
sbb
imul
mov
cmp
adc
sub
jl
pushf
fwait
sbb
and
daa
test
adc
inc
mov
inc
jle
das
sub
jbe
and
pop
cmp
cmpsl
dec
or
and
mov
adc
push
inc
movsl
data16
xchg
mov
addr16
sub
xor
add
sub
cmc
xor
and
je
adc
or
sub
mov
mov
xor
data16
out
pop
xor
movsl
loope
daa
mov
addr16
roll
mov
into
rolb
movsl
lods
das
or
sub
xor
es
inc
lret
sbb
pop
cmp
daa
inc
jo
sbb
hlt
and
sbb
push
hlt
je
pop
stos
fcompl
pop
push
lcall
insl
cmc
in
and
sbb
mov
sbb
cmp
cmp
call
mov
sbb
shrb
adc
xchg
ss
daa
popa
mov
and
stos
adc
xor
es
bound
dec
xlat
push
pop
sbb
sbb
and
and
cmc
add
mov
in
test
push
ficompl
push
je
push
or
push
jle
das
xchg
mov
shll
xor
cmc
jo
sub
inc
rorl
ss
sub
in
xchg
xor
les
fdivs
cmp
scas
stos
sub
mov
push
fstpl
add
test
movsb
lock
xchg
mov
sub
out
pop
imulb
bound
push
add
sbb
je
xchg
imul
imul
jbe
push
inc
js
mov
jg
mov
pusha
xchg
nop
cmp
cmp
and
cs
and
mov
pop
adc
sbb
pop
jne
cmp
stos
inc
cmp
and
sub
or
in
or
sub
adc
jne
mov
or
adc
pop
sbb
sbb
xlat
xor
push
xor
sub
ja
xor
mov
sub
dec
idivb
pop
mov
mov
and
dec
mov
sub
mov
and
mov
xchg
mov
es
test
das
enter
sub
push
and
scas
shrd
testb
mov
xor
pop
mov
jp
sub
sbb
cmp
and
inc
mov
pop
xor
dec
push
icebp
ss
aas
out
ljmp
cwtl
shlb
outsl
mov
mov
mov
subl
adc
jno
test
sbbl
jg
ret
cmp
mov
mov
shll
mov
adc
sub
add
xor
push
or
out
sbb
mov
mov
xor
or
xchg
jp
andb
mov
ret
je
push
mov
xchg
add
fldcw
pushf
xor
push
mov
cs
shlb
jno
push
bound
pop
sub
daa
cmp
xlat
movsb
push
into
push
aas
xchg
sub
cwtl
push
adc
mov
xor
cmp
push
push
fdivp
sbb
xor
cmpsb
xchg
pop
subb
mov
in
rcl
inc
icebp
mov
pop
bound
add
lahf
dec
and
outsl
sub
dec
cmp
sub
js
stos
xchg
xchg
pop
and
cmc
xor
xor
pop
scas
int3
sub
scas
popf
jnp
jne
fsubs
inc
movsl
aaa
les
loope
repnz
cs
repnz
cwtl
test
mov
jns
cmp
idivl
push
mov
pop
mov
pop
xchg
sub
cmpsl
lcall
xor
or
add
enter
mov
sbb
cmp
clc
sbb
hlt
lret
mov
push
inc
xchg
sbb
mov
int3
cltd
ss
xlat
push
mov
pop
xchg
push
push
lds
and
mov
dec
push
jno
push
mov
mov
push
xor
adc
clc
xchg
xchg
je
xor
in
leave
hlt
jnp
adc
and
and
and
mov
push
outsl
xchg
mov
sub
mov
ljmp
xor
mov
xchg
pop
addb
cltd
push
mov
aaa
js
stos
sub
hlt
dec
and
daa
or
insl
and
mov
cmp
xor
cmp
mov
sub
call
loop
test
enter
adc
cli
dec
inc
sbb
popa
dec
adc
out
jmp
jmp
xor
mov
xchg
cli
adc
mov
push
mov
cmp
adc
adc
aaa
cmp
jo
lcall
inc
rorb
jmp
push
aaa
mov
imul
or
dec
lods
jo
or
jbe
inc
out
xchg
mov
mov
dec
sub
rcrb
repnz
je
jle
xor
pushf
enter
lcall
inc
ss
push
in
mov
xor
push
pop
into
adc
into
lock
mov
outsb
pop
dec
push
scas
mov
and
xor
mov
mov
or
notl
xor
push
inc
in
fisubrl
inc
or
push
repz
incb
test
sub
call
movsb
les
ja
pop
mov
push
jno
scas
xor
mov
fs
sub
jg
test
mov
pop
push
sbb
shll
cmp
push
or
cmpsb
push
mov
enter
cli
xsha1
cmpsb
or
jo
cld
sub
mov
sti
mov
mov
loop
loopne
ss
andl
xor
cli
ret
jmp
dec
sbb
push
push
push
ss
and
test
push
mov
js
loop
outsb
js
sub
fistpl
iret
or
push
pop
je
inc
mov
or
xor
sub
dec
sub
push
xor
jne
imul
or
out
jle
cmp
xchg
insb
popf
cmpsl
cmp
jl
push
mov
push
es
jo
sub
mov
mov
mov
xor
out
and
and
cmp
lcall
push
stos
stos
inc
or
jg
bound
int3
in
leave
pusha
call
mov
sbb
lods
lods
push
les
sub
mov
repnz
lock
pushf
or
das
test
jno
jbe
popf
adc
les
xchg
and
xchg
mov
sbb
sub
and
xor
and
mov
hlt
int3
mov
pop
cmpsl
pushf
sbb
popf
cmp
adc
shl
push
fisubrs
push
xor
jmp
cmp
or
pop
cs
sub
jl
fbstp
or
jne
pop
mov
test
rclb
sub
mov
stc
jbe
pop
adc
jae
shlb
cmp
sbbb
cmp
cmpb
gs
insl
mov
mov
int3
jp
inc
pusha
xchg
fsubl
mov
mov
in
stos
jbe
in
and
ret
adc
and
bound
or
xor
call
fwait
mov
pop
sbb
ja
iret
out
sbb
adc
mov
cmpsl
xor
in
je
pop
adc
std
mov
push
cli
fcmovne
mov
pusha
pop
mov
xor
daa
inc
xor
push
push
insb
jae
or
rclb
jecxz
mov
and
push
fs
out
pop
scas
or
das
repnz
stc
or
mov
cmp
add
jnp
rcll
jae
dec
pusha
call
and
rolb
xor
ret
dec
cmpsb
in
xchg
push
cmpsl
insb
lret
xor
xor
stos
cmp
jp
dec
sbb
adc
sbb
movsl
push
xchg
in
cmp
pusha
jmp
sub
out
pop
xchg
adc
push
jmp
insb
xor
jbe
and
sub
mov
xor
lahf
loope
push
mov
pop
sub
js
push
mov
jbe
mov
sbb
movl
out
xchg
fcmovb
sbb
scas
and
sbb
sub
xor
cli
or
mov
or
pusha
dec
in
dec
popa
scas
test
adc
aaa
movsb
sbb
sub
scas
lods
xchg
imul
test
push
ss
cmp
in
insl
or
push
in
je
fisubs
mov
cmp
fs
dec
outsb
inc
add
jge
je
dec
cmp
cmp
inc
pusha
cld
push
add
sbb
mov
dec
push
shrl
pop
in
xor
add
test
push
fstps
mov
fstpt
shlb
or
clc
cltd
out
inc
cmp
dec
jb
sub
sub
pop
pop
mov
push
in
clc
mov
inc
jb
mov
ss
and
or
out
hlt
les
mov
movsl
imul
inc
fidivrl
lea
fisttpl
test
add
jo
inc
push
add
add
xor
and
cmp
stos
ss
cmp
outsb
bound
pop
ret
repz
cmp
jl
ss
pop
xor
in
pusha
or
xchg
cmpsl
adc
sub
sub
jb
push
test
nop
scas
leave
pop
mov
mov
mov
mov
cmc
loope
ss
mov
in
pop
inc
or
cmp
pop
sub
loopne
cmp
std
inc
dec
cmp
out
mov
je
mov
flds
cmc
jbe
jp
adc
pop
pop
pop
xlat
insb
or
jne
cmp
push
ljmp
jge
push
mov
inc
mov
lock
push
aaa
sub
cmp
pusha
cli
lcall
xor
lods
sub
inc
inc
aas
mov
push
enter
mov
ret
adc
xchg
imul
das
inc
jno
insb
or
stos
fnsave
mov
cs
repz
loopne
dec
sbb
and
in
xchg
jmp
and
ret
xor
pop
lea
and
cmp
ja
inc
lea
push
jmp
stc
jo
jmp
or
sbb
cmp
stos
push
sub
mov
and
and
aaa
cmp
fs
and
les
cltd
mov
in
mov
cmp
xchg
cmpsb
popf
xor
test
and
sub
ja
or
inc
sbb
jne,pn
mov
jae
icebp
loopne
and
lcall
fimull
xor
adc
into
inc
stos
aam
aas
ret
loope
add
mov
xor
testb
adc
loope
or
sbb
cld
and
inc
mov
test
push
inc
in
push
mov
loope
jl
popa
adc
and
icebp
add
and
sub
idivl
or
fwait
push
es
js
insl
mov
into
insl
or
pusha
flds
mov
pop
cmpsl
adc
and
inc
mov
pop
or
and
pop
pop
mov
test
lret
out
mov
xor
sbb
cmp
xchg
and
xor
xor
mov
sub
adc
loopne
test
das
dec
lock
jmp
das
arpl
dec
in
push
and
add
xorl
xchg
stos
add
sahf
jne
ja
mov
ret
sbb
push
jle
into
sub
pop
jne
jbe
stos
mov
or
mov
imul
pushf
bnd
test
cmp
xor
lods
xor
loope
mov
pop
test
mov
adc
jg
sub
sbb
adc
sub
cmp
push
addr16
mov
das
push
dec
movsl
insb
jno
dec
sahf
dec
and
scas
mov
movsb
and
sarl
dec
inc
pop
mov
dec
add
shrb
adc
jbe
adc
ret
cwtl
jo
addb
mov
inc
sbb
jge
addr16
lock
repz
or
dec
pop
jno
lea
ret
sub
push
icebp
rclb
adc
xor
cld
das
push
xor
pop
cmp
xor
cld
sub
push
xor
sub
push
cmp
mov
xchg
cmp
mov
movsb
fdivp
or
mov
mov
das
popf
pop
xor
test
and
fsubrs
mov
je
movsl
fiaddl
rclb
mov
adc
mov
enter
sub
idivb
jne
lods
mov
cmp
jnp
ss
repz
daa
test
and
xor
push
adc
lds
es
jl
pusha
sbb
mov
test
and
push
and
divb
fcmovb
cmp
inc
fsts
and
and
aaa
popf
ljmp
lcall
fsubrl
and
push
xor
mov
add
and
pop
mov
mov
in
dec
xchg
out
and
lcall
xchg
insl
adc
push
in
cltd
or
mov
and
mov
leave
adc
das
shll
fdivs
cmp
or
sub
call
out
mov
push
iret
mov
inc
sub
xor
push
adc
cmp
jle
push
stos
jns
dec
mov
add
int
sbb
jo
insb
ja
mov
cld
daa
jl
es
mov
xor
sbb
divb
iret
sub
and
nop
es
cmp
push
cmp
xor
testl
mov
and
and
push
iret
jp
mov
hlt
notb
cmpsb
aas
or
sub
aas
adc
mov
shrb
sub
inc
in
mov
test
and
js
mov
shlb
sub
cmp
fbld
cs
and
push
push
push
xchg
xor
push
and
icebp
sbb
xor
jns
cmp
sbb
jnp
movsl
rcl
xor
ret
mov
sub
mov
repz
cmp
xor
jbe
inc
xor
out
cld
xor
xchg
mov
sub
jno
xor
lret
in
or
add
jae
in
or
sbb
cmpsb
or
adc
xlat
addb
cmp
popa
jp
test
jle
aaa
mov
std
arpl
leave
push
sahf
xor
lods
mov
lahf
lahf
xor
stc
sub
mov
negb
push
ss
xor
jg
add
lods
insl
dec
sub
cs
jle
test
into
movl
loope
sbb
adc
sbb
adc
call
shlb
jne
cmp
cld
jmp
je
jae
std
dec
mov
or
int3
pop
repnz
lret
or
xor
out
xchg
push
mov
or
shr
and
dec
hlt
loop
mov
fstpl
xchg
fidivrl
ret
dec
mov
xchg
or
int
ss
imul
andb
movlhps
sahf
or
insb
jnp
mov
aaa
mov
rorl
sbb
inc
jp
ljmp
xor
inc
js,pn
les
fcompl
or
int
jbe
leave
bound
and
dec
xchg
sub
daa
pop
jp
push
or
xor
addr16
or
prefetcht1
inc
mov
aaa
cmp
mov
sbb
adc
inc
das
mov
xchg
push
xor
sbb
lret
mov
and
mov
shl
mov
call
test
js
add
in
ret
push
mov
aas
cld
and
xchg
inc
cmp
mov
imul
cli
cmp
mov
mov
xchg
dec
xchg
jns
sbb
iret
pop
dec
pushf
movsl
ss
stos
pusha
sti
sbb
inc
or
das
push
fs
cmp
cltd
cli
sahf
in
sahf
stos
lcall
ficoms
add
ret
push
push
push
test
sub
or
imul
leave
leave
jbe
jp
mov
sbb
hlt
jl
mov
das
rol
int
sbb
shr
hlt
mov
lods
push
xchg
xchg
jmp
enter
inc
push
mov
ret
xor
sbb
enter
mov
push
imul
test
push
dec
xor
adc
sti
sub
sarb
inc
test
and
lret
out
inc
stos
stc
xor
adc
xchg
push
cmp
ficoml
loop
cmp
js
xchg
and
test
xchg
inc
pop
add
out
scas
popa
xchg
ss
sbb
mov
or
daa
cmp
das
adc
mov
les
fs
rolb
in
mov
clc
adc
mov
bound
out
daa
xchg
sub
mov
mov
or
outsl
cltd
or
lods
cmp
sbb
push
notb
lods
pop
movsl
pop
jo
and
je
inc
imul
and
ss
mov
js
cmc
xchg
or
mov
sub
repnz
std
mov
mov
jp
xor
shl
lahf
sub
and
sbb
adc
shll
ss
mov
push
mov
test
xor
cld
cmp
xor
mov
mov
shrb
push
push
sub
in
cmp
insl
addr16
fiadds
jge
test
inc
cmp
cmp
mov
outsb
sbb
int
adc
xchg
jl
sbb
mov
fidivs
inc
and
sti
shrl
and
dec
into
jbe
jo
adc
mov
cmp
sbb
sbb
xor
aas
sub
stos
cmp
mov
bound
addl
xlat
pcmpgtw
idivb
xor
jo
fstpt
mov
add
xchg
mov
xchg
gs
or
addr16
adc
int3
aas
jge
sbb
cmp
les
outsl
mov
sbb
loope
mov
int
sub
cli
xor
cmpb
xor
pop
xchg
daa
sarl
mov
sbb
push
xor
mov
and
sub
xchg
je
mov
mov
mov
leave
mov
ss
in
outsl
fwait
push
jne
sbb
lret
pop
sbb
ja
mov
push
push
push
or
xchg
pop
xor
mov
inc
lcall
or
sbb
push
lea
call
std
jb
dec
mov
loop
mov
fdivs
out
lods
and
and
push
out
pop
or
push
fs
sbb
pop
movsl
fsts
pop
adc
xor
loop
jbe
cltd
cmp
push
and
shlb
jne
mov
out
dec
int
in
lods
jecxz
je
cs
xorl
xor
dec
ret
and
push
lock
popf
aam
and
push
xchg
pop
out
xor
add
adc
ss
sbb
cmp
outsl
sti
mov
sti
cmp
ficoml
adc
sbb
cmpl
mov
cmp
sub
mov
push
scas
add
sub
aaa
or
les
shlb
ss
sbb
ret
inc
push
pop
cmc
push
xchg
stos
jo
test
aad
jae
insl
notb
les
jg
xor
adc
incl
dec
testl
loop
shl
mov
mov
mov
pop
xlat
or
or
xchg
jno
cmpl
pop
enter
inc
sbb
out
sub
int3
repnz
sub
mov
in
push
mov
sbb
lret
clc
bswap
mov
orb
gs
sbb
jecxz
and
dec
popa
push
push
pushf
adc
inc
and
sub
leave
idiv
xchg
dec
inc
adc
ja
fadds
shlb
mov
push
loope
decb
cmp
hlt
ja
inc
shlb
stos
cmp
xor
pushf
xor
cmp
adc
or
insl
xchg
movsb
dec
mov
and
jl
fisubrs
fiadds
push
stos
adc
mov
add
stc
fwait
inc
or
adc
stos
cmp
xchg
or
inc
insl
dec
adc
mov
outsb
imull
fwait
imul
les
adc
shrb
sbb
push
and
aas
popf
ret
jno
sub
xchg
arpl
sub
pop
inc
xchg
in
dec
cli
stos
xorl
push
push
and
xchg
pusha
lods
sbb
sub
push
push
sbb
mov
sbb
cmp
sbb
push
mov
jp
js
mov
sub
adcb
icebp
pop
fimull
shr
jb
add
push
xchg
sub
insb
popa
xor
and
xor
pusha
enter
lds
push
and
and
stos
jmp
push
aaa
sarb
aam
adc
jp
ss
xor
push
xor
xor
mov
push
or
dec
pop
mov
scas
cmp
jl
testl
push
outsb
push
out
scas
mov
xchg
or
push
and
loopne
mov
sbb
cli
and
jae
push
in
ret
es
cmp
cmp
pushw
jbe
repnz
pop
adc
mov
nop
adc
scas
mov
push
test
push
cmc
inc
xchg
call
push
js
inc
hlt
dec
fisttpl
adc
fistpl
jo
push
lods
cli
mov
adc
xchg
mov
push
sahf
in
add
inc
xrstors
jg
push
adc
xchg
jmp
mov
mov
in
cwtl
stos
push
or
ja
sahf
adc
sbb
or
push
jnp
lea
push
adc
lds
dec
push
clc
ret
sub
pop
jp
andl
add
and
push
sub
addb
loop
add
fs
pop
out
das
mov
or
shrb
test
mov
jns
xchg
push
cld
jbe
pop
or
and
cld
add
add
adc
add
jecxz
jae,pn
dec
stos
and
cs
ret
stc
shrl
movsb
movq
xor
cmp
jp
xor
int3
pop
mov
xchg
mov
and
movsl
cmp
dec
and
pop
push
insb
je
jle
push
das
xor
xchg
cmp
or
pop
jb
lahf
sbb
adc
or
sbb
fdivrl
sbb
adc
or
nop
and
mov
les
xor
js
adc
or
bound
adc
add
xor
and
mov
add
loope
cmpb
repz
sti
add
xchg
xchg
jge,pn
pop
cs
shrb
dec
add
sbb
sub
ret
xor
inc
pop
push
push
or
ret
add
fistpl
stc
cltd
or
push
incb
in
sub
aas
imul
pop
mov
and
sub
mov
das
pop
cmp
adc
cmp
enter
sbb
push
daa
dec
fwait
les
fldt
cmp
sub
and
push
sub
pushf
sbb
fstpt
add
xor
pop
pushl
add
add
xchg
adc
cmp
add
nop
popf
sbb
adc
lahf
clc
pop
fsubs
mov
lea
mov
aam
cs
or
pop
cmp
sub
mov
inc
or
les
pop
lret
push
jp,pn
sub
pop
or
stos
jo
imull
lahf
mov
lods
or
mov
and
mov
shlb
mov
pushf
test
mov
fsubrl
sub
pop
scas
mov
xor
sub
push
sub
xchg
lea
outsb
and
into
pop
mov
insb
cmpsb
jne
rcll
adc
dec
cmp
mov
lods
mov
outsl
xor
jb
mov
in
mov
or
pop
and
or
data16
stos
mov
push
sbb
mov
xor
and
stos
mov
ror
push
mov
es
cltd
inc
mov
stos
loope
pop
lods
mov
jb
inc
mov
adc
mov
pop
sar
js
lcall
adc
xchg
pop
cs
dec
pop
sbb
iret
test
pop
je
sbb
movsb
lds
lods
xchg
sub
dec
fcmovnbe
int3
mov
andb
inc
pusha
lock
sub
add
push
mulw
frstor
sbb
in
sbb
hlt
xlat
lods
jmp
mov
loopne,pn
adc
adc
aas
xlat
out
and
sub
add
sub
rolb
stos
ss
stos
mov
xchg
rorb
lcall
enter
sbb
inc
xchg
and
pop
movsl
cs
outsl
sti
lods
push
jne
adc
icebp
loopne
and
push
adc
sbb
pop
cmp
adcb
in
pop
cli
and
cmp
sub
cmp
stos
leave
test
jb
inc
adc
loop
mov
cmp
adc
xchg
scas
mov
xchg
insb
das
cmpsb
nopl
mov
aad
popa
scas
nop
pop
lahf
sub
and
or
nop
adc
xchg
data16
adc
and
mov
scas
adc
sub
insb
sub
mov
sub
cli
mov
ss
adc
or
test
xor
sbb
push
scas
scas
adc
mov
push
ficoml
mov
pop
push
mov
dec
dec
sbb
jbe
xchg
cmc
xor
cs
xor
jl
movsb
aam
mov
cmp
cmp
sbb
ss
xchg
mov
mov
stc
xchg
mov
outsl
lret
or
add
das
cmp
pop
je
jbe
sbb
addr16
in
scas
inc
mov
or
movsb
cmp
call
push
xor
mov
xor
testb
popa
insl
cs
or
push
lods
les
sbb
loopne
adc
lods
add
pusha
fs
sbb
gs
mov
mov
jg
outsb
fwait
or
mov
sub
andb
add
and
adc
adc
mov
lods
lret
repnz
mov
pop
sub
repz
ljmp
push
pop
lcall
pop
mov
icebp
repnz
mov
lods
test
cvttps2pi
mov
mov
pop
pop
jp
sbb
jbe
sti
ret
shrl
jge
icebp
mov
or
out
xor
ss
pop
outsl
ss
in
mov
cmp
jl
and
das
and
and
sub
sub
jbe
das
xor
xor
sti
jo
test
or
shrb
dec
push
insb
sahf
outsl
mov
adc
in
ss
pop
mov
pop
pop
movsl
pushf
jle
adc
sbb
push
cmp
in
lret
fisttpl
push
pusha
xor
mov
inc
out
push
aas
fidivs
outsb
js
cmp
aad
push
inc
cmp
pop
dec
jno
cltd
dec
out
int
repz
cltd
mov
div
outsb
inc
mov
jbe
movsl
sbb
adc
divl
push
xor
scas
in
adc
in
insb
mov
add
cs
sub
pusha
inc
adc
push
in
je
adc
pushl
mov
or
mov
pop
dec
add
test
mov
jle
scas
sub
and
inc
movsb
aaa
loopne
mov
jmp
sbb
je
in
and
or
dec
icebp
or
popa
neg
cmp
push
or
leave
ss
das
mov
inc
mov
sbb
decb
dec
xor
std
push
cli
outsb
lock
jns
adc
jmp
or
dec
xchg
outsl
jbe
mov
jmp
inc
adc
add
and
push
mov
cmp
stos
cwtl
and
sbb
std
lcall
stos
pop
call
push
mov
loope
sar
jecxz
adc
les
fs
fistl
stc
and
lea
inc
cmpsl
movsl
ss
jmp
aaa
or
insb
xchg
dec
jnp
mov
xor
mov
das
inc
pop
push
cmp
bound
repnz
pop
je
test
xor
adc
push
lods
sub
ss
jno
jbe
cmp
mov
and
mov
loopne
sub
movsb
mov
mov
push
dec
outsb
stos
mov
in
and
and
xchg
push
and
sbb
xchg
loope
in
vmread
adc
pop
dec
xchg
xchg
lock
sbb
mov
das
mov
test
sub
daa
or
sub
xchg
xor
xchg
or
push
push
cli
stos
bound
inc
sub
sbb
or
or
pop
test
xor
mov
dec
mov
and
cmpsl
xor
and
lcall
xchg
jge
sbb
cmp
inc
das
mov
fwait
insb
xchg
xchg
shr
push
adc
sub
push
jno
pop
pop
ret
je
push
push
test
lds
js
sub
pop
or
adc
icebp
xchg
add
lahf
pusha
mov
lret
jbe
cs
aas
in
mov
pushf
mov
daa
aas
outsb
and
pop
sbb
out
pop
xchg
or
test
mov
pop
add
outsb
sbb
andl
pop
das
pop
inc
popa
or
sbbb
in
cld
jbe
jp
mov
xorl
in
xor
jp
mov
test
and
jge
in
or
jb
push
mov
sbb
movsb
inc
xchg
or
xor
fchs
outsb
mov
push
mov
mov
aas
cmp
mov
dec
loop
adc
pop
dec
repnz
adc
cltd
jle
out
sub
xchg
rcr
add
sbb
sbb
les
mov
les
rclb
xchg
xor
mov
xor
xor
daa
jno
ss
sbb
cld
cmp
movsl
pop
aam
sbb
add
cmpl
gs
inc
les
add
mov
pop
inc
xor
aas
repnz
xchg
xchg
push
mov
mov
movsl
push
inc
push
sti
adc
adc
adc
psrlw
add
adc
mov
dec
sub
sub
jbe
jno
mov
in
jg
cwtl
pop
cmc
lahf
adc
mov
add
mov
pop
cmc
add
sahf
outsl
mov
push
xor
adc
std
jns
mov
scas
dec
ja
shlb
cld
lock
push
fistl
mov
sbb
es
cmp
cmp
mov
sub
jge
addr16
std
fdivs
cmp
insl
jl
sub
sub
pop
stos
sbb
mov
inc
jl
sub
sbb
lret
inc
dec
push
cmp
pop
movsl
inc
or
sbb
fnstcw
test
int3
xchg
js
add
std
sbb
pop
std
daa
je
xor
sahf
lds
push
xlat
mov
scas
sub
cmp
mov
add
mov
jns
stc
jp
cli
lods
ss
sti
jl
cld
lods
ss
cmc
push
inc
inc
fisttpll
addb
and
fs
lret
sub
mov
xorb
push
movsl
pop
movb
and
mov
mov
movsb
enter
int
scas
add
inc
adc
sbb
jbe
adc
adc
add
sub
es
sbb
xor
mov
leave
mov
lahf
pop
aaa
test
xor
push
mov
and
sub
mov
cs
aaa
loope
in
mov
adc
ret
jb
sbb
int
xor
or
sbb
push
inc
inc
push
cmp
mov
add
adc
imul
ljmp
cmp
inc
or
cmp
call
mov
fidivl
xor
mov
mov
jno
inc
add
xor
inc
pop
mov
mov
cmp
dec
in
add
iret
xchg
xchg
and
add
push
repz
pusha
and
cltd
or
cmp
fwait
mov
test
fs
push
push
xorl
mov
cli
fwait
pop
mov
xchg
and
cs
sbb
std
jne
sbb
or
aam
sbb
cmp
or
das
cmp
sub
lahf
arpl
mov
pop
xor
fcoml
or
lcall
les
test
mov
pusha
xchg
and
push
add
push
xchg
jg
adc
lcall
mov
lret
sbb
add
push
sbb
mov
mov
mov
xchg
sbb
push
xor
xor
cmp
fadds
test
test
xchg
ss
mov
stos
cwtl
out
scas
sub
clc
jl
sub
dec
adc
cmp
loopne
aas
push
xor
mov
inc
ret
sub
cmp
movsl
jbe
lret
lahf
dec
push
jl
and
cmp
lock
adc
pop
ja
add
pop
bound
adc
push
clc
and
icebp
xchg
push
push
sub
dec
std
or
xchg
inc
mov
test
in
fbstp
cmp
mov
pop
rclb
mov
push
dec
ljmp
or
fwait
push
mov
xor
jbe
push
outsb
cmp
ret
movsb
movsl
movsl
add
xor
cmp
add
jmp
sub
xchg
push
stos
dec
inc
jmp
stos
cmp
pop
jl
push
sarb
push
pusha
lea
push
rclb
or
jmp
ret
pusha
sti
adc
adc
xchg
icebp
adc
push
ljmp
jmp
pop
cmc
xor
push
pusha
adc
cmp
sbb
sub
mov
mov
movsb
push
pop
aaa
sbb
insb
xchg
xor
movsb
sub
aaa
xor
loope
cmp
mov
mov
fs
sub
es
mov
cmp
cmp
fstp
pop
pop
jge
lods
and
les
xor
sub
jl
and
in
jl
and
cmp
push
sbb
dec
popf
imul
adc
pushf
adc
jg
xor
add
jbe
test
inc
xor
sub
xor
fstl
les
jl
xchg
call
sub
stc
test
ss
out
cs
jge
aas
clc
add
pop
pop
lods
mov
inc
sbb
and
sbb
dec
int
xchg
scas
xor
stos
testl
ss
jp
adc
cs
xor
cmp
ss
xchg
mov
adc
sub
cmp
cmp
insb
xchg
or
sbb
add
mov
dec
inc
cld
insb
inc
cmpsl
jbe
mov
adc
in
aaa
sub
jbe
mov
sub
sbb
or
xchg
dec
pop
pop
xor
mov
lods
movsl
out
ja
dec
cli
in
inc
cmp
sbb
push
push
pop
adc
add
fsubrl
cs
outsl
lea
and
cs
mov
stos
sub
dec
outsb
test
jb
or
sbb
jp
mov
scas
sbb
sbb
mov
push
lahf
stos
insl
stc
push
xchg
or
das
mov
adc
xchg
push
add
ljmp
sub
sti
cmp
je
sbb
shll
lret
in
mov
xchg
mov
insb
sbb
in
outsb
mov
adc
mov
ss
mov
movsl
invd
adc
adc
ss
xor
adc
push
iret
insb
insl
in
lods
sarl
sub
sbb
lds
xor
aaa
imul
sarb
pop
aad
sub
arpl
pop
shrl
dec
cmp
xchg
lret
inc
and
lahf
and
mov
lock
cmpsb
push
aas
xor
sub
xor
clc
inc
xchg
lods
xchg
xchg
jge
jecxz
mov
out
pop
sub
cmpsb
ds
adc
cmp
push
xor
add
push
xchg
push
in
icebp
adc
sbb
sub
arpl
in
lods
jbe
scas
inc
sbb
or
test
cmp
scas
mov
adc
repnz
shrb
xchg
pop
xor
lahf
cmp
ret
push
mov
ss
cwtl
adc
inc
inc
push
loope
cmp
movsl
mov
and
es
fdivl
jno
popl
sbb
mov
mov
fs
mov
xor
aas
fs
stc
movsb
aam
in
inc
pop
mov
cmp
movsb
or
push
cmp
shlb
xchg
and
aad
pop
outsl
loope
xchg
pop
mov
mov
sbb
rcrb
xchg
movsl
cmp
in
fwait
in
pushw
stc
push
addr16
les
inc
sbb
movsl
and
mov
mov
mov
add
push
adc
roll
pop
xchg
sbb
stos
push
pusha
and
and
aas
and
xchg
xor
sbb
add
pop
inc
es
push
sub
pushl
mov
es
pusha
aaa
out
xor
pusha
mov
jbe
or
dec
mov
add
scas
pop
ficoml
lret
and
and
inc
pop
lock
mov
sbb
hlt
dec
sbb
xchg
nop
lcall
push
jbe
in
push
jbe
and
jl
sbb
push
and
in
mov
pop
xchg
push
inc
lret
daa
into
sub
mov
rcrl
lcall
in
pusha
loope
popf
inc
pop
jbe
pop
stos
lea
pop
lahf
sub
inc
jecxz
sahf
xor
scas
push
and
jp
movsl
mov
test
fsub
in
scas
adc
pop
inc
sbb
inc
sbb
in
sbb
in
and
add
sbb
inc
add
inc
sub
mov
test
push
and
jae
test
add
add
movntq
out
adc
mov
adc
push
fisubrl
cmp
clc
mov
xchg
inc
lock
cmp
mov
adc
mov
mov
or
xchg
add
mov
test
mov
sub
icebp
adc
adc
push
ja
jmp
adc
jle
std
jmp
cmp
addr16
ljmp
hlt
repnz
or
add
addr16
cwtl
and
mov
push
inc
js
push
cmp
lahf
inc
or
mov
ljmp
pop
push
aaa
mov
sbb
mov
jl
add
xchg
sbb
add
dec
ret
push
push
bound
aaa
imul
negb
or
xor
shll
add
icebp
dec
dec
pop
and
rclb
add
sub
pusha
cmp
les
sbb
das
xchg
sbb
mov
mov
adc
sub
out
dec
and
mov
mov
push
pop
cmp
and
bound
inc
mov
clc
scas
mov
frndint
js
in
cltd
sbb
bound
loop
pop
xchg
lahf
sub
cmp
inc
test
int
sbb
mov
clc
inc
add
faddl
jno
pushf
dec
stos
push
xchg
pop
mov
ljmp
data16
xchg
push
xor
jecxz
sub
into
dec
shll
icebp
cmpb
mov
and
sub
jge
lcall
movsb
pop
outsl
sub
and
add
xchg
xchg
in
stc
sbb
stc
push
sbb
fcoms
clc
push
idivb
cmp
pusha
mov
add
sub
sub
sub
pop
xchg
sbb
imul
push
add
mov
cmp
verr
mov
xor
ss
jmp
add
aaa
daa
fdivrs
sbb
pop
xor
xor
scas
lods
jbe
push
jns
sbb
mov
cmp
adc
sub
mov
or
dec
jl
inc
in
push
inc
push
pop
movb
popf
es
add
inc
cmpsb
xor
cmp
cmpsb
das
xor
mov
sub
popa
cmp
cld
jge
mov
xor
push
jp
lahf
sub
jp
call
and
cltd
mov
push
push
jbe
pushf
sbb
adc
gs
xor
int3
neg
and
mov
sbb
adc
sbb
movsl
ljmp
push
and
addr16
push
loope
dec
sahf
sub
fdivs
mov
mov
int3
in
out
xor
inc
test
or
cmp
rcrb
insb
xor
fscale
rcrb
cmp
mov
sarl
pop
xlat
pop
popa
stc
daa
test
mov
mov
sub
add
sub
mov
sarb
pusha
in
sub
mov
cmp
xor
rorb
mov
xlat
xchg
xor
xor
sub
add
mov
mov
test
xor
out
repnz
mov
stos
inc
and
add
push
jge
inc
cmp
jae
addr16
sub
rol
inc
inc
mov
fistl
mov
icebp
leave
test
mov
mov
sub
mov
add
scas
sub
mov
cmc
cmp
cmpsl
dec
adc
xchg
stos
or
add
sti
dec
shll
pop
jnp
push
and
sbbl
aaa
lret
popa
add
lods
bound
in
aas
push
mov
divl
and
test
mov
or
mov
inc
movsl
sbb
xor
stc
movsb
add
add
xchg
jp
adc
sbb
lock
testl
test
repz
mov
fwait
scas
lock
cltd
add
mov
adc
xchg
dec
ret
into
mov
pop
mov
adc
mov
mov
xor
movsl
adc
xchg
and
mov
xchg
addr16
sbb
mov
fisubrs
jge
sbb
push
mov
ret
push
mov
loop
push
lret
and
push
pop
mov
cmovne
mov
adc
loopne
adc
and
dec
pop
jecxz
or
dec
dec
xchg
sbb
mov
mov
cmp
sbb
push
mov
ret
sbb
sub
push
mov
xor
sahf
cmp
out
mov
adc
sbb
test
or
aaa
mov
inc
and
push
bound
mov
cmc
sbb
jne
dec
jno
xchg
mov
idivb
dec
xchg
push
cli
insb
cs
pop
aaa
mov
stos
test
xchg
inc
out
xor
push
push
jmp
cmp
sbb
ret
push
popf
cmp
test
fisubl
push
int
or
xor
adc
or
sbb
imul
test
or
or
adc
popf
aam
out
dec
xchg
mov
lret
stos
adc
scas
adc
daa
repz
push
lds
adc
insb
fstpl
negl
aad
insb
stos
aam
push
loope
mov
ja
pop
pushf
mov
pop
pop
iret
mov
and
inc
adc
lods
mov
adc
loope
stos
push
insb
sbbb
aaa
sbb
out
ret
repnz
xor
adc
adc
insb
loopne
dec
data16
adc
and
insb
test
in
or
mov
rolb
loopne
mov
imul
movsl
outsb
jnp
pop
stos
js,pn
scas
push
shrl
cli
scas
sbb
sbb
cmp
push
xor
mov
mov
pop
les
das
je
inc
popf
mov
cmp
fucomp
mov
sbb
jl
sbb
sbb
xor
xchg
mov
repnz
in
jne
dec
sub
fmuls
and
stos
mov
filds
mov
aaa
cmp
add
pop
or
dec
fstpl
adc
bound
ljmp
lods
jle
sarl
movsl
or
sub
xor
ficomps
xor
mov
daa
je
dec
scas
xor
daa
bound
incb
xor
scas
dec
xor
add
js
inc
cmp
insb
dec
xorl
cmp
push
cmp
xchg
mov
cmp
push
scas
xchg
xor
jbe
cmp
xchg
pop
nop
mov
xchg
or
cmp
sbb
sub
cmpsb
sbbl
filds
and
push
cmp
push
movlps
xor
cmp
mov
cmpsl
adc
stos
mov
jle
dec
mov
mov
fdivrs
xor
add
es
mov
sbb
push
mov
pop
sbb
jle
sar
dec
mov
xchg
ds
push
or
lock
push
xorb
adc
aad
and
mov
cmp
sbb
cmp
dec
sub
or
sbb
cmovno
and
or
inc
cmp
jne
sub
and
pushf
cmp
cs
fs
sbbb
push
inc
add
rolb
and
in
mov
sbb
pop
xor
sub
push
out
inc
xchg
cmp
movsl
xor
add
sbbb
mov
xchg
outsl
int
inc
aad
adc
sub
in
stc
jno
frstor
inc
cmp
xor
in
mov
add
push
mov
shlb
cli
or
js
jp
cmp
add
sub
or
sbb
mov
pop
js
or
movsl
xor
pop
xor
adc
rcrb
aaa
shrl
scas
xchg
xor
pop
push
std
fimull
hlt
add
and
dec
mov
xchg
xchg
pop
fwait
daa
push
xchg
rcll
adc
push
enter
sbb
cmp
cmp
js
add
mov
xchg
cmp
aas
stos
inc
bound
xor
pop
adc
jo
dec
xchg
cmp
sahf
xchg
inc
xchg
mov
cs
mov
iret
or
push
and
enter
mov
or
mov
mov
je
add
jge
jmp
sbb
aaa
push
add
lock
push
dec
outsb
scas
inc
cmpsl
push
mov
inc
push
stos
xor
mov
sub
mov
or
mov
fnsave
sti
mov
in
jmp
add
and
add
mov
jnp
js
jae
xchg
test
pop
outsb
inc
jg
es
and
pop
and
xor
cmp
lds
rorl
and
and
push
dec
pshufw
or
sbb
ret
lret
inc
in
push
xor
mov
xor
pop
ret
js
fisttpl
pop
inc
insb
mov
pop
pop
mov
inc
ss
jb
xchg
sbb
pop
mov
sub
loop
sbb
das
icebp
dec
or
repnz
mov
adc
push
out
dec
decb
roll
xor
xor
shlb
jle
cli
push
adc
js
or
inc
cli
jle
into
das
cmp
les
sbb
mov
and
shll
mov
jno
mov
lods
or
mov
pop
movsl
mov
sub
push
push
and
pop
into
adc
sub
jle
cmp
lahf
bound
fcoms
rclb
sbb
or
jp
mov
push
outsl
cmp
into
or
imul
in
jo
and
jb
sbb
push
push
xor
mov
nop
adc
rorb
inc
cmp
js
inc
ljmp
pop
mov
dec
rcrl
mov
dec
enter
gs
pop
cmp
adc
jge
add
and
xchg
and
push
mov
cwtl
sub
sub
in
xchg
push
fwait
xorb
in
ljmp
fcmovne
sub
lret
pop
stos
bound
push
adc
xchg
sbb
adc
das
cmp
mov
xchg
adc
aad
in
ja
iret
mov
lret
call
in
leave
xchg
mov
mov
push
outsl
mov
fimuls
or
inc
icebp
popf
push
mov
mov
shll
mov
add
inc
add
inc
movsb
mov
xor
cmp
cmpsb
pop
or
push
nop
xchg
sub
jle
lret
inc
ja
adc
inc
xchg
ss
or
dec
loope
cmp
and
inc
jmp
cmp
popf
fwait
iret
sbb
pusha
cmpsb
jnp
mov
es
das
push
pusha
and
mov
jecxz
inc
out
out
jg
mov
call
fimull
mov
adc
dec
mov
imul
std
or
leave
cmp
inc
testb
cmp
dec
jns
sub
or
or
or
insl
sbb
sbb
aas
repnz
pop
push
and
add
xlat
cmpsl
mov
stos
ret
cmpsl
cwtl
outsb
sbb
sbb
xchg
sub
imul
sub
call
mov
mov
push
jno
loop
outsl
adc
xor
add
es
xor
pusha
pop
and
jbe
sbb
pop
jmp
cld
xchg
test
jmp
aas
shl
push
mov
mov
test
push
mov
rclb
inc
and
mov
das
add
test
inc
add
sub
enter
mov
push
rcr
xor
loopne
cmp
adc
xor
sti
push
pop
clc
add
xor
fs
pop
and
and
inc
xchg
repz
pop
and
mov
cmpsb
mov
or
dec
or
gs
cmc
inc
ss
push
jae
jge
xchg
inc
push
jne
call
push
jo
cltd
cmp
rcrl
pop
jmp
sbb
xchg
jmp
xchg
sti
cmp
or
lahf
ja
mov
cmp
sbb
in
loopne
in
xor
pop
cli
xor
jecxz
dec
xchg
push
mov
or
sbb
fwait
gs
in
shl
and
adc
int3
fildll
adc
dec
xor
cmpsb
jl
cmp
repnz
fimull
add
inc
testl
das
sbb
roll
sbb
or
or
es
cmp
test
iret
cmp
mov
jp
sub
and
sbb
inc
test
ret
cmp
cli
pop
mov
add
mov
sahf
xchg
mov
sub
adc
mov
cmp
and
xor
enter
push
dec
arpl
testl
aaa
mov
shll
dec
es
fsubl
pop
ss
cmpsb
mov
aaa
test
and
mov
into
mov
xor
pop
and
aas
in
jb
sub
and
jp
sub
xor
push
iret
lods
jl
popa
or
adc
pop
sbb
push
push
adc
inc
mov
cmp
sbb
sbb
adc
push
movsl
adc
push
push
sbb
or
push
nop
mov
orb
sub
jo
cs
sub
mov
cltd
aaa
pop
push
cld
or
aas
mov
mov
or
jb
test
xchg
negl
pop
subb
data16
cs
fs
push
movsl
cmp
pushf
adc
cmpsb
xor
sub
sub
lahf
rep
stos
mov
cmp
sub
lods
xchg
and
sub
and
ljmp
xlat
sbb
pusha
mov
mov
fwait
inc
and
add
inc
aas
lods
lods
cmp
lds
test
stc
ret
outsb
pusha
inc
in
mov
call
jns
xor
mov
sahf
les
test
bound
add
and
aaa
jl
push
xor
mov
aas
in
into
or
lods
ret
sub
sbbl
inc
sbb
jl
cmp
aas
cli
or
pop
cmp
inc
xchg
mov
sbb
dec
or
inc
inc
and
mull
mov
xor
orl
add
mov
adc
lahf
xor
or
scas
mov
repnz
fidivs
add
test
lcall
jb
adc
je
mov
xor
cmp
aaa
inc
das
inc
cld
std
pop
push
rcrl
je
pop
xor
or
adc
lock
mov
pusha
mov
inc
dec
fcomip
pop
divb
push
stc
sbb
adc
sub
jns
pop
mov
xorb
cmp
sbb
pop
lock
cmp
jne
cs
orb
mov
std
divb
aas
enter
mov
popf
lret
or
lret
xchg
test
lret
fdivl
out
and
divb
sub
ja
outsb
cmpsb
loop
data16
outsl
enter
sbb
daa
cmp
dec
aad
lea
mov
mov
mov
fwait
lds
or
jns
clc
push
sbb
mov
mov
mov
pop
mov
addb
mov
xchg
ss
pop
cmp
aas
mov
cmp
adc
xor
mov
jne
das
jp
test
push
sub
repnz
inc
sub
jnp
nop
sahf
push
in
subb
das
es
xor
sti
lods
rep
adc
mov
inc
and
and
aaa
xchg
cmp
or
sub
push
sbb
and
push
sub
mov
sub
inc
pop
xor
dec
ss
lods
dec
das
scas
mov
push
xor
xchg
xchg
pop
push
cs
cs
adc
loope
stos
pop
cmpsb
das
xor
cld
imul
adc
sbb
ss
sub
dec
scas
push
mov
xor
and
and
or
mov
lret
sub
bound
add
cs
fst
inc
loopne
jmp
pusha
and
xlat
icebp
sub
call
sub
pusha
cmp
push
and
mov
mov
fisubl
neg
sub
out
js
bound
orb
adc
das
pop
sbb
push
mov
dec
ja
sbb
les
stc
jp
sub
mov
xchg
or
clc
jno
and
sbb
xchg
jbe
scas
cs
sti
cmpsb
inc
mov
shll
mov
cmp
and
xor
cmp
mov
dec
sub
outsl
mov
sub
aaa
dec
lods
mov
je
cmp
push
xor
mov
adc
fst
sbb
or
test
adc
insb
or
cmp
in
push
fs
js
adc
add
jle
mov
dec
test
xchg
cmp
lahf
adc
and
adc
pop
xor
dec
nop
mov
mov
xchg
sub
das
pop
sub
test
lahf
jp
icebp
dec
imull
mov
cld
mov
dec
push
push
push
mov
cltd
cmp
aaa
aas
mov
jecxz
sbb
sub
jno
aas
mov
ss
jbe
fnstenv
jb
cmpsb
into
rorb
mov
repnz
cmp
sub
adcl
push
stos
pop
lods
idivb
addr16
mov
aas
push
scas
js
cmp
mov
mov
cmp
inc
lods
sub
sahf
xor
mov
inc
cld
jbe
divl
push
jmp
and
cmp
mov
mov
adc
adc
dec
lods
or
jns
cmp
imul
adc
jns
push
sbb
xor
sub
fs
fs
ljmp
or
push
push
outsb
in
int3
pop
or
mov
mov
xor
jl
arpl
xor
cld
cmp
and
xabort
xor
aas
ljmp
xchg
jns
enter
mov
cmp
mov
aas
mov
xor
mov
fs
xor
mov
mov
inc
loope
pop
loope
clc
movhps
loop
popf
xor
rorb
pusha
bndldx
sti
sbb
aaa
cmp
or
gs
sbb
aaa
push
in
xor
fsub
adc
into
stos
ds
xor
mov
adc
mov
aas
dec
and
sbb
decb
sbb
es
and
pop
in
push
clc
fsubp
adc
mov
sub
dec
sub
fwait
adc
filds
aaa
xchg
jnp
jecxz
push
and
push
fisttps
push
fwait
and
dec
pop
or
in
push
mov
pop
inc
pop
mov
adc
adc
jl
dec
and
cmp
sub
jae
jne
jno
xor
in
xchg
sub
test
add
cmp
push
out
lahf
aas
or
sub
pushf
sbb
sub
push
xchg
xchg
in
fisttpl
sahf
adc
lret
add
push
pop
mov
adc
or
hlt
das
cmpsb
adc
xor
pop
cld
xor
inc
insl
lahf
mov
xchg
dec
outsb
pop
mov
push
cmp
adc
adc
les
cmpb
mov
push
mov
adc
sbb
mov
add
jae
sbb
in
shl
jne
test
jno
mov
fmul
ljmp
cld
aad
aad
orb
mov
pop
data16
sub
or
cwtl
fistps
xor
loopne
cmp
sub
add
pop
xor
mov
push
adc
sub
mov
bound
push
pop
imul
mov
or
cmc
cmp
das
and
mov
cmp
loopne
test
arpl
cmp
or
add
cmpsb
sti
sub
mov
jnp
cmp
and
andl
cmc
xchg
insl
lods
xor
pop
and
inc
das
mov
and
loopne
ss
or
cmpsl
push
pusha
enter
xchg
mov
sbb
movsb
push
test
pop
mov
cmp
lock
push
or
sbb
xor
jle
mov
sub
push
or
mov
psubusb
mov
pop
push
push
aad
and
push
xor
addb
scas
enter
scas
add
scas
sbb
xor
adc
sub
cs
mov
push
scas
sbb
sbb
dec
adc
inc
ss
pushl
cmp
loopne
mov
nop
push
rolb
pop
cmp
fcompl
lods
lret
xchg
jmp
jecxz
fs
jns
and
jg
push
aas
fcoms
in
mov
aas
gs
sub
mov
or
test
ss
jne
testb
dec
xchg
mov
jmp
hlt
sub
add
cmp
cmp
or
pop
xchg
rolb
jg
inc
pop
xchg
push
lahf
inc
pushl
sub
and
cmp
push
xchg
push
adc
mov
cli
xchg
and
or
mov
dec
push
int
dec
adc
pop
and
movsl
sbb
dec
lea
adc
sbb
in
insl
push
xchg
test
es
std
ljmp
into
xor
insb
in
or
pop
repnz
pushf
aaa
mov
es
lea
loope
jp
or
loope
jp
pop
pop
mov
flds
xor
add
or
or
dec
mov
xor
sbbb
fld
pop
mov
cmp
incb
add
or
cld
lock
push
mov
ja
inc
inc
push
xchg
xor
icebp
sbb
pop
or
sub
mov
sbb
jns
lods
sub
rcl
lret
daa
fidivrs
sub
xlat
and
mov
adc
xor
test
cmp
in
outsb
pusha
cmp
outsb
push
cmp
cs
xchg
add
gs
push
inc
or
les
call
inc
adc
shl
or
mov
mov
inc
dec
mul
pop
repnz
pop
lock
push
jno
cld
inc
push
jbe
cld
jle
sarb
bound
out
cld
aas
sbb
sarb
mov
aas
mov
xchg
sbb
push
and
jb
add
xchg
sub
sub
xchg
mov
aam
cmp
shrb
repnz
xorb
xor
ss
movsb
into
or
add
clc
or
aaa
popf
jmp
mov
scas
dec
push
sbb
fdivrs
jne
stos
push
push
and
shll
adc
xor
xor
cwtl
pop
cmp
dec
pop
xchg
or
sti
cmp
cmp
push
es
jl
fistps
mov
enter
mov
sub
sub
jle
sahf
je
pop
js
jo
cmp
cmp
xor
lret
jnp
das
aaa
sti
arpl
pusha
mov
dec
adc
shl
jmp
pop
pop
sahf
inc
call
pop
or
pop
push
jns
xchg
cmp
cmp
mov
jb
scas
test
stos
jl
lahf
fdivrl
xchg
mov
push
mov
shrl
stos
je
pop
arpl
cmpsl
je
xchg
jecxz
or
dec
fs
pop
jl
and
add
dec
inc
call
xchg
sub
pop
fldl
mov
dec
fsubrl
cmp
adc
loop
stc
cmp
int
xchg
nop
inc
add
sbb
cwtl
fistl
rcrl
std
fstp
xor
aas
in
or
adc
aaa
movsb
loopne
imul
fwait
add
xor
add
pop
rcll
or
xor
xor
cs
fbstp
das
in
inc
aaa
popa
outsl
xchg
stos
cmp
dec
adc
cmp
lods
test
push
cmpb
xor
and
test
mov
aas
cmp
mov
inc
mov
ljmp
cmp
mov
into
jno
jo
arpl
add
mov
xor
movsb
ret
fwait
cmc
out
mov
lahf
cmp
add
cltd
dec
in
fnstcw
clc
jb
adc
mov
test
subb
jmp
scas
out
jge
xchg
imul
sbb
sub
outsl
sbb
je
lea
add
int
dec
or
add
mov
cmp
sbb
mov
xor
mov
dec
sbb
inc
mov
xor
jp
adc
sbb
jns
lea
mov
cmp
adc
sub
xor
jecxz
mov
push
cmp
adc
sub
jbe
pop
mov
xchg
mov
scas
and
push
jns
adc
cltd
mov
cmp
adc
scas
pushf
jbe
push
jns
bound
mov
cmp
test
in
or
mov
dec
inc
push
pop
adc
mov
and
mov
mov
xor
scas
mulb
cmp
or
mov
xor
dec
mov
dec
jmp
push
mov
js
cmp
clc
or
add
adc
cld
ss
icebp
outsl
mov
sahf
test
sub
aas
cmc
pop
cwtl
fcompl
pop
cmp
add
adc
addr16
and
pop
pop
cmp
je
scas
sahf
xchg
andb
lret
aas
jmp
shl
andl
sub
addl
andl
inc
mov
daa
es
cmp
cmpsb
aas
jp
add
pop
stos
inc
mov
in
aas
mov
xor
scas
arpl
sub
leave
cmp
xchg
adc
mov
sbb
out
test
sub
scas
add
xchg
sbb
inc
jp
mov
call
cmpsl
sbb
mov
inc
jl
cs
inc
add
cli
xor
movsb
mov
mov
pushf
cmp
push
bound
or
rclb
es
jnp
xor
xchg
add
stos
std
mov
rcrb
dec
sahf
sub
push
mov
xchg
pop
sub
fwait
nop
daa
jo
cmp
shrl
dec
xor
sbb
cmp
xor
cld
stos
xor
jne
jl
add
jle
inc
or
cmp
insb
add
popf
stos
std
cmp
lods
or
stos
imul
lret
push
lods
pop
jo
or
cs
cmc
stc
and
cld
jle
and
pop
adc
push
xor
sarb
leave
push
in
dec
adc
imul
imul
adc
les
aam
aas
xchg
sub
sahf
xorl
adc
in
orl
mov
jge
fwait
ret
jne
rcll
faddl
and
out
mov
stos
ss
lods
jbe
scas
aas
rorb
mov
mov
cmc
adc
push
daa
rcrb
push
pop
lcall
xchg
push
mov
mov
push
jns
cmp
xor
mov
pop
insl
leave
jp
push
and
xor
push
mov
icebp
dec
movsb
mov
cmpb
push
jo
sbb
xor
out
lret
jbe
jecxz
add
mov
xor
shl
sbb
dec
outsb
call
movsb
xor
loop
dec
sbb
gs
or
dec
shrl
pop
push
pop
jne
mov
mov
jo
xor
xlat
push
and
loope
test
andl
pusha
jecxz
stos
lahf
shrl
aam
cmp
lods
jmp
outsb
jp
wrmsr
dec
hlt
dec
xor
pushl
xor
imul
mov
es
mov
test
jge
es
mov
and
shll
cmp
lock
cli
pop
hlt
imulb
jnp
push
jp
pop
adc
add
sub
mov
push
dec
scas
cwtl
into
scas
cmp
and
dec
negb
mov
jo
int
test
adc
pop
sarb
mov
inc
mov
sbb
push
mov
jnp
inc
mov
dec
repnz
pop
popf
lcall
cmp
jb
mov
sbb
aas
xor
outsl
loopne
jp
push
adc
sbb
je
leave
nop
push
testb
or
ret
and
xor
sbb
enter
push
add
das
jae
cmp
fsubrs
push
jbe
clc
inc
adc
mov
cmp
cmc
pusha
cmp
js
ss
pop
inc
lahf
cmp
sbb
cmp
cmc
adc
daa
cmp
inc
lahf
push
scas
adc
xor
cmp
ret
scas
sbb
pop
add
add
xor
and
fucomp
xor
mov
ss
xchg
mov
xchg
cmp
sub
inc
sbb
dec
push
push
pop
pop
or
mov
mov
pusha
inc
pop
negb
push
sbb
sub
sbb
and
jbe
mov
stos
cmp
xchg
pop
sti
xor
cmp
psubusw
adc
mov
push
ss
cmp
cmp
movsb
loope
pop
addb
aas
cmc
pop
fdivs
sub
mov
arpl
hlt
xchg
insb
flds
pop
idivl
dec
neg
add
adc
xor
sub
dec
sbb
stos
leave
mov
repz
pop
sub
or
add
pop
icebp
push
mov
sbb
lea
adc
xorb
scas
gs
sbb
stos
std
sti
arpl
pop
aad
xchg
fwait
cmp
cli
add
std
icebp
sbbb
push
lahf
aaa
xor
inc
xchg
fsubrl
and
add
enter
mov
faddl
inc
loopne
ret
dec
or
jp
push
inc
scas
or
mov
fdivrl
test
xorb
stos
sub
mov
jno
sub
lods
shlb
jnp
sub
mov
cmp
and
adc
xchg
push
int3
sub
mov
in
sbb
dec
sub
outsb
push
jp
cmp
or
jp
movaps
adc
adc
loope
push
mov
and
add
and
add
shrb
lret
xor
out
aas
xchg
mov
xor
jne
push
outsb
pop
pop
sub
mov
dec
jmp
adc
addr16
les
adc
aas
inc
dec
xlat
cmp
or
pusha
pop
dec
add
subl
xor
adc
xchg
xor
mov
sub
adc
xchg
pusha
jecxz
aas
jbe
hlt
mov
outsl
out
addr16
add
add
das
mov
cmp
mov
mov
mov
cmc
xchg
inc
jo
lea
and
or
pop
and
pop
gs
mov
push
pop
mov
rcrl
adc
inc
arpl
sbb
mov
fwait
outsl
sbb
add
mov
negb
jge
repnz
outsl
mov
mov
and
sbb
or
pop
xchg
sub
lret
mov
sarb
mov
and
pop
cmc
dec
push
lods
pop
mov
lds
insb
pop
aas
xchg
jecxz
aaa
cmp
mov
iret
fwait
mov
leave
imul
fwait
inc
push
std
nop
jbe
sbb
dec
in
test
dec
gs
sbbb
and
jne
rorb
insb
push
xor
and
lea
pop
repnz
les
pusha
aaa
fwait
jns
mov
ret
lds
and
into
loope
pop
dec
jno
test
jp
inc
outsb
cmp
push
and
sub
pop
jle
push
add
push
pushf
ss
sbb
xor
mov
mov
int
sbb
inc
jno
je
test
and
pop
add
jb
mov
cmp
pusha
rcrl
mov
jmp
sub
xor
push
js
stos
pop
mov
cs
fwait
loopne
pop
scas
xor
pushf
fisubs
pusha
mov
mov
or
js
xchg
mov
stos
dec
sbb
sbb
add
dec
pop
jbe
cmp
mov
lods
pop
mov
es
inc
mov
shl
fadds
test
push
pusha
xor
mov
lods
lds
xor
mov
pop
lock
xchg
adc
movsl
scas
mov
adc
mov
pop
pusha
cmp
xchg
mov
out
cmp
stos
xor
dec
xor
jo
xlat
adc
xchg
and
lahf
je
pop
aas
mov
cmp
es
in
insb
mov
sbb
dec
mov
idivb
add
or
cli
sub
cmp
cmp
clc
dec
mov
lds
fidivrl
inc
or
xchg
call
aaa
sub
addb
push
xor
arpl
and
movsl
inc
mov
sub
pop
test
mov
aaa
push
or
testb
enter
shr
or
mov
sub
jp
lods
xor
mov
and
jle
enter
into
clc
xchg
ja
xor
pop
pop
fisubrl
xor
sbb
sarb
sub
cwtl
xchg
xor
mov
sti
sub
aaa
sbb
mov
sub
out
pop
lods
xchg
and
std
xor
std
or
or
adc
push
sbb
nop
stc
pop
bound
icebp
test
or
mov
dec
lret
scas
push
rorl
scas
aas
fstps
add
push
es
inc
inc
data16
aas
inc
and
push
and
fstl
adc
or
rorb
insb
xlat
stos
add
ret
push
std
out
pusha
idivb
js
push
icebp
arpl
dec
int3
pop
icebp
xchg
push
mov
and
mov
inc
sti
out
scas
mov
xor
fistps
sbb
sub
cmp
test
mov
dec
sbb
xor
mov
sub
shl
ja
jecxz
xchg
test
push
das
mov
push
mov
mov
std
in
rep
xchg
insl
cs
push
pop
push
inc
sub
cmp
sbb
sub
jbe
imul
sbb
je
test
xor
arpl
pusha
xor
fisttpll
scas
sbb
inc
aas
mov
lahf
sub
cmp
pop
xorb
pop
inc
sbb
pop
loop
mov
imul
jbe
jl
pop
les
aad
nop
clc
daa
pop
mov
ss
arpl
adc
out
enter
push
loopne
and
xorl
cmp
xor
cli
mov
jge
mov
mov
and
mov
mov
adc
fnstsw
xchg
orb
pop
and
or
imul
imul
mov
add
lcall
add
add
inc
xchg
js
pop
dec
dec
cmp
xchg
mov
rcrl
sub
xor
std
ss
lea
pop
add
rcr
sbb
aas
jp
mov
mov
xor
push
cmpsb
xor
shll
and
mov
shl
and
push
fwait
fs
pop
sub
popf
xor
push
daa
es
adc
nop
pop
imul
popa
sbb
xor
orb
or
cli
or
lock
out
bound
or
dec
xlat
adc
push
std
sbb
mov
or
stos
mov
lea
cmpsb
xlat
aaa
jmp
pop
push
push
jns
xor
sbb
jp
mov
cmp
sub
adc
push
inc
ss
adc
mov
lds
sahf
pop
mov
and
andb
subb
jae
gs
cs
out
mov
xor
pop
push
rdmsr
mov
adc
dec
movsl
sub
lea
orb
cmpsb
adc
es
sub
or
rcll
das
lea
ret
sub
add
cmc
aas
jecxz
sbb
es
cltd
or
rcrl
and
xchg
es
repz
es
shlb
fimull
test
js
daa
mov
jge
scas
sub
pop
aas
adc
and
sbb
dec
pop
sbb
loopne
shlb
add
andb
dec
aad
lods
lahf
daa
movsl
dec
pop
hlt
ror
adc
mov
cmp
stc
xchg
cmp
lret
xor
inc
sub
es
and
push
daa
icebp
pop
lock
jbe
and
xchg
fwait
push
bound
and
cmp
int
pusha
sub
lods
inc
outsb
dec
jecxz
jbe
mov
cmp
sub
mov
pushf
cmp
adc
stos
lret
mov
sub
mov
cmp
push
mov
nop
adc
sbb
sub
pop
mov
push
jbe
xor
nop
push
js
jp
jle
hlt
ret
pop
xchg
and
adcl
sub
jmp
inc
stos
or
repz
lods
lock
add
sbb
adc
sbb
jnp
pop
outsl
adc
mov
test
and
or
mov
sbb
fdiv
inc
insl
pop
in
int3
inc
popf
in
adc
mov
jns
mov
cld
xchg
sbb
sbb
pop
sbb
fldcw
insb
cmp
lods
ljmp
mov
push
loop
sub
mov
in
outsb
push
and
lock
xchg
aas
mov
jbe
jp
pop
add
ss
or
add
pop
aas
mov
jge
add
call
inc
xchg
push
pop
xor
xor
les
mov
push
aaa
repnz
fwait
mov
xchg
mov
ss
aaa
insl
ret
inc
adc
push
sbb
loope
sbb
mov
mov
aam
mov
push
cmp
mov
adc
sbb
std
js
add
into
cmp
fucomp
fadds
adc
cmpsl
clc
shrl
ss
add
cmp
xchg
and
lods
adc
cmp
mov
jno
dec
ret
push
popa
xor
adc
adc
push
sub
mov
cmpl
cmpsl
sbb
or
adcb
or
mov
adc
pop
xchg
insb
leave
lcall
and
jl
ficompl
scas
test
jecxz
push
lahf
sbb
dec
pop
add
test
xor
sbb
mov
and
bnd
repnz
clc
ljmp
insl
jbe
sub
add
enter
sub
pop
xchg
or
stos
nop
jbe
mov
enter
test
inc
dec
mov
repnz
lahf
loopne
pushf
scas
fidivrl
aam
cmc
sub
outsl
push
jb
call
dec
fwait
pusha
pop
fstpt
mov
in
adc
sbb
insl
or
fyl2x
std
popa
jns
mov
dec
inc
jle
gs
jl
mov
ss
pusha
xor
jge
sub
jle
inc
shr
ds
movsb
cmp
dec
xor
mov
jle
sub
ljmp
bound
add
gs
cmpsb
xchg
scas
xchg
xor
mov
push
inc
sub
adc
pop
fcompl
push
es
xchg
por
test
mov
gs
xor
daa
stos
cmpl
adc
int3
xor
rcl
inc
lock
ja
mov
jbe
mov
lods
in
std
or
xor
enter
jno
and
sahf
mov
aas
lods
mov
bound
in
rorl
js
lods
lahf
add
andb
cmp
xor
lods
jbe
fidivrs
aas
mov
mov
lods
mov
inc
adc
cmpsl
adc
mov
jb
dec
xchg
push
push
adc
scas
lcall
jns
cld
inc
xor
adc
iret
sahf
cltd
test
lods
scas
adc
scas
mov
aas
clc
sbb
jnp
mov
xchg
mov
aas
add
rcll
jno
andb
xor
or
jp
orb
sub
dec
into
xchg
loop
or
es
in
or
sub
mov
clc
xlat
pusha
xchg
xchg
xor
cwtl
aas
xchg
mov
xchg
mov
push
dec
iret
fsubrs
cmp
mov
dec
ljmp
mov
daa
aaa
xor
sub
movsl
std
cmp
std
cmp
cmp
push
andb
or
enter
and
hlt
mov
je
std
xor
sub
into
sub
sbbb
xchg
sub
into
ja
sbb
rcll
mov
pop
lret
xchg
lods
push
sub
mov
xchg
xor
arpl
aaa
das
shl
hlt
popf
adc
mov
sahf
mov
cmp
cmpsb
dec
push
les
sub
mov
aaa
dec
pop
mov
test
sbb
inc
jae
inc
adc
btc
lock
jg
aaa
insb
push
cmp
push
hlt
aaa
ret
in
les
stc
lea
sub
sbb
or
or
jbe
outsl
inc
aas
xor
mov
mov
dec
outsl
in
mov
fwait
pop
in
and
cmpsl
sbb
dec
cmp
cmp
jnp
sub
add
das
lods
cmp
mov
inc
or
mov
int3
sbb
call
inc
xchg
push
movsl
bound
je
mov
cli
sub
mov
mov
pop
test
xor
sub
fnsave
scas
xchg
pop
das
in
out
cmp
push
adc
aas
jle
mov
ficomps
les
inc
mov
aam
leave
xchg
leave
lret
sarb
mov
xor
xor
xorl
cltd
pop
push
mov
rolb
mov
popl
ja,pn
cld
push
and
sbbb
cwtl
push
inc
xchg
in
cmp
js
mov
ret
or
mov
enter
mov
mov
in
or
mov
adc
inc
sbb
into
popf
sti
jnp
lret
mov
jg
adc
push
fs
adc
sbb
ljmp
aad
mov
or
data16
push
inc
fwait
sbb
add
cs
lret
pusha
sub
dec
lcall
icebp
sub
dec
mov
sahf
sbb
xor
xor
xchg
push
sar
dec
mov
inc
daa
sub
movsb
mov
shll
movsb
mov
xor
in
ret
push
data16
mov
cmp
push
das
push
lahf
cmp
add
aas
cmp
jecxz
mov
xchg
add
test
xchg
xor
cmp
cmp
lret
sub
jl
test
mov
push
int
jmp
pop
cmp
cmp
jb
daa
mov
xor
sub
adc
fildl
lcall
jg
jb
and
dec
shlb
in
jb
imul
shrb
adc
xor
shll
inc
sbb
es
dec
cwtl
xor
inc
fcomps
jle
ss
sub
les
out
and
mov
push
mov
cltd
ss
lret
jp
push
mov
out
jae
mov
fwait
pop
push
cwtl
mov
mov
mov
mov
call
hlt
cmp
or
sar
xor
mov
sbb
xor
mov
or
leave
push
mov
rcrb
mov
add
jae
mov
sbb
mov
jae
xchg
cmc
mov
pop
pop
scas
mov
dec
xchg
mov
push
or
or
mov
stos
sysenter
mov
lock
push
jecxz
das
sbb
sub
shrb
lahf
scas
mov
cmp
mov
inc
and
add
lea
dec
fs
aas
inc
in
stos
push
push
mov
mov
in
sbb
lods
adc
inc
cmp
xchg
and
xchg
imul
jp
mov
sti
pop
rcrb
pop
arpl
push
adc
lea
push
lds
pop
adc
xorl
icebp
insl
mov
or
mov
and
hlt
mov
clc
xchg
addr16
cmp
mov
je
movsb
sbb
out
jnp
ja
jnp
movsl
xchg
std
lcall
and
cmp
lods
fstl
testl
xor
cmc
sub
sub
test
push
push
mov
pop
dec
push
shrb
and
mov
xchg
scas
bound
xor
add
mov
xchg
or
xor
shrb
sbb
or
cmp
daa
push
push
aaa
inc
mov
pop
sar
push
jle
add
push
xlat
lock
subb
ljmp
lds
jno
lock
xchg
jae
mov
xor
adc
mov
inc
pusha
and
add
dec
data16
inc
dec
in
inc
mov
inc
push
xor
les
xor
lret
subb
fstpl
popf
leave
inc
nop
jae
frstor
cmp
mov
ljmp
mov
fmulp
mov
mov
cmc
addr16
xchg
add
xchg
enter
orps
outsl
xor
add
enter
adc
in
sub
push
sahf
inc
sub
xchg
and
jmp
or
mov
cmpsb
sbb
and
mov
inc
fs
js
sub
and
xchg
pop
lea
push
aad
mov
pop
pop
jl
loope
sbb
mov
and
ret
in
in
movsl
jmp
adc
add
xchg
aas
push
mov
inc
das
jl
jmp
inc
and
dec
shrb
aas
mov
jmp
adc
movsb
sub
gs
aas
rclb
fidivrs
sub
add
dec
pusha
jne
add
adc
stos
fs
sub
sub
add
into
out
iret
into
adc
pop
fisttpll
pop
lods
les
add
add
xor
sbb
sub
xchg
mov
dec
sub
sub
jbe
mov
jecxz
fs
xchg
nop
jp
popa
loope
arpl
fsubrl
or
fmull
pop
insl
mov
ret
fadds
mov
mov
and
xchg
and
push
cld
sbb
call
mov
mov
stos
enter
and
jnp
pop
test
push
xor
jbe
mov
mov
popw
add
push
dec
scas
mov
cltd
aas
scas
cmp
sbb
dec
sarb
inc
mov
inc
test
xorb
xor
cmp
add
mov
mov
jmp
dec
mov
cmp
incb
inc
add
jne
rclb
mov
aaa
test
pusha
dec
insb
hlt
fidivrs
mov
sbb
jl
pop
test
xchg
or
dec
test
push
movsl
push
xlat
sbb
jecxz
sti
rolb
ss
cmp
scas
mov
or
mov
shlb
sbb
aas
ljmp
xchg
sbb
mov
push
lret
jae
jo
shlb
daa
outsb
adc
mov
sbb
sahf
les
test
and
fstpt
jle
mov
dec
call
or
and
ljmp
imul
test
loope
cli
push
add
rcrb
push
sbb
in
pushf
pop
mov
test
ja
pop
inc
sbb
aaa
adc
sub
scas
inc
pop
or
cmp
in
mov
lret
test
jecxz
jae
sbb
push
sti
sbb
movsb
fcmovnbe
pushf
jbe
scas
pop
cmc
push
mov
loope
and
call
sub
into
add
sub
pop
call
aas
das
sarb
xchg
stos
loope
icebp
test
sbb
xor
sub
sbb
sbb
ret
daa
shll
push
in
push
or
call
mov
push
es
outsb
shll
mov
dec
push
loope
inc
or
mov
mov
fwait
test
mov
xchg
mov
mov
mov
xor
xchg
pushf
adc
and
lock
inc
sbb
repz
scas
aaa
jl
pusha
sbb
xchg
daa
push
adc
fnstenv
ficoms
in
add
aas
mov
pop
xchg
mov
movsl
cmpsb
aaa
inc
and
pop
mov
or
xchg
mov
jecxz
js
in
stos
sub
fs
jmp
loopnew
pushf
inc
fcoms
push
sbb
sub
les
test
jmp
xor
rcll
jl
outsl
dec
out
pusha
adc
xor
pop
mov
movlhps
lcall
movsl
ficompl
in
jecxz
imul
mov
adc
push
clc
xchg
rorl
jb
add
test
jg
adc
push
mov
push
scas
and
icebp
or
xchg
inc
data16
mul
cmp
mov
and
sub
movsb
bound
lods
sbb
das
sahf
or
mov
or
or
mov
cmp
cltd
cs
adc
dec
test
stos
test
mov
cmp
in
dec
add
push
mov
inc
jo
ret
scas
or
outsb
pop
sbb
inc
sub
sub
pop
bound
sbb
and
clc
or
je
in
add
fldcw
adc
out
mov
dec
sbb
pop
les
push
dec
lods
mov
push
mov
frstor
outsl
mov
mov
scas
inc
das
fwait
sbb
or
call
imul
jp
mov
test
scas
clc
cmp
cmp
xor
add
inc
das
out
or
in
into
int3
ret
shr
lock
mov
sub
push
faddl
cmc
mov
test
pop
jecxz
cmp
inc
xor
pop
aas
and
adc
dec
cmp
test
repz
sub
imul
xor
loop
imul
jge
mov
es
or
pop
das
scas
fwait
jmp
sub
into
or
je
push
out
adc
dec
or
jne
orb
sub
mov
lret
stos
cmc
cmp
adc
mov
aam
inc
es
cs
adc
mov
and
pop
daa
inc
cmp
xchg
dec
mov
call
jle
arpl
lahf
sti
aas
sahf
pop
int
inc
lret
xchg
int
push
dec
adc
in
test
rol
and
mov
inc
nop
mov
cmp
fs
xchg
sarl
in
ss
xor
arpl
cltd
cltd
loope
lods
sub
adc
push
fimuls
dec
sti
dec
jno
pop
dec
inc
lock
mov
cmp
loopne
sub
js
bound
add
pop
loope
xchg
movsb
dec
inc
jmp
pusha
and
add
cmp
xlat
js
test
push
jb
xchg
inc
aas
mov
sub
xor
mov
dec
add
out
lods
jge
mov
sub
les
add
test
leave
adc
fs
iret
sub
loop
sub
jle
aas
jne
mov
test
add
adc
cmp
icebp
mov
nop
xchg
js
jecxz
dec
js
nop
arpl
adc
pop
xor
xor
test
popa
or
jge
addr16
push
addr16
or
push
out
pop
xchg
adc
dec
outsb
cltd
push
jnp
pusha
mov
inc
sbb
bound
push
xor
pop
sti
mov
shrl
sub
or
push
ljmp
or
sbb
stos
pop
push
push
xchg
clc
jmp
push
outsl
mov
hlt
out
das
ss
jmp
mov
xchg
fsts
pop
push
lahf
and
cmp
cld
push
xor
jle
mov
cmp
xor
pushf
push
inc
mov
pop
aad
push
into
lahf
sub
daa
and
xor
cmpsl
xor
pop
mov
mov
cmpsl
dec
cmp
decl
xor
imulb
inc
cmc
inc
sbb
imul
pop
cli
push
aaa
insb
inc
lahf
sbb
sbb
in
outsb
mov
nop
rcrb
shrb
daa
xor
shll
mov
jbe
jns
add
and
jb
dec
mov
subb
xor
sub
pop
into
mov
in
das
pop
movsb
sbb
xchg
or
jmp
js
push
int
jl
mov
xlat
lcall
aam
cltd
orb
xchg
je
jp
jg
insb
bound
inc
daa
cmp
lds
pusha
jg
repz
inc
mov
cwtl
cmpsb
or
cmp
sbb
cmp
inc
push
sbb
and
push
sbb
jo
outsb
and
jge
js
out
call
les
and
mov
clc
add
hlt
xchg
rcr
aas
mov
mov
cmp
push
pop
out
push
mov
inc
lods
movzwl
jo
sub
es
sbb
movsl
add
jecxz
sti
das
rolb
sub
cwtl
fisubrl
pushf
and
in
stos
jp
or
ss
jg
add
and
popf
cmp
jnp
cmp
mov
mov
or
hlt
mov
leave
adc
das
cmp
ss
cmp
mov
pop
add
jae
mov
xor
inc
cmp
mov
xor
pop
lock
aam
mov
sahf
lods
scas
adc
pop
cmp
stos
push
bnd
neg
and
je
clc
xchg
adc
movsl
loopne
mov
adc
jne
xor
bound
inc
popa
mov
test
popa
pop
xchg
sbb
dec
inc
jecxz
adc
lcall
dec
imul
sbb
enter
xchg
call
test
movsl
xor
mov
xor
sub
cmpsl
adc
cmp
mov
sub
cmp
cmp
mov
js
mov
cmp
sub
mov
sbb
ss
fs
imul
data16
insb
adc
adc
je
dec
insb
mov
sti
or
inc
adcb
mov
aam
shll
arpl
pop
cmp
push
fisttps
stos
and
out
sbb
fisubl
test
das
sub
fs
add
sub
jb
fisttpll
push
daa
jb
mov
cmc
sbb
daa
cwtl
inc
nop
scas
pushf
mov
sti
fldl
das
inc
pusha
pop
dec
inc
ljmp
bound
pusha
mov
lret
inc
push
dec
rcrl
mov
xor
movsl
mov
repnz
mov
lcall
jg
xor
lea
call
jno
add
es
movsb
sti
aaa
xchg
dec
sub
mov
cld
sub
pop
int
add
pop
jecxz
push
sub
dec
cmp
xchg
xor
sub
push
mov
ss
iret
es
mov
pusha
jge
subl
fs
pop
add
add
pop
inc
add
cmp
shlb
sahf
pop
movsl
jb
adc
repz
cmp
int
ja
jbe
inc
dec
sub
sbb
push
je
lret
dec
pop
mov
mov
pushf
cmp
mov
adc
and
andb
jl
mov
mov
lahf
mov
loopne
adc
daa
out
std
iret
lds
test
notb
jnp
inc
mov
add
dec
pushw
pop
test
ret
stos
push
fs
das
je
cmp
daa
mov
xchg
cmp
dec
pop
or
or
inc
inc
repz
or
fld
std
sub
gs
or
cld
aam
lret
sbb
loopne
mov
xor
dec
add
mov
dec
jb
sbb
mov
sub
push
jecxz
mov
insb
enter
xor
enter
jo
lods
mov
rcl
adc
mov
push
sbb
sbb
cs
xchg
xorl
addr16
sub
push
jnp
or
int3
stos
xor
lret
in
jno
pop
xor
pop
cmpsb
jo
cld
sbb
jnp
insl
cmpl
out
add
cmpsl
jl
pop
mov
pop
push
lcall
and
xchg
sahf
mov
das
sbb
mov
sbb
and
jns
mov
mov
jge
and
cltd
add
sub
cs
sub
push
pop
xchg
sbb
inc
add
insb
push
loope
and
addpd
das
dec
push
jl
mov
adc
mov
bound
lcall
movsl
dec
rclb
xor
jecxz
outsl
adc
adc
lret
cmp
xchg
mov
aaa
mov
rolb
dec
movsb
push
lods
mov
fs
movsb
cmp
frstor
xor
sbb
adc
je
mov
dec
es
scas
sbb
pop
test
lods
ja,pn
cmp
loopne
inc
das
adc
and
pop
inc
sbb
add
icebp
xchg
pop
lock
scas
pop
pushf
mov
icebp
xchg
sub
push
es
xor
not
push
pop
inc
xor
pushf
repnz
lods
test
push
fstl
dec
pop
insb
das
adc
lret
scas
sub
xor
aas
and
xchg
jbe
lret
push
jne
push
inc
cmp
mov
in
stc
xchg
mov
fcmovu
mov
lahf
test
dec
lret
or
or
popa
cmp
push
cmp
inc
rorl
inc
or
mov
mov
mov
or
cld
lcall
mov
add
sbb
lahf
fstl
and
sbb
sub
inc
pop
out
es
jb
aas
add
adc
push
and
lret
out
xchg
test
aaa
shrb
xor
sub
loope
mov
lret
popa
stc
scas
and
sbb
das
xchg
push
cmp
shll
mov
jp
ss
movsb
ljmp
lods
add
mov
adc
mov
out
mov
cmp
sub
inc
out
sub
xor
les
das
leave
adc
jno
mov
or
and
xor
inc
or
jns
adc
in
out
out
or
lock
pop
outsl
cmc
xor
lea
nop
push
mov
push
inc
push
push
mov
mov
shlb
scas
xchg
inc
in
aam
fwait
lea
cli
xor
and
shlb
fstl
add
cmpb
call
sub
lahf
sbb
jo
faddl
or
mov
or
lret
adc
jbe
movsl
fcmovu
out
adc
aam
cmp
jne
jae
cwtl
leave
sbb
lea
sub
cld
and
mov
rcll
and
lret
cli
movsl
xor
mov
and
test
push
sbb
dec
in
fstpl
bnd
mov
xchg
push
pop
mov
add
lahf
fs
es
ss
andl
aas
stos
jle
cmpsl
cli
and
pop
mov
cmp
or
icebp
sti
cmc
sbb
or
inc
jmp
mov
cmp
push
mov
data16
xchg
push
adc
adc
fs
je
stos
scas
or
into
mov
mov
sbb
xchg
aam
jbe
je
stos
and
outsb
mov
daa
out
jae
add
insb
push
insl
scas
imull
in
pop
jp
hlt
push
stos
sbb
shrb
ljmp
aam
jne
xor
inc
jbe
scas
cmc
sbb
mov
lahf
add
or
pop
popf
sub
dec
aam
push
movsl
cmp
clc
mov
cwtl
leave
add
mov
aad
cmp
sub
es
cmp
xor
lahf
ss
xor
cmp
add
sbb
add
pop
adc
sti
scas
push
adcb
jae
adc
scas
stos
mov
xor
sti
push
push
iret
jb
mov
push
fwait
lods
jae
mov
jl
and
and
pop
femms
cmp
sub
push
popf
xor
inc
add
sbb
jne
fidivrl
jns
push
popa
push
divb
inc
adc
stc
mov
mov
inc
fdivs
aaa
mov
lods
out
or
aas
sbb
push
leave
lock
cmp
jp
sub
insb
dec
aas
xlat
mov
test
dec
inc
adc
rol
fstps
mov
jae
fimuls
push
sbb
and
lods
andb
and
loop
out
cmp
int
sbb
inc
arpl
mov
shr
mov
stos
in
xchg
mov
mov
sbb
xchg
cmp
scas
movsb
pusha
sbb
bound
sahf
orb
jmp
jns
fcompl
pushf
out
mov
aas
sub
adc
and
stc
ss
jp
cmp
mov
cmp
pop
mov
pop
jp
enter
xchg
and
cmpsb
sub
movsb
aaa
jbe
je
cwtl
mov
aas
hlt
sub
lahf
insl
pop
xchg
and
cmp
outsb
mov
xchg
movsb
pop
jo
jg
cwtl
rolb
mov
scas
dec
mov
push
sub
mov
jmp
pop
mov
mov
cmp
lods
aas
mov
push
mov
pushl
clc
aas
cmp
pop
xchg
xor
pop
dec
popf
xchg
mov
xchg
jns
in
adc
aas
mov
mov
aad
arpl
cmp
ucomiss
and
repz
nop
ss
scas
jae
or
ljmp
rorb
cmp
cmp
mov
cli
sub
clc
cmp
mov
sarb
scas
sbb
sub
stos
dec
mov
lock
out
mov
aas
shlb
mov
dec
daa
xor
and
xor
mov
mov
and
mov
cmp
sbbb
lods
stc
xchg
adc
das
outsl
shlb
hlt
cmp
mov
les
imul
push
inc
sbb
adc
or
sub
cmp
mov
sub
ljmp
enter
sub
fstl
or
andb
cmp
pop
test
mov
sub
adc
aas
mov
rcrb
and
sub
cmp
cmp
icebp
in
cmp
or
cmp
sub
ficoml
adc
ss
cmp
push
or
pusha
jne
pop
mov
aaa
test
pop
pop
test
push
jp
mov
mov
mov
lret
rcl
mov
cmp
and
out
mov
test
out
xor
into
rcr
adc
dec
test
shl
cmp
sub
aaa
cmp
loop
xor
jmp
addl
mov
out
xchg
mov
add
pop
mov
inc
sti
jae
aam
fimuls
pusha
cmp
sub
scas
and
xchg
cmp
ret
and
push
cmp
add
add
das
xor
push
and
mov
scas
mov
xor
ss
mov
add
sub
popa
lds
and
jne
test
lcall
in
shl
int
mov
xchg
adc
or
jp
insb
jmp
xor
sub
movsl
ror
adc
pusha
or
nop
das
dec
sub
lods
ret
lds
push
push
sbb
je
jp,pn
lds
jl
adc
and
cli
sub
jl
sbb
cs
les
in
mov
push
pusha
cmp
xor
sub
sbb
fs
jl
add
adc
jp
test
imul
cltd
jo
cmp
mov
or
aas
inc
jb
or
mov
mov
xchg
sarb
sbb
xchg
xor
dec
jb
push
mov
jp
aaa
push
out
push
test
test
jp
test
lods
and
xor
insl
js
push
mov
test
xor
xor
fisttpll
jne
lods
push
push
clc
xchg
pop
mov
xchg
adc
sar
sub
sub
push
movsl
cwtl
js
lahf
rcrb
mov
sbb
mov
jne
mov
cmp
stos
imull
daa
data16
mov
int
xchg
aaa
push
dec
or
xchg
mov
xor
xor
addb
and
adc
mov
jle
xor
xchg
mov
shrl
sbb
mov
aas
icebp
std
leave
or
push
jp
roll
stos
out
or
cmpsl
add
add
orl
lods
cmp
mov
mov
dec
dec
shrb
int
insb
mov
testb
or
mov
aas
shll
jbe
out
bound
or
in
sub
add
sbb
rcrb
mov
jmp
clc
lods
out
test
imul
lcall
sahf
mov
lea
inc
das
cmp
sbb
lahf
add
scas
cmp
push
dec
fdivl
xchg
aas
sbbb
adc
popa
xchg
icebp
xchg
popa
iret
pop
adc
sbb
push
insl
mov
xchg
subb
push
or
and
or
mov
cmp
lea
js
add
addl
fwait
inc
jno
mov
inc
shlb
es
pop
jb
and
cmpsb
sub
mov
cmp
divb
jne
movsbl
cmp
push
loope
xor
test
adc
sbb
add
pop
imul
add
mov
xorb
or
push
cli
ss
mov
xor
pushf
scas
xor
inc
pop
sub
ljmp
shll
and
mov
lea
mov
cmp
xor
push
or
insl
lods
mov
jo
mov
dec
push
xchg
addr16
popa
push
xchg
push
imul
dec
inc
lahf
or
cmp
xor
pushf
aas
jno
cltd
lcall
mov
ss
lods
fwait
adc
dec
pop
mov
xor
mov
cwtl
add
negb
jbe
sbb
cld
or
pop
pop
sbb
arpl
mov
scas
hlt
or
sbb
aad
sub
jne
and
hlt
out
adc
adc
jecxz
imul
cmp
cwtl
nop
xor
mov
adc
aas
sbb
fisttpll
and
adc
gs
sub
sub
add
mov
fistl
and
repz
or
pop
jae
daa
adc
push
xchg
cli
xchg
xchg
and
arpl
mov
xchg
dec
push
mov
pop
pop
fcomp
cwtl
pop
es
mov
pop
jne
aas
xor
mov
sub
repnz
pop
add
inc
popl
cmc
daa
inc
mov
sub
pop
imul
mov
ja
sarb
mov
mov
adc
ss
out
or
add
and
dec
fs
push
add
push
xor
cmp
les
adcl
dec
jp
mov
mov
inc
aaa
lods
gs
jecxz
mov
adc
xchg
out
push
popa
es
scas
nop
sbb
or
push
mov
cmpsb
push
cmp
mov
sub
add
mov
outsl
mov
cltd
pop
test
adc
jp
and
jp
pusha
adc
test
sub
cmp
ret
adc
aas
loopne
imul
outsl
pusha
sub
xor
enter
sbb
sbb
add
testb
sbb
xor
pop
cwtl
xchg
mov
xchg
addr16
push
sbb
stos
sub
sub
adc
je
test
push
or
imul
lods
dec
popf
jbe
enter
hlt
xchg
push
ficoms
dec
fmuls
outsl
xor
scas
xchg
fldenv
sbb
jl
sti
and
xor
xchg
hlt
mov
ret
and
sbb
xor
sub
mov
jnp
xchg
cmp
dec
sbb
mov
pop
cmc
clc
fidivs
imul
mov
adc
mov
inc
push
jno
shlb
mov
ljmp
test
push
cmc
and
mov
arpl
jg
xor
rclw
fstpl
xchg
mov
xor
xor
sub
mov
mov
dec
mov
repz
cmp
sub
adc
dec
pop
js
cmp
scas
out
loopne
stos
movsl
fiaddl
push
cwtl
mov
sbb
jbe
sub
sbb
fistps
xchg
add
imul
mov
cmp
lcall
jg
add
inc
stos
loopne
cmp
inc
adc
ljmp
jl
sub
repnz
push
lcall
inc
sbb
dec
incb
xor
or
dec
out
out
and
mov
and
sub
mov
and
mov
mov
popa
sbb
ja
and
outsl
jg
out
sub
xor
add
adc
cmp
add
out
xchg
sbb
push
xor
inc
or
lret
sub
mov
add
sbb
pop
xor
cmp
imul
pushf
mov
loop
loop
fdivs
in
popf
sbb
dec
ss
adcb
mov
add
xchg
icebp
mov
std
out
xor
xchg
jl
add
add
xor
gs
or
gs
jbe
lods
pop
mov
sub
or
lahf
cmp
incb
push
mov
nop
and
out
movsb
push
jmp
or
scas
int
or
jbe
jnp
mov
and
dec
jo
and
cs
mov
add
inc
or
shlb
push
adc
sub
cmp
jl
outsl
xor
cmp
ja
pop
push
sbb
cmp
insb
inc
hlt
dec
cs
push
jnp
pusha
mov
mov
lret
push
popf
push
xor
enter
push
xor
sub
xor
mov
mov
and
mov
inc
sti
adc
xor
loope
sub
adc
adc
and
dec
mov
and
in
cmpsb
add
aaa
mov
icebp
jg
testl
es
mov
js
jb
and
fldl
out
xor
mov
movsl
push
in
ficoml
sbb
pushl
lock
movsl
sbb
test
and
imul
mov
cmp
adc
xchg
cmp
mov
sub
pop
stc
xor
inc
xor
cmp
push
xor
cmp
je
outsl
imul
mov
mov
es
mov
adc
or
mov
ret
jl
sbb
into
movsl
outsl
jp
das
add
out
leave
add
jmp
adc
addr16
mov
pop
fnstenv
shlb
mov
ss
scas
out
shll
cmp
push
adc
gs
gs
or
adc
jns
orb
test
and
push
cmp
sbb
or
aaa
in
das
push
jo
dec
and
xchg
lea
ja
insl
inc
testb
add
mov
aas
xchg
pop
sub
inc
pop
fsubrs
mov
test
pusha
scas
ss
daa
xchg
cmp
xchg
jge
xor
dec
mov
or
pop
daa
or
cmc
ja
mov
inc
cltd
dec
cwtl
sbb
jb
scas
sarb
scas
jb
mov
or
xor
repz
jg
xchg
mov
push
xor
and
or
inc
xor
push
cmpsb
mov
sahf
pushf
pop
popf
ss
stos
hlt
adc
mov
ljmp
dec
jne
out
cmpsb
xor
das
sbb
cmc
mov
pop
flds
sbb
lahf
cltd
lcall
lods
insl
sbb
or
test
push
inc
xchg
dec
inc
jge
push
sbbb
lea
ror
and
dec
lret
cmc
es
lea
popa
jl
pop
pop
imul
fsubs
cmp
add
jno
dec
adc
inc
push
jo
cmp
popa
adc
mov
jmp
lods
inc
mov
or
and
xor
lods
insb
scas
sahf
push
push
xchg
or
add
or
inc
mov
xor
movsl
mov
mov
mov
sbb
test
rcrb
ss
popf
xor
jp
pop
rcl
call
pop
shll
cmp
aas
and
gs
loopne
js
xor
adc
adc
movsl
sub
rclb
sub
daa
cmpsb
sub
push
xor
clc
mov
push
xchg
mov
jo
sub
and
cmpsb
rorl
sbb
mov
popf
pop
insl
out
insb
mov
popf
push
les
dec
les
cmp
addr16
pop
negb
jg
outsb
popf
scas
push
bound
xor
je
jno
cmp
stos
in
push
outsb
jno
sub
jecxz
dec
dec
push
xchg
inc
aad
ja
cmp
xchg
adc
cltd
inc
cmp
test
jns
popl
fwait
mov
mov
sub
stos
or
movsl
mov
out
scas
movsb
fwait
jmp
call
cmp
push
cmp
gs
xorb
and
sub
mov
aas
mov
and
or
adc
aad
sub
orb
mov
pop
mov
sub
and
jo
lahf
jle
xor
js
push
sbbb
icebp
das
add
jne
dec
dec
imul
sub
cmpb
mov
push
sub
out
jg
inc
lret
mov
or
pop
dec
inc
icebp
dec
sub
bndldx
xor
push
inc
sti
jns
sbb
jp
ja
fisttpll
outsb
mov
shl
cmp
loope
cmp
jo
outsb
xchg
out
ss
cmp
xchg
dec
pop
fwait
dec
mov
sub
mov
xor
xor
stos
sub
sbb
sbb
addl
mov
and
xlat
xlat
dec
or
in
cmp
shrl
push
mov
add
inc
sub
sbb
popf
iret
mov
mov
xor
inc
mov
data16
or
mov
xor
push
add
adc
daa
sbb
and
fmuls
xchg
sbb
movsl
xor
aad
xchg
loopne
jecxz
popf
and
adc
inc
shrl
mov
xor
xor
jnp
aas
movsb
xchg
add
add
inc
mov
adc
mov
sub
call
out
stos
sbbl
dec
das
mov
push
inc
xchg
cmp
aaa
pop
inc
mov
xor
mov
jle
adc
dec
fsubrs
aas
fsubs
add
mov
movsb
imul
or
pop
and
leave
flds
xchg
cmp
sub
xor
fidivrs
sbb
xor
pusha
pop
push
sub
xorb
sbb
pop
pop
mov
mov
ret
mov
cmp
sbbb
mov
inc
sbb
aas
fiaddl
sbbl
fwait
in
pop
add
push
hlt
loope
adc
pusha
mov
cmp
popa
cmp
test
in
data16
mov
and
in
xor
or
cs
pusha
das
xchg
jl
gs
xor
add
inc
insl
add
dec
repz
inc
pop
or
or
cmp
aas
es
aad
pop
out
mov
cmp
xor
in
ss
lea
xor
push
push
sbb
cmp
mov
faddp
outsb
sbb
jbe
xchg
ret
mov
xor
shrl
xor
xchg
sbb
push
pop
jnp
dec
movsl
inc
cmovns
xor
jno
mov
sbb
sbb
mov
push
test
dec
or
mov
push
dec
js
xor
sbb
dec
shr
xchg
jbe
fisttpll
xor
fs
or
fidivl
dec
in
mov
dec
xor
gs
icebp
es
inc
pop
mov
mov
cli
mov
xchg
jecxz
pop
inc
out
popf
in
addr16
sub
pop
sbb
mov
sbb
ss
aas
jnp
in
xlat
sub
mov
test
cmp
pusha
sbb
adc
ss
in
adc
clc
cwtl
ja
add
or
jb
add
jno
mov
sbb
push
mov
sbb
mov
or
bound
movsb
lods
lret
sub
cs
dec
aaa
fists
mov
push
mov
pop
shlb
or
or
or
ljmp
and
mov
push
add
push
pop
mov
insl
push
and
pop
cmp
mov
ja
or
popa
xor
mov
mov
test
out
lea
xchg
dec
hlt
mov
dec
cld
sahf
sub
test
outsl
dec
cltd
mov
imul
notb
jg
inc
mov
sbb
pop
adc
test
popl
sbb
enter
into
jle
cmp
fs
xor
inc
ja
or
xor
and
xchg
scas
mov
xor
mov
xchg
cmp
scas
rol
sub
xor
subb
ja
shlb
fs
sbb
jmp
mov
adc
mov
dec
lods
jp
mov
and
xchg
xor
and
mov
add
dec
cmp
aaa
leave
ret
mov
lret
and
mov
fistps
sbb
subl
iret
arpl
imul
push
mov
sub
sbb
mov
mov
dec
adc
and
dec
jb
cmp
notl
sub
iret
mov
aas
ja
dec
mov
shlb
int
xorb
pop
sbb
js
inc
test
push
xchg
jecxz
adc
adc
js
imul
ficoml
cmp
adc
pop
sub
testb
dec
jnp
mov
cwtl
fmull
in
xchg
hlt
fldl
sti
das
mov
sub
mov
sbb
lods
and
test
dec
mov
adc
shr
jb
mov
mov
add
cmp
adc
aad
mov
test
pop
jns
xchg
or
mulb
mov
sbb
jae
movsl
xor
loop
aas
pop
sub
or
dec
mov
sbb
jmp
pop
cltd
aas
xchg
pusha
popf
aas
stos
inc
adc
loop
mov
sub
jp
mov
push
test
les
mov
scas
push
sbb
mov
mov
and
and
cmp
bound
inc
cmp
pop
mov
loop
mov
sub
dec
sub
push
mov
das
push
sbb
push
adc
jmp
adc
push
sbb
in
stos
cs
cmp
mov
adc
mov
pop
sub
into
xor
dec
int
aas
popf
rol
and
into
movsl
jmp
dec
insb
xor
std
dec
pusha
lock
loope
movsl
push
cmpsb
adc
out
push
cld
and
jmp
in
dec
fldt
call
repnz
cltd
dec
inc
inc
mov
pop
mov
xor
mov
das
popf
xchg
mov
popf
fwait
inc
daa
xchg
pop
movsl
cmp
bound
push
sub
in
sbb
std
dec
mov
mov
popf
cld
or
popf
adc
pop
out
inc
std
dec
xor
jb
mov
push
lea
into
sbb
popf
cli
xchg
movsb
mov
imul
repz
xchg
lods
popl
or
pop
and
cmp
xor
mov
cmp
sbb
sti
add
fwait
push
lret
jbe
sbb
adc
jl
jmp
lcall
sbb
dec
push
xchg
adc
push
mov
cmp
hlt
xchg
push
push
aas
push
add
mov
push
fdivs
mov
cltd
in
scas
mov
mov
je
ret
fsubs
push
add
dec
daa
popf
les
mov
mov
outsl
jo
push
idivl
jbe
sub
stc
adc
das
adc
xchg
cmp
cmp
sub
lea
lahf
sarb
pop
xchg
and
je
rclb
jge
adc
sub
ret
and
ret
inc
lods
aaa
mov
lret
push
sbb
jp
cmpsb
sbb
pop
outsb
sub
sti
js
xor
push
les
xchg
cmp
sbb
dec
or
cmp
jmp
adc
jecxz
inc
mov
arpl
inc
mov
mov
rcrb
inc
mov
cmp
mov
pop
mov
ja
lods
jge
ja
mov
mov
test
push
data16
sahf
cmp
ret
fldenv
mov
mov
mov
xchg
shlb
ja
pop
lods
mov
adc
add
xchg
dec
adc
add
movl
xor
pop
je
pop
pop
mov
fstpl
daa
sub
lahf
xor
fucom
mov
stos
push
dec
gs
daa
and
sbb
sub
xor
cld
ss
or
mov
cmp
andb
xchg
sub
jecxz
mov
add
xor
cmovg
repz
std
mov
push
jnp
xchg
push
mov
ja
hlt
adc
push
mov
dec
jle
cs
ss
push
add
jg
adc
fwait
rorl
push
adc
inc
enter
pusha
adc
fsub
push
into
adcl
push
movl
adcl
pop
cmp
sub
aad
in
rcl
ljmp
mov
jae
xchg
mov
inc
mov
fisubrl
sub
cli
movsl
enter
scas
pop
mov
dec
add
jl
pop
cmc
xor
insb
pop
andb
je
lods
lods
jl
adc
dec
daa
mov
icebp
and
or
scas
adcl
push
fwait
popa
push
push
add
jmp
shlb
mov
push
mov
lods
cld
mov
jmp
mov
and
dec
mov
pop
movsl
cs
mov
test
outsb
xchg
mov
aaa
cmovle
adc
ja
sub
scas
xor
sbb
les
repnz
ljmp
sti
pop
or
sub
mov
dec
dec
es
xlat
inc
aaa
in
dec
sbb
lea
xchg
xor
cmp
xchg
xlat
or
push
repnz
inc
das
sbb
dec
sub
or
sbb
jmp
add
mov
inc
cmp
push
jbe
test
imul
dec
or
stos
cmp
shlb
jecxz
cltd
imul
scas
or
rcrb
dec
dec
es
sub
or
sub
push
push
movsl
push
aaa
sub
sbb
das
cmpsl
pop
mov
inc
popf
hlt
je
shll
shll
cli
add
mov
cmp
das
mov
out
adc
sub
fwait
into
test
jmp
call
movsb
jbe
pop
clc
sbb
aas
sub
loope
cli
xchg
lock
aaa
lds
sub
imul
dec
cmpsb
sbb
inc
push
outsl
clc
lods
inc
fstps
in
xchg
outsl
or
sbb
push
or
test
repz
jb,pn
cmp
dec
xchg
mov
test
sub
js
xor
jb
hlt
xchg
sbb
popa
fwait
mov
xchg
sbb
cmp
xlat
stos
cs
adc
sahf
lahf
jo
popf
sub
push
xchg
mov
fistpll
cmp
cli
jns
adc
sbb
fwait
in
jb
fstl
xlat
inc
clc
cmp
es
add
cwtl
subl
aad
jno
push
xor
cmpsl
pop
jno
loope
jp
aas
push
xor
mov
pop
cmp
sub
add
xchg
or
mov
movsb
dec
mov
and
lds
cmpb
cmp
lahf
pop
pop
mov
mov
jg
sub
add
mov
test
cltd
lock
xor
adc
loopne
inc
repz
popf
fsubl
mov
mov
out
test
mov
mov
mov
push
add
fnstenv
xor
cli
int
xor
sub
sub
adc
fsubrs
out
adc
pop
popl
sbb
in
out
add
jnp
jae
leave
cmp
dec
add
inc
cmp
aas
inc
dec
fimull
xchg
push
sub
sbb
adc
xor
sti
dec
iret
or
cmc
mov
sub
mov
or
pop
aam
pop
or
movsl
cwtl
mov
and
jle
loopne
popa
or
in
push
pop
aam
or
cltd
pop
das
sub
out
sub
pop
xchg
sub
lret
mov
mov
push
lods
cmp
lea
pop
sub
xor
lret
jb
icebp
lret
roll
stos
pop
mov
pop
xchg
xor
das
xchg
insb
insl
adc
rcrl
int3
fsincos
xor
and
scas
sbb
in
inc
lea
popa
and
test
mov
cwtl
je
lods
xor
aam
mov
jmp
mov
popa
fstpl
aaa
mov
movsl
push
lret
daa
idivl
inc
loopne
insl
pop
fisttps
sbb
inc
xor
xor
dec
icebp
push
repz
icebp
mov
cld
xor
or
aas
cwtl
jb
stos
iret
xchg
fwait
bound
xor
and
push
dec
leave
stos
repz
insb
adc
fisttpll
xchg
mov
adc
fs
aas
das
stos
mov
push
dec
add
add
fstpl
mov
mov
jns
add
les
inc
lret
orb
and
xorl
jnp
hlt
dec
pusha
or
sbb
adc
jb
sbb
push
popf
ss
jae
pusha
sbb
jne
je
cltd
push
sahf
push
lock
dec
and
pop
adc
repz
add
or
mov
inc
sub
int3
or
gs
mov
adc
lahf
testl
aaa
push
mov
movsb
jo
pop
cltd
cmp
xor
jne
jb
mov
push
lods
mov
inc
xlat
push
adc
xchg
or
pushf
mov
ret
or
lea
jle
into
mov
xchg
jno
ljmp
mov
nop
lcall
insb
and
xchg
fstps
inc
xor
lret
inc
dec
call
ss
cs
sub
pop
imul
sbb
inc
pop
dec
sub
mov
loopne
mov
loopne
inc
jb
dec
call
xor
shl
xor
xor
mov
sarb
aaa
pop
pushf
xchg
add
movsl
and
xor
in
sbb
cmp
inc
stos
xchg
movsl
xchg
ss
nop
and
sbb
scas
aas
adc
push
dec
mov
std
adc
js
or
xchg
mov
jns
lock
je
sarb
shrb
inc
sbb
sahf
jo
ja
sub
icebp
fstl
add
or
rorl
push
movsl
std
cmp
push
das
push
arpl
clc
xlat
mov
sub
lahf
gs
add
sahf
or
push
mov
mov
pop
flds
or
stc
sub
xchg
cli
enter
loopne
in
les
daa
sbb
sbb
dec
jnp
clc
mov
xchg
outsb
jnp
inc
cmp
in
aam
fildl
rcll
clc
insb
nop
push
test
pop
and
mov
and
sbb
xchg
pop
push
aam
sub
in
pop
sub
jmp
push
fxtract
xchg
pop
aas
cmp
loop
add
inc
mov
in
stos
lret
loop
push
inc
inc
add
sbb
pusha
add
int
lahf
sbb
mov
stos
cld
loope
fcoml
fidivrs
dec
sbb
loopne
push
jle
adc
sbb
mov
inc
sub
adc
push
cld
clc
adc
mov
leave
jecxz
mov
sbb
out
stc
aaa
data16
cld
cmp
or
push
cmp
sbb
adc
repnz
fidivrs
aas
nop
mov
pop
mov
mov
jge
je
fwait
mov
jl
pop
cmp
cs
cmp
xchg
jge
and
jne
daa
bound
jecxz
sub
push
xor
push
std
mov
mov
sbb
scas
xchg
pop
cmp
cs
push
decl
jg
inc
jl
pusha
pop
xchg
add
sbb
inc
cs
lds
push
dec
mov
push
mov
adc
jmp
jle
je
bound
push
lret
push
sub
mov
fwait
inc
mov
test
jnp
aam
lods
icebp
out
ret
xor
ficomps
movl
stos
leave
repz
inc
adc
loope
mov
xor
stos
and
cmp
mov
adc
pop
in
fwait
sbb
bound
push
jne
jns
adc
icebp
xchg
fdiv
jmp
inc
cmp
mov
cmp
ljmp
mov
push
dec
stc
out
outsb
shrb
jne
pcmpgtw
mov
mov
mov
pop
sub
in
push
popa
dec
or
inc
pop
cmp
adc
or
xchg
inc
dec
sahf
mov
jnp
scas
aas
jb
cmp
sarl
and
in
mov
mov
lds
std
shlb
sbb
xor
and
lahf
pop
jno
andl
rclb
and
add
mov
cmp
scas
add
push
das
mov
xlat
mul
sbb
and
aam
jle
sbb
test
lds
dec
arpl
fists
stos
and
in
ficoml
movsl
push
repnz
and
clc
aaa
scas
shlb
sarb
daa
xor
loope
mov
push
insl
pop
add
out
mov
ljmp
cmp
in
dec
jno
dec
shrb
fmuls
inc
sub
and
call
or
gs
test
cli
push
ret
es
test
cmp
adc
push
mov
jmp
sahf
aam
fsubrs
mov
les
mov
cmp
push
push
nop
lcall
push
bound
bound
mov
cmp
shll
sbb
les
shrb
ss
cmp
add
mov
mov
aad
sahf
push
std
iret
and
push
xchg
xor
test
push
mov
lea
or
mov
mov
and
movsl
cmp
add
sbb
test
jnp
lret
out
jg
inc
and
pop
inc
push
cmp
or
adc
push
xor
and
aam
and
sub
test
cmp
mov
outsl
std
lock
sahf
dec
adc
mov
inc
cmpsl
mov
mov
lea
sbb
add
xchg
and
cmp
in
js
gs
aaa
push
cltd
aas
insb
pop
cltd
mov
jbe
lret
cltd
xchg
aas
popf
int
mov
ret
aad
cmp
lock
pop
adcl
loope
dec
movsl
add
daa
mov
ret
cld
stos
jge
leave
push
imul
xlat
bound
addr16
insl
aaa
mov
lret
push
pop
pop
lret
cltd
jl
and
ficompl
sbb
lret
jae
hlt
addr16
xchg
mov
insb
mov
cli
pop
cwtl
leave
and
ret
xchg
aaa
cmp
cli
scas
adc
in
add
and
pusha
pop
rolb
lods
lret
les
aas
mov
and
jge
pop
addr16
sbb
clc
inc
sub
sbb
sub
lret
imul
std
rol
inc
test
lret
jne
fwait
pop
sti
sbb
mov
test
enter
xor
pop
iret
sahf
and
mov
cmp
xchg
cld
push
das
push
push
or
push
outsl
mov
sti
sbb
negb
dec
cmp
rcrb
sub
and
js
scas
push
cmp
jne
pusha
xor
or
lock
mov
mov
jmp
mov
outsl
sbb
cmp
inc
mov
mov
bound
cmp
or
cmpl
add
push
add
jno
arpl
dec
push
jnp
cmc
inc
pop
imul
das
mov
adc
mov
int
in
or
lret
mov
sub
dec
insb
and
sub
inc
divb
scas
adcl
jnp
adc
cs
inc
mov
cs
gs
cmp
mov
les
loopne
insl
aad
and
inc
ljmp
dec
gs
sbb
and
out
pop
dec
push
outsb
clc
pop
xor
jae
stos
rcll
lock
je
cmp
pop
xor
js
loop
aaa
popa
loopne
mov
add
sub
xor
mov
mov
inc
pop
pop
adc
cmp
adc
xchg
pop
scas
inc
scas
sub
and
sub
inc
sbbl
ja
mov
sbb
cs
imul
loope
cmp
mov
sub
out
mov
cmpsl
or
addr16
shll
mov
test
out
jne
sarb
test
adc
test
xchg
mov
push
cmp
inc
test
mov
or
pop
imul
inc
sbb
andb
xlat
das
push
enter
orb
je
jmp
sub
xor
mov
imul
xchg
and
ljmp
adc
and
js
inc
sbb
rcll
or
sahf
mov
pop
mov
adc
jbe
addl
add
cmp
mov
adc
inc
xor
jns
inc
test
inc
cmpsl
mov
rol
enter
ljmp
sbb
sbb
dec
sub
pop
icebp
xchg
push
shll
and
sbb
mov
fwait
xchg
gs
push
aaa
cmp
iret
sbb
add
fistl
into
add
imull
xchg
inc
aaa
call
pop
inc
iret
movsb
jmp
adc
push
stc
adc
cmp
icebp
mov
or
cwtl
ret
adc
push
call
cmp
mov
mov
and
cmpsb
adc
adc
bound
pop
and
xchg
push
lods
push
test
ljmp
pop
xchg
lcall
sbb
cmp
adc
pusha
xor
mov
inc
xor
lret
insb
xor
jl
test
dec
push
cmp
jnp
les
or
das
cmpsb
lods
iret
mov
push
mov
fstpl
cmc
leave
cmp
insl
and
cmp
mov
sub
scas
sbb
pop
and
clc
sub
clc
addb
xchg
ja
mov
popa
and
xor
inc
xchg
mov
mov
neg
test
sti
and
lock
movsl
stos
sti
add
sti
mov
mov
pop
sub
xor
mov
js
aaa
int
addr16
jns
mov
mov
ja
gs
and
aaa
mov
cmp
jecxz
stos
stos
in
je
or
dec
cwtl
lods
stos
cmpsb
or
divl
or
fldenv
or
or
lret
pusha
rclb
adc
rolb
mov
movsb
push
scas
cmp
popf
fnstcw
leave
mov
mov
xor
xor
out
mov
test
flds
mov
pop
rorb
sar
and
sub
pop
lret
or
cs
adc
cmp
out
in
inc
rcrb
push
cmp
sbb
js
xchg
rep
xlat
pushf
dec
cmpsb
repz
sbb
daa
cmpsb
js
sar
std
xor
cmpsb
fs
shrb
cmp
xchg
add
daa
adc
mov
cmpsb
xor
pushf
and
shlb
cmpsb
mov
pop
push
adc
or
divl
imul
xchg
xor
xor
mov
push
in
dec
adc
inc
and
jnp
aaa
sbb
adc
imul
inc
mov
popa
sub
mov
adc
sub
in
push
push
nop
mov
mov
dec
clc
mov
or
es
xchg
test
add
cld
jae
xor
cs
or
sub
cmp
aas
sbb
cmp
mov
mov
dec
lahf
sbb
cld
push
or
or
and
sbb
inc
cmp
adc
xchg
xor
clc
xchg
loop
ss
dec
mov
pop
dec
ss
add
jg
add
push
jmp
loop
and
and
test
sub
call
xchg
orl
mov
inc
pop
pop
xor
dec
cmpsl
jb
pop
mov
leave
shll
jmp
xor
insl
je
and
adc
imul
mov
sbb
shlb
xor
std
cwtl
cmp
lock
enter
stos
adc
sub
mov
pop
insb
adc
push
js
add
cmc
dec
sbb
inc
xor
adc
adc
push
lahf
mov
and
cmp
outsb
or
cs
xchg
jp
xor
add
mov
xor
pop
mov
pop
mov
test
push
cs
sahf
inc
out
add
add
inc
dec
adc
sbb
mov
push
xor
cmpsl
leave
mov
movsl
fidivl
pop
mov
sbb
iret
or
cs
or
xor
in
xchg
push
loopne
adc
insb
nop
or
jnp
xor
jp
ss
dec
and
jne
call
xor
or
fldcw
jae
pop
xor
mov
fs
int
push
jbe
scas
push
rclb
out
ret
es
jle
or
dec
out
sbb
lcall
negl
cmp
sub
sub
xchg
jle
int3
testb
inc
xchg
xlat
movl
sbb
loope
stos
or
clc
or
inc
mov
orl
pusha
sub
enter
push
inc
dec
ss
imul
mov
xchg
es
sub
dec
pcmpeqd
cwtl
pop
dec
insl
cmp
mov
xchg
lcall
ret
mov
sbb
or
fidivrl
cmp
xor
xor
push
jle
mov
adc
jnp
mov
jge
cltd
xor
sbb
cmc
mov
ljmp
int3
sub
pushl
sub
cmp
dec
dec
add
or
flds
addr16
mov
dec
pop
sbb
push
pop
in
mov
push
pop
in
mov
sbb
sbb
adc
sub
lds
sahf
aaa
testl
in
movsb
pop
mov
pop
add
xchg
jbe
gs
pusha
or
fimuls
sbb
aam
mov
add
pop
scas
cmp
mov
std
into
and
enter
lock
push
in
and
in
adc
pop
inc
sub
mov
cli
mov
add
mov
cmp
call
popa
inc
lret
push
insl
add
shrl
dec
jge
lret
fdivl
mov
xchg
or
mov
cmp
popf
jmp
movsb
cmp
in
shr
sbb
stos
add
sbb
add
adc
sbb
mov
pop
lods
cmova
and
les
push
mov
cmp
lea
dec
add
test
mov
mov
sarl
das
sbb
arpl
rorl
test
sbb
icebp
inc
or
test
add
adc
pusha
cmp
xor
xor
mov
sbbb
frstor
pop
dec
mov
or
push
push
sbb
imul
push
movsl
loopne
repnz
and
xchg
aam
lods
cltd
mov
xor
and
mov
jbe
xchg
and
adc
jns
sbb
pusha
inc
es
cmpsb
mov
lret
outsl
adc
lds
insl
movsl
movsl
xchg
and
mov
mov
dec
shl
cmp
test
adc
imul
adc
int3
cmp
daa
xor
add
sarb
je
and
ret
fdivrl
xchg
mov
sub
mov
adc
adc
jbe
sub
icebp
imull
repnz
mov
dec
pminsw
cmp
adc
and
xor
pop
sub
lods
mov
sub
mov
in
out
pop
shlb
sub
mov
push
pushf
cmpsl
lea
mov
mov
pusha
mov
dec
push
jl
das
mov
fdivrs
adc
mov
mov
and
dec
cwtl
js
aaa
mov
lds
push
lret
in
cmp
xchg
fsts
add
clc
daa
or
aas
sub
and
ss
or
movsb
inc
sub
or
add
dec
scas
popa
or
xor
xor
sub
cmpsl
fldt
fimuls
adc
xor
and
sbb
jo
test
inc
es
sub
jle
and
je
daa
lods
push
scas
jae
mov
jg
xlat
gs
mov
pop
les
cmp
cmp
dec
sub
mov
jmp
hlt
mov
ret
mov
or
mov
add
or
movsb
sub
jg
cmp
cmp
and
mov
mov
xor
into
cs
cmp
push
or
or
outsb
aas
adc
nopl
movsl
scas
sub
mov
xor
in
cwtl
idivl
xor
fsubl
add
add
xorb
mov
adc
and
arpl
addb
pop
cmp
or
ljmp
loop
out
int
sbb
cmpsb
add
mov
mov
cmp
test
insb
pop
movsb
xlat
push
gs
pop
or
lret
outsl
cli
or
pop
mov
sbb
jecxz
and
mov
sub
popa
add
or
pop
sbb
fidivrs
dec
lret
divl
clc
push
mov
xor
cmp
push
mov
pusha
inc
aas
pop
mov
push
push
popa
or
adcl
or
add
xor
or
adc
mov
fisubrl
ljmp
cmp
test
cli
jnp
lods
pop
cld
fsubr
dec
mov
xor
scas
push
int3
jbe
test
adc
jle
push
sbb
test
sarl
clc
jne
jbe
test
add
ret
mov
push
pop
jb
scas
adc
dec
mov
dec
push
add
bound
push
mov
adc
mov
movsl
sti
pusha
cmp
mov
aad
mov
xchg
jge
dec
out
lock
cmp
sbb
xor
xor
pop
push
add
cmp
cltd
xchg
ss
in
das
cmp
pop
rcll
sub
xchg
ss
add
cmc
cmp
out
cmp
int3
sbbb
pop
js
int3
mov
jbe
jmp
push
loope
pop
xchg
gs
sub
xor
push
xor
repnz
mov
mov
mov
cltd
call
mov
inc
push
leave
into
popa
xor
je
mov
xchg
push
je
mov
int
idivl
adc
pop
push
inc
push
lock
jp
imulb
dec
cltd
push
call
cmp
dec
mov
add
es
or
popf
fisttpll
and
sub
and
jp
cmp
mov
test
fidivl
mov
mov
mov
sahf
xor
xor
sub
lds
out
aam
lock
fdivrs
inc
mov
cmpsl
pop
push
out
lods
jmp
pop
jns
jp
fisubrs
dec
mov
adc
cmpsb
shrl
out
add
mov
mov
movlhps
add
ss
inc
flds
inc
decl
sbb
cs
outsb
mov
and
adc
scas
lret
add
test
clc
sysexit
test
lret
pushf
sbb
lods
jg
inc
push
imul
adc
sub
cmp
shll
cli
cmp
add
mov
jecxz
test
sbbl
mov
adc
sub
lods
xor
dec
ss
and
lcall
stc
pop
jb
call
cmp
je
inc
cmpsb
cli
movsl
aas
jl
jp
jle
push
mov
cli
push
ret
in
cltd
ret
adc
es
cmp
in
or
jb
or
xor
add
pusha
cmpsb
cmp
cli
or
jno
lret
cmp
subb
mov
jne
adc
lret
mov
cs
xor
mov
lods
sub
lds
jbe
movsl
push
pmaxsw
mov
scas
fistpll
xor
cmpb
pop
aaa
hlt
xchg
outsb
insb
mov
icebp
rolb
rclb
adc
bound
xor
cld
loopne
ret
xor
xor
and
and
insl
lods
lahf
or
xchg
cmp
add
sbb
adc
das
sub
inc
rcrb
xor
aas
test
cmp
xchg
aaa
cli
pop
inc
push
or
mov
sub
inc
loope
and
or
mov
int3
mov
mov
cmp
or
inc
jo
hlt
add
mov
jne
sub
push
jbe
inc
scas
jo
jbe
orl
mov
cmp
jne
jp
or
pop
push
or
xor
push
imull
aam
call
out
add
rcll
sub
inc
mov
gs
or
imul
xor
into
cmp
ja
fnstsw
adc
into
xor
mov
ret
fldcw
aad
test
pusha
or
sbb
adc
into
aas
adc
es
lahf
inc
add
ljmp
cmp
fisubl
lods
das
into
mov
in
out
mov
mov
xchg
aaa
jmp
addr16
sbb
outsl
push
mov
in
cmpsb
ss
lret
lret
mov
mov
xor
xor
js
pushf
aaa
dec
sub
mov
sbb
cs
negb
dec
mov
lock
shrb
sub
sub
stos
add
jbe
cmp
or
adc
pop
lret
jp
or
sarb
push
lods
insb
mov
pop
sub
sahf
sbb
push
xor
adc
pop
mov
push
sub
add
das
jno
sbb
loope
stos
adc
xchg
ss
hlt
test
mov
mov
adc
jnp
cld
xchg
adc
pop
aas
pop
lods
cmp
ss
adc
roll
xchg
cmp
xor
in
push
mov
ret
nop
clc
arpl
das
push
jnp
dec
xor
ss
cmp
mov
cmp
mov
cmpsb
pusha
xor
pop
mov
jp
add
test
ss
push
dec
push
xchg
jne
sub
mov
pushl
sub
xor
bndldx
scas
jp
mov
cld
mov
add
mov
mov
std
and
pop
jmp
push
xor
mov
imul
int
or
push
lret
sub
adc
or
cs
and
sub
rcll
or
jbe
mov
cmp
or
xchg
mov
xchg
push
sbb
rcrb
outsb
add
rolb
sbb
nop
lock
incl
add
jns
mov
xor
and
and
icebp
fdiv
lcall
dec
mov
arpl
loopw
and
ljmp
sub
mov
push
lret
push
xor
daa
add
sub
call
lahf
mov
mov
mov
mov
add
daa
xor
xchg
nop
xchg
ss
aaa
adc
fwait
aas
iret
es
xor
sbb
aas
test
sub
sbb
lahf
aas
push
jmp
mov
cmp
inc
stos
push
mov
adc
gs
inc
sub
sbb
mov
mov
test
dec
mov
xor
and
pop
int
and
sub
xor
loop
inc
mov
insb
das
cmp
and
xchg
xor
idivb
push
pop
fcoml
cmpsl
pop
sub
jns
cmpsb
mulb
or
cmp
xchg
pop
mov
push
xchg
mov
mov
aaa
cmp
inc
sar
mov
adc
pop
in
jp
sub
xchg
mov
adc
sbb
and
xchg
movsb
test
pop
scas
mov
sub
sub
jl
out
lahf
scas
pop
dec
or
mov
adc
cli
mov
mov
push
daa
cmpsb
jae
mov
sub
sub
xor
mov
sti
xor
dec
pop
test
jmp
aaa
sbbb
push
mov
aaa
inc
addr16
push
cmp
mov
fstl
lea
jb
add
in
and
xchg
sbb
mov
mov
sbb
stc
xor
sbb
mov
jp
ret
xchg
cltd
loopne
dec
out
mov
gs
addr16
sbb
hlt
xchg
xor
shrb
jno
repnz
mov
push
mov
int3
sbb
out
cmp
cmp
mov
add
sub
cmp
out
adc
jmp
popa
and
add
xor
cmp
in
sub
mov
pop
mov
mov
mov
and
mov
xor
pinsrw
pop
mov
jbe
jo
mov
lods
sub
pop
cmp
mov
cld
xchg
cltd
jbe
cltd
or
xor
mov
cld
sub
jle
add
mov
rclb
test
ja
mov
or
cmp
mov
sbb
ficompl
sub
lods
insl
or
in
lcall
jmp
add
and
icebp
mov
repz
inc
cmp
sub
test
and
daa
dec
mov
push
push
enter
imulb
cmp
lods
in
sbb
cmp
cltd
mov
push
dec
sbb
mov
and
outsl
or
pop
enter
push
adc
dec
mov
dec
fmull
xor
gs
sbb
bound
jae
xchg
jae
xchg
dec
mov
xchg
sub
xor
mov
dec
pop
dec
dec
mov
mov
sbb
and
cmc
inc
in
daa
pop
xchg
or
stc
xchg
mov
test
mov
cmp
lea
sbb
stos
xor
out
sbb
stos
jp
adc
xchg
leave
xchg
sub
pop
daa
sbbl
mov
mov
mov
push
xchg
xchg
repz
scas
xlat
ret
pop
dec
mov
lea
lcall
lods
les
jo
ja
ret
js
cmp
mov
push
daa
pop
adc
jge
cmp
or
mov
mov
loop
sub
jmp
fsubr
mov
cmp
add
jecxz
sbb
sub
das
in
loope
pop
fidivrs
in
lods
jnp
pusha
or
lods
sbb
scas
xchg
jb,pn
xchg
jns
lahf
sbb
pop
sub
sub
cmp
push
cmp
mov
cmpsl
dec
xchg
fsub
hlt
adc
cs
mov
add
mov
dec
mov
leave
pushf
xor
in
movsl
addr16
push
in
sub
fldt
lahf
shlb
push
add
nop
icebp
addb
popf
in
mov
test
dec
push
clc
lds
aas
xchg
hlt
dec
stos
scas
int3
jp
adc
loop
daa
cmpsb
mov
mov
aas
bts
inc
mov
xor
mov
and
cld
push
sub
sbb
xchg
xchg
fadds
mov
pop
xorl
add
sbb
push
xchg
adc
pop
mov
sbb
mov
lds
mov
adc
jne
pop
mov
push
ss
mov
aam
push
icebp
enter
and
fcomps
ret
int
mov
mov
divb
hlt
fcoml
mov
xlat
cld
stos
jne
xchg
addr16
andl
call
inc
cmp
es
and
loop
xlat
cmp
sbb
aas
insl
cs
pusha
mov
push
cmpsb
fldl
adc
adc
ljmp
cmpsl
subb
sbb
jle
pop
xor
scas
sub
das
xchg
cmp
adc
xchg
or
jp
sub
mov
cmp
pop
and
cltd
js
aam
xchg
xchg
stos
inc
push
mov
xchg
es
and
dec
adc
jl
pop
and
sub
xor
cmp
or
add
daa
jg
orb
out
cltd
fwait
pop
add
out
fsubs
daa
sub
mov
imul
pop
and
aaa
xchg
cmp
lds
mov
inc
mov
adc
mov
out
and
aaa
jmp
shll
push
fldl
or
cmp
push
mov
icebp
lret
cmc
aad
bound
pop
dec
jb
xchg
dec
mov
xor
notb
andb
mov
push
mov
mov
mov
enter
loopne
sbb
cmp
add
ret
mov
and
test
insl
xor
scas
jge
movsl
push
xor
std
lret
push
pusha
mov
sbb
and
xor
mov
pop
int
mov
pop
cmp
int
and
in
jnp
mov
add
movsb
jp
mov
adc
pop
mov
into
push
mov
pop
push
push
sbb
xor
pop
mov
fbstp
dec
inc
inc
push
enter
dec
in
ret
jns
xor
cmp
sbb
push
jge
push
out
fstl
inc
loope
sub
pop
mov
xchg
push
cli
or
dec
pop
cmp
and
cmp
sbb
sub
jp
ss
arpl
stc
mov
sbb
ret
sbb
lock
cld
mov
jns
push
adc
fs
lea
cmp
fisubl
lock
mov
adc
pop
xchg
add
lret
test
push
mov
mov
daa
cmpsb
push
push
cmp
jne
add
add
dec
adc
adc
cmp
fisttpll
test
jp
xchg
sub
scas
test
fisubrl
jno
inc
adc
xchg
push
add
xor
mov
aaa
lahf
cwtl
movsl
mov
sti
jg
mov
dec
push
xor
mov
push
test
dec
cmp
outsb
mov
stos
mov
cmp
dec
jbe
arpl
pop
xor
dec
and
call
lds
mov
sub
cmp
xor
and
fs
mov
add
inc
mov
adc
cwtl
jle
dec
lds
test
repnz
mov
adc
sub
lea
pop
mov
adc
cli
inc
mov
push
push
adc
dec
fcmovb
push
cmp
dec
scas
adc
sub
jp
cwtl
mov
mov
and
rolb
ljmp
xchg
rolb
and
sbb
xchg
sbb
dec
pop
push
ficoml
pop
xor
mov
int3
pusha
das
push
daa
ss
test
insb
push
jge
hlt
rcrl
dec
loopne
inc
rcr
pushf
xchg
push
dec
mov
adc
arpl
rcrb
or
xchg
or
mov
es
stc
pop
das
ja
mov
sub
sbb
push
mov
push
sub
mov
push
cwtl
and
scas
xor
std
js
ret
je
xor
aaa
or
das
cmpb
sbb
imul
std
lods
mov
in
dec
fstp
mov
cwtl
nop
and
in
aas
repnz
test
adc
mov
adc
ss
stos
ss
aas
rorb
sub
imul
mov
mov
jne
xor
pushf
and
fmull
pop
aas
sub
or
xchg
lahf
das
je
int
or
push
mul
pop
add
and
xor
pop
cmc
xor
mov
pop
dec
adc
add
imul
lcall
mov
rorb
adc
imul
jbe
mov
inc
sbb
sub
jae
inc
repz
inc
pop
mov
ret
mov
mov
mov
fsubl
idivl
test
sbb
jecxz
add
in
roll
adc
int
xchg
cmp
xchg
cmp
enter
pusha
cmp
lret
inc
dec
and
xor
push
mov
pop
mov
pop
mov
outsl
xor
out
xor
adc
xor
mov
add
xor
xor
pusha
cmp
pop
iret
adc
gs
sbb
mov
push
in
cwtl
ja
sub
pusha
cmp
in
ret
in
or
jl
ljmp
xchg
push
mov
mov
jns
sarb
mov
adc
inc
mov
xor
pushf
jmp
cmp
mov
xor
or
xor
adc
lods
mov
or
lds
add
xor
xchg
mov
add
in
xchg
sbb
inc
mov
or
lea
adc
pop
jecxz
cmp
addb
mov
sub
lldt
sbb
lods
int3
inc
add
mov
mov
xorl
cwtl
jecxz
jg
iret
xchg
je
xor
sbb
sti
adc
out
cmp
outsl
mov
add
xor
sbb
sbb
push
add
pop
lods
scas
mov
sub
sbb
add
xchg
ret
sbb
add
das
xor
jo
sbb
mov
ljmp
xorl
xorl
add
inc
push
adc
mov
sub
jns
mov
jno
pop
aaa
in
idivb
movsl
mov
or
call
js
dec
push
pop
aaa
add
mov
inc
mov
pop
mov
or
leave
mov
sub
iret
cmp
cmp
sub
sbb
fchs
repnz
stos
mov
adc
lcall
ret
scas
call
jnp
mov
stos
xchg
scas
push
add
movsb
pop
dec
xor
mov
adc
sbb
jle
les
lea
or
xorb
add
add
das
pop
mov
xchg
int3
cs
ret
cs
sbb
stc
scas
xorl
stos
mov
scas
es
outsb
fisubrs
scas
and
leave
mov
sub
cwtl
or
in
jo
dec
mov
sbb
loopne
dec
or
rcrb
fstpl
daa
cmp
stos
sbb
adc
mov
inc
mov
lods
stos
std
adc
mov
pop
sbb
push
push
and
sbb
xor
mov
aad
pop
int
push
cmp
insb
dec
cmp
ss
xchg
pop
lahf
negb
pop
and
xor
inc
mov
test
pop
das
sub
push
scas
in
pop
or
mov
cmpsl
in
shll
jbe
push
pop
pusha
es
pushl
mov
xlat
addl
sub
fwait
xchg
aaa
and
hlt
in
adc
xor
adc
out
pop
test
nop
dec
sti
imul
ret
jno
mov
pusha
xchg
outsl
push
dec
add
cmp
popf
mov
pushf
cmpsb
clc
in
cmp
sub
sub
xchg
stos
push
mov
mov
jb
sub
or
mov
in
xchg
pop
andl
es
lcall
cs
daa
mov
mov
roll
xorb
cmp
int3
lret
or
cmp
fwait
and
sbb
aaa
stos
sub
jg
mov
loop
sub
push
mov
lock
mov
pop
movsl
add
les
orl
adc
inc
repnz
mov
push
in
push
aad
dec
jbe
inc
clc
inc
jp
push
and
mov
and
fildl
loopne
in
xor
jne
push
out
lea
arpl
xor
js
sbb
adc
xor
push
pusha
rolb
mov
bound
pop
cmp
add
lds
sysexit
ss
inc
jae
mov
icebp
jl
sar
xor
shlb
ss
mov
out
das
dec
and
test
bound
pop
mov
int
call
cld
lock
cmp
pop
sub
aaa
mov
and
mov
cmp
stos
aas
xor
xor
jno
xchg
sahf
mov
aad
das
out
mov
cmp
pusha
imul
inc
dec
in
xor
aas
adc
xchg
add
cwtl
xchg
sub
push
imul
jle
mov
stos
lea
out
sarb
cmp
push
sbb
adcb
push
stos
cmp
pop
cmp
inc
dec
std
sbb
ss
cmp
adc
mov
imul
imul
imul
adc
sbb
mov
clc
outsl
push
dec
aas
loope
scas
stos
lock
and
lods
shr
adc
mov
es
cmp
dec
or
loope
lcall
adcb
xor
push
scas
ja
adc
add
push
add
xor
movsl
out
pop
xor
inc
out
ret
sbb
addr16
int
cmp
imul
cmp
lahf
pop
mov
adc
and
imul
or
ret
jne
into
add
push
xor
imul
cmp
and
das
sbb
outsl
mov
lock
xor
pop
adc
lods
cmp
sub
stos
fistl
cwtl
cmp
cwtl
xchg
outsb
sti
bound
and
jne
or
vpcomb
stos
scas
mov
add
sbb
jnp
pushf
push
leave
loopne
adc
aaa
mov
xorl
xor
js
push
cmp
adc
pop
xor
andl
jae
mov
push
repnz
adc
mov
push
clc
push
scas
mov
repz
mov
jp
mov
and
sbb
out
aaa
lcall
je
jnp
or
push
push
inc
in
subb
lea
addr16
ss
gs
xor
call
push
adc
pop
lods
sbb
es
mov
inc
jnp
pusha
adc
cmp
or
sbb
mov
jne
and
loope
fwait
or
jge
into
and
cltd
cs
sub
mov
sbb
les
cmp
cmp
adc
xor
push
xor
into
add
insb
aas
sbb
mov
dec
add
sub
cmp
call
xchg
inc
cmp
stos
cs
in
mov
mov
std
mov
dec
das
loopne
jmp
push
push
pop
das
add
in
fnstsw
pop
pop
ja
inc
addr16
fwait
aas
int3
dec
xor
cmc
adc
mov
and
xor
jp
adc
jge
sub
and
sbb
add
stos
pop
cmovp
mov
dec
mov
mov
or
js
scas
negb
jns,pn
push
jge
nop
xchg
in
or
faddl
notb
insl
cli
scas
jnp
shl
ret
pusha
jae
jl
mov
lahf
cmp
loopne
scas
mov
mov
je
mov
sub
cmp
nop
adc
cwtl
adc
bound
push
movsl
jp
sbb
jbe
andb
sbb
lods
pop
bound
mov
les
xchg
and
punpcklwd
cwtl
cmpsl
loopne
sub
ffree
cmp
mov
nop
or
push
inc
js
test
xchg
mov
outsb
dec
scas
jmp
pop
pop
sub
fstl
mov
jbe
pusha
cmp
dec
mov
dec
ret
jns
cmp
clc
push
xchg
popf
pusha
jo
daa
lock
lcall
test
mov
aas
pop
xor
cmp
and
lods
lods
cli
jmp
xor
popf
pop
lret
test
stos
push
or
fs
std
jp
cmc
pop
lea
mov
dec
mov
mov
adc
negl
xor
mov
andb
xchg
cmp
sub
std
jmp
mov
cmp
or
scas
call
int
cmp
pusha
ss
notl
sbb
lcall
push
insb
mov
and
rorb
cmp
fwait
aas
addr16
pop
mov
in
stc
gs
sub
aaa
xor
inc
sbb
mov
sbb
mov
mov
cmp
sbb
fldt
jecxz
inc
adc
daa
add
dec
cmp
enter
lahf
inc
das
loopne
test
jp
mov
and
test
les
aas
mov
mov
lods
jp
adc
mov
mov
jge
xchg
movsl
lods
notb
pop
jl
mov
cmp
cmp
pop
ss
push
and
xchg
shrl
push
daa
mov
lods
mov
movb
ja
jl
lahf
mov
test
sbb
jge
mov
xor
adc
mov
lds
jp
jno
ret
add
sbb
dec
xor
push
push
negb
sub
sbb
shrl
sbb
push
xchg
mov
inc
cmc
cs
push
or
sbb
dec
ss
xor
adc
test
pop
cmp
cmp
popa
pop
xorb
sbb
lahf
cmp
gs
or
das
inc
test
or
das
push
icebp
mov
cs
int
sub
cld
popa
mov
into
sbb
rcrl
sbbb
movsl
sub
ds
outsl
sub
and
sub
or
mov
jo
mov
lea
aaa
cmpsb
lret
cmp
mov
or
das
push
lods
xor
mov
cmp
in
cmp
jbe
inc
scas
mov
push
push
mov
aam
adc
mov
shll
cld
xchg
je
ss
cld
sbb
movsb
movsl
push
push
sub
test
sub
mov
inc
or
das
jecxz
push
insb
shl
push
add
in
or
bound
adc
das
sbbb
insb
scas
out
lock
cmpsb
push
lods
in
movsb
outsl
pop
mov
arpl
mov
or
stos
pop
cs
add
adc
mov
sub
pop
pop
push
push
cmp
inc
mov
inc
mov
jge
mov
and
push
aas
in
mov
test
jns
mov
adcb
sub
push
cmp
xor
data16
mov
pop
in
rcrl
pop
jne
cmp
xchg
push
icebp
adc
mov
jecxz
aas
ret
enter
xor
adcb
es
xchg
bound
sub
fildll
inc
cmpsb
enter
sbb
dec
mov
add
fisubl
lahf
or
lret
mov
and
cld
jbe
jp
aaa
push
mov
std
pop
jne
and
inc
inc
push
sub
in
sub
mov
cmp
push
add
in
cld
jbe
stc
sub
imul
add
lret
sub
pop
outsb
sarb
ud0
scas
lods
dec
cmp
xchg
jg
notb
and
or
adcb
or
mov
lods
imul
ret
sub
outsl
pop
cld
and
pop
push
xor
lds
out
stc
mov
mov
out
adc
ss
into
fnstsw
push
into
in
jns
scas
jo
cmc
scas
sbb
mov
add
mov
and
xorb
pop
and
sbb
and
imul
aas
loopne
cmpsb
addl
lret
cmp
and
cld
jbe
jp
ss
sbb
xor
push
sbb
jns
dec
pop
addr16
jp
and
push
jno
daa
mov
js
scas
int
jo
rsqrtps
jno
sbb
pop
jb
es
pop
jb
xchg
bound
or
cmp
jns
imul
imul
lcall
jle
mov
pusha
fwait
daa
jmp
pop
repz
dec
or
xor
filds
stos
popa
and
insb
or
andb
sub
or
das
sub
cmp
sub
scas
insl
popf
adc
dec
jne
cmp
and
and
outsb
das
jne
les
pop
jg
or
cmp
addl
xchg
push
and
or
cld
jbe
stc
aas
rolb
inc
lcall
jns
push
pop
sub
out
jo
and
lret
xor
pop
test
incb
sub
dec
xor
dec
inc
xchg
clc
push
jle
cmpsb
dec
dec
sbbb
das
inc
lds
loopne
pushl
ss
inc
push
dec
or
cmpsl
sahf
mov
sub
jmp
or
andb
scas
enter
aaa
or
cmpsb
and
ss
mov
cmpb
and
loope
imul
push
and
test
and
push
mov
xor
or
mov
stc
mul
data16
mov
mov
lahf
addr16
xchg
scas
mov
cmp
call
bnd
dec
pusha
xor
lahf
push
and
mov
mov
int
cmp
xor
mov
mov
push
jecxz
dec
clc
push
and
jns
icebp
sub
fs
addr16
cmp
shl
cmp
pop
mov
push
or
or
enter
pop
adc
in
push
dec
pusha
cmp
mov
enter
rorb
xor
pop
sub
push
mov
pushf
imulb
push
sub
or
subb
push
outsb
push
xor
pop
jmp
sub
jmp
xor
sub
ficoms
pop
sarl
fidivl
dec
daa
jnp
rcrb
cmp
mov
xor
push
xor
pop
repz
adc
pushf
xor
into
mov
mov
mov
jl
pop
lea
xor
sbb
or
adc
icebp
push
jb
xor
mov
cs
jo
and
or
and
mov
dec
sbb
xchg
adc
rclb
mov
lcall
adc
insb
je
sahf
mov
shrl
das
imulb
jne
xor
repnz
add
dec
mov
inc
sahf
scas
pop
sti
cmc
cmpxchg
loop
lods
fimuls
pop
and
jl
repnz
mov
pop
pop
mov
pop
jbe
adc
xchg
mov
ret
inc
mov
mov
xor
cmp
outsl
fwait
sbb
and
sbb
fwait
outsl
movsb
cmpsb
and
mov
movsl
gs
lcall
test
scas
mov
fistps
cmp
and
add
scas
sbb
add
pusha
xchg
mov
jge
idiv
ss
outsl
loopne
jnp
xor
dec
sub
pop
pop
mov
mov
xor
sbb
mov
inc
mov
test
mov
mov
xchg
mov
jno
insb
mov
bound
int
das
leave
movsl
mov
pop
cmpsb
insb
aas
adc
dec
les
adc
pop
inc
ss
jl
pop
cs
cmp
pop
pop
ret
cmp
dec
cmpsb
popa
daa
loope
and
notl
out
cmc
mov
cmp
daa
jbe
sbb
xor
imul
cltd
xor
das
jno
dec
xor
mov
pop
sub
pop
lock
xor
lods
mov
push
test
fnstenv
push
enter
fs
xchg
mov
cwtl
mov
dec
dec
mov
jle
cltd
and
inc
shrb
jb
sub
inc
cmp
imul
jno
es
dec
cmp
cmp
fiadds
and
pop
call
sub
mov
js
in
adc
adc
in
cmp
cmp
dec
and
jb
mov
imul
fs
pop
xor
movsb
cltd
in
sbb
cmpsb
fs
xchg
test
movsl
fildll
inc
cmp
cmovnp
test
scas
sbb
and
sub
mov
adc
test
mov
mov
mov
cmpsb
cmp
movsl
fdivs
or
and
mov
and
sub
cmp
jl
lahf
mov
cmp
add
or
sbb
pop
stos
mov
and
cmpsb
imull
sub
das
ret
inc
in
jo
inc
and
sub
mov
adcb
scas
cmc
push
mov
sub
mov
pop
test
sbb
xchg
das
and
imul
popa
adc
lods
aas
insl
cmp
mov
inc
loopne
lds
in
mov
sti
xchg
loope
mov
cli
lods
mov
adc
aam
int3
sahf
xor
push
jg
sbb
xor
shll
pusha
rcrb
pop
mov
out
push
cmp
xchg
movb
and
mov
dec
arpl
push
das
sbb
sub
sub
push
in
xchg
repnz
sub
inc
lcall
cmp
lock
push
push
sub
or
cmp
mov
pop
dec
outsl
loopne
or
xor
sbb
loope
cmp
xor
xchg
xchg
ja
push
adcl
sub
pop
adc
mov
outsl
ja
xchg
and
fcmovne
mov
jmp
sbbb
aas
in
dec
rclb
cmp
mov
xchg
inc
cmpsl
cmp
xchg
lahf
lds
lahf
sub
sub
push
sub
xor
fldt
leave
mov
incl
mov
imul
pop
cmp
xor
or
xor
cmp
dec
data16
add
xor
mov
sub
shl
test
loopne
push
test
xchg
les
cld
jp
divl
es
enter
sbb
mov
jno
or
xchg
add
dec
bound
repz
dec
xor
sbb
arpl
test
fiaddl
cmp
mov
dec
test
lock
sbb
pop
fistpll
out
lods
pop
fcmovb
mov
mov
xchg
dec
sub
pop
xor
jge
inc
pop
adc
je
cmpb
sbb
add
repnz
mov
jge
es
mov
xchg
mov
sbb
fsts
fidivrl
cmpsl
sbb
stos
frstor
xor
nop
subl
mov
or
ss
movsb
or
mov
xchg
fnstsw
mov
cmp
jl
ret
inc
sub
mov
jle
mov
add
or
jg
insl
cmp
or
lock
sbb
jmp
cmc
cs
jbe
jp
aaa
mov
cmp
xor
sub
cmp
mov
mov
xor
sbb
xor
notl
mov
pop
xor
sbb
imul
mov
cmp
sub
iret
pop
xor
mov
sub
jno
lret
mov
xor
pusha
loopne
xorl
add
insb
ja
jne
pop
mov
add
and
aaa
jbe
and
pop
cmp
sub
inc
add
cmp
or
sub
jne
xor
bound
adc
popf
adc
pop
pop
mov
cmp
sarb
jp
inc
ror
cmpsb
xchg
inc
push
scas
xchg
icebp
std
jnp
mov
add
outsl
aam
jecxz
push
lods
cli
mov
lea
or
pop
stos
mov
push
sbb
cmp
and
mov
push
loop
push
adc
and
mov
push
repnz
sbb
pop
movsl
lret
dec
mov
int3
into
jne
sahf
jbe
xchg
sub
rol
leave
mov
add
sub
inc
push
dec
or
cmp
cmpsb
or
bound
inc
bound
aam
push
les
icebp
lods
dec
movsl
or
vpxor
in
and
mov
mov
xchg
jbe
add
xadd
inc
and
lret
inc
mulb
jmp
aad
movsl
pop
pop
jge
jl
inc
stos
nop
mov
lret
test
dec
fldl
inc
cltd
xor
sub
imul
jne
cmp
scas
xchg
leave
loopne
mov
pop
outsl
inc
test
fstpl
cltd
jne
mov
xchg
std
pop
xor
or
adc
and
add
sub
hlt
shl
and
les
fnstcw
xor
ficoml
adcb
lods
insb
in
scas
adc
adc
lea
xor
insb
xchg
cmp
jo
insb
sbb
xorb
in
out
cs
add
push
enter
cmp
cmp
mov
pushl
loop
cmp
jmp
mov
pop
cmp
ret
xchg
mov
dec
test
push
testb
mov
mov
mov
and
cmp
lock
call
sub
cmp
js
lcall
inc
mov
lods
jne
sbb
je
dec
decl
add
mov
ja
pusha
enter
mov
sub
out
cli
adc
repnz
fidivrs
dec
or
repnz
std
scas
or
jmp
add
test
jnp
int3
sbb
out
sbb
mov
adc
pop
dec
push
dec
xor
mov
sbb
mov
lea
sub
fdivs
rorb
lahf
pusha
outsl
jp
xor
dec
xor
sbb
daa
xchg
scas
mov
inc
push
hlt
cmpsb
loopne,pt
sbb
and
pushf
in
repz
popf
pop
test
ja
jmp
imul
subl
cmp
loope
mov
dec
jae
shll
in
sti
xchg
cmp
sub
add
call
mov
ja
cmp
sub
push
in
xlat
test
rcll
or
push
cmp
sbb
mov
cmp
mov
jg
xor
gs
mov
dec
rcrb
outsl
mov
xor
inc
mov
arpl
pop
xchg
mov
movsl
repnz
fildll
adc
mov
cmp
outsl
and
movsb
test
mov
pop
dec
mov
sbb
cmp
cmpsb
fstpt
xorl
xchg
shlb
inc
push
jb
outsb
cmp
and
cmp
clc
shl
xchg
cmp
jbe
and
mov
pop
adc
and
enter
aad
dec
xchg
lods
mov
ss
lds
stos
push
cmp
cwtl
cmp
aaa
insb
inc
adc
je
pusha
sbb
jp
lds
scas
adc
and
cmpsb
cmp
sbb
xor
pusha
sbb
jo
sti
outsb
into
enter
mov
cmp
aaa
insb
inc
push
das
je
pusha
sbb
jp
lds
scas
adc
and
pop
cmp
xchg
das
xor
pusha
sbb
xorl
outsb
jo
mov
adc
add
sbb
jp
lds
scas
add
and
lahf
cmp
adc
and
pusha
sbb
test
xor
mov
cmp
mov
mov
scas
enter
add
scas
sub
push
insb
mov
jl
add
or
mov
adc
jp
sbb
push
mov
dec
das
push
sub
sbbb
add
inc
inc
jl
outsb
add
enter
add
scas
sub
push
insb
xchg
jl
xchg
mov
mov
xor
mov
adc
jp
sbb
sahf
mov
dec
das
push
sub
sbbb
pop
ss
ret
outsb
add
enter
add
scas
sub
mov
dec
das
push
insb
cmpsl
sbbb
sbb
or
adc
adc
jp
sbb
add
sub
sbbb
xchg
pop
sbb
outsb
pusha
lea
enter
dec
das
pop
sub
and
jbe
scas
sbb
jl
sbbb
xorb
cmp
jbe
scas
daa
mov
dec
das
push
cmp
subb
outsb
cmp
mov
sub
and
jbe
scas
adc
push
jl
sbbb
sub
sbb
and
and
jp
sub
push
cmpsb
and
jnp
or
adc
std
movsb
pop
enter
or
outsl
sahf
jnp
cmpsb
sub
mov
mov
mov
lds
cmp
cs
fidivrs
fucom
cs
out
cmp
divb
leave
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
mov
mov
cmpsb
cmp
cmpsb
into
cmpsb
int
cmpsb
aad
fidivrs
push
jb
jb
jb
jb
jb
jb
jb
jb
jb
mov
fcoms
or
add
lea
bound
jge
jge
xor
les
mov
insl
fs
shrl
leave
sub
sub
sub
and
in
inc
jae
pushf
xor
dec
sbb
in
or
xor
inc
mov
test
cmp
lret
and
test
out
xchg
cmpsb
inc
mov
gs
lcall
push
push
pop
sahf
cli
mov
cmp
adc
sbb
jle
xchg
pop
dec
inc
jbe
xchg
icebp
inc
mov
mov
inc
push
sbb
sahf
inc
leave
in
jno
aaa
push
test
xchg
test
outsb
dec
inc
idivl
cwtl
push
xchg
cwtl
addr16
pop
aas
cwtl
mov
in
mov
and
lahf
add
mov
inc
cmp
les
sub
cmp
mov
sbb
es
imul
dec
and
adc
or
jg
sbb
and
mov
mov
or
cmp
push
lock
sub
push
fimull
cmp
push
and
bound
daa
lcall
andb
ss
aas
push
leave
fcoms
shlb
lods
roll
pop
push
inc
movsb
cmp
or
ficoml
sub
sahf
mov
fwait
and
pop
or
repnz
or
jnp
sub
cmp
inc
or
pop
in
xchg
popa
insb
clc
cwtl
lods
fs
mov
cld
dec
push
movsl
mov
sti
push
lea
ret
pop
mov
sti
push
lea
ret
loopne
movsl
cmpsb
test
push
lea
ret
pop
mov
sti
push
lea
ret
test
sti
pusha
lea
ret
pop
mov
sti
push
lea
ret
pop
mov
das
mov
pop
mov
sti
push
lea
ret
pop
mov
cli
ret
mov
sti
push
lea
ret
pop
mov
sti
push
lea
mov
add
push
lea
ret
pop
mov
sti
push
lea
ret
test
sti
pusha
lea
ret
pop
mov
sti
push
lea
ret
add
pushf
rorb
xchg
fistpll
cmp
dec
add
lea
jl
xchg
jge
mov
or
jp
lds
scas
jo
and
cmp
inc
adc
movsl
sbb
xor
cmp
xor
enter
cmp
or
mov
cmpsl
cltd
pusha
add
push
pushf
cmp
js
xchg
and
scas
or
sbb
cli
sub
mov
cmp
xchg
test
ss
inc
enter
push
sbb
outsb
sub
mov
xor
nop
and
jp
js
xorb
add
sbb
or
sub
or
xor
adc
addb
pop
cmpsb
lods
pusha
pushf
cmp
push
cmpl
orb
or
sbbb
or
sub
sbb
xor
adc
dec
inc
fs
mov
fdivl
xor
pop
subl
jne
aaa
js
mov
sbb
ss
jp
lds
mov
aaa
sub
das
xor
lcall
ret
push
mov
outsb
pop
sub
icebp
push
aaa
js
xlat
mov
dec
das
push
or
sbbb
sahf
mov
mov
xor
cmp
jbe
scas
adc
inc
clc
repnz
push
dec
cmpsl
mov
mov
lds
scas
jo
and
pushf
cmp
inc
and
adc
push
jp
lds
xor
xchg
push
dec
shl
push
dec
cmpsl
mov
mov
cs
and
sbb
xorb
or
test
and
sahf
mov
xchg
scas
mov
xchg
mov
lds
aad
fiadds
ss
sahf
out
inc
in
ss
sahf
popa
mov
aaa
loope
ljmp
aaa
cli
aaa
stc
aaa
xorb
aaa
mov
mov
xchg
aaa
xchg
aaa
lcall
aaa
stos
aaa
test
aaa
mov
shll
roll
mov
mov
mov
cli
cli
int
cli
aad
fdivrp
out
in
out
cli
in
cli
idiv
cmc
cli
cli
std
cli
xchg
test
mov
cli
xchg
cli
xchg
cli
sahf
stc
popf
adc
shl
fstpt
and
cmp
loopne
add
add
add
add
add
add
add
add
add
add
jmp
xor
or
ret
cmp
inc
xor
outsb
mov
cmp
ret
xchg
xchg
or
mov
arpl
fcmovnb
fldt
cmpsb
inc
mov
sbb
ret
aad
lods
les
outsb
sub
and
movsl
shll
inc
in
or
cmp
cmp
addl
dec
out
push
jbe
imul
mov
pop
xchg
push
loope
jbe
jmp
and
outsb
xchg
jne
test
arpl
popa
xor
cmp
mov
rclb
mov
lahf
mov
sub
or
sarb
or
cmp
jnp
ljmp
jbe
fisubl
mov
cmc
loope
mov
push
mov
cmp
jae
clc
push
movsl
adcw
into
xor
je
xlat
pusha
mov
xlat
xor
sub
push
sbb
mov
mov
xchg
mov
int3
cmp
cs
sub
sub
aas
and
or
sbb
cmp
ret
mov
push
xor
xchg
ss
add
aaa
mov
cmp
pop
fisttpll
cltd
add
mov
push
cli
aas
sub
sub
xor
cmp
sub
cmp
mov
push
mov
add
inc
pop
cmp
push
bound
ficoml
inc
sub
and
mov
xchg
arpl
mov
sti
push
lea
ret
pop
mov
sti
push
lea
ret
and
lea
ret
pop
mov
sti
push
lea
ret
pop
and
sti
jo
das
ret
pop
mov
sti
push
lea
ret
pop
mov
inc
lret
pop
mov
sti
push
lea
ret
pop
mov
sti
push
sbb
arpl
sti
push
lea
ret
pop
mov
sti
push
lea
ret
and
lea
ret
pop
mov
sti
push
lea
ret
pop
and
sti
jo
das
ret
pop
mov
in
jge
push
pop
mov
mov
inc
pop
jp
dec
cmpsb
stos
cmp
mov
or
pop
mov
test
add
daa
fcoms
pop
push
push
cmpsb
mov
mov
outsb
incl
xchg
fs
mov
aas
icebp
xchg
mov
add
jmp
sbb
nop
mov
pushl
dec
movl
add
and
mov
xchg
iret
stos
loope
loopne
es
dec
jl
adc
cmp
cld
jae
sub
xlat
pop
scas
cmpsb
xchg
sbb
xchg
aas
subb
shrb
push
pop
sbb
inc
push
jo
outsb
les
cmpb
xchg
popf
shll
ss
dec
sub
inc
cmpsb
ret
daa
mov
cmp
xchg
daa
mov
xchg
adc
jae
repz
xor
nop
mov
addr16
mov
xor
sub
xchg
jp
xchg
mov
sub
pop
mov
jg
xor
mov
pop
cs
mov
jp
idivb
mov
sub
dec
lret
int
std
push
and
adc
or
mov
leave
test
pop
xor
sbbl
and
xlat
mov
xchg
imul
adcl
testl
subb
fistpll
das
adc
cs
add
sar
sub
pop
es
movl
and
es
repnz
repnz
xor
pushl
mov
push
int3
push
out
mov
push
loopne
loopne
pusha
scas
js
jo
mov
cmp
jbe
jp
sbb
pop
cmpsb
pop
stc
push
dec
ljmp
in
jne
push
out
inc
cld
xchg
add
repnz
xor
in
pop
in
pop
cs
decl
sub
push
inc
loop
mov
pusha
xor
cmp
mov
int
cmp
enter
ja
and
push
cmp
daa
pop
sbb
add
push
sub
xor
ljmp
sbb
push
or
sbb
daa
leave
hlt
insl
fmuls
lahf
adc
dec
jmp
in
sub
mov
inc
xchg
jbe
sub
sbb
sub
lods
sub
inc
loopne
and
jge
pop
out
cmp
push
cmp
aam
jo
xor
popa
out
dec
and
mov
inc
jb
cmpb
mov
pop
nop
jo
cmp
notl
mov
fbstp
pop
add
add
push
xor
mov
cmpsb
in
xor
cmp
gs
mov
icebp
sub
sbbl
inc
repnz
pop
dec
mov
shll
mov
orl
aad
adc
add
aad
cwtl
das
xchg
sub
nopl
add
lds
daa
push
negb
xchg
cmpsl
js
cmp
adc
addb
fists
aaa
inc
dec
ret
cmp
adc
bound
pop
mov
xor
les
jge
inc
xchg
and
sub
fs
mov
adc
in
or
cmp
das
push
sbb
adc
stos
sbb
dec
cmp
cli
sbb
sbb
mov
pop
cwtl
roll
popa
push
adc
rcrl
movsl
mov
push
outsb
mov
add
shl
bound
cmp
mov
inc
push
pusha
ss
dec
xchg
inc
inc
mov
test
mov
int
lcall
add
push
mov
daa
adc
adc
sbb
push
mov
daa
jl
xorb
xlat
and
mov
out
mov
stos
or
mov
inc
pop
jecxz
subb
mov
jl
xchg
cs
clc
int
mov
xor
add
push
jno
stc
jbe
int
pop
inc
mov
inc
loopne
imul
lret
inc
mov
sbb
aam
jbe
stos
lret
fbstp
xor
xchg
test
or
icebp
data16
mov
pop
cs
cmp
lcall
sub
lcall
sub
or
movsb
and
out
inc
mov
pop
popa
adc
and
into
loopne
inc
or
imul
push
lret
enter
and
and
hlt
test
aas
jbe
out
xor
xorb
jl
test
jp
inc
subb
xchg
jbe
or
popl
movsb
stos
paddsb
mov
pushf
xor
out
lds
mov
or
mov
stc
mov
imul
sub
cwtl
ret
addr16
adc
scas
repz
add
push
pop
mov
test
xor
andl
rorb
xchg
ja
mov
neg
sbb
add
pusha
xchg
in
mov
and
test
mov
loop
stos
cmp
pusha
push
dec
std
aaa
or
mov
inc
jns
xor
mov
xchg
rolb
xor
mov
les
add
and
and
das
mov
cmp
push
and
cmp
ja
lahf
movsb
pop
sbb
or
inc
sbb
sub
aam
and
push
add
fisubl
ljmp
adc
out
jns
sub
shrb
add
jl
add
lods
aaa
or
sbb
mov
push
sbb
sub
cmp
fistpll
filds
fstp
push
mov
shrb
or
movsl
subl
dec
mov
ss
or
aad
and
mov
xchg
push
out
mov
cmp
xlat
xorb
into
pop
sub
sbb
xchg
mov
sbb
loopne
sti
into
in
mov
pop
in
or
mov
pop
sub
shrb
push
movsl
imul
loope
jbe
in
shrb
daa
test
jns
add
ss
jp
incb
test
mov
ss
cmp
or
xchg
dec
and
jg
enter
jle
fcomps
popa
movsl
test
cmp
push
or
fdivl
add
dec
push
fsubl
sbb
xchg
jo
add
sahf
jmp
std
sub
mov
mov
test
push
out
pushf
jno
and
cmp
sub
mov
ja
add
mov
jne
sub
add
cmp
xor
xchg
jb
xor
adc
sub
jae
jp
pusha
test
jb
sub
or
shlb
jno
xor
movsb
bound
movsl
ret
lock
cmp
mov
xchg
pushf
sbb
mov
sbb
add
or
inc
inc
daa
and
jp
pop
lods
sbb
sbb
daa
push
dec
mov
es
inc
outsb
lock
xor
out
adc
xchg
xor
cmp
ss
or
cmpsl
cwtl
pop
inc
adc
clc
repnz
dec
movsl
gs
aam
mov
xor
clc
mov
lds
and
add
jecxz
jns
mov
test
test
popa
scas
pop
test
lret
leave
mov
popf
insb
fidivl
rcrb
mov
in
and
pop
stos
push
sub
and
cmp
cmpsb
ja
push
stos
and
stos
xchg
repnz
and
call
and
mov
add
inc
loope
pop
and
ret
mov
sub
nop
xor
pop
cltd
inc
and
and
mov
andl
mov
jnp
test
rol
mov
mov
inc
test
jbe
insb
sbb
mov
mov
jp
daa
cmpsl
ss
ja
orl
enter
xlat
pop
adc
mov
jnp
xor
push
jp
repnz
sbb
pop
jg
das
mov
int3
add
cmc
aas
pop
sbb
lea
cmp
mov
das
insl
push
push
sbb
pop
cltd
cmp
mov
sbb
shrl
lahf
aas
xchg
adc
mov
add
mov
and
xchg
cltd
push
shrb
pop
cmp
inc
pop
sahf
adc
jge
cmpsl
rclb
add
pop
and
lock
xor
ja
mov
shrb
stos
push
cmovne
test
lds
notb
or
sub
imul
pop
mov
ret
scas
pop
fistpl
push
dec
jge
mov
cmp
mov
fdivrl
add
rorl
iret
xchg
ret
and
inc
mov
insb
mov
add
cmp
adc
mov
or
das
test
mov
xchg
cmpsb
lock
imul
pop
mov
xor
fisttpll
dec
cmpl
dec
popa
sbb
cmpsb
rorb
leave
jg
pop
sub
or
movsl
adc
mov
and
or
xor
cwtl
stos
push
mov
and
int3
push
and
fidivl
cmp
call
loope
sahf
push
sub
push
lret
sub
jl
or
jb
pop
cmp
inc
jnp
cmp
sbb
dec
cld
das
cmp
cmp
bound
mov
stos
fs
arpl
js
imul
jmp
or
inc
cmp
sahf
scas
inc
ss
ficompl
daa
daa
adc
fwait
je
cmp
xchg
jge
shl
icebp
das
mov
je
adc
icebp
lods
xor
ja
jle
xchg
pop
in
fwait
test
subb
dec
dec
mov
jecxz
imul
lea
cmp
imul
dec
jl
popa
stos
das
sub
xor
jmp
sbb
out
push
test
stos
stos
xchg
sbb
in
out
daa
push
loopne
or
xchg
shl
push
and
add
xor
stc
lods
mov
les
mov
xchg
ss
inc
test
or
fstl
xchg
xchg
movsb
jg
cmpsb
stos
and
cli
push
xlat
fnstsw
lods
and
shrl
xor
push
cmp
mov
adc
jg
xor
int
mov
adcb
mov
push
movsb
mov
xchg
dec
sbb
pop
dec
lret
mov
push
xor
adc
jns
daa
divps
sub
sub
ljmp
adc
das
cmp
cmpl
inc
xlat
les
add
sarb
lods
mov
cmpsb
push
jne
pusha
xchg
inc
or
mov
stos
push
mov
aaa
pop
ret
or
mov
cmp
les
mov
shl
jge
mov
xor
sahf
cmp
pop
dec
imul
out
movsl
push
fisubs
fimuls
daa
mov
adc
std
xor
mov
mov
test
das
jmp
sbb
mov
and
or
mov
xchg
jle
shrb
sub
dec
scas
sarb
cmp
fidivl
mov
cli
shr
in
mov
imul
adc
jb
faddp
out
push
aaa
rcl
in
or
push
inc
scas
pop
cmp
aaa
outsl
pop
cmp
jns
pop
sahf
push
jbe
scas
ss
mov
aas
and
xorb
icebp
mov
rcrl
scas
mov
or
and
icebp
push
xor
and
mulb
das
dec
mov
mov
cltd
cmp
xor
cmp
xor
pop
xor
mov
ja
and
mov
mov
and
cld
inc
and
jae
imul
push
cmp
xchg
dec
cltd
xchg
pop
inc
jae
aaa
and
loop
push
int3
cmp
insb
cmp
mov
pushf
pop
outsb
cmp
cwtl
addr16
mov
cmc
pop
cmpsb
out
inc
repnz
mov
btr
push
jno
es
lock
les
movsl
mov
inc
inc
jb
cmp
outsl
jecxz
inc
adc
sub
cmp
xor
in
adc
mov
es
mov
dec
mov
xor
aaa
iret
cmp
lcall
scas
or
push
ret
and
or
mov
wrmsr
fdivrl
pop
sub
sub
mov
jmp
sub
scas
sub
cmp
fidivl
adc
push
cltd
xor
cmp
scas
mov
mov
jbe
mov
or
lods
test
push
cld
rolb
test
sbb
rolb
dec
mov
mov
cmp
std
lock
sub
jne
mov
cltd
mov
stc
cmp
mov
lahf
push
frstor
stos
xchg
scas
ja
lahf
movsb
fyl2x
mov
sbb
pop
xor
shlb
sahf
mov
mov
xchg
push
les
lods
pop
cs
scas
comiss
mov
je
cli
xorl
popa
int3
jp
fwait
xor
subl
mov
xor
aaa
lret
mov
sbb
icebp
leave
or
sub
xchg
cmp
stos
add
dec
add
adc
jns
cmpsb
xor
adc
jle
cmp
shrb
lods
xor
cld
lret
mov
add
jle
lea
mov
movsl
pop
mov
jne
andb
aaa
cmp
inc
popa
bound
cmp
fwait
xor
popa
outsl
sub
dec
pop
xor
mov
push
sub
bound
cmp
xchg
add
jge
sub
xchg
movsl
les
aaa
add
inc
bound
xchg
mul
fiaddl
dec
sbb
lahf
mov
jae
inc
pop
jle
adc
insb
sti
icebp
inc
cld
jl
lcall
and
and
mov
cmp
stos
loopne
or
cmp
jne
jnp
enter
jg
pop
inc
push
incl
rclb
mov
cmpb
cmpb
aas
cmc
jp
mov
enter
cmp
xchg
mov
or
scas
add
aas
adc
icebp
add
mov
in
push
cmp
pushf
sbb
ret
into
aaa
aas
lea
ss
add
cmp
aas
stos
stos
or
push
sti
das
std
rorl
test
ss
cmp
jl
mov
add
and
cmp
and
or
mov
mov
add
mov
dec
cmp
inc
push
insl
out
mov
scas
inc
mov
sbb
or
xor
shlb
or
cmpb
inc
enter
mov
jle
mulb
jne
xchg
cltd
popf
push
insb
pop
add
nop
and
ja
stos
add
xchg
sti
or
mov
cltd
push
insb
cmp
enter
push
cmp
cld
jbe
cld
inc
repnz
cmp
enter
js
cld
rolb
test
adc
add
sbb
jnp
pop
cmp
cmp
pop
jmp
pop
pop
dec
mov
push
addr16
das
xor
loope
jp
cmp
jb
addr16
push
sub
pop
mov
sbb
cmp
bnd
mov
cmp
sarb
sub
push
xchg
cmp
in
lea
jae
stos
sub
scas
iret
xchg
and
mov
inc
add
sbbb
xchg
pop
mov
cmp
je
xor
aaa
adc
lock
loope
andb
pop
jnp
in
pop
hlt
mov
enter
jmp
xor
jno
sbb
and
sbb
shr
jl
sub
in
cli
jbe
xorb
divb
xchg
inc
jo
mov
loope
jnp
pop
jle
pop
aam
mov
in
mov
lds
mov
into
adc
mov
clc
sub
je
or
mov
push
out
scas
in
mov
pop
addr16
and
outsl
mov
lds
aas
cmp
mov
cmp
outsl
push
sbb
pop
scas
and
jo
fidivrs
movsb
outsl
mov
pop
sbb
sub
fsubr
test
movsb
dec
scas
mov
push
out
lock
fwait
stos
and
ret
mov
jnp
xchg
std
mov
xchg
xor
add
mov
cmp
cmp
data16
cmp
and
and
cmp
jbe
jp
or
testb
ljmp
imul
xchg
cmp
scas
jno
jmp
inc
jns
sub
loope
inc
ret
sub
cwtl
je
and
ret
lcall
mov
adc
mov
xor
dec
scas
ss
jp
and
xchg
js
icebp
cwtl
mov
mov
es
call
mov
adc
hlt
mov
movsb
fldenv
cmp
mov
movsb
jl
frstor
xor
cmp
rolb
xchg
pop
push
in
cmp
ret
ss
out
inc
add
push
shlb
adc
xor
imul
cs
sbb
test
sub
loope
call
push
cltd
xor
movsb
and
fisubrl
mov
fstl
xchg
pop
adc
mov
jmp
lea
or
xor
mov
lods
lret
sahf
outsl
cmp
mov
cmc
mov
movsl
mov
xor
hlt
test
jmp
dec
scas
jae
inc
xor
mov
mov
or
adc
lret
iret
jae
push
cmp
leave
mov
dec
push
gs
cld
dec
cli
mov
movsb
ss
pop
or
xor
imulb
cmp
pusha
test
sbb
lock
cs
ret
les
sbb
mov
mov
lods
adc
cmp
mov
das
or
repz
inc
or
pop
and
inc
inc
out
jb
xchg
js
cmp
insb
movsl
popf
and
mov
enter
inc
and
daa
mov
or
aaa
adc
sbb
sbb
icebp
push
ret
daa
hlt
pushf
or
scas
sbb
clc
cmp
inc
mov
mov
cmp
inc
mov
mov
scas
pop
jo
and
inc
fisttps
dec
dec
or
sub
pop
les
cmp
add
sub
icebp
or
ja
cmp
outsb
xchg
je
jmp
jne
or
es
or
cs
or
mov
mov
push
mov
sub
fistpll
inc
fwait
lahf
ljmp
sub
mov
adc
int3
test
adc
push
push
dec
xor
cmp
dec
dec
js
ss
xlat
sbb
daa
lods
je
out
dec
push
and
mov
std
cmp
mov
inc
cmp
mov
add
pop
inc
cs
pop
das
pop
adc
pop
ret
adc
insb
cmp
mov
xchg
push
and
sbb
xor
mov
sub
rcrl
lcall
fisubl
fwait
and
jl
stos
sbb
xor
jecxz
jge
cmp
and
les
pushf
shrb
dec
fldcw
push
insb
inc
subl
mov
ds
mov
sub
sub
sbbb
mov
and
xor
lock
shll
push
sbb
repnz
adc
cs
sbb
movsl
mov
cmp
mov
jmp
pusha
xor
cmp
mov
inc
adc
mov
inc
cmp
xor
push
cmp
enter
sub
cmp
call
das
jl
in
sbb
jbe
mov
stos
jecxz
repnz
mov
cmp
xor
cwtl
scas
mov
xor
mov
test
or
shr
shll
pop
lret
sbb
bound
adc
inc
sbb
rcll
push
and
ja
notb
add
and
imul
xchg
pop
dec
lss
sub
outsb
repz
jbe
fnsave
sarl
mov
sub
aaa
rorl
mov
xchg
add
xor
int3
cmp
jb
or
lea
movl
das
and
add
pop
jp
push
or
push
scas
cs
repnz
mov
nop
bound
sub
jl
push
add
sti
adc
pusha
cmp
call
hlt
les
cmp
je
add
or
or
or
imul
jmp
out
mov
out
xor
and
xor
cmp
mov
movsl
xor
mov
mov
cmp
scas
xor
jnp
lea
scas
push
dec
das
sahf
mov
adc
pusha
cmp
movsb
aaa
jb
jmp
mov
fldt
mov
cmp
ljmp
popl
test
cmpsl
cmp
add
and
cs
das
and
sbb
xchg
lret
add
sbbb
dec
mov
mov
mov
push
loope
loope
test
mov
ficompl
mov
sbb
and
and
test
mov
jecxz
inc
scas
and
or
shl
sbb
fnsave
incb
and
and
sarl
outsl
mov
dec
fwait
jp
call
cld
lcall
mov
lds
cli
xchg
mov
mov
clc
sbbb
cmp
xorb
jbe
push
and
add
aaa
add
rorl
xchg
flds
outsl
mov
inc
and
pusha
mov
sbb
cmp
in
xchg
fnstcw
sbb
push
int
js
fwait
jp
pop
xchg
test
inc
pop
test
cmp
repz
cmp
sarb
shrb
cmp
adc
cmp
add
cmp
xchg
rcll
movsb
push
pop
sub
hlt
dec
sub
jbe
nop
xlat
sub
pusha
aad
mov
sbb
pop
cmp
or
push
sbb
cmpsl
lahf
pusha
in
xchg
pop
cmp
jl
inc
mov
fisubl
xor
mov
pop
jg
xchg
repnz
sub
stos
pop
inc
mov
mov
in
adc
fstpl
pop
cmp
adc
jle
cmp
cmp
outsl
adc
ljmp
dec
pop
sbb
addl
adc
jge
mov
pop
popf
dec
outsl
and
cmp
daa
adc
and
pop
mov
inc
mov
nop
jp
sub
das
cmpsb
or
mov
push
and
pop
cmp
sbb
push
jae
cwtl
lret
andb
push
dec
mov
ficoms
aaa
xchg
cmp
test
ret
inc
dec
fidivl
cltd
mov
outsl
pop
cmp
fsubl
sbb
sub
popa
pop
xor
lret
push
fwait
mov
stos
iret
xor
jmp
test
jnp
je
adc
cmp
out
xor
xchg
mov
xchg
cltd
psubb
cwtl
and
xor
andb
add
in
pop
ja
add
cmp
mov
mov
or
stos
push
mov
leave
stos
cmp
bound
es
cmp
aad
test
loope
lcall
jmp
pop
jl
pop
out
xor
inc
sbb
inc
sub
pop
mov
xor
and
and
mov
ret
pop
mov
mov
mov
adc
in
jae
xchg
daa
adc
mov
scas
aaa
cmp
push
inc
pusha
cs
lods
aas
jns
inc
insl
iret
cli
mov
aas
mov
sub
aaa
push
test
pop
mov
fucomi
imul
adc
aam
repz
cs
cmp
test
jnp
pop
movsb
loopne
and
adc
jbe
jae
mov
out
dec
cmp
out
cmp
cmp
cmp
clc
inc
sahf
dec
pop
and
or
je
jae
in
jp
mov
pop
pusha
je
std
pop
mov
bound
xchg
imul
leave
aad
popa
xor
jb
inc
mov
js
adc
lahf
jb
cmc
pusha
jb
pop
jb
das
or
mov
sbbl
mov
aaa
lock
insl
into
test
cmp
bound
mov
xor
stc
ss
mov
cmc
pusha
js
fstpt
cmpsb
pusha
js
lock
cmpb
aad
out
js
mov
push
rcrb
xor
jbe
inc
jbe
ret
dec
jbe
ret
inc
jbe
jge
jbe
scas
jbe
divb
scas
jbe
stc
jge
jl
cmc
pusha
jl
fstpt
pusha
jl
inc
jl
pusha
jl
scas
jl
jbe
bound
cmp
jns
lods
jp
lea
gs
xor
jp
incb
jge
jp
cltd
adc
mov
lds
movsl
sti
jp
cltd
movsl
push
andb
cmp
xorb
sbb
adc
mov
lds
movsl
repnz
cli
or
pop
ss
and
ja
adc
push
cmp
xor
jbe
addr16
les
adc
jbe
add
cmc
or
std
mov
pop
sbb
xchg
pop
fnstenv
cltd
sub
xchg
loope
je
and
stos
orb
inc
jge
xorl
xor
cmp
sbb
sbb
cmp
mov
push
les
les
push
mov
cmp
mov
gs
cmp
sub
dec
jg
xor
push
pushf
leave
addr16
cmpsl
and
leave
pop
cmpsb
push
inc
cmp
gs
pop
cmp
and
cmp
pop
mov
cmp
xchg
rclb
inc
addb
mov
add
inc
inc
mov
adc
scas
mov
jmp
mov
adc
mov
rolb
sarl
pop
out
pushf
xor
enter
leave
xchg
xor
pusha
mov
lea
xor
add
gs
xor
lea
push
cltd
xor
cs
push
inc
in
dec
xchg
dec
test
nop
jnp
add
dec
scas
cmovo
xor
in
push
push
mov
xor
inc
pop
and
xchg
movsb
sbb
mov
inc
and
test
and
dec
mov
rcrb
sub
cmp
cmp
rcl
aam
call
pop
inc
das
xchg
clc
outsb
scas
or
fmuls
pop
imul
mov
jge
adc
adc
sbb
cs
sub
movsl
hlt
ret
mov
movsl
jge
fidivl
xchg
andb
xor
pop
mov
cmp
add
cmp
inc
icebp
sbb
in
sub
cwtl
push
cld
pop
cmp
test
cmpb
movsl
test
pushf
fisttpll
xchg
dec
mov
ss
lds
ret
push
sub
xchg
adc
pop
fs
sbb
cs
push
mov
sub
out
je
cmpb
sarb
scas
js
ret
mov
bound
sbb
leave
outsb
mov
dec
cmp
adc
je
sub
xor
pop
dec
push
jns
adcl
cmp
jp
int
push
dec
inc
pusha
mov
adc
test
popa
mov
cmp
cld
lock
aam
sbb
push
sbb
dec
push
lods
fidivrs
jo
movsl
xchg
pusha
cmp
shlb
scas
cmp
xor
dec
ror
fdivrs
je
mov
adc
bound
cmp
sahf
xor
aad
pusha
pop
xor
jns
pop
sub
cmp
jecxz
mov
push
cmp
xchg
decl
test
inc
jecxz
sub
mov
jmp
mov
xor
mov
mov
lret
push
sub
pop
mov
dec
es
jno
xchg
out
hlt
mov
popa
xor
lods
push
add
cmp
or
mov
and
pop
nop
icebp
imul
or
mov
sbb
cltd
or
jg
dec
cs
ss
cmp
xor
fisubs
adc
scas
sbb
sbb
mov
fmull
jbe
push
or
repnz
xlat
test
aas
mov
in
jns
and
ret
fcmovnb
scas
fidivs
mov
popf
loop
mov
sbb
call
arpl
pusha
popa
push
adc
cltd
lret
cli
fidivs
cmp
mov
fldenv
jge
jbe
xchg
insl
cmp
sbbb
adc
adc
cmp
rclb
mov
pop
mov
leave
rsqrtps
pusha
popa
bound
or
xor
xor
or
loope
inc
pop
mov
mov
cmp
mov
xchg
sub
push
xor
lea
outsb
int
push
pop
or
adc
pop
dec
test
push
fs
adc
das
adc
sbb
and
icebp
inc
clc
icebp
pop
cmc
xchg
push
ljmp
enter
sbb
sbb
test
adc
out
test
push
xor
adcl
adc
xchg
sub
cmp
push
mov
mov
push
jne
and
and
xor
mov
cmpsl
fsub
imul
and
xor
adc
cmp
les
mov
mov
dec
dec
inc
test
dec
ret
mov
add
jecxz
enter
enter
mov
loop
dec
mov
mov
lock
in
adc
jg
and
fnstenv
pop
cmp
xchg
push
lds
push
mov
lahf
pop
push
mov
stos
mov
mov
ljmp
xor
gs
enter
ja
rorb
jns
mov
inc
enter
enter
cmp
jge
idivb
and
mov
inc
sub
cmp
sub
fidivl
or
loope
popa
loope
sbb
lock
iret
lahf
jge
pop
sbb
mov
pusha
lock
data16
sbb
js
insb
imul
lahf
jo
inc
jp
sbb
jo
js
js
push
xchg
or
in
movsb
push
outsl
inc
xor
nop
shll
cmp
adc
adcl
and
pusha
icebp
shrl
icebp
fists
adc
cs
mov
mov
dec
jmp
iret
push
in
insb
dec
and
sub
ss
stc
inc
jae
bound
shlb
sub
js,pn
and
aaa
sub
stos
mov
xor
jbe
stos
sbb
xor
imulb
fists
mov
cmc
dec
in
push
xor
xor
lahf
cld
push
or
cmp
add
js
dec
popa
adcb
pop
mov
mov
frstor
cmp
cs
and
imul
inc
in
ljmp
and
adc
cmp
cs
mov
jne
jbe
fistl
scas
mov
sub
lret
aam
dec
hlt
add
fdivrl
xchg
mov
cmp
jo
mov
sbb
push
jg
mov
mov
pop
fistpll
xor
mov
push
repz
jl
jle
stc
mov
pop
out
aaa
mov
mov
push
xor
hlt
ret
repnz
movsb
sbb
scas
fists
xor
int3
dec
mov
inc
jmp
and
ret
push
xor
pop
out
cmp
adc
and
mov
mov
scas
ret
push
mov
mov
sbb
pop
flds
dec
sub
adc
mov
pop
add
fsub
fdivr
je
xor
pusha
xor
jnp
sbb
js
imul
loope
sub
sahf
test
jnp
ljmp
pusha
adc
sub
cmp
out
mov
leave
lahf
cmp
cmp
leave
xchg
jne
mov
or
pop
xchg
xchg
jge
xchg
pop
mov
mov
lods
mov
test
push
pop
je
adc
pop
xor
sbbl
cmp
xor
mov
xchg
push
popf
jmp
scas
idivb
mov
shrl
push
mov
sarb
and
and
sub
jbe
scas
xor
stos
inc
sub
mov
jbe
xlat
pop
pop
mov
js
enter
and
cld
ja
dec
lea
push
pushf
dec
pusha
push
cmp
sub
and
jnp
cwtl
test
push
inc
mov
roll
xorb
fnsave
and
mov
sub
lcall
xor
adc
fadd
shll
and
ss
cli
push
test
sahf
mov
sbb
cmp
inc
sbb
jnp
pop
data16
and
clc
xchg
inc
pusha
das
xor
cs
mov
cli
mov
pop
cmp
sub
js
daa
xor
xor
sbb
push
icebp
cmp
inc
xchg
pop
mov
pop
mov
sysenter
test
jp
adc
insl
scas
aas
ret
scas
mov
and
mov
fcompl
je
cwtl
jnp
mov
mov
inc
das
push
xchg
mov
cmp
out
addr16
lods
pop
mov
push
dec
addr16
or
mov
push
pop
loop
cmp
mov
das
ljmp
mov
pop
mov
sub
mov
push
mov
mov
scas
sub
and
movsl
push
pop
sbb
mov
xlat
xchg
cmp
cmp
mov
xchg
mov
or
popf
add
aas
stc
inc
pop
add
jge
stc
pusha
xor
dec
scas
loopne
mov
je
sub
mov
ss
cmp
movsb
push
sub
lahf
mov
int3
popf
and
and
xor
mov
mov
or
leave
dec
mov
jo
mov
jo
xchg
xchg
inc
xor
dec
fucom
and
inc
fiadds
xor
ror
out
mov
jecxz
push
gs
faddp
test
in
cmp
mov
cli
or
jp
adcb
xor
lahf
mov
div
cmp
aas
cmp
inc
mov
pop
les
mov
cmp
and
mov
clc
jno
mov
je
and
jg
jbe
mov
mov
adc
imull
test
scas
adc
xchg
ficomps
aas
lock
cs
or
addl
cltd
jle
ss
mov
dec
push
cmp
jge
fistpl
scas
inc
adc
and
idivl
cmp
cmp
rcl
imul
push
sub
sbb
cli
or
xchg
mov
addr16
and
mov
sbb
mov
je
jbe
sbb
xor
mov
xchg
mov
jns
mov
inc
inc
jbe
clc
and
xchg
push
clc
test
jbe
xlat
inc
aaa
fcoms
nop
addb
cmp
jp
jbe
das
mov
xor
xlat
outsb
push
aaa
pop
mov
jmp
adc
aam
xlat
shlb
dec
shrl
pop
or
mov
cmp
xchg
add
les
mov
test
pop
xor
inc
sub
icebp
push
sbb
and
sbb
gs
clc
into
mov
push
inc
andl
cmpl
or
jb
and
cmp
ja
outsb
xorl
mul
inc
mov
sbb
sub
pop
pop
ja
je
daa
cmp
add
ja
ljmp
push
jnp
sbb
jbe
jle
xchg
and
adcl
ss
xchg
sub
and
and
sbb
sub
mov
cmp
jns
adc
insl
pop
mov
sbb
scas
sbb
js
inc
pop
in
jbe
sahf
fdivrl
imul
push
test
jnp
jo
inc
bound
int3
shlb
xor
jge
lret
aas
xor
push
push
mov
jmp
jne
xor
mov
cmc
dec
mov
cmp
xor
jbe
scas
inc
flds
cmp
jl
push
add
or
ja
pop
scas
pop
sbb
imulb
sub
movb
and
push
push
pop
and
repz
push
das
dec
ret
daa
ljmp
xchg
adc
mov
jns
mov
mov
sub
lea
push
mov
in
xor
pop
cmp
shlb
aas
cmpsl
xchg
push
jg
gs
mov
test
jnp
pop
fisttpl
jge
cltd
xor
das
sub
mov
ss
mov
fidivrs
mov
ss
lock
jo
sub
dec
mov
sub
xor
addr16
scas
inc
push
je
cs
int
movsb
fsubl
sub
pop
das
mov
adc
dec
mov
in
push
sbb
mov
test
pop
add
or
cmp
xor
dec
mov
sarl
jecxz
jl
fstpl
leave
fisttps
and
lret
push
xor
aaa
pop
and
cmp
xor
mov
jb
loop
lret
and
pusha
jmp
or
shrl
jmp
fbstp
sub
mov
add
jb
push
les
pop
jb
and
mov
incl
xor
cltd
xor
jmp
cmp
pop
add
pusha
cmp
mov
in
popa
sub
test
xchg
cmp
popf
jp
cwtl
lock
orl
lcall
fwait
into
and
test
mov
jno
add
dec
sahf
mov
push
ss
xor
jle
cmp
std
in
sarl
jno
sbb
or
shll
xor
cmp
or
add
sub
insl
jmp
hlt
pop
jmp
movsb
in
popf
ljmp
xor
mov
xchg
repnz
xchg
or
loope
fildl
and
stos
adc
xchg
inc
daa
fwait
inc
mov
jnp
push
js
cmp
push
add
shlb
mov
rcll
xchg
test
mov
lods
xor
sub
sub
pop
cmp
lods
add
mov
pushf
mov
lea
sub
sub
pop
sub
sbb
loop
lret
adc
loopne
sub
js
inc
in
iret
mov
bound
xchg
inc
idivb
cmp
pop
loope
lock
inc
xchg
push
and
or
mov
int3
jge
cmpsl
add
push
cld
mov
fistpl
mov
ss
rcrl
aas
cmp
add
loop
popa
mov
add
lods
inc
adc
pop
or
pop
add
dec
and
in
cmp
mov
imul
jb
xor
ja
insl
adc
cmpsb
popa
stos
push
bound
xor
daa
jl
aas
or
stos
pop
and
cmpsl
push
cmp
sbb
scas
mov
jo
sub
and
cmp
dec
mov
adc
mov
sti
adcb
roll
xor
leave
cmp
sub
inc
les
fwait
es
sbb
inc
push
dec
jle
xchg
js
xor
jl
dec
adc
jle
cmp
shll
std
mov
cmp
push
ret
aas
fstpl
fbstp
lahf
mov
and
ss
cmp
in
es
xor
je
scas
nop
jae
fnstenv
les
movsl
xchg
sarb
xchg
popa
sub
fs
and
shl
cmp
push
or
or
enter
pop
adc
in
push
dec
pusha
mov
mov
inc
repz
ss
fstpl
dec
jecxz
sbb
outsb
pop
cmp
xor
outsb
leave
shlb
cmp
loopne
xor
pop
je
cli
jnp
mov
pop
fsts
mov
pop
push
sub
or
ret
mov
jnp
stc
sub
and
sarl
mov
rol
enter
xor
stos
mov
movsl
and
jo
popf
rcr
lock
subb
jp
test
mov
bound
xor
arpl
into
repnz
cmpl
push
ljmp
and
or
xor
outsb
scas
hlt
jle
xchg
cld
icebp
inc
fs
xor
ljmp
iret
jbe
jp
adc
pop
xor
inc
idivb
cmp
mov
sbb
jne
mov
imul
jmp
cmc
cmp
pop
std
inc
out
outsl
push
daa
repnz
lock
mov
xchg
sub
ficoms
out
ja
movsl
jne
and
xor
inc
shrb
daa
mov
ss
cmp
mov
scas
sbb
dec
mov
je
js
mov
and
jp
dec
rcrl
jb
cmp
cwtl
in
mulb
mov
mov
fstps
sbb
test
pop
xchg
jae
jecxz
imul
dec
and
out
mov
sbb
lea
dec
pop
dec
ljmp
or
cltd
lods
loop
rcll
and
dec
iret
xchg
sub
pop
int3
xchg
lcall
test
rol
and
add
in
mov
mov
pop
cltd
adc
push
jecxz
loope
fwait
and
jp
int3
push
cmp
mov
cmp
or
cmpsb
pop
test
mov
cwtl
sti
clc
sbb
push
cmp
sub
ss
or
imul
jo
jno
sahf
mov
js
or
push
loopne
sub
jl
xchg
lods
movsb
jbe
cmpb
mov
divb
cwtl
pop
movsl
scas
cs
push
add
movsb
mov
and
icebp
sbbb
rclb
or
fisttpl
sbb
stc
stc
in
pop
pop
shll
daa
jno
pop
rorb
ss
nop
mov
inc
cwtl
pop
es
sbb
push
loop
pop
mov
cli
das
shll
add
imul
mov
pop
or
jnp
ds
clc
lahf
sti
inc
and
ret
xor
cmp
push
jns
sub
sub
push
jbe
cmp
lret
push
std
scas
xor
jge
xchg
dec
push
mov
ret
das
pop
mov
mov
mov
inc
scas
or
xchg
mov
je
jo
dec
sarl
aaa
inc
fidivrs
test
mov
xor
xchg
mov
inc
scas
int
imul
hlt
pop
jl
psubd
xchg
inc
or
add
mov
fs
in
mov
in
and
das
into
js
lahf
dec
jp
xchg
das
sarb
xor
cmp
jp
and
outsl
sub
js
das
cmp
mov
popf
cmp
leave
xchg
xorb
popa
add
arpl
or
lcall
jae
insl
cmc
stc
pop
jmp
int
mov
nop
out
lret
pop
lret
cli
pop
fmuls
mov
sahf
mov
scas
mov
jae
and
das
ret
out
mov
sub
and
jo
cmpsl
pop
in
out
pop
mov
mov
sub
mov
add
dec
sbb
or
add
push
mov
push
adc
push
andl
pop
int
outsl
mov
cmp
jp
adc
mov
fdivrs
repz
lahf
sbbb
sub
cmp
xchg
shrl
add
ja
inc
outsl
sbb
push
add
ljmp
xor
jns
jne
jmp
sarb
adc
ds
and
inc
and
cwtl
add
sar
sbb
imul
pop
and
in
into
jp
sarl
add
aam
mov
fnstenv
arpl
fadds
pop
mov
push
mov
mov
addb
adc
popa
add
mov
jne
xor
and
ss
sub
mov
ss
pop
pushl
cmc
xchg
pop
in
out
addr16
sbb
and
repnz
test
adc
or
mov
xchg
push
lret
and
cmp
pop
mov
outsb
sub
stos
adc
outsl
cmp
dec
sbb
outsb
movsl
add
push
cmp
mov
andl
jg
ss
inc
subl
loop
pop
sbb
sub
push
ss
mov
inc
add
adc
dec
shrb
mov
scas
jne
ljmp
mov
mov
cmp
xor
aad
test
lahf
lea
clc
dec
and
mov
xchg
jb
mov
ljmp
popa
int
out
push
inc
and
or
xchg
aam
into
cmpsb
dec
mov
pop
insb
aaa
cs
mov
je
xor
inc
fs
orb
pop
mov
xchg
ss
inc
and
adc
andl
mov
sub
cmpsb
ds
and
cmp
nop
sbb
or
xchg
sbb
cmp
popf
add
loope
jp
push
out
aas
fisttpll
xchg
lds
pusha
xor
ss
cmp
mov
out
aam
pop
cmp
pusha
sbb
and
lds
scas
jb
and
cltd
add
cli
or
xorl
pusha
sbb
push
xor
subb
outsb
cmp
or
testb
enter
jne
xor
pop
mov
decb
cmp
jne
aaa
or
das
adc
test
lds
int
mov
inc
inc
or
sti
outsb
rorb
push
sbb
jp
lds
jb
cmp
jp
mov
add
movsl
mov
dec
das
add
testl
xchg
sub
scas
xor
inc
mov
sti
outsb
into
enter
mov
cmp
aaa
push
cmpsb
das
jb
pusha
sbb
dec
sbb
and
mov
xor
mov
mov
xor
add
in
and
inc
mov
outsb
ret
stos
push
cmp
ret
bound
mov
push
jb
jb
cmp
aaa
jp
add
and
cmpl
lds
xor
lds
es
ret
outsb
add
dec
pop
cltd
add
rolb
add
enter
add
shlb
add
aaa
or
das
adc
or
lds
scas
xor
repnz
cmpsl
mov
dec
xchg
push
cmp
cli
pop
aas
movsb
mov
mov
xor
scas
and
jp
jp
cmpsb
mov
dec
das
xchg
or
scas
adc
sub
and
mov
rorb
push
xor
cmp
mov
shll
outsb
ja
dec
pop
lds
bound
dec
das
xchg
push
scas
jb
and
cltd
add
cli
or
pop
mov
mov
xor
ss
pop
and
test
xchg
xor
add
cmp
pop
inc
inc
cmpsl
mov
scas
jns
mov
movsl
jg
cmpsb
and
mov
stc
add
shrl
mov
or
adc
xchg
aad
fidivrs
fucom
xchg
in
out
cmp
notb
std
xchg
lea
cmp
scas
cmp
sbb
jg
mov
mov
cli
test
cli
mov
mov
leave
mov
fidivrl
loope
ljmp
mov
cmpb
jb
adc
out
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
cmpsb
cmp
cmpsb
into
cmpsb
int
es
fimull
aam
cmpxchg
dec
dec
cwtl
pop
dec
bound
cli
jp
add
pop
scas
adc
mov
lret
mov
cmp
inc
les
push
out
pop
out
fildll
jb
jp
add
or
adc
mov
prefetch
mov
mov
and
lret
imul
dec
mov
mov
int
push
sbb
in
lock
mov
xorb
push
or
repnz
and
jl
push
cmp
cmp
sub
push
pop
jp
mov
mov
sub
pop
or
or
rorl
pop
mov
mov
sbb
sub
out
inc
cmp
xchg
ret
or
mov
mov
lea
cld
outsb
xor
lret
sub
jo
inc
mov
xor
mov
mov
out
insl
push
stos
sbb
mov
addb
push
jle
popf
enter
lods
das
scas
outsb
add
test
inc
jns
xor
test
cmp
and
stos
cmp
sub
add
or
cmp
mov
xor
sbb
inc
cmp
movsl
push
sbb
icebp
pushf
pusha
aad
jl
pushf
mov
add
cmp
cmp
shrb
mov
mov
and
sbb
out
sub
scas
jne
cmc
data16
push
adc
jnp
stos
mull
adc
and
clc
pusha
pushf
or
test
ret
mov
xchg
stos
nop
pushf
mov
adcb
inc
xchg
sbb
sbb
add
je
xchg
test
test
imul
push
pop
dec
jo
imul
repnz
enter
mov
and
sbb
xlat
subb
sahf
inc
cli
mov
ret
fwait
pop
mov
leave
ja
xor
sti
orb
push
push
divb
shrb
jmp
arpl
lret
sbb
dec
sub
or
cmp
sub
ss
jbe
test
mov
and
mov
ficomps
or
xchg
or
xor
sbb
getsec
or
dec
shlb
dec
sbb
mov
sub
pop
xor
push
sbb
pop
not
xor
outsl
add
fidivrs
je
or
sbb
add
xchg
cmp
jg
mov
sub
jae
ss
cmp
cmp
sub
les
mov
sbb
lods
mov
xor
aam
idiv
cmp
dec
adc
mov
sbb
or
and
xor
xor
pop
sub
ret
rcrb
xor
cmp
ret
dec
outsb
add
jmp
shrl
sbb
cmp
repz
push
outsb
cltd
cmc
xor
jo
lcall
mov
dec
mov
inc
pop
pop
sub
pop
out
xor
pop
cmp
or
insb
adc
out
stc
or
adc
mov
je
xor
sahf
shrb
push
sbb
mov
jbe
push
cmp
dec
adc
and
xor
or
fimull
inc
push
mov
cs
cmp
mov
sarb
and
push
and
or
xchg
lods
cwtl
js
adc
gs
cmp
xchg
pop
mov
or
xor
add
jb
and
sbb
lea
imul
mov
bound
push
jb
cli
add
or
adc
sbb
and
sub
xor
jp
inc
aam
das
mov
pop
mov
sti
push
lea
ret
pop
mov
cli
ret
mov
mov
sti
push
lea
ret
pop
mov
sti
push
lea
mov
add
push
lea
ret
pop
mov
sti
push
lea
ret
test
sti
pusha
lea
ret
pop
mov
sti
push
lea
ret
pop
mov
sti
pop
lea
ret
pop
mov
sti
push
lea
ret
pop
mov
das
mov
pop
mov
sti
push
lea
ret
pop
mov
cli
inc
mov
mov
lret
xor
pop
mov
and
inc
lods
and
ss
mov
loopne
xchg
bound
dec
mov
inc
cmp
xchg
cmp
and
xor
add
in
or
xchg
lods
xchg
das
lock
pop
xor
or
rolb
and
and
imulb
nop
push
mov
test
mov
mov
es
mov
cmp
inc
or
enter
xor
pop
movsb
inc
xor
clc
add
sub
xor
ljmp
cmp
test
push
or
sbb
movsl
jnp
pop
sub
scas
xor
xor
xchg
ja
inc
pop
sub
pop
mov
test
mov
dec
xlat
mov
push
cmp
sbb
scas
xchg
inc
cwtl
fbstp
dec
cmpl
scas
scas
repz
pusha
in
xor
sbb
das
jne
mov
mov
int
mov
and
std
fstl
dec
push
mov
jae
xlat
mov
cwtl
push
and
jmp
xor
mov
jle
push
mov
adc
mov
outsl
xchg
mov
ss
push
out
mov
mov
out
push
mov
icebp
popf
mov
insl
jp
es
mov
shlb
xchg
adc
lods
jge
cli
push
lcall
pop
push
xor
mov
push
xor
add
adc
mov
mov
ret
cmp
xor
pushf
fs
xor
shrb
pushf
icebp
js
mov
push
ss
cmpsb
sbb
int3
mull
sbb
std
cmp
xchg
sbb
xchg
mov
sub
andb
xor
or
push
je
gs
sbb
mov
cli
add
pop
dec
fwait
pop
imul
sbb
cli
adc
mov
je
sbb
jbe
cmp
inc
lods
in
pop
mov
in
or
pop
rorb
repnz
jbe
sub
ret
mov
addb
negb
sbb
adc
add
out
push
test
push
pop
and
xor
pop
mov
shrb
adc
cmpsb
add
xchg
jb
shrb
ss
mov
mov
les
dec
xchg
add
sub
push
mov
scas
sub
scas
xor
pushf
repnz
dec
inc
sub
jmp
pop
jbe
or
mov
mov
andl
adc
cmp
cmp
pop
cmp
aas
mov
insb
fistpl
mov
int
outsb
mov
hlt
mov
cmp
aas
sarl
cmp
xchg
iret
pop
mov
test
xor
mov
lret
int3
or
ja
pop
popf
and
mov
in
int3
in
rcrl
and
dec
mov
dec
cmp
daa
add
aaa
xor
repnz
scas
sub
pushf
test
dec
outsl
or
pop
mov
mov
movsl
jp
sar
pop
mov
outsl
outsb
paddsb
ss
mov
pop
ja
and
xchg
sub
xchg
cmp
and
inc
jl
and
adc
test
andb
sbb
mov
cli
out
int
icebp
stos
xor
shlb
repz
std
pop
xor
pop
mov
test
sbb
inc
push
sbb
jne
out
sub
in
fmuls
add
xor
inc
std
jne
sbb
dec
inc
adc
sbb
or
mov
xor
or
and
fwait
or
jg
ret
push
and
push
add
mov
popf
repnz
xchg
pushf
xor
pop
les
cmp
jbe
add
push
lods
inc
lret
cmp
adc
mov
aas
mov
dec
cmp
jo
lahf
inc
mov
repnz
push
cmp
jmp
icebp
dec
aaa
imull
icebp
mov
sbb
pushf
mov
daa
add
aaa
xor
div
push
lret
mov
scas
aas
add
push
or
mov
mov
les
daa
ljmp
add
sub
xchg
adc
dec
int3
sahf
lcall
mov
xchg
xchg
insl
dec
mov
adc
repnz
sub
ljmp
rolb
mov
nop
and
mov
xlat
sahf
and
shr
sub
stos
cmp
and
loopne
cmp
cmp
cmp
addr16
ljmp
outsl
repz
lret
js
jb
clc
mov
and
clc
mov
out
mov
lods
dec
mov
insb
leave
xchg
daa
aam
xor
jo
insl
in
out
shll
jbe
lock
sub
sbb
pop
mov
dec
inc
loop
ljmp
jecxz
pop
les
mov
sahf
cmp
scas
mov
test
xchg
loop
push
cmc
fs
lods
xor
int3
jo
adc
mov
adc
fildl
shrb
cmp
cmp
mov
push
xor
pop
cmp
adc
out
es
rcr
pop
idivl
dec
push
daa
inc
mov
jbe
inc
adc
push
dec
inc
sti
adcb
dec
inc
add
mov
testb
lea
daa
pusha
add
dec
cmp
fwait
or
dec
cmp
testl
pop
xchg
adc
and
scas
fs
imul
lea
and
xchg
cs
cmp
sbb
jb
and
and
sbb
push
xor
scas
and
push
or
negl
mov
cmp
inc
mov
in
xchg
sbb
pop
and
inc
xchg
repz
insl
and
stos
fisubrs
mov
ja
je
xchg
lock
sub
or
sub
jbe
lea
mov
mov
and
cld
pop
cmp
mov
and
and
out
push
fcoms
int
popf
jnp
add
movsl
xor
js
pop
lock
or
mov
adc
inc
pop
or
push
jl
fiaddl
inc
cmp
stos
adc
xlat
ss
jno
jl
mov
pop
cmp
divb
in
mov
cli
mov
ret
test
mov
adc
jmp
pop
pop
mov
scas
mov
or
ror
sbb
mov
sarl
out
outsl
stos
enter
pop
sub
push
mov
dec
mov
mov
jns
insb
push
cmp
inc
cmp
psraw
jl,pn
cmp
and
pop
cmp
aas
jle
sar
sbb
addr16
adc
and
adc
dec
mov
adc
shrb
bound
jo
test
push
adc
leave
mov
in
sub
sub
je
xchg
pop
add
lret
add
push
subl
cs
adc
mov
xor
or
lods
mov
inc
scas
cs
mov
sub
addl
mov
mov
push
inc
dec
ret
dec
out
addl
mov
push
sbb
addl
hlt
jno
xor
das
mov
test
push
pop
ja
sub
mov
clc
jns
jecxz
cmp
cmpsl
ja
movlps
sub
pop
cmp
std
adc
mov
call
fldt
movsb
dec
pop
scas
popf
mov
arpl
sarl
jmp
push
test
jge
loope
scas
jnp
dec
out
xor
inc
aam
iret
xor
jl
mov
mov
clc
or
xor
sbb
adc
ret
mov
lock
add
mov
xchg
int3
popf
shlb
dec
jle
and
inc
jle
dec
cld
jno
push
mov
loope
outsl
pusha
cs
add
fnstenv
cld
sub
and
and
xchg
pusha
mov
test
subb
pop
fwait
pop
scas
popf
stc
push
pop
mov
popa
pop
pop
xor
aad
jp
adc
movsb
push
mov
data16
pop
xor
ss
add
mov
clc
lock
add
pusha
xor
add
sub
pop
pop
xchg
mov
addr16
mov
pop
xor
lock
cltd
stos
rolb
fidivrl
and
notl
adc
xchg
xorb
dec
popf
jl
mov
cmp
jl
ss
sub
lea
pop
cmp
adc
mov
or
fs
cmp
in
ret
jp
push
push
mov
sub
test
bound
mov
pushl
push
mov
scas
call
xor
gs
cmp
xor
dec
popa
notl
inc
sbb
push
mov
push
xchg
add
adc
loope
push
xor
add
or
fcoml
cmp
shlb
subb
out
xor
inc
adc
in
ja
inc
cmp
jmp
lock
mov
cmp
aas
adc
lods
add
jbe
jp
sar
cmp
cld
bound
cmc
mov
jge
mov
scas
mov
pusha
mov
mov
and
popf
mov
xor
push
mov
repnz
ret
sbb
jbe
scas
cmp
cmp
sbb
inc
mov
mov
enter
mov
mov
sahf
lods
enter
popf
enter
std
enter
pushf
jp
pusha
aas
movsb
cmp
inc
repnz
dec
mov
cmpsl
movsb
pushf
cmp
ss
dec
mov
movsb
pushf
cmp
push
repnz
dec
mov
jle
pushf
lahf
mov
repnz
dec
mov
aas
push
pushf
sbb
cmpsl
mov
push
pushf
sbb
cmpsl
mov
push
pushf
sbb
cmpsb
mov
cmpsl
pushf
divb
and
mov
mov
rcrl
xor
cmp
sbb
sbb
sbb
cltd
mov
aas
enter
inc
enter
scas
enter
enter
outsl
enter
push
enter
mov
popa
insb
mov
cmp
sbb
lea
dec
push
cli
jmp
lds
push
mov
pop
arpl
pop
add
daa
push
ss
sub
jl
in
and
roll
inc
test
xchg
scas
mov
mov
adc
inc
mov
je
les
mov
das
pop
push
cmp
cli
inc
lds
cwtl
jle
mov
mov
testl
mov
fisubrl
dec
add
rorl
adc
cs
or
cld
out
cmp
lret
pop
out
mull
adc
xchg
sub
scas
mov
cmp
cltd
or
pop
sbb
outsb
roll
cs
aaa
mov
cmpsl
cltd
sbb
outsl
mov
in
jbe
pop
dec
into
pop
lods
sbb
sbb
mov
sbb
sub
scas
rclb
pop
scas
stc
cltd
inc
sbb
outsb
mov
es
push
mov
sbb
lods
adc
or
jb
mov
in
and
test
cmp
and
cld
lahf
pop
roll
lods
adc
inc
das
mov
mov
imull
xor
lahf
imul
lcall
mov
inc
aaa
sarb
push
out
pop
lcall
cmp
xchg
adc
sub
sbb
xor
imul
lret
mov
adc
movsl
sbb
ret
scas
cmp
xchg
cmp
mov
decb
lahf
push
int3
push
test
pop
ret
xlat
leave
lods
adc
into
scas
sbb
push
mov
mov
fmuls
scas
cmp
int3
cmp
mov
lahf
ljmp
lds
mov
test
aas
jnp
sub
loopne
add
pop
mov
insb
aaa
mull
incb
stc
sbb
outsb
sbb
das
mov
mov
insb
aaa
repz
sbb
cmp
rol
ja
stos
sub
and
jo
sub
xor
ljmp
test
push
fwait
jecxz
lods
adc
or
fstpl
pop
mov
repz
xor
inc
test
mov
lds
adc
or
mov
inc
sbb
mov
idivb
shlb
repnz
scas
mov
inc
add
outsl
lods
inc
sbb
outsb
nop
adc
int3
pop
test
and
stos
dec
xor
stos
sub
and
sub
scas
js
cli
mov
sub
xchg
jge
cmp
mov
cmp
aas
fists
sarb
cmp
mov
cmp
cmp
inc
xchg
addb
pop
cmp
xchg
jge
test
dec
sub
dec
cmp
lahf
cmp
mov
cmp
jg
scas
xchg
roll
out
test
and
mov
aas
test
jecxz
shrl
lods
adc
jns
and
sub
xor
sub
sbb
shrb
mov
pop
adc
adc
lods
mov
mov
inc
mov
push
sbb
ss
inc
jle
push
mov
jmp
cmp
xor
fnstsw
push
ljmp
int3
push
sbb
repnz
and
bound
fs
sub
jbe
sbb
sbb
push
shrb
cmp
xor
aaa
adc
fstpt
fidivs
enter
mov
mov
cmpl
inc
push
add
cmpl
mov
data16
das
cltd
jbe
jle
and
in
ret
out
push
dec
das
xchg
push
cmp
jne
cs
ss
cmp
aaa
inc
test
cltd
dec
add
push
xor
jne
aaa
data16
jbe
jle
pusha
sbb
push
push
cmpl
mov
imulb
dec
das
cltd
ss
imul
adc
mov
outsb
inc
enter
jne
mov
enter
cmpl
scas
mov
push
cmp
cli
push
inc
sbb
xchg
push
cmp
cli
es
jne,pn
aaa
test
into
pushf
cmp
inc
inc
push
add
aaa
push
mov
popw
outsb
mov
jle
jp
push
stos
add
push
cmp
push
push
push
sbbb
nop
mov
mov
mov
mov
aaa
inc
inc
jo
pusha
or
sti
outsb
rorb
inc
pop
repz
data16
dec
pop
lds
pop
cltd
add
into
enter
mov
cmp
jne
aaa
es
cs
test
push
cmpl
lds
pop
cltd
add
into
enter
mov
or
testb
enter
jne
xor
jns
xchg
push
cmp
cli
es
movsb
mov
mov
xor
cmp
xchg
inc
in
sbb
scas
push
negb
das
cltd
scas
outsb
and
cltd
jle
cli
push
xor
imul
xchg
push
mov
cs
dec
das
ret
mov
or
ss
mov
ret
movsl
or
mov
scas
enter
add
sub
mov
test
in
mov
ja
pop
popa
adc
and
icebp
jge
ret
jmp
enter
xchg
xor
popf
sbb
cmp
mov
mov
shll
leave
sahf
rolb
ss
sahf
loop
loope
ljmp
aaa
into
aaa
int
xor
popf
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
les
movsl
scas
scas
lods
outsb
fisttpl
sti
xchg
mov
cltd
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
and
loope
ljmp
jb
jb
mov
int
mov
dec
push
push
dec
pop
dec
inc
outsb
dec
jbe
into
push
push
ret
push
ret
es
ss
stc
dec
inc
les
data16
outsb
dec
dec
cmp
push
inc
xchg
mov
and
movsl
scas
mov
adc
lret
aad
std
push
mov
mov
popl
mov
mov
push
or
test
push
or
mov
movsb
inc
scas
mov
cmpsb
fs
add
mov
sahf
sarl
mov
js
notl
daa
ss
mov
scas
into
rolb
or
arpl
ljmp
stos
or
stos
add
shrl
repz
lea
push
push
in
push
inc
lahf
lret
or
push
cmc
fwait
inc
push
inc
es
test
shl
cmp
clc
mov
mov
aas
lahf
cmp
fnstsw
adc
popf
outsb
pop
cld
push
and
andps
and
mov
ret
mov
lock
or
mov
movsl
pop
pop
dec
sub
rorl
jge
ss
xor
movsb
mov
js
dec
int
mov
cmp
mov
mov
divb
sub
mov
pop
fidivs
dec
xor
sbb
mov
sarb
cmp
pop
or
dec
inc
pop
sarb
cmp
push
pop
fldl
xchg
push
enter
mov
xor
sbb
xor
cli
mov
and
ror
xor
push
aas
test
fs
sub
and
lds
sbb
sub
scas
les
pop
mov
push
pushf
cltd
cmp
lahf
xchg
ss
mov
icebp
daa
xlat
sbb
scas
jb
or
repnz
jecxz
lea
lds
scas
mov
add
xor
cltd
and
in
or
xlat
jnp
xor
jge
jmp
es
sbb
mov
cmp
orl
lods
add
push
xor
sub
sti
mov
inc
sbb
cli
mov
insl
in
sub
out
jnp
scas
les
push
sbb
xor
mov
adc
adc
sbb
mov
mov
mov
test
sub
and
dec
sub
repnz
mov
popf
out
add
sahf
pop
mov
testb
inc
sahf
and
js
sub
xor
inc
sahf
mov
inc
or
pop
pop
push
xchg
fs
and
xor
leave
add
popl
rcll
push
xor
dec
arpl
mov
mov
and
out
fnsave
dec
xor
daa
adc
pop
push
les
out
or
inc
lods
pop
je
stos
mov
or
loopne
cmp
jl
adc
and
sbb
or
add
pop
sbb
and
push
cli
adc
push
sti
xor
xor
das
cwtl
jns
cmp
or
mov
sub
xor
loope
cmp
push
ret
daa
ds
rolb
jbe
pop
cmp
cli
push
aaa
push
sub
mov
ss
test
pop
mov
jbe
jle
push
push
cli
push
aaa
push
xor
sbb
divb
push
jp
inc
aam
das
mov
pop
mov
sti
push
lea
ret
pop
mov
cli
ret
mov
mov
sti
push
lea
ret
pop
mov
sti
push
lea
mov
add
push
lea
ret
pop
mov
sti
push
lea
ret
test
sti
pusha
lea
ret
pop
mov
sti
push
lea
ret
pop
mov
das
mov
pop
mov
sti
push
lea
ret
pop
mov
cli
shll
testb
lea
ret
pop
mov
inc
sbb
sysexit
mov
mov
cwtl
mov
cmp
dec
mov
test
push
call
xlat
and
ds
sbb
jge
pop
jns
xor
mov
sub
fsubs
leave
inc
ss
mov
push
and
sbb
aas
popf
fisubl
les
sub
in
and
setnp
sub
imul
jnp
sbb
mov
adc
es
pop
mov
lcall
push
clc
pop
adc
cmp
sub
and
xor
mov
fbstp
cmpb
sbb
fstpl
mov
mov
pushf
and
fstps
cmpsl
movsl
test
and
sub
aaa
adc
pop
mov
inc
mov
cmp
sbb
adc
and
jne
and
mov
and
cmp
scas
ljmp
sbb
push
add
rcrl
push
nop
xor
repz
sbb
or
mov
mov
mov
in
adc
stos
or
cmp
mov
add
popf
test
cmp
xchg
mov
cmp
lahf
cli
mov
xor
arpl
push
scas
adc
adc
scas
push
sbb
shlb
in
cmp
fcmovnb
nop
cmp
push
mov
dec
lds
jge
stc
shlb
inc
test
pop
inc
mov
adc
push
call
mov
jl
sbbl
xchg
and
mov
jp
mov
ss
push
mov
pop
xor
mov
add
scas
rolb
in
jne
fdivrs
les
add
mov
xchg
mov
sbb
js
int3
movsl
push
jmp
and
ret
xchg
xor
sub
daa
adc
push
mov
mov
imul
pop
adc
jbe
cli
shl
testb
ja
mov
mov
fwait
cmp
mov
sbb
xor
mov
dec
cwtl
xchg
mov
aam
mov
inc
mov
outsb
inc
cltd
and
or
push
test
mov
repz
vunpckhps
out
jbe
mov
mov
loop
xor
mov
or
mov
xor
scas
lds
xor
cwtl
mov
icebp
imul
jge
mov
fbstp
sub
inc
pop
popa
pop
jp
into
sbb
or
cmp
outsb
movsl
dec
pop
push
sti
jo
pop
xor
add
cltd
out
sbb
add
xchg
or
pop
mov
lods
out
insb
lea
push
cmp
adc
dec
insb
mov
aaa
sbb
fs
je
or
cmp
and
inc
sbb
lcall
push
ss
adc
cmp
mov
scas
mov
daa
cmp
add
push
xor
push
aad
fnstenv
pushf
arpl
out
mov
push
xchg
jnp
xor
pop
xchg
adc
stc
mov
xchg
or
testb
push
jmp
shrl
ja
xchg
push
fstps
ret
lds
rclb
sbb
je
cmp
and
push
or
cmpb
lock
jbe
inc
mov
xor
lods
arpl
imul
les
inc
outsl
cmp
clc
dec
ss
stos
inc
pop
push
mov
das
aas
adc
ret
cs
pop
outsb
push
stc
shlb
cmp
ss
cmp
dec
adc
ss
cmp
dec
mov
push
ss
mov
xchg
test
xor
mov
cmp
xor
das
dec
cmp
fiadds
daa
mov
mov
cltd
xlat
xchg
and
sbb
aad
aaa
add
in
je
sub
cmpsl
shlb
lods
scas
pop
xchg
scas
es
and
out
pop
cmpsl
and
and
scas
cmp
in
add
sbb
xor
inc
inc
aaa
sub
cmp
lds
inc
mov
mov
dec
or
cld
ret
in
fimuls
xor
js
inc
push
sbb
scas
push
daa
xchg
sbb
test
imul
push
xor
cli
fdivrl
mov
roll
push
inc
subl
dec
or
dec
jb
int
add
ret
imull
out
mov
and
sbb
xchg
jle
jo
or
outsb
jecxz
cs
je
mov
xchg
pop
repnz
ss
popa
adc
sbb
sbb
pop
lcall
push
insb
jecxz
inc
jnp
aad
xchg
inc
daa
push
or
dec
xlat
push
pop
faddp
stos
cmp
test
sbb
mov
push
xor
out
scas
mov
repz
xlat
stos
fdivrp
aas
push
fwait
mov
sub
sbb
aaa
xchg
scas
cmpb
xchg
and
mov
std
xchg
sub
push
xor
mov
ss
loope
and
das
and
ds
jno
dec
addr16
repz
jo
jnp
gs
cmp
sbb
dec
rorb
push
xor
sahf
movsl
mov
cli
and
dec
or
sbb
out
inc
sbb
adc
add
dec
scas
adc
aaa
cmp
mov
sub
or
movsb
outsb
mov
or
mov
je
jo
arpl
xchg
pushf
mov
mov
mov
test
and
stos
imul
sbb
sbb
jmp
cmp
js
push
dec
inc
pop
xchg
scas
repnz
loop
sub
dec
lret
sti
hlt
scas
aas
xchg
cmp
sbb
stc
adc
xchg
jp
xor
lea
notl
lods
push
fldenv
sub
sub
sub
stos
mov
add
rcrl
shl
movsl
pop
jo,pn
mov
das
or
out
xor
hlt
addb
inc
cwtl
divb
pop
aaa
mov
adc
mov
mov
dec
fs
je
jb
xchg
dec
lret
push
jp,pn
jg
shll
sub
or
sub
cmp
or
mov
push
jnp,pn
push
cmp
inc
adc
dec
hlt
mov
xchg
xor
leave
adc
pushf
js
jg
sub
ss
imul
and
mov
mov
cs
mov
addb
mov
test
sub
loope
fs
mov
jae
xor
fimuls
xor
imul
cmp
mov
or
leave
and
les
iret
sub
fnstenv
cmpsl
and
cmp
scas
ss
mov
cmp
mov
and
and
add
fdivs
mov
push
sbb
xor
xor
sbb
addr16
nop
stc
clc
xorl
cmp
sub
push
lods
enter
movsb
out
mov
sahf
mov
pop
and
xchg
ret
cmp
bound
lods
add
dec
lahf
sbb
jmp
and
cmpsb
outsb
and
in
mov
vfrczpd
jmp
enter
mov
push
inc
pusha
xor
adc
jo
test
daa
inc
jns
cmpsb
jae
push
bound
jb
cmp
stos
in
cltd
sbb
lea
out
sub
outsb
mov
inc
fdivs
negb
and
and
xor
mov
std
xor
aas
xchg
mov
mov
adc
add
shlb
inc
inc
and
adc
or
and
scas
movsb
xchg
or
push
inc
mov
push
xor
cmp
sahf
out
popf
fidivs
in
addr16
nop
add
sub
lahf
and
xchg
jle
pop
dec
sbb
fstpl
adc
mov
stos
push
outsb
cmp
sub
js
push
xor
pop
adc
lahf
std
les
test
lods
in
scas
or
pop
shlb
aaa
sarb
dec
sbb
pop
push
jp
sbb
testb
cltd
xor
sbb
sbb
pop
or
inc
sbb
pop
sbb
testl
push
push
mov
xchg
sbb
fwait
cltd
jg
sub
mov
pop
jg
cmp
xor
jg
push
pushf
aas
ret
xchg
aas
dec
ss
nop
cmp
inc
fstpt
inc
mov
or
leave
jg
mov
xchg
les
and
adc
or
pop
jmp
cltd
lcall
rolb
cmp
add
mov
adc
dec
testb
adc
mov
and
or
pop
xlat
jb
jmp
pop
or
or
dec
dec
lret
pop
adc
das
xor
ss
adc
push
lea
and
dec
test
outsb
adc
xor
or
je
mov
mov
icebp
pop
xor
mov
out
mov
out
enter
mov
xor
jl
test
xchg
and
pop
inc
adc
inc
mov
add
fwait
stos
mov
inc
xchg
add
inc
ljmp
add
loop
loopne
sub
cmp
or
clc
cwtl
fdivrs
movsl
xor
daa
idivl
pushf
pop
lock
or
cld
sbb
stos
mov
pop
sub
je
inc
lds
sub
subb
out
shlb
mov
enter
aas
loope
jp
or
mov
idivb
cltd
and
pop
dec
lcall
push
and
mov
in
mov
enter
and
mov
xor
aaa
pop
cmp
mov
inc
dec
pop
xchg
jl
sub
sbb
push
sub
pop
mov
aaa
add
sbb
dec
push
inc
xchg
cmc
dec
cmp
pop
and
cmp
loope
test
lea
loope
mov
aad
bound
dec
jbe
imul
push
jg
outsb
mov
cmpsb
sbb
gs
xchg
xor
jp
sarb
jmp
push
jp
icebp
push
mov
daa
mov
sub
xchg
pop
je
sub
jnp
stos
cmp
xor
cmpsl
xchg
ja
add
adc
pushf
mov
insb
mov
iret
pop
mov
cmp
jb
and
dec
and
dec
adc
mov
cmp
jl
enter
lahf
jge
adc
shr
mov
or
and
pushf
insb
pop
dec
test
xor
lods
add
or
movsb
unpckhps
data16
cmp
loopne
and
xchg
test
push
push
mov
mov
push
or
mov
xor
lea
xchg
mov
aas
add
push
scas
xchg
mov
lea
mov
cld
or
aas
xchg
pop
jnp
js
mov
xor
adc
pop
xor
add
sbb
scas
push
and
loop
adc
sbb
lods
mov
in
push
mov
scas
add
stc
dec
pop
hlt
subl
inc
cmp
mov
rclb
rcrl
mov
outsl
xchg
lods
dec
cltd
mov
js
adc
cltd
mov
jp
sarl
mov
sbb
stos
ret
test
xchg
lahf
push
inc
inc
les
mov
xorl
dec
push
test
dec
sub
pusha
mov
inc
mov
mov
jmp
clc
sub
push
pop
clc
sub
pusha
cli
sub
hlt
jecxz
jmp
mov
push
cltd
sub
jmp
stos
xchg
movsl
and
mov
imul
adc
mov
mov
sub
clc
aas
and
sub
xchg
shll
ss
sub
and
sub
xchg
push
mov
gs
or
std
xor
outsb
loop
orb
or
pop
and
jbe
sahf
sbb
cmp
ss
sub
and
add
mov
xchg
daa
daa
lock
movsl
cmpl
daa
movsb
test
idivb
es
clc
xchg
and
pop
mov
xchg
xchg
push
xor
and
iret
jbe
jge
and
cli
add
pusha
push
mov
out
xor
xchg
testb
and
push
lods
push
jmp
push
add
cmpsl
outsl
cmp
ss
push
dec
jno
add
add
jge
clc
push
je
xor
ja
sbb
cmp
mov
cmpsb
or
push
mov
insb
test
cmp
mov
lods
dec
mov
and
xchg
ljmp
in
call
cwtl
sub
push
ficoml
push
pop
outsl
and
pop
fsubrs
jns
xchg
inc
and
mov
aas
mov
and
sub
mulb
dec
sub
or
in
or
add
into
xchg
in
stc
int3
pusha
and
jp
or
mov
pusha
movsb
popf
das
mov
inc
xchg
lcall
xor
sbb
push
pop
outsl
sahf
lods
ja
adc
imul
sub
xor
cmpl
push
fidivrl
test
outsb
cmp
sub
mov
cmpl
xchg
js
dec
push
cltd
std
ret
push
mov
imul
xor
cltd
or
enter
sub
cs
stc
out
stos
or
lea
les
std
scas
cmp
sbb
stos
mov
jecxz
ss
bound
add
mov
fnstsw
add
pop
mov
stos
or
std
stos
lret
jp
das
ret
cmp
ret
pushf
add
sbb
cli
ss
pusha
adc
mov
xor
pushf
inc
stos
xchg
inc
lahf
xchg
xchg
inc
cltd
cmpsb
adcb
push
xchg
call
mov
or
add
push
push
push
cmc
sub
xor
sbb
push
in
mov
push
ret
add
adcl
and
es
xor
xchg
cmp
and
clc
stos
or
add
in
xchg
and
cs
stos
xor
outsb
sarb
sbb
adc
sbb
push
mov
dec
add
loopne
stos
mov
popf
inc
mov
xor
cld
cmp
or
stc
movsb
pop
mov
jnp
hlt
xor
mov
cmp
ja
outsb
jmp
add
xor
xor
sub
xor
jmp
call
mov
cmpsl
sarb
inc
scas
cs
dec
test
add
pusha
and
mov
lea
xor
mov
aaa
dec
or
mov
xchg
cmp
std
cmp
jns
sub
lods
jge
fstl
xchg
mov
sbb
mov
pop
mov
sub
push
xor
pop
adc
cltd
adc
sbb
adc
adc
jnp
hlt
stos
jae
lahf
pop
jp
xchg
notb
mov
sbb
sub
sarl
mov
mov
push
mov
and
std
mov
push
daa
dec
dec
push
dec
stos
or
ret
mov
bound
out
fidivrl
adcb
sbb
notb
pop
jnp
xchg
std
jbe
jmp
aas
add
lea
pop
push
adc
or
loop
or
insb
cwtl
xchg
dec
sbb
ficoms
xchg
inc
push
je
data16
lds
push
jmp
xchg
push
cwtl
insb
es
push
or
jecxz
rorl
out
icebp
pop
adc
sarl
mov
inc
loop
push
loop
pop
xor
cltd
pop
aas
xorb
pop
outsb
jae
scas
bound
repz
cs
or
aam
push
sbb
xchg
ss
lea
jns
xlat
jo
xchg
cmp
repz
sbb
jae
jmp
and
aas
dec
pusha
leave
call
add
add
xor
pop
mov
sbbb
cs
insb
jp
mov
pop
pop
xor
lods
jbe
popa
pusha
xor
jl
sub
movsb
popa
adc
and
stos
xor
push
cli
movsl
test
and
sbb
inc
fsubl
sub
xchg
xchg
repnz
fists
mov
and
sbb
ret
aaa
jo
mov
ljmp
inc
dec
lods
sbb
or
sbb
add
jle
fldcw
add
or
adc
xor
dec
xor
pop
xor
iret
jbe
scas
sub
int
sub
push
les
rorb
cmp
dec
aas
inc
les
fnstsw
stos
sarl
cs
sbb
cmp
xor
ss
les
cmc
xor
or
xchg
adc
pop
xor
shrl
mov
jl
jp
add
adc
es
xchg
jle
add
inc
sbb
lods
movsl
and
sub
sbb
sub
or
test
addb
adc
test
stc
push
ljmp
pop
les
pop
fldcw
test
scas
sbb
cwtl
or
lret
adc
sbb
repnz
out
sbb
cwtl
ret
int3
ja,pn
adc
cmpl
shrl
dec
sti
leave
mull
fcmovbe
int3
xchg
mov
inc
inc
sub
out
lods
sub
les
clc
ret
in
mov
sbb
sub
adcb
sbb
sbb
pop
lods
outsb
mov
xor
cmp
je
mov
xor
sub
cmp
pop
scas
and
rcrb
cmp
cmp
jbe
cli
jp
push
xor
xor
cmp
push
idivb
and
es
dec
push
cli
pop
aaa
pop
mov
inc
inc
jbe
jle
add
outsl
pop
pop
sbb
xchg
cmp
cmp
cmp
dec
jb
sub
out
pop
mov
cltd
mov
lret
sub
and
mov
xor
je
lret
or
outsl
into
xor
aaa
jns
cmp
mov
xchg
pop
jp
mov
adc
cmpsl
stos
and
das
and
scas
insl
daa
pop
mov
xor
inc
mov
mov
push
xor
xchg
push
mov
xorb
xor
and
or
mov
pop
mov
mov
mov
cli
mov
jb
add
call
push
mov
sub
dec
in
cli
sbb
cs
xor
or
pop
inc
xor
adc
je
cld
inc
sub
lret
cmp
test
cmp
cwtl
ds
xchg
mov
sub
sub
test
rcrl
jp
test
pop
add
sub
es
or
mov
adc
pop
lahf
sbb
push
and
loope
mov
xor
stos
cmpsl
cmp
test
mov
call
fmuls
jecxz
push
cmp
mov
lock
dec
mov
cld
and
pusha
shrl
mov
push
add
and
cmp
adc
push
sbb
mov
and
mov
jge
movsl
pop
std
adc
in
sub
or
gs
cli
inc
sbbl
jecxz
stos
cmp
sti
test
lea
in
in
sub
loopne
dec
lds
pop
jns
xor
push
jmp
mov
adc
and
adc
pop
stc
add
sti
inc
fildl
xor
loope
mov
iret
shll
or
ljmp
inc
sub
inc
pop
int
and
push
adc
jbe
mov
cmp
xchg
or
mov
test
mov
ss
xor
sbb
cld
jae
mov
jmp
clc
jp
sahf
pop
inc
je
ficompl
ficomps
mov
mov
jge
int
dec
adc
xchg
jle
ret
inc
ljmp
test
out
lahf
inc
stc
mov
inc
cmp
xor
mov
jbe
sar
or
punpcklwd
mov
pop
iret
cmp
xor
or
add
sbb
in
jmp
popf
stos
pop
sub
std
dec
inc
mov
jmp
pop
insb
hlt
mov
fcmovb
inc
in
mull
aam
jnp
jns
lock
cs
adc
fwait
jmp
sub
sub
rcl
mov
lret
insl
jbe
into
popf
jmp
loopne
mov
and
xor
jle
aaa
xor
sbb
mov
adc
es
and
out
ja
ljmp
pop
leave
or
aam
or
dec
cmp
pusha
clc
jecxz
cmp
mul
push
jge
pop
pop
dec
push
fwait
cmp
xor
pop
mov
ffree
pusha
jo
loop
es
bnd
loope
fisubrs
fwait
mov
enter
or
sbb
cmpsb
into
shll
pop
mov
imul
mov
in
pushf
test
decl
divl
mov
cmp
inc
jo
xchg
push
sub
std
and
jge
cmpsb
xor
test
ds
idivb
fstps
lret
addr16
mov
mov
rcrb
add
enter
mov
cmp
aaa
adc
insb
dec
mov
or
mov
stc
cli
les
mov
xchg
mov
dec
pushf
mov
shl
push
push
xor
into
adc
push
leave
icebp
mov
fnstenv
cs
das
mov
mov
popa
pop
pop
mov
stos
ret
outsl
fidivrl
arpl
loopne
adc
and
xor
cmp
insl
pop
adc
test
lahf
lcall
mov
xchg
push
data16
pop
enter
iret
dec
ficoml
inc
ljmp
repnz
addr16
cwtl
ss
adc
mov
xor
ret
cmpb
cwtl
loop
xor
mov
ljmp
add
or
das
outsb
jle
into
jbe
and
insl
outsl
jg
fimuls
lods
inc
cmpb
sub
mov
pop
lahf
cmpsl
pop
pusha
lret
push
mov
cld
cmp
push
mov
jmp
sbb
out
inc
or
movsb
fstp
rcrl
leave
xlat
push
cmc
dec
imul
or
out
push
rorb
sarb
ret
fists
repnz
push
or
pandn
push
lods
les
fimull
xchg
push
inc
xchg
outsb
cli
test
out
mov
jp
mov
jecxz
enter
mov
or
jno
push
xchg
adc
mov
lahf
sbbl
cltd
cmp
mov
pop
dec
adc
mov
xchg
ficompl
xor
xor
aad
pop
out
sub
inc
aam
sbb
in
fcomp
mov
inc
cmp
jle
cltd
pop
cmpsl
push
into
add
mov
test
mov
aad
mov
pop
and
inc
xchg
jecxz
add
out
push
or
lcall
dec
cld
mov
stos
inc
andb
std
jp
inc
and
movsb
xor
enter
mul
stc
ljmp
jns
inc
xor
data16
sbb
mov
arpl
adc
mov
outsb
push
dec
popa
sub
das
push
gs
stos
xchg
push
mov
addr16
imul
test
lcall
sarl
jne
out
std
jno
fs
jb
xchg
mov
cmp
stos
ror
aad
inc
push
and
cmc
jne
lock
jb
add
xlat
insl
xor
jnp
test
or
mov
fsubs
fmull
push
mov
hlt
out
adc
out
adc
sarl
mov
cmpsb
data16
push
ret
call
push
lcall
aas
inc
jb
dec
cli
sub
mov
mov
clc
xor
int3
jb
shll
fs
nop
aad
stc
pop
mov
or
ja
or
movsl
cmp
mov
outsl
push
mov
lret
inc
mov
and
dec
push
mov
xor
and
sbb
in
dec
das
mov
xor
aas
xor
adc
inc
mov
pop
xchg
inc
movsl
sti
cmp
jnp
cmc
test
fdivrs
cmc
xor
loope
inc
sarl
lea
sarl
test
lcall
xor
ljmp
jge
test
dec
and
lea
ja
cmc
inc
shl
sub
shl
shr
ror
add
rcl
mov
sub
pushf
mov
clc
repnz
mov
mov
movb
call
movl
push
movw
pushf
pushl
pushl
popl
push
mov
pushl
ret
lea
jne
inc
shrd
mov
cmp
sub
btc
mov
cmp
pushf
mov
sub
call
lahf
mov
jecxz
lds
mov
xchg
mov
mov
dec
jne
mov
cmp
lcall
mov
fcmovnb
mov
and
jmp
xor
iret
pop
lea
dec
xor
mov
fbstp
ljmp
mov
les
and
jb
add
xor
xor
shlb
inc
outsb
or
cli
les
pushf
or
adcb
xor
repz
mov
leave
cmp
jl
jbe
push
fdivrs
jno
outsb
xchg
inc
push
sub
sarl
pop
sbb
lret
sbb
xor
repz
push
shrb
test
pushf
clc
add
mov
pusha
pusha
mov
lea
jmp
mov
mov
lcall
in
bound
xor
xlat
xor
jno
popa
jmp
fsubl
repnz
mov
scas
mov
jae
ficoms
add
xor
movsl
dec
or
fisubl
fxch
add
lahf
std
cmc
fs
das
data16
nop
xchg
pop
jmp
jns
lahf
cwtl
push
and
data16
cmp
enter
mov
enter
leave
dec
jge
inc
test
sti
fsubl
adc
and
dec
lds
mov
enter
in
les
push
pushf
pushl
lea
ja
rol
sub
setnp
add
stc
shrd
bsf
mov
rcl
mov
pushf
bt
repnz
push
lea
jne
not
movzbw
cwtl
jmp
movl
push
pushf
pusha
pushf
movl
pushf
pushf
push
pushl
lea
jmp
mov
cwtl
add
lds
lods
push
push
mov
hlt
cmp
cli
xor
scas
mov
jle
bsf
mov
mov
xor
sbb
jb
dec
jl
movsb
sbb
inc
adc
jle
mov
iret
aas
inc
lahf
pop
out
out
outsl
xchg
mov
push
rorb
ret
bt
lea
mov
test
stc
test
jmp
jmp
movl
mov
pushl
lea
jnp
push
pusha
mov
pushf
push
lea
jmp
movb
neg
jmp
dec
jbe
push
pushf
ror
cmc
jmp
mov
push
lea
jae
pusha
movb
pusha
pushf
lea
jmp
cmc
cmp
push
pusha
jmp
int
dec
add
ret
lds
lret
sbb
dec
pop
div
adc
xor
xor
repnz
fwait
inc
in
lret
in
lods
mov
xchg
aad
fbld
push
stc
mov
out
push
sub
in
xchg
iret
adcl
ds
mov
insb
js
sub
out
cwtl
xlat
mov
add
je
dec
test
out
xor
jnp
push
int3
and
sahf
jae
xchg
pop
scas
into
push
lcall
nop
and
cmp
lock
in
enter
fisubl
pop
mov
pop
mov
dec
leave
adc
cs
loop
lock
and
fildll
arpl
sbb
cmpsl
mov
push
lahf
daa
push
sahf
mov
jmp
sbb
push
ret
adc
mov
cmp
and
jb
push
pushl
cmc
pushf
cmp
call
pushf
lea
jb
push
pushl
ret
bsf
rcr
shl
rol
push
bsf
mov
sbb
bsf
shrd
sub
stc
push
stc
mov
push
mov
shr
bts
push
bt
lahf
push
aam
jge
cwtl
mov
stc
bt
test
pusha
lea
je
movzbw
call
lea
ja
clc
add
cmp
test
cmc
or
call
mov
lea
ja
call
jmp
jmp
pushf
add
bt
bt
cmp
pushf
movzwl
sub
clc
mov
cmc
add
pushf
mov
pushf
cmc
jmp
lea
jbe
xchg
dec
shld
sub
shr
mov
jmp
clc
push
clc
movl
add
call
test
lret
xorb
dec
push
loop
jp
cli
push
jne
idiv
pop
insb
fisttpll
dec
sbb
bsf
jnp
mov
jo
push
ja
cmp
call
shrl
movsb
sbb
subl
xlat
das
aas
scas
addr16
aaa
mov
insb
adc
shrd
btc
rcr
shld
mov
cmc
cmpb
jmp
call
jmp
test
call
call
pushf
ror
jmp
lea
jne
jmp
movl
push
pushl
mov
pushf
lea
jmp
call
pushf
call
movl
pushf
lea
jmp
pop
bswap
mov
pusha
pusha
pushf
popl
push
xchg
movsbw
mov
jmp
mov
call
call
pushf
popl
push
push
pushf
jmp
push
call
mov
mov
sub
jmp
mov
call
push
lea
jge
pushf
mov
push
pusha
pushf
repz
popl
mov
pusha
lea
push
pushf
push
mov
call
not
pusha
mov
lahf
setg
mov
mov
lea
cpuid
stc
clc
bt
cmp
sub
test
cmc
cmpl
push
push
jmp
pushl
popl
pushf
pushf
mov
pushf
movl
push
pushl
lea
jmp
push
mov
jmp
add
pusha
pushf
popl
call
mov
mov
pusha
lea
jno
pusha
mov
push
mov
mov
pushl
lea
jmp
pusha
pusha
call
call
inc
mov
push
test
mov
movw
add
mov
movb
pusha
mov
mov
pusha
movl
push
lea
jmp
pusha
mov
push
jmp
mov
stc
test
clc
push
sub
pushf
jmp
pushl
popl
pusha
pushl
movb
pushf
lea
jmp
pushf
movb
call
lea
jne
push
mov
repz
popl
pushf
call
mov
pushf
pushf
popl
call
pusha
pushf
mov
pushf
mov
movw
pusha
mov
call
call
call
pusha
pop
sets
call
pushl
popl
push
movl
movl
pusha
push
lea
jmp
scas
dec
pop
xchg
pop
aaa
pop
xchg
cs
pop
xchg
mov
cmp
in
inc
pop
xchg
sub
xchg
push
inc
pop
xchg
js
pop
xchg
sarb
pop
xchg
cmp
cmp
mov
pop
xchg
pop
ds
xchg
mov
pop
xchg
and
xchg
cli
push
pop
xchg
xor
dec
pop
xchg
mov
pop
xchg
and
xchg
mov
inc
pop
xchg
scas
dec
pop
xchg
orl
xchg
outsl
push
pop
xchg
insb
aas
pop
xchg
insb
push
pop
xchg
fistps
xchg
cmpsl
xor
fistps
xchg
mov
ds
xchg
and
pop
xchg
mov
pop
pop
xchg
out
pop
xchg
sbb
dec
pop
xchg
mov
xor
xchg
dec
pop
xchg
sbb
pop
pop
xchg
sbb
dec
pop
xchg
push
dec
pop
xchg
cmpsl
xor
xor
cmp
out
pop
xchg
push
inc
pop
xchg
push
dec
pop
xchg
out
pop
xchg
sub
push
pop
xchg
adc
pop
xchg
les
pop
xchg
popa
inc
pop
xchg
fiaddl
les
pop
xchg
pop
aaa
pop
xchg
cli
push
pop
xchg
push
dec
pop
xchg
out
pop
xchg
les
pop
xchg
in
pop
pop
xchg
out
pop
xchg
cmp
push
pop
xchg
cmp
push
pop
xchg
lret
cmp
xor
dec
pop
xchg
js
pop
xchg
mov
pop
xchg
icebp
aas
pop
xchg
outsl
push
pop
xchg
pop
xchg
idivl
pop
xchg
idivl
pop
xchg
popa
inc
pop
xchg
outsl
push
pop
xchg
jle
pop
xchg
icebp
aas
pop
xchg
mov
pop
xchg
pop
xchg
jnp
pop
xchg
cmp
pop
xchg
mov
xchg
cmp
pop
xchg
push
inc
pop
xchg
icebp
aas
pop
xchg
cmp
pop
xchg
pop
xchg
adc
inc
pop
xchg
mov
inc
pop
xchg
orl
xchg
mov
pop
xchg
pop
xchg
insb
push
pop
xchg
jnp
pop
xchg
adc
pop
xchg
push
inc
pop
xchg
add
xchg
icebp
aas
pop
xchg
scas
dec
pop
xchg
pop
xchg
cmpsl
xor
in
pop
pop
xchg
orl
xchg
xchg
push
pop
xchg
icebp
aas
pop
xchg
xchg
push
pop
xchg
pop
xchg
cmp
pop
xchg
pop
dec
pop
xchg
cs
pop
xchg
out
pop
xchg
les
pop
xchg
icebp
aas
pop
xchg
fiaddl
pop
xchg
mov
inc
pop
xchg
idivl
pop
xchg
out
pop
xchg
cmp
pop
xchg
icebp
aas
pop
xchg
scas
dec
pop
xchg
pop
xchg
mov
pop
xchg
sbb
push
pop
xchg
scas
dec
pop
xchg
cmp
aas
pop
xchg
call
cmp
pop
xchg
cs
pop
xchg
and
xchg
sarb
pop
xchg
fistps
xchg
icebp
aas
pop
xchg
xchg
push
pop
xchg
pop
xchg
insb
aas
pop
xchg
orl
xchg
adc
push
pop
xchg
icebp
aas
pop
xchg
and
xchg
pop
xchg
in
pop
pop
xchg
push
dec
pop
xchg
mov
pop
xchg
jle
pop
xchg
call
aas
pop
xchg
in
pop
pop
xchg
pop
xchg
in
pop
pop
xchg
xchg
push
pop
xchg
popa
inc
pop
xchg
mov
xchg
push
dec
pop
xchg
icebp
aas
pop
xchg
sub
xchg
pop
xchg
jnp
pop
xchg
out
pop
xchg
pop
aaa
pop
xchg
cli
push
pop
xchg
and
xchg
icebp
aas
pop
xchg
mov
cmp
pop
xchg
in
pop
pop
xchg
cs
pop
xchg
mov
pop
xchg
mov
pop
xchg
icebp
aas
pop
xchg
popa
inc
pop
xchg
pop
xchg
mov
dec
pop
xchg
lahf
cmp
adc
pop
xchg
pop
ds
xchg
icebp
aas
pop
xchg
testb
pop
xchg
orl
xchg
in
pop
pop
xchg
sbb
cmp
xchg
sbb
inc
pop
xchg
jle
pop
xchg
popa
inc
pop
xchg
orl
xchg
cs
pop
xchg
and
pop
xchg
les
pop
xchg
pop
dec
pop
xchg
and
pop
xchg
out
pop
xchg
xor
cmp
xchg
mov
pop
xchg
sbb
dec
pop
xchg
in
pop
xchg
cli
push
pop
xchg
xchg
dec
pop
xchg
pop
aaa
pop
xchg
jle
pop
xchg
push
dec
pop
xchg
fisttpl
sub
xchg
xchg
push
pop
xchg
pop
dec
pop
xchg
jle
pop
xchg
push
inc
pop
xchg
in
inc
pop
xchg
out
pop
xchg
out
pop
xchg
insb
aas
pop
xchg
js
pop
xchg
jle
pop
xchg
push
dec
pop
xchg
in
inc
pop
xchg
pop
dec
pop
xchg
fisttpl
cmp
pop
xchg
cmpsl
xor
mov
ss
xchg
adc
pop
pop
xchg
mov
xchg
jge
pop
xchg
jge
pop
xchg
mov
pop
xchg
jge
pop
xchg
mov
mov
lea
jmp
jge
mov
stc
test
push
clc
add
movb
pusha
movw
lea
jmp
cbtw
mov
bt
clc
pushf
clc
sub
call
pushl
test
test
pusha
add
push
movb
movb
push
pushl
popf
pushf
push
pushl
push
lea
jmp
rol
xadd
mov
pusha
cmc
inc
shl
mov
jmp
mov
pusha
mov
movb
pusha
mov
jmp
push
mov
call
pushl
popl
movb
jmp
pushf
pusha
lea
jo
push
lea
call
jmp
pushf
mov
push
inc
call
push
push
mov
pushf
pushl
pusha
mov
call
sbb
movzbl
cmp
clc
test
xor
stc
clc
stc
ror
pushf
pushf
pushf
inc
movw
bt
cmp
pushl
not
test
xor
call
pushf
movb
mov
movb
movl
mov
mov
jmp
xchg
pusha
setl
mov
shl
ror
mov
movb
add
call
pushl
popl
mov
movl
push
pushl
push
movb
lea
jmp
mov
pusha
movw
mov
mov
pushf
pushl
popl
push
movl
pushl
pushf
movb
push
lea
jmp
jmp
lahf
notl
movzbw
das
push
shld
mov
test
movl
sub
cmc
and
pushf
push
pushl
pusha
pushf
popl
jmp
call
pusha
push
xor
pusha
xchg
movb
movb
pushf
pushf
mov
push
sub
pushf
call
mov
mov
pushf
mov
jmp
not
mov
jmp
push
stc
movw
shrd
movb
pushf
lea
je
pushf
mov
lea
ja
pushf
pushf
pusha
pushf
pushl
popl
push
pushf
lea
jmp
pusha
aad
shl
mov
sub
mov
pusha
pushl
not
pushl
pushf
not
push
call
aaa
or
ror
mov
stc
pusha
sub
mov
call
and
jmp
repz
popl
pushf
lea
push
pushf
pushf
jmp
sbb
cwtl
setb
mov
bt
pushf
jmp
call
mov
pushl
movb
call
dec
or
das
mov
btr
shl
setp
pop
btr
daa
pop
bt
shld
inc
pop
sar
bswap
pushf
mov
setge
bswap
add
mov
das
pushl
popf
bswap
setle
mov
lea
pushf
not
mov
xchg
mov
pusha
push
mov
movsbl
bswap
bswap
pushf
mov
mov
pushl
ret
pushl
pushf
mov
movw
movb
pushf
popl
pushf
pushf
pushf
lea
jp
popl
pusha
pusha
lea
jmp
pushf
pop
not
call
push
add
pushf
lea
jmp
mov
pushf
pushf
pushf
call
add
bsf
mov
jp
push
add
push
pusha
lea
jmp
pushl
popl
movb
mov
movl
push
mov
lea
jmp
movb
mov
pushf
repz
popl
mov
pushf
lea
push
jmp
jmp
movb
pushf
pushl
pushl
popl
jmp
pushf
pushf
call
call
call
jmp
pushf
lea
jnp
pusha
lea
call
inc
bt
movzbw
movsbw
cmc
ror
bswap
pusha
not
pushf
call
pusha
pushf
mov
mov
pusha
movb
mov
call
push
movb
pushf
mov
pusha
push
lea
jmp
mov
pusha
call
mov
call
pusha
mov
movb
movb
pusha
lea
jmp
pusha
call
lea
push
push
mov
push
call
call
call
pushf
mov
jmp
mov
movw
pusha
pushf
mov
lea
jmp
call
call
pushl
popl
mov
movb
movb
lea
jmp
push
not
bt
pushl
ror
bt
xor
jmp
jmp
pushl
pushf
mov
call
movb
call
xor
lahf
xor
shr
mov
sub
bts
cmc
shr
mov
call
pushf
pushf
pushl
pushl
popl
pushf
mov
lea
jmp
jmp
push
movl
pushf
lea
jmp
test
add
bt
cbtw
movw
stc
cwtl
pushf
sub
jmp
pushf
rol
shld
add
inc
not
not
or
pushl
bts
and
bswap
add
mov
pusha
sub
jmp
pushl
popl
pushf
pushf
pushf
lea
jmp
jmp
mov
pushf
push
repz
popl
pushl
push
lea
push
push
call
push
mov
push
lea
jmp
mov
pushl
popl
pushf
pushf
pushf
lea
jmp
mov
call
pushf
call
push
pusha
pushl
popl
pushl
lea
jmp
pushf
lea
je
push
pusha
lea
jmp
call
jmp
mov
not
sete
setnp
repz
popl
jmp
mov
jmp
mov
push
call
jmp
call
pushf
jmp
or
test
lahf
mov
rcl
sar
mov
mov
adc
xor
cmc
mov
jmp
call
push
dec
inc
jmp
pushf
mov
push
mov
mov
repz
popl
jmp
pusha
push
pushf
lea
push
pusha
jmp
bswap
rol
aad
movzbl
lea
jmp
call
jmp
bts
xor
mov
dec
mov
sub
mov
clc
test
pusha
call
pushf
mov
push
call
pushf
mov
push
mov
pusha
pushl
popl
call
cmp
add
jmp
pushl
movl
movw
lea
jmp
pushf
mov
movb
pusha
mov
push
pushl
pushf
pushf
mov
jmp
mov
pushf
pushf
call
jmp
jmp
pusha
call
mov
pushl
mov
lea
jmp
daa
pushf
rcr
mov
shl
dec
bt
mov
pushf
pushf
sub
movb
shr
jmp
pushl
popl
movl
movw
movw
lea
jmp
sbb
sub
add
mov
btc
mov
bt
add
call
mov
push
movw
movb
push
lea
jmp
btc
rol
call
jmp
push
movl
pushf
mov
push
movw
pushf
mov
pushl
ret
stc
call
push
pushf
jmp
pushl
popl
pushl
call
bt
sub
push
call
jmp
call
and
and
btc
stc
mov
movzbl
or
add
stc
movzbw
shr
rcl
sub
push
btr
btc
mov
clc
test
cmc
pushf
shl
movb
pushf
shr
cmc
bt
or
cmc
movb
clc
xor
pushf
pushl
mov
inc
pusha
call
movb
mov
movb
mov
mov
mov
mov
jmp
movb
pushl
popl
pushf
push
pushf
push
lea
jmp
jmp
mov
movb
mov
mov
mov
lea
jmp
neg
add
push
aaa
mov
call
jmp
push
jmp
mov
pushf
mov
call
test
shr
pushf
jmp
mov
repz
popl
call
add
push
pushf
clc
shld
pushf
movb
mov
call
push
lea
ja
pusha
pushl
mov
pushf
movb
jmp
mov
jmp
movw
mov
push
pushl
movb
mov
push
mov
pusha
movw
push
jmp
pushl
jmp
push
pusha
pushl
lea
jne
pushf
add
push
xorb
lea
jmp
mov
mov
jmp
pushf
mov
pushf
mov
push
push
lea
jmp
jmp
push
rcl
shr
mov
cmp
bt
sub
pusha
mov
movb
lea
jmp
jmp
mov
mov
call
mov
call
mov
jmp
movb
jmp
stc
inc
or
mov
call
ror
pusha
cmc
jmp
pusha
pusha
call
jmp
push
movb
pushf
mov
pushf
mov
call
sub
jmp
mov
jmp
pushl
push
mov
pushf
lea
jmp
pushl
popl
mov
lea
jmp
sbb
mov
adc
mov
bt
sub
cmp
pushf
push
shl
pusha
mov
push
call
pushl
popl
pushf
mov
movb
mov
lea
jmp
call
jmp
or
mov
jmp
call
mov
jmp
push
movl
pushf
push
pushf
movb
lea
jmp
mov
call
call
mov
pushf
mov
pushf
mov
pushf
jmp
repz
popl
call
movb
jmp
setl
call
rcr
sete
ror
rcl
xor
rcl
bswap
mov
stc
mov
add
pushf
pushf
jmp
push
pushl
popl
push
movl
movb
pushf
lea
jmp
pushf
popl
pushf
movb
pushf
pushl
popl
mov
mov
lea
jmp
dec
not
dec
mov
clc
pushf
clc
mov
sub
jmp
pop
pusha
push
mov
pusha
lea
jmp
cmc
aam
bswap
bt
mov
adc
shr
sar
mov
call
push
pusha
mov
call
movw
call
push
push
mov
lea
jg
pusha
push
repz
popl
movb
lea
push
push
jmp
push
pushf
popl
call
sub
mov
pushf
mov
pushf
pushf
lea
jmp
xchg
mov
or
clc
add
setl
mov
jmp
mov
pushf
movb
mov
mov
call
cmp
push
pushf
lea
ja
lahf
add
aad
shrd
mov
push
shl
lea
bsf
xadd
dec
sub
add
lea
test
pushf
xor
shrd
and
neg
stc
sub
jmp
movb
lea
jne
stc
call
pusha
jmp
xchg
pusha
call
stc
cwtl
or
aaa
mov
stc
test
mov
clc
stc
pushf
add
jmp
push
pusha
pusha
mov
push
mov
jmp
lea
push
jmp
movl
lea
push
push
xchg
pusha
call
add
push
mov
pusha
movb
pushl
pushf
lea
jmp
mov
mov
pop
pusha
not
mov
bswap
mov
jmp
lea
push
call
pushl
popl
pushl
call
pushl
popl
call
bt
mov
shrd
dec
cmp
add
btc
ror
bsf
sub
inc
bt
btc
bt
xor
push
dec
shld
bt
setle
add
lea
pop
push
movzbl
lea
jg
mov
push
inc
jmp
mov
jmp
repz
popl
push
lea
push
jmp
movb
mov
pushf
mov
pusha
pushl
popl
pushf
movl
movb
push
pushl
pushf
lea
jmp
mov
lea
jg
pushf
pusha
push
pushf
popl
call
rep
or
pop
mov
clc
shld
mov
test
bt
pushl
popf
mov
mov
lea
jmp
pusha
mov
pushf
movb
call
sub
rcr
pushf
neg
movzbl
not
bswap
xor
bswap
call
aam
mov
xor
mov
pusha
cmp
not
push
not
push
movw
stc
and
lea
jg
pusha
pusha
movw
mov
call
push
pushl
divl
jmp
movzbl
pushf
bt
xor
pushf
ror
mov
pushl
not
stc
cmc
movw
lea
pushl
push
pusha
ror
test
push
xor
push
call
jmp
pushl
popl
pusha
movw
jmp
pushf
mov
jmp
jmp
not
setp
ror
bt
not
sar
sar
pusha
dec
xor
shld
and
btc
xor
rol
neg
mov
test
add
lea
jge
pusha
push
lea
push
call
movb
pusha
pushf
mov
pushf
movb
push
mov
lea
jmp
push
pushf
mov
movb
movb
lea
jmp
push
pushf
mov
mov
mov
pusha
mov
jmp
push
pusha
mov
pushf
mov
lea
jmp
lea
push
push
lea
je
push
mov
push
movw
call
mov
pushl
call
stc
not
push
push
call
mov
pushf
push
lea
js
pushf
call
movw
pusha
mov
pusha
call
push
pusha
jmp
push
lea
push
pusha
pushf
pushf
jmp
pushl
popl
movb
lea
jmp
dec
call
add
clc
not
inc
and
cmp
shld
shrd
mov
bt
movw
add
jl
cmp
add
pushf
mov
pushf
mov
pushf
lea
jmp
movl
mov
pushl
movb
movb
lea
jmp
jmp
pushf
jmp
jmp
mov
push
pushf
jmp
push
pushf
movl
pushl
lea
jmp
mov
push
push
pushl
mov
pushl
ret
xor
bt
bt
mov
pushf
push
sub
pusha
push
mov
push
lea
jmp
mov
call
pushf
pushf
popl
pushf
lea
jns
popl
pusha
pusha
push
pushl
lea
jmp
mov
pusha
mov
pusha
call
pusha
push
xchg
mov
lahf
jmp
movb
pushl
popl
pushl
pushf
push
mov
lea
jmp
push
mov
pusha
mov
call
mov
pusha
call
mov
call
pushl
movb
movb
mov
push
pushf
push
pushl
popl
pushf
push
push
call
pushf
decl
pushf
lea
jne
pushf
pushf
mov
pushf
movb
mov
lea
jmp
mov
mov
movw
movl
inc
cmc
bt
test
add
push
sub
bt
stc
xor
call
movb
mov
call
call
push
call
pushf
pushf
jmp
dec
mov
bt
push
bt
cmc
add
pusha
push
pushf
lea
jmp
stc
test
xor
movb
ror
pusha
jmp
pushf
call
call
jmp
jmp
pusha
mov
mov
jmp
lea
push
jmp
pusha
push
mov
pushf
push
pushf
mov
pushf
push
pushl
popl
pushl
mov
mov
movl
pushf
movb
lea
jmp
pusha
movl
mov
mov
movb
call
mov
mov
call
mov
pushf
mov
push
mov
lea
jmp
pusha
mov
jmp
pushl
popl
pushf
movb
movl
push
lea
jmp
pushf
dec
call
call
add
jmp
pushf
mov
pusha
push
pushf
pushl
repz
popl
pushf
movb
lea
push
pusha
call
jmp
call
jmp
movzbl
lea
mov
ror
cmp
pusha
add
push
call
pushf
mov
pushf
movb
mov
push
call
pusha
pushf
push
div
jmp
jmp
call
mov
pushf
pushf
popl
call
test
pushf
test
add
pushf
call
mov
cmp
clc
add
jmp
sub
call
movl
pushl
push
pushf
lea
jmp
pushl
pushl
mov
call
pushl
mov
pushl
repz
popl
mov
pushf
call
pushf
pushf
popl
jmp
pusha
mov
movl
jmp
pushf
pushf
pusha
pushf
mov
pushf
pushf
mov
push
lea
jmp
mov
std
cld
push
cld
movb
call
push
adc
sub
rdtsc
jmp
push
pushf
popl
jmp
call
pushf
mov
pushf
mov
pushl
popl
call
pusha
push
lea
pusha
call
jmp
jmp
mov
mov
movb
mov
pusha
lea
jmp
mov
movb
pushf
jmp
pushf
pushl
sub
call
pusha
pusha
pushl
popl
movb
mov
pushf
lea
jmp
add
push
pusha
mov
mov
movb
pushf
lea
jmp
call
jmp
bt
movzbl
clc
cmc
jmp
mov
repz
popl
pushl
lea
push
jmp
pushf
mov
pushf
mov
pusha
mov
push
mov
movw
pushf
repz
popl
push
lea
push
jmp
bt
cmp
jmp
pushf
repz
popl
push
pushf
lea
push
jmp
jmp
call
mov
jmp
pushf
popl
movb
pushl
call
mov
call
lea
jmp
mov
pushf
pushf
popl
push
pushf
pushl
popl
mov
pushf
lea
jmp
mov
pushf
add
pushf
pushf
popl
pusha
pushl
popl
pushf
pushl
push
movw
lea
jmp
shld
bts
aad
movsbw
mov
pusha
test
pushl
jmp
movl
pusha
push
lea
jmp
jmp
jmp
mov
pusha
mov
movb
repz
popl
jmp
cwtl
mov
mov
pusha
jmp
movw
pushf
mov
call
mov
jmp
jmp
pushf
sete
mov
pushf
pushf
push
call
push
mov
mov
pushf
mov
movb
pushf
pushl
call
pushf
mov
pushl
pushf
popl
pushf
pushl
popl
pushf
pushl
pushf
push
lea
jmp
pusha
call
shrd
shld
mov
not
cmc
cmc
shld
mov
bt
xor
bsr
rol
mov
push
pushf
sub
pusha
lea
jno
pushf
div
call
pusha
pushf
popl
pushf
push
pushl
popl
movb
pushf
push
lea
jmp
jmp
call
xor
clc
cwtl
cmc
stc
bt
sub
mov
stc
mov
lea
jne
add
pushf
pushf
lea
jmp
call
mov
pushf
pushl
mov
pushf
jmp
pushf
pusha
mov
pushl
call
push
pusha
pushl
popl
movw
lea
jmp
shl
mov
push
add
pushf
mov
lea
jmp
pushl
popl
jmp
rcl
daa
bt
mov
call
pusha
add
bt
rol
pushf
push
movw
inc
test
xor
bt
pushf
add
cmc
call
clc
cmc
cmp
add
movb
pusha
pushf
mov
lea
jmp
push
call
pushf
sub
stc
cmc
pushf
mul
pushf
mov
lea
jnp
pushf
pushf
pushf
mov
call
pusha
sub
stc
xor
movl
lea
pushf
pushf
movw
call
push
jo
pushf
mov
push
mov
movb
pushl
popl
call
mov
pushf
mov
movb
pushf
jmp
jmp
jmp
jmp
cmp
mov
test
clc
bt
add
pusha
pushf
pusha
pushf
lea
jmp
push
mov
mov
pusha
mov
mov
call
mov
push
mov
pushf
movl
lea
jmp
pusha
mov
mov
push
pushl
lea
jmp
movl
pusha
mov
mov
lea
jmp
push
mov
pushf
pushf
call
clc
clc
add
bt
pushf
cmp
call
push
pushf
pusha
mov
jmp
mov
mov
mov
mov
mov
pushf
pushl
mov
repz
popl
call
pushf
movb
mov
mov
call
pusha
stc
add
push
mov
push
pushl
pushf
pushf
mov
movb
movw
lea
jmp
pushl
repz
popl
jmp
movl
push
lea
jmp
call
mov
push
call
pushf
call
call
mov
movw
lea
jmp
mov
call
call
pusha
push
pushf
popl
jmp
pusha
pushf
pusha
lea
call
mov
jmp
pusha
mov
pushf
pushl
popl
jmp
lea
push
call
repz
popl
pushf
pushl
mov
lea
push
call
pushl
pushf
pushl
popl
pushf
pushf
pushf
lea
jmp
call
mov
push
jmp
movb
call
call
shl
mov
neg
mov
call
pushf
mov
mov
pushf
push
pushf
lea
jmp
mov
lea
inc
pushl
popl
pop
movzbw
not
pop
movl
lea
mov
setle
lea
pusha
mov
pusha
xchg
pushf
inc
xchg
not
shr
bswap
cmp
lea
adc
and
sub
clc
bsr
mov
bsf
adc
mov
push
and
shr
add
lea
bt
mov
btr
stc
btr
bsf
xor
pusha
test
sub
push
rol
shrd
xor
clc
add
xor
jmp
call
mov
call
rol
neg
test
btr
mov
pushf
add
pushf
pusha
lea
jmp
jmp
push
add
mov
pushl
push
jmp
call
call
rcl
call
pusha
mov
pushf
lea
jl
pusha
push
mov
pusha
mov
mov
call
test
movl
add
push
pushf
pushf
lea
jmp
rol
mov
clc
call
add
add
mov
pushl
mov
push
mov
pushf
jmp
jmp
pushf
call
lea
jp
push
pusha
mov
pushf
pushf
mov
pushl
lea
jmp
and
jmp
push
call
call
movb
pushf
mov
pushf
movb
movw
movl
lea
jmp
pusha
pushl
popl
pushf
pushf
mov
mov
lea
jmp
call
cmc
clc
sub
pushf
shl
jmp
mov
pusha
pusha
pop
mov
jmp
pushf
pushl
pushl
popl
call
mov
mov
pushf
pushl
pushl
popl
jmp
lea
push
push
pusha
pushl
jmp
call
call
mov
call
push
pushl
popl
call
mov
pusha
push
pushl
ret
call
pushl
neg
setno
xor
not
seta
sub
stc
movzbl
test
mov
mov
cmp
push
cmc
clc
add
movw
movl
call
push
mov
pushf
pushf
push
movw
pushf
popl
jmp
push
clc
clc
lea
pushf
clc
xor
pushf
jmp
mov
push
call
pushf
pushf
pushl
popl
push
movb
pushf
pusha
lea
jmp
movl
pushf
push
movl
pushf
lea
jmp
push
movl
pusha
lea
jmp
movw
movsbw
push
lea
push
xchg
movzbw
pushf
push
call
stc
pushf
cmp
jmp
movl
push
movb
movw
lea
jmp
mov
pushf
lea
pushf
movb
pushf
call
pushl
mov
mov
mov
pushf
movl
mov
pushf
jmp
mov
pushf
pushf
mov
push
pushl
popl
pushl
movl
pushl
push
pushf
lea
jmp
push
movb
pushf
mov
call
jmp
daa
sbb
bt
test
mov
call
pusha
push
pushf
popl
jmp
pushf
sub
stc
movb
test
sub
call
aad
push
mov
adc
mov
call
mov
push
push
movw
pushl
lea
jne
neg
cmp
mov
pushf
and
jmp
lea
je
test
xor
clc
cmc
pushf
clc
xchg
test
pusha
jmp
call
push
pushl
popl
call
jmp
movb
mov
jmp
push
jmp
pushf
add
movb
mov
mov
lea
jmp
stc
pushf
bt
or
mov
pushf
pushf
jmp
mov
pushf
movb
lea
jmp
mov
jmp
bsf
jmp
mov
mov
jmp
clc
or
movl
lea
je
jmp
movsbl
lahf
sub
btc
mov
cmp
rcl
cmc
mov
test
bt
cmc
clc
add
call
shrd
pusha
cmc
mov
push
jmp
movzww
jmp
mov
mov
repz
popl
pushl
pushf
lea
push
pusha
jmp
rol
shl
mov
bt
shrd
shr
aad
mov
pusha
bt
call
mov
pushf
popl
mov
push
jmp
mov
mov
mov
jmp
call
jmp
add
push
pusha
lea
jmp
pusha
pusha
mov
pushf
mov
call
btc
rcl
mov
bswap
xor
call
pusha
jmp
add
pusha
lea
jmp
pushf
mov
mov
push
lea
jmp
lea
jg
mov
pushf
lea
jmp
push
sub
movb
stc
mov
shl
pushf
jmp
mov
clc
sub
mov
jmp
pusha
mov
mov
mov
push
call
pusha
mov
jmp
mov
pusha
lea
jmp
sub
push
mov
pushl
movw
push
push
lea
jmp
lea
jge
mov
push
mov
lea
jmp
pushf
mov
pushf
pushf
pushf
mov
call
call
pushf
mov
pushf
pusha
lea
jmp
pushl
popl
jmp
rcl
sar
add
stc
mov
clc
test
add
pushf
lea
jmp
mov
push
push
lea
jmp
clc
bt
xor
pushf
movw
pushf
xchg
pushf
movl
push
jmp
call
clc
add
cmc
jmp
pusha
jmp
btr
bts
mov
bt
add
pusha
pushf
movb
mov
lea
jmp
jmp
jmp
pushf
lea
push
pushf
mov
pushf
pushf
mov
pusha
mov
call
pushf
mov
movl
mov
pushf
lea
jmp
pushf
popl
jmp
aam
mov
rol
or
mov
cmp
clc
push
add
push
jmp
call
pushl
pushl
pushf
movl
pushf
pushf
pushf
pushl
lea
jmp
jmp
jmp
call
call
call
sbb
shl
mov
rcr
pushf
push
mov
clc
cmc
bt
sub
pusha
push
bt
shr
pushf
jmp
mov
pushf
mov
pushf
pushf
repz
popl
jmp
push
repz
popl
movw
pushl
lea
push
call
mov
jmp
pusha
pusha
lea
jo
push
pushl
popl
pushf
push
lea
jmp
movw
movw
mov
pushf
movb
push
lea
jmp
push
mov
pusha
pushl
mov
call
repz
popl
call
mov
movl
pusha
mov
push
lea
jmp
mov
pushf
mov
call
inc
movzbw
jmp
pusha
pushf
mov
push
mov
push
mov
lea
jmp
mov
push
mov
movb
mov
jmp
call
