push
mov
sub
call
mov
push
push
push
mov
push
call
push
push
push
mov
push
call
test
jne
call
mov
cmpl
jne
push
push
call
call
cmpl
jne
push
push
push
push
call
mov
call
mov
push
push
push
call
cmpl
jne
call
cmp
jne
mov
mov
mov
push
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
push
push
call
push
push
push
push
call
push
call
push
push
push
mov
push
mov
push
call
mov
cmp
jbe
movl
mov
push
call
mov
push
mov
push
call
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
mov
mov
push
mov
push
call
mov
push
push
call
mov
movl
movl
movl
push
mov
push
call
mov
lea
push
call
mov
pop
ret
push
mov
push
mov
mov
push
mov
push
push
push
push
push
push
push
push
push
push
push
call
mov
cmpl
jne
xor
jmp
mov
push
mov
push
call
mov
push
call
push
push
push
call
mov
mov
pop
ret
push
mov
sub
push
lea
push
push
mov
push
call
mov
mov
cmpl
je
cmpl
je
cmpl
je
jmp
mov
and
mov
mov
shr
and
and
mov
mov
mov
cmpl
je
cmpl
je
jmp
push
push
mov
push
push
mov
push
call
jmp
mov
push
call
jmp
mov
push
mov
push
mov
push
mov
push
call
jmp
jmp
lea
push
mov
push
call
mov
lea
push
mov
push
call
push
lea
push
lea
push
call
add
push
lea
push
mov
push
call
lea
push
mov
push
call
jmp
push
call
jmp
mov
push
mov
push
mov
push
mov
push
call
jmp
xor
mov
pop
ret
push
mov
push
mov
mov
cmpl
je
cmpl
je
jmp
mov
jmp
mov
and
cmp
je
mov
and
cmp
jne
mov
and
push
mov
push
call
mov
jmp
xor
mov
pop
ret
push
mov
sub
movl
push
mov
push
call
add
mov
mov
push
call
push
push
call
mov
mov
pop
ret
push
mov
pop
ret
push
mov
mov
pop
ret
push
mov
push
movl
xor
mov
pop
ret
push
mov
sub
movl
push
push
push
push
call
mov
mov
push
call
mov
movl
mov
mov
pop
ret
push
mov
push
movl
push
push
push
push
call
mov
cmpl
jbe
mov
movl
mov
movl
mov
mov
mov
push
push
mov
mov
push
call
add
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
push
push
lea
push
call
add
movl
cmpl
je
push
push
call
mov
cmpl
je
push
push
push
push
call
mov
mov
push
push
push
mov
push
call
push
push
push
push
mov
push
call
mov
push
call
movl
movl
cmpl
jne
movl
push
push
lea
push
call
add
lea
push
call
mov
add
mov
jmp
push
push
mov
push
push
call
mov
mov
mov
movl
cmpl
jbe
mov
push
push
call
mov
push
call
movl
cmpl
je
movl
push
push
push
call
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
push
push
push
push
mov
push
call
mov
push
mov
push
call
mov
push
call
mov
push
mov
push
call
mov
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
add
push
jmp
inc
nop
sub
subl
das
test
add
xor
inc
cmp
add
je
mov
movl
jmp
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
cmpl
jae
mov
mov
mov
cmp
lods
dec
mov
add
xor
ret
lds
mov
mov
lret
add
test
aam
xor
mov
paddusw
mov
or
add
call
repnz
cmc
clc
mov
movl
mov
or
mov
adc
cmp
jae
mov
movl
jmp
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
cmpl
add
mov
mov
jg
add
orl
mov
xchg
mov
mov
mov
mov
mov
mov
mov
adc
push
mov
add
jmp
mov
or
mov
shll
mov
inc
mov
add
push
mov
add
mov
shll
mov
inc
mov
add
dec
mov
andl
dec
jnp
jnp
jl
packssdw
mov
add
mov
xor
push
lret
cmovne
mov
mov
add
jmp
cmovge
add
jmp
mov
or
andb
mov
andl
mov
add
dec
mov
add
andb
mov
andl
movsb
verr
inc
mov
nop
mov
adc
mov
mov
test
shll
xchg
mov
dec
mov
add
adc
push
mov
add
xchg
mov
add
jmp
mov
movsb
mov
add
or
add
or
add
xchg
or
ret
inc
or
nop
or
dec
or
add
inc
or
add
mov
add
or
inc
or
add
mov
add
xor
add
mov
mov
add
pop
or
mov
add
mov
mov
decl
decl
movsb
or
add
or
add
or
add
stos
add
add
or
add
call
add
stos
push
stos
mov
call
add
stos
mov
stos
bts
add
push
stos
mov
cmp
add
xchg
stos
add
add
fsubrs
or
add
push
stos
add
mov
add
add
mov
subl
stos
movsb
add
stos
mov
add
mov
add
mov
subl
stos
call
stos
or
mov
add
mov
mov
cmp
or
add
mov
add
add
outsb
add
add
inc
ljmp
xor
mov
or
xadd
rorl
rcr
add
mov
or
mov
add
add
adc
jmp
insl
push
rol
movsb
loop
roll
add
jmp
mov
or
roll
add
rorl
add
add
rorl
add
insl
push
rorl
mov
or
roll
add
rorl
add
add
roll
add
pop
insl
dec
rorl
add
add
dec
ljmp
mov
or
leave
insb
mov
add
add
rol
mov
or
roll
add
rorl
xor
mov
add
xadd
insl
inc
rorl
mov
or
roll
add
shr
jmp
inc
dec
rol
movsb
roll
add
add
jmp
mov
or
add
loop
rol
mov
or
add
push
rorl
andl
arpl
or
add
loop
rol
mov
or
add
push
roll
add
pop
mov
mov
mov
cmp
jae
mov
mov
mov
xor
mov
or
add
adc
adc
adc
adc
adc
mov
adc
adc
adc
adc
adc
adc
adc
adc
jmp
jmp
adc
adc
adc
adc
adc
adc
adc
mov
cld
mov
or
add
mov
adc
adc
add
mov
mov
add
mov
mov
mov
mov
mov
mov
push
adc
adc
add
adc
adc
adc
add
push
call
or
sbb
adc
mov
cld
adcl
add
add
adc
adc
add
incl
add
call
call
mov
mov
mov
dec
adcb
xchg
fiadds
xchg
jb
adc
mov
movsb
xchg
xchg
mov
xchg
out
xchg
xchg
or
add
mov
or
xchg
add
push
mov
movsb
xchg
xchg
or
lea
add
nop
leave
add
dec
mov
sbb
xchg
mov
mov
add
add
or
and
xchg
adc
shrl
icebp
add
add
push
xchg
xchg
pop
add
lcall
aam
adc
adc
or
add
or
mov
add
mov
or
mov
add
cmpl
mov
xchg
cli
aaa
adc
mov
pusha
mov
xchg
push
add
mov
or
adcb
xchg
adc
mov
mov
or
inc
mov
je
xchg
das
mov
or
xchg
xchg
adc
or
xchg
xchg
xchg
xchg
or
xchg
xchg
or
mov
xchg
or
xchg
or
jnp
xchg
adc
mov
test
or
adc
xchg
xchg
xchg
jb
adc
mov
mov
add
dec
mov
xchg
adc
xchg
mov
mov
or
mov
add
mov
mov
or
xchg
adc
xchg
adc
mov
jmp
push
lcall
aam
or
xchg
or
add
cmp
add
orb
add
or
add
add
andl
add
mov
movl
inc
mov
mov
xchg
add
push
or
mov
mov
add
mov
mov
pop
or
add
or
mov
cmpl
jbe
mov
mov
mov
adc
mov
mov
mov
rorb
add
popl
add
mov
mov
fimuls
mov
mov
mov
mov
mov
adc
pop
add
add
cmpsl
add
add
add
add
aas
mov
mov
lds
mov
mov
mov
mov
xchg
add
dec
or
mov
mov
lds
mov
mov
mov
xchg
pop
jae
mov
mov
mov
cmp
jae
mov
mov
mov
xor
mov
add
mov
add
xchg
add
fisttpl
rorl
fadds
add
mov
mov
mov
jmp
mov
movl
jmp
mov
mov
xchg
add
pop
or
mov
mov
add
mov
mov
mov
mov
xchg
add
pop
or
mov
cmpl
jbe
mov
mov
mov
add
mov
mov
dec
or
leave
lea
mov
mov
mov
mov
xor
mov
pop
xor
mov
mov
mov
mov
mov
add
pop
add
add
sar
add
imul
add
lcall
cmp
or
inc
pop
int
add
push
insl
adc
or
add
adc
mov
mov
sbb
inc
add
scas
add
add
add
add
orl
or
add
adc
mov
mov
mov
mov
mov
mov
mov
push
subl
test
add
inc
add
add
ja
mov
lret
add
add
add
add
or
add
or
sbbl
add
mov
movl
jmp
mov
mov
xchg
add
pop
or
mov
mov
add
mov
mov
mov
mov
xchg
add
pop
or
mov
cmpl
jbe
mov
mov
mov
add
mov
mov
dec
or
leave
lea
mov
mov
mov
mov
xor
mov
adc
lret
mov
mov
mov
mov
mov
decl
movsb
add
add
add
add
inc
mov
mov
xchg
add
push
or
mov
mov
add
mov
mov
pop
or
add
or
mov
cmpl
jbe
mov
mov
mov
adc
mov
mov
mov
rorb
add
xchg
add
mov
mov
fimuls
mov
mov
mov
mov
mov
jmp
mov
movl
jmp
mov
mov
xchg
add
dec
or
mov
mov
lds
mov
mov
mov
mov
xchg
add
dec
or
mov
cmpl
pop
mov
mov
mov
or
mov
mov
mov
rorb
add
mov
mov
mov
mov
xor
mov
add
rorl
fadds
add
mov
mov
mov
jmp
in
roll
incl
mov
test
add
adc
adc
mov
cmpl
adc
mov
mov
mov
mov
mov
mov
dec
or
nop
mov
add
mov
mov
pop
or
add
ja
mov
lret
add
add
add
add
or
add
add
sbbl
add
mov
movl
inc
mov
mov
xchg
add
push
or
mov
mov
add
mov
mov
pop
or
add
or
mov
cmpl
jbe
mov
mov
mov
adc
mov
mov
mov
rorb
add
xchg
add
mov
mov
fimuls
mov
mov
mov
mov
mov
jmp
mov
movl
jmp
mov
mov
xchg
add
dec
or
mov
mov
lds
mov
mov
mov
mov
xchg
add
dec
or
mov
cmpl
pop
mov
mov
mov
or
mov
mov
mov
rorb
add
mov
mov
mov
mov
xor
mov
add
rorl
fadds
add
mov
mov
mov
jmp
mov
movl
jmp
mov
mov
xchg
add
pop
or
mov
mov
add
mov
mov
mov
mov
xchg
add
pop
or
mov
cmpl
jbe
mov
mov
mov
add
mov
mov
dec
or
leave
lea
mov
mov
mov
mov
xor
mov
adc
lret
mov
mov
mov
mov
mov
in
roll
incl
mov
mov
mov
mov
push
or
add
int3
add
add
dec
cmp
push
or
add
arpl
add
mov
mov
inc
pop
mov
xchg
pop
push
insl
inc
mov
mov
mov
push
mov
mov
mov
push
add
mov
mov
mov
mov
mov
inc
or
fildl
add
mov
mov
mov
mov
mov
push
inc
aas
mov
mov
mov
cmpl
adc
inc
or
orl
add
sbb
popl
add
xchg
add
dec
or
mov
cmpl
sbb
iret
add
add
mov
add
pop
adc
jmp
mov
mov
mov
mov
or
add
adc
mov
movl
sbb
popl
add
xchg
add
push
or
mov
mov
mov
mov
ds
push
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
push
push
sub
popl
add
mov
mov
pop
cld
mov
mov
mov
mov
mov
mov
mov
mov
push
inc
aas
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
ja
mov
lret
add
add
add
add
adc
test
add
mov
add
arpl
add
ss
imul
add
add
xchg
dec
or
add
mov
add
sub
add
add
add
mov
mov
dec
or
add
sub
or
mov
mov
cmpl
jbe
mov
mov
mov
cmp
jle
or
mov
dec
or
add
jns
mov
lret
add
add
add
add
adc
test
add
movsb
add
add
or
add
mov
mov
mov
mov
mov
aad
mov
mov
adc
add
add
movsb
add
add
pop
add
jmp
mov
xchg
add
xchg
push
or
test
add
jmp
mov
mov
xchg
add
pop
or
mov
mov
mov
ds
pop
jae
mov
mov
mov
mov
imul
mov
mov
add
add
movsb
add
add
arpl
add
mov
mov
imul
mov
mov
int3
add
add
mov
add
movsb
add
add
or
jbe
add
in
xor
incl
mov
xchg
add
dec
or
add
int3
add
add
test
push
or
mov
cmpl
adc
inc
or
inc
add
add
add
or
add
xchg
add
or
test
add
add
or
add
iret
add
add
dec
jnp
pop
add
add
sbb
add
push
mov
call
mov
mov
mov
cmpl
js
mov
mov
push
mov
call
mov
mov
mov
cmpl
ja
mov
mov
cmpl
and
or
add
iret
add
add
push
adc
sbb
add
out
sbb
xchg
or
add
iret
add
add
or
sbb
add
xor
movl
and
add
pop
add
add
dec
or
add
mov
add
mov
movl
mov
mov
xchg
add
xchg
dec
or
add
int3
add
add
add
push
or
mov
cmpl
adc
inc
or
add
addl
je
mov
mov
xchg
add
mov
mov
call
mov
mov
mov
cmpl
js
mov
cmpl
ja
insl
add
sbb
add
push
mov
mov
add
push
push
mov
add
out
jns
inc
or
xchg
or
add
data16
mov
xor
data16
push
mov
mov
push
mov
add
mov
mov
mov
xchg
add
mov
xchg
add
add
pop
add
add
push
or
shrb
xchg
mov
insl
add
les
add
mov
mov
xchg
add
mov
mov
mov
mov
push
inc
adc
pop
add
add
aam
add
mov
mov
mov
mov
mov
pop
mov
mov
mov
mov
mov
adcb
add
xchg
pop
mov
mov
mov
mov
add
mov
mov
incb
decl
or
add
or
add
paddw
decl
fadds
add
add
imul
add
push
mov
mov
push
mov
add
imul
add
push
mov
push
mov
add
mov
pop
popa
pop
pusha
add
jmp
mov
shlb
mov
pop
ret
push
mov
push
push
push
call
push
call
xor
pop
ret
push
mov
sub
push
push
movl
movl
movl
push
call
mov
movl
movl
mov
mov
lea
rep
push
call
mov
push
push
lea
push
call
add
movw
lea
push
call
add
mov
movw
movw
push
push
lea
push
call
add
push
mov
push
call
push
push
push
mov
push
call
push
mov
push
call
movl
lea
push
push
call
add
mov
cmpl
jne
mov
movsbl
cmp
je
mov
movsbl
cmp
je
push
lea
push
lea
push
call
add
mov
mov
mov
mov
push
call
add
mov
mov
mov
mov
movl
mov
cmpl
je
mov
movl
push
push
mov
push
call
mov
mov
mov
mov
jmp
push
push
push
call
push
push
mov
push
call
xor
pop
pop
mov
pop
ret
push
mov
sub
movl
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
cmpl
je
mov
add
mov
mov
movl
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
push
call
add
mov
mov
mov
cmpl
je
push
lea
push
push
mov
push
mov
push
call
cmpl
jne
push
lea
push
push
mov
add
push
mov
push
call
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
call
mov
mov
movl
mov
push
call
xor
mov
pop
ret
push
mov
sub
movl
mov
add
mov
cmpl
jae
mov
push
mov
push
call
add
mov
mov
sub
mov
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
sub
mov
jmp
jmp
push
call
call
jmp
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
cmpl
je
movl
movl
jmp
mov
add
mov
mov
add
mov
mov
cmp
jae
mov
add
mov
jmp
push
push
call
add
mov
mov
mov
pop
ret
push
mov
mov
pop
ret
push
mov
sub
lea
push
push
mov
push
call
mov
and
mov
and
imul
mov
mov
and
cmp
jne
movw
jmp
mov
and
cmp
jg
movw
jmp
mov
and
cmp
jg
movw
jmp
mov
and
cmp
jg
movw
jmp
mov
and
cmp
jg
movw
jmp
movw
mov
and
cmp
je
mov
and
mov
shl
lea
push
push
call
mov
jmp
push
push
call
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
cmp
jge
mov
and
mov
shl
mov
mov
mov
and
cmp
je
mov
and
mov
shl
lea
push
push
call
mov
jmp
push
push
call
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
cmp
jge
mov
and
mov
shl
mov
mov
mov
movl
mov
and
mov
mov
imul
add
and
cltd
and
add
sar
mov
imul
mov
mov
mov
movl
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
push
push
call
mov
push
mov
push
mov
push
mov
xor
mov
push
push
mov
push
mov
push
call
push
push
push
push
push
push
mov
push
call
mov
movw
mov
mov
mov
mov
lea
mov
add
mov
movw
movw
mov
mov
mov
mov
lea
mov
push
lea
push
push
lea
push
mov
push
call
push
lea
push
mov
mov
lea
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
call
test
jne
mov
push
call
test
jne
mov
push
call
mov
pop
ret
push
mov
sub
movl
movl
call
mov
movl
push
push
call
add
mov
cmpl
jne
mov
push
call
mov
push
mov
push
call
push
push
mov
push
call
push
mov
push
call
mov
cmpl
je
mov
push
call
mov
cmpl
je
mov
push
call
mov
jmp
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
push
push
push
call
mov
cmpl
jne
xor
jmp
push
lea
push
lea
push
call
push
push
push
push
push
push
lea
push
call
mov
cmpl
jne
xor
jmp
push
lea
push
push
lea
push
mov
push
call
test
je
push
push
push
mov
push
call
mov
push
mov
push
push
mov
push
mov
push
call
push
lea
push
mov
push
lea
push
mov
push
call
push
mov
push
push
mov
push
mov
push
call
cmpl
je
mov
push
call
mov
push
call
xor
mov
pop
ret
push
mov
sub
push
push
mov
mov
movl
movl
lea
mov
push
call
mov
mov
lea
rep
movsw
mov
xor
lea
rep
stos
mov
movl
movw
movw
movw
movw
movw
lea
push
call
add
mov
movl
movl
mov
movl
cmpl
je
push
push
lea
push
call
add
lea
push
call
lea
push
lea
push
call
push
push
push
push
call
mov
mov
mov
push
call
add
jmp
mov
push
push
mov
push
push
call
mov
mov
mov
cmpl
je
mov
movl
mov
movl
cmpl
je
mov
push
call
mov
mov
add
mov
mov
mov
cmpl
jne
mov
mov
add
mov
mov
mov
mov
mov
jmp
mov
movl
cmpl
je
mov
add
mov
push
call
mov
mov
mov
mov
cmpl
jbe
mov
cmpl
jne
movl
movl
mov
cmp
jae
movl
jmp
mov
add
mov
cmpl
jae
mov
cmp
jae
mov
add
xor
mov
mov
add
xor
mov
xor
mov
mov
mov
mov
mov
add
mov
jmp
movl
jmp
mov
add
mov
cmpl
jae
mov
cmp
jae
mov
add
xor
mov
mov
add
xor
mov
xor
mov
mov
mov
mov
mov
add
mov
jmp
jmp
jmp
mov
push
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
push
mov
sub
push
push
lea
push
call
add
movl
cmpl
jne
movl
jmp
movl
jmp
lea
push
mov
push
call
test
je
jmp
call
mov
mov
push
call
cmpl
je
movl
jmp
movl
mov
jmp
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
lea
push
call
add
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
jmp
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
mov
jmp
jmp
jmp
jmp
mov
pop
ret
push
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
push
push
call
mov
push
mov
push
mov
push
mov
xor
mov
push
push
mov
push
mov
push
call
push
push
push
push
push
push
mov
push
call
mov
cmpl
je
movl
movl
inc
push
int3
ds
leave
jmp
leave
jmp
leave
jmp
leave
jmp
leave
jmp
leave
jmp
leave
jmp
leave
jmp
leave
jmp
leave
jmp
leave
jmp
leave
jmp
leave
jmp
leave
jmp
leave
jmp
leave
jmp
leave
jmp
leave
jmp
leave
jmp
leave
jmp
leave
jmp
leave
jmp
leave
jmp
leave
jmp
leave
jmp
leave
jmp
mov
mov
xchg
les
and
int3
push
test
cmc
scas
cmp
fiaddl
fisubs
jnp
fldenv
add
loope
scas
fldz
stc
iret
cmp
sub
scas
xor
and
sub
or
mov
mov
cmp
mov
push
adc
jmp
add
hlt
fldl
jns
outsl
add
and
pop
or
mov
and
cmp
xchg
mov
scas
cmp
lds
movsl
cmp
inc
pop
andl
gs
shrl
add
out
rolb
push
or
inc
mov
inc
out
jmp
sahf
rorb
ss
in
ja
mov
emms
fcomp
sbb
pop
mov
and
fdivl
lret
notb
jae
push
sbb
mov
push
loope
sub
lea
jg
push
fisttps
sub
movswl
sub
lcall
repnz
imul
push
pop
mov
jo
es
or
xchg
inc
sbb
mov
out
test
orb
push
clc
mov
loope
adc
dec
mov
enter
or
popf
dec
lret
xchg
movsl
jo
sbb
mov
rcll
push
fadds
dec
and
adc
or
mov
and
aas
adc
xchg
in
out
test
aas
lea
popl
and
jbe
int
mov
cmp
mov
cmc
add
decb
xor
push
pop
cmp
inc
push
pusha
test
lret
sbb
push
adc
and
ds
jmp
ficomps
out
movsb
adc
sub
addl
or
aaa
dec
movsl
loopne
cmp
dec
cld
mov
into
jle
loopne
cmc
sub
and
push
in
iret
bound
pop
mov
outsl
sbb
jns
mov
dec
test
push
cmp
push
sbb
bound
xchg
dec
pop
test
rorl
jns
push
mov
pop
xor
push
jno
ss
inc
xor
mov
sub
mov
xchg
hlt
mov
pop
inc
adc
mov
or
mov
sub
in
push
adc
loopne
rcll
push
sbb
cltd
xchg
sbb
adc
fisubl
fnstenv
mov
ret
inc
and
popl
xor
add
inc
pop
push
nop
inc
scas
arpl
and
insl
sbb
xchg
sbb
lock
lret
icebp
out
dec
push
push
enter
clc
popf
mov
sub
iret
bound
mov
shlb
subl
lahf
out
or
sub
fmuls
aas
fwait
add
in
fnclex
cwtl
cmpl
or
ds
push
xor
push
les
cmp
xchg
ja
jo
jno
lock
pop
xor
adc
pop
aas
aas
push
enter
pop
ret
hlt
xor
xor
enter
inc
int3
ss
and
movnti
xor
jp
or
push
ds
xlat
les
imul
xchg
je
clc
pop
ds
mov
push
adc
lahf
add
out
roll
push
nop
jge
or
pusha
ret
pop
and
ds
push
ja
cwtl
inc
add
jmp
sub
adc
fisubrs
mov
jl
out
fimuls
xchg
shll
in
into
pop
into
push
jle
jmp
iret
add
pop
xor
xor
lock
mov
mov
jno
stc
mov
dec
or
aas
ror
call
stos
dec
cli
mov
je
call
sarb
shrl
cmpsl
xchg
xor
inc
mov
ds
mov
pop
scas
mov
cmp
into
push
push
mov
mov
dec
mov
mov
push
xchg
push
pop
lods
push
sub
daa
or
call
mov
mov
xor
out
dec
dec
mov
scas
pop
pop
jbe
mov
in
jmp
pop
repz
or
adc
cwtl
mov
lock
into
aas
jge
dec
mov
rcll
pusha
test
jg
xchg
jne
movsb
pop
cmp
pop
push
lods
or
push
loopne
cmp
cli
jns
sub
add
dec
in
loopne
test
popa
les
lcall
push
scas
lods
mov
subl
addb
add
nop
add
std
in
clc
daa
in
and
rclb
mov
out
jmp
pop
xchg
xchg
mov
xor
shlb
mov
adc
jp
in
fs
push
xchg
out
rcr
mov
push
jnp
dec
jno
jbe
ret
sbb
jnp
jnp
push
sarb
neg
push
mov
cmpsl
cmp
hlt
add
sbb
push
test
mov
repnz
lcall
jo
xchg
dec
push
push
out
adc
lahf
sub
test
mov
in
mov
push
ds
cmc
mov
inc
mov
xor
aas
or
imul
xor
je
mov
insl
and
imul
stos
std
and
test
js
nop
or
xchg
iret
fsubrl
dec
mov
and
out
xchg
jecxz
repnz
mov
or
mov
inc
cmc
sub
push
mov
jne
ljmp
mov
jbe
mov
imul
and
xchg
inc
inc
cmp
mov
das
int
jae
sub
je
fcomps
cmc
loopne
outsl
into
in
dec
loope
and
xchg
jecxz
mov
mov
adc
adc
lret
cmp
sub
sub
sub
adc
dec
dec
shlb
fdivs
xchg
mov
sub
inc
fsubrp
jo
outsl
xchg
pusha
sub
or
xor
fisttpl
xor
insl
push
cli
mov
cld
test
inc
popf
push
mov
pop
pop
cmp
mov
clc
lgs
addb
inc
shl
cld
lcall
les
stos
ss
int3
and
sub
lods
mov
and
cli
mov
jl
outsl
ret
cmp
pop
and
xchg
and
test
popf
push
jmp
int3
cmp
inc
xchg
mov
mov
mov
shl
stos
or
adc
popf
stos
inc
dec
xor
aad
mov
jge
jmp
push
rcrb
sub
adc
ljmp
push
addr16
rolb
jle
jnp
push
push
push
mov
mov
ficoms
insl
test
jbe
sub
lcall
mov
and
pop
pop
ds
sbb
pushf
pop
jecxz
repz
test
out
gs
push
and
mov
loopne
mov
jnp
arpl
xor
and
insb
dec
std
pop
mov
js
aaa
out
aaa
lret
add
lods
mov
std
jl
scas
scas
or
jns
cs
or
insl
inc
ljmp
out
dec
sub
and
adc
shl
insb
sahf
jmp
mov
sti
leave
pop
lds
mov
jno
xor
mov
lret
cmpsb
adc
cld
fisttpll
data16
xor
mov
add
mov
sahf
push
in
icebp
cmp
gs
mov
mov
pop
enter
lds
cwtl
xchg
xchg
mov
dec
roll
sub
push
mov
notl
cs
mov
push
jmp
pop
add
push
das
shrb
les
mov
rcll
mov
and
test
inc
xchg
pushf
jmp
neg
dec
push
or
lcall
dec
pop
stos
prefetch
xchg
pop
call
pop
enter
add
rol
decl
jae
jmp
or
jno
lock
pusha
adc
leave
adc
xchg
aas
add
pop
cmp
or
xchg
repnz
iret
add
cmp
sahf
sti
leave
lret
jl
into
pushf
out
std
cmpsb
add
test
mov
mov
lret
es
rcll
cmp
je
xchg
inc
cli
push
jne
scas
ljmp
das
addr16
out
mov
add
adc
or
divb
xchg
inc
lods
cmpsb
mov
mov
mov
repnz
loopne
addr16
add
rol
idivb
imul
sbb
mov
adc
inc
inc
popa
int3
adc
push
scas
or
js
mov
inc
cmp
push
scas
push
nop
cli
pushf
sbb
repnz
inc
loope
gs
arpl
push
sbb
scas
mov
das
test
adc
leave
cmpsl
mov
mov
push
adc
fists
ret
push
lea
ljmp
xchg
pop
inc
fcoms
jg
jp
rclb
sahf
xor
ror
movl
test
push
cmpb
jmp
xchg
adcl
int
lret
fcmovne
xchg
mov
inc
ss
inc
into
jno
push
xchg
rcrb
incl
sub
lock
cwtl
xchg
das
adc
adcb
sub
push
jl
sub
cmp
stos
xchg
push
divl
lahf
clc
and
cmp
xchg
int
js
stos
cmp
xchg
pop
jns,pt
jbe
mov
decb
pop
push
add
rcrl
loope
mov
test
int
adc
out
cmpsb
cld
gs
mov
inc
mov
xchg
insb
add
xchg
fldenv
fmuls
into
cmp
stc
push
scas
or
imul
xchg
jle
add
movsb
adc
lods
mov
or
dec
outsb
or
mov
jno
in
mov
test
test
jb
sub
repnz
push
dec
sub
bound
add
out
xchg
mov
bound
jmp
enterw
ljmp
fstpt
cmp
mov
pusha
mov
or
call
fs
xchg
aad
pushf
adc
mov
mov
imul
or
dec
add
pop
inc
ss
in
mov
mov
stos
test
adcb
es
outsl
xor
sub
push
sbb
or
mov
add
and
xchg
cmp
fdivl
mov
push
push
daa
mov
sbb
jo
lret
mov
pop
cmp
or
xchg
pop
popl
movsb
jo
dec
divb
mov
out
outsb
pop
vpslld
add
sbbl
test
cld
pusha
ret
push
inc
lods
ret
popf
cmp
sub
xorb
daa
sub
hlt
cwtl
in
cltd
loope
adc
lods
mov
mov
dec
in
insl
iret
pop
cmp
jns
mov
mov
data16
mov
push
jnp
jb
mov
add
stos
rolb
mov
push
je
fiadds
sbb
xchg
jo
push
mov
push
xchg
dec
popf
pop
inc
sbb
subl
mov
add
fstpl
lret
add
ret
add
popf
add
out
mov
scas
pushf
inc
rcrl
push
xchg
ljmp
inc
cmpsb
push
negb
add
fs
ljmp
sbbl
mov
loope
mov
xchg
sub
xchg
shrb
inc
add
sahf
add
lahf
or
add
mov
out
xchg
lods
and
dec
ljmp
mov
test
pop
pop
add
out
pop
xor
subb
fisttps
mov
lret
cmp
jecxz
pop
int3
cmp
adc
shll
sahf
loope
mov
mov
in
fs
push
or
test
rcl
out
dec
add
fwait
cltd
jge
test
mov
cmpsl
aam
push
sbb
lock
sub
lahf
mov
xchg
push
outsb
pop
sbb
cmp
outsb
jns
dec
xchg
jae
inc
xorl
lahf
nop
or
xchg
mov
mov
inc
sahf
aam
movsl
adc
push
or
lahf
jbe
cmpsb
adc
cmp
mov
ror
xchg
scas
pop
sahf
rolb
sub
push
jo
fstl
into
enter
add
int
push
dec
sub
mov
je
push
sub
ret
cmp
sbb
or
and
xchg
test
xchg
lea
mov
lcall
add
jae
test
out
outsl
add
insb
xor
pop
loopne
push
push
mov
enter
notl
mov
fsubrl
and
insl
aas
test
xor
inc
fs
xchg
and
sub
out
and
in
into
and
inc
sub
dec
and
stos
mov
jbe
mov
lret
or
push
mov
call
sarb
clc
sub
xchg
stc
mov
call
cltd
sbb
inc
nop
xchg
sbb
mov
loopne
shr
std
cmp
lea
xor
and
int3
dec
test
xchg
xor
lods
and
add
jmp
js
mov
dec
adc
inc
movsl
lcall
sti
cmp
sbb
mov
bound
cli
shr
cmp
xor
push
pop
into
or
nop
dec
sub
pop
inc
lahf
idivb
orb
fmulp
stos
adc
popa
cli
lret
movsb
shlb
cmp
xlat
imul
mov
fisubrl
les
std
pop
and
sbbl
add
nop
bound
loope
mov
mov
gs
dec
or
cmp
popa
dec
faddl
mov
das
js
xchg
cld
pop
cmp
out
mov
call
inc
mov
jne
cli
fwait
mov
mov
add
pop
push
sti
push
pop
mov
adc
cmpsb
aaa
push
jmp
fcomip
test
lret
pop
in
adc
pop
outsb
fistpll
dec
sti
pop
mov
sti
loopne
int3
or
bound
xlat
test
mov
push
mov
fadd
daa
mov
inc
movsl
cmp
cld
fildl
cmp
aaa
cmpsb
pop
arpl
sub
xor
orl
ret
lret
out
push
inc
mov
aaa
xor
and
mov
outsl
sbb
clc
icebp
sar
pop
ljmp
js
mov
inc
shr
mov
test
jo
clc
xor
sahf
jg
fdivs
sub
movsl
js
mov
push
xor
pop
sub
je
adc
cs
cwtl
jle
mov
jge
jecxz
movsb
or
add
add
adc
mov
cmp
imul
push
cwtl
jbe
fstpl
imul
adc
popa
mov
jnp
outsl
stos
mov
cli
xchg
inc
shll
stc
es
lahf
or
mov
ss
call
popf
add
push
stc
or
ja
xlat
lcall
or
jbe
adc
dec
imul
mov
cltd
fisubs
lods
iret
int3
mov
push
gs
cltd
jns
loop
sub
leave
stos
jne
xchg
add
lret
push
or
add
mov
clc
jge
call
inc
lcall
lods
lret
sbb
test
divb
pop
mov
movsl
pop
mov
or
jo
dec
mov
sub
enter
ss
dec
rorb
popa
xor
into
stc
pusha
jge
scas
mov
out
loopne
inc
cltd
cmovnp
add
shll
sti
out
movsl
mov
fisttpll
int
jno
jae
hlt
push
loope
mov
xlat
lret
push
pusha
mov
movb
ret
scas
stc
icebp
cmp
cmpl
add
into
jb
jno
pop
shll
scas
mov
push
stos
dec
xchg
xlat
test
es
sub
xchg
sub
sahf
xor
push
dec
ficomps
xor
addr16
ja
mov
out
xchg
testl
xchg
daa
xlat
sbb
xchg
xor
mov
mov
push
bound
cmpb
jnp
pusha
mov
adc
mov
push
sub
pop
stos
ja
mov
mov
mov
out
dec
jp
xor
and
sahf
or
rcrl
and
xchg
mov
test
test
outsb
fistpll
cmc
or
cmp
add
int
adc
lods
pop
in
popa
mov
incb
push
sbb
stos
mov
popl
xor
adc
jbe
mov
inc
mov
sub
sub
js
or
adc
mov
nop
push
lods
or
lds
jecxz
sbb
mov
nop
xchg
pushf
std
lea
dec
xor
dec
or
dec
hlt
or
sti
cltd
jae
mov
pop
xchg
or
push
cmc
cmp
xlat
invd
add
stos
cs
popa
and
add
fcomip
repz
mov
adc
mov
scas
icebp
xor
aam
inc
lret
out
fcoml
and
aam
adc
lods
push
dec
fiadds
lods
pop
stc
and
outsb
cmp
mov
push
mov
lret
mov
add
int3
adc
cmp
or
dec
fld
mov
fucomi
int
mov
faddl
pop
jns
insl
mov
xchg
add
mov
sub
call
adc
icebp
push
sti
push
cmp
lahf
das
jo
jns
loopne
push
insl
dec
dec
jnp
aas
sub
rcr
mov
dec
mov
fcmovnb
roll
xchg
or
inc
je
jnp
sbb
lret
push
jnp
pop
mov
xor
daa
or
dec
add
fldenv
insb
cld
adc
xorl
pop
pop
aam
cmp
and
mov
ret
cmp
jg
ret
push
mov
ljmp
dec
leave
pop
ret
testl
sub
inc
jnp
xorb
leave
xor
jg
dec
and
add
cmp
dec
xchg
je
push
std
or
inc
jbe
scas
dec
mov
mov
gs
xchg
lds
and
imul
ss
xor
jecxz
fldt
pop
scas
bound
dec
push
loopne
cmpsb
jbe
test
into
pop
mov
pop
inc
and
cmp
xor
jecxz
xor
aas
clc
mov
scas
sbb
cs
lcall
xor
ret
arpl
rorl
mov
stos
push
divl
mov
mov
adc
daa
out
fs
or
xor
lahf
mov
bound
push
fimull
jae
ja
mov
mov
mov
test
mov
dec
inc
and
cltd
pushf
mov
les
or
xorb
js
push
popa
xor
clc
xchg
sti
dec
push
enter
lahf
sbb
scas
inc
mulb
divl
jg
or
cs
xor
out
mov
pop
stc
jmp
adc
pop
ret
inc
cs
in
pop
ja
ljmp
call
xor
sbbl
xchg
mov
mov
or
mov
in
stc
gs
inc
inc
ret
pusha
js
mov
add
push
clc
cmp
adc
pushf
cmp
lock
mov
xor
test
adc
ret
std
loope
stos
pop
dec
jo
out
lret
sbb
push
int
rcrb
lock
subb
mov
push
mov
mov
sarb
ja
or
dec
cmp
jecxz
mov
mov
sbb
sti
xor
imul
pop
mov
push
add
movsl
xchg
movsl
in
jne
outsb
fstl
ret
jb
add
stos
out
xchg
addr16
add
xchg
mov
ret
add
loop
fcoml
dec
mov
aas
icebp
xor
mov
ret
rcl
fistpl
imull
sub
loope
in
xchg
mov
shl
outsb
mov
dec
cli
xor
sbb
fs
adc
bound
xchg
ret
out
cmp
push
sbb
xor
das
mov
xchg
jg
inc
sti
push
test
or
shll
cmp
jmp
out
and
jns
adc
mov
xchg
scas
mov
pushf
clc
insb
imul
int
inc
clc
push
nop
mov
mov
andl
xor
out
pop
dec
push
push
cli
sub
cli
ret
stos
std
sbb
aaa
outsb
xor
inc
imul
mov
lret
and
sub
mov
inc
dec
xorb
dec
or
push
aas
dec
outsb
push
addb
sub
sbb
shlb
mov
sarl
inc
pop
mov
idivb
lock
lea
lea
xlat
or
cmp
enter
pop
iret
or
ss
push
push
es
push
pop
leave
dec
rorl
push
ficoml
jecxz
rolb
jg
std
outsl
inc
dec
out
lahf
fadds
pop
or
mov
mov
and
sub
xor
inc
cwtl
mov
mov
cmp
mov
cmp
addr16
jl
fildl
pushw
ret
mov
push
inc
xor
mov
mov
shrl
inc
mov
ds
out
outsl
outsl
les
sub
add
je
or
into
xchg
or
jb
imulb
mov
mov
add
imull
jmp
push
test
bound
mov
repz
mov
sbb
dec
cmp
dec
popf
test
or
pop
mov
out
and
in
or
clc
imulb
les
scas
adc
in
add
pop
mov
adc
jo,pt
xchg
sub
int
rclb
imul
cmp
mov
mov
mov
lret
clc
ret
mov
icebp
dec
or
dec
mov
pusha
mov
jmp
rorb
pop
sbb
pushf
repz
push
daa
jno
push
mov
inc
mov
inc
inc
mov
xor
scas
dec
inc
popf
mov
iret
movsl
push
mov
jmp
jno
push
arpl
fsqrt
cmp
xchg
ror
mov
and
sub
iret
cmpsb
xchg
loope
or
pop
jecxz
cmpsb
mov
mov
xlat
mov
fildl
lods
push
test
int3
test
mov
fs
test
addr16
iret
push
cltd
negl
std
cmp
push
mov
hlt
daa
pop
rep
or
jae
sub
rorl
aad
mov
push
hlt
adc
arpl
pop
movsb
adc
xor
dec
inc
in
add
cmp
fisttpl
leave
adc
cld
jg
sub
icebp
xor
pop
orl
inc
fmul
mov
ss
les
fisttps
mov
mov
rolb
jp
out
sbb
jo
pop
mov
inc
cmp
adcb
or
in
int3
dec
adc
pusha
std
insl
push
push
mov
push
inc
lahf
pop
adc
outsl
stc
sbb
sub
fistps
sbb
jmp
push
rclb
lods
dec
sbb
sbb
push
std
enter
stos
sti
jle
fbstp
je
sbb
add
cmp
push
shl
fidivl
shlb
jno
cmp
sarl
mov
mov
lea
lcall
and
shll
push
inc
repz
popf
cmp
je
cmp
ljmp
cs
aaa
sbbl
and
and
dec
or
sub
pop
daa
mov
out
pop
xor
cmp
xor
dec
aad
xchg
jmp
outsb
mov
xchg
xchg
movsb
sbb
dec
out
lock
ljmp
in
pop
popf
push
cmpsl
pop
int3
or
push
pop
dec
mov
jo
sti
dec
jnp
imul
jns,pt
leave
loope
push
and
jno
sti
fdivp
xchg
mov
xor
sub
cmp
aas
ficompl
sub
cmc
add
add
and
or
cmp
add
pushf
xchg
xchg
test
inc
out
jb
ret
aaa
push
sub
adc
gs
push
xorb
scas
repz
xor
mov
jno
mov
inc
jmp
dec
ss
mov
fcmove
mov
inc
pop
mov
filds
inc
pop
lock
iret
ja,pn
push
fs
rcl
mov
testl
movsb
inc
out
add
or
and
sbb
push
std
nop
cmc
sub
aad
int
sbb
add
incb
and
std
shrb
aas
push
dec
mov
shl
push
insl
mov
pop
xor
jae
xor
mov
outsb
cltd
and
stos
mov
stos
mov
inc
or
mov
mov
dec
inc
das
mov
xor
pop
mov
lcall
push
fnstenv
bound
imul
jns
add
mov
clc
sub
test
int
cmp
jmp
add
add
icebp
repz
xchg
popf
rcll
mov
gs
enter
cmpsb
or
or
push
mov
cmpsl
mov
orb
bound
je
and
sti
fisttpl
cltd
lock
rcl
aas
xchg
pop
mov
lea
ret
pusha
xor
mov
cld
inc
fiaddl
push
inc
cmpsb
dec
aaa
or
shl
jmp
loope
cmpsb
mov
aad
pushf
fwait
int
pop
jne
push
cld
iret
in
add
pop
insl
fildl
push
ljmp
xchg
into
dec
lea
sub
jecxz
lcall
test
fisttpll
mov
cmp
addl
das
cli
jecxz
out
push
jp
or
or
enter
add
les
xchg
ss
add
sub
call
inc
xor
adc
push
lock
je
pushf
jl
enter
jo
and
lock
sahf
lea
aad
fistps
cltd
push
nop
and
xchg
faddl
aam
loope
pop
rcll
mov
in
mov
push
fsubr
xor
test
dec
add
lahf
dec
and
int3
xchg
cmp
pop
aaa
dec
jb
popf
out
inc
inc
je
or
in
sub
scas
xlat
imul
pushf
add
lret
addr16
orb
rorl
lea
cmp
sbb
adc
aad
mov
mov
outsb
mov
lret
sub
sub
and
repz
lret
inc
ret
add
inc
push
bound
mov
and
mov
insl
mov
sub
int3
ds
jmp
sbb
pop
xchg
mov
popf
roll
into
inc
adc
jge
xchg
or
stos
loope
loop
pop
leave
and
mov
jo
jns
out
dec
int3
xchg
jbe
in
xor
frstor
pmulhuw
jns
push
pop
out
add
sahf
dec
push
jmp
adc
dec
insl
fs
xchg
jns
xor
cwtl
je
enter
jns
in
ja
fisttps
mov
movsl
lret
pop
std
rorl
cmp
ret
mov
xlat
push
sbb
xor
adc
sub
call
cmpsl
inc
jl
test
cmpsl
fwait
push
pop
lret
ss
popa
ret
push
sti
sbb
jge
jns
rorl
rcrl
cli
push
rol
sbb
mov
cld
out
hlt
adc
mov
test
test
pop
jle
out
sub
jmp
push
cmpsb
sub
push
data16
ss
xchg
mov
pop
js
or
xchg
or
testb
or
lea
add
add
push
or
adc
fldenv
xchg
inc
les
xor
in
popa
or
push
sti
negl
xchg
psubb
push
stos
std
jns
add
push
mov
mov
arpl
into
inc
stos
out
not
inc
mov
aad
fldenv
icebp
fnsave
or
pop
divl
jge
lock
pop
or
lds
and
inc
cmpsb
lret
and
lods
pop
stos
aaa
mov
pusha
dec
movsb
js
sub
mov
add
push
push
mov
mov
sbb
mov
mov
inc
stos
out
divl
push
pop
out
fisubrs
sub
cmp
nop
cmp
pop
outsl
das
mov
shlb
mov
leave
imul
sub
popa
fldcw
in
or
or
std
ret
mov
mov
aaa
test
scas
sbb
fisttpl
lret
xor
sub
xchg
ret
jns
cmp
cmp
add
cmp
mov
out
pop
adcl
in
push
add
inc
lock
jns
sahf
call
jnp
mov
shlb
test
cmp
imul
adc
insl
sbb
sub
movsb
jns
xchg
les
or
mov
lds
or
mov
popf
xor
jb
ja
lock
sub
cmpsl
pusha
fnsave
sub
test
dec
daa
xor
daa
sbb
inc
cmp
rcrb
repz
push
lahf
sti
push
jb
std
in
and
les
mov
sbb
jns
into
movsl
inc
addr16
lahf
leave
xor
rcrl
mov
dec
or
imul
bound
jne
je
xor
jge
imul
jle
dec
out
das
xchg
push
pop
sahf
push
mov
adc
push
imul
add
fwait
aas
pop
into
push
push
pop
std
dec
cmp
cmp
sub
aaa
cmp
cmp
test
jnp
xchg
push
and
and
add
mov
insl
aaa
sbb
iret
xchg
mov
dec
cmp
cmpb
dec
incl
xchg
xor
dec
cmp
dec
bound
ficompl
mov
ss
xorb
addr16
lcall
sub
sub
pop
sarl
xchg
cmpsl
and
and
sbbl
dec
gs
push
push
fldz
aad
cmp
popf
data16
leave
adc
pop
dec
jmp
xchg
mov
insb
nop
dec
in
dec
cld
cmp
mov
xchg
xor
add
add
sub
into
jnp
or
jge
sbb
movsb
pxor
fidivrs
mov
aaa
mov
lahf
adc
xor
mull
test
ret
in
or
sbb
ds
add
aam
dec
cwtl
jle
aaa
pop
inc
add
cmp
iret
mov
inc
lret
std
adc
nop
cli
ljmp
ret
nop
sub
ret
repz
in
mov
inc
lods
fistl
sbb
and
imul
icebp
roll
loopne
std
xor
adc
add
popa
movsb
testb
jg
mov
jg
pop
pop
fldl
push
adc
xchg
sbb
pop
leave
adc
iret
sbb
dec
fbld
fldcw
xchg
mov
mov
xor
or
sti
sarb
and
addr16
lods
dec
xor
pop
cwtl
adc
movntq
push
cmpsb
pushf
inc
mov
xlat
fcomi
mov
stos
lea
out
data16
push
subl
les
pop
movsb
fadds
shll
cmp
sub
and
mov
and
cli
aas
cmpsl
mov
adc
mov
lcall
or
call
push
push
lods
mov
fsubrl
xchg
sahf
and
inc
cwtl
adc
add
enter
push
cli
xlat
inc
jmp
shlb
pop
dec
sbb
andb
pusha
mov
add
aam
ljmp
mov
pop
jne
jb
mov
mov
and
ljmp
and
aam
push
sbb
adc
cmp
pop
int3
je
pop
jne
inc
das
push
push
ss
cld
push
mov
dec
mov
dec
inc
out
cmp
inc
sub
mov
jmp
rcrb
dec
pop
sub
clc
test
rcl
mov
cmpsb
push
aad
dec
add
xchg
xchg
mov
add
jg
inc
dec
out
sti
pushf
sbb
fstl
sub
lods
mov
dec
push
pop
aas
pop
mov
aad
push
mov
lret
es
dec
sbb
bound
jo
int
push
testl
in
shlb
mov
push
mov
pop
ret
or
or
jge
mov
mov
ss
inc
loopne
and
push
ds
mov
lea
sub
shlb
test
imul
mov
adc
dec
pop
mov
adc
adc
adc
inc
inc
add
int3
inc
xchg
fwait
push
popf
cs
pushf
lcall
movsl
sub
call
lcall
dec
fisubrl
outsl
pop
or
jo
sub
negb
xor
rcrb
loopne
push
nop
add
jge
out
xchg
xlat
push
add
sub
fwait
push
xchg
xor
push
jmp
xchg
xchg
dec
xchg
mov
jge
xchg
fdivs
and
out
cmp
xor
mov
push
push
cmp
mov
aaa
push
data16
je
mov
push
lock
bound
adc
repnz
int
es
push
push
iret
xchg
mov
mov
mov
cs
stc
pop
sub
jg
jne
and
repnz
mov
mov
push
mov
mov
dec
daa
fnstenv
adc
dec
stos
das
inc
jb
add
mov
xchg
lods
lret
pop
das
std
xchg
xlat
cmp
add
pop
jg
mov
cmp
daa
pop
cmp
mov
jnp
inc
xor
mov
mov
push
mov
loop
add
mov
mov
mov
inc
and
mov
jb
shlb
pop
ljmp
roll
nop
ret
les
das
lods
into
es
fnsave
and
mov
imul
mov
adc
scas
xor
mov
jle
inc
mov
mov
or
add
es
and
test
cwtl
clc
cmp
insb
sub
mov
lock
sub
shrl
or
push
js
sahf
or
shrl
adc
stos
xchg
lret
push
or
je
adc
push
cmc
lahf
mov
fs
cmpsl
push
jae
mov
or
les
jae
movsl
dec
loope
sub
shll
pop
dec
iret
push
fildl
cmp
lods
lock
mov
adc
and
sbb
jp
dec
xor
fidivs
in
mov
cli
fstpt
push
mov
push
jns
stos
das
mov
jmp
ja
test
fwait
in
hlt
ja
shrl
cmc
repnz
push
pushf
jae
aam
xchg
js
rol
jg
imul
push
xchg
pusha
mov
in
test
dec
fnsave
shl
push
mov
ror
adc
mov
add
pop
ds
cmpsl
inc
shrd
js
fisttps
adc
and
mov
ljmp
jle
dec
pop
bound
int
aas
add
test
jns
pop
shlb
sbb
xchg
jns
aad
mov
or
push
cmpsl
xchg
test
shll
aas
jmp
cmp
mov
cmp
sbb
pop
cmp
negb
mov
jl
cmpl
pop
aas
pop
cmp
jmp
int
mov
jno
jnp
mov
mov
mov
fdivl
vhaddpd
jge
xlat
cwtl
sbb
push
icebp
scas
xchg
insl
aaa
jno
popf
movsl
ss
leave
sub
cmp
repnz
pop
and
xor
lds
push
push
loopne
jns
mov
sub
mov
imul
aas
bt
mov
sbbl
or
jg
or
jmp
bound
xor
aam
mov
and
jp
sbb
sbb
cmp
frstor
les
lock
jmp
in
cli
lret
sbb
mov
outsl
mov
cwtl
xchg
jne
mov
and
jns
dec
test
sti
aad
sbb
dec
jmp
cmp
xlat
sti
or
enter
cmc
dec
cmp
repz
sub
jns
jbe
int
jmp
fmuls
dec
xchg
jo
pop
call
jecxz
icebp
out
lods
dec
and
ds
mov
aas
shlb
dec
sub
jmp
jl
int
inc
sbb
imul
inc
cli
in
rcrb
xchg
sbb
clc
xchg
pop
cmp
cli
loope
mov
cmp
rorl
jle
add
js
inc
aaa
aaa
rcrl
mov
packuswb
leave
sub
mov
adc
inc
push
or
testb
lods
jl
ja
sbb
push
aad
push
notb
and
mov
cmovae
sub
push
pop
lock
cmp
and
mov
lock
mov
pop
sbb
lock
dec
popl
dec
add
ds
dec
mov
sub
inc
pop
fidivrl
or
add
xabort
aas
and
pop
pop
out
mov
fistpl
lcall
push
enter
repz
xchg
mov
xchg
push
pop
mov
or
scas
mov
push
add
adc
mov
jns
xchg
jmp
push
jecxz
xchg
add
jae
push
xchg
sub
test
mov
leave
mov
and
and
rcrl
cmp
mov
pop
out
aam
js
mov
fsubp
pushf
test
pushf
pop
je
sub
adcl
jae
mov
adc
add
xchg
clc
loop
sub
mov
inc
scas
pop
mov
push
das
push
aaa
xchg
xor
jo
jbe
xchg
pop
leave
adc
add
std
push
or
shll
adcb
cs
xchg
mov
jl
out
mov
cmc
shlb
xchg
mov
sub
cmpsb
aas
out
xchg
popf
adc
mov
mov
mov
bound
jmp
enter
jns
xor
cmpsb
test
das
add
push
jo
mov
pop
or
or
push
shll
xchg
add
cmp
xor
adc
jns
inc
out
push
adc
mov
aaa
cmp
lods
mov
add
jnp
sbb
lods
add
mov
push
mulb
add
push
pop
sub
pop
xor
negl
push
pushl
cltd
xchg
push
pop
dec
fadds
push
push
ds
cli
fcoml
popf
pop
hlt
push
sti
or
xchg
sbb
jge
and
enter
xor
lret
loope
shr
inc
sbb
rcl
xchg
add
pop
pop
mov
out
jo
xor
mov
es
stc
fs
lahf
cmp
aad
pop
repnz
jg
enter
sarb
mov
or
pop
mov
es
or
scas
aas
add
and
adc
mov
mov
scas
mov
mov
cmp
mov
push
shll
inc
jp
cmpsl
jne
dec
push
aam
mov
loopnew
add
mov
xor
xor
inc
popf
jae
mov
lcall
pop
xor
jae
out
cmp
rcr
cmp
fwait
add
sbb
movsb
sbb
out
lcall
ds
test
mov
pop
lods
push
jle
fcompl
lods
add
sti
and
jp
pop
cmpsb
or
sub
ret
mov
add
mov
add
je
movsl
popf
add
pop
xchg
aad
pop
inc
add
mov
cmp
fxam
dec
pop
test
jl
and
stos
jns
addl
out
sub
jg
shll
test
xor
add
pop
scas
jne
fcomps
jae
xchg
xchg
repnz
xor
lds
dec
and
mov
js
jno
or
and
jo
outsb
insl
push
mov
popa
xchg
jns
mov
nop
add
jne
stc
std
add
mov
dec
and
repnz
lcall
aaa
leave
call
lahf
add
xor
scas
dec
sbbb
shlb
xchg
lahf
movsl
enter
mov
push
pusha
ja
je
mov
test
mov
mulb
out
les
pop
pop
fldl
inc
movsl
cld
sbb
cmpsb
push
int
vgatherdps
js
mov
xchg
mov
rorl
test
movsb
mov
push
lcall
push
xchg
sbb
addr16
int3
fcoms
dec
add
ret
mov
fcom
scas
lock
xchg
lahf
push
inc
ficoms
xchg
mov
push
push
addr16
aam
test
add
popf
or
adc
push
jns
sub
dec
dec
stos
ss
jecxz
in
mov
dec
push
push
imul
mov
pushf
insb
pop
out
loopne
jns
test
xchg
loop
lret
pushf
pop
jns
mov
inc
inc
mov
sub
dec
sahf
xchg
sbb
sbb
jb
ret
cmp
les
es
cmpl
cmpsl
sub
mov
stc
cmc
stos
mov
ss
or
push
push
adcl
cli
inc
js
ljmp
add
nop
andl
mov
mov
push
jle
lret
cld
fcmovb
sub
out
or
push
xor
inc
stos
or
hlt
sub
jp
pushf
mov
dec
fbld
mov
in
test
cmp
popf
stos
lea
call
xchg
iret
int
adc
mov
stos
daa
dec
or
pop
pop
pop
xchg
push
sub
dec
fldt
add
stc
xor
sub
jle
div
addl
lret
mov
movl
adc
enter
sub
and
inc
popf
mov
repnz
lcall
gs
cwtl
aaa
mov
inc
cmpsb
or
xchg
movsb
mov
dec
and
inc
cmp
lret
mov
scas
int3
xor
movsb
mov
int3
adc
movsl
aam
leave
test
shll
test
mov
fiadds
ja
inc
sbb
rcrb
cmp
fucomi
into
push
ficoms
or
out
pushl
arpl
loope
jg
rcll
das
imul
dec
les
push
pop
xchg
in
jmp
outsb
int
mov
fdivrp
mov
ss
xchg
mov
mov
mov
stc
adc
cmc
push
fnstsw
shll
push
push
mov
mov
mov
lret
push
fmuls
jl
pop
mov
shll
cmp
or
xor
jnp
fmuls
popf
sub
add
data16
add
arpl
inc
mov
repnz
js
and
cs
sbb
ss
mov
aaa
enter
stos
loope
ret
stc
ficompl
inc
out
mov
dec
push
or
fmul
dec
fiadds
lods
jecxz
jb
cltd
xorb
fwait
ret
push
lock
sti
test
in
loope
sub
pop
gs
cmp
stc
aaa
inc
nop
dec
orl
inc
and
jns
cmp
jle
sub
pop
fdivr
and
cmp
push
popa
daa
and
das
in
fcmovnu
iret
andl
out
dec
daa
insb
es
sahf
xor
jns
fmuls
loope
sub
jns
jmp
mov
pop
scas
aad
rep
cmpl
inc
dec
and
and
out
loop
daa
gs
and
push
push
mov
fs
lret
sbb
ljmp
sbb
mov
inc
add
lea
pushf
lds
call
and
pop
or
add
into
xchg
ljmp
icebp
cmpsb
cmpsb
fisubl
ret
add
or
into
sbb
shlb
fnstenv
push
sbb
cmp
inc
lock
push
pushf
mov
dec
adc
inc
dec
fiadds
cmpl
stos
xor
loopne
xor
jo
mov
andps
in
mov
inc
mov
leave
aas
mov
sub
test
dec
jno
shll
xchg
test
stc
adc
int3
push
cld
inc
push
and
jmp
cli
xor
div
mov
lcall
setns
lea
adc
cmp
jp
pop
rcl
pop
inc
pop
jbe
es
sbb
mov
and
imul
mov
cmpl
mov
pop
popf
or
ljmp
aad
lahf
pop
scas
or
adc
leave
nop
outsb
mov
scas
fisttpll
inc
fimull
cmp
mov
jbe
xchg
inc
je
pop
std
fs
fidivs
cmp
in
out
dec
push
dec
pop
inc
dec
xchg
sub
jg
pop
push
scas
pop
push
dec
add
int
ds
sub
sub
les
imul
imul
into
jg
subl
xchg
xchg
repz
outsb
pusha
into
cli
xor
dec
cmpl
andb
shr
mov
pop
add
test
imul
inc
call
adc
and
test
push
pusha
xchg
sbbl
call
shll
pop
lcall
aam
mov
sbb
jne
aaa
jb
in
leave
cltd
dec
fists
in
xor
xor
mov
xchg
fdivrs
cld
add
sar
pcmpeqw
das
sub
fildll
mov
xor
dec
jne
mov
adc
mov
sbb
les
mov
mov
je
xchg
ja
add
ret
ret
adc
aaa
pop
imul
or
pop
mov
mov
jmp
lods
aad
and
mov
or
mov
mov
sub
in
imul
outsb
insl
adc
pop
mov
in
mov
or
outsb
lea
call
mov
ja
xchg
addr16
inc
lea
ds
mov
cld
adc
mov
cmc
scas
stos
pusha
arpl
lret
jp
dec
inc
cmp
mov
sahf
into
lcall
mov
ret
ret
nop
shll
jne
fmul
pop
je
mov
xor
loopne
mov
sbb
add
dec
or
jno
adcl
out
bound
pop
mov
and
in
seta
add
dec
cltd
lret
pop
sbb
mov
jb
leave
sahf
jne
inc
shll
cmp
lds
or
inc
repnz
fildl
fisttpl
mov
mov
cmp
test
mov
and
ds
bound
and
jl
aas
adc
pop
mov
lds
out
dec
and
in
iret
sbb
lea
in
int3
adc
inc
adc
bnd
cld
xchg
sbb
pop
push
push
push
andb
aad
out
icebp
or
jmp
hlt
push
aam
inc
or
push
mov
mov
lret
test
outsl
xchg
sbb
add
pop
das
rcrl
andl
add
jno
sub
cmp
andl
fbld
cmc
and
jnp
jo
inc
and
mov
js
dec
sub
repz
loop
xlat
jmp
or
lea
fsubl
rorb
sahf
mov
and
xchg
add
andl
outsl
or
imul
jg
cmpb
adc
jns
nop
dec
push
ret
mov
stos
fisubrl
test
mov
jne
cmc
cld
test
xchg
push
mov
mov
shrb
in
arpl
add
ret
lock
orl
enter
lods
push
fistpl
inc
xchg
pop
push
dec
sarl
test
jge
pop
jge
fiadds
push
mov
std
push
ljmp
xlat
test
and
aam
fwait
dec
leave
pop
jno
inc
dec
inc
mov
mov
loopne
enter
lret
ljmp
aam
sub
mov
sahf
sub
or
adc
sub
mov
ljmp
or
cwtl
adc
insb
addl
in
adc
loope
mov
idivl
aam
add
repz
lret
mov
mov
sub
cmp
xchg
fnstcw
loop
scas
jmp
mov
enter
scas
jecxz
inc
jne
repz
ficomps
xchg
mov
pop
negl
add
rolb
dec
dec
mov
sbb
mov
mov
xor
lahf
mov
test
jbe
xor
gs
lret
xchg
xchg
stc
mov
push
sbb
xchg
addr16
xlat
nop
cmp
xchg
out
mov
add
or
das
adc
fcomps
dec
xchg
loope
lock
imul
cmpsl
cltd
dec
fimuls
inc
inc
call
push
inc
mov
aad
add
jecxz
mov
popf
inc
add
jo
insl
popa
das
insl
pop
xchg
mov
inc
incl
jg
js
mov
jmp
lock
sub
cli
popf
fsubr
insb
scas
dec
mov
sarb
lods
movsb
sahf
add
ljmp
mov
pop
aam
and
std
add
bound
loop
lods
and
fidivl
mov
xchg
mov
jmp
cmp
xchg
fsubrl
aaa
out
in
decl
repnz
dec
lret
cmp
sarb
mov
xor
jecxz
ret
imul
xchg
ss
lahf
dec
mov
int
aad
or
test
outsl
outsl
jp
xchg
lds
mov
fmul
adc
cmp
lea
mov
or
cmpsb
and
sub
out
popa
xchg
add
mov
jl
pop
adc
aaa
lahf
dec
inc
aad
or
mov
push
lcall
mov
sahf
push
sbb
push
outsl
dec
adc
xchg
xor
inc
sbb
je
pushf
mov
jge
enter
sub
lods
push
adc
fdivrp
loope
shlb
popa
addb
adc
jbe
cmp
subl
les
xor
pop
push
jp
fs
sti
cwtl
sbb
pusha
push
jp
lret
cwtl
call
mov
sbb
push
xor
test
cmp
test
xchg
mov
jle
cwtl
cs
xchg
add
test
mov
aam
jo
dec
in
data16
xchg
inc
lahf
pop
xchg
lods
fdivl
xor
das
mov
mov
mov
mov
cltd
adc
lahf
int3
or
jb
push
dec
mov
popf
in
inc
shlb
fcoms
fiaddl
mov
in
and
mov
jp
mov
push
bound
dec
into
idivl
dec
ret
fiadds
lahf
hlt
jl
pop
jo
inc
stc
daa
fsubr
dec
sub
xchg
adc
and
pop
sti
cli
jl
dec
mov
aad
popa
call
or
lock
fisubs
ficoml
gs
cmp
pop
mov
or
mov
test
aam
fbld
test
mov
inc
in
fisttps
mov
sti
scas
push
insl
xchg
xchg
add
leave
test
pop
subl
cmp
xchg
dec
pop
sbb
les
mov
or
leave
dec
fdivs
mov
xchg
shlb
outsb
sbb
mov
test
or
scas
int
and
xor
shll
stos
dec
addr16
cld
mov
dec
xchg
sub
sbb
jle
movsb
add
adc
sbb
mov
fsubrs
in
xchg
test
imul
dec
outsb
callw
bound
sub
fimull
push
mov
add
std
add
cmc
add
iret
lahf
out
int3
rcl
das
leave
jge
mov
mov
cli
inc
orl
mov
js
mov
dec
es
mov
xchg
js
data16
mov
lret
sub
and
fdivrs
or
and
mov
lea
lods
outsb
int
push
sti
cwtl
cs
push
inc
mov
or
movsb
push
fstpt
xor
dec
int3
fnstenv
mov
pop
dec
cmp
popf
mov
gs
lock
mov
iret
mov
cs
pop
test
mov
out
sbb
push
dec
scas
es
sub
test
inc
mov
movb
ja
lret
fidivrs
js
dec
subb
jns
into
xor
in
jp
push
enter
inc
lcall
xlat
or
ffree
nop
sti
xlat
test
repnz
add
xor
mov
gs
in
add
stc
cltd
fwait
xchg
popf
cmp
adc
insb
les
dec
adc
popf
into
cld
dec
push
push
pop
pop
test
out
cmp
mov
pop
js
insl
enter
jl
mov
lcall
movsb
mov
into
inc
cmp
subb
out
pop
xchg
leave
subb
fisubrs
mov
popa
or
adc
sub
sti
add
sahf
fimuls
popf
rcll
jmp
mov
add
pop
fisubl
xchg
xor
mov
adc
sahf
push
dec
mov
xor
mov
adc
pop
rorl
mov
pop
lods
sbb
into
leave
sti
inc
pop
sahf
fisttps
jmp
sub
cmp
scas
xchg
dec
adc
jmp
xlat
ret
es
pop
repz
test
jb
pushf
pop
cmp
xor
fs
cmpsb
test
add
fsubl
lods
mov
jno
mov
aaa
shlb
test
insl
mulb
and
lock
mov
fadds
push
push
popf
mov
adc
movsb
dec
lcall
int
mov
nop
and
cwtl
jg
loope
mov
xlat
in
ljmp
mov
mov
or
xorb
mov
cltd
xor
push
into
add
inc
mov
dec
shrl
add
or
and
pop
push
mov
test
push
cltd
in
xchg
int
pop
pop
test
imul
jl
outsb
add
stos
jmp
pop
data16
scas
adc
cmpsb
jno
sti
xchg
shl
pop
imul
adc
mov
sti
xchg
push
divps
es
dec
mov
leave
sub
mov
pusha
test
loope
fisttpl
data16
sbb
cld
dec
jecxz
add
enter
outsl
jg
movb
ss
and
push
aaa
or
jae
mov
add
sub
orps
jmp
loopne
xor
in
adc
jno
out
mov
push
mov
jo
push
lret
mov
mov
icebp
mov
cmp
int
lock
pop
xor
add
xchg
hlt
decb
xor
rdpmc
cmp
mov
shlb
loope
dec
sbb
mov
xchg
mov
pop
int
and
iret
into
and
jle
add
iret
out
or
les
xlat
sbb
subl
dec
iret
cmp
dec
icebp
mov
je
out
lock
ja
lods
or
aad
and
jo
mov
popa
sbb
loop
sub
shr
in
in
and
mov
out
cli
out
sub
fistpll
nop
fsubrs
mov
lods
clc
push
jmp
inc
jno
fiaddl
inc
mov
add
cmp
scas
mov
jnp
jmp
dec
mov
xchg
xchg
and
sub
jmp
jecxz
scas
push
cltd
mov
mov
or
test
lea
sahf
stos
dec
aam
cmp
xchg
or
es
inc
cmp
pop
cs
adc
xlat
je
rorb
loopne
lds
das
scas
mov
pop
ljmp
dec
pushf
mov
hlt
imul
les
xchg
scas
sub
scas
cli
or
fbstp
mov
bound
xor
outsb
adc
jge
add
int3
cld
or
cmp
xchg
popa
in
out
fstl
in
test
xchg
leave
fsubrs
xchg
lods
cmpsb
sarl
pop
mov
dec
inc
ret
outsl
push
mov
cmpsb
dec
mov
icebp
jnp
repnz
push
movsl
sbb
xchg
jmp
mov
sub
fs
xchg
sbb
mov
aad
daa
adc
jno
push
push
and
lret
mov
into
rcr
std
xchg
cli
jne
inc
inc
and
adc
mov
std
fidivl
and
stc
enter
lret
xlat
aaa
cmc
mov
idivl
in
sbbl
das
xchg
add
in
int
in
mov
inc
imul
fists
icebp
cli
movsl
lcall
push
xor
scas
lcall
pop
and
lock
push
dec
add
push
lret
fcoml
add
jp
mov
sub
push
icebp
xchg
xchg
adcb
sub
call
ds
adc
push
out
pop
popa
cmp
andb
adc
xchg
lahf
mov
sub
cmpsl
mov
mov
je
push
mov
mov
mov
mov
mov
cmp
loopne
stos
rep
dec
add
xchg
mov
mov
mov
jmp
insl
xchg
aam
jo
cmp
pop
flds
add
pushf
mov
scas
scas
data16
mov
int
fstl
jg
movsl
lret
add
mov
cmc
pop
push
sahf
out
inc
mov
addb
std
cmp
shl
xor
insb
xchg
hlt
ds
xor
fcmovne
cmpsb
arpl
jbe
ret
mov
stos
pop
mov
bound
mov
ljmp
mov
ficompl
mov
pop
iret
adc
jns
adc
jbe
je
mov
cs
push
xor
sbb
sahf
xlat
repnz
aaa
or
mov
push
filds
jb
pop
addr16
cmp
sub
int
cmp
mov
dec
rcll
mov
and
inc
outsl
test
mov
pop
jne
mov
std
xchg
and
fs
cmp
cmp
data16
lahf
pop
pop
test
and
push
push
cmp
xchg
sbb
mov
sbb
dec
rolb
rclb
nop
push
or
rorb
inc
out
rorb
test
push
sub
mov
adc
push
cmp
add
rclb
lds
push
mov
or
xchg
sub
jno
mov
mov
dec
jno
out
iret
jp
cmp
or
fwait
mov
dec
mov
shlb
test
out
or
std
sbb
jg
daa
ds
cld
cltd
rorb
dec
add
test
std
shrb
sbb
sbb
insb
mov
or
mov
std
xchg
call
push
pushf
pop
rcl
or
dec
das
add
inc
popf
ret
test
sbb
xchg
cmp
push
out
jae
xchg
dec
mov
leave
pop
and
and
lret
mov
scas
call
sbbl
int3
sbb
pop
push
out
faddl
xchg
inc
adc
adc
push
and
add
cmp
jne
jg
das
dec
pop
loopne
rclb
push
cmp
mov
je
aam
addl
push
testb
mov
sub
test
aaa
pop
add
jmp
mov
mov
lret
adc
nop
lods
mov
mov
cmp
ja
cmc
cmp
fs
ss
jno
fdiv
add
ds
scas
sbb
stc
fimull
subl
repnz
mov
sub
xchg
mov
insl
xchg
sbb
dec
and
mov
push
and
fst
mov
mov
outsb
pop
ret
xor
shlb
push
xchg
cmpsb
cmp
xor
hlt
inc
adc
adc
dec
mov
cmp
rclb
sti
out
and
cmp
cmp
mov
adc
int
inc
mov
movsl
movsb
sub
or
flds
nop
jmp
fsubrs
sbb
sub
xchg
fsubp
sbb
xor
pop
fsubr
mov
mov
out
and
sbb
aaa
iret
stos
mov
jbe
stos
clc
lahf
and
leave
lcall
and
dec
cmp
bound
push
push
mov
loope
pop
notl
inc
xchg
push
cli
int3
xchg
xchg
mov
add
inc
stc
add
mov
iret
test
sbb
sbb
sarb
dec
add
xor
into
stc
jns
js
clc
push
out
mov
or
ss
fxch
icebp
faddl
dec
mov
jmp
rcrl
xchg
mov
div
clc
lahf
add
mov
in
addl
cmp
pop
mov
lods
mov
xchg
xchg
lahf
add
outsl
fbstp
sub
or
aam
cmp
repnz
inc
or
sub
mov
cwtl
cwtl
lock
aas
sub
roll
add
inc
aas
sbb
mov
lea
mov
jno
or
jmp
xchg
dec
das
pop
xchg
fs
out
cmpsb
shlb
cltd
mov
shll
aas
add
loop
aad
add
mov
sbb
add
xchg
rorl
push
jecxz
shrb
lahf
push
gs
jno
int3
orb
sbb
xchg
stos
xchg
sub
sub
shlb
xchg
test
cmp
push
mov
jmp
push
push
daa
insl
sub
or
add
dec
lds
mov
mov
push
repnz
cmp
mov
fistpll
repz
add
mov
mov
sarb
mov
aam
mov
add
pushf
push
xor
pop
iret
xchg
ret
push
in
add
sub
and
jge
rorb
and
arpl
xchg
dec
inc
add
adc
add
mov
mov
das
adc
js
lcall
scas
sub
jp
imul
insb
cmp
std
outsb
test
adc
jmp
lods
rolb
hlt
push
dec
daa
cmp
mov
in
sahf
dec
fsubrs
movsl
bound
lret
mov
repnz
vmovhps
push
lock
mov
movl
ljmp
xchg
cmp
pop
inc
or
cmp
lcall
movsl
div
push
pop
pop
mov
add
arpl
dec
and
lock
xchg
jns
jno
gs
add
movb
repz
dec
shrb
or
add
sbb
mov
test
inc
stos
dec
mov
ss
ss
sbb
inc
bswap
out
mov
sbb
das
testl
cmc
sub
cmp
and
sub
dec
xchg
xor
dec
shl
sbb
xlat
leave
inc
out
lahf
ss
lcall
lcall
leave
jle
push
mov
out
sbb
fcoms
pop
cmp
mov
das
and
add
cli
ficoml
test
imul
push
cmpsl
sub
push
cmc
lods
ret
push
je
dec
shll
fidivl
shrl
adc
mov
push
push
mov
shl
in
loop
xchg
in
mov
movsl
add
stos
mov
mov
add
shlb
xor
inc
cmp
and
xor
bnd
insb
xor
mov
xor
lds
and
jno
out
arpl
sub
les
dec
shlb
leave
fucomip
push
in
xchg
dec
push
xchg
incl
dec
lcall
pushf
repz
leave
mov
dec
xchg
scas
ret
scas
mov
push
xchg
push
bound
sbb
int3
enter
and
cmp
mov
outsl
leave
and
mov
popf
mov
addr16
add
mov
fwait
push
faddl
jne
cltd
push
ss
mov
pushf
lock
push
add
movsb
sbb
test
sbb
ffreep
jns
cwtl
fidivl
inc
je
enter
js
xor
jbe
inc
mov
leave
lea
push
rorl
mov
mov
les
pop
leave
or
into
push
add
lret
into
mov
fidivrl
shrl
jne
inc
inc
fisttps
dec
push
sahf
mov
fmuls
cs
mov
adc
push
into
sub
xchg
push
mulps
test
pop
rcrl
stos
insb
mov
and
xor
rclb
push
push
cmp
enter
push
loope
xchg
sub
dec
inc
imul
minps
dec
push
jg
xchg
scas
fs
adc
cs
in
inc
inc
lret
pop
sar
fimull
dec
jno
std
add
inc
rcl
mov
push
mov
or
insl
or
mov
das
mov
mov
stos
icebp
aad
xor
decb
in
addl
pop
fbld
add
test
ljmp
dec
mov
fsubs
xor
push
addr16
push
push
cmc
ljmp
sub
mov
shll
jmp
adc
loop
out
mov
and
fs
out
push
out
insb
mov
lcall
test
mov
std
cmp
xor
xchg
dec
mov
imul
cli
aas
push
pop
movsb
loope
jecxz
movsb
or
dec
mov
and
mov
push
push
xchg
mov
xchg
add
dec
cmc
ret
mov
xor
pop
test
jbe
sub
fucomip
cs
pop
fsubrl
cld
mov
xchg
cmc
adc
iret
push
or
fistpll
fidivs
adc
push
push
int3
mov
leave
js
pop
mov
icebp
inc
xchg
and
or
mov
std
cmc
test
add
in
loopne
inc
lret
sub
and
fs
cwtl
lea
das
notl
data16
jnp
dec
scas
shl
in
jmp
out
mov
out
lds
lock
sub
mov
loopne
cmp
test
mov
push
leave
lea
xchg
in
jecxz
fidivl
mov
sti
push
lret
jnp
roll
out
jnp,pt
sbb
cmp
cmp
add
adc
inc
in
xlat
cltd
test
pop
mov
fwait
loop
or
dec
jg
enter
andl
push
add
leave
out
aam
daa
leave
js
iret
popa
cmp
sbb
inc
stc
shll
dec
cmp
pushf
cwtl
ret
jae
int
push
fsubl
out
add
jle
in
adc
in
push
popf
xchg
loopne
hlt
out
sub
stos
or
xchg
das
imul
scas
push
cltd
les
pmaxub
insb
movsb
jns
xchg
jg
sub
mov
add
test
push
dec
pop
in
stos
jo
pushf
push
scas
pusha
ljmp
ja
xchg
ficoms
pop
push
cmp
add
xlat
adc
or
out
and
adc
push
rcrb
popa
sub
or
xchg
js
lcall
int3
inc
scas
lea
xor
pop
xchg
jp,pn
jge
add
mov
ljmp
and
sbb
xchg
movb
lcall
cwtl
idivl
inc
xor
js
and
push
es
rcl
cmp
shrb
in
xchg
dec
mov
lods
or
hlt
pushf
fmull
nop/reserved
scas
dec
les
sbb
pusha
dec
lods
cli
adc
push
jno
mov
clc
insl
sub
inc
mov
in
rol
leave
sub
leave
js
and
xor
lahf
clc
movsl
int3
enter
mov
bswap
mov
cli
pop
shlb
cmp
int3
rolb
xor
fwait
or
xchg
pop
and
xchg
js
out
sar
mov
inc
imul
icebp
pop
dec
out
or
cli
inc
xor
cmp
stc
or
in
call
aas
mov
fcomps
shl
test
inc
adc
in
xchg
sub
mov
pop
xor
jmp
sbb
pop
insl
divl
lods
int3
out
fcmovne
add
aam
jmp
ss
push
cmpb
fs
cmp
lds
cmpsl
xor
cmpsb
lods
stos
inc
nop
mov
and
ret
dec
mov
sub
addl
adc
add
pop
or
cmp
mov
orb
movsb
mov
sub
lret
fimull
fs
icebp
aam
and
or
sub
sarl
and
pop
popa
inc
xor
insl
or
push
mov
test
mov
sti
in
pop
sti
insl
movl
dec
cltd
stc
mov
in
mov
daa
jno
out
test
cmp
xchg
pop
stc
test
shll
dec
mov
cli
imul
mov
sarb
nop
pop
test
lods
idivb
mov
push
pop
and
push
loope
imul
lock
data16
scas
in
mov
scas
mov
xor
bound
sub
xchg
push
imul
bound
fdivr
push
pop
inc
lahf
mov
ja
ret
inc
or
and
je
push
push
in
pop
dec
xchg
bswap
fdivrs
sahf
sbb
xor
shlb
jbe
fdivrs
ret
inc
nop
jmp
inc
xor
loopne
xor
bound
xchg
addr16
dec
decb
jnp
subb
push
aad
mov
ja
les
cmp
inc
stc
cltd
dec
js
xchg
inc
scas
mov
shlb
mov
in
push
lret
ret
xchg
add
sub
bnd
divl
aad
xor
das
mov
mov
jae
dec
fistps
test
frstor
fdivs
popa
push
in
mov
mov
imul
cmp
or
push
xorb
sub
sbb
loopne
mov
jns
or
popf
repnz
mov
aam
movsb
int3
xor
push
xor
pop
push
xchg
lods
mov
aas
and
into
jg
decl
std
sarl
xor
and
scas
mov
arpl
xchg
push
fwait
mov
sub
inc
adc
enter
test
cmp
inc
lret
bound
add
adc
dec
adc
pop
out
dec
dec
mov
fwait
dec
fidivrl
jbe
sub
and
mov
xor
vinserti128
aas
call
clc
es
popf
jne
jg
sub
dec
fdivr
or
fucomp
xor
mov
pop
scas
shl
shr
test
es
out
xor
ret
push
std
outsb
xchg
xor
pop
mov
xorl
iret
test
leave
lret
adc
push
sahf
and
pop
cli
inc
sub
or
push
loope
out
int
mov
cld
int
nop
std
xor
mov
cli
sbb
mov
int3
mov
ds
test
rorl
icebp
fwait
sub
jg
lret
mov
adc
insb
or
sub
sub
mov
ficomps
xor
mov
mov
arpl
lods
mov
testl
jo
ja
mov
sub
push
dec
sub
insb
nop
cmp
jo
pop
add
xor
add
lock
sbb
loope
das
aaa
and
pop
dec
mov
sub
ret
stos
shlb
out
cmp
cmp
and
add
sub
cmpsl
dec
aas
sti
cmp
popf
push
loop
jmp
mov
out
pusha
adc
or
push
mov
fs
cmp
sti
mov
mov
mov
xchg
cltd
mov
filds
dec
outsb
pop
mov
out
arpl
ds
aaa
cltd
cmp
push
in
je
idiv
into
add
in
es
xchg
in
pop
in
pop
nop
cmp
sbb
stos
and
jnp
imul
jmp
pop
jg
das
or
mov
inc
fs
add
loop
shl
or
cwtl
mull
mov
fwait
shrb
bound
and
and
adc
mov
dec
xchg
in
sub
sub
addl
mov
pop
idiv
loop
aad
movsl
mov
jmp
adc
imul
or
inc
insl
scas
inc
fsubs
in
add
lret
dec
push
mov
mov
inc
inc
mov
pop
subb
push
cmp
dec
loopne
pusha
mov
sub
ss
jne
cmp
lret
sub
ss
pop
mov
lea
out
or
push
xor
sbb
test
push
and
sub
mov
int3
lahf
or
add
xor
push
and
out
mov
mov
pop
out
test
out
or
enter
and
std
frstor
dec
or
lcall
pop
push
xor
push
aas
je
xchg
sbbl
xor
mov
cld
leave
leave
xchg
repz
leave
xchg
mov
add
mov
push
imul
or
sbb
push
sub
fidivs
or
pop
xchg
mov
imul
mov
add
dec
adc
out
aam
jmp
xchg
xchg
and
sbb
mov
enter
bound
and
or
testb
or
dec
dec
inc
imul
xchg
idivb
adc
add
icebp
inc
mov
pop
dec
shrl
pop
jns
inc
nop
ss
dec
sub
popa
loopne
aaa
add
sti
mov
filds
mov
inc
ret
clc
in
mov
or
shr
push
sbb
and
ljmp
and
push
adc
lds
jecxz
lret
std
pop
sub
fdiv
lret
scas
dec
in
pop
and
and
fbld
ficomps
dec
inc
mov
mov
es
add
gs
iret
daa
add
dec
xchg
mov
pop
stc
cmp
adc
popa
sti
fldenv
aas
cmp
jo
cmpsb
inc
shll
enter
gs
ja
xor
bound
cli
pushf
dec
arpl
push
lds
jmp
fwait
ss
jp
fidivs
mov
xlat
mov
push
add
fs
rclb
in
cmpb
mov
rcl
adc
lds
iret
dec
inc
mov
mov
imul
pusha
test
sti
lcall
mov
ret
pop
iret
outsb
add
fistpl
adc
jle
insb
dec
sbb
inc
int3
mov
cmp
imul
jno
sti
and
sub
sub
or
mov
mov
mov
cmp
xlat
or
fwait
cmp
mov
add
outsb
inc
mov
fcomps
lds
shr
mov
add
xchg
ds
dec
mov
xor
fdivl
fstpl
mov
cmp
les
rcl
xchg
ss
cmp
jno
jp
cmp
jno
mov
jne
xchg
push
stc
aaa
mov
cltd
fs
mov
or
mov
add
mov
pop
pop
dec
xchg
push
mov
repz
vpcmpgtb
dec
add
iret
add
and
imul
mov
leave
movsb
mov
stos
xor
dec
cmp
mov
loop
aad
mov
inc
mov
mov
inc
ds
sub
arpl
sbb
pop
jae
add
sub
inc
stc
sub
fdivl
aad
lds
cld
xchg
pusha
cwtl
xlat
xchg
call
dec
jle
sahf
mov
or
pop
xchg
fldcw
out
dec
pop
iret
loopne
rol
jge
movw
inc
inc
jg
cmp
cmpsb
sbb
xlat
leave
lds
or
xchg
inc
repz
int3
mov
lds
mov
dec
inc
sahf
bound
iret
inc
clc
mov
mov
leave
aaa
adc
mov
cmp
mov
out
cs
mov
mov
inc
scas
dec
jg
cmp
mov
sub
test
loope
pop
cmpsl
adc
shr
pop
rcr
aaa
inc
fwait
sub
push
sbb
mov
dec
pop
out
lea
dec
aaa
sti
inc
pop
pop
or
test
sub
mov
out
push
mov
mov
sbb
divb
fisttpl
mov
test
bound
mov
in
mov
add
outsb
arpl
sbb
popf
sti
rcrl
mov
mov
mov
insl
jle
mov
inc
out
add
and
imul
and
inc
lds
cli
push
inc
es
gs
and
and
ss
daa
stos
xchg
lds
mov
jle
test
mov
mov
xor
sar
and
les
test
insl
xchg
mov
pop
std
jbe
cmc
dec
add
rcl
mov
or
mov
cld
int
cmpl
pop
mov
mov
jns
loope
jns
fiaddl
loop
dec
fwait
mov
or
xchg
hlt
xchg
scas
or
call
ficoms
enter
adc
mov
stos
jg
lret
adc
dec
dec
leave
ljmp
lret
add
mov
mov
jl
mov
outsb
test
add
cmp
cmp
xlat
fldl
outsl
mov
cmp
mov
sub
mov
test
add
ret
sub
in
inc
mov
in
sub
cmp
out
popa
xchg
lea
pusha
add
pop
mov
daa
dec
cmpsl
scas
iret
pushf
popf
push
push
xchg
outsl
sub
sahf
stc
in
xlat
xor
cwtl
data16
mov
arpl
mov
in
inc
dec
pop
jecxz
jo
aaa
in
pop
cmp
aad
dec
pmulhuw
call
mov
jmp
adc
roll
sbb
inc
int3
xor
scas
shlb
add
orl
sub
or
test
andl
icebp
aam
daa
fxch
pop
cmpsl
hlt
mov
add
loopne
mov
fwait
sarl
cmp
mov
jo
or
into
pushf
jae
divl
stos
shrl
dec
xchg
push
pop
iret
stos
hlt
cwtl
cmp
dec
lods
cmp
adc
in
pop
add
sbb
js
push
push
or
xchg
cmp
inc
inc
aad
push
jmp
shlb
xor
sbb
sub
shrl
jbe
insb
ror
aas
test
imul
lret
inc
add
repz
inc
cmpsb
adc
xchg
push
xchg
push
mov
fcoms
imul
or
or
xchg
xor
mov
in
test
lea
pop
lret
inc
or
adc
lret
dec
imul
fiaddl
aas
and
shlb
js
sahf
mov
adc
dec
in
push
adc
mov
pushf
popa
fs
mov
sbb
add
adc
mov
or
pop
xor
and
mov
fcmovnu
mov
sub
enter
dec
adc
fprem1
repz
add
mov
mov
cltd
fs
sbb
aad
dec
mov
nop
mov
add
imul
out
lock
icebp
sbb
mov
shr
jne
adc
fsubs
xor
gs
aam
mov
das
add
dec
jno
enter
dec
push
andl
lods
jle
cld
fidivs
cwtl
dec
inc
xor
sahf
pop
test
nop
in
xchg
imull
dec
xor
ds
imul
adc
mov
pushf
repnz
xchg
cs
fnstenv
xchg
adc
lret
push
addr16
sbb
testl
je
or
pop
lahf
fcoml
movsb
loope
shlb
push
lods
xchg
cwtl
push
mov
mov
mov
arpl
add
xorw
adc
dec
or
or
mov
pop
sub
shlb
mov
pop
pushf
sarl
arpl
rolb
lods
or
push
std
aam
dec
dec
pop
hlt
xchg
sbb
inc
xchg
out
sbb
push
push
push
or
int3
icebp
es
push
jo
stc
jns
add
pop
aam
push
ljmp
pop
mov
or
mov
and
ret
scas
addl
lock
sti
movsl
adc
mov
divps
out
jg
push
sbb
scas
movsb
ja
sub
lds
dec
jae
aas
ror
shr
xlat
jmp
cwtl
lea
ficoms
stc
mov
lock
xchg
or
adc
pop
inc
pushf
bound
lahf
jo
mov
jno
cs
jle
mov
adc
inc
mov
jae
or
mov
xchg
shrb
push
js
jnp
jae
inc
aaa
fiaddl
andl
stos
test
jbe
pop
into
or
and
jl
fists
jae
ljmp
push
mov
pushf
inc
add
pop
lret
scas
ret
stos
mov
push
inc
cld
outsb
xchg
xchg
mov
jge
xlat
and
jne
jmp
jae
push
call
fidivrs
xchg
push
shr
mov
xchg
dec
lahf
mov
inc
rorb
fwait
xchg
addr16
mov
jae
or
repnz
push
rcll
dec
lret
insb
mov
mov
jge
aad
int
fwait
in
lea
jg
int
ret
into
rcr
jge
mov
push
subl
adc
mov
into
jp
mov
stos
add
adc
dec
add
and
and
shl
out
lahf
popf
xlat
mov
or
stos
cmp
iret
xchg
or
mov
andl
jnp
in
push
inc
pop
jge
jp
dec
or
jbe
jae
pop
jb
imul
lcall
xor
pop
sbb
cwtl
iret
lds
and
xchg
push
stos
ret
mov
pushf
add
mov
push
cmp
or
movsb
adc
std
pop
ds
cmp
inc
xchg
es
pop
or
and
in
add
pop
das
jle
or
add
nop
sub
out
pop
dec
cmp
mov
or
call
add
fisubl
inc
and
inc
xchg
iret
add
lret
cmpsb
movsb
cmp
aad
mov
xor
inc
ss
and
lea
dec
dec
jmp
or
mov
das
push
in
add
inc
mov
mov
lock
aam
and
fcmovu
js
cwtl
subl
pop
mov
in
mov
mov
orl
lods
push
push
in
pop
movsl
xor
icebp
mov
sti
repnz
jbe
ss
jbe
inc
bound
dec
or
or
jmp
fldl
add
xor
sub
je
aas
in
cmpsl
and
scas
dec
jbe
in
shrb
sub
mov
dec
dec
adc
xchg
sbbl
or
mov
dec
inc
pop
movsl
sbbb
jbe
xchg
int
dec
xor
mov
sub
mov
push
push
xor
mov
jno
insb
mov
ficoml
pop
lods
fdivrs
cmpsb
jg
loopne
stc
mov
inc
hlt
push
jecxz
jns
push
cli
insl
xchg
sbb
inc
insb
push
outsb
cmpsl
dec
sub
adc
mov
or
cmc
pop
cmp
xchg
pop
lret
enter
punpcklbw
mov
jmp
add
xchg
push
imul
out
xchg
loope
push
mov
fs
imul
ret
mov
out
lret
stc
in
sbb
inc
pop
pusha
iret
ds
xlat
into
sbbl
repnz
dec
mov
aaa
mov
push
fidivrs
xchg
mov
mov
inc
and
push
jmp
adc
out
icebp
ljmp
aad
fs
fmul
into
xchg
sbbl
mov
les
mov
not
and
mov
push
insb
xchg
sbb
das
pop
pop
fs
and
cmpsl
mov
add
or
or
ret
dec
xchg
push
sub
cltd
test
out
add
mov
rcrb
shrb
mov
jns
inc
lret
mov
push
dec
mov
xor
outsb
mov
cmc
dec
inc
push
mov
mov
adc
mov
mov
loopne
filds
sbb
xchg
or
subl
andl
rcrl
push
stc
and
cli
popf
xor
leave
leave
cs
subl
out
and
add
jmp
mov
rolb
cmp
push
pop
fwait
sbb
sub
mov
dec
jbe
sub
cld
sub
in
out
jo
ret
inc
or
aaa
das
sub
ss
int3
mov
inc
test
push
fmuls
inc
iret
in
nop
lock
fucomi
xchg
cmp
push
xor
cld
fwait
push
addr16
in
dec
fs
gs
call
leave
bound
sarl
cmpsl
mov
iret
test
or
inc
mov
outsl
sub
jg
ret
pop
into
inc
push
adc
pop
and
inc
xchg
ret
add
jo
dec
lahf
add
cmp
pusha
shll
mov
imul
jl
ss
cmpsb
push
popa
lea
inc
das
fnstenv
stos
cli
xchg
push
cli
arpl
ja
lods
test
pop
adcb
jl
mov
inc
test
add
shlb
inc
xchg
notl
sbb
aaa
inc
inc
outsl
lea
xchg
aas
bound
lds
fs
mov
call
sub
push
lcall
mov
add
add
xor
fs
in
mov
mov
test
dec
iret
inc
push
roll
sub
ja
or
push
dec
push
mov
orl
dec
sbb
push
mov
outsl
add
dec
push
or
lods
aad
inc
loope
jmp
xlat
outsl
inc
ror
or
add
jbe
adc
push
ret
push
xchg
and
mov
mov
or
rcrl
pop
stos
add
sub
cmc
dec
pop
stos
or
nop
hlt
ds
sub
sub
xorl
xchg
ds
daa
sbb
cs
xchg
aas
xchg
mov
loope
add
daa
pop
sub
leave
lds
mov
cmp
xor
cmp
out
sub
fstpl
sub
add
test
inc
lret
loope
insl
sub
fiadds
push
mov
pop
fimull
negl
jg
mov
sub
or
test
push
jbe
in
add
xchg
pop
mov
ret
stc
xchg
mov
jl
xchg
insl
ljmp
mov
pop
addr16
out
mov
cmp
and
mov
popf
and
or
call
xor
mov
xchg
insb
mov
mov
lret
jg
or
push
cltd
das
fdivrs
dec
xor
mov
xor
mov
jp
and
xor
mov
cmp
push
fdiv
jge
jbe
jae
fld
xchg
aam
or
jno
xchg
nop
aad
cmp
mov
mov
pop
xchg
sub
sbbl
clc
insl
cmp
add
dec
adc
iret
out
idivl
push
stos
loop
push
fidivl
sarb
mov
das
or
add
in
stc
data16
push
mov
fs
imulb
clc
mov
cs
clc
mov
pop
in
clc
mov
fs
orl
es
jbe
in
adc
jmp
adc
dec
or
and
or
jns
add
fimull
inc
rcrl
sarl
cwtl
lods
iret
sub
and
add
iret
dec
pop
out
rol
pop
mov
or
inc
fildll
or
add
fldl
ret
xor
pusha
shr
lock
leave
sahf
movsl
testl
outsb
je
es
fisubl
fistps
faddl
fcmovu
jle
ffreep
pop
clc
gs
pop
fnsave
movsl
ss
ss
or
mov
ljmp
arpl
insb
push
jae
je
mov
mov
cltd
jo
push
inc
cmpsb
pop
pop
shll
insb
jno
pushf
popa
push
in
daa
fs
movsl
lds
ficompl
sub
fstl
xor
iret
mov
pop
fs
mov
xchg
sbb
cli
aad
mov
fsubrl
stos
jp
cs
mov
js
sub
outsl
xor
mov
cmp
rcrb
pop
push
inc
adc
sub
mov
push
dec
jno
jecxz
scas
cwtl
jns
aaa
sub
sti
popa
ds
arpl
jbe
lret
jo
pcmpgtb
mulb
sbb
bound
rol
leave
sub
loope
and
pop
mov
jl
clc
stos
push
movsl
and
into
mov
fadd
out
add
pusha
cmpsb
stc
push
sbb
roll
scas
jl
add
pop
sbb
mov
or
mov
hlt
and
pop
aad
xor
data16
aad
sarb
subb
xor
lcall
xor
add
dec
pop
aad
insl
popf
pop
lret
stc
arpl
mov
jge
and
cmpsb
leave
lock
and
xor
xor
repz
ss
jge
push
pop
jle
lahf
xchg
mov
movb
push
out
lret
fldcw
adc
or
in
mov
in
xchg
loopne
in
or
sbb
subb
repnz
sub
inc
add
imul
pop
push
scas
jbe
jecxz
lods
dec
jbe
mov
jg
mov
dec
inc
negl
test
add
add
jmp
dec
add
cltd
pop
mov
or
mov
call
xchg
pop
mov
sub
cmpsl
jl
outsb
inc
ja
or
loop
xchg
out
mov
or
jle
test
or
fistpl
push
mov
or
add
rolb
pop
and
mov
or
jbe
outsl
fiadds
adc
mov
jbe
out
adc
add
inc
dec
inc
insl
jb
movsb
rol
insl
ja
pusha
add
cmp
aaa
popf
mov
je
cmp
add
mov
out
in
outsl
sbb
push
sub
jae
adc
imul
cmpl
mov
push
test
cmp
pop
adc
pusha
push
push
clc
push
add
out
mov
pop
push
cmpsb
cmp
out
mov
insb
mov
cmpsb
dec
repz
cmp
lds
xor
adc
loop
fmull
inc
js
add
shll
fildl
data16
out
inc
inc
hlt
inc
jp
or
cmp
or
mov
push
in
fcoms
loop
xchg
clc
and
sbb
lret
mov
mov
mov
cmpsl
dec
cli
add
or
xor
cmpl
lret
adc
or
add
rorl
lret
or
out
xchg
jge
or
xor
lea
pusha
push
iret
pop
rorb
scas
int3
das
rcrb
les
cmp
fiaddl
mov
cli
aad
adc
cwtl
cmp
xor
rclb
scas
adc
add
je
jae
jp
gs
and
andb
push
cwtl
out
jno
sahf
out
nop
gs
fcmove
xor
imul
or
push
pushf
mov
lods
add
icebp
sbb
fldt
arpl
cmp
pusha
fmull
cmpsl
xor
jns
repnz
imul
dec
fs
fbstp
or
sbb
pop
lret
nop
xor
shl
sub
hlt
mov
jno
jns
xlat
dec
dec
insl
xor
mov
addr16
xor
sti
testl
xor
mov
andl
mov
and
mov
jo
lock
mov
dec
push
sub
mov
xor
nop
push
pop
in
push
imul
mov
and
sbb
adcb
cmp
lods
push
jmp
fdivl
jg
sub
dec
gs
cs
roll
adc
sub
push
mov
or
xlat
pop
daa
push
stc
jmp
or
mov
sbb
and
mov
adc
sbb
or
push
popf
jno
xorl
cs
and
into
icebp
rcll
inc
jge
mov
mov
int3
mov
fisubrl
mov
mov
jp
sbb
or
lret
or
mov
out
imul
movb
lahf
insl
sub
mov
push
fildl
add
movsb
lods
test
or
add
lock
jbe
mov
xorl
xchg
or
cmc
in
pop
nop
ret
pop
loopne
pop
pushf
push
loopne
fists
mov
sub
mov
aam
cli
int
xor
fsts
aad
inc
inc
lods
fwait
lods
addr16
cmp
aad
jle
mov
inc
fnstenv
repz
icebp
cmp
gs
inc
lods
lret
push
xor
cli
mov
jl
in
xor
cli
mov
aam
pusha
in
mov
xor
cwtl
adc
pop
dec
inc
mov
sub
cwtl
jno
pop
mov
mov
fiadds
dec
addr16
cmpsl
test
dec
lods
cmp
cmp
jns
into
lcall
adc
and
in
inc
ds
push
mov
data16
adc
xchg
xchg
ret
mov
je
mov
sbb
cmp
pop
mov
hlt
mov
xchg
and
pop
push
sbb
test
mov
inc
jl
inc
add
outsb
fadds
mov
sbb
inc
test
lds
je
mov
mov
and
mov
xchg
adc
jmp
fistpll
xor
fidivrs
mov
xor
test
out
xchg
inc
dec
sub
mov
sub
dec
xorl
test
sahf
popa
pop
ja
lret
lea
push
push
push
sahf
dec
out
and
test
xor
mov
sbb
fsubrs
lahf
dec
cmp
insl
jb
jno
jmp
inc
mov
inc
xchg
sub
cwtl
shlb
bound
adcb
push
out
lea
ja
and
cltd
jge
mov
jecxz
mov
scas
or
repz
add
imul
jb
and
cmp
mov
stos
adc
icebp
xchg
or
mov
push
gs
ret
or
jbe
daa
sub
xchg
xor
hlt
sahf
cmp
jmp
nop
mov
xchg
imul
dec
push
sbb
adcl
jns
clc
ret
das
add
fwait
xlat
test
add
roll
ror
push
cli
adc
jge
push
lahf
jge
add
adc
adc
adc
sbb
push
call
dec
xchg
stos
xchg
cmp
mov
push
mov
cmp
mov
xlat
stos
ds
imul
aaa
sub
mov
mov
jbe
xchg
incb
sbb
sbb
dec
adc
pushf
lds
jb
fwait
lock
dec
aam
push
mov
mov
les
in
dec
iret
cmc
mov
flds
xor
lahf
test
dec
sahf
pop
leave
pop
dec
jnp
push
xchg
int
jmp
rclb
dec
in
add
push
jno
add
outsl
jg
lret
mov
shrl
bound
les
iret
push
aad
dec
and
lods
add
mov
sbb
jb
push
sti
sub
cwtl
sti
movb
repnz
sub
xchg
xchg
sbb
clc
out
ret
scas
xor
subb
xchg
pop
adc
jge
icebp
popa
gs
aaa
daa
aam
popf
cmpsb
fdivl
lock
xchg
dec
adc
dec
hlt
out
sub
xchg
jl
adc
mov
push
aaa
in
sub
in
inc
test
out
adc
fildll
pop
sbb
or
fadds
lock
mov
test
push
lock
mov
movsb
mov
mov
lret
adc
xchg
xchg
in
lea
lods
outsb
add
xchg
push
and
movsb
cs
mov
out
mov
sahf
and
lcall
sti
in
minps
jmp
xor
mov
mov
mov
insl
xor
mov
sub
mov
mov
lods
cli
aam
mov
mov
scas
jecxz
cmp
or
hlt
leave
inc
ret
mov
imul
sbb
mov
subl
fsubrl
jnp
mov
scas
xchg
mov
or
fdivrl
outsb
outsb
add
pop
pop
roll
mov
in
sarb
iret
in
inc
mov
or
cld
sbbl
xchg
push
add
and
dec
or
dec
ret
mov
sbb
scas
or
or
mov
cmp
mov
inc
scas
fs
cmp
mov
stc
mov
rclb
insb
xchg
jo
in
das
nop
mov
hlt
hlt
add
stos
cmp
push
scas
repnz
mov
push
cld
loop
stc
lods
aam
sarl
or
stos
rcl
lahf
sbb
pop
and
adc
shl
mov
lods
mov
bound
or
out
push
push
hlt
mov
das
add
enter
sti
inc
sbb
mov
add
imulb
rorl
jmp
mov
and
bound
xchg
sbb
xor
dec
dec
aas
sbb
rcl
jne
sbb
adc
inc
adc
jbe
adc
sbb
aam
leave
iret
ret
pop
popf
out
add
mov
imul
cmp
jg
adcb
scas
mov
shlb
mov
out
push
cmp
movsl
push
inc
mov
add
mov
cmpsb
adcl
or
sub
mov
cltd
fstpt
ljmp
xchg
jo
outsb
and
xchg
xor
xor
cli
pushf
xor
ffreep
imul
je
ljmp
ret
xor
cltd
mov
mov
inc
gs
stos
push
stc
cmp
xor
ficomps
or
cmc
push
push
cmpl
notl
loope
outsb
loopne
jcxz
lock
sbb
inc
out
add
mov
pop
dec
call
aas
jae
das
mov
bound
mov
ud1
scas
lcall
dec
mov
push
and
popf
je
adc
mov
dec
aaa
mov
jbe
push
xchg
imul
adc
leave
enter
and
scas
je
insl
pop
add
test
cmpxchg
test
xor
add
lret
xlat
pop
fwait
popa
jbe
mov
dec
cwtl
pushf
jae
dec
jle
outsl
ss
or
xchg
fwait
mov
push
arpl
mov
xchg
sti
sub
inc
mov
jb
fimuls
pop
ds
bound
test
imul
lods
iret
test
ficoml
xor
lock
stc
mov
popa
out
je
loope
popa
pop
pop
mov
fdivl
dec
stos
fdivr
or
shr
mov
outsl
inc
out
es
std
call
and
fstpl
xchg
repnz
imul
pushf
rorb
mov
nop
sub
lea
imul
outsb
xor
dec
xor
jno
jle
or
sub
popf
xchg
loopne
xchg
int
cmp
sub
mov
mov
push
sub
into
lds
jg
cmp
lea
dec
call
jae
xchg
je
bound
push
adc
imul
inc
jecxz
pop
mov
pop
orl
jecxz
xor
xor
cmp
cmp
or
aaa
and
aam
cmpl
sbb
jnp
or
mov
shll
ficompl
iret
pop
in
pop
mov
mov
and
ljmp
gs
dec
mov
cmp
dec
cmpsl
dec
adc
lds
mov
rcrb
xchg
sub
inc
jns
cmpsl
hlt
shrl
out
ficoml
test
and
pop
jne
lret
loope
jmp
and
fs
push
push
push
clc
or
pop
xchg
cmp
std
js
les
push
hlt
jbe
lea
and
fwait
add
push
mov
push
cmp
sub
insb
fs
jg
xchg
enter
push
rcll
mov
pushf
mov
cmp
xchg
mov
sbb
orl
repnz
and
push
add
mov
es
xchg
mov
enter
mov
xchg
mov
inc
imul
mov
sbb
pop
lods
cmp
fisttpl
bound
js
or
lea
inc
sbbl
mov
in
je
xchg
dec
pop
xor
xor
mov
std
rorb
jb
test
lock
scas
jne
rcrl
out
cmp
gs
loopne
imul
mov
lea
das
push
sbb
inc
cmpb
mov
dec
xor
xor
pop
fistl
icebp
and
dec
pop
in
push
mov
imul
mov
sub
inc
push
cs
lahf
and
sub
std
pop
popa
cltd
inc
cli
stos
jns
stos
push
call
sbb
cwtl
push
call
xchg
or
add
into
mov
or
and
mov
cmpsl
dec
enter
je
shlw
xor
fldenv
fwait
lock
mov
mov
lods
or
cmpl
dec
push
mov
fimuls
repnz
cmp
inc
stc
int
xchg
add
pop
or
jns
jle
fwait
out
sbb
jge
std
xor
std
adc
inc
add
out
and
fstpt
push
cmp
xlat
cmp
pop
push
cld
in
repnz
push
sbb
insl
hlt
insl
add
mov
nop
and
mov
int
xchg
sbb
testl
xchg
lea
lock
sbb
shlb
fldt
or
mov
lcall
aad
clc
out
mov
in
push
and
std
add
je
push
xor
jg
imul
mov
ja
add
hlt
lahf
ljmp
scas
sub
mov
push
cmp
pop
xchg
xchg
pushf
push
adc
adc
pusha
lret
insb
pop
lahf
aam
loop
out
fadds
fildl
jnp
sbb
xchg
and
gs
xchg
movsl
mov
cltd
movsl
popf
nop
dec
cmp
pop
fiadds
pop
ss
daa
test
inc
out
xchg
inc
out
xchg
mov
test
cmp
jge
mov
inc
or
test
mov
sbb
mov
mov
dec
mov
cld
pop
dec
imul
loop
int
mov
lahf
repz
cli
test
adc
inc
int
cmp
cmp
popf
sub
inc
pop
dec
andl
mov
lea
cmp
mov
xor
cltd
or
pop
addr16
mov
ljmp
mov
pop
adc
mov
or
sub
inc
inc
addl
adc
sub
cmovne
xor
push
xor
adc
pop
negl
jns
push
mulb
mov
out
add
mov
adc
mov
sub
in
shrb
outsb
jge
sub
loopne
sub
push
adc
xchg
dec
les
loop
rcll
mov
cmp
cmpsl
sub
iret
add
and
xchg
test
dec
fisttps
iret
xchg
stos
lcall
pop
scas
lahf
dec
clc
insb
push
jle
out
jns
rcl
pop
pop
pushf
and
mov
adc
loop
les
imul
adc
dec
enter
mov
pop
mov
add
iret
inc
loope
stos
shrl
mov
xchg
les
call
xor
or
cld
and
test
dec
pop
shr
ja
cmp
push
in
push
movsl
stos
xchg
push
stc
jbe
dec
data16
pop
data16
mov
xchg
mov
dec
sbb
int3
sub
adc
dec
dec
xor
xor
pop
das
lods
pop
sarl
arpl
icebp
roll
sub
xlat
jnp
fnsave
dec
bswap
imul
fs
rorl
push
adcb
add
addr16
repnz
fsubs
mov
fwait
fwait
aad
mov
js
mov
dec
rorb
mov
ljmp
push
push
pop
out
xchg
push
aad
mov
sub
mov
mov
mov
fwait
xchg
bound
invd
inc
xchg
sub
xor
xchg
int3
stc
xchg
clc
dec
rcr
mov
sbb
fistpll
testb
clc
push
mov
mov
mov
fs
inc
or
sbb
popf
outsb
cmp
pusha
adc
dec
dec
lahf
sahf
lods
pop
pop
pop
pushw
pushf
inc
pop
loopne
push
jae
scas
pop
sub
mov
cli
cmp
inc
stos
jp
push
xor
xor
leave
rcll
mov
xchg
mov
and
cmp
cmc
inc
lcall
inc
cmp
cmpsl
mov
cmp
xor
sbb
dec
xor
leave
test
mov
and
pop
fisubrl
xchg
iret
fistps
pop
sbb
push
aaa
outsb
mov
lcall
sahf
lock
loop
fsubl
loop
ret
lret
test
adc
adc
rcr
jns
test
add
sbb
xor
xchg
fcomip
test
out
mov
adcl
mov
rcrl
loop
lret
jle
push
add
pop
fs
leave
and
mov
mov
ret
xor
sarb
out
shll
dec
aam
inc
fsubl
pop
dec
push
inc
sahf
shll
pop
push
fmulp
outsl
pop
fstl
dec
mov
dec
and
fists
pop
jns
dec
sti
lcall
nop
push
xchg
mov
push
fs
dec
out
cli
sti
fsubrl
into
rcll
test
jnp
nop
jno
mull
dec
dec
push
xchg
dec
bound
clc
fistpll
sti
jbe
mov
mov
or
mov
cmp
jmp
lock
mov
adc
xchg
movsb
loope
pop
dec
loop
insl
xor
das
cli
fildl
or
dec
test
xchg
repz
fsubrp
mov
mov
xchg
daa
mull
fists
push
std
mov
pop
cmpsl
jl
add
push
inc
out
shrb
push
mov
and
xor
test
mov
lock
stos
rolb
gs
dec
and
cld
mov
inc
out
aad
sub
lds
inc
aam
dec
mov
dec
outsb
sbb
pop
add
adc
nop
mov
mov
lods
ret
mov
mov
scas
andb
push
mov
repz
sub
dec
jle
gs
data16
adc
test
or
mov
aam
add
inc
push
stc
out
stos
mov
outsb
xor
push
xor
xor
rolb
pop
cltd
sub
shll
mov
lret
cld
std
aas
pcmpeqb
xor
xlat
mov
jmp
out
sbb
fcompl
aaa
int
movsl
enter
sbb
test
aaa
mov
xorl
or
pop
mov
inc
pop
sbb
daa
push
lret
dec
test
mov
pop
fstl
mov
in
sbb
sbb
xor
cltd
or
sub
arpl
les
xchg
lods
dec
pushf
outsl
jo
shlb
stos
pop
mov
shl
movsb
iret
add
mov
dec
cmp
mov
out
fs
test
xchg
mov
cmc
arpl
pop
push
iret
add
scas
jo
cmp
dec
test
pop
dec
mov
xchg
adcl
outsb
lret
add
addb
pop
adc
cmp
hlt
scas
mov
cmpsl
fwait
adc
xchg
sbb
bound
push
jbe
pop
shll
lret
xchg
lea
hlt
sti
jl
fildll
xchg
pop
mov
sbbb
or
pop
test
iret
pop
jecxz
mov
mov
arpl
mov
shrb
jae
xchg
es
inc
out
inc
or
in
leave
inc
or
orl
cs
jno
stos
jmp
fidivs
xchg
xchg
cmp
and
fildll
std
and
xor
or
dec
shll
ss
mov
bound
mov
rcrb
andl
jg
xchg
out
popa
hlt
xchg
dec
mov
cmc
mov
das
mov
dec
xchg
dec
imul
add
add
daa
das
mov
loope
and
push
mov
inc
aas
cmp
jle
adc
into
mov
lret
iret
leave
lcall
xchg
int
aaa
lods
sub
push
aas
test
mov
mov
sbb
cli
mov
sub
xlat
push
mov
aad
xchg
push
ja
cmp
pop
dec
in
xchg
push
and
int3
mov
imul
adc
lds
rorl
inc
mov
rol
fldcw
shl
or
mov
inc
decl
cli
loopne
repz
pop
mov
fnstenv
adc
adc
mov
icebp
icebp
call
addl
rorl
icebp
dec
hlt
push
cs
bound
cmp
leave
adc
test
and
sbb
push
sub
leave
push
lret
pop
pushf
add
lock
repz
xchg
lods
mov
mov
loopne
mov
cmpsb
adc
mov
jecxz
cmp
mov
jne
popl
xchg
andl
jecxz
inc
int
inc
dec
sarb
mov
jb
ret
push
mov
mov
sti
xchg
ret
add
sbb
loopne
mov
mov
cli
lds
cwtl
sub
jo
cmpsb
jmp
test
inc
iret
cmpsl
sub
adc
dec
fimull
jo
out
leave
andl
sbb
aaa
adcb
ljmp
addl
lahf
and
cltd
in
mov
pushf
or
dec
sbb
stos
add
jecxz
xor
fisubs
bound
enter
mov
insl
fisttps
mov
jne
hlt
loop
inc
shrb
pop
xor
mov
add
sar
jne
lret
mov
add
xchg
inc
aam
push
rcl
xor
xchg
dec
in
inc
frstor
jmp
mov
aad
and
mov
xchg
dec
adc
cmpsl
lahf
sarl
xor
loop
iret
add
std
bound
enter
in
and
clc
scas
lret
adc
inc
mov
xor
or
xor
aad
cmp
subb
ss
sub
xlat
fwait
icebp
mov
sbb
out
add
pushf
xchg
lds
lss
xorl
lods
push
mov
icebp
cmc
push
mov
pop
lods
mov
sub
gs
punpckhbw
invd
cltd
lret
pop
bound
leave
pop
add
push
dec
mov
push
adc
insb
mov
push
cltd
dec
in
outsl
or
mov
push
std
test
and
mov
outsl
push
mov
sbb
sub
and
notl
xor
mov
mov
mov
jo
vorps
outsb
dec
mov
pop
in
fistl
mov
or
sahf
in
cs
das
loope
lret
cs
inc
out
and
test
cmp
ja
lahf
inc
stos
jae
loope
ret
in
xor
ret
xchg
inc
jmp
test
js
les
fdivl
nop
push
fisubrs
hlt
pusha
cli
cmp
aam
jo
adc
xor
xor
jmp
mov
shlb
outsb
cmp
dec
adc
roll
dec
repz
jno
push
pop
inc
pop
push
mov
cmp
xchg
orl
push
or
lret
fisttps
ja
push
les
ret
or
push
out
in
movsb
repz
sarb
cmp
out
js
or
aad
mov
pushf
sbb
dec
data16
pop
add
jg
int
jle
loope
mov
adc
sahf
scas
ljmp
popa
addb
jns
or
in
repz
push
mov
mul
sbb
subl
shl
out
testb
nop
out
cltd
xchg
cli
nop
jmp
das
imul
mov
mov
pop
or
lock
inc
dec
fstpl
fidivrs
es
and
xor
xchg
cmp
jecxz
lahf
icebp
xorl
lcall
lds
adcl
pop
mov
movsl
movsl
dec
mov
sbb
dec
notl
mov
pop
lods
popa
shl
cmpsb
sbb
lahf
lock
mov
cmp
cmpsl
mov
sbb
or
push
inc
lea
fmull
lcall
andb
push
sarl
ret
cmp
enter
pop
sub
xor
inc
icebp
mov
mov
and
cwtl
cmp
out
ss
rcl
pop
mov
icebp
fistpl
in
mov
push
lret
inc
shlb
mov
andl
int3
lret
ficomps
push
xchg
bound
lock
nop
inc
cmp
mov
test
sub
mov
test
add
ja
mov
cs
pop
test
cmpsb
mov
das
xor
jg
mov
mov
fs
in
xchg
imul
loope
adc
lods
and
arpl
push
mov
sub
les
xchg
inc
cmpsl
cmp
pop
ret
bound
iret
out
lea
addr16
adcl
xlat
cmpsl
mov
sti
cmpsl
and
mov
xchg
xlat
xchg
outsb
push
ss
dec
lahf
fcoml
push
insl
addr16
cmp
sbb
pop
adc
pop
test
sub
lret
push
scas
mov
or
adc
add
jae
enter
cmp
scas
sub
xor
rcr
pusha
or
or
push
jbe
daa
in
mov
jnp
fsubrl
xchg
mov
fidivrl
sub
cmpsb
pop
popa
aad
jo
lods
inc
mov
or
mov
pop
xchg
mov
test
icebp
test
clc
andb
mov
xchg
mov
fistpl
addr16
aam
into
inc
pop
out
mov
test
cs
test
or
lods
aam
sbb
and
mov
fcmovbe
subb
dec
out
filds
jo
rclb
mov
push
jno
scas
fwait
das
loopne
push
ficompl
fistps
aaa
ret
aam
test
shl
in
sub
sub
cmpsl
je
fimull
dec
lahf
loope
lahf
cmp
push
ret
or
pop
addr16
call
fdiv
ret
out
lcall
rcl
cmpsl
jp
add
mov
mov
cli
pop
or
fbld
mov
aad
les
dec
jbe
leave
out
bound
lods
test
cltd
push
mov
fs
imul
adc
jecxz
mov
lds
ljmp
push
sub
fdivr
sbb
lds
jl
jp
or
sbbl
xor
adc
stos
shrl
lcall
dec
push
adc
push
cli
xor
or
fwait
loopne
fs
jne
loope
dec
or
pop
out
add
in
sub
rolb
inc
mov
repz
jo
and
fwait
push
sub
mov
scas
lret
push
push
jg
jge
das
lret
mov
mov
cmc
mov
mov
into
xchg
stc
adc
iret
in
mov
jecxz
insb
out
movsb
adc
orl
push
jb
push
cmp
ror
mov
loope
in
jae
mov
jne
cwtl
mov
fldenv
cmp
inc
add
dec
adcb
mov
movl
mov
jmp
inc
xchg
add
xchg
into
push
repz
out
sti
mov
adc
adcb
sub
iret
cmp
or
lods
iret
loope
and
cmpb
xchg
mov
ds
cmp
pop
inc
sbb
ss
push
ficompl
and
and
adc
cmp
xor
mov
lret
test
rcrl
or
imul
jecxz
xor
stos
mov
clc
cltd
outsb
inc
stos
dec
cltd
popf
rcrb
enter
sub
in
into
adc
into
movsb
cltd
insl
out
pop
sbb
nop
mov
movsb
mov
test
sbbb
rolb
iret
and
cmp
outsl
jmp
lret
lods
roll
sbb
push
fnstenv
fsubl
nop
lcall
dec
in
xchg
jae
daa
sahf
mov
adc
repz
push
sti
pop
jp
sub
stos
pop
dec
test
fcmovb
ret
xchg
cmp
dec
push
or
lods
stos
mov
std
in
add
orl
out
addl
pop
negl
dec
pop
fs
and
sub
cmp
out
movsl
add
mov
repnz
mov
cs
push
pmulhuw
push
ljmp
mov
lcall
imul
lahf
imul
lods
movsl
xchg
cmp
jns
shll
mov
sub
icebp
pop
movsb
xchg
mov
inc
mov
int
insl
icebp
bound
cmp
lock
xchg
jmp
dec
lret
add
std
es
pop
popf
add
in
sub
repz
adc
in
aaa
lods
push
dec
mov
pop
adc
xchg
out
mov
xchg
fucomp
add
and
shr
inc
ljmp
stos
hlt
mov
fimuls
fucomip
pop
inc
pop
and
fildll
test
into
dec
ljmp
inc
pop
pop
inc
in
jmp
push
jns
cld
lods
xchg
mov
aas
or
xor
iret
loopne
ret
rol
rclw
dec
pop
fsubrl
ss
outsb
rcl
pop
jno
sbb
lds
filds
mov
xor
cmc
fwait
jns
fildll
mov
ret
fnstcw
jne
or
inc
adc
fidivrs
cmp
push
xchg
stos
sbb
cmp
inc
gs
call
inc
in
jp
int
lcall
outsb
setno
decl
cmp
in
mov
jmp
push
call
adc
stos
stos
mov
cmp
sbb
lods
jmp
jbe
aam
xchg
xchg
cmp
mov
pop
add
pop
pushf
add
xchg
sbb
mov
std
sub
xchg
sub
popf
and
aam
mov
stos
cli
adc
mov
pop
xchg
cld
adc
mov
jne
hlt
inc
jbe
rolb
dec
mov
and
and
mov
iret
loope
test
mov
repz
clc
stc
cs
jmp
orb
xchg
and
into
adc
imul
add
lcall
leave
push
xlat
cld
add
and
xchg
xchg
and
fwait
movsb
xor
nop
loope
push
lea
aaa
leave
ss
xchg
dec
push
add
mov
rcl
xor
push
aaa
or
ret
xchg
mov
inc
mov
hlt
jne
test
dec
mov
adc
pop
inc
inc
mov
mov
fbstp
xor
jne
clc
or
ja
jno
enter
daa
mov
inc
xchg
aam
sti
ljmp
inc
icebp
pop
mov
aaa
add
xor
mov
adc
xchg
add
mov
mov
into
fistpll
and
iret
mov
cmpl
cmc
mov
push
xor
int3
incb
dec
aas
lods
outsb
cmp
adc
dec
leave
movsb
cmp
cmp
scas
fxch
lret
add
dec
gs
fiadds
shrb
and
xor
repz
loopne
fsubl
xchg
push
movsl
dec
fmull
js
aad
inc
jecxz
sahf
fistps
je
jmp
adc
and
leave
or
mov
rol
jmp
fnstenv
and
fcmove
stc
push
jmp
mov
cmp
das
pop
add
mov
push
inc
aam
mov
nop
popa
lods
lahf
mov
mov
dec
mov
jns
fidivrs
adc
xor
iret
mov
dec
ja
out
push
ficoml
cs
push
movsl
mov
sub
insl
je
lock
mov
sub
xchg
push
add
int3
fxam
jne
push
sahf
add
dec
push
adc
cmp
pop
and
or
rcl
xchg
out
fsts
nop
bt
mov
xor
sbb
imul
orl
mov
test
fsubp
iret
xor
add
arpl
cmc
sbb
xor
sbb
test
test
ds
mov
popa
int3
mov
jnp
and
sbb
mov
shlb
aas
dec
mov
loop
mov
or
orb
repz
lods
adc
push
gs
dec
and
dec
add
jno
sub
sbb
dec
push
push
xchg
cmpb
adc
xchg
in
push
mov
push
fwait
and
out
stos
cmc
push
mov
mov
add
pushf
in
adc
xchg
aas
daa
loopne
lret
dec
out
sbb
int
jae
push
nop
aam
es
mov
dec
adcb
pshufw
mov
pop
jp
movsb
outsb
jo
inc
enter
das
adc
add
aas
mov
cld
sbb
adc
dec
lods
xor
xchg
mov
scas
adc
mov
lret
lock
aaa
call
mov
nop
xchg
pop
cmpb
push
mov
shl
xchg
sub
push
jmp
jl
in
mov
mov
and
jp
lds
or
addr16
cld
adc
dec
insl
cmpsl
xchg
mov
movsl
test
mov
cs
cmp
out
rolb
shll
lds
imul
repnz
sti
mov
dec
push
and
addr16
ffree
cld
fcomps
dec
jae
pop
xchg
les
das
je
mov
aad
rclb
sbb
sub
hlt
jecxz
pop
ljmp
aas
mov
gs
in
js
sub
imul
cmp
lds
push
xor
fiaddl
cltd
repnz
pop
stos
enter
filds
lock
push
repnz
jmp
shlb
insl
cmp
mov
cmp
insb
jg
bound
jl
lahf
xchg
ljmp
ljmp
cmp
inc
mov
gs
mov
cmp
push
les
ljmp
mov
mov
dec
pop
outsl
iret
sub
mov
imul
sub
out
mov
xor
cmc
mov
out
lods
push
stos
or
pop
sub
pop
jo
js
xor
loop
fisttpll
jp
mov
stos
ret
sbb
daa
xor
mov
aad
pop
xchg
cwtl
xchg
dec
rcrb
mov
rcll
mov
push
cmpl
les
es
mov
xor
imul
aam
lea
lcall
pop
inc
fxch
and
addr16
mov
mov
xor
rcrl
loop
cmc
sti
iret
inc
xlat
xor
adc
inc
cmp
and
rcrl
rcll
sub
and
cmp
mov
push
inc
mov
mov
pop
nop
jb
lds
pop
shlb
xchg
sub
imul
push
lret
pop
dec
cltd
gs
insb
hlt
lret
shll
inc
push
leave
jne
shrl
push
cmp
ss
add
test
mov
xchg
leave
adc
mov
sub
xor
push
cmpsb
or
fstl
test
fistpl
pop
ror
out
test
pop
xchg
inc
cmpsb
int3
push
sub
in
adc
fnstcw
imul
cwtl
inc
adc
push
int3
fdivr
xor
mov
rcrb
sub
lods
inc
jns
loop
push
es
lret
ret
xchg
xchg
pop
in
cmp
dec
mov
mov
xchg
int
dec
mov
repz
mov
sub
and
xor
jmp
cltd
dec
rcr
xchg
push
mov
into
push
mov
dec
pop
dec
sbb
push
fldl
test
js
inc
push
fiadds
inc
jg
sahf
and
push
or
in
enter
clc
and
ljmp
adc
pop
fsubs
lods
jg
add
pop
imul
test
xchg
test
aaa
xlat
push
mov
sbb
mov
cli
mov
pusha
mov
sbb
and
pop
xor
arpl
cmpsl
cli
icebp
sub
outsb
or
pop
or
sbb
jecxz
cmp
daa
dec
les
shlb
enter
inc
push
inc
rcll
loopne
pop
rep
inc
std
jbe
leave
inc
mov
push
pushf
dec
mov
lods
fadds
and
sub
scas
outsb
push
jnp
int3
jp
sarl
mov
aas
cmp
test
repnz
call
dec
hlt
mov
add
jg
and
das
jmp
scas
stc
add
push
insb
add
out
or
sbb
or
bound
mov
scas
icebp
mov
push
dec
daa
push
xchg
xor
out
movsb
or
dec
pusha
mov
int
xor
xchg
xchg
pushf
cli
js
xchg
cmp
add
bound
push
loope
cli
hlt
cs
xchg
fwait
push
jne
mulb
je
in
pop
sarb
js
inc
fadd
mov
lock
pop
lret
sub
sti
aam
jmp
mov
sti
in
xchg
inc
or
mov
dec
mov
leave
push
in
decb
jle
outsb
inc
jle
sti
enter
and
xchg
iret
pop
lahf
jns
std
jns,pt
stc
or
add
and
fs
adc
lret
popf
xchg
mov
inc
inc
mov
cmp
clc
or
lahf
sub
inc
mov
lock
out
loop
push
or
mov
jno
mov
jg
test
ret
dec
dec
push
adc
lds
pop
sbb
ss
test
lea
jno
test
xorl
pop
fnstenv
cld
mov
cmp
xchg
and
push
ja
stc
dec
aaa
mov
cwtl
mov
lea
dec
iret
cld
mov
adc
lock
ss
cmp
cmp
jnp
cltd
sub
cwtl
cmp
dec
xlat
dec
sub
mov
testl
sahf
in
roll
jecxz
cmp
cwtl
hlt
imul
arpl
je
ljmp
andl
std
daa
mov
clc
or
popw
sti
mov
aaa
add
out
inc
std
and
sbb
inc
mov
jo
and
xor
or
sti
ret
sbb
cmp
test
jno
xchg
push
les
cmp
fldl
in
subb
cmp
mov
or
or
xchg
scas
out
pop
stos
and
addb
imul
stc
repz
lods
arpl
sbb
sbb
adc
mov
mov
daa
add
daa
mov
push
in
inc
clc
daa
popa
mov
clc
mov
mov
les
lods
decl
test
ja
bound
fs
bound
add
xlat
dec
pop
jb
adc
or
aad
mov
adc
mov
aad
mov
xchg
push
stos
jb
inc
jmp
inc
pop
add
inc
fnstsw
int
jns
mov
in
popa
aas
scas
mov
cmp
into
sbb
add
dec
mov
xchg
add
pop
mov
dec
mov
lea
imul
add
cmp
sub
out
push
mov
ds
and
sbbb
pop
pusha
jne
add
shlb
dec
and
popa
mov
sbb
mov
dec
ss
and
cmpsl
rorb
lret
push
push
sub
ret
and
stc
pushf
mov
int3
mov
loopne
mov
sahf
dec
iret
and
adc
and
sti
sbb
adc
and
mov
push
xor
rorb
jmp
sar
add
lcall
inc
js
pop
scas
lds
inc
cmpsl
jns
pop
xchg
adc
or
shll
int
scas
cmp
xor
cli
push
loop
les
fsubrs
and
enter
dec
bound
fidivrl
pop
pop
test
mov
cli
xchg
dec
push
push
adc
mov
cld
sti
dec
jnp
shl
jp
jbe
lods
pop
adc
stos
or
mov
xchg
or
aaa
lods
lret
out
jne
iret
pavgw
sub
shll
push
into
outsb
std
mov
or
rcrb
pop
scas
das
inc
scas
ret
daa
or
mov
loopne
loop
lds
cli
stos
loopne
notl
fistpl
mov
jge
out
jmp
and
jo
push
xchg
lcall
inc
call
jge
decl
pop
stos
loope
adc
into
in
mov
adc
inc
jp
cmp
mov
xchg
sub
xor
mov
add
out
ret
arpl
push
test
popa
add
mov
sub
add
ret
fcmove
loope
fidivl
shlb
xchg
dec
loop
dec
xchg
inc
ret
mov
lret
ljmp
dec
jge
lock
bound
ja
mov
add
dec
mov
sub
push
jne
jg
mov
add
test
push
sbb
ja
cli
repnz
imul
pop
cmp
mov
xchg
inc
cmp
jg
xor
das
std
xor
xor
push
bound
loope
std
xchg
jnp
scas
sbb
pop
mov
xchg
bound
mov
pop
xlat
xor
dec
and
leave
pop
ja
xchg
mov
mov
cmp
adc
cli
and
jp
ret
js
test
mov
pop
outsl
jnp
mov
out
push
aam
jnp
pop
xorl
xchg
cmpsb
dec
inc
and
jg
adc
push
dec
or
push
ja
and
adc
cmpsl
mov
lahf
iret
outsb
cmpsl
loope
push
sub
out
nop
cmpsb
ret
pop
jg
aam
shlb
daa
mov
adc
xchg
loopne
pop
daa
xor
sub
xor
push
cwtl
cmpb
sub
aaa
hlt
pusha
jbe
into
aaa
testl
sahf
inc
aaa
iret
dec
fwait
bound
lods
fistps
icebp
xchg
pop
movsl
roll
or
jns
hlt
push
and
fimuls
inc
hlt
lea
pop
pop
sub
jge
jg
lret
ret
lds
fisubrs
and
sub
push
test
sbb
movl
jae
movsl
ja
call
fdivp
cmp
sub
das
movsl
mov
fsubs
sbb
add
adc
clc
mov
fadds
cmp
xor
mov
cld
sarb
mov
and
ja
add
push
cmp
and
sub
and
rcrb
inc
jmp
lret
into
or
sbb
cli
cmp
inc
push
sub
mov
nop
lahf
inc
jb
and
adc
in
sbb
sub
sbb
xor
dec
iret
jl
or
inc
pop
sbb
sub
loopne
test
mov
in
aam
xchg
insl
add
sahf
enter
push
fimull
xchg
dec
imul
fistl
test
or
sahf
mov
bound
jns
cmp
sahf
jecxz
dec
scas
loop
or
jno
test
cltd
outsb
mov
out
mov
clc
jmp
pusha
dec
add
jae
out
jo
shll
sarb
std
sub
ss
dec
pop
jp
fsubrs
and
jns
out
push
sub
out
xchg
mov
and
test
nop
or
into
shrl
test
cmp
mov
and
mov
cmp
xor
loopne
test
cltd
out
rcr
data16
mov
push
shrl
imul
mov
and
dec
mov
jl
and
daa
lret
dec
aad
push
dec
push
mov
jp
sahf
mov
loope
and
insl
in
ret
xchg
sbb
push
cmp
fwait
out
pop
add
cltd
cmpsb
call
mov
dec
pop
mov
aam
in
out
or
hlt
jmp
sarb
popf
ja
mov
pop
aam
mov
popa
scas
les
dec
in
scas
xor
aas
rsm
lcall
test
notl
test
mov
or
sbb
rolb
mov
pushf
callw
adc
ret
push
shr
push
iret
in
add
xchg
mov
stc
push
mov
xchg
js
xor
arpl
jle
pop
inc
push
mov
mov
sbb
xchg
xor
loope
bound
dec
out
test
or
add
loop
xchg
pop
xor
xor
xor
and
popa
cwtl
dec
fsubp
jle
adc
cmp
jg
or
out
mov
cli
push
dec
mov
lret
or
repz
jg
cmp
xor
fsts
subb
sub
aas
mov
dec
dec
fists
sub
and
pop
int
push
pop
cmp
add
and
cmp
mov
jbe
inc
xchg
xor
test
gs
and
dec
lds
inc
adc
mov
int3
ljmp
push
jmp
adc
arpl
cmp
add
adc
fnstsw
fisubrs
xchg
loope
push
inc
rorb
icebp
mov
sahf
out
mov
popa
adc
fcomps
sti
fcompl
pusha
xor
out
int3
cmp
shlb
stos
push
and
sub
cs
pop
sub
lds
adc
and
mov
jae
pop
cli
or
out
adc
and
stos
cltd
fdivrl
push
mov
rorb
xchg
push
or
adc
jns
mov
xchg
inc
and
sub
pop
or
aas
lods
sbb
stc
adc
insl
and
or
fadds
sbb
push
jns
out
inc
pop
pop
in
test
cwtl
mov
movsl
sarl
cmc
inc
in
pushf
js
pop
add
fsubr
and
jne
fs
cmp
adcb
inc
ss
pushf
scas
ja
jae
addl
xchg
mov
mov
int
mov
xchg
int
add
jmp
push
fimull
fisubl
pop
test
dec
xor
cld
inc
push
or
adc
sub
pop
test
stc
int
nop
addl
aas
push
dec
or
iret
outsb
push
aam
mov
imul
loop
sbb
das
movsb
mov
das
fs
movsb
pushf
add
mov
cli
lcall
ficomps
enter
shll
lea
mov
cmc
mov
lcall
shlb
scas
bound
mov
mov
jl
sti
aam
mov
mov
stos
adc
shr
sub
adc
clc
cltd
test
dec
mov
fmull
cs
add
lret
insl
dec
jp
popa
decl
jno
dec
rcrb
pop
cmp
add
dec
daa
lea
inc
xor
popf
insb
jo
mov
push
push
xchg
test
inc
push
subl
mov
jge
adc
scas
dec
lods
mov
or
adc
je
mov
fstps
lret
shll
and
int3
shrl
push
jnp
cmpb
push
hlt
movsb
pop
push
test
test
pop
push
pop
mov
inc
mov
add
repnz
mov
inc
lea
inc
pop
adc
popf
pop
fprem
ret
in
pop
lock
lock
jno
lcall
mov
xchg
xor
mov
push
jns
sti
out
fwait
inc
shll
out
out
jmp
scas
lret
cltd
out
sbb
imul
push
jne
inc
les
lret
cmc
mov
mov
call
in
push
and
and
aam
loop
repnz
mov
jle
call
cmpsb
ja
mov
insl
dec
mov
cs
mov
lea
gs
xchg
rol
rcrl
pop
mov
popf
sahf
lret
pop
lret
cmpsl
jge
scas
mov
call
rorb
out
call
out
pop
sbb
daa
xor
ret
inc
ds
into
jmp
add
ret
mov
cmpsb
repz
mov
ja
dec
lret
add
gs
sbb
sbb
jb
fistl
fdivrl
outsb
mov
movsl
fimuls
stc
cmp
mov
jbe
and
jo
lcall
xchg
jae
lret
adc
cli
in
iret
in
mov
into
or
mov
cli
fisttpll
mov
mov
xchg
daa
clts
push
push
push
mov
ret
in
inc
enter
sub
dec
call
fninit
mov
cli
test
push
out
jp
sub
push
rcrb
popf
or
enter
mov
nop
pop
adc
in
mov
enter
outsb
repz
dec
imul
fcmovnb
lock
ficompl
push
lret
mov
fidivs
xor
and
cli
lds
ljmp
xor
add
sbb
out
or
lret
or
or
insb
xor
adcl
int
sub
add
mov
ss
fbld
rclb
jecxz
fsincos
push
mov
icebp
pop
add
sbb
or
in
aaa
pop
fdivrs
rol
sub
mov
out
xchg
mov
mov
cmpsb
lahf
pop
testb
inc
sbb
mulps
push
add
outsb
pop
mov
mov
sti
insl
aam
push
mov
lds
sbb
fmull
addb
cmpsl
dec
xor
mov
fcmovu
xchg
call
lods
std
pop
add
imul
scas
fisttps
pop
mov
jg
enter
aaa
popf
or
inc
add
fsubrs
js,pt
adc
mov
in
jecxz
jne
scas
les
push
push
lret
dec
push
test
mov
pop
sub
lahf
inc
nop
cld
int
dec
add
dec
jmp
scas
call
pusha
sbb
jmp
fcomps
mov
and
push
lcall
dec
lret
gs
xor
leave
xor
jge
push
jmp
icebp
xchg
inc
ret
pop
fcompl
aad
pop
fdivrp
sbb
shlb
mov
lret
xchg
movsl
fimuls
test
sbb
pop
ficomps
mov
and
cli
das
inc
pop
daa
dec
popa
bound
sarl
push
into
test
xlat
loopne
insl
push
ds
lret
movsb
xchg
push
jge
je
xchg
orl
rcrl
js
in
and
sarb
jae
push
push
jo
push
out
jmp
push
enter
test
inc
mov
xchg
cmp
push
inc
ret
pop
pop
mov
loope
push
popf
ljmp
jne
orb
or
in
je
jmp
aad
xor
cmp
out
dec
pop
cmp
push
rclb
xor
outsl
enter
push
or
sub
cmc
sbb
xor
adc
add
add
mov
adc
jmp
pop
jmp
test
out
pop
rcll
cwtl
test
lea
ficomps
sub
adc
sbb
loope
dec
out
mov
mov
push
inc
cmp
jle
gs
jmp
cmp
cwtl
dec
jmp
dec
pop
aaa
iret
push
push
lds
popa
daa
clc
movsl
xchg
in
cwtl
mov
xchg
sub
loop
sub
aad
lret
add
jge
dec
adc
or
xor
ds
gs
dec
outsb
adc
add
cmp
sti
lods
mov
outsb
mov
cmp
hlt
mov
xor
mov
lods
inc
mov
ret
cmp
jno
mov
lret
sar
inc
subl
inc
or
mov
dec
xor
daa
sub
jecxz
lds
adc
dec
cld
lahf
stc
mov
or
mov
movsb
mov
pop
clc
addr16
les
xchg
ret
ja
and
aam
jnp
xor
or
mov
mov
aam
scas
xrelease
jmp
and
sar
jne
inc
jge
jns
aaa
imul
xchg
data16
fbstp
aad
test
lret
mov
xor
sbb
jb
and
push
test
fs
das
xchg
loop
std
jle
pop
sbb
sahf
fwait
stos
out
int
inc
or
fucomip
orb
add
mov
adc
mov
push
es
mov
xchg
pop
and
cltd
aad
fisttpl
out
gs
lock
inc
insl
cmp
jl
lock
test
shrl
xchg
adc
push
lock
lahf
dec
pop
out
xchg
lods
cmp
adc
dec
pop
cmp
mov
fwait
pop
xchg
and
jbe
push
mov
jbe
ss
negb
imul
mov
incl
mov
push
push
mov
roll
xchg
pushf
in
mov
aam
push
mov
enter
jno
insl
add
mov
adc
lock
fistl
and
lret
dec
daa
scas
cs
push
adc
js
mov
adc
cmp
mov
xor
test
cltd
in
cmp
fwait
or
cltd
lea
out
icebp
jl
movl
sub
cmc
scas
cmp
into
dec
test
ds
or
xchg
push
jle
sub
int
fdiv
negb
and
and
in
incl
leave
aas
inc
lds
cltd
sub
ret
inc
roll
pop
mov
mov
sbb
sbb
pop
std
stos
dec
leave
icebp
mov
out
mov
jecxz
push
add
lods
sarl
push
pop
out
popf
inc
mov
or
xchg
adc
xor
fidivrs
ljmp
xchg
inc
stc
fdivrl
mov
xchg
cmp
mov
ljmp
push
lea
in
jns
rorl
add
xor
xor
and
aad
xchg
aad
add
mov
in
ret
lds
mov
sub
ret
xchg
mov
fmuls
and
and
pop
pop
xchg
pop
in
cmp
cli
loope
mov
loope
dec
es
loope
jno
inc
scas
mov
shll
push
fs
push
mov
adc
divl
lods
fists
add
or
fwait
leave
lret
lahf
xchg
xor
mov
jbe
mov
out
adc
jnp
je
xchg
adc
pop
mov
cmpsb
push
mov
or
or
jno
loope
push
xor
mov
sbb
mov
xchg
pushf
xchg
jbe
jl
add
mov
cli
loope
dec
insb
and
adc
in
push
mov
lea
add
test
push
mov
sbb
mov
mov
xchg
xchg
scas
ret
movsl
iret
lret
into
aaa
lcall
out
out
fyl2x
nop
and
lahf
fcompl
sub
test
nop
mov
xchg
pop
cmp
jge
xchg
popa
loopne
int3
std
lret
or
arpl
dec
addb
add
push
mov
rcr
sub
rcrb
inc
or
inc
in
dec
fldt
inc
shrl
inc
loopne
repz
adcl
pop
int3
outsb
repz
jbe
sti
dec
call
daa
or
repz
out
xor
mov
and
out
dec
mov
daa
mov
sub
mov
jns
sbb
test
jo
xchg
ljmp
cmp
push
mov
in
pop
adc
inc
push
ss
decb
mov
mov
push
and
mov
shrl
int3
faddl
push
push
cmp
out
and
mov
jnp
orb
xchg
adcl
mov
push
es
shrl
frstor
pop
inc
arpl
sbb
cmp
fdivl
cmp
and
mov
adc
shrb
cmp
fs
jae
cmpsl
aam
sub
add
dec
cmp
roll
mov
xchg
outsl
mov
xchg
xor
ret
ret
push
xchg
jmp
aam
dec
ret
xchg
test
add
jecxz
mov
sub
test
inc
test
lea
out
ljmp
push
jns
hlt
pop
iret
and
jmp
jp
std
repnz
jg
es
roll
repz
xchg
stos
adc
setae
leave
xlat
jne
xchg
mov
scas
jno
sbb
imul
xor
mov
xor
sbb
fisttpll
xor
addr16
cmc
ror
addr16
cmp
dec
adc
daa
out
ret
fs
leave
jmp
xchg
call
cmp
out
repnz
sub
das
andl
inc
xchg
out
fwait
hlt
push
sbb
iret
mov
jnp
adc
cli
cmpsl
sub
mov
jne
add
bswap
push
xor
jge
flds
pop
inc
imul
in
insb
add
mov
test
aaa
mov
loop
xchg
mov
xor
imul
mov
fstpl
push
jmp
pop
testb
mov
and
pop
sbb
mov
repnz
sub
add
lods
scas
lds
pop
loop
mov
and
aas
fld
mov
cld
test
mov
push
fsubrl
das
fwait
xlat
mov
and
hlt
xchg
std
insb
jmp
movsb
cmp
sub
cmpsb
stos
adc
add
popa
xor
je
iret
xlat
lock
daa
dec
mov
jb
cmp
js
mov
lret
call
pushf
out
cwtl
cmp
hlt
fistps
and
jae
andl
int
sub
lret
inc
sbb
xor
xor
mov
mov
jmp
mov
xchg
enter
pop
sahf
xchg
cmp
sarb
jmp
call
sub
dec
push
cmp
xchg
adc
imul
and
imul
or
mov
xorb
out
mov
clc
shl
insl
test
push
mov
dec
rcrl
inc
lea
in
fdivl
popf
mov
imull
dec
lea
aas
lcall
push
cs
or
sbb
pusha
sbb
leave
cltd
pushf
lods
shlb
fld
aaa
icebp
push
rclb
push
andl
clc
and
stc
lods
dec
xchg
pop
movsl
mov
rcrl
fisttps
xchg
mov
or
outsb
jg
arpl
lahf
dec
call
mov
ror
jno
das
mov
mov
xorb
cmpsb
sub
divb
or
aaa
imul
push
push
jp
cmp
push
xor
pop
push
mov
stos
bswap
imul
imul
sarb
mov
mov
xchg
in
cmpsb
mov
mov
xor
shrb
les
test
sbb
outsl
fs
nop
movsl
int
xchg
subl
ljmp
push
jl
or
loop
ds
add
frstor
or
lock
pop
rcrl
outsb
addr16
inc
dec
fiaddl
stc
out
cmp
enter
or
xchg
xor
lret
xchg
dec
pop
repz
mov
add
test
icebp
test
ret
dec
cmpsl
lret
mov
adc
cmp
hlt
cwtl
xor
iret
loop
cmp
pop
cmp
add
out
jmp
sub
in
push
mov
out
or
dec
out
mov
mov
ret
mov
xor
in
ror
push
jmp
and
mov
or
lods
test
push
cmp
sti
or
cli
int3
bound
stc
inc
jno
sahf
pop
subl
in
mulb
xchg
cmp
fiadds
lods
cmpsb
mov
sub
xor
jb
mov
sub
hlt
stc
mov
dec
sub
sub
fwait
jo
leave
or
jbe
add
sub
int3
and
insl
or
stos
mov
dec
mov
je
dec
enter
or
mov
scas
decb
unpcklps
mov
mov
out
push
adc
cmpb
stos
mov
adc
ds
into
test
movsl
mov
cmpsl
aas
mull
mov
stos
xor
jl
js
fs
aas
loope
es
mov
adc
pop
push
scas
and
lret
cmp
jb
xor
or
xchg
mov
stos
cmp
inc
jns
cmp
cmp
hlt
add
iret
movsl
dec
loopne
rorb
mov
mov
jmp
push
cwtl
call
xor
enter
adc
loope
stc
mov
aas
addr16
popa
ret
adc
and
les
sub
mov
sbb
add
mov
adc
leave
sub
js
sbb
sub
or
jmp
arpl
cmpsb
das
xor
xor
add
pop
pop
lret
faddl
push
test
or
mov
cs
xchg
push
outsl
adc
mov
fistpll
and
imul
and
add
mov
xchg
fimuls
add
fcmove
jp
mov
ret
ret
test
pop
adc
sbb
sub
andb
ret
mov
push
dec
daa
inc
mov
dec
addr16
nop
or
in
mov
dec
daa
in
popf
dec
jl
or
sti
sub
sahf
mov
insl
shll
popf
mov
push
sbb
xchg
nop
pop
and
mov
cmp
stos
sub
jmp
mov
push
mov
pop
xchg
jge
cmp
cmpl
test
fldenv
lcall
ss
rcrl
pushf
iret
scas
sbbl
mov
cld
dec
inc
les
stos
push
leave
cmp
mov
loopne
mov
fwait
mov
pop
dec
int3
push
lea
sbb
push
sbb
adc
fcmovne
or
mov
push
js
xchg
imul
fsubrs
xchg
xchg
sub
imul
adc
jg
stos
or
lcall
jle
pushf
and
pop
aam
dec
pop
outsb
pushf
jg
mov
in
or
xchg
loopne
outsl
in
clc
lea
xor
jae
scas
lods
cmp
sti
mov
ss
dec
mov
inc
mov
push
fwait
ds
lcall
xchg
mov
aam
mov
push
push
cmp
popa
fmull
xchg
jbe
call
inc
aas
cs
repnz
lods
sub
ss
insl
sti
inc
xchg
scas
int3
mov
movsb
dec
cmpsl
hlt
or
push
mov
mov
cmpsl
outsl
clc
lret
repnz
jg
cmp
sbb
push
xor
shll
out
stos
das
imul
rcrb
mov
jg
inc
sbb
cmp
jle
push
outsl
movsl
inc
mov
push
add
xchg
sbb
and
sti
in
or
xor
pop
addr16
test
pop
pop
pop
das
arpl
add
cld
sbb
mov
pop
inc
mov
cmp
and
das
mov
mov
push
push
xor
jns
faddl
dec
fnstcw
push
sbb
xchg
mov
fs
enter
cltd
rcll
in
popa
mov
xchg
or
daa
xchg
sbb
add
mov
push
cmp
jb
fs
ljmp
loope
outsl
push
xchg
xor
lret
jle
xchg
daa
das
movb
pop
in
rolb
in
adc
movl
add
cli
push
mov
loop
mov
add
inc
cmc
mov
roll
das
pop
cmc
pushf
inc
xchg
repz
pop
dec
sahf
mov
or
mov
arpl
cmp
rol
fists
mov
pop
test
pop
adc
nop
sbb
fildll
pop
gs
repz
in
push
xchg
pop
jo
pop
push
loop
test
in
push
cltd
adc
sub
mov
ljmp
cmp
int3
bound
mov
sbb
sub
std
bound
in
pop
xlat
in
mov
cmp
aas
test
add
imul
repz
loop
push
flds
adc
test
push
ret
xor
mov
ret
mov
out
ja
sarl
sub
lret
sub
ljmp
xchg
jg
test
add
jo
inc
clc
ret
sub
add
lret
adc
mov
pop
mov
mov
movsb
pop
fbstp
cli
into
push
adc
jmp
inc
int3
sbb
push
adc
push
inc
cltd
jmp
xor
stc
hlt
xchg
mov
nop
arpl
push
dec
add
sub
mov
nop
cmp
add
inc
push
les
rcr
fimuls
cmp
in
test
lock
push
mov
cmp
mov
pop
sbb
repnz
pop
pop
ja
sub
out
add
add
xchg
lret
loope
cmc
frstor
adc
mov
xchg
adc
fcmove
sbb
inc
and
jns
outsl
xchg
adc
mov
xor
movsl
lahf
mov
push
dec
cmpsb
iret
jmp
loop
imul
lock
push
sbb
pop
sbb
imul
mov
and
cmpsb
and
xor
lret
les
push
inc
into
dec
daa
push
mov
sub
sahf
sbbl
pop
cmp
in
mov
cmpsl
push
push
int
adc
mov
lret
fdivrs
into
jle
lahf
xor
or
dec
enter
cwtl
ret
push
loope
pusha
push
xchg
sub
xchg
push
stc
add
gs
shrb
loope
leave
xor
fstps
movsb
xor
dec
and
pop
or
jb
add
in
test
lahf
cwtl
mov
dec
mov
sbb
shll
cwtl
test
icebp
iret
push
push
dec
les
in
and
mov
sbbl
lock
and
jmp
iret
lea
into
push
mov
outsb
mov
js
mov
add
mov
jl
shlb
cmc
sub
mov
dec
pop
in
leave
adc
fimull
iret
xor
cmp
das
mov
sahf
cmp
decb
rol
stos
xor
aaa
ret
and
sbb
mov
xor
xor
xchg
test
dec
push
leave
push
mov
and
ret
xchg
mov
dec
jl
pop
aad
jno
cmp
clc
nop
lods
clc
and
xchg
inc
xlat
add
into
and
xchg
arpl
mov
aaa
mov
sub
fsts
out
push
sti
cmp
daa
in
push
popa
jmp
pop
ds
jge
pop
inc
aad
bound
test
xchg
test
sbb
jl
push
test
sahf
aad
jo
mov
mov
mov
xor
and
mov
lds
negb
aas
dec
xchg
repnz
test
sbb
jno
incb
or
jmp
cmp
arpl
xchg
mov
sub
pop
roll
mov
pop
or
or
cld
incb
pop
dec
cmpsb
inc
inc
adcl
xchg
xor
dec
mov
inc
pop
stos
cmpsl
cmpsl
mov
and
stos
and
ds
cmp
jb
dec
popa
ret
nop
cs
and
ljmp
sbb
add
int3
test
cmc
jp
mov
mov
cmp
mov
xlat
mulb
mov
rcrl
ss
shlb
ror
mov
fisubl
cltd
mov
pop
lret
xchg
xchg
pop
dec
and
std
mov
and
loope
into
pop
push
stos
clc
je
and
push
or
dec
or
pushl
stc
pop
fdivl
fs
mov
cmpsl
js
mov
imul
popf
cld
add
iret
xchg
jge
push
aaa
scas
imull
adc
inc
aas
pop
loop
jmp
mov
rol
sbb
insb
mov
loopne
xchg
iret
sbb
sbb
jnp
mov
xchg
lcall
clc
cli
shll
jp
cli
jnp
int3
pop
test
or
daa
dec
pop
inc
or
pusha
jp
fadds
popf
sti
cli
je
mov
or
add
sbb
bound
jo
xchg
ret
rcrb
add
popf
int
cmp
jle
and
out
xchg
mov
adc
jp
enter
addr16
xchg
push
repz
out
int3
negl
cmp
jg
ljmp
mov
loop
sub
inc
push
test
leave
cmp
cwtl
cwtl
mov
aaa
lods
mov
pop
xor
mov
imul
les
inc
into
dec
mov
sub
rcrb
bts
rsqrtps
add
mov
pop
push
cld
cmp
and
and
lcall
movsl
xorl
aaa
mov
mov
xchg
xchg
mov
sub
movsb
dec
stc
addr16
ljmp
jbe
scas
mov
mov
pushf
lcall
out
jne
dec
xchg
mov
lret
loop
ljmp
stos
dec
push
aad
imul
lea
xlat
adc
cmp
xchg
and
int3
in
imul
jecxz
and
je
dec
cmpsb
mov
dec
push
dec
mov
outsl
nop
pop
sbb
push
mov
dec
mov
cmp
mov
xchg
cli
cmp
fadd
imulb
inc
mov
push
aas
into
loopne
and
test
fmuls
aas
xor
xor
jae
mov
es
ficoml
rcll
jne
aas
pop
xor
dec
mov
add
test
es
push
shr
cs
movsb
fs
mov
les
mov
int
mov
xor
xchg
jns
mov
insb
xor
ljmp
imul
lret
clc
cmp
push
into
inc
mov
cli
mov
fsts
jecxz
dec
addl
push
xchg
push
mov
leave
ljmp
cld
das
mov
inc
iret
mov
dec
faddp
jns
push
jmp
xor
inc
sub
insb
inc
jbe
enter
sub
cmp
adc
and
inc
jno
hlt
stos
loop
ja
popa
jge
into
nop
sbb
daa
ss
sub
in
aam
pop
les
adc
mov
cmp
xor
or
shll
int
dec
cmpsl
insb
jl
dec
xor
icebp
jb
in
jge
jne
xor
mov
loope
or
dec
and
pop
sti
inc
pop
cmpsb
xchg
fildl
mov
into
jo
inc
and
adc
es
add
pop
in
mov
cmp
sbb
or
data16
cmpb
mov
xor
fwait
aad
fsubrs
mov
fmuls
mov
daa
std
jl
push
fdivrl
mov
push
dec
hlt
lret
rorb
adc
clc
xor
movsl
inc
out
mov
jne
sub
leave
push
pop
sbb
sub
push
loopne
mov
adc
pushf
jno
lcall
add
loope
adc
clc
add
icebp
xorb
cltd
push
loop
xor
jmp
rolb
sub
mov
jne
scas
mov
mov
jle
ret
mov
xchg
xchg
test
jle
andb
dec
clc
sub
push
push
loopne
arpl
cmp
push
in
xlat
adcl
and
xchg
jnp
in
lahf
mov
lock
cmp
mov
cmp
leave
scas
mov
mov
out
jbe
popa
xchg
and
ret
aad
sub
pop
jle
jns
leave
xchg
sahf
lock
dec
cmpsb
push
sbb
iret
std
push
cmp
xchg
xor
scas
mov
push
mov
jne
loop
fildll
add
cmpsb
or
mov
les
jmp
xchg
ljmp
lods
lods
aad
ss
jle
les
or
mov
stc
in
stos
fcmovnbe
mov
out
les
inc
test
pop
pop
inc
or
adcl
movsb
mov
popf
push
sub
imul
jb
jmp
mov
std
sub
dec
imul
pop
mov
push
xor
mov
imul
add
movsl
imul
jbe
das
popf
pop
xchg
xor
sub
sub
mov
aas
andl
jne
sub
mov
mov
mov
aas
mov
jb
jb
xchg
mov
andl
push
push
mov
lcall
sub
test
inc
nop
xchg
pop
loope
mov
add
repz
mov
iret
imul
ret
js
faddl
mov
pop
lahf
outsl
ss
xor
mov
out
out
jno
dec
mov
jmp
lret
jns
imul
mov
loop
add
inc
lds
lods
and
mov
movsl
outsb
inc
icebp
repz
test
sbb
sbb
dec
int
mov
and
loopne
iret
xor
xor
leave
add
or
mov
push
sarb
shl
fisttpll
js
enter
aam
mov
lret
mov
jp
out
sbb
iret
inc
insl
sbb
adc
fwait
jo
cmpsb
insl
sbb
cmpsb
xor
xor
push
xchg
xlat
adc
cs
cmp
fsubrl
inc
or
test
testb
loopne
push
xor
dec
xor
call
pop
and
mov
inc
popf
push
inc
mov
push
mov
test
aad
fdivrs
push
adc
and
movsl
mov
arpl
rcrb
in
imul
xchg
test
dec
enter
movsl
add
push
cmp
mov
sbbl
int
lock
jbe
push
lea
rorl
inc
cmp
pop
xor
and
lock
or
lret
xchg
ljmp
rorl
decl
scas
gs
call
mov
decb
cmp
loop
xor
int3
mulb
add
movntq
mov
lahf
in
inc
arpl
insl
cmpsl
xchg
add
mov
jl
xchg
dec
dec
mov
sti
adc
add
pop
dec
out
inc
insb
outsl
int3
sub
insl
xor
and
mov
cmc
dec
adc
arpl
fiaddl
jg
xchg
in
jns
pop
lret
dec
mov
ficoms
xlat
xchg
sub
xor
ret
add
mov
pop
sub
pop
pop
mov
cld
in
xorl
orl
int
mov
in
xchg
enter
sbb
push
lret
sub
jb
fwait
test
gs
out
sbb
sbb
pop
test
arpl
es
push
sub
das
push
jo
mov
idivb
adc
sbb
outsl
inc
filds
pop
popa
mov
xor
xchg
mov
lea
subb
xor
lahf
loopne
mov
inc
pop
jns
out
xchg
sbb
xor
lock
cvtpi2ps
cmp
and
cmp
xchg
jns
push
push
mov
mov
clc
mov
inc
out
idivb
push
cmc
inc
xchg
jbe
adc
into
mov
lcall
stos
or
leave
or
inc
pop
xorl
div
xchg
in
sbb
aad
lock
and
add
pop
pop
aad
jmp
add
push
push
jg
or
jmp
mov
out
cs
inc
and
cmp
lret
mov
pop
xlat
js
add
arpl
mov
lcall
cltd
inc
imul
adc
xchg
in
cld
ljmp
dec
shlb
leave
cmp
jae
pusha
ds
push
in
aam
cmp
cld
fbld
push
mov
inc
out
inc
daa
jne
xor
xor
adc
mov
cwtl
leave
sbb
cmp
cld
cmp
in
push
popf
popa
and
jmp
xchg
shrb
xor
or
xchg
test
shrb
adc
xchg
xor
mov
in
repnz
bound
aam
adc
sbb
cmp
pop
push
pop
fs
sbb
loope
pop
inc
fs
repz
sbb
or
icebp
in
lea
fwait
push
sub
and
push
inc
push
arpl
imul
scas
lcall
rclb
add
dec
and
xchg
pop
dec
fistpll
les
cmc
test
jbe
repz
adc
popf
inc
rcrb
fcmovnbe
mov
incb
mov
out
int3
push
out
xchg
test
cmp
mov
movsb
lock
mov
adc
stos
sbb
push
push
lret
loop
loope
jge
ret
sbb
je
dec
or
xchg
jp
jg
scas
stc
popl
mov
or
sbb
jmp
out
shrl
outsb
jmp
push
push
inc
push
adc
cmp
mov
pop
pop
mov
sbb
sarl
dec
mov
fsub
inc
add
punpckldq
xor
xchg
aaa
mov
dec
movsb
sub
mov
movsl
jl
lods
push
sbb
fnsave
stos
inc
negl
xchg
scas
out
push
mov
push
jae
lds
dec
notl
cltd
ret
cmc
ja
jmp
or
insl
aam
fucomp
inc
enter
jmp
jbe
or
addb
mov
xor
rcll
mov
cmp
adc
pop
scas
sub
insl
ja
add
mov
outsl
sub
mov
sbbl
cmp
clc
jae
pop
in
mov
test
stos
xchg
xchg
adc
lods
mov
pop
out
lahf
ret
out
out
inc
push
movsl
rcl
ljmp
jnp
cmpsb
je
cltd
pushf
nop
add
mov
mov
add
popa
pop
sbb
mov
nop
mov
xchg
sbb
inc
jo
orl
mov
test
subl
inc
fadd
jmp
mov
add
sbb
bswap
dec
testb
dec
pop
bound
test
sarl
sub
push
gs
inc
out
aad
in
rorb
cmc
int
gs
jns
into
push
out
cmpsb
mulb
inc
dec
test
jo
lea
pop
cmp
lcall
icebp
stos
insl
lret
jb
inc
loopne
lods
add
sbb
cmp
sbb
cmp
icebp
push
mov
add
inc
rcrl
sub
and
sub
stc
movsb
jb
and
push
sub
mov
inc
mov
and
mov
cwtl
jmp
jge
pop
mov
in
mov
xor
and
mov
cwtl
addl
inc
outsl
mov
fidivrs
ficoms
arpl
cwtl
jno
leave
in
cmpsb
mov
add
nop
fisubrl
jle
aas
cmp
pop
fs
das
push
jle
fldenv
add
add
mov
aaa
popa
pop
lahf
stc
dec
jae
push
rep
jns
dec
repnz
out
iret
dec
lock
and
and
lret
cmc
mov
pop
push
lock
aas
inc
lcall
out
xchg
icebp
mov
push
xchg
add
and
and
nop
push
test
inc
cltd
dec
and
enter
pop
push
inc
mov
add
in
clc
inc
in
mov
daa
and
cmp
cmc
dec
pusha
or
je
sbb
inc
xor
in
iret
mov
mov
clc
push
das
add
jp
jge
cltd
or
aam
cld
test
mov
ja
add
pop
loope
sbb
sar
mov
or
xor
fldl
xor
pop
es
xchg
fwait
mov
pop
adc
sub
push
xchg
adc
cs
xlat
sti
cltd
mov
inc
mov
lea
lret
inc
cli
mov
or
clc
ret
jmp
adc
add
dec
pop
mov
fistps
les
xor
xlat
arpl
xor
test
cmpsl
sub
or
shrl
adc
inc
pop
cwtl
fsts
xchg
sbb
xor
call
and
mov
lahf
gs
ljmp
cmp
push
adc
push
mov
or
popf
adcl
mov
fwait
sbb
cmp
outsb
scas
dec
mov
or
push
push
xor
jb
mov
mov
jp
fiaddl
dec
sbb
test
ja
mov
jbe
jae
or
fstpl
xor
xchg
sahf
lock
mov
es
movsl
xchg
mov
and
jb
mov
sti
icebp
add
inc
sarb
inc
sbb
bound
jne
scas
fldcw
fmulp
setg
in
lret
push
cmp
pop
and
daa
imul
pop
sahf
cmp
mov
ja
jno
push
pop
add
push
idivb
repnz
sarl
mov
out
jge
pop
sbb
dec
in
imul
outsl
insl
je
lods
jo
imul
lods
and
lea
mov
mov
jae
aaa
shrl
cmp
fxtract
pop
dec
sub
xchg
xchg
and
dec
push
dec
mov
leave
cmpsl
icebp
mov
enter
push
aad
jecxz
addr16
dec
jl
mov
adc
std
push
mov
jns
icebp
jmp
add
xchg
push
std
push
adc
jl
cmpsb
xor
fldl
js
sbb
mov
or
fxch
pop
xchg
pop
test
add
lahf
je
cmp
mov
inc
int3
jge
dec
mov
cmp
fimuls
push
fists
sub
sti
or
mov
or
movsl
enter
jnp
adc
pop
daa
inc
cltd
fldenv
cwtl
or
xchg
popa
mov
insl
mov
sbb
adc
and
out
imul
cmpsl
mov
xchg
xor
cmp
ret
cltd
dec
mov
adcl
test
movsl
jmp
pushl
hlt
sub
out
pop
stos
push
inc
movb
les
xor
xchg
outsl
pop
cvtpi2ps
mov
jecxz
jg
lock
popa
insl
mov
mov
fnstsw
outsb
add
dec
push
pop
icebp
or
loope
pop
psubsb
add
addr16
push
pop
adc
push
nop
scas
adcb
in
in
xchg
cmpsb
scas
shll
mov
dec
ds
inc
loope
mov
call
push
lahf
add
jne
dec
outsl
fdivr
mov
shrl
cmc
cmpsb
nop
lret
push
push
aad
sbb
push
movsl
fldln2
inc
repnz
and
in
inc
addr16
mov
ret
rcll
rol
xchg
mov
outsb
sbb
and
mov
test
cltd
lret
push
dec
pop
and
fnstsw
rcrb
xchg
dec
pushaw
adcl
add
cmp
cs
pop
loope
cli
jp
imul
test
pushf
faddl
mov
scas
lock
rcl
sub
jecxz
in
adc
lds
jb
data16
je
adc
outsb
xchg
stos
jl
dec
int3
lds
je
push
inc
mov
je
out
roll
xchg
popf
in
movsl
ja
or
ud2
fldt
jmp
ds
xchg
frstor
jno
in
test
cmp
pop
sahf
sub
lods
lods
into
mov
push
add
iret
jb
ror
cltd
jo
leave
iret
outsb
pop
add
xor
mov
dec
je
stos
inc
xchg
in
push
clc
call
rcrb
push
cmp
mov
mov
fidivl
adc
leave
fsubrs
adc
cwtl
cmp
or
jp
pop
repz
jae
hlt
cmc
lock
dec
sbb
mov
test
jne
lahf
cmp
add
inc
clc
lods
adc
mov
xchg
mov
xchg
and
shll
mov
mov
xchg
out
mov
movl
xor
mov
pusha
xorl
cmpsb
leave
pop
loop
inc
and
fsubs
jo
in
jnp
daa
or
fs
int
adc
xchg
in
jno
pop
dec
xchg
jge
fstps
dec
ja
clc
xor
mov
inc
dec
out
xor
lds
inc
ret
test
inc
mov
cmc
adc
xchg
lds
pop
jne
pop
push
inc
std
mov
mov
xchg
dec
mov
and
movsb
xchg
lods
imul
out
clc
addb
jge
mov
ss
jb
mov
jbe
leave
mov
popf
mov
rcll
mov
xor
lods
add
iret
xchg
sti
ds
jbe
xchg
icebp
pushf
jb
xor
scas
fbstp
fs
mov
jae
adc
xchg
sub
fsubs
and
mov
lock
test
sub
or
fdivr
mov
or
das
mov
cwtl
mov
pop
sbb
jecxz
cltd
xchg
mulps
or
pop
xchg
sahf
sub
outsl
or
out
daa
leave
mov
aas
sbb
stos
jle
fwait
xchg
xorl
mov
fdivl
bound
imulb
je
jnp
rcll
ret
les
xchg
mov
mov
xor
aaa
cwtl
mov
jmp
xchg
mov
rcll
shll
movb
mov
xor
push
test
in
mov
popf
lea
cld
in
or
popf
dec
xchg
xchg
jl
insl
in
rclb
sbb
or
ss
ja
fsub
fs
jg
daa
mov
push
dec
sub
imul
mov
mov
xor
leave
popf
gs
mov
call
movsb
imul
inc
cs
mov
xor
test
mov
nopl
cwtl
adc
icebp
push
call
mov
insl
and
lods
push
aas
or
out
jbe
adc
cmp
sbb
cmp
pop
rol
sub
sbb
mov
xor
xchg
xor
adc
lea
std
cmp
xlat
mov
mov
or
sub
roll
xchg
outsl
les
bound
rorb
xchg
lahf
icebp
mov
mov
es
jns
add
pop
hlt
cwtl
fiadds
mov
das
push
sub
mov
push
inc
push
shlb
sbb
mov
sub
inc
icebp
pop
leave
fwait
add
mov
mov
mov
clc
lea
les
pushf
push
cmovae
flds
lods
push
sahf
inc
jmp
call
mov
ljmp
lds
in
arpl
or
mov
test
jge
into
or
into
or
leave
add
jp
cmp
fadds
sub
inc
and
aas
dec
arpl
scas
mov
iret
inc
xchg
or
cvtdq2ps
and
insl
lods
pop
into
push
jo
aaa
sbb
fcoms
and
or
push
sarb
inc
jecxz
pusha
ret
insl
jp
and
push
jb
ja
ret
sub
mov
xchg
in
leave
lds
jns
jne
popf
ss
xchg
mov
test
mov
cmp
dec
jl
dec
rep
aaa
movb
xor
pusha
and
pop
sub
push
cld
push
outsl
add
and
push
sbb
icebp
fdiv
mov
and
jno
mov
xchg
cmp
fcomip
fisubs
lahf
adc
dec
mov
out
lret
sbb
or
aas
out
call
xor
daa
jmp
aam
mov
fbld
insl
xchg
jle
or
sub
xorb
ret
int3
and
rclb
test
push
jmp
loope
jnp
les
cmpsb
push
inc
sti
sub
sbb
stos
fildl
imull
push
fs
xchg
adc
icebp
jmp
jp
fdiv
jg
push
sahf
mov
adc
mov
aad
lods
add
movl
repz
mov
pop
jb
inc
stc
push
fadd
add
pop
inc
mov
out
lock
inc
mov
add
scas
mov
mov
fisttpl
hlt
test
sbb
popf
inc
incl
or
and
icebp
popa
inc
cltd
out
incl
jle
and
into
jle
subb
addl
das
repnz
pusha
sti
add
fists
push
xchg
testb
pop
fwait
cwtl
ja
push
sub
mov
add
fcmove
jg
xorl
lock
pop
pop
int
lock
cmpsl
lret
push
scas
popf
mov
rcrl
cmp
popa
mov
inc
clc
or
xchg
cmp
and
jo
and
dec
fwait
stos
mov
jl
inc
stos
push
sub
sub
jnp
repz
pop
fwait
mov
add
rorl
xor
lods
xchg
inc
shrl
sub
mov
and
dec
mov
lret
fildl
and
jb
rorb
fcompl
hlt
pop
cmc
leave
movsb
clc
out
rcll
es
popa
pop
call
mov
push
clc
xchg
fsubs
arpl
push
mov
mov
xchg
mov
cmpsl
xchg
ret
inc
mov
and
lret
lea
xchg
cwtl
iret
sbb
bound
fwait
pop
jne
pop
adc
out
loopne
dec
mov
cmp
inc
jmp
add
jne
push
subl
imul
repz
data16
pop
fs
dec
push
or
xchg
insl
xorl
push
push
dec
loopne
adc
cmp
iret
cmc
or
mov
fadds
lock
push
jno
aam
lahf
and
xchg
adc
mov
lock
mov
test
cld
out
add
cmp
cmp
call
out
cmp
in
xchg
mulb
decb
sti
lock
into
xorl
jge
bound
inc
or
dec
pop
and
movsl
pop
mov
jo
dec
ljmp
pushf
push
xchg
popa
leave
sbb
cmpsb
cmp
decl
adc
xchg
push
into
divb
and
fnstcw
test
loop
and
out
stos
pop
outsl
shl
dec
ja
mov
push
push
sub
inc
icebp
iret
adc
pop
cmpsb
sub
jge
test
ficomps
popa
in
out
sub
in
adc
mov
dec
imul
cwtl
mov
pop
pop
xchg
mov
out
lea
std
scas
push
mov
repz
mov
cwtl
xlat
pop
cli
and
pop
mov
xor
adc
ret
cli
mov
sahf
stc
jge
test
ret
sub
add
cli
and
mov
repz
sub
stos
test
mov
xlat
mov
pop
pop
iret
ror
imul
fildl
xchg
pop
and
ret
stc
push
mov
idivb
xchg
and
sub
push
lods
push
out
stos
std
iret
pop
push
insl
pop
inc
dec
mov
inc
mov
dec
adc
bound
mov
xchg
sbb
cmp
inc
mov
fwait
add
lods
jecxz
push
mov
xor
popa
testb
out
loope
iret
pushf
or
call
addb
testl
and
cmc
xchg
or
adc
aas
xor
enter
mov
lret
adc
loope
lods
mov
mov
fnstenv
mov
daa
shl
arpl
fcmovbe
ret
adc
jg
xchg
or
or
outsl
aaa
fsubp
shlb
jl
adc
sbb
repz
je
dec
addr16
data16
xchg
imul
jg
sub
jb
jno
or
into
or
add
shrl
cmc
stos
jns
mov
cmp
call
adc
lods
test
scas
xchg
cli
push
aam
clc
mov
push
jne
xchg
enter
add
adc
or
mov
mov
inc
scas
fmull
in
jne
jno
cld
push
and
jecxz
leave
xor
inc
jne
push
lock
inc
leave
cwtl
and
mov
mov
sbb
mov
scas
imul
dec
movsl
sbbb
jg
cmp
sbbb
or
inc
and
xor
lcall
or
mov
jecxz
jnp
imul
and
or
xchg
xchg
push
loopne
rcr
adc
xchg
dec
inc
push
adc
leave
cmp
xchg
int3
pop
fadd
lcall
jnp
out
fsubl
xchg
cli
xor
mov
push
mov
dec
cli
hlt
lret
push
mov
jp
shll
popf
insl
movsl
daa
adc
lahf
jnp
jns
loope
inc
push
pop
sub
mov
sbb
stos
push
mov
lret
gs
jbe
sbb
jbe
loope
out
push
pushf
sub
and
repz
ficoml
adc
lret
fs
mov
pop
jno
in
lds
dec
es
sub
push
fsubl
out
sete
mov
pop
xor
daa
mov
pop
lcall
pop
jmp
sub
mov
cs
sbb
inc
or
shrl
xorl
mov
push
inc
add
mov
mov
ret
mov
ret
enter
mov
mov
push
cwtl
sub
int
hlt
add
cmp
mov
jnp
and
xchg
jne
jns
push
sbb
adc
jo
sbb
pop
cmpsb
pop
arpl
sbb
addb
mov
add
pop
add
cli
fisubrs
inc
cmp
sub
fbstp
pop
stos
fldenv
pcmpgtd
jmp
js
lret
inc
fsubrl
decl
sbb
insb
aas
hlt
gs
push
or
sub
sbb
inc
cmp
mov
push
jno
add
in
and
sub
mov
ljmp
aad
mov
dec
fcoms
cmpsl
pop
push
mov
insb
dec
and
and
sti
pop
push
jg
lods
inc
cmc
scas
icebp
mov
inc
pop
nop
adc
fcmovnbe
or
rclb
sbb
mov
inc
lcall
popf
lea
aaa
sub
out
pop
jbe
jns
and
je
mov
ljmp
push
stos
sti
decl
cmp
scas
add
sub
push
insl
mov
fdivrl
or
movsb
or
filds
dec
scas
jp
xor
cli
sarb
cwtl
jmp
pop
les
xor
aad
gs
outsl
out
ficomps
mov
or
jns
cli
das
andb
xchg
lds
push
mov
xlat
pop
cs
and
iret
pop
mov
or
mov
jae
test
inc
inc
int
aad
mov
fidivl
aam
out
inc
jmp
xor
or
mull
in
ret
cld
hlt
lahf
adc
cltd
cwtl
jecxz
sub
inc
jo
cli
sbb
mov
dec
cmpsl
dec
outsl
or
mov
jne
fldt
mov
ljmp
add
mov
push
mov
movsb
adcb
xchg
lds
xor
or
fisubrs
xor
add
xor
jle
sub
notl
cmp
clc
arpl
stc
mov
adc
pop
in
add
jne
jae
sub
cmp
mov
bound
or
es
cmpsb
neg
out
test
sbb
mov
dec
inc
mov
pop
push
mov
mov
xor
clc
xlat
mov
mov
dec
enter
or
mov
inc
andl
jns
ja
sub
shl
addr16
push
mov
push
jae
inc
scas
push
in
pop
pop
aaa
xor
dec
enter
subb
xchg
shrd
sub
pop
mov
mov
adcb
gs
test
enter
testl
fs
lods
xchg
std
das
fsubrp
ficomps
xor
jge
cmp
adc
shlb
fldenv
dec
mov
mov
sbb
mov
xor
fiadds
cmp
lret
lods
mov
ret
mov
repz
inc
into
dec
and
dec
cld
ficompl
scas
cltd
fiaddl
mov
jmp
int3
testl
addb
rorb
pop
mov
imul
test
es
adc
push
lods
in
pusha
xchg
insb
lds
enter
pop
les
mov
icebp
hlt
psllw
das
cmc
mov
or
cmpsb
imul
loop
xor
xchg
mov
xor
lahf
mov
movl
xchg
fadd
xor
sub
fisubs
push
aaa
dec
mov
lret
mov
fidivs
aas
pop
stos
and
mov
mov
test
mov
mov
pop
cmp
fcmovbe
and
mov
pop
les
hlt
mov
sbb
dec
out
adc
push
out
xor
sbb
mov
pop
mov
push
sub
lods
inc
pop
and
push
out
cmp
mov
fdivl
enter
les
ds
fidivrs
cmp
sbbb
gs
xor
insb
push
or
add
les
fsubp
xor
add
pop
mov
sub
mov
and
mov
push
aas
mov
mov
dec
adc
and
and
lds
lcall
aaa
and
xor
lds
xchg
out
fisttpll
lret
cmpsl
orl
les
and
and
inc
loopne
and
imul
loop
push
mov
outsb
int
call
icebp
imul
or
std
or
fwait
mov
jl
outsb
lret
or
push
dec
cmp
outsl
push
idiv
dec
fisttpll
push
or
aaa
pushf
repz
jecxz
inc
cmp
xor
lea
ss
hlt
push
adc
icebp
push
push
mov
sbb
or
lds
mov
jge
ds
scas
push
fcomps
ss
push
test
push
fmull
sbb
jnp
push
lahf
pop
sbb
out
ret
push
dec
add
cs
dec
xchg
in
fdivrs
sbb
push
cmc
xchg
cmp
mov
jae
rorb
sbb
std
jbe
and
stos
mov
scas
sub
scas
sub
andl
push
pop
imul
cmpsb
pushf
ret
aaa
cltd
dec
mov
lds
add
inc
jle
shr
popf
jb
das
xchg
lock
xchg
sub
shl
mov
adc
rorb
das
arpl
cmp
std
insl
sub
lcall
sbb
mov
cmpsb
and
add
xor
lahf
enter
mov
or
add
icebp
cmpsl
push
sti
roll
gs
cmp
movsl
arpl
daa
hlt
xchg
rcll
idivl
std
in
adc
mov
push
shlb
dec
aam
lret
iret
daa
out
cmp
dec
mull
je
loope
jne
adc
nop
push
dec
mov
test
dec
dec
iret
pop
add
in
fnstenv
fs
sti
stos
sahf
mov
stc
sub
fs
pop
pop
stos
scas
test
icebp
xchg
cmp
in
loopne
xor
stos
adc
add
dec
outsb
jne
fdivrs
or
add
loop
div
into
mov
into
push
adc
jno
cmpsb
or
cmc
xor
mov
sahf
mov
fs
aam
xchg
jnp
call
push
pop
sahf
frstor
fdivrs
lret
popa
mov
jo
clc
insl
int3
jns
in
mov
sbb
inc
fwait
cli
fwait
stc
les
sbbl
stos
sti
std
out
add
fsub
pop
adc
std
lret
ret
jl
or
orl
fiadds
lcall
icebp
insl
js
rorb
hlt
mov
add
sbb
pop
fisttps
in
mov
adc
sbb
in
jecxz
sub
aad
stos
fmulp
enter
add
mov
arpl
add
xor
shll
aas
jmp
push
xorl
cwtl
mov
sub
daa
ficoml
xchg
fldt
inc
int3
push
adc
idiv
sub
test
pop
adc
mov
sub
into
sbb
test
jno
add
data16
pop
fidivrs
fstpl
imul
loope
sub
mov
notb
fwait
push
inc
and
in
les
mov
ret
sbb
bound
lods
cld
xchg
mov
jno
lods
mov
add
push
dec
dec
enter
shrl
sti
xor
sub
scas
push
xor
sub
pop
jmp
dec
push
push
enter
push
pop
inc
je
mov
inc
jne
shr
push
dec
fcoml
rcl
adc
and
jmp
loopne
mov
jecxz
sbb
aas
test
or
testb
loope
cmp
push
out
pop
pop
sub
mov
jl
ret
pop
pop
mov
inc
push
pushf
mov
push
in
adc
arpl
cmp
daa
xchg
outsb
insl
cmc
popa
jp
add
push
xor
fs
ret
out
jnp
mov
sbb
pop
cltd
adc
loop
sahf
les
mov
mov
fidivl
sub
or
adc
jo
je
cmp
je
inc
movsb
rcrl
jnp
pop
out
mov
inc
pop
push
mov
popf
cmp
and
sub
mov
sbb
push
data16
fildll
mov
mov
pop
mov
xor
xchg
mov
xor
pop
add
out
rclb
in
add
and
sbb
and
fdiv
outsl
and
scas
add
jle
push
lods
in
daa
push
lock
push
adc
jne
cmp
or
xchg
cmp
mov
push
and
cs
jmp
pop
sub
ja
subl
xor
movsb
stc
cmp
xchg
sub
or
xlat
ds
mov
shll
dec
gs
dec
cmp
cmc
repnz
in
lds
cmp
stc
les
subb
push
clc
xchg
bound
cmpsb
das
mul
push
out
pop
xchg
mov
sbbl
sti
fbstp
stc
bound
pop
or
mov
rcrl
mov
test
lods
push
cmp
adc
jle
test
xor
jns
xor
lods
push
cmp
jne
aas
or
outsb
rclb
mov
test
push
push
enter
lock
mov
add
fs
fadd
mov
mov
jo
cs
mov
cli
inc
pop
xor
sub
lods
inc
fsubp
adc
mov
js
sbb
pop
push
inc
push
sub
inc
lock
stos
aas
adc
mov
lcall
fbld
ja
mov
add
cmpsl
mov
jl
pop
sub
push
sub
std
in
xchg
insl
insb
and
mov
mov
xor
lods
jbe
lock
js
jl
xor
inc
ja
pop
cmp
test
lea
mov
cmpsb
mov
push
and
sub
xlat
je
mov
movsl
pushf
cwtl
mov
cmp
stos
test
jns
cltd
iret
cli
js
iret
dec
xchg
push
cmpsl
push
insl
mov
xlat
lock
add
cmp
jbe
mov
inc
push
cltd
sysenter
call
les
mov
outsb
scas
xchg
cltd
lods
test
cli
sbb
mov
mov
repz
xor
add
inc
pop
mov
add
ds
push
stc
ret
ret
adc
pop
add
sub
push
dec
jb
cmpb
cmp
lret
xor
les
popa
xchg
lret
nop
add
scas
popf
aad
je
popf
mov
xchg
lret
sub
insl
or
leave
xor
mov
or
dec
sub
cmpsl
lret
subl
loopne
in
push
push
xchg
or
adc
cmpsl
or
sbb
leave
jbe
and
stos
lea
add
repnz
sahf
je
inc
pop
dec
xor
mov
pop
sub
push
out
lret
jb
outsb
test
loop
out
cmp
movsb
lret
shl
daa
rolb
and
jp
and
jo
xchg
ds
test
dec
dec
xor
data16
sbb
inc
xchg
jo
addr16
icebp
xchg
inc
popa
subl
pop
jne
sub
fdivl
push
or
inc
out
lods
add
push
or
add
movsl
shrl
outsl
xor
aas
js
popf
inc
add
daa
sub
imul
cltd
imul
mov
ss
and
xor
mov
inc
add
out
adc
xchg
in
arpl
movsb
xor
ret
aad
inc
xchg
fdivrs
ja
lret
in
arpl
cld
dec
push
movl
out
sbb
adc
inc
insl
loop
ja
in
sbb
inc
xchg
nop
leave
mov
adc
pop
push
scas
jnp
push
cmp
pop
in
adcl
es
repnz
enter
mov
and
stc
dec
jmp
mov
push
adc
mov
jp
pop
out
and
add
in
pop
mov
pop
or
mov
lods
mov
xchg
iretw
and
jnp
or
lcall
inc
sbb
bound
lret
or
mov
fisubl
cs
dec
mov
aad
and
mov
call
pop
sub
mov
nop
mov
push
pushf
mov
sub
ret
mov
mov
inc
sub
xchg
adc
mov
sbb
andl
mov
mov
cmc
mov
imul
adc
xor
add
stos
fmuls
int
mov
ja
test
pop
loop
pop
adc
clc
pop
dec
mov
inc
mov
popf
std
and
fcmove
popa
inc
add
cmpb
xchg
xchg
add
xchg
lea
mov
jno
jno
adc
mov
lret
adc
aam
cmpsl
mov
sarl
aaa
sub
inc
pop
jg
jb
cltd
orb
add
pushf
aaa
mov
jmp
mov
movsb
cltd
sub
mov
outsb
fisubs
ljmp
loope
sub
aad
dec
fcomps
cs
push
inc
and
inc
jg
pop
xchg
jmp
and
xchg
pusha
dec
sbb
and
jp
sahf
fwait
xchg
pop
sbb
popf
ss
jge
or
and
xor
pop
jl
add
cmp
insl
jo
mov
mov
hlt
push
or
and
loope
leave
hlt
jl
xchg
scas
lods
mov
cmp
fmuls
adc
call
mov
int
xchg
das
mov
mov
inc
adc
mov
or
pusha
shlb
pushf
stos
push
lods
sbb
shr
ret
movsl
leave
or
mov
mov
loopne
std
fsts
loopne
pop
mov
adc
shr
in
add
xor
fwait
jno
mov
rcr
jp
into
enter
push
in
mov
xchg
and
loope
popl
sbb
bts
inc
addb
stos
stos
ja
dec
jmp
or
cli
pop
cmp
cmpsb
mov
out
push
push
inc
xor
xor
cmp
or
inc
aaa
and
fldl
je
xchg
mov
lret
push
adc
pop
mov
addr16
filds
cvtpi2ps
mov
aas
push
jne
fnstenv
mov
scas
push
lahf
out
mov
ror
hlt
lret
and
cwtl
push
mov
fst
aaa
push
int
aaa
ss
addl
shll
mov
cmp
aam
int3
sbb
test
dec
push
jmp
or
call
add
aaa
out
xor
push
dec
je
les
adc
push
sub
icebp
jge
inc
adc
shlb
pop
cmp
stc
lds
or
mov
jp
scas
mov
mov
dec
adc
pop
out
movsl
adc
pop
into
dec
ja
lods
pop
xchg
into
mov
xor
pop
adc
out
fsubl
lods
dec
outsb
ss
leave
out
test
mov
sbb
mov
shll
popf
ficoms
xor
jns
movsl
out
imul
pop
cmp
je
xchg
stos
cwtl
jmp
daa
cmpsl
js
push
leave
not
movsl
push
mov
pushf
insb
dec
lahf
adc
inc
mov
sub
inc
std
aas
int3
arpl
mov
dec
scas
jle
pop
sub
or
mov
movsb
and
inc
mov
sti
and
call
sub
mov
call
cmp
sbb
adc
scas
enter
jge
inc
cmpsl
in
repnz
mov
dec
pop
ss
mov
adc
lcall
mov
mov
into
mov
cli
shrb
adc
lret
or
aad
dec
push
cmp
popl
in
fdivs
icebp
imul
imul
push
xor
mov
shll
repnz
xor
into
out
addr16
fwait
imul
xchg
dec
mov
fmul
push
rclb
lock
mov
in
negb
pop
ja
rorb
cmp
push
cmpb
sbb
or
cld
enter
push
xor
mov
lcall
xchg
sub
mov
mov
push
rcll
orl
in
pop
xor
outsl
add
push
stos
out
and
dec
push
and
daa
sub
mov
out
dec
cmp
mov
cmpsb
jl
std
das
add
jo
lret
cli
xor
repnz
dec
and
andl
and
enter
sbb
outsl
repz
addr16
outsb
lods
fisubs
pop
in
aaa
imul
sub
push
jae
or
sub
ficoms
idivl
popa
pop
stc
xchg
dec
mov
add
inc
stc
dec
jne
cmp
icebp
sub
pop
sub
movsb
sub
mov
mov
inc
jnp
cmpsl
gs
push
incl
mov
ret
mov
or
fldcw
mov
sbb
out
call
adc
pop
fadd
xorb
pop
loopne
push
es
mov
xor
inc
xchg
push
adc
pusha
pop
jne
sub
xchg
inc
xor
push
ljmp
dec
or
scas
mov
enter
addl
sahf
jmp
movsl
cltd
pop
push
inc
dec
fwait
scas
repnz
add
pop
daa
insl
jnp
cmp
push
cli
push
and
pusha
mov
lcall
jo
pop
sahf
sub
clc
adc
add
cmpsb
fwait
aaa
iret
sbb
sbb
enter
mov
inc
leave
cs
test
in
sahf
out
jmp
hlt
jb
jno
outsl
orl
and
popa
xor
push
mov
fimuls
push
mov
bound
push
jo
pop
mov
lods
jg
fcoms
mov
ja
jns
mov
inc
cmp
lods
addr16
loop
adc
cld
sbb
pop
aad
mov
leave
jg
iret
imul
out
or
mov
das
push
xor
add
jne
shll
mov
dec
hlt
dec
andl
pop
daa
adc
cmp
push
fimull
pop
out
mov
fldt
scas
sub
xchg
aas
shrl
or
push
sub
mov
imull
mov
xor
push
icebp
in
dec
mov
inc
ja
push
push
xlat
mov
dec
aam
mov
dec
test
sub
dec
frstor
fldt
pop
test
imul
insl
sbb
cmp
add
jno
popa
ljmp
wbinvd
cmpsl
addb
shl
movsl
xabort
cmpl
and
or
and
inc
mov
xlat
and
and
movsb
mov
push
mov
cmpsb
stc
iret
ljmp
sub
xor
inc
call
jge
int3
hlt
int
or
dec
mov
adc
adc
ret
xor
sbb
xor
pusha
jae
xor
int
mov
mov
inc
xchg
daa
cwtl
repnz
outsb
xchg
leave
lea
jmp
test
pop
inc
test
stos
pop
out
lret
repnz
cld
insl
orl
push
out
mov
shrl
enter
xor
ret
xor
lahf
loopne
mov
enter
mov
cmp
leave
cmp
stos
loope
data16
xchg
and
push
mov
dec
arpl
cmp
mov
push
mov
inc
or
into
fstl
push
push
ss
outsb
adc
adc
mov
adc
lahf
inc
jmp
je
jle
scas
addr16
outsl
push
loop
dec
jnp
ljmp
insb
mov
imul
add
popa
mov
cmp
mov
sub
cmpsl
pop
lcall
lock
jmp
pop
xchg
and
mov
and
mov
jbe
push
inc
lods
add
fsubl
xor
and
cmp
and
jmp
xchg
into
cmpl
pop
jp
ret
imul
inc
sub
mul
inc
jnp
sub
pushf
mov
outsl
xchg
leave
into
pop
mov
daa
pop
loopne
fnsave
loope
lret
mov
mov
mov
jnp
mov
cmp
faddl
and
cltd
pop
popa
adc
cmp
inc
mov
cmp
sub
mov
sbbb
imul
mov
xor
cmpb
cmpsb
adc
int
mov
push
cwtl
push
nop
mov
dec
sub
pop
mov
mov
out
loope
or
repz
cs
cld
subl
test
leave
cmp
mov
xlat
dec
and
add
sub
jbe
mov
xor
insb
pop
sbb
pop
inc
cmp
outsl
dec
fistps
sub
jg
lods
pop
sub
add
mov
lock
cmp
mov
sarb
cmp
push
xchg
ret
insl
xor
pusha
dec
stos
jge
add
ret
sbb
leave
add
pop
rolb
je
stos
inc
cmp
and
shl
add
jae
jno
adc
fwait
jns
hlt
jg
inc
out
mov
arpl
or
sbb
jnp
mov
mov
lock
jge
daa
mov
dec
mov
and
popa
stos
jnp
movsb
add
xchg
ror
xor
mov
adc
in
xchg
out
daa
dec
push
mov
jecxz
popf
pop
sbb
js
mov
lret
sbb
fnstsw
add
xlat
out
mov
enter
mov
xchg
in
dec
or
mov
lea
push
lea
pop
push
movsb
push
orb
cmpl
jno
xor
add
fbstp
and
inc
cld
das
xlat
add
bound
iret
pop
fwait
rol
xor
das
mov
mov
ret
jbe
out
int
pop
pop
sub
popf
pop
pop
aam
xchg
jns
xorl
mov
pop
insb
loop
or
lods
dec
jne
dec
pop
xor
ficompl
shrl
cli
js
jge
shrl
push
sub
lea
ret
adc
imul
lahf
fs
mov
test
cmc
adc
mov
imul
std
int
pushf
sbb
mov
and
das
push
pop
adc
dec
jne
into
add
fdivr
jb
or
cltd
js
and
sbb
or
mov
cmpsb
sub
add
int3
rolb
mov
sbb
pushf
dec
mov
adc
sbb
fcomp
rcrb
iret
cld
inc
xor
popf
mov
aad
out
test
repz
push
adc
scas
xor
test
dec
jmp
mov
pop
lds
jle
out
or
test
scas
stos
cld
mov
sub
insb
bound
push
dec
adc
fisttpl
and
mov
fistpl
repnz
out
inc
sti
es
jo
inc
xchg
dec
mov
push
dec
psubsb
mov
jne
dec
roll
or
inc
addr16
push
jae
ljmp
dec
lcall
ror
sahf
fcompl
stc
mov
pop
lahf
jno
sbb
mov
push
pop
cmpsb
xchg
shlb
out
out
jne
sbb
rcrb
xorl
mov
movsb
inc
lcall
in
mov
pop
mov
add
movsb
js
int3
dec
or
push
das
gs
cli
rorb
push
add
aam
stc
or
out
pop
mov
push
sub
aad
mov
sub
push
add
pop
inc
or
pop
pop
repnz
addr16
sub
mov
jo
push
sub
mov
xchg
push
sub
push
clc
xor
jecxz
and
leave
loope
cmc
mov
jge
pop
divl
imul
pop
xor
out
sbb
mov
cmp
dec
add
mov
out
and
sub
cmc
outsl
ret
das
rcrl
test
and
mov
imul
pushl
cmp
cmc
in
inc
lds
addr16
push
pop
insb
mov
pop
add
xor
stc
nop
sbb
out
aaa
adc
add
jnp
mov
jg
shlb
jo
pop
and
sub
arpl
aad
adc
enter
daa
add
rclb
cmp
fldl
cmp
das
jmp
pop
dec
mov
aam
scas
mov
sarb
dec
in
cld
dec
js
sti
and
dec
or
and
fcmovu
push
out
xor
and
push
push
mov
xchg
sbb
push
les
jp
in
scas
or
std
push
or
xchg
test
dec
mov
movsb
inc
mov
pop
adc
fwait
pop
cmp
movsb
fcoml
in
pop
imul
repz
pop
mov
cmpsl
sub
or
mov
out
popf
pop
or
sti
pop
sbb
fcomps
fdiv
fs
cmp
por
mov
jle
cmp
ss
push
cmpxchg
mov
jle
or
mov
lds
rclb
sbb
in
loop
pop
clc
out
mov
mov
lret
push
inc
mov
cmc
jp
cmp
inc
mov
lahf
test
test
or
repz
mov
adc
mov
cmpsl
dec
mov
in
push
dec
xchg
mov
pop
xchg
lret
ss
lds
sahf
pop
pop
aad
jae
repz
shll
rclb
add
loope
out
shl
fstpt
push
xchg
push
mov
xchg
call
add
lods
adc
stos
icebp
sub
adc
jb
mov
popa
jo
jecxz
lret
fwait
pusha
adc
xor
andl
or
inc
push
lock
sub
int
mov
aaa
leave
inc
in
aad
enter
cmp
adc
xchg
push
outsl
inc
les
imul
cwtl
mov
test
push
xchg
aaa
cltd
xchg
dec
shll
and
popf
cmp
fmuls
sbb
add
sub
jnp
mov
jecxz
sub
push
or
addl
je
ret
imul
add
push
cmc
sub
stos
sub
pop
mov
inc
mov
dec
mov
pop
les
and
add
lods
mov
sub
movsl
lret
push
dec
or
push
subl
test
mov
sbb
imul
imul
adc
mov
int
mov
jbe
filds
dec
mov
or
xor
or
add
int
iret
dec
dec
xor
std
pop
dec
repz
adc
into
xor
out
cmpsl
sbb
pop
out
sbb
lea
add
jae
ret
add
mov
and
xor
xor
cmpl
mov
movsb
inc
aad
lea
mov
or
imul
int3
mov
mull
imul
das
orl
mov
sbb
mov
mov
out
clc
jp
fsubrs
xor
push
cmc
jle
mov
stc
lcall
jno
xchg
lret
pop
lret
ret
ja
arpl
into
add
xchg
and
nop
sbb
sub
sub
data16
cmp
xor
lods
sub
inc
sbb
sub
dec
outsl
mov
loopne
cmc
movsl
cmp
outsb
scas
inc
rorb
pop
xchg
jmp
filds
fwait
lock
cmp
dec
or
loop
sbb
loopne
jns
cltd
repnz
fwait
mov
lods
mov
dec
fstpl
pop
pop
out
push
addr16
dec
mov
repz
add
ret
cmp
rcrl
shl
cli
add
sbb
jge
lret
jge
push
in
push
inc
cmp
ret
sub
mov
mov
cmc
out
pop
popf
sbb
pop
add
das
xor
stos
jb
insl
pop
addr16
push
jg
int3
mov
dec
fwait
pop
nop
cs
out
pushf
imul
jbe
push
int3
cmc
mov
pop
xchg
testb
dec
mov
and
out
push
stos
push
push
ret
pop
pop
shl
scas
inc
fwait
or
cmc
adc
loopne
adc
aas
bound
push
loopne
in
stos
jae
imulb
and
jmp
cmpsl
push
xor
or
inc
push
pop
dec
and
cmp
into
or
loopne
dec
add
lret
mov
out
cmp
mov
xor
xchg
add
add
pop
loope
out
rsqrtps
notb
xlat
push
imul
sbb
aaa
rcrl
lds
cmp
mov
fs
in
out
sbb
into
cmp
dec
js
int3
inc
cmp
stos
cmc
cld
enter
mov
negb
xor
push
dec
push
and
test
int
repnz
sbb
mov
add
clc
xor
pusha
cmp
int
xor
sbb
rcll
mov
dec
or
das
mov
push
shl
dec
jo
sub
outsb
test
fildl
add
fs
xor
mov
xor
cmp
dec
mov
jne
and
movsb
leave
xor
jb
sti
loopne
out
mov
xchg
pop
bound
xor
cmp
jp
jp
push
addr16
cmovno
sub
adcl
int3
loopne
sahf
into
or
mov
out
pop
mov
testl
mov
in
inc
and
xor
xchg
rorb
fcomps
cmc
icebp
repz
or
dec
xor
int
push
aad
push
mov
mov
dec
ss
repnz
enter
push
movsl
inc
inc
and
nop
pop
or
cwtl
ret
and
pop
loop
adc
add
in
lret
out
and
xor
mov
mov
les
mov
fdivl
iret
pushf
cwtl
enter
jge
jo
sub
cltd
sub
push
and
daa
pop
xchg
and
adc
pop
jl
xor
lock
mov
int3
cli
pop
aaa
dec
ret
insl
xlat
push
xor
dec
arpl
pop
lret
out
dec
pop
loope
loop
imul
call
pop
dec
cmp
sarb
movsb
dec
mov
inc
or
outsl
aam
push
add
in
jp
lcall
and
shlb
mov
sub
push
xor
sub
test
les
mov
sar
outsb
xchg
icebp
jle
mov
jne
imul
mov
pop
test
int
push
mov
jbe
and
fldcw
push
mov
lcall
adc
mov
dec
insb
add
sub
fdivrs
add
adc
push
push
xchg
cltd
call
rcrl
bound
adc
and
add
xor
adc
int
mov
fxch
cwtl
jno
push
pushf
pop
mov
mov
into
or
inc
dec
out
and
sbb
ja
or
push
jb
add
cwtl
mov
pop
aaa
mov
sub
ret
jo
lds
aaa
scas
inc
dec
imul
rol
inc
popl
ret
add
shll
xorb
nop
out
pop
inc
mov
xor
pop
jnp
test
push
nop
inc
push
sahf
inc
push
adc
imul
nop
leave
jmp
ja
lds
add
sub
pop
daa
inc
lahf
cltd
lds
mov
cmp
xor
push
jmp
lret
fistps
stc
xor
pop
dec
sar
call
jle
test
push
or
adc
js
mov
xor
push
push
popa
mov
cmp
std
lahf
aaa
daa
subl
sub
shrb
shlb
mov
push
cld
add
popl
mov
in
pusha
movsb
push
test
icebp
loop
mov
inc
clc
lock
pop
dec
dec
mov
xchg
mov
mov
mov
mov
and
adc
add
jns
ret
cmpsb
mov
mov
loop
push
mov
mov
add
pop
aad
jge
sbb
int
mov
and
ja
jl
cltd
loopne
pop
xor
mov
add
xchg
insb
xchg
sbb
add
xor
lret
mov
test
lock
daa
xor
jno
inc
cmpsb
shlb
or
out
imul
mov
or
lea
pop
popa
adc
cmp
ja
or
or
or
mov
decb
in
inc
or
call
adc
nop
sti
popf
push
dec
sub
fcomi
out
push
nop
scas
or
dec
outsl
mov
insl
cmc
ss
push
arpl
shl
lret
out
repz
or
add
xor
fstl
inc
gs
inc
iret
add
scas
or
stos
mov
in
test
into
test
enter
rcl
lds
xchg
inc
lds
insb
xchg
or
nop
dec
jne
rcl
jp
les
jo
push
js
and
cmp
stc
pop
fs
mov
leave
adc
add
add
and
sub
lret
xor
scas
into
and
xchg
arpl
adc
cmpsb
rorb
xchg
jp
int
pop
cmp
add
imul
test
xchg
mov
mov
stos
popa
mov
or
dec
scas
por
jb
outsl
mov
loop
adc
sbb
adc
stos
xor
push
cmpb
mov
xchg
ss
ret
mov
or
add
xlat
ss
xchg
cmc
lahf
sti
sti
sbb
iret
and
movsb
mov
fst
cmpsl
std
enter
fildll
repz
ret
xchg
aad
sub
arpl
xchg
lret
movsl
insb
and
mov
cmp
mov
fisubrl
xor
aas
testb
xor
mov
mov
add
cmpb
loope
and
sub
add
bound
in
and
sar
cmp
add
sub
cmp
xchg
test
push
push
inc
xchg
nop
cli
cwtl
jmp
xor
jno
into
mov
inc
out
inc
out
shlb
push
aad
jnp
es
mov
push
xor
push
mov
sbb
test
iret
cmpsl
sub
push
imul
dec
test
inc
dec
inc
adc
inc
scas
ror
stos
shr
mov
add
lcall
mov
jnp
jg
dec
mov
out
lea
pop
int
push
add
push
sub
sub
fwait
cli
rclb
cld
rorl
push
testl
add
dec
lcall
sti
stos
jecxz
out
xchg
fwait
call
in
bound
int
mov
inc
or
nop
fdivl
lret
xor
cmc
cmp
les
int
inc
outsl
mov
ss
movsl
into
sbb
mov
mov
into
mov
jge
into
ja
popf
inc
mov
xchg
xor
inc
cwtl
dec
das
add
enter
test
or
push
jmp
xor
pop
dec
imul
ret
ljmp
movmskps
cld
fbstp
lea
mov
test
inc
insb
jne
cli
fmul
sbb
mov
fcompp
inc
fs
jne
jmp
push
sub
xor
or
jp
enter
pop
scas
in
leave
jle
adc
or
jno
or
orb
mov
xchg
repnz
sti
clc
inc
jg
mov
sub
xor
xor
sti
dec
test
add
push
xor
test
cmp
faddl
in
leave
shll
mov
adc
jo
inc
pop
aam
cli
ss
daa
xlat
inc
and
gs
aaa
addb
dec
mov
jne
jae
mov
mov
xlat
mov
adc
mov
jp
mov
cmp
into
xlat
mov
jno
cmpl
adc
loopne
xchg
sahf
imul
outsl
cwtl
push
cwtl
pop
sti
sahf
or
pop
jmp
jb
xchg
dec
lods
sub
mov
movsl
daa
cwtl
lock
xor
add
andl
aaa
sub
adc
and
mov
mov
cmp
cmp
jmp
and
out
pop
rol
cmpl
adc
jns
fstps
call
xor
mov
mov
inc
shr
mov
or
push
jge
aam
enter
or
dec
cli
lods
outsb
cld
imul
jp
dec
loop
jno
stos
icebp
mov
fistpll
je
jno
fldt
jns
fbstp
jecxz
gs
popf
and
subl
mov
xchg
mov
push
popa
pop
xchg
mov
sub
xchg
gs
popf
pop
ret
sub
xorb
push
add
xor
in
cld
mov
jbe
in
jno
adc
mov
int
insl
push
adc
shll
rcrl
or
mov
popa
lcall
adc
jle
xchg
call
add
mov
inc
sarl
icebp
xor
mov
cld
or
xor
jg
xor
imul
inc
pop
in
sbb
leave
out
inc
push
dec
cld
sahf
adc
sub
mov
ret
jae
fisubrl
adc
les
dec
int
push
hlt
dec
out
lcall
pop
jecxz
mov
adc
enter
je
lods
leave
in
rcll
cs
dec
repz
movsb
jns
sub
xor
push
movsb
push
adc
out
insb
sub
ret
test
dec
push
decb
cmp
into
fwait
or
mov
pop
in
enter
ret
ficoml
jno
sbb
cs
jle
push
push
cs
xchg
pop
or
lcall
addl
xchg
popa
stos
rol
cmp
movsb
in
xchg
mov
fidivrl
test
fdivr
ret
popf
adc
pop
jo
add
dec
push
xor
mov
or
pop
lret
jbe
repnz
sbb
xorb
aad
jmp
aas
dec
xchg
inc
gs
out
test
ret
fcoml
in
xor
xchg
ja
mov
xor
inc
punpcklbw
test
xor
sbb
xchg
xchg
jae
inc
rol
xchg
lock
pop
faddl
xorl
mov
dec
shl
aam
push
movsl
rcrl
out
in
sbb
daa
in
or
pop
and
rcr
out
cs
xchg
test
popf
int3
cli
pop
pop
jne
int3
add
sbbl
push
mov
mov
or
adc
mov
push
inc
cltd
push
pop
push
into
inc
push
shrl
lahf
push
repnz
mov
and
data16
cmpsl
cld
outsb
in
mov
inc
xor
scas
push
ds
orb
or
loop
fimuls
pop
xor
or
xor
int3
push
rcrb
pop
mov
jmp
adc
inc
jl
xchg
xor
push
push
mov
lret
es
push
pop
into
push
push
jo
lret
test
xchg
lds
sbb
sbb
testl
in
out
xor
jb
rcll
movsl
andb
push
push
add
mov
inc
inc
jno
aam
js
shrb
movntps
adc
out
xor
sahf
pop
icebp
lret
xor
and
popa
push
pop
dec
mov
add
pop
inc
mov
test
jp
add
decb
nop
inc
lods
push
adc
test
out
mov
cli
mov
mov
lcall
addl
and
fcomi
ficomps
stc
leave
scas
inc
xchg
lods
cmpsb
rcr
mov
inc
hlt
jmp
fisubrl
and
add
dec
in
mov
push
fnstenv
cmp
int3
push
cld
cli
and
cmp
mov
mov
and
int
into
xchg
lret
xor
push
subl
call
mov
push
int3
xchg
dec
mov
xor
push
sub
call
sbb
leave
and
pop
xchg
gs
or
gs
push
pop
mov
leave
xchg
test
xchg
jmp
in
iret
push
xor
mov
mov
dec
test
stc
dec
int3
and
dec
cmp
mov
nop
scas
sbb
cmp
jmp
in
jns
adc
fs
push
fldcw
sub
pop
icebp
sbb
loop
and
dec
cmc
or
dec
inc
and
in
push
in
bound
lret
stos
sbb
sbb
jl
inc
mov
jmp
aaa
pop
shlb
mov
cmpsl
imul
inc
sbb
leave
js
inc
cmc
ficompl
add
in
mov
in
push
cmp
repnz
daa
cmove
jns
inc
mov
adc
aam
cmp
xor
test
inc
or
dec
frstor
pop
cmp
cmp
jge
sbb
mov
fdivl
lret
dec
mov
stos
xchg
mov
xor
pushf
insb
or
and
test
scas
in
lahf
cmpsl
cwtl
lods
jecxz
in
push
and
jno
mov
lret
ret
imul
pop
lcall
les
mov
out
cld
sub
dec
dec
insb
loope
mov
lods
shr
stc
push
jl
cmpb
mov
pop
aaa
cli
sbbb
mov
out
test
sub
push
sbb
xor
xor
in
mov
push
lahf
loope
clc
sbb
xchg
enter
loop
outsb
std
xor
sbbl
out
pop
scas
pop
ror
negb
add
xor
adc
mov
pop
sbb
orb
orl
jge
lds
stos
jno
mov
lds
stos
jno
scas
imul
lds
cmp
cmpsb
push
sbb
add
ret
mov
mov
sbb
imul
adc
sub
addr16
mov
jne
rclb
jno
or
test
bts
stc
push
pop
out
mov
xchg
mov
ds
sub
adc
loop
mulb
fcomp
les
cmpsb
lods
into
sbb
sbb
cmpsl
cltd
xchg
mov
mov
sbb
cs
xchg
fisttps
enter
addr16
cmpsb
out
loopne
movsl
jmp
test
mov
lea
inc
lcall
mov
loopne
mov
jl,pn
add
stos
push
mov
or
mov
fwait
xchg
frstor
leave
dec
inc
pop
imul
scas
outsl
rcrb
or
sub
movsb
sub
cmpsb
adc
test
mov
inc
cmp
cmp
loope
in
getsec
mov
mov
popl
adc
jno
mov
adc
bound
ss
loope
dec
fsubs
jno
cmpsb
cmp
sub
daa
cmp
stos
mov
aaa
cmp
ljmp
jne
leave
jp
adc
dec
pop
movsl
sahf
mov
mov
jbe
adc
in
mov
xchg
mov
mov
fmull
jle
daa
mov
mov
pop
dec
dec
in
lret
mov
cmp
aas
push
dec
jp
mov
push
jmp
test
lods
xchg
or
sub
into
mov
pop
lret
test
xchg
xor
inc
popf
scas
add
xor
xchg
stos
aaa
stc
call
movsb
les
ss
sarl
mov
push
sbbl
pushf
mov
jmp
fcmovbe
mov
loope,pn
add
push
and
jne
and
movsb
movsl
cmovp
lahf
test
adc
inc
test
dec
in
repz
adc
shrl
pop
shl
and
call
loope
push
jg
sub
mov
sub
fstl
xchg
les
enter
lret
loopne
adcb
fistl
test
mov
jle
lcall
xchg
lock
or
adc
call
out
mov
inc
out
adc
mov
fnsave
fnstsw
popa
shlb
and
push
negb
jae
push
clc
int
xchg
in
mov
cli
mov
sub
jg
into
jge
inc
incl
ja
pop
dec
inc
sub
testb
scas
jmp
insl
mov
sub
jnp
rorb
nop
push
adc
xchg
or
int
jo
sub
cmp
or
fwait
dec
jno
rol
and
shrb
in
imul
or
das
add
outsb
shll
adc
cs
dec
or
stc
stos
mov
dec
adc
ficoml
cli
les
in
inc
mov
das
shl
aaa
shrb
cmp
fwait
int
dec
leave
or
repnz
test
mov
pusha
sub
shll
inc
mov
pop
fdivrp
push
xor
jno
jmp
mov
add
jo
hlt
or
pop
or
push
xchg
jl
pop
lea
fisubl
cmpb
xchg
pushf
mov
shr
stc
nop
ret
mov
lret
pushf
mov
mov
mov
push
je
push
inc
lea
paddq
push
or
sub
mov
mov
sub
pop
jo
sti
push
push
imul
add
pop
and
pop
or
in
imul
push
in
jl
stos
or
pusha
lret
xor
in
inc
lods
push
scas
mov
cs
cmp
in
xchg
lret
pop
mov
dec
outsl
sub
arpl
pushf
in
sub
push
pushf
test
leave
xor
dec
mov
bound
fsubs
jg
push
insb
lock
sub
imull
ret
lea
test
idiv
movsl
sbb
leave
nop
inc
cmovg
pop
lret
es
lcall
roll
push
mov
inc
jmp
sbbb
or
ret
popf
cmp
and
iret
pop
or
push
pop
jl
popl
nop
ret
outsb
rorl
call
scas
leave
and
jns
and
rcrl
dec
push
mov
cli
addr16
mov
push
rcr
int3
sahf
lock
rol
stos
push
shll
lahf
fs
fiaddl
push
inc
xchg
stc
cmp
pop
jb
mov
and
push
mov
inc
cmpsl
in
add
jl
inc
ss
js
add
imul
push
cltd
shlb
out
pop
test
jmp
cli
decl
fs
and
and
xor
add
xchg
loope
xor
push
sbb
xchg
mov
inc
xchg
and
push
insl
pop
inc
stc
adc
push
sbb
mov
daa
sub
sbbb
sub
or
test
dec
icebp
lret
or
jnp
pop
xchg
loop
popf
xchg
mov
mov
dec
and
mov
jl
aaa
cmp
inc
mov
mov
jns
icebp
insb
cmp
cmc
jmp
les
cli
cmp
aas
loope
rep
xor
shll
push
leave
bound
mov
xchg
dec
inc
pop
xor
mov
pop
and
jo
cmp
out
arpl
mov
int
add
call
hlt
pop
jmp
mov
or
push
inc
cmp
int
cmp
and
push
sub
add
jecxz
push
jg
sahf
or
dec
stos
fbld
loop
lret
rolb
sbbb
jbe,pt
push
xorb
push
jge
jbe
xor
out
aaa
iret
xchg
movsl
xor
mov
insl
lret
testb
sub
sbb
xchg
xchg
in
mov
movsl
pop
inc
and
mov
lea
sub
add
push
lahf
xorl
aas
pop
mov
sub
out
hlt
notb
popa
mov
xor
ret
das
sbb
lcall
outsl
push
cmp
clc
and
mov
out
int3
xor
vmulss
out
lret
ljmp
lahf
pop
daa
add
in
mov
cli
fidivrl
or
mov
arpl
sbb
sbb
inc
adcb
cs
iret
rcrb
out
pop
push
mov
rcrb
nop
rcrl
pushf
jno
jmp
ret
std
mov
out
xchg
adc
sub
or
mov
test
dec
push
push
cmpsl
lret
int3
sub
leave
out
adc
adcl
push
stc
inc
cli
pushf
push
fsubrs
push
fwait
out
jnp
jno
inc
cmp
int
inc
int3
mov
pop
mov
lods
pop
cmp
lea
stos
out
inc
push
enter
lret
scas
popf
enter
andl
nop
test
or
mov
jmp
sbb
sub
or
gs
idiv
loope
inc
dec
sbb
xor
nop
sub
test
shrb
sub
pop
cmpsl
rcrl
sbb
ja
int3
shlb
dec
xchg
xchg
sbb
scas
mov
sbb
push
loope
xchg
xchg
cmp
insl
jae
clc
scas
call
not
or
mov
aas
mov
pop
sahf
repnz
jne
dec
mov
sarl
popa
mov
loope
adc
lret
outsb
sbb
mov
mov
shlb
fimull
sti
in
jbe
stos
or
xchg
push
les
inc
rcrl
cmpb
mov
mov
sub
adc
adc
push
mov
push
cwtl
outsl
int
fsubrp
ficomps
inc
dec
repz
xorl
push
fsub
xor
aam
gs
jmp
or
jae
negb
xchg
pop
in
ljmp
push
insb
out
add
fnstcw
shr
jle
jnp
adc
loope
or
call
insb
out
fisubrl
jo
lcall
adc
inc
stos
xlat
dec
je
out
mov
sbb
test
mov
inc
pop
pop
pop
mov
dec
mov
fbld
dec
into
js
ja
dec
pop
sub
iret
or
dec
xchg
test
mov
dec
or
cmp
pop
inc
xchg
mov
je
xor
sbb
pop
iret
fcomp
xlat
popa
or
mov
adc
insb
loope
inc
cwtl
jmp
popf
stc
or
gs
cmp
jnp
bound
stos
iret
ret
neg
push
mov
dec
ret
outsb
add
int
imul
ja
ss
add
clc
aaa
outsb
jo
jecxz
cltd
pop
push
push
daa
adc
popf
cmp
pop
loop
idivl
or
xlat
push
int
inc
ja
ffreep
xchg
pop
xor
out
xchg
test
repnz
ficompl
xchg
popf
rorl
shlb
ret
dec
movsl
or
mov
nop
inc
xchg
pop
jmp
sbb
sbb
movsb
fisubrl
rcr
sbb
sbb
shl
mov
pop
jge
jge
xchg
mov
and
mov
inc
mov
daa
xorb
mov
jo
jmp
add
outsb
jns
movsb
push
cmpb
jnp
sub
jg
fcomps
fdivs
sahf
add
jo
inc
mov
js
jmp
mov
inc
vpsraw
adc
xor
loop
sti
ja
imul
mov
decl
mov
sbb
sbb
loope
arpl
mov
inc
aas
adc
pop
into
lds
shll
mov
incb
in
out
fildl
mov
jno
sub
mov
mov
pop
subl
in
mov
or
mov
jnp
mov
dec
pop
sbb
jmp
add
jmp
iret
dec
mov
loop
mov
push
js
dec
in
or
push
test
sub
mov
jae
or
lock
insb
mov
pop
mov
jns
or
push
jecxz
in
sbb
ja
aaa
and
xchg
out
adc
cmp
xchg
sub
cwtl
add
in
leave
and
fwait
dec
negl
mulb
repz
cs
mov
adc
fisttps
pop
mov
and
ret
roll
mov
lret
pop
mov
push
inc
inc
out
lcall
lcall
lcall
adc
sbb
xor
test
inc
gs
inc
mov
wbinvd
push
xor
fistps
fs
and
dec
xchg
push
add
or
aas
call
loop
testb
push
mov
and
ror
jbe
shrb
cld
jo
mov
cmpl
out
daa
mov
pusha
daa
or
mov
fsubs
pop
xor
daa
xchg
inc
and
sbb
out
dec
out
popf
pop
cld
mov
iret
jnp
cmp
inc
bound
stos
iret
aaa
ret
xor
sbb
xchg
vminpd
inc
andl
out
js
adc
push
lods
pop
mov
push
enter
lahf
jge
out
roll
repz
xchg
xchg
fmull
xchg
push
add
lods
xlat
popa
mov
mov
ja
mov
jns
mov
sbb
mov
cltd
dec
and
mov
pop
cld
aad
lret
push
mov
addb
lahf
lods
mov
orb
cmp
sti
out
jge
mov
adc
inc
pop
mov
loop
lods
sahf
xchg
call
jb
sahf
sti
scas
test
cs
push
or
scas
mov
fildl
cmpsb
ret
cmp
cmp
sahf
ja
out
lret
js
pop
push
sbb
lea
pop
sar
and
stos
lds
add
push
push
ficoml
mov
les
leave
daa
lret
adc
daa
cmp
stos
add
mov
jo
inc
ja
push
ret
test
and
sbb
les
lcall
js
popf
ret
pop
outsl
rol
sbb
fisubs
orb
or
mov
stos
fcmovne
popf
push
pop
into
dec
mov
pop
cltd
jne
shll
imul
rcrb
clc
jne
xor
ret
mov
pop
stos
mov
sub
push
sbb
lods
pusha
bound
shl
outsb
in
mov
in
push
in
enter
fs
push
enter
pop
sub
push
push
into
imul
call
fisubl
add
int
mov
test
enter
mov
adc
sub
pop
jne
ds
gs
sbb
or
or
test
dec
in
or
out
sbb
dec
sub
sub
or
lea
jge
pop
pop
das
pop
cwtl
dec
push
ljmp
mov
sub
testl
dec
jnp
aad
inc
add
push
add
repnz
mov
imul
and
jbe
loope
outsl
insl
push
lods
xor
push
xchg
lods
mov
movsb
mov
iret
loope
xchg
mov
xlat
int
xchg
sbb
and
push
cmp
leave
loop
mov
js
dec
cs
mov
adc
xchg
inc
cld
xchg
popf
setp
jae
test
sarb
add
out
lret
mov
roll
jo
shrl
sub
push
subl
call
pop
jbe
xchg
ret
sahf
enter
push
mov
jnp
faddp
mov
dec
fmuls
scas
and
fsubrl
movsl
mov
mov
fidivrl
out
les
jge
xor
lret
cmpsl
xchg
xor
push
fldcw
xchg
iret
mov
leave
sub
sub
ljmp
xchg
movsl
cmp
scas
mov
push
mov
scas
subb
orl
jl
loop
sbb
mov
fs
scas
cmp
mov
fs
dec
addl
sarl
int3
or
pop
lea
push
cwtl
int3
sti
test
aas
int
cmpsb
mov
cwtl
mov
adc
lcall
jecxz
lret
inc
sbb
sub
pop
jae
xor
mov
sti
and
lds
xor
loope
iret
cmp
fwait
bound
test
enter
in
cmp
mov
enter
in
pop
imul
mov
dec
fmull
dec
jg
dec
xor
aas
movsl
lods
add
mov
out
add
xchg
pop
xor
inc
rcrb
lock
mov
mov
iret
add
cltd
mov
test
ljmp
push
cld
push
shrb
jbe
std
xor
cmp
lret
mov
push
mov
pop
cltd
test
xchg
dec
and
cmp
outsb
push
sbb
jge
sahf
repz
or
inc
ljmp
jae
xchg
pop
and
stc
je
stc
inc
cmp
aad
dec
popa
jl
lock
pop
lret
mov
cmpb
imul
imull
in
rcr
or
xor
xlat
dec
addr16
mov
pop
fstl
mov
insb
mov
scas
mov
sub
pop
scas
add
jo
hlt
aas
xchg
jecxz
push
cli
xor
mov
lcall
adc
fmul
jb
inc
outsl
sti
pushf
jnp
in
dec
mov
scas
jge
dec
lds
or
dec
mov
testl
xor
jne
add
int
mov
cmpsl
fisubrs
scas
outsl
test
and
shlb
dec
or
mov
cmp
mov
cmp
icebp
loope
mov
sbb
shl
dec
add
jmp
jge
xchg
mov
inc
inc
out
xlat
fs
mov
sub
dec
jmp
stc
mov
lods
pop
push
xor
or
mov
dec
pop
and
loope
outsb
dec
ds
in
idivl
lret
cmp
add
fucomi
aad
inc
jl
lcall
lcall
stos
mov
mov
mov
notb
mul
je
add
and
jle
xchg
aas
xchg
cli
mov
or
out
jle
and
test
ficoml
cmp
cmp
insl
jnp
repz
mov
inc
mov
jb
adc
sub
pop
adc
and
mov
cltd
jnp
xor
cli
push
jg
jbe
cmpsb
aad
jnp
sbb
loope
mov
fcmovu
lea
cmpsb
aad
xchg
jno
add
incl
iret
and
imul
pop
sbb
add
pop
xchg
push
cs
mov
into
sub
jle
loopne
scas
stc
in
ss
adc
cmp
mov
stos
fiaddl
sar
cs
test
das
jb
sub
int3
movsb
cmp
jo
dec
vpsubsb
mov
fs
rcrb
popa
scas
and
ret
sub
cmp
stos
xchg
out
inc
shll
pop
or
leave
lods
mov
or
inc
loopne
aaa
mov
mov
or
ret
mov
adc
es
int
xchg
xchg
lret
outsl
cmpsl
cmp
push
mov
mov
icebp
pop
push
pop
rclb
ljmp
xchg
mov
daa
test
or
sbb
lahf
pop
jno
cli
inc
daa
jae
clc
imul
pop
cwtl
mov
sub
imulb
scas
in
sub
out
cmp
or
fnstenv
aam
ret
leave
sarl
sbb
enter
push
adc
dec
test
mov
lds
xor
out
clc
test
sub
fiaddl
cmp
push
cmc
lcall
hlt
iret
xlat
in
jle
addr16
xor
aad
push
lret
shrb
sbb
imul
inc
es
sbbl
jg
mov
push
cmp
cmp
lods
faddl
into
aam
sub
nop
mov
xor
xor
ret
or
dec
sub
dec
or
int3
fldt
repz
fwait
mov
dec
push
xor
mov
repz
out
sbb
mov
sti
loope
adc
inc
pop
les
xor
lahf
sbb
push
test
push
enter
lods
in
rorb
mov
daa
adc
inc
les
or
fldt
mov
in
popl
inc
xor
cmp
and
fcoms
rcl
or
mov
and
int3
fwait
sarl
xchg
inc
mov
add
inc
push
inc
xchg
or
out
push
out
sbbl
into
vmwrite
outsl
cmpsb
inc
pop
outsb
test
movsl
scas
mov
jmp
jge
cmp
mov
rcrb
mov
nop
in
or
iret
clc
lret
cmc
and
dec
jecxz
sub
sub
mov
cmp
ja
xchg
ret
pop
mov
ficoms
adc
pop
je
mov
sub
scas
inc
pop
push
aaa
aas
stos
pop
jmp
dec
jecxz
jns
rol
hlt
mov
push
andb
imul
shll
test
and
mov
inc
sub
jge
sti
push
mov
pop
jge
sbbb
pop
subl
xchg
lret
out
negb
imul
lret
mov
sbb
lods
ret
jge
jnp
push
arpl
into
ljmp
xchg
repz
add
or
sbb
mov
rcr
cmp
lret
cmovne
in
call
push
add
frstor
leave
xor
cld
mov
mov
frstor
dec
cmpsl
mov
clts
mov
cmp
mov
fcmovnu
imul
cli
push
xor
mov
mov
outsb
jbe
ret
scas
repz
pop
outsb
pop
jg
aad
or
push
jno
dec
incl
xchg
inc
loopne
outsb
vgf2p8mulb
incb
sub
outsb
add
enter
dec
in
and
loopne
push
cmc
and
sbb
inc
cld
mov
push
pop
push
mov
dec
cmpsl
aam
xor
test
movsl
imul
xchg
sbb
test
mov
test
insb
cmp
push
add
bound
fldl
add
push
repz
inc
jge
xchg
cmpsb
std
aas
insb
pusha
push
dec
mov
pushf
jno
nop
test
cli
jl
fwait
fwait
dec
in
aam
cltd
pop
or
frstor
mov
into
cmp
push
out
jbe
fsubrs
fs
lret
fists
cmp
stos
pop
popa
ljmp
push
jle
outsb
xchg
in
fildl
mov
cwtl
addl
inc
and
fmull
leave
andl
shl
pop
ds
adc
cli
test
gs
arpl
jb
cmp
mov
stc
in
outsb
push
aam
or
cmc
sbb
adc
imul
into
aas
mov
push
jge
shrl
popa
cmp
shl
dec
shl
inc
hlt
movsl
sub
dec
jae
mov
xlat
pop
ja
pusha
add
in
jge
popf
and
xchg
movsl
push
dec
stos
dec
adc
leave
xor
pop
jl
outsl
insb
fdivr
dec
pop
mov
mov
sub
repnz
push
adc
mov
in
fcoml
xchg
aad
icebp
mov
xor
leave
pop
sti
test
jecxz
cmp
les
mov
push
mov
sbb
sub
xchg
iret
cmp
adc
je
rorl
and
pop
jo
push
mov
dec
fistpl
jmp
loop
pop
push
cltd
add
push
out
or
imul
xchg
sti
ljmp
push
lock
cmc
lock
and
sbbb
jae
add
inc
jg
test
loope
lds
inc
mov
stos
or
inc
or
mov
movsb
jae
fldcw
fadd
mov
dec
insl
int3
xchg
or
and
jp
fs
bts
jmp
sub
adc
mov
into
std
xorl
cmp
mov
mov
pop
xchg
mov
jge
mov
outsl
mov
das
push
fmull
pop
jecxz
sti
jb
leave
inc
inc
push
pop
aad
pop
inc
in
mov
dec
push
jns
iret
sub
mov
mov
xchg
iret
mov
iret
push
mov
stos
test
sbb
scas
sbb
sbb
movsl
xor
insl
data16
add
jnp
mov
mov
stos
shll
xor
mov
dec
in
mov
pop
into
sbb
insb
iret
rcrl
loope
sub
enter
mov
sbb
leave
imul
mov
movsl
or
mov
int3
xor
sbb
mov
enter
dec
mull
and
cld
cmp
xchg
pop
dec
rorb
bswap
loopne
std
leave
xlat
dec
inc
or
sub
inc
or
jge
jg
adc
int3
ds
or
nop
icebp
push
lret
stos
push
pop
or
pop
mov
data16
js
int3
orl
sbb
mov
lock
dec
je
inc
jno
push
or
lea
aad
stos
sub
push
ja
aas
stos
lods
or
orb
dec
sbb
cwtl
ljmp
sti
aam
out
sbb
hlt
leave
dec
shrb
jb
rcrb
in
jb
sbb
bts
data16
cmp
lds
stos
sbb
jb
xchg
inc
pop
pop
adc
or
adc
loopne
stos
pop
test
outsl
mov
push
and
mov
pop
mov
push
leave
das
sbb
std
jle
negl
mov
dec
inc
add
xor
in
movl
adc
in
push
mov
xchg
cmpsl
cmp
sahf
jnp
fldenv
call
sbb
mov
in
cs
call
sub
out
push
mov
push
jne
jbe
sbb
cmpsl
jmp
rcll
mov
shll
mov
stos
mov
mov
adc
repz
leave
xor
movsl
dec
and
sub
push
fcoml
pop
std
lods
shll
in
lahf
add
test
cmpsb
lods
sbb
int
fsubp
bound
decl
jmp
jne
dec
cmp
and
pop
addl
jmp
mov
pop
mov
pop
scas
lahf
lret
in
adc
mov
call
loop
ljmp
dec
stos
or
mov
imul
dec
lods
push
inc
fs
push
lret
stos
bound
mov
mov
sub
scas
dec
out
lret
add
mov
les
je
cs
jno
je
push
cmp
bound
ljmp
lods
inc
push
pop
into
stos
pop
aaa
hlt
mov
inc
lods
out
xor
mov
outsl
sarl
stos
push
sub
outsl
ljmp
push
inc
fadds
xchg
shll
jl
gs
sti
push
sbb
dec
adc
fs
mov
jl
aad
vphsubwd
or
mov
es
cli
sub
xchg
shll
data16
cmp
adc
mov
inc
out
inc
sbb
or
pop
mov
fadd
and
fbld
mov
pop
out
jo
cmpsb
mov
dec
hlt
or
mov
add
sbb
jo
pop
xorb
ja
mov
jb
aas
test
dec
adc
test
iret
push
push
adc
rclb
push
mov
jg,pn
pop
adc
dec
lret
je
fdivr
adc
sbb
mov
push
dec
lcall
push
fstps
add
dec
pop
dec
mov
loope
das
cmc
insb
jle
push
or
xlat
inc
adc
in
push
sub
add
push
push
ret
push
ljmp
add
cmc
mov
shrb
filds
mov
nop
outsl
lahf
jg
decb
pop
fsub
xor
testb
and
xchg
inc
dec
lret
ds
cmpsb
loop
dec
les
clc
mov
shrb
mov
repz
mov
outsb
dec
mov
nop
out
repz
ret
lret
push
out
push
jo
int
pop
int
loope
in
cmp
outsb
lock
int3
leave
sbb
fs
sar
or
push
mov
test
and
and
cld
pop
cmp
testl
addr16
mov
movsl
cs
xchg
mov
xchg
aad
push
cmpsl
mov
dec
sbb
repz
sti
fcom
rcrb
lret
cmp
shll
adc
pop
test
loope
mov
int3
pop
or
xchg
nop
je
mov
movsb
icebp
test
es
mov
fldt
push
test
aad
mov
jecxz
cmp
dec
and
push
sbb
gs
or
fs
dec
dec
add
std
and
jo
pop
aad
mov
pop
inc
push
in
sub
mov
push
push
loopne
fstpl
inc
and
sbb
inc
aas
ret
iret
scas
test
lret
fs
mov
fisubrl
xlat
cmc
mov
and
pop
dec
shlb
subb
aad
inc
cmp
movsl
inc
icebp
dec
cmpsl
fwait
cwtl
xor
leave
mov
ds
lea
imul
push
cmp
lea
dec
inc
mov
cltd
cs
rorb
shlb
repz
test
jb
xchg
cmp
dec
mov
icebp
jne
mov
lds
data16
hlt
inc
adc
clc
bound
lahf
push
cli
arpl
pop
lock
call
push
pop
mov
jle
movl
loop
cmp
sub
addb
mull
stos
xor
notb
inc
jae
mov
push
fisttpl
rorl
mov
add
mov
repz
popa
pop
xor
mov
test
out
sbb
pop
lock
fistps
sub
jne
sub
cld
cltd
mov
mov
push
mov
dec
push
mov
les
xchg
mov
mov
sti
aam
adc
xchg
fs
inc
cmp
call
into
arpl
aas
jecxz,pt
popa
dec
sub
jne
mov
repz
jo
xchg
inc
and
jle
les
dec
and
cmp
adc
vmwrite
pop
dec
imul
xor
or
and
jmp
sub
pusha
adc
mov
pop
xchg
in
repnz
jo
testl
sub
lret
inc
gs
fdivl
dec
push
lods
bound
aaa
inc
add
xor
pop
sub
aam
je
push
notl
pop
cmc
sbb
out
stos
mov
movsl
adc
lretw
and
pop
inc
mov
push
add
shlb
popa
mov
in
stos
jne
test
sub
in
xorl
jmp
int3
cmp
mov
rcll
pushf
sbb
xchg
loopne
mull
pop
cmpsb
movsb
into
push
hlt
push
mov
cmp
xor
aad
pop
xchg
mov
lret
sbb
loopne
dec
js
push
dec
push
jmp
popf
dec
pushf
sbb
cli
sahf
rorl
pop
addl
test
sub
out
and
out
push
push
jmp
adc
sbb
shlb
add
imull
call
mov
add
les
iret
mov
adc
xchg
insb
loope
cld
jmp
dec
dec
jmp
aad
cmp
mov
stos
leave
and
iret
or
adc
ret
test
pop
lds
mov
push
clc
cmpsl
in
mov
or
sbb
pop
pusha
push
inc
mov
fadds
rcr
push
xchg
je
mov
and
dec
sbb
imul
jmp
jl
mov
mov
push
mov
xchg
repz
adc
out
add
insl
and
push
mov
jecxz,pn
mov
andb
mov
mov
mov
and
xchg
in
pop
test
pusha
dec
or
add
jbe
mov
sub
popf
test
dec
sub
fmul
subb
add
stos
inc
pop
push
shrl
xor
add
enter
dec
jle
lahf
add
orb
nop
idiv
and
sub
cmp
outsb
dec
out
lea
popa
cmpsl
loopne
jo
mov
xlat
fstps
xchg
inc
sub
dec
add
movsl
mov
xchg
insb
xchg
pusha
adc
fs
jmp
dec
hlt
dec
or
call
xchg
mov
shrl
or
movsb
jo
test
mov
rcrl
scas
push
dec
out
xchg
or
lods
faddl
and
push
and
das
out
js
xchg
adc
mov
inc
leave
addr16
inc
out
shrl
fldcw
aad
adc
arpl
and
push
rcrb
clc
jo
mov
loop
mov
lret
push
leave
shl
int3
aas
test
clc
xchg
ja
mov
leave
arpl
add
mov
jge
xorl
cmp
pop
xchg
lods
xchg
lea
lahf
xchg
jge
xchg
adc
popa
and
sub
xchg
mov
ds
gs
shll
lahf
mov
sti
repz
cmp
adc
test
orb
out
jmp
movsb
mov
sbbl
sbb
mov
data16
gs
push
clc
push
jne
jg
ret
mov
pop
mov
sbb
insl
insl
push
gs
fdivrs
in
icebp
adc
loope
negb
roll
das
jmp
movsl
mov
push
sub
or
test
push
movsl
call
jnp
add
inc
sbb
lods
fucom
loopne
mov
je
sub
rorb
mov
pop
cmp
mov
movsb
dec
mov
sbb
add
xor
or
or
vpsubusb
cmp
mov
scas
and
lea
aaa
call
mov
dec
xorb
pop
inc
adc
xor
movsb
fwait
and
shlb
or
inc
loopne
xchg
in
mov
out
cmpb
fadds
aas
lods
stos
and
mov
or
jmp
cltd
and
jo
lret
shl
push
xor
jle
jnp
sub
outsb
sub
ret
gs
ficomps
xor
pop
mov
mov
aad
push
adc
adc
push
scas
adc
mov
insb
mov
insb
sbb
les
push
add
loopne
aad
pushf
rorl
add
cmp
jmp
cs
cld
addr16
loope
add
mov
lods
mov
jne
mov
lret
fs
pop
xor
and
mov
or
fistps
pop
cmpsb
or
jae
push
sub
loopne
sahf
pop
pop
std
movsb
fistpl
inc
fldl
aaa
push
dec
xchg
icebp
push
dec
enter
cmp
jbe
out
lods
inc
cmpsb
aad
ljmp
imul
jl
sub
loop
mov
jmp
sarb
push
adc
sbb
mov
mov
mov
dec
fs
adc
push
scas
sub
movsb
xchg
pop
movb
addb
data16
lods
ljmp
add
dec
adc
pop
or
test
jg
mov
call
dec
pop
push
xor
cltd
dec
pop
movsl
icebp
mov
cmp
sbb
sub
pminsw
in
mov
inc
and
xlat
dec
sbb
subb
insb
xor
jmp
fwait
cwtl
test
sub
mov
fcomp
loope
mov
or
pusha
cmp
pop
or
out
cmp
inc
sub
dec
sub
or
into
fisubl
loop
mov
outsl
addb
mov
in
cmpsb
mov
sbb
cmp
push
imul
xchg
jo
pop
shrl
in
sub
and
je
scas
mov
int3
outsb
int3
into
popa
repz
push
xor
test
test
les
pop
cmc
jo
adc
aam
lret
mov
push
and
out
call
mov
sub
movsb
sub
hlt
popl
rol
or
sbb
insl
and
sarb
rorl
pushf
mov
push
js
dec
cmpsb
cmp
ret
jp
mov
and
push
test
lret
cmp
pop
pop
mov
push
mov
xchg
jge
rcrb
jle
cmp
stos
lods
inc
ror
neg
pop
adc
and
fucomp
nop
ficoml
push
jae
add
mov
int3
lea
push
pop
xchg
daa
das
aaa
shlb
ja
xor
xorb
js
loope
sbb
and
ss
sub
fmuls
push
outsl
movlps
subl
push
mov
ficomps
inc
dec
push
in
mov
push
in
loope
sub
addb
std
rcll
inc
mov
fmuls
or
mov
fmuls
cmp
or
shr
jle
andb
dec
cltd
xor
push
in
loope
xchg
pop
adc
mov
cmp
shr
push
xchg
fcomps
adc
pop
mov
push
stos
push
test
push
pop
jg
jge
roll
shrl
mov
jbe
xchg
mov
or
adc
and
shrl
mov
cmp
xchg
add
adc
mov
mov
das
mov
xchg
xchg
and
add
fiaddl
push
adc
lods
xchg
fwait
mov
aad
push
cmpsb
in
test
les
mov
sbb
scas
enter
or
pop
sti
xor
push
aad
roll
push
jb
test
repnz
ffree
pop
sub
dec
popa
shrl
add
ljmp
fildll
clc
lods
je
mov
repnz
lret
das
stc
adc
out
mov
push
scas
and
adc
notb
xchg
add
or
jbe
pop
fwait
push
dec
cmp
push
mov
aad
insl
sub
aam
ja
sub
sbb
jmp
dec
popa
push
mov
adc
inc
sbb
cmpsb
shl
cmpl
mov
std
pop
dec
jmp
push
inc
mov
shl
add
aam
inc
in
jno
lret
mov
mov
mov
sbb
dec
pop
inc
mov
xchg
insl
adc
shl
sub
push
xlat
pop
xchg
ljmp
int
fs
stc
fcoml
lods
jmp
les
mov
stos
jae
and
mov
cli
xor
xchg
sbb
mov
aas
cmpsb
lock
sbb
stc
out
mov
sub
pop
add
std
jg
cmp
imul
jo
es
add
lock
sti
mov
add
sub
insl
dec
sarl
push
out
pop
dec
mov
popf
bt
aad
pop
ljmp
or
test
cmpsl
fnstcw
or
mov
sti
fwait
inc
push
sti
xor
enter
inc
sbb
jl
lods
insl
xchg
stc
mov
loop
fisubrl
and
lds
hlt
rcr
pop
adc
fisttps
inc
cmp
or
xchg
cmpl
fdivrl
push
lds
ret
cmpl
push
popa
xchg
jmp
stc
loope
lods
pop
pushf
cld
repz
pop
movsl
push
sbb
adc
xor
mov
pop
mov
push
mov
lahf
enter
pop
shll
lds
pop
adc
lcall
push
andl
adc
stos
push
xchg
sbb
daa
xchg
inc
sub
dec
sub
push
mov
pop
jns
aas
or
xchg
aas
or
imul
mov
cmp
test
rclb
sbb
mov
leave
imull
jle
rclb
lds
subl
lcall
inc
xor
or
lahf
sbb
or
pusha
cmpsl
dec
mov
xlat
or
leave
fsubr
insl
push
and
push
xchg
xchg
sbb
xlat
addb
insl
repnz
ret
sbb
add
in
add
xor
lods
movsl
aas
dec
cwtl
xchg
mov
mov
cs
mov
stos
or
mov
xor
cli
jne
push
test
stos
mov
jae
sbb
aam
or
out
jo
enter
out
scas
xchg
rcr
add
enter
push
in
mov
enter
inc
addr16
mov
or
inc
lock
jb
add
and
xchg
sub
push
add
enter
dec
fsubp
call
pop
adc
xor
push
out
xchg
lock
fwait
mov
mov
fbld
mov
mov
lahf
in
add
cmp
dec
insb
and
into
test
iret
mov
mov
mov
out
sub
push
fstps
sub
xor
mov
test
aam
pop
insb
xor
sub
test
jmp
mov
adc
stos
loopne
out
xor
int3
sarl
push
inc
mov
cmp
out
test
push
push
mov
inc
mov
cmp
cld
cmovle
leave
lock
ret
clc
lods
test
sti
aas
pop
addb
sbb
push
lods
hlt
mov
aam
jle
daa
jmp
test
and
cmp
les
jle
popf
cmp
mov
jecxz
leave
xchg
xchg
pop
enter
movsb
das
out
xchg
bound
andl
imulb
add
jnp
pop
lahf
mov
adc
push
insb
mov
sti
inc
inc
push
mov
xor
mov
sarl
jno
sbb
sarb
or
mov
js
gs
sub
ja
fsubl
push
lret
loopne
es
out
loop
cwtl
jns
mov
out
sbb
xchg
push
add
cltd
cmpsb
cmp
dec
pop
ret
sbbl
aas
mov
fisttpl
inc
inc
icebp
jae
and
test
jb
inc
jecxz
or
mov
inc
sti
fs
aam
mov
ss
xlat
dec
xor
cmp
pop
xor
add
jecxz
mov
scas
xor
lret
cmp
ret
stc
outsb
out
aas
add
into
add
and
cmp
pop
jl
jecxz
add
lret
repnz
icebp
fdivrl
inc
adc
stos
or
mov
in
push
and
add
sahf
nop
test
imul
or
outsl
cmp
push
dec
or
pop
movsb
push
in
imull
nop
jl
mov
mov
jg
call
sub
cmp
sub
sbb
xchg
in
add
mov
into
sub
sbb
js
imul
inc
jl
cli
mov
int
and
fildll
out
ds
nop
adc
pop
test
mov
inc
lods
and
pop
mov
pushf
dec
or
and
fidivs
push
dec
insb
jne
push
push
out
mov
xchg
push
dec
mov
cld
inc
ret
xchg
push
jno
jge
leave
scas
push
push
fiaddl
es
sbb
push
andl
hlt
pop
insb
mov
jno
cli
negl
dec
dec
mov
cmp
add
and
out
cwtl
push
aas
xchg
jbe
mov
lret
add
pushl
pop
fwait
mov
iret
scas
movsl
fwait
push
mov
and
out
add
out
xchg
cmpsl
push
add
jno
xor
sarl
adc
rcrl
shlb
jo
pop
mov
call
xchg
mov
mov
call
xchg
xchg
or
fistpl
jne
outsl
scas
add
in
mov
pop
cmp
dec
test
jo
mov
pop
shll
pop
sub
mov
and
xor
fsts
lret
mov
clc
dec
add
cltd
cli
mov
push
or
adc
outsl
dec
arpl
mov
fldenv
stc
adc
jo
push
adc
mov
and
pop
dec
inc
inc
notb
push
mov
repnz
stos
xor
push
dec
out
in
in
push
cwtl
aaa
jno
sbbl
sub
push
testb
pop
jns
pop
sub
inc
xchg
dec
cmpl
cmp
arpl
cmp
scas
ds
leave
mov
mov
icebp
or
jle
pop
test
push
sahf
sub
sub
dec
lret
xchg
cs
out
jp
ss
fistpl
cmpb
cmp
lahf
stos
pop
test
jns
bound
cs
call
push
inc
lds
lcall
and
jmp
jns
add
jnp
xchg
mov
add
in
inc
jnp
fisubrs
popf
jmp
add
xlat
dec
mov
pop
mov
loop
or
dec
int3
dec
mov
loop
mov
mov
lret
mov
es
dec
lahf
jl
sti
add
pushf
sbb
in
lock
cmp
fists
inc
xor
in
or
mov
xchg
xchg
movsb
iret
cmp
mov
insb
lock
int
and
adc
push
mov
addl
lods
jl
sbb
jne
in
cmp
push
xchg
fmull
imul
inc
dec
das
dec
lods
push
scas
cmc
into
inc
jne
and
adc
jne
lret
sahf
fnstenv
sbb
ss
nop
xchg
inc
mov
and
xchg
stos
fimull
ret
xchg
sbb
out
sub
xchg
in
or
fwait
les
mov
cli
xchg
inc
fld
add
mov
in
sub
mov
call
mov
sbb
test
fidivs
pop
cmp
repnz
mov
out
pop
jno
rorb
cmpsl
cwtl
and
in
imul
pop
and
mov
test
add
lea
leave
mov
cli
lock
ds
mov
push
sbb
aam
cmp
mov
add
outsb
jp
popf
push
add
mov
push
cltd
movsl
mov
push
int
repz
enter
sarl
lods
call
outsb
xchg
ja
xchg
mov
push
lods
movsb
xor
dec
inc
xlat
or
cmpsb
mov
sub
iret
adc
int
adc
xorl
loopne
mov
imul
in
dec
fistpll
mov
jmp
loopne
mov
pop
in
jecxz
and
popf
imul
dec
shl
dec
mov
cmp
test
mov
insb
pop
or
xor
movsb
mov
stos
cmp
rorl
lret
add
loop
mov
int
add
xchg
imul
into
add
sub
pop
mov
das
cli
stc
cmc
or
repnz
dec
xchg
test
xchg
cmp
jmp
fildl
mov
test
stos
and
movsb
out
xor
sub
lret
stos
aas
sahf
popf
jnp
jecxz
jmp
fprem
sbb
push
inc
fldt
xchg
xchg
mov
out
test
aad
jl
iret
fnstsw
jnp
stc
adc
inc
loop
cltd
mov
in
int
daa
jbe
popf
mov
pop
popf
std
jle
and
inc
pop
outsb
int3
xlat
cmpsb
sti
std
mov
cmp
fdivs
filds
test
dec
pop
xor
inc
out
jl
outsb
cmp
shll
pusha
sub
test
sti
xlat
jmp
lea
pop
jp
outsb
lea
popf
cwtl
xchg
fwait
mov
ret
xor
pop
inc
mov
ret
sahf
cmp
sub
add
jno
sub
cmp
cmp
sbb
scas
incb
sti
jg
xchg
test
loope
ret
in
scas
push
mov
adc
mov
lret
js
fisubl
xchg
sub
xchg
lahf
mov
jae
mov
dec
lret
out
inc
mov
and
lods
add
pop
xchg
push
lret
push
inc
test
pusha
jge
sub
mov
shll
adc
cmp
hlt
insb
loopne
push
mov
sub
xor
mov
cltd
inc
out
inc
jbe
fwait
lods
adc
cmp
loopne
pop
xor
inc
dec
ds
dec
fldl
mov
or
in
mov
ficoml
data16
popl
or
insl
je
in
jecxz
out
mov
scas
pop
cmpsl
data16
nop
stos
fisubrl
jg
sbb
pop
add
mov
xor
or
jmp
std
mov
jge
add
mov
shlb
je
mov
sbb
lea
mov
push
arpl
decl
sbb
jl
xchg
popf
dec
inc
jp
add
cmc
fsubrs
push
cmp
bound
jno
and
pop
lods
mov
add
insb
test
faddl
adc
mov
icebp
jmp
ret
cli
or
xor
or
inc
fstps
test
cmc
pop
aas
push
je
ljmp
push
test
fnsetpm(287
mov
ret
stc
cld
add
and
push
sub
jecxz
jp
dec
jg
mov
adc
or
je
imul
fstps
ds
int
ficoml
jecxz
inc
cmpsb
lret
sub
xor
jg
sbbb
cmp
fadds
mov
test
lret
jb
mov
loopne
outsl
pop
xchg
js
sub
std
outsb
lret
fstpt
jmp
inc
icebp
enter
icebp
mov
xchg
sub
lods
imul
sbb
scas
jno
adc
cmp
std
subb
jmp
orl
aaa
adc
dec
fcoml
or
mov
ret
dec
sahf
in
lods
jmp
daa
outsb
test
dec
jmp
pop
enter
cmp
rcrl
pop
fprem1
xor
adc
sbb
push
or
jne
loop
addr16
mov
shrl
jg
std
addr16
out
and
rcr
xor
sbb
arpl
stc
ror
pusha
lret
sbb
sub
cli
pop
mov
mov
pop
push
test
pop
jecxz
je
fmull
imul
mov
push
or
lock
xchg
rorl
jo
lods
stos
icebp
fnstenv
sub
out
cli
mov
push
xor
push
add
inc
adc
decb
pop
jp
movsl
xchg
lea
dec
popa
adc
mov
adc
dec
mov
and
aaa
inc
mov
jns
ror
rorb
rcrb
jge
inc
push
scas
push
mov
dec
jmp
xchg
fsts
lret
push
test
mov
stos
cmp
leave
pop
idivl
cld
lds
js
add
loopne
push
clc
add
clc
push
out
mov
add
mov
xchg
mov
or
pusha
inc
lds
cmp
sbb
push
hlt
push
push
and
xchg
dec
pop
shrl
lcall
rcrb
mov
xor
jmp
push
sbb
loope
fsubs
sub
sbb
or
outsl
mov
out
inc
mov
cmp
add
sub
inc
pop
pop
out
scas
fisubl
int
lea
push
fistps
push
or
add
jne
call
sub
fistps
cmp
jbe
dec
jle
mov
icebp
hlt
mov
or
cs
sub
lods
fldenv
ljmp
fisttpll
mov
jbe
loope
jp
adc
loope
push
in
inc
cmc
jecxz
icebp
add
add
stos
les
sbb
cli
pop
cld
stos
lods
cs
divl
xchg
cmp
sub
dec
jb
js
adc
dec
arpl
jecxz
cmp
fimull
pop
loopne
sub
mov
jb
loope
xor
xchg
movsb
xchg
xor
cmc
int3
nop
sbb
sub
jne
scas
call
add
fs
add
lea
dec
shll
jo
lds
push
iret
mov
fidivl
shlb
jge
sub
arpl
xchg
test
push
sub
les
scas
inc
cmp
jae
mov
inc
jb
addb
xchg
lret
adc
xor
sahf
movntq
aas
xchg
push
and
ficompl
lds
mov
mov
mov
imul
daa
push
push
dec
or
test
jne
or
popf
inc
fwait
jge
jbe
sub
cwtl
fnstsw
sahf
cmc
repnz
jecxz
mov
insb
cmp
inc
mov
pop
or
jae
jne
movsb
aam
sub
loop
popf
xor
jb
adc
leave
jg
and
enter
xchg
push
cwtl
adc
push
adc
xor
fists
xor
mov
mov
test
enter
in
jg
addr16
popf
mov
lock
flds
pcmpgtw
sbb
push
sbb
scas
dec
cld
sbb
decl
mov
addl
aas
shlb
aad
inc
je
jl
cmp
ret
xchg
inc
jo
out
dec
sbb
mov
sbb
ja
pop
add
jne
jbe
in
repz
xor
sbb
pop
xchg
pusha
mov
mov
leave
mov
fbstp
stos
add
std
xor
int3
out
mov
xchg
adc
pop
hlt
sahf
cmp
repnz
fmull
sbb
out
xchg
xchg
mov
xchg
lahf
inc
dec
iret
lret
push
push
stos
mov
nop
leave
ret
in
cmp
clc
or
xor
pusha
sbb
pop
xchg
sbb
ljmp
js
pop
scas
imul
and
js
jb
icebp
out
mov
fdivp
sub
jmp
call
jg
pop
mov
daa
cmp
mov
push
xchg
shl
sub
dec
push
mov
into
dec
push
adcb
fmul
dec
xchg
movsl
pop
xor
pop
xor
pop
xchg
fisubl
cmp
xchg
cmc
lods
dec
jecxz
fwait
int
or
pop
and
jmp
shl
arpl
mov
les
or
fidivrs
pop
cmp
mov
cli
rcrb
scas
pop
mov
adc
ljmp
add
jmp
or
popa
or
sub
push
bound
sub
ljmp
push
shl
ret
xchg
xchg
push
shufps
imul
mov
fisttps
mov
iret
sub
xchg
cltd
push
orl
mov
push
mov
sbb
mov
xchg
mov
mov
pop
lods
dec
rorl
and
adc
xor
in
inc
cmp
mov
mov
sub
arpl
mov
mov
movsb
xor
es
mov
pop
mov
mov
mov
das
loopw
pop
mov
loop
mov
sub
pop
fisubrs
popf
mov
and
addr16
sahf
push
movsl
adcb
pushf
lcall
adc
xchg
add
inc
daa
xchg
mov
out
dec
clc
repz
lret
sbb
sbb
ja
add
aam
call
insl
mov
and
or
sbb
fisttpll
mov
jge
fdivr
xor
add
fisttpl
fwait
into
jnp
mov
jecxz
mov
mov
xor
add
cmp
inc
mov
xor
nop
popf
add
les
daa
inc
imul
push
xchg
out
mov
leave
push
out
loopne
push
iret
sbb
in
hlt
xor
mov
lret
aas
mov
ljmp
imul
lods
mov
mov
or
mov
sub
jge
orl
rolb
mov
call
push
cltd
xchg
inc
into
sbb
mov
xchg
inc
jp
push
sti
cmp
sub
and
roll
push
das
inc
loope
inc
insl
es
mov
xorl
sbb
mov
pop
popf
mov
or
jg
in
cmp
imul
sub
ljmp
mov
push
arpl
shlb
xchg
add
jnp
cmp
outsl
hlt
shrb
nop
jbe
mov
jno
mov
cmp
cmpsl
mov
test
push
mov
jnp
dec
rcrl
xorb
xchg
cli
xchg
pop
adc
mov
imulb
xor
inc
out
inc
adc
inc
push
addl
movsl
divb
cmp
push
scas
push
movb
or
test
cmp
leave
notb
std
leave
ss
in
cmp
pushf
jnp
push
in
out
jnp
mov
xchg
nop
jnp,pt
pop
fmul
adc
loop
repnz
jno
iret
icebp
push
mull
push
inc
lret
int
stos
ret
sbb
nop
mov
repz
dec
gs
inc
mov
ljmp
fdiv
ficomps
add
xor
ficomps
out
inc
or
lret
pop
inc
shrl
lds
mov
adc
ret
sub
test
loope
mov
call
push
cs
dec
pop
jae
std
add
fldl
add
cmpsb
xor
mov
mov
out
sub
js
lea
add
into
js
cltd
fs
in
mov
sub
stos
or
jnp
dec
add
cmp
in
sub
notl
aas
mov
stos
int3
mov
jl
jp
js
cmp
lcall
out
shlb
pop
inc
test
pop
lods
mov
and
bound
jecxz
cmp
scas
ficomps
sarl
push
sub
loop
xchg
pusha
pop
shr
pop
scas
lret
push
repnz
and
inc
sub
mov
push
inc
pop
pop
pop
stc
sub
jnp
xchg
fisubs
inc
fmull
xchg
shrb
sub
lock
inc
in
jb
clc
pop
lds
ss
sbb
stos
sbb
and
inc
mov
sbb
dec
pop
mov
sbb
lods
pushf
dec
enter
mov
shll
cmp
push
js
fisttps
leave
pop
rcr
fistpll
pop
cmp
inc
adc
inc
shll
mov
jle
fimull
mov
add
inc
repz
lret
dec
pop
or
xchg
inc
or
leave
jb
loope
pop
inc
cmc
push
ret
sbb
cmpsb
rol
dec
mov
outsl
add
push
je
lock
push
leave
push
jne
lods
pop
lret
xor
dec
stc
ds
push
dec
inc
das
cs
inc
add
and
inc
mov
add
push
les
jecxz
aad
inc
stos
push
popf
lods
fucomip
and
adc
add
scas
sbb
shll
inc
or
pop
ret
mov
or
insb
lret
hlt
into
add
add
arpl
shlb
adc
push
imul
sti
cltd
dec
xrelease
lock
pushf
inc
flds
iret
imul
pop
imul
lods
mov
sti
ljmp
xchg
inc
pop
mov
xchg
mov
cwtl
sbb
and
loopne
in
fnsave
sub
insl
push
not
mov
dec
sbb
into
sahf
push
or
add
cs
mov
stc
cltd
in
loop
ljmp
dec
or
inc
dec
frstor
xor
pop
mov
into
xchg
lods
push
mov
bound
mov
jns
ficompl
inc
or
pop
xor
add
jns
addr16
daa
orb
ja
cmp
sub
imul
imul
pop
xchg
cli
int3
xor
pop
sbb
ret
and
pop
in
movsl
pop
pop
hlt
and
mov
ror
pop
dec
insb
hlt
rorb
icebp
inc
xor
jnp
inc
movsb
enter
dec
outsb
pushf
fdivr
pop
xor
mov
daa
scas
adc
fistps
jge
or
jecxz
inc
arpl
mov
sbbl
outsb
mov
es
mov
js
pop
push
xor
dec
loope
mov
dec
bsr
or
cmp
pop
dec
in
adcl
sbbl
jge
lock
jbe
xor
lret
incb
test
sbb
cmp
push
into
aad
push
inc
mov
hlt
in
pop
test
mov
pop
les
arpl
push
leave
fwait
adc
gs
push
push
sbb
sbb
arpl
std
test
outsl
adc
add
scas
in
mov
icebp
sub
clc
out
lret
aad
rcll
sub
hlt
mov
pop
insl
or
movsb
or
orb
adc
sub
out
test
xor
pop
inc
or
cmp
loope
xorl
sub
push
pop
sub
sbb
ljmp
and
jmp
xchg
push
jl
adc
pop
loope
outsb
add
and
out
mov
and
cs
mov
ljmp
sub
pop
in
mov
sub
decl
int3
pushf
rorb
xchg
xchg
call
cmp
and
jg
sahf
push
mov
fisttpl
inc
dec
insl
mov
sti
aam
pop
mov
xor
lahf
dec
test
mov
cmc
loop
gs
nop
jl
xor
test
add
adc
bound
call
add
iret
mov
test
sub
jp
jle
xor
mov
mov
fstpt
loopne
inc
xchg
movsb
mov
mov
pop
mov
push
sbb
and
sti
sbb
lock
out
jle
push
int3
imul
mov
rorl
imul
daa
std
cmp
cmp
jg
cmp
pop
jnp
fwait
and
or
dec
sub
mov
mov
mov
inc
dec
xor
std
repnz
cmp
push
lcall
cmp
add
jl
rcll
push
hlt
mov
mov
aam
ds
push
xchg
aad
mov
jb
cli
movsl
inc
out
int
das
mov
test
daa
or
lds
and
lret
fmul
cmp
test
leave
cs
push
sarl
hlt
insl
mov
or
mov
cmp
js
rclb
fnsave
xchg
push
sub
push
and
fwait
pop
mov
icebp
mov
std
jge
mov
inc
pop
xchg
enter
and
insl
popf
xchg
sub
fiaddl
mov
sub
iret
es
les
xor
jbe
dec
leave
pop
fidivs
shrl
jp
nopl
inc
ds
inc
cs
adc
inc
ret
sub
xchg
or
out
sbb
sahf
lods
or
aaa
popf
mov
fildl
shl
pop
xor
call
jg
and
mov
ss
dec
imul
addr16
js
cmpsl
cmovae
shlb
clc
mov
loope
mov
cmp
imul
mov
jne
mov
mov
mov
dec
imul
shll
inc
or
mov
pop
movsl
sahf
stos
sbbb
arpl
repnz
add
jb
xor
aaa
xlat
pop
lret
mov
mov
push
test
fwait
mov
or
pop
add
ret
mov
out
push
test
push
pop
jnp
addr16
enter
or
sbb
cmp
and
loop
imul
mov
mov
popa
faddl
dec
jecxz
and
sbb
jecxz
jne
xchg
adc
cmpsl
pop
lods
fnclex
lods
icebp
jecxz
in
sub
aam
pop
push
orl
mov
cltd
in
testl
adc
pushf
rorl
or
sub
movsb
xchg
lcall
dec
in
mov
movsb
jp
movb
xor
je
pushf
je
xlat
in
dec
fmuls
test
adc
pop
cld
xchg
add
jecxz
testl
xchg
daa
icebp
mov
mov
xchg
or
ret
outsb
jb
fwait
mov
loope
test
cmpsl
out
adc
sti
mov
mov
sub
mov
rclb
aas
ficoml
ret
testl
bound
out
fcoms
mov
fsubs
icebp
jecxz
subl
xchg
sbb
sbb
stos
xlat
out
test
lea
pop
test
sub
aam
push
mov
mov
stos
or
testl
adc
adc
push
shll
pop
cwtl
fisubrl
add
mov
push
or
aad
mov
push
in
in
divl
xor
sub
leave
fwait
iret
or
push
and
pop
mov
or
aad
aad
push
sbb
mov
push
pop
stos
ja
dec
xchg
popf
and
and
inc
rcrb
push
lds
and
sti
and
mov
cwtl
cs
push
lds
imul
imul
sbbl
inc
jb
push
fdivs
adc
pop
ss
mov
fildll
and
cmp
inc
in
mov
data16
cwtl
inc
pop
push
loope
mov
pop
add
jns
pop
fisubrs
cmp
cmp
stos
cmp
std
dec
leave
inc
imul
test
cmpsl
xchg
dec
sub
into
jnp
mov
arpl
jnp
mov
mov
jnp
xor
insb
int3
push
aad
mov
pop
push
adc
test
inc
add
negl
gs
movsb
lret
and
mov
lahf
fldcw
mov
and
sub
push
pop
mov
cwtl
subb
lods
test
push
mov
rorb
rolb
mov
scas
pop
pushf
sbb
jne
or
xor
lahf
fxam
mov
xchg
adc
pop
xor
push
dec
addb
dec
mov
test
inc
adc
sub
mov
test
outsl
xchg
int3
jae
and
push
adc
inc
lods
jns
insb
dec
push
pusha
pop
cmp
pop
mov
lret
aad
xchg
jge
inc
cmpsb
sbbl
push
das
ret
mov
cmc
mov
jl
fldenv
dec
push
xor
mov
shlb
xor
cmp
or
mov
push
push
stos
insl
adc
jge
stos
mov
adc
das
jg
or
sub
in
mov
das
sbb
pop
test
rclb
cwtl
lcall
aaa
mov
sarb
or
cmpl
in
fisubrl
fs
rorb
sahf
jns
mov
repz
xor
imul
sti
pop
fnstenv
aad
sub
inc
mov
rorl
push
or
cmpsb
push
sub
mov
lret
rcrl
daa
ljmp
int
sbbb
dec
mov
xchg
sub
shrb
leave
pop
xchg
xor
jno
xor
jmp
add
and
jmp
mov
ljmp
repz
dec
mov
and
lods
jns
aad
cs
jnp
jo
jmp
jb
pop
mov
mov
scas
adc
jne
add
ret
icebp
aaa
push
cmp
xchg
repz
aaa
loopne
jno
push
test
ret
loope
mov
ds
dec
dec
adc
ss
push
cltd
stc
ja
ret
push
pop
or
or
xchg
jge
mov
imul
jecxz
shlb
pop
test
xchg
lds
mov
lahf
loop
inc
push
add
outsl
test
enter
lcall
loop
mov
push
dec
fldl2e
loope
fnsave
out
mov
and
push
popa
int
mov
cmp
fcmovnbe
mov
stc
mov
xor
bswap
test
jge
outsl
sbbl
pop
aam
push
fidivrl
cld
hlt
pusha
pop
jp
xchg
mov
hlt
or
push
adc
adc
aaa
mov
movsb
test
fldcw
mov
xor
jl
aaa
lea
xchg
jle
loope
mov
and
enter
add
sub
xor
sbb
or
dec
mov
jg
leave
ret
dec
add
xchg
shl
fidivrl
push
orb
sub
aad
out
dec
loop
or
jne
nop
orl
push
in
sbb
orb
sti
inc
pop
inc
ljmp
clc
cmpsb
adc
sub
stos
clc
jmp
test
jnp
mov
test
and
rcrl
sub
inc
sahf
stc
mov
inc
out
push
mov
repnz
pop
mov
push
orb
jecxz
enter
cmpsl
leave
ds
push
sub
rol
das
daa
test
mov
xchg
cli
shlb
rorl
ja
lea
xorb
push
cmp
lock
ret
adc
mov
aad
icebp
inc
fsubs
push
jle
sbb
andl
mov
fisubrs
in
nop
jle
sub
cwtl
sbb
mov
popl
out
cmp
cltd
into
faddl
repnz
and
mov
pop
jbe
scas
pop
popf
jnp
leave
pop
aas
mov
cmp
test
pop
sub
push
cltd
or
arpl
push
fs
mov
addr16
aam
cmp
jg
cmp
add
test
sbb
loopne
and
cmp
adc
or
xlat
mov
in
test
xor
mov
xor
in
cs
nop
lods
xchg
adc
mov
dec
xchg
in
jg
shr
out
imul
outsl
out
push
fwait
cmp
addr16
pop
jecxz
mov
jb
or
icebp
sbb
sbb
sub
dec
andb
test
in
ss
mov
mov
je
ret
mov
popf
xor
adc
push
cmp
movsb
inc
sub
stc
cmp
jno
lea
adc
or
ret
pop
push
xchg
hlt
mov
mov
push
mov
insl
ficoms
mov
out
icebp
pop
jb
jp
push
lret
mov
pop
in
inc
hlt
dec
lret
rclb
popf
mov
cli
ss
sbb
loope
inc
sbb
insl
dec
add
ret
enter
cmpsb
mov
sub
ss
mov
test
and
push
xor
aad
lods
ss
xchg
fiaddl
subl
aam
cmp
mov
add
fimull
mov
or
mov
test
or
push
or
push
mov
dec
mov
or
lret
test
shr
xor
or
addr16
jmp
push
icebp
into
push
repnz
mov
fwait
cmpsb
pop
and
sbb
jmp
dec
popw
lock
insb
jb
mov
add
mov
je
ljmp
or
arpl
lods
jbe
mov
test
inc
or
rorb
mov
adc
adc
cmpsl
das
fs
and
cltd
xor
hlt
add
pop
clc
or
push
movsb
mov
inc
xchg
or
or
dec
xor
popf
int
cmp
sarb
jle
fiadds
sbb
les
mov
lods
bound
sti
mov
ficomps
roll
les
vpsubb
out
mov
lahf
mov
inc
pop
cmp
stos
js
jns
popf
fadds
outsb
pop
cmp
push
fmuls
mov
iret
push
push
lock
mov
xor
jg
lods
ja
test
je
xchg
mov
fstpt
cmpsb
fwait
popa
sub
xchg
add
xor
popa
add
clc
orb
jle
add
xchg
push
lahf
mov
cmp
icebp
dec
mov
bound
xlat
xor
popa
push
or
jns
movb
sbb
jmp
je
pop
inc
dec
out
ja
push
mov
ss
shll
filds
jnp
aam
sub
stc
std
insl
jne
test
call
xor
cmp
ficompl
in
iret
idiv
dec
mov
adc
fwait
popa
icebp
and
or
jmp
ret
inc
pop
jb
fxch
aaa
hlt
mov
pop
xchg
in
jb
push
movsb
push
imul
test
int3
out
lods
adcb
push
mov
aaa
dec
aad
cmp
push
fcmovnbe
sub
cmpsb
mov
ret
jecxz
and
movsl
inc
imull
and
movb
add
in
in
xchg
mov
lds
sbb
int3
into
adc
sub
add
mov
into
dec
or
dec
and
pop
fldl
adc
inc
pusha
cmp
out
mov
movsl
mov
xlat
cld
stos
daa
outsl
xchg
loopne
lea
ja
popf
dec
pop
mov
ret
cmp
imul
cmp
test
adc
and
sahf
push
pop
aaa
push
mov
in
lcall
mov
pop
xlat
jecxz
movsb
lret
add
aaa
jl
popa
push
sub
push
pop
shll
jns
cmp
movsl
push
stc
mov
xchg
push
jb
cmp
cmpsb
pop
mov
test
pushf
sarl
sub
stc
lods
inc
in
das
sub
adc
mov
xor
adc
push
andps
int
pop
jo
adc
test
push
dec
in
inc
mov
and
test
dec
sub
push
dec
inc
out
jg
xchg
xchg
or
and
imul
adc
mov
stos
cs
mov
addr16
lods
pop
loope
stc
or
ljmp
pop
push
adc
push
cwtl
add
xchg
push
out
add
cs
pusha
es
or
cltd
cmpl
mov
aam
cmp
mov
or
loope
das
pop
sbb
adc
popf
mov
jecxz
pop
test
jns
jge
mov
out
pop
mov
mov
stos
push
aam
fstpl
pop
shrl
pushf
mov
push
mov
xchg
pop
cmp
pcmpgtw
std
gs
xor
cmp
ljmp
push
push
sub
js
arpl
es
adc
int3
lea
addr16
jo
insb
and
stos
rcrl
leave
loop
roll
jo
sbb
xchg
mov
imul
dec
aad
push
out
sub
mov
mov
pop
jbe
test
push
enter
fiadds
or
cs
cwtl
dec
and
insb
in
ret
pusha
inc
sbb
mov
sub
and
push
out
in
cli
in
sub
pop
jns
fdivr
lcall
test
or
mov
or
cltd
inc
cltd
pushf
loopne
cltd
pop
and
dec
lret
inc
pop
mov
sub
xchg
sbb
fcom
pop
push
sub
test
outsl
xchg
sub
mov
rorl
shll
adc
inc
inc
aas
ret
pop
push
inc
ljmp
dec
xor
pusha
jne
dec
inc
mov
jbe
movsl
enter
or
xchg
popf
dec
pop
fiaddl
cwtl
cmc
lahf
cltd
fwait
inc
imul
rolb
push
inc
es
xor
add
and
mov
dec
test
add
insb
mov
pop
jae
xchg
test
arpl
test
fdivl
inc
icebp
into
leave
out
jecxz
imul
adc
mov
lret
push
lret
dec
xchg
xor
or
inc
add
cmp
aaa
mov
mov
add
in
xlat
dec
lods
testl
pop
adc
adc
mov
imul
fs
dec
aaa
sub
mov
dec
lret
repnz
in
pop
adc
loopne
stc
xor
jae
add
std
mov
addr16
mov
rorl
popa
das
pop
lods
dec
aad
pop
and
sub
mov
lock
jecxz
fldcw
add
dec
and
in
das
or
sub
inc
aas
xchg
rcrb
imul
fcoms
pushf
mov
and
xchg
or
push
shrl
jo
adc
mov
stos
and
jmp
and
pop
das
adc
mov
enter
in
aad
xor
lods
mov
sbb
jge
push
and
aaa
jl
popf
pushf
lea
jmp
fidivrl
pcmpeqd
push
mov
shll
sbb
bswap
popf
cmp
cli
push
aam
rcll
data16
not
dec
sbb
cld
fwait
loope
add
stos
fs
ss
andb
inc
dec
adc
jg
scas
mov
gs
mov
adc
pop
scas
sbb
adc
cltd
in
xor
fdivrl
mov
test
in
jnp
aam
jb
pop
sbb
mov
dec
out
xchg
push
inc
insb
mov
out
jns
cltd
mov
bound
dec
out
cmp
orl
mov
push
xor
ljmp
mov
enter
cltd
fdivs
cli
cld
stc
mov
mov
jmp
mov
je
and
xor
cli
test
xor
adc
int3
inc
lret
mov
push
les
dec
mov
bnd
xorb
push
mov
lret
pushf
adc
xchg
shrl
lods
adc
sbb
clc
enter
and
out
dec
or
push
fcmovu
cmp
in
cmp
movsl
and
cmp
xor
add
adc
sub
popf
push
and
push
mov
cli
adc
jbe
mov
push
iret
pusha
into
outsl
jle
out
mov
into
in
cli
iret
dec
addb
and
mov
jmp
mov
pop
pop
jp
inc
test
inc
sub
aaa
adc
insl
jg
adc
dec
or
aad
in
js
filds
mov
pop
loopne
push
leave
lods
inc
fs
ss
mov
mov
mov
in
stc
cmp
fsubr
push
sti
mov
mov
popa
mov
mov
adc
push
jb
sbb
cmp
orl
ja
adc
je
int
sahf
int
leave
pushf
xor
sbb
icebp
sub
cmp
lods
xor
leave
mov
ljmp
lds
sub
fs
mov
pop
sub
fwait
or
lret
lret
sbb
out
xchg
dec
inc
xor
inc
or
dec
add
jo
sahf
xchg
push
xchg
pusha
dec
jecxz
pop
mov
pusha
inc
mov
or
mov
popf
insl
jnp
sub
push
xor
xor
push
sbb
pop
lock
test
lret
xlat
imul
out
cli
inc
scas
inc
push
lods
inc
mov
pop
stc
sar
xchg
addl
push
sbb
and
idivl
shrb
mov
sub
int
sbb
jp
or
dec
add
gs
das
inc
pushf
xor
or
sub
or
test
xchg
or
dec
or
inc
dec
mov
flds
shlb
dec
je
adc
clc
std
pop
inc
cmc
fwait
or
lods
call
loopne
sbb
adc
imul
aaa
ffree
mov
fisubs
imul
out
wbinvd
aad
cmp
pusha
arpl
out
push
jmp
mov
xchg
icebp
fucomip
xchg
and
and
test
xor
xchg
add
xor
mov
es
aas
dec
inc
jns
dec
mov
ja
rcll
cmp
inc
mov
mov
sub
out
test
sub
jae
adc
lock
leave
jne
xchg
adc
mov
mov
or
movsl
in
mov
ret
mov
or
rcrl
pop
ja
insb
mov
test
pop
mov
imul
pop
xor
sbb
std
jo
jmp
xchg
in
shr
jl
xchg
mov
or
test
divl
fldl
mov
push
iret
dec
mov
add
cli
dec
mov
mov
adc
sti
call
sub
mov
outsb
add
push
mov
lcall
addb
jns
fdivrp
fucomp
pushf
repnz
test
bound
sub
test
sbb
decb
xchg
mov
pop
int
xor
jbe
inc
add
xor
dec
cltd
push
pop
cmp
push
adc
out
shlb
cld
mov
cmc
pop
test
add
inc
jecxz
frstor
loope
and
push
dec
rcrb
adc
cmp
repz
sarl
jbe
mov
sub
jmp
or
and
mov
arpl
jl
or
jmp
xchg
fnstenv
test
jno
or
xchg
enter
push
mov
fsubl
mov
repnz
mov
lds
addr16
arpl
push
dec
adcl
out
or
dec
mov
xor
arpl
cld
mov
lcall
mov
iret
fisubrl
jmp
ljmp
jbe
inc
mov
ret
fldt
cmp
push
in
outsb
mov
ficoml
insl
int3
out
sti
jb
adc
sub
add
push
lret
xor
sbb
or
xor
or
test
jecxz
into
fistpll
xchg
add
ljmp
adc
jp
push
xor
dec
cli
and
jno
adcl
dec
hlt
ja
fwait
popf
xor
mov
cmp
pop
into
scas
adc
leave
test
idivl
lahf
shll
out
fbstp
xor
xchg
pop
idivb
nop
lcall
mov
xchg
int3
mov
pop
popa
add
in
pop
pop
mov
xchg
pop
push
in
mov
lea
shll
pusha
mov
sbb
xor
xor
arpl
lock
in
xchg
sti
mov
ljmp
and
add
test
sub
and
jne
add
adc
in
out
and
push
ds
inc
sub
inc
imul
stos
xor
xor
pop
pop
out
je
xor
xor
ja
jno
lret
stos
faddp
mov
les
sahf
jg
add
std
adc
jmp
sub
xor
cmpsb
mov
xor
xor
cmpb
or
cmp
adcl
ret
inc
mov
and
and
pop
aad
in
ss
pop
aaa
sbb
into
lods
xor
ljmp
fs
fidivs
dec
inc
ss
shlb
insl
or
mov
leave
mov
fwait
dec
out
imul
jne
cmp
bound
add
aad
jp
shrb
aad
dec
jmp
mov
jns
pop
loop
fisubrl
inc
cmpb
push
push
mov
mov
out
xor
inc
leave
daa
mov
test
pop
dec
cmp
in
cwtl
adc
rcrl
es
ret
std
jns
xchg
dec
movsb
and
cs
data16
loopne
fimuls
clc
push
ret
fiadds
mov
dec
or
test
jno
out
jg
inc
mov
xor
jns
sti
adcl
imul
loopne
or
cmp
out
daa
mov
mov
and
ds
mov
jnp
pop
pop
mov
test
scas
sbb
pop
sbb
mov
cltd
adc
daa
fs
mov
gs
cmc
or
test
mov
in
pop
push
inc
cwtl
or
test
lret
inc
imul
outsl
xchg
jae
out
fs
xchg
addr16
or
mov
fnstsw
jae
push
ret
cmp
jbe
mov
xor
pop
fwait
sub
inc
or
faddl
pop
mov
mov
cmp
jmp
xor
dec
add
lret
inc
sub
dec
movsl
pop
xor
jb
or
imul
add
fwait
std
mov
mov
das
int3
icebp
sbb
rclb
push
pop
pusha
xchg
adc
or
jge
sub
add
sbb
jge
fstpt
scas
xor
ss
pop
jae
fcompl
pop
sbb
xor
jnp
ja
daa
dec
mov
dec
xchg
or
scas
jae
loope
push
lfs
add
cmp
push
mov
or
pop
lds
repnz
enter
xor
in
lret
mov
sub
sub
lea
lcall
pusha
adc
std
aad
and
mov
movsl
rorl
out
lods
and
aas
dec
loopne
xor
pop
into
adc
enter
outsl
faddp
lods
xlat
leave
ss
mov
out
pop
out
ret
pop
fsub
cwtl
setg
push
xchg
dec
pop
aaa
add
xchg
sbb
sub
in
sbb
ljmp
in
lods
hlt
xor
out
das
push
add
fmuls
mov
outsb
int3
lods
iret
jecxz
xchg
mov
push
pop
fldcw
sub
mov
mov
pushf
mov
mov
pop
push
sahf
sub
outsb
leave
xchg
mov
hlt
das
inc
imul
jp
mov
rol
out
mov
jge
xchg
subl
mov
jp
adc
push
in
xchg
lahf
pop
cs
ret
lret
in
imul
std
dec
pop
clc
push
imul
fdivl
jg
sub
out
cmp
arpl
mov
ja
dec
jno
out
les
jae
mov
stos
jne
push
dec
fwait
add
xorb
ror
subb
icebp
sub
repz
ret
mov
shll
adc
adc
cmp
sbb
xor
and
andl
js
adc
fisttpl
in
scas
popa
mov
fbld
out
mov
test
repz
mov
fdivrl
and
sarl
fstps
std
lods
fdivrl
and
dec
cmp
jnp
outsl
inc
dec
sbb
std
jge
jnp
icebp
mov
jmp
fmuls
ss
movsl
imul
ret
call
mov
divb
jae
int
and
xchg
add
cmp
fiaddl
popa
adc
add
pop
cmp
jl
aas
xchg
sbb
push
call
sub
mov
sbb
mov
sub
retw
pop
or
mov
scas
pop
fimull
dec
inc
cwtl
leave
aas
pop
inc
pop
scas
adc
ret
sub
lea
std
push
and
inc
lea
mov
ljmp
and
fwait
cmp
cmp
icebp
pop
xchg
mov
or
rcll
scas
bound
shr
or
add
xor
adc
mov
cmp
ljmp
add
fmuls
adc
cli
sbb
or
clc
mov
scas
popf
or
cmp
xor
fcmovnbe
pushf
mov
and
ss
int3
popa
mov
pop
mov
scas
lds
fsts
sbb
push
or
mov
add
cmp
in
aas
sbb
sahf
dec
fcompl
icebp
pushf
inc
arpl
pushf
mov
pop
leave
imul
cmp
insl
jne
xchg
mov
nop
mov
or
sub
and
inc
push
lea
push
test
insl
adc
mov
aaa
push
adc
jne,pn
paddsb
mov
sbb
inc
paddd
xchg
fldl
int3
jl
push
sbb
add
pop
rcl
inc
pop
and
adc
ror
or
dec
int
subb
xchg
jle
or
ret
mov
cmp
ja
sbb
inc
lods
in
insl
es
push
mov
push
jns
push
cmovo
in
or
adc
jbe
cli
fildl
cmc
test
mov
js
outsb
sub
ds
pop
mov
rcrl
cli
js
xchg
sbb
aad
and
out
or
fldenv
mov
popa
xor
dec
fwait
mov
mov
mov
dec
adc
ss
movsb
push
push
call
addr16
pusha
loope
xor
int
inc
fnstcw
mov
or
push
pushf
add
ss
lea
jecxz
mov
pop
cwtl
bound
lcall
mov
sbb
aam
enter
add
scas
nop
mov
cmp
sub
and
insb
in
repnz
push
std
ret
andl
jbe
xor
xchg
xchg
movsl
pop
mov
sbbb
xchg
lods
push
inc
shlb
mov
jp
sbb
inc
sbb
jge
nop
pusha
movsb
je
roll
js
aad
aam
popa
jmp
movsb
jecxz
add
mov
cmp
in
jecxz
xchg
cltd
xchg
movsb
push
popf
sbb
cltd
dec
lods
popa
pop
int
ret
jo
pop
cmpsb
mov
fadds
sbb
and
add
mov
pop
idivb
inc
scas
push
mov
rolb
cmpsl
scas
aam
in
push
stos
orb
and
jns
jnp
out
test
imul
mov
mov
leave
mov
cld
mov
ja
jecxz
and
mov
jo
popf
mov
clc
mov
scas
fiadds
dec
addl
fs
dec
addl
push
out
pop
dec
mov
xor
xchg
jmp
push
sub
sahf
out
ljmp
lret
pop
sbb
sub
aad
cmp
and
jecxz
mov
aas
js
fldpi
dec
add
lret
or
fdivrs
fbstp
dec
push
xor
inc
fcomps
push
movsb
pop
das
int3
mov
add
nop
jle
inc
mov
xor
sahf
and
xor
fidivrl
pop
imul
sub
inc
adc
lds
stc
mov
arpl
mov
vminsd
push
pushf
scas
fildl
xchg
xchg
mov
pop
daa
filds
and
loopne
mov
xchg
clc
test
lret
dec
jb
cmp
cmp
pop
fwait
sub
pop
in
insb
add
rcrb
ljmp
scas
aad
mov
addl
adc
xor
aad
out
pop
mov
iret
mov
cmp
popf
shll
add
xor
shrb
dec
cmp
inc
inc
cmp
dec
jnp
cmp
mov
loope
insb
mov
jo
rcrb
sbb
inc
fs
mov
les
xor
cmp
or
scas
inc
int
sbb
xorb
out
mov
xor
leave
cld
pushf
out
and
pusha
sub
xchg
xchg
sarb
cwtl
ds
jne
lods
xchg
jl
adc
jnp
mov
repnz
clc
shrl
mov
fsubrl
outsb
ret
inc
and
jle
in
jno
pop
mov
mov
xchg
jne
sbb
aad
rorb
and
sbbb
subb
cmp
cs
and
ss
and
sbb
fsubrs
mov
jp
addr16
adc
xlat
aad
mov
das
adc
jp
add
jmp
shrl
xchg
sti
ficoms
dec
int3
fistpll
jecxz,pt
std
or
nop
or
sarb
shlb
sbb
xchg
lret
js
push
or
jo
sub
fiadds
sahf
jno
sub
add
test
aas
sub
divb
mov
aaa
adc
andl
push
mov
push
mov
out
adc
ficoms
xchg
out
nop
rclb
and
pop
ds
imul
shr
mov
lods
scas
pushf
inc
addl
cmpsb
mov
test
mov
and
mov
jecxz
jns
cwtl
push
xor
pop
xor
and
or
ljmp
sub
cmp
or
insl
fidivl
push
jge
mov
mov
and
ss
stc
dec
leave
ja
int
mov
adc
fists
out
std
test
push
mov
cmp
jne
sbbl
out
push
dec
ficomps
call
mov
decb
in
inc
push
ds
insb
cwtl
aaa
xor
mov
push
cmp
push
or
jae
push
pop
shlb
inc
mov
in
push
jmp
aaa
test
push
lds
out
out
sub
mov
les
jb
inc
push
in
mov
mov
mov
movsb
fnstsw
cmp
out
jge
or
add
les
jmp
mov
imul
mov
adc
sub
scas
dec
in
lds
jl
daa
cs
mov
sar
cmc
mov
out
inc
adc
xchg
popa
sub
lahf
not
in
and
push
test
push
aas
pushf
cwtl
push
adc
lds
lret
dec
mov
mov
mov
mov
pop
and
dec
sbbb
mov
push
pop
mov
inc
in
pusha
pusha
push
dec
leave
scas
je
testb
cld
jno
adc
push
dec
popa
push
adc
repnz
jg
out
adc
fisubl
and
lahf
aad
or
call
jns
mov
adc
mov
ja
lret
jmp
lret
stos
mov
out
cltd
in
mov
stc
out
inc
lods
cmc
popa
gs
inc
clc
hlt
popf
bound
imulb
imul
testb
insl
sbb
negb
sub
mov
lock
bound
pop
sub
lock
mov
pop
hlt
pop
movsl
test
aad
mov
mov
push
inc
or
and
into
add
mov
mov
sub
incl
adc
add
pop
mov
mov
adc
dec
repz
mov
test
iret
aas
loopne
push
aad
sbb
xchg
cmc
pop
mov
inc
push
imul
sub
inc
sbb
add
pop
add
pop
test
iret
sahf
push
mov
dec
mov
push
or
ds
and
sbb
mov
jmp
dec
lret
cmp
loope
out
sub
cmp
stc
aaa
stos
xchg
and
adc
jle
sbb
testb
xor
jo
clc
jno
or
popf
inc
ds
dec
daa
clc
mov
mov
popa
push
lock
add
mov
push
pop
int3
jl
lods
xor
subb
xchg
dec
mov
mov
pop
cmp
sub
lods
sahf
loope
pop
and
sbbb
add
cwtl
adc
in
xlat
sahf
adc
mov
xchg
daa
jl
xor
push
or
mov
sub
aad
lahf
jp
cmp
adc
sub
in
add
repz
mov
call
arpl
test
adc
loopne,pn
or
loopne
push
mov
xchg
jb
mov
lcall
shl
xchg
cmp
fildll
mov
mov
fs
jo
mov
lock
jmp
mov
divl
jb,pn
xchg
dec
test
push
pop
jns
inc
lahf
fldt
pop
add
lahf
cmp
or
loopne
cs
bound
xlat
dec
sahf
pop
inc
ret
int
fcomps
xchg
out
out
test
sarb
stc
out
push
movsl
sahf
xchg
cmp
pop
push
xchg
lods
mov
out
hlt
xor
jno
xchg
in
shl
fcmovb
aad
and
push
int
ret
mov
aad
dec
lea
or
es
xchg
lret
inc
push
mov
scas
nop
dec
mov
or
and
lds
or
ret
mov
les
mov
pop
lret
cmpsb
adc
add
inc
lds
fnstsw
push
inc
insl
pop
sub
add
and
sbb
cs
iret
stos
test
xor
pusha
jg
lea
mov
dec
xchg
or
mov
jge
jb
mov
fcompl
inc
xorb
sub
cmc
or
insl
cmp
pushf
cld
dec
sub
mov
in
add
push
iret
nop
inc
push
out
stos
pop
mov
bsr
inc
cmpsb
js
loopne
aaa
gs
cmp
lret
aam
push
pushl
psubusb
push
or
pop
sub
and
jno
ret
aaa
push
xchg
xor
pop
mov
mov
sahf
ja
cld
push
mov
filds
or
flds
cmpsb
vpsubsw
insb
mov
xchg
mov
aam
sbb
inc
movsb
ror
jno
sub
or
std
adc
subl
mov
dec
fcomp
xchg
test
shll
xchg
test
lcall
notb
push
mov
cli
jno
out
adc
data16
dec
inc
push
pusha
or
ljmp
and
xor
jle
addr16
pop
ds
pop
test
adc
inc
cmp
mov
xchg
lea
xor
test
in
or
inc
inc
sub
sub
dec
jg
iret
pop
mov
and
unpckhps
lea
xchg
pop
out
lea
mov
sbb
out
out
mov
pop
loope
or
lahf
jge
scas
imul
lahf
div
and
imul
shl
fildl
xchg
cltd
in
in
cld
or
sbb
nop
rcll
jnp
xchg
jmp
adc
imul
xlat
stc
imul
repnz
adc
xchg
ret
sbb
test
or
cmp
repnz
mov
push
dec
jecxz
mov
jae
push
mov
pop
int
inc
jae
mov
push
addr16
pop
fldcw
test
dec
arpl
cmp
jl
mov
js
test
ret
movsb
dec
xchg
divb
shl
into
inc
jp
adc
push
int3
in
mov
add
fiaddl
cmp
or
add
sahf
sbb
shlb
xchg
std
mov
stos
mov
cmp
xchg
push
and
xor
es
dec
scas
cmpsl
push
mov
sub
outsl
hlt
xor
popa
mov
jp
andb
outsl
mov
loopne
cmpsb
xchg
int3
mov
mov
fs
mov
or
cld
rcll
lods
mov
cmp
lods
xor
push
sbb
jge
pop
int3
ret
sahf
push
mov
sbb
add
sbb
cmc
xchg
push
mov
jb
or
push
xchg
pop
adc
sub
adc
cmp
loop
ss
dec
mov
mov
mov
mov
mov
cmc
cwtl
insl
xlat
cmpsb
jecxz
je
sahf
push
or
push
adcl
xor
int
inc
mov
imul
push
rcll
scas
xor
addr16
inc
jo
push
jno
cmc
jno
mov
addr16
mov
xor
jg
dec
cmovb
and
sub
inc
bound
pop
or
xor
cmp
push
test
dec
outsb
lret
xor
dec
in
sub
out
addl
fisttpll
loope
pop
into
add
stc
xchg
sbb
shll
push
pop
add
ret
pop
call
jle
sub
mov
mov
add
mov
sbb
shrb
hlt
cld
xor
sbb
fldenv
pop
out
mov
sub
mov
aas
mov
pop
jp
sbb
cmp
xlat
cmp
scas
mov
pop
mov
sbb
outsb
sub
pop
movsb
shrb
insb
faddl
push
mov
push
push
maxps
nop
add
and
and
out
lea
lea
imul
int
repz
or
add
mov
push
pop
mov
cli
out
and
mov
inc
xchg
std
add
pop
movsb
lahf
jge
jp,pt
cld
mov
xor
scas
dec
sub
mov
xchg
roll
test
pop
sbb
std
or
sbb
jae
push
add
add
dec
mov
push
sbbl
sti
pop
push
cli
sbb
sub
imul
or
scas
xlat
icebp
das
andl
cmpsl
lods
bound
adc
out
pop
mov
repnz
dec
iret
mov
mov
out
push
mov
popf
inc
std
cmc
cs
nop
dec
scas
les
aad
cmp
or
rcrl
sti
stos
mov
inc
jl
sbb
shr
dec
sbb
lods
test
push
mov
jg
cltd
lahf
lock
mov
lea
icebp
mov
inc
jp
mov
dec
mov
push
test
enter
mov
insl
inc
cmpl
enter
hlt
xchg
mov
aam
vucomisd
dec
xchg
adcl
and
mov
cmpl
mov
xchg
call
scas
lock
loop
cwtl
popa
xor
out
std
inc
mov
imul
fisttpll
ljmp
cmp
and
inc
fcmovb
fsts
mov
sbb
xor
dec
movb
inc
mov
pop
push
lock
push
jnp
mov
test
or
sbb
push
mov
dec
xlat
insb
sub
pop
mov
adc
push
sub
inc
int
daa
pop
enter
popa
mov
nop
xor
jns
jg
cs
mov
mov
rorb
pop
pop
jmp
push
sbbb
in
mov
aas
lcall
fiadds
arpl
ljmp
push
sub
cmp
xor
dec
ljmp
sti
push
cmp
mov
not
fdivl
cltd
imul
xchg
adc
and
add
aas
aaa
mov
sub
lret
pop
sti
outsl
or
out
stos
xchg
sbb
or
mull
mov
dec
aad
into
pop
lret
jmp
cmp
mov
dec
popa
out
sbb
lods
les
cmc
sahf
movsb
int
xchg
leave
fisttpl
add
add
push
adc
push
xchg
push
ret
inc
js
mov
sbb
outsb
xchg
jno
test
lahf
cmc
or
xor
push
xor
jns
fcmovb
dec
push
enter
jae
fs
cmpxchg
mov
out
mov
sahf
xlat
lret
push
sbb
push
dec
iret
dec
dec
iret
add
sbb
pushf
stc
xchg
pop
into
mov
xchg
aas
push
push
inc
jns
test
and
sbb
xchg
cwtl
stos
sub
test
jge
mov
js
stc
clc
shlb
lds
mov
push
fwait
dec
add
hlt
cli
add
into
mov
pop
daa
sbb
dec
pop
cmp
dec
mov
jo
and
jno
dec
inc
fadd
pop
dec
scas
fimull
ficoml
inc
inc
cld
jb
cmp
movsb
push
cld
lcall
xchg
pop
je
dec
lea
movsb
jb
jg
fcomi
cmc
imul
cmpb
push
cli
mov
test
sti
loope
movsb
inc
mov
sbb
ss
aad
mov
shl
inc
cld
pop
push
mov
cli
mov
int
int
in
push
and
clc
mov
inc
repz
and
gs
call
outsl
jb
imul
xchg
or
and
push
aaa
dec
push
cmp
and
or
jle
das
sti
hlt
rcr
cmpl
dec
xor
lret
lcall
call
inc
mov
addb
jle
adc
addb
movups
out
ror
push
fildll
add
inc
cmpsl
enter
js
sbb
sbb
mov
pop
test
xchg
movsb
mov
push
popa
out
add
sbb
or
movsl
call
and
lret
enter
into
xchg
fmul
jb
or
push
pop
shrl
jae
lcall
inc
aas
aaa
movsb
repnz
movsl
mov
out
outsb
dec
fs
pop
imul
out
mov
dec
pushf
lret
sahf
test
js
jl
xor
idivl
cmp
in
test
ja
inc
jns
hlt
test
push
imul
mov
repnz
lock
add
add
stos
pushf
xor
mov
not
outsb
add
pop
int
packsswb
out
dec
fiadds
sub
out
in
jg
sbb
push
in
int
sub
or
outsl
jmp
mov
mov
cmp
arpl
mov
gs
ljmp
lret
fmul
icebp
push
pop
or
ret
pop
test
pop
mov
push
mov
inc
aad
mov
mov
js
mov
addl
pop
push
popa
pushf
lcall
dec
mov
sbbb
jo
mov
adc
cltd
outsl
stos
xor
push
das
in
incb
sbb
dec
insl
adcb
pop
jge
div
mov
cmovns
shrb
gs
fdiv
mov
and
aam
lea
imulb
repnz
sahf
adcl
int3
divw
imull
xor
add
adc
and
daa
sahf
jae
sbb
sbb
mov
dec
decl
imul
mov
out
movl
push
pop
ljmp
scas
jno
xor
in
xchg
pop
inc
outsb
sbb
out
xor
or
xor
shr
stos
inc
test
cli
arpl
sbb
mov
push
mov
dec
xor
jge
pusha
push
xchg
dec
mov
mov
pop
cmp
sub
pushf
enter
ds
sbbb
imul
dec
mov
ret
push
mov
and
sar
cmp
cs
and
mov
mov
push
or
pop
lcall
ret
dec
pop
mov
push
or
inc
aam
in
or
fisubrl
and
sub
cli
into
inc
cs
pop
fstpl
jno
xchg
push
xor
lods
push
cmp
dec
or
push
and
add
add
pusha
data16
dec
test
in
pop
sbb
call
frstor
fstpl
and
aam
pop
pop
cmp
mov
and
add
daa
dec
rolb
jl
push
pop
pop
repnz
mov
sahf
pop
xchg
cltd
mov
ret
aam
test
fbld
test
mov
inc
in
js
sbb
scas
pop
or
and
jmp
push
fnstenv
cltd
adc
inc
jge
cmp
mov
inc
jno
and
addb
ffreep
sti
adc
push
enter
jmp
ret
mov
jno
icebp
xchg
scas
adc
stos
loope
and
pop
outsl
push
xlat
cld
cwtl
sbb
push
push
lahf
jg
push
push
std
add
cwtl
sahf
repz
movsb
cmpsb
dec
lret
daa
mov
mov
outsb
roll
test
mov
mov
outsb
xlat
sbb
pop
mov
pusha
rclb
push
mov
pop
jge
bound
sub
inc
mov
add
mov
icebp
fstp
inc
fcomps
cmp
push
orl
cmp
jg
idivl
xor
mov
sub
lods
dec
xchg
adc
jecxz
dec
mov
arpl
add
jmp
mov
xor
sahf
mov
sbb
cmc
scas
rolb
jnp
sbb
in
xchg
loopne
int3
cld
cmp
aad
fsubrl
ja
stc
cmp
push
jno
gs
test
mov
cld
insb
cmp
fsts
and
cwtl
pop
rol
or
add
packuswb
or
stos
dec
dec
lds
rcll
inc
movsb
mov
or
jge
jmp
push
mov
test
xor
lods
and
or
lret
pop
cmc
jae
insb
lcall
xlat
dec
xchg
xchg
test
imul
out
and
popf
dec
xor
xchg
xor
aad
cs
negl
scas
fwait
test
enter
pop
inc
sbb
ffree
rorb
pop
xchg
repnz
xor
push
xchg
call
into
in
xchg
popf
es
and
and
es
sub
dec
inc
movsl
sub
jg
sbb
add
mov
jmp
jl
pop
inc
mov
sbb
hlt
repz
inc
push
xchg
jbe
lods
jmp
cmp
mov
call
mov
xor
push
inc
bound
ret
test
inc
push
outsl
das
lea
and
adc
mov
add
scas
cld
cld
hlt
adc
pop
mov
ss
out
insl
stc
fiaddl
adc
xchg
test
push
adc
pop
fwait
es
or
lea
push
ljmp
scas
addr16
dec
dec
sbb
jge
fs
add
mov
cmp
andl
lret
out
push
mov
mov
flds
xchg
inc
or
mov
leave
rorb
mov
fs
mov
shll
inc
or
dec
rorb
xchg
pop
mov
rorl
jecxz
into
and
push
dec
adc
xchg
push
nop
cmp
dec
push
shll
inc
pop
xor
int
jg
pop
add
gs
mov
out
mov
and
or
or
test
stos
int3
sbb
lods
mov
test
popf
jae
and
ficoms
shl
pushf
sub
xor
aad
xchg
in
jns
inc
test
das
mov
inc
mov
jnp
aas
mov
cmpl
sbb
aam
jecxz
pushf
enter
in
dec
das
sub
fsubs
sub
mov
pop
data16
lds
jae
cld
add
mov
iret
and
imul
aaa
add
cwtl
cmp
int3
leave
xor
enter
sub
out
aam
sbb
push
xor
mov
mov
cmp
sbbl
inc
mov
xchg
push
pop
xor
pushf
data16
or
sub
jne
push
push
in
xchg
mov
clc
or
add
sti
adc
pop
jnp
mov
dec
negl
leave
inc
mov
loop
or
loop
xchg
nop
movsb
pop
daa
lods
rol
sub
jo
mov
aas
nop
push
sbb
pop
test
add
mov
dec
ret
cmp
call
push
mov
cmpsl
jo
jb
call
lahf
popa
hlt
scas
jnp
inc
mov
daa
or
mov
mov
cld
mov
push
sub
sub
add
jmp
fcomip
loopne
cmc
sbb
xlat
or
enter
stc
lret
sub
xor
stc
cs
xchg
repz
jnp
xor
xchg
ja
iret
adc
popf
push
xor
and
test
cmp
xchg
les
sbb
lret
popf
flds
insb
pop
out
in
push
inc
jb
pop
xor
mov
cmp
xor
jo
jbe
pop
push
stos
mov
lahf
jne
aaa
lret
ficoms
sbb
aam
cmp
add
aad
or
jmp
and
and
cltd
cltd
push
cmc
aad
pop
xor
int
insl
sbb
stos
fisttpll
mov
push
sbb
mov
or
popf
jle
add
mov
lcall
push
fstp
fisubrs
imul
je
adc
loop
adc
out
repnz
jge
test
in
lods
daa
aaa
mov
fidivs
ror
ja
scas
push
and
xchg
push
add
cmp
mov
adc
xchg
inc
mov
adc
test
popf
sarl
mov
sbb
cmp
cmp
cmp
arpl
mov
arpl
jbe
clc
stos
jg
or
and
mov
mov
pop
mov
rcrl
sub
pop
test
sbb
pop
insl
aas
mov
mov
add
cwtl
sbb
imul
inc
in
outsb
mov
cmp
sub
push
aam
sbb
sarb
test
cltd
sbb
mov
enter
out
leave
cmp
rolb
inc
push
xor
lret
enter
stc
test
das
int
shl
aas
popf
or
cmp
xchg
fmul
mov
orl
out
inc
int3
pop
sahf
and
mov
test
pop
imul
xchg
loope
push
mov
je
adc
add
lcall
sub
sub
lods
xchg
mov
sub
pushf
push
xlat
test
add
xor
lock
adc
sub
adc
inc
sub
xorb
mov
movsb
xor
popa
fsub
jo
inc
dec
inc
clc
pop
or
out
add
mov
jbe
sahf
cmpsb
das
icebp
mov
dec
clc
xor
xchg
das
jl
mov
scas
mov
push
jp
adc
jbe
sti
in
add
lods
stos
lods
or
add
sbbl
insb
mov
imul
stc
mov
popa
fucomip
pop
dec
int3
mov
jmp
clc
mov
stos
sub
iret
xlat
mov
enter
movl
cmc
sub
xor
jge
push
xchg
mov
lds
pop
add
jns
jmp
leave
mov
cmpsl
mov
loop
push
mov
cltd
jmp
mov
rorb
mov
jo
lea
cmp
dec
iret
stc
ret
in
jl
cmp
mov
test
pushf
jb
and
pop
out
lods
xor
scas
in
loopne
sbb
xor
sbb
in
rolb
cmc
pop
dec
sub
call
sbb
outsl
ret
nop
repnz
pop
dec
dec
push
mov
mov
int
mov
jbe
roll
xor
xchg
xor
pop
mov
daa
sub
nop
and
out
out
mov
movsb
sbb
jo
in
pop
lahf
adc
mov
lea
pushf
mov
arpl
aas
in
fbstp
insl
inc
dec
std
push
or
cmpsl
test
adcb
popf
cwtl
ss
aaa
or
and
stos
clc
jns
iret
iret
loope
push
lgs
and
jo
sub
and
jno
nop
push
xor
mov
push
int3
xchg
inc
fsubrl
daa
cmpsl
std
push
out
and
dec
inc
and
and
lcall
mov
scas
testb
or
lret
fsubl
mov
xor
popf
adc
stos
inc
or
push
push
cmp
xor
lret
f2xm1
lcall
int
jns
sbb
cmpsl
adc
mov
pop
cltd
mov
inc
mov
inc
xor
dec
mov
fldl
scas
inc
loopne
inc
sti
into
mov
pop
std
add
insb
inc
mov
pop
popf
jne
sbb
scas
mov
rol
cmpb
ds
fisubrl
sub
shld
sub
enter
xor
iret
lret
in
leave
adc
inc
test
sbb
lret
cmp
andb
ljmp
leave
lds
cmp
test
jmp
dec
xchg
push
sub
push
stos
xor
cmpsl
cli
push
fiaddl
roll
pop
xor
in
xchg
cmp
inc
mov
mov
add
jbe
xchg
lret
pushf
loope
into
ja
add
sbb
fwait
dec
dec
inc
stos
push
rorb
sbb
adc
mov
jno
divl
cli
dec
dec
jp
jns
dec
dec
or
test
loopne
imul
imul
lea
pop
pop
dec
pushl
push
js
add
out
or
cmc
repz
or
add
fadds
inc
xchg
inc
sbb
jnp
fcompl
mov
jmp
jb
adc
test
jb
lea
push
sub
fcmovu
out
sarb
sbb
mov
andl
es
test
sub
adc
rcrl
dec
mov
jne
cmp
and
out
push
xor
jmp
mov
jp
adc
pop
or
in
or
xchg
inc
test
push
or
xor
add
inc
jmp
scas
rol
lea
mov
add
sub
jae
sti
and
cmp
jne
xchg
jg
sbb
mov
xchg
shlb
mov
inc
mov
xlat
adc
cvtps2pi
imul
mov
stos
push
addl
and
xchg
dec
fidivs
xor
lret
ss
dec
insb
es
mov
inc
outsl
int
xor
xchg
push
test
fmull
fnstsw
repnz
shll
enter
pop
sbb
sbb
popf
or
adc
fnstenv
sbb
test
fcomps
mov
or
or
call
add
lret
add
adc
sub
pop
xchg
mov
mov
test
sarl
mov
xor
mov
pop
inc
sti
dec
sti
mov
inc
or
movsl
sub
mov
push
adc
test
filds
lock
push
mov
mov
push
jl
mov
rcrb
add
jle
mov
popf
call
push
por
sbb
pusha
push
cmp
xor
mov
sub
je
cmp
cmp
push
mov
xor
mov
into
loop
pop
in
cmp
adc
in
sub
dec
mov
push
in
jo
xlat
loope
test
or
int
mov
movsb
sahf
sbb
popf
sub
test
add
into
mov
testb
add
int
cltd
enter
outsl
mov
inc
mov
mov
mov
adc
je
push
inc
sahf
sti
pop
mov
xchg
lds
popf
cmc
jl
inc
mov
nop
sbbl
orl
mov
lret
mov
stos
adc
sub
roll
adc
mov
mov
xor
sub
sbbb
xor
in
sub
xchg
divl
sub
das
xchg
push
pusha
mov
sub
icebp
mov
mov
in
lahf
pop
gs
inc
adc
inc
mov
in
aad
sbb
in
das
ja
mov
push
mov
scas
jg
mov
sti
xor
aad
and
mov
faddl
mov
jb
adc
push
popf
inc
mov
push
xor
loope
or
arpl
mov
in
xchg
and
incb
cmp
les
sbb
addr16
mov
pushf
jmp
lds
imul
or
fisttpl
into
xor
lret
add
push
out
or
mov
sub
mov
jl
into
xchg
lods
jle
ficoml
mov
mov
mov
mov
stos
or
sbb
iret
jnp
rolb
test
push
pop
inc
mov
pop
xchg
or
push
xor
iret
int
xchg
int
int3
in
or
dec
sahf
out
outsb
aad
cmc
mov
push
dec
dec
and
test
pop
adc
pushf
in
je
das
adc
fnsave
int
std
mov
jmp
into
movsb
test
dec
je
cli
dec
xchg
or
lret
cmp
sti
jmp
pusha
inc
out
jae
xchg
push
xchg
arpl
loope
sbb
js
jp
cwtl
cmp
and
add
sub
mov
icebp
mov
mov
addb
into
in
out
popa
adc
mov
jmp
dec
cltd
xchg
je
movsl
dec
scas
test
enter
cltd
into
daa
fnstenv
dec
mov
mov
aas
push
cmp
mov
jp
mov
scas
mov
mov
cmp
mov
add
mov
mov
add
and
stos
in
in
jge
push
cli
insb
mov
xchg
pop
cmp
cmp
sbb
mov
xchg
jae
push
fcmovnb
add
test
test
xchg
add
stos
scas
lret
imul
mov
push
sub
cmp
dec
and
or
dec
sub
xor
sub
pop
repnz
cmp
loop
test
out
aad
adc
es
and
fsubs
cmp
repnz
inc
lock
outsl
movsb
iret
out
pmullw
mov
in
adc
loopne
jmp
cmp
pop
out
sbb
popf
and
lods
push
adc
and
push
pop
sub
jge
inc
cs
outsl
sub
cli
in
scas
xlat
lcall
pushf
pop
int
test
std
pusha
test
imull
lea
popa
outsb
mov
xchg
lea
xchg
pop
sbb
pop
or
pop
out
fs
sub
xchg
jae
imul
iret
xchg
popl
fadds
sub
sbb
jb
xchg
popf
sub
test
add
call
sahf
inc
enter
in
loop
lahf
imulb
out
mov
out
movsl
mov
lcall
cmp
mov
mov
aaa
pop
mov
in
cmp
push
je
popa
sahf
ljmp
into
jge
sar
aas
cmp
jecxz
inc
mov
fidivs
or
das
loope
or
mov
ret
movsb
enter
fstl
sbb
movsb
push
std
inc
loope
mov
cmp
xchg
dec
cmp
dec
aad
inc
xor
pop
out
pusha
sarl
mov
pop
dec
int
je
std
aaa
fsubrs
lods
pop
xchg
cmp
and
mov
push
and
flds
xchg
in
and
mov
scas
repz
xchg
leave
int3
pop
sub
fdivrs
pop
push
pop
loopne
dec
push
xchg
shrl
fnstenv
mov
lods
shll
fcom
mov
jg
fwait
out
and
imul
add
cmp
sbb
out
sub
jb
and
dec
mov
lret
mov
fldl
arpl
arpl
mov
jno
cltd
mov
das
xor
outsl
call
insb
xor
mov
call
mov
push
jecxz
push
jge
jnp
into
dec
jge
lret
cbtw
repz
inc
daa
repz
scas
cld
outsb
loope
mov
cmpsl
lret
icebp
cltd
out
pop
loop
push
ljmp
sub
push
test
in
daa
out
and
sbb
lahf
or
adc
jl
leave
sahf
push
and
mov
in
xchg
sbb
int
pop
mov
je
leave
out
shll
add
fcompl
xorl
ljmp
and
rcr
leave
call
imul
push
sub
punpcklbw
mov
aad
adc
or
push
loop
cmp
js
mov
pop
loop
lret
and
bswap
xlat
imul
inc
jecxz
jecxz
lds
fstl
cmp
or
dec
mov
push
aaa
cmp
inc
sbb
loope
shl
incl
cmp
pop
xor
ja
cmp
push
add
dec
in
inc
xor
dec
mov
out
xchg
push
or
xchg
add
hlt
dec
fsub
push
scas
imul
pusha
xor
push
adc
sub
dec
leave
mov
mov
or
out
dec
imul
int
inc
popf
dec
pop
adc
dec
aas
cmp
add
gs
cwtl
jns
jg
inc
push
inc
leave
mov
push
sub
shll
aas
push
xchg
push
and
shrb
xchg
nop
movsl
xchg
clc
mov
push
outsb
repnz
xor
fwait
sarl
mov
loop
inc
test
cmpsb
push
stos
out
and
shl
stos
pop
cmp
jp
fisubrs
pop
popf
sahf
or
dec
loop
pushf
mov
jmp
adc
cmc
popf
sub
xchg
inc
mov
mov
xchg
mov
enter
dec
lods
popf
mov
aam
sbb
adc
fiadds
mov
lods
dec
or
mov
loop
sbb
imul
push
jecxz
sahf
lods
das
mov
movsl
inc
movsl
mov
push
popa
mov
pushf
int3
push
sar
adc
adc
call
xor
stos
test
hlt
pop
lock
sbb
jbe
in
flds
inc
fwait
movsb
loope
sbb
xchg
dec
in
cltd
mov
push
ret
loopne
and
mov
mov
rclb
xchg
add
ds
es
lea
dec
mov
fmull
mov
mov
add
fistl
shrl
das
cmp
inc
repnz
std
sbb
or
mov
pop
mov
enter
sub
shll
les
pop
cli
fbstp
sbb
push
mov
paddw
lea
sbb
fistps
hlt
dec
ja
insl
xor
pop
xacquire
mov
inc
ret
sub
and
in
aad
pop
inc
test
out
mov
adc
adc
test
pop
test
and
sub
pop
add
sbb
out
orb
mov
dec
stos
cmp
mov
in
jp
jg
mov
add
inc
rcrl
xchg
pop
ret
inc
lods
mov
arpl
cmp
movsb
pop
pop
xchg
dec
call
movsb
testb
test
push
jecxz
jle
test
iret
jge
bswap
aad
stos
lcall
fisubl
lret
int
lock
in
mov
sub
fdivrs
and
stc
pop
sti
xchg
jnp
mov
sbb
cli
jmp
xchg
shll
lods
sbb
shlb
push
jg
or
jmp
fsubp
pop
ja
in
imul
sti
mov
sahf
rorb
adc
sub
test
mov
ret
adc
iret
pushf
jp
jo
xchg
scas
int
movsl
je
mov
inc
lds
jbe
subb
or
lret
mov
stc
mov
shl
pop
loope
subb
outsb
mov
push
mov
pop
ja
inc
lret
sub
sbb
jo
mov
bound
repz
scas
repz
mov
dec
fstpl
xchg
popa
mov
sbb
jno
cmp
dec
cmp
lods
sub
push
mov
ds
lret
cwtl
mov
xor
cmp
mov
lods
mov
pop
test
sub
pop
sahf
dec
ds
mov
shlb
bnd
loope
xchg
mov
mov
test
jae
push
test
and
aas
ds
dec
sub
dec
or
inc
outsb
insb
mov
shl
xchg
fnstsw
sub
jnp
sub
sahf
adc
js
decl
mov
adc
test
fwait
inc
xor
pushf
loop
arpl
push
sub
lock
out
or
push
pushf
pop
mov
scas
test
pop
cmc
mov
jl
add
and
jns
repnz
test
fisubs
adc
fistl
out
aaa
shlb
push
cmp
stos
xchg
sti
mov
xorb
inc
jg
push
fld
mov
decb
or
enter
or
mov
push
movsl
pop
mov
mov
jp
mov
mov
out
jge
push
cmc
test
cli
loope
push
dec
retw
sbb
daa
stc
or
xlat
dec
in
sbb
out
mov
dec
pop
aad
push
mov
sub
mov
test
mov
call
sbb
add
pop
mov
insl
faddp
pop
pop
pop
fsub
push
cwtl
in
std
mov
jns
mov
std
mov
popf
cltd
addr16
xchg
cmp
push
insb
push
or
jbe
in
bound
shr
jp
lods
and
add
rcrb
mov
mov
idivb
repnz
and
add
cmc
xchg
rcll
ss
or
mov
les
add
addr16
test
cmp
bnd
sub
dec
ret
sarl
arpl
ja
in
push
push
fiaddl
lret
xchg
inc
and
mov
mov
inc
pop
lds
xchg
xlat
pop
iret
cmp
outsb
pop
push
les
mov
push
mov
mov
sbb
nop
and
mov
add
push
xchg
jg
push
sbb
stos
sbb
pop
xchg
add
clc
mov
mov
xchg
lahf
pop
shlb
rcrl
enter
int3
and
push
nop
cmp
pusha
ficompl
stc
mov
in
pop
rcrl
or
mov
jle
imul
test
cmp
xor
inc
sub
rolb
or
shlb
lds
or
mov
pop
test
cmpsl
test
icebp
lock
pop
xchg
pushf
xchg
pop
ljmp
icebp
or
inc
nop
scas
repz
in
iret
scas
push
adc
ss
pop
dec
cmp
fcmovbe
xchg
sub
cmp
divb
pushf
sbbb
enter
mov
xchg
mov
call
rorl
cmp
ret
rorb
sub
aam
cmpsl
or
xchg
pop
inc
inc
es
push
icebp
xchg
addr16
ja
out
cmpsl
fwait
jecxz
into
movsb
dec
movsb
cld
and
mov
push
ret
sbb
lea
sub
push
mov
pushf
pop
xchg
fldl
sarl
cld
testl
mov
inc
test
dec
xor
jno
ja
movsb
imul
push
call
int
sub
or
and
les
mov
into
arpl
mov
adc
push
insb
push
cmp
mov
repz
mov
dec
mov
cltd
mov
cmp
lds
pusha
push
xchg
jno
pop
inc
roll
and
pop
iret
dec
cmc
insb
data16
out
jb
xchg
dec
push
rcrw
sbbl
mov
jmp
hlt
cmp
adc
pop
jo
sub
push
push
fimuls
iret
jbe
push
xchg
or
pop
xchg
lea
add
movl
cmp
mov
pushf
jae
cmp
leave
lcall
push
sbb
and
sub
ret
aaa
jecxz
idiv
inc
pushf
aad
loope
mov
mov
mov
nop
xchg
sub
inc
test
cmpsl
popf
jp
add
push
sub
mov
and
xchg
lods
inc
out
sbb
push
mov
arpl
dec
pop
idivb
pop
outsb
pop
dec
insb
ds
sbb
rcrl
sub
arpl
or
cmp
fadds
mov
jmp
lahf
adc
scas
dec
stc
test
stc
mov
cltd
fnsave
lcall
cmp
dec
push
pop
jns
mov
mov
push
out
pop
xchg
pop
push
sub
sbb
pop
hlt
shrb
in
jne
xchg
scas
cmc
adc
aaa
fsts
aaa
test
dec
stos
cs
and
pusha
repz
mov
sub
and
nop
adc
jns
lret
jge
das
dec
pop
lret
inc
aas
or
xor
jne
push
pop
pusha
jbe
mov
xchg
fnsave
sub
and
xchg
addr16
add
imul
outsb
jge
xchg
imul
sbb
addl
ret
adc
jnp
xchg
or
push
pop
and
ds
in
jle
jne
cmpsb
out
in
inc
aam
insl
pop
adc
xor
xor
sbb
and
dec
pop
test
pop
push
push
scas
sub
nop
add
je
mov
int
iret
push
or
int3
and
rcr
stos
wrmsr
out
jb
dec
test
and
dec
loop
or
cmp
int3
shrl
ret
enter
outsb
add
scas
push
xchg
pop
loope
gs
int3
jge
insl
or
bound
nop
mov
shlb
pop
lahf
lods
xchg
and
jno
stos
cmp
inc
xchg
pop
pop
arpl
sub
fwait
or
ds
or
mov
inc
sbb
mov
je
xchg
sub
stc
flds
leave
xchg
lret
lcall
loope
mov
sbb
pusha
push
in
popa
test
or
imul
and
in
int
pop
jg
mov
mov
aad
xor
mov
pop
cwtl
sti
insl
push
mov
adc
jecxz
xor
inc
cwtl
in
add
sub
pusha
roll
dec
or
into
mov
mov
in
jmp
xchg
js
dec
les
roll
mov
and
ljmp
cld
adc
fmull
sub
aad
icebp
fldt
xor
into
push
int3
jge
testl
xor
xchg
adc
scas
cltd
int
lcall
jmp
cmp
pop
shrb
pop
pop
jge
lds
cmp
pop
push
leave
inc
cltd
add
adc
cmc
sbb
es
cwtl
sub
sti
mov
nop
ret
and
jge
popa
push
out
pop
xchg
or
addb
out
pop
ffreep
jnp
pushf
xor
pop
scas
sbb
sahf
loope
jle
cmp
jmp
mov
mov
test
jae
push
scas
stos
pop
stos
pop
ss
int3
pop
stc
inc
call
mov
adc
adcl
aaa
mov
add
cmc
sbb
cmpsb
pop
push
add
in
jecxz
mov
xchg
pop
fidivl
bound
movsb
pop
movsl
or
dec
dec
push
inc
int3
ja
xor
add
addb
or
lock
dec
js
jge
ss
out
mov
int3
jb
or
lcall
sbb
iret
in
jge
push
arpl
adcl
setl
aam
mov
cmp
xchg
clc
aas
xor
call
add
inc
and
dec
out
cmp
sub
pop
ret
fldt
sbb
sbb
pop
pop
xor
mov
outsl
mov
mov
stos
ficomps
shlb
insl
int3
out
xor
mov
push
pop
xlat
add
ljmp
sub
out
outsl
mov
fisubrs
int
icebp
dec
imul
mov
jnp
shrl
pop
int3
in
dec
xor
inc
fabs
xchg
and
bound
xor
or
out
push
testl
out
inc
lds
xor
ljmp
push
imul
xchg
test
jecxz
imul
jp
pop
xor
mov
mov
ss
add
out
jno
add
movsl
dec
imul
test
fs
xchg
jmp
inc
test
mov
or
inc
mov
lret
fs
or
fldt
stos
add
inc
in
mov
mov
test
imul
jge
dec
dec
sarb
fs
mov
fwait
iret
cmp
push
aaa
testb
decw
push
shrl
aas
fwait
lcall
pop
fsubl
loopne
add
out
jno
out
pop
mov
add
scas
into
jle
pop
lds
aas
jns
sbb
popf
adc
aas
pop
andl
sub
dec
mov
adc
push
adcb
pop
call
test
rcll
mov
push
out
mov
inc
aad
aam
loope
and
sub
jle
imul
or
pop
sti
xchg
loope
jbe
test
lcall
dec
lcall
sbb
mov
cltd
and
outsl
dec
cmp
fdivrl
push
push
test
ficoml
enter
mov
jo
jl
cmp
sub
mov
popf
lds
sti
sub
and
mov
ja
inc
push
cmpsb
mov
xchg
test
add
sub
js
repnz
or
pop
pop
dec
ret
push
out
and
adc
iret
mov
xor
or
dec
fwait
loope
mov
mov
sbb
or
or
pop
cli
mov
pop
insl
mov
lds
push
fdivrl
cli
in
dec
ja
stos
inc
jecxz
pop
lret
jmp
lret
gs
stos
mov
cld
push
fwait
mov
dec
int3
xor
sub
jnp
pop
inc
xchg
sub
and
cmp
icebp
imul
sub
pushf
fwait
pop
jp
or
or
sbb
outsl
add
inc
out
popa
sub
push
and
xchg
enter
pop
and
cltd
dec
popf
cld
add
cltd
cwtl
mov
xchg
insb
loop
xor
incb
scas
adc
cmp
clc
aam
fwait
in
sub
lods
or
dec
into
jge
push
sub
jbe
mull
lret
add
js
jno
shlb
mov
sub
pusha
fwait
cmc
adc
insb
sbb
fidivs
pop
shrd
int3
inc
fstpl
xor
subl
and
sbb
xchg
cwtl
in
xlat
addr16
add
jne
pop
test
lret
cmp
mov
mov
out
pop
lods
push
inc
push
jecxz
mov
push
or
in
outsb
jbe
mov
cmc
aam
or
ds
rclb
shrb
aaa
inc
insb
lahf
dec
push
inc
push
jl
mov
and
pop
outsl
movsl
icebp
daa
mov
jns
cmp
test
cmpsl
sahf
frstor
add
mov
lret
mov
xor
mov
stos
sahf
std
jno
sub
sbb
inc
mov
push
add
aaa
cmp
pop
xchg
ret
jne
rcrb
lea
sub
mov
mov
pop
scas
imul
dec
imul
bound
fisubrl
sub
inc
mov
pop
push
xor
or
push
xor
pop
sbb
hlt
sbb
sbbb
cmp
cli
insb
dec
movsb
jb
pop
pop
cmp
mov
lret
jl
sub
loope
mov
cmp
rcl
or
imul
fstpl
cmpsb
popf
cli
movsb
dec
push
pop
daa
loopne
mov
je
sar
test
jmp
or
dec
push
cwtl
cmpsl
cmp
cli
roll
cmp
cmp
clc
scas
mov
lock
adc
cltd
mov
mov
fmuls
pop
dec
xor
add
ret
push
pop
addl
loop
adc
pop
mov
push
popf
mov
int3
daa
outsl
test
sub
cltd
add
xchg
loopne
fldt
test
aad
push
imul
roll
andl
pop
sub
inc
in
or
iret
scas
call
xchg
mov
aaa
mov
lods
out
mov
loope
xor
mov
imul
adc
jp
push
stos
mov
gs
cmp
mov
xor
sbb
js
sbb
and
fbld
add
dec
mov
addl
fwait
shrl
lahf
jmp
gs
int
repz
xor
into
jle
or
jp
lock
je
push
ljmp
jns
pop
lds
mov
fdivrp
and
movb
sub
inc
aad
adc
out
xchg
filds
xor
sub
jg
mov
xchg
and
jae
scas
cmp
pop
or
pop
clc
xor
fsubrs
jp
into
nop
push
int3
mov
lock
xor
mov
and
cmp
stos
adc
inc
test
xor
push
ret
push
pop
testl
int
gs
flds
cmp
dec
cmc
mov
or
divb
insb
incb
mov
filds
adc
sbb
sub
jp
bound
mov
mov
aas
add
icebp
sti
shlb
insb
jno
push
mov
imul
in
test
push
lods
pop
in
sbb
subl
loope
aad
cmp
gs
or
adcb
push
fildll
add
in
adc
xchg
pop
dec
inc
je
gs
movsl
outsb
inc
push
adc
inc
mov
cmp
mov
rcl
lods
jmp
xor
fs
pop
sbb
push
mov
cmp
ds
inc
inc
addr16
ficomps
les
and
lret
and
jl
gs
fcompl
cmp
push
fdivs
int3
repz
xor
dec
add
lret
jae
stos
arpl
xchg
and
rol
xor
mov
cmc
or
aaa
push
cmp
test
add
push
sbb
add
xor
loopne
sar
faddl
mov
pop
pop
lret
in
mov
repz
daa
push
push
push
sbb
sub
je
add
cmp
mov
inc
daa
dec
lret
andl
pop
mov
outsl
cmp
gs
in
shlb
add
fidivrs
pop
jmp
inc
cli
mov
inc
cmp
lods
sti
dec
call
ss
int
jno
pop
rol
cmp
push
dec
and
xchg
inc
out
cmpb
push
in
test
arpl
mov
es
mov
andl
sub
imul
push
fstps
xor
add
push
test
insl
fsubl
iret
pop
inc
hlt
mov
add
in
into
add
leave
jb
and
or
jo
pop
or
inc
mov
push
adc
push
hlt
xchg
inc
lds
stos
mov
dec
test
ljmp
pop
mov
adc
add
dec
mov
icebp
cmc
ret
and
insb
mov
in
dec
cmp
aas
add
fsubl
ss
jmp
ret
in
int
pop
scas
xchg
or
arpl
mov
dec
sub
adc
les
adc
mov
enter
push
mov
sbb
iret
call
xor
cs
inc
pop
in
xchg
in
test
push
xchg
xchg
cmp
rcl
ja
fdivr
int
pop
mov
sbb
pop
xchg
mov
mov
jp
loopne
outsb
shll
mov
iret
or
movsb
enter
jp
xchg
add
lods
push
into
pop
insl
in
loop
pushf
out
test
fnstcw
rorb
fsubr
stc
fdivrp
cmp
mov
mov
scas
fisttps
stc
lods
push
lcall
or
sbb
dec
adc
cmp
ret
loope
mov
jae
add
push
leave
fiaddl
sahf
mov
dec
mov
mov
adc
pop
add
dec
sahf
dec
lcall
sub
sahf
clc
push
mov
dec
adc
gs
and
outsl
jnp
inc
cmpsb
out
mov
sbb
jns
fstpl
pop
xorb
pop
jno
enter
sbb
fmulp
push
cmpsl
pop
enter
jne
dec
test
sub
loop
fs
lea
negl
mov
mov
xor
shl
and
out
mov
aaa
sbb
mov
sub
add
dec
pushf
ret
inc
bound
ret
pusha
test
scas
pusha
in
cmp
or
adc
xor
das
or
stos
jne
jae
int3
insl
push
call
or
mov
adc
shl
scas
xor
cli
mov
cmp
sbb
int3
stc
mov
sub
push
adc
cmp
sti
out
enter
aam
leave
in
jne
clc
sub
push
adc
mov
fwait
cmp
dec
cmp
or
mov
mov
xor
mov
jo
outsl
out
push
imulb
sub
clc
sub
mov
add
push
out
jns
ror
inc
mov
and
repnz
scas
sbb
mov
jns
pop
in
rorb
iret
in
inc
es
out
add
mov
fwait
addb
dec
imul
shrl
inc
mov
and
push
in
mov
or
dec
call
push
imul
arpl
sbb
xchg
and
sub
pop
mov
push
loopne
xor
sahf
dec
xor
dec
and
or
es
push
cmc
test
aaa
sbb
add
adc
dec
mov
jmp
ret
cmp
push
addl
pop
ds
pop
push
outsb
sahf
pusha
leave
dec
cmpl
addl
add
mov
mov
into
xchg
addr16
jbe
movsl
push
ret
mov
clc
pop
jp
mov
test
adc
clc
xchg
cmp
sub
lret
pop
nop
inc
mov
sbb
push
loopne
pop
add
lcall
mov
sub
rorl
or
xchg
aaa
pop
mov
adc
enter
pop
mov
pop
sbb
add
sbb
and
fxch
scas
xlat
fisubs
popa
sbb
into
or
or
lret
dec
xchg
jmp
orl
jae
xchg
inc
inc
mov
cwtl
or
mov
push
and
repz
ja
mov
out
int3
pop
pop
popf
sub
sbb
cmp
jge
in
cli
fwait
push
xor
pop
scas
scas
mov
fldcw
scas
inc
jns
jmp
ljmp
adc
fwait
inc
ror
push
mov
mov
int
add
adc
arpl
daa
adc
xchg
fisttpl
lods
fucomi
inc
stc
cmp
lods
lahf
outsb
lahf
aaa
dec
dec
mov
call
int3
mov
mov
jne
mov
pop
stos
pop
imul
sbb
jbe
sbb
pop
xor
inc
or
loope
mov
arpl
lock
or
shr
push
shlb
fidivrs
imul
mov
xor
insl
pop
lret
push
jne
cmc
aad
mov
adc
adc
push
cmpsl
xchg
roll
aad
icebp
insb
push
leave
punpckhdq
pop
xor
insl
sti
jne
dec
or
dec
out
into
stos
outsb
dec
scas
call
and
test
jno
in
cltd
cmpsl
mov
in
pop
sbb
sbb
mulb
stos
sbb
fchs
adc
cmp
addr16
or
push
pop
sahf
pop
scas
icebp
xor
and
loopne
xor
jge
subb
lds
fisubs
add
out
cmp
data16
mov
mov
mov
outsl
mov
ds
scas
je
enter
xchg
cltd
aaa
jbe
rorb
fwait
jmp
mov
xlat
in
jl
sbb
mov
and
addr16
or
int3
movsl
or
push
jmp
ja
scas
sti
popa
dec
aam
mull
xor
lods
imul
fstpl
mov
ret
sti
cmp
or
or
roll
mov
mov
stc
mov
lret
loopne
jnp
xchg
pop
insl
and
loope
adc
imul
add
cli
mov
aam
jp
mov
fnstsw
mov
push
inc
pop
lret
ret
xchg
mov
lahf
xor
xor
pop
sahf
in
dec
cmp
or
repnz
imul
out
arpl
fstpt
faddl
add
lcall
int3
xchg
or
lret
mov
mov
aam
xor
add
loop
adc
lods
cmpsb
rclb
fcomps
clc
adc
addr16
push
xor
scas
ret
dec
fidivl
push
or
stc
dec
jno
lret
lret
pop
pop
jno
scas
sbb
or
jl
rclb
sti
inc
int3
insb
stos
xchg
cltd
frstor
insl
cs
mov
scas
ret
mov
mov
mov
mov
adc
les
jmp
movsl
sub
add
sahf
sbb
fildll
add
shl
cmpsb
jmp
inc
push
mov
jp
adc
pop
mov
lods
and
stc
cltd
insb
test
lret
add
mov
add
loopne
pop
jecxz,pt
cmpsb
cmp
pop
adc
aad
mov
sbb
inc
sti
dec
xchg
pop
mov
pop
pop
insl
iret
cmp
and
xchg
sub
mov
scas
sbb
push
cmp
inc
ja
adc
cmpsb
outsl
fnsave
xchg
test
lods
push
inc
adc
fs
clc
ds
scas
adc
jmp
push
movsb
add
popf
test
test
jb
cld
int3
dec
pop
lods
decl
out
xor
cmp
mov
cwtl
in
aam
flds
sub
mov
mov
jne
pop
fs
call
inc
pop
fwait
sti
rol
cmpsl
mov
push
leave
fstl
inc
or
push
xchg
rcrl
rolb
and
test
lret
cli
fwait
pop
push
shlb
aaa
test
xor
mov
sub
inc
fldpi
stos
into
sbb
pop
test
test
pop
cmp
insl
decl
ret
sub
adc
lock
xchg
rcrl
data16
xor
in
pusha
dec
std
jp
das
add
xchg
sub
jg
negl
call
pusha
cld
dec
xchg
sub
out
data16
mov
outsb
pop
lods
lahf
idivl
fcom
lea
roll
test
fs
jnp
scas
dec
xchg
aas
dec
push
xor
pop
scas
push
je
inc
mov
shrd
adc
jg
scas
arpl
fmull
addr16
pop
stos
sub
fcmove
add
pushf
inc
sub
cmp
rcrb
lcall
dec
stc
nop
push
pushf
sti
sbbb
dec
and
cmpsb
loope
push
cltd
sub
int
das
mov
fstps
sbb
jecxz
icebp
ja
ljmp
lahf
mov
pop
push
pop
loopne
adc
mov
lret
in
icebp
mov
out
inc
pusha
jns
jnp
out
idiv
clc
add
xor
or
pop
xor
idivb
and
xchg
push
jb
or
or
xorb
or
mov
pop
dec
cld
adc
insl
andb
jne
cmp
xchg
fcompl
or
pop
mov
imul
lods
jmp
dec
test
jne
add
andb
add
or
xchg
or
shrl
sahf
loopne
jle
fcmove
insb
dec
dec
test
push
mov
lds
daa
and
mov
mov
lea
pop
test
mov
mov
leave
mov
xor
rcll
mov
mov
in
test
ss
adc
mov
outsb
push
dec
stos
jg
aam
stos
and
sbb
scas
pusha
and
jne
jmp
pop
in
sahf
jae
insb
jle
xlat
mov
adc
cmpsb
pop
cmp
pop
pusha
lds
cmp
ljmp
pushf
icebp
lock
adc
mov
arpl
cmpsl
dec
mov
sub
mov
jne
fsubrl
and
nop
popa
shlb
insl
pop
inc
int3
mov
cmp
lods
mov
movsl
cmp
pop
mov
jb
cmp
fldcw
add
mov
jae
into
sub
je
jnp
mov
stos
fisubrs
sub
fimull
dec
xchg
icebp
xor
and
pop
pop
pop
sub
flds
jae
mov
test
mov
int3
fs
push
xchg
fs
mov
rorl
and
sbb
fnstenv
iret
fdivs
cmp
leave
fmulp
push
mov
xchg
pop
stos
in
push
adc
lock
jecxz
aam
fisttpl
jge
pop
insb
fs
mov
push
arpl
aam
sbb
push
sbb
and
xchg
xor
fs
pusha
shl
pop
scas
add
lahf
mov
mov
push
loopne
in
add
jge
je
stos
stc
je,pn
and
sti
in
and
pop
sub
addr16
push
pop
push
xor
sahf
out
cmpsb
xor
mov
or
out
sub
test
xchg
cwtl
sbb
dec
shl
std
inc
mov
jo
bound
sbb
pushf
pushf
scas
jmp
jecxz
adc
add
cmp
push
rorb
add
ss
addb
aam
fidivrs
inc
mov
cltd
jmp
pop
push
mov
lret
inc
lret
stc
fldcw
stos
mov
std
sti
loopne
clc
sbb
xor
mov
cmp
adc
js
fdivr
dec
mov
pop
or
inc
xor
rol
mov
out
or
das
punpckhdq
pop
dec
cmp
sbb
cmc
cmpsl
repz
push
imul
clc
aam
push
sub
sub
push
mov
cltd
mov
or
mov
adc
inc
test
sbb
xchg
cmp
hlt
daa
popa
sub
das
mov
and
sbb
mov
lds
rcr
and
mov
std
dec
cmp
jno
sub
popl
and
das
or
add
mov
dec
mov
adc
test
or
rcll
int3
jae
add
lods
or
sahf
iret
sbb
pop
sti
sub
and
pop
popf
call
or
jmp
popf
dec
hlt
jae
mov
adc
inc
shl
or
inc
mov
sbb
lahf
test
mov
out
inc
push
xor
fwait
xlat
cld
pop
pop
pop
out
pop
call
jle
sbb
mov
sbb
add
es
iret
add
pop
sub
push
ja
or
xor
stos
ret
fldt
push
aaa
fstps
imul
pop
pop
mov
sbb
mov
pop
or
in
push
rorb
popa
movsl
mov
dec
int3
xor
in
scas
dec
repnz
xchg
or
mov
jne
pop
cmp
push
mov
cmp
pop
cmc
pop
jmp
add
cltd
jo
inc
ret
sub
cld
fs
mov
fstl
rclb
test
imul
push
cmp
ror
out
xchg
bound
imul
pop
stos
sbb
cmp
jmp
pop
push
push
xchg
dec
jle
sub
out
adcb
or
xchg
push
mov
test
push
sub
inc
int
mov
pop
sbb
test
jp
inc
add
iret
mov
push
movsb
or
frstor
fildl
dec
mov
ljmp
adc
mov
ret
jnp
sbb
xor
sbb
inc
out
ret
mov
cmp
jo
je
lahf
adc
cmp
dec
roll
mov
int3
les
xor
pop
adc
test
movl
push
stos
xor
jno
sub
pop
sbbb
jmp
test
and
jno
dec
testb
mov
lcall
jae
jl
xchg
xchg
push
loope
out
fucomp
outsl
or
xchg
mov
das
popf
xchg
stos
jbe
jnp
jg
mov
adc
fadds
jnp
jnp
fistpll
outsb
jg
arpl
nop
idivl
fstpl
fcompl
stos
fidivs
stc
lret
aad
daa
popa
xchg
cmp
pop
cmc
scas
icebp
test
inc
insb
push
and
stos
pop
lret
sub
popf
sahf
movsb
loop
sahf
pop
rcrl
or
push
dec
or
cmp
fidivrl
loop
mov
jle
popf
out
loop
shrl
outsl
sub
inc
cmp
leave
dec
pop
fsts
test
or
jo,pn
jg
xor
inc
sbb
pop
jmp
and
jae
cli
jmp
in
adc
add
test
dec
lcall
and
aad
fmulp
inc
fcoml
movsl
push
jb
in
outsb
mov
fwait
sti
xchg
mov
add
in
inc
fiaddl
cmp
inc
and
daa
rcrl
xchg
pushf
add
xor
xchg
add
pop
movsb
lea
iret
lfs
lret
inc
pop
les
pop
lods
mov
fists
or
into
and
pop
pop
jmp
pop
sub
gs
xchg
sub
mov
lret
stos
and
ljmp
adc
push
fmuls
ret
cli
xchg
repnz
fcoms
jno
adc
xor
sub
xorl
add
fdivrl
int3
push
xor
out
cmc
mov
test
xchg
push
jg
outsb
and
pop
hlt
push
cmp
leave
sbb
cld
jbe
jp
bound
lock
xchg
mov
pop
aas
loopne
cmp
in
inc
or
jnp
out
outsl
sbb
test
and
lock
or
sahf
dec
or
mov
and
jecxz
shlb
pop
push
out
jnp
cmp
sub
movsb
test
cltd
jle
xor
xchg
pop
dec
inc
mov
das
push
or
dec
out
pop
xor
movsl
push
mov
mov
outsl
xor
xchg
das
xor
stc
pop
imul
lahf
ja
mov
sbb
push
jmp
negb
cmc
jg
stos
inc
or
loopne
mov
xchg
or
jmp
jl
dec
insl
mov
or
nop
shr
mov
scas
lods
test
cltd
pop
xor
inc
dec
inc
imul
and
stos
and
out
mov
sbb
xor
pop
int
pop
sbb
xor
lcall
test
fiaddl
mov
mov
push
sub
sub
sar
xor
add
mov
sub
push
test
das
aas
popa
sub
repnz
sub
mov
sub
nop
sub
jae
bound
scas
out
cmp
sar
lahf
jns
mov
das
dec
int3
repnz
pushf
xchg
lahf
inc
lods
lret
xchg
shl
mov
je
or
xor
xchg
scas
mov
push
out
mov
or
mov
dec
test
enter
data16
popa
ds
and
xchg
push
push
fldt
cli
push
mov
bound
out
stc
mov
mov
icebp
mov
lock
test
or
les
jb
fwait
sahf
fbstp
adc
xor
lods
mov
popa
xlat
test
sub
mov
mov
inc
in
add
sub
rcrl
call
ds
cltd
xchg
into
xchg
int3
mov
dec
cmp
es
mov
cltd
push
mov
cmp
or
mov
arpl
mov
and
gs
aaa
xchg
mov
dec
das
inc
xorb
push
je
add
jecxz
jg
mov
jle
nop
fs
inc
addl
lock
add
mov
leave
lea
js
pop
jmp
and
mov
in
and
sbb
xchg
cmp
out
aad
out
lods
sub
dec
cmpsl
inc
inc
sub
add
daa
lea
ljmp
xorb
ds
sarb
mov
xor
dec
push
lock
dec
daa
push
cmp
hlt
and
les
mov
and
add
pop
les
mov
shlb
pop
in
repnz
cmpsl
and
ss
cli
in
add
push
dec
ss
pusha
enter
ss
stos
subb
icebp
into
push
or
lret
mov
push
add
stos
fcoms
int3
lahf
in
jecxz
push
pop
mov
sub
mov
xor
jns
push
jl
add
leave
push
cltd
jnp
ret
sub
fs
decl
cmp
mov
fcomps
fstpt
push
mov
cs
xlat
add
int
pusha
add
and
mov
cwtl
loopne
lahf
cwtl
push
loopne
test
add
out
add
pop
mov
aad
push
das
mov
push
ljmp
xchg
mov
rorl
dec
cmp
add
test
mov
enter
in
adcb
dec
inc
pop
jne
mov
in
in
ret
sub
addb
lock
inc
rcrb
test
mov
in
enter
xor
stos
jne
int
dec
shl
lods
cmp
int
into
xor
fs
xor
xor
jne
jne
dec
sbb
add
pop
push
lds
cmpl
outsb
dec
adc
movsl
mov
mov
pop
push
shll
sahf
fildll
sti
mov
in
cmp
out
jnp
cli
xchg
daa
movsl
orb
scas
nop
adc
mov
push
mul
mov
out
arpl
xchg
inc
jne
dec
stos
fidivl
sahf
hlt
pusha
flds
sbb
mov
and
dec
aas
jb
bound
jl
add
cmp
sahf
icebp
fisttpl
fwait
rolb
xchg
jne
push
leave
add
push
push
movsb
outsl
sub
shll
mov
adc
cwtl
sti
xor
clc
mov
add
mov
dec
bnd
aam
shll
js
iret
cltd
or
fcomip
imul
popf
sbb
fstl
cltd
pop
imull
add
push
sbb
iret
out
mov
int
dec
nop
mov
xor
mov
cld
adc
mov
cmp
gs
ficoms
jnp
push
jne
push
mov
imul
mov
cmp
subl
shlb
and
imul
add
icebp
jo
push
lods
sub
lock
inc
push
cmp
int
sub
and
fmul
sbb
test
xchg
or
aad
xorl
add
adc
pop
rol
or
mov
in
add
cld
mov
sub
pop
xor
fs
cmp
xchg
int
jp
or
fildll
cmp
mov
pushf
sar
pusha
push
pushf
pop
outsl
inc
movsb
mov
imul
add
cmpsl
out
imul
cmp
cli
sbb
mov
ss
inc
dec
fisubl
out
cli
lods
xchg
or
iret
jo
repnz
sbb
sub
call
stc
jne
add
sub
sub
rol
mulb
xorb
aaa
mov
xor
punpckhdq
push
jmp
cmc
ret
sbb
daa
jae
mov
push
inc
repz
stos
push
and
notb
sbb
shlb
mov
add
inc
test
cmp
cmp
mov
and
lahf
hlt
lods
xor
orb
addl
sti
xor
sub
dec
and
cmp
jmp
push
inc
in
push
mov
je
int
xchg
add
movb
push
sar
push
pop
subb
pop
or
jecxz
repnz
jb
scas
lods
imul
shll
sahf
aaa
ss
lcall
sub
sarb
and
cmp
sub
jnp
rolb
gs
jp
into
loopne
hlt
addr16
mov
xchg
push
mov
mov
jae
std
addl
sub
insb
ret
stos
inc
aam
xor
mov
mov
je
mov
sbb
pop
loope
in
fisttpll
cmp
test
inc
icebp
push
lods
repnz
jge
js
cmpsb
stc
mov
mov
subl
loop
adc
loopne
mov
cmpsb
and
xchg
inc
test
insb
pushf
loop
fwait
js
icebp
cmpsb
push
add
mov
dec
das
out
aad
xchg
pop
mov
dec
es
movsl
adc
cmp
scas
repz
std
enter
push
cltd
das
loopne
push
stc
mov
movsl
stc
sbb
inc
or
hlt
xchg
and
ja
and
scas
push
dec
adc
stc
push
movsb
mov
test
andl
filds
pop
inc
shrl
mov
out
int3
add
mov
or
test
pop
jp
adc
sti
and
gs
test
aaa
sbb
outsl
cmp
mov
xchg
movsb
or
or
in
stos
fadd
cmpb
adc
nop
scas
fsub
clc
in
jne
cmp
aad
pop
pop
mov
mov
lret
popa
dec
faddp
cmp
and
adc
dec
loope
and
mulb
mov
aas
xor
sub
pop
psubsb
xor
inc
mov
mov
xchg
aas
in
sub
addr16
loope
or
mov
xchg
jmp
add
xchg
mov
fwait
pop
fildl
lret
cmpsl
adc
sbb
mov
outsb
dec
sub
scas
daa
enter
or
dec
sub
das
loope
cwtl
mov
std
adc
cmp
test
adc
iret
sbb
sub
mulb
call
add
cmp
fiaddl
mov
pop
add
pop
outsb
pushf
orl
push
shrb
push
mov
mov
cmp
pop
pop
repnz
mov
or
dec
and
xchg
jecxz
xor
in
and
lock
adc
clc
mov
stos
dec
push
mov
test
xchg
repz
mov
icebp
aad
jp
call
xchg
pop
stos
sbb
arpl
and
arpl
fsubrp
and
cs
push
fisubrs
pop
inc
lcall
xlat
movsb
cwtl
not
and
xor
mov
fisttpl
cltd
add
jge
cmp
lcall
push
pop
lock
repz
popa
or
jnp
push
mov
mov
das
movsb
fidivl
lcall
xchg
dec
repnz
mov
mov
sub
into
jns
jo
mov
in
sub
adcb
mov
mov
into
les
mov
sub
in
cmc
pop
jmp
pop
jne
imul
ss
mov
loope
ret
fnstcw
ret
jnp
push
xor
mov
lock
pop
add
inc
outsl
stos
fadd
insb
inc
std
cmp
or
sahf
je
mov
and
dec
dec
jne
mov
iret
in
lea
pop
addr16
and
xchg
mov
dec
inc
aas
leave
sub
mov
and
fistps
dec
fimuls
hlt
imul
sbb
and
lcall
pop
movsb
popa
insl
ja
push
add
pusha
sbb
pushl
add
inc
jmp
jecxz
pop
in
flds
pop
lods
xchg
mov
inc
lahf
fcoml
adc
fsubl
movsl
xchg
out
dec
pop
rcrb
dec
clc
call
movq
js
xchg
mov
mov
push
sbb
scas
sbb
es
inc
xchg
loopne
rcll
icebp
mov
jmp
inc
inc
insl
xor
imul
sub
mov
xchg
mov
dec
push
outsl
test
pop
lret
sub
imul
imul
cld
cmp
pop
pop
outsl
shll
inc
adc
sub
mov
repnz
jae
stos
jmp
sub
std
into
hlt
adc
dec
fmuls
fisubl
out
jnp
cmp
push
mov
push
sbb
ficomps
out
mov
adc
fs
or
cmp
ds
js
mov
add
sbb
pop
sbb
mov
adc
mov
cmpsl
mov
subb
xchg
cmp
sub
pop
sub
aad
fwait
insb
scas
lds
cmc
adc
fadds
inc
pop
add
xor
and
xorl
ret
rcr
or
pop
inc
ss
subb
add
or
cmp
lods
andl
outsl
jbe
movsb
dec
fists
mov
movsl
pop
xlat
inc
mov
xor
in
pop
sbb
cmp
scas
mov
clc
in
xchg
mov
pusha
cmp
ljmp
movsl
testb
xor
movsb
test
mov
lods
shrl
mov
imul
in
mov
push
es
add
or
jns
cs
lods
or
dec
test
push
in
les
fistps
arpl
fiadds
daa
lods
test
lds
adc
push
fwait
pushf
or
inc
mov
fadds
and
outsb
es
leave
xchg
xchg
pop
sbb
outsb
jg
icebp
sbb
mov
test
lds
push
xchg
xlat
jae
loopne
fadds
lret
inc
xchg
test
stc
lods
jno
scas
inc
lods
xor
jne
mov
jl
xchg
xchg
ret
xchg
mov
mov
and
andl
into
jmp
push
push
ds
imulb
ret
aaa
sbb
adc
divb
inc
lods
aad
jmp
jo
sbb
inc
shlb
cmp
mov
cmp
lahf
jb
nop
fmull
lret
xchg
push
in
and
dec
fninit
inc
pop
iret
cmp
mov
jno
lock
or
fwait
lahf
inc
out
fcmovnb
cmpsb
add
jns
jg
jmp
cli
pop
xlat
mov
pusha
adc
decb
dec
mov
add
jle
push
sbb
aad
inc
dec
jge
cltd
jmp
fwait
dec
fninit
sbb
cwtl
in
or
sbb
xor
mov
sarl
sbb
xchg
jae
push
jmp
pop
popl
add
movsb
js
dec
sub
cwtl
scas
stc
jecxz
dec
jmp
jb
adc
adc
mov
dec
pop
insb
inc
jae
shll
or
out
add
mov
xlat
cmpsl
push
xorb
cli
scas
adc
mov
pop
fdivrs
loope
dec
sti
jne
movsl
mov
mull
push
push
pop
dec
movsb
mov
xchg
xchg
in
das
sub
dec
sbb
xor
out
lods
lret
cmpsb
aaa
jge
cli
stos
dec
je
add
pop
jo
push
or
fcoms
fstl
scas
scas
test
xor
aaa
mov
lds
push
jle
loopne
jmp
nop
adc
dec
aas
inc
insl
jge
pop
dec
insb
sub
outsl
pop
or
push
in
pop
aad
cwtl
xchg
pop
aas
push
xor
out
mov
outsl
mov
in
aad
icebp
adc
pop
xorb
pop
psubusw
inc
into
pop
in
scas
xor
addl
scas
fucomp
int
push
xchg
push
aad
ss
mov
push
jle
movsb
xor
xchg
push
movsl
bound
movsb
filds
out
subb
jns
mov
mov
sbb
lock
jle
dec
stos
out
push
mov
dec
cltd
das
adc
mov
add
xchg
jns
je
sbbb
mov
xor
jns
mov
xchg
in
sub
addb
daa
repz
adc
loop
dec
lods
hlt
stc
shrb
dec
xor
xchg
cmp
xchg
daa
rclb
pop
jge
cli
push
pushf
jo
cmc
pop
mov
imul
lea
addl
sahf
pop
mov
jae
movsb
stc
loope
xor
pop
cmp
bnd
stos
or
fimuls
idivl
addl
mov
push
scas
cmp
cli
lahf
inc
mov
cmp
jmp
lahf
daa
fstl
in
mov
jl
stc
decl
pusha
test
rcrl
out
xchg
cmp
je
fs
and
cmp
out
xchg
scas
daa
pop
and
loopne
aaa
ficompl
bound
in
stos
fwait
and
mov
std
push
cld
sbb
mov
dec
fcomi
lods
and
fsubrs
andl
sbb
push
mov
jo
daa
inc
push
iret
jmp
into
notb
mov
lods
adc
sbbb
xchg
xor
scas
xor
aaa
pop
fs
rorl
or
scas
aam
sbb
cmp
inc
les
test
sbbb
sub
xchg
sub
rcrl
icebp
and
mov
xlat
repz
imul
mov
sub
inc
mov
pop
cmp
push
out
cs
movsl
nop
pusha
cli
dec
xchg
out
or
or
push
mov
clc
jb
mov
je
fcoms
enter
sub
or
xchg
push
pop
pop
out
icebp
cwtl
sub
sub
sub
push
cmovl
sbb
jmp
out
jbe
lret
or
lret
lcall
mov
and
shrl
stc
push
mov
je
xor
mov
push
sti
cmp
xchg
push
push
adc
lahf
ljmp
pop
mov
mov
xor
or
jle
movsl
es
push
clc
sbb
xchg
loopne
dec
cmp
rcrl
pop
fwait
pop
pop
cmp
sub
mov
adc
or
mov
inc
insl
in
aaa
repz
or
xchg
jle
push
sbb
push
mov
iret
mov
or
mov
and
cmp
mov
ror
addr16
data16
cmc
outsb
fsts
test
mov
jge
dec
mov
pop
lret
mov
push
daa
rorl
in
leave
sub
pusha
jo
dec
cmpsb
jno
rol
loopne
xchg
sub
sub
xchg
movsb
cmp
test
aam
xor
je
jle
stos
std
fwait
sarb
cmp
and
xor
add
push
ret
push
rclb
xchg
mov
ds
insb
mov
cmpsb
add
incb
inc
xchg
imul
pop
mov
cmp
dec
dec
and
sub
pop
jnp
cltd
insl
es
rcrl
das
out
fiaddl
inc
ja
ret
xchg
test
lds
pop
js
mov
jmp
fsts
sub
imul
fdivl
test
cwtl
and
jp
push
mov
std
cmp
push
insb
and
add
mov
push
std
add
mov
mov
xchg
jg
sbb
xchg
or
adc
mull
dec
or
and
jmp
inc
jecxz
gs
cli
or
add
or
int
ficoms
dec
mov
insl
insb
lds
sub
jo
ljmp
imul
ret
iret
lahf
pop
and
mov
and
cmp
cld
push
in
int3
xchg
sub
ja
mov
dec
push
cmp
and
sbb
inc
mov
lcall
jmp
jg
loopne
and
dec
dec
fiadds
sub
out
pop
pop
xor
mov
sbb
aaa
movsb
xchg
lret
clc
inc
stos
ja
mov
cmp
fucomp
xchg
mov
mov
dec
movsb
adc
mov
push
mov
and
lea
xchg
jbe
xchg
imul
out
sbbb
mov
bound
or
mov
inc
pop
lds
and
and
mov
xchg
adc
les
movsb
cld
mov
gs
cwtl
jo
dec
je
add
jnp
stc
sub
xchg
mov
adc
xchg
jmp
es
adc
fidivrl
pop
pop
clc
not
shrb
int3
jge
adc
ljmp
imul
addr16
fidivl
cwtl
xor
and
ret
aaa
inc
pop
pop
xlat
xchg
dec
stos
test
les
xchg
idivl
mov
xchg
mov
push
imul
push
call
fstps
stc
sbb
ljmp
jge
xor
mov
push
jbe
mov
fs
pop
rorb
jp
clc
std
and
push
subl
inc
stos
mov
adc
and
lods
mov
je
mov
cs
loope
mov
cltd
pop
out
mov
fwait
stc
push
dec
xchg
nop
call
in
adc
add
loopne
cmp
adc
jo
int3
push
cmpsl
pop
dec
ficompl
into
xchg
loopne
in
inc
mov
inc
dec
adc
sub
sbb
or
aam
jb
cld
cld
pop
pop
mov
movsb
adc
jno
rcll
shrb
imul
xchg
and
sahf
or
mov
js
fcomps
xchg
stos
stos
pop
inc
and
mov
mov
push
iret
test
call
inc
cmc
mov
xchg
mov
enter
push
adc
xchg
ret
cs
stc
cwtl
mov
cmp
mov
add
inc
int3
std
fisubs
jae
lock
add
popf
ja
jne
xor
insl
dec
cltd
push
mov
sub
xchg
fs
mov
pop
inc
xor
sub
sub
pop
in
loop
dec
insl
pop
leave
out
shl
sbb
xchg
into
insb
cmp
int
inc
nop
sub
dec
inc
add
sub
dec
jns
enter
push
push
jmp
jle
das
cmp
or
mov
push
xor
add
loope
int3
insl
mov
add
out
cmc
lea
inc
scas
ret
leave
sbb
mov
insb
adc
les
sbb
pushf
outsl
outsb
loopne
rorb
rclb
sub
int3
and
ljmp
push
sub
lret
cld
hlt
cltd
shll
or
dec
test
pusha
mov
jns
jp
std
mov
mov
lea
and
dec
enter
push
sbb
pop
sbb
jmp
inc
push
add
xchg
mov
mov
decl
rcll
sysexit
mov
outsl
mov
mov
xchg
inc
inc
into
rolb
loope
fistl
and
repnz
or
xor
dec
mov
arpl
jnp
gs
cli
cltd
enter
push
jbe
jo
push
xchg
int3
in
int
add
dec
subb
lods
fists
cmpsl
and
add
inc
jmp
dec
fsubrs
mov
or
lret
push
sarb
sub
mov
in
hlt
sbb
xchg
xor
lahf
inc
xor
xor
cmc
fs
and
int
jo
jge
inc
in
mov
stos
scas
or
lea
incl
mov
shlb
sub
popf
and
fdiv
inc
xor
and
in
roll
xchg
jecxz
aaa
push
xor
and
lock
pop
or
dec
sbb
or
lods
mov
repz
call
les
out
scas
int3
mov
orb
inc
push
or
std
mov
dec
or
dec
ss
mov
movsb
dec
aas
push
or
mov
cmp
insb
pop
jnp
mov
add
fwait
cwtl
jo
xor
or
out
dec
push
xchg
xadd
in
int3
ds
sub
sbb
cmpsl
sbb
dec
adc
or
cmpl
cs
add
fisubrl
xacquire
mov
push
test
rcr
test
mov
dec
add
popl
lods
out
call
jp
movsl
xor
popf
jne
cmpsl
sbb
scas
adc
mov
mov
jb
adc
push
dec
fcoms
xor
or
stos
fisubl
out
jo
lods
arpl
arpl
sbb
mov
mov
mov
rcl
jmp
fiadds
sbb
cs
sub
test
imul
pushw
test
imul
imul
les
pop
push
lea
push
lods
imul
jmp
std
pop
lock
inc
dec
mov
movsb
movl
and
lea
push
jp
mov
inc
loopne
lret
pop
das
jmp
pop
lock
adc
les
nop
lahf
dec
and
setne
aaa
adc
jge
cwtl
add
push
stos
mov
out
call
xchg
push
dec
mov
repz
push
in
arpl
cs
dec
add
dec
xor
sarl
mov
ror
mov
fld
in
sub
pusha
in
fiaddl
fmull
jecxz
or
and
test
pop
ss
les
aas
lods
ret
mov
add
out
sbb
sub
in
leave
adc
xor
pop
sbb
test
shll
cmc
mov
or
pop
out
add
sbb
cs
jp
jae
lahf
mov
fldl
fdivs
mov
jmp
cli
cltd
sarb
ficoml
add
rcll
out
sbb
xchg
test
cmp
cmp
sub
rcl
cmp
and
mov
jge
inc
popf
daa
mov
and
movb
loope
xchg
adc
dec
xchg
mov
add
mov
cwtl
cwtl
les
add
lock
sub
add
in
in
pop
icebp
daa
cmp
outsl
imul
jo
jnp
cmpsw
cmp
pop
outsb
test
xor
testb
jbe
das
sub
dec
pop
push
push
push
movsl
fwait
xchg
add
fisubrl
ret
insb
pop
add
cmp
clc
outsb
inc
adc
cmp
ljmp
cmp
lcall
push
icebp
movl
dec
cmpsl
fistpll
push
push
cmpb
fisubrl
repz
mov
dec
jmp
mov
cmc
inc
inc
leave
cltd
cmc
cmp
and
sub
ds
sahf
ficoms
sub
add
aad
dec
aas
xor
or
mov
adc
orl
repnz
mov
stos
mulb
jo
sbb
out
lea
add
fwait
xchg
sarl
lds
dec
movsl
pop
loop
jle
cltd
or
rcl
enter
mov
repz
add
cmpsl
lods
test
push
stos
nop
ljmp
inc
jo
inc
pop
jb
out
push
adc
jg
dec
in
add
lcall
scas
sub
mov
in
and
dec
jmp
cwtl
sbb
inc
bound
sbb
cmp
jmp
repz
leave
push
push
adc
adc
pop
push
inc
imul
out
mov
cs
xor
adc
adc
js
mov
mov
popa
mov
test
aas
nop
or
movsl
aaa
lods
outsb
bound
mov
lds
jle
lods
adc
and
sbb
sahf
jae
cs
pop
mov
pop
sbb
pushf
fsubrp
loope
sbb
cmp
or
inc
mov
sbb
cmp
addr16
and
stos
js
sub
inc
xchg
les
mov
mov
loopne
cs
cmp
inc
cwtl
jb
shll
dec
mov
call
cmp
cltd
lret
loope
cwtl
pop
jp
jp
pop
xchg
jo
sub
xlat
in
jbe
aas
shlb
ss
xchg
push
stos
or
test
adc
aad
cmpsb
sub
rolb
addr16
adc
inc
popf
mov
mov
stc
push
fidivl
or
call
scas
adc
cld
movsl
xchg
add
pop
lds
dec
lods
je
add
ds
sub
lahf
notb
in
cmc
pop
cwtl
mov
jl
cmp
stos
out
mov
stc
sub
inc
fldl
xor
inc
cli
icebp
dec
int
push
and
push
imul
cmp
mov
jae
mov
cmpsl
add
dec
sub
sub
adc
aad
jbe
rorb
add
enter
mov
push
mov
jmp
inc
mov
enter
push
pushf
and
clc
mov
sbb
add
fnstenv
mov
popa
jo
xor
xor
stos
lock
test
pusha
loope
sbb
sub
mov
mov
test
subl
cmp
out
int3
sbb
push
sti
mov
mov
iret
inc
add
cld
mov
lock
movsl
into
out
mov
mov
pop
lret
mov
sub
pop
sbb
or
mov
leave
adc
xor
sub
or
sarl
mov
addl
push
mov
out
xor
push
les
sahf
stos
sbb
dec
cs
inc
hlt
ss
fcmovu
negl
jbe
leave
inc
jb
jb
clc
imul
adc
pop
adc
cmp
ja
rcl
jmp
fstps
sub
test
and
daa
js
push
mov
cltd
xchg
mov
nop
add
test
lods
lret
mov
scas
dec
data16
push
sar
mov
sbb
pop
pop
sti
add
push
test
pusha
aam
dec
dec
pop
inc
mov
loopne
imul
pop
jb
pop
push
cs
movsl
jbe
sarb
test
clc
xchg
mov
iret
xchg
ja
jbe
push
int
sbb
int3
add
in
les
adc
sbbb
inc
xor
add
mov
cmpsl
ds
xor
pop
daa
and
in
cmc
popa
js
push
js
sbb
inc
loope
mov
sbb
js
lods
jnp
leave
scas
push
adc
sbb
push
jg
dec
cmp
mov
xor
sub
push
mov
imul
jb
sbb
adc
insl
mov
or
dec
aam
mov
sub
push
sbb
push
stc
sbb
mov
int
pop
icebp
xlat
aam
mov
push
fsub
leave
outsl
adc
jno
lods
mov
ds
dec
pop
push
add
movsb
arpl
fsts
and
cs
xor
shl
push
xor
shll
jo
mov
popl
adc
jmp
rol
sub
and
sti
roll
andl
jne
sub
sub
inc
inc
out
mov
xor
sbb
mov
cmp
inc
xchg
mov
int
add
mov
call
or
ja
test
jl
daa
add
adc
jno
inc
lock
inc
insl
icebp
pusha
into
and
cmpsb
jns
push
pusha
lods
xchg
xchg
dec
out
ljmp
sub
dec
movsl
outsb
jle
dec
mov
repz
pusha
xor
jne
pop
push
jl
xchg
pushf
loop
pop
cs
aaa
scas
mov
loope
pop
loop
pop
leave
pop
dec
subl
imul
mov
sub
mov
negb
idivl
dec
lods
mov
xor
jge
stc
bound
push
inc
sub
iret
shll
xchg
leave
cmpsb
repnz
sbb
inc
aas
jmp
cs
movsl
test
add
jmp
rorl
lods
cmc
jp
xchg
pusha
push
movsb
fs
jns
repnz
adc
stos
pushf
in
test
pop
mov
push
sbb
test
cmp
sbb
add
dec
aad
loope
cmp
xor
shll
cmp
lods
loopne
mov
test
int3
mov
pop
adc
enter
icebp
lods
je
jmp
adc
stc
sub
cwtl
cwtl
cmp
loopne
mov
int
lea
int
subl
push
test
inc
imul
mov
mov
mov
into
pop
pop
push
sub
leave
xor
rol
nop
mov
inc
loop
and
loop
xchg
jp
js
nop
int3
mov
adc
xchg
repz
add
int3
aas
dec
or
sbb
lods
xor
sub
sbb
lods
pop
lods
cmpb
adc
cmc
sub
mov
lret
inc
pop
sbb
lret
clc
jno
push
cmp
or
cmp
pop
into
dec
stos
lea
xchg
mov
and
dec
adc
aaa
push
pop
jns
pop
pop
mov
subl
push
mov
sarb
push
or
mov
iret
push
ret
cli
hlt
fucomip
cli
addr16
add
push
add
sti
xchg
in
sbb
xchg
add
daa
cltd
call
xor
mov
ljmp
loopne
loop
das
push
mov
js
xor
adc
inc
stos
or
jge
or
adc
cmp
call
sahf
cmp
sub
inc
es
scas
xchg
xor
sub
jnp
xor
lock
or
movsb
icebp
sub
inc
push
sub
dec
mov
loope
fldcw
mov
inc
sub
sub
loopne
jmp
ficompl
jmp
add
dec
sub
xchg
and
mov
jae
adc
testl
push
cwtl
dec
bound
sub
cltd
mov
iret
cmpsl
dec
adc
add
jl
add
jmp
or
test
xor
cmc
jnp
sub
out
mov
sub
sbb
in
sub
ljmp
add
add
or
adc
fs
das
jb
dec
lods
lret
adc
sub
arpl
pop
cmpsl
lods
cltd
pop
cmpsl
outsb
inc
rcrb
xor
ret
rcrl
sub
sbb
ret
fimull
mov
dec
sbb
inc
clc
dec
xchg
add
rcrl
xor
sahf
or
mov
fstps
inc
cmc
insb
mov
and
nop
loope
faddl
push
add
push
mov
mov
fdivrs
or
lret
push
lea
scas
cmpl
scas
jne
mov
jl
outsl
mov
mov
in
mov
rol
stos
nop
int3
inc
pop
into
dec
lods
rol
jne
outsl
leave
sbb
lods
js
adc
push
mov
and
rcrl
divl
iret
hlt
int3
cli
rcrb
add
mov
stos
out
jp
clc
jp
fnstcw
jno
js
sbb
dec
outsl
dec
jg
jns
sub
pop
fists
mov
je
xor
js
push
mov
or
lcall
inc
sub
jle
js
push
xchg
push
pop
and
ror
or
and
scas
loop
sti
outsb
add
inc
sbb
addb
xor
jp
push
ss
jb
outsb
and
pop
xchg
movsb
out
sub
or
call
cs
jp
cmp
or
imulb
pop
imull
mov
mov
ss
fnsave
xchg
jno
mov
dec
shr
inc
fs
mov
sbb
push
ja
and
and
movb
lea
mov
adc
loope
adc
mov
xchg
cmc
xchg
outsb
flds
pop
xor
scas
out
cld
adc
push
mov
std
les
scas
xor
inc
pop
cmp
daa
and
jne
mov
daa
xchg
xor
call
icebp
lret
sahf
iret
dec
and
pop
insb
mov
popl
es
push
dec
in
sub
pop
xlat
add
roll
seta
jae
or
in
rorb
mov
dec
fistps
test
pop
enter
sti
adc
push
fcmove
stc
lods
les
jo
cmp
popf
add
and
loop
pop
cwtl
lret
sbb
test
in
sti
gs
sbb
sbb
inc
sbb
roll
pop
jno
rol
cwtl
nop
dec
xor
pop
lods
aad
hlt
mov
dec
fs
mov
adc
test
mov
inc
imul
loopne
test
mov
test
push
xchg
mov
and
shll
mov
pop
mov
inc
sahf
rcl
out
fincstp
enter
xchg
adc
test
mov
mov
out
push
mov
pop
mov
mov
lods
cmp
xlat
mov
mov
mov
aam
sbb
mov
loop
sub
push
lods
pop
mov
lods
test
stos
lods
leave
push
jecxz
enter
mov
push
out
into
dec
loope
out
sbb
push
lods
fdivr
sub
dec
jns
dec
mov
loope
in
mov
mov
jns
out
dec
mov
inc
sub
stc
int3
pusha
xchg
notl
lahf
cmpsl
cli
lret
add
aas
lock
ficomps
mov
sub
lods
stc
in
rcrb
sub
lods
out
insl
mov
xchg
in
pop
sub
cmpsl
subb
test
cltd
mov
insl
int3
insb
mov
dec
or
xchg
jo
fistl
mov
lcall
cld
popf
jge
pop
or
mov
jne
jno
or
addr16
xor
stos
repz
xor
pop
cli
iret
jne
mov
test
out
shll
cmpsb
mov
bound
mov
mov
stc
sub
daa
xchg
mov
mov
shlb
rcll
inc
mov
push
scas
lahf
das
mov
sahf
das
jmp
push
fld
pop
xlat
mov
adc
or
xor
pop
and
xchg
daa
adcl
adc
fldcw
jg
repnz
stos
ret
int3
in
adc
jnp
sbb
sbb
push
ds
ljmp
scas
adc
rolb
mov
sbb
mov
cmp
push
movsl
push
shlb
xchg
mov
int
jno
fwait
dec
push
adc
mov
jnp
insb
sahf
das
add
dec
lret
sbb
xchg
push
push
xor
mov
dec
pop
jbe
int3
sub
inc
leave
and
je
cmp
cli
mov
lock
adc
insl
fisttpl
leave
or
sbb
or
adc
jge
xor
andl
nop
mov
lahf
sub
repz
push
add
xchg
inc
push
pop
and
std
icebp
fxch
inc
pushf
push
stos
add
test
je
ror
cli
inc
js
scas
scas
out
movsb
add
lds
dec
test
pop
add
inc
cld
mov
aad
std
add
into
xor
movsb
add
fcmovnbe
sbb
test
jmp
jb
mov
pushl
and
mov
jnp
mov
aad
out
push
sub
cmc
pop
rorb
aad
push
sbb
scas
lods
jnp
clc
fs
daa
rorl
enter
sub
je
push
xor
scas
int3
cmc
push
repz
cmpsb
cmp
jno
scas
stos
scas
ret
lds
inc
icebp
cmp
adcb
mov
push
add
pushf
jnp
or
in
inc
and
pop
sti
shl
jne
push
mov
in
xor
pushf
popf
adc
push
inc
xor
jmp
mov
sbb
sub
stos
mov
fdivrl
rcll
nop
mov
xor
dec
sarb
dec
push
xchg
adc
xchg
sbb
shr
sub
xlat
and
jno
jmp
lret
pusha
xchg
xchg
adc
cmp
daa
out
inc
jg
cmc
mov
cwtl
push
vpsrlw
jl
or
pop
sub
stos
mov
inc
dec
arpl
pop
jmp
sarb
or
and
pushf
out
push
aaa
ret
xor
pop
fisubrs
pushf
adc
xor
cmpsb
dec
out
sub
inc
je
popf
stc
pop
push
xchg
int
sar
mov
jmp
inc
in
sbb
xchg
mov
dec
add
rcll
xchg
xchg
and
ljmp
mov
xlat
sub
ret
fs
aas
movb
popf
ljmp
testb
aas
fistl
sbb
jnp
in
cmp
jmp
arpl
xchg
pop
inc
adc
stos
jns
lock
mov
movsb
fsubr
jne
mov
es
pop
or
push
inc
clc
xorb
outsl
test
dec
in
aad
mov
push
pop
adc
loope
enter
add
jg
and
sahf
stc
sti
jns
mov
cld
jge
pop
dec
sub
jae
repz
test
sub
pop
int3
pop
push
cmp
in
jmp
push
mov
sarl
jmp
rcrb
pop
popa
cld
cmp
lret
cld
xchg
pop
add
orl
push
xor
lahf
mov
dec
cmc
int3
pop
pop
adcl
pop
ss
or
push
insl
mov
cmpl
insl
fwait
ljmp
pop
mov
pop
mov
pop
std
int
dec
gs
mov
mov
rorb
sahf
xchg
movl
dec
pop
cld
imul
xor
lret
bound
arpl
les
movsb
addb
insb
movl
cwtl
xor
mov
icebp
lea
mov
out
jge
jno
push
test
test
jg
pop
mov
sahf
imull
mov
xchg
dec
mov
cli
mov
iret
inc
and
mov
in
xchg
or
das
cmpsl
ret
inc
and
les
movsl
pop
imul
dec
test
sbb
test
or
iret
push
dec
dec
sarb
aad
imul
scas
in
call
punpckhdq
mov
lret
adc
pop
fwait
popf
sbb
inc
aam
and
sub
jge
negl
mov
xchg
push
fsubr
mov
cld
bound
in
lret
pop
or
cmp
call
aas
fdivrl
jb
adc
shrb
ficompl
les
fadds
mov
fwait
sarl
test
scas
jno
xchg
push
mov
jo
pushf
jae
pop
dec
cmc
push
mov
mov
or
sahf
ret
fiaddl
wbinvd
sahf
mov
pop
mov
cmp
aaa
pop
push
mov
out
push
inc
push
in
and
hlt
push
in
mov
retw
xchg
push
pusha
lods
pop
mov
or
iret
nop
lret
popa
or
cmp
xor
jg
adc
lock
push
and
fsubrs
js
add
jno
push
test
inc
push
mov
dec
popf
mov
pop
and
xchg
cmp
jb
cmp
hlt
icebp
fwait
xchg
push
xor
pushf
dec
mov
shlb
lahf
icebp
mov
or
sbbl
icebp
mov
outsb
stc
addl
mov
int3
addl
aam
adc
sbb
outsl
dec
mov
dec
stos
stos
aas
rcrb
fsubrs
cmpl
and
push
push
int
pop
xchg
outsl
xchg
fdivr
push
and
jbe
inc
mov
jecxz
les
je
inc
xor
movsb
add
inc
stc
xchg
pop
sti
push
or
jmp
cmp
xchg
xchg
rol
in
neg
pop
xor
xorl
mov
inc
adc
ljmp
pop
xchg
xorb
jmp
xor
inc
or
pusha
jns
in
out
jnp
shl
inc
mov
or
fcoml
shlb
inc
push
xor
pusha
cmp
cmc
pop
dec
cwtl
in
xchg
lods
push
or
or
js
rcr
rcll
adc
int3
pop
add
insl
hlt
jbe
mov
jb
cli
sub
lock
xchg
or
test
divl
loope
cmp
xor
fmulp
jl
mov
scas
and
xchg
loope
inc
insb
cwtl
mov
mov
testl
xor
arpl
stos
movsb
xchg
in
mov
cmp
lret
mov
sbb
xchg
mov
mov
and
mov
add
aam
lds
mov
popa
test
adc
lds
nop
xchg
fsubs
jge
pop
jg
scas
das
insl
loopne
push
jnp
and
mov
imul
out
pop
pop
and
pop
stos
xchg
mov
mov
lods
sbb
pop
mov
push
xor
xchg
sti
xor
mov
lods
addr16
gs
sbb
lcall
dec
fisttpl
ficomps
imul
sbb
lret
push
push
mov
mov
sub
push
xor
add
pop
or
jae
sbb
lea
fcomps
push
in
add
push
mov
std
sbb
xor
mov
call
imul
inc
enter
dec
lock
jno
jne
sbb
fs
xchg
aam
int
in
lea
and
cli
fwait
sar
dec
adc
push
mov
adc
fidivrs
aad
dec
mov
add
sub
fs
dec
outsl
addr16
ds
out
cmp
mov
mov
imul
scas
mov
aaa
rcrb
push
mov
pop
jmp
mov
mov
sub
push
mov
jo
jmp
jle
test
push
add
aad
hlt
je
add
ret
int
mov
pop
insl
xchg
into
iret
xchg
add
ja
mov
hlt
ret
xor
lcall
mov
jns
jno
scas
mov
pop
cltd
dec
add
fsubs
cmc
mov
sub
inc
or
sbb
cmp
mov
inc
or
jne
jl
pop
or
jbe
rorl
scas
mov
imul
add
jo
pushl
ret
ror
jns
into
xchg
push
jae
pop
lahf
lds
test
aas
cmp
mov
roll
push
mov
inc
ja
mov
inc
sarb
mov
test
pop
cmp
ss
push
jno
mov
sub
pop
xor
push
iret
and
pop
cltd
push
stos
add
ds
inc
jmp
fwait
push
mov
lret
rorb
pusha
int3
jb
pusha
int3
repz
push
mov
imul
jb
mov
pop
sub
imul
or
jl
xchg
jns
inc
xlat
insl
add
rorb
iret
xchg
sub
test
insl
jne
dec
add
xchg
sbb
mov
mov
inc
or
movsl
lea
dec
add
xchg
frstor
cmc
mov
lock
xor
in
pop
dec
add
xchg
popf
and
mov
cmpsb
shlb
lret
jnp
push
lea
lea
fstp
cmc
inc
inc
push
push
or
es
xor
cmp
iret
punpckldq
and
pop
cld
sbb
mov
das
stos
jle
mov
inc
stos
notb
iret
out
dec
mov
xorb
mov
repnz
or
sub
mov
aad
xchg
js
inc
or
insl
jne
dec
add
sbb
jl
cwtl
lds
xor
rcrb
xchg
in
je
push
loope
into
repz
aas
pusha
pop
pop
aam
inc
dec
cmc
int3
pop
and
iret
jo
fwait
stos
imul
pop
or
ss
cltd
in
push
pop
sbb
jp
neg
ret
jne
pop
mov
push
in
jne
push
sbb
lds
jp
mov
mov
hlt
movsb
dec
and
xorl
jmp
fbstp
sub
in
and
mov
mov
pop
mov
movsl
lahf
pop
sbb
dec
arpl
dec
pop
aaa
and
push
int
xchg
push
aaa
jg
adc
jecxz
dec
test
imul
jae
and
cmp
mov
lock
inc
xor
lea
sbb
and
fldl2e
xchg
sbb
sbb
mov
in
or
dec
imul
xchg
sbb
mov
dec
fsubl
pop
enter
inc
mov
shlb
pop
cmp
enter
xchg
stos
cmp
scas
out
dec
jo
ja
sbb
orl
jns
lret
jbe
imul
and
cmp
xchg
in
mov
adc
les
daa
out
test
push
inc
outsb
push
loopne
pop
pop
aaa
ljmp
dec
call
enter
or
and
cmp
mov
adc
jns
jge
test
dec
push
out
xlat
test
cmp
xor
mov
push
xor
std
xchg
shlb
cmpl
sub
xlat
mov
shr
sub
movsb
dec
stos
mov
stc
sbb
push
sbb
aaa
dec
mov
cmpsb
loope
popa
pop
cmpsb
xchg
addb
cmp
or
iret
xor
mov
xlat
dec
jae
push
aaa
sbb
push
sub
lret
add
jp
lret
push
adc
adc
dec
xorb
mov
imul
xor
cmp
mov
add
jecxz
mov
inc
int3
lret
int3
lds
push
loope
pop
out
je
inc
outsb
nop
repnz
adc
adc
cs
xor
cmpsl
repz
shlb
jp
stos
mov
push
fxch
mov
popf
shr
xor
insl
pop
scas
and
jb
push
and
sub
notl
pop
gs
jae
jecxz
pop
cmpl
jns
scas
sbb
inc
push
dec
xchg
cltd
xchg
lods
mov
in
mov
mov
pop
or
in
sub
jecxz
ret
jmp
js
mov
lcall
jp
cmp
inc
outsb
dec
loope
sbb
js
mov
cmp
push
mov
fwait
test
xchg
loop
js
mov
mov
add
sub
lea
inc
imul
mov
es
mov
js
mov
dec
add
xchg
mov
push
mov
inc
out
cmc
jmp
cmp
jnp
mov
rcl
jg
out
push
test
jnp
xchg
and
fdivr
cmp
dec
cmpsb
push
mov
imul
mov
ss
inc
scas
mov
nop
inc
sub
fistpl
sbb
pop
push
dec
js
xor
jp
stos
mov
sub
push
hlt
push
insl
shrl
and
jo,pt
dec
lahf
cltd
xor
cmp
push
jne
sub
les
das
push
shrb
test
aas
std
stc
pusha
jecxz
outsb
inc
inc
bound
in
or
adc
jnp
fdivrs
pop
pusha
jmp
ljmp
std
adc
fstps
andl
jne
mov
mov
ficoms
rclb
je
xchg
mov
andb
and
in
push
xchg
dec
jne
fcompl
pop
cmp
test
imul
sahf
mov
daa
sarb
ja
or
push
xchg
ret
popf
xchg
sbb
mov
push
cld
add
or
in
pop
sub
pop
push
les
or
in
ficoms
testb
ja
std
add
in
cmp
repz
dec
lret
rorl
lret
xchg
or
mov
jmp
ret
jg
popf
jmp
and
out
sub
mov
inc
adc
enter
ss
ret
cld
push
out
cld
movsb
mov
fwait
mov
jmp
sbb
mov
adc
jo
hlt
scas
nop
fisttps
mov
cmpsb
jae
xchg
lret
mov
movsb
mov
mov
mov
jmp
xor
mov
mov
jg
jle
inc
lods
inc
push
pushf
fwait
mov
xlat
jb
notl
jl
and
in
xchg
fs
xor
leave
xchg
sub
aaa
cli
out
cmpsb
mov
shrl
sub
ror
pop
jnp
or
pop
mov
bound
jmp
js
push
pusha
inc
mov
jl
xchg
loope
inc
out
lret
call
stos
mov
sub
inc
push
fimull
jge
add
mov
je
or
js
into
mov
pusha
or
cmpb
in
and
pushf
sti
xchg
mov
cmpsl
push
int
aas
mov
cmp
xchg
add
fs
or
sahf
mov
loop
jle
adc
inc
psrad
mov
sub
imul
loopne
mov
andl
add
dec
fcoms
stc
loope
sahf
add
scas
aad
arpl
je
inc
cmp
cs
jns
enter
push
pop
xlat
insl
dec
arpl
addr16
mov
or
insl
mov
dec
add
mov
ljmp
cmp
js
xor
cmp
rcrl
fstps
stc
icebp
jb
inc
mov
cmc
lret
mov
js
xchg
in
frstor
inc
dec
out
and
mov
out
add
cmp
cmc
dec
gs
mov
xchg
pop
or
movsb
or
rorl
cmc
dec
push
mov
sub
and
call
fs
notl
sbb
dec
xchg
das
or
cs
popa
or
jnp
or
shr
mov
in
or
outsl
mov
stos
adc
cmpsb
pop
bound
les
add
test
mov
insl
out
lahf
test
jmp
jp
rclb
sub
inc
test
push
xchg
pop
imul
imul
push
xchg
xchg
je
pushf
into
call
sbb
pushf
push
aaa
add
fsubr
dec
mov
adc
sbb
cmp
sahf
icebp
aam
sub
push
test
shl
push
insb
lods
addr16
adc
call
pop
cmc
pop
mov
pop
in
loop
loop
pop
mov
mov
dec
negl
icebp
pop
mov
mov
xchg
rcrl
call
push
pushf
aad
push
iret
push
cmpl
ret
sahf
clc
or
pushf
sub
xor
pop
rclb
hlt
test
push
jno
push
sbb
sbb
xchg
fs
xlat
sbb
push
popa
rcr
ss
sti
push
sbb
adc
ret
xchg
in
sbb
ljmp
lea
in
push
inc
fwait
xlat
cmp
outsl
loope
add
out
mov
add
cmp
scas
mov
add
rcrl
sub
mov
xor
xchg
xchg
aam
inc
ljmp
xor
pop
sahf
push
cmp
add
push
sbb
sbb
inc
jno
pushf
jns
push
lahf
xorb
lcall
dec
or
xlat
mov
inc
in
sbb
outsl
popf
mov
sub
ret
cmpsb
mov
call
shrl
shr
push
idivl
mov
ficompl
pop
icebp
sub
xchg
dec
leave
sti
push
lods
add
rcl
push
lret
pop
mov
movsb
jp
jb
push
jmp
cmp
and
or
leave
pminub
fcomp
sar
xchg
cmp
iret
nop
scas
stc
outsb
jmp
pop
dec
add
fstpl
push
dec
dec
add
les
sub
jmp
mov
sub
or
cmp
aaa
aas
xchg
push
xor
arpl
mov
cmp
fisubs
icebp
mov
mulb
dec
leave
addb
and
in
push
das
mov
das
pop
push
dec
jmp
loop
fstl
jmp
lea
jle
add
fisttps
lds
das
repnz
push
mov
mov
pusha
and
lods
push
add
and
lea
jge
ss
adcl
cmpsl
and
mov
fistl
imul
nop
push
popf
fs
maskmovq
imull
mul
add
jg
jne
outsl
out
adc
insl
mov
and
cld
pop
fisubl
jnp
aam
sti
pushf
cmp
out
fdivr
mov
jecxz
inc
dec
jmp
out
divl
call
rcrl
push
fcom
je
mov
cli
test
outsb
mov
mull
add
pop
sahf
rorb
mov
loop
in
test
dec
pop
add
repnz
movsl
cs
jo
inc
leave
jp
leave
lret
mov
aas
xchg
xor
popf
lahf
sarl
ficoml
xchg
xorl
pop
stos
fdivrs
xchg
hlt
or
inc
xor
mov
js
dec
fidivrl
mov
dec
bnd
daa
jge
in
mov
fdivrl
mov
pushf
es
fwait
xchg
mov
mov
lahf
xchg
push
xchg
lahf
mov
mov
pop
pop
xchg
inc
cmp
pop
mov
mov
xor
lahf
jge
fucomi
test
ja
lahf
jae
repz
dec
mov
mov
mov
ljmp
aad
sbb
push
or
jmp
sub
or
sub
mov
in
ja
xchg
imull
jmp
sub
ja
loop
cmc
sbb
fisubrl
inc
mov
call
jp
ljmp
into
arpl
jb
xorb
aam
sub
das
jo
adc
rcrl
aas
cmpsb
lahf
dec
int
mov
sbb
mov
adc
pop
popf
lret
xchg
scas
int3
lds
notb
sub
xchg
les
fistpl
std
mov
inc
shl
sbb
xor
mov
sahf
in
mov
dec
lahf
cmp
mov
mov
xchg
ret
adcl
nop
push
hlt
mov
daa
leave
arpl
and
mov
test
pop
in
fmuls
das
movsl
notl
sti
xlat
jmp
loopne
nop
fcmovnb
or
jo
dec
cs
outsb
xchg
adc
pop
test
adc
cs
add
add
insb
notl
inc
mov
lret
jg
fmul
sbb
add
push
mov
jge
inc
out
jmp
pop
adc
mov
push
mov
mov
push
movb
adc
dec
fisubrs
faddl
push
iret
xchg
sbb
arpl
lahf
xchg
movl
clc
mov
cltd
or
and
xlat
repz
es
mov
stos
je
inc
es
test
pop
cmpsl
movsb
rcll
test
mov
xor
mov
and
and
cli
jmp
xchg
or
das
lcall
mov
test
imul
xchg
inc
mov
cwtl
mov
push
int3
inc
js
jl
xchg
xorps
adc
inc
pushf
stos
pop
xor
shlb
add
mov
inc
lret
push
jne
cmp
cmp
mov
and
mov
loop
stos
jg
addr16
push
pop
and
mov
orb
test
sarb
adc
mov
adc
adc
xchg
mov
pushf
add
jge
cmp
adc
cmc
jb
test
insl
fcmovnbe
jle
sub
adc
jne
cmp
leave
callw
xchg
in
push
add
push
xor
sbb
les
mov
lret
xchg
jle
mov
out
insb
add
rorl
outsb
jmp
cltd
add
in
mov
in
sahf
stos
sbb
mov
jne
push
mov
orl
jnp
or
fnstenv
xor
or
outsb
ret
pop
fsubrl
nop
mov
enter
mov
xor
out
neg
clc
jmp
xchg
fstps
mov
xchg
dec
jp
sbb
sbb
jmp
and
and
lock
dec
ss
int3
ss
mov
pop
jp
repnz
out
inc
or
sub
mov
and
setp
or
lret
cmp
xchg
dec
sbb
bound
lret
fstp
fisubrl
mov
and
icebp
sarl
add
xor
repz
rol
mov
xor
jg
ljmp
dec
repz
push
jb
mov
shlb
clc
repz
fistl
pushf
cmp
jnp
je
mov
scas
mov
inc
adc
or
int3
fcomi
stc
jbe
fld
out
xchg
xchg
cmc
jecxz
fmull
arpl
adc
jg
enter
adc
enter
test
mov
sbb
test
cmp
push
ljmp
add
es
mov
sub
ss
je
mov
xchg
mov
into
aad
or
xchg
mov
lea
jne
mov
lods
mov
into
jno
ss
jbe
dec
mov
enter
cs
mov
lea
out
ljmp
int3
cmp
scas
lock
mov
xchg
out
lock
fwait
mov
add
add
and
pop
ffree
loopne
inc
sub
or
sub
out
jns
mov
push
or
test
testl
call
mov
adc
rcrb
push
ds
lea
cld
xchg
leave
cld
push
xchg
push
inc
mov
jns
ss
adc
cmp
pop
test
fs
adc
in
xchg
xorb
push
outsb
add
add
int3
push
mov
in
hlt
adc
xor
lret
or
cmc
mov
add
in
and
dec
stos
and
xchg
js
mov
cmp
and
into
jns
adc
lock
pop
fisubrl
ljmp
mov
rclb
jmp
mov
pop
fs
insl
pop
std
loop
in
insb
cld
push
push
mov
in
sub
js
push
or
mov
aad
andl
addr16
je
xchg
js
lcall
je
jo
test
imul
mov
push
mov
xor
jg
sbbl
cmpxchg
inc
repnz
das
mov
xlat
out
push
mov
lds
mov
pop
gs
fadd
es
fxam
stos
inc
testb
neg
mov
mov
push
pushf
js
ja
out
mov
lahf
fmul
dec
test
enter
pop
nop
push
cmp
rcll
popf
adc
cmc
ljmp
push
push
icebp
rolb
push
cltd
shll
dec
mov
jg
mov
push
call
out
nop
mov
rolb
add
mov
fs
imul
lock
jl
sahf
inc
adc
add
testl
test
lea
mov
mov
inc
push
aas
add
ds
fsubrp
push
lahf
aas
add
mov
insl
and
adc
mov
movsb
inc
jno
mov
std
iret
sub
mov
sbb
push
fdecstp
jmp
stc
inc
jae
scas
lret
out
jmp
jmp
lea
and
or
xor
ljmp
pop
test
test
dec
aas
cmp
subl
test
cld
mov
mov
icebp
fdivrp
cmpsl
mov
nop
adc
pop
fsubrl
push
and
int
cmp
loope
popf
sub
dec
call
dec
add
push
xchg
push
jbe
push
add
sbb
mov
ret
rorl
loope
test
test
inc
jg
test
inc
loopne
int
pop
mov
xor
idivw
push
cltd
mov
test
mov
xor
mov
test
jbe
test
scas
imull
test
and
pushf
pop
xor
xchg
ljmp
jecxz
andl
ds
pop
mov
cltd
and
jl
popl
loopne
xor
in
push
in
std
jp
jmp
loop
icebp
mov
daa
scas
pop
cld
das
adc
xchg
cmp
subps
repz
insl
fwait
into
mov
imul
repnz
int3
daa
inc
mov
xchg
jl
lcall
adcb
mov
cwtl
adc
inc
mov
idivl
int
cld
outsb
incb
sahf
xchg
std
inc
inc
mov
scas
adc
fsubrl
sahf
dec
push
lock
cld
mov
sbb
rcll
and
xor
cmpsl
fwait
enter
inc
mov
nop
lods
lods
in
mov
mov
sub
lea
scas
loop
in
inc
xchg
mov
mov
fcoms
push
test
int3
and
jp
stc
inc
out
cltd
inc
adc
ljmp
and
imul
adc
cltd
xchg
addl
shrl
mov
and
mov
sahf
data16
or
int
cmp
mov
pop
adc
faddp
dec
stc
movsl
insb
xorl
inc
mov
mov
in
cmpsb
mov
mov
sbb
push
aas
cld
xchg
jp
in
jno
insl
inc
rcll
out
stc
js
enter
std
popf
fsubrl
jne
sahf
lock
push
iret
loop
in
dec
es
mov
inc
jb
fidivrs
xchg
fwait
repz
leave
imul
cli
inc
inc
into
insb
ret
cmp
in
mov
shr
ljmp
in
jge
mov
and
dec
and
andb
or
xor
adc
stc
in
dec
jns
dec
pop
movsb
push
inc
dec
sub
fidivrs
cltd
adc
and
and
addb
mov
add
mov
imul
or
fwait
jbe
mov
and
mov
out
popf
cmp
lods
cmp
mov
lods
fwait
and
mov
in
cli
push
mov
pop
pop
subl
imull
sub
xchg
dec
adc
lret
xchg
js
js
jnp
pop
in
adc
cs
out
adc
js
jnp
sub
inc
or
lcall
add
lret
lret
push
pop
lret
lret
jle
aaa
sbb
icebp
or
mov
pop
sub
sti
cmp
mov
out
pop
sub
lcall
push
mov
dec
das
cwtl
paddsb
dec
out
movsb
adc
pop
fmull
adc
xchg
dec
in
stc
fs
or
mov
aaa
repnz
int
loopne
pop
lcall
mov
cmpsb
subb
test
cmp
and
orl
movsb
inc
std
push
sub
jge
dec
xchg
jns
das
pop
push
adc
pop
imul
push
movsb
add
mov
jnp
xor
xchg
mov
add
mov
sbb
jmp
sbb
loopne
pop
std
mov
or
popa
lret
lcall
sub
and
aas
mov
or
xor
xor
push
aad
call
jb
adc
mov
rolb
dec
sub
in
pop
je
daa
mov
xor
int3
leave
xlat
dec
inc
incl
cmp
aam
pop
xchg
xlat
stc
push
test
imul
mov
mov
fisubrl
call
ret
insb
mov
sub
fsubrl
mov
int3
popa
out
dec
jmp
jle
int3
xchg
sahf
ficomps
mov
jmp
add
jg
mov
sbb
push
pop
pop
ficoml
pop
dec
adc
sbb
push
out
sahf
dec
test
std
int
push
mov
fldenv
popa
mov
mov
and
xchg
mov
xor
mov
repz
push
andnps
inc
arpl
or
mov
dec
scas
xor
mov
ss
daa
mov
jnp
out
sti
mov
push
mov
lods
sbb
std
mov
clc
mov
sbb
std
cmp
clc
aas
mov
cmc
mov
mov
ja
stc
mov
push
ja
cli
and
lret
pushl
mov
push
je
sti
sub
cmp
mov
adc
xor
hlt
stos
mov
adc
cmp
scas
and
mov
mov
rcrl
imul
addr16
imul
inc
mov
sbb
mulb
mov
adc
notl
push
adc
repnz
jns
test
repnz
neg
mov
adc
cmc
std
jle
lock
mov
adc
cmc
cmpl
adc
cmc
xchg
jle
lock
push
adc
cmc
jb
lock
mov
adc
cmc
and
xor
mov
xlat
jo
adc
mov
int3
mov
jbe
not
add
mov
mov
aam
insb
mov
add
mov
loope
dec
xlat
cwtl
outsl
filds
xchg
adc
int
cmpsl
jge
repz
mov
pop
aas
notb
fstps
pop
leave
clc
jb
cld
pop
mov
push
mov
add
push
stc
xlat
jae
std
dec
mov
js
int
xchg
mov
sub
test
in
jbe
mov
std
mov
cmc
jo
ds
popa
mov
stos
add
xlat
mov
dec
or
mov
ljmp
mov
lret
popa
jae
xlat
mov
hlt
or
xchg
cmp
inc
or
sbb
stos
loope
je
repz
sbbl
nop
or
xlat
jo
fistpll
addr16
dec
mov
cmpsl
and
jne
cmp
rorl
fidivl
jo
fidivs
or
mov
daa
cmpsw
or
mov
push
imul
out
xchg
incb
out
sahf
add
mov
sahf
jns
inc
je
dec
jbe
test
and
inc
wrmsr
xor
mov
test
mov
lcall
rorb
dec
test
enter
sub
aas
pushf
xor
cmpsb
adc
mov
jae
push
add
std
hlt
inc
xchg
mov
pop
mov
loop
out
filds
push
add
dec
bound
and
ficoms
enter
dec
aam
mov
enter
sbb
ss
mov
ret
mov
xchg
push
fiaddl
cmp
mov
cmpsl
push
lock
dec
and
push
in
out
xor
xorl
pushaw
xchg
mov
xor
sti
push
out
out
pop
push
insb
ljmp
popf
shll
and
scas
ss
cmpsb
fwait
xchg
addr16
xor
mov
rcr
push
inc
pop
lea
push
xor
inc
xor
sub
aaa
test
push
scas
xor
jo
cmp
daa
xchg
xchg
xor
xlat
mulb
out
sbb
loope
push
cmpsb
sbb
ss
decb
lock
icebp
add
lods
pop
pop
mov
ret
arpl
push
rcr
fstpl
fs
xlat
loop
cmpsb
xor
out
cmpb
or
mov
inc
div
push
repz
cmp
mov
pop
loope
mov
idivl
fdivs
sub
shrb
jp
cwtl
pushf
xchg
lock
outsl
ds
iret
fucomi
inc
mov
cmp
jbe
inc
cmp
int
and
cmp
inc
je
aaa
loope
call
loope
inc
cld
dec
inc
xorb
push
out
inc
jmp
xchg
rcll
xor
icebp
pop
mov
movsl
dec
repz
popf
shrl
dec
lahf
sbb
dec
cmp
outsl
pop
adc
movsl
or
icebp
js
or
xor
enter
scas
jno
sahf
or
mov
bound
inc
roll
xor
pop
cmpsl
cmpsl
dec
dec
adc
cmp
imul
dec
adc
std
idivb
xchg
sbb
push
out
pop
jno
nop
insb
pop
cmp
inc
gs
lods
imul
pop
pop
test
jbe
dec
cli
xchg
je
xchg
sti
lock
dec
pop
push
pavgw
sbb
mov
push
into
test
test
xchg
incl
mov
test
aaa
inc
xor
pop
cli
sti
push
into
jno
ret
int
dec
sahf
lahf
xor
fnsave
cmp
pusha
jmp
call
mov
outsl
jg
fdivl
inc
ljmp
xlat
pop
or
scas
leave
ficoml
and
in
mov
test
xor
mov
add
and
jbe
adc
mov
dec
pushl
lret
pop
movsb
and
cmp
mov
pop
mov
add
push
ret
xorl
test
push
test
and
std
fistps
nop
adc
notl
roll
stc
jp
in
xchg
and
sti
shll
ja
cmp
push
sub
popa
mov
clc
sub
or
push
loopne
cwtl
std
dec
xchg
xor
mov
daa
movsl
ds
lret
imul
push
andb
aas
test
xchg
jae
mov
push
gs
sbb
jg
jge
push
imul
stos
ficoml
mov
loop
add
add
lahf
jp
inc
shl
cmp
sub
push
jmp
je
sub
pop
notb
lret
clc
pop
jno
mov
fldl
sbb
dec
addr16
cmc
mov
inc
xor
fdivrl
ljmp
pop
mov
movsl
adcl
push
fdivs
push
es
dec
fwait
jo
adc
or
dec
shr
aad
mov
leave
movsb
xor
inc
jmp
adc
subb
xorl
adc
out
add
ja
aaa
sbb
popa
lods
arpl
pushf
mov
xchg
ret
cmpsb
mov
and
aas
xchg
int
sti
mov
xchg
andl
dec
mov
lea
dec
daa
insb
mov
pop
mov
lret
push
ds
rcrl
mov
mov
xlat
repz
out
xchg
daa
cld
mov
andb
jmp
test
test
inc
fcmovne
popf
call
das
dec
test
pop
pop
or
xlat
add
mov
push
gs
push
sahf
pop
jne
jmp
adc
icebp
popl
mov
ljmp
cmpsl
push
mov
inc
rcl
lahf
cmc
cmp
loope
imul
subb
mov
enter
add
jo
mov
add
rclb
cmp
jl
push
add
inc
lahf
int
test
pop
dec
lods
inc
fcoml
je
jne
cmp
test
lcall
xchg
aam
sbb
add
xor
jno
sub
loopne
xchg
dec
imul
lahf
and
jge
outsl
jle
push
mov
fstp
jl
lods
or
pop
jge
lds
scas
cmp
fmull
mov
cmp
mov
jge
out
data16
stos
in
int3
fstps
dec
addb
nop
mov
jmp
pop
sub
cmp
sub
cltd
add
nop
imul
xchg
dec
mov
outsb
jne
cmp
dec
mov
psllw
hlt
inc
push
adc
ds
or
xor
mov
iret
sbb
mov
pusha
out
push
loope
sarb
call
les
sub
push
rcrl
out
sbb
loopne
into
arpl
adc
leave
jmp
mov
sarb
and
std
push
cltd
mov
sub
mov
dec
xor
pop
call
pop
inc
jo
mov
scas
xor
loope
out
sbb
xchg
dec
xchg
test
jbe
enter
push
adc
mov
in
adc
loopne
pop
into
add
out
es
icebp
pusha
stos
sub
xchg
sub
mov
sahf
aas
mov
fstpl
sub
in
sti
stc
jecxz,pn
iret
jb
mov
push
mov
fnstenv
notb
pop
cltd
movsl
or
inc
inc
jp
iret
mov
jp
lret
mov
outsl
loope
data16
shlb
inc
pop
push
adc
jmp
inc
mov
jl
pop
and
out
pop
loope
inc
cmp
push
insl
hlt
push
scas
lock
xor
xor
adc
jne
sbb
movsb
add
jns
push
in
cmp
loope
or
jmp
or
in
mov
mov
je
add
rclb
out
pop
icebp
lret
call
and
ljmp
sub
mov
mov
or
call
lcall
out
jg
push
or
flds
jo
xlat
or
lods
sbb
mov
lret
push
mov
push
cwtl
jo
xlat
jo
inc
jmp
addr16
and
xchg
js
icebp
in
mov
xor
out
jae
dec
dec
jmp
or
mov
inc
loope
add
pop
pop
sti
pop
sbb
xchg
mov
push
push
or
outsl
test
ss
movsl
mov
lds
sbb
jg
ja
adc
add
ret
enter
cmp
xlat
fimuls
call
or
mov
out
inc
adc
jbe
mov
loop
xchg
cmp
lds
add
test
push
jae
push
and
sub
out
inc
mov
ret
adc
pop
fs
xchg
stc
pop
lcall
cmpsb
enter
lret
or
pushf
out
cld
inc
or
xchg
adc
cmp
jge
iret
test
cmp
stos
inc
push
in
dec
std
jns
and
f2xm1
adc
out
jbe
in
inc
mov
cmpsl
nop
lds
mov
popa
addr16
es
push
sbbb
loop
sbb
in
dec
ja
mov
loope
iret
jecxz
enter
mov
js
mov
mov
hlt
sti
test
and
enter
sbb
adc
sbb
inc
pop
push
pop
xorl
inc
add
fcmovb
or
mov
push
xor
mov
imul
cmp
mov
mov
fdivs
stc
iret
fbld
movsb
popa
jbe
pop
ret
fldcw
mov
cld
pop
test
jb
shl
mov
sub
cmpsb
sbb
xchg
insb
ret
test
dec
divps
sub
rclb
or
xor
fwait
xlat
in
je
sahf
pop
cmc
or
fsubs
cmpb
popa
rorl
cwtl
mov
pop
add
dec
repz
sub
mov
mov
ret
insb
jnp
and
mov
pop
test
lds
out
inc
je
mov
addb
cmpsl
je,pt
mov
sti
push
in
jecxz
jbe
ljmp
lcall
jb
inc
movsb
repnz
sub
jp
mov
jmp
jle
pusha
jno
xor
sahf
sub
lret
add
test
or
mov
mov
add
pop
pusha
xchg
mov
scas
aas
mov
lea
movsl
inc
in
sbb
loopne
mov
xchg
ret
jne
out
push
push
std
inc
jns
and
stos
xlat
jle
bnd
out
rcl
pop
cmpsb
mov
cmp
xchg
mov
call
xor
stc
mov
cmp
int
loopne
int3
sbb
mov
sarl
add
clc
jl
mov
mov
std
dec
nop
insl
push
clc
les
in
imul
mov
mov
cltd
xchg
filds
jns
roll
jae
aaa
push
jne
cwtl
pop
mov
inc
xor
and
mov
leave
cs
mov
jb
adc
pop
icebp
fcompl
jno
sbb
cli
xlat
ret
cmp
xor
and
test
sti
ja
cmpb
pop
push
or
cltd
jns
mov
jns
adc
leave
cltd
push
roll
out
mov
xchg
imul
mov
lods
lock
mov
pusha
int
pop
sbb
cld
mov
xchg
mov
pushf
cmp
pop
xor
pusha
enter
aaa
mov
push
add
notl
iret
test
jno
stc
or
roll
xchg
aam
inc
clc
in
cmp
cmp
dec
mov
mov
in
or
ficoms
pop
push
mov
jo
rorl
cwtl
sti
rcrl
or
pop
loop
dec
xor
fmulp
inc
xchg
inc
pushf
mov
adc
push
fistpll
mov
mov
pop
push
test
inc
inc
psadbw
test
mov
movsb
sub
mov
push
sbb
roll
mov
pop
sbb
scas
iret
int3
lods
jb
dec
fcmovb
mov
add
push
mov
pop
dec
clc
mov
sbb
cs
lods
aam
and
stc
out
dec
adcb
sub
sbb
mov
mov
jmp
mov
popf
jbe
push
adc
lret
pop
test
and
xchg
fdivs
out
enter
fdivs
jmp
outsb
inc
pop
xchg
push
jo
mov
push
xchg
pop
pusha
std
or
adc
ret
and
mov
fisubrs
jl
mov
jno
mov
scas
sbb
decl
aaa
jo
pop
ja
add
jecxz
xor
jns
call
mov
adc
xchg
xchg
add
lods
jle
testb
adc
cmp
mov
add
push
mov
xor
add
cmp
sbb
mov
shrl
call
pusha
popa
in
enter
adc
pop
cs
push
fldcw
stos
sarb
push
dec
pop
add
mov
std
jmp
faddp
lret
jge
xlat
call
push
cmc
stos
push
sarl
aas
movsl
sub
shlb
mov
mov
clc
dec
xchg
mov
adc
jb
jle
mov
mov
adc
inc
leave
push
mov
leave
insb
push
add
inc
fcmove
pop
mov
cmp
das
shll
dec
lock
lods
and
and
push
push
adc
sub
fsts
mov
idivl
aas
aas
dec
test
int3
and
mov
cmp
pop
scas
int3
and
xchg
pop
cltd
insb
sbb
cmp
mov
clc
insb
inc
insl
pop
sahf
data16
in
jecxz
or
pop
movsl
out
frstor
fwait
xor
inc
stc
or
dec
mov
or
test
push
aaa
in
or
add
push
sub
aam
xor
gs
jp
in
outsl
dec
cmp
dec
loop
mov
fwait
std
imul
mov
imul
sbb
sub
mov
sbb
enter
jmp
int3
imul
sbbl
cmp
mov
icebp
jns
stos
cltd
lea
popa
lcall
push
mov
pop
xchg
sub
movb
add
rcll
fnstcw
lahf
or
fists
adc
in
dec
push
enter
jns
test
mov
dec
xchg
insl
mov
out
in
and
ds
incl
xchg
dec
loope
adc
insl
mov
idiv
mov
std
lret
out
lcall
cli
xchg
insb
pop
jg
nop
ds
xchg
mov
imul
mov
test
imul
lcall
lret
aad
cli
scas
shlb
cmp
dec
xor
pop
sub
shlb
mov
cmc
add
add
fcompl
jmp
xor
pop
mov
mov
idivb
aad
pusha
roll
scas
sub
xor
inc
jmp
cwtl
inc
or
in
or
test
sti
fcmovb
pop
mov
mov
clc
or
movsl
inc
pusha
decb
and
fwait
xor
mov
push
out
and
mov
pop
pop
mov
je
aaa
icebp
stos
and
imul
je
subb
inc
push
add
inc
mov
push
jno
cmc
frstor
sbb
fisttpl
pop
and
pop
sar
mov
adc
xor
sub
jg
lret
cmp
out
mov
and
shrl
test
mov
adc
std
inc
call
out
js
popf
outsl
movsl
ss
or
push
adc
cmpsl
add
mov
lret
addr16
xor
call
call
inc
pop
mov
out
fadds
sub
enter
xlat
push
sub
mov
into
and
lret
int
roll
lods
fwait
sub
mov
add
jle
aaa
push
jno
stos
inc
lds
jg
mov
in
movsl
test
fldcw
dec
not
jle
cmp
pop
test
in
daa
ds
aas
xchg
out
out
loop
dec
pop
int
out
mov
cmpb
insb
fldl
jle
push
dec
inc
aaa
lods
fstl
repnz
add
adc
push
pop
push
mov
testl
sarb
mov
xor
jl
xor
insl
lret
fildl
push
into
sbb
arpl
mov
imul
add
das
pop
ss
sahf
jl
ret
in
enter
push
push
imul
cmp
popa
fdivs
inc
jle
or
addr16
lods
add
jmp
les
pop
pop
xchg
jno
mov
ds
dec
and
sub
cltd
scas
movsb
cmp
movsl
repz
xlat
or
mov
cltd
lahf
sbb
adc
je
stc
scas
mov
out
push
mov
stos
lret
pop
xlat
cwtl
or
mov
test
stos
lret
and
mov
inc
sahf
sbb
stos
ret
ds
lock
mov
mov
mov
rcrl
mov
es
inc
mov
ja
movsl
mov
push
cltd
scas
sbbb
cld
cmp
add
loopne
cmovg
ljmp
mov
notb
out
pop
mov
movsb
pop
add
cmp
add
adc
jle
daa
enter
pop
ljmp
sub
cld
imul
sub
push
notb
adc
das
fisttps
sbb
popf
jg
data16
adc
and
jno
orb
orl
dec
shrl
sub
inc
enter
into
out
xchg
push
push
add
lahf
mov
add
mov
mov
sbb
out
sub
sub
xor
fs
sub
cmp
inc
test
or
xchg
inc
push
sbb
outsb
mov
and
pop
push
sbb
fisubs
aaa
mov
loope
lea
fwait
add
lcall
inc
stos
in
addr16
mov
sub
ret
push
xor
fstpt
or
pop
stc
pop
out
and
shl
subl
cmp
loop
mov
aas
mov
mov
sahf
xor
push
loope
inc
out
iret
dec
in
jo
xchg
push
lcall
loope
push
xor
jecxz
shl
jno
fstp
lret
std
shlb
mov
mov
add
add
in
into
fsubrl
mov
mov
fnclex
add
aad
ret
clc
das
sub
into
push
mov
pop
rolb
sub
aaa
ss
fisttpll
xorl
mov
int
jmp
dec
mov
add
push
imul
addr16
push
insl
int
mov
shlb
clc
mov
ljmp
repz
sub
push
xorb
xchg
into
sub
pop
push
mov
sub
push
aam
enter
out
push
mov
inc
aam
dec
mov
mov
mov
mov
lea
mov
add
mov
movw
movw
mov
mov
mov
mov
lea
mov
push
lea
push
push
lea
push
mov
push
call
test
jne
push
push
push
call
mov
push
push
push
mov
push
call
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jmp
add
bound
in
inc
add
bound
aam
inc
add
bound
les
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
arpl
sub
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
arpl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
fs
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
fs
add
fs
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
pushl
call
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rolb
inc
add
addl
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
addl
addl
addl
addl
addl
addl
addl
addl
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
addl
addl
addl
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
test
js
inc
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
test
cld
test
add
inc
add
inc
add
inc
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
test
pop
test
push
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
jmp
jmp
jmp
