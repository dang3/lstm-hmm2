int3
int3
int3
int3
add
sbb
add
aam
inc
and
sub
add
add
call
jmp
ja
cltd
inc
add
push
sub
sub
dec
movl
add
pusha
popa
sub
ret
aaa
sarb
js
insb
fdivs
rclb
or
das
cmpsl
popf
cmp
mov
pop
or
add
loopne
cmpsb
mov
repz
in
lock
fadds
lods
scas
test
scas
sbb
cmp
mov
pushf
sub
movsb
cmp
jb
dec
push
inc
sarl
push
cmpsb
inc
jae
aad
xchg
out
inc
push
jmp
jmp
imul
lret
lahf
std
cmp
add
xchg
jl
jnp
jae
add
jecxz
fistpll
les
aad
jecxz
cmp
jns
pop
inc
js
xor
decb
xor
xor
jbe
mov
or
stos
mov
enter
lret
sbb
or
sub
loope
dec
mov
addr16
mov
ret
add
xchg
mov
jae
popf
cmpsb
rcl
pop
leave
sbb
int
insb
cmp
cmp
adc
ds
mov
in
std
in
sub
outsb
add
or
nop
faddl
cs
leave
fdivl
or
and
xor
adc
xchg
insl
pop
adc
mov
fsubp
add
stos
xchg
jno
cmp
lret
adc
scas
ds
ficoml
es
cmp
lds
into
scas
pushf
movsl
fists
stc
adc
mov
scas
push
fwait
pop
mov
xor
sbb
bound
push
xchg
jb
inc
out
xchg
mov
loop
push
xchg
hlt
shrl
scas
cmp
add
pop
cmp
in
jecxz
push
jmp
jl
pushf
test
aaa
aam
std
pop
iret
mov
inc
mov
adcl
mov
das
sbb
push
cld
jne
add
mov
pop
bnd
in
jb
lcall
sti
sub
out
gs
in
or
jge
jbe
xchg
pop
cltd
push
out
mov
pop
mov
bnd
push
dec
shrl
mov
sub
xchg
lea
xor
xor
mov
dec
jmp
daa
stc
cmp
mov
movsl
stc
jne
in
dec
adc
aad
mov
sub
and
mov
movsl
insl
movsb
les
cmp
int3
ss
dec
or
jne
push
push
and
es
cmp
lcall
mov
pop
shl
je
sub
popf
mov
xchg
in
xchg
test
and
mov
dec
fwait
inc
xor
cltd
outsl
rcrb
das
push
leave
cmp
pop
testl
int3
addr16
cmp
test
je
and
out
iret
shll
sahf
xchg
add
dec
aad
std
dec
and
cmp
jb
pop
pop
push
ja
shr
cmp
addr16
jbe
sbb
in
jnp
icebp
sbb
and
push
lcall
repz
and
dec
scas
lock
jge
and
lock
cmp
test
sub
mov
xchg
and
test
mov
add
lock
outsb
push
inc
dec
dec
add
or
mov
shl
adc
loop
popa
and
and
nop
cmp
rcrl
inc
insl
lods
cmpb
xor
pusha
cmp
popa
pop
xlat
pop
pop
cmp
xchg
mov
pop
inc
aad
mov
aaa
icebp
mov
jecxz
pop
jg
jno
aas
and
mov
mov
out
cmc
clc
arpl
int
dec
xchg
outsb
mov
mov
xor
lret
lea
imul
push
mov
in
test
mov
aad
je
enter
inc
jge
and
sbb
rclb
xchg
loope
in
ljmp
movzwl
pop
lods
sub
cmp
popf
fdivrs
jnp
gs
pop
add
jmp
je
inc
loopne
xor
sbb
sbb
pop
jmp
pop
imul
data16
pop
fistl
cli
push
in
ljmp
inc
aaa
fbld
inc
push
push
or
push
sbb
push
cmp
sbb
mov
int3
pop
stos
push
dec
push
or
sub
xor
cmp
fsub
xlat
xchg
mov
push
test
add
pop
scas
adc
and
aas
push
mov
lret
mov
push
mov
sar
fucom
jmp
bound
adc
aam
scas
lcall
mov
push
scas
jg
test
scas
push
lea
fcoml
cld
arpl
sub
loopne
pop
aas
data16
daa
mov
jecxz
test
mov
pop
sbb
cmp
mov
scas
adcb
mov
or
jl
or
jb
rdmsr
and
add
mov
cmp
out
jnp
pushf
cmpsb
outsl
jcxz
mov
push
imul
jae
test
loopne
bound
imul
and
inc
scas
or
je
out
aam
insb
mov
enter
test
mov
sbb
loope
fcom
xchg
enter
cmp
cmp
pusha
js
je
jns
sub
cmpsb
pop
mov
insl
push
pop
pop
xor
mov
nop
inc
in
push
les
cltd
jle
mov
frstor
enter
loope
mov
add
adc
aad
xor
cli
cs
cmc
mov
ja
loopne
sub
stc
jae
pop
mov
push
push
xchg
imul
adc
sarb
or
out
push
imul
cli
mov
cmpsl
mov
in
cmp
xchg
shlb
rcrl
cmc
pusha
lods
lret
mov
mov
ja
ret
adc
add
cmp
jb
mov
push
in
cmp
inc
and
add
inc
int3
dec
dec
push
shll
divl
arpl
scas
pop
jmp
inc
movsb
pop
lcall
test
cmp
out
lret
hlt
mov
or
pusha
sbb
inc
sti
aad
inc
nop
leave
xor
shlb
mov
push
jp
test
test
xchg
ret
and
cltd
or
fisttps
dec
fistps
cmp
jg
mov
or
jmp
arpl
aad
cmpsl
mov
xchg
out
cmc
mov
pop
adc
xchg
mov
imul
in
test
pushf
insb
sti
xchg
call
mov
dec
negb
push
sub
pop
les
cmpsb
jne
xor
leave
add
xor
fisttps
push
icebp
sar
stos
fbstp
xlat
imulb
nop
rol
lds
insb
icebp
jns
test
lcall
shll
jns
inc
ret
repnz
arpl
hlt
sti
stc
sub
adc
mov
and
aad
dec
pop
adc
xchg
insl
loopne
sub
lods
sub
adc
xchg
mov
lea
icebp
mov
mov
outsb
push
stos
mov
es
ja
ret
data16
mov
fbld
negb
jb
xchg
cmp
sbb
pop
rorl
in
fcmovu
jnp
arpl
out
or
popa
dec
gs
sub
pop
movsb
fcoml
lea
ljmp
imul
loop
or
mov
or
and
pop
lods
push
xor
add
les
xor
push
jecxz
sub
jecxz
push
pop
and
filds
into
mov
jno
push
fisttpl
sbb
xchg
adc
adc
mov
xor
push
push
xchg
jmp
repz
pop
add
lods
test
aas
push
jne
mov
cli
sbb
mov
shl
dec
je
mov
xchg
pop
pop
xor
push
cmp
add
aad
inc
jns
push
test
inc
loopne
and
push
push
rcrb
mov
insb
out
push
sbb
mov
stos
cmpsl
add
testb
fnstsw
add
insb
cmp
xchg
cld
pusha
dec
sub
mov
out
aad
loopne
lret
filds
adc
enter
xchg
adc
mov
or
out
xlat
cwtl
stos
mov
add
sub
and
adc
nop
cmc
xchg
cmp
mov
or
arpl
repz
inc
lods
xchg
aam
sbb
mov
xchg
lods
sub
xchg
dec
out
fwait
xor
pop
push
dec
mov
push
sub
inc
jo
jno
lods
xchg
mov
rcrl
pop
aam
pop
repz
mov
dec
les
lea
inc
inc
inc
cltd
sbb
and
jne
and
clc
icebp
mov
imul
loope
ljmp
mov
fwait
push
ficompl
jge
add
test
aad
pop
jmp
sub
fsubrs
lret
or
outsl
sub
adc
in
adc
sbbl
pop
outsl
iret
ljmp
mov
lea
test
add
fdivs
ljmp
fsub
stos
mov
add
and
push
ljmp
lock
ds
jns
push
mov
lret
sub
ficoms
gs
jecxz
test
sti
dec
jo
cmp
xor
ja
add
lea
pop
outsl
dec
repz
lret
movsl
nop
cmp
data16
int
push
add
and
sub
dec
inc
pusha
push
addr16
dec
popa
out
and
jo
insl
cmp
push
jns
sub
scas
dec
imul
les
clc
addb
mov
jne
ds
shll
jmp
pushf
sbb
sbb
jp
inc
aaa
add
fs
mov
pusha
stc
orl
not
loop
pop
movb
inc
or
cmp
in
dec
mov
sub
push
add
sub
insl
mov
adc
movsl
cmpsb
jg
inc
and
icebp
xor
in
push
aas
mov
das
adc
es
push
jne
push
ret
sbb
mov
dec
lcall
push
xchg
sub
call
lret
inc
inc
sbb
clc
mov
xor
mov
test
scas
sahf
lea
or
push
sbb
push
xchg
mov
adc
or
shlb
fdivr
ficoml
cmp
jb
adc
pop
sub
pop
shll
es
cltd
push
retw
mov
mov
fldt
idiv
pusha
scas
lret
popf
testb
push
xor
xor
sub
shrb
sbb
sbb
test
sub
rorb
and
xchg
sti
cwtl
sub
sbb
std
sahf
or
and
mov
push
push
fs
add
fsub
stos
pop
outsb
je
loope
push
xchg
outsl
daa
clc
mov
xchg
mov
push
lea
lcall
js
es
sub
push
and
call
ljmp
xchg
js
or
leave
movb
lods
dec
pop
out
xor
push
jge
xlat
push
movsb
scas
test
int3
aad
test
push
xchg
cmp
add
lock
aaa
out
das
pop
jbe
inc
movzbl
xor
fldt
je
jb
mov
pop
mov
cli
std
stos
mov
testl
loopne
pushf
cmc
adc
in
mov
push
enter
jecxz
mov
xchg
fisttpl
pop
push
test
je
lds
jecxz
lea
xchg
addr16
push
lcall
adc
jmp
outsb
sub
stc
sbb
loope
fmul
insb
adc
das
sub
andb
add
push
and
movsl
cmpsb
aad
mov
jge
test
out
jbe
mov
out
xor
pop
inc
xchg
jp
mov
mov
lret
addb
cli
into
mov
add
mov
mov
mov
jg
mov
mov
mov
add
sbb
pop
or
adc
mov
adc
daa
int3
sahf
add
jecxz
xchg
dec
inc
int3
inc
ds
xchg
ljmp
jo
movl
popa
mov
lock
mov
test
jno
mov
add
ljmp
loop
cmc
adc
xchg
or
jp,pn
sbbl
daa
int3
cmp
pop
je
fidivl
xchg
cld
pushf
inc
lea
cs
cli
mov
or
je
or
lock
add
je
pop
lret
jp
test
mov
and
in
jp
jns
das
cli
fstp
andb
cmc
or
sti
adc
xchg
jae
loope
inc
mov
sbb
cwtl
inc
sub
fst
cmp
daa
rcrl
or
out
ljmp
ss
push
fs
pop
push
mov
jo
inc
push
inc
add
push
push
es
es
jne
sbb
xchg
xchg
out
adc
cmp
dec
ds
lcall
and
mov
push
mov
adc
ficomps
mov
push
je
mov
xchg
stc
popf
cmp
cmp
fwait
dec
mov
sbb
fdivrl
lods
cmp
inc
test
rolb
js
repnz
rorl
mov
imul
inc
sub
dec
add
xchg
cmp
cmc
je
push
in
or
jnp
leave
xor
movsl
or
lahf
and
imul
aaa
sarl
dec
mov
dec
adc
mov
mov
cmp
lods
pop
cld
mov
div
fs
pop
fimuls
xor
loopne
and
jge
or
clc
adc
loopne
jnp
xorb
push
mov
les
lods
mov
sahf
and
leave
push
mov
pop
pop
jg
aas
fisubl
pushf
jbe
inc
cli
mov
or
mov
and
xchg
push
mov
popa
outsl
mov
xor
dec
pusha
add
dec
pop
sub
call
cmp
mov
xchg
mov
sahf
adc
dec
movsb
xchg
jmp
js
mov
inc
mov
adcl
nop
negb
pop
and
push
push
stc
in
lret
pop
xchg
adc
in
push
or
add
pushf
xchg
popf
mov
jg
iret
jp
xor
mov
jo
stos
outsl
cmp
mov
out
test
xlat
jecxz
lds
insl
aaa
sbb
in
addr16
xchg
mov
add
stc
outsl
push
inc
jl
push
cmc
dec
in
and
iret
push
ljmp
cmc
xchg
sub
and
test
add
ficompl
lds
push
call
push
dec
adc
pop
daa
or
sti
adc
sti
mov
adc
lcall
xchg
shrl
xorb
add
mov
lahf
add
pop
cli
xchg
xor
xchg
and
jmp
and
leave
inc
jae,pn
idiv
enter
insb
ja
pop
cmp
dec
pusha
mov
jb
jns
sbb
dec
mov
loop
mov
push
out
dec
and
add
adc
mov
mov
imul
or
jb
dec
fbld
inc
sti
aaa
mov
inc
pusha
xor
shr
mov
or
mov
cs
insl
jge
into
push
leave
xchg
add
int
mov
out
call
andl
out
frstor
mov
inc
lcall
or
out
pop
inc
sarb
or
mov
and
mov
mov
add
loop
and
jno
out
inc
mov
sbbb
adc
je
and
or
inc
pusha
es
cwtl
test
or
push
and
sub
adc
mov
or
sub
lret
jl
mov
dec
pop
fiadds
push
sbb
ja
inc
into
xor
jmp
subl
bndstx
leave
sub
dec
hlt
pop
xchg
mov
jno
dec
test
cmp
mov
lret
push
imul
adc
mov
subb
fbld
into
pop
fmuls
or
stc
ret
or
loop
je
push
adc
das
add
cmc
lock
pop
js
mov
mov
mov
fisttps
jecxz
mov
push
sub
leave
pop
ljmp
xor
daa
cmp
into
scas
adc
test
and
dec
out
cld
push
gs
push
imul
sbb
sub
dec
or
adc
cld
push
cmp
push
call
push
pusha
sbb
aad
inc
std
aas
leave
dec
add
iret
cmc
in
test
cwtl
xchg
cltd
xor
mov
push
idivl
cmpsl
mov
ret
scas
ds
rcrl
pop
nop
cwtl
loopne
dec
or
sub
cmp
push
inc
cmp
jp
scas
adc
inc
into
mov
mov
inc
jns
inc
fisubs
add
pop
inc
push
cmp
add
movb
sub
rcrl
jbe
stos
testb
notl
movsb
mov
add
test
jnp
jo
mov
bound
incb
or
push
mov
xlat
pop
inc
sub
iret
jl
loop
inc
cltd
repz
cmp
adcl
scas
mov
in
ss
xchg
js
add
fucomip
xchg
int3
data16
lahf
xchg
mov
mov
sbb
daa
data16
shll
pushf
and
push
dec
jl
or
ffree
cmovl
rolb
in
out
fs
frstor
hlt
push
test
les
and
add
inc
pandn
shlb
cmp
icebp
movsl
inc
movsb
inc
fisttpl
xor
data16
out
or
test
loope
fcompp
or
sti
sub
sub
or
clc
pop
mov
push
loopne
lea
sahf
push
into
fdivrl
push
test
fbld
sbb
ja
subl
pop
mov
mov
xor
mov
jne
pop
cmp
fmuls
or
fmuls
cltd
scas
or
loop
mov
mov
mov
mov
xchg
js
call
lea
pop
or
xchg
aad
sbb
adc
add
fcoms
sub
mov
stc
lret
sbb
loopne
mov
push
stos
xchg
call
xor
mov
cmp
int
movsb
loop
jbe
repnz
in
mov
jg
mov
lea
mov
imul
mov
lea
xchg
insl
mov
loopne
mulb
mov
adc
out
adc
pop
adc
mov
iret
imul
push
pop
inc
sbbb
inc
dec
ds
push
add
arpl
mov
push
and
xor
adc
mov
iret
or
imul
dec
icebp
cld
pushf
inc
push
lret
sbb
mov
sub
jne
xor
insb
cmp
xor
inc
cmp
movsl
and
pop
mov
xor
mov
mov
push
hlt
je
divb
pop
scas
in
in
lea
into
adc
adc
pushf
fisubs
sbb
loopne
sub
jns
mov
std
paddq
ret
in
addr16
clc
inc
and
cld
mov
mov
add
ds
or
or
pushf
add
sar
in
or
xchg
popf
ret
mov
clc
ret
cli
lock
jnp
mov
jecxz
and
xchg
jno
push
add
push
push
lods
cmp
add
jns
test
jns
mov
inc
les
push
in
xor
mov
shrb
outsl
add
aaa
xchg
mov
xor
lea
rcl
hlt
in
xlat
fcmovu
xchg
lea
lret
sub
sub
mov
insb
pusha
xor
out
pop
out
std
fdivp
lahf
loopne
push
push
pop
fistps
mov
sbb
sub
push
loop
cmpsl
ljmp
jp
push
mov
and
ret
jb
call
or
xchg
sub
test
es
imul
mov
mov
mov
dec
sub
add
rolb
lret
jnp
or
scas
jne
mov
stos
sub
sarb
in
jne
shlb
and
add
scas
inc
push
movsl
pop
outsb
sbb
jne
test
jl
aad
cltd
ja
jns
cmpl
lods
dec
dec
imul
xor
popf
fnstenv
adc
sbbl
stc
mov
mov
scas
mov
add
rclb
leave
sbb
imul
xor
mov
ret
pop
dec
sbb
gs
cld
idivb
xchg
add
push
sti
xchg
jecxz
shlb
mov
and
mov
push
movsb
and
sbb
out
and
hlt
dec
sub
andl
stc
mov
sbb
ds
push
jo
and
and
dec
sub
shlb
or
fmuls
xor
pop
inc
out
sub
or
iret
stos
jae
dec
repz
mov
mov
lds
cmpsb
orl
add
mov
or
mov
xchg
cmp
popa
push
fwait
jnp
dec
sbb
dec
fadds
mov
pop
andl
inc
xchg
xor
mov
cmc
jnp
lods
loopne
inc
xchg
pop
mov
sahf
movsb
xchg
sbb
lcall
stos
pop
adc
xabort
adc
pop
pop
mov
sbb
xchg
xchg
pop
add
sahf
add
testb
dec
xlat
int3
cmp
dec
cmp
or
loop
inc
mov
mov
loope
or
fistps
and
push
jne
pop
lods
mov
jb
dec
mov
loopne
push
adc
xor
and
pop
addr16
pop
pop
data16
mov
push
lds
sbb
shll
inc
sub
adc
xchg
arpl
adc
mov
lods
pop
and
cmp
aam
mov
sbb
dec
popa
addr16
pop
sbb
mov
jo
jp
cmp
leave
js
mov
inc
dec
ret
iret
imul
rcll
mov
shl
repz
or
and
adc
jg
inc
mov
cmpsb
in
mov
icebp
roll
sub
sbbl
or
push
mov
into
xor
divl
push
push
icebp
add
vmread
mov
pop
push
ret
test
clc
dec
mov
cmpsl
roll
inc
add
push
pop
pusha
cmp
cmc
insb
insb
push
scas
test
std
stos
xchg
adc
mov
cmp
jmp
mov
cmpsl
and
pop
sub
inc
xchg
mov
xor
pop
inc
dec
add
inc
fcompl
sahf
xor
fisttpl
cmc
pop
popf
stc
movsl
mov
cli
lea
mov
aad
cmp
push
cmp
mov
stos
test
je
fsubrp
outsl
stos
xchg
pop
cmp
adc
popf
rol
mov
cmp
ljmp
test
cltd
inc
imul
js
in
repnz
dec
jns
mov
mov
pop
push
fs
inc
sub
addr16
ret
cltd
pop
arpl
test
out
test
jne
scas
dec
inc
scas
adc
inc
repz
and
mov
gs
lods
std
movl
pop
jno
xor
pop
jne
adcl
imul
shlb
lcall
jge
stc
movsl
mov
movsl
ja
dec
cmpsb
lock
std
push
dec
or
sub
arpl
mov
scas
cmp
fstpt
inc
out
xor
mov
add
and
rcrb
add
mov
adc
sbb
aaa
push
aaa
sub
cmpl
clc
in
or
jmp
test
clc
insl
jno
or
cwtl
sbb
hlt
inc
mov
int3
sti
ljmp
add
lock
dec
cmpsl
mov
incb
mov
cmp
int
jg
push
addr16
bound
push
mov
xchg
jo
xchg
and
xchg
fwait
mov
mov
lahf
fisubl
push
int
scas
mov
out
or
sub
adc
ja
ficoml
mov
xchg
lcall
add
fidivs
mov
cld
jge
sub
mov
cmp
arpl
ffreep
mov
subl
mov
mov
in
add
pop
xchg
sub
aam
popl
jg
jecxz
mov
sti
mov
xchg
loopne
fists
addr16
aad
push
xchg
cmp
cmpb
push
fld
sahf
ret
out
xchg
jne
push
jl
or
scas
mov
mov
pop
inc
pop
jl
mov
stc
mov
pop
fildll
mov
or
dec
pusha
xorl
mov
jo
push
fistps
das
sbb
xchg
aas
divb
sub
in
mov
add
loope
sbb
insl
es
sahf
mov
jno
sub
test
fwait
movsb
xor
dec
cmpsl
stos
daa
adc
addr16
loopne
push
pop
iret
dec
dec
dec
cmc
mov
lds
mov
test
mov
testb
push
arpl
int
adc
decl
xorl
fwait
adc
dec
jae
sub
mov
and
jns
pop
sub
jecxz
pop
add
imul
pop
ljmp
push
dec
dec
dec
mov
push
aaa
xchg
scas
adc
int3
insl
push
adc
test
sub
repz
and
call
addr16
mov
pop
sub
mov
mov
lahf
popa
push
pop
jne
push
ja
inc
repnz
in
add
sbb
out
clc
repz
jle
jle
hlt
ljmp
cli
scas
xor
jae
and
fcmovb
inc
ljmp
add
ficomps
sub
in
orl
xor
fildll
rclb
mov
sub
cmpsl
inc
mov
sub
jo
cs
xchg
mov
pop
ja
mov
fists
lods
fdivrs
pop
and
pop
lock
lret
into
dec
adc
leave
daa
pop
in
xchg
jp
test
inc
in
jge
push
xor
inc
push
mov
mov
xchg
pop
stc
mov
lcall
std
inc
adc
addr16
adc
mov
sub
xchg
in
push
dec
inc
push
shlb
or
mov
clc
xor
enter
ds
cmpsl
loope
sub
xchg
adc
xchg
test
jmp
cwtl
xchg
xchg
mov
mov
lahf
leave
jno
inc
mov
ret
scas
push
mov
test
sub
mov
adc
cmp
mov
lret
push
jp
mov
fisttpll
push
push
loopne
mov
testb
lret
inc
stc
mov
sbb
mov
scas
xchg
mov
adc
push
push
adc
cs
sub
fstpt
add
xorb
scas
or
push
imul
mov
or
dec
push
imul
push
push
out
inc
xlat
push
push
push
push
adc
lret
or
in
xor
divb
mov
lock
sbb
test
int
idivl
mov
jl
inc
push
and
cmp
jb
shlb
imul
jl
xchg
add
ds
cmp
or
mov
iret
int3
xor
dec
sahf
sti
ds
push
sbb
movsl
cmp
in
stos
cmc
fbld
push
add
test
out
ds
cs
pop
xor
std
test
cs
xchg
rol
xchg
cmp
jle
sub
js
add
xchg
bound
adcl
pop
popf
xchg
fldl
or
out
cmp
push
xchg
push
mov
cmpsl
push
push
sbb
pushf
out
stos
dec
add
adc
mov
fcmovu
lods
fcmove
pop
outsl
inc
adc
and
sbb
dec
enter
sbbb
fimuls
data16
das
lds
test
dec
push
pop
mov
pop
xchg
xor
jns
inc
into
add
and
repnz
mov
sub
leave
lahf
call
push
pusha
or
cs
push
and
mov
adc
mov
and
mov
add
xorl
cmp
mov
daa
aam
add
cwtl
pop
movsb
arpl
add
insl
cli
xchg
xor
aaa
into
and
outsl
rcrl
sbb
idivb
or
popf
js
pop
add
inc
arpl
nop
mov
push
orb
scas
cmpsb
mov
out
cld
jecxz
arpl
adc
test
mov
ret
in
lret
jg
pop
fmull
jl
pop
insb
sbb
bound
testb
xlat
lret
push
add
lcall
xchg
test
nopl
je
cmpsb
out
shr
jnp
movsl
mov
adc
cmp
push
add
shl
repnz
sbb
outsb
dec
pop
fiaddl
stc
lahf
mov
repnz
fcomps
inc
call
loopne
add
es
inc
mov
pop
movsb
rol
sti
mov
lcall
dec
pop
dec
push
mov
jne
roll
jmp
aaa
and
add
cmp
jns
mov
leave
shrl
lods
xchg
cld
sbb
sbb
lods
adc
mov
test
pop
pop
scas
mov
lahf
fsubl
xchg
xchg
lds
dec
clc
lret
push
ja
cmc
push
inc
xchg
btr
lock
push
or
aad
clc
xchg
adc
xchg
in
in
cmp
xor
insl
and
xlat
ret
push
jo
ljmp
lea
and
sub
cmc
or
int
decl
mov
leave
mov
daa
and
aas
hlt
cli
cli
or
das
or
sahf
cmp
jne
pop
mov
jmp
jne
loope
loopne
jo
mov
or
cld
dec
int3
push
out
pushf
outsl
pop
mov
mov
dec
dec
cmp
xchg
xorb
mov
jp
xor
std
iret
je
rcr
rcl
mov
xchg
push
sub
insl
push
sbb
inc
sbb
or
popf
and
sbb
mov
das
push
and
outsb
mov
leave
inc
popf
std
xchg
sub
inc
pop
cmp
sarb
lds
push
je
adc
mov
lods
jno
data16
xor
adc
and
mov
lret
test
pusha
mov
mov
test
pop
jb
and
mov
xor
aas
pop
pop
out
adc
jo
xor
inc
rorb
mov
pop
lret
pop
or
pop
mov
ret
and
aaa
pop
cmp
and
lock
orb
sbb
pop
lds
shl
mov
mov
mov
lods
sbb
nop
xchg
jg
or
mov
out
sbb
mov
mov
dec
rcl
or
std
mov
mov
in
push
cmp
mov
sub
fists
dec
es
pop
or
das
aad
outsl
aas
std
out
push
cmc
insl
ja
or
and
mov
sbb
dec
and
xor
mov
lds
add
adc
lods
lahf
mov
icebp
jl
das
push
hlt
clc
add
cli
int3
cmp
loop
xchg
gs
and
cmp
fs
jl
pop
xlat
out
aaa
mov
jbe
popa
inc
and
lock
jae
adc
cltd
fidivrs
sbb
mov
fistpll
fwait
push
pushf
test
push
inc
fs
mov
jmp
sbb
jmp
dec
adc
xlat
loop
add
jno
fs
in
or
int
add
dec
cmp
cli
mov
lock
cld
in
inc
xchg
mov
stos
xor
mov
cmpsl
fisttpll
pop
imul
lcall
jns
in
push
sbb
sbbb
push
jge
mov
jge
jb
stc
int3
fs
dec
outsb
popa
push
push
xchg
subb
or
mov
adc
jo
dec
jne
dec
sahf
in
xor
push
cmp
sbb
mov
hlt
imul
jb
sbb
sbb
out
fisubs
lock
pushf
cmp
lea
xlat
jbe
jl
pop
enter
jns
push
cwtl
test
pop
repz
call
hlt
xchg
xor
add
mov
xor
mov
insl
clc
adc
in
pop
sar
jmp
lock
into
enter
les
imul
sahf
xchg
mov
sbb
jge
mov
sbb
push
mov
dec
shrb
push
jge
jnp
mov
int3
pop
xchg
push
adc
bnd
fmuls
aad
repz
sub
mov
in
arpl
mov
inc
dec
push
scas
sbb
sti
or
scas
jno
daa
ds
sub
xor
mov
leave
stc
sbb
imul
insb
sub
cmc
push
or
popa
pop
insl
sub
adc
jmp
jb
les
out
enter
leave
icebp
nop
jmp
mov
in
lea
jbe
jge
addb
je
dec
mov
sub
sub
pop
iret
lcall
in
sarb
mov
xorps
jecxz
rolb
dec
aam
pop
out
jmp
pusha
sub
pop
es
add
loope
jb
push
xor
and
ljmp
in
int3
es
cs
pop
push
mul
gs
dec
mov
jns
jmp
mov
mov
sub
hlt
mov
pop
push
lea
or
and
bound
inc
mov
out
adc
and
mov
xor
pop
adc
fisttps
xor
into
xchg
xor
xlat
gs
inc
inc
icebp
mov
fwait
sarb
pushf
pop
stos
dec
jns
jbe
popf
adc
inc
push
cmc
les
xchg
push
mov
inc
test
and
ljmp
ret
sub
js
sti
add
push
icebp
ss
inc
sub
adc
loopne
cs
pop
aad
jb
pop
roll
jo
imul
jno
dec
inc
mov
push
orl
movsl
mov
jnp
lock
insl
mov
stos
in
aaa
jp
push
inc
imul
mov
dec
shrb
ljmp
mov
test
cmp
adc
pop
cmp
subl
fucomip
std
int
or
hlt
cmp
shrb
lock
sub
rol
or
sbb
int3
daa
sbb
xchg
leave
adc
lret
fbstp
jp
dec
lret
and
sbb
jae
sub
mov
or
aas
je
add
inc
sub
add
shlb
popa
jbe
arpl
fnsave
mul
mulb
pop
shrl
xchg
les
pop
pop
jmp
aaa
lahf
ljmp
xlat
cmpsb
cmpsl
jp
inc
dec
les
das
sub
fsubrl
mov
cmpb
int
cwtl
rolb
or
leave
push
enter
repnz
lret
imulb
lcall
push
push
ds
mov
test
sarl
push
cmp
movb
shll
dec
dec
daa
fnsave
rcrb
outsl
mov
cmpsb
cmpsb
mov
nop
loope
jmp
out
aad
test
xor
clc
sarb
or
dec
xlat
push
inc
jo
pushl
xchg
cmpsl
mov
xor
mov
bound
outsb
flds
rolb
and
out
dec
inc
mov
cmovp
pop
frstor
psadbw
jl
xchg
hlt
enter
and
sub
in
lcall
cld
test
xor
data16
fwait
in
jno
pop
mov
fistps
xor
shll
push
std
test
push
mov
push
fwait
dec
fxch
std
lret
mov
lret
cmc
mov
cmpb
adc
ss
iret
sub
push
sub
cltd
in
pop
js
hlt
fiaddl
jp
scas
mov
inc
and
adc
loopne
sub
int
mov
sbb
bound
rcrb
jmp
cmp
add
mov
and
and
adc
stc
pop
sbb
xlat
mov
data16
pop
push
sub
movsl
mov
into
xchg
sub
loope
loop
les
pop
loope
sbb
or
inc
ret
pusha
pop
rcl
in
fstl
dec
xor
into
cmp
enter
dec
inc
movsb
inc
mov
sub
sbb
divb
pop
jmp
sub
and
dec
sub
jmp
jae
into
outsb
lods
xchg
sarl
stos
mov
inc
mov
not
movsl
push
insb
push
js
es
sahf
push
lds
xchg
xor
imul
mov
or
cmp
hlt
imulb
inc
gs
or
das
mov
cwtl
dec
dec
cmp
rol
pusha
cmpsl
leave
ljmp
leave
cmpsl
insl
mov
js
aaa
mov
mov
mov
jne
pop
ja
and
fistpll
fimull
mov
xor
add
mov
push
pop
add
mov
sub
punpckldq
mov
hlt
rorl
or
ja
adc
sbb
mov
mov
into
or
pop
in
ret
movsb
pop
xor
sub
dec
fucompp
mov
bound
and
nop
je
sub
ret
lock
lret
xorl
mov
xorb
add
and
jle
push
pop
mov
mov
jno
push
cltd
int3
mov
inc
shr
dec
xchg
insl
mov
sbb
push
adc
das
cmpsl
dec
das
fisubl
dec
fsubr
cmp
mov
xor
rcr
arpl
fisttpll
cmp
dec
fcmovnb
sahf
xchg
push
sbb
inc
dec
lahf
xor
pop
outsb
popa
sub
xor
xchg
loopne
mov
jno
nop
rcrl
sti
int3
shl
les
xchg
popa
out
mov
pop
and
outsb
lcall
cmp
mov
sub
pop
into
pusha
inc
cwtl
jnp
adc
mov
add
gs
clc
test
cmp
iret
sub
nop
mov
cld
and
das
inc
notl
cld
pop
push
lret
call
fisubl
or
in
sahf
fistps
jb
outsl
addr16
or
pop
les
test
pop
lret
add
jbe
mov
mov
adc
test
xchg
shl
fadds
outsb
arpl
out
push
sbb
inc
or
in
dec
sub
repnz
sub
or
jbe
fwait
jg
in
mov
lods
js
sbbb
lcall
jmp
add
push
push
and
jb
push
xor
cmp
sbb
sub
repnz
pusha
adcb
ret
nop
jae
test
lods
bound
movsb
cli
pop
dec
dec
imul
rcrl
lods
sarb
mov
aad
in
cmp
nop
ret
insl
outsl
xchg
mov
lcall
neg
jg
popf
stos
addr16
inc
sahf
inc
negb
ffree
fisttpl
test
dec
leave
imul
out
dec
aaa
ret
push
insb
push
call
lock
enter
sbb
or
or
and
pop
jno
das
enter
fdivrl
push
mov
jecxz
jno
mov
pop
jp
jle
fucomip
dec
and
incl
je
shll
and
xchg
push
xor
push
sbb
dec
cmc
push
andl
call
adc
cld
sbb
jns
dec
test
fs
or
jns
sub
dec
mulb
int3
cwtl
or
test
mov
cwtl
stos
mov
insb
or
cmp
pop
or
jmp
js
aam
push
mov
mov
loopne
bswap
inc
cmpsb
jo
jbe
mov
int
hlt
jp
bound
popf
aad
hlt
testl
imul
es
push
push
xchg
push
pop
stos
push
cmpsb
dec
into
sbb
push
xchg
jge
mov
sbb
es
stos
and
add
sbb
xchg
or
pop
cmp
inc
pop
sub
xor
xchg
pop
mov
lcall
rorb
sbb
sub
out
cmp
mov
mov
pop
shl
test
push
jmp
mov
pop
sub
xchg
mov
cmpsb
push
pusha
loope
or
stos
mov
lcall
mov
vmovq
mov
ds
fidivrl
sbb
sbb
mov
stc
xchg
xchg
sarb
add
fistpl
jne
lahf
in
imul
push
dec
movsb
lcall
scas
out
and
mov
cs
mov
sub
fsub
adc
fnsave
sub
push
in
rorl
sbb
ljmp
xchg
adc
outsl
and
push
push
cmpsl
or
dec
push
popf
je
xlat
and
out
divl
ljmp
sbb
cmp
lods
call
mov
cs
rcrl
xor
iret
mov
xor
pop
jmp
mov
clc
push
xchg
cmp
cmpsb
rcl
push
mov
decb
jae
pop
fistps
jle
mov
fcomps
jb
call
sqrtps
popf
mov
dec
mov
cmp
imul
inc
xor
push
test
scas
add
push
les
shlb
ficompl
test
pusha
inc
fnstenv
mov
xor
lods
cltd
sahf
sbb
xchg
sbb
bound
adc
repnz
add
and
int3
imul
sub
xchg
pop
insl
add
mov
daa
ljmp
pmaxub
movsb
push
sbb
cltd
lret
test
push
jne
cmp
push
ret
and
jmp
dec
pop
xchg
aas
pop
daa
xchg
lret
arpl
imul
pop
ss
add
dec
mov
jecxz
fwait
sub
sub
test
adc
call
sub
fstl
add
mov
adc
adc
and
cmpb
stc
pop
mov
adc
std
pop
ret
inc
aam
xchg
push
and
gs
mov
sbb
mov
sbb
xor
cltd
fldl
mov
cld
mov
aaa
incb
and
jae
inc
lret
icebp
call
shrl
stos
imul
xor
mov
lahf
xchg
xchg
and
and
push
fists
mov
pop
mov
fimuls
sbb
dec
mov
insb
inc
arpl
sub
mov
cmp
sti
loop
stos
add
dec
cmc
pop
js
xor
dec
pop
addr16
in
and
or
sub
jl
push
ljmp
mov
mov
push
adc
popa
shr
movsb
iret
leave
cmp
pusha
fwait
inc
lds
sub
loop
fstl
lds
or
testb
popf
pushf
rcll
add
inc
mov
lods
leave
dec
in
addr16
clc
popa
es
lahf
rcrb
rolb
xchg
xchg
scas
sub
xor
push
push
dec
and
or
lahf
pop
out
ljmp
inc
mov
lahf
popf
mov
scas
sbb
push
jge
jl
add
jl
push
push
inc
jge
rcl
cmp
lods
clc
and
jb
and
xchg
faddl
push
xchg
inc
xchg
sti
push
adc
add
data16
call
dec
sub
mov
xor
lds
dec
pop
jbe
into
cmp
js
xchg
xchg
or
jmp
mov
cli
mov
cmp
fs
adc
mov
add
jge
jecxz
andb
mov
add
xchg
scas
and
sti
cmp
cld
rorl
out
sbb
shrl
cwtl
call
push
pop
mov
sub
add
mov
mov
cmpsl
imul
or
push
jne
add
jb
sahf
test
mov
test
mov
push
and
mov
xchg
fidivrs
and
mov
das
sbb
add
dec
fsts
aam
and
add
leave
add
jnp
ret
imul
inc
jnp
fincstp
jbe
jle
mov
inc
loope
in
bnd
and
adc
test
lcall
leave
push
mov
sbb
int3
fnsave
bound
loope
sub
ljmp
enter
pop
pop
push
push
paddq
cli
inc
cld
pop
rolb
cmovns
and
xchg
sub
lea
ss
pop
xchg
mulb
lahf
addr16
cli
ret
stc
mov
sub
cmpsb
push
je
xor
cmp
leavew
iret
enter
jb
lret
les
in
js
mov
ljmp
arpl
je
mov
enter
sbb
dec
mov
pop
and
inc
lods
inc
inc
or
sbb
in
repnz
sbb
mov
mov
add
mov
aad
stos
test
jg
aas
lds
mov
fsubl
test
and
repnz
mov
add
mov
cmp
xor
push
stos
mov
cmp
jle
int3
cs
lods
mov
pop
fcmovbe
pop
sbb
fimull
movl
cmpsb
insb
sub
rorl
mov
or
inc
arpl
xchg
dec
ret
jp
mov
mov
push
cmp
and
popa
pusha
push
adc
xchg
nop
jmp
pusha
ficoml
je
icebp
push
neg
inc
call
sahf
mov
pop
addr16
sub
xor
cmc
cltd
int
rcrl
mov
cmp
adc
inc
push
adc
xchg
mov
iret
aam
jge
aas
xchg
in
adc
mov
pop
adc
mov
nop
jo
call
lds
pop
rcrl
mov
cmpb
loop
fs
addb
xlat
ret
lahf
bound
dec
insl
xlat
fwait
mov
xchg
gs
add
stc
aas
or
stc
cmc
ljmp
and
sarb
xlat
out
add
popf
cltd
xor
leave
push
jo
nop
xchg
shll
imul
int
xchg
cmpsl
popa
daa
push
aaa
and
sahf
mov
push
movsl
mov
adc
insb
push
dec
sti
dec
push
out
fnstenv
sbb
je
dec
clc
xorl
sbb
sbb
mov
jle
fmull
std
cltd
orl
scas
iret
inc
icebp
fnstenv
mov
jne
sbb
sub
lret
cmpsb
orl
cmp
js
mov
pop
test
test
pop
lahf
js
jmp
ja
cmpsl
sub
cmp
mov
inc
mov
inc
cli
and
push
push
xchg
xor
lods
mov
mov
mov
and
outsb
loopne
or
jge
mov
repnz
outsb
push
add
bound
sub
cmc
hlt
lock
test
popa
sbb
push
idivb
jp
sbb
repnz
sbb
sbb
jle
push
mov
mov
loop
mov
mov
dec
xchg
pop
ret
adc
jne
pop
sub
pop
call
js
aad
popa
push
rorl
cmp
fldt
sbb
sub
push
fwait
mov
lret
popf
push
xchg
sbb
divb
enter
je
popa
mov
cmpsl
rorl
push
cmp
imul
cmc
fistpll
add
pop
pop
loope
mov
loopne
cmp
xchg
mov
loope
mov
push
push
push
push
mov
js
das
inc
pop
push
mov
fisttpl
pop
leave
stc
mov
mov
xchg
cmp
xchg
inc
mov
stos
dec
das
fcompp
insl
pusha
popa
jge
popa
into
loope
lock
jo
fbstp
and
fidivl
add
fdivrs
inc
push
fistpl
fstpt
out
aad
cmp
or
pop
insl
add
movsb
inc
stos
aaa
addb
cwtl
scas
mov
insl
test
mov
fsubrl
mov
xchg
or
push
mov
in
repnz
fidivs
xchg
jmp
repz
push
dec
adc
fs
cwtl
into
dec
sub
add
push
lods
push
adcb
push
sbb
cmpsl
into
cmpb
and
loop
cmpsb
xor
inc
out
mov
xchg
inc
mov
lcall
adc
cmp
sub
shl
xor
add
out
mov
stc
mov
mov
out
ret
leave
cmp
mov
inc
fldenv
cld
mov
fwait
int
loopne
mov
jae
adcb
sbb
adc
pop
jmp
add
or
and
cwtl
jbe
leave
mov
popf
in
mov
mov
jg
inc
inc
repz
mov
sahf
add
fbld
push
cmp
jns
in
scas
sbb
mov
mov
dec
aam
xor
ds
mov
cmp
out
adc
aas
jbe
iret
fisubs
ret
data16
popf
or
in
mov
push
adc
mov
dec
lahf
push
add
mov
jp
xchg
mov
test
cmpsl
outsb
sub
call
mov
stos
push
sarb
inc
insb
test
notb
aas
xor
jmp
mov
pop
sti
out
test
es
mov
adc
lsl
mov
stos
in
adc
jnp
mov
dec
add
mov
aam
mov
adc
push
lods
push
push
es
mov
mov
arpl
xor
xchg
sub
xchg
and
jp
test
inc
fdivrs
push
in
test
nop
pop
sbb
cmpsl
add
mov
and
mov
fs
out
sbb
out
cmpsb
push
ret
mov
push
mov
sbb
inc
mov
jp
mov
loop
jl
push
rol
inc
xchg
arpl
xchg
dec
mov
lret
jns
inc
mov
cld
mov
add
dec
rclb
loop
fs
jo
cmp
jp
cmpps
lds
adc
or
jo
ja
fwait
add
sub
xorb
add
push
pop
xchg
mov
stc
leave
or
in
in
frstor
aad
sub
roll
fcmovb
push
nop
cmpsb
imul
inc
jbe
and
inc
loope
push
int
cli
adc
mov
mov
insl
cmpsl
dec
lds
in
in
mov
cwtl
popl
adc
int3
jmp
mov
xchg
lods
jg
xor
ficoms
dec
stos
jne
into
cltd
adc
inc
testb
js
outsb
mov
push
pop
mov
stos
xchg
adc
pop
addr16
popa
pop
xchg
jnp
ret
push
mov
or
pop
daa
cmp
sbb
push
stos
aaa
adc
inc
mov
push
mov
add
ljmp
adc
fstpt
loope
data16
cli
scas
mov
inc
fldcw
out
lea
mov
jl
imul
adc
lods
addr16
sub
mov
pop
iret
inc
sub
mov
pop
adc
je
lahf
pop
fadd
aam
in
cmp
jmp
int
outsb
xor
add
pop
fisubrl
test
fnsave
mov
loop
insl
push
inc
cmpsb
mov
sti
push
mov
mov
jns
bound
int3
pop
mov
rclb
and
jnp
fwait
nop
lret
and
pop
ret
and
mov
mov
jb
ljmp
xchg
adc
sub
sbb
add
movsl
xchg
xchg
mov
jmp
jecxz
and
mov
xor
mov
mov
jae
movsb
out
rcrb
pop
xchg
cmp
mov
testl
flds
ds
mov
pop
mov
push
aam
mov
loopne
out
inc
mov
add
pop
xlat
jbe
rcll
sub
pop
outsl
sahf
mov
fisttps
repnz
test
and
sub
inc
insb
and
dec
jmp
lock
movsl
dec
jno
mov
cmpsb
or
xchg
rclb
xchg
sbb
pop
cmc
dec
mov
mov
es
sbb
nop
mov
into
fdivr
push
sbb
mov
dec
fcmove
scas
push
mov
pop
ret
lea
jmp
rclb
lcall
data16
imul
or
dec
fwait
mov
push
into
mov
fnsave
pushf
cmp
and
aaa
adc
jg
sub
mov
fisubs
shr
test
clc
mov
push
lahf
jecxz
shll
adc
enter
das
mov
int
call
mov
adc
sbb
shll
sub
imul
or
and
mov
loope
jb
lods
adc
add
jne
or
push
scas
sbb
xchg
in
and
js
ficoml
aaa
cmpsl
bound
pushf
ret
lret
mov
sub
mov
cld
mov
cmpsl
mov
es
adcb
mov
ja
gs
stos
data16
and
jnp
mov
jne
lods
lds
inc
cmp
out
jns
or
cltd
hlt
adc
std
push
xor
add
fcmovb
pop
test
dec
jns
xor
or
mov
mov
or
test
mov
jmp
cmp
sar
pushf
xchg
mov
adc
movsl
xor
pop
pop
mov
cltd
imul
in
xchg
mov
dec
nop
outsl
xchg
adc
mov
es
sbb
add
subb
pop
or
dec
rcr
pop
lret
inc
fstps
addb
sbb
lret
pop
adc
lret
popl
xor
idiv
lret
adc
dec
cmc
jl
inc
add
xchg
fnstsw
sbb
movsl
mov
enter
aaa
subl
mov
in
insl
cmpl
fadds
add
xchg
shlb
pop
push
jle
mov
mov
pushf
out
add
repnz
push
mov
adc
or
imul
ret
negb
add
or
mov
pop
mov
pop
aaa
lods
push
jbe
add
sub
xchg
sbb
fisttpl
test
sahf
mov
es
lods
cmp
sub
cli
nop
and
mov
mov
and
test
fs
in
shl
lea
jno
push
sub
std
lods
test
mov
add
inc
sti
push
fcmovbe
jo
dec
sahf
js
mov
dec
jno
cwtl
in
outsb
mov
mov
loopne
test
adc
sbb
dec
add
sbb
cmp
popf
aad
jb
pop
xchg
mov
or
push
pop
repz
and
into
mov
data16
enter
push
and
mov
adc
jmp
test
repz
mov
bound
mov
pop
rcll
xchg
mov
push
subl
cmp
clc
incl
jge
mov
xchg
add
xor
sahf
xchg
rolb
sub
aad
scas
fdivrl
pop
cmp
in
cltd
and
mov
mov
ja
test
ljmp
sub
or
je
lcall
test
lret
adc
xchg
aam
clc
bnd
gs
adc
jmp
sub
xor
mov
or
inc
mov
aas
sub
xchg
subl
dec
fidivrs
jmp
aas
ret
lahf
sub
lea
xor
mov
fsts
jecxz
fisubrl
call
pushl
dec
std
test
fnsave
and
ret
sbb
dec
mov
adc
mov
lret
mov
and
inc
fildll
cmp
jb
pushf
or
sbb
sbb
inc
imul
or
imul
in
pop
xlat
inc
mov
sbb
sub
daa
xchg
adc
mov
clts
or
push
sahf
xlat
mov
xchg
ja
clc
and
push
cld
shl
pop
popf
test
jl
pushl
fnstsw
adc
mov
outsl
dec
js
sbb
fsubs
jb
push
lea
lcall
or
mov
std
adc
rorl
push
fs
pop
push
sbb
sarb
dec
mov
xchg
ljmp
cmp
fsubl
sub
fwait
add
push
repnz
pop
mov
stc
adc
push
imul
xchg
push
and
or
add
popf
cmpsb
mov
pop
pop
or
jmp
popf
xor
xchg
inc
sub
repnz
sahf
gs
idivb
push
pusha
stos
fcomi
inc
add
and
xor
fucomi
push
pop
inc
shll
mov
int
fisttps
neg
add
mov
jo
mov
cmp
in
mov
cmp
rclb
popa
cmp
testb
xor
fcoms
lea
mov
in
andb
ret
sbb
outsb
sub
cmpsl
js
mov
mov
es
es
lea
mov
fst
lahf
or
idivb
pop
xchg
cmp
inc
lcall
mov
inc
push
sub
testb
push
pop
outsl
popf
mov
inc
cmp
pop
adc
mov
rcll
and
adc
mov
fs
idiv
xchg
aas
jnp
gs
xorb
out
mov
cmpsb
or
sarb
lds
lret
test
aaa
adc
push
push
fldt
push
ja
xchg
inc
push
pushf
push
es
jp
dec
mov
inc
mov
inc
xchg
mov
mov
xor
pop
lcall
stos
inc
mov
sbb
mov
inc
stos
mov
or
or
popf
ja
dec
mov
push
add
loop
xchg
lret
push
movsl
add
and
adc
push
sarb
cs
and
xorl
cmp
push
jge
pushf
lock
inc
push
jb
fstpl
or
std
pmaxsw
jecxz
and
or
pop
je
jmp
icebp
mov
jo,pt
outsb
idivl
lret
imul
scas
stc
xchg
mov
dec
dec
in
mov
clc
bound
inc
mov
outsb
add
pop
ret
xor
pop
mov
and
push
std
fnstsw
pop
hlt
das
sbb
imul
and
dec
sbb
jp
xchg
insl
rcl
push
jmp
stc
es
cmpsb
cmp
popa
mov
mov
sbbl
pop
fidivs
nop
adc
mov
lds
jne
es
push
xor
ja
out
jmp
in
aas
jle
sbb
sbb
push
ss
adc
loopne
sbb
daa
mov
out
dec
pop
aam
mov
mov
cmp
lds
push
sbb
sti
aas
aaa
filds
fdivl
push
call
imul
mov
aas
scas
movzwl
xchg
adcl
mov
jns
test
subps
decb
cmp
stos
sub
into
and
mov
add
shrl
pushf
xchg
xchg
dec
in
jecxz
cli
add
sub
nop
repnz
add
mov
adc
dec
push
cs
push
mov
pop
das
stos
lret
add
push
lods
jge
pushf
rol
push
leave
or
rcl
sti
xchg
push
dec
pop
pushf
popl
cmp
inc
inc
mov
xchg
data16
les
stos
sbb
ficoml
fistpl
or
adc
dec
sbbl
jne
sbb
clc
addb
iret
mov
iret
mov
adc
mov
sbb
xchg
fdivrs
push
into
sub
loopne
inc
mov
int3
scas
fwait
ss
sub
mov
inc
outsb
mov
pop
daa
adc
inc
push
inc
xchg
jmp
mov
mov
jb
xor
mov
dec
rcll
xchg
push
push
add
rorb
push
ss
jnp
test
jecxz
pop
pop
jp
lock
dec
scas
cwtl
bound
call
mov
ret
add
mov
mov
ldmxcsr
pop
sti
xchg
shll
lods
scas
mov
jno
es
jle
fcompl
add
pop
add
pop
sbb
cli
inc
nop
dec
push
icebp
adc
test
sub
dec
push
or
mov
rcr
jmp
mov
xchg
in
addl
mov
les
lahf
into
ljmp
out
fadds
sub
jmp
stc
mov
call
int
data16
jbe
enter
flds
jne
lret
and
js
loope
daa
jb
fwait
popa
orl
lods
add
sub
movsl
test
fiadds
inc
lock
mov
out
inc
xor
sub
push
and
add
cmpsb
push
pushf
jmp
sub
mov
inc
ljmp
jnp
imul
fsubrl
ljmp
xor
jle
inc
imulb
and
xlat
sub
push
lods
adc
and
aas
out
xchg
mov
mov
icebp
mov
xchg
dec
xor
movsb
out
jl
sbb
push
dec
dec
sub
mov
and
mov
fdivrl
jb
mov
cmp
int3
lcall
ret
stos
jbe
test
mov
xchg
ret
sti
push
push
insb
push
cmp
mov
pop
int3
int
xchg
adcb
xchg
jnp
pop
or
cli
adc
jae
arpl
test
rol
inc
loopne
xorl
push
aas
les
mov
movsb
fistl
test
clc
scas
test
jno
pop
jecxz
jns
push
sbbl
jmp
push
mov
aaa
call
mov
sbbb
insb
sub
int3
icebp
out
sbb
test
shll
scas
mov
lcall
push
imul
mov
mov
int
push
push
mov
lds
ret
sbbl
lret
ss
cmp
jmp
mov
pop
sub
outsb
pop
cmpsb
mov
lock
jae
add
jns
pop
ds
fildll
mov
hlt
cli
add
nop
push
loopne
sub
data16
or
xor
mov
cmpb
mov
mov
xlat
scas
adc
add
fiadds
pop
xlat
mov
pop
cld
dec
scas
cmp
imul
into
jns
jg
into
adc
insb
je
paddusw
cs
cmp
add
add
sbb
scas
inc
xor
inc
inc
push
mov
shlb
nop
mov
sti
sub
xchg
mov
add
pop
dec
lret
xor
ret
arpl
ret
sub
and
xor
sti
push
adc
cmp
sbb
loopne
mov
and
xor
pop
lret
jmp
inc
dec
cmp
sub
dec
cmp
test
rcrb
lods
rol
xlat
dec
mov
cmc
pop
fisubl
mov
inc
cmc
cmp
out
std
dec
hlt
es
lret
mov
jg
mov
stos
out
or
scas
sahf
or
je
dec
sbb
cmp
mov
ret
and
aad
ja
push
cld
out
mov
aaa
sbb
add
inc
fcmovbe
inc
scas
push
cmp
sbb
subl
addb
or
stc
das
cld
jmp
jnp
jge
loopne
xchg
cwtl
rclb
xlat
mov
mov
into
jns
and
out
test
in
ds
or
and
or
int
popf
js
outsl
xchg
mov
in
dec
mov
inc
adc
jmp
inc
jg
sub
imul
hlt
cmc
frndint
repz
fsubrs
popa
cwtl
adc
inc
cld
xor
clc
lock
insb
in
push
lea
sub
and
hlt
dec
or
sbb
repz
fwait
cmpsb
ret
addr16
fldcw
hlt
cli
jo
rorl
lock
or
sar
rcll
cwtl
in
jo
in
jmp
inc
xor
rcll
cwtl
lods
push
sbb
aam
shrl
adc
outsb
int3
das
call
in
and
out
enter
sub
loope
fcoml
xor
jg
sub
sbb
sub
mov
stos
sub
jg
push
mov
push
ds
jnp
add
and
push
sbb
pop
push
fiaddl
add
repnz
sub
lret
cmp
xchg
pusha
pop
out
mov
clc
and
lret
lcall
jg
js
cmc
push
psrld
ret
xlat
pusha
inc
addl
popf
or
jecxz
dec
mov
orl
adc
rcrb
cmp
je
mov
test
mov
jg,pn
imul
inc
test
ja
test
enter
enter
jp
adc
es
enter
sbb
sti
repz
cli
inc
nop
cmp
or
fs
out
pop
stos
gs
iret
lods
test
jne
push
pop
lahf
or
sub
pop
pop
ljmp
lods
notb
outsl
lds
jns
or
mov
mov
stos
cld
push
mov
js
jnp
jbe
insb
lahf
or
push
push
insl
das
ds
xchg
orb
adc
scas
jmp
sub
sub
in
mov
pmaddwd
push
pause
mov
mov
or
popf
push
sub
xor
out
in
xchg
lahf
mov
clc
aas
mov
sahf
xor
lods
clc
push
fldl
add
and
xor
outsb
push
idiv
adc
add
mov
lret
iret
add
mov
int3
ds
xchg
adc
enter
push
inc
dec
push
adc
ljmp
aad
pop
and
scas
xor
and
mov
mov
call
cmc
jo
push
cmp
jmp
or
pop
fcmove
jno
lret
sbb
movsb
into
jno
ret
aam
enter
mov
sti
in
aas
mov
sub
or
rol
pop
dec
xchg
mov
arpl
adc
sarl
mov
out
cmpsl
mov
push
fldcw
dec
cld
xchg
jnp
inc
pop
sub
jmp
sbb
pop
pop
lcall
iret
dec
xchg
loop
fsubs
cld
push
push
inc
and
and
inc
sbb
aam
jbe
movsb
lock
adc
jp
mov
stos
xchg
aaa
gs
aaa
add
mov
pop
pop
or
jmp
push
dec
loopnew
imul
loopne
jno
arpl
jae
cmpsb
or
clc
loopne
push
addl
imul
pop
xchg
lea
mov
mov
fsubp
mov
xor
test
sahf
shrb
xchg
mov
push
je
adc
xor
cmp
adc
jl
mov
insb
xchg
sti
cli
popf
cmp
inc
shl
mov
sbbb
or
ljmp
shr
and
and
lret
mov
xor
ljmp
lret
addb
sbb
int
lahf
insl
xchg
or
push
dec
inc
aam
inc
fidivrl
xor
les
stos
repz
loope
mov
pop
jae
inc
and
mov
or
pop
out
repnz
rorl
outsb
aad
lods
pop
movsl
dec
cltd
mul
fs
lock
ror
ljmp
inc
jle
scas
lea
bnd
mov
push
push
xchg
loop
imul
jno
inc
mov
push
and
pop
enter
xor
or
ret
pop
lea
call
dec
add
lcall
lods
outsl
les
push
push
cmp
ret
test
xchg
bound
sbb
idivl
mov
imul
and
xor
in
pop
pushf
mov
dec
gs
mov
mov
in
insb
inc
adc
in
and
mov
xchg
sti
dec
leave
out
je
shlb
fisubrl
es
mov
imul
js
dec
ret
pop
sub
and
mov
mov
push
cmp
jp
leave
je
imul
or
insb
nop
lret
fs
aas
xchg
cmpsb
push
mov
rolb
lds
add
aad
mov
xchg
mov
pop
stos
mov
mov
sbb
test
cs
enter
ret
cmp
inc
lret
out
cmc
dec
pop
push
or
cmpsl
cli
add
into
mov
test
mov
lea
lea
xor
xchg
jno
lret
or
pop
mov
test
out
imul
divl
jns
xchg
loop
and
pop
loop
sbb
cmp
adc
leave
and
xchg
jae
cmp
xchg
mov
testl
out
fcmovnu
stos
dec
cs
gs
pop
xor
lock
test
rcr
dec
test
mov
call
in
jg
or
inc
in
jae
dec
movsl
sub
or
push
jbe
push
cmc
adc
cmpsb
add
aad
jp
lea
ret
inc
rol
jnp
aam
adc
sub
xchg
and
std
sub
push
mov
sbb
ds
dec
repz
sbb
xchg
jmp
add
xor
dec
out
push
mov
fimuls
std
xorb
cs
mov
push
cmp
push
lret
bnd
fmull
mov
dec
fwait
push
fnstcw
loopne
xor
mov
lods
push
xchg
jae
sub
sub
lock
push
mov
popf
icebp
dec
insb
jle
mov
mov
xchg
icebp
mov
dec
pop
ljmp
pop
lods
xor
pop
insl
or
movb
xor
xor
xor
mov
inc
iret
cli
fcmovbe
xchg
popl
dec
or
test
aaa
lods
and
adc
cli
inc
out
jne
sahf
pop
or
out
cmp
mov
pusha
mov
hlt
add
clc
out
lock
jmp
inc
test
icebp
push
in
pop
push
mov
pop
inc
cmp
dec
push
add
adc
jge
cmpsb
xchg
dec
les
mov
andl
adc
xchg
dec
mov
cwtl
fbld
mov
cmc
dec
les
xchg
sub
xchg
call
cmp
cmc
lods
fcoml
fildl
adc
push
mov
adc
sahf
shrl
dec
xor
push
mov
jg
push
outsb
adc
aaa
cmpsb
cmp
inc
imull
sbb
fldt
sub
loopne
fstl
sbb
repnz
mov
lahf
inc
popf
fldl
mov
aam
mov
iret
fs
and
dec
push
cmp
repnz
mov
fs
mov
in
cmpsb
pop
jne
mov
stos
icebp
repnz
mov
xchg
jae
lahf
pop
test
or
les
jmp
ljmp
inc
in
push
adc
pop
ds
fcoms
add
xchg
aaa
mov
xchg
inc
icebp
dec
mov
mov
loop
rcr
jae
psubusw
jno
jl
push
aam
mov
call
pop
cmp
xchg
les
add
pop
push
xchg
das
cltd
mov
test
int
jno
fldcw
or
addr16
cmp
jae
loopne
or
xor
lahf
in
fdivs
push
pop
xchg
roll
mov
int3
mov
addr16
jbe
jmp
test
jns
stos
or
push
jecxz
fiadds
aaa
out
cs
ds
leave
les
xor
sti
inc
jae
xchg
sbbl
mov
xchg
mov
cs
or
test
cltd
add
lods
add
pushf
popa
lret
push
into
scas
std
cmpsb
and
cmp
push
lock
mov
xor
jnp
cltd
ljmp
movb
in
push
inc
xchg
mov
inc
stos
lcall
push
cmp
adc
fidivrs
cltd
fs
ror
ret
fwait
jbe
cltd
cmpb
xor
and
iret
sub
add
cli
test
push
lret
push
imul
add
call
jg
mov
mov
pop
or
test
lods
push
test
mulb
push
cwtl
jno
jp
sub
rcrb
adc
pop
testb
or
mov
fisttpl
dec
mov
and
scas
dec
test
popa
out
lret
das
mov
sbb
sub
ja
adc
mov
mov
xor
data16
scas
es
pop
mov
jl
or
or
sbb
pop
cmp
pop
jle
sar
mov
sbb
test
jb
ljmp
in
decb
fcmovnbe
xor
out
and
push
sub
push
jne
test
call
mov
mov
rcr
inc
loopne
imul
loopne
cs
or
and
push
js
insw
push
testb
pop
negl
test
cmp
push
mov
ret
imul
xchg
leave
add
mov
fmul
push
ds
or
imull
pusha
inc
lret
mov
xchg
insb
das
xchg
adc
lods
xchg
or
jl
pop
out
pop
xchg
inc
or
xor
cli
arpl
and
shl
xchg
cld
push
ds
push
xchg
js
jge
bt
push
pop
sahf
adc
mov
add
or
mov
jecxz
fsubp
jns
outsl
loope
roll
in
jo
push
dec
or
mov
pop
in
bound
sbb
sbb
and
sbb
ja
iret
and
pop
xor
fsubp
out
repnz
mov
and
aas
daa
inc
jmp
mov
mov
push
in
xchg
pop
add
adc
jne
push
les
sub
int3
lock
rol
add
je
out
xchg
jmp
add
fdivrl
test
mov
pusha
mov
sub
das
lret
sub
adc
cltd
iret
loopne
std
insl
jno
cmpsl
int3
inc
nop
cmp
movsb
adc
jnp
lcall
and
jno
add
add
movsb
fimuls
cltd
pop
mov
xchg
lods
andb
out
sbb
inc
scas
jl
daa
xor
inc
popa
fidivrs
and
add
movsl
push
mov
dec
pop
or
lahf
pop
dec
arpl
mov
int
sti
cmpsl
or
sub
jmp
push
ja
push
push
sahf
mov
xchg
jle
xchg
inc
ret
cmc
fmuls
hlt
pop
fdivs
mov
mov
or
imull
pop
or
mov
cli
and
cmp
test
movsb
xchg
push
dec
and
jb
lret
mov
pop
jnp
fwait
jb
stos
rclb
sub
nop
push
pop
adc
push
cmp
or
xor
or
mov
xor
mov
mov
mov
sub
xchg
fdivrs
movsb
cwtl
arpl
int
popf
xchg
cmp
scas
jle
dec
fidivl
add
jle
or
lahf
jns
dec
push
dec
ljmp
nop
mov
mov
jl
adc
xchg
sbb
cmp
std
mov
add
add
jl
sub
inc
sbb
dec
and
cs
cmp
loop
ret
sbb
test
pop
sbb
shlb
jns
stc
xor
mov
or
cmpsl
lcall
and
add
sub
mov
or
xor
xchg
out
adc
add
mov
addr16
ss
fiadds
bnd
mov
mov
or
out
pop
mov
into
mov
rclb
ret
add
or
sub
cmp
pop
ss
xchg
inc
scas
dec
pop
icebp
xor
insb
insl
into
movsb
xor
sbbl
repnz
xor
sarl
test
mov
cmp
pop
jge
mov
jl
cld
inc
bound
cltd
sbb
adc
pop
adc
mov
adc
daa
push
mov
adc
out
ss
xchg
in
outsb
out
xor
jle
rcl
sahf
mov
adc
imul
cltd
add
lea
aas
pop
adc
xchg
mov
sahf
ja
jo
cltd
rcll
fbstp
xor
sub
ja
mov
inc
xor
push
xorl
or
mov
pushf
in
cmpsl
xor
popa
push
cmp
test
leave
add
mov
movsb
mov
xcrypt-cfb
cmpsl
in
faddl
lahf
in
mov
or
filds
mov
cmp
sti
add
push
incl
xlat
sub
add
mov
jmp
pop
sub
dec
lret
mov
aaa
cmp
add
nop
std
mov
inc
leave
rcl
mov
cwtl
bnd
adc
imul
or
movsb
fistpl
mov
std
mov
mov
xchg
add
add
loopne
cmpb
adc
push
pop
dec
pop
sub
imul
pop
repz
inc
fcomps
ss
xor
fs
mov
frstor
pop
add
int
js
sub
add
gs
testb
push
push
or
cli
or
pop
xor
icebp
and
xor
fdiv
pushf
xor
sub
scas
xchg
add
push
sub
das
movsb
mov
repnz
cwtl
cmp
and
nop
inc
popa
cmp
insb
lcall
pop
xchg
fwait
push
inc
shrb
adc
dec
loop
sbb
pop
lret
orb
add
jae
hlt
aas
add
je
out
pop
jnp
subl
arpl
push
add
sub
push
xlat
mov
loopne
add
push
cs
add
xor
xchg
mov
push
cltd
or
out
sub
cmpsb
ss
mov
ss
mov
jmp
pusha
cmpsl
pop
or
dec
testl
aad
in
data16
dec
xor
inc
dec
jnp
movsl
push
leave
in
mov
push
adc
xchg
pop
or
cli
lock
mov
mov
or
adc
pop
mov
shl
add
mov
add
shrb
pop
in
dec
mov
loopne
jg
cmp
add
cmp
sub
shl
mov
dec
hlt
xor
pop
sahf
out
cmp
cld
add
aas
movsl
icebp
mov
repz
cmp
negl
xchg
xchg
push
mov
inc
aaa
push
sub
aam
mov
and
mov
cmp
mov
dec
fs
push
adc
test
add
mov
xchg
in
mov
mov
jb
add
xor
cmpsb
lods
xchg
dec
dec
pop
mov
icebp
fnstcw
jg
mov
sub
push
repnz
es
jle
inc
cmp
xor
inc
dec
mov
popa
lret
or
mov
inc
scas
leave
movsl
pusha
out
xor
lret
cmp
sahf
outsb
test
loopne
daa
or
jb
lret
cld
and
xchg
mov
fstps
add
xchg
mov
addl
push
leave
add
mov
push
add
fstps
mov
popa
inc
in
mov
fsubrs
cs
fcoms
ficompl
out
dec
fwait
push
fidivl
decb
mov
lds
and
push
dec
in
push
mov
into
sbb
pusha
xorb
mov
repnz
add
mov
data16
pop
mov
into
mov
bound
cwtl
jmp
cmpl
jae
lret
cltd
jne
mov
and
jmp
les
fnstcw
adc
repz
cmp
test
xor
push
or
mov
push
mov
mov
mov
adc
lcall
test
sbb
in
dec
lods
push
mov
adc
lret
lods
popf
pop
dec
push
fcomps
repnz
idivb
aas
sarl
sbb
lret
add
ror
popa
stos
adc
inc
push
push
enter
rorb
mov
add
and
repnz
adc
mov
jns
fistps
jb
shlb
xchg
stos
nop
jo
push
push
dec
inc
xor
lahf
cs
fcompl
outsl
imul
dec
mov
shll
mov
gs
mov
stos
xor
sbb
test
mov
dec
and
lods
xchg
hlt
lods
ficomps
jmp
ds
scas
xchg
sar
dec
cmc
ja
pop
divb
fcom
mov
pop
cs
cwtl
les
push
mov
testb
jle
cmp
lahf
ds
cld
jb
mov
sbb
jne
jne
inc
mov
inc
sbb
leave
push
push
aaa
adc
mov
lock
add
sub
adc
sub
xchg
add
stos
push
ret
ret
push
mov
adc
push
ret
mov
mov
mov
adc
and
roll
add
or
jns
inc
sbb
jle
cmp
inc
dec
jnp
adc
cmp
xchg
test
xor
and
mov
scas
popa
bound
andb
test
pop
repnz
pusha
or
pop
mov
call
or
lret
push
lret
or
int3
js
and
in
lahf
lods
stc
push
nop
add
mov
sub
xchg
outsb
xchg
cld
aas
cmp
and
and
mov
push
or
push
adc
sti
lcall
jg
test
and
pop
pusha
mov
aam
sbb
lret
adc
and
mov
lods
fs
js
lcall
daa
lret
rclb
push
cltd
and
cmp
jbe
and
dec
ds
mov
jnp
mov
pop
push
or
jo
mov
xorl
dec
rorb
mov
jmp
bound
movb
imul
cld
nop
add
push
jb
stos
cmp
or
jo
push
sub
gs
test
insl
dec
mov
iret
cmc
loope
shll
jle
push
xlat
mov
je
xor
push
cmpsb
mov
and
mov
in
or
cmp
insb
xchg
or
aad
jo
sub
rcr
sti
xor
outsl
inc
sub
jle
movl
adc
scas
cmp
sahf
xchg
lds
add
mov
push
int3
incl
stc
fisttpll
movsb
cmc
rcrl
jne
cs
inc
mov
push
mov
imul
mov
movsl
xchg
adc
fxch
insl
scas
stos
ljmp
dec
jae
add
int
mov
push
pop
scas
mov
test
and
or
jns
xchg
int3
and
dec
out
or
ret
ja
cli
sbb
mov
inc
dec
cmp
push
out
and
in
lock
out
loopne
sbb
dec
pop
mov
or
adc
outsl
push
lret
fdivr
inc
and
jmp
inc
in
adc
fnstenv
jg
cmpsb
pop
pop
shrb
sahf
pop
ja
mov
or
dec
dec
fs
sub
lret
mov
and
test
cmpsl
movsl
xchg
cmpsl
rcll
add
cmpl
imul
xchg
add
mov
inc
fidivrl
jne
fadds
addr16
movsb
je
jns
sarb
mov
inc
iret
mov
sti
call
inc
imul
insb
xor
movsl
ds
jnp
xlat
mov
pop
lds
adc
push
mov
pop
xor
cwtl
add
pop
pushf
cs
cli
and
fldenv
jno
addr16
out
das
into
jno
mov
mov
cld
jno
out
mov
loope
stos
cmp
lret
lds
inc
pop
lods
lret
movsl
xchg
rcrl
jnp
arpl
cltd
pop
jge
adc
rcrb
mov
push
rcl
push
mov
in
bound
adc
sub
xor
ja
jb
aaa
and
lea
xchg
xchg
test
fldl
lret
dec
pop
sbb
mov
jns
fldl
lods
or
call
test
into
subb
mov
or
or
pop
icebp
addl
or
lods
clc
movsl
xchg
add
hlt
imul
mov
shll
dec
das
faddl
cmp
dec
into
push
push
sub
loop
dec
ds
mov
inc
call
aaa
lods
ss
das
ljmp
dec
inc
je
cld
xchg
fstpt
sbb
fidivl
pop
cmp
pop
outsl
mov
sti
js
sbb
dec
dec
pop
imul
push
outsb
add
ljmp
sub
cmpsb
push
popa
jle
inc
es
testl
or
nop
adc
test
mov
push
cmp
loopne
lret
push
adc
jg
xor
fadds
jmp
int3
adc
cmp
xchg
stos
push
fisttpll
xchg
lea
mov
dec
out
cmc
test
sbb
int3
jecxz
fcmove
sbb
mov
sub
pop
or
in
pop
xor
les
mov
ljmp
arpl
sarl
jmp
loop
test
sbb
push
sub
push
jnp
ljmp
in
mov
aam
fnstsw
pop
lds
or
jmp
jno
repz
fbstp
cltd
nop
pushf
insb
pop
mov
add
jp
pop
jae
adcb
push
imul
cmp
arpl
sub
mov
pop
ljmp
nop
gs
jp
sbb
mov
adc
aam
or
aad
mov
and
dec
fnstenv
stos
icebp
cmp
iret
mov
orb
mov
add
xor
cmc
es
loopne
xor
and
cmp
out
leave
sbb
xor
bound
loopne
push
call
mov
inc
pop
push
mov
lods
outsb
int3
daa
lret
xchg
xorb
pop
aas
sti
mov
in
mov
or
test
loopne
mov
adc
xchg
scas
mov
and
push
dec
bound
mov
call
fnstsw
sbb
loop
stc
out
outsb
mov
mov
mov
jle
loop
inc
dec
test
jo
insb
jmp
lret
cmp
sub
mov
push
imul
notb
jmp
jo
mov
arpl
test
in
mov
mov
mov
xchg
sub
and
movsb
xchg
dec
pop
imul
insb
andb
adc
test
pop
jb
into
sbbb
inc
mov
cmpsl
mov
push
testl
mov
pop
inc
int
jne
dec
mov
repz
ss
add
sbb
decl
sub
notb
in
jmp
out
daa
roll
add
inc
jmp
add
test
cli
xchg
push
faddp
jle
add
and
adc
xor
push
add
pop
inc
dec
or
and
daa
jb
nop
sarb
mov
icebp
push
jge
push
test
xchg
mov
dec
mov
dec
ja
jae
addr16
jns
inc
add
xor
imul
test
lcall
lahf
aam
ficomps
mov
outsl
stc
jge
jae
inc
mov
jne
push
pop
cltd
xor
shll
sub
cmp
popf
lea
bound
xor
inc
mov
icebp
test
dec
xchg
or
and
aad
ds
mov
and
mov
pop
fsubl
jne
insl
arpl
insl
cmp
jge
jmp
out
push
xchg
mov
lock
popf
or
adc
lret
inc
fmuls
mov
inc
add
inc
out
xor
iret
and
xchg
push
rcrl
inc
test
cmp
push
nop
mov
inc
mov
loope
mov
scas
jecxz
ljmp
pop
or
js
leave
test
add
xor
xlat
cs
fiaddl
js
scas
jmp
pop
mov
push
mov
lea
cmp
mov
imul
mov
movsl
lock
xor
jb
xchg
mov
and
mov
pop
mov
mov
pop
dec
jo
lahf
leave
pop
pop
adc
dec
or
jl
pop
out
das
xor
sbb
push
popl
notl
aam
mov
popf
out
sub
xchg
xchg
jb
enter
mov
test
adc
dec
and
jns
ret
fcoms
dec
dec
cltd
stos
out
sub
dec
mov
mov
cmp
js
mov
dec
clc
sub
inc
fcompl
xor
jno
jle
push
test
dec
enter
insl
jg
jecxz
pusha
gs
test
dec
push
adc
pop
push
xor
sti
test
mov
jmp
cmp
jb
jmp
jmp
push
push
aad
jno
jg
jns
and
lea
sbb
test
sub
in
jae,pt
sbb
fidivrl
xor
ja
jbe
sbb
and
push
sbb
sti
mov
cltd
ds
adc
frstor
pop
mov
insl
in
mov
dec
or
test
popa
mov
mov
push
aad
sbb
rcr
dec
push
xchg
pop
sub
subb
neg
pop
pop
jl
lock
lret
test
iret
jbe
rcl
fwait
out
popa
or
jno
lods
addr16
mov
out
in
cmpl
stos
cld
dec
jb
mov
data16
mov
push
xlat
push
arpl
lret
pop
mov
inc
fwait
jbe
into
lahf
dec
enter
jmp
stc
push
sub
and
cmp
or
pop
pop
mov
adcb
std
inc
pop
jnp
pusha
inc
add
out
xchg
adc
push
shl
fsubl
gs
push
jge
mov
sbb
lods
adc
mov
hlt
xor
dec
add
jae
fdivrs
hlt
imul
mov
pop
push
mov
mov
jno
les
mov
mov
mov
dec
add
dec
dec
mov
fucomp
xchg
xchg
add
and
testl
jb
pop
dec
mov
xlat
sub
inc
lahf
shl
insl
sub
outsl
jne
jp
pusha
sbb
xchg
mov
cmp
jo
sbb
mov
jne
add
xchg
xchg
add
dec
loopne
fdiv
pop
mov
sbb
mov
cmpsb
adc
sar
inc
mov
or
in
xchg
call
and
fs
pop
adc
scas
int3
cmpsl
hlt
lret
in
inc
out
les
sub
in
jae
stc
cmc
push
sbb
cmp
repz
add
xchg
mov
mov
add
add
xlat
dec
push
push
shrl
jno
shlb
dec
lea
pop
dec
pushf
cmpsl
dec
pop
add
cmc
inc
or
mov
popf
sub
xchg
jbe
mov
xor
sub
or
sti
jbe
and
inc
ja
xchg
gs
aam
dec
std
and
dec
adc
and
dec
lret
int
adcl
cmp
sti
mov
idivb
xchg
sbb
dec
cmpsb
mov
pop
adc
dec
negb
insl
mov
mov
or
hlt
repnz
push
sbb
in
daa
pop
push
or
icebp
mov
scas
xorb
and
jae
push
in
bound
push
stc
sahf
xchg
sahf
or
int
mov
add
jle
fcmovnbe
popa
mov
sbb
or
gs
testb
nop
cmp
cmovge
mov
add
ss
stos
fs
shll
mov
fcoml
inc
insb
sub
push
loope
scas
pusha
xor
xor
mov
int
aam
call
push
decb
ljmp
call
inc
lret
jmp
mov
fsubrs
adcb
addr16
iret
jb
lock
xor
ds
clc
hlt
fmulp
in
and
push
repnz
mov
scas
push
in
jmp
fildl
mov
out
xchg
repz
jmp
shlb
mov
aas
xor
sahf
ret
inc
or
cmpsb
cmpb
testb
nop
outsl
cli
sub
mov
orb
adc
jb
xchg
xchg
pop
xchg
mov
mov
sub
je
jecxz
scas
es
scas
inc
or
movsb
xor
sbb
sub
sbb
pop
sarb
int
jle
dec
shll
xchg
dec
loopne
sbb
jmp
std
push
fsubr
into
cmp
xchg
pop
stos
rcr
inc
inc
shll
push
mov
jo
pop
fprem
jecxz
in
pop
shl
pop
scas
test
leave
mov
nop
jbe
fidivrl
lds
sub
fs
ret
dec
aam
into
iret
aas
sbb
dec
cwtl
testb
sahf
lcall
sub
pushl
scas
push
test
mov
lds
cmp
fsubrs
rcll
out
out
or
out
inc
js
in
sti
pop
pop
push
add
je
je
in
lods
inc
sub
sbb
and
mov
bound
push
sbb
xchg
cs
or
enter
push
pop
scas
jo
enter
cmp
xor
aam
outsb
pop
imul
push
dec
lods
scas
and
stc
dec
dec
jbe
ss
pop
sub
cmpsl
shlb
and
xchg
adc
fistpl
sti
ljmp
jmp
imul
jecxz
nop
popa
leave
jne
movsl
dec
pop
cltd
mov
push
push
dec
mov
repz
movsl
ss
movsl
sub
and
je
xor
js
mov
ret
shlb
fistpl
adc
mov
mov
imul
pop
dec
iret
jg
in
dec
mov
cltd
loop
adc
loopne
add
xor
test
mov
cbtw
lahf
enter
out
aas
shlb
outsb
ljmp
mov
fnsave
test
mov
dec
cs
xchg
mov
shll
push
adc
jp
clc
mov
lods
mov
push
les
pop
shlb
test
aas
popa
jmp
lods
mov
bnd
xchg
push
mov
in
adc
mov
push
lret
popa
enter
out
movsb
pop
push
mov
cwtl
sbb
mov
cwtl
lods
movsb
inc
jecxz
fidivl
push
out
inc
pop
test
push
sbb
call
fwait
mov
mov
pop
je
add
push
sub
xor
cmpl
dec
xor
add
push
and
out
mov
out
or
mov
xor
stos
cmp
mov
lock
stc
jo
ficoms
inc
push
les
push
nop
fwait
lock
sbb
insl
leave
fisubl
xchg
lock
xchg
adc
les
or
cmpsb
lods
fstps
loop
daa
imul
cwtl
gs
lcall
or
jbe
pop
aam
fisubl
js
imul
mov
rolb
mov
xor
lea
std
or
cmpsl
inc
xorl
push
add
out
aaa
clc
sar
inc
sbb
imul
pop
shrl
outsl
sub
dec
jp
dec
loop
dec
test
arpl
mov
cmp
jo
hlt
jp
ret
add
push
dec
push
movsb
add
pusha
imul
js
push
dec
scas
aaa
shll
mov
inc
bound
mov
cli
sub
lret
sub
popa
xchg
es
fstpt
iret
push
rorb
orb
test
in
mov
dec
inc
adc
xchg
shlb
xor
xor
enter
jmp
rcr
enter
jbe
fsub
mov
test
addr16
dec
cmc
fwait
or
cmp
out
dec
stc
cmp
jne
sub
inc
rolb
insl
cli
mov
xchg
enter
cmpl
cmp
adc
enter
movb
xor
pop
mov
cmpsl
loop
leave
test
fwait
xchg
shlb
pop
and
andb
aas
xor
add
adc
xchg
outsl
ljmp
xor
xchg
mov
jo
cmpsb
movsb
pop
mov
aas
movsl
jg
mov
imul
ffree
scas
push
mov
push
cltd
jb
adc
pushf
mov
dec
aas
addb
bound
jno
cmpsb
aas
loop
jmp
lods
dec
dec
lcall
mov
xor
ret
sahf
daa
out
jmp
outsl
ss
or
push
into
adc
pop
mov
mov
mov
gs
push
movsb
inc
jl
aaa
test
jae
adc
inc
jbe
dec
lret
and
and
je
imul
std
mov
adc
jno
xchg
inc
pop
jns
dec
loopne
es
sarb
gs
lods
out
fsts
jo
ret
mov
lret
pop
xor
push
push
pop
sub
push
lods
push
cmp
loope
daa
jp
pop
fstl
movsl
dec
imul
rol
aaa
dec
lods
in
sbb
inc
adc
or
jge
xor
fcomps
mov
and
push
sbb
ret
mov
xchg
out
xchg
mov
inc
add
and
subb
mov
xchg
mov
insb
pushf
cli
lock
in
and
or
fcomps
xor
push
gs
mov
mov
inc
je
push
insl
scas
popa
pop
xchg
bound
ja
mov
out
jg
aas
in
popa
xor
lock
loope
sbb
sbb
shll
cmp
add
outsb
pop
xchg
mov
fists
add
loopne
outsb
daa
sub
lcall
mov
ret
sub
out
ss
add
fimuls
sti
inc
pop
rcrb
sub
xchg
jge
cmpsl
pop
fimuls
xchg
inc
andl
gs
xchg
sbb
ljmp
add
adc
dec
ja
or
cmp
pcmpgtd
nop
aad
shl
gs
mulb
push
or
or
fcomi
jecxz
or
mov
or
ficomps
sahf
data16
mov
cmp
jl
int3
enter
or
ss
mov
mov
insl
imull
xchg
fldenv
int3
test
jp
mulb
shrb
sbb
cmp
in
xchg
push
inc
jno
shrb
bound
aad
mov
stos
mov
pop
repnz
test
push
mov
repz
push
in
mov
dec
push
fucomi
xchg
add
shll
push
out
mov
add
sub
jg
ret
nop
add
lcall
xlat
popa
xlat
mov
insb
push
ffree
jno
stc
lahf
pop
or
jnp
lahf
or
mov
push
push
cmp
pop
stos
sbb
mov
lahf
mov
sbb
arpl
loope
jmp
mov
mov
arpl
adcl
jmp
imull
sub
bound
icebp
not
leave
mov
dec
mov
test
daa
sbb
add
push
ds
mov
mov
int
pop
repz
jecxz
lahf
out
mov
loop
lds
adc
push
repnz
lcall
push
jo
inc
fsubp
adc
mov
adc
mov
lret
call
lcall
mov
outsl
cltd
daa
jno
push
fists
cmp
dec
nop
add
xor
adcb
clc
into
cltd
das
xchg
in
icebp
into
xchg
roll
in
cmc
pop
jb
sub
lahf
mov
xor
es
rorl
out
add
inc
mov
decl
lods
xor
and
mov
lods
dec
into
mov
cld
or
imul
popa
bound
xchg
inc
dec
add
outsl
leave
lods
mov
aam
adc
xchg
lcall
mov
xlat
test
push
or
pop
movl
dec
imull
sub
add
sbb
addr16
fs
in
jbe
jecxz
aad
sub
repz
aaa
xchg
imul
outsl
out
mov
sarb
mov
mov
out
add
mov
pusha
mov
lret
fcom
jne
mov
inc
test
sbb
bound
adc
orb
pop
sahf
sub
fwait
cmp
call
repnz
js
mov
pop
mov
scas
adc
inc
mov
sub
imul
cmc
dec
cltd
xadd
ja
ds
or
movl
jne
mov
imul
outsl
lock
test
dec
dec
stos
pop
int
xchg
push
push
cmc
stos
cmpb
movb
scas
cmpsl
sbb
push
in
push
in
fistps
cmp
push
std
dec
pop
cwtl
jno
xchg
add
mov
popf
jbe
sbb
mov
test
sbb
ds
or
popl
fists
lahf
int3
movsb
daa
jb
and
cmp
dec
add
mov
mov
xchg
popf
pop
add
and
sti
outsb
xor
dec
stos
dec
cltd
adc
mov
dec
dec
scas
je
in
test
insb
cmpsl
mov
shrb
push
dec
dec
cmpsb
push
jle
xor
and
add
xor
js
push
xchg
sarl
xor
push
xchg
cli
dec
mov
pushf
adc
lds
sub
sbb
xchg
out
fisubrs
testb
sub
push
jp
es
repnz
loop
xor
xor
mov
mov
cmpsl
add
movsl
lret
ss
sub
incl
pop
pusha
xor
jp
mov
shrl
pop
xchg
lcall
xor
jae
sub
or
popa
add
pop
inc
out
lcall
xlat
jno
scas
test
stos
adcl
cmp
xor
scas
push
aaa
pushf
data16
and
xor
pop
mov
sub
xchg
loope
adc
pop
mov
sub
daa
ret
dec
pop
sub
fwait
sbb
arpl
cwtl
pop
cmp
aad
data16
sub
scas
insl
xor
or
push
inc
and
mov
mov
es
mov
loope
fdivs
or
mov
jmp
insl
popf
or
call
push
mov
lcall
pushf
cld
fisttpll
pop
fcmovb
cmp
mov
mov
fsubrp
loop
mov
fs
and
cli
sub
pop
push
cmp
in
das
popf
or
dec
aaa
popa
push
data16
je
enter
loopne
xchg
push
inc
mov
add
loopne
inc
sahf
adc
dec
mov
sub
js
std
testb
xchg
adc
inc
xor
xchg
add
notl
cld
in
cmpsb
add
das
ret
sub
fwait
dec
pusha
ja
inc
int
jp
cmpsl
inc
sub
repnz
insb
cltd
mov
mov
adc
das
inc
mov
xchg
idivl
lods
xchg
jnp
and
lods
pop
mov
or
push
add
and
popa
dec
jge
mulb
fisubrs
push
dec
daa
jmp
repz
dec
push
call
xchg
ret
or
int
cmp
cs
loopne
lret
aam
cld
jmp
dec
fnclex
pusha
mov
int
sbb
insb
jl
fld
or
mov
inc
cmp
inc
xchg
xchg
mov
xchg
cmp
and
mov
enter
dec
int3
test
je
push
popf
mov
std
jmp
gs
leave
jmp
daa
xor
push
into
ds
shr
aas
jne
mov
sbb
adc
inc
add
xlat
aaa
lret
sbb
enter
adc
and
call
aad
xchg
insb
xchg
mov
mov
pop
call
repz
jbe
and
fs
push
xchg
jns
jg
xchg
mov
cmp
sbb
call
mov
shll
xor
sbb
push
cli
mov
pushf
mov
test
mov
loope
into
shlb
fcmove
stc
cmp
sbb
addb
pop
ljmp
repz
cmpb
mov
mov
je
jle
arpl
out
push
sahf
notb
ss
or
push
xchg
push
insl
iret
xchg
shlb
fucom
inc
mov
xchg
ljmp
xchg
int
or
sbb
fwait
in
cmp
repnz
sbb
orl
out
aad
dec
push
pop
std
xor
push
jle
hlt
dec
mov
sti
pop
ja
mov
dec
add
xor
xlat
inc
fldt
mov
pop
imul
inc
pop
push
push
push
xor
jle
fisttps
sbb
xlat
inc
aam
xchg
mov
dec
adc
push
dec
push
mov
test
push
mov
push
ret
in
cli
cmp
fimuls
pop
stos
inc
or
or
push
adc
jp
ljmp
xchg
fidivrl
rcrl
cmp
pop
push
ds
iret
lods
fwait
and
cmp
int
repnz
xchg
addl
xchg
xor
lods
jns
ja
aaa
ret
out
jp
insb
mov
cltd
iret
int3
movsb
xchg
sub
insl
vaddps
and
inc
and
js
out
fildll
pop
push
shl
pop
stos
aad
lods
aad
fs
lcall
cmp
ret
mov
cmp
sub
loop
movsb
pop
push
stos
pushl
jmp
cmp
add
inc
push
pop
cli
ret
mov
stos
push
and
jo
jp
xchg
int3
ja
mov
or
sar
sub
adc
xchg
iret
notb
imul
inc
jg
outsb
and
mov
adc
lods
pop
xchg
inc
push
sbb
stos
sbb
lds
xor
outsb
inc
loopne
mov
mov
fs
xor
add
push
out
clc
xchg
sbb
out
insb
sbb
dec
inc
jl
cmp
ss
ror
daa
sbb
les
cld
mov
orb
cli
addl
or
xor
in
fstpt
xchg
sub
xchg
pusha
mov
in
cmp
cmp
popa
mov
pop
pop
push
nop
daa
lret
aaa
loope
mov
inc
xor
mov
outsb
add
pop
xor
pop
cli
xlat
sub
fdivrs
imul
cmpl
out
repz
test
cmp
jecxz
push
and
ds
les
shlb
xchg
xor
cmp
adc
cmp
test
sub
movsb
jo
mov
imul
sub
pusha
inc
and
lea
or
aaa
or
fs
dec
jle
pop
or
out
pop
cmp
pop
outsl
jl
fisubs
mov
rol
push
cmp
or
cmpb
ret
mov
cmp
repz
imul
mov
scas
fcmove
jl
add
and
pushf
dec
subb
sub
cmp
push
xlat
sub
icebp
cltd
nop
mov
jl
mov
ljmp
pop
je
outsl
inc
pop
psubw
xor
pop
icebp
es
sub
mov
mov
jl
les
jg
aad
xor
mov
dec
cmp
rolb
bound
out
jno
sub
sub
cmp
pushf
les
loop
call
xor
in
xchg
and
or
mov
jl
sarl
adc
xchg
mov
fdivrl
xlat
or
notl
jb
in
out
jbe
aam
das
xchg
pop
hlt
leave
lret
adc
out
stc
pop
mov
xor
add
push
inc
sbb
in
xor
data16
or
js
and
xor
call
jo
lcall
dec
jl
inc
test
sbb
clc
inc
arpl
jbe
xchg
mov
mov
outsb
xchg
loopne
push
cltd
push
fs
push
xor
sti
and
icebp
or
add
cmpsl
inc
ficompl
sub
inc
add
aaa
mov
fsubrl
in
loope
test
jp
pusha
pushf
mov
sahf
adc
les
and
sbb
into
pop
sbb
int
jne
call
outsb
daa
add
inc
cmc
loopne
pop
mov
push
cmp
xchg
mov
je
ss
dec
or
int
imul
inc
or
xor
xor
sub
je
jae
lods
sub
lret
sbb
dec
add
lret
les
sahf
mov
lods
lea
fmuls
ljmp
out
ja
mov
movsl
jo
ds
cmp
sbb
jo
sbb
mov
sti
pusha
cmp
sub
in
sar
sbb
aaa
sub
bound
add
adc
sbb
test
leave
jbe
arpl
dec
inc
into
leave
in
mov
pop
sarb
ja
or
push
ds
push
mov
add
aad
mov
es
repz
pop
loope
xor
inc
jge
call
scas
and
push
mov
sbb
jle
push
cmp
mul
jne
mov
add
jl
push
cmpb
shr
dec
fmuls
sub
test
call
cmpb
mov
fsubl
cwtl
test
xlat
lock
adc
movsb
stos
lret
or
lds
sub
inc
dec
pop
ds
cmp
dec
or
dec
dec
pop
mov
cs
popf
mov
mov
jno
push
sbb
popa
mov
cmp
shlb
mov
sub
fwait
int
or
les
cmc
pop
pop
add
out
cmp
fdivrs
cmp
or
dec
in
repnz
mov
and
daa
fisubs
mov
popf
int
jb
xchg
xchg
inc
lock
sub
mov
ja
in
inc
xor
out
xchg
lea
xchg
test
daa
jmp
je
rorb
popa
inc
nop
stc
jecxz
mov
out
imul
pop
and
clc
stos
sahf
and
in
test
cltd
sub
adc
and
push
imul
shlb
into
stc
and
mov
mov
movsl
mov
mov
out
mov
gs
test
ret
jmp
push
mov
pushf
lods
incb
sbb
stos
sub
in
dec
and
adc
arpl
or
pushf
push
loop
dec
inc
xor
xchg
pop
dec
arpl
enter
js
cmc
push
cltd
mov
cmp
xchg
aam
adc
mov
ret
cmpsl
pop
xchg
jg
inc
xchg
jecxz
sbb
mov
xchg
xor
mov
adc
mov
sub
jbe
mov
push
or
aaa
push
ljmp
mov
fldl
push
or
sahf
jns
jge
cwtl
imul
sbb
loopne
add
inc
add
test
mov
stos
call
or
mov
out
mov
sahf
push
in
es
push
sbb
push
jp
and
jmp
xchg
jno
dec
lea
movsl
jg
or
cltd
andl
mov
outsl
dec
dec
daa
sub
ror
roll
jae
mov
inc
xchg
pop
lahf
std
cmp
dec
fwait
mov
lods
lods
pop
sbb
mov
dec
addr16
mov
adcb
cmp
pop
scas
arpl
vmread
mov
bound
call
mov
mov
cmp
fdivrp
push
xchg
cmp
into
test
test
sbb
sti
xchg
cmpsl
sbb
mov
lods
pushf
loop
int3
push
fstpl
ret
xor
inc
jo
cmpsb
jnp
out
xchg
xchg
in
push
pop
into
and
sbb
sub
xchg
jnp
mov
cmp
push
sti
jbe
jae
test
push
xchg
or
jns
into
aam
std
and
jns
aaa
xor
int
and
stos
inc
xchg
aad
rolb
mov
aas
dec
and
test
scas
cmp
sbb
xor
jb
xchg
cmp
popa
xchg
jl
or
lret
mov
xor
inc
push
test
inc
mov
cld
mov
mov
ss
and
loope
lcall
mov
push
mov
sub
aam
sbb
push
ret
loope
es
xor
mov
and
pop
sbb
shll
ret
lahf
js
incb
cmp
lods
stos
fsubrp
lahf
cmc
add
adc
add
adc
mov
popf
jbe
dec
mov
xlat
and
dec
cmp
aam
lret
add
xor
or
jbe
int
mov
jnp
scas
sub
sub
enter
push
mov
add
icebp
jnp
sbb
push
jo
jb
push
gs
mov
aad
fisttpl
push
call
pop
cmpsl
ret
pmaddwd
clc
mov
rcll
mov
clc
jle
pop
repz
mov
mov
cmp
pop
xor
push
je
lock
shrb
pop
lea
sub
mov
or
cmp
aaa
lods
push
mov
lahf
shrb
sub
rcl
xchg
jp
inc
xor
test
and
mov
daa
insb
push
or
and
movsl
ret
orl
xor
xor
cmp
cs
mov
repz
rol
daa
xchg
test
rcrl
pop
jne
das
decl
lods
mov
sbb
sub
sbb
shrb
push
inc
jge
lea
cmp
inc
xchg
pop
inc
enter
in
mov
test
xor
mov
rclb
or
rcll
pop
jo
lret
cmc
jo
mov
mov
insl
xchg
dec
inc
ficoml
jns
mov
pop
mov
adc
add
mov
adc
movl
fldenv
push
jge
dec
and
inc
add
jno
lret
xor
pusha
dec
pop
arpl
mov
sub
add
lahf
lret
outsl
mov
cmp
sbb
xlat
fcmovbe
fdiv
cli
push
jnp
mov
loop
mov
outsl
aam
add
call
adc
add
sub
cs
pop
cmp
mov
add
fucomi
inc
sub
repnz
fst
or
mov
cmp
pop
push
loop,pt
nop
sbbb
add
xchg
or
pop
mov
in
mov
in
les
nop
es
inc
sub
lret
test
mov
mov
in
sub
cmp
das
push
ror
jbe
mov
add
std
xchg
jno
pop
mov
popl
jno
xchg
fidivrs
dec
inc
mov
sbb
add
sbb
pusha
mov
push
adc
jo
test
inc
sbb
out
shll
ss
in
out
shlb
jle
out
mov
out
fldl
test
out
mov
shll
mov
or
mov
decl
mov
dec
jbe
xchg
cmp
xchg
movsb
push
ret
imul
pushf
les
xchg
into
aad
stos
cwtl
inc
int3
ret
push
xchg
js
mov
push
push
cmp
push
stos
out
lods
push
in
sub
cmpsl
lret
pushf
jb
inc
xchg
mov
jle
fisttpl
lret
cmp
jge
bswap
shlb
jecxz
xor
das
int
rcrl
cmp
push
add
in
dec
ret
daa
xor
in
push
bound
dec
pushf
push
xchg
test
add
std
push
mov
scas
int
les
jmp
lcall
push
sarl
add
mov
sub
sbbl
lea
sahf
arpl
fidivrl
adc
mov
ds
es
mov
cmc
cmpb
lea
fwait
pop
ljmp
and
mov
pop
xchg
inc
and
sub
sbb
test
sbb
call
je
popf
sbb
sub
clc
enter
push
stos
cmpsb
mov
rolb
add
lcall
dec
sbb
aaa
cmpb
or
xor
xor
fisttpll
les
rcrl
call
xlat
ror
arpl
or
sbb
jecxz
pop
scas
arpl
jb
aad
dec
mov
xor
aam
cmp
dec
testb
jle
sahf
mov
mov
pusha
rcl
das
out
sahf
mov
mov
incb
data16
inc
sarb
jl
cld
push
in
aam
scas
movsb
div
dec
lret
sahf
in
mov
jecxz
push
jne
pop
xchg
and
jae
enter
and
shrb
and
out
mov
adc
aaa
out
xor
jbe
loope
jo
sbb
inc
into
cltd
out
out
aaa
push
je
sbb
rcrb
lock
std
ds
mov
inc
pop
sahf
mov
dec
ret
pop
mov
pop
push
loop
stos
or
sarl
repz
call
scas
or
push
sub
sbb
scas
out
rolb
cmp
lods
push
fldenv
icebp
mov
dec
xor
mov
sub
js
cmpsl
xchg
out
cmp
fisttps
lea
mov
ds
jg
sahf
out
jo
repnz
aam
add
mov
mov
out
js
sub
out
inc
mov
icebp
pushl
rcll
push
sub
roll
or
ret
and
lea
and
and
mov
sbb
sub
mov
cmpsl
inc
cs
xchg
mov
push
ret
rep
xchg
std
push
in
aad
inc
mov
outsb
fistps
lret
es
add
add
cmpsb
xchg
inc
sub
scas
inc
adc
mov
fs
jo
and
jmp
outsl
loope
mov
xor
fdivs
sub
outsl
rcll
dec
lret
sarl
test
mov
rol
add
or
jg
hlt
cmc
das
lret
xor
push
mov
xchg
fldt
je
add
inc
rol
cmc
ds
sbb
stos
scas
sbb
cmp
pop
stos
sbb
shr
mov
cltd
mov
sarl
xor
xchg
or
cmpsl
test
add
xchg
push
lea
cwtl
push
lods
shlb
xchg
adc
outsb
inc
dec
mov
mov
hlt
dec
push
push
outsl
mov
cmp
xor
lods
enter
cmp
out
pop
subl
popa
xchg
aad
xor
pop
dec
adc
es
out
mov
mov
rol
sti
jnp
add
push
or
sbb
mov
pop
and
and
and
pop
outsb
movl
cwtl
jg
xchg
sbb
cmp
js
stc
int
mov
cmpb
imul
or
stos
dec
out
stc
icebp
int
cmp
sbb
sbb
cmpb
xor
dec
rcll
loope
ret
jno
outsb
aad
iret
insl
inc
sbb
sbb
icebp
jmp
stos
stos
sbb
ficoms
outsl
dec
mov
dec
xor
ror
aad
in
sbb
into
push
push
jns
xchg
pop
cltd
xchg
test
sub
aad
pop
sub
aad
sbb
inc
and
into
scas
popa
mov
addr16
push
imul
add
popa
lcall
mov
lods
push
hlt
jp
cmc
or
jp
and
xchg
jmp
mov
rcrb
lcall
sub
adc
fwait
es
adc
nop
sbb
data16
nop
je
mov
aas
pop
clc
adc
adc
xor
aam
testl
push
pop
cmp
cmc
arpl
dec
jl
ret
in
movsb
sbb
and
ja
xchg
loopne
loope
fiadds
jb
jmp
mov
mov
orl
push
mov
loop
pop
jecxz
sub
adc
cmp
mov
jge
mov
jle
mov
mov
mov
add
or
cli
movsl
nop
cmc
jo
xchg
leave
add
adc
jbe
repz
data16
jle
out
cwtl
lahf
cmc
rep
mov
into
sub
push
xlat
cli
ret
cld
fldenv
ds
pop
adc
fs
mov
sahf
pop
cmp
shrb
sbbb
or
adc
lods
das
jns
and
out
cmp
push
cmp
and
mov
rclb
ja
xchg
lret
jp
xchg
xchg
dec
push
mov
jns
xchg
inc
rol
dec
sarl
int3
call
shrl
imul
pop
jb
icebp
sub
jno
sbb
iret
dec
sub
sub
push
incl
cmp
xchg
pop
test
pop
mov
sub
repz
push
xchg
pop
imul
pusha
adc
jns
mov
xchg
mov
jb
or
mov
dec
lret
adc
jl
test
cmp
cmp
cmp
jecxz
lods
push
cwtl
scas
imul
fwait
rorl
bound
fmul
inc
pop
dec
stos
test
mov
ljmp
xor
lahf
xchg
adc
xor
sahf
adc
mov
pop
mov
cs
or
cmp
dec
jmp
mov
adc
add
fstl
notb
inc
dec
mov
popa
push
lea
mov
fisttpll
ss
pop
push
mov
xchg
iret
flds
js
in
xchg
cmp
dec
enter
pushf
icebp
lret
push
out
dec
cmp
cmc
mov
xchg
push
ja
and
xchg
xor
push
or
ret
push
out
sbb
movsb
movsl
push
push
rolb
inc
loop
add
js
push
rorl
mov
addb
aad
popa
pop
jecxz
movsl
fistl
pop
xor
clc
xchg
ds
mov
popa
js
mov
or
sub
xor
mov
adc
js
icebp
or
sahf
pop
mov
cmp
or
dec
lret
mov
lods
lret
add
incb
push
pusha
lret
sbb
cmc
mov
mov
inc
and
enter
lcall
sbb
loope
jmp
and
test
mov
sbb
std
jmp
fs
fisubrs
pop
aas
insb
repz
lret
insl
stc
push
imul
jl
mov
fstps
dec
push
mov
fidivs
mov
cld
push
and
test
js
xchg
les
loop
pop
push
cmp
xor
sahf
enter
xchg
cmp
mov
imul
mov
andb
sti
or
push
cmp
pop
push
pop
loope
repz
das
popa
mov
dec
leave
sub
popa
loope
mov
enter
rcrb
lret
stos
or
neg
dec
leave
sbb
pop
jecxz
push
cmp
arpl
mov
test
push
popa
mov
xchg
add
lods
xchg
add
mov
pop
outsb
jne
lahf
and
dec
push
xor
sahf
mov
fcmovb
insb
mov
das
or
inc
push
adc
xchg
mov
call
cmpb
mov
out
test
aam
cmp
cli
dec
push
lcall
pusha
add
les
add
dec
jnp
xor
jnp
pop
sahf
fnstenv
sub
aad
add
dec
stos
and
pop
lahf
pop
push
xchg
sbb
insl
roll
out
pop
cltd
cli
sub
dec
mov
repnz
dec
div
nop
subl
enter
adc
mov
lret
sub
jno
int3
int3
loopne
inc
hlt
jno
cmp
stos
mov
fcmovnu
movsb
rolb
pusha
push
mov
or
xor
lds
psllw
int3
aas
inc
addr16
mov
aad
pop
xor
cmp
xchg
mov
dec
add
jo
sahf
mov
push
sbb
and
das
xor
fisubrs
dec
addl
pushf
mov
pop
mov
lods
jo
out
inc
pop
jg
fmull
inc
add
sbb
dec
sbb
dec
fdiv
shll
fcmovb
daa
sbb
in
addr16
push
nop
xor
arpl
adc
pusha
inc
dec
mov
rcrl
xor
jbe
or
sub
sbb
std
cmp
add
mov
or
adc
jne
push
arpl
int
jns
xchg
or
jnp
cmp
push
mov
mov
mov
lock
test
pop
stos
sbb
adc
orl
mov
pop
sub
adc
cli
scas
cltd
imul
xchg
aam
push
dec
mov
adc
fists
decl
adc
std
xchg
inc
popa
or
push
out
nop
mov
push
pop
shlb
daa
mov
and
rorb
adc
out
push
ret
lahf
or
es
mov
dec
xchg
xchg
sbb
jne
pushf
clc
inc
clc
enter
cld
add
add
ljmp
add
clc
cs
cmc
sbb
lods
dec
out
push
out
mov
js
aad
addr16
and
test
cmp
movb
add
imul
mov
mov
mov
cmp
fstpt
movsb
lret
jb
enter
sub
inc
sub
jp
cs
repz
push
sub
prefetch
adc
lret
fcoml
mov
loopne
hlt
insb
pop
jle
mov
mov
pop
push
pop
fs
ss
je
pop
sbb
aam
in
pop
sub
jge
add
lock
mov
jbe
inc
mov
imul
test
xor
lcall
jecxz
into
mov
test
rolb
shll
add
and
insl
in
subb
cmpsb
xor
add
sub
in
dec
out
out
sub
or
icebp
mov
cwtl
lret
lds
adc
outsl
add
inc
jne
mov
mov
out
lea
push
mov
inc
test
xor
mov
addr16
sbbb
mov
clc
repz
dec
ret
xchg
pop
icebp
jl
mov
xchg
incb
repnz
test
xchg
sbb
jl
sbb
or
jmp
add
fisubs
nop
into
clc
test
rcll
adc
in
les
mov
loope
fsubrs
int
pop
cmpl
xchg
in
int3
mov
in
inc
push
aas
mov
mov
jl
sahf
mov
filds
lcall
and
pop
in
pop
push
sub
cwtl
adcl
ret
inc
sbb
clc
inc
xor
in
xor
scas
or
and
js
loop
ja
test
mov
mov
or
ret
ja
or
pop
xchg
bound
and
jbe
in
lcall
push
push
in
sub
ret
adc
stc
rcrl
adc
cmp
jmp
jp
call
fs
cmp
adc
adc
mov
mov
cmpl
rorl
mov
push
cmp
cmp
loope
fldl
push
out
adc
push
arpl
lret
out
add
pop
xchg
jns
xor
cld
jb
movsl
pop
mov
test
lods
pop
mov
js
lcall
idivb
scas
cmp
dec
cwtl
lods
inc
outsl
outsb
push
inc
sub
mov
cs
sbb
add
cmp
stos
imul
inc
test
sbb
jno
nop
fld
fsqrt
out
arpl
mov
repz
je
sub
outsl
cwtl
lods
popf
fsubs
pusha
add
leave
testb
or
pop
cmp
push
aas
test
test
in
orb
add
cmc
lods
in
fucomi
ret
cmp
push
test
outsl
cltd
repnz
into
enter
pop
fdivl
out
aam
jae
mov
test
cld
mov
out
adc
popa
or
sbb
test
push
negb
mov
push
mov
bound
jae
loopnew
cmp
push
jecxz
scas
aam
mov
stos
cmp
xor
stos
pop
jno
lcall
cwtl
bound
sub
add
push
loope
sti
push
and
jbe
pop
jb
mov
mov
loopne
xchg
and
and
in
imul
xchg
cli
fcoms
fmul
ljmp
push
loopne
jg
inc
jo
cmc
sub
enter
jbe
sbb
add
fidivl
pop
icebp
das
idivb
adc
add
lods
scas
orl
ja
adc
rol
je
xchg
xlat
cwtl
movnti
mov
mov
dec
movsl
sbbb
push
mov
fisubs
mov
addb
pop
fs
or
in
arpl
cwtl
inc
cmp
mov
xor
jp
xchg
bound
dec
mov
mov
lret
xor
mov
fstps
js
dec
dec
push
xor
adc
sbb
push
push
hlt
test
or
ljmp
in
adc
dec
imulb
push
outsl
js
sarb
push
les
call
fcoml
icebp
jecxz
push
jae
jp
sar
pop
sahf
push
sbb
dec
enter
testl
mov
js
fwait
jg
dec
sarb
rorl
inc
cmp
mov
sub
mov
sub
popa
add
mov
stc
inc
push
xor
icebp
loop
test
js
lret
sarb
dec
mov
jo
jbe
sahf
push
fmull
iret
add
test
sub
push
push
fmull
xchg
pushf
stos
in
int3
das
incl
