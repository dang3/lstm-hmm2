mov
push
data16
mov
addr16
icebp
sahf
sub
sarl
lret
pop
inc
loopne
into
divb
sub
xchg
mov
mov
lock
sbb
ret
adc
mov
xchg
in
mov
push
in
jmp
mov
outsb
push
inc
adc
pop
push
push
fimull
and
push
jae
xor
lock
andb
jl
jl
and
mov
cwtl
or
in
mov
push
push
into
pushf
outsl
mov
sahf
in
mov
pop
jb
sahf
pop
xor
push
fiaddl
jno
lret
jne
pop
mov
xchg
adc
sub
inc
and
xchg
outsl
mov
stos
jmp
and
js
ds
jne
jae
imul
xor
mov
dec
adc
bound
es
daa
or
xchg
mov
setl
mov
movsbw
movl
not
pushf
bswap
movb
lea
push
pushf
movl
pusha
mov
mov
movb
pushl
popl
pushf
pushf
pushf
pushl
ret
std
clc
or
mov
xor
or
stos
mov
or
and
popa
es
pop
cmp
test
mov
adc
imul
xorl
mov
shll
fnop
dec
push
pop
pop
sub
sbb
push
icebp
popf
stos
mov
jle
xor
test
jle
or
xchg
lret
cmp
stos
mov
hlt
rcr
das
cmp
ss
mov
mov
movl
pushf
push
pushf
movw
lea
jmp
pushl
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
jo
loope
push
mov
loop
imul
cmpl
es
mov
scas
mov
adc
mov
mov
fidivrs
cmp
in
js
out
mov
fidivl
pop
enter
sbb
dec
dec
fdivl
leave
cmp
jg
subb
adc
xchg
mov
jmp
sbb
in
xchg
clc
es
push
bound
cmpsl
inc
out
jb
adc
lods
mov
sbb
insb
aam
dec
jmp
loopne
ds
lods
movl
pusha
mov
mov
push
lea
jmp
push
pushl
popl
pushf
pushf
push
pushf
pushl
ret
xorb
leave
jmp
das
sub
mov
and
mov
mov
daa
dec
or
mov
iret
in
jecxz
or
dec
arpl
popf
sbb
daa
mov
rol
testb
mov
std
adc
stos
ljmp
stos
pop
sbbl
mov
add
mov
mov
pop
sbb
or
clc
mov
mov
mov
popf
jmp
daa
pop
xorl
inc
jl
flds
xlat
aam
div
test
push
jae
pushf
icebp
inc
mov
pop
mov
int3
lret
pop
or
adc
lahf
outsl
push
sbb
int
in
stc
xor
popf
dec
jo
and
stc
outsb
push
adc
in
call
pop
mov
xchg
and
xchg
rcrl
js
ljmp
test
mov
push
pusha
lea
je
movzbw
mov
mov
mov
setns
push
pushf
lea
pusha
jmp
call
add
dec
outsl
arpl
inc
jb
gs
pop
ss
pusha
cmp
mov
jmp
push
bt
pushf
mov
sub
movl
clc
stc
test
cmp
push
pusha
pushf
jmp
adc
or
push
mov
push
or
cld
or
jo
mov
inc
unpckhps
xchg
mov
inc
mov
in
or
pop
xchg
cmp
inc
sbbl
test
or
push
pusha
pop
test
pop
lods
adc
aaa
imul
dec
add
sar
mov
pusha
pushl
test
add
bt
pushf
pushf
pushf
mov
cmc
test
pushf
stc
test
call
pusha
not
setge
jmp
sub
shld
mov
rcl
daa
aas
mov
add
rcl
shr
add
bt
shl
bsf
mov
pushf
push
pushf
or
jmp
shr
mov
stc
pushf
jmp
movl
push
lea
je
not
xchg
lea
pusha
movzbw
mov
call
mov
mov
lods
bt
cmc
stc
stc
add
bt
cmp
bt
jmp
cmp
jmp
jmp
clc
cmc
not
bt
call
ret
cli
cmc
add
mov
in
in
clc
adc
je
inc
inc
clc
fdivrs
cmp
or
in
inc
jae
mov
mov
xchg
inc
or
out
push
lret
fistpl
sub
pusha
lret
fldl
sar
add
mov
push
jecxz
or
or
xchg
xor
mov
mov
iret
out
mov
mov
jge
stc
pop
push
ret
dec
pop
mov
shr
jae
cmpsl
ror
lcall
daa
pop
push
jnp
xchg
aam
cmp
mov
push
mov
lock
inc
inc
push
jl
mov
mov
sbb
movsb
mov
adc
ret
xor
inc
or
add
push
xchg
cmp
adc
mov
pop
pusha
aad
cmc
adc
popf
vpsubw
adc
std
scas
ss
mov
add
mov
mulb
sub
ss
mov
or
and
insb
jle
xchg
mov
outsb
sub
popf
scas
pop
daa
xor
sbb
ljmp
addb
pop
lret
loop
mov
into
int
xchg
adc
push
add
pop
shl
mov
mov
enter
mov
dec
pop
outsb
xor
jne
scas
cwtl
pop
inc
lcall
rclb
push
orl
push
push
dec
fldl
and
nop
repnz
mov
movl
call
mov
jmp
mov
bt
adc
cmc
mov
pushf
xchg
jmp
jmp
leave
inc
mov
lret
test
mov
mov
inc
dec
lds
mov
mov
leave
inc
mov
leave
lret
inc
mov
inc
stos
mov
inc
lret
xchg
mov
inc
mov
mov
cmpsl
xchg
inc
dec
movsl
test
iret
lret
mov
das
push
push
jge
jne
outsl
outsb
and
cmp
daa
cmp
and
jmp
cmp
popa
daa
pop
mov
out
xor
jb
repnz
cltd
cld
push
orb
sub
fucom
notl
inc
ja
scas
repz
daa
or
sub
sti
add
fistl
pusha
add
mov
popl
pop
and
in
in
cld
jl
outsb
dec
pop
pop
pop
stos
les
sub
sbb
jae
xchg
mov
iret
loope
icebp
adc
out
or
out
cmp
sbb
fbld
dec
lahf
pop
cmp
jno
sbb
xor
adc
stos
fsincos
cli
fs
mull
movsb
mov
roll
mov
xchg
pop
cmp
ret
sbb
sub
jnp
in
sbb
aad
add
adc
fildl
aad
dec
hlt
loope
adc
out
in
sbb
std
jmp
add
testl
int
test
shr
sbb
mov
pop
adc
jne
or
sar
xchg
hlt
add
ljmp
loope
in
std
mov
insl
movsb
jecxz
out
cmpsl
jge
outsb
mov
cmp
movw
sub
adc
mov
cmc
and
loope
sub
mov
xchg
jg
push
inc
mov
imul
add
stc
mov
neg
pusha
dec
bt
cmp
stc
neg
call
sub
add
mov
pusha
adc
cmc
adc
and
push
sti
jl
test
int
lret
push
roll
hlt
and
push
dec
inc
push
arpl
popa
ja
pop
outsl
test
push
imul
sub
addb
mov
lahf
mov
enter
and
jl
jno
pop
imul
loop
repnz
add
sbb
mov
adc
pop
loopne
lea
xchg
rol
adc
cmp
ret
dec
dec
fs
mov
pop
or
xchg
movsb
mov
adc
pop
jg
test
xor
or
incl
das
dec
xor
mov
mov
push
and
data16
das
xor
sbb
mov
mov
ljmp
ds
adc
cmp
xchg
push
pusha
jp
rclb
sbb
push
xchg
in
lods
mov
xchg
gs
arpl
add
pop
cs
aaa
add
and
movsb
cmp
and
in
jb
adcb
jg
sub
inc
and
push
js
adc
sub
push
jbe
jg
mov
mov
iret
lahf
rcpps
loop
xor
mov
stos
leave
in
jbe
test
cs
push
popa
jge
sub
rolb
gs
cltd
mov
xor
jmp
inc
inc
dec
jl
add
and
add
aaa
mov
and
shl
bsr
mov
sbb
shr
movzbl
mov
call
bswap
mov
pusha
pushf
pushl
movb
lea
jmp
pusha
movl
movb
mov
push
pushl
ret
pusha
add
call
clc
dec
dec
call
ja
mov
sub
jge
in
leave
ret
outsl
insl
insl
movsb
les
adc
stos
int
xchg
mov
decb
cmp
push
mov
aaa
and
push
xchg
mov
pushl
dec
stc
test
test
shl
push
setno
lods
pushf
jmp
cmc
stc
sub
jmp
add
shr
sub
shld
bsf
shr
xor
bsr
sbb
rol
mov
shr
sbb
adc
shrd
add
movzbw
sbb
add
bswap
mov
cmp
test
shr
jle
pushf
cmp
lea
jl
pushf
lea
je
bt
call
mov
mov
mov
pushf
mov
lea
call
pushf
movw
lea
jne
jmp
in
inc
cmp
shr
in
sbb
xor
push
jle
mov
sarb
mov
mov
lea
cmpsl
fsts
das
frstor
fisttps
or
pop
shl
pop
dec
mov
pop
jg
sarb
dec
xor
inc
inc
inc
dec
jl
popf
cpuid
nop
call
pushl
movw
dec
cmc
cmc
pushl
ror
pushl
movw
cmp
push
jmp
push
lea
movsbw
movsbw
pushf
lea
jl
movzwl
bswap
pushf
lea
not
call
not
clc
cmc
rol
call
jmp
push
test
cld
adc
xor
xchg
cmp
aaa
dec
cmp
inc
int
inc
addr16
adc
pop
inc
repz
mov
shl
in
sub
adc
pop
mov
and
ret
push
mov
fiadds
cmp
inc
das
add
pushf
lea
jne
lahf
mov
push
lea
jmp
int
ds
adc
out
in
and
stos
movsl
mov
mov
lods
lahf
pop
pop
int
pop
jp
popf
dec
xchg
imul
dec
cli
nop
cmp
js
mov
cmp
inc
lcallw
fisubs
ss
mov
add
dec
dec
outsb
call
icebp
mov
mov
mov
mov
mov
aas
test
jnp
add
jmp
xchg
pushf
pusha
pusha
movl
pushf
movl
pushf
push
push
lea
jmp
lods
stc
add
cmp
neg
bt
pushf
mov
xor
jmp
lea
ja
call
pusha
clc
add
call
into
and
cld
adc
test
add
cmp
pop
push
push
pop
xor
xor
dec
jne
push
int
ret
lods
jbe
aas
mov
lods
mov
push
fnstenv
adc
repnz
and
sub
pop
mov
dec
negl
inc
movsl
adc
lea
push
push
pushf
pushl
ret
call
call
mov
jmp
jle
js
adc
push
sbb
inc
sbb
push
repnz
fwait
xchg
nop
imull
or
mov
or
jmp
pop
xor
xchg
mov
inc
xor
push
ret
aas
push
sbb
movsb
mov
dec
outsb
mov
mov
xor
cli
mov
inc
push
mov
jmp
jl
int
incl
add
cli
adc
enter
xor
jp
cmc
dec
pop
ja
outsb
test
pusha
mov
out
insl
jae
jg
jnp
xlat
inc
sbb
cmpsl
or
test
add
or
jne
and
cmp
orl
popa
imul
imul
sahf
popf
lock
cltd
dec
mov
faddl
adc
and
shl
inc
ror
adc
inc
push
push
jp
mov
mov
dec
bound
out
cli
mulb
add
adc
mov
fstl
mov
rcl
movsb
test
ret
test
and
je
sbb
cmc
ret
int
dec
mov
mov
cmp
test
xor
cmp
aas
pop
in
sbb
or
adc
fcomps
addl
mov
mov
loopne
lahf
test
push
jns
xchg
movsl
int
or
iret
int3
adc
or
fs
je
and
inc
shr
mov
bt
mov
shld
xor
add
rol
shl
add
rol
mov
pushf
pusha
pusha
bt
test
movw
mov
call
mov
pushf
lea
ja
pushf
pusha
push
push
lea
jb
cmp
cmpb
pushf
pusha
pushf
lea
jne
bswap
add
call
test
test
cmp
pusha
call
movl
jmp
mov
bswap
call
call
neg
bt
add
bt
jmp
or
mov
out
push
fcmovnbe
mov
cmp
and
adc
jnp
mov
xor
mov
jl
add
and
push
jno
jns
test
das
aas
dec
adc
xor
dec
outsb
insl
push
inc
ja
sub
rcrl
clc
pusha
jmp
mov
aam
inc
stc
adc
add
std
jge
insb
imul
ffreep
xorb
add
xor
sahf
xchg
mov
in
into
lret
jmp
je
ja
pop
sbb
push
sbb
push
insb
cmp
cmp
stc
push
roll
sub
or
add
cld
cli
sarl
rcl
repnz
pop
mov
jno
mov
mov
sti
daa
ljmp
mov
sbb
inc
lahf
xor
and
lods
nop
lds
mov
jno
js
pop
andb
xor
push
xchg
adc
scas
dec
push
adc
mov
and
imul
xchg
enter
lea
je
cmp
bt
sar
add
inc
stc
sub
rcr
setno
add
shr
push
and
test
mov
jmp
scas
lods
test
adc
test
adc
sub
or
xor
and
imul
pop
sub
mov
hlt
pop
or
cmp
dec
shl
xchg
dec
fisubs
popa
dec
sbb
lock
adc
pop
aas
out
pop
xchg
cmpsl
mov
cld
pop
sysret
int3
loop
fs
xor
pop
fwait
mov
outsl
ret
loope
rcr
pop
aas
outsl
jg
jnp
mov
out
dec
push
xor
arpl
lret
jge
movzbw
mov
mov
setge
call
pushf
mov
pusha
pushf
lea
jmp
sti
push
dec
notb
jb
jle
rcl
push
xor
add
cmp
pop
cmp
movb
adc
div
notl
ss
adc
mov
in
ljmp
push
outsb
dec
ret
mov
xchg
cmc
shrl
mov
jp
jmp
ja
xchg
mov
rcr
sbb
jae
xor
inc
pop
and
out
adc
mov
pusha
xchg
xchg
lods
push
dec
clc
sub
pop
xchg
insb
daa
xor
and
in
cmp
fbld
imul
or
cmp
jno
xor
repnz
mov
pop
push
jle
xchg
jl
sub
cmp
adc
hlt
push
sbb
push
stc
movsl
push
adc
sti
jo
mov
lret
xchg
popf
bound
ret
sub
and
adc
iret
stos
outsb
xor
das
sub
pushf
xchg
movsb
sbb
out
ret
mov
xchg
push
sub
xor
sbb
pusha
and
out
cltd
adc
cmc
mov
sarl
out
cld
or
lret
movsb
xchg
ret
push
push
xchg
fstps
xor
xchg
lods
lock
lock
loope
push
pop
dec
add
loopne
rdmsr
inc
dec
dec
push
push
push
push
frstpm(287
in
imul
loope
adc
inc
mov
dec
cmpl
lret
jmp
daa
mov
fcmovb
sahf
pushf
rcr
jo
push
adc
and
push
and
jmp
sbb
in
jmp
lret
test
inc
mov
sub
cmp
xor
and
cmp
mov
insl
xchg
sbb
outsb
push
fsubrs
rclb
fisttpl
fxam
in
push
jg
push
imul
das
daa
cmp
ret
call
pushf
pusha
pushl
adc
mov
pushl
lea
jmp
cld
xor
cmc
adc
daa
sub
xchg
add
pop
mov
pop
lcall
mov
addr16
cltd
xchg
movsl
ret
mov
lret
cs
jmp
xchg
fsubrl
dec
sbb
in
andl
cmp
ret
movsb
jg
or
sbb
leave
lea
cmp
daa
scas
shr
mov
fsub
mov
out
sbb
push
aaa
aaa
pop
in
rcr
nop
mov
sub
cmp
pushf
and
loop
scas
push
ja
and
test
pop
jo
xchg
mov
mov
call
in
mov
xchg
icebp
out
adc
fiaddl
or
mov
test
xchg
mov
aad
test
faddl
vpmullw
stc
and
push
pop
sbbl
enter
pop
rolb
add
sbb
sub
pop
jge
outsb
sbb
cmp
dec
dec
sti
stc
out
sbb
ret
in
bound
mov
comiss
lods
cmp
dec
outsb
xor
pop
aaa
sti
xorb
jb
lds
aas
outsl
lahf
and
sbb
movsl
mov
nop
test
xchg
lds
in
mov
and
popf
scas
jae
lahf
mov
sbbb
cmp
das
mov
sbbb
cs
bound
jmp
and
sahf
and
push
mov
adc
push
out
add
push
jae
mov
jmp
inc
loopne
dec
lret
nop
xchg
push
insl
orl
dec
pop
jnp
push
nop
jo
sbb
addr16
iret
fldl
xor
sbb
add
sbb
inc
inc
jb
mov
es
outsb
test
and
je
pusha
mov
pusha
lea
pushf
jmp
pushw
popfw
movb
pushl
inc
call
jecxz
push
repnz
xor
push
jg
ja
mov
sub
sbb
add
iret
mov
mov
ret
repnz
dec
test
outsb
pop
adc
pop
and
cmc
inc
lds
fs
clc
cmc
and
inc
int3
out
sub
dec
push
in
scas
lds
dec
inc
pop
mov
or
pop
je
call
pushf
lea
jne
cwtl
jmp
push
aam
mov
bswap
aad
aas
sub
dec
ror
shl
push
rcl
push
shrd
push
not
aad
mov
sub
push
not
cwtl
lea
jmp
sub
icebp
notl
insl
outsl
cltd
mov
jecxz
xor
jge
scas
out
or
daa
add
rcrb
mov
cli
jg
movsb
mov
stos
and
xchg
push
xorb
inc
push
jle
xchg
scas
lods
adc
dec
jg
into
fbstp
repnz
lock
push
cmp
mov
mov
jns
cmp
pusha
addb
sbb
mov
cli
lock
int3
jecxz
fsub
js
notb
and
aaa
cmp
or
mov
xor
pop
or
popa
pop
push
loopne
stc
jae
mov
push
add
out
xor
gs
insl
inc
mov
mov
das
cmp
imul
fimuls
xor
dec
dec
enter
fsubl
xchg
mov
or
xor
outsl
xlat
mov
push
pop
js
inc
cmp
adc
adcb
nop
push
pop
pop
mov
sbb
sub
xchg
xchg
add
jg
ret
loope
imul
sbb
cmp
lods
and
ljmp
mov
cmp
inc
outsl
jno
jno
inc
aas
std
iret
cmp
imulb
sub
movsb
fisttpl
in
mov
cld
xor
pushf
xchg
jl
aaa
imul
adc
cmp
mov
adc
ror
cmp
leave
rep
fisttpl
sahf
shrb
imul
jl
addb
sub
test
movb
pushf
movl
movb
mov
lea
jmp
mov
call
pusha
pushl
pusha
movl
push
push
lea
jmp
stc
stc
test
or
jmp
ds
out
adc
or
inc
outsb
je
mov
ret
xchg
xchg
xchg
cmp
add
and
sbb
inc
inc
inc
arpl
dec
ret
xchg
mov
push
add
subb
cmp
add
out
scas
jo
sbb
popa
aaa
inc
sub
xor
lods
xchg
jno
mov
mov
push
sbb
adc
add
mov
scas
lods
insb
int3
inc
mov
jmp
lcall
add
out
dec
inc
icebp
or
in
pop
fsubs
leave
test
jo
xchg
xchg
lock
dec
dec
dec
rcl
sub
cmc
jl
jne
pop
and
push
cmp
mov
es
call
or
push
add
and
fcmovnu
adc
pop
call
cmp
xor
mov
sub
mov
jle
repz
fsubr
sbb
sbb
movsl
dec
ja
inc
push
mov
outsl
xor
fldt
sarl
movsl
int
jmp
test
mov
pushf
xchg
call
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
faddl
mov
jmp
call
jmp
test
or
push
pusha
pushf
jmp
ret
out
adc
xchg
mov
sub
push
jne
pop
pop
shrb
push
cli
lods
push
push
in
push
add
sti
icebp
repz
jecxz
pop
imul
push
add
dec
dec
imul
cmp
jp
sub
int
test
int3
xchg
mov
or
jmp
pop
sahf
xor
movsb
sub
stos
mov
sub
enter
xchg
mov
jne
inc
dec
adc
mov
sbbb
mov
mov
rol
xchg
xchg
mov
cmp
lahf
scas
stos
add
outsl
push
repnz
adc
imul
std
das
dec
ja
popf
out
stos
mov
das
test
ret
lods
hlt
adc
sub
or
mov
sub
in
inc
fnstenv
mull
pop
add
sbb
data16
push
daa
inc
negl
dec
mov
mov
or
sub
push
jbe
adc
jge
or
and
lds
ja
hlt
ljmp
adc
in
cli
mov
ja
mov
in
out
loop
push
fcom
ror
out
dec
adc
fstp
lock
mov
fxam
loope
push
loope
xor
cmp
xchg
pop
dec
dec
dec
sub
mov
rcl
rclb
xor
lock
test
mov
or
loop
push
in
pop
shrl
mov
mov
push
ror
movsl
movsb
and
std
mov
loope
lods
dec
lock
pop
loopne
test
loop
repnz
jb,pt
lahf
lds
mov
stos
daa
or
lds
mov
mov
ss
fstl
fsubr
adc
loope
adc
je
adc
stos
daa
push
jns
mov
test
adcb
adc
adc
loopne
sbb
lea
and
dec
fst
push
lea
or
xor
int
sbb
in
pop
fwait
ret
pop
jnp
push
ljmp
imul
into
xchg
lea
addb
out
or
sbbl
push
mov
imul
pop
jb
mov
cwtl
mov
mov
sbb
bound
adc
in
adc
lds
bound
mov
ja
in
pop
lea
sub
dec
jl
mov
loopne
cmp
push
mov
cmc
std
adc
bswap
mov
call
mov
pusha
call
out
loopne
adc
test
lcall
mov
and
cmp
sbb
les
fisttpl
int3
into
xchg
xchg
leave
mov
dec
cmpl
pop
js
pop
imul
adc
or
cli
lret
jecxz
mov
fcmove
test
cmp
cmp
out
sbb
sub
xlat
aad
dec
pop
subb
out
out
jne
sub
cmp
sbb
in
jl
jmp
xor
or
sbb
ror
aaa
sti
or
sbb
aam
cmpsl
cmpsb
add
xchg
xchg
cwtl
mov
push
test
or
lods
leave
icebp
jmp
inc
mov
cli
cli
push
data16
jb
xor
jb
push
cmp
call
sbb
adc
into
in
out
push
xor
xor
fbld
imul
cmp
fs
ret
jb
add
popa
cmp
xorb
add
sbb
insl
outsl
iret
enter
fucomi
lods
mov
add
push
push
fwait
lods
insb
mul
inc
insb
imul
mov
fcomp
aam
and
pop
pop
mov
lret
inc
inc
jne
xchg
outsb
xor
leave
mov
ss
xchg
jge
out
in
inc
out
pop
mov
fadds
dec
dec
insl
lea
adc
dec
jne
mov
addr16
das
add
aas
pop
sar
and
inc
and
xor
push
add
pushf
pushl
lea
jae
bsf
dec
rcr
mov
not
mov
neg
pushf
mov
lea
pusha
bt
sub
stc
mov
repnz
pusha
lea
jne
ror
rcr
bsr
mov
lea
rcl
sub
pushf
sbb
lea
lea
stc
jmp
push
andnps
fwait
jmp
push
xchg
sbb
mov
shrb
leave
or
xor
sub
inc
inc
cmp
pop
push
or
es
cltd
sbb
imul
fsubrp
repz
mov
or
jns
mov
mov
cmpl
out
out
push
mov
cmp
test
ljmp
mov
rcrb
xchg
outsb
mov
push
xlat
fwait
bswap
xchg
push
xchg
sbb
adc
loope
xor
mov
adc
jl
sub
movsb
cmpsb
or
mov
movsl
imul
pop
xor
add
mov
cs
js
aaa
adc
xchg
call
mov
loope
and
es
cmpsl
sub
mov
adc
sbb
sbb
inc
repnz
loopne
ret
int3
repnz
adc
sub
jg
ja
loope
shlb
xor
cld
fcoms
mov
into
out
xor
mov
mov
sbb
mov
pop
and
inc
fildl
adc
add
mov
dec
movsl
mov
mov
or
push
out
cltd
enter
leave
pop
fsubl
bound
pop
sub
or
and
jo
es
cli
pop
aad
pushf
add
jmp
and
push
stos
fidivl
sti
xchg
fmull
pop
pop
cwtl
fiaddl
js
out
fxam
mov
pop
mov
sbb
xchg
xchg
sub
iret
bound
arpl
or
push
sbb
or
ret
outsb
pop
push
loope
mov
int3
and
add
fwait
lock
rclb
ljmp
es
cmp
in
xchg
pop
pop
and
enter
loope
push
xchg
ljmp
fdiv
mov
adc
sub
outsb
orb
pop
addr16
add
adc
incb
lcall
repnz
push
ss
in
ss
jp
nop
push
add
push
lods
lret
repnz
data16
cs
sbb
loope
ljmp
ljmp
loopne
pop
rorb
xlat
xlat
pop
out
fcoms
push
int
fs
push
gs
sti
sub
cmp
cltd
adc
in
adc
jp
test
es
fcomp
call
cli
ljmp
aaa
or
jp
xlat
or
inc
and
pop
add
jle
xchg
mov
or
xorb
mov
sbb
or
out
dec
adc
and
loope
orb
decl
cmpsl
add
cmp
push
fldenv
fldl
lcall
push
mov
fnstcw
icebp
pop
in
sub
into
adc
add
cli
fucomi
add
adc
dec
lcall
dec
pop
jbe
push
fs
adc
adc
or
test
imulb
cld
mov
pop
xchg
jl
in
pop
ds
or
cli
xor
jg
pushl
sub
decl
fdivl
add
clc
lcall
and
imul
fcmovu
jge
in
mov
jp
inc
out
data16
jge
cli
cmp
es
clc
out
sbb
mov
sub
fidivrl
jge
cmp
adc
and
mov
clc
inc
rclb
or
data16
xor
ds
cs
sub
cwtl
fidivl
sbb
add
movb
loop
or
dec
data16
mov
push
or
out
cmpsb
dec
xor
mov
lcall
sub
fldenv
mov
fcmovb
or
cs
xor
push
or
and
lcall
mov
rcl
enter
lcall
data16
scas
push
jbe
into
into
lahf
mov
xchg
push
ljmp
fistl
mov
subb
mov
add
lret
mov
adc
xchg
mov
jge
lcall
add
orl
jne
scas
test
xchg
lret
pop
pop
ss
mov
or
pop
push
push
pop
mov
mov
and
mov
cs
pop
cli
lcall
mov
imul
pop
pop
fdivrp
subb
call
lea
push
lock
out
pop
sbb
pop
repnz
push
repnz
sub
adcb
push
adc
add
pop
pop
hlt
call
dec
inc
fwait
dec
pop
push
lock
inc
jl
js
cltd
adc
pop
test
dec
nop
adc
dec
sub
add
sub
lea
arpl
pop
in
or
out
std
xchg
lods
arpl
into
sahf
or
int3
lcall
or
pop
pop
call
scas
stos
xchg
cmp
loop
push
clc
fiaddl
mov
stc
stc
out
out
add
sahf
push
mov
xor
adc
hlt
call
testb
aam
sbbb
pushf
xchg
push
add
lcall
stc
adcl
add
pop
mov
jb
pop
and
pop
sbb
ficoms
hlt
jp
repnz
imulb
inc
decl
push
hlt
jp
xor
xchg
jmp
es
sbb
and
push
repnz
cmc
sub
shrl
mov
sub
mov
adcb
jbe
ret
or
add
fs
and
jnp
pop
loop
mov
jnp
add
in
dec
outsb
cmp
ficoml
cld
add
stos
push
jp
jmp
dec
loop
or
add
cli
or
fisubrl
and
inc
cmpsb
jge
ss
rorb
add
jo
pop
sbb
and
stos
lds
ss
sbb
aas
subb
outsb
fadd
add
pop
test
add
subb
jge
cli
sbb
loop
mov
jp
ljmp
out
outsb
add
icebp
or
aas
or
mov
leave
or
adc
fcom
push
pop
repnz
pop
bound
aaa
mov
sbb
push
lret
mov
cmpsl
mov
or
add
cmp
sbb
xchg
into
cld
ljmp
mov
mov
bound
xchg
sbb
out
data16
mov
mov
pop
or
movsb
sbb
rcll
bound
push
push
mov
xchg
pop
inc
dec
pop
adc
cmpsb
and
and
mov
pop
loop
stos
sbbl
data16
xchg
call
and
or
mov
nop
adc
xchg
inc
dec
add
adc
cmpsb
and
icebp
and
add
loop
pop
insl
imul
scas
pop
pushf
pop
adc
gs
mov
mov
ret
add
push
jle
hlt
rclb
xlat
add
pop
inc
lcall
inc
xchg
xlat
cmpsb
jmp
lcall
jmp
inc
jmp
jge
dec
dec
inc
pop
sbb
push
jge
lcall
add
popf
push
pop
nop
xlat
add
ds
lcall
pop
jp
xlat
mov
pop
lcall
ljmp
mov
pop
lods
mov
pop
pop
lret
add
dec
jmp
jge
ljmp
dec
cli
repnz
cmpsb
fmul
adc
nop
add
shlb
push
sub
ljmp
scas
mov
fdiv
mov
clc
mov
mov
out
lret
inc
sub
pop
pop
dec
mov
or
int3
in
mov
das
lcall
add
stc
mov
repnz
push
stos
lods
insl
pop
lcall
pop
xor
xlat
divb
pop
stos
inc
pop
cmp
outsb
inc
outsb
ficoms
or
pop
cmp
push
adc
xchg
pop
mov
sbb
into
adc
add
es
mov
xor
adc
cli
fistl
mov
dec
cli
jge
xlat
cli
cmp
stos
inc
lock
cmp
adc
stc
out
pop
in
stc
sar
adc
repz
lock
xor
std
scas
data16
mov
jnp
pop
cmp
pop
lods
add
repnz
mov
out
mov
mov
lcall
jbe
pop
lods
xchg
pop
lds
ss
or
scas
cli
sbb
fcmove
jge
in
lret
fimull
rclb
lcall
push
mov
add
and
jle
or
sahf
and
or
lret
sbb
ja
pushl
xor
mov
mov
or
xor
pop
sarb
sbb
jb
push
push
int3
add
pushf
and
dec
or
push
mov
repnz
push
or
sub
stos
jns
cmp
jle
add
xchg
add
pop
sbb
or
and
or
cmpsb
push
call
cli
and
loop
rcrl
pop
in
out
cmpsb
icebp
sahf
inc
dec
cmpsb
push
add
cli
and
inc
pop
xchg
lock
pop
sbb
cmp
mov
ljmp
fwait
mov
pushf
mov
rclb
mov
divb
lods
or
roll
movsb
loope
lock
adc
ficomps
pop
dec
pushw
fsubr
add
mov
cmpb
out
imul
mov
push
adc
divb
lret
push
lea
and
sti
call
lods
pop
icebp
rorl
lods
pop
add
ljmp
cmpsb
testb
lock
xchg
pop
repnz
outsb
das
mov
inc
mov
xchg
shl
stc
adc
data16
push
mov
bound
mov
loope
pushw
lcall
test
push
icebp
scas
jmp
mov
imull
repnz
push
mov
bound
cmp
in
and
add
mov
dec
into
dec
pop
shl
or
jle
data16
fistpl
cmp
shr
or
out
inc
or
add
pop
imul
icebp
sbbb
repz
data16
jbe
pop
add
pop
push
mov
pop
cmc
fdivrl
mov
dec
pop
incl
inc
fidivs
out
mov
lea
rcr
lret
dec
std
push
pop
js,pn
pop
sbbb
pushl
ljmp
mov
lret
inc
outsb
lret
out
dec
dec
mov
jbe
test
out
mov
mov
sbb
jmp
adc
test
adc
insl
pop
cmp
repnz
sar
mov
outsb
icebp
xchg
cld
notl
mov
adc
scas
xchg
pop
psadbw
xorb
repnz
ficoms
jle
out
mov
sub
ficoms
and
mov
ds
push
jp
rclb
dec
mov
jecxz
outsb
dec
cld
dec
xor
push
scas
cmp
inc
inc
dec
pop
js
js
lods
out
fcmovnb
pop
ret
insb
dec
add
cli
mov
loop
cld
xchg
jge
dec
xchg
and
fdivrl
pop
jge
jmp
ljmp
lcall
shll
xchg
shlb
push
add
sbb
lcall
mov
faddp
adc
sahf
jge
ljmp
scas
out
fcmovnbe
jb
repnz
pop
sar
hlt
xchg
cli
rorl
lods
mov
mov
repnz
pushf
or
fisubrl
jg
out
das
repnz
pop
pop
pop
test
lcall
fisubs
lods
mov
fisubrl
data16
push
pop
adc
cmp
nop
pop
xor
ficomps
sahf
pop
mov
int3
adc
xlat
adc
test
pop
fisubs
sub
dec
adc
pop
cld
cmp
lods
pushw
cli
ljmp
nop
or
faddl
jp
sbb
push
or
sbb
out
inc
rcrl
push
mov
xchg
scas
loop
invd
xchg
notb
cld
push
stos
cmp
cmp
or
cli
test
push
test
jbe
pop
sbb
dec
ss
mov
jle
dec
sti
loop
pop
xchg
cmp
add
sbb
imulb
bound
mov
lcall
dec
in
dec
xchg
push
or
aad
stos
scas
sbb
mov
or
jle
dec
adc
or
sbb
and
jae
les
mov
out
sbb
scas
loop
fcmove
or
pop
mov
popf
inc
push
or
mov
mov
push
or
daa
pop
repnz
pop
loop
xchg
mov
pop
push
sub
mov
roll
jge
pop
fxch
dec
sub
or
or
setae
ud0
adc
push
popf
adc
out
cmp
nop
adc
pop
insl
jle
adc
addl
jge
xlat
pop
int
push
pop
cli
popa
sahf
pop
add
push
ret
ucomiss
adc
lea
dec
and
cmovp
test
adc
sub
dec
pop
outsb
add
inc
push
sub
fidivl
mov
std
in
fdivrl
sbb
pop
out
out
fmulp
push
ret
test
jge
nop
xchg
cmp
pop
cltd
into
or
mov
dec
sub
loop
ret
aam
cmpsl
and
xlat
popa
test
icebp
addr16
adc
xchg
jbe
add
scas
mov
adc
ret
jle
mov
sti
or
pop
xlat
data16
decl
or
ret
clc
loop
loope
jb
ret
and
xchg
push
jns
mov
sbb
data16
cli
push
sbb
int3
xchg
ljmp
cmp
into
pop
cmpl
adc
mov
out
ss
hlt
in
or
xchg
sbb
ror
neg
or
dec
jp
popa
psubusw
or
mov
insb
pop
and
dec
sub
ret
testb
dec
inc
cwtl
or
pop
aas
hlt
in
add
xchg
adc
ret
push
nop
btc
rorb
test
jnp
cltd
into
add
xchg
sbb
add
mov
clc
add
into
adc
insl
jbe
adc
int
push
in
sbb
xchg
inc
inc
into
sbb
in
lret
pop
imul
cli
lods
mov
bnd
into
pop
pop
xchg
inc
cld
push
lock
pop
shlb
repnz
dec
faddl
push
lods
cmpsb
cmp
mov
xchg
rcll
dec
xlat
out
sti
out
push
pop
and
or
out
mov
sbb
in
mov
pop
incb
xchg
jmp
jp
mov
mov
scas
mov
jge
in
pop
xchg
rolw
lods
pop
pop
outsb
push
roll
sbb
xor
pop
aas
imul
xchg
hlt
stc
mov
add
and
scas
in
xchg
into
pop
dec
xchg
es
pop
or
lcall
movsl
ljmp
sbb
cmp
in
pop
dec
dec
pop
jge
in
ljmp
sahf
out
xchg
ficoml
into
bound
pop
cld
ds
xor
ss
decl
adc
dec
add
xchg
out
mov
inc
call
cmc
push
out
jmp
jp
or
into
rorb
repz
cli
fmulp
mov
scas
fadds
sub
rorb
lret
loope
les
lcall
in
ret
push
mov
jle
ret
aam
inc
scas
lret
incl
adc
test
adc
xchg
pop
lcall
cltd
nop
adc
aaa
into
incl
xor
pop
ss
aam
daa
jle
in
xor
dec
ljmp
sub
cli
cld
or
cld
xchg
adc
data16
or
ds
cmp
pop
sarl
aam
dec
aam
push
cli
sahf
sub
pop
pop
iret
jb
pop
ss
popf
sbb
or
dec
inc
out
push
cmp
add
dec
cmp
inc
aad
jl
add
fimuls
pop
fisttpll
stc
mov
lods
out
cmpsb
sahf
cli
adc
pop
data16
mov
pop
outsb
clc
ja
loopne
dec
inc
cltd
lcall
xor
xchg
scas
icebp
mov
xchg
adc
iret
inc
add
sub
and
shrb
cmpsb
fwait
mov
cmp
adc
adc
cmp
mov
ret
adc
push
neg
cltd
out
nop
insl
cli
xchg
cld
sbb
lcall
pushl
cmc
fidivs
jle
inc
shll
or
sbb
dec
out
cmp
fsts
or
in
sbb
into
sahf
cs
es
or
pop
cli
jge
mov
out
cmp
sub
xor
bound
xor
ss
cld
adc
push
inc
add
negb
dec
cmp
fildl
mov
push
jge
add
hlt
sbb
lcall
xchg
ss
es
ss
sbb
sbb
addr16
pop
ret
rclb
sarb
pop
sarb
jbe
pop
or
push
or
aaa
adc
stc
inc
sub
push
cmp
cmp
out
add
shlb
mov
repnz
inc
xacquire
inc
lods
mov
cmpsb
xor
sub
mov
adc
xor
push
pop
inc
dec
fs
jge
mov
mov
icebp
ret
push
push
add
mov
dec
pop
ds
jbe
dec
or
add
sub
lret
aaa
mov
pop
ljmp
add
adc
lret
cmp
out
pop
jmp
sahf
cmp
fidivrs
adc
out
inc
sub
inc
sub
repnz
inc
xor
lret
cmp
xchg
test
sbb
add
icebp
inc
aaa
mov
push
push
nop
ficompl
lcall
out
jnp
data16
adc
or
in
push
inc
jns
data16
jmp
jp
and
fwait
imul
daa
sbb
shll
fsubr
jne
cmp
cs
xchg
sarl
cmc
cli
jmp
icebp
sahf
rol
test
shlb
cmp
adc
cmp
pushl
dec
inc
jg,pt
in
pop
add
mov
mov
sbb
jle
icebp
stos
cmc
test
mov
push
pop
pop
jnp
jno
xchg
testb
ss
pop
jmp
push
adc
inc
jb
jne
sbb
pop
in
mov
fcmovu
xchg
or
pop
dec
lcall
xor
ss
jle
and
fadd
stc
sbb
inc
pop
mov
stc
repnz
push
or
fpatan
ss
stc
mov
ljmp
fistpl
ret
idivl
pop
or
loope
testb
sbb
mov
stc
pop
sbb
mov
or
mov
dec
movsb
repnz
sub
or
test
insb
sbb
mov
loop
xor
xchg
and
push
jge
mov
ljmp
mov
mov
imul
pop
out
sbb
orb
sub
fimuls
repnz
popf
pop
orb
jl
bound
pop
mov
ljmp
pop
out
insb
stc
adc
adc
test
cmp
inc
sbb
adc
popf
xchg
repnz
cltd
loop
jl
incb
lds
adc
decl
in
repnz
push
popf
jmp
lret
es
ss
loopw
cs
cmp
mov
and
sbb
test
test
pop
jecxz
stos
xchg
xor
lret
mov
lods
pop
sbb
and
pop
pop
push
ljmp
cmpsb
sti
cmp
mov
loope
popa
test
cmp
repnz
and
outsl
dec
mov
sahf
xchg
cmpsb
mov
sbb
xchg
test
jle
scas
mov
test
ds
lcall
test
data16
push
cmp
stc
lret
mov
notb
mov
pop
fists
lods
adc
dec
mov
xor
pop
push
jle
ss
add
dec
jle
lret
mov
loopne
les
push
call
inc
lcall
or
repnz
pop
cmp
jmp
jmp
ljmp
sar
adc
fiaddl
adc
push
call
pop
pop
pop
pop
bnd
loope
fdivr
and
cvttps2pi
add
pop
nop
push
lods
hlt
sbb
push
jge
fiaddl
add
out
pop
pop
mov
push
pop
pop
ds
cltd
insb
xchg
jge
lods
inc
aad
icebp
outsb
negb
icebp
adc
pop
sub
xor
xchg
pop
mov
xchg
pop
sub
mov
fiaddl
pushf
sub
adc
adc
xchg
pop
jb
pushf
jp
adc
and
aaa
and
pushf
jp
adc
nop
add
cmpsb
hlt
dec
fimuls
jp
adc
out
add
adc
xchg
movsl
jg
data16
lcall
dec
mov
fdivrs
or
fcmove
mov
dec
cmpsb
cmp
or
dec
lret
pushl
sbb
or
lods
dec
stos
lret
adc
jecxz
or
xchg
sub
sub
into
pop
push
mov
pop
push
js
xlat
adc
cmc
xchg
pop
repz
sbb
loope
outsb
shr
test
sbb
incl
faddl
cmp
push
jmp
sahf
xor
xchg
pop
mov
lret
ficoml
negl
loope
mov
mov
fcompl
cli
push
cs
pop
sbb
add
push
mov
dec
dec
inc
enter
dec
xchg
sti
xor
mov
or
lret
xchg
mov
in
lock
loop
push
pop
mov
jp
or
jbe
in
push
mov
xlat
into
icebp
or
mov
in
jp
mov
mov
mov
repz
mov
stos
fcmove
cltd
into
add
sahf
xchg
push
sbb
mov
icebp
pop
test
mov
lock
test
xchg
xor
xchg
movsl
aam
push
sahf
jmp
lret
jns
fsts
pop
scas
ror
lret
addr16
dec
mov
xlat
cmp
ret
mov
jmp
repz
cli
pop
ljmp
cli
sahf
cltd
div
insl
cli
xchg
or
jbe
xor
xchg
jmp
or
pop
bound
or
pop
test
add
adc
movsl
in
scas
in
out
pop
stos
cmc
mov
fdivrs
pop
fcmovnbe
fld
in
sbb
cmp
lahf
divb
outsb
dec
xchg
xchg
es
pop
cmc
or
dec
mov
adc
nop
data16
mov
pop
dec
mov
jne
ljmp
mov
inc
into
jl
push
sub
in
sbb
int
in
std
and
lcall
sbb
in
stos
into
mov
sub
cmc
cmp
add
inc
icebp
fsub
pop
sbb
push
fimull
cs
and
es
shlb
add
into
xchg
mov
ficoml
into
jbe
xchg
ds
cmp
sub
or
jge
in
loop
cld
ret
fidivl
into
jle
xchg
pop
cld
dec
out
fisubrl
jge
in
es
xor
pop
out
xchg
fimuls
cmp
in
into
mov
xchg
xchg
cld
xchg
jbe
data16
in
dec
int
cmp
sub
jl
paddq
orl
ljmp
lcall
repz
into
jbe
into
sbb
bound
stc
pop
in
sbb
into
xor
xchg
es
xor
fidivrs
in
mov
stos
cld
mov
sbb
jge
in
push
into
inc
xor
pop
adc
cmc
repnz
fimull
xor
mov
cs
adc
aas
test
pop
pop
push
cli
lea
mov
jmp
xor
or
sbbb
sbb
push
xchg
pop
ljmp
shlb
lods
and
ss
repnz
rcrb
adc
pop
data16
in
adc
stos
add
pop
push
pop
stos
cmpsl
push
jmp
sbb
out
pusha
sbb
aaa
or
cmp
xchg
xor
push
repnz
in
push
nop
pop
xchg
dec
in
pop
inc
adc
jmp
dec
mov
add
adc
adc
pop
lret
xchg
pop
jbe
mov
in
xchg
xchg
pop
ficoml
movsl
add
stos
leave
mov
test
pop
add
insb
cltd
cli
adc
adc
adc
not
out
cld
ss
shlb
xlat
or
adc
push
xor
xor
fsubrl
into
call
sbb
mov
mov
scas
cmpsb
push
icebp
xchg
sbb
aad
dec
cltd
add
stos
cmp
stos
pop
sarb
rorl
bound
data16
cs
and
es
jmp
sbb
es
cmp
push
loope
pop
mov
or
in
push
sahf
fidivrl
push
jp
push
add
mov
data16
stos
fsub
or
jle
xchg
mov
jp
or
pop
add
lahf
testb
push
icebp
sub
stos
fimuls
ds
stos
push
loope
mov
add
mov
pop
scas
adc
push
or
outsb
mov
out
stos
or
shl
mov
inc
sbb
ror
in
add
into
mov
jge
in
jb
bound
ds
cmp
es
call
out
jge
in
into
mov
xchg
lcall
jge
in
ss
add
jge
in
stos
into
jle
xchg
data16
pop
out
fisubl
jge
add
push
push
in
sbb
into
lret
cld
sub
out
xor
mov
and
rclb
mov
scas
faddl
ficompl
lret
fimull
into
push
cmp
cld
loop
out
lret
in
jle
jb
xchg
xor
es
pop
decl
out
fcmovbe
jge
out
cmp
bnd
icebp
mov
sbb
lock
cmpsb
pop
add
ds
cmp
sbb
insb
jb
ljmp
out
fcmovu
mov
into
jle
xchg
push
pop
out
fidivrl
jge
add
cld
movsl
in
sbb
into
out
xchg
mov
mov
jge
in
data16
push
xor
or
fidivrs
in
lret
cmpsb
xchg
cmp
out
pop
ficoml
push
in
inc
into
sub
sbb
cld
out
fcmovu
mov
into
lcall
jp
add
xor
mov
repnz
loop
out
fidivrl
in
mov
outsb
cld
push
pop
mov
pushf
out
pop
fisubrl
lock
mov
enter
add
loope
fstl
adc
or
out
mov
mov
inc
int
xchg
adc
cmp
adc
mov
pop
dec
jae
stos
mov
or
fldcw
loopne
sbb
pop
pop
push
stc
adc
adc
mov
call
adc
out
mov
mov
adc
ss
fcoms
popa
adc
inc
or
mov
adc
adc
xor
insb
sub
adc
ds
or
sub
pop
jle
pop
fdivrl
fsubrp
pop
mov
inc
xor
mov
or
sbb
push
adc
jbe
repnz
add
sub
lcall
cs
movsl
mov
bound
and
cmp
loop
rclb
xor
cmp
pop
popf
sub
test
add
lds
push
or
xlat
cmp
out
fsub
sbb
mov
mov
pop
decl
dec
pop
into
adc
cmpsb
sub
and
mov
loop
sarl
inc
jp
mov
or
cli
dec
lock
jbe
mov
pop
sbb
jp
out
fmul
fcoml
insl
or
ret
xchg
lcall
inc
lds
scas
mov
fisubrs
mov
cmp
pop
out
rorb
add
movb
sub
icebp
daa
sbb
pop
mov
fcmovb
jge
in
mov
xchg
mov
into
jp
mov
lock
mov
adc
add
sar
mov
mov
cmpsb
pop
idiv
and
xchg
out
inc
xchg
outsb
repz
xorl
xchg
inc
mov
ror
inc
mov
cli
dec
jp
lock
cli
icebp
mov
xor
mov
cltd
add
jle
mov
hlt
pop
lret
out
mov
bound
int3
lret
pop
cli
dec
pop
lahf
push
ds
lret
xchg
push
stc
bound
mov
vpunpckhwd
or
lret
sahf
dec
xchg
stc
mov
adc
adc
ret
dec
fcoms
cmp
mov
ljmp
mov
mov
jle
cmpsb
mov
cmp
xchg
rcrl
dec
add
outsb
push
inc
out
lret
pusha
fidivl
lcall
rorb
lcall
jns
out
xor
sub
push
out
mov
sar
ret
movswl
dec
mov
das
cli
insb
jmp
mov
pop
dec
jnp
mov
pop
jbe
add
fdivr
or
sbb
or
clc
lret
sbb
mov
rol
jb
mov
sar
ljmp
pop
incl
pop
out
inc
sbb
jmp
add
ret
mov
dec
mov
into
into
js
lret
push
pop
outsb
cmp
pop
pop
fisubrl
sbb
push
nop
in
xor
ss
sbb
jmp
jle
pop
inc
jmp
adcb
sub
pop
out
jbe
js
xlat
mov
loop
push
outsb
pop
jle
or
loop
movb
pop
dec
sub
push
jge
aaa
mov
and
adc
jmp
out
rcr
mov
int
dec
push
out
lock
cmpsb
mov
test
outsb
adc
into
add
sbbb
xchg
nop
icebp
add
popf
loop
into
cltd
sub
loope
adc
lret
jle
jmp
andb
adc
add
inc
cs
jle
cmc
pop
loope
mov
jle
dec
scas
jno
cmp
cli
aad
jb
int3
dec
pop
out
dec
or
test
dec
vunpckhps
push
cli
out
jp
repnz
repnz
xor
add
cli
xchg
push
sbb
add
and
add
inc
call
aam
inc
flds
punpckldq
stc
les
push
add
mov
adc
les
jbe
icebp
or
in
out
popf
adc
xchg
pop
adc
ffreep
ret
push
mov
das
pcmpeqw
fnstcw
rdtsc
jmp
in
inc
pop
out
repz
or
jo
call
lahf
sbb
nop
sbb
inc
xchg
adc
push
fdiv
or
jmp
jl
adc
add
and
fsubrl
jns
imul
jge
in
jp
ja
mov
into
incl
xchg
cld
cld
sti
clc
push
movsl
mov
sub
fisttpl
call
push
fstp
nop
call
fcoms
pop
sti
cli
int3
fsubr
loop
or
leave
fdivrp
mov
rcr
aad
lret
sahf
iret
cmp
ret
scas
adc
mov
lock
fwait
enterw
repz
shlb
andb
sbb
jge
jmp
outsb
or
fistpl
and
jl
dec
xchg
mov
add
cmp
pop
and
inc
jge
add
push
push
jle
cmpsb
fiaddl
xor
or
add
test
int3
js
std
sbb
lea
push
pop
pop
loop
cmp
mov
subb
stos
int3
adc
sub
or
xor
fmull
iret
jnp
lret
add
adc
into
repnz
bound
pop
dec
or
push
or
outsb
inc
int
pop
int3
mov
xchg
stc
or
jmp
fxch
push
stos
lcall
fwait
lret
hlt
pop
mov
sbb
jmp
fnop
int
xchg
enter
cmpsl
sahf
or
fwait
out
mov
shll
or
dec
adc
or
jge
fmul
sbb
cli
dec
mov
sahf
cld
outsb
decl
pop
or
xor
repnz
adc
push
iret
hlt
sbb
orps
adc
sub
push
testb
shll
mov
icebp
xor
clc
mov
mov
ficompl
or
mov
xchg
adc
mov
scas
out
test
sarl
sbb
inc
packsswb
sbb
sbb
into
jae
xchg
ret
ds
pop
rolb
insb
or
shlb
or
add
mov
jge
js
imulb
rolb
stos
lds
mov
mov
int
inc
cmpsb
repz
and
into
mov
pop
mov
popf
int3
lods
stos
lret
jmp
fcoml
mov
mov
mov
ljmp
int
sti
addps
fdivr
inc
pop
into
fmulp
fdivl
fldt
mov
js
mov
fcmovnu
push
in
push
lods
lods
add
mov
inc
mov
int
jg
mov
fwait
pop
fdivrl
cmp
cltd
out
and
imul
repz
fldenv
xchg
mov
dec
out
loop
push
sti
cmp
mov
cwtl
lock
pop
imul
lds
jns
mov
pop
xadd
pop
arpl
mov
decl
repz
shrb
shld
inc
pop
daa
ss
aad
sbb
mov
cli
adc
fisubrs
loop
cmc
or
loope
rcrl
popa
lret
cli
push
xchg
loop
pop
lret
fdivrs
push
pop
stos
mov
cltd
repz
lock
bound
adc
jge
mov
sbb
cli
push
push
adc
cli
cmp
arpl
pop
fsubr
pop
jle
mov
into
in
rorb
scas
dec
mov
xchg
stos
dec
xchg
mov
lcall
and
out
dec
and
scas
ret
sub
dec
jle
sbb
jge
and
cmp
mov
lods
pop
ds
xchg
fiadds
xchg
push
rolb
in
inc
inc
sbb
xor
scas
int3
lret
es
out
adc
push
out
orb
bound
pop
pop
xor
lret
icebp
mov
cmc
jecxz
add
pop
push
cmp
loope
xlat
bound
int
ljmp
out
mov
bound
icebp
mov
fldenv
push
xchg
lcall
inc
xchg
add
fmull
cs
adcl
dec
call
pop
scas
or
xchg
in
incl
mov
pushl
into
out
fisubs
cli
lcall
push
cli
test
mov
inc
mov
ljmp
xchg
xorl
dec
jne
push
add
int3
mov
or
adc
pushl
push
hlt
adc
mov
mov
sbb
aam
xchg
lcall
dec
loop
lods
mov
js
sub
jmp
xchg
loop
ds
and
stos
cmp
test
pusha
icebp
scas
aaa
sbb
into
adc
in
ror
mov
ret
lock
mov
sub
mov
mov
jmp
rorb
out
cmpsl
cli
scas
arpl
lret
ret
mov
pop
mov
add
inc
push
pop
negb
sarb
lcall
add
stc
negb
es
mov
cmpsb
aam
pop
mov
outsb
pop
and
cmc
mul
aam
lcall
int3
push
pop
mov
dec
imul
sub
pop
nop
lock
psrlq
sbbb
inc
adc
mov
outsb
mov
or
mov
lret
dec
mov
ljmp
cli
pop
mov
jp
jmp
mov
sub
or
add
aad
in
dec
popf
or
mov
jecxz
push
cmpsb
inc
cwtl
and
orb
pop
fisubs
or
fisubrs
or
stos
xchg
iret
icebp
sti
ficoms
ds
insb
ficomps
lcall
push
out
es
xchg
jbe
pop
push
jl
out
cld
loop
dec
adc
ljmp
xlat
xor
adc
adc
or
dec
js
dec
bound
cs
or
icebp
out
pushf
pop
or
stos
xor
xchg
lcall
outsb
jmp
out
pop
or
pop
push
stos
es
xchg
fstps
cmc
push
loope
adc
mov
add
adc
xchg
adc
ds
out
lods
mov
and
js
outsl
cmp
int3
pop
sahf
loope
adc
sti
cmc
pop
sahf
pop
adc
cs
sub
or
dec
mov
ds
int3
test
mov
lret
push
dec
inc
test
into
mov
mov
shrb
mov
scas
outsl
sbb
inc
jge
in
pop
repnz
cmpsl
into
mul
xchg
cltd
sbbl
scas
je
adc
mov
jo
mov
repz
fisubs
push
scas
fstpl
cmp
sub
cmpsl
jns
es
jmp
jge
inc
sbb
mov
aam
push
sub
lcall
cmp
xor
cmpl
xchg
sahf
cmp
mov
icebp
or
mov
mov
xor
jbe
sub
jbe
insb
inc
pop
push
dec
mov
jbe
icebp
cld
xlat
lret
popa
std
pop
xchg
mov
pop
int3
add
pop
ljmp
imul
cmp
jbe
cmpsl
popa
mov
fsubrs
adc
lcall
inc
andb
mov
mov
rcl
ficoms
mov
in
mov
push
xor
es
add
pop
scas
cli
daa
inc
out
loope
inc
imul
fwait
cmp
stc
sub
scas
add
repnz
pop
jmp
inc
pop
jmp
imul
fcmovb
mov
dec
push
jmp
add
adc
pop
pop
xchg
mov
mov
mov
in
incl
mov
cmc
push
push
lret
xor
lcall
stos
inc
repnz
adc
pop
and
jne
push
fiaddl
ljmp
mov
cwtl
sahf
in
lcall
scas
adcb
negb
adc
pop
mov
add
adc
cmpsb
or
mov
lcall
cmpsb
imull
jle
mov
cmp
push
mov
mov
jb
addb
ljmp
xchg
add
popf
or
dec
adc
dec
mov
adc
es
cmpsb
dec
mov
jmp
sub
mov
push
fmulp
adc
jge
mov
jb
notrack
sbb
pop
decb
xchg
lcall
dec
pop
insb
ss
fdivrp
or
shrb
jbe
sub
xchg
out
cmp
adc
sbb
jae
pop
out
aaa
imulb
xor
mov
movsb
or
jle
jle
mov
adc
pop
outsb
aam
sbb
xchg
pop
outsb
lahf
cmp
enter
cli
or
mov
lahf
pop
mov
imul
adc
fisubrl
pop
dec
push
movsb
inc
mov
inc
shl
add
mov
stc
into
stos
sub
fwait
push
cltd
adc
dec
movsb
loope
mov
int3
stos
cltd
mov
pushf
cli
cmpsb
cli
xchg
aaa
data16
sahf
adc
pop
jp
icebp
push
xlat
xlat
xchg
adc
pop
add
mov
cli
pop
mov
icebp
mov
cmp
sub
lret
addr16
mov
notb
jmp
mov
inc
jmp
push
add
aad
loopne
scas
pop
rcrb
sbb
enter
repnz
inc
popa
cli
mov
out
push
loope
pop
negb
bound
loop
mov
sbb
cs
scas
stos
mov
add
push
cmpsb
cmp
divl
dec
mov
adc
push
push
and
mov
scas
dec
add
shrb
mov
jg
mov
xchg
xor
pop
cmp
and
lods
pop
pop
push
push
mov
and
pop
and
iret
test
ret
decb
sbb
in
xchg
ret
fldt
test
pop
pusha
push
lahf
dec
out
fstps
mov
sbb
lret
xchg
jmp
scas
cmp
ljmp
out
push
add
or
leave
adcb
cwtl
push
pop
adc
xchg
mov
cmp
data16
mov
pop
push
mov
xchg
lods
incb
icebp
adc
lcall
sub
sub
cmp
push
mov
icebp
cld
idiv
sub
push
aas
push
jg
mov
mov
sahf
mov
addr16
add
or
pop
add
dec
mov
cmp
xchg
lcall
or
mov
jle,pn
adc
adc
and
mov
xor
push
jb
das
ret
xchg
lods
imul
push
fcoml
icebp
call
in
xchg
mov
pop
aaa
dec
cmc
pop
inc
inc
dec
push
xchg
and
lds
mov
add
ljmp
add
xchg
data16
icebp
outsb
xchg
mov
add
jmp
xchg
cli
ss
cmp
jp
jecxz
out
aam
xchg
xchg
rolb
idivl
scas
outsl
sbb
inc
jge
in
pop
mov
int
dec
xor
mov
fidivrl
pop
adc
sub
les
adc
xchg
mov
pop
repz
dec
inc
jle
sahf
jno
mov
lcall
les
xchg
movsl
mov
jbe
jge
pop
jle
mov
push
dec
inc
jnp
dec
cwtl
orl
std
mov
pop
ret
jp
imul
es
mov
nop
sbb
xchg
and
mov
dec
out
lds
xchg
pop
jg
add
mov
xchg
dec
cltd
mov
or
mov
cli
cmc
ljmp
add
adc
ds
fs
mul
ss
mov
pushl
or
nop
sbb
add
cltd
fiadds
lods
ljmp
pop
ss
stos
mov
fcmovne
mov
cli
jo
push
lahf
pop
dec
push
inc
ret
mov
jb
push
cmp
lahf
mov
mov
dec
rorb
sub
xor
pop
pop
sbb
xchg
data16
ds
xchg
dec
pusha
pop
mov
addb
in
andb
repnz
mov
add
cmc
mov
push
cmc
pop
jmp
out
xor
sti
popa
pop
mov
stos
into
push
shr
aas
loope
outsb
fdivl
cld
add
push
stc
cmp
fdiv
adc
sub
pop
or
adc
pop
bound
pop
lret
loope
push
incl
dec
lcall
scas
dec
pop
pop
cmp
repnz
xchg
rorb
mulb
repnz
dec
lret
add
mov
push
cmc
mov
mov
dec
cmp
or
imul
sbb
std
enter
adc
loop
xchg
sub
mov
mov
cmp
ret
inc
mov
xor
cs
divl
lcall
xchg
inc
mov
xchg
jbe
cmp
push
outsb
stos
into
incl
xchg
into
lcall
test
add
jmp
push
mov
adc
stos
sbb
jge
notl
inc
stos
pop
pop
shll
popf
ret
push
pop
add
or
xchg
into
cmp
mov
pop
inc
arpl
mov
inc
pop
cmp
stos
mov
bnd
je
sbb
or
cld
dec
mov
pop
or
icebp
pop
sub
test
fimull
stos
cs
mov
test
inc
inc
cmpsb
rep
xchg
add
cmp
fsubrl
or
sti
mov
scas
ds
ss
pop
rolb
aad
lret
stos
testb
xchg
nop
lret
adc
subl
or
dec
push
out
rolb
in
jle
pop
and
ret
adc
cld
adc
jmp
dec
add
pop
add
xor
or
ficompl
add
repz
incl
xorl
adc
jbe
sub
inc
pop
loope
icebp
sti
cmpb
in
jecxz
iret
stos
xchg
cmpsl
cld
xchg
out
jg
pop
jge
in
inc
into
das
or
jg
xchg
repz
fucomip
mov
nop
xchg
leave
xchg
mov
scas
test
adc
pop
cltd
cmp
cmp
add
jge
cli
push
ljmp
mov
adc
cmpsb
mov
pushl
int3
outsb
sbb
jmp
add
xchg
add
push
cs
mov
fs
jle
enter
dec
cmpsl
cld
data16
sbb
xchg
pop
adc
scas
cltd
out
jg
inc
sub
and
mov
mov
cli
mov
push
jbe
enter
push
ds
mov
es
add
mov
inc
aam
es
jns
lods
sub
xchg
pop
cld
repnz
mov
bound
xorb
pop
clc
cli
dec
outsb
jle
push
sub
pop
out
jecxz
xchg
dec
or
icebp
cmp
and
cmpsb
jbe
int3
mov
testb
xor
xor
inc
ljmp
cli
add
scas
int3
mov
stos
mov
sub
jle
enter
cs
or
xchg
xlat
cmc
push
or
stc
dec
lock
insl
negl
out
or
jg
sub
loop
insl
xchg
stos
sub
fdivr
std
sahf
or
or
pop
add
or
in
add
hlt
add
or
in
mov
cmp
push
sahf
rorl
xor
adc
add
pop
dec
xchg
outsb
and
pop
lahf
xlat
popa
mov
push
push
jmp
push
idivl
outsb
pop
out
and
xchg
jbe
sub
push
jl
sahf
sub
out
shlb
fwait
mov
stos
inc
outsl
sub
push
inc
push
cmp
lods
sbb
test
repnz
dec
sub
ficompl
xor
sub
jne
daa
pop
lret
test
addb
xchg
mov
add
and
mov
add
sub
sbb
filds
in
lds
xchg
shll
or
lock
push
push
enter
icebp
scas
and
push
jge,pt
add
inc
cmc
jb
ficoml
pop
jge
out
mov
into
pop
ret
sahf
jmp
addr16
ljmp
aam
ficoms
fcos
and
sub
repnz
dec
push
xchg
or
or
outsb
fdivs
pop
loope
adcb
jle
adc
pop
ret
fadds
into
jne
lret
mov
xchg
repnz
outsb
rcll
cmp
cld
scas
jp
push
aam
xchg
sbb
cld
xchg
jp
push
add
cli
dec
push
jp
or
arpl
ds
pop
dec
xor
lahf
cmpsl
jne
mov
mov
jne
andps
stos
mov
add
jb
sti
out
mov
icebp
or
ss
inc
outsb
pushf
leave
pusha
pop
jmp
je
into
cmp
and
sahf
je
arpl
jle
in
pop
pop
out
push
aam
pop
mov
data16
ret
test
divl
jae
sahf
lds
cld
sub
jmp
sahf
iret
jae
ficomps
mov
or
stos
jae,pt
out
jb
mov
lcall
stos
loop
xchg
das
mov
cs
out
fdivs
jle
sbb
pop
sahf
das
ret
jbe
cli
pop
push
jmp
divl
sahf
jnp
ja
lcall
jp
repnz
pop
xchg
test
dec
jmp
inc
iret
jno
out
jmp
rorb
into
jo
dec
cmp
push
cs
cmp
push
cmp
jbe
outsb
jo
push
sahf
repz
xchg
pop
adc
inc
lret
adc
add
mov
clc
idiv
mov
clc
fists
xchg
jge
push
mov
mov
sti
dec
push
fs
jecxz,pt
std
mov
out
fsubs
sahf
pop
jne
add
adc
out
mov
popa
lret
dec
mov
std
and
mov
mov
jle
pop
cmp
lret
push
adc
scas
pop
mov
mull
lret
add
pop
lods
push
pop
jge
pop
add
dec
dec
ds
add
push
mov
or
into
inc
ds
jge
pop
adc
pop
jg
cmpsb
push
pop
pop
xchg
jb
xchg
pop
into
and
cwtl
insl
pusha
dec
jecxz
incl
pop
jne
pop
pop
xor
lret
or
pop
es
pop
and
cs
out
fsubrs
mov
icebp
in
sbb
addr16
xchg
aas
cld
sbb
sbb
add
out
jge
in
into
mov
xchg
jnp
ja
arpl
dec
jge
in
daa
iret
adc
es
ret
jg
push
mov
insb
gs
sub
xchg
lds
xchg
mov
pop
push
sarl
mov
sbb
cltd
ljmp
and
jbe
arpl
cli
push
imul
add
outsb
addr16
pushf
loope
ret
push
ret
stos
roll
dec
int3
pop
es
fisubrl
pop
xchg
and
jb
pop
jns
sahf
into
ss
sahf
es
jns
stc
mov
jns
mov
inc
enter
cld
pop
js
ljmp
xchg
jb
lret
pop
push
aad
sarb
cmp
outsb
and
sahf
das
jbe
bnd
scas
int
push
es
scas
stos
push
mulb
jns
scas
pop
popf
mov
xchg
ja
test
bound
data16
mov
jge
jb,pn
loop
cmp
jle
in
push
movsl
ds
mov
or
fwait
push
scas
cli
ss
cli
cmpsl
cltd
testl
xor
int
cmp
cs
sub
pop
sub
les
jbe
push
jbe
ret
mov
inc
hlt
push
jp
ret
dec
xchg
mov
jbe
dec
jmp
cltd
pop
jb
lds
iret
mov
cs
adc
bound
jmp
repz
int3
lret
std
repnz
mov
ret
icebp
push
mov
sahf
fcomps
pop
jb
hlt
rorb
inc
push
xchg
push
sbb
movsl
push
add
stos
adc
mov
stos
bnd
mov
sbb
mov
daa
sub
or
pop
decl
push
jns
adc
xchg
mov
sti
outsb
out
mov
xchg
loop
adc
inc
add
push
lcall
push
cltd
bound
xchg
push
js
dec
popa
repnz
loop
div
dec
or
mulb
aam
pop
xchg
stc
aad
or
cli
xchg
jmp
dec
pop
xor
dec
inc
ficoml
shr
fcoms
xchg
outsb
int
ret
pop
dec
lods
jmp
mov
add
pop
mov
into
xor
inc
jmp
hlt
adc
add
dec
cmp
add
jmp
or
movb
icebp
loop
and
loop
repnz
lods
sub
out
out
cli
ret
sub
out
lret
pop
icebp
repnz
loop
xchg
stos
cli
lds
lds
sbb
lods
cld
jmp
ss
xchg
mov
rcl
out
int
jge
push
pop
repnz
ss
repnz
jbe
lods
pop
adcb
fcoms
shr
jo
aad
rcrb
icebp
sbb
lcall
sbb
add
rcrl
ficoms
out
push
cld
xchg
and
pop
int3
or
call
pop
sahf
ret
dec
leave
std
jle
push
sbb
lods
or
sub
sti
pop
mov
lret
sbb
sub
cmp
push
pop
ljmp
pop
and
push
dec
mov
int
sarb
mov
ss
scas
nop
xlat
es
jbe
lods
test
stos
test
sbb
ret
or
mov
lods
adc
repnz
pop
mov
add
into
cmpsb
ficoml
xchg
add
into
out
xchg
leave
ljmp
mov
add
sub
fistl
or
jnp
test
dec
fisubl
repz
jge
push
mov
cmc
es
rolb
adc
sbb
cmp
jbe
pop
sbb
scas
mov
mov
pushf
mov
cli
aad
pop
or
cltd
fldcw
mov
sbb
pop
out
icebp
lods
pusha
or
dec
fsubrs
lret
mov
ret
repnz
mov
mov
int3
test
fbstp
movsl
lods
mov
xchg
es
ljmp
jno
loop
stos
insl
repnz
jg
mov
in
pop
incl
ret
add
pop
stos
fdivrs
lret
mov
fwait
pop
jge
mov
loop
test
mov
scas
sahf
inc
jbe
cmpsl
sbb
pusha
jmp
mov
cltd
scas
ss
push
sub
idivl
lods
loop
mov
rcrb
ljmp
cmp
adc
cmp
xchg
scas
insl
lock
lahf
aaa
fnstenv
push
sbb
jb
fcoml
lods
int3
addr16
mov
into
mov
out
bts
pop
mov
dec
rorl
jg
sub
jnp
out
dec
and
fildl
adc
je
xor
cmp
std
lods
mov
pop
in
es
mov
jo
scas
adc
and
repnz
stc
mov
mov
cs
jo
scas
xlat
scas
sub
adc
mov
leave
jb
in
adc
enter
sbb
sbb
xor
push
mov
xchg
cltd
mov
fsubr
enter
mov
push
mov
pop
inc
shl
pushf
sahf
hlt
movsl
lret
add
sub
rolb
mov
std
inc
pop
pop
lea
enter
into
lret
rcrb
fnop
in
iret
mov
movsl
lea
cmp
jbe
scas
stos
lods
inc
or
sbb
pop
cs
adc
out
stos
shll
xchg
sbb
jge
outsb
cmp
cmp
mov
pushf
mov
pop
fisttpl
lcall
shll
les
cmpsb
psubw
das
fdivs
mov
arpl
lea
in
les
subb
movsl
pop
loop
dec
jns
icebp
adc
icebp
cmpsb
mov
xchg
cmp
mov
clc
push
add
cmp
es
sti
lret
mov
mov
cwtl
mov
mov
mov
sbb
leave
xchg
and
sbb
pop
pop
repnz
sbb
sahf
push
push
ljmp
mov
leave
ljmp
mov
stos
std
lahf
outsb
bound
sbb
pop
ja
pop
adc
pop
lahf
popa
add
push
adc
sub
xchg
cmp
dec
fiadds
lods
je
pop
ficoml
xchg
xchg
outsl
dec
adc
or
incb
addr16
sub
cld
data16
rcll
outsb
sbb
cs
fmuls
imul
sub
mov
shr
ss
shrb
fidivl
insl
mov
or
xor
bound
jmp
cli
ficoml
movsl
ficoml
pop
xchg
loopne
adc
test
mov
adc
in
into
pop
sahf
mov
adc
in
jbe
or
int
mov
dec
mov
xchg
jp
mov
pop
push
sub
scas
scas
cmpsl
gs
into
and
add
adc
mov
test
mov
ret
movsl
mov
jb
ljmp
mov
sbb
in
xlat
jb
in
mov
pop
stos
jnp
fsts
jbe
js
fcoms
ds
jbe
in
sbb
mov
fisubl
rorl
sbb
lds
fsubrl
add
pop
or
lret
mov
sarb
nop
inc
cld
jmp
inc
repz
pushl
pop
mov
cmp
jle
sub
mov
mov
cmp
pop
test
dec
pop
cmpsb
sti
lcall
aad
jbe
add
cmp
or
cli
push
dec
sbb
mov
ss
loope
pop
leave
adc
decl
cmpsb
adc
mov
dec
fwait
xchg
ss
js
fdivr
lcall
inc
mov
mov
movsl
jns
fdiv
xchg
inc
scas
repnz
sbb
mov
or
xorb
loope
add
notb
pop
aam
lcall
ljmp
sbb
mov
mov
push
jo
ret
pop
fwait
in
add
enter
stc
mov
lret
insb
add
inc
dec
mov
jbe
pop
ret
xchg
mov
mov
pop
xchg
out
push
or
imul
popf
mov
movsb
lcall
out
lods
js
fimull
xchg
add
adc
dec
stc
in
jmp
jge
pop
sahf
cmp
cs
repnz
push
mov
lahf
shrl
sbb
xchg
mov
push
lcall
push
xchg
mov
xchg
shrb
cmpsb
js
fcoms
add
jp
mov
dec
js
fmuls
add
push
or
mov
adc
outsb
ficompl
push
sub
in
int3
sbb
icebp
push
mov
jl
test
cmp
mov
test
rcr
mov
jmp
dec
data16
add
push
pop
lods
sarb
mov
xchg
sbb
push
or
mov
mov
fcmovu
push
loope
add
cmpsb
adc
push
jp
jbe
jle
pop
into
scas
xor
sbb
icebp
xlat
mov
popf
jae
shrl
mov
ds
fdivs
lcall
or
pushf
mov
shrl
add
push
lcall
loop
repnz
mov
pushf
sahf
cltd
push
fcoms
enter
jmp
mov
adc
adc
cmpsb
adc
mov
push
pushf
fmulp
pop
lcall
push
fptan
xor
cld
xchg
push
sbb
mov
add
push
lret
adc
jns
stos
mov
vpminsw
adc
push
jge
lods
shrl
shl
or
sbb
or
ret
inc
lock
add
sahf
lret
or
lcall
ljmp
pop
mulb
sbb
or
xchg
movb
repnz
mov
nop
or
pop
out
testl
shr
cwtl
xor
cmpb
pop
add
mov
mov
emms
adc
outsb
popa
das
bswap
mov
not
push
fs
inc
mov
xchg
shlb
push
dec
roll
sub
cmpsb
test
xchg
mov
pop
xchg
scas
add
pop
cmpl
fsubrs
xchg
test
or
pop
clc
and
fxch
into
pop
mov
lea
cwtl
icebp
test
xchg
std
add
mov
cli
icebp
into
lock
add
cs
outsb
mov
leave
adc
or
mov
repnz
sub
call
pop
in
jp
enter
cld
adc
sbb
mov
js
stos
mov
ret
iret
pop
pop
les
inc
adc
adc
mov
xor
cmp
adc
add
sbb
sub
jbe
sub
pop
ds
shr
xchg
out
push
in
stc
daa
lods
mov
add
lods
into
mov
adc
mov
out
scas
in
dec
or
rorb
test
fwait
repnz
sahf
jb
jl
mov
cli
imul
mov
adc
nop
mov
stc
loopne
enter
adc
add
or
sarl
mov
fnstcw
outsl
or
jecxz
or
xor
xor
pop
xor
bound
push
mov
mov
mov
push
or
call
or
pusha
mov
xor
dec
adc
mov
pop
ret
or
mov
inc
stos
in
movsl
inc
push
cltd
rcrb
xorb
bswap
mov
lock
mov
ret
cmpsb
sub
in
dec
sahf
shl
movsb
jns
mov
mov
loope
adc
sbb
dec
mov
xadd
fs
and
test
cmp
outsb
mov
sub
jb
xchg
xor
push
xor
fisttpl
call
xor
sbb
out
mov
and
lcall
fiadds
mov
mov
movsl
ljmp
in
cli
pop
push
shr
out
aas
pop
push
mov
sub
mov
das
xchg
aad
adc
mov
out
pushf
je
scas
mov
mov
out
xor
scas
fistpl
or
data16
aas
pusha
jle
fidivrs
rorb
xchg
push
push
pop
out
aas
mov
push
jp
cmpsb
bound
xchg
out
cmpsb
pop
fwait
xchg
push
cmp
pop
jle
test
test
repnz
xchg
sbb
enter
mov
sti
cmp
fistpl
mov
mov
int3
cs
mov
mov
fidivrs
lods
push
flds
clc
out
fdiv
mov
out
cmc
jle
or
sti
adc
icebp
mov
mov
pop
lret
xor
mov
hlt
idivb
ljmp
sbb
inc
mov
jle
jg
pmullw
insl
mov
mov
mov
lcall
dec
and
lods
xchg
pop
stos
mov
shlb
xchg
popl
or
and
fimuls
push
add
jne
push
scas
cmp
into
pop
push
or
and
cmpsb
mov
jp
mov
cmc
rorb
sahf
mov
dec
mov
pushf
sub
adc
jge
mov
mov
test
pop
mov
rolb
push
movsl
push
repnz
ret
inc
sbb
repnz
mov
into
mov
idivb
fs
lods
pop
loope
idivb
insl
into
and
or
push
out
xor
fwait
scas
hlt
scas
mov
hlt
cmp
test
pushf
into
adc
push
rol
sbb
add
into
or
sar
mov
xor
test
pop
mov
xor
inc
jne
sub
hlt
mov
adcb
clc
xchg
push
push
mov
jns
icebp
mov
add
dec
iret
or
repnz
dec
rorb
fdivp
mov
fcmovb
jb
ret
inc
adc
lods
mov
jns
int
cli
int3
xor
hlt
repnz
mov
xchg
jmp
les
cmp
mov
dec
mov
and
ret
and
adc
pop
cmpsl
popa
inc
and
inc
lret
pusha
cmpsb
jg
adc
mov
jae
sub
stos
out
shlb
insl
sbbb
mov
sbb
mov
scas
mov
outsb
mov
dec
mov
sub
or
out
mov
test
mov
ret
outsb
sar
std
xchg
xchg
pop
jle
repnz
testb
fisubrl
add
fsincos
push
sub
cmp
daa
test
sub
repnz
push
scas
js
mov
xchg
leave
inc
or
mov
jle
push
fs
clc
lret
sbb
lds
mov
iret
hlt
lea
lret
out
repz
xlat
or
rcll
pushf
push
std
lock
stos
sub
orb
adc
aad
jmp
adc
cs
pop
inc
pop
jns
push
jbe
lret
test
and
push
insb
adc
stos
xchg
lcall
out
and
dec
inc
sub
jge
fdivrs
call
jno
jge
add
inc
lcall
inc
push
xchg
cs
pushf
out
lret
into
lcall
lcall
mov
fdivrl
fiaddl
cmpsb
adc
lods
iret
mov
fscale
jbe
popa
xchg
imul
es
mov
cli
inc
dec
std
xchg
mov
dec
adc
mov
inc
inc
xchg
fdivs
inc
orl
adc
inc
xchg
fdivs
add
adc
cmp
fcmove
std
inc
mov
cmp
cs
ss
pop
ret
insl
repnz
pop
mov
inc
fcoml
xor
lods
mov
push
cld
mov
cmp
adcb
adc
imul
pop
pushf
xchg
lret
outsb
subl
int3
adc
jp
bound
icebp
or
pop
mov
in
pop
into
push
sar
ds
pop
xlat
push
ljmp
ss
ss
fsubrl
or
mov
loop
jb
or
lcall
jp
hlt
jno
xchg
xor
aas
subb
jo
mov
icebp
push
je
leave
icebp
xor
xor
push
pop
cmp
dec
xchg
mov
xchg
dec
or
popa
insb
outsb
mov
inc
inc
mov
out
incl
ja
rorl
pop
dec
mov
stc
ja
hlt
mov
jle
scas
int3
scas
inc
loop
pushf
pop
pop
sub
inc
loope
add
inc
cmpsb
xor
cmp
fcmove
outsb
pushf
dec
fmulp
push
lcall
or
sub
ror
mov
and
stos
sbb
xchg
lcall
gs
imul
js
fadds
dec
mov
popf
fcomps
add
jge
xchg
inc
into
popf
cs
mov
cmp
xchg
ret
loop
fdivrl
lfs
pop
lcall
jo
fldl
jg
cmpb
setne
enter
mov
and
add
in
pop
gs
xchg
or
push
std
ror
int3
scas
stos
mov
xlat
jg
scas
fwait
push
mov
aam
adc
or
fimull
lea
aam
lods
lds
sahf
push
loope
jle
fstpt
stc
ljmp
call
mov
cld
lods
cmpsb
fwait
push
mov
in
adc
pop
testb
data16
in
ss
mov
repnz
out
cmp
mov
aad
stos
paddusw
xor
lds
shll
xchg
adc
sbb
iret
xchg
sti
mov
ud1
insb
pop
dec
adc
cwtl
mov
bound
inc
sbb
adc
repz
pushf
int3
insl
sahf
and
out
repnz
xor
andps
into
cwtl
add
mov
push
leave
rclb
fists
int3
subb
gs
inc
push
pandn
test
fisubl
shl
sbb
mov
call
dec
popf
repnz
sahf
out
mov
mov
rcrb
push
cmp
test
jb
or
jg
push
sub
dec
setb
mov
xlat
psllq
dec
cmp
cmpb
pop
jb,pn
pushf
test
inc
mov
fidivrs
dec
pmullw
jg
das
lods
pop
adc
mov
scas
push
psraw
jle
arpl
movsl
into
xchg
fwait
cmp
dec
cmp
das
jbe
lret
xchg
stos
mov
push
jb
adcb
add
pop
movsl
cvtdq2ps
arpl
xlat
insb
sub
mov
inc
xor
bswap
sbb
pop
rcrb
shlb
ret
dec
sbb
mov
les
sub
cmc
mov
jle
test
cmpsl
lret
dec
scas
dec
adc
cmpsb
icebp
push
shl
push
xor
and
cmp
jle
fxch
test
ss
sahf
lods
fs
loop
mov
xor
jle
sar
ljmp
out
popf
cmc
mov
bound
cmc
ljmp
jb
shrb
fsubr
xor
mov
loop
push
cmpsb
aam
sbb
jns
xchg
push
rcrb
mov
enter
mov
mov
pop
in
xchg
or
into
or
sbbb
cmp
jb
mov
cmpsb
xlat
lds
dec
mov
sub
adc
movsb
outsl
add
int3
les
xchg
movsb
cli
repnz
mov
or
bnd
int
mulb
cli
pop
jge
push
mov
scas
ficomps
aam
imul
repnz
mov
fnstcw
or
dec
aam
sti
rol
stc
or
movsb
incb
int
cmc
test
in
pop
mov
ror
sub
scas
add
mov
fimull
aad
stos
int
xchg
jmp
movsl
aad
inc
call
push
test
fldenv
outsb
movsl
aam
stc
add
rcrl
dec
or
mov
sti
daa
mov
mov
and
lods
pop
fadd
rorb
shlb
mov
lahf
jle
movsb
cs
insb
fcomps
mov
dec
mov
enter
in
jge
sbb
cwtl
repnz
pop
cmpsl
dec
test
cltd
in
pop
or
mov
icebp
decl
xchg
jmp
test
cmp
into
adc
mov
mov
in
add
xchg
clc
mov
sbb
int3
mov
xchg
jp
mov
out
sahf
rorb
inc
fdivr
fmul
enter
ljmp
enter
jle
sub
cmpsb
std
mov
repnz
xor
mov
add
mov
pop
ror
roll
mov
ret
cltd
or
cli
pop
popa
lahf
jl
mov
mov
imulb
adc
loopne
adc
adc
pop
mov
adc
xor
aad
adc
adc
icebp
js
adc
int3
test
push
jg
mov
mov
add
jb
ret
bound
mov
mov
inc
stos
sbb
cmpsl
lea
loop
adc
mov
mov
insl
cmp
mov
adc
adc
push
lds
shl
int3
cmp
adc
cli
and
icebp
mov
icebp
dec
ret
xchg
lods
mov
mov
mov
cmpsb
xchg
push
loop
mov
mov
mov
sar
sbbb
xchg
fwait
sti
jg
enter
cmp
or
mov
wbinvd
mov
mov
sub
mov
or
lds
ss
pushf
es
dec
and
add
add
mov
sbb
dec
mov
or
repnz
adc
mov
mov
sub
lods
xchg
sub
mov
lahf
and
test
cmp
cltd
sbbb
or
mov
pop
add
adc
and
or
ljmp
add
iret
int
mov
fidivl
mov
fwait
lods
fdiv
pushf
push
enter
mov
ljmp
ljmp
sahf
mov
jmp
mov
addr16
cli
stos
sub
cmpsb
sub
pop
mov
out
push
jge
fiadds
pop
lcall
jle
mov
jb
cmp
jne
xchg
xchg
xlat
punpckhbw
ja
jp
jg
sahf
and
cvtdq2ps
std
xchg
iret
insl
shlb
jmp
adc
cmp
ret
push
shlb
loop
data16
jecxz
ret
mov
adc
or
test
ljmp
adc
lcall
ret
pop
jmp
jl
fwait
bound
fwait
cwtl
sbb
push
loope
loop
push
pop
fnstsw
fildl
jmp
xchg
fisubrl
xchg
fdivr
loop
repz
mov
dec
shr
xchg
out
xlat
ljmp
sbb
and
mov
adc
ficoms
in
fstpt
sbb
movsl
jp
jb
add
fmull
lods
mov
imul
jecxz
repz
jmp
call
pop
pop
pop
repnz
cmpsb
sbb
cwtl
loope
mov
repnz
pop
loopne
mov
out
sbb
out
in
hlt
jge
in
cmpsb
into
in
jecxz
idiv
in
fidivrs
fmuls
es
sbb
rorb
jge
inc
mov
cs
loope
into
in
out
cmp
pushf
mov
xchg
sub
shlb
repnz
add
mov
mov
add
jmp
xlat
push
ljmp
leave
dec
inc
dec
std
iret
dec
aad
out
mov
sbb
lods
jl
data16
cmc
mov
lret
xor
sti
pushf
lcall
fiadds
mov
out
fsubrs
add
or
push
aam
rcr
sbb
shlb
dec
rcr
mov
enter
lods
sub
jecxz
xchg
sub
adc
adc
xor
push
ljmp
jbe
into
inc
pop
pop
or
push
addr16
sbbb
fidivrl
jbe
loop
ljmp
lret
add
lea
jecxz
je
or
xchg
push
into
into
insb
xor
scas
insl
ficoms
dec
sub
data16
ljmp
dec
stos
iret
mov
call
add
int3
rolb
stc
push
je
xchg
pushf
loope
fmuls
sar
lcall
ljmp
mov
rcll
out
pop
repnz
jmp
pop
cs
mov
popa
adc
adc
pop
or
aam
pop
xchg
int
in
add
incl
out
pop
push
ret
pop
movsl
data16
push
iret
push
mov
mov
ds
jp
add
jns
jmp
pop
adc
mov
mov
jmp
cli
pop
jns
insl
dec
aam
popf
mov
mov
insl
pop
into
rcl
fcompl
pop
or
repz
pop
repnz
mov
out
pushl
ljmp
icebp
pop
int
fmull
lret
fs
ljmp
sub
cld
cmp
adc
repnz
movsb
std
mov
loopne
enter
ljmp
icebp
inc
cmp
test
inc
hlt
mov
jmp
jno
sub
pop
sar
fildl
jns
insl
or
out
dec
inc
call
mov
fsub
mov
cmp
and
xlat
mov
pop
repz
and
int3
push
mov
sar
repnz
pop
pop
add
movsb
push
jmp
jg
leave
mov
loop
add
repnz
int
cs
repz
mov
mov
sahf
mov
test
enter
xor
scas
aam
jge
jl
jecxz
mov
cli
sarl
fcoms
jmp
jle
mov
push
loope
pop
mov
pushf
push
stos
into
lret
andb
sub
es
adc
cmp
push
sub
or
bnd
mov
ret
ret
int
mov
ljmp
or
inc
mov
or
pop
jmp
mov
rorb
xchg
ret
nop
lahf
sbb
xchg
lcall
mov
rcl
pushf
lds
ja
lret
mov
dec
xchg
sar
fsubrs
mov
jmp
inc
fwait
out
pop
pop
push
sahf
imul
jecxz
stos
mov
mov
adc
pop
cmpsb
jb
dec
adc
mov
je
scas
mov
pop
icebp
mov
loop
mov
icebp
loop
pop
pushf
dec
mov
pop
jnp
xchg
cmp
aam
out
or
in
pop
mov
or
fprem1
lahf
mov
clc
in
pop
fwait
adc
sbb
stc
push
adc
pop
rorl
jne
fdivrp
arpl
inc
adc
std
push
pop
jne
decl
std
pop
or
divb
cmp
dec
rcrb
lds
sbb
mov
rcl
or
fsubrp
stos
mov
fwait
jnp
test
pop
mov
lea
mov
loopne
xchg
lret
int3
rolb
fwait
push
mov
mov
loop
cvtps2pi
iret
sub
dec
mov
notb
stc
mov
mov
lods
mov
push
mov
shl
cmp
jbe
bound
cld
mov
mov
outsb
dec
lcall
xor
dec
push
sbb
addl
addl
andl
push
push
lahf
xchg
psubusb
scas
mov
mov
mov
fdivp
cs
mov
lcall
dec
mov
cmp
mov
mov
mov
sbb
jnp
test
mov
jmp
cli
mov
push
mov
mov
push
shlb
pop
cli
sti
lret
mov
movsl
ljmp
repnz
adc
adc
ret
sbb
cmp
xchg
repz
clc
inc
in
insb
or
call
add
stc
lahf
loop
inc
cli
movb
sub
rcrb
dec
stos
mov
adc
inc
enter
inc
mov
out
bound
out
ret
push
out
testb
imul
pop
or
sbb
call
ficoml
adc
xor
sbb
jp
decb
sbb
sbb
fimull
enter
lret
inc
test
xchg
jb
stos
outsb
cmpsl
jns
mov
and
es
xchg
add
test
cmpsb
mov
xchg
ficoml
ficompl
cmpsb
outsb
xchg
scas
jbe
mov
lcall
jbe
mov
ss
and
jecxz
rcrb
decl
loop
inc
cli
mov
mov
sub
out
ljmp
push
and
call
ret
loop
fidivrs
test
es
lds
icebp
adc
cli
pop
cs
jg
mov
pop
into
or
jp
jp
pop
dec
jle
pop
cmp
mov
bound
adc
mov
aaa
pop
dec
loop
pop
adc
fmuls
or
xchg
pop
adc
pop
adc
cmp
jb
mov
pop
cli
scas
xchg
idivb
mov
loopne
or
mov
xor
jg
xchg
jo
mov
sbb
lods
xchg
jno
cld
cld
jbe
sbb
and
in
xchg
icebp
lret
mov
add
pop
idiv
mov
pop
xchg
jge
and
add
push
jge
and
nop
dec
cli
dec
mov
stc
lds
xchg
mov
inc
mov
int3
enter
mov
mov
cmpsl
mov
shlb
pop
in
mov
rol
stos
mov
lcall
jge
ja
icebp
cmp
jb
loope
mov
in
xorb
pop
mov
mov
mov
xor
repz
mov
or
mov
leave
roll
push
out
adc
jl
xor
jnp
ljmp
out
xlat
adc
outsb
or
sub
repnz
sbb
pusha
test
scas
adc
lcall
cld
push
xchg
scas
in
mov
icebp
xor
sbb
daa
ficoms
js
loopne
lds
cwtl
inc
cli
mov
pushf
fisttpl
cld
pop
mov
lret
pop
xchg
ret
scas
pop
repnz
stos
add
add
movsl
mov
call
mov
nop
pop
mov
adc
mov
or
fsubl
mov
push
lahf
xchg
jno
outsl
mov
repnz
pop
sahf
jp
adc
in
adc
lcall
mov
pop
jmp
jp
ret
add
enter
cmp
mov
add
sbb
movb
int3
sbb
ja
jl
cmc
mov
ficompl
hlt
xchg
pop
dec
test
repnz
dec
decl
rorl
loop
cmp
insb
cmp
ret
mov
dec
repnz
sbb
push
mov
mov
sbbb
xchg
push
mov
mov
or
roll
hlt
inc
lods
loopne
js
ret
mov
mov
shr
adc
lea
cmp
add
data16
cmpsb
negl
cmp
fisubs
ds
aad
jno
sub
sarl
into
stc
roll
mov
push
inc
lock
inc
hlt
into
adc
xor
xchg
dec
xor
inc
cmp
sarl
sbb
and
push
shll
mov
push
loop
add
insb
es
into
sbb
ds
jl
xor
mov
mov
stos
sahf
jg
pushf
fidivs
mov
push
pop
aam
inc
enter
cli
jl
ret
jns
test
ljmp
or
repz
xchg
fmull
out
mov
insb
sbb
ds
ficoms
loop
push
std
call
sahf
adc
inc
addr16
pop
cli
lahf
xchg
jp
sti
add
test
sbb
clc
enter
dec
test
iret
std
mov
cs
mov
cld
or
fimull
lock
jmp
hlt
mov
mov
pop
inc
pop
mov
jns
push
mov
cmp
sub
push
mov
mov
pop
enter
imulb
xchg
adc
inc
lods
std
pop
xchg
repnz
push
insl
shl
xchg
add
mov
and
pushf
jle
cmpsl
shll
jb
repnz
cmp
lods
adc
ret
js
out
mov
ss
jae
jle
cmpsb
jge
loop
jp
int3
enter
jg
inc
ss
cld
mov
mov
or
aas
int3
mov
xor
rclb
mov
enter
xchg
push
ret
push
cltd
mov
pop
shrb
lcall
mov
pop
sub
mov
mov
stc
and
fs
shlb
mov
mov
push
or
cs
cld
and
hlt
movl
ret
jns
pop
adc
pop
or
mov
lcall
enter
push
cmp
push
cwtl
decb
loop
dec
adc
in
ljmp
lcall
std
mov
add
shl
xchg
shlb
call
inc
mov
xchg
sub
cmp
clc
mov
lcall
test
pop
mov
insl
inc
push
jnp
or
rclb
lret
fdivrl
ret
fdivp
loop
fdivr
vunpcklps
sub
scas
xchg
lock
subb
xor
dec
movsl
dec
adc
dec
and
fnstsw
sbb
or
xlat
mov
sbb
and
cs
outsb
or
sbb
sub
jno
mov
outsb
repnz
mov
pop
scas
inc
iret
inc
ljmp
lock
rdmsr
das
movsl
popa
lahf
outsl
fdivp
aam
adc
std
shlb
push
jge
lcall
sar
mov
mov
mov
mov
dec
pop
mov
movsl
ret
aam
xchg
mov
mov
movsl
mov
std
shr
in
push
add
mov
or
movsb
stc
lds
out
int
mov
ja
mov
testb
sbb
push
jg
testb
pop
enter
rolb
inc
mov
and
mov
lcall
mov
in
jns
mov
push
shlb
repz
cwtl
xchg
add
dec
cs
xor
mov
inc
xchg
stc
call
in
dec
incb
mov
adc
adc
adc
adc
enter
cld
mov
ljmp
cmp
mov
test
imul
lret
cmp
ficoml
pushf
cmpsb
jns
aad
lds
rorl
out
or
ror
mov
cmp
push
lret
mov
icebp
sarl
mov
sbb
cmp
or
mov
ret
iret
insl
ret
mov
stos
mov
clc
pop
push
cmp
xchg
orb
test
jmp
push
mov
into
sarb
and
fimull
mov
sbb
xchg
je
mov
xor
rcrb
mov
mov
adc
xchg
pop
repnz
mov
imul
notl
push
subb
xor
decb
xchg
sbb
mov
insl
mov
push
xorb
cmp
rorl
mov
dec
test
xchg
testb
das
xchg
push
mov
faddl
repnz
ret
adc
push
sbb
or
jbe
mov
pop
lods
hlt
adc
inc
mov
mov
sub
cwtl
mov
mov
push
dec
xchg
popf
lea
aam
xchg
push
or
or
fmul
hlt
push
sbb
repnz
sub
sti
xor
andl
out
adc
fiadds
movsb
mov
in
fisttpll
pop
repnz
pop
adc
bound
sub
dec
fimull
adc
mov
push
xchg
hlt
pop
cld
pop
mov
or
xchg
outsb
leave
lahf
popf
fsqrt
dec
adc
adc
mov
mov
popf
shrb
jge
mov
mov
lea
popa
lahf
adc
cmp
mov
nop
out
cmp
je
jns
jb
jecxz
sub
mov
jb
push
inc
dec
test
xchg
jg
sarb
push
xchg
sbb
enter
decl
js
adc
sti
mov
or
shrl
sahf
mov
leave
lods
gs
ret
lret
mov
icebp
pop
icebp
enter
je
or
mov
cld
movsb
sbb
add
ja
lret
fidivs
mov
push
stos
sub
std
mov
sahf
std
je
repnz
pop
sbbl
pop
mov
xchg
and
jg
push
jge
rorb
iret
insl
xchg
jbe
addb
shlb
out
movsl
mov
jbe
add
or
jge
mov
imul
stos
dec
ds
and
cltd
inc
rcrb
mov
mov
sub
inc
mov
repnz
mov
insl
imul
add
dec
cmp
in
pushl
shr
sbb
cmp
fisubs
mov
mov
add
push
lock
mov
mov
cmpsb
jo
ljmp
into
mov
out
mov
test
divb
mov
pop
inc
jge
fldcw
mov
in
lret
pop
adc
mov
cmpsb
cmp
repz
scas
loope
decb
repnz
add
push
loop
lods
xchg
int3
rclb
mov
repnz
push
shlb
xchg
sahf
in
fiadds
xchg
jno
mov
xchg
jb
mov
and
shlb
mov
sbb
mov
xchg
mov
xchg
fcmovbe
adc
out
dec
test
mov
mov
inc
shll
pop
je
pop
in
sub
jmp
xchg
fldenv
int3
xchg
cli
cmp
movsl
dec
push
lods
mov
mov
mov
mov
inc
sbbb
xchg
push
pop
jnp
mov
out
in
pop
into
cmpsl
rcrb
push
pop
or
mov
stos
xchg
mov
ret
add
inc
jae
pop
ljmp
pop
mov
call
sbb
push
jnp
std
mov
mov
mov
or
test
fs
push
pop
fidivrs
test
pop
fmulp
pop
dec
push
gs
cs
jnp
repnz
push
rcrl
cwtl
out
mov
movsb
cmpsl
mov
inc
push
cmp
add
bound
loop
jae
xchg
enter
push
das
jbe
js
push
jbe
fdivl
out
ljmp
div
mov
jg
shlb
mov
jge
xchg
cld
fnstenv
xchg
mov
jns
mov
add
xor
rcrl
add
ds
xchg
xchg
xchg
mov
mov
push
shll
xchg
aaa
xchg
jne
push
lcall
cmpsl
test
loope
sbb
int3
ljmp
loopne
lahf
mov
mov
inc
popf
ficoms
mov
dec
jb
aas
fdivrl
xor
jmp
mov
and
mov
mov
bound
jle
mov
adc
fdivrs
test
push
cmpsb
cwtl
pop
jno
stc
adc
lret
mov
jno
sbb
jno
pop
scas
fcoml
add
arpl
cmp
lds
cli
push
loope
shll
leave
iret
popa
fldenv
adc
or
xor
mov
xchg
push
pop
adc
inc
mov
push
repnz
lds
fildl
hlt
shl
xchg
testl
clc
popf
sbb
cs
push
sti
cmp
stos
adc
outsl
loopne
jne
loop
mov
add
mov
fcmovbe
ljmp
repz
adc
fwait
pop
jnp
out
sbb
cli
cmpl
mov
ljmp
lret
stc
xchg
lcall
jg
ret
xor
ljmp
rcr
mov
mov
adc
mov
mov
hlt
adc
icebp
ss
bound
scas
mov
fmulp
mov
lock
cld
shlb
outsb
adc
mov
mov
shl
ret
adc
mov
push
add
mov
fucomip
in
mov
sbb
cmc
lret
or
stc
rcrl
stc
sti
adc
or
test
lods
add
xor
adc
sub
and
movsb
xchg
sbb
jle
mov
aas
cmp
fcomip
shlb
dec
hlt
mov
bound
mov
lea
in
fs
mov
pop
xor
lods
ljmp
adcb
mov
jl
test
inc
jb
inc
push
mov
xchg
xor
jo
mov
ret
int3
ret
sbb
xchg
pop
out
out
adc
ss
mov
int
push
in
repnz
pop
stos
fmuls
clc
xchg
push
adc
std
jmp
push
fimull
or
mov
fisubl
ljmp
dec
lcall
sti
ljmp
out
xchg
loope
mov
loop
jl
sbb
mov
stos
out
pop
cmc
pop
adc
dec
pop
mov
lret
push
or
add
sar
fwait
jbe
push
clc
push
cld
adc
adc
xchg
mov
enter
xchg
xchg
jle
and
sbb
pop
or
mov
stos
or
dec
and
mov
push
add
js
loope
gs
xor
xchg
cli
sbb
test
fsubp
lahf
stos
lcall
loop
test
push
push
jl
incb
mov
cld
mov
roll
nop
xor
lahf
out
cmpsb
aam
cmc
ret
int3
fcoml
sbb
bound
adc
mov
pop
jb
lcall
xlat
and
imulb
cli
mov
mov
lods
rorl
jb
bound
mulb
or
sti
add
out
cmp
adc
call
movsb
sub
add
mull
sbb
scas
insb
push
adc
push
pop
stc
push
lods
adc
cwtl
cmp
clc
ficoms
pop
in
lcall
mov
out
push
stos
jp
adc
push
xchg
jp
or
jb
loopne
xchg
aam
dec
adc
test
inc
repnz
ret
in
insb
incl
int
mov
xchg
test
mov
mov
ljmp
or
mov
hlt
cltd
and
xchg
out
add
scas
xchg
test
jb
lret
out
test
jbe
lcall
into
xchg
clc
out
mov
xchg
or
lret
push
inc
fcmovne
mov
mov
push
ret
stos
mov
push
faddl
in
sub
orl
cld
xor
or
mov
fucom
sbb
test
lcall
mov
pop
rolb
add
jmp
bound
shlb
dec
mov
or
inc
sbb
mov
bound
neg
add
das
sub
xchg
xchg
jmp
xor
loopne
jo
fdivrl
jecxz
push
icebp
rclb
mov
xchg
jno
mov
xor
xlat
and
sbb
test
fs
in
sbb
sbb
mov
repnz
and
dec
dec
pop
mov
call
mov
or
out
movsl
arpl
push
fwait
int3
gs
dec
pop
test
fdivl
sbb
mov
ds
and
int3
in
or
leave
jbe
jmp
insb
aam
mov
stc
and
add
jo
mov
pop
mov
adc
divl
xchg
shl
adc
or
in
mov
cli
add
push
lcall
aad
mov
adc
mov
in
cltd
movsb
adc
test
rorl
cs
xor
mov
scas
setns
jae
repnz
dec
and
mov
push
sub
mov
push
adc
and
cmp
mov
sub
xor
jle
sahf
loopne
jge
xchg
inc
das
xor
dec
jbe
push
push
and
jo
rcr
mov
inc
loopne
mov
stos
daa
or
dec
inc
sub
cltd
mov
les
xchg
sbb
sbb
dec
loop
pop
gs
test
xor
ret
adc
jns
mov
xor
insl
xor
dec
outsb
shrb
inc
ljmp
in
jne
cli
pusha
adc
cmpsb
cmpb
dec
into
adc
daa
mov
inc
xor
ljmp
fnstsw
pop
fldz
loopne
jno
pop
xor
test
push
loop
mov
push
xor
repz
in
fwait
nop
lcall
push
out
popf
xchg
outsl
push
adc
clc
loopne
sub
ret
jnp
mov
lea
jg
xchg
je
aad
adc
xor
mov
arpl
ss
or
sub
ja
imul
popf
repnz
subb
mov
data16
mov
popf
push
and
bound
or
adc
jno
psllw
sbb
jecxz
xchg
jp
push
cli
or
add
sarb
movsl
popf
scas
shr
ret
shlb
hlt
fimull
imul
nop
dec
or
and
into
mov
aaa
cmp
inc
enter
push
cmp
pslld
dec
push
sbb
adc
repnz
xchg
mov
push
repnz
scas
jbe
fists
cmp
imul
cli
mov
pop
inc
mov
push
or
lds
rcl
xcrypt-cbc
cmpsl
xchg
or
and
cs
jle
cmc
and
pop
xchg
pop
fnstenv
enter
js
mov
cmp
iret
pop
loopne
mov
mov
std
jbe
xlat
ljmp
imul
and
pusha
fst
jae
jp
mov
mov
or
pop
cmpsb
cmp
adc
and
add
pop
and
in
daa
adc
jns
sbb
xor
push
loopne
adc
imul
pop
stc
inc
pop
add
xlat
mov
ljmp
into
or
iret
sbb
xlat
add
and
fstpl
sbb
cli
adc
mov
pop
sbb
fsubrs
fsubl
add
pop
adc
rolb
gs
scas
and
cli
iret
sbb
jae
adc
mov
cmp
stc
outsb
psrad
pop
shrl
aaa
cli
out
subl
and
loopne
pop
mov
decl
fidivrs
pop
stc
pop
adc
repnz
xchg
sbb
xchg
in
push
aad
movsb
push
popa
sbb
push
xor
out
mov
sbb
mov
push
push
and
out
cld
sti
pop
decb
in
xor
lea
lods
jmp
xchg
pop
cmp
cltd
add
addr16
push
mov
mov
push
rcll
incb
mov
mov
outsb
sub
dec
pop
push
sub
push
jg
mov
sbb
dec
pop
mov
xor
dec
xchg
out
imul
cmp
pop
pushf
or
jmp
push
inc
jno
and
cmp
dec
jo
or
pushf
fsubr
sbb
ficoms
or
mov
outsb
mov
inc
and
lcall
arpl
push
sub
dec
lcall
xor
adc
ss
xchg
daa
adc
cwtl
int3
out
xchg
std
std
xor
ds
es
dec
pop
inc
xor
dec
gs
inc
cs
ret
stos
xor
lods
scas
sbb
or
xor
shlb
sub
and
in
dec
mov
inc
repnz
adc
dec
add
les
dec
mov
push
jns
leave
mov
out
or
xchg
or
or
fmuls
mov
lcall
in
clc
inc
repnz
mov
inc
adc
lock
fisubs
inc
adc
call
dec
xchg
or
aas
sbb
or
mov
jmp
ret
es
and
adcb
insl
in
shrl
dec
pushl
mov
popf
push
xlat
inc
jmp
inc
sbb
in
das
fcoms
outsl
dec
pop
and
mov
and
sbb
dec
pop
fcmovu
jge
adc
stos
and
adc
fnstcw
aaa
mov
movsl
or
repnz
or
push
mov
push
repnz
icebp
adc
xchg
mov
adc
loop
sbb
cld
and
loop
mov
nop
add
sbb
imul
data16
xchg
in
lret
sti
cld
or
or
sti
testl
insb
sbb
adc
clc
dec
sbb
or
rol
lret
fimull
push
sub
cs
das
add
decl
or
daa
sti
jmp
mov
and
sbb
and
sbb
sti
inc
dec
mov
inc
jnp
jnp
add
icebp
jge
aas
lods
push
lret
add
sbb
and
push
lods
into
push
adc
add
imul
dec
mov
xchg
lret
out
mov
imul
into
or
pop
arpl
sbb
jp
outsl
shlb
sub
mov
jmp
add
push
adc
push
gs
arpl
pop
in
shl
jmp
push
push
push
push
sub
arpl
push
add
sub
xchg
ljmp
outsb
adc
mov
xlat
sbb
pop
add
and
push
dec
shll
pop
out
pop
fadds
aam
arpl
rcrb
das
ljmp
in
mov
jnp
dec
or
cld
cli
fidivl
out
xchg
out
dec
mov
int3
jmp
es
adc
jae
push
addr16
inc
sub
mov
outsl
or
loop
sbb
in
call
in
sbb
repz
std
sub
sub
pop
out
in
sub
or
mov
sbb
icebp
or
cmp
add
stc
jmp
movsl
out
mov
jmp
adc
fisttpl
dec
ss
insl
gs
arpl
popa
sub
decl
mov
in
int3
add
fdivp
adc
and
sbb
fwait
inc
lock
mov
jle
popf
push
add
scas
or
in
or
shlb
adc
xor
and
pop
into
lock
aaa
je
mov
cld
xchg
jns
lock
adc
and
cmp
or
into
out
or
inc
adc
push
popa
or
or
mov
cmc
movsl
stos
adc
jns
pop
sbb
into
push
addr16
push
lea
pop
cwtl
int3
loope
add
adc
mov
int3
add
add
or
or
mov
in
hlt
sbb
bound
or
or
xor
pop
mov
repz
sbb
in
mov
pop
push
pop
je
data16
inc
adc
cmpsl
iret
add
inc
jl
test
xor
pop
or
xor
cmp
outsl
add
jns
pop
test
roll
lea
pop
lds
fs
jns
or
movhps
xchg
sbb
and
mov
in
dec
cli
outsb
pop
setp
sbb
mov
repnz
in
fimuls
in
mov
sub
loope
or
jae
mov
or
inc
sub
sti
div
or
push
add
out
cld
xchg
nop
outsb
in
inc
sti
sbb
fs
daa
hlt
jo
mov
outsl
cli
adc
cmp
les
cld
jmp
mov
call
cmpsb
out
adc
sub
mulb
or
or
rorl
fsts
sarb
xor
inc
arpl
mov
push
add
out
push
shr
aam
add
out
push
in
sbb
sbb
fnstsw
jl
fs
xor
jecxz
jns
and
jle
fidivrl
in
sbb
push
push
or
ljmp
testb
add
stc
in
cmpsb
pop
lahf
repnz
cs
cmp
or
push
mov
push
test
lods
imul
test
sbb
mov
dec
ljmp
jecxz
out
in
cli
sbb
pop
dec
xchg
aam
fsts
adc
flds
clc
or
repnz
or
sbb
pushf
pop
aaa
sub
adc
adc
movsb
adc
push
push
adc
cld
call
add
xor
sbb
or
and
pop
jb
adc
stos
cmp
mov
fists
cmp
cmp
fsts
lahf
or
out
or
jno
push
leave
adc
or
pop
sbb
add
imul
or
in
mov
xchg
cld
icebp
loope
sbb
bsr
fmull
jmp
pop
dec
std
bsf
pushf
mov
pop
add
psubw
call
in
into
int
xlat
fcmovu
lret
bswap
enter
les
mov
mov
mov
cmpsl
stos
movsl
movsb
mov
lcall
mov
insb
imul
jns
ja
jne
pop
cvtdq2ps
push
cmovl
pop
pop
push
pop
push
andps
ds
dec
inc
dec
cmovne
sub
cmp
getsec
cmp
push
or
and
dec
cmp
or
in
add
dec
or
into
inc
nop
sarl
shr
pop
cli
int3
inc
xchg
inc
sbb
pop
fstpt
or
sbb
or
mov
jmp
dec
mov
xchg
inc
sub
pop
jmp
aas
pop
lock
insb
inc
pshufw
dec
vmwrite
ja
stc
fistl
inc
adc
iret
mov
or
sub
pusha
push
mov
subb
out
push
fwait
and
sub
xlat
xchg
bswap
and
data16
jns
out
push
test
xlat
pushf
mov
ds
call
dec
sbb
rcll
loop
sysret
sbb
pop
test
fldl
mov
and
xchg
adc
jge
xor
lds
lahf
lods
in
orb
pop
mov
mov
jge
mov
insb
xchg
jo
jns
mov
fimull
xor
sar
data16
fildll
sub
mov
stos
cmp
xor
push
jns
cwtl
dec
movswl
dec
mov
pop
lds
fiaddl
jne
jmp
shl
xchg
movsl
aad
adc
push
cmp
imull
sub
cmc
sbb
mov
jb
in
sub
jnp
cli
and
mov
mov
jbe
icebp
xor
lds
pop
jb
push
inc
mov
xchg
xchg
clc
dec
sub
testl
push
movsl
mov
push
ret
push
insb
test
push
mov
cmovs
fdivr
add
cwtl
add
push
out
and
push
sub
inc
stos
mov
cmp
mov
les
clc
rorl
sub
xchg
fdivr
fisubs
bswap
mov
jbe
mov
imul
out
cli
adc
sar
sub
sarl
clc
stos
cmpsl
dec
psubsb
xor
iret
jae
fs
stos
adc
sbb
enter
shlb
int3
pop
call
lds
femms
jmp
rcr
out
or
and
mov
xadd
aad
rcrb
sub
cld
aaa
cmp
or
fsub
jns
pop
pop
scas
je
test
pop
das
cli
mov
jmp
cmp
mov
cmpsl
es
mov
stos
dec
inc
dec
adc
xchg
out
and
es
pop
jecxz
push
hsubpd
jae
movsl
js
or
ljmp
test
pop
inc
cmc
push
daa
dec
rcrb
sub
jb
cmp
orl
xor
add
cmpsb
mov
mov
xadd
xor
mov
cmpps
sbb
aaa
push
pavgb
cmpsb
or
xor
inc
dec
call
jo
lea
lods
push
mov
gs
xor
les
jae
mov
mov
lcall
jg
mov
push
dec
or
int3
sub
mov
addr16
mov
push
jno
fcomps
scas
push
mov
sub
lock
xchg
add
mov
mov
push
arpl
bndstx
out
dec
mov
shlb
adc
sub
mov
sahf
orl
repnz
roll
sbb
pmaxub
mov
jp
or
or
sub
inc
sub
adc
test
pop
mov
es
lods
jecxz
cmc
jbe
jo
js
mov
or
es
ss
cld
or
adc
adc
movsb
add
adc
mov
popa
inc
sub
add
cmc
sar
pop
test
pusha
dec
pop
sti
in
dec
out
jbe
push
popl
or
loop
pop
cmp
lahf
inc
fdivs
roll
sub
movsl
jp
insb
repnz
and
or
inc
dec
stos
jecxz
or
xchg
pmaxsw
shlb
and
pop
sub
and
loopne
je
mov
sbb
mov
or
sub
in
add
lret
mov
je
mov
paddd
adc
cmp
cmpsl
sbb
sub
xchg
dec
or
mov
adc
movzbl
xchg
mov
pusha
aas
movsb
adc
lock
dec
repz
ret
mov
inc
or
leave
nop
add
sub
push
xor
sub
movzbl
pop
test
lea
js
dec
add
insb
push
add
ret
or
fisubrl
dec
popf
loop
pmulhuw
js
dec
scas
inc
dec
bswap
sbb
fldenv
outsl
pop
sub
xor
popa
imul
test
repnz
mov
out
int
aaa
lret
btc
inc
push
sub
addr16
outsl
fistps
shll
or
cmovbe
xor
iret
mov
clts
cmpsl
and
outsb
enter
rcrl
pop
int
push
bound
xchg
xchg
mov
es
sub
subl
mov
testl
rolb
mov
sbb
jb
add
mov
test
lock
movl
fimull
pop
cmpsl
push
sub
xor
push
inc
shll
mov
pusha
push
jnp
imul
outsl
mov
or
aas
decl
fisubrs
popa
xchg
sbb
pop
push
mov
pop
or
dec
inc
scas
test
sub
stos
push
movq
stc
mov
cs
seto
sbb
cvttps2pi
outsl
push
sub
inc
jno
fiadds
cltd
je
and
nop
icebp
fdiv
dec
ret
addps
lods
adc
imul
and
addr16
mov
cmp
mov
aam
movsl
fisttps
mov
dec
hlt
cmp
lret
or
adc
push
sahf
mov
pcmpeqw
or
ds
add
or
stos
in
cmpsl
sub
sub
aas
mov
dec
cwtl
fidivrs
cmpsb
push
mov
fadds
adc
sub
and
push
xchg
fildll
cmpsb
sub
rorb
repz
dec
sti
pop
pop
scas
outsb
clc
xorl
mov
push
jecxz
add
int
xlat
movsb
mov
popa
add
or
nop
fmuls
fldl2t
addb
xor
in
dec
jb
sti
fiadds
lahf
adc
das
pop
inc
movaps
dec
mov
add
or
shl
xchg
loopne
adc
loop
jle
fsubl
fs
addr16
xor
movq
mov
adc
pop
pop
sbb
popa
mov
sbb
outsb
xchg
sbb
push
sbb
addr16
out
adc
xor
cmp
push
add
sub
jl
mov
test
imul
aam
out
das
lahf
loop
adc
mov
loope
and
adc
in
imul
mov
lret
dec
inc
in
fs
mov
aas
add
movsb
fcomi
adc
fadd
xor
jns
movsb
adc
lds
insb
xchg
cltd
fisttpl
mov
repnz
adc
adc
pop
inc
stc
mov
push
inc
mov
mov
add
or
or
adc
int
sub
ljmp
outsb
call
shrb
adc
add
push
cwtl
adc
bound
push
jae
adc
cli
loop
sbb
mov
cwtl
les
ss
orb
adcl
pop
ret
jno
mov
clc
push
inc
and
sub
jnp
repnz
addr16
sub
out
xor
add
fimull
sbb
xor
sub
enter
push
pop
sbb
nop
pop
xchg
jge
sbb
call
sbb
and
icebp
pusha
push
cs
int3
in
lret
pop
mov
add
sub
xlat
ret
inc
push
in
ljmp
pop
iret
add
in
sbb
adc
push
mov
outsb
imul
jmp
pop
insl
lret
mov
or
negl
imulb
fcoms
pop
int3
push
or
loopne
or
mov
adc
in
adc
and
jl
or
out
push
mov
lcall
lcall
fsub
cli
fcomps
aas
insl
push
inc
icebp
sub
adc
and
lods
lret
sbb
ljmp
lcall
int3
call
call
add
or
adc
mov
adc
sbb
insl
pop
cli
adc
xchg
sbb
inc
xor
sbb
mov
loopne
xor
push
add
mov
sar
sub
int3
sbb
xchg
push
or
repnz
cmp
pop
inc
out
dec
aad
xchg
vunpcklps
iret
mov
std
add
std
test
out
or
int3
bound
or
adc
or
subb
lcall
lds
adc
add
fcoms
mov
dec
add
icebp
add
cmp
scas
into
ljmp
xchg
vmovsd
add
adc
loopne
add
rol
shll
cvtps2pd
das
pop
imul
outsb
int3
sbb
daa
push
stc
or
mov
dec
stos
sbb
or
outsb
adcl
adc
inc
cs
or
adc
pop
pop
popa
and
cmp
loopne
dec
dec
addl
push
xor
push
stc
arpl
cmp
jge
test
cmpl
or
jns
or
or
add
in
sbb
pop
adc
add
jns
adc
xor
adc
cs
into
sbb
push
rclb
subb
scas
add
subl
lret
pop
push
and
mov
les
mov
add
call
mov
mov
pop
add
mov
lcall
and
xor
adc
jle
into
jmp
xchg
stc
cld
sbb
push
subl
push
icebp
cmc
icebp
hlt
add
sub
sbb
ljmp
adc
repz
call
push
mov
testb
outsb
dec
int
push
scas
and
cmp
stc
cmc
adc
pop
fs
adc
pop
xchg
cmc
adc
mov
adc
es
and
enter
movsb
lret
iret
sub
mov
aam
xchg
aaa
inc
es
fisubrs
loop
scas
sub
sahf
pop
mov
jg
int3
pop
adc
or
repnz
adc
imul
maskmovq
negl
sub
add
xchg
adc
push
cwtl
mov
movsl
pop
mov
lret
dec
adc
hlt
and
jmp
and
or
divl
and
clc
jecxz
jle
out
fucomip
fsub
test
cmc
das
and
xor
std
outsl
or
sub
sub
push
mov
clc
stos
roll
punpcklbw
or
cmp
ljmp
push
popf
scas
adc
leave
aas
std
dec
outsl
mov
mov
lahf
lds
scas
invd
call
fstpl
bswap
test
nop
cmp
movsl
movq
out
movntps
div
or
add
xlat
cmpxchg
inc
mov
xor
dec
jecxz
xchg
pmaxsw
rcrb
adc
mov
cltd
inc
fnsave
cmpsb
dec
adc
sbb
dec
fwait
mov
in
push
cli
insl
insb
xchg
and
stos
lahf
sub
xchg
insl
cmovp
sub
pop
cmp
jb
jne
imul
adc
movzbl
aas
decl
lds
test
jbe
and
iret
xchg
out
das
imul
rorb
xor
cld
mov
clc
cmp
pop
push
testb
imul
sbb
cli
mov
pop
push
push
sbb
dec
sub
in
inc
lret
mov
inc
rdtsc
outsl
data16
aad
pop
setle
andl
sub
imul
pmaddwd
loopne
fucomi
mov
pop
inc
or
push
ja
cmpsb
sbb
out
sbb
cmp
push
xlat
gs
push
data16
ret
jecxz
xor
outsb
jno
mov
ja
adc
sbb
cmp
loopne
sub
or
repnz
fstpl
mov
xor
xchg
sub
jnp
movsb
adc
push
fsubl
lds
xor
pcmpeqw
out
inc
imul
sbb
fisubs
adc
inc
pop
xor
dec
jae
or
and
shll
out
dec
dec
or
pop
iret
rcl
ror
jge
out
pop
in
dec
arpl
mov
push
sbb
jle
xlat
in
lcall
adc
jle
popf
adc
scas
sbb
sbb
jmp
sub
hlt
imulb
into
adc
loop
mov
popa
pop
aas
fnstcw
popa
or
ss
sub
jmp
rcll
inc
mov
push
xchg
repnz
adc
icebp
cmp
sub
or
cld
adcl
and
sbb
sbb
pop
jns
inc
mov
jl
cltd
aad
fists
jl
in
jl
xchg
fmulp
notb
jle
and
notb
jmp
push
fsubr
or
pop
push
xchg
add
stc
mov
xchg
jle
enter
or
jp
imul
movl
adc
inc
int
aaa
sbb
adc
outsb
clc
cmp
iret
je
add
sbb
mov
push
insb
or
loope
or
add
push
add
mov
fcoms
aas
jb
inc
iret
pusha
push
pop
repz
repnz
dec
sbb
sub
pop
inc
mov
adc
and
mov
mov
mov
adcb
adc
shl
and
popf
or
in
out
sbbb
lcall
pop
or
cld
sbb
cmp
outsl
sahf
jecxz
in
sbb
stc
add
div
mov
dec
shlb
notl
cmc
mov
clc
out
xchg
cvtdq2ps
pop
imul
adc
push
out
scas
ljmp
aas
push
icebp
lcall
jmp
into
add
adc
and
inc
sbb
push
shrl
sub
repnz
adc
popa
mov
push
imul
dec
pop
dec
movl
in
lock
fstpl
cltd
dec
pop
mov
addr16
ds
push
xlat
jb
jl
sub
inc
jns
pop
enter
jl
pusha
xchg
decb
jns
fists
xchg
mov
sbb
hlt
loop
data16
jp
mov
loop
jmp
pop
and
xchg
sub
cli
sti
int
ds
bound
addl
push
bound
loop
les
adc
popf
bound
or
jmp
aaa
adcb
xchg
int3
or
jg
or
pop
xchg
int3
or
xchg
dec
sbb
mov
outsl
lcall
sbb
testb
xchg
mov
orb
add
mov
jp
sbb
addl
and
movb
les
sbb
je
cmp
push
pushf
mov
repnz
into
jecxz
loop
and
into
inc
ret
outsb
fldcw
in
push
sbb
mov
imul
icebp
stc
or
testb
pop
cli
push
jg
cld
shlb
push
cli
mov
sbb
push
fwait
test
enter
bnd
push
cld
into
pop
je
addr16
xchg
push
cmp
mov
hlt
arpl
jnp
sbbb
aas
mov
xor
test
int
ret
adc
xchg
outsb
cmp
jg
mov
orl
dec
cmp
mov
mov
push
mov
add
inc
test
lock
notl
scas
inc
mov
inc
inc
dec
or
cmp
ljmp
push
sub
push
pop
jb
gs
loope
push
push
and
jmp
pop
dec
add
imul
pop
sti
jp
dec
cmp
xchg
xor
negl
xchg
insb
sbb
addr16
in
inc
dec
lcall
cmpsb
inc
inc
push
xor
mov
fdivrs
add
in
fistl
xlat
stc
xchg
inc
bound
dec
adc
dec
push
inc
cmp
sbb
fistpl
pop
idivl
and
pop
clc
hlt
mov
lret
icebp
mov
in
stos
dec
mov
and
jmp
dec
push
xor
pop
dec
inc
cmp
inc
stos
repnz
inc
mov
into
fsubrp
or
cld
jae
dec
mov
orl
fsubrp
xchg
dec
fs
sbb
lods
aad
sar
jmp
icebp
push
dec
sbb
das
shl
icebp
imul
scas
das
mov
xrelease
or
mov
negl
test
push
push
pop
sbb
mov
push
jmp
sbb
lock
out
lret
repz
mov
sbb
mov
cld
shll
mov
aad
sti
sbb
jecxz
or
pop
mov
cmpsb
cmp
xor
jo
jl
fidivl
push
sbb
ljmp
xor
push
inc
sub
fdivrs
add
sbb
ja
icebp
mov
stc
mov
dec
lret
jmp
xor
inc
jmp
jnp
sub
gs
addr16
mov
push
dec
mov
mov
cmc
mov
cmpsl
test
xlat
div
sbb
or
lds
cmp
cmp
lods
jne
aam
pop
mov
rclb
sub
xchg
loopne
in
notl
cmp
in
xchg
pop
push
fwait
inc
fcomp
icebp
into
scas
pop
and
push
jmp
dec
pop
pop
mov
insl
sbb
pop
mov
adc
loopne
mov
scas
icebp
and
pop
lahf
fucom
fmulp
fcmovb
jmp
lcall
jg
sub
enter
fidivrs
jg
jecxz
jle
scas
loop
pop
jg
jle
enter
add
xor
std
lods
repz
clc
enter
xchg
cmp
repnz
or
dec
test
ret
lahf
pop
jge
inc
or
or
jecxz
int3
sbb
pop
and
jecxz
ret
adc
push
mov
icebp
mov
lds
mov
or
imul
dec
jg
into
or
sbb
fmuls
outsl
shll
pop
add
pop
push
jbe
dec
dec
inc
in
imul
add
ljmp
adc
push
repnz
sub
adc
in
out
add
imul
adc
jg
xchg
testw
je
rolb
dec
rorl
jb
sbb
xchg
fsubrp
fstp
call
push
rcr
fimuls
out
loope
icebp
aam
orb
and
sbb
out
sbb
adc
mov
sbbb
addr16
insl
sarl
sub
jae
mov
lcall
pop
dec
push
jp
shlb
inc
cmpsl
adc
mov
jno
sub
into
adc
or
je
inc
lahf
into
lds
xor
icebp
lock
cwtl
cmp
jns
mov
or
out
sbb
bound
fcmove
rcrb
xchg
adc
aam
or
aad
or
pop
jg
bound
adc
sbb
add
bound
outsb
add
ss
mov
cli
arpl
faddp
pop
lahf
rcll
mov
sbb
bnd
loop
xchg
push
in
sub
cmp
or
jns
out
cmp
fstpl
mov
or
push
add
mov
in
adc
and
xorb
lret
dec
sbb
jl
push
sahf
push
dec
fmuls
mov
adc
xchg
xchg
rclb
data16
lret
sbb
popf
adc
fidivrs
and
loop
push
xchg
dec
inc
loop
push
fidivrl
loop
leave
jmp
add
fidivrl
lcall
adc
cld
jns
subl
popf
adc
pop
andl
mov
cmpl
sbb
mov
mov
adc
push
cmpsb
aaa
dec
fadds
fs
and
jae
in
mov
inc
jl
jp
clc
pop
jbe
arpl
loope
fs
je
hlt
pushf
xchg
adc
lcall
imull
xchg
cmovbe
scas
cmpsb
call
xchg
arpl
xchg
inc
dec
out
pop
adc
rcll
jno
dec
jb
repnz
and
cmpsl
iret
fisubrs
fldcw
movd
fisubl
movsl
sbb
mov
mov
orl
jbe
inc
bswap
arpl
or
scas
cmc
dec
jns
mov
movsl
mov
fbstp
push
jne
outsl
incb
lret
scas
xor
mov
inc
in
mov
repz
dec
test
inc
pop
fstpt
fsubrs
mov
mov
xchg
into
sub
cwtl
rcll
mov
push
jg
loopne
cmpsb
lret
and
aad
mov
cmpsb
pop
cmp
push
and
sbb
jne
xchg
xchg
sbb
in
cld
out
or
jbe
cmovne
test
push
pop
or
sbb
stos
jnp
sub
push
push
setp
or
pushfw
push
push
out
or
into
dec
mov
adc
aas
push
adc
data16
sub
cli
shlb
push
inc
sahf
arpl
xchg
dec
cmpsl
stc
xchg
sarb
push
sbbl
push
addr16
mov
jge
insb
psrad
stc
jg
add
xchg
es
test
jo
gs
and
cltd
dec
xor
scas
adc
in
pop
xchg
out
push
mov
sbb
sbb
push
mov
lods
inc
pushf
or
cs
sbb
daa
fwait
dec
invd
inc
test
dec
or
aad
dec
int3
shll
pop
cmovno
aam
dec
sahf
cwtl
repz
dec
mov
mov
shr
jge
xchg
out
rorb
and
adc
ret
inc
mov
adc
add
inc
dec
cmp
loop
not
cwtl
push
lea
div
mov
sbb
fisubrs
adc
addb
in
cmpsb
jecxz
xchg
repnz
lea
sub
adc
jge
fwait
js
mov
rcrl
add
jo
mov
sbb
or
cmp
dec
xchg
xchg
loop
nop
fisttpll
or
jb
loope
outsl
or
jp
aas
ret
stos
or
mov
push
push
out
cvtdq2ps
adc
push
mov
ud1
mov
cmp
mov
or
test
dec
scas
cld
dec
and
imul
pusha
sarb
in
xchg
out
clc
addr16
push
scas
ss
jge
sub
stos
jmp
shl
mov
popf
jb
cmc
aaa
mov
psrlw
xchg
loopne
stc
dec
addps
mov
mov
pusha
mov
ja
subl
xor
dec
mov
ret
pop
sti
or
out
stos
mov
cmp
pusha
sbb
lret
ficoml
movups
jmp
adc
mov
in
xor
fmuls
cmc
stc
lock
int
mov
into
cmp
adc
pop
xchg
pop
mov
pandn
enter
lcall
mov
mov
sub
arpl
xchg
data16
outsl
xor
or
lcall
mov
cmp
mov
mov
stos
mov
stos
cmp
mov
in
les
jo
dec
adc
scas
adc
sub
test
das
shlb
jno
int3
les
sbb
aam
lds
inc
adc
lcall
repz
decb
add
push
das
dec
push
in
dec
in
in
ds
mov
push
popf
dec
pop
in
jns
push
out
lcall
inc
es
repnz
adc
in
or
push
adc
mov
scas
ds
aam
add
xchg
in
or
adc
jmp
inc
nop
ret
ljmp
pushf
pop
jle
in
pusha
dec
in
out
pop
fwait
mov
test
mov
repnz
jb
cld
mov
repnz
pop
pop
adc
das
test
sub
sbb
pop
push
xchg
pop
jbe
sub
fadds
arpl
sbb
loopne
mov
pop
sbb
xchg
push
inc
adc
cmp
xchg
push
mov
sbb
js
out
sbb
pop
popa
cmp
pop
push
pop
shr
fwait
lret
mov
mov
cmp
cmpsl
or
popa
dec
or
adc
add
sarb
sub
mov
fwait
push
jns
out
fwait
xchg
movsb
int3
or
loop
adc
cmp
adc
scas
xchg
rcll
loop
popa
das
xchg
or
jae
push
shlb
mov
scas
or
arpl
and
cltd
roll
sbb
sbb
cmc
loopne
cmpsl
loop
pop
or
enter
lea
cmpsb
adc
scas
xor
push
int3
inc
push
ds
jg
dec
xor
aas
or
ja
popa
decl
push
jmp
fdivl
push
iret
jo
in
pushf
popa
jb
add
sarb
mov
pop
call
loop
jno
jo
lret
loopne
fsubl
fs
jbe
nop
mov
mov
mov
xchg
in
dec
stos
push
sahf
rclb
cmp
mov
pop
test
out
cmp
scas
pop
nop
add
shrb
xor
out
pop
cmpsl
repz
mov
fcoml
fucom
xor
fiadds
add
mov
xlat
loop
fdivl
jmp
scas
sub
xchg
add
sbb
adc
mov
mov
mov
std
jg
lds
dec
stos
adc
mov
or
push
sub
or
dec
leave
enter
cmc
mov
mov
add
and
in
or
repnz
out
or
dec
mov
push
and
cwtl
jmp
inc
pop
mov
mov
lock
xor
in
adc
fwait
push
pusha
fsubrl
mov
outsl
inc
xor
and
pusha
xorl
jb
test
mov
inc
push
imul
fcompl
aaa
jne
jecxz
loop
cmp
daa
dec
dec
add
paddusw
loopne
ljmp
mov
push
xlat
and
jl
push
mov
sub
jp
jne
pminsw
mov
gs
cvtps2pi
int
cmp
imul
sbb
mov
add
daa
or
mov
repz
fnstenv
push
aam
orb
add
dec
rcll
sub
adc
mov
xchg
paddw
inc
add
sbb
cld
dec
pop
test
mov
xchg
lods
out
jae
cmp
stc
sub
push
xchg
cmp
push
inc
mov
iret
inc
por
lahf
sti
ja
inc
seta
and
mov
lret
aam
addr16
jno
es
pop
xchg
je
xor
enter
inc
push
jl,pn
pop
cmovs
scas
pop
insl
xchg
mov
stc
xor
xchg
and
add
cmp
iret
pop
stos
je
out
add
aam
lcall
fisubs
out
sti
adc
pop
cmp
jge
orl
int
mov
adc
popa
and
sbbl
inc
js
xor
fnstcw
movsb
push
cmpb
movsl
scas
mov
pminub
jge
add
sbb
outsb
andl
pop
scas
mov
pop
sbb
movswl
cltd
call
fisttps
pop
pusha
seta
mov
jbe
pop
mov
mov
or
pop
int3
xchg
fimuls
popl
orb
cmp
push
iret
and
xor
lahf
add
and
test
jns
cmova
mov
sub
fmuls
pusha
pop
inc
clc
pop
inc
repnz
pop
sbbb
ds
lahf
or
sub
sbb
insb
or
mov
add
push
sbb
sarb
fcmovnu
out
lahf
xchg
std
pop
xchg
scas
mov
or
jg
popa
mov
setae
cmpsb
pop
insb
stos
ds
sarl
xlat
xchg
mov
sahf
dec
or
dec
push
popl
sub
cmpsb
int
mov
notl
cmpb
leave
andnps
mov
mov
enter
nop
lds
inc
out
movsl
shlb
cmpsl
add
pop
inc
imul
xlat
lods
add
jle
cmpb
push
cmove
das
mov
jns
fwait
out
mov
shrd
or
jge
cmp
jmp
jnp
nop
testb
in
and
add
xor
or
push
jecxz
lret
repnz
jae
sahf
imul
add
fistpl
cltd
movzwl
xor
or
int
pop
aas
movsl
cmp
add
xor
setl
push
inc
add
cmp
or
hlt
rolb
mov
rclb
adc
sub
and
loopne
fimull
sti
pop
ljmp
xlat
xchg
sahf
aas
push
sub
pop
fwait
sub
jmp
dec
test
xor
bts
mov
fcmovb
xlat
inc
mov
xchg
out
sub
xchg
filds
mov
shl
rcll
mov
cmpsb
jmp
test
call
jb
stc
or
mov
dec
lea
mov
xchg
adc
mov
add
movaps
jge
sbb
fwait
sub
mov
mov
xchg
mov
add
or
leave
xchg
or
dec
jge
std
xor
lahf
add
pop
jg
sahf
adc
lret
int3
fs
or
adc
scas
mov
into
pushf
inc
loope
outsl
cmpxchg
test
out
repz
imulb
mov
repnz
psubsb
jns
push
push
mov
add
push
jb
pop
cmp
sub
mov
stc
cmove
lds
cmpsl
in
fidivs
xchg
daa
movsb
imul
cmp
pshufw
psubb
fisttps
sbb
xor
push
pop
and
movsl
paddb
pop
sub
scas
imul
adcb
jae
sub
dec
xchg
push
xchg
jmp
sete
into
mov
stos
sub
sti
btcl
adc
pmuludq
mov
paddd
sub
push
test
fwait
and
out
inc
aas
xchg
imul
movsb
fiadds
ret
inc
fldenv
psrlq
repz
gs
enter
jge
or
inc
lcall
outsb
stos
xchg
out
mov
les
sbb
divb
dec
cltd
jl
aam
mov
sub
arpl
stos
decl
mov
jl
mov
sti
outsb
sbb
lcall
lock
sbb
sub
dec
xchg
pop
fiadds
std
adc
lahf
pop
in
in
imul
mov
add
int
add
add
mov
out
mov
sub
adc
pusha
hlt
jg
test
mov
pop
mov
inc
pop
jno
orb
test
ret
repnz
pop
inc
inc
ffreep
xor
jb
arpl
jmp
notl
pop
out
movsb
addr16
mov
jae
icebp
and
mov
aas
adc
cmp
xchg
xor
hlt
daa
daa
bound
pop
arpl
ljmp
testl
sub
adc
fsubrs
add
mov
push
sub
iret
or
mov
adc
stos
lods
js
andb
out
xchg
push
test
pop
mulps
or
or
bound
mov
add
mov
mov
rolb
scas
xor
mov
fxch
fnsave
pop
decl
out
mov
inc
push
icebp
lret
lods
mov
mov
insl
xlat
js
int
repnz
adc
fsubs
iret
pop
sbbb
pop
or
into
or
mov
jbe,pn
xor
add
cmp
mov
data16
push
xor
mov
cmp
rcrb
das
call
es
cld
cmc
pop
lret
sbb
mov
add
mov
add
bound
add
sub
xchg
fisttpll
mov
call
sub
popa
jnp
push
into
rorl
push
out
out
xchg
sarb
test
cmc
bound
and
and
sub
dec
add
cmp
icebp
inc
outsb
mov
fnstsw
push
lds
xor
stos
les
dec
mov
mov
rol
xorl
call
into
xlat
sub
xchg
aas
nopl
cmc
mov
mov
or
shlb
mov
mov
imulb
repnz
int
lods
movb
js
aaa
enter
rcll
and
sub
test
pandn
repz
sti
out
or
mov
aaa
pop
mov
adc
out
or
push
pop
orb
xchg
jbe
inc
or
imul
je
cmp
dec
repz
stos
xor
pop
punpcklbw
inc
outsl
pop
push
out
pcmpgtd
xchg
aad
cli
xchg
movaps
dec
adc
arpl
adcl
pushf
push
rorb
jp
lret
aad
sbb
lahf
sbb
cwtl
dec
ret
cld
dec
nopl
or
mov
xor
bndldx
std
or
jb
xchg
inc
outsb
jb
ret
pop
mov
dec
xchg
popf
jecxz
mov
out
adc
mov
pop
mov
cmpsb
cmp
enter
je
mov
out
jne
test
adc
jle
adc
cmp
test
pmulhw
sub
rsm
dec
add
out
out
pcmpeqd
fwait
cmpsl
adc
mov
ret
rolb
cmovns
ja
sbb
rorl
repnz
cmp
fcmove
in
pop
or
dec
shrl
jg
inc
psraw
outsl
mov
rolb
mov
enter
push
movsl
mov
xchg
out
mov
sub
pop
inc
adc
sbb
xor
sub
data16
pcmpgtw
dec
xchg
aas
adc
scas
cmova
jno
xor
fsubr
emms
test
pop
add
mov
ret
shrl
scas
mov
pop
les
or
jns
xchg
js
and
out
jecxz
sub
paddusb
out
add
cmovo
dec
dec
sti
jmp
movswl
popa
cmp
xchg
and
lret
dec
cmovle
push
dec
movq
out
xor
out
mov
xchg
cmpsb
int
xor
xorps
fldcw
cmp
mov
jo
bound
cmp
pcmpgtw
movsl
adc
into
push
pop
ss
popa
setb
pop
add
add
jg
imul
inc
push
mov
movsl
repnz
lcall
sbb
cmpsl
and
jne
inc
out
mov
xchg
mov
or
aas
xchg
add
sub
sub
clc
jp
jg
adc
sub
add
inc
dec
mov
out
les
inc
xchg
xchg
negl
and
push
popf
repnz
pop
popf
mov
jns
sub
adc
data16
jae
fcompl
dec
mov
add
ret
fidivs
adc
dec
inc
dec
xchg
or
cmc
jnp
lds
xor
push
xchg
psubw
jge
inc
mov
paddq
jg
rsm
shl
das
fistps
vmwrite
xor
out
add
out
push
mov
fwait
add
pop
fstps
jmp
gs
xchg
push
push
movsl
shlb
mov
xchg
ss
jnp
mov
lret
paddusw
js
adc
out
ss
cvtdq2ps
or
cmp
pop
push
or
or
xchg
mov
sub
pop
mov
pop
jns
mov
fldln2
lods
cld
arpl
addsubps
sbb
outsl
inc
sub
xor
shr
int3
and
aas
pop
xchg
hlt
sub
dec
pop
dec
sqrtps
xlat
cmc
xchg
inc
rcrl
or
mov
and
pop
fldl
je
push
jo
gs
clc
xchg
add
push
or
call
seto
rolb
test
repz
xchg
in
daa
cmpps
xchg
lret
psubq
les
xchg
xor
jno
xchg
int
into
or
xchg
addr16
repnz
xor
or
jecxz
lcall
pushl
repnz
shlb
sbb
mov
sub
cmp
paddusb
loopne
mov
lods
xor
jl
inc
shlb
adc
scas
enter
cmp
cmovg
testl
xchg
stos
addr16
lar
sub
push
int
xor
iret
btc
fs
cmc
imul
push
jge
gs
add
lret
sti
out
pop
orb
xchg
out
inc
mov
sbb
xchg
ss
and
pcmpeqd
xchg
out
cwtl
std
mov
push
push
cltd
je
sbb
pop
xor
dec
addr16
xchg
pushf
cmpsl
test
jge
cmpsb
clc
sub
adc
lret
lahf
lods
sub
rclb
inc
sub
adc
into
push
in
jbe
pop
fcmovnbe
fwait
xchg
sbb
jae
push
jg
pushf
repnz
repz
xchg
fucom
lahf
lret
cwtl
es
xor
and
push
pmullw
imul
out
push
fwait
in
aas
ret
jb
inc
rorl
inc
repz
in
dec
aaa
por
and
xor
push
scas
sub
cltd
insl
test
sbb
jno
dec
inc
adc
mov
mov
rcr
mov
cwtl
xlat
mov
out
loopne
push
ja
dec
xor
nop
jge
mov
pop
mov
inc
dec
loopne
dec
pop
pandn
xchg
push
jmp
imul
pop
imul
inc
popa
jle
mov
push
inc
fimull
mov
lods
push
jbe
jne
mov
jo
call
sub
pop
sbb
aas
mov
bnd
pop
out
sbb
enter
ss
adc
cmpsl
mov
jno
push
mov
out
loope
je
or
add
lahf
xchg
fs
loop
or
jge
xchg
xor
cld
mov
in
fists
xchg
lahf
mov
fsubrl
push
ss
inc
dec
test
jns
daa
scas
in
dec
pop
icebp
add
fisttpl
fimull
cmpsb
push
invd
cmpsl
sub
xor
shl
scas
xchg
push
inc
adc
cmp
in
pop
sbb
and
insb
pandn
call
cmp
ret
sar
push
lret
fdivrl
adc
inc
add
add
aaa
ss
jae
stos
cmp
sahf
andl
cmc
sub
push
xchg
add
pop
ds
inc
adc
outsb
jge
add
aam
gs
push
hlt
fchs
cmovne
addl
xor
aam
dec
or
adc
xchg
mov
popf
faddl
mov
jo
xchg
inc
push
bound
mov
xchg
or
icebp
lcall
jno
xor
fs
inc
ud0
out
sub
mov
xchg
inc
sub
cs
mov
test
les
adc
fcompl
xchg
dec
in
cmovl
inc
jb
mov
adc
mov
jns
or
mov
packsswb
ret
cmp
mov
out
fildll
das
or
cli
mov
cwtl
sub
dec
dec
decb
sbb
mov
cmpsb
pop
nop
sbb
rorl
and
lahf
and
lods
lock
xor
dec
push
adc
fdivrs
test
movsl
in
and
push
jb
test
lock
in
cmc
lea
pop
fdivrl
mov
dec
add
aam
add
dec
push
jne
pop
and
in
arpl
pop
add
in
and
xor
add
sbb
mov
fsub
adc
shl
mov
stc
mov
jbe
dec
adc
dec
fidivl
pop
jb
mov
xlat
push
add
and
mov
xor
mov
xchg
adc
pusha
add
ds
mov
sub
aaa
push
inc
repnz
leave
mull
test
cs
xchg
sbb
push
or
pop
test
shlb
iret
in
lds
fcoms
pop
data16
xor
shll
insb
cs
xlat
adc
repz
scas
ror
sbb
pop
mov
xchg
sub
jae
lahf
cmovne
mov
adc
inc
xor
jbe
pavgb
cwtl
cmp
mov
xor
popf
dec
add
ficoml
shll
xor
or
jecxz
or
movsb
data16
faddp
enter
fisttpl
xor
lret
mov
loop
nop
scas
hlt
jbe
and
stos
push
sbb
mov
movsl
jg
jne
and
inc
xlat
rcrb
and
cld
mov
mov
inc
fstp
ret
rorl
in
xor
cmp
ror
rcrl
add
cli
orb
cmp
cmovbe
or
psrad
lahf
fisttpll
js
and
xchg
shrb
outsb
push
and
or
out
pop
dec
aad
and
pop
repnz
iret
in
cs
xor
cmp
call
and
shrb
xor
arpl
lret
add
punpckhwd
jle
test
std
and
xor
xor
fdivrl
and
jle
sub
and
in
dec
push
rolb
sbb
je
aas
lcall
xchg
xlat
mov
pusha
lret
jge
sbb
sbb
or
dec
inc
shll
cltd
ret
inc
mov
jp
mov
mov
jecxz
jno
cmp
mov
shll
clc
cmp
btr
loope
shl
insb
push
ret
test
ja
jbe
or
sete
dec
ljmpw
mov
jmp
pop
arpl
cmpxchg
stos
mov
sti
lret
add
dec
inc
lods
jns
push
jl
inc
icebp
fwait
mov
lock
aad
movsb
sbb
add
mov
movups
lret
mov
add
pop
pop
add
cmp
sub
bswap
add
aaa
jl
add
cli
mov
push
std
mov
and
arpl
sbbb
aas
leave
adc
shlb
push
xchg
les
mov
pop
or
ss
mov
ret
dec
divb
jns,pt
pusha
pop
push
outsb
setge
clc
mov
mov
xchg
ja
out
cwtl
js
lods
lret
dec
in
adc
dec
mov
repnz
pop
pop
fs
enter
stos
mov
cmp
sbb
lret
adc
fdivs
adc
das
cmpb
out
pop
aas
mov
sbb
mov
loope
push
sahf
adc
in
les
icebp
fwait
xchg
pop
lock
jne
cmp
xchg
mov
jp
jg
sbb
ljmp
and
fimull
xchg
aaa
fnclex
test
inc
mov
mov
jae
imull
mov
adc
cld
fsub
les
add
adc
lock
daa
xchg
in
jb
adc
dec
push
cmp
cmp
loope
cmp
xchg
xchg
pusha
sti
xchg
dec
repnz
out
mov
test
notl
inc
maxps
dec
addr16
aas
data16
fisubrs
cli
outsl
jl
cmc
xchg
adc
jne
dec
repnz
inc
jg
fistpl
xchg
pop
or
mov
sbb
add
stos
dec
jo
insl
insb
rolb
pop
shlb
or
aaa
stc
sbb
das
in
aas
pop
aaa
fnsave
in
stc
repz
hlt
into
pop
call
push
popl
decb
mov
dec
mov
xlat
or
subb
into
or
cwtl
int3
jmp
and
ficoml
or
pop
cmp
dec
loopne
je
gs
ja
pop
std
popf
sbb
leave
fmuls
and
adc
pop
jns
dec
lock
push
fadds
mov
rclb
xchg
repnz
and
imul
aam
ffree
dec
sbb
cmp
mov
or
dec
sbb
aas
arpl
mov
or
repnz
cmpsb
sahf
pop
incb
into
xor
std
pop
idiv
or
sbb
xor
das
cmp
aam
pusha
mov
push
dec
sub
lcall
adc
in
in
sbb
ficompl
cli
mov
lahf
xchg
jge
pusha
jae
repnz
ljmp
push
hlt
jg
push
mov
in
clc
cmp
pop
pop
loop
adc
push
jae
push
repz
or
sub
cmc
cmp
outsb
ljmp
leave
mov
test
xor
lret
adc
icebp
pop
rclb
cmp
mov
sub
push
add
mov
lods
das
sbb
adc
or
movsl
mov
add
jmp
adc
jno
sub
xor
stc
inc
xchg
ret
xor
stc
ljmp
jb
mov
es
push
sub
out
and
in
fcmovne
or
sbb
push
inc
sub
mov
cli
ret
ljmp
mov
or
push
pop
shr
xlat
sti
jb
mov
insl
lcall
dec
add
dec
test
pop
inc
inc
xor
push
push
das
push
xor
orb
or
inc
mov
addr16
or
iret
pop
cmc
cmp
cs
out
jecxz
push
sbb
xchg
or
cmp
jb
inc
or
jl
test
cmpsl
mov
mov
and
outsl
sahf
xor
pop
push
movsl
inc
pop
movsl
dec
flds
pop
dec
in
inc
idivl
adc
out
xchg
ljmp
bnd
inc
rorl
fisttps
dec
shl
add
or
fisttpll
fnstenv
push
pop
jge
jge
ja
xlat
mov
aaa
and
or
in
sbb
pop
add
loopne
mov
sbb
adc
std
cs
pop
xchg
jge
sbb
add
pop
push
and
icebp
dec
or
sbb
fidivl
popf
icebp
sti
sbb
push
cmp
addb
jns
insb
dec
imul
les
addr16
sub
sbb
sbb
add
pop
push
lcall
fcoml
cli
pop
add
cwtl
lret
adc
push
or
adc
add
ja
int3
cmp
adc
dec
jecxz
dec
mov
ja
xlat
and
scas
ret
pop
inc
insl
or
mov
cld
adc
cli
int
out
inc
fs
aam
sarb
cmc
pop
mov
ret
mov
jmp
lcall
cwtl
int3
mov
or
xchg
dec
icebp
mov
add
and
rclb
push
ss
cli
int3
sbb
add
cmp
dec
mov
push
cwtl
sbb
jp
insb
cli
add
cli
outsl
push
pop
cmpsb
jns
call
sub
mov
lock
push
sbb
pop
adc
daa
adc
jle
lock
adc
call
add
lcall
and
hlt
or
je
hlt
inc
shlb
cmp
add
dec
add
xchg
pop
pop
pusha
push
pop
mull
idivb
inc
lcall
imul
jmp
decl
mov
cld
pusha
mov
mov
add
or
rorb
push
daa
pop
sub
push
pop
adc
mov
in
jbe
xacquire
jmp
adc
stos
pop
lret
mov
pop
push
gs
addr16
inc
outsb
cvtpi2ps
inc
jne
add
cli
imul
fs
xor
jp
xor
inc
cli
add
pop
lods
scas
shr
repnz
push
jo
xchg
inc
inc
cs
insb
push
or
add
inc
ja
rclb
iret
or
cmp
xchg
fcoml
sti
add
cmp
dec
and
cs
inc
insl
cmp
loop
in
stos
mulb
or
xor
push
and
or
fs
dec
arpl
or
add
leave
stc
mov
into
add
ds
test
sarl
lods
ret
test
adc
mov
cmp
or
mov
adc
pop
sbb
add
lock
or
jns
adc
add
add
inc
dec
inc
jbe
push
push
inc
sbb
arpl
sti
pop
inc
testb
clc
pop
sbbb
or
gs
sti
push
sbb
pop
push
lret
ds
lret
mov
lcall
push
rcrb
push
imul
decb
push
fs
push
mov
ret
inc
ret
push
push
inc
mov
cli
cs
es
dec
fsubrs
cli
outsl
xor
or
fmuls
xor
addl
test
loopne
lea
inc
xchg
or
push
cld
ss
iret
jl
es
push
add
hlt
or
ds
fisttpl
push
out
int
push
ss
cld
stos
inc
in
outsb
xchg
push
xor
es
movsl
add
into
rcl
sub
and
daa
dec
jecxz
stc
jg
mov
iret
and
mov
and
jno
dec
shlb
jns
add
sbb
push
punpckhbw
xor
xchg
inc
mov
dec
mov
and
jl
test
jle
daa
adc
cli
clc
adcl
add
mov
dec
and
sbb
xlat
cs
hlt
pmullw
out
enter
pop
cmpsb
scas
insb
stos
or
sub
mov
jo
in
xchg
out
sbb
imul
sub
movq
xor
pop
lds
ror
adc
and
inc
push
jmp
xchg
mov
fdivs
out
out
je
inc
gs
ret
popa
and
jle
adc
dec
pop
jno,pn
cmp
add
stos
punpckhwd
mov
psllw
rclb
push
out
sbb
xchg
sbb
mov
imul
pop
sub
stos
dec
popf
pop
mov
add
enter
jae
insb
sub
outsl
jbe
test
inc
adc
cmovno
lods
xchg
adc
jl
xchg
or
loop
es
and
sbb
sbb
orl
clc
test
cwtl
out
adc
xchg
cmc
jo
insl
rcl
cli
popf
xor
push
add
movsl
xchg
mov
sbb
mov
and
sahf
xor
xchg
inc
psubq
push
push
pop
push
mov
mov
sbb
cmp
xchg
call
insb
mov
loope
push
jp
fldenv
sarl
es
ret
inc
push
mov
insb
add
xchg
inc
lods
mov
in
stos
mov
sbb
adc
pop
cld
inc
enter
xor
mov
sbbb
sbb
jl
cmp
lahf
sbb
hlt
xor
adc
ret
and
sti
adc
sti
cmp
cmp
cmp
inc
outsl
push
mov
loop
lret
lret
jb
mov
sarb
dec
or
jns
lock
cmp
xorl
pop
or
pop
inc
mov
int3
xor
adc
aas
icebp
cs
into
xchg
mov
sub
push
es
cmp
add
fadds
out
lret
rcll
wbinvd
inc
push
sbb
ss
jae
aam
xor
fcomp
in
ljmp
xlat
ja
jb
xchg
ljmp
and
ljmp
stos
add
push
ja
or
pop
inc
lcall
fbstp
ljmp
out
push
pop
loopne
cmc
loopne
in
pop
mov
pop
sbb
in
lcall
jmp
into
icebp
adc
int
ret
lret
in
pop
decl
jmp
mov
in
add
adc
add
stos
sub
mov
aad
ljmp
jmp
jns
movsb
xor
pop
xor
xchg
push
or
ret
adc
int3
cld
pop
pop
in
mov
jo
add
in
xchg
pop
rcr
in
pop
pop
loope
sti
inc
fisubs
push
pop
je
and
cltd
and
rcll
jecxz
sti
or
pop
push
and
sub
outsb
add
cld
push
jle
int3
adc
jo
insb
movb
cld
push
loop
jmp
mov
mov
loop
subl
pop
lds
push
or
testl
ljmp
jno
sbb
daa
cmp
and
pushf
sub
sarb
pop
jns
mov
cltd
pop
divl
dec
std
aad
cli
fnsave
xor
mov
loop
mov
jo
ljmp
mov
int3
or
xchg
hlt
mov
pop
mov
dec
in
neg
cli
adc
outsl
and
sahf
push
mov
in
test
rclb
aas
into
add
push
sub
loop
loop
adc
ret
and
xchg
pop
push
xchg
stos
jne
mov
lods
inc
ret
paddusw
hlt
dec
cmp
sbb
sub
ret
sarl
test
fndisi(8087
mov
adc
mov
pusha
pop
and
loopne
insl
inc
shr
aas
out
popf
dec
out
mov
scas
adc
loope
je
or
adc
jge
lock
fdivrs
stos
push
and
jno
cmp
enter
mull
sbb
shr
pop
jge,pt
mov
inc
push
sbb
addr16
loop
push
adc
inc
fidivl
add
jp
mov
jo
repz
loopne
push
pop
push
jmp
xchg
stos
leave
ss
push
xchg
push
les
cmpsl
movups
mov
jo
inc
fadd
pinsrw
shrl
and
bound
in
loope
idiv
outsl
or
and
xor
insl
out
inc
xchg
aaa
lcall
into
rsm
mov
jmp
movsl
js
test
push
test
bound
jecxz
cmp
xchg
adcb
jmp
push
pusha
popa
pcmpeqw
loopne
cmovb
mov
sub
push
and
test
mov
or
pop
xor
lea
pushl
int
or
stos
add
fists
adc
dec
push
mov
pushf
adc
cmpsl
gs
adc
or
mov
loopne
pop
sub
paddusb
and
cmovp
xchg
je
loopne
movq
imul
sub
dec
filds
sub
cmc
in
cwtl
add
sbb
xchg
fisubs
popf
outsb
add
fmul
or
scas
call
inc
xchg
sbb
in
out
inc
cltd
shlb
xlat
out
lahf
dec
stos
mov
arpl
mov
mov
sub
inc
out
jb
int
stos
fwait
or
pop
dec
out
lcall
push
negl
xor
and
insb
icebp
jl
repnz
inc
mov
ja
mov
lgs
repz
xor
mov
clc
sbb
orb
mov
pop
pop
lcall
fdivr
sbb
mov
mov
clc
stos
or
dec
xor
lcall
test
mov
rorl
sub
rcll
pmaxub
cmp
ret
pop
pcmpgtw
cmp
pop
insb
test
or
psllq
dec
mov
pcmpgtb
pop
sub
psrlq
lds
mov
jge
add
enter
cmp
shl
and
rol
inc
loope
test
je
add
or
fwait
adc
adc
lods
mov
xchg
inc
pusha
lds
mov
fistpll
aas
adc
add
enter
in
insb
repz
outsb
cmp
out
fmuls
aaa
cmpsb
mov
les
fs
js
mov
inc
aaa
adc
nop
insl
jle
adc
jb
jae
and
enter
cltd
fs
adc
into
es
cmpsl
loope
shlb
nop
adc
mov
sub
aam
push
jno
bound
sub
pop
dec
jecxz
mov
scas
sub
pop
pop
pavgb
test
cmp
sub
cvtdq2ps
imul
cmpsl
push
lret
add
jnp
rorb
push
out
push
sub
push
popf
jmp
mov
dec
iret
inc
and
push
sub
arpl
es
icebp
fs
mulps
mov
ret
dec
mov
call
mov
add
cmp
stc
xor
in
pop
and
ds
pmullw
dec
sub
add
rcll
ret
pop
packuswb
stos
add
mov
clc
sub
es
and
lock
insl
mov
fs
movsb
pop
stc
add
push
ss
dec
aad
and
inc
ds
pop
arpl
pop
inc
ljmp
xchg
into
xchg
leave
add
lea
lock
cmp
ss
jne
mov
push
dec
out
mov
cmovnp
pushf
inc
fsubs
movhps
fists
xor
in
cmovle
push
cmp
les
int
xor
rorb
push
push
scas
mov
mov
shl
leave
mov
sbb
scas
sub
push
jg
mov
movsbl
in
sahf
push
mov
xor
insb
or
jnp
mov
and
ja
scas
cltd
push
jne
outsl
sbb
dec
les
xor
sub
arpl
inc
in
push
sub
shlb
pop
add
subl
sub
or
mov
maxps
sbb
std
negl
dec
gs
sbb
jg
rclb
xchg
insl
mov
sbb
push
out
mov
cmp
movl
int3
add
xor
pcmpeqd
jo
shrl
sbb
xor
bswap
jle
frstor
xchg
comiss
aam
rsqrtps
lcall
xchg
cmpsb
arpl
stc
imul
rorl
push
mov
out
imul
pop
bound
and
shl
or
jns
cmc
test
xor
subps
adc
psllq
clc
ret
fimull
jbe
vpshufd
fwait
lret
pmullw
sub
adc
jmp
jg
out
lods
pop
orb
ja
push
push
mov
clc
arpl
aas
out
sub
dec
xor
scas
adc
js
movsb
pusha
outsl
lock
mov
and
sbb
dec
loope
inc
inc
inc
in
dec
test
or
ret
stos
pop
imul
sbb
push
xorl
emms
dec
mov
jecxz
sbb
insb
xor
stos
push
test
dec
push
jecxz
and
bndldx
jae
in
and
cmpsb
add
stos
shll
scas
cmove
push
psadbw
jne
pop
fs
int
cmp
mov
comiss
adcl
movsb
xor
pusha
adc
cmpsb
or
and
xor
xor
je
xor
pop
sub
ss
pop
cmp
xadd
jmp
fcmovnbe
sahf
repnz
pop
idiv
mov
and
shlb
push
sub
dec
movsb
lock
xchg
in
imul
inc
in
cwtl
sbb
adc
rcr
adc
jl
mov
cpuid
daa
addr16
fisubrl
mov
jge
jae
xorb
and
pop
and
mov
adc
data16
inc
test
mov
pop
sbb
add
lods
setl
mov
push
or
push
dec
pop
add
pop
lds
repz
pop
cmp
lret
adc
in
sub
push
pmaddwd
jbe
hlt
pop
xchg
cmova
mov
adc
sti
push
xchg
aas
nop
loopne
mov
mov
repnz
cmp
mov
xchg
cmpsb
repnz
add
stc
cmc
cmp
shrd
pop
ret
pmaxsw
and
adc
cmp
aad
mov
mov
jbe
inc
in
dec
loopne
mov
std
jnp
push
insl
fistps
call
or
push
sub
test
insb
mov
cmp
std
lcall
or
xchg
fidivl
std
cs
out
ret
pop
cld
dec
lahf
sbb
inc
sub
pop
dec
push
xor
daa
dec
or
sub
pop
pop
sub
add
ljmp
sub
imul
cwtl
xor
icebp
scas
lcall
sbb
jns
xchg
rsqrtps
das
push
sub
es
pop
icebp
pushf
rolb
cmp
mov
or
or
rclb
adc
adc
lds
mov
sbb
adc
sbb
outsl
xor
les
dec
and
dec
out
and
call
cmpsl
lret
push
jno
subl
push
mov
cld
cmpb
jge
cmp
inc
pop
sbb
sub
jmp
or
and
add
xchg
xchg
sbb
sbb
lret
xchg
pop
int3
jmp
ds
imul
and
pop
xor
jne
jmp
scas
outsl
sub
js
in
add
add
mov
enter
out
scas
ds
xchg
icebp
imul
mov
lcall
call
jmp
daa
cmp
rcll
lret
daa
pop
dec
xor
push
or
xor
cmc
push
mulb
rep
popa
imul
xlat
jo
jmp
mov
push
pop
push
mov
stc
mov
icebp
inc
dec
in
push
incl
js
in
and
mov
or
arpl
jmp
pop
push
loop
pop
icebp
jle
mov
out
call
inc
loope
pop
sbb
mov
jns
add
pop
cmp
fldcw
repz
jp
cmc
sub
mov
ja
imulb
lcall
ljmp
repz
aad
or
xor
push
cs
push
add
lret
shl
out
insl
test
cmp
or
je
xchg
jae
daa
add
sub
scas
int3
imul
xchg
loopne
adc
stos
arpl
xorl
adc
adc
dec
pop
clc
test
lcall
dec
test
mov
sub
rclb
cmpsl
insb
mov
ljmp
inc
subb
mulb
xor
add
lock
sbb
mov
in
mov
push
das
mov
loope
adc
decl
loope
lods
cli
adc
mov
outsl
inc
adc
mov
out
into
pop
sub
jae
push
inc
jle
fcomp
aas
jb
int3
jne
jmp
sub
push
sub
mov
fimull
mov
push
pop
or
push
cmpsb
aaa
dec
mov
fs
sub
cmc
adc
cmpsl
arpl
imul
or
lods
xchg
pop
jge
jecxz
pop
or
leave
shr
jl
xchg
rolb
sub
or
jle
pusha
add
orb
adc
xchg
adc
mov
leave
bswap
addr16
cmp
test
ret
and
cmpxchg
leave
jge
mov
sub
xchg
sub
mov
movsl
xchg
shll
add
xor
out
imul
shrb
cmp
push
test
bswap
mov
jle
rcll
cmp
inc
aad
jg
mov
mov
add
sbb
and
int
sub
cwtl
or
adc
mov
icebp
movq
mov
call
movsl
pop
out
jge
popf
stc
bswap
lahf
hlt
repz
jle
add
mov
dec
iret
sub
xchg
loopne
fimull
sbb
stos
out
dec
dec
mov
xchg
fnsave
ret
or
xchg
shl
xchg
in
lds
jmp
stc
cmpsb
mov
hlt
imul
stos
mov
dec
cs
scas
adc
and
dec
movupd
jae
or
fnstcw
fs
ret
jb
fwait
add
cmc
jno
pop
pop
fmull
fidivrs
into
and
or
lahf
sub
fistps
jb
leave
mov
lsl
cmp
dec
ss
xor
out
mov
inc
ljmp
xor
mov
bswap
adc
fmull
lock
in
sub
leave
jae
test
pusha
gs
stos
or
shl
jmp
mov
xchg
dec
xsha256
cmpsb
push
mov
jne
pop
imul
out
test
mov
push
fwait
pop
fyl2x
daa
and
jbe
or
nop
lock
mov
cmpb
mov
sub
movaps
aaa
xchg
sub
aad
mov
jge
adcl
push
cmpsb
ret
sub
jp
inc
setns
out
imul
subl
cmc
sahf
xlat
bound
pusha
xchg
xchg
or
sbb
adc
jmp
xchg
cmp
push
and
pcmpgtd
sub
scas
xor
punpcklbw
mov
sti
pop
and
loop
notb
fdivs
mov
sbb
das
mov
cltd
out
stos
sub
sldt
jmp
test
ja
shlb
dec
outsl
inc
imul
aam
cmpxchg
popf
and
insl
jae
sub
test
jge
shrb
roll
pop
nop
int3
mov
cltd
add
ds
scas
out
add
ret
mov
fwait
prefetch
or
scas
mov
fadds
movsb
outsb
rclb
jl
adc
mov
sbb
sti
and
xor
or
adc
mov
pmullw
fisubrl
in
pop
add
ret
mov
bndldx
sbb
or
cmp
scas
not
dec
and
inc
sti
pop
pop
test
lret
add
sete
sarb
packsswb
pushf
push
add
std
push
into
test
fcmovne
emms
cltd
jge
mov
push
xchg
xchg
hlt
movb
add
mov
sbb
mov
js
sub
in
inc
rcll
loope
inc
cmp
pop
arpl
int3
push
push
inc
rolb
add
repz
mov
insl
data16
movaps
sbb
xchg
das
push
aas
xor
rclb
inc
sub
cmp
mov
lods
mov
mov
mov
push
aam
jle
aaa
xchg
jecxz
jmp
shlb
xchg
dec
es
in
bound
sub
sub
int
mov
stc
push
cmpb
add
or
pop
popa
mov
ret
arpl
sbb
sbb
movswl
popa
and
sub
cld
lgs
sub
cs
cli
adc
pop
cmovne
and
push
pop
insl
dec
pop
mov
adc
jge
insb
push
lcall
punpckhwd
sbb
mov
rdpmc
sub
lcall
fbstp
xchg
nop
jle
mov
out
outsl
push
imul
daa
sarl
xor
jl
push
enter
incl
or
push
add
subl
mov
mov
es
scas
jo
cld
pushf
das
fnstenv
adc
sbb
jmp
jecxz
adc
ss
test
lods
in
pop
aam
and
in
lea
mov
push
add
push
iret
xchg
dec
das
movntps
inc
ss
dec
mov
jl
pushf
shrl
adc
add
test
stc
addr16
mov
aad
faddl
inc
cmp
jl
icebp
lods
cmp
add
xchg
inc
push
sbb
cltd
and
fldl
dec
dec
sysret
mov
outsb
rorl
pcmpgtd
cmp
adc
mov
pop
cli
repnz
and
sbb
insl
ja
fstpl
xor
stc
es
sub
add
sub
stos
fisubs
je
push
loop
mov
sub
push
xchg
stos
jbe
jl
cli
packssdw
js
adc
cvtps2pi
dec
outsb
lmsw
and
gs
jno
adc
shrl
rcrl
pop
dec
in
test
imul
mov
mov
fmull
popf
ret
xlat
add
mov
cmovl
sub
stos
mov
mov
push
jb
pop
stc
xchg
jbe
les
or
in
stos
test
lar
and
cld
xor
cld
pusha
enter
jmp
sbb
and
lret
addb
jecxz
mov
xchg
push
add
mov
or
xor
subb
mull
cmp
pop
sbb
or
inc
dec
or
mov
movsb
fcomps
pushf
adc
sahf
pushf
mov
insb
repnz
inc
sbb
sbb
cmp
pop
cmp
push
adc
inc
pop
std
call
bound
push
repnz
cmp
sbb
adc
sbb
adc
xchg
adc
or
push
mov
test
or
pop
int3
xchg
jnp
push
xchg
stos
fcomps
push
mov
pushf
shll
pusha
xor
xor
add
push
pop
lea
mov
pop
fidivrl
pusha
in
loopne
daa
mov
sbb
or
jmp
mov
loope
pop
push
dec
ja
arpl
inc
lods
cmp
pop
pop
push
sub
icebp
xchg
or
inc
add
jmp
loope
dec
xor
mov
xchg
loop
jp
icebp
push
or
push
pop
lret
imul
pop
jmp
cmc
scas
dec
cmp
pop
jbe
fdiv
aas
insl
jmp
sbbb
and
jmp
outsl
pop
cli
fdiv
aas
jp
nop
outsl
int3
bound
ljmp
dec
dec
arpl
dec
pop
adc
sbb
sbb
cmp
mov
fcomp
push
popa
cmp
lcall
xor
sbb
daa
dec
or
jecxz
inc
ds
rclb
icebp
dec
add
jle
into
out
push
xchg
jmp
jno
jbe
test
sbb
out
jmp
arpl
sbb
pusha
addr16
adc
xor
mov
push
popa
jle
ljmp
lahf
xchg
add
push
les
dec
out
mov
xchg
mov
aam
jmp
mov
mov
cmp
push
shr
in
inc
cmp
mov
enter
ds
cli
ffree
lret
out
icebp
fs
fidivs
pop
xor
gs
faddp
jo
lret
gs
popa
jp
mov
dec
in
push
outsb
add
cmp
cli
cli
adc
dec
lcall
pusha
pushf
lcall
or
sbb
and
xor
jl
lods
imul
adc
mov
stos
rorl
out
cmp
jne
cmpsb
jge
or
lods
push
in
jge
fmul
sbb
aas
addr16
and
jae
mov
pop
jge
xchg
xchg
sbb
or
int3
mov
jecxz
jg
add
lcall
and
push
or
sbb
je
mov
sti
jl
or
and
mov
rorb
int3
pop
xor
push
or
mov
or
inc
call
cld
and
out
lcall
dec
xchg
rorb
adc
stc
in
mov
and
das
jmp
dec
and
subb
and
mov
add
cmp
and
loop
rclb
ljmp
push
inc
cmp
outsl
scas
test
into
and
xchg
xor
xorb
pop
sbb
movsl
xor
sbb
add
leave
std
lock
pop
pop
and
xchg
lcall
ret
and
and
add
addr16
mov
aad
xchg
pop
int3
movl
mov
inc
icebp
dec
popf
jmp
scas
cmp
outsl
lahf
mov
pop
or
dec
or
pop
out
cmp
test
cltd
add
or
sbb
lods
mov
lret
jno
addr16
rcrl
fxch
lea
nop
fmuls
aas
imul
adc
push
lahf
mov
push
or
mov
fisttps
dec
repz
out
fists
sub
mov
pop
outsb
pop
adc
loope
movsb
movsl
dec
mov
cmp
dec
stos
scas
movsl
nop
pop
into
hlt
add
hlt
clc
stos
repz
mov
add
add
or
test
or
or
jns
rorl
incb
xchg
pop
aam
imul
mov
pop
lret
push
or
pushf
jecxz
std
sbbb
sub
push
cmp
sbb
sub
push
pop
push
mov
jl
sbb
orb
movsl
fdivs
aam
mov
fwait
loope
push
fldl
out
pushf
sbb
mov
mov
cmp
adc
loop
movsl
les
loop
adc
mov
into
mov
loop
pushl
xchg
push
or
scas
push
ret
cmp
stc
dec
pop
add
sbb
xchg
int
add
xor
xchg
jmp
dec
xchg
adc
pop
push
into
dec
pop
or
or
push
push
fs
jg
std
icebp
loop
xchg
nop
sub
or
cld
int3
sbb
pop
ret
lods
sub
std
lahf
sbb
lds
and
mov
out
mov
sbb
or
inc
push
add
and
clc
nop
sub
sti
daa
fs
cmpsb
xor
clc
mov
fs
add
negl
dec
into
pusha
sub
mov
sub
cmp
insb
mov
lea
xchg
push
jl
mov
popf
mov
add
adc
loope
and
into
ret
and
add
adc
adc
loop
push
jo
or
loope
mov
sub
clc
add
pop
cmpsl
cld
out
insb
stc
rorb
cmpsb
mov
mov
xchg
or
iret
inc
ret
pop
ret
cmp
mov
cmp
ja
or
pop
push
xchg
add
addr16
fists
or
mov
sub
call
adc
jge
addr16
pop
sbb
xchg
pop
int3
lcall
pop
pop
fstps
mov
jg
insl
jnp
push
out
ds
pusha
push
jg
pop
loop
scas
int3
decb
fisttps
into
out
int
jecxz
jg
pop
mov
scas
xor
pop
sbb
mov
inc
pop
and
fdivr
lret
cmc
mov
fcoms
adc
mov
lret
rolb
addr16
xlat
cmp
scas
les
xchg
jp
xchg
fcmovb
xchg
ja
inc
mov
sub
inc
loopne
or
xchg
cmp
bound
mov
or
add
divb
and
shl
fmul
out
ret
mov
cwtl
xlat
shr
or
fcomps
addr16
pop
int3
jg
pop
and
lds
lret
cwtl
enter
jo
int
mov
or
ds
cmp
pop
test
enter
mov
jmp
std
inc
push
icebp
push
mov
jle
ret
sar
pop
repz
xor
jno
in
mov
cmp
fisttps
pop
mov
call
mov
fdivrs
mov
subl
xchg
mov
mov
push
int3
es
mov
icebp
push
inc
push
mov
into
xchg
mov
mov
xlat
scas
sub
mov
stc
mov
into
add
int3
push
sbb
mov
daa
sbb
lds
xchg
into
add
ficoms
adc
mov
jle
fiaddl
adc
add
lods
sub
push
outsl
dec
add
mov
sahf
int3
repnz
adc
mov
icebp
adc
aad
cld
lds
je,pt
loopne
in
mov
mov
fsubr
inc
mov
pushf
sbb
mov
out
xchg
mov
addr16
outsb
out
icebp
ds
adc
jns
in
in
mov
outsl
sbb
xchg
test
iret
adc
sub
pushf
test
call
lahf
aam
test
adc
in
pop
shrb
mov
pop
shrb
and
pop
js
out
adc
inc
jns
aas
cli
mov
pushf
in
or
iret
sbb
mov
gs
jmp
scas
inc
mov
push
adc
or
lock
addr16
or
mov
mov
sbb
mulb
lret
cwtl
enter
and
fstpt
fwait
pop
jmp
stc
sti
cli
or
or
adc
stc
or
flds
pop
in
sub
pop
push
sub
daa
cmp
adc
or
pop
push
out
icebp
push
and
hlt
pop
dec
or
test
inc
ret
in
cmp
and
lret
repnz
call
add
dec
or
add
lcall
punpckhbw
pop
bound
rcrw
repz
dec
incb
les
jecxz
divl
dec
xor
sbb
out
jae
call
xchg
lds
mov
lds
inc
outsl
lahf
mov
js
fcoms
aas
jbe
xlat
nop
pop
scas
add
ljmp
jp
sub
fadds
fdivr
push
or
push
lds
jns
or
and
loopne
mov
adc
push
or
scas
notb
jns
insb
pop
addr16
or
cwtl
jmp
pushl
rcl
sbbl
and
out
or
dec
push
dec
out
jg
or
or
sbb
and
aad
push
inc
pop
dec
xor
dec
add
dec
pop
mov
fistpll
pop
mov
inc
out
sbb
pop
call
das
mov
addr16
add
push
adc
push
sbb
and
jecxz
call
jp
int3
adc
ficoms
push
in
sbb
adc
enter
push
mov
movsl
cmp
ljmp
cmp
xchg
rol
pushf
call
add
idivb
cltd
xor
mov
fcompl
nop
arpl
push
ficomps
sti
lds
add
repz
mov
fsubl
mov
fcmovnb
mov
ljmp
jge
insl
push
or
cmp
inc
fs
fdivr
mov
add
push
add
out
jne
pop
adc
scas
loope
cli
xchg
mov
cmp
dec
daa
cmp
scas
cwtl
dec
scas
pop
ds
fdivrl
bound
addr16
aaa
cmp
std
scas
cwtl
fmul
out
fmull
jb
and
dec
jp
popa
fldcw
or
shlb
mov
gs
stos
fisttpll
movsl
addr16
mov
xor
pop
test
push
ret
fnstenv
mov
mov
clc
xchg
xchg
fildll
mov
subl
nop
add
add
call
scas
lret
mov
pop
lcall
inc
out
adc
jmp
or
add
int3
loope
stc
orb
fidivrs
cltd
cli
add
std
sbbl
jne
adc
cli
add
or
insl
lcall
incl
iret
push
aam
or
mov
cli
je
je
pop
out
adc
dec
call
aam
outsl
mov
or
aam
jo
call
leave
testb
testb
int3
iret
loopne
jmp
or
dec
in
add
in
pop
leave
add
xchg
testb
cwtl
mov
stc
inc
testl
gs
jne
sbb
and
int3
mov
mov
test
fisttps
cld
repnz
jmp
test
leave
clc
and
add
add
in
cmpsl
in
mov
inc
add
add
add
adc
add
sbb
xor
mov
cld
adc
add
or
jbe
dec
push
add
or
push
leave
jmp
mov
mov
push
adc
leave
test
and
mov
leave
push
jmp
testb
mov
enter
or
jae
repz
hlt
or
jmp
push
loopne
clc
xchg
mov
adc
sahf
enter
inc
cli
lds
leave
add
or
leave
jmp
mov
in
adc
jnp
jge
imul
push
push
push
leave
add
or
shll
inc
xchg
or
loope
jge
lret
mov
mov
mov
leave
xlat
icebp
sbb
rclb
in
orb
jmp
mov
adc
mov
mov
in
sbb
cwtl
int3
sbb
aam
mov
rcll
jl
sahf
cmp
in
or
hlt
repz
adc
faddp
cs
push
add
sub
cmc
lcall
daa
pop
sbb
adc
sbb
jge
mov
lret
push
aas
jmp
scas
fisubrl
pusha
xlat
pop
pop
jmp
aam
scas
sbb
inc
add
or
adc
orb
les
lret
inc
jmp
pop
std
lret
icebp
and
clc
or
movsl
cltd
cmpsl
fnop
mov
push
and
out
imul
mov
mov
sbb
lret
out
in
jo
fwait
les
cmc
adc
je,pt
scas
stc
push
ret
xchg
jle
mov
mov
mov
scas
test
in
pop
ficomps
push
pushf
int
bound
fucomi
inc
or
add
ljmp
into
out
xchg
cli
sbb
xchg
sbb
mov
push
cltd
push
sub
ror
push
out
scas
sbbb
ljmp
int3
mov
les
and
inc
and
fwait
adc
out
test
dec
je,pt
xchg
ljmp
mov
out
jb,pt
or
or
adc
or
pop
pop
ljmp
outsb
or
mov
mov
push
xorb
inc
cmp
jmp
sahf
jmp
mov
lret
subl
aad
pop
push
push
sbb
pop
roll
movsb
xchg
mov
arpl
idiv
and
outsb
inc
push
sub
fidivl
mov
lret
push
mov
shlb
and
test
push
insl
jo
adc
sbb
hlt
pop
or
mov
sub
add
shll
adc
mov
scas
pushf
cld
mov
mov
insb
nop
xchg
pop
adc
pop
and
mov
mov
lcall
icebp
es
jg
sahf
out
mov
cmp
mov
stos
arpl
jg
int
in
dec
xor
or
cmc
cmp
xchg
aad
xor
out
jmp
in
or
cmpsl
add
pop
pop
lcall
stos
adc
aas
or
adc
ljmp
adc
repz
mov
inc
int3
xchg
sub
jmp
fmull
add
cld
leave
clc
jmp
lods
push
pop
mov
mov
or
lcall
adc
sahf
add
add
push
add
sbb
iret
mov
ljmp
sbb
ds
mov
idivl
les
fs
in
mov
jl
xchg
add
jb
outsl
fs
push
lds
lcall
ficoms
cmc
cmpl
push
push
xchg
adc
add
fisttpl
mov
lcall
lahf
sub
cwtl
test
movsb
xor
cmc
jecxz
in
push
repz
cmpsb
jmp
mov
hlt
mov
pop
in
scas
xchg
ja
sbb
outsb
and
push
fisttpl
cmpsb
shll
push
mov
lahf
pop
or
test
inc
out
cld
aad
mov
lock
sub
adc
movzbl
sbb
sbb
dec
bswap
and
stc
test
leave
dec
jg
aaa
sbb
stos
ja
bound
sub
adc
adc
lea
mov
inc
inc
testl
mov
repnz
aam
ret
cmp
add
adc
lds
xchg
fsubrs
shl
inc
cmc
jle
cmp
adc
andl
fmuls
jge
adc
sbb
mov
add
rclb
push
jg
xchg
getsec
dec
aas
lcall
sub
or
fwait
push
push
popa
rclb
xchg
aam
leave
das
mov
mov
mov
or
adc
pop
std
imul
push
cmp
xchg
jae
mov
add
mov
and
mov
orps
hlt
fidivl
push
jle
push
in
jae
add
rcll
outsl
push
pop
add
or
jp
mov
cltd
jle
stos
lahf
dec
mov
xchg
addr16
dec
or
out
jno
lret
inc
pop
popf
push
movzbl
jecxz
mov
cli
shufps
scas
mov
cwtl
inc
mov
xchg
sub
xor
adc
cli
inc
xor
dec
ljmp
jecxz
leave
cmp
scas
ret
sub
sub
xor
scas
or
cmp
enter
cmpps
and
adc
ds
adc
aaa
inc
sbb
insl
gs
cmpsb
push
xorb
pushf
inc
loop
sahf
std
adc
add
fs
sbb
adc
pop
cwtl
mov
movhps
jno
dec
jg
stos
scas
adc
js
rclb
bts
ret
lret
pop
mov
shll
push
xchg
or
push
or
mov
outsb
pop
sbb
negl
js
ja
push
int3
inc
adc
and
sub
addr16
dec
sbb
imul
sti
icebp
pop
add
push
out
or
and
fimull
punpckhbw
mov
sbb
pop
jno
cmp
and
cmpsl
xor
push
mov
xor
cmc
faddl
dec
xchg
insl
inc
call
icebp
mov
movsb
xor
jno
sub
cld
mov
adc
mov
clc
push
pop
js
pop
sbbb
cld
push
aaa
pop
add
mov
cmp
sbb
inc
insl
jnp
jecxz
bound
fistpl
pop
cmovge
sub
push
mov
pop
inc
sahf
cmpxchg
outsl
in
mov
pop
mov
or
insl
jmp
syscall
pop
outsl
xchg
int3
adc
repz
scas
fdivrp
mov
xchg
jb
or
imul
push
pop
xlat
or
push
mov
gs
es
sub
lea
xor
pop
push
call
jecxz
dec
inc
dec
xchg
outsl
cmc
movmskps
pop
pop
push
xchg
dec
dec
fldenv
adc
ljmp
cmp
add
xchg
push
shrl
fdiv
in
xchg
fisubs
cmp
xchg
xor
movntq
popa
push
movhps
jl
paddq
xor
pop
fcompl
js
xchg
adc
add
cmpsb
xlat
sub
mov
sub
add
adc
fs
xchg
jecxz
mov
push
cmp
cmpxchg
les
psrlw
mov
mov
pop
xchg
ds
rcrl
cvttps2pi
rclb
shll
ltr
add
packuswb
mov
in
mov
add
dec
cmpxchg
daa
cmpl
add
in
data16
mov
pushf
bound
push
inc
add
leave
and
mov
add
cmovs
dec
stc
movntps
aas
int
jl
sbb
popf
xchg
or
xor
sub
mov
inc
stos
mov
xlat
fisttpl
and
rolb
dec
out
xchg
sub
add
add
pop
push
sbb
aam
jg
adc
sbb
maxps
lahf
pop
punpcklbw
sbb
or
cmpsl
xchg
jnp
imul
dec
push
mov
sub
fmuls
test
mov
mov
js
cmpsb
les
lds
sub
sub
out
push
adc
shlb
xchg
push
push
sbb
test
flds
cmp
lsl
ljmp
loopne
es
outsb
push
or
cmp
fadds
jg
outsl
ss
popa
lahf
ja
out
mov
mov
rolb
testb
xor
out
pop
movq
loopne
call
scas
push
push
fwait
adc
cmp
fistps
cmpxchg
cmp
flds
mov
xchg
loop
hlt
pop
add
mov
sbb
sub
aaa
and
or
fldl
out
iret
jnp
xor
sbb
cmpsl
loop
scas
mov
xor
jmp
testl
pop
push
push
sbb
xchg
and
and
push
xchg
repnz
mov
adc
jne
test
scas
sub
xor
and
sbb
aad
shlb
mov
repz
das
sahf
xchg
jno
mov
and
ss
cmp
mov
mov
out
enter
test
cmpsl
add
fcmovne
scas
stos
lahf
mov
gs
sahf
rorl
add
xor
js
pushf
movnti
ljmp
pop
and
or
push
fwait
push
push
in
insb
jb
int
scas
or
fs
mov
add
or
or
inc
inc
or
out
sar
hlt
das
lock
push
or
add
les
repz
or
mov
out
mov
aam
arpl
push
lret
call
insl
mov
out
add
fdivp
loop
adc
push
aas
fsubrl
lods
pop
dec
mov
jecxz
dec
mov
sub
xchg
stos
inc
enter
cmpsb
lret
fisubs
add
call
mov
ret
mov
pause
jl
sbb
into
aas
mov
jp
xchg
jle
pop
or
jle
imul
push
clc
in
leave
mov
push
shl
lea
cli
out
or
rolb
in
push
dec
cmp
xchg
jmp
jecxz
or
lds
adc
jge
sbb
cs
in
cli
mov
or
jmp
scas
inc
add
dec
cmp
xor
sub
mov
out
adc
mov
sbb
addl
cld
aas
and
std
jg
push
imul
ret
xor
add
push
add
push
push
int3
push
test
cwtl
adc
jecxz
xor
outsl
lods
adc
mov
dec
push
fs
fwait
imul
adc
pop
xchg
adc
cmp
xor
dec
inc
dec
xor
sub
inc
add
and
or
jb
bound
xchg
scas
sbb
cld
xor
xchg
sbb
sbb
pusha
sbb
sbb
enter
stos
rclb
stos
xor
rorb
fs
bound
bound
mov
inc
shrb
insl
adc
xchg
lods
lahf
jp
inc
push
shl
cld
loope
cmc
adc
add
daa
into
add
jg
jmp
int3
add
outsl
and
jb
scas
sub
imul
add
and
call
sub
fs
xor
pop
cmpl
roll
insl
mov
mov
and
fmuls
fidivrl
pushf
jns
sahf
sub
outsb
sub
mov
add
decl
stos
xlat
rcrl
xor
mov
push
jo
cmc
add
packsswb
xchg
cmp
bswap
cmp
fstl
jge
popf
or
jecxz
ret
dec
adc
outsb
push
sbb
xchg
or
mov
jmp
and
jge
dec
loope
sbb
sbb
filds
inc
arpl
pop
push
fwait
iret
adc
ljmp
cmp
stc
sub
test
xlat
cwtl
out
xor
rdpmc
les
pop
and
aam
xadd
lds
pop
inc
in
test
push
decb
mov
sbb
sbb
mov
adc
lcall
xsha1
cmpsb
or
es
push
call
test
rorl
mul
decb
int
aaa
dec
in
xor
loopne
mov
arpl
lcall
test
out
je
inc
into
pop
push
pushf
mov
adc
mov
ss
xchg
dec
sbb
out
cld
or
test
mov
clc
push
pop
std
push
imul
into
cmc
mov
mov
psubw
and
outsl
mov
sub
iret
push
cmp
xchg
shrb
int
add
mov
inc
sarl
xor
sbb
fmuls
outsb
fstps
add
jnp
mov
int
mov
mov
mulb
pop
mov
and
insl
sbb
das
lea
add
icebp
cmovae
sub
bswap
addr16
je
imul
xchg
shrb
inc
paddsw
addr16
adc
cvtdq2ps
jg
test
xchg
and
lock
rorl
loopne
xlat
out
fcomps
adc
xor
pop
jns
mov
aam
mov
leave
pop
sub
pop
insl
inc
jo
orl
fdivrs
roll
xchg
mov
arpl
lods
mov
and
mov
mov
popa
inc
cmpsl
aaa
dec
dec
mov
mov
ja
fisubrs
push
cmpsb
pandn
addr16
dec
leave
pusha
jge
jo
imul
cmp
jl
add
jecxz
stos
add
test
shll
sub
addr16
cld
dec
jae
fs
sbb
stos
and
shl
mov
cld
mov
lods
idivb
cmovbe
jno
test
and
sbb
addr16
xchg
clc
xor
fdivr
adc
cmp
sbb
xor
in
imul
mov
sahf
sub
ss
cli
sub
jns
setg
int
fimull
inc
into
lods
fsubrs
movzbl
sbb
stos
and
setbe
xchg
bndstx
arpl
aad
push
repz
les
and
out
cwtl
or
jmp
lret
insb
lock
mov
mov
aas
or
mov
xor
loopne
call
scas
pcmpeqw
psrlq
inc
push
fstl
sbbb
adc
loope
mov
jo
mov
xor
addr16
imul
adc
jmp
sbb
push
xchg
jo
mov
mov
nop
push
pop
inc
aad
movzbl
or
rol
jo
negb
int3
sbb
xlat
in
test
sahf
rclb
inc
jb
xchg
fadds
dec
addps
sarb
mov
pop
das
adc
lsl
stc
fwait
mov
out
out
sbb
lods
sbb
sti
mov
stos
sub
or
std
jns
das
xchg
xor
test
xchg
cmc
imul
bound
jb
in
jmp
call
nop
rcl
sub
lea
aad
sub
adc
sbb
inc
dec
ja
test
outsl
xor
xlat
mov
or
cmpsb
clc
cli
push
pop
seta
ret
inc
mov
cli
dec
pmuludq
xchg
movaps
mov
pushf
mov
clc
inc
enter
cmp
arpl
loop
mov
mov
mov
fiaddl
or
daa
in
add
insb
out
and
push
sahf
mov
and
ja
dec
fbstp
push
clc
xor
rcl
sbb
leave
push
cld
aaa
dec
or
pop
or
ljmp
minps
jp
push
dec
dec
das
dec
cmp
adc
arpl
and
pop
jle
loopne
push
dec
sbb
jne
fistpl
adc
or
push
shl
mov
adc
mov
cs
mov
into
and
ljmp
mov
pop
punpckldq
dec
and
inc
pop
dec
insb
xchg
mov
aas
icebp
or
int3
loop
fisubs
cwtl
fisubrl
imul
je
fs
lret
sbb
lret
cmp
push
pop
push
mov
shl
cmc
mov
test
adc
mov
inc
aam
or
stc
pop
cmp
and
out
inc
add
add
lock
inc
add
pop
push
push
cmp
pop
xor
fcmovb
jo
scas
adc
inc
fsubl
adc
lock
dec
pop
and
inc
ret
pop
getsec
and
push
rcrl
cltd
mov
mov
jnp
adc
push
test
dec
outsl
inc
cwtl
xor
cmp
dec
sub
insb
push
and
dec
push
mov
push
push
imul
jle
out
mov
flds
mov
out
out
lods
in
std
mov
push
in
adc
idiv
add
and
in
adc
push
and
and
scas
mov
mov
jno
fidivs
shlb
sub
or
test
scas
pushf
mov
movsl
mov
scas
test
or
pop
adc
jmp
int3
push
das
jbe
lea
sbb
xlat
mov
scas
fucomi
pop
add
inc
add
jnp
clc
or
adc
pop
test
ljmp
xchg
lods
jb
adc
movsl
mov
jnp
pop
push
cld
add
repnz
cmpsl
dec
add
pop
xchg
stos
in
xchg
mov
movsb
xchg
pop
mov
sub
xchg
mov
xcrypt-ecb
cmpsl
mov
dec
rcr
lock
call
int
loope
and
mov
hlt
push
psubb
iret
cwtl
es
ja
mov
jne
pop
cmpsb
adc
lods
jp
add
inc
mov
setb
push
mov
pusha
hlt
dec
jl
aaa
bswap
mov
jo
les
sub
insb
nop
fs
xchg
imul
cmp
adc
xor
shrb
sub
or
adc
xchg
xor
push
xchg
or
gs
jne
xadd
divl
shrl
in
pop
and
paddw
add
inc
mov
cwtl
setg
stos
in
imul
mov
fsubs
subl
inc
xor
mov
aaa
mov
jg
fisubrl
adc
add
jecxz
mov
pop
dec
outsl
sahf
rdmsr
sub
and
lcall
mulb
push
sbb
sub
lods
xlat
test
xor
cmovo
mov
push
pusha
std
cmpsb
lds
adc
add
testl
mov
jbe
aad
fcomi
jp
or
and
lfs
adc
pop
xor
hlt
cwtl
pop
outsl
pmulhw
sub
sub
xchg
jecxz
aas
dec
scas
std
xor
rcrl
fnstenv
popa
out
push
nop
pop
test
dec
les
xchg
data16
mov
in
jbe
cmp
jae,pt
cmovo
imul
rcr
and
das
push
sub
cmc
pushf
inc
lret
into
xchg
push
jl
stc
pop
lock
int
test
sbb
pop
jmp
out
stc
cld
xlat
jae
fs
jge
testl
sti
repz
aas
jno
add
push
pop
repz
out
std
pop
or
and
pop
adc
lea
movsb
dec
pop
arpl
ljmpw
movsb
movsb
xchg
and
sti
out
inc
push
mov
xor
lcall
adc
sbb
push
jns
cld
call
jg
add
mov
shrb
mov
stc
or
mov
sti
popa
dec
pop
mov
push
test
pop
or
adc
out
or
pop
cld
mov
scas
inc
or
sub
jp
push
std
cmpsl
mov
cmpsb
adc
add
lret
add
xor
add
pop
and
add
aas
jae
xchg
ret
jge
pop
add
shr
loope
lret
stc
outsl
dec
sbb
jmp
ds
push
sub
adc
or
add
lds
xchg
ja
inc
sahf
xchg
loope
test
xchg
stc
sub
pop
cld
cs
sub
pop
push
pop
leave
fcomps
pushf
loop
jl
push
and
inc
es
test
cli
fbstp
jle
in
js
xchg
ja
maskmovq
idivl
pop
fmull
in
dec
push
outsb
and
pop
jbe
call
cmp
bound
add
pop
sub
iret
adc
xchg
inc
in
lret
add
pop
push
lock
lods
pcmpgtb
inc
and
sbb
mov
in
mov
in
jnp
mov
sub
fcom
stos
adc
cmp
push
mov
dec
or
adc
lret
push
cmp
pusha
pop
fsts
xchg
test
dec
lahf
loopne
xchg
js
cmp
xchg
and
lret
jecxz
bound
mov
dec
insl
cmp
fld
les
push
jne
ror
jno
loop
inc
xor
cmovl
mov
in
xchg
add
jecxz
xor
push
lahf
lcall
inc
aam
and
jge
movd
pushf
xor
sbb
push
orb
test
xchg
into
jg
jnp
data16
shl
jmp
test
pand
jg
mov
std
sbb
and
xor
movnti
jle
push
addr16
clflush
psrlq
xlat
inc
and
or
jb
jns
mov
mov
inc
out
ljmp
sub
mov
xchg
ss
in
bswap
or
pcmpgtb
sbb
icebp
aam
pcmpeqw
insb
sbb
dec
int3
adc
das
fisttps
adc
out
lahf
mov
inc
out
dec
or
dec
gs
arpl
lods
adcl
pop
shrl
aam
jbe
test
jbe
test
out
push
jb
scas
shrb
in
jno
mov
cmp
imul
addr16
cld
bound
push
adc
sub
dec
mov
jp
cwtl
xchg
fsubr
sbb
fisttps
repz
mov
adc
lods
hlt
push
push
dec
sbb
loopne
testb
sub
or
in
pop
test
int3
sti
add
and
mov
inc
pop
xchg
mov
adc
scas
mov
and
repnz
in
fmuls
sbb
xchg
add
nop
push
pop
push
or
test
mov
push
cmp
icebp
hlt
or
xchg
aam
xchg
cmp
insb
xor
out
xchg
icebp
adc
xor
int
and
xor
xor
clc
jecxz
icebp
or
icebp
rcrl
or
sub
lahf
out
inc
jl
fisttpll
push
and
es
daa
lods
inc
leave
inc
pop
mov
xor
sub
pop
in
out
dec
movsl
push
pushl
or
or
add
js
cli
ljmp
sub
and
add
xchg
repnz
imul
lret
mov
lea
mov
mov
add
xchg
cmc
into
dec
or
jp
xchg
daa
push
mul
lret
cld
fisubs
loopne
in
jb
mov
fs
shrb
data16
lret
or
pop
add
add
adc
iret
repnz
xchg
incb
add
mov
mov
and
idiv
shlb
cmpsb
mov
push
into
sbb
inc
and
lods
inc
add
cmpb
roll
out
mov
jg
clc
pop
sbb
dec
mov
in
and
inc
cwtl
in
enter
add
inc
cmp
mov
sub
cmp
sarb
inc
push
hlt
xor
sbb
cmp
and
cmc
into
xor
popf
pop
xorb
out
push
add
or
scas
inc
sbb
pop
jp
outsl
or
sub
mulb
fmull
cmpsl
or
je
or
dec
dec
outsl
es
pop
push
rcrl
outsb
arpl
pop
enter
cmc
movsl
fimuls
cmp
and
or
dec
xor
hlt
arpl
loopne
dec
js
jg
sahf
aam
inc
cwtl
aam
pop
adc
xlat
mov
and
xor
xor
sub
push
push
int3
fiaddl
cli
icebp
xlat
js
push
and
js
and
jnp
icebp
negl
jp
or
pop
data16
lock
clc
pushf
pop
outsl
out
lahf
xchg
dec
mov
shll
push
jp
addr16
in
aas
insl
inc
ss
jmp
mov
out
sbb
cld
xchg
adc
jnp
scas
dec
dec
pushf
out
insl
push
adc
pop
jb
push
pop
mov
add
loop
jb
arpl
xchg
xchg
pop
mov
mov
jg
lods
cli
xchg
pop
ret
sbb
arpl
lahf
adc
ficoms
jge
in
fldz
call
cmp
or
push
test
lock
lock
cmp
dec
jno
xor
or
push
jne
fcoml
jo
sub
push
js
cmp
bound
pop
test
mov
push
cmp
js
sbb
add
adc
and
subl
pop
inc
push
cmpb
loop
lcall
stos
clc
mov
repnz
jmp
outsb
fldcw
orl
push
cli
loop
fiaddl
push
imul
push
add
pop
sub
push
sub
mov
mov
imul
and
sub
notl
and
jns
mov
mov
jp
or
dec
sub
push
push
fwait
cmp
imul
repnz
and
lret
xor
cmp
or
push
push
push
adc
stos
pop
and
pop
pusha
jae
dec
jmp
leave
dec
pop
mov
push
bound
or
push
js
pop
test
dec
and
dec
mov
inc
dec
push
jno
icebp
adc
xlat
rcrb
in
outsb
int
adc
or
roll
lret
fcoml
pop
pop
push
sbb
cmp
dec
dec
mov
push
cmp
dec
push
packsswb
xor
adc
jmp
xlat
jns
push
call
adc
call
popa
and
cmp
xchg
xchg
adc
sbb
icebp
jns
adc
jns
mov
add
fsubrs
out
in
adc
xor
pop
shrb
adc
sbb
pop
adc
es
loop
inc
push
icebp
xor
movsl
jge
addr16
mov
movsl
push
add
add
enter
and
loop
subb
jmp
scas
loop,pt
sbbb
in
add
sar
lret
push
sub
xor
jmp
jmp
or
int3
pop
lcall
fcompl
ret
popf
jge
xor
cld
das
push
cmp
das
ja
shll
imul
add
add
stc
sti
xor
sbb
stc
add
jmp
push
xchg
cmpl
mov
jge
or
adc
sub
adc
sbb
das
adc
sbb
into
or
mov
jle
pop
push
jmp
dec
pop
bnd
fcoml
lret
xchg
into
mov
sub
mov
hlt
mov
and
lea
sub
cltd
cli
mov
jp
mov
test
mov
repnz
arpl
cli
addr16
out
sbb
lods
sub
pop
fwait
lods
iret
and
xchg
cmpsb
jne
jge
mov
lea
jbe
push
cmp
mov
fsubs
push
xchg
fcom
add
mov
negl
fpatan
inc
dec
or
jmp
ficoml
add
xchg
pop
sbb
push
adc
iret
stc
xchg
cld
loop
call
repnz
inc
add
xchg
pop
sbb
xor
cmp
lret
stc
add
inc
push
icebp
mov
add
addr16
jp
jmp
daa
jo
jno
imul
loopne
pop
push
push
arpl
into
xlat
imul
pop
into
dec
sbb
sbb
testl
mov
pop
push
mov
in
es
dec
scas
mov
outsl
scas
dec
sbb
sub
push
stos
pop
aam
and
push
adcb
popa
xchg
sub
sbb
lcall
cmp
xor
xor
push
popf
mov
mov
pop
sarl
test
mov
test
add
andl
or
and
sbb
insb
scas
pop
test
jmp
pop
fdiv
lock
cs
addr16
xorb
jmp
iret
rolb
test
lcall
sbbb
imul
pusha
xor
cmp
mov
xchg
jg
adc
dec
push
jmp
out
jg
sahf
fsubr
pop
or
cld
jmp
cli
pcmpgtb
imul
inc
sub
push
inc
pop
sahf
jb
pushf
add
push
sbb
pop
fsts
insl
mov
mov
dec
and
out
ss
fcoml
scas
insl
incl
and
jge
imul
in
lcall
xor
insb
adc
jl
rcrl
mov
and
add
xchg
push
xchg
shlb
incl
xchg
testb
push
sbb
sti
sbb
adc
repz
cmp
mov
sub
cld
scas
dec
mov
in
hlt
call
cld
in
das
or
add
into
mov
cmpsl
jle
rolb
add
fcompl
xchg
hlt
xor
mov
cld
sub
cmp
or
dec
push
pop
xchg
roll
xor
clc
ljmp
and
notb
into
adc
imul
push
insb
push
push
nop
sbb
pop
sbb
icebp
xor
add
inc
mov
rcl
sbb
popf
fists
ss
sbb
or
and
shrl
stc
push
sti
dec
add
pop
in
jb
leave
mov
outsb
jmp
xchg
adc
aad
jp
adc
in
mov
cmc
cs
add
dec
js
push
call
aas
add
cld
std
sbb
aaa
pop
in
dec
data16
sub
xchg
fisttpll
cli
mov
in
scas
test
rcrb
faddp
pushf
sub
mov
sub
int3
nop
iret
shlb
jg
lcall
jmp
scas
inc
mov
fdiv
pop
jmp
add
mov
cmpsb
adc
hlt
in
out
rclb
jo
mov
push
push
inc
xor
stc
xor
or
sub
jb
mov
adc
es
inc
jne
notl
out
or
add
or
jbe
sub
add
add
stos
out
push
push
jbe
inc
pop
gs
add
pop
out
leave
push
fdivr
incl
roll
mov
dec
pop
ret
out
fsubr
xchg
fisubs
push
cmp
cli
repnz
outsl
es
aam
fadds
xor
fcmovnbe
int3
ljmp
push
idivl
cld
cmp
in
mov
jmp
into
loope
add
xchg
mov
xchg
push
jbe
push
xchg
jmp
out
add
jo
xchg
cwtl
xchg
call
out
lock
add
leave
movsl
xchg
call
imul
ja
push
gs
pusha
fcoml
enter
sbb
lea
mov
cmpsl
jge
out
xlat
jecxz
or
and
daa
outsb
lea
xor
xchg
aas
jno
xor
pop
push
xchg
and
adc
flds
pop
addr16
and
push
icebp
or
pop
jno
sbb
or
push
or
rol
jmp
xchg
mov
clc
cmp
aam
lcall
repz
or
pop
and
pop
cli
adc
mov
fs
into
dec
mov
fldl
add
repnz
xorb
mov
lods
mov
test
bnd
mov
mov
lock
dec
mov
movhps
fists
inc
adc
cmp
xor
cmp
test
incl
sti
loopne
lcall
adc
das
push
jae
adc
ret
add
and
cs
movsl
int
push
addb
popa
adc
mov
stc
jmp
push
inc
xor
dec
mov
aaa
inc
inc
mov
addr16
fsubrl
add
fwait
sti
cmp
cmp
lahf
fsubrl
or
dec
inc
xchg
out
cmp
or
jbe
test
mov
inc
or
sbb
cmp
ret
mov
in
and
lea
jae
ja
sbb
divl
insl
inc
push
adc
inc
pop
out
cli
cld
cmp
cvtpi2ps
push
adc
ret
mov
mov
ret
iret
movsb
lods
popf
adc
sbb
lret
fcompl
aam
mov
das
lods
cmp
sub
adc
call
shr
inc
rolb
sbb
ja
jns
fldcw
mov
std
xor
rcrl
shlb
inc
cs
movsl
and
sbb
mov
rorl
and
in
lret
pop
push
mov
ljmp
leave
and
in
sbb
pop
push
pushf
sbb
cmp
and
leave
daa
into
repz
mov
rcrl
dec
adc
sarl
pop
mov
scas
sbb
pushl
imul
pop
xlat
imul
mov
sbb
test
popf
cwtl
cld
inc
aaa
pop
jmp
pop
lcall
adc
inc
cltd
add
push
jae
or
adc
mov
mov
ja
lret
push
into
pop
call
loop
mov
and
fs
lret
add
push
xor
iret
sbb
mov
lahf
lods
clc
mov
ret
push
rcll
or
cs
aam
sbb
into
in
shll
ret
in
icebp
adc
in
mov
sbb
mov
out
aam
decb
shll
and
in
pop
or
scas
pusha
lcall
or
icebp
or
ljmp
pop
add
mov
inc
out
mov
inc
dec
pop
pop
and
test
cs
cmp
sbb
push
xchg
loop
aam
jns
add
sbb
lcall
adc
mov
pop
je
in
xchg
sti
icebp
mov
rorl
xor
idivb
pop
jae
add
push
sbbb
into
adc
jg
adc
pop
xchg
mov
xor
adc
loope
test
dec
movsl
loop
data16
dec
xchg
pop
sbb
cmp
cs
pop
js
outsl
repnz
add
inc
fisubrl
dec
stos
arpl
je,pt
out
dec
in
mov
test
xchg
cmp
pop
dec
pop
jo
add
lods
iret
pushf
daa
scas
jmp
dec
push
ficoml
test
adc
ja
gs
ja
insb
pusha
in
mov
or
push
das
add
insb
fisubrl
pop
push
pop
inc
ljmp
mov
adc
test
dec
mov
lahf
dec
bound
xchg
jecxz
sahf
xchg
add
adc
hlt
sbb
ja
test
cmp
dec
dec
stos
sahf
jl
stos
scas
and
in
movsl
mov
loopne
scas
into
or
mov
insl
into
inc
jb
dec
or
inc
mov
dec
adc
ljmp
and
cmp
and
dec
push
xor
or
repnz
mov
or
scas
inc
or
adc
pop
cmpsb
daa
lds
add
xchg
inc
sbb
mov
adc
test
into
push
stos
or
jnp
push
xlat
jmp
dec
and
mov
notl
xchg
mov
xor
stos
add
xchg
pop
es
fisttps
mov
pop
xchg
mov
dec
push
or
sbb
cwtl
lret
inc
lcall
mov
xchg
xchg
jmp
dec
bound
gs
cmpsb
ucomiss
lock
popf
jmp
scas
inc
ss
add
addr16
ljmp
jmp
aas
mov
insb
or
sub
jbe
mov
into
cmc
mov
jl
or
popa
adc
mov
dec
adc
mov
cwtl
jmp
arpl
mov
pop
fs
sub
jg
cmpsl
lock
jnp
pop
sbb
arpl
rol
ret
push
dec
loop
pop
dec
inc
and
and
jo
lcall
ljmp
and
adc
dec
xchg
add
and
js
mov
adc
popf
lret
adc
dec
pop
gs
loop
adc
push
aas
mov
push
inc
mov
outsb
sbbb
pop
dec
lahf
inc
jge
das
cld
pop
sbb
ret
adc
push
gs
jne
dec
in
popf
shll
jg
add
xchg
sub
jno
adc
and
icebp
mov
add
mov
das
jl
shrb
mov
mov
xchg
loope
xchg
pop
rcrl
cs
pop
cmp
jge
aaa
and
adc
fisttps
outsl
leave
sarb
adc
int3
pop
sbb
mov
fdivl
neg
mov
xchg
mov
stc
mov
adc
mov
or
imul
scas
leave
mov
pop
mov
fcoms
aas
jb
lcall
sbb
cmpsl
jecxz
movsl
and
or
dec
jecxz
aad
sub
outsl
pusha
lock
adc
jmp
imul
clc
sub
or
shll
jmp
xor
fldcw
and
jae
dec
repz
ficompl
inc
push
in
pop
insb
or
cli
add
lea
mov
pop
std
inc
push
or
adc
into
xchg
push
lcall
insl
insb
push
sti
ss
jae
ja
lcall
rorb
data16
loope
ja
pop
loope
jne
lods
cmc
add
lock
rcll
pushw
push
jp
insb
fsubr
decl
inc
ja
outsb
sbb
aas
mov
decl
ret
rcrb
outsl
cmp
rol
mov
dec
inc
dec
cmove
pop
dec
pop
pop
sbb
cmpsb
sub
daa
pop
mov
popa
mov
rol
push
lret
aam
jmp
aam
or
sarb
imul
push
pop
sbb
inc
repnz
adc
pop
or
dec
push
xlat
pop
aad
lods
mov
fnsave
mov
mov
outsb
fidivrl
sti
arpl
jne
gs
lods
mov
push
or
push
jnp
arpl
inc
xchg
pop
lret
pop
jle
fcoms
jb
loop
or
add
cld
xchg
sub
jge
mov
cmp
clc
fcoml
cmp
or
adc
imul
cmc
in
adc
push
movsb
gs
add
mov
xchg
push
or
push
add
cwtl
and
jnp
xor
or
aam
leave
push
xchg
jmp
or
in
adc
adc
lcall
adc
insl
pop
cli
adc
xchg
pop
int3
test
push
icebp
pop
into
out
mov
or
adc
fsubs
into
clc
mov
cld
add
push
notl
lret
add
or
mov
inc
push
adc
add
adc
icebp
loop
cmpsb
cmpsl
call
lret
adc
decl
sub
call
add
jge
addr16
pop
sbb
out
sti
aas
insl
icebp
loop
and
hlt
xchg
or
mov
int3
adc
mov
movsl
and
mov
repz
adc
fcompp
adc
lahf
sub
dec
sti
mov
fcoml
mov
cld
mov
or
fdivrs
jnp
and
les
insl
add
repz
adc
add
jl
sub
xchg
and
jb
rcrb
int3
daa
pop
hlt
into
add
test
sub
out
jmp
es
addr16
pop
into
repnz
dec
int3
push
jle
sahf
sbb
sub
cmp
mov
jnp
ljmp
adc
outsb
in
pop
lcall
lcall
fisubrs
rcll
pop
cmp
ret
fistl
addb
add
fdivr
iret
shl
push
addb
icebp
shl
out
jge
icebp
roll
aad
cld
lret
cli
push
je
shll
orl
stc
orl
adc
adc
pop
jnp
pop
out
hlt
push
ljmp
mov
jle
or
rorl
in
es
pop
rorl
out
ljmp
in
aam
orl
inc
arpl
stc
cmp
sub
int
jge
cs
daa
pop
dec
xor
dec
iret
fnstcw
inc
push
and
rclb
addr16
jnp
dec
cmp
dec
push
pop
repnz
xchg
sbb
sti
cld
sti
dec
pop
mov
xor
lcall
out
add
mov
xlat
inc
xchg
push
and
pop
insl
je
rolb
adc
test
dec
aam
lcall
ljmp
dec
dec
fmull
xor
pop
cmp
out
xor
lods
test
or
mov
xor
mov
mov
js
iret
addr16
int3
idiv
div
xchg
test
gs
add
jb
ds
cwtl
mov
aas
insl
pop
test
cmp
xchg
pop
int3
jmp
add
mov
xchg
pop
ret
sbb
inc
xor
aas
insl
pop
mov
pop
xchg
pop
sarl
sbb
mov
inc
imul
inc
cmp
and
mov
or
xorl
add
pcmpeqd
xchg
and
outsb
mov
adc
dec
outsb
ds
cs
movsl
in
dec
call
add
lret
add
pusha
inc
lcall
adc
jp
lock
into
jmp
outsb
fsubrl
mov
dec
arpl
and
mov
sbbb
jb
fmuls
icebp
lock
fmuls
cltd
inc
insb
xlat
clc
ljmp
push
sub
lea
sbb
cmpb
dec
imul
fcmovu
sbb
or
jecxz
cmp
in
scas
inc
mov
cmp
ror
push
push
mov
stc
shlb
and
adc
je
add
add
jb
lcall
call
push
xchg
xor
push
cmp
push
dec
gs
sbb
repnz
cmp
add
pop
addb
fdivrl
adc
jo
inc
arpl
mov
scas
mov
jge
popf
ror
in
repnz
sbb
pop
adc
cmpb
ja
cmp
sub
pop
adc
and
lahf
push
cmp
inc
sbb
push
sub
jnp
repnz
fists
xor
into
sbb
adc
addr16
and
mov
or
sbb
mov
or
cwtl
int3
mov
bound
adc
insl
push
inc
sub
call
adc
loopne
loopne
std
pop
iret
pop
xchg
mov
pushl
cwtl
mov
arpl
adc
push
dec
pop
arpl
insb
pop
movsl
fcompl
lcall
callw
xor
adcb
push
pop
push
adc
cwtl
cmpsl
dec
subl
imul
gs
and
pusha
pop
xor
ss
cltd
mov
mov
push
and
and
mov
sti
cmp
mov
inc
cmp
inc
pop
out
gs
call
repnz
dec
xor
cld
js
dec
repnz
pop
ficoml
outsb
fs
mov
cmp
push
or
sub
jnp
out
jmp
scas
inc
ss
xor
test
ret
pop
lea
in
cld
xor
repz
add
mov
pop
inc
imul
sti
push
jns
mov
int3
mov
negl
decb
testl
add
mov
and
cli
jmp
push
loope
xacquire
das
xor
mov
pushl
and
mov
cs
daa
imul
jae
cmp
aam
cmp
mov
je
mov
ljmp
cltd
rorl
popa
jb
in
add
push
mov
add
rclb
popf
ljmp
sbb
icebp
into
xor
and
xchg
add
mov
mov
mov
xor
shrb
nop
or
enter
jge
addr16
xor
inc
jge
lret
insb
cmpsb
xchg
pop
shrb
in
xrelease
inc
pop
or
adc
outsl
dec
adc
push
ret
lods
hlt
jecxz
pop
pop
pop
dec
dec
jmp
fildll
in
les
stos
cs
or
mov
retw
ja
mov
sbb
add
insb
notl
inc
dec
popf
xchg
clc
sbb
dec
adc
and
popf
inc
sti
ljmp
mov
sahf
xchg
or
add
or
push
pop
sub
scas
jmp
push
mov
cld
sti
icebp
clc
je
jb
stos
adc
ja
pop
or
or
or
jno
ja
or
daa
jns
pusha
and
and
stc
aam
stc
popa
adc
out
cmc
adc
push
imul
xor
pop
and
jmp
add
test
xor
pop
lahf
addr16
inc
push
addr16
mov
mov
rorb
pop
jo
ficomps
adc
mov
mov
dec
fs
xor
adc
mov
pop
data16
insb
inc
out
stc
sbb
inc
mov
sti
fs
aaa
jmp
scas
inc
nop
mov
push
test
addr16
mov
movsb
aaa
jnp
sbb
cld
jmp
mov
icebp
das
fdivl
pop
adc
fadds
fisubl
push
cmpsl
dec
cli
xchg
or
hlt
mov
pop
in
lds
mull
shr
adc
stos
push
cli
inc
push
ljmp
push
mov
or
pop
lcall
in
mov
hlt
add
ja
sbb
xchg
stos
adc
daa
pop
cld
stos
out
jmp
add
push
pop
sbb
sub
sbb
and
dec
sbb
and
adc
dec
enter
mov
cs
mov
adc
pop
xor
repnz
daa
out
xchg
pop
shr
cs
push
dec
test
push
outsb
fcoml
out
into
cmpsl
fdivrl
fdivr
aas
jb
int3
sbb
icebp
mov
mov
push
mov
push
inc
sub
mov
lret
sbb
mov
jmp
cmp
cmp
call
pop
xor
sub
call
cld
in
mov
push
cmp
xor
ljmp
stos
lret
cs
addb
scas
out
stos
in
adc
shlb
scas
mov
jge
jmp
mov
fcmove
and
dec
push
movsb
ret
cmp
insb
xchg
popa
decb
pop
sub
jge
fsub
pop
movsb
pop
dec
or
loope
test
jmp
sbb
lcall
push
push
xor
ret
fcoml
dec
or
sub
xor
dec
sub
dec
in
mov
mov
pop
and
mov
dec
xchg
xor
adc
push
push
inc
mov
aaa
jge
mov
pop
mov
scas
lods
sbbb
cmp
ret
adc
loop
mov
into
pop
push
and
mov
popa
imul
jae
xor
addb
test
xchg
mov
repz
pop
mov
sbb
bound
repz
pop
or
inc
push
adc
sbb
mov
loop
pop
rol
mov
and
daa
out
rcrb
mov
pop
mov
pop
movsb
push
or
pop
aas
mov
in
pop
lret
loop
mov
push
lcall
and
aaa
cld
loop
adc
pop
and
inc
repz
add
adc
loope
xchg
ret
aam
push
lds
dec
in
stos
les
jb
xchg
sbb
ljmp
add
into
push
adc
add
adc
insb
or
inc
add
xor
std
mov
in
pshufw
sti
pop
xor
pusha
xchg
mov
cmove
loope
xor
les
sub
cmove
adc
pcmpeqb
fisubl
push
cmpsb
lea
sbb
pop
sub
outsl
inc
test
lahf
mov
or
jbe
out
dec
pop
aas
fiaddl
pop
popf
pusha
aad
out
bswap
dec
adc
scas
data16
jp
int
jne
loopne
or
cltd
push
insl
adc
adc
les
inc
push
fnsave
cmovne
xor
xor
inc
push
testb
inc
xorb
hlt
loopne
inc
pop
jmp
sbb
and
dec
push
setp
mov
mov
jno
ret
cwtl
ljmp
adc
std
xchg
scas
push
mov
sbb
push
loop
xchg
movsl
in
xchg
push
and
push
mov
aaa
xchg
out
jb
into
dec
and
mov
stos
bswap
lahf
adc
iret
mov
into
xor
push
shl
push
mov
hlt
lods
jg
push
lods
test
xchg
jle
mov
pusha
add
inc
mov
sbb
xor
push
lods
inc
sbb
std
insl
xchg
iret
push
mov
push
fsubp
idiv
inc
add
pavgw
jmp
std
dec
jae
scas
sbb
add
jg
wrmsr
imul
sbb
cmp
addr16
fsubrs
rorb
add
in
pushf
es
add
sub
sub
add
pop
outsb
mov
test
dec
mov
and
psrad
jb
into
lcall
mov
enter
inc
mov
fs
mov
dec
add
xor
adc
pop
popa
movsl
cmc
dec
add
out
xor
cs
enter
popf
adc
mov
push
call
mov
cvtdq2ps
sbb
ja
jb
call
ret
dec
test
insb
xorb
push
jno
xchg
test
gs
dec
push
cld
push
mov
push
mov
sahf
push
daa
in
sub
sete
mov
rcpps
mov
insb
loope
fwait
out
jns
imulb
in
das
mov
pmulhw
add
int
lods
js
popf
add
cmpxchg8b
sub
syscall
pop
pop
jg
inc
es
stos
bound
ds
xor
enter
pop
dec
adc
in
sub
cmp
jo
cmpsl
jae
sbb
cmp
dec
out
sahf
fsts
mov
push
mov
lret
xor
test
cmp
repz
mov
in
adc
ficomps
inc
or
out
sbb
enter
stc
jmp
aad
add
add
sbb
repz
fisubs
insl
es
or
lods
add
mov
adc
or
xorb
lret
pop
ljmp
fstl
ja
rol
jno
fucomp
mov
adc
iret
rcrb
sub
pop
xor
call
rcrl
cmp
add
andb
pusha
add
pop
movsb
or
orl
and
xchg
xlat
add
loope
and
lcall
dec
mov
out
int3
rcr
sbb
xchg
pop
filds
inc
jl
jnp
cmp
std
repnz
hlt
jl
cmp
sbb
push
cmp
aaa
mov
cld
sbb
out
mov
ss
push
lahf
dec
or
cwtl
xlat
push
lcall
adc
push
add
or
or
nop
lret
push
sbb
and
lret
pop
jge
jmp
dec
and
adcb
and
inc
xlat
adc
adc
inc
idivl
add
dec
scas
shll
test
cmp
jl
xchg
icebp
dec
into
outsb
loopne
out
outsb
jecxz
dec
icebp
push
into
fidivs
insl
adcb
fwait
sbb
mov
inc
nop
pop
negl
lret
movsl
and
cmp
or
addl
add
rcrb
push
loope
fsubr
fcmovnu
fidivrs
in
call
dec
xchg
sbb
rcr
fimuls
out
loope
icebp
roll
jo
sub
xchg
sti
repnz
add
mov
and
jns
aam
jmp
dec
and
leave
mov
mov
add
sbb
icebp
mov
jno
add
aaa
sub
mov
je
pop
dec
and
jge
aaa
sub
push
or
je
pop
lcall
adc
add
aaa
sub
pop
fisubl
inc
fildl
adc
in
sahf
fldt
or
push
rol
jmp
in
bound
push
minps
es
dec
xor
mov
addr16
shlb
pushf
out
push
addr16
mov
aaa
or
push
std
mov
loope
or
or
pop
stos
ret
mov
or
cld
loopne
or
shlb
je
ret
jge
xor
add
mov
pop
sahf
sbb
mov
jmp
pop
shlb
ss
sbb
pushf
out
cmpsb
aad
and
fs
xchg
lods
cmpsb
or
and
out
adc
cmp
mov
jmp
cs
mov
popf
addr16
xchg
lods
cmpsb
std
call
or
cwtl
dec
mov
imul
imul
aam
adc
xchg
test
pop
int3
out
lret
ljmp
scas
ds
incl
adc
mov
dec
push
insl
pop
jg
movsl
fmuls
adc
insl
neg
ror
int
inc
jmp
incl
addr16
imul
add
lret
xchg
pop
int3
pushl
pop
int3
mov
jmp
mov
cld
push
mov
sbb
sar
int
add
mov
js
mov
lock
ds
jne
cmpb
cmp
testl
imul
push
cmp
mov
in
lret
pause
leave
cmp
lret
xchg
into
inc
out
icebp
inc
add
lods
adcb
test
in
leave
lcall
mov
pop
fstpt
lcall
mov
fdivrl
add
icebp
sbb
fdecstp
ret
int3
sbb
cld
adc
lods
stc
push
or
stc
rcrb
icebp
or
ja
stc
aad
test
xor
aam
push
mov
cmp
pop
addr16
xchg
fsubrs
int
jecxz
cmp
cli
test
addr16
iret
add
repnz
mov
and
mov
add
fwait
js
daa
out
out
cltd
jge
sti
add
sbbl
mov
adc
mov
out
lcall
adc
jbe
xlat
or
xor
add
aaa
and
lahf
test
fisttps
lret
icebp
hlt
sarb
fisubrl
pop
sbb
mov
pusha
push
jg
pop
inc
or
idiv
or
cmp
lahf
add
int
mov
adc
repz
lahf
add
cs
jmp
cmp
push
repz
lahf
mov
aaa
sbb
jo
icebp
lahf
xchg
push
xorb
push
jmp
inc
aam
jle
add
mov
rcl
outsb
and
lret
pop
lock
mov
xchg
int
cltd
call
data16
pop
sbb
cmpsb
int3
adc
ja
ror
in
lret
icebp
jmp
mov
iret
out
sahf
cld
leave
mov
lcall
leave
sub
adc
adcb
pushf
sbb
pop
leave
adc
xchg
adc
pop
std
fmulp
lcall
dec
icebp
fcmovne
sti
loopne
sti
add
aam
pushf
aam
out
aam
cmp
lret
fwait
pop
loope
push
mov
mov
sahf
or
ja
adc
cld
scas
jmp
mov
nop
fmuls
inc
xlat
data16
adc
insl
xor
pop
push
call
mov
repnz
addr16
lret
xchg
pop
int3
ljmp
mov
sti
int3
jle
push
sti
loopne
fiaddl
jg
pop
mov
clc
mov
mov
stc
mov
incb
pop
test
lahf
ljmp
sbb
cld
pop
bound
std
sub
notl
or
push
aas
insl
fnsave
adc
mov
sbb
push
adc
lret
movsl
loopne
fcoms
aas
insl
fnsave
test
or
adc
mov
aad
cld
mov
aas
jb
fimull
sbb
cmc
lcall
cmp
xchg
pop
fmull
pop
xchg
cld
out
add
or
push
lods
dec
push
cmp
add
sub
and
addr16
rolb
mov
enter
adc
pop
push
sbb
sbb
push
hlt
push
adc
add
aam
or
cmp
add
out
push
lret
mov
scas
add
sbb
fistl
mov
jb
and
adc
xor
pop
in
xchg
pop
sub
inc
jns
adc
int3
xor
fldcw
icebp
adc
cmp
or
xchg
push
pop
loop
lods
xchg
repnz
scas
mov
mov
sub
fwait
push
icebp
fildl
add
sahf
jmp
call
jb
testl
dec
cmc
or
xor
push
and
fists
lret
aam
cmpsb
pop
loope
adc
in
adc
sbb
inc
push
aam
mov
in
lcall
insl
mov
xor
rolb
xlat
int
loope
adc
adc
dec
or
int3
jbe
jmp
lds
sub
decl
ss
xchg
ret
mov
sbb
xor
cld
adc
adc
repnz
std
fimuls
adc
leave
or
push
jb
xchg
aad
adc
and
xchg
repz
lret
cli
aam
fcmovbe
cmp
xor
xchg
mov
cs
cmovnp
pop
cmp
inc
lret
sub
mov
and
inc
xor
cmpsl
dec
imul
rclb
xor
mov
loope
push
xor
int3
lea
pop
push
push
dec
mov
insl
lock
lahf
aaa
jae
push
mov
loop
movsb
dec
pop
test
inc
adc
mov
shrb
daa
mov
scas
cli
pop
fcmovbe
cld
in
pop
arpl
adc
cmc
mov
mov
pushf
loope
sbb
adc
pop
dec
pop
or
push
sbb
in
fcoml
int
jo
aaa
cmpps
mov
out
push
mov
pop
lcall
xchg
sub
push
hlt
insb
xchg
cmc
sbb
aam
inc
arpl
int3
jmp
lahf
add
xchg
out
scas
or
mov
sbb
xchg
xchg
xchg
mov
or
loop
in
sbb
mov
into
pop
rcll
scas
scas
lods
mov
sahf
sub
lret
mov
fcomip
cmpsl
mov
shl
sbb
repnz
sub
push
cli
or
adc
or
sbb
jnp
jg
leave
or
inc
jae
iret
cmp
fwait
and
fidivs
and
lock
pop
lds
mov
mov
pop
lret
lret
ds
mov
xor
adc
je
faddl
or
or
jp
sahf
in
adc
aaa
ds
sti
sub
test
and
adc
sub
dec
jae
jg
mov
pop
aaa
jns
push
adc
fldt
sarl
jne
int
out
jne
inc
mov
sub
dec
std
outsl
std
or
iret
aaa
inc
movsb
outsl
push
fdivrp
and
push
incl
sub
stos
stos
ja
adc
loop
add
icebp
cld
loope
rorl
mov
fcompl
iret
cli
and
int3
por
std
mov
setl
mov
stos
fisttpll
insb
subps
scas
int
dec
imul
ud1
mov
test
idivl
push
xor
push
jns
pop
dec
cmp
bswap
mov
push
sub
xlat
mov
seta
aaa
daa
mov
and
xor
js
adc
mov
cltd
in
mov
xchg
xlat
fucomi
lods
sub
pushf
std
dec
ficomps
sbb
cltd
xchg
imul
adc
call
mov
mov
xchg
push
outsl
xchg
in
xchg
mov
addps
iret
jecxz
push
xor
mov
lahf
insb
dec
lcall
pop
inc
sahf
and
xchg
dec
add
fists
packuswb
les
fstpl
push
add
pop
rcl
inc
shr
dec
and
mov
mov
ss
aas
mov
lret
mov
inc
cwtl
fnstenv
pop
adc
iret
and
maxps
fisttpll
mov
int3
movsb
inc
testl
adc
into
cmpsl
inc
imul
data16
xor
daa
shll
iret
inc
imul
sbb
and
dec
fcoms
xlat
shlb
nop
add
psubsw
mov
sub
das
dec
fldt
sbb
mov
fstpt
shlb
push
dec
pop
and
add
cmp
movsb
lahf
psrlq
orl
bound
mov
out
test
movsb
mov
shlb
mov
or
xchg
jbe
notl
cmp
es
xchg
in
js
daa
sahf
ss
sub
xchg
xor
pusha
sbb
sub
pushf
scas
movsl
pop
cmp
sbb
mov
xor
in
into
invd
lret
xchg
daa
andl
fmul
mov
cmpxchg
mov
xchg
push
sbb
fnstcw
arpl
push
daa
mov
push
loope
nop
adc
repz
xchg
scas
pop
inc
push
sbb
and
test
xchg
outsl
push
and
scas
sbb
ret
je
lods
sarb
pop
xor
inc
popf
xchg
sub
or
push
fisubs
or
ss
jae
dec
mov
aad
into
push
decb
sbb
cmp
lea
popf
fs
ret
mov
pop
add
add
sbb
das
mov
ja
xor
lahf
dec
and
mov
mov
sbb
sbb
push
push
jmp
add
cmove
xchg
ss
ret
mov
cs
addps
aad
xor
lahf
ja
std
loopne
int
or
jmp
repnz
dec
popa
sub
loopne
lret
and
and
mov
pop
dec
sbb
lret
ret
test
sub
cmovbe
xor
cmp
push
js
adc
mov
in
hlt
cmpsb
fsubrs
and
sub
popa
cmc
rcrb
dec
and
stos
dec
and
cld
mov
jmp
rcl
cli
call
das
mov
pop
cltd
xchg
adc
pop
inc
mov
std
sbb
out
gs
in
popa
jmp
loope
repnz
lock
jbe
ret
mov
push
or
jo
cmp
mov
sub
shl
orb
lods
dec
push
push
jae
lsl
cmpsl
and
scas
cmp
test
sub
mov
mov
jae
test
jl
lock
adc
lahf
outsb
cmp
loopne
xlat
xchg
repz
jnp
test
cvtdq2ps
mov
ja
dec
mov
sbb
jnp
outsl
cmp
push
mov
mov
mov
sub
aam
or
xor
and
cmp
mov
xchg
dec
testb
add
ror
pop
xor
or
pusha
jae
cmp
push
rcrl
jp
and
cmp
in
lock
dec
push
popa
xchg
maxps
xor
loopne
xchg
cmpb
push
movsb
enter
pop
notb
dec
cli
nopl
xor
mov
xor
sub
push
fwait
call
je
das
xlat
mov
ret
loopne
cld
and
jg
mov
lar
das
adc
cmp
bound
push
and
nop
inc
push
pop
inc
lods
sti
fwait
popa
xchg
mov
and
adc
psraw
lods
cvttps2pi
sbb
ficomps
mov
mov
mov
add
fists
or
stos
inc
aaa
inc
gs
lock
and
cmp
je
enter
and
mov
rcr
psrld
inc
jbe
xor
ja
adc
popf
jo
aaa
imul
dec
push
xchg
sbb
pop
outsl
mov
adc
mov
aam
call
adc
cmp
rdpmc
mov
mov
rdmsr
fstl
push
call
xchg
inc
cmp
xor
das
mov
movsb
outsb
iret
or
syscall
cld
out
out
pop
fildll
int3
mov
sub
mov
mov
aaa
xchg
push
sub
fcompl
jmp
cmp
enter
dec
add
adc
popf
ds
inc
out
push
outsb
pushf
dec
pop
push
sarb
pop
fstps
setge
idivb
ds
jb
dec
movsb
adc
arpl
and
cmp
in
jle
call
inc
cmp
dec
push
and
aaa
and
mov
movsl
dec
xor
and
sub
movsb
lahf
psubb
mov
ljmp
inc
cmp
pop
jg
ret
mov
stos
out
rclb
imull
xor
mov
test
cmovl
test
dec
inc
test
xorl
mov
lods
arpl
popf
es
mov
jecxz
imul
cmp
movsw
add
xchg
frstor
jle
lret
insb
cli
mov
mov
int3
sti
mov
cmc
pusha
add
rcl
inc
xor
lods
test
outsl
push
sbb
es
cmp
daa
call
sbb
rclb
push
cmp
inc
btc
fwait
xchg
inc
or
rol
jo
lret
mov
mov
popa
sub
adc
inc
mov
jb
scas
in
fists
sahf
test
mov
push
jmp
aas
adc
in
insl
xor
inc
adc
das
push
and
lcall
adc
mov
add
shld
movsl
mov
fnstenv
push
lahf
cmp
xchg
cmp
into
imul
inc
sbb
daa
push
jb
and
and
lret
add
addb
xorl
out
xor
pop
fidivrl
xchg
clc
js
xchg
sar
jbe
imul
mov
outsb
shrl
cmp
int
and
orb
das
ds
pop
paddsw
jp
repz
pcmpgtw
pusha
dec
mov
test
cli
mov
fsubs
push
psubb
push
and
xchg
out
pop
mov
jnp
cmp
loope
sbb
dec
arpl
test
ud0
cwtl
and
lahf
bt
push
outsl
sub
lcall
in
pop
out
cmovg
and
emms
xchg
inc
dec
cmp
inc
xor
mov
orb
hlt
and
xchg
jns
movsb
jae
pshufw
and
in
js
insl
mov
sbb
jp
pop
movsb
imul
lods
and
mov
jns
mov
jmp
push
and
shll
testl
mov
mov
pop
dec
and
inc
ss
jno
inc
jge
repnz
mov
nop
xor
cmp
inc
insb
and
repnz
shl
sub
jg
mov
subl
push
mov
sbb
cmp
test
and
packsswb
mov
push
mulb
or
inc
lret
lcall
adc
push
jo
sub
and
and
ss
add
cmc
push
ljmp
mov
pop
mov
inc
lahf
test
pop
xor
add
and
jg
mov
loopne
fldenv
gs
dec
cmp
cmp
mov
and
imul
pop
sbb
test
inc
jne
xor
add
mov
ret
mov
inc
jnp
popl
mov
aaa
nopl
lret
cld
fs
jmp
pop
movb
cmp
mov
fistl
mov
xchg
shl
lret
xor
inc
jmp
pop
pop
pop
push
fsubrl
mov
test
cmpb
adc
lahf
clc
movhps
xchg
mov
or
cmovbe
jb
testl
aas
sarb
sub
pop
mov
inc
movsb
std
orl
cmp
push
sbb
mov
aaa
jb
push
jg
mov
and
or
xchg
popl
jns
xchg
pop
add
mov
mov
sahf
sbb
notb
movq
mov
out
mov
or
por
inc
cltd
test
adc
and
mov
or
stos
inc
fidivrl
dec
add
cvtdq2ps
fwait
xor
cmpsl
jne
inc
cmp
jo
stos
nop
sbb
daa
push
loop
pcmpeqd
pop
sub
mov
jnp
lea
mov
mov
dec
fwait
jp
cmp
xchg
sbb
adc
movzbl
dec
jbe
adc
dec
fisttps
sysenter
movsb
xchg
push
mov
jmp
jae
inc
xor
jmp
dec
mov
sub
inc
sbb
insl
rclb
mulb
jno
out
mov
in
dec
movhlps
fimuls
add
sbb
push
mov
mov
xchg
andb
dec
xor
aad
cmovne
inc
inc
adc
test
dec
shrb
add
out
or
mov
xchg
dec
popf
pop
push
sbb
ss
mov
aad
jg
dec
jae
dec
xchg
lods
push
testl
mov
dec
xchg
bound
in
fbld
cmovbe
cli
aaa
jle
mov
dec
pop
add
out
or
jb
cld
pmullw
repnz
mov
adc
xor
inc
lds
mov
push
and
pop
imul
push
sqrtps
mov
inc
and
faddl
push
movsl
xlat
shrl
xor
xor
in
mov
js
loopne
xadd
mov
mov
fs
inc
pop
sysenter
pop
in
jbe
pop
inc
and
or
fwait
xchg
bnd
mov
iret
cmp
popf
loop
xor
dec
ja
cld
or
xor
lahf
cmp
imul
sti
psrld
daa
outsb
lods
push
sbb
outsl
les
pop
and
cld
rolb
es
or
and
sbb
xchg
clc
rcl
adc
and
cmp
in
xor
cmpsl
jno
adc
mov
push
mov
dec
sub
or
leave
scas
xchg
sub
inc
mov
imul
ret
mov
divb
jo
pop
in
mov
xchg
push
daa
imul
jmp
andb
fisttps
cld
push
fildl
mov
scas
cmp
cmpsb
xor
imul
ljmp
dec
dec
add
dec
mov
adc
nop
sarb
loop
scas
xchg
test
push
mov
lsl
sbb
arpl
dec
and
popa
mov
outsb
inc
jle
mov
lds
jle
shl
xor
mov
jp,pn
dec
sub
mov
das
xlat
icebp
pop
enter
lret
mov
mov
sub
pop
and
dec
or
add
int3
cmp
mov
fwait
adc
xor
add
mov
push
incb
fsubrl
lret
lock
mov
lds
push
in
je
mov
movswl
add
adc
aad
mov
or
test
in
sub
add
and
sbb
leave
adc
or
scas
ret
out
dec
daa
mov
cmp
pop
xor
xchg
cli
orl
mov
pop
out
je
repnz
dec
mov
mov
addr16
or
movsb
add
dec
mov
je
mov
adc
rcr
test
or
inc
jbe
movd
push
ljmp
add
push
or
jne
xchg
cltd
pusha
dec
jmp
push
test
dec
cmpsl
xor
int
mov
xchg
jnp
movaps
dec
mov
push
add
js
xor
and
dec
inc
js
pop
addb
sbb
inc
add
shll
mov
xchg
fisttpll
jb
das
in
shlb
inc
out
insb
in
test
repz
xchg
cwtl
call
into
test
imul
in
outsl
xchg
mov
jbe
add
mul
adcb
nop
std
fs
pop
push
cli
test
mov
adc
mov
and
jle
enter
popa
nop
mov
mov
loope
fwait
packuswb
xlat
mov
inc
and
lea
out
and
outsb
roll
scas
es
inc
aad
bound
add
mov
lods
pop
mov
add
dec
shlb
inc
popa
lret
out
add
in
shr
push
in
adc
sub
sbb
add
scas
test
cmp
rcrb
and
movsbl
pop
stc
sbb
push
and
jmp
mov
arpl
and
test
xchg
inc
dec
clc
inc
lods
je
leave
jg
iret
push
adc
addr16
xor
xor
adc
sub
xchg
lgs
aaa
sub
jmp
out
daa
scas
mov
loope
inc
mov
jns
sbb
and
jle
push
mov
jns
push
outsl
or
scas
inc
mov
jo
loope
pop
sub
xor
clc
mov
arpl
and
pop
push
fldl
jno
push
push
inc
or
sarl
shlb
nop
mov
js
hlt
lret
pop
movsb
sbb
or
mulb
xor
aaa
scas
add
mov
xor
leave
pusha
jbe
push
maskmovq
imull
pop
fwait
mov
lret
xadd
repnz
cmp
jmp
dec
pop
cmpb
adc
lcall
psrld
dec
cmp
in
sbb
lds
or
rcll
push
sub
adc
sub
cmp
sbb
lods
mov
mov
ja
addps
mov
pop
pop
inc
mov
inc
inc
mov
sub
sbb
and
pop
and
push
pop
mov
adc
push
imul
cwtl
fs
cmpl
loopne
pop
dec
mov
and
lret
mov
lahf
ret
lsl
mov
pop
mov
push
js
mov
movsl
xor
cmp
fs
jns
push
test
cmc
scas
xor
aas
incl
xchg
js
sbb
loopne
fisttpl
dec
inc
repnz
pop
add
stc
mov
mov
xchg
fisubrl
fcomps
iret
and
ds
adc
je
mov
jno
arpl
mov
hlt
insl
pusha
dec
sahf
repnz
setg
xor
stos
jp
sub
outsb
mov
ss
dec
fwait
repz
pop
divl
sbb
popa
cmpsl
mov
inc
adc
fcompl
xchg
mov
inc
divb
lds
loop
pop
int
and
dec
dec
sbb
xorl
adc
jp
adc
insl
add
shl
pop
movsl
minps
adcb
popf
dec
loopne
add
push
add
jl
pop
sub
cwtl
xor
fcmovne
out
jo
dec
adc
sub
sub
pop
pmulhw
mov
pop
ds
lahf
lgs
jne
adc
in
rclb
or
pusha
cmovl
lods
aaa
mov
sbb
dec
sbb
fstl
fdivrl
or
xor
xchg
sbb
fbstp
fldenv
push
mov
pop
lock
push
pcmpeqd
maxps
jg
js
lds
lret
inc
stos
xlat
cmp
es
xor
xchg
mov
packssdw
cmp
popf
lds
in
dec
rol
xchg
add
out
gs
getsec
lret
push
js
sbb
jecxz
shlb
xchg
jb
jl
xor
push
inc
lahf
dec
cs
pcmpeqd
je
clc
push
insl
jno
add
dec
add
push
jns
cmc
inc
shll
cs
push
ss
insb
mov
push
push
jle
fcomps
stc
xchg
jo
xor
es
filds
loop
dec
scas
into
int
mov
mov
gs
adcb
popa
loope
psubsb
fwait
cmpsb
mov
push
xchg
jp
sarb
packssdw
sub
add
jae
xchg
iret
repnz
das
ret
pop
cmp
push
adc
cmp
cld
pop
lea
dec
and
loope
push
sub
bound
in
inc
das
mov
push
or
adc
pop
xchg
jno
xor
jne
mov
inc
bound
insb
orl
adc
mov
cwtl
mov
rcr
leave
sub
sub
setg
rolb
stc
cmpsb
pop
out
std
les
jg
jae
pop
push
mov
push
lock
ss
sbb
lret
aaa
pop
stos
adc
arpl
lret
xadd
pop
xor
popa
mov
mov
sub
sti
in
negb
aaa
cmp
ja
syscall
or
push
dec
xor
lret
cvtpi2ps
mov
clc
loop
test
mov
mov
inc
rdtsc
sub
dec
setg
in
xchg
cmp
decb
xor
clc
aad
cli
pop
lahf
push
xlat
imul
inc
xor
sbbl
mov
add
dec
push
push
cltd
add
push
sbb
or
xor
inc
mov
pmaddwd
ds
lcall
icebp
inc
mov
jbe
and
mov
xchg
ret
mov
outsl
ss
sysret
fs
jecxz
push
test
pop
sub
inc
fisttps
xorl
out
shlb
jne
pushf
cmp
sbb
or
dec
xlat
and
mov
outsl
insb
mov
fadds
jb
sarb
or
xor
xlat
dec
aam
cmp
fisttps
xchg
rcrb
adc
mov
idivl
ds
add
stos
push
fs
lods
inc
xor
add
push
test
movsb
xchg
add
push
xor
sbb
cld
push
lods
movsb
xor
nopl
and
push
imul
inc
setnp
add
mov
scas
xchg
fincstp
inc
mov
jb
dec
sub
orps
and
popf
jbe
imul
sub
mov
xchg
mov
dec
leave
fcoml
jbe
and
xadd
cwtl
lret
cmp
pop
lret
aad
pusha
shlb
iret
insb
in
sti
adc
test
inc
das
sub
jmp
aam
shrl
fldt
sahf
mov
int
popa
mov
sub
pop
sbb
adc
adc
outsb
hlt
scas
js
xor
and
xor
xor
sub
bound
dec
sub
das
push
sbb
and
lcall
loopne
iret
or
call
cmpsb
aad
pop
push
shll
stos
cmpsb
sub
loopne
mov
rclb
fidivs
mov
lret
inc
arpl
push
add
scas
cmpsl
pop
sbb
inc
popa
pop
push
inc
js
mov
mov
out
rcll
jo
push
inc
adc
lahf
in
push
sub
jbe
xchg
sarl
or
push
add
sbb
mov
sub
mov
inc
ljmp
push
andb
ja
and
cmpsb
cmp
sub
lods
sub
sbb
mov
arpl
xor
scas
inc
aas
mov
mov
movsb
mov
adc
call
in
jae
inc
adc
filds
cs
test
das
ja
mov
adc
repz
dec
cmp
movswl
add
aaa
mov
jg
and
jge
fcmovu
fmuls
daa
jecxz
push
test
dec
dec
push
jns
fs
push
dec
data16
test
cmova
sbb
shrd
popf
xor
repz
xchg
mov
xchg
mov
fstpt
and
push
dec
and
cmpsb
mov
and
jmp
arpl
cmp
and
stos
adc
rdtsc
dec
arpl
mov
mov
loope
lret
cmp
das
push
fbld
xchg
mov
jg
jp
pop
lret
or
sub
inc
inc
xor
xorb
loope
cmpsl
mov
sub
aad
sarb
fsubrs
mov
mov
lods
aaa
cmp
sbb
jne
mov
and
out
push
imul
scas
xor
push
push
inc
push
xlat
das
fld
dec
push
mov
jmp
cmovno
inc
scas
and
maxps
sbb
cmp
es
and
inc
jmp
and
insl
arpl
cmp
ss
and
adc
leave
inc
cwtl
xor
sbb
mov
dec
es
fisttps
mov
xor
mov
or
add
ror
sub
or
cmpsl
paddusw
call
pop
lret
jmp
orb
fisubl
lods
push
inc
xchg
ss
and
ja
sbb
dec
xor
mov
xor
ljmp
sbb
test
pop
fwait
loopne
jmp
outsl
sub
or
xchg
aas
repnz
adc
adc
push
fsubrs
mulb
xchg
xor
fidivrs
loop
ljmp
cli
adc
call
inc
add
or
push
mov
push
icebp
pop
insb
ljmp
xchg
sub
push
cmpl
jmp
dec
or
or
lret
outsb
call
adc
jbe
dec
aaa
sti
into
sahf
or
sub
fiaddl
out
mov
push
sbb
insl
cld
or
test
fdivl
cli
lods
cld
fisttpll
cmc
adc
mov
mov
cmp
push
add
cmp
or
call
cli
or
pusha
pop
jmp
mov
cmpsl
rolb
mov
enter
mov
and
inc
mov
cmp
adc
jns
sbb
or
pop
cmp
repnz
mov
imul
std
mov
xlat
mov
mov
in
stc
mov
sbb
jae
pop
push
aam
mov
sti
mov
fnstcw
pushf
cmp
inc
push
in
mov
mov
adc
mov
cli
icebp
cli
push
lods
test
negl
push
movsl
mov
scas
cld
add
repnz
data16
test
lret
mov
fwait
mov
mov
add
mov
cmp
add
popf
jb
sahf
fidivrl
addr16
pop
int3
or
pop
or
cmc
sbb
cld
mov
hlt
adc
negl
scas
xchg
push
loop
inc
fwait
sbb
test
fdivr
out
jbe
inc
out
out
jbe
add
mov
es
dec
int3
xlat
or
xchg
shrb
mov
pop
sbb
jmp
iret
addb
push
and
mov
sub
mov
and
and
lret
add
adc
icebp
adc
xchg
jb
sbb
or
xchg
lea
lahf
mov
arpl
ret
xchg
jl
cwtl
int3
mov
adc
adc
adc
adc
fwait
adc
xlat
in
js
mov
andb
mov
lods
pop
sub
sahf
xlat
mov
fwait
lock
addr16
push
stos
outsl
mov
stos
mov
loope
loop
lock
and
stos
push
mov
sahf
repnz
das
arpl
sbb
sbb
fst
loop
mov
movsb
pushf
in
adc
mov
jmp
adc
mov
divb
mov
inc
add
sbb
out
lcall
lret
pusha
out
stos
push
mov
push
fstpt
cmc
fsubr
stos
test
jno
push
cmpsl
scas
xorb
imul
in
stc
into
fmul
push
mov
or
lret
out
or
lock
int
fwait
movsl
mov
ds
data16
mov
dec
in
das
js
cwtl
xor
leave
repnz
into
mov
mov
ret
lods
pop
jmp
ja
and
add
ljmp
cmc
xor
pop
push
sub
mov
push
push
lock
es
fcompl
test
cmpsl
repnz
in
cld
mov
jmp
lods
fucom
out
rolb
loop
ret
mov
lret
aas
cmp
fcmovnu
loop
cltd
add
adc
loope
fdivrl
push
and
icebp
stos
mov
mov
xchg
xchg
test
xor
xchg
cmp
push
pop
movsb
ljmp
cli
pushf
movsl
loopne
jne
mov
cwtl
outsb
fldenv
adc
in
mov
ret
push
loope
jmp
cmp
sub
mov
test
nop
xlat
lret
negb
cmpsb
lret
lds
cli
leave
cmp
loopne
mov
or
jecxz
divb
imul
dec
xor
sbb
into
sbb
mov
in
ljmp
push
mov
hlt
xchg
in
aad
scas
rep
in
es
in
or
nop
in
out
scas
in
mov
jge
pop
jae
cwtl
sbb
pop
mov
aad
negl
xchg
lret
stos
test
fnstcw
add
adc
int3
lea
aad
frstor
and
rcrl
push
cmp
mov
fwait
sbb
in
jl
mov
orb
out
mov
jecxz
insb
adc
out
cli
pop
fistpl
rorl
stc
imul
imul
cmp
pop
cmc
cmpsl
dec
outsl
inc
add
rolb
adc
lret
or
repnz
sbb
lahf
cmc
popf
pop
mov
into
neg
insb
ljmp
sbb
pop
sbb
or
or
push
out
out
aas
pop
jmp
or
or
push
pop
mov
mov
sbb
jmp
xor
pop
loope
cli
rcr
jmp
sbb
out
fisttpl
mov
lods
jge
lret
insl
pop
and
clc
ficomps
maskmovq
imull
jl
bswap
mov
xlat
stos
mov
add
sbb
jnp
imul
cmp
stc
ljmp
in
lahf
out
sub
fwait
shll
test
inc
mov
sub
mov
pop
inc
scas
out
sub
ret
mov
mov
cmp
cld
and
and
sti
pop
sub
paddusb
jmp
jge
mov
sbb
pop
out
jne
lret
pushf
and
sub
mov
stos
into
nopl
fisttpll
mov
notl
mov
mov
cltd
js
or
outsb
pop
inc
jns
mov
xor
xlat
cmc
mov
shlb
stos
lcall
cmp
jmp
xchg
jne
xor
aam
mov
xchg
test
push
inc
xor
data16
pmuludq
inc
decl
add
xchg
adc
insl
ja
mov
fnsave
lahf
push
inc
add
sub
call
and
pop
add
cmp
jle
insb
sbb
adc
pop
dec
jns
jbe
sbb
mov
sarl
cmpsl
xchg
cmovae
popf
std
sub
wbinvd
movsb
cmp
sub
pavgw
pop
fcompl
ret
ret
and
mov
loope
das
push
xchg
cmp
leave
movsl
fimuls
sbb
mov
fdivrl
xchg
fsubs
cmpsb
jae
mov
js
lcall
fnsave
enter
jno
cmc
bound
dec
psrlw
sbb
adc
dec
jb
clc
cmpl
mov
xchg
inc
arpl
xlat
or
mov
cmp
leave
clc
lods
hlt
mov
cmpsb
xchg
loope
inc
out
loop
lret
ret
sti
ja
jmp
minps
inc
add
cmc
dec
testb
xchg
shrb
outsb
jge
cmpb
adc
stc
std
sub
and
or
adc
xor
testb
rclb
add
cwtl
btc
push
enter
and
ljmp
cli
pop
cmpsb
leave
bsr
mov
cs
scas
jne
ss
psllq
push
loop
fisttpll
dec
and
sbb
loopne
adc
sub
rorb
dec
sbb
cmp
sub
imul
push
mov
lds
pop
or
test
ret
xchg
out
setl
jmp
fs
inc
paddsb
iret
test
jg
stos
insb
ret
pusha
mov
or
adc
xchg
cmp
xor
mov
inc
sbb
std
pop
jno
shl
mov
paddb
mov
cmc
aam
or
cmpsb
add
push
push
and
ud1
inc
movswl
in
xor
pop
mov
jns
ds
loopne
ror
push
mov
fwait
inc
and
mov
loope
jns
jp
xchg
or
xchg
or
or
mov
pop
cmp
jne
mov
mov
in
in
jae
sbb
mov
movsl
shrl
xchg
xor
pop
inc
or
cmp
loope
xchg
mov
ja
vmread
xchg
mov
fwait
xchg
push
arpl
adc
adc
inc
mov
leave
or
and
xchg
adc
mov
imul
lcall
adc
jmp
aaa
push
cmp
dec
femms
add
jbe
xlat
ja
jle
or
dec
push
xor
adc
mov
dec
int3
movsl
adc
mov
ficoml
inc
stos
add
or
test
pushf
inc
sub
and
xchg
fdivrl
outsl
repnz
mov
in
js
and
add
psrlq
lcall
sbb
cltd
cmpsb
paddusw
rcll
mov
fisubrl
movq
push
mov
arpl
in
adc
or
movb
push
aam
bound
iret
sub
or
push
cld
fnstsw
cmovo
push
pushf
test
xchg
xchg
mov
xor
push
mov
fisttps
hlt
cmp
mov
hlt
outsl
dec
test
bound
xchg
clc
xchg
rdtsc
xor
insb
jl
shl
jmp
stc
pop
rdmsr
adc
orb
fmull
jmp
into
pavgb
xchg
mov
and
push
mov
mov
rorb
lret
push
hlt
out
fcoml
stos
adc
rcrl
les
xor
je
dec
mov
sbbl
imul
out
inc
pcmpeqd
movsl
lock
subl
movsb
test
pusha
lahf
or
test
or
loop
push
sbbl
int3
inc
xchg
push
xor
aaa
or
movsb
test
cmpsb
cltd
adc
ret
out
jmp
inc
icebp
dec
addr16
cs
jne
push
jno
adc
xchg
fisttps
mov
jbe
pop
aad
outsb
xchg
push
bsr
mov
pushf
cwtl
jno
and
add
ljmp
sub
enter
dec
movswl
pop
add
adc
mov
cmova
scas
insl
mov
jle
fistpll
ss
xchg
sbb
mov
movhps
push
jae
mov
jecxz
inc
push
or
cmpsb
xchg
push
mov
mov
adcb
lret
es
pop
push
or
mov
jb
adc
aas
cmpsl
lds
movd
shlb
testb
cwtl
imul
jecxz
fs
icebp
fbld
adc
pop
jg
aaa
inc
pusha
inc
pxor
dec
and
mov
movsb
es
sbb
je
sub
sahf
outsl
bswap
in
imul
sbb
xchg
hlt
dec
jl
inc
pcmpgtw
out
lret
setns
or
mov
sbb
aas
mov
ret
setno
arpl
push
jo
js
int3
fidivs
cmp
sub
lahf
mulps
je
orl
notb
insb
pop
test
loopne
minps
cwtl
js
add
pcmpeqd
pop
sub
cmpsl
cmc
cmp
mov
jno
lea
sbb
sub
ret
xor
inc
mov
mov
dec
movzwl
iret
orb
xlat
js
in
out
cmovle
insb
rclb
or
add
xchg
xor
xor
xchg
imul
sub
dec
and
ret
cs
cmp
adc
or
rolb
and
out
popa
repnz
mov
insb
mov
mov
jae
or
push
shll
adc
ret
cmp
pop
xor
inc
inc
push
sbb
xchg
mov
xlat
xor
fs
insb
sbb
inc
inc
shll
jmp
jg
fmull
ficompl
pushf
lods
jp
adc
stc
cwtl
insl
and
push
and
pop
pusha
inc
pavgw
lock
popa
ds
inc
dec
in
mov
or
mov
sahf
cmpsl
ja
movsb
sub
add
ss
daa
mov
shr
clc
dec
jns
xorps
cmp
or
xor
inc
mov
pop
notl
rcr
sysret
cmp
sar
inc
push
or
icebp
mov
lret
push
jne
sbb
mov
lods
movsb
adc
jbe
lods
loope
jl
ds
lahf
push
js
orl
mov
in
cmpsl
mov
stos
mov
imul
add
fs
or
std
loopne
js
stc
fsubl
imul
mov
jb
out
mov
out
mov
imul
push
add
orl
out
lods
jno
subl
popa
jmp
sbb
push
pop
xor
mov
imul
add
ljmp
scas
nop
in
sbb
mov
adc
lds
hlt
or
xor
pop
xor
jmp
mov
repz
pop
scas
dec
mov
inc
in
xor
iret
push
jecxz
mov
in
mov
adc
xor
por
add
pop
mov
push
mov
repz
ss
add
mov
push
push
xlat
dec
mov
scas
mov
sbb
repnz
jmp
sbb
das
mov
mov
sbb
dec
pop
mov
jno
and
imul
xor
cmpsb
int3
nopl
test
insl
lea
call
sub
adc
cmovp
or
cs
mov
inc
or
xor
psadbw
loop
add
or
roll
mov
xlat
sbb
push
sub
cmpsb
cs
sahf
mov
adc
rcll
xorl
icebp
add
dec
inc
mov
or
push
jge
push
push
inc
adc
mov
and
pop
sub
addr16
enter
out
mulps
sbb
outsl
inc
cmp
psubd
mov
push
adc
push
sub
unpckhps
add
push
fs
movhps
jb
setbe
sbb
push
out
mov
adcl
push
nop
cmp
paddsw
add
or
push
mov
sarl
shl
scas
pushf
es
push
sub
cld
push
call
jl
mov
mov
out
lds
and
and
lcallw
shrb
ds
pcmpeqw
inc
cmp
ss
loopne
lods
sub
cld
bswap
adc
or
mov
cmpb
push
and
jbe
rorb
mov
icebp
outsb
fmuls
sarl
jmp
pcmpgtb
cli
in
or
sbb
icebp
pop
pop
ret
add
xor
outsl
je
dec
movsb
sbb
jne
push
test
push
pop
sti
ljmp
arpl
cs
jecxz
out
cmp
mov
fs
adc
fwait
push
or
out
and
rolb
pusha
arpl
cmpsl
push
rol
lods
movsl
psrlw
call
std
pandn
leave
or
xlat
pop
and
xor
lea
pmaddwd
cmp
mov
xorl
cmp
mov
enter
shlb
or
cmp
adc
ds
fdivl
xchg
lahf
xor
aaa
sub
ja
test
aam
out
in
into
jge
jp
cmovle
xor
out
verw
shrl
inc
rolb
sbb
jno
cmp
sahf
push
call
pushf
add
loop
xor
cmpsl
aas
scas
cmp
aad
jae
nop
cld
test
rcr
sbb
push
cmp
jne
ficompl
push
enter
std
pop
pusha
jmp
cli
ffreep
dec
mov
ret
mulps
out
adc
push
adc
test
pop
xchg
mov
testl
inc
cwtl
stos
cmp
adc
push
dec
scas
sbb
rcr
jl
push
cs
or
adc
repnz
les
call
rol
jge
fimuls
inc
cli
shlb
scas
btr
ss
pop
inc
imulb
push
mov
mov
cmp
and
jo
xor
and
mov
xchg
cmpsb
sub
dec
sub
leave
mov
ss
pop
jns
scas
mov
adc
test
add
out
dec
push
sbb
lock
inc
cvtps2pi
clc
ret
mov
mov
rolb
pminsw
xchg
stos
adc
movsl
test
addr16
push
and
push
cmp
out
pop
out
jb
jno
cmc
mov
pop
packuswb
repnz
pop
das
and
orb
push
adc
repz
fsubl
cmpps
mov
test
das
call
inc
xchg
pushf
push
pop
jnp
ret
pmulhw
out
cmpxchg
ds
cmp
adc
xchg
xor
sub
jge
pop
pavgb
in
stos
nop
adc
dec
push
sub
jmp
jno
sub
movsl
int
cmp
jnp
jnp
jp
orb
jmp
out
pop
mov
mov
pop
mov
adc
les
mov
stc
push
cmpsl
push
pmaddwd
fdivs
mov
push
clts
mov
mov
das
xchg
jp
jbe
je
jne,pt
jge
fstps
pushf
mov
cmc
jle
or
lock
lcall
inc
mov
push
or
cvtps2pi
sti
inc
cwtl
mov
clc
push
inc
jge
cmp
lcall
mov
jae
cvtpi2ps
aas
jecxz
jge
mov
add
push
mov
mov
test
cltd
or
push
sbb
les
dec
popf
lock
sbb
orl
inc
and
bswap
add
push
imul
mov
subl
push
jg
out
sbb
mov
cmpsb
add
data16
xor
jl
inc
das
stc
mov
into
aad
jmp
or
rep
jno
lret
mov
cmc
sbb
sbb
xlat
filds
pop
out
inc
adc
jae
add
adc
filds
add
add
movsb
movsl
sub
nop
aad
mov
or
inc
sub
and
mov
dec
ret
aam
mov
ljmp
inc
fwait
popa
xchg
imul
sub
push
psrlw
cwtl
adc
lods
popa
and
push
and
push
cmp
xchg
ss
pop
adcb
mov
divb
adc
outsl
push
lahf
push
lock
bnd
cli
ss
push
imul
loopne
aad
arpl
sub
cmpb
add
iret
mov
sub
pavgb
gs
jmp
mov
pusha
stc
leave
push
hlt
mov
add
mov
push
stos
mov
lahf
mov
fwait
cmp
inc
add
insl
dec
aaa
mov
pop
xchg
addb
sub
shlb
in
psrlq
mov
dec
daa
mov
aam
inc
adc
pmulhuw
push
out
test
cltd
cwtl
inc
jle
and
icebp
aam
sbb
popa
stc
test
maxps
scas
mov
add
sti
or
out
mov
inc
inc
les
bswap
adc
inc
bswap
fsubp
fstpl
jo
pmaxsw
mov
sbb
and
insb
nop
add
sub
add
call
jno
cwtl
test
push
inc
movups
sub
add
stc
push
mov
imul
std
and
mov
scas
inc
pop
jle
cltd
ret
add
push
sub
aas
jnp
mov
lahf
repz
sahf
es
mov
cvtps2pd
lret
push
cmp
fcoml
pavgb
and
in
pop
les
cmc
fldenv
cmp
outsb
setbe
xchg
movsl
pop
ds
or
shr
cmp
cld
sub
lret
clts
jmp
in
rcrl
pop
test
cli
push
stos
lret
fmul
push
outsb
add
mov
or
inc
paddq
stos
mov
add
movsl
sbb
rcrl
push
lods
mov
test
rcrl
das
jae
out
push
sbb
adc
movsl
sub
or
pop
lea
xor
adc
sub
sub
stc
jns
xor
and
mov
mov
or
add
fbstp
popa
inc
loopne
push
lahf
mov
sbb
in
addb
scas
jmp
nopl
fs
inc
cmp
test
and
jecxz
and
sub
inc
jp
test
mov
dec
cmp
out
and
sbb
push
mov
jl
cmc
add
fcompl
hlt
iret
xor
mov
ja
test
das
or
sbb
repnz
jmp
push
mov
fimull
movq
leave
es
int
xor
xchg
rcrb
fidivl
and
push
mov
mov
call
cwtl
cmpsb
xchg
sbb
adc
and
bound
push
lea
push
maskmovq
idivl
push
mov
xor
jcxz
rolb
adc
cli
mov
popa
mov
mov
movzbl
clc
cli
adc
pushl
inc
adc
outsl
dec
xor
mov
subps
add
negl
cmp
aas
je
lcall
mov
bsr
cmpsl
push
adc
mov
and
push
push
pusha
sub
fisttpl
scas
jnp
xor
jmp
in
insb
ret
mov
imul
cli
xchg
movsl
or
jmp
jg
pop
aad
idivb
outsb
out
mov
bswap
lahf
clc
imull
add
pop
jne
loop
jnp
and
jns
adc
push
movsl
cld
rolb
xchg
dec
inc
xlat
paddusw
les
mov
cli
xor
cmp
inc
adc
rcl
das
mov
ja
addps
xchg
nop
bswap
jmp
jb
je
ds
repz
mov
mov
cmpsl
adc
cli
mov
loopne
add
xor
daa
in
scas
jp
cmc
nop
cmovnp
hlt
add
jnp
or
push
pushf
inc
loop
mov
mov
xor
arpl
fs
cs
repz
pop
jno
cwtl
cvtps2pi
mov
adc
push
scas
test
jle
sbb
cs
xchg
mov
xchg
ret
inc
xor
cmpsl
sub
push
adc
addr16
push
xchg
mov
cld
bswap
jge
pushf
lahf
mov
sahf
cld
in
mov
or
mov
sbb
adc
xor
and
push
jmp
fs
jae
outsl
jp
insl
clc
xchg
ds
lret
ja
jg
imul
xchg
les
mov
adc
mov
xor
scas
outsl
ljmp
lret
std
push
das
enterw
je
push
mov
movsb
xor
nop
jmp
dec
lahf
mov
adc
in
dec
inc
movsl
lahf
jle
addr16
mov
mov
adc
pop
jmp
fisttpl
lods
adc
and
xor
inc
shll
in
scas
iret
mov
jl
lret
sti
cmp
add
mov
sbb
es
popa
repnz
outsb
jnp
loopne
lahf
xchg
aas
fsubrl
movsl
sbb
jg
mov
int
adc
loope
xchg
ud1
jmp
sub
push
mov
mov
lds
pmovmskb
xchg
iret
jo
push
push
add
mov
push
mov
int3
inc
lgs
jnp
sub
wbinvd
out
movsl
and
jecxz
add
mov
rcrl
inc
mov
pop
mov
cmp
push
xchg
push
out
call
pop
mov
jecxz
mov
mov
dec
push
mov
push
xor
mov
push
iret
lahf
adc
icebp
pusha
orl
cmp
xlat
loopne
add
add
test
ror
add
bound
sbb
push
mov
adc
daa
in
pop
adc
and
xchg
cmc
sbb
xchg
je
or
pop
sahf
xchg
pmaxsw
insl
sub
cmp
sbb
mov
imulb
ljmp
orb
add
loop
adc
adc
cmc
data16
mov
push
mov
ss
test
pop
inc
pop
xchg
lea
cmpl
add
testb
add
loope
rcrb
push
jecxz
sub
pop
notb
aas
call
jmp
prefetch
scas
adc
mov
aaa
sub
pop
mov
pxor
push
jns
aam
sbb
jne
adc
xor
sbb
std
mov
mov
or
je
and
lods
jb
pop
sbb
dec
pop
mov
fistps
pop
imul
lahf
jae
iret
rorl
lret
mov
cld
ret
add
bt
mov
cmp
pusha
mov
addr16
xchg
pop
sahf
lret
jbe
lret
push
repnz
pop
mov
push
push
inc
inc
xchg
xchg
push
adc
mov
repnz
pop
fisttps
cs
shlb
stos
inc
das
jecxz
in
lea
mov
cwtl
push
and
adc
jae
mov
mov
jne
adc
inc
sahf
xchg
dec
and
out
lahf
daa
dec
xor
cmc
sbb
insb
dec
cld
mov
inc
sbb
xchg
dec
and
adc
adc
cmp
sub
mov
add
ret
or
mov
shr
jno,pt
mov
fdivs
lea
push
inc
pop
pop
loopne
mov
popl
dec
rorb
sub
int
dec
xor
punpckhwd
addr16
pop
outsb
clc
xchg
adc
cmpb
xlat
xchg
jb
cmp
comiss
jmp
add
fcmovnu
push
xor
stos
stos
mov
adc
mov
push
popf
dec
inc
and
pop
inc
insl
nop
dec
fnstsw
mov
jmp
or
mov
adc
or
adc
and
or
push
and
inc
jecxz
jae
addr16
mov
sahf
inc
pop
cltd
mov
pavgw
loope
cld
sbb
cmp
cwtl
inc
and
mov
mov
into
fsubrl
push
fcmovbe
jmp
loopne
push
push
pop
int
ds
or
xor
and
daa
mov
inc
frstor
inc
cmp
mov
fwait
sti
in
mov
jg
leave
mov
inc
adc
pop
and
es
adc
push
mov
jge
adc
jmp
shll
fidivrs
push
jl
shlb
jp
mov
dec
adc
ss
enter
push
popa
gs
cld
das
out
and
idivb
push
cmp
sub
add
xchg
ljmp
jl
btr
arpl
aas
inc
inc
push
insb
xor
jle
stc
imul
push
shrb
cmp
xor
mov
js
adc
mov
push
inc
rsm
mov
adcb
lock
pop
sbb
pop
lods
bound
sti
and
movswl
cmp
in
sarb
iret
fsubrp
or
movups
pushf
push
wrmsr
cmp
mov
out
cs
or
xchg
jb
cmp
push
add
addps
and
stos
xlat
push
dec
data16
cli
adc
add
or
sarb
fidivrl
rcll
sbbl
and
xchg
je
jns
inc
cmpsb
mov
mov
out
ret
cmovge
into
push
sub
das
and
mov
setle
mov
pcmpeqw
and
fcmovb
decl
push
mov
and
sub
lcall
cmp
jl
xchg
cmp
add
add
rcrl
mov
xchg
mov
sub
orl
jge
hlt
push
mov
xchg
adc
xlat
lds
inc
out
ret
pop
mov
cmpsb
adcl
cmc
clc
jecxz
inc
add
jo
mov
test
pop
in
dec
xchg
inc
gs
jmp
loopne
vmread
je
int
int3
adc
in
push
fidivl
dec
mov
in
push
mov
add
lret
inc
cs
bnd
enter
cmp
cmovo
out
jo
or
ja
jge
call
fnstcw
jb
push
or
mov
adc
push
es
fisubrl
pushf
xor
add
pop
rol
rorl
sub
mov
orb
lret
mov
lock
les
es
ret
mov
push
aad
push
jns
xchg
out
mov
push
call
or
mov
movsl
paddsw
je
fstpl
inc
aam
mov
iret
leave
push
mov
ficomps
imul
push
pop
jo
ud1
popa
and
or
inc
ret
xor
push
arpl
pop
jle
int3
add
and
push
dec
mov
sbb
add
xchg
lret
mov
jb
adc
jg
and
mov
push
lods
jb
out
and
fdecstp
xchg
loopne
dec
in
jecxz
dec
mov
int
iret
cmp
mov
out
adc
xor
dec
inc
stc
push
mov
jp
aad
in
mov
xchg
bsf
mov
or
push
xorb
jbe
adc
sbb
inc
mov
pop
shlb
rcrb
pushf
punpcklbw
loopne
orb
xchg
std
adc
movsb
adc
unpckhps
out
mov
shl
repnz
adc
not
push
nop
out
in
pop
test
mov
rcr
pop
popa
mov
cld
mov
movaps
and
cmovno
jnp
mov
movsb
adc
inc
subl
dec
clc
fcomi
jecxz
sbb
fucomp
in
jb
ret
iret
or
hlt
dec
aaa
test
sub
xor
cmove
pop
enter
lea
sub
xor
add
push
or
xchg
push
and
mov
sub
paddw
push
mov
inc
arpl
or
movntps
lahf
decb
loope
sti
into
inc
cmp
jno
jp
ret
jbe
insb
adc
nop
ja
mov
sbb
mov
clts
repz
xchg
out
and
cmp
jb
mov
call
pop
jl
push
mov
lret
xadd
insl
mov
adc
hlt
push
and
or
inc
mov
adc
jbe
mov
mov
iret
rcpps
jae
sub
sbb
mov
rorl
sahf
mov
or
mov
jp
mov
pmaxub
push
adc
sbb
mov
dec
setbe
loopne
subb
inc
jmp
das
lret
fwait
daa
xor
setg
iret
add
sub
add
mov
inc
or
xchg
push
inc
pop
dec
or
lods
bound
bswap
sbb
js
bswap
sub
movsl
hlt
data16
jecxz
inc
lea
repnz
rcrl
fcomi
mov
dec
fwait
mov
arpl
dec
mulb
sbb
and
ja
aad
fldl2e
xchg
inc
test
fcomip
insb
jo
fsubs
push
mov
dec
push
daa
and
adc
out
inc
jbe
pop
jns
cmpsl
mov
sub
pop
pop
test
lret
and
cli
dec
mov
js
or
frndint
xchg
pusha
les
jge
ljmp
lsl
mov
cmovle
loop
lahf
and
cs
fistpll
pop
adc
xor
mov
out
test
lea
sub
mov
aam
push
movd
inc
inc
sub
inc
lret
mov
pop
xor
sbb
mov
imul
loopew
or
jns
ds
cld
fcmove
mov
or
pop
cmpxchg
insb
push
or
lahf
adc
inc
jo
call
cmp
sbb
enter
les
daa
mov
out
rorb
sub
pusha
inc
gs
dec
pop
pand
mov
fisubs
xchg
adc
sub
cli
sbb
adc
mov
mov
dec
pop
das
shrb
rcr
cmc
bndldx
stos
and
pusha
daa
push
mov
and
lds
push
xlat
jge
lret
xor
adcb
jp
add
aam
add
sahf
out
inc
aas
pop
ret
js
bound
movsl
enter
mov
jnp
sbb
add
xor
insb
pop
cmp
pop
push
je
mov
mov
ret
imul
jns
test
inc
mov
lret
daa
pushf
movups
jbe
sbb
cmc
jnp
ds
or
add
pop
mov
cld
imul
push
sub
fwait
adc
jmp
jbe
cwtl
or
rcrb
jnp
mov
stos
in
pcmpeqd
xor
inc
mov
outsb
out
rcrl
mov
popa
popf
lock
int3
bound
or
inc
xor
mov
and
xchg
out
or
sub
xor
jo
addr16
andnps
rcrb
imul
int3
pop
cmc
lods
seto
ret
popa
out
orb
push
sysret
push
cmpsl
leave
sbb
jb
clc
cli
xlat
icebp
jmp
and
adc
inc
stos
lret
mov
and
addr16
sub
ret
pop
pop
push
sbb
sahf
jg
movsl
sarb
rcrl
xor
inc
xchg
repz
push
clc
add
xadd
inc
inc
mov
xor
jo
mov
pop
repz
pop
loope
mov
test
dec
xchg
xadd
out
add
nop
dec
cs
fisubrl
rorb
push
sbb
cmpl
rcrl
stos
pop
xchg
syscall
je
stos
mov
movsb
cmc
arpl
inc
test
shufpd
call
femms
fcoms
mov
cmp
dec
movhps
mov
pop
aas
jge
sbb
and
jmp
sub
pmulhuw
jns
rcl
jno
adc
and
xchg
or
mov
dec
repnz
push
cwtl
adc
mov
setl
cmp
mov
xchg
dec
jge
push
aad
negb
inc
adc
add
or
ljmp
lods
fwait
push
sub
enter
jge
sbb
adc
sysexit
arpl
ret
lar
push
mov
or
add
aas
andl
or
sub
cmp
btc
inc
jnp
int
adc
insl
push
cmp
shll
cmc
shr
cld
add
adc
mulb
inc
sbb
int3
roll
inc
rcr
mov
ljmp
stos
mov
insl
jnp
xchg
outsl
gs
orl
call
cwtl
xchg
mov
mov
shll
imul
data16
mov
xlat
pop
mov
jns
xor
and
ds
lret
pop
sbb
imulb
std
out
and
push
pop
popf
dec
inc
int3
es
ret
dec
aaa
cmpsb
sub
mov
jno
jnp
movsb
inc
cmovl
hlt
repz
dec
adc
fsubrs
mov
loop
fistps
addr16
mov
sarl
lock
xchg
lds
xchg
cwtl
bswap
pop
xor
movsbl
ret
lret
pand
in
test
rclb
jle
lods
out
add
lret
or
movq
test
in
iret
verw
insb
fiaddl
insl
add
mov
lcall
jmp
mov
setae
mov
jns
aaa
dec
mov
xor
out
push
jnp
sub
mov
popf
xor
dec
ss
xchg
xchg
xor
into
in
xchg
movsb
jbe
out
icebp
mov
jl
push
rorb
mov
cmp
jno
cmpsl
mov
arpl
wbinvd
fisttpll
fwait
iret
adc
sub
in
inc
daa
or
jmp
inc
sarb
and
scas
dec
mov
mov
seto
arpl
fsubrs
push
pmuludq
mov
lret
push
pcmpeqd
or
psubq
sbb
cs
shlb
jecxz
cld
add
mov
mov
xorps
xor
pop
movsl
movswl
add
jnp
out
dec
insl
push
aaa
punpckhbw
inc
jle
fucomi
shlb
fdivp
push
subps
xor
movzbl
inc
pop
cmpsl
or
stos
add
int3
lock
das
out
adc
cmp
mov
inc
leave
sti
adc
repz
test
scas
push
pop
or
pshufw
xor
mov
int
mov
nop
punpckldq
inc
ja
cmpsl
test
mov
adc
xor
jmp
mov
sbb
ret
je
mov
aad
daa
cmovnp
lahf
mov
push
push
mov
cmp
mov
xchg
push
int3
test
adc
jp
faddl
adc
sahf
xchg
xor
cmp
mov
cmp
mov
inc
mov
xchg
pop
sub
dec
sbb
lret
mov
mov
mov
lcall
stos
outsb
fwait
and
pop
hlt
mov
pop
fstl
jno
ja
and
push
rep
mov
cmp
pop
fnstsw
jbe
inc
and
fs
ret
mov
pop
sub
popa
cli
jno
inc
gs
cmp
in
bswap
rol
scas
sbbb
push
mov
daa
lock
data16
dec
mov
cmp
mov
mov
sti
xor
movsb
cmpsb
and
add
jmp
lret
push
dec
nopl
icebp
xchg
sbb
rdpmc
cmc
push
xor
xchg
bswap
mov
pop
mov
sbb
xor
pslld
sahf
lahf
std
cmp
mov
add
or
mov
and
sub
wbinvd
cmp
dec
sub
in
pop
cmova
xor
xchg
roll
and
clc
lea
or
add
mov
lahf
xchg
sub
jae
lods
jmp
jl
sahf
mov
xchg
pop
mov
xor
or
cmp
iret
sti
fstl
paddq
sub
mov
cli
emms
pop
ficoml
sbb
and
mov
lods
push
inc
repnz
jns
testl
xchg
sub
fcmove
push
mov
inc
sbb
aas
jbe
add
movsb
test
lock
push
dec
fld
imul
bound
sbb
mov
dec
cmp
push
psubsb
pop
cltd
sar
ret
cwtl
movsl
xchg
dec
les
movsl
insl
xchg
sbb
pop
mov
lahf
push
je
das
inc
lods
push
ret
in
cmovnp
stos
orb
bswap
pop
jae
add
push
jmp
lock
and
scas
test
lods
inc
add
mov
xor
pmullw
xchg
inc
inc
mov
sbb
push
das
mov
xor
sahf
lret
sbb
inc
gs
lcall
repnz
ds
icebp
xchg
and
xor
xchg
scas
push
pusha
aas
idivb
ds
add
cld
adc
bound
jo
cmp
or
and
push
cmpsl
xor
mov
sbb
xchg
ljmp
push
cmpsb
xor
test
cmpsl
scas
sub
inc
xchg
in
xchg
das
push
shrl
push
aad
pop
call
xor
mov
xchg
mulb
xor
lret
imul
imul
in
xchg
aam
mov
ss
bound
ud0
loop
push
int
ret
movlhps
hlt
ljmp
cmpb
push
lock
pushf
mov
rcll
fwait
out
or
cltd
pop
push
add
ret
int3
loop
add
inc
shlb
dec
scas
jo
outsl
and
xor
inc
aaa
inc
insb
xor
aad
cmp
pop
add
mov
inc
mov
ucomiss
fldt
dec
cld
pop
jne
sub
and
xor
lods
loop
repnz
or
in
sbb
xchg
pop
dec
addps
daa
lcall
in
jp
sbbl
pushf
call
ds
in
mov
add
loopne
ret
pop
out
icebp
fs
cmpxchg
cmpsb
mov
inc
aas
mov
mov
jae
repz
xchg
rcrb
xor
fs
pop
bound
and
push
jle
cs
insb
je
js
fcoms
gs
stos
mov
addr16
jo
pop
cmp
enter
xor
xor
imul
packsswb
pushf
popa
inc
test
xor
shll
into
or
or
enter
sbb
popf
nop
inc
pop
xor
xor
inc
or
add
pop
mov
scas
dec
jb
enter
sbb
mov
add
les
push
adc
hlt
bswap
lods
inc
push
cmp
stos
inc
lcall
cwtl
dec
pop
cmpxchg
and
jbe
out
lock
es
xor
lret
aad
and
sbb
mov
dec
pop
pop
movsl
or
cmova
fisubs
xchg
adc
in
inc
add
xchg
jae
add
js
jecxz
and
sub
insb
pop
or
cmc
divb
add
leave
jge
push
xor
fmuls
cmpsl
jp
pextrw
aaa
mov
pop
mov
ret
pusha
jns
call
jo
mov
sbb
pop
sub
jb
pop
xor
sub
adc
cwtl
test
jae
sub
jb
push
movups
lds
or
jno
ds
and
push
xlat
pop
xchg
push
push
movlps
lds
jne
pop
mov
movntps
inc
pcmpeqd
dec
int
lods
in
push
adc
adc
js
push
out
roll
ret
adc
insl
jne
in
push
push
adc
stos
fimuls
mov
hlt
pop
adc
stos
cmp
loopne
adc
push
inc
inc
inc
das
mov
btsl
rorl
lcall
int3
decb
inc
std
xlat
xchg
inc
lret
adc
dec
pop
cmp
rsm
sub
pop
scas
popf
sub
adc
mov
stos
jl
adc
jne
aam
pop
sub
lahf
pcmpeqb
mov
or
cltd
jo
sbb
std
fimuls
loop
in
stos
loope
insb
jb
sub
shld
sahf
loopne
stos
sbb
stc
rcrl
xchg
mov
outsl
xchg
enter
xchg
push
in
gs
dec
xor
jno
xchg
mov
xor
xchg
or
mov
dec
add
lcall
adc
mov
movsl
pop
mov
inc
psadbw
rcll
fidivs
dec
je
jg
orb
bound
inc
cmp
pushf
inc
call
adc
dec
sub
icebp
sub
cmovo
jg
pavgw
mov
fidivs
nop
add
in
sub
push
inc
scas
popf
test
inc
inc
into
pop
sub
pcmpeqb
lock
xchg
xchg
in
rdmsr
call
sti
scas
shrd
mov
mov
sub
mov
testb
sbb
jl
shrb
dec
mov
fisubl
es
lds
addr16
add
mov
dec
cmp
xchg
sbb
fwait
mov
add
jg
inc
or
pop
loopne
fnsave
cmc
or
push
mov
dec
iret
sbb
sti
enterw
mov
sbb
cmpsb
adc
sub
arpl
pop
movlps
lahf
jns
adc
comiss
ss
and
push
or
out
clc
mov
test
imul
dec
nop
add
or
and
arpl
and
push
and
or
fwait
pop
or
mov
lret
jo
movaps
xchg
out
xor
jae
xchg
mov
push
xor
and
cmp
dec
testl
addl
fstp
punpckldq
leave
add
enter
stos
stc
xchg
cli
jl
fsub
imul
sbb
pop
xlat
dec
popf
stos
fwait
mov
ljmp
lea
mov
pop
mov
adc
jnp
or
push
rorl
cmp
or
movsl
push
add
adcb
add
push
ja
pop
rdpmc
lret
and
xchg
sub
mov
out
imul
mov
punpckhbw
div
jne
clc
inc
jp
pop
jb
sbb
cmc
int
jb
jne
mov
test
in
popa
xor
or
and
inc
inc
push
in
cmp
or
fdivs
xchg
xchg
std
and
or
and
mov
loop
xchg
pslld
insl
out
fdivrs
fsubrp
and
insb
mov
mov
xchg
aas
xor
sti
scas
fidivrs
push
cmp
cmova
in
std
sbb
xchg
ss
xchg
mov
jge
rorl
push
cltd
xlat
adc
adc
fdivr
ljmp
or
loop
jl
push
js
out
jae
cmp
mov
adc
decb
add
in
insl
lods
imul
cs
stos
test
xlat
fsubrs
mov
cli
cmp
inc
mov
test
cmc
fbld
movsl
mov
test
pushf
mov
push
and
jmp
mov
inc
jae
inc
jg
call
mov
femms
cltd
jbe
fucomp
cmc
jae
test
jmp
insl
xchg
data16
in
push
getsec
pop
ror
push
call
mov
lret
mov
cmp
mov
jmp
inc
dec
fstps
dec
loop
rsqrtps
scas
ss
and
aaa
xor
das
imul
movsl
mov
sbb
cwtl
xor
xchg
in
lret
pop
pslld
jl
mov
push
push
seta
imul
in
dec
sahf
jno
sub
out
or
xchg
add
jbe
xor
push
fxch
jno
cltd
jle
mov
mov
mov
jno
inc
add
inc
push
popa
adc
xcrypt-cbc
cmpsl
push
add
jg
jp
aad
mov
mov
xchg
btr
hlt
and
test
push
adc
in
dec
xor
sbb
scas
or
call
cmc
inc
push
movsb
mov
mov
inc
jmp
jp
xor
insl
mov
out
adc
jmp
dec
icebp
mov
and
inc
xor
in
les
sub
lcall
int
pcmpgtw
sub
jecxz
mov
in
mov
enter
ljmp
inc
xchg
push
jns
jno
xchg
xchg
aam
add
jle
lahf
xchg
ds
sbb
push
lods
insl
out
add
mov
stos
add
add
push
aad
mov
in
test
ret
xchg
aaa
inc
pop
push
andnps
cmp
pop
sbb
in
xorb
push
aam
push
lret
push
pcmpeqb
xchg
jl
xchg
mov
dec
mul
clc
xor
mov
push
fstp
push
mov
fisttps
xchg
prefetch
lea
ja
in
xor
movq
fldl
or
sbb
jecxz
scas
push
jae
pcmpeqb
jmp
push
in
pop
in
sub
push
rcrb
test
scas
mov
or
clc
xchg
test
cmp
aaa
xor
mov
fcomps
int
aam
pop
push
pop
adc
inc
arpl
sub
cpuid
repz
out
and
out
pop
psubsb
divl
sti
gs
cmp
out
js
push
jle
filds
pop
sahf
rcll
in
xor
mov
repz
mov
outsb
add
sub
xor
mov
cmp
xchg
movnti
add
jecxz
mov
jbe
push
popa
sti
jg
cmpxchg
mov
movsl
inc
adc
lds
out
ja
test
xor
adc
inc
inc
xchg
mov
imul
push
stos
es
ret
cmp
mov
pop
mov
iret
lfs
push
push
push
pop
xchg
ljmp
movsl
subl
cmp
add
push
xchg
lock
popf
stos
push
xchg
xchg
xchg
cmpsl
stc
dec
jno
pop
in
pop
add
popf
cmp
popa
and
xchg
inc
hlt
mov
pop
int3
imul
and
test
inc
aad
psubw
ja
sub
loop
pop
xlat
xchg
pop
sbb
aaa
push
mov
cmp
xchg
jae
je
sti
psubusb
mov
into
mov
mov
movswl
add
test
mov
and
cmovo
jns
xor
pop
notl
andb
push
fwait
mov
movsb
lahf
sbb
movsl
scas
lss
xchg
filds
mov
pop
shlb
pop
psrlq
imul
jecxz
mov
fsubr
xchg
pushf
jno
mov
sar
aad
jb
lods
add
inc
neg
mov
ret
aaa
rol
in
mov
adc
fldl
out
jl
rorl
mov
das
test
mov
arpl
shl
mov
fstpl
add
fwait
push
jp
xor
popf
movzwl
lods
imul
iret
add
lock
clc
xor
cmp
psrlq
shlb
dec
das
xchg
setae
wrmsr
pusha
inc
decl
int
mov
mov
ret
add
jmp
inc
mov
unpcklps
fildll
sbb
test
push
test
cmp
push
and
or
pop
mov
mov
adc
out
insl
jg
push
psraw
std
movsb
cmovnp
in
cltd
scas
cmpsb
xor
jnp
iret
fwait
mov
popa
dec
push
decl
xchg
out
lock
jno
sbb
fisubl
mov
or
add
out
bnd
inc
fwait
in
sbb
je
mov
jno
repnz
clc
cltd
or
push
xchg
fcmovu
cmpsb
lret
shlb
cmp
jae
rorb
hlt
push
xchg
test
mov
cmpsl
test
insl
stc
sbb
lret
lods
xchg
dec
aas
shl
pop
mov
sbb
xorl
push
andps
fdivrs
in
sbb
mov
outsl
lret
aas
shld
stos
imul
cmp
cmpsb
stc
cmc
jp
sbb
clc
jle
sub
stos
cltd
iret
sbb
lcall
mov
bswap
in
jbe
pop
in
or
xor
mov
in
and
jbe
pop
cmp
push
mov
jl
mov
push
pusha
sbb
mov
test
adc
dec
adc
and
mov
aaa
push
dec
imul
repnz
popl
lcall
int
inc
out
mov
inc
or
cmp
sub
mov
sub
ss
bswap
mov
orb
testb
in
rcr
sbb
rclb
mov
movsl
cmpsb
cmovb
in
or
mov
fbstp
adc
sub
inc
pop
xchg
xor
hlt
sbb
mov
decb
lahf
addr16
ljmp
ja
pop
stos
clc
sub
mov
and
leave
in
or
ja
leave
lea
rclb
mov
jnp
sahf
rolb
fcmovu
out
shlb
xchg
add
jl
and
sub
aaa
inc
inc
inc
pop
jp
setno
loop
adc
test
cwtl
adc
mov
add
sarb
shld
push
pop
jns
jne
mov
mov
in
push
adc
jae
cli
cvtps2pd
sub
cmpps
inc
jg
jecxz
maskmovq
testl
add
inc
push
iret
pop
clc
jae
jo
sbb
sbb
call
push
push
aad
mov
ds
or
fprem1
xor
ss
mov
andl
popa
nop
lock
cwtl
jge
aam
xchg
jecxz
dec
lea
push
enter
push
add
sub
xchg
arpl
aaa
jb
dec
out
mov
adc
pushf
ljmp
movsb
xchg
push
mov
lea
lret
fmul
lds
sahf
adc
mov
insb
pop
gs
inc
and
push
inc
push
clc
inc
out
out
jns
pushf
xchg
mov
and
scas
push
jo
push
jle
sbb
mov
mov
loopne
int
pop
and
clc
mov
test
repnz
ficomps
add
je
mov
pusha
add
mov
mov
and
and
sbb
jae
dec
add
fwait
mov
punpckhdq
push
cmp
imul
adc
dec
clc
or
xlat
adc
aam
imul
mov
cmp
push
mov
sub
dec
sbb
or
fidivl
mov
adc
inc
mov
and
shrd
dec
inc
cltd
pop
cmp
sbb
mov
mov
stc
sub
dec
enter
popa
popf
arpl
pushf
lahf
or
mov
sbb
sbb
lret
ljmp
out
jmp
testl
sbb
cmp
pusha
je
ds
aad
fmuls
out
cmpsl
push
xchg
cmp
clc
add
ret
movlps
add
jb
and
push
lret
mov
push
sbb
in
ret
loop
aam
cmpsl
add
sahf
or
mov
xorb
ret
add
push
lods
mov
mov
mov
xor
jne
pop
and
pop
paddsw
mov
adc
lods
and
mov
mov
cmp
pop
bound
pusha
xchg
xchg
mov
xchg
cwtl
adc
sub
and
inc
lea
es
or
add
cmp
push
sbb
dec
cmp
syscall
jnp
loopne
sti
sub
insl
mov
hlt
sub
sbb
shll
xchg
sbb
dec
xor
jp
addr16
iret
jno
inc
popa
insl
mov
pop
arpl
pushf
mov
mov
xor
lea
xchg
push
scas
sub
cmc
popl
test
rclb
or
aas
mov
or
xor
sub
sbb
sbb
push
sbb
psubd
cmp
cmp
mov
jns
inc
cs
out
fadds
test
sbb
cmpsb
sbb
inc
sub
out
bnd
xchg
xor
xchg
movups
aas
pop
das
popa
stos
nopl
loopne
fld
pusha
add
mov
xorl
gs
push
mov
or
aas
adc
adc
inc
jecxz
add
jbe
mov
push
int
fstp
lret
cld
outsb
popf
pop
cwtl
int3
mov
jae
maxps
pop
inc
fdivs
adcb
mov
fcomip
xchg
sarl
mov
xorl
dec
inc
mov
bound
push
paddusb
inc
add
lahf
out
sub
std
cmpsl
insb
sbb
in
jno
sahf
sub
pop
mov
or
push
scas
stc
jl
subb
imul
lret
psubsb
repz
jb
cmc
xchg
nop
mov
mov
repnz
push
push
mov
xchg
adc
nop
jmp
pop
xchg
jno
fmuls
jbe
mov
dec
wrmsr
xchg
jne
push
shrb
cmovne
sbb
imul
sarb
jno
jns
push
dec
shr
xchg
jl
enter
loopne
cli
mov
pop
mov
or
unpckhps
push
cmpsl
pop
pop
push
xchg
sub
mov
jl
movlps
jecxz
test
stos
dec
bswap
mov
aam
psraw
cmp
addps
dec
popa
push
add
daa
adc
shlb
inc
xor
pop
jae
xor
cmp
lods
sbb
test
dec
xchg
cltd
js
aas
mov
adc
icebp
mov
push
popf
mov
xorps
mov
setns
outsb
inc
push
popf
ja
rclb
mov
jae
leave
bsr
nop
int
pop
ret
psubsw
les
stos
je
or
into
jg
push
mov
rcrb
test
and
loope
lret
mov
xor
ss
jecxz
and
daa
mov
je
jno
repz
out
inc
dec
rclb
push
adc
cmpsb
in
inc
daa
xor
cmpxchg
mov
push
adc
lahf
js
push
stos
pop
enter
fwait
inc
jo
aas
mulb
inc
add
outsl
dec
sub
mov
adc
inc
pushf
repz
clc
lods
mov
mov
xor
pinsrw
ljmp
lods
aam
adc
jle
and
lds
or
mov
or
add
push
and
pop
arpl
mov
xor
rclb
lahf
lock
pop
jns
daa
push
setns
addr16
cld
lea
adc
and
jg
jae
mov
repnz
adc
stos
fiadds
pop
mov
aaa
fimuls
xor
pop
and
adc
or
aaa
cmp
xchg
pop
xor
or
dec
pop
stos
inc
or
xchg
jg
push
lahf
imul
mov
test
jl
mov
sub
insl
mov
lahf
popa
pmulhuw
cmpsl
mov
imul
pop
xor
cpuid
push
sub
cmp
fisubrs
popf
test
scas
insb
jno
mov
lcall
adc
aad
sub
addr16
outsl
mov
xchg
cwtl
std
or
hlt
aad
ja
and
push
packuswb
imul
mulps
fcoml
adc
push
clc
mov
js
push
cs
cmp
pop
add
movsb
and
pop
bswap
push
test
out
inc
ds
outsb
fidivl
add
jb
cmovle
cmp
call
adc
pop
aam
push
in
loop
cld
mov
mov
inc
adc
inc
popa
mov
les
out
jno
stos
mov
call
xchg
wrmsr
pop
sub
movsb
sbb
imul
cltd
and
push
loop
mov
idivl
outsb
std
push
repnz
stos
nop
movsl
pusha
jno
and
sub
xor
pop
and
cmc
movq
and
rolb
sub
dec
addr16
mov
or
sbbb
jg
or
dec
ds
dec
mov
inc
jmp
add
in
mov
adc
push
fistpl
ret
popf
adc
jae
push
adc
inc
dec
sub
cmp
pushf
hlt
or
cmp
inc
mov
rcll
test
push
mull
inc
jge
dec
pcmpeqb
jmp
adc
stos
sbb
inc
imul
push
push
repnz
xchg
ror
mov
xchg
outsb
cli
and
push
sbb
pop
cmp
sahf
test
loop
cmp
ret
sysenter
daa
jnp
inc
mov
cmp
in
punpcklwd
cli
or
iret
lret
ds
xor
notl
cmp
dec
stc
lahf
ud0
ret
add
sub
outsb
cmp
cmp
jne
lret
popf
mov
inc
movsl
pop
mov
movzbl
lret
popf
mov
cli
fldl
fistpl
push
mov
mov
pop
fiadds
popa
loopne
add
mov
inc
fnstenv
movlps
dec
aaa
or
hlt
sub
pop
inc
mov
ret
pop
adc
inc
sub
repnz
adc
add
aad
getsec
stos
mov
mov
jae
int3
rcrb
add
adc
psubsb
mov
cmp
pop
shrl
aad
cmova
cmpl
adc
adc
stos
mov
mov
mov
pusha
and
repz
push
mov
push
xor
fidivrs
imul
push
shrb
and
rorl
push
sbb
mov
aaa
adc
jae
cs
push
cli
in
inc
xchg
xor
add
ljmp
pop
jecxz
or
call
inc
sti
mov
nop
mov
adcb
bound
sub
push
test
and
adc
xchg
inc
divb
bound
push
ret
sbb
and
xor
mov
rorb
nop
fisttpll
adc
test
or
xchg
and
sbb
adc
push
mov
push
mov
mov
add
mov
lds
inc
les
repnz
sbb
push
jecxz
adc
imul
jnp
xchg
inc
cmc
movsb
adc
setno
int3
add
lea
rol
or
mov
add
repz
adc
roll
jmp
pop
in
notl
jno
xchg
adc
jns
push
pushf
mov
rcl
insb
lahf
rorb
ja
xor
pop
add
mov
stos
rcll
leave
testl
inc
dec
into
lahf
insl
cmp
inc
sub
test
aad
mov
push
xchg
int
pop
das
ret
jecxz
jno
jg
dec
sub
xchg
lahf
fisttpl
lret
pop
inc
ds
pxor
jecxz
jge
adc
shrb
lock
psubb
push
dec
loope
imul
dec
lret
push
outsl
fwait
inc
rsqrtps
pop
fs
xchg
dec
add
cmpsb
push
ljmp
sbb
cs
jmp
out
fldlg2
inc
mov
sbb
int3
xor
and
ja
xchg
xor
repz
cmp
scas
push
sbb
and
push
or
out
push
es
xor
aad
pop
push
ud2
hlt
jb
negb
aaa
cmovle
bound
adc
sub
leave
rorb
sbb
pusha
stc
or
xor
inc
hlt
sti
paddsb
lret
cmpsl
cmc
cmp
or
std
and
aaa
cmc
dec
clc
loop
fmuls
xchg
mov
adc
es
adc
xchg
dec
push
rdpmc
jae
test
int3
inc
dec
call
mov
inc
enter
jb
in
add
lret
cmp
push
jp
repnz
inc
comiss
arpl
inc
ja
imulb
mov
jge
pop
adc
movntps
and
add
mov
sub
btr
or
jg
seto
cmp
ret
mov
or
enter
ja
pushf
sub
and
push
lea
cmovge
es
mov
sub
scas
out
cvtdq2ps
leave
test
adc
movsl
divl
mov
out
data16
fwait
or
push
xchg
lods
mov
pop
inc
les
xlat
adc
mov
sbb
mov
mov
and
fldcw
or
jne
jnp,pn
xor
iret
cmp
sbb
rorb
and
jge
mov
or
insb
lret
cmpsl
mov
pop
inc
addr16
cltd
add
inc
fmuls
int
ret
or
scas
mov
pcmpeqd
scas
mov
xchg
out
sub
mov
push
sub
das
rorb
mov
pop
addb
dec
jg
rorl
lock
cmp
cmpl
lcall
inc
test
adc
sbb
ja
sub
push
xor
jecxz
dec
packssdw
xor
js
jmp
mov
and
pslld
or
popf
push
pop
or
add
insl
cmc
adc
push
inc
add
xchg
adc
mov
mov
nop
cwtl
mov
sub
fwait
ucomiss
and
punpckldq
mov
mov
stos
mov
push
mov
xchg
shlb
adc
pop
jo
push
fdivrp
mov
sbb
ud1
insl
xchg
cmp
fimull
int
xor
or
lcall
es
add
push
sub
lds
adc
fistl
xchg
sbb
and
dec
sarb
jg
cmp
adc
cli
imul
maskmovdqu
idivl
out
cmp
out
vmwrite
aas
xor
and
inc
dec
sbb
mov
bound
iret
sbb
push
lcall
imul
inc
xor
jl
pinsrw
mov
cmp
ja
jae
outsl
aaa
inc
jns
cmp
stc
adc
xchg
test
fnstcw
mov
push
aam
cmp
cmp
jo
sbb
andl
rdtsc
pop
das
push
es
xlat
adc
jle
cs
std
bswap
dec
test
add
adc
lods
jmp
fistpll
pop
das
je
jl
pop
xadd
arpl
inc
sub
lcall
out
ret
lods
outsb
push
enter
adcl
cmp
rcrb
push
daa
call
sub
rorb
sub
add
shld
mov
mov
cmpsb
add
or
push
inc
cmp
xchg
adc
sbb
push
jb
arpl
dec
xor
inc
adc
int
inc
inc
jns
mov
maxps
movsl
das
jae,pn
outsl
jecxz
adc
mov
push
sub
or
push
jge
negl
mov
seto
dec
pop
adc
inc
jmp
cmc
ss
sbb
mov
or
fcoms
push
jnp
stos
adc
add
push
mov
mov
lahf
cmc
push
xchg
ljmp
cvttps2pi
xchg
mov
scas
jmp
cmp
je
inc
loopne
lods
xchg
jo
push
andnps
arpl
sbb
pcmpeqw
push
mov
mov
add
xor
mov
into
add
add
ss
pusha
cmp
jp
cvtps2pd
cmp
ja
maxps
cmc
mov
fldcw
jecxz
pop
psubsb
lds
sbb
or
roll
nop
lcall
clc
inc
jecxz
mov
add
cmpsb
xchg
imul
dec
sub
arpl
rclb
sbb
pusha
sub
and
outsl
push
rol
or
out
mov
xchg
imull
scas
pand
mov
push
and
setg
sub
iret
movsl
mov
loop
mov
insl
aaa
shlb
nop
jne
add
mov
cmpsl
psubusb
sub
subl
dec
movsb
adc
lcall
sbb
sub
mov
inc
inc
mov
mov
xlat
or
notb
cmp
rclb
cmp
bound
push
adc
or
aaa
add
xchg
outsb
sub
addr16
add
jbe
mov
fstl
xchg
cltd
stos
lret
cmovle
hlt
and
mov
and
fwait
cmp
cmpsl
rorb
mov
fucomp
cmp
andb
pmullw
ds
enter
xlat
jle
push
push
jne
lods
add
mulps
pop
loopne
sbb
xor
cld
cmp
hlt
paddq
xchg
jne,pn
sub
xchg
inc
dec
into
mov
sysexit
test
mov
cld
loope
and
cmp
andb
add
sti
push
std
push
mov
pushf
ljmp
cmpsl
mov
arpl
mov
adc
mov
mov
jo
add
cmp
cmp
or
mov
add
pandn
mov
adc
xchg
bound
inc
icebp
cvtps2pi
mov
pusha
popf
pavgb
sub
lret
push
dec
mov
rclw
sahf
sub
stc
leave
lods
js
nop
cmovns
xlat
mov
inc
nopl
jp
push
test
mov
jbe
fistpl
push
xor
imul
push
mov
setp
mov
adc
aam
adc
imul
outsb
sub
fidivrl
inc
rcr
jl
adc
repz
shlb
cltd
ja
push
jmp
and
cmpsl
imul
sbb
sete
stos
inc
sti
adc
lock
push
cli
and
int3
fidivrs
adc
sbb
jp
push
or
cmp
lock
rol
sub
xadd
clc
push
sbb
xor
dec
out
and
dec
mov
sub
adc
adc
shrl
popa
shlb
dec
cmpxchg
outsl
fwait
aaa
popf
sub
mov
por
mov
dec
sub
xchg
xchg
hlt
adc
dec
add
out
bound
push
clts
fcmovnbe
in
mov
push
xor
out
pushf
or
out
mov
dec
or
add
mov
xchg
js
decb
out
jge
fsubs
mov
cmp
mov
sub
and
mov
out
dec
addb
sub
xor
movsl
insl
psraw
andb
xlat
nopl
add
xor
cmc
lret
adc
inc
cmp
in
adc
mov
jl
loop,pt
in
push
pop
shlb
lock
mov
imul
stos
pop
ficoms
sahf
xadd
inc
ret
jne
jo
jp
packuswb
mov
ucomiss
stos
cwtl
pop
ffree
ss
jae
icebp
adc
imul
daa
adc
sbb
es
jmp
rol
jle
stc
mov
xor
or
fwait
scas
cmp
add
sub
imul
pop
repnz
movzwl
orb
xlat
aad
out
sbb
rorl
add
imul
test
pushf
in
sarb
push
and
cmpsb
lret
mov
adc
xchg
psubsb
jno
push
pop
mov
pop
cmovp
shrb
cmp
fsubs
imul
mov
mov
aad
fmul
lcall
iret
incb
push
cmp
dec
fdivl
fxtract
mov
insb
dec
sbb
aaa
jp
lea
adc
xchg
rcl
nop
push
or
cmovnp
mov
rcrb
int
mov
adc
mov
or
xchg
js
nop
or
jmp
lahf
mov
xsavec
out
gs
or
add
pop
and
lgs
xor
mov
jp
lret
sbb
cmp
test
add
jmp
sub
push
mov
dec
sub
enter
and
es
fwait
mov
popf
jmp
jo
sbb
js
cmp
xchg
sub
cmp
jg
sbb
rcll
rcr
xchg
repnz
lds
bswap
popf
jb
jge
cmp
unpckhps
dec
adc
scas
jmp
cmp
rcl
ljmp
pushf
pop
testl
ror
lds
pop
das
pop
bndstx
mov
or
test
out
leave
and
scas
in
repz
gs
jbe
xorb
ljmp
xchg
adc
and
or
mov
lds
push
cmpsl
ja
nop
or
inc
push
dec
inc
push
xchg
mov
push
shlb
test
inc
or
fisubrs
jbe
sub
sbb
je
jecxz
incb
push
mov
ss
loopne
imul
xchg
das
out
rcrl
out
or
cmp
pop
ds
out
cs
leave
rolb
sti
push
push
stos
pushf
adc
jg
jns
das
mull
shll
lret
dec
loope
mov
pop
cmp
sti
int3
aam
sbb
jns
xchg
mov
rorb
fsubrl
dec
sbb
push
push
xchg
loopne
sub
das
outsl
aaa
mov
or
shll
push
adc
movsb
fmull
ret
adc
daa
mov
mov
out
xchg
ror
ljmp
out
mov
bound
jno
push
cli
or
or
jbe
or
pop
orb
adc
pop
bound
xor
adc
xchg
mov
movaps
dec
dec
push
cmc
in
clc
leave
stos
popa
jmp
dec
sbb
cld
cmpsl
repz
rorb
imul
insb
pusha
dec
inc
jmp
mov
xchg
push
pop
sti
getsec
cmp
hlt
push
bswap
xchg
insb
movsb
lds
or
mov
sub
jbe
sysexit
lahf
stos
cltd
push
sbb
in
add
les
xchg
mov
in
aas
xchg
movsl
jb
and
mov
outsl
mov
paddw
sbb
or
or
dec
outsb
mov
push
or
adc
nop
jp
pop
sub
bound
inc
fistl
pop
out
shrl
aad
add
arpl
dec
es
movsb
bound
adcl
mov
push
loop
fisttps
mov
leave
push
jge
fisttpl
xchg
fs
cld
cltd
xlat
imul
fists
or
jmp
mov
pop
pop
addr16
adc
popf
popl
dec
out
inc
or
jge
push
xchg
mov
movq
ss
sub
jb
idivl
and
popa
arpl
js
dec
cmp
add
movsb
shl
inc
xchg
ss
sbb
xchg
jno
add
mov
jecxz
loopne
mov
iret
in
punpcklwd
out
stos
clc
pcmpgtw
test
fucom
loope
inc
mov
pushl
test
sub
popl
rcll
lock
xor
push
leave
rclb
jne
sub
dec
gs
dec
or
repz
or
push
cmp
or
xor
jp
inc
sbbb
adc
dec
jl
mov
mov
mov
adc
loope
rcrl
bswap
sti
xor
cmp
das
pusha
or
mov
cmp
imul
loopne
xchg
sub
adc
test
loope
rorl
jmp
fwait
movsl
paddsb
std
inc
pop
push
movnti
hlt
and
pop
jb
cmp
xchg
pop
ret
cmc
and
pop
or
mov
setle
xchg
xor
rorl
push
adc
stos
push
dec
push
rorb
in
mov
sub
inc
jle
inc
pop
js
scas
mov
inc
sbb
push
jnp
push
mov
rorb
aam
xchg
jg
sub
xchg
out
in
addr16
push
xor
rdpmc
cmp
rcrl
setae
inc
inc
inc
cmp
dec
fdivrs
adc
jl
mov
pop
sbb
sbb
xorps
test
or
sub
andl
fiaddl
add
pop
sarb
iret
sbb
xor
jbe
pushl
mov
sbb
scas
adc
ja
fcmovb
sub
mull
push
adc
cmc
cmp
std
push
fucom
adcl
sbb
cmp
mov
sbb
add
cltd
mov
stos
xchg
adcl
pop
rcll
add
jmp
popf
outsb
pop
out
bnd
loopne
andnps
or
scas
adc
xor
add
adc
mov
lods
mov
pop
pop
mov
inc
xchg
insb
push
sub
jne
cwtl
jb
push
cld
enter
jno
addr16
std
test
jnp
jle
test
mov
stos
nop
xor
adc
mov
mov
xor
and
push
cmp
lret
jns
xchg
cmpsl
int
xchg
and
push
pop
add
mov
bound
lahf
and
push
inc
mov
ja
mov
pop
hlt
jp
push
sub
adc
test
dec
lods
js
dec
imul
mov
push
orb
dec
jno
mov
mov
lret
sbb
in
add
xor
sbb
ret
bound
repz
addb
ucomiss
std
leave
push
mov
or
add
push
sub
movb
xchg
clc
test
mov
xor
shlb
pushf
dec
adc
mov
add
fisubl
mov
popf
into
or
adc
adc
add
dec
jecxz
mov
push
insl
test
ljmp
pmaxub
sarb
mov
mov
loopne
jp
hlt
je
add
out
cmpsb
fs
aas
repz
repnz
mov
xchg
sbbb
addr16
in
add
pop
dec
rorb
test
scas
scas
cmpxchg
mov
test
in
xchg
addb
push
setl
je
sahf
iret
punpcklbw
hlt
mov
sti
icebp
ljmp
mov
jb
je
dec
fsubrp
jno
movsb
xchg
addr16
ror
and
mov
jg
adc
scas
adc
lahf
xchg
cmp
out
jnp
mov
enter
scas
adc
and
pop
sbb
mov
mov
loope,pn
and
lret
jl
sbb
shrl
out
clc
outsl
push
xor
daa
enter
inc
fmul
jno
or
sbb
adc
add
dec
mov
mov
xchg
push
rsm
imul
and
xchg
mov
xor
xor
mov
lcall
push
stc
data16
cwtl
push
push
test
ficoml
jp
mov
mov
sub
sbb
mov
out
ja
jmp
mov
xor
dec
fwait
mov
test
mov
cmp
adc
outsb
xchg
push
loop
inc
adc
mov
jmp
xlat
push
movzwl
xor
cmpsl
adc
push
push
cmpsb
xchg
notl
in
pusha
mov
jl
pop
fs
jle
sete
popl
test
xchg
outsl
jge
dec
or
ret
aad
addr16
nop
add
lods
pop
sub
inc
mov
add
popa
sbb
push
adc
xor
sub
mov
iret
inc
xor
adc
paddusw
lea
add
cmp
sbb
xor
push
mov
xchg
pop
mov
rcll
sub
adc
push
mov
test
lcall
cmp
and
cli
jle
fs
lds
lret
bsr
inc
ffree
mov
add
fcompl
sub
push
imul
jp
xor
divps
pushf
sbb
xchg
mov
test
mov
psubd
dec
cltd
nop
sbb
xchg
sbb
pop
faddp
jge,pt
out
push
dec
int3
loop
sbb
or
inc
lds
mov
dec
cmpps
push
int
fcomps
fadd
hlt
xchg
testl
adc
add
mov
xor
jg
push
adc
lret
xchg
iret
inc
sub
aam
jne
out
push
out
cs
jmp
sub
sbb
outsl
subb
lahf
in
jg
iret
and
nop
and
push
popa
dec
dec
and
das
std
punpcklbw
movsb
scas
cmc
inc
mov
and
dec
sysret
jno
jl
sub
bndstx
cli
pop
loopne
xor
stos
mov
lcall
outsl
inc
dec
movsl
xchg
mov
fbstp
lods
stos
add
int3
lds
or
pop
hlt
or
std
sbb
psllq
loopne
data16
inc
pop
mov
rclb
and
xor
aaa
sbb
xlat
sub
pop
add
mov
sbb
jmp
gs
pop
outsl
mov
dec
leave
adc
in
cmpl
lods
pushf
adc
mov
xchg
out
xorb
xchg
stc
hlt
repnz
fidivrs
stos
sub
arpl
pop
dec
sbb
inc
dec
les
setns
xor
sbb
shl
adc
loopne
outsl
int3
xorl
adc
loope
mov
aaa
aam
pcmpeqw
push
xor
push
and
push
jo
jecxz
xchg
out
mov
cmp
insl
inc
sbb
imul
sbb
fidivrl
mov
cwtl
push
loop
jo
data16
pushf
out
xchg
xchg
cmp
adc
mov
movsl
add
add
nop
mov
xor
sbb
sbb
jg
dec
rclb
ja
mov
add
rcr
xchg
and
add
xchg
dec
andl
enter
sbb
lods
jp
pop
mov
sbb
push
mov
or
push
and
scas
adc
mov
mov
xor
adc
arpl
pop
rorl
cli
pop
repz
pop
dec
or
xor
fbld
imul
mov
scas
std
xchg
aad
stos
mov
sbb
cwtl
inc
xchg
sub
mov
mov
push
aad
minps
in
insl
mov
pmaxsw
aam
out
mov
out
movntps
lcall
and
or
cmp
ja
mov
mov
or
stos
cmp
fnstenv
dec
adc
xchg
xchg
test
scas
in
js
imul
icebp
jl
hlt
psrlq
std
xlat
lea
out
sbb
mov
sub
ret
lods
scas
sbb
mov
das
subb
cmovbe
arpl
insl
sbb
xchg
push
js
paddb
sbb
inc
jg
iret
jb
mov
cmp
cmpsb
xchg
mov
add
push
sbb
inc
ret
jo
dec
inc
gs
jge
fstp
xor
push
mov
test
leave
ror
push
push
xor
adc
popf
and
and
invd
xchg
jl
and
cs
mov
mov
maxps
mov
sbb
xor
dec
sub
and
andb
cltd
mov
sbb
in
dec
jecxz
test
jmp
pop
jge
pop
notb
lahf
mov
out
scas
mov
ficompl
adc
mov
enter
jp
or
daa
clc
packuswb
inc
dec
mov
popf
mov
std
dec
push
cmp
aad
push
wbinvd
mov
outsl
inc
push
movaps
push
cld
xlat
sarb
cmp
mov
mov
push
pop
sarb
jmp
cmpxchg
sub
mov
jno
sbb
lahf
cld
adc
sub
mov
mulb
clc
setb
insb
and
call
js
pop
cmp
loop
out
push
leave
push
adc
enter
test
mov
or
je
or
xor
call
push
and
bound
mov
sub
inc
jecxz
scas
cli
mov
icebp
bswap
cmp
jl
popa
inc
out
push
xchg
sahf
add
gs
mov
add
cmpsl
rolb
aad
mov
mov
push
mov
fmull
adc
fnstsw
jo
sbb
or
xchg
leavew
inc
ss
add
out
jg
jbe
cmp
sbb
inc
xchg
stc
test
xchg
lahf
adc
in
cmp
packssdw
inc
lock
mov
pop
lods
add
push
pushf
lods
jne
psubsb
adc
psraw
sarl
stos
repz
int
jo,pn
xor
dec
mov
popa
sub
btc
mov
sarb
or
cmp
lea
mov
jp
fmuls
cmp
scas
pop
cltd
test
or
movsb
xchg
pop
dec
cmp
or
in
mov
rcrl
add
dec
dec
insb
jno
sbb
adc
ret
xor
mov
xor
dec
add
popa
sub
sbb
cld
adcb
mov
fisttps
inc
add
push
sbb
pop
std
vmwrite
inc
fcmovnu
outsb
sbb
pop
in
fs
int3
lar
pop
and
bswap
out
loop
scas
imul
xchg
dec
int
add
ds
mov
inc
dec
clc
out
lret
dec
imul
dec
sysret
sbb
cmpsb
into
inc
mov
imul
jl
jmp
sub
mov
inc
rolb
pmulhw
movsl
push
or
inc
adc
in
sbbb
xchg
mov
mov
scas
mov
scas
or
mov
sub
in
vmread
or
test
xchg
add
mov
jecxz
aaa
stos
subb
adc
lahf
jnp
ljmp
and
imul
and
jno
mov
ljmp
sub
fwait
or
sahf
ss
jecxz
mov
cmovle
ret
inc
jbe
jl
cmc
adc
mov
fmull
mov
mov
sub
mov
mov
inc
out
or
add
nop
inc
fildl
loopne
in
xchg
cld
dec
xor
mov
xor
rclb
movnti
mov
rorb
pushf
fsubrs
orl
jle
pop
cld
insb
jnp
or
cltd
sahf
xor
arpl
stos
rorb
fwait
mov
mov
push
mov
out
jae
hlt
loope
clc
test
insl
sbb
dec
xchg
and
fs
shll
ja
por
and
packuswb
nop
adc
mov
jbe
and
pslld
sti
fsubs
mov
enter
mov
sub
in
out
ud2
inc
cwtl
xlat
lds
adc
dec
jb
lret
test
repnz
jnp
subps
out
sbb
xor
out
or
jbe
cmp
icebp
fisttps
mov
mov
cmp
insb
sysret
inc
jnp
pushf
out
divb
fwait
aam
cmp
add
out
rorl
push
or
sub
jae
fnstenv
aad
push
fwait
lahf
mov
bound
fisttpl
out
repnz
scas
and
add
add
loope
dec
add
sbb
xchg
jecxz
pushf
incl
rsqrtps
frstpm(287
mov
loop
lret
xlat
scas
adc
jbe
mov
adcb
mov
adcl
call
adc
setl
ret
jne
or
mov
sbb
lds
lret
jecxz
dec
bound
pop
sub
push
jp
ss
push
cmp
push
rdpmc
pop
xchg
fld
rorl
popf
jp
jnp
pop
nop
aad
sub
test
jae
in
sbb
dec
push
insl
adc
les
add
jg
xchg
adc
sub
mov
roll
adc
jns
das
push
or
inc
fcomp
cmp
pop
ja
jle
sub
inc
sub
push
in
mov
and
xor
cmp
sbb
push
mov
sub
mov
mov
lahf
daa
jb
xchg
int
push
in
xor
enter
jns
fdivr
scas
jp
jmp
add
loop
ja
lret
sbb
and
sub
repz
data16
mov
xchg
sbb
or
lahf
add
cmp
iret
bound
hlt
jo,pt
adc
mov
mov
scas
jle
test
jg
jmp
ljmp
xchg
outsb
and
bound
nop
repz
cli
add
cli
push
loop
sbb
fcomps
pusha
push
or
and
aaa
dec
push
imul
pushf
adc
jg
pop
pop
in
push
jae
in
inc
sbb
xchg
pop
rclb
mov
ja
add
jae
push
imul
int3
sbb
shl
faddl
xchg
cmp
scas
jle
not
pop
ret
xchg
gs
sbb
mull
outsb
out
psrlw
pop
sub
xchg
je
pminub
sbb
comiss
pop
ret
pop
xchg
sbb
or
inc
lar
xor
ds
lret
fimuls
cli
roll
jge
paddd
loopne
in
inc
rcrl
or
mov
xorl
rorl
xor
mov
imul
sub
mov
mov
sbb
divb
iret
push
xorb
pusha
insb
mov
sub
out
pop
add
lret
jecxz
shl
imul
push
movb
into
mov
mov
nop
pcmpgtw
scas
subl
pop
sbb
das
pop
adc
push
lahf
dec
aad
outsl
mov
dec
sbb
jp
jo
pusha
adc
sub
out
iret
xor
sar
inc
adc
mov
data16
mov
jmp
gs
das
lahf
pop
filds
scas
out
bound
out
lock
cmpxchg
loop
cmp
push
icebp
sbb
adc
ja
aad
sub
xor
xchg
dec
ret
xchg
sbb
test
push
inc
inc
scas
aas
movd
sbbb
xor
test
mov
loop
jl
jbe
inc
ljmp
sbb
or
jl
jae
xchg
insb
popa
mov
movsl
out
mov
mov
mov
sbb
jmp
jnp
push
xchg
fisubrl
movd
sbb
xadd
jno
imul
outsl
rorb
repz
sbb
xchg
mov
call
sub
les
sbb
insl
arpl
pop
push
out
jne
dec
xchg
movsl
repnz
push
sub
gs
sub
sub
sub
in
cltd
jecxz
cs
scas
and
dec
clc
pop
inc
lock
setge
xlat
sub
push
adc
repnz
and
cs
xlat
sbb
cmp
mov
shld
test
push
inc
setge
mov
cwtl
add
jge
fldenv
fwait
xor
shll
popf
ret
jo
lret
lea
xchg
push
push
push
xchg
jns
and
cmp
mov
fildll
add
fldcw
xor
aas
xor
jb
daa
loopne
cmp
and
movsb
or
xchg
push
mov
mov
inc
cwtl
pop
sbb
int
fmuls
mov
lcall
leave
rcl
out
dec
pop
jmp
loop
sub
por
movsl
adc
mov
inc
adc
repnz
fimuls
push
in
xchg
pcmpeqw
insb
scas
ljmp
mov
sbb
add
jae
and
out
push
push
inc
imul
pop
int
sarl
pop
inc
jbe
jno
ja
dec
ret
xchg
mov
cmpb
imulb
aam
pmulhuw
fisubl
leave
adc
popf
add
dec
mov
out
sti
in
pop
insl
xor
push
ljmp
mov
adc
loop
jo
cmpsl
imulb
mov
es
mov
mov
setge
loope
pcmpeqd
sub
adc
scas
test
sub
popa
dec
xchg
mov
push
shld
jecxz
lds
out
adc
add
ds
imul
push
hlt
xlat
push
fcomps
pcmpeqd
adc
mov
sub
in
dec
pop
mov
psllq
jo
cli
inc
xor
adc
sub
movsb
cli
iret
or
test
imul
mov
cs
mov
lcall
fdivs
mov
mov
psrlw
dec
enter
rcr
sub
es
xchg
mov
push
mov
clc
pand
hlt
and
jne
mov
shrb
outsb
shlb
adc
cmp
hlt
ss
cmp
imul
pandn
icebp
popf
xor
jb
fxsave
cmp
test
ret
rcpps
pop
push
ficoml
inc
sbb
repnz
cmp
in
sarl
push
arpl
stos
jecxz
mov
fisubrs
ror
lcall
add
jo
dec
sahf
psubsb
sub
jl
iret
or
push
in
out
jne
pcmpgtw
je
cmovno
mov
out
adc
ljmp
mov
fstl
int
push
adc
loopne
orl
iret
pop
inc
shrl
adc
xlat
xchg
popf
setle
cli
fistps
lea
leave
sub
xor
pop
orb
push
adc
jg
pop
add
adc
dec
lret
test
mov
xor
mov
out
push
jno
repz
inc
aaa
cwtl
xchg
cmp
rolb
subb
lret
pusha
rdtsc
mov
xchg
dec
addr16
or
sbb
cmp
lcall
sarb
mov
data16
xor
and
loopne
popa
push
dec
cmpsl
pmulhuw
outsb
shlb
mov
mov
jecxz
push
xchg
cmp
sarl
or
mov
mov
or
xor
cmc
pop
out
or
es
in
mov
ret
and
xchg
dec
popf
cvtpi2ps
add
mov
ljmp
cli
loopne
scas
in
pop
in
cltd
add
sbb
aam
fisttpll
cmpb
psrlw
loop
pop
pushf
orb
dec
sarl
outsb
jns
sti
xchg
hlt
sbb
inc
add
in
repz
rcr
xchg
and
inc
in
xchg
pop
xchg
and
pusha
mov
js
mov
leave
int
rorl
enter
rclb
xchg
loope
add
in
jl
sarb
ds
add
jb
fcomip
pxor
sub
adc
imul
adc
jg
inc
jecxz
minps
push
inc
test
jmp
xchg
push
cmpl
push
cs
mov
leave
sbb
pmullw
add
sahf
mov
and
xchg
adc
jae
jmp
mov
stc
pop
mov
pop
xchg
ds
sahf
lahf
cmovno
cmp
mov
mov
iret
rcl
lcall
mulb
mov
sbb
pmulhw
xor
prefetch
mov
or
push
aad
push
imul
jmp
push
add
fsubrs
out
push
mov
mov
and
dec
xor
xchg
fwait
inc
paddsb
sbb
sysexit
popf
shrb
inc
cmp
lret
iret
mov
adc
xor
adc
movsl
sarb
movsb
hlt
roll
aas
in
sti
cmc
addr16
dec
xor
sub
dec
adc
adcl
ret
xlat
push
cmove
mov
xchg
clc
mov
sti
xchg
push
addr16
rol
sarb
xor
push
fdivr
rorb
cld
movsl
mov
pop
xlat
test
push
arpl
push
mov
fwait
unpckhps
icebp
enter
lcall
les
pushf
sti
xor
add
and
xchg
sub
imul
cmpsl
enter
es
mov
clts
xchg
jge
les
cli
stos
popa
packuswb
and
popf
movsl
fs
or
cli
lods
adcl
sub
or
hlt
jns
out
in
insb
push
mov
push
data16
push
add
shrl
sahf
psadbw
test
push
out
sbb
lea
mov
dec
inc
sbb
int3
fcompl
mov
adc
pop
lods
jae
push
aad
sbb
push
mov
mov
and
psubsw
sub
aas
sub
paddd
inc
add
popf
push
inc
shlb
and
pop
jge
pop
fbld
cmp
mov
or
fistpll
mov
hlt
enter
sbb
and
paddd
aam
push
bound
std
lods
cmp
paddusb
or
mov
movsb
sbbl
xorb
negl
into
sbb
shld
cmp
insb
jl
adc
xchg
mov
es
pop
imul
into
mov
push
mov
or
and
pop
je
test
sbb
jo
bswap
xchg
jecxz
and
or
mov
int3
jl
mov
mov
in
inc
jmp
xchg
push
mov
out
aad
jb
cld
imul
stc
and
addr16
outsb
js
ficomps
stos
add
mov
repnz
dec
in
push
jb
ja
mov
xchg
xchg
lahf
dec
and
mov
jge
fs
psubq
loopne
and
nop
into
pop
outsb
popf
push
cwtl
mov
subl
mov
xlat
mov
mov
sbb
lcall
add
mov
mov
mov
pop
or
in
test
adc
ficomps
cmp
flds
in
mov
das
inc
mov
or
xchg
xor
xchg
arpl
int
fsts
cwtl
or
inc
cmc
pop
xchg
idiv
adc
push
gs
jle
idivl
push
or
setnp
push
push
fildl
minps
or
sub
cwtl
xor
sbb
inc
jge
repz
dec
adc
add
jo
jns
out
xchg
push
jl
dec
pcmpeqd
cmp
mov
and
mov
xchg
xor
fldcw
ja
scas
in
jg
dec
shlb
mov
add
cmp
push
inc
lods
sub
mov
sbb
dec
outsl
imul
add
movlhps
mov
mov
push
dec
andl
loope
jns
movsl
clc
or
aam
rcr
lcall
jbe
imul
rcrb
push
mov
mov
push
cmp
ret
sbb
sbb
movntps
mov
in
and
adc
fdivs
in
sbbb
xor
push
data16
jae
mov
and
inc
int
push
enter
lzcnt
add
cmp
arpl
insb
inc
out
adc
and
mov
inc
and
stc
jns
imul
movsb
scas
adc
ljmp
adc
xchg
cmpsl
call
xor
mov
icebp
jge
inc
xor
fstl
test
in
xchg
xor
mov
pop
xchg
nop
inc
mov
int3
outsl
lods
mov
adc
push
cmc
fsub
or
or
leave
iret
in
adcb
incl
mov
pandn
inc
inc
loop
cltd
pop
sub
sbb
pop
movsb
jge
xchg
sub
mov
imul
mov
nop
shld
in
fmull
scas
jne
enter
cmp
mov
fcomps
int
int3
clc
mov
stos
mov
loopne
jmp
xor
xlat
inc
mov
mov
adc
insb
test
pusha
push
xchg
sets
cmp
mov
push
outsl
movlhps
mov
or
xor
jp
mov
xchg
aaa
and
dec
ss
insl
xlat
push
jno
movnti
scas
daa
pop
lods
inc
ljmp
shlb
test
or
lahf
daa
pop
xor
pop
cmp
in
mov
in
mov
xlat
mov
movsb
cmp
pop
hlt
loope
ja
mov
dec
add
movsl
repnz
fnstcw
iret
fimuls
roll
inc
sahf
sub
mov
push
adc
inc
mov
sti
xchg
and
test
jns
push
xor
fwait
test
nopl
mov
cmp
adc
mov
xor
sbb
and
dec
jl
insb
ljmp
adc
jp
call
je
mov
psubsb
rcll
lret
rorb
or
and
wrmsr
lock
mov
lsl
dec
pop
or
mov
call
ss
mov
maxps
repz
push
movsb
aaa
cmpsl
jb
leave
mov
sahf
adc
xchg
cmpsb
dec
fisttpl
ret
pop
daa
dec
push
rorb
mov
sub
or
pop
adc
mov
nop
mov
es
lahf
popf
mov
and
mull
ret
push
out
fisttpll
mov
shlb
loop
adc
mov
movsb
add
pminsw
add
in
cmp
ja
mov
pop
mov
mov
sub
test
and
sbb
and
mov
mov
in
stos
movsl
sbb
xchg
mov
je
mov
int
mov
pop
cmp
paddsw
ficoms
sub
pushf
adc
in
pop
xor
jp
repnz
into
adcb
fbld
fwait
aas
orl
cmp
cmovge
call
adc
lcall
aas
icebp
loop
test
iret
bound
fstpt
rorl
repz
mov
xor
sbbb
imul
pop
mov
fstps
ud0
jne
or
addb
rcr
cmovl
cs
xchg
rcrb
cmovg
adc
xor
cmpsb
mov
sahf
jo
add
pop
xor
jp
xor
sub
adcl
pop
cmp
lods
xchg
stc
adc
imul
sbb
sub
insl
pop
cltd
addr16
pop
add
jno
dec
cld
std
jge,pn
iret
mov
es
sbb
mov
mov
mov
dec
icebp
jecxz
sahf
and
xorl
push
ja
das
fnstcw
mov
jnp
pcmpeqw
push
vmread
loopne
dec
inc
mov
inc
mov
adc
ret
push
xchg
fs
lret
paddsb
jmp
push
jg
push
and
notl
pmullw
or
int3
jle
ficompl
xchg
mov
aas
jge
leave
xor
inc
loopne
test
lock
lahf
sub
xchg
insl
and
inc
movsl
out
cli
stos
insb
setno
data16
lahf
adc
sbb
add
std
xchg
cli
orb
neg
ret
mov
andnps
outsl
sbb
adc
push
xor
or
mov
cmovg
dec
js
insl
jb
jp
inc
sahf
jecxz
sbb
cld
push
addr16
jmp
test
fadds
leave
cmp
js
lods
fimull
popa
mov
xor
xchg
mov
xor
jge
xlat
les
xchg
and
or
jno
test
lods
nop
leave
cmp
sub
ja
mov
mov
sti
cmpsl
jg
push
loopne
ss
adc
jbe
cmpsb
out
mov
paddq
es
jno
repz
mov
fsts
and
jmp
and
setl
mov
fmull
dec
adc
xor
fldt
loopne
mov
cmp
xchg
fistpll
and
movsl
mov
cmp
mov
jb
fimuls
cmpxchg8b
xor
push
call
add
ss
in
push
xor
fnstenv
push
sub
dec
sbb
aad
in
fiaddl
call
sub
cmp
lret
sbb
in
cmp
jl
or
js
repz
push
ficompl
pop
stos
sete
push
stos
fs
mov
xor
jb
xor
insb
jne
stc
in
int
jb
fnstsw
movsb
xor
sar
jecxz
mov
std
test
mov
sbb
or
cld
outsl
aaa
lret
ret
out
pushf
mov
or
xchg
test
pop
sbb
adc
sub
jmp
add
push
scas
fwait
push
jns
leave
sbbb
mov
jnp
adc
push
adc
jge
jne
cmpsl
push
push
mov
jno
popa
rorl
inc
rorb
cmp
lahf
fisttpl
xchg
lret
insl
jae
out
xchg
inc
fisttps
hlt
cmp
xchg
mov
xchg
imul
mov
insl
inc
mov
push
cmpsb
rcll
sub
xor
outsl
dec
aad
pop
or
lods
pslld
pop
popa
rclb
jl,pn
xor
jle
cmp
dec
add
or
inc
fmuls
shlb
pop
shrl
popa
add
sbb
iret
pop
lds
cmp
shrb
ficomps
add
ja
js
sub
xchg
mov
gs
arpl
shlb
push
jo
dec
iret
leave
jl
xor
adc
test
or
push
enter
xchg
xor
lret
stc
and
push
into
and
insb
ds
cmp
mov
sldt
xor
pushf
sub
psrlw
fisttpll
es
add
out
inc
and
imull
and
cmpl
pop
rcl
loopne
sub
pop
jge
rsm
inc
pop
int
push
add
or
push
enter
stos
lret
outsb
or
das
pop
xor
push
sub
jnp
subb
into
rcll
xchg
ss
pop
or
popa
jno
outsb
imul
movsl
push
setg
les
wbinvd
fdivr
js
sbb
in
add
ljmp
or
sub
xor
jmp
sbb
inc
sbb
cmp
cmovl
push
std
fstpt
add
aas
je
movaps
mov
jno
daa
and
sbb
fdivl
mov
movsb
mov
insb
ret
rcll
xor
pandn
mov
cli
inc
fdivl
push
ds
jne
push
jecxz
scas
leave
jb
sbb
jo
add
mov
lock
xor
push
sti
roll
mov
and
push
sub
ret
arpl
imul
rorb
inc
fadd
inc
dec
stos
rcll
getsec
mov
in
ss
shld
sub
ret
push
sbb
mov
pop
push
cmp
jbe
xor
or
sbb
out
pop
mov
sarb
xlat
fucom
inc
ret
inc
jae
lods
cmp
sub
mov
icebp
push
out
sbb
or
mov
icebp
jo
push
fxtract
outsb
mov
popf
inc
in
mov
sbb
and
test
imul
adc
inc
inc
mov
sbb
or
test
imul
push
cwtl
imul
cli
xor
dec
and
cmp
push
xchg
and
mov
push
inc
cwtl
xchg
outsl
ja
ret
cmp
sbb
xchg
jp
push
lds
xor
mov
faddl
loopne
iret
in
movaps
add
sbb
xlat
outsl
dec
sysret
cmp
sub
mov
insl
out
test
dec
dec
mov
and
addl
das
popa
stc
xchg
loopne
pop
fists
sub
ds
jae
subb
lfs
cmp
lahf
into
clc
out
ss
bound
mov
or
dec
movb
push
femms
nop
pop
test
out
test
add
jp
sysexit
mov
jae
lret
cmpsb
sub
sahf
add
push
fucomip
psubw
hlt
pushf
fsqrt
fcomps
mov
cwtl
xor
jb
enter
punpckhbw
mov
scas
and
cwtl
mov
push
push
sbb
iret
inc
ficoml
pshufw
mov
in
push
dec
setbe
neg
cmovo
or
sbb
xchg
loopne
jbe
rol
sbb
xchg
mov
xor
jae
or
test
add
push
dec
and
cmp
and
pusha
add
or
sbb
and
aam
push
bound
mov
das
pop
inc
or
ds
mov
ja
psubd
jge
xor
push
pop
fisttps
and
jno
jl
dec
bsf
fs
adc
xor
adc
and
in
cld
andb
stos
mov
push
lds
sahf
mov
jl
int
cmp
and
mov
inc
and
inc
add
lret
push
sarl
jno
sbb
or
sub
setns
enter
mov
test
nopl
mov
cwtl
cvtdq2ps
mov
setg
jbe
pop
shl
pcmpeqb
flds
sub
and
ficoml
sub
sti
outsb
push
or
aad
pop
sub
or
inc
pmaddwd
pop
and
lret
imul
outsb
nop
cmp
cmp
xchg
bound
ljmp
xlat
mov
int
mov
aas
dec
fwait
and
test
cmp
daa
xchg
adc
jmp
pop
cmp
lods
pcmpgtw
cwtl
lock
xchg
or
cld
mov
or
jbe
xor
dec
out
lods
fildll
cltd
pusha
inc
sbb
push
xchg
add
jne
add
mov
sub
adc
btc
mov
nop/reserved
push
rorl
and
xorb
push
ja
add
sub
leave
add
cmpsl
or
dec
and
adc
lds
mov
or
mov
repnz
popa
pop
lret
lahf
dec
punpckhwd
testb
jae
add
adc
or
dec
mov
xchg
add
setne
ds
pop
adc
jl
frstpm(287
pop
fisttps
mov
mov
lret
sub
and
or
rcr
push
xor
stc
loopne
jg
pop
jnp
movsb
pushf
test
mov
mov
int
mov
xor
lret
lea
add
das
push
mov
cmp
in
xor
aas
iret
dec
xor
movsb
aam
ja
xlat
mov
mov
mov
addr16
xchg
bound
add
sbb
flds
scas
sbb
xchg
xor
and
imul
pop
subb
inc
test
fnstenv
fucom
sti
lret
sbb
cmp
or
or
cmp
xchg
lea
adc
insl
dec
cmovne
fisubs
repnz
nop
loop
mov
jmp
pop
movd
pop
push
adc
cmp
adc
push
movsb
mov
mov
test
push
xor
rcpps
jp
xchg
pop
mov
sub
vmread
shll
les
test
xorb
pop
dec
pmulhuw
push
nop
sbb
cli
or
or
fs
dec
jmp
adc
bound
push
ret
push
sub
cs
adc
clc
lods
lock
je
dec
inc
test
outsl
push
sbb
xor
mov
mov
jmp
scas
psubw
shrb
jne
cmc
les
mov
cli
insb
ss
rorb
dec
xchg
jnp
xchg
adc
inc
xor
add
sbb
jo
sbb
inc
xor
xchg
mov
adcb
sub
mov
ljmp
mov
add
push
out
inc
push
sub
loop
lods
loope
out
push
leave
int
mov
dec
xor
js
mov
repz
cmc
lods
mov
mov
xchg
out
adc
je
adc
lret
sahf
mov
and
jno
inc
adc
xor
es
ficompl
out
icebp
mov
sti
repnz
ficoms
mov
xor
push
mov
sbb
out
aas
cmp
push
iret
daa
mov
hlt
cmp
pop
enter
dec
add
in
mov
mov
or
dec
add
cmp
fcompl
lcall
aam
cmp
sbb
push
shll
jne
mov
add
jb
inc
inc
mov
xor
jnp
add
out
repz
sbb
adc
jns
paddusw
fxch
jl
mov
movsb
movsb
comiss
fs
xchg
jge
jb
int
pop
pcmpeqd
add
dec
lahf
ds
bsf
cmc
sbb
xchg
aaa
xor
mov
ret
xchg
mov
adc
mulb
sarl
mov
test
punpckhdq
jae
adcl
clc
mov
mov
jne
push
int
xchg
outsb
push
insb
adc
xor
bound
fwait
ss
loop
pushw
add
pminsw
cmp
dec
push
cli
cmp
inc
std
push
and
insl
inc
sbb
sti
mov
xchg
cli
test
sub
in
mov
xor
int
xor
js
stos
xor
and
emms
cmpsl
out
pop
push
sub
xchg
arpl
jecxz
dec
cli
adc
xchg
cld
addl
mov
fs
push
aad
xor
xor
icebp
movsl
xor
popf
inc
enter
psraw
inc
fisubrl
inc
or
arpl
nop/reserved
mov
shl
stc
and
outsl
pminub
cwtl
add
cmpsl
fsubs
xor
inc
inc
mov
xor
inc
mov
mov
loopne
adc
addl
fwait
mov
fiadds
js
mov
nop
mov
mov
adc
xchg
cmp
out
scas
in
sbb
es
xchg
adc
mov
sbb
sub
xchg
xor
movsl
in
xorl
or
nop
emms
mov
int3
cmp
lahf
cmpsl
jns
aam
les
mov
or
incb
add
xchg
dec
loopew
mov
xor
lcall
movsb
in
rorl
mov
ljmp
cli
mov
sti
testb
movsl
pop
fsubl
push
imul
mov
mov
add
in
push
add
lahf
loopne
adc
push
in
dec
or
invd
mov
xor
cltd
fstl
cmpb
xchg
pminub
and
xchg
pushf
loop
cmc
xchg
add
lock
inc
jne
and
sahf
comiss
inc
inc
lea
sub
push
sbb
mov
imul
fwait
adc
mov
shr
jne
mov
jle
xchg
or
pushf
jns
lcall
mov
test
aaa
emms
outsb
mov
sbb
imul
xor
inc
ret
bswap
mov
popf
dec
out
ja
psubb
divb
pop
pop
psubd
jle
loope
cmp
mov
jne
jl
sub
fdiv
cmp
push
dec
dec
xor
dec
sbb
ja
fs
shld
push
xor
dec
seta
stos
jae
aad
jle
out
mov
and
mov
sahf
mov
dec
pushf
mov
inc
sti
xor
mov
dec
mov
xorl
outsl
inc
stc
aaa
cmp
call
outsb
pmuludq
add
sub
daa
or
jg
mov
aam
cmc
pop
nop
or
addr16
or
adcb
enter
and
adc
aad
in
adc
sub
in
xchg
je,pt
xor
sbb
ss
or
mov
arpl
adc
fs
sbb
cmpsb
out
movsb
aaa
loopne
dec
js
lods
bound
xchg
stc
movsl
out
adcl
push
xor
ret
sbb
mov
jl
sbbb
fisubs
xor
xchg
jno
mov
xchg
fmuls
sbb
outsb
push
bswap
pusha
repz
jns
iret
cmp
shlb
pop
sub
xor
hlt
add
nop
into
rorl
jle
push
jae
bnd
imul
mov
andps
decb
mov
andl
pop
xlat
por
adc
movsb
je
data16
das
test
mov
ret
scas
adc
mov
rcrb
xchg
add
mov
enter
xchg
pop
rolb
xchg
into
jne
aam
ret
movsbl
cmp
mov
orb
jmp
jae
adc
outsl
mov
xchg
decl
cld
fnstenv
jno,pn
inc
push
inc
jnp
inc
push
cli
test
push
dec
lock
cmp
je
or
push
sbb
mull
push
dec
imul
addr16
popa
jne
mov
lds
xchg
hlt
scas
sarb
mov
ret
ds
jne
cs
sbb
fsubrl
addl
or
push
lods
mov
mov
in
hlt
js
gs
xorl
cmp
inc
xlat
xchg
fsubrs
push
sbb
adc
es
stos
mov
push
in
push
aaa
and
push
mov
add
sarb
fimuls
ljmp
inc
lahf
test
mov
xor
outsb
movsb
setp
xor
hlt
aas
das
js
push
mov
xchg
xor
sub
push
sti
daa
cli
push
test
push
loope
mov
out
ret
add
push
mov
jae
addps
adc
jo
push
mov
jbe
in
xlat
or
push
ret
mov
cmp
sbbb
out
sub
popa
mov
adc
jp
jg
out
sub
lret
sub
cld
push
rorl
ret
icebp
setns
adc
cmovg
cmpb
je
mov
sldt
leave
or
popf
add
dec
cmp
ja
das
mov
adc
xor
pushf
pop
sub
push
mov
mov
je
or
xor
cli
sub
test
adc
mov
cmpsl
push
dec
pop
lahf
mov
jne
jb
or
mov
hlt
cmp
fmuls
inc
ds
imul
cmc
xorl
mov
shl
je
jno
jmp
push
dec
dec
mov
pusha
jbe
ss
mov
push
xor
orps
orb
lret
sub
fidivl
hlt
repz
push
and
das
lret
movhps
dec
lcall
loopne
lret
cmp
popa
imul
cmp
setl
pusha
outsb
maskmovq
testl
jmp
mov
stos
and
lahf
inc
mov
pop
movsb
enter
jno
xor
sub
xor
push
xchg
mov
cmpsb
rorl
xchg
lea
mov
jns
sbb
xor
xor
sbb
push
inc
in
stc
out
sub
mov
fcoms
popa
sub
adc
ss
mov
out
xchg
mov
fdivs
jle
jno
xchg
cmp
enter
jl
ret
mov
xor
repnz
shrl
xor
jl
cmp
inc
mov
je
pand
mov
pop
in
lahf
xchg
ja
pop
jge
mov
xor
push
pop
mov
push
pop
dec
mov
push
mov
sbb
stos
cmp
xchg
lahf
jg
out
enter
xlat
cwtl
popa
push
out
pop
inc
add
dec
jp
sub
jb
xchg
ljmp
adc
ret
dec
and
inc
aam
pop
psrld
jg
xchg
ljmp
sbb
mov
cltd
iret
xor
movlps
inc
rorb
and
mov
and
cvtps2pd
jmp
inc
ss
xchg
rdtsc
push
movsb
aam
movsl
scas
jl
fld
outsb
mov
lahf
fisttps
push
mov
adc
jo
pop
lods
push
mov
test
xor
adc
mov
sahf
adc
mov
add
lgs
cmp
test
rcrl
int3
xor
jmp
in
add
scas
sbb
xchg
mov
pop
test
mov
push
and
pop
nop
loopne
iret
xchg
bound
jle
xor
aam
sbb
gs
inc
inc
jmp
inc
sbb
cwtl
sbb
lcall
sub
imul
mov
dec
xor
lret
punpcklbw
les
cwtl
sbbb
lahf
jno
fbstp
bound
adc
inc
dec
fcompl
clc
sbb
outsb
or
das
add
push
sub
fiadds
arpl
mov
les
ljmp
fwait
sub
pop
roll
mov
sahf
enter
lahf
mov
into
ljmp
lret
jle
aad
push
fisttpll
mov
jbe
pop
adc
add
leave
xchg
jb
or
movsb
mov
imul
ret
lods
insb
setb
xor
mov
test
pop
mov
push
xchg
repnz
jg
push
mov
mov
fsts
mov
lods
testb
cmpsl
mov
fstp
mov
cmp
xor
adc
cmp
shll
lar
xor
pop
outsl
dec
test
negl
dec
btc
pop
xlat
bound
adc
movsl
xchg
scas
mov
mov
rclb
int
mov
mov
fwait
cmpsb
pop
jg
cli
loope
or
mov
jae
xchg
jb
cwtl
jns
adc
imul
and
dec
pop
js
xor
jne
test
ret
mov
pand
cld
xor
or
jb
into
lcall
popf
mov
cmp
jo
dec
add
ss
xchg
mov
pop
orl
js
xor
add
mov
push
mov
lret
fsubrl
lar
cltd
test
sbb
sub
mov
push
rcrb
shll
pop
call
push
rep
jb
push
daa
push
ja
imul
inc
mov
mov
add
or
clc
bound
lods
or
and
xchg
lods
push
inc
btr
pop
mov
inc
test
add
mov
fucomip
xchg
push
rolb
fisubs
add
loopne
into
test
sti
cmovb
mov
loope
icebp
xchg
push
stos
nop
adc
mov
pavgw
adc
movsl
sahf
push
push
bnd
loope
push
mov
push
jae
mov
in
in
sub
test
sarl
sub
mov
push
mov
popl
lahf
adc
xor
sarb
xchg
and
out
push
js
idiv
int3
ja
mov
popf
adc
sbb
mov
je
test
sub
jl
aam
out
sub
push
stos
fisttpll
or
cmp
or
paddw
es
push
nop
add
dec
cmp
add
loopne
in
dec
sbb
cmovo
lds
aas
inc
inc
mov
jne
cmp
fs
testb
les
push
pshufw
sbb
xlat
jmp
cwtl
movntq
idivb
adc
push
clc
repnz
in
jns
paddb
or
cmpsb
fnstenv
pinsrw
into
pcmpgtw
mov
cmp
sub
sub
adc
lret
js
int
xor
and
pop
ret
ud0
hlt
scas
iret
jno
push
mov
pop
inc
insb
push
rcll
push
test
or
jecxz
outsl
lods
mov
mov
imul
adc
fldl
pop
jecxz
idivl
cmpsb
add
adc
pshufw
cmpb
jae
sub
pop
in
fistps
xchg
push
push
pusha
loopne
or
sbb
push
test
mov
shl
sahf
dec
push
fldcw
jo
dec
push
mov
sub
jbe
aaa
movaps
enter
xor
mov
hlt
inc
adc
adc
adc
popa
ljmp
jmp
leave
pop
sbb
mov
xchg
sahf
jp
lea
testb
out
jnp
adc
mov
xchg
jae
mov
and
out
nop
sbb
les
xlat
mov
movsl
js
pop
cmpsl
inc
es
sbb
inc
xor
cmc
packsswb
dec
idivl
cwtl
jo
loope
push
lds
and
xlat
xchg
mov
sub
xchg
or
sbb
dec
les
js
push
dec
shll
sbb
divb
pmulhuw
or
pop
xchg
insb
out
es
mov
scas
pop
mov
xor
addr16
jp
je
sbb
pop
loopne
xchg
vmread
xor
comiss
lret
fwait
pusha
or
push
cltd
push
mov
in
sub
inc
lds
mov
xchg
repnz
pop
clc
faddl
inc
mov
lret
in
cmp
and
xchg
test
adc
jae
fincstp
out
out
mov
stc
sub
mov
imul
aad
adcl
test
ss
dec
add
dec
mov
push
sub
dec
scas
inc
scas
add
jbe
push
jo
adc
ja
hlt
xchg
cvtdq2ps
ljmp
out
fs
in
push
fwait
loopne
sarb
sub
aaa
imulb
sahf
adc
adc
inc
test
ret
mov
fldcw
and
sub
pop
adc
sahf
lahf
clts
loopne
push
mov
and
ja
mov
iret
lret
mov
in
cmpsb
movzwl
arpl
clc
fmuls
pop
ja
scas
adc
add
aam
stos
xorb
dec
fnstenv
fimuls
cmc
mov
lcall
sbb
punpckhbw
clc
push
push
jp
sbb
jp
xlat
jecxz
addr16
cwtl
dec
mov
out
mov
mov
loope
fisubrs
xor
mov
xor
sbb
push
pop
loopne
xor
mov
push
cmp
shrb
mov
les
pop
mov
mov
and
mov
js
lret
imul
rcll
adc
add
call
mov
push
pop
rcl
sets
clc
fs
xor
sbb
push
call
or
std
push
int3
ljmp
clc
loope
sbb
imul
adc
mov
clts
cwtl
pop
mov
enter
jl
pop
mov
sbb
push
mov
testl
das
inc
sbb
leave
adc
sub
cmpsl
adc
hlt
jbe
mov
mov
jle
mov
mov
push
mov
repnz
jmp
sub
test
add
push
lret
mov
or
fidivrs
push
push
xchg
fwait
mov
lds
lret
outsl
add
pushf
xchg
dec
dec
cli
addr16
push
sbb
xchg
pop
setle
push
popa
cmovs
or
xchg
aam
inc
cmp
jmp
dec
enter
sbb
int
lret
jecxz
sub
inc
cs
fisttpl
fsubrp
es
add
cld
xchg
cmp
lock
push
dec
popa
gs
push
loopne
shlb
adc
movsl
and
fs
mov
push
les
inc
fisubrl
mov
push
fists
movsb
mov
cmp
in
inc
and
jno
fsubr
notb
enter
insl
and
add
adc
adc
es
sbb
stos
add
xor
and
xchg
add
fldcw
dec
xor
mov
cmp
inc
hlt
mov
cmpsl
mov
aam
ss
cmp
adc
xchg
jb
sti
enter
sbb
dec
addr16
aaa
adc
ret
sub
icebp
xchg
push
cmp
mov
mov
and
repz
lock
add
outsl
push
shll
xor
fs
mov
out
ret
adc
inc
push
jle
cmp
lcall
ljmp
aam
test
wrmsr
mov
les
jno
loope
repz
push
repnz
leave
ret
outsb
or
xchg
jae
neg
bound
imul
jg
jno
shll
sahf
in
push
cmp
ja
leave
sub
ljmp
lea
add
xor
push
filds
enter
sbb
syscall
jg
and
out
movsl
outsb
sub
push
ret
jecxz
push
test
setp
pop
adc
cld
adc
sub
adc
pop
fwait
mov
or
ds
rolb
cltd
mov
jecxz
jb
mov
pop
cmp
and
push
xor
or
fcoms
jl
push
pcmpeqd
inc
and
mov
cmp
ja
sub
add
mov
into
adc
fisubrl
js
stc
in
inc
mov
cmpsb
fs
in
push
pop
xchg
jns
stos
ja
scas
mov
mov
test
in
xchg
and
sbb
push
pop
cwtl
dec
push
jle
inc
push
xor
rorl
mov
push
add
jmp
inc
sub
and
pop
push
repnz
les
mov
imul
add
sub
shll
inc
outsl
mov
xor
push
loopne
lfs
jns
jp
xchg
push
jg
xor
dec
stos
jne
in
inc
or
pop
leave
lret
or
cli
xchg
mov
addr16
inc
lea
loopne
mov
bound
imul
sub
pop
loopne
jnp
test
adc
lret
sub
out
xchg
nop
out
mov
xor
dec
mov
arpl
mov
jo
mov
inc
or
dec
loop
stos
into
mov
xlat
or
or
and
arpl
roll
dec
xor
std
fs
pushf
decl
push
iret
lar
adc
std
push
xchg
scas
cld
ret
je,pn
jb
jg
or
cvtpi2ps
mov
movq
inc
loope
in
arpl
xor
std
faddp
popa
cvtps2pi
push
sub
mov
pusha
aas
jae
mov
pop
add
xchg
leave
shlb
sbb
or
ret
inc
lahf
popf
filds
rol
cmp
inc
mov
jmp
lret
mov
ds
pop
xor
xor
fimull
jmp
aaa
rcrb
fisubs
cmp
jmp
lahf
adc
inc
cmp
imul
push
rorb
sub
xchg
mov
cmp
jg
add
xchg
movsl
push
mov
mov
jecxz
adc
shrl
mov
sbb
xor
loop
cmp
bswap
dec
addr16
sbb
cli
divl
cmovbe
sbb
stos
nop
enter
pop
fucomp
les
mov
xor
pmaddwd
js
adc
setge
jo
ss
adc
iret
add
dec
xchg
jg
add
adc
push
jbe
js
or
mov
xor
inc
add
push
xchg
repz
add
jg
std
and
or
shll
pop
mov
btc
add
sahf
mov
pand
fidivl
pop
sub
loope
das
lds
sbb
jbe
xlat
shrb
mov
add
out
shrb
fimull
jge
pcmpgtw
dec
pop
lock
adc
jp
adc
pmuludq
mov
jmp
push
xchg
movsb
sbb
xor
addr16
mov
dec
test
das
jb
loopne
shl
in
add
movsb
imulb
add
fdivrp
mov
cltd
je
xorb
sub
imulb
push
rdtsc
pop
inc
sub
jecxz
sub
jmp
fadds
or
enter
or
adc
mov
sbb
insb
ja
ss
mov
and
dec
adc
xor
arpl
imul
or
push
lea
iret
and
push
dec
cmp
xchg
int
movaps
inc
imul
icebp
xor
inc
inc
lea
xor
xlat
mov
inc
and
sbb
pop
addr16
cmp
fdiv
and
aad
mov
icebp
fwait
push
adc
cld
inc
sete
rorb
ret
shrl
cmpsl
inc
cmpsb
add
stos
andb
sahf
bound
in
fdivs
inc
and
mov
mov
testl
adc
test
jo
mov
jl
jb
inc
dec
pmaxsw
ret
adc
lret
pcmpeqb
mov
pcmpeqw
into
mov
subl
add
test
xchg
fs
hlt
ds
outsb
sbb
sub
cld
sub
lret
sbb
and
and
sub
xor
mov
arpl
fildll
je
pavgb
shlb
lods
dec
and
lahf
add
pop
add
cmp
xchg
int3
add
outsl
mov
mov
pop
push
inc
nop
push
repnz
xor
jmp
lahf
ja
fmull
mov
sub
adc
and
pop
shlb
cmp
dec
sarb
iret
mov
sub
and
xchg
mov
test
insl
cmc
mov
int3
add
sbbl
and
dec
xchg
dec
push
mov
jp
ret
mov
add
pop
pop
call
sub
mov
in
mov
cmp
mov
bound
pop
mov
stos
push
xor
cmp
popf
push
xor
sbb
je
xchg
in
and
jno
jb
sbb
outsl
adc
dec
cmp
add
outsb
mov
or
mov
andl
shrl
or
sti
lods
btsl
div
bndldx
adc
xor
pop
adc
sub
xlat
loope
loop
mov
repz
inc
sub
psrlw
jg
mov
arpl
add
scas
sbb
dec
jns
xchg
lods
mov
inc
jp,pt
cmp
pop
add
jo
inc
ja
mov
fwait
pmuludq
pop
or
aad
or
aas
in
repz
or
pop
adc
daa
mov
leave
outsl
jb
adc
mov
addr16
mov
call
rolb
movsb
adc
inc
push
and
xchg
fnstcw
rol
push
add
dec
out
adcb
out
pop
rclb
pop
inc
testb
stos
dec
fisubrl
pop
push
cmpsb
out
test
inc
mov
fsubrs
push
sub
push
punpcklwd
push
push
inc
ja
fisubl
xchg
mov
mov
adc
loope
bswap
xor
fsubp
in
inc
cltd
push
mov
popa
movsl
mov
dec
cmp
aad
fcomi
or
push
scas
popf
push
jge
mov
enter
imul
lods
int3
shll
jg
adc
cmp
add
mov
leave
mov
fucomp
push
ffreep
add
mov
fildl
jne
jb
lods
sub
ds
inc
mov
mov
bound
and
aam
xchg
cmp
in
jae
mov
into
adc
inc
sub
les
xor
in
inc
arpl
out
movsb
cmp
push
sbb
arpl
scas
stos
test
adc
mov
test
xlat
imul
psrlq
and
mov
rclb
aam
imul
lcall
jbe
adc
lods
mov
cmpb
movsl
xor
mov
pop
das
or
inc
inc
std
push
ss
clc
or
sete
inc
popa
xor
push
sub
movsl
push
out
mov
fisubrl
xor
sbb
adc
xchg
popf
outsl
nopl
push
loopne
hlt
sbb
std
loopne
and
adc
scas
nop
pop
pmaxsw
popf
mov
loop
ficoml
jge
loop
popa
ss
dec
add
loop
in
sbb
maxps
pop
lock
mov
mov
xchg
lock
mov
dec
mov
fistl
cli
lock
sbb
popf
cmp
mov
xlat
sti
nopl
lods
andb
xchg
add
outsb
fcomps
xchg
push
loop
push
lock
lcall
aas
add
setnp
daa
sbb
xor
dec
xchg
fldt
inc
jecxz
je
in
imul
cld
rcrb
xorl
mov
jns
push
scas
xchg
test
push
cmove
dec
dec
add
inc
mov
aam
pop
into
mov
lahf
pop
stos
shll
push
xchg
dec
movaps
inc
popa
sbb
inc
or
jo
cmc
loope
aam
out
xlat
paddd
in
adc
loopne
lahf
pop
mov
push
pshufw
jg
xchg
popa
insb
sbb
cmp
ss
mov
inc
adc
loopne
jne
orb
cld
cmc
in
scas
push
sub
js,pt
xorps
rorb
adc
iret
shl
mov
pop
jns
leave
jl
cmpl
test
fistpll
out
stc
btr
aad
xchg
stos
jle
mov
sub
cmp
cmpsb
scas
inc
std
popa
pop
or
arpl
cbtw
xor
add
popf
jecxz
adc
mov
aaa
daa
mov
inc
arpl
xchg
dec
mov
adc
int3
cmp
mov
orb
xor
sbb
jnp
ret
je
cmp
pop
jg
rcrl
pop
and
ret
sbb
add
out
lods
sub
out
iret
ds
and
packsswb
xchg
jo
mov
incl
gs
sbb
fs
xor
sbb
ret
xlat
or
lods
dec
pcmpeqb
outsb
mov
add
lock
aas
push
ja
loop
ret
adc
cmp
xor
incb
ljmp
cmp
jl
dec
adc
push
add
enter
cs
sahf
pop
ss
xchg
daa
scas
sub
sarb
ffree
insl
rolb
fwait
inc
cmp
xchg
in
or
fmull
xor
xor
fisttpll
xchg
mov
xchg
and
mov
add
out
rep
out
rclb
fmull
push
mov
subb
mov
mov
int3
push
jns
and
int
add
pop
subps
inc
and
paddsw
inc
iret
xor
shll
push
pavgb
aaa
mov
mov
testl
mov
jno
scas
cli
hlt
xor
js
pop
stos
call
out
mov
js
jp
pop
cpuid
dec
xchg
or
fisttpl
ds
cmc
cmp
inc
lret
adcl
or
and
add
fsts
sti
pushf
rorb
push
enter
rdmsr
in
out
mov
cmp
push
inc
nop
or
pop
mov
std
ljmp
sbb
dec
clc
dec
inc
and
or
das
inc
mov
stos
bts
mov
cwtl
push
into
repz
pushf
add
jmp
jb
cmovne
pop
xor
out
pop
xchg
in
imul
out
enter
movl
xchg
icebp
adc
sahf
lods
or
xor
pop
popl
inc
rdtsc
leave
add
test
movsb
cmp
jecxz
adc
add
rorb
scas
adc
rorl
loop
cmove
fdecstp
sub
jmp
mov
dec
loop
shlb
pop
lea
bound
popf
jp
fists
jl
loopne
inc
mov
in
mov
xchg
push
repz
add
scas
les
aas
andl
paddq
dec
movsb
push
in
adc
stos
push
fs
adc
cwtl
xor
stos
mov
xorl
insl
lods
fidivs
iret
mov
insb
jne
xchg
mov
sbb
ljmp
jge
notl
cmp
add
ud0
aaa
push
add
hlt
cmpsb
xadd
adc
and
mov
push
pusha
xorps
jg
push
inc
cmp
sbb
int3
rclb
setno
rcl
push
push
ret
fwait
movsl
scas
btr
jecxz
std
rol
movd
push
jns
test
fisubs
leave
cmp
psubusw
sbb
dec
push
sbb
and
out
aad
fmulp
sahf
sub
fwait
jge,pt
out
sbb
push
mov
mov
imul
mov
and
rdpmc
mov
push
sub
pop
call
or
loopne
jae
xchg
mov
sub
or
popf
test
mov
push
js
sub
sub
and
push
push
mov
xchg
adcb
movsl
jg
movsb
fdivs
sbb
mov
rcll
dec
cmpsl
add
lcall
push
mov
xor
inc
imul
cltd
push
fsubs
dec
pop
or
fwait
inc
adc
pop
mov
and
js
lcall
pop
and
orps
std
fisttpl
mov
jo
add
xchg
xchg
cli
adc
pmulhw
inc
adc
xchg
jns
dec
negb
cmovae
sub
push
mov
or
jmp
imul
adc
fwait
adc
adc
mov
pop
out
dec
shrd
imul
xor
sub
xchg
inc
cwtl
repnz
adc
and
cmp
bound
sub
dec
dec
or
push
imul
arpl
mov
ds
pop
jmp
rorl
pop
xor
sbb
popa
iret
dec
mov
scas
cmp
cmp
lock
jae
ret
xor
sbb
pandn
jle
adc
and
or
stos
test
jne
out
fdivr
aas
les
xor
imul
xchg
xor
xadd
in
mov
mov
and
test
scas
push
lahf
jge
jmp
fwait
pop
push
inc
cwtl
gs
lahf
les
dec
dec
push
sahf
aad
jmp
push
ror
mov
xchg
imul
dec
cvtps2pi
in
les
sub
pop
mov
fnstenv
mov
inc
scas
psrld
fmul
jne
fstl
push
pop
leave
jmp
or
sbb
mov
cmp
les
and
mov
push
pop
movsb
cmpsl
xchg
andps
and
ljmp
add
movsb
mov
mov
arpl
fwait
push
daa
lret
mov
je
mov
fbstp
pop
mov
cltd
aam
movq
test
scas
cmp
pop
inc
push
in
das
xchg
mov
push
sub
fldenv
gs
outsb
pop
stc
setno
cmp
xor
adc
jmp
push
lock
es
ffreep
pop
mov
psraw
fwait
xlat
mov
aad
cwtl
xrelease
ret
or
outsl
lret
sub
and
mov
mov
mov
outsl
cs
testl
and
aad
or
neg
sbb
jmp
sub
jp
or
das
add
fsts
add
push
sbb
jle
js
das
je
and
push
cmp
pop
rorl
popa
mov
daa
jecxz
push
adc
cmp
xchg
arpl
fidivrl
adc
xchg
sbb
rolb
insl
bts
popf
xlat
fs
push
movaps
fimull
movlps
divb
nop
repnz
aad
scas
punpcklbw
iret
cmovge
jo
xor
pop
in
out
test
jno
mov
ss
sub
or
sbb
mov
jno
push
lsl
sub
addr16
lahf
in
test
xchg
xor
jae
mov
and
mov
inc
iret
comiss
pop
mov
popf
xor
lods
nop
cmp
and
sub
mov
mov
gs
lret
add
pop
scas
vmwrite
je
mov
maskmovq
notl
cmp
adc
mov
enter
and
clc
mov
lret
out
mov
or
mull
and
jae
and
adc
dec
mov
rcl
ret
lahf
stos
rdtsc
push
dec
dec
push
idivl
cmp
clc
dec
dec
test
paddusw
xor
and
nop
xchg
dec
sahf
leave
in
adc
je
jo
mov
sub
xor
lcall
and
sub
xor
gs
inc
sbb
neg
inc
lods
or
sub
push
mov
faddl
mov
out
sbb
rep
xchg
outsb
arpl
or
in
and
xor
data16
mov
les
dec
in
or
jnp
dec
jno
fwait
pmaxsw
adc
popf
rcr
jge
and
sbb
xor
ja
cmpl
lret
test
dec
xor
jbe
xchg
repz
lea
inc
dec
roll
outsl
je
call
push
lea
cs
or
hlt
pop
dec
into
jge
dec
jno
cmp
bsf
push
ss
test
dec
mov
popa
jno
sbb
ret
divb
sarb
loopne
xchg
adc
scas
jp
push
icebp
bswap
xchg
stos
mov
jl
or
lea
lods
clc
and
test
daa
xchg
cmc
jmp
pmullw
jnp
push
add
mov
xor
clc
cmp
out
rol
sbb
outsb
xchg
shlb
fstl
mov
and
scas
jo
adc
cmpsl
aad
repnz
push
movlps
mov
and
sidtl
pop
std
and
pavgw
out
insl
xor
lods
jae
js
movsl
paddd
idivb
jg
lahf
mov
and
add
dec
push
addr16
inc
pushf
lahf
arpl
inc
pop
popa
inc
xchg
ss
out
daa
movsl
clc
movd
inc
in
pop
faddl
fldcw
cmc
mov
and
jne
cltd
inc
mov
push
push
jb
rolb
iret
push
fwait
scas
imul
ret
add
std
bswap
pop
dec
or
loope
ljmp
dec
push
popa
packsswb
mov
outsl
cmpsb
lahf
ss
mov
mov
and
fnstenv
adc
seto
mov
pcmpeqw
lods
and
adc
inc
or
xchg
and
mulb
jno
shr
dec
in
cmp
sub
pop
pop
sahf
fwait
adc
test
add
mov
sub
xchg
out
lcall
cmp
fdivrp
xchg
adc
fwait
syscall
das
subb
sub
push
xchg
lret
pop
mov
mov
incb
setge
je
cmp
push
push
or
sbb
sub
loope
mov
sbb
aas
psadbw
call
or
cmc
jg
sbb
jmp
insb
push
mov
cmp
sbb
push
out
loopne
mov
movsb
cmp
imul
cmpsl
pop
imul
mov
divps
and
arpl
mov
sbb
sbb
push
clc
xchg
shl
pop
mov
xor
bound
aad
test
cmp
aaa
mov
arpl
movsbl
call
lret
or
xor
inc
psrld
push
jb
fisttpl
adcl
call
jle
adc
test
orb
push
imul
lods
push
sub
push
decl
pop
mov
jns
xchg
repz
add
loopne
daa
dec
lods
pop
add
gs
iret
and
lahf
push
movswl
jbe
jg
inc
imul
adc
bsf
or
sbb
fldl
mov
rcpps
xchg
dec
sbb
es
fistpll
dec
push
push
mov
push
mov
add
mov
paddsw
xlat
aad
notl
fdivrs
jno
mov
sbb
lahf
add
mov
sub
in
cmpsb
mov
add
popa
flds
jl
dec
ja
repnz
xchg
in
dec
sti
mov
sgdtl
xchg
movsb
add
daa
cmp
push
fsubrs
adc
cmp
xchg
lret
testb
pop
test
imul
dec
mov
pop
and
cs
xchg
xor
xchg
and
inc
xor
or
jmp
and
in
adc
and
adc
out
add
lret
xchg
xor
add
ljmpw
or
sysexit
xchg
mov
adc
cmpsb
mov
sub
movsb
test
xor
push
dec
mov
inc
movsl
pop
clc
mov
cmp
add
aad
stos
pushl
add
jo
pop
pop
lcall
cmpsb
and
push
dec
outsb
pop
out
push
sub
add
cs
mov
sbb
push
aas
adc
xchg
xchg
mov
adc
sbb
movb
fdivr
mov
jg
lea
mov
xchg
mov
sub
xchg
xor
cmp
mov
adc
out
imul
mov
inc
sbb
fdivrs
inc
lahf
lret
es
jmp
inc
lods
scas
arpl
mov
mull
mov
repz
les
cmp
add
sub
jecxz
push
cmpsl
cli
pop
push
and
inc
dec
sti
adc
mov
es
test
test
adc
push
aam
mov
sub
and
cmpxchg
mov
cmp
psubw
sub
js
popl
aad
push
stos
add
roll
xchg
push
and
orb
leave
out
xchg
ds
cltd
cwtl
adc
mov
ss
sbb
int
pop
dec
push
inc
out
xor
test
outsb
mov
rcll
add
jnp
mov
jge
imul
dec
pushf
shl
jg
inc
add
push
pop
pop
jecxz
lods
xor
test
xchg
sbb
out
ja
push
scas
mov
paddq
popf
xor
sbb
lahf
imul
add
fwait
mov
cmpxchg
arpl
loopne
dec
jo
mov
cmpsb
out
xor
or
jbe
and
add
xor
cmova
push
dec
pop
inc
inc
psrld
push
dec
xor
pop
adc
decb
and
enter
jo
or
xor
sub
add
xorl
insb
mov
stos
jp
js
xchg
mov
jecxz
cld
adc
repnz
pcmpgtb
repnz
das
out
xsavec
xor
jne
mov
orb
scas
mov
std
lods
insl
movups
xlat
ss
lock
cmp
mov
outsl
jp
xchg
inc
adcb
push
lods
lahf
mov
leave
sub
notl
mov
xchg
or
add
and
orl
jecxz
mov
or
mov
mov
sub
pslld
out
iret
mov
adc
and
adc
lods
push
sub
xor
push
mov
inc
mov
ds
mov
sub
movlps
insl
pop
jmp
mov
pop
loopne
dec
xchg
leave
cmp
or
cmp
ficoml
add
outsl
push
xlat
xor
lahf
pop
lods
loopne
cs
pushf
pop
jmp
mov
cltd
int
inc
cmpxchg
and
sub
jl
leave
and
or
and
mov
mov
or
sbb
cltd
fidivs
jp
mov
testl
mov
jg
or
movsb
bswap
test
jmp
test
xor
gs
shufps
mov
adc
mov
packsswb
and
sub
xchg
pop
cmp
cvttps2pi
mov
xor
es
inc
sub
mov
out
mov
jns
push
cmp
pslld
sbbl
sahf
mov
out
jecxz
movsb
inc
push
cld
inc
xor
psubusb
add
cli
jp
imul
sar
ja
scas
adc
dec
sbb
cmc
psrad
cs
push
push
mov
lea
insb
adc
mov
fisttpl
and
popa
shll
mov
out
mov
fimull
mov
bound
push
mov
pop
mov
pop
add
adc
lcall
mov
lods
testl
fwait
inc
test
dec
inc
lahf
scas
and
scas
mov
addl
xor
push
frstpm(287
imul
add
addr16
mov
out
hlt
movsb
loop
jne
jno
sahf
gs
rolb
or
mov
jmp
ds
sarb
jno
ret
loop
and
jae
adc
mov
jne
in
lock
cmpsb
jmp
cs
push
jb
punpcklbw
sahf
mov
gs
movzbl
ja
and
or
in
out
rcl
xchg
adc
jb
and
mov
mov
cmp
outsl
shrl
xchg
dec
icebp
jae
push
out
mov
cli
rorb
insb
cmp
jg
bound
test
mov
sbb
push
aad
loop
pushf
addl
ret
mov
push
adc
int
scas
shrl
lcall
seto
push
insl
adc
into
icebp
jbe
sub
xchg
and
sbb
or
mov
lods
mov
adc
aas
cmp
xchg
dec
inc
int3
insl
decb
out
sti
je
ficomps
ucomiss
pop
mov
loope
mov
ljmp
and
dec
rorb
xchg
gs
stos
test
sub
ds
or
ja
bswap
test
xor
push
xchg
mov
dec
inc
adc
sar
pop
enter
push
movsb
adc
je
test
push
ss
fimull
mov
pusha
mov
fs
mov
jne
bswap
sti
adc
adc
gs
dec
out
xor
les
sub
adc
sahf
cmp
ds
mov
push
jecxz
sub
jecxz
mulb
adc
pop
paddsb
repnz
sbb
xor
cmp
inc
add
ud1
or
adc
xchg
ficomps
xlat
repnz
es
pop
dec
and
outsl
arpl
push
xchg
fcmovu
in
add
rclb
mov
fldenv
iret
loopne
sahf
mov
sbb
mov
add
mov
cld
dec
jnp
popf
iret
push
adc
lret
jmp
mov
movsl
mov
leave
push
xchg
mov
push
movaps
arpl
pushf
je
punpckhdq
ljmp
sbb
je
loop
sbb
cmpsl
lret
cmovno
js
mov
sbb
and
or
inc
or
cmc
inc
inc
push
repz
bsf
xor
mov
jnp
ljmp
xor
out
rsqrtps
popf
and
jge
repz
imull
test
clc
mov
cmc
insb
sub
jno
push
out
bound
mov
dec
negl
and
out
add
mov
pop
sub
lret
pop
std
pop
in
jno
jno
lfs
int3
adc
fstpl
pop
andps
dec
stos
loop
lret
in
bound
dec
xlat
inc
sarb
arpl
movntps
hlt
gs
jae
xor
faddl
push
and
fimuls
cmp
gs
movb
popa
pop
sbb
xor
or
and
psubusb
cmp
jp
das
mov
inc
dec
and
push
mov
jecxz
scas
rdmsr
fsubr
jmp
imul
jbe
ret
pushf
stos
clc
sti
or
push
out
add
cmpsl
adc
fldenv
rcrb
xchg
lods
cs
mov
imul
inc
test
jl
lar
xchg
push
js
xor
push
les
pop
inc
dec
xlat
push
mov
and
mov
ret
leave
ljmp
mov
pop
push
pop
or
cwtl
adc
sbb
outsb
sarb
shr
sub
hlt
and
and
fdiv
mov
mov
rclb
xchg
fnstenv
je
push
push
test
adc
dec
ret
movsb
ja
psubsb
and
pop
or
outsl
dec
mov
rcrb
aam
push
subb
cmp
popf
scas
rdmsr
mov
mov
adc
mov
pop
repz
mov
mov
and
cmc
xor
or
cmp
cmp
xor
cltd
sub
stos
stos
mov
shrb
xorps
lret
rolb
dec
lock
xchg
jno
push
xchg
filds
stos
movsl
sbb
mov
sbb
or
test
rcrl
xor
sbb
sub
jne
sahf
fs
out
mov
loopne
xchg
les
sub
mov
repnz
mov
cmp
add
sbb
and
arpl
push
push
dec
inc
mov
pxor
push
push
and
sbb
subb
sub
xchg
je
jno
pop
rcr
loopne
add
push
adc
fwait
push
es
sar
call
sbb
or
cmpsb
test
cld
mov
in
lahf
add
in
cwtl
sbbl
pop
cmp
scas
scas
push
out
xor
jae
xor
mov
push
movsb
std
inc
sbb
inc
push
xor
data16
stos
mov
mov
out
daa
pop
pop
setl
mov
xchg
stc
bswap
xchg
pusha
shlb
iret
or
aaa
or
or
test
lcall
cmp
ss
leave
loopne
mulb
clflush
popf
jb
jmp
psubsb
ret
dec
cmp
sbb
cbtw
push
rorb
test
je
rol
shlb
imul
sub
dec
out
sbb
nop
inc
push
jno
jo
rdpmc
xor
pop
popa
pop
bound
push
movsb
jnp
or
dec
xchg
xor
pop
sti
pusha
cmpsl
or
movb
les
test
leave
cltd
rcll
mov
inc
mov
dec
push
stos
stos
xor
xor
popf
push
push
popa
inc
or
sbb
fstl
pop
movsl
clc
sbb
lret
mov
lods
pmulhw
inc
icebp
sbb
iret
mov
sub
subps
push
test
add
push
xchg
xlat
and
xchg
xor
push
in
rorl
cmp
sbb
mov
jo
xchg
push
ret
outsl
imul
cwtl
rorl
mov
inc
dec
mov
shlb
or
inc
adcb
jecxz
cmpsl
rcl
push
cs
push
or
cld
xor
jp
lcall
setbe
fildll
movsl
outsl
jg
pop
inc
push
cmpsb
or
cmp
daa
xor
inc
scas
loop
psrlq
mov
test
mov
mov
dec
loopne
adc
cmp
dec
push
daa
dec
sub
and
mov
cmpsl
cmc
packssdw
and
pop
xchg
ds
addr16
insb
add
jbe
pop
push
mov
cmp
in
out
in
adc
sub
outsl
mov
and
notb
xchg
arpl
adc
aas
mov
cmc
sarb
jnp
pusha
mov
js
ja
mov
xor
jns
add
fs
es
enter
movhps
cmp
test
sbb
cvttps2pi
or
fidivl
das
add
repnz
inc
sub
cmpb
pop
xchg
test
addr16
loope
inc
sar
xchg
lods
xchg
divl
lcall
psubusw
and
mov
lock
pop
xor
insb
hlt
je
out
xadd
mov
getsec
jb
mov
out
outsl
xchg
push
jl
fmuls
xchg
enter
ss
inc
dec
jb
sub
jmp
aas
mov
mov
inc
pop
daa
out
or
bnd
push
sbb
sbb
fiaddl
bndldx
hlt
loopne
cmp
outsl
ret
cld
and
xchg
inc
push
inc
mov
and
into
mov
mov
test
hlt
mov
adc
and
sbb
dec
xchg
test
push
inc
das
sarl
out
mov
lret
mov
aas
sub
and
inc
clts
mov
les
comiss
out
cmp
cmpxchg
pop
mov
les
aaa
xchg
out
lds
mov
rorb
inc
imul
lret
popa
jl
outsl
addr16
sahf
pop
gs
sub
inc
mov
out
push
in
outsb
ljmp
lret
push
js
lock
test
and
aas
sbb
shll
mov
dec
pmuludq
test
fs
jmp
ljmp
bound
jl
movsb
aad
and
cmpsb
cmp
loopne
xor
xchg
inc
and
sub
jg
scas
add
stc
xor
and
imul
inc
xor
adc
aad
push
loop
mov
inc
arpl
pop
movnti
cld
sti
psllq
push
jecxz
mov
pusha
sub
mov
push
lret
push
pop
push
sbb
iret
insl
inc
fucomip
push
xchg
or
sbb
jno
sbb
jae
jo
insl
cld
pop
dec
sti
push
repnz
sbb
xor
pushf
cmp
xchg
push
xor
adcl
stos
push
mov
xchg
les
aad
adc
setb
mov
test
rcr
jae
aad
inc
ret
call
inc
or
ds
add
jae
ret
data16
rol
cmp
mov
pop
les
inc
mov
jmp
xor
cmp
fnstsw
jno
push
or
jp
inc
or
jl
push
mov
mov
mov
push
or
je
js
jae
push
push
rol
fnstenv
inc
jb
mov
lcall
dec
sbb
mov
pop
xor
cmc
lahf
out
adc
call
dec
jl
mov
test
insl
add
xor
add
jne
test
cmc
inc
sbb
jno
inc
and
xor
popf
cmp
dec
lret
es
mov
arpl
xchg
lock
icebp
js
and
add
iret
xor
cmovb
test
movsl
lods
stos
addr16
clc
push
jne
in
mov
pop
repnz
cltd
mov
jp
or
enter
add
lret
addr16
or
aaa
incb
arpl
and
mov
xchg
push
jle
arpl
nop
mov
test
push
lock
clc
dec
xchg
int
cltd
mov
in
bnd
and
push
push
mov
xor
add
xor
sub
add
mov
sarb
jns
sahf
bswap
mov
or
sets
outsb
add
andb
lret
or
pop
in
sbb
pop
lds
sub
testl
pminsw
mov
lea
aas
shl
mov
add
leave
shlb
fs
std
inc
test
psubq
or
hlt
push
movq
scas
sahf
ljmp
inc
jmp
adc
arpl
loope
mov
xor
push
andl
inc
arpl
jecxz
mov
syscall
neg
sbb
push
jp
xor
mov
jb
mov
out
fwait
pop
loope
jnp
out
inc
push
xlat
xchg
mov
xchg
lcall
add
aaa
bts
in
emms
frstor
imul
mov
rorb
loopne
sbb
sahf
fisttpll
and
mov
xor
push
fs
pmaxub
xchg
test
add
sbb
repnz
scas
enter
push
inc
orb
or
ss
sub
mov
pop
out
dec
sbb
mov
fstpl
pop
xlat
call
push
cmovns
mov
sub
pop
vunpckhpd
pop
sbb
pusha
imulb
xlat
adc
jo
bnd
sarb
sbb
bswap
add
add
or
mov
js
cmp
add
nop
aas
or
repnz
cmp
cmp
cmp
xchg
jecxz
imul
leave
loopne
negb
and
int
sub
xchg
leave
inc
lcall
fimuls
movsb
sub
sbb
popa
mov
inc
push
fisttps
mov
jle
push
jno
nop
cltd
jo
test
roll
imull
mov
pusha
dec
xlat
aam
gs
setbe
mov
jmp
enter
fbld
jo
fs
fwait
cmp
cmovne
dec
jbe
inc
es
mov
in
out
in
xor
mov
xlat
and
loopne
lock
aas
stos
xor
sbb
jge
bound
or
cli
fwait
mov
mov
sub
adc
outsl
leave
cmpsb
cmc
pop
pushf
and
dec
stos
enter
sub
xchg
out
mov
outsl
divps
fdivrs
dec
xorb
rcll
imul
push
ret
pop
loop
bt
or
aaa
pop
cmc
fidivs
int
push
jb
mov
pop
xchg
insl
adc
clc
jl
fsubl
xlat
jne
jnp
or
cld
mov
das
add
adc
add
bound
cmp
inc
outsl
andb
aaa
cmpsl
ret
sar
mov
mov
mov
jmp
add
cmp
push
cmpsl
cmp
jl
and
add
mov
aaa
inc
ret
es
add
xchg
dec
pusha
je
gs
jmp
push
into
sub
push
sub
push
mov
in
int3
aam
jne
arpl
push
dec
cvttps2pi
imul
add
xchg
aad
add
jg
pusha
cmp
push
cmpsb
inc
push
jo
add
in
pminsw
xchg
setbe
lret
daa
and
pop
cmp
mov
or
sbb
lret
clts
data16
mov
adc
aam
sub
add
sbb
mov
nop
insl
push
add
xchg
enter
mov
xor
sbb
in
or
inc
inc
out
or
inc
outsl
cmpsl
and
mov
lahf
dec
movsb
scas
cmpsl
sub
sahf
jmp
cmp
cmp
pop
mov
loop
xor
xor
add
stc
sarl
fldcw
test
jb
ret
add
mov
jmp
and
aas
mov
fs
mov
dec
cmpb
push
fwait
mov
xor
lret
outsb
push
mov
insb
jbe
mov
adcl
sub
ud2
bound
ljmp
je
xor
xchg
inc
orl
jbe
mov
emms
aas
lds
mov
sbb
push
cmpsw
push
cli
lods
mov
dec
cli
outsl
rcll
in
data16
cmp
add
push
aad
movsb
mov
mov
addr16
int3
mov
mov
pop
nop
adc
fisubrs
lea
shr
gs
dec
jns
lcall
push
adc
dec
in
or
mov
les
sgdtl
ss
arpl
mov
outsl
mov
stos
stos
jbe
imul
cmp
cmp
jp
inc
ss
add
pcmpeqb
pop
ds
out
cmpsl
scas
sahf
lahf
outsl
psubusw
sbb
cld
add
mov
inc
push
lret
paddusw
ds
sbb
jo
inc
sub
popl
xlat
pop
bndstx
leave
or
xorb
pop
jne
inc
wrmsr
fs
sub
inc
jp
psubsw
mov
xchg
and
adc
cmp
popa
pop
mov
adc
sub
xlat
mov
and
jg
scas
jno
sbbb
clc
out
or
insb
dec
cmp
dec
jno
push
paddw
imul
orl
jmp
fists
in
xor
loopne
lea
xor
xor
push
dec
fsubrs
nop
mov
xchg
rolb
pop
je
and
jp
cmp
inc
mov
and
sub
inc
dec
scas
adc
popf
repnz
je
xor
add
adc
shrb
fstpl
scas
call
iret
mov
in
xor
stc
sub
xchg
pop
sub
jl
movq
adc
xor
aaa
mov
pop
push
dec
es
mov
ret
movd
push
in
outsb
push
sub
dec
fdivrp
rcrb
cli
mov
cmp
jo
mov
testb
test
rcll
data16
push
cwtl
out
lahf
jnp
dec
jb
fwait
pop
fdivl
scas
in
rorl
cld
lcall
ret
or
dec
jmp
mov
mov
insb
icebp
or
cmp
cltd
sbb
mov
sysenter
push
aaa
fiadds
mov
and
sti
adc
faddl
scas
and
mov
jae
mov
arpl
dec
and
aas
movhps
js
add
cwtl
mov
mov
pushf
pavgb
mov
add
mov
or
and
in
push
cwtl
jge
stos
movsl
mov
xor
cmp
setnp
mov
jmp
dec
sbb
sahf
push
repz
movq
xlat
cmp
mov
clc
jmp
jo
xor
push
ss
imul
inc
pop
xchg
inc
and
movsb
push
jp
fisubs
mov
loope
add
stc
bnd
outsb
or
jne
movsb
sbb
jb
lahf
mov
cmovno
ret
xor
loop
stc
lock
add
mov
xor
cmp
js
test
outsb
out
arpl
dec
mov
rsm
ret
sar
inc
pop
out
ljmp
ja
push
btr
adc
xor
and
cmc
int
imul
icebp
pop
insb
les
dec
shlb
pop
mov
cmpps
inc
sbb
mov
out
fldcw
xor
arpl
inc
mov
adc
notb
cmp
inc
xchg
jo
xor
shll
adc
lock
popa
test
movd
iret
sbb
push
lods
aaa
xchg
inc
inc
mov
inc
in
bound
test
js
add
mov
stos
ja
je
pusha
loopne
push
pop
cmc
inc
gs
mov
sub
cmp
mov
mov
push
sahf
sbb
clc
imul
inc
fwait
pcmpeqd
xchg
aad
push
ljmp
pusha
xchg
adc
xchg
scas
int
sbb
or
shll
sysexit
lods
sbb
add
test
mov
xchg
inc
mov
bound
icebp
jne
pop
xlat
mov
mov
incb
rcpps
lds
stos
sub
out
loope
mov
cld
fwait
cli
xor
mov
mov
aad
cmp
or
xchg
xchg
stos
xchg
push
add
test
scas
mov
shrl
adc
inc
ds
xchg
jecxz
repnz
test
pop
pushf
daa
rdtsc
xchg
xchg
lret
clc
les
pop
sbb
in
lock
push
xor
sub
test
sbb
jp
clc
pop
cmp
jecxz
shl
mov
cwtl
mov
xorps
or
or
sbbb
dec
jmp
ud1
xchg
or
sub
repnz
xor
imul
pusha
pop
ret
adc
mov
jb
and
pop
outsb
mov
imul
ret
les
adc
mov
dec
sarl
jo
rorb
push
ficomps
mov
jns
ja
pop
inc
xor
bts
add
psubb
and
insl
scas
inc
adc
jge
push
pmullw
xchg
test
mov
cmp
dec
inc
insb
or
sbb
or
loop
dec
std
dec
movnti
sub
adc
mov
xchg
insl
imul
lret
push
push
jp
jge
mov
and
data16
paddd
jno
or
mov
aam
or
xchg
js
xchg
jle
lahf
xchg
leave
push
or
sub
push
xchg
cmpsb
pop
repz
popa
pop
lds
arpl
rorl
mov
imul
je
lret
mov
cmp
inc
and
xor
xor
jnp
xor
jmp
adc
icebp
sub
mov
jne
sbb
movnti
mov
xor
pop
mov
shrl
sub
mov
adc
sub
lahf
dec
adc
mov
mov
call
xor
pusha
lahf
mov
addb
xchg
lods
stc
cmp
and
ds
add
repnz
std
int
mov
add
or
movaps
push
dec
cld
inc
sbb
leave
shll
test
dec
cmpxchg
in
lret
mov
push
iret
adcl
data16
push
lahf
dec
and
push
jo
jmp
ljmp
dec
inc
push
xchg
xor
add
dec
dec
add
stos
scas
out
movzwl
jmp
inc
xchg
cmpsb
sti
inc
leave
adc
les
cltd
cmpxchg
mov
mov
cmovns
xchg
aaa
cltd
enter
sbbb
inc
jmp
iret
mov
rcpps
or
ret
setae
cmp
xchg
popf
notb
jl
outsl
and
and
inc
inc
mov
add
cmp
lfs
ret
push
mov
outsb
adc
mov
out
xchg
pop
xor
punpcklbw
cltd
js
cmc
add
push
and
fldenv
mov
out
or
sub
repnz
xor
xor
movswl
ja
out
push
xlat
lock
pop
push
cmp
push
int3
push
hlt
push
std
icebp
add
fistps
out
adc
nop
lret
cmpsl
ret
ds
repnz
jno
and
mov
mov
stc
mov
pop
sysret
je
jle
xor
call
paddsw
add
mov
jge
push
pop
jbe
fcoms
jle
pxor
mov
bswap
addr16
loopne
jnp
adc
mov
out
mov
sub
add
scas
or
adc
loope
mov
in
cmpsb
enter
sub
jae
scas
pmullw
int3
xchg
repz
or
xorl
push
add
inc
sub
jecxz
mov
lea
inc
inc
loope
movhps
pop
xor
gs
or
in
sbb
out
lds
pop
push
int3
shl
pop
psubw
mov
xcrypt-ecb
cmpsl
or
psubd
push
in
jne
cld
fmulp
add
lea
imul
imul
inc
and
inc
mull
add
jecxz
xchg
push
ds
cmp
cmp
and
cmpsb
mov
stc
adc
dec
push
xor
xchg
imul
movsl
xlat
das
psubsw
inc
mov
xchg
lods
push
fwait
paddusb
pop
and
shrd
dec
cmovne
sbb
push
psllq
fistpl
xor
ret
mov
dec
xchg
ja
dec
stos
inc
push
mov
cmc
lret
popl
cmpsb
notl
sbb
bswap
or
jl
jae
js
add
mov
xchg
dec
add
outsb
jb
adc
xchg
addr16
loop
repz
ficomps
div
mov
sub
mov
clc
inc
dec
ds
cld
popf
mov
dec
push
in
push
inc
fwait
in
adc
add
mov
ja
inc
jno
sub
mov
test
out
dec
les
push
dec
mov
xchg
jno
jb
inc
push
cld
cmp
mov
adc
push
data16
xor
jecxz
push
xchg
inc
movd
inc
rclb
sbb
jge
mov
or
or
loop
int3
inc
rolb
push
inc
cli
and
bound
enter
jg
je
sbbl
xchg
mov
cmpxchg
push
clc
inc
xor
ret
pmaddwd
movsb
sub
in
stos
xchg
stos
je
nop
mov
imul
loopne
mov
loopne
test
xchg
push
es
jno
popf
rcrl
add
mov
push
jo
jnp
nop
and
setns
jge
mov
cmpsl
aaa
adc
fadds
sub
inc
dec
push
mov
add
or
lret
js
add
setbe
loopne
hlt
pop
push
adc
stos
imul
packuswb
lds
ret
sbb
sbb
ret
lahf
not
mov
bound
stos
pop
xchg
mov
xchg
rcrl
jmp
daa
dec
aad
pop
test
scas
mov
test
mov
push
int
out
leave
mov
push
push
mov
add
cmpsb
jge
pusha
push
push
dec
add
into
cmp
imul
mov
cwtl
hlt
adc
pop
push
mov
or
jb
fstps
dec
addr16
rol
ljmp
cs
test
cmp
les
xchg
unpcklps
xlat
jl
sub
js
test
lds
in
arpl
aad
push
jl
out
add
xchg
ret
js
jg
out
inc
sahf
test
stos
mov
xor
sahf
data16
xchg
leave
out
lock
adc
adc
or
pop
movsb
push
cltd
add
fcomps
inc
and
pop
cmp
leave
mov
js
jmp
dec
bswap
and
jmp
mov
jp
jne
bsr
out
inc
cmovge
movsl
sti
sbb
cmp
cmp
mov
aad
pminub
fmul
mov
cmp
pusha
xchg
shr
xlat
push
arpl
inc
pop
dec
movsl
sub
inc
cmpxchg
push
out
pop
or
mov
mov
xor
xor
xchg
dec
xor
movsb
inc
and
lock
clc
xend
push
imul
cmpsb
sbb
and
sbb
add
imul
cmp
and
out
insb
jno
mov
push
and
in
and
fwait
sbb
cli
or
popf
dec
lcall
jnp
push
psrad
push
dec
mov
cmp
and
bound
call
jo
mov
or
ljmp
push
adc
push
and
mov
dec
cmp
es
xor
inc
lea
jo
xor
pusha
dec
ds
pcmpeqd
ss
repz
adc
cmpsb
xchg
mov
xor
fnstenv
and
psubd
push
daa
ret
leave
xchg
int
xor
cvtps2pi
lret
das
iret
daa
vmread
pop
mov
cmp
setae
sub
ucomiss
xchg
inc
fadds
jne
mov
lcall
popa
xchg
gs
das
mov
fildl
shld
into
sbb
fs
pop
out
jl
scas
enter
adc
js
and
xor
cli
lods
orl
jg
shlb
or
mov
add
jge
jnp
dec
mov
push
loopne
imul
add
xchg
cmp
insl
jb
test
clc
mov
xchg
pop
sub
pop
shl
lods
test
cs
xchg
movsb
mov
mov
sbb
ljmp
add
dec
imul
loop
je
clc
xor
xchg
repz
dec
lret
stos
inc
hlt
mov
mov
lea
andnps
fimull
mov
sysret
enter
sub
push
cmp
xor
cmpsl
sub
and
insb
push
inc
dec
sub
cli
jns
xchg
cmc
daa
aas
mov
pusha
cmp
rcrl
insl
test
popf
enter
cmp
or
popf
sub
repnz
add
mov
push
pop
cli
in
in
ds
inc
xor
pop
setnp
mov
bsf
aam
push
ret
adc
cmc
push
test
push
cmpnltps
jns
orl
sahf
xchg
ljmp
pop
xor
mov
clc
xchg
nop
cvtps2pi
xorb
negl
shl
xchg
fisttps
arpl
rorb
and
and
out
syscall
mov
rcrl
pminub
pop
outsl
test
mov
xchg
mov
xor
sub
fsubl
dec
mov
xchg
daa
call
add
cmp
ret
or
pop
ljmp
cmp
fisubs
dec
stos
xchg
repz
and
jb
xchg
aas
shll
mov
outsb
test
cmpsb
xlat
or
sbb
ret
or
jle
cmp
jp
jo
mov
pop
cmpxchg
fwait
mov
add
xor
cmp
aam
aad
xchg
mov
mov
inc
js
pinsrw
sub
mov
shl
fistpll
xorl
mov
jno
lret
and
xor
cmpsb
in
paddw
out
lahf
jns
cltd
xchg
jno
xor
push
mov
cmp
bound
adc
mov
out
aam
repnz
into
or
shl
pop
orl
xchg
cli
popf
sub
inc
lahf
mov
pop
sti
je
std
clc
insb
adc
loopne
xchg
mov
pop
mov
daa
stos
leave
pop
dec
lcall
pop
loope
nop
push
ret
mov
sbb
ret
int
movhlps
in
lret
adc
sub
pop
cmp
mov
movswl
or
insl
pop
lcall
nop
fs
cmp
movl
adc
mov
xor
xchg
movaps
loope
push
xchg
fdivl
out
int3
pop
adc
fisttpll
push
jo
fsub
std
mov
das
jecxz
cmp
je
ljmp
pop
rcpps
inc
lock
mov
xor
push
mov
int3
push
in
cmp
mov
sbb
push
das
clc
mov
test
dec
mov
pop
push
scas
sete
or
xorl
pushf
movsl
and
pop
movd
mov
pushf
lret
or
mov
push
push
pandn
mov
jmp
inc
mov
fildl
sub
jno
adc
pop
mov
or
test
int
mov
sub
push
test
punpckldq
xchg
add
ud1
fstps
xchg
cli
psllq
sbb
inc
jecxz
sub
xor
sub
popa
fs
orb
imul
scas
fnstcw
xor
lcall
pop
lods
pop
in
pusha
pop
sbb
sbb
js
jo
push
imul
jno
ljmp
movsl
jnp
and
push
cmovs
add
btc
push
jp
loope
push
mov
popf
bound
push
adc
aas
sahf
scas
lahf
jbe
gs
mov
out
adcb
and
rorb
lea
inc
mov
sub
xchg
scas
ds
push
adcl
ja
jne
push
cmp
rorl
faddl
pop
int
xchg
sahf
lcall
or
hlt
in
add
pusha
lret
nop
movsb
icebp
les
push
movaps
es
fadds
sbb
btr
daa
pop
mulps
jbe
sahf
sarl
pusha
ja
fucomp
les
xor
stc
ror
mov
cmp
jmp
adc
add
sub
cmc
rcrb
pslld
mov
shrl
adc
addb
adc
dec
cmp
cli
lretw
in
sbb
add
jno
pinsrw
inc
test
addr16
and
mov
inc
xchg
push
orb
aad
popa
inc
mov
mov
mov
adc
sar
or
imul
loop
mov
ret
fstpt
xor
inc
jmp
dec
jbe
sbb
fstpl
cmovg
pop
and
prefetch
or
mov
mov
sub
imul
push
jb
sahf
stos
and
test
cmp
loop
pmaxsw
jae
cs
sub
scas
insb
jo
test
stc
cmp
xchg
inc
add
mov
pop
bound
subb
or
xchg
jecxz
enter
jge
out
sub
or
push
adc
mov
dec
xchg
std
and
adcl
iret
add
push
leave
cmp
inc
xor
ss
mov
dec
dec
mov
dec
clts
hlt
xchg
loop
rol
punpcklwd
neg
popf
mov
outsl
fstpt
sahf
fidivrs
and
loop
adcl
sahf
inc
xchg
push
cmpl
adc
mov
adc
jmp
repnz
cmpsb
mov
jb
gs
xchg
mov
movq
sbb
shrl
mov
aam
jmp
call
rcrb
fisubs
in
sub
mov
inc
push
jmp
je
call
jp
xor
cmp
mov
pop
inc
adc
jge
nop
xchg
loop
jae
lgs
int3
sub
pop
lret
lods
push
xchg
inc
aas
push
mov
pop
dec
loope
jo
pandn
nop
jle
stos
cmp
mov
sub
adc
inc
arpl
repz
xchg
cmp
les
out
mulb
mov
into
js
insb
jmp
push
repnz
outsb
inc
lahf
jmp
ljmp
sub
es
xor
and
xor
dec
out
dec
jbe
xchg
fxch
scas
and
lret
cmp
xchg
in
fwait
push
adc
jl
jne
pop
or
cmpsb
xchg
lea
cwtl
in
dec
and
btc
xchg
jbe
mov
xor
loop
pop
paddsb
mov
inc
mov
dec
faddl
sub
nop
movsl
mov
or
push
pop
lock
mov
in
sti
dec
pop
add
adc
btc
sub
in
dec
sbbb
and
ljmp
push
cs
js
sub
xor
push
fisttpll
popf
sbb
jg
jo
mov
mov
and
imul
inc
xorps
jno
nop
outsl
jg
cmp
subps
sbb
dec
pop
call
insb
bswap
rcll
add
imul
ljmp
mov
mov
mov
xor
sbb
aam
or
lods
bound
jnp
mov
jbe
and
mov
sbbb
add
mov
push
jge
aad
xchg
js
in
mov
das
mov
or
ret
arpl
add
push
dec
mov
insl
mov
loope
jecxz
add
popl
out
pextrw
jae
xorl
mov
xor
ss
lret
add
iret
xlat
and
jns
inc
push
pop
mov
ret
pusha
mov
pop
sbb
push
fdivrs
scas
xchg
aad
mov
out
mov
mov
dec
pop
sub
shlb
inc
jl
jmp
push
add
test
fsubrs
jns
test
int
stc
aam
jae
sub
sbb
lock
xor
inc
mov
jecxz
in
daa
dec
popa
aaa
dec
and
xor
jle
inc
mov
mov
arpl
or
mov
pop
loopne
inc
stc
aad
add
icebp
repz
orb
je
lea
leave
push
mov
mov
sbb
xor
push
bound
testl
pop
scas
mov
sar
inc
sbb
aaa
outsl
btr
movsl
jl
push
pop
pushf
maskmovq
idivl
jecxz
mov
jb
loopne
cmpsb
xchg
jge
xor
xchg
sub
rorl
and
ljmp
andb
sub
sbbl
jb
rorl
pop
shrb
sub
mov
push
les
aad
test
and
pop
fmull
xor
int3
sbb
dec
cld
mov
or
daa
mov
shll
pop
mov
lods
push
pop
sbb
js
iret
cld
sbb
or
mov
adc
es
gs
inc
adc
sbb
xor
arpl
negb
std
or
cmp
rolb
adc
testl
xor
shlb
adc
mov
xor
xchg
inc
fldenv
dec
push
mov
adc
xchg
stc
or
jmp
sub
je
popa
cs
push
cmc
adc
fisubrl
add
rcrl
sub
or
je
add
sbb
lahf
sbb
in
mov
mov
jge
dec
hlt
push
mov
push
sahf
ss
xchg
adc
xchg
mov
mov
setne
or
bound
adc
sbbb
mov
mov
inc
sbb
aas
pop
adc
imul
pop
daa
cld
pusha
inc
pop
cmovns
sbb
or
je
ja
hlt
sub
das
cld
mulb
lock
fwait
daa
paddusb
mov
lds
les
rol
icebp
adc
repz
pop
xchg
push
ds
and
push
clts
aam
mov
movsb
pop
int
fidivrs
mov
hlt
sti
xor
subb
popf
or
lods
aam
adc
jnp
or
ja
dec
xchg
push
int
movb
gs
push
mov
stc
pop
cltd
jne
push
ret
mov
lret
iret
inc
inc
in
dec
sbb
loopne
jb
fldenv
mov
les
push
adc
xchg
sarb
mov
dec
jmp
pop
pshufw
out
das
daa
adc
fnsave
arpl
adc
jecxz
es
dec
jmp
imul
outsb
and
inc
adc
mov
into
and
aad
in
sbb
cmove
and
out
arpl
out
add
xchg
and
maxps
dec
cmp
jmp
jno
and
inc
mov
fiadds
psraw
dec
fstpt
cltd
xor
mov
ja
adc
cmp
push
dec
fwait
loop
rorb
out
xor
daa
test
int3
cmpsl
fmull
xchg
mov
push
jno
lahf
jnp
inc
pop
xchg
rcrb
loop
mov
jne
loope
ret
add
lods
lret
mov
setns
jbe
or
mov
insb
aaa
adcb
pcmpgtd
gs
mov
jmp
push
cwtl
sbb
cmp
xchg
nop
xchg
sub
add
dec
in
cmp
punpckhdq
push
loopne
mov
or
pslld
sub
inc
psadbw
sbb
jb
cmc
sbb
bts
inc
movsl
test
prefetch
or
sbb
aad
lret
ja
les
add
jns
jne
sub
mov
into
std
test
fsubs
iret
pop
xchg
outsl
test
sub
xor
mov
fsubr
xor
sbb
lea
cmp
adc
sub
stos
cmpxchg
lock
cld
psubsw
push
insb
cltd
in
mov
pop
ret
call
outsl
mov
sbb
and
bound
movsl
pop
ltr
xor
add
dec
sub
cmpsl
or
por
shrl
push
add
add
popf
inc
pcmpgtb
enter
mov
stmxcsr
adc
test
inc
dec
arpl
cmp
xchg
call
jns
and
pop
in
fisubl
jae
add
inc
mov
jo
fdivrs
jge
stos
sub
mov
xor
xchg
mov
xor
adc
dec
mov
sub
imul
xchg
pop
jns
adc
inc
fcoms
les
cltd
push
rorl
aaa
aad
daa
push
or
and
inc
roll
xor
dec
push
int
xor
jae
xchg
ret
mov
lcall
push
leave
mov
mov
jl
pop
pop
aam
mov
xchg
lods
lret
push
xrstor
hlt
cmp
mov
adc
jp
movsl
stos
jle
js
adc
fldlg2
loopne
add
std
xchg
pcmpgtw
fdivrl
pushf
inc
movzbl
andl
push
and
push
loopne
push
rolb
push
lret
fisubrl
psubusb
xchg
inc
movsl
xchg
pcmpgtw
in
daa
add
rolb
in
test
add
jge
dec
push
rcl
cli
sbbb
loope
mov
ud2
adc
mov
inc
and
sub
loopne
or
or
rorl
cmp
je
cmp
pop
pminub
mov
adc
dec
paddd
nop
push
xor
or
psubsw
pushl
jp
xor
or
scas
push
adc
push
cmovnp
sub
pop
jo
and
cld
arpl
dec
ljmp
ret
pop
adc
adc
sub
loopne
fwait
setg
cmp
sbb
ret
xor
paddd
jmp
pmullw
movsl
xlat
inc
aas
test
and
sbb
jp
mov
mov
pop
push
inc
jnp
fmuls
into
movsb
fmull
sbb
lock
inc
or
push
ret
mov
push
sub
notb
inc
and
repz
adc
insb
xchg
xchg
mov
mov
dec
adc
popa
pop
loop
xchg
mov
xchg
rcrl
cmpl
fcmovnu
pop
sub
fbld
xchg
pop
add
loope
dec
stos
jbe
mov
sub
idiv
test
les
push
mov
add
out
dec
sbb
xor
dec
fwait
mov
mov
fdivrl
cwtl
sub
enter
push
dec
adc
inc
sub
add
dec
out
lcall
add
orl
fidivrs
jo
xadd
aad
adc
test
xchg
mov
add
loopne
daa
and
pop
scas
push
xchg
mov
dec
and
sahf
push
xor
popa
push
enter
adc
cmc
mov
and
push
scas
shlb
pop
xor
or
dec
inc
adc
jl
fwait
out
insb
fidivl
adc
rclb
pusha
jns
mov
roll
mov
ret
add
pop
pcmpgtd
sbb
andnps
arpl
adc
into
dec
loop
js
lret
or
mov
push
dec
push
fwait
shll
inc
jbe
clc
inc
jl
std
cmp
fdivrs
mov
bswap
cmp
add
shrd
rcrb
fmuls
mov
shl
dec
inc
ret
dec
jae
xchg
inc
push
jno
cmpl
mov
sbb
adc
mov
mov
and
push
jne
fwait
dec
in
pop
lock
cwtl
or
out
sbb
outsb
push
sgdtl
sub
packssdw
jl
maskmovq
imull
les
hlt
mov
in
ret
pop
nop
int3
pusha
movups
hlt
dec
mov
das
ret
push
scas
ret
add
test
sub
adc
cli
mov
adc
add
push
dec
aas
or
mov
movzwl
imul
jg
inc
mov
arpl
push
pop
adc
orb
cmp
lahf
pop
punpcklwd
pop
xlat
push
adc
jl
xor
cmpsl
gs
push
xor
xchg
mov
or
cld
inc
add
pop
mov
inc
mov
mov
inc
cmp
mov
mov
mov
seta
das
arpl
push
scas
popf
scas
inc
negb
fdiv
mov
in
movd
ds
mov
psubw
xor
fildll
mov
subl
xchg
xor
int
bswap
sbb
outsl
sbb
add
xchg
lds
ret
ficompl
pop
cmpsb
push
cli
cwtl
out
lret
and
add
cmovle
and
inc
hlt
mov
jge
sbb
in
mov
mov
sbb
add
add
pextrw
int3
arpl
sbb
mov
ja
adc
mov
xor
mov
pop
call
loope
and
jl
push
and
add
mov
jnp
bswap
clc
pop
push
call
sbb
insb
les
push
xchg
jnp
outsl
mov
xor
fisubl
ja
xor
xchg
add
mov
jne
and
imul
or
inc
mov
out
ds
cld
push
jecxz
shlb
lock
jmp
jne
cmpsl
xchg
test
js
les
push
adc
cmp
shlb
xor
or
sldt
test
ds
push
inc
mov
push
rorl
stc
push
mov
leave
mov
add
and
jns
cmp
sbb
jecxz
bound
dec
pop
daa
movsb
sbb
cmp
jl
push
push
add
cmp
mov
adc
lret
lock
cli
mov
push
xor
push
inc
dec
ss
adc
sbb
sbb
dec
xlat
mov
xor
jns
or
mov
and
and
mov
cmpsl
test
arpl
inc
leave
xor
mov
sub
cmpsb
mov
jmp
push
mov
push
cmp
test
xor
add
mov
test
inc
outsl
punpckhbw
pusha
cmp
shlb
lcall
pop
xor
dec
shr
adc
push
xchg
scas
and
push
cmp
lahf
push
bound
mov
pop
out
jecxz
sarl
pop
xchg
clc
insb
or
enter
pushl
add
adc
mov
movsl
rdpmc
loope
jnp
sub
jge
dec
leave
xlat
call
ucomiss
jle
or
in
movsl
out
cmp
adc
popf
and
adc
or
pop
push
add
je
or
rclb
adc
out
xor
xchg
inc
stc
int
push
lahf
add
jo
lds
repnz
cmp
jge
lods
push
in
push
cmovp
fnstsw
cmovl
aam
and
lahf
mov
add
fisttps
xor
out
pop
repz
pop
data16
loop
or
mov
and
pushf
js,pt
jbe
ss
hlt
scas
mov
or
outsb
jne
cmp
or
syscall
lcall
out
inc
xchg
cmp
in
xor
pop
sbb
cmovbe
xchg
mov
stos
dec
mov
outsl
sbb
pop
cmovb
and
sub
rcl
inc
sbb
jne
sub
sbb
je
out
mull
push
push
rorl
or
lods
mov
adc
in
adc
lret
add
imul
rorb
out
nop
pop
stos
mov
popf
jmp
out
xor
lahf
repz
mov
popa
out
subps
lods
leave
cmovns
sub
lret
push
mov
insl
xor
mov
setnp
mov
test
pop
mov
and
and
dec
jbe
daa
punpckhbw
push
sahf
cmp
lcall
clc
lds
hlt
sbb
adc
in
adc
push
mov
inc
ds
lea
mov
fdivl
jo
rclb
call
outsb
jns
adc
mov
lods
jp
movups
push
add
ret
cmpxchg
mov
dec
mov
sbb
adc
cmpsb
ja
fs
fists
ucomiss
enter
pop
stc
jecxz
outsb
fsubl
jb
pop
mov
shrb
xchg
add
test
cwtl
sti
pushf
sarl
jns
and
sarl
jle
pop
fcompl
incb
or
ret
xchg
psubusb
jbe
jg
and
xchg
add
data16
popa
pop
jae
ja
push
stos
sbb
sub
pand
or
mov
orl
cmp
adc
xor
loop
mov
cvtps2pi
lock
mov
shlb
or
fdivs
insl
dec
movd
lock
and
std
sbb
cs
lods
mov
cmovbe
pusha
imul
mov
loop
mov
xchg
dec
ficompl
loope,pn
rorb
nop
fdivrl
mov
pmuludq
mov
arpl
ret
add
aas
cvtps2pi
rclb
fdivrp
fdivs
in
pop
lea
mov
bound
mov
adc
fsubrl
dec
stc
dec
or
xchg
sub
test
ret
push
pand
mov
aam
scas
or
mov
push
sti
faddl
lahf
mov
mov
mov
and
sbb
sbb
dec
mov
inc
and
and
rcrb
mov
stos
lods
xor
sbb
shrl
rcr
jl
lret
cmc
and
loopne
xchg
sbb
adc
movsb
add
jge
mov
adc
daa
cltd
add
xor
push
add
xor
cmc
addr16
mov
outsb
testb
lret
stos
mov
imul
test
scas
movsl
orl
fiaddl
dec
sbb
sub
sub
sbb
in
fbld
pusha
mov
ret
cmpb
wrmsr
push
and
adc
xchg
psubsb
add
sysret
cmp
xor
fcoms
cmpsl
arpl
inc
gs
lods
cmp
pcmpeqd
push
sub
cltd
imul
outsb
cmovb
imul
pop
jns
jp
adc
mov
push
imul
in
popl
xor
mov
fwait
sub
cmp
sbb
adc
push
sub
xadd
bound
cmovae
dec
sbbb
xorps
dec
lahf
jge
jl
cmpxchg
addr16
mov
sbb
mov
stos
lds
idivb
stos
cmp
and
and
sbb
add
mov
out
fsubrl
cmp
xor
adc
add
push
or
and
mov
shr
ss
xadd
add
push
pop
setle
jo
mov
push
inc
cmp
pop
inc
ss
jle
cmovno
dec
jb
mov
and
in
popa
push
gs
push
push
sbb
rolb
test
nop
fisttpll
and
push
mov
xchg
jnp
popf
sub
dec
aad
rol
push
test
stc
xchg
push
jne
mov
jl
or
leave
and
jno
out
maskmovq
mov
cmp
jmp
cltd
push
sarl
fsubrs
mov
leave
dec
bound
sbb
mov
jecxz
imul
sti
xor
out
in
daa
mov
inc
nop
cmp
in
xor
movsl
and
push
cs
stos
jns
dec
jecxz
and
dec
daa
xchg
or
pmaxsw
mov
push
repz
push
lret
xor
mov
adc
xchg
and
lahf
adc
call
pop
xor
push
js
scas
cmp
rorb
or
dec
sub
rolb
ficoms
imul
ret
and
jmp
cmp
movsl
pop
repnz
iret
pusha
mov
push
xchg
insl
and
pop
in
pop
mov
add
mov
mov
ror
psubusw
adc
std
leave
jge
sbb
ss
xchg
rcl
pop
cld
ljmp
pusha
pop
mov
push
push
ja
mov
stos
mov
sar
test
fidivrl
popf
xor
pshufw
stos
pop
mov
clts
xchg
sbb
out
repz
shlb
cmpsb
incb
ss
ja
loope
xor
push
pushf
lods
addr16
punpckhbw
pop
inc
or
outsb
iret
out
xchg
xchg
xor
sbb
jg
push
bswap
mov
jl,pt
adc
adc
fisubl
pushf
push
mov
subb
adc
inc
seto
jae
adcb
xchg
popf
sub
hlt
repnz
addr16
mov
xchg
sbb
bswap
aam
cs
xchg
lods
in
mov
test
aaa
sbb
xchg
arpl
inc
std
sub
or
prefetch
enter
and
dec
ret
adc
jmp
push
pop
std
es
leave
or
andl
push
les
popa
push
loope
stc
sbb
cmp
xor
clc
xlat
push
in
xchg
cmc
imul
popf
seta
lret
in
jle
mov
setno
inc
ja
push
inc
gs
jmp
imull
or
imul
mov
jge
cmp
mov
mov
str
dec
jg
hlt
mov
out
push
and
add
xchg
jnp
scas
punpckhdq
sbb
and
movsb
mov
sub
pop
gs
mov
in
lahf
sbb
movsl
push
sti
sbb
xor
pop
jnp
cli
int3
lock
ucomiss
ds
xchg
mov
ljmp
pushl
lock
mov
test
loopne
adc
cmpsl
push
push
daa
push
aam
stos
and
dec
jnp,pt
adc
xor
pushf
cmpb
hlt
fidivl
bt
ret
addr16
shr
es
outsb
adc
mov
add
lss
ss
pop
jae
pop
cmpxchg
and
or
cmovae
cli
cmpsb
dec
pop
in
mov
lea
push
pop
push
jnp
pushf
push
clc
fadds
hlt
or
ficomps
push
adc
ds
sbb
mov
cmpsb
gs
psrlw
jge
xorb
xor
btr
mov
stc
mov
sub
inc
or
out
dec
or
lret
ljmp
cmp
push
add
mov
je
pop
jle
aam
push
rsm
popf
push
fisttpll
cmp
les
outsb
inc
lds
pmulhw
cmp
in
insl
adc
aad
cltd
push
lods
fldcw
test
jge
push
cld
or
jmp
sbb
mov
push
aaa
jb
mov
adc
rcll
mov
xchg
add
dec
dec
adcb
aas
cmp
iret
mov
sar
outsb
cwtl
mov
dec
mov
loope
push
adc
xchg
into
outsl
sub
mov
sti
notl
push
ss
add
sbb
push
jmp
xor
syscall
dec
cltd
jns
inc
data16
stos
pushf
leave
mov
cmpps
ljmp
cld
imul
adc
sarb
push
repnz
xor
jecxz
jl
mov
jne
adc
into
popf
pop
push
fistps
adc
out
xchg
jb
test
push
cmpb
jle
dec
xchg
push
mov
pusha
dec
pushf
xchg
test
andps
xlat
pop
lret
cmovbe
ja
mov
add
mull
mov
int
out
pop
push
xchg
sub
loop
mov
sahf
or
dec
daa
push
out
xor
or
outsb
add
les
sbb
cwtl
push
test
jecxz
jne
pop
int
mov
sbb
clc
inc
jl
inc
pusha
push
lret
xor
xor
or
add
fisubrs
mov
pop
cmp
ret
push
jno
jl
mov
adc
mov
cmpb
mov
adc
push
inc
mov
movsb
mov
std
cltd
mov
paddsw
aaa
jae
int
mov
test
pop
xchg
dec
or
addr16
aas
pop
loop
push
lods
push
xorl
les
notb
and
xor
pop
pushf
mov
pop
imul
enter
sbb
adc
and
popa
lahf
cmpsb
mov
dec
mov
push
lods
shl
mov
cmovs
inc
es
mov
mov
xchg
jle
push
scas
jp
xor
out
and
mov
outsl
and
push
ja
lret
inc
wbinvd
dec
sbb
aam
add
imul
es
add
push
xchg
push
or
mov
push
dec
cmp
je
push
sub
mov
cmovno
jne
xchg
ljmp
add
mov
loop
popa
sub
bt
inc
sbb
cmp
lret
jno
les
repnz
cmp
sbb
xor
sub
inc
loopne
pop
daa
bsf
orl
lsl
push
pop
jge
sub
lea
mov
or
les
pop
pop
outsl
xchg
fiaddl
std
and
adc
dec
inc
pop
dec
xor
int
fisttps
lcall
xchg
xchg
mov
test
jmp
pop
outsb
mov
es
sub
jo
and
movhps
mov
notb
loopne
or
or
jnp
add
ja
push
mov
mov
pop
or
pop
sarl
xchg
push
int
fsubl
lds
stos
sub
movsl
pop
fwait
push
lods
fs
popa
xchg
iret
inc
ret
popf
scas
loopne
dec
inc
mov
mov
in
and
push
mov
xchg
enter
mov
pop
mov
or
leave
mov
movsl
repnz
pcmpeqb
test
imul
fwait
call
jge
pop
jbe
ucomiss
push
test
push
negl
or
addr16
dec
adc
daa
aas
dec
xor
jmp
mov
mov
adc
std
jne
scas
out
inc
xor
pop
shr
push
push
and
arpl
sub
ficoml
ja
outsl
cmp
pop
lea
cmp
mov
aaa
test
leave
inc
add
emms
pop
sub
adc
inc
out
rcrb
test
wrmsr
popa
imul
xor
jo
dec
pop
mov
pop
and
vmwrite
gs
xor
or
and
ret
lret
lods
dec
inc
push
pop
cmovae
mov
sbb
dec
cli
xor
cld
sbb
testb
push
popf
icebp
cmp
bound
call
xor
and
xor
iret
pushf
inc
cmp
pcmpgtw
sub
cli
add
or
sbb
out
xchg
push
or
fsubrs
cmp
outsl
lods
mov
cwtl
lret
cmpsl
push
xlat
ret
call
aam
mov
fwait
xor
orl
in
fucom
insl
scas
ja
or
pop
jnp
or
push
pop
sbb
xor
imul
adc
inc
cvtps2pd
mov
pop
sbb
cmp
sbb
push
inc
mov
mov
mov
xchg
je
dec
les
mov
idivl
xor
lret
push
shll
subl
fadds
mov
mov
cld
cmp
xchg
push
sbb
push
mov
adc
std
or
ret
pop
mov
jae
sbb
and
and
or
cmc
lock
rdpmc
mov
inc
rclb
pcmpeqw
pop
or
sbb
lock
sub
mov
mov
xor
pop
mov
pop
jmp
mov
xor
movnti
pop
push
movups
jle
test
adc
addb
jb
stc
mov
shlb
mov
les
mov
insl
lcall
sub
inc
or
push
dec
jnp
mov
psllw
out
push
push
or
cvtps2pi
pop
movsb
adc
push
dec
mov
popa
lods
inc
pusha
je
mov
xchg
lds
cld
add
mov
cmovg
jbe
rdpmc
add
adc
mov
pop
ret
out
jns
mov
fdivrl
iret
adc
rcrb
sbb
ljmp
int
fcomp
pcmpgtd
mov
mov
xchg
int3
inc
pushf
mov
jmp
and
fidivrl
fwait
jns
insb
push
fmuls
jge
dec
xor
movsb
xchg
pcmpgtw
jmp
imul
push
sti
out
sbb
inc
icebp
pop
xor
scas
pushf
mov
xor
cmpsb
push
inc
add
mov
fisttpll
pushf
sub
ja
bswap
out
ror
inc
dec
mov
jb
inc
mov
push
jge
fsub
ret
push
xchg
and
pop
in
cld
leave
bound
sbb
flds
punpcklwd
push
inc
out
jmp
cmp
cmp
lret
cmpl
mov
mov
push
psubsb
lcall
or
cmp
xadd
jecxz
shr
and
lret
and
sub
std
or
cvtps2pd
ja
mov
dec
inc
arpl
add
mov
add
aas
sub
cmpsb
shlb
test
push
push
setnp
mov
adc
sbb
sub
fdivs
cwtl
push
lret
fldenv
insb
jne
jo
fmul
rdpmc
inc
mov
out
jae
shrb
fsubr
nop
push
or
jnp
punpckhwd
xchg
movsl
insl
pcmpgtw
shr
xchg
scas
les
mov
or
push
mov
bsr
jbe
std
mov
add
add
fstpt
maskmovq
testb
sysenter
xor
pop
pop
jp
fidivrs
mov
mov
sub
cmp
mov
sub
mov
in
jg
lret
xlat
out
mov
into
rorb
adc
xchg
sub
push
icebp
or
jbe
cwtl
imul
test
mov
and
mov
imull
jp
bound
shrd
xchg
push
pop
dec
prefetchw
or
aas
xor
xchg
xor
and
xchg
jecxz
sbb
test
dec
ret
loopne
hlt
push
syscall
jo
mov
xor
rorb
mov
setbe
fidivl
inc
mov
ss
jnp
push
stos
lock
mov
loopne
sarl
add
scas
cmovno
jo
aas
mov
inc
adc
dec
inc
add
jb
cli
dec
rcl
or
cmpsl
push
outsl
xchg
adc
mov
ss
setnp
dec
cmp
cld
insb
or
mov
or
popf
and
adc
stos
inc
imul
repz
mov
loop
ds
das
xchg
mov
xor
cmp
pop
cmpsl
lods
dec
aad
inc
sarb
mov
gs
cmp
xchg
dec
jb
setp
xor
mov
adc
fildl
or
push
arpl
lahf
and
out
or
fdivrl
outsb
roll
sti
inc
inc
or
fdivrp
and
mov
lds
sbb
push
pusha
hlt
ss
aad
pop
out
or
cmp
xchg
dec
xor
adc
inc
fldl
mov
dec
enter
in
imul
lock
incb
lahf
stos
gs
lock
inc
int3
pop
push
paddusw
sub
pushf
mov
outsb
shld
bswap
or
jne
test
subl
imul
inc
jo
rcrl
jne
test
rol
pop
popa
insl
mov
push
hlt
xchg
imul
cmp
mov
sahf
jns
xchg
xchg
mov
insb
xchg
bswap
add
jo
aad
bswap
and
jns
inc
movsb
cmc
jno
mov
sbb
jne
dec
nopl
mov
push
xor
arpl
orl
cmp
addr16
je
rcrb
std
jnp
cli
pop
xchg
or
sbb
push
xchg
lock
outsb
scas
dec
cmp
divb
mov
dec
cmovno
fwait
xchg
push
cmovbe
fisttps
ds
sbb
cmpsb
push
mov
mov
mov
arpl
jb
out
sbb
or
and
mov
push
movsb
push
xor
rcrb
mov
jno
add
mov
sub
sbb
les
out
or
pop
lcall
ret
xchg
cli
stos
push
mov
xchg
jge
xchg
jp
pop
lea
push
repz
cwtl
mov
int
mov
fstp
jmp
and
add
push
sahf
cmpsl
and
paddusb
leave
mov
dec
dec
daa
ljmp
movl
push
cmp
jns
jne
bnd
xor
loope
ret
paddb
cmp
pushfw
add
mov
lret
add
repz
cli
cmp
je
dec
and
push
cmpsb
pop
inc
and
xchg
lahf
mov
outsb
rcrl
scas
repz
and
push
es
add
shrd
notb
mov
cmpsl
inc
dec
stos
adc
ret
aam
pop
andb
nop
dec
xor
add
into
mov
or
jo
xchg
push
stc
fwait
mov
iret
push
sub
mov
aaa
dec
and
loopne
in
fwait
cmpxchg
sbb
imul
mov
dec
ljmp
xor
popl
xor
adc
rdtsc
shrb
add
xchg
in
sbb
out
jnp
subb
and
cmp
je
aad
pusha
pmaxsw
add
sub
xor
sbb
cmp
and
push
push
cmp
cmp
or
aam
rol
hlt
inc
adc
out
popa
aas
xchg
dec
xor
dec
sbb
sbb
das
int
xor
add
sbb
or
cmp
rcll
add
fcomip
shrb
nopl
iret
xor
push
sbb
aam
xchg
sbb
sbb
jae
dec
adc
add
mov
loop
ret
add
cltd
lea
sub
daa
cld
mov
imul
cmc
sub
jmp
psubd
push
fists
mov
ss
mov
mov
out
cmovnp
sahf
dec
pop
jl
orl
push
movsb
push
dec
sub
fisubrs
out
adc
lea
push
aas
addr16
ja
test
push
movsl
inc
xor
clc
fnsave
xor
jecxz
in
ja
cmp
xchg
mov
aam
sub
loopne
adcb
mov
in
repz
xchg
adc
movsb
cmpsl
addr16
inc
iret
mov
mov
push
lea
mov
mov
and
aas
inc
pop
je
lds
dec
mov
adc
stc
push
dec
or
repnz
pop
or
push
mov
fs
and
jmp
mov
popa
cmpsl
punpckhdq
movsb
cmp
jl
xorl
push
in
xor
push
pusha
aas
xor
pop
xchg
imul
mov
adc
mov
pop
jl
push
sbb
mov
data16
out
cmpsl
dec
rorb
sub
push
xor
aas
std
packuswb
push
lcall
mov
lods
xor
mov
iret
push
test
aaa
repnz
cmc
push
cs
jmp
mov
mov
xchg
loop
lds
xchg
push
mov
test
inc
rolb
aaa
xchg
push
mov
mov
pop
or
shlb
push
adc
leave
lods
and
test
stc
add
ret
mov
pop
pandn
adc
xor
dec
push
jno
shll
mov
nop
sub
loopne
xor
push
addr16
leave
xor
pushw
mov
mov
imul
sysret
xchg
cltd
gs
ja
outsl
push
push
fstl
clc
cmc
adc
movsl
std
mov
push
out
jnp
int
or
ror
dec
jno
into
xor
jae
pop
and
fsubrp
scas
add
sub
and
cvttps2pi
inc
mov
and
push
xor
mov
or
mov
and
adc
movsb
subl
bndstx
push
test
jo
psubq
adc
leave
or
pop
test
bound
xchg
adc
mov
sub
cld
mov
in
lods
je
xchg
fbstp
sub
enter
add
xor
insb
jle
adc
pop
outsb
inc
sbb
cmpsb
inc
mov
mov
xor
mov
pop
shr
lock
push
xchg
std
cwtl
inc
movsl
aaa
push
mov
cmp
pusha
jge
jns
adc
sub
iret
insl
ds
punpcklwd
repz
fidivl
push
push
rorb
aaa
xor
movaps
xor
xchg
mov
xor
mov
testl
jmp
xor
rorl
cs
bsf
dec
jl
sbb
scas
in
push
loopne
or
gs
mov
loope
dec
das
add
cmp
push
cmp
aaa
sbb
mov
iret
or
sbb
jl
and
stos
dec
and
psrlq
inc
popf
dec
cmp
or
fucomip
xchg
inc
add
test
sbb
inc
scas
hlt
stc
ss
prefetcht2
push
aam
and
push
jg
fnop
or
xlat
fistpl
mov
sub
mov
adc
and
sahf
xchg
mov
movsl
or
add
push
nop
das
add
mov
jb
insb
xchg
ficompl
roll
or
loop
add
leave
negb
rorb
ds
cmpsl
por
adc
xchg
je
dec
and
stos
mov
popa
sti
mov
bound
and
jg
in
sarl
movl
mov
nop
push
dec
sti
pop
outsb
dec
sub
sbb
sahf
dec
jmp
sub
notl
ljmp
ss
jg
fcoms
mov
and
add
sbb
std
xor
clc
sub
iret
fwait
adc
push
pandn
xchg
fdivrs
inc
and
mov
std
sub
aaa
or
lret
pushf
adc
pop
loop
not
push
test
and
xcrypt-ofb
cmpsl
push
cld
in
mov
cwtl
into
xor
jnp
sbb
and
mov
lcall
ljmp
xchg
xchg
imul
lds
mov
cmovp
sub
push
cmp
ds
sbb
js
and
sub
out
sbb
push
jns
add
jno
sbb
stos
andl
mov
out
lahf
iret
enter
bsf
sub
mov
shll
mov
outsl
ss
cmovns
repz
xchg
inc
imul
fisubs
jmp
adc
inc
lahf
int3
loopne
xor
stos
les
push
jg
mov
and
push
mov
adc
fisttps
push
jp
enter
jge
and
sti
mov
adc
push
sub
daa
add
stos
mov
adc
mov
cs
ret
push
fimuls
lods
dec
out
jle
push
and
pusha
xchg
inc
bound
mov
cmc
mov
addb
push
mov
push
addr16
das
xor
movsl
jo
sbb
loopne
jae
pop
mov
icebp
cmp
xlat
ss
pop
je
cmp
test
daa
nop
sqrtps
cmp
roll
adc
adc
xor
mov
adc
sbb
lea
mov
and
pop
unpcklps
cmp
mulb
inc
dec
test
movsl
cmp
jl
lret
dec
hlt
andb
xchg
mov
jno
or
mov
aad
dec
lcall
fisubs
addb
mov
cmpsl
add
and
mov
jae
adc
pop
scas
or
xor
mov
mov
cmp
aad
pop
setno
mov
xchg
cmpsb
xchg
punpckhbw
icebp
mov
mov
pcmpgtw
popf
stos
ja
adc
cmp
pop
aad
rorb
push
in
roll
imul
inc
lods
mov
xchg
adc
shl
mov
in
or
stos
sub
inc
lcall
out
setb
push
dec
or
sahf
aas
pushf
add
movsl
pop
pminub
sub
ja
out
adc
and
movhps
pop
fwait
lods
lret
adc
inc
add
jo
adc
push
mov
and
cs
push
out
call
aas
inc
dec
lcall
xor
mov
pop
aaa
jge
mov
scas
push
add
add
adc
in
filds
adc
inc
mov
dec
mov
neg
sbb
adc
add
xchg
adc
sub
dec
adc
out
in
jmp
xchg
xchg
jg
lahf
adc
mov
push
inc
add
pushl
ret
out
or
punpckhwd
push
xor
lods
punpcklbw
add
jg
or
mull
mov
jne
popf
fsubp
in
aad
notb
nop
je
fldt
repnz
ficoml
in
sub
dec
jmp
fildl
pop
mov
in
stc
insb
arpl
ud1
mov
cmovns
daa
pusha
xor
and
shrb
mov
hlt
out
or
or
add
dec
add
mov
nop
push
jnp
leave
cmp
mov
jae
mov
out
icebp
gs
ljmp
mov
fcomps
in
mov
addl
call
popa
and
dec
push
pop
sbb
maskmovq
imull
xor
xor
ja
outsb
insl
shr
mov
adc
mov
sti
mov
sbb
add
mov
xchg
test
fsubrs
push
addl
lret
push
je
test
imul
es
or
mov
scas
and
sbb
rdpmc
lea
or
and
adc
add
pop
rcr
inc
dec
cs
cmc
xchg
pmaxub
jecxz
pop
cmp
mov
sahf
es
adc
ljmp
scas
cli
pop
xchg
ja
xchg
pushf
bswap
bound
adc
jae
pop
jecxz
ret
cmpsl
imul
maxps
loope
mov
lcall
pusha
syscall
int
lods
test
idivb
hlt
cli
sbb
leave
iret
push
scas
xchg
sbbl
cmp
mov
test
jbe
popf
mov
mov
daa
test
hlt
das
rorl
or
inc
and
mov
mov
cvtps2pd
mov
jnp
in
xchg
pop
shl
inc
insl
out
ljmp
xor
in
cmp
push
mov
getsec
jle
enter
daa
sbb
pop
mov
scas
mov
aam
and
sub
shl
rolb
frstor
bswap
aas
clc
push
xor
fistpl
inc
in
lsl
icebp
test
shrd
xor
les
out
cmpb
vmwrite
aad
mov
pusha
push
lock
or
and
push
push
cmp
xchg
pop
push
sarb
xchg
xchg
mov
jecxz
ljmp
arpl
and
mov
int
subl
stc
ud2
std
push
enter
mov
cmp
mov
push
or
mov
and
mov
dec
movswl
mov
lds
dec
push
sbb
xchg
insl
lret
pop
shl
loop
inc
btr
mov
cmova
dec
push
psubd
movsl
push
sbb
push
adc
pop
in
inc
and
push
inc
inc
cmp
ret
lcall
aam
jmp
lgs
jp
leave
shlb
ds
in
sbb
test
inc
xor
gs
mov
dec
mov
movzbl
and
std
lret
mov
or
lahf
cmpsb
rcrb
sti
cmovno
addr16
jle
xchg
add
add
inc
aas
and
sbb
imul
fisttps
mov
fsub
or
or
sbb
push
ja
movl
cmpsl
es
sub
mov
xor
gs
btsl
jns
pop
xor
fadds
movsl
add
test
hlt
sysexit
sub
loop
rdmsr
shrl
loopne
frstor
xchg
jbe
daa
xor
dec
add
addr16
popf
push
loope
jo
mov
aaa
pop
clc
adc
push
cmp
xchg
out
decl
add
jbe
cmp
cmp
xchg
pop
mov
imul
outsb
iret
sub
jge
test
int3
out
movsb
js
push
adc
or
rorl
bnd
shl
push
lods
inc
aaa
test
xadd
dec
inc
jmp
sbb
cmpsl
nop
pop
cmp
loop
sbb
xchg
sbb
nop
popf
jl
xchg
add
ds
xchg
mov
fiaddl
push
lret
bound
add
stc
stos
rcrl
jbe
mov
dec
fdiv
push
pushf
out
jns
movsl
stos
mov
idivb
mov
mov
mov
test
xorps
xor
inc
or
jecxz
jne
imul
leave
icebp
jl
das
pcmpgtd
mov
jg
pop
in
mov
packsswb
mov
jge
outsl
lahf
mov
addr16
sahf
mov
dec
push
ret
call
nop
lcall
xor
or
arpl
push
fidivs
jno
jo
or
in
pop
sub
sub
jecxz
push
mov
mov
add
inc
loopne
cmpsb
aaa
push
jecxz
push
stc
pop
imul
push
sub
pop
sbbb
call
adc
sub
jp
leave
lahf
or
and
lods
test
mov
ja
testl
fwait
cmp
notb
fnstcw
pop
mov
pop
inc
pop
and
je
add
pop
enter
divb
add
dec
and
imul
xor
jmp
sub
pushf
rorb
cld
je
rcll
pop
in
add
dec
rorl
loop
mov
push
push
fbld
xchg
sub
aaa
cmovae
mov
inc
psadbw
mov
stos
fistps
aad
repnz
decb
and
lret
cmp
pop
nop
sub
out
push
test
jae
sub
sbb
inc
sbb
pop
mov
adc
xchg
lret
popf
outsl
mov
test
and
fiaddl
inc
lret
fabs
vmovddup
sahf
inc
jmp
xchg
or
adc
ss
mov
push
shrb
leave
or
popa
imul
psllw
dec
adcl
mov
rorl
dec
lea
xlat
fstpl
scas
mov
fidivl
fldt
mov
pop
sbb
pop
cmp
cmpxchg
jns
flds
xadd
fcomps
aam
mov
and
push
push
adcl
jo
mov
inc
clc
inc
movups
divb
jle,pn
test
mov
data16
sbb
inc
movsb
adc
inc
lds
rcrl
cmp
cmpb
push
imulb
std
cmovp
mov
iret
aas
xchg
in
stos
bound
mov
mov
lds
clc
fdivrl
popa
xorps
mov
adc
sbb
aas
mov
jg
setge
sbb
dec
pop
pop
cltd
dec
jb,pn
push
jp
rorl
ds
cmp
popf
aaa
ret
inc
mov
jae
cmp
cmc
jo
stos
or
dec
mov
inc
bound
mov
mov
fisttpll
popf
icebp
push
enter
test
add
in
aam
cmpsl
andb
cmpsl
xor
jo
pop
mov
or
and
add
sti
inc
jns
unpcklps
lock
cmpsl
minps
cmc
imul
outsb
pop
mov
jmp
fisttps
cwtl
xor
imul
flds
and
xlat
and
xor
mov
sbb
push
jne
and
xchg
mov
fwait
lds
test
xor
push
push
jne
push
insl
loop
pop
sbb
retw
mov
sub
xor
sbb
sbb
rcl
lahf
lock
ds
mov
push
mov
cmc
and
repz
aam
mov
rorb
adc
pop
sbb
or
jp
or
ja
pop
adc
jo
in
ret
into
cs
inc
ret
dec
or
iret
test
pop
push
sbb
push
push
out
adcl
and
in
packuswb
jne
rolb
or
dec
dec
xchg
cmpsb
mov
in
cltd
fdivr
or
lahf
add
mov
inc
out
cli
adc
lds
push
sub
movlps
push
shll
les
jl
adc
add
xchg
fnstsw
je
cmovb
sahf
xchg
lfs
repnz
nop
inc
outsl
and
addb
popf
rcll
out
das
adc
jae
pop
mov
dec
ja
adc
xor
mov
inc
fmull
xor
flds
sbb
add
inc
sub
cmpb
sti
xor
add
inc
mov
push
inc
xor
scas
cmp
pop
outsl
outsb
mov
sbb
mov
pop
imul
int3
enter
cmc
je
ss
ds
xor
mov
cwtl
mov
push
dec
fwait
enter
sbb
push
mov
fdivrl
cmp
sbb
int
sbb
pop
xchg
push
or
leave
psllq
sbb
psubusw
imul
mov
lods
stos
psrlq
int
seta
jp
dec
and
jl
mov
or
xcrypt-cfb
cmpsl
movsb
adc
adcb
mov
out
setbe
popa
inc
jne
imull
pop
subps
pop
outsl
mov
insl
push
bound
fdiv
mov
xor
cmp
jae
ljmp
leave
cmc
into
add
std
xchg
and
pmulhw
subl
push
inc
dec
jb
adc
adc
adc
sub
push
jecxz
in
inc
adc
sbb
jo
mov
stos
adc
push
mov
mov
cmpsb
shufps
or
pop
pop
xchg
cmp
inc
shlb
popa
icebp
test
sbb
cmp
adc
ret
stos
lea
push
inc
pop
or
fnstenv
add
into
test
cld
xor
pop
mov
subl
lcall
mov
cmp
xchg
ds
test
mov
mov
xor
dec
sub
jae
fdivrl
jge
jo
jns
ds
repz
or
clc
movsb
je
pop
or
nop
movsl
movhlps
aad
xchg
hlt
andnps
insl
rcl
subl
outsl
call
sub
test
jp
dec
movzwl
jnp
adc
fildl
pop
js
inc
and
and
dec
pusha
xor
fisubs
cmpsl
div
push
clc
sub
pop
push
dec
js
inc
xorb
mov
outsl
dec
imul
or
or
inc
in
xchg
push
setno
daa
js
jnp
ja
and
xchg
andnps
clc
inc
js
hlt
sbbb
adc
insl
fsubs
mov
std
pop
fs
rcr
push
push
sub
push
pop
mov
mov
xchg
sbb
clc
mov
in
push
add
sbb
mov
and
scas
push
popa
nop
jb
ret
mov
adc
daa
outsb
sub
xor
mov
inc
xor
cmp
push
aad
rorb
jae
mov
stos
pop
syscall
das
mov
mov
pop
cmpsb
bswap
in
flds
lods
or
sbb
xchg
mov
insl
jmp
jle
pusha
les
or
xchg
pop
bsf
int
iret
mov
inc
pshufw
sub
mulb
pop
in
pop
bound
adcl
arpl
mov
pop
xadd
xor
je
jns,pn
icebp
add
mov
jbe
cmp
aad
fnstcw
test
icebp
mov
add
adc
pop
fwait
push
push
or
and
rolb
jns
inc
pop
mov
adc
pop
mov
adcb
rcl
imul
mov
je
adc
xor
fucomip
psubusb
push
imul
arpl
fcmovnb
dec
adc
data16
out
lds
adc
mov
inc
repz
xor
push
pop
lock
or
scas
and
inc
sbb
pop
add
dec
inc
jle
das
lret
cmp
push
mov
push
inc
xor
outsl
jo
sti
mov
ror
call
loop
adc
rol
adc
push
je
repz
sbb
test
in
cmp
or
sti
mov
jp
cmc
stc
pslld
ljmp
adc
in
mov
xchg
sub
aam
pop
adc
cmp
cmp
dec
adc
arpl
fwait
sub
mov
test
cmc
minps
jmp
adc
push
push
fstps
cmp
and
punpcklwd
pop
call
cmove
test
bsf
jns
bswap
cwtl
sbb
cld
pop
bnd
les
add
cwtl
sbb
outsb
xor
cmp
mov
cld
and
push
repnz
adc
sub
or
popa
cmp
xor
lea
pop
push
push
shld
sub
ds
jo
ficomps
pop
popa
sbb
add
push
and
or
mov
test
cmc
pop
push
imul
ljmp
dec
bound
adc
lock
xor
or
pop
or
or
lods
and
pushf
lret
roll
mov
cli
push
pushf
mov
mov
in
cmpsb
aam
push
flds
mov
sub
mov
xorl
pop
je
inc
dec
in
mov
xchg
cpuid
pop
ljmp
fninit
scas
enter
add
mov
and
push
and
sbb
psubsw
add
ret
pavgb
xchg
stc
cld
pop
push
mov
jg
inc
je
repnz
pinsrw
inc
add
arpl
out
aaa
mov
imul
aad
cwtl
adc
psrld
insl
out
jg
and
push
outsl
scas
imul
ds
pop
orl
insb
ret
sbb
comiss
push
cmp
movsb
dec
fsubr
out
out
pushf
cmp
xchg
andb
mov
xchg
mov
push
adc
or
xor
in
jae
adc
adcb
repnz
ljmp
enter
push
pop
repnz
filds
cmpsb
pinsrw
in
add
adc
nop
mov
add
sub
push
xchg
cld
rdmsr
in
test
movzbl
cwtl
aad
or
or
inc
movsl
sbb
clc
ds
xlat
les
cmp
unpcklps
in
loope
into
sub
repnz
add
jno
ja
gs
xchg
push
jno
mov
inc
rcl
es
iret
fimuls
adc
pop
xor
or
je
cmp
std
mov
test
sub
mov
or
mul
dec
mov
add
sbb
mov
mov
mov
adc
jl
negb
fwait
cmp
sbb
add
out
lahf
xchg
aaa
inc
fwait
jge
outsb
movaps
stc
inc
adc
cmp
inc
jo
movntps
test
jae
fdivrs
sti
nop
sti
mov
push
jo
adc
pop
in
loop
aam
gs
ljmp
movntq
jg
loopne
movsb
adc
xor
in
in
or
je
out
js
xchg
dec
cmpb
inc
pop
bsf
jno
ret
or
in
dec
mov
cmpsl
adc
push
cmpsb
pop
push
add
and
xor
jne
movq
lret
or
test
cmp
je
xchg
adc
imul
adc
dec
adc
lods
xchg
dec
cmp
movntq
mov
dec
fwait
por
xchg
jns
jnp
push
js
xor
sbb
fwait
sub
inc
or
sbb
inc
into
inc
test
outsl
addr16
out
pop
lea
rcrb
or
sub
cmp
and
adc
mov
fwait
callw
nop
mov
fs
leave
comiss
sub
sub
mov
hlt
xchg
add
xor
push
loope
jecxz
add
dec
shlb
rdmsr
add
mov
pcmpeqd
cmp
mov
fisttps
daa
fiadds
mov
xorl
pxor
inc
pusha
mov
sbb
push
fdivl
inc
fucomp
sti
in
pextrw
mov
sub
cmp
push
mov
cmp
call
leave
cmp
loop
lahf
sub
adc
add
pop
mov
push
daa
in
lds
push
out
sbb
punpckldq
jae
add
xchg
leave
fldcw
xorps
nop
pop
sbb
loop
test
pop
sbb
or
mov
jp
xchg
xchg
orb
xchg
popa
arpl
cmp
xsha1
cmpsb
mov
insb
addps
dec
cmp
dec
frstor
mov
lcall
test
inc
cs
das
data16
mov
les
packsswb
xchg
mov
sahf
push
inc
xlat
jge
jae
jns
cmpsb
fsubrl
rorl
dec
adc
lock
cmp
push
lahf
stos
in
into
adc
enter
jbe
shll
jp
add
bound
add
sub
fldl
mov
push
jb
inc
inc
packsswb
push
aaa
mov
and
cmpsl
popf
mov
orl
cmp
xchg
scas
lfs
fwait
sbb
in
out
push
sub
paddusb
cmp
or
fcomp
movb
rcrb
jbe
sahf
mov
jp
roll
inc
mov
mov
xor
pavgb
push
gs
cmc
sub
and
dec
fisttpll
and
dec
xchg
out
scas
sbb
pop
int
adc
sti
sub
rorb
sub
jecxz
mov
test
xchg
adc
jecxz
data16
mov
fs
mov
mov
hlt
fcomip
pushf
das
or
repz
mov
sbb
jg
lods
rcl
movb
sbb
xor
pop
repnz
lcall
lret
aad
dec
rcrb
pop
movsb
shufps
test
and
and
nop
inc
and
hlt
mov
bound
or
xchg
std
loopne
xor
push
lock
pop
verr
pcmpgtb
jne
pop
sbb
xchg
repz
push
mov
pop
sbb
leave
push
aad
fcmovnbe
push
dec
push
jno
loope
add
jb
mov
add
cld
bound
loopne
push
jl
shll
push
std
leave
sub
sti
loopne
lahf
jl
sub
repz
adc
xor
fists
xor
sbb
cmp
dec
repz
xchg
out
ret
xchg
leave
imul
mov
xchg
cmova
cwtl
mov
jg
mov
psllq
ds
les
xchg
fcom
mov
test
fiaddl
stc
movzwl
loop
sti
inc
addr16
aaa
xchg
mov
mov
cmovle
cmpsl
xchg
movd
xor
psrad
inc
shlb
pop
mov
imul
adc
adc
inc
dec
pcmpeqw
sub
jl
sub
adc
loop
mov
jl
movsb
inc
scas
rdmsr
fwait
push
jne
add
cmp
mulps
aad
or
inc
mov
icebp
insb
xchg
hlt
dec
mov
or
cmc
clc
js
arpl
mov
daa
sub
or
xchg
jae
dec
ja
fimuls
push
jns
jl
mov
pop
adc
push
jg
add
subb
lahf
sbb
cmp
dec
popf
divps
mov
sub
int
getsec
dec
scas
in
mov
push
lret
xor
arpl
stos
adc
cmp
push
sub
cpuid
mov
iret
add
dec
xchg
or
cmp
ss
seto
test
jmp
popf
jmp
fimull
decl
inc
mov
adc
popa
rcl
mulb
or
in
movsl
adc
pslld
jle
sub
in
cmpsl
adc
cmp
aaa
push
mov
adc
lock
jbe
cld
fimull
sub
test
cmp
lahf
data16
emms
push
add
add
cmp
rcrb
shlb
rclb
and
sahf
mov
inc
out
movlhps
adc
xor
cmp
fildl
lods
sub
rolb
addr16
outsl
std
xchg
inc
ret
lret
mov
mov
adc
xchg
mov
xchg
cmp
aam
insl
adc
out
movsl
lods
ss
lcall
out
pusha
pop
mov
jmp
cvtpi2ps
leave
std
clc
jno
les
imul
arpl
adc
add
loope
rcrb
dec
lds
push
out
leave
mov
pop
ret
mov
add
mov
xchg
aaa
pushf
cld
xor
pop
test
arpl
pop
cmp
test
repz
jo
mov
leave
lcall
and
inc
out
stos
xchg
lgs
int
mov
hlt
in
shll
fwait
jge
xchg
mov
or
mov
or
cmp
das
mov
lcall
xor
fistps
pop
insb
mov
jnp
cmova
rorb
iret
pop
out
roll
cmc
mov
inc
jns
jecxz
or
mov
js
jp
andl
hlt
movlhps
shll
dec
xor
popf
mov
mov
or
sbbb
inc
jp
je
dec
ja
testb
mov
jnp
call
push
bound
daa
inc
repz
mov
add
pop
xor
outsb
les
mov
add
lods
jmp
xchg
adc
cmpl
mov
cmovne
dec
out
and
test
movhps
jo
push
mov
cmpxchg
sar
adc
daa
lock
xchg
les
stc
dec
adc
sub
inc
jmp
xor
jae
xlat
popa
pop
orl
xchg
add
xor
jae
lgs
aam
hlt
jne
paddw
and
cmp
mov
xchg
cmp
push
cmovno
enter
mov
scas
cmc
jae
sbb
xor
outsb
insb
movsbl
scas
pushf
ud2
rcr
jb
enter
push
mov
rorb
cmovl
fdivrp
push
es
add
in
push
test
mov
mov
cld
cmp
xor
es
call
bswap
add
mov
addl
mov
movlps
push
adc
mov
mov
jbe
pushf
mov
cmpsl
mov
por
inc
fwait
ret
mov
pop
mov
cmpsl
popa
cs
sbbb
scas
setge
fidivrl
sbb
andnps
pop
cwtl
xchg
or
imul
pop
mov
pop
push
aas
mov
sbb
add
mov
pop
shufps
imul
sub
ss
adc
cltd
lds
jb
mov
or
clc
inc
push
cmp
push
sbb
mov
push
mov
arpl
lret
cmpsl
ds
cmp
cs
jns
pop
push
jmp
and
xor
and
cltd
xchg
bsr
sbb
jb
out
add
adcb
jnp
sti
nop
pop
emms
test
xor
scas
mov
sub
mov
andl
pop
add
lret
fisubl
or
cmp
add
frstor
dec
sarl
xchg
leave
insb
setp
rclb
mov
inc
mov
push
and
in
xorb
xchg
imul
jg
fstl
fsub
sbb
outsl
push
xchg
sti
mov
movups
add
sbb
cmpl
sbb
xchg
in
cmc
in
pop
dec
xchg
filds
cwtl
ucomiss
sub
setl
push
jbe
inc
insb
in
push
xchg
repz
add
jecxz
and
and
mov
xchg
dec
and
and
and
imul
hlt
and
adc
rdtsc
imul
xchg
push
test
inc
pop
mov
es
adc
inc
popf
push
pop
push
setle
mov
add
nop
lea
loope
mov
fcoml
jne
fwait
ud0
out
ret
xor
cmpsl
push
xor
stos
sbb
dec
imul
jge
mov
adc
test
mov
xchg
sldt
js
lahf
mov
adc
rolb
dec
push
add
jo
jns
cmp
sbb
push
mov
ds
push
psrad
pop
xor
bswap
scas
sub
int
push
xchg
movsl
push
mov
fwait
ucomiss
mov
adc
addl
inc
cmp
bound
getsec
repz
andl
mov
or
outsl
neg
pop
je
sub
mov
cwtl
movsb
mov
and
adc
cmp
mov
pop
ss
stc
mov
xor
iret
sbb
adc
adc
pop
sbb
mov
and
mov
mov
inc
pushl
in
cmp
add
repnz
or
mov
xor
stos
pop
movq
imul
sbb
adc
inc
pop
das
sbb
push
dec
xor
sbb
xchg
stos
decb
clc
jns
xor
les
adc
lret
sub
push
add
fimuls
icebp
xchg
shll
arpl
push
test
push
imul
xor
or
inc
mov
ss
mov
rclb
push
xor
sahf
push
sub
shlb
je
lret
pop
xlat
jp
sub
inc
iret
nopl
aas
mov
push
jp
hlt
and
in
sbb
jl
fcmovu
cmpsb
or
mov
shlb
subps
mov
pop
fwait
je
dec
adcb
mov
xchg
jp
lret
arpl
fmull
sub
aam
mov
gs
sub
data16
psubb
xchg
hlt
nop
dec
fcomps
jecxz
in
maxps
and
das
push
pop
adc
jp
add
rclb
sub
imul
jb
nopl
mov
mov
xor
lret
adc
iret
clc
and
inc
sbb
or
sbb
loop
xor
mov
or
jmp
push
mov
mov
xor
cmp
jp
mov
insb
int
jnp
dec
jae
negl
pushf
push
and
mull
mov
mov
dec
and
adc
sub
push
jae
dec
cli
popa
push
and
sbb
push
sub
ret
int
push
mov
data16
lret
push
mov
shl
inc
aam
jne
jbe
xchg
shll
lods
cwtl
mov
xor
daa
mov
jle
add
mov
out
sbbl
pop
inc
xchg
test
setle
jmp
ret
mov
xchg
inc
jl
cmc
dec
paddusb
aam
mov
idivb
xchg
jge
aad
jns
jno
jb
or
dec
lea
sbb
aad
sbb
push
int3
or
mov
push
mov
jae
or
cmpsb
pusha
lods
mov
cmp
sub
subl
pop
psllq
js
pop
scas
mov
cli
sub
je
jb
sub
nop
xor
add
adcb
inc
insb
ret
out
push
and
xor
loop
pop
mov
rorl
fdivl
sbb
sbb
adc
insl
cmpsl
jmp
ret
push
into
pop
ret
cmp
pmulhuw
lret
jmp
sti
in
rorb
add
ljmp
and
in
sti
adc
push
insb
popf
sbb
js
inc
repnz
call
pop
push
cmpb
shlb
ficoms
dec
push
xor
stos
sbb
xor
rcrl
lock
push
push
sub
mov
fmuls
push
orl
xchg
aad
test
in
lcall
and
mov
scas
repz
xchg
push
mov
movq
sub
out
mov
inc
movsl
ja
adc
cpuid
and
mov
orb
xchg
outsl
inc
sbb
ds
dec
xor
movsl
stos
imulb
mov
dec
dec
jle
dec
add
loop
in
push
push
por
cmp
ret
sub
dec
outsb
paddb
mov
push
pushf
pop
xor
lar
mov
mov
xor
xlat
aaa
lahf
movsb
jmp
mov
lds
pop
cli
aam
inc
jecxz
add
sbb
int
cmp
icebp
cwtl
push
push
jle
popl
mov
ss
mov
stos
push
jecxz
cmc
dec
inc
stos
mov
data16
shlb
loopne
emms
inc
jecxz
adc
jo
movzwl
xchg
adc
movsb
imul
mov
pop
jp
lret
adc
jle
cmovae
dec
sub
rcpps
pop
sti
shrb
and
jp
mov
xor
jo
jno
jp
scas
call
ljmp
jno
jae
clc
shl
mov
movsl
sub
push
cmp
cwtl
mov
hlt
xor
push
mov
outsb
jge
push
pushf
pop
xlat
fildl
shlb
adc
push
jbe
sbb
dec
addb
aam
fcoml
mov
and
mov
push
andb
xchg
mov
lahf
mov
sti
push
in
or
rsqrtps
jle
mov
sbb
sub
stos
xor
cs
sub
daa
mov
sqrtps
ret
cmp
sbb
movsb
sahf
lret
pusha
bswap
cmpsw
lods
sub
cmp
xor
negb
in
and
and
dec
ds
xlat
sbb
xchg
jae
bound
loopne
sti
and
push
lret
mov
scas
or
es
cmp
in
add
rorl
jbe
fidivl
cmpsl
negl
dec
sbb
xchg
xor
sub
push
mov
inc
lea
outsb
insb
jnp
mov
xchg
adc
scas
add
fcomip
in
xchg
insb
ret
bound
xor
jge
scas
mov
adc
out
jbe
cmp
orl
cmp
stos
jb
xchg
or
xchg
std
mov
dec
jne
pop
stc
jge
orb
fistpl
fucom
das
or
stos
lahf
cmpl
movhps
mov
jge
sbb
add
ja
pop
pop
dec
insb
daa
xor
cmp
shll
loope
jecxz
into
xchg
cmpsl
ror
cmpl
std
loopne
in
inc
mov
inc
fcompl
seta
gs
jb
mov
push
insb
dec
mov
movups
test
xchg
je
les
sbb
cmovs
inc
cld
fwait
lahf
loop
push
stos
cmpsl
sub
test
icebp
vmwrite
repnz
cmc
lfs
mov
and
push
xor
mov
in
dec
adc
xchg
ds
out
sbb
addb
dec
bswap
inc
add
into
nop
mov
cmovs
bnd
push
pop
jae
jl
xchg
or
add
push
jmp
pop
loope
xchg
xor
mov
cmp
or
cmp
clc
bsf
hlt
add
add
ja
add
xor
push
add
cmpxchg
hlt
repz
mov
pop
cmp
cltd
orl
pop
xor
arpl
dec
rcll
dec
mov
sub
jbe
filds
lock
lea
jnp
fisubrl
sti
cmp
div
sub
ret
mov
test
popf
das
pmaddwd
scas
xchg
inc
and
unpcklps
loope
jecxz
orb
in
leave
in
jno
jnp
rorl
ja
mov
push
inc
sbb
inc
sbb
jne
test
push
insl
fisubrl
jns
adc
ret
leave
sub
or
aam
rcrb
push
dec
aad
or
adc
pusha
pop
repnz
roll
test
lsl
aad
sub
mov
cwtl
testb
push
sarl
sub
mov
xchg
or
push
iret
mov
test
bound
syscall
jmp
popa
mov
and
push
adcl
push
or
fstl
push
jb
loope
xor
jge
inc
fldl2t
mov
push
add
dec
xchg
mov
inc
jno
mov
add
push
mov
jecxz
sub
daa
pop
arpl
fists
leave
jle
popa
fwait
subps
xor
fldenv
jnp
or
lea
pop
fists
fcmovne
out
cmc
cmp
push
jmp
inc
mov
bt
divl
ret
je
or
lods
bound
inc
mov
inc
sbb
fidivrs
setp
negb
jne
imul
inc
out
pop
ret
cltd
mov
pushf
nop
mov
mov
call
xadd
xchg
addr16
xlat
lret
scas
cmp
jecxz
mov
push
dec
sbb
add
sbb
fldt
data16
cmp
sub
xchg
jae
sbbb
pusha
sub
pop
sub
mov
add
bound
aad
or
mov
stc
and
and
iret
cmp
inc
sub
inc
out
mov
cwtl
or
dec
sub
pop
cmp
mov
es
push
pop
gs
jno
mov
scas
lds
loopne
and
sub
movswl
in
decl
and
push
shlb
jp
or
mov
cld
dec
xor
cli
push
enter
xchg
psubb
inc
popa
lcall
add
pop
rolb
loope
paddusw
add
in
lcall
jle
in
pop
sbb
inc
gs
ret
out
pusha
mov
mulps
shll
sbb
in
mov
sahf
mov
mulps
scas
fadds
bswap
cltd
jne
add
jmp
sti
lret
mov
xlat
psubusb
movb
mov
add
sub
scas
mov
fwait
lret
popf
pop
push
adc
mov
jmp
insl
dec
jmp
xchg
jecxz
xchg
xadd
mov
fcmovne
push
cld
sbb
lods
and
push
jns
sub
cmp
inc
adc
xor
fisttps
test
jmp
push
sete
scas
sub
xchg
jge
mov
push
popf
inc
data16
lods
cmovs
add
mov
mov
xor
xorl
stos
psubd
fistl
push
fs
sbb
cwtl
repz
psrlq
sbb
or
push
mov
mov
arpl
loopne
xchg
mov
mov
or
mov
sub
dec
xorb
jle
in
xorps
daa
push
sub
mov
setg
jecxz
push
xchg
push
mov
adc
test
pop
cltd
jnp
gs
mov
cmp
lret
and
std
lea
idivb
shlb
mov
inc
cmpsl
mov
and
in
cmpsl
test
repz
or
seto
xor
jne
cs
rclb
repz
arpl
sub
dec
lock
adc
or
ret
mov
test
push
int
push
jae
pop
jns
add
push
testb
xor
sbb
xchg
dec
xchg
jae
dec
cmp
icebp
adc
fldl
test
mov
aad
jo
je
and
fadds
push
shll
push
popa
orl
aaa
loopne
loop
jno
xchg
scas
imul
lret
xchg
dec
repnz
cli
cli
sub
sub
jb
jge
mov
push
xchg
movsl
push
arpl
jle
dec
sub
imul
fadd
lea
fucom
es
pop
pusha
sbb
popa
ret
cmovae
call
mov
imul
sbb
cmp
repz
addl
lds
mov
iret
or
lret
nop
sbb
or
adc
xchg
inc
mov
lds
cmovs
ficoml
sub
popf
scas
sahf
adc
mov
pop
dec
rcl
adc
rcrb
push
and
fimuls
js
gs
mov
mov
shld
add
sbbl
in
adc
out
das
cmovb
in
in
mov
dec
sub
movq
adc
repz
push
mov
push
mov
mov
inc
pop
dec
push
dec
out
or
pushf
push
std
int
xchg
arpl
and
out
mov
lcall
adc
ret
sbb
cli
ds
in
outsb
setle
scas
test
jae
out
shl
push
xchg
pavgb
sbb
mov
ret
and
movsb
inc
xchg
setp
loopne
mov
popa
cli
xor
cmpsl
aas
adc
cmp
es
sub
test
lods
bound
fldl
cmp
ds
dec
ret
js
jbe
mov
sbb
in
cmp
add
jae
and
pop
scas
shrb
lea
in
mov
fcoms
insl
xchg
inc
movl
and
push
mov
sub
aas
cmpsb
rcr
and
mov
sub
mov
jb
stos
sub
nopl
mov
ret
sbb
jmp
mov
mov
lods
jae
stc
shl
psllq
mov
movb
shlb
lret
int3
adc
loope
es
test
push
mov
sub
loop
mov
rolb
cltd
xor
sub
jno
push
push
imul
or
push
and
and
rol
cmp
adc
push
ss
into
push
xlat
pop
lock
bswap
adc
mov
inc
shr
insl
sbb
decl
jl
mov
add
jae
xor
cmp
mov
out
add
bound
sbb
stos
loop
jl
xor
scas
repnz
mov
add
and
fs
cmp
pop
bound
mov
sub
lds
subb
jecxz
sbb
setae
out
xor
push
dec
inc
arpl
arpl
fistps
mov
sbb
rorb
xor
sbb
push
cmpl
push
jnp
adc
or
repz
mov
bswap
lods
pop
fdivs
inc
es
sbb
pmulhw
mov
adc
mov
inc
cmc
jmp
maxps
insb
jmp
jge
or
lods
paddd
repnz
sub
es
cmp
xchg
inc
movsl
adc
aas
dec
pcmpeqw
in
adc
ret
sub
xchg
into
mov
adc
mov
sub
jno
pop
std
rcl
enter
rolb
ds
sarb
jno
outsl
jge
addl
dec
xor
out
enter
dec
cmpb
xchg
pop
loope
scas
lcall
adc
rcr
push
and
push
ds
seto
cld
mov
or
xchg
inc
stc
rorb
xchg
mov
jge
test
and
loopne
and
xor
dec
ja
stos
cwtl
scas
mov
lret
xchg
push
or
cli
add
jb
dec
push
cmovne
jbe
test
fisttpl
clc
adc
lgs
jecxz
cmovo
das
ficomps
stc
push
lock
ljmp
insl
sbb
mov
sub
in
scas
sub
and
stos
inc
aaa
pop
test
mov
xor
shlb
lea
cmp
lcall
adc
push
xchg
xchg
pusha
fisttpl
imul
add
sub
test
inc
adc
das
pop
sub
std
push
sbb
jge
sarl
jmp
test
jmp
xor
dec
orps
daa
movsl
bound
xor
cmp
int
enter
loope
dec
xor
stos
in
xor
xchg
aam
add
punpckhbw
outsb
xchg
pop
out
and
nop
sbb
or
cld
clc
jns
or
sub
out
ja
ficoml
jmp
push
aad
call
nop
popa
sub
pop
imul
ss
inc
cmp
inc
push
in
jle
xor
cli
jmp
fldl
data16
movsl
cli
push
lret
mov
daa
cltd
inc
jbe
cmc
mov
xchg
fisubs
sub
call
pop
je
aam
or
std
js
dec
int3
jle
sub
jp
movsl
jnp
sbb
mov
test
out
cmp
lcall
adc
packsswb
cmp
wrmsr
ja
push
das
xchg
push
dec
adc
fcoml
jb
fwait
mov
cwtl
jo
push
xchg
mov
fimull
roll
add
in
inc
lock
aad
sbb
in
inc
mov
mov
fnstcw
mov
push
mov
add
ss
inc
scas
mov
je
out
dec
adc
pushf
or
push
leave
orb
cmpsb
testb
mov
sbb
pop
add
insl
jmp
sti
jecxz
pop
lods
xor
inc
cld
mov
push
xor
cwtl
or
xor
jmp
pop
movsl
mov
jb
rorb
cmp
mov
dec
iret
cli
mov
mov
fmulp
mov
pop
xchg
dec
faddl
ret
pop
inc
mov
jmp
ret
inc
rcrl
popa
test
movsl
lock
lods
psubusw
insl
lret
lcall
push
and
add
pavgb
mov
seta
add
sbb
aam
mov
lret
xor
nop
fidivrl
or
inc
adc
sar
nopl
add
imulb
arpl
xchg
ja
pminsw
leave
lmsw
push
fsubr
test
xchg
jge
cs
xchg
xabort
jo
lsl
or
insb
xor
inc
push
jb
cmp
adc
ja
sti
push
jo
mov
aas
sbb
loope
xor
pop
test
stc
and
jae
repz
jecxz
insb
xlat
inc
or
invd
je
and
mov
out
xor
outsl
nop
std
pop
pmulhw
bswap
test
cmp
mov
aad
pushf
pop
loopne
sti
orb
stos
lods
mov
int
nop
push
imul
mov
setne
enter
inc
test
sbb
inc
or
lds
in
stos
add
xor
divl
inc
out
mov
jl,pt
push
out
testb
int
jae
cmpsb
pop
sbb
jg
jge
nopl
xor
and
xchg
sbb
pop
pop
pop
leave
sbb
mov
nopl
iret
xor
gs
por
push
pop
popf
dec
psubw
into
jae
and
fs
mov
addr16
xor
or
pop
dec
or
test
and
xor
punpcklbw
add
clc
pushf
pop
popa
adc
test
xor
orl
gs
pop
or
sub
fdivr
or
in
adcb
pop
adc
mov
fstpt
dec
or
loope
sbb
inc
inc
outsb
jbe
inc
jg
enter
repz
cmpxchg
inc
cmp
ljmp
xor
mov
inc
movsl
leave
push
push
notb
jge
jl
adc
xchg
test
repz
sbb
mov
fnstsw
std
repz
loopne
pop
xor
lahf
arpl
fwait
bswap
fisttpll
sub
adc
sub
flds
fwait
jno
test
adc
push
push
pop
pushf
and
xor
call
int3
pop
mov
mov
fisubrs
stc
jle
xchg
nop
inc
sahf
cmovl
fstl
push
mov
psubusw
hlt
ljmp
pop
dec
adc
inc
push
add
push
mov
xchg
inc
divl
sub
push
xchg
out
lahf
cvttps2pi
or
jg
ja
push
jo
daa
or
subb
fildl
loopne
aam
jbe
mov
outsb
leave
jl
je
por
das
mov
enter
cmp
adc
rolb
fsubp
push
xchg
rcrl
jge
dec
lret
sbb
xor
mov
and
or
arpl
seto
dec
lock
js
scas
punpckhbw
imulb
pcmpgtd
mov
jnp
sti
fstpl
mov
or
ret
scas
xchg
fisubs
add
cli
cmp
popf
jl
je
into
insl
adc
jb
movsb
packssdw
jp
shll
sbb
push
sub
inc
sahf
cmp
cmp
mov
dec
and
test
paddsw
mov
out
inc
mov
push
sbb
or
jecxz
arpl
xchg
dec
mov
sbb
stos
inc
sbb
sbb
xchg
stos
inc
int3
xlat
push
xchg
jno
push
cmc
push
bound
push
test
stos
jns
lret
xor
faddl
in
sbb
cmc
adc
and
xchg
rolb
dec
test
repnz
ljmp
xor
jg
pavgb
jo
add
dec
xchg
enter
push
ret
adc
mov
xor
insb
aas
or
popa
mov
push
cmpsb
shlb
sbb
jle
lahf
push
popf
ljmp
adc
rolb
push
adc
daa
adc
inc
and
mov
push
pop
pop
pop
pop
lcall
lret
sbb
movsb
mov
cmpsb
inc
in
mov
or
add
nop
adc
stos
test
inc
rorl
sbb
add
lods
ja
aas
inc
pop
add
inc
inc
fbld
mov
loopne
sbbl
mov
into
xchg
cld
repz
nop
or
pop
sbb
mov
add
mov
ljmp
adc
sbb
mov
push
adc
jecxz
mov
lods
mov
mov
rorl
ja,pn
mov
or
push
mov
jl
xchg
fstp
fimuls
fistpl
enter
outsb
push
mov
addl
rorb
setnp
icebp
jg
arpl
or
mov
hlt
orps
iret
out
and
leave
scas
add
cmpsb
setge
pop
mov
lock
sub
adc
out
ds
sub
and
or
inc
out
inc
push
pmovmskb
out
inc
mov
sahf
mov
cld
inc
pop
add
inc
lea
sbb
repz
aaa
fdivl
xchg
pop
stc
loop
mov
popf
ret
popf
ret
xor
leave
lock
mov
adc
sub
fwait
lahf
scas
xchg
lret
push
add
or
jae
por
cmp
retw
jnp
jb
das
pop
inc
jne
in
pushf
jo
cmp
movd
inc
clc
pop
je
mov
enter
xlat
push
and
lret
in
inc
leave
cmp
push
setne
in
pusha
pop
scas
rcrb
jnp
leave
cs
ds
sti
push
pcmpgtw
pop
mov
add
rcr
test
cs
xchg
pop
xchg
psllq
push
and
push
pop
jbe
ficoml
mov
add
sbb
inc
xchg
and
sub
sub
adc
push
arpl
cmp
mov
xchg
bts
out
push
pusha
invd
adc
inc
add
fdivs
movsb
icebp
aad
arpl
test
dec
pop
iret
in
cmp
dec
and
or
mov
test
sti
loope
or
lods
push
lock
xchg
out
sub
jno
pop
pop
sbb
mov
insl
adc
and
xchg
lods
push
mov
or
push
rcll
add
bound
push
xchg
add
cmpsl
xor
adc
sbb
movsl
jnp
mov
sets
aam
test
inc
rcrb
js
mov
xor
psrlw
mov
in
testb
pop
repnz
rdtsc
adc
lahf
cwtl
cmp
xchg
and
fists
inc
adc
pop
jl
mov
jbe
jae
xorb
aaa
inc
pop
push
mov
fcomi
cmp
cwtl
addl
jl
add
xchg
in
scas
mov
pop
dec
ud0
cmc
push
call
sbb
xchg
jae
jp
sub
xchg
div
enter
jle
aam
arpl
punpcklbw
push
xor
add
aas
orl
push
vmovlpd
inc
ds
jecxz
lock
std
stc
xor
pop
loopne
sub
setg
movsb
nop
aad
ds
adc
cs
mov
sbb
mov
lea
push
loope
clc
jg
dec
add
mov
fidivrs
xlat
cmpsl
xchg
mov
lret
data16
scas
fwait
loope
psubsw
and
push
stc
out
stos
xchg
sbb
push
les
push
inc
xor
fmuls
sbb
inc
push
lods
push
mov
xor
fiadds
and
sbb
push
cmp
addr16
jae
shrb
dec
jecxz
fwait
insb
hlt
pop
mov
std
test
sbb
fisttpll
loope
adc
dec
stos
cmp
leave
jns
clc
lock
rsm
adc
jle
punpckhdq
test
adc
sti
ret
xchg
nop
fldz
mov
push
pop
sub
lea
lcall
mov
pop
cltd
adc
movsl
sbbb
mov
mov
pop
std
bound
hlt
sbb
xlat
mov
sub
sub
rclb
pop
stos
pcmpeqb
jnp
addr16
push
mov
adc
es
mov
push
pop
xchg
adcb
dec
sub
and
pop
pushf
sub
mov
ror
cmp
or
adc
fisubrl
push
hlt
inc
jmp
test
push
jne
dec
jns
pop
mov
shl
jnp
test
sbb
outsl
xor
pop
adc
inc
insl
pop
test
adc
jl
sub
fistpl
xlat
std
pmuludq
mov
add
ja
movsbl
mov
sbb
call
rolb
mov
setne
dec
in
xchg
loopnew
pop
shlb
out
out
mov
dec
andps
mov
jle
xchg
call
seto
stos
push
inc
popf
cwtl
cmpb
push
movsl
xchg
daa
adc
pop
pop
inc
push
sub
cmp
adc
cld
or
mov
out
sbb
fmuls
lock
add
adc
sub
imul
adc
clc
add
dec
jmp
adc
adc
cli
push
sbb
loop
out
xchg
inc
fcoms
ss
jae
stos
pop
outsb
sbb
or
pop
jno
pop
sub
sbb
or
mov
decl
pop
and
in
shll
std
jmp
xorl
daa
pop
inc
out
inc
in
arpl
and
data16
fists
and
push
nop
int
jle
fcomip
xchg
adc
pop
and
xchg
adc
cmp
shlb
inc
in
clc
bound
or
xchg
jge
hlt
push
js
push
sbb
into
or
or
push
bound
sub
and
jge
adc
sbb
lods
lods
mov
pop
push
enter
or
stos
loope
lret
xchg
adc
pop
pop
mov
cwtl
in
jge
rcpps
cmp
or
dec
scas
mov
sahf
movhps
inc
or
mov
mov
pop
add
sbb
loope
sub
out
jge
repnz
mov
popf
and
ja
lret
pop
mov
data16
imul
cmc
int3
mov
icebp
lret
fdivrp
lods
pop
add
or
or
fnstsw
fisubl
aas
ret
inc
out
sbb
adc
sahf
fadds
icebp
loope
jbe
jmp
sbbl
push
mov
mov
xor
adc
into
std
mov
lock
outsl
cli
scas
cli
sbb
or
cmpsb
shr
outsb
sar
sub
jbe
int3
stc
divb
pop
or
dec
adc
stos
mov
leave
mov
mov
push
add
shrl
mov
les
mov
sbb
mov
stc
sbb
sbb
pop
shlb
mov
xchg
mov
fdivl
dec
mov
icebp
fisttpl
cmp
int3
fisubs
loop
out
sbb
loope
or
xchg
or
outsl
imul
out
xchg
loopne
inc
and
mov
pop
or
or
adc
sahf
adc
addr16
or
int3
test
out
jecxz
mov
push
decb
xlat
mov
ret
rcrl
jmp
sbb
or
sbb
in
icebp
pop
testb
xor
or
jmp
insl
jb
pop
xchg
or
or
push
pop
lock
xlat
dec
ja
mov
inc
adc
cmpsl
rorb
push
pop
add
arpl
dec
popf
sti
cli
std
mov
aaa
xorb
adc
mov
sbb
mov
adc
shll
out
xor
decl
in
jns
daa
xor
sub
addl
inc
inc
lret
sbb
in
rcll
icebp
loope
nop
mov
cli
paddusb
int3
pop
cmovge
mov
lods
fcompl
or
jbe
pmaxub
call
bswap
into
int
xlat
fcmovu
aam
test
leave
enter
les
inc
int3
or
popa
test
mov
jl
cmp
cmp
dec
pop
pop
cmp
dec
dec
dec
fs
dec
cmp
fs
dec
sub
std
lods
sbb
fiadds
out
dec
cld
dec
xor
dec
add
dec
test
cmpsl
lret
icebp
add
into
inc
sbb
cld
sarl
in
xchg
pop
cli
mov
sbb
mov
dec
push
out
fisubrs
fiadds
xchg
mov
inc
mov
in
sub
push
aaa
lea
or
popa
pop
xchg
out
pop
sub
ja
psubusw
xor
cmovns
xor
pop
lret
push
jae
sti
add
push
cli
fnstcw
or
add
add
sbb
insl
cvtps2pi
out
lcall
adc
xor
rdtsc
scas
mov
pop
sbbl
icebp
push
and
stos
ds
fdivs
psrld
xor
mov
sahf
nop
dec
mov
pop
shld
xchg
rcl
adc
enter
in
and
pop
jno
sub
cltd
or
lods
xadd
pop
adc
sub
pop
stos
jmp
xorb
bsr
sub
mov
jge
jbe
mov
fdiv
adc
jl
or
pop
sub
ret
add
xchg
xor
sub
mov
pop
dec
mov
scas
add
jl
sub
addb
ret
paddd
ss
mov
inc
dec
popa
btr
outsl
in
xchg
add
aas
jge
mov
setle
ds
jle
in
sahf
add
repnz
movsl
mov
inc
jbe
lret
aam
leave
mov
mov
xor
out
xor
std
push
sub
mov
cmp
push
ret
dec
pop
lods
fists
jnp
fisubrs
icebp
test
bound
cmp
shl
xlat
in
dec
mov
das
or
sub
mov
out
pop
adc
jo
mov
test
adc
outsl
repz
sbb
fisubl
push
push
lods
arpl
mov
pand
les
std
dec
pop
inc
stc
mov
popa
ret
sahf
movsl
lret
mov
lods
push
fisubl
pop
sbb
sbb
mov
or
dec
dec
add
in
cld
sar
push
push
divb
fimull
sub
cmp
inc
ds
fstl
push
gs
add
or
pop
pop
or
sti
push
fildll
adc
pop
or
negl
scas
and
pop
mov
insl
or
aam
adc
push
lret
adc
into
sbb
push
sbb
icebp
sbb
pop
sub
outsb
xchg
adc
push
in
fistl
dec
imul
mov
jl
push
nop
dec
icebp
or
pop
aaa
sub
xchg
adc
mov
repnz
mov
push
add
push
sbb
sti
in
cli
imul
mov
add
cmp
or
in
clc
test
jle
and
or
jns
cli
aam
pushf
xchg
pop
call
pop
dec
xor
pop
adc
push
lret
jmp
into
sbb
fs
pop
icebp
sbb
in
sbb
lcall
pop
mov
push
lds
adc
or
ljmp
push
jge
lods
or
lods
movsl
inc
sub
mov
cmpsb
aam
adc
adc
icebp
adc
or
fcmovnb
cld
hlt
sub
daa
lcall
pushl
lcall
cmpsb
mov
jle
movsl
adc
jne
repnz
and
fsubrs
sti
jmp
jmp
stos
sub
mov
icebp
rcl
cld
adc
out
lea
or
cmc
cld
pop
cld
mov
or
es
push
mov
inc
sbb
in
push
lret
out
lock
and
fcmovu
cmpsl
movsb
jo
and
xlat
sub
dec
es
pop
pop
idivb
push
jle
mov
and
inc
push
add
push
inc
sbb
inc
pand
push
pop
cvtpi2ps
mov
sub
sbb
loop
sub
mov
dec
add
and
add
add
sub
fisttpl
sbb
push
or
mov
mov
aad
iret
dec
aas
and
push
cmp
and
in
and
pmaxsw
ss
fstps
push
xchg
jg
dec
sub
lcall
mov
es
mov
and
and
sbb
loopne
sub
xor
subb
xor
fcoms
loope
cmp
daa
test
push
aam
out
outsb
psubsb
pop
adc
and
inc
cmc
adc
incl
popa
mov
jb
sbb
outsb
xchg
sbb
cmpsl
push
push
mov
out
mov
test
packsswb
lods
pop
icebp
hlt
punpcklbw
push
lock
sarl
repnz
cmp
mov
xor
sbb
fists
push
cld
sub
jmp
pop
lds
adc
ss
decl
mov
rcrb
lcall
pop
fisubrs
or
lea
jae
aas
in
mov
and
push
out
sub
movlps
or
adc
pop
add
jp
rsqrtps
xor
wbinvd
xchg
in
fcomip
inc
or
push
add
js
arpl
decl
ficompl
inc
bound
test
jne
jo
inc
and
insl
ja
int3
xchg
cmova
sti
jp
scas
add
out
fsubl
mov
pop
cmp
pop
clc
pop
xchg
out
xchg
jns
cmc
aaa
addr16
seta
cmp
pushw
mov
es
jbe
shll
mov
test
sub
sbb
sub
add
sub
aad
mov
mov
or
xchg
int3
xchg
fwait
push
jbe
xor
mov
jge
adc
jmp
repnz
jns
sahf
in
or
xchg
xor
mov
stos
push
adc
out
pop
xlat
jb
xchg
adc
sbb
fucomp
lret
dec
psubusb
push
jae
les
movb
inc
xchg
dec
adc
out
jmp
adc
adc
mov
cmc
stos
decb
out
and
icebp
push
push
or
arpl
ljmp
cld
adc
cli
sahf
mov
sarl
xor
xor
gs
sarl
mov
pop
sbb
in
dec
xchg
xor
imul
sbb
arpl
hlt
xchg
xchg
js
lds
repnz
xor
dec
pusha
in
cltd
or
test
leave
das
and
inc
test
or
adc
add
lods
mov
mov
sbb
test
add
xchg
ljmp
lahf
jecxz
mov
movsb
add
fcomps
jmp
decl
mov
jbe
mov
testl
push
add
scas
cmpsl
mov
ret
pushl
add
push
xor
adc
mov
pop
and
pushf
sbb
push
sbb
xchg
adc
int3
mov
es
sub
rcrl
ljmp
out
sbb
or
cmc
movsb
incl
subl
test
insl
add
mov
bnd
mov
int
adc
cmp
lret
jns
push
mov
pop
int
add
dec
sbb
adc
xchg
cmpsb
adc
and
sbb
mov
jle
mov
int
inc
jle
lret
pusha
push
int3
bound
xchg
sbb
mov
mov
ret
ljmp
fcoms
mov
inc
mov
fisubrl
push
out
faddl
xor
xchg
mov
pop
mov
nop
xchg
and
pop
clc
add
or
out
lcall
adc
adc
out
add
or
int3
out
mov
push
data16
mov
cs
push
sbb
push
mov
data16
into
pop
add
adcb
mov
lcall
jp
xlat
push
sub
add
add
xchg
outsb
adc
cmp
pop
add
jl
stos
mov
sti
js
ficoml
nop
fisubrl
mov
push
lcall
stos
cmpsb
mov
xchg
mov
sahf
out
lret
mov
fimull
xor
fisubl
rcrb
lret
push
sub
add
ljmp
sahf
ja
cs
out
fcmovu
punpckhdq
loope
adc
mov
or
lret
stos
pop
dec
sbb
adc
outsb
call
mov
repnz
push
les
into
xchg
add
into
movsl
add
sbb
sub
adc
popf
pop
push
lea
fdivl
push
sti
dec
inc
mov
mov
insl
cmc
mov
out
xchg
or
fucom
xlat
xchg
jnp
repnz
into
pop
add
mov
pushf
cltd
stc
inc
add
addb
adc
add
or
lcall
shr
push
sar
mov
or
lret
pop
jne
std
and
outsl
fiaddl
dec
pusha
out
or
shlb
test
or
add
or
mov
ficompl
dec
adc
cmp
xor
push
sahf
or
inc
enter
call
fcom
or
jl
or
add
sti
adc
mov
int
mov
xor
add
shl
in
in
or
cs
mov
jmp
inc
cmp
push
cmp
mov
repnz
or
out
loop
pop
inc
fsubr
pop
icebp
in
lcall
jg
add
pop
ljmp
repnz
fcomi
ficoms
cs
cli
sub
insb
mov
je
adc
jbe
addr16
into
mov
pop
jmp
and
jge
xchg
adc
in
cmp
fwait
lcall
xchg
ljmp
pop
lahf
rep
or
jmp
lret
jns
lea
dec
cli
or
stc
push
cld
outsb
cmc
xchg
xlat
or
adc
cli
notb
mov
lcall
sub
hlt
ficomps
mov
adc
sub
je
or
orb
out
dec
lahf
cli
xchg
outsb
add
imul
cmp
xchg
cld
jmp
dec
add
repz
pop
bound
jle
cltd
and
adcb
bnd
mov
add
daa
iret
bound
loop
add
sbb
and
inc
add
and
pop
or
dec
lcall
mov
jg
mov
lods
loop
scas
bound
fwait
inc
out
fwait
inc
enter
pop
add
adc
xchg
ljmp
shl
test
or
and
lock
mov
adc
stos
into
cli
mov
jg
scas
push
dec
dec
out
push
icebp
out
in
mov
rol
jae
xchg
outsb
xchg
sahf
mov
pop
rcrl
movsl
jp
cmp
jbe
pop
xchg
jl
inc
adc
mov
mov
outsl
out
daa
xchg
mov
xor
movsl
mov
stc
add
mov
and
pop
pop
adc
mov
movsb
pop
test
cltd
inc
or
iret
pop
imul
repnz
xchg
in
stos
xchg
rorl
fwait
mov
loop
push
pop
pop
dec
or
adc
xchg
jge
or
adc
cltd
and
jne
pusha
add
or
mov
sub
push
sbb
mov
xor
pushf
lock
sub
or
dec
add
lods
and
out
std
pop
or
std
add
sub
and
add
fnsave
inc
lret
cli
lcall
icebp
add
or
sahf
ljmp
mov
outsb
push
mov
or
add
dec
pop
inc
or
jle,pt
pop
pop
sarb
call
data16
mov
pusha
repnz
jecxz
out
or
retw
ljmp
mov
push
shl
lcall
adc
inc
cmc
sar
lods
jnp
add
enter
sbb
hlt
push
lcall
scas
inc
stc
inc
ljmp
call
sbb
or
pop
faddl
sbb
lcall
add
adc
and
pop
icebp
or
in
test
rcrb
jmp
lcall
scas
ljmp
adc
add
rcr
push
iret
mov
neg
push
fistps
mov
add
cmp
mov
mov
adc
out
add
in
or
dec
icebp
inc
inc
pop
xchg
testl
add
adc
or
or
ficoms
or
mov
push
or
cli
mov
or
add
sub
ret
or
mov
insb
out
xor
jns
movsl
fisubs
adc
sbb
mov
mov
pop
aaa
iret
stc
out
sbb
testb
lock
aad
mov
sub
fisubrl
mov
and
mov
add
stos
jo
adc
mov
in
lret
mov
fstpl
push
mov
adc
outsl
addr16
pop
inc
add
jge
fmul
sub
xchg
push
pushl
in
fldcw
xchg
fcmovb
pop
icebp
mov
xor
add
inc
cmpsl
fbstp
lret
rolb
add
jo
xor
sahf
cmp
insl
cltd
dec
dec
mov
scas
mov
jae
shrb
xor
loopne
add
insb
push
test
into
out
and
pop
push
addb
out
and
add
in
in
cmp
sbb
or
in
js
pop
pop
ss
jle
int
mov
jle
es
aam
pop
ds
mov
cli
dec
aad
adc
ds
mov
cli
pop
mov
lcall
cmpl
pop
lock
inc
int3
push
cmpb
mov
popf
scas
roll
pop
and
or
lcall
jmp
out
cltd
xor
inc
push
xchg
xlat
mov
rcrb
jbe
adc
push
data16
fldt
mul
std
xchg
add
and
gs
jb
mov
or
scas
add
cmp
popf
repz
in
push
pop
fimull
pop
cmp
outsl
aaa
pop
rcr
aam
loope
repz
add
pop
lret
push
or
cld
clc
mov
cli
mov
ret
in
sbb
jne
adc
mov
fcmove
xchg
sbb
out
sub
mov
xchg
neg
out
in
sbb
jecxz
pop
mov
jmp
jmp
int
xchg
dec
aaa
push
out
rorb
sahf
jle
mov
mov
mov
mov
push
lds
mov
mov
adc
adc
and
xor
pusha
loop
je
shlb
inc
in
jle
inc
adc
ss
test
or
icebp
adc
or
loope
push
xor
clc
mov
out
xchg
pop
pop
add
cmp
or
out
add
insl
cmp
mov
insb
cmpsb
out
xor
lds
mov
sti
mov
or
pop
adc
add
sbb
popf
sub
out
pop
lahf
outsb
ljmp
pop
ret
jmp
jl
jle
clc
add
scas
cmpsb
lahf
mov
call
jge
scas
out
push
or
clc
jbe
lea
sub
xchg
lcall
sahf
std
dec
xchg
shlb
or
into
pop
jmp
rorl
movsb
testl
ret
stos
add
jge
leave
arpl
aaa
pop
mov
leave
mov
hlt
xchg
js
out
aad
lcall
rorb
outsb
mov
dec
mov
push
lods
icebp
and
cmpb
fmull
mov
ja
call
sub
sbb
divl
outsb
lcall
mov
dec
ror
add
pop
sub
imul
and
mov
sarb
out
dec
mov
mov
adc
cmp
add
push
jae
loop
enter
xchg
xchg
dec
sbb
int
or
sbb
inc
mov
outsl
out
mov
jno
dec
or
dec
enter
sub
ds
mov
add
mov
mov
loop
mov
jnp
stos
lock
stc
inc
popl
mov
ret
push
mov
mov
sahf
mov
call
add
mov
add
add
incl
fmull
mov
xchg
fldt
sti
add
mov
fdiv
pop
pop
scas
int3
mov
cwtl
and
data16
mov
fiaddl
lahf
out
int3
push
xor
mov
sahf
mov
xor
sarl
cwtl
jmp
adc
aam
mov
sbb
adc
add
lcall
cvttps2pi
xor
std
pop
add
dec
cmp
aaa
inc
cmc
mov
mov
mov
in
adc
or
and
out
data16
or
movsb
int
clc
inc
nop
inc
pop
add
pop
jmp
sbb
in
scas
imul
add
es
fisubl
lds
aaa
pop
add
incb
add
push
or
cli
pop
xlat
pop
push
jae
adc
sar
lahf
add
inc
pop
fcoms
adc
mov
bound
loop
adc
push
negb
pop
mov
mov
lds
cmpsb
fs
xchg
cmp
stos
pop
or
add
xchg
scas
pop
push
xchg
mov
and
fsubrp
add
lret
cmp
push
arpl
es
cs
scas
rorl
out
fst
xchg
or
sti
and
pushf
lods
aad
add
push
add
int
scas
stos
or
add
call
mov
adc
mov
sub
adc
push
push
or
lcall
cmp
and
cmp
push
imul
add
ljmp
xor
stc
push
sbb
es
test
into
sarb
jl
pop
jp
xchg
scas
ficompl
ljmp
mov
data16
adc
push
test
aaa
pushf
push
insl
leave
pop
loop
fimuls
mov
or
ret
aad
lret
xor
lcall
add
sub
add
lea
pop
cmc
insb
pop
lcall
mov
pop
jmp
int
and
hlt
ds
clc
xor
repnz
in
xchg
and
add
push
out
repnz
or
jmp
add
in
icebp
ret
jo
cmc
mov
call
es
repnz
push
jnp
push
push
notl
fiadds
insl
push
scas
mov
loop
jns
mov
xchg
insl
add
cltd
in
mov
sbb
aas
dec
pushl
cld
scas
sub
negb
sbb
fcmovnbe
mov
adc
test
into
test
cwtl
ljmp
mov
je
jge
add
fnstsw
mov
lahf
sbb
loop
mov
repnz
or
adc
xchg
jle
mov
jns
push
adc
adc
adc
adc
fnstenv
jns
mov
enter
xchg
mov
jg
push
fiaddl
or
insb
loope
inc
xchg
cmc
xchg
out
adc
cmp
lret
jne
es
shrb
icebp
andb
sub
icebp
jmp
out
mov
add
and
jnp
lods
jg
mov
mov
lcall
fidivrs
cmp
pop
push
and
popa
out
loop
dec
mov
lods
daa
and
cmp
decb
sub
pop
or
ret
cmp
add
mov
push
aam
or
out
add
fdivrs
dec
add
iret
push
pop
jo
out
stc
mov
faddl
xorl
lcall
lock
cltd
lret
add
push
icebp
in
sbb
out
jecxz
adc
movsl
adc
sbb
pop
adc
loop
loopne
cli
loop
xchg
shlb
adc
xchg
das
sahf
mov
xlat
cli
lock
adc
lret
subl
arpl
and
mov
lret
rolb
push
xchg
or
mov
adc
mov
adc
or
fidivrs
sub
push
pop
xor
mov
mov
push
or
push
add
in
cmpsl
mov
push
add
sbb
int3
push
xchg
adcb
adc
mov
je
adc
mov
push
fimull
pop
cmpsb
mov
loopne
aam
push
mov
xchg
push
sahf
mov
setge
into
mov
ljmp
xor
into
mov
add
xor
sbb
or
add
es
pop
add
out
into
movsb
xlat
or
in
ret
lea
add
mov
aam
pop
vmwrite
pop
ja
in
pop
enter
int3
test
ret
test
cld
cmp
mov
stc
test
movsb
sub
add
cmpsb
mov
add
lock
js
cmc
add
cli
push
mov
jmp
aas
scas
mov
push
sbb
cmp
arpl
pop
in
dec
adc
mull
mov
dec
enter
clc
dec
add
jle
sub
cmp
out
in
orb
ljmp
mov
lea
lds
pop
mov
mov
add
mov
push
mov
ljmp
pop
sbb
mov
cld
add
in
testb
add
gs
mov
test
dec
push
andl
lds
lock
iret
jno
add
sti
sahf
data16
lock
sbb
cs
out
or
xor
mov
mov
ja
movsb
mov
sbb
xchg
adc
imul
push
pop
adc
mov
inc
ljmp
push
in
mov
bound
cli
into
push
inc
les
sahf
repz
inc
jl
ret
in
int
add
icebp
sbb
cs
popw
xchg
mov
std
hlt
fcoml
or
fiadds
in
add
ret
out
adc
mov
jno
jecxz
out
mov
mov
jmp
out
mov
in
loop
cld
dec
lret
clc
cltd
out
stc
add
nop
repnz
call
cmpsb
pop
stos
popa
jnp
daa
jecxz
test
adc
adc
sbb
push
xchg
andb
sub
aam
mov
addb
scas
jmp
mov
xchg
cmc
mov
mov
jge
sbb
fisubrl
jnp
incl
loop
stos
xlat
repnz
jmp
cmpsl
es
xchg
addb
cld
jmp
loop
or
repnz
data16
nop
xlat
lcall
add
add
repnz
repnz
data16
add
xchg
xlat
mov
push
push
jb
inc
lcall
jmp
je
out
mov
jl
ljmp
add
sahf
jmp
add
out
or
cmp
xchg
scas
xchg
mov
popf
or
ljmp
mov
mov
pslld
mov
bound
inc
push
stos
rcll
pop
sahf
jl
pop
inc
shlb
mov
xchg
lahf
lea
addl
xchg
xchg
scas
fstps
mov
sarb
outsl
pop
je
jmp
idivb
push
out
inc
add
in
inc
pop
or
mov
into
push
push
ljmp
xor
cmp
mov
ja
add
mov
xchg
mov
jmp
xor
testl
lods
mov
es
push
jno
and
aam
pop
and
popf
fdivrl
repnz
pop
push
test
push
mov
std
xchg
ss
adc
cmpsb
sbb
mov
test
fxch
imul
icebp
sbb
inc
sahf
xorw
push
mov
mov
in
push
shrb
arpl
sbb
scas
loopne
fucomp
adc
mov
dec
ror
add
cmc
and
ficoms
fsubr
mov
add
jl
and
dec
dec
xor
jg
mov
fistps
std
test
mov
mov
outsl
jnp
push
pushf
stos
test
dec
enter
cmpsl
sarb
add
jl
push
mov
xchg
incb
xchg
repnz
or
mov
mov
es
pop
adc
or
xor
add
inc
pop
aaa
loope
cs
in
add
out
pop
sub
cltd
fxch
sti
outsl
pushf
dec
addb
or
mov
idiv
push
pop
in
cld
std
xchg
inc
stc
adc
dec
stos
mov
push
out
jno
cmp
push
or
mov
jl
sahf
adc
mov
sbb
imul
not
decb
mov
mov
lock
push
test
repnz
sub
es
out
jle
push
adc
pop
pop
push
lods
enter
xchg
ljmp
lcall
jmp
outsb
mov
dec
sub
mov
mov
aaa
shrb
cmc
jge
fsubrs
mov
jge
fdivrs
xchg
xchg
adc
mov
leave
jno
mov
lds
mov
lret
divb
inc
inc
xchg
inc
jno
repnz
into
ds
adc
ss
repnz
xchg
in
mov
js
dec
cmpsl
adcl
jl
or
pop
imulb
jle
out
fbstp
mov
aaa
cmp
aad
xor
out
popa
mov
negb
pop
fisubs
jnp
repnz
mov
out
push
xchg
out
sbb
insl
es
push
jp
mov
jl
mov
in
je
dec
jle
scas
add
loop
add
mov
fstpt
test
lock
stos
add
repz
ret
pop
mov
jl
xchg
add
mov
ficomps
in
mov
sub
cmpsb
scas
xchg
mov
and
into
stc
in
mov
aas
stc
pusha
popf
repz
mov
mov
nop
into
ret
div
fsubrl
and
ljmp
ljmp
pop
pusha
out
into
mov
sbb
mov
mov
pusha
addr16
je
add
push
outsb
movsl
jmp
and
scas
pop
mov
stc
mov
sub
test
fimuls
push
or
xchg
sti
rolb
sbb
mov
xchg
pop
pop
or
out
mov
rorb
xor
addb
sahf
xchg
add
nop
lock
mov
sbb
sub
ja
icebp
decl
cli
test
outsb
shrb
jl
add
movsl
in
mov
fwait
pop
cmc
mov
in
fbstp
in
and
xchg
pop
pop
insb
lret
movsl
lret
insl
jns
inc
pop
testl
jg
cli
xor
ljmp
dec
mov
cmp
push
into
inc
std
out
adc
aad
std
cmp
push
dec
std
pop
adc
stos
ffree
dec
jno
add
ret
mov
lcall
addr16
pop
ljmp
icebp
inc
testb
sbb
les
div
cmp
into
sbb
shrb
adc
je
out
add
popa
pop
div
cltd
mov
bound
xchg
icebp
ljmp
in
js
enter
sbb
lret
or
pop
mov
pop
xchg
or
inc
pushw
test
call
nop
add
scas
or
inc
pop
adc
outsl
stc
dec
jp
sti
dec
imul
jge
cld
out
cli
sbb
aam
jmp
orb
mov
adc
mov
in
shlb
rcrb
jb
es
out
sbb
dec
addb
fst
cmp
push
ret
lock
imul
add
fidivrs
dec
fistpll
or
inc
or
cli
movsl
mov
clc
dec
xchg
scas
sbbb
mov
int3
push
adc
push
pushf
leave
push
xchg
sbb
fmul
rcr
mov
sti
jge
ficompl
enter
incb
iret
cli
jge
adc
scas
div
loopne
lret
jl
xchg
dec
adc
sub
mov
push
mov
lods
iret
scas
jge
adc
lods
fcmovnb
or
aam
or
ljmp
push
fdiv
push
push
mov
mov
dec
das
shr
mov
xchg
adc
lahf
push
call
push
sbb
add
mov
aas
jmp
inc
repz
nop
clc
push
in
faddp
outsb
stc
aad
jbe
xchg
cmc
aas
add
and
nop
adc
scas
mov
andb
mov
and
push
push
mov
pop
sbb
ficoml
dec
sub
xor
test
mov
incl
sti
ljmp
mov
sti
dec
lods
pop
fbstp
repnz
not
sbb
fdivr
xchg
sub
dec
test
scas
push
jp
cmp
dec
lcall
sub
xchg
idivl
lcall
incl
pop
jne
in
loop
lds
jmp
mov
in
icebp
mov
adc
push
dec
scas
or
sub
scas
lods
ret
test
pop
lahf
nop
sub
or
imul
mov
call
jge
repnz
popf
mov
and
mov
lret
jno
add
insb
idivb
cs
adc
mov
adc
icebp
icebp
test
into
int3
roll
test
negl
shlb
aam
loop
packuswb
test
add
sbb
sbb
and
add
stos
into
es
jb
and
or
jle
add
loopne
mov
add
sahf
inc
adc
or
sahf
repnz
lods
xor
adcb
mov
in
hlt
fmuls
fcoms
sub
ret
shr
into
xchg
mov
xchg
es
incl
cli
lcall
les
inc
pusha
shll
pop
in
out
stos
or
jle
lock
or
and
jle
fmull
rcrb
iret
cmpsl
stos
cltd
fdivl
in
push
or
mov
icebp
stc
mov
adc
mov
push
mov
sbb
rclb
mov
add
enter
add
outsb
pop
dec
add
add
or
mov
mov
cltd
mov
xchg
fwait
lods
shl
sbb
mov
push
push
lea
cmp
jp
xor
out
test
mov
xchg
adc
pop
aad
pop
notl
jae
pop
inc
out
aad
pop
shlb
and
pushl
sahf
inc
rolb
hlt
ret
scas
js
fdivrs
mulb
enter
sbb
iret
inc
negl
xor
cmp
cmpl
cs
sti
xor
xor
mov
dec
dec
mov
imul
adc
insb
outsl
repz
mov
mov
cld
rorl
test
pop
push
jl
mov
out
inc
pop
dec
push
jp
mov
mov
inc
bnd
cli
pop
cmp
repnz
mov
fidivl
out
push
xchg
dec
idiv
add
mov
imul
inc
and
scas
in
fisttpll
sbb
pop
loopne
push
sub
in
mov
mov
mull
rol
inc
jle
shr
popa
jno
mov
sub
data16
and
push
mov
pop
repz
inc
mov
jmp
faddl
cmpsw
jecxz
int
jecxz
xor
mov
pushf
test
mov
push
cmpsb
cld
adc
pop
inc
jbe
ss
in
sbb
sub
loope
mov
leave
fiadds
fidivs
scas
or
testl
jmp
ret
xor
pusha
and
sub
call
fidivrs
xchg
call
aad
ret
outsl
pop
dec
ds
push
adc
fsts
lcall
dec
imul
sbb
outsb
pop
mov
rol
call
sbb
sbb
or
in
push
fildl
inc
mov
ljmp
add
and
or
hlt
lds
sarb
cs
rcr
ss
mul
sbb
rorb
pop
into
int3
jbe
fsubr
sbb
mov
iret
mov
aaa
pop
sti
pusha
mov
mov
lcall
mov
int3
rcll
mov
mov
dec
into
lcall
adc
and
or
add
outsb
lods
cli
mov
xchg
stc
sbb
add
push
lds
loopne
adc
push
lock
fidivrl
cwtl
dec
add
mov
shll
xchg
stc
pushf
not
insl
filds
pop
inc
sti
out
imul
lcall
ja
negb
aas
nop
out
cmp
loop
shll
xchg
in
pop
push
mov
cmp
or
filds
jmp
hlt
xchg
repnz
incl
mov
or
mov
mov
xor
shl
sub
test
les
mov
les
and
add
lret
out
outsl
int
pushf
in
or
out
dec
jmp
repnz
sub
pop
or
es
ror
mov
ds
add
iret
call
rcrb
push
loop
addr16
orb
ljmp
or
les
repnz
lret
fs
sbb
sbb
test
xorb
cs
pop
jmp
and
dec
cmp
jp
or
je
call
push
add
push
fmull
ret
mov
inc
sbb
pusha
inc
mov
dec
sti
insb
inc
adcb
push
pop
fs
adc
xchg
gs
ja
pusha
mov
cmpsb
icebp
frstor
test
pop
pushf
add
mov
in
adc
gs
shll
repz
bnd
dec
sub
jo
out
fistpl
sbb
sti
es
mov
adc
adc
cmp
cli
lret
repnz
inc
mov
fdiv
icebp
jae
cmp
arpl
ss
lret
out
mov
sbb
mov
subb
sub
pop
ljmp
call
lret
jns
outsb
in
adc
loopne
adc
jne
int
das
scas
push
xchg
add
fisttpl
mov
bound
push
cli
and
loop
in
cld
fmuls
xchg
sbb
out
adc
pusha
xchg
jge
mov
in
negb
fisttpl
incl
fiadds
stos
mov
mov
hlt
sbb
aaa
out
xor
iret
out
mov
stc
sbb
cld
and
jo
mov
cli
cld
movb
pop
mov
loopne
clc
mov
insl
pop
and
jg
pop
sub
fsubs
mov
decl
or
jle
jmp
adc
icebp
out
or
iret
out
dec
icebp
cmpsl
add
out
sub
les
dec
sub
iret
sub
push
dec
jb
es
mov
and
jmp
notl
mov
stc
or
ljmp
dec
rcr
test
add
push
fiaddl
mov
add
fptan
mov
adc
add
enter
mov
or
lcall
loope
insb
repnz
out
je
orb
repnz
or
push
iret
out
mov
mov
or
test
pusha
mov
out
xchg
rolb
pusha
push
in
ljmp
sti
cli
int3
sahf
in
ljmp
jp
add
cwtl
pushl
pop
sbb
mov
bound
pop
pop
fisubl
sub
rorl
scas
jnp
add
pop
mov
add
mov
out
cli
jmp
loopne
ljmp
stos
sahf
jecxz
mov
jp
addr16
loope
pop
scas
mov
out
in
ljmp
cli
mov
enter
movsl
pop
in
pop
scas
in
iret
addr16
mov
jo
adc
mov
cmp
in
push
pusha
jo
rolb
les
mov
sub
mov
fidivl
push
out
clc
mov
jl
addb
jge
scas
xchg
in
fdivrs
sbb
add
sub
cmp
sub
pop
scas
mov
pop
push
cwtl
xlat
dec
xchg
loopne
lds
std
lds
lds
in
push
sar
lds
in
push
int3
std
lds
in
push
lret
std
lds
in
push
into
std
lds
adc
int
icebp
sbb
fmuls
add
test
mov
cmpsb
pop
mov
les
xchg
add
hlt
pop
pop
leave
arpl
sbb
pop
dec
pop
xchg
out
stc
sub
mov
mov
or
test
scas
cld
arpl
out
or
inc
or
sub
es
fists
in
fisttpll
push
push
je
mov
outsb
or
add
aad
sbb
out
and
cwtl
jnp
or
repnz
adc
fisubrs
jge
nop
and
add
sbb
jno
push
test
xacquire
and
cs
push
popf
call
adc
xchg
dec
rcrb
ret
jecxz
jp
js
ja
out
push
push
fisttpl
iret
std
xchg
stc
rol
push
pop
pushf
sbb
es
add
adc
jmp
sub
xchg
addr16
pop
nop
clc
sar
pop
imul
adc
pop
dec
sbb
adc
lock
add
push
sbb
xor
pop
mov
mov
pusha
cmpsb
jb
dec
adc
sti
inc
jne
sub
loope
sub
nop
divl
roll
pop
iret
push
sub
bnd
sub
jmp
jge
pop
mov
push
insl
repnz
mov
rcrb
cltd
mov
fcmovb
out
or
cmc
fmuls
nop
pop
aam
ret
push
jae
or
jbe
aaa
and
pop
ret
fs
pop
push
in
pop
cmp
int
push
add
sbb
push
and
mov
and
mov
test
les
pop
sbb
or
cwtl
jno
cmpsl
or
daa
mov
mov
adc
adc
push
add
insl
fcoml
or
and
lret
adc
pop
adc
ficoml
out
clc
sub
mov
inc
test
pop
dec
fcmovb
ss
loop
dec
incl
add
or
mov
or
cli
enter
mov
cmpsb
xchg
out
and
inc
jne
sub
mov
push
push
jnp
scas
test
into
imulb
add
cmp
push
or
pop
movb
pop
into
push
and
daa
cmp
cmpsb
test
mov
jg
mov
xor
repnz
xor
in
jl
in
jmp
or
and
test
popf
jg
add
lock
les
sbb
push
pop
sbb
xlat
pop
insb
out
adc
push
or
inc
mov
mov
out
adc
cltd
xchg
sbb
rcrl
mov
push
fisubs
mov
clc
jecxz
mov
jno
insl
in
sbb
inc
jecxz
decl
scas
mov
mov
scas
push
ljmp
inc
arpl
add
add
pop
test
or
add
adc
adc
jl
pop
mov
in
jge
data16
cwtl
sub
mov
adc
and
or
jae
lcall
and
ja
push
test
fildll
dec
jmp
adc
jmp
stos
sbb
jge
fisttpll
call
push
pop
or
jg
icebp
ja
xchg
mov
mov
ret
xchg
push
cld
mov
ss
and
adc
mov
push
xchg
in
out
cmp
out
ror
subb
lret
push
push
mov
repz
divb
rclb
push
add
in
and
int3
xlat
in
lret
cmp
jecxz
adc
mov
mov
mov
out
adc
push
jno
js
mov
ret
sti
sbb
fs
loope
xor
mov
push
movsl
popa
jne
in
xor
mov
mov
or
scas
mov
js
jnp
idiv
js
mov
outsb
out
sbb
inc
mov
sbb
push
sti
shrl
sbb
lods
lds
in
dec
jmp
jae
or
pop
sbb
test
sti
and
rorb
popa
ja
enter
add
cld
orb
push
adc
inc
into
mov
xor
or
clc
loopne
add
push
jp
iret
push
out
cld
ja
fsub
aam
mov
adc
mov
iret
pop
lea
in
aas
mov
mov
mov
inc
jbe
clc
cs
es
aam
sub
jp
mov
out
in
outsb
std
pushf
mov
or
sub
stos
cmp
in
sbb
or
mov
lcall
sbb
sub
int3
enter
or
fadd
push
xlat
popf
sti
ja
aad
xchg
sahf
and
outsl
out
vunpckhps
sti
into
jo
push
and
clc
mov
and
push
add
loop
or
incl
and
fsubp
xchg
add
sub
test
mov
pop
fcomps
or
and
fstpt
or
push
sub
loop
scas
loopne
pop
movsl
fldt
jns
ds
aas
mov
mov
sbb
push
or
xor
and
and
ret
lods
std
adcb
inc
out
scas
xor
scas
int3
sub
sub
mov
jl
mov
mov
cltd
and
mov
js
shll
loop,pt
pop
ss
jl
sbb
add
cli
push
inc
push
or
es
mov
enter
pushf
fsubl
and
out
xchg
clc
movsb
fcoml
ljmp
pop
add
mov
sbb
loopne
mov
lcall
pop
and
cli
jecxz
mov
lret
popf
ljmp
mov
enter
lock
sbb
je
mov
and
cltd
or
pushl
fidivrs
pop
jg
push
fiaddl
mov
bound
aas
out
iret
shlb
sub
rcrl
cld
add
repnz
insb
std
add
or
icebp
add
repz
subb
add
in
fcoml
inc
or
xor
movsb
sub
mov
adc
and
movsb
stos
adc
push
roll
bnd
lds
adc
add
out
inc
ja
cld
mov
and
dec
loop
lea
decl
or
shlb
arpl
lret
and
addr16
mov
mov
jg
push
adc
or
cmp
mov
into
fists
fucomip
in
sub
lret
jecxz
mov
dec
roll
out
mov
sahf
out
mov
jg
pop
jbe
push
outsb
es
ja
cmpsb
xchg
sti
and
xor
data16
mov
pop
sahf
mov
sub
cwtl
fsubs
daa
nop
sub
push
add
daa
push
cld
cmp
dec
jl
sbb
push
aam
adc
cmpsl
xorl
dec
lds
cmp
xor
stos
or
cmp
ds
mov
ror
sbb
in
mov
inc
ljmp
nop
push
loop
shll
lock
test
out
sub
pop
jle
mov
jl
loop
cmp
jge
mov
mov
sahf
mov
ss
outsl
cmp
fwait
adc
mov
xor
cli
xor
ljmp
pop
aaa
ljmp
sbbb
ljmp
push
fsubs
or
rcrl
test
mov
loop
xor
int
scas
scas
lcall
add
add
insb
or
adc
xor
lcall
daa
mov
ret
dec
cmp
sub
jl
out
and
push
loope
repz
wbinvd
inc
rcrb
rcrb
cli
push
push
mov
lret
dec
lock
add
loop
mov
add
fwait
aad
mov
xor
dec
pop
cmp
pusha
add
adc
je
shr
sbb
movsl
mov
xchg
dec
mov
cmp
and
dec
sbb
hlt
fwait
mov
test
mov
out
xchg
sbb
mov
jae
lahf
lcall
std
push
mov
sar
daa
popf
addr16
or
test
scas
xchg
fwait
addb
sti
push
je
sahf
xchg
loop
push
cld
pop
xor
decl
sbb
xchg
fisubrs
aaa
insb
dec
pop
mov
shrl
fdivp
aaa
in
sub
jecxz
or
imul
add
fnstenv
in
pop
xlat
mov
ljmp
pushf
mov
aaa
sub
pop
out
insl
in
lahf
in
enter
mulb
hlt
pop
mov
mov
lcall
fld
mov
add
in
std
pop
or
xlat
fisttps
cs
push
inc
ljmp
adc
adc
push
sub
push
loope
pop
fadds
push
mov
lret
jnp
out
leave
jae
xlat
inc
dec
xchg
dec
ret
fsubs
xor
jbe
pop
cld
xor
subb
stos
jge
adc
scas
out
cmp
dec
in
and
movsl
out
push
and
cmp
int
movsl
sahf
adc
xchg
cs
out
inc
fsubl
push
sub
data16
imul
popa
rolb
aaa
mov
add
hlt
pop
add
push
sub
notl
sub
cmp
mov
aaa
dec
inc
push
rcl
into
iret
adc
outsl
aam
mov
jl
call
mov
shl
cmp
scas
out
mov
shlb
sbb
pop
pop
mov
lods
xchg
incb
out
subb
addr16
push
mov
mov
or
push
xchg
push
mov
fdivr
movl
aam
pmuludq
insl
into
mov
ficoms
out
push
sub
jle
sahf
push
loopne
clc
mov
enter
sbb
iret
imul
stc
bsr
insl
mov
add
in
js
xchg
pop
pop
jns
stos
xlat
sahf
shll
ret
out
cmp
enter
outsb
ss
fwait
xchg
push
pop
inc
xorb
sahf
inc
ret
ret
add
push
cs
aam
xchg
adc
insb
push
cs
aas
aam
cmp
pop
mov
insb
inc
aad
nop
sahf
sbb
es
mov
xor
jg
cmpsb
xchg
pop
cli
xchg
iret
ret
adc
jle
xor
push
cli
push
sbb
into
in
mov
ljmp
mov
pop
adc
sahf
scas
icebp
jge
data16
and
push
sahf
je
adc
std
inc
cld
sbbb
pop
stc
idiv
push
ret
add
adc
scas
test
loop
gs
movsl
mov
in
sub
std
lods
jb
std
iret
mov
lds
lcall
test
push
jecxz
pop
dec
add
les
es
ds
or
repnz
cmp
xor
mov
or
cmp
aam
sbb
xchg
shlb
ror
mov
mov
or
pop
mov
lods
add
lret
into
and
lcall
rorl
pop
pop
fstpt
push
jmp
xchg
xchg
aaa
mov
push
sub
mov
and
cmp
test
cltd
cmp
sti
adc
dec
mov
imul
jle,pn
mov
lret
sub
mov
adc
aaa
or
into
pop
adc
test
fcom
and
pop
imul
xorl
push
add
adc
add
dec
fsubs
fdivr
jo
push
in
fistpll
jno
mov
mov
notb
pop
or
and
test
stc
lock
stos
sbb
push
sti
inc
ss
sub
jno
push
lret
inc
mov
and
and
cmp
or
gs
adc
int3
mov
into
cli
pusha
aas
pop
mov
jb
mov
repz
sbb
rolb
or
or
aaa
add
stos
loopne
faddl
negl
and
mov
in
scas
inc
or
pop
out
or
int3
fs
into
adc
push
icebp
push
enter
mov
jle
mov
into
jnp
fisttpl
mov
fisubl
cld
stc
or
stc
shl
sbb
mov
loopne
dec
lods
sti
movl
data16
push
ljmp
and
mov
fcmovu
jge
aam
lods
cmp
dec
sti
out
adc
addr16
or
jl
push
and
inc
xchg
iret
in
xchg
aaa
out
repz
daa
icebp
xlat
pushl
scas
into
cmc
adc
mov
pop
in
or
inc
stc
sbb
mov
mov
rcl
jnp
push
sarb
sbb
xor
inc
movsl
repz
sbb
ret
xchg
leave
mov
scas
jle
xchg
xchg
cs
push
idivb
enter
popf
jnp
xchg
push
mov
mov
sub
sarl
les
outsl
in
imul
nop
fadd
lock
cmpb
rclb
int
scas
cmp
lret
inc
push
dec
or
cmp
sub
jecxz
jno
out
repnz
xchg
cmc
nop
adc
push
ljmp
jp
lret
loop
ret
leave
inc
ret
dec
adc
sbb
cmp
and
mov
push
cmp
xchg
adc
mov
lret
enter
in
jbe
ret
or
add
sub
sti
push
sarl
xchg
adc
or
icebp
mov
daa
mov
sub
out
in
lods
in
pop
jnp
dec
hlt
mov
jmp
insl
jnp
cli
and
int3
in
mov
cwtl
jo
cld
cmp
inc
xchg
adc
sub
jl
rclb
lcall
shlb
cltd
sahf
jbe
jns
fimuls
push
ficompl
push
fxch
stos
int3
in
adc
aad
repnz
jno
mov
out
add
adc
or
push
in
mov
aam
jbe
mov
cli
add
jmp
pop
aam
mov
idivb
adc
add
pop
and
mov
sar
jp
test
jmp
add
insb
rcr
fdivp
and
loope
add
ret
sahf
aam
jmpw
notl
in
outsl
sbbb
xchg
mov
sbb
sbb
mov
imul
fsubr
sbb
pop
fadds
out
aam
leave
inc
dec
lods
jo
xchg
mov
cmp
mov
add
sarl
xor
jns
push
push
or
mov
pop
loope
mov
jne
mov
test
add
mov
pop
cmp
mov
jne
cs
lds
dec
ja
clc
enter
lret
sti
das
sub
xchg
add
outsb
sti
imul
adc
xchg
or
adc
sahf
rcrb
stos
adc
iret
pop
sub
scas
or
daa
lcall
cli
adc
into
repnz
jge
jl
andl
push
call
xchg
adc
mov
test
test
sbb
in
mov
outsl
add
mov
xchg
loop
xchg
or
inc
sti
xchg
jae
pop
sahf
addr16
cli
out
imul
out
pop
sbb
jge
in
pop
ret
cli
ja
orb
sbb
xor
dec
xorb
cs
aas
icebp
dec
popf
push
outsl
push
dec
adc
stos
loopne
push
or
outsb
jp
nop
into
repnz
lret
ljmp
aaa
sub
mov
loope
into
out
mov
xchg
sub
in
int3
mov
push
fsts
or
roll
addb
inc
sub
inc
and
sbb
test
mov
in
idiv
sbb
mov
xlat
call
cli
cltd
in
dec
or
out
ljmp
pop
nop
into
out
repnz
or
cs
imul
dec
out
cmp
mov
hlt
or
shl
cmp
sahf
add
inc
mov
cmpsb
xchg
or
sbb
cli
outsl
xorl
gs
adc
incl
int3
adc
push
or
sbb
iret
loopne
mov
ret
sbb
sbb
pop
icebp
mov
or
xor
adc
add
sub
call
movsl
movl
ljmp
xchg
cld
add
push
cli
addr16
into
cltd
addr16
mov
lret
adc
into
cwtl
lock
jmp
adc
xchg
lock
int3
test
jno
adc
push
test
xor
adc
or
cmp
push
fsubrl
and
fcoms
jecxz
stc
lods
or
imul
mov
inc
and
in
je
std
das
mov
pusha
in
lcall
and
mov
sub
leave
xchg
ljmp
adcb
into
mov
lds
mov
dec
xchg
mov
test
inc
out
jno
add
adc
jno
pop
cmp
pop
sbb
into
test
mov
call
xor
jmp
lahf
leave
pop
jbe
jo
in
sbb
cld
jbe
push
jmp
adc
cli
stc
shrb
pop
and
xchg
int3
fidivrl
pop
lahf
cmc
es
pop
jle
mov
mov
out
ljmp
jle
int3
scas
popf
mov
fnstcw
mov
aad
mov
mov
mov
add
or
repnz
pop
fwait
iret
jmp
mov
lcall
jb
pop
call
fsubrs
cmpsl
into
push
pop
push
or
movsl
mov
sub
andb
or
xchg
andb
mov
push
and
pop
or
adc
push
jp
pop
inc
bswap
adc
push
push
jg
cmp
xchg
repz
roll
add
in
ss
aas
and
stos
in
push
lock
shll
or
push
int
mov
shlb
repnz
fidivrs
add
or
xchg
loope
dec
out
xor
and
call
adc
add
and
mov
inc
lods
sbb
add
sar
mov
sti
aam
cmc
cli
shrb
sub
ret
dec
dec
mov
mov
push
gs
xlat
icebp
in
add
loop
xor
popa
xor
adc
sub
dec
add
loop
and
sbb
cli
fistps
sub
lcall
sbb
in
in
fmul
insb
in
loope
pop
movsb
cwtl
adc
cs
lcall
add
cmp
aad
push
pop
lods
call
aam
aad
mov
xor
lret
xchg
mov
xchg
add
lcall
test
aaa
in
dec
shrl
iret
xchg
xchg
lods
icebp
scas
dec
push
fsubrs
and
icebp
stos
xor
pop
or
adc
adc
bound
xchg
add
pop
mov
jle
inc
daa
loope
push
push
and
pop
mov
enter
jae
lret
sti
out
xchg
xor
xchg
inc
add
or
or
pop
sbb
call
icebp
ficompl
sarb
xchg
dec
jnp
jle
rorb
pop
mov
mov
cli
xor
out
and
mov
fnsave
in
add
addr16
adc
pop
loope
fsubr
into
test
jnp
vpcmpuq
lcallw
push
les
scas
or
and
sub
adc
mov
orl
repnz
mov
sbb
adc
or
adc
addr16
ret
add
adc
andl
lcall
in
sti
pop
push
or
cmp
popa
mov
cmp
hlt
rcrb
scas
pop
fidivs
dec
out
mov
out
imul
es
es
adc
fcomps
pop
adc
insb
lods
mov
out
rcrb
cltd
aam
jp
and
push
cmp
jge
sahf
xchg
mov
adc
popf
nop
int3
sahf
push
imul
dec
movsb
sub
inc
push
mov
lret
pop
icebp
sarl
into
push
fsubl
cmpb
cld
adc
into
std
fmull
push
pop
ss
xlat
pop
call
out
loope
ljmp
cs
out
imul
mov
out
mov
inc
or
jecxz
movsl
mov
shrb
jns
fnstsw
jmp
mov
jmp
jns
inc
fcomi
jmp
or
or
in
dec
sbb
fstpl
add
jbe
std
ss
pop
out
mov
repz
cmpl
adc
hlt
idiv
xor
std
adc
negl
in
sbb
ror
sub
add
fisttpl
adc
push
adcb
mov
das
out
sbb
sub
rolb
push
ljmp
mov
lea
arpl
repz
push
pop
mov
cmpsb
push
movsl
fsubp
push
and
adc
lock
int3
negb
dec
movsl
adc
jns
pop
or
lcall
mov
fstpt
lds
and
mov
addr16
pop
or
addr16
mov
adc
push
add
adc
fildl
or
and
mov
adcb
ja
insl
mov
pop
incl
jmp
jmp
repz
ds
xor
out
lret
pop
xor
push
jnp
pusha
stos
add
sbb
jmp
sub
idivl
jmp
inc
negl
ljmp
xchg
out
inc
hlt
mov
hlt
push
xchg
movsb
inc
xchg
rcrb
cmp
push
jbe
push
aas
xor
mov
dec
inc
push
shl
fsubrs
stos
pop
xchg
xchg
xchg
aad
xchg
stc
cmc
pop
insl
cmc
movsl
dec
jecxz
inc
dec
sarb
lret
bnd
pop
subb
ror
jle
mov
and
js
repnz
vshufps
and
xchg
aaa
adc
sbb
jnp
ret
jbe
iret
cli
jns
or
addr16
push
inc
dec
arpl
ficomps
loop
lds
out
lea
cli
jl
jmp
pop
hlt
cmpsb
repnz
mov
cmc
jnp
aam
adcb
pop
sbb
jl
mov
mov
loopne
push
outsl
jecxz
stc
loop
mov
mov
lods
mov
ret
cs
out
add
add
mov
sub
inc
or
hlt
inc
subl
stos
filds
in
ss
jle
into
add
push
or
dec
lock
sbb
decl
push
insb
enter
sahf
adc
lahf
negb
negl
push
shlb
xor
in
sti
mov
pop
cmpsb
cmpl
pop
dec
sub
push
jmp
push
pop
movsl
roll
mov
jo
pop
lea
ficoms
pop
pop
add
pop
sbb
jmp
adc
mov
pop
popf
sub
mov
lret
fucomp
lock
rcl
sarb
adc
adc
cmc
hlt
out
sub
or
aad
mov
cmp
mov
xor
sbb
xchg
ret
inc
sub
cs
aam
jno
pop
adc
xlat
push
mov
and
cli
push
cmc
insl
loope
cmp
inc
xor
pop
lcall
popf
repz
mov
mov
adc
xchg
testl
bound
pop
pop
lods
stos
or
stos
adc
int3
jbe
int3
rcrb
xchg
fwait
loopne
enter
xor
and
xor
dec
xor
mov
outsl
popa
aam
or
inc
add
mov
mov
lret
jl
gs
cld
mov
adc
bound
sahf
adc
fisubs
mov
scas
sbb
sub
ret
test
jmp
push
dec
insl
add
js
ret
dec
repnz
outsl
mov
dec
add
adc
repz
movsl
add
inc
sub
pop
fwait
inc
sub
fsub
pushf
loopne
mov
in
adc
push
icebp
iret
enter
in
add
mov
or
insb
dec
or
pop
test
mov
adc
pop
and
rclb
neg
pop
sahf
and
data16
adc
mov
jg
mov
enter
pop
push
push
out
sbb
cmp
or
pop
dec
add
int
jge
adc
jge
pop
jge
fldt
scas
stc
sbb
pop
jge
repz
cli
dec
out
sti
xchg
faddl
ficomps
incb
test
ds
loop
fwait
movsb
mov
pushf
mov
rclb
loopne
jae
adc
or
cli
mov
dec
mov
pop
outsb
dec
jne
xchg
repnz
cmp
or
outsb
pop
pop
or
fidivrs
test
cs
pop
scas
push
icebp
pop
mov
pop
in
jp
mov
lret
inc
or
ret
lods
ret
mov
mov
xor
lods
pop
fadds
xchg
into
mov
or
out
sub
shrb
lcall
mov
lods
movsl
add
pop
bound
hlt
push
xlat
adc
arpl
movsl
in
xor
mov
and
int
lahf
sti
pop
xor
ljmp
fsubrl
int3
mulb
arpl
mov
cmp
inc
in
jne
int3
out
and
jno
movsb
sub
mov
daa
xchg
pop
pop
and
inc
mov
dec
popa
in
ss
and
mov
mov
or
add
test
loopne
adc
negw
xor
cmp
xor
out
add
insb
jno
out
cmp
loop
cmp
mov
pop
fiadds
jp
push
jmp
or
jo
pop
add
jae
ja
jge
es
mov
lret
xor
es
dec
shr
push
loopne
in
mov
fwait
test
sbb
pushf
push
or
push
stc
mov
jno
mov
jno
loopne
lahf
dec
xor
mov
xchg
mov
dec
into
scas
xor
out
xor
xor
pop
out
ss
jg
cli
iret
ljmp
sub
mov
pop
xchg
stos
sub
jge
jmp
mov
pop
mov
dec
or
jp
repnz
inc
jle
mov
pop
icebp
bnd
push
lods
fnsave
mov
pop
rol
and
dec
cld
stos
jne
and
mov
push
or
lret
fiadds
mov
dec
les
out
ret
lods
adc
stc
test
ffree
add
into
mov
nop
into
add
push
std
ret
and
inc
icebp
add
add
into
fdivrp
mov
xlat
aam
fidivs
sbb
enter
and
pop
pop
cli
or
in
lcall
fucomi
lcall
iret
lods
scas
dec
cli
adc
dec
leave
mov
stos
jp
pusha
idiv
push
xchg
mov
xchg
rcrb
repnz
xor
cmp
sub
xor
mov
adc
test
mov
pop
popf
or
dec
sub
cli
inc
lods
push
lods
adc
push
lret
shrb
mov
repz
xchg
lods
fisttpl
lock
mov
pop
add
cmpsb
adc
adc
sub
mov
arpl
mov
cmpsb
mov
pop
sti
mov
push
cmpsb
outsl
mov
les
xor
fwait
shll
je
aaa
mov
mov
xchg
xchg
push
pop
push
icebp
sti
jp
inc
sbb
jecxz
dec
rcll
dec
ljmp
int
xor
xor
jae
or
dec
xlat
jbe
addr16
sub
mov
jmp
cmpsl
adc
mov
out
les
sti
add
add
mov
add
repz
cltd
jp
sub
pusha
divb
cs
mov
xor
jge
lcall
jge
lcall
fcomp
cs
pop
iret
sbb
movsb
inc
lahf
cmpsb
jno
cs
rorb
icebp
idivb
sub
cmpsb
ja
in
mov
sar
into
mov
xchg
pop
mov
cmp
pop
into
push
inc
mov
xor
jge
mov
adc
movsl
sbb
out
ds
xchg
adc
fs
mov
iret
dec
shl
lock
mov
pop
out
mov
test
cli
xor
add
pop
mov
dec
insl
jbe
into
push
pusha
mov
pop
outsb
adc
pop
adc
lods
loopne
xchg
mov
xchg
inc
sub
push
add
fs
enter
imul
fdivs
jge
cli
sub
clc
pushf
popf
mov
das
idivb
mov
sub
or
xor
in
cwtl
out
mov
outsb
aam
fsubrs
scas
adc
add
int
subb
in
jnp
int
or
push
pop
roll
aas
mov
dec
pop
data16
push
inc
fildll
sub
jo
mov
mov
mov
push
add
add
cltd
in
jmp
jo
std
cltd
fisubrl
jl
fwait
loop
mov
fidivl
lcall
sub
repz
mov
adc
mov
ljmp
enter
jmp
outsl
pop
mov
mov
es
or
cmpb
negl
jne
mov
es
lds
push
stos
pop
mov
clc
ds
or
lret
or
in
cmp
jl
fimull
mov
dec
cmp
cmp
cltd
insb
xlat
mov
stos
jne
movsb
jecxz
sub
sub
out
ret
jnp
cmpsb
nop
int
lcall
ret
rolb
lds
imul
test
xlat
out
and
jp
mov
mov
add
stos
scas
pop
mov
stos
cmp
popl
push
sbb
outsl
mov
mov
push
pop
push
or
les
lods
inc
cli
xlat
ljmp
inc
jg
test
jno
jno
push
iret
mov
push
in
pop
lcall
inc
or
aaa
adc
adc
test
mov
xchg
xlat
out
repnz
sbb
insl
test
push
fwait
out
jecxz
cmp
fstp
clc
mov
sti
or
fstpl
ds
cmp
push
add
nop
adc
ror
ljmp
mov
cmpsb
xlat
push
or
jp
xchg
mov
or
dec
xorb
mov
lods
lahf
adc
std
sbb
and
xchg
in
and
fsubrs
div
adc
or
ret
xor
push
mov
out
cmp
jmp
jp
outsl
mov
mov
fimuls
js
mov
test
push
mov
sbb
cmp
movsl
addr16
mov
fidivs
sahf
cltd
inc
mov
xor
popf
mov
push
mov
inc
lahf
lcall
sbb
lret
mov
sub
les
push
std
jl
test
xchg
dec
mov
push
sub
test
sub
mov
mov
sbb
sub
sti
add
adc
enter
in
cld
in
xor
aam
into
add
inc
aam
mov
mov
cmpsl
cmc
std
mov
aam
sahf
mov
ds
mov
sub
aad
mov
and
popa
ja
faddl
sar
adc
insb
jnp
dec
into
jbe
arpl
inc
add
adc
lcall
aam
pop
or
lds
mov
and
in
fidivs
pushf
mov
xchg
cmp
xchg
bound
shrb
icebp
loop
sbb
jns
xchg
inc
sbb
push
push
xlat
cli
cs
xor
in
pop
out
dec
jmp
mov
push
int
or
jp
iret
fisubrl
test
ret
or
ret
mov
add
lret
iret
xor
mov
lret
int
cmp
add
js
mov
and
lret
jbe
gs
aaa
cmp
add
jp
insb
dec
dec
out
jns
fistpll
outsl
ljmp
lret
adc
pop
shlb
int
je
push
mov
stc
incb
test
idivb
scas
add
pusha
push
mov
mov
pusha
in
enter
adc
add
dec
sahf
in
pop
mov
fidivrs
mov
cmp
add
push
cmc
dec
push
adc
jmp
dec
dec
or
call
add
in
push
pusha
push
fwait
loopne
mul
rcr
aaa
in
enter
stc
jmp
stos
ja
int3
adc
mov
sub
mov
xchg
int
mov
fcom
or
loop
dec
adc
jmp
sbb
movsb
insb
push
imul
sbb
fmul
adc
mov
out
xor
sbb
repz
add
sub
div
rol
sub
movsb
mov
adc
and
inc
ljmp
jmp
jmp
mov
jl
pop
dec
ds
and
ja
push
bnd
adc
push
sahf
xchg
jbe
cmp
and
cmp
in
or
jecxz
cwtl
sbb
and
enter
call
psrlw
push
repnz
push
stos
loop
orb
in
or
andb
int3
pop
fistpl
adc
out
das
ret
int
faddp
xor
stc
pop
ret
test
fbstp
lret
mov
xchg
test
xchg
inc
lods
fldt
popa
out
or
pop
aas
mov
mov
xor
fcoml
sub
ffreep
adcb
mov
out
push
xor
dec
sbb
int3
imul
insb
ds
push
ljmp
aad
or
cmp
shlb
repnz
jmp
lods
mov
cmp
xor
pushf
fs
vrcpps
mov
mov
sub
ficoms
std
dec
adc
stos
rcll
or
incb
sti
out
xor
out
mov
into
xchg
lods
mov
add
adc
or
push
ds
jmp
xchg
cmpsl
mov
or
fneni(8087
int3
mov
sbb
outsb
repz
subb
lret
add
lcall
scas
lret
shll
xchg
jmp
mov
adc
sti
adc
sti
arpl
dec
mov
sbb
mov
clc
popf
into
xchg
pusha
shlb
jno
std
mov
jae
add
sbb
adc
dec
int
xchg
cs
fadd
call
cmp
dec
orb
imul
xor
enter
push
pop
aaa
daa
inc
insb
out
ret
sbb
movsl
ds
mov
das
aaa
jl
cmc
add
sub
stc
sub
out
lret
push
mov
lcall
stos
ficoml
cmpsb
int
jno
jg
sbb
inc
xchg
inc
les
in
cmp
or
cli
jp
aam
aam
test
in
push
lret
adc
or
xchg
cli
add
xor
jno
lahf
fs
xor
cmp
test
adc
xor
xchg
movsb
sarb
lock
mov
ret
mov
add
add
adc
rol
lret
adc
sahf
fimuls
cs
push
add
mov
loopne
fadd
rcrb
je
jg
rolb
dec
test
pop
mov
xchg
cli
stc
or
adc
or
mov
mov
push
jbe
jecxz
shl
xchg
xor
sub
cli
out
insb
fwait
pop
add
dec
push
mov
push
mov
pop
mov
adc
or
pusha
sub
mov
clc
jne
xor
mov
fcomip
xor
nop
lret
or
push
cmp
into
pop
sub
pop
adc
enter
ljmp
pop
rcl
push
jmp
cmc
fcompl
into
pop
test
sub
inc
add
push
scas
stos
cmp
cli
cmp
call
fs
add
int3
ljmp
inc
jae
rcrl
scas
adc
rclb
jae
lods
hlt
mov
scas
shl
dec
test
mov
paddsw
std
jmp
dec
rorb
sbb
cmp
sbb
movsl
out
and
jnp
imul
daa
repnz
rcrb
out
testl
mov
repnz
jbe
out
xacquire
in
jbe,pn
inc
cld
xchg
fcoml
in
push
jp
lcall
pop
mov
inc
sbb
xchg
aas
cmp
push
roll
ss
pop
xor
xchg
pop
loope
incb
xchg
icebp
sbb
int3
dec
or
cmp
pop
xlat
pop
and
xchg
pop
and
ljmp
xchg
xchg
xchg
pop
into
xchg
shl
mov
mov
jle
mov
outsb
adc
movsb
and
mov
pushf
sbb
call
jp
cmpsb
mov
jb
xchg
dec
in
and
sahf
jns
add
push
mov
mov
in
stos
into
jno
mov
fldt
clc
xchg
lahf
lods
outsl
test
dec
icebp
push
out
lds
les
loope
call
cmpl
xchg
add
icebp
push
into
or
adc
insb
adc
mov
mov
into
movsb
xchg
jnp
push
push
or
mov
cs
ss
xchg
fidivrl
mov
es
imul
sahf
cli
and
fildll
imul
adc
jmp
fxch
cmp
cwtl
xchg
aam
push
dec
mov
cmpsl
cmp
fstp
xor
pop
test
enter
jmp
call
xchg
cmpsl
les
imul
jns
pushf
out
xchg
mov
jno
pop
iret
rorb
out
cmp
cli
icebp
out
mov
mov
es
ja
cmc
mov
pop
fwait
ret
call
sbb
lods
adc
les
push
pop
mov
fidivrs
ret
icebp
add
out
jle
inc
enter
cmp
mov
lea
dec
inc
sub
sbb
rol
repz
jl
int
rcr
xchg
jno
fdivrp
imulb
into
sti
pop
mov
sbb
pusha
mov
lcall
mov
and
jg
push
inc
mov
cmpsl
inc
push
ja
push
xor
mov
dec
fcoml
in
ret
jg
cmova
xor
or
jne
sti
pop
mov
out
inc
js
mov
or
call
or
jp
into
jns
or
out
cmp
mov
add
and
rclb
mov
xor
sbb
pop
mov
mov
iret
and
add
push
or
pop
fwait
test
incl
repnz
mov
mov
and
xor
sti
inc
pop
mov
push
and
imul
out
or
repz
cs
mov
adc
mov
mov
add
fbld
add
js
scas
add
or
adc
xlat
jbe
fmull
jle
mov
sahf
scas
loope
ret
and
ficoml
cmp
xchg
call
and
popa
cmp
pop
dec
inc
test
jo
nop
sbb
out
xor
in
in
cwtl
sub
xchg
out
jbe,pt
mov
cs
pop
je
mov
push
fdiv
xchg
negb
ret
mov
fcoml
inc
stc
mov
hlt
xchg
repnz
out
dec
and
xor
cwtl
test
lahf
fstpl
xchg
adc
outsl
cmpsb
loope
xchg
je
scas
int3
sti
sarb
out
in
loopne
push
loopne
lcall
or
sbb
mov
shl
into
adc
aaa
je
scas
movb
and
mov
mov
push
jno
sub
xchg
inc
in
in
adc
mov
fcomip
mov
sub
call
out
cmp
mov
call
int
or
sbb
scas
data16
lock
shlb
or
dec
cli
aad
mov
ss
and
push
jge
sbbb
je
pop
inc
cltd
scas
ss
push
jp
outsb
fsubs
mov
mov
sub
mov
cmpsb
int3
loop
add
sahf
cmp
dec
push
lcall
stos
cmpsl
outsb
jp
enter
and
out
sbb
stc
jp
aaa
jg
jo
push
mov
aam
ja
leave
lds
ljmp
jns
mov
cmp
loop
fidivs
lret
cmp
pop
in
leave
mov
mov
mov
cmc
sbb
jmp
cmp
lock
ret
fsubrl
in
mov
ja
into
adc
jae
and
iret
push
enter
mov
push
dec
in
aaa
lret
jecxz
lret
cs
and
in
inc
movsl
mov
scas
xor
enter
jecxz
add
push
shrb
movsb
ds
xchg
test
or
nop
and
repnz
lahf
inc
daa
push
mov
test
test
adc
stos
popa
jo
xor
lds
adc
xchg
adc
dec
jnp
add
loopne
icebp
adc
push
in
adc
rclb
fimull
jge
pop
add
pop
add
shlb
push
lcall
or
aaa
sub
dec
xchg
popf
rcll
shll
cmpsb
fsubrp
mov
adc
hlt
loope
lods
sub
cmc
fiaddl
adc
out
xchg
adc
in
or
sbb
clc
cld
loop
sbb
add
xor
mov
cs
push
xchg
test
pop
xchg
xchg
push
imul
pop
dec
lock
shl
out
and
in
pop
jbe
inc
push
stos
mov
sub
lcall
clc
jo
insl
mov
or
lock
je
mov
call
in
repz
pop
mov
mov
or
or
sbb
hlt
cmp
pop
std
fwait
in
cmp
cmp
sub
pop
adc
or
cmp
scas
shr
test
xor
mov
push
mov
sahf
jge
cmp
ds
mov
scas
xor
pop
mov
fwait
mov
adc
mull
shrb
ret
xor
pop
das
cmp
int3
and
mov
dec
cmp
cltd
xor
mov
mov
insb
ljmp
sahf
mov
pushf
mov
add
mov
or
or
adc
push
movsl
lods
push
dec
ret
push
sub
mov
lods
or
dec
stos
mov
insb
or
scas
les
clc
in
sbb
jmp
mov
leave
daa
ds
push
inc
pop
pop
inc
rcr
insb
repz
fs
es
adc
adc
sti
rolb
add
cmc
adc
addr16
into
rcrl
jg
xchg
dec
sbb
into
fiaddl
sar
jns
les
pop
and
std
pushl
or
jmp
cmc
adc
jne
mov
mov
test
out
and
pop
sbb
and
ljmp
into
mov
push
mov
cmc
jns
nop
test
in
daa
in
mov
les
push
mov
ret
aam
shll
cs
int
xchg
add
in
mov
sbbl
cwtl
insb
xchg
inc
fsubrs
jne
std
or
fimuls
jnp
push
push
daa
fimull
loop
and
fsubs
jl
stos
mov
rcr
aad
loop
rcll
mov
fcomi
xor
sar
mov
js
div
dec
sbb
inc
movb
pop
adc
sub
hlt
std
popf
ljmp
lcall
in
movsl
lea
add
jmp
into
out
imul
jmp
jl
and
cmp
mov
subl
inc
into
cmp
andl
or
cmp
loopne
cltd
mov
mov
ret
cmpsl
inc
mov
das
scas
into
negb
cmp
mov
jb
or
inc
xchg
test
jne
cmc
lahf
gs
sbb
notb
decb
mov
test
hlt
leave
repnz
mov
in
test
inc
aas
pop
lock
icebp
mov
pop
popa
popf
sti
mov
in
xor
in
scas
mov
pop
sbb
dec
xlat
jmp
int
idivl
pusha
push
lret
adc
je
push
adc
leave
sub
nop
stc
stc
add
add
pop
in
mov
cli
cmc
mov
xchg
inc
xor
add
pop
int3
adc
fisubs
sbb
pop
sbb
stos
shl
sti
inc
pop
pop
addr16
scas
or
repnz
push
xchg
xchg
or
lcall
neg
cmpsl
call
sub
shl
sbb
cmc
mov
jecxz
mov
and
adc
popa
mov
push
shrb
daa
xor
repz
sub
inc
mov
sahf
cli
ja
adc
call
jmp
cmp
jbe
rorb
ficompl
into
loopne
mov
jbe
adc
lcall
ljmp
decb
mov
insl
mov
cli
mov
or
insb
sbb
jp
mov
cli
rorb
daa
nop
lret
pop
sahf
mov
into
cli
fcomip
pop
into
sbb
push
insl
add
incl
jne
pop
inc
out
mov
mov
or
mov
xor
and
sarb
imul
adc
repnz
icebp
je
sbbl
in
ss
sub
adc
jbe
int3
hlt
lcall
into
lock
out
cltd
jmp
insb
loope
int3
out
out
xchg
cmp
lret
cmpsl
push
daa
add
subl
pop
pop
push
and
or
mov
lea
adc
inc
xchg
mov
pop
xchg
sub
fldt
xor
inc
jge
shll
mov
shrb
pushf
mov
sti
adc
cmp
fdivrp
mov
dec
int
xchg
pop
adc
or
push
pop
fcomps
xchg
aaa
jb
cmpsl
inc
dec
in
sahf
es
mov
jecxz
lret
xchg
jmp
into
out
out
pop
arpl
and
clc
pop
in
dec
jmp
into
imul
inc
lods
jge
insb
fmull
ja,pn
ret
sub
fdivrs
push
or
cltd
and
xlat
les
loope
adc
mov
xchg
and
fstpl
lock
daa
add
xor
stos
adc
loopne
xchg
cli
push
add
inc
or
scas
lea
push
push
mov
aaa
push
adc
icebp
ljmp
sti
out
xchg
addb
add
clc
pop
neg
roll
xchg
or
add
sbb
out
loopne
pop
mov
adc
sbb
pop
or
andps
adc
nop
mov
outsb
aam
out
scas
gs
push
aam
cld
cwtl
add
mov
or
adc
mov
repz
adc
in
in
adc
pop
lret
insb
add
std
popa
jae
fs
or
icebp
ljmp
pop
xchg
xchg
les
idivl
enter
popa
jo
insb
ret
addr16
mov
adc
cmp
cmpsb
push
sbb
js
cmp
mov
iret
ret
insb
or
repnz
jg
cmp
pop
cmpsl
ret
and
pop
xor
in
or
mov
sbb
cmp
scas
push
sub
add
push
push
or
out
add
adc
sbb
cmc
movsb
mov
push
dec
push
and
mov
mov
mov
xor
lock
mov
mov
cmc
fidivrl
mov
jo
adc
dec
dec
push
jge
in
shrl
out
repnz
aas
imul
into
das
jno
enter
jnp
outsl
fmulp
loopne
out
andl
test
sbb
test
mull
jmp
loop
xchg
daa
lock
scas
or
adc
cmc
decb
xchg
stos
xor
in
lret
xchg
out
jecxz
sahf
fcoml
push
add
push
pop
cwtl
sbb
xchg
xchg
inc
dec
inc
imul
mov
inc
mov
in
xchg
push
aas
or
icebp
dec
shll
mov
or
cmpsb
xor
inc
mov
scas
xchg
or
pop
in
adc
nop
push
mov
sar
rclb
sahf
cmp
into
ret
scas
mov
push
gs
scas
fwait
ret
push
add
xor
cli
mov
ss
pop
ljmp
repnz
movsl
adc
mov
hlt
insb
adc
rcrb
adc
shrw
test
push
enter
fisubs
dec
push
xor
mov
sahf
scas
outsb
xor
jae
dec
ficoml
scas
cli
sbb
stos
fs
sub
loopne
addb
clc
xchg
jbe
or
mov
pop
ficomps
mov
pop
mov
pop
push
das
cmp
ljmp
mov
addr16
xchg
test
lock
mov
mov
or
dec
mov
add
adc
adc
adc
orl
out
cmp
sub
stos
arpl
ret
shll
push
xor
mov
inc
lret
shr
cli
scas
pop
add
ret
aam
add
adc
and
dec
cli
sub
test
cwtl
xchg
mov
fwait
jmp
movsl
clc
sbb
sti
mov
mov
iret
fdivl
fisubl
in
outsl
mov
insb
xor
std
lea
fbstp
insb
out
bound
adc
add
pop
stc
repz
adc
addr16
stc
mov
xchg
xchg
orb
lcall
hlt
xchg
fstl
fidivrl
or
jmp
sbb
lret
jo
and
out
int
pop
pminsw
fbld
icebp
mov
pushf
shlb
cmp
dec
lahf
data16
aam
insb
mov
pusha
icebp
cmp
clc
fbstp
push
jb
pop
dec
out
adc
addr16
pop
out
pop
cs
loop
in
xor
add
out
imul
cmpsb
mov
push
mov
jns
push
into
aam
jb
mov
cmp
popf
jne
sub
xchg
adc
mov
add
xchg
mov
xchg
lahf
xchg
ja
cmpsb
data16
sbb
hlt
or
out
mov
mov
sar
lods
movsb
fstp
fstps
pop
pop
fmul
push
ja
in
jno
test
rcrb
scas
js
xor
jae
leave
test
push
insb
pop
xorb
xor
stc
and
pop
hlt
mov
and
testl
mov
addl
decl
add
pop
sahf
mov
lds
out
mov
ds
pop
clc
inc
add
stc
push
lds
scas
mov
outsb
rcrl
imulb
adc
inc
int3
nop
ljmp
aaa
push
cmp
test
aam
out
aam
add
xchg
mov
lcall
dec
jno
jbe
sahf
movntps
pushf
or
rcll
hlt
icebp
sbb
int3
subb
adc
hlt
icebp
adc
int3
ss
incl
or
popl
lret
cld
icebp
loope
sti
adc
cltd
into
cli
fdivrl
test
lret
or
xchg
mov
into
pop
fsubl
decl
pop
cmp
lret
cmc
icebp
xor
cmpsb
call
out
lock
hlt
icebp
jmp
cwtl
int3
fwait
insb
xchg
adc
hlt
icebp
rolb
int3
dec
insb
ret
cmc
repz
inc
cmp
or
mov
lods
sbb
ljmp
dec
inc
sub
sbb
popf
popa
aaa
sbb
scas
sahf
jno
leave
push
mov
push
or
mov
insl
je
and
mov
fidivs
push
mov
movsb
negb
xchg
aam
push
repnz
aad
sub
adc
lret
out
or
xor
pop
and
sub
aam
sub
into
jmp
inc
clc
jo
mov
jns
std
or
mov
outsb
enter
or
addr16
dec
mov
lcall
rclb
pusha
xchg
decl
pop
out
lret
cmpsb
jp
je
adc
fiadds
ja
icebp
xor
mov
mov
in
pop
push
adc
cmp
sbb
pop
repz
pop
insl
pop
mov
push
and
popa
pop
fimuls
jp
jle
adc
dec
lea
test
outsb
cs
stos
cmp
jmp
push
sub
sbb
lods
add
adc
cmp
cs
and
les
push
sbb
sahf
mov
jns
test
movsl
cmpsl
push
pop
cmp
xchg
insb
push
leave
mov
pop
lds
rcrb
mov
icebp
sbb
shll
test
fcmovne
addr16
das
andb
dec
icebp
ljmp
in
ljmp
fidivrs
jecxz
lock
sbb
sahf
icebp
loope
fidivs
pop
xchg
popf
or
mov
or
sbb
testb
jecxz
pop
ss
jns
mov
lock
rcrl
jecxz
sbbb
sbb
or
adc
jae
or
dec
out
lcall
dec
xlat
lock
jecxz
push
pop
icebp
jno
jo
stos
mov
cmp
or
sbb
sarb
sbb
cs
pop
fmulp
sbb
ds
les
cmpb
xlat
or
xchg
loope
cmpsl
imul
and
dec
into
clc
stos
pop
popa
movsl
mov
mov
das
cmpsb
dec
ret
jle
pop
mov
inc
lock
xchg
mov
out
bound
repnz
std
and
repnz
xlat
ret
lods
mov
dec
into
fdivp
mov
out
ficoms
pop
dec
popf
pop
in
inc
xchg
pop
sub
sti
push
sahf
int
fstpl
js
lods
add
std
insb
jmp
push
cwtl
cli
mov
shr
pop
scas
or
add
sahf
lods
stos
or
std
cltd
or
fildll
in
adc
aam
scas
adc
clc
or
popa
cmpsl
imul
popf
mov
add
lock
mov
lcall
sahf
cmp
mov
ret
nop
std
add
cmpb
and
or
sbb
sub
dec
scas
dec
int
in
mov
aas
hlt
pop
and
push
xchg
sub
ret
or
in
iret
mov
loop
add
xchg
push
adcb
mov
cmc
repnz
xlat
or
or
mov
mov
fnstenv
cmp
mov
lea
fimuls
and
xchg
outsb
sbb
inc
dec
mov
mov
dec
jmp
sbb
mov
mov
jae
cltd
jl
cs
mov
lcall
add
imul
add
ljmp
xchg
mov
aad
aas
and
clc
sti
ds
dec
outsl
dec
push
outsl
stos
add
mov
test
in
xchg
lock
jnp
mov
cmp
aaa
dec
mov
push
add
mov
int3
mov
push
fcmovbe
sbb
in
and
jbe
cmp
scas
push
shlb
jnp
jbe
jmp
adc
jg
pop
scas
dec
jbe
add
sbb
cmp
in
add
in
mov
lcall
push
push
sbb
loop
fwait
stos
outsb
rolb
mov
adcb
sbb
inc
push
xor
ljmp
dec
ja
mov
xor
stos
out
add
ud0
sbb
inc
push
mov
xchg
fs
jae
mov
in
out
xor
adc
adc
lea
jle
add
jo
jmp
add
mov
jle
mov
popa
mov
fsubs
push
mov
adc
sahf
hlt
ret
or
mov
or
add
loop
or
orb
fimuls
or
pushw
mov
inc
or
inc
dec
add
xor
fnsave
add
stos
xchg
into
add
test
icebp
scas
sbb
icebp
sbb
xchg
hlt
repnz
sub
sti
dec
pop
out
icebp
sbb
pop
or
and
adc
sahf
ljmp
into
lods
cmp
cmc
cmp
addr16
jmp
pop
pop
lcall
lcall
cmp
xor
push
add
xor
sub
in
pop
into
jp
xchg
stos
jge
mov
pop
xchg
lret
loop
mov
jnp
outsl
push
push
pop
ljmp
in
icebp
mov
ljmp
imul
and
or
mov
or
cmp
sub
sbb
sbb
jns
stos
cmpsl
pop
ret
addr16
loop
mov
lock
cmp
xchg
or
fcoml
loop
pop
scas
or
pop
adc
lret
mov
adc
cmc
and
pusha
icebp
push
out
jae
popf
arpl
cmp
xor
mov
test
dec
iret
xor
scas
iret
je
addr16
xchg
iret
cli
push
scas
mov
and
jno
or
es
addr16
clc
mov
stc
bound
sbb
aaa
mov
pop
and
jb
ljmp
hlt
push
imul
sbb
daa
mov
push
cmpsb
cs
aas
pop
movb
subb
xchg
or
jg
jle
cmc
sbb
in
std
xor
stc
ds
scas
cmpsb
add
adc
movsl
adc
cmp
and
int
lcall
jmp
cld
mov
cmc
mov
mov
cmp
adc
inc
in
dec
fdivrl
pop
je
jo
into
mov
mov
xchg
or
jp
daa
cs
xchg
push
pop
add
fdivl
mov
fisubrl
sub
lods
and
dec
and
adc
mov
adc
xchg
mov
pop
or
clc
jle
pop
out
add
or
mov
ret
in
mov
xchg
fadd
sub
fimull
mov
xchg
cmp
daa
cmp
jmp
push
lret
pop
jnp
pop
stos
inc
mov
lea
or
sbb
scas
mov
test
pop
mov
xor
xor
pop
xchg
outsb
cld
jle
movd
int3
fidivrs
jg
in
fimuls
dec
cld
jo
call
add
scas
notb
mov
mov
push
ret
inc
dec
push
fdivp
cmp
jg
jge
inc
out
jne
ds
cmp
jne
cmp
add
test
call
repnz
inc
decb
cs
xchg
lcall
movsl
mov
outsl
jle
fld
cli
jb
add
pop
insl
xor
add
aaa
ficompl
cmp
mov
into
pop
popf
mov
adc
scas
xchg
pop
or
xor
repnz
or
and
fs
ds
sbb
sarl
and
ret
test
mov
add
inc
add
inc
in
fldcw
adc
add
sti
pushl
jbe
mov
pop
sar
mov
lahf
mov
cmc
jmp
jne
int3
lcall
add
fs
ljmp
mov
shl
or
mov
stc
sub
pop
jecxz
out
dec
pusha
jle
je
inc
leave
leave
hlt
inc
ds
lock
and
dec
push
adc
sub
ljmp
in
sbb
leave
inc
sti
push
cltd
out
cli
nop
cld
andb
pop
sbbb
push
add
sub
js
imul
and
xlat
ret
lock
test
rol
fmulp
es
loop
out
add
movsb
test
inc
test
std
adcb
mov
js
mov
ds
stos
jmp
dec
inc
xlat
xchg
in
mov
add
mov
add
xor
arpl
adc
fnstcw
faddl
inc
shr
gs
inc
repnz
arpl
add
xlat
mov
aam
push
jno
ret
test
or
cmpsb
call
add
add
movsb
ljmp
insl
or
mov
scas
push
inc
add
add
adc
mov
add
cmp
push
imul
cmp
pushl
jle
jae
clc
adc
mov
ja
ret
mov
jmp
repnz
insl
outsb
rep
out
je
pop
repnz
xchg
mov
cs
ret
mov
sbbl
sbb
xor
ss
ret
movb
addr16
xchg
into
mov
aam
pop
incl
repz
stc
out
decl
pop
add
xchg
jmp
mov
sbb
shll
imul
mov
jle
fwait
into
popw
ret
mov
pop
adc
add
in
cli
fadd
bnd
mov
cli
jo
pop
popf
lods
in
call
loope
pop
add
ret
inc
add
push
or
inc
loop
sbb
pop
cmpl
pop
lods
fcoml
mov
mov
stos
repnz
scas
subl
and
pop
xchg
dec
pop
popf
lock
sbb
mov
xor
mov
subl
call
mov
mov
cmp
cltd
xor
cli
sbb
or
add
jo
jle
sbbl
mov
fprem1
adc
ja
jmp
mov
loope
inc
mov
rclb
mov
in
in
fsqrt
dec
nop
cmc
pop
rorb
or
imul
scas
cwtl
shl
icebp
lret
mov
aam
fistl
mov
scas
dec
pop
mov
sbb
mov
mov
cmc
jmp
sti
pop
add
ljmp
inc
lcall
into
lods
jae
out
inc
and
icebp
addb
hlt
ss
mov
sub
into
add
adc
adc
and
gs
add
cmc
adc
and
mov
int3
stc
push
divl
stos
inc
out
neg
in
pop
mov
enter
push
push
cmp
pop
stos
cld
cmc
out
roll
hlt
and
mov
stos
sahf
or
gs
xorl
mov
jmp
icebp
incb
xchg
cmpsl
lods
pop
or
mov
out
sbb
repnz
add
shll
or
inc
ds
sti
or
pop
push
push
pop
mov
and
cwtl
xor
sbb
movsl
jns
testl
test
es
add
xor
inc
inc
xlat
mov
pop
jge
outsb
jmp
loopne
int3
and
cmpsb
ds
std
mov
jmp
std
xor
adc
out
or
std
dec
dec
cmp
push
add
lcall
mov
pop
push
jns
icebp
jle
add
mov
xor
ljmp
mov
mov
in
jl,pn
mov
jne
rcl
jns
fidivrl
fisubrl
nop
sbb
push
data16
cltd
mov
or
or
lods
xor
add
cli
daa
xor
adc
ljmp
aaa
leave
fs
push
pop
aad
outsl
call
pop
jmp
sti
inc
mov
jle
pop
fists
pop
mov
and
out
pop
jl
jmp
fisubl
dec
call
dec
xchg
leave
hlt
cs
repz
lahf
cmp
int3
or
fbstp
cmp
rolb
xchg
sbb
xlat
jp,pt
xchg
jns
jle
mov
insl
cltd
repz
popa
sbb
outsb
push
jmp
jb
fcmove
or
jne
sbb
test
cmp
add
idivb
ret
lahf
cli
outsb
clc
jmp
and
inc
fstl
adc
sbb
push
dec
push
aad
out
sahf
in
xchg
pop
hlt
lcall
icebp
add
xchg
mov
cmp
test
loope
cmpsl
mov
sbb
shll
jmp
insl
in
add
sub
cld
mov
inc
and
out
xchg
ds
fbld
sbb
pop
jo
xor
jg
ficoml
jecxz
mov
out
js
pop
enter
push
outsl
xchg
lret
in
jno
add
cmpb
jp
mov
inc
push
sbb
cs
call
adc
call
aad
mov
rcl
push
or
pop
mov
pop
adc
jnp
sbb
adc
xchg
inc
loope
cltd
popf
in
push
ret
outsb
ret
mov
cli
mov
sarl
adcl
outsb
ret
imul
cmpb
rol
inc
adc
push
xchg
mov
cld
out
test
mov
pushl
dec
shlb
mov
or
fiadds
push
stos
xorb
std
push
jbe,pt
in
push
and
scas
xor
mov
ljmp
fwait
cltd
mov
hlt
mov
jg
mov
stc
push
push
mov
out
adc
jecxz
adc
push
add
fmul
sbb
mov
fs
int3
stc
and
sub
iret
and
movsb
addb
or
adc
aas
das
test
insl
rep
testl
lret
paddusw
fsubs
into
or
add
adc
lcall
testl
xchg
push
or
rorb
dec
repnz
fiadds
outsl
fdivl
xchg
xchg
mov
add
fistps
add
fists
sbb
lcall
in
outsb
dec
push
ljmp
or
pop
or
xlat
ret
push
out
daa
shrb
fistpll
adc
cmp
mov
or
add
aad
loop
aas
movsb
pop
dec
shlb
sbb
mov
out
add
leave
movsl
mov
dec
into
push
inc
pushl
fimuls
out
pop
xchg
and
cli
insb
jmp
jle
jne
pop
mov
or
xlat
pop
xchg
pop
inc
ljmp
or
ret
call
insb
mov
mov
jl
or
stc
push
adc
add
pushf
xchg
int3
mov
or
faddl
mov
pop
icebp
daa
and
aam
push
ljmp
icebp
push
xchg
aaa
or
add
pop
out
es
dec
push
out
or
inc
cmp
add
movsb
dec
daa
prefetcht0
xor
xlat
je,pn
fisubs
cli
incl
and
mov
mov
lock
xchg
mov
push
adc
std
xor
out
mov
lahf
jg
jns
xchg
or
popa
pop
sub
or
pushf
outsb
incl
ja
rol
lret
rol
les
flds
cs
lock
dec
fldenv
sbb
out
movsl
sbb
into
sbb
fimull
std
dec
stos
insb
add
hlt
stc
jle
mov
cltd
dec
in
sbb
into
les
cld
ja
pushf
jno
gs
sbb
in
pop
sbb
scas
push
repnz
dec
adc
lret
sub
and
lcall
jmp
pop
mov
pushf
loop
add
xlat
lds
add
cmp
out
adc
push
iret
es
pop
cld
pop
sub
adc
das
out
mulb
pop
sub
pop
out
pop
push
lcall
ret
loopne
fcmovu
scas
scas
sub
aam
mov
jmp
dec
and
mov
fmul
test
mov
js
or
push
xchg
pop
pop
cmc
je
xor
jns
ret
scas
arpl
out
inc
es
xchg
mov
push
sbb
addr16
push
jp
adc
sarb
popf
shlb
pop
sub
cmp
xor
xor
mov
sbb
ljmp
cld
add
pop
mov
inc
orb
dec
xor
cltd
call
cli
inc
fcomps
or
adc
adc
mov
push
xor
and
or
sbb
push
lcall
stc
inc
jp
push
mov
push
ja
dec
pop
adc
fucomi
mov
scas
pop
sbb
dec
sbb
mov
sub
shll
aas
mov
ja
es
in
movq
push
cld
mul
xchg
fcom
pop
out
push
adc
push
leave
dec
mov
pop
xchg
or
imul
xchg
mov
outsl
nop
inc
cld
in
icebp
sub
xchg
cld
cmp
sar
adc
int3
lcall
pop
xor
repnz
and
jo
pop
mov
lret
out
jge
dec
fsubl
add
lahf
popa
cmp
rclb
addl
shl
lods
dec
in
cld
adc
fxch
sbb
out
xor
and
out
or
and
cltd
fwait
sti
incl
or
fidivs
jmp
xor
mov
in
jg
mov
adc
push
out
out
repz
push
push
sti
fadds
mov
icebp
repnz
aaa
adc
lahf
adc
cld
push
sub
cld
test
fwait
aam
xor
pop
push
movsl
and
daa
push
out
add
pop
ja
xor
arpl
push
pop
mov
sbb
insb
jmp
in
inc
mov
or
flds
xorb
lods
jnp
aaa
std
out
cmp
imul
enter
mov
negl
dec
or
test
rcrl
imul
adc
sarl
loopne
imul
cmp
pusha
js
mov
bound
mov
mov
repz
jp
shlb
cmp
rol
pop
pop
push
ret
enter
sahf
scas
push
pop
mov
cmp
adc
loopne
cmp
imul
sbb
imul
jns
pop
test
clc
repnz
rol
push
mov
das
pop
jns
les
pop
pop
mov
adc
or
xor
hlt
roll
push
lods
and
jle
shlb
fisubl
jecxz
popf
and
adc
lds
or
into
mov
cld
mov
pop
mov
addb
add
roll
lods
ret
or
push
inc
sbb
aam
and
filds
jle
mov
lahf
jge
repz
leave
pop
cmp
cmpsl
int
fiaddl
testb
mov
shl
jns
insl
hlt
and
jb
jo
adc
sbb
aam
xor
mov
dec
pop
add
adc
pusha
mov
pusha
add
movsl
pop
jge
add
ss
cmp
int3
or
mov
std
or
fwait
cmpl
xchg
pop
popa
popf
cltd
push
or
mov
lret
lock
pop
mov
cld
rcrl
incb
enter
mov
mov
lret
or
mov
push
jb
xchg
ret
aaa
add
push
mov
mov
aaa
jb
mov
test
lret
cltd
ret
daa
sbb
test
stos
cld
ret
inc
dec
xchg
mov
cmc
mov
in
hlt
adc
and
repz
mov
gs
or
sbb
mov
push
hlt
lock
mov
pop
icebp
or
movsb
aam
aaa
pop
ret
mov
jnp
xorl
sub
call
jno
or
or
push
leave
add
push
out
and
pop
xlat
xor
pop
sahf
mov
lds
ss
or
mov
into
mov
and
jmp
scas
jp
popa
jno
popf
into
xor
lock
ss
dec
loop
mov
loopne
ret
sub
pop
int3
test
dec
into
mov
fldcw
dec
and
jge
mov
hlt
bound
outsl
rolb
push
cwtl
enter
or
pop
lods
ljmp
insb
push
enter
xchg
std
push
aad
and
push
ds
loop
sub
inc
repnz
pop
add
dec
gs
xor
dec
stos
add
fnsave
daa
sbb
adc
hlt
jge
mov
jecxz
mov
push
repnz
shrl
ficoml
pop
xchg
bound
into
jp
outsb
jl
subb
mov
and
jmp
pop
push
fmull
call
jb
jle
cwtl
push
mov
es
sub
jmp
pop
pop
sbb
push
in
jnp
adc
mov
jae
push
mov
sarb
fmull
repnz
clc
scas
xor
mov
movsl
cs
or
mov
mov
sub
test
mov
mov
aas
jle
shl
and
iret
je
out
xchg
aam
adcb
push
pop
sbb
data16
push
pop
fisubl
jbe
jp
outsb
jb
sbb
insb
jae
mov
cmpsb
mov
pop
sti
cld
add
xor
imul
pop
mov
push
push
in
ret
test
pop
sbb
fadd
inc
loope
add
or
xchg
cld
test
shlb
ljmp
frstor
lahf
xlat
xor
subl
fcmovnb
das
rcll
pop
mov
repz
insb
mov
mov
int3
adc
repz
cmp
pop
mov
mov
clc
or
mov
add
xor
lods
pop
scas
mov
adc
lds
inc
add
sbb
pop
loope
sbb
addr16
es
mov
inc
and
movsb
and
pop
xor
imul
inc
fildl
push
lret
add
lods
add
mov
add
lret
icebp
mov
add
rorb
stos
xchg
jge
push
test
adc
and
xor
scas
or
pop
sub
or
lods
adc
fwait
scas
mov
rorb
adc
xor
in
rcrl
shlb
add
xchg
incb
mov
mov
loop
je
leave
popf
cmc
add
scas
test
jl
xchg
or
repnz
mov
add
push
pop
xor
inc
rorb
cmp
in
scas
test
pop
mov
and
insb
or
mov
outsl
sahf
push
jae
icebp
mov
sub
push
outsb
jo
test
cli
sbb
xor
lea
jo
outsl
mov
ret
inc
cmp
xlat
or
or
xor
pop
repz
in
shrb
dec
jp
and
sar
into
repz
lock
push
fidivl
add
lea
sub
pop
pushf
add
mov
jo
cwtl
test
sbb
test
cmpsb
in
rcrb
orl
xor
jnp
loopne
cltd
jge
outsb
call
adc
xor
pop
stos
int
scas
lret
ret
rcl
movsb
mov
or
jecxz
ffreep
fldz
ljmp
xlat
loop
adc
xlat
or
outsl
mov
dec
and
popf
mov
ljmp
or
lret
cltd
sbb
mov
pushf
push
mov
or
jne
shrb
hlt
jge
insl
std
jns
outsb
mov
dec
add
sbb
call
pop
divl
shrb
das
test
push
jne
adc
fs
sbb
popl
fstpt
arpl
add
es
mov
jmp
cs
std
sti
jmp
dec
mov
or
and
add
jne
mov
xorb
mov
fdiv
loope
pop
or
fsubrp
xor
imul
push
rorl
adc
xor
in
loope
jmp
mov
cltd
and
inc
cld
cld
xlat
or
ret
movsb
inc
test
insb
imul
std
in
fchs
or
adc
negb
data16
mov
xlat
not
arpl
add
lock
jae
sbb
out
inc
pop
add
and
or
ss
rcl
xchg
or
arpl
inc
out
push
pop
sub
lcall
add
or
or
xorb
lods
jp
idiv
jbe
fimull
add
sub
or
ret
pop
fmuls
sub
or
loope
pop
cltd
xlat
dec
adc
inc
or
into
dec
mov
jge
mov
iret
pop
jge
xor
les
rep
xchg
dec
js
adc
sbb
stos
push
imul
decb
jbe
inc
sbb
push
sbb
decb
add
or
scas
movsb
daa
sbb
xchg
fiaddl
or
ret
popf
or
pusha
mov
push
add
repz
pop
cmc
push
sub
pop
lea
push
scas
mov
adc
pop
mov
leave
and
or
aam
pop
jl
push
cmpsb
notl
jge
pushf
push
leave
shrb
pop
jae
cmp
pop
push
mov
adc
cmp
dec
xor
sub
push
add
into
push
in
in
sbb
test
jmp
xchg
ljmp
adc
or
sbb
pop
pusha
xchg
adc
mov
divl
incb
cmp
push
sti
arpl
or
jns
sti
jmp
pop
mov
loopne
out
lretw
dec
cmpsl
adc
push
and
push
rorb
insb
xchg
rolb
push
jecxz
cmp
mov
pop
ret
inc
xor
inc
lcall
xchg
int3
dec
mov
scas
jge
pop
sbb
adc
sub
lahf
js
imul
scas
adc
adc
ret
pop
pop
pop
andl
lea
mov
push
xor
clc
mov
popf
sarb
sub
movsl
nop
fcoms
pop
adc
xchg
shlb
cltd
or
loope
adc
cmc
test
push
cmp
arpl
in
or
add
inc
icebp
cmp
push
add
out
js
lahf
mov
negl
int3
shll
insb
adc
pop
and
ljmp
dec
lods
add
js
mov
shr
scas
cmpsl
mov
shrb
sub
imul
imul
jnp
or
xchg
pop
ret
ss
sub
add
mov
adc
stc
mov
test
jmp
sbb
ds
pop
or
and
pop
pop
push
shl
push
arpl
sub
mov
push
adc
test
cld
hlt
fucompp
fsubrl
data16
add
das
cmp
je
and
in
mov
int3
pushf
jnp
in
push
fmull
mov
stos
xchg
pop
test
sbb
cld
pushf
and
in
mov
mov
int
and
push
mov
and
scas
sahf
pop
push
cmp
mov
push
push
or
sub
push
int3
adc
xor
leave
addr16
test
je
mov
pusha
cmc
dec
adc
rcl
jp
js
mov
xchg
shr
add
lods
scas
push
das
adc
sbb
fisubs
popl
add
or
shrl
or
orb
decl
add
dec
nop
or
fiadds
data16
push
push
cmp
stos
imulb
imul
inc
das
sub
rcrl
dec
push
adc
ss
push
inc
cmpsl
andb
sti
xor
pop
shll
adc
or
enter
adc
fucom
jae
sbb
in
jp
cli
cmc
inc
or
ret
and
iret
push
adc
or
jg
mov
and
nop
push
xor
out
test
loop
neg
xchg
fidivrs
pop
push
repz
push
xor
and
xor
mov
lods
mov
repz
or
stc
pop
out
int3
out
inc
out
xor
negb
sub
inc
js
mov
xchg
adc
dec
lods
or
dec
hlt
lock
xchg
or
pop
dec
fcomi
ret
lods
jno
cmp
shll
push
adc
ret
sti
add
fld
pop
leave
into
imul
jo
mov
mov
mov
es
jb
out
inc
incl
jmp
lret
repz
pop
decb
mov
adc
popf
sahf
lret
xchg
andb
inc
jno
icebp
sahf
in
in
rorb
dec
pop
or
out
int3
xchg
ficoml
sub
call
and
push
into
sub
mov
cmp
pop
cmpsb
mov
sar
fs
popf
xor
and
cmp
outsl
popa
xor
mov
mov
push
inc
pop
adc
in
out
sti
jbe
xor
mov
enter
aas
xlat
in
add
int3
mov
adc
and
adc
int3
jl
jp
call
xchg
hlt
inc
test
sarb
xor
not
inc
enter
cmp
dec
sub
push
ficoml
add
push
jne
pop
xor
negl
cmpsl
cmp
imul
xlat
ret
mov
xor
or
jns
into
iret
out
imulb
mov
mov
dec
xor
int
in
rcrl
sbb
add
test
incb
or
lret
adc
pop
or
mov
nop
mov
loop
xor
xorl
mov
loopne
add
mov
adc
or
stc
cmpl
adc
repnz
or
je
or
inc
cs
ret
push
mov
rcll
xor
mov
ljmp
popa
adc
cwtl
rorb
lods
movsb
lret
mov
imul
bound
popf
or
and
dec
add
push
cmp
push
add
push
push
mov
into
pop
adc
subb
jmp
jo
cmpsl
int3
or
lcall
or
mov
loop
xchg
shl
and
mov
loopne
xchg
into
sti
sti
xor
adc
fwait
stos
hlt
mov
rcr
cmp
pop
int3
dec
lds
pop
fistl
stos
jb
scas
es
aad
dec
xchg
push
ds
pop
jns
inc
mov
pop
cld
adc
inc
in
sti
mov
jp
xchg
xor
int
lods
xchg
lcall
adc
sbb
pop
sbb
pop
imul
jne
icebp
mov
add
or
icebp
lds
int3
pop
sub
je,pn
les
or
add
fdivs
fnstcw
jmp
scas
shr
lea
push
add
add
dec
or
sbb
sub
sbb
js
mov
cli
adc
xlat
pop
jmp
scas
lods
in
fmull
sbb
ret
adc
stos
repnz
adc
push
scas
scas
in
xchg
or
pushf
push
call
xlat
push
jmp
scas
mov
pushf
dec
call
xlat
adc
dec
mov
orb
adc
jmp
jge
pop
mov
rorb
lcall
stos
add
xor
add
fdivrs
or
add
or
jmp
jge
pop
scas
add
push
jmp
mov
push
push
nop
fsubs
sub
mov
xchg
jmp
fwait
or
out
add
xchg
sbbb
test
jmp
cmp
add
ds
lcall
ficompl
pop
cs
flds
pop
ja
andb
pushf
dec
call
xlat
shr
fs
mov
pop
pop
push
leave
scas
cmp
ficomps
or
stos
popa
sub
and
sahf
int3
add
cltd
pop
push
pop
mov
cs
enter
pushf
inc
mov
pop
call
testb
stc
ss
je,pn
mov
cmp
and
mov
mov
es
jbe
mov
js
sbb
iret
jno
dec
jnp
out
sbb
insl
aad
add
cwtl
push
add
xchg
fistps
int
aad
cmc
arpl
push
fcos
jg
cli
push
jmp
mov
mov
add
call
xor
movsl
xchg
vunpckhps
pop
or
push
mov
pop
adc
orb
icebp
or
or
cs
jl
xchg
outsl
sbb
out
pop
rorb
pop
ss
mov
bnd
mov
jbe
repnz
sbb
cmp
testl
ss
les
out
and
add
lret
cmp
add
or
push
lock
loop
mov
xchg
scas
aam
push
ds
fs
or
pushf
sub
pop
hlt
outsl
jmp
inc
pop
in
jnp
pop
dec
leave
add
mov
mov
sub
rcl
pop
or
xchg
lds
lock
jl
push
and
in
jmp
cltd
mov
xor
adc
popa
mov
ret
adc
inc
sbb
fcomps
imul
lods
sub
jne
lods
inc
add
add
jmp
rclb
fiadds
pop
cmp
inc
jg
mov
out
aam
cmp
scas
hlt
mov
int
jae
dec
into
cmc
fsts
xchg
inc
mov
cmp
and
iret
sub
mov
jmp
roll
xchg
xor
test
xchg
icebp
jge
lock
aam
scas
mov
in
sbb
out
jne
hlt
out
aaa
arpl
mov
push
out
adc
out
pop
int
mov
jne
mov
cmp
adc
pop
pop
je
xchg
mov
jae
out
jp
repnz
push
jle
adc
decl
inc
or
fidivs
mov
pop
or
xor
push
out
in
adc
sti
testb
movsb
dec
out
pop
cmp
dec
rcr
into
icebp
test
aam
scas
in
add
lcall
adc
out
cld
mov
cmp
data16
adc
push
push
or
sub
testb
into
sar
and
inc
pop
jg
stc
sub
stc
movsl
sahf
push
sbb
mov
inc
movsl
push
insl
add
shrb
mov
and
sub
xor
stc
icebp
jmp
pop
js
popa
jmp
out
subb
aad
into
std
in
mov
clc
jle
jp
cmp
pop
inc
sub
out
mov
imul
ficoms
mov
sub
adc
lret
outsl
lcall
call
add
pop
in
rorl
cld
mov
shrb
icebp
aam
add
fisttpll
jle
sbb
icebp
pushl
adc
ret
in
or
ljmp
popf
lret
or
scas
jmp
imul
or
mov
jl
scas
js
in
jle
xchg
pop
mov
clc
or
repnz
sbbb
rclb
jg
stos
pop
lods
lea
fwait
mov
or
leave
int
cli
jo
dec
pop
cltd
call
adc
or
in
jae
mov
fistl
or
mov
add
jne
xchg
cmp
cmp
push
mov
pop
clc
int3
popf
mov
and
mov
adc
fistps
popf
push
cwtl
lret
popa
repnz
mov
int
sbb
fmulp
mov
lret
mov
into
mov
test
adcl
mov
mov
jns
scas
sti
inc
std
xlat
insb
sbb
pop
or
lahf
mov
push
cmpsb
jns
in
in
fmull
fdivrl
clc
lret
fcomps
mov
scas
jns
ret
js
fdiv
aam
add
sti
test
push
lret
ficoml
xchg
add
out
xchg
ljmp
in
mov
into
jmp
mov
xchg
jmp
in
insb
push
add
cmpsb
sbb
mov
fidivl
or
stc
lahf
add
or
repnz
jbe
or
ficoml
cmp
lods
fucompp
push
mov
stc
cmp
lcall
leave
or
mov
jg
pop
mov
mov
mov
lahf
movsl
inc
popa
xchg
xchg
leave
mov
insb
movsl
or
loopne
pushf
test
mov
jbe
outsb
pop
adc
fcompl
add
daa
pop
cltd
adc
and
and
mov
aam
gs
and
insb
popw
sbb
push
add
xor
pop
negb
add
sub
loope
inc
dec
hlt
mul
repnz
dec
call
adc
add
stc
xor
pop
test
add
ret
add
adc
jg
adc
cld
mov
and
mov
mov
push
push
fcoml
ror
in
loop
sub
inc
nop
lcall
rcl
fnstenv
dec
mov
aas
adc
or
out
sub
repnz
and
je
and
jecxz
shlb
or
cs
adc
lret
rcll
sbb
mov
lcall
mov
mov
add
fstps
adc
adc
xor
jle
or
add
roll
lahf
rorl
add
cmpl
test
add
stc
lods
xchg
fcoms
xchg
jmp
icebp
xor
and
ds
jp
in
in
out
ficoml
cmp
es
dec
add
icebp
xchg
into
sbb
dec
adc
pop
pusha
loop
inc
add
jge
xchg
jmp
xor
xchg
push
pop
adc
stc
jmp
inc
scas
test
add
cltd
push
in
cltd
arpl
clc
jg
cmp
hlt
fmull
les
xlat
jmp
call
movsb
negl
addr16
movsl
loope
pop
push
cwtl
add
add
lock
mov
hlt
mov
repz
mov
cmp
adc
out
mull
adc
sar
xor
push
mov
mov
push
or
sahf
and
es
sbb
shrl
jle
sbb
out
inc
fiaddl
push
cmc
scas
or
into
pop
es
and
mov
xchg
push
adc
insb
ret
or
int3
sub
mov
add
dec
jle
mov
negb
or
shl
mov
std
int
mov
hlt
dec
add
dec
lock
cmp
repz
test
loope
stos
jg
xchg
aad
mov
xchg
xor
hlt
out
cmp
lahf
dec
adcb
add
jp
adc
and
sbb
adc
scas
sti
cld
lods
pop
pminsw
test
test
cwtl
adc
cwtl
dec
add
int3
icebp
add
mov
fstpt
cltd
ficomps
fwait
pop
lods
mov
push
out
scas
add
jne
xor
mov
nop
shl
test
adc
mov
inc
into
mov
mov
dec
mov
stc
mov
outsb
outsl
mov
add
pushf
in
hlt
cmp
add
inc
pop
sahf
insl
in
cli
pusha
je
ret
ja
xor
push
xchg
outsb
je
push
andb
cld
into
add
pop
lds
push
or
pop
jge
gs
mulb
dec
cld
shlb
cmp
or
push
repz
or
jmp
jecxz
adc
pusha
push
mov
push
stos
std
ret
shlb
jbe
mov
stos
jns
xor
jl
dec
inc
stos
pop
mov
push
outsl
cli
jb
outsb
jecxz
xchg
mov
cmpsl
jne
adc
push
dec
add
out
ja
mov
or
push
cmp
fsubl
sub
pop
pop
sbb
inc
loopne
rorl
pop
fcomip
loope
inc
xchg
add
and
test
push
js
roll
jae
xchg
mov
sbbb
mov
mov
and
add
mov
adc
test
sbb
fs
mov
fs
daa
jmp
dec
mov
loope
int3
cld
adc
loop
or
pushf
and
jmp
insb
dec
mov
add
pusha
ret
sub
loop
loop
shrb
xor
repnz
push
push
xchg
sub
mov
pop
inc
mov
je
sbb
faddl
cli
add
jb
ljmp
or
lock
shlb
pop
push
popf
or
into
lret
xor
fnstcw
outsl
ss
inc
or
mov
cmc
pop
loop
addr16
les
mov
adc
pop
mull
add
push
push
xchg
ficompl
push
in
stos
and
out
icebp
pushf
in
ds
ret
scas
cmp
jb
test
push
dec
hlt
xor
sar
adc
mov
adc
decl
loopne
loop
adc
popa
lret
add
cli
iret
xchg
dec
mov
loop
rorb
push
mov
xor
cmpsb
stos
pop
shlb
or
push
mov
shl
jle
and
ds
or
sbb
pusha
inc
sti
mov
mov
cld
jbe
mov
outsl
fdivl
jle
insl
push
pop
addb
cld
mov
sti
icebp
or
or
adc
jno
jne
scas
xor
cli
xchg
jl
jmp
ljmp
xor
fisubl
fldl
mov
xorb
fdivl
mov
in
scas
lds
xlat
ss
mov
fmuls
sub
pop
ljmp
pop
lock
int3
sub
enter
jns
mov
ss
jno
out
sahf
pusha
push
push
add
iret
lahf
rcl
pop
adc
add
push
repz
cli
xor
rcl
mov
loope
adc
je
popl
xchg
pop
push
or
add
sbb
xlat
flds
sub
adc
cmc
adc
leave
imul
mov
push
push
mov
pop
testl
cmp
daa
mov
mov
enter
cmp
sbb
cmc
jmp
adc
into
popa
loope
repnz
pop
push
xchg
ljmp
out
cmpsl
lcall
xchg
jo
sbb
add
lds
notl
adc
mov
jecxz
adc
adc
aaa
inc
popf
lret
add
icebp
adc
adc
cli
insl
mov
out
rcl
and
xchg
leave
mov
call
adc
sub
std
scas
mov
cmc
sbb
lock
insl
adc
fprem1
or
push
cmpsb
fnstenv
mov
mov
mov
ret
push
add
insl
xor
or
or
jnp
sbb
pop
jnp
sbb
das
mov
adc
repz
inc
and
push
mov
add
int
dec
shlb
callw
test
push
jb
mov
push
notb
sbb
or
outsl
insb
xor
js
cmp
add
mov
lds
push
sub
add
sahf
jns
les
stos
cld
mov
push
add
xor
in
and
shrl
xlat
pop
int
ljmp
push
dec
in
fcomp
inc
arpl
adc
jns
dec
decb
xchg
pop
inc
in
shlb
test
mov
bound
outsb
imul
aad
pusha
sub
adc
adc
pop
sbb
arpl
or
and
cs
dec
pop
jmp
push
mov
andb
cld
fisubl
popa
push
out
sbb
repnz
sub
push
outsb
scas
inc
mov
cmp
jp
hlt
loope
sahf
jno
aad
xchg
xchg
loope
adc
cli
cli
push
mov
bound
jbe
mov
loop
fidivrl
xor
mov
cld
stc
or
fs
icebp
shlb
xchg
lret
cmp
das
pushf
repnz
add
scas
bound
jb
xchg
mov
inc
xlat
ljmp
jbe
pop
push
sub
dec
push
into
ljmp
and
jbe
and
adc
or
push
popa
cmp
mov
jle
inc
je
int
or
imul
mov
sarl
and
cli
cs
or
aam
scas
outsb
cmpsl
lcall
cmp
fisubl
movsl
ja
nop
jno
mov
mov
ljmp
add
dec
fcomps
jo
ljmp
inc
bound
stos
add
jmp
cmc
xor
test
in
orl
mov
inc
lcall
fwait
lock
cmp
je
andb
ja
xchg
iret
add
int
cs
icebp
mov
mov
sub
jp
std
inc
addr16
ret
ret
or
subb
test
dec
out
mov
inc
jmp
insb
fnclex
sti
or
shr
fidivs
mull
loopne
cmp
cmp
lcall
sub
add
adc
and
mov
iret
adc
ja
adc
aam
shll
add
adc
rol
xor
sub
bound
cwtl
jg
call
jl
push
mov
xchg
std
insl
decl
ljmp
and
inc
or
rorb
out
adc
pop
popa
and
pop
sbb
clc
adc
mov
mov
test
mov
out
xor
ret
lcall
outsl
xchg
jno
mov
push
outsb
push
shrl
mov
call
lahf
pop
or
xor
lret
nop
add
adc
and
mov
pop
mov
push
or
mov
jmp
mov
loopne
test
loop
je
in
push
adc
mov
and
push
outsb
fisubs
push
or
int3
jne
clc
push
mov
adc
pop
scas
push
dec
notl
movsl
xchg
add
push
or
push
or
adc
dec
mov
pusha
push
std
mov
popf
mov
repnz
lock
xchg
add
in
adc
daa
and
dec
icebp
rcrb
xchg
cli
or
std
xor
ljmp
outsl
mov
cmp
in
pop
pop
scas
inc
mov
sub
cwtl
xlat
ds
or
lcall
fimuls
adc
cli
sub
cwtl
xlat
into
sub
or
add
inc
daa
mov
cmp
mov
or
xchg
into
scas
mov
subb
mov
or
pop
or
fwait
cs
in
xchg
mov
fs
lock
jnp
or
xor
sbb
les
pusha
inc
pushw
popa
ret
sub
mov
jg
bound
sub
ret
mov
adc
push
addr16
adc
shll
incb
xor
push
js
jo
test
jmp
sub
add
icebp
mulb
insb
imul
mov
mov
pop
adc
xchg
mov
pusha
xchg
or
pop
or
test
fs
inc
stc
dec
add
push
cmp
adc
out
ret
dec
add
pop
mov
loope
cmp
mov
ret
inc
fs
jo
loop
push
enter
cli
or
mov
ljmp
pop
push
add
add
add
add
inc
jp
add
loop
es
fildl
or
or
cli
imul
mov
mov
add
cmpl
in
cmpsl
mov
in
cmp
push
cld
xorb
push
sbb
mov
inc
loop
stc
rcr
push
add
jecxz
and
mov
adc
test
enter
add
sbb
sbb
data16
sbbb
int
xor
or
in
sub
js
aam
pop
push
cmpsb
mov
xchg
fsubl
in
repnz
push
insb
insb
dec
test
ja
sbb
es
push
adc
lea
cltd
rcl
adc
or
xor
outsb
mov
shlb
or
mov
cld
mov
outsb
cltd
xor
ret
ret
lret
scas
shl
iret
dec
mov
jmp
aaa
pop
mov
pop
scas
cmp
test
outsl
into
mov
lcall
fsub
jp
int3
sub
add
decl
xchg
push
sub
mov
lods
jbe
popf
dec
push
pop
and
xchg
jmpw
add
mov
adc
lret
into
jo
mov
inc
add
cs
jns
stc
mov
loop
or
add
or
push
adc
sbb
mov
mov
sub
lret
or
mov
rcl
cmp
movsl
lret
in
adc
mov
lret
mov
pop
add
pop
stos
test
xchg
adc
xlat
cmpsb
vmread
mov
add
cltd
andb
adc
cli
adc
faddl
lret
jae
lret
mov
ficompl
xchg
fidivl
and
xor
out
xor
test
adc
sbb
pop
movb
icebp
mov
push
je
out
add
cmpsl
cmp
mov
add
fsub
mov
and
add
jb
cltd
hlt
or
lods
pop
xor
fisttpll
cmp
insb
inc
adc
adc
and
xor
cmp
call
mov
les
mov
dec
mov
sahf
cmp
push
add
mov
cmp
pop
out
jmp
fsubr
cld
dec
sbb
mov
test
pop
jecxz
incb
dec
adc
sub
mov
mov
push
jg
xchg
sub
mov
cltd
ja
int
fistps
clc
fildll
mov
xchg
mov
lret
push
outsb
jmp
xchg
dec
repz
dec
rorb
mov
ljmp
sahf
mov
dec
sbb
test
mov
and
clc
mov
xor
rorl
dec
fidivs
sahf
or
push
mov
push
gs
jl
lea
push
add
jns
nop
dec
or
pushf
sbb
xor
ljmp
jmp
std
cmpsl
sarb
or
or
daa
adc
test
out
dec
sbb
cmc
ljmp
or
insl
roll
cmp
xchg
inc
cs
sbb
xchg
dec
insb
xchg
int3
add
rorl
fisubrl
sbb
movl
lret
js
add
notl
sbb
sbb
push
mov
push
inc
sub
sub
mov
cmp
cmp
aas
fst
jo
mull
sbb
std
jbe
insb
or
or
sbb
add
push
jge
pop
in
xchg
mov
ficoml
lcall
cld
jb
push
or
mov
shrl
xchg
aam
aam
ss
sbb
mov
cmp
xor
in
sub
sbb
push
out
in
lret
addr16
jmp
rol
addr16
cmp
dec
aad
and
and
mov
add
fsubrp
xchg
cli
or
xchg
cmp
lahf
stos
test
adc
repnz
xlat
scas
stos
xchg
or
cwtl
cmpsb
aam
outsl
fwait
or
push
jle
movsb
mov
xchg
out
or
jo
aam
outsl
out
lcall
std
call
mov
push
or
inc
pop
add
jl
pop
sub
push
push
fdiv
xor
je
push
push
add
cmp
cmp
outsl
repz
add
inc
in
out
jno
lret
mov
aam
mov
in
sub
add
pop
in
push
add
jne
adc
ret
mov
or
stos
mov
out
fcoml
or
jbe
mov
xor
inc
adc
into
roll
push
pop
call
lods
cli
add
adc
je
and
pop
push
dec
jle
mov
xchg
aad
sti
pop
ds
mov
and
cmpsl
dec
xor
mov
sti
push
pop
or
lret
or
mov
cli
adc
jnp
pop
push
jmp
jg
jp
xchg
adc
gs
testl
xor
shll
cld
loop
xchg
adc
or
mov
adc
and
cmp
imulb
cltd
in
out
pop
icebp
jmp
mov
and
pop
mov
aaa
push
cltd
and
push
pop
std
mov
and
pop
outsl
sub
mov
or
jb
stos
aaa
pop
aam
repnz
mov
push
adc
mov
add
or
inc
popf
sbb
jecxz
or
add
into
add
cmp
fnstsw
cli
jno
shlb
dec
les
cmpsl
and
pop
adc
stos
cmp
in
ret
ss
popa
xchg
mov
inc
test
pop
mov
mov
bound
lcall
inc
sbb
inc
xor
jmp
cld
stos
shlb
jecxz
push
mov
mov
adc
ret
and
adc
add
adc
lods
lret
cli
movsb
jg
mov
ret
int
mov
or
mov
mov
out
and
add
fldcw
loopne
lcall
mov
jge
add
rclb
cld
fstpl
test
lea
rorl
xchg
das
scas
xchg
mov
push
xor
mov
jecxz
cltd
push
mov
inc
out
push
stos
sub
pop
mov
loopne
and
sbb
int3
ljmp
pop
mov
pop
pop
subl
jno
inc
sub
jecxz
mov
sub
pop
adc
cmp
gs
cli
cli
cmp
cmp
mov
or
pop
mov
cmp
movl
sahf
icebp
or
adc
insl
jge
pop
loopne
lret
stc
pushf
les
outsl
pushf
push
mov
fdivp
xchg
jecxz
xorl
mov
pop
or
or
lcall
push
es
dec
or
rcll
mov
jmp
out
mul
cwtl
pop
out
je
cmp
das
icebp
pop
fldt
adc
test
mov
lds
cwtl
fsub
popl
push
mov
inc
mov
mov
dec
cmp
fisubl
xchg
ss
push
sub
pop
in
lret
nop
sbb
rolb
mov
roll
hlt
xor
add
rcrb
cld
mov
adc
ret
cltd
fmulp
adc
insl
cld
aam
add
mov
lods
iret
fstpl
test
into
mov
mov
dec
out
adc
add
mov
scas
lret
mov
int3
push
lahf
repz
cmc
loope
and
and
mov
cwtl
ret
fwait
adc
cld
iret
jmp
pop
cmp
out
into
adc
scas
insl
gs
mov
push
ja
or
lods
aam
fisubrs
adc
cmp
cltd
mov
cli
xchg
gs
adc
add
or
push
adc
pushf
or
icebp
push
cmpsb
fwait
cs
scas
or
push
mov
sbb
out
mov
or
jmp
test
xor
cltd
mov
mov
add
in
shll
dec
mov
mov
adc
sbb
out
lods
inc
xchg
lret
ja
add
sahf
outsl
push
fidivrs
add
adc
in
sbb
sub
dec
push
ljmp
inc
lds
dec
sti
pop
scas
in
push
ljmp
decb
add
lret
add
pusha
dec
mov
into
sub
inc
mov
push
ret
out
incb
in
test
fcmovnbe
pushl
call
add
inc
loopne
dec
jns
mov
inc
push
out
push
jno
dec
cmp
inc
lds
pop
mov
dec
scas
aad
jne
in
mov
cmp
sub
popf
fs
and
movsb
ret
sub
aad
mov
in
insb
insl
add
and
scas
imul
jbe
push
outsl
pop
add
jne
sub
mov
adcw
into
pop
add
mov
push
cmpsb
and
ljmp
cmpsl
pop
enter
lds
jo
or
test
xor
sar
ljmp
xlat
cmpsb
cmp
xchg
in
into
mov
sbb
dec
pop
jle
mov
repz
adc
mov
xor
loop
fidivl
es
inc
into
lcall
std
out
ja
sar
add
jl
icebp
add
jl
cld
mov
mov
pop
jge
fisttpll
jnp
cmp
repz
scas
rcll
and
mov
nop
adc
repz
scas
sahf
jl
enter
stos
mov
out
in
lcall
adc
xchg
adc
aaa
pop
js
or
or
or
cmpsb
loop
add
cli
add
mov
add
or
sbb
xor
mov
adc
les
mov
xchg
mov
out
addb
jbe
cmp
shrl
pop
outsb
hlt
jle
test
add
sub
mov
es
fsubrs
mov
data16
ret
inc
lcall
icebp
adc
mov
imul
iret
cmp
xor
popa
mov
mov
shl
adc
aam
mov
add
dec
subb
popfw
adc
lods
outsb
sahf
in
loop
ljmp
mov
sbb
fdiv
or
ret
and
aas
pop
mov
rol
push
cltd
dec
pop
mov
lahf
sub
das
jge
pop
sbb
inc
ja
rcrl
jmp
and
cmc
mov
lods
xlat
or
mov
call
sahf
cltd
loopne
ss
nop
int3
or
or
cld
jl
cltd
dec
lds
xchg
mov
jl
cmc
xchg
sti
pop
ljmp
xchg
int3
sub
dec
xchg
mov
popf
dec
sbb
cmpsw
xchg
sub
pop
es
lahf
or
rcl
outsb
movsb
rclb
into
je
scas
xor
adc
mov
jp
sub
in
lcall
addr16
mov
jns
jne
imul
or
inc
pop
repnz
add
add
and
xor
adc
add
add
repz
mov
iret
and
int3
repnz
xchg
jl
shlb
pop
mov
jae
xchg
adc
sub
iret
mov
push
ljmp
js
pop
iret
popa
adc
fstpl
fcoms
push
into
pop
ds
add
shrl
or
pop
push
loopne
int3
rcll
mov
and
and
jecxz
loope
push
add
or
into
xchg
adc
test
and
lcall
lret
cmpb
add
pusha
jmp
insl
ret
push
jb
xor
les
lods
pop
orl
push
dec
mov
lret
lds
cltd
mov
mov
jae
out
or
das
in
or
in
mov
repz
sbb
adc
clc
fsincos
xorb
fcoms
jg
cld
adc
mov
lock
mov
inc
mov
popf
push
or
cmpsb
mov
pop
movsl
add
in
pop
in
or
add
add
negl
or
imulb
out
fistpl
shr
pop
stos
sbb
shll
dec
imul
cmp
movsl
outsl
mov
cmp
lahf
out
cmp
xchg
push
test
xor
and
cmp
cmp
dec
fisubrs
jbe
inc
lea
inc
fstps
sbb
mov
push
inc
jg
pushw
sbb
cmp
inc
into
js
pop
and
mov
ficoms
imull
sbb
dec
push
aaa
mov
int3
xchg
lods
jb
std
dec
fcoml
xchg
dec
pop
pop
or
add
jmp
popf
mov
movsl
dec
pushf
aad
xor
iret
in
out
xchg
pop
fisubl
pop
ljmp
dec
imul
mov
pop
fmuls
or
popf
xor
sti
lahf
add
setb
iret
jmp
xlat
mov
cwtl
adc
lret
xor
cmc
and
dec
and
mov
rcl
mov
int3
pop
mov
sub
jbe
xchg
fwait
cmpsb
outsl
mov
mov
dec
and
dec
scas
sub
sarl
sub
out
push
in
push
adc
cmp
int
pop
push
pusha
stos
pop
pop
mov
xchg
inc
add
stos
and
imul
mov
in
jb
subl
hlt
je
imull
dec
jne
pop
mov
sbbl
dec
fiaddl
cmp
out
addr16
add
pusha
pop
lret
loop
adc
push
push
jmp
inc
repz
clc
call
add
pop
push
push
mov
cld
add
repnz
in
mov
jg
pop
idivb
ret
repnz
into
pop
add
gs
subb
mov
sbbl
mov
ret
call
mov
addr16
arpl
dec
movsb
lods
repz
mov
pop
cmp
xchg
pop
lods
mov
hlt
mov
test
lret
fcoms
jns
jne
inc
xor
jmp
xor
arpl
mov
jnp
mull
ds
repnz
lret
int3
mov
lret
jmp
cmpsl
clc
or
ja
cld
xor
pop
add
mov
aaa
mov
imul
mov
pop
push
dec
movsl
insb
push
push
cli
pop
adc
ljmp
add
and
pop
test
adc
dec
sarb
push
cmc
mov
sbb
imul
sbb
push
lea
adc
cmp
addr16
xor
pop
mov
push
and
cli
and
mov
pop
cli
leave
mov
pop
xchg
and
stos
sbb
sbb
in
mov
mov
mov
jnp
xor
stos
sub
jnp,pt
je
imulb
mov
and
fisttpll
and
hlt
in
mov
loope
inc
pop
dec
mov
cmpsl
jns
idivl
into
repz
test
or
mov
cmp
adc
xchg
pop
popa
or
call
add
xor
or
in
das
push
in
out
inc
lret
int3
add
clc
mov
sub
hlt
in
adc
or
and
add
lret
jp
inc
pop
loop
xor
rclb
out
cmp
mov
sti
xchg
or
imul
pop
icebp
into
push
shrd
aas
int3
mov
mov
add
mov
or
pop
sbb
or
or
pop
push
cmpl
ja
dec
push
mov
pop
je
cmp
sahf
les
jne
sub
jmp
add
insl
in
or
jge
lret
les
xor
scas
ficoml
pop
les
add
inc
cmp
lret
nop
icebp
push
or
jnp
fst
out
iret
mov
movsb
aas
enter
dec
ret
test
loop
fsub
sbb
jge
dec
sub
in
add
push
jle
pop
iret
ss
mov
push
sahf
test
jmp
test
mov
rcll
lcall
and
bound
or
jle
lahf
mov
mov
insl
cld
add
mov
fisubl
mov
loop
pop
mov
jnp
cs
lahf
push
lahf
stc
cmp
cli
ror
rol
lds
dec
call
shlb
jo
add
into
add
mov
call
cli
enter
adc
xor
or
adc
sub
repz
mov
push
or
in
and
mov
xor
mov
lods
mov
adc
repnz
hlt
sti
mov
sub
cmp
add
pop
addr16
sbbb
jp
xchg
sbb
call
in
pop
call
rorb
xchg
push
sahf
imul
stos
sarb
out
cld
sti
push
mov
sahf
cmp
scas
jp
lcall
inc
insb
pop
xchg
out
xor
ret
xchg
in
test
mov
aas
jl
call
pop
out
dec
into
mov
adc
call
jmp
or
cmp
shrb
pop
cmp
jbe
mov
popl
loope
mov
mov
mov
aaa
pop
cli
add
cmp
dec
pusha
rcrl
leave
sahf
xchg
push
mov
jo
add
adc
mov
add
faddp
enter
add
or
mov
or
int
adc
call
jle
cmp
pop
fstps
jp
lcall
push
testb
sbb
and
and
sub
adc
xor
icebp
or
dec
out
testb
pop
int
insb
adc
push
mov
mov
jmp
jg
and
or
pop
rcrl
lret
sub
scas
test
and
mov
ficompl
dec
rdtsc
jmp
mov
cli
and
divl
arpl
xchg
testl
and
adc
in
and
scas
int3
or
mov
int3
pop
mov
std
jb
mov
out
jle
aam
jno
mov
loopne
sahf
xor
test
incl
scas
in
mov
cli
test
inc
mov
in
jns
into
jle
pop
sti
call
in
and
test
iret
jmp
out
mov
lods
aam
stos
dec
xchg
ja
adc
cmc
mov
cmp
push
sbb
mov
jae
cmp
out
stc
mov
or
rcr
push
sub
test
iret
jl
inc
insb
push
sbb
fimull
movsl
mov
jmp
andl
mov
adc
add
or
in
or
jmp
xor
push
int
add
or
lea
sar
icebp
or
cmc
or
sbb
imull
daa
fs
fisubl
and
loop
je
sbb
out
into
lods
sbb
subb
sbb
repnz
mov
in
in
sbb
adc
ret
clc
call
push
mov
push
int
outsw
mov
in
xor
dec
mov
or
out
cmc
and
sub
stos
add
mov
push
mov
push
or
mov
repz
xchg
mov
push
jle
jmp
adc
xchg
test
cld
mov
stos
lcall
and
sub
add
lcall
xor
lods
aam
scas
in
or
jp
jl
cmpb
pop
ljmp
cmp
in
or
xchg
and
insb
into
std
fmull
pop
sbbl
movsl
rcll
pop
mov
cmpsl
add
or
in
adc
pop
add
sbb
stc
mov
call
inc
rcrb
outsb
dec
add
pushf
cmp
jmp
mov
les
push
adc
repnz
and
add
inc
lds
xor
push
dec
jl
and
mov
dec
das
addr16
in
js
ret
mov
xchg
std
pushf
orb
stc
stos
dec
inc
gs
or
xor
rolb
push
icebp
out
in
dec
and
jmp
fisttps
mov
pop
sbb
adc
xor
mov
and
daa
mov
mov
in
pop
mov
push
push
pop
xchg
sub
or
and
cs
enter
xchg
mov
sahf
movsb
ss
pop
adc
inc
xor
dec
sbb
xor
or
and
or
push
hlt
jbe
test
idivl
pop
in
lcall
inc
inc
xor
dec
sbb
add
aad
mov
in
add
das
cltd
jg
iret
aas
imul
repnz
call
lcall
int3
inc
cmp
inc
jle
fwait
ds
pop
push
test
enter
mov
lcall
mov
push
xor
dec
popa
mov
mov
in
inc
pop
add
mov
adc
xchg
cs
fdivr
out
ljmp
ret
inc
jp
cld
dec
popf
add
jge
data16
jle
clc
sub
mov
repz
dec
inc
or
leave
pop
popf
stc
add
add
mov
sub
and
outsb
jl
rorb
fsubrp
inc
cmp
or
in
or
ljmp
pop
mov
push
add
fbstp
cwtl
hlt
pusha
jmp
pop
push
dec
loope
sub
push
scas
je
add
lahf
adc
push
sbb
push
pop
pop
std
into
testb
scas
pop
std
fucomp
adc
pop
imul
sbb
jb
aad
data16
lcall
xor
test
ljmp
rcr
mov
int
push
mov
jae
mov
les
xchg
imul
fdiv
ret
movsl
fdivrl
dec
lock
mov
jno
inc
sbb
push
add
jnp
jno
sub
inc
push
sbb
fisubrs
scas
bound
or
adc
sbb
xor
adc
sbb
adc
push
push
jne
into
aas
sub
out
sbb
sbb
mov
fwait
jge
push
push
pushf
repz
and
xchg
jns
cmp
mov
cmp
fcmovu
popa
into
stos
out
fnstsw
jge
cmpsl
outsl
sbb
test
jg
fwait
int3
adc
adc
rcrb
je
decb
mov
in
dec
mov
cltd
xor
mov
loop
cmp
cmpsb
movsb
leave
xor
and
dec
into
fiadds
add
sbb
mov
sbb
add
adc
mov
daa
je
push
out
out
cli
out
add
and
scas
repnz
adc
cltd
into
or
insb
or
or
clc
fsubrl
pusha
repnz
movsl
orb
pop
scas
or
outsl
aam
imul
mov
aam
pop
mov
add
dec
imul
mov
in
sbb
insb
add
int3
repnz
xchg
inc
cli
push
stos
test
pop
inc
arpl
in
xor
aam
inc
mov
cmpsb
gs
mov
cld
sbb
xor
pop
stc
lret
in
and
ds
mov
int3
in
icebp
cmc
add
ds
push
mov
mov
adc
cmpsb
lds
roll
data16
out
xor
aaa
or
xor
nop
push
imul
jno
mull
mov
adc
cmpsl
popf
and
mov
shlb
mov
xlat
out
lcall
mov
icebp
lret
pop
push
addl
xchg
addl
fimull
aad
jp
nop
outsb
jmp
inc
repnz
icebp
jp
inc
and
outsb
or
neg
repnz
adc
add
or
and
add
mov
jo
daa
ficompl
mov
cmp
std
negb
mov
push
sbb
xchg
mov
mov
and
test
mov
push
ss
adc
fistpl
adc
mov
push
lret
and
lcall
add
push
or
insl
inc
or
adc
mov
ljmp
ret
ljmp
aam
mov
or
mov
xchg
les
add
jge
cmp
xor
lock
cs
sbb
jge
insb
pop
and
inc
fimuls
xor
mov
jae
enter
adc
sub
add
lea
mov
jecxz
leave
fiaddl
testl
int
and
jns
xchg
dec
pop
fidivrs
adc
enter
jle
subb
ljmp
adc
cs
xor
test
and
or
xchg
adc
sti
or
fisttpll
into
lret
fcompp
adc
ficoml
cld
mov
pop
pop
sbb
js
fucomip
popf
out
pushf
mov
sub
aas
aam
xor
scas
push
and
and
adc
rcll
dec
repz
scas
adc
sbb
outsb
fimull
fimuls
add
add
sbb
adc
push
adc
push
jns
add
add
pop
cmc
mov
aas
dec
sbb
movsb
mov
fidivrl
fldenv
xchg
dec
mov
repnz
nop
pop
cmp
xchg
pop
or
mov
sarl
rcl
ja
pop
inc
test
mov
mov
pop
lock
mov
enter
inc
mov
xor
and
and
mov
loopne
fcom
imul
push
shl
inc
popf
lea
ss
jl
mov
jmp
pop
xor
sbb
out
loope
add
pop
jmp
pop
cld
pusha
jle
mov
inc
and
mov
adc
sub
sub
aaa
pushf
dec
mov
stc
adc
es
fwait
scas
test
push
pop
mov
outsl
add
mov
push
popa
pop
sti
sarl
mov
add
rcrb
rorb
into
adc
daa
mov
fisubl
inc
iret
mov
gs
push
lret
rcrb
adc
push
pop
outsb
in
jae
clc
addb
sub
sub
call
pop
sub
pop
lret
sbb
loop
aad
push
pop
mov
cltd
sub
test
mull
jp
jb
mov
xchg
je
divb
cmp
scas
ror
out
or
ret
add
mov
xor
and
xor
push
add
sbb
jne
stc
popf
push
in
pop
std
adc
cmp
jae
xchg
in
sbb
ja
int3
mov
call
lret
movsb
sub
dec
inc
pop
std
xor
lods
es
fisubrs
xchg
jecxz
push
fdivr
lods
cmpl
shlb
sbb
mov
aam
cmp
lret
inc
mov
sbb
es
daa
jmp
jb
fs
pxor
loop
jp
outsb
xor
jge
mov
notl
ret
lds
out
int
ja
ljmp
cltd
push
sahf
jbe
movsb
add
add
cmp
out
nop
jmp
test
into
stc
or
adc
es
xlat
dec
push
and
push
adc
int3
imulb
dec
roll
out
fcoms
jbe
daa
daa
xor
adc
or
cwtl
cmc
jno
xchg
sbb
stc
jge
xchg
cmp
xchg
imul
add
add
lods
or
add
push
jb
aas
or
inc
repnz
jb
mov
push
scas
jae
xor
andl
lcall
cmc
mov
or
js
mov
scas
stos
fisubs
cmp
outsl
stos
dec
lock
push
sub
ret
scas
mov
aam
lret
or
sbb
xor
add
pop
sub
lock
mov
cs
stos
sar
lcall
in
push
test
das
mull
out
pop
xchg
dec
xchg
mov
or
xchg
mov
pushf
and
xlat
pop
and
loop
adc
add
clc
sbb
mov
adc
out
insb
dec
or
jmp
jmp
enter
pextrw
pop
sbb
adc
mov
adc
cmc
enter
push
adc
sbb
fwait
in
push
pop
lcall
sbb
push
or
insl
shl
cmp
lods
mov
iret
fwait
lcall
add
rol
push
or
and
mov
and
data16
ds
jecxz
imulb
mov
sub
aad
fistps
fdivp
das
cmp
popa
lods
add
push
arpl
add
adc
das
push
testl
cwtl
sub
jp
dec
adc
push
mov
jecxz
adc
lcall
pop
pop
scas
add
aad
repz
or
addr16
sar
ret
mov
iret
mov
scas
and
ljmp
jle
outsl
jl
fiadds
dec
mov
stc
adc
aam
das
xchg
out
les
and
xor
cmp
adc
cmc
movl
mov
movsb
inc
popa
outsb
mov
jecxz
pushf
jmp
rcr
sbb
icebp
pop
cmpsb
lret
cld
jbe
nop
xlat
cld
and
nop
movsb
cmpsb
lret
sti
jbe
js
xchg
xor
fstpt
fiaddl
test
lods
out
cmpsl
sahf
jmp
sahf
mov
dec
pop
mov
jg
add
iret
adc
mov
lods
pusha
stc
cs
push
cmpsl
cmc
mov
jl
cmp
xchg
push
lret
hlt
mov
xchg
lock
stc
pop
in
push
inc
pop
rcrl
pop
sbb
jecxz
mov
std
xor
test
xchg
add
out
pop
cmp
inc
add
les
stos
lods
in
adc
and
enter
cmp
xchg
jle
mov
jne
and
pop
inc
push
add
icebp
mov
lock
pop
lret
out
sarb
and
fbstp
xor
fs
sti
jno
mov
adc
xor
jno
int3
add
add
cltd
sbb
mov
repnz
insb
in
pop
aaa
dec
dec
pop
lcall
insb
jecxz
xor
cmp
sbbb
and
jne
ret
mov
dec
cmp
cld
lcall
cmp
dec
sbb
ret
out
and
scas
pop
pop
sbb
adc
subb
cmp
dec
sub
loope
stos
mov
xor
or
jmp
and
and
and
pop
mov
mov
cltd
cmpsl
cmp
cmp
fldcw
and
arpl
and
outsb
shlb
rolb
xor
mov
or
push
das
jl
pop
mov
mov
ds
dec
rcrb
and
cmpsb
lods
jnp
aam
inc
inc
ret
push
add
pushf
mov
add
fmuls
xor
mov
mov
mov
mov
scas
cmp
call
cmc
in
fstps
fidivl
pop
out
xlat
repz
stc
sbbb
jno
xor
lahf
test
adc
mov
aad
roll
test
mov
and
and
popf
mov
lcall
mov
sbb
lds
mov
out
push
pushf
or
xchg
shll
inc
pop
lods
mov
in
cmp
loope
jge
rol
push
outsb
hlt
jno
jb
add
xchg
outsb
enter
daa
mov
ljmp
pop
sbb
ficoms
int
mov
test
out
push
das
push
loopne
out
add
andps
orb
mov
jmp
mov
insl
xchg
aas
lea
fiadds
sbbb
inc
sub
fidivs
push
sbb
xchg
frstor
dec
jne
pusha
xchg
mov
js
mov
mov
inc
or
das
sub
add
or
lea
sbb
imul
cmc
rcrl
pmaddwd
pop
out
or
sbb
adc
and
leave
jp
cwtl
push
pop
addr16
fistl
or
imul
xchg
xchg
lods
pop
or
mov
push
fldcw
mull
xchg
mov
shrl
imul
or
sahf
aas
pop
dec
or
fildll
decb
aad
inc
jmp
cmp
sub
pusha
stos
mov
sbb
stc
mulb
cmp
repnz
jmp
cli
adc
pop
mov
std
pop
or
flds
fmull
add
test
rcll
adc
int3
data16
lea
inc
jne
mov
mov
inc
pop
push
test
sti
jb
xor
cmp
mov
rorb
pop
or
inc
call
pop
or
sbb
or
adc
fsubrl
inc
xchg
cli
push
cmc
in
or
fdivrl
imulb
adc
or
addl
dec
test
mov
fdivrp
stc
jnp
aam
test
ficoml
add
cmp
mov
cmpsb
push
and
mov
ja,pn
idivl
or
insl
mov
xchg
jno
cs
fstps
ss
test
jl
add
popf
inc
scas
sub
push
int3
sbb
mov
lock
in
cld
cld
stc
adc
xor
into
sbb
in
lods
outsb
mov
into
ret
std
sub
jle
mov
int
inc
mov
std
add
jno
insl
and
inc
mov
pushl
mov
push
inc
loopne
ret
imul
push
fwait
inc
icebp
xlat
sbb
jge
sbb
push
and
inc
loop
xchg
jae
shld
add
push
xchg
pusha
rclb
jo
jne
push
xor
push
test
inc
scas
repnz
out
sbb
xchg
out
bndstx
int3
add
push
aam
fildll
and
cmp
adc
add
sbb
xor
sub
test
jecxz
inc
pop
push
popf
xchg
lahf
in
negl
push
xor
stos
cmp
mov
pop
xchg
cmp
jbe
push
daa
pop
mov
dec
mov
cmpsl
add
insb
mov
mov
frstor
jg
mov
cmp
and
iret
fidivrs
push
xchg
mov
jg
pop
xchg
lahf
and
sub
mov
cmp
repnz
jmp
adc
cs
fdivrl
inc
lret
mov
mov
into
add
mov
adc
pop
es
int3
cmp
lods
inc
jmp
mov
cli
inc
mov
sbb
sbb
mov
inc
in
hlt
jl
pop
into
push
sbb
xchg
push
and
sbbl
dec
add
mov
or
sti
mov
or
sbb
cmp
adc
pop
add
sahf
mov
sti
mov
into
cmp
or
dec
and
int3
fucomi
fmulp
sbb
pop
lret
int3
dec
int
mov
add
or
and
cltd
add
arpl
cmp
iret
fisubrs
addl
add
rorl
out
jl
cld
lahf
sub
pop
testb
iret
or
xchg
cmpsb
add
mov
ror
pop
cld
xchg
xlat
stc
lcall
inc
mov
sti
jb
lret
mov
xchg
pop
mov
out
ja
cltd
add
icebp
jnp
stc
adc
xor
dec
fs
pop
xor
fmulp
clc
mov
mov
add
or
rcrb
xorb
mov
mov
add
sub
addb
hlt
push
pop
inc
add
xchg
lahf
not
cmpsb
imul
fwait
cs
mov
lahf
pop
leave
mov
in
adc
fsub
mov
pop
iret
sbb
cmp
and
jle
subb
mov
mov
jl
std
or
or
mov
lds
repz
icebp
sbb
js
mov
hlt
fistpl
lcall
sub
stc
jmp
cmpsb
lret
adc
mov
push
test
fdivrp
test
push
test
mov
call
mov
shlb
cmp
pop
pop
mov
cmp
xchg
pop
and
mov
add
insb
cmp
outsb
cli
jnp
lcall
test
adc
jnp
cs
mov
push
outsl
ret
adc
adc
pushf
xor
lcall
stc
add
add
xlat
inc
popf
out
and
jno
in
hlt
popa
fidivrs
outsb
pop
jge
icebp
and
ret
cmc
test
jmp
fimuls
xor
iret
or
push
dec
push
xor
mov
adc
idivl
int3
mov
iret
jb
lret
adc
pusha
in
les
rcr
lock
in
les
movsb
addr16
ljmp
sbb
mov
test
stc
call
into
mov
push
add
shrl
ficompl
rcr
push
inc
sub
pushf
ds
xlat
fcomp
das
or
pop
rorb
jno
aam
add
mov
shrb
test
ror
push
iret
lds
repnz
or
into
imul
ret
or
jno
js
push
scas
jbe
mov
dec
mov
xchg
xchg
mov
scas
int3
imul
ss
mov
fistpl
scas
sub
push
idivl
not
lock
jmp
cmp
imul
movsb
add
aad
mov
mov
test
push
cltd
stos
add
adc
sbb
outsl
sub
lret
jo
cltd
outsb
pushf
sar
sub
in
aas
movsl
neg
loopne
dec
push
mov
pusha
ds
lahf
lea
testl
jae
xor
dec
pop
push
sbb
scas
into
out
pop
sub
pushf
cmp
mov
mov
mov
fdiv
test
repnz
repz
cs
das
pop
adc
xchg
les
repz
push
pop
inc
xchg
pop
xchg
dec
loop
cmp
scas
out
push
push
aad
or
insb
xchg
or
loop
adc
in
pop
fcoml
iret
add
ret
dec
push
sar
or
pop
pop
add
adc
incb
cmp
pop
sbb
rolb
mov
sarb
ljmp
aam
push
sbb
scas
pop
pushl
outsb
pop
push
xchg
jmp
sbb
outsb
cmp
inc
lret
mov
adc
cs
adcb
rolb
cli
xor
ss
out
in
push
sbb
dec
into
and
je
adc
scas
xchg
sbb
add
mov
das
fadds
mov
lcall
sub
inc
les
push
sahf
or
dec
or
jno
add
aaa
repz
repnz
hlt
inc
sbb
loope
enter
enter
loope
inc
fdivrs
mov
cmp
or
into
dec
cltd
decl
testb
mov
imul
fdivrl
testb
fcmove
push
into
andb
fisttps
xor
and
cmp
adc
out
pop
jo
ret
push
fucom
add
mov
stc
cs
cmpsl
shll
jge
adc
and
inc
lret
imul
cmc
cmpsl
movsb
push
mov
mov
sbb
xchg
mov
sub
fcoml
push
fmull
sarb
lahf
outsl
sub
mov
shll
mov
inc
and
test
xchg
cli
adc
and
push
mov
xchg
xchg
popa
xchg
dec
jns
inc
jne
enter
push
enter
fcmovbe
out
js
jae
in
jmp
adc
cwtl
or
cmp
jecxz
repz
inc
fwait
pop
js
mov
mov
in
cs
inc
jmp
rcrb
orb
mov
push
dec
pusha
fyl2xp1
add
xchg
xor
cmp
xchg
call
test
dec
shrb
or
fnsave
nop
mulb
mov
fildll
push
vandnpd
int
sbb
rol
dec
fs
sbb
mov
jecxz
call
in
in
std
mov
push
fsubrp
jo
mov
sub
pop
scas
inc
pushf
push
test
pop
int3
pop
xor
inc
inc
push
das
sbb
push
icebp
aas
inc
int
std
lea
xchg
add
sbb
sub
insb
in
cmpsl
int3
adc
mov
ret
push
sti
out
cmp
add
mov
sbb
outsl
cmp
fsubrl
cmp
xor
cmp
mov
xor
ljmp
arpl
aad
jns
jp
and
dec
lahf
fwait
sahf
cld
fidivs
out
jns
pop
xchg
mov
cltd
pop
sbb
mov
out
js
test
pop
inc
cwtl
scas
sub
sbb
andb
cmp
xchg
ljmp
or
mov
mov
cli
into
scas
pop
mov
push
jmp
mov
jo
mov
pop
jnp
and
nop
dec
mov
mov
sub
les
or
push
or
adc
jle
sub
sbb
int3
jb
or
ds
mov
cltd
add
nop
js
repz
nop
fs
cltd
test
mov
movsb
and
cmp
lds
and
jbe
or
sarb
in
daa
sub
or
in
shrl
rcll
push
sbb
mov
adc
push
jmp
or
jno
incl
das
or
aam
out
adc
pop
adc
push
or
or
das
pop
hlt
aam
cmp
repnz
lds
xor
outsb
in
mov
das
in
hlt
inc
mov
mov
adc
lock
pop
add
pop
cs
xchg
jb
stos
sahf
ret
in
f2xm1
pop
test
inc
int
stc
jecxz
dec
repz
add
loop
sub
xor
sbb
cmc
add
xor
mov
shlb
mov
data16
push
sub
jo
mov
fcompl
mov
fildl
scas
jle
mov
sahf
xchg
or
nop
add
enter
hlt
jge
mov
sar
cli
jo
ret
pop
clc
lahf
mov
aam
loopne
ret
roll
xchg
xchg
inc
or
sbb
push
call
sbb
adc
fucomp
lock
insl
sub
xchg
jns
push
fwait
mov
sbb
mov
mov
add
fwait
pop
stc
pop
in
mov
push
clc
pop
mov
jns
icebp
mov
mov
mov
in
sub
pop
fldt
mov
mov
notl
mov
out
xchg
hlt
pop
mov
hlt
sbb
popa
popa
pop
xor
mov
mov
and
loope
xchg
cltd
push
mov
adc
fidivl
dec
push
jo
mov
call
stos
cmp
sahf
out
and
cmp
shlb
testl
sbb
test
push
cltd
arpl
xor
notl
or
lock
and
scas
adc
rorb
sbb
das
pop
mov
loop
ljmp
mov
inc
clc
call
sbb
push
iret
ljmp
es
cwtl
mov
sub
loope
adc
dec
cli
mov
push
add
fistpll
mov
out
jbe
or
stc
dec
inc
jg
adc
enter
lds
test
in
or
adc
mov
sahf
dec
mov
mov
mov
rcrl
dec
aaa
das
aas
fs
outsb
stc
shl
sti
and
add
adc
pop
cwtl
xor
pop
pop
sub
out
jmp
sbb
dec
fmul
call
mov
hlt
pop
in
cmp
jp
cltd
out
filds
inc
in
cmp
dec
fdivrl
repnz
jp
jg
shll
mov
dec
lcall
xor
jmp
xchg
loop
xorb
add
out
ss
adc
scas
adc
mov
mov
jmp
xchg
push
push
xchg
hlt
pop
pop
or
int3
mov
xor
push
adc
dec
pop
lcall
xor
subb
xor
pop
adc
adc
negl
icebp
push
test
fstpl
add
adc
pop
push
inc
in
sub
int3
xor
addr16
out
xor
xchg
shrl
loop
nop
mov
mov
push
jecxz
add
adc
out
mov
sbb
in
ss
fildll
fdivrl
sbb
add
xchg
pop
or
out
push
add
ds
sub
aad
out
and
pop
add
cmc
xchg
rclb
ficomps
ret
xor
pop
adc
scas
pop
mov
sub
ror
cltd
in
inc
popa
jbe
and
cld
lods
jg
lret
repz
sarl
mov
cli
aas
adc
push
movsl
cmp
out
sub
sub
add
cmc
and
aas
fwait
mov
pop
xorb
push
loope
jmp
cmp
daa
cmp
cmc
xor
or
lret
iret
jnp
and
in
push
mov
call
clc
inc
cmp
arpl
scas
mov
ret
and
aam
or
std
call
and
mov
cld
mov
xor
fyl2xp1
add
std
les
cli
out
mov
dec
cmc
sbb
sbbb
cmp
scas
adc
xor
lahf
adc
mov
or
sub
ret
sbb
inc
mov
push
sbb
pop
faddp
int3
add
out
std
into
cwtl
mov
pop
in
ficompl
es
jmp
mov
cmp
adc
lret
xchg
xchg
xor
cmpsl
addb
sar
ficoml
dec
icebp
jb
inc
cli
dec
insb
movb
adc
ret
xchg
sub
push
daa
pop
xor
call
ret
test
cli
das
sub
sub
stos
rorb
pop
mov
jmp
inc
stos
scas
subb
arpl
and
fisubrl
xchg
xlat
inc
fisttps
ja
cmc
jge
sahf
in
pop
aad
sbb
xlat
pop
stos
mov
inc
xlat
loope
fucom
adc
push
add
lret
push
orb
xchg
pop
lock
dec
inc
jnp
ss
sub
jnp
or
pop
es
outsl
int
shlb
aam
pop
jno
mov
adc
das
push
aam
and
jg
rclb
xlat
bnd
xchg
lcall
mov
mov
jo
xlat
push
nop
jl
test
insb
testb
shlb
fildll
xor
add
pop
xlat
sbb
aad
push
int
leave
inc
push
push
xchg
in
add
aam
popf
adc
out
std
add
jp
xchg
loopne
data16
pop
jmp
iret
repnz
jns
jbe
pop
stc
jl
sti
mul
aad
imul
cmpsb
call
inc
xchg
fdivrs
add
push
mov
sbb
loope
or
xchg
mov
arpl
cmp
cmp
sarb
pop
dec
pop
inc
or
dec
or
test
mov
xchg
jp
imul
iret
mov
fmulp
gs
jge
scas
adc
inc
push
xor
clc
cltd
scas
push
fadds
fcomp
fdivs
icebp
mov
aam
pop
push
jmp
and
mov
subb
lret
ljmp
pop
fidivs
cwtl
xlat
push
sbb
or
xchg
mull
ds
mov
push
cwtl
cld
push
and
and
dec
cli
ljmp
lods
adc
pop
sbb
aas
dec
fsubl
push
dec
inc
pop
ja
or
mov
sub
mov
add
int
jmp
pop
decl
aaa
pop
add
or
aaa
dec
mov
cmp
mov
out
insl
add
std
into
adc
in
in
sbb
adc
and
jb
push
xchg
fwait
addr16
mov
cwtl
add
jg
repz
jge
test
in
int
fisttpl
mov
adc
stc
sbb
xlat
xchg
cli
pop
aam
fistpll
jle
iret
outsl
inc
cmp
out
or
or
or
ja
or
out
or
in
cmp
in
sbb
mov
dec
ja
pop
xor
cs
insl
into
popf
xor
xor
jnp
adc
adc
and
add
sbb
xchg
cmc
or
adcb
hlt
and
arpl
fsubrp
or
mov
inc
mov
lds
out
es
das
inc
sub
jl
ljmp
repz
cmp
sub
icebp
pop
fsubp
adc
jmp
out
icebp
repz
ljmp
cmp
lods
out
push
in
push
mov
inc
rcrl
push
or
fld
push
jmp
or
loope
cmp
lds
mov
lcall
xor
cli
out
je
ret
mov
jge
scas
pop
adc
dec
sbb
mov
repnz
dec
pusha
or
push
repz
mov
in
sbb
dec
pop
outsb
push
test
add
inc
repz
mov
std
into
cmp
ret
xor
mov
aam
xor
repz
sbb
ljmp
cmpsl
pop
repz
addr16
cltd
or
lods
outsb
adc
out
jp
xchg
add
mov
out
push
in
lret
sbb
loopne
sub
mov
lea
rcrb
adc
mov
shll
mov
xchg
jp
int3
and
imul
test
sarb
in
mov
pop
xchg
pop
pop
js
jno
out
outsl
in
lret
cmp
shll
shrl
xchg
cld
stos
mov
push
adc
add
scas
mov
or
pop
dec
xor
inc
inc
into
mov
xchg
jle
jmp
addr16
std
pop
add
cld
add
push
icebp
pop
adc
repnz
sbb
or
pop
cs
negl
xchg
and
xor
mov
or
xchg
xchg
shrb
hlt
daa
not
and
sub
inc
repnz
repnz
cmp
shlb
test
fisubrl
stos
jmp
pop
stos
push
xor
fs
jp
and
insb
adc
mov
xchg
jle
mov
jge
jl
out
xor
int3
or
cs
and
test
and
ljmp
mov
adc
nop
shr
ret
imul
sbb
mov
popf
out
cli
cld
lea
xlat
dec
xchg
mov
cmp
push
jbe
cli
dec
fists
outsb
adc
test
mov
out
add
jne
fnsave
or
shl
lock
insl
cltd
fisubl
jns
outsb
and
loopne
call
lock
dec
and
mov
dec
mov
xchg
std
rcrb
jo
arpl
push
incl
jb
jne
ficoml
shll
movsl
mov
sub
cmp
sbb
cmp
int
aam
enter
adc
push
mov
sti
insb
fiaddl
dec
add
je
int3
shl
push
lds
mov
mov
pop
jae
or
xchg
fs
stos
adc
push
jg
rolb
mov
sub
mov
repnz
mov
fildll
repnz
movsl
mov
cli
or
mov
dec
push
out
repnz
fcompl
jnp
sti
dec
xor
dec
pop
insb
jbe
rcr
or
jb
arpl
in
cmpsl
scas
add
scas
aam
fwait
insl
outsb
jg
cld
xchg
pushf
or
fnsave
mov
lret
mov
xchg
jns
arpl
leave
or
xor
cli
imul
lcall
sub
fucom
je
or
call
adc
stos
pop
inc
dec
or
out
cmp
dec
shlb
sahf
mov
xor
xor
mov
ficomps
stc
mov
push
fsubr
hlt
xchg
call
pop
dec
push
ja
add
adc
scas
add
in
cmp
mov
sub
add
test
mov
pop
jne
lock
aad
scas
xchg
cli
pop
mov
mov
in
push
mov
popf
sub
je
add
add
clc
cmpl
push
push
sahf
or
sbb
lahf
and
arpl
les
mov
pop
or
fdivrl
cltd
stos
jmp
pop
mov
rolb
xchg
pop
sub
rol
testl
push
out
int
je
daa
popf
pop
mov
loope
pop
add
push
cwtl
add
popa
clc
neg
mov
shr
out
dec
adc
or
cld
test
out
aam
push
push
adc
aas
loope
shr
fiadds
sbb
imul
pop
or
insb
fnstsw
xor
jns
inc
sti
lcall
outsl
cld
int3
cmpsl
mov
hlt
fadds
cmp
and
in
cld
adc
or
repz
mov
stc
mov
lock
xchg
mov
cli
mov
fs
cs
pushf
pop
movsl
and
rcrb
insl
jge
ret
mov
cmc
scas
ljmp
lahf
sbb
ljmp
fs
push
add
mov
pusha
sbb
sbb
aam
inc
enter
das
jg
dec
sbb
add
push
mov
pop
and
mov
outsl
cmp
cli
cmp
xchg
fdivl
insb
std
jns
scas
pop
adc
insl
cmpb
loope
lret
mov
stos
push
into
mov
pop
shrb
addr16
fsubrp
sbb
nop
repnz
add
loopne
popa
jnp
frstor
lret
inc
in
je
daa
scas
call
jb
sbb
out
in
push
repnz
icebp
push
adc
push
mov
xchg
lcall
insl
add
and
mov
imulb
xchg
adc
push
cmp
js
dec
inc
mov
mov
adc
pop
std
pop
jo
scas
imul
in
leave
mov
mov
or
loop
clc
in
dec
loop
mov
imul
adc
jecxz
insl
mov
les
andl
sbb
gs
add
mul
movsl
mov
and
cltd
sbb
adc
rorl
inc
push
jg
sbb
lock
sub
sbb
idiv
mov
sub
jbe
mov
jecxz
data16
cmp
xor
lcall
jnp
insl
adc
dec
pop
loopne
jle
or
test
and
lcall
mov
lret
negl
lret
nop
out
mov
test
or
sub
inc
adc
stos
loopne
repnz
clc
jp
aad
push
mov
std
sub
out
xor
popf
cmp
movsb
pushw
xlat
mov
nop
jnp
push
loop
outsl
add
add
pop
add
mulb
inc
push
in
cmpsl
rorl
inc
mov
inc
cmp
rcl
fildl
fcmovbe
lods
in
cld
call
cmp
lock
fnstenv
xchg
pop
add
mov
loopne
jo
adc
and
mov
notb
jecxz
loope
or
jmp
enter
es
popa
es
push
into
out
outsb
sti
adc
jl
mov
or
ret
push
je
fmuls
or
mov
into
add
push
inc
pop
call
fld
movsl
jp
or
xchg
cmpb
ss
cmpsb
sti
jo
sub
arpl
xlat
and
add
mov
ss
ss
lret
mov
cmpsl
xchg
scas
lret
sub
mov
in
lahf
repnz
rclb
xchg
clc
lcall
iret
lods
shl
jmp
scas
in
pop
or
and
lahf
jecxz
pusha
mov
addb
xor
mov
loope
mov
shl
jmp
scas
xchg
icebp
adc
test
cmpsb
das
push
scas
cli
xchg
mov
pop
jb
int3
xchg
repnz
lret
and
icebp
add
mov
mov
jge
and
pop
cmp
insl
pop
xchg
fadds
pop
push
xor
pushl
int
pushf
and
insb
mov
mov
dec
push
cwtl
or
das
repz
adc
sbb
call
or
dec
mov
jg
sbb
call
sahf
aas
cmpsl
ds
mov
xchg
jns
jge
pop
addb
or
mov
fsub
aad
add
jl
pusha
sbbb
loope
icebp
xor
fcoml
lret
xchg
pop
ja
jnp
sub
sahf
out
xchg
pushf
adc
in
jp
icebp
mov
fmull
cmp
inc
int3
aas
sahf
add
xchg
in
jne
xchg
add
push
mov
fsubrs
scas
js
push
ficomps
lods
test
mov
scas
test
xor
sahf
push
jne
xchg
dec
popf
aas
mov
mov
fdivs
xchg
add
mov
mov
jno
cmp
inc
sub
ljmp
repnz
sub
mov
gs
dec
cld
cmpsl
add
outsl
pop
insl
fcomps
bound
pop
lcall
lods
xchg
fsubs
insb
lret
or
sahf
or
lea
rorl
lds
pop
xchg
subb
sahf
xor
pop
div
in
inc
lea
pop
add
in
ljmp
xor
imul
in
pop
call
aam
imul
es
sub
pop
scas
jns
xor
sahf
sub
adc
or
pusha
sub
xchg
ja
rcr
imul
daa
or
jecxz
and
ja
add
ja
rorb
mov
mov
jne
mov
popa
mov
aaa
lcall
int3
je
cmp
or
jb
addr16
xchg
add
gs
bound
adc
popf
pop
adc
pop
dec
pop
ljmp
or
sbb
sbb
push
sub
adc
in
add
sbb
push
push
or
cmc
xchg
cli
roll
sbb
lret
sar
pop
test
lea
arpl
ss
enter
add
pop
pushl
popa
scas
pop
in
dec
or
pop
mov
inc
pop
xchg
insl
pop
pop
or
fs
mov
icebp
jg
xor
mov
aaa
add
add
sub
xchg
scas
mov
fwait
out
testb
aad
fmuls
jb
stos
testb
jb
movsl
negb
lret
jb
or
push
xchg
xchg
ficomps
ljmp
testb
dec
lea
or
xchg
repnz
mov
pop
xor
push
or
fistl
or
xchg
lods
or
pop
mov
jge
out
or
jp
nop
mov
cmc
mov
sbb
inc
cmp
and
sbb
popf
sbb
push
add
enter
mov
inc
into
dec
iret
add
rcrl
sbb
or
into
pop
movsl
lahf
xchg
adc
jge
data16
sub
jbe
jecxz
outsl
mov
incb
fisubrs
sbb
aam
xchg
jmp
jns
popf
in
inc
adc
and
in
and
push
test
rclb
and
xchg
or
jecxz
imul
or
insb
pusha
test
in
pop
int3
and
in
and
out
add
into
les
inc
sahf
and
into
or
int
repz
add
xchg
in
icebp
or
add
adc
js
mov
xchg
or
pop
mov
add
and
push
add
fisubs
shlb
push
in
add
lcall
inc
pop
add
data16
jns
fwait
sbbl
test
into
push
sbb
cmp
mov
fiaddl
cwtl
lea
divl
loop
sbb
popa
call
lock
mov
xchg
lea
mov
mov
add
leave
fdiv
outsb
arpl
adc
mov
clc
add
in
jmp
clc
mov
lods
filds
cmc
cmp
divb
fs
outsl
repnz
repnz
adc
imul
andl
sub
lds
mov
jge
sbb
or
repnz
out
push
add
mov
test
sbb
icebp
loopne
or
cmp
rorb
das
dec
push
ds
stos
cmpsb
jne
pop
ja
cmpsl
push
lahf
jle
clc
push
outsb
and
lahf
xchg
cmp
add
jp
nop
cmp
shll
xor
cmpsb
daa
movsb
ds
dec
mov
cwtl
sar
lahf
out
cmpb
xlat
add
jle
mov
je
adc
lahf
add
inc
js
jl
sub
outsl
cmp
mov
test
sbb
mov
cmp
jno
push
add
jmp
pop
add
scas
mov
icebp
divb
add
cld
scas
sbb
mov
jg
jmp
sbb
sahf
cs
stc
cmp
or
sbb
sarb
pop
insb
mov
in
xor
imul
dec
int3
imul
test
stc
add
data16
ret
pop
stos
lret
incl
xchg
pop
sbb
adc
adc
fcoml
lock
lret
ror
popf
mov
and
sbb
int3
adc
clc
mov
lcall
sti
or
into
cmp
fidivrl
jns
lock
cmpsb
push
dec
xchg
adc
scas
push
mov
adc
jne
fwait
xchg
inc
shr
pop
cld
mov
jmp
bnd
popf
dec
mov
jecxz
bound
mov
inc
xor
stc
or
scas
adc
and
adc
movsb
add
jp
fcoms
and
xchg
mov
jnp
jns
sub
cld
pop
lcall
sbb
or
jnp
xchg
mov
mov
xor
mov
fadds
addr16
sub
les
loop
or
pop
add
cwtl
movsl
test
bound
enter
repz
jp
sub
in
sahf
pop
jl
mov
outsl
aam
int3
push
into
push
mov
fucomp
xor
sub
pop
push
aam
popf
mov
repz
cmpsb
mov
inc
lea
adc
and
rcrl
lcall
pop
cmpsb
adc
push
js
in
jecxz
repz
inc
adc
adc
fidivs
adc
jmp
adc
mov
ljmp
cmp
fcomps
mov
push
lds
ds
movsl
repnz
mov
cmc
and
mov
xor
mov
push
pop
add
pop
dec
xchg
cmp
push
sbb
xor
rclb
fsubrs
adc
cld
add
xor
push
add
pusha
addr16
cmp
xchg
xor
aad
mov
loop
dec
sbb
inc
jle
testl
test
add
loopne
mov
cld
incb
fadd
sbb
push
call
jmp
stc
imul
or
or
sbb
sub
inc
push
pop
jbe
or
add
repz
sub
push
stc
rorl
out
sbb
add
dec
stos
sbb
push
jnp
push
sub
popa
cmp
out
cwtl
adc
ret
dec
adc
into
fistpl
sbb
mov
xor
xor
jg
into
stc
in
lods
jns
dec
push
pop
orb
sahf
iret
ljmp
cltd
idivl
imul
shlb
cmc
mov
shll
movsl
ja
rcrl
shrl
fldenv
add
dec
mov
inc
je
sub
lret
jp
xchg
dec
mov
popf
mov
cmp
mov
push
movsl
mov
loopne
loope
mov
push
out
das
lods
xor
lret
sti
add
mov
dec
fstpt
mov
xchg
mulb
adc
add
or
and
mov
xchg
push
mov
call
jne
in
push
movl
mov
lret
jb
shl
mov
cli
inc
insb
out
std
mov
push
mov
scas
xchg
or
insb
clc
sub
jo
addr16
pop
or
fildll
std
cld
fisttpl
cli
ss
and
jmp
mov
std
in
in
mov
mov
clc
dec
jmp
push
fucomp
jns
jg
push
add
fadd
test
or
int3
mov
push
test
pop
mov
mov
or
test
inc
aaa
inc
imull
insl
repnz
fidivrl
mov
sbb
mov
inc
movsb
mov
adc
aam
add
sbb
or
mov
ss
dec
leave
cmp
jl
cld
clc
pop
mov
aas
xlat
sbb
int3
popa
jge
outsb
out
popa
jge
and
pop
xor
pop
jle
xor
mov
out
dec
ds
cmpsb
cmp
pop
push
addr16
cmpsb
movl
push
inc
sarb
ret
ror
adc
sbb
mov
jae
fcomps
dec
inc
push
in
test
subl
or
jmp
aad
cmc
push
out
mov
lods
mov
jns
cmp
push
stos
div
or
movsl
mov
or
jne
push
loopne
shrb
lods
jnp
or
shrl
and
jecxz
add
adc
sub
dec
icebp
out
push
pop
es
pop
test
push
sub
adc
xchg
and
lcall
shl
push
and
sbb
sbb
mov
push
mov
stos
or
push
xor
loop
in
cmpsl
int
sti
cmp
clc
test
cmpsl
fnstcw
in
cmpsl
loope
div
push
cld
ss
or
jmp
dec
inc
jle
mov
rcrw
pop
xchg
pop
sbb
sarb
lcall
sub
sbb
push
sub
and
jns
fstps
adcl
ret
repz
mov
call
adc
cltd
loopne
hlt
loope
ficoml
sub
cmp
pop
ret
lcall
pushf
mov
cli
pop
add
mov
jbe
hlt
sub
out
fidivs
or
mov
add
or
xorl
or
aam
jbe
push
ljmp
adc
adc
mov
jb
imulb
adc
out
out
insl
call
loopne
xor
cmpsb
mov
shrl
mov
xor
into
cmp
call
std
jns
or
mov
adc
lret
pop
out
fsts
sub
out
pusha
sub
dec
and
or
xchg
out
jg
stos
mov
lods
out
dec
jnp
test
sbb
pop
data16
xor
in
out
cltd
xor
mov
xchg
pop
cmp
imul
loop
jmp
cmp
fidivl
mov
mov
int3
and
inc
mov
mov
std
jmp
xchg
test
loope
scas
ret
xlat
sbb
shrl
pop
out
lret
jle
lods
enter
push
cltd
sub
or
stos
icebp
loope
lods
add
mov
jmp
jno
jl
xchg
xchg
aaa
push
pop
data16
jnp
jmp
mov
pusha
movsl
shrb
xchg
sarl
push
add
pop
jp
daa
lcall
hlt
or
adc
mov
std
aas
fcoml
sub
incl
xchg
fsubrl
in
insb
mov
jns
jne
fwait
lret
testb
or
jns
in
or
lret
push
fwait
and
pop
jg
xor
sub
cli
lahf
arpl
fisubrs
ljmp
pop
jno
das
jmp
les
aaa
popa
lods
or
ficoml
dec
bnd
es
inc
pop
or
dec
in
std
mov
rcrb
inc
mov
hlt
lret
adc
fstpl
adc
sub
orl
iret
or
enter
icebp
fwait
std
pop
pop
jmp
or
dec
and
cmpsl
cld
cmp
push
out
dec
ficoml
xor
sub
pop
adc
insl
sbb
add
shll
inc
mov
std
inc
cltd
bound
leave
adc
adc
fcoms
xchg
mov
popf
fisubrl
add
in
out
mov
fidivrl
pushf
icebp
lea
adc
cltd
jecxz
mov
cld
sub
and
push
jle
arpl
in
push
mov
ljmp
jmp
shl
fimull
cwtl
daa
jge
jnp
xchg
xor
lock
sahf
out
sti
mov
pop
fidivrl
xorb
lret
mov
adc
leave
mov
call
aam
fcomps
int3
inc
and
sahf
rorl
cltd
dec
pop
mov
je
stc
and
xor
adc
add
dec
and
xor
pop
push
cmp
xor
cmpb
sub
cmp
inc
mov
mov
mov
xchg
lret
xor
xchg
jle
pop
outsb
mov
in
pop
jbe
push
es
scas
xor
add
and
jl
iret
out
xchg
inc
cli
scas
add
push
int3
leave
jmp
data16
jbe
les
xchg
test
fidivl
das
add
int3
loope
out
into
testb
cld
adc
lods
icebp
and
insb
pushl
sub
loop
nop
sbb
jmp
data16
jbe
mov
cld
xchg
or
fidivl
das
add
int3
pushf
jmp
data16
testb
cld
adc
cmpsl
jmp
xchg
mov
sub
push
sub
dec
pop
xchg
sbb
in
xchg
dec
ficoml
das
add
mov
lret
jmp
data16
lret
nop
sbb
in
add
dec
ficoml
jmp
test
jecxz
dec
mov
jge
in
pop
fxch
cmpsw
lcall
inc
in
rclb
stos
xchg
mov
mov
movb
out
pop
ret
cmpsl
lcall
inc
in
rclb
stos
mov
es
mov
scas
jge
in
pop
stos
into
cmpsw
lcall
inc
in
rclb
stos
xchg
mov
mov
movb
out
pop
ror
out
lcall
inc
in
rclb
mov
fdivrp
mov
scas
jge
in
pop
dec
into
cmpsw
lcall
inc
in
rclb
stos
xchg
mov
scas
add
push
sub
pop
movsb
into
out
lcall
inc
in
rclb
popf
mov
es
mov
scas
jge
in
pop
dec
into
cmpsw
lcall
inc
in
rclb
stos
xchg
mov
movsl
add
push
sub
pop
out
into
out
lcall
inc
in
rclb
mov
fdivrp
mov
scas
jge
in
pop
mov
xorb
add
mov
xchg
mov
fiadds
movb
out
pop
call
jg
loope
pop
call
mov
inc
rcl
mov
hlt
lahf
in
sub
inc
scas
shr
dec
insb
rcll
icebp
xchg
add
adc
pop
sbb
pop
aas
cmp
pop
pop
pop
repnz
mov
jg
out
aaa
out
inc
out
inc
out
push
out
push
out
gs
addr16
jne
ja
test
xchg
xchg
out
xchg
out
movsl
out
cmpsl
out
mov
mov
out
fldz
xlat
out
jmp
out
imul
or
or
sbb
sbb
cmpsb
xor
popf
shrl
out
lods
icebp
lods
add
adc
pop
loope
loope
loope
loope
loope
loope
loop
adc
outsl
mov
jg
jge
lahf
mov
xor
and
cs
xchg
add
jbe
xchg
inc
mov
inc
test
mulb
and
stos
data16
jbe
and
bound
bound
inc
bound
lock
adc
aad
add
sbb
daa
and
ret
sahf
jae
mov
lea
xchg
xchg
aam
scas
or
in
mov
or
jl
cmpsl
sbb
mov
cmp
inc
jg
jmp
dec
push
xchg
sbb
sbb
ja
push
iret
pop
and
sbb
xchg
push
xorb
xchg
add
and
cmp
inc
mov
jg
ret
es
shll
push
cmpsl
adc
or
mov
je
or
or
movsl
or
xchg
mov
and
mov
lea
cli
adcb
jae
icebp
std
sbb
mov
jl
fidivrl
dec
add
decb
outsl
jo
xchg
loop
and
mov
call
jg
rcrb
lods
mov
mov
sub
cmp
mov
mov
hlt
aad
int
mov
adc
pop
sub
call
adc
xor
outsl
jp
nop
xorb
jo
or
jno
outsb
xor
xor
or
mov
imul
repnz
adc
pusha
mov
ljmp
sahf
lock
hlt
xchg
aam
pop
xchg
cli
ss
inc
mov
into
in
data16
jbe
mov
fnsave
test
sbb
cld
adc
xchg
cmp
xchg
cs
pusha
int
out
jge
xchg
cs
push
dec
out
loope
xchg
cs
pusha
int
out
jge
xchg
cs
jge
sahf
xchg
dec
mov
pusha
int
out
jge
xchg
cs
pusha
int
out
and
in
sbb
sbb
jge
xchg
cs
pusha
int
out
jge
xchg
and
sbb
jge
xchg
cs
pusha
int
out
jge
xchg
cs
out
add
and
sbb
jge
xchg
cs
jge
sahf
xchg
dec
mov
pusha
int
out
jge
xchg
cs
cmpsb
pop
mov
scas
repz
pop
fmuls
sbb
jle
mov
ljmp
fmuls
push
cltd
mov
fmull
inc
ret
add
in
rcrb
mov
outsb
stos
xchg
jle
stos
add
dec
sub
dec
xchg
sbb
in
out
jecxz
iret
cli
mov
scas
testl
xchg
push
sub
ds
jmp
data16
pop
xlat
pop
outsb
js
sbb
in
mov
dec
ficompl
das
add
mov
data16
fisubs
dec
out
cmpsl
lcall
movsl
lcall
cs
inc
jb
mov
cld
pop
or
fidivrl
movsl
lcall
movsb
jmp
data16
mov
nop
sbb
in
out
jecxz
dec
jg
dec
push
scas
dec
cmpsl
lcall
cli
sbb
in
outsb
jecxz
fidivrl
les
sahf
int3
mov
mov
nop
sbb
in
out
jecxz
call
jg
dec
push
shlb
cs
mov
cmpsl
add
in
rcrb
mov
outsb
stos
xchg
jle
int
mov
sub
sahf
pop
int3
into
scas
cmpsl
lcall
mov
add
push
sub
cli
pop
fxch
pop
inc
lods
in
push
and
xchg
cmp
mov
dec
jecxz
rcrl
xchg
outsb
stos
xchg
jle
cmp
sahf
int3
pushf
jmp
data16
mov
nop
sbb
in
out
jecxz
dec
jg
dec
push
aam
push
cs
pop
mov
dec
cmpsl
lcall
inc
in
sarb
mov
mov
add
pop
ret
cmpsl
lcall
sbb
testl
push
pop
cs
pop
jmp
sbbb
add
in
sarb
mov
mov
push
sub
mov
add
fists
add
pop
pop
sbb
aas
pop
cmp
pop
pop
pop
outsl
repnz
mov
jge
repnz
sub
inc
dec
sbb
jne
ja
test
xchg
xchg
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
insb
xor
inc
mov
add
pop
dec
sbb
dec
aas
dec
cmp
dec
pop
dec
pop
dec
outsl
dec
insl
dec
jg
jge
dec
lea
dec
popf
dec
scas
dec
lods
dec
mov
dec
rorl
scas
push
outsl
sub
gs
xor
pop
mov
dec
out
dec
cli
inc
or
or
or
inc
or
push
or
or
ja
dec
xchg
jl
and
and
stos
adc
mov
pushl
mov
mov
loop
lret
daa
fwait
sbb
aam
sbb
pusha
lds
or
aad
daa
mov
cmp
adc
add
ret
into
xchg
out
jns
lahf
mov
pop
je
mov
icebp
movsb
stos
ljmp
xorb
shlb
xchg
dec
popf
push
mov
addr16
inc
iret
aam
cli
cmp
mov
nop
js
and
ja
pop
pop
sbb
push
xor
or
nop
nop
je
mov
add
push
cli
clc
push
cli
sbb
dec
jne
push
aaa
popf
jp
fwait
jbe
mov
mov
cwtl
and
aam
fs
and
scas
push
add
xchg
movsl
test
test
jl
clc
out
xchg
pop
mov
add
iret
ja
enter
cli
and
push
idiv
data16
fisubrl
sub
loopne
xor
mov
int3
pop
adc
lret
aaa
and
push
pop
sbb
add
outsb
repnz
mov
cld
mov
pop
push
pop
je
aas
lret
test
negb
aam
sub
xor
out
pop
mov
mov
cs
cmp
mov
loop
xor
out
add
cmc
mov
inc
or
or
mov
out
out
cli
fimull
jbe
out
fisubl
sbb
jge
xchg
cs
pusha
int
out
jge
xchg
cs
out
add
and
sbb
jge
xchg
cs
jge
sahf
xchg
dec
mov
pusha
int
out
jge
xchg
cs
pusha
int
out
and
in
sbb
sbb
jge
xchg
cs
pusha
int
out
jge
xchg
and
sbb
jge
xchg
cs
pusha
int
out
jge
xchg
cs
out
add
and
sbb
jge
xchg
cs
jge
sahf
xchg
dec
mov
pusha
int
out
jl
push
mov
in
cld
or
push
pusha
jmp
mov
jmp
push
adc
pop
call
add
push
jnp
push
push
cltd
repz
xchg
mov
sbb
mov
filds
test
mov
sti
mov
aas
jbe
adcb
and
pop
xor
pop
fimuls
andb
adc
cmpsb
das
mov
stos
mov
dec
cli
xlat
jns
shll
sub
fmulp
icebp
adc
cli
ja
scas
and
aas
pop
mov
std
jae
cmp
scas
pop
pushf
inc
outsb
pop
aaa
insl
sbb
inc
ljmp
rorb
scas
mov
jnp
mov
in
lea
test
fisttpll
add
dec
jae
lahf
adc
hlt
xor
stc
adc
jge
bnd
mov
fcompl
and
jle
imul
add
je
add
daa
popf
add
rcr
mov
add
add
cli
add
push
in
mov
jnp
add
sarb
dec
jge
sbb
or
adc
xchg
into
xor
xrelease
loope
aad
loopne
add
in
adc
aas
arpl
add
icebp
pusha
and
push
in
push
in
and
cwtl
sbb
cwtl
jecxz
shrb
xor
stos
push
data16
insl
sbb
ret
xchg
js
lret
jle
pop
lret
lods
outsb
dec
stos
dec
xor
or
ljmp
decl
mov
imulb
fs
inc
mov
es
and
cmp
and
ret
adc
inc
cld
inc
mov
fdivs
scas
lret
jge
dec
add
test
sub
das
inc
ret
dec
push
call
sarl
adc
rorb
out
pop
adc
xchg
or
cmpb
in
mov
cmp
xchg
xor
ja
cmpsb
jo
push
shll
mov
ret
xchg
fisubs
ret
jle
out
sarl
jno
mov
addl
aam
inc
jnp
mov
xor
cmp
or
or
inc
cld
stc
pop
mov
dec
inc
jae
fwait
and
mov
xchg
adc
xchg
pop
sub
cmp
sub
out
push
cwtl
imul
lods
mov
cltd
insl
inc
xorb
repz
icebp
pop
stc
sbb
ficompl
inc
pop
mul
sbb
xchg
js
jnp
insl
xchg
adc
rcrb
int
jp
adcl
add
ds
inc
fildl
addl
sbb
xchg
inc
pop
test
dec
rolb
or
pop
add
jne
scas
rcl
sbb
pop
add
insb
int
jae
add
cmp
ja
cmc
stc
cs
or
iret
mov
in
lock
cmp
call
jmp
xchg
dec
adc
add
adc
mov
push
add
cmp
je
fcomps
adcb
cmc
repnz
scas
pop
lret
data16
xchg
cld
out
fmull
or
lret
push
add
jl
mov
shrl
sbb
dec
inc
test
mov
stos
leave
ljmp
movsl
inc
icebp
das
add
cld
mov
mov
cmp
ds
mov
out
das
rorl
jmp
jl
jmp
cmp
fwait
inc
pop
enter
pop
cs
adc
jne
je
mov
fdivl
lcall
add
imul
movsb
out
xlat
les
adc
sbb
push
ja
and
out
fiadds
rorb
adc
ds
jno
push
xchg
test
iret
push
push
ljmp
testl
or
sbb
jbe
imul
repz
pop
hlt
jbe
push
xor
loop
sbb
cld
or
xchg
adc
insl
aam
mov
sub
xchg
sbb
or
fists
int3
sbb
mov
and
mov
mov
shrb
js
lock
cmp
add
inc
or
adc
adc
xchg
inc
shlb
mov
push
inc
int3
cmp
ss
ret
dec
jns
insb
push
fmul
push
ja
imull
stos
cmp
ss
cmpsb
int3
fcmove
test
ss
xchg
sbb
ja
mov
cli
adc
pop
stos
inc
push
mov
in
mov
faddl
jo
bound
loopne
loope
outsl
mov
imul
add
popf
adc
cmc
iret
sub
adc
lds
fbld
das
xchg
lret
loopne
negl
mov
loop
xor
ret
push
and
scas
cld
leave
sti
out
out
mov
out
cmp
cmp
adc
push
lcall
push
in
add
or
in
xor
mov
cmp
icebp
repnz
into
incl
jl
push
sbb
add
clc
xor
dec
lds
adc
jmp
xchg
xor
jle
jb
mov
jge
xor
or
mov
sub
cltd
pop
or
rcrb
ss
dec
xlat
and
leave
js
shlb
icebp
fcompl
sbb
aad
shlb
mov
or
aad
sarb
icebp
rcrb
js
jp
cmpsb
mov
nop
dec
mov
push
cld
pop
push
sti
andb
or
repz
cli
in
je
xchg
xchg
xlat
std
or
in
in
daa
push
sar
rcl
jae
xchg
add
subb
pop
cmp
mov
or
insb
cwtl
fwait
outsb
cltd
jg
data16
cwtl
push
notb
cwtl
mov
mov
adc
mov
push
loope
outsb
or
sub
mov
or
pop
ficoml
adc
imul
jb
or
push
fdivl
add
adc
or
pop
mov
jmp
jl
das
push
loopne
int
aad
jne
mov
mov
adc
inc
mov
loope
jmp
in
into
jle
add
testb
adc
adc
xlat
pop
mov
in
lea
lret
fwait
lret
push
mov
sub
cmpsl
test
test
dec
xchg
sbb
mov
aaa
aam
pop
or
pop
and
sti
cmp
xor
movsb
push
pop
add
hlt
lock
xor
mov
jmp
xlat
cli
outsb
lock
mov
cmp
mov
fs
lods
jne
mov
adc
mov
add
cmp
cmp
cmpsb
push
ret
fs
cld
aam
rol
sbb
xor
jl
pop
sbb
cmp
sti
in
push
mov
cld
add
std
imul
add
add
repnz
in
loop
fiadds
sbb
push
and
add
xor
psubq
aam
add
aad
dec
sbb
pop
fwait
ljmp
pop
cld
sahf
insl
mov
ja
jns
xorb
out
scas
not
outsl
fwait
into
jmp
fidivrl
rol
pop
add
or
out
xchg
jmp
xor
enter
or
xchg
push
in
fisubrl
sub
clc
adc
or
inc
add
adc
push
add
adc
adc
pop
adc
mov
cs
cld
adc
add
adc
cwtl
lret
cmpsb
cltd
icebp
subl
int3
imul
in
outsl
data16
xor
fs
jecxz
adc
push
in
inc
enter
je
daa
movsl
dec
lock
stc
repnz
xchg
xchg
je
and
mov
mov
icebp
repz
stos
lea
imul
popf
adc
and
or
in
adc
adc
adc
fimull
add
loope
mov
lods
mov
jns
adc
jle
xchg
out
pop
clc
ss
arpl
xor
mov
inc
ret
mov
gs
insl
or
sub
push
out
aas
sbb
ret
idivb
addl
fiaddl
rclb
icebp
jmp
adc
fcoml
stc
dec
pop
add
pop
cli
in
add
in
in
and
xchg
sub
dec
mov
push
fdiv
ret
sti
movsl
mov
xor
decl
or
adc
or
in
sub
or
pusha
test
stos
adc
into
cwtl
icebp
test
add
xchg
adc
xchg
or
sbb
pop
sbb
aad
sbb
cmp
and
xchg
pop
sbbb
lcall
lds
or
jp
mov
xchg
mov
adc
andb
cltd
dec
sub
icebp
and
xchg
in
xor
fmull
jp
lds
sbb
ljmp
jo
mov
add
or
mov
or
ret
jmp
pop
icebp
or
pop
adc
cmp
imul
add
cmp
adc
repnz
sub
sbb
add
xchg
pop
addb
push
sti
xlat
filds
icebp
mov
icebp
jge
stos
or
xchg
mov
jl
or
xlat
jbe
or
adc
xchg
and
int3
in
jmp
scas
sbb
sub
test
fmuls
jnp
xchg
push
gs
xor
test
clc
pop
ret
test
ret
push
insb
jle
mov
imull
pop
orb
jae
jmp
cmp
mov
sub
sbb
int3
xchg
pop
insb
ret
int3
or
ret
sbb
stos
in
mov
add
rcrl
hlt
sbb
jnp
mov
addl
xchg
lds
lcall
add
sbb
xlat
sbb
into
inc
ljmp
repz
mov
pop
jbe
fcomps
lcall
mov
stos
nop
push
sbb
jns,pt
into
xchg
mov
stos
sub
popf
repnz
add
jbe
mov
lock
mov
ljmp
enter
or
mov
and
inc
sbb
add
lcall
and
xchg
adc
scas
and
jg
cmp
daa
adc
aam
mov
test
movsl
sbb
xchg
iret
icebp
jb
jg
fdivp
int3
jmp
pop
sbb
cmp
ficoms
sub
std
adc
pop
insb
into
mov
fcmovb
mov
xchg
cs
hlt
icebp
imul
cmp
pusha
adc
ljmp
in
add
lods
adc
sbb
inc
test
outsb
adc
mov
and
sbb
add
stos
icebp
lahf
popf
jl
lock
scas
adc
or
dec
test
int3
ds
js
into
adc
int3
sub
add
clc
dec
daa
call
mov
xlat
adc
into
stos
les
adc
test
icebp
orb
icebp
repz
cmpsb
sub
icebp
dec
jae
inc
je
ljmp
fsts
daa
pop
adc
mov
notb
icebp
jbe
jecxz
repz
mov
aam
jmp
mov
pop
push
lret
ljmp
sti
rorl
adc
dec
mov
dec
pop
out
sub
inc
pusha
cmc
out
mov
rorb
mov
jne
lea
ja
lods
and
pop
fcompp
mov
mov
in
adc
or
lods
ljmp
pop
gs
xlat
outsl
push
ffree
add
push
or
or
out
arpl
mov
or
cs
mov
test
inc
adc
ljmp
and
loopne
add
ds
sbb
out
mov
mov
and
cmp
testl
adc
into
adc
mov
aam
dec
sbb
roll
push
push
insb
or
leave
push
test
out
or
loop
mov
xchg
stc
mov
jnp
pop
call
int3
loopne
mov
icebp
mull
mov
mov
lcall
sub
cmp
pushf
int3
mov
cltd
inc
popa
sub
jl
xor
jp
jl
mov
mov
or
jo
sub
mov
add
pop
jle
add
or
sbb
shrb
out
mov
mov
mov
rcll
xchg
dec
xor
out
daa
xor
dec
gs
popa
fcoml
dec
and
sti
shr
scas
sbb
hlt
jne
add
outsb
push
mov
fildl
jmp
push
mov
push
dec
scas
xchg
adcb
add
push
ret
test
push
adc
nop
jecxz
inc
ds
push
div
ror
popf
sbb
mov
popf
lret
clc
in
inc
mov
lret
rcrl
imul
mov
mov
and
bnd
jge
adc
inc
in
xor
add
out
push
mov
sti
add
mov
pop
jnp
xchg
adc
xor
or
push
pop
lcall
nop
lret
jmp
fcoms
dec
push
faddl
std
adc
in
aaa
ret
adcb
pop
adc
sbb
adc
or
mov
jmp
cltd
xorb
in
les
xchg
push
inc
dec
es
fcoms
clc
xchg
lea
fdivrl
lods
inc
mov
adc
mov
mov
dec
jg
adc
imul
adc
mov
add
ja
lods
inc
cmpsl
cmp
divb
inc
inc
cmc
mov
or
mov
add
inc
loope
jne
adc
xchg
cmpsb
dec
inc
mov
cmp
mov
xor
and
add
int3
push
movsl
cltd
aad
divb
cmp
mov
test
call
popf
movsb
mov
mov
aam
add
jns
mov
dec
outsb
push
ficoms
cmpl
cmp
jo
ret
mov
int
in
movb
ljmp
lea
push
add
jbe
test
add
into
lret
enter
paddq
imull
mov
jo
jmp
es
pop
pop
xchg
cwtl
mov
and
inc
loop
out
add
das
push
add
cwtl
cmp
xor
mov
ds
fcoml
in
pop
fcoml
adc
shl
adc
jns
jge
rcrb
ljmp
or
push
adc
repz
notl
push
sbb
add
or
mov
jge
lcall
add
sbb
mov
or
cltd
pushl
push
inc
js
clc
int
aaa
cld
or
sbb
nop
xor
and
ficoml
scas
adc
mov
ja
mov
scas
out
or
mov
mov
inc
jp
push
clc
adc
fimull
pop
cld
pop
cmc
aaa
jl
dec
cmc
in
orb
or
sub
dec
push
imul
negb
fisubs
inc
or
inc
add
ja
imul
mov
std
cli
xchg
imulb
add
xor
dec
xchg
xchg
movsl
inc
push
or
call
fmuls
into
into
sbb
outsb
lea
call
shll
mov
sbb
call
mov
rcrl
rcrl
subl
push
xabort
push
call
stc
daa
in
push
add
mov
mov
aam
scas
adc
and
aad
add
or
cltd
cmc
sbb
push
mov
mov
xlat
pushl
icebp
cli
loop
and
push
aas
jns
stos
pusha
sbb
cmp
cmpsb
ljmp
jb
inc
clc
add
sbb
add
stos
stc
hlt
jmp
inc
xchg
sar
sti
dec
sbb
mov
sbb
lret
pop
movsb
cltd
xchg
jae
and
outsb
and
negb
scas
jge
jmp
mov
jmp
push
lds
or
mov
push
enter
dec
sub
adc
or
rclb
out
push
push
xchg
fxch
lahf
xchg
adc
pushf
fsubr
xor
pop
add
cli
cltd
shlb
push
dec
cli
scas
repnz
fists
jmp
dec
jns
push
xor
lea
icebp
out
cmp
push
dec
hlt
adc
jnp
in
jl
lret
dec
adcb
fmull
add
imul
xchg
dec
add
pop
pop
enter
adc
pop
push
adc
rcrb
cmpsl
xchg
idiv
cmp
cmp
sub
jp
jo
pop
add
rcll
or
add
push
xchg
push
push
pop
pop
adc
adc
push
call
inc
sbb
testb
lahf
loopne
ds
test
cmp
adc
scas
js
mov
sub
nop
xchg
scas
adc
insl
int3
das
adc
stos
or
sbb
fwait
test
in
mov
cmp
fs
nop
rol
jae
pop
repnz
xchg
jg
pop
lcall
dec
pop
pop
adc
movsb
and
ds
or
sbb
inc
loope
inc
je
pushf
sbb
iret
adc
stos
xchg
lds
fdivp
das
lods
sti
int
shrb
popf
test
and
pop
jae
out
push
pop
sbb
les
sbb
mov
dec
sbb
ret
out
scas
push
enter
inc
mov
pushf
rclb
push
lock
movsl
leave
xchg
push
stc
cmp
jo
mov
add
adc
jmp
loope
scas
push
addr16
add
mov
xchg
pop
ljmp
es
ret
loop
scas
adc
inc
or
ljmp
mov
mov
scas
stos
lret
dec
fidivl
ret
jbe
sub
repz
pop
loop
mov
ret
pop
mov
bound
xchg
inc
mov
ss
sbb
movsb
ss
pop
ljmp
lea
test
and
in
add
mov
dec
cmp
mov
mov
sub
push
pop
inc
dec
adcb
cmp
addr16
adc
add
or
out
fsubp
fldenv
shll
xor
jbe
lcall
sbb
in
mov
add
push
jge
adc
icebp
je
shlb
or
cs
popf
or
pop
inc
pop
adc
add
or
outsl
divl
mov
sbb
fiaddl
sub
mov
add
out
repnz
rcl
push
jmp
mov
dec
cli
sbb
mov
daa
loope
fisubl
mov
xchg
test
cli
pusha
pop
lods
push
inc
or
jl
cmp
xchg
icebp
imul
pop
adc
insb
mov
lds
jl
xchg
inc
movsl
cmpsl
test
in
cli
daa
or
mov
mov
xor
jnp
popl
mov
jg
icebp
js
in
ror
jp
xchg
fdivr
pop
lret
ljmp
in
push
sub
adcb
push
jbe
int3
insb
int3
push
add
dec
lds
arpl
cmp
mov
push
adc
push
repz
sbb
jecxz
xchg
call
mov
sbb
pushf
mov
push
pop
fcompl
scas
pushf
xchg
inc
xorl
sarl
dec
aaa
std
fwait
das
fsubrs
pop
fisttpll
lock
pop
xchg
sbb
test
jns
mov
adc
and
fidivrs
jbe
jno
aaa
push
faddl
mov
pop
pop
dec
lock
mov
xchg
and
sub
xor
pop
and
add
adc
jg
icebp
das
pop
decl
jmp
add
sahf
jne
int
add
adc
push
icebp
xchg
pop
xchg
fisubl
out
pop
fbstp
ret
rcll
fsubrl
adc
repnz
daa
xor
mov
aaa
aam
mov
mov
mov
xor
cli
xor
lret
sbb
mov
mov
add
adc
sbb
dec
fcomip
jl
adc
jecxz
xchg
or
sti
xlat
push
scas
test
and
ror
mov
fsts
cmpsb
out
pop
fwait
sub
jp
ret
pop
jns
in
pop
jecxz
push
clc
sahf
jo
ficompl
lds
imul
cli
leave
mov
addr16
lods
add
adc
mov
shlb
adc
mov
into
or
test
pop
push
inc
or
fucomi
std
mov
xchg
lret
or
jb
repnz
clc
aaa
dec
stc
pop
xchg
jle
in
jge
loop
scas
test
dec
and
leave
xchg
and
cmp
shrl
add
inc
mov
mov
sub
adc
lahf
pop
ljmp
cmp
inc
mov
aaa
xchg
out
fisubl
push
or
push
dec
aas
cmp
jno
jnp
ret
inc
jae
sbb
ljmp
push
mov
int
test
pushl
mov
popf
data16
xor
gs
int3
imul
add
addr16
nop
aas
loope
adc
in
jo
inc
repnz
es
add
je
adc
adc
pop
or
mov
xor
faddl
ret
inc
mov
ret
xchg
lret
das
into
push
mul
mov
lock
dec
add
mov
cmpl
sbb
jb
in
pop
or
fimull
pop
test
mov
icebp
pushf
rcrl
or
lahf
mov
sub
pop
div
dec
dec
xchg
rol
in
or
adc
ficomps
and
in
sub
int3
sahf
insb
jl
sbb
and
das
rolb
pop
adc
and
lods
xor
icebp
std
or
stos
add
jno
fsubrl
hlt
out
lods
stc
jg
js
dec
push
test
clc
mov
lret
gs
add
out
mov
or
insl
push
mov
fwait
lods
roll
cmp
inc
in
and
leave
sbb
add
stc
mov
shrb
rcll
aad
push
or
loop
push
cwtl
scas
in
xchg
in
pop
cmp
cmp
fwait
decl
pop
icebp
mov
lock
mov
or
daa
stos
pop
dec
push
pop
sub
push
or
sub
orl
or
fidivrs
jge
fisubrs
enter
jne
jmp
or
push
and
push
pop
loopne
fcomps
jge
test
in
xchg
mov
test
hlt
mov
pop
xchg
loope
mov
add
lock
pop
mov
sbb
repnz
out
xchg
mov
cld
or
or
nop
movsl
sbb
cli
adc
sbb
xor
sbb
mov
or
pushf
or
and
ljmp
dec
inc
sbb
icebp
or
or
dec
movsl
mov
jmp
sbb
cs
jmp
aas
stos
mov
xchg
mov
dec
decl
cli
xchg
adc
adc
adc
adc
jmp
xchg
out
adc
loopne
sbb
mov
movsl
scas
xchg
add
scas
adc
mov
adc
lret
jmp
mov
xchg
out
add
sahf
sub
test
mov
adc
adc
adc
daa
adc
rolb
add
mov
xor
ss
adc
jmp
int
push
push
inc
scas
insb
out
jmp
mov
aad
jmp
mov
in
cmp
shrl
xlat
jno
jae
pop
rcrb
stos
jno
into
sub
daa
lahf
lcall
out
sahf
fmull
aas
lds
imul
pop
add
call
insb
jnp
pop
mov
push
call
inc
ret
icebp
je
aam
mov
jb
out
mov
push
xlat
pop
mov
aas
addb
test
adcl
adcl
lds
and
sub
adc
mov
lock
scas
std
js
xchg
iret
lea
dec
div
fadd
scas
movsb
fcmovbe
dec
xchg
xchg
repnz
repnz
out
pop
add
test
push
pop
sub
xchg
call
cmpsb
jae
xchg
sti
mov
jg
pop
roll
or
das
push
jno
data16
cmp
into
sbb
aam
lret
fs
jg
mov
ds
loop
xchg
mov
daa
jbe
into
sbbb
jp
in
sahf
dec
cmc
rcr
stos
mov
lods
scas
gs
scas
sub
ja
or
jmp
lock
ffree
add
mov
je
mov
push
xchg
jge
jge
inc
icebp
fnsave
call
ss
nop
mov
ret
out
orb
or
shlb
lcall
jg
cmpsb
bnd
jmp
cltd
out
mov
add
rclb
sbb
add
stos
mov
addr16
add
leave
add
add
les
dec
mov
in
cmp
sub
sti
fbstp
mov
mov
push
add
adc
icebp
ss
mov
jp
cmp
jmp
lret
pop
outsb
cmp
xchg
xor
dec
into
jb
lock
ljmp
inc
ss
push
cld
mov
or
rolb
cld
shlb
mov
sub
mov
or
adc
movsb
xchg
add
std
jg
xor
outsl
sub
mov
imulb
pop
jno
ss
fimull
sarb
stc
sbb
into
push
add
sbbb
mov
imul
add
adc
cmpb
sub
pop
scas
jmp
dec
or
mov
dec
mov
lret
lods
dec
mov
cld
xor
aad
push
shlb
sub
mov
repnz
shll
mov
cmp
iret
pop
jne
xchg
mov
ficoml
dec
jo
scas
shrb
sub
jge
cmpsl
ret
push
sahf
cli
jle
mulb
mov
sbb
fcmove
ret
adc
out
dec
pop
add
jge
dec
inc
and
jle
inc
jg
adc
adc
and
dec
pop
mov
cwtl
jle
movl
xor
push
sbb
jp
pop
int3
add
or
dec
in
loop
in
pop
decl
shrl
jne
xchg
push
mov
push
call
inc
mov
jle
or
in
or
imul
hlt
ret
jle
rolb
dec
xor
or
sbb
mov
test
mov
lret
push
mov
stos
xor
stos
pop
pop
dec
add
pop
adc
xchg
jns
into
sub
cmc
lahf
xchg
xor
or
ret
xchg
sbb
mov
pop
xor
adc
adc
aas
add
cmp
xchg
test
add
sbb
mov
in
mov
push
and
jmp
jmp
mov
dec
adc
add
pop
rorb
cltd
in
add
jno
or
jge
or
mov
mov
int
or
fdivrl
xchg
push
int
push
mov
add
stos
stos
xchg
scas
nop
or
je
frstor
pop
sbb
loope
inc
add
push
mov
mov
jl
jle
je
addr16
adc
pop
mov
nop
cmp
xchg
les
or
add
jg
mov
dec
lcall
mov
sbb
nop
pop
nop
imul
addr16
mov
ret
les
repz
mov
mov
xchg
jp
sub
cmp
jnp
fldenv
xchg
sub
sbb
sarb
enter
push
iret
mov
cli
adc
insb
into
or
in
repnz
mov
repz
out
mov
pop
iret
fsincos
mov
std
adc
jle
push
or
cmp
cmp
fists
call
scas
jne
mov
mov
push
and
mov
outsl
pop
stc
sti
pop
scas
aaa
gs
in
cmp
lcall
out
cmp
cmp
int3
aaa
push
ror
in
and
sti
cmpsl
and
mov
out
adc
dec
and
in
stos
jp
adc
and
ljmp
jp
cmp
aam
lods
pop
pop
lahf
das
push
or
inc
loope
jge
pop
in
cli
into
call
xchg
xchg
mov
js
mov
repnz
sahf
inc
mov
add
cmp
int
lock
repnz
adc
fcmovu
pop
in
mov
and
aad
mov
mulb
mov
or
push
call
cld
xchg
jno
jns
pop
stc
outsb
xchg
ljmp
mov
cld
sbb
xchg
or
push
mov
or
test
or
loope
aam
pop
mov
push
mov
repnz
push
jo
faddl
out
sar
pop
ja
sbb
fsubp
notb
pushf
mov
loop
lea
loop
icebp
loop
mov
fdivs
addr16
adc
pop
push
or
sbb
cmp
test
mov
mov
mov
push
outsb
js
sub
mov
clc
cmp
imull
in
pop
push
sar
imul
loope
inc
mov
mov
testl
ljmp
fcompl
jne
fistl
fcom
loopne
inc
add
push
push
repnz
xlat
mov
int3
or
fsubp
sbb
mov
lods
stos
or
sub
lcall
adc
push
push
stc
call
fstl
clc
fcoml
pop
mov
cltd
into
fwait
insb
adc
adcb
lcall
pop
adcb
push
scas
sbb
jmp
push
inc
fmul
lods
mov
popa
repnz
push
push
mov
cltd
rclb
int3
sbb
das
rcrl
sahf
xchg
inc
adc
lcall
scas
mov
mov
xor
lahf
inc
scas
insl
xchg
push
xchg
mov
into
adc
jp
xchg
sahf
sbb
scas
adc
add
sbb
adc
and
dec
call
pop
out
push
mov
push
cli
cs
cmc
jmp
jg
add
xor
jmp
mov
add
cmp
lret
movsl
xor
jle
addr16
aad
jne
and
pop
push
add
mov
xor
js
mov
testl
pushf
add
sbb
hlt
lock
jl
mov
xlat
adc
push
pop
dec
sbb
ss
pop
add
orl
mov
js
mov
insb
add
fiaddl
std
or
clc
adc
fcmovne
sbb
pop
int3
cmp
xchg
lock
adc
sbb
or
imul
into
out
pop
add
dec
icebp
adc
repnz
push
sbb
aam
adc
shrl
in
jmp
addb
add
cmp
jecxz
jmp
incl
or
push
shlb
add
pop
mov
dec
repnz
repnz
icebp
pop
fucomi
xchg
call
jmp
int3
loop
outsb
and
test
fcmovne
adc
and
cmpsb
jg
rolb
fnclex
adc
xchg
sub
subl
loopne
pop
cld
imul
mov
xchg
lods
ljmp
daa
sbb
mov
mov
adc
movsl
hlt
sahf
mov
add
xor
sarb
sahf
pop
ljmp
movsb
ret
pop
call
add
cmpsb
mov
adc
or
shl
arpl
sub
pop
rolb
mov
pop
repz
xchg
stos
inc
decl
es
jmp
imul
cmpb
jge
mov
int3
jbe
in
test
push
cmpsl
jne
mov
leave
inc
mov
dec
lret
out
lret
inc
movl
sbb
scas
xchg
clc
jne
sub
lcall
add
xorb
or
ficoml
dec
push
cs
push
or
jmp
mov
xchg
adc
pop
lcall
add
insl
mov
scas
cltd
mov
insl
repnz
xor
ret
cli
mov
icebp
sbb
ljmp
imulb
data16
cmp
inc
enter
shlb
pop
sbbb
test
sbb
inc
pop
or
sbb
loopne
faddp
pusha
js
in
mov
mov
in
shl
sub
add
xlat
add
cld
add
lods
push
cwtl
xlat
or
adc
movsl
xchg
pushf
test
pop
faddl
push
mov
scas
arpl
cli
cmp
jae
mov
arpl
es
mov
outsb
hlt
inc
push
sti
add
adc
pop
push
clc
rorb
ds
mov
xor
inc
push
movsl
sub
cmp
test
push
xor
jne
rclb
adc
das
loop
cs
cs
out
xchg
sub
test
mov
test
mov
idiv
popf
xor
scas
add
rolb
or
lcall
call
adc
and
in
fbld
cmp
mov
adc
inc
notb
adc
mov
pop
xor
cmp
push
adc
call
scas
insl
rcll
adc
stos
and
push
push
and
gs
pop
pushl
pop
gs
negb
pushf
xchg
fmull
mov
pop
xchg
jmp
adc
pushf
test
std
push
adcb
scas
add
xchg
mov
lods
add
test
iret
pop
xchg
pop
pop
lret
xlat
mov
sub
mov
pop
mov
mov
sbb
jl
divl
sbb
lea
jbe
std
mov
scas
pop
jl
mov
or
scas
aad
mov
bnd
add
dec
shrl
xchg
adc
and
dec
jmp
das
mov
data16
adc
and
fs
in
cli
inc
cmpsl
lcall
inc
in
xlat
jbe
xchg
xchg
lea
cld
mov
movb
out
pushf
out
dec
push
lcall
mov
xor
shlb
xchg
aaa
mov
movsl
lods
dec
mov
or
adc
xlat
stos
xchg
icebp
fwait
add
inc
in
rcll
adc
sub
loopne
rclb
icebp
orb
jnp
xchg
shlb
mov
iret
fs
fisttpl
cs
and
into
ret
sbb
in
add
dec
ficoml
pushl
fs
sub
ljmp
xor
data16
stos
cmpsb
cmpsb
xchg
jg
shlb
mov
jg
jmp
inc
add
cmpsl
lcall
and
daa
fadd
cwtl
and
shlb
sub
mov
nop
sbb
jmp
data16
mov
lock
nop
sbb
out
sub
notb
xor
cmpsl
lcall
add
xlat
stos
xchg
lret
pop
loopne
fmul
fs
fistpl
cs
and
into
stos
cmpsb
and
inc
pop
dec
jge
xor
xor
sub
loope
lret
icebp
or
jmp
inc
or
clc
dec
mov
or
xchg
or
fmul
fs
inc
repnz
dec
mov
xchg
pop
es
xchg
jg
shlb
movsb
or
data16
mov
jg
jmp
inc
or
fmull
fmull
push
sub
dec
mov
test
mov
cli
mov
daa
aad
pushf
mov
push
sub
inc
jg
enter
pop
out
gs
mov
jl
or
lods
movsl
lods
adc
mov
dec
iret
pushl
int
and
or
testl
int
cmp
imul
in
test
xor
adc
mov
ret
stc
shll
fdivp
daa
hlt
les
adc
mov
mov
lret
scas
cmp
mov
mov
ret
push
push
or
and
loop
movl
mov
xchg
and
push
pop
mov
adc
sbb
loopne
popa
sub
adc
mov
or
mov
out
daa
adc
icebp
adc
or
add
insb
in
mov
ret
add
pop
mov
test
mov
subb
movsb
jl
pop
repnz
cld
shll
sahf
pop
enter
or
daa
push
jl
stc
lea
fdivp
jp
sti
stc
adc
ljmp
sub
mov
add
into
adc
decl
pop
push
inc
mov
pushf
orb
fisttps
out
andl
hlt
xchg
loop
out
cli
pop
adc
ja
popf
ljmp
fdivr
cwtl
and
fisubs
insl
pop
add
das
loopne
mov
or
into
pop
hlt
or
push
mov
sbb
sbb
pop
and
lret
cwtl
mov
out
loop
sbb
jge
mov
dec
popf
push
add
div
inc
fcom
jg
ret
popa
xchg
sbb
mov
add
mov
xchg
jp
popa
inc
inc
dec
push
imul
icebp
pop
dec
pop
ljmp
icebp
add
ss
xchg
xchg
mov
aas
mov
push
inc
mov
ljmp
pop
pop
loope
popa
add
pop
call
jmp
scas
pop
in
rorl
mov
pop
xchg
or
mov
sbb
add
or
jns
xlat
dec
or
or
pop
testb
cmp
cwtl
jb
aaa
dec
ja
insl
jb
and
pop
or
jb
or
mov
repnz
add
pop
ljmp
int
pop
call
notb
push
xchg
pop
jmp
push
mov
fcoms
xchg
inc
xor
pop
xlat
pop
addr16
inc
inc
das
ja
pop
pop
ficomps
add
out
lcall
out
bound
xchg
test
add
adc
jmp
fs
arpl
fwait
in
mov
add
inc
jmp
hlt
inc
in
ja
jne
and
push
fmuls
dec
sahf
add
jp
out
or
jb
loop
iret
xchg
add
fnstcw
dec
mov
icebp
sub
adc
incl
push
or
int3
xchg
in
aas
arpl
push
xchg
into
mov
xor
in
nop
in
jns
dec
and
sub
mov
and
ss
add
dec
out
push
xchg
lock
fwait
xchg
cmpsb
das
mov
mov
add
push
and
fcompl
or
lods
jmp
jmp
aam
lret
mov
jmp
xchg
jle
adc
pop
dec
pop
ljmp
pop
xchg
xor
fsub
jle
shll
inc
push
bound
aam
mov
add
and
insb
out
pop
sahf
add
mov
add
pushf
xchg
cmp
dec
fdiv
mov
lahf
in
aas
xor
test
nop
test
jg
jnp
push
ljmp
movsb
xchg
outsb
fstpl
enter
mov
stos
test
jg
and
insb
out
scas
push
rclb
or
arpl
incl
xor
insl
adc
adc
inc
add
cli
sbb
cmp
clc
loope
mov
xchg
test
lds
push
hlt
sbb
mov
add
pop
mov
mov
mov
sarl
icebp
mov
xchg
dec
pop
mov
xchg
dec
xchg
fstps
xchg
add
cmpb
pop
in
jl
inc
sbb
adc
sbb
add
mov
fisubl
push
inc
pushf
sub
add
rcrb
int3
sub
icebp
push
stos
rorb
dec
loopne
xlat
or
cmp
mov
mov
sbb
mov
pop
enter
jno
mov
sbb
lea
ljmp
pop
lods
cmc
rolb
lock
jnp
out
jge
and
pushf
mov
je
pop
fwait
jp
out
fdivrl
rolb
mov
lea
pop
adc
cwtl
incl
adc
lret
cwtl
lcall
icebp
lea
inc
lahf
jmp
lods
mov
std
pushf
cmpb
scas
nop
in
push
adc
push
mov
out
insb
notl
or
xchg
jnp
jb
cld
sbb
dec
sbb
cmp
adc
orb
or
adcl
pusha
ljmp
lret
sub
in
lods
gs
lds
mov
xor
adc
sub
ljmp
sub
add
cmp
adc
outsl
xchg
and
and
insb
fidivrs
in
movsl
fwait
add
adc
xchg
add
adc
mov
push
loopne
loopne
mov
cs
icebp
addl
add
pop
pop
cmc
shlb
push
daa
lds
sahf
xchg
mov
pushf
scas
jmp
test
pop
insb
mov
and
or
imul
das
daa
in
jge
pop
in
in
add
insb
add
pop
sahf
add
shr
loopne
lret
lock
lea
scas
xor
std
adc
pushf
pop
aas
leave
add
bound
adc
and
lcall
test
mov
subl
daa
popa
xchg
clc
xchg
inc
pop
add
cmp
inc
stos
mov
insb
jp
push
jns
int3
adc
add
push
add
cwtl
adc
sti
sub
sbb
fimull
cs
in
and
hlt
mov
int3
jns
add
and
icebp
jmp
mov
lds
das
icebp
into
pop
mov
sahf
add
out
xchg
sub
xchg
or
push
add
in
xchg
mov
and
jmp
hlt
je
test
cltd
pop
jb
sbb
add
jge
dec
add
xlat
decl
int3
push
add
mov
int
pop
fmull
leave
enter
or
adcb
sub
mov
ljmp
in
ficomps
mov
icebp
pop
pushf
add
jg
adc
pop
daa
mov
or
mov
ror
lahf
and
pop
sahf
add
ret
adc
sbb
and
xlat
xchg
loop
xorb
call
je
or
cmpsl
cmc
icebp
ffreep
push
fisubrl
lock
xchg
jmp
jbe
in
test
ljmp
mov
jae
push
decl
add
add
rcr
std
push
push
cmp
icebp
nop
mov
adcb
stos
adc
xor
fsts
mov
cwtl
push
mov
adc
sbb
mov
cmp
or
int3
mov
jge
or
jp
xor
pop
fiadds
push
xor
ljmp
lds
sub
dec
xchg
repnz
mov
outsl
es
xchg
in
add
mov
inc
jbe
add
adc
repnz
xchg
and
add
nop
mov
cwtl
ret
or
inc
mov
adc
adc
cmp
pop
sbb
adc
push
adc
ret
xchg
clc
mov
imul
or
mov
mov
sbb
adc
sbb
adc
ficomps
mov
push
mov
clc
push
fnsave
stc
orb
sub
out
loope
add
out
and
dec
xorb
xchg
add
lcall
push
in
std
pop
push
mov
add
out
lods
adc
mov
pop
adc
in
or
and
je
jp
mov
out
add
leave
cmc
xchg
xchg
movl
or
in
dec
and
mov
mov
inc
shrl
rol
jge
ret
int
inc
insl
and
sub
rcl
pushf
scas
lcall
adc
ret
and
out
inc
mov
push
push
mov
fcmove
add
test
pushf
mov
into
loopne
loope
out
lcall
cmc
dec
cltd
repnz
daa
inc
in
inc
rclb
imul
loope
adc
ficoml
movsb
stos
push
loopne
out
jmp
in
imul
inc
jle
mov
es
stc
fs
fidivs
data16
inc
xchg
idiv
das
jb
or
push
push
leave
mov
jne
jae
or
scas
xchg
pop
cli
in
push
jmp
xor
pusha
add
stos
imul
or
inc
add
lods
or
sbb
imul
shr
inc
aaa
push
stc
cmp
dec
decb
hlt
fisttpll
add
and
push
out
bound
add
je
int3
data16
imul
fwait
hlt
test
andb
in
loop
and
test
test
adc
int
shrb
sahf
jecxz
fidivs
push
mov
rcl
push
push
add
xorb
sti
mov
inc
das
xchg
rcr
cmpsb
mov
call
mov
test
outsb
lahf
cmpsb
xchg
cli
mov
fsubrs
into
nop
xchg
out
sbb
xchg
jo
and
and
stos
jecxz
aas
mov
jge
push
lock
push
mov
adc
fisttpl
xlat
xchg
sub
pop
or
loop
imul
cmp
dec
int3
jge
jmp
jb
inc
out
sub
frstor
scas
mov
movsl
mov
stc
xchg
scas
cmp
push
ljmp
cli
lock
ljmp
mov
mov
jae
xor
xchg
movsb
shlb
cs
lea
enter
fs
dec
aas
popf
jne
jmp
adc
xchg
mov
cmp
jno
roll
test
push
jb
inc
sbb
fdivr
jno
fwait
mov
lahf
push
add
loop
mov
fiadds
adc
xor
mov
and
xchg
adc
jno
fnstcw
and
ss
inc
scas
lret
rcrb
sar
mov
sub
pushf
cmp
dec
sti
aam
ficomps
pop
sbb
ficoml
cmp
out
cmpsb
jne
push
adc
lods
mov
mov
and
dec
xchg
in
mov
add
filds
or
adc
insb
or
pop
cmp
ljmp
repz
jns
outsl
push
fs
int3
adc
fsubr
testl
jle
xchg
adc
mov
jle
jmp
fstps
pop
cmp
add
cmpb
data16
push
push
ret
adc
int
xchg
lds
in
pop
or
xchg
or
adc
sbb
and
mov
cmc
jl
fistpll
bound
jle
movsl
outsb
gs
mov
lret
adc
mov
pop
pop
int3
jb
aaa
adc
mov
ljmp
push
push
inc
lret
lods
add
push
pop
hlt
lcall
jmp
adc
or
nop
xor
adc
add
imul
dec
ss
fcoms
and
in
pop
add
and
jp
jle
adc
fmuls
data16
xchg
push
shll
xchg
in
pop
lahf
mov
mov
add
cmc
mov
lret
or
loopne
loope
push
sub
iret
shlb
jne
rclb
sbb
pop
ljmp
add
dec
into
sub
sub
out
add
jne
mov
push
mov
dec
lret
pushl
jno
and
mov
lds
imul
xorl
cmp
and
adc
push
jp
sbb
jmp
xchg
sub
pusha
fwait
and
fmuls
in
jmp
jge
xor
iret
pop
cmp
lcall
icebp
mov
push
adc
fisttpl
rcll
js
enter
lret
jmp
add
pop
mov
cld
xchg
cmp
cltd
stos
pop
sti
scas
out
sarb
push
mov
jbe
mov
into
inc
and
scas
adc
ficompl
fdivp
mov
push
or
or
testb
rorb
and
das
mov
sbb
mov
inc
mov
insb
mov
fsubrs
mov
sbb
es
sub
pop
sub
push
cmp
or
push
inc
dec
fisubl
lret
sbb
popa
and
stos
sub
cmp
mov
cld
sarl
addr16
mov
or
decl
xor
out
or
push
or
lods
adc
jp
add
adc
test
sub
rcll
lods
mov
sbb
scas
ficoml
mov
imulb
inc
ret
or
xor
ficompl
rcl
push
in
add
push
add
cmpsl
xor
into
into
rorb
adc
je
sub
jne
aam
out
scas
fs
pop
scas
or
pop
into
jmp
adc
out
add
cmp
gs
icebp
cmp
pop
out
in
sbb
rolb
mov
or
sub
add
pop
xchg
or
pop
in
mov
imul
dec
and
jge
js
sbb
pop
cmp
push
sbb
push
cmp
sbb
xor
sbb
stos
mov
stos
rcl
jle
mov
dec
or
stos
repnz
stos
sub
sub
cmpsb
add
in
les
flds
fimull
js
jo
in
inc
stc
jg
lcall
adc
pop
pop
jne
scas
inc
lret
ljmp
cli
gs
jbe
fisttpll
call
cwtl
ror
mov
dec
jg,pt
jae
lods
mov
and
or
shr
dec
jle
pop
lods
mov
stos
stos
mov
or
xchg
ljmp
aaa
add
xchg
fadd
add
test
cmp
push
pop
rcrb
aad
and
test
out
cwtl
mov
pop
call
jmp
rorl
add
rolb
mov
cli
cltd
xlat
xor
add
jb
popa
cmc
popl
push
out
aam
mov
into
xor
test
pop
fs
pop
jns
cwtl
add
dec
jge
lcall
es
mov
add
lods
or
inc
mov
aad
iret
insl
mov
sub
adc
xchg
in
sahf
or
ficoms
adc
add
out
repnz
call
add
ret
dec
mov
out
outsl
stc
mov
lcall
repnz
fdivs
fstps
int
bound
jp
adc
mov
sbb
cld
sbb
or
adc
stc
insl
xchg
pop
jl
ret
adc
and
rcll
pop
dec
inc
ljmp
jmp
ret
dec
ret
adc
and
adc
imul
or
fs
ljmp
ficoml
ret
jge
jmp
add
cmp
stos
sbb
fldt
cmpsl
enter
in
ss
rol
push
ja
test
or
cmp
mov
call
adc
sub
pop
out
outsl
fcoml
cld
jg
mov
jns
into
jae
dec
and
ret
xchg
jae
notl
fimull
push
fmull
gs
push
cmp
in
mov
dec
push
adc
add
sub
adc
adcb
out
xor
xlat
or
mov
adc
outsl
pop
mov
inc
mov
push
xchg
pop
cmp
dec
sbb
repnz
lcall
mov
mov
out
pop
inc
add
or
into
or
stos
std
mov
xor
aam
in
jbe
pop
mov
sbb
enter
ret
xor
pop
mov
repz
cli
js
lds
sahf
mov
push
popf
sbb
movsl
xchg
nop
xchg
dec
fst
cld
adc
push
insl
cmp
int3
ss
sbb
shll
mov
push
pcmpeqd
adc
pop
inc
adc
jl
push
pop
cli
lods
fldcw
fimuls
sub
aam
mov
pusha
push
pusha
sub
cmp
sub
add
in
icebp
mov
xchg
sti
hlt
fisubrl
pop
dec
mov
lret
pop
pop
mov
pop
daa
outsb
sti
lock
movsb
sbb
incb
adc
dec
es
sub
sbb
dec
dec
popa
push
mov
sbb
mov
lcall
mov
xchg
loopne
call
mov
loope
int3
shr
mov
mov
hlt
pop
js
out
js
cmp
adc
test
sub
fisubrl
outsl
popa
jg
into
or
or
flds
subb
mov
repnz
mov
and
jg
jnp
xor
repz
mov
dec
iret
xchg
popl
sub
jo
sbb
repz
sbb
add
inc
or
leave
es
mov
jl
cmpsl
jecxz
out
andl
mov
rcrb
mov
cltd
xor
test
insl
and
test
fstl
jmp
jns
adc
jmp
jmp
cmc
fucom
inc
ljmp
push
andb
testl
inc
out
mov
in
jb
rol
push
or
scas
stc
cwtl
mov
inc
insl
fldenv
idivb
add
enter
push
add
pop
fidivl
mov
cld
dec
ret
std
rol
cmpsb
adc
sub
cmp
push
fmull
add
mov
mov
test
loopne
jmp
pop
pop
jge
divl
pop
mov
stos
jge
imul
or
testl
cld
mov
shlb
xchg
mov
sbb
sahf
sbb
pop
mov
xlat
stos
nop
xlat
pop
stos
xchg
popfw
sub
or
cld
mov
xor
cli
dec
fstps
pop
inc
push
mov
icebp
cli
add
jno
lcall
cmpsl
pushf
add
pop
push
sub
sbb
lods
inc
sub
or
sub
lret
mov
nop
sbb
add
cmpsl
lcall
data16
sub
out
mov
lods
out
das
add
xlat
stos
xchg
cs
pop
sub
pusha
ljmp
lock
jmp
int
sub
out
mov
scas
out
das
add
xlat
stos
xchg
mov
sti
fisubrl
mov
ljmp
ret
sub
sbb
stos
inc
sub
call
push
sbb
dec
mov
jge
in
sub
lret
loope
nop
sbb
cmpsl
lcall
scas
add
fcmove
lods
jmp
data16
decb
sbb
dec
and
lcall
data16
sub
out
mov
stos
out
das
add
cli
jmp
data16
mov
nop
sbb
push
js
sbb
push
sub
sbb
lods
pop
sub
and
sbb
jge
in
sub
lret
fwait
cmpsb
nop
sbb
stos
aad
sub
mov
nop
sbb
push
sub
pushf
pop
jecxz
shrl
sub
scas
push
pop
dec
out
lcall
inc
in
cmpsb
jp
pop
xor
cli
dec
ficompl
das
add
mov
in
rcr
xor
add
jge
inc
in
das
push
xor
or
and
cli
data16
pop
lea
cld
jp
decb
pushf
stos
jecxz
iret
mov
cmp
iret
fimull
scas
add
dec
pop
stc
pop
cli
data16
mov
sub
mov
scas
jge
in
sub
adc
add
xor
jo
nop
inc
xchg
mov
mov
aam
aas
cli
cmp
pop
cli
pop
outsl
mov
jge
mov
popf
scas
mov
mov
loope
ret
push
loopne
adc
mov
lods
out
stc
lods
imull
lods
sbb
and
int3
aaa
int3
inc
int3
inc
int3
push
int3
push
int3
gs
addr16
jne
ja
test
xchg
xchg
int3
xchg
int3
movsl
int3
cmpsl
int3
mov
mov
xchg
and
insl
or
jge
lahf
or
or
or
or
or
or
or
or
or
cli
adc
pop
sbb
aas
cmp
xor
outsb
subb
inc
push
dec
push
pop
jnp
ss
sub
roll
and
dec
cmp
push
jp
mov
lcall
and
lods
jo
lods
or
inc
push
int3
ljmp
adc
nopl
push
xchg
mov
in
cmpsb
dec
clc
and
sbb
shlb
cmp
sbb
inc
rcr
idiv
mov
inc
lcall
push
ja
dec
sti
jmp
pop
mov
aam
mov
xchg
push
testb
xor
mov
pop
mulb
sub
test
ret
test
icebp
cli
mull
fcmovb
pop
mov
or
push
mov
dec
divl
or
dec
in
dec
jl
pop
pop
push
jge
mov
ret
or
out
addr16
rolb
fucom
xchg
adc
xchg
cli
adc
out
loopne
adc
ret
sbb
sahf
xchg
out
repz
stc
and
cli
shl
sbb
mov
xor
inc
dec
sbb
pop
stc
cmpsb
xor
or
cli
mov
int
stc
jp
insl
xchg
data16
and
pop
je
in
xor
mov
int3
clc
cmp
nop
fisttpl
mov
ret
fnstenv
or
mov
mov
fnsave
and
jae
xchg
popa
cltd
hlt
fcmovu
cs
xchg
cld
push
cmpsb
add
pop
test
or
cmp
inc
call
lods
in
and
test
insl
lea
cmpsl
aam
jbe
call
js
mov
mov
into
loop
mov
mov
add
mov
sub
test
pop
mov
push
pop
cmp
in
jp
mov
pop
cmp
dec
mov
xor
sbb
mov
add
int3
jl
cmc
mov
sub
roll
pop
mov
mov
cld
mov
push
bnd
cmp
cmp
push
mov
fucomp
add
icebp
hlt
sub
aaa
insb
push
cld
cmp
or
loopne
pop
mov
mov
cs
add
add
cld
rcll
cmp
ljmp
loop
and
xor
addr16
mov
inc
test
std
jb
cli
xor
cmc
mov
outsb
add
imul
jo
cltd
mov
adc
out
mov
sub
mull
addr16
into
cmp
push
jbe
popa
es
loopne
jae
jb
mov
out
outsb
cld
iret
jge
jne
jl
adc
fsts
ret
jbe
std
insl
pop
in
fstp
sub
scas
jbe
cld
inc
loope
sub
add
jl
sbb
push
sbb
dec
cld
mov
fcoml
mov
das
mov
addr16
cmc
das
xchg
cwtl
mov
mov
or
out
mov
roll
or
xor
in
sub
cmp
and
sub
xorl
into
dec
pop
xchg
push
jp
mov
lcall
ficoml
pop
ficoml
xchg
sub
lea
add
and
sbb
jge
xchg
cs
jge
sahf
xchg
dec
mov
pusha
int
out
jge
xchg
cs
pusha
int
out
and
in
sbb
sbb
jge
xchg
cs
pusha
int
out
jge
xchg
and
sbb
jge
xchg
cs
pusha
int
out
jge
xchg
cs
pop
sub
jge
xchg
cs
pusha
int
out
jge
xchg
cs
out
add
and
sbb
jge
xchg
cs
jge
sahf
xchg
dec
les
inc
cs
jg
push
out
adc
xorb
or
cmp
mov
insl
lcall
or
stc
fnsave
or
ret
test
in
mov
or
divl
adcl
xor
or
stos
mov
push
dec
jo
sbb
mov
dec
cli
mul
cmp
xchg
and
in
aad
sbb
pushf
addb
cld
sbb
int3
pop
and
sbb
out
insb
adc
int3
adc
push
dec
adc
sub
push
add
ror
push
xchg
add
das
in
sbb
loope
cli
xchg
xchg
dec
cli
into
add
adc
pop
or
adc
and
incl
jg
lods
xchg
or
inc
into
push
cli
xchg
std
outsl
ds
pop
or
pop
xchg
decl
outsl
inc
mov
pop
add
add
xlat
push
popa
in
aas
mov
jmp
sub
xchg
sbb
std
dec
add
jbe
mov
lret
xchg
mov
adc
push
fnstsw
sbb
std
dec
add
jle
mull
lcall
xchg
out
pusha
lcall
mov
sbb
sub
in
add
jle
sbb
es
andb
mov
jl
hlt
imull
fs
ret
bound
andb
and
fs
lret
fs
out
xor
imul
sar
xchg
sub
aaa
out
sub
or
xchg
lock
adc
testb
xchg
movsl
mov
cmc
xchg
cli
lock
sbb
add
adc
push
xchg
in
and
out
dec
loop
cmp
popf
xchg
or
pop
fdivr
div
lcall
lcall
das
pop
lcall
push
and
xchg
adc
mov
mov
cltd
sbb
fstl
sbb
push
and
lret
add
out
in
out
icebp
mov
jp
cwtl
xor
lcall
xchg
aas
adcb
lret
ljmp
add
add
iret
pop
adc
pop
loop
xlat
sbb
leave
inc
xchg
lcall
mov
jl
and
push
and
pop
incb
mov
xchg
out
aas
or
and
add
addr16
mov
imul
xor
mov
and
sbb
out
sbb
enter
bound
xchg
in
pop
fucom
or
adc
jae
pop
cli
pop
add
adc
pop
adc
dec
xchg
xchg
adc
aam
in
rclb
mov
or
inc
mov
adc
pop
enter
add
rcrl
test
push
mov
movsb
push
jb
mov
subl
mov
into
mov
jne
pop
mov
adc
sarb
out
not
pop
push
adc
dec
cmc
or
pop
sti
call
jp
nop
pop
leave
out
cmp
fs
mov
mov
mov
cwtl
or
loop
mov
adc
cmp
inc
subb
sbb
mov
mov
or
xchg
mov
imul
into
sub
add
push
pushf
add
in
or
or
cld
xchg
jecxz
lods
fisubs
sbb
mov
cld
adc
xor
shl
pop
loopne
adc
mov
fcompl
or
mov
loope
int3
and
xchg
flds
or
dec
lcall
scas
rcrl
sbb
fstl
adc
loop
fildl
jecxz
mov
inc
mov
insl
lods
mov
cmpsb
adc
add
push
mov
pusha
fcompl
sarb
push
pop
adc
push
or
scas
pop
fisubl
push
addr16
fildl
push
pop
inc
xor
test
mov
subb
test
adc
mov
test
fisubs
mov
adc
xor
insb
lret
cmpl
dec
push
xchg
or
jmp
adc
push
mov
mov
into
pop
sbbl
mov
dec
inc
lret
pop
dec
pushf
popl
outsl
or
outsl
shlb
ds
in
xor
adc
sahf
iret
fists
stos
sub
xchg
mov
inc
jb
xlat
pop
js
mov
mov
xorl
into
pop
fdiv
add
or
lods
dec
push
insl
dec
pop
pop
adc
push
and
xor
ret
mov
jnp
adc
dec
sbbl
and
xchg
adc
into
pop
fcmovbe
dec
adc
mov
adc
faddl
jle
into
jle
pop
adc
lods
loop
cmpsl
cltd
add
jge
cmp
adc
leave
pop
out
cltd
pop
cltd
cmp
sbb
xor
call
jge
int
out
cwtl
pop
push
sti
stos
ljmp
jge
cmp
xchg
cltd
imul
shlb
pop
sbb
adc
cld
pushf
sbb
mov
push
add
test
xchg
fists
out
pop
std
mov
mov
push
sub
xor
stc
imul
in
ret
or
scas
cmp
imul
je
or
pop
test
lock
xchg
adc
movsl
adc
in
lock
int3
or
mov
pop
cmp
shr
pop
pop
test
inc
test
jmp
ror
out
xor
mov
sub
adc
cmpsb
outsb
mov
add
ret
test
outsl
std
bound
int3
call
ret
add
nop
shll
pop
mov
jge
aas
sub
xchg
mov
inc
hlt
iret
dec
outsl
cmp
mov
dec
ljmp
dec
loopne
stc
xor
mov
cli
ljmp
push
cmpl
les
jo
addr16
leave
stc
or
adc
xchg
out
leave
in
xchg
push
aad
iret
rcrb
outsb
dec
mov
out
imul
add
jbe
cwtl
pushf
add
leave
mov
int3
sarb
in
sbb
es
jmp
push
lcall
mov
aad
mov
adc
and
lods
mov
out
data16
enter
enter
xchg
repz
out
ficompl
ljmp
push
xchg
jmp
cmp
xchg
mov
xchg
push
or
push
leave
pop
push
xor
test
pop
cmp
fsubp
jbe
cld
rorb
or
mov
mov
xchg
dec
xchg
icebp
std
aaa
jo
sbb
jne
cmp
lcallw
add
mov
xor
es
adc
in
out
adc
inc
jle
out
add
daa
call
mov
cltd
sub
rolb
sub
shl
fldl
ss
testl
das
test
push
add
add
divl
in
xchg
les
xchg
pusha
mov
out
fcomps
push
push
in
dec
xchg
test
nop
pop
xchg
ja
adc
mov
ret
popf
popf
test
fcoml
jno
sub
jle
je
shlb
fcmovu
inc
mov
adc
outsb
push
cwtl
sub
xchg
jb
sti
adc
xor
ds
or
in
and
nop
jb
mov
ret
pop
cli
mov
xchg
jle
cwtl
xchg
mov
inc
sarb
and
int3
sbb
out
clc
in
sti
sbb
fidivl
addb
inc
sub
lods
add
std
inc
cli
jno
jle
int
jecxz
xchg
xchg
rolb
mov
jge
jno
mov
jnp
cli
cld
lea
mov
in
sub
add
dec
arpl
lcall
aas
in
pop
adc
jecxz
inc
cmp
push
pop
mov
pop
out
mov
jge
stos
leave
xchg
icebp
push
jl
pushl
add
std
stos
scas
push
out
aas
jge
xchg
rcr
xchg
call
rcrb
fmul
mov
mov
sbb
or
out
roll
int
lret
dec
mov
aaa
rorl
popa
outsl
mov
lcall
ds
dec
or
idivb
jo
idivw
rclb
push
jne
ljmp
popf
xchg
mov
mov
leave
cmp
rorw
ret
pop
sub
aad
add
mov
out
shr
and
repnz
fidivl
ljmp
loope
lret
add
insl
into
hlt
pop
jo
mov
adc
repnz
sub
or
inc
adc
cld
lock
fcoml
xchg
jmp
xchg
les
cld
inc
or
xor
mov
ljmp
jnp
mov
incb
and
inc
dec
and
aam
push
sbb
jecxz
decb
fsub
repnz
faddl
rcrb
imul
cwtl
in
hlt
and
jg
hlt
fcoml
repnz
pop
dec
dec
hlt
adc
aas
in
cli
jnp
add
fcoms
mov
cs
loop
jp
cmp
mov
lock
xorb
leave
sub
adc
std
jg
mov
pop
sbb
idiv
pop
sbb
incb
mov
rclb
imul
in
push
les
or
out
rcrb
out
inc
mov
sbb
dec
sub
sub
pop
jl
loope
or
cmp
test
jmp
add
ljmp
inc
xchg
rcrl
xor
test
dec
adc
in
ss
fstpl
xchg
push
loope
leave
mov
or
mov
mov
aam
push
jb
mov
stos
sbb
movl
add
jbe
cmp
add
rcrb
lds
pop
mov
push
mov
fnstsw
inc
fsubs
es
scas
scas
xchg
mov
adc
aad
stc
les
loopne
out
fisttps
push
clc
aas
pop
call
push
xchg
rorl
push
stos
xchg
ret
popf
sbb
shl
inc
pop
pop
ficoms
rol
jb
int3
stos
and
mov
mov
js
mov
clc
jmp
cmp
push
xchg
sbb
sbb
mov
pop
int
adc
inc
ficompl
mov
fcoms
mov
pop
loopne
icebp
xlat
sbb
aam
xchg
mov
or
ficompl
adcl
xchg
sub
sbb
mov
mov
mov
call
inc
or
loopne
fcom
ds
adc
push
jge
ds
adc
lret
out
and
mov
push
or
ds
sahf
jge
mov
mov
into
call
icebp
mov
pop
out
mov
dec
loopne
in
ljmp
xlat
and
adc
jp
notl
mov
push
mov
dec
icebp
mov
inc
jge
sahf
or
inc
jle
ljmp
cli
push
leave
mov
mov
jmp
adc
enter
and
orl
out
inc
lcall
cmp
fisubrl
in
imul
movsl
ss
adc
jmp
fcomps
fcmovnbe
repz
cmp
adc
cmp
dec
sbb
mov
jmp
push
and
sub
fwait
imul
add
dec
adc
arpl
int
out
sub
daa
xchg
pop
dec
adc
sbb
inc
jp
add
test
mov
xor
dec
test
pop
push
scas
repnz
cld
sbb
in
inc
fmull
in
add
adc
cld
and
or
pop
mov
or
lahf
dec
in
xlat
cld
mov
scas
mov
orl
enter
xor
lret
sub
or
rcrl
imul
inc
shl
jns
mov
cmp
ja
cs
mov
add
add
cmc
cli
cltd
fadd
mov
sub
outsl
push
sar
push
les
cld
mov
pushf
sarb
dec
xchg
ret
pop
xor
ljmp
imul
mov
icebp
lahf
sub
mov
fldl
add
pop
xor
negb
mov
ret
bound
sub
jbe
inc
pop
fidivl
mov
shll
ljmp
add
into
iret
imul
cmp
scas
sar
and
hlt
call
das
in
jge
shll
rolb
push
lcall
in
or
xchg
sub
std
xchg
add
fsubrs
jbe
cltd
mov
lret
hlt
or
or
mov
orb
test
jbe
lods
out
cs
jbe
rcll
sbb
add
or
lods
xchg
stos
cmp
xchg
inc
pop
dec
cld
mul
jbe
shrl
lcall
test
xchg
or
cli
pop
imul
and
mov
shr
pusha
out
shrl
fnstcw
testb
pop
cld
cli
jmp
and
push
insb
mov
push
fildll
ljmp
pop
pop
jge
int
mov
adc
cmp
pop
mov
sbb
loopne
fmul
sub
in
push
mov
hlt
xor
sahf
cwtl
popa
fwait
xchg
jmp
es
add
in
xor
mov
add
mov
out
push
rcl
add
pop
inc
sti
mov
fisubrs
lods
lret
ret
pushf
add
adc
imul
push
bound
and
or
pop
bnd
fidivrl
xchg
add
incb
adc
loopne
mov
call
imul
outsl
out
add
xchg
imul
pop
cs
sbb
jle
jno
jb
andl
xchg
mov
xchg
imul
out
jp
stc
adc
mov
pop
sti
inc
cs
pop
cli
inc
cs
repz
std
dec
lret
add
mov
outsb
xchg
stc
or
imul
insb
adc
mov
sub
stos
int3
pop
stc
clc
cmpb
pop
push
sbb
std
or
lret
dec
cs
imul
pushf
fcomip
adc
pop
fdivl
pushf
int
fidivs
lret
lods
xchg
enter
mov
lea
out
jle
xor
cmp
jns
imul
dec
je
add
movsb
repnz
jge
jbe
xchg
popf
sbb
ljmp
xchg
int
movsb
repnz
mov
jecxz
lods
scas
inc
add
sbb
xor
loop
int3
push
adc
cli
stos
sub
mov
or
add
add
mov
loope
jnp
vmovups
add
movsb
inc
icebp
pushf
gs
je
mov
sbb
xchg
fidivs
pop
sbb
loopne
inc
out
lcall
aas
repnz
lock
icebp
inc
sub
jl
push
sahf
stos
in
push
jo
jle
leave
ja
aam
loopne
sbb
shlb
in
cli
lods
pop
fcmovne
mov
xchg
pop
decl
inc
lret
or
jmp
movsl
or
jne
jbe
test
jb
clc
repz
xlat
in
xor
pop
push
daa
sbb
lret
cmc
inc
cmp
xor
cltd
mov
mov
cmp
mov
add
scas
add
enter
orb
push
stc
and
ret
nop
fs
jmp
adc
jge
jno
or
add
aam
sbb
std
and
cltd
inc
pop
push
sbb
dec
inc
adc
rclb
lcall
fsub
test
in
and
xchg
lods
pop
lds
decl
sbb
int3
xchg
repz
hlt
cli
jns
cli
insb
rorb
adc
push
addr16
pop
inc
sub
mov
jge
mov
add
lahf
xchg
scas
pushl
pushf
add
cmc
lods
lret
outsl
push
push
imul
popf
adc
lcall
adc
pop
jo
cmpsb
pusha
in
adc
xor
lcall
adc
mov
insb
lock
adc
xchg
dec
jae
imul
jl
adc
adc
adc
adc
jl
xchg
lahf
into
adc
pop
out
dec
rorl
fisttps
ds
ret
data16
std
jne
xchg
rolb
outsl
pop
adc
push
movsb
and
or
hlt
cmc
int3
lock
or
lcall
adcb
jmp
ret
xchg
mov
adc
adc
inc
insl
int3
adc
sti
cld
fisubl
stos
or
out
lds
ret
mov
and
mov
sub
xchg
mov
das
xchg
fsubp
idivb
test
xor
inc
mov
lea
in
cli
sti
sub
or
or
add
sbb
int3
fucomip
push
scas
lahf
in
sbb
sub
and
int
and
into
or
in
adc
adc
add
adc
into
lahf
adc
adcb
cmp
inc
cs
cld
and
rolb
cli
popl
lahf
pop
or
xchg
or
jp
icebp
sub
mov
mov
sub
hlt
pop
fildll
push
mov
pop
test
jmp
decl
mov
insl
sti
push
aad
fdivr
pushl
push
aad
fdivr
shlb
xchg
in
push
sti
dec
mov
imul
or
or
mov
incl
sti
jmp
test
pop
sti
dec
xchg
push
aad
sti
mov
cmp
mov
sti
mov
icebp
aad
sti
mov
pop
aad
inc
aad
sti
inc
test
aad
sti
inc
test
aad
sti
inc
test
aad
sti
mov
or
add
add
ljmp
int3
add
sub
std
or
sub
divb
and
stos
pop
sub
pop
es
pop
fstpt
pop
ss
pop
xchg
pushl
das
icebp
inc
fs
repnz
push
or
xchg
xchg
and
jns
outsl
adc
fstp
pusha
orb
mov
cmp
test
sub
or
and
not
inc
pop
adc
add
adc
data16
push
and
cmp
mov
or
popf
out
fists
sbb
fisubl
out
sti
and
adc
cmc
mov
scas
into
mov
ret
in
push
cmp
adc
xlat
mov
or
sbb
add
aam
or
sbb
push
popa
mov
sub
fdivs
adc
jmp
ret
icebp
xchg
xlat
sub
sbb
fsub
lret
jp
sbb
and
scas
pop
mov
dec
mov
ds
outsl
daa
into
xchg
mov
ljmp
lret
pusha
inc
and
add
add
ds
jnp
mov
sub
adc
lret
movsl
lret
js
adc
fsts
lods
in
add
cld
push
std
mov
mov
xchg
rcrb
push
fstps
std
jnp
mov
lea
adc
mov
lea
xor
mov
sar
fimull
and
adc
into
or
lea
insl
lret
dec
xor
pop
and
aaa
add
push
sub
ds
dec
sbb
dec
mov
call
dec
push
and
pop
ret
icebp
int
fcoms
jb
xor
or
das
es
inc
sbb
mov
pop
adc
or
pop
stos
cmpsb
pop
int3
jmp
jbe
jnp
mov
xchg
ficoml
jbe
arpl
pop
in
lods
xorl
adc
cmp
jl
repz
in
cld
add
into
xor
outsb
jge
sub
add
rcll
pop
sbb
or
add
pop
pusha
loopne
push
ds
pop
mov
add
xor
pop
or
or
add
push
lcall
jmp
jge
jp
incl
adc
sub
fmuls
lret
dec
xor
into
in
stc
push
out
sbb
idiv
lock
or
out
adc
imul
jae
adc
pop
sti
mov
jb
es
repz
clc
sti
sbb
dec
xlat
incb
add
adc
or
add
rorl
pop
iret
mov
adc
fistpll
testb
xchg
lret
cli
lret
inc
imul
push
mov
insl
add
shl
inc
imul
mov
fcoms
frstor
or
inc
hlt
add
cmp
pop
add
lea
loopne
or
inc
mov
ja
test
rolb
mov
std
inc
add
pop
and
int
cli
pop
loopne
aad
xchg
jmp
das
and
loopne
out
xchg
popf
jecxz
lret
xchg
mov
add
mov
adc
pop
jns
pop
outsb
arpl
jo
sahf
xchg
add
cmp
jp
popf
outsb
mov
dec
sti
pop
pop
adc
rcrb
fwait
ljmp
pop
test
push
inc
sub
in
jns
shrb
sub
pop
sub
ficompl
fldl
clc
add
into
adc
icebp
outsb
inc
fdivl
push
jmp
or
stc
lock
scas
jmp
dec
push
in
aaa
aas
fdiv
out
jge
outsl
cmc
xchg
adc
dec
or
add
loope
push
mov
scas
movsb
pop
in
dec
repnz
add
mov
iret
call
movsb
mov
jg
bnd
cltd
scas
loop
out
and
inc
mov
and
out
mov
idivb
add
pop
fimull
fisttpl
jecxz
sbb
stc
or
xorb
mov
cmp
xchg
decl
cli
loope
fisubl
jb
fisubrs
mov
sar
sbb
call
sbb
sti
add
adc
ja
add
jle
inc
mov
fsubrl
jno
aad
mov
push
mov
out
or
mov
dec
lcall
mov
ljmp
or
into
nop
call
and
stos
outsl
mov
sub
xchg
and
loopne
icebp
jecxz
lret
scas
insb
aaa
data16
fisubrl
and
out
fimull
neg
pop
mov
and
cld
lods
adc
ja
mov
scas
insl
push
ds
rcrb
fiadds
stc
icebp
push
movsb
mov
sarl
movsl
ret
dec
divb
loope
int3
pop
jmp
add
fistl
test
int3
fistpll
icebp
mov
push
popf
mov
xor
movsb
into
popa
jmp
push
mov
adc
sbb
add
into
jmp
std
out
and
or
jns
inc
cli
adc
inc
das
add
stc
adc
loop
test
pop
jmp
and
int
icebp
lahf
mov
lahf
insb
pop
andl
sbb
js
sbb
or
adc
mov
add
sbb
ljmp
xchg
mov
dec
call
jl
cmp
mov
pop
mov
lds
and
bound
inc
out
loop
out
xor
adc
scas
mov
mov
addr16
cmp
stos
in
into
dec
test
leave
iret
jg
repnz
xchg
jb
adc
inc
and
ficompl
movsb
ror
jne
rolb
filds
fsubrs
es
mov
in
mov
add
adc
add
push
mov
ret
cmc
add
cmp
cli
lcall
add
cmpb
lock
xchg
inc
jae
pusha
sbb
jmp
rclb
sub
insl
in
mov
into
add
dec
cmp
mov
das
lods
or
adc
lahf
stos
rcr
pop
sbb
sub
sbbl
ljmp
enter
adc
in
clc
shlb
aas
inc
mov
dec
xor
out
lods
sahf
jns
popf
push
adc
inc
test
lret
std
push
cli
repnz
je
sar
pop
roll
lcall
jp
movsb
aam
pop
cltd
pop
xchg
sub
mov
xchg
popa
push
or
and
cmp
xor
mov
jp
and
and
inc
jle
insb
incb
aam
std
outsb
lock
shll
nop
mov
add
cld
rcl
das
out
shl
int3
push
cs
lret
ss
lea
and
push
xchg
aad
pop
rcr
ja
data16
push
imul
jecxz
int3
cmp
cmp
gs
pop
in
sbb
out
fsub
les
mov
sahf
xchg
mov
cmp
mov
addb
mov
adc
stc
and
pop
push
lods
rclb
imul
rclb
xchg
fcmovbe
aaa
xor
ret
std
loope
aam
int3
int
ret
mov
mov
mov
enter
xchg
aam
cmc
sub
mov
sbbb
lods
lret
push
and
in
adc
mov
sahf
mov
mov
sbb
cs
loop
add
sbb
call
sub
adc
and
push
xor
xor
sbb
das
sbb
cli
aaa
pop
ljmp
add
xchg
xchg
xor
das
mov
fidivl
jge
xchg
push
and
fistl
ss
cltd
fsubl
add
inc
jo
jbe
subb
nop
inc
xchg
lcall
stc
out
push
aam
or
sbb
rcll
or
adc
int
add
xor
mov
out
popa
sahf
icebp
incb
cmp
shrl
cmp
dec
cwtl
or
fldcw
andb
cmp
popa
jge
cmp
popa
jge
cmp
popa
jge
cmp
popa
jge
cmp
popa
sbb
out
cmp
inc
mov
cmp
das
mov
adc
pop
fisubrs
bound
fmull
sti
mov
dec
ss
or
sbb
icebp
into
push
sbb
pop
xor
jb
pop
pop
xchg
in
mov
loop
imul
inc
push
scas
pop
push
fisubl
jge
cmc
out
call
and
dec
pop
test
mov
xlat
add
mov
mov
out
mov
xchg
js
in
push
mov
cli
testb
and
adc
rcrl
pop
sub
pop
jge
lcall
mov
aad
test
push
sbb
sarl
imulb
push
fmulp
dec
lods
sub
popf
addb
fcomi
or
int3
jns
pop
and
xchg
testl
in
sbb
loop
sbb
imul
mov
stc
pop
mov
scas
jge
lret
cmp
rcl
mov
mov
cmp
out
clc
adc
add
jle
jmp
or
push
shlb
dec
xchg
aad
fmuls
fiadds
jl
test
rcrb
adc
mov
insb
dec
into
call
loop
pop
pop
fadd
not
out
adc
mov
hlt
loope
or
repnz
into
jmp
outsl
sub
lods
fdivrp
aad
xchg
lret
leave
ds
mov
lea
push
mov
sbb
jbe
nop
add
shll
das
mov
cs
add
lcall
sbb
popa
std
arpl
sbbb
stc
jmp
mov
adc
rol
mov
cmp
gs
scas
out
dec
test
idiv
xchg
mov
push
fcoml
mov
sub
sbbl
in
mov
inc
test
jns
call
pop
cmp
pop
or
into
jmp
pop
sbb
pop
jmp
stc
sub
sbb
aam
imul
mov
stos
push
add
mov
jp
push
std
lods
inc
pop
test
arpl
xchg
xlat
daa
mov
pop
stos
inc
or
call
dec
or
push
in
mov
in
sub
add
jge
xor
xor
pop
xor
bound
cmpb
jl
ds
test
push
mov
adc
jmp
and
inc
and
pop
mov
cld
mov
mov
test
call
sub
mov
enter
sti
push
adc
or
or
dec
pop
arpl
sbb
cmpsl
rorb
sbb
ret
pop
add
and
cmp
std
fiaddl
clc
add
sbb
mov
push
sti
in
add
test
xlat
mov
cwtl
add
cld
mov
fidivrs
shlb
xchg
icebp
jmp
dec
std
xlat
outsb
xchg
mov
mov
test
jle
push
repz
flds
jecxz
out
push
mov
lret
pop
mov
jmp
push
int3
adc
push
icebp
add
out
icebp
sub
pop
movsl
dec
adc
or
inc
cli
or
sti
pop
or
jge
lcall
and
push
add
mov
das
sub
push
mov
lock
add
adc
test
in
shl
or
fdivs
jp
ds
into
pop
mov
mov
mov
adc
in
jno
xchg
pop
xchg
and
mov
mov
out
adc
jae
sbb
xchg
add
sti
ljmp
cmpsb
jmp
jl
in
push
fwait
or
jmp
adc
mov
ja
les
mov
rorl
test
out
outsl
xchg
popf
mov
repnz
cmpb
fstl
mov
shl
sub
popa
negl
mov
imul
imul
and
mov
fcoms
xchg
sbb
mov
out
sahf
jg
insb
cwtl
push
rcrl
and
mov
icebp
pusha
icebp
adc
sbb
dec
xchg
or
push
data16
mov
dec
cmp
jae
rorb
incb
ficoml
rcrb
aas
sub
clc
add
lcall
cmp
sub
fidivl
jo
dec
mov
imul
cmp
mov
loope
jmp
cmp
jae
add
pop
add
mov
in
jno
cltd
rolb
insl
popf
outsb
and
mov
aam
jp
cwtl
ljmp
shr
hlt
sbb
cld
or
cltd
sbb
sbb
sbb
push
xor
repz
ret
imul
outsl
lret
xor
and
and
mov
mov
cld
lahf
cs
rcrb
xchg
cli
mov
rcrl
jmp
inc
lods
mov
faddl
inc
out
or
pop
cmp
adc
xor
dec
jge
add
push
icebp
sub
es
cmp
mov
jnp
add
cmp
cmp
add
leave
outsb
jmp
dec
mov
push
cmp
into
rcll
lea
and
mov
loopne
dec
push
add
mov
mov
mov
adc
in
mov
mov
fisubrl
adc
add
sub
orb
adc
repz
dec
sub
loope
push
add
sti
je
lret
std
sub
imulb
fs
pop
fmuls
cmp
or
or
jle
lea
or
and
jg
mov
scas
or
iret
inc
mov
lret
cmc
jne
add
roll
addr16
sbb
pop
out
int3
filds
or
neg
frstor
add
sahf
fwait
lcall
xchg
scas
mov
add
mov
add
add
fnsave
or
add
fbld
mov
cmp
mov
shlb
or
mov
mov
ss
shlb
lods
pop
add
movsb
test
stos
into
mov
lds
aad
loopne
ljmp
lret
mov
and
popf
push
sti
xor
sub
xchg
xchg
scas
out
out
cltd
sub
mov
adc
loope
mov
shr
fs
mov
sub
faddl
sbb
jle
mov
mov
into
enter
cld
push
out
stos
ficoml
test
cld
add
loope
data16
adcb
mov
pop
push
or
sbb
mov
sti
cld
push
clc
or
into
or
out
jno
scas
add
faddl
mov
fidivl
into
int
xorps
out
neg
scas
das
cmp
mov
inc
xchg
enter
int
es
cmp
mov
testl
or
test
mov
or
pop
pop
dec
sahf
jle
xchg
lods
enter
xchg
daa
and
sbb
fists
ret
out
andb
fdivr
push
lret
lcall
mulb
fidivs
mov
cmp
stos
cmpb
sbb
shlb
stos
filds
pop
popf
repz
cmpsl
push
psubsw
push
add
mov
repnz
data16
adc
gs
jmp
add
lret
lret
fucomp
sbb
and
adc
rcll
pusha
and
push
inc
leave
xchg
lods
pop
push
mov
test
push
call
ret
add
mov
mov
scas
adc
shr
out
fwait
xchg
movsl
in
or
data16
mov
xchg
pop
jnp
pop
xchg
out
and
paddusw
adc
xor
sub
mov
out
adc
jmp
mov
nop
fsubl
mov
xchg
pop
push
mov
fstps
xor
push
or
hlt
ljmp
int3
cmpb
or
mov
loop
fstps
jno
adc
push
push
dec
dec
inc
push
ss
pop
pop
and
mov
cmc
sub
stos
mov
loopne
mov
pop
aad
sarl
jmp
add
xor
nop
jl
bound
sti
imulb
adc
adc
and
sbb
mov
loopne
mov
aad
shll
test
ljmp
out
stos
mov
insb
imul
cmpb
xlat
stc
aam
sbb
dec
insl
lea
pop
and
test
test
jne
je
sub
inc
inc
aas
or
xchg
mov
ror
out
add
mov
lods
push
pop
lcall
mov
inc
outsl
addr16
sbb
repz
sti
sub
mov
iret
lds
add
lret
subps
mov
test
add
std
or
xor
cld
pop
add
outsb
pushf
pop
fisttpll
sub
jo
int
clc
es
push
es
jb
jl
fxam
xchg
jmp
jno
add
push
inc
mov
fisttps
xor
std
cld
ljmp
popf
cmpsl
leave
rcr
std
sbb
popf
pushf
add
cmp
pop
sub
jg
call
bswap
mov
setns
lea
jmp
call
xor
sub
adc
icebp
add
or
mov
inc
mov
daa
in
add
fisttpll
and
sub
icebp
sti
cmpsl
mov
mov
movsl
mov
mov
cmpsl
inc
add
imul
ss
pusha
and
cmpsb
imul
negb
lock
lods
mov
shl
lock
jb
mov
cmp
cmp
mov
aam
call
sub
push
dec
and
sub
or
pop
cmp
push
xor
adc
cltd
pop
js
or
adc
pushf
stos
rcr
xchg
test
aam
movsl
xor
adc
fsubp
lahf
les
sub
sub
inc
cmc
add
sbb
out
shrb
in
daa
add
dec
inc
add
mov
lret
push
adc
cmp
out
add
cmp
add
push
and
data16
xor
cld
adc
mov
dec
inc
sbb
movsb
stos
fdiv
add
lret
movsb
xchg
xor
jns
bound
lcall
dec
xorb
mov
sbb
cmpl
les
int
xchg
sbb
mov
cmp
cmpsl
sub
push
jbe
mov
dec
imull
addb
mov
inc
cmp
mov
gs
or
cmp
mov
jle
jmp
sbb
or
fs
cmp
flds
push
int3
adc
sub
lods
lods
inc
iret
pop
add
pop
and
push
pusha
pop
nop
mov
clc
adc
dec
dec
mov
and
jg
mov
sub
mov
cmp
mov
out
dec
lea
inc
push
pusha
and
xchg
data16
mov
pop
mov
add
pusha
pop
sbbb
rclb
cmp
test
shr
and
lcall
xchg
and
call
lret
and
push
and
mov
sub
jo
add
cmp
shr
add
cmc
mov
dec
stc
add
pushf
movl
shr
mov
add
clc
pushf
cmp
pushf
pusha
lea
jbe
rcr
sub
btr
adc
mov
bsf
and
xchg
mov
movzbw
add
jmp
pushf
movl
pushf
jmp
rol
stc
cmp
cmc
movl
neg
movw
call
pushf
pushf
movl
pushf
movl
pushf
mov
pushf
pusha
lea
jmp
seta
lea
cwtl
jmp
mov
bswap
call
jbe
jo
adc
in
testl
push
out
xchg
pop
push
push
cmpsb
jg
movsl
test
sbb
ret
cmp
inc
lret
fmul
mov
rcl
je
or
sub
jns
test
pop
shlb
std
pop
jo
nop
scas
call
add
mov
xchg
mov
dec
push
gs
lea
addl
jne
push
inc
in
adc
or
ljmp
sub
xchg
mov
cmp
push
stos
in
out
fldl
push
scas
jl
mov
inc
adc
or
xlat
pop
push
xchg
mov
in
repnz
xor
xor
adc
lret
mov
jle
mov
jl
or
mov
adc
imul
sbb
pop
add
add
rol
movl
movsbw
lea
pushf
mov
movl
movw
pushl
popl
pusha
pushl
ret
cmp
xor
mov
xchg
sbb
jmp
push
inc
inc
jb
sub
mov
in
hlt
and
cmp
dec
jb
out
mov
pop
pop
js
cs
fcos
push
pushl
stos
popa
movsl
jmp
fldcw
rcl
adc
mov
cmpsb
mov
push
xor
push
xchg
dec
mov
push
pop
arpl
pop
mov
jmp
sar
push
pusha
rcr
lea
neg
or
rol
lahf
sub
aad
cmc
mov
push
adc
push
not
btr
push
bts
push
mov
cwtl
mov
clc
test
call
bt
cmc
mov
clc
add
cmc
test
call
call
call
call
jmp
cmp
pusha
lea
je
pushf
lea
jmp
jmp
push
movb
pushf
lea
ja
bswap
seto
push
setns
mov
call
cmp
cmc
or
push
pushf
lea
jne
xor
mov
bt
pusha
or
pushf
lea
je
call
movw
dec
stc
call
push
pusha
push
mov
mov
pushf
call
test
pusha
lea
je
jmp
pusha
movb
inc
mov
movw
lea
jno
inc
call
jbe
jo
adc
mov
out
xchg
pop
sbb
cmp
aaa
inc
lcall
out
test
lds
pop
push
xchg
popf
and
das
test
fimuls
arpl
cmp
mov
mov
fistpl
pop
mov
bndstx
cmp
xor
bound
xchg
mov
mov
jns
cmp
mov
inc
icebp
jnp
mov
es
cmp
jmp
fs
lock
jnp
mov
dec
push
xchg
mov
pop
xor
and
sub
std
jge
add
dec
mov
js
fstpl
mov
dec
sbb
out
xchg
scas
stos
mov
xchg
inc
add
cmpsl
push
sbb
and
cmpsb
mov
lea
jl
loopne
cmp
in
add
das
xchg
adc
mov
mulb
adc
pop
subl
insl
jecxz
mov
cmpb
mov
ds
bound
push
add
and
stos
cmp
push
xor
pop
jae
sbb
jo
arpl
push
mov
adc
xlat
fwait
or
cmp
adc
dec
push
sub
pop
xor
mov
push
in
cmp
fwait
lcall
and
lock
lret
out
lock
popa
es
dec
dec
idivl
mov
ljmp
fs
jae
xchg
fisttps
pop
pop
dec
and
adc
repz
jp
lahf
daa
push
lret
int
inc
dec
frstor
and
std
cld
cmp
jnp
jnp
dec
arpl
mov
push
rcr
jmp
sub
pop
push
das
repz
adc
int3
call
cmp
popa
addr16
clc
mov
cltd
lods
mov
nop
rcl
sub
in
int
call
fmull
mull
loopne
popf
xchg
nop
mov
sbb
mull
sub
pusha
ss
xchg
inc
or
dec
mov
sbb
or
ss
sahf
fwait
cltd
inc
or
icebp
pop
cmc
sti
pop
pop
insl
inc
insb
clc
idivb
pop
test
cmp
mov
push
push
stc
out
in
inc
ror
shrb
cli
clc
outsb
mov
xor
ja
leave
bound
mov
mov
icebp
jmp
pop
test
test
jmp
jmp
push
pushl
movl
pushf
pushl
push
push
lea
jmp
lods
lock
cmp
popl
loopne
xor
push
fadd
push
rcll
cvtps2pi
adc
jb
bswap
mov
arpl
or
push
adc
insb
or
xchg
mov
jecxz
add
incl
add
mov
xor
xchg
stc
push
pop
in
stos
cwtl
xchg
cmp
sub
or
mov
fildll
sbb
repz
stos
ror
in
test
dec
dec
aad
jp
popa
inc
push
inc
outsl
js
addb
mov
sbb
jecxz
xchg
mov
xor
pop
fbld
sarl
and
loop
dec
adcb
fsubrl
in
pop
xor
jb
fildl
jecxz
cld
clc
mov
inc
dec
lahf
sub
ljmp
fcmovbe
popf
out
and
push
leave
lcall
xor
xchg
or
pop
sbb
dec
int
sub
out
and
pop
arpl
sbb
bt
cmp
jmp
jp
je
adc
sti
sbb
mov
jle
scas
aad
icebp
xchg
rcrb
jmp
cmp
or
cmp
cmp
sub
icebp
out
or
nop
aam
ret
xorb
out
je
ja
mov
push
and
dec
pop
cmp
cmpl
jne
lea
add
sub
call
xor
sub
adc
sbb
dec
dec
jo
test
mov
pop
sbb
jnp
mov
cmp
fildll
jge
in
push
sub
jle
sti
or
mov
add
loope
mov
add
push
insl
inc
arpl
lods
cmp
push
pop
js
push
add
sbb
cmp
int
sbb
sahf
insb
bound
data16
pop
push
pop
sbb
addr16
inc
cltd
iret
jne
adc
movsb
mov
mov
pop
jmp
lock
rcr
call
add
sbb
push
and
sbb
fimuls
shrl
sbb
int
adc
or
pop
pop
cmp
inc
mov
sub
and
inc
push
imul
sub
cmp
aaa
adc
insl
push
xchg
movsb
lea
adc
lods
cmc
imul
and
pop
push
bound
in
jg
jo
fildl
dec
mov
add
and
mov
cltd
ret
or
sub
xchg
cmp
push
cmp
sbb
test
cli
jg
mov
or
adc
cmp
cmpsl
fistpl
push
xchg
pop
jo
mov
xchg
out
sbb
mov
fpatan
adc
xor
inc
scas
or
mov
mov
sub
pop
sub
push
pop
test
andl
in
cs
push
mov
sub
inc
pop
xchg
outsb
das
aaa
push
or
push
push
bound
ret
ret
xchg
and
insb
fcom
jmp
cld
lea
pusha
pushl
ret
cmp
xor
adc
xlat
icebp
out
pop
dec
push
pop
pop
movsl
pop
add
dec
jbe
mov
les
xchg
cmpsl
roll
xor
aaa
aas
adc
imulb
std
mov
cmp
push
adc
or
dec
sbb
icebp
sbb
sbb
popa
gs
mov
sti
push
in
lds
ds
out
movhps
push
dec
dec
mov
nop
jl
push
mov
adc
pop
inc
push
insl
outsl
dec
push
sbb
in
push
fsubl
pop
arpl
lds
mov
das
pop
imul
dec
les
mov
inc
in
mov
into
adc
sub
mov
add
mov
sub
and
int
jbe
arpl
xchg
cmpsb
pushf
sub
mov
mov
in
stos
lea
dec
inc
cmp
lcall
fld
lods
push
jmp
xchg
mov
pop
push
cs
outsl
inc
gs
cmp
jl
nop
aam
inc
dec
sub
mov
cmp
into
test
push
mov
fisubrs
dec
pop
jg
xchg
stos
mov
out
xchg
stc
js
daa
or
or
jae
call
add
sbb
mov
aas
popa
imul
fsubl
jle
scas
sbb
gs
inc
in
out
or
lret
icebp
sbb
rcll
jo
inc
xor
and
imul
push
push
dec
mov
hlt
lcall
mov
jl
push
dec
jns
ret
adc
test
xchg
adc
pop
and
jnp
andb
xor
cmpsb
shl
jle
stc
addr16
ret
leave
lret
in
imull
pop
adc
add
lcall
scas
cmp
push
cs
cwtl
inc
icebp
mov
lret
fnsave
mov
pop
jecxz
clc
mov
scas
stos
or
jg
or
sbb
push
push
sbb
mov
sub
pusha
push
mov
mov
mov
pop
jecxz
add
lret
xor
pop
pop
mov
add
push
or
in
sbb
fiaddl
sbb
or
stc
clc
xchg
out
mov
jo
jmp
mov
sbb
test
aas
cmp
xchg
pop
xchg
mov
pusha
cs
enter
sub
jecxz
mov
push
mov
jno
push
dec
outsl
cltd
lods
mov
insb
sbb
sub
test
xor
cmpb
test
hlt
or
pop
pop
mov
popa
push
jnp
mov
pushl
jo
adc
arpl
jecxz
out
add
sbb
scas
mov
rcll
call
mov
outsb
lcall
sbb
mov
jge
push
fcmovnu
pop
insb
xchg
mov
add
dec
mov
push
or
push
push
mov
dec
adc
cmp
movsbl
movsbw
mov
push
add
movb
mov
add
jo
test
push
jmp
aam
inc
sbb
mov
cmp
pop
jb
jbe
xchg
mov
mov
add
dec
or
cmpsb
dec
cmp
xchg
sbb
rcrl
adc
jle
aam
mov
xlat
popa
popf
ss
sub
push
mov
repnz
outsl
jne
aaa
pop
sahf
in
jno
nop
scas
insl
test
push
mov
cmpsl
mov
xor
dec
fildl
out
mov
pop
add
lea
je
pusha
pusha
lea
jmp
setne
jmp
adc
movb
movb
movb
pushl
ret
setl
mov
pushf
lea
jle
pusha
bt
mov
pushf
mov
pusha
stc
bt
pushf
rol
pushf
inc
push
bt
clc
stc
ror
mov
call
fistl
sbb
mov
xor
xor
xchg
fwait
stc
inc
arpl
mov
adc
hlt
dec
popf
fwait
leave
enter
sub
jb
xor
lods
stos
mov
sbb
dec
dec
sbb
pop
adc
sub
jo
dec
cmpsb
mov
ds
adc
clc
adc
push
aam
sbb
fstps
cltd
xchg
aad
pop
pop
push
sbb
mov
jle
mov
xchg
xorl
pop
mov
xchg
adc
cmp
jl
dec
cmc
jmp
fcmovu
push
lods
dec
fbstp
adc
pop
aad
js
add
adc
cmp
jns
inc
mov
aas
out
sbb
mov
out
in
or
sbb
inc
jnp
sbb
push
pop
inc
cmp
sbb
test
xchg
mov
js
mov
dec
xchg
jne
mov
bswap
lahf
lahf
not
lea
mov
jmp
jae
cmp
call
call
call
push
jmp
mov
fsubp
sub
and
dec
inc
fs
pop
insl
and
cmp
es
push
clc
popf
ret
flds
int3
adc
pop
xchg
and
cmp
jecxz
dec
call
cwtl
dec
sbb
sahf
stos
andl
sub
inc
icebp
mov
jl
in
mov
cli
xor
ljmp
sub
pop
mov
loopne
clc
push
push
sbb
std
ja
out
in
mov
hlt
sub
int3
enter
flds
xor
in
adc
mov
xor
push
sbb
cmp
sbb
mov
adc
outsl
in
insb
imul
int3
cmp
insl
jecxz
push
mov
and
ds
jb
data16
cwtl
das
cmpb
sbb
adc
push
jns
leave
or
inc
cmp
mov
popa
out
push
adc
test
call
jmp
stos
pushf
pop
push
mov
fdivr
cmp
jg
pop
sbb
inc
cmc
hlt
or
push
xchg
or
hlt
and
stc
daa
pop
outsl
jnp
lret
ror
jmp
jecxz
sbb
jns
std
inc
pusha
mov
adc
loop
push
jne
pop
push
push
lock
sbb
hlt
adc
mov
lret
aad
pusha
pushw
in
out
push
dec
nop
rcl
inc
cmp
push
push
push
test
jl
sub
scas
jns
pop
push
add
adc
or
pop
pop
push
and
or
jmp
sbb
and
fwait
int
int
and
pop
int
fldenv
das
sbbb
push
rcl
dec
lock
dec
mov
sbb
rorb
or
lret
test
mov
mov
cmp
xor
push
mov
xchg
test
mov
add
popl
and
movsl
movsb
or
shrb
cmp
movhps
lea
mov
js
ror
insl
lahf
iret
inc
pop
pop
sub
or
daa
mov
and
addr16
addr16
mov
leave
mov
pushf
inc
xor
scas
mov
xor
sub
jns
das
mov
imul
int
adc
nop
jl
push
add
inc
inc
inc
adc
jecxz
adc
xor
jb
pop
or
lods
cmp
out
das
push
jg
sbbl
xchg
popf
mov
dec
and
ljmp
outsb
je
add
test
cwtl
mov
pop
lods
cmp
out
aas
jae
xchg
movsb
mov
gs
push
jecxz
sbb
add
out
push
sub
adc
xchg
lret
xchg
mov
ret
mov
cmpb
lods
int3
hlt
lock
dec
mov
dec
sbb
movsl
pop
mov
std
das
cmp
inc
inc
in
cltd
imul
sbb
adc
and
outsb
pushf
mov
cli
push
push
cmp
rcr
cli
sbb
and
xchg
cmpsl
mov
adc
mov
mov
mov
aam
rcll
mov
cmc
sbb
dec
hlt
mov
out
add
sub
cs
xor
pop
push
adc
mov
stos
into
test
dec
movsb
sahf
enter
xchg
jo
mov
jns
outsl
xor
icebp
loop
test
adc
adc
ds
mov
pop
pop
aad
push
testb
clc
mov
loopne
xor
xor
pop
js
pushf
mov
stos
add
ss
pushf
dec
mov
stc
stc
clc
rol
cmc
xor
bt
call
jmp
in
call
stc
add
bt
bt
mov
mov
cmc
ror
mov
jmp
stos
setb
mov
call
pusha
jmp
jmp
inc
mov
leave
jecxz
sub
sub
adc
pop
sub
and
add
div
and
adc
dec
popa
arpl
cmp
insb
xlat
add
mov
jge
lock
sbb
enter
xchg
xorl
inc
lret
sub
jb
lcall
and
data16
or
push
lea
je
xchg
lea
call
out
fs
adc
mov
les
in
cld
and
add
inc
inc
push
xor
inc
cmpl
lds
pop
inc
lahf
mov
es
lock
fwait
adc
xchg
outsb
mov
out
xor
mov
or
inc
jmp
lea
je
pusha
bt
add
pushf
jmp
bswap
shrd
add
shrd
stc
cmp
mov
sar
inc
mov
cmp
repnz
jmp
imul
gs
xor
cs
insb
add
shlb
adc
add
xor
stc
adc
xor
push
pushl
ret
stc
jmp
stc
call
inc
call
movl
jmp
push
call
dec
test
sar
bt
neg
neg
bt
jmp
lea
jne
jmp
add
sub
dec
mov
pusha
shr
cmc
pusha
cmp
push
push
lea
je
pusha
jmp
call
mov
call
call
jmp
pushl
lea
mov
push
pushf
pusha
lea
jmp
shr
shrd
mov
shl
shl
add
movsbl
pushf
lea
call
cmc
adc
rcl
mov
push
cmpb
pushl
pusha
lea
jne
or
or
xor
shld
clc
rol
clc
mov
cmp
add
xor
mov
bt
clc
cmc
push
test
movw
jmp
movb
rol
clc
mov
sub
test
jmp
fcmovu
aam
adc
test
sahf
rcl
lock
sub
ror
pop
fwait
cwtl
cmpsb
mov
cmp
sub
nop
adc
cmp
adc
dec
dec
push
push
addr16
outsl
mov
scas
cltd
cwtl
xchg
adc
mov
cmp
fistl
into
pop
stc
stos
mov
adc
and
jae
cbtw
mov
or
xor
and
dec
orb
mov
lahf
mov
lods
mov
ret
sbb
or
repnz
rorb
insb
lcall
mov
inc
loopne
dec
sub
lea
xchg
mov
sbb
xchg
xchg
dec
sub
mov
dec
popa
iret
lds
xor
stos
mov
mov
js
test
mov
bt
rol
call
call
inc
stc
cmc
call
pushf
call
add
dec
outsl
popa
fs
imul
add
fdivr
xor
mov
pushf
cmp
sub
jmp
mov
jmp
movb
mov
mov
movb
pushf
pushf
push
lea
jmp
call
test
or
inc
pop
test
push
rcl
and
mov
mov
inc
popa
outsl
popf
xchg
lea
mov
pop
cmpb
fmull
lds
and
push
lods
inc
xchg
pop
xchg
pop
inc
fsubr
push
cs
data16
mov
mov
cmp
xor
popa
ja
lahf
lods
mov
ret
in
adc
sbb
sub
jle
movaps
gs
icebp
jge
mov
lods
ror
adc
cmc
push
bound
out
in
out
stos
pop
pop
fildll
mov
enter
btc
jecxz
add
inc
push
cmpsb
insb
out
out
shl
jnp
push
dec
dec
cwtl
dec
pop
popf
mov
cltd
xchg
mov
inc
pop
imul
pop
push
jns
lods
in
jp
jl
mov
jmp
scas
scas
test
xor
inc
ds
push
push
push
push
dec
lcall
pop
dec
jns
cwtl
in
rcr
push
add
cmp
push
mov
lret
sbb
and
jns
repz
push
jb
adc
lods
cmp
mov
jecxz
cmp
daa
lods
mull
daa
es
icebp
mov
jecxz
xchg
jg
pop
pop
and
jae
stos
cmpsl
mov
lret
fists
mov
or
xchg
seta
lea
pushf
pushl
lea
jl
pusha
mov
not
pushl
popl
call
lea
je
clc
sub
clc
cmc
cmc
cmp
pusha
lea
ja
push
bt
imul
jmp
movzbw
mov
push
pushf
pushl
lea
call
push
pushf
lea
jne
push
mov
cwtl
mov
push
lea
jmp
cmp
mov
pushf
push
pushf
lea
jb
bt
bt
jmp
outsb
ret
mov
inc
imul
lret
loope
push
jl
and
insb
mov
push
adc
sbb
dec
push
mov
popf
cmpb
mov
adc
adc
inc
push
adc
adc
sti
sub
popf
cmpsl
int
int
in
cmp
scas
fbstp
mov
adc
fldl
jns
xchg
xor
mov
xlat
lods
mov
out
jle
icebp
insl
hlt
repnz
cmp
adcb
jecxz
sub
push
and
test
test
sub
rcrb
sub
pop
loope
test
lods
in
cmp
subb
xor
xor
ds
pop
adc
mov
xchg
enter
enter
and
dec
lods
sub
push
dec
pop
test
cmp
pop
push
sbb
stc
mov
incb
pusha
mov
push
sbb
ss
dec
pop
mov
dec
outsb
mov
std
sbb
inc
push
or
shll
sbb
call
pushf
not
mov
mov
call
push
pop
push
or
mov
sub
xchg
mov
push
popa
push
rclb
cmp
out
sbb
and
scas
fldpi
in
out
lds
push
cwtl
in
or
adc
sub
mov
adc
add
jo
mov
xor
loop
dec
aad
mov
and
inc
call
xorl
jns
mov
stos
sbb
jp
jl
mov
dec
dec
xorb
pop
jge
sub
pushf
popw
call
popa
pusha
pop
or
mov
pop
js
movsb
sahf
pushf
mov
adc
sbb
or
lods
ja
jnp
pop
mov
lds
pop
jle
xchg
or
cmp
aas
dec
roll
xorl
xchg
mov
lret
sub
xchg
aad
in
scas
std
dec
push
jnp
not
mov
bswap
pushf
mov
pushf
lea
jmp
in
fimuls
adc
leave
lret
loope
or
cmp
mov
lcall
cmpsb
sbb
jg
nop
gs
cmp
mov
bound
sub
hlt
dec
jb
pop
lods
loopne
and
jnp
push
and
fldl
add
xor
xor
out
push
test
jne
popa
pop
and
mov
dec
xchg
shlb
sbbb
in
out
ljmp
movsl
sub
pop
data16
push
push
xor
push
scas
fsubr
adc
push
or
mov
movsl
mov
xlat
jmp
xlat
fnstsw
push
ror
rorb
xchg
ret
add
movsb
lcall
out
cmp
outsb
mov
pusha
cld
adc
push
cltd
daa
ja
sub
push
dec
es
outsb
xor
pop
and
inc
out
test
xlat
jle
fwait
xor
int
jmp
popf
mov
fadds
fildl
fstp
xchg
ret
pushf
call
cmpsl
ja
fidivrs
xor
dec
insb
insb
mov
faddl
sbb
jg
repz
mov
sbb
pusha
push
lea
jmp
sub
btc
mov
stc
bt
call
mov
call
jge
int
adc
loop
push
push
outsb
js
stos
ret
lret
sbb
je
sbb
mov
or
jmp
stc
fcom
mov
adc
sub
xor
or
pushf
lods
es
mov
push
or
sar
testb
adc
iret
into
test
xchg
add
mov
loope
sbb
xor
movsl
faddl
das
fwait
and
dec
js
call
clc
cmp
add
cmc
stc
mov
pusha
test
jmp
sti
jno
or
mov
flds
and
addr16
jae
outsl
dec
push
mov
pop
dec
or
rolb
jbe
incl
mov
and
sub
data16
mov
arpl
mov
mov
push
push
xor
sub
jp
xchg
xchg
stc
aad
std
cmp
sub
das
mov
fimuls
adc
mov
daa
xor
dec
fisubrl
mov
idivl
das
jbe
rcrb
mov
cmp
cmp
int
mov
idivb
xchg
sarl
inc
jl
divl
inc
push
or
addb
mov
mov
out
repz
mov
lds
push
dec
les
adcl
sub
outsb
jge
jecxz
adc
and
pushf
add
das
cmp
rorl
sub
sbb
mov
push
push
push
push
aam
or
decb
xchg
mov
lahf
or
lods
xchg
stos
jo
jl
rcr
fdivr
sbb
sbb
insb
insb
loop
fiaddl
mov
push
pushf
jmp
push
pusha
jmp
sub
pusha
push
pushl
rep
call
or
test
mov
clc
bt
repnz
jmp
test
add
call
not
pushf
pushf
movw
pushl
dec
bt
ror
movw
call
movb
movl
pushl
call
inc
cwtl
xchg
push
adc
jbe
cmpsb
mov
mov
imul
dec
stos
hlt
fsubrs
dec
jle
in
jnp
inc
lret
nop
mov
pop
cmp
jno
ljmp
inc
jno
and
test
rclb
dec
lcall
mov
cmp
pop
in
popf
fwait
jmp
inc
push
pop
and
add
fmull
fmull
sub
sub
and
adc
mov
and
add
xchg
xchg
movsl
ret
mov
mov
pusha
dec
pop
pushf
into
or
adc
sbb
outsb
sbb
flds
pop
pop
xchg
icebp
add
call
push
xor
mov
mov
aas
inc
arpl
mov
in
pop
push
fdivr
sub
icebp
add
add
add
addb
add
mov
add
add
sbb
add
inc
adc
adc
test
add
push
add
add
add
mov
cld
mov
push
pusha
rep
movzbl
jmp
dec
dec
inc
push
adc
cmovno
jg
mov
loop
mov
lahf
cltd
mov
jne
insb
lcall
leave
enter
lret
xchg
mov
int3
jo
jae
jl
stos
hlt
repz
jle
xlat
out
aad
or
adc
jnp
outsb
sbbl
or
inc
add
push
mov
xchg
lcall
mov
xor
out
call
sti
ficompl
or
pop
mov
xor
test
adc
mov
lea
jne
shld
movzbw
cmp
movzbl
mov
pushf
call
nop
mov
sub
bound
out
movsb
fdivrs
push
cmpsl
fabs
fisttpl
lods
lret
std
and
xor
push
mov
cs
jmp
inc
adc
out
push
or
fcmovnu
int3
mov
pop
loop
mov
out
mov
mov
test
stos
aad
mov
mov
xchg
out
jmp
fs
ss
or
jae
bound
push
adc
jg
jg
mov
rcll
stos
or
dec
lock
xchg
xchg
fstp
pusha
mov
pop
adcb
cmpsb
push
enter
and
or
pusha
jmp
rol
movb
inc
call
iret
into
leave
add
mov
xchg
xchg
movsl
scas
loope
push
or
addr16
xor
jp
clc
bound
or
dec
inc
pop
data16
sub
mov
repz
xchg
daa
es
cli
xlat
rorb
inc
sbb
inc
icebp
popf
or
out
cmc
sti
mov
lods
rcl
lock
push
fwait
mov
rcrl
mov
jl
aas
arpl
outsl
mov
aas
inc
pop
pop
ret
das
add
add
sbb
dec
push
bt
neg
call
dec
mov
inc
dec
push
push
dec
outsb
mov
push
xor
pop
xor
lods
int
test
xor
addr16
movq
jnp
or
push
add
lock
popa
or
sbbb
mov
out
mov
mov
test
dec
push
jp
add
in
icebp
out
in
ljmp
dec
push
xor
mov
icebp
mov
fildl
jnp
pop
pushf
scas
shl
pop
pop
push
in
sbb
mov
cs
pop
adc
cmp
jnp
ret
int
das
pop
aam
dec
sub
pusha
or
popa
sbb
xchg
movsb
mov
mov
pop
and
idivl
mov
jle
mov
leave
les
cli
insl
push
in
sbb
pop
cmp
add
and
repnz
push
je
outsl
sbb
out
in
mov
mov
pop
mov
xchg
pop
mov
in
or
inc
pusha
pusha
xchg
inc
aam
or
and
adc
or
pusha
jmp
movl
pushf
mov
movw
lea
jmp
lea
jae
cmp
add
push
pusha
mov
mov
movw
pusha
lea
jmp
pop
pop
pushf
pusha
pushl
pushl
ret
add
dec
gs
popa
addr16
outsl
js
add
ret
adc
mov
hlt
or
sub
cmp
insb
adcb
daa
and
xor
mov
std
cli
add
outsl
xlat
test
mov
fsubs
cmc
repz
int3
add
xchg
ds
dec
dec
sub
inc
ret
loopne
or
inc
into
adc
or
imul
cld
cli
mov
movb
mov
orb
xor
mov
loop
pop
add
pop
int
sti
jo
jo
movsb
mov
call
inc
pop
jl
sbb
inc
sub
inc
dec
add
fs
je
test
bt
pushf
cmp
movb
lea
je
pusha
cmp
call
add
inc
gs
outsl
fs
gs
imul
add
call
pusha
push
lea
jmp
push
ror
cld
call
pushf
call
mov
rol
stc
stc
sub
mov
clc
movb
neg
stc
add
call
js
jmp
hlt
ljmp
jo
mov
jecxz
mov
cmp
bswap
xchg
ljmp
ljmp
push
push
outsb
jp
cmp
push
xchg
mov
fsubl
add
movsl
aad
cmc
or
jecxz
std
notl
sbb
or
in
pushw
ja
pushf
movb
lea
jmp
pushl
popl
pushf
mov
pushl
ret
call
pushf
cwtl
mov
pushf
pushf
pusha
pushl
lea
jmp
lea
jne
shr
sub
jmp
lret
lret
adc
dec
insb
jb
mov
loopne
cmpsb
mov
jg
cmp
mov
adc
into
ja
push
iret
add
or
jbe
faddl
mov
sahf
fsubr
cld
stc
repz
mov
fwait
mov
movsl
sbb
in
fidivrs
mov
int
adc
push
dec
push
mov
loope
jmp
jecxz
fidivrl
push
push
cmpb
movsl
mov
mov
jl
outsb
icebp
cmp
cmp
jno
fs
js
jo
mov
xor
push
and
jae
pop
fwait
cwtl
xchg
fcmovnu
aad
inc
pop
fwait
lock
dec
ljmp
mov
out
leave
stc
loope
dec
jb
and
add
push
test
inc
cmp
loop
mov
lahf
sahf
dec
mov
mov
pop
push
sbb
test
push
scas
scas
mov
popf
shr
ret
adc
out
dec
xchg
ljmp
inc
test
cmp
aas
aam
jp
cmpsl
mov
dec
outsl
lock
mov
shl
mov
shlb
push
lods
loope
scas
or
cltd
test
pushf
mov
pushf
stos
faddl
push
and
scas
xor
and
jnp
mov
out
or
jnp
mov
mov
push
test
into
imulb
adc
test
jmp
mov
mov
pushf
lea
jae
movzbw
pusha
mov
not
mov
call
xadd
bswap
add
cmp
lea
not
xor
mov
or
pushf
xor
add
and
ror
jmp
aad
inc
call
mov
pminsw
xchg
repnz
aam
mov
add
jo
js
pushf
cwtl
push
test
enter
mov
fildl
loopne
jg
lock
add
test
fsubl
icebp
dec
arpl
cmp
outsb
mov
ret
xchg
xchg
xchg
push
mov
pop
mov
mov
mov
loop
mov
movsb
fsubr
add
cmp
lods
fcom
sarl
mov
pop
mov
movzbl
mov
pushf
pusha
pushf
lea
jmp
inc
mov
cmp
xchg
mov
pop
sub
inc
and
mov
scas
mov
ja
dec
xchg
push
mov
cld
jno
xchg
test
mov
loop
stc
cmp
int
stc
adc
adc
mov
repz
lods
xor
add
fiaddl
je
and
fs
jmp
mov
mov
adc
mov
sbb
jb
mov
mov
mov
in
mov
pop
fsub
in
push
mov
cmc
adc
test
mov
inc
dec
movsb
mov
xchg
and
lock
movsl
lret
mov
shl
sahf
push
dec
pusha
and
cs
mov
cmc
sbb
cmp
xor
je
pop
outsl
xchg
das
push
addr16
call
xchg
gs
imul
bt
cmp
mov
pusha
lea
ja
test
pushf
test
cmc
add
sub
call
lea
jne
bt
and
bt
mov
call
lock
and
adc
fsubrp
push
sub
dec
inc
dec
jb
test
ja
mov
fmul
test
stos
inc
mov
jo
mov
loopne
dec
inc
pusha
xchg
mov
cmp
roll
hlt
out
sbb
jb
mov
loop
push
inc
inc
lods
scas
std
mov
xlat
push
lea
jb
clc
cmp
cmpb
pushf
jmp
jmp
pushf
movl
jmp
push
lret
adc
jns
movsl
ret
icebp
jmp
adc
xor
mov
jecxz
cmpsl
mov
aam
sbb
mov
add
inc
push
xchg
or
mov
inc
xchg
jl
out
add
mov
xchg
lahf
cmpsl
insb
push
jecxz
push
out
adc
xchg
jae
push
insb
cwtl
cmpsb
imul
xor
vpaddw
add
jo
sub
mov
inc
or
pop
pop
xchg
mov
sub
mov
out
xor
pusha
inc
pop
pop
or
and
inc
inc
or
out
cmp
and
and
inc
inc
and
out
xchg
jp
je
xchg
gs
int
outsl
in
loopne
sbb
pushf
mov
or
je
xor
std
inc
dec
jg
fldl
add
add
mov
inc
and
in
in
fwait
mov
movb
lea
jmp
lea
jae
pushf
lea
jmp
cmp
xor
popa
jg
sbbl
inc
push
cmp
pop
mov
adc
ljmp
cmpsl
cmp
push
aaa
repz
pop
sub
push
sub
lret
mov
stos
or
ficoms
mov
lea
mov
cmp
imul
rcl
bound
fdivr
cmc
pushf
jmp
pusha
and
test
add
lea
call
pushf
movl
mov
lea
jmp
pushf
pushl
popl
pushf
not
mov
cwtl
movl
cwtl
sets
movsbw
bswap
lea
jmp
push
lea
lahf
movb
lahf
jmp
je
pushf
push
pusha
movl
lea
jns
pushf
movl
pushf
lea
jmp
pushl
popl
pushf
mov
mov
movb
pushl
ret
push
or
xchg
mov
xor
dec
adc
outsl
and
data16
xchg
add
mov
sbb
jns
aad
in
or
sub
jl
sub
or
cli
adc
inc
dec
push
dec
dec
es
push
jno
sahf
inc
add
decl
ljmp
add
int
mov
lcall
xchg
pushf
addb
add
lods
jo
pop
or
test
daa
imul
into
mov
xchg
scas
int3
lcall
xchg
mov
push
push
push
or
inc
stos
sti
stc
adc
mov
cmp
xchg
arpl
fwait
sbb
out
in
or
mov
adc
xchg
and
xchg
add
push
push
push
mov
fistps
adc
loope
je
shlb
es
pop
jb
je
pop
pop
daa
lcall
fsub
insl
std
data16
imul
and
pop
js
or
inc
xor
xchg
scas
fistps
sub
cmpsl
ret
cmp
data16
jmp
push
pushf
and
pop
ja
xchg
popa
pop
pop
pushf
stos
test
push
jge
jne
or
inc
pop
sbb
adc
fstl
ljmp
js
movsb
cmpsb
mov
fadds
add
ds
ss
test
mov
dec
sbb
ljmp
das
lods
test
test
mov
js
sbb
pop
pop
sbb
sahf
mov
jo
bound
xchg
add
lahf
mov
pop
pusha
pop
pop
mov
out
cmc
into
push
lret
hlt
push
sub
paddsw
cmp
push
repz
pop
sub
dec
dec
imul
cmp
cmc
test
adc
sbb
sbb
lret
movaps
mov
cmp
mov
cld
xlat
fwait
adc
and
lcall
dec
dec
fmuls
mov
mov
and
lahf
jne
lock
icebp
jno
fcompl
pusha
push
xor
fdivrl
notl
out
mov
in
mov
adc
lds
jae
push
pop
sbb
mov
push
sub
sbb
rorl
fsubs
mov
or
push
jno
inc
lret
rcrl
push
push
mov
sbb
mov
jl
or
testb
pop
dec
js
jnp
roll
outsl
call
and
dec
xor
pextrw
inc
cmp
lret
or
mov
mov
and
clc
cmc
repz
clc
sbb
rcrl
int
mov
gs
mov
sahf
dec
bound
mov
lods
jmp
pop
xchg
mov
xor
or
cmp
fwait
stos
pop
pop
push
jle
mov
test
pushf
rol
cmp
sub
clc
cmc
test
neg
mov
pushf
test
clc
add
bt
ror
pushf
lea
call
jmp
mov
pop
imul
jp
xchg
inc
mov
sub
fcomip
mov
sbb
push
pop
inc
inc
sbb
and
xor
dec
insb
insb
mov
mov
ds
imul
bound
sarl
push
insl
loop
add
insb
js
jl
or
sbb
cltd
xchg
cmc
adc
dec
push
subb
mov
cld
jb
sarb
jecxz
addb
push
addr16
fwait
leave
jmp
adc
aaa
popa
mov
xchg
mov
or
jge
and
mov
fmuls
and
push
jl
fdiv
adc
sbb
test
and
mov
mov
pop
xchg
push
mov
push
movzbw
call
stc
cmp
neg
cmp
add
movb
ror
cmp
jmp
xchg
or
xchg
xchg
mov
xorb
fistpl
scas
int
rcrb
mov
jecxz
pushl
pop
gs
lea
popa
sbb
sbb
jns
push
mov
or
dec
jp
or
sub
pop
xor
out
sar
decl
jecxz
lcall
dec
cmpl
push
xchg
inc
out
mov
frstpm(287
xchg
push
fucomi
decl
ljmp
stos
dec
dec
pop
lret
rclb
cmp
inc
jecxz
test
pop
jne
shr
adc
lret
cmp
mov
out
jae
lods
mov
les
mov
push
insb
nop
mov
arpl
mov
gs
inc
inc
xchg
clc
and
mov
push
xchg
mov
out
add
icebp
adc
pop
inc
jo
push
in
push
addb
xor
inc
dec
je
outsl
xlat
push
sbb
mov
pusha
lea
jae
xchg
mov
mov
jmp
mov
pushf
pushf
push
pushl
lea
jmp
cmc
ror
cmc
cmp
push
shr
call
movl
push
pusha
call
cmp
repz
and
popf
xchg
or
sub
inc
mov
addr16
pop
push
js
sarb
xor
inc
cmp
dec
fs
push
cs
mov
add
mov
mov
lods
addr16
stos
les
frstor
insl
movsb
inc
data16
mov
mov
imul
inc
stos
inc
push
fsubrp
or
fildll
xor
movl
pushf
call
lods
and
pusha
jp
jle
lcall
cmp
xor
sbb
mov
mov
shrb
popf
enter
pop
call
mov
rcr
fcomps
sub
mov
sub
push
sbb
lea
mov
std
mov
xchg
scas
ret
loop
pop
and
call
cwtl
mov
pushf
lea
jmp
movl
pushf
lea
jmp
movzwl
not
lea
call
adc
pushf
lea
jmp
adc
or
adc
ss
dec
pusha
subb
mov
xor
mov
adc
pop
mov
xlat
int
sbb
inc
mov
inc
mov
cmpsl
popf
xchg
mov
ja
mov
leave
push
scas
std
add
xchg
nop
mov
adc
cmp
pop
and
out
mov
mov
lds
push
push
insl
insb
adc
add
inc
or
sbb
xor
sbb
outsb
movsb
jno
push
jmp
jg
push
mov
jle
add
xchg
xchg
adcl
pop
fcom
xchg
or
insl
xchg
nop
mov
int3
ljmp
and
or
and
imul
loope
icebp
jmp
lea
aas
aaa
jl
and
dec
xchg
dec
push
cmc
cmc
or
pusha
jmp
pusha
pushf
movl
call
je
icebp
adc
and
jne
dec
and
repnz
fcmovu
mov
mov
dec
push
je
mov
mov
adc
fisubs
mov
mov
pushf
test
inc
pop
sbb
sbb
inc
jle
lcall
add
hlt
fldt
popa
arpl
xor
jge
stc
sti
inc
inc
jecxz
or
lahf
pushf
sahf
stos
stos
xor
call
sbb
sub
sahf
movsl
inc
in
or
subb
pusha
insl
insb
les
into
lret
icebp
std
loop
shr
or
sbb
in
paddusw
mov
pop
jb
xchg
xchg
fcmovu
push
push
es
iret
dec
push
movsl
mov
out
das
notb
pop
lahf
mov
shll
push
adc
iret
cmc
pop
pusha
jp
jb
lcall
pop
pop
lds
dec
ror
roll
pop
div
lock
dec
push
test
shll
inc
push
push
or
pop
xchg
mov
insb
xchg
sub
mov
insl
repnz
not
jle
push
push
dec
es
push
pop
cmp
and
push
int
mov
popl
nop
jle
arpl
int3
cld
into
test
xor
addb
cmp
xchg
jmp
lret
nop
mov
adc
sbb
and
cmp
test
int3
add
push
or
outsl
push
stc
rol
jmp
movl
push
neg
pusha
stc
mov
call
movl
lea
ja
mov
not
jmp
femms
or
adc
lock
pushf
xchg
insb
xorl
adc
shll
dec
mov
test
lahf
outsl
mov
imul
addb
aad
sbb
roll
inc
repz
repnz
mov
btc
mov
test
or
jmp
mov
mov
adcb
push
add
in
in
mov
fwait
xchg
xchg
cmp
add
inc
or
pop
sub
dec
pop
push
xorl
das
push
ja
jl
js
lret
jmp
lea
jg
rol
pushf
cmp
jmp
push
lret
out
adc
rcl
and
push
dec
inc
imul
gs
pop
fdivr
outsl
jns
jg
or
insl
dec
or
jnp
jne
pop
pop
cmc
femms
jbe
sti
pop
into
enter
cmpl
xor
mov
add
stc
clc
cmp
jmp
pop
push
jmp
das
ja
mov
cmc
ja
pusha
cmp
shl
jmp
pushf
call
clc
ror
jmp
jmp
call
fldcw
sub
adc
sbb
dec
push
dec
outsb
insb
push
loopne
cmp
and
cmp
ja
add
stos
mov
mov
in
ffree
aam
ret
sahf
pop
or
xchg
nop
mov
outsb
repz
mov
enter
mov
loopne
fcmovnu
cli
sbb
test
popf
test
pushf
mov
outsl
jno
cmp
inc
lock
clc
sbb
iret
xchg
xchg
add
jge
xlat
in
fisttpl
mov
lret
stos
mov
and
xchg
cmpsl
jmp
push
mov
xchg
mov
fs
mov
mov
lea
jmp
pushf
pushf
lea
jae
movsbl
mov
bswap
setbe
mov
call
adc
pushf
lea
call
pusha
push
call
jmp
leave
inc
mov
sarl
mov
mov
leave
inc
mov
leave
lret
inc
mov
inc
stos
mov
inc
lret
xchg
mov
inc
mov
mov
cmpsl
xchg
inc
dec
movsl
test
mov
movsbw
lea
not
lea
mov
call
lea
je
jae
adc
push
lea
jmp
movl
movzbl
lea
lea
pushl
movl
push
pushf
pushl
popl
pushf
pushf
pushl
ret
jmp
or
add
sahf
shr
add
aad
add
mov
jno
scas
scas
test
sub
mov
ror
fisttps
jnp
xchg
cmc
mov
std
scas
cmp
dec
dec
js
fdiv
cld
or
gs
outsl
xor
sub
inc
cmp
xor
sub
xlat
sar
sbb
sbb
jl
stos
stos
mov
and
adc
xchg
pop
pop
cmp
sub
addr16
loopne
jmp
lahf
xchg
repnz
inc
jb
dec
push
dec
dec
jle
jl
and
inc
cmp
mov
mov
fiaddl
cmp
pop
add
pop
xor
or
jmp
int3
inc
movsb
movsl
mov
mov
mov
adc
jmp
dec
adc
loop
xchg
int
xor
outsb
xchg
xchg
jb
rolb
lret
add
dec
bound
fldl
pop
fs
xchg
sub
adc
rcl
rcl
xchg
mov
jl
cltd
pop
dec
jnp
dec
ret
adc
movsl
xlat
stc
notl
sbbl
aam
pop
push
sahf
mov
loopne
fwait
adc
sbb
fldt
inc
cmp
add
in
cmpsl
bound
adc
les
shl
mov
sbb
bound
in
add
sub
jl
mov
adc
pop
pushf
and
subb
insb
jb
mov
movups
inc
jns
test
ror
sub
int
fsubr
sbb
rcr
pop
pop
lea
imul
insl
push
scas
stos
int
sbb
and
jne
lea
mov
movb
call
je
push
not
pop
lea
jmp
inc
inc
cmp
adc
mov
or
cmp
addr16
pop
adc
es
fbld
xchg
ds
xor
mov
adc
mov
jg
mov
mov
sub
pop
push
jg
stos
mov
mov
scas
scas
std
enter
cmc
fistl
ljmp
mov
inc
dec
inc
cmp
jp
dec
inc
xor
repnz
mov
lds
addr16
or
pop
push
pop
xchg
xorl
push
ja
mov
daa
pop
sbb
and
scas
std
add
dec
add
mov
pushf
pushl
ret
jl
int3
ljmp
je
sbbb
cs
add
sub
inc
add
push
mov
aas
jno
jae
stos
mov
test
les
inc
cmp
xlat
aad
loope
xchg
pop
or
in
xchg
or
xchg
add
aaa
addb
je
lret
mov
xor
dec
gs
shl
adc
insl
movsb
or
rcrl
push
bound
dec
cmp
push
pusha
lea
jae
push
push
pushf
cmp
pusha
pushf
movb
lea
jae
bt
pusha
cmp
pushf
call
mov
stos
jmp
data16
cwtl
sahf
pushf
mov
xchg
pop
mov
imul
pop
negl
sahf
mov
in
adc
add
inc
jo
xchg
mov
or
inc
xchg
sub
and
mov
and
leave
inc
cmp
add
cmc
mov
mov
adc
fiaddl
xlat
jl
or
sbb
pusha
xchg
xchg
ror
or
dec
dec
je
fcomi
fisubrl
jmp
icebp
adc
adc
push
jmp
int
int
and
cmp
shl
mov
shlb
insl
pop
ss
push
lret
or
pop
and
dec
rcr
xchg
int
push
xchg
adc
leave
dec
js
mov
cli
es
bound
inc
lods
inc
test
repnz
lds
push
call
jmp
call
movsl
call
sbb
xor
mov
repnz
mov
popf
mov
imul
jl
mov
push
popf
clc
push
pop
and
movsb
jg
or
dec
dec
cmc
jne
hlt
int
push
cmp
pop
jbe
out
pushf
insl
mov
shrb
rcl
fbstp
mov
shl
fisttps
fimuls
scas
or
out
test
loope
push
cmp
adc
clc
pop
jb,pn
lock
mov
fmuls
jb
mov
in
outsb
jo
push
dec
outsb
outsb
sbb
or
pop
mov
fnsave
int
clc
mov
and
popf
shl
icebp
or
jmp
mov
popf
xchg
mov
pushf
lea
jb
clc
call
jmp
call
btc
or
neg
push
stc
pushf
movsbw
lea
and
mov
neg
sub
push
bts
mov
bt
push
xadd
pusha
movsbw
add
jb
push
movsbw
bswap
shrd
push
sbb
mov
add
mov
rcl
add
rcr
mov
test
bt
or
pusha
pushf
pushf
mov
lea
je
clc
cmc
or
pusha
pusha
call
pusha
lea
jne
stc
lea
mov
clc
pushf
sub
jns
cmp
cmp
call
xor
mov
inc
jo
push
push
roll
shrl
scas
xchg
xor
and
or
adc
sbbl
mov
sub
cmc
call
xchg
inc
cmp
or
push
push
sub
roll
cmp
or
mov
ret
or
lock
add
push
and
imulb
sub
push
push
popf
push
sarb
enter
je
mov
pop
and
cmp
jo
mov
mov
add
mov
das
push
and
jb
xor
adc
je
mov
int3
jae
popa
cmp
inc
fstl
push
fmuls
mov
ret
mov
je
xchg
ror
aam
out
push
imul
push
xchg
sub
and
movl
jmp
jmp
call
pushf
mov
movl
pusha
push
pushl
popl
pushl
mov
pushf
push
pushl
ret
adc
or
adc
and
pop
push
pusha
cmp
adc
mov
lods
arpl
jle
push
mov
add
sbb
add
push
mull
daa
push
xor
arpl
fwait
adc
lret
jb
hlt
jecxz,pn
sarl
jl
inc
jbe
pusha
pop
push
cwtl
xchg
mov
push
push
push
mov
ret
out
cmp
jl
ret
cmp
jb
mov
movsl
jae
xchg
scas
fisttpl
sub
jl
mov
arpl
imulb
sbb
icebp
inc
in
lret
add
adc
push
mov
sarl
jmp
out
daa
es
mov
jg
stos
aad
or
jg
mov
pop
inc
push
stos
mov
dec
dec
mov
movsb
xor
aaa
inc
pusha
xchg
pop
sbb
loopne
cs
jbe
mov
inc
pop
xchg
stc
mov
xor
pop
jg
cmp
pushf
pusha
lea
ja
shl
sub
clc
pusha
add
add
add
rcl
shl
mov
stc
stc
cmp
bt
cmp
jmp
lea
je
pushf
push
pushf
pushf
lea
jmp
mov
pushl
push
lea
call
jmp
test
or
pushf
lea
je
test
pusha
stc
stc
cmp
jmp
lods
lock
lods
dec
pusha
mov
out
les
add
fdivs
outsb
mov
add
and
cli
cmpb
sbb
pushf
push
jno
ja
mov
or
scas
jnp
xchg
mov
jecxz
add
xchg
iret
push
add
add
arpl
iret
sub
dec
push
repz
or
mov
das
imul
adc
hlt
dec
mov
cmp
xchg
movl
pusha
inc
xor
mov
in
negl
cmp
test
in
mov
fsubl
mov
inc
jne
pop
and
dec
imul
push
in
push
xor
mov
jae
negl
dec
fists
sub
dec
stc
pop
mov
loop
cmpsl
out
and
pop
iret
xchg
adc
adc
imul
nop
xchg
sti
jnp
pop
pop
testl
aas
and
pop
arpl
push
loop
mov
es
jb
jbe
mov
es
push
or
ret
sub
inc
pusha
test
pop
outsl
add
sub
adc
arpl
and
rolb
mov
push
cmp
inc
sarb
or
sub
sti
loopne
lock
mov
pop
into
clc
sahf
mov
mov
shrl
insb
out
addr16
sub
push
mov
lea
lock
and
push
jl
int3
in
orl
or
cmp
stc
hlt
loop
mov
cmp
mov
iret
pop
cli
in
dec
js
mov
outsl
gs
push
outsb
xchg
mov
inc
icebp
fisttps
jmp
sub
cmp
pop
loope
in
jmp
ret
andb
and
cmp
pop
in
into
push
mov
xor
sub
loope
push
push
xor
subl
and
lods
sub
test
and
out
sbb
jmp
repnz
nop
jg
jecxz
and
push
pop
pop
mov
out
mov
out
repnz
pop
and
inc
jns
inc
lods
ljmp
inc
int
mov
jmp
mull
inc
shl
add
in
gs
push
test
mov
shll
add
xchg
test
and
jne
clc
lea
lods
scas
test
lret
add
jns
sbbl
jb
adcl
xchg
iret
int3
out
imul
sbb
out
aaa
xor
cmpsl
sbb
jle
loope
mov
std
jmp
sbb
add
mov
jb
mov
pop
xor
adc
or
mov
repnz
mov
leave
notb
fldl
cmp
shl
dec
sbb
loopne
incl
inc
xchg
hlt
sbb
dec
mov
mov
fcmovnu
jae
stos
xchg
int3
fdivrl
sbb
in
and
and
pusha
movsb
rol
sahf
inc
ljmp
mov
test
cld
jmp
repnz
je
movsb
ret
adc
bound
push
pushf
pop
shl
sub
sub
mov
leave
mov
cmp
xchg
enter
mov
sub
jmp
and
imul
scas
std
mov
popf
jmp
test
mov
cld
adc
pop
pop
test
stos
loope
enter
shl
in
mov
loop
fistpll
daa
adc
adc
mov
imul
popa
jge
test
sub
fisubrl
pop
push
mov
js
je
jb
arpl
jae
jmp
inc
inc
inc
loopne
mov
cmp
push
mov
cmp
stos
fmul
mov
pop
in
test
pop
mov
inc
pop
call
mov
pop
sub
frstpm(287
push
pop
pop
jg
cmpsl
jmp
fisttps
dec
imul
std
jb
xchg
mov
fists
mov
sarl
addb
mov
push
arpl
ret
and
cmpsl
add
add
adc
mov
push
outsl
ror
stc
cmp
lea
not
pop
lea
jb
lea
movsbw
movsbw
push
mov
jmp
push
call
pop
push
push
fists
mov
fdivrp
push
inc
dec
pop
pop
lret
nop
xchg
imul
test
jl
out
sahf
icebp
inc
sub
adc
xchg
in
or
dec
xor
add
jo
lods
shl
and
iret
jl
and
sbb
outsb
imul
dec
bound
loop
fimuls
adc
imul
xor
sbb
rclb
notb
cmp
mov
addr16
and
addr16
xchg
pop
xor
mov
sub
aaa
sti
rcl
mov
pop
sbb
dec
dec
lahf
mov
fcmovu
fsubrl
fnstcw
leave
mov
call
adc
and
xor
shl
mov
testl
insl
orl
jmp
jle
pushf
lods
movsb
rol
cmp
pushf
lods
and
loopne
in
dec
jmp
lea
pushf
xchg
jmp
lods
pusha
inc
jmp
mov
movw
pushf
jmp
popf
rdtsc
nop
pusha
movb
call
gs
fstl
mov
pop
cmp
lock
cbtw
xchg
fidivl
std
sbb
push
addl
xor
inc
dec
sbbb
jecxz
aas
push
outsl
inc
stos
cmp
iret
jecxz
rcpps
mov
sbb
mov
comiss
pop
mov
jl
nop
ret
cli
fstl
mov
lret
out
adc
outsl
mov
mov
fyl2xp1
cmpl
jo
nop
mov
jnp
fistpll
add
out
and
repnz
xor
xor
outsl
pop
mov
jecxz
sahf
sarl
mov
pop
xor
and
into
test
push
mov
stos
hlt
popf
push
icebp
cs
push
mov
loop
or
incb
dec
mov
incl
xchg
test
lock
sub
cmp
bt
neg
bt
test
add
push
ror
bt
cmc
cmc
stc
shr
pushf
pushf
lea
je
pusha
pusha
call
call
not
pop
addr16
insl
inc
push
pop
pop
not
pop
and
mov
adc
mov
jnp
out
ljmp
pushl
fcoml
mov
dec
jns
ror
std
pop
sbb
cli
loopne
lret
xor
xchg
in
jne
or
loopne
pop
stos
movsb
push
adc
outsl
xchg
cmp
scas
xchg
in
sub
pop
pop
jl
les
add
xor
fstenv
stos
pusha
movb
lea
jmp
pusha
mov
lea
jmp
lea
je
test
add
bt
cmp
cmp
pusha
pusha
call
jmp
push
push
movb
movl
pusha
movb
lea
jmp
pushf
lea
jb
bt
cmpb
call
movl
pushl
pusha
pushf
lea
jmp
call
repz
pushf
call
test
stc
push
sub
pushf
test
pusha
test
neg
clc
add
mov
call
movl
movw
push
lea
jmp
aam
into
fistl
mov
test
xor
rorl
xchg
xchg
xchg
ss
add
cmp
add
out
scas
test
pop
xlat
stos
hlt
repz
fcomps
sbb
sub
daa
out
jmp
loop
jmp
hlt
adc
aaa
push
sbb
mov
jno
in
jmp
hlt
sub
or
push
leave
jmp
jo
lds
cli
enter
outsl
imul
lahf
adc
mov
mov
inc
ss
test
sbb
orb
test
rcl
shr
cmp
sbb
mov
bswap
btr
shl
neg
add
bswap
push
not
mov
lea
call
jmp
test
movzbw
mov
add
bts
not
push
mov
clc
shr
cmc
and
mov
adc
sar
rcl
xor
lea
xchg
pushf
lods
mov
inc
clc
setbe
rol
rcl
cmc
rcr
neg
call
test
fcmovu
adc
imul
inc
pop
pop
dec
dec
sub
pusha
or
cmp
mov
mov
and
pop
jg
data16
jno
mov
mov
or
out
mov
cmpsl
mov
movsb
mov
into
or
stos
sbb
fsubrl
jns
enter
fldl
mov
ljmp
int
sbb
xchg
rol
inc
shrb
jg
lcall
xor
push
add
inc
inc
and
sar
jmp
add
mov
cli
add
dec
pop
nop
lcall
dec
stos
inc
mov
fldt
mov
test
aaa
dec
mov
inc
mov
mov
sarl
lock
in
sub
mov
push
pop
or
lods
faddl
jno
rcrb
stos
shr
std
stc
or
shr
pop
addr16
mov
jge
movl
pusha
movl
pusha
pushl
mov
mov
lea
jmp
movsbw
pushf
movsbw
mov
movsbw
not
sete
push
movl
bswap
lea
pushf
movl
push
pushf
jmp
clc
pushf
ror
jmp
xor
or
dec
push
pop
mov
push
xorl
in
dec
inc
aas
ds
jbe
adc
rcl
iret
int
jmp
leave
jl
and
pop
jo
in
mov
mov
pop
push
jge
test
mov
mov
dec
inc
push
dec
jo
test
sbb
ds
xor
mov
cmp
cmp
fs
movsl
daa
pushf
stos
outsl
mov
jl
push
jae
mov
mov
ret
jge
into
inc
mov
out
xchg
jbe
into
movsl
stos
lds
fmull
add
cmp
pusha
data16
icebp
jne
cmp
fs
cmp
mov
testl
xchg
and
inc
and
pushl
pushl
popl
movsbw
setbe
mov
lea
cwtl
push
lahf
bswap
movzbw
lea
jmp
movl
lea
ja
setl
pop
pusha
xchg
bswap
movsbl
mov
jmp
jmp
movl
push
pushf
lea
jmp
lea
jb
push
pushf
pushl
ret
jmp
pushf
or
pushf
mov
lea
je
pusha
mov
bswap
lea
call
xchg
out
xlat
adc
push
sbb
pop
pop
insb
xorb
mov
jns
push
jge
jnp
fldt
and
inc
jae
in
fimuls
scas
clc
notl
xchg
jne
or
aaa
pop
gs
sbb
xchg
bound
in
jno
mov
mov
mov
inc
pop
push
push
sti
clc
cmp
inc
addr16
stc
sti
xor
sub
out
sbb
inc
insb
pushf
shl
add
push
test
and
daa
daa
ficoms
adc
adc
int3
repnz
push
and
push
jo
mov
out
loop
lods
fcmovne
movsb
out
repnz
dec
mov
aas
aaa
adc
pop
mov
neg
xchg
sub
push
xchg
sbb
in
jecxz
fprem1
or
mov
roll
xor
std
hlt
and
adc
fcomi
rol
push
setno
sub
stc
rcl
not
push
rol
pushl
rcl
sub
movb
neg
sub
add
call
pushf
jmp
rcr
mov
stc
cmc
stc
mov
bt
push
cmc
rol
jmp
pusha
call
jmp
neg
cmc
cmp
push
push
xor
stc
ror
pusha
movb
inc
pushf
clc
rol
jmp
pushf
lea
jne
jmp
mov
call
jmp
and
sbb
sub
push
mov
fimull
and
jbe
dec
push
pop
dec
popa
cwtl
or
jo
mov
pop
jbe
and
sbb
push
lds
add
pop
xchg
or
adc
imul
scas
iret
out
je
or
int3
lret
jecxz
dec
jne
stc
adc
add
sub
push
jl
mov
ret
cwtl
xchg
lcall
pop
cltd
lea
jae
xchg
bswap
setle
mov
setb
bswap
push
lea
mov
pusha
movzbl
movsbw
pusha
mov
movb
lea
jmp
push
push
dec
aad
mov
cli
add
mov
jg
jne
js
push
jl
sbb
lret
in
and
sbb
sub
or
lret
scas
push
jmp
pop
fs
push
and
xor
add
aam
mov
mov
aam
int3
loop
push
sbb
or
cmp
insb
cwtl
jne
mov
mov
adc
mov
or
mov
lahf
pop
int
jmp
inc
leave
fistpl
pop
sub
sub
dec
xor
or
and
es
ja
push
arpl
setbe
mov
ljmp
push
push
insl
jns
dec
push
jg
lcall
add
sub
jbe
xchg
pop
rorl
cmp
cmp
push
pushf
pushf
lea
jbe
ror
shl
mov
shrd
sub
sbb
btc
btr
mov
call
insb
xor
movsb
xchg
outsb
lea
sbb
aas
bound
les
dec
and
and
ds
test
movsb
xchg
les
xchg
scas
xchg
je
cmpsl
jg
xchg
jl
cmpsl
mov
iret
xor
mov
cmpsb
jnp
xchg
add
cmpsb
aas
movsl
xchg
add
cmpsb
movsl
xchg
jl
cmpsb
inc
movsb
xchg
xorb
lock
push
inc
cmpsl
fisubl
mov
jmp
mov
jne
stos
cmp
movsb
test
movsb
xchg
sbb
mov
push
fidivl
arpl
test
test
movsb
xchg
sbb
cmpsb
adc
sar
push
push
mov
dec
int
push
lods
test
lods
xchg
push
mov
adc
lods
insb
jbe
pop
test
movsb
xchg
xor
cmpsl
jl
xchg
cld
or
jge
xchg
fdivp
cmpsl
int3
mov
loop,pn
inc
pop
cmpsl
push
lods
xchg
or
cmpsl
je
xchg
xor
mov
jb
aam
sbb
ja
xchg
jp
movsb
pop
movsl
xchg
add
mov
xor
cmpsl
push
xchg
addb
fdiv
sbb
push
adc
xchg
push
xchg
pusha
jbe
subb
and
cmpsl
int3
mov
mov
push
test
mov
outsl
hlt
bound
aas
cmpsl
pop
cmpsl
xchg
cmp
mov
adcb
cld
and
addr16
imul
adc
inc
mov
mov
popf
lahf
mov
mov
sub
adc
fwait
mov
test
stos
and
aam
push
and
dec
jae
mov
daa
aaa
adc
ds
lahf
mov
add
pop
adc
inc
inc
test
jl
mov
rcll
mov
mov
in
fistpl
daa
es
jno
and
mov
xlat
stc
pop
dec
jae
lds
sti
shll
pop
in
inc
pop
lods
add
sub
mov
out
cli
inc
adc
pop
call
and
push
dec
push
push
aas
imul
fdivl
daa
leave
add
addr16
dec
adc
jge
icebp
in
fmul
loop
stos
xchg
push
adc
stc
movsl
adc
scas
lea
cmpsl
movsb
lcall
loope
fdivrp
cltd
ja
mov
lcall
outsb
jle
lcall
adc
bound
mov
daa
in
or
add
int3
adc
insl
adc
push
mov
pop
push
jbe
pop
mov
scas
mov
cmc
mov
shlb
cli
icebp
adc
in
cmc
subl
pop
ja
lock
hlt
and
or
loope
push
clc
lcall
loope
push
cmp
push
xlat
jmp
arpl
jecxz
sti
jno
push
pop
enter
jnp
fisttpll
test
add
jmp
cmp
push
lea
jae
jmp
clc
pusha
mov
test
cmp
jmp
lea
je
pushf
pusha
call
sub
lea
push
neg
sbb
lea
add
setge
mov
pushf
call
pusha
inc
jmp
pusha
jmp
mov
bt
test
stc
pushf
or
push
jmp
lea
je
movzbw
add
setno
mov
test
call
movsbl
movzwl
call
call
dec
bt
jmp
movl
push
pushf
movb
lea
jmp
bt
cmp
call
pushf
inc
lea
seta
push
push
not
inc
sub
neg
xchg
shl
jmp
movl
pushf
pop
lahf
mov
lea
call
bt
test
bt
sub
clc
bt
call
mov
lea
ja
push
call
cmp
call
inc
mov
or
xor
dec
push
jp
into
test
andl
pop
push
push
notl
sub
jle
mov
mov
call
cmpsl
mov
sub
ds
das
sub
dec
dec
push
nop
jecxz
fwait
out
imul
sbb
hlt
out
jmp
test
add
or
mov
shll
fidivs
mov
sbb
xor
or
outsl
mov
jmp
sub
leave
out
pop
jle
and
iret
adc
ret
call
cmp
cwtl
mov
push
cld
ror
push
mov
sub
mov
push
sub
xchg
mov
mov
leave
std
adc
xchg
sub
cld
cs
jb
addr16
int
mov
lds
dec
addr16
mov
ss
pop
mov
push
xchg
jb
mov
hlt
push
fidivl
inc
xor
mov
or
test
outsb
js
pushf
movsb
out
test
ret
ret
jne
add
sbb
push
movsl
cmpsl
insb
mov
dec
je
nop
mov
les
sub
iret
out
lea
call
pushf
lea
jae
pusha
sub
pushf
mov
pusha
lea
call
pusha
lea
jae
setno
mov
pushf
pushl
mov
pusha
not
seto
mov
inc
mov
setb
call
jmp
not
mov
pusha
pushf
cmp
call
xchg
or
into
adc
sbb
xor
dec
push
xorb
jmp
sbb
cld
jge
pushf
sbb
test
pop
enter
or
clc
notl
mov
mov
inc
leave
repz
pop
test
cld
adc
dec
js
and
jno
imul
push
add
outsb
or
add
inc
cld
pushf
pushf
call
stc
push
jmp
push
pusha
mov
movw
mov
jmp
fsubrs
addb
xor
xchg
in
into
call
lds
pop
pop
cs
pop
scas
jae
insl
loop
sti
adc
xchg
dec
dec
dec
mov
jge
mov
push
ds
mov
data16
std
sub
lea
je
call
xchg
or
int
mov
sbb
andl
lret
push
or
push
ret
gs
ret
lods
mov
or
jne
jmp
mov
and
inc
inc
inc
int3
adc
jns
lea
sub
jne
movsl
sbb
lods
sub
out
sbb
imul
pop
pop
xlat
cmpsb
cmpsb
out
lret
pop
ret
ror
push
xchg
and
pop
xor
nop
rcll
mov
xor
pop
dec
mov
in
inc
cmpsl
mov
cmp
aad
inc
sbb
nop
sbb
not
add
shlb
int3
mov
xchg
gs
aaa
xor
ja
cmp
sbb
movl
stc
inc
inc
dec
xchg
xchg
push
faddl
cmc
hlt
cmp
cmpsb
inc
sbb
sbb
addl
lret
fmuls
xchg
mov
add
mov
popa
adcl
add
sub
xchg
inc
add
shl
push
mov
jne
test
int3
pop
inc
add
adcb
push
outsl
jl
sbb
adc
push
adc
arpl
ss
mov
inc
loopne
mov
mov
xlat
nop
shl
jg
push
outsl
mov
mov
or
dec
shll
pop
push
jne
xor
push
fs
mov
jnp
mov
mov
xchg
sub
leave
dec
adc
insb
jle
push
sbb
inc
dec
dec
shufps
sbb
cmp
int3
loopne
add
sbb
jg
addl
mov
jmp
and
je
pushf
pusha
push
mov
mov
jmp
pushf
mov
bswap
pop
pushf
pushf
pusha
pushf
pushl
ret
push
pushf
pushl
sub
call
not
push
setp
push
shld
btc
mov
xor
add
rol
mov
shl
jmp
bt
jmp
pop
ror
lret
adcb
xor
popf
and
jb
das
in
add
jg
fistl
dec
ljmp
out
sbb
xor
jle
cmpsb
mov
sub
in
mov
pop
dec
inc
pop
push
push
jo
push
cmp
fwait
leave
cmc
and
rclb
popa
ja
fcmovnu
div
xchg
sub
movsb
scas
rol
out
mov
inc
or
icebp
inc
cmp
mov
inc
pop
inc
push
stc
daa
and
cmpb
int3
sbbb
pop
out
pop
sahf
hlt
mov
cmpsb
push
je
mov
stos
outsl
mov
in
push
xor
pop
cli
dec
xchg
mov
lcall
pop
pop
fs
xchg
test
and
andl
test
sub
popa
xchg
mov
cld
test
lret
push
or
das
push
ret
sub
mov
stos
aad
add
hlt
aam
mov
or
lock
cltd
test
mov
push
cs
lea
sub
pop
pop
lea
inc
xor
or
push
es
sbb
adc
mov
dec
outsl
insl
imul
jns
and
cmp
push
mov
ljmp
mov
pop
das
shrb
jnp
test
pop
bsr
mov
bt
stc
and
pushf
jmp
add
cld
enter
data16
and
and
fs
lahf
mov
mov
mov
xchg
outsb
sub
ljmp
or
hlt
mov
and
je
bswap
xchg
push
push
mov
cmpsl
mov
mov
xchg
aad
mov
repnz
call
out
sub
jno
lret
insb
stos
jl
push
daa
dec
push
push
js
mov
sub
scas
scas
repz
dec
inc
aas
dec
outsl
outsb
fbstp
out
jo
scas
lret
push
mov
pusha
pushf
lea
jmp
inc
inc
cmp
adc
and
mov
xchg
pop
sub
dec
mov
jbe
daa
xor
cld
imulb
ss
push
mov
pusha
icebp
movsb
cmc
jns
test
sbbl
mov
out
inc
add
push
sbb
movsb
imul
push
or
inc
add
inc
pop
cmp
dec
jns
adc
cmp
sbb
ret
adc
xor
repz
dec
ret
stos
xor
dec
ret
inc
dec
ss
lcallw
pop
cld
idivb
inc
inc
jae
jno
adc
leave
mov
cmpsl
leave
stc
clc
ja
repz
add
int
sti
or
sub
outsl
fwait
iret
jmp
push
add
push
push
dec
insb
stc
call
lea
lea
pushf
pop
movzwl
pushf
lea
mov
mov
pusha
movb
lea
call
pushf
lea
jne
lahf
lahf
bswap
mov
pushf
lea
jmp
mov
not
cwtl
pushf
movl
bswap
lea
pushf
jmp
sub
and
cmp
push
addr16
mov
subl
sbb
outsb
in
dec
ret
nop
push
jnp
mov
mov
iret
in
in
cwtl
pop
ss
lahf
call
lea
mov
mov
inc
push
hlt
test
rcrb
xor
adc
or
aaa
fstpl
xor
stos
popa
outsl
stos
sarb
rcl
sti
pop
movsb
mov
movsb
in
stos
movsb
enter
outsl
ficomps
fcom
add
xor
pop
insb
xchg
nop
mov
into
sarl
or
push
or
add
jg
pop
add
inc
pop
add
add
add
add
add
jmp
pop
add
add
add
add
add
inc
pop
add
inc
and
popf
into
arpl
jmp
call
sbb
lds
mov
movsl
shl
decl
or
sti
add
rcll
jae
push
pop
push
xor
testb
pushf
in
jae
cmpsb
bound
ja
pop
stos
fucomi
sti
clc
adc
mov
pop
jns
pop
test
cmp
cmp
jle
movsb
mov
xchg
pusha
dec
dec
fs
sbb
test
jno
mov
scas
lds
mov
jb
int3
imulb
push
xor
pushf
icebp
cmpsl
cwtl
cmp
ljmp
add
das
push
jae
adc
outsl
cmp
out
inc
sbb
adc
movsb
or
cli
adcl
pushf
popa
sbb
cs
cld
in
push
push
jo
push
insl
outsl
jg
testl
lahf
mov
push
shlb
inc
push
je
sbb
je
add
adc
lea
call
jmp
sub
mov
testb
es
outsb
xor
mov
adc
lahf
or
add
push
xchg
and
into
ficomps
push
adc
inc
shl
dec
add
xchg
push
orb
mov
add
icebp
jb
inc
push
push
inc
jns
jge
xchg
xchg
mov
das
mov
jle
sub
std
pop
fst
testl
mov
adc
xchg
pop
push
in
outsb
push
inc
rcr
fcmovbe
cwtl
push
sbb
adc
dec
jno
test
test
fmull
inc
push
je
pop
mov
test
add
mov
mov
push
lea
jmp
lea
je
jmp
call
add
pushf
pushf
lea
jmp
ror
shl
movzbw
add
call
push
add
pop
push
js
xchg
ret
or
jge
dec
jle
fbstp
je
cmp
inc
imul
stos
mov
out
ss
push
jmp
inc
inc
mov
addr16
sub
push
lcall
loopne
call
iret
jecxz
or
sbb
inc
arpl
sbb
mov
sub
jne
jmp
call
stc
test
pushl
lea
jo
pushf
pushf
lea
je
call
lea
jb
call
push
cmpb
pushl
push
lea
jne
bsf
xor
adc
shr
stc
rol
mov
inc
ror
not
sbb
add
rol
inc
mov
bt
bt
push
test
mov
lea
je
stc
pushf
push
sub
call
call
movzwl
bt
add
bsr
not
mov
jmp
movzwl
pusha
movsbw
lea
lea
movsbw
pop
pushf
lea
mov
movb
movw
pushf
lea
call
pushf
movw
lea
jne
jmp
cmp
mov
lea
jb
pusha
cmp
call
ror
bt
stc
cmp
stc
pushw
popfw
mov
inc
jmp
call
jo
push
adc
push
add
sub
fs
xchg
mov
xchg
mov
cmpsl
movsb
ret
fwait
or
pop
les
icebp
mov
xchg
or
jmp
leave
xor
pop
int3
out
clc
or
sub
mov
or
imul
inc
pop
push
add
pop
mov
cld
push
dec
rcll
rcl
out
in
adc
sbb
jg
xor
pop
xchg
inc
sahf
jne
xchg
mov
or
sbb
stos
les
jle
arpl
ljmp
jbe
cmp
and
imul
jle
div
add
cmp
push
daa
xchg
mov
xchg
mov
lret
xor
clc
rol
pusha
mov
bt
stc
sub
call
mov
mov
bswap
lea
movzwl
not
movzbw
bswap
lea
lea
movzbw
jmp
lea
jb
push
lea
jae
bswap
lea
mov
push
pushf
lea
pop
mov
pushl
mov
pusha
lea
jmp
call
pushf
call
bt
clc
stc
add
movb
movb
dec
jmp
int
add
mov
add
add
sbb
add
inc
adc
adc
test
add
push
add
add
add
xor
movl
and
pushf
pushl
ret
cltd
rcll
xchg
xchg
shl
sbb
popa
push
pop
outsl
mov
test
xor
pop
sub
mov
or
repnz
mov
xchg
mov
adc
xchg
push
jle
aam
loop
xchg
or
inc
pop
push
sahf
mov
repnz
jb
das
xor
xor
fs
je
call
sub
and
jmp
call
ret
sahf
out
rorb
pushf
sbb
popf
xchg
nop
xchg
scas
ljmp
into
sbb
or
es
out
mov
xlat
notb
xor
pop
fisubrs
mov
push
cwtl
lcall
scas
cli
xor
and
push
xchg
sbb
je
xor
push
adc
push
mov
cmp
cmc
les
or
cld
xor
mov
inc
and
xchg
test
mov
mov
movsl
mov
pop
dec
inc
xor
adc
xchg
adc
sbb
and
adc
inc
pop
sar
lea
mov
jp
incl
fimuls
and
mov
xchg
and
cmp
mov
mov
dec
cmpsb
mov
push
cli
cmp
fildl
in
sub
sub
int3
ficoml
js
mov
adc
xor
pushf
jmp
jmp
fists
je
nop
out
mov
cli
pusha
psubsw
push
lret
adc
dec
out
pop
fldl
jge
aam
mov
pop
mov
ret
leave
lret
cmp
dec
fs
xor
inc
mov
cmp
and
dec
les
in
popa
add
cmp
sbb
xchg
add
xchg
adc
xor
push
lcall
arpl
shll
cli
sub
mov
dec
pop
sub
dec
xor
out
enter
mov
scas
repz
xchg
xchg
jno
dec
mov
out
cmp
loopne
push
scas
xorb
fcmovb
lret
dec
or
cmp
ds
je
xchg
adc
xchg
and
hlt
mov
push
stos
loop
pusha
xor
adc
or
cwtl
dec
testb
sbb
loopne
sub
scas
insl
iret
stos
jno
xchg
hlt
fidivrl
xor
sbb
sbb
lea
xor
xchg
notb
imul
mov
mov
test
mov
inc
ljmp
xchg
es
sbb
mov
notb
xchg
ss
xor
xor
mov
ret
subb
jp
push
pop
push
fdivrs
xchg
dec
aad
rorb
sbb
mov
pop
ss
jle
adc
jbe
jno
in
arpl
icebp
out
in
jnp
pop
xchg
dec
mov
aad
xchg
leave
adc
push
mov
or
pop
dec
fbld
push
rolb
dec
mov
pop
xor
jl
mov
loop
xor
xor
cld
icebp
sbbb
pop
mov
lods
add
mov
stc
mov
repnz
jo
iret
mov
jbe
cld
fadds
lret
jns
rcrl
sub
mov
xchg
or
sbb
sub
mov
dec
sub
sahf
mov
mov
pop
nop
fisttpl
and
or
pop
test
dec
outsb
mov
sbb
stos
gs
pop
fimuls
jne
mov
and
sub
sti
xor
clc
jge
sbb
pop
orb
xor
mov
or
sbb
fldl
adc
cmp
push
repnz
icebp
mov
dec
stos
roll
in
xor
pop
push
mov
mov
lods
push
inc
cmp
stos
and
sar
stc
pop
lods
lock
or
loop
dec
xor
cmp
in
pop
leave
ljmp
adc
and
pop
sbb
mov
mov
in
adc
lret
push
orb
outsl
les
test
push
add
fs
mov
scas
xchg
cmp
mov
fimull
dec
sbb
xchg
mov
and
inc
adc
in
test
stos
sub
add
inc
jp
dec
cmp
dec
in
mov
jle
adc
xor
popa
push
mov
and
mov
push
movsl
sbb
cltd
sub
out
xchg
mov
pop
jle
push
sahf
loope
or
cli
fnstcw
jmp
cli
mov
cltd
inc
out
mov
push
inc
mov
jae
jecxz
rcll
dec
adcb
xchg
imul
pop
js
iret
test
sbb
xchg
or
mov
rcr
bound
or
dec
dec
stc
adc
jmp
into
aaa
cmp
push
decb
dec
stos
cmp
outsb
fstpl
xchg
scas
js
jl
push
pop
and
dec
xchg
mov
mov
fimull
mov
sub
adc
mov
loop
mov
push
pop
xor
fidivs
daa
dec
or
jo
ss
push
cmp
jae
ficompl
pop
divb
mov
leave
cmpsb
daa
sbb
mov
xchg
and
inc
sti
jmp
xor
int3
push
insb
clc
lcall
mov
repnz
cli
es
cmp
fwait
adc
ficoml
cltd
mov
imul
push
cltd
out
addr16
sbb
inc
cmp
adc
xchg
xchg
push
xchg
outsb
dec
mov
lcall
adc
pop
sbb
adc
sub
sti
sbb
pop
jle
cmp
cmp
adc
mov
fstl
push
add
arpl
inc
fldt
xor
xchg
or
and
sarb
loope
lds
xchg
jl
jmp
fisubl
fs
or
mov
xchg
sbb
loop
arpl
pop
lock
bndstx
lea
sbb
adc
adc
sub
mov
cmp
sar
mov
jae
or
adc
shrb
adc
push
imul
mov
sbb
adc
and
test
mov
call
xor
and
inc
push
fnsave
decl
adc
dec
push
cltd
pop
fstp
or
mov
and
xchg
sbb
mov
scas
jg
xchg
dec
pop
pop
push
mov
lcall
adc
push
mov
stos
push
add
mov
sub
ja
xchg
scas
or
push
pop
adc
repnz
xor
lahf
jl
push
test
jg
mov
jmp
in
sub
pushf
bound
mov
aaa
into
sub
inc
lcall
stos
adc
cmp
xchg
inc
lret
stc
enter
push
lret
xor
fdivr
cli
mov
inc
push
mov
fcompl
pop
xchg
mov
mov
decb
adc
out
ja
jmp
lds
or
sub
sbb
fsubl
xchg
mov
lret
xchg
out
sti
mov
mov
aaa
mov
adc
sbb
loope
and
clc
mov
xor
and
sbb
sbb
push
mov
xor
mov
std
and
adc
in
mov
pop
addb
sbb
ficomps
adc
adc
push
sub
jno
jb
imul
cmp
lods
lret
mov
fisubrl
lea
or
or
xchg
sbb
sub
mov
out
loope
and
or
leave
hlt
xor
xchg
mov
mov
mov
jb
addr16
lds
xor
ds
movsbl
lock
cmp
add
or
fxch
sbb
sub
or
adc
or
fdivp
int
shl
mov
mov
sub
inc
inc
cld
ret
fcoml
or
lcall
jge
xchg
mov
push
data16
cmpsb
and
cmp
pop
lret
fs
xchg
into
xchg
sub
jge
mov
or
fsin
adc
lea
dec
and
xchg
mov
dec
andb
mov
mov
jl
adc
or
shlb
push
mov
call
xchg
dec
repnz
sub
inc
dec
aad
in
cmpsb
ret
aaa
mov
into
inc
loop
sub
in
xchg
fisubrs
jl
add
push
push
sbb
xlat
xorb
dec
push
adc
xchg
ss
xor
mov
and
mov
jo
adc
fsubr
sub
jb
pop
and
mov
faddp
and
addb
dec
loop
dec
push
cld
loop
pop
cld
xor
fsts
sub
xchg
dec
and
push
adc
and
push
lret
fisubl
push
jmp
push
sbb
dec
push
push
adc
jge
sub
repnz
mov
sub
push
push
xor
testl
mov
or
cmp
hlt
mov
pop
push
cwtl
push
loope
pop
test
add
mov
lret
mov
ficompl
sub
sbb
xor
into
add
xor
or
negb
xchg
push
sbb
jg
lods
leave
pushl
sbb
and
jo
lods
mov
mov
sub
dec
lods
fcomps
mov
cli
xor
push
loop
sbb
jg
imul
subb
fidivs
std
pop
fstpt
xchg
jl
repnz
scas
hlt
test
mov
jge
adc
pop
pop
sub
aaa
mov
cmp
mov
test
pop
loop
pop
leave
lods
pushl
lcall
sub
stos
pop
mov
mov
enter
dec
loop
sbb
xchg
push
les
jmp
sub
bound
jmp
imul
lea
inc
mov
lea
in
mov
sbb
mov
push
dec
cmp
in
inc
xchg
popa
push
xor
and
mov
out
cmp
in
adc
adc
inc
mov
test
push
jns
outsl
xor
cmp
mov
repnz
fwait
bound
xchg
adc
xor
add
out
es
adc
xor
lods
xor
mov
adc
incl
dec
in
pop
jp
sub
test
xchg
out
push
dec
icebp
cmp
flds
movsl
or
fisttpl
add
test
add
mov
jge
sbb
outsl
mov
sub
add
mov
cmp
dec
lods
xchg
push
sub
stc
dec
push
lods
dec
and
jp
roll
sub
hlt
ljmp
inc
lea
lret
ret
inc
inc
cli
loope
or
cld
xchg
and
fimull
sti
data16
lods
repnz
push
cmc
fistl
test
ljmp
shrl
incl
cld
cmp
mov
sbb
dec
xlat
add
mov
mov
mov
and
rcl
lcall
call
push
mov
mov
ret
mov
sbb
adc
inc
std
sbb
sti
fisttps
jno
cmp
xor
jmp
pop
js
pop
push
mov
inc
xchg
xchg
and
ljmp
orl
cmc
pop
xchg
sbb
mov
movsb
mov
jge
iret
sar
sub
cmp
sbb
jno
aas
inc
clc
int
outsb
in
cli
out
dec
xchg
pop
pop
lods
lret
cmp
scas
inc
xchg
out
sub
stc
fmuls
xchg
add
xor
repnz
fcom
sub
and
cmp
cld
rcrl
in
and
outsb
mov
ror
mov
or
aam
jnp
in
hlt
xor
and
stos
cmpsl
lret
cltd
sbb
xor
test
int
sbb
fmuls
mov
test
adc
jbe
jns
push
fldenv
popa
dec
bound
pop
sub
add
pop
pop
into
sub
lcall
cmp
fnstsw
pop
sub
sub
mov
adc
div
jnp
dec
fimuls
and
sbb
lret
mov
or
repnz
scas
fsubrl
dec
mov
or
cmp
dec
aad
loop
push
out
push
xchg
dec
in
xchg
add
add
cmp
mov
fisttpll
pop
pop
mov
add
push
pop
imul
enter
sub
xor
xlat
outsb
jo
pop
sbb
testb
andps
decb
fnstenv
imul
cld
icebp
scas
adc
adc
xor
in
or
sbbb
mov
and
mov
sti
xor
xor
mov
test
ja
shlb
adc
or
push
addr16
xchg
into
jnp
jbe
pushf
pop
mov
jns
and
inc
pop
leave
cmp
push
jle
addl
xor
jl
push
or
adc
xor
cmpb
fidivl
mov
int3
and
movsb
mov
push
sbb
push
ljmp
es
in
sub
aad
mov
mov
push
mov
mul
xchg
ficompl
and
sbb
cmp
sbb
mov
xchg
leave
adc
sub
in
sarb
cli
aam
xchg
fs
push
xchg
mov
mov
add
push
xor
loop
push
push
lret
std
fimull
jmp
mov
js
cli
adc
in
lock
in
or
jecxz
sbb
out
jb
test
test
lahf
shrb
lahf
mov
into
inc
std
cwtl
je
or
push
xchg
pop
lods
mov
mov
lods
mov
loop
push
jnp
lcall
repnz
xchg
push
add
leave
pop
leave
lcall
mov
mov
outsl
or
idiv
jp
adc
mov
or
sub
fcoml
mov
xchg
pop
test
pop
ret
int
jbe
rclb
cmp
add
das
add
cmp
xchg
mov
jne
call
adc
test
pop
cld
dec
sarb
jle
add
fwait
pushf
mov
sub
jbe
pop
btcl
cltd
xor
int
jmp
sbb
jge
or
push
sbb
inc
cmp
cmpsb
sub
adc
mov
dec
xor
pop
inc
ret
dec
repnz
inc
cs
shlb
jns
and
inc
xchg
negb
mov
xchg
cmp
aaa
outsb
add
cs
dec
xor
and
lock
jg
mov
jnp
xor
lret
popa
jae
push
enter
fidivrs
test
xor
pushf
out
popf
xchg
add
loop
into
shr
dec
out
mov
sub
mov
imul
pop
adc
in
mov
fidivrs
add
sbb
and
pop
mov
adc
jl
punpckhdq
ljmp
mov
int3
dec
inc
lods
or
push
shll
mov
ja
cli
pop
pop
or
jae
dec
xchg
xchg
aam
and
push
jg
loope
icebp
enter
or
jbe
aad
cld
lds
sub
lods
mov
jns
cmp
push
cld
xchg
pop
cld
sub
or
dec
sbb
out
sahf
mov
cmp
or
or
jecxz
pop
lcall
imulb
push
lcall
cmp
shrl
push
std
sbb
sub
push
xchg
nop
xchg
adc
rol
sbb
push
mov
repz
jle
sub
and
lea
dec
loop
cmp
push
xlat
cli
xchg
lcall
nop
inc
shll
pop
pop
mov
jno
test
cs
mov
mov
lock
mov
rclb
dec
sub
pop
stc
loop
inc
xlat
jl
adc
dec
push
std
ret
in
aas
xchg
enter
int3
int
mov
pop
incb
mov
sub
pop
fimuls
arpl
pushf
and
xor
out
dec
sub
jge
push
cli
out
cmp
mov
in
mov
fidivrl
pushf
inc
mov
js
sub
lods
fsubs
out
xchg
ss
mov
fdivrp
dec
je
xchg
imul
int3
mov
xchg
movsl
jecxz
outsb
sbb
sti
cmp
sub
pop
xchg
test
sub
pop
insl
popf
xchg
jbe
scas
in
repz
hlt
or
aam
jle
dec
push
jbe
mov
stos
push
outsb
subb
rorl
dec
inc
jns
fdivr
in
add
pushl
pop
cld
mov
popf
mov
repnz
js
sbb
inc
pop
repnz
cmp
and
test
sub
outsl
mov
lcall
push
cmp
add
rorl
mov
xor
jl
loope
repz
mov
lret
xchg
inc
lock
into
mov
cmp
cmp
outsb
and
dec
adc
rol
cmp
mov
fsincos
fwait
mov
cmp
test
sub
jmp
cmp
outsl
inc
cmp
dec
icebp
mov
cmpsl
xchg
mov
inc
sti
fldcw
mov
dec
push
lds
push
cmp
mov
cmp
in
push
ret
mov
rol
jp
dec
mov
lret
int3
rorb
fildll
mull
jl
add
mov
mov
leave
rcr
sahf
daa
mov
cli
or
ret
xor
fcomi
bswap
jecxz
xchg
mov
jne
push
test
movl
pop
mov
cltd
ficomps
hlt
mov
pop
rcrl
adc
fwait
clc
mov
repz
inc
repnz
xchg
mov
jo
and
jg
cmc
pushf
xchg
mov
in
push
je
dec
ljmp
cmp
and
hlt
mov
push
lret
sbb
fidivrl
bound
adc
and
cmp
pop
std
sub
pop
clc
cltd
add
in
lds
lods
rcll
and
adc
xchg
dec
out
sub
xchg
mov
and
inc
in
loope
sarb
mov
jmp
out
mov
dec
mov
push
negl
fisubs
dec
js
loop
fwait
or
or
loop
mov
out
cmp
idivb
cmc
push
or
pop
inc
mov
push
inc
xorb
in
xchg
cmp
adc
shlb
ret
orb
pop
push
ror
enter
sbb
cmp
jb
dec
mov
jno
push
pop
sub
sahf
adc
mov
lcall
jl
cli
jnp
fwait
stos
adc
adc
loopne
aaa
lods
int3
jg
imul
adc
adc
inc
pop
sbb
cmp
jge
xchg
push
loope
adc
and
incb
pop
mov
test
or
xorl
rolb
and
and
repz
lea
jl
mov
mov
sbb
xchg
scas
and
or
or
inc
test
dec
mov
adc
adc
or
idivb
loopne
cmc
in
repz
lcall
sub
push
loop
push
mov
jl
adc
pop
or
xor
mov
adc
out
into
imul
test
in
repnz
movsb
sub
subb
xchg
aad
add
jnp
ret
into
divl
jae
ljmp
push
daa
push
das
inc
rcl
pop
daa
ljmp
mov
mov
call
push
addr16
aad
jnp
jge
sti
dec
mov
bound
sub
mov
jbe
jl
xor
mov
dec
mov
cmc
pop
stos
movsl
mov
cmp
cmpsl
add
xchg
ror
outsb
and
mov
mov
lds
or
xor
dec
sbbl
ficompl
sarl
and
or
xchg
in
ds
pop
adc
jg
lret
mov
movsb
jns
mov
push
mov
cmpsb
fildl
inc
lahf
sub
xchg
cmp
bound
jne
cld
mov
sbb
cmp
pop
or
adc
pushaw
les
or
cli
mov
add
xor
inc
adc
push
stos
fimuls
push
rclb
xor
xor
lahf
inc
cmp
jbe
xor
or
sbb
dec
sbb
cltd
sbb
mov
adc
sti
jl
ret
loopne
mov
cmp
pop
or
cmp
xor
rcl
arpl
cmp
mov
out
adc
shll
lds
mov
xchg
jmp
mov
lcall
fldl
dec
and
adc
and
sub
adc
xchg
loop
call
adc
jae
and
xor
les
mov
fs
xor
inc
insb
int3
outsb
aam
arpl
ljmp
popa
pop
pop
mov
imul
push
jp
scas
mov
and
push
xor
mov
idivb
push
cmp
pop
adc
sbb
mov
ja
dec
lds
outsb
pop
fidivrl
xchg
xor
in
xchg
lods
jmp
shrl
jno
xchg
push
icebp
dec
sti
push
sbb
outsb
and
fldenv
xor
in
cltd
xchg
xchg
inc
sub
xchg
cmp
xchg
adc
adc
and
sbb
cwtl
or
inc
and
in
pop
in
lds
movsl
sbb
jg
test
cwtl
lods
push
mov
mov
int3
mov
push
jp
cmpb
jae
hlt
in
sub
pop
repnz
clc
sub
repz
out
jge
mov
leave
icebp
cmc
aaa
cltd
sbb
pop
jbe
jl
jg
ds
out
mov
pop
adc
sub
sub
cwtl
aad
fsub
or
dec
and
aad
out
dec
pop
xlat
cmp
xchg
sbb
lcall
insl
std
sub
mov
xor
sub
or
cld
cmp
popf
cmp
clc
aad
sub
pop
jns
sub
sti
cmp
divl
dec
or
fiaddl
mov
mov
mov
rorb
ja
inc
xchg
cli
push
add
cmp
xchg
stc
xor
pandn
int3
mov
add
cmp
inc
dec
mov
es
push
pop
pop
cmp
adc
mov
les
lods
mov
ljmp
insb
lds
or
sub
fisubrs
leave
out
mov
xor
and
dec
jbe
dec
adc
dec
mov
int3
insb
or
inc
mov
sub
pop
xor
inc
jns
and
sub
and
imul
fbld
ljmp
pop
sub
inc
inc
mov
cmp
daa
or
push
popa
push
push
sub
sub
adcl
sub
xchg
sbb
and
mov
push
adc
in
ljmp
fs
mov
xchg
fnstenv
es
out
negl
mov
adc
scas
fsubrl
lret
push
fcmovnb
mov
jbe
mov
ds
mov
cmp
cmp
aaa
hlt
pop
xchg
mov
ret
std
cmp
shlb
shr
fldcw
cmp
mov
or
movsl
xlat
cmp
and
in
xchg
mov
rclb
push
xchg
ljmp
xor
push
mov
lods
mov
mov
fnsave
or
xchg
fcompl
pop
into
mov
sbb
cmpsl
lret
mov
and
repz
hlt
mov
enter
test
dec
mov
xor
into
sbb
lret
dec
jmp
mov
lcall
enter
xchg
jae
mov
icebp
inc
xchg
insl
cmp
std
test
roll
mov
leave
xchg
xchg
pop
inc
sbb
mov
lcall
daa
pop
xor
sub
push
lcall
movsl
inc
mov
dec
in
or
popa
cmp
cs
pop
pop
popf
sbb
mov
repnz
xchg
mov
xchg
sbb
cmp
adc
scas
movsb
in
neg
inc
es
sar
push
mov
iret
ret
or
cmp
imulb
loope
jo
pop
rclb
cmp
dec
sub
daa
xchg
movsb
adc
pop
xor
cmp
mov
dec
sub
sub
or
lret
lock
jl
ss
sub
repnz
xchg
dec
xor
rorb
xchg
push
fwait
cmp
movl
orb
and
cmp
jnp
sbb
sub
out
mov
xchg
mov
adc
pop
xor
adc
sub
incb
je
lock
push
fcomps
cmp
adc
xchg
jae
jecxz
push
test
cmp
inc
vmwrite
and
dec
and
adc
sbb
popa
stos
pusha
sbb
outsb
sub
pop
outsb
xchg
cmp
scas
adc
cwtl
es
pop
xor
cmp
in
xchg
push
and
or
sbb
sub
cmp
out
dec
test
or
sbb
cmp
sbb
bnd
mov
sbb
in
lcall
cltd
pop
cli
inc
lds
cmp
add
movsb
or
loope
mov
outsl
mov
pop
shr
push
xchg
sbb
pop
or
sbb
inc
cmp
jbe
ljmp
mov
xchg
add
pop
ljmp
mov
xor
jl
xchg
xchg
xor
mov
inc
in
ret
call
insl
xchg
mov
int
push
cwtl
sub
sbbl
push
test
add
mov
jl
movb
out
call
inc
add
or
push
xchg
jbe
in
lods
mov
addr16
xchg
insl
push
mov
xor
shll
fisubs
adc
adc
test
mov
add
dec
stos
fdivl
iret
sbb
shl
dec
lahf
or
popa
jl
fcmovb
xor
insb
stos
jbe
sbb
scas
sub
mov
daa
dec
insb
sbb
fstpt
sbb
subl
in
sbb
shl
inc
cli
adc
data16
add
add
outsl
adc
add
cmp
inc
cmp
xor
mov
aam
outsl
cld
in
ficoml
notl
pop
pop
testb
push
xchg
or
cmp
cmpl
adc
pop
mov
fmuls
les
cmpb
notl
sbb
inc
xchg
dec
xchg
xchg
dec
inc
or
aaa
cmp
imul
in
sub
push
inc
or
pop
and
sbb
ja
xchg
sub
scas
jecxz
bound
adc
xor
xchg
ja
jl
fxch
in
mov
pop
cs
sbb
mov
mov
xor
cli
push
or
xor
xchg
dec
lret
lcall
test
stc
or
stos
push
ret
nop
mov
fs
aam
jl
sub
test
out
lods
push
mov
aad
fcoms
rclb
mov
mov
xchg
ret
jb
inc
ror
pushf
mov
jl
mov
stc
leave
subb
xchg
mov
xchg
sub
fimuls
sub
ret
dec
add
frstpm(287
pop
xchg
xchg
rcrb
lahf
dec
cld
xchg
or
fsts
and
daa
sub
jle
push
roll
aad
xor
shrb
inc
xchg
cmp
mov
ret
fdivr
jp
sbb
lcall
sub
pusha
lret
jnp
mov
inc
das
lahf
add
add
je
fistpll
cmp
xor
xor
mov
bnd
xchg
sahf
int
push
popa
dec
lock
cmp
jnp
or
push
mov
lods
pop
pop
dec
sub
popa
btc
outsl
jno
mov
mov
lret
cs
mov
addr16
add
scas
rol
and
pop
cmp
loopne
out
push
inc
in
ret
ds
cmp
adc
es
adc
push
and
ss
das
xchg
adc
mov
arpl
adc
sbb
pop
out
or
and
and
idivb
inc
and
fcoms
cwtl
insl
stc
jmp
mov
push
or
loopne
mov
adc
mov
mov
filds
shll
xchg
mov
scas
outsl
fldcw
sub
test
push
jnp
inc
push
mov
dec
push
or
pop
xchg
roll
daa
in
jl
jns
cmp
xchg
insb
push
sbb
ret
out
and
outsl
divb
in
jp
dec
ret
pop
lcall
mov
insb
in
fidivrs
or
test
popa
push
rclb
mov
add
repnz
jg
divl
or
cmc
push
mov
or
push
adc
xchg
dec
jae
mov
sbbl
jle
int3
inc
movq
mov
push
dec
xchg
loope
sbbl
sbb
cmp
out
cmp
mov
sbb
aam
sbb
in
add
shl
adc
and
les
movsb
jns
mov
rolb
dec
xor
je
cmp
sub
mov
xor
inc
aam
inc
ficoml
sbb
mov
mov
divb
push
popa
xchg
dec
add
and
cmpsl
loop
xchg
cmp
and
sub
add
shlb
mov
aam
pop
and
lds
push
mov
cmpsl
fistps
xchg
jle
inc
repnz
mov
stos
mov
test
mov
outsl
sbb
in
sub
imul
push
mov
xchg
xor
add
repnz
int3
lcall
pop
dec
test
and
pusha
mov
jg
cmp
rol
repnz
mov
mov
push
inc
insb
sar
sahf
sub
dec
lea
mov
pop
daa
jnp
cmp
lds
pcmpeqw
xor
fstps
rol
push
nop
inc
icebp
cmp
push
mov
mov
mov
mov
outsb
fisubl
adc
out
mov
mov
cli
sbb
jl
jns
outsl
lret
and
lods
insl
adc
je
aam
pushf
jnp
loopne
sbb
jle
fistpl
dec
xor
and
push
push
cltd
xchg
movsl
insl
dec
repz
jl
or
sub
inc
imul
sbb
sub
dec
sub
inc
cmpsb
and
push
movsb
out
ss
sub
ret
repz
xor
fsubs
fmuls
aas
xor
pop
mov
iret
adc
cmp
rol
mov
outsb
push
data16
xor
testl
or
cmc
or
cmpb
jo
pop
cwtl
repnz
loop
sub
push
dec
shl
sbb
dec
jl
inc
fcomip
and
lret
xchg
int3
xchg
hlt
jo
lods
testl
mov
leave
cmp
xchg
lods
adc
std
dec
mov
popa
mov
mov
mov
cmp
jb
sub
into
sahf
pop
adc
mov
mov
or
dec
mov
pop
roll
sbb
sbb
inc
xorb
sahf
adc
jae
pop
push
leave
and
cmp
mov
or
popa
ret
test
dec
aas
movsl
repnz
loop
sub
adc
inc
or
or
add
sub
dec
outsl
pop
inc
or
out
xchg
inc
orb
or
cmp
sub
and
mov
mov
inc
ficomps
out
push
mov
out
std
in
or
sbb
mov
mov
xor
and
fcoms
add
sub
rol
mov
jp
cli
ret
int3
ss
pushf
or
in
cs
or
xor
popa
push
cmc
arpl
lods
repnz
jle
jns
mov
ret
xor
fsubr
push
fcomps
xor
leave
push
push
rcl
xor
xor
test
jne
adc
mov
in
mov
add
jnp
mov
push
and
xchg
sbbb
cmp
cmp
lea
sub
ljmp
cwtl
lock
sub
out
or
adc
insb
sub
sub
pop
xor
mov
scas
jo
test
rclb
in
adc
mov
xchg
addr16
sbbl
arpl
cmp
bound
mov
jno
test
aas
movsl
ds
test
and
xchg
not
or
pop
ljmp
cmp
inc
int3
xor
sub
add
dec
mov
jle
or
call
mov
add
fstpl
or
shlb
push
rcrl
pop
sti
int
cmp
test
sbb
movsl
mov
ficomps
push
xchg
into
loope
or
adc
les
xchg
in
call
cld
mov
jg
sarb
push
mov
xchg
clc
sub
fstpt
leave
cld
cmp
cmp
dec
lcall
cld
pop
rcll
mov
into
mov
dec
jae
sbb
xor
xchg
xchg
or
movq
inc
xchg
sub
jge
xchg
out
out
cmp
xchg
es
or
xor
daa
pop
or
bound
ret
sbb
jmp
ror
imul
insb
mov
inc
fmuls
decl
add
jp
in
pop
orl
daa
sbb
pop
mov
push
sub
in
into
push
mov
mov
sub
push
lds
js
sti
popa
jmp
mov
test
mov
cld
push
push
lea
loopne
sub
jmp
subb
mov
cld
cmp
ret
cmp
mov
test
mov
fdivrs
push
pop
dec
cmc
push
xor
cmp
sbb
aam
adc
mov
adc
adc
cmp
cmp
sbb
iret
mov
dec
jb
mov
and
xchg
sbb
mov
movsl
in
pop
fidivrs
sub
ljmp
scas
stos
mov
or
or
leave
enter
push
lcall
iret
ret
lret
adc
lret
adcb
push
cmp
sbb
pop
ds
xor
jp
pop
cmp
adc
ret
sbb
sbb
lcall
pushf
push
cmp
pushf
loop
and
add
icebp
and
into
add
dec
loope
leave
stc
sbb
jp
in
mov
aad
xor
dec
cmp
icebp
ljmp
sub
sbb
ret
cmp
mov
ret
idivb
aas
mov
or
sar
xchg
push
rcrb
lcall
arpl
aam
sbb
mov
decb
repnz
jge
mov
cmp
xor
cmp
cld
sub
cmpl
xchg
out
aam
fidivs
inc
pushfw
mov
adc
add
pop
adc
je
cmp
lcall
pop
cmp
sbb
adc
sbb
mov
xor
pusha
pop
xor
icebp
or
adc
mov
sub
pop
cmp
and
enter
xor
cld
adc
sahf
push
jb
jb
pushl
and
xchg
enter
test
test
jge
jmp
jno
mov
push
xor
xor
and
mov
sub
pop
hlt
xchg
lret
sub
add
push
xchg
and
mull
out
xchg
ljmp
mov
insb
repz
sar
mov
scas
mov
jnp
js
xchg
pop
stos
in
cmp
and
loope
movsb
hlt
lds
lcall
and
cld
mov
xchg
mov
mov
cmp
flds
sub
loopne
sbb
xor
test
cmp
iret
sub
mov
sub
jmp
test
enter
andb
scas
push
pop
mov
pop
or
dec
ret
mov
xor
int3
jno
adc
adc
add
cmp
or
inc
push
inc
fidivrs
add
xchg
pop
in
pop
es
mov
adc
stc
dec
repnz
ret
insb
mov
imul
aaa
push
inc
push
sbb
push
mov
add
mov
outsl
adc
xor
lret
ficoms
mov
cli
cmp
inc
cwtl
rsqrtps
sbb
or
xchg
ss
lcall
push
mov
sbb
call
lea
lock
fdivrs
jl
pop
cmp
sbb
cld
mov
cmp
adc
xchg
fimuls
stc
test
or
fucomi
sub
adc
cmp
ret
fiadds
in
aam
test
clc
je
mov
es
pushf
das
dec
inc
fiaddl
lods
sub
inc
mov
in
popf
xchg
jp
mov
add
push
cmp
jmp
lods
adc
out
iret
ljmp
add
or
lea
push
mov
ret
cmp
mov
or
xor
cmp
inc
mov
adc
xchg
data16
xlat
addl
int3
inc
test
je
ret
loope
cmpb
leave
fbld
test
xor
dec
sub
incb
mov
iret
or
sub
sub
movsb
push
cmp
xchg
mov
hlt
mov
dec
pop
jmp
or
jnp
pop
stos
mov
clc
outsl
jmp
xchg
or
add
loope
lock
js
mov
xchg
lret
lock
outsb
movsb
int3
jge
lock
out
jb
divb
repnz
push
test
out
imul
dec
xor
xchg
mov
pop
adc
cld
stos
sub
jbe
data16
add
add
jns
mov
fisttps
adc
rol
out
out
mov
loopne
fcmovu
xchg
arpl
dec
inc
adc
push
not
xchg
jb
les
push
fs
mov
or
push
sbb
pop
dec
mov
xchg
mov
sbb
cmp
xchg
dec
mov
jbe
clc
fwait
cld
dec
or
inc
push
fstpt
dec
xor
mov
add
cltd
pop
jl
aam
adc
cli
adcb
cmp
and
jg
dec
or
mov
xor
pusha
cli
out
cmp
cltd
into
dec
ficoml
mov
xor
pop
fcmovbe
mov
fnstenv
outsl
or
leave
ss
push
cmp
fdivrs
les
mov
mov
push
data16
inc
insb
xchg
add
es
sahf
popf
cmc
cld
ret
cmp
jo
cmpsb
testl
mov
lret
mov
dec
mov
xchg
cmp
adc
shl
sub
jle
outsl
cmp
cmp
sbbl
jnp
sub
mov
push
mov
mov
mov
sbb
push
pop
cwtl
in
xchg
inc
push
or
push
vmovapd
xchg
sar
enter
xor
mov
cmp
xchg
push
decl
or
and
mov
adc
and
xchg
cmp
leave
lods
mov
xchg
jp
pop
out
out
fisubl
add
adc
xchg
mov
pop
ret
adc
ret
cli
stos
push
pop
cmp
testb
or
repnz
in
out
cmp
lods
xlat
lds
insb
and
fildll
cmp
adc
mov
ficompl
cld
xor
jmp
repnz
jmp
sub
rclb
ljmp
ret
call
adc
sub
clc
mov
pop
out
sub
push
xor
ss
xchg
nop
popa
jne
fidivrl
adc
or
cmc
cmp
arpl
inc
dec
adc
sub
pop
negl
dec
sub
shlb
scas
clc
repz
lcall
lret
repz
sub
flds
mov
push
mov
jae
bound
lea
xor
inc
mov
xchg
rclb
fdivp
xchg
stos
and
cmp
jnp
pop
add
sbb
xor
pop
rolb
jbe
add
mov
and
add
sar
mov
xchg
mov
cltd
mov
loop
xchg
int
bound
sbb
mov
mov
jmp
scas
stc
sbb
xchg
jl
xchg
and
sub
jl
repnz
dec
lret
ret
adc
imul
jne
dec
test
repnz
push
cld
lods
push
adc
je
addl
outsb
adc
mov
and
fnsave
xchg
dec
xchg
mov
aas
cmp
out
jno
je
lcall
das
repnz
fmull
mov
lret
incb
mov
xor
or
push
inc
aam
enter
sub
rcrl
push
jg
and
imul
adc
cmp
sub
cwtl
jbe
insb
insl
cltd
mov
ret
mov
lea
in
cmp
dec
aas
aam
dec
mov
ret
sbb
push
inc
or
lock
addr16
sbb
dec
lcall
push
xchg
sbb
pop
dec
imul
jb
cmp
ss
cmpb
lods
out
fisubrs
pop
aam
enter
sub
xchg
ja
sbb
xor
shl
dec
fsubs
fistl
mov
and
sub
lahf
pop
mov
xchg
xor
adc
gs
xor
ljmp
loop
inc
insb
jmp
add
pop
sub
xor
fwait
shl
repnz
mov
nop
aad
inc
popa
aam
imul
lcall
sbb
or
dec
icebp
push
xchg
mov
lea
xor
sbb
fcmovb
mov
sub
dec
jnp
adc
imul
aam
rorb
add
aaa
adc
cmp
fst
mov
cld
xor
push
or
pop
mov
fimull
adc
xchg
dec
es
mov
ret
adc
cs
jmp
xchg
cmp
out
in
push
push
fisubl
jg
mov
cmpsl
push
adc
adc
add
mov
or
xor
int
nop
xchg
cmp
loope
xchg
jne
cmp
mov
stc
dec
pop
jns
rorb
sub
les
xchg
and
stc
lods
rolb
bound
imul
xor
xor
frstor
sbb
xor
shr
push
in
sub
pop
jnp
push
lahf
and
in
lcall
mov
jnp
xchg
repnz
xor
rcll
cmp
outsl
adc
hlt
xchg
cltd
inc
ror
cs
xor
mov
cmp
rcrb
dec
xchg
xchg
dec
xchg
sub
stc
mov
cltd
or
xor
mov
out
ret
jg
in
pop
adc
and
ja
aaa
and
int3
sub
pop
sbb
jecxz
pop
dec
rcll
movsl
or
mov
cwtl
cmp
sbb
es
cwtl
or
out
and
lret
jg
data16
push
add
pop
sub
cld
push
mov
xor
sarb
xchg
in
pop
loopne
pop
cltd
adc
mov
rclb
inc
adc
imul
testb
xchg
cs
flds
inc
arpl
sbb
jo
addr16
and
adc
push
add
in
loopne
mov
dec
popf
jp
movsb
loop
mov
cmpsl
pop
jno
pop
mov
imul
iret
jo
repz
and
int
pop
ja
ror
pushf
xchg
inc
cmc
xchg
in
dec
pop
rorl
jnp
sbb
nop
repnz
decl
std
pop
pop
sub
or
test
mov
lcall
sbb
ss
insl
pop
mov
lret
xchg
pushf
or
push
cmpsb
pop
or
adc
jle
aas
je
mov
repnz
mov
xchg
pop
jb
scas
icebp
xchg
mov
jae
int3
cmp
mov
mov
pop
pop
pusha
fcomi
stc
mov
add
repnz
ret
hlt
mov
lcall
pop
int3
mov
pop
xchg
jle
dec
xchg
sub
jae
ficompl
aaa
adc
call
dec
sbb
jl
xchg
jp
bsf
aam
jmp
mov
clc
lret
jmp
fcomi
rclb
mov
repnz
push
enter
lret
shl
int
scas
push
xchg
or
sub
test
divb
or
push
mov
cmp
jle
fimull
cmp
add
lcall
and
mov
pop
sqrtps
add
bound
add
sarb
rorl
shr
adc
loopne
jle
enter
mov
movb
sar
sbb
pop
pop
stos
xchg
jle
pop
cmp
mov
insb
out
insb
sahf
fdivl
lcall
pop
mov
stos
jmp
fidivs
into
fiadds
scas
jb
rolb
clc
add
fdivrs
fcmovb
fnstenv
sti
cli
mov
cmp
cmpsb
subb
fidivl
jl
enter
cmpsb
fwait
xchg
add
je
mov
fwait
adc
mov
call
imul
cmp
ljmp
jmp
adc
cmp
fsubl
popa
sarl
adc
rcll
dec
fwait
xchg
push
es
incl
xchg
pop
test
adc
ret
testb
adc
xor
pop
add
xchg
mov
popf
push
xchg
dec
cmc
std
cmp
scas
fisubrs
pop
inc
cmp
and
xchg
and
fxch
cmp
cmp
lock
scas
sarb
mov
adc
fdivr
je
mov
cmc
adc
mov
shrl
repnz
xchg
or
fnstsw
inc
pop
iret
shrb
inc
movsl
cmp
sub
pop
imul
sub
inc
std
cmp
in
nop
int3
sbb
sbb
stos
dec
add
cs
cli
fsubrp
lcall
mov
and
movaps
xchg
sub
ret
sbb
pop
xor
jecxz
enter
cmp
lds
scas
mov
shll
xor
mov
add
or
push
adc
cmp
fsubl
inc
mov
push
pop
out
fs
push
push
or
cmp
push
mov
lock
fidivl
sub
cmp
xor
outsb
cmp
ficompl
mov
mov
int3
pop
mov
xchg
outsb
fs
adc
fsubp
mov
in
dec
sbb
and
or
mov
pop
inc
arpl
or
mov
stc
in
fidivrs
or
xchg
xchg
pop
insl
mov
int3
test
cli
push
divb
sub
mov
push
mov
lcall
pop
add
pop
xchg
mov
imul
std
mov
mov
cli
cmp
sub
repnz
outsb
enter
cmpb
sbb
mov
mov
loope
mov
mov
loope
cli
pop
xchg
fiaddl
inc
pop
mov
pop
int3
jle
jp
fiadds
push
add
cmpsl
xor
imul
fstl
lock
pop
mov
es
cmp
insl
ret
cld
js
mov
inc
adc
enter
mov
leave
loop
int3
pop
inc
cli
shll
lret
lods
mov
fucomp
jl
adc
jne
fsubp
mov
movsl
call
or
jl
adc
lret
insb
loop
pop
mov
fisubl
mov
mov
stc
lcall
jmp
mov
std
sahf
push
test
dec
xchg
cs
push
sub
out
jb
out
adc
pop
repz
test
bound
into
ljmp
sub
mov
mov
mov
sbb
mov
int3
add
mov
test
in
or
adcb
cmove
pop
mov
notb
lcall
ret
arpl
mov
popf
push
mov
adc
cmp
xor
xor
fstps
pop
sar
mov
dec
push
jno
lds
pop
daa
xchg
dec
cmp
and
adc
mov
mov
notl
cmp
inc
leave
or
lcall
mov
scas
lods
jbe
test
int3
roll
mov
in
sbb
gs
int
out
rcrb
push
mov
out
movsb
xchg
sahf
push
jp
push
xchg
aaa
sub
dec
sub
int3
cmp
repnz
shl
mov
sbb
add
icebp
add
fsts
nop
test
test
out
xchg
sub
xchg
jge
and
sub
in
mov
sti
inc
es
in
sbb
test
push
pop
icebp
pop
sub
pushf
loope
lret
sbb
sub
jmp
hlt
in
in
out
xor
inc
out
jb
jmp
add
enter
xor
xchg
inc
ljmp
mov
push
stos
inc
cld
xor
sbb
stc
rclb
pop
and
jne
push
addr16
mov
sbb
stos
mov
lods
inc
das
xchg
mov
dec
xorl
out
ret
sti
xchg
adc
jmp
shr
popf
movsl
or
lcall
mov
sub
push
add
xchg
imul
sbb
xor
ds
cmp
and
pop
mov
fdivr
bnd
cld
sub
ss
sbb
rorb
or
sub
out
insl
rcr
mov
in
xchg
xlat
jbe
js
mov
dec
movb
popa
stos
sbb
std
xchg
and
mov
outsb
xor
test
into
imul
mov
sub
shl
test
xor
and
outsb
cmp
or
mov
sbb
addb
or
xchg
xchg
inc
pop
xor
sbb
fs
inc
in
cmp
repnz
call
rolb
adc
enter
in
fwait
lret
xchg
inc
mov
in
dec
in
mov
popa
jge
mov
ja
or
mov
lret
or
mov
mov
xchg
cvtpi2ps
xchg
mov
data16
popf
ret
bound
cli
mov
inc
xchg
mov
xorb
sbbl
scas
rcrb
aas
inc
cmp
dec
in
mov
xchg
es
fidivs
jae
in
lcall
cltd
adc
xor
lods
add
insb
xchg
cmp
shrl
incl
dec
xchg
pushf
addb
sbb
test
mov
mov
fcomps
pop
ljmp
shr
cmp
mov
gs
pop
adc
scas
mov
mov
adc
push
and
adc
cmp
pop
xor
stc
sbb
sbb
push
lock
outsb
jmp
lret
cs
mov
fimuls
outsl
roll
sub
push
repnz
and
scas
lea
mov
adc
dec
daa
in
jp
and
insl
test
in
in
mov
mov
or
sti
les
push
adc
or
xchg
xchg
jp
mov
jle
rcll
repz
and
add
inc
aad
xor
mov
xchg
out
mov
js
cli
add
add
or
dec
and
cmp
sub
lcall
cmpb
cli
cli
daa
cmp
inc
lock
or
insl
aas
cmp
cwtl
mov
push
xor
mov
sar
lea
aaa
lock
push
push
es
cmp
addl
call
dec
sub
insl
cmp
sarb
xorl
mov
bound
lds
rclb
mov
cmp
jns
cltd
sbbb
mov
fcomps
xor
mov
aad
cmp
and
loop
cltd
fiadds
mov
and
cmp
mov
dec
ljmp
cltd
adc
mov
mov
pop
repnz
pop
dec
mov
repnz
pop
loope
mov
xchg
lcall
repnz
lods
sub
xor
pop
adc
test
pop
sahf
push
stc
sti
pop
adc
shl
lret
pop
push
int3
jl
adc
xor
ret
adc
lea
stos
xchg
dec
test
fdivl
loope
add
dec
mov
jmp
mov
xchg
sahf
in
outsb
or
mov
or
lcall
sbb
out
insb
jl
or
adc
mov
cwtl
xchg
ja
rclb
mov
into
out
lods
ds
ja
adc
xor
bound
push
mov
pop
pop
jge
jg
dec
pop
xchg
jle
insl
mov
loop
cli
mov
test
fsubl
enter
dec
inc
mov
lcall
xlat
ret
mov
mov
jmp
aam
int3
mov
out
mov
xchg
pop
mov
push
sbb
lcall
mov
fucomip
out
pop
pop
sbb
pop
pop
adc
jne
decb
jbe
mov
jl
xchg
scas
pop
inc
fsts
ficomps
jp
stos
fisubs
fidivl
enter
or
mov
sbb
fmull
push
outsb
inc
out
cli
push
xor
mov
add
sub
fisubrs
adc
cli
jle
int3
lret
mov
dec
test
icebp
xchg
sbb
sbb
decl
hlt
jbe,pt
mov
or
fmul
mov
scas
in
into
inc
xchg
int3
pop
fcmovb
test
test
or
adcb
or
lea
jb
mov
out
or
into
mov
repnz
xor
stos
outsb
loop
push
mov
mov
and
jle
sub
dec
adcb
add
cmp
loopne
pop
sbb
test
jne
mov
sbb
shlb
dec
fwait
or
or
adc
mov
lahf
pop
xor
mov
mov
leave
cmp
jns
pop
xchg
push
sub
imul
or
sahf
cmp
xor
addr16
idiv
hlt
cld
or
dec
es
int3
lret
sub
mov
sbb
or
xor
daa
lcall
test
adc
jns
mov
repnz
dec
enter
repnz
or
push
loop
cld
xor
pop
ret
adc
sarb
add
sub
orl
push
xor
out
loopne
jbe
inc
cli
mov
or
stos
in
mov
jmp
cmp
and
cli
xchg
hlt
fcomi
aam
clc
sub
shlb
loop
sahf
shrl
push
pop
clc
xchg
ds
cltd
insb
jns
insb
and
cmp
movsb
xchg
ret
repz
jns
mov
inc
cmp
int3
out
test
xchg
sbb
adc
adc
addb
sbb
pop
fistpl
lods
fcomps
sub
jne
iret
ljmp
and
mov
mov
mov
movsb
pop
divl
es
rcll
outsb
popf
dec
int
shl
cmpsb
popf
cmp
das
arpl
mov
loop
sbb
adc
mov
sub
or
pop
fdivrl
shlb
popl
sub
sub
sbb
and
jnp
pop
ds
addb
decl
xor
pop
jne
decb
pop
dec
jp
add
add
test
cmp
dec
inc
hlt
sbb
inc
or
sbb
and
dec
and
out
aaa
mov
and
add
push
inc
mov
inc
mov
lds
push
xchg
sbb
cmp
daa
cmp
mov
dec
adc
les
pop
sub
aam
dec
push
xchg
jnp
xor
sahf
inc
add
mov
pop
cs
insl
push
and
sti
cld
xorl
sbb
cs
mov
inc
cmpsb
dec
or
or
xchg
ret
jno
out
push
sub
lcall
fsubrl
add
test
fstps
push
das
ljmp
cmp
inc
mov
fidivl
inc
lods
pop
fnstsw
mov
sahf
add
lahf
inc
pusha
jmp
xor
sub
leave
sub
fstps
sbb
sti
repnz
jmp
dec
test
scas
cmpsb
push
jle
lahf
fildl
aaa
sub
fisubs
xlat
sbb
mulb
lcall
xor
cmc
push
and
out
or
out
add
mov
pop
fisttpll
jns
pop
mov
mov
pop
dec
fstps
inc
mov
and
mov
jo
cmp
adc
mov
sbb
mov
cmpb
ficoms
mov
xchg
xor
push
cmp
pop
icebp
ficoms
stos
rcl
dec
fmuls
adc
cmp
loop
sahf
leave
sarl
dec
mov
mov
movsb
xchg
ret
ljmp
adc
hlt
ret
ds
lock
pop
mov
push
idivl
lret
xor
aad
sbb
lock
outsl
fcomip
sub
loope
sub
mov
test
addr16
loope
lock
sbb
xchg
syscall
or
and
or
in
or
rol
loope
inc
jl
and
sub
jecxz
mov
into
popa
xchg
cwtl
pop
int3
in
lea
inc
add
sbb
dec
xor
mov
ret
push
mov
xchg
dec
adc
cmp
push
imul
sbb
or
or
fldz
lods
cmp
jp
cs
or
out
xchg
sbb
jno
sub
jl
sub
sahf
or
mov
push
jecxz
mov
or
cmp
fdiv
addr16
pop
sti
lods
cmp
repnz
jns
or
dec
cmc
xor
jp
in
into
sbb
cli
pop
cmp
or
or
and
push
sub
push
inc
xor
lret
inc
jp
mov
rcrl
nop
pop
iret
mov
jge
xor
lods
sub
flds
jmp
and
or
lcall
xor
divb
push
enter
inc
mov
cmp
or
cmp
push
jae
call
in
insb
push
ss
xor
mov
dec
jp
in
lret
stc
movsb
sbb
cltd
inc
adc
xchg
mov
sbb
loop
loop
adc
insb
fisubrl
inc
aas
in
dec
cmp
xor
into
pop
aad
dec
cmpl
sahf
inc
mov
fs
xchg
jg
cmc
ficomps
xor
dec
nop
xchg
sbb
dec
and
xor
xchg
dec
shl
bound
sbb
pop
mov
adc
inc
push
or
mov
cmp
aas
cmp
lods
aad
ss
test
mov
stc
pop
sub
mov
jecxz
lds
sarb
xchg
fisubs
jmp
jae
jmp
mov
in
repnz
sbb
call
or
jge
xor
mov
jno
cmp
loopne
cmp
pop
sub
dec
fidivrs
mov
and
jl
dec
xchg
sbb
fiaddl
jnp,pn
xchg
dec
mov
adcl
sbb
shrb
sbb
fadd
fidivrs
adc
inc
mov
jmp
imul
in
es
push
cmp
sbb
xchg
mov
lcall
fcmovbe
insl
xchg
mov
fwait
jns
pop
repnz
sub
lret
jnp
pop
cmp
lahf
or
sub
or
dec
aas
test
mov
xchg
bnd
push
pop
xchg
sub
add
cmp
xchg
addr16
ss
pop
sbb
dec
inc
push
xor
sub
sub
mov
hlt
loop
cld
bound
push
mov
pop
cmp
int3
mov
fsubrs
iret
ret
rclb
int3
lock
mov
rol
pop
pop
or
pop
in
mov
popf
lcall
pushf
dec
js
mov
shl
inc
scas
jmp
or
or
dec
cmp
mov
enter
xchg
test
movsb
push
enter
push
xchg
sarb
inc
jo
mov
repz
cmp
es
jle
mov
cmp
mov
fs
push
xor
xchg
sub
mov
mov
mov
lock
xor
or
mov
sahf
rol
imul
negb
cli
clc
pusha
add
int
xchg
mov
xor
ss
mulb
cmp
or
cmp
pop
test
or
fcomps
jp
fs
push
push
push
sub
adc
das
mov
push
lods
ljmp
add
mov
mov
push
mov
inc
mov
sbb
imul
cld
mov
mov
dec
cli
adc
das
or
jecxz
aaa
mov
ja
push
outsl
cmp
xor
mov
pop
pcmpgtb
xchg
cli
mov
sbb
pop
les
sub
add
jle
add
ja
cmpsb
mov
setno
and
arpl
xor
adc
repnz
mov
xchg
sahf
xchg
xchg
insl
cmpl
mov
sahf
inc
test
adc
cmp
adc
pushf
ja
xchg
insb
jle
xor
shrb
jle
sarl
loop
xchg
cmpsb
cmp
jb
bound
mov
mov
or
push
pop
cmpl
sbb
cld
sti
mov
inc
ss
adc
pusha
sti
test
jbe
add
mov
lock
sbb
xor
adc
cltd
xorl
cmpsl
adc
cmp
lcall
pusha
inc
xchg
fwait
cmp
insl
inc
mov
jno
sahf
lret
sbb
inc
test
xchg
or
mov
andb
insb
pop
cmp
lret
daa
lods
mov
pop
jae
dec
lods
xchg
testb
pop
adc
in
sub
jo
lods
push
leave
ss
out
pop
mov
ret
or
pop
sub
bound
cmpl
fiadds
xlat
or
test
dec
inc
push
sub
sub
jecxz
jle
cmp
fiadds
test
repz
or
push
pop
adc
mov
jae
sbb
mov
xchg
aas
dec
pop
mov
jg
das
sti
mov
jg
pop
adc
scas
lret
insb
es
add
xchg
xor
xchg
int3
mov
mov
or
dec
stc
pop
movsl
cmp
ja
push
xorl
xchg
gs
mov
or
xor
push
dec
xchg
add
adc
mov
and
mov
xchg
xchg
add
es
sbb
cmpsb
insl
testl
add
push
xchg
and
and
sub
and
dec
popf
inc
xchg
data16
pop
dec
cmc
cmp
pop
or
repnz
js
sub
and
push
cmp
mov
cltd
xor
in
insl
mull
movsb
pop
gs
push
jg
std
adc
mov
or
test
in
sbb
imul
out
stos
scas
add
add
xor
push
cmp
add
xchg
int3
aaa
sbb
mov
jns,pt
mov
jne
jg
pop
in
push
aaa
cmp
mov
nop
pop
xor
jp
push
inc
sbb
sub
cmp
jae
xchg
or
lcall
cli
xchg
push
adc
jg
add
pop
stc
int3
push
inc
mov
data16
call
cmp
stos
jb
lea
cmc
push
in
sar
xchg
or
sbb
push
mov
inc
iret
and
and
xor
pop
pop
jp
fstpt
sub
sbb
sarl
cmp
mov
loop
add
adc
push
pop
lcall
mov
sub
cmp
and
fisttps
mov
mov
xchg
not
or
mov
pop
adc
insl
jae
dec
lcall
mov
pop
jo
scas
sub
gs
xchg
jge
mov
xchg
loope
jbe
aad
cltd
inc
sub
leave
dec
lock
fwait
outsb
or
ljmp
aam
shll
mov
dec
rorl
sarb
adc
push
test
shll
in
movsl
rcll
cmp
dec
pusha
aas
push
pop
pop
push
call
stos
in
add
push
push
lcall
test
mov
mov
ljmp
shlb
in
aad
xchg
imul
stc
cmp
imul
inc
cld
je
dec
push
adc
xor
lea
jbe
sbb
xor
imul
push
xchg
in
lcall
xor
mov
inc
jae
ficomps
pop
inc
xor
mov
sbb
cmp
stc
in
popa
mov
xor
push
mov
push
je
es
push
shr
pusha
sarl
cmp
negb
inc
push
popf
inc
jle
aaa
pop
imul
dec
xchg
pop
add
mov
addb
or
mov
lea
cmp
sahf
les
loop
jl,pn
ss
sub
and
sbb
mov
xchg
das
mov
rol
cmp
and
roll
mov
dec
xor
xor
cmp
jge
sbb
jae
lret
or
push
mov
cltd
push
mov
or
pushl
mov
pop
push
leave
jmp
notl
mov
mov
add
and
or
les
out
pop
mov
call
or
push
or
mov
cmpb
fidivl
cwtl
add
or
pushf
mov
fstl
mov
xchg
out
xchg
cld
mov
test
lock
inc
inc
push
or
adc
mov
lea
ja
jmp
push
dec
pop
rolb
in
xchg
cmp
mov
xchg
sub
add
cmp
sbb
scas
out
rorb
popa
cmp
popa
add
dec
mov
inc
cmp
stos
lret
cmp
and
insb
sarl
xchg
inc
shlb
jbe
sub
lahf
rorl
xchg
inc
leave
pop
adc
sbb
lahf
dec
sbb
push
pop
pop
jecxz
mov
jnp
xchg
cmp
into
imul
push
inc
push
test
call
add
xchg
cmp
cmp
js
sbb
test
cmp
cmc
or
xchg
jecxz
xchg
into
push
bnd
ret
mov
pop
test
push
jbe
pop
adc
xor
jle
cmpl
push
mov
mov
xor
aam
jmp
inc
insl
jmp
cmp
inc
daa
fldl
in
or
xchg
ljmp
dec
cli
or
fisttpl
xchg
jecxz
pop
push
fdivs
inc
popa
pop
dec
cmp
mov
cli
push
adc
std
fdivrs
cltd
lret
pop
and
pop
mov
leave
cmp
je
add
movsl
jg
push
mov
es
divb
daa
mov
lds
lock
sbb
mov
pop
cwtl
jp
mov
dec
pop
jmp
or
jle
aaa
ret
and
pop
add
sbb
stos
cmp
inc
cltd
call
mov
lcall
arpl
outsb
addl
ds
arpl
xchg
fcoml
ljmp
pop
jge
fwait
adc
sbb
outsl
pop
cwtl
movsb
pop
stc
incl
adc
testb
cli
pop
push
in
loop
into
jle
sahf
pop
adcb
jmp
or
and
pop
push
or
jge
mov
push
dec
movsl
jne
test
movb
insb
stc
loop
clc
mov
leave
lar
aam
fcos
cli
jle
outsb
dec
fstpt
les
repz
mov
movb
fadd
fisubrl
jmp
adc
xchg
jmp
loop
decl
outsb
out
pop
rclb
pop
mov
sarb
sar
cmp
out
inc
stc
pop
adc
repnz
mov
jle
xchg
jp
scas
cli
loop
lcall
pop
sbb
pushf
fsubrl
bswap
cltd
sbb
out
jle
pop
out
pop
cli
sahf
mov
int3
loopne
push
out
incl
cli
test
push
xor
sbb
sbb
add
ljmp
xchg
inc
pushl
mov
cltd
jnp
stos
mov
add
push
cmp
ror
out
sarl
mov
mov
test
sar
mov
jbe
mov
pop
enter
ljmp
sbb
mov
cli
jp
call
stos
into
bound
cmp
mov
pop
mov
jge
fsts
pop
loop
jp
or
repnz
or
mov
push
lret
sbb
repnz
fldenv
jp
decl
das
pop
jo
lcall
sub
or
outsb
imul
inc
stos
mov
ja
inc
push
jl
leave
jp
xchg
push
dec
sub
sbb
xor
imull
adc
notb
adc
mov
dec
xchg
jle
mov
or
and
pop
pop
lea
adc
cli
xchg
dec
mov
push
out
add
pop
fst
pop
cmpsb
adc
jle
add
inc
fs
aaa
dec
mov
mov
and
add
adc
outsb
mov
lea
popa
negb
xlat
fcomip
sub
mov
les
lods
mov
lahf
xchg
jg
rcr
mov
xchg
cmp
aam
repnz
into
mov
divl
pop
or
pusha
lret
jle
sbb
hlt
adc
test
stos
mov
out
jge
dec
or
mov
mov
test
cmp
les
inc
lret
inc
sbb
or
ljmp
popa
sbb
cmpsb
test
movsb
mov
sbb
mov
cmp
popf
insb
sbb
insl
push
xchg
mov
sbb
xchg
and
add
mov
out
outsb
insl
cld
mov
and
int3
xor
inc
fmuls
and
push
sub
inc
in
fistpl
fiaddl
push
jge
mov
call
lea
inc
push
cmp
mov
lds
pop
sarb
push
scas
pop
or
dec
push
cmc
sbb
cwtl
mov
fwait
xchg
dec
adc
aam
scas
add
cmp
lods
xor
xlat
stos
into
push
adc
test
mov
push
decb
sbb
insl
lret
and
mov
pop
sub
ljmp
lods
sub
jb
adc
test
addr16
mov
fildll
xchg
jg
xchg
pushf
inc
imul
scas
jp
and
mov
mov
sti
xchg
push
mov
mov
adc
sub
cmpsb
imul
cltd
mov
adc
jns
test
dec
mov
pop
pop
rolb
les
dec
xchg
cmc
loope
mov
out
popf
adc
in
sbb
cmc
aaa
mov
stos
pusha
push
filds
arpl
xor
lcall
ds
lods
jg
mov
mov
adc
xchg
xor
mov
into
push
sub
loopne
shlb
mov
adc
xchg
adc
sbb
xchg
and
jno
jge
jae
movsl
dec
sahf
daa
movsb
cltd
or
leave
pop
dec
jne
mov
outsb
int3
sub
fs
xor
xor
jl
adc
inc
vunpcklps
mov
sub
or
ds
ss
lods
jbe
jne
insl
scas
fwait
stos
mov
xchg
outsl
jge
add
inc
aad
sbb
pop
test
jmp
mov
sti
loop
loope
inc
out
fldpi
jmp
mov
cmp
cmp
cmp
push
adc
mov
pop
rolb
pop
ret
ficompl
or
iret
mov
bound
adcb
cs
dec
rcrl
xor
dec
out
push
and
insb
gs
mov
mov
lea
cmpsb
sub
mov
push
mov
pop
scas
sub
insb
das
ss
stos
out
adc
sub
sub
mov
inc
repz
and
scas
hlt
push
pop
mov
sti
add
in
mov
movb
adc
xchg
clc
jb
in
mov
popa
andl
xchg
enter
push
les
jo
mov
xlat
iret
scas
and
xchg
xchg
and
imul
or
mov
or
add
xor
repz
xchg
push
test
xor
xor
imul
mov
popa
insl
mov
das
fdivl
outsb
xchg
mov
or
mov
jo
push
adc
cmp
mov
psrad
leave
loope
cltd
mov
ret
xchg
jg
cmp
ljmp
inc
dec
cltd
lcall
popf
xor
ret
mov
jbe
in
mov
adc
test
pop
add
pop
ret
ja
bound
xor
mov
into
xchg
push
xor
mov
or
xor
ljmp
out
movsl
lcall
push
mov
out
adc
pop
xor
dec
cmp
and
out
cld
mov
imul
mov
sbb
mov
and
inc
arpl
fcmovb
enter
push
jns
dec
sti
jl
pushf
mov
jp
xchg
ja
cs
fsts
jle
rcll
mov
decl
leave
stc
pop
inc
cwtl
xchg
enter
imul
sti
xor
push
mov
shll
loopne
mov
pop
fldenv
pop
out
xchg
fyl2xp1
inc
xor
data16
mov
push
adc
xchg
mov
cwtl
xor
mov
iret
inc
lods
add
rorl
add
testl
test
fsubrs
fcoms
or
sub
std
push
dec
jmp
cmp
push
adc
xchg
xor
mov
and
cmp
xor
sbb
cmp
lds
inc
pop
cmp
aad
fwait
aad
fisubrl
arpl
xchg
and
push
cmp
in
xchg
cmpsb
push
push
push
lret
addb
or
call
pop
push
cmpsb
adcl
inc
scas
movb
hlt
and
or
inc
cmp
dec
xor
out
popa
in
stc
je
lods
inc
pminsw
and
leave
lods
ljmp
sub
movsl
cmpsl
sub
decb
insl
mov
mov
fcmovne
movlps
xchg
jg
outsl
testl
cmp
gs
je
add
xor
pop
lods
push
imul
or
mov
dec
and
cmpsl
cld
cmp
je
push
cwtl
pusha
push
mov
cld
idivb
in
pushf
dec
dec
repnz
push
mov
pop
mov
dec
orl
sub
imul
pop
mov
sbb
fistps
aad
mov
mov
xchg
hlt
stos
lock
movsb
stos
xchg
stc
cld
lahf
xchg
sbb
jecxz
mov
cmpsl
or
in
adc
mov
push
shl
sub
cmp
arpl
loop
inc
ficoml
push
xor
sub
pop
jb
popa
mov
or
daa
inc
test
mov
in
jno
cmp
repnz
cmc
sbb
cmp
fildll
call
and
add
pop
xchg
shll
cltd
adc
gs
add
mov
push
cli
pop
sub
jg
into
xor
or
xor
adc
outsb
add
xor
inc
pop
sar
jmp
and
loope
dec
mov
xchg
ljmp
jnp
cltd
mov
pop
into
cltd
and
add
stos
push
cmpsl
outsl
xchg
movsb
aaa
aad
jmp
scas
jns
pop
sarb
lods
xor
pop
mov
mov
xchg
stc
or
sbb
dec
cmp
cmp
adc
insb
xor
pop
insb
mov
cwtl
mov
imul
inc
adc
sbb
popf
sbb
adc
fldt
mov
cmp
dec
sub
xor
jl
sub
paddusw
sub
out
mov
cld
int3
sbb
lahf
jl
push
cmp
xchg
pop
sahf
and
cmp
xor
jp
mov
loope
insl
mov
sahf
dec
and
pop
fmuls
flds
xchg
xor
inc
and
loope
stos
pop
adc
loop
pop
cmp
or
daa
adc
test
adc
cmp
or
push
adc
pop
in
mov
jmp
rorl
pop
mov
testb
cmp
loopne
int3
mov
imul
push
xorl
pop
mov
lret
pusha
push
jns
push
icebp
out
push
inc
xor
fildll
inc
push
mov
repz
inc
adc
pop
sub
mov
and
or
push
cmp
and
mov
rcr
jecxz
and
mov
dec
sbb
bnd
ds
mov
adc
and
aam
outsb
imul
inc
add
idivl
or
ljmp
xchg
pop
shl
inc
loopne
xor
mov
dec
pop
push
sbb
ficomps
push
loope
or
mov
je
lcall
mov
roll
pop
or
enter
or
xor
adc
lret
mov
xchg
int3
xor
jge
mov
xchg
add
mov
push
inc
or
pop
repnz
into
lret
movsl
adc
ficoml
cwtl
rclb
enter
lret
xor
pop
or
adc
push
repnz
sbb
pop
cs
lods
sti
pop
jge
pop
mov
dec
addr16
xchg
pop
xor
mov
ret
pop
repnz
pop
test
pop
cmpsb
xor
repnz
out
pop
mov
push
mov
sbb
adc
adc
imul
pop
dec
jge
lea
jbe
ret
xor
push
mov
mov
mov
jp
add
ret
fidivrs
pop
repnz
xor
push
lcall
ss
xchg
icebp
lret
jbe
mov
xchg
or
xor
mov
ss
jae
mull
fiaddl
xchg
cmp
bnd
mov
stos
pop
push
ds
mov
jecxz
adc
stc
mov
fidivrs
push
repnz
rolb
mov
pop
push
sub
ljmp
icebp
sub
push
jbe
cmp
mov
mov
insl
es
lds
test
int3
and
imul
inc
jmp
jae
mov
call
fcoml
or
jle
push
push
mov
pop
mov
scas
jb
xchg
stos
sarb
imul
out
dec
repz
mov
cmc
jb
into
fiaddl
cmp
or
and
dec
inc
in
nop
cltd
adc
mov
xchg
scas
sahf
subl
mov
add
imul
inc
in
jnp
jne
movl
push
out
xchg
mov
xchg
push
push
xor
sub
jmp
lea
mov
xor
aas
rolb
inc
jno
insl
rcl
movl
pop
pop
test
push
cmp
or
and
lret
xorb
adc
cs
or
jl
mov
xchg
mov
in
roll
sub
sub
sbb
adc
lock
mov
lds
stc
cmp
push
and
jae
ja
das
xor
es
stc
pop
mov
mov
mov
xor
mov
mov
shl
cli
mov
roll
enter
shrb
imul
and
jl
adc
xor
lods
mov
btcl
aad
xchg
je
and
dec
shl
cmp
and
jmp
pop
fwait
out
sub
add
mov
or
pop
aam
push
das
dec
shl
sub
mov
adc
icebp
inc
es
aam
shl
and
repz
push
sub
pop
test
sbb
add
inc
sub
cmp
fnstenv
add
ret
cld
mov
insl
cmp
mov
dec
xor
mov
in
inc
stos
repnz
sub
mov
mov
cmp
nop
mov
dec
in
fadds
leave
inc
in
or
lcall
sbb
push
jnp
xchg
push
mov
xor
add
mov
btl
data16
xchg
cmp
gs
movsb
or
push
cmp
js
jp
xchg
es
shlb
xlat
movsl
imul
push
pushf
mov
mov
xchg
outsb
mov
jge
lcall
mov
adc
dec
dec
mov
jns
les
xrelease
xchg
or
and
pop
xchg
loop
pop
in
and
xchg
push
lods
jge
jae
jg
test
adc
dec
ds
ss
jle
das
sbb
adc
rorl
lods
sub
xchg
bound
jbe
sbb
sub
aas
pop
dec
fidivs
sbb
and
add
popa
xorb
lahf
enter
dec
popa
or
sub
xor
loope
movsl
sti
int
cs
xchg
ret
loopne
lcall
xor
ffreep
sbb
ret
sarb
repnz
sub
mov
fldenv
cmp
push
dec
xchg
fcmove
lods
add
sbbl
ficoms
xchg
mov
pop
or
mov
loop
push
mov
jno
loope
clc
es
mov
add
jmp
xchg
sbb
pop
dec
sbb
and
sarb
sub
dec
cmp
scas
mov
add
stc
push
sbb
cmp
outsl
dec
leavew
pop
test
cld
iret
iret
mov
dec
xchg
mov
xchg
dec
mov
sti
repz
mov
lea
out
movsb
mov
jne
xchg
cmp
dec
int
pop
add
sahf
xor
mov
add
lock
mov
lds
cmp
jecxz
lcall
xor
dec
mov
movsl
cmp
dec
xchg
pop
push
pop
fcmovbe
inc
cwtl
hlt
rorb
cmp
mov
cltd
dec
add
bound
pop
and
jae
aam
ss
aas
sub
ret
insl
push
mov
enter
sbb
and
jle
movsb
adc
outsb
scas
scas
inc
mov
cs
rcrl
sub
sbb
cli
mov
pop
scas
mov
fwait
inc
pop
lods
lret
adc
out
adc
lcall
xchg
sarb
sub
in
inc
pop
push
xor
loop
idivb
data16
pop
xorb
add
sbb
dec
dec
lods
addb
fcmovnu
or
icebp
out
cmp
sub
jp
jmp
sbb
xchg
sub
addl
fstps
aam
sahf
inc
mov
mov
mov
in
xlat
movsl
push
xchg
fbld
add
add
icebp
cld
jnp
mov
cmp
jge
std
loopne
cmp
imul
xchg
cmp
adc
int3
sbb
or
adc
enter
mov
mov
cs
cli
negb
ss
ljmp
sub
push
cmp
push
divb
fs
push
mov
xchg
mov
divb
lods
arpl
dec
fisttpl
das
movsl
cld
leave
bound
dec
dec
xor
outsb
mov
jl
jl
pusha
ret
int
mov
mov
jg
jo
sbb
shlb
mov
rcrl
sub
push
jne
mov
testb
pop
out
test
inc
mov
inc
adc
sub
dec
imul
inc
movsl
cltd
or
adc
push
jns
dec
fdivrs
imul
shl
shlb
fimuls
test
in
decb
dec
lods
xor
mov
fsub
ror
cltd
mov
push
pop
sbb
movsb
or
push
or
pusha
dec
pop
ficoms
es
mov
mov
jno
xchg
cli
imul
pop
mov
and
sub
xor
dec
jle
aam
scas
push
les
mov
rcrl
xorl
cmpl
inc
jge
in
sbb
or
push
and
xor
das
js
int3
out
es
out
hlt
incl
inc
mov
adc
push
fisttps
or
rcrb
add
out
testb
cld
push
or
and
shlb
jae
push
nop
mov
pop
mov
bound
lods
outsl
btl
mov
xor
or
faddl
in
cli
ds
xchg
mov
es
push
or
cmp
xchg
or
into
jns
xor
xor
jg
push
dec
insl
ss
out
pusha
jl
out
adc
adc
and
xor
sbb
or
lcall
mov
or
mov
mov
cmp
push
dec
cwtl
jg
cmp
inc
btsl
stos
mov
cmc
dec
and
cld
lods
ljmp
test
dec
sub
pop
lret
nop
sub
out
and
jge
dec
lcall
cmp
add
les
push
dec
in
or
pop
add
pop
dec
lret
int3
daa
andb
and
test
mov
fcomps
mov
xor
stos
sub
int
inc
in
jmp
pop
insb
das
xor
outsl
add
arpl
sti
jge
mov
push
cmpsb
dec
lods
push
xor
ret
out
or
and
lea
mov
lock
mov
add
aaa
xchg
das
fldcw
mov
cmp
fisubrs
add
dec
movsl
mov
sub
dec
inc
rcrb
aas
int3
aas
pop
mov
or
repnz
mov
xor
outsb
sub
jmp
xor
aam
cmp
cld
and
test
mov
push
sub
mov
dec
fisubrl
cmp
out
rdmsr
mov
addr16
daa
out
push
sub
sbbl
adc
push
mov
xor
outsb
out
pop
xchg
nop
stos
adc
push
lea
sbb
ljmp
popa
adc
sub
stc
dec
mov
mov
ficoml
mov
cs
jl
jns
mov
mov
cs
dec
ret
fisttps
mov
mov
xchg
fs
lods
mov
in
push
mov
push
sub
cli
mov
push
inc
bound
lods
in
dec
aam
sbb
cli
dec
pop
mov
push
sub
cmc
ret
or
lret
cmp
movsl
testl
outsl
repnz
aam
rol
rol
orl
nop
in
iret
push
imul
les
and
pop
test
stos
cwtl
imul
or
and
pop
into
std
out
xor
adc
mov
sub
cmc
push
in
aad
jb
sub
addr16
dec
adc
lret
iret
and
xchg
xor
sub
adc
push
cmc
ljmp
movl
jmp
fdivr
fnsave
pusha
outsl
cmp
adc
int3
adc
mov
aad
push
sub
cmc
and
inc
loop
adc
push
cmp
push
add
out
mov
outsl
lods
mov
mov
jle
xchg
pop
fdivs
xchg
mov
imul
js
xor
xchg
notb
xor
imul
dec
push
cwtl
ja
xchg
cmc
inc
xor
mov
pop
sub
fisttpl
lahf
sub
gs
pop
rorl
jmp
fidivs
push
scas
mov
push
sbb
sbb
push
pop
jbe
ss
sti
dec
and
mov
shll
fdivrl
mov
inc
or
or
inc
unpckhps
mov
sbb
mov
out
sub
cmc
mov
dec
lret
iret
stos
mov
mov
mov
fidivrl
sub
mov
dec
mov
adc
movsl
ret
xchg
fstps
mov
out
add
jge
mov
aas
jmp
push
ret
cwtl
dec
fdivrs
or
jae
push
out
clc
add
mov
sub
sbb
mov
loope
cmp
in
add
xor
mov
cld
xor
outsb
push
push
mov
cmp
inc
push
and
inc
inc
cmp
mov
add
adc
jp
pop
lea
dec
sti
cmp
cmp
jo
imul
pop
xor
out
adc
ret
rcrl
sub
mov
xchg
or
data16
sar
mov
scas
insb
cld
and
add
and
sub
sub
cmpsb
xor
xor
cs
sbb
or
and
dec
fsubrl
jge
pop
mov
sub
mov
sub
adc
sub
fsubl
sbb
push
push
jno
mov
jmp
lcall
adc
ret
pop
aam
push
je
jge
jnp
jo
in
rorb
nop
jg
sbb
loopne
icebp
cwtl
inc
adcb
cmp
jo
pop
pop
and
dec
pusha
adc
js
adc
testb
pop
sub
lahf
or
sub
arpl
and
sub
clc
sub
aad
cmp
in
fsubrl
bnd
loopne
cmp
pushl
push
pop
jmp
pop
adc
nop
test
lret
outsl
movsl
incl
pop
aam
xchg
or
or
push
addb
ret
and
pop
rcr
pop
mov
dec
pop
or
dec
pop
pop
dec
ret
fsts
scas
cltd
push
out
lcall
pop
xorb
stos
loope
pop
cmp
sahf
icebp
pop
scas
sbb
add
mov
adc
dec
loop
pop
pop
loopne
adc
shll
xor
mov
icebp
mov
icebp
xchg
add
mov
mov
cld
rorb
and
push
repnz
lcall
sub
lret
lds
sahf
or
ljmp
mov
mov
repnz
stc
jmp
mov
xchg
xor
scas
xchg
mov
lds
pop
cmp
mov
inc
jb
push
data16
loop
outsb
mov
fisttpll
adcb
icebp
cli
xacquire
test
pop
lret
xchg
push
sti
out
fcoms
mov
loopne
sti
fcmovb
pop
out
push
outsb
pop
test
cld
mov
jp
aam
icebp
pop
sbb
xchg
out
fwait
enter
pop
clc
lcall
stos
jbe
xchg
mov
mov
mov
push
sub
mov
pop
out
fdivrp
ss
cli
jle
fidivrs
sahf
push
push
mov
mov
out
into
jbe
dec
mov
cmc
push
insl
lea
call
loop
call
xlat
dec
push
pop
cli
mov
fadds
add
jl
xchg
call
rorb
ljmp
cs
mov
adc
fsqrt
int
insb
cmp
out
sub
int3
pop
imul
dec
fdivr
cli
push
outsb
fimuls
in
enter
or
cmc
notl
iret
push
gs
cmp
mov
adc
stos
jo
pop
and
xor
or
ss
or
push
xchg
out
cmp
mov
xor
pop
cld
mov
stos
or
pop
inc
and
xor
sub
lock
adc
les
movl
je
xor
in
dec
cltd
ret
lds
or
inc
lcall
sbb
insb
jge
inc
cmpsl
scas
fsubr
sub
inc
rorl
leave
bound
sub
dec
int3
push
call
ja
pop
xor
lcall
repnz
and
insl
nop
imul
mov
and
inc
lahf
loop
je
sub
mov
ds
stos
pop
les
mov
packsswb
cwtl
cmpsb
inc
pop
daa
ljmp
xor
adc
inc
xchg
mov
mov
cmp
gs
xor
dec
ret
shlb
lcall
shll
pop
mov
pop
rolb
jo
sub
mov
outsl
paddq
adc
nop
jae
mov
or
dec
or
xor
jecxz
dec
jecxz
adc
mov
stos
in
inc
cli
lahf
js
loop
or
cmp
aad
cld
jbe
mov
and
cli
cmp
in
inc
incl
mov
and
mov
mov
dec
sbb
push
mov
sbb
sti
adc
sub
lds
dec
mov
int
shrb
xchg
test
es
das
fwait
xchg
mov
aaa
adc
adc
xchg
xchg
shll
xor
aad
mov
pop
clc
or
mov
je
adc
sbb
repnz
pop
adc
sbb
pop
fldt
icebp
or
cmpsb
hlt
sub
sarb
mov
jae
repnz
jle
adc
rcrb
stc
xorl
inc
pop
rcl
and
loop
add
push
and
out
mov
add
scas
jae
or
push
ret
pop
xor
test
xor
fsubrp
gs
or
leave
stc
pop
cmp
out
jo
mov
fsubrp
lods
icebp
xor
jb
std
cwtl
jge
stos
loope
xchg
pop
ds
adc
scas
mov
jge
ret
outsb
pop
xchg
shr
mov
cli
push
pop
in
pop
sub
repnz
je
dec
ljmp
push
jle
ljmp
cmpsb
sbb
enter
xchg
jae
sub
int
ficomps
jmp
sar
mov
divb
mov
scas
mov
mov
inc
mov
imul
pop
lret
xchg
leave
pop
push
ss
jne
stc
pop
int3
pushf
xor
xchg
icebp
repnz
lret
repnz
idivb
mov
jp
sub
jmp
stos
repnz
adc
jp
dec
test
jne
cmp
mov
insb
sahf
mov
int3
or
inc
xchg
pop
push
icebp
rcr
cmpb
ljmp
jle
xchg
xchg
mov
pop
dec
repz
andb
mov
ret
jl
idiv
cmp
decl
jle
fsubrs
rcll
scas
jbe
ds
ljmp
shll
pop
xchg
movsb
fstps
out
or
adcb
mov
jmp
jle
rolb
aad
and
jp
es
ficoml
out
cmp
mov
mov
cltd
repnz
push
jp
sub
scas
lea
dec
xor
xor
repnz
xlat
cmp
or
sub
and
inc
into
je
and
lods
out
pop
aaa
ret
or
dec
cmp
mov
fadds
addr16
sub
push
add
xor
pop
repnz
and
loope
and
jae
fbld
jne
lods
popf
loopne
mov
mov
cltd
dec
je
rcrl
addl
dec
aam
cs
shll
mov
je
into
xor
dec
cmp
fcomps
push
push
das
leave
in
xchg
shlb
mov
inc
sbbl
sub
decb
enter
xchg
xor
sti
add
push
mov
pop
inc
int
push
insl
push
lahf
pop
xlat
cli
mov
ds
jl
sahf
cmp
jne
call
push
and
loopne
sbb
xor
addb
enter
mov
in
mov
sbb
mov
cmp
sbb
jne
xor
lods
clc
mov
sub
inc
xor
mov
add
fiadds
sub
rcrl
and
cmp
or
lea
enter
into
cmp
cmpsb
in
cmp
divl
ljmp
outsl
jl
sti
push
popa
cld
mov
sbb
test
fdivl
or
jp
stos
int3
xchg
adc
addr16
inc
test
rolb
aam
outsl
popa
cmp
pop
cli
popf
repz
cmpsl
mov
test
cwtl
xor
cmp
outsl
sbb
fdivl
adc
test
adc
xor
adc
mov
jbe
push
insl
repz
outsb
das
lods
jo
cmpsb
mov
es
inc
sub
push
stc
rol
fidivrs
fisttpll
cmp
xchg
hlt
gs
mov
pop
stos
loop
test
jp
popa
pop
test
gs
pop
dec
sbb
sbb
scas
pop
cmp
cmp
lock
jg
mov
repnz
xchg
cmpsb
xchg
faddp
and
pop
mov
mov
mov
jle
dec
stos
dec
cmpl
mov
cmp
cwtl
ljmp
pop
sbb
cmpb
sbb
sbb
cmp
add
repz
sub
sub
enter
mov
out
das
inc
int3
jl
and
jmp
fwait
lahf
dec
adc
sbb
xor
push
fiaddl
or
mov
div
fdiv
imul
lods
pop
sbb
sub
pushf
sbb
ret
adcb
dec
adc
mov
mov
adc
cmp
adc
inc
mov
sub
in
push
adc
lcall
add
lds
and
enter
call
sub
push
popa
outsb
inc
lea
sbb
je
xchg
fldcw
fucomip
cmp
daa
dec
mov
xchg
xor
inc
cmp
sbb
divb
xchg
push
aaa
and
int3
sar
and
pop
pop
loop
inc
setno
inc
cmp
rolb
aaa
inc
and
popf
xor
sahf
dec
adc
iretw
inc
push
sub
push
adc
cs
cmp
xchg
lods
mov
xor
push
adc
sub
orb
push
push
dec
shrb
dec
pop
scas
call
pop
rorl
xor
or
cmp
dec
test
ja
inc
jp
xchg
pop
push
fidivrl
cmc
push
lods
into
outsl
repnz
adc
sub
mov
and
test
test
xchg
mov
cwtl
xchg
lods
inc
jns
fs
mov
xchg
pushf
pop
push
jno
dec
or
xchg
sti
or
mov
jp
daa
or
xchg
int
sbb
lea
pushf
cmp
dec
pop
je
xchg
xorb
cld
jg
pushf
push
decl
nop
dec
and
push
cmp
insl
mov
jnp
and
imul
gs
xchg
sbb
sub
inc
adc
xchg
icebp
sub
lods
xchg
pusha
outsl
shlb
loopne
loope
cmp
dec
arpl
or
push
adc
ret
xor
fimuls
das
mov
insl
mov
shrb
mov
adc
movsl
mov
or
cwtl
xor
cmp
ljmp
in
adc
mov
imul
lds
cmpsl
ret
imul
mov
mov
mov
sbb
loope
inc
and
ss
push
subb
popa
jns
cmpsl
into
test
xchg
sbb
fwait
dec
in
fdivs
adc
movsl
add
ds
lock
mov
insl
cmc
dec
in
mov
addb
cmp
fisubl
imul
stc
push
sub
in
inc
adc
mov
ss
pop
dec
xor
out
ret
or
xor
mov
mov
sbb
cmp
mov
pop
mulb
xchg
not
sub
or
adc
bound
dec
icebp
xchg
inc
and
outsl
imul
xchg
sbb
stos
pushf
jmp
mov
pop
or
cmp
lea
pop
popa
aam
pop
ror
cmp
lods
cs
std
adc
je
ds
cmc
mov
pop
sub
or
mov
sub
clc
sub
xor
mov
ret
fbld
add
push
jge
cmpsl
dec
test
movb
adc
push
push
pause
repnz
ret
movb
or
fsubp
inc
lcall
xchg
xor
je
and
cld
sub
pop
add
jl
repnz
fmull
adc
lret
xchg
push
inc
mov
lods
int
adcb
mov
pop
sub
xchg
jp
ret
adc
pop
mov
rorb
dec
aas
pop
pop
jg
add
adc
sub
and
add
xchg
pop
and
cmc
xor
inc
mov
cmp
rcrb
push
mov
hlt
inc
xor
out
rcrl
cmpl
lds
fmull
and
fwait
repnz
mov
sahf
inc
icebp
dec
cmp
and
ja
push
sub
outsb
mov
ljmp
arpl
jns
jg
fisttps
xor
pop
adc
cmp
sti
xchg
arpl
cld
sub
xor
pop
or
cmp
dec
mov
cli
fs
jbe
mov
sub
pop
out
sub
jg
or
mov
dec
rcr
mov
movsb
jmp
scas
rcr
fs
lods
mov
arpl
or
daa
push
xchg
insl
pop
das
ja
push
inc
leave
loop
adc
or
push
mov
pop
inc
push
lret
int3
sti
in
mov
inc
cmp
mov
and
shl
mov
sub
stos
sbbb
push
daa
call
out
and
ficoml
sub
inc
fwait
lods
mov
leave
xlat
sbbl
aam
repnz
xchg
je
cld
lret
cmp
push
rorl
adcb
push
and
or
aas
dec
xor
xor
enter
sti
dec
loope
movsb
pop
jle
xlat
mulb
push
stc
sub
xchg
dec
xchg
mov
jmp
dec
pop
jne
out
inc
gs
in
sub
mov
aam
jecxz
mov
ljmp
outsb
cmp
mov
inc
push
mov
gs
xor
sbb
hlt
cmpsl
cs
pop
sarl
orb
xorl
bound
push
dec
pop
xor
xor
repz
mov
daa
dec
pop
in
lcall
pop
pop
xchg
bsf
xchg
testb
mov
movsb
popf
mov
pop
dec
or
ja
push
cmc
mov
dec
lret
mov
inc
ret
xchg
out
xchg
push
xchg
mov
xchg
hlt
cmp
cltd
or
or
push
push
and
ror
add
cmp
aas
mov
lret
cld
rol
xchg
push
inc
fdivs
or
pop
xor
jg
fmull
ret
push
pushf
dec
fs
and
loop
leave
daa
dec
push
xchg
ljmp
sub
push
insb
adc
dec
js
subl
repnz
and
mov
inc
bound
dec
sahf
sub
adc
or
dec
lods
dec
xor
fcmovb
ja
xor
mov
fisttpl
sti
xorb
xchg
aas
cmp
jno
or
xor
inc
adc
mov
movsb
in
imul
sti
lret
and
mov
push
rcr
mov
call
btrl
bound
add
xchg
xchg
add
ljmp
jge
cwtl
shlb
xchg
cwtl
inc
cmp
pop
pop
stc
int3
lea
jl
in
sub
pop
fisubrl
push
cmp
out
daa
rcl
add
sbb
adc
and
xchg
and
sbb
xorl
xor
xchg
cld
inc
dec
xlat
fstl
ret
adcl
mov
mov
mov
add
rcrb
xor
sbb
mov
xchg
cwtl
xor
fisttps
xor
cmpsl
pop
mov
mov
or
cltd
and
lock
jle
ficoms
and
das
insb
testl
xor
jl
pop
adc
ror
ljmp
push
in
arpl
movsb
push
xor
idiv
add
or
xor
push
mov
mov
push
out
mov
xchg
xchg
mov
aam
sub
inc
aad
dec
pop
cmp
bound
inc
pop
sub
enter
adc
pop
iret
xor
cmp
pop
fnstcw
jbe
imul
lret
jecxz
dec
dec
push
sbb
sarb
dec
adc
pop
test
notb
dec
xchg
dec
aaa
and
dec
mov
add
mov
fiaddl
or
push
adc
pop
out
adc
fwait
mov
jmp
sbb
pop
dec
sti
jno,pt
jnp
push
mov
fdivp
xchg
adc
mov
mov
popa
pop
pop
testl
sbb
sub
ja
arpl
push
or
mov
imul
or
inc
mov
out
xchg
adc
test
enter
xchg
test
mov
inc
not
cs
aas
xor
not
outsb
mov
cli
popf
sbb
cld
mov
mov
mov
jb
mov
cmpsl
lods
mov
xor
pop
mov
test
idiv
lods
cltd
mov
sub
imul
sbb
push
adc
popa
test
fdivs
mov
cli
sbb
or
add
sarb
icebp
clc
mov
clc
xchg
insl
xchg
pop
loop
inc
neg
xchg
cli
cmp
sub
push
or
sbb
mov
ljmp
dec
xor
pop
sub
and
cmp
icebp
xor
out
pushl
or
push
sub
jns
shlb
enter
repz
jbe
out
mov
stos
stc
sarb
out
push
add
jns
mov
cmp
mov
add
lret
adc
lods
pop
lods
inc
sbb
fcompl
stos
dec
pop
scas
test
mov
ficompl
testl
xor
sbb
outsb
repnz
cmp
cmpb
sbb
mov
or
xorl
je
cmp
nop
or
or
loope
xor
cmc
adc
xchg
scas
adc
rol
mov
rorb
cmp
or
rcrl
rcrb
add
fnstenv
cld
dec
mov
mov
vpsrld
int3
negl
xchg
pop
cmp
lret
ljmp
push
ret
pop
xorl
aam
mov
xor
cmp
addb
std
adcb
ficoml
sub
movsb
iret
xor
mov
lods
cltd
ljmp
dec
test
cld
mov
int3
cmp
mov
in
and
insb
pop
aam
repnz
xor
push
cmp
xor
adc
inc
pop
cmpb
cmp
adc
insb
popf
dec
sbb
push
mov
adc
leave
dec
shll
lock
sbb
ret
bound
inc
pop
cltd
cld
retw
popf
push
or
pop
xchg
xor
pop
imul
add
push
inc
add
pop
pop
ds
mov
jae
rcr
and
mov
or
iret
mov
mov
data16
ljmp
sub
xor
mov
push
fs
dec
inc
adc
pusha
jnp
addb
jae
loopne
bound
push
cmp
call
mov
das
pop
mov
push
dec
sbb
movsb
test
and
pop
inc
mov
data16
ret
sub
sbb
popf
ja
int3
test
jbe
fildl
ficoml
and
mov
stos
aaa
lds
mov
xor
mov
or
test
and
cltd
push
adc
push
stc
or
jmp
and
cmp
push
inc
or
xchg
sub
ret
sub
cmp
add
pop
xor
leave
jmp
addr16
cld
and
add
mov
in
div
adc
inc
sub
cmp
ja
notl
xor
sub
sti
iret
dec
outsl
push
xor
sbb
dec
sbb
xor
cmp
mov
enter
adcl
adc
mov
scas
sbb
iret
adc
cmp
cmp
mov
mov
cld
loope
dec
sbb
adc
daa
mov
sub
fsub
push
cld
push
out
xchg
push
negl
nop
test
dec
sbb
dec
adc
pop
out
in
cld
cmc
shrb
lock
dec
xor
mov
push
pop
fdivl
out
jae
jbe
sbb
test
lods
repnz
pop
int
push
jp
dec
std
xor
add
pop
stos
inc
repz
lahf
xlat
xchg
leave
xchg
stc
inc
cmp
pop
cmpl
mov
sub
rolb
xor
out
pop
pop
call
data16
inc
bswap
xchg
cli
adc
cmp
mov
lcall
aad
leave
and
out
dec
repnz
in
js
and
insl
test
repnz
cmpsl
add
pop
or
movsl
sti
push
rcrl
or
into
inc
jae
int
push
lods
repz
xor
pop
push
mov
cs
ror
popa
mov
push
dec
sti
or
xchg
ss
ficomps
cmp
pop
xchg
fidivl
outsb
enter
rcrb
hlt
jge
xor
sub
bound
pop
xor
aam
lcall
pushf
popf
sbb
rorl
jne
push
mov
cmp
push
sub
or
jp
jnp
outsb
inc
mov
xchg
inc
push
or
sub
insl
idivb
dec
mov
sub
mov
lret
pop
jmp
in
rclb
pop
aam
int3
es
mov
or
inc
cmp
pop
mov
lods
shlb
aad
xchg
dec
xchg
fcompl
push
shrl
jno
xor
outsb
add
iret
cwtl
fdivr
fisubrl
push
pop
cmp
imul
xchg
lods
mov
jns
sbb
cld
cli
mov
out
mov
int
push
imul
sub
pop
mov
cmp
and
sub
shrl
cli
mov
cli
cld
add
loop
xchg
std
cmp
pop
jle
repz
dec
mov
sbb
add
loop
adc
in
imul
inc
test
mov
xchg
and
pop
and
cmp
mov
clc
cmp
xchg
int3
mov
mov
enter
jno
xchg
xchg
mov
cmp
jl
clc
into
ret
stos
xchg
dec
xchg
jbe
aad
cmc
das
iret
mov
mov
loopne
test
rol
mov
xchg
pop
mov
pushf
rcl
lret
stos
outsl
scas
mov
xchg
leave
inc
negb
addr16
fistpll
scas
imul
and
lods
sarb
xor
pop
mov
cltd
xchg
bound
popa
lea
pop
leave
inc
arpl
in
add
leave
jecxz
cmp
movq
xchg
sahf
adc
subl
dec
lock
xor
fs
xchg
sbb
mov
subl
in
test
imul
lds
xchg
add
nop
dec
or
xor
out
pop
xchg
mov
cmp
mov
jmp
std
ds
test
xchg
repnz
jl
aaa
lods
add
and
icebp
mov
sti
xor
cmpsl
jg
scas
mov
fucomip
cmp
jl
fadds
jp
xchg
repnz
jns
mov
inc
addr16
adc
and
fistps
mov
push
fstpl
loope
mov
xchg
xchg
cmp
jg
std
cld
and
mov
jle
or
push
cmp
das
xor
jne
in
inc
jl
sub
or
cmp
inc
dec
ja
wbinvd
shrl
xor
cmp
sbb
aad
sbb
mov
inc
mov
adc
mov
pop
ljmp
adc
inc
outsl
or
outsb
es
sub
outsl
xchg
in
cltd
sub
sahf
inc
jl
mov
adc
xchg
sub
aaa
ret
fs
xor
mov
inc
scas
pop
stos
out
ret
and
mov
shlb
cmp
sub
inc
dec
cltd
xor
sub
scas
dec
or
ss
outsl
or
pop
cld
pop
sub
sub
lds
int3
daa
inc
push
mov
xor
cmp
xchg
sti
movsl
bndstx
and
dec
jg
in
xchg
repz
jae
mov
jns
mov
mov
pop
or
cmp
sbb
sub
pop
fs
sbbb
rclb
cmpb
mov
mov
xchg
fwait
cmpsl
test
ja
jb,pn
push
xchg
scas
adc
in
ja
ds
imull
xchg
je
cli
push
jae
and
xor
out
ss
pop
mov
mov
fdivl
repnz
lea
ja
sbb
repz
popa
cmpsl
add
data16
inc
imul
sub
push
pushl
jp
xchg
sbb
je
sbb
lea
inc
push
into
into
imulb
shll
cmp
data16
pop
add
mov
cmc
ret
and
ss
je
jns
xor
sarb
mov
sub
sub
adc
sub
push
mov
mov
mov
popf
gs
lods
adc
cltd
xchg
dec
out
xchg
icebp
sub
mov
aam
mov
fstps
iret
xor
sahf
dec
push
insl
jbe
std
xchg
mov
pushf
test
adc
mov
jne
ja
xchg
int
xchg
or
jno
and
daa
pop
inc
cli
ret
mov
sahf
jle
xlat
mov
ja
inc
dec
sub
cmp
adc
inc
mov
cltd
and
ljmp
lea
std
pop
ds
adc
sarb
jno
lret
loop
and
adc
test
jmp
push
loop
push
rorb
out
sbb
hlt
cltd
sub
dec
pushf
addr16
leave
xor
call
out
mov
and
sbb
leave
dec
adc
or
jno
rcrb
cwtl
sbb
cmp
jnp
mov
cmp
push
mov
mov
movsb
jle
jmp
aas
stc
ss
jg
adc
pop
inc
in
fnsave
clc
xchg
jne
les
cltd
jnp
xor
inc
ja
jl
or
cmp
push
sub
je
mov
pop
lret
adc
mov
aad
sti
adc
sub
shr
xchg
repnz
adc
cmc
fldt
jmp
ret
xchg
cmpsl
loope
xchg
cmp
pop
dec
ficoml
sub
enter
mov
and
lods
lods
xor
mov
rcl
or
xor
jle
ds
js
jnp
sub
mov
cld
enter
cltd
cld
mov
and
cmp
ret
push
addr16
xor
add
xchg
mov
ss
in
mov
aas
xchg
or
sub
gs
jae
rolb
dec
jmp
xchg
sub
out
loope
dec
mov
flds
sub
pop
and
clc
dec
lret
or
fildll
inc
jns
mov
movsb
in
push
xor
out
daa
adc
insl
sbb
sub
jmp
pop
sub
mov
or
rclb
dec
in
inc
cli
in
mov
loop
jnp
rcrb
pusha
test
mov
xchg
aas
push
rol
jmp
fsts
add
push
pop
sub
dec
repnz
dec
push
sbb
xchg
test
and
jle
scas
cld
and
shl
jb,pn
or
pop
movsl
outsb
or
lcall
xchg
mov
jmp
insl
mov
jl
stos
aad
push
adc
icebp
sahf
adc
test
cmp
and
aam
stc
xor
int3
popf
aaa
sbb
mul
aam
pop
inc
add
mov
cmp
enter
pop
sbb
sub
rol
or
sub
testb
adc
mov
dec
pop
mov
rcll
orl
adc
mov
pushf
lret
adc
dec
xor
adc
bound
xor
and
cmpsl
sbb
pop
lret
dec
and
and
into
lcall
int3
out
mov
lahf
leave
shll
mov
dec
mov
pop
sub
mov
lcall
mov
test
addr16
repz
fwait
adc
pop
adc
and
fisubs
notl
test
mov
xchg
outsb
mov
movsl
jb
sub
inc
lods
jo
std
mov
push
ret
jo
or
stos
lret
xchg
enter
mov
mov
jg
dec
repnz
xlat
cli
mov
pop
push
or
sbb
divb
xchg
dec
js
movsb
cmp
repz
mov
xor
nop
cmp
push
add
movsl
jecxz
xchg
cli
mov
push
faddp
jp
out
mov
mov
sbb
loope
or
incl
push
add
xchg
and
mov
adc
cmp
loope
scas
repnz
cld
pop
call
push
subb
shll
sbb
xchg
inc
cmc
sbb
add
or
divb
inc
movsb
pop
add
push
xchg
xlat
pop
in
data16
mov
pop
mov
scas
mov
inc
mov
cmp
fdivrl
andl
dec
pop
pop
addr16
into
push
adc
sub
xor
mov
sbb
js
aaa
inc
dec
fistpll
data16
repnz
test
xlat
or
cmpl
or
mov
adc
and
rolb
mov
jle
add
adc
pushf
test
std
mov
fucomp
mov
mov
xor
outsl
sub
mov
adc
adc
push
xchg
cmpsl
pop
out
cli
fs
xchg
sub
or
dec
xor
jne
adc
out
inc
test
xor
dec
or
and
roll
jb
repnz
leave
push
xchg
dec
hlt
int
ljmp
cmp
xor
enter
pop
push
mov
dec
pop
sub
les
enter
sbb
pushf
ret
mov
outsl
jns
mov
xchg
lea
sarb
ror
lods
lret
repz
fdivrl
imul
pop
out
cld
xor
divb
cwtl
mov
jnp
xchg
xor
ret
into
sub
iret
inc
call
sbb
js
mov
sbb
mov
gs
cmc
fmull
insb
cli
sub
lds
xor
mov
mov
cmp
and
ljmp
xor
nop
fldenv
mov
mov
jg
mov
int
cmp
ljmp
aad
cmp
sbb
ret
sbb
dec
in
add
jnp
fadds
shl
mov
jmp
cli
xor
sub
stos
movsb
cmpsb
or
scas
outsl
xor
sub
xchg
cmpsl
dec
mov
mov
ret
dec
adc
dec
pop
dec
adc
dec
popa
icebp
in
or
into
inc
loop
mov
out
cmp
jb
xchg
div
push
fisttps
test
cmpb
aam
gs
and
in
mov
mov
push
adcb
lcall
sbb
inc
insb
xchg
mov
leave
push
out
or
sahf
aaa
addr16
sub
ret
into
jns
js
test
inc
xchg
xor
jp
pusha
lods
int
or
mov
push
mov
mov
lret
push
div
push
xor
sbb
ljmp
or
xchg
mov
std
cmp
sbb
jmp
xchg
xchg
or
mov
popf
clc
insl
jp
pop
sbb
popa
sbb
and
test
add
aas
inc
push
cs
sti
cwtl
mov
jbe
mov
rorl
cmp
mov
rorl
inc
inc
jle
je
dec
mov
jne
mov
push
jmp
mov
mov
add
les
ss
fildll
outsl
adc
fisttps
gs
jb
pop
adc
xor
mov
push
xchg
cmc
sub
iret
xchg
mov
xor
fcmovnbe
cld
lret
cmpsl
or
lock
and
sbb
ret
test
ret
add
hlt
pop
sub
xchg
add
mov
sbb
cmp
popa
sbb
adc
rorb
lods
shlb
sbb
and
adcl
inc
aaa
in
jg
sub
and
jo
cmp
cmp
cld
call
xor
popf
outsl
xchg
cmp
and
enter
xchg
out
mov
sbb
pop
jg
cli
mov
push
mov
inc
insl
cltd
scas
cmp
xlat
das
jmp
daa
mov
mov
push
mov
sti
rcl
mov
push
scas
shll
je
cmc
int3
xchg
inc
jne
lret
inc
addb
movups
sub
pusha
inc
inc
sbb
shl
js
jnp
cmp
add
cli
hlt
lds
ret
je
outsb
pop
mov
repnz
xor
push
dec
cmp
sarl
rclb
mov
xlat
lds
shrb
inc
ss
cli
ret
and
xchg
and
aas
jnp
fs
test
jle
jge
xchg
cli
cmp
in
aas
inc
xchg
fs
sarb
fs
cmp
shrb
sbb
sbb
jae,pn
aas
mov
out
jecxz
inc
dec
pop
cli
jae
subb
or
cmp
arpl
int3
je
adc
jmp
push
jl
repnz
and
orb
mov
lods
lods
cmp
cli
lock
cmp
inc
sub
movsb
test
jae
sbb
mov
arpl
push
stos
sbb
lahf
inc
and
rorl
lods
cwtl
push
shl
mov
mov
std
mov
ret
iret
push
cmp
ds
xor
in
fistps
sbb
lahf
aas
mov
xchg
adcl
cld
sti
outsb
mov
push
mov
leave
pop
mov
add
fsubrs
fisubrs
push
aad
loop
outsb
mov
mul
or
jo
in
inc
xchg
sbb
pop
and
mov
push
jne
imul
adc
xor
into
xchg
mov
out
fwait
cmp
or
les
and
mov
add
adc
dec
xchg
cmpsl
loope
enter
cmp
test
clc
mov
mov
jl
dec
cmp
mov
inc
inc
jnp
jo
pop
insb
cmp
cwtl
mov
mov
or
mov
inc
sub
jmp
cmp
sub
push
xchg
mov
out
loop
adcl
scas
jp
sbb
xchg
and
out
and
xchg
inc
xor
pop
jle
mov
fwait
adc
xchg
push
add
rcrl
leave
mov
out
jmp
xchg
hlt
mov
icebp
lea
mov
sub
dec
pop
adc
imul
inc
mov
push
sub
mov
xchg
xor
pop
adc
scas
mov
fdivl
dec
xchg
dec
lds
jg
lahf
addr16
pop
push
dec
movsb
mov
mov
dec
loop
inc
into
lea
ror
push
lcall
test
pop
fs
aaa
and
cwtl
ret
mov
sub
rol
xchg
push
mov
cmp
addr16
inc
dec
xlat
imul
mov
ljmp
cli
iret
stos
or
inc
inc
sbb
cmp
mov
lcall
or
test
ret
xchg
or
repz
in
ret
adc
cmp
pop
and
mov
aam
shll
jmp
xor
aas
or
outsb
scas
ret
pusha
adc
sub
fsubr
mov
rorl
pushl
es
jg
mov
cmpsl
cmp
pop
push
sarb
ret
inc
faddl
push
sbb
sahf
and
adc
into
and
mov
pop
xor
int
mov
enter
jge
push
sub
or
pop
cs
xchg
mov
test
or
ljmp
cmp
and
test
divl
loopne
cmpsl
inc
push
pop
ror
jbe
aaa
mov
pop
sub
sbb
cmpsb
sahf
int
adc
cmp
dec
lods
jl
rcll
cmp
pop
outsb
cmp
xor
xor
fbld
das
loop
cmp
pop
frndint
xchg
and
sti
loop
mov
jle,pn
rolb
arpl
xchg
add
xchg
ror
faddl
xchg
sbb
aam
pop
ja
mov
jl
jno
xchg
ljmp
mov
scas
push
adc
fwait
xor
stos
test
fisttpl
out
fisubrs
cmp
ds
push
mov
cmp
push
daa
jecxz
jge
clc
mov
out
repnz
ret
imul
push
into
mov
insl
lcall
mov
or
sbb
mov
jl
jno
pop
fsin
daa
lock
adc
and
add
xlat
incl
xor
cwtl
and
mov
push
xor
fucomip
in
pop
or
pushf
cmpsl
xor
lret
mov
mov
fdivrl
out
sub
pop
and
dec
add
mov
add
sbb
push
icebp
mov
in
ljmp
mov
jbe
addb
mulb
lret
push
or
xchg
sti
aad
fildl
subl
cmp
in
adc
lea
mov
cs
adc
fldcw
imul
jmp
push
or
mov
or
add
sub
xchg
xor
dec
int
jae
loope
jae
clc
xor
es
sar
nop
aam
lahf
into
pop
sbb
imul
sarb
sbb
fsubrs
or
clc
ja
push
adc
movl
int3
and
jns
and
frstor
jp
dec
or
xor
xchg
int3
lahf
push
nop
vxorpd
sub
jl
pop
and
hlt
repnz
pop
lahf
adc
cltd
imul
jne
mov
xor
sbb
xor
jecxz
push
jp
jl
adc
jp
lret
mov
repnz
in
ret
mov
sub
ja
pop
mov
cmp
cli
mov
and
insb
or
pusha
inc
es
fildll
mov
sub
sub
sbb
cmp
dec
out
ja
inc
jno
adc
mov
sub
or
push
or
mov
pop
leave
ss
add
cmp
fld
call
shlb
add
lea
ret
push
push
add
mov
in
xor
sub
mov
and
push
imull
data16
adc
xchg
call
cmp
pop
xchg
cmp
pop
push
shlb
jmp
in
stos
pop
jg
pushf
mov
in
mov
cmpsl
or
sub
sbbl
daa
cmc
push
sbb
into
xchg
int
adc
xor
in
loop
and
push
pop
rcll
jecxz
xchg
lds
cltd
or
aam
mov
inc
ret
push
and
lcall
push
in
pop
cmp
ss
mov
ret
dec
mov
lds
iret
sub
lea
adc
xchg
dec
xchg
out
push
inc
out
dec
dec
stc
inc
cmp
mov
jno
dec
mov
xor
push
mov
jmp
movsb
cmc
pop
insl
mov
cmp
dec
sub
and
mov
lods
test
fdivrl
imull
and
and
sbbl
sti
jb
push
xor
call
in
cmp
test
stos
aam
jge
or
sbb
sbb
inc
sub
jnp
sub
sbb
out
adc
sbb
jno
aas
lea
mov
dec
adc
outsl
rorl
xor
sub
jns
mov
ljmp
stc
pop
xor
jne
cmp
lcall
mov
cmp
dec
inc
and
push
inc
or
jb
pop
push
add
jp
sub
or
mov
hlt
repz
xchg
add
imul
jle
enter
out
and
mov
and
loope
jno
adc
add
pusha
or
jae
ret
xor
push
mov
dec
inc
jbe
cmp
mov
inc
sti
xchg
sbb
push
dec
inc
or
and
push
adc
dec
or
lahf
xchg
xchg
and
pop
addr16
push
enter
add
ficoms
jp
and
es
daa
outsl
mov
cmp
mov
call
aaa
and
scas
push
daa
mov
sti
sub
sub
fidivrl
ficompl
scas
push
loop
nop
test
push
stc
aad
test
cli
dec
pusha
clc
and
rorl
mov
cmp
cmp
jne
pop
fdiv
scas
push
mov
test
xor
es
xchg
xchg
pushf
fwait
dec
clc
repnz
mov
xchg
lea
das
mov
shrl
cli
lods
and
inc
out
jb
sbb
addr16
addb
ljmp
mov
sub
add
cmp
xchg
xchg
ret
sbb
xchg
inc
add
sbb
jnp
ret
sbb
xor
cmp
jno
inc
push
xchg
mov
imul
add
pop
mov
mov
insb
pop
and
xor
or
ret
push
jbe
dec
sbb
test
cld
pop
inc
cmp
scas
daa
jle
lcall
cltd
divb
or
movsb
adc
mov
sub
in
inc
add
adc
jno
scas
daa
jo
push
je
pop
mov
test
rclb
jne
repnz
sti
adc
lret
mov
rcl
jno
xchg
iret
pop
cmp
in
inc
or
mov
shlb
and
pop
notl
inc
xor
sub
mov
xor
or
or
loop
cmp
jns
fadd
xor
add
jle
pop
or
push
push
jnp
or
pop
jmp
cmc
xchg
xchg
or
pushl
je
xor
loope
dec
int
outsl
sub
cld
les
lods
mov
push
push
sbb
jbe
rclb
lock
mov
push
pop
ficompl
mov
rol
mov
xlat
movsl
xchg
xor
es
push
lods
pop
dec
sbb
mov
repnz
push
dec
out
xor
pop
sbb
sub
xor
jae
or
cmp
stos
loope
xor
mov
in
call
aas
pop
in
cmpsb
cld
mov
out
cmp
push
jo
cmc
xor
and
mov
xchg
mov
cmp
call
lret
leave
mov
jmp
scas
push
lea
test
cmp
pop
pop
es
aas
sub
ds
or
push
dec
push
cmpsl
popf
dec
or
outsb
mov
fcompl
outsb
xor
pop
ljmp
out
cmpsb
mov
or
cld
hlt
adc
cmp
movlps
mov
jo
sub
lods
pop
cld
add
outsl
mov
jg
sbb
scas
add
add
or
shrb
xchg
lock
push
or
jo
test
call
jns
push
decl
repnz
ljmp
pop
loop
jecxz
stos
fsubs
fsubrp
cmp
mov
cmp
dec
repnz
insl
and
jns
mov
xchg
dec
ljmp
dec
jb
mov
loopne
jbe
adc
adc
notb
dec
adc
loop
orb
dec
xchg
sub
addb
mov
sub
cmp
push
or
inc
mov
inc
xchg
mov
pop
test
pop
pop
jns
cmp
xor
imul
jmp
pop
sub
pusha
jns
push
fldcw
std
mov
cmp
fstpt
into
flds
lcall
cmp
ret
cmpsl
pop
xchg
push
insb
mov
cmp
xor
fcoml
jb
aaa
or
sbb
fbstp
xchg
aaa
adc
inc
scas
pop
sub
shl
jns
call
xor
xor
test
loope
sub
sub
and
shrb
mov
cmpsb
xor
ljmp
xor
xchg
mov
mov
lds
repz
lcall
or
jge
loope
lock
and
gs
pop
adc
mov
mov
jge
mov
stos
adc
dec
sbb
sysexit
adc
sbbl
inc
cs
movsb
mov
or
adc
int
pop
sahf
xchg
inc
into
aaa
mov
stos
in
mov
and
data16
adc
cmp
inc
repz
cld
icebp
jns
subb
fidivrl
sarl
clc
adc
mov
or
mov
sub
addr16
dec
cmp
cmpsl
and
shl
scas
cmpsb
push
in
loope
fucom
push
or
or
dec
jl
inc
or
loope
jo
xchg
cltd
mov
mov
jl
or
es
inc
fwait
je
mov
mov
and
cmpsb
inc
lods
cmp
cmp
sti
cmp
sub
in
inc
in
jne
adcb
cmp
pop
xor
cmc
in
cmpsl
pop
sub
and
rorl
xchg
and
sbb
push
cmp
push
dec
jns
adc
inc
push
repnz
not
cmp
or
pop
jp
cmp
movb
lock
aaa
or
shlb
sti
inc
pop
sbb
inc
shlb
loopne
mov
or
and
ret
leave
xchg
nop
into
mov
xchg
fiadds
movl
enter
pop
jp
or
mov
xchg
add
out
cs
adc
fstpt
mov
insb
jecxz
nop
dec
and
xor
xchg
cmpsb
daa
loop
mov
push
jae
outsl
imul
cmp
jae
xor
add
loop
divl
mov
es
cli
shlb
mov
ja
and
dec
sarl
add
push
or
add
lcall
push
jg
sub
sub
outsb
loopne
fcmovbe
and
fs
xchg
cmp
lods
adc
sbb
imul
mov
repnz
cmp
test
push
jnp
leave
cmp
pushf
mov
lret
jnp
dec
mov
sub
test
adc
jns
jb
jnp
ficoms
pop
dec
and
mov
dec
test
cli
dec
inc
sarl
adc
pop
push
lea
sahf
in
and
iret
mov
aad
loop
mov
repnz
inc
xor
xchg
push
mov
cmp
jbe
add
mov
adc
xor
scas
fisubl
adc
sbb
cltd
dec
cmp
and
je
into
and
mov
and
outsl
pop
mov
fisubl
fcomps
xchg
les
push
pop
xchg
mov
push
and
stc
shrl
cs
call
push
cmpsl
rcrl
sub
jl
or
or
out
enter
push
inc
push
adc
ret
fists
sbb
add
xor
adc
out
mov
or
sbb
imulw
call
rcr
jno
pop
inc
stos
mov
cs
mov
jg
pop
cmpsb
sub
jns
sahf
loop
xor
xchg
xor
cld
or
rclb
mov
rclb
sub
and
loope
xchg
jp
inc
fs
push
lcall
push
sti
xor
test
push
mov
in
lcall
adc
orb
mov
lock
mov
sti
mov
xchg
imul
pusha
inc
adc
dec
into
in
arpl
inc
xor
sub
xor
popa
arpl
ret
push
iret
dec
cbtw
cmp
add
cmp
mov
sub
push
push
jne
mov
and
add
inc
fdivrs
movsl
sbb
push
adc
dec
jo
frstor
push
and
and
mov
xlat
pop
push
adc
cs
adc
inc
jle
int
mov
loop
xchg
adc
jae
and
ret
sbb
push
jno
ret
fisttpll
aam
fxch
loop
dec
xor
push
outsb
cmp
int3
xor
jmp
cmp
in
push
stos
cmp
pusha
or
xor
sbb
mov
sub
inc
xchg
pop
jae
jmp
pusha
clc
sahf
xor
ss
pop
pop
xchg
adc
dec
and
adc
mov
jb
push
xor
stos
cmp
addr16
xchg
dec
adcb
adc
lds
pop
mov
push
out
out
xchg
and
insb
mov
mov
ror
inc
imul
fistl
fldcw
pcmpgtb
push
cmp
xchg
dec
and
lock
and
adc
movsl
cmpl
add
outsb
push
ret
and
xor
jns
dec
xchg
mov
pop
cli
std
adc
push
in
hlt
mov
xor
push
mov
or
mov
add
push
mov
adc
sbb
testl
ljmp
mov
sub
sub
and
sub
dec
pusha
loope
mov
push
sbb
out
cmp
sub
enter
bts
scas
push
dec
push
adc
mov
push
sti
inc
ss
jle
int
loope
mov
jbe
hlt
dec
fsubs
inc
pushf
loope
stos
sbb
and
xor
or
push
sub
pop
push
in
mov
loop
mull
test
in
enter
fs
outsb
aad
or
mov
mov
in
xor
std
inc
lcall
cli
mov
lahf
insb
movsb
sti
bound
je
sbb
rorb
loope
dec
or
mov
dec
repnz
in
mov
les
pop
pop
loope
fadds
stos
and
push
icebp
pop
mov
subb
cltd
fcmovb
inc
adc
outsl
sti
inc
popa
jo
add
mov
xchg
addl
jg
cmp
mov
mov
fs
loop
jg
cmp
out
loop
mov
shrb
sub
push
into
hlt
clc
add
fmul
mov
xchg
ftst
xchg
dec
or
add
mov
mov
int3
rcl
cmpl
sbb
loop
nop
xor
shrl
pop
inc
insl
pop
div
adc
xchg
push
rcrb
or
leave
mov
icebp
cltd
loope
into
mov
lcall
push
sbb
sub
mov
ret
xor
nop
dec
mov
jg
cmp
repz
insb
test
push
sub
mov
xchg
xor
fisubrl
dec
jae
dec
mov
in
inc
test
or
sub
mov
cmc
push
and
bound
imul
jno
adc
inc
mov
dec
sbbb
das
pop
test
xchg
dec
and
adc
push
stos
mov
in
data16
rorl
shlb
sbb
cmp
and
stos
push
cld
sub
push
cmp
outsl
imul
je
imul
sub
aad
test
insb
loop
jb
out
or
jno
xor
cld
push
adc
aas
gs
fs
add
push
mov
inc
sbb
cld
jbe
int
imul
aam
pop
cmp
fs
inc
sti
lock
xchg
inc
mov
push
xchg
test
pop
push
jge
and
or
mov
enter
lahf
lds
sbb
jb
mov
addr16
lahf
and
xchg
or
jnp
push
jmp
or
push
cmp
cmp
and
sbb
fisubrl
cmc
inc
inc
cmp
mov
mov
cmp
cmp
jle
adc
push
push
sbb
sbb
jg
push
data16
adc
dec
xchg
and
insb
pop
stos
xchg
and
fstpt
push
mov
in
popl
push
lock
scas
dec
mov
sti
mov
fucomi
imul
cmp
sbb
testl
out
nop
pop
dec
mov
loop
jge
adc
je
mov
fstpl
cmp
xchg
mov
cmpl
jbe
jne
cmp
stc
cli
int3
aas
dec
aas
mov
ret
pop
loop
repnz
add
iret
mov
outsl
leave
mov
or
adc
jnp
pop
push
fbld
rorl
rorl
or
jb
mov
xchg
movsb
xchg
jl
shlb
and
neg
lahf
mov
dec
mov
fdivrs
in
pop
mov
mov
dec
filds
mov
jmp
cmc
das
jl
stos
lret
xchg
sub
insb
dec
sbb
sub
and
lret
loop
pop
loopne
pop
test
leave
aaa
mov
lods
inc
aas
push
inc
ficomps
pop
pop
xor
inc
jg
repnz
iret
daa
jg
dec
xor
sbb
negl
push
dec
mov
pop
in
dec
lret
jge
dec
xor
cmp
addr16
jmp
and
lahf
gs
lcall
nop
or
lret
in
aad
mov
ss
movsl
jge
sarb
leave
jb
inc
mov
test
mov
dec
leave
imul
mov
dec
cmp
pop
loop
or
int3
rcr
jl
int
cmp
mov
pop
mov
sbb
inc
rclb
jg
lahf
mov
in
xchg
mov
cmc
testl
push
dec
mov
pop
xchg
xchg
dec
mov
movl
aam
xor
aam
dec
lcall
jne
jp
idivb
sti
cmp
sub
mov
mov
mov
test
test
movsl
sub
sti
dec
jl
std
or
adc
jle
out
push
pop
jmp
or
push
imull
out
addb
or
mov
sub
xchg
push
mov
and
dec
cmc
jg
and
inc
mov
adc
in
lods
jmp
decl
and
mov
jp
sti
pop
jnp
bound
icebp
dec
mov
out
clc
dec
lods
jecxz
sbb
fidivrl
shll
xor
mov
movsb
jmp
icebp
xchg
dec
adc
add
inc
enter
push
fs
and
data16
jp
push
xchg
push
mov
xchg
jo
shr
lcall
xchg
cmp
sahf
outsb
test
push
xchg
xor
or
mov
inc
mov
aam
cld
jns
sub
mov
test
data16
jge
mov
ja
ret
mov
lcall
xor
rclb
insb
mov
call
sub
dec
int3
xchg
int
push
xor
push
aam
sbb
insb
xchg
cmp
mov
mov
hlt
int3
mov
stos
rcll
sub
pop
or
pop
movsb
sub
sti
mov
mov
push
loopne
outsl
push
fnstenv
xchg
adc
cmc
mov
cmpsb
ljmp
sub
pop
and
adc
in
mov
lcall
cmp
mov
fcmovb
and
leave
adc
insb
mov
jg
ficoms
aaa
pop
mov
xor
mov
add
mov
sub
jne
in
inc
mov
or
and
pop
outsb
imul
lods
xor
iret
testl
dec
xchg
xor
inc
leave
test
pop
addr16
mov
cmc
sti
adc
fdivrl
mov
out
cs
sub
clc
jge
hlt
jnp
push
inc
sub
cmp
sti
jge
in
mov
ss
sarb
sbb
fnstcw
cmp
and
cmpsb
jge
ror
xchg
push
push
test
sbb
jl
pop
das
dec
loop
xor
fsubrp
push
jg
jb
mov
jl
jg
jb
mov
lock
popf
ficompl
sarl
and
or
repnz
scas
mov
das
or
dec
xchg
mov
mov
loope
bound
pushf
or
sub
sub
fadds
in
push
pop
out
fcoms
xchg
cmpsl
aam
icebp
mov
bound
push
cmpsl
pop
mov
stos
add
aad
or
cli
stos
scas
mov
sbb
jmp
mov
xchg
inc
pushf
and
and
or
inc
xor
mov
xchg
sbb
hlt
xor
adc
lea
mov
cwtl
pop
lock
cmc
dec
jmp
adc
dec
xor
cmp
sti
mov
pop
cli
cmpsb
arpl
jg
addb
loop
or
dec
lds
mov
cwtl
call
dec
call
or
aaa
frstor
and
and
repz
gs
jne
push
imull
out
mov
sbb
insb
ljmp
popf
pusha
or
pop
cmpsl
aam
adc
adc
and
sub
xchg
pop
mov
loope
sahf
push
fcomps
lock
fcompl
test
sar
mov
test
xor
mov
push
pushl
xor
in
sbbl
mov
insl
push
mov
adc
adc
mov
cmp
push
xor
cmp
mov
sahf
mov
mov
insb
les
and
jbe
push
push
sub
sete
cmp
xchg
pusha
cmovp
dec
or
xor
sbb
cmp
adc
xor
adc
mov
push
push
xor
les
push
mov
mov
les
leave
popf
xchg
pop
aaa
jne
cmp
shl
cltd
push
pop
sarb
fildl
pop
jmp
sbb
adc
sub
cli
addr16
ret
or
loope
inc
scas
popf
and
pop
imul
xchg
mov
cltd
sbb
jb
adc
xor
cmp
pop
inc
pcmpgtw
clc
cmp
dec
mov
jl
std
dec
sub
decl
mov
pop
sub
adc
and
dec
or
jecxz
adc
adc
fwait
cmp
daa
jno
and
or
enter
push
sbb
js
add
mov
mov
adc
addr16
or
nop
test
pop
jl
pop
scas
inc
jne
mull
test
xchg
movsb
pop
vpaddq
adc
mov
push
mov
cmp
repnz
adc
or
rol
inc
jl
jns
in
icebp
jecxz
pop
sbb
pop
mov
in
mov
mov
xchg
fisubrl
imul
lahf
std
daa
outsl
add
adc
xlat
mov
inc
insb
mov
dec
mov
imul
jae
cld
cmp
fidivl
es
aam
popa
cwtl
jl
loope
daa
pop
fcomip
add
jg
test
sbb
pop
xor
xchg
or
cmc
clc
aam
mov
inc
ja
pop
incb
and
inc
add
mov
sub
adc
sub
or
jg
jns
pop
add
dec
sub
cmp
cmp
daa
outsb
cmp
bound
xchg
adc
movsb
sub
add
cmp
sub
mov
lods
std
scas
test
or
mov
cmpsb
jnp
pop
mov
mov
mov
pop
test
stc
mov
xchg
xor
cmpsb
pushf
dec
push
mov
ret
cmp
jnp
repnz
and
pop
mov
outsl
xchg
push
xor
mov
pop
sbb
cmp
sub
xchg
in
dec
in
mov
sbb
cli
rcr
cmp
aaa
or
ret
imul
cmp
iret
fistl
mov
out
sbb
lret
addr16
adcl
pop
int
xor
in
mov
sbb
pop
or
pop
xor
repnz
or
xor
fs
and
icebp
cmpsb
or
push
jbe
pop
sbb
pop
mov
pop
or
sbb
dec
pop
mov
jae
call
daa
jg
call
sbb
or
out
pop
push
pop
clc
lcall
pushf
sub
loopw
insl
xchg
cmpsb
xchg
ljmp
mov
xchg
ljmp
or
or
xchg
pop
pop
ret
mov
push
inc
sbbb
jns
scas
mov
xchg
repnz
mov
mov
stc
jbe
cmpsb
adc
repnz
dec
pop
mov
test
sbb
pop
bnd
repz
dec
mov
pop
mov
xchg
cmpsl
out
imul
stos
stc
inc
filds
pmaxub
xchg
push
movsl
xchg
fdivr
mov
mov
repnz
mov
test
adc
cmp
mov
cli
add
jle
jmp
jns
repnz
outsb
jb
rclb
cmpsb
outsb
enter
roll
or
add
adc
jl
pop
bound
fisubrl
bnd
jp
xchg
cli
pop
sub
test
shlb
push
jbe
insb
pop
rorb
cmpb
inc
cld
sahf
int3
xchg
pop
mov
data16
pop
decl
mov
sti
call
mov
jmp
repnz
jb
xchg
xchg
cli
xchg
cmp
lcall
pushf
testl
outsb
ljmp
repnz
mov
jbe
inc
jmp
push
mov
jl
sysret
cmpsb
daa
mov
mov
fstps
pop
fsubr
int
repnz
xchg
mov
int3
not
xchg
out
jge
xchg
or
loope
xchg
fs
les
es
rcll
xchg
ds
and
ljmp
mov
push
sbb
and
or
jbe
filds
sub
pop
inc
pop
cmp
pop
jns
cmp
data16
outsl
shlb
and
xchg
jl
and
cmc
dec
lods
dec
adc
insb
test
push
mov
daa
test
xchg
and
adc
xor
pushf
fldt
mov
roll
inc
jbe
or
push
xchg
dec
adc
inc
or
std
cli
push
andb
insl
lds
cmp
sbbb
pop
fs
push
fs
std
je
adc
mov
dec
mov
xor
fisubrs
je
and
lock
push
movsb
xchg
bound
xchg
ret
xchg
xor
ljmp
pusha
sub
fimull
adc
jb
pop
dec
add
cmp
xchg
lea
jo
jmp
jno
xchg
rol
movsl
jns
xor
dec
out
push
lret
roll
cwtl
mov
je
and
shlb
push
cmp
mov
or
inc
push
xchg
xor
dec
adc
cld
je
jns
fldl2e
fwait
push
cmp
fiadds
or
push
adc
notb
add
and
ss
sub
addb
popl
daa
pop
xchg
xor
dec
and
push
mov
mov
cwtl
xchg
sub
bound
les
mov
rol
iret
iret
xchg
cmp
out
into
sbb
mov
js
mov
push
jp
pop
jle
mov
adc
xor
out
sbb
or
push
jle
sub
roll
inc
popa
mov
iret
or
xor
pusha
decb
mov
mov
fcomp
out
cmp
enter
lea
je
iret
sub
popa
mov
xchg
pop
mov
imul
dec
xchg
seta
cli
in
push
sub
into
cmp
ljmp
sub
daa
inc
rorl
jmp
test
pop
mov
iret
mov
btrl
imul
xor
ret
mov
clc
push
dec
or
sub
loop
sub
loope
ret
cmp
jae
out
lret
xor
and
jne
or
inc
call
cmp
je
lret
test
aaa
sub
loop
dec
mov
push
cs
repnz
aaa
adc
in
cmp
pop
lea
sbb
mov
sbb
or
sbb
leave
mov
out
xchg
pop
cmpsl
cmp
daa
repz
adc
cld
or
sub
loop
cmp
fcomp
ja
sbb
cwtl
sbb
imul
outsb
add
pop
aad
out
mov
fiaddl
sbb
in
dec
mov
mov
idivl
jae
insb
or
xor
stos
nop
and
fwait
cwtl
in
lahf
jbe
mov
jl
orl
mov
dec
insb
jmp
add
lcall
pop
and
mov
es
pop
hlt
adc
mov
mov
inc
lods
adc
cmp
mov
adc
push
xchg
leave
mov
pop
fwait
jns
aad
pop
jnp
ret
mov
jne
call
add
daa
inc
cmp
notb
outsl
mov
ret
mov
and
leave
in
jnp
jb
cmp
out
in
jp
sarb
push
iret
adc
adc
aaa
scas
sub
js
add
mov
mov
insb
insb
sahf
leave
sbb
jo
jle
dec
xor
dec
adc
inc
or
xor
inc
or
xchg
sbb
xchg
rorl
lcall
lods
in
and
leave
loop
push
mov
sub
mov
lcall
das
jns
cmp
and
daa
dec
iret
push
dec
out
sbb
out
jecxz
mov
scas
cmp
repnz
andb
sahf
inc
lahf
dec
out
mov
or
les
out
dec
jns
xor
outsb
mov
jp
mov
cmp
mov
sub
jp
sub
jnp
dec
sub
jno
subb
push
add
pop
jo
mov
ficoms
sbbl
cli
jle
movb
lcall
pushf
and
outsl
dec
lret
imul
mov
cmp
flds
cmp
inc
in
fs
mov
mov
or
pushf
pushf
lea
jb
popw
push
sub
jbe
aam
into
push
sub
add
dec
cmpsl
cmc
inc
mov
popa
cmp
pop
sar
pop
lods
inc
daa
sub
hlt
or
out
xor
cs
jo
jge
or
cmp
cmc
and
cmpsl
outsl
jne
or
xor
in
call
push
dec
hlt
sub
dec
adc
and
paddd
mov
or
xor
push
and
les
fisubrl
and
into
pop
add
cmpsb
fwait
xchg
lods
lret
jmp
and
sbb
mov
not
inc
out
push
test
sarb
repz
shrb
xor
std
aad
mov
jecxz
fadds
dec
xchg
arpl
cmp
loopne
js
in
xchg
jns
out
ret
xor
bound
and
movsb
bnd
loopne
fldpi
adc
xor
sarb
pop
ljmp
ss
xor
sbb
mov
data16
jg
xchg
rcrb
pop
jge
test
loopne
movl
mov
sbb
xor
add
ret
push
xchg
mov
and
sbb
pop
dec
jp
cmp
cmpl
push
cmp
arpl
sbb
cmpsb
es
imul
pushf
mov
adc
pop
clc
pop
push
add
mov
sub
ljmp
movsb
pop
ljmp
loopne
sbb
in
xor
outsb
testb
lea
mov
or
dec
push
inc
sbb
enter
ljmp
and
sbb
data16
cltd
aam
mov
pop
and
or
mov
inc
in
jp
jno
sbbl
mov
inc
mov
adc
push
out
dec
outsb
mov
adc
je
aad
cmp
jg
sub
loope
and
sbb
push
mov
cmp
bound
adc
add
fwait
mov
outsl
aam
pop
add
ja
mov
mov
in
xor
sbb
xchg
clc
mov
sub
leave
push
add
shlb
or
mulb
cmpsb
sbb
xlat
shl
loope
hlt
lea
ljmp
cmc
stos
ror
jmp
int
outsl
mov
mov
xor
movsl
cmp
sbb
inc
inc
add
adc
into
and
ljmp
or
mov
sub
int3
sub
adc
aas
fdivp
cmp
sbb
mov
mov
jns
sub
xor
cld
mov
insl
lahf
sub
cmpsl
pop
mov
and
mov
mov
sarl
jno
xchg
aam
div
fs
mov
dec
rcl
and
jne
jp
call
shlb
nop
les
xchg
cmc
pop
sub
ss
repnz
add
xchg
sub
sbb
mov
pushf
test
jmp
sbb
in
inc
and
jg
jo
repnz
mov
loopne
adc
inc
dec
int3
pusha
cmp
jnp
dec
mov
dec
add
push
mov
pop
daa
dec
loopne
cmp
shll
add
xor
pop
or
test
push
int
iret
out
jmp
push
leave
and
lcall
cld
mov
inc
pop
fisttpll
cmp
xor
scas
imul
cmp
push
or
popa
aam
shl
cmp
out
push
cmp
xchg
jcxz
cmpxchg
mov
mov
pop
xchg
in
sar
es
or
out
insl
aad
push
sub
hlt
out
mov
and
push
movsl
mov
push
mov
inc
mov
add
mov
int3
cmp
mov
adc
ja
adc
jl
xor
xchg
cld
insb
arpl
arpl
push
hlt
cmp
in
repnz
mov
repz
div
add
in
leave
into
add
or
inc
outsl
mov
aad
jno
fwait
push
jbe
sar
js
and
in
cmp
mov
mov
or
xor
incb
cmp
ret
ljmp
fidivrl
in
mov
rolb
and
pop
jle
add
imul
popa
or
leave
enter
sub
popa
adcl
ss
aad
or
inc
fsts
daa
insb
mov
mov
push
inc
in
mov
addl
icebp
jp
sub
mov
daa
or
and
add
mov
insl
insb
pop
mov
xor
lret
or
dec
aas
test
aas
cld
inc
test
lea
inc
pop
and
lahf
xor
test
add
sub
dec
xchg
sub
lea
jne
push
mov
out
mov
lret
pop
jae
xor
out
lods
or
mov
xor
movsl
adc
rcr
out
lcall
notb
ficomps
rcrb
push
rcll
push
jg
xchg
cmp
lock
xchg
jno
cmp
push
fs
test
xor
and
lea
notl
push
mov
jb
cmp
ret
popf
sub
aam
pop
push
xchg
cli
jmp
loop
add
mov
popf
fnstenv
cmc
xchg
sub
pop
out
mov
rolb
jno
mov
jp
adc
adc
popa
inc
gs
in
sbb
mov
pop
outsl
ret
lcall
hlt
mov
adc
es
mov
push
repnz
push
lock
stos
or
push
dec
mov
pusha
mov
xchg
add
dec
cwtl
lret
fmuls
sbb
xor
inc
in
adc
cmc
lods
or
inc
xchg
cmpsl
bound
xor
add
iret
xchg
sarb
cld
ficompl
and
mov
popf
out
pop
xor
xchg
sti
push
adc
out
mov
cltd
lea
xor
jb
dec
in
mov
lods
xchg
and
inc
mov
mov
pop
add
rcrb
in
sti
mov
lcall
mov
inc
sbbb
jae
lcall
cld
xchg
inc
mov
cltd
and
das
and
add
mov
orl
es
ljmp
push
out
cmc
roll
mov
rcll
loop
dec
jno
adc
mov
inc
test
adcb
jmp
mov
add
sbb
ror
enter
sbb
mov
push
push
cmp
push
push
aas
pop
jnp
xor
cltd
or
jp
xchg
daa
add
popa
dec
mov
cld
inc
add
and
cs
repnz
or
xchg
xor
mov
push
push
lea
sbb
inc
inc
loop
jge
dec
add
sbb
push
orw
push
xchg
pop
and
popa
stos
push
pop
pop
push
xchg
cmp
xor
out
mov
in
pop
mov
cmp
sub
ret
mov
sti
cli
pop
clc
andl
in
imul
mov
ljmp
sti
push
push
mov
push
setns
xchg
xor
cmp
enter
or
push
push
and
cmp
sbb
dec
in
and
dec
adcl
sti
xchg
leave
xchg
into
in
and
jecxz
dec
pop
rcrl
in
xchg
es
lcall
sub
or
cmp
pop
adc
stc
mov
xchg
dec
rcrb
int3
out
and
fisttps
jp
and
sub
ss
and
imul
pop
icebp
push
dec
cmp
xchg
daa
lcall
into
mov
iret
movsl
push
test
out
sbb
repz
out
sub
mov
and
or
mov
insl
or
dec
loop
stc
mov
popa
and
outsb
mov
sti
or
loop
mov
and
mov
out
hlt
enter
mov
lret
adc
cmp
dec
movsb
lds
incb
inc
mov
push
into
lock
push
loop
inc
xorl
pop
sbb
jle
xchg
das
xchg
sti
test
inc
imull
scas
ljmp
lret
repz
sub
push
rorl
mov
lcall
cmp
add
pop
push
arpl
jns
rcr
imul
add
mov
in
rcrl
cmp
icebp
test
pop
loop
cli
inc
fidivs
movl
movsb
and
push
int3
cli
fisttpl
lods
ret
loop
dec
and
clc
sarb
cmp
pusha
push
loop
loope,pt
xchg
mov
jbe
mov
movsl
repz
mov
pop
cwtl
inc
int3
mov
pop
adc
notb
jg
les
sub
jb
lcall
push
jmp
or
and
push
movl
cmpsb
idivb
dec
sub
jnp
sub
add
mov
and
jle
loop
xor
shll
sub
push
mov
xchg
xchg
test
lods
dec
test
loope
jge
adc
sysexit
dec
lret
leave
sub
mov
cmc
pop
jge
add
fs
sub
bound
adc
or
push
adc
add
xchg
xchg
sti
stos
das
out
neg
out
jno
test
test
or
inc
pop
xchg
fadds
dec
pop
dec
imul
lahf
xchg
pop
cmp
pusha
rep
xor
or
mov
sbb
cmc
into
and
jp
push
js
fidivl
insb
sub
shr
ret
test
xchg
cmp
jge
mov
lods
add
sub
jg
cmpsb
mov
test
in
pushf
cmpsl
std
sub
mov
fists
mov
loope
adc
push
sbb
and
aas
repz
cld
or
dec
or
cs
adc
call
imul
out
push
rorb
mov
repnz
pop
add
scas
mov
inc
ficompl
divl
sahf
sub
push
xchg
pop
mov
or
inc
arpl
into
test
dec
pop
xchg
dec
repnz
mov
dec
icebp
and
fwait
mov
jae
pop
jae
jnp
sbb
setb
pop
imulb
sbb
pop
out
jmp
jne
xchg
xor
jmp
mov
mov
in
jg
rorl
adc
aaa
std
sub
sbb
or
lea
fsubl
fimuls
sub
xchg
push
inc
lea
adc
xlat
adc
shrb
mov
or
adc
cmp
inc
mov
iret
and
fs
inc
mov
lods
sub
inc
xchg
arpl
mov
push
sub
jge
push
popa
add
or
xchg
add
pop
rcrl
push
mov
loop
xchg
outsl
sub
test
imul
xchg
orb
aaa
lcall
test
and
pop
and
xor
popf
fwait
or
dec
jecxz
adc
in
mov
cmp
rolb
or
sub
andb
mov
push
mov
dec
or
aaa
testb
sub
dec
mov
arpl
fadds
mov
out
das
scas
pop
mov
xor
sub
pushf
mov
loope
and
sub
mov
dec
out
out
sub
sub
mov
fstps
fiaddl
ret
cmpsl
add
movsl
cmpb
mov
pminsw
jo
adc
sub
repz
das
xor
jp
enter
cmp
jl
leave
add
loopne
outsb
fsubrp
sub
mov
cmp
es
sarl
in
and
nop
ret
inc
xor
fs
dec
xlat
cmpps
call
add
lea
popf
sarl
jbe
sahf
aad
add
cmp
pop
add
and
pop
adcl
sbb
lahf
sti
jle
jnp
or
sbb
inc
movsb
lods
ror
jp
pop
xlat
rcl
fsubrs
jecxz
cli
xor
mov
je
cmp
sbb
scas
dec
lea
pop
inc
aaa
jg
imulb
or
sub
add
stc
jae
repnz
sub
mov
lock
movsb
lcall
std
dec
fcmovbe
pop
adc
cs
jae
adc
xchg
into
or
mov
addr16
sbb
divl
fisubl
sub
and
mov
push
xchg
inc
lea
push
sub
dec
fnstcw
adc
mov
cmp
sub
mov
ret
sbb
lods
out
push
mov
xor
sbb
negb
sbb
pop
push
popa
cmp
sbb
out
mov
fcompl
aam
bound
cmp
shl
mov
mov
cmp
xchg
or
adc
rcrb
push
sub
gs
inc
mov
mov
movsl
arpl
adc
mov
in
or
insl
xor
mov
pop
sahf
inc
push
mov
loop
cs
push
sub
rorl
call
mov
popa
mov
jl
mov
gs
mov
xor
mov
daa
cmp
ljmp
negb
mov
fidivrl
mov
ds
fdivs
jl
mov
jp
cltd
dec
sub
mov
cmp
int3
outsl
pop
fsts
mov
fwait
push
bound
mov
das
xlat
daa
stc
aam
dec
movzwl
pop
jmp
cmpsb
pop
mov
int
mov
ja
push
loope
sarb
xchg
sarb
vcvtss2sd
lods
pop
imul
popf
rclb
and
cmp
out
pop
and
or
shll
out
sub
jb
lods
lret
inc
xchg
idivb
xchg
and
pop
loopne
ljmp
mov
sbb
imul
insb
cs
xchg
push
fmull
ljmp
loop
adc
adc
dec
lods
jmp
js
into
stc
cvtdq2ps
lea
xor
cmp
popa
rorb
in
xchg
sbb
xchg
decl
sub
and
pop
mov
fbstp
pop
sbb
xor
repz
add
lcall
and
lret
mov
push
inc
add
les
inc
icebp
and
dec
mov
lock
or
sbb
xor
int3
lea
push
cld
sub
xchg
inc
js
sbb
outsb
push
mov
adc
mov
xchg
lea
and
jp
cmp
shl
sbb
add
cmp
cltd
dec
or
add
xchg
sbb
mov
loop
mov
xlat
xchg
and
dec
jnp
xor
xchg
adc
test
test
out
mov
cmp
xor
enter
or
test
cmpsl
sub
daa
cs
ret
add
sbb
stc
loope
mov
adc
jae
mov
or
mov
sbb
test
bndldx
jnp
mov
jmp
sub
cmp
mov
sahf
jbe
leave
jmp
leave
and
pop
or
adc
mov
xor
daa
sti
dec
and
or
xchg
lcall
cmp
fsubl
sbb
mov
xor
sbb
scas
xchg
push
outsb
xchg
adc
ljmp
adc
in
out
adc
push
ljmp
movsl
pop
or
dec
push
gs
ljmp
or
sub
js
xchg
fisubrl
aam
or
mov
cmpb
call
xchg
and
adc
jo
cltd
mov
ja
cmp
faddl
loope
mov
pop
aad
sub
lret
jle
sti
data16
pop
cltd
lea
cmp
mov
adc
add
pop
mov
ret
jnp
mov
adc
push
sub
jg
sbb
mov
dec
mov
mull
dec
jns
bound
lcall
hlt
mov
dec
out
cmp
rcll
ja
and
or
sub
aas
ret
pushf
rorb
dec
xchg
das
mov
pop
or
sbb
pop
push
das
push
jns
inc
pop
je
push
or
mov
sbbl
repnz
into
mov
clc
fs
sbb
push
pop
in
ret
or
btcl
repnz
mov
push
jo
flds
arpl
mov
pop
dec
ret
pop
jle
push
in
and
cltd
enter
std
cmp
adc
jp
shl
arpl
sbb
mov
add
loop
xchg
fbld
popa
cli
xor
lret
xchg
dec
ja
int3
jb
cmpsb
dec
ret
sub
ror
pop
pop
xchg
test
popf
mov
aad
pusha
cmp
sti
push
shrl
push
dec
aam
je
stos
cmp
sti
cltd
ja
sub
cld
add
icebp
and
bound
test
xor
rorb
enter
mov
ljmp
push
pop
and
pop
push
das
sub
and
sbb
add
push
lahf
add
jg
daa
dec
push
test
push
clc
pop
xchg
dec
dec
cmp
cltd
test
cltd
popa
notl
xchg
stc
lds
pop
and
mov
adc
push
cli
push
cmp
mov
movsl
loope
xor
xor
sub
mov
adc
jecxz
stos
push
sbb
lcall
xor
mov
adc
and
xchg
sahf
adcl
sub
sub
xchg
andl
mov
out
or
leave
sub
and
adc
cmp
cmp
mov
ljmp
xchg
jbe
lret
xor
pusha
mov
shl
cli
icebp
cmp
icebp
pop
mov
mov
pop
ss
mov
mov
cs
mov
xchg
ror
sbb
mov
popf
stos
outsb
jmp
mov
testl
dec
sub
mov
mov
in
les
fcomps
ret
mov
shlb
ret
and
scas
push
sub
inc
cmc
rorb
and
push
or
aaa
push
jl
cmp
xchg
mov
xor
in
out
in
ljmp
mov
jne
or
shr
push
mov
and
call
dec
mov
cld
xor
int3
jg
dec
push
sbb
leave
xchg
mov
adc
xor
fcoms
push
pusha
roll
inc
ljmp
loop
rcll
imul
mov
dec
jp
inc
or
mov
jg
and
push
js
xchg
mov
mov
mov
xchg
ds
lea
xor
push
add
dec
test
out
loope
jge
cmovns
loop
sbb
push
adc
lcall
mov
clc
inc
pop
pop
xchg
and
rolb
insb
inc
fdivr
test
mov
imul
mov
rcr
xor
clc
jmp
adc
les
shr
sahf
sub
mov
aad
sbb
push
mov
into
cltd
aam
aaa
dec
lcall
and
rclb
push
jp
cmp
pusha
repnz
mov
xor
fiaddl
jecxz
shlb
int3
imulb
ret
movsb
or
loope
sarb
lcall
inc
add
xor
enter
rcr
or
dec
or
xchg
neg
xchg
es
mov
dec
pop
add
rorb
sub
push
fmull
repnz
push
xchg
test
mov
loope
inc
pop
dec
xchg
sub
mov
lea
imul
mov
cmp
inc
scas
cli
or
cltd
insb
pusha
pop
aad
scas
add
push
stos
ds
in
xchg
aaa
int
jo
sbb
adcl
mov
outsb
mov
xchg
pop
fildll
xorb
push
cmpsb
xor
add
push
insb
cltd
add
dec
int3
and
lret
lods
lret
mov
dec
ss
hlt
jl
cli
sub
jo
addr16
xchg
rol
cmp
pop
xchg
jbe
cmp
dec
popa
ss
pop
ljmp
ror
or
xorb
mov
lea
imul
cmp
push
icebp
sbb
add
pop
mov
pop
cmp
lret
rclb
jns
and
or
xor
sti
pop
adc
das
lea
in
out
sub
add
aaa
rcrb
dec
mov
jmp
xor
inc
stc
dec
rcl
pop
int
repnz
pop
cmpsl
add
iret
fisubrl
fdivrl
nop
sub
cmpsl
xchg
inc
push
out
dec
cs
or
test
dec
dec
mov
xchg
cmp
sub
js
push
mov
sbb
loopne
dec
rcll
test
shll
into
mov
push
repnz
pop
iret
popa
dec
xchg
sbb
cmp
push
aam
aas
sbb
popa
test
jl
xor
or
sbb
shr
cmp
push
or
xchg
lea
cltd
push
dec
add
rcrb
and
and
pop
xchg
jp
das
sbb
fidivrs
adc
xchg
cwtl
repnz
ucomiss
adc
cmpl
xchg
cld
negb
sub
xchg
lea
add
ljmp
fidivrl
ret
dec
out
dec
mov
push
pop
sub
mov
or
in
lret
scas
pushf
gs
orb
fadd
aam
sbb
pop
mov
jecxz
adc
mov
daa
ljmp
mov
mov
cwtl
mov
adc
mov
mov
popa
pop
dec
push
aas
and
jmp
pop
arpl
mov
pusha
mov
jne
les
push
and
lcall
fwait
sub
push
cli
in
cmp
mov
push
popa
popa
jl
leave
dec
popf
int
and
pop
vpsadbw
cmp
mov
adc
xor
and
shlb
sub
xor
dec
outsb
or
cmpsb
or
mov
push
lds
mov
lods
and
fstpt
shrl
enter
cmc
mov
ret
pop
inc
push
jae
notb
jg
loopne
cmp
mov
or
pop
cmp
mov
or
fsub
or
xor
mov
fmull
or
sbb
cwtl
dec
adc
rcll
cmp
xchg
sbb
jb
arpl
mov
xor
lea
or
wrmsr
test
lret
stos
add
test
cld
cs
sarb
das
lret
lcall
das
andb
mov
out
shll
inc
push
push
aad
aaa
adc
dec
xor
daa
stos
add
adc
cmp
loopne
inc
xchg
orb
xchg
dec
sbb
or
mov
sub
mov
and
and
daa
pop
fimuls
dec
lret
cmc
and
sbb
sub
inc
jl
rorb
out
fldenv
scas
pop
mov
jle
pop
inc
fs
xchg
dec
mov
dec
jle,pn
inc
ret
in
loop
mov
es
test
mov
mov
or
sub
jp
ret
cmpxchg
pop
xchg
pop
imul
sbb
aam
sbb
xchg
rcrb
xchg
jb
add
dec
cmp
adc
inc
inc
pusha
adc
pop
adc
add
sbb
and
xchg
add
inc
repz
loope
ss
xchg
imul
jg
xor
fsub
jg
cmp
stos
push
fmul
fimull
std
stos
dec
mov
scas
cmp
lahf
pop
mov
adc
imul
nop
ficoml
shll
inc
cmc
je
and
insb
add
out
push
sub
inc
adc
cmp
fxtract
outsl
scas
daa
cld
push
into
adc
loop
shr
cmp
add
xchg
outsl
rclb
pop
out
jb
cmp
xor
xchg
and
push
lods
inc
mov
notb
sarb
lods
jle
adc
or
xor
and
and
push
shl
imul
sbbb
pop
les
jg
sub
sub
mov
mov
add
sbb
in
push
mov
dec
xor
dec
cmp
push
cmp
gs
xchg
pop
cli
aad
jecxz
dec
sti
in
add
dec
jns
cmp
inc
adc
cmpsl
xor
leave
popa
dec
addr16
sarb
sub
sarl
cld
imul
fidivrl
push
jg
xor
xor
js
lods
cmp
mov
mov
ret
mov
push
push
sarl
repz
mov
and
push
sub
dec
cmp
mov
dec
mov
mov
sbb
xchg
mov
xor
sbb
lock
jl
pop
xchg
mov
ja,pn
xchg
gs
jnp
dec
out
fdivr
lahf
pop
jle
xchg
push
test
xchg
jg
dec
out
sbb
mov
sysenter
xor
pop
xchg
jl
sbb
or
sbb
pop
cwtd
sbb
repnz
dec
jns
les
push
lahf
stc
xor
loope
ljmp
inc
sub
jo
arpl
int3
and
adc
sbb
or
mov
pop
mov
jmp
or
xchg
mov
lea
and
add
xchg
into
push
pop
leave
xor
push
clc
push
dec
loopne
cmp
insl
es
xchg
sahf
jge
cmp
lcall
lea
jecxz
ficoms
cmp
push
or
aam
imul
push
xor
xchg
popa
ljmp
lods
pop
xchg
iret
mov
sub
mov
sbb
mov
push
pop
xchg
sub
stc
push
xchg
arpl
test
jg
sbb
sbb
stos
cltd
lret
lret
sbb
pop
mov
push
inc
clc
ret
xchg
repnz
sti
repz
pop
push
and
sbb
inc
dec
in
je
pop
jo
hlt
adc
and
cmp
xor
jge
push
cmp
xchg
cmpsl
dec
int3
hlt
mov
inc
push
clc
lcall
cmp
es
mov
push
lret
aas
xchg
daa
xor
and
pusha
sbb
push
lea
in
dec
mov
cltd
imul
mov
aas
mov
stos
popf
lret
rorb
xor
add
sbbl
xchg
inc
dec
adc
xchg
in
ss
iret
sbb
fs
fcom
inc
cmp
clc
cmpsl
call
xor
pushf
orl
jecxz
ret
xor
data16
jns
mov
cmpsb
or
push
or
sbb
test
notl
pusha
pop
testb
dec
in
in
jae
and
inc
std
mov
pushf
add
xor
add
mov
jns
cmp
pop
aam
push
xchg
cwtl
mov
clc
inc
mov
jecxz
fadd
xchg
push
insb
sub
push
fcmovu
bound
es
pop
aam
push
push
or
inc
push
jge
in
into
shrb
aam
lods
in
mov
into
xchg
shll
adc
test
dec
test
jp
push
xor
mov
mov
mov
outsb
shl
mov
xchg
xchg
lods
jbe
jae
push
lcall
xchg
push
xchg
push
cltd
add
xchg
pusha
push
mov
movsb
stos
iret
and
add
pop
push
xchg
nop
jbe
cmp
orl
inc
push
movsb
push
add
cmp
mov
mov
xor
adc
pushf
repnz
pop
mov
in
cmp
and
and
adc
adc
imul
add
leave
gs
sbb
in
dec
add
xor
mov
and
test
push
ret
xor
cmp
fimull
cmp
jl
add
inc
cltd
in
and
mov
jmp
sub
mov
jne
hlt
jnp
push
enter
add
sbb
mov
jge
mov
jne
loope
add
xchg
push
lods
xchg
adc
fisttpl
or
out
iret
dec
ja
pusha
in
mov
jo
sub
add
aam
iret
mov
outsl
rol
repz
outsb
xor
arpl
cmp
push
pop
adc
cmp
clc
cmp
add
sub
inc
jmp
and
inc
jle
out
ljmp
sahf
and
inc
jb
pop
cs
cmp
stos
dec
and
daa
pop
adc
stos
outsb
pushf
pop
and
xor
or
aam
cmp
mov
aaa
xor
and
mov
xor
add
rcl
cmp
xor
decb
cmp
push
sbb
pusha
push
push
push
cmp
push
iret
dec
xor
jb
and
xor
in
inc
mov
push
shrl
mov
mov
outsb
and
and
pop
or
and
lret
xor
repnz
push
cli
jns
sub
loop
ret
lcall
outsb
pop
jmp
outsb
xchg
pop
sub
gs
scas
imul
fsubrs
sbb
add
insb
or
cmp
jnp
add
push
push
lods
lods
cmpsb
inc
jmp
jns
sub
cmc
mov
std
adc
sub
mov
sub
sub
es
sbb
xlat
or
sub
jge
ret
or
ret
ret
roll
clc
ret
rolb
aad
fst
daa
stc
dec
cmp
ret
dec
mov
popf
sub
xchg
mov
cmp
adc
push
mov
push
out
cmp
jb
hlt
xchg
mov
lds
xor
cmp
in
rcrl
cmp
out
xlat
and
cmp
imul
gs
lea
enter
adc
in
mov
sbb
aas
xchg
mov
pop
and
push
ficoms
inc
xor
gs
mov
dec
xchg
push
and
pop
shrl
inc
mov
sbb
push
insl
or
mov
sbb
lods
jae
clc
ret
mov
xchg
push
test
arpl
imul
cltd
xor
pop
xchg
iret
inc
addb
sub
sbb
cld
adc
inc
add
add
xchg
fisttps
adc
rolw
test
jl
icebp
and
inc
les
cmp
mov
shll
jle
mov
out
push
sub
mov
jl
dec
adc
mov
or
mov
sub
in
daa
movb
sub
int
je
mov
pop
push
repz
xchg
mov
data16
aas
pop
mov
sbb
cmc
mov
mov
fwait
sti
cmp
or
out
mov
loope
and
push
mov
adc
enter
popf
loopne
ss
fistps
add
sbb
jmp
jle
daa
int3
or
cmc
inc
sub
adc
mov
xchg
shlb
pop
outsb
xor
or
jns
lods
sahf
lret
xor
mov
int3
cmp
mov
ja
xor
mov
adc
adc
and
cli
pop
lods
shrl
mov
sub
cs
jle
in
aam
shlb
mov
pop
insb
test
fwait
dec
mov
jp
movsb
pop
fidivrl
add
xor
push
mov
scas
shll
daa
mov
enter
pop
xchg
jecxz
enter
jne
mov
btrl
ss
cmc
inc
mov
cld
adc
mov
je
sub
aad
jae
jne
inc
jp
jne
mov
test
adc
pop
jmp
push
mov
cwtl
xor
dec
test
cmpsl
lea
dec
ja
inc
mov
mov
int
aam
mov
or
int3
mov
sahf
pop
lods
push
fisubl
test
sbb
jg
and
or
pop
or
mov
push
dec
xor
mov
sub
pop
in
inc
push
mov
sub
push
sbb
ds
and
push
sbb
push
sbb
mov
adc
pop
fcomp
push
xor
cmp
scas
inc
jnp
cli
bound
cld
imul
lock
xchg
inc
mov
jmp
aad
decl
insb
je
out
jo
cld
cmp
jno
inc
mov
lret
test
sub
cmp
add
out
and
test
dec
xchg
les
adc
pop
gs
stc
clc
dec
mov
ret
test
in
add
aad
or
mov
adc
cmp
sti
xchg
cmp
mov
addr16
mov
clc
cmp
mov
mov
pop
xchg
cmp
popa
cld
adc
inc
insl
inc
mov
mov
cwtl
mov
dec
out
leave
jb
std
repz
jae
push
jo
pushl
and
mov
mov
sub
cld
jmp
xchg
mov
mov
sbb
scas
xor
mov
leave
mov
cmpb
xor
popa
fwait
test
mov
ficoms
adc
and
cmp
adc
mov
cs
cmp
or
sti
lds
sub
pop
int3
std
pop
jns
sbb
pushf
cmp
jge
mov
scas
jbe
cltd
shl
ss
cmp
pushf
loop
xchg
push
clc
mov
repz
mov
into
insl
out
xchg
aad
sbb
inc
jmp
les
mov
inc
xor
call
pop
mov
jne
aas
subl
dec
fisubrs
inc
sub
and
pop
sbb
insl
dec
xor
xchg
or
and
inc
cld
sub
inc
and
mov
sbb
repz
loopne
repnz
out
mov
xor
jae
fmuls
or
arpl
bswap
xor
mov
movsb
xchg
adc
pop
sbb
jge
and
mov
inc
nop
lea
mov
aam
dec
shrl
adc
in
dec
lea
into
jo
push
jle
fs
sub
in
hlt
je
pop
adc
and
popf
decb
xlat
or
jge
push
jmp
mov
repnz
je
mov
je
leave
shll
inc
shll
lcall
fldcw
xor
inc
jl
and
jmp
or
xchg
arpl
lock
mov
sbb
out
sbb
test
pusha
mov
loop
outsl
roll
enter
in
sub
in
jno
xor
mov
dec
ja
inc
test
loope
notb
cmc
fimull
inc
xchg
cld
mov
sub
les
rolb
pop
lock
and
cmp
xor
cmp
sub
sub
mov
popf
mov
cltd
jne
push
test
xchg
inc
out
xchg
dec
jno
aad
je
stos
mov
das
lods
dec
pop
insb
scas
fadd
sub
aam
lods
mov
insl
or
fimuls
mov
jb
adc
jae
cs
adc
sub
dec
sbb
inc
cli
decb
push
lea
adc
and
andb
sub
adc
mov
xchg
shl
or
pop
push
xchg
addr16
add
push
jo
das
mov
in
xor
stc
cmp
cmp
mov
into
xor
shrl
cmc
bnd
out
mov
and
popf
or
xchg
sbb
adc
or
xor
cltd
repnz
or
in
pop
pop
ja
adcb
inc
gs
mov
push
enter
jmp
in
test
mov
cmp
gs
mov
inc
adc
add
and
inc
rorb
int3
loop
cmpsl
dec
push
inc
xlat
xor
push
cltd
aam
pop
imul
idivl
cmc
and
sbb
pop
ds
cmp
fsubs
xchg
pop
cltd
inc
sub
mov
jp
xchg
push
sub
fidivl
xchg
jo
jl
mov
push
and
pop
sbb
push
inc
or
sbb
adc
sbb
push
or
sbb
dec
mov
incl
add
xchg
inc
sti
inc
adc
loope
cmp
inc
xor
mov
xchg
mov
ret
call
std
jb
or
imul
pop
ja
fisubrs
es
loope
jp
repz
pop
lock
ret
and
insl
repnz
push
out
sbb
pop
js
cld
incl
pusha
cmp
cs
int
imul
pop
hlt
mov
mov
xchg
stos
pop
into
jne
push
and
lcall
mov
or
push
stos
dec
cmp
shll
lret
jns
push
js
inc
sbb
lea
jbe
pop
xchg
dec
mov
aaa
lea
ja
add
mov
lahf
xchg
in
cmp
cs
xor
into
notb
adc
cmp
shl
sub
shll
and
out
push
iret
and
xor
and
loopne
mov
sbb
enter
cli
aam
mov
cmp
sbb
ds
push
mov
outsl
loope
xchg
pop
negb
mov
jae
push
icebp
inc
popa
flds
fisubs
cmp
enter
dec
and
mov
jle
sbb
xor
outsb
add
mov
inc
test
mov
test
cmpsb
fiadds
cmpsl
fsubrp
jo
push
jge
cld
rorl
cs
dec
movsb
sbb
dec
iret
loope
mov
mov
clc
xor
es
or
xchg
fs
push
xor
lods
dec
sbb
inc
and
arpl
sub
fs
mov
cwtl
repnz
mov
in
dec
mov
xor
mov
push
in
cmp
bnd
xchg
and
cmp
mov
pop
leave
sbb
pop
add
adc
jne
mov
cmp
leave
enter
int
pop
mov
inc
sbb
testl
mov
xchg
jge
rolb
add
cmp
xchg
rorb
adc
mov
pop
pop
adc
jae
push
aaa
shll
and
cmp
pop
xor
rclb
mov
cli
inc
daa
cmp
fcoms
mov
call
push
sub
mov
addr16
out
repnz
orb
shrb
out
cmp
mov
mov
loope
shll
jg
xchg
fiadds
xchg
and
pop
xor
add
sbb
test
shrb
fs
inc
mov
lahf
mov
or
or
fadds
in
vucomisd
divb
test
stc
cmp
xchg
ret
mov
jecxz
sub
xchg
leave
pushf
lcall
les
jge
or
mov
adc
mov
jp
dec
pushl
xchg
mov
add
cmp
jp
aaa
les
add
or
in
mov
sub
xchg
enter
or
mov
xchg
sti
inc
xchg
or
mov
out
or
fsubrs
xchg
xchg
lods
pop
cmp
aam
push
jg
mov
iret
cmp
jg
icebp
mov
cwtl
sub
add
cmp
push
sbb
gs
jnp
ret
dec
mov
mov
andl
cmp
das
shl
push
mov
cld
pop
dec
sub
xor
out
mov
xor
pop
arpl
cmp
notb
or
mov
arpl
xchg
sbb
jg
shlb
push
shl
push
clc
dec
push
adc
lcall
sbb
mov
daa
cmp
test
sbb
pop
inc
dec
sahf
pushf
xchg
adc
iret
out
mov
inc
mov
xchg
stos
bound
xor
int3
jg
sbb
sbb
xchg
ss
adc
lea
push
push
dec
mov
dec
popf
sbb
clc
add
setbe
cmc
pop
outsl
in
fcomip
mov
ja
cmp
into
outsb
mov
scas
rcrb
mov
cmc
cmp
mov
or
pop
loopne,pn
and
pusha
jle
or
and
pop
ret
lds
xchg
jae
sbb
fcom
insl
mov
test
stos
aad
or
jmp
mov
push
push
cltd
xchg
mov
fsubr
push
pop
jnp
enter
pop
rcr
add
xchg
sub
jecxz
mov
arpl
mov
aam
sub
fstps
xchg
jp
push
jmp
shr
xchg
cmc
loope
cmpsl
jecxz
or
andb
ljmp
gs
sub
pushf
sbb
cltd
aad
ljmp
popa
adc
dec
test
xchg
test
jmp
outsb
sub
cli
add
and
vcvtss2sd
imul
aam
dec
sti
scas
rorb
dec
xor
jnp
or
subl
stos
outsb
push
xlat
sub
xchg
mov
in
mov
sub
out
rorb
cmpsb
sub
sbb
push
jmp
nop
add
mov
loope
mov
cli
push
cmc
or
dec
es
mov
fs
inc
mov
inc
repnz
cmp
pop
pop
adc
imull
push
test
or
jge
inc
and
cltd
shl
sbb
inc
sti
push
pop
or
mov
mov
loope
ret
xchg
out
jg
lret
loopne
ret
sbb
daa
lcall
lret
mov
inc
dec
aaa
or
jle
or
notb
mov
xor
aam
enter
fcoms
jne
cmp
sub
rcl
jnp
lods
mov
dec
or
test
insl
lock
movsl
xchg
loope
cmp
lea
adc
arpl
shlb
insb
jl
xor
jecxz
lods
ret
gs
lods
xchg
xlat
jl
dec
mov
and
stos
mov
cmpl
mov
cmp
xchg
mov
push
inc
mov
cmpsl
push
movsl
daa
mov
rcr
sub
sbb
jl
add
out
mov
xor
out
test
dec
lcall
in
cwtl
ret
jmp
in
push
sbb
lcall
addr16
lahf
cld
sub
out
xchg
mov
cmp
mov
mov
push
out
das
repnz
lea
pop
mov
jne
out
test
mov
rcll
lcall
es
jecxz
stos
cmp
scas
cmp
xor
pop
xchg
and
mov
mov
pop
cmp
pop
lock
js
xchg
das
pop
scas
jecxz
les
roll
enter
pop
pop
xor
cs
xchg
stos
cmpsb
pop
cmp
dec
std
adc
push
stc
fildll
jne
fistps
outsl
xchg
xor
jge
cmp
cmp
mov
cmpsl
rclb
fs
orl
xor
xor
cld
testb
enter
dec
add
test
movsl
inc
js
lods
cld
dec
enter
and
push
mov
cmp
sub
sbb
sub
sti
sub
xor
mov
pop
dec
aam
inc
jle
pop
mov
rcrl
sbb
mov
jle
bound
loop
mov
lret
lods
mov
xor
subb
and
xor
cmp
mul
or
jns
mov
jne
and
adc
xor
pop
bound
lea
and
cmp
pop
dec
outsb
mov
cmpsl
jne
adc
or
pusha
in
jl
cmpsb
jo
mov
stos
mov
enter
adc
xor
mov
shrd
lods
sbb
pop
sti
out
orb
inc
xor
pop
das
shl
pop
add
or
mov
cmp
xor
aas
hlt
cs
rclb
ret
push
mov
mov
outsb
or
mov
leave
addb
dec
fwait
cltd
cmp
dec
imul
jle
stos
loope
push
xlat
push
aam
xchg
xchg
adc
cmp
test
sbb
push
cmp
xchg
mov
pop
sbb
push
mov
add
pop
insb
jl
xchg
and
xor
push
pop
pop
test
push
mov
xchg
shlb
in
aas
and
mov
jp
mov
cmp
jae
rcrb
mov
jmp
push
or
and
or
cmp
sti
or
movsb
mov
or
repnz
outsb
mov
insb
xchg
dec
mov
ds
xchg
pop
dec
in
sahf
data16
leave
imul
add
xor
test
xor
mov
movsl
pop
fcoml
loopne
sub
add
sbb
into
xor
mov
sti
xor
daa
cmp
into
bound
or
pop
cmp
ja
mov
lahf
in
sbbb
adc
je
arpl
mov
sub
jne
mov
mov
adc
push
add
movsb
mov
inc
mov
sbb
out
dec
pop
rclb
popf
mov
or
hlt
sbb
dec
mov
iret
incl
sub
ljmp
sahf
inc
addb
push
dec
aaa
or
push
insl
in
test
pop
loopne
mov
push
mov
mov
adc
mov
aad
movsl
dec
adc
cmp
xor
icebp
js
add
outsl
fcoms
orl
mov
imul
push
sbb
dec
stos
adc
push
mov
rclb
imul
add
cmp
mov
out
inc
ret
jb
or
pop
ljmp
out
insl
xor
mov
movsl
sub
insb
sti
adc
rclb
sbb
and
test
dec
pop
adc
lea
int
rcr
rorl
mov
repnz
sub
push
daa
mov
hlt
sub
dec
dec
cmc
jle
sti
lcall
sti
xor
xchg
repnz
pop
mov
mov
adc
mov
push
fwait
mov
or
inc
inc
and
sub
add
inc
mov
mov
cmp
in
push
pop
gs
rclb
pop
test
lcall
and
adc
out
mov
aam
jne
in
dec
cmpsl
or
mov
sbbb
xor
cmp
loop
mov
fnstenv
mov
lea
ror
or
in
and
ja
je
adc
mov
fptan
push
xchg
shrl
je
jne
lahf
inc
roll
xchg
mov
sbb
or
xchg
cmp
and
mov
push
xor
popa
and
lcall
and
mov
mov
pop
rcrl
arpl
data16
loop
pop
or
lea
sbb
inc
dec
xchg
in
cmp
daa
jmp
push
mov
mov
stc
sub
pop
adc
cltd
inc
cmpl
xor
mov
ss
dec
je
xchg
daa
inc
mov
lcall
dec
les
popa
dec
not
cs
jl
push
dec
jne
push
insb
dec
sbb
out
add
xchg
push
dec
and
xchg
or
sub
mov
ja
inc
cli
jp
or
sub
sub
adc
sbb
cmc
dec
adc
clc
or
cmp
call
ret
in
fldcw
sbb
jg
jecxz
cltd
aas
sbb
jns
stc
loope
fwait
std
out
mov
outsb
outsb
mov
shr
pop
or
jp
push
out
sbb
inc
push
push
mov
movsb
movsb
fstpl
cmp
pop
and
rcll
mov
popf
sti
mov
mov
dec
getsec
cltd
inc
cmp
mov
sbb
adc
fsubrs
into
xor
mov
inc
adc
inc
stc
data16
rorl
insl
adc
subl
jmp
or
xchg
push
inc
jne
fucomip
xchg
popa
adc
out
add
pusha
xor
jns
in
jb
push
cmp
jge
es
mov
movsb
push
fwait
add
or
add
insl
scas
insb
xor
stc
cwtl
shll
test
out
arpl
jnp
jae
outsb
sbbb
push
push
cli
movsl
xor
out
rolb
test
shll
push
xor
jl
jae
cmp
jg
ficoml
into
and
inc
in
pop
sub
lret
inc
sub
add
push
sti
nop
push
pop
ret
and
xor
and
mov
decl
xor
jne
or
adcb
mov
cmpsb
pop
sbb
in
rcl
sub
divb
mov
fsubs
add
sbb
jp
push
cmp
add
jl
imul
aad
and
push
cmp
adc
xchg
pop
xor
sub
fmull
scas
iret
xchg
sub
adc
sbb
xchg
psubd
popf
pop
xchg
push
mov
js
sarw
popf
xchg
xor
dec
inc
mov
sub
pop
xchg
in
mov
popa
add
movsb
xor
int
sub
sbb
addr16
pop
sbb
mov
fbstp
adc
lahf
jb
and
push
cld
leave
aam
cmp
cmp
lea
push
mov
inc
push
or
cwtl
and
cmp
push
rcl
jge
or
mov
xlat
jbe
push
xor
in
sbb
addr16
push
mov
push
push
lods
or
and
ret
push
shlb
out
ljmp
push
pop
or
popa
dec
cld
push
mov
outsl
repz
jg
test
popf
dec
enter
sub
in
pop
and
mov
cmp
imul
sbb
mov
cs
in
stc
inc
and
mov
scas
mov
jl
sbb
or
cmp
dec
mov
in
out
sub
cmpsl
mov
mov
jp,pt
fcmovu
setb
add
ljmp
icebp
or
cmp
push
sub
xor
cld
push
or
add
cwtl
es
ljmp
jae
mov
das
mov
push
push
loop
ljmp
sub
int
iret
and
es
cltd
xchg
aas
outsl
dec
xchg
loop
scas
lcall
xchg
adc
test
mov
jne
ror
repnz
lods
jge
imul
ja
mov
and
inc
mov
inc
mov
popa
mov
jb
ficoms
sbb
repnz
dec
ljmp
out
jbe
xchg
jne
xor
test
fidivl
sbb
inc
rcl
dec
lret
leave
push
sub
rcll
ret
dec
inc
mov
lret
jo
inc
jb
inc
sub
or
sbb
jne
aam
xor
cmp
hlt
mov
cmp
outsl
pop
out
and
shrb
ret
pop
add
popa
jne
add
xor
mov
xor
out
mov
imul
es
fucomi
in
or
cmp
stos
or
adc
push
xchg
cltd
iret
xor
mov
clc
mov
xor
das
sbb
or
repz
call
jae
xor
addr16
cmp
mov
scas
cld
mov
and
inc
lcall
outsb
cmp
sub
sbb
imull
adc
fcmovnbe
es
gs
out
das
mov
inc
dec
xor
ss
push
ret
pop
add
xor
inc
cmc
mov
not
lds
jmp
pop
test
ficoml
mov
xor
push
inc
mov
pop
sub
ror
repnz
mov
jl
sbb
cltd
inc
out
and
adc
jnp
adc
call
xor
dec
cmp
in
sbb
xchg
aas
sbb
repnz
lcall
subl
test
arpl
cmp
rcr
mov
xor
ljmp
pop
lret
cmp
xchg
lock
push
decb
mov
xor
cmp
cld
iret
aas
jmp
cmp
mov
mov
inc
jb
in
js
cltd
pop
fimuls
das
lea
inc
cltd
loop
adc
xor
scas
jp
outsl
or
adc
or
gs
cld
cmp
pop
dec
jecxz
mov
pop
in
mov
pushf
xchg
push
or
jp
ret
jp
rclb
daa
dec
test
sbb
sbb
pop
xchg
fs
push
push
dec
loope
sub
lret
inc
ds
cld
inc
cmp
mov
mov
push
cltd
mov
je
popf
fnstsw
fsubs
pop
jmp
frndint
cmp
xchg
xor
clc
mov
leave
shl
sub
mov
adc
jl
ret
pop
in
jp
jo
and
sub
dec
add
pop
cwtl
push
mov
ljmp
xchg
inc
out
xor
pop
xchg
and
jecxz
add
mov
ljmp
jl
inc
cmp
popa
inc
mov
mov
iret
add
or
je
push
or
jns
fdivs
and
call
fwait
push
lcall
cmp
add
fisubrl
xor
lret
lods
fstl
push
sbb
out
shll
inc
lock
jg
test
lret
repnz
sbb
and
enter
pop
or
push
xor
test
andl
cmp
xlat
loope
loopne
mov
pushl
loope
rorl
shlb
dec
test
test
decl
aas
rcrl
adc
sysexit
and
lds
lods
mov
xor
sub
cld
cmp
mov
fwait
mov
cltd
daa
ljmp
add
jmp
push
test
pop
mov
jnp
les
lds
adc
inc
dec
cmp
popf
mov
or
adc
pop
test
imul
cltd
xchg
xor
sub
pop
xchg
icebp
mov
ljmp
sbb
aaa
push
sbb
test
xchg
imul
sub
cmp
sub
mov
sub
cmc
popf
push
notl
mulb
dec
mov
xchg
and
mov
cld
fisttpl
jg
xor
push
mov
sbb
pop
sub
jle
mov
push
adc
ret
in
cmpsl
xchg
sub
mov
cld
jl
cld
je
sub
popf
cmpsl
lcall
adc
pop
out
gs
mov
pop
pop
daa
fwait
mov
xchg
cmpsb
call
mov
in
repz
inc
or
add
mov
inc
adc
sbb
adc
xchg
xchg
and
imul
cmpb
jge
lcall
add
addr16
rcr
cmp
push
or
imul
shrl
out
test
add
mov
xchg
and
addr16
xchg
test
out
inc
or
push
cmp
sbb
cmc
jae
sahf
fnstenv
testb
outsb
xchg
ljmp
insl
mov
jecxz
ret
popf
dec
cmp
es
jg
dec
mov
and
in
mov
int3
xor
mov
mov
dec
inc
jecxz
dec
sub
cmp
fcoms
xor
int
les
insl
stc
xchg
sub
inc
jae
push
jae
lret
dec
sbb
mov
lret
jp
rorl
roll
fwait
mov
ret
mov
pop
pop
jno
negb
fidivrl
xor
in
mov
pusha
inc
inc
push
xchg
cmp
cltd
xor
mov
mov
adc
fs
cs
and
jne
insb
inc
daa
bound
sub
cmp
int
xor
sbb
adc
adcl
daa
dec
lds
xor
or
mov
pusha
xchg
push
sub
jp
adc
inc
cld
sub
scas
lds
sbb
push
jmp
inc
mov
fwait
and
sub
xor
add
adc
pop
icebp
cmc
inc
and
mov
fstpt
outsb
sar
dec
jle
xchg
mov
cltd
dec
movl
push
add
sub
pop
dec
ja
repnz
dec
adc
cli
xchg
jns
inc
push
aaa
aas
push
cmpsl
xchg
and
mov
ljmp
mov
inc
mov
jb
xchg
cmp
sub
fstl
inc
divl
out
stc
dec
mov
cmc
es
cmp
or
add
dec
inc
jge
lcall
data16
xorb
in
adcb
repz
fdivs
cld
push
les
xchg
push
dec
sbb
insl
xor
pop
pop
dec
xor
sub
lahf
lds
mov
mov
or
pop
sub
shrl
in
fstpt
mov
arpl
push
lea
stc
jp
fidivs
shll
stos
iret
mov
jl
dec
mov
js
into
and
cmpsb
cmp
andl
inc
mov
or
ja
out
popa
in
faddp
xchg
call
test
mov
mov
sub
cld
mov
sahf
sbbl
inc
sbb
jnp
roll
mov
ds
push
xor
xor
mov
stc
nop
movsl
sbb
jbe
dec
inc
ljmp
or
cmpsl
movsl
ret
lcall
cmp
dec
jne
mov
or
sub
xchg
jbe
cli
outsl
pop
pop
ret
jmp
lahf
cmp
xlat
shrl
aaa
mov
xor
repnz
cwtl
xor
popa
loopne
mov
das
loope
inc
xchg
aam
repnz
dec
and
jp
adc
es
into
aam
pop
movsb
arpl
sahf
js
cli
or
std
adc
enter
daa
inc
xor
pop
pop
loope
mov
outsl
mov
xor
pop
xchg
mov
push
insb
and
sub
xchg
dec
mov
les
push
rclb
test
pop
jns
mov
loop
cmp
fwait
dec
das
fimuls
cmp
and
shlb
jae
sar
push
mov
mov
lods
xor
repz
or
xchg
daa
loop
mov
test
sub
xlat
ss
inc
sbb
rcl
das
cmp
sti
or
ljmp
insl
int
pop
cmc
jg
bound
lock
ficoml
xchg
dec
pop
and
loop
add
add
js
or
loope,pn
lods
lods
testl
ljmp
imul
fs
sbb
dec
lock
es
cs
dec
out
mov
lock
cli
push
mov
cmp
dec
pop
fistpl
in
cmp
or
cmp
ds
ret
xchg
inc
xor
jae
cmp
sbb
or
and
cmp
inc
cmpsl
int3
add
cmp
mov
orl
fldenv
xor
push
xor
cltd
imul
and
fstpl
xchg
faddl
fidivrs
repz
aam
bnd
push
imul
fstpt
push
mov
xchg
arpl
xlat
mov
dec
mov
pushf
mov
call
sub
lret
or
icebp
in
push
jns
fisubs
pslld
cmp
sub
int3
int
cmp
cmp
xchg
adc
pop
ds
or
cmp
xchg
rolb
data16
daa
mov
pop
cmp
ja
dec
jg
xor
jne
sub
lcall
mov
xchg
cmp
push
sbb
xorb
jns
test
es
or
icebp
ja
mov
add
jg
dec
mov
mov
sub
jl
dec
lahf
popf
stc
out
dec
xchg
dec
aas
mov
xchg
aaa
push
xchg
push
in
ja
xor
cmp
sbbb
sub
sbb
jmp
cmpsl
aaa
pop
push
sbb
dec
push
loope
push
and
pop
push
incl
movsb
mov
outsl
xor
repnz
ljmp
mov
imul
mov
or
xor
xchg
into
add
lea
aas
mov
mov
push
mov
fcoms
xor
int
mov
sbb
and
push
mov
push
pop
adc
inc
mov
popa
cmp
push
and
xchg
cmp
sbb
dec
in
inc
bound
int
out
pusha
jb
dec
inc
loop
rcr
inc
fimuls
dec
cld
xor
sub
mov
and
shrb
shl
testl
aas
mov
scas
lods
hlt
adc
and
mov
jae
ret
fisubl
mov
sbb
mov
dec
daa
out
pop
iret
and
faddp
imul
jne
hlt
mov
push
cli
lea
jb
inc
aam
int
cmp
inc
je
push
pop
repnz
scas
inc
xor
pop
fs
mov
push
cmp
notb
mov
xor
mov
pop
push
pop
into
and
xchg
mov
jnp
cmp
scas
leave
inc
push
mov
icebp
xchg
pop
fwait
inc
call
and
mov
cmp
sub
jl
daa
push
fcomip
mov
or
adc
loop
add
and
push
pop
sbb
daa
shl
loop
xor
jne
scas
pop
sbb
xor
xchg
scas
pop
mov
out
insb
mov
mov
add
or
inc
fldenv
push
movsb
std
sarb
lcall
cmp
inc
adc
jb
andl
mov
into
cwtl
xor
in
xchg
xchg
popa
pop
jne
fsubrs
lods
cmp
ret
mov
jecxz
enter
sti
aam
push
mov
mov
pop
mov
push
call
sbb
xchg
sbb
dec
adc
andb
mov
movsb
cld
mov
and
and
test
lock
mov
xor
mov
fcos
jmp
mov
in
cmp
cmpsb
addr16
xchg
cmp
mov
push
push
cmc
out
lods
mov
out
enter
sahf
dec
xchg
mov
xchg
mov
push
and
shrb
sahf
push
movl
push
shl
cmp
push
xchg
adc
mov
addr16
or
sub
dec
jp
push
xor
mulb
pop
push
iret
in
roll
cmp
aas
arpl
mov
jns
sub
push
xor
cmp
cmp
iret
ror
sub
or
ret
inc
ret
jne
mov
loop
pop
xor
xchg
shlb
jne
xchg
inc
xchg
outsb
bnd
adc
cltd
sbb
jge
jg
outsl
repnz
add
cwtl
xchg
mov
stc
push
xchg
rclb
cli
dec
in
repnz
add
clc
add
shrb
lret
movb
mov
xor
outsb
repnz
stos
push
filds
cli
or
nop
mov
mov
jmp
decl
pop
mov
xchg
outsb
repnz
pop
aad
pop
jbe
lods
int3
repnz
dec
leave
pop
adc
int
pop
shlb
sbb
mov
mov
pushf
mov
std
call
call
loope,pn
add
sahf
mov
jbe
xor
aaa
call
inc
stos
outsb
inc
lods
push
mov
js
cli
mov
and
xchg
sahf
jmp
xor
jbe
cli
sub
dec
fldcw
test
xchg
dec
push
jbe
dec
lret
xchg
jl
inc
outsb
stos
cmp
pop
nop
cwtl
pop
push
call
test
pop
cs
sti
jae
int
pop
std
mov
cli
add
out
jmp
inc
mov
repnz
xchg
push
repz
sahf
xchg
mov
adc
jp
rol
ds
mov
inc
push
adc
jle
int
add
mov
scas
inc
incl
fadds
pop
cmp
pop
and
repnz
mov
outsb
mov
clc
jbe
mov
insb
sahf
inc
jp
jmp
jle
enter
pop
lds
jmp
ljmp
jnp
fidivrs
clc
mov
cmpsb
lret
repnz
and
fcmove
push
out
mov
pushl
mov
jp
js
test
jnp
repnz
mov
repnz
insb
cs
mov
ftst
jnp
and
les
mov
lret
mov
xor
adc
fwait
popf
in
mov
mov
je
negb
ret
fnstsw
out
cltd
inc
and
mov
je
xor
sub
cld
lods
repz
notl
fcmovne
loop
cmp
push
loopne
mov
adc
jmp
inc
stc
ja
adc
cmp
cmp
xor
cmp
lds
or
dec
cmp
jle
leave
add
inc
sbb
dec
mov
jp
mov
xchg
mov
mov
mov
jecxz
jne
mov
dec
and
aaa
cmc
cmpsl
sarl
mov
ret
pop
mov
popf
jbe
rcrb
pop
and
mov
leave
xor
xchg
mov
fbld
lds
loopne
dec
and
mov
jae
mov
ss
pop
test
dec
test
mov
data16
xchg
sbb
ret
ret
in
mov
jb
or
notb
jl
imul
cmpsl
cld
jl
loope
leave
dec
cmc
pop
divl
mov
in
dec
jne
inc
into
mov
cmpsl
outsb
hlt
loop
bound
rcll
or
jno
mov
adc
xlat
xchg
jae
mov
mov
sub
cld
adc
mov
je
pop
adcl
sbb
mov
push
mov
cld
leave
dec
jbe
fdivs
test
subb
inc
lods
scas
pop
and
or
adc
fisubs
cmp
or
xor
shlb
push
mov
adc
add
jo
test
inc
sarl
xchg
data16
shlb
lds
xorb
enter
xor
xor
mov
daa
cmp
cmc
xchg
sub
xchg
mov
mov
stc
jmp
and
out
sub
xchg
jl
push
push
rcr
cmp
ljmp
popf
lret
mov
dec
bound
jnp
jo
push
mov
out
jnp
mov
loop
cmp
in
adc
jo
lret
into
push
std
outsl
test
ds
adc
mov
dec
jecxz
sbb
sbb
mov
mov
sbb
into
adc
jno
iret
test
xchg
cmp
adc
leave
inc
mov
data16
int3
cmp
mov
cmp
xchg
out
int
push
or
jl
andb
mov
mov
xor
xchg
mov
cmp
jb
cmp
sub
push
int3
and
leave
xor
pop
mov
or
pop
and
sbb
lret
xor
fidivl
jl
push
leave
jb
icebp
inc
loop
loop
cmp
or
sahf
in
pusha
push
add
jns
and
in
fisttpll
leave
push
cld
loopne
and
cmp
popf
cmpsl
popf
ds
pop
inc
sub
jo
push
test
scas
fprem1
pop
xor
jg
pop
jle
sub
fiadds
dec
jmp
out
xor
in
stc
sub
sarb
and
les
repnz
leave
xor
not
js
mull
and
jle
and
xor
push
divl
xchg
inc
in
js
dec
shrl
cmp
stos
mov
push
xchg
pop
sarl
mov
xchg
jb
inc
leave
out
xchg
loop
push
stc
lods
pop
mov
testb
cmp
cmp
adc
cmp
pushf
adc
mov
dec
xor
push
sahf
out
mov
inc
sbb
mov
loop
sbb
jle
sti
add
pop
jle
xor
inc
inc
in
mov
or
int3
aas
sbb
cmp
or
clc
cmp
push
inc
jbe
adc
cmp
pop
inc
push
and
mov
shlb
xchg
iret
lods
mov
mov
nop
or
push
push
int3
jecxz
push
or
xchg
pop
pop
ljmp
jmp
out
mov
inc
addr16
push
es
add
cmpsb
add
mov
or
mov
shlb
in
lods
insb
pop
sbbl
movsb
lods
cmc
imul
dec
aad
jb
jmp
and
mov
pop
mov
inc
cli
cmp
jbe
pushf
dec
rorb
add
jbe
cmp
sbb
pop
out
xchg
stc
pop
lahf
hlt
jp
xor
add
sbb
add
and
pusha
sub
mov
mov
loop
xor
fdivrp
sbb
push
cmp
mov
cmp
inc
into
dec
loope
aad
lahf
mov
adc
sbb
sahf
jle
movsl
arpl
and
add
dec
xchg
or
xchg
scas
sbb
mov
adc
xor
push
in
fiaddl
popf
std
add
pop
dec
cli
xor
adc
xchg
ss
orb
lret
dec
addb
vmovd
xor
or
adc
sarb
push
pop
movsb
shrb
xor
out
sbb
xorl
outsl
rcr
cmp
adc
std
xchg
mov
push
push
fadds
xchg
adc
int
add
cmp
lahf
or
loop
mov
addr16
xchg
repnz
pusha
sbb
or
mov
pop
push
jb
lea
cmp
mov
fldenv
adc
gs
or
cmp
xchg
xchg
or
sub
dec
mov
add
data16
sbb
xchg
lea
shlb
fwait
sbb
mov
and
push
sbb
xchg
sahf
sbb
data16
inc
dec
inc
lret
and
add
stc
mov
xchg
jnp
outsl
pop
ret
and
adc
push
mov
xor
inc
iret
and
fisubl
mov
pop
xor
inc
decl
jne
mov
cmp
or
test
push
daa
mov
mov
sbb
cs
orl
push
and
test
sbb
jp
xor
pop
mov
sub
sti
insl
pop
pop
ret
adc
mov
idivl
mov
xor
rclb
mov
ret
sub
ret
pushf
cmpsb
clc
movsl
and
cmpsl
fcmove
imul
jp
sub
outsb
arpl
xor
gs
push
je
aas
fwait
ss
js
shlb
cli
xchg
fimull
xchg
xor
pop
fcoml
int
mov
pop
lods
iret
adc
push
jno
lret
push
cmp
iret
xor
ficoml
xchg
inc
stc
and
fdiv
rolb
lea
or
adc
repnz
cmp
sub
inc
mov
imul
sub
fwait
popa
pop
cmp
and
xchg
sbb
idivb
mov
sti
adc
out
ficompl
lods
cmpsl
mov
call
out
xor
sbb
out
jl
notl
cmp
xchg
mov
and
popa
adc
or
mov
adc
jecxz
jl
xor
cmp
or
js
inc
pop
sbbl
mov
hlt
scas
add
dec
shrl
iret
mov
loope
adc
adc
fmul
int3
repz
cmp
dec
lock
inc
lcall
cmp
jge
cmp
hlt
sub
sti
dec
jae
lret
inc
jle
and
rorb
cmp
mov
fs
stc
mov
ret
inc
push
insb
and
insb
test
cld
sbb
lcall
bound
enter
jmp
loope
sub
cmp
imul
cmp
cltd
xchg
mull
lcall
jmp
cmp
ss
xchg
aam
xchg
fwait
sbb
push
aad
inc
int3
push
fidivrl
aam
cmp
addr16
div
mov
xchg
outsb
leave
xor
pop
jp
arpl
int
mov
jne
jle
inc
sti
in
daa
pusha
stc
cli
fnstsw
mov
ret
aam
pop
push
xor
ret
jmp
out
pusha
push
in
xchg
sahf
jecxz
jmp
ret
nop
je
cmp
das
fisttpl
imull
dec
push
mov
out
mov
data16
into
adc
rcrl
xchg
lcall
cmp
jp
loop
sub
xchg
cs
mov
adc
and
pop
enter
push
icebp
ljmp
hlt
adc
xchg
xchg
push
mov
jb
pushl
xor
xchg
jmp
cmpl
dec
data16
in
xchg
pop
sub
int
ljmp
jnp
cmp
or
pop
add
les
sbb
ret
cs
xchg
fucom
ds
sub
push
or
inc
hlt
aad
mov
push
sbb
out
out
cld
in
dec
mov
cs
test
inc
lods
dec
xor
pop
inc
rclb
or
mov
adc
push
fdivp
sbb
xor
es
mov
ds
xor
adc
fldenv
shr
mov
js
mov
imul
mov
sub
enter
adc
and
add
and
push
rclb
adc
in
pop
scas
out
sti
cmp
cwtl
push
add
mov
ret
mov
and
test
adc
arpl
lcall
push
cmp
cmp
xchg
mov
mov
loopne
or
lds
add
push
mov
sti
mov
inc
stos
mov
sub
mov
push
push
push
cld
jae
sub
in
pcmpeqd
cmp
cwtl
inc
and
subb
jmp
jbe
dec
pusha
jb
or
dec
popa
adc
rcrl
pusha
cmp
jmp
adc
loop
out
orb
and
pop
out
stos
aam
test
inc
jae
push
lcall
fdivrl
loope
jne
or
incl
push
sbb
pop
or
movsb
and
mov
in
mov
xchg
dec
inc
jge
xchg
jmp
rolb
push
pop
insb
adc
xchg
sbb
and
xor
loop
inc
mov
pop
cmp
ljmp
sub
nop
or
das
ret
jae
push
inc
adc
cmc
or
inc
jae
mov
es
dec
int
fcos
or
mov
jnp
sbb
loope
sbb
in
xor
fdiv
mov
sbb
cmc
imul
xor
adc
pop
fnstenv
cmpsl
dec
jg
pop
loop
fimull
cltd
cmp
jl
and
addr16
sbb
repnz
push
shlb
mov
dec
js
lcall
mov
cmc
loope
popf
cld
and
or
sub
lods
or
pushl
dec
mov
pop
je
push
out
xchg
xor
xchg
pop
inc
add
jae
test
out
pop
xchg
xchg
daa
add
mov
sbb
in
sar
mov
pop
hlt
enter
push
and
push
or
fxtract
loop
scas
pusha
xor
mov
sub
adc
cmp
cmpl
xor
and
iret
dec
out
js
or
xchg
repnz
repnz
je
into
cmp
sbb
in
out
pop
pop
pop
test
push
hlt
cmpsb
ret
int3
loopne
outsb
leave
pop
adc
divb
pop
pop
dec
ret
dec
pop
adc
pop
sub
out
loopne
cmp
adc
pmaddwd
ret
jmp
inc
mov
imul
and
decl
popa
movsb
incl
mov
loope
sti
lods
clc
popf
adc
add
adc
mov
dec
sarb
sbb
mov
mov
push
jg
xlat
shrb
and
loope
jne
sbb
xchg
jb
loopne
arpl
in
cmp
int3
pop
cli
imul
cli
dec
adc
test
loope
pop
mov
leave
sub
xchg
rcrb
fsubrp
add
fiaddl
xchg
push
enter
and
stc
cs
stos
repnz
es
add
xchg
xchg
out
push
lcall
jp
jbe
out
stc
into
ret
push
cmpsb
fisubrl
mov
repnz
ljmp
inc
push
cmpb
repz
es
outsb
sub
imul
repnz
cmpsb
mov
stos
inc
dec
enter
xchg
sti
mov
outsb
pop
fimuls
pop
std
jb
adcb
push
pop
jmp
repnz
inc
and
fiadds
out
cli
cltd
bound
icebp
xchg
mov
pop
pop
lret
sub
jb
ficoms
repnz
or
sbbb
mov
pop
int3
sahf
bound
pop
ret
out
and
sbb
shlb
jle
enter
pop
lcall
fisubrs
out
fsubs
inc
ficoml
clc
fidivrs
fdivrp
mov
xchg
jb
mov
ret
pop
push
sub
dec
je
cmp
cmp
scas
inc
std
jl
xor
notl
rolb
mov
sbb
out
mov
inc
dec
vmovdqu
cld
inc
xor
jg
mov
lcall
shlb
sub
push
jb
adc
mov
aaa
xchg
es
adc
mov
pop
xor
adc
and
jb
pusha
push
fistl
outsb
cmp
cmpsl
or
adc
jle
outsl
sub
xchg
adc
xor
xchg
mov
cli
addl
shrb
jecxz
mov
and
cmc
and
pop
je
sbb
xor
stos
xor
fiaddl
nop
movb
lea
mov
sub
pop
mov
imul
push
ljmp
in
push
das
fdivr
add
andl
sbb
imul
adc
mov
out
xor
ljmp
test
cmc
and
ds
outsl
dec
sub
adc
fld
mov
test
lcall
add
xchg
mov
mov
hlt
xchg
jp
in
jg
inc
dec
mov
insl
fidivs
and
lcall
add
add
push
sbb
mov
out
aam
ljmp
icebp
cltd
mov
insb
sub
aaa
inc
sbb
adc
dec
repz
fiadds
popa
mov
inc
adc
inc
into
cmp
pop
mov
sub
out
jge
dec
ds
pushf
inc
gs
sbb
sub
and
les
mov
aaa
mov
sbb
cmp
lahf
lcall
in
inc
mov
jb
loopne
shlb
and
aaa
in
mov
lcall
dec
lret
fdivrs
out
out
mov
cld
xor
mov
cmp
dec
add
aas
lock
xchg
xor
bound
mov
mov
mov
dec
push
das
xchg
pusha
jge
xor
and
clc
test
test
pop
sbb
or
xor
movsl
pop
enter
sub
dec
testl
sub
ja
xor
sbb
mov
loope
xchg
xor
push
push
leave
insl
mov
or
lea
xor
out
insb
cli
ds
sbb
push
or
movsl
sti
jle
cs
inc
jne
test
mov
mov
testb
icebp
xor
mov
js
jbe
jnp
enter
aam
shr
and
sbb
test
lods
or
mov
sbb
xchg
xor
push
stc
negb
mov
sarb
sbb
jl
cmpsl
jmp
lock
mov
in
inc
insl
scas
je
and
jl
outsb
or
jl
ljmp
arpl
ret
xor
add
pop
arpl
cmp
xchg
lods
and
mov
add
sbb
sbbl
xchg
sbb
mov
jno
mov
aaa
shll
stos
aad
cmp
pop
push
les
cld
and
icebp
sub
mov
inc
xor
mov
fildl
pop
aam
and
mov
test
lock
dec
xchg
mov
jne
add
mov
pop
dec
mov
xor
cmp
pop
mov
cmp
mov
ret
dec
insb
pop
cmc
ljmp
cmp
lret
jp
xchg
xchg
sub
sbb
cld
adc
xchg
hlt
ret
lock
dec
je
out
aaa
cld
sub
fnstcw
inc
mov
pop
xor
or
push
jg
scas
fucom
outsl
sub
sub
sbb
and
ret
scas
jle
sahf
lahf
push
cmpsb
imul
pushf
in
out
mov
mov
xchg
js
decl
neg
adc
and
mov
ret
pmulhw
jo
sbb
push
mov
std
push
mov
int3
inc
cmp
mov
xor
out
jb
mov
add
adc
add
insb
out
fsubl
ljmp
or
jecxz
test
daa
in
lret
cli
add
out
inc
lcall
outsl
fidivrs
jp
inc
push
decl
outsl
sti
adc
cmp
test
imul
mov
adc
fmull
push
in
lcall
add
jnp
sbb
cltd
fsubl
out
pop
in
mov
lahf
or
lret
arpl
mov
rcll
adc
in
rclb
push
stos
shll
jno
cmp
sub
pop
bound
fistpll
xchg
data16
sbb
inc
xchg
es
xor
and
xchg
jne
mov
test
xor
xchg
into
int
push
jg
adc
add
push
inc
addr16
lods
cmpsb
push
das
adc
inc
sbb
cmp
sbb
cmp
add
cmp
in
sbb
mov
dec
xor
mov
sub
pop
sub
mov
jns
inc
jne
dec
jmp
cmp
outsl
inc
mov
jns
fucomip
aam
push
test
or
sub
ficoml
pusha
icebp
jp
inc
repz
mov
cmp
push
push
push
push
xchg
and
mov
pop
and
mov
loope
cmp
push
push
pusha
inc
mov
mov
or
dec
ret
or
test
lods
mov
xchg
inc
cli
adc
mov
mov
dec
cld
pop
ljmp
cmp
bound
jno
pop
or
sbb
jmp
aaa
pop
ljmp
cmc
jmp
in
pop
test
mov
das
js
incb
sub
xchg
push
ret
mov
aas
sbb
shll
sub
dec
iret
xor
pop
push
in
mov
xor
inc
sub
push
insl
and
ficoml
sub
imul
push
jge
aad
into
jg
in
setae
cltd
xor
dec
mov
sub
mov
bound
out
adc
gs
sti
sbb
pop
push
hlt
mov
xchg
pop
xchg
mov
or
ss
cmp
lcall
cwtl
addl
jle
jno
mov
jno
push
aas
dec
ss
adc
test
dec
or
jl
lret
jl
insl
fwait
ret
leave
mov
pop
mov
loopne
fnsave
sub
add
int3
stos
jnp
scas
dec
sub
insb
fmul
mov
push
repnz
inc
ret
and
xchg
mov
fidivl
dec
arpl
in
mov
xchg
pop
push
xor
xchg
inc
jbe
push
negb
stos
jae
or
daa
insb
mov
or
xor
push
mov
jbe
das
xchg
out
sub
imul
loopne
es
fildll
test
les
adc
xorb
sub
pop
inc
rcrl
sar
nop
ret
lods
cmp
sbb
pop
jo
in
lods
mov
add
dec
sbb
mov
cli
cmp
mov
loop
out
push
cmp
in
inc
pop
jg
scas
xor
jo
xor
sbb
repnz
daa
mov
int
cli
ljmp
sub
into
jp
mov
in
ret
xor
es
sti
aas
pop
dec
sbb
fcomps
pop
orl
shrb
xor
ret
ret
es
rcrb
fbstp
scas
cmpsl
cs
rcl
inc
arpl
in
das
cld
sub
lret
adc
and
dec
pop
inc
and
cld
jns
pop
jle
mov
fbstp
aam
shll
sub
push
xchg
mov
icebp
fldcw
jo
aas
cmp
mov
jo
pop
out
xor
pusha
or
and
sub
cs
xor
cmp
and
out
xchg
lods
jne
loope
xchg
aad
mov
fcmovne
sub
or
push
jmp
cmpsl
test
scas
mov
sub
popa
jecxz
scas
mov
push
pop
or
pop
mov
xchg
addr16
repz
cmp
xchg
data16
sti
popa
adc
out
dec
sub
push
xor
lock
mov
jmp
testl
call
inc
mov
mov
sbb
adc
iret
xchg
jo
sbb
mov
fstl
iret
and
lret
ret
sbbb
sub
imul
or
in
mov
and
xor
and
dec
cmp
divb
jg
rclb
xor
cmp
push
jae
test
and
sub
in
xchg
in
aaa
adc
dec
cwtl
mov
cmc
and
imul
int3
scas
cmp
inc
cmpsl
fdivrl
pop
or
xor
add
leave
xchg
inc
inc
jmp
jge
xbegin
pop
xor
or
int3
in
pop
and
inc
push
jge
inc
xlat
dec
fcoml
and
pusha
push
mov
xchg
sahf
or
adc
xchg
in
dec
adc
cmp
pop
xor
add
cmp
movsb
or
rol
jbe
sti
push
xor
data16
mov
loopne
incl
daa
push
adc
push
jl
dec
push
push
cs
cld
xorb
rcl
daa
dec
mov
insb
sbb
sahf
mov
jle
sbb
xchg
jge
out
test
and
sar
jbe
rcrl
incl
std
mov
dec
and
loop
pop
lods
mov
dec
popf
popa
btl
mov
cmp
call
popa
cmp
mov
bound
inc
fimuls
mov
lcall
and
xchg
fildll
pop
idivl
in
adc
pop
fdivr
test
adc
push
xchg
ja
xchg
sub
add
data16
sub
add
cmpsb
popf
fwait
mov
pop
xchg
mov
mov
add
leave
cmpsl
paddsw
cmp
imul
sbb
mov
mov
and
jnp
clc
ds
xchg
notl
lcall
pop
insb
cli
pop
mov
sar
adc
dec
out
outsb
mov
cmpsl
mov
lea
mov
pop
idivl
or
pop
sahf
mov
and
movsb
das
mov
fs
jge
add
push
inc
insb
fcmovbe
filds
call
cmp
inc
cmp
ror
imul
test
out
pop
xchg
dec
cmp
mov
cwtl
pop
dec
or
xchg
imul
in
cld
insb
push
les
int
loop
data16
cmp
xchg
mov
sbb
pop
rcrl
cmp
imul
and
push
cwtl
je
inc
jg
mov
inc
outsb
push
xchg
inc
xchg
sbb
mov
add
mov
push
or
ror
cli
inc
adc
jns
cmpsb
outsl
stc
out
xor
and
ljmp
push
out
or
enter
and
int3
aaa
out
mov
scas
out
dec
ja
enter
imul
lds
in
sbbb
rolb
cmp
cs
adc
xchg
and
lods
lock
or
cmp
nop
inc
shrb
cmp
ljmp
decl
cmp
fwait
rcll
sub
and
mov
mov
cmp
mov
ljmp
and
cmp
sbbb
outsl
popf
ret
subb
movsb
jns
dec
paddq
jo
test
imul
sbb
js
mov
repnz
mov
mov
into
cltd
arpl
shr
sbb
outsl
mov
add
into
add
push
adc
xchg
mov
sub
jmp
fadd
sti
pop
push
or
leave
mov
stc
cmpsl
jmp
outsb
iret
aaa
mov
mov
or
add
jmp
fmulp
push
xchg
jne
add
xchg
adc
pop
pop
cmp
mov
jmp
jp
into
sub
dec
mov
into
js
mov
add
sub
imul
loop
mov
push
jge
dec
popa
or
mov
mov
pop
lret
push
xchg
daa
pop
sti
xchg
sahf
loop
dec
push
or
aam
je
push
pushl
and
cmpsl
dec
jecxz
pop
adc
cmpl
cmp
jnp
test
jbe
filds
repnz
int3
xchg
mov
fdivrl
aad
pop
imulb
or
mov
xor
mov
jb
push
adc
jl
int3
xor
or
outsb
lret
cmp
adcl
adc
rolb
xor
push
jae
adcl
nop
repnz
inc
push
jl
rcrb
mov
sub
out
adc
sbb
cmp
test
xchg
sub
xor
rcrb
imul
dec
ficoml
dec
xor
or
mov
jnp
push
cmp
mov
mov
push
sbb
or
xor
push
cmp
dec
dec
xchg
dec
mov
mov
mov
lock
sbb
movl
ljmp
sbb
fisubl
sub
xchg
icebp
xchg
cld
push
ret
xor
in
xchg
andl
testl
sti
sbb
fnsave
daa
xor
movb
scas
mov
cltd
lock
mov
testl
xchg
orb
arpl
or
pop
cmp
mov
adc
push
lcall
pop
cmp
pusha
jg
fcmovb
loop
xchg
push
std
xchg
out
or
mov
mov
outsb
imul
xlat
add
stos
add
cmp
scas
mov
clc
hlt
test
lret
push
push
jb
js
lcall
push
dec
mov
cli
cmpsb
adc
insl
enter
lcall
mov
mov
mov
das
loopne
loope
ret
es
rorb
mov
mov
test
or
push
jbe
addr16
push
int3
ja
jbe
into
ret
popl
xor
sub
xchg
std
insb
and
cmp
gs
push
xlat
ret
mov
fdivr
mov
xchg
adc
xor
sub
pop
es
dec
fdivl
xchg
rorb
mov
dec
cld
and
addr16
decl
dec
and
pop
and
pop
cmp
rcrb
pop
in
xchg
ja
pusha
cmp
pusha
popa
in
xchg
pop
sbb
pop
pop
std
xor
arpl
outsb
orb
jae
dec
mov
dec
mov
pop
pusha
sbb
xor
fwait
jbe
adcb
mov
xlat
clc
cmpsb
mov
cld
std
jnp
push
fs
pop
lds
jae
mov
or
into
insb
pop
into
cmp
jae
enter
mov
addr16
dec
mov
xor
fs
sub
pop
mov
js
in
in
clc
pushf
fstps
cmp
xor
xchg
xor
and
dec
xchg
xchg
or
fs
imul
dec
sbb
mov
mov
dec
xchg
push
dec
pop
add
pop
jb
cmp
out
and
and
fidivl
inc
xchg
sbb
cmp
adc
test
sbb
scas
rol
scas
cmp
call
flds
arpl
jmp
insl
pop
mov
xor
cli
fcoml
or
aad
fsubrs
pop
cld
pop
in
xchg
fisubrl
cmpsl
xlat
dec
cmpb
out
int3
pop
int3
jnp
fldenv
js
pop
in
jb
adc
movsb
lea
push
xchg
arpl
xchg
ficoml
addr16
or
and
pop
imul
mov
clc
mov
into
mov
and
sbb
inc
mov
lock
pop
in
in
sbb
inc
sbb
xor
mov
sti
jp
jg
push
lahf
cwtl
es
out
fs
outsl
xchg
push
mov
lahf
movsb
and
xchg
xor
js
push
xor
into
xor
push
jno
or
mov
or
mov
cli
fdivrp
add
enter
test
sub
mov
out
jno
mov
out
adc
inc
mov
mov
cmp
sub
lea
cmpsl
sub
mov
lret
jge
adc
xchg
std
and
xchg
loop
dec
test
sub
xchg
sub
jl
das
pop
cmp
jno
jg
push
mov
roll
into
bswap
fiaddl
scas
mov
sti
enter
fsts
test
cltd
pop
adc
popw
iret
inc
jecxz
sarb
jb
inc
inc
jp
dec
pop
push
adc
jbe
in
shr
into
nop
addr16
dec
jge
or
xchg
xor
xchg
es
daa
jp
push
or
sub
dec
jmp
push
sbb
dec
mov
mov
mov
lahf
push
ret
sarb
mov
xchg
dec
fisttpl
mov
xchg
pcmpeqb
or
xor
sub
movsl
push
out
xchg
cmpsb
pushl
or
xchg
or
in
stc
pop
inc
negb
mov
pop
add
gs
or
fldcw
icebp
add
orb
imul
pop
push
or
sbb
adc
cmp
lcall
xor
mov
or
cmp
xor
add
mov
jmp
cmp
lock
jbe
sbb
pushl
notb
xchg
dec
xchg
andb
adc
dec
fsincos
data16
hlt
and
inc
ljmp
xorb
test
and
pushf
add
mov
popa
and
in
ret
out
or
mov
gs
mov
mov
xchg
adcl
enter
lods
es
movsl
inc
or
incl
push
stc
in
insb
adc
aam
inc
mov
out
pop
mov
sti
fcoml
adc
xor
pusha
dec
hlt
sbb
ss
mov
sbb
and
fdivr
cli
in
sahf
xor
sbb
mov
pop
pushf
leave
aad
cmp
xchg
adc
pusha
loop
iret
cmc
js
notl
jb
test
sbb
jae
sub
pop
gs
xor
sub
jmp
sub
fisubrl
ja
push
lcall
cwtl
sbb
int3
test
pop
jmp
leave
lcall
xor
adcb
sti
sbb
out
pop
subb
mov
jmp
lds
xchg
pop
push
or
movsb
ret
jle
or
stc
and
ret
jne
ds
ds
pop
mov
ret
gs
sub
xor
push
sti
or
int
dec
mov
icebp
inc
mov
mov
andl
sub
rolb
out
adc
xchg
adc
push
call
adc
jge
adc
mov
lcall
loopne
pushf
pusha
aam
rorb
and
or
sbb
sub
push
or
ss
xor
mov
dec
sbb
cmp
outsb
jp
push
jp
lcall
xchg
xchg
mov
cmp
jl
mov
lds
imul
mov
push
lods
insl
pop
dec
lds
enter
std
xor
sbbb
and
xlat
sbb
cmpsb
cmp
push
sbbb
stos
fldt
pop
cs
das
jnp
mov
push
imul
in
push
inc
iret
sub
cmp
fmuls
pop
mov
das
jp
push
arpl
lcall
xchg
xchg
hlt
leave
mov
adc
pop
sub
push
inc
std
and
lds
mov
das
mov
leave
inc
xchg
xor
fadd
lock
lcall
push
mov
test
cmp
push
push
scas
push
sub
int3
pop
cmc
sahf
mov
dec
jo
repz
mov
sbb
dec
not
dec
mov
in
xchg
mov
xor
mov
lods
pop
adc
or
mov
mov
out
jp,pn
les
cmp
sbb
in
mov
fstps
clc
negl
push
push
and
mov
and
mov
popa
cld
xor
andb
fs
push
shlb
xor
iret
mov
adc
sar
jns
adc
je
pusha
add
mov
sub
shlb
xchg
xchg
jecxz
cmc
nop
movb
cmp
jge
cmp
adc
in
cmp
dec
xchg
sbb
sbb
lock
mov
sbb
popa
enter
mov
out
sub
adc
sbb
faddl
inc
mov
sbb
dec
enter
aas
imul
int
dec
xor
pop
lock
movsl
mov
cld
sub
lret
sbb
stc
mov
mov
cli
push
mov
jb
pop
adc
daa
bound
dec
sbb
and
or
mov
mov
addl
cmc
jae
dec
imul
dec
cld
jmp
stos
insb
sbb
es
cmp
xchg
mov
into
sarb
xchg
fwait
jno
aaa
jge,pt
push
mov
mov
sub
mov
jge
sbb
lcall
xchg
pop
rcrb
dec
out
cld
mov
ja
lds
shll
cli
fists
dec
inc
sub
cmp
adc
sbb
movsl
mov
pop
dec
lods
into
aas
into
and
push
je
cmpsb
imul
push
repz
loopne
sbb
or
test
pop
sbbl
mov
push
in
jg
mov
sub
push
mov
mov
and
popf
xor
jo
mov
jl
stos
lcall
push
cltd
xor
add
xchg
sub
ja
sarb
mov
divb
push
loop
xchg
push
sbb
jae
jne
sti
arpl
pushf
and
push
je
stos
int
scas
mov
cld
sbb
arpl
pop
int3
add
sbb
mov
push
sub
ljmp
mov
aaa
stos
mov
push
mov
pop
repz
or
add
inc
ret
sbb
push
js
lret
add
jbe
or
pop
movsl
mov
pushf
sahf
sbb
repnz
cld
out
pusha
sbb
dec
mov
outsb
iret
jle
insb
pop
ret
xor
arpl
test
adc
aas
add
jb
imul
sbb
jb
cmp
sbb
xorb
aam
movntps
fildl
sbb
inc
sbb
sub
sbb
loopne
cmpsb
adc
cli
add
and
int
movl
mov
aad
or
rcll
inc
repz
sti
nop
cmp
push
push
jo
shlb
pop
psubq
mov
loop
gs
sub
and
fildl
arpl
push
nop
mov
mov
cbtw
out
orb
adc
jmp
stos
adc
dec
push
mov
dec
adc
cli
add
dec
repz
mov
insl
jg
pop
fldcw
aad
pop
mov
cmp
cmc
cld
and
xor
rcll
push
gs
or
mov
cmp
bound
push
xchg
cmp
add
jg
ds
enter
stos
iret
out
pop
dec
xor
mov
imul
jbe
cmp
jae
cmp
xchg
mov
jge
in
dec
push
sub
dec
add
es
test
xor
incb
rcrl
loop
jmp
cmp
test
sub
inc
sub
cwtl
pop
std
xor
mov
adc
jle
push
insl
loop
shlb
push
push
orb
loop
repz
test
arpl
pop
sbb
xchg
sub
mov
push
jp
xor
in
fstpt
ret
push
lods
inc
add
xor
or
nop
pop
fnstsw
bound
xor
mov
push
jmp
sbb
xorb
sub
sti
pop
or
or
jmp
stos
sub
mov
ljmp
xchg
jae
sub
mov
xor
nop
in
xor
adc
xor
repz
loop
call
xchg
psubusb
push
aad
mov
pop
cmp
clc
mov
sbb
cmp
ret
punpcklwd
add
pop
aad
scas
aaa
mov
in
cli
insb
xchg
sub
loope
movsl
or
sub
or
dec
cwtl
adc
dec
push
negb
push
cs
cmpsl
mov
push
mov
jb
cld
xor
lret
adc
arpl
inc
mov
jnp
jne
out
sarl
jae
push
adc
dec
in
roll
mov
imul
adc
scas
inc
add
xlat
cmp
movb
sahf
aaa
mov
sbb
mov
mov
inc
pop
pop
lret
jp
pop
out
call
jge
das
adc
cmp
lret
das
lcall
es
lds
xchg
loop
hlt
adc
mov
into
xor
add
jecxz
pop
or
mov
mov
xor
sysret
xchg
sub
ljmp
int
scas
stos
ret
cmpb
adc
fs
mov
xchg
clc
pop
and
xchg
bound
cmp
sub
loop
insb
bound
jmp
mov
lods
cmpsl
push
into
cmp
fs
pop
lcall
out
sti
push
movsl
mov
mov
ljmp
inc
xchg
xor
xor
out
outsl
xchg
mov
xchg
jno
repnz
call
adc
xchg
mov
call
pop
mov
imul
xchg
fimull
pop
je
jo
mov
enter
les
cmc
pop
inc
idiv
daa
cmp
xchg
xor
push
xor
mov
xchg
mov
xor
lea
cmp
rorl
mov
ret
mov
or
dec
cmpsb
dec
pop
mov
mov
or
cmc
mov
xchg
cmp
push
cli
inc
push
inc
adc
mov
xchg
clc
movl
in
cs
mov
sbb
popf
fidivrl
push
or
cwtl
in
xor
dec
and
fnstcw
arpl
movsl
ds
xor
loope
inc
jmp
add
insb
fbld
fcoms
xchg
in
ret
cmpsl
pop
fidivl
fstpt
cli
in
addr16
fdivr
cld
pop
dec
repnz
shr
xor
cmp
addr16
mov
push
cmp
mov
jne
cmp
mov
and
popf
fwait
jl
adc
cli
push
movsb
ja
cmp
pop
jl
std
xor
gs
or
adcb
enter
jle
ret
imul
mov
dec
dec
mov
repnz
xchg
or
fxch
and
pop
pop
mov
adc
or
aas
aam
mov
push
dec
ret
scas
sub
dec
mov
and
jo
xchg
xor
imul
xchg
iret
cmp
pop
jge
sbb
push
mov
hlt
fldcw
test
jo
int3
dec
jl
rorb
ljmp
jb
sti
cmp
xchg
int3
ljmp
pop
ljmp
xchg
ret
mov
push
test
sub
cld
daa
pop
lods
jmp
test
add
jb
aad
fisubrs
into
daa
sbb
dec
outsb
mov
xor
xchg
stc
push
jp
test
inc
mov
out
cmp
test
pop
jmp
dec
iret
out
push
add
xchg
mov
jb
gs
out
in
pop
push
sar
xor
nop
popa
lods
in
imul
arpl
xchg
xlat
xor
sbb
inc
jo
outsb
mov
lcall
repnz
and
dec
xlat
nop
movl
testb
mov
push
mov
lock
sub
sarb
mov
jo
pop
enter
xor
or
fistps
sbb
cmp
mov
repz
shrb
lcall
aam
jns
pop
popa
sbb
xchg
repnz
xchg
xchg
pop
xchg
bswap
jl
fisttpl
int3
insl
push
dec
xchg
dec
jl
or
sbb
and
jo
incb
insb
int3
or
subb
je,pt
ljmp
mov
loop
in
clc
call
cmp
push
cmp
cmpsb
cmpl
jge
test
cmp
out
mov
or
push
xchg
mov
ja
fstp
lock
enter
and
jb
xchg
sbb
cld
xor
and
jge
cli
into
stos
xchg
ret
dec
pop
les
push
push
fdivrl
jb
add
lret
inc
mov
sub
adc
mov
ret
pop
cmpsb
aam
shrb
xor
or
or
or
cmp
jns
popa
push
ffree
lret
adc
cld
repnz
mov
aaa
shld
inc
sti
push
xor
sbb
mov
jle
dec
jl
or
xchg
aam
lret
adc
mov
inc
push
sti
ficoml
ds
or
fisttpll
push
jo
test
ja
shlb
mov
xorl
push
mov
je
clc
rcll
cs
sbb
pop
push
adc
xor
xor
rcrl
aaa
adc
mov
clc
xor
repz
push
xor
xor
xor
xchg
jo
jae
jl
mov
xchg
and
xor
gs
adc
mov
ds
push
cmp
imul
mov
jbe
cld
out
dec
dec
fsubs
sti
out
insl
test
hlt
cmp
icebp
mov
pop
sbb
pop
mov
outsl
mov
push
xor
scas
imul
je
popa
and
lret
enter
push
cltd
stc
pop
add
movaps
mov
push
push
mov
mul
adc
mov
xor
aad
les
push
arpl
subb
shlb
clc
mov
test
mov
lcall
pop
in
inc
fidivrl
inc
push
loop
sbbb
mov
push
addb
mov
test
mov
loop
cmp
pop
inc
xor
adc
mov
pop
pop
mov
xchg
xor
and
sub
lea
movsl
xor
sub
or
sub
es
jnp
fs
fcmovu
imul
and
xchg
ljmp
in
cmp
addl
dec
enter
sbb
fwait
jge
and
test
mov
ss
cmp
jno
popa
push
push
stc
cli
outsl
std
push
sbb
xor
pop
adc
daa
int3
push
lret
dec
jo
sub
arpl
into
cmp
sbb
pop
ficoms
pop
lea
mov
sbb
mov
pop
sbb
push
adc
xor
jbe
cmpl
mov
daa
add
adc
imul
rcrl
jmp
fs
mov
mov
pushf
lcall
into
adc
pop
lcall
xor
adc
mov
jecxz
fiadds
dec
out
sbb
mov
xor
mov
mov
shrb
and
jno
xor
decb
jg
mov
or
aad
inc
jle
lods
mov
cmp
xor
sub
sarb
mov
add
pop
out
inc
shrl
and
cs
sub
lds
dec
sbb
mov
roll
jp
clc
and
in
rclb
cmp
cmp
pop
sbbb
sub
mov
pop
enter
cmp
leave
scas
and
jmp
xor
pop
adc
xchg
jno
cmp
mov
sbb
cld
cmp
std
cmc
pop
aam
out
push
push
or
push
xor
add
add
mov
adc
lahf
mov
repnz
or
pop
in
scas
data16
pop
in
jl
mov
leave
xor
and
and
sbb
jl
and
int3
rorb
cmpsb
xlat
mov
dec
push
adc
add
stos
rcrb
test
sbb
call
loop
comiss
push
mov
sbb
jbe
xor
pop
or
xor
cmc
std
mov
enter
movnti
icebp
mov
loopne
into
movaps
lret
ss
adc
pcmpeqd
cmp
mov
xor
inc
mov
daa
jl
mov
sub
xor
dec
mov
lods
inc
adc
or
icebp
xchg
inc
pop
add
ljmp
rcl
mov
aas
ds
repnz
aaa
cmp
std
enter
mov
cmp
xchg
jmp
cld
call
out
ret
sbb
inc
add
std
aas
xchg
lea
pop
sbb
into
push
insl
push
push
pop
aas
shr
mov
ja
sbb
setge
lret
jecxz
out
or
mov
inc
jmp
jp
mov
ret
mov
mov
adc
dec
cmp
jne
scas
test
xchg
push
jp
pushf
sbb
bnd
pop
inc
int
lcall
dec
push
in
dec
push
fisttps
imulb
cmpsl
or
es
and
inc
shrl
adc
ds
movsl
fiaddl
std
lcall
mov
rcll
icebp
test
dec
arpl
outsb
mov
out
lea
insb
sbb
adc
cltd
sbb
pop
cmp
mov
or
mov
daa
or
incl
pcmpgtw
adc
int
or
ret
xor
fmuls
mov
shll
test
sub
dec
jae
mov
in
das
xchg
dec
pop
mov
xor
jb
incl
push
xchg
idivl
out
pop
xor
jb
push
sub
pop
aad
mov
cld
push
in
push
pushl
repnz
fbld
cmp
mov
ds
mov
cmp
std
stos
sbb
jle
popf
add
pop
jp
pop
cmp
sub
outsb
int
push
mov
mov
push
testb
cld
mov
mov
mov
jb
mov
or
lods
xor
scas
xor
popf
lea
movntq
scas
mov
sbb
mov
and
fdivs
ds
loop
pop
inc
inc
idiv
adc
orl
mov
mov
rcll
mov
dec
pop
fsubr
cltd
into
jnp
movsb
jns
test
xchg
dec
incb
mov
into
loop
addr16
mov
pop
loop
psubusb
dec
dec
dec
in
repnz
rorb
icebp
or
fists
mov
icebp
rclb
out
arpl
test
or
std
push
wbinvd
daa
mov
push
xchg
or
mov
fdivrs
call
inc
jae
fwait
btl
xchg
cld
dec
aam
and
push
int
popf
sbb
sbb
mov
outsb
jecxz
mov
enter
stos
outsl
push
adc
push
pxor
cmp
mov
push
add
test
cmpxchg
daa
push
jnp
mov
sbb
js
and
jle
inc
sub
scas
rorl
mov
dec
hlt
bswap
push
jbe
test
inc
cltd
frstor
loop
adc
or
jb
mov
jne
jo
stc
in
add
lds
jns
data16
mov
cltd
sbb
jae
pcmpeqw
cmp
std
jno
mov
fistps
psrld
in
repz
popa
jl
inc
pop
mov
add
mov
sbb
jno
mov
xchg
cmp
dec
xorps
pop
and
or
push
lock
pop
cmpb
push
out
or
push
jge
cmp
movsl
xchg
lss
aam
packuswb
mov
lds
stos
into
push
inc
pushf
stos
jge,pn
ud0
sub
jb
add
pop
psrad
jmp
cvtdq2ps
push
fcmovu
mov
adc
mov
adc
push
imull
lret
pcmpgtw
add
sbb
cmp
mov
ficompl
adc
pop
dec
cmp
hlt
push
fld
push
in
jle
and
dec
out
adc
pop
pop
push
pop
inc
aas
cmp
cli
fwait
std
xchg
fwait
sbb
xlat
jae
push
ss
lods
incl
sbb
mov
inc
cmovo
and
hlt
lea
mov
pop
jbe
mov
icebp
lcall
in
getsec
aad
mov
and
fcom
dec
ljmp
adc
fcoml
xor
dec
int
sub
dec
mov
xlat
or
pop
mov
mov
orb
cmp
mov
in
pop
or
sub
push
cmp
cmp
movsl
add
aam
aaa
out
mov
xor
lea
int
and
sahf
mov
jns
pop
in
insb
dec
sbb
mov
push
or
movsl
adc
xchg
sbb
stos
addb
pop
push
insb
or
stmxcsr
jno
mov
inc
or
imul
or
add
xor
pop
cs
sub
popa
insl
jl
xchg
inc
cmc
or
mov
pop
pop
push
jg
jg
mov
test
setle
aam
arpl
add
xchg
out
jg
aad
dec
ret
jns
adcl
mov
dec
aas
and
xchg
pminsw
leave
push
cmp
jns
lret
lods
pop
scas
pop
xor
idivb
sahf
mov
movswl
adcl
out
repnz
xchg
xchg
sub
loope
mov
fiaddl
daa
iret
out
pop
out
mov
pop
seta
xor
bound
test
jnp
xor
scas
ljmp
divb
out
bnd
xor
push
int
adc
sub
sti
movsl
or
out
or
or
push
sub
andnps
adc
rcl
pushf
fmull
push
jp
pop
iret
cmp
adc
add
jb
lret
xchg
mov
or
jle
dec
call
paddb
pop
mov
xchg
mov
gs
cli
je
test
jge
icebp
jmp
pop
pop
pop
in
add
or
std
daa
setl
fnstenv
adc
mov
push
mov
call
cld
xchg
icebp
shr
cmp
fsubl
and
psubq
fnsave
popa
sbb
xor
cmp
shrl
mov
dec
cmovs
sub
mov
outsl
mov
adc
push
and
mov
aam
cld
lret
loopne
xchg
invd
das
pop
orb
call
push
mov
bts
outsb
jl
out
xchg
insb
aam
out
lods
repz
xor
push
or
dec
int
mov
add
outsb
out
pushf
dec
dec
scas
call
mov
inc
adc
pavgb
js
movsl
pushf
in
push
notb
call
fprem1
mov
add
stos
mov
xor
xchg
jle
inc
cmovs
mov
loop,pt
cmp
sti
imul
jmp
jb
movq
push
clc
xor
mov
out
push
iret
or
out
bnd
jne
ss
push
cld
sbb
rol
psubusw
and
sbb
sub
pop
sahf
dec
cmpsl
into
jge
lcall
repnz
in
mov
scas
jl
inc
mov
sbb
cmpl
and
ljmp
sbb
lock
rolb
addr16
fimull
stc
mov
add
cli
mov
lock
dec
mov
mov
mov
inc
mov
scas
daa
or
or
adc
push
dec
cmova
sub
mov
ja
lock
dec
clc
mov
adc
push
mov
call
bndldx
adc
xchg
cmp
notl
or
sub
out
and
fwait
add
inc
imull
mov
sbb
fsts
call
cmc
imul
inc
add
int
push
push
pop
xchg
lahf
push
cli
sti
std
cmpsl
cmp
movsl
xlat
insb
push
lods
sbb
fcoms
cld
aaa
jns
mov
mov
cld
inc
mov
out
cmovg
mov
sub
pop
cmpsl
insl
xchg
pop
inc
mov
sbb
aaa
fimull
cld
fbld
enter
and
sbb
rcr
pop
pop
adcl
out
push
cwtl
aad
ja
xchg
mov
shlb
jnp
dec
movsl
xor
rcll
lret
jl
adc
test
or
mov
xchg
xchg
jne
add
bound
les
mov
lock
sub
out
pop
jb
cmc
adc
and
adc
jle
or
popa
bound
je
add
sbb
mov
inc
movsbl
test
dec
es
adc
movsl
xor
inc
lcall
out
lods
xchg
dec
pop
xchg
jmp
push
fisubl
xchg
jge
or
pushf
ljmp
cmpsl
add
sub
jbe
rclb
pop
iret
xchg
out
movl
fcomi
test
xchg
xchg
cmp
xor
sub
in
mov
fsubp
cld
sub
out
mov
mov
testb
orps
cmp
data16
xchg
pop
fadd
paddsb
or
sbb
roll
pminub
dec
fbld
lds
xor
cmp
push
ret
out
xor
pop
ret
paddb
in
aam
cmpsl
pmaxsw
stos
repnz
ljmp
int
lea
mov
mov
or
lock
adc
mov
movups
cs
mov
call
and
or
adc
scas
adc
xchg
orb
xor
mov
inc
lcall
cs
dec
std
xor
xchg
push
hlt
jle
ret
add
cmp
mov
call
xlat
adc
popf
or
aad
pop
cmovne
lods
xchg
int
dec
mov
xchg
push
sub
inc
mov
mov
and
sub
lret
xor
xlat
jge
xchg
jg
arpl
pushf
aaa
iret
xchg
push
clc
decl
cmp
jnp
mov
cmp
loope
xor
inc
lret
out
mov
mov
sbb
dec
testb
push
out
ja
dec
adc
push
xchg
mov
mov
jmp
xchg
jmp
or
mov
fcomip
xor
dec
sbb
stos
mov
adc
pop
rcl
loope
fdivl
daa
adc
out
adc
rorb
jge
loopne
sbb
pop
ret
paddusb
fstl
scas
out
jmp
jecxz
or
repnz
orb
cs
out
add
jb
cli
add
das
sbbl
call
pop
jg
add
cld
out
push
loop
fnstsw
and
out
aad
dec
cmpsl
push
xor
outsb
pop
sti
mov
mov
repnz
add
or
jmp
shl
imul
jmp
in
int3
cli
out
loopne
outsb
mov
and
sbb
mov
mov
cs
cmp
jmp
in
lret
fistps
pop
jns
jne
arpl
fdivrp
xorl
and
repz
or
sbb
fstpt
jecxz
pop
or
pushf
add
in
mov
repnz
loop
loope
fdivl
or
pop
call
inc
in
jmp
rol
or
lret
js
data16
jb
jmp
mov
mov
sbbb
sub
call
jb
push
xor
mov
jecxz
in
adc
xorb
out
pop
jecxz
out
jle
int
ret
loop
icebp
mov
div
adc
pop
loopne
int3
lcall
sbb
loop
mull
fistpl
call
push
bound
push
add
nop
jecxz
inc
subl
ljmp
mov
test
int
call
fldl
cs
ret
test
lock
xor
xorb
imul
pushf
pop
mov
into
ljmp
frstor
out
jnp
jb
ljmp
in
shufps
jecxz
out
cs
cmp
jmp
loopne
fadds
xor
push
push
inc
loop
loope
cmp
nop
xor
scas
imul
mov
out
adc
ljmp
ret
jnp
insl
shl
mov
xchg
push
rcrb
shl
loopne
ffreep
into
sar
add
loope
andl
lahf
roll
fstpt
mov
pop
jno
punpcklbw
push
xchg
cli
call
dec
mov
and
sub
push
xchg
fimuls
mov
fsubr
in
or
rcrb
je
xchg
insb
adc
insl
cmp
and
push
loope
mov
jnp
jg
scas
in
dec
sbb
not
xchg
pop
jo
adc
iret
push
cmp
dec
adc
cmp
jno
mov
fscale
adc
and
push
rcrl
out
jg
mov
push
dec
inc
lods
lret
lret
aas
jge
dec
inc
jle
push
pop
aas
ss
mov
and
mov
mov
mov
lret
push
push
sub
es
jg
pop
outsb
js
icebp
and
ret
into
aam
fs
or
mov
adc
cmp
cmpsl
addb
push
daa
cmp
cmp
dec
hlt
pop
jl
lahf
inc
out
push
imul
mov
pop
pop
pop
pop
leave
ret
mov
jmp
xor
les
iret
jnp
jne
cli
mov
bound
ds
mov
cs
ffree
fcomip
out
cmpsb
pusha
pushf
push
lea
je
stc
cmp
push
jmp
jmp
push
pushf
cmp
add
pushl
lea
je
pusha
pushf
pushf
add
mov
push
lea
jmp
add
add
xlat
sbb
add
add
add
add
add
add
mov
lret
sbb
ror
add
add
add
add
lret
sbb
stos
xor
xchg
scas
bound
sbb
and
pop
pop
outsb
movsl
fmuls
dec
push
aaa
mov
pop
cmpsl
push
clc
outsb
inc
inc
jle
lock
dec
les
lret
sub
test
out
jne
jg
mov
out
ds
sbb
test
clc
in
aam
xor
sbb
cmp
je
stos
sbb
loop
test
faddp
test
cmc
stos
lock
sbb
add
or
call
sbb
push
mov
test
mov
movsl
dec
ret
xchg
in
add
out
fwait
sbb
add
pusha
or
rorl
fisubrl
ss
clc
adc
or
mov
loope
xchg
jecxz
jmp
dec
adc
cmpsb
cmp
mov
jmp
or
fwait
add
popa
pop
aaa
and
pop
mov
adc
ss
push
pop
and
and
or
je,pn
mov
add
je
or
outsl
cmc
shr
push
and
pop
lods
movsb
leave
mov
add
in
sbb
cmp
jmp
adc
pop
lret
call
test
mov
or
out
jge
push
inc
dec
push
mov
mov
push
xor
dec
push
or
add
push
jo
mov
lret
or
sahf
add
faddp
icebp
mov
mov
in
push
and
pop
jo
mov
dec
testl
cs
mov
jns
sbb
pop
mov
sbb
mov
push
pop
ljmp
cmpsl
add
push
mov
aam
mov
mov
mov
and
call
sbb
jo
sbb
filds
push
clc
mov
lods
rcrl
and
into
push
pop
sbb
push
adc
cmp
mov
cli
or
int
mov
jno
shll
pop
or
cmp
xchg
imul
mov
hlt
inc
mov
add
sarl
in
xchg
pop
shlb
pushf
aas
icebp
xlat
arpl
xor
loope
in
push
lret
mov
lock
es
adc
mov
xchg
mov
inc
or
cmp
adc
das
rolb
push
push
lods
aam
xor
sti
sub
cmp
pusha
in
sbb
in
mov
mov
adc
mov
and
lahf
adc
inc
xlat
mov
jb
imulb
decb
cld
dec
push
inc
fcoml
dec
out
adc
mov
push
vcvtps2dq
cld
mov
pop
adcl
fwait
sub
lret
test
lret
insl
inc
enter
and
dec
lea
sub
push
popf
hlt
fisubl
std
push
data16
cmpsl
push
xchg
mov
loop
lret
clc
jg
jae
xor
or
imul
pop
xor
shll
mov
pop
mov
mov
sahf
pop
add
sbb
or
xchg
lods
das
arpl
lret
or
out
rolb
mov
dec
lcall
call
xor
dec
and
cmp
lret
aad
pop
pop
popf
leave
sbb
cmp
jle
xchg
xchg
iret
pusha
popa
dec
jae
push
dec
aaa
push
inc
inc
and
pop
sbb
mov
mov
out
jge
icebp
clc
lock
lds
out
push
pop
xor
add
inc
fsubrs
sub
inc
jge
cmp
jnp
cmp
int
mov
jb
iretw
pop
or
scas
cltd
mov
into
or
bound
sbb
fbstp
popf
dec
mov
scas
mov
jb
sbb
sub
lea
mov
adc
in
outsl
ret
jne
xchg
aas
mov
iret
adc
cmp
mov
cmp
inc
and
add
outsl
and
mov
lock
add
repnz
repnz
adc
repnz
addr16
jmp
inc
jno
pop
mov
xchg
es
mov
mov
adc
mov
lods
push
fwait
outsl
outsb
sbb
xchg
cltd
pop
lods
aad
dec
shlb
mov
xor
mov
cli
mov
shll
dec
mov
into
push
sti
xlat
mov
push
pop
ret
sub
xchg
jo
sbb
scas
comiss
adc
and
sbb
imul
and
cli
sub
out
inc
mov
mov
adc
lock
and
inc
sti
bound
jno
dec
in
mov
inc
lods
fisubl
or
jg
jg
xchg
scas
std
loope
xchg
icebp
rolb
dec
jmp
into
sbb
mov
jbe
aas
in
stos
adc
les
xchg
cmp
cmc
cmp
or
stos
sbb
repz
inc
cmp
add
inc
mov
addl
addr16
mov
xor
mov
es
inc
mov
xchg
cmp
dec
call
fistl
mov
hlt
adc
in
cli
in
out
loop
dec
addr16
sub
roll
push
pop
insb
mov
jo
sbb
push
xchg
cli
call
mov
bound
nop
xchg
sbb
popf
sub
cmpsb
scas
popf
xchg
std
in
aam
lds
xor
movsb
xchg
push
loop
inc
mov
sub
jns
pop
cmc
fimuls
lods
mov
mov
fdivs
repz
inc
push
cmp
icebp
rol
xor
mov
pop
push
icebp
ds
fildl
push
scas
rolb
call
cmpsl
pop
aad
mov
ja
test
mov
dec
jno
repnz
aad
xchg
push
xchg
mov
xlat
pop
repz
cmp
xor
pop
enter
mov
sub
sbb
adc
enter
mov
scas
loope
mov
ja
fcoms
xchg
mov
xor
jmp
roll
lods
adc
push
sbb
lahf
xor
mov
sub
es
xchg
addb
mov
cmp
xchg
mov
add
mov
aam
ja
or
enter
insl
arpl
outsl
cmpsl
mov
mov
packuswb
lret
popa
inc
cld
sahf
mov
repnz
dec
push
movsb
cmp
jmp
or
sub
icebp
stos
stos
mov
cmpsl
mov
adc
icebp
scas
fsubrs
adc
sub
cs
cwtl
inc
push
and
fmulp
cmp
mov
lea
jl
push
sbb
add
andb
pop
xchg
fstpt
xchg
pop
hlt
mov
sub
push
push
sti
adc
lret
insl
dec
push
lcall
dec
hlt
arpl
push
push
add
fs
push
pushf
nop
ret
sti
add
in
xor
xchg
mov
push
dec
fsubrl
push
jmp
sub
clc
dec
mov
mov
xor
push
lret
adcb
stc
push
mov
lret
fnsave
aaa
lock
cmc
je
outsl
inc
jbe
not
xor
ss
dec
sub
dec
sbbl
out
iret
stc
movsl
sbb
pop
mov
push
test
cs
cmc
jl
lcall
lods
sahf
outsb
xchg
mov
pop
sbb
and
jae
movsb
fistpl
stc
cmp
mov
cmc
inc
repz
mov
cli
push
mov
inc
xor
imul
mov
xchg
mov
dec
daa
ja
imul
jge
into
ljmp
push
mov
inc
pop
clc
nop
subb
dec
sbb
jp
pop
mov
adc
scas
xchg
bnd
fdivs
cmpsb
push
fidivrs
jp
xchg
xchg
call
test
movsl
in
inc
pop
test
cld
mov
pop
or
xchg
in
je
into
andb
fildl
jne
je
pop
rcll
rol
sbb
push
xor
cmpb
cwtl
in
mov
sbbb
inc
fdivr
push
sbb
testb
cmpsb
les
cmp
add
imul
fbld
xor
lods
push
pop
and
movsb
push
mov
lcall
stos
outsb
scas
push
inc
dec
aad
adc
push
cmp
or
pusha
cmp
mov
hlt
scas
ljmp
aas
cmp
mov
pushf
pop
mov
inc
and
xor
lahf
sbb
cmpsb
fidivrs
imul
cmp
mov
ss
pop
push
jnp
inc
adc
or
popa
pop
fmulp
add
add
loop
sbb
cmpsl
cmpsl
mov
dec
test
pop
dec
aas
mov
shr
pop
cmp
jne
jl
pusha
dec
movsl
fs
data16
adc
dec
test
divl
inc
leave
sar
rcr
gs
stos
jo
lcall
inc
sbb
sbb
fnstsw
cwtl
push
inc
mov
mov
outsb
test
arpl
jae
les
pop
or
sahf
xchg
dec
loopne
or
lret
pop
sub
lret
out
testb
dec
fiadds
jl
leave
mov
and
adc
fdivrl
mov
sbb
jmp
inc
sub
cli
inc
icebp
nop
test
imul
ret
xorb
in
dec
lds
push
in
jns
test
adc
popa
adc
popf
lret
push
rcrb
js
sahf
sub
stc
sti
jle
testb
mov
ret
jnp
xchg
inc
insl
mov
mov
and
jns
and
add
addr16
pop
sbb
mov
out
pop
loopne
in
and
and
inc
out
daa
xchg
int3
adc
pushf
mov
push
iret
mov
int
sbb
push
pop
cltd
ds
mov
mov
clc
push
scas
add
jne
jecxz
in
push
in
jl
popa
leave
jp
inc
jp
mov
aad
cmpsb
scas
leave
adc
test
cli
and
inc
in
jmp
das
movsb
std
in
mov
les
movsl
push
fisttpl
and
push
push
jno
inc
cmp
iret
xlat
in
loop
cmp
pop
and
dec
sti
cmp
lds
mov
inc
push
sbb
mov
imull
jbe
pushf
nopl
xor
in
das
pop
mov
sarl
mov
mov
sub
outsb
loope
and
add
pop
jns
jecxz
rcrb
mov
leave
lcall
and
lds
push
aaa
enter
xchg
xor
shrb
aaa
push
ljmp
xchg
frstor
in
xor
sub
test
daa
imul
adc
mov
fcoml
enter
aam
in
add
push
push
lds
orb
lods
sub
add
cltd
cwtl
xchg
jb
mov
pop
fs
mov
mov
adc
jno
out
loopne
xor
mov
inc
lcall
dec
cmpb
arpl
and
pop
sbb
and
loope
sahf
mov
mov
movsl
popf
repnz
jnp
pusha
inc
push
pop
sub
pop
jg
stos
filds
add
aas
pop
lahf
sahf
push
or
cmp
adcb
adc
cmc
adc
cmp
fwait
and
pop
or
mov
sbbl
sub
inc
push
cmpsb
ficoml
rol
inc
pop
add
lret
test
jnp
rol
xchg
das
lods
mov
sarb
ja
subb
ss
std
lea
out
pop
jne
int3
jns
lods
or
and
mov
mov
sbb
mov
xlat
aam
adc
pop
xchg
jns
test
idivb
shl
jmp
mov
pop
push
popa
xor
sbb
mov
push
test
ja
and
jmp
fdivrs
sub
aaa
push
sub
fcmovu
in
add
push
enter
ss
jp
xchg
mov
sbb
xor
xor
repz
xor
sbb
xchg
fisttps
addb
jb
clc
mov
ret
cli
fwait
mov
push
fcom
out
push
je
sub
push
inc
inc
aas
popa
push
dec
cmp
xchg
cs
mov
data16
dec
ret
cmp
adc
fcom
xlat
test
repz
jb
cmpsb
mov
push
adc
mov
mov
mov
scas
fildll
mov
iret
int
imul
stos
xchg
aam
push
inc
cmp
cmp
in
pop
push
cmc
out
test
and
aas
dec
push
mov
bound
mov
fwait
movsb
and
adc
xor
aaa
cld
aam
adc
int3
loop
fisttpll
mov
sbb
mov
jb
imull
subb
mov
arpl
jecxz
push
ja
fwait
cmpsl
lahf
rcl
cmp
xor
xlat
adc
or
cmpsb
mov
adc
ss
bound
push
sub
inc
inc
xor
out
movsbl
pop
inc
or
dec
cmovno
mov
stos
xorb
sub
pop
pushf
test
add
adc
xor
daa
lods
std
mov
pop
and
bt
cmc
stc
rol
jmp
pushf
adc
ret
add
and
insb
mov
pop
in
test
or
mov
push
cmp
inc
out
adc
aas
inc
mov
bound
jbe
mov
fimull
sub
mov
and
pop
movb
cmp
test
neg
jmp
lea
je
lea
xor
jmp
pusha
pushf
lea
jne
push
mov
mov
stc
cmp
push
add
jmp
bswap
pusha
lea
pushf
movl
pushl
mov
call
add
sti
outsb
adc
inc
je
adc
icebp
sbb
mov
sbb
xor
bound
into
movsb
hlt
sahf
xchg
mov
aam
mov
into
lea
xor
sahf
dec
mov
addr16
xor
pop
xchg
mov
ret
mov
add
sub
xor
push
test
stc
cmp
jmp
rol
pushf
cmc
bt
neg
call
jmp
movb
lea
je
pushf
push
mov
lea
jmp
push
push
dec
insl
adc
dec
and
inc
dec
lds
xor
pushf
add
pop
aaa
nop
je
insl
fwait
and
dec
jb
xchg
xchg
mov
mov
add
adc
das
xor
pop
jecxz
sub
call
flds
cld
jecxz
pop
inc
mov
sub
shll
insl
jne
adc
mov
sub
jg
pop
xchg
es
scas
stos
xor
jl
jl
lock
cwtl
mov
hlt
or
imul
sub
dec
outsl
imul
call
ror
movzbw
sbb
shr
xor
movzbw
sets
pusha
mov
not
mov
movzbl
mov
mov
push
mov
mov
mov
lea
pop
pusha
pushf
movb
pushl
ret
pop
shrl
je
cwtl
cmpsb
mov
jg
push
sub
push
mov
push
jg
push
imul
mov
cld
sbb
ds
mov
xchg
mov
test
jno
adc
or
mov
sbb
les
test
pop
incl
shlb
sbb
jne
and
mov
pop
jg
ds
in
pop
xor
lahf
mov
or
sub
repz
push
push
cld
push
dec
insb
adc
in
add
push
orl
mov
and
pusha
jb
pop
sub
jg
xchg
add
inc
mov
mov
ds
cmc
sti
adc
jae
lahf
mov
xlat
repz
aaa
ss
insb
scas
std
scas
mov
inc
and
stc
jbe
adc
jmp
cwtl
push
or
mov
mov
mov
loopne
adc
pop
cmpb
mov
mov
and
mov
out
sbb
shll
sub
mov
testl
iret
lret
out
sti
cli
bound
test
adc
shlb
and
cltd
lea
je
seto
movsbw
jbe
pusha
mov
cwtl
lea
call
pop
xchg
nop
imul
pop
xor
jnp
mov
in
div
xor
cltd
mov
mov
pop
sub
mov
pop
jp
pop
add
ret
mov
testl
sub
xorb
insb
nop
aam
sbb
addb
jne
std
popf
fwait
mov
inc
cld
pushf
mov
jmp
movsbw
pusha
not
pushl
mov
movzbl
bswap
pushf
mov
pushf
movw
pushf
push
lea
jmp
xchg
xchg
nop
imul
mov
xlat
shl
loope
xor
outsl
imul
dec
xor
pop
add
and
lahf
jg
xchg
imul
mov
fsubr
cmpsb
cmp
adcl
jge
mov
lds
mov
xchg
mov
jmp
mov
cld
call
repnz
in
push
mov
shl
pop
and
pop
mov
nop
cmp
add
mov
pusha
xchg
in
or
mov
dec
xchg
jo
pop
arpl
and
nop
test
xchg
xchg
fdivrs
xorb
push
outsl
lahf
rcr
xlat
testl
mov
imul
xchg
ror
int
mov
out
decl
sbb
push
ljmp
pop
sbb
fnstcw
adc
push
or
mov
mov
or
int3
fcmovnbe
jge
add
jo
or
xchg
xchg
xchg
popl
cwtl
push
mov
mov
lock
popf
loopne
mov
jb
add
fsubrl
mov
lods
jmp
mov
mov
js
jb
xchg
loop
lods
add
mov
mov
jle
jne
pop
pop
jnp
pop
sbbb
rorb
mov
loop
mov
pop
imul
mov
pop
mov
addb
pop
jne
add
icebp
pop
les
imul
push
mov
jl
mov
cmp
lods
mov
jno
jns
cmpl
fadd
loop
mov
mov
test
imul
jg
mov
mov
mov
xchg
jl
inc
or
mov
mov
movsl
mov
xchg
test
pop
movsb
movsl
stos
inc
or
mov
or
fwait
mov
jmp
mov
repnz
shrb
icebp
mov
jg
sahf
adc
int
or
outsl
pop
xchg
or
push
cmp
mov
lock
or
lcall
mov
mov
jne
jp
xchg
jmp
inc
jl
mov
jno
or
subl
fstpt
or
jae
imul
dec
sbb
xorl
jg
jmp
mov
mov
or
orb
or
std
arpl
ds
cwtl
decl
xchg
mov
and
xchg
jle
test
push
xchg
out
mov
mov
test
cmp
adc
mov
add
mov
add
js
mov
or
lcall
adc
cwtl
stos
loop
or
loop
lock
into
mov
lock
cmpl
addb
jl
xchg
loope
mov
mov
cmpsl
mov
jo
out
jp
or
mov
mov
sahf
lahf
xchg
xor
insl
or
push
mov
insb
dec
lea
lea
xchg
cwtl
xlat
jecxz
stos
xchg
arpl
insb
mov
mov
or
or
loope
push
jg
jl
or
clc
stc
repnz
sbbb
rorl
les
xchg
test
outsl
pop
loope
add
mov
lock
jo
push
pop
jae
pop
into
loope
rorb
cmp
into
insl
jno
insb
lock
mov
jge
cld
jae
lock
adcb
jp
arpl
mov
hlt
or
outsb
or
mov
push
jbe
jae
push
xchg
or
push
lods
call
aam
sarl
or
test
mov
hlt
testb
lcall
mov
mov
insl
xchg
sbbl
leave
dec
sti
lret
imul
outsb
out
dec
add
mov
jo
stc
mov
lock
popf
lahf
cmc
loope
into
add
idivb
lock
jne
or
xor
mov
dec
sbb
mov
jns
arpl
ret
int3
fwait
lret
or
push
addb
mov
movsl
std
or
lods
lcall
popf
jnp
out
repz
dec
repz
idivb
mov
sahf
fs
lahf
lcall
dec
gs
test
mov
jns
repnz
test
leave
mov
mov
pop
push
pop
fbstp
add
xchg
and
add
fists
stc
or
pop
jl
lea
popf
pop
xchg
jge
lods
loope
stos
mov
ret
mov
mov
mov
lret
movsb
mov
xor
stc
mov
xor
mov
push
jo
mov
mov
add
or
pop
testb
mov
mov
bnd
mov
lcall
aad
insb
cwtl
filds
imul
mov
mov
ret
mov
xchg
mov
outsb
sarb
mov
jmp
mov
jp
out
orl
movsb
cltd
in
sbb
sbb
test
mov
repz
jns
mov
mov
fcompl
cmp
sti
mov
divb
repnz
test
sub
cmp
xchg
int3
jb
sbb
mov
lcall
rcl
dec
jle
jg
in
lods
stc
xchg
rorl
mov
int
xchg
inc
test
ret
mov
ljmp
add
mov
int3
jl
mov
or
mov
mov
mov
scas
rcrl
jbe
in
jmp
or
popf
xchg
lret
mov
faddl
mov
mov
mov
out
cmp
mov
mov
insl
lcall
mov
adcb
mov
lahf
lds
lcall
in
jb
mov
lea
mov
mov
fwait
mov
jmp
subb
push
pop
lret
jle
add
cmp
int3
faddp
mov
sahf
or
pop
aam
mov
jl
mov
add
cs
loop
ss
jge
jl
push
mov
cmp
mov
pop
cmc
mov
insb
dec
and
mov
icebp
movsl
test
dec
icebp
mov
sbbb
ljmp
jb
mov
xchg
in
jp
cli
lret
scas
cmp
sarb
into
mov
stos
jb
hlt
mov
jns
movsl
mov
mov
jl
pop
into
lcall
pop
push
or
jl
movsl
or
test
cld
mov
std
cmp
inc
jl
push
mov
rcr
jno
sbb
ret
add
adc
pop
sti
testb
mov
and
leave
jle
cmp
mov
insl
mov
aam
in
lods
jle
add
lods
mov
jge
testb
jl
jo
loop
xchg
mov
test
pop
rorl
aad
inc
and
sahf
mov
mov
into
mov
mov
ss
lret
cwtl
mov
jnp
inc
inc
sbb
sbb
push
das
jle
sbbb
mov
into
mov
scas
mov
les
mov
adc
mov
test
imul
shll
inc
and
sbb
or
outsb
sti
sub
int3
leave
std
rorb
inc
cld
xchg
pop
mov
mov
testb
jne
mov
xchg
aam
mov
pushf
cld
push
inc
and
pop
mov
push
adc
mov
scas
mov
sub
or
mov
outsl
and
jle
push
adcl
cwtl
push
out
mov
test
inc
and
inc
icebp
mov
mov
and
sbb
push
sbb
xchg
jle
mov
mov
test
sub
and
ret
mov
lahf
jno
mov
sarl
mov
pop
pop
fidivrs
lock
jae
cli
jb
popf
mov
stos
mov
jne
xchg
arpl
sbb
add
push
stc
or
sbb
dec
rcrl
mov
jns
dec
negl
mov
mov
popf
jle
lods
mov
stc
sub
ret
inc
and
xchg
fs
mov
mov
lcall
mov
xchg
push
les
cmp
dec
jl
ret
mov
mov
and
mov
test
insb
std
mov
dec
dec
and
sbb
outsb
lahf
mov
inc
jb
dec
movsl
and
mov
addb
ljmp
cld
pop
insb
sbb
lcall
mov
cs
stc
mov
or
testb
in
xchg
fsubrs
cwtl
pop
fisttpll
dec
flds
std
sahf
mov
mov
add
and
nop
rcr
sub
mov
movsl
dec
mov
je
pop
lret
mov
adc
cwtl
xchg
fs
add
sbbl
cltd
xchg
xchg
xchg
jecxz
lcall
lock
or
sbb
loope
mov
loop
movsb
push
lcall
xor
jnp
stc
mov
mov
cmpsb
call
sahf
loope
dec
cmpsb
nop
adc
xor
cmpsl
jnp
push
lret
lcall
and
les
or
push
adc
xchg
sbb
add
pop
sbb
push
adc
adc
fwait
repnz
lods
mov
stos
cmp
and
test
add
iret
mov
mov
mov
push
xor
es
ret
pop
cmpsb
ror
sbb
add
outsl
std
aaa
out
loopne
hlt
mov
cmpsb
sarb
cwtl
lret
int
mov
fidivl
ret
ljmp
aad
cli
xor
adc
cld
pushl
mov
fidivs
adc
lods
fdivp
inc
adc
push
test
fistl
lea
jmp
fiaddl
stc
add
ljmp
int3
call
in
out
repnz
xchg
hlt
call
icebp
push
incl
out
mov
fstl
addb
loop
lock
mov
adc
pop
or
lret
lods
sbb
int3
cld
xchg
in
jo
outsb
insl
enter
sbb
xchg
jge
cli
repz
mov
push
push
pop
or
pushf
push
lods
scas
mov
xor
push
add
and
inc
mov
insl
ficoml
fisttpl
dec
xchg
mov
lcall
mov
lock
fld
jle
repz
cmp
pop
cltd
or
mov
adc
mov
sbb
clc
cmp
mov
out
xchg
xchg
and
daa
cmp
sub
adc
mov
bsr
mov
pop
cmp
scas
adc
shr
mov
and
pop
xchg
lahf
mov
lret
repz
popf
movsl
lcall
insl
cmpl
pop
cli
mov
xchg
pop
ret
mov
mov
ja
mov
cli
dec
std
pop
bnd
jns
sbb
dec
sti
mov
xchg
sub
xchg
push
add
push
cld
push
xchg
cmp
ret
xor
lret
call
fistl
push
cmp
adc
lea
add
dec
loopne
jns
or
and
sub
out
pop
jnp
in
push
aam
ljmp
leave
fstpt
das
popa
fiadds
sbb
fiaddl
adc
xchg
lea
sbb
jl
into
bnd
jmp
scas
ss
push
test
or
dec
sahf
call
mov
test
mov
push
inc
in
or
adc
inc
xor
das
inc
fiadds
xchg
xor
cmp
aam
dec
jb
mov
push
test
or
adc
xchg
movsl
fisttpll
insb
cld
or
add
push
mov
push
in
test
sbb
rclb
lock
rorl
xor
adc
push
pop
or
pop
ret
dec
rol
dec
xlat
loop
insl
mov
cli
je
lahf
pop
fldcw
lock
pop
inc
mov
or
sarb
leave
xchg
ss
ret
xchg
pop
xchg
int
mov
or
pop
popa
push
sarb
jmp
cltd
clc
sbb
sbb
fwait
xchg
clc
sbb
jb
enter
loop
and
cmp
jbe
add
ret
mov
push
bound
cmp
lcall
xor
mov
dec
inc
sub
mov
ljmp
pop
xor
mov
and
pop
cltd
sub
repnz
xchg
xlat
or
xchg
xchg
imul
dec
sub
adc
out
fiaddl
xlat
adc
repnz
fsts
out
lock
test
or
pop
ret
loop
mov
sarl
test
cmp
pop
pop
ror
xchg
popa
jp
jle
outsb
mov
mov
mov
sti
shlb
mov
xchg
out
test
lea
mov
outsl
lret
ja
and
xchg
rclb
sbb
xor
repnz
jle
sbbl
jl
adc
cmc
push
fimuls
jmp
fsub
loop
std
push
mov
ficompl
div
mov
adc
xor
adc
mov
out
loope
decb
lods
xlat
into
fnstsw
and
out
pop
fdivrs
mov
stos
jle
std
jge
lock
mov
xlat
inc
mov
ret
inc
sbb
aam
pop
std
or
dec
jmp
cmp
mov
call
roll
jb
sbb
mov
pop
push
int3
ficoml
add
mov
push
add
insb
add
sub
sbb
rorb
cmp
shrb
push
scas
scas
add
test
stos
mov
dec
jne
cld
push
jge
xor
out
iret
push
add
push
cltd
sub
leave
inc
push
cli
fucomp
in
mov
mov
add
jge
aam
sti
dec
jl
lock
mov
xchg
pop
incl
out
enter
or
aam
int3
popl
loop
jns
loopne
sbb
xor
fsts
enter
jp
dec
push
xchg
jnp
pop
or
adc
test
inc
mov
ret
outsb
out
mov
adc
xchg
popf
enter
cmp
cmpsb
mov
or
test
xchg
sub
sub
mov
xor
pop
add
jne
xchg
sub
pushf
sub
in
ljmp
ffree
stc
pop
xchg
adc
call
test
mov
mov
lcall
dec
push
mov
xchg
std
pop
add
aad
sbb
xchg
mov
hlt
sar
push
adc
or
cmp
cli
jmp
adc
fistpll
jae
cltd
int3
ret
mov
pop
push
data16
cmp
scas
push
push
xchg
pop
cltd
adc
mov
push
into
mov
lcall
fildll
cmpsb
out
adc
incl
and
outsl
xchg
decl
mov
adc
jne
mov
and
and
jmp
adc
lea
shrl
inc
sub
inc
cwtl
inc
insl
mov
dec
mov
xorl
xchg
icebp
dec
dec
lcall
dec
in
pop
loope
mov
pop
aas
xor
pop
jle
pop
cmp
das
ljmp
push
mov
push
ljmp
shll
pop
push
fiadds
in
gs
add
adc
xchg
mov
es
fistl
push
inc
cmp
rcr
adc
leave
ja
int
sub
fidivrl
aad
lret
cmp
insl
sti
outsl
adc
cli
pop
scas
xchg
inc
add
xchg
fidivl
jns
pop
or
cmp
das
lcall
or
movsl
out
jbe
add
aaa
sti
mov
cmpsl
stc
push
bound
fldt
pushf
aam
rclb
push
loop
xchg
das
ret
jp
in
cmc
out
fistl
dec
enter
mov
pop
cld
stos
mov
jge
fdivrp
imul
sahf
or
shrb
movlps
in
ljmp
sbb
cmp
or
adc
mov
push
pop
xchg
ds
mov
mov
mov
push
cmpsl
test
jmp
xor
pop
mov
lods
cmpb
pop
jbe
inc
je
vfmsubadd132pd
mov
jns
cli
aas
in
add
stos
notl
adc
dec
adc
cmp
sub
iret
sbb
loop
and
xchg
shl
adc
out
or
cmp
adc
add
adc
into
loop
inc
int3
cmpsb
bnd
mov
es
ret
aaa
call
cli
bound
or
mov
outsb
jl
pop
es
or
dec
push
cltd
lea
mov
out
repnz
push
stos
mov
jb
repz
bound
mov
and
dec
ret
cmp
cmp
es
lods
adc
nop
sub
aam
inc
imul
sub
pop
fimuls
inc
imull
lods
or
or
mov
sbb
push
test
sbb
mov
jne
or
cli
mov
rcl
xor
xchg
cmp
ffreep
pop
sahf
cmpsb
sbb
sub
out
cs
pop
pop
jnp
shr
or
cmp
mov
mov
out
mov
mov
xor
xchg
push
call
sbb
xchg
add
loope
mov
in
xor
jge
sahf
lock
jns
les
fcmovu
icebp
insl
ret
cwtl
leave
or
push
add
sbb
sbbb
test
lds
aam
add
imul
test
imul
add
inc
aad
imul
rolb
mov
mov
dec
in
mov
mov
mov
lcall
shl
sahf
imul
xchg
pop
in
jmp
icebp
pop
push
and
sub
les
dec
adc
cltd
loope
arpl
sbb
sysexit
xor
fcompl
mov
or
aad
xchg
ret
add
ret
mov
push
xor
leave
and
dec
jne
lret
jb
cmp
repnz
pop
push
icebp
loopne
fsubrp
ffree
or
jecxz
push
imul
or
sbb
negl
xchg
mov
push
add
fisttpl
mov
daa
pop
pop
cld
adc
dec
mov
lods
daa
push
sahf
sbb
cmpsl
add
jno
pop
outsb
push
or
xchg
loop
add
inc
call
xchg
pop
xor
add
sbb
cmp
adc
mov
pop
into
pop
adc
adc
int3
movsl
mov
test
cli
sbb
cmp
fcompl
aad
xor
push
out
adc
or
adc
and
xor
cmp
outsb
mov
in
sbb
lea
mov
decl
xchg
shrl
movsb
xchg
mov
sub
test
faddl
push
decl
fucompp
rcll
mov
xor
jecxz
hlt
loope
dec
add
add
adc
cmc
cmp
mov
ja
pop
jmp
push
punpcklbw
ljmp
leave
out
mov
dec
jmp
mov
insb
imul
data16
cmp
jl
cmp
and
cmp
adc
dec
cmp
inc
sub
outsb
xchg
jecxz
and
mov
ljmp
xor
sarl
cmp
bound
xchg
sbb
std
pop
sahf
or
mov
sarl
push
mov
sub
mov
stos
stos
in
cmp
faddl
dec
add
ret
repz
add
inc
pop
cmpsb
incb
shl
mov
pushf
das
mov
cld
popf
xlat
push
lock
push
clc
faddp
arpl
xchg
sub
stos
shl
xchg
push
std
mov
into
stos
rol
inc
mov
pop
jmp
mov
cmp
sbb
cmp
pop
xor
jmp
ds
mov
lds
adc
loope
repnz
pop
imul
and
and
dec
pop
and
or
adc
push
xor
out
lahf
test
mov
push
and
gs
icebp
push
shr
xchg
sahf
mov
dec
sbb
add
dec
aad
data16
and
cli
loop
inc
out
ret
pop
repnz
fcoml
out
pop
cmp
lahf
call
push
adc
push
ljmp
fs
mov
lds
cmp
cmp
push
sti
xor
in
pop
sahf
inc
jo
fnstcw
fistpl
loope
sbb
in
dec
fildll
sti
lahf
adc
or
stos
or
les
scas
ret
cmp
rcl
dec
int3
pop
shrl
sahf
push
icebp
sub
adc
dec
add
push
push
sbbb
int3
add
fcoms
xchg
sahf
out
pop
test
fdivl
pop
pop
add
adc
inc
mov
push
mov
add
push
sahf
adc
dec
mov
dec
sarb
in
mov
mov
fcompl
into
push
jge
aam
in
xchg
mov
sti
push
adc
aad
lods
mov
in
shrl
hlt
inc
movsb
pop
ret
cs
enter
cld
call
mov
or
test
into
out
adc
pushl
adc
jmp
xor
pop
std
sbb
repnz
cmc
cmp
add
lea
jmp
dec
jle
sar
clc
cmpsb
cmp
or
cli
adc
xchg
lods
mov
jp
mov
push
jp
xor
loope
in
pop
mov
pop
add
cmp
loopne
and
cli
mov
fsubrl
fstl
insb
xchg
xor
sbb
cli
enter
xor
dec
sbb
int3
iret
adc
jg
shlb
test
and
jns
sub
dec
inc
aad
movsb
call
inc
out
decl
and
divb
pushl
cld
or
and
cld
rorb
imul
rcrl
cltd
sub
leave
jmp
push
pop
lret
inc
mov
sahf
mov
out
insl
jbe
mov
pop
divl
mov
sub
cmp
mov
cmpsb
test
out
fidivrs
or
decb
cld
int3
lods
loope
sbb
cld
aam
sub
in
inc
shll
sahf
add
mov
std
fucompp
xor
cmp
adc
pop
fstps
lret
mov
jl
or
movsb
leave
pushl
out
adc
push
xchg
aad
incl
sub
or
in
lea
repnz
scas
inc
xchg
push
add
sbb
pop
pop
push
int3
cli
dec
add
adc
mov
sbb
mul
push
pop
adc
lret
or
in
lret
pop
cmc
es
or
push
loop
push
jns
jo
pop
out
in
decb
fdivrp
cltd
aam
push
in
push
push
mov
insl
push
inc
mov
lret
fcoml
add
and
sub
mov
inc
xchg
rorl
add
outsb
ror
jl
in
push
jno
icebp
ficoms
in
mov
nop
icebp
cli
and
fldcw
lret
out
push
mov
pusha
cmpsb
ret
adc
enter
mov
shll
std
ja
adc
mov
imul
mov
cwtl
mov
mov
jnp
and
pop
test
mov
das
negb
std
in
xor
xchg
int
and
ds
imul
hlt
mov
sbb
xchg
ss
jns
cwtl
in
jno
jb
cltd
and
roll
xchg
aad
push
mov
jecxz
push
cmp
push
icebp
xchg
fldenv
jge
cs
push
mov
fcomp
jno
fdivrs
lret
dec
jnp
cli
xchg
gs
ret
aam
sahf
sbb
notb
or
or
aam
lret
ret
idivl
cmpsb
lods
mov
jns
sbb
sahf
or
pop
xor
lahf
xchg
in
xor
jb
push
jecxz
or
iret
setle
rorl
sbb
add
cmpsl
adc
int
xchg
cld
push
into
xor
pop
sbb
jmp
mov
pop
clc
or
push
fsub
cmp
push
scas
mov
clc
cltd
add
fnstsw
sub
xor
mov
push
or
add
loop
out
cli
push
cmc
sbb
popl
cli
rorb
xor
jecxz
mov
insl
add
test
mov
add
clc
enter
stc
cmp
or
push
mov
lret
dec
fstpt
insl
or
xchg
adc
dec
sub
add
ror
inc
xchg
dec
cli
dec
sub
xor
cltd
out
popa
lea
aaa
add
sbbl
add
out
cs
sub
cwtl
ja
xchg
loope
lods
int3
movsb
cmp
xor
xor
sahf
out
cld
xchg
in
mov
pop
sar
fnsave
cmc
mov
lret
pushf
in
lea
dec
or
push
rep
call
mov
jge
mov
adc
enter
or
enter
cli
mov
xorl
call
bnd
stc
fcoml
and
rorb
mov
popf
pop
lea
cmp
leave
dec
xor
mov
add
cli
jno
sti
fiadds
push
or
test
mov
insl
loop
mov
jne
adc
pop
sbb
mov
adc
xchg
loopne
repnz
and
sbb
lods
inc
jmp
sub
aad
inc
ret
out
add
sbb
iret
and
rorl
in
mov
adc
xor
fidivrl
pop
adc
sbb
cs
es
or
xchg
in
dec
adc
mov
or
push
xacquire
and
xchg
pop
push
mov
repnz
pop
adc
fidivl
pop
dec
adc
or
cltd
insl
out
jno
cld
inc
cmc
sbb
adc
sub
adc
sbb
adc
incb
sub
mov
xor
and
insb
jge
or
lret
xor
test
repz
cld
pop
add
dec
jmp
xor
test
lods
fbstp
ret
fistpl
int
mov
jmp
or
adc
daa
cmp
fsubr
sbb
push
cmp
mov
jg
hlt
loopne
out
notl
add
mov
cld
aad
add
xor
cld
inc
pop
jae
fdivp
leave
push
fistpll
pop
scas
mov
mov
xchg
enter
jb
cmp
add
cmp
or
loop
in
mov
mov
js
sahf
test
ljmp
std
dec
bnd
into
pop
fmull
mov
aam
or
sbb
adc
testb
push
lret
and
xor
mov
mov
sub
cmp
insb
rclb
sarb
fsubp
adc
add
or
pop
adc
in
xchg
xchg
push
dec
mov
mov
out
adcl
mov
int
cmpsb
ror
xor
push
mov
mov
add
inc
mov
ret
lock
adc
test
orl
lods
scas
cld
js
stos
lcall
mov
pop
fisubs
sbb
jae
call
mov
mov
hlt
xchg
sub
cmp
stc
pop
or
adc
fisttpll
sub
mov
mov
sarl
sti
push
sbb
sar
sub
mov
cmp
xchg
mov
push
mov
or
lea
sbb
mov
insb
jno
xor
loopne
daa
mov
adc
stc
cmp
sti
mov
scas
nop
sub
jmp
outsb
and
pop
pop
xchg
xchg
repz
mov
loope
out
pop
cld
xchg
mov
jle
fidivrs
and
scas
imul
push
lds
out
loope
mov
mov
in
pop
mov
push
mov
ffree
mov
lret
or
adcb
rorb
or
fistl
out
das
addr16
cmpb
add
sub
pushf
or
mov
leave
cmp
ret
fs
es
and
mov
adc
into
cmp
iret
add
sub
hlt
adc
in
inc
cmp
or
rcrb
dec
dec
xor
xchg
sahf
out
into
jge
mov
fdivs
icebp
enter
inc
xor
push
fildll
in
xor
test
in
mov
lods
lret
lahf
cmc
iret
cli
repnz
add
or
inc
mulb
pop
pop
jb
adc
cmp
test
jmp
mov
adc
aad
repnz
xor
jnp
lds
ficoml
mov
lcall
add
push
cmp
enter
adc
xchg
leave
es
popf
sti
mov
lock
loop
lret
shl
or
cltd
sbb
xchg
ficomps
dec
cld
or
sbb
lock
das
ja
pop
hlt
jp
pop
lock
les
pop
ror
pop
cmp
test
gs
push
into
mov
push
insb
movl
outsl
or
rcll
jno
into
sub
sahf
fldt
or
mov
pop
xor
call
cli
cmp
out
fcompl
jp
push
mov
mov
adc
sub
xor
dec
cmp
test
test
cli
leave
sbb
movsl
lock
testb
cmp
adc
loop
ret
out
jmp
xor
sbb
pop
aam
clc
add
push
out
and
adc
sti
loopne
gs
jmp
shl
mov
mov
xchg
pop
and
stc
negb
cld
decb
daa
dec
cmp
mov
iret
push
data16
test
cmp
call
xorb
fcoms
add
mov
cltd
into
in
mov
adc
notb
lods
add
mov
in
or
sbb
adc
sti
sbb
xor
or
jbe
repnz
rolb
dec
push
lcall
ret
movsb
xor
adc
jns
shl
les
mov
pushl
out
cld
lea
mov
pop
push
add
sbb
ror
vpunpckhdq
mov
stos
cmp
stc
xchg
pop
jp
test
mov
adc
mov
ret
dec
stos
cld
mov
adc
push
mov
imul
pop
push
cltd
repnz
or
sbb
gs
push
adc
arpl
mov
adc
adc
lcall
push
roll
movsl
shlb
pop
stos
push
adc
add
push
cmc
in
and
scas
xchg
inc
lds
sbb
dec
jcxz
pop
or
xor
aam
xchg
dec
filds
clc
imul
aaa
jns
adc
xlat
mov
roll
fmull
negb
adc
xor
xchg
or
mov
adc
mov
cmpsl
mov
ljmp
fists
hlt
mov
out
cli
dec
jmp
or
adc
xor
xchg
xchg
std
outsb
sbb
icebp
pop
jge
cmpsb
hlt
cltd
push
lret
and
push
cmpb
inc
scas
push
fcompl
mov
and
bound
cld
mov
adc
iret
add
or
cli
xchg
popa
bound
cltd
jbe
sti
mov
cmp
test
push
or
ja
div
mov
xchg
or
pop
push
sub
lcall
in
out
jge
subl
not
dec
pop
icebp
adc
push
jecxz
mov
sti
xchg
xchg
jp
addl
xchg
mov
add
mov
push
cmpl
div
out
cmpsl
add
dec
push
sbb
xchg
ret
lds
cmp
outsl
push
dec
out
mov
push
divl
sbb
mov
xchg
imul
in
in
mov
mov
push
mov
sbb
xor
jb
sahf
mov
adc
pop
xlat
in
fiaddl
push
std
push
or
mov
pop
xor
sub
or
cwtl
subb
or
and
hlt
mulb
xchg
lahf
es
repz
adc
cli
daa
cmp
xchg
jmp
adc
adc
pop
inc
call
out
cmp
clc
mov
pusha
int
enter
insb
fmul
mov
adc
mov
pop
or
pop
jle
sub
mul
mov
or
js
sar
lret
mov
xchg
cmc
adc
repnz
icebp
mov
test
adc
xchg
or
jecxz
and
sbb
out
mov
sbb
inc
sti
scas
adc
mov
push
ljmp
icebp
popa
ljmp
in
jno
add
xchg
cltd
lods
shl
or
dec
out
cmp
add
fwait
mull
inc
pop
imul
push
jno
in
cmpsl
mov
les
data16
sbb
icebp
xor
sub
cmp
movsl
push
cs
xchg
lods
rcrl
pop
sbb
bnd
adc
cld
xchg
sub
fldenv
mov
mov
jmp
out
mov
cltd
cs
cmp
ret
push
in
push
add
xor
icebp
mov
fnstsw
jp
sub
adc
adc
mov
cld
scas
aam
add
cli
xchg
sarb
repnz
or
ficoml
jb
leave
xchg
sbb
xor
mov
icebp
movsl
repz
test
mull
push
subb
lret
mov
sbb
cmp
imul
das
in
arpl
lods
std
sahf
add
adc
sti
xchg
rcrb
insl
jmp
fnstsw
xchg
lret
pop
jbe
fwait
and
jg
mov
insl
sub
lret
adc
cmp
sbb
cmpsb
subl
mov
loope
or
shll
sarb
rol
fnsave
mov
sub
std
popw
out
mov
mov
popf
adc
int3
jb
arpl
sub
xchg
lret
lcall
push
xor
xchg
out
pop
fmul
cmp
xchg
out
and
sbb
mov
adc
mov
jns
pop
clc
adc
ja
push
xor
stc
shrb
add
daa
dec
scas
xorb
add
ffree
or
mov
or
add
inc
mov
mov
adc
fucom
pop
dec
mov
cld
or
mov
add
mov
stc
ret
xchg
and
add
fldt
jge
or
int3
lcall
pop
mov
xchg
jle
fidivrl
push
es
fsub
mov
ficoml
mov
lds
xchg
popa
dec
shrl
lods
int3
sahf
repnz
test
rclb
xchg
aaa
inc
xchg
popa
outsb
jae
ss
pop
adc
icebp
pop
std
pop
jecxz
icebp
cld
sarl
lret
push
movsl
pop
mov
push
jo
and
push
out
xor
fwait
clc
push
xchg
xlat
incb
xchg
push
xlat
negl
loopne
cld
push
mov
xchg
jne
or
dec
mov
inc
decl
inc
jge
sbb
incl
cltd
ror
les
or
add
cltd
dec
push
int
or
ficoms
adc
or
or
rolb
dec
lahf
clc
or
add
dec
mov
inc
clc
push
sbbb
inc
jmp
test
out
or
xchg
add
daa
lcall
adc
test
xchg
jle
pop
iret
mov
adc
sahf
cmc
ds
sub
dec
loop
pushf
jmp
ss
push
test
rcrb
lcall
sbb
pop
fadds
or
jne
mov
shlb
xchg
in
loop
enter
mov
addps
loop
xor
fnstcw
ja
pusha
clc
push
repz
mov
dec
xor
cmp
add
ljmp
int3
mov
rsqrtps
test
sbb
jne
lock
jae
cmc
xor
jp
push
rep
adc
or
push
inc
pushf
xchg
popf
push
sbb
inc
jnp
or
test
fdivrl
dec
add
icebp
and
mov
push
ja
push
leave
adc
dec
pop
call
stos
loop
cmp
outsb
int3
lea
sbb
mov
xchg
lods
sub
out
sbb
sbb
ret
mov
push
mov
int3
cmp
sarl
jmp
nop
stos
ja
or
inc
inc
mov
test
cmc
sti
pusha
daa
jle
mov
iret
lds
stc
cmpsb
jbe
sahf
in
repnz
sahf
sti
cmp
sbb
mov
insb
cli
lds
or
sub
out
mov
fcoml
fadds
into
inc
xchg
std
inc
xor
push
movb
push
insl
aas
mov
in
sbb
push
into
shl
pop
pop
mov
ljmp
jmp
jecxz
or
stos
out
out
std
mov
xchg
mov
mov
mov
inc
dec
pop
sub
mov
inc
xchg
frstor
lods
mov
ret
loop
rorb
add
pop
adc
adc
out
sub
scas
clc
add
adc
in
sub
mov
push
mov
push
ljmp
adc
sti
pop
repnz
xchg
lret
cmp
sub
and
or
faddl
jmp
enter
xchg
pushf
adc
cmp
mov
js
lret
hlt
ds
mov
xchg
xlat
out
in
mov
jle
add
jecxz
pop
pushf
cmp
dec
jmp
or
mov
mov
or
push
and
and
sbb
pop
mov
xor
ret
fistpll
xchg
xchg
dec
pop
pop
stos
cmp
fisubs
mov
fwait
std
cmp
fmuls
pop
push
out
or
ljmp
adc
mov
or
xor
ffree
rcll
cmp
xor
clc
push
mov
lret
push
dec
fimull
add
int3
pop
sub
pop
std
xchg
mov
push
imul
in
and
sarb
pop
xchg
out
mov
sbb
jp
xchg
and
xchg
mov
std
scas
sbb
enter
pop
shlb
mov
clc
and
stc
pusha
pusha
mov
xchg
sbb
xchg
xchg
or
add
lds
lret
push
addb
sub
call
push
clc
nop
cltd
xchg
pop
sub
and
cmpsb
pusha
push
aam
mov
and
mov
pop
adc
stc
push
cmp
xchg
shrb
xchg
outsl
shrl
add
add
test
mov
jecxz
jnp
lock
cmp
xchg
lahf
iret
int
and
and
mov
test
cmp
push
lcall
push
loope
cmp
cmp
les
inc
out
mov
enter
mov
xor
pop
test
les
inc
cmpb
xchg
lret
aam
xor
fdivrl
sbb
test
jecxz
jb
shll
push
sbb
add
mov
lds
rcrb
cmp
gs
test
mov
or
clc
add
cli
xor
in
mov
mov
or
popf
mov
adc
xorl
icebp
adc
sbbb
and
push
cld
or
inc
ss
cld
xor
int3
mov
pop
sahf
roll
push
push
stos
cmp
mov
cltd
in
pop
popa
ljmp
pop
or
in
int
or
aaa
iret
inc
xchg
aad
pop
imul
notl
fs
sbb
push
dec
std
xchg
imul
sbb
int3
jns
test
xor
clc
adc
in
lds
push
cltd
scas
out
xchg
cld
enter
dec
std
int
popa
sub
cmp
and
adc
pop
int3
adc
adc
lods
repz
pop
jmp
fsub
in
hlt
mov
mov
icebp
or
mov
aam
push
in
xchg
cmp
mov
mov
xchg
sti
xorb
adc
dec
insl
adc
sahf
movsb
addr16
adc
pop
decl
insb
mov
adcb
push
or
test
cld
ljmp
int3
xchg
and
cli
or
xor
pop
fsubl
inc
pop
loopne
lods
imull
mov
sub
cmpsb
scas
into
ret
aam
lret
or
int3
and
scas
adc
cmp
mov
push
sbb
paddusb
jmp
or
xor
sbb
xor
mov
xchg
popa
repz
push
sti
rep
adc
notb
mov
pop
outsl
add
adc
mov
pop
mov
jae
jbe
hlt
push
pop
xor
mov
adc
jmp
sbb
xor
lcall
lret
xor
lea
push
mov
cltd
add
popf
std
repnz
dec
push
cmp
pop
int3
pop
sti
test
mov
sahf
sbb
rcll
push
cmp
inc
mov
pop
test
push
fwait
ret
push
and
or
mov
push
push
xchg
sqrtps
adc
loop
fmulp
sbb
xchg
sbb
push
repnz
scas
test
sbb
jp
arpl
icebp
das
repnz
cmc
mov
inc
mov
loope
adc
lcall
cmc
insb
inc
sub
adc
adc
xchg
test
daa
xchg
gs
xchg
xchg
adc
adc
repz
icebp
or
and
lcall
xchg
ror
or
push
in
hlt
daa
jne
jnp
clc
cmp
add
adc
xlat
lods
movsb
in
out
icebp
mov
mov
mov
or
pop
cmp
iret
imul
lret
mov
cmp
es
push
repz
pop
ds
mov
test
mov
mov
mov
dec
scas
push
lock
jbe
xchg
xchg
data16
jp
bound
push
lea
sbb
ret
dec
sbb
data16
pusha
mov
std
or
pop
mov
repz
dec
int3
and
hlt
in
mov
and
lcall
scas
shrl
ret
lret
int3
sub
adc
fxch
fcomps
hlt
or
lods
push
jle
adc
pop
std
int
sbbb
out
shr
adc
mov
loope
xchg
mov
int
lds
lret
mov
and
sub
jo
int
clc
and
and
xor
ja
rep
lret
cltd
inc
mov
sbb
cld
jp
fildll
mov
clts
cmp
lds
jmp
sbb
pop
sbb
sbb
cmp
jmp
bound
cld
call
cmp
dec
divb
xchg
repz
test
sbb
xchg
mov
or
sub
test
ss
dec
incl
xchg
mov
insb
movsb
pop
mov
xchg
fisttpll
insb
subl
xor
dec
sbb
pop
or
push
xor
out
inc
scas
stc
cmc
mov
adc
cmp
xchg
or
es
jbe
cli
faddl
mov
inc
cmp
pop
lds
xchg
sarb
test
sbb
pushf
adc
and
test
mov
dec
xchg
pop
mov
ss
aaa
mov
inc
call
fidivrl
cltd
sub
xchg
mov
cld
sti
mov
xchg
mov
fsubrp
out
bound
lret
fcoml
xor
adc
cmp
movsl
dec
idivl
and
ja
in
sti
sbb
jmp
ficompl
and
icebp
jns
add
xor
mov
mov
cmpl
inc
or
mov
jae
mov
roll
jge
std
cltd
std
mov
sub
dec
je
cmpsl
in
jne
add
pop
stc
push
rol
dec
ja
mov
rcr
xchg
xchg
roll
repnz
xor
aas
sar
inc
popf
xchg
mov
popf
sub
adc
dec
ret
or
dec
sarl
dec
dec
adc
jecxz
inc
cmpsl
fdiv
cltd
add
cld
rcrb
dec
jl
jb
pop
adc
cmp
test
dec
pop
call
dec
cli
adc
test
repz
add
les
fdivrp
add
lods
mov
lds
jb
ljmp
loopne
insb
cmp
dec
dec
mov
dec
adc
mov
test
add
sbb
adc
dec
orl
ja
outsl
rorb
stos
lret
dec
dec
sahf
shlb
xor
out
cld
fmuls
sahf
pop
and
add
and
adc
adc
scas
xor
jb
mov
xor
xor
loopne
fcmove
jg
es
jno
les
lret
mov
add
insb
mov
jle
cmp
jmp
or
in
xchg
sar
out
and
imul
xchg
nop
mov
stc
cld
jmp
cmp
in
dec
xor
or
sbb
dec
or
pop
xchg
mov
int3
or
lret
bound
test
imul
add
add
shrl
sbb
in
xor
push
push
dec
adc
jb
decb
out
lods
std
jno
clc
cltd
out
and
jb
push
adc
rcll
and
fldenv
pop
pop
loopne
mov
fcomps
scas
test
adc
add
rclb
lcall
xor
xor
xor
mov
imul
stos
test
fstps
loop
movsl
jno
orb
mov
sbb
imul
push
mov
test
insb
incb
mov
int
add
cmp
mov
xor
in
jb
and
jnp
push
or
mov
icebp
loope
add
pop
xor
xor
xchg
aam
int
bound
addb
fdivl
xor
adc
dec
mov
mov
and
jns
icebp
out
cmp
jmp
int3
loope
add
mul
push
pop
test
jmp
out
in
mov
sahf
sbb
subl
jns
pop
dec
cmp
xchg
pop
or
imul
outsb
test
sahf
sti
jnp
adc
adc
or
pushl
mulb
push
mov
push
and
inc
dec
xor
scas
int3
test
out
mov
in
pop
sbb
mov
xchg
sbb
jmp
jl
or
fcompl
in
loop
xchg
mov
or
jbe
mov
jo
sub
xor
jge
in
mov
popa
add
adc
xor
mov
jb
lea
stc
cltd
push
cmc
xchg
lea
loope
cli
jbe
adc
xor
lahf
pop
pop
cmp
sarb
sbb
push
into
mov
jge
mov
lock
cmp
movsb
icebp
cmc
ss
sbb
cli
cmp
hlt
xchg
xchg
mov
jl
ljmp
pop
and
dec
push
push
sti
mov
out
push
loope
cmp
repz
dec
add
cmp
add
dec
push
loope
mov
insl
adc
notl
pop
cltd
xor
out
inc
in
into
mov
sub
or
lret
mov
cmp
or
arpl
test
or
ret
bound
push
movsb
adc
pushf
repnz
adc
or
jbe
pop
jecxz
std
mov
push
dec
or
dec
je
sub
sbbb
dec
iret
ljmp
ret
shrb
mov
ret
fnsave
xchg
mov
cmp
adc
fsts
sub
into
sub
xchg
inc
cmp
xchg
inc
push
nop
sahf
mov
xchg
cmpb
scas
outsb
stos
mov
mov
inc
aad
negl
and
and
into
loop
mov
inc
sahf
adc
cmp
jne
fbstp
das
add
add
hlt
push
jne
dec
xchg
in
popa
shr
repnz
out
xor
mov
outsb
lcall
mov
xor
popa
rol
pop
sar
push
mov
dec
icebp
mov
xor
fstps
jle
fcoms
pusha
loope
xor
mov
pop
stc
add
scas
xchg
xchg
hlt
or
jns
clc
adc
or
mov
add
mov
cmp
and
call
es
or
xorb
and
dec
sahf
add
in
add
xor
mov
lds
pop
sbb
xchg
fisttpll
pop
mov
jb
jno
xchg
sub
sbbb
sahf
jmp
loopne
ret
sub
or
xor
imul
arpl
jnp
popf
mov
push
movsl
and
xor
outsb
jns
dec
cmpsl
shlb
aas
cwtl
cmp
or
ror
ret
roll
notb
out
hlt
cld
cmpsb
push
fs
xchg
jge
repnz
negb
xor
add
push
ds
mov
mov
dec
movsl
dec
test
sbb
dec
jo
std
clc
int
js
lcall
sub
cmpsl
cmp
int3
xchg
leave
es
push
sub
out
jmp
add
aam
test
jp
cmp
lcall
rcrb
out
sahf
pop
sbb
inc
dec
dec
fdivs
mov
scas
mov
jg
std
mov
mov
mov
adc
aam
in
popa
nop
sti
sbb
mov
inc
mov
icebp
in
insl
shlb
ja
or
push
aad
scas
xchg
jne
fs
dec
repnz
xor
pusha
mov
hlt
pushf
std
lds
sbb
sbb
out
or
mov
mov
repz
mov
pushf
or
stos
js
int
hlt
cmp
out
stos
loope
out
stc
add
out
ret
cmp
icebp
stos
lcall
mov
jle
hlt
icebp
jecxz
pusha
mov
xlat
add
repnz
std
cmpsb
pop
mov
int
xor
in
fcmove
out
sarl
add
sbb
pop
push
add
fcomp
xor
or
dec
out
cltd
out
mov
xchg
int3
push
or
cmp
cmp
es
pop
sbb
outsb
or
dec
adc
adc
xchg
mov
sbb
cmp
test
mov
lods
xchg
lret
cld
dec
int
sbb
insl
sub
cmp
xchg
sahf
jle
int
dec
xor
hlt
dec
jg
jbe
pop
rolb
call
arpl
sbb
fsubr
popa
fdivrs
push
ret
inc
jge
xchg
or
or
out
sahf
in
cld
mov
xor
cld
xchg
pop
mov
out
pop
outsl
mov
sbb
pop
dec
mov
incb
cmp
xchg
jl
or
xlat
mov
cmp
xchg
lock
dec
lret
fsubr
notb
mov
add
lods
fsub
fiadds
out
xchg
fsub
jmp
add
lcall
adc
xchg
fdivs
cld
in
push
pop
add
out
jg
outsb
nop
sub
icebp
hlt
add
xchg
adc
cmp
sahf
mov
fcos
lcall
movsl
jmp
mov
iret
in
or
std
mov
xchg
push
clc
out
add
roll
or
adc
out
sbb
jnp
iret
shrl
test
sti
jge
fnstcw
test
push
pop
push
es
stc
out
stos
cwtl
test
pop
sbb
xchg
rcrl
outsb
or
push
cmp
pop
and
movl
imul
movsl
out
cmp
push
fadd
icebp
lcall
jb
mov
imul
fucom
imul
push
movsl
mov
sub
ror
push
jmp
add
push
jmp
xchg
mov
fldenv
jmp
pop
or
or
mov
out
icebp
loope
cmp
ret
cwtl
int3
lret
add
jg
fsts
mov
mov
fdivrl
imul
ficompl
xlat
xchg
pop
incl
movsl
and
xor
cmp
jl
and
xor
idivl
stos
jb
jmp
test
fldcw
add
jecxz
std
pop
rcrl
adcb
rol
int
cmp
mov
xchg
aam
push
push
into
dec
mov
mov
jmp
roll
stc
bound
xchg
mov
pop
jmp
outsb
loop
jae
push
lea
or
les
rcr
or
lods
enter
add
fidivrl
mov
ret
dec
mov
or
inc
decl
inc
repz
iret
in
pop
jl
add
xchg
out
mov
cld
adcl
xchg
and
das
sbb
or
adc
pushf
and
xlat
fdiv
in
test
mov
test
scas
push
fnstcw
cltd
clc
jecxz
xor
int3
or
dec
sub
sti
dec
lods
dec
sahf
mov
pop
scas
mov
fldcw
mov
repnz
out
punpckhdq
out
ret
stos
or
sub
rcrb
cmp
outsb
lret
ds
or
fisttps
dec
dec
rcll
inc
test
cmp
jmp
fwait
xor
xchg
cmp
insb
lcall
orl
lea
stc
insl
ret
xor
dec
jle
or
cwtl
adc
xchg
test
xor
jecxz
pushf
loop
jmp
add
outsl
push
aad
add
pop
fcoml
push
fsubrs
fmul
idivb
aad
add
push
jmp
les
sahf
adc
or
mov
mov
adc
mov
insl
jmp
pop
jge
rorl
dec
xor
xchg
aad
add
pop
sbb
icebp
daa
and
ret
fistps
dec
gs
hlt
test
stc
ffreep
js
stos
xchg
fldcw
loope
addr16
cmc
cli
aad
sbb
dec
dec
pop
fisttpll
sbb
or
sbb
mov
arpl
mov
out
imul
push
sbb
push
cmp
repnz
mov
nop
pop
sahf
jae
out
xor
in
loope
xlat
cwtl
xor
adc
xchg
xor
sbb
push
sub
and
lret
mov
in
je
xchg
int3
mov
and
lret
sub
jb
mov
cmp
ret
sbb
in
out
cmp
jl
addr16
call
cmp
add
mov
ret
aam
loope
in
adc
scas
idiv
push
outsl
in
mov
add
cmp
jae
aas
push
dec
fsubrl
jmp
jecxz
aad
push
ret
and
leave
adc
push
adc
mov
sub
mov
sbb
sti
sahf
add
inc
in
test
out
adcb
pop
fdiv
xor
ret
cmp
js
and
adc
add
fdivr
cmp
stos
ss
jne
bound
or
lcall
inc
sahf
faddl
xchg
and
lret
in
sbb
jg
or
mov
inc
addr16
rorb
scas
loopne
fdivs
sbb
push
sub
mov
aad
faddp
xor
loop
rcr
sahf
and
sub
je
mov
test
xchg
fsubrs
push
push
scas
jle
mov
cmp
cld
fldenv
cmp
push
mov
sahf
cmp
pop
mov
shrl
xlat
cltd
jb
in
fisubl
lods
ret
jmp
int3
insl
loope
push
insb
mov
cmpsb
xor
inc
sbb
jmp
or
out
je
xor
mov
fmull
pushl
inc
ret
imul
lods
ljmp
adc
in
fadd
dec
sbb
mov
push
cld
pop
icebp
dec
pusha
mov
dec
bnd
in
push
xchg
fmul
subb
faddl
ds
sbb
ljmp
sbb
or
sub
mov
cmp
jmp
in
fistps
in
jno
int3
push
js
aaa
or
jbe
clc
call
iret
and
std
stc
sahf
stc
fisttps
rcll
cli
adc
pushf
add
shlb
xlat
arpl
insl
jb
int3
push
aad
mov
xlat
fists
sbb
jno
ds
imul
or
jmp
lods
mov
sub
lret
or
push
outsb
int3
mov
lea
in
test
fcoms
push
or
shl
adc
xor
in
inc
pop
mov
jge
push
dec
mov
ds
adc
ds
out
inc
in
aaa
daa
add
sub
push
aad
daa
cmc
int
cmp
in
out
shr
sbb
xchg
insl
xchg
or
mov
clc
mov
and
loope
jl
clc
ljmp
and
sbb
repz
cmp
cmp
outsl
rclb
pop
mov
ret
jp
dec
or
inc
jmp
dec
fimuls
std
pop
out
enter
test
jp
pop
fwait
test
rcrl
lods
inc
push
adc
pushf
sbb
pop
test
jno
lahf
xchg
jg
jno
pop
mov
imull
mov
xchg
or
and
les
sahf
inc
cs
ds
mov
subl
icebp
mov
xchg
xchg
sbb
pop
test
jle
or
ss
imul
cli
lret
jecxz
xchg
cmpsb
dec
shlb
push
int3
mov
jp
add
jns
mov
sbb
cmp
fsubs
insl
aam
mov
sub
xchg
sub
mov
adc
mov
or
jecxz
pushf
xor
fcomps
pop
call
ds
imul
jnp
fdiv
and
mov
push
push
mov
mov
cmp
pop
inc
sub
pop
pop
fnsave
cld
pop
xor
pavgb
les
pop
push
ret
and
jb
cmp
inc
mov
pop
mov
jmp
push
pop
int3
hlt
or
jge
jecxz
cmpsb
sub
imull
in
xor
sbb
ds
in
lods
decl
jge
mov
loopne
jnp
icebp
cltd
or
in
decb
insb
cwtl
call
in
jl
sbb
xchg
xlat
cwtl
fwait
mov
je
stos
jp
sbb
sbb
xchg
mov
repnz
lcall
and
push
inc
bound
stc
and
enter
ret
mov
mov
shlb
ja
lods
jae
inc
cltd
mov
sbb
daa
inc
imul
xor
mov
sbb
pop
add
xchg
stc
add
and
pop
pop
shlb
pop
cwtl
inc
ret
mov
jecxz
jb
pusha
iret
dec
imul
or
xor
push
and
xchg
cmpsb
daa
dec
inc
ljmp
sbb
add
mov
adc
pop
jo
cli
mov
out
xchg
inc
xchg
and
into
mov
adc
stc
and
dec
shl
and
pushf
loope
inc
gs
cmc
cmp
adc
adc
xor
or
mov
dec
push
mov
adc
jae
mov
loope
mov
push
cmp
lahf
fmull
sbb
xchg
in
out
jmp
xor
hlt
insl
jnp
push
mov
into
push
jmp
or
sub
test
out
sti
cli
cmpsb
cmp
mov
shll
test
sub
sbb
xor
dec
test
mov
sbb
pop
jp
add
out
scas
ret
adc
xchg
or
mov
xchg
iret
ljmp
or
cmp
adc
es
in
cmpsb
cmp
stos
aam
in
hlt
fdivrp
xor
push
repnz
enter
pushf
ja
mov
sti
mov
xor
cmp
cmp
xchg
leave
hlt
inc
hlt
sarb
test
repnz
jg
mov
cmc
repz
rorb
mov
jge
outsb
mov
add
or
add
ficoml
jmpw
lahf
out
lret
pusha
jl
fimuls
mov
push
xor
mov
lret
mov
jl
sti
push
xor
jo
cmp
cmp
sbb
je
mov
neg
push
or
adc
stos
xor
hlt
pop
in
cmp
inc
leave
shr
aas
xchg
jl
loopne
sbb
aaa
sbb
cmpsb
mov
xchg
sub
inc
loope
pop
inc
mov
adc
ret
xchg
adc
mov
jg
sbb
inc
lods
mov
sub
call
shr
lcall
ds
fnstcw
jae
int3
push
lods
adc
loopne
mov
xor
xor
sub
adc
gs
and
fisubrs
xchg
mov
or
rcrb
cltd
sub
or
lods
in
or
dec
fs
loop
pop
adc
sahf
xlat
fidivl
fwait
fs
cmpsb
xchg
pop
mov
lret
inc
enter
into
leave
xchg
lahf
loop
aas
cmc
xor
leave
sub
or
dec
pop
pushf
sahf
inc
imul
int3
mov
pop
push
adc
cli
sahf
scas
out
hlt
fiaddl
jp
sbb
shrb
mov
scas
xor
inc
mov
std
sti
or
add
xchg
rcll
fs
xor
ljmp
dec
pop
jmp
lahf
dec
sahf
loop
jnp
negb
mov
xchg
sti
mov
cltd
rol
lods
lcall
or
clc
into
mov
cmpsl
scas
adc
lret
mov
dec
cmpsb
lods
xchg
ficoml
pop
cmp
in
push
mov
mov
mov
aad
mov
stos
sbb
stc
push
shlb
clc
in
std
or
xchg
das
mov
and
and
mov
repnz
xor
pop
push
or
test
icebp
or
dec
adc
call
add
mov
xor
mov
xchg
pop
cmp
iret
lds
push
mov
fnstsw
sbb
sub
mov
out
xlat
fidivl
mov
pop
sbb
jne
xchg
mov
lea
fcomp
mov
movsl
jmp
call
cmp
adc
repnz
mov
iret
push
mov
lods
ljmp
ljmp
ret
mov
scas
add
xor
outsb
xor
push
xor
imul
fiaddl
or
shl
call
imul
pop
and
push
cli
mov
clc
xchg
pop
jg
or
pusha
repnz
fisttps
lcall
adc
repz
sub
in
ss
in
mov
mov
dec
shlb
inc
mov
or
ljmp
xchg
sbb
out
mov
jge
es
pushf
jecxz
cmp
add
loopne
mov
movsb
test
loop
sahf
dec
popf
mov
pop
push
xor
lea
negb
int
xor
aad
adc
sbb
sbb
into
shl
xlat
and
shr
pop
push
or
add
lods
adc
adc
xor
xor
cmp
pop
mov
jb
fbld
jb
jb
sub
fldenv
into
mov
ret
cmp
cld
jp
add
sub
jmp
push
into
addr16
cmpsl
outsb
mov
mov
je
test
adc
push
out
mov
fistpl
ficompl
cltd
int
icebp
sub
xor
aad
cwtl
pop
xor
adcl
sar
call
dec
sahf
push
xor
mulb
aam
aad
loopne
ret
nop
into
mov
insl
stc
shr
jmp
jmp
sahf
mov
or
jno
jno
mov
xlat
test
xor
cmp
pop
insl
fimuls
cs
ret
xchg
dec
aam
js
lret
cmc
mov
out
std
call
pop
xchg
push
cs
cmp
shlb
mov
sbb
imul
and
xor
ss
add
mov
push
mov
jle
add
jl
incl
arpl
jnp
addr16
cltd
pop
in
sub
adc
xchg
lea
jmp
inc
cmp
dec
aas
xor
cwtl
cmpl
or
and
loopne
fsincos
fists
sub
adc
ljmp
push
sahf
add
mov
ret
xor
mov
ss
xchg
pop
jbe
xor
test
lea
cs
jnp
std
jl
pop
ret
pop
ror
jecxz
pop
mov
push
cwtl
out
xchg
lds
inc
aam
pop
movsb
pop
rolb
dec
inc
mov
cli
mov
xor
mov
add
cmp
repnz
or
push
lds
cmpsl
lods
dec
pop
pop
dec
push
cli
add
sahf
cli
in
lahf
and
push
test
add
inc
dec
andb
imul
inc
cs
cmp
push
pop
movsb
mov
fisttpll
aam
dec
xchg
in
lcall
adc
pusha
jmp
xor
out
fucom
es
cmp
movsl
cmp
out
ja
mov
push
or
shrl
sti
push
pop
push
sahf
dec
int
mov
imul
imul
test
lret
fisubl
in
aad
lods
xchg
xor
or
lock
decl
pop
inc
shrb
inc
fnsave
mov
and
xlat
sub
xchg
cs
enter
mov
add
addr16
pop
cmp
push
or
mov
add
out
jle
adc
fiaddl
mov
into
leave
adc
xchg
cld
in
test
les
xchg
cmp
adc
sbb
lcall
sbb
lods
call
cwtl
push
pop
cmpsl
hlt
in
pop
add
sub
xchg
adc
sahf
mov
xchg
xchg
xchg
mov
adc
test
xchg
xlat
insb
sub
popa
and
xor
xchg
or
dec
xchg
cli
sahf
sbb
cmp
mov
aad
fidivrl
xor
sbb
cs
scas
jge
es
shll
or
push
adc
int3
adc
mov
xor
xlat
add
mov
or
xchg
iret
aaa
inc
xor
es
push
popf
loopne
mov
mov
dec
xchg
fstpt
fs
dec
sbb
jmp
repz
int3
icebp
sub
cmp
out
push
outsl
andb
sub
xor
test
mov
add
clc
fstpt
ljmp
adc
add
mov
xchg
test
pushl
push
sti
pop
test
mov
inc
scas
fmuls
loop
push
xor
out
xchg
or
pop
sbb
aam
pop
sbb
add
push
sahf
jle
mov
xchg
stc
mov
fwait
add
jbe
mov
and
mov
pop
pop
ljmp
mov
push
ret
fstps
add
lock
jb
in
in
adc
mov
int3
adc
mov
hlt
xchg
and
out
cmp
jle
cld
dec
and
and
cmpsb
push
cmpsb
cli
push
mov
loop
shl
or
dec
ljmp
dec
push
mov
in
loope
dec
xchg
push
shl
xor
sub
fidivrl
scas
lea
sar
mov
sbb
pop
adc
sub
rolb
pushf
sbb
sub
adc
out
idivl
sbbl
ret
and
push
push
insl
add
jbe
in
pop
es
push
dec
shll
sbb
and
xchg
mov
in
pop
xor
ret
ret
das
adc
lcall
sbb
adc
mov
sub
mov
test
and
and
jp
ja
fimull
mov
mov
mov
repnz
into
es
imul
in
fstpt
insb
lret
pop
xchg
imull
leave
ret
shlb
cwtl
icebp
pop
jbe
push
aad
stc
test
adcb
cmpsb
stos
notb
sbb
or
xchg
adc
xchg
orb
adc
xor
add
or
adc
jle
ljmp
xor
in
xor
adc
lea
adc
mov
jmp
inc
inc
ja
shll
popa
xor
sbb
subl
leave
mov
rcll
inc
ss
sub
mov
shlb
mov
cmp
jae
and
sbb
cmpsl
lret
jae
xchg
add
pusha
dec
shr
hlt
rclb
cmc
outsb
jl
andl
fidivl
mov
lahf
push
jbe
cld
mov
add
inc
add
and
loopne
add
xchg
sub
pop
push
pop
xchg
adc
in
adc
xchg
xor
or
sub
adc
jmp
lcall
xchg
cwtl
jnp
pusha
cltd
pop
adc
inc
mov
push
xor
mov
cmp
dec
mov
push
leave
outsb
fbld
ret
lcall
push
pushf
adc
xchg
cltd
xor
pop
xor
add
inc
or
xchg
subl
adc
or
shll
loop
jle
push
repnz
repnz
dec
lret
xchg
enter
dec
jne
shll
cmpsb
mov
mov
rolb
cmp
mov
std
movl
cmp
push
stc
into
icebp
push
jl
out
in
xchg
scas
out
lcall
pavgb
push
push
call
add
dec
std
sti
push
test
aas
cs
sbb
fxch
fadds
jg
mov
xchg
mov
push
xchg
mov
sbb
or
add
mov
or
cmpsl
adc
adcl
adc
and
mov
shl
cld
dec
pushf
dec
jo
outsl
popa
outsb
add
dec
lret
xchg
outsl
push
push
inc
arpl
shrl
cli
xchg
xlat
mov
lahf
mov
sbb
xchg
cmpsl
mov
cmp
imul
xor
icebp
insb
push
fcom
test
lds
insl
add
jmp
or
in
insl
adc
xchg
xlat
mov
ror
sub
nop
xchg
loop
dec
sub
pop
lds
jno
aaa
in
subb
or
push
mov
rolb
push
push
into
adc
sbb
xchg
or
out
fsubr
test
xor
shll
in
jg
mov
dec
sub
inc
xor
xchg
repnz
mov
jl
pop
in
scas
or
pop
mov
lcall
ja
mov
subl
cs
jge
cmpsb
dec
pop
adc
in
or
and
pop
xor
notl
dec
inc
cli
push
pmuludq
fcoml
icebp
sti
jge
jns
xchg
lret
add
sub
int3
jl
mov
adc
mov
std
xchg
test
push
in
add
fdiv
mov
xlat
dec
dec
xor
mov
loop
xor
or
hlt
xchg
fcoms
mov
sbb
xchg
xchg
mov
pop
into
jecxz
movsl
andl
inc
je
fnstcw
xor
or
jo
cwtl
lret
pop
inc
mov
mov
xchg
sbb
jmp
dec
jge
mov
sub
cmp
sub
mov
cmp
xlat
xor
or
or
or
sub
mov
rcr
dec
jb
lret
add
outsb
sub
fldcw
cmp
addr16
cmpsb
add
fwait
mov
xor
je
pop
xor
jp
mov
mov
shll
fildll
push
in
xor
inc
jecxz
inc
jae
test
mov
call
aad
cs
inc
adc
mov
inc
inc
dec
cli
or
inc
imul
cmpsl
lods
and
add
jmp
mov
fwait
lds
test
jae
repnz
test
in
mov
movsb
jae
fsubr
mov
xchg
sarb
sub
and
movsb
lret
xchg
stc
outsl
add
cli
lahf
xchg
jnp
pushl
out
pop
icebp
cli
adcb
pop
mov
push
mov
lret
aas
adc
out
shlb
mov
adc
mov
add
or
xor
movb
mov
push
mov
cmp
pop
mov
push
int3
gs
adc
testb
or
cmc
xor
lock
or
call
cmp
addr16
xor
pusha
mov
loopne
cmp
xchg
jmp
cmp
imulb
jno
push
mov
jmp
sti
inc
mov
ret
arpl
and
cmp
les
push
or
jl
mov
xchg
and
xchg
add
add
insb
add
popa
jmp
push
add
add
cmc
push
imul
push
in
pop
xchg
stc
mov
sti
xor
adc
icebp
test
push
or
pop
xchg
pusha
ds
xchg
sbb
xchg
mov
test
cmp
out
ja
rcrb
lods
les
rol
lea
leave
add
xchg
jle
in
mov
cli
xlat
or
insb
mov
mov
dec
pop
sub
mov
push
fstl
lret
xchg
outsb
das
mov
push
fcomps
icebp
dec
xchg
mov
adc
lods
mov
mov
decl
lcall
insl
cmc
pop
xchg
xlat
cltd
add
mov
sbbl
push
aam
sbb
dec
inc
out
mov
push
lods
inc
imul
sbb
sbb
int
cmc
dec
push
push
pop
sbb
les
and
sti
push
jl
mov
add
lods
dec
xchg
and
fcoms
add
cmp
or
xor
dec
fdivrl
adc
dec
cmp
xchg
push
sub
cmp
mov
popa
cmp
nop
aam
icebp
aam
mov
add
mov
jp
test
insl
sub
mov
shll
out
ret
adc
jne
in
add
sub
movsl
sarl
lock
push
xchg
into
xchg
shrb
mov
fsubrs
fisttpl
das
stos
or
std
stos
jne
xchg
test
jg
lods
cli
sahf
loopne
iret
jne
inc
sub
and
popa
add
lcall
test
movsl
cwtl
loopne
ficoml
push
push
inc
pop
repz
jecxz
and
or
jecxz
or
ret
jnp
es
ss
or
movsl
xchg
xor
shlb
addr16
pop
add
cmp
or
sub
sahf
cli
mov
cld
call
in
push
xor
or
lret
add
jle
insl
jmp
jnp
mov
jno
aam
mov
mov
out
sub
jl
adc
pusha
add
jecxz
sti
sbb
sub
pushf
pop
mov
aam
add
pop
adc
push
jmp
or
arpl
inc
or
jge
xchg
adc
addb
das
pop
adc
out
sbb
xchg
adc
fs
and
mov
sub
push
rolb
rorb
es
test
push
sarb
adc
xor
shrl
repz
inc
cli
and
int3
and
xor
rcll
sbb
cmpsb
out
leave
ss
stos
inc
test
and
pop
lea
lahf
test
sbbb
test
cmp
cmp
arpl
cmpsl
push
movsb
pop
outsb
imul
adc
lret
cltd
xchg
gs
into
sbb
call
fcoms
or
fisubrl
outsb
xchg
mov
hlt
mov
adc
addl
cmpsl
dec
mov
std
shll
movsl
jne
movsl
insl
iret
lods
cmp
lcall
into
out
in
xchg
jge
shlb
adc
mov
mov
cld
cmpb
cs
fwait
cli
jmp
rcrb
popa
xchg
adc
gs
fwait
cmpsb
movsb
in
fmulp
xchg
dec
mov
add
pop
inc
popf
lret
xor
std
mov
cmpsb
mov
xchg
and
xchg
fwait
pop
push
xchg
pop
pop
cs
scas
add
adc
xor
insl
push
enter
adc
mov
ret
cmp
daa
sbb
mov
insb
dec
cmp
rclb
or
cmp
test
mov
xor
bound
push
push
test
test
cli
int
sbb
cmp
pop
pushf
adc
mov
arpl
repz
add
cli
stos
loopne
std
pop
or
daa
inc
cmp
sahf
mov
pushf
push
sahf
cmp
inc
mov
xchg
adc
jne
sti
xchg
gs
or
sbb
in
cmp
movsb
test
sub
adc
push
in
pushf
add
inc
aaa
adc
sarb
xor
daa
push
int3
scas
std
outsl
sbb
sub
mov
imul
sbb
out
mov
cs
or
fs
add
fs
sbb
sub
xchg
repnz
ficomps
into
lret
cmp
adc
xlat
cmp
or
pop
or
cmc
fildll
clc
mov
js
stc
sub
call
scas
in
into
sub
adc
push
out
push
bound
in
jb
mov
mov
cs
imul
out
ss
and
push
shr
sub
rcll
or
icebp
xlat
or
push
sub
mov
call
sbb
pop
add
int
inc
xchg
mov
jge
cmp
outsb
enter
fdiv
adc
sahf
jmp
sub
lcall
inc
jnp
loop
frstor
jle
xchg
int3
repz
jle
push
sbb
pop
inc
or
fildll
loopne
cwtl
mov
fsubr
xchg
xor
cmpb
sahf
push
xor
fstps
test
jle
mov
out
into
xchg
cld
mov
jge
mov
add
pop
cmp
cli
shr
cmp
adc
in
int
cmp
or
out
xchg
out
jo
scas
mov
jp
data16
mov
xchg
insb
ljmp
icebp
cli
push
inc
dec
lods
xchg
ja
into
test
mov
and
mov
mov
or
cltd
dec
aam
mov
xchg
pop
imul
xorb
movsb
outsb
dec
jnp
mov
jno
sarb
push
rcrb
std
cltd
xchg
mov
jge
sub
cld
sub
mov
cld
mov
insb
add
mov
cli
pop
ret
insb
mov
in
cmp
push
sbb
cltd
pushf
sub
mov
movsl
scas
lock
das
stos
and
or
mov
xchg
out
dec
push
cmp
icebp
ljmp
mov
or
iret
pop
rorb
or
push
xor
cmp
pop
popf
or
xor
lcall
sahf
dec
xchg
call
xor
hlt
adc
movsl
mov
ljmp
sub
divb
into
les
call
jp
push
add
fisubs
sbb
xchg
push
xor
loop
or
mov
negl
jp
insl
cltd
clc
mov
add
xor
or
adc
rorl
or
sub
sbb
rclb
stos
cmp
mov
pop
cli
adc
pop
mov
mov
outsl
or
xor
rcll
in
iret
add
mov
inc
lret
jbe
icebp
adc
pop
cld
bound
shl
sub
outsl
mov
outsl
fnsave
lret
xchg
orb
xchg
popf
je
jmp
mov
imul
cmp
add
ret
push
sbb
xchg
daa
push
mov
test
imul
pop
jmp
aaa
or
lods
jecxz
pop
lahf
roll
stc
or
xchg
push
sub
movsl
sbb
cmpsl
pop
push
scas
or
mov
and
repz
or
adc
push
dec
adc
pop
pushf
or
push
and
loop
mov
add
hlt
popf
xchg
cmpsb
stos
mov
mov
push
divl
inc
shlb
subl
rclb
sti
push
jbe
rcrl
mov
jmp
adc
push
push
inc
shl
cs
sbb
icebp
pop
jo
mov
jl
mov
pop
adc
push
in
add
fiaddl
aam
divl
imul
jmp
out
hlt
mov
cmc
inc
hlt
adc
call
pop
fnstsw
mov
int
push
mov
mov
add
ret
sub
xchg
push
roll
arpl
rcrb
adc
cmp
imul
sbb
cltd
push
adc
xchg
push
mov
push
xchg
jnp
add
mov
dec
sbb
xor
negl
pop
xor
sar
les
test
push
ret
sbb
fistl
dec
testl
or
pop
daa
cmp
push
shlb
lcall
fmulp
cmp
shr
xor
fcoml
cmp
aam
icebp
outsb
test
jecxz
test
mov
out
cli
push
shl
push
xchg
sub
cmp
jb
inc
mov
pop
push
mov
push
dec
ljmp
test
ljmp
aam
or
cmpsl
mov
out
jno
xor
add
or
rclb
fwait
lock
push
jl
mov
xor
mov
leave
leave
dec
jle
ds
out
cli
pop
jb
fdivs
loop
jne
push
cmpsl
outsb
add
and
loop
cmp
mov
stos
push
dec
lcall
int3
xlat
jecxz
inc
cmpsb
xor
mov
ds
insl
mov
fdivl
mov
xor
push
pop
jae
cmp
int3
pushl
shll
insl
or
lea
lds
sub
and
repnz
ja
scas
jle
mov
cmc
stos
xor
test
add
or
cmp
jnp
test
xor
in
lahf
cmpsl
rorl
ret
mov
test
mov
lock
xchg
fidivrs
dec
lcall
sub
ret
push
mov
mov
pushf
and
cmpsl
cli
sbb
shl
in
xor
pop
push
nop
cmpsl
insb
mov
loop
push
dec
or
ret
pusha
popf
pop
mov
out
mov
mov
fs
ljmp
aad
je
shr
ret
test
and
in
into
sbb
mov
iret
hlt
sbbl
shlb
push
sti
cmp
call
sbb
mov
sahf
mov
push
in
jmp
repnz
cmp
std
dec
mov
mov
xchg
cmpb
mov
xor
fisttpl
adc
dec
dec
xchg
ss
pop
mov
lds
sti
cmp
sub
adc
fiadds
int
inc
ret
subb
in
xor
loop
ds
hlt
jne
xchg
push
adc
daa
sub
adc
cmpsb
imul
adc
ret
out
mov
insl
push
adc
mov
int3
xor
repz
ret
pop
mov
push
pushf
sbb
pop
xor
cmp
outsl
cmp
sarl
xchg
mov
and
ret
movsl
es
xchg
push
or
ljmp
hlt
sbb
es
xor
mov
xchg
sti
xchg
leave
mov
enter
sub
lock
shrl
dec
push
call
or
mov
test
mov
les
pop
or
hlt
pslld
xor
xor
adc
push
and
test
or
push
sub
xor
cmc
xchg
shl
sbb
lds
inc
push
ret
cld
lea
cld
leave
stos
out
push
mov
xchg
jnp
sub
cmp
jae
jge
test
and
call
shl
inc
fistps
lahf
jecxz
dec
in
sbbl
jmp
and
cmp
daa
dec
icebp
sahf
ret
or
movsl
test
xor
pop
pop
mov
rcrl
fldln2
xchg
shl
adc
and
or
cmp
aas
xor
jecxz
pop
or
adc
ja
stos
ret
movsl
sarl
in
lods
jecxz
test
lcall
sti
or
xchg
mov
adc
loope
sbb
leave
adc
ror
jp
pop
xor
in
jl
ret
push
mov
jns
fsubrl
sub
into
loop
fisubs
roll
sti
insl
and
sub
inc
fnstsw
push
mov
sub
adc
pusha
mov
repnz
fnclex
sbb
pop
je
mov
mov
lcall
fcmove
adc
mov
jp
test
sbb
xorl
push
fs
push
fnstenv
fcomps
std
and
add
mov
push
mull
scas
pop
jg
pop
lcall
repnz
notb
cli
add
into
jb
xchg
in
imul
std
jp
jecxz
dec
fcmovne
pop
dec
push
fimuls
push
out
ret
jle
xchg
insb
xor
jecxz
mov
mov
imul
mov
pop
pop
pop
call
xchg
dec
jnp
jno
test
adc
sub
xor
and
scas
mov
stos
xchg
mov
push
mov
mov
mov
shrl
stos
scas
xchg
push
lret
repnz
mov
mov
pop
dec
mov
out
dec
jnp
pop
jp
adc
test
and
sbb
cmp
es
out
push
imul
sbbl
and
cmpsl
lret
scas
psllq
xor
call
mov
sub
imul
adc
repnz
jle
adc
ret
xchg
cmp
or
fldcw
add
gs
fsts
iret
sahf
ja
xor
orb
scas
cmpb
clc
loop
xchg
fmul
push
pop
loop
mov
sbb
lcall
or
xor
cmp
lcall
adc
mov
inc
repz
dec
xor
push
dec
pcmpgtb
mov
and
sbb
jns
insl
test
nop
leave
xchg
in
dec
js
int
cmc
or
sbb
testl
cmpsl
push
rcrb
lds
xchg
mov
lret
lods
xor
sub
pop
or
mov
mov
cli
push
lock
incb
lahf
add
add
jge
push
adc
movsb
lds
cmp
sahf
iret
dec
or
or
xchg
loope
loop
das
pop
mov
and
dec
ret
shlb
shl
mov
jecxz
add
cmp
mov
pop
add
in
pop
cmpsb
out
leave
repnz
push
iret
das
in
mov
lock
into
mul
outsl
cmp
mov
into
cmp
out
pop
lret
int3
sbb
lods
in
hlt
sub
push
arpl
or
adc
stc
push
imul
fcmovnu
icebp
je
and
and
loopne
jmp
mov
dec
jnp
dec
sbbl
mov
push
lds
in
sahf
sbb
mov
icebp
sarb
mov
inc
mov
test
jo
mov
inc
in
add
adc
fisubs
mov
sbb
jge
mov
scas
das
in
jmp
icebp
adc
test
rclb
or
roll
es
cmp
rcll
add
lds
push
or
or
sub
into
cmpb
mov
pop
cmp
jnp
mov
xor
outsl
cmpsl
push
push
and
fidivs
ja
cmp
iret
inc
adc
jecxz
out
push
and
inc
sub
cld
dec
cli
jge
cmp
pop
cltd
lahf
xchg
push
inc
out
ss
xchg
ja
ret
xor
mov
and
add
lods
scas
std
cmp
cmp
shr
stos
negl
insl
xlat
cmp
and
bound
push
sahf
cmp
push
js
inc
add
hlt
mov
mov
mov
int3
out
xchg
in
mov
cmpsb
or
orb
stc
sub
enter
sar
jp
adc
loope
sub
dec
out
sbb
mov
cmpb
add
jae
repnz
fwait
cltd
xchg
out
xlat
mov
repz
sub
mov
push
adc
aam
fwait
mov
mov
stc
es
ljmp
lcall
test
and
test
negl
mov
add
test
mov
xchg
pop
sub
fwait
push
imull
pusha
cld
shll
xchg
xchg
xchg
pop
outsb
test
aam
lret
int3
mov
push
rcrb
or
lcall
cwtl
dec
jge
js
mov
sbb
dec
jns
es
cmpsb
jne
xor
jmp
push
insl
sub
lods
sbb
jae
or
sbb
xor
mov
adc
add
jecxz
jbe
dec
neg
pop
inc
insl
lret
adc
rorb
jecxz
xchg
aaa
jl
rclb
mov
insb
sti
xor
push
jmp
cmp
xor
fcmovnb
aas
mov
lds
loope
fwait
mov
cs
shl
es
push
adc
or
xorb
fstp
in
stos
in
stc
cmpsb
jo
pusha
add
fistps
sbb
mov
adc
adc
push
fstpl
popa
sub
int3
cmpsl
shlb
in
mov
xchg
or
pop
in
andb
dec
out
mov
cwtl
cmpsb
ret
pushl
inc
push
and
int3
adc
inc
push
mov
stos
or
repz
mov
fstps
adc
sub
lret
in
mov
sub
mov
ljmp
scas
adc
jecxz
shr
xchg
rcrb
sub
subl
inc
cmpsl
push
test
ret
sub
gs
mov
mov
mov
shll
lods
call
pop
cli
pop
out
incl
or
or
fcomps
test
sub
aam
push
loop
jmp
rcrl
hlt
bnd
xchg
into
ljmp
push
in
clc
xchg
cmp
inc
pop
daa
cmpb
mov
into
ljmp
shll
out
and
cmp
xchg
lods
adc
stc
lret
test
sbb
adc
in
adc
popa
int
pop
shrb
decb
insb
enter
mov
xchg
mov
insb
adc
repnz
fxch
adc
cli
add
dec
adc
inc
lods
adc
cmp
cmp
or
and
add
push
xchg
mov
stos
lret
rcrb
dec
imul
pop
ror
fdiv
jbe
bound
sbb
push
xor
or
push
jae
int3
sbb
repz
mov
cmp
sahf
lods
loop
popa
dec
inc
inc
xchg
add
lea
or
hlt
pop
pop
mov
xor
repnz
lods
adc
mov
pop
into
pop
sbb
test
sbb
cmp
sub
xchg
hlt
mov
dec
sti
push
add
outsl
inc
iret
fwait
imul
pop
sbb
loop
jmp
sbb
clc
inc
xchg
push
mov
mov
aam
mov
pop
mov
aad
mov
or
xchg
lret
or
lcall
cs
push
loop
popf
daa
cmp
lret
bswap
jns
jge
sbb
mov
cmp
add
push
test
fcmovbe
adc
fidivrl
or
lret
orl
adcb
rcrb
mov
out
ficompl
dec
jb
jne
testl
insl
xchg
repnz
mull
mov
int
or
out
ret
ss
xchg
adcl
arpl
pop
mov
and
jecxz
xchg
mov
cs
xchg
adc
sub
adc
ret
mov
stos
sub
std
xchg
ret
xchg
or
sub
ret
rolb
xor
adc
pusha
cmpl
xchg
sub
xchg
xchg
sahf
lret
or
loop
shl
pop
dec
inc
jns
or
cltd
daa
fsub
mov
xor
inc
add
xor
pop
icebp
in
out
jp
xchg
or
ret
je
aad
mov
out
mov
cmp
inc
icebp
loopne
push
icebp
mov
cltd
mov
loope
ret
outsb
xchg
and
mov
mov
stc
iret
xchg
je
or
rorb
out
jge
adc
xchg
std
rorl
xchg
push
stc
mov
pop
pop
pop
mov
or
jmp
dec
rolb
loop
xchg
lret
call
mov
fisttpl
out
mov
mov
dec
lret
loopne
xchg
jnp
pop
stos
shlb
icebp
stc
jg
xor
or
mov
xor
cwtl
fucomp
adc
leave
or
mov
lret
jne
cmp
cmc
sbb
mov
jp
adc
not
xchg
adc
xchg
sti
out
or
mov
xchg
into
pusha
arpl
or
popf
inc
jnp
out
jno
cwtl
xchg
insb
ret
rcrl
rcl
repnz
xor
aam
repnz
mov
xor
test
jp
int
fisttps
xlat
fwait
jmp
jl
sbb
adc
pop
or
stc
lcall
xor
ja
and
dec
fsub
repz
out
cld
dec
clc
mov
int3
js
in
adc
inc
fisttps
rclb
repz
mov
fdivr
mov
or
fstpl
or
mov
stos
into
into
fsub
push
fmul
add
push
into
sub
in
inc
test
out
push
ret
shr
rclb
mov
clc
call
xor
sti
mov
inc
cmpsl
lods
cltd
push
les
inc
xchg
xor
fwait
cmp
push
pop
jp
shlb
out
pop
adc
imul
repz
fcompl
out
sbb
dec
pop
in
lods
dec
jp
cld
pop
inc
lret
mov
xchg
mov
xor
dec
aas
cld
sbb
out
mov
jecxz
mov
xchg
dec
in
pop
decb
inc
sahf
adc
or
stc
dec
pushf
lahf
push
xor
data16
mov
and
cmp
xchg
xor
push
pop
add
jmp
repz
data16
jle
icebp
shl
out
mov
mov
insb
cld
out
lock
cmc
adcl
pop
insb
test
movsb
xchg
pop
in
dec
loop
xor
int
andb
sahf
lds
mov
shr
cmp
cld
std
imul
repz
mov
sarb
scas
and
dec
popf
iret
jmp
and
add
arpl
insb
orl
jnp
and
mov
or
iret
cmpsl
jne
loopne
jae
stos
popa
je
test
mov
fsubrl
int3
jno
icebp
repnz
mov
stos
pop
ds
je
inc
jecxz
lret
pop
icebp
mov
stos
push
lcall
adc
pop
lea
rorl
icebp
xchg
push
std
insl
in
mov
insb
dec
pop
data16
jno
cmp
mov
fidivl
out
lcall
sub
in
std
popa
aam
es
push
jecxz
inc
into
push
cmpsl
in
and
inc
data16
cmp
sub
imul
enter
jnp
inc
cmp
mov
xor
mov
mov
imull
mov
add
iret
or
inc
outsl
ljmp
cmp
and
repnz
xor
or
push
push
ret
clc
push
and
mov
or
es
testl
inc
dec
insb
sub
sbb
jle
js
xlat
icebp
sub
xchg
mov
jge
mov
cmpsl
in
sub
cs
xor
jecxz
add
mov
mov
into
cmpsb
into
aad
cmp
push
xor
dec
addr16
or
orb
pop
push
mov
outsl
mov
mov
in
sub
dec
mov
mov
jmp
pop
fadd
int
filds
arpl
cmp
pop
cld
js
stos
movsl
mov
aas
sahf
add
or
insb
push
adc
aad
jbe
hlt
jmp
mov
pushl
cs
test
jl
jmp
fcmovnbe
loop
add
lahf
push
stc
sahf
sbb
loopne
dec
xlat
or
xchg
incl
xchg
shl
adc
shrl
pop
mov
push
mov
mov
adcb
xlat
sub
sbb
push
in
push
xchg
push
subb
jge
lods
scas
dec
cmp
cmpb
int3
push
dec
mov
push
int3
stos
je
pop
hlt
fnstsw
fnstenv
add
or
xchg
lret
ficoml
pushf
or
push
or
jb
xchg
mov
mov
jmp
pop
jle
je
jns
xchg
enter
fidivrl
inc
icebp
lcall
lock
insl
mov
sub
leave
cmc
dec
testl
cld
jecxz
mov
sbbb
gs
adc
add
pop
xchg
xor
test
notl
and
out
stc
lcall
jbe
popf
js
cltd
lea
test
fisubs
mov
test
repnz
sbb
jg
in
sbb
and
cmpsb
jns
jg
or
jno
xor
or
adc
fmul
lods
fisttpl
fwait
add
jno
outsl
ficoml
mov
fstpl
shl
incl
or
adc
cltd
sub
mov
adc
xchg
and
cmpsl
nopl
push
lds
and
or
or
imul
xchg
inc
mov
jecxz
and
inc
ret
xor
sbb
add
pop
or
pushf
xor
xchg
fldl
mov
scas
mov
sbb
or
pop
rorl
pop
mov
cli
push
fidivl
add
sub
lret
test
call
inc
dec
lods
mov
jo
pop
push
mov
aam
loope
clc
mov
and
xor
sbb
call
cld
shrb
out
ljmp
decb
jae
gs
mov
xchg
xchg
repz
dec
iret
in
or
add
and
xchg
outsl
or
or
mov
xlat
push
push
xchg
out
rorl
xchg
in
jmp
add
mov
arpl
pop
sbbb
xor
out
mov
mov
out
fisttps
cld
xor
push
lret
and
cmc
ret
insl
cmp
movsl
cmp
mov
sbb
lock
sahf
std
pop
add
aam
jnp
addr16
mov
and
movsb
out
and
int
cmpsl
cli
lock
and
ljmp
cmp
testl
mov
scas
mov
xchg
lret
mov
inc
mov
insl
arpl
inc
icebp
inc
rcrb
xchg
xchg
cmp
xchg
je
repz
xor
adc
test
lods
push
or
rcr
cmc
rolb
mov
pop
xchg
inc
mov
imul
push
or
data16
or
jnp
movsl
pop
imul
das
mull
insl
mov
lock
push
mov
lret
ds
mov
jmp
jp
addr16
lods
dec
sub
popf
xchg
dec
mov
leave
jbe
pop
addr16
shll
sbb
lcall
imul
or
adc
xor
sub
and
cmp
jb
mov
mov
jb
inc
xchg
movsl
hlt
pop
ficoms
push
dec
scas
int3
push
mov
add
push
jo
and
mov
or
cltd
sbb
or
add
inc
ret
ss
add
dec
fwait
push
int
clc
mov
push
into
adc
jbe
repnz
xor
movsb
test
imul
neg
rorb
cld
pop
out
scas
adc
and
push
mov
lods
mov
imul
push
movsb
xor
pop
cmpsl
xchg
cmp
shr
out
and
jb
sbb
les
cmp
sahf
scas
out
adc
adc
scas
mov
mov
xor
in
jg
push
jg
push
sub
iret
adc
pop
jg
test
lds
pop
jns
jmp
xor
shlb
pop
sub
pop
repz
or
adc
bound
adc
xchg
iret
sarb
ds
xlat
loopew
rolb
shrb
xchg
inc
cld
div
rolb
inc
inc
cld
in
and
jb
or
stos
jmp
adc
xchg
out
into
add
mov
cltd
xor
imul
sbb
xlat
icebp
jb
fiaddl
adc
scas
mov
leave
js
xor
lock
orb
pop
mov
xlat
test
mov
in
scas
mov
add
jmp
jg
or
and
pop
adc
mov
mov
fsubs
adc
fildl
ja
dec
pushf
xor
cld
sbb
cmp
xchg
xor
loop
test
lcall
push
int3
fsub
inc
out
iret
test
lock
adc
jecxz
scas
sbb
mov
adc
pop
pop
push
les
or
xchg
leave
cli
mov
jg
dec
or
popa
and
int
addl
sbb
mov
scas
loopne
mov
xor
pop
leave
out
repz
push
xor
pusha
stos
lds
rcrl
lcall
mov
mov
sbb
test
cmp
icebp
mov
and
repz
cmp
lea
jecxz
lret
pop
rep
fistpl
lods
movsb
imulb
lea
dec
xchg
pop
out
push
jp
and
sbb
daa
aas
mov
mov
cli
or
or
repz
ret
mov
int3
adc
pop
popa
mov
popf
push
pop
or
dec
popf
push
xor
repz
aam
xor
ds
sbb
jns
frstor
pusha
popf
test
fisubrl
mov
in
or
lret
movsb
repnz
repz
adc
insb
roll
sarl
xor
and
imull
sub
sahf
daa
mov
jbe
sbb
cmp
arpl
lcall
test
imul
aam
sub
jl
or
push
cmpsl
push
cli
inc
sub
hlt
or
pop
or
push
add
flds
mov
sti
inc
xor
jbe
mov
mov
sbb
mov
sub
js
popf
sti
dec
je
jle
and
mov
adc
cmp
lcall
and
and
lret
fwait
mov
stos
stc
lret
pop
icebp
dec
xor
fnstenv
mov
pop
push
ret
pop
roll
xor
push
shlb
xor
ret
inc
rcl
adcl
and
cmpsl
hlt
dec
xchg
adc
xor
xor
movb
xchg
js
adc
in
arpl
cmp
lcall
iret
push
push
out
cwtl
sbb
cmp
cmpsl
cmpsl
pop
popa
dec
aad
or
mov
or
jmp
out
shrl
lcall
and
lcall
sbb
fld
mov
icebp
push
ret
mull
test
cltd
cmp
mov
mov
xchg
sbb
xchg
test
hlt
fsts
pushf
dec
push
lahf
or
js
iret
sbb
out
cmp
mov
mov
cli
sahf
call
sbb
mov
add
jbe
lods
mov
rorl
xor
decl
adc
shlb
cmp
in
push
xor
cmp
lahf
popf
cmpsb
das
fwait
mov
mov
or
dec
sarb
or
cs
out
push
pop
ljmp
and
stc
cmp
mov
mov
sbb
xchg
sbb
jmp
inc
mov
subl
xor
es
add
jecxz
addr16
ret
fs
dec
and
ss
jns
xchg
add
push
push
fstps
test
fisttpll
idivl
mov
lods
daa
push
icebp
sbb
mov
aam
insb
push
jb
fimull
popa
icebp
loopne
cmp
fcmovu
add
scas
sbb
mov
and
outsl
int
je
sbb
fs
xchg
iret
lret
pop
or
rcll
adc
xchg
shr
xor
sub
stos
sbb
mov
lds
dec
es
inc
mov
sub
and
dec
fdiv
lahf
xchg
xor
test
mov
inc
xlat
jmp
xor
mov
aad
sbb
stos
jae
inc
sub
cmpl
xor
adc
pop
add
or
popf
and
shl
outsb
adcl
xchg
into
adc
enter
cmpb
sbb
rorl
ficompl
movsb
add
mov
pop
mov
xor
pop
pop
xchg
mov
and
sub
mov
lret
in
loopne
sbb
push
ret
in
adc
clc
into
or
cli
mov
adc
and
fcmovb
mov
dec
mov
dec
fsubrl
mov
or
xchg
not
adc
sub
xchg
mov
or
sub
cwtl
mov
lea
repz
movsl
insb
repnz
dec
xchg
sbb
inc
adc
dec
xchg
adc
add
dec
fs
mov
or
rorl
and
and
fbld
or
xchg
ror
mov
push
add
xor
stos
test
sarb
lods
sub
inc
les
mov
cmpsb
imul
pop
add
sbb
dec
sbb
pop
push
xor
jecxz
subl
pop
cmp
push
pop
sti
or
hlt
lods
lret
andb
mov
dec
pop
test
mov
cs
repz
inc
jl
stc
cs
xchg
sub
into
fstps
rcll
lock
cld
mov
push
lods
shlb
cmp
cmp
lahf
sti
and
rclb
sub
add
xchg
cld
adc
or
cmp
scas
pop
mov
cmp
test
rorb
jl
lcall
hlt
cmp
or
adc
cmp
mov
lock
mov
cmc
mov
push
fdivr
adc
jno
lcall
pop
sahf
lcall
ss
bound
mov
add
sub
lods
lods
cltd
sub
xor
or
push
and
mov
or
clc
xor
jge
sti
mov
pop
hlt
mov
addr16
mov
or
addb
dec
xchg
adc
lret
rcrb
out
xor
adc
dec
and
jl
xchg
hlt
fimull
push
or
mov
and
and
xlat
in
mov
stc
sub
sub
imul
js
sub
pop
and
push
sbb
jnp
push
out
pop
sbb
ret
xor
fsub
cmpsb
outsb
cmc
cltd
loopne
and
mov
add
int
mov
pop
inc
mov
lret
sbb
call
sbb
enter
xor
addb
jecxz
mov
add
xchg
loop
mov
sti
mov
xor
or
shrb
shl
pushl
mov
xor
icebp
pusha
or
jecxz
out
into
lods
loop
jp
incb
or
jl
xor
jmp
enter
mov
outsb
ror
in
or
xor
pop
inc
inc
xchg
xchg
test
inc
adc
mov
adc
neg
imul
inc
cmp
pop
and
mov
jb
inc
mov
sub
scas
mov
sarl
mov
ljmp
cmpsl
add
sbb
inc
mov
cmp
lcall
mov
loop
rorl
xor
es
xchg
cmp
pop
out
pop
add
adc
mov
or
mov
inc
xchg
adc
xchg
add
sub
and
and
enter
mov
add
or
add
cltd
pop
int3
push
test
jbe
out
int3
in
pop
and
insl
mov
sbb
out
dec
mov
arpl
fs
xor
test
movl
pop
mov
and
mov
mov
pop
add
mov
xor
pop
xor
ljmp
push
pop
test
cmp
repnz
mov
iret
dec
xor
jecxz
push
int3
sti
add
into
push
inc
cmp
mov
jg
hlt
jae
jbe
repnz
test
sbb
test
cmc
sahf
nop
stos
nop
or
popa
gs
and
jmp
test
or
loope
sbb
outsb
mov
adc
jge
cmp
out
mulb
mov
jbe
mov
pop
movsb
jecxz
inc
test
mov
xchg
mov
mov
ret
or
jle
mov
xchg
ret
shl
aas
sub
or
jecxz
shl
pop
xchg
lcall
dec
notb
in
or
mov
rol
in
fxam
std
and
cmpb
and
lock
and
xor
addr16
xchg
inc
xchg
ss
cli
jae
or
xor
fprem
out
cld
mov
popf
ljmp
xlat
pop
subb
inc
pop
mov
scas
subb
push
aad
enter
sub
or
ds
xchg
movsl
cmpl
mov
xor
inc
aaa
pop
adc
xor
jo
fldenv
fldl2e
mov
shl
push
test
aam
cli
mov
fisubrl
in
and
cmp
ret
mov
add
sti
mov
push
pop
dec
push
shl
shlb
inc
cwtl
out
shll
cmpsb
xchg
out
pushf
lods
testl
or
test
cmc
mov
xchg
dec
pushf
out
add
pop
in
push
cmpsl
sti
out
cmp
xchg
xchg
dec
inc
sahf
add
ljmp
in
cmpsb
cs
negl
stc
out
cmc
lret
xor
and
xor
xchg
insb
loopne
rcrl
jp
dec
mov
mov
fcmovb
sub
outsb
cli
mov
into
lret
xchg
lcall
jbe
dec
daa
int
mov
add
or
ja
xchg
idivl
or
int3
pop
bnd
cmp
int
adcb
push
sbb
orl
fprem1
rorl
sarl
mov
scas
mov
pop
add
xchg
adc
sbb
shl
aam
add
cwtl
ret
jp
aas
add
pop
push
iret
pop
cmp
jne
jae
dec
cmp
mov
roll
jecxz
mov
loope
mov
insl
inc
insl
lods
mov
mov
add
or
jp
mov
mov
xor
lods
std
add
es
je
push
sbb
arpl
outsb
sub
sub
xor
dec
imul
enter
or
xor
stc
push
dec
outsl
js
ret
inc
ss
and
aas
cmp
jp
daa
inc
pop
add
jmp
cmp
outsl
rol
push
iret
icebp
cmp
add
cwtl
movl
jmp
jge
sti
pop
xchg
mov
cs
outsl
push
mov
sbb
xchg
hlt
adc
nop
xchg
mov
cmp
es
inc
repnz
mov
xor
mov
aaa
in
popa
cltd
inc
enter
cltd
pop
pop
xchg
aaa
fstl
xor
mov
dec
push
imul
push
mov
out
sbb
jp
idivw
adc
pop
cltd
add
lea
in
insb
fiadds
push
int3
xor
mov
ffreep
mov
int3
mov
dec
loope
std
mov
sbb
pop
lds
jecxz
or
xor
xchg
popa
sar
xor
push
je
mov
jae
fcomip
jge
xlat
jecxz
pop
add
adc
cmp
icebp
fisttpll
push
pop
int
sbb
sbb
pop
push
or
cltd
sub
lods
add
push
aam
dec
or
in
add
or
xor
jmp
adc
and
repz
sub
add
ja
decl
or
mov
add
jp
sbb
mov
xor
out
sub
inc
cwtl
stos
test
out
icebp
push
sbb
dec
ds
hlt
arpl
stos
ljmp
lea
or
mov
mov
fisubrl
lcall
mov
sub
mov
adc
mov
icebp
fiaddl
sahf
pop
ljmp
dec
icebp
jmp
mov
mov
adc
scas
lcall
int3
mov
cmp
pop
jle
sub
mov
dec
adc
jb
dec
pop
outsb
into
fdivrl
jbe
sub
test
mov
or
jecxz
ret
xchg
cltd
xchg
int
in
cs
mov
test
push
leave
lret
cmc
mov
fsubl
pushf
lret
or
sbb
out
mov
loope
cli
add
pop
mov
or
repnz
or
nop
push
popf
inc
lea
test
and
jmp
mov
out
in
pop
adc
add
xor
wrmsr
xchg
adc
push
jmp
mov
xchg
mov
adc
insl
xor
or
dec
lcall
mov
shl
ss
sbb
pop
shrb
cld
xor
push
in
lcall
mov
cld
loopne
pop
sbb
ja
insb
dec
lcall
xchg
mov
cmp
adc
fidivrl
add
aaa
sub
lahf
xor
in
lcall
scas
dec
cli
sbb
lret
jbe
test
mov
xor
daa
dec
xchg
or
cmp
clc
fldt
or
dec
cmp
sub
xor
decb
pop
ja
push
aaa
popa
call
sbb
add
cmp
aaa
sahf
lcall
out
aaa
loope
mov
icebp
loop
sbb
xchg
sti
push
cmc
pop
mov
pop
popa
dec
or
psubw
pop
adc
sbb
xchg
movsb
test
pusha
or
loopne
pop
popf
aad
sub
cmp
adc
mov
adc
adc
add
mov
sti
icebp
outsb
add
or
adc
xchg
cli
mov
into
cmpb
cld
sub
je
imul
pop
sahf
dec
testb
mov
filds
sbb
cmc
mov
jmp
adc
push
out
lahf
pop
sbb
xchg
add
in
mov
pop
scas
or
ss
lcall
out
data16
xchg
fldt
adc
repnz
push
xchg
add
and
dec
rcl
push
push
mov
repz
dec
loopne
xchg
rcrl
or
out
fimull
hlt
jl
loop
and
xor
xchg
sbb
out
jmp
hlt
lret
pop
fdiv
sti
incl
adc
out
leave
adc
clc
or
push
ret
pop
outsb
pusha
add
adc
daa
push
enter
test
rcl
sub
fiaddl
xor
pop
inc
sub
aas
xchg
inc
lods
push
and
or
repnz
mov
dec
shl
pushf
idivl
push
test
icebp
add
pop
in
dec
cmp
add
jp
cli
repnz
push
aad
aam
in
ret
lock
push
xor
xchg
xchg
lds
iret
dec
sub
sar
or
mov
test
nop
repz
or
adc
shl
es
xor
ja
ror
lret
or
data16
ds
dec
dec
adc
xor
pop
out
out
loop
and
int
outsb
dec
jns
jbe
jmp
sbb
hlt
xor
cmp
lret
arpl
scas
or
cli
shrb
mov
xchg
orl
mov
sar
dec
adc
repnz
loop
jns
iret
into
in
mov
insb
mov
test
and
mov
outsl
push
in
cmpsl
pop
mov
sbb
imul
out
add
push
bound
xchg
dec
test
xchg
adc
push
repz
mov
inc
scas
jae
inc
iret
add
push
xchg
rcrb
sbb
jno
out
idivl
jl
lock
pop
cmpsl
jb
adcb
push
pop
cmpsl
dec
movsl
clc
imul
stos
lret
sbb
mov
test
adc
decl
das
jmp
adc
movsb
adc
in
jmp
mov
xor
ret
loopne
jns
bound
leave
aam
or
push
sbb
int3
imul
lret
iret
adc
xchg
cmpsl
shl
cmp
hlt
dec
mov
ljmp
ret
cmp
bound
sar
gs
and
lds
fistl
pop
mov
sbb
mov
mov
dec
jae
mov
cli
mov
mov
jl
ljmp
cli
pop
xor
mov
inc
fcomps
ret
ljmp
movsb
adc
aad
mov
xor
je,pn
pop
stos
xchg
repnz
adc
sbb
sbb
cmpsl
mov
insb
or
popf
push
fisubl
jno
sub
decb
int3
xor
adc
or
xchg
sub
sub
mov
jge
dec
lret
addr16
ja
add
ss
pop
xchg
sbb
mov
sbbb
rclb
leave
jo
cmp
test
or
out
push
jle
int3
xchg
adc
in
cld
std
and
pop
sbb
je
push
fs
aas
mov
pushf
cmpsb
cmpsl
mov
cmpsl
lds
pop
popa
xchg
cmp
sti
sahf
add
in
flds
dec
rcrl
mov
in
test
add
mov
rorl
jecxz
add
jbe
dec
sbb
shr
xchg
adc
fwait
adc
popa
cmp
lcall
mov
xor
into
in
sarl
fbld
cli
pop
pop
notl
daa
or
imul
push
dec
xchg
es
out
aaa
add
shl
sbb
xlat
rorl
daa
pop
lds
add
decl
fmulp
sub
sbb
xchg
out
lret
scas
loop
sub
cs
cli
int3
scas
outsl
shll
add
sti
mov
cmp
sbb
jl
cmp
jl
aam
movsl
jecxz
repnz
notb
daa
ja
repnz
pop
sub
lahf
mov
sbb
insl
or
insl
or
or
and
jge
in
inc
into
pop
push
xchg
push
xor
sub
pop
sub
pop
sbb
jge
shlb
bnd
jb
test
add
jb
sti
pop
out
dec
sbb
pop
pusha
mov
xor
jb
je
fstpt
scas
into
mov
xchg
cmpsb
cld
mov
xchg
stos
out
fcoml
push
pop
out
inc
mov
cmp
imul
sahf
iret
les
xor
in
pop
lea
push
sub
jo
and
enter
xor
jmp
std
and
sbb
or
pop
dec
xchg
mov
or
cmc
and
sub
shr
pop
cmpsl
cmpsb
lcall
fisubrs
leave
and
repnz
dec
repnz
lods
cli
inc
jecxz
push
mov
xor
arpl
sbb
pop
arpl
scas
inc
jmp
xchg
dec
in
dec
cmpsb
std
add
push
pushf
adc
pop
push
xchg
dec
xor
cmc
pushf
pop
fcompl
shl
rorl
jo
or
dec
fwait
xor
mov
js
jae
xor
lods
push
dec
lds
mov
mov
icebp
xchg
rol
cwtl
imul
fwait
es
fcompl
inc
mov
nop
jnp
push
imul
les
push
push
cmp
int
dec
fstpt
pop
stos
pop
das
lcall
cmp
cmpl
dec
adc
sbb
fldcw
fwait
dec
adc
ja
fcmovnu
jno
fdivrp
cmc
je
xchg
xchg
ficoml
sahf
pop
mov
hlt
pop
dec
mov
xchg
ss
cwtl
lret
into
jmp
jge
ffreep
fistpll
nop
dec
cli
mov
loop
jge
insl
push
xchg
push
iret
jmp
xlat
in
jb
das
mov
adc
xchg
int3
jne
sahf
notb
sbb
sub
jne
sbb
imul
sbb
and
mov
sbb
push
jmp
loop
jb
mov
xlat
in
rcll
sti
add
push
into
sti
pop
bound
bnd
mov
cmp
pop
movsb
jg
mov
sub
daa
leave
aad
into
mov
add
adc
ss
mov
xchg
mov
cmp
lret
cmp
dec
dec
int3
push
push
cmc
ror
mov
push
jb
jne
insb
test
rorb
dec
xchg
pop
cmpsl
cmp
push
add
movsl
sub
jmp
or
push
enter
cmp
sbb
mov
shlb
mov
ret
dec
xchg
pop
dec
dec
lds
xchg
outsl
mov
push
dec
xchg
dec
lds
push
in
je
mov
mov
std
dec
cs
imul
push
xor
loopne
sbb
cmp
or
push
jle
sbb
les
mov
and
sar
sub
mov
repnz
push
xor
cltd
lea
sbb
cli
lea
or
or
xor
sub
xchg
mov
loope
mov
and
mov
data16
andb
and
sbb
pop
aad
ja
lds
scas
ds
scas
push
push
adc
shlb
mov
icebp
cmpsl
loopne
dec
xchg
xchg
ficompl
cmpsl
or
mov
xchg
cmp
mov
push
sahf
jbe
add
rcrl
push
clc
adc
testl
pushf
sahf
sbb
sub
cs
dec
iret
pop
adc
adc
jns
cmp
andl
daa
inc
xchg
dec
ret
mov
popf
adc
shrb
icebp
push
mov
xorb
inc
add
mov
push
rcll
rcll
popf
xchg
lcall
inc
inc
sub
aad
push
popl
or
adc
sub
es
sub
pusha
cli
outsb
fcomip
mov
and
xor
fnsave
fs
fcmove
mov
outsb
sti
int
push
inc
push
dec
ds
or
cmp
repnz
ret
lea
cmp
call
adc
push
sahf
xlat
ljmp
shlb
pusha
test
and
xor
cltd
push
shlb
cmp
jmp
xchg
or
sub
dec
inc
testb
iret
insb
jno
lahf
sbb
push
mov
add
div
pop
aas
sti
mov
js
inc
and
ds
xchg
jle
sahf
clc
loop
sahf
out
dec
cmpb
jns
stc
scas
xchg
repz
ret
fucomp
xor
clc
xor
mov
std
fxch
xor
das
pop
cltd
cld
sahf
push
adc
int3
cli
sub
xchg
mov
icebp
xchg
fsubrp
test
pop
or
or
lds
or
mov
cmp
xor
add
outsl
sbb
mov
jg
xchg
imul
testl
xor
enter
clc
shlb
mov
mov
xchg
int3
adc
sub
sti
scas
sbb
scas
mov
lds
test
hlt
and
imul
mov
mov
and
dec
sub
cld
mov
and
or
fistl
mov
outsl
pop
fisttps
or
lea
ret
sahf
int3
cmp
xchg
data16
xchg
stos
xchg
lret
cmc
ret
mov
mov
sahf
lret
mov
aaa
dec
hlt
clc
into
std
inc
xchg
sbb
xor
scas
lcall
rcrl
in
into
ret
jg
sub
xorps
jbe
push
cwtl
das
adc
bound
fwait
adc
inc
xor
data16
push
into
or
in
dec
out
xor
pop
aam
adc
xor
movsb
mov
mov
fwait
lret
xor
push
mov
or
or
imul
xchg
nopl
pusha
sbb
addr16
pop
decb
fdivrs
jnp
aam
int3
jp
test
mov
fcoms
out
jmp
xchg
sbb
scas
or
cwtl
adc
lock
sub
push
fwait
cs
out
fs
sbb
std
pop
mov
sar
sub
cmp
shl
xchg
sub
pushf
jmp
and
adc
xchg
inc
lahf
fcmovu
ljmp
btc
test
ror
lcall
rorb
pop
aas
xor
or
movsb
xor
sub
mov
rorb
inc
push
cmp
jae
outsb
xor
pop
cmp
adc
mov
mov
pop
mov
fisubs
out
and
test
rclb
or
pop
or
sbb
adcb
and
pop
add
in
in
rorl
or
inc
pop
mov
pop
cmpsl
pop
ret
fs
and
xchg
dec
fsubrl
sti
push
xor
test
adc
pop
iret
enter
sbb
cmp
jp
ljmp
pop
xchg
add
jge
jg
push
push
mov
ret
cmc
jne
adc
or
adcl
cmc
cmp
test
xchg
xchg
fwait
adc
sbb
sbb
xor
mov
xor
inc
pusha
adc
int
pop
mov
loope,pn
mov
inc
mov
cmp
cmp
fildl
sbb
mov
or
pop
sbb
int
xlat
xchg
xchg
fdiv
cld
or
fisubl
cmc
fmuls
subb
les
pop
sub
icebp
insl
in
mov
out
mov
adc
jmp
xchg
push
test
mov
pushf
jno
jno
add
push
roll
mov
push
stos
sub
sbb
fldcw
insl
inc
loop
repnz
or
jne
xchg
pop
es
mov
jbe
ljmp
and
xor
xchg
cmp
mov
repz
sbb
rcrb
xchg
sti
push
popa
loope
or
push
pop
int3
pop
ljmp
or
insb
mov
ds
out
cmp
imull
ficomps
and
out
roll
shll
or
fistpl
jo
push
push
pop
in
or
sbb
test
sarb
xor
push
out
test
pop
xor
xor
clc
xchg
and
sbbb
lahf
aad
lcall
ljmp
push
je
cmpsl
xchg
xorl
lods
mov
sbbb
cltd
andb
xor
and
mov
xor
jle
dec
out
add
rorb
jae
push
sar
xchg
iret
push
sub
in
or
loop
xchg
or
clc
loop
loop
fnstcw
cld
mov
rol
and
xor
stos
outsb
clc
fmuls
fst
jb
in
jp
and
xchg
sub
mov
push
xor
out
xchg
mov
adc
sahf
int3
iret
xchg
roll
mov
inc
xchg
fcmovu
daa
inc
add
std
lahf
sub
lahf
xlat
push
dec
test
mov
ret
fistps
push
fmull
mov
push
and
xor
push
sahf
in
and
xorb
aaa
icebp
cli
movsb
sub
pushl
adc
xchg
cltd
sarb
in
cmpsl
pop
jecxz
clc
cwtl
imul
push
movsl
sub
pusha
cli
aad
or
adc
mov
sub
sti
cmp
fxch
mov
dec
inc
bsr
test
or
jg
mov
gs
add
jbe
scas
lcall
fiadds
xchg
inc
clc
push
push
jno
push
cmpsb
mov
push
sub
lret
xchg
and
xor
repnz
loop
xor
xor
cli
insb
or
sbb
dec
in
mov
sbb
mov
lods
rcrb
test
in
shlb
jle
xchg
mov
sti
je
ds
xchg
pop
fsubrp
rcrb
fdivrs
add
loop
jmp
repz
loopne
lds
cmp
add
pushf
xor
adc
sti
cmp
inc
jecxz
xchg
and
movsl
cmpsb
cld
out
gs
scas
adc
mov
pop
mov
int3
out
stos
add
cmp
cltd
cmp
add
pushf
or
ds
jns
addb
adc
jmp
mov
and
adc
cli
popa
and
cmp
xor
in
and
sbb
mov
and
cmc
fldcw
faddp
in
push
jmp
mov
mov
imul
test
fdivrp
xchg
pop
jecxz
insl
cs
test
pop
std
in
fisubl
xchg
xchg
jmp
daa
idivl
fwait
xchg
cmpsl
daa
insb
lret
or
lahf
push
or
in
pop
clc
xor
cld
and
lret
jo
sbb
sub
fidivl
mov
cmpsb
pop
sti
adc
cld
xchg
in
pop
cld
test
pop
fmuls
lods
cs
nop
pop
add
pushf
nop
enter
aad
jb
or
jle
pushf
xchg
add
jbe
fstps
incl
xchg
lret
xchg
dec
cmp
int
mov
sbb
xchg
loop
and
push
adc
xchg
cmpsb
aam
dec
inc
pushf
adc
les
bound
jns
jg
pop
js
dec
push
xor
hlt
xor
pop
jle
fisubrl
imul
sbb
in
cmp
pop
mov
xor
cli
mov
addr16
jmp
pop
or
cmpsb
cmc
and
idiv
push
sbb
inc
prefetch
in
or
mov
rcll
icebp
mov
add
mov
cmp
daa
mov
fwait
int3
incb
push
sub
sub
les
es
in
pop
mov
and
lods
sahf
add
jp
lods
clc
imul
lcall
shrl
out
mov
jecxz
fimuls
les
add
mov
movsb
mov
sbb
pop
iret
ljmp
testl
dec
pop
outsl
cld
sub
mov
inc
test
mov
and
mov
add
jge
stos
pop
mov
std
mulb
pop
xchg
movsb
icebp
js
dec
xor
inc
push
insl
sbb
sbb
jo
loope
les
pop
xchg
sub
push
xchg
ljmp
inc
es
xchg
aaa
rclb
stos
int
inc
xchg
loop
inc
test
or
or
imul
pop
sub
enter
aas
imul
test
add
xchg
sub
nop
sbb
fimull
or
inc
stos
or
push
jmp
push
fisubrl
add
leave
mov
inc
adc
insb
fiadds
lcall
dec
icebp
jno
mov
cli
imul
in
mov
sbb
sub
cltd
dec
incl
sbb
mov
dec
jl
rclb
adc
out
and
push
push
xchg
adc
aaa
ret
xlat
xor
or
loop
mov
lahf
xor
cmpsb
adc
xchg
jno
call
ljmp
loopne
test
push
std
xchg
cs
nop
pusha
clc
data16
icebp
cs
pushl
in
push
dec
inc
mov
int3
sbb
cltd
js
pop
or
or
dec
xor
int3
cwtl
imul
iret
inc
jbe
xchg
in
repnz
sti
push
test
out
lock
shrb
iret
test
adc
cs
aad
adc
fdivrs
xor
ror
adc
cs
push
pop
std
push
xor
pop
cmp
gs
in
dec
and
sub
push
test
repnz
cmp
cmpsb
xor
adc
xchg
push
lea
push
ds
cltd
pop
dec
sahf
sub
gs
push
out
cli
popa
rorb
shlb
cmp
xor
loopne
xchg
xchg
es
mov
inc
fs
sbb
lret
lret
int
arpl
pop
add
mov
push
cmp
cli
notb
in
sbb
clc
dec
adc
insl
jmp
mov
jb
leave
fistpl
push
xor
xlat
int
xor
inc
mov
and
insl
add
pop
ljmp
sub
cli
idiv
cltd
jge
inc
icebp
mov
repnz
rolb
lcall
pop
idiv
nop
fdivr
in
pop
lret
add
call
aad
sbb
mov
iret
test
mov
adc
repnz
xorb
cmp
subb
cli
xor
xor
daa
push
jmp
leave
pop
sbb
es
sahf
loope
sbb
in
adc
pop
imul
mov
xchg
jle
dec
mov
jecxz
jle
inc
sbb
cmp
lret
sbb
xor
push
inc
push
or
ss
sbb
inc
insl
pop
ficoml
repnz
clc
lea
mov
sbb
xor
lea
testl
push
fsubrl
xchg
in
cmp
test
jmp
push
shlb
hlt
cmpsb
push
dec
add
xchg
add
or
adc
mov
jecxz
mul
jns,pt
xchg
fnstsw
orl
mov
or
sbb
fidivrs
pop
sarb
aam
mov
xchg
cmpsb
pop
push
repz
lahf
cmp
sub
mov
rcrb
cmp
add
adc
mov
dec
sbb
mov
cli
lea
lret
rorb
jnp
repz
mov
mov
sbb
mov
pushf
in
dec
leave
cmp
add
sub
rolb
add
adc
jecxz
sbb
pop
and
test
xchg
mov
cli
movsl
cmp
jle
xchg
sti
xor
jne
int3
mov
mov
data16
repz
or
push
sahf
adc
insl
cs
push
icebp
and
inc
jae
clc
gs
mov
adc
cmpsl
push
stc
sarb
mov
lahf
je
pop
jae
loopne
or
out
push
leave
mov
sbb
mov
aaa
outsb
xchg
xlat
stc
leave
pushf
daa
inc
mov
xchg
arpl
mov
mov
and
adc
loopne
clc
pop
and
sub
jl
roll
cmpsb
dec
outsb
add
xor
inc
repnz
out
inc
cmpsb
adc
lcall
cmp
aaa
fistps
jo
fwait
jp
jbe
rol
fs
outsb
sti
jo
mov
jae
mov
xchg
out
or
pushf
or
lcall
sbb
add
outsl
jbe
stc
jo
or
xchg
loope
dec
fisubl
imul
fists
sarl
jle
sub
lds
std
jecxz
xor
xchg
jno
cmc
pop
aad
jle
xchg
pop
jo
insl
pop
jp
add
fdivl
decl
icebp
or
aam
sbb
add
adc
dec
sub
jle
xchg
jbe
dec
jmp
je
das
in
rclb
aam
es
icebp
outsl
iret
and
inc
cmpsb
push
jge
stc
lret
sub
push
xor
sbb
je
add
stos
push
shll
and
rcrl
mov
lds
push
sbb
adc
push
out
xor
dec
jno
into
pop
rclb
mov
cmp
adc
xlat
mov
mov
mov
sub
fidivrl
adc
out
adc
mov
jg
mov
pop
lret
mov
cmpsb
sub
pushf
stos
sub
dec
push
out
cli
sbbb
xchg
adc
mov
pop
pop
sbb
outsb
bnd
xchg
jle
cltd
enter
lret
icebp
cmp
pop
repnz
mov
call
xchg
or
cmp
dec
xorb
test
test
lock
shll
out
rcl
jb
jae
rclb
xor
cmpsl
sbb
aam
inc
insl
pop
out
push
sbb
dec
mov
lds
push
and
repz
push
ficompl
adc
stc
or
bound
xor
jo
out
lds
dec
insb
cwtl
mov
inc
icebp
leave
test
outsl
test
stos
mov
jno
in
in
out
out
sub
adc
int
lcall
pop
int3
loop
mov
mov
push
xor
movsl
ds
je
ficomps
mov
mov
mov
mov
xor
shrb
pop
or
fwait
adc
dec
lcall
mov
shl
sub
sarl
xor
flds
sub
sahf
sub
int3
adc
add
imul
fidivs
andb
adc
jbe
sahf
sbb
mov
imul
fistl
xor
mov
sbb
pop
rorb
inc
incl
adc
bound
xchg
cwtl
sbb
mov
pop
leave
xor
lock
sahf
mov
pop
mov
lods
mov
or
repnz
or
stos
mov
jmp
add
push
add
iret
add
mov
int
xor
mov
xchg
add
inc
out
adc
pusha
pop
icebp
jo
or
cld
mulb
pand
and
lahf
sbb
mov
xor
leave
ret
cmp
movb
int
fistps
js
xchg
jle
jp
in
pop
pop
insb
xlat
testb
orb
fstpt
cmp
xchg
adc
or
ret
stos
dec
repnz
shrb
and
mov
in
andb
xchg
lock
call
pusha
jbe
mov
adc
mov
fldl
outsl
dec
or
jbe
fcomps
xor
xor
jmp
mov
mov
cli
mov
in
addl
pop
mov
adc
sbb
iret
incl
rcrl
ficoml
dec
xchg
sbb
pusha
push
mov
push
lea
in
lock
xchg
cli
cwtl
out
cmpb
call
rorb
lcall
lods
lock
fisttps
pop
or
xor
mov
int3
daa
int
push
sar
std
jmp
adc
dec
adc
ljmp
pop
cwtl
adc
jmp
outsl
fcomi
adc
push
pop
sbb
mov
add
mov
bound
jp
sti
clc
ss
push
js
dec
jb
cltd
push
or
mov
jecxz
outsb
ss
adc
xchg
sbb
push
imul
adc
or
jecxz
mov
pop
clc
divl
bound
or
ret
jb
lock
ljmp
jge
fisttps
push
jb
cltd
cmp
out
xchg
mov
repz
test
cmp
add
or
out
and
aas
sbb
xchg
test
lahf
push
cltd
push
aad
or
add
repnz
or
sub
jle
pop
jo
aad
cmp
test
add
adc
arpl
sub
shlb
and
sahf
push
mov
inc
xchg
pop
addb
cmpsl
lret
jbe
xor
cmc
adc
ficoms
xchg
xor
cli
add
mov
mov
sbb
cmpsl
int3
xor
imul
adc
dec
fisubrl
jle
sbb
jmp
sbb
push
mov
dec
push
outsb
push
fstps
rclb
aad
out
xchg
mov
jecxz
lods
xchg
lods
adc
addb
pop
adc
push
dec
repnz
push
xor
out
dec
cltd
mov
sahf
inc
ss
dec
ficompl
jmp
ficoml
out
jbe
sbb
mov
aad
mov
dec
out
xor
xacquire
or
sub
pop
out
or
adc
fcmovu
sbb
stos
adc
xlat
adc
add
push
int3
xor
incl
loope
sbb
adc
fiaddl
xor
fcoms
loope
bound
mov
sahf
and
inc
add
sbb
xchg
test
and
adcl
sub
sbb
int
inc
push
pop
cmp
jge
in
dec
into
dec
inc
xchg
dec
cld
inc
in
inc
and
cmpb
aad
pop
fisubrl
or
ret
repnz
sbb
adc
mov
out
mov
push
or
repnz
mov
ret
mov
pop
dec
jmp
xor
stc
dec
int3
mov
pop
mov
xchg
pop
pop
push
sbbb
shrb
mov
or
sti
lea
stc
jp
lods
cmp
pop
push
fstpt
ljmp
cmp
or
sub
pop
inc
or
call
mov
jae
sbbb
xor
insb
push
xchg
sbb
push
call
or
dec
xor
xchg
cmp
push
in
dec
arpl
pop
mov
adc
pushw
ss
sub
fsubr
xchg
ds
dec
jb
aad
jle
int3
daa
inc
mov
mov
mov
sub
and
cmp
or
push
lods
jne
cmp
rorl
and
xor
jnp
and
and
mov
mov
push
movsb
mov
xchg
pop
pushf
or
and
cwtl
pop
mov
or
jbe
sbb
repnz
imul
xor
sbb
sbb
sbb
lcall
push
mov
and
mov
dec
dec
pop
imul
and
mov
sub
incl
fsubrl
xor
scas
push
pop
xlat
cmp
xor
xor
xor
sti
rclb
mov
jmp
insl
loop
pop
icebp
sbb
mov
mov
jns
decb
xor
fs
push
xchg
sti
push
xor
or
jle
mov
adc
adc
enter
pop
mov
outsb
sub
jecxz
or
dec
imull
push
and
fadds
mov
xchg
mov
jae
repnz
push
aaa
seto
pop
mov
cmp
mov
mov
push
ret
adc
xchg
in
out
xor
mov
pop
pop
repnz
push
int3
push
aad
sti
or
mov
sub
int
add
jbe
pop
fdivl
mov
outsb
add
pop
js
cli
movsb
xor
dec
jp
out
fnstsw
sbb
lcall
insb
lret
sub
adc
lods
ljmp
lcall
repnz
ljmp
jge,pn
sbb
mov
mov
jmp
jns
push
outsb
lcall
jae
repnz
rcrl
sbb
inc
adc
push
inc
rcr
inc
nop
int3
inc
lea
test
fnsave
sub
in
test
out
lret
sti
push
rcl
fstl
rcll
or
or
outsb
dec
xor
sub
push
leave
enter
add
push
or
mov
cmp
icebp
lahf
test
xchg
sti
sub
test
sbb
xchg
inc
jg
test
int
push
and
mov
test
outsb
aam
jmp
rcll
gs
aam
xchg
dec
cli
push
pop
repnz
sub
sub
sbb
xchg
add
es
add
jmp
jecxz
mov
push
shrb
sub
or
lahf
push
xlat
xchg
dec
jge
test
pop
sub
xor
pop
add
jnp
xchg
jge
subb
xchg
icebp
and
in
mov
and
bound
fsubs
outsb
mov
mov
pop
adcb
test
xchg
inc
fsubrl
out
xor
mov
ret
cli
push
lods
or
jl
call
pop
mov
int3
in
or
jle
mov
xor
pop
xchg
jl
rorb
mov
aas
adc
lea
xor
lea
mov
inc
pop
std
inc
mov
shrl
cwtl
fidivrs
cmc
inc
adc
shll
stc
pop
lea
xchg
insb
in
out
test
daa
inc
lea
pop
pop
mov
xlat
cwtl
call
jle
call
adc
cmp
push
dec
xchg
xlat
adc
or
push
or
mov
mov
push
xchg
rcrl
testl
sarb
inc
ret
cmp
dec
and
enter
cld
lock
ds
dec
jecxz
test
out
xchg
push
movsl
imul
and
orl
int3
movsb
jg
dec
sub
dec
ret
cli
loop
inc
data16
dec
mov
or
push
push
ss
inc
pop
je
loopne
int3
push
xchg
inc
incl
pop
or
sub
cmp
lret
pusha
scas
out
mov
pop
out
int
cltd
in
xchg
lret
xchg
or
out
mov
xor
xchg
jecxz
pop
sbb
out
rol
inc
fwait
mov
pop
or
push
clc
mov
hlt
dec
xchg
in
aam
ret
lret
into
adc
fnstenv
pop
sbb
cwtl
cmpsb
loop
push
test
les
push
dec
mov
dec
leave
or
adc
push
mov
add
inc
nop
daa
cs
cli
sub
inc
lahf
push
adc
adc
mov
decl
or
pop
repnz
daa
push
xchg
cli
adc
or
por
pop
sahf
cmp
cmpl
jecxz
sub
push
push
iret
push
jne
in
cmpsl
inc
stos
adc
or
push
stos
mov
adc
adc
divb
or
repnz
jmp
mov
push
mov
mov
adc
int3
scas
cli
and
in
jge
daa
and
xchg
push
pusha
fisubrs
jge
jecxz
outsb
test
icebp
add
adc
or
mov
lea
or
jno
dec
mov
cmp
in
int
xchg
push
ror
sub
pusha
out
add
xchg
ficompl
xorb
les
jl
int
sub
sbb
mov
imul
into
clc
cli
jmp
pop
jne
sahf
out
jo
insb
cmpsl
or
mov
adc
inc
mov
out
xor
insl
push
pushl
nop
add
int
out
push
out
mov
or
inc
dec
or
mov
dec
jp
cmp
into
cmc
adc
hlt
es
mov
pop
cmpsl
mov
mov
data16
add
fimuls
lret
ret
jne
sub
pop
dec
mov
jle
cmp
imul
and
sarl
lahf
dec
mov
pop
shlb
adc
push
adc
or
adc
rclw
clc
jmp
std
hlt
nop
fcomi
fildl
stc
add
push
jge
jmp
data16
stos
mov
pop
or
sub
cmc
push
lahf
ret
push
cmp
cli
lock
mov
xchg
mov
test
inc
sbb
sbb
cmp
and
aam
pop
lds
push
sub
mov
les
dec
cmp
cmp
mov
add
xchg
nop
cmpsb
int3
cltd
push
int
hlt
cmpsb
dec
shr
repnz
xchg
dec
mov
adc
mov
decb
lea
mov
nop
sbb
aam
inc
icebp
into
je
xchg
test
or
fadds
xor
addr16
push
sub
stos
rcrb
xchg
loop
mov
jne
negl
in
lret
jb
sbb
jne
pushf
mov
cli
add
cmp
sbb
cs
sub
jo
jp
mov
sub
sub
or
add
lds
shll
shll
add
mov
cltd
sahf
cld
in
sarl
push
xchg
add
pop
cmp
inc
mov
jo
mov
rclb
test
adc
inc
cmc
into
out
movsb
and
ret
lret
ljmp
stos
int3
lret
test
fiadds
int3
push
movb
insb
dec
stc
and
aad
dec
and
ds
xchg
lret
jl
pop
or
insb
cld
test
adc
xchg
mov
stc
xor
jg
cmp
sub
sub
dec
and
fnsave
and
xchg
shr
jmp
hlt
xor
das
cwtl
or
xchg
push
enter
jnp
enter
mov
xchg
add
mov
adc
adc
mov
dec
jb
in
roll
mov
movsb
sahf
enter
repnz
fimull
lods
shrb
out
rcll
sbb
xchg
loop
cmc
mov
lods
daa
jmp
add
int3
push
push
dec
cli
adc
and
lret
cld
mov
mov
je
push
in
inc
fdivr
int3
shl
sbb
xchg
cld
push
out
sub
and
cld
loopne
add
loop
rcl
xchg
mov
stos
out
lcall
into
pop
dec
xchg
sub
and
and
cld
fists
in
jge
in
fcmove
shrb
dec
fidivrl
jl
sub
jge
in
movsb
into
mov
out
dec
fidivrl
jge
in
sbb
and
rcl
repnz
fdivrp
into
out
enter
stos
in
mov
jle
xchg
push
fidivl
repnz
int
or
lcall
into
or
ds
jbe
stos
hlt
fcoms
ljmp
ss
jle
cmpsl
push
outsb
cmp
mov
adc
stc
scas
out
daa
cwtl
mov
push
leave
mov
repnz
loope
int
repnz
fxch
fmul
into
or
lret
or
stc
ljmp
mov
lea
cmp
int
int3
push
or
loop
pop
stc
add
ljmp
loop
dec
xchg
repnz
push
or
xchg
jmp
and
cwtl
out
sub
mov
scas
scas
mov
sahf
inc
pushf
xor
out
mov
xchg
ljmp
push
pop
stos
mov
mov
mov
mov
and
ret
scas
ret
lret
xor
ret
mov
mov
adc
xorb
push
scas
js
mov
test
adc
pop
push
jge
pop
mov
nop
adc
cs
xchg
cmpb
or
push
sbb
or
adc
adc
incl
cld
psubq
std
or
pop
or
add
repnz
in
por
in
clc
idiv
stc
hlt
psllq
cmc
lock
loop
fmull
fcmovnu
fucomp
out
jmp
in
ror
fcmove
pop
psubusb
fcmovu
aam
pmullw
iret
ret
mov
lret
ret
movb
lods
stos
fisttps
mov
mov
mov
mov
mov
sahf
test
mov
inc
add
jmp
or
fisttps
mov
or
ret
jl
out
divl
or
ficompl
in
xor
xor
fdivrl
push
fldcw
pushf
ds
ljmp
fisubrl
mov
mov
or
push
adc
iret
mov
ljmp
or
iret
aad
int3
clc
cld
mov
roll
mov
lods
data16
test
push
outsb
scas
pop
mov
daa
fadds
push
loope
loopne
in
and
scas
and
sub
mov
cmpsb
mov
lods
lods
inc
movsl
jnp
sahf
jp
aad
mov
lock
ret
mov
scas
out
fiaddl
push
test
ret
mov
das
scas
xchg
or
out
repz
jb
push
cmc
push
xchg
xchg
or
into
dec
imul
mov
scas
cmp
mov
fists
scas
test
dec
cli
xchg
inc
add
jp
adc
scas
jnp
mov
mov
icebp
aad
scas
test
jbe
lock
jb
and
xchg
mov
pushw
dec
or
dec
sbb
data16
mov
push
js
shl
or
mov
out
aas
pushf
pushf
stc
xchg
jg
out
mov
mov
int
and
push
pop
into
jle
lods
push
mov
cli
mov
push
mov
bnd
jmp
aad
mov
loope
pop
loop
loope
es
mov
mov
imul
jle
mov
scas
repnz
fsubr
out
sti
and
add
mov
mov
in
jbe
enter
cmpsl
sub
inc
ljmp
ljmp
and
into
ja
stc
push
fidivrs
cmpl
rcrl
inc
out
sub
sub
add
lret
xchg
cmpsb
cmp
jge
adcl
jmp
aad
outsb
pop
out
out
mov
cmpsl
jle
mov
sbb
icebp
frstor
push
fwait
mov
mov
loopne
cmp
aaa
lds
adc
or
jge
fsubp
pop
xchg
jmp
cmpsl
cmp
cli
jmp
pop
enter
into
imul
xchg
scas
add
jp
stc
fwait
lret
or
pop
mov
inc
lret
scas
aad
mov
push
xor
cmp
repz
call
pop
sub
adc
sbb
test
call
insb
cmpsl
push
fcmove
ja
icebp
mov
imul
in
mov
pusha
or
shlb
or
int
testb
mov
mov
repz
cli
adc
mov
and
int3
or
or
or
dec
sbbb
adc
loop
or
cld
fists
lock
pop
cwtl
xchg
lcall
nop
popl
jle
mov
addl
insl
insb
imul
ja
pcmpeqw
jno
outsl
bound
pop
pop
pop
pop
imul
arpl
pusha
pop
push
cmovge
pop
pop
push
pop
andnps
push
push
dec
inc
cmp
ds
dec
inc
dec
cmovne
inc
inc
aas
xor
sub
cmp
cmp
xor
xor
and
sbb
sub
sub
and
and
cmpsb
stc
je
test
inc
xchg
stc
jns
pcmpeqw
xchg
jae
lahf
jne
bnd
xchg
fisubrl
popf
mov
lock
scas
push
repnz
jno
sbb
out
aaa
xor
mov
sbb
data16
scas
addr16
repz
test
xchg
dec
enter
das
mov
test
ljmp
lcall
pushf
mov
mov
stos
lods
in
stos
mov
mov
and
mov
lret
rcr
sbb
popf
mov
jmp
fisubrs
subb
adc
fwait
js
out
mov
mov
scas
mov
test
repnz
repnz
daa
out
pushf
sahf
sub
cmpsl
lahf
mov
adc
iret
lods
mov
neg
push
inc
add
outsl
fcompl
test
adc
push
add
mov
int3
dec
stos
scas
leave
mov
fdiv
into
pop
cmpl
mov
xchg
mov
sbb
and
leave
pop
leave
adc
or
leave
out
leave
repz
fmul
fldt
mov
mov
pop
or
pop
fisubs
data16
shlb
xchg
clc
adc
hlt
or
add
mov
shll
stos
xchg
in
sti
loop
dec
lret
ljmp
outsb
adc
jns
imul
fcmove
ljmp
aad
jp
lcall
and
mov
jb
int3
sahf
or
scas
fwait
scas
aad
mov
aad
stos
push
in
cmp
add
rcl
cmp
pop
mov
dec
inc
icebp
adc
mov
int3
dec
push
mov
add
fstps
sbb
sti
fiaddl
inc
add
jnp
rolb
loope
mov
mov
fisubl
xlat
adc
pop
or
or
clc
into
rolb
cmp
xchg
jle
mov
fstps
pop
xchg
orb
lret
pop
mov
cs
jnp
xor
xchg
inc
cmp
repnz
mov
adc
push
xor
shlb
lods
fwait
xchg
xor
add
int
shlb
push
repnz
add
sub
ret
repnz
jmp
add
imul
xchg
repnz
mov
sub
add
jge
sahf
mov
dec
jnp
popa
mov
hlt
lds
cmp
insb
dec
push
pop
or
mov
add
jns
mov
pop
and
adc
adc
scas
push
inc
mov
sub
std
shlb
mov
cmp
pop
out
cmpsb
ljmp
lea
cltd
addr16
pop
loopne
shlb
test
add
mov
idivl
xchg
xor
mov
push
imul
enter
push
rorb
data16
lret
push
pusha
in
xor
dec
push
sub
aas
movsb
sar
mov
roll
shrb
lret
push
or
pop
negb
in
fdivp
out
mov
dec
rclb
scas
lods
lods
cld
into
dec
mov
pop
mov
divl
mov
lret
test
insb
jne
movsb
or
mov
sbb
or
scas
aad
ret
movsl
rorb
loopne
lods
jecxz
rorb
adc
les
enter
mov
out
cmpsb
push
movsl
aad
mov
lock
mov
mov
mov
xor
or
ljmp
mov
adcb
fcmovu
scas
fldenv
mov
les
cmc
xchg
lea
aaa
cmp
xor
fimull
int
mov
pop
mov
gs
mov
xor
pushf
jno
cmovb
or
ds
sti
cmc
or
inc
std
loopne
mov
jo
mov
and
stc
int3
std
or
add
fwait
adc
lret
push
ss
push
out
inc
dec
mov
jmp
or
dec
jle
or
xor
sub
mov
mov
cmp
mov
jecxz
xlat
mov
repnz
inc
adc
pop
mov
jmp
pop
rol
xor
pusha
aad
jge
sub
jnp
insl
lods
subb
mov
cwtl
sub
mov
icebp
stos
jle
hlt
add
scas
aas
test
xchg
repnz
scas
sub
jl
or
sub
xchg
faddl
mov
pop
sub
lods
mov
int3
idivb
out
fnstenv
mov
das
int
add
test
movsl
into
cltd
xchg
or
and
js
adc
pop
repnz
aam
mov
int
loopne
add
pop
loop
or
fdivl
or
hlt
adc
jg
pop
lret
out
int
add
adc
stos
aaa
lret
test
mov
mov
ret
xchg
jns
sub
pop
bound
pop
iret
xchg
inc
movsl
inc
mov
scas
int
cmp
xor
std
add
stc
mov
imul
mov
in
mov
ret
mov
adc
add
mov
adc
dec
enter
lods
je
add
mov
out
rcl
adc
pop
mov
outsb
jne
mov
icebp
inc
clc
pop
push
xchg
pop
mov
testl
enter
roll
mov
sub
hlt
out
mov
in
xchg
pop
ret
xchg
call
fidivrs
dec
inc
or
xchg
dec
push
cld
lods
int
iret
mov
or
xchg
lret
add
sub
hlt
cmp
call
in
mov
int
sar
mov
cmp
xchg
mov
dec
mov
cmp
push
jle
test
iret
test
sbb
xchg
clc
sub
out
mov
pop
movsb
mov
in
mov
pop
mov
fcmovne
icebp
mov
sbb
push
sbb
mov
lcall
sub
adc
xor
push
pop
pop
or
into
jb
or
push
mov
roll
imul
into
push
sbb
in
adc
jle
add
movsl
or
out
pop
adc
add
pop
icebp
jmp
nop
xlat
lret
stc
ret
mov
mov
test
xchg
repnz
mov
jbe
sbb
loop
gs
pop
mov
xlat
mov
mov
jge
in
stc
mov
cmpb
pop
ja
addr16
jb
test
inc
add
jl
ficoml
ficomps
cmpsb
jbe
pop
popa
ret
in
out
xchg
add
dec
inc
jns
icebp
adc
inc
sarb
jbe
fisttpl
pop
add
adc
shlb
mov
cs
push
adc
pop
dec
jg
mov
sbb
bnd
daa
or
push
jnp
mov
nop
insl
adc
mov
bnd
inc
jno
mov
gs
or
adc
sti
or
ljmp
add
pop
pop
js
icebp
pop
insl
jns
jg
es
mov
lods
dec
imul
pop
lea
pop
rcr
pop
imul
cs
add
sub
hlt
insl
adc
inc
rclb
mov
mov
xor
mov
notb
ds
into
lret
imul
xor
int
arpl
jbe
ret
out
adc
hlt
pop
xchg
mov
repnz
push
loop
pop
outsb
ss
pop
add
scas
scas
fiadds
sbb
sar
cmp
into
fiaddl
jge
in
cld
repnz
into
sti
dec
xchg
pop
cld
xchg
out
or
scas
jge
in
test
push
sar
add
jbe
add
in
repnz
icebp
in
pop
in
or
into
stos
out
push
in
into
mov
movsb
out
fcmovu
es
in
pop
int
mov
push
es
cmp
mov
idiv
rcr
out
pop
sbb
jge
in
pop
int
sub
pop
in
repnz
into
xor
pop
fimull
push
in
data16
push
xchg
cld
jbe
jp
outsb
jge
in
xchg
jle
xchg
xchg
cld
stos
test
mov
fidivrl
into
fsubp
xchg
idiv
repnz
adc
in
clc
sbb
ds
into
pop
lods
lock
rclb
mov
leave
cli
lahf
adc
cld
or
xchg
adc
or
dec
xchg
mov
addr16
ret
mov
into
shlb
push
dec
xlat
mov
pop
cli
cmp
shrb
sbb
push
repnz
xchg
ds
sbb
add
inc
loop
rclb
in
jge
in
pop
into
cmp
aad
mov
test
in
jge
es
fucomp
adc
shlb
lea
pop
pop
xchg
repnz
lahf
pop
inc
std
jb
rclb
dec
pop
push
ljmp
adc
ret
adc
cld
cli
pop
xchg
mov
jmp
or
or
add
fimuls
push
stos
dec
cmp
xor
and
jp
pop
xorl
nop
iret
or
xor
mov
adc
adc
and
add
adcb
js
pop
add
xor
xlat
fs
rorl
cwtd
mov
imul
xchg
daa
adc
inc
nop
inc
and
mov
cmp
test
push
sbb
out
mov
decl
je
jo
sub
cmpsb
and
xor
sbb
ret
movsb
mov
dec
int
push
push
jge
js
jo
or
imul
push
or
add
push
fcmovbe
lret
ja,pn
jmp
loopne
mov
in
lahf
rcll
cmp
repnz
mov
adc
dec
in
rcll
mov
sbb
pop
loopne
pop
xchg
inc
xchg
mov
push
addl
mov
in
test
push
or
adc
fistps
imul
scas
jecxz
iret
or
xchg
dec
cmp
ud1
sub
or
sbb
jmp
xlat
add
jbe
ja
sub
vmread
mov
push
popa
out
cwtl
xor
frstpm(287
data16
movsb
cmp
jle
dec
aaa
xchg
dec
and
push
lods
mov
adc
out
ret
sub
jle
cmp
jl
mov
push
cli
popl
jle
sbb
jno
pop
dec
lahf
xchg
out
jmp
sub
and
adc
lods
xchg
movsb
orl
pop
mov
mov
xchg
sbb
jl
std
and
mov
jmp
jp
and
data16
cmpsb
fadds
bswap
loopne
mov
or
mov
jge
in
and
or
movsb
stos
in
lret
loope
jbe
psllw
xchg
and
inc
jecxz
lcall
sub
mov
int3
nop/reserved
test
sbb
popf
add
xchg
fdivl
flds
xchg
pusha
push
movl
fsubrl
pop
add
lds
stos
in
cs
call
push
mov
or
inc
dec
mov
add
jge
pop
ret
pop
sbb
sarl
outsl
sbb
mov
push
or
js
enter
dec
pushf
mov
ljmp
test
mov
lcall
xchg
pop
lcall
in
fcmovu
lret
les
adc
out
std
mov
xor
in
test
call
sahf
cmc
imul
lock
in
repnz
mov
mov
cltd
mov
loope
loop
loopne
ljmp
rcrb
fldt
inc
test
mov
movsl
js
dec
in
push
imul
loop
dec
xchg
mov
add
int
ret
cmpsl
jnp
and
xchg
sbb
pusha
xchg
and
bound
mov
nop
mov
cmp
out
shl
inc
mov
fsubrp
mov
insl
add
mov
jne
ret
ret
popf
into
popa
sarl
in
push
sbb
adcb
fisubl
adc
inc
iret
sub
insb
jnp
imul
push
or
adc
add
pop
ss
sub
es
jecxz
adc
sub
or
fisttpll
call
mov
push
xor
sbb
out
in
jecxz
out
in
loopne
fistps
repnz
jge
jno
push
aas
dec
loop
jecxz
mov
dec
and
push
in
cs
cmp
xor
sub
es
pop
cmp
jmp
cli
push
pop
sub
es
es
mulb
loop
fisubs
ljmp
fisubl
es
es
push
movsb
lea
xchg
es
xchg
insl
es
sub
sbb
jmp
adc
loopne
jnp
imul
enter
popf
cmp
aaa
sbb
adc
lahf
loop
fwait
cmp
or
fsubrl
nop
jge
ficoms
cmp
and
jmp
jecxz
out
in
loopne
filds
das
adc
out
rolb
sub
add
loopne
fbld
adc
nop
or
adc
iret
testb
dec
ret
dec
rorb
mov
cmpsl
dec
mov
dec
jnp
imul
jo
pop
dec
push
dec
cmp
dec
dec
jmp
sub
push
std
in
sarl
ss
push
push
pop
jl
into
das
pop
jne
add
xlat
iret
sub
dec
xchg
dec
jb
je
inc
dec
or
cld
jnp
imul
mov
mov
mov
imul
inc
mov
imul
and
jno
lret
dec
or
stc
cmp
cmp
mov
jnp
jb
fadd
jl
test
add
fisubs
dec
xlat
dec
mov
mov
xchg
xor
out
push
out
xchg
in
cmpsl
loopne
in
or
popl
out
sub
sbb
mov
xchg
and
add
pushf
jmp
stos
test
stos
mov
fndisi(8087
orl
or
fstpl
push
adc
shl
mov
dec
push
sub
add
stc
jnp
imul
nop
cmp
fcoms
and
add
push
fcoml
outsb
aad
inc
mov
mov
pop
and
sbb
pushf
cli
sahf
add
movsb
in
lret
mov
lods
lret
mov
mov
cmp
in
jl
push
and
mov
cmpb
inc
xchg
enter
mov
arpl
add
cmp
xlat
xor
mov
es
es
bound
addr16
es
es
es
inc
es
cmp
das
and
rep
out
rorb
rclb
adc
adc
dec
fimuls
dec
leave
dec
les
dec
mov
test
dec
mov
dec
jp
pop
dec
push
dec
xor
push
loope
jnp
imul
addr16
push
rcrb
and
push
add
jnp
mov
insb
es
push
es
lahf
fldt
int
ret
and
pop
lea
mov
inc
mov
loopne
roll
cltd
add
roll
addb
jg
add
jg
xchg
call
aas
scas
mov
sub
scas
lret
jecxz
clc
insb
mov
jg
xchg
fucompp
ret
notl
mov
xor
cli
in
idivl
out
jl
movsb
int3
cmpsb
shll
sahf
mov
mov
popa
in
jecxz
jecxz
data16
sub
push
mov
ja
outsl
es
mov
jge
les
xor
stc
shr
nop
mov
iret
cwtl
xchg
xchg
ja
jp
push
sub
mov
mov
loope
xchg
jle
das
sahf
test
stos
lret
cmpsb
je
push
add
push
xchg
sbb
out
not
xlat
mov
xchg
jnp
je
mov
push
mov
pushf
mov
lahf
test
stos
pop
movsb
scas
imulb
ljmp
les
popf
insl
xchg
call
sub
out
ja
fcom
mov
ja
pop
js
dec
push
sbb
sbb
and
cmp
jmp
mov
andl
add
fstl
repz
pop
add
lds
aaa
jnp
push
mull
rcrl
call
jnp
lods
imul
ljmp
hlt
loop
in
dec
sahf
cmp
es
pushf
or
popf
mov
mov
lcall
mov
cmp
ret
cmp
push
subb
es
and
push
push
loop
push
pop
cmp
push
sub
and
ret
jg
jg
jg
xchg
cmc
loope
negl
popa
mov
lea
fistpl
xchg
mov
das
icebp
adc
adc
test
ret
flds
xor
inc
add
in
xor
mov
fildll
fistpll
jbe
pop
fbld
push
filds
sub
xor
sbb
and
adc
adc
cld
xchg
clc
pusha
outsb
mov
shl
enter
mov
loop
data16
jae
jge
pushl
mov
xorl
testl
inc
jae
xor
add
pushf
negb
popa
xchg
movsb
add
out
jl
iret
ljmp
ljmp
sub
xlat
jmp
add
add
in
out
in
out
push
daa
int
add
mov
cs
jns,pn
push
test
pushf
adc
data16
dec
cmpsb
sub
or
fiadds
fwait
push
dec
test
ljmp
jge
dec
dec
es
mov
mov
pusha
xor
adc
fildll
int
mov
jmp
hlt
mov
mov
js
rorl
xchg
fistps
xor
sti
jmp
pop
dec
inc
sbb
rcll
xchg
jecxz
out
in
lock
jg
jg
jbe
add
jl
mov
subb
push
jmp
insb
jae
adc
pop
loopne
mov
lock
nop
push
cmp
dec
fucom
scas
pop
stos
loope
lahf
sahf
and
or
sbb
jmp
fisttpll
pusha
cmp
imul
jno
rcrl
outsb
data16
cltd
pop
jmp
in
cmp
jecxz
in
ror
nop
ret
adc
sub
je
push
push
fdivrs
sbb
repz
outsb
jecxz
shl
fprem
enter
sbb
cmp
push
mov
shr
nop
call
int3
addr16
push
inc
rorl
fidivrs
ss
jl
lea
in
scas
repnz
pop
adc
mov
in
loope
orl
add
jg
add
jg
jg
jg
jg
mov
into
pop
push
and
xchg
pop
and
lea
dec
cmp
fcmovnu
jnp
imul
rorb
cmp
sub
xor
outsb
es
jbe
add
fdivrp
xor
add
movsl
jg
jg
mov
sti
clc
fstl
push
scas
nop
outsb
dec
pop
adc
pop
push
dec
cmp
dec
and
adc
adc
std
xchg
jmp
aam
ja
push
aam
lret
imul
pop
add
shlb
lds
cmpsb
push
shr
ljmp
push
mov
stos
jecxz
cs
xchg
sbb
in
sahf
andb
mov
mov
xchg
fildll
ja
jae
jg
jg
jg
jg
push
and
inc
pop
add
or
call
jmp
test
int3
in
or
in
inc
ds
fistps
lock
sbb
jae
pop
push
dec
sub
fiadds
add
or
inc
out
sbb
sbb
ljmp
dec
ret
or
fildll
in
addr16
arpl
cmp
push
sbb
dec
sbb
sbb
cs
jbe
adc
add
gs
in
cld
mov
mov
add
filds
shl
stos
jle
nop
loope
shlb
sbb
pusha
lods
loope
fisubrs
push
cmp
ljmp
lock
ds
cmp
loop
adc
nop
mov
mov
lcall
and
idivb
insb
xor
sbb
and
inc
push
lret
scas
sbb
sub
sub
ljmp
jnp
jnp
ret
cmp
sub
adc
fidivrs
jle
inc
lcall
adc
adc
mov
js
outsb
fistpll
jbe
bound
pop
push
data16
push
cs
xor
ds
es
es
out
sbb
out
cltd
notb
es
es
adc
das
cmpsb
dec
mov
pop
xchg
nop
or
xchg
jb
outsb
push
jp
push
push
cmp
pop
sbb
inc
sbb
notb
ss
and
push
sub
in
lock
in
loopne
filds
fcomip
fucomip
fcomip
in
ficoms
aaa
mov
aaa
mov
sbb
mov
cs
jb
shr
mov
jmp
cmc
cmp
adc
mov
in
add
push
and
outsb
insl
arpl
pusha
fmull
scas
jecxz
lods
scas
and
cmc
dec
movsl
in
cmc
test
les
int
loop
lret
int3
into
fdivrl
lock
push
int
in
xchg
dec
imul
jns
push
pop
data16
sub
xchg
pop
imul
test
mov
pop
push
push
add
and
and
or
popa
stos
dec
xor
movsb
mov
out
loopew
outsl
push
dec
pop
daa
or
sbb
xor
out
pop
nop
dec
ja
sahf
sarb
push
xor
ds
movsl
add
loopne
xchg
pop
mov
fwait
push
cld
int
mov
pop
xchg
out
push
mov
pop
cmp
out
push
or
jmp
pop
ret
sub
neg
lock
and
pushf
lods
clc
fwait
mov
call
movsb
popf
test
mov
inc
mov
out
xchg
mov
mov
xchg
pop
sub
ss
sub
insb
push
mov
in
into
xor
test
insl
mov
fists
decl
sbb
frstor
mov
loope
insl
mov
or
in
mov
mov
lret
cmc
fs
faddp
das
xchg
push
jg
add
std
mov
int3
fcomi
ds
add
push
push
or
add
idivb
imul
mov
cmp
shl
ja
lock
gs
pop
xlat
imul
lret
fcomps
out
jmp
repnz
mov
sbb
ljmp
mov
int
sti
out
cmc
inc
cmp
and
in
rcrb
sbb
pop
in
leave
add
clc
int
hlt
add
mov
mov
sbb
int3
cmpsb
and
xor
xchg
in
int3
icebp
xor
repnz
icebp
rorl
sti
test
in
repnz
sub
inc
pushf
and
jmp
js
inc
sti
xchg
enter
fsub
mov
cmpsl
repz
lock
out
ds
adc
or
mov
jmp
lahf
pushf
push
out
clc
jmp
fsubp
cmp
stos
jecxz
fcmovnu
cmp
xchg
add
jmp
rcr
mov
sub
out
aas
sahf
call
loop
or
jb
jmp
call
mov
and
in
dec
jmp
sbb
in
call
js
imul
jle
pop
lret
jle
fwait
jmp
cmp
jbe
mov
jmp
in
int3
out
inc
rcll
mov
loopne
int3
rclb
inc
add
mov
push
loopne
rclb
dec
icebp
les
inc
cmc
rolb
movsl
mov
dec
in
fstpl
and
inc
lods
repnz
out
mov
mov
inc
je
incb
add
add
pop
jnp
mov
jnp
test
inc
insl
loopne
cmp
push
xcrypt-cfb
cmpsl
mov
fidivrs
lcall
repnz
cmpsb
neg
dec
mov
xchg
adc
jp
pop
mov
sbb
push
test
out
loopne
mov
sub
movsl
adc
inc
ljmp
lock
or
add
and
movsb
es
cmp
dec
sbb
mov
ret
movsl
fldcw
jl
mov
xlat
icebp
xlat
das
ds
enter
lcall
out
ljmp
mov
aad
test
mov
mov
movsb
dec
in
scas
adc
add
mov
xor
mov
pop
fsubl
sbb
shll
mov
jmp
mov
dec
and
loopne
cmp
push
repz
mov
mov
loope
stc
ja
fisubrs
add
call
jbe
fwait
mov
aad
mov
inc
sbb
pushf
mov
add
ficoms
xor
cmc
jmp
loop
xor
out
jo
mov
jp
sub
add
push
test
sbb
hlt
mov
xor
in
mov
mov
mov
mov
dec
cmp
cmp
push
mov
xor
mov
repnz
scas
mov
inc
test
mov
and
sarl
mov
jns
fwait
incb
mov
outsl
push
mov
ljmp
mov
fisubrs
rorl
add
mov
in
xchg
andb
mov
insl
fmul
popf
push
sub
das
jmp
outsb
call
mov
aas
pop
enter
pop
xchg
repz
mov
insb
js
dec
repnz
mov
into
sub
mov
out
mulb
js
stc
repnz
mov
xchg
testl
sbbb
subb
in
sahf
sbbl
fcmovnbe
mov
gs
cli
sbb
sbb
add
and
fdiv
xchg
fmull
cmc
in
pop
cmp
out
or
fcmovnu
jbe
les
ja
jecxz
dec
lret
ljmp
test
movsb
lds
mov
outsl
lcall
out
fmull
sbb
fisubs
pushf
lea
inc
outsb
pop
js
jns
dec
mov
shlb
add
mov
mov
push
push
test
adc
mov
jnp
lods
inc
in
in
cmp
xor
adc
cmc
lods
or
aas
adc
lock
inc
in
mov
leave
sub
pop
in
cli
xorb
in
ret
jb
scas
xchg
inc
jns
fwait
das
and
or
and
fisttpll
lods
pushf
movsb
xor
push
fmull
lods
push
in
xor
xchg
movswl
pop
mov
popa
xchg
add
sub
mov
ja
inc
mov
mov
hlt
or
xchg
cmp
and
mov
and
inc
clc
jne
and
clc
fidivrs
ror
repnz
pop
loope
shlb
fucomp
in
lock
out
mov
andl
test
xchg
test
xchg
das
loope
fucomp
enter
push
dec
jmp
mov
xchg
js
or
out
inc
lock
jmp
cli
imul
int
and
jns
cmp
stc
ficompl
adc
arpl
aas
loop
ljmp
or
lock
mov
pop
iret
jp
rorl
mov
or
repnz
xchg
loop
ljmp
out
jmp
dec
fstpl
fldl
imul
mov
in
shl
mov
adc
xchg
push
outsl
aad
mov
push
int3
mov
mov
adc
mov
call
ljmp
idivl
or
clc
addb
out
inc
push
pusha
movsl
inc
mov
aad
test
xchg
dec
push
shr
jl
dec
fsubr
mov
call
xchg
loope
cmp
push
mov
in
push
xchg
sahf
fldcw
aad
xchg
loop
inc
stos
into
aaa
repz
lret
lods
movsl
daa
mov
pop
les
lds
xchg
pop
scas
cmp
pop
repnz
fimuls
imull
imul
or
jbe
and
jnp
int3
sti
dec
aas
adc
std
push
jbe
mov
mov
in
aam
rcll
add
out
mov
imul
insl
inc
or
movsl
repnz
mov
lret
shrb
jbe
push
testl
jle
mov
inc
sbb
pop
mov
sarb
imull
pop
add
repnz
jbe
xchg
enter
gs
out
fs
mov
dec
stc
out
shl
jo
je
stc
xchg
cmp
mov
repz
shrb
movsl
xchg
push
push
inc
dec
jge
test
std
cmc
leave
mov
jp
cmpsl
push
adc
iret
pusha
cs
mov
insb
dec
jge
sbb
mov
push
pop
add
cld
out
scas
cli
loopne
xor
lret
ljmp
or
push
test
in
outsb
jl
iret
repnz
mov
add
stos
loop
bound
sub
test
out
mov
fdivp
sbb
repnz
stos
mov
xchg
xor
sub
fidivl
int
sub
lock
mov
fdivp
pop
fnsave
je
push
iret
cmp
dec
push
push
scas
sbb
cmp
mov
adc
bnd
cli
push
mov
dec
xchg
jns
out
push
lock
daa
test
icebp
ss
xchg
sbb
xchg
scas
iret
mov
jne
xchg
add
loop
fwait
test
es
push
cmp
push
mov
push
jp
jmp
aam
mov
xchg
xchg
cwtl
cltd
cltd
repz
lds
jl
call
jge
stc
ljmp
pop
cltd
loope
mov
icebp
push
rorb
cld
jecxz
xor
fcomps
or
or
call
imul
icebp
mov
dec
jle
dec
mov
test
aad
cmc
shr
mov
rcrl
rcll
icebp
fldl
fildl
fcompl
fdivs
push
sar
mov
ror
in
xor
in
mov
popa
or
or
mov
lock
insb
jne
lods
test
stos
dec
inc
xchg
repnz
jbe
push
icebp
cmp
sub
mov
outsl
in
scas
lods
cmc
into
and
mov
mov
lcall
faddl
jg
pop
mov
insl
stos
fs
or
adc
and
call
loop
ljmp
push
movsb
fstpt
shr
fcmovnu
or
inc
mov
dec
cs
dec
pop
xlat
nop
in
dec
fsubp
fucomp
push
loope
add
in
out
into
out
ds
inc
out
arpl
insb
lock
dec
lods
mov
int3
inc
dec
pop
lods
in
jecxz
js
je,pt
popf
mov
int3
es
and
mov
push
xlat
out
fldl
in
add
mov
adc
mov
daa
pop
pop
mov
insl
clc
cmp
ficomps
cltd
outsb
mov
repnz
jns
jno
test
call
push
sbbb
xchg
jns
inc
std
dec
movb
mov
repnz
fdivl
lcall
popf
leave
xor
pop
out
dec
mov
pop
loope
test
lret
jg
dec
inc
pop
xor
and
leave
dec
pop
out
decl
ljmp
pop
xchg
aas
mov
out
cmp
mov
sarb
test
pusha
cmpl
cwtl
inc
hlt
out
add
pop
clc
jecxz
daa
std
cmc
insl
mov
cmp
roll
mov
frstor
pop
out
lret
out
mov
inc
fmulp
dec
inc
jg
sbb
das
and
jns
cli
mov
cmpsl
out
out
jmp
pusha
mov
or
push
popa
and
pop
mov
pop
mov
mov
and
and
out
jg
cmp
push
aaa
iret
pop
sbb
mov
lock
call
mov
jp
mov
fdivl
cmp
lret
xchg
out
cmpsb
jmp
out
fiadds
pop
call
out
add
inc
cmp
mov
sub
sub
adc
xor
inc
jne
mov
or
jmp
in
fisttpl
inc
add
mov
lock
mov
jnp
mov
mov
cwtl
xchg
out
pop
and
ss
sahf
loop
fnstcw
out
ds
xor
sbb
dec
cwtl
test
sub
nop
and
aas
les
imul
mov
lods
jno
imul
and
mov
push
push
jne
mov
shll
inc
ljmp
ja
out
sub
and
sbb
xchg
call
adc
imul
addr16
adc
jmp
popa
ljmp
arpl
xchg
push
pop
or
scas
or
test
test
insb
test
inc
jl
fsub
mov
jmp
push
sarb
push
pop
enter
push
lret
es
outsb
ret
cmpl
js
lret
mov
scas
repnz
add
inc
pop
daa
ficompl
imul
cwtl
fnstsw
fcomi
jmp
xor
test
pop
outsb
es
imul
dec
and
cmc
pushf
or
popa
lock
pop
xor
ficoms
frstor
dec
ret
jne
insl
push
push
jg
jmp
inc
sbb
sub
mov
mov
rcr
sbb
imul
jnp
cli
sub
aad
popf
repnz
sarl
inc
push
mov
idivl
jecxz
mov
cld
imull
xor
fsubl
cmp
in
lds
cmp
les
bnd
xor
imul
stc
sbb
sub
cmp
and
dec
and
ret
imul
cld
in
adc
mov
stos
sahf
popf
mov
xchg
in
ljmp
fxch
fisttps
mov
in
out
scas
rol
data16
out
adc
mov
loop
push
mov
xorl
dec
inc
mov
fs
loopne
icebp
out
jnp
mov
cltd
sbb
cmp
pop
jo
sub
jns
push
sbb
fwait
ja
mov
out
out
sub
std
insl
in
inc
dec
push
pushl
sub
es
mov
xor
mov
jle
popf
pop
rorl
sbb
loop
test
jno
pop
cmp
das
scas
test
testb
movsb
fstpt
sub
push
inc
inc
inc
cmp
fldl
fucom
ficoml
fs
scas
test
stc
sahf
mov
jnp
inc
int3
insb
ljmp
lahf
jmp
fsubl
cmp
ret
mov
ficoms
cmp
lret
dec
nop
mov
sub
cmp
jmp
testb
mov
mov
aas
mov
xlat
pop
lret
xor
test
aad
in
ret
mov
jmp
mov
sarl
dec
ja
xor
pop
mov
jne
xor
cmp
repnz
inc
and
xchg
stos
dec
pop
fidivrl
cmp
mov
push
outsb
pop
mov
sbb
sub
ljmp
test
jns
rcrb
mov
sbb
jl
sub
jmp
fidivs
out
pop
add
pop
insb
flds
lahf
movsb
rolb
and
fidivs
out
inc
ffree
in
push
mov
push
test
fmuls
and
pop
or
mov
mov
aaa
pop
imul
cmc
sub
aam
ja
out
fldl
push
in
and
fcmovnb
cld
xchg
call
adc
mov
cs
shrl
cs
lods
nop
ljmp
mov
lcall
out
rcr
cmp
lock
icebp
mov
dec
popf
int3
push
inc
sti
xor
ljmp
mov
hlt
cltd
pop
cmc
xor
cmpl
sbb
jnp
aaa
lods
inc
cmp
cmp
add
std
xor
sub
sbb
fldl
rclb
cli
cmp
mov
cmp
pushf
ljmp
mov
cmp
mov
mov
dec
jns
int3
roll
lret
shlb
cmpsl
or
jecxz
mov
stos
mov
mov
fimull
pop
into
ja
into
test
adc
adc
mov
inc
pusha
nop
jecxz
mov
inc
cmp
movsb
aam
lods
mov
das
mov
jno
or
enter
mov
sbb
sarb
cmp
loop
cmpsl
adc
test
add
mov
or
or
xchg
pushf
fisubrs
lods
xor
jmp
sahf
xchg
fcmovbe
enter
shlb
push
mov
push
cmpsb
mov
sarb
int
lahf
movsb
out
vucomiss
sbb
ret
repz
xchg
or
mov
inc
int3
fildl
les
or
fst
jmp
xchg
add
int
fwait
mov
aas
js
xlat
mov
lods
mov
cmpsb
and
pop
mov
pushf
popf
loope
into
insb
test
cmp
mov
xor
scas
call
into
cmpsl
rclb
ljmp
ret
mov
add
int
mov
scas
frstor
shrl
push
sbb
inc
or
aam
repz
fsubs
jp
mov
repz
ret
les
movsl
test
mov
and
xchg
mov
pop
stos
fnstenv
mov
mov
shld
stos
cmp
int
sbb
shrl
pushf
rsm
fmul
ljmp
into
xchg
movsl
leave
fucomi
aad
inc
sti
repnz
sbb
add
sahf
xlat
adc
mov
lods
mov
aad
xchg
mov
subb
sahf
repz
mov
sbb
lods
lds
mov
fcomp
loop
into
adc
rcl
loop
mov
popf
enter
into
mov
scas
loop
les
test
fcmovbe
outsb
sbb
push
lret
xchg
jmp
movsb
cltd
loop
fstpl
push
out
out
leave
ss
call
adc
loope
mov
fcomps
loop
int
mov
xchg
stos
mov
adc
loop
fstps
mov
call
mov
xchg
mov
iret
icebp
and
les
sbbb
stos
fwait
cmpsl
fcmovb
lea
fcom
mov
mov
adc
iret
pop
or
stos
pop
pop
mov
adc
loope
stos
dec
mov
nop
into
les
fnstsw
xor
in
mov
fcmove
inc
out
dec
loop
jne
xchg
jmp
bnd
out
in
jp
jo
mov
mov
mov
scas
xor
push
loop
mov
aam
sbb
loope
fldcw
rol
aad
rep
subb
pushf
out
fsub
out
loop
fidivrl
stos
test
sub
and
and
ret
lret
shll
cmpl
movsl
ret
push
clc
mov
int
scas
fdivl
stos
les
mov
xchg
lods
shll
rcl
mov
int
pop
out
loopne
lds
mov
and
fcmovne
aam
clc
enter
jo
mov
or
into
fldl2e
sbb
push
push
mov
aam
mov
mov
ljmp
out
fnstcw
jp
jg
xchg
cmp
lret
int
pusha
adc
cmp
jae
mov
mov
cmpsl
rcr
mov
aad
ljmp
inc
fmul
out
int
pushf
pop
sub
sub
or
fcmovnu
lret
hlt
sti
xchg
sahf
ficoms
repz
hlt
test
cltd
cmpsl
movsb
call
mov
shl
int3
clc
stos
shl
cld
mov
leave
les
shr
stos
scas
aad
mov
ljmp
fcmovnb
adcb
test
shlb
pop
or
mov
add
cmp
mov
test
xor
sbb
xlat
fistpl
mov
push
mov
jmp
int3
test
js
or
aad
mov
shl
sbb
movsl
dec
loop
lret
rolb
fsts
push
mov
pushf
push
ret
dec
fidivs
lret
mov
test
fs
mov
mov
adc
cmpsl
call
jne
stos
int3
sbb
and
cmp
aaa
int3
mov
adc
cmpsl
xor
fsubl
popf
xchg
ljmp
pop
adc
mov
in
mov
mov
testb
dec
shlb
cli
int
mov
ds
cltd
xchg
jmp
insb
sbb
push
xchg
inc
xchg
dec
leave
mov
test
ljmp
mov
in
mov
pop
mov
mov
mov
movsl
arpl
addb
mov
shl
mov
popf
jb
int
sbb
bound
mov
movsl
cmpsl
sbb
aad
xchg
lea
xchg
cmpsl
shlb
dec
mov
scas
pop
adc
leave
rcr
cltd
xor
lcall
rcl
int
int3
movsl
dec
and
xlat
fisubl
fidivl
pushf
das
test
out
dec
into
mov
leave
xchg
add
push
fxch
mov
add
mov
loope
or
xchg
xlat
pushf
in
inc
sahf
es
push
cli
mov
pop
movsl
jmp
lret
out
mov
mov
test
pop
and
aas
xchg
push
sarb
lods
lods
sub
mov
sbb
ror
mov
lods
mov
mov
adc
int3
iret
popf
lret
lret
sar
fcom
movsb
into
lock
mov
call
mov
mov
adc
fcompl
call
sarl
push
jmp
popf
sub
push
lods
xchg
not
jb
movsl
lret
movsb
lahf
movsb
or
movsl
stos
sub
sbb
adc
icebp
fdivrs
fwait
adc
popf
rcrl
into
mov
leave
xchg
or
mov
or
pushf
fnstsw
pop
sti
or
cs
shlb
mov
mov
cmpsl
sbb
add
vcmpps
lods
fdivl
or
les
mov
fwait
lods
sbb
rorb
leave
sbb
xlat
mov
lea
ret
xchg
jb
push
lret
lods
xlat
ljmp
sbb
jg
fucomi
popf
mov
scas
lret
lds
fnsave
sahf
ret
aad
mov
lret
mov
shll
ror
fwait
wbinvd
int3
ljmp
push
aam
lods
test
xchg
dec
mov
xchg
aam
xor
negb
loopne
lods
rcr
shl
dec
lds
sub
test
push
mov
scas
test
jl
js
imul
mov
les
mov
cmp
lods
fndisi(8087
scas
lods
mov
popf
ja
mov
out
lods
xchg
out
ror
add
mov
jecxz
or
mov
inc
mov
into
mov
mov
hlt
lret
iret
and
adc
cmp
rcr
add
jbe
ljmp
lds
repnz
xchg
xchg
bound
sahf
adc
mov
scas
shrl
push
shl
mov
mov
push
xor
sarb
mov
or
lea
int
rcrl
pop
lcall
xlat
mov
mov
out
sub
mov
mov
lea
shlb
and
pop
enter
loop
stos
xchg
sbb
fstps
mov
loope
aad
mov
dec
or
cli
and
test
lret
push
cmpsb
movsb
sbb
mov
out
popf
loope
or
aaa
sbb
mov
push
push
push
jmp
fwait
push
negb
stos
int3
out
ror
push
cltd
lret
and
fisubrs
jns
lret
mov
mov
scas
mov
adc
scas
mov
enter
pushf
cli
xor
and
push
sbb
enter
out
rorb
adc
mov
ljmp
mov
sahf
add
dec
cmp
jmp
int3
xchg
adc
out
aad
daa
loope
adc
scas
loop
mov
xchg
dec
in
sahf
aam
cmp
repz
push
hlt
loope
fnsave
int3
dec
and
loop
or
push
fwait
jl
movsl
dec
xchg
rorl
dec
into
or
lea
ret
ljmp
pop
fimull
aaa
out
jmp
ret
cs
pop
and
jb
loopne
mov
or
mov
aaa
repnz
mov
call
ficomps
ret
inc
sub
bound
fistps
fstpl
push
mov
mov
daa
rcl
or
dec
jno
outsl
mov
loope
sahf
clc
fmul
repz
mov
test
push
mov
jbe
jne
mov
mov
add
aad
mov
mov
push
movsb
ja
scas
mov
int
mov
mov
lahf
add
inc
ret
enter
lret
sbbb
ljmp
repz
mov
bound
ljmp
ret
mov
xchg
lea
fsubs
rclb
mov
loopne
call
xlat
mov
push
mov
fnstcw
mov
loop
enter
xlat
dec
paddusb
stos
fcmovne
test
cli
lods
mov
movsb
or
mov
push
pop
lahf
and
lods
mov
bound
shr
pop
int
mov
fdivs
call
lods
into
shll
fcomps
sub
int3
shl
add
mov
sbb
mov
add
sahf
fcom
aad
negb
mov
out
mov
jne
movsb
scas
cmpsl
push
mov
xchg
or
test
das
movsl
cmp
push
bound
adc
scas
scas
pop
adc
mov
into
push
push
or
fimull
mov
mov
xlat
xchg
xchg
outsl
stc
into
xchg
pop
testl
lods
daa
inc
mov
mov
mov
dec
nop
adc
lret
popf
stos
and
mov
mov
lock
adc
mov
mov
dec
sbb
sahf
or
repz
sbb
pusha
adc
fidivrs
outsl
xchg
scas
clc
fcmove
adc
leave
mov
movsl
cld
mov
jne
cltd
xchg
aam
mov
lea
out
aaa
inc
dec
daa
fcmovnbe
add
loop
movsb
mov
xor
outsb
pushf
jnp
pop
out
mov
sarb
jmp
loop
sbb
popf
movsl
push
or
fst
fmul
pop
mov
popl
stc
mov
inc
pushf
cmp
adc
jb
mov
movsl
popf
out
xchg
push
out
sahf
xor
push
loope
imul
mov
mov
push
cs
loope
ljmp
in
add
or
inc
call
mov
aam
xchg
call
enter
ljmp
ja
xor
pop
fadd
mov
sub
push
in
mov
xor
jb
fisubrl
movsb
notb
rcrl
rorl
movsl
lods
outsb
push
dec
in
loope
mov
or
mov
mov
or
fld
popf
cmp
lods
mov
popa
fildll
lret
int
xchg
ret
mov
scas
mov
call
stos
les
imul
sar
or
test
ljmp
mov
dec
fisubl
mov
fiaddl
mov
into
lods
ret
imul
mov
mov
stos
jmp
xchg
dec
xor
out
stos
lret
pushf
ror
int3
mov
sbb
loop
mov
pop
icebp
jb
sub
jge
je
rcrb
mov
scas
xlat
loop
fimull
jae
sbb
pushf
scas
fst
es
sbb
int
pop
lea
lds
fimull
int3
sub
stos
sub
mov
sbb
ja
repz
iret
xchg
xchg
ret
jl
loopne
test
mov
jb
mov
ljmp
subb
test
rorl
fisttpl
popf
sub
insb
mov
or
test
les
loope
cltd
xchg
adc
ljmp
testb
out
iret
pop
or
inc
rcrl
mov
lret
adc
mov
lret
mov
test
cmp
call
inc
fcmovne
cmp
xlat
fnsave
xchg
xlat
fsubr
mov
mov
lret
push
dec
mov
js
out
scas
sbb
out
adc
aad
ss
add
loope
fwait
lods
into
xor
stc
mov
lret
aam
push
mov
rcr
sub
mov
mov
mov
int3
mov
test
movsb
sub
and
les
clc
lods
mov
out
pop
or
scas
leave
mov
out
ret
adc
mov
and
lods
loop
mov
ljmp
add
or
fisubrs
mov
push
repz
mov
scas
rcl
or
sub
inc
in
mov
xrelease
add
loop
ss
call
pushw
fdiv
xlat
fisttpl
add
les
fisubl
lods
scas
mov
call
loope
fidivrl
dec
mov
dec
insb
ret
rclb
scas
mov
mov
lea
mov
out
rcr
sbb
mov
mov
add
ficoml
aad
out
stos
lods
jmp
out
shrb
js
subb
xor
lods
fucomp
sub
nopl
out
lret
scas
cmp
test
stc
add
mov
cmpsl
xor
jb
stos
or
call
les
lock
aam
and
stos
and
movsl
mov
jbe
clc
orl
push
test
lds
add
add
xchg
push
mov
das
fbstp
fldcw
jmp
out
scas
rcll
mov
mov
lods
loop
mov
mov
and
rorb
shrb
xchg
das
fwait
mov
enter
stos
rcpps
test
popf
ret
movsb
mov
xchg
pop
repz
test
dec
adc
mov
mov
cmpsl
mov
stc
setle
stos
int
movsb
bound
bound
mov
mov
movl
lret
out
enter
lock
xchg
xchg
cld
in
aam
xchg
cltd
bswap
rcl
int
pushf
int3
fwait
xor
dec
push
dec
mov
sbb
push
scas
das
mov
les
pop
mov
ror
test
movsl
sahf
sbb
xlat
mov
call
fwait
mov
jns
leave
push
mov
mov
mov
lret
out
fs
fsubs
ret
rcr
loopne
cs
es
fsts
mov
stos
fdivrs
push
out
out
fidivrl
pop
or
mov
jmp
cltd
fsubs
test
sub
mov
dec
out
test
cmp
mov
out
mov
bound
mov
lret
xchg
iret
scas
mov
lods
cmc
shlb
sti
fnsave
call
aad
sub
lods
fisubl
xchg
mov
icebp
adc
mov
test
scas
out
xchg
movsl
rorb
sbb
jmp
mov
out
push
or
push
cmp
leave
rcr
cwtl
jp
mov
scas
lret
lock
mov
popf
cmpsb
loop
fcomi
les
xlat
loop
mov
test
movsl
leave
sahf
call
cmp
stos
mov
movsb
adc
sub
loop
lret
push
lods
sarb
adc
mov
mov
fwait
shrb
sub
jmp
xlat
add
mov
adc
mov
mov
ret
stos
aas
outsl
inc
imul
mov
sub
fldt
out
dec
push
pushf
ljmp
mov
stos
or
sub
dec
add
shlb
ret
push
fsub
mov
dec
push
or
cld
lret
cmpsl
dec
les
into
mov
scas
lret
mov
int
out
andb
inc
out
out
fucomp
jle
gs
fstpt
mov
bound
lret
pop
xlat
cs
arpl
out
ljmp
mov
stos
loop
mov
enter
mov
test
push
fidivrl
iret
fwait
test
xchg
mov
mov
mov
mov
ljmp
sahf
sahf
push
mov
xlat
loopne
mov
mov
aad
mov
loope
push
scas
mov
dec
jmp
lods
rorb
aaa
and
lods
mov
mov
cmp
fdivr
fisubrl
fldl2t
push
push
pushf
sti
pop
push
xchg
movsl
enter
fwait
mov
ret
out
fstpt
iret
mov
xchg
add
mov
fsubrs
jmp
adc
shl
xchg
or
aad
jbe
xor
movsl
mov
sti
fwait
bound
push
bound
mov
mov
fcmovbe
rolb
cmp
mov
out
mov
or
movsl
lods
inc
sbb
lret
jbe
mov
adc
mov
xchg
dec
out
cmp
sbb
push
xchg
sbb
fsubs
or
fsubl
stos
out
loope
sahf
mov
into
mov
hlt
scas
les
and
mov
fndisi(8087
inc
mov
mov
mov
popf
push
and
adc
add
fdivs
xor
xchg
xor
rcr
scas
push
roll
loope
inc
jp
ja
mov
shr
jp
push
xor
mov
movsl
int3
movsb
les
mov
adc
stos
das
mov
out
push
ret
mov
ss
jb
movsb
test
lods
mov
outsb
scas
xorb
jno
movsb
sub
rcr
rcl
or
repz
or
dec
shrd
ljmp
fwait
insl
daa
mov
rorl
ljmp
pop
cmp
sbb
stos
sbb
lret
xchg
jae
mov
jge
test
aas
push
leave
ss
repz
jmp
les
sarl
loope
stos
test
mov
or
fwait
int3
xor
scas
mov
les
ficompl
fsubrl
ljmp
or
out
cwtl
mov
in
out
push
sub
in
pop
fwait
mov
jmp
hlt
out
stos
pop
xlat
fldt
lret
ror
lods
pusha
jb
mov
repz
rcrb
mov
xor
cmp
mov
ret
cmp
mov
mov
or
mov
cmpsl
in
enter
sti
and
jo
stos
int
cmp
rol
sub
rcl
popa
jecxz
outsb
fwait
cmp
or
mov
xor
fcmovne
and
adc
lret
fldenv
push
mov
out
dec
clc
fisubl
fidivrl
dec
adc
aam
mov
das
sub
scas
aaa
xchg
lds
pop
iret
stos
sub
xor
stc
mov
fidivs
sub
push
enter
rorl
iret
mov
fcmovu
add
mov
fcmovne
mov
mov
adc
into
repnz
fmulp
fsubrl
mov
mov
adc
out
push
ror
mov
pushf
xchg
sub
jg
pop
stos
out
int
fcom
aam
cs
sahf
xchg
out
mov
stos
stos
movsl
les
jnp
lret
aas
aaa
out
test
jecxz
lret
js
int3
xchg
add
sub
mov
enter
cmp
data16
fisubl
jnp
stc
lret
popf
loop
xchg
popa
sbb
or
into
fwait
or
repz
mov
adc
pop
sarl
mov
lods
insl
cwtl
mov
push
lcall
jns
sub
mov
rcrl
mov
scas
enter
notb
popf
int3
out
mov
pop
xchg
dec
mov
adc
test
fwait
incb
sub
lea
popf
ljmp
xchg
mov
add
add
inc
fwait
sbb
fsubrl
dec
lods
fisubrs
insb
test
mov
fmull
mov
mov
rcll
mov
pushf
scas
mov
lods
mov
dec
cli
out
fisubrs
xor
fmuls
mov
mov
pop
push
fmul
out
cmp
or
scas
xchg
and
sbb
les
fisubs
pop
mov
pop
out
loop
fsubrs
lcall
push
add
mov
lods
out
lret
adc
xchg
sub
out
sbb
mov
and
test
cmpsl
cmp
cmpsl
push
scas
ljmp
cmp
test
mov
add
cmp
xlat
sbb
cmc
lret
mov
sbb
int
xor
jo
jecxz
mov
lcall
bound
into
insl
fstp
mov
clc
fcmovbe
jns
cmp
data16
js
rorl
mov
fsubrl
mov
cmp
mov
pop
mov
fsubrs
in
xchg
icebp
aad
aam
or
test
jno
mov
dec
mov
iret
loope
sub
lods
iret
adc
incl
das
sub
mov
mov
or
mov
pushf
fld
movsb
and
popf
push
push
mov
mov
mov
mov
or
push
pop
mov
movsb
nop
mull
fstpl
scas
mov
pop
ret
mov
rol
shl
adc
aad
int3
into
lods
daa
addr16
add
fwait
out
mov
sub
test
mov
fbld
stos
scas
fbld
mov
rcrl
out
mov
movsb
jmp
lods
sbb
lret
test
mov
test
popf
call
or
inc
stos
xchg
shrb
fsubl
mov
loope
mov
stos
frstor
inc
mov
mov
cmpsl
popf
sub
fxtract
pop
lret
into
rorl
cld
nop
jb
scas
clc
cmp
arpl
stos
cld
mov
mov
mov
lds
mov
ret
mov
ljmp
xchg
jmp
addb
and
lret
fisubrl
push
adc
loope
ret
fimuls
stos
aam
nop
inc
hlt
int3
jge
mov
xor
mov
xlat
faddp
call
scas
test
pushf
adcl
movsl
mov
iret
adc
scas
call
sub
cld
mov
repz
pop
sahf
push
push
ret
inc
mov
outsl
aam
cltd
or
jmp
lahf
mov
add
mov
mov
test
cmpsl
fwait
xchg
mov
movzwl
mov
push
imul
movsb
cli
adc
or
call
xchg
ljmp
adc
mov
mov
dec
mov
mov
int3
daa
fwait
lods
ja
popf
xchg
lret
push
ret
mov
push
or
stos
dec
cmp
inc
test
fcomp
ror
jne
xchg
push
test
stos
sbb
fwait
cmpsl
xchg
mov
rorl
dec
pop
lea
loope
lods
inc
xlat
fmuls
cmc
lret
fsts
cld
fdivl
dec
fcmovu
fwait
stos
cli
es
out
ret
mov
cmc
sbb
in
adc
fldcw
rclb
mov
lret
stos
lock
insl
fisubrl
shll
sahf
call
arpl
stos
mov
xchg
xchg
icebp
stos
xor
aad
shrl
sti
int
leave
add
jg
sbb
fistpl
lods
mov
in
mov
aad
jbe
mov
test
pop
jl
mov
and
mov
aaa
movsl
cmpsl
fcom
add
lods
mov
pushf
movsb
mov
inc
mov
mov
je
fstpl
xchg
dec
cmpsb
pushf
mov
ljmp
cli
insb
mov
popf
popa
nop
test
sarl
ret
in
and
lret
dec
shr
fdivrs
sub
leave
and
push
and
bound
stos
repz
ret
scas
shrl
fnstenv
mov
sub
or
into
mov
lret
clc
iret
leave
fisttps
scas
sti
sbb
xor
push
scas
call
cmpsl
lods
test
mov
or
repz
lods
mov
xchg
adc
sahf
lds
ror
add
pop
pop
fiadds
mov
movsl
mov
loope
inc
mov
idivb
pushf
xchg
xchg
mov
int
stos
adc
lret
xchg
bswap
imul
dec
aad
movsl
popf
jmp
or
ljmp
xchg
lret
inc
scas
es
mov
cmp
gs
jecxz
fistpl
lret
dec
dec
loope
bnd
push
repz
mov
jge
mov
pop
xchg
jns
cmpsl
xlat
jmp
jbe
enter
loope
xlat
js
sahf
mov
mov
dec
mov
jbe
inc
ffree
out
fwait
sar
repnz
or
fcmovne
aad
popfw
call
int3
sahf
mov
lea
mov
push
leave
push
push
scas
int3
dec
cmpsb
cli
pop
pop
test
xchg
sub
mov
loope
pop
jecxz
cltd
mov
pop
fwait
lods
xchg
xchg
jmp
cmpsl
mov
add
test
inc
idivb
aad
cmpl
mov
inc
dec
mov
xor
dec
mov
push
dec
test
lods
jl
fmul
sbb
mov
movsl
loope
dec
jle
addr16
mov
sbb
lock
enter
outsl
stos
popl
fldt
lahf
lret
or
call
into
mov
ffree
test
xchg
xchg
jne
xchg
subb
int
push
out
repz
pusha
adc
insl
ret
out
cmp
bound
mov
dec
int
jmp
fwait
lret
cmpsb
add
mov
mov
lret
mov
aas
movsl
dec
xchg
mov
ljmp
fcmove
mov
cmp
adc
scas
adc
adcb
jmp
mov
loope
sbbb
iret
daa
and
push
fsubrs
mov
fcmovb
pushf
into
pusha
mov
jmp
sahf
shll
mov
or
pushf
ret
repz
lods
push
or
and
fsubrl
xchg
lahf
movsb
repz
mov
scas
subb
mov
mov
les
js
ss
lret
jb
fmul
movsb
mov
jbe
fwait
lcall
mov
cmp
ficoml
out
loop
mul
add
mov
shll
add
and
jg
out
fsubrl
xor
ret
mov
loop
mov
add
cmpb
or
test
jmp
jb
mov
inc
push
int
and
ljmp
xor
scas
jmp
xchg
mov
sbb
adc
mov
lds
mov
adc
lods
mov
mov
out
popf
iret
dec
lock
fcomp
pop
mov
mov
mov
cmpsl
call
and
mov
inc
mov
mov
out
push
jl
shl
lods
cld
lret
xor
mov
fsubrs
or
dec
cmp
jp
fisubl
xchg
dec
out
sbb
cld
bound
out
fucomp
inc
sbb
or
sarl
lods
loope
icebp
pop
push
fdivrs
cli
xchg
lret
iret
rol
fisubrl
movsb
clc
ljmp
scas
test
icebp
jbe
stos
mov
cmp
loop
cld
mov
mov
inc
mov
push
repz
or
mov
push
sahf
fisubrl
fisttpl
mov
int
push
test
mov
into
call
les
fstps
mov
cmpxchg
call
mov
enter
stos
dec
cld
ds
sbb
adc
push
daa
icebp
cmp
shll
aam
aad
pop
cmpsl
js
pushf
xor
sub
fcompl
sub
enter
int3
clc
sbb
test
pop
outsb
aaa
push
mov
loopne
int3
imul
or
xchg
mov
xchg
loope
mov
or
push
and
decl
push
jmp
adc
mov
lret
mov
cli
aam
inc
loopne
lret
jecxz
cmpsl
and
sti
ficoms
push
aam
mov
aad
lods
mov
xchg
lds
aas
or
lret
sub
mov
test
add
xchg
adc
lods
aas
mov
lds
pop
mov
dec
popf
fildl
not
fmuls
xor
ds
cld
or
lods
or
icebp
fcmove
lods
push
push
fcomps
rorl
leave
lret
ljmp
mov
mov
lea
into
cmpsl
into
push
dec
cmp
loop
insl
jns
andl
mov
mov
ret
mov
sbb
sbb
shrl
repnz
push
idivb
sbb
pop
loope
lods
int
fcmovne
mov
int3
fcoms
jmp
mov
jb
shll
fisubrs
xchg
mov
repz
repnz
mov
fucomp
scas
mov
stc
call
xor
dec
or
in
int
sar
inc
xorb
pushf
mov
cmc
pop
cmp
add
cmp
into
xchg
rcrb
loop
int3
in
int3
adc
xchg
push
mov
and
insl
xchg
mov
in
cwtl
loop
stos
pop
cmp
push
lret
icebp
outsb
and
cmp
xlat
test
fcmovnu
lods
sbb
mov
lea
pop
sub
or
cmp
cltd
pop
jl
mov
mov
mov
xchg
push
cmpsl
cmp
sbb
lods
hlt
out
icebp
loopne
fimull
xor
mov
cmpb
xlat
fisubrl
xchg
xchg
stos
loope
sub
aad
movsb
fidivs
fwait
mov
stos
push
cmpsl
fldenv
cmp
adc
dec
je
cmp
test
mov
jmp
out
mov
sub
sbb
call
fnstsw
push
loop
or
aaa
mov
scas
idivb
popf
cmpsl
outsb
sahf
fisubs
fwait
bound
cld
mov
test
iret
jmp
fists
popf
mov
fsubp
jg
shrb
mov
mov
or
inc
push
adc
stos
pushf
mov
mov
iret
jp
jns
popf
ret
fs
sub
mov
mov
es
push
or
mov
mov
jmp
mov
cmp
into
lahf
decb
and
add
sahf
test
or
lods
loopne
xchg
movsl
or
dec
and
add
verr
lods
fwait
mov
mov
cmp
mov
push
lret
fiaddl
or
loop
adc
push
ror
aam
out
mov
sahf
xchg
dec
mov
out
int3
mov
ror
loop
cwtl
xchg
shrl
pushf
dec
mov
inc
lret
sbb
push
xor
and
loopne
movsb
xchg
fwait
outsb
inc
sbb
mov
into
fisubl
or
test
or
ljmp
int
dec
jge
loop
mov
into
pusha
mov
rcl
fidivrl
movsb
out
sahf
das
and
int3
movsl
mov
fisubs
sub
inc
fmul
popf
push
push
loop
test
clc
out
push
or
mov
sbb
loope
xchg
movsb
roll
fcmove
xor
jnp
mov
cmp
ret
les
cmpsl
mov
insb
mov
movsb
fcmovbe
loop
enter
sti
fcoml
daa
ljmp
cmpsl
cltd
mov
mov
bound
sarl
ficoms
leave
xchg
mov
dec
dec
xor
stos
cld
rcl
lods
sbb
fsts
int
lock
xor
int3
pop
lods
rolb
mov
push
popf
pop
push
adc
push
shll
lret
int
mov
mov
xchg
frstor
les
andb
pushf
clc
sarb
or
mov
jle
aas
mov
xchg
psubd
fisubrs
add
mov
les
sub
pslld
fwait
stc
mov
cmpsb
ljmp
leave
lret
add
into
lods
sub
fstl
repz
or
ror
pushf
rclb
mov
fisttpll
into
out
loope
push
ror
aam
icebp
inc
and
add
mov
loop
mov
adc
mov
movsl
jb
mov
ja
xchg
aam
pop
sbb
stos
and
mov
iret
shl
mov
in
les
mov
mov
add
push
pop
add
lock
mov
xchg
loope
cmpb
inc
aaa
mov
out
ret
mov
add
movsl
cmpsl
and
mov
sti
add
lds
xchg
ljmp
jno
lret
mov
int3
ljmp
movsl
test
adc
iret
mov
test
in
leave
int3
adc
iret
mov
lahf
add
lds
sub
lret
cld
out
sti
cld
sbb
mov
loop
loope
cmpsl
mov
in
test
mov
push
not
fwait
lret
dec
repnz
movsl
mov
sti
int
std
call
mov
stos
fwait
jbe
and
leave
cltd
sahf
test
jl
popf
dec
sub
repz
mov
and
aam
dec
fcmovb
int
pop
lods
pusha
rorb
lret
lock
ret
lds
out
inc
push
mov
lds
fildl
jb
mov
xor
aam
mov
movsl
fisubrl
lret
out
enter
pop
rcll
mov
lea
or
insl
cmpsb
mov
aam
push
and
lret
fiaddl
xchg
scas
jo
push
fcmovb
push
jecxz
out
xchg
mov
jle
dec
sbb
bound
test
lret
and
mul
fcoml
enter
sbb
cmpsl
shr
incl
les
pop
imulb
mov
xlat
mov
fidivrl
mov
or
movsb
popf
call
dec
ficompl
mov
push
and
cmpsl
bound
cmp
adc
shll
clc
aaa
adc
repz
add
fisubl
enter
pop
mov
inc
das
sbb
out
jne
xchg
scas
call
or
mov
scas
out
jmp
xlat
add
ljmp
add
jo
out
rorl
lds
lods
xor
test
or
xor
scas
mov
mov
adc
adc
out
fcompp
mov
pushf
aad
xlat
push
lods
fidivrl
and
ds
and
jp
das
adc
mov
addl
enter
lds
push
leave
adc
fisubrs
jp
mov
scas
psrad
lret
ljmp
loope
mov
stos
mov
roll
ss
add
shrl
repnz
push
aam
cmpsl
mov
clc
out
xor
mov
mov
lods
sub
adc
jmp
stos
cs
mov
lret
stos
rorl
fdivs
aam
shll
mov
movsl
lods
cmc
leave
mov
aam
loop
mov
fidivrs
into
int
cmp
jle
movsl
adc
out
test
cli
adc
mov
or
sbb
mov
icebp
aad
or
mov
fcmovb
pushf
xor
test
call
push
fisubl
jmp
push
ret
fsubrl
roll
lods
int
xchg
loope
mov
imul
adc
loopne
movsb
iret
popf
mul
call
shll
movl
scas
bound
cld
ljmp
dec
fisubrl
mov
test
shll
jmp
outsl
shll
mov
loop
lret
sarl
out
out
dec
jecxz
pop
fadds
dec
mov
cmp
sbb
dec
or
test
inc
mov
pushf
into
sbb
xlat
fcmovnb
out
loope
lret
add
sahf
aad
mov
mov
test
enter
test
cmpsb
sbb
out
fsubp
sub
mov
stc
sbb
lods
aam
outsb
push
cmpsl
loop
cmp
jmp
rol
sahf
mov
pop
mov
mov
mov
push
or
sub
mov
add
pop
or
aad
and
out
lea
into
mov
lods
loope
repz
out
jmp
push
test
fcmove
outsl
lock
xor
iret
lret
in
movsb
xor
and
rcrl
lret
shl
aam
bound
inc
lods
neg
popa
push
mov
scas
pop
fistpl
in
mov
leave
mov
mov
into
xor
adc
ficoms
out
jmp
shrb
push
fcoml
rcrl
scas
sbb
adc
sbb
adc
movsl
negb
adc
fmuls
cmp
mov
xlat
pushf
or
sbb
mov
adcb
movsb
into
sbb
or
jmp
add
ret
icebp
loope
mov
mov
movsl
aam
mov
clc
jmp
stos
lock
or
fidivrs
mov
fistl
pop
fcom
enter
aad
lea
enter
sub
mov
sarl
insl
mov
fisubrs
out
sbb
cltd
aad
cli
cmp
outsb
je
int3
shrl
mov
psubusw
xlat
sbb
stos
scas
fldcw
sahf
std
loop
enter
mov
jl
xor
test
stos
inc
scas
loope
lock
mov
jo
sbb
lea
mov
out
popf
iret
dec
aad
or
lret
ret
mov
adc
aam
push
insb
fstps
fsubrs
popf
mov
ficompl
popa
xchg
add
scas
aam
sarl
mov
xchg
ljmp
mov
pop
sbb
mov
dec
lret
push
fsubrp
mov
dec
fxch
mov
mov
ljmp
dec
scas
fstpl
and
fidivl
and
gs
mov
int
mov
mov
mov
icebp
jp
pop
ss
loope
dec
sub
sub
fisubl
push
mov
xlat
sub
pop
lret
mov
mov
aad
xchg
lea
loope
mov
mov
inc
lods
test
cmp
mov
add
rcrl
dec
out
aam
stos
cmp
mov
int3
in
out
cs
aaa
xor
iret
loope
out
mov
ficompl
sub
stos
dec
fcoml
cmpsl
lret
popf
mov
mov
and
movsb
stos
jbe
out
test
fcomp
fsts
lods
movsl
into
mov
lods
and
sub
cmc
adc
mov
shll
sahf
test
shrb
andb
stos
dec
mov
mov
adc
mov
dec
jmp
nop
mov
lea
call
jg
ljmp
xor
enter
adc
movsb
mov
pushf
scas
mov
divl
or
fucomi
mov
add
sub
into
fld
inc
and
out
movsb
test
or
mov
mov
mov
stos
mov
mov
cmp
aam
push
and
sub
mov
repnz
into
lods
dec
movsl
jmp
fwait
sti
iret
scas
sbb
lds
mov
sti
xlat
mov
sbb
mov
mov
stos
mov
fucomip
xlat
rcrl
xchg
cmp
push
inc
mov
shrl
scas
mov
scas
mov
movd
push
orb
mov
ret
fdivp
ret
in
mov
fsubl
sbb
movsb
int
invd
aam
mov
or
lcall
aad
adc
fistl
rcr
mov
aam
stos
andb
sahf
fmuls
mov
mov
test
movsb
cmpsl
rcl
pop
aad
subb
push
movsl
sbb
mov
popf
adc
outsl
loope
leave
rclb
ror
sahf
lock
xchg
clc
neg
bnd
ficompl
int3
popf
fidivs
stos
lods
jg
mov
lods
loopne
xor
cmpsb
std
movsl
or
mov
add
mov
sbb
stos
movsl
fstps
or
cltd
leave
cltd
std
adc
loope
xchg
fmull
mov
lods
mov
movsb
roll
mov
push
icebp
movsb
loop
aam
stos
fstl
into
aad
leave
inc
push
pushf
push
test
insb
fidivl
adc
into
icebp
in
call
out
fmulp
std
or
call
xchg
mov
iret
enter
aad
cld
rolb
and
adc
fmull
xchg
mov
lret
push
out
iret
pop
cmp
cld
aas
or
mov
ljmp
sbb
mov
sub
dec
test
movsl
fmuls
fwait
bnd
stos
xor
mov
ss
movsb
pop
jmp
mov
call
dec
out
pushf
dec
enter
popf
and
lods
fs
xor
negl
loope
sub
lods
mov
lds
cmp
les
fxch
sub
mov
mov
cmpsl
mov
call
addb
ret
and
rcrb
shrl
xchg
sbb
xchg
sub
cmp
stos
cli
mov
mov
repnz
mov
and
cs
aam
lods
mov
fwait
push
into
out
insl
mov
movsb
mov
mov
lcall
xchg
bound
mov
lods
push
xchg
mov
sub
ljmp
pusha
mov
mov
mov
and
jmp
fidivl
call
pushf
xchg
mov
sbb
mov
rcr
aam
and
fcoml
fstps
xchg
push
cmp
pop
fadd
sbb
adc
fisttps
mov
mov
jecxz
in
shlb
int
mov
pop
adc
inc
push
test
mov
into
rcl
data16
fwait
mov
pop
loop
pop
mov
lret
lret
mov
xchg
movsb
fnstcw
mov
mov
call
test
ret
mov
bound
sti
les
adc
or
repz
xchg
sub
ficomps
test
ror
jl
loope
xor
scas
dec
rorb
or
lods
cmp
xchg
push
lret
pop
rorl
xlat
stos
aad
mov
loope
and
pusha
movsb
daa
repnz
sti
mov
mov
mov
push
mov
test
xchg
sub
ret
pusha
or
fsub
mov
push
mov
or
out
out
jp
add
fcompl
rcr
repz
pop
add
fildll
and
aad
fnstsw
mov
sbb
test
loop
popf
adc
iret
enter
dec
or
and
neg
mov
sbb
shll
mov
cmc
loope
rorl
or
out
mov
rcl
mov
mov
enter
fcoml
lods
mov
sahf
lock
xchg
aam
cmp
mov
jecxz
out
pop
xchg
cmc
lods
xchg
call
insb
jno
mov
xchg
loop
les
test
mov
mov
addr16
aam
cmp
jns
or
fwait
jo
es
dec
sahf
lea
lods
cmpb
lahf
imull
fsubrs
iret
or
xchg
mov
xchg
scas
call
or
push
fldenv
fcomp
iret
lds
repz
mov
int3
lock
sbbb
mov
xchg
out
rcl
stos
insl
outsl
mov
fcmovbe
cmpsl
pop
mov
mov
adc
aas
aam
mov
jb
call
mov
xchg
sbb
fsubrl
adc
adc
fs
xor
mov
orl
in
test
cmp
ret
lret
rcrb
outsb
loop
ljmp
jno
mov
movsl
sarb
push
int
sub
jecxz
mov
in
xchg
sahf
push
adc
icebp
test
adc
rcrl
fidivrs
fstpl
scas
cltd
fmull
sahf
and
ljmp
movsl
mov
aad
stc
aaa
cmp
rcr
sbb
es
shrl
add
jle
dec
lock
adc
mov
loop
loopne
mov
jb
lods
fmulp
mov
or
out
scas
ljmp
lods
test
fdiv
cmc
leave
adc
mov
sahf
add
iret
lret
mov
xor
fadds
enter
and
jmp
test
sbb
jecxz
gs
fwait
test
xor
pusha
mov
mov
xchg
aam
psubd
sub
sahf
lods
and
add
mov
lods
stc
sbb
mov
shl
dec
int
aad
movsl
sub
sub
cmpsl
test
jmp
aad
fcmove
inc
or
add
call
aam
lods
in
ret
sbb
sahf
and
mov
mov
mov
rorl
mov
inc
stos
pop
sub
mov
imul
ret
jge
jb
fptan
fisubs
adc
mov
mov
and
adc
leave
sar
adc
jb
sarl
mov
and
fcmovu
pop
pushf
sbb
cli
push
imul
fstl
mov
xor
mov
lret
enter
int
mov
mov
mov
lret
xchg
fidivrl
call
inc
sahf
das
repnz
out
mov
and
mov
xchg
mov
add
fsubrs
shll
sbb
enter
push
fnstenv
fidivs
mov
push
shlb
loope
shll
in
mov
lea
scas
cmpsl
loop
test
adc
mov
push
sbb
lret
clc
mov
xor
movsb
fs
mov
aas
jb
rcr
mov
fadds
out
into
in
xchg
sbb
fcompl
movsb
mov
mov
scas
lods
movsl
lret
addb
fldl
repz
rorl
lret
and
xor
jb
mov
out
ret
ficomps
test
mov
loop
mov
repz
push
and
lret
xlat
sub
cmpsl
pop
nop
push
sbb
pop
mov
fnstenv
fldt
lods
mov
mov
lods
loope
hlt
cwtl
mov
dec
xchg
fwait
sar
mov
leave
cltd
lret
lret
imul
rorb
enter
rcrb
fwait
in
stos
pop
or
push
mov
test
movsl
aam
xlat
push
push
movsb
mov
sti
mov
test
lods
inc
sbb
scas
and
sub
out
mov
or
jl
fdivr
pop
outsl
cmpsb
add
ror
mov
leave
test
test
ficompl
das
or
loop
scas
daa
fstpl
add
cmp
cli
jo
adc
mov
jno
cmp
leave
or
mov
test
repz
cmp
fwait
and
sbb
xchg
add
add
scas
add
int3
movsb
xor
adc
fidivs
pop
sahf
mov
mov
push
bound
ljmp
fcmovbe
cmpl
cmpsl
cmp
fisubl
or
aam
dec
sbb
xlat
loope
and
loope
sub
or
loope
jmp
out
test
mov
jl
gs
call
repz
adc
into
loop
ds
mov
add
cltd
shlb
ds
in
into
adc
enter
cs
ss
cli
or
mov
les
mov
daa
fiaddl
loope
pusha
pop
aam
int
xchg
into
idivb
lods
push
jmp
int3
rcrb
out
fidivrs
xor
jno
dec
hlt
or
mov
rcrl
or
shld
fdivs
add
les
mov
mov
aam
es
movsl
sub
sub
mov
mov
push
popf
shlb
out
cmpsl
movsb
jns
rorb
add
lret
mov
lahf
mov
mov
mov
dec
fmuls
fcmovnbe
repz
jbe
sbb
call
enter
sub
es
jmp
xchg
aam
or
les
mov
ljmp
jne
xor
or
cs
fs
call
enter
addr16
leave
dec
loopne
rcl
or
cmpsl
and
shrl
fwait
enter
push
movsl
xchg
cmpsb
mov
mov
cvtps2pd
pushf
test
or
int
dec
mov
lods
dec
loop
lret
shll
stos
ljmp
loop
int
or
mov
inc
mov
ds
cltd
out
dec
je
lret
jnp
mov
mov
sub
mov
int3
mov
test
push
loop
ror
repnz
in
mov
dec
or
and
leave
shrl
mov
stos
or
fcmovbe
in
lret
add
push
fwait
xorb
lock
ljmp
ljmp
sub
mov
or
add
lret
mov
data16
sbb
adc
loop
rolb
in
mov
jbe
rcr
lock
in
sub
mov
into
mov
fsubrl
loope
dec
or
dec
push
bound
xchg
jmp
adc
lret
mov
mov
ret
pop
fwait
mov
stos
fcmovnbe
mov
sahf
mov
fs
mov
enter
push
lret
fsubs
loope
mov
out
popa
lret
pushf
mov
sub
mov
mov
frstor
repnz
rcll
ret
shl
loop
xorb
lods
aam
flds
call
aas
lock
mulb
mov
and
fistpl
jbe
mov
aad
lret
movsb
lods
dec
mov
and
daa
dec
rcrl
test
test
push
ds
aad
mov
shlb
pop
icebp
sbb
lret
or
pop
and
sti
lods
iret
push
sbb
rorl
and
sub
add
adc
iret
pushf
fnstenv
and
out
sub
mov
add
and
in
cmpsl
xchg
lret
aad
lea
leave
call
fsub
movsb
iret
fwait
inc
push
or
les
int3
cmp
imul
fdiv
sbb
mov
dec
sbb
dec
sbb
mov
test
mov
mov
call
stos
and
lret
xor
rcl
adc
mov
xchg
fisttpll
mov
dec
mov
mov
int3
and
stos
paddusb
into
xlat
scas
mov
clc
cmpsl
test
cs
cmpsl
push
sbb
out
rorl
mov
push
xor
frstor
int3
aad
push
dec
in
sbb
mov
sbb
mov
fwait
mov
xor
and
rcrl
int
sbb
fwait
shrl
cmpsl
xor
stos
es
jge
mov
or
fstps
mov
repz
sahf
lea
ret
and
or
add
movsb
fadd
rcl
out
fdivl
xor
ret
fstp
pop
lock
add
sarb
enter
std
sub
mov
lods
test
movb
stc
sbb
push
out
sahf
mov
cmp
shl
cmp
jbe
scas
out
ljmp
lret
dec
cli
ror
dec
jno
movsl
xchg
neg
ljmp
fcmovne
add
adc
call
cmp
rorb
stos
lea
mov
push
scas
mov
fsubs
out
insb
push
dec
mov
loope
inc
xchg
movsl
into
pushf
loop
int
mov
ljmp
out
ror
adc
lods
shll
sbb
fisubrl
out
push
jb
mov
xor
int3
sub
sahf
add
movsl
or
addb
pop
mov
das
dec
outsl
ret
enter
xchg
out
mov
mov
mov
mov
lods
adc
jmp
dec
jp
loop
ret
xorb
push
aad
mov
movsl
inc
lock
add
dec
out
lods
hlt
or
fwait
out
mov
mov
movsb
mov
or
sahf
mov
push
enter
pop
iret
lods
adc
data16
sbb
aam
call
lods
mov
stos
push
adc
xor
mov
scas
mov
fwait
stos
dec
inc
int3
xchg
outsb
xchg
loop
loope
mov
lods
jno
popf
test
dec
int
jl
mov
dec
mov
xor
adcl
iret
pusha
mov
mov
or
push
adc
lcall
fmull
mov
sti
pushf
into
iret
or
movsl
ss
dec
out
jmp
movsb
mov
jecxz
fsts
lods
movsl
out
cmp
enter
xchg
mov
jno
mov
adc
mov
arpl
mov
int
dec
push
test
test
test
into
fnstenv
lock
clc
lea
test
mov
loope
iret
repnz
ret
cmpsl
insl
xlat
adc
mov
adc
fsubrs
jne
subb
pop
mov
sahf
sarl
mov
test
out
push
dec
lds
shr
jp
loopne
cmc
lret
lret
adc
cmpsl
mov
movsl
loope
outsl
dec
mov
add
enter
rorl
mov
fcmovnb
lock
int
xor
inc
clc
lret
outsb
out
xchg
push
pextrw
mov
aas
hlt
ret
test
lock
and
shr
cltd
or
xchg
lcall
sbb
rcl
pop
fcoml
pop
pop
ret
mov
xchg
mov
scas
fnstsw
fadd
ret
xor
icebp
mov
inc
jecxz
scas
les
in
adc
test
fwait
aad
lods
fidivrl
jle
cld
les
xchg
out
movsl
ret
dec
mov
jmp
call
shlb
shlb
shl
call
jae
xchg
xchg
adc
mov
leave
xor
roll
sahf
insb
rolb
mov
mov
push
mov
fadd
sub
xor
lret
or
pop
xor
repz
mov
fucom
ficomps
or
stos
cltd
pushf
cltd
pop
xor
scas
mov
ror
mov
movsl
repz
leave
arpl
mov
push
mov
mov
cld
ja
lock
int3
das
stos
rolb
mov
mov
pop
mov
ret
sbb
and
test
les
test
mov
or
pushf
mov
fldt
out
sbb
and
add
lret
test
cmp
lret
mov
mov
icebp
sub
lret
lock
push
scas
xor
iret
add
mov
enter
mov
pop
vmovapd
jb
stos
cmc
mov
sbb
rcr
add
test
out
pop
clc
adc
mov
add
fstl
ror
xchg
ror
fidivl
mov
ja
sub
push
mov
vunpcklps
fmulp
jmp
sub
int
lods
lds
loop
faddl
push
cli
out
jmp
neg
cmc
movsb
jecxz
icebp
cmp
ffreep
nop
cmpsl
movsb
int3
push
mov
jle
stos
shlb
scas
bound
pop
popf
movsl
inc
popa
dec
pop
xchg
fdivr
aad
cmp
movsl
dec
aam
mov
push
pop
or
lea
mov
loopne
sti
adc
movsl
enter
cmpsl
sar
mov
lods
push
inc
cmpsl
iret
icebp
in
les
sahf
mov
fdivs
xor
stos
aad
shll
sbb
data16
mov
cli
stos
insb
lret
rcrb
lods
repz
adc
jb
mov
arpl
fsubp
xlat
ljmp
or
mov
jbe
btcl
lret
outsb
popf
mov
lods
and
pop
mov
xor
lods
inc
rcr
lret
loop
call
add
sbb
enter
fnsave
repz
int
lods
and
dec
push
lea
sti
mov
fwait
push
into
loop
mov
int3
aam
adc
test
xchg
fdivrl
xlat
mov
inc
fdivs
pushf
dec
sub
mov
sub
neg
out
adcl
mov
sub
lret
bound
mov
push
mov
rol
fisttpll
int3
lods
mov
test
lods
test
stos
fld
mov
mov
mov
addr16
add
neg
call
out
fildl
fsubr
mov
repz
out
cmpsl
and
fisubrl
mov
mov
rcrl
push
loop
stos
or
int3
out
xlat
enter
sub
inc
rcl
adc
fsubrp
sub
stos
push
lret
mov
movsl
lret
jmp
nop
fwait
mov
test
ja
out
shll
movsl
fpatan
mov
jns
rcrl
int
scas
iret
test
popf
dec
add
lods
fwait
and
shl
xlat
mov
ljmp
ss
mov
fmuls
adc
js
and
out
mov
stc
add
cmp
loop
sbb
inc
sbb
lds
aad
or
mov
bound
loope
scas
mov
or
sub
or
mov
mov
push
in
mov
movsl
int3
shrl
push
test
leave
fbstp
xlat
lahf
jmp
int
into
call
mov
rcrb
adcb
lret
mov
xor
repz
ljmp
mov
loope
fcompl
lret
push
dec
fwait
xchg
lahf
xlat
mov
in
int3
mov
into
ficompl
lock
or
pop
int3
fstps
cld
js
push
ffreep
jl
mov
fcompp
test
mov
mov
shlb
lods
out
pushf
mov
adcl
ficompl
adc
loope
loop
mov
cmpsl
jl
popf
arpl
mov
ret
add
inc
into
out
adc
adc
or
int
test
inc
test
mov
mov
cltd
out
push
sub
movsb
pop
mov
lds
cmp
lret
pushf
mov
xchg
dec
cmpsl
jns
push
add
lret
rol
mov
out
jnp
test
dec
aam
inc
repz
stos
movsb
xor
call
or
pop
lret
dec
ret
jns
xor
pop
rcrb
mov
mov
pop
jg
int
pushf
fucomp
xchg
ret
sbb
pop
mov
mov
addr16
leave
fisubrs
mov
lret
mov
enter
lods
pop
lods
or
lret
das
loop
rol
roll
inc
xchg
cwtl
jmp
sahf
call
es
popf
mov
sbb
xor
aas
xchg
std
push
test
lods
call
sub
dec
ja
fwait
lods
lcall
popf
mov
test
lods
mov
movsb
xor
cmpsb
stos
adcb
ret
sbb
aaa
xchg
jo
adc
ret
cltd
sarb
lret
mov
sbb
cmp
popf
push
xchg
int
pop
push
dec
mov
in
mov
mov
xlat
popf
fcom
out
push
push
loope
jecxz
pushf
push
adcb
fwait
rolb
movsbl
out
mov
pop
adc
xchg
adc
lods
repnz
loope
sub
add
sub
dec
mov
mov
cmpsl
jp
jae
sub
mov
mov
mov
stos
lods
data16
mov
mov
lahf
orb
scas
fsubl
push
mov
dec
and
mov
mov
or
mov
shlb
out
lret
mov
mov
bts
sub
fwait
push
mov
mov
pop
sbbb
repz
mov
adc
mov
test
shr
ficomps
lods
and
insl
test
adc
out
add
cli
and
xchg
loope
int3
bound
mov
jmp
leave
icebp
xchg
lods
test
xchg
addr16
adc
insl
mov
divb
ret
mov
push
scas
mov
xlat
mov
push
iret
sbb
clc
fistps
fisubrl
int3
repnz
les
clc
lcall
loop
int
sti
lods
or
and
fisubrs
movsl
test
mov
cmp
aad
adc
mov
jl
and
nop
and
out
stos
mov
into
out
lret
paddb
aad
mov
fsubrs
fisubl
push
cld
scas
mov
mov
xlat
scas
test
mov
into
dec
push
mov
dec
adc
mov
xchg
cmpsl
mov
movsl
mov
pushf
movsb
stos
enter
mov
fcmovnbe
mov
negb
scas
jmp
mov
pop
cld
test
adc
es
xor
int3
add
push
jle
push
inc
push
xchg
or
cmpsb
movsb
sbb
or
cltd
insb
mov
fwait
orb
xchg
out
cmp
out
pop
sub
mov
add
iret
test
popf
mov
test
mov
shll
ljmp
aam
adc
imull
xchg
clc
rcl
addl
and
and
add
shlb
dec
arpl
ljmp
scas
popf
stos
mov
jae
mov
test
int3
mov
stos
lret
inc
loope
bound
and
fisubl
add
mov
adc
mov
mov
stos
pop
mov
fidivl
lahf
lret
clc
repz
imulb
adc
scas
int
mov
cld
into
jmp
ss
lret
int
mov
subb
fnstsw
xor
bound
movsb
movsl
imul
in
into
rcl
pop
int3
int
cwtl
mov
movsb
not
mov
clc
les
mov
or
xor
loope
scas
mov
sahf
enter
int
call
scas
lods
dec
icebp
sub
lret
fwait
xor
cmp
pop
les
jbe
out
dec
repnz
add
arpl
movsb
mov
add
ret
lahf
cltd
xor
lods
mov
cmpsb
lahf
jmp
stos
fsubl
fcomps
sbb
lds
fnstsw
lret
scas
mov
idiv
jmp
lods
movsb
in
repz
and
popf
test
sbb
sbb
ljmp
leave
test
scas
sbb
sbb
bswap
test
scas
fnstenv
sbb
loope
ljmp
xchg
arpl
in
fidivrl
mov
stos
sub
lret
shlb
loopne
repz
push
mull
jo
in
lea
stos
int3
mov
ljmp
xlat
fimull
mov
fnstenv
pop
mov
mov
and
shlb
adc
mov
iret
test
jecxz
fstpl
or
ror
ljmp
mov
push
mov
movsl
iret
loope
popf
mov
mov
sti
stos
sbb
repz
popf
cld
inc
xchg
mov
shrb
push
dec
push
rcrb
mov
int3
ret
iret
xchg
adc
jbe
mov
ret
out
mov
scas
lret
clc
mov
add
dec
jl
mov
cmpsl
sahf
scas
loope
pop
fistpl
dec
loop
ljmp
sub
mov
addr16
xchg
jb
int3
mov
popf
sbb
data16
int3
rolb
mov
xlat
sarl
dec
mov
fsubl
fidivrl
je
test
shll
adc
scas
mov
fcoms
cltd
xchg
leave
jp
adc
out
mov
pushf
mov
das
mov
mov
sahf
mov
xchg
inc
fs
rep
mov
cs
jns
popf
and
imulb
jmp
insl
inc
ljmp
mov
mov
sub
push
and
ljmp
loope
sahf
mov
add
mov
mov
insl
xor
inc
lods
andb
das
repnz
cmp
cld
add
pop
push
fisubrl
rorl
movsl
mov
les
loope
iret
fldcw
xchg
lds
movsb
mov
out
mov
xchg
in
jb
sbb
subb
ret
pop
bnd
test
stos
sarl
movsb
mov
lret
push
adc
test
sub
aad
mov
imul
fstpt
std
fnstcw
into
fldenv
sahf
out
cltd
mov
popa
rorl
mov
out
push
insl
add
fistpl
mov
mov
sub
jnp
stos
mov
dec
xlat
jae
bound
repz
mov
movsl
outsb
into
stc
inc
cmpsb
push
loop
int
pop
loopne
lods
shll
loop
int3
and
out
lods
lret
xchg
lret
shll
add
rolb
mov
loopne
enter
mov
int3
jno
in
into
push
and
sbb
out
mov
mov
test
push
stos
mov
pushf
and
cld
enter
push
adc
xlat
xadd
aad
lret
ret
out
leave
or
mov
repz
lods
rol
loop
cmpsb
call
mov
mov
mov
push
cmpb
scas
jbe
rorb
sbb
test
dec
out
lods
xor
push
scas
loop
movsb
and
bound
movsl
stos
pop
jns
cmp
sahf
stos
outsb
out
mov
lods
mov
and
mov
lret
mov
iret
sub
add
lret
fcoml
enter
mov
popf
cld
mov
mov
pop
add
rclb
jge
enter
xchg
pop
mov
push
add
stos
scas
outsl
mov
fistl
ror
out
int
iret
test
mov
mov
push
in
mov
sahf
cmpsl
or
lock
add
lret
mov
loop,pn
shl
and
out
scas
test
rorb
stos
mov
push
cmpl
sbb
scas
repz
mov
les
adc
or
inc
sbb
xchg
push
jge
popf
fisubl
repz
mov
out
cltd
idivl
jo
nop
aam
subb
iret
ficoml
aad
movsl
fistl
xor
push
addb
leave
mov
cmp
push
mov
mov
xchg
ucomiss
lods
fidivrs
mov
adcl
call
adc
jp
push
mov
subb
cmc
movsl
out
xor
dec
mov
adc
enter
out
scas
ret
add
rcrl
mov
out
dec
out
lea
stos
dec
out
daa
lret
test
inc
fidivrs
lods
sbb
xor
dec
cmp
ror
stos
les
sbb
xor
mov
loope
mov
ljmp
lret
mov
fcmovbe
push
fisubrl
call
xlat
enter
push
into
sbbb
mov
mov
shlb
call
inc
pop
out
and
lea
lods
lods
and
movsb
out
stos
imul
push
in
shll
mov
xchg
test
xor
daa
sub
mov
sub
daa
ljmpw
mov
mov
mov
xchg
mov
mov
jp
test
cmpsl
ret
cld
cmpsb
mov
and
sbb
mov
mov
or
fs
sub
jmp
jb
iret
sahf
pop
fwait
leave
aad
shrb
fsubl
movsl
sub
loop
xlat
or
jp
test
or
mov
sub
or
mov
mov
mov
rcl
loope
into
mov
movsl
push
xchg
test
test
int3
jp
push
mov
stos
in
cmpsb
lret
push
mov
rol
out
mov
std
les
add
fldenv
mov
shr
jo
mov
mov
pusha
pop
stos
scas
mov
mov
lret
jo
cmpsl
mov
cmp
lock
pop
fidivrl
bound
test
mov
cmpsl
add
lods
bound
negb
dec
lret
dec
add
rcl
int
or
fisubrl
lret
lods
fcomps
mov
fidivrl
loope
adc
fmull
dec
repnz
mov
xor
call
ffree
leave
sub
movsb
mov
in
movsb
dec
fldt
dec
push
adc
iret
mov
pop
scas
cmpsl
jo
pop
into
dec
adc
adc
push
pop
cmpsl
lret
mov
fcmovu
in
in
pop
jo
mov
arpl
lret
mov
iret
dec
add
or
out
rcrl
iret
loope
adc
sahf
nop
dec
cmp
sbb
cltd
pop
xlat
call
fld1
xchg
shr
aad
sub
pushf
ret
mov
dec
or
xlat
mov
and
fcmove
call
mov
mov
mov
mov
xchg
test
sbb
popf
scas
enter
push
aam
fnsave
dec
lods
adc
lock
cmp
stos
push
mov
mov
add
int
jmp
mov
xor
mov
ret
fcompl
sbb
negl
or
stos
jg
mov
aad
mov
jmp
leave
lret
iret
pushf
outsb
fimuls
shl
loope
test
lods
inc
fisttpll
fdivr
mov
mov
mov
jo
les
ror
int
push
mov
mov
mov
cmpsl
test
push
mov
les
ficompl
dec
not
aaa
cmp
mov
fisttpl
fcmove
cmpsb
cmp
fmuls
out
jns
es
xchg
mov
addb
sub
fst
mov
test
mov
fimuls
mov
stos
popf
mov
into
neg
dec
into
xchg
inc
mov
movsl
test
and
out
mov
mov
aas
push
pushf
add
sahf
lcall
ret
mov
repz
and
mov
into
icebp
or
jp
imull
mov
dec
lods
test
jl
lods
adc
movsl
aam
xchg
pushf
mov
gs
fdivrl
fwait
ret
aad
or
fstp
cmpsl
ljmp
test
ret
shll
popf
cmpsb
aam
int
xlat
popf
mov
loopne
scas
pop
cmp
imul
mov
xor
scas
aad
and
fisubrl
sbb
or
jbe
pop
cld
mov
and
mov
stos
ljmp
inc
dec
out
enter
jg
or
insl
mov
lret
daa
dec
out
in
mov
xchg
mov
fcmovnbe
pop
popf
mov
push
movsl
daa
lahf
shrb
jle
mov
icebp
mov
orb
ss
enter
push
mulb
iret
mov
pop
xlat
orb
shll
and
fwait
out
aam
lods
out
mov
mov
add
imul
fbstp
ficoms
xchg
test
cmpb
mov
popl
xlat
into
les
add
mov
lret
iret
lret
xchg
out
dec
sub
clc
xlat
mov
pop
mov
cmpsl
xchg
jl
ljmp
out
inc
ljmp
mov
jb
loope
cmpsl
mov
iret
test
rcrl
mov
into
fstpt
ret
iret
xor
les
dec
sub
loope
ror
les
aad
and
popa
test
call
cmp
loope
repz
ljmp
jb
mov
aam
and
fdiv
lahf
aaa
repnz
sub
fdiv
lahf
mov
sahf
in
shll
call
loope
loopne
clc
mov
mov
or
fwait
in
lret
in
fistpl
aad
or
movsl
mov
int3
pop
pop
cmpsl
out
xchg
ljmp
cltd
aam
movsl
jmp
scas
lds
mov
xor
fistpl
adc
mov
shrb
mov
jg
mov
and
xchg
insl
push
dec
outsb
xchg
mov
int3
mov
mov
mov
or
push
int
into
lret
sahf
or
or
mov
dec
data16
clc
mov
stos
mov
out
dec
in
mov
movaps
movsb
scas
mov
pushf
leave
popf
mov
repz
shl
mov
xor
nop
bound
cli
and
inc
xor
xchg
sbb
sbb
iret
test
rcll
aam
stos
loop
lods
in
sarb
push
mov
hlt
imul
ja
sbb
jno
push
movsb
ss
sub
popf
mov
lahf
mov
leave
and
sbb
stos
nop
mov
mov
lods
or
fadd
mov
xchg
add
loop
lods
insl
int3
inc
fmuls
lret
cmpsb
xlat
mov
movsl
movsb
mov
arpl
inc
sbb
jp
fisubrl
popf
nop
mov
rcl
pushf
mov
out
aad
jbe
sub
out
les
rcrl
adc
cli
rcrl
fnstenv
jg
fnstcw
call
js
dec
fsubrs
fcmovbe
sbb
mov
cltd
xor
jb
cmpsl
aam
mov
sbb
dec
mov
dec
sbb
pop
xchg
mov
enter
sti
out
or
dec
aas
add
fldt
fisubs
stos
call
loope
adc
scas
rol
out
mov
mov
pushf
mov
and
repz
leave
sbb
mov
pushf
lret
mov
stc
push
mov
inc
fstps
ljmp
pop
sub
push
scas
shll
mov
mov
mov
pop
call
test
cld
or
dec
mov
leave
nop
fldt
shrl
inc
add
enter
loop
lds
loop
xlat
stos
mov
jnp
fdivrp
andb
fidivrl
mov
orb
popa
push
add
mov
rorl
cmpsl
jb
aad
out
lods
lret
fiadds
in
mov
mov
mov
popf
ficompl
int
mov
jnp
ljmp
leave
mov
mov
sub
mov
sbb
pop
out
mov
pushf
out
push
insl
fidivrs
scas
xchg
pop
pop
aad
xchg
dec
dec
inc
add
popf
xor
xor
loopne
dec
in
mov
repz
jmp
loop
sahf
push
negb
mov
loope
roll
sub
mov
mov
loop
xor
lds
mov
scas
into
rorl
mov
ret
stos
fistpll
cli
sub
cmc
sahf
xchg
cmpsl
adc
sbb
popf
add
inc
aad
pop
sub
fmull
cmpb
aad
mov
insl
rcrl
cmp
mov
cld
fisubl
push
mov
movsb
iret
rorl
lret
jmp
add
shr
fidivl
xor
aas
xchg
mov
fcmovu
and
out
pop
ficomps
mov
jbe
movsb
xor
and
and
loop
leave
lret
ret
cmp
mov
jb
int3
fldt
cmp
add
ja
lahf
push
lret
insl
insb
icebp
or
mov
mov
icebp
add
leave
sub
lods
out
and
sub
adc
movsl
loope
inc
int3
sub
mov
pusha
cwtl
push
xchg
pop
sarb
mov
xor
jmp
rorl
or
mov
ljmp
mov
repz
cltd
xchg
cltd
jne
pusha
arpl
enter
push
inc
mov
fidivrl
xchg
in
lock
ljmp
popa
sbb
xchg
inc
lret
scas
ljmp
fisttpll
test
xor
out
sbb
not
push
int3
xchg
sarl
pushf
fmuls
mov
xor
pop
dec
scas
iret
insb
pop
lret
nop
and
lods
and
test
dec
jmp
or
mov
and
jnp
test
scas
or
rcrl
nop
adc
cmp
adc
mov
xchg
fists
in
lds
loop
lret
sbb
xchg
test
mov
out
fcoml
add
mov
pushf
lret
movsb
out
rolb
mov
ljmp
pushf
xor
mov
xor
cmp
enter
loop
fistl
lret
movsb
cmp
push
test
orl
int
sbb
sti
mov
out
fs
iret
mov
int3
sub
jb
test
mov
popa
lds
rep
push
aaa
repz
xor
cmp
test
les
rol
cld
clc
pop
or
mov
xlat
out
adc
call
lret
adc
int
dec
jo
mov
les
fstpt
mov
neg
ljmp
loope
push
lret
out
or
scas
fnsave
dec
fdivrs
sbb
lods
fmul
loopne
or
pushf
mov
out
xchg
cmp
orb
cmpsl
push
data16
mov
adc
fstpt
cmp
cmc
mov
loop
mov
or
ljmp
mov
movsl
and
shlb
out
cmp
outsl
mov
adc
stos
loop
iret
lret
mov
movsl
int
fcmovnu
fisubl
mov
ds
call
out
scas
loopne
jb
stos
mov
xor
movsl
mov
stos
push
rcl
adc
pop
add
xlat
loop
int3
dec
movsb
mov
mov
out
pushf
lret
sbb
stos
or
rorl
enter
mov
dec
dec
mov
push
mov
int
mov
mov
ljmp
mov
mov
shrl
rorb
mov
mov
shr
fsubs
pop
adc
cmpsl
pushf
bswap
into
test
mov
paddusb
fisubrl
or
stos
rorl
jo
fstps
bound
xchg
enter
loop
or
mov
fldcw
test
test
jbe
or
mov
jne
mov
mov
add
mov
sub
xor
jmp
stos
enter
mov
mov
les
lret
lds
and
out
cwtl
or
mov
fdivr
leave
int
sbb
lds
insl
insb
sahf
inc
int
adc
fldt
cmp
shll
aaa
xchg
scas
loop
shlb
clc
cmpsl
lret
fucomp
sti
sbb
dec
mov
mov
aam
andb
lods
adcl
push
push
int3
mov
xor
and
jb
fldt
daa
movsl
push
rol
jbe
sbb
enter
mov
sbbb
fdivr
iret
cmpsl
push
ror
mov
addb
mov
je
scas
push
or
loopne
dec
fwait
mov
xchg
sub
movsl
fcmove
call
loop
cltd
adc
aad
popf
mov
xor
lret
cmpsl
out
leave
xchg
xor
int
enter
movsb
sahf
fiaddl
loopne
movsl
iret
clc
fst
push
out
push
clc
pop
out
mov
mov
test
fwait
movl
repz
lods
and
aad
xchg
and
sti
mov
aam
out
jmp
mov
lret
push
and
xchg
in
or
mov
scas
mov
mov
dec
dec
movsb
pop
push
data16
jbe
jg
ljmp
lea
aam
out
iret
pop
loope
dec
lds
out
mov
push
cmpsb
push
cmp
mov
mov
jmp
cmp
loop
ljmp
outsb
scas
mov
xchg
dec
fidivrs
dec
int
insl
leave
and
mov
ljmp
push
nop
or
sbb
cmpsl
dec
pop
push
cmp
mov
lds
xchg
jne
lret
jp
push
in
in
mov
movsl
push
mov
aad
lret
or
pop
out
stos
imul
xor
xor
sub
jb
fcmovbe
bound
pushf
sahf
ljmp
xor
test
popa
cld
rcll
xchg
mov
lret
fiadds
pushf
sahf
mov
mov
movsb
push
and
sub
push
push
add
mov
inc
outsb
aas
movsb
mov
xor
fwait
out
aad
mov
aam
loope
loope
mov
mov
sbb
scas
lods
stos
fisttpll
sub
adc
mov
fisubrl
mov
sbbl
ljmp
xor
xlat
add
lods
mull
fisttps
lcall
fcmovnu
enter
and
mov
lea
aad
movsb
dec
int3
xchg
jbe
sbb
mov
divb
inc
or
mov
mov
in
mov
xor
mov
test
xor
lods
push
pusha
mov
mov
jns
test
bound
fmull
leave
loope
mov
fldenv
jne
pop
inc
push
in
sbb
insl
imul
scas
jg
jmp
fs
adc
aam
mov
roll
sbb
scas
adc
lods
int
call
lock
mov
mov
xor
xlat
stos
mov
add
rorb
add
push
ret
push
xor
stos
into
out
mov
mov
stos
mov
aad
mov
pushl
xlat
add
popf
cld
push
mov
add
push
fwait
xchg
out
stos
mov
clc
cli
push
leave
fstpl
int3
repnz
or
mov
ljmp
mov
lods
shrl
pop
xchg
adc
stc
push
sbb
int3
movsl
loop
ja
jmp
int
pop
sbb
cmp
sbb
ret
aam
inc
sbb
xlat
mov
sti
leave
lret
push
lret
iret
push
fiaddl
cmpsl
jp
iret
dec
movsl
fdivs
sti
lods
rcrl
add
mov
jb
arpl
lods
aam
mov
or
lret
rorl
jbe
lret
repnz
cld
mov
fcoml
test
lods
fcomps
pop
int3
mov
mov
xchg
rcrl
loopne
pop
mov
jmp
leave
lcall
pusha
ljmp
stos
movaps
iret
mov
lret
rcr
repz
test
test
out
cmpsl
mov
adc
loopne
lods
mov
mov
push
mov
pusha
xlat
jae
xor
mov
subl
ljmp
mov
loop
sbb
cmpsl
push
adc
icebp
int
inc
lods
test
adc
movsl
mov
nop
shrl
mov
decb
lds
sub
jnp
lods
dec
jmp
and
mov
push
dec
or
loop
cwtl
xchg
addr16
ja
scas
xor
scas
fsubp
aad
inc
mov
mov
jg
xchg
push
les
sbb
out
into
mov
xchg
and
ja
jmp
lods
aad
popf
dec
jge
jne
call
fstpt
pushf
maskmovq
imull
lret
mov
popf
lods
xor
push
jmp
movsb
jb
stos
int
sub
rcl
cmp
scas
xlat
rsm
fwait
mov
leave
mov
jmp
and
push
mov
mov
ljmp
xor
dec
xor
scas
insl
push
or
leave
popf
adc
stos
jnp
adc
out
fnstsw
into
lods
test
fisubrl
popf
rcrb
xchg
cmc
mov
pushf
scas
loope
cmp
jno
mov
test
in
sbb
lret
sub
and
lret
shrb
xlat
jnp
lods
jp
lret
iret
mov
divb
sbb
or
mov
dec
xchg
cmpsl
daa
movsl
sbb
cmp
sti
test
adc
loop
push
mov
mov
sbb
cmc
sbb
leave
cld
cwtl
inc
stos
xchg
repz
adc
mov
movsl
sub
test
roll
ret
out
ror
xchg
mov
out
popf
in
data16
fsub
add
mov
mov
fstps
in
int3
aam
roll
pop
adc
fwait
mov
pushf
xor
ret
sbb
mov
mov
fidivrs
xlat
inc
scas
sbb
jg
out
stos
aad
inc
cmp
int3
insb
adc
mov
mov
jl
inc
xchg
lock
fistl
xchg
repz
cltd
and
dec
inc
scas
mov
mov
cli
cld
lock
mov
sbbb
int
mov
or
test
adc
loope
int3
and
fimuls
mov
mov
and
out
leave
ret
cmp
fimull
movsb
int3
lret
movsb
loope
cli
mov
sub
pop
mov
mov
popf
ret
or
cwtl
lock
jecxz
loope
mov
cmp
pop
xchg
xor
sbb
leave
pushf
push
sub
shrb
out
rep
ror
jnp
mov
shll
mov
jg
int
cmp
mov
bswap
mov
ret
jmp
insb
popf
out
out
and
int
pusha
call
repnz
pushf
les
or
mov
loop
dec
scas
add
mov
loop
and
and
fldt
fwait
and
or
mov
lods
xor
rclb
popf
mov
push
repnz
fdivp
mov
push
ljmp
stc
or
xor
ret
stos
data16
ret
mov
scas
sub
movsb
pop
pushf
add
ljmp
and
fldcw
sahf
or
aad
ret
or
mov
roll
mov
movsb
ss
cmp
nop
mov
pop
enter
pop
jecxz
xchg
jmp
ret
lock
loop
aad
aaa
mov
mov
outsb
sahf
or
movsl
lret
ljmp
mov
pop
int3
int
xor
fnstcw
jmp
inc
aas
sbb
out
mov
aad
mov
dec
ret
test
lods
stos
mov
int3
or
xchg
and
mov
mov
fisttps
dec
xor
vcvtss2si
int3
popf
shll
mov
sarb
jp
fucomip
lret
sub
repz
or
mov
stos
test
es
add
call
out
cmc
sbb
push
lret
adc
mov
call
cltd
in
call
out
lds
lods
mov
dec
jle
fwait
loop
jmp
mov
xlat
fucomp
pusha
in
mov
stos
sub
int3
inc
adc
test
out
icebp
sub
stos
mov
out
mov
cmpxchg
mov
movsl
loop
loope
rcl
repnz
xchg
xlat
hlt
cmpsl
or
mov
xchg
loopne
fcmovnb
jo
mov
outsb
mov
jg
out
mov
dec
sbb
adc
stos
iret
jecxz
cld
lret
mov
in
fistl
mov
cmpb
iret
cmp
fidivrl
fimuls
inc
shll
cmp
int
ljmp
cltd
out
loop
jmp
insb
arpl
les
or
mov
mov
dec
mov
out
pop
mov
jmp
popf
enter
sub
mov
mov
loop
mov
rcrb
xchg
mov
out
test
sbb
pusha
inc
lret
xchg
cmp
fsin
out
arpl
loop
fcompl
popf
repz
neg
mov
in
scas
rcr
lods
mov
push
xchg
stos
into
dec
push
iret
lods
fsubr
ds
mov
lods
xchg
ret
mov
stos
adc
ret
lcall
test
fwait
nop
fs
mov
rol
jmp
sbb
push
sub
or
leave
cli
jnp
push
imul
mov
fisubrl
jno
xlat
mov
sub
cld
pusha
sti
mov
cmp
mov
int3
lods
rclb
push
int
xor
int3
popf
cwtl
mov
lods
xchg
dec
mov
push
clc
stos
test
jecxz
mov
sub
ficomps
out
movsb
lods
inc
mov
popf
mov
jle
bound
push
out
sarl
scas
repz
cmp
les
into
stos
lods
and
xlat
jmp
mov
outsb
fsubr
push
nop
mov
sub
cmpsb
sahf
pop
les
mov
les
xchg
lret
fadd
movsl
mov
sub
outsb
bound
sti
movsb
pushf
pop
mov
js
xor
insb
mov
lret
cmpsl
fbld
pop
loop
or
mov
fldcw
mov
lret
fwait
lret
jnp
nop
mov
cmp
movsb
adcl
aam
cltd
out
inc
dec
mov
dec
mov
push
testb
ss
lea
adcl
mov
test
sti
mov
xchg
mov
mov
jmp
cmpsb
sar
out
test
repz
xor
sarb
cmpsl
lods
add
dec
testl
mov
lret
daa
je
cmpsb
cld
ljmp
mov
mov
nop
out
icebp
pushf
fcmovnbe
scas
loop
mov
pushl
mov
loope
xlat
fidivrl
mov
dec
mov
pusha
xchg
cmpb
int
jp,pt
or
jns
xchg
inc
or
inc
scas
movsl
bound
mov
and
jl
mov
cwtl
mov
jnp
mov
pop
shll
dec
mov
daa
out
lea
mov
push
int
pop
fdivrs
int3
mov
adc
pop
icebp
mov
sbb
xlat
xchg
int
lea
iret
mov
xchg
shl
out
xlat
pop
dec
add
jmp
push
int3
cltd
mov
aam
jbe
jl
mov
sti
fcmove
fdivl
in
xlat
push
fwait
jmp
mov
loop
jmp
and
jl
push
mov
loope
mov
adc
xor
into
sbb
scas
sub
out
sbb
sahf
repz
add
sbb
lods
fdiv
mov
jl
and
ret
int
sub
mov
jo
in
popf
ljmp
mov
mov
xlat
and
mov
lret
bound
ficoms
ja
int
sti
adc
addr16
xlat
cmp
lods
mov
ret
les
mov
push
in
sbb
cmpsl
mov
loop
xchg
mov
or
mov
push
popf
fisubs
lret
lret
cmc
mov
pusha
idivb
mov
repnz
iret
fwait
insl
lret
cmova
icebp
adc
adc
fsts
mov
rol
inc
in
sti
or
fimuls
into
stos
and
push
scas
xlat
scas
mov
mov
or
call
fistpll
frstor
test
cld
into
psubsw
aam
leave
cmpsl
mov
and
lea
scas
int
pusha
mov
mov
mov
dec
fsubl
ss
or
mov
aad
mov
ret
jl
loope
sbb
js
sbb
mov
fimuls
mov
rcl
das
lods
xor
ret
stos
cmp
sub
xchg
adc
sub
xor
loope
or
rcll
and
fdivl
fadds
loop
lds
negb
out
and
mov
cmpsl
out
aad
sbb
pusha
pusha
test
cmp
cmpsl
fstps
mov
xchg
push
adc
ret
iret
fcmovu
ffreep
xor
sti
mov
fsubrs
or
leave
rorl
mov
pop
imul
cld
adc
mov
mov
sub
xchg
and
mov
lods
ljmp
inc
mov
scas
cmp
insb
jns
adc
lret
mov
cmp
jle
stos
push
sbb
mov
mov
lds
mov
mov
scas
aas
mov
push
jmp
cld
insl
cld
add
or
repnz
mov
lods
pop
or
lock
adc
or
inc
xor
mov
xor
cltd
lea
loop
loop
mov
fidivrs
lret
out
pushf
mov
repnz
lea
mov
int
mov
shrb
insl
daa
xchg
xchg
or
mov
dec
add
fmulp
xchg
dec
test
fmul
repz
adc
lods
test
gs
rorb
dec
mov
ret
sub
movsb
dec
inc
leave
dec
rorl
into
inc
lea
sahf
jecxz
in
mov
lods
adc
test
lods
out
xlat
mov
lret
or
mov
xchg
add
fmull
icebp
insl
into
movsb
mov
leave
inc
lea
mov
loope
adc
pop
ret
and
mov
movsl
int3
pop
xchg
pop
lds
movsl
outsl
dec
imul
lods
mov
adc
test
cmc
ret
addr16
cwtl
push
mov
mov
fwait
pushf
sahf
xor
mov
push
xor
movsb
sti
shlb
xor
out
sub
mov
rorl
pop
bound
lods
icebp
push
xchg
dec
test
lods
ficompl
mov
into
xlat
fs
int
stos
fdivrl
jp
xlat
iret
xorb
rorb
inc
pop
add
pushf
cmp
bound
mov
iret
fsubp
cmc
pushf
ret
clc
inc
add
push
mov
mov
mov
lret
out
enter
mov
call
lods
int3
addr16
rorb
mov
test
jns
ret
out
stos
mov
jmp
sub
aad
sbb
lea
fstenv
mov
loope
fdivl
fcmovnb
cmp
xchg
les
mov
xchg
xor
xlat
push
in
ret
sbb
push
loope
popl
incb
imul
dec
jmp
popf
and
lods
jmp
into
enter
fsubp
pop
push
lods
mov
aam
sub
mov
mov
stos
fwait
sahf
test
lods
mov
ljmp
mov
test
repnz
jge
lods
faddp
out
cs
leave
cmp
jbe
cli
mov
mul
shrb
mov
subb
scas
icebp
xchg
and
scas
andb
aam
lret
mov
add
mov
out
dec
sub
inc
call
jmp
sahf
into
lret
lret
out
mov
or
fistl
mov
jg
movsb
xlat
mov
test
movsl
mov
ret
push
sbb
nop
mov
out
scas
inc
adc
push
pop
mov
mov
idivb
mov
lods
dec
push
mov
je
testl
stos
mov
loopne
shrl
xlat
movsb
mov
mov
das
outsl
jg
or
mov
mov
lods
push
push
lods
int
iret
int3
sub
mov
bound
out
sbb
dec
lcall
idivb
movsb
xor
xlat
sbb
loop
lahf
xor
adc
leave
loop
into
mov
mov
scas
into
mov
adcb
int
cmp
jl
into
inc
pop
mov
fs
rolb
push
testl
push
movsb
jo
add
mov
fst
mov
sti
loop
or
scas
cltd
inc
mov
cld
out
pusha
outsb
jbe
test
fisttpl
popf
imulb
sahf
mov
xor
les
shl
aam
cmp
sahf
je
jge
test
lods
out
lret
mov
mov
int
mov
movsb
mov
xchg
cli
loopne
sbb
mov
in
sub
sbb
add
pushf
int
or
adc
lret
out
and
pop
inc
mov
pop
in
mov
cld
sbb
subl
inc
pop
insl
push
xchg
stos
rcl
jbe
out
insl
xlat
ljmp
into
repz
into
jmp
push
mov
xchg
enter
mov
mov
mov
clc
dec
pop
enter
popf
in
or
dec
mov
movsb
mov
dec
pushf
into
mov
lock
hlt
mov
test
into
jb
mov
ret
fstpt
jmp
fcompl
adc
mov
mov
aam
cmp
out
xchg
stc
mov
pop
ljmp
leave
test
out
sub
inc
sub
fimull
mov
loope
add
fsub
gs
mov
inc
and
cmp
sbb
jl
mov
cmc
ret
repz
test
js
imul
les
mov
fbld
add
adc
jmp
mov
cmp
enter
ljmp
loope
mov
aad
mov
pop
fildl
out
scas
sahf
jge
shr
icebp
mov
int
jo
rcl
lods
movsb
sub
sahf
rol
xlat
jmp
int3
cmp
loope
sahf
inc
fmuls
imul
cmp
int3
dec
dec
dec
dec
mov
scas
mov
test
or
fwait
mov
push
ror
mov
mov
into
sahf
repz
scas
pushf
data16
lea
shlb
mov
in
stos
sub
int3
dec
aas
lret
pop
cs
push
and
lret
imul
movsl
dec
sbb
out
test
addr16
xchg
jno,pt
mov
or
rcl
out
sahf
roll
int
scas
sbb
jae
lock
sub
pushf
mov
jb
lret
ret
imul
adc
aad
mov
jmp
mov
fisubs
aam
movsb
ret
les
fwait
fcmovnb
movsb
and
rcrl
arpl
or
out
jmp
mov
ss
clc
fisubrs
jbe
cmpb
lret
lret
insl
cmp
xor
out
out
popf
ljmp
addr16
mov
bound
rcl
fsubr
shrl
jbe
mov
pop
enter
fwait
push
ffree
mov
popf
inc
mov
in
shlb
pop
call
aam
add
adc
mov
pushl
sahf
call
pop
pop
sbb
sub
iret
loop
xor
xchg
cvtps2pd
mov
scas
in
fcomps
sarl
jbe
stos
mov
aam
and
lret
ficomps
dec
out
ret
loope
xchg
or
mov
leave
fdivrl
inc
popf
cmpsl
shlb
fistl
loope
mov
xlat
repnz
ret
les
scas
sahf
adc
sub
mov
inc
nop
stos
pushf
mov
out
cmp
mov
push
xlat
fidivl
jecxz
push
stos
fwait
and
loop
mov
mov
sahf
mov
fcom
aam
data16
fnstcw
pop
sbb
stos
lods
pop
repz
sahf
enter
loop
ljmp
sub
adc
repz
jle
pop
aam
in
movsb
xchg
fldenv
cmp
lods
sahf
ljmp
mov
sub
mov
fsubrl
icebp
cs
movsl
fisubs
lods
sti
xchg
cli
loopne
mov
sbb
ljmp
push
stos
push
jmp
nop
mov
imulb
fmul
out
loopne
mov
sahf
mov
mov
adc
jl
movsl
mov
ret
fmul
loope
xchg
test
fadd
bound
mov
enter
out
mov
fcmovnb
lret
dec
sbb
mov
mov
jno
dec
or
int3
sub
dec
ret
fnstsw
mov
jo
lods
mov
fsubs
scas
sbbl
sti
stos
mov
jo
int
sbb
jns
loop
in
cltd
out
mov
mov
mov
jnp
dec
repnz
lock
shrl
and
fcmove
ja
sbb
pop
ret
test
mov
hlt
ret
mov
jnp
cld
mov
sub
into
stos
cmp
test
mov
and
leave
xlat
mov
mov
cli
mov
cld
lds
out
xchg
movsb
or
jbe
mov
mov
push
xchg
loope
mull
jae
out
lret
les
mov
sbb
lret
sub
scas
test
or
decl
out
ffree
jecxz
mov
mov
pop
clc
push
out
push
push
shlb
xchg
mov
mov
mov
daa
adc
cld
pusha
cld
xor
lods
xchg
imul
into
mov
not
mov
popf
lds
icebp
push
das
sbb
and
fidivrl
mov
jns
pop
xor
jnp
test
popa
fcomp
and
adc
scas
lds
pop
popa
ljmp
fstpl
in
mov
iret
inc
add
scas
lock
aam
scas
loopne
push
in
jmp
scas
dec
push
out
jbe
stos
pop
and
out
loope
cld
push
aam
jno
cltd
adc
lret
adc
shrl
mov
mov
adc
frstor
idivb
lods
in
int
mov
fdiv
cmp
sub
push
lret
mov
out
loop
cmp
call
jnp
int
mov
push
repz
xor
aad
loope
out
push
popf
lret
fstps
cmp
aam
shlb
mov
gs
addr16
fcomi
and
cld
fsubl
push
lock
sub
pushf
xor
dec
scas
sar
pop
sbb
pop
or
rorl
shl
mov
sub
xor
cltd
movsl
dec
ret
ret
mov
mov
jb
push
push
sbb
fsubl
cmp
adc
and
insb
pop
fwait
stos
fwait
test
inc
into
xor
lods
rolb
out
adc
sbb
sub
insl
repz
ret
jmp
movsl
pop
jb
cld
lret
fnstcw
mov
jmp
aas
mov
add
popf
xlat
jnp
fs
sub
adc
lret
into
xchg
xchg
in
aad
fstps
in
scas
mov
cmpsl
mov
xchg
jae
aas
cmp
shl
cltd
fmuls
mov
leave
xchg
push
fstp
out
clc
sub
mov
sti
xchg
mov
mov
out
leave
mov
push
cmc
jle
adc
dec
out
stos
xor
loop
mov
mov
out
fidivs
xor
sbb
aad
mov
mov
rcrb
mov
js
ljmp
or
loop
push
nop
mov
xor
mov
pop
ror
test
inc
orl
xchg
xor
stos
cmpsl
scas
addb
push
bound
fsubl
mov
jmp
call
shll
cld
es
jmp
iret
sub
mov
roll
sub
or
lret
push
sbb
iret
fidivrs
loopne
adc
mov
mov
out
rdpmc
fsub
iret
ljmp
lret
pushf
lret
imul
inc
test
dec
insl
into
fmuls
iret
or
pushf
call
int3
mov
cmpsb
mov
jmp
fdivrs
ret
push
int
movsb
ljmp
pop
lods
or
pop
mov
adc
ljmp
test
lret
and
lcall
rolb
int3
xor
push
fwait
test
adc
stos
mov
or
pop
outsl
dec
fstpt
aam
adc
test
sbb
jb
mov
dec
scas
shlb
aam
and
mov
fisubl
stos
sahf
mov
repz
or
sbb
out
iret
movsb
lahf
lret
cmp
add
or
lods
jns
cmp
les
int3
mov
scas
and
repz
fwait
mov
xchg
dec
xchg
addpd
out
enter
and
mov
fstps
daa
sti
xlat
leave
mov
inc
push
out
cmpsl
sti
enter
push
ss
aam
jmp
rcrl
and
push
xor
mov
mov
fsubp
out
das
cmp
aam
adc
out
call
mov
inc
mov
ficoml
and
sub
out
ret
and
fxch
or
xchg
sbb
jmp
into
movsl
and
out
mov
ljmp
js
mov
mov
fiaddl
loop
rcl
push
ss
mov
or
push
xor
adc
ret
cmpsl
lret
cmpxchg8b
lret
lret
int
imul
enter
ffreep
mov
ret
cmp
addl
data16
lret
lret
mov
xchg
pushf
lock
popf
test
adc
scas
fsubs
enter
mov
rcr
dec
insl
xchg
loopne
ret
ficoms
push
out
icebp
adc
test
loop
scas
dec
dec
fisubrs
mov
shld
sbb
call
push
lret
enter
rorb
and
sbb
fadds
popf
scas
jp
idivb
xchg
cmp
mov
rorb
test
cmp
imul
xor
aam
clc
stos
mov
clc
into
repnz
pop
push
repz
pop
sti
ret
stos
dec
push
ror
inc
stos
mov
pop
xchg
inc
sti
or
rcr
stos
xlat
rol
es
scas
jnp
fstcw
loope
inc
ror
ret
mov
lods
daa
orl
lret
shr
ss
add
fcmovb
lods
inc
faddp
xor
mov
fdivs
ss
lcall
mov
lret
jecxz
test
sbb
cltd
rorb
sub
mov
sub
lods
enter
mov
mov
shrb
mov
adc
sbb
fisttpl
push
js
cs
test
mov
jmp
lahf
shlb
dec
lds
mov
adc
fiadds
loopne
int3
pushf
mov
mov
mov
fnstenv
lret
rcll
inc
jns
mov
pop
add
and
int
sti
in
bound
sbb
xchg
jae
sub
mov
int
cmpsl
bound
xchg
lods
iret
lods
loop
int
mov
rorb
lret
and
lret
out
scas
stos
pop
lds
mov
imul
inc
sub
mov
xchg
rol
sub
cmp
mov
push
das
mov
out
mov
xor
sahf
out
pop
mov
push
int3
mov
lahf
adc
ljmp
and
fisubrl
adc
mov
int
insb
mov
cmc
lret
in
aas
jns
sti
adcl
sahf
loope
sub
and
cs
xor
repz
sahf
dec
pop
aad
cld
imul
sub
and
adc
popf
fcmove
or
mov
test
mov
jmp
pushf
aam
leave
inc
cmpl
mov
out
lods
add
jns
subb
mov
push
xchg
dec
lret
mov
repz
loop
fadds
push
cmpsl
and
adc
jae
push
test
mov
sub
shrl
mov
mov
out
test
jns
out
push
jo
or
pop
mov
test
sbb
lahf
mov
loop
loope
mov
cmc
fmul
stc
push
cmpsl
shr
adc
mov
rcr
mov
push
mov
cmp
frstor
mov
fsubr
mov
push
sbb
and
inc
xchg
outsb
lods
shll
icebp
ret
lods
cld
sbb
ds
mov
int3
enter
sub
lcall
or
jl
cmp
cmpsl
call
mov
or
sbb
je
das
or
cmp
jp
out
mov
sub
cmc
sahf
cmpsb
jmp
les
mul
fst
lods
mov
mov
int3
mov
cmpsb
jle
cmpb
ret
int
jg
sub
repnz
jge
mov
cmc
fwait
aad
int3
pop
adc
or
fldt
int3
xchg
xchg
mov
ds
rol
nop
sub
cmpsl
fbstp
cli
in
fidivs
xlat
cmp
xlat
bound
int3
mov
scas
fs
cmpsl
int
pushf
mov
xchg
mov
psubsw
or
lret
fiadds
mov
pushf
fisubl
ret
mov
lcall
jmp
aam
pop
gs
xchg
scas
test
addr16
lret
xchg
mov
lret
iret
leave
mov
rorl
sarb
scas
sahf
bound
aam
mov
leave
repnz
mov
mov
insb
mov
jbe
cli
aad
jnp
pop
jmp
mov
or
cmp
in
pushf
adc
sahf
fsub
loopne
outsb
cli
bound
cmpsl
add
test
adc
movsb
les
loope
mov
bound
into
jmp
jmp
or
ret
lock
enter
in
mov
iret
lods
repz
arpl
xchg
dec
sub
adc
clc
shlb
lret
in
mov
cmpsl
movsb
mov
aam
push
mov
mov
push
nop
xor
rcr
test
scas
sub
ror
ret
fiaddl
mov
mov
mov
mov
cld
lret
rcrl
pusha
xchg
jae
aam
xor
das
pop
dec
lods
popl
cmpsl
rol
scas
jl
mov
mov
dec
jae
sarl
pop
or
stos
cmc
repz
lods
imulb
or
sbb
ljmp
inc
fwait
jle
out
jb
fst
adc
loope
adc
dec
fwait
int
xorb
into
mov
faddl
lret
mov
out
ljmp
lods
imul
mov
dec
iret
mov
mov
pushf
fwait
xchg
cmpsb
mov
aam
xchg
in
es
stos
jbe
lods
rorb
les
loope
mov
mov
out
push
out
sti
or
push
adc
fcos
dec
mov
daa
sub
das
fcmovb
cmpsl
add
leave
pminsw
jmp
mov
cli
mov
or
or
ds
lret
cmc
leave
test
jecxz
daa
loopne
repz
lods
pop
jb
mov
sarb
fsubrs
jne
aad
mov
loope
mov
call
xor
and
aad
and
fmulp
fsubrl
dec
mov
lock
xchg
in
out
movsb
ret
dec
mov
iret
sahf
xor
and
mov
das
pop
repnz
fcmovu
mov
mov
enter
movsb
mov
test
mov
mov
mov
in
mov
iret
jp
push
scas
popf
aam
push
in
mov
scas
jmp
and
dec
mov
or
test
lea
rcr
fists
iret
mov
xor
pop
mov
ret
add
mov
xchg
mov
or
mov
in
movsb
out
or
dec
push
iret
icebp
test
sbb
in
loope
xchg
adc
xlat
and
mov
movsb
pushf
xor
lods
mov
les
mov
mov
icebp
adc
imul
mov
aas
sarl
movsb
popa
inc
add
mov
cmpsl
jmp
sub
fmuls
bswap
lret
lods
popf
shrl
pushf
mov
push
xor
fisubs
repnz
rol
push
outsb
lret
mov
sbb
ljmp
adc
inc
cmp
push
aad
xor
pushf
loop
ret
xchg
pusha
sbb
scas
fwait
jno
xlat
jg
jle
push
loop
jmp
add
fcmovnu
mov
push
shll
mov
in
leave
sbb
mov
ss
fsubrs
int3
sbb
xor
lret
imul
mov
call
out
repnz
enter
jne
iret
mov
mov
mov
into
sbb
or
lret
cld
lret
mov
sbb
lds
sub
leave
mov
mov
add
test
fimull
fdivs
add
cmp
sub
das
loope
dec
repnz
stos
daa
out
call
jns
adc
lods
ret
mov
fdivrs
test
mov
cld
or
push
int
fidivl
xlat
ret
paddsb
movsb
sahf
call
pushf
adc
aad
sti
repz
adc
iret
adc
adc
xlat
out
mov
cmp
pop
add
add
mov
lods
iret
repz
stos
sbb
push
cwtl
lds
out
lods
loope
mov
push
sahf
push
xor
mov
in
into
out
mov
fs
scas
adc
mov
cltd
ror
mov
and
out
mov
fmulp
int3
xlat
push
cmp
movsb
ss
xchg
mov
sarb
enter
pushf
pop
into
das
fnstcw
mov
test
push
push
les
mov
daa
mov
mov
movsl
cpuid
fxch
scas
fcompl
scas
shll
lret
mov
mov
repnz
aam
sbb
adc
mul
call
lret
data16
loop
out
stos
cltd
adc
cmp
loop
and
sbb
ret
enter
divb
adc
adc
rcl
loope
cld
fdivr
push
sub
int
aam
mov
ret
dec
mov
adc
daa
pop
cli
inc
sub
and
out
rcr
imul
or
xor
fwait
data16
cli
fwait
lcall
mov
or
xlat
mov
xchg
jmp
pushf
mov
add
mov
xchg
stos
sub
enter
das
push
jp
fcomps
loope
fadd
adc
or
adcb
or
shll
add
mov
dec
ficoml
jb
pop
int
sbb
adc
or
inc
or
les
mov
cmpsl
mov
cli
enter
int
stos
cbtw
lods
push
cmpsb
shrl
lock
scas
or
mov
das
gs
bound
sahf
and
cltd
insb
int
cmc
aam
sbb
push
xchg
mov
test
cld
shrl
js
enter
xor
mov
ljmp
add
xor
xchg
test
inc
test
mov
loope
and
ljmp
mov
shrb
jp
mov
sbb
sub
mov
mov
lds
sahf
fldt
dec
lds
xlat
lret
loop
pop
stos
mov
iret
mov
cwtl
sub
sbb
xor
mov
dec
lea
test
movsb
push
popf
push
int3
ror
xchg
lret
cmpsl
mov
xchg
outsl
into
lret
scas
in
test
fwait
test
arpl
sub
movsb
mov
cli
fldt
call
mov
bound
adc
rcl
mov
cmp
aam
loop
xorl
cmpb
lret
sahf
jb
mov
movsl
movsb
popf
ret
xor
xchg
or
popf
int3
dec
fs
mov
jmp
inc
lods
hlt
iret
dec
inc
xor
fstpt
sahf
mov
and
lea
ss
nop
or
mov
dec
dec
adc
lods
movsb
int
mov
or
mov
sub
mov
mov
int3
xchg
mov
rclb
inc
mov
sbb
mov
movsl
out
ror
popa
adc
repz
stos
inc
mov
mov
rcl
pop
jmp
lds
jl
cmpsl
and
sub
scas
jb
test
inc
fcoms
mov
mov
xchg
inc
push
mov
sbb
jmp
mov
jb
mov
out
lret
popf
hlt
inc
rcrl
mov
cmc
movsb
test
popa
add
fnstcw
sbb
mov
pushf
rorb
ret
int3
popf
and
mov
fldt
fucompp
mov
aas
shrb
fadds
loop
repz
mov
cmpsl
scas
cs
subb
dec
or
jg
mov
imul
fisubs
push
inc
mov
mov
int3
inc
and
lret
mov
shr
sbb
fimull
adc
imul
mov
test
fbld
lods
cmpsl
mov
int3
in
arpl
les
out
clc
out
rcll
rcl
aas
adc
inc
inc
int
sarb
mov
test
sbb
cmpl
movsl
aam
and
xchg
jne
fcmovu
cltd
inc
rcrl
lahf
sbb
enter
adc
pop
mul
cld
fldenv
lret
aas
mov
leave
aad
int
lods
sahf
adc
and
push
mov
jo
mov
fcmove
shlb
jge
out
jb
lods
shrl
loop
stos
mov
pop
mov
rcrb
jmp
out
shl
add
mov
mov
dec
mov
out
int
lea
lods
rorb
movsl
mov
pushf
iret
inc
mov
aaa
movsb
dec
popa
sub
insl
jmp
sahf
and
xlat
mov
dec
jmp
xor
leave
xor
cld
and
pop
and
dec
xchg
add
dec
sbb
lods
adc
shll
repz
outsl
das
fwait
cli
insb
jg
mov
faddp
stos
dec
fldcw
daa
mov
mov
leave
fnstsw
int
mov
insb
mov
dec
jbe
lds
insb
and
sahf
mov
xor
stos
pushf
repz
aad
repnz
lock
out
bound
sahf
gs
test
add
aaa
mov
push
data16
sbb
jecxz
sbb
fst
orl
xchg
xchg
mov
stos
iret
mov
jb
popf
test
mov
call
aam
in
xchg
test
nop
mov
lret
addr16
scas
stos
sbbb
fsub
cs
mov
mov
aad
mov
cld
iret
lret
lds
mov
cmp
loope
jo
into
mov
dec
in
mov
pushf
xchg
pop
paddsw
lret
ret
jmp
cmp
add
fstpt
xor
sti
cmp
jae
and
sahf
into
pop
scas
mov
mov
mov
jmp
mov
push
les
xlat
mov
arpl
int
in
decl
aam
and
xchg
fnstcw
xchg
iret
xlat
lods
or
paddb
shrl
mov
out
call
mov
mov
fsubr
mov
and
cmp
sub
dec
adc
loop
and
push
inc
or
adc
fimuls
imul
xchg
sbb
cmp
rclb
sbb
ffree
cmc
rorb
ds
adc
sbb
push
mov
lret
push
sbb
daa
lock
je
imul
mov
lods
lret
cli
loop
movsl
rcl
aaa
inc
in
sbb
aas
out
decb
fldcw
loop
popf
lret
out
push
fidivl
fimull
movsl
repz
sbb
aad
movsb
fcmovu
shr
test
out
lcall
cwtl
mov
shrl
pop
in
aad
sub
adc
mov
fldenv
mov
dec
out
lret
or
cmp
sahf
or
inc
cld
mov
repz
xchg
in
mov
xchg
xor
ret
lret
adc
ljmp
int
sub
xchg
daa
or
xor
inc
stos
xchg
push
jbe
mov
mov
mov
lcall
push
test
jb
add
fnstcw
repnz
call
xchg
xchg
mov
dec
cld
mov
add
fisubl
cmovnp
cmp
out
and
sub
fmulp
clc
mov
ret
or
int
popf
mov
sti
xlat
mov
loope
enter
mov
xchg
sub
fadd
fiadds
mov
popa
fcompl
ret
cmp
cmp
adc
mov
test
fnsave
imul
out
and
pop
mov
test
loope
repz
mov
lods
mov
divb
push
lea
out
mov
aam
jmp
leave
in
xchg
lcall
sub
fdivrl
jmp
loope
aad
mov
lods
fcompl
data16
lods
mov
cmp
lret
cmpsl
dec
dec
push
leave
cmp
flds
rcrl
mov
loope
loop
enter
fsubr
dec
mul
adc
loope
sarl
or
add
test
fsubs
push
test
mov
inc
les
clc
mov
loope
aas
sbb
fidivrs
into
popf
aad
lods
mov
das
fwait
in
movsb
mov
and
iret
lret
fisubs
sub
pop
les
jecxz
subl
call
movsb
in
dec
out
jmp
rcrl
mov
int3
sub
pop
xchg
fdivl
into
lods
mov
pushf
or
out
push
push
loopne
cmpsl
jg
xchg
mov
mov
loop
sahf
fldz
mov
cmc
lret
pop
add
loopne
adc
jns
stos
das
cltd
sbb
int
cmp
adc
test
and
jae
jo
mov
cmc
and
xor
pop
fisubs
sbb
mov
push
cli
int
pop
das
popa
cli
cmp
ljmp
pop
aaa
sub
sbb
xchg
aad
cmp
shlb
mov
sahf
in
enter
adc
adc
xchg
aaa
mov
ret
stos
test
mov
out
and
inc
jbe
rclb
repz
mov
aad
sub
stos
jmp
add
aas
mov
rcll
fwait
imul
xchg
data16
gs
mov
into
jb
je
inc
stos
pop
or
ljmp
leave
xor
sbb
adc
test
stos
in
xchg
mov
push
xchg
cmpsl
lret
in
insl
leave
fdivs
rcrb
cmp
cmp
fxch
mov
or
add
jl
sti
adc
call
shll
scas
or
clc
cmpsl
sbb
shll
aad
aam
mov
hlt
adc
mov
popa
mov
out
int
mov
out
call
arpl
adc
mov
or
loope
les
dec
mov
adc
mov
xchg
loope
dec
scas
jo
adc
lret
out
adc
xlat
xchg
pop
ret
mov
loop
mov
popf
add
sub
loop
sub
xchg
out
sbb
fwait
add
and
mov
xchg
cltd
hlt
mov
fisubrl
sti
fdivl
cld
mov
mov
adc
test
loop
scas
adc
repz
mov
lods
clc
int
xor
adc
sbb
into
int
es
pop
pop
stos
fadd
cmc
push
aam
idivb
cmp
push
jmp
stos
mov
adcb
nop
fadd
dec
std
fadds
outsl
test
or
fcmovbe
push
mov
lret
sarl
divb
mov
mov
and
lods
iret
fmulp
mov
test
icebp
mov
repnz
mov
mov
cmp
loop
xor
mov
jno
nop
test
xchg
sub
cmpsb
xorb
popf
cmpb
loopne
sahf
sahf
jp
test
cmpsl
ret
stos
insb
jge
and
dec
scas
sub
mov
shll
or
enter
mov
cld
repnz
fnstcw
je
dec
push
xchg
cltd
leave
fcoml
cltd
call
pop
rcll
enter
lds
ljmp
enter
repnz
cmp
aam
nop
sbb
into
scas
mov
iret
or
mov
and
cmpsl
outsl
jnp
fdivr
xchg
and
mov
sbb
movsb
cmpsb
aaa
fildl
fcmove
stos
or
adc
ljmp
jmp
lret
int3
mov
mov
scas
out
movsl
pop
push
push
fcompl
stos
pop
movsb
lret
arpl
fcoml
or
out
push
jbe
mov
scas
add
sbb
popf
enter
cmp
mov
daa
cltd
push
ror
aad
jl
js
push
sti
fld
out
jno
loope
fwait
ss
addr16
dec
ss
jo
xlat
mov
rep
je
shlb
sbb
mov
inc
cmpsb
and
jb
mov
scas
movsl
andl
ja
loope
mov
and
sub
ret
fcmove
xchg
lret
into
push
sub
inc
mov
lods
jle
pop
shlb
inc
mov
sub
hlt
dec
xchg
test
xchg
push
sbb
fucomp
daa
push
fldl2e
dec
fmulp
lcall
test
dec
iret
dec
test
cltd
inc
xchg
cmp
adc
xchg
dec
mov
repz
push
sar
mov
movsl
movsb
out
insb
dec
call
fst
jmp
shlb
lock
stos
ret
mov
and
mov
cmp
fstpl
adc
jo
mov
pusha
cmpsl
fcmovnb
fadds
cs
xchg
fwait
jae
cmp
adc
jecxz
mov
repz
inc
stc
pop
mov
pop
xchg
mov
sbb
out
call
lcall
sbb
aam
icebp
int3
and
scas
or
roll
mov
fidivrl
mov
shr
jecxz
inc
push
jl
dec
hlt
xor
lds
xor
test
and
rclb
lods
jmp
mov
into
push
stos
jl
xchg
inc
lods
out
push
rcl
pop
iret
mov
xchg
sbb
movsb
je
mov
mov
jge
rolb
cmp
jmp
push
scas
add
gs
lahf
loope
jae
inc
pop
xchg
outsb
dec
in
addr16
stos
call
mov
mov
scas
dec
mov
cmpb
cmp
shll
out
inc
shlb
cmp
sbb
in
icebp
push
lods
jle
ror
in
outsb
jmp
xchg
pop
int3
cmpsl
pop
cltd
or
mov
add
cmpsl
dec
lret
ret
pop
adc
loope
outsb
cltd
movsl
mov
xor
lret
jle
mov
xchg
fldcw
and
clc
adc
cmp
add
mov
mov
pop
push
cmp
mov
jb
shll
pop
sbb
xchg
xchg
jne
js,pn
jns
aam
test
popf
lods
mov
daa
sahf
pushf
ss
bound
popf
fstpt
mov
into
mov
cmp
jb
jle
iret
scas
dec
pop
cmp
push
mov
lods
aad
test
fabs
ficompl
out
mov
test
xor
out
mov
stc
mov
sub
mov
into
push
mov
movsb
mov
ljmp
mov
sahf
adc
jmp
mov
cwtl
mov
xlat
dec
shrb
jmp
xchg
out
mov
sub
mov
mov
ljmp
ret
data16
add
popf
jp
stos
enter
push
cwtl
add
xchg
int
lock
outsb
fmul
xchg
sahf
fisttpl
clc
ss
fs
fldl
stos
mov
sahf
fsubrl
and
adcl
ret
fwait
mov
int3
nop
repz
scas
lods
mov
mov
ljmp
cmp
testb
fwait
push
inc
mov
cli
sbbb
ffree
fxch
xchg
out
in
mov
rcr
or
loop
movsb
pop
test
int
sbb
cmp
cld
mov
adc
stos
ret
pushf
lret
cmc
mov
rcrl
sub
outsb
bnd
push
rol
mov
popf
stos
lods
shlb
mov
icebp
data16
xchg
loopne
fmuls
sbb
popf
pop
out
mov
lret
subb
movsb
xchg
xchg
into
xchg
aad
call
mov
mov
ljmp
add
mov
fidivrl
mov
sbb
scas
and
mov
test
mov
mov
into
pop
jecxz
stos
sahf
or
movsl
movsb
mov
push
or
leave
clc
fisubs
add
in
push
les
das
scas
fbstp
push
scas
mov
fisubrl
adc
scas
pushf
lahf
mov
mov
ret
mov
push
mov
push
fcmovnbe
movsl
cmp
mov
sbb
call
mov
mov
fldt
test
jecxz
sahf
mov
xchg
leave
lods
fsin
movsl
pop
or
sbb
xor
scas
aad
mov
lds
jnp
loope
lods
sahf
mov
xchg
adc
mov
or
mov
mov
lods
movsl
and
stos
int3
imul
sahf
lods
loop
mov
and
push
jmp
cmpsb
jg
mov
xor
fwait
sahf
stos
cmpsl
rcr
mov
fcmovu
scas
std
mov
arpl
mov
mov
pop
xchg
stos
enter
mov
fstp
push
mov
fidivl
adc
movsb
int3
int3
cld
inc
pop
popa
cwtl
divb
mov
sbb
fbstp
sti
push
push
or
mov
mov
mov
mov
fisttpl
mov
mov
pop
dec
les
nop
js
out
rorl
loope
int
test
mov
scas
je
rcl
mov
and
out
pushf
add
sahf
lods
mov
aam
cld
mov
or
lret
ljmp
dec
into
in
dec
ljmp
push
mov
fidivl
rcrl
fucom
mov
sti
cmp
movsb
lret
repnz
mov
inc
jmp
scas
lret
sub
push
nop
mov
and
sbb
cld
mov
adc
lods
mov
movsb
mov
cmc
mov
fbstp
lret
loop
aad
cmp
paddb
mov
pushf
popf
mov
call
jbe
lds
stos
fcmovnu
test
lea
enter
int3
movsl
mov
shrb
fdivp
ljmp
push
popf
inc
mov
mov
mov
sbb
mov
stos
mov
scas
jmp
insl
shl
ja
fildll
adc
push
loope
enter
fldenv
es
out
test
imul
ret
repz
adc
mov
and
lret
mov
hlt
popf
mov
test
test
movsb
dec
fisttps
ret
sahf
push
out
mov
scas
mov
dec
ds
adc
les
jl
in
popf
cltd
shl
call
nop
mov
insl
fdivl
fcomps
sub
addb
cmp
out
mov
mov
mov
cld
test
movsl
inc
or
enter
and
push
movsb
mov
int3
sub
insl
pusha
scas
lods
cmp
push
iret
cmpsl
mov
fmul
fcmovu
push
push
pushf
leave
out
ret
mov
mov
repz
lock
xor
push
daa
cmp
sbb
sbb
mov
aad
iret
and
nop
stc
push
adc
xorps
leave
out
xchg
sarl
fisubs
pop
movsl
mov
fcmove
movsb
fstl
xlat
scas
scas
aam
lods
loope
ss
or
int3
inc
gs
pminsw
mov
popf
sub
sub
push
xor
xchg
out
cmpsl
stos
into
shrl
movsl
insb
push
nop
cmp
int3
jp
lahf
push
rcl
inc
pushf
in
movsl
ret
mov
cli
jmp
xlat
loop
jbe
stos
mov
mov
lret
lods
or
mov
mov
sbb
cwtl
dec
dec
mov
int3
movsb
repnz
mov
lods
xor
nop
mov
fdivs
popf
leave
cmp
push
mov
push
arpl
shlb
mov
lods
sub
mov
adc
test
push
xchg
fldcw
fisubrl
repnz
xchg
or
loope
mov
mov
sub
mov
lret
outsb
lcall
fcmovne
mov
outsl
cltd
jg
sub
enter
das
fsubl
xor
lods
pushf
insl
mov
lods
push
outsb
sbb
out
mov
shr
loopne
xlat
cmp
es
lods
movsb
xchg
rcrl
mov
jae
out
mov
adc
stos
cmc
dec
ss
inc
pop
mov
lret
push
sbb
testb
pop
aad
out
lret
leave
out
int3
push
loop
movsb
sahf
shrb
int3
lret
ret
enter
outsl
loopne
mov
cmpsl
lods
mov
xor
out
mov
shl
fldcw
loop
loop
out
sbb
push
push
jg
xchg
mov
pop
not
repz
sti
adc
jno
rcrl
sub
cmpsl
mov
mov
lods
and
test
int
movsb
fwait
sarl
test
push
lods
stos
lret
cmc
push
push
ret
pop
out
and
out
xchg
out
test
bnd
enter
stos
into
mov
popf
ja
mov
scas
insb
sti
add
lods
push
mov
lret
mov
push
vpmaskmovq
sub
xchg
lods
adc
aas
insl
and
sbb
bound
scas
movsl
fisttpl
sbb
and
les
fstl
cmp
shlb
mov
scas
sub
or
in
lret
fs
lods
js
scas
mov
and
into
fidivrs
fmuls
stos
aad
push
cmpsl
mov
vaddsubps
mov
loope
ret
fmulp
fistl
push
mov
fdivl
adc
sahf
dec
lret
or
iret
mov
mov
mov
xchg
and
mov
sahf
in
mov
pushf
fidivrl
loop
mov
in
enter
aas
push
xchg
add
cmpsb
add
test
lods
out
or
xchg
xchg
xchg
xchg
int3
mov
mov
sub
and
sub
bound
aam
sbb
cmpsl
stos
sbb
push
hlt
mov
iret
xor
sbb
mov
mov
leave
adc
fwait
scas
xchg
fdivl
and
push
add
lods
lahf
dec
lcall
xchg
into
or
repz
loope
mov
or
fmuls
aas
xor
iret
jns
shrl
lods
dec
repnz
xlat
bound
rolb
addr16
add
shll
aad
mov
mov
out
mov
ret
leave
fptan
bound
mov
inc
mov
lds
inc
insl
push
mov
iret
mov
adc
mov
pop
mov
sti
scas
add
jg
jbe
jecxz
shr
xchg
repz
std
adc
cli
add
adc
cwtl
pusha
ret
ljmp
jae
aam
in
mov
pushf
lret
data16
mov
mov
xchg
lret
popf
fnstsw
mov
into
loop
mov
ret
sbb
mov
fsubs
fstps
stos
test
sbb
aam
fadd
mov
add
lods
inc
and
push
mov
iret
lds
mov
and
xor
cmpsl
out
fdiv
js
and
adc
push
mov
out
dec
test
repz
popf
mov
jecxz
push
lcall
push
adc
arpl
fwait
mov
cmpsb
mov
lds
cmpsb
divb
in
fsubp
mov
fisubrs
fisubl
pusha
pop
push
mov
cmpsl
xchg
movsl
leave
les
xlat
mov
sub
subl
mov
mov
mov
test
sahf
dec
pop
sub
jne
sbb
mov
mov
scas
xchg
push
or
sub
or
aad
dec
jmp
push
loop
fcmovnbe
rcrb
xor
mov
xchg
mov
ss
and
mov
mov
lds
mov
test
nop
jmp
aam
mov
into
aaa
sarb
xlat
lret
or
stos
lods
call
cli
sbb
fstps
xchg
pop
mov
rorl
mov
scas
mov
xlat
mov
fnsave
into
int
mov
fwait
test
xchg
lret
leave
sahf
dec
aas
inc
add
out
mov
push
lret
dec
mov
shl
loope
enter
sub
ja
aas
ret
sub
mov
adc
jb
fnop
ss
lahf
mov
rcrl
inc
mov
or
loope
outsl
shlb
int
mov
or
push
or
push
cmp
mov
xchg
iret
jmp
xchg
sub
out
ret
sub
es
iret
popf
jo
push
mov
jmp
or
mov
xchg
scas
xchg
sbb
mov
out
mov
popf
adc
popa
cs
popf
mov
mov
call
pop
lea
into
scas
lods
cmp
imul
inc
lcall
mov
or
pushf
les
popf
out
into
movsb
jecxz
ljmp
mov
sub
dec
sbb
cmpsl
test
adc
sbb
iret
aad
leave
sbb
pop
mov
enter
jb
cwtl
mov
jle
add
test
sbb
cmp
lds
fwait
cltd
dec
cld
adcl
mov
into
jb
jns
lret
shll
mov
or
out
mov
sub
enter
inc
pop
adc
test
scas
rorb
mov
sbbb
xchg
fistps
in
jp
ja
iret
enter
ret
pop
cs
mov
aad
add
xlat
add
lods
or
push
repz
ljmp
popf
hlt
mov
sbb
jmp
stc
xor
imul
int
loop
sub
xor
inc
shlb
test
lock
fwait
aas
adc
lods
mov
stos
sub
fcoms
aam
mov
mov
cli
mov
sti
repz
neg
aam
nop
arpl
jmp
bound
sbb
cli
or
mov
ljmp
fsubrl
mov
in
mov
fisubrl
sar
mov
repz
sbb
dec
lods
mov
fisubl
xchg
or
psrlw
lods
scas
push
pushf
mov
sbb
fimull
mov
fwait
mov
call
popa
repz
inc
lds
cmp
dec
xchg
mov
sub
lods
popf
test
jmp
jbe
inc
xchg
add
loope
lret
je
cmc
int3
lret
lret
fmulp
ljmp
mov
mov
push
scas
jnp
aad
mov
push
sbb
mov
je,pn
mov
mov
or
imul
lea
int
pop
or
popa
sub
fidivrl
fcomi
sub
fldl
sub
push
popa
fbstp
bound
cltd
dec
aad
xchg
movsb
mov
or
addr16
mov
pop
and
cmp
aaa
loop
mov
ret
mov
push
cli
popf
stos
pop
pushf
jmp
nopl
ljmp
pop
loopne
mov
lods
xchg
shlb
jmp
jl
mov
xchg
xchg
sbb
lds
enter
call
fwait
xorb
xor
xchg
aam
fdivl
pop
sbb
push
out
stos
mov
jge
fcmovnb
mov
fsubs
int3
xchg
sahf
into
jmp
bound
popa
int3
or
fstl
sahf
outsl
push
adc
inc
lods
mov
cwtl
xchg
mov
aam
ret
sbb
cmpsl
mov
cwtl
inc
xchg
or
movsl
fidivl
es
push
xlat
fwait
mov
lods
jno
and
push
loope
adc
lods
aas
xchg
out
and
adc
bound
mov
out
mov
adc
sarb
mov
xchg
ror
call
or
cli
mov
in
fs
stos
stos
xchg
bound
sub
fistpl
rcrb
pop
cmc
lret
xchg
or
lea
ret
add
xor
sarb
test
lret
dec
mov
lret
mov
mov
lret
cmp
and
aad
cmp
cmpsb
lods
aaa
jl
push
jmp
enter
out
insl
test
cmp
mov
out
lret
mov
pushf
fcom
es
xchg
xor
repz
lods
arpl
stos
test
or
and
xchg
mov
cmp
lret
fwait
mov
iret
or
sbb
repz
nop
jb
lret
inc
das
lret
mov
sub
stos
imul
lret
or
mov
fsubr
loop
orb
ja
mov
test
loope
lock
fcom
mov
fmul
jge
dec
xchg
scas
rcrb
aam
out
mov
call
test
mov
mov
mov
mov
aam
push
loope
mov
ficomps
ffree
in
lods
mov
notl
cmpsl
mov
sti
mov
adc
aam
movsl
test
scas
scas
mov
aad
icebp
inc
scas
pushf
mov
inc
mov
mov
imul
sub
lock
fstpt
dec
in
ret
loope
rorb
jmp
jb
and
sarb
fldenv
sahf
cmp
enter
fldl
adc
cmpsb
leave
bound
mov
jmp
shrl
lret
push
inc
rclb
aam
loop
mov
lock
enter
lods
cmp
sti
jmp
push
sahf
mov
mov
out
or
mov
mov
int3
cmp
mov
loop
loop
xchg
mov
test
loope
fwait
lret
cmpsl
push
fcmovnbe
movsb
cmp
shrl
mov
pop
aam
xchg
cltd
mov
mov
mov
add
dec
lods
xchg
fdivrl
call
iret
inc
or
fldcw
and
push
jae
dec
nop
sub
aam
pop
jl
mov
repnz
ret
inc
and
and
test
xorb
imul
and
lahf
ljmp
bound
and
add
lods
mov
lods
mov
fs
fidivs
dec
sarb
fcmove
mov
jns
aad
add
or
inc
xchg
lret
sahf
lods
mov
test
rol
mov
ret
flds
lods
mov
movsl
test
out
mov
jp
out
mov
stos
into
adc
or
dec
int
lret
mov
cmpsl
jnp
push
mov
sbb
cmc
push
das
shl
int
aam
call
dec
clc
insb
lods
and
push
sbb
adc
sbb
stos
int
lahf
sti
int3
mov
or
in
cld
fsubp
test
fwait
add
mov
push
jne
test
lods
mov
mov
mov
cmp
cmpsl
cmp
sub
fsubrs
enter
mov
imul
push
leave
test
sub
sbb
lahf
test
sbb
add
mov
pusha
jns
adc
out
pop
xchg
cmp
lret
jae
add
loop
cmpsl
sub
and
bound
mov
mov
lods
test
orl
test
je
shrl
shll
fdivrl
not
adc
jbe
dec
pop
les
loop
fiadds
lods
enter
lret
or
in
sti
jmp
sbb
popf
enter
mov
or
into
stos
inc
ficompl
push
test
pushf
dec
mov
xchg
mov
popf
mov
cmp
push
and
aaa
sbb
mov
int3
mov
movsl
cmp
fsubrs
repz
les
mov
xchg
sbb
mov
stc
mov
clc
stc
xor
lods
jne
jmp
int
pop
je
fnsave
stos
iret
cmp
inc
xchg
stc
jmp
xchg
dec
adc
ror
jecxz
jmp
mov
mov
push
mov
inc
jae
mov
pop
push
sub
test
mov
loope
std
fmul
adc
outsb
shlb
push
xchg
pusha
dec
xchg
mov
mov
sub
lea
scas
out
push
jnp
in
testl
mov
mov
leave
mov
insl
in
ret
inc
xchg
cmp
jmp
push
pop
cltd
mov
mov
insl
sub
sub
movsl
pop
icebp
push
fldl
pop
mov
pop
insl
and
aam
jge
fldt
xchg
movsb
push
mov
enter
mov
sub
ror
aad
or
iret
sub
loopne
fimuls
clc
push
or
std
pushf
mov
pop
pop
scas
mov
sub
push
loope
mov
add
cmp
mov
insl
pop
xlat
xchg
xchg
mov
mov
test
movl
lret
sti
inc
mov
push
mov
lret
iret
push
push
fnstsw
scas
sti
outsl
or
inc
insb
loopne
loope
gs
movsb
mov
pop
test
les
xor
stos
cli
mov
mov
repnz
mov
mov
fsts
enter
xlat
scas
sahf
cli
mov
les
mov
leave
int3
cli
int3
call
fwait
shr
ljmp
movsb
inc
lods
push
fldt
cmp
or
cmp
mov
sahf
mov
mov
popf
aad
int
xor
in
sub
inc
sbb
lock
fidivrl
into
stos
sbb
xlat
loop
push
jo
call
ficoms
leave
lret
int3
outsb
xchg
scas
int
iret
xlat
fstp
out
add
xchg
test
out
mov
int3
fisubs
repnz
or
add
sahf
fmul
in
push
mov
insb
aaa
sbb
in
cli
mov
add
dec
mov
push
mov
mov
mov
ret
sahf
lret
jb
lods
xor
outsb
mov
scas
mov
enter
mov
xchg
int3
lods
mov
test
ljmp
jb
popf
and
sub
add
inc
out
fcmovne
scas
aam
and
fmulp
rcll
mov
mov
aam
xor
lahf
push
pop
lods
mov
rcrl
jmp
mov
iret
push
into
sets
shlb
mov
xor
flds
ljmp
sub
lds
in
test
les
and
jae
push
fstpt
aam
fsubrl
cmp
push
jmp
insl
mov
int
pop
push
mov
cmp
int3
mov
cmpsb
mov
ljmp
stos
shlb
cs
inc
dec
adc
cld
jno
pusha
dec
loope
mov
mov
lods
into
mov
outsl
mov
shlb
movsl
mov
cmpl
inc
sub
mov
filds
jb
movsb
ds
push
iret
lods
fsub
adc
test
cmp
mov
dec
mov
fwait
or
inc
jbe
mov
call
push
adc
mov
dec
shrb
test
pop
cmpsb
aad
add
lods
scas
fcmovne
cmp
mov
pushf
sti
add
mov
adc
sarb
aam
fisubrs
jg
xchg
fwait
push
mov
data16
into
push
or
test
hlt
mov
roll
fsub
sub
ret
cmpsl
cs
ficompl
movsl
lods
sbb
mov
push
mov
loope
sbb
sbb
int
clc
scas
test
int3
adc
fucomi
mov
call
or
aam
pop
shrl
xor
fidivl
mov
mov
iret
mov
fadd
mov
mov
fidivs
lret
cmpsl
clc
bndldx
inc
ss
enter
lret
stos
xlat
loopne
stos
and
iret
fidivs
sub
movsb
add
pushf
int3
jle
ret
jb
fstpt
mov
daa
aaa
inc
xor
sti
popa
das
push
sub
mov
mov
add
mov
cmpsl
xor
mov
jmp
mov
add
mov
ljmp
popf
mov
mov
add
loope
out
ffree
ljmp
mov
scas
rorb
mov
xchg
mov
mov
rclb
mov
fadd
mov
fldz
lods
iret
xor
inc
pop
enter
mov
cmp
insb
sbb
mov
jp
inc
fimull
ret
movsb
scas
sbbl
cld
test
adc
mov
lods
sbb
cmc
or
mov
mov
fisttpll
rcll
test
add
mov
mov
and
pop
jg
rolb
shll
repz
push
xor
mov
mov
mov
out
stos
pusha
movsb
adc
lret
loop
shlb
rol
xor
push
scas
test
inc
enter
mov
xor
es
lea
lods
fwait
push
xchg
push
pop
rcrb
ret
lods
sub
mov
fisubs
lods
out
pushf
outsb
test
loope
adc
iret
jb
int3
fwait
sub
xchg
cmp
add
lcall
ret
lret
sub
or
fwait
mov
out
mov
lods
adc
repnz
aad
out
mov
push
imulb
shr
adc
mov
adc
mov
or
sahf
stos
call
add
daa
mov
fmul
lret
pop
sahf
std
mov
xor
xchg
shll
sbb
lods
xor
outsl
repz
lret
xlat
aam
xlat
jmp
iret
push
out
lods
add
test
xchg
clc
or
xchg
pushf
sub
scas
cli
jno
sahf
loopne
es
mov
or
mov
test
xchg
fwait
xlat
inc
sub
dec
stos
stos
int3
sbb
lret
shll
pop
xor
mov
cmp
inc
mov
test
mov
sub
scas
mov
xchg
lret
rorl
leave
movsb
fisubl
into
scas
or
shlb
bound
movsb
jb
sahf
mov
int3
fwait
sub
outsl
pminsw
fsubrl
sbb
and
enter
dec
xor
cmp
mov
pushf
test
in
mov
mov
icebp
jecxz
lods
jge
xchg
mov
inc
dec
xor
cmpb
fwait
mov
and
int
hlt
lea
lock
xor
shrl
cli
jg
stos
xor
mov
mov
sub
pushf
fadds
inc
ret
bound
roll
push
mov
mov
fwait
jle
fcomps
or
mov
sub
inc
lea
fcom
xchg
ss
stos
sbb
orl
mov
bswap
fs
repz
fsubrl
les
sbb
stc
mov
mov
rcl
mov
pop
jecxz
scas
sahf
test
push
mov
ljmp
hlt
xor
repz
cmc
int3
adc
int3
mov
int3
xchg
ret
sub
mov
dec
mov
mov
ja
add
out
sahf
scas
fidivrl
mov
xor
test
scas
xlat
aaa
add
inc
fisubl
fimull
aam
sahf
out
push
mov
call
add
mov
mov
int3
push
mov
mov
mov
mov
lahf
dec
test
xchg
mov
inc
sti
imul
mov
shl
shr
movsb
enter
xchg
iret
out
jne
lods
xchg
cmc
mov
cwtl
outsb
shrb
scas
mov
or
or
lods
rep
mov
in
scas
lods
cld
fimuls
mov
xlat
lds
cmp
sarl
dec
jmp
xchg
out
mov
mov
adc
mov
xchg
ret
popa
sub
dec
in
xchg
sub
stos
leave
cs
fcmove
imul
testb
stos
sti
adc
mov
pusha
shr
bound
xor
scas
jbe
fimull
cli
lret
jmp
cmpsb
leave
ds
jecxz
repnz
test
negb
or
mov
enter
sub
mul
scas
sahf
mov
sub
mov
adc
mov
xor
movsl
stos
xchg
mov
lret
dec
push
loop
call
xchg
add
xchg
jle
mov
fisttpll
test
mov
lret
mov
or
pop
sarl
in
enter
jl
add
jb
out
mov
mov
xor
test
outsb
test
in
rolb
and
ljmp
lods
push
lds
call
or
ljmp
mov
pop
movsl
rcll
xchg
add
add
and
mov
add
inc
repz
add
test
mov
iret
lret
fcmovu
xchg
adc
fcompl
jo
mov
inc
popl
fucomi
pop
add
leave
fnsave
and
addr16
int
mov
and
cwtl
mov
or
int3
adc
mov
out
inc
ds
sub
fcom
rorl
mov
bound
les
mov
cmpsl
lret
mov
jmp
mov
es
cltd
sub
adc
ds
das
dec
lds
pushf
mov
jnp
and
test
aam
pop
repnz
imul
sbb
stos
into
sub
push
addr16
mov
mov
sub
rcll
jle
lods
lods
fwait
pop
call
and
fsubrl
scas
lret
and
scas
callw
popf
jp
pop
rcrl
or
jmp
add
and
xor
jecxz
stos
inc
stos
mov
movsb
lret
cli
ret
iret
pop
add
cmc
mov
pop
frstor
rolb
aam
jle
sahf
lods
fisttpll
xor
test
sbb
aam
sahf
lret
push
mov
aad
stos
lds
mov
imul
scas
shl
stos
jns
xchg
iret
pop
xchg
rcl
mov
ret
loopne
jl
xlat
cld
add
loope
out
fsubrl
out
insl
ljmp
popf
mov
rep
mov
loop
mov
insb
fisubl
xchg
fdecstp
stos
enter
mov
xlat
loop
mov
cli
cld
mov
or
lds
or
scas
mov
lret
mov
popf
cmpb
adc
repnz
int
xlat
add
fstl
repz
ret
xchg
movsb
pop
mov
mov
iret
cmpsl
mov
xchg
add
popf
mov
call
mov
or
xlat
mov
jo
or
fidivl
push
into
sahf
push
out
decl
scas
jbe
ffreep
pop
mov
movsl
subb
xchg
mov
xchg
cltd
cmpsl
fmull
aas
dec
mov
loop
aas
shrb
repz
mov
mov
cwtl
out
mov
mov
pushf
pop
dec
add
xchg
inc
test
fcmovu
fsubrl
into
sub
xor
inc
ja
adc
fwait
int
enter
flds
fdivrs
repz
aad
sub
adc
pop
inc
or
out
lret
push
fdivl
int
cmpsl
adc
fnstsw
xor
mov
scas
jb
rcr
movsb
pop
mov
push
rolb
loope
aam
out
mov
sahf
fldenv
mov
ret
mov
dec
movsb
stos
mov
pop
loope
shrl
mov
mov
add
adc
iret
repz
add
ds
imul
push
rcr
pop
ffree
xchg
fsubrp
lods
fisubl
int3
jmp
mov
cmp
scas
pushf
mov
lret
movsl
xchg
pusha
push
xor
rolb
cmc
cmpsl
fisubrl
and
xchg
scas
clc
into
mov
or
mov
pop
mov
loop
aam
ljmp
movsl
int3
adc
xchg
dec
jbe
mov
fnstcw
pushf
sub
cmp
cld
icebp
adc
mov
leave
lret
pop
sti
mov
stos
aad
mov
stos
fcompl
iret
loope
cmpsl
dec
ss
mov
or
lea
and
stos
outsl
fwait
test
lret
push
add
out
jae
pop
out
lea
call
ret
test
fsubs
xlat
lods
test
shll
mov
repz
dec
std
ljmp
mov
adc
mov
ror
bound
mov
aam
call
xor
lret
fildll
mov
lods
sbb
push
ret
ljmp
mov
push
mov
xlat
stos
test
loope
inc
mov
push
dec
sub
or
mov
xchg
pop
popa
jecxz
test
ret
out
repz
pop
xchg
mov
mov
stos
sbb
rep
subl
ljmp
subb
lret
cmp
adc
mov
fsubl
lahf
mov
stos
int3
aad
inc
enter
or
cmp
sub
mov
mov
fdivs
lods
jae
into
pop
pushl
gs
aad
mov
shrl
mov
sub
xor
or
scas
xchg
rclb
lret
xor
jne
sbb
out
leave
dec
pop
rol
dec
adc
mov
es
lahf
mov
dec
xchg
lret
push
mov
mov
lret
push
mov
insl
cmp
fwait
mov
lods
inc
sar
test
mov
adc
test
fwait
scas
loope
outsl
or
out
jg
jg
mov
dec
adcb
inc
or
fmulp
repnz
iret
fldt
dec
cmp
insb
scas
mov
icebp
das
and
icebp
leave
rclb
stos
mov
adc
out
scas
rcrb
sbb
xchg
sub
int3
and
movsb
out
cld
repnz
xlat
call
mov
mov
rcrl
cmp
fildl
aam
lods
stos
sub
fcom
fidivrl
ds
jmp
aad
cli
bound
inc
dec
adc
rol
jg
repz
pop
clc
les
bound
loop
push
aam
mov
inc
lret
aam
adc
outsb
leave
pop
fidivs
xchg
push
sub
xlat
sarl
leave
or
fdivr
call
js
cld
in
dec
fcmovb
imull
xor
fidivl
mov
rcll
pushf
cmp
repnz
dec
or
adc
fwait
sbb
rcll
xchg
scas
sbbl
ljmp
aad
jmp
mov
movsl
fwait
jbe
movsl
xor
xor
sahf
and
pop
xlat
pop
scas
leave
mov
mov
rcrl
adc
rorl
mov
in
xchg
out
mov
nop
xchg
imul
push
adc
lods
ss
jmp
shl
popf
mov
mov
bnd
or
xor
fcompl
pop
aam
sti
loop
fidivl
scas
mov
dec
orb
call
lock
int
mov
imul
aam
leave
in
push
cmpsl
add
jbe
fstpl
cmpb
out
add
mov
lcall
fucomp
mov
lret
frstor
enter
into
mov
sahf
ret
and
popf
fistpl
cltd
out
mov
and
pop
data16
lods
cmp
push
dec
or
daa
cld
fsubrl
int3
stos
lods
loope
shl
stos
ret
call
xchg
mov
js
mov
mov
popf
lods
iret
rcr
scas
mov
stc
pop
jns
push
xlat
mov
mov
repz
cmc
xchg
insl
push
lret
enter
xchg
stos
mov
mov
int
faddl
rclb
mov
mov
dec
into
repz
mov
xchg
shll
movsl
lret
add
pop
pop
or
mov
dec
jbe
jecxz
iret
cmpsl
ror
dec
jae,pn
adc
sbbb
mov
inc
ret
cld
iret
ret
mov
mov
pushf
stos
bound
mov
sub
and
mov
les
stos
jbe
mov
in
inc
div
mov
fs
inc
mov
stos
inc
fs
or
lods
mov
jecxz
cmpsl
loope
loop
sti
xor
xor
push
into
ljmp
push
in
loope
sbb
mov
mov
popf
push
rcr
pushf
iret
nop
int
dec
movsl
fldl
xchg
mov
lret
imul
sub
fidivrs
lgs
scas
mov
sahf
das
popf
sti
repz
sahf
int
div
js
cmp
mov
mov
int3
pop
push
lret
aad
xchg
fisttps
push
test
loop
dec
ss
adc
scas
into
or
fucomp
pop
mov
xchg
lcall
push
mov
jb
fiaddl
jb
lcall
sub
aas
fxam
mov
out
mov
into
pop
in
shrl
sahf
mov
mov
test
lods
mov
jnp
hlt
rcll
adc
popf
push
cmpsl
sbb
jmp
xor
xchg
movsb
cld
mov
lods
push
rorl
in
cmp
divb
mov
stos
inc
add
add
pushf
add
fwait
cpuid
fnstsw
iret
aam
inc
sub
xlat
rcrl
inc
jl
dec
jmp
mov
pop
dec
divb
push
mov
lods
fsubs
fsubr
lods
leave
xor
rclb
mov
add
mov
adc
fcom
lods
mov
jb
xor
xchg
adc
xchg
mov
lret
lods
mov
dec
out
mov
aad
call
rcl
cmp
int3
mov
sub
add
dec
popf
mov
cli
stos
scas
push
push
loop
call
sbb
mov
call
inc
sbb
pop
lds
and
int
dec
pushf
lret
icebp
cmp
xchg
dec
out
out
mov
test
inc
out
dec
or
add
push
mov
mov
loopnew
xor
mov
dec
jecxz
push
push
mov
cmp
cmpsb
fsubs
cmpsb
mov
adc
mov
cmp
jge
fadd
aam
adc
mov
mov
rcr
loop
sbb
jmp
orl
icebp
or
mov
lret
jo
aad
inc
or
xor
scas
popf
cmp
mov
and
stos
cmp
push
mov
lods
add
cltd
sub
dec
cltd
dec
sahf
mov
xlat
call
mov
lret
xchg
stos
mov
mov
fisttps
mov
in
xchg
fiadds
enter
dec
mov
loope
jecxz
leave
movsb
int3
jnp
insl
ljmp
mov
jge
mov
mov
rcrb
inc
adc
cmpsl
mov
dec
mov
mov
fdivrs
incl
mov
mov
mov
loope
sub
pop
fcmovnbe
mov
loope
test
pop
lcall
push
into
loopne
fucomp
call
imul
push
xlat
mov
mov
xor
iret
fcom
fstps
mov
lods
test
scas
addb
mov
mov
lret
jne
int3
fwait
repz
sbb
bound
pop
pushl
jae
mov
pop
pushf
sahf
mov
clc
push
mov
pop
mov
js
cmp
mov
loop
loop
movsl
or
mov
push
fwait
mov
fs
stos
das
aam
sub
divl
stc
fcmovb
lret
insl
mov
push
mov
rcl
xchg
mov
mov
aad
sarl
out
push
js
popf
mov
pusha
gs
push
dec
mov
lret
leave
les
fldcw
popa
ret
lret
push
rorl
lret
insb
inc
rcr
movsl
andl
mov
stos
addr16
dec
and
adcb
mov
fadd
ret
mov
sub
popf
movsb
or
stos
fdiv
rclb
scas
aad
bound
sahf
loop
or
leave
mov
or
mov
xor
and
jmp
sub
push
xor
insl
xchg
mov
in
xchg
push
mov
xchg
dec
jnp
call
cmp
mov
lock
out
outsl
ljmp
fwait
push
adc
lret
or
out
fsubs
mov
jo
in
adc
mov
rorl
sbb
es
mov
mov
fisttps
test
scas
lret
add
lret
je
leave
jb
fabs
test
cmp
xor
stos
pop
mov
repz
scas
cld
stos
mov
mov
fisttpll
fdivr
sbb
and
into
repnz
in
mov
and
mov
scas
mov
int
stos
mov
in
and
int3
les
lods
mov
mov
cltd
lret
xlat
cwtl
shlb
lret
sti
add
mov
or
stos
pop
push
add
xchg
add
mov
cs
std
lret
iret
sahf
and
or
xchg
fsubr
movsbl
sub
xchg
ret
int
adc
iret
jg
aaa
xor
repz
mov
lock
mov
in
sub
test
and
loopne
mov
imul
movsl
fistpll
xchg
mov
out
cli
notb
out
pop
in
lods
and
loop
mov
push
mov
lret
fsubl
pop
test
pushf
test
sbbb
inc
sahf
mov
or
add
sub
fidivl
mov
sub
loop
nop
lods
mov
call
sbb
das
stc
aam
mov
loope
or
or
pop
test
loop
pop
or
xlat
je
rcrl
dec
xchg
aad
and
icebp
cmp
mov
push
jl
shr
fsubl
mov
cmpsb
push
mov
movsl
and
mov
pushf
sbb
insl
repnz
call
jmp
or
iret
aad
fisubs
adc
enter
mov
mov
nop
test
loope
scas
mov
add
inc
iret
or
inc
in
sub
loope
rolb
loope
dec
popf
mov
mov
scas
xchg
test
add
mov
fistpl
popa
ror
test
mov
cmc
mov
sahf
les
insl
fcomps
enter
jb
mov
mov
adc
mov
or
dec
dec
xchg
xlat
stos
mov
mov
fwait
popf
jnp
lods
jbe
rolb
out
ret
jbe
out
outsl
adc
mov
popf
test
fcmovu
aaa
sti
mov
ret
inc
lods
fidivs
fildl
loopne
rclb
mov
lret
loop
mov
mov
cltd
scas
fcompl
pop
cltd
mov
arpl
ret
repz
out
sbb
popf
sub
sub
shlb
out
scas
aam
jbe
mov
lcall
nop
les
rorl
dec
pop
ret
stos
icebp
cli
mov
push
sub
xor
xlat
mov
stos
mov
es
popa
mov
out
push
loope
ffree
repz
data16
fldcw
js
dec
push
sbb
mov
mov
popf
fisttpll
sahf
push
stc
mov
cmp
repz
xchg
clc
xchg
sbb
mov
mov
mov
aaa
sahf
adc
lret
sbb
movsl
push
int3
fsubrs
sbb
mov
mov
adc
loope
and
stos
pop
stos
stos
out
mov
mov
lods
movsb
shrl
lods
out
and
sti
fmulp
iret
data16
fcmovnbe
xlat
aam
cmpsl
push
mov
sbb
lds
pop
sahf
pushf
fisubl
push
fdivrl
or
call
jb
fwait
mov
movsb
cmpsb
jb
ljmp
idivb
mov
ss
xor
fidivrl
cmpsb
sti
shl
lret
sti
call
and
aam
mov
lret
xlat
add
test
cmpb
call
maxps
leave
mov
int3
adc
cli
das
add
jae
jbe
fimull
add
mov
addr16
xchg
movsl
adc
fsubrl
xchg
sub
repz
scas
iret
mov
and
loope
jp
rcr
sbb
lods
test
call
mov
ficoms
lock
in
sahf
cli
in
add
mov
fwait
shll
or
fdivr
das
adc
out
mov
push
mov
bound
loop
ljmp
fisubrl
scas
mov
lret
sbb
push
inc
int3
xor
sti
fcmovnb
push
jo
scas
or
mov
out
iret
mov
sub
sti
loop
test
scas
lods
testb
adc
inc
dec
ret
adc
adc
xchg
inc
inc
leave
test
in
mov
lods
mov
shrl
xchg
fsubl
loopne
mov
repz
push
rcl
mov
mov
mov
or
push
std
cmpsl
aad
xchg
stos
sub
ja
mov
jmp
fildl
adcb
scas
stos
repnz
xchg
out
mov
xor
lods
mov
loope
sbb
insb
stos
test
and
lahf
popf
mov
cmpsl
bound
mov
pop
lods
push
adc
mov
stos
rclb
ljmp
jne
lret
popf
dec
les
push
popf
test
mov
cs
or
inc
fsubrs
lret
mov
mov
xchg
dec
mov
mov
out
lods
jp
loope
pop
aad
aas
xor
shrb
pop
sub
int3
call
fiaddl
out
mov
sbb
add
sub
aam
sub
lret
lea
ret
xor
loope
fcmovu
or
test
fmulp
es
sbb
xchg
pushf
out
push
jecxz
scas
jo
mov
adc
aad
aad
test
and
not
negb
push
int3
fwait
lret
and
flds
cmp
fs
lds
or
lods
fcom
sahf
or
cmpsl
mov
sbb
ljmp
loope
add
loope
fstp
es
stos
out
mov
popf
dec
das
pop
aad
or
lea
mov
cld
or
leave
sahf
dec
outsb
test
iret
mov
int
mov
pop
stos
push
or
or
lods
je
lret
fnsave
addr16
repz
ficoml
or
cmp
lock
adc
mov
daa
mov
mov
ffree
and
movb
inc
and
addr16
das
pushf
mov
mov
mov
leave
sub
pop
sti
mov
mov
aam
cmc
adc
ljmp
rcr
bound
stos
test
movsl
sahf
ror
xchg
xchg
dec
lods
jae
or
fwait
pop
xor
add
mov
xchg
inc
fimuls
inc
ret
mov
shll
adcb
aam
lock
mov
outsl
adc
frstor
sahf
in
or
movsb
mov
les
adc
sub
rorb
loop
dec
out
mov
shrl
jns
aas
inc
test
lret
fdivrp
aam
xor
repz
pop
or
repz
fcoml
sahf
fldcw
fdivrl
fidivrl
into
shlb
movsl
push
push
mov
xor
mov
xchg
pusha
clc
fsubl
ss
mov
mov
sbb
scas
mov
rcl
lret
fnclex
imul
jmp
addl
lds
ljmp
xchg
ret
xchg
into
mov
repz
cmpsl
jg
pop
and
fsubs
loope
jmp
mov
aad
cld
ret
add
fisttpll
movsl
sbb
cmpsb
push
mov
fisttpll
aad
mov
test
iret
fisttpl
mov
xlat
cs
movsb
sahf
mov
call
movsb
lods
add
aad
adc
mov
mov
xchg
lret
pop
ljmp
in
fwait
jmp
mov
cli
push
lock
clc
mulb
mov
lret
and
adc
push
jae
cld
out
jmp
fldt
movsl
iret
rol
insl
jmp
xchg
sbb
push
mov
mov
cmp
sahf
cld
inc
pop
or
lret
in
mov
mov
into
inc
stos
int
sbb
mov
enter
xlat
mov
or
into
stos
adc
adc
mov
scas
pushf
jle
fisubrl
int3
scas
mov
nop
mov
out
hlt
cld
mov
out
lret
mov
push
sub
shrb
xlat
int
scas
xor
pushf
mov
and
mov
cld
out
mov
jne
cld
into
mov
test
lret
sbb
jmp
inc
int
add
inc
sahf
out
leave
test
sti
enter
mov
mov
lds
lods
in
cmp
loop
add
fdivrl
in
pop
fisubl
xchg
mov
dec
and
xor
adc
xchg
test
or
movsb
mov
mov
ret
flds
movsb
ljmp
add
push
sbb
xor
js
sti
xlat
bound
fwait
shrb
jns
jmp
test
lahf
jle
cld
out
or
rclb
ljmp
fstl
out
ret
jno
lock
add
ljmp
sub
mov
enter
test
int3
mov
test
fwait
xor
popf
shrb
inc
testb
fistpl
leave
rcrl
xor
stos
pop
clc
ret
push
add
fmull
xor
add
sub
mov
and
mov
pop
lret
ret
iret
movsb
out
jmp
je
cli
jmp
and
out
mov
sahf
pushf
gs
dec
mov
pusha
or
add
mov
mov
xchg
sbb
mov
push
lock
or
adc
repz
fcmovnbe
mov
sub
lods
xlat
mov
movsb
stos
int3
sbb
sub
popl
xchg
jo
je
mov
mov
inc
sahf
lret
or
ljmp
movsl
sbb
mov
sti
stos
lds
xor
ds
gs
push
lods
popf
pop
add
sbb
ficompl
fisubs
rcr
add
mov
ficompl
mov
fsubs
inc
inc
repz
sbb
test
shrl
test
dec
rcll
leave
scas
or
mov
je
push
ret
int
aaa
sub
test
mov
push
data16
jbe
aam
enter
enter
push
mov
es
fimull
mov
jnp
pop
dec
adc
mov
xchg
test
into
mov
push
cs
xor
fisubrs
or
push
mov
add
scas
mov
pop
int
lds
lods
mov
mov
inc
xchg
stos
lret
adc
lret
popw
leave
xchg
mov
sub
aam
jle
mov
enter
fisubrl
adc
lods
scas
out
in
test
int3
mov
mov
jo
jne
mov
mov
lret
leave
shll
cmp
mov
ja
inc
and
scas
les
or
decl
popf
movsl
imul
movsb
add
fnsave
cmp
in
and
popa
scas
neg
jne
mov
in
cmp
popf
sbbb
rcl
mov
mov
adc
mov
sbb
insl
xor
call
xlat
movsb
xchg
jo
sahf
stos
fs
mov
movsl
or
mov
lret
lret
mov
mov
stos
mov
sahf
int
mov
and
push
test
aam
cmp
dec
adc
push
mov
int3
lds
or
enter
je,pt
js
inc
sub
jns
popf
mov
add
out
fsubl
lea
fldcw
push
sub
lret
lret
or
loope
imul
lret
cltd
and
aam
cwtl
mov
arpl
adc
push
roll
cmpsl
ds
lret
pop
pop
mov
sarb
shr
pop
push
sahf
popf
add
cmp
sub
xchg
cmp
bound
aam
jmp
pushf
sbb
ror
incl
sahf
fwait
jo
in
cmpsb
mov
push
pop
jmp
out
ret
sub
scas
or
icebp
test
xlat
push
ss
xchg
xor
add
mov
mov
mov
clc
out
repnz
cmp
xchg
loop
insl
movsl
mov
inc
leave
cmpb
loope
pop
ror
adc
flds
fs
dec
push
adc
popf
push
shlb
mov
lds
int3
aam
iret
mov
roll
dec
adc
mov
out
lods
jb
push
sub
mov
or
outsl
add
mov
idivb
popf
loopne
loope
clc
xor
sbb
and
adc
lods
repz
xchg
sahf
mov
adc
mov
xlat
and
and
mov
decb
mov
dec
xchg
ficoml
lcall
lods
int
ljmp
sahf
fidivs
pop
in
jmp
lds
cmp
in
scas
mov
lret
adc
mov
loopne
fwait
xor
stos
and
lods
sbb
or
int
add
sti
stos
add
cmpsl
xlat
in
mov
cs
or
ljmp
int3
mov
mov
or
cwtl
and
mov
shl
jl
imul
xlat
pushf
out
mov
pop
sti
mov
test
in
ds
add
scas
loop
repz
shrb
clc
mov
pop
aaa
sti
sub
mov
push
mov
sbb
lods
fsubrl
scas
fstl
lds
aad
mov
test
int
sarl
aad
cmc
mov
popf
lret
lods
fdivrl
push
fwait
mov
ret
ficomps
xchg
mov
fucomip
push
in
popf
rcrl
xor
jns
sub
xor
jmp
in
xchg
aad
mov
shr
scas
add
lods
fiaddl
test
sahf
mov
sbb
sub
push
cmpsl
mov
popa
sub
push
cld
pushf
scas
ret
orb
lret
or
fstpl
bound
sub
movsb
cmp
nop
stos
push
imul
rcl
pop
pop
mov
ret
cltd
inc
or
push
sahf
mov
fistps
fnstenv
imull
and
outsb
fs
pop
push
sub
ljmp
pop
push
lods
xchg
in
mov
mov
adc
mov
shl
hlt
push
jg
movsb
mov
or
stos
fxch
and
sub
or
lret
mov
jno
popf
and
jmp
mov
movsl
les
sar
lock
enter
mov
sahf
pushf
jge
mov
fiadds
ljmp
and
ror
cwtl
data16
xor
add
lods
sub
leave
mov
mov
lret
mov
sub
adc
mov
lods
mov
fucom
lds
iret
xchg
inc
stos
je
mov
fcmovne
mov
shll
push
subl
sbb
fcomp
mov
xchg
aas
xchg
outsb
test
adc
int
lds
mov
xlat
int
mov
jno
mov
repnz
push
sbb
sbb
fidivl
adc
ds
mov
mull
pushf
ljmp
fldl2e
ret
cmpsl
mov
std
sbb
mov
mov
ror
scas
pop
sbb
lret
test
push
shrl
lret
mov
mov
mov
xchg
pop
ret
int
les
mov
xchg
push
mov
push
leave
and
or
shrl
loope
out
cmp
ss
cmpsb
fsubrs
in
cmpsl
rcr
fmulp
into
or
nop
mov
push
mov
pop
iret
jae
call
or
sahf
xchg
stos
lret
in
lds
dec
lods
adc
enter
and
test
rclb
adc
repnz
popf
pop
shr
leave
dec
rolb
sub
xchg
cld
aam
cmp
stos
cwtl
lret
lods
cmc
mov
push
mov
leave
repz
sahf
lret
and
push
test
out
shlb
idivl
pop
push
stos
lret
int3
mov
inc
fdivl
bnd
cmp
xchg
mov
int3
shrb
rcr
dec
and
rolb
mov
out
inc
cld
jno
adc
loop
mov
int
and
out
sar
in
sbb
insl
lods
adc
ret
test
lock
call
xlat
ja
pushf
mov
rcll
popf
call
mov
mov
out
fsubrl
mov
ret
lret
int
mov
fdivl
call
roll
and
mov
sbb
mov
push
pop
sub
fnstsw
scas
mov
loop
loop
xor
aaa
iret
mov
addb
pop
fs
leave
mov
jmp
pushf
rcr
stos
shlb
popa
mov
xchg
mov
jl
mov
sahf
fstpl
fs
jmp
mov
push
fst
out
int
ds
xor
ror
mov
repz
cmpsl
enter
int
or
or
xchg
mov
dec
fstps
push
enter
dec
sbb
mov
adc
shll
jne
pop
les
es
loopne
in
adc
rcr
scas
fldt
mov
arpl
aad
dec
imul
ret
dec
cltd
mov
cltd
pusha
es
or
sub
jne
neg
fildl
push
mov
rcl
adc
shll
out
nop
mov
sbb
test
sbb
test
dec
sub
mov
ret
test
jl
daa
cmpb
lret
inc
movsb
xchg
mov
repz
aam
or
lods
push
mov
pop
adcl
loop
fwait
cmc
mov
aam
lret
and
sub
popa
mov
or
mov
out
ret
ret
aad
fcom
jb
mov
mov
mov
fmull
and
fistl
out
mov
insl
jl
pushf
ret
in
clc
shlb
sbb
call
loope
outsl
mov
enter
out
inc
dec
sub
mov
mov
and
mov
cld
mov
mov
mov
lods
jnp
pop
mov
fcoml
mov
jle
mov
call
sub
sub
insl
xchg
mov
shrb
in
repz
sti
aad
fcmovbe
sti
out
iret
push
in
int
dec
mov
unpckhps
mov
ljmp
or
xor
iret
mov
pop
out
dec
rorl
fabs
rcll
sub
and
sbb
pop
roll
mov
mov
loop
lods
jmp
addr16
ret
cli
fs
add
aad
repz
in
movsb
sub
xor
addb
lds
test
cmp
jp
mov
jb
loop
pushf
stos
movsb
rcrl
jle
iret
shrb
push
adc
ret
xlat
fmul
cmp
lds
dec
pusha
loope
jb
sahf
popf
out
push
mov
into
xor
loop
sub
xlat
mov
mov
test
dec
cmp
icebp
sbb
dec
ficoml
scas
into
stos
cwtl
and
mov
fisubrs
sbb
add
bts
popf
int3
ret
mov
rol
in
frstor
loope
repnz
sub
bound
sub
in
frstor
mov
mov
test
out
icebp
inc
inc
fsts
mov
iret
mov
mov
mov
movsl
stos
fcmovnb
lods
into
mov
loop
mov
sub
lret
shl
pushf
lret
cli
iret
stos
inc
lahf
lahf
mov
cmp
mov
mov
dec
lods
xlat
xchg
cli
aaa
pop
jmp
mov
mov
jg
cmc
scas
lret
lret
aam
call
jb
movsb
loop
out
dec
dec
icebp
adc
sub
sarl
int3
les
sbb
push
sbbb
or
dec
sbb
mov
mov
call
lret
adc
adc
scas
fxam
mov
scas
leave
call
movsb
imul
adc
shlb
adc
mov
push
sahf
scas
shll
jb
jmp
fisubs
cltd
jg
xchg
jae
mov
into
leave
aam
dec
and
jmp
subl
out
cmpsl
mov
test
shll
mov
mov
pop
in
fisubl
or
mov
call
fcomp
cmpsl
stos
bound
neg
test
sbb
cmpsl
cmp
mov
cwtl
movb
add
les
mov
int
xlat
mov
fmul
mov
int3
addr16
or
int3
mov
leave
dec
out
enter
rorl
mov
adc
cmpsl
mov
psubusb
rcrl
clc
movsb
fs
pushf
sub
ret
mov
out
push
sbb
fsubs
lret
jns
xor
out
sbb
inc
adc
adc
loop
mov
cld
out
aad
cld
add
int
add
push
shrl
iret
ret
mov
cmc
sarl
insb
and
lea
repnz
and
dec
loop
sahf
mov
shll
movsl
mov
xchg
mov
xchg
loopne
popf
mov
out
sub
dec
dec
call
repnz
leave
mov
out
sahf
and
rcl
movsb
mov
out
dec
loopne
ret
add
lret
loop
shr
bound
int
test
mov
mov
inc
or
dec
xor
pop
test
xchg
pop
xchg
or
lret
dec
rorb
faddp
mov
lods
pusha
cmp
lods
xchg
popa
int
mov
scas
sub
mov
scas
dec
pop
sti
fbstp
fcoml
xchg
xchg
out
mov
or
movsb
adc
inc
jb
repz
in
adc
mov
es
sti
mov
xchg
dec
inc
insl
ret
shl
fisubs
adcb
fnstcw
sbb
int
movsl
add
out
add
lods
jecxz
mov
call
or
adc
into
mov
iret
cltd
mov
fcmovnbe
lds
ljmp
pop
dec
xchg
sahf
loope
movsl
into
jbe
mov
sti
out
sbb
call
ret
popf
popf
ljmp
add
mov
pusha
cli
sahf
shrb
mov
sub
adc
fcompl
leave
mov
xor
in
xorb
pushf
jb
mov
pop
xorl
shl
mov
movsl
rcrl
xchg
lcall
cli
insb
loope
lret
or
int3
sbb
hlt
add
fxch
or
ficoms
mov
test
lret
and
fs
xchg
push
cld
mov
in
sub
push
popf
mov
push
fldenv
push
add
inc
mov
adc
shlb
mov
inc
mov
fdivl
loop
fiadds
lret
adc
and
xchg
iret
scas
or
repnz
repz
cmc
stos
mov
addb
xchg
mov
leave
stos
fsub
iret
popf
daa
movsl
lds
mov
mov
mov
in
fidivrl
mov
dec
js
mov
mov
scas
loop
fcompp
or
adc
cmpsl
mov
mov
iret
sbb
fcmove
add
xlat
aad
aam
mov
dec
or
cltd
or
outsb
loop
xor
or
sahf
jmp
das
pop
cli
push
cmpsl
iret
or
dec
xlat
lret
mov
inc
ret
stos
inc
outsl
push
fwait
in
xor
jnp
stos
adc
test
inc
push
cmp
xor
aaa
mov
in
mov
fsubs
into
add
stos
pop
movsl
movsb
mov
sub
mov
mov
movsl
fwait
repnz
mov
jbe
clc
jb
rcr
mov
sbb
inc
sbb
mov
fucomi
mov
mov
stos
push
les
repz
popf
shll
mov
test
fstps
rol
popf
cmc
rclb
fsub
movsl
call
mov
int3
push
shll
stc
in
movl
popf
fdivrs
mov
mov
mov
hlt
xchg
cmp
stos
into
subl
mov
lods
push
inc
or
call
loop
mov
sub
adc
int
sbbb
movsl
cmp
inc
inc
lods
enter
cmpsl
pop
in
mov
adc
stos
movsl
shlb
adc
fsubs
in
adc
into
sub
mov
fmul
decb
mov
fildl
fidivrl
adc
pop
cmp
add
jno
add
sub
stos
mov
mov
adc
jmp
mov
push
and
cmpb
movsb
pop
scas
add
int3
and
push
outsb
xlat
dec
xchg
stc
and
aad
mov
fdivrl
sarb
in
stos
mov
mov
fwait
mov
imul
pusha
inc
fldl
btr
test
lahf
fldenv
cmp
sbbb
sub
mov
cmp
iret
lea
loop
aaa
xor
pusha
inc
add
cmpsb
cmc
sarb
mov
mov
sbb
adc
sbb
lret
add
les
mov
scas
mov
insl
dec
jns
mov
repz
out
test
lds
frstor
jb
int
lods
fcomp
dec
les
mov
adc
ljmp
fwait
adc
lret
xlat
adc
xchg
scas
shlb
scas
inc
mov
or
mov
leave
outsb
outsl
mov
enter
clc
fistps
xchg
ja
movsl
mov
out
scas
aas
rolb
aam
rcl
addr16
xchg
repnz
jne
test
call
movsb
fsubrl
fimull
sbb
loope
popf
fnclex
ret
ret
pop
xlat
jmp
sbb
xchg
mov
js
fidivs
out
popa
inc
movsl
and
mov
stos
movsb
xchg
dec
mov
push
out
mov
jo
popa
adc
cwtl
std
aad
aas
rolb
in
push
lds
jg
cmp
es
mov
aad
lret
in
js
xchg
sti
ljmp
rorb
sbb
rorl
add
lcall
ret
lret
les
lret
cmpsb
ret
fmul
fwait
or
imul
mov
xor
dec
pop
fwait
fs
lea
sbb
push
int
and
sub
out
xlat
mov
lods
insb
cld
mov
or
movsl
insl
leave
test
dec
mov
mov
xchg
dec
outsl
or
test
cmp
add
out
lret
loope
lret
cmc
jmp
mov
and
ret
fisubs
jecxz
int
sti
sbb
scas
int3
lods
icebp
rol
iret
in
mov
mov
adc
ljmp
test
scas
fldt
mov
jmp
mov
stos
pop
test
adc
xorb
out
add
sbb
pushf
fcmovne
sub
aas
sub
movsb
sbb
lret
ljmp
fisttpl
scas
lods
jae
lret
push
and
les
sti
push
fistl
mov
xchg
fcompl
cld
scas
dec
idivb
roll
stos
mov
fwait
movsb
mov
ret
sahf
lret
fidivrl
sub
mov
mov
pop
fwait
mov
mov
jb
aad
divl
popa
sub
mov
mov
dec
fdivr
aas
sti
icebp
push
mov
sbb
roll
fwait
cmpsb
loop
loop
mov
cmp
call
repnz
pop
add
sbb
or
pop
adc
test
sahf
into
sbb
loop
inc
sbb
mov
lret
cld
stos
int3
sub
ljmp
pop
setnp
enter
mov
ret
or
rorl
sub
mov
bound
loop
int3
mov
rorb
and
insl
cmpsb
daa
ja
lret
dec
sbb
ja
inc
stos
sub
mov
lret
popf
insb
fistps
lcall
insb
dec
fistpll
ret
adc
lock
stos
or
dec
mov
rcr
add
or
sbbl
mov
xchg
mov
iret
fcmovb
adc
scas
into
out
push
mov
xchg
loop
out
xlat
mov
mov
aad
sub
dec
push
leave
rclb
rcl
xlat
fs
stos
pushf
fiadds
je
jmp
push
mov
lea
mov
test
leave
test
sti
popf
push
sbb
jb
ret
psllw
scas
or
int
mov
scas
push
xchg
pop
jg
mov
xor
repnz
imul
adc
aad
fsubs
mov
repnz
out
outsl
fnstsw
lods
cmpsl
fisttpll
iret
lods
xlat
mov
jl
test
popf
shrb
cmp
sti
testb
xor
iret
out
or
rol
push
je
sahf
push
leave
and
lret
jmp
mov
mov
mov
stos
out
rcrl
mov
push
test
mov
test
inc
xchg
mov
inc
cltd
mov
or
fxch
xlat
ret
loope
mov
sahf
scas
lret
or
mov
int
cmpsl
lret
jnp
movsb
lods
scas
imul
adc
mov
repnz
mov
lods
jmp
mov
sbb
push
shl
push
lock
cmpsl
out
test
and
fsts
fs
mov
into
sbb
mov
pusha
cld
xor
fildll
rorb
xchg
aas
mov
mov
push
pushf
sub
in
into
dec
mov
pop
lods
scas
popl
cmpsb
outsb
cmp
ret
or
cmpsb
dec
inc
xchg
cmp
mov
mov
scas
insb
and
fadd
pop
pop
dec
and
pop
mov
add
shrl
mov
cmc
test
xchg
int3
fsubl
enter
sub
or
fsqrt
lds
lods
in
aam
popf
inc
sarb
in
fimuls
inc
repz
jle
sbb
out
mov
mov
es
sub
xor
les
and
xchg
dec
lea
fdivrl
or
fcomi
fimuls
pop
dec
push
mov
inc
pushf
fwait
jle
adc
fsubrs
js
cmc
aas
lods
imul
mov
fisttpl
dec
mov
insl
test
sub
cmp
bts
lret
movsl
popf
mov
mov
xor
cmp
int
cmc
loope
es
sbb
loop
mov
mov
ret
add
mov
jg
mov
mov
lods
fstpl
mov
aaa
rorb
aaa
repnz
shll
sbb
cmp
popf
or
ret
rclb
stos
jmp
dec
jbe
jge
repz
movsb
xchg
fucomp
enter
loop
jl
sbb
xchg
insb
mov
lods
adcb
ljmp
mov
lods
icebp
data16
rcrb
enter
mov
mov
stos
xchg
in
loope
out
mov
mov
mov
sub
mov
sahf
mov
stos
rcrl
cmc
js
arpl
loop
pop
movsl
pop
rcll
pushf
ds
call
push
popf
jmp
mov
mov
mov
andb
loopne
mov
iret
enter
sub
mov
add
aad
pop
dec
sbb
in
cli
fcomps
out
push
stos
mov
int3
and
int
test
jge
dec
sbb
dec
outsb
fnstcw
sahf
adc
xchg
mov
lods
out
lods
fildll
xchg
out
pop
cltd
inc
mov
insl
fcmovne
push
lret
scas
pushf
adc
test
data16
sbb
pushf
in
push
mov
and
mov
push
out
movsl
enter
lea
lds
xor
imul
push
sub
scas
popa
or
or
dec
adc
ret
cmp
cmp
aad
psubsw
leave
fwait
mov
inc
dec
inc
aas
lods
in
dec
adc
iret
pop
dec
adc
pop
aas
cltd
lahf
cltd
insl
cwtl
dec
xorl
lock
inc
sti
fcomps
aam
xchg
push
and
call
lret
cmpsl
mov
iret
jp
mov
mov
int3
and
dec
cld
mov
or
push
sub
mov
stos
scas
xchg
cmp
scas
push
stos
mov
cmp
and
stos
mov
popf
icebp
sti
les
loop
cmpsl
out
push
fisubrl
fcomp
iret
aad
nop
int
jg
idivl
pop
fiaddl
sub
push
enter
fldl
test
fwait
scas
lods
mov
ljmp
mov
or
aam
movsb
clc
movsl
repz
mov
fimuls
rol
sub
sahf
das
stc
xchg
xlat
fistl
lods
inc
cmovnp
xor
dec
fnstsw
adc
fistpl
rcrb
cmpsl
int3
or
jecxz
mov
xor
mov
fcom
cmp
ds
fisubrs
inc
dec
xchg
or
loope
popa
jo
mov
xchg
loop
fsts
mov
fmulp
dec
mov
dec
pushf
test
test
inc
inc
add
xlat
iret
mov
jb
scas
shll
inc
test
scas
mov
repz
sub
mov
mov
ljmp
test
xchg
sbb
lock
ret
pop
mov
stos
aam
fcmovu
jb
test
movsl
ljmp
aam
insb
xor
pushf
sub
push
dec
imul
pop
and
push
mov
icebp
je
mov
fdivr
mov
test
loope
lock
popf
pushf
push
jecxz
push
movsb
pushf
fistpll
adc
int
loop
in
cmp
jns
mov
stos
shl
popa
inc
mov
cli
test
cmpsb
cmp
adc
jg
mov
jge
xchg
mov
bswap
loop
call
pop
lret
popf
scas
repnz
mov
sahf
mov
or
mov
cmp
inc
ja
stos
push
lahf
dec
ds
add
push
or
sbb
adc
lret
add
movsl
mov
mov
sub
and
jno
sub
rcll
lret
push
sbb
mov
pop
fmull
xchg
push
fwait
in
icebp
int3
inc
sbb
ffreep
les
ss
out
sbb
dec
cwtl
dec
test
lahf
or
sbb
mov
fabs
shr
cld
cmpl
lock
pop
adc
out
ret
fsub
mov
fwait
aad
lods
sbb
inc
sahf
mov
orl
daa
negb
sahf
mov
fcmove
out
or
sar
cmc
and
andb
jne
mov
cmpsb
into
mov
mov
fmull
add
les
fcmovb
xchg
imull
mov
cmp
mov
scas
inc
pop
jne
popf
cmp
mov
push
stos
out
arpl
loop
mov
sub
subb
dec
stos
jae
in
daa
aaa
push
js
mov
int
pop
push
repz
rcll
sub
inc
stos
jbe
stos
stc
int
scas
repz
in
jno
rorl
inc
lret
mov
aad
insl
fsub
push
mov
jbe
sub
into
les
movsb
or
xchg
insl
pop
jbe
xor
xchg
dec
pop
into
mov
add
xchg
pop
loopne
cltd
sub
outsl
mov
xchg
fsub
ds
sub
in
inc
repz
movsb
cmp
push
loop
adc
inc
fcompp
les
fsubrs
les
loop
jmp
xchg
jp
loopne
test
mov
jle
and
xchg
stc
js
xchg
mov
jp
ja
cmp
xchg
das
neg
mov
aad
lds
mov
lods
aam
mov
sbb
test
or
pop
mov
std
sub
xchg
cli
ret
pop
ds
test
iret
jl
test
mov
pop
loop
fisubs
call
jb
jmp
jl
add
mov
fucomi
lret
adc
mov
test
adc
frstor
fwait
mov
scas
loope
mov
xlat
mov
ds
jge
fsubl
enter
movsl
and
mov
mov
loopne
xchg
daa
test
fcmovne
leave
mov
fldenv
stos
rorl
lods
shlb
bound
mov
mov
lret
mov
in
cmpsb
dec
movsb
jb
repz
add
outsb
loopne
popf
loope
sarl
mov
ret
mov
out
fcompl
adc
cmpsl
scas
imul
mov
mov
leave
enter
cwtl
or
fcmovnu
test
jecxz
and
xchg
mov
lret
int
les
fnstenv
shll
movsb
adc
movsb
loope
mov
pop
dec
les
mov
in
mov
mov
out
mov
jns
push
ljmp
shll
lods
mov
cmp
mov
popf
call
mov
loope
or
sub
ror
or
mov
arpl
cmp
adc
into
or
inc
sbb
cmpsl
sbb
xlat
sahf
pushf
popf
mov
mov
inc
jp
mov
in
out
int3
test
out
std
adc
aam
mov
xchg
leave
mov
rcr
iret
pushf
ret
scas
lods
out
inc
into
jmp
add
lret
sbb
leave
mov
fisubl
lods
stos
out
add
popf
test
rcr
int3
push
lahf
imul
movsb
nop
xor
mov
test
nop
ss
mov
mov
test
pushf
mov
insb
push
sbb
pushf
mov
test
fldt
int
scas
xor
enter
mov
lods
mov
push
les
out
aam
mov
jecxz
mov
shll
into
bswap
movsb
fwait
mov
mov
cmp
insl
pop
ljmp
pushf
lods
mov
xchg
fiaddl
mov
mov
addl
ljmp
fdivrl
mov
leave
xchg
sarl
lret
sbb
and
and
call
enter
arpl
ret
movsl
shll
ljmp
push
push
mov
pop
sbb
add
mov
shrl
fcompl
test
inc
mov
jo
mov
es
lret
xlat
int3
loope
adc
scas
push
or
push
fstpt
test
fisubs
jmp
cld
dec
adc
int3
and
sub
or
ja
fwait
nop
and
lret
fsub
adc
stos
mov
int3
xor
mov
iret
cmpsl
xorl
insl
lods
push
xor
stos
lret
sub
cmpsb
xor
sub
out
mov
mov
cld
daa
sbb
add
mov
stos
test
int3
shl
jnp
mov
fstpl
lods
or
stos
cmp
and
mov
lret
mov
shlb
adc
lods
loope
lods
shl
iret
mov
movsb
sbb
scas
adc
ja
fwait
out
outsb
mov
and
in
pushf
gs
das
xchg
imul
andb
les
xlat
dec
inc
stos
or
sub
outsl
jmp
mov
in
es
xchg
pushf
mov
ret
sarl
mov
mov
fwait
stos
pop
popf
xlat
mov
pop
loope
leave
pop
mov
popf
lods
bound
push
push
sbb
mov
lods
daa
pop
loop
lret
push
mov
or
mov
lods
and
lods
scas
gs
mov
shrb
adc
lret
in
or
out
int
pop
lret
dec
call
out
stos
andnps
pop
cmpb
lods
lret
mov
mov
mov
and
les
push
lds
fwait
int
or
fldenv
mov
mov
les
mov
mov
rcr
cltd
push
cmpsl
cli
inc
dec
sbb
mov
adc
mov
jae
dec
inc
jbe
cli
lret
fildl
xchg
inc
adc
int3
fcompl
mov
les
orb
jae
into
or
sarl
lret
fnstenv
or
test
lret
ss
ret
mov
ljmp
mov
pop
ret
cmp
test
xchg
int
dec
xchg
mov
mov
mov
fucomi
mov
loop
shll
dec
shr
and
mov
jo
mov
imul
movsb
stos
scas
fcmovnu
shll
mov
pop
pop
cmp
xchg
pop
cmpsb
push
fbld
fwait
stos
fdivs
adcl
cmpsl
lahf
push
fsubrs
rcr
or
and
sbb
mov
fstpl
movsl
fcoml
faddp
mov
call
pop
pop
xchg
inc
movsl
or
sub
sarl
cmpsl
popf
sahf
mov
sub
mov
adc
fmul
mov
fcomps
mov
popa
rcrl
outsb
cmpsb
xor
mov
pop
jge
fcmovne
ret
mov
mov
xchg
mov
mov
xchg
test
mov
adc
push
out
out
cmp
mov
cmpsl
sub
inc
lods
outsb
flds
lods
std
int
sbb
int
das
or
stos
pop
mov
in
mov
lods
aam
lods
fsts
mov
sahf
movsb
loop
xor
jne
sbb
orl
scas
shr
rcrb
xor
mov
jb
fwait
xchg
cmovbe
fsub
das
push
ror
mov
inc
scas
mov
push
mov
or
faddp
mov
sahf
mov
es
out
lret
orpd
fcmovu
negb
mov
push
xor
dec
lret
int
jno
inc
fisttpll
mov
mov
mov
insl
push
int3
or
inc
daa
sbb
inc
jnp
cli
xor
test
aam
fdivp
dec
mov
mov
mov
mov
lds
mov
cld
jl
and
xor
mov
and
fcom
sub
int3
lods
inc
cmpsl
mov
add
lret
iret
test
repz
xor
out
fcmovnu
out
push
adc
sahf
lret
aam
loope
mov
and
int
ret
adc
stos
loope
lret
xchg
movsw
sarl
subb
pop
inc
pushf
repnz
shrl
xchg
sbb
movsb
stc
inc
push
pop
scas
jb
lret
dec
pop
popa
sub
sub
jae
xlat
mov
lds
outsl
enter
movsb
lret
mov
mov
push
mov
adc
les
pop
fisttpll
dec
xor
xorl
xor
mov
leave
mov
jmp
mov
push
andb
scas
xor
jae
popf
ret
shll
mov
test
fdiv
gs
and
fidivs
enter
iret
sti
adc
movsl
shl
lret
mov
leave
jb
sar
fcmovb
cmp
lds
pop
aad
lret
lret
popf
shlb
pop
lods
mov
scas
mov
pop
sub
orb
out
mov
adc
cmpsl
push
daa
les
push
mov
out
scas
call
push
or
loope
adc
ljmp
or
fcoms
in
push
dec
push
xlat
rol
mov
mov
test
xchg
and
insl
push
pop
mov
loop
loope
fidivs
test
xor
aam
jl
and
xchg
or
vsubps
xor
testl
js
out
ret
cmp
mov
mov
into
adc
mov
mov
enter
into
addb
fcmove
mov
inc
aam
repz
les
xchg
into
or
lods
mov
cmp
mov
rcll
dec
or
push
les
fwait
and
fsts
add
popf
inc
jl
loope
jp
loop
mov
lods
mov
aas
mov
sbb
and
sbb
daa
push
repz
sbb
fsubs
insb
jmp
cld
fldcw
dec
out
ss
pushf
lds
add
mov
mov
push
cmp
sub
test
pushf
lret
out
ljmp
int
push
iret
or
lahf
dec
hlt
enter
mov
call
ret
jle
adc
mov
or
rorb
mov
cmpsb
cltd
adc
setbe
loop
mov
movsl
loope
fldcw
mov
stos
popf
mov
or
movsl
filds
setle
fmulp
enter
int3
lret
aad
lret
out
call
test
mov
mov
dec
fdivs
dec
push
stos
mov
loopne
pmuludq
xchg
rcr
cmp
ds
fisubrs
ret
out
pop
adc
pushf
jae
xchg
cmp
xor
lods
and
sub
adc
mov
ror
lods
sbb
loop
aam
aam
or
pusha
mov
and
pop
lret
ror
mov
popf
sub
adc
and
les
xchg
push
test
fnstcw
xchg
inc
shrl
fistpl
xlat
ljmp
lret
mov
sub
pop
pop
rcr
imul
mov
jne
jno
jno
ljmp
jge
repz
and
jmp
lods
rorb
popf
lret
lret
xchg
out
call
mov
xor
scas
mov
scas
mov
adc
mov
stos
and
mov
mov
enter
xorb
mov
aad
xchg
outsb
sahf
rol
lret
adc
push
mov
aam
jb
fcomi
xlat
mov
inc
call
fwait
mov
mov
iret
sbb
dec
inc
fxch
repz
jns
xchg
mov
cmpsl
or
adc
ret
cmpsb
movsl
addr16
enter
xchg
adc
aam
xlat
mov
insl
xchg
out
dec
xor
mov
lds
stos
outsb
leave
insb
xor
xlat
int3
xchg
pop
out
mov
mov
and
lret
and
jmp
aam
iret
loope
mov
sbb
jbe
je
dec
dec
loop
mov
divb
fmull
lret
roll
dec
es
push
and
int
int3
lea
sbb
mov
leave
mov
mov
dec
shl
fstps
and
fldcw
out
movsl
stos
shrb
scas
test
fidivl
ljmp
lods
mov
sti
cs
lock
push
adc
rcr
xor
sarl
mov
mov
sahf
rcr
jb
fldenv
or
faddp
popf
movsb
scas
xchg
es
rcrl
xchg
inc
and
dec
pop
push
pop
fxch
mov
xchg
mov
adc
sub
addr16
mov
int3
inc
leave
mov
fs
mov
stos
into
mov
fcmovbe
mov
pusha
or
mov
clc
outsl
leave
sti
jl
pop
sti
rolb
pop
lods
rcl
movsl
mov
lods
enter
mov
or
pushf
stos
inc
cmp
aad
add
mov
push
adc
ja
mov
lcall
mov
sbb
fsubrl
inc
jecxz
js
rorb
mov
decl
cli
mov
pop
mov
out
movsl
rorl
jmp
dec
aam
inc
lea
fdivs
lods
shll
or
aad
fnsave
into
shrl
or
pop
and
sub
mov
in
pop
scas
movsl
xchg
mov
fcmovnb
cmp
clc
out
js
fwait
or
dec
push
lret
mov
outsl
test
insl
push
mov
fs
jns
mov
mov
push
lret
out
inc
xchg
sub
jnp
and
dec
add
xlat
sahf
mov
mov
jnp
aad
fstps
test
iret
and
jbe
sahf
loopne
stos
or
fwait
daa
jle
mov
test
mov
adc
jbe
ljmp
outsb
xlat
loop
ljmp
addl
push
mov
add
xchg
ret
in
mov
or
out
dec
movsb
xor
in
in
into
sbb
lods
push
jbe
mov
adc
out
vfnmsub231pd
mov
mov
adc
lock
loope
add
mov
fdivl
mov
aad
out
ret
out
mov
loop
icebp
loopne
xor
daa
int3
adc
or
pop
inc
sub
stos
inc
les
lahf
push
js
adc
or
into
lret
fldt
sarb
ja
mov
inc
push
push
loope
fwait
popf
xor
xchg
mov
and
mov
sahf
out
out
data16
clc
cmpsl
mov
sbb
add
mov
mov
fisubl
mov
mov
stos
test
lret
stos
sub
sbb
sub
test
mov
lret
mov
decb
fdivrl
jo
insl
iret
loopne
pop
sbb
and
mov
bound
test
fidivl
fimull
rorb
sti
pushf
mov
lods
push
repz
sahf
out
adc
jmp
lcall
xor
mov
rcr
iret
mov
loop
outsb
cmp
aam
imulb
mov
dec
je
mov
loope
divb
fmul
movsb
xchg
mov
stc
imul
mov
lods
xchg
das
int3
or
movsb
adc
int3
mov
flds
mov
and
sarb
lret
mov
ss
mov
sbb
fldt
mov
lret
lods
int3
scas
fmull
mov
iret
bound
push
push
movsl
fdivrl
mov
lret
mov
mov
fsubrs
lods
pop
add
mov
sbb
mov
mov
pop
and
popf
mov
stos
and
fs
mov
push
sti
ss
outsb
ficomps
or
inc
jl
push
insl
mov
jmp
les
pop
call
mov
repnz
push
shrb
stos
jns
enter
dec
dec
cld
xchg
outsb
arpl
ret
mov
test
sbb
cmpb
mov
lret
jl
data16
shlb
aam
jnp
loop
sbb
out
loope
leave
in
fmul
pop
mov
iret
mov
or
stos
fisubs
outsl
lahf
cmp
mov
adc
cmpsl
out
lods
icebp
jno
push
fwait
dec
int
loope
faddp
lds
orl
shl
lods
cmp
test
adc
aam
or
mov
fwait
adc
jmp
shl
cli
cmp
cmp
insb
xchg
pusha
into
mov
out
hlt
shlb
stos
rorb
fidivs
cmpsl
jmp
repz
inc
pop
icebp
lahf
arpl
andl
pop
ficompl
push
mov
jnp
aad
inc
add
fsub
mov
lret
xor
mov
repz
out
mov
sub
ret
imul
push
test
push
sbb
pop
loopne
movsb
leave
xchg
xor
enter
mov
jle
inc
pop
mov
or
sahf
lods
mov
xchg
and
mov
mov
mov
stos
fcomip
mov
incb
inc
mov
andb
inc
aad
add
jmp
mov
test
sbb
ret
xlat
iret
mov
fcmovb
inc
fwait
cmc
and
insl
shl
inc
int3
push
sub
mov
sub
aam
push
popf
push
ret
cli
sti
jp
mov
test
lods
mov
mov
ret
mov
nop
aam
cmp
pushf
push
cli
cmpsl
sub
out
mov
ret
enter
jmp
mov
lods
jp
loope
ret
mov
and
fcmovnb
jecxz
mov
mov
mov
jg
fs
mov
jns
lock
int3
xchg
adc
cmp
rcr
mov
jge
gs
movsb
leave
icebp
rclb
movsb
jne
shlb
mov
rolb
xchg
test
push
mov
xchg
fdivrl
mov
mov
xchg
hlt
mov
hlt
outsl
inc
shlb
rolb
jo
hlt
cmp
fldl
or
push
or
fcompl
fucomp
xor
inc
push
sub
jae
push
mov
cmpsl
les
int3
test
test
or
inc
into
mov
mov
aam
in
stos
mov
mov
dec
das
mov
jb
lods
mov
mov
jmp
mov
aam
divb
gs
repz
scas
push
out
enter
stos
pushf
fcompl
lods
pop
adc
mov
lock
into
jae
cmp
popf
inc
cmp
xchg
shrl
outsl
xchg
popf
and
mov
dec
mov
bswap
loope
out
leave
and
fldt
je
call
sarl
xchg
push
jmp
adc
aam
repz
mov
fisubs
movsb
int
inc
loopne
jb
test
or
ljmp
push
mov
loope
lds
push
sbb
sbb
adc
sub
push
mov
hlt
sbb
or
mov
loop
jmp
call
sahf
test
mov
mov
sbbl
lods
scas
test
int
xchg
sbb
and
rcrb
jmp
shrl
test
movsl
sti
fisttpl
jmp
mov
push
shll
dec
leave
ljmp
sahf
movsb
scas
and
cld
stos
or
mov
xchg
inc
movsl
adc
fcmovbe
xlat
mov
rep
fisubs
add
dec
push
dec
ret
loope
shll
mov
int3
lds
stos
mov
aad
xlat
insl
jns
es
sbb
out
mov
mov
test
lret
mov
aaa
mov
ror
xor
push
fcoms
loope
stos
out
enter
andb
repz
daa
pusha
sbb
add
adc
int3
pop
lcall
repnz
cld
leave
iret
stos
xchg
call
push
or
mov
fs
test
int
sbb
fnstenv
xchg
add
ret
lret
out
int3
sub
out
scas
adc
jb
aam
scas
mov
les
popf
ljmp
scas
lcall
adc
fwait
push
rcrb
mov
fucompp
push
out
cmc
mov
dec
adc
fisttpl
test
mov
stos
loopne
out
sub
lret
fcmovb
int3
shlb
lods
jbe
movntq
out
mov
stos
int
fdivrs
aam
xchg
mov
test
sub
out
fcmovu
leave
adc
ljmp
in
mov
mov
mov
int
lock
sbb
mov
jae
loope
sub
adc
shl
mov
push
dec
scas
test
shrb
mov
das
sbb
adc
cmp
add
inc
fwait
mov
or
fldt
fcoml
mov
pushf
imul
stos
mov
pop
xchg
fdivl
shll
mov
adcb
aam
orb
call
int
scas
fnstcw
sbb
fidivrl
mov
fcmovu
popa
in
ror
ret
mov
add
mov
cmp
addb
mov
cld
push
sbb
out
push
or
fwait
adc
mov
mov
roll
test
mov
stos
or
mov
call
add
movsb
cli
or
mov
mov
in
mov
daa
fxch
adc
rcrb
add
dec
ffreep
shll
ljmp
ss
mov
bound
enter
sti
int3
sti
stc
or
cld
xchg
mov
xchg
push
repz
stos
cmpsl
fcmovnu
scas
mov
scas
test
mov
ret
lret
mov
pusha
mov
jmp
mov
or
adc
push
ljmp
lods
test
push
aam
pop
cld
rcrb
push
into
out
or
ljmp
sub
mov
cld
mov
mov
pushf
leave
fisubrl
ds
mov
fidivrs
test
int3
cmp
sti
dec
adc
js
lock
aad
mov
adc
pop
add
ret
mov
dec
lret
lcall
cli
sbb
ljmp
test
loopne
dec
jne
hlt
xor
repz
in
aaa
and
stos
into
and
mov
sahf
sbb
adc
aas
jo
aad
mov
ror
adc
call
jns
push
mov
rcll
scas
cmp
test
rcll
mov
xchg
in
leave
ss
mov
cmp
ljmp
scas
mov
pushf
lret
lret
jmp
iret
mov
insb
mov
mov
ljmp
mov
mov
stos
shl
lret
sub
aas
or
ljmp
xchg
repz
insl
dec
fucomp
mov
test
loop
lods
ror
cld
test
fidivrs
xchg
in
mov
addr16
lods
fmul
fmull
fwait
mov
repz
loop
mov
enter
inc
mov
lods
mov
lods
add
cmp
repnz
cmpsb
mov
rcr
addr16
mov
inc
out
dec
jmp
mov
icebp
lds
lret
sbb
push
je
imull
mov
jmp
addr16
mov
loopne
addr16
sahf
shrl
test
dec
out
enter
insl
inc
repz
das
and
jmp
lahf
sub
lea
fcomp
repnz
fiaddl
fmulp
shl
iret
xor
jnp
in
into
mov
pop
mov
rcl
bound
fsubrl
ja
mov
not
mov
adc
adc
dec
lret
pushf
mov
sahf
xlat
aam
fabs
mov
lock
negb
jecxz
loopne
inc
adc
fstl
cmp
ja
movsl
jle
les
sbb
into
sub
xor
jnp
mov
movsb
mov
fcoml
movsl
lds
sbb
mov
adc
cmpl
lret
adc
in
sar
xlat
adc
mov
add
push
cmpsl
jle
enter
mov
out
adc
out
aad
lds
pushf
lret
ljmp
mov
adc
inc
sbb
mov
cmp
lods
out
scas
sarb
lret
xchg
aam
mov
lret
popf
adc
lret
loope
fsub
movsl
int
push
sahf
out
les
aaa
mov
out
inc
or
test
mov
xor
enter
sub
fistpll
cmp
sar
movsb
mov
sarl
sbb
adc
pushf
fcompl
fldt
loop
lds
out
mulb
adc
mov
loopne
mov
jmp
nop
add
test
jge
in
popf
fisubl
orl
cmp
neg
clc
mov
loope
jmp
mov
mov
ss
loope
and
sbb
loop
shlb
int3
mov
aad
into
test
fwait
iret
les
out
int3
inc
or
xchg
arpl
mov
or
add
mov
lret
loop
cmpsl
and
test
movsb
fiadds
scas
data16
testb
push
imul
push
popf
out
test
mov
enter
dec
inc
xor
and
daa
aas
psubb
ljmp
aam
test
lret
cmp
inc
mov
gs
int3
lock
addr16
shll
adc
mov
fnstenv
jae
xchg
jle
push
dec
jns
in
lds
pop
sahf
lret
mov
lods
fs
pushf
les
mov
lods
sbbl
mov
xor
push
xor
not
mov
iret
fdivl
aam
cmp
adc
iret
loope
aad
stos
mov
xchg
fisttpll
mov
pushf
adc
pushf
mov
jmp
mov
adc
aam
lret
test
das
test
lods
sarl
mov
push
jecxz
mov
mov
lock
cmp
mov
aam
stos
mov
and
inc
adc
call
leave
xchg
xor
sarl
sbb
test
fcompl
test
rclb
cmp
fldenv
push
scas
mov
stos
enter
mov
lds
popf
ror
orb
pop
mov
int3
ror
popf
mov
pop
test
mov
pop
in
xor
mov
shll
fisubrl
mov
or
lock
xor
or
add
mov
call
mov
jp
das
test
fst
daa
lock
mov
lock
das
popf
pop
daa
in
xchg
and
bswap
xlat
test
movsl
mov
aad
dec
mov
sbb
xor
mov
sbb
shl
sub
shll
rorb
lods
lret
or
scas
rolb
pop
jg
dec
fwait
pop
mov
mov
lret
mov
mov
sbb
es
sub
cmpsb
mov
sarl
ljmp
mov
cmp
mov
push
scas
cs
test
mov
call
fcomps
fcmovu
clc
into
insl
in
mov
bound
lods
xchg
lods
scas
shrb
rolb
sahf
push
test
pop
or
sahf
into
mov
or
mov
sbb
cmc
int
sahf
iret
adc
cmpsl
push
lds
cmp
int3
dec
cmp
mov
mov
mov
lret
dec
das
loop
mov
push
mov
js
jmp
out
int3
cmpsl
andb
aad
insb
out
dec
repnz
out
fsub
sub
nop
sub
and
fwait
mov
pushf
out
sub
sub
mov
ret
xlat
sub
test
cmp
enter
lret
mov
mov
std
or
mov
mov
sarl
fisubrl
mov
pop
aam
xchg
sub
mov
scas
ds
jp
mov
out
stos
in
bound
lds
cmpsl
aam
movsb
jb
lods
mov
insb
imul
mov
in
push
sbb
xchg
loope
inc
mov
xchg
icebp
jo
nop
movsb
pop
int3
sbb
pop
mov
push
dec
sub
jmp
hlt
addb
mov
xchg
lods
shll
stos
or
aam
jne
mov
mov
scas
stos
or
mov
jb
out
iret
lret
scas
mov
stos
das
cli
mov
mov
mov
stos
popf
into
pusha
int3
clc
lret
mov
lock
jmp
push
shll
push
sahf
fwait
push
call
scas
mov
fst
popf
dec
pop
movsl
pop
and
mov
jl
xor
pop
stos
adc
lret
jecxz
ret
lea
pushf
jb
cmpl
out
xor
mov
loope
ljmp
xchg
jecxz
int
call
in
mov
stos
lret
aam
fisubrs
into
bound
test
jg
cmpb
sbb
enter
jne
scas
rcrl
leave
push
loopne
mov
fdivs
push
mov
ffreep
mov
fdiv
and
cmp
ret
mov
iret
gs
aam
sbbb
xchg
xchg
sub
pop
lret
popf
not
mov
daa
cltd
and
mov
fsubrs
lret
scas
popf
xchg
jecxz
divb
mov
mov
mov
lcall
movsb
ss
out
mov
cli
mov
js
push
lret
fadd
das
mov
aad
xchg
jmp
ret
cltd
ret
les
into
jecxz
call
dec
xchg
mov
sub
cmpsl
cld
scas
or
rcrb
int3
mov
jo
sub
mov
xlat
mov
push
int3
insb
test
jl
in
cli
ficomps
lret
xchg
out
jne
xchg
xchg
ss
clc
push
or
test
loope
fs
call
sarl
mov
fsubrl
mov
pop
xchg
divb
sub
mov
xchg
sahf
test
dec
int
xorl
or
rcr
fdivrs
test
sti
pushf
les
lret
lahf
repnz
rol
and
aaa
and
fnstcw
adc
into
mov
mov
sbb
inc
inc
push
sub
shll
sbb
mov
mov
adc
call
popf
vmaskmovdqu
icebp
idivl
out
sub
test
pop
hlt
jb
int
dec
neg
lods
or
pop
loop
fidivl
jnp
fsubl
jg
je
call
enter
cmp
lret
add
jbe
cmpsb
fildl
lret
fwait
rcrb
ljmp
cmpsl
test
add
jo
clc
popa
adc
sti
repz
lods
hlt
out
jecxz
fstl
aad
sahf
adc
into
inc
adc
out
daa
cli
sbb
ljmp
inc
sub
or
test
mov
inc
or
mov
mov
repz
aad
cwtl
mov
mov
adc
scas
shlb
aam
pop
out
lret
iret
lret
mov
clc
fstpt
xchg
enter
mov
movsl
fstl
pusha
sti
in
adc
ljmp
shl
das
int3
push
mov
fmull
dec
add
adc
popf
mov
out
scas
jb
cs
inc
cmp
gs
loope,pn
adc
lret
push
stos
shl
mov
dec
mov
test
fcmovnb
in
sub
sub
stos
lret
imul
ret
ficoms
fistpl
rorl
dec
outsb
mov
sub
cmp
sub
loop
imull
mov
ret
and
cmpsl
fcmovnbe
pop
cmp
xor
or
mov
and
add
xchg
ljmp
ret
aad
repz
mov
cld
lds
sbb
xchg
scas
adc
xchg
ljmp
dec
loop
mov
repz
bound
mov
lahf
popa
fstps
xchg
adc
int3
jle
lret
mov
dec
insb
stos
lahf
mov
test
shlb
mov
add
enter
popf
mov
and
inc
lds
iret
scas
mov
mov
mov
fcoml
jb
repz
pop
scas
repz
fwait
lret
push
lret
rcl
xchg
mov
call
ffree
xor
fidivl
ret
mov
mov
mov
dec
cmp
jp
xchg
and
mov
movsb
adc
mov
xlat
push
sti
adc
loope
into
rcrb
out
movsl
sbb
xchg
lds
lret
mov
pminub
cmpsl
movsb
scas
fiadds
mov
cld
push
or
mov
mov
das
jg
loopne
mov
adc
and
repnz
push
and
les
scas
pop
rolb
sbb
movsb
insl
mov
mov
aam
xchg
adc
stos
xlat
xchg
cltd
lea
lods
mov
ror
push
fnstcw
repz
or
push
imul
xchg
int3
jle
jl
jmp
movsb
stos
out
leave
rcrb
loopne
data16
sbb
jmp
or
xchg
mov
fwait
test
stos
dec
pop
cmp
imul
movsb
dec
sbb
and
lahf
xchg
scas
mov
jno
imul
enter
pushf
lods
mov
into
leave
lret
xchg
out
lds
cmp
leave
mov
popf
push
pushf
mov
ljmp
dec
out
mov
xchg
sub
or
sbb
pushf
popa
sbb
rcrl
cmpsl
inc
jmp
punpckldq
mov
bound
fsubrl
andnps
scas
bound
aaa
dec
movsl
sar
mov
mov
or
aam
push
cmp
iret
lods
and
jbe
push
aaa
stos
jle
aam
jo
ror
or
fndisi(8087
stos
leave
lods
fcomi
sbb
data16
jbe
mov
mulb
mov
ficompl
adc
mov
mov
mov
inc
dec
push
mov
pop
stos
jmp
dec
lea
test
roll
adc
stos
shrb
into
fwait
lods
sbb
addb
movsl
fbld
in
leave
fstl
das
dec
mov
shll
loope
repnz
lahf
movsb
shlb
lret
aad
sub
sub
out
mov
sbb
rol
mov
lret
add
movsb
outsb
scas
add
cmp
mov
subl
jb
mov
adc
stc
notb
adc
pushf
adc
push
insl
movsb
pushf
bound
out
fcomps
scas
stos
fcoml
adc
lods
mov
jmp
cmp
clc
mov
testb
jno
jmp
or
ljmp
scas
jmp
sahf
aas
mov
fsubrs
mov
imull
push
mov
bound
jmp
stos
push
mov
out
lea
mov
mov
mov
faddp
lock
call
xchg
add
lret
popf
adc
mov
stos
push
jmp
sub
rol
push
dec
loop
fstpt
repnz
test
mov
es
mov
mov
in
adc
or
push
xchg
rcrb
ficoms
int3
stos
pop
out
mov
leave
push
mov
lods
mov
lds
xchg
mov
jl
mov
call
adc
scas
mov
insl
push
add
jns
movnti
and
arpl
sub
stos
fsubr
lret
insl
enter
mov
xchg
mov
test
into
mov
fdivrl
rorl
inc
lret
mov
shll
mov
daa
addr16
and
xorl
outsl
xor
cmpsl
sarb
fstps
movsl
lds
lea
mov
repnz
addr16
push
xchg
out
mov
xor
stos
test
and
mov
ret
andl
sahf
cmp
stos
roll
enter
ret
stos
subb
scas
mov
insl
cmp
lret
sub
ja
icebp
jp
repz
lock
sti
mov
ret
mov
jo
mov
pop
movsl
mov
leave
xchg
jbe
mov
fsubs
test
inc
mov
int
and
mov
mov
addr16
mov
repz
cmc
mov
mov
out
fwait
ret
in
inc
mov
repz
ss
jmp
mov
movsl
loop
mov
bound
mov
fwait
pushf
fisttpl
mov
aad
ljmp
fidivl
int
mov
loop
mov
add
push
mov
mov
stos
mov
jnp
dec
cli
mov
aam
enter
ds
int3
xor
call
sahf
iret
pop
daa
push
push
push
lret
sbb
mov
pop
popf
lcall
out
lods
and
mov
repz
lods
xor
xor
push
lret
rcr
sub
rcr
push
shll
inc
mov
mov
sarb
fidivrs
cld
popf
and
jp
dec
movsl
sti
fwait
xor
sahf
cmc
fdivrs
loopne
les
lret
fnstenv
stos
int
sahf
or
mov
and
or
mov
inc
loope
dec
stos
popf
dec
cld
iret
cli
fwait
mov
mov
or
fs
popf
insl
mov
lds
xlat
adc
call
scas
add
mov
shrb
push
and
lods
sahf
push
leave
loope
and
stos
ret
es
int3
jp
int
repnz
fldcw
pop
xlat
lret
mov
mov
xor
shlb
jo
xor
mov
ljmp
mov
out
loop
cmp
adc
inc
or
push
data16
lret
fldenv
fimuls
mov
aad
add
clc
cwtl
mov
mov
cmpsl
sub
dec
inc
popf
lret
popf
sub
scas
sbb
fwait
stos
loop
out
loope
inc
mov
mov
ds
mov
sbbb
adc
mov
enter
sbb
iret
loope
cltd
push
pushf
mov
fisttpll
scas
dec
push
and
dec
mov
lods
clc
icebp
cmpsb
cvtpi2ps
lcall
outsl
lcall
adc
int3
out
jo
rcr
adc
mov
iret
scas
mov
xchg
out
sti
or
mov
and
scas
cmpsl
stos
rcrb
ret
fmul
out
jb
mov
loope
arpl
xchg
and
cmpsl
daa
lods
imul
mov
and
sub
push
jg
cmpsb
scas
or
ljmp
sbb
scas
adc
movsl
enter
rorb
xchg
lret
pop
jp
shll
add
cltd
mov
rclb
ljmp
cmpsb
mov
fnstsw
cmp
pop
mov
sahf
fucomi
ret
mov
cli
lods
loope
and
enter
mov
xor
fsubs
loop
mov
xlat
gs
mov
dec
or
add
cmpsb
pushf
ret
movsl
pop
popa
or
mov
cmp
sbb
sarb
fidivrl
stos
sub
nop
je
into
fistl
test
ljmp
call
ror
les
sub
xor
inc
adcl
mov
roll
stos
frstor
iret
mov
out
enter
lods
push
add
fwait
test
fxch
lods
stos
out
mov
adcb
xchg
arpl
mov
mov
xchg
dec
push
xchg
fwait
pop
lods
cltd
add
cmp
xor
mov
mov
ljmp
xlat
movsl
shl
or
lret
dec
orl
xchg
sahf
fstp
dec
sarl
scas
mov
stos
mov
rorl
movsl
mov
arpl
lods
mov
cltd
and
push
mov
mov
in
inc
fucom
fs
or
mov
lcall
sub
mov
pop
ljmp
cmpsl
mov
les
sbb
rep
fcmovnb
out
scas
push
popf
ljmp
mov
ror
fwait
dec
mov
push
or
lods
aam
mov
loope
icebp
xchg
sub
adc
frstor
mov
stos
lret
loop,pn
mov
mov
fwait
add
nop
ljmp
sbb
mov
out
or
scas
inc
insl
adc
sahf
repz
sbb
push
and
adc
cmp
adc
sarl
movsl
stos
fcmovu
in
mov
enter
and
loope
data16
in
adc
shll
adc
ret
sar
aad
push
test
mov
stos
lret
cmp
scas
sahf
mov
jl
jmp
inc
negl
fdivrs
mov
cmpsl
mov
je
inc
call
adc
imul
repz
dec
in
cmc
mov
and
ljmp
call
roll
sbb
into
mov
int3
aad
call
lcall
movsl
mov
sti
fisttpll
repz
mov
into
ret
lods
cld
leave
pushf
cmpsl
xor
out
ja
mov
jo
fldl
mov
movsb
enter
adc
cmp
loopne
fmuls
addr16
mov
xchg
pop
dec
adc
dec
jae
xor
filds
iret
enter
jp
lock
int
jbe
loopne
lods
adc
movsl
xlat
adc
loop
mov
lds
lahf
mov
and
sub
lret
cld
mov
int3
adc
ret
out
icebp
pop
icebp
icebp
shlb
cmpsl
fchs
int3
mov
in
out
daa
lahf
test
popa
insl
inc
iret
ljmp
mov
in
int3
aam
xor
bnd
push
in
stos
arpl
inc
out
clc
mov
xchg
push
mov
lock
in
or
jl
mov
and
lds
loope
mov
shlb
dec
dec
sbb
enter
mov
insl
xor
lods
shl
mov
leave
sub
shl
mov
sbb
pushf
int
cmp
cs
test
int3
lret
add
inc
lods
jno
popf
outsl
push
int3
push
into
sub
leave
lds
lcall
adc
mov
fcoml
inc
int3
cmp
jbe
add
mov
mov
mov
das
sbb
or
mov
xchg
xlat
scas
scas
fcmove
xor
loop
mov
fidivrs
scas
shl
popf
out
loop
out
sahf
or
leave
fmull
scas
fwait
and
lcall
adc
ret
xchg
popf
jmp
jg
xchg
jg
rolb
cmc
sub
daa
hlt
dec
add
inc
fstps
mov
out
sub
mov
and
mov
sub
fidivrl
out
in
xchg
mov
dec
scas
fistpl
xor
mov
dec
mov
rol
sahf
loopne
pop
ret
inc
and
cmp
mov
faddl
cmpsb
je
ljmp
xlat
and
movsb
mov
mov
lds
out
mov
sub
jnp
cld
aad
mov
cld
mov
xlat
jecxz
test
jmp
out
mov
ret
jge
mov
mov
mov
xchg
xchg
out
lods
aas
push
mov
iret
pop
nop
fs
fcom
stos
mov
fmulp
jnp
sbb
loope
fcoml
rcrb
sarb
mov
lods
jmp
dec
fstpl
pop
arpl
sbb
lods
out
ret
stos
test
mov
dec
inc
adc
fisubl
ret
aad
bound
dec
mov
lret
xchg
jg
scas
adc
mov
fwait
inc
fsubrs
inc
out
mov
test
repz
sbb
or
sbb
xchg
mov
sbb
ljmp
popa
dec
ret
xchg
and
and
aam
add
push
pushf
int
pop
jo,pn
data16
sbb
mov
sub
inc
mov
les
scas
cmpsl
sti
shlb
popf
cltd
int3
out
shll
jne
push
lret
mov
jo
mov
into
dec
mov
sub
shlb
aad
stos
fisubl
fdivl
cmp
int
sbb
push
das
call
loop
mov
dec
out
xor
lret
imul
lds
sbb
pop
cmpsl
cmp
jmp
mov
mov
lahf
jo
jmp
lods
leave
ror
pushf
vmovlps
in
fdivr
adc
xorb
scas
out
or
scas
mov
or
rclb
cmc
mov
dec
les
loop
mov
movsb
sub
mov
and
andb
aam
mov
xchg
cmpsb
jno
icebp
jecxz
or
in
roll
and
frstor
or
push
out
and
push
orl
lds
test
scas
into
sub
dec
ret
scas
movsb
xor
es
mov
loope
mov
add
fsubr
movsl
out
scas
add
xchg
lahf
mov
fsubl
sbb
rep
sarb
jmp
jno
or
rorl
les
leave
mov
and
cmp
mov
les
jmp
or
scas
repz
fwait
popf
iret
repnz
and
fcmovu
mov
inc
dec
ficoml
shrl
loop
out
cld
xchg
push
mov
scas
cwtl
stos
xchg
mov
pop
repnz
test
inc
and
into
mov
inc
cmpsb
push
xchg
or
add
sahf
fildl
mov
pop
flds
loope
stos
pop
ljmp
dec
or
rcll
pushf
sarb
aaa
mov
ret
xlat
flds
xchg
pop
je
fucomip
or
cmp
stos
sub
inc
fwait
stos
iret
fisttpll
sub
scas
lret
cltd
jo,pn
jmp
lds
jecxz
mov
out
or
cld
push
or
movsb
dec
sbb
push
outsb
xchg
pop
popf
dec
and
pop
cltd
jge
dec
xor
xor
adc
movsb
fisubrl
fisttpl
inc
cld
add
rolb
mov
ret
stos
lds
sbb
shrl
int3
xlat
mov
popf
int3
and
push
clc
int3
lret
repnz
mov
stos
jne
scas
and
xchg
fdivr
stos
gs
mov
aad
pushf
es
out
int3
push
cmpsb
mov
ljmp
mov
out
xchg
xor
mov
leave
mov
aas
jmp
roll
sub
mov
scas
mov
mov
xor
mov
cmp
enter
lds
mov
cltd
loope
out
mov
sahf
adc
cmpsl
ss
orb
cli
faddp
mov
scas
mov
push
mov
and
jo
cmp
mov
push
jmp
jns
enter
or
stos
loop
inc
mov
xchg
sbb
ret
out
inc
xor
test
mov
xor
popl
ret
sbb
adc
fwait
lods
scas
stos
aam
mov
sbb
pushf
test
mov
stc
out
popf
mov
fadd
push
lret
bound
out
out
and
fistpl
aam
cwtl
xor
out
push
fisubl
push
dec
leave
xlat
xchg
mov
push
cld
xor
mov
lock
fsubp
lods
nop
insb
lods
aad
shrb
xor
fldt
popf
loope
int3
cmp
adc
int
int
mov
leave
fstps
iret
sbb
int
enter
xchg
pop
xchg
loope
pop
xor
jg
sub
fdivrs
loop
cmpb
notb
xchg
or
mov
mov
or
jp
out
int
or
cwtl
adc
sbbb
repz
nop
lods
lea
in
test
scas
aam
dec
inc
rcr
mov
ret
or
out
test
mov
shrb
iret
or
fcoml
lahf
push
jmp
mov
inc
rcrb
insb
mov
jmp
loop
fstp
out
fsubl
int3
pop
lods
stc
movsl
loope
loop
mov
adc
pusha
push
addr16
setne
leave
xchg
mov
ljmp
sbb
inc
cli
aad
mov
scas
repz
mov
xchg
loop
mov
shll
aad
popf
frstor
into
push
jmp
movsb
sarb
inc
mov
mov
aad
into
push
ret
rep
enter
adc
pop
popf
xlat
repz
cmc
lods
fxch
testl
aam
aad
xor
int3
loop
call
rcr
add
jp
movsb
int3
ss
cmpsl
stos
ss
ret
lahf
lret
fldcw
or
mov
popf
iret
das
loop
scas
push
mov
test
call
aas
xchg
jmp
mov
sbb
mov
dec
das
mov
stc
adc
int
fimull
xchg
ret
xor
jae
jb
lods
pushf
mov
test
mov
fucom
mov
mov
xor
mov
xchg
leave
fisttpl
addr16
ficoms
lret
mov
in
mov
jbe
mov
mov
stos
out
mov
movsb
fsubl
nop
jmp
lds
fucomp
cmpsl
mov
sub
imulb
movsl
sahf
mov
lret
aam
xchg
add
adc
push
test
pop
scas
int3
mov
xchg
cmp
adc
fildl
mov
into
aam
or
jmp
mov
les
leave
and
xor
sbb
movsl
movsl
and
push
fcom
sahf
cmp
fcmovbe
xchg
or
loope
sbb
rcl
mov
xchg
inc
jne
xchg
sbb
adc
push
out
fcoml
adc
fsts
cmp
adc
pop
loop
sahf
movsl
aaa
lahf
sbb
cwtl
jl
xchg
ficompl
ffree
out
test
filds
ljmp
fisubrl
frstor
cwtl
popa
dec
loopne
leave
sahf
mov
ret
xchg
imulb
test
lods
dec
enter
test
and
lret
out
lds
or
xor
jbe
leave
fidivrs
fnsave
pop
mov
ficompl
mov
sub
dec
leave
shrb
jmp
fisttpl
mov
sub
ret
repnz
popf
mov
xchg
xchg
popf
jb
stos
mov
out
ds
cwtl
mov
cmp
or
mov
adc
pop
adc
mov
dec
movsl
cmpsl
mov
ret
iret
pop
mov
sbb
mov
lods
dec
adc
sahf
mov
xchg
loop
aad
movsl
repz
cli
lret
lret
pextrw
mov
ljmp
mov
mov
adc
mov
shrb
loop
mov
mov
fwait
mov
out
lock
shr
lods
bound
andl
mov
int
mov
jmp
add
dec
and
mov
lods
shlb
bsf
jmp
ret
mov
addb
loop
pop
lea
int
and
daa
pop
fdivl
add
fnsave
or
sahf
popf
lods
sbb
dec
xchg
dec
mov
or
stos
ret
ljmp
ret
adc
fisubrl
lds
mov
loope
mov
call
mov
movsb
lods
pop
fcmovnu
iret
xchg
fnstsw
into
and
shll
enter
repnz
sahf
sti
lods
repz
insl
or
fs
lret
cmp
imul
repnz
out
mov
lret
sub
inc
subb
enter
sub
lods
ret
mov
mov
rcll
sti
push
or
stos
loope
pop
push
xchg
sbb
iret
aas
cli
int
popf
les
cmpb
push
push
aad
add
xor
movsl
leave
scas
push
push
repz
lods
stos
pop
dec
mov
mov
jp
lods
lret
daa
scas
adc
jge
lret
mov
and
and
test
enter
adc
adc
sub
xchg
sub
scas
stos
movsb
mul
fucomi
clc
pop
adc
lods
xchg
mov
pop
test
cli
mov
movsb
adc
cmp
sbbb
fbstp
movsl
shl
cltd
cmpsl
pusha
or
adc
fcomps
ffree
aam
enter
mov
push
rep
fldcw
rcrb
test
mov
rcl
push
inc
sbb
push
pop
popl
insb
ja
adc
repz
fcmovb
fistpll
or
insl
les
scas
mov
rorb
repz
into
fs
jne
mov
push
daa
inc
sub
xchg
push
mov
popf
ror
mov
pop
daa
in
shrl
arpl
cmc
mov
mov
lods
xor
scas
pop
bound
stos
aam
mov
and
loop
jmp
in
fs
inc
or
dec
lcall
aad
xchg
inc
mov
mov
ror
xlat
out
push
jmp
fsubrs
pop
xor
xchg
je
scas
fld
sub
add
mov
movsb
lahf
lret
xor
aaa
loop
aam
xchg
ret
mov
arpl
out
lret
ljmp
aam
fmulp
pushf
mov
mov
ret
jp
clts
ljmp
sbbb
xlat
cld
fwait
lret
and
shrb
in
mov
aad
mov
mov
rcr
bound
adc
aad
push
add
ljmp
repz
cmpb
sahf
xchg
popf
dec
mov
dec
stos
xlat
popa
adc
fdivl
or
int3
xchg
adc
leave
nop
int
lret
test
mov
loop
shlb
jb
stc
and
fldlg2
mov
shl
iret
mov
stos
push
sub
lods
pop
xchg
inc
loope
fidivrl
xlat
mov
xor
and
mov
jae
mov
jb
shl
sarl
loop
add
shrb
mov
cs
movsb
ljmp
sahf
push
imul
mov
fidivrs
cltd
and
into
int
mov
mov
adc
stos
scas
sahf
jb
mov
xlat
ljmp
mov
sbb
mov
sub
movsb
dec
test
mov
dec
adc
mov
aam
sahf
lret
dec
movsl
lock
dec
jmp
rcl
inc
push
dec
xchg
out
test
out
lods
stos
loop
xor
scas
out
lahf
and
xchg
mov
dec
inc
lahf
lods
jae
icebp
add
and
sahf
fcmovnb
mov
call
mov
icebp
imul
adc
fadd
scas
loop
movsb
sub
push
enter
or
dec
sbb
popf
sahf
adc
rol
xor
stos
mov
fidivl
mov
lock
ss
fsubrl
mov
mov
in
mov
xchg
cmovge
push
and
mov
in
xor
mov
inc
out
popf
fwait
adc
mov
mov
xchg
rol
mov
iret
sahf
popf
inc
mov
scas
xchg
in
rcrl
mov
lret
cmp
into
mov
mov
sub
mov
xchg
dec
jmp
inc
inc
scas
into
iret
divb
idivb
xchg
push
fildl
add
div
aam
jmp
mov
test
add
lods
jmp
adc
lods
mov
hlt
bound
mov
clc
in
fistps
ljmp
and
outsl
popf
fs
or
fsubrl
sahf
cmpsb
and
and
dec
mov
mov
aaa
push
movsl
mov
mov
pushf
mov
add
fwait
movsl
mov
mov
fmull
repz
jl
lea
mov
or
inc
sub
inc
sub
loope
icebp
mov
ficomps
mov
fmuls
out
call
cmpsl
sub
sahf
test
push
imul
fcomps
in
sbb
movsb
mov
sbb
lods
loope
leave
xlat
call
les
inc
int
sub
test
cmp
pusha
push
ljmp
scas
icebp
mov
sbb
mov
mov
and
popf
xchg
push
movsl
cld
iret
lret
dec
leave
lods
cld
push
add
pop
xchg
lret
dec
or
mov
mov
sbb
rcr
pop
jmp
mov
adc
cmpsb
pushf
adcb
test
call
push
aam
test
dec
fnsave
int3
mov
xor
sub
loop
lret
mov
into
dec
pop
mov
xchg
fcmove
pop
sarl
add
scas
push
test
xchg
mov
pushf
adc
or
mov
movsb
cmp
clc
adc
xlat
sub
pop
jl
movsl
imul
stc
and
pop
out
fcmove
aam
outsl
mov
jp
stos
dec
stos
int
jl
rorl
aas
movsl
adc
or
mov
adc
repz
sbb
stos
and
iret
cmp
adc
int3
mov
es
fucomi
into
leave
push
xor
mov
lea
not
add
add
sub
xor
sahf
aad
xchg
ret
rorl
test
imul
jbe
out
fcomi
cmpsl
sbb
mov
loop
cmp
aas
lret
dec
int
fmull
into
lods
mov
fcmovb
sub
cmp
insl
pushf
mov
xor
and
xchg
roll
xor
rcl
out
movsb
out
jg
lret
fiaddl
sahf
lahf
add
lret
mov
stos
out
pop
scas
js
imul
dec
aaa
sbb
mov
faddl
pushf
daa
xor
mov
rcll
mov
loop
loop
xor
shrb
xor
dec
aad
pusha
xchg
mov
popf
stos
jne
mov
jle
pushf
faddp
mov
mov
loop
in
sub
out
sbb
lret
loope
repnz
add
xchg
repz
or
and
fidivs
shrb
daa
aaa
out
xchg
fcoms
mov
fwait
lods
lret
mull
dec
popf
mov
cmc
shll
js
jg
sti
or
int
and
push
dec
lcall
rcll
mov
lds
ror
fidivrl
loope
mov
mov
dec
outsl
fstp
jns
divb
cwtl
mov
loope
in
jmp
or
sbb
pop
fcmovnbe
subb
ja
mov
scas
xchg
data16
jb
rol
mov
test
fisubs
fnstsw
ljmp
adc
test
mov
out
jne
rcll
movsb
fsubp
lods
stos
cmpb
jecxz
scas
rcr
movsb
movsl
fstpl
sub
mov
fadd
mov
arpl
jns
xchg
in
ret
popf
mov
enter
movsb
int3
rcll
outsb
into
fdivs
xchg
popa
sub
mov
fxch
xchg
xchg
pop
lds
pop
mov
pushf
mov
cmpsb
mov
loopne
test
cmp
stos
xor
add
loop
stos
mov
sets
fadd
mov
out
test
mov
test
loope
fbld
add
add
mov
sub
test
cwtl
push
out
mov
rcrl
push
lods
out
int3
data16
dec
add
call
xchg
aam
ffree
sahf
mov
movsb
into
push
jb
repz
fld
fildl
or
fiaddl
lret
cmp
fsubrs
addb
mov
leave
xchg
int3
pushf
cmpsl
lods
sti
test
ret
ja
into
repnz
out
mov
xor
lods
add
and
push
cmc
lret
cld
jb
pop
mov
fcmovu
adc
mov
mov
sub
int
and
mov
shll
ds
sbb
shll
mov
xchg
add
loopne
add
enter
imul
add
sub
jae
mov
ficoms
pop
cmp
sbb
push
fistpl
movsb
pushf
lods
out
movsb
adc
repnz
jmp
int
adc
aad
mov
xor
xlat
fisttpll
pushf
lret
ljmp
rorl
pop
fistpll
mov
and
les
cmpsl
mov
pop
ss
add
fiaddl
adc
add
lcall
dec
sub
and
mov
fisubrs
ficoms
int3
sti
repz
in
call
cs
jmp
movl
mov
adc
test
mov
ret
cmpsl
mov
ret
lods
dec
inc
mov
pop
leave
fstpl
jecxz
sub
mov
dec
sub
rcr
jp
mov
addl
sar
fwait
lret
push
scas
lret
fidivs
pop
test
cli
pushf
rcr
push
stos
xor
adc
xlat
iret
and
jmp
cltd
imul
xchg
or
dec
jo
aam
mov
fwait
adc
bound
movsb
lret
ret
sahf
pushf
shlb
lret
lds
pop
adc
into
inc
stos
inc
push
movsb
xlat
sbb
out
mov
and
xor
les
test
into
sbb
add
xchg
dec
scas
sbb
and
mov
loope
mov
cwtl
es
rclb
mov
int3
sahf
mov
mov
fldcw
and
cmp
inc
insl
or
sbb
aad
pusha
pop
rcr
ljmp
dec
push
push
jne
aam
fs
xor
mov
leave
enter
xor
add
dec
out
aad
push
stos
mov
mov
xor
add
movsl
rcr
sbb
pusha
aad
jl
mov
mov
popa
xchg
mov
scas
jecxz
ljmp
out
mov
fiadds
gs
mov
push
adc
mov
bound
sbb
je
pop
orb
cmp
iret
inc
stos
dec
mov
test
xchg
mov
fcmovnbe
stos
add
jmp
mov
sub
arpl
outsl
sahf
mov
fldcw
mov
push
xchg
mov
je
scas
fmull
int
hlt
mov
data16
fsts
fmuls
lea
xchg
pop
mov
or
mov
or
jae
mov
ficompl
xchg
decb
loop
les
cmp
sub
sahf
scas
cmp
psrlw
leave
xlat
mov
adc
sbb
cmc
xlat
sub
mov
stos
mov
sti
lret
push
mov
mov
loope
jle
adc
stc
mov
fld1
push
out
or
out
sbb
pusha
push
shrl
icebp
adc
movsb
cs
movsb
dec
and
sar
shr
cmpsl
mov
popf
lds
movsl
int3
bound
mov
sub
aam
out
loop
mov
fidivrs
xlat
daa
adc
mov
iret
mov
into
test
lret
loop
femms
mov
fstps
shlb
mov
movsl
loope
xchg
xor
xorl
jb
frstor
enter
test
in
mov
sbb
mov
mov
jb
xor
lret
gs
cmpsl
pushf
cld
pop
cli
test
xlat
fnsave
shr
push
cwtl
ljmp
inc
mov
iret
mov
adcb
mov
fmull
mov
or
lods
into
cltd
outsb
cwtl
enter
fs
lret
fwait
ror
clc
mov
fldlg2
icebp
out
inc
out
dec
fwait
decb
dec
sub
mov
xor
popf
pop
ljmp
out
pushf
mov
sub
sbb
xchg
mov
test
sbb
enter
nop
xor
lods
loope
mov
call
pushf
mov
imul
mov
loop
repz
ficomps
or
mov
nop
mov
loop
xor
mov
push
popf
mov
aad
aam
lret
cmc
fidivrs
lcall
shll
adc
aam
fstpt
out
and
xor
enter
int3
iret
xchg
inc
sub
dec
fldcw
mov
fidivl
mov
movsl
mov
xchg
jl
add
enter
lret
rorl
dec
orb
mov
jp
movsl
into
pop
pushf
out
fmuls
pusha
pushf
lret
bound
mov
scas
mov
test
sahf
jne
mov
sub
imul
int3
stos
daa
pop
rep
call
mov
ficoml
fwait
jg
pop
mov
call
mov
xor
mov
adc
daa
rcr
mov
loope
loop
int3
mov
adc
test
out
call
sahf
iret
fabs
xor
lret
mov
leave
sahf
xchg
pop
mov
jp
add
pop
out
scas
dec
shrl
lret
and
lahf
jmp
xorb
sub
iret
mov
movsb
aam
sbb
int3
les
fidivrs
push
lods
jb
lret
lods
add
lahf
cld
mov
stos
sub
sahf
loope
negb
xchg
xchg
push
sti
test
in
scas
and
mov
mov
stos
xchg
les
ret
lret
popa
shll
movsl
fwait
pop
xchg
movsl
lret
fsubr
rorl
lods
popf
iret
sub
sub
stos
out
mov
cld
jo
stos
int
xchg
cltd
mov
leave
repz
ret
popf
arpl
sub
lods
dec
cpuid
scas
enter
mov
fmuls
lods
test
sbb
ror
mov
xchg
add
push
adc
mov
rcrb
mov
lods
xchg
push
cs
iret
bound
mov
inc
or
pop
sti
mov
ss
cwtl
ds
pop
sbb
push
push
xchg
mov
mov
out
mov
ljmp
fmulp
pop
mov
ror
cmp
or
sahf
cld
nop
or
stos
xchg
test
ss
fcomp
push
ret
jl
pop
popf
xchg
sub
push
mov
lods
sahf
adc
mov
sub
mov
pop
pop
ud1
mov
mov
call
jecxz
mov
faddp
mov
xor
push
frndint
into
sbb
call
in
movsb
lods
sub
loop
aam
ret
jmp
fldt
mov
shll
mov
pop
aad
ret
xchg
sbb
sahf
movsl
bound
add
out
fwait
dec
mov
repz
das
lret
fcmovu
sbb
fstps
adc
mov
popf
int
test
lfs
mov
mov
xlat
mov
int
iret
push
fsub
ficompl
jmp
xor
inc
andb
mov
bound
mov
or
xor
sti
enter
or
rclb
mov
sbb
js
scas
lret
repnz
test
sub
fdivrs
inc
lock
mov
mov
mov
sahf
ljmp
out
fmull
mov
sbb
mov
les
jmp
fst
fwait
inc
sbb
dec
or
lods
ss
aam
jo
sarl
xchg
insl
jl
loop
and
or
xlat
cmp
push
bound
mov
sarl
xor
lock
jae
out
pop
flds
inc
mov
xlat
xorb
inc
mov
leave
out
fstpt
lret
mov
negl
ret
jbe
jecxz
pushf
imul
lcall
movsb
mov
mov
and
daa
pop
aad
push
mov
xor
push
test
rep
fwait
xor
in
test
stos
xchg
mov
movsl
mov
mov
iret
rcrb
aad
lock
dec
leave
ljmp
mov
pop
rcll
ds
xor
jae
and
scas
enter
ljmp
pusha
adc
mov
fucomip
int3
lods
sub
test
into
jae
sti
lods
movsl
or
les
rcl
sahf
xor
cmp
call
aad
test
lret
cwtl
aaa
fsubr
pushf
movsl
push
xchg
mov
fisubrl
test
ret
or
insl
and
ss
fstps
or
mov
or
add
call
fisubl
jo
shlb
mov
lods
pushf
fdivrl
out
xchg
mov
movsl
add
stc
mov
stos
inc
fs
lret
dec
call
xlat
push
adc
mov
aaa
movsb
lret
lahf
pusha
xor
lods
jmp
push
rcrb
pushf
mov
or
sahf
mov
or
mov
ret
iret
fistpl
mov
fcomp
mov
mov
aam
pushf
jns
mov
mov
inc
scas
xchg
sbbb
pop
pop
movl
int
pop
out
and
stos
lret
iret
mov
mov
xor
pop
enter
scas
xchg
movsl
scas
lret
fidivrl
lods
aam
fmul
movups
loop
cmovle
lods
cld
lock
adc
movsl
stos
jns
pop
jg
lcall
clc
mov
ffree
out
mov
mov
out
sarl
repnz
clc
repz
es
test
cld
sar
shrb
in
mov
fcmove
xor
mov
xlat
mov
enter
fstps
rclb
int3
ljmp
iret
mov
mov
loopne
push
xor
jmp
mov
ffree
and
pop
mov
aad
mov
cmpsl
mov
movsb
inc
lods
cs
xchg
stos
lds
stos
sbb
fdivl
cld
leave
adc
dec
mov
nop
dec
mov
int
or
insb
pop
jmp
mov
push
out
test
call
dec
cs
or
sahf
add
mov
pushf
movsl
lahf
pusha
daa
neg
leave
rorl
ljmp
mov
mov
int
add
lods
fimull
movsl
ret
xchg
xor
scas
cwtl
out
sbb
adc
in
ss
mulb
add
cli
mov
pop
lock
or
cmp
xchg
icebp
les
mov
aam
fldcw
or
ljmp
push
mov
popa
test
mov
xchg
rcrl
loop
or
aam
scas
jb
mov
mov
jl
mov
nop
xchg
stos
mov
adc
fwait
int
inc
and
add
ljmp
outsb
loopne
sbb
push
inc
fsin
pusha
inc
add
inc
or
mov
xlat
push
ret
or
mov
mov
xor
mov
mov
xchg
mov
cmp
stos
push
loop
xchg
outsb
push
cmp
adc
fwait
mov
js
or
movsl
test
shll
mov
mov
dec
mov
js
fdivrl
dec
add
inc
mov
fsubs
mov
test
loop
jge
mov
dec
fidivs
mov
aad
aaa
jg
fwait
sbb
cli
or
pop
push
push
sub
adc
cmpsl
mov
loop
sbb
rolb
popf
leave
add
out
mov
add
lds
fcom
cmp
jg
adc
push
leave
mov
lods
adc
scas
movnti
int
cltd
into
fwait
lcall
jbe
flds
rcr
pop
scas
flds
call
ret
sub
bound
popa
inc
testb
jbe
mov
lds
int
addb
loop
popf
lret
cld
enter
mov
int3
mov
ja
sub
mov
rcrb
or
into
lret
sbb
jge
out
fmull
loope
data16
mov
mov
push
je
nop
sub
jo
cmp
dec
test
stos
test
mov
adc
push
sahf
or
mov
add
pop
repz
rcl
fwait
and
aam
enter
pushf
adc
loop
lods
mov
sahf
stos
mov
mov
movsb
jg
and
add
lods
fidivrl
lcall
jb
stos
lret
fst
arpl
rcr
add
scas
pop
jbe
lret
xor
test
stos
scas
cmp
imul
fdivp
cld
iret
ror
mov
in
out
rcrb
int
lret
add
cmp
js
sahf
jmp
push
mov
roll
arpl
iret
mov
xlat
fidivrl
out
int
sub
aas
lahf
fwait
ljmp
cltd
mov
adc
call
sbb
mov
fcomps
lock
push
loope
out
movsb
mov
dec
mov
add
adc
fs
fwait
in
jg
or
rcl
xor
lret
scas
iret
test
mov
popf
repnz
inc
lahf
xor
ret
arpl
fucom
lods
lods
bswap
mov
iret
sub
xchg
out
jecxz
fstps
loopne
xchg
scas
mov
cmc
stos
icebp
subl
sbb
mov
cmp
jbe
mov
stos
scas
lret
xchg
outsl
adc
loope
pop
adc
mov
mov
mov
jecxz
mov
aam
cmpsl
loop
test
and
mov
loop
sbb
sub
mov
lcall
lret
jle
jns
aad
jmp
popf
ljmp
inc
add
lcall
lea
out
cmp
dec
andl
or
iret
mov
outsb
or
int3
insb
fidivl
mov
sbb
into
mov
xchg
mov
orb
mov
pusha
mov
aad
or
xchg
mov
rorl
sub
test
pop
xor
mov
movsb
xlat
iret
fbld
test
loope
stos
mov
push
mov
test
call
lret
shl
lods
fiaddl
jp
inc
pop
or
imul
rclb
sahf
lods
fisubrl
rorb
mov
lds
movsb
int3
mov
cld
mov
inc
dec
xlat
sarl
repnz
inc
lock
loope
cmc
lret
mov
mov
jno
xchg
jmp
test
mov
shrl
loop
test
add
mov
divl
fdivr
test
scas
stc
cmp
rcr
aad
jp
aam
xchg
div
cld
inc
mov
repz
jmp
stos
xor
aaa
add
data16
aam
scas
mov
xor
ror
sarb
dec
and
xor
sahf
mov
fwait
mov
or
out
jbe
mov
js
cmp
lds
mov
xlat
loope
repz
mov
mull
jl
mov
in
pop
xchg
jp
shl
mov
lods
subl
lret
fnsave
lods
mov
dec
lds
frstor
bound
pop
jl
or
bound
lods
stos
mov
mov
cmpsb
loope
jmp
lods
hlt
int3
dec
mov
mov
fstp
add
out
jb
add
mov
sahf
pop
sti
in
fmull
test
sbb
stos
aam
fmulp
mov
lea
mov
fs
iret
loope
out
xlat
movsbl
sub
addb
lahf
ficoms
call
push
mov
mov
cmpsl
dec
push
scas
xor
mov
mov
mov
and
aad
mov
rcr
out
leave
scas
shrl
scas
mov
mov
mov
les
ljmp
cld
arpl
jo
aam
movsl
popf
lret
cmp
out
or
xchg
fldenv
aaa
mov
pushf
mov
ret
sub
mov
loope
sbb
push
in
fwait
xlat
enter
xchg
dec
fimull
mov
inc
dec
loop
scas
into
rclb
dec
into
xor
clc
cmp
mov
inc
add
fmul
popf
jle
mov
mov
stos
imul
testl
pop
jp
int3
mov
movsb
out
icebp
sbb
les
mov
cmc
outsb
xchg
imul
mov
lret
jmp
test
jns
sahf
or
int3
sub
mov
repnz
sahf
clc
movsb
call
push
xchg
sbb
mov
sub
mov
mov
pop
pushf
add
jmp
test
mov
ror
loop
repz
cwtl
cmp
adc
sahf
inc
fsubr
out
sbb
ret
fwait
or
mov
loop
pop
cmp
fcmovb
popf
lods
fcompl
mov
movsl
into
ret
fdivr
sub
scas
adc
enter
xchg
push
lock
clc
sbbb
pop
adc
test
mov
movsb
aad
insl
xchg
sub
mov
sbb
jo
mov
or
push
mov
fistpl
mov
jge
cmc
jecxz
hlt
sub
mov
inc
xorb
dec
fists
movsb
sahf
mov
and
js
fwait
adc
xchg
pop
sahf
test
outsl
ds
mov
bound
add
out
fcmovu
jns
sbb
mov
movsb
cmc
or
filds
sbb
cmc
out
shlb
stos
fldl
iret
xchg
fsubrs
in
mov
fisttpll
jae
lods
xor
int3
fnop
ret
scas
xchg
rorl
lods
lcall
fwait
mov
mov
in
iret
rorb
loop
jmp
adc
test
cmpsl
inc
bound
movsl
sbb
stc
in
mov
rcr
pop
es
repz
aam
mov
pop
or
mov
scas
push
xchg
loope
sahf
mov
sbb
loope
fcomi
ja
das
xor
test
test
mov
sbb
and
mov
ret
enter
adc
mov
popf
int
mov
loop
xor
aam
stos
fcmovnb
lods
out
mov
jmp
ljmp
into
xlat
adc
stos
jne
int3
enter
add
mov
scas
push
fwait
shl
call
stos
add
mov
pop
sti
loop
fnstenv
sub
imul
mov
mov
mov
fld
loope
repz
ja
or
aad
filds
pushf
test
out
fstpl
jle
aad
add
mov
and
mov
in
in
mov
cltd
ja
pop
je
rcrl
push
ret
push
mov
adc
fisttpll
mov
ret
cmp
scas
or
cltd
fstp
int3
mov
subb
ret
jno
fistpll
push
imul
call
test
movsb
stos
notb
call
dec
mov
fmulp
sahf
test
lret
test
mov
cltd
aam
xor
popf
mov
sub
fmuls
mov
loope
and
movsl
je
xor
fcmovnb
lret
dec
ret
and
fwait
mov
loopne
xlat
lods
into
loope
leave
repnz
sub
ret
lea
popf
iret
mov
out
enter
lret
out
into
xlat
in
fdivp
fwait
pop
xchg
mov
insl
xor
jg
loope
sub
pop
aad
outsb
iret
fld
lret
cltd
and
push
dec
aam
call
jp
test
ljmp
fadds
test
mov
int3
or
lods
sbb
lock
mov
mov
mov
mov
xor
mov
jbe
mov
stos
jb
fwait
lods
andb
into
mov
mov
xchg
nop
stos
sahf
rcll
inc
jno
setb
ret
mov
rolb
dec
push
cld
in
sub
fadds
insl
test
inc
mov
dec
out
jmp
dec
dec
mov
and
dec
ret
mov
pop
test
mov
sbb
lods
mov
inc
inc
sbb
add
aam
lahf
jl
mov
or
dec
xlat
xor
xchg
movsb
or
stos
or
inc
xchg
cli
inc
xchg
cmpsl
fdiv
shrl
or
mov
stos
jno
movsl
inc
sbb
jle
icebp
sti
adc
repz
inc
loop
mov
popf
stos
test
mov
mov
push
jo
loop
mov
lods
sub
fcomps
test
out
fsubrl
mov
repz
test
xchg
pushf
mov
push
push
dec
repz
mov
mov
mov
mov
dec
adc
mov
mov
mov
imul
rep
xchg
jbe
repnz
push
xor
andl
mov
scas
out
mov
sub
or
mov
fidivs
stos
mov
inc
xor
movsb
shlb
into
adc
leave
lret
and
dec
or
fwait
loop
into
lret
shrb
xchg
mov
jmp
insl
sahf
into
sti
ret
lret
test
xchg
mov
pop
fs
inc
jecxz
xchg
sbb
fdivrl
fimuls
fs
sub
xor
cmpsl
fsubrs
sbb
dec
mov
andb
pop
mov
xchg
cli
out
fwait
sbb
lret
ljmp
fnstcw
or
test
push
mov
popf
pop
or
push
sub
push
lret
mov
stos
jo
pop
cld
loope
and
dec
in
and
jb
out
lods
mov
loope
fsubs
insl
divb
add
mov
loop
mov
jge
insb
cli
mov
ljmp
gs
adc
test
repz
inc
dec
or
cld
and
test
test
mov
mov
int3
mov
out
lret
fstl
mov
cld
rolb
and
xchg
cmpsl
faddp
into
fisubrl
or
int
pushf
and
ds
sub
cmpsl
mov
aad
mov
test
fdivrs
into
test
lds
scas
test
popf
sbb
out
mov
push
fildll
ret
fdivrs
mov
rcr
fs
movsl
ret
xor
jne
push
sub
fstpl
rorl
sbb
push
les
int
pushf
sahf
mov
es
mov
adc
stos
jae
jb
movsl
or
or
push
mov
stos
cmpsb
cwtl
or
dec
ret
fstpl
xlat
rorl
lods
mov
test
mov
fs
popa
ds
cltd
xlat
scas
stos
mov
std
adc
mov
sub
mov
loopne
scas
sbb
lock
mov
ret
or
cmp
push
stos
les
push
add
rcrl
dec
jno
mov
pop
scas
mov
mov
enter
mov
ret
xor
xlat
dec
or
in
xor
enter
fistl
movsb
outsl
in
stos
test
pop
jle
inc
dec
rcr
inc
sti
jbe
in
lods
sub
movsb
mov
cld
pop
add
lods
int3
fcmove
inc
push
fstp
into
mov
cmpb
lret
ret
addr16
aam
lea
out
cmp
push
lds
xlat
iret
mov
jbe
mov
cmpsl
movsb
mov
xchg
mov
scas
lods
psrlw
mov
sub
dec
add
fcmovne
cs
cmpsl
mov
pushf
rol
mov
popf
pop
fxch
outsb
ds
inc
daa
in
mov
fxch
mov
pushf
lahf
mov
mov
es
loope
adc
pop
in
push
sahf
int3
sti
mov
ret
into
cltd
cmpxchg
loope
loop
out
les
int3
stos
ljmp
dec
adc
fwait
popf
jne
mov
lea
lret
and
stc
test
movsl
xor
mov
lret
mov
push
imul
movsl
stos
loope
ror
push
fisubl
call
or
sub
ja
and
jl
mov
int3
dec
xor
rcrb
mov
mov
jmp
mov
xorl
jp
fadd
fdivrl
mov
fidivrs
les
aam
push
fistpl
dec
push
lods
mov
or
pop
jbe
adc
lds
out
shll
and
mov
into
push
jmp
pop
adc
lods
test
mov
mov
and
push
and
sbb
sbb
ficoml
pushf
jne
movsb
xchg
je
or
push
or
stos
xchg
push
mov
out
lods
ret
shrl
mov
bsf
scas
mov
sahf
sbb
dec
insb
int
cmp
into
sahf
lds
aam
inc
sbb
ja
xchg
rcr
lods
push
test
mov
dec
add
repz
xacquire
aad
adc
hlt
mulb
mov
lods
out
scas
xor
inc
jg
lret
push
mov
outsb
mov
pop
adc
add
and
xor
or
mov
cltd
mov
dec
insb
iret
lods
popf
mov
mov
push
aam
adc
adc
adc
stc
lods
mov
data16
outsb
aas
notb
call
ds
popf
popa
lret
test
lret
loope
adcb
divl
mov
fstpt
aad
cmpsl
lods
flds
imul
cli
movsb
fcmove
xchg
or
les
or
arpl
dec
or
sar
loope
jl
sub
out
dec
repnz
mov
mov
sub
fmul
sub
daa
jb
fsubrl
and
fnsave
ret
test
mov
fcom
sub
ror
and
lret
mov
stos
test
movsb
mov
mov
sbb
sub
mov
inc
add
ja
jae
das
mov
jmp
out
out
fbld
clc
mov
int3
mov
mov
pushf
pop
mov
loope
cmc
xchg
sub
lret
mov
mov
ljmp
sbb
movsb
int3
mov
mov
in
icebp
dec
sbb
mov
cmpsl
mov
pop
adc
mov
stos
aad
mov
xchg
fstp
repnz
xchg
mov
test
dec
lret
push
test
lods
mov
lock
push
sbb
sub
les
flds
nop
and
ljmp
xlat
xor
loop
out
inc
add
xlat
mov
enter
xorb
lret
fwait
or
fwait
psllq
mov
stos
xlat
fwait
aam
repz
aam
mov
jmp
cwtl
fnstsw
mov
mov
dec
add
cmp
pusha
fimull
adc
fwait
jle
push
mov
test
nop
rcrl
test
mov
scas
scas
xor
cmp
mov
ret
and
movsb
dec
nop
loope
mov
mov
mov
mov
outsb
lret
in
dec
out
xlat
sub
mov
fbld
sbb
fsubrs
lret
fmulp
mov
test
ret
xchg
cmpsb
outsl
cs
cltd
popf
fistl
sti
mov
add
movsl
adc
and
push
movsl
shlb
ja
loope
clc
out
or
out
test
jmp
outsb
mov
adc
jp
pop
push
fxch
fst
lods
mov
repz
enter
fildl
mov
leave
lock
clc
mov
ror
ljmp
lock
adc
iret
mov
loop
loope
mov
hlt
xchg
stos
enter
stos
mov
rol
jmp
adc
enter
into
insb
mov
test
pop
sti
into
adc
mov
mov
pop
push
xchg
int
lods
les
push
rolb
mov
push
jle
int3
or
enter
fmull
pushf
mov
div
dec
xchg
adc
fnstenv
cmpsl
int
inc
js
insl
pop
loope
dec
lock
jb
mov
add
adc
sbb
dec
ret
xchg
adc
scas
popf
sarb
stc
out
scas
enter
mov
pushf
xlat
mov
repnz
fcmovb
ret
sahf
xchg
popf
mov
add
or
js
mov
movsb
mov
enter
mov
cmpsb
and
out
mov
ljmp
fldt
sahf
repz
out
out
aad
add
mov
ficoms
adc
scas
cmp
fmul
adc
mov
push
inc
sbb
in
xor
movsl
int
repnz
mov
not
pushf
repz
mov
out
icebp
inc
dec
xor
push
mov
sub
mov
sub
mov
movsl
pushf
push
call
xor
test
addb
pushf
cld
push
enter
shl
mov
enter
pop
aad
fldenv
jg
or
aam
insl
stos
loop
mov
fcmovnbe
sub
cmp
loop
popa
rorb
loopne
push
scas
jmp
bnd
popa
sbb
mov
mov
xchg
mov
sti
into
ljmp
xchg
mov
les
lret
xchg
xchg
cmpsb
pop
movsb
es
lds
or
fwait
mov
pusha
dec
xor
xchg
rcl
into
pushf
cmpsl
jmp
les
mov
push
mov
bound
rorb
int3
pop
outsl
aaa
fisubrs
dec
popf
jmp
test
sbb
int3
xlat
aad
daa
iret
fsubrl
mov
les
lret
cmpsl
loopne
pushf
cwtl
out
fwait
loop
adc
aad
xor
roll
cmp
repz
jns
sub
dec
lea
mov
loopne
cmpsl
xlat
jbe
lret
sbb
mov
movsb
out
rcll
lret
fidivs
in
mov
and
fsub
insb
in
imul
fwait
dec
stos
int3
repnz
xchg
out
scas
fcmove
sbb
mov
mov
adc
sub
mov
out
add
movsl
and
loop,pn
lret
loope
out
mov
idivl
dec
sti
bswap
mov
popf
fnstenv
in
cmpsb
dec
add
lods
leave
and
mov
pop
ror
lds
inc
push
mov
test
fcmove
mov
and
adc
fisubs
mov
mov
jbe
sbb
push
ret
mov
outsb
jne
mov
rcrb
int
add
lret
insb
xchg
test
int3
mov
popf
test
xchg
aad
lods
xor
lods
idivl
mov
int3
mov
mov
rcll
imul
loop
iret
xor
aam
push
in
mov
xor
xlat
mov
cmp
loop
mov
sub
and
aad
das
lock
in
stos
test
or
dec
inc
push
fdivs
fcmovnu
int
mov
les
fnstenv
loop
hlt
xchg
mov
repz
pushf
mov
xchg
fxch
enter
shll
mov
xchg
imull
cmpsb
cmp
icebp
lret
mov
out
or
addb
push
bnd
mov
or
adc
cmp
stos
js
sbb
ficoml
mov
xchg
out
andl
jns
addb
fwait
sahf
popf
add
lods
mov
mov
xchg
xchg
lds
mov
call
test
adc
mov
fcompl
pop
mov
rcrb
in
fidivrs
sub
int
clc
add
ljmp
popa
add
cmpsb
iret
fimuls
out
int3
into
mov
stos
mov
xchg
movsl
stos
dec
xchg
and
mov
push
lahf
cltd
ret
lea
mov
fbld
shlb
addb
dec
fst
imul
jns
not
mov
lods
pop
mov
ret
mov
add
popa
mov
aad
lods
cmpsl
sahf
mov
movsb
fstpt
repz
out
icebp
cs
loop
out
adc
movsb
fcompl
add
ss
lds
sbb
mov
lods
mov
into
stos
inc
xchg
mov
fldenv
outsl
sahf
dec
leave
scas
push
and
fistl
lret
mov
ljmp
and
fldt
sbbl
mov
enter
or
lods
dec
into
lahf
mov
dec
mov
push
insb
out
aas
inc
adc
xchg
inc
push
and
mov
sahf
dec
fcompl
cmpb
daa
movsb
cltd
fsubs
add
sbb
xor
rcrl
inc
mov
mov
enter
mov
jp
cmp
adc
stos
mov
sbb
call
and
adc
adc
arpl
je
lds
cmp
enter
lahf
mov
adc
cmpsl
cmp
bound
push
int3
pushf
or
lret
push
mov
out
jo
cmpsb
pushf
movsl
sub
jbe
cld
pop
gs
rol
mov
and
stos
out
jmp
rcr
jmp
dec
mov
addr16
xchg
lret
lret
fstps
clc
and
ret
test
popf
and
mov
adc
stos
mov
sti
fiaddl
adc
xlat
cmpsl
rcrl
movsl
sbb
int3
in
mov
dec
fidivrs
lds
adc
mov
fidivs
movsb
mov
call
jl
fildl
dec
mov
mov
stc
jl
mov
outsb
xchg
loope
loope
scas
cmp
movsb
iret
pushf
jb
fnstsw
mov
or
lret
stos
mov
fmuls
outsb
push
aaa
adc
lods
xlat
mov
in
mov
inc
mov
ficoml
sbb
push
fisubrs
mov
fwait
mov
lods
hlt
int3
mov
test
adc
mov
or
inc
mov
mov
aam
out
ljmp
lods
ljmp
pop
pushf
sti
push
push
lret
fs
adc
mov
stos
fwait
and
les
stos
mov
cmpsl
dec
fsubs
push
sbb
push
pop
lea
aam
fstpt
jecxz
and
fcmovb
pop
loop
dec
int3
mov
cld
test
dec
sub
stos
out
aas
sub
mov
mov
test
fimull
imul
pushf
push
aam
xor
in
ficomps
mov
sarb
add
fnstenv
stos
sbb
sbb
jmp
mov
sub
call
popf
lret
mov
pop
jg
mov
das
sbb
outsl
pop
in
inc
push
and
inc
mov
paddusw
mov
lods
sub
cmpsl
stos
scas
lret
mov
pop
inc
mov
addr16
fmulp
out
sbb
aad
fsubr
iret
push
cs
mov
lret
add
add
jl
leave
sbb
adc
mov
xlat
push
push
or
sbb
cmp
xlat
repz
lock
cmpsl
jmp
pushf
or
ljmp
push
push
aaa
fisttpl
xor
lret
fidivrl
jb
add
push
fcmovbe
sti
mov
cmp
mov
xchg
mov
pop
int
mov
movsl
loop
lods
or
dec
scas
pushf
sub
or
mov
aas
lahf
sti
int3
or
push
addl
mov
orl
cmpsb
lret
mov
cld
xchg
jo
ret
lahf
jl
push
rcrl
adcl
rcl
mov
adc
fsub
loopne
in
into
sahf
stos
test
lods
cltd
stos
cmp
mov
stos
fwait
cmpsb
fidivrs
idivl
outsb
adc
movsb
sbb
rolb
cli
jmp
xor
into
cmpsb
in
ret
cwtl
cmp
cmp
lock
jle
repz
leave
mov
aam
dec
adc
mov
xchg
xchg
mov
iret
mov
lret
bound
lret
popf
xchg
insb
lret
fcmove
lret
mov
mov
movsl
mov
fcmovne
dec
sbb
lods
lds
jmp
sahf
loope
in
xor
fcmovu
fiadds
enter
loop
aam
or
sarl
dec
sub
loop
movsl
fwait
ret
mov
outsl
int3
stos
loopne
mov
mov
mov
adc
rorl
ljmp
cmp
sub
rcrb
aam
or
rolb
cli
mov
mov
out
imul
adc
mov
push
ret
xchg
xlat
sbb
lahf
lea
ss
jne
shrl
movsb
shll
bound
loop
lret
int
out
sbb
out
pop
adc
test
into
mov
movsl
lds
rcll
popf
adc
adc
mov
stos
cld
fcmove
mov
push
mov
mov
inc
inc
xchg
mov
into
lds
sbb
int3
mov
sbb
sbb
andb
sbb
out
xor
pop
lret
fdivrl
stos
lret
test
lret
dec
jne
or
mov
jmp
mov
int3
dec
or
cmp
mov
jmp
fcmovne
mov
cmpsl
rol
lret
cmpsl
mov
in
fsubrl
inc
dec
movsl
sti
sbb
enter
shll
fldcw
dec
pop
test
test
into
mov
ds
pop
int
mov
lds
fcmovnbe
mov
insl
ds
loope
xchg
out
mov
mov
pop
pop
xor
iret
movsl
mov
dec
jo
loope
xor
mov
mov
mov
add
testl
out
mov
or
ret
scas
lret
push
aad
outsb
cmp
mov
popf
xchg
cli
call
lods
gs
mov
insb
mov
ret
popf
push
movsl
lahf
or
aam
xchg
mov
sbb
nop
adc
jns
mov
fsubrl
xchg
xlat
dec
xchg
das
cmc
sbb
les
je
rcrb
loope
out
adc
out
rclb
mov
pushf
cmp
cmpsl
xor
jb
mov
movsb
inc
sbb
fdivrs
adc
lea
mov
fsubs
into
in
mov
mov
int3
into
fwait
aam
pop
gs
sbb
lret
clc
loope
adc
jmp
lret
movsl
popf
pop
aam
sbb
lods
stos
shlb
sub
int3
lret
mov
aad
mov
inc
xchg
mov
jecxz
rorl
mov
mov
repz
sarl
push
shll
add
mov
and
mov
fdivp
test
es
mov
mov
stos
mov
xlat
and
xor
subb
stos
ret
mov
cmp
test
call
flds
mov
mov
and
insl
inc
ljmp
mov
out
stos
out
fsubrs
shl
dec
and
in
mov
mov
ret
mov
out
movsl
movsl
adcb
mov
call
jo
enter
outsl
adc
loop
jae
and
rorb
add
shl
ror
sahf
mul
fcoml
or
xchg
sbb
stos
loop
pop
les
xchg
arpl
jbe,pn
divb
mov
dec
xchg
out
inc
or
aam
mov
iret
sbb
rcl
shl
ljmp
or
out
mov
lret
push
adc
mov
iret
repnz
sti
aad
lods
sbb
mov
xchg
orl
or
scas
shlb
out
pop
mov
and
imul
ljmp
lds
iret
inc
or
xorl
mov
ficompl
xchg
jnp
inc
xor
mov
fnstenv
iret
mov
repz
cli
ret
mov
ljmp
push
out
mov
cmc
inc
dec
or
scas
leave
dec
arpl
pop
faddp
mov
mov
sub
nop
popf
push
mov
xchg
sub
lods
shrl
cltd
jp
out
nop
out
stos
add
int3
fdivrl
scas
lock
les
pop
push
addl
jl
dec
stos
shrl
or
xchg
insl
inc
push
das
mov
adcb
int3
pop
cld
sub
shr
mov
jmp
test
mov
sub
adc
pop
pushf
pushf
icebp
shll
int3
cmp
ret
mov
push
rcrl
cld
adc
and
fldenv
psubsb
mov
cmp
mov
fistl
rcl
data16
cmpsl
mov
in
mov
fmulp
outsb
mov
jbe
movsb
fisubrl
jbe
jo
jnp
fdivr
dec
xor
and
lret
push
mov
leave
dec
outsl
scas
rorl
mov
dec
rcrl
lods
cmpsl
into
lods
jle
stos
iret
xor
pushf
mov
imul
mov
mov
pop
icebp
dec
mov
int3
mov
dec
add
dec
hlt
fcoms
inc
or
xor
shlb
mov
ljmp
inc
adc
out
iret
xlat
repz
mov
push
lods
stos
ss
sbb
bound
mov
mov
cmp
mov
leave
dec
rol
dec
mov
mov
adc
jo
or
mov
push
aad
repz
add
loope
out
getsec
mov
xorb
scas
bound
popf
out
movsl
out
or
int3
hlt
dec
jno
nop
or
pop
arpl
into
lds
dec
test
iret
pop
jl
fsubrl
push
stc
in
stos
xor
sar
mov
add
mov
iret
aad
into
faddp
ljmp
jmp
push
leave
mov
arpl
cltd
xlat
shrl
jle
dec
fcmove
imul
int
loope
ljmp
xlat
adc
inc
lods
movsb
sub
push
lret
sub
xor
xor
ljmp
shrb
inc
sub
repz
cmpsl
scas
iret
int3
jno
xchg
mov
frstor
mov
pushf
movsb
movsb
xchg
pushf
mov
in
mov
into
jle
flds
fdivs
sub
int
test
lods
pop
int
out
mov
jnp
xchg
fcomps
or
shlb
sbb
cmpsl
movsl
rcl
mov
mov
sbb
lods
sub
int
lea
fdivrp
loope
sub
dec
or
sti
int3
mov
pop
testl
lea
mov
or
iret
mov
pop
clc
scas
sbb
movsl
call
lods
sbb
std
lods
in
fsubrl
mov
or
mov
rcrl
mov
mov
cltd
dec
cli
push
jmp
mov
mov
pmulhw
mov
mov
scas
rorb
loopne
mov
stos
psubsb
cmp
stc
faddp
fxch
cmpsl
mov
cs
ljmp
inc
sub
mov
mov
sbb
aam
test
loope
int
aas
sub
adc
mov
ret
mov
mov
fcmove
add
loop
and
add
adc
test
pop
sub
mov
mov
pop
int3
sub
and
mov
popf
mov
lock
scas
out
adc
fadd
lret
dec
in
popf
fisubrl
mov
push
cmc
mov
out
mov
hlt
and
addr16
rolb
pop
mov
mov
iret
enter
ret
call
ror
pusha
mov
cmp
sub
cmpsl
push
mov
push
out
incl
push
stos
dec
mov
andl
iret
popf
add
or
mov
ret
repnz
xchg
and
jmp
fstpt
mov
sbb
ret
adc
mov
adc
mov
add
and
les
lret
xchg
aad
stos
and
push
lret
scas
adc
not
int
dec
and
movsl
mov
jmp
fdivs
mov
push
mov
sahf
and
not
or
jno
mov
enter
out
mov
int
mov
adc
fmuls
cwtl
into
scas
cmpsl
sahf
mov
rcr
loope
mov
mov
loop
fsubs
lret
lods
sub
cmp
int3
lods
clc
adc
ficoms
lret
jbe
adc
lods
loope
mov
dec
pop
jmp
mov
cwtl
cmpsl
adc
mov
push
pop
mov
xor
or
cld
mov
mov
pop
add
pop
call
bnd
call
or
scas
lret
aaa
ret
or
rorb
fs
push
jnp
cli
xchg
int3
cmpl
mov
cld
enter
or
out
xor
dec
sti
cmp
sub
into
fcmovne
loop
jb
lods
fsts
mov
lds
mov
orl
dec
mov
push
mov
mov
adc
or
dec
cld
mov
jp
stc
sbb
mov
adc
movsl
mov
cmp
rorb
loope
or
les
inc
mov
int
lds
inc
mov
out
sub
roll
das
sub
stos
and
push
jnp
fldenv
mov
mov
mov
rcll
stos
and
jecxz
ja
test
out
outsb
or
push
mov
cmpsl
rorl
xchg
frstpm(287
push
add
lret
leave
or
ss
mov
inc
loop
out
movsl
fcompp
mov
adc
ret
shrl
xchg
push
test
inc
or
mov
xchg
insl
and
aam
lret
pop
mov
jg
fsubl
fisubrl
and
mov
into
or
mov
outsl
or
mov
xchg
aad
fcmovnbe
loopne
inc
xchg
test
mov
push
mov
bound
mov
movsb
enter
push
lea
lret
rcrb
leave
ljmp
mov
sbb
insb
insb
nop
push
neg
lret
test
neg
int3
pop
repnz
ljmp
mov
insl
fisttps
and
les
shlb
lds
sbb
shrb
mov
scas
ja
mov
data16
dec
mov
inc
cmpsb
mov
inc
stos
test
cld
jb
int
es
sbb
lret
mov
iret
sub
ljmp
and
jg
loope
mov
decb
test
shlb
test
sub
cmp
mov
aas
fcmovu
aas
push
jae
push
cmpsl
out
mov
mov
call
mov
lret
mov
fidivs
lods
pop
clc
xlat
ljmp
xchg
aas
fnstcw
pop
ja
scas
fisubrl
and
dec
aam
imul
mov
cld
jecxz
loop
daa
cld
out
push
and
enter
mov
out
mov
ljmp
mov
out
lret
cmpsl
mov
mov
push
ljmp
jl
scas
imulb
into
popf
lret
dec
loope
addb
add
ficomps
jno
icebp
aam
inc
or
leave
pushf
sbb
lret
sbb
xchg
or
sub
add
mov
xchg
scas
mov
scas
mov
pop
rorl
lea
fadds
rclb
loop
mov
sbb
lds
test
out
repz
cmpsl
repz
jg
mov
xchg
call
or
mov
dec
sbb
bnd
nop
add
fcomps
cmp
adc
push
mov
or
cmpl
pop
call
enter
lret
sbb
aam
jmp
cli
ficompl
jp
fstps
rolb
mov
add
xor
movsb
fwait
scas
and
mov
mov
adc
push
jns
int3
mov
imul
fistpl
bound
insb
stos
stos
sbb
and
mov
scas
inc
mov
dec
push
movsb
ljmp
mov
clc
fisubl
bextr
mov
fmull
out
fstpt
push
add
rcrl
lret
scas
aad
ret
das
push
call
jmp
add
mov
les
loope
or
adc
rol
cwtl
inc
pop
mov
leave
lret
test
jb
or
out
into
bound
lds
iret
xchg
dec
adc
cmp
shlb
stos
inc
es
fwait
xor
pop
nop
out
movsl
dec
and
dec
mov
lods
movsl
lock
repnz
sbb
out
fdivl
jp
mov
inc
lods
dec
push
ror
mov
xchg
pushf
lods
pop
loopne
add
mov
sub
pop
add
jo
pusha
or
int
mov
mov
sti
cmpsl
sarb
xor
rcl
into
sti
repz
push
test
mov
sahf
arpl
fstl
iret
iret
sub
push
push
clc
leave
movsl
pop
pushf
repz
or
jns
lret
mov
sarl
jmp
scas
sahf
repnz
mov
lcall
shll
jmp
fsincos
mov
dec
mov
ds
divb
scas
js
repnz
scas
loop
lret
mov
sbb
sbb
mov
lcall
fistpl
push
rcl
lea
scas
pop
int3
cmpsl
out
shl
push
add
jmp
aad
frstor
loope
movsb
scas
mov
mov
dec
leave
or
stos
mov
sub
fnstcw
mov
xor
mov
rcr
call
add
lods
sub
lret
pop
mov
mov
loope
neg
jle
out
mov
into
leave
orb
fcoms
push
clc
push
sbb
jmp
in
or
test
insl
shrl
mov
popf
mov
or
lds
out
fisubrs
cmc
jb
mov
frstor
rorl
addr16
popa
cmp
dec
xchg
ss
test
dec
adc
movsb
push
stc
pop
adc
rcll
test
mov
pop
cmc
stos
pushf
dec
in
enter
mov
cmpsl
mov
out
fsubl
jae
push
xchg
pushf
movsl
jns
xchg
lret
shrb
fcompl
popa
dec
push
mov
iret
out
into
mov
je
jge
mov
inc
cmpsl
lds
push
pop
insl
sub
aam
mov
mov
lods
mov
enter
addr16
push
and
push
into
sbb
movsb
scas
adc
adc
fsubrl
push
jl
ja
mov
adc
loope
pushf
push
loop
ret
stc
mov
test
out
bound
fldl2e
jmp
sub
rcrb
push
adc
scas
lods
xlat
pshufw
adc
scas
in
movsb
sub
lret
cmpsl
mul
push
lret
pop
and
and
rcl
xchg
jp
div
inc
or
stos
das
packsswb
xlat
sahf
fwait
mov
inc
aad
mov
jmp
sar
les
sub
dec
mov
leave
push
pushf
out
pushf
mov
xchg
stos
movsb
stos
sbb
fcomi
xchg
jns
fildl
xchg
es
inc
outsl
out
rorl
push
fsubl
adc
push
into
ficoms
decl
mov
cmpsl
xchg
fstpl
cmpsb
movsb
add
sub
loope
mov
xor
aad
shr
lret
call
adc
mov
mov
aad
lea
mov
jmp
enter
loope
stos
xor
mov
mov
sub
popa
inc
cmpsl
shr
adc
out
fwait
and
mov
adc
loope
gs
sbb
lods
loop
sbb
lahf
call
scas
int
movsb
jmp
adc
mov
mov
fcoml
scas
fdivs
xchg
mov
aam
xchg
and
sahf
rcrb
in
and
ret
cmpsl
mov
mov
movsl
fistpll
mov
loopne
fldcw
push
xchg
rol
fs
push
loop
dec
push
pop
shl
push
dec
xor
fwait
mov
popf
iret
ret
arpl
pushf
shll
stos
mov
sub
and
outsb
cs
dec
scas
add
xchg
sub
push
rclb
dec
inc
shll
loope
lods
int3
adc
xlat
ficomps
mov
test
jp
mov
insl
mov
inc
shrb
test
push
stos
xlat
pushl
aad
bound
bound
lret
cwtl
mov
xchg
es
bound
shlb
loop
popf
mov
leave
sub
mov
sub
fcompl
and
xchg
push
fmuls
or
mov
repz
pushf
mov
xor
fcmovnu
mov
fsubr
enter
shlb
out
fsub
add
cs
dec
sarb
xorb
lods
and
bound
sarl
jle
test
jb
fucomi
fwait
mov
pop
mov
mov
lret
xchg
lock
shl
stos
mov
mov
out
leave
sbb
into
mov
pushf
scas
iret
rorl
aam
lret
fildl
mov
stos
rcl
fmuls
mov
into
mov
cmpsl
test
rcl
dec
lods
cmpsl
adc
ficomps
nop
sbb
test
sahf
adc
sbb
out
stos
pop
popa
mov
repz
scas
pop
mov
jg
cmpsl
jp
mov
xchg
jmp
mov
cmpsl
lret
jb
out
les
xlat
test
hlt
push
dec
popf
mov
sub
fld
frstor
ljmp
fsubs
mov
mov
pop
dec
pop
or
mov
repz
or
aam
imul
int
out
mov
mov
push
sarl
mov
aad
iret
mov
icebp
out
jmp
push
aas
mov
cmpsl
int3
stos
xor
repnz
fwait
mov
adc
fdivrl
enter
idiv
ret
or
dec
push
out
dec
addr16
and
lret
leave
out
fdivl
add
dec
mov
test
aad
dec
mov
sbb
pushf
enter
stos
mov
mov
pop
enter
xchg
lods
test
insb
jno
pop
fcompl
xchg
xchg
inc
addr16
pop
movsb
mov
mov
mov
ja
loop
sahf
mov
test
jo
sub
inc
xor
mov
mov
mov
or
lods
and
cmp
in
int3
in
mov
je
pop
dec
aaa
mov
push
cs
xor
lret
popf
cld
ficompl
or
cmp
fdiv
cmc
mov
mov
lods
fcmovne
mov
pop
aaa
mov
jecxz
sub
stos
fidivl
push
xchg
lret
mov
xchg
pop
in
rolb
popf
mov
mov
lock
or
lret
dec
fstpl
cs
int3
ficompl
mov
mov
pushf
lds
pop
int3
sub
jp
mov
ficompl
pusha
movsl
mov
icebp
orl
jp
push
shlb
fidivrl
adc
fst
mov
mov
lods
mov
xchg
std
adcb
xchg
hlt
lea
xchg
fidivrl
mov
mov
push
fld
jge
lcall
jp
mov
sahf
outsb
out
pop
shlb
repz
ss
iret
dec
mov
sahf
mov
nop
loop
rol
enter
mov
outsb
in
xorl
mov
fdiv
outsl
fiadds
outsl
mov
gs
mov
loop
push
jns
inc
out
clc
fwait
daa
sbb
fmull
mov
into
jge
jbe
out
aad
pop
sbb
jle
imul
lret
imul
test
xchg
mov
sarb
test
clc
es
ret
and
es
xchg
clc
scas
in
add
xor
popa
push
mov
popa
es
xchg
mov
clc
in
rcrl
inc
ljmp
sbb
ljmp
das
mov
hlt
pop
rclb
xchg
out
call
jb
mov
test
mov
pop
mov
xor
stc
popa
scas
lcall
jnp
into
cmp
aad
jle
cmpsl
xchg
add
daa
mov
jnp
ljmp
sub
sub
fstp
dec
mov
in
imull
das
mov
fiadds
cmp
xchg
jp
xchg
aam
rolb
cmpsb
fs
std
jnp
jbe
xchg
das
in
sub
push
mov
mov
popa
ret
int3
jp
aaa
and
xchg
aam
cmc
scas
dec
pop
push
mov
adc
pop
repnz
mov
cmp
aas
mov
xchg
idivb
cltd
adcb
jmp
dec
stos
loopne
arpl
xchg
fsubs
loope
in
fprem
mov
movsb
jns
setno
mov
adc
pop
jmp
jbe
xchg
sbb
fs
mov
aam
mov
jbe
inc
xchg
aam
jle
gs
inc
aam
lahf
sub
js
jle
pop
jo
mov
pushf
pop
inc
fmul
adc
int
scas
adc
call
jae
test
enter
pop
movsl
mov
loop
call
inc
jp
in
scas
cli
bswap
mov
fcomp
mov
mov
movsl
in
adc
rcl
sub
add
xor
jle
aam
cmpsl
addr16
out
call
lods
clc
jle
mov
fs
xor
clc
mov
mov
repz
cmp
imul
shr
int
jecxz
enter
pop
add
pop
movsb
lret
sub
fcmove
stc
movsl
sbb
inc
adc
ss
add
sarb
fwait
mov
jp
mov
repnz
into
gs
lahf
int
loope
repz
ror
lret
xchg
shll
push
lret
mov
and
loopne
xchg
mov
lods
xlat
stos
mov
in
aad
dec
mov
data16
mov
pop
mov
mov
pusha
movsl
aas
add
push
mov
mov
mov
mov
repz
jmp
lods
cmpsb
mov
scas
jb
sbb
fsubr
fsts
nop
and
mov
lods
jge
fldt
add
out
outsl
ljmp
mov
test
insb
mov
frstor
add
cmpsb
sbb
mov
pusha
mov
xchg
fisubrl
ror
iret
inc
pop
pop
pushf
stos
or
mov
test
inc
clc
xor
fstpt
fsubr
mov
sub
sbb
pushf
mov
add
into
popf
pushf
scas
fbld
fmul
lods
stos
test
fdivs
and
scas
ret
jnp
lret
scas
cli
xlat
test
bnd
sahf
xchg
mov
sti
enter
insb
jle
push
popf
xchg
cmpsl
inc
jmp
shl
xor
sub
fstps
dec
add
stos
shr
movsl
loope
sahf
pop
mov
dec
xlat
mov
sti
add
ja
aas
dec
mov
mov
ljmp
or
mov
mov
xlat
fwait
enter
ljmp
out
ljmp
mov
mov
inc
loope
xlat
ror
pop
lahf
ss
movsl
push
jp
mov
ret
jp
out
mov
jp
inc
xchg
aaa
movsb
insl
aas
lret
cmp
int3
ss
negl
or
cmp
sbb
aad
fisttpl
mov
sub
xchg
inc
or
sub
push
push
mov
mov
lods
imul
add
jle
into
mov
pop
int3
lret
testb
int
int3
out
or
enter
mov
xor
lahf
aad
jl
int
add
scas
movsl
or
bound
fstpt
sahf
mov
cmpsl
ret
call
pushf
adc
popf
scas
mov
adc
fsubrl
mov
movsb
movsl
push
xorb
aas
imul
loopne
test
out
fldt
mov
lret
mov
jmp
lods
fst
xor
je
fstpt
es
loopne
mov
mov
lret
add
mov
cmpsl
lock
xchg
ret
inc
cld
inc
scas
loope
orl
mov
xchg
sub
outsb
ret
pop
mov
cmpsl
cmpsl
int3
mov
fwait
pushf
mov
mov
xchg
adc
int3
mov
leave
das
push
int
lods
into
xchg
xor
iret
popa
loopne
lret
mov
paddq
xlat
dec
xchg
stos
sahf
mov
pushf
cmp
fsubr
adc
jl
test
jbe
enter
orl
stos
jle
enter
test
ret
jmp
lods
loope
aas
or
lock
mov
jmp
ljmp
inc
adc
mov
mov
mov
fxch
inc
cmpsl
stos
scas
mov
stos
sub
fcmovne
xchg
xor
mov
cld
fcomps
jne
mov
test
fcmovu
rol
div
iret
mov
xchg
loop
roll
cmpsl
xlat
out
movsl
inc
push
dec
fcoms
sub
cld
lret
push
mov
lret
sahf
sbb
mov
stos
or
roll
add
cmpsl
orb
ret
mov
enter
mov
test
loop
cmpsl
aad
sbb
lret
popf
scas
mov
mov
imul
into
addr16
add
lods
xchg
loope
sbb
lods
cli
cmp
mov
xchg
in
push
sbb
pushf
loope
cmp
lret
clc
out
lods
cmc
not
or
fsubrl
mov
cmp
sarl
out
movsb
adc
adc
fiadds
or
pop
jg
fldcw
rcr
sbb
lods
daa
adc
sub
repnz
dec
xchg
sahf
inc
mov
scas
adc
mov
out
rcl
adcb
aam
test
clc
stos
xor
iret
jns
je
repz
dec
rorl
insl
outsb
sbb
and
fs
xchg
movsl
mov
movl
loop
loope
cmp
pop
jmp
movsl
test
mov
jg
cmpsl
in
mov
cmp
fcmovnbe
popf
ss
mov
out
fwait
test
mov
xchg
gs
int
leave
int3
xchg
pop
jmp
and
pand
ljmp
mov
loop
mov
jmp
lret
leave
arpl
pop
sti
test
scas
add
jl
xor
bound
adc
bswap
fwait
mov
ret
mov
repnz
mov
rcl
int3
movsl
int
xor
ljmp
cmp
jne
loope
xlat
scas
lret
popf
adc
mov
mov
popf
stos
mov
mov
loop
cltd
mov
out
adcb
sti
mov
nop
roll
lret
fwait
mov
out
in
mov
es
add
movsb
icebp
out
mov
mov
inc
clc
clc
decb
ret
aad
movsb
sbb
xchg
outsb
xor
pop
cwtl
adc
int
mov
popf
cmp
push
aam
mov
movsl
or
shll
push
sbb
shrb
jp
stos
mov
mov
mov
adc
adc
call
or
aaa
cmpsl
out
mov
cmpxchg
mov
mov
mov
sahf
scas
loop
sbb
mov
mov
lods
mov
leave
and
scas
cmpb
jns
sbb
sti
sahf
xor
lea
aad
out
jns
push
jg
adc
aam
repz
rol
pushf
add
mov
movsl
mov
scas
out
out
rcrb
mov
dec
insb
fimuls
rcr
loop
mov
sbb
lahf
in
ljmp
add
pop
lret
test
adc
mov
dec
xchg
add
out
test
in
add
imull
into
rclb
mov
mov
dec
adc
aad
xor
or
loop
ret
iret
fsubl
scas
fcmovb
lea
mov
fimuls
push
mov
mov
push
scas
test
sbb
subl
jecxz
dec
dec
cmc
aad
mov
mov
leave
inc
sahf
fld
jg
lahf
rorl
js
movsl
in
and
test
jp
rcrl
mov
lods
int
xchg
jecxz
sbb
nopl
fcmovbe
cld
mov
sbb
lret
ficoms
xor
lods
jnp
inc
sbb
je
in
push
push
fwait
cmpsl
scas
push
lahf
popf
fs
push
cmp
pop
cmp
sub
test
jmp
sbb
divb
int
push
xor
xor
stos
rolb
cmpsl
mov
scas
mov
mov
mov
dec
out
xchg
call
enter
lret
jne
dec
cmp
pushf
mov
outsb
cltd
fnsave
nop
adc
jo
mov
mov
iret
mov
or
cld
dec
or
cli
cs
lds
xchg
lods
xchg
and
dec
fwait
test
fcmove
xchg
xchg
iret
lods
cltd
pop
adc
mov
movsl
imul
ret
insl
cwtl
aad
in
lods
rcl
iret
cmp
xlat
xor
movsb
mov
les
inc
out
ljmp
in
fsubrs
popf
stos
mov
aad
es
sarl
cld
fcmovnu
fpatan
scas
lea
icebp
jnp
mov
loope
lcall
xchg
add
jmp
pushf
aam
add
dec
jns
inc
out
fwait
out
or
mov
sti
cmpsl
mov
cmp
xor
add
call
mov
mov
mov
repz
adc
test
xor
ror
add
fnsave
inc
and
insl
add
shll
ficompl
jmp
xor
sub
or
mov
push
movsl
lods
pop
push
pop
cmpsl
mov
mov
adc
test
or
cmpsl
mov
mov
shll
xchg
pop
mov
lds
add
cs
js
xor
inc
int
out
ret
mov
xchg
fwait
outsl
movsl
push
scas
aad
iret
push
lret
popf
out
test
cmpsb
out
mov
insl
js
stos
subb
outsl
ret
jmp
das
neg
fdiv
and
out
mov
lret
adc
das
outsb
lret
fidivl
ljmp
mov
adc
mov
movsl
test
rcl
jo
mov
into
sbb
pop
add
int3
jg
shll
fsubl
dec
fsubrs
mov
daa
or
mov
lea
add
or
mov
rcrb
mov
popf
int3
adc
ret
xor
nop
out
scas
into
lods
lods
adc
aas
push
dec
jp
sbb
mov
xor
mov
fcmovne
popf
ja
lea
push
in
mov
addb
fadd
lret
adc
ss
repnz
lds
and
insl
ret
xchg
popf
fstpl
pop
mov
jg
lret
lcall
inc
enter
mov
ret
mov
loop
movl
mov
es
inc
pop
cmp
enter
jle
data16
jnp
scas
mov
mov
fwait
loope
sub
xor
enter
fxch
stos
pop
mov
inc
or
dec
hlt
addb
mov
mov
fwait
int3
inc
sbb
inc
mov
loope
and
sahf
xchg
push
jge
movsb
mov
cltd
rclb
ret
add
fs
jp
or
mov
aam
xlat
ret
leave
push
fnsave
sub
pushf
bound
mov
mov
push
ljmp
mov
lds
fldt
loope
sahf
sbb
push
leave
cltd
sbb
jae
mov
adc
mov
and
aad
sbb
divl
lods
sub
mov
shrb
loopne
or
dec
inc
dec
enter
scas
push
call
mov
arpl
movsl
push
mov
in
scas
add
rcrb
enter
cltd
xor
mov
mov
mov
fidivl
out
inc
inc
xchg
repz
mov
lods
push
test
int3
or
leave
loop
into
out
mov
sub
sub
dec
jmp
lods
fsts
lret
call
stos
lret
icebp
push
lods
push
xchg
lods
int3
enter
data16
fldenv
lret
mov
sbb
repz
pushf
cmpsl
arpl
repz
cli
ss
insl
jge
xor
fisubrl
nop
pop
jmp
pusha
mov
mov
push
int3
stos
push
fwait
cmpsl
test
and
repz
insl
inc
leave
out
mov
dec
repnz
or
lret
aam
mov
or
sarl
cs
fmul
ljmp
lret
mov
sbb
xchg
cmp
mov
orb
test
mov
rorl
and
mov
mov
push
out
sbb
scas
out
xor
daa
stc
popf
cltd
mov
scas
cmp
call
sarl
fsubrl
mov
fcmove
xlat
mov
push
fdivrl
sub
pop
stos
mov
mov
int3
pop
movsl
enter
fisubrl
out
sahf
fnsave
movsl
jge
adc
mov
sti
repz
rcr
imul
xchg
lods
aad
lods
dec
loop
int
lods
push
sahf
mov
mov
xchg
cmp
fisubrl
push
ret
movsl
sub
pop
rol
sbbb
push
jb
out
or
icebp
sahf
ss
ljmp
lahf
sarb
sbb
stos
aad
or
dec
jne
inc
mov
stos
pop
outsb
out
scas
jo
aas
fcompl
sarb
bound
or
lret
repnz
lods
jg
sub
loope
leave
orb
mov
addr16
scas
imul
fwait
push
lcall
mov
mov
jmp
cwtl
cmpsl
mov
cmp
push
fldcw
push
push
fcmove
push
mov
push
jmp
fdivl
sub
cs
bound
rcll
add
rcl
sbb
lret
mov
lret
sbb
int3
das
sub
cmp
sahf
mov
sub
data16
jg
fidivrs
adc
int
bound
mov
and
enter
test
xchg
fstl
fsubr
es
out
and
cld
or
mov
mov
add
int3
or
js
mov
aam
pop
ficomps
cltd
imul
dec
aaa
cmpsl
lods
jl
xchg
in
mov
lods
sub
movsl
sbb
out
pushf
mov
sbb
xchg
mov
xchg
dec
dec
xchg
sub
or
mov
jge
adc
inc
out
outsl
outsl
fldl
pop
enter
mov
mov
or
nop
lret
cmpsl
mov
aam
or
fadds
rcl
lret
call
lret
mov
sbb
call
fs
and
jbe
push
mov
out
and
mov
dec
push
divb
cmc
xchg
push
out
out
call
in
into
out
loop
fildl
mov
lret
xchg
mov
enter
test
scas
mov
cs
adc
subb
cld
cld
jno
and
mov
sbb
shlb
jg
pop
sarl
leave
movsl
loop
cmp
push
jmp
fildl
pushf
add
mov
aam
icebp
in
push
daa
push
or
iret
mov
std
sub
movsl
pushf
shrb
jo
stos
idivl
rolb
mov
mov
dec
adc
iret
mov
dec
sbb
xchg
lds
adc
pop
cmp
mov
dec
or
push
cwtl
mov
mov
aam
sti
enter
pop
push
sub
inc
rcrl
push
lock
movsl
lds
rol
int
push
xchg
stos
call
or
shlb
mov
shll
lret
mov
hlt
faddl
mov
mov
ror
das
cwtl
repnz
fcomps
ret
mov
ficompl
mov
pop
ljmp
out
lods
dec
adc
lods
add
push
test
sub
xchg
mov
sub
stos
fwait
and
shlb
test
imul
ljmp
popf
popa
or
scas
leave
xchg
mov
push
les
scas
mov
ret
adcb
mov
cmp
ss
movsb
mov
mov
in
stos
cmp
out
out
xchg
repnz
movsb
lds
dec
sbb
fcmove
mov
mov
test
fidivs
ljmp
aad
mov
imul
lahf
iret
mov
and
daa
sbb
in
adc
push
shl
cli
stos
out
leave
inc
popf
fbstp
mov
mov
ja
enter
mov
fidivrs
mov
test
aaa
mov
loop
imul
int3
bound
fwait
jg
xchg
int
push
inc
loope
or
sbb
lret
sbb
call
jecxz
adc
mov
pop
inc
fcompl
ss
aaa
movsb
adc
rol
cs
cmp
divb
xor
lods
scas
mov
leave
lret
aam
into
lret
ret
mov
out
mov
mov
gs
mov
ret
ljmp
lock
aam
push
stc
mov
xchg
loope
and
or
iret
repz
stos
imul
pop
stos
lock
stos
push
xchg
or
or
lcall
scas
fimuls
iret
shr
pop
mov
pop
adc
lods
inc
sti
in
adc
mov
mov
pop
fsubr
loope
push
popf
jns
push
mulb
es
lret
aam
pop
cmp
fbld
fwait
repz
pushf
fwait
daa
mov
xlat
shr
inc
cs
int3
enter
sub
dec
pushf
or
cmpsl
adc
adc
or
jmp
outsb
stos
xchg
dec
addr16
fucomp
sbb
fxch
fsubrs
loop
mov
mov
aam
cmp
or
push
cli
jmp
lods
inc
fidivrl
mov
add
sarb
loop
pushf
mov
xchg
repnz
addb
popf
fnsave
sarb
into
sbb
sub
xchg
decl
out
nop
fildll
sub
sahf
ljmp
and
push
xchg
enter
lods
out
push
add
jmp
fadd
enter
rcrb
mov
adc
cmpsl
xchg
out
mov
rorb
lret
sti
jge
scas
mov
psrlw
fwait
xor
push
mov
mov
xor
mov
enter
icebp
sbb
xlat
sahf
fcompl
sbb
nop
lds
sbb
xchg
fisttpl
xchg
std
sbb
jp
outsb
mov
fmul
nop
add
or
movsb
jbe
sbb
lock
mov
clc
sbb
mov
stos
fidivl
movsb
out
mov
psrlw
call
and
cmp
lods
fcoml
in
xor
cmpsb
scas
cmpsb
fisubs
out
fisubl
sahf
leave
mov
fcomi
jno
pop
mov
xor
fst
dec
ret
dec
repz
fcomps
push
movsb
aam
ljmp
pushf
fcompl
roll
mov
int
mov
mov
or
ljmp
or
jecxz
mov
fistl
shll
jmp
stos
ss
fwait
psubsw
fildll
fcoms
mov
adc
movsl
loope
mov
hlt
xor
shlb
and
jmp
loope
popa
test
cli
lods
cs
fidivl
repnz
ror
imulb
push
shlb
rol
lret
je
sbb
fidivrl
mov
shlb
shll
push
mov
fsubrl
mov
int3
ss
test
cltd
testl
in
pushf
ret
jp
sub
insl
push
into
inc
movsb
js
hlt
clc
adc
leave
or
adc
call
into
sbb
pop
ffree
xchg
xor
mov
dec
test
scas
adc
mov
popf
mov
mov
orl
loop
movsb
or
mov
movsl
mov
push
pinsrw
shr
lods
ljmp
iret
jmp
in
cmc
enter
lods
lret
adc
mov
mov
pop
movsb
mov
aam
out
div
fmuls
repnz
movsl
imul
scas
and
pushf
mov
rorl
repnz
int3
jl
lods
clc
mov
popf
push
ret
popf
mov
loop
rcrl
mov
pop
scas
mov
enter
fucomp
adc
add
mov
sbb
enter
or
iret
sti
mov
add
fcmove
sti
lods
pushf
movsl
jb
fsubp
inc
mov
dec
fmul
shl
mov
loope
xor
push
pop
movsb
fwait
cs
lds
jbe
mov
scas
xorb
mov
jnp
or
mov
shrb
das
pushl
mov
mov
cmp
inc
mov
add
notb
in
bound
fcmovu
loopne
insb
mov
and
fdivrs
enter
popa
es
outsb
sar
mov
mov
repz
ret
dec
mov
shrl
jae
adc
sub
fidivl
pushf
loop
lods
sti
xchg
pusha
add
push
pop
mov
stos
xor
int3
shr
addr16
lock
cmpsb
inc
sub
inc
or
mov
xchg
push
dec
mulb
fists
mov
scas
icebp
and
mov
ss
and
and
repz
addr16
fcmovne
loope
and
movsl
fwait
mov
ret
jmp
pop
or
popf
mov
test
push
mov
movsl
fdivl
shlb
mov
add
cmc
adc
mov
mov
in
shll
popa
xchg
test
scas
fcmove
int3
cmc
fnstenv
mov
stos
call
mov
es
sbb
lds
movsl
mov
mov
lret
or
lods
repz
sub
test
fwait
leave
addr16
cmp
mov
xchg
adc
mov
fstpl
mov
or
add
stos
aad
iret
decb
daa
rcr
mov
add
mov
push
cmpsl
dec
cld
or
enter
mov
lret
aam
mov
repz
add
mov
mov
sbb
mov
mov
dec
xchg
sbbl
and
cwtl
inc
xchg
ret
adc
jmp
cmp
lds
imul
pop
adc
int
ss
mov
aad
mov
dec
lock
lahf
sti
pushf
push
data16
pop
push
sbb
fsts
pushf
add
aad
pop
xchg
out
faddp
testl
push
pop
mov
fwait
out
aad
sahf
lods
fcoms
dec
ret
push
stos
out
cmp
or
dec
dec
mov
and
dec
loop
cmp
mov
sbb
cmp
jl
shr
aas
push
popf
rcl
lods
mov
aam
mov
fiaddl
popf
fsubrs
repnz
out
adc
stos
add
or
lock
int
or
sti
mov
xor
leave
mov
push
push
into
out
divb
mov
mov
lret
mov
mov
or
loop
xlat
mov
out
loope
mov
aaa
and
dec
int3
lret
sub
xor
leave
lds
int3
popf
xor
mov
pop
js
xchg
mov
mov
outsb
out
fsubs
jmp
sbbb
loope
ret
lahf
adc
push
jne
into
popa
aam
jge
jmp
movsl
in
lret
cltd
bound
scas
dec
enter
jge
sbb
mov
pushf
fisubl
ljmp
je
leave
jns
in
loop
clc
ficoml
stos
movsl
jnp
loop
sbb
pop
xor
vdivpd
sahf
test
lret
fcmove
push
jb
shl
mov
cmpl
push
cmpsb
jle
sti
mov
jmp
loop
jno
test
leave
mov
bound
mov
adc
lods
mov
mov
pushf
sti
int3
movhps
cmp
xlat
aam
xchg
out
test
in
fcmovnbe
bound
rol
movsb
stc
test
pusha
rcrb
adc
fsubrs
adc
int3
outsb
fimuls
mov
aad
into
push
jmp
mov
out
mov
ret
mov
leave
into
add
aam
int3
fwait
movsl
mov
enter
lods
xchg
push
mov
nop
test
inc
shl
orb
jecxz
fisubl
cmpsl
fcomps
mov
enter
leave
xchg
lcall
mov
jmp
out
movsl
loope
out
repz
sbb
xchg
aad
add
call
mov
lret
dec
bnd
mov
ret
jmp
lods
push
test
movsb
int3
repz
lret
loope
dec
xor
repnz
test
fcmove
idiv
fcmovnbe
adc
movsl
xchg
les
and
out
gs
les
mov
xlat
shl
movsb
rcl
inc
fdivs
fwait
sbb
pushf
xchg
mov
clc
mov
mov
or
fsts
sarl
mov
popf
xor
fstpl
add
mov
mov
sahf
fcmove
xchg
cmp
sub
xor
fnstsw
xchg
int
int3
popf
lret
fwait
mov
mov
mov
pop
xlat
xchg
jno
outsl
and
lods
mov
sarb
ror
mov
shll
sti
loop
int
dec
mov
movsl
loop
xchg
lret
push
jns
or
movsb
out
lahf
and
in
mov
dec
mov
xacquire
mov
cld
mov
mov
mull
push
test
icebp
outsb
arpl
data16
or
lret
mov
push
ss
mov
aam
jb
inc
jb
out
orl
lods
xor
mov
movsb
or
fadds
jns
fcmovbe
push
dec
xchg
mov
aad
pop
jo
mov
scas
jmp
lds
mov
ficompl
ret
add
ror
mov
and
es
fwait
int3
mov
test
fldenv
sahf
leave
mov
lods
push
rcr
fdivl
mov
xor
cmp
iret
mov
mov
pop
xchg
jp
xor
rol
popa
mov
test
push
fisubrl
jne
mov
ret
lds
sarb
call
loopne
mov
sub
mov
mov
int3
sub
movups
mov
shll
imul
int3
fidivs
insb
cs
xchg
ljmp
movsb
push
mov
fcmovnbe
lret
mov
scas
loop
repz
jle
fwait
sbb
clc
shll
lahf
adc
dec
cmp
pop
loope
lret
lock
push
mov
jmp
xor
xor
ljmp
stos
shll
push
cmpsl
mov
push
sub
icebp
shlb
movsl
cltd
xchg
aad
add
cmpsl
and
inc
nop
lock
out
idiv
push
fwait
out
xchg
lods
das
adcb
movsl
cmpsl
dec
add
insb
mov
ljmp
lods
inc
mov
arpl
add
mov
js
dec
repnz
leave
lods
and
out
enter
mov
adc
jp
sti
mov
xlat
cli
add
or
mov
repz
loop
shrl
mov
enter
shl
loop
sahf
popa
sbb
ljmp
movsl
lds
mov
test
jnp
add
inc
mov
add
mov
xor
out
push
add
shr
frstor
lods
jb
scas
out
scas
mov
fnstsw
lahf
int3
dec
sarb
inc
fidivrs
scas
fiaddl
stos
repz
call
ret
cmp
fucompp
in
lret
jb
int
sbb
enter
lcall
fidivs
popf
xchg
pop
fwait
mov
les
je
cmp
xchg
jnp
test
dec
aas
scas
iret
mov
mov
sub
ljmp
es
inc
ds
cmp
lds
enter
rol
lods
vmaxpd
mov
or
dec
or
fmul
fwait
repnz
xlat
ja
popf
add
dec
ficompl
dec
nop
mov
out
repz
ja
sub
call
out
lret
enter
fiadds
mov
repz
fldt
jae
mov
mov
mov
xchg
xor
jo
in
sbb
mov
or
or
sub
ret
movsl
out
test
imulb
fildll
xchg
fmuls
cmp
mov
lods
xor
into
sub
fcmovb
outsb
ret
aad
pusha
mov
push
mov
call
lret
stos
mov
adc
inc
lods
push
scas
fwait
sbb
cmpsl
mov
mov
fdivrs
mov
loopne
int3
lods
mov
push
dec
mov
jns
test
and
inc
and
fisubl
sti
iret
and
cmc
fwait
sub
mov
mov
aad
add
push
lret
loop,pt
je
mov
cli
jne
test
jmp
add
cld
or
mov
arpl
lods
jl
insl
add
loop
or
and
mov
aam
and
ljmp
sti
stos
lods
sbb
iret
adc
or
and
test
push
mov
lret
cmc
ljmp
jmp
das
mov
cld
mov
movsl
and
xchg
xchg
div
or
sbb
insl
enter
fildl
mov
rcl
test
xchg
int
fwait
sahf
inc
pop
mov
pop
push
aam
mov
inc
decb
jbe
pop
mov
popa
lret
pop
fisubrl
lods
mov
push
fsubrp
and
ret
or
mov
mov
sbb
das
xchg
nop
test
mov
mov
inc
call
dec
push
movsl
iret
shll
mov
out
mov
jmp
push
pushf
and
stc
mov
jno
adc
fmul
pop
dec
aam
lock
in
scas
xlat
mov
xchg
cltd
out
push
lret
adc
fwait
jmp
mov
lret
in
test
lock
leave
ljmp
stc
cmp
mov
mov
es
sbb
push
jge
mov
fistl
mov
int3
shlb
fsubr
stos
lret
adc
lret
ss
lret
dec
rorb
lods
and
test
xlat
loop
dec
scas
repz
out
movsb
cmc
add
pushf
cltd
ficompl
lock
mov
movsl
mov
dec
fmulp
dec
jae
jecxz
inc
mov
fidivrl
sar
sbb
lds
and
insb
dec
sahf
mov
mov
cmp
jae
cli
clc
fwait
test
mov
imull
mov
movsb
movsl
lret
ficompl
loop
mov
test
leave
cmpsl
sahf
fcmovu
mov
xchg
movsl
xlat
adc
icebp
mov
mov
fldl
repnz
aad
test
sbb
int
in
out
leave
dec
adc
pop
and
fisubrl
jl
roll
loope
out
fsub
movsb
cmpsl
inc
dec
ficomps
leave
mov
fwait
sub
sahf
aad
int
into
ret
mov
inc
popf
sub
into
mov
mov
mov
rcr
popa
xorb
inc
xor
ret
loopne
les
aas
jne
xchg
fcmovnbe
lods
mov
sbb
pushf
test
mov
mov
shr
into
cmp
lods
sahf
push
mov
repz
ret
mov
negb
cpuid
mov
and
xchg
dec
dec
loop
mov
mov
xlat
nop
insb
xchg
mov
cmp
loope
inc
aad
adc
test
fwait
mov
jmp
stos
fidivrl
fidivl
sbb
mov
xor
xchg
ret
movsb
push
mov
loope
mov
iret
sbb
test
fwait
movsb
loope
adc
inc
xor
shlb
scas
fsubl
mov
insl
enter
push
push
mov
mov
int
shll
fwait
mov
adc
fldenv
sahf
xchg
sarl
lods
mov
movsl
lret
ret
out
push
movsl
sahf
xchg
test
ss
movsb
rcrl
or
into
mov
sub
arpl
test
push
lods
iret
fcomi
movsb
inc
pop
or
scas
test
push
cmp
lods
lret
lods
dec
sbb
enter
adc
dec
sbb
pushf
fmul
imul
mov
mov
ret
jmp
cmpsl
sbb
push
test
outsb
repnz
pop
adc
fs
loop
aad
add
imul
ljmp
add
mov
fcomi
mov
mov
mov
mov
ds
rorb
movsl
lea
loop
jp
scas
fdivl
lods
daa
int3
cmp
popf
iret
lret
mov
cmpsl
xchg
xchg
adc
cs
xchg
push
mov
fcoms
lods
into
lods
int
iret
ror
sahf
adc
xchg
int
inc
out
std
or
dec
scas
adc
out
dec
and
ljmp
and
arpl
lret
adc
fldt
loope
repz
out
push
sbb
push
int
popf
mov
mov
int
out
mov
mov
mov
cmpsl
lods
ss
mov
ljmp
iret
aam
insb
push
shl
movsl
mov
lds
mov
popa
dec
mov
xorb
adc
lods
fdivrl
stos
mov
lret
pop
sti
test
push
sbb
jns
mov
subb
xchg
imul
xchg
sbb
fmul
push
pop
popf
popa
mov
fdivl
push
mov
loop
ljmp
lret
stos
fadd
lds
mov
mov
sbb
fwait
stos
add
mov
clc
repz
mov
jb
leave
fcmovbe
xchg
ret
loope
les
sub
mov
icebp
out
loop
fmull
test
mov
xchg
stos
fcmovnu
int3
sbb
test
loope
int3
rol
dec
imul
ljmp
adc
mov
mov
mov
repnz
mov
xorb
lret
test
rol
push
xchg
ror
call
or
popf
mov
shll
rcll
into
mov
or
dec
inc
leave
jle
or
xchg
pop
cmp
aad
lods
enter
ljmp
arpl
or
mov
cltd
int3
stos
pop
dec
mov
sub
icebp
cmp
adc
xchg
xor
int
mov
fldenv
fsub
repz
mov
dec
and
in
mov
dec
movsl
ret
mov
push
in
aam
add
int3
scas
aas
cmpl
lds
mov
and
xchg
mov
adc
movsl
mov
xor
pop
arpl
mov
mov
or
into
dec
cltd
iret
add
sub
movsb
stos
arpl
mov
lahf
pushf
dec
sub
sarb
cmp
push
movsb
rclb
lahf
and
fcoml
pushf
mov
xor
mov
ret
mov
iret
push
push
rcrl
int3
sub
mov
enter
dec
call
fstp
repz
sbb
dec
bnd
cmp
push
loope
pop
out
mov
int
popf
je
sbb
fstl
mov
push
lds
ror
fldl
bound
fcoml
ljmp
scas
loop
fiaddl
xchg
mov
call
sbb
aad
stos
jo
out
stos
add
rcr
push
lds
mov
dec
test
cmpsl
loop
int3
cmpsb
ljmp
scas
or
push
aam
fdivl
fwait
loop
pushf
push
xchg
adc
idivb
adc
loop
stos
mov
sbb
cmp
sbb
mov
loope
out
mov
loope
jl
aad
lret
cmpsl
ret
aam
pop
jecxz
xchg
mov
mov
dec
xchg
push
mov
ljmp
or
mov
imul
faddp
sarl
arpl
lret
sahf
sbb
adc
jmp
inc
mov
xchg
xor
and
push
imul
mov
mov
loopne
lidtl
rorl
sub
lret
cmp
mov
fimuls
and
call
sbb
push
loop
les
xor
leave
lahf
mov
xchg
enter
mov
mov
lret
daa
and
inc
les
or
sti
imul
sbb
inc
fdivrl
xchg
jge
fisubrs
loope
pop
mov
inc
cltd
jecxz
movsb
push
lods
xorl
scas
les
into
xlat
cmp
sti
call
lret
in
loope
mov
push
scas
enter
fistpl
add
stos
fwait
mov
lret
ret
cli
loope
mov
lahf
or
movsb
mov
loope
mov
ljmp
lds
icebp
ret
dec
out
push
fnstenv
lret
fwait
cmpsl
ljmp
jne
mov
mov
movsl
fxch
test
fstl
or
out
mov
jmp
roll
jmp
leave
mov
test
jmp
push
adc
mov
mov
lds
sbb
loope
xchg
jle
into
leave
mov
stos
out
mov
xor
nop
add
shrl
mov
sub
sub
dec
enter
stos
lret
out
test
xchg
sahf
subb
sbb
mov
sbb
ljmp
insb
xorl
popa
fnstenv
xorl
lock
and
mov
mov
sti
mov
repz
leave
lea
mov
cwtl
sahf
sub
lret
ret
lock
xchg
popf
aam
loope
dec
lret
xchg
hlt
lret
leave
out
mov
lret
jle
sub
insl
aad
or
mov
ljmp
pushf
aam
fimuls
xchg
clc
mov
mov
pop
sti
push
add
or
into
xor
shll
call
fsubl
fdivrs
shr
out
lds
and
scas
and
and
popf
fisubrl
xor
jg
int
iret
ljmp
shrl
or
jecxz
lret
stos
repz
pop
lcall
aam
or
fstp
call
stos
mov
leave
xchg
lea
mov
out
lret
dec
jmp
fimuls
fcomps
int3
mov
popf
mov
loope
jmp
jp
enter
mov
mov
push
mov
cmpsl
ror
cmpsl
scas
adc
scas
mov
mov
stos
jle
insb
loope
int
lods
mov
adc
mov
jp
push
clc
mov
scas
and
aam
fdivs
scas
sub
cld
jmp
roll
imul
cmpsb
mov
sub
loop
xorb
mov
adc
cmpsl
adc
loop
adc
lret
shlb
mov
cmpsb
xlat
mov
leave
rcl
sbbl
enter
sahf
int
mov
nop
fstl
leave
jg
mov
mov
sub
ljmp
jmp
xchg
int3
push
lret
repnz
cli
mov
loope
stc
or
stos
mov
cmpsl
rcr
cmp
js
lods
adc
mov
movsl
mov
cld
sub
dec
test
lea
leave
adcb
fucomp
mov
xchg
bound
imul
shlb
shrl
xor
enter
sbb
add
cli
or
or
ret
stos
mov
jnp
scas
movsl
lock
or
movsl
stos
and
scas
lds
mov
mov
pusha
push
out
mov
sub
mov
scas
shrl
int3
addb
les
out
fisubrl
out
arpl
fucompp
stos
mov
movsb
repnz
mov
mov
int
lahf
mov
sahf
mov
out
cmp
fsubrl
mov
nop
adc
in
int
cmpsl
mov
mov
sub
pop
lods
lea
test
dec
mov
mov
mov
aad
ss
test
add
jl
push
push
add
mov
xchg
add
call
cmp
adc
lods
lods
cmpsl
mov
sub
pop
icebp
xchg
fsubl
lret
xchg
inc
push
in
cmpsl
adc
les
mov
jl
ret
fcmovbe
pop
lret
loope
ss
aad
adc
stc
lods
lea
push
movsb
xchg
mov
repz
aam
fwait
mov
push
sub
std
movsb
imul
shll
fidivrl
pop
dec
lret
mov
mov
jb
mov
add
js
pmovmskb
scas
mov
test
add
repz
les
jmp
and
adc
dec
inc
les
mov
cltd
mov
pop
fsubrp
repnz
ret
and
sub
stos
adc
ljmp
pop
lods
repz
mov
scas
loop
movsb
fldl
sub
sub
fcmovu
popa
aam
xor
out
pop
test
adc
stos
lea
lds
popf
out
adc
enter
movsb
mov
out
xchg
adc
loop
int3
and
pushf
test
mov
dec
sub
xor
cmpsb
rol
mov
test
leave
pushf
and
test
cmpsl
call
mov
jge
xor
xchg
repz
test
push
fisubrs
ljmp
popa
mov
mov
shrb
cmp
mov
bound
fwait
iret
test
pop
lret
add
cwtl
icebp
cmpsl
mov
xchg
lret
add
aad
lods
lock
iret
push
sub
xchg
push
repz
fucom
out
lods
mov
popf
cmpsl
cs
bound
adc
repz
inc
adc
sbb
es
in
and
or
faddl
out
outsb
loope
sbb
iret
sbb
ret
lods
test
shrl
test
sbb
mov
xchg
adc
mov
adc
lret
fisubrs
fwait
cmpsl
sbb
mov
daa
ret
mov
mov
fucom
scas
loope
int3
leave
fsts
shrl
mov
push
mov
mov
ret
loop
sahf
fistpl
sar
int
lret
sarl
loop
mov
lcall
loopne
mov
shlb
adc
lods
mov
inc
mov
mov
lods
xchg
aad
mov
or
xchg
cmp
int
sahf
faddp
mov
sti
lret
mov
ror
iret
mov
push
xchg
popf
mov
mov
adc
mov
sahf
popf
mov
lret
mov
cmp
test
dec
daa
int3
adcb
pop
popf
sub
cmp
lock
or
enter
sti
dec
xor
aas
mov
sub
fwait
mov
adc
mov
shlb
mov
mov
adc
pop
xchg
push
dec
add
mov
sbb
cmp
sahf
or
mov
js
out
mov
in
bound
out
fmul
mov
xor
cmpsl
out
popf
clc
xchg
lock
mov
ret
mov
cmpsb
ret
fsubp
loop
adc
loope
ja
rcl
popf
aad
les
xor
aaa
out
mov
pop
dec
iret
sahf
mov
push
ret
mov
xlat
pop
mov
or
jbe
jmp
fnsave
jg
call
aad
lea
mov
les
repz
movsb
dec
pop
mov
adc
lret
xchg
mov
sbb
mov
into
dec
xor
mov
aad
xor
mov
clc
mov
mov
test
xor
lea
sbb
clc
scas
mov
out
out
out
push
adc
mov
jnp
jb
lret
aad
dec
and
imul
xchg
mov
ffree
sarl
clc
lods
fadds
aad
add
jp
adc
shrl
mov
arpl
fiadds
mov
iret
das
adc
pushf
call
mov
loop
repz
fnsave
test
out
ret
xchg
pushf
daa
sub
xchg
in
fcmove
mov
jp
lock
jbe
mov
xchg
mov
popf
daa
xchg
test
stos
ljmp
mov
scas
push
fnstenv
mov
idivl
xchg
mov
js
push
call
lretw
lods
stc
add
mov
or
shll
mov
lret
movsl
andb
xor
mov
sbb
into
loop
add
lret
jbe
sahf
sub
cmp
mov
shl
fsubrp
pushf
stos
in
xlat
sub
mov
push
add
cltd
sahf
or
movsl
fabs
push
pop
push
xchg
cmp
ljmp
fisttpl
scas
xchg
das
sbb
mov
lret
aaa
mov
mov
mov
lds
movsb
out
lods
pop
loop
xor
fdivl
dec
jae
inc
sahf
dec
sbb
mov
cmpsb
push
inc
cmpsl
pushf
mov
lret
cmc
test
or
or
jo
call
bound
clc
inc
in
loope
or
xchg
push
or
and
in
imul
push
sti
movsb
pop
add
mov
fstp
stos
mov
add
aam
or
mov
dec
sub
lds
or
pushf
scas
or
inc
xchg
nop
add
ss
jmp
xchg
lock
out
sbb
mov
out
adc
jg
sbb
cld
mov
cmp
jp
pushf
je
and
mov
mov
cld
shll
jge
mov
mov
jmp
ret
scas
inc
cmp
mov
fcmovnbe
cmp
cli
lds
lods
repz
sarb
movsl
jb
mov
bound
or
out
push
lock
dec
aam
stos
mov
cmpsl
out
int3
cld
xchg
cmp
out
lret
test
jg
jns
int
je
insb
or
addr16
arpl
dec
gs
or
scas
lods
popf
mov
cwtl
nop
mov
stos
push
cmc
int3
xlat
dec
mov
es
mov
addr16
mov
scas
push
mov
es
shll
inc
dec
insl
dec
cmp
rcl
mov
movsl
int3
xor
test
call
adc
pushf
stos
jb
lods
mov
lret
enter
repz
iret
jge
psubb
movsl
mov
mov
sahf
inc
cmpl
dec
mov
ss
fistpll
sub
inc
in
sbb
push
push
add
add
imul
cmpsl
push
loope
push
ret
into
inc
jnp
das
stos
mov
es
shll
sahf
mov
flds
xlat
icebp
rcr
mov
mov
xchg
mov
ljmp
lods
clc
repnz
enter
jl
dec
pushf
fcmovu
add
popf
shlb
xchg
fnstenv
hlt
int
in
rclb
aaa
and
fcoms
fcmovu
mov
test
mov
mov
add
es
fwait
stos
bound
mov
mov
pop
sbb
lods
push
popf
push
ljmp
or
enter
sbb
fcmovnb
lods
pop
inc
dec
aaa
clc
xchg
pushf
rclb
enter
rclb
inc
cmovae
shll
rorb
shll
aam
push
ret
sub
ret
mov
shr
leave
mov
aad
inc
mov
cmpsl
repnz
push
sbb
fisubrl
lock
fst
lods
pop
mov
rol
dec
imul
fldenv
pop
mov
movsl
scas
ljmp
leave
add
cli
dec
int3
stos
lret
and
orb
test
loopne
sub
mov
leave
fisubrl
adc
frstor
test
add
fistpll
out
out
out
test
loopne
call
jbe
adc
stos
mov
dec
add
push
in
daa
pop
dec
xchg
mov
sahf
fsubp
push
movsl
loope
shlb
add
loop
xor
jbe
pop
rcrl
xor
js
test
into
scas
popf
scas
mov
xlat
cli
dec
add
mov
ret
popf
test
mov
lret
and
sub
mov
into
inc
ret
fmuls
stos
sarb
int3
test
inc
adc
test
add
shlb
dec
push
xchg
mov
mov
fstpl
aad
mov
sub
es
lods
fcompl
stos
aam
cmp
push
pop
push
cld
mov
ljmp
fistpl
jle
pop
adc
popf
scas
sbb
mov
mov
xchg
stos
test
enter
mov
cs
or
mov
rcrl
movsl
and
andb
movsl
mov
into
push
mov
inc
mov
and
fcmovbe
daa
out
les
push
ds
mov
sub
inc
or
lods
mov
test
dec
sahf
out
mov
dec
movsb
iret
sbb
idivb
mov
out
test
add
mulps
repz
jecxz
clc
test
cmc
mov
sahf
dec
xchg
test
call
mov
lods
int
mov
cmpsl
mov
inc
lret
xchg
or
lds
jl
lds
or
inc
cmpsl
pop
in
jo
sbb
mov
mov
out
fcmovbe
fimull
adcb
insl
and
and
movsb
in
fldcw
sbb
sbb
inc
out
movsl
jmp
cwtl
mov
push
iret
loop
lods
lods
je
jmp
and
sbb
mov
xchg
fisttpl
push
mov
test
into
out
cmovle
mov
jo
insl
or
sbb
pop
mov
fwait
fadd
pop
cmp
dec
and
out
cli
xchg
cs
fldcw
mov
lock
sahf
xlat
mov
iret
mov
push
leave
mov
into
inc
or
ret
lock
xchg
jge
jo
leave
out
iret
mov
fdivrl
std
mov
loop
mov
lret
leave
movsb
adc
sbb
mov
mov
jle
aam
insb
pushf
mov
sti
mov
dec
mov
lret
lds
out
and
das
icebp
mov
lret
fwait
pushf
or
and
movsb
stos
mov
mov
lret
fst
inc
adc
jo
mov
into
xchg
je
enter
lret
les
lock
test
nop
test
xor
jae
movsb
iret
fmuls
add
int
int3
pushf
pop
outsb
mov
cli
dec
stc
adc
lret
pushf
movsb
fimull
iret
ficoms
scas
mov
jecxz
test
enter
or
and
cld
xor
into
add
outsb
sub
js
mov
pop
push
scas
fstpl
mov
mov
xor
rcrl
dec
int3
sub
or
mov
out
mov
call
sbb
mov
inc
out
rolb
or
popf
mov
aad
lock
mov
sbb
lret
mov
xchg
addr16
and
test
fimull
ror
int
and
sti
movsb
roll
dec
repz
jo
popf
mov
pop
dec
enter
push
into
popa
dec
jge
mov
stos
lds
or
int3
fwait
lods
push
leave
sarb
xchg
fisttps
sbb
mov
ljmp
enter
ror
fwait
sbb
ret
mov
lods
mov
js
or
iret
mov
popa
fidivrl
xchg
push
popf
lods
loope
stc
test
mov
das
stc
pushf
mov
lret
stos
dec
lret
sub
frstor
popf
lea
lahf
test
lods
jno
mov
xor
fmulp
leave
test
rcl
movsl
stos
outsb
push
out
decb
add
add
mov
movsl
js
movsl
repnz
loope
into
in
adc
and
lods
add
fxch
jp
enter
inc
jmp
shl
ret
adc
pushf
test
into
adc
loope
rcll
fnsave
jecxz
mov
push
or
lret
cmp
xchg
shll
cmpsb
mov
mov
les
scas
ljmp
cli
push
movsb
stos
and
xor
aad
xor
xchg
test
mov
xor
popf
mov
scas
mov
mov
je
lret
cmp
aam
xchg
in
mov
mov
stos
jl
call
out
shr
scas
mov
test
xchg
repz
cmpsb
sbb
mov
frstor
mov
fldcw
popf
lret
lea
sarb
xor
iret
jbe
pop
iret
lods
fstl
mov
sti
pushf
lret
loope
je
inc
stos
xchg
loopne
fadd
lock
push
xchg
fisttpll
add
mov
mov
jp
leave
pushf
nop
dec
jns
mov
int3
out
pop
sub
cmpsl
mov
fwait
lahf
aam
mov
movsl
enter
idivb
add
cmp
testb
and
mov
ja
fs
mov
jmp
rolb
mov
repz
movsl
or
xchg
movsb
out
sahf
push
clc
shrb
sbb
lret
stos
jmp
mov
xor
aam
rcll
ret
sar
sub
in
sub
sti
mov
mov
testl
mov
mov
lock
clc
test
jb
lods
lds
jl
lods
xchg
or
aad
add
ljmp
xchg
jmp
mov
rcl
test
mov
sahf
mov
mov
inc
mov
push
aad
jecxz
sub
into
les
dec
ljmp
test
shll
int
adcl
call
sbb
aas
jl
jae
jns
add
jb
icebp
les
mov
jns
mov
mov
int3
add
xlat
movsl
pop
pushf
shlb
rol
aad
push
adc
fstl
mov
nop
lahf
mov
pop
xchg
and
sbb
mov
jmp
fucom
mov
sub
pushf
push
mov
sbb
xchg
pop
mov
fstpt
push
adc
stos
fcomps
inc
incb
mov
fsubl
aad
inc
aam
out
and
addr16
mov
rorl
fsubr
loop
pop
cli
scas
jecxz
mov
iret
stos
fneni(8087
mov
movsl
rcrl
loop
int3
add
cmpsl
les
into
rol
mov
test
movsb
sub
imul
mov
xchg
out
mov
sti
fmul
popf
push
or
movsl
mov
sub
jp
adc
clc
rcr
mov
pop
rolb
into
fs
mov
pop
dec
push
test
ror
push
mov
jnp
xor
fsub
sbb
ljmp
jle
sahf
lret
out
xlat
mov
mov
nop
out
push
add
roll
lods
inc
mov
ficomps
pop
sarb
or
or
lods
xlat
mov
mov
test
mov
neg
nop
roll
insb
sahf
mov
into
int
aam
jle
cmpsl
mov
mulb
ret
xorb
cmp
dec
sub
sbb
ficoms
sub
sbb
repz
sarl
adc
out
mov
mov
pushf
adc
mov
sbb
sbb
into
movsl
outsl
out
mov
cld
mov
out
fst
mov
das
or
fdivrs
out
inc
mov
mov
repz
int3
iret
inc
scas
pop
mov
cs
ss
sahf
aas
adc
mov
ret
jg
xchg
mov
add
movsb
cli
mov
scas
out
rolb
bound
aam
and
lock
rclb
or
test
cmp
enter
mov
xor
cmp
loopne
popf
shll
add
cmp
rorl
fwait
or
dec
addb
xor
sbb
sarb
mov
mov
hlt
call
mulb
sahf
subb
cmp
adc
lods
adc
ljmp
and
stos
rorb
fistpll
popf
xchg
xor
out
movsb
sti
stos
jo
mov
mov
out
cmp
mov
jb
lcall
add
sti
sarl
fadd
int3
inc
lods
mov
xchg
in
leave
xchg
bound
in
or
ds
fwait
mov
or
aam
ja
scas
pushf
push
int
sti
push
and
aad
sub
hlt
adc
les
xlat
xchg
mov
ror
outsb
lret
dec
aad
call
cli
mov
mov
and
jmp
loope
pushf
movsl
fimuls
int3
mov
sbb
test
mov
push
mov
adc
mov
enter
mov
test
mov
and
sbb
mov
int
loop
enter
out
iret
cmpsb
lds
mov
aad
mov
ret
push
dec
jecxz
mov
ljmp
fidivs
jp
mov
lock
fsubrl
aam
cmp
mov
lods
mov
mov
or
fwait
cmpsl
sarl
fisubrs
mov
sub
mov
lods
mov
lret
mov
movq2dq
lret
movsl
mov
loope
clc
fcom
jmp
gs
mov
push
rorb
inc
or
jp
rclb
enter
loop
stos
xchg
ljmp
icebp
pavgw
cmp
mov
mov
mov
out
cmc
int3
or
inc
and
imul
sahf
xlat
lods
out
mov
mov
enter
scas
mov
mov
sub
xor
mov
dec
dec
and
outsl
rorb
fnstcw
jns
dec
push
mov
popa
test
test
sbb
xchg
rorb
mov
pop
out
scas
cmp
leave
repnz
mov
cmc
sahf
cmp
lds
fsubl
repnz
add
cmpsb
cmpsl
or
mov
dec
jmp
mov
mov
ljmp
cmpsl
fidivrs
cld
lods
ficoml
mov
fwait
mov
jnp
stos
ret
call
arpl
icebp
pusha
or
xchg
jecxz
or
add
sub
fnstenv
xchg
stos
cld
dec
lret
adc
jmp
lock
pop
fnstenv
bnd
mov
push
ret
mov
sbb
stos
daa
push
test
sti
into
cld
dec
or
mov
xchg
xchg
adc
jecxz
ret
mov
dec
mov
mov
into
loope
scas
leave
mov
imul
test
fadd
out
or
hlt
sbb
and
fsubrl
mov
sub
and
loop
mov
mov
sti
push
shll
mov
leave
lea
push
xchg
jnp
lods
lds
cmpsl
xlat
movsl
frstor
imul
dec
inc
scas
push
movsb
popf
movsb
xchg
dec
inc
dec
or
lret
xlat
stos
ffree
mov
shl
lods
bound
xchg
les
out
mov
sbb
lods
fwait
mov
jl
jg
cld
insb
mov
andb
ret
fldcw
rorl
iret
mov
mov
outsl
sti
in
cli
mov
sahf
loope
shr
xlat
imul
fnsave
pop
pop
xor
mov
rcrl
ret
loop
test
sub
fwait
movsb
mov
lret
rcrb
leave
push
aam
mov
dec
push
stos
call
iret
jae
mov
adc
jo
cli
cmpl
dec
and
gs
pop
call
jmp
iret
test
ret
or
loop
sub
or
adc
popa
lret
stos
scas
cli
out
ficoms
mov
lret
jns
xchg
mov
lods
or
cli
fisubrs
lods
sarl
imulb
movsl
stc
out
inc
testb
jbe
loop
negb
cmp
add
xchg
mov
jmp
fdivs
rolb
test
into
and
mov
stos
loop
mov
imul
mov
and
repnz
movsb
daa
cmp
xor
xchg
rol
sbb
or
xor
ljmp
out
sbb
add
int3
and
mov
sarl
or
stc
ficoml
or
stos
xlat
test
mov
jmp
loop
cmp
mov
mov
loopne
lcall
mov
lods
out
stos
cmpsb
and
mov
mov
scas
or
pop
sbb
out
iret
pusha
dec
or
add
into
mov
lods
stos
bound
and
movsl
mov
inc
sub
adc
out
int
dec
mov
movsl
scas
xchg
push
or
jno
js
adc
jns
ret
sub
mov
mov
movsb
ljmp
cmp
pusha
cmc
add
loope
outsl
mov
fisubs
mov
mov
mov
sar
mov
loopne
lret
test
int
mov
shlb
push
scas
or
add
stos
and
loop
lret
fwait
adc
mov
mov
movsl
mov
add
ljmp
sti
push
rcrl
xchg
jl
repnz
pushf
mov
stc
sub
pop
cmpsl
cltd
mov
inc
mov
fadd
push
sti
sarl
mov
clc
add
adc
loope
pushf
mov
xor
sbb
cmpsl
mov
mov
lods
sbb
ror
popf
in
lret
jns
clc
pop
ret
mov
xor
bound
addb
dec
mov
movsb
int3
jge
and
jmp
aam
stos
scas
lret
or
pop
nop
and
fcmovb
pop
bound
movsb
push
in
ret
mov
popf
leave
mov
scas
mov
aam
adc
mov
mov
movsb
push
jmp
mov
dec
or
or
mov
mov
inc
mov
or
movsl
cmove
dec
push
push
int
in
into
add
in
out
push
int3
ret
fwait
lds
repnz
aad
cmp
out
imull
jmp
ja
adc
mov
fldenv
lret
aam
stos
loop
movsl
int
xchg
divb
mov
mov
repz
clc
sarb
and
fdivl
les
adc
dec
cli
jae
inc
sahf
fisttpl
mov
push
repnz
mov
jl
add
cs
mov
popf
stos
aad
shl
fsubs
xchg
cmp
out
ret
fidivrl
and
and
jl
sub
fs
and
cli
iret
lods
jb
into
imul
sub
lret
in
ljmp
sbb
mov
cli
mov
out
insl
loopne
sbbb
fsts
cmpsl
aam
add
aas
int
or
mov
fwait
sahf
cmp
mov
repz
test
rol
dec
cmpsb
bound
xchg
inc
fidivrl
mov
mov
mov
lret
ret
negl
mov
arpl
xchg
enter
int
stos
dec
popa
push
pop
int3
lods
mov
push
sub
into
repnz
aad
adc
mov
leave
pop
or
lods
les
add
lret
mov
subb
rclb
fisubl
int3
std
sbb
aad
push
sbb
imul
jle
int3
cmp
mov
xlat
mov
jmp
xchg
lahf
movsl
mov
mov
lds
movsb
popf
adc
punpckhwd
bound
mov
lods
popf
mov
scas
lods
rorl
ljmp
jl
popa
ljmp
pop
ss
push
mov
xchg
xchg
xchg
in
aad
sub
aas
mov
mov
xor
xchg
sbb
push
push
int
bound
ror
sub
test
adc
mov
int3
xchg
fcom
insb
stos
int
lret
sti
roll
and
xlat
mov
or
nop
push
and
fstps
in
nop
rcl
fdivs
xchg
lahf
sahf
xchg
psadbw
leave
mov
ljmp
cwtl
adc
aad
add
aam
push
lods
inc
lock
fcmovnbe
fxch
sub
test
lods
pop
icebp
xor
lret
pushf
jmp
test
stos
lock
movzwl
sbb
mov
loope,pt
mov
push
fmul
mov
out
cmpsl
movsb
hlt
pop
leave
cmpb
int3
clc
call
mov
adc
f2xm1
mov
cmpsb
call
iret
mov
push
fmulp
mov
push
xchg
lret
test
mov
mov
push
mov
leave
popa
and
fsubrs
scas
lret
jbe
clc
mov
or
adc
mov
push
sub
pop
cli
repz
imulb
lcall
pop
mov
test
sbb
incb
adc
mov
mov
push
mov
fprem
mov
loopne
xlat
ret
sti
lret
cmpsl
xchg
or
ss
fcmovbe
fbld
sub
push
pop
scas
or
dec
mov
rorl
pushf
movsb
xorb
sti
ficoms
push
out
test
popa
out
fsubrs
push
scas
lock
fwait
cmpsb
cld
ljmp
dec
es
sub
pop
sub
mov
inc
or
out
or
lods
jns
cwtl
mov
dec
dec
cmp
lret
movsl
stos
repz
mov
leave
sbb
sbb
mov
cld
int
or
dec
sub
movsb
mov
xchg
ljmp
jne
sbb
sahf
mov
into
iret
rcrb
jecxz
mov
scas
cmp
sbb
call
sub
test
xchg
jmp
push
xchg
mov
mov
hlt
adc
fmul
test
jl
xchg
cltd
cmpsb
mov
fnstcw
fwait
xlat
test
dec
jecxz
dec
inc
fsubrl
add
aam
mov
jne
iret
leave
mov
mov
ficompl
mov
icebp
xor
jp
movsl
fwait
aam
das
mov
pusha
int
mov
out
cmpsl
push
inc
lods
xchg
xchg
adc
clc
lods
sbb
les
push
mov
sub
lret
add
movsb
xor
lret
fsubr
shll
push
xorl
jg
sahf
lret
mov
dec
mov
adc
mov
jmp
and
push
lahf
lret
mov
dec
mov
and
mov
lods
nop
rcr
aad
mov
lret
pop
cmp
fucomi
mov
adc
rcrl
xor
sti
mov
lods
insl
loop
mov
scas
fisttpll
xor
cmpsl
enter
repz
ljmp
sbb
scas
sbb
cmp
fcmovbe
lds
mov
inc
out
xchg
xchg
sbb
cmpsl
or
lret
fldt
push
sub
adc
pop
lea
test
inc
es
jl
bound
mov
enter
aad
add
iret
fmul
stos
jmp
mov
nop
or
stos
popf
lea
loop
lret
push
mov
sti
lods
pushf
or
mov
ror
out
cmpsl
int
leave
gs
lret
rolb
mov
test
lds
mov
dec
jbe
fcoml
loope
test
mov
xchg
icebp
sbb
mov
test
mov
add
ret
scas
loope
pop
stos
daa
inc
mov
adc
test
stos
lock
int
mov
int3
scas
sbb
popa
push
xchg
loop
rcr
fwait
dec
adc
inc
mov
lods
mov
loope
mov
pop
ud1
andb
ljmp
cmp
inc
jns
sub
add
dec
sub
arpl
cmp
sahf
lret
leave
mov
xor
ja
int
into
mov
mov
mov
mov
scas
sub
enter
jmp
mov
jp
int
mov
sub
enter
rorb
push
lcall
pushf
dec
shll
sarb
cld
xor
xlat
cmp
mov
andl
mov
nop
repnz
lret
addb
ss
in
loop
dec
cmp
aaa
addr16
fcomps
repnz
and
sub
daa
rclb
enter
add
dec
add
movsl
scas
mov
enter
mov
cmp
sbb
aad
bound
fxch
or
and
push
leave
lods
mov
mov
incb
jle
cmp
out
mov
ficompl
dec
mov
mov
inc
loope
jns
shl
daa
lods
inc
sbb
es
bound
adc
fnstsw
pop
mov
fmulp
sub
push
into
cmpsb
mov
mov
pushf
sar
sahf
xchg
fnstenv
inc
aad
and
fisubs
jb
lods
into
divb
pop
int3
test
daa
popf
or
fidivs
mov
pop
xlat
and
cmpsl
int3
fwait
jbe
repz
cld
loop
lods
iret
lret
mov
xchg
push
pusha
mov
mov
aam
fdivl
int
loope
test
sbb
and
lea
xlat
fldt
bound
sti
aad
sbb
bound
les
out
js
push
cs
pop
jl
bound
ljmp
int
xchg
mov
mov
aam
pop
stc
call
repz
lods
lret
add
add
mov
movsb
lods
fstp
popf
lock
data16
adc
dec
sahf
pushf
mov
jb
out
mov
adc
mov
mov
sub
sbb
mov
sbb
lock
ret
cmp
lods
lea
mov
sahf
mov
rcr
lret
or
mov
popaw
push
fstp
and
mov
jle
in
loop
fbld
out
mov
pop
scas
mov
loop
fwait
insb
outsb
lods
imul
loop
xlat
fstps
mov
mov
mov
aas
cld
pop
or
movsb
iret
mov
mov
mov
movsl
push
jl
mov
jge
mov
push
push
test
mov
jb
lds
repz
cltd
shrb
scas
movsb
rcr
stos
movsl
or
stos
mov
aad
call
int
leave
lds
jo
jnp
mov
mov
lahf
stos
sbb
mov
cmp
fsubs
fisttpll
andb
adc
cld
je
sbb
mov
jecxz
loop
lret
ror
mov
js
xchg
cmp
into
xor
into
loop
test
mov
popf
fwait
inc
call
dec
ja
aas
mov
ljmp
loopne
xorb
pop
movsb
xchg
dec
ret
in
mov
repz
icebp
jb
loop
repnz
mov
les
pushf
into
mov
sbb
bound
ror
insl
pop
scas
sbbb
push
or
cmp
cltd
jg
dec
aad
int3
fmulp
aas
lods
push
mov
pushf
scas
int3
push
fiaddl
scas
aad
out
lret
out
jb
ret
dec
push
int3
scas
sahf
or
insl
inc
adc
adc
mov
movsb
aad
xchg
sahf
inc
adc
shrb
test
and
dec
push
dec
mov
not
ficompl
mov
xlat
fisttpll
aad
mov
sbb
xorb
stos
xor
movsl
out
mov
mov
sbb
sahf
shrb
int3
stos
or
adc
cmp
test
sbb
mov
fisubrs
mov
xor
int
cmpsb
cmp
sti
lret
or
pop
cmp
jb
jmp
lret
adc
mov
int
lods
int3
subb
mov
rep
lret
sbb
stos
loope
jmp
jnp
les
mov
mov
jge
into
daa
out
fsts
movsb
fwait
aad
popf
xor
inc
and
dec
xlat
mov
outsl
test
add
lret
cmpsb
mov
sarb
enter
movsb
mov
mov
cmpsl
mov
popf
push
fisttps
mov
fcoms
mov
jg
mov
inc
cmpsl
lods
lret
popa
sub
mov
mov
cmp
test
adc
stos
jmp
les
or
shrl
mov
divl
ret
mov
mov
adcb
insb
int
lea
lret
lds
fsts
mov
ljmp
mov
fcmovnu
aad
mov
mov
stos
mov
adc
push
fcmovu
lret
test
mov
jmp
xor
ljmp
int
out
mov
adc
hlt
fdivrl
sbb
xlat
ficomps
test
mov
mov
dec
aad
out
imul
fwait
movsb
shlb
repnz
push
mov
or
into
int
ret
popf
lds
mov
inc
lods
sub
lret
out
lret
adc
mov
aam
xchg
sti
stos
ljmp
jmp
mov
mov
enter
jno
or
push
mov
out
lcall
add
es
jmp
test
fcmovnbe
pop
jmp
sahf
mov
repz
cmpsl
test
or
jae
jp
pop
in
or
mov
mov
mov
clc
aad
jmp
stos
or
mov
xchg
jo
movsl
add
fucomp
mov
mov
mov
jge
shlb
leave
outsb
mov
add
rcrb
mov
sbb
and
mov
pop
xor
nop
out
mov
dec
pop
lea
fpatan
xorb
stos
fnstcw
mov
loop
cmpsl
sub
adc
sarb
mov
stos
sbb
orb
test
and
xchg
cli
ret
lods
fcoml
enter
lret
mov
aam
or
sbb
jmp
lods
jo
repnz
pushf
mov
or
lods
aad
sbb
shl
fmull
ret
push
jmp
xor
adc
xchg
lock
test
push
call
fcmovne
sar
pop
in
dec
in
bnd
push
mov
mov
test
adc
mov
int3
adc
scas
fidivl
xor
adc
icebp
outsb
ror
xchg
lret
cld
int3
scas
inc
dec
xchg
fidivl
daa
mov
insl
push
loop
movsb
and
mov
jbe
mov
out
shr
cltd
out
and
pop
pop
iret
fwait
cmp
repz
lods
lods
dec
adc
aam
pop
mov
jle
cmpsb
scas
int3
pushf
mov
bswap
mov
mov
lret
pushf
push
sub
mov
mov
adc
lret
fwait
mov
jmp
adc
ficoms
mov
stos
sub
mov
mov
and
fstps
push
loopne
aam
mov
sbb
arpl
fisttpll
insb
or
fldenv
mov
in
out
scas
insb
mov
into
out
test
scas
shll
movsl
cmpsl
fistpl
adc
ret
mov
fstp
mov
ret
pushf
ljmp
or
or
xchg
stos
out
fmul
gs
aam
fildl
push
mov
add
pop
add
mov
lods
popf
mov
cmpsb
mov
push
popf
scas
popf
lock
out
push
bound
psubusb
lods
popf
mov
bound
add
scas
lret
adc
mov
insb
ficompl
dec
pop
stos
lods
or
mov
enter
mov
ret
fcomps
adc
mov
or
xchg
xor
into
movsl
cmp
lods
rclb
jae
cmp
mov
mov
fsubl
fwait
mov
in
push
mov
push
mov
sub
mov
icebp
jge
dec
sub
cmpsb
push
push
divb
out
les
cld
loop
xor
test
int3
gs
inc
jmp
push
sub
lods
stos
dec
lret
inc
pusha
mov
jl
jmp
clc
lret
mov
ljmp
or
and
mov
dec
out
loop
push
and
out
lods
mov
cli
in
or
leave
push
repz
mov
scas
bound
fwait
lds
and
mov
inc
testb
sbb
mov
lods
jmp
jo
test
xrstor
mov
fucompp
dec
rorb
xlat
mov
and
lods
cmc
pushf
out
dec
mov
bound
jne
mov
call
iret
cmp
nop
into
loop
clc
mov
xlat
scas
cmpsl
and
xchg
test
loopne
cld
outsl
adc
call
adc
push
mov
mov
xorl
dec
addr16
sub
mov
xchg
mov
enter
sbb
movsl
xrelease
rcll
loop
mov
push
fisttpl
mov
adc
int3
sbb
out
imull
jp
loope
scas
lods
sub
xlat
mov
sarl
fwait
ror
sbb
rcrl
shlb
aam
popf
fsubp
and
das
popf
mov
cmc
xor
leave
xor
adc
mov
mov
fs
mov
adc
rcll
pop
call
lods
jo
in
jmp
ror
or
aaa
pop
mov
iret
lret
iret
setl
out
test
jecxz
adc
ret
lea
xlat
add
cmp
mov
aad
int3
mov
dec
sbb
add
call
es
dec
mov
shll
ljmp
lods
mov
mov
cld
adc
cmp
dec
pushf
adc
jge
sahf
scas
push
icebp
xor
mov
faddp
shlb
imulb
lds
pop
push
and
push
xchg
push
mov
ret
shll
fwait
xlat
sbb
aaa
out
test
outsl
adc
leave
cld
shrl
mov
subb
push
aam
xchg
sahf
into
mov
xchg
xlat
mov
push
push
out
iret
push
jb
out
lret
mov
mov
xchg
pushf
rcl
cld
and
cmpsb
push
fcompl
mov
leave
lret
xchg
push
and
mov
aad
inc
les
ret
pop
xchg
mov
cmpsl
cmpsl
nop
sahf
sarl
xchg
or
and
shl
mov
xchg
pushf
stos
stos
mov
call
test
or
fadd
pop
sbb
rcl
popf
es
out
mov
test
pop
ret
sbb
mov
mov
sbb
iret
or
and
pop
ret
or
shrb
ljmp
push
mov
dec
outsl
frstor
pusha
mov
add
mov
rcl
mov
scas
adc
lret
aam
movsb
xorb
ret
sbb
loope
inc
sarl
xor
pmaxub
popf
sahf
movsb
aam
sti
xlat
mov
xor
mov
fimuls
xor
mov
das
shll
movsl
out
or
cltd
cs
iret
ror
jno
xchg
mov
lea
icebp
fstpl
xchg
bound
loop
mov
ret
rcl
into
jmp
aas
leave
lret
sahf
jb
cmpsl
popf
jl
bound
mov
inc
mov
les
mov
mov
cmp
shlb
out
mov
shlb
mov
test
insb
inc
lods
xor
xor
dec
xchg
enter
mov
cli
xchg
lods
mov
lds
sbb
mov
cmpsb
aas
mov
call
lds
loop
stos
loope
mov
or
or
stos
leave
bswap
out
rep
scas
popf
mov
mov
mov
and
and
and
loop
mov
lods
xlat
fwait
jle
or
movsl
sbb
fidivrs
dec
negb
iret
lods
movl
adc
mov
scas
movsb
mov
fmul
rcrb
stos
lea
lods
dec
mov
call
mov
aam
fstps
pusha
or
mov
lock
jns
rorb
xchg
or
call
faddp
ljmp
js
ss
lea
leave
pop
rcrl
aam
lret
call
int
mov
xchg
cmpxchg
mov
fsubrl
pop
and
mov
int
imul
and
bound
or
fcmove
lods
adc
scas
test
rcrl
jne
push
fwait
mov
aam
sub
pop
xor
insb
fidivrl
push
mov
fcoms
lret
icebp
xchg
cmpsl
mov
imulb
pop
xchg
mov
jl
lods
add
loop
xlat
or
out
add
xchg
sbb
mov
mov
push
inc
cmpsl
fistpl
push
cmp
pop
sbb
ret
lret
mov
adc
fisubl
fwait
aam
fidivl
je
jmp
lret
pop
inc
xchg
xchg
movhlps
out
mov
orl
fsubr
cli
fst
mov
adc
sbb
and
lret
xchg
scas
and
sti
xor
jp
mov
mov
mov
bnd
call
enter
jno
subb
int
mov
adc
push
mov
and
lret
mov
mov
jbe
inc
sbb
enter
cltd
ret
cltd
add
fists
mov
stos
cmpsl
lods
loope
push
leave
out
sub
iret
into
inc
mov
stc
lods
or
mov
adc
loope
push
lea
aad
frstor
js
cmpsl
enter
cmp
in
ljmp
push
sbb
adc
int
scas
adc
out
mov
rorb
xor
pop
fcmovnbe
xor
mov
add
sbb
neg
mov
in
cwtl
scas
pop
mov
into
lock
xor
mov
ljmp
sahf
fidivrs
fadds
push
mov
fxch
test
popf
xor
les
or
pop
fsubp
data16
shlb
enter
or
shrl
jl
repz
or
pop
fucom
inc
lea
mov
sub
out
xchg
loope
xchg
add
mov
into
fisubrl
dec
add
jl
adc
xlat
jae
mov
lods
repz
testb
loope
bound
out
sarl
scas
push
int
ljmp
mov
int3
loope
mov
pusha
ret
or
xlat
mov
dec
js
loopne
test
mov
dec
and
aam
cli
cmp
add
sbb
scas
mov
pushf
rcl
in
sub
scas
aam
ljmp
pusha
sbb
rcr
scas
mov
iret
push
mov
mov
fwait
mov
or
mov
inc
cli
jbe
adc
movsb
shll
movsb
xor
adc
mov
stos
mov
and
jge
sbb
xor
push
into
lock
jns
ret
mov
pop
jle
xor
lods
pop
rol
leave
out
sub
test
rclb
loop
cltd
adc
push
mov
xchg
dec
adc
inc
test
loop
clc
lds
adc
mov
sub
repnz
lods
adc
test
scas
mov
xlat
xchg
xchg
mov
popf
sub
lods
mov
and
xor
mov
leave
loope
lods
push
lods
xchg
mov
data16
inc
in
out
and
mov
movsb
lret
mov
leave
int3
pusha
inc
mov
mov
pusha
xorb
cmpsl
push
out
xchg
subb
pop
or
jo
xor
leave
dec
push
movsb
hlt
cmp
bound
sbb
inc
xchg
mov
dec
call
into
pop
dec
xchg
aam
inc
mov
sub
or
imulb
test
es
movsb
sti
mov
add
shlb
sti
mov
cli
sbb
mov
mov
test
mov
andb
mov
cmpsl
repz
mov
xchg
dec
jb
mov
jb
loope
loop
movsl
mov
out
repz
in
fcoml
mov
fsubrp
ds
addr16
mov
jl
mov
cwtl
pop
dec
int3
xor
mov
add
and
clc
and
ret
xor
movsb
repz
dec
lock
addr16
mov
push
sbb
aad
rorb
test
jns
dec
pop
add
sub
push
fmulp
mov
xchg
shll
enter
shll
or
xlat
rorb
stos
pop
es
fnstcw
mov
xchg
xor
dec
aad
or
sahf
fnstcw
push
scas
mov
mov
cmpsl
fcompl
das
dec
mov
sbb
push
push
test
into
enter
loop
mov
fwait
ret
jmp
add
sar
js
lods
or
fyl2x
xchg
int
sbb
stos
mov
loope
adc
mov
sahf
fwait
loope
into
and
fabs
pushf
icebp
sarb
xor
lods
xchg
aam
lahf
repnz
sbb
stos
push
cli
mov
jb
test
inc
aam
mov
and
adcb
lahf
lods
sbb
fisttps
or
xor
adc
ror
lds
jno
mov
iret
and
aam
and
push
aam
int3
scas
sub
push
mov
cltd
mov
insb
scas
or
jp
push
fdivrl
mov
fidivl
out
dec
lahf
enter
adc
dec
sbb
stos
scas
scas
dec
aam
stos
lock
in
or
shlb
fwait
dec
fidivrs
int
ret
xlat
xor
add
enter
movsl
sbb
subl
out
cmpsl
xlat
int3
fidivs
aad
mov
popa
loop
lret
mov
mov
into
dec
jle
dec
cli
sbb
ret
out
fsubrl
mov
out
iret
or
dec
loopne
ret
leave
popw
int
dec
and
aam
or
add
or
fldcw
mov
push
call
cmp
sub
aaa
mov
adc
shlb
xchg
pop
aad
and
scas
lds
movsl
mov
push
cmp
out
repz
mov
sub
adc
movsb
fstpt
xor
pushf
lret
mov
aad
mov
dec
into
fcmove
call
aam
mov
mov
dec
mov
shl
dec
aas
fwait
int3
sbbb
pop
and
and
icebp
dec
sahf
lods
rcrb
mov
xor
sub
cld
sbb
movsb
add
loope
mov
stos
pushf
mov
inc
adc
mov
movsl
mov
fmul
mov
push
into
out
out
jnp
dec
ret
not
jbe
test
mov
mov
cli
mov
out
les
mov
push
lods
mov
xor
and
dec
cmpsl
fwait
mov
push
mov
movsl
mov
lds
push
adcl
or
fidivrs
mov
repz
addr16
call
mov
nop
or
lret
loope
xchg
cmpsb
mov
push
movntq
daa
lods
push
sbb
add
pushf
mov
sub
push
add
enter
push
rcr
fsubrl
out
xchg
int
mov
mov
mov
es
lods
loope
lock
scas
addb
push
cmp
test
push
in
xlat
movsl
scas
jnp
mov
add
mov
lret
sahf
gs
mov
out
mov
aad
mov
iret
mov
lret
fwait
mov
fcmovne
cmpsb
sahf
loop
mov
pop
mov
xchg
out
push
lret
jmp
ficoml
sbb
faddp
popf
arpl
scas
fwait
test
stos
out
into
sub
loop
fidivrl
mov
scas
out
or
into
and
call
lods
adc
stos
mov
or
shrb
mov
sahf
mov
fcmove
lods
out
shlb
ret
and
mov
stos
mov
out
fcom
sbb
cmpb
mov
call
out
mov
in
mov
enter
addl
ljmp
pop
mov
pop
aad
adc
scas
jg
shlb
out
sbb
sbb
movsl
mov
test
adc
mov
gs
pop
aaa
inc
call
mov
mov
sub
out
aad
andl
xchg
cltd
scas
adc
fmuls
shrl
sahf
repnz
mov
push
fs
adc
mov
sbb
mov
iret
sbb
cli
shll
mov
mov
adc
jae
sub
mov
sbb
roll
je
cli
and
shl
shlb
and
lret
or
loop
sbb
fisubrs
jl
xor
mov
movsl
aad
mov
pop
lods
int
les
repnz
scas
or
stos
loope
inc
jbe
enter
xor
mov
call
sub
fadds
out
fnstcw
mov
mov
movsl
jno
mov
lods
ficoms
test
repz
stos
mov
cli
sub
int
push
xlat
push
inc
lcall
rol
scas
pop
in
lret
sub
or
test
iret
cs
popa
mov
fldl
leave
mov
out
jp
mov
cmpsl
jp
push
repz
mov
daa
mov
xchg
sti
stos
or
inc
or
mov
stos
jp
and
popf
push
cmp
cmp
xor
fiaddl
movsl
popf
vandpd
stc
jo
mov
loop
or
jmp
ret
pusha
sti
lds
mov
scas
cmp
hlt
push
adc
ror
mov
inc
xchg
insb
aad
mov
imul
rorb
sbb
into
xchg
adc
mov
xchg
lds
gs
xor
inc
adc
mov
mov
movsl
adc
loope
xor
int
pushf
cld
mov
fnstenv
loope
ret
lret
mov
jmp
sbb
adc
push
xchg
push
lcall
loope
repz
loope
push
push
mov
sbb
mov
lods
out
loope
sub
mov
lods
mov
movsb
mov
stos
sub
jge
mov
mov
xor
insl
imul
push
ret
mov
fidivs
lea
test
int3
fwait
push
cmp
cmp
or
loope
and
neg
leave
lret
icebp
dec
mov
call
mov
adc
mov
repz
adc
sbb
repnz
mov
in
mov
sub
or
fucompp
stos
xlat
push
fdivrs
push
int
mov
pop
pop
mov
or
enter
cmp
movsb
rcl
rolb
fldenv
lret
jno
test
mov
out
ret
or
leave
mov
stos
push
loop
pushf
add
aad
out
mov
adc
fistpl
ficompl
add
dec
popf
loop
jmp
popa
sub
cltd
aad
jne
loopne
jnp
movsl
aad
lret
pusha
into
mov
push
mov
adc
xlat
call
lret
mov
jno
mov
jb
push
test
mov
mov
sbb
sahf
les
es
out
sub
test
xchg
dec
push
dec
mov
test
test
push
dec
enter
stc
sub
dec
dec
xlat
sbb
sub
or
xchg
cmp
and
leave
stos
mov
cli
or
or
mov
inc
ljmp
adc
and
mov
push
aad
shll
into
push
movsl
scas
xor
mov
sub
jl
sti
and
jbe
sbb
adc
add
movsl
mov
cmp
lock
dec
mov
and
shrl
mov
loope
testl
jmp
inc
mov
mulb
mov
mov
adc
movsl
aad
mov
shrl
je
les
mov
cld
loop
test
ret
iret
cld
fldenv
cmpsb
rep
es
mov
lret
push
divb
sti
loop
add
nop
test
into
rcrb
leave
in
testb
lret
int3
mov
sbb
lret
mov
mov
ret
dec
mov
int3
es
out
aam
cmp
mov
stos
sub
fdivrs
sbb
lods
pop
lret
rcrb
int3
je
sub
in
lock
mov
add
xlat
xchg
out
loop
cmp
or
mov
scas
fisubrl
divl
push
test
fcmove
scas
scas
sahf
and
dec
bound
int
fisttpl
fcompl
dec
dec
es
lods
jmp
or
cli
fstpt
in
out
cli
add
mov
insb
mov
jae
add
jb
mov
out
ljmp
sub
pop
scas
cmpsb
mov
lret
scas
stos
mov
pop
cmp
call
mov
xchg
leave
mov
mov
dec
push
ret
xchg
ljmp
lods
jb
popf
sub
adc
xchg
repz
adc
je
enter
aad
sahf
adc
inc
or
pop
or
mov
sbb
lret
fisubrl
add
lods
or
jg
jmp
adc
sbb
fldt
and
xor
pusha
xor
stos
mov
fsubrs
ficompl
jecxz
in
neg
loope
into
sahf
psubd
punpckhbw
rcrb
loope
sti
repz
rcrb
xchg
lods
or
push
add
popf
int
fimuls
sub
es
ficoms
jo
or
ljmp
mov
ss
mov
negl
sarb
xlat
lret
fldl
and
jmp
mov
jecxz
call
sub
enter
leave
sub
dec
lods
lcall
stos
lods
bound
clc
mov
int3
movsl
xor
mov
push
sub
and
xchg
push
sbb
xor
test
rolb
mov
xor
lds
or
mov
adc
push
xchg
xorb
fdivrp
xchg
xchg
int3
mov
fiaddl
dec
cltd
jecxz
mov
ljmp
fmuls
jge
cli
lods
loop
sti
aam
sbb
mov
mov
iret
lret
aaa
adc
or
lock
out
fs
lds
add
into
insb
aas
push
adc
jmp
push
ret
and
push
cmpsb
iret
out
or
mov
into
ffree
mov
sbb
lret
mov
mov
rorb
lods
mov
fnstsw
fimuls
sub
fnstsw
fcoml
sbb
enter
scas
movsl
mov
pop
inc
int3
ljmp
lods
push
mov
leave
push
xchg
cmc
mov
rol
es
inc
lods
js
repnz
test
scas
inc
pushf
sti
sub
sub
and
mov
add
clc
sbb
out
ljmp
adc
mov
cbtw
adcb
dec
mov
mov
jbe
or
mov
xchg
push
sahf
stc
sti
pushf
or
xor
sbb
sti
int3
mov
mov
push
bound
mov
push
mov
mov
jp
sbb
mov
xchg
in
fisttpll
dec
out
or
loop
mov
fcoms
int3
stos
push
xchg
call
test
pop
add
fcom
cld
ret
sti
adc
mov
or
enter
fsubrs
mov
or
sarl
data16
loop
into
lds
push
sub
adc
test
adc
movsl
mov
inc
int
es
lock
mov
inc
in
fucomp
mov
mov
lea
cmp
cmc
mov
xchg
repnz
xlat
sbb
movsl
mov
scas
sbb
cmpsb
mov
jmp
and
addb
pushf
jmp
jns
lret
mov
rcr
xor
movsl
mov
fisttpll
pop
mov
or
xor
ljmp
rol
rcrb
cmpsb
sbb
stos
into
mov
dec
sub
movsl
ljmp
fcoml
mov
andl
inc
outsb
iret
iret
add
fsubr
pusha
aas
or
stos
mov
mov
mov
int3
fdivrp
or
loope
roll
ret
arpl
xchg
popf
inc
xchg
jne
inc
mov
loop
fsubs
push
jp
dec
xchg
xor
outsb
inc
lods
and
jp
fcompl
stos
shlb
xchg
cli
jmp
add
lods
push
sbb
fnstcw
iret
lret
sbb
dec
scas
mov
sub
popf
add
vshufps
rcrl
mov
lcall
add
mov
aam
mov
enter
mov
mov
dec
out
lret
jae
lock
rcr
fistpl
int3
push
mov
out
aam
ret
lods
sub
xchg
loop
and
pop
and
popa
inc
inc
xor
fucomip
int
adc
fld
rcrb
mov
jl
fidivl
add
test
out
mov
mov
popf
es
jmp
imul
imul
inc
xchg
mov
mov
mov
sbb
mov
adc
jno
in
in
inc
outsb
mov
mov
mov
pop
movsl
cmpsl
mov
shll
sarl
lret
jne
adc
dec
mov
dec
int
jns
fnstenv
push
adc
ficoml
pushf
movsl
xlat
shll
fdivs
xor
mov
sahf
dec
fmul
loop
daa
leave
ljmp
mov
add
cs
fisubrs
cwtl
int
dec
loope
fnstenv
out
adc
mov
pushf
mov
into
mov
and
dec
fisubrl
addb
xorb
mov
loopne
lods
popf
sbb
call
stos
mov
push
mov
fsts
push
adc
fsubrs
mov
xchg
lods
out
fldl
mov
subb
mov
jle
mov
fcmovne
pop
fwait
jb
jae
dec
int3
lret
mov
adc
pop
rol
les
add
inc
xchg
movsb
xlat
inc
clc
xchg
adc
fstpl
fidivrs
test
adc
leave
shlb
push
cmp
sti
xchg
adc
mov
cmpsl
lods
xchg
mov
ret
movsl
mov
mov
adc
inc
ret
pushf
xchg
cmpsb
ret
mov
lods
xchg
loope
ret
out
mov
insl
xchg
sahf
mov
mov
popl
loop
out
mov
pop
jmp
les
adc
adc
lods
jo
ret
fwait
mov
cld
leave
mov
or
in
repnz
ficomps
aaa
and
push
cs
mov
xor
loop
loopne
mov
mov
pop
push
dec
lods
xor
mov
jo
iret
ror
leave
test
or
fabs
out
or
mov
xor
adc
ficoml
pushf
into
push
enter
sub
mov
rcr
jmp
loop
cmp
leave
mov
mov
fistl
fdiv
or
outsl
adc
mov
out
xchg
push
fdiv
dec
fwait
test
ret
movsb
shrl
mov
rep
fwait
push
cmp
shrl
mov
cmpsl
clc
into
iret
pop
sbb
lods
stos
pop
pop
popf
mov
movsl
loopne
push
mov
cmpl
mov
sub
pop
fidivl
sub
jecxz
cmp
shrl
mov
in
in
cli
popf
lods
sub
mov
mov
pop
ljmp
sbb
lods
lret
fcmovbe
out
jmp
cmp
test
imul
cmp
xchg
frstor
hlt
cmp
xchg
add
adc
mov
int3
repz
ret
mov
imul
mov
in
and
cltd
mov
in
lahf
das
das
push
mov
ficomps
cmpsl
dec
mov
mov
xlat
pop
xor
sahf
mov
out
fwait
rorb
divb
lock
add
jbe
xor
mov
enter
mov
into
inc
aaa
and
sub
mov
mov
pop
or
lret
xor
mov
mov
loope
mov
fcmovnbe
inc
int
jns
sbb
cltd
sbb
sbb
sbb
dec
mov
mov
push
jno
movl
mov
aam
push
into
cmc
int
inc
sub
leave
lret
out
idivb
add
fdivrl
add
ror
aam
jno
sti
mov
aam
push
dec
mov
mov
sub
aaa
es
mov
add
mov
jno
jbe
lret
sbb
push
scas
xchg
enter
dec
or
rcl
mov
icebp
lret
and
iret
int
ljmp
stos
lret
aad
js
mov
inc
or
mov
mov
loopne
lret
cmpsl
or
inc
int3
mov
mov
sbb
sbb
scas
xchg
or
popf
xor
add
out
jb
scas
lods
ds
mov
loope
leave
xor
mov
rcrb
push
cltd
dec
or
sbb
scas
mov
and
shlb
xchg
dec
outsl
inc
mov
mov
ljmp
out
cmpsl
pop
xor
sahf
mov
mov
aam
fdivl
popf
push
lret
mov
rolb
fidivrl
add
ret
ret
out
mov
imul
int3
jbe
ret
adc
lods
mov
add
cmp
les
jb
lret
lods
fsubrl
inc
out
mov
mov
into
lock
jb
push
pop
lods
into
movsb
aad
cld
jmp
fsubs
xlat
ss
pminub
int3
fnop
aad
scas
sti
lret
enter
or
rorl
das
fwait
ljmp
mov
or
stos
int3
push
or
rcr
pushf
or
mov
add
test
stos
jo
or
add
mov
ret
cli
xchg
fidivs
ret
push
imul
stos
aad
into
dec
out
xor
and
or
lds
mov
cmpsl
fisubrs
in
cmc
aam
stos
stos
mov
mov
cs
lods
int3
inc
call
cmpsb
or
xor
mov
notb
mov
mov
enter
fidivs
aaa
into
mov
add
test
or
sbb
stos
push
mov
fsubp
into
adc
iret
lcall
mov
aad
loop
mov
fiadds
lcall
mov
add
mov
sbb
sti
stc
adc
sbb
pushf
int
sahf
test
mov
aam
fstp
mov
or
lret
int3
or
negb
jmp
push
mov
or
sahf
call
test
out
popf
orl
adc
jmp
hlt
pop
xchg
icebp
jns
pushl
loop
dec
jo
pop
enter
int3
sbb
lret
mov
loopne
sbb
mov
enter
movsl
lods
cmp
sbb
movsl
repz
aad
loope
sub
mov
mov
stos
cmp
mov
push
mov
dec
or
mov
shrb
cmp
es
out
sahf
movsl
mov
or
add
ja
lret
es
lods
jb
sub
sub
shll
mov
mov
push
push
fidivl
shr
sbb
adc
mov
mov
subl
int
push
int3
mov
xchg
outsl
mov
lods
int3
shrl
cmpsb
and
mov
push
mov
fsubrl
xlat
dec
imul
jb
or
popf
scas
or
xchg
mov
and
mov
or
sahf
pushf
ljmp
call
add
xchg
dec
xor
jb
leave
into
inc
xlat
jge
stos
xchg
bound
sti
lods
movsl
lret
sbb
or
mov
bound
mov
movsl
push
daa
mov
movsl
sbb
mov
xlat
loope
pushf
loop
sbb
cmp
lahf
stos
ret
inc
pop
push
jle
das
sbb
enter
repz
cmpsb
mov
or
mov
mov
icebp
ljmp
pop
or
adc
mov
ss
out
mov
fsubs
xchg
jmp
fucomp
mov
jg
pushf
xor
dec
loope
push
dec
inc
aad
ret
jge
mov
adc
mov
out
jo
xchg
stos
or
ret
or
mov
jmp
mov
repz
je
push
test
lods
fnsave
aam
mov
pop
stos
mov
mov
lea
movsl
sub
lods
enter
sub
pop
lea
mov
aad
sahf
repz
dec
js
shlb
test
cmpsl
mov
cmpsl
popf
fcmovbe
mov
sahf
fdivs
push
mov
test
jg
rorb
mov
into
int3
lret
jno
mov
xor
js
sbb
outsl
repnz
cmpsl
dec
repnz
push
leave
loope
faddl
daa
iret
sub
cld
mov
mov
shlb
mov
ret
test
sbb
js
mov
mov
dec
inc
movsl
lret
pop
mov
push
add
ficomps
xchg
add
ljmp
dec
sahf
bound
sub
loopne
int
movb
push
mov
push
or
stos
xor
dec
insl
out
sub
mov
mov
lods
movsl
push
es
mov
movsb
mov
loop
scas
test
int
test
loop
push
mov
cmp
xor
sahf
popf
dec
xchg
push
jae
scas
push
repz
mov
int3
cltd
lods
scas
leave
rcrb
int
fstp
fdivrl
es
in
fwait
in
cmpsb
out
mov
xor
xor
enter
aas
or
mov
jbe
push
repz
mov
movsl
ljmp
lods
leave
popf
adc
jmp
scas
mov
jb
mov
iret
mov
lret
loope
pshufw
jmp
mov
enter
fdivs
mov
sbb
int3
movsl
mov
mov
mov
fwait
jmp
sarl
orl
loope
aad
leave
fdiv
mov
push
xlat
xor
stos
mov
scas
sbb
mov
in
popa
adc
mov
inc
repz
xor
lods
aas
sub
rcrl
ljmp
sbb
test
adc
mov
mov
in
sbb
jmp
out
fndisi(8087
mov
inc
mov
out
into
popl
add
out
fwait
mov
fstpt
mov
jno
dec
popf
rcrl
xor
std
add
ror
and
iret
sarb
rcr
mov
pop
mov
iret
mov
bound
out
aad
pop
cmpsl
or
mov
dec
into
shlb
insl
outsl
loope
inc
stos
push
jp
lods
inc
xor
mov
lds
xchg
push
mov
aas
or
mov
aad
and
fsubs
insb
sbb
roll
stos
xlat
and
int3
or
jmp
fisubrl
iret
mov
sahf
mov
adc
out
fimull
scas
js
xor
jnp
loope
inc
shl
xlat
cwtl
jae
cld
ret
out
and
adcb
mov
mov
lds
push
dec
scas
mov
dec
xchg
loope
stos
mov
clc
sarb
movsb
cmpsl
scas
pop
outsb
popf
fcomps
pusha
cltd
sbb
pusha
lret
icebp
push
mov
rorb
scas
flds
mov
cld
mov
aam
mov
add
aaa
inc
and
je
dec
push
lock
mov
repz
pushf
dec
mov
int
lock
loope
lods
movsl
repz
sub
or
fwait
add
and
lret
cwtl
sbb
cmp
and
ljmp
mov
fwait
mov
add
mov
pusha
jnp
out
adc
fnstenv
pop
shlb
sahf
and
dec
mov
nop
jae
out
fcmove
jg
sbb
mov
push
in
fmulp
sub
fxam
mov
mov
jp
imul
jp
push
dec
rol
rcr
enter
mov
out
ljmp
repnz
loope
mov
mov
insb
fldenv
jns
mov
push
mov
fldcw
lea
jmp
in
int3
jg
or
mov
scas
outsb
js
dec
add
xchg
lahf
lea
int3
or
ret
jecxz
sub
dec
dec
out
jne
mov
pop
loop
mov
mov
stos
xchg
enter
mov
lds
stos
cmp
or
pop
addr16
sti
aam
cmc
xchg
call
mov
rcrl
lret
gs
jns
outsl
out
sub
cmpsb
jb
ljmp
sti
into
roll
jecxz
fadd
sub
stos
pop
push
test
cmp
push
frstor
stos
push
mov
in
orb
movsl
mov
jo
mov
sbb
loope
mov
fsin
stos
lret
and
out
rol
mov
cwtl
mov
mov
xlat
mov
cmp
mov
mov
lret
jno
divb
adc
pusha
mov
push
or
enter
rcr
mov
repnz
adc
loop
lret
pop
lods
mov
mov
out
lret
sbb
test
mov
ljmp
shll
stos
adc
ds
loope
ret
loop
les
leave
mov
leave
pop
fs
das
stc
dec
insb
bound
out
mov
shrl
jno
xor
mov
dec
or
xlat
fidivrl
mov
jecxz
fsubs
rcrl
stos
fistpl
stos
ret
lods
mov
lods
out
ss
imul
xor
clc
imul
lods
push
lods
shll
add
cmpsl
mov
scas
or
rorb
dec
sub
cmp
stos
aad
pusha
andb
loope
jae
sahf
jmp
call
iret
fisttpl
hlt
rcr
sub
push
or
fwait
cmp
shrl
adc
roll
fdivs
mov
mov
push
scas
mov
ret
push
lahf
enter
movsb
data16
in
mov
sub
add
adcb
sub
and
les
pslld
enter
jg
cmpsl
add
mov
mov
mov
and
adc
fldcw
rol
out
stos
clc
fidivrl
adc
lods
leave
cmpsl
lret
xor
jmp
test
jge
imul
mov
mov
sub
adc
adc
into
mov
aad
cld
shl
scas
sub
aaa
jmp
sub
sbb
les
mov
movsl
mov
fcmove
loop
aad
lods
mov
and
rcr
sbb
lea
repz
ret
or
call
add
push
out
pushf
mov
loop
pop
iret
shll
mov
mov
les
pop
out
mov
mov
mov
adc
out
sbb
jmp
add
mov
lds
dec
mov
rolb
loope
add
call
xor
cld
lods
xlat
test
stc
adc
cmp
adc
xlat
sbb
mov
test
stos
dec
adc
movsb
scas
test
push
enter
loope
adc
lea
divb
sti
lds
fsubp
lods
andl
mov
scas
subb
into
fcmovne
clc
add
lahf
add
movsl
mov
inc
jecxz
enter
push
popa
sarl
xor
int
lock
ret
mov
pop
ficoms
jmp
sbb
lds
jns
insl
push
pop
jp
mov
jmp
data16
lods
lret
sti
sbb
int
test
jl
or
inc
lcall
lods
pushf
out
cmpsl
lods
fsubrl
xor
mov
adc
jmp
outsb
scas
fimull
sub
rcl
mov
loopne
cmp
or
icebp
mov
and
mov
push
add
stos
add
mov
mov
leave
mov
insb
sbb
xchg
cwtl
shrl
inc
insl
outsb
leave
icebp
arpl
fwait
sub
mov
lods
adc
pop
sti
jb
nop
fstpt
insl
sbb
xchg
or
and
pop
sti
mov
inc
jmp
mov
enter
mov
xchg
xchg
scas
mov
addb
outsb
jp
out
pop
stos
sub
xor
movsl
jmp
inc
lea
mov
lret
fimuls
sub
xchg
jp
test
int3
jo
push
repz
mov
jp
pop
sbbb
bound
and
pushf
xchg
je
es
pop
cld
cmp
bnd
mov
bound
fwait
mov
mov
inc
sub
daa
lods
add
pusha
int3
rorb
xchg
popf
rcrl
mov
movsl
adc
mov
sbb
cmc
sti
xlat
mov
pop
mov
aad
mov
in
lret
jmp
xchg
repz
loope
ljmp
int3
int3
rcll
scas
shrb
aam
mov
sub
or
fcomp
and
push
daa
les
mov
push
rcll
ret
dec
out
mov
push
add
stos
into
test
fucompp
mov
xchg
es
scas
outsb
clc
and
lods
pop
push
and
fstpt
daa
int3
push
ficompl
sbb
jge
lods
movsl
fstps
lret
dec
test
sar
push
add
test
mov
insl
mov
add
ret
popf
imul
ljmp
inc
sbb
cltd
sbb
mov
mov
pop
add
movsb
les
aam
enter
fidivrl
enter
movsb
mov
stos
inc
inc
sarb
pop
fcmove
pusha
mov
test
out
call
mov
mov
or
pusha
sbb
shl
call
mov
arpl
and
call
fucomp
shlb
fstps
aad
dec
movsl
sub
jp
lock
in
push
leave
fisubl
stos
fcmovne
add
sbb
setge
shrb
mov
mov
out
in
mov
mov
fst
shl
or
mov
lret
aam
pop
fadd
pop
fwait
daa
cmp
leave
sahf
mov
and
sbb
scas
push
or
ficomps
lods
cmpsl
call
leave
lods
xor
lock
fcom
mov
ret
dec
out
lret
fwait
stos
mov
fildl
mulb
loop
shll
les
hlt
adc
ret
sub
fwait
adc
out
mov
dec
leave
repz
adc
cmp
shll
push
jecxz
inc
loop
loopne
sbb
mov
pop
lcall
sub
mov
push
popf
mov
pop
xchg
push
test
or
mov
not
mov
xor
push
dec
fcmovu
mov
xchg
shr
xchg
mov
jb
aam
cld
ror
lods
jae
ljmp
int3
imul
mov
fcmovbe
std
shrl
testl
test
insb
ret
mov
in
pushf
dec
sbb
call
test
movsb
dec
fmul
iret
loope
rcll
mov
mov
sub
loop
lret
stos
sarb
lock
or
leave
movsb
jb
es
movsl
clc
out
ret
inc
imul
dec
fwait
mov
sub
out
mov
les
mov
test
cltd
loopne
mov
stos
js
push
mov
mov
loop
out
xchg
adc
ffree
test
sbb
xor
xlat
scas
push
jb
ljmp
fistl
in
enter
push
push
mov
lret
mov
sub
ret
cmpsl
clc
fcmovnb
call
loope
int
xor
out
test
xchg
sahf
mov
sbb
pop
sbb
xorb
arpl
loop
les
aad
jbe
test
pusha
push
mov
movsb
hlt
adc
test
aam
dec
in
fidivs
mov
ret
and
out
mov
xchg
mov
ret
rol
mov
aam
mov
fmull
jnp
fisttpll
int3
pop
xchg
fstp
repnz
cmpsl
aam
stos
ror
push
cld
int
sbb
inc
cmc
mov
repz
xor
mov
iret
push
pop
and
push
fimull
rcrb
mov
sbb
and
lods
movsb
iret
sbb
int3
out
mov
stc
jmp
lods
xchg
divb
mov
scas
test
cltd
mov
loop
sub
xor
ret
cmpsl
out
shlb
push
nop
out
repz
and
repz
iret
fidivl
call
jbe
or
cmp
shrb
out
mov
stos
adc
aad
stos
mov
aam
rcrb
dec
cmpsb
jg
adc
lods
lret
ljmp
mov
lret
xchg
out
repz
ds
insl
test
loope
sbb
mov
sbbb
movsl
sbb
mov
mov
mov
xor
insb
lods
das
jne
cmpsb
jb
lea
ret
mov
pop
jmp
xor
lods
divl
ret
loop
out
jb
dec
cmp
push
ret
pop
ljmp
out
cltd
pop
lods
inc
icebp
pop
xor
jl
mov
push
xrelease
imul
fcom
mov
mov
add
les
bound
rcrl
mov
sahf
xor
cmp
or
xchg
adc
popf
les
lds
sbb
cltd
imul
inc
mov
cmpsl
fidivrl
sbb
scas
loop
xor
lods
iret
xchg
mov
xchg
pop
lret
pop
test
adc
mov
xor
mov
repz
jecxz
test
iret
loop
mov
and
sahf
push
mov
mov
and
xchg
jge
mov
and
ljmp
xchg
mov
cmpsl
mov
lret
fdivp
stos
aam
into
mov
mov
imul
push
jle
mov
dec
cmc
ret
ficompl
add
test
xchg
xchg
or
push
push
fnstenv
fcmovbe
mov
in
sahf
scas
out
cmc
dec
mov
mov
jmp
aam
in
fs
ljmp
les
aam
xchg
shrb
xchg
sbb
or
inc
lods
xor
int3
repz
lods
mov
rcll
fsubs
outsl
push
mov
lret
mov
clc
mov
out
movsl
out
cld
or
fisubl
fstpt
sub
movsl
ficoms
test
mov
cmpsl
shl
fdivrs
bswap
mov
pop
cmpsb
in
lods
shrb
cld
rol
movsb
ss
stc
rorl
lea
out
pop
and
shll
ror
in
test
popf
jmp
lea
fidivs
ffree
mov
mov
out
movsl
div
dec
in
ret
lods
imull
scas
int3
ljmp
les
shr
jmp
repz
push
or
sub
inc
lds
movsl
mov
leave
xchg
fsts
movsb
and
jg
hlt
mov
shlb
mov
xchg
fldl2t
mov
inc
aas
outsb
aam
dec
mov
inc
ret
icebp
cmpsb
push
lods
mov
movsb
popf
sahf
loope
xchg
sub
pushf
mov
loope
jmp
lods
lahf
mov
jp
sbbl
pushf
movsb
mov
loope
sub
push
ficoms
movsl
stos
popf
lods
in
leave
stos
mov
stos
push
shll
mov
inc
or
mov
ret
fwait
test
fsubp
mov
pop
into
shlb
mov
xchg
jl
fnstsw
or
scas
cmp
popf
xor
cmpb
adc
jb
aad
fbstp
xor
scas
sti
xor
sbb
shrb
add
mov
scas
fcmovbe
mov
adc
loope
call
fcmovne
sahf
stos
out
loop
pop
add
cltd
aaa
xor
iret
mov
aad
orb
adc
xchg
loop
outsb
mov
add
repz
lret
jecxz
adc
fistl
push
or
lcall
sbb
ljmp
xchg
jnp
int3
enter
scas
and
add
mov
mov
mov
pop
int3
cld
pop
lret
enter
movsl
fildl
jle
sbb
mov
leave
out
xorb
mov
test
dec
out
call
mov
mov
adc
stos
into
mov
leave
popa
or
shl
adc
lcall
pop
arpl
sub
cmp
add
pop
push
push
mov
cmp
leave
inc
hlt
mov
and
lret
lret
mov
xor
and
xor
daa
pop
into
int
fcmovne
or
mov
test
sub
dec
shr
and
inc
ja
shl
mov
out
or
pushf
mov
loope
int
popf
into
and
push
add
xchg
add
dec
fsubs
aam
and
push
call
inc
shlb
mov
lret
or
mov
scas
repz
inc
out
mov
mov
pop
dec
adc
leave
pop
xchg
mov
sarb
add
out
push
std
jnp
cmp
mov
mov
popf
iret
shll
in
ja
adc
dec
sub
mov
and
movsb
pop
cs
push
sub
shll
cli
mov
scas
lret
jmp
pushf
cld
nop
bswap
stos
loope
mov
imulb
cmp
fdivl
lods
cmp
aam
pushf
lret
inc
sub
sbb
and
loop
ret
leave
lret
enter
int3
xchg
pop
inc
sbb
dec
push
dec
imul
stos
sarb
jne
loope
or
or
stos
movsb
and
xor
mov
sub
push
test
fsubs
fcmovne
loopne
mov
mov
and
dec
push
into
popf
sub
pop
aam
cltd
out
scas
mov
ret
mov
in
lods
push
push
mov
js
inc
sti
fnsave
les
jecxz
lret
enter
adc
fcoml
pslld
pushf
call
jb
scas
shll
xor
jb
aam
pmovmskb
rcr
scas
mov
xchg
adc
enter
cltd
mov
push
mov
nop
bound
fwait
sahf
mov
mov
cs
mov
bound
push
subb
mov
xlat
or
pop
jbe
mov
fisttpl
push
popa
cmpsl
mov
aas
jns
cmpsb
iret
mov
dec
movsb
or
sahf
jmp
popf
test
fdiv
in
scas
cli
mov
dec
sub
mov
movsb
frstor
cmpb
pop
mov
mov
lret
jb
mov
xorb
scas
mov
ja
pop
sbb
ret
enter
xchg
fldenv
and
int3
fsincos
inc
jmp
daa
or
lods
jae
mov
pop
mov
addr16
sbb
sahf
fiaddl
out
orb
aam
push
jae
test
inc
mov
jbe
es
fidivl
sbb
push
adc
clc
mov
mov
imul
popf
enter
test
dec
jecxz
inc
mov
stos
into
stos
mov
push
pop
loop
int3
scas
scas
mov
or
movsl
and
iret
loope
inc
jmp
mov
test
pop
sbb
push
push
fldcw
lds
dec
fistps
adc
rcrl
adc
movsb
add
pushf
jmp
leave
mov
flds
jp
faddp
popf
sub
mov
mov
xor
sti
aad
sub
mov
mov
int
jno
inc
mulb
mov
insl
out
mov
mov
repz
int3
inc
dec
in
push
aas
shrb
mov
lods
int3
mov
ret
iret
ljmp
mov
icebp
pop
rclb
lds
dec
ljmp
dec
jo
and
ds
lods
push
xor
sbb
icebp
iret
imul
add
mov
les
push
ret
scas
and
mov
loope
rol
fdivl
out
call
scas
add
push
aam
data16
pop
out
mov
imul
sahf
aaa
dec
lods
into
sub
clc
pop
loopne
xlat
data16
cltd
stc
fsub
fisttpll
and
mov
cmp
and
jmp
xlat
iret
scas
push
lock
bnd
mov
pop
adc
es
mov
int3
xor
cmpsb
fldl
repz
lods
cmpxchg
lds
pop
and
lret
adc
into
lods
mov
mov
lahf
xor
repz
xchg
xlat
call
push
test
sbb
stos
rorb
movsl
fld
mov
repnz
das
shrl
xchg
push
adc
add
and
lock
stos
dec
incb
adc
push
jge
adc
fcmovnbe
rol
xchg
mov
ljmp
loop
dec
fwait
sbb
aam
fisubl
mov
lret
ja
in
jge
leave
scas
adc
fdivrl
mov
jg
test
lret
sbb
fbstp
das
cld
mov
pop
adc
loop
lds
test
stos
cmp
scas
mov
cmp
push
scas
mul
pushf
test
or
cltd
punpcklbw
dec
mov
movsb
push
adc
mov
daa
and
pop
int3
push
push
fs
rcll
inc
mov
mov
cmp
ss
and
aam
ljmp
call
in
iret
int
adc
mov
rcr
push
dec
dec
mov
sub
int
pushf
xlat
ret
xlat
mov
mov
data16
push
mov
xor
stos
sti
mov
lret
int
repz
xchg
test
sbb
pop
lods
xor
sbb
enter
int
xchg
pop
cmpsl
mov
adc
mov
ljmp
lret
xlat
mov
cmpsl
andb
test
lods
xorl
orb
stos
jmp
ret
fiaddl
mov
fwait
int
or
pusha
adc
into
mov
adc
push
mov
dec
jecxz
ret
or
mov
adc
fnstenv
enter
test
faddp
dec
sbb
pop
pop
rorb
aam
test
je
push
scas
fdivs
shll
mov
mov
jecxz
shlb
scas
mov
orl
lods
scas
or
mov
xor
jns
xchg
jle
inc
xchg
movsl
and
clc
sar
pop
adc
sahf
and
nopl
fxch
pop
adc
es
frstor
lahf
mov
mov
ljmp
loope
ja
pop
xchg
push
and
pushf
inc
mov
lahf
rcrb
lahf
rcll
cltd
js
xchg
inc
iret
adc
xor
cmp
rcrl
into
mov
mov
inc
mov
and
or
mov
insb
jecxz
cmpb
cmc
lret
into
inc
sbb
push
push
fsts
pop
shlb
movsl
loop
xchg
int
fidivs
jae
push
into
dec
call
push
jmp
loop
test
inc
mov
stos
xor
adc
xor
or
jecxz
ret
pushf
adc
mov
mov
xor
lods
mov
iret
mov
mov
lods
mov
aad
xor
loopne
mov
xchg
and
subb
lret
jl
mov
ja
repz
lret
xor
pushf
mov
ficoml
out
fistl
imul
rorl
cmp
mov
repnz
fcomp
out
push
xchg
lret
fcoml
movsl
cmp
xlat
push
push
call
dec
sub
and
mov
movsb
rolb
mov
mov
adc
lret
mov
mov
dec
adc
cld
sar
jae
xchg
cmpsl
enter
insl
cmp
cwtl
push
scas
mov
dec
fwait
test
iret
dec
mov
out
cmp
push
sub
shlb
xor
popa
mov
fimuls
stos
test
or
pop
xor
ljmp
xlat
cmp
add
jp
in
mov
mov
loope
scas
in
test
lods
iret
outsl
xchg
loopne
aad
sahf
movsb
stos
push
pushf
mov
ret
testl
pusha
cmp
enter
movsb
jecxz
movsl
out
mov
shll
sahf
es
insl
leave
mov
scas
enter
xor
xchg
mov
outsb
xor
mov
in
lret
aam
js
dec
icebp
dec
and
lods
mov
stos
jmp
es
stos
or
int
sarb
mov
jnp
iret
or
fdivs
stos
jl
sahf
test
pop
adc
icebp
mov
bound
pop
fidivl
mov
xlat
scas
pop
fcmovbe
dec
cmc
lods
test
insl
jb
lret
ficompl
movsb
int3
mov
stos
sbb
mov
test
jbe
and
in
movsb
sub
cmc
adc
ret
xchg
xchg
fwait
shrb
pushf
bound
mov
fsubrl
sub
lods
mov
aaa
mov
les
addr16
fwait
movsb
mov
scas
mov
sbb
aam
mov
adc
stos
cmpb
mov
mov
dec
div
jno
int3
imull
jl
mov
jp
lret
int
xchg
push
fildl
stos
out
lret
aad
in
rcrb
call
mov
clc
ret
mov
fmul
imul
fwait
sub
repz
cmp
call
mov
push
lret
sbb
aad
xchg
xchg
int
nop
cli
push
test
imul
adc
xlat
movsb
inc
in
inc
pop
rcrb
testb
sbb
out
and
leave
push
and
int
add
fidivl
pop
movsl
fnclex
fwait
lret
es
xor
lcall
push
cmc
mov
or
lret
fadds
int3
push
stc
jp
push
xor
sub
jmp
inc
pushf
mov
add
leave
int3
loope
lea
sbb
push
fs
push
insb
add
jp
icebp
shrb
shr
popf
xor
ret
mov
jmp
arpl
fidivl
lret
adc
movsl
add
pusha
dec
push
sbb
mov
push
fcoms
pushf
or
mov
push
in
pop
fldcw
cltd
fistps
mov
in
ljmp
int
loopne
dec
mov
sahf
xchg
into
clc
aam
jl
leave
ret
fdivrl
sti
shrb
out
int
lds
dec
mov
fistpl
mov
leave
into
lods
aad
xchg
xchg
les
sti
sti
pop
jbe
ret
fcmovu
xchg
pop
je
adc
add
fcoml
and
mov
jmp
loope
mov
xor
repnz
rcr
pop
divb
mov
lods
fidivrs
nop
lret
imul
jl
or
fcmovnu
mov
popf
lods
repz
mov
xor
les
and
iret
enter
add
mov
in
xor
repz
fdivl
mov
ja
mov
lods
out
and
movsl
fcmove
add
push
scas
push
das
xor
dec
or
nop
scas
fwait
aad
adc
add
dec
call
xor
adc
cmp
jecxz
les
call
ret
cwtl
pusha
mov
movsb
adc
mov
jns
stos
mov
loope
shl
stos
nop
fdivrl
data16
mov
daa
sub
popa
mov
mov
push
loope
daa
or
jae
mov
dec
cmpsl
cmp
cmp
mov
mov
jbe
mov
and
mov
or
xlat
loop
jmp
aam
add
push
xor
mov
mov
sbb
fdiv
loop
shr
lret
enter
xor
loopne
fistpl
mov
stc
mov
mov
fcomp
mov
loopne
lret
adc
leave
pop
dec
dec
cmpsl
repnz
out
adc
test
xchg
movsl
lods
fstp
lret
out
adc
fimuls
ja
addr16
shlb
enter
scas
dec
nop
inc
shrb
fwait
mov
push
jo
pop
subl
mov
mov
mov
les
cmp
stos
movsl
mov
stos
sahf
adc
out
jns
mov
scas
sahf
mov
xlat
inc
out
mov
adc
xchg
push
inc
pushf
sti
scas
push
lcall
popf
jne
sahf
cmp
aaa
ror
jecxz
pushf
jne
fsubrs
cli
ss
in
mov
jmp
les
cltd
inc
add
sub
movsb
or
test
mov
lret
loope
jl
xchg
cwtl
popa
mov
mov
leave
lret
scas
out
or
test
and
int
int3
addl
ss
in
adc
lret
or
lret
add
push
dec
sub
mov
iret
mov
fcmove
mov
inc
out
sub
call
mov
ljmp
sti
iret
mov
leave
stos
call
sub
test
xor
push
cld
mov
mov
adc
scas
pop
pop
sub
clc
sarl
enter
das
out
lret
bound
iret
mov
xor
lahf
and
add
lret
or
stos
xor
jne
push
pop
fisubrl
cmp
fistpl
movsb
scas
rorb
enter
popa
dec
loope
and
dec
stc
aad
pop
mov
dec
pop
popf
or
mov
sub
mov
iret
sub
repnz
loop
fstpt
xchg
lcall
or
fcoml
mov
out
ljmp
jl
repz
loope
cmpsl
mov
bound
mov
adc
lods
daa
mov
mov
xchg
out
test
lods
lods
int
not
adc
xchg
mov
sahf
fdivrs
test
shrl
mov
into
and
xor
mov
lods
scas
mov
call
pushf
aas
xchg
movsl
sub
rorb
or
mov
int3
faddl
lret
or
cmpsl
or
test
mov
lret
push
subb
adc
out
and
lret
out
movsl
call
inc
test
lea
test
dec
cmp
call
lods
scas
aam
and
adc
call
mov
mov
bound
mov
mov
jle
ret
lret
mov
xchg
rcl
jne
fsubrl
sbb
sbb
outsl
push
adc
mov
mov
sub
aaa
loope
rclb
push
out
jo
into
sahf
lods
into
mov
jb
scas
push
mov
leave
xchg
lret
ljmp
fisubrl
mov
pushf
movsb
cmp
pop
xlat
lods
pop
push
mov
mov
fisubl
mov
divb
sti
xor
push
adc
mov
fs
fcompl
out
insb
sub
pop
clc
cmpsl
mov
inc
rolb
xlat
jmp
mov
mov
into
mov
inc
add
dec
mov
pushf
cmpsl
dec
scas
shlb
in
aam
cmpsb
fldl
out
out
sbb
fsubl
shll
pop
fdivrs
jo
mov
pop
lods
sar
push
iret
jmp
cltd
and
cmc
scas
insb
dec
xchg
mov
jo
pop
pop
dec
push
fidivl
lods
sti
dec
cmpsl
movsb
out
test
je
adc
xchg
add
add
cltd
push
les
leave
out
mov
incl
inc
jp,pt
add
xlat
mov
sbb
sahf
adc
loope
push
mov
mov
cmpsl
daa
loope
in
mov
jp
lret
js
vmovaps
leave
mov
fldenv
lods
pop
mov
ret
les
cmc
mov
jle
push
or
call
lods
inc
ret
push
mov
repz
adc
mov
movsb
ljmp
mov
cs
movsb
movsl
or
xchg
cmpsb
sbb
enter
and
scas
mov
fildl
cmp
xlat
sti
fmulp
cmc
and
out
iret
vpsadbw
jmp
lret
movsl
aam
out
ljmp
scas
mov
rorl
or
xchg
mov
mov
pop
test
or
mov
loopne
int3
dec
orl
cwtl
xchg
fcoms
fcmovnu
mov
or
out
mov
push
loopne
lret
fsubs
aad
movsl
pop
iret
out
stos
mov
xor
or
dec
iret
push
sub
mov
sahf
sub
dec
fs
lods
xchg
cmpsl
pop
scas
push
cmc
pushf
rorb
neg
add
mov
insl
jns
into
out
call
test
rolb
mov
repnz
in
loopne,pt
xchg
repnz
jge
mov
shlb
or
sbb
sub
pop
aad
ret
icebp
and
js
clc
test
insb
clc
rcll
loope
repz
loopne
lret
fdivl
fsubrl
repz
fisttpll
outsb
cltd
hlt
add
ss
rcrb
loop
shl
xlat
fstps
andl
and
aam
test
ss
loopne
xlat
stos
std
push
iret
mov
mov
shl
aam
out
out
arpl
lods
cltd
and
lcall
xor
jmp
movsb
lret
sbb
stos
xchg
mov
fsubrs
popf
fs
pop
add
jmp
dec
jle
idivb
cmp
push
aad
mov
xchg
sbb
fisubs
pop
adc
sbb
mov
mov
adc
loope
test
rcr
out
aad
add
scas
call
incb
fadd
xchg
lret
mov
adc
push
mov
scas
cmp
neg
ja
mov
mov
enter
mov
jle
aaa
lret
cmpsl
push
rcl
ss
int3
lcall
xlat
push
and
cld
sbb
iret
cmpsl
scas
mov
repz
out
ficomps
je
jle
lahf
rcll
out
cmp
jo
mov
in
fsin
scas
es
fsubl
fmulp
movsb
xlat
daa
inc
mov
test
test
xchg
xchg
pusha
xchg
orl
popf
hlt
inc
mov
movsb
mov
test
rorl
adc
call
xlat
xchg
push
lds
sahf
fwait
cli
xchg
adc
push
jp
pushf
test
add
jmp
es
sahf
sub
lret
iret
jg
adc
repz
dec
shl
and
push
enter
cld
jne
push
rcll
lods
int3
scas
or
fndisi(8087
lret
push
imul
fcomps
adc
pop
push
mov
push
fimull
sbb
mov
inc
test
int3
mov
jmp
pop
sbb
shll
scas
stos
xchg
fsub
into
xchg
jmp
mov
sbb
fwait
mov
iret
adc
push
cmc
xor
int3
mov
lods
lock
lcall
lret
pusha
fisubl
clc
enter
scas
repz
icebp
and
repnz
ss
ss
rcrl
xor
inc
xor
cmpsb
ljmp
hlt
cli
inc
and
push
jb
shll
pusha
int3
sbb
into
lds
dec
stos
dec
lcall
inc
icebp
sub
repz
popa
or
stos
mov
and
int3
cltd
out
fcom
int
bound
fsubrp
aad
push
mov
fnstcw
leave
cli
pop
mov
stos
xchg
jae
dec
jo
fadd
fsubrs
sbb
cwtl
fwait
xor
jg
fcomps
out
stos
orl
jp
scas
stos
lret
mov
sbb
pop
mov
add
lds
pop
mov
stos
int
idivb
mov
xor
rcrb
lods
fldl
jmp
ds
cld
aad
adc
pushf
lahf
in
inc
lods
popf
xchg
test
dec
mov
fmull
out
mov
pop
mov
sbb
loop
xchg
pop
jns
dec
push
data16
test
bound
nop
lods
call
out
fwait
test
leave
adc
loop
mov
rcrb
jmp
jmp
scas
jo
push
aam
pop
nop
jae
inc
into
shrb
popf
gs
jl
lret
add
mov
xchg
test
out
mov
popf
lret
mov
inc
movsl
sub
adc
sub
cmp
movsl
dec
xchg
jmp
jne
mov
jo
or
lea
lods
int
push
clc
ret
xchg
sub
movsb
dec
pop
push
aam
sub
arpl
scas
loop
cmpsl
and
xchg
stos
mov
sbb
fstpt
daa
enter
test
loop
dec
add
dec
lret
pop
shlb
dec
in
mov
stos
loopne
dec
ljmp
out
pop
fldenv
fxch
cmpsl
adc
push
lods
mov
popf
mov
and
adc
cmpsl
mov
ret
mov
fsubr
test
lret
mov
add
lret
jmp
or
push
xlat
mov
in
mov
dec
or
into
aad
mov
clc
ret
adc
stos
in
pushf
leave
loope
jmp
push
add
fwait
lods
int
or
rcrb
cld
scas
popf
cld
je
popa
int
mov
lds
les
sub
loop
cmpsl
dec
xchg
ret
mov
repz
fcompl
jmp
fst
ret
sahf
or
shr
popf
ret
loop
xor
arpl
aad
out
mov
std
adc
movsl
test
insl
lods
mov
fs
cmpsb
dec
sub
xchg
mov
xchg
sbb
test
and
sub
popf
int3
sahf
adc
or
mov
loope
loop
scas
sub
mov
btsl
and
in
or
dec
mov
pop
sar
dec
push
imul
mov
xchg
mov
xlat
int
popa
dec
ret
jmp
stos
adc
movsb
lcall
shlb
dec
loop
push
add
mov
sti
ret
inc
fadd
int3
cli
mov
mov
ret
mov
fisubrl
int
mov
xor
movsl
sahf
fwait
enter
mov
or
fimull
out
lods
lods
jg
imul
xchg
sahf
cmp
ficoml
and
jecxz
jl
dec
mov
or
into
mov
stos
xlat
call
in
push
lret
xor
cmc
jmp
ret
data16
out
movsl
xchg
scas
mov
lds
lods
rcrl
sbb
aam
fnstenv
test
int3
rclb
mov
dec
mov
int3
mov
mov
mov
fdivrl
lret
lods
pop
call
or
into
out
jb
sbb
lds
enter
push
clc
and
js
push
scas
jmp
mov
test
loope
xchg
push
lret
fdivrs
jae
jbe
out
jmp
dec
mov
lods
mov
mov
push
in
mov
push
fcomip
pushf
test
sub
sub
ljmp
mov
mov
cmpsl
out
mov
sub
dec
aam
mov
fstl
sahf
xchg
sub
adc
aad
mov
ljmp
lret
lods
enter
popf
cmc
scas
mov
push
les
ret
lods
shl
jbe
sahf
sbb
call
leave
mov
push
fisubrl
fst
adc
pop
lods
nop
les
popf
xor
movsb
pop
jmp
mov
lcall
inc
stos
popf
mov
pop
fwait
scas
loope
push
repz
mov
cmpsl
xor
or
xlat
outsl
inc
mov
ficompl
push
jmp
test
lock
clc
adcb
pushf
xor
mov
orl
test
popa
shll
out
movsb
out
mov
sahf
fdivs
iret
into
mov
lds
mov
ljmp
sti
shrl
sti
shlb
or
int3
mov
cmpsb
adc
lods
adc
adc
int3
mov
test
out
call
cld
lret
jecxz
push
jp
in
test
and
out
out
out
or
fisubrs
cmp
mov
mov
js
lret
lret
les
aam
loopne
sti
out
rorb
test
push
mov
or
mov
lods
or
das
xchg
in
in
cld
loope
mov
ljmp
lods
ret
enter
fidivs
cld
scas
sbb
mov
add
lods
test
clc
hlt
adc
xchg
sub
aad
mov
loope
rorl
ljmp
iret
fcmovne
iret
jmp
mov
pop
mov
daa
aad
cmc
mov
cmpb
lea
call
repz
mov
stos
lods
dec
and
fwait
pop
mov
insl
mov
mov
int
fisubrl
mov
cmpsl
cmp
dec
rclb
lods
pop
in
loopne
mov
fsubs
test
ffreep
mov
or
mov
sbb
or
loop
cld
jno
mov
fisubl
mov
push
mov
jecxz
popf
sti
into
fcmove
mov
add
shrb
arpl
leave
push
stos
xor
divl
out
movsb
popf
cmpsl
leave
mov
pushf
ljmp
or
shrl
or
pushf
lock
mov
push
in
jmp
jl
xor
repnz
adc
mov
sub
mov
dec
rolb
scas
pusha
cli
mov
mov
lret
cld
cwtl
pop
mov
leave
adc
and
popf
mov
xor
cmp
mov
faddl
divl
mov
mov
int
ret
subl
mov
pop
lds
int
xchg
into
test
in
and
lods
pop
xchg
sti
jle
cli
sbb
movsb
mov
cmp
out
mov
or
lods
mov
adc
fcmovne
pop
xor
clc
popf
mov
pop
movsl
into
iret
fisubrs
ret
adc
fsubr
test
orb
sbb
mov
jl
xor
or
jae
push
sub
or
out
shlb
test
scas
sbb
scas
loope
pop
ljmp
dec
or
fwait
pop
out
icebp
inc
and
das
add
lret
in
sarb
fcmovb
add
lret
flds
sbb
mov
fistps
dec
ret
cmpsl
jns
int
fmulp
rcrl
out
xchg
jge
out
xlat
xchg
mov
int3
scas
xor
lods
imul
dec
adc
aad
sbb
fcmovu
mov
sub
lret
test
mov
mov
xor
into
rorl
mulb
insl
stos
cmpb
fldenv
int
add
and
addr16
pop
incb
fidivrl
sti
lret
int3
jmp
mov
push
enter
push
mov
movsb
sbb
cmpsl
mov
popf
iret
shrb
mov
in
ja
push
or
jae
stc
shl
out
stos
shlb
and
fidivrl
add
dec
into
mov
adc
dec
mov
add
lret
xchg
clc
test
lock
loop
fidivs
add
sahf
test
sub
outsl
mov
ljmp
pop
out
sarb
in
fldt
push
idivl
pop
ljmp
movb
push
mov
xadd
aam
loope
iret
std
sahf
sub
rol
loopne
sbb
sub
call
fwait
jmp
stos
xor
mov
dec
pop
mov
dec
cmpsl
clc
mov
pop
jg
push
repz
mov
sub
jecxz
fstps
shrl
pop
sbb
lret
sub
into
mov
out
pushf
in
lods
es
in
mov
inc
loop
mov
test
xor
fcmovb
mov
stos
mov
sarb
jg
mov
sbb
cld
into
punpckldq
mov
fisubrl
inc
repz
fldl
out
pusha
into
xchg
mov
sbb
mov
filds
mov
push
les
sbb
xor
out
fcompl
fisubrs
dec
push
mov
insl
int3
fdivl
dec
inc
stos
nop
inc
outsl
test
les
inc
mov
or
fidivs
into
cmpsb
jecxz
pop
inc
nop
pop
xlat
mov
xchg
pop
and
pop
movsb
lock
mov
mov
pop
loope
pushf
cld
or
call
or
fisubl
aam
jo
fcmovnu
adc
repz
call
ret
insb
fwait
lods
add
mov
shl
mov
ret
sub
inc
pop
sbb
lock
loope
mov
dec
dec
fisubrs
ds
insb
rsqrtps
stos
fisubrl
shll
mov
cltd
je
xchg
lock
cmp
mov
and
jb
fwait
mov
mov
popf
sti
sbb
lret
sbb
dec
mov
shrl
lret
loop
int
leave
shll
leave
dec
rcl
insb
mov
shll
fcmovb
mov
mov
mov
out
call
icebp
subl
notl
or
mov
aam
sbb
mov
ret
lret
push
and
ficomps
pop
push
mov
mov
movsl
mov
lock
neg
clc
outsb
jmp
xchg
clc
mov
mov
cltd
add
pusha
adc
lret
lods
movsl
cmp
fwait
jmp
popf
lret
cmpsl
cmp
in
cmp
cmpsl
mov
push
and
cmp
mov
cwtl
mov
push
jmp
addr16
mov
repz
jae
xchg
dec
stc
enter
scas
push
push
aad
push
rcr
adc
mov
ret
popf
lret
les
fdiv
mov
rcl
push
test
pop
dec
add
sub
xor
lds
aam
pop
adc
mov
mov
ret
les
dec
mov
push
fisubl
enter
and
or
sub
fdivs
mov
ss
ss
nop
test
or
out
iret
mov
cmpsl
arpl
sar
out
mov
adc
scas
out
mov
lret
dec
mov
push
mov
jmp
fdivs
rcl
call
or
lods
sub
loopne
mov
pop
cmp
mov
das
mov
mov
push
push
imul
inc
fidivl
xchg
stos
lods
mov
leave
lea
arpl
mov
lret
ret
sub
leave
fsubrs
or
popf
fwait
rep
dec
mov
mov
fdivrl
mov
out
push
mov
lods
sahf
mov
adc
frstor
icebp
out
inc
mov
sbb
ficoms
dec
pop
mov
call
leave
lret
out
loope
inc
mov
rcl
ficomps
mov
call
mov
mov
dec
mov
sbb
mov
mov
mov
mov
sub
aas
pop
loopne
scas
cltd
mulb
pushf
scas
xor
mov
pop
xchg
or
rcl
mov
sarb
inc
mov
int
inc
mov
lods
outsb
lods
push
add
mov
les
repz
mov
enter
jle
mov
xchg
fmul
mov
pop
lret
out
les
push
std
mov
in
movsb
mov
rorl
mov
or
cmp
shl
or
jae
negl
movsl
loop
popf
jb
movsb
ljmp
pop
hlt
dec
sti
lds
mov
mov
sbb
scas
int3
lds
adc
inc
mov
repz
repz
test
sbb
pop
adc
aam
fidivrs
out
scas
popf
and
mov
out
stos
inc
mov
mov
fucomi
in
mov
inc
xchg
mov
mov
stos
xlat
sahf
loop
mov
mov
out
sbbb
aaa
mov
dec
sahf
out
xlat
mov
test
or
push
out
aam
clc
test
testb
inc
mov
cmpsl
cmp
ret
call
jmp
sahf
cld
or
add
leave
fnstenv
inc
cmp
dec
push
pusha
sahf
iret
fwait
xchg
jle
push
sbb
push
adc
aad
mov
mov
inc
lock
cli
xlat
aas
ret
push
xchg
mov
push
mov
jle
paddusb
mov
fst
xlat
andb
movsl
lret
cmc
mov
jnp
sub
adc
jle
lock
jbe
test
and
nop
aad
iret
into
shll
clc
scas
or
int3
jmp
mov
cwtl
dec
dec
push
aas
mov
adc
mov
dec
cld
movb
cmp
test
fnstcw
adc
xchg
bts
mov
lret
mov
xor
cs
xlat
mov
fucom
mov
mov
pusha
lods
sbb
or
dec
aam
scas
lret
mov
lahf
jmp
ljmp
inc
stos
lea
popf
mov
or
int3
ror
int3
lods
and
scas
pop
icebp
inc
jecxz
mov
pushf
mov
lods
dec
mov
mov
shl
jo
or
sti
push
add
mov
xchg
sub
fisttps
mov
mov
loope
mov
test
jmp
ror
mov
mov
pop
sarl
stos
sub
lods
xchg
mov
mov
dec
inc
or
scas
aam
push
iret
jne
loop
fdivl
sub
bound
loope
and
aaa
sub
jmp
mov
mov
fnstenv
push
sbb
mov
mov
xchg
popa
push
push
shlb
fisubs
add
mov
xchg
int
test
repnz
or
je
sub
shlb
inc
mov
jmp
dec
arpl
fcmove
inc
or
enter
xchg
out
mov
cmpsb
add
sahf
loop
in
adc
jbe
out
lret
sub
dec
nop
fldcw
clc
lods
mov
out
xlat
cltd
mov
mov
fdivs
call
xlat
inc
das
fucomi
lret
rorl
leave
ret
dec
mov
rcrb
or
cmpsl
test
fdivl
call
or
int3
push
jmp
out
movsl
fxch
fs
out
leave
push
in
int
movsl
scas
out
mov
stos
push
or
pushf
fadd
lods
fstpl
push
jecxz
popf
cmpsl
push
insb
shlb
call
mov
mov
fisubrl
or
add
out
fwait
jl
mov
xlat
mov
cmp
into
call
test
xor
push
rorl
sahf
mov
rcrl
stos
inc
test
xor
scas
cld
fsub
cld
sbb
jmp
mov
ret
xchg
lods
stos
aam
mov
mov
cld
jge
mov
xchg
stos
xchg
add
shlb
sahf
pushf
int
rep
outsb
icebp
inc
push
out
fwait
iret
cmp
mov
popf
lds
cmpsl
movsb
aad
lea
les
lods
aaa
out
mov
sbb
mov
int3
mov
rcrl
push
lcall
nop
jnp
in
mov
sub
shlb
mov
mov
mov
test
ret
sbb
loop
or
ds
hlt
push
sub
sub
or
loope
pop
cmp
mov
fdivrs
mov
inc
jmp
out
jp
add
adc
scas
daa
mov
mov
popf
sbb
mov
mov
and
mov
mov
lahf
mov
sub
xchg
mov
jle
mov
iret
mov
mov
test
popf
int
mov
aam
fsts
sbb
mov
lds
mov
push
cmp
jb
mov
rol
mov
add
fld
call
outsb
jl
dec
int
imul
leave
movsb
popf
mov
dec
add
or
mov
pop
sbb
pusha
dec
mov
push
cmpsl
shlb
movsl
add
cltd
stos
jp
paddq
mov
fcomps
adc
sbb
leave
fwait
push
mov
dec
lods
loop
outsl
int3
mov
rcr
sti
loop
or
or
mov
in
loop
inc
scas
scas
lods
stos
test
mov
xor
or
xor
fmuls
mov
pop
or
fisubl
scas
es
lds
mov
xchg
xchg
or
repz
scas
jmp
cmp
fadd
xorl
sub
push
sbb
nop
lret
imul
ror
loop
push
dec
sub
aaa
jb
shrl
mov
test
xor
scas
inc
adc
mov
into
movsb
fisttpl
insb
lea
pusha
sahf
push
ljmp
in
xor
dec
push
cld
ljmp
lret
movsb
sahf
test
movb
cmp
bound
leave
popf
fdivs
fsubl
add
fcmovne
jmp
inc
dec
or
enter
repz
xlat
fstpt
pop
adc
fwait
lret
push
pop
mov
dec
pop
stos
inc
test
int
loopne
dec
sarb
shlb
leave
icebp
pop
loop
pushf
push
bound
sub
or
sarl
or
int3
repz
cld
sbb
int
in
leave
out
int3
xchg
mov
mov
fidivs
insl
sbb
mov
mov
les
mov
mov
out
pushf
call
and
int
or
jno
rcrb
loop
into
lods
inc
lret
loop
shl
scas
loope
cld
pushf
adc
iret
mov
rol
out
mov
mov
inc
mov
int3
lds
pop
add
ds
or
in
js
stos
mov
aad
mov
sub
lret
sahf
dec
mov
or
iret
out
mov
sub
or
sub
enter
xor
out
ret
sti
lods
mov
aam
shl
mov
lcall
lods
mov
sub
xor
mov
fidivrl
daa
cmpsl
pop
mov
mov
dec
loop
leave
xchg
mov
out
mov
ret
arpl
xchg
add
cltd
repz
xlat
test
and
xchg
push
int3
cld
movaps
or
in
loop
test
mov
lret
mov
jne
in
ds
nop
push
or
iret
mov
mov
mov
ror
cmpb
xchg
divb
outsb
adc
mov
lds
mov
inc
fbld
lret
aam
mov
out
fs
movsb
or
outsl
cld
mov
jl
aam
andb
lods
out
test
mov
js
push
mov
std
jno
or
mov
stos
jae
jl
or
aad
fpatan
bound
mov
je
sti
mov
and
shrb
dec
add
leave
pop
pushf
cwtl
pop
inc
xchg
mov
fstpt
scas
xlat
ret
fdivl
bnd
mov
loop
popf
cmc
test
out
xchg
xchg
mov
outsl
adc
cmpsl
scas
pushf
repz
add
cwtl
stos
rcll
jnp
mov
in
cmp
sbb
xor
stc
lcall
daa
and
mov
mov
aad
sti
or
sbb
xchg
jge
mov
outsl
push
leave
loop
mov
cmc
inc
sbb
mov
shl
mov
lret
pushf
mov
out
pop
jp
bound
and
cmp
sahf
orb
add
adc
test
bsf
mov
es
int
sahf
sahf
xor
repz
out
xor
inc
jmp
in
int
and
dec
lret
shrb
lods
lds
pop
inc
into
fcom
xchg
push
sbb
ds
mov
popf
cmpsl
jle
pop
mov
ret
adcl
mov
lods
mov
fisubl
lret
jae
mov
daa
sub
loope
lret
popa
mov
enter
ljmp
ss
scas
ss
mov
les
mov
mov
sbb
fsubl
push
outsb
cmpsl
imul
fcompl
xchg
imul
lods
pop
and
lret
mov
mov
mov
fidivrs
sub
cmp
sbb
popf
js
shlb
repz
jp
out
leave
enter
cmc
mov
mov
cmp
jne
in
pop
fiaddl
insl
fs
mov
ret
xlat
mov
shrb
insl
dec
mov
mov
push
test
xor
fmul
lds
fdivs
js
xchg
test
out
xor
mov
mov
inc
mov
aad
cmp
xor
test
mov
mov
mov
dec
xchg
push
sti
ljmp
shll
stos
shrl
fiadds
rcr
xlat
imul
xor
inc
sbb
mov
js
inc
mov
fiadds
cld
aad
in
mov
cmp
xchg
fdivrs
adc
movsl
xchg
pop
push
xchg
xchg
outsb
xchg
out
movsb
mov
cmp
jecxz
jo
cltd
sbb
mov
jbe,pt
adcb
mov
stc
test
loop
sbb
dec
js
xchg
int3
ror
das
movsl
jb
sbb
sahf
idivl
aam
mov
test
or
mov
xchg
mov
xor
mov
mov
cmpsb
gs
test
mov
cmpsl
mov
mov
insb
cmp
xchg
ds
repz
sbb
mov
jge
mov
fisubrl
xchg
fwait
es
xchg
mov
inc
xchg
add
xchg
xchg
mov
ffreep
stc
into
sub
jg
ds
and
xchg
shlb
outsb
xchg
arpl
fnsave
sti
cwtl
movsb
lds
gs
mov
fsubrs
sarb
test
hlt
ds
ja
lock
push
mov
loop
dec
sbb
mov
jecxz
sbb
repnz
stos
sahf
aad
xchg
push
call
mov
test
and
and
mov
fmull
mov
mov
fldenv
push
fwait
enter
mov
test
push
mov
adc
out
repz
mov
scas
ljmp
scas
test
pop
mov
sti
dec
mov
mov
sbb
jecxz
test
lret
into
sar
lods
mov
fadd
sahf
mov
xor
mov
outsl
mov
into
fsubrl
mov
push
shrl
movsb
not
stos
and
push
add
fisubrs
add
repnz
scas
fstps
jmp
mov
fnstsw
mov
pushf
and
popf
into
mov
dec
fwait
loope
pop
pushf
ljmp
aam
call
lds
loopne
lock
push
jmp
les
mov
stc
lock
sbb
mov
or
dec
stos
add
fwait
jnp
fldt
subb
roll
loop
fs
scas
loop
fiadds
mov
loope
sbb
test
test
mov
lret
ret
int3
xchg
je
icebp
pushf
test
sahf
fldl
jae
jno
sbb
out
add
scas
xchg
sahf
mov
push
push
mov
jmp
icebp
pop
icebp
adc
pop
dec
je
not
aas
xchg
movsb
adc
xlat
sti
jno
pop
jno
fnstsw
xor
leave
mov
push
stos
call
push
out
dec
mov
or
repz
out
xchg
aaa
mov
mov
cmpsl
jbe
mov
je
rorb
addl
enter
jo
std
popf
movsb
addb
mov
outsl
test
and
pop
xor
sbb
daa
test
popa
pop
adc
cwtl
or
push
push
xchg
push
add
xchg
pop
mov
mov
cmpl
cmp
xchg
push
std
dec
ret
nop
int3
scas
iret
push
arpl
enter
shr
sahf
les
jge
push
popf
sub
xchg
scas
test
xchg
idivb
or
sub
mov
add
jnp
arpl
leave
hlt
cltd
cmp
test
cmp
adc
hlt
mov
mov
fdivs
mov
jl
ds
cmpsl
nop
cpuid
mov
into
lods
mov
mov
iret
aad
mov
test
loope
popl
mov
movsl
xchg
stos
int
movsb
out
mov
repz
movsl
loope
mov
fucomi
fidivrs
fstps
stos
scas
ret
cmp
adc
xchg
lret
sahf
mov
data16
fcomps
inc
lods
popf
and
fistpll
loop
xchg
aas
cmp
scas
lret
sub
dec
and
je
scas
or
aam
mov
test
les
mov
dec
fstpt
sahf
aam
lods
ret
faddp
sbb
mov
cmp
adc
into
int3
ljmp
pushf
repz
cmp
int
cwtl
inc
out
insl
jmp
xor
ljmp
iret
sahf
scas
test
ficoml
mov
mov
mulb
sbb
lods
dec
loop
mov
fstps
push
int
stos
xlat
mov
test
aaa
dec
aad
repnz
or
mov
fstp
mov
or
lret
add
push
fsubl
xchg
jb
mov
or
aad
ljmp
fcompp
pop
mov
mov
call
int
sahf
xlat
mov
adc
leave
xchg
cmpl
or
mov
mov
insl
out
repnz
vpaddusb
jnp
out
movsb
mov
in
dec
je
cmc
loope
clc
test
stos
loopne
cmpsb
lods
sub
mov
mov
push
mov
cmp
cs
fbld
lods
stos
test
mov
cmpsl
aam
faddl
nop
cmpxchg
aam
lods
xchg
jg
ret
mov
sarb
cmpsl
add
mov
and
cld
lret
fwait
les
pop
mov
sahf
movsb
loopne
mov
xor
into
pushf
mov
pminsw
int
loop
jl
lds
xor
mov
into
fcmove
sub
mov
mov
or
bound
mov
pushf
push
call
lods
push
fcmovu
mov
sub
mov
jp
repz
fsubp
adc
sahf
bswap
test
mov
out
mov
adc
xchg
orl
lret
mov
mov
ss
mov
mov
mov
loop
lods
fst
loope
jb
scas
mov
mov
mov
repnz
add
addr16
jb
pusha
scas
popf
lods
mov
shll
fdivl
mov
into
popf
loop
scas
sub
les
fwait
out
insb
movsb
mov
or
aam
out
adc
sbb
fmulp
mov
lret
out
xchg
mov
cmp
clc
js,pt
in
lret
insl
add
test
push
jle
out
ljmp
fnsave
outsl
idivb
mov
mov
stos
popf
stos
addr16
les
mov
lret
fisubrl
mov
add
popf
jle
test
mov
jno
or
insl
push
pop
mov
push
or
mov
test
fdivrl
roll
mov
cmc
push
mov
adc
fsubs
mov
stos
jmp
mov
mov
rcr
push
mov
sahf
sub
shll
shr
rcl
popl
mov
test
mull
xchg
fwait
pushf
stos
mov
aam
inc
sbb
test
les
jb
lock
scas
jp
int
stos
test
dec
mov
mov
push
add
cld
xorb
jmp
imul
mov
cmpsb
cmp
add
gs
mov
fwait
mov
scas
mov
sbb
daa
adc
jb
lret
mov
push
out
repz
mov
fwait
ret
iret
es
shll
dec
pop
or
mov
cli
cmpsb
sbb
out
sbb
shll
lahf
nop
pop
dec
test
mov
xchg
cli
lods
scas
pop
test
inc
enter
sbb
mov
stos
nop
push
iret
mov
loope
add
pusha
das
push
test
into
xchg
jno
addb
rcrb
push
stc
or
add
push
fld
mov
bound
out
dec
call
leave
jmp
call
lds
pushf
mov
mov
lret
inc
sub
dec
repz
bound
iret
mov
les
cmpsl
add
enter
fidivrs
loope
test
outsl
sti
mov
cmpsb
xchg
push
push
push
or
add
lret
push
fidivl
fdivl
clc
sub
ficoms
fs
shr
outsl
loope
loop
daa
mov
lods
mov
mov
and
mov
imul
add
rcl
test
mov
mov
or
shll
jno
cmpsl
enter
mov
lret
scas
mov
mov
adc
fcomp
fwait
scas
cs
jae
adc
fisubrl
movsl
jns
int3
push
inc
loop
movsl
imulb
popa
inc
stc
sub
pop
lret
sti
popf
sbb
movsb
loope
lods
push
cltd
mov
test
loop
out
arpl
vaddsd
cltd
aam
xor
add
dec
xchg
cmp
into
ficompl
or
mov
xchg
ds
adc
stos
or
adc
aad
repz
mov
and
scas
and
fucomi
loope
mov
lret
fisubrs
incb
fsubr
jnp
aad
or
das
int
mov
sbb
mov
mov
les
mov
lret
ret
mov
sar
fwait
inc
sbb
lods
movsb
mov
lret
movsb
out
mov
into
mov
ffree
call
pop
push
idiv
mov
fndisi(8087
fidivs
push
aad
inc
int3
mov
sbb
mov
faddp
fisubrl
pop
rorl
pop
mov
scas
adc
shlb
mov
fcmove
lret
iret
adc
ret
inc
lcall
popf
xchg
push
push
call
shll
test
dec
lret
dec
scas
jp
fidivs
les
ficoml
ss
xchg
scas
stos
cld
int3
aad
sbb
push
imul
fcmovu
push
loope
adcb
test
call
fs
xchg
xchg
repnz
and
mov
loop
lods
enter
scas
lret
cs
mov
mov
lods
out
rorl
mov
int
rorl
fldcw
iret
sahf
shrb
into
adcb
mov
lret
cmc
sahf
and
or
test
push
add
fildl
data16
lcall
popf
mov
mov
push
rcrb
xlat
inc
mov
jb
mov
aaa
lods
adc
pop
into
ror
inc
imul
fwait
stos
mov
fisubs
dec
movsl
scas
adc
xchg
add
clc
orl
jb
rcl
mov
repnz
adc
idivb
mov
lods
mov
les
int3
jmp
into
pop
xor
or
mov
arpl
mov
leave
mov
insb
scas
xor
scas
mov
mov
push
popf
es
call
or
mov
les
or
rorb
popf
out
xor
xlat
inc
push
stos
xchg
xchg
mov
int3
dec
push
dec
mov
add
sbb
cmpsl
sarl
into
cltd
add
mov
and
lods
bound
in
addr16
ds
lret
scas
stos
and
xor
lcall
hlt
and
mov
popf
lods
jne
inc
scas
and
or
and
sbb
sbb
adc
les
in
loop
aam
cli
gs
fsubs
or
lods
mov
mov
icebp
dec
dec
lds
cltd
mov
rorb
pop
aad
mov
repz
jnp
setge
shr
lods
fcmovnu
out
ffree
test
out
cmp
and
xor
sub
imul
fisubrl
adc
addr16
mov
mov
int3
lret
mov
xor
add
mov
jo
fcmovnb
iret
xchg
lret
sahf
js
mov
pop
adc
mov
fnstsw
cmpsl
adc
rcrb
pusha
lahf
adc
roll
cwtl
xchg
xchg
les
fists
les
ljmp
daa
loope
lcall
mov
sahf
cltd
shlb
popf
add
mov
arpl
fwait
daa
scas
jge
rol
pushf
mov
push
fcmovu
mov
fisubs
sub
lret
mov
clc
sbb
pushf
adc
loop
mov
cmp
jmp
leave
out
sub
or
push
mov
xor
push
rep
mov
dec
leave
mov
jne
lret
fisubrl
sbb
fldcw
or
xchg
repz
xor
pop
mov
pushf
mov
lods
mov
dec
push
repz
loope
out
dec
push
ds
adc
out
repz
push
iret
dec
adc
aam
daa
mov
int
xor
cmc
mov
test
add
dec
test
xchg
push
shl
push
lods
pop
adc
test
pushf
clc
adc
leave
and
jmp
add
mov
jns
pop
jo
sub
loop
out
sbb
mov
push
stc
fisttpll
sub
aam
inc
jns
adc
loope
mov
loope
inc
mov
out
fwait
or
mov
push
lods
lret
imul
fidivs
mov
les
jg
mov
std
xor
cmp
adc
lods
ficoml
aad
repnz
sahf
mov
sbb
mov
jg
fcoml
rolb
xlat
lret
repz
dec
push
mov
xchg
mov
fimuls
push
pop
out
jb
fwait
loope
aaa
mov
fsubl
jmp
ret
push
xchg
adc
nop
push
and
into
ret
cmpsl
ror
fimull
adc
lods
mov
in
repz
mov
adc
shll
xor
aad
dec
lods
shll
add
loope
mov
mov
pop
shl
dec
stos
out
int
cmp
aaa
mov
enter
test
jb
mov
ljmp
ret
xor
jg
mov
inc
dec
jmp
ljmp
adc
lods
test
or
jae
cmpsb
lret
push
mov
lret
mov
mov
cmpb
sarb
sahf
rorb
fucomp
int3
stos
lods
push
mov
loope
fdivs
test
ret
into
sbb
fnstenv
fwait
or
xor
out
popf
popf
mov
mov
test
lret
fnstenv
mov
fcmovbe
int3
mov
ljmp
lods
push
lock
pop
xor
push
lock
aam
shrb
cmpsl
ds
test
push
ljmp
int3
mov
cwtl
ljmp
int
bnd
sahf
fwait
xchg
pop
sbb
mov
addr16
mov
in
fadd
xor
les
xchg
pop
xlat
mov
inc
out
fwait
in
stos
push
loopne
clc
shll
sbb
popa
clc
aad
in
stos
mov
push
popa
outsb
mov
mov
adc
loope
mov
or
adc
sub
test
ret
aad
nop
mov
mov
test
push
or
mov
scas
out
clc
push
cli
mov
sbb
or
pushf
repz
insb
in
mov
ror
cmpsl
sti
rcrb
add
test
aam
aad
fcomps
repz
loope
xlat
and
sarl
or
cmp
sahf
lret
add
test
je
xor
mov
mov
mov
cs
sub
sahf
out
lds
dec
test
out
fsubs
imul
adc
mov
bound
lret
mov
fstpl
ret
stos
cmpsl
enter
repz
sbb
dec
jae
cld
insl
adc
ffree
or
inc
or
mov
mov
xchg
into
shll
lea
mov
jecxz
stos
sarl
aad
push
rolb
dec
sbb
mov
lret
inc
lret
or
arpl
push
fisubrs
inc
mov
ret
xchg
sbb
xor
sub
test
ficomps
loop
lods
les
scas
fcmovnb
xor
xchg
lret
xchg
pusha
sub
mov
adc
xor
cwtl
sub
cli
fidivs
lret
out
into
fdivs
fnstsw
mov
mov
add
loope
sub
ds
test
stos
cld
fdivl
add
int3
cld
test
xchg
ss
sahf
add
fcomi
sub
pop
aam
lds
loop
clc
aad
fildl
lods
jecxz
fcom
mov
iret
mov
and
dec
hlt
mov
ret
xlat
mov
mov
shlb
lods
aad
movsb
mov
lds
push
mov
mov
enter
pushf
xor
rolb
movsl
cmp
pop
bnd
ljmp
lock
in
sbb
xchg
adc
sbb
adc
sbb
leave
mov
andb
lcall
dec
and
loope
shl
or
ljmp
cltd
rcrl
loop
mov
scas
mov
ret
sarl
sbb
outsb
leave
mov
ret
lock
jp
popa
cmpsb
pushf
mov
imul
or
adc
cmpsl
scas
enter
jne
in
ds
shlb
push
mov
fadd
mov
cmp
inc
pop
lock
loope
icebp
cmp
dec
movsl
ret
sub
aas
inc
xchg
add
sbb
pop
lea
cld
call
andb
cmpsl
mov
scas
ret
fwait
adc
mov
adc
aam
push
out
and
sbb
cli
lods
aad
xchg
lret
ror
add
add
movsl
call
cmpsl
ja
cld
les
fs
jb
and
add
sbb
fsubs
outsb
cltd
mov
and
cmp
stos
leave
sbb
int3
test
and
add
mov
sbb
mov
test
popf
or
lods
call
or
int3
lock
jg
aad
adc
xchg
movsl
or
cmp
mov
rcr
push
and
cmpsl
scas
stos
aad
fcmove
and
clc
jnp
fmul
and
adc
sahf
push
sbb
test
xchg
scas
out
mov
int
mov
stos
int3
into
out
xchg
fisttps
iret
sub
adc
mov
out
dec
xchg
mov
loop
jmp
xor
popf
mov
add
fmulp
inc
mov
into
iret
rcr
dec
push
xchg
rorl
adc
lds
andb
popf
fwait
scas
pushf
mov
xchg
scas
aam
loope
movsl
xlat
mov
mov
sbb
lods
sbb
scas
mov
mov
cmpsl
nop
es
mov
shrb
push
xchg
xchg
lret
xor
pop
scas
jle
lea
mov
xlat
mov
jbe
xor
xor
int
push
cmpsl
mov
inc
out
cmp
in
xor
shrb
jecxz
shll
cs
adc
xlat
leave
movsl
xchg
pop
test
xchg
ljmp
into
fsubr
lcall
call
out
iret
mov
enter
sbb
into
ret
rolb
call
xor
scas
scas
popf
lods
mov
mov
loop
outsl
mov
sub
mov
aam
push
aas
rcl
fadd
leave
cmp
xchg
or
lods
sahf
daa
and
loop
cmpsb
stos
and
sbb
sbb
fildl
rorb
popf
stos
insl
lock
aad
ficoml
faddp
pushf
mov
mov
or
cmpsl
mov
mov
int
lds
mov
mov
xor
mov
iret
add
stos
int
jle
fwait
pop
orb
mov
xorb
mov
cmp
bound
lret
cmpsl
sbb
into
int3
inc
xchg
jnp
loope
aam
mov
xor
scas
cmpsl
movsl
xor
sub
mov
sahf
mov
cmpsl
mov
imul
fisttpl
sbb
fstp
pushf
jo
fcompl
mov
ja
sahf
jnp
test
lds
mov
xlat
and
dec
repz
loope
push
leave
mov
mov
pop
pushf
repz
sti
stos
mov
push
insl
xchg
lods
test
das
lret
outsl
test
popf
aam
or
adc
mov
mov
cs
iret
mov
loop
into
pop
repnz
shlb
loope
fcmovnbe
mov
cmc
movsb
and
or
fxch
mov
xchg
shlb
push
jo
mov
jge
adc
out
mov
mov
lret
int
popa
or
mov
mov
mov
mov
or
cmc
aam
and
loope
stos
repz
loope
xor
call
lods
push
popa
xchg
cld
test
jecxz
fisttpl
pop
add
jg
mov
xchg
dec
add
xchg
xchg
sbb
popa
out
mov
cmpsl
psubsb
lods
faddl
fldcw
xchg
lods
adc
stos
fisubrs
pop
ret
mov
mov
mov
stos
rcrl
mov
mov
mov
fbstp
fiaddl
lods
jmp
mov
ljmp
push
shll
sub
xchg
out
fsubrs
out
test
mov
cmpsb
push
repnz
mov
push
jo
adc
mov
mov
mov
enter
mov
ret
cmpsl
lods
mov
mov
sbb
imul
pop
out
pop
out
mov
js
loop
rorl
in
aad
scas
aad
lds
xchg
xor
rcl
test
insl
inc
int
mov
mov
ret
test
mov
lock
cmp
ljmp
aaa
shrb
fstpt
mov
mov
fnstcw
add
enter
les
xchg
lock
mov
push
mov
cmpsl
fidivl
iret
stos
out
data16
pop
mov
rcrb
push
scas
les
out
stos
jne
ljmp
mov
mov
xchg
sbbb
adc
sub
inc
dec
jecxz
cmpsl
out
ss
add
scas
lods
pop
dec
mov
push
pop
mov
aad
adc
cmc
mov
mov
sbb
xchg
mov
les
cli
movsl
popf
pop
fwait
cs
fmuls
pop
scas
inc
test
andl
stos
sub
mov
pop
cmp
mov
jl
int
cmpsb
push
out
repz
mov
cld
rcl
je
mov
imul
cld
int3
je
addr16
jae
and
inc
xchg
movsl
inc
insl
jge
in
and
imul
hlt
mov
mov
aas
mov
lret
out
fldt
aas
not
add
jg
mov
jbe
push
fisubs
loope
shlb
out
mov
pop
loop
hlt
int3
or
aam
push
sub
pop
int
test
loopne
arpl
cltd
push
lea
movsl
out
adc
mov
sbb
aad
mov
lret
notb
out
lods
jbe
loope
lds
int3
or
stos
push
sti
shl
and
stos
test
shlb
sbb
ljmp
fstps
push
sub
fwait
and
mov
out
or
popf
cmp
jno
push
lods
loope
jg
frstor
lods
xchg
loop
nop
xchg
jne
jns
sahf
dec
dec
fisttpll
or
stos
call
mov
call
aam
data16
hlt
into
mov
pop
jo
fimull
fidivrs
sub
lea
cmp
movsb
xchg
bound
lahf
enter
lret
mov
jo
clc
and
mov
cmpsl
adc
int
fwait
mov
das
fnstsw
xchg
popf
test
bound
pop
in
inc
popf
loopne
push
lock
pushf
pop
or
out
lret
mov
pusha
cmp
xlat
inc
xor
mov
into
das
dec
or
sbb
pushf
mov
sbb
out
rclb
pop
div
divb
call
push
fsub
cmpsl
mov
jmp
mov
test
dec
sub
fwait
sbb
stos
mov
pop
leave
test
pop
fiadds
mov
insb
loop
std
leave
sub
fcmovu
mov
cmpsl
popf
test
mov
daa
rorl
movsb
adc
ficompl
mov
stos
sahf
sbb
sub
bnd
mov
mov
loop
ss
and
adc
xor
and
adc
fsubs
add
mov
cmp
inc
sub
adcb
repnz
les
loope
aas
push
call
xchg
out
lock
mov
out
test
sbb
fcoml
xor
mov
adc
leave
lcall
add
popf
mov
mov
mov
push
or
cmp
loope
jo
dec
lcall
cmp
mov
inc
jg
fmul
rep
into
mov
test
mov
fistpll
push
adc
in
dec
scas
rclb
fwait
mulb
pop
mov
mov
rcl
fdivrp
out
imul
add
popa
call
sbb
or
adc
push
fdivrp
std
xchg
cmovb
jl
hlt
add
movsl
jg
out
jne
mov
jbe
call
cmp
pushf
mov
adc
xchg
push
push
mov
enter
xchg
repnz
lret
stos
mov
xchg
ja
sub
cltd
jle
out
roll
sub
sbb
lret
scas
ljmp
jge
pop
cld
mov
lcall
mov
daa
adc
pusha
jnp
rcl
add
pop
pop
fildll
out
movsl
roll
mov
mov
or
lcall
adc
cld
mov
shll
dec
fwait
shrl
rorl
popf
int
xor
roll
dec
fwait
stos
xlat
add
fucomp
scas
insb
mov
lahf
scas
adc
xchg
or
mov
mov
int3
pushf
push
pop
movsb
jge
fcmovnu
ret
mov
cmp
or
int
aad
iret
xchg
mulb
push
xchg
xlat
mov
stos
mov
repz
addr16
inc
or
fstpt
mov
in
lods
jle
stos
inc
inc
add
push
jle
mov
ret
push
mov
leave
aaa
call
popf
inc
xchg
lahf
jl
cld
cmp
pushl
sub
mov
xchg
xchg
add
mov
stos
dec
push
inc
pushf
loopne
cwtl
rorb
lock
fisubrl
ja
dec
sbb
movsl
loop
jg
xchg
sbb
mov
xchg
jnp
xlat
mov
lret
idiv
dec
ror
bound
mov
mov
or
out
outsb
leave
dec
mov
fdivs
push
sti
enter
fnstenv
cli
ljmp
mov
push
test
push
lods
test
mov
int
in
mov
dec
aaa
inc
mov
bound
bound
in
mov
push
pop
fdiv
push
aam
mov
fisttpl
jne
iret
push
in
movsl
movsb
lods
mov
rcrb
pop
aad
lret
rcll
jp
enter
xor
loope
sub
in
lret
cli
inc
or
lods
push
sub
mov
fldenv
cli
dec
test
cltd
mov
adc
mov
fs
cmc
es
sub
pusha
mov
aaa
sub
faddp
mov
xchg
test
push
adc
movsb
out
rolb
movsb
adc
addr16
mov
mov
rcrb
iret
shrb
int3
ficomps
call
xchg
fiadds
cmp
dec
xorb
xchg
lods
stos
mov
in
test
mov
mov
sbb
mov
xchg
mov
mov
xor
test
int3
add
inc
cmc
scas
lret
test
ret
dec
es
jbe
sbb
rcl
test
lahf
nop
cmp
cmpsl
stos
jmp
fimuls
test
ljmp
mov
in
inc
xchg
jo
out
cmp
fiadds
xchg
xchg
leave
fcmovu
pushf
das
lock
push
ja
test
mov
and
or
scas
movsl
xor
jle
mov
cmp
mov
push
mov
mov
aad
pop
sub
or
cmpsl
sbb
mov
add
data16
dec
rcrb
mov
lahf
stos
sbb
aad
fsubs
or
into
ljmp
fyl2x
mov
sbbl
cmp
inc
xchg
sti
pop
add
fisttpll
into
mov
cmpsl
lret
ficomps
sahf
imul
cmp
cmp
sub
adc
loop
mov
mov
scas
dec
jecxz
mov
lods
loop
loop
les
ret
mov
rcl
xchg
and
fnstcw
out
scas
pushf
frstor
cmp
pop
imul
cmpsl
lods
icebp
mov
inc
enter
repz
int
movsb
lahf
leave
out
movsl
lods
jp
adc
test
mov
test
scas
roll
int3
mov
ljmp
rcrl
daa
lock
mov
sahf
rolb
repz
and
fnstsw
loop
mov
aad
sahf
or
lods
cmpsl
movsl
mov
xchg
mov
xchg
mov
or
fadd
dec
or
test
lea
movsl
mov
popf
sub
clc
movsb
insb
inc
mov
pusha
fcmovbe
js
jne
xchg
jnp
stos
dec
adc
mov
or
cmpsl
mov
loope
loop
stos
out
mov
fcmovnb
or
das
cld
hlt
add
mov
lcall
jbe
ret
aad
movsb
and
sahf
add
lds
in
scas
xchg
mov
ret
out
jns
xchg
les
xlat
push
loopne
ja
mov
xor
jg
xor
xor
rcrl
dec
ret
mov
loop
out
mov
in
jg
dec
and
or
sahf
leave
test
xchg
fistpl
jnp
jmp
dec
pop
out
mov
ficoml
cmp
out
or
xchg
cmp
shrb
mov
mov
clc
out
repnz
lods
sahf
scas
repz
and
and
sar
dec
adc
lds
popf
aad
scas
scas
leave
vmovq
ss
stos
mov
push
lods
mov
loope
push
fcmovb
mov
iret
call
sarl
adc
or
add
push
dec
enter
nop
dec
dec
fcmove
loope
cmp
fidivl
add
dec
leave
bound
mov
aaa
movsl
aas
mov
mov
sbb
ret
iret
jecxz
into
pop
sub
xor
mov
popf
pop
jl
and
iret
lods
mov
lret
mov
xor
clc
scas
xchg
dec
jle
das
fisttps
cmp
sub
lret
test
dec
xchg
jl
adc
push
int3
lea
mov
mov
or
sahf
lret
test
or
fdivl
loop
add
lods
shr
push
popf
loope
mov
leave
movsl
lret
rorw
aam
xlat
les
or
push
sbb
lods
mov
xchg
push
data16
data16
push
lods
repz
lods
adc
mov
mov
mov
sarb
bound
into
loop
pushf
sbb
xor
icebp
lds
cmp
or
cmp
jmp
nop
or
mov
getsec
iret
lret
mov
int
inc
sub
enter
lods
into
xor
test
movsb
and
jnp
out
or
mov
inc
mov
ret
imul
lret
or
test
xchg
call
scas
bound
push
mov
loop
icebp
ror
popa
or
mov
mov
decb
repz
jmp
fidivl
mov
enter
divl
cmpsl
mov
lret
adc
mov
adc
cltd
jg
testb
ficoms
xchg
nop
out
scas
mov
mov
into
xlat
lret
gs
ret
imul
psubusw
mov
shll
xchg
and
mov
lret
fdivs
cmp
mov
push
adc
int3
loop
mov
fwait
inc
lods
rorb
aam
cltd
mov
inc
loope
xchg
int
adc
test
dec
push
mov
hlt
mov
mov
mov
mov
xchg
lods
fidivrs
cltd
or
iret
jmp
test
sbb
mov
xchg
fdivl
lods
movsl
gs
xchg
mov
jg
test
fxch
mov
add
mov
stos
dec
stos
fildl
out
and
jl
insb
dec
mov
int3
dec
sti
mov
jnp,pt
dec
mov
pushf
mov
lods
mov
out
add
xchg
add
mov
es
xor
cmp
lahf
stos
mov
sbb
leave
mov
movb
shrl
mov
fimuls
popf
mov
pushf
xlat
inc
cmp
sbb
sbb
lds
xchg
cmp
cld
addl
shrb
shll
xchg
sahf
pop
adc
mov
mov
xlat
fisubrs
inc
lods
mov
scas
mov
incb
jbe
popf
das
movsl
mov
loope
int
jg
cmp
bnd
mov
loop
enter
aam
jnp
mov
or
ror
adc
adc
xor
mov
ljmp
adc
mov
popf
xor
xor
out
ret
mov
mov
repnz
in
xlat
scas
cmpsb
stos
or
push
repz
sub
or
inc
int3
xchg
iret
out
mov
push
adc
icebp
add
adc
mov
mov
test
sub
dec
ljmp
inc
call
xor
int3
out
stos
mov
pusha
cwtl
lret
lods
loope
adc
ret
pusha
aam
int3
inc
loop
mov
lods
mov
lahf
sti
jp
movsl
mov
xor
mov
mov
repz
mov
lock
rcl
or
xor
mov
pushf
fisubl
repnz
call
jmp
xor
fcmove
mov
add
scas
sbb
movsl
or
int3
push
jns
out
fadds
repz
jmp
shrl
loop
xlat
adc
outsl
jmp
ss
mov
orb
movsb
fcmovbe
cmc
test
xchg
add
xchg
fwait
scas
dec
iret
enter
call
ror
scas
adc
sahf
lods
adc
out
jnp
lea
mov
movsl
mov
int3
mov
or
lock
or
ffree
push
mov
adc
out
push
xchg
ljmp
jge
clc
sar
add
sbb
lret
cmc
sub
les
push
mov
cmp
jns
loope
out
ficomps
iret
lods
icebp
fidivrs
pushf
icebp
arpl
inc
and
mov
push
mov
xlat
bound
jmp
test
nop
push
test
fldt
cmpsl
ljmp
dec
inc
mov
xor
cli
stos
iret
ret
mov
fnstsw
or
fldcw
sahf
mov
xlat
int3
add
clc
ret
add
mov
mov
movsb
lret
sbb
ljmp
dec
dec
push
mov
jl
sti
int
mov
cmc
fistl
inc
xor
lods
popf
cs
ret
jnp
fmuls
lods
cld
dec
insl
roll
mov
pusha
add
call
enter
loop
adc
ret
lret
iret
fldcw
stos
dec
fisubrs
xchg
ret
mov
cmp
int3
daa
xchg
sbb
out
push
ficompl
pop
imul
les
lock
loop
adc
int
cmpsl
rcrl
xlat
ret
mov
fucompp
mov
adc
or
xor
xchg
scas
cmpsl
jns
pushf
pop
mov
movsl
les
fisubs
ret
in
and
xor
cmpb
or
lods
mov
mov
push
int3
mov
push
jmp
push
fwait
into
pop
mov
sti
movsl
jbe
xchg
mov
dec
mov
mov
out
mov
test
test
out
jl
mov
fwait
sbb
adc
mov
mov
mov
int
cld
dec
and
lahf
insl
and
jmp
into
enter
add
in
mov
inc
push
xor
mov
ror
mov
aad
in
imul
xchg
jl
cld
add
int3
lahf
dec
dec
sti
mov
test
fcomi
hlt
mov
rorb
sar
mov
lret
out
stc
test
out
scas
pop
xchg
lods
rcr
in
ja
dec
inc
fmulp
jecxz
clc
or
adc
mov
in
jns
dec
mov
test
mov
push
out
mov
xchg
int
out
or
popf
int3
lock
icebp
das
and
push
leave
mov
and
fdivrs
fwait
xchg
push
mov
fistpl
out
push
mov
loop
jbe
push
cmpsl
mov
xchg
jnp
and
mov
dec
lret
and
mov
mov
loop
rcrb
lods
pop
adc
cmpsl
shr
mov
jo
fcmovbe
loop
movsb
lods
out
mov
cmp
inc
shll
nop
fidivs
scas
dec
or
enter
cltd
or
mov
sub
dec
adc
repz
xor
jno
inc
sbb
fldl2t
lods
rcll
loopne
and
sahf
lods
imul
clc
enter
mov
xor
cmp
movsb
adcb
movsl
inc
bound
pushf
ror
jl
mov
es
outsb
loop
push
push
test
repz
push
mov
fldenv
loope
fwait
xlat
ss
cmp
test
loope
mov
scas
lds
ja
popf
vpminsw
cmpsb
fstps
pop
xchg
mulb
out
cmpsl
aad
xchg
lds
mov
lret
mov
push
jg
mov
sub
enter
movsb
shrl
mov
cmc
xor
test
pop
cmp
jecxz
stos
divb
lods
xchg
ret
and
mov
into
sbb
scas
test
mov
enter
xlat
iret
test
add
mov
sub
stos
sarb
mov
mov
ret
jnp
sbb
jb
sahf
enter
lds
add
mov
rorl
mov
mov
jae
jp
pushf
scas
int3
jl
subb
subl
test
call
push
mov
lock
inc
jg
shl
test
push
mov
xor
mov
add
les
mov
mov
lret
jnp
stos
lret
in
out
mov
xchg
lret
movsb
mov
arpl
iretw
xor
mov
push
jne
fdiv
cmc
adc
out
sub
or
mov
inc
fucom
push
loop
add
push
xor
pop
into
fstpl
inc
cmpsb
jmp
mov
out
sbb
mov
cwtl
or
jmp
je,pt
sub
pop
dec
aad
int
les
sub
jo
mov
into
mov
enter
inc
int
frstor
mov
mov
out
pushf
jmp
xchg
insb
fidivrs
test
xchg
sub
ret
or
lret
aas
mov
mov
loope
icebp
mov
sub
dec
mov
push
jle
mov
test
into
shrl
cmc
xlat
xchg
sub
mov
lret
jge
sti
repz
mov
test
add
lock
cld
lret
rorb
call
fcmovnbe
mov
mov
dec
mov
or
popa
mov
jns
movsb
fidivl
clc
mov
add
stos
popf
lods
fs
mov
cld
mov
adc
into
out
lds
notb
stc
adc
sbb
gs
jg
in
loope
mov
mov
jb
stos
mulb
iret
repz
dec
lods
sub
orb
cmc
test
in
jle
ret
int3
mov
mul
add
test
out
into
outsl
decb
stos
movsl
clc
pusha
or
mov
cld
xchg
leave
ret
enter
lret
mov
jns
divb
or
lds
stc
ficomps
mov
cmpsb
xor
mov
or
fldcw
mov
xchg
test
xor
lods
sbb
push
mov
repnz
es
xchg
mov
clc
push
sbb
aam
fstpl
sbb
cmpsl
sbb
xor
fsubrs
bound
mov
push
fidivrs
int
ficompl
repz
mov
out
scas
aam
jl
adc
shr
fdivr
sti
or
stc
mov
cmpsl
std
fiaddl
or
mov
lret
fisttpll
adc
fldenv
push
add
jp
lahf
in
leave
push
test
mov
push
xlat
ret
rcll
mov
xchg
mov
mov
mov
mov
popf
repz
jecxz
push
mov
clc
test
les
out
or
mov
aam
lods
adc
sub
dec
in
lods
or
movsl
out
cmp
push
rorl
mov
rcrl
mov
add
inc
mov
mov
out
popf
or
aam
cmpsb
pop
bnd
aad
dec
jle
insb
in
in
lret
addr16
mov
enter
adc
out
mov
mov
jp
in
subb
in
jmp
test
dec
dec
in
fs
hlt
loopne
or
les
scas
lahf
add
push
sarl
daa
mov
repnz
sahf
or
xor
lds
mov
cmpsl
mov
aad
nop
scas
lret
add
xchg
lods
stos
les
push
mov
cld
mov
les
ds
mov
fcoml
mov
or
into
sahf
dec
iret
repz
mov
sub
push
fmulp
dec
mov
scas
adc
movsb
loop
outsl
leave
dec
scas
or
sti
lods
loope
movzbl
sahf
lds
ss
cmp
pop
mov
scas
mov
stos
into
or
fwait
pop
lods
dec
push
xor
mov
or
daa
mov
lret
pop
cwtl
xchg
inc
jl
mov
fidivl
ret
xor
sbb
mov
dec
cmp
dec
into
stos
jno
sbb
ja
mov
jl
push
mov
mov
xlat
scas
cmp
orb
mov
movsb
sub
jp
andl
or
fsubrl
mov
inc
xchg
mov
cmp
xchg
jp
mov
loop
and
bound
scas
aad
push
or
pushf
sub
bound
sti
aad
mov
mov
scas
pop
mov
mov
mov
daa
lret
test
gs
dec
mov
mov
lret
stos
xor
xchg
push
movsb
and
mov
iret
cltd
mov
xchg
pop
loope
ficomps
lods
xor
outsb
into
mov
fwait
mov
fwait
or
or
fdivp
lret
imulb
movsb
je
out
mov
cs
rep
add
into
int3
leave
mov
mov
stos
aam
mov
loope
ljmp
popf
mov
fwait
pusha
loop
bound
aad
aam
sti
cmpsb
sti
push
sub
and
fst
aad
mov
rcrl
sub
sub
jg
cltd
mov
lret
cmpsl
mov
push
mov
dec
into
push
xchg
jmp
mov
stos
add
adc
or
stos
pushf
pushf
test
movsl
mov
mov
mov
add
add
scas
popf
or
mov
xchg
std
fwait
loop
push
ljmp
lret
enter
imul
add
in
or
fisubrl
pop
ffree
daa
shrl
xchg
or
mov
sti
mov
pushf
cltd
sub
mov
dec
mov
scas
fwait
mov
and
sub
ss
out
shl
xchg
out
and
lods
scas
into
insb
pop
je
xchg
and
pushf
les
push
adc
out
xchg
mov
bound
push
add
outsb
lods
sbb
push
les
popf
cmpb
xlat
call
out
pushf
xchg
repnz
into
mov
loope
aam
out
movsb
outsl
add
js
fcomip
push
or
lods
cmpsl
dec
push
mov
xchg
mov
mov
fsubrl
sahf
out
aas
and
out
add
pusha
fcmovnbe
shrl
nop
dec
push
pushf
push
lods
cmp
xor
imulb
adc
shrb
cmpsl
mov
xor
loop
sahf
popf
mov
push
ret
mov
test
dec
out
les
vpmacsdd
fucomi
scas
fmuls
seta
das
sahf
dec
sbb
jl
mov
add
imul
rorl
lods
fisttps
xchg
xchg
mov
lods
xlat
fisubrs
or
mov
push
shll
fs
jno
int3
cmp
lds
xor
test
test
jbe
xchg
inc
fsubrl
mov
into
push
push
sbbb
mov
jnp
push
call
cmp
lods
add
and
rorl
enter
ficomps
repz
fsubrs
out
sahf
inc
add
mov
push
mov
cmc
stos
fsubl
rcrl
scas
mov
xor
pop
jl
mov
inc
loop
fldenv
or
lods
stos
fisubrl
popf
stos
sti
mov
jmp
lods
leave
sbb
and
or
aas
mov
push
sub
shlb
mov
xor
fstpl
inc
int3
sub
insb
call
cmpsl
shl
shr
push
sbb
rep
loop
loope
stos
fnsave
scas
mov
inc
mov
fdivl
mov
dec
lods
lods
adc
mov
xchg
or
lret
int
mov
into
lods
dec
ret
repz
aam
adc
loop
mov
stos
inc
and
push
or
add
cld
clc
cmp
xchg
mov
cltd
mov
rep
or
mov
pop
mov
rcrl
das
sahf
inc
mov
into
popa
int3
shlb
lods
pop
pushf
icebp
filds
aam
icebp
scas
or
out
fidivrs
scas
jae
movb
das
adc
push
enter
lds
push
movsl
stos
sub
or
lret
enter
ret
and
cmc
sahf
mov
or
fdivrp
nop
jb
mov
mov
cmp
pusha
repnz
ljmp
aam
repz
mov
das
mov
and
lds
fldl
fldt
fwait
cli
out
test
add
enter
call
push
in
lret
mov
cmpsl
adc
into
jno
ret
add
add
sarl
add
lahf
fdivrl
push
fwait
mov
bound
mov
xchg
pop
loope
fxch
scas
mov
push
push
loop
call
dec
push
cmp
lds
cld
fstp
mov
xor
fcoms
rorb
adc
fcmove
scas
ret
out
jmp
and
aam
lods
int
aas
int
jo
mov
xchg
in
mov
xchg
popf
fmull
cmp
shlb
aam
pusha
fiaddl
or
lret
or
cld
fstps
pop
lds
lret
mov
mov
mov
data16
aaa
xor
cs
les
sahf
lods
and
mov
ficoml
adc
mov
mov
pushf
test
sbb
jb
out
iret
inc
ret
mov
push
mov
sahf
adc
popf
cld
rcr
pushf
or
pusha
pushw
cmpsl
adc
mov
cmpsl
movsl
push
bnd
stos
bound
jp
ds
inc
xlat
dec
dec
push
sbb
and
out
loope
sub
mov
lahf
adc
repnz
ret
out
pushf
lret
fcomp
jl
iret
pop
addr16
popf
stos
das
repnz
loop
cwtl
ss
outsl
les
cwtl
inc
ljmp
aam
movsb
push
sbb
lods
test
hlt
and
or
or
mov
lahf
loop
lods
mov
in
cmp
or
enter
outsl
sbb
adc
lock
les
ljmp
adc
mov
mov
loop
mov
idivb
inc
aad
arpl
fldt
jns
mov
into
pop
cltd
aas
mov
aad
cmpsl
lods
push
outsb
jl
sbb
test
mov
sub
pop
jmp
and
adc
mov
fidivl
shrb
es
lret
fucomi
movsl
hlt
ljmp
loop
out
cwtl
repnz
adc
iret
aam
out
cmpsl
pop
mov
push
mov
adc
hlt
insl
loop
sahf
int3
push
lods
mov
dec
lret
and
enter
iret
mov
mov
mov
fdivr
ljmp
int3
leave
out
sbb
mov
mov
clc
mov
rorb
sahf
xlat
call
loope
fcoml
popa
lret
stos
popf
lret
pop
jl
sarb
and
mov
mov
push
mov
jb
out
leave
stos
and
les
test
mov
es
lret
lret
fldt
out
iret
aas
or
ja
push
lret
fisubl
xchg
fsubs
dec
pop
mov
xchg
mulb
insl
mov
ret
stos
sub
ficoms
rcrb
fdivs
shrb
adc
lods
aad
test
sbb
movsb
xlat
aam
mov
xchg
and
scas
mov
bound
and
clc
fmulp
push
add
push
cli
jmp
pop
jbe
insl
clc
sahf
clc
cld
repnz
cmp
cld
pop
or
ljmp
dec
lret
xor
sub
or
stos
jecxz
outsb
mov
adc
scas
iret
push
repz
fwait
aas
test
cmpsl
sbb
insl
in
scas
icebp
scas
or
repz
ja
jo
xchg
pop
sub
xchg
std
inc
push
mov
dec
adc
fadd
push
leave
stos
push
sbb
fstps
mov
shll
lock
jb
repz
call
test
mov
lahf
mov
mov
les
aam
popa
ucomiss
enter
xor
xor
inc
scas
loop
mov
sbbl
add
dec
iret
ret
and
adc
jle
test
outsl
push
mov
add
or
lret
test
cmpsb
mov
or
shll
fwait
into
test
dec
in
loope
xor
imul
sub
mov
xchg
aas
ret
in
lods
pop
lret
scas
ds
in
into
inc
cmpb
mov
aam
pop
add
dec
aad
jl
push
rcl
loop
stos
fcmovb
in
mov
push
loope
mov
xchg
mov
xchg
lods
add
enter
mov
rcrl
mov
push
aad
lret
mov
out
mov
cmpsl
mov
xlat
test
pop
sahf
test
jmp
gs
std
in
sahf
clc
ljmp
mov
and
mov
icebp
sbb
lods
clc
jmp
cli
lods
mov
test
mov
lods
out
out
repz
in
xchg
sub
adc
lods
orb
or
shlb
repz
mov
popf
sbb
dec
xchg
dec
movsl
mov
jle
movsb
aas
rclb
rcr
fidivrl
out
int3
jne
cltd
int
mov
stc
mov
out
push
into
fs
out
in
negb
xor
aad
adc
inc
adc
fwait
cltd
inc
stos
push
out
mov
lret
mov
mov
sahf
subl
sahf
loope
mov
test
rcl
adc
lock
fisubrl
aad
ljmp
mov
xchg
ss
mov
fidivl
test
mov
sbb
repz
daa
lods
sub
fwait
mov
adc
test
fldl2e
xlat
lods
pop
loope
jns
mov
cs
dec
test
mov
mov
shlb
cmp
sbb
rorl
shl
mov
int3
into
loop
mov
ret
push
dec
cmp
mov
out
insb
adc
loope
sbb
fucomp
mov
add
in
popf
dec
repnz
mov
ljmp
sub
into
lods
loope
repnz
mov
dec
aad
cmpsl
push
jle
lret
mov
iret
mov
xchg
lods
mov
fnstenv
repz
int
mov
cmpsl
mov
dec
out
mov
jo
push
xchg
xorb
mov
stc
mov
andl
fwait
mov
push
fdiv
mov
mov
xor
sahf
mov
add
test
inc
shll
popf
mov
outsb
lock
mov
lds
add
les
out
push
xchg
call
or
mov
inc
add
stc
adc
xlat
mov
cmp
out
repnz
fmul
mov
rcl
nop
pop
mov
lret
leave
mov
scas
pushf
test
mov
and
sub
xchg
ds
dec
or
mov
outsl
sti
push
jnp
adc
and
scas
test
fwait
jno
adc
xor
xchg
xor
fisubrl
mov
iret
stos
test
ret
clc
loop
mov
cli
mov
mov
das
push
mov
lret
movsl
xlat
vpinsrw
es
jno
pop
shl
aad
scas
scas
mov
or
xor
iret
fsubrl
lret
addb
leave
adcb
fdivrl
sub
push
mov
fsubl
enter
popf
stc
mov
cmpsl
fwait
sbb
or
mov
fstpl
dec
test
and
lcall
mov
out
call
fistl
or
cmpsl
dec
mov
loop
movsb
loopne
mov
shlb
mov
push
pop
mov
mov
ss
pop
mov
mov
or
mov
loop
mov
sarl
mov
fsubs
jae
fldt
mov
lods
mov
scas
fnstcw
jecxz
loope
sub
adcl
nop
mov
jl
adc
mov
pushf
cld
sbb
jmp
scas
mov
leave
enter
aam
mov
fsts
push
scas
in
pop
ror
mov
iret
ret
outsb
aaa
adc
inc
sbb
loop
jbe
stc
mov
add
dec
dec
stos
push
mov
sub
mov
rcr
data16
adc
sub
ret
scas
mov
sbb
es
cmpsb
ljmp
call
out
ljmp
mov
loop
ret
jne
ljmp
iret
pop
addl
test
repz
ret
xlat
pop
lds
mov
mov
scas
scas
lods
lret
cmp
jne
call
repz
or
mov
cmp
outsl
xor
call
dec
xor
mov
iret
mov
int3
cmpb
sub
loop
mov
fisttpll
fldenv
or
lods
movsb
xlat
jmp
repz
cwtl
adc
out
repnz
jb
lret
sahf
jl
or
mov
fdivrl
xlat
lret
ds
dec
add
sub
push
cmc
mov
loop
loope
lret
out
push
lods
mov
sub
les
adc
cmp
dec
hlt
repz
fidivrl
sbb
in
push
imul
pop
rol
mov
xchg
or
or
test
int
inc
sbb
scas
out
mov
and
jl
jp
push
fwait
mov
sbb
mov
loop
xor
cmp
inc
mov
lret
movsb
fwait
mov
inc
test
stos
xlat
insl
inc
jmp
dec
push
punpckldq
mov
aad
mov
ret
fdivl
into
rcl
cld
mov
cmpl
pop
fildll
aas
aas
sub
sahf
xchg
cltd
xchg
xchg
dec
in
mov
cmp
mov
lds
test
lret
mov
into
sub
dec
mov
loope
loop
mov
repz
cmp
mov
mov
fsts
or
fwait
out
dec
push
mov
lret
cmp
sub
scas
mov
cli
pop
xchg
fstp
mov
lods
mov
aaa
sub
idivb
xchg
cmp
lods
sbbl
mov
xor
inc
xchg
mov
sahf
mov
jae
out
test
js
pusha
mov
stc
xchg
inc
ret
add
mov
in
mov
mov
stos
lods
pop
sub
int3
cli
cmp
std
out
add
bound
in
out
call
int3
push
fucom
bound
xor
mov
popf
iret
dec
int3
imul
inc
jecxz
into
ret
loope
fpatan
adc
scas
fidivs
int
repz
rcr
xlat
mov
mov
out
lods
sbb
int3
rcll
xor
mov
data16
test
ss
xchg
rcrl
xchg
cmp
add
enter
mov
xor
negl
ror
lods
outsb
sbb
jbe
mov
or
insl
out
mov
fistpl
popa
out
inc
shlb
fldl2e
insl
jae
jecxz
cmp
dec
loope
out
stos
and
cmp
loopw,pt
and
jmp
fidivrl
arpl
aad
movsb
rorl
frstor
fidivl
stos
popf
flds
inc
pop
repz
mov
xor
mov
loop
or
lret
ret
movsl
sub
fsts
stos
push
test
fcmovnbe
stos
dec
out
fdivrs
stos
int
and
cmpb
push
inc
pushf
scas
push
adc
fsubl
mov
inc
mov
mov
sbb
fidivrl
pop
call
adc
fidivl
nop
shll
int3
psubsb
or
ret
xchg
adc
out
mov
call
fcmovbe
movups
int
mov
cld
out
mov
jmp
sbb
lret
sub
mov
out
int
sub
stos
orb
lods
xchg
add
fwait
test
ret
pushf
mov
mov
gs
scas
movsl
lret
aam
fcmovu
shld
insl
cld
les
lock
sub
test
fldt
fwait
mov
push
fsubrl
mov
mov
popf
lock
mov
mov
mov
ret
mov
add
xchg
repz
mov
xchg
add
and
fistl
xchg
pushf
flds
not
loope
mov
sub
into
adc
fadds
push
push
in
xlat
push
xchg
cmpsl
loop
movsl
repnz
out
jmp
bound
test
int
or
cli
jne
aam
loopne
sbb
push
pop
add
fadd
pop
sub
out
bound
xor
adc
cmp
cld
stos
pop
pop
aam
aaa
jno
sub
out
push
shlb
mov
loop
repnz
fprem
out
dec
xchg
or
int3
and
stos
lret
or
lret
in
mov
mov
imul
xor
out
lods
and
push
insl
rorb
ret
mov
mov
cmc
lea
rcr
fucom
icebp
xchg
add
insl
fcomi
adc
out
push
mov
mov
mov
lods
cld
popf
rcl
pop
cmp
fldenv
sbb
sarb
xchg
mov
sbbb
les
loopne
out
adc
inc
imul
aam
xor
into
sti
loop
lret
xor
mov
lret
jb
fwait
scas
aam
mov
cmp
not
shrl
jle
leave
pusha
or
cld
dec
in
test
rcrb
mov
aaa
cmp
inc
xchg
cmpsl
frstor
mov
mov
xchg
mov
fisttpl
popf
mov
mov
mov
fadd
cmpsl
or
mov
adc
push
sti
aad
jb
leave
jbe
lret
test
lods
cmp
mov
sbb
out
inc
fnstcw
jp
out
addr16
pushf
out
adc
fwait
movsl
lret
mov
lods
fst
pusha
dec
cld
xchg
jmp
jmp
mov
leave
loope
push
dec
push
sub
fildll
pop
sub
push
mov
call
fsubrl
into
mov
adc
stos
mov
movsl
jecxz
mov
ljmp
stos
scas
aam
pop
xchg
dec
and
push
lret
fdiv
popa
lcall
mov
lret
test
cmp
sar
xchg
ds
cmpb
mov
int
imul
and
sti
ss
cmpsl
pushf
adc
call
scas
mov
jecxz
rcrl
loope
sub
pop
fwait
lock
push
movsl
xchg
xchg
push
xor
jb
mov
fisubl
lret
cld
cmp
xchg
or
cmpsl
stc
rorl
scas
push
jbe
int
mov
test
cmp
leave
mov
inc
test
adc
xlat
sub
int
int3
pusha
mov
lret
fidivs
repz
ds
out
pushf
ficompl
out
sahf
popf
stos
loop
ret
xor
jp
loopne
mov
stos
fwait
stos
lods
fcomip
in
data16
add
or
popf
int
or
sub
mov
fsubrs
xchg
rcl
or
lcall
lret
lock
and
lret
ds
movsb
lock
rcrl
rcll
test
mov
fistpl
enter
cmpsb
lret
iret
cmp
dec
js
mov
and
sbb
mov
ret
sahf
xchg
dec
sbb
stos
cmp
cltd
jmp
sahf
lret
push
addb
and
call
int
scas
mov
fldcw
cld
cli
pop
stos
xchg
int3
ret
push
lret
test
mov
adc
in
dec
push
lret
mov
inc
ret
cmp
inc
sbb
nop
imul
cmp
push
loope
inc
lods
mov
mov
lret
or
stos
jbe
xor
xor
incb
push
push
sbb
icebp
mov
scas
add
aaa
cltd
imul
sti
dec
fisubl
mov
dec
stos
push
jno
mov
loop
in
jmp
mov
or
pop
mov
jmp
sar
ljmp
stos
mov
ret
cmpsl
mov
rclb
lods
test
aad
jle
sbb
lret
adc
pop
repz
loope
movsb
lods
mov
aaa
jmp
xchg
outsb
or
lcall
push
loop
mov
push
mov
stos
mov
ret
adc
into
jecxz
inc
inc
mov
mov
mov
mov
loope
mov
cmpsb
lret
sbb
test
or
fnstsw
mov
leave
repnz
mov
ret
push
or
mov
adc
adc
fwait
or
jb
mov
test
in
movsl
movsb
hlt
or
enter
repnz
rcr
sub
aaa
clc
push
test
mov
lods
scas
mov
loopne
xchg
lods
mov
scas
ror
scas
add
scas
mov
or
xchg
xchg
ror
scas
loop
fimull
or
lods
sub
aas
in
icebp
shrb
test
and
mov
movsl
scas
dec
or
in
cltd
test
fistl
sahf
mov
and
xchg
and
sahf
fbstp
pop
ret
daa
or
mov
adc
test
adc
ret
adc
int
test
xlat
repz
fdivp
iret
es
inc
adc
dec
mov
lret
mov
addr16
in
pop
or
shrl
xor
test
popf
lea
mov
xor
adc
outsb
dec
clc
xchg
jl
and
pop
adc
fisubrs
xor
out
jle
stos
or
jns
les
rep
jmp
jnp
and
mov
dec
ljmp
mov
sub
mov
dec
xorb
mov
popf
sarl
insl
aam
mov
rclb
fdivr
scas
mov
cli
out
lahf
sbb
xlat
enter
scas
fidivs
ljmp
aam
bound
fwait
int3
sbb
mov
fucompp
not
fdecstp
shrl
pushf
rcll
jb
sub
imul
add
gs
and
loopne
test
mov
test
mov
int3
rcl
xlat
adc
into
inc
push
ficompl
test
adc
mov
test
in
mov
and
inc
cmc
lods
test
popf
mov
stc
adc
ss
lret
ret
adc
int
mov
fwait
cmpsl
out
lods
mov
movsb
lods
xorb
bound
repz
mov
mov
or
ss
xor
jp
push
sub
bound
pushf
xlat
ljmp
cmpsl
lret
stos
clc
mov
mov
push
out
sub
clc
lds
frstor
ljmp
pop
and
mov
jb
jmp
enter
xor
es
mov
mov
out
fimull
nop
rcl
jg
cwtl
adc
lret
mov
out
dec
or
out
xchg
mov
js
iret
dec
iret
jmp
out
adc
loop
mov
mov
int
stos
repz
testl
xchg
or
xchg
arpl
xchg
sbb
mov
lods
fwait
push
mov
mov
cmpsl
lret
sub
sti
call
push
fimull
movb
xlat
orb
ljmp
jle
push
fmuls
orl
cmp
lock
inc
cmc
xor
rcr
sub
adc
shrb
aas
in
sbb
mov
or
mov
je
scas
test
sahf
fnstsw
das
dec
rcrb
cld
cli
dec
xorb
mov
int3
stos
cmpsl
jecxz
into
jle
popf
xchg
out
mov
mov
call
das
loope
sub
lods
lret
pop
ljmp
aam
jg
pop
fidivs
popf
lret
lds
cli
stos
out
mov
mov
ret
lea
popf
lds
jg
neg
fnstsw
popf
jb
fwait
rcll
mov
stos
mov
lahf
xchg
ffreep
mov
scas
into
mov
cltd
sbb
adc
not
cmp
add
aam
shrb
fwait
int
mov
mov
icebp
sbb
push
and
mull
aas
out
mov
jnp
arpl
add
mov
pushf
cltd
sbb
sub
mov
sahf
sbb
jbe
mov
add
popf
call
scas
dec
cmpsl
lds
push
xlat
loop
sub
test
repnz
and
ljmp
imul
into
test
int3
or
fnstsw
test
lods
jge
jp
shll
add
adc
out
sub
mov
stos
out
add
jmp
fldenv
int
out
cmpsl
adc
test
lods
mov
mov
test
movsb
mov
cmpl
inc
lret
ds
movl
mov
pushf
xor
test
leave
mov
fiaddl
pop
mov
fisubrs
mov
loop
pop
shll
popf
repz
pop
out
xchg
mov
sub
movsb
xor
repz
push
gs
mov
mov
mov
dec
mov
hlt
mov
dec
mov
push
xor
leave
stos
rcl
lret
sti
lret
adc
fmuls
mov
mov
mov
scas
sbb
and
loope
cmp
scas
pop
jmp
or
gs
lcall
loopne
inc
sbbb
mov
into
mov
push
test
rorb
fidivrs
cmp
aam
ret
shrl
fistl
add
push
xorl
jmp
iret
fsubl
add
xchg
cmpsb
daa
xlat
push
rcrb
clc
jne
stos
jmp
mov
adc
mov
es
push
repnz
mov
push
mov
fadd
nop
lods
repz
xchg
sub
sti
lds
mov
xchg
repnz
sarl
mov
stos
jne
out
mov
push
xlat
lea
repnz
mov
scas
and
xor
aad
test
mov
inc
insl
pop
out
popa
pop
push
fmul
call
or
pop
mov
rol
lds
lret
test
xor
imul
test
lahf
mov
mov
lods
arpl
int3
push
stos
test
int3
iret
into
enter
lret
rcr
mov
mov
mov
dec
sti
and
xor
lea
fwait
lock
clc
mov
pushf
lds
mov
outsl
inc
cli
movsw
push
subb
subb
sahf
sahf
lock
mov
enter
mov
cmp
ret
jmp
loop
sub
fdivs
out
leave
sti
mov
or
lret
push
mov
mov
lods
adc
lods
inc
xlat
cld
pusha
jae
adc
push
aaa
bound
aad
daa
inc
sbb
stos
into
lret
mov
xchg
orl
gs
mov
imull
outsl
push
mov
sarl
jb
repz
lret
push
popf
fimull
mov
enter
pop
jb
scas
dec
ror
repnz
sub
fidivrl
cli
fsub
movsl
pop
out
movsb
or
lcall
dec
sub
nop
mov
mov
jmp
ret
sub
out
out
push
les
push
mov
pushf
and
popf
iret
or
mov
push
push
insb
mov
mov
loop
mov
lret
lock
insl
repnz
test
mov
hlt
lock
mov
js
or
cld
push
add
ss
mov
in
lret
test
add
xchg
adc
xchg
mov
mov
ficoml
movsb
mov
imul
mov
das
cld
imul
mov
mul
sbb
sbb
sahf
mov
sbbl
stos
mov
mov
lret
jnp
popf
mov
fisttpll
aam
sti
loopne
imul
lods
cmpsl
call
mov
jno
lret
stos
popf
imul
xchg
sti
add
or
rol
lods
lods
inc
pushf
and
leave
ret
es
mov
fst
lods
out
add
xchg
iret
lret
movsl
sub
inc
pushf
sti
call
fwait
jb
loope
cmp
fidivs
test
repz
iret
insl
fbstp
cmp
movsl
rcr
mov
stos
rcr
sub
stos
mov
fsubl
rcr
fwait
dec
sub
inc
icebp
ja
pop
cmc
dec
push
fisubl
mov
sub
jg
cmpsl
test
ret
fmuls
xchg
lds
es
aas
push
sahf
movsb
jmp
inc
mov
sub
fwait
aam
loope
loop
sarl
pop
mov
adc
sbb
fsts
pop
rcr
mov
adc
unpcklps
loopne
loope
fmul
mov
sbb
mov
pop
sbb
lods
test
sub
or
mov
mov
add
mov
lret
aad
mov
les
ljmp
jle
jae
lock
mov
test
scas
inc
lret
sti
pop
cmp
cltd
lds
xlat
mov
fimuls
adc
lods
loopew
mov
jmp
jecxz
vpsubb
in
divl
mov
mov
or
mov
rcrb
fisubrs
mov
jno
mov
or
dec
push
aad
xor
sbb
jmp
cltd
mov
hlt
mov
mov
insl
and
sbb
test
fstl
mov
call
lods
or
mov
fs
dec
sti
cmp
jne
cmpsl
mov
fcmovb
add
jle
les
mov
sti
movsb
test
xchg
pusha
push
mov
scas
push
les
inc
sahf
loope
mov
inc
test
data16
scas
fstl
mov
pop
lods
mov
xchg
leave
outsb
or
and
cwtl
push
repz
ljmp
jp
clc
sahf
in
fcom
lock
pop
ret
imull
and
add
iret
cmpsb
in
out
pop
out
in
push
test
pop
mov
fwait
aam
stos
es
mov
add
shrb
lret
mov
lock
mov
inc
out
movsl
jo
dec
ljmp
ljmp
dec
fildl
cmpsb
int3
psllq
loop
neg
mov
cmpsl
mov
mov
fwait
lret
rorl
call
into
lcall
inc
mov
scas
nop
push
into
test
mov
cltd
ljmp
shlb
add
fdiv
mov
in
int3
or
mov
das
out
sub
call
xlat
jno
adc
lods
stos
sub
jg
in
movsb
inc
adc
sub
push
jmp
out
push
mov
mov
int3
lods
adc
bound
int3
xlat
push
adc
jl
and
clc
mov
mov
mov
fsts
fwait
mov
xlat
cmpsl
loop
enter
shrl
push
mov
mov
push
xor
mov
outsb
mov
ret
out
mov
sub
mov
mov
add
test
mov
lock
std
adc
call
insb
inc
xchg
clc
pop
adc
mov
enter
dec
mov
jmp
fcompl
lret
inc
xor
xor
mov
mov
movsl
jl
jne
mov
movl
les
leave
mov
mov
lods
mov
test
inc
repz
ret
or
mov
inc
movsb
cmpsl
mov
out
leave
cmc
xor
mov
xchg
shll
into
bound
int3
repz
jo
mov
pop
fldl
pop
dec
movsl
ljmp
divb
xchg
sti
cmpsl
scas
fists
sbb
loop
dec
movsb
mov
fidivrl
aas
dec
pop
lahf
lods
cld
int3
test
xor
fnsave
negb
test
rol
stos
fwait
sbb
mov
mov
add
jg
pop
pushf
aam
das
push
add
cmc
scas
xor
inc
sub
into
sub
sub
mov
loop
rcrb
test
loope
jbe
mov
fnsave
repnz
fstpt
add
or
pushf
call
out
fcmove
lods
push
mov
mov
xlat
stos
movsl
sub
mov
sahf
cltd
ljmp
sub
ret
leave
lods
jnp
mov
mov
xchg
enter
or
push
lret
sti
iret
call
loop
lods
adc
faddp
mov
shlb
cmp
fstpl
jl
mov
xor
fdivs
lods
test
subb
mov
scas
or
icebp
frstor
cmpsb
mov
sbb
daa
and
lret
mov
int3
mov
dec
test
mov
pushf
rorl
sahf
into
sub
pop
lock
int
mov
mov
mov
stos
shl
movsl
lods
inc
test
inc
sub
out
outsb
mov
out
cltd
or
dec
in
sub
aas
lods
popf
xchg
outsb
mov
clc
sahf
xlat
mov
andb
iret
push
and
ljmp
cmp
movsb
sahf
adc
imul
fdivrs
sti
in
adc
leave
xchg
cmp
dec
shll
cmp
mov
push
in
mov
mov
ror
mov
lods
bound
mov
xchg
popf
out
push
mov
out
xor
cmp
mov
xlat
lods
outsl
jne
xchg
and
stos
push
pushf
int3
cld
mov
leave
jb
test
jb
mov
data16
shrl
jbe
shl
mov
dec
push
jbe
ret
insl
sbb
inc
sub
out
mov
mov
imul
loope
call
xorb
or
out
mov
dec
dec
add
sub
xor
mov
mov
mov
xor
push
sub
adc
stos
lret
xor
inc
loop
pop
lods
int3
adcl
mov
sbb
adc
jns
mov
loopne
push
bound
cmpsl
decw
int3
mov
pop
fmuls
push
jg
insl
ljmp
sub
add
inc
ret
out
mov
in
leave
iret
cmp
ljmp
loope
dec
mov
sub
fldcw
cltd
mov
push
mov
fildll
popf
mov
or
push
sti
lods
fwait
lods
xchg
mov
mov
lret
call
insl
ficoml
mov
data16
fcmovu
fwait
sub
iret
jmp
stos
xor
mov
mov
loop
sar
mov
mov
cmp
mov
pop
stc
jp
lret
enterw
ffree
test
fld
adc
jmp
mov
test
xorb
xchg
fstpl
push
inc
les
cmc
out
xor
out
int
mov
xor
cld
or
mov
pop
mov
call
fdivrl
sub
sahf
loope
mov
iret
lret
js
cld
imul
loope
enter
or
out
cmp
add
jno
jmp
or
scas
scas
test
cmc
fwait
test
fisttpl
call
test
leave
cmpsl
mov
mov
sahf
lret
ret
fcoml
fimuls
repz
cmp
out
cmpsb
bound
xor
int
les
mul
fnstenv
sahf
pop
lock
fisubrs
popf
aam
sub
outsb
mov
inc
lea
loope
sub
or
mov
fcomps
jbe
or
adc
mov
sbb
aad
push
fndisi(8087
lcall
stos
mov
fmul
xor
or
fnstenv
jmp
scas
dec
cmc
dec
mov
stc
rcl
mov
test
lods
push
scas
rorl
repz
cltd
push
add
jb
lods
lods
ret
rolb
fs
mov
fldcw
divl
into
loop
movsl
push
test
jns
int3
mov
jmp
jne
push
xchg
or
lods
int3
je
rcrb
movsb
stos
xchg
jmp
pop
clc
dec
in
lods
push
and
fnsave
lods
decb
mov
iret
test
fwait
sub
rcr
cmpsl
and
adc
fidivrs
pop
lds
shll
push
push
scas
lret
pop
xchg
or
pushf
mov
xchg
out
lcall
shll
mov
mov
ja
aam
into
lds
ljmp
xchg
mov
fldt
fisttps
out
mov
sub
out
iret
loope
adc
mov
cltd
mov
jl
rcll
aad
popf
rolb
xchg
mov
ljmp
pop
loope
cmp
cmp
sbb
sbb
mov
nop
enter
or
lret
jle
jns
les
ljmp
stos
mov
sarb
lret
mov
call
jge
test
mov
ret
mov
in
in
aam
sub
mov
inc
and
aaa
jl
mov
xchg
or
dec
or
lds
repnz
mov
xchg
adc
fcomps
pop
mov
mov
mov
pop
cli
adc
outsl
mov
mov
inc
fldenv
push
out
add
cs
pushf
mov
out
adc
cld
mov
mov
mov
adc
mov
int3
pop
cmpsl
push
lret
ret
mov
scas
jb
or
ljmp
push
in
shl
bound
mov
mov
sub
inc
scas
mov
test
lods
mov
adc
xlat
inc
mov
out
test
in
xchg
ret
xchg
test
bound
lahf
mov
repz
icebp
xor
cmpsb
lods
fbld
outsb
mov
jne
dec
mov
lea
lret
fcmovnu
dec
cmp
insl
outsl
lods
sub
popa
mov
arpl
mov
xchg
mov
jb
mov
mov
test
push
inc
cs
xchg
fwait
movsl
test
xlat
loop
ret
xchg
fcmovnbe
adc
dec
fldenv
mov
popa
sub
adc
pushf
enter
sbb
in
mov
dec
jae
arpl
leave
popf
movsl
inc
scas
iret
and
and
jmp
mov
imul
adc
rcrl
mov
mov
ret
into
fmull
pushf
ficompl
lret
mov
or
shlb
cltd
mov
in
enter
mov
fcmovbe
popf
sub
push
adc
jmp
repz
cmpsl
sbbl
movsb
xor
pushf
ljmp
or
fdivs
mull
stos
fchs
bound
dec
in
enter
cmp
shll
pop
inc
or
xor
pop
int3
mov
cmpsl
adc
pushf
andl
mov
cmp
jnp
mov
adc
test
add
fidivs
loop
adc
push
fs
fisttpll
into
push
repz
mov
cmpsl
adc
mov
inc
test
mov
test
in
lret
xlat
dec
mov
mov
ds
cld
bound
lret
lock
in
dec
jno
fidivrs
and
sbb
mov
movsl
xchg
clc
lret
dec
nop
xchg
jecxz
lods
les
jecxz
cmpsl
mov
stos
lahf
movsb
adc
sahf
sub
test
outsl
jl
loope
mov
jne
mov
mov
xor
xchg
fsubrl
jmp
int
rorb
mov
in
fidivl
ljmp
test
lret
cwtl
adc
lods
repnz
pushf
pop
or
in
aam
mov
mov
rolb
mov
fimull
cmp
test
mov
std
jno
sbb
roll
loop
fcompl
and
hlt
mov
movsb
or
stos
sub
loope
push
adcb
mov
mov
cmpsb
mov
imulb
dec
cs
lods
xchg
or
add
aam
fwait
xchg
js
lret
bound
loopne
push
rcl
mov
lods
lret
push
mov
adc
mov
xlat
cmc
test
sub
sarl
les
xor
mov
mov
mov
or
rol
movsl
mov
sub
movsb
enter
fwait
andb
lods
sbb
scas
shlb
mov
insb
mov
xchg
loopne
xchg
mov
jg
sbb
fcompl
rorb
dec
pushf
lods
jle
adc
std
int3
lods
cwtl
test
mov
popf
and
mov
clc
jmp
jg
sbb
adc
lret
ss
jno
sahf
or
add
jl
push
loopne
iret
xor
mov
mov
sub
fs
stos
adc
das
sbb
scas
mov
loop
loop
stos
test
scas
adc
jmp
shr
jnp
insb
movsb
leave
int3
cmc
sub
insl
adc
xlat
ss
jns
mov
push
fbstp
dec
dec
pop
lods
sbb
call
xchg
xor
rolb
mov
fnstcw
iret
xchg
pop
insb
mov
movsl
scas
jmp
movsb
lds
or
das
iret
push
mov
xchg
cs
in
sub
sahf
dec
push
fmull
fwait
xchg
es
inc
xchg
push
sub
test
pop
enter
int
pop
fcmovne
and
inc
ljmp
add
mov
test
int
adc
in
sub
scas
fidivrs
adc
jmp
mov
mov
pop
mov
cmpsb
and
cmp
es
dec
pop
lea
aad
and
icebp
push
mov
ret
mov
jae
int
stos
iret
xchg
push
sub
lret
fcmove
mov
shll
jns
call
sbbb
stos
jmp
lret
mov
ds
ljmp
mov
fbld
or
jb
stos
lret
shrl
or
mov
push
pusha
mov
loope
xor
sub
shll
sbb
mov
xor
outsl
adc
into
mov
add
ficoms
shrl
add
ror
adc
fwait
xchg
inc
ljmp
test
popf
and
mov
loopne
das
sarb
sub
insb
cwtl
out
xor
ret
mov
lods
movsb
mov
lret
bts
lods
test
fwait
loope
aad
jp
sti
movsl
xlat
aam
mov
or
ror
mov
es
sbb
push
sub
push
and
xchg
lods
ljmp
xor
mov
or
iret
jne
popf
repz
fsubrp
push
movsl
dec
xor
stos
dec
gs
mov
lods
sahf
repz
icebp
mov
xor
andb
cmp
mov
add
sbb
out
enter
in
fdivl
loope
in
pushf
scas
lahf
stos
push
pop
mov
movsl
fwait
pop
nop
icebp
mov
mov
mov
out
scas
mov
xchg
pusha
lods
cld
fcoms
aad
sub
jp
frstor
cmp
or
xor
ret
std
imul
xor
jle
jbe
call
addb
jb
sahf
cmpsl
add
jmp
cltd
add
adc
les
out
and
repz
rcr
mov
fwait
lods
mulb
lcall
sbb
divb
ljmp
fsubl
pop
pop
jp
xor
aaa
mov
iret
rep
and
adc
mov
rcrl
lods
lods
scas
xchg
or
jle
xor
cmpsl
loope
test
scas
mov
push
adc
pusha
loop
ret
test
in
test
out
jl
pop
adc
hlt
jp
incb
and
movsl
mov
cmp
lret
loop
stos
and
sbb
lds
frstor
pushf
and
xchg
mov
fisubl
out
movsb
repz
sbb
gs
ljmp
sahf
or
adc
popf
stos
lret
sti
enter
fldt
int3
insl
mov
inc
dec
add
push
and
mov
add
jns
out
imul
cwtl
adc
xchg
push
sahf
loope
stc
adcb
shll
repz
and
leave
jmp
cld
fadd
sti
mov
addr16
ficompl
dec
mov
dec
sbb
and
call
js
cld
lret
jbe
or
es
push
mov
cmpsl
mov
add
inc
mov
pusha
mov
ljmp
inc
pop
pop
cld
clc
sti
and
jmp
mov
lret
into
int
mov
xlat
xorb
imul
movsb
sub
lret
jmp
cs
test
lock
and
loop
rcr
call
and
lods
lret
sbb
fstpl
addr16
sahf
mov
aas
sbb
movsb
jbe
rcr
int3
adc
jl
fcom
pushf
sbb
jl
mov
pop
roll
aam
sti
add
out
fiadds
aam
shr
loop
fdivrl
mov
xor
ret
lods
pop
mov
mov
lock
jbe
fucom
mov
enter
rcrb
lret
mov
sahf
lds
mov
movsb
mov
xchg
test
stos
push
or
push
leave
ds
shrl
push
jnp
sub
rorl
fidivrs
fisubrl
jo
push
dec
mov
lret
scas
lret
mov
into
xchg
push
test
mov
sbb
std
lret
arpl
fsubrl
mov
mov
mov
rcr
int
out
clc
lods
ret
mov
or
loope
xor
lds
cwtl
iret
mov
lods
mov
mov
fildll
add
mov
mov
repz
mov
ret
adc
ljmp
jo
pop
mov
neg
orl
fwait
mov
bound
sti
pushf
lret
stos
ss
push
ljmp
adc
sbb
out
mov
into
loope
xlat
dec
sbb
mov
or
push
xchg
fdivr
mov
out
imul
cmp
sub
or
test
mov
sub
loope
icebp
adc
xorl
jmp
out
enter
push
ljmp
push
fpatan
cwtl
pop
or
lods
push
xchg
fistps
dec
int
and
rcl
push
mov
jl
ss
jns
xchg
mov
adc
xlat
les
les
fiadds
gs
lcall
xchg
pop
dec
fcmovb
sbb
xchg
fs
push
jge
rcr
jg
pop
push
dec
scas
add
ja
call
scas
out
repz
cwtl
mov
in
jns
je
jecxz
es
mov
lret
scas
enter
or
add
je
dec
jp
sahf
movsb
ljmp
shlb
fdivrs
js
es
call
stos
outsl
psraw
mov
repz
shr
mov
xor
mov
int
jg
mov
lret
outsl
sbb
pushf
call
xor
mov
adc
xor
push
pop
mov
and
in
sahf
leave
inc
lret
mov
stos
mov
lret
shrl
cmc
mov
loop
push
sbb
les
inc
repz
rcrl
mov
and
xor
xchg
nop
enter
mov
aam
int
sahf
sub
movsl
jb
test
lods
fld
into
aad
leave
in
fsubr
fsubs
lret
or
rcll
out
pop
orl
and
int
out
push
xchg
jb
ss
adc
mov
iret
xchg
and
ljmp
orb
outsb
and
mov
rclb
leave
in
xor
and
pop
lods
mov
out
push
adc
mov
out
fisubl
stos
pushl
fildl
mov
ror
mov
mov
js
rcl
outsl
mov
mov
mov
lods
mov
and
cmp
or
fst
ret
scas
and
into
pusha
lock
pushf
iret
jbe
in
mov
jmp
insl
pop
dec
push
xchg
dec
ror
mov
std
movsb
stos
shrl
mov
cwtl
pop
dec
fwait
lret
insl
jmp
aam
je
lahf
into
pop
nop
adcl
lret
mov
into
lret
mov
js
and
iret
mov
outsb
xchg
in
std
sbb
ret
rcrl
and
xchg
cli
mov
xor
fs
mov
shll
mov
sub
in
out
jl
mov
fldpi
enter
stos
movsb
movsl
rcrl
imul
out
js
cltd
add
mov
push
ljmp
sub
cmpsb
jp
mov
rcr
push
sbb
mov
rcrb
ljmp
mov
mov
out
scas
mov
jmp
fldcw
mov
fcmovne
stos
fs
shr
adc
ljmp
into
and
rcl
stos
fcom
fdivl
scas
mov
lods
and
out
xor
popf
mov
add
pusha
or
stos
adc
test
mov
sbb
cmp
xlat
sub
fildll
cmp
dec
int
sahf
iret
repnz
mov
daa
psllq
cmpsl
pusha
test
sbb
xchg
test
lea
mov
and
add
movsl
dec
mov
call
xlat
movzwl
sbb
jl
mov
aad
sub
ja
outsb
stos
imul
out
cmc
sahf
inc
xchg
vmovss
mov
push
xchg
pop
mov
dec
dec
fcmovne
push
adc
fstpl
ljmp
iret
jp
xchg
or
sahf
adc
dec
mov
xor
mov
sahf
sub
scas
into
movsb
fcmovbe
push
mov
mov
out
cmpb
scas
xchg
fwait
ret
repz
and
xor
pop
scas
or
xchg
cmp
stos
ficoml
aad
addr16
xor
pop
push
inc
inc
mov
lods
jle
push
mov
out
adc
clc
mov
inc
cld
fmuls
adc
mov
stos
popf
es
inc
jbe
lods
lret
movsl
adc
cmp
insl
jp
and
or
mov
adc
stos
sub
lock
cmpsl
dec
and
scas
movsl
push
jecxz
shrl
mov
mov
dec
mov
int3
xor
sbb
xlat
mov
mov
and
lret
xor
push
insb
stos
inc
xchg
js
pop
mov
sub
enter
jo
mov
xor
and
adc
mov
loope
ss
movsb
int
fsubl
sub
xor
aam
sahf
test
ret
xor
mov
enter
sarb
fisubl
dec
movsb
mov
data16
out
aad
cs
out
aas
adc
les
into
ss
das
lods
stos
lods
dec
cmp
fidivrl
out
aaa
ds
xchg
dec
pushf
sub
inc
adcl
sbb
fs
iret
adc
mov
and
jb
aad
mov
enter
jmp
addr16
mov
sbb
inc
pop
out
xchg
adc
pavgb
mov
int
and
lret
rcrl
cmp
mov
fnstenv
sub
loop
les
fs
out
push
mov
mov
jb
movsb
mov
imul
jb
or
fistpl
cwtl
cld
imulb
fwait
jecxz
loop
xchg
bound
fdiv
loop
sti
fstpt
call
mov
jg
mov
mov
nop
or
int
scas
or
and
or
mov
rcll
fistpl
mov
outsb
inc
xchg
mov
mov
dec
in
repz
popf
fldcw
popf
sub
dec
out
roll
mov
movsb
repz
int3
stos
ds
imul
js
imulb
mov
sbb
fstpt
adc
int
or
add
mov
stos
sarb
sbb
ret
adcl
mov
jl
or
lods
lret
sbb
shrl
adc
sbb
call
pop
pop
aam
cmp
jecxz
inc
ss
lea
aad
jg
movsl
fldenv
rcrl
or
fcompl
movsb
mov
mov
shl
iret
mov
lods
cmpsb
out
pop
lock
or
movsb
xchg
mov
ljmp
sahf
lret
lods
cld
sar
scas
pop
orl
fcompl
addr16
arpl
shll
popf
mov
mov
fisubrs
lret
sub
mov
xor
mov
pushf
stos
lds
mov
pop
mov
lock
jle
cmp
or
stos
out
cltd
loop
movsb
sti
fisubrl
add
xchg
cmp
incl
cld
stos
movsb
addr16
dec
sahf
xlat
fwait
mov
dec
lea
scas
fcompl
cmp
mov
pop
int3
cmc
cltd
push
mov
and
jmp
pop
enter
adc
cmp
iret
mov
aaa
jnp
pushf
jl
aas
xor
popa
push
movsb
aad
mov
out
fmulp
repz
loopne
in
imull
lods
xlat
jp
ret
scas
mov
inc
in
out
xor
and
mov
pop
jnp
sbb
mov
test
into
sarl
aad
call
sbb
mov
sub
mov
out
aad
in
sbb
loop
lcall
cwtl
pop
fld
mov
aam
adc
jnp
lea
enter
mov
jecxz
cmpsb
and
or
pop
insl
pop
imul
fsubrl
jle
sub
cli
pop
pop
cmp
mov
repnz
aam
mov
sbb
nop
jecxz
mov
loope
je
icebp
jns
call
sub
lahf
sub
sbb
cltd
mov
loopne
rorb
push
bound
fisubrs
icebp
lods
insl
xchg
lcall
sahf
rcrb
dec
mov
mov
push
addr16
or
jecxz
sahf
loope
loop
xchg
xchg
dec
inc
rep
insl
int
jg
jecxz
ror
mov
sti
jmp
repz
in
scas
loope
popf
int3
fcmovne
sub
sub
leave
out
lods
push
adc
int3
xchg
stos
addb
fcmovnbe
clc
sub
nop
ss
popa
pop
lock
loope
int3
aad
imul
stos
adcl
jns
loope
add
dec
stos
pop
lods
xchg
push
fnclex
lods
push
leave
rcl
fldenv
sub
shrl
loop
int3
test
adc
fsub
into
sub
arpl
lds
out
dec
mov
xor
mov
mov
mov
int
jecxz
das
and
test
lock
pushf
test
mov
popf
mov
shll
loope
call
stmxcsr
cmp
movsl
rcll
pushf
xlat
out
test
sub
jbe
cmp
lods
mov
int
fcmovnbe
mov
fisubl
mov
pop
aad
mov
fst
outsb
mov
xchg
stos
out
add
mov
loop
mov
add
adc
mov
bsr
stos
mov
fldt
cmp
lods
mov
add
adc
jmp
add
mov
ftst
mov
ret
xor
rcr
and
dec
test
lret
loope
fldenv
push
fcompl
mov
call
mov
cld
cmc
lods
sbb
ret
sub
push
push
fstpl
loope
loop
call
mov
pop
mov
xchg
sahf
lds
daa
or
jp
out
inc
cld
adc
xor
addb
lods
mov
repz
aad
sbb
cmp
lods
enter
mov
add
in
cmp
rcrl
sub
cmpsl
dec
pop
lods
mov
lret
aad
pop
xchg
mov
and
mov
cld
rolb
into
fwait
rcr
mov
mov
mov
leave
iret
add
in
lods
pop
loop
xchg
mov
not
pushf
rclb
fwait
scas
test
mov
ret
fcompl
dec
dec
mov
dec
lret
movsl
sahf
push
mov
jmp
in
jp
mov
test
or
outsl
sub
in
fistl
outsl
mov
fcoms
pushf
mov
lret
mov
flds
idivb
add
push
xchg
fidivl
div
out
enter
into
pop
or
jmp
xor
rcrl
enter
cmp
enter
nop
ss
add
cmp
xor
dec
test
fwait
aam
or
mov
mov
mov
leave
lods
mov
pusha
out
sbb
movsb
fisubrs
mov
xchg
pop
pop
fdivs
fsubr
stos
ljmp
xor
sarl
inc
hlt
mov
bound
mov
and
sahf
push
xchg
inc
mov
push
les
int3
ljmp
nop
xchg
mov
roll
mov
mov
xchg
mov
jle
mov
cmp
movsl
scas
mov
sahf
lret
mov
mov
js
in
lods
push
out
mov
fsubrs
xor
push
les
push
jp
ss
mov
shlb
and
sub
and
xchg
das
popf
shl
jmp
stos
movsl
test
scas
push
das
lret
or
push
icebp
cmp
and
out
fldenv
scas
leave
loope
sbb
in
cmp
mov
adc
popf
lods
bound
sub
andl
lret
mov
sbb
out
or
lahf
fidivl
movsw
sti
fildl
sarl
out
out
mov
push
fimull
out
cld
add
cld
fimull
cmp
sbb
xor
mov
test
call
outsl
pop
mov
xchg
mov
popf
fmul
out
fidivs
andl
dec
bound
enterw
xor
popa
lea
into
out
dec
jno
jbe
lret
xchg
movsb
fstl
sbb
test
outsb
jo
loope
sahf
clc
mov
xor
mov
das
ret
mov
fwait
pushf
lret
jecxz
push
add
mov
mov
pusha
cmp
mov
into
xchg
inc
mov
test
fs
cli
fistpll
sbb
stos
fstp
mov
adc
rorl
xchg
test
mov
jecxz
call
in
fs
call
loope
mov
aam
mov
mov
aad
pop
aam
push
call
and
je
xor
icebp
mov
sahf
mov
stos
popf
movsb
pop
cmp
shrb
push
fisttpll
fcompl
sub
lahf
aam
loopne
cmp
jne
aad
roll
mov
cli
into
ret
jbe
js
lret
stos
mov
sarl
or
iret
push
scas
and
lods
iret
xchg
mov
cmp
push
mov
and
mov
call
int
cltd
call
stos
ficoml
out
ret
add
ficoml
data16
int3
mov
ror
scas
aam
mov
test
orl
sbb
sahf
mov
stos
leave
pushf
cmpsl
pushf
mov
int
mov
movsb
xor
cmp
or
fdivrp
sti
jae
jge
fdivrl
fistpl
sub
or
xor
in
leave
loope
fnsetpm(287
test
push
out
mov
fwait
into
lret
lods
or
sub
add
or
test
loop
mov
mov
das
repz
lods
inc
mov
lea
test
xor
add
xor
jb
ljmp
out
cmp
int3
iret
sbb
scas
rorl
sarb
push
std
mov
leave
lret
pop
sub
int
mov
pop
fdivrs
fisubrs
dec
xchg
aam
lea
decb
mov
inc
jbe
sti
mov
or
shl
les
fcompl
mov
mov
jae
mov
popf
int
push
sub
fbld
add
fmul
xor
mov
xchg
ror
mov
mov
jnp
ljmp
scas
and
xor
push
and
push
add
mov
fcmove
enter
nop
mov
aaa
ficomps
aad
mov
sbb
test
aaa
xchg
stos
repz
jmp
mov
movsl
ljmp
lret
sti
mov
or
cld
sarb
mov
inc
xchg
push
adc
or
loope
lret
fisttpll
shl
lahf
jmp
aaa
fwait
mov
pop
int3
lods
xchg
lcall
loope
rcl
mov
stos
test
and
test
insl
xchg
mov
stos
or
loope
fwait
mov
add
mov
push
push
in
xor
int
sbb
rcll
mov
mov
push
rcl
lret
inc
popf
insb
mov
mov
fwait
push
scas
lods
leave
fmulp
call
or
int3
popf
fnsave
popf
aam
lods
mov
aad
push
repz
adc
lea
loope
rolb
in
fidivrs
dec
mov
jmp
mov
fxch
std
lock
enter
sarl
mov
int
adc
mov
ss
out
popf
lods
les
iret
mov
jmp
fdivrs
sbb
popf
iret
les
mov
jns
int
movsb
test
dec
out
sub
les
xchg
or
pushf
sub
xor
lret
pusha
lea
leave
mov
jecxz
iret
out
shlb
lret
fsubr
add
cmpsb
or
sub
inc
fmulp
out
sti
xor
stos
data16
xor
lahf
jb
test
jecxz
flds
lods
stos
pop
dec
imul
mov
xchg
popf
lds
outsl
mov
pop
into
cmp
mov
mov
lods
les
pushf
test
out
loope
bound
clc
movsb
mov
push
fwait
stos
sub
mov
push
ret
out
rcll
inc
shll
mov
jb
cmp
loope
xchg
popf
mov
xchg
push
lock
add
mov
scas
loope
movsl
push
jb
leave
mov
push
fdivs
lcall
push
or
roll
icebp
adc
insl
sub
cmp
pushf
scas
movsb
pop
sbb
fadd
nop
push
inc
jecxz
popf
sub
mov
add
push
stos
cmp
pop
or
inc
dec
mov
mov
sbb
fiaddl
mov
mov
lret
ret
and
lods
dec
fs
jb
mov
lret
sub
dec
push
ljmp
pushf
ret
aam
pop
mov
mov
jbe
in
out
lds
les
ret
mov
aam
mov
ror
mov
sbb
lret
movsl
enter
fcom
mov
adc
arpl
pop
mov
aad
sub
and
orb
aas
jb
enter
mov
mov
ja
mov
loop
mov
lret
xor
ficompl
repz
mov
pushf
insl
pop
scas
loope
cmp
addr16
lds
loop
cmp
pop
stos
mov
pop
sub
mov
xchg
xorb
xlat
fwait
adc
sahf
adc
sbb
adc
jle
or
call
scas
lods
icebp
das
and
mov
into
sbb
insb
fldl
insl
sti
lods
call
dec
cltd
bound
mov
cmp
xor
jl
mov
test
icebp
mov
scas
mov
or
lret
stos
dec
push
sub
lods
adc
pushf
adc
push
fidivrs
mov
scas
lds
cltd
imul
popf
mov
mov
aam
jbe
push
ficompl
adc
popf
stos
adc
fcmovne
sub
ret
test
mov
popf
sahf
lret
lret
divb
adc
fdivrl
neg
xchg
imul
jmp
incl
sub
mov
push
xbegin
sahf
test
fdivs
fs
fwait
leave
loop
call
subl
cmpsb
jge
int3
lods
mov
lods
fisubl
in
xor
test
rcll
leave
cmp
push
ljmp
mov
add
movsl
test
data16
loope
sub
sahf
mov
dec
mov
call
sarl
and
out
sbb
into
outsl
lods
loope
out
rolb
out
decl
mov
xor
push
push
shll
cmp
cmpsl
and
cmp
stos
fsub
mov
movsb
sbb
out
pushf
fst
outsl
sbb
sbb
movsb
es
lock
mov
cld
pop
adc
mov
aam
mov
push
fidivs
shr
int3
bound
xchg
shlb
movsb
push
rcrl
cld
mov
push
push
loope
mov
xchg
xor
into
sahf
xor
iret
mov
out
shrb
pop
out
sub
sbb
repz
jae
lock
lods
ret
mov
stos
stos
mov
loop
fbstp
mov
shll
push
mov
and
xor
adc
fstps
jns
or
push
loop
int
dec
xor
lret
dec
lret
mov
lods
or
call
mov
pop
inc
and
lret
scas
sbb
lret
aad
fwait
jmp
sub
fisubrl
lds
mov
mov
into
orb
lret
mov
lods
shll
adc
stos
int3
fcoml
or
push
loope
mov
rcl
mul
lsl
jnp
sbb
movl
mov
loop
dec
shl
mov
loope
lret
enter
sbb
mov
rcrb
into
fidivs
xlat
dec
pusha
push
xchg
adc
out
lds
roll
bound
jg
lods
mov
fadds
push
jmp
add
call
scas
lods
or
jg
jmp
scas
insl
add
movsb
mov
mov
sub
iret
scas
mov
cmpsl
cmp
int3
xor
adc
ror
or
loope
fidivs
pop
call
outsb
xchg
and
cmp
clc
in
daa
adc
faddl
pop
fldl2t
ds
cmc
scas
push
pop
in
enter
fwait
aad
loope
out
sarl
cmp
mov
aam
in
mov
inc
lret
jecxz
lds
lret
out
scas
adc
or
scas
sbb
fdivr
ljmp
pop
sbb
shr
loope
lea
stos
mov
pop
icebp
sub
xlat
adc
aad
out
lret
call
mov
aad
aas
cmp
stos
and
mov
add
fldt
sbb
rcll
ret
jmp
loope
andnps
shr
iret
xchg
in
or
mov
movsb
iret
mov
jae
mov
mov
mov
lods
daa
lret
stos
out
dec
mov
je
iret
bnd
or
mov
mov
push
or
xlat
cld
ret
cmpb
xchg
mov
shrl
ds
enter
fdivrs
adc
test
ret
adc
out
int3
leave
or
fwait
rcrl
xchg
lret
ljmp
ds
stos
movsl
repz
mov
sub
xor
repnz
ret
xor
mov
dec
inc
mov
pushf
rcl
mov
sbb
lds
cmpsb
std
movsl
ret
iret
int3
outsl
push
cmp
mov
rorl
int3
data16
arpl
scas
faddl
add
sbb
es
mov
sahf
aam
test
mov
stc
push
push
imul
adc
lret
pop
arpl
mov
faddl
fldt
insb
aas
cmpsl
adc
adc
sahf
fcompl
shl
int
sbb
frstor
clc
mov
scas
mov
pushf
lock
sub
jb
popf
into
lock
mov
dec
sbb
mov
outsb
mov
fisubl
or
push
scas
fnstcw
lods
out
ret
lret
push
fbld
mov
inc
xchg
cmp
rcrb
lret
push
enter
sbb
stos
imul
dec
dec
ret
fsubrl
ljmp
popf
icebp
loop
loopne,pt
mov
mov
xchg
pop
xchg
mull
or
jecxz
inc
push
aaa
lods
pop
xor
mov
fsubrl
mov
fs
dec
in
mov
scas
fdivl
test
scas
test
fdivs
out
mov
mov
mov
lret
pop
repz
clc
fnclex
push
cld
stos
popf
add
shlb
scas
xor
pop
add
lahf
mov
enter
rolb
pop
jns
rorl
mov
stos
int
shll
push
jmp
adc
sub
int3
add
stos
loop
mov
scas
mov
mov
dec
or
add
xchg
push
ret
movsb
shrb
test
mov
mov
inc
and
push
fisubl
xchg
fisubs
frstor
stos
or
into
mov
nop
fadd
fisttpll
in
pushf
int
sub
movsl
add
outsl
or
dec
mov
xchg
mov
es
movsl
fiaddl
pushf
xor
lock
scas
add
add
fiaddl
stos
cmp
movntq
mov
imulb
call
or
or
outsl
sti
mov
fldt
push
pop
mov
loop
mov
pop
add
mov
out
jnp
sahf
fisubrs
test
push
sub
inc
cmp
shrb
frstor
in
enter
sub
mov
ss
adc
fldt
sbb
scas
fidivrl
mov
mov
je
out
dec
repnz
stos
mov
push
jb
stos
lods
cmpb
push
xchg
ds
cltd
push
or
cmpsl
xor
mov
pop
aad
xor
fwait
jmp
mov
call
fistps
push
rcrb
push
sbb
iret
loope
mov
scas
fwait
adc
mov
fbld
sbb
inc
add
jge
ret
lock
jecxz
out
rorl
out
fsubrs
lods
aad
aam
test
repz
popf
mov
sti
lcall
mov
xor
mov
int3
cli
mov
sbb
imul
cli
fisubrl
mov
cmp
jp
cld
test
jb
mov
les
jae
lret
or
fnstsw
sbb
xchg
stos
push
mov
adc
pusha
cld
ret
lods
sbb
mov
or
dec
push
xor
mov
cltd
fidivrl
sahf
jl
loope
adc
xchg
pushf
jno
sahf
and
jno
enter
jmp
pop
xchg
in
adc
push
lds
jae
out
popf
and
fcmovnbe
sub
add
fldcw
dec
ficomps
push
push
shlb
loopne
das
cmpsl
mov
ljmp
repz
xor
lret
jbe
push
aam
sti
sar
or
mov
sbb
cmpsb
fmuls
out
mov
sbb
les
mov
pop
movsb
loop
sarl
fsubrl
mov
mov
sub
enter
rcrl
or
outsl
cld
mov
mov
lds
fnstenv
pop
cli
repz
cli
sbb
enter
enter
pushf
lret
dec
sbb
not
fmulp
pop
inc
stos
mov
mov
les
in
or
int
xor
xchg
jmp
mov
rcrl
leave
mov
xor
mov
mov
or
loop
add
sbb
xor
lret
mov
xlat
movsb
fadd
lret
adc
cld
loope
mov
rcl
arpl
mov
mov
or
test
popf
movsb
movl
jo
lods
shl
mov
out
test
test
shlb
aam
shll
xchg
stos
cmp
imul
lret
lret
adc
shll
add
rorl
mov
scas
fcomp
int
enter
dec
xlat
dec
aad
mov
mov
rcrl
into
sub
adc
fisubl
and
mov
shrb
mov
fwait
out
sub
jl
les
xor
cmpsl
rolb
mov
mov
rorl
mov
and
cltd
add
dec
dec
scas
call
cmpsl
mov
movsl
dec
movsl
test
aas
inc
mov
hlt
dec
es
push
ja
std
mov
adc
in
adc
fcompl
cli
ret
mov
or
iret
test
cltd
insl
sub
scas
mov
bound
repnz
enter
pop
shlb
imulb
movzwl
lds
call
stos
ljmp
movsl
loop
insl
mov
gs
es
xchg
mov
inc
mov
out
out
loop
or
les
mov
xchg
js
int
sbb
sahf
fisubl
jbe
mov
or
cmpsb
clc
test
decb
push
aad
jl
aam
jp
cli
mov
into
repz
push
mov
pop
and
inc
inc
movsb
cmp
lods
movsl
mov
fbld
add
fwait
lahf
dec
pop
mov
popf
lret
movsb
mov
or
rcrl
into
or
iret
scas
fiaddl
out
mov
cmc
mov
push
ret
mov
mov
mov
ss
lods
cltd
jae
dec
cmpb
sbb
fsubr
mov
mov
mov
out
aam
int3
xchg
mov
adc
jb
jmp
cld
popf
call
mov
xor
mov
leave
dec
mov
xlat
xor
xor
xor
bound
mov
xchg
pop
pop
fwait
je
mov
lea
cmp
lret
sahf
push
push
dec
in
les
enter
push
scas
imulb
ja
je
mov
aad
fwait
popf
cmpsl
xlat
xchg
add
mov
push
scas
mov
xchg
add
sbb
shll
test
cld
mov
mov
mov
mov
mov
loop
cmp
push
lods
lret
test
fstps
add
scas
mov
call
dec
jecxz
or
mov
mov
add
fwait
pushf
mov
ret
and
fcmove
out
or
mov
add
xchg
test
ljmp
lock
pop
mov
outsb
sar
adc
mov
mov
rcr
pop
mov
repz
int
xchg
mov
test
mov
pushf
into
or
stos
fwait
scas
loop
pusha
xchg
loope
out
pop
call
aam
push
neg
in
mov
les
enter
mov
add
mov
push
pop
ljmp
shr
jnp
sbb
int3
stos
test
loopne
fwait
push
or
xor
int3
sbb
enter
mov
movsl
and
scas
out
loop
lods
fsubs
sbb
add
mov
or
sbb
jmp
mov
mov
cmpsl
stos
jmp
dec
xor
enter
jg
cmpsl
fnsave
shl
aas
xchg
ret
mov
mov
insb
mov
test
push
jl
sar
iret
out
js
movsl
cmp
jl
mov
shll
or
fucomp
test
fldcw
enter
xchg
dec
sub
inc
mov
sbb
xchg
out
sarb
xor
fisubl
sub
mov
mov
sbb
jo
jl
sub
mov
pusha
scas
movsb
stos
push
dec
stos
nop
out
jl
adc
mov
dec
mov
std
cmpsl
lret
push
ja
repnz
mov
fwait
mov
test
scas
cld
mov
dec
sub
xchg
ss
adc
shrb
into
imul
sarb
mov
popf
mov
sub
loope
inc
and
dec
mov
push
int
mov
popf
aam
push
mov
out
xchg
push
int
mov
xlat
lahf
shll
popf
jae
cwtl
lods
shl
out
insb
push
lods
in
lahf
popf
scas
adc
mov
jp
into
lret
sbb
nop
mov
sbb
cwtl
ljmp
mov
cs
fsubrs
ds
cmp
stos
xor
xlat
stos
mov
out
loop
icebp
rcrb
stos
enter
lock
shr
repnz
scas
notb
iret
lret
mov
pushf
xor
andps
ljmp
lea
test
ret
lret
cmpsl
lods
mov
mov
adc
clc
adc
popf
mov
lds
mov
divb
mov
fsubs
nop
ds
cs
shrb
loop
fcmovnu
mov
add
test
insl
or
scas
or
leave
repz
scas
fsubrp
lret
cmp
popf
dec
mov
cmp
cmp
fistpl
xchg
and
loope
scas
repnz
rol
iret
cmpsl
cld
mov
sahf
mov
enter
test
mov
push
mov
sar
fwait
add
fsub
xchg
call
lods
nop
bound
fsub
mov
mov
dec
shrl
jnp
lret
cli
insl
pop
adc
call
dec
repz
push
xchg
xor
movsb
cli
sti
fnstenv
stos
aam
pop
mov
repnz
mov
pop
mov
mov
ss
test
xor
mov
mov
fstps
mov
test
push
and
out
xlat
fildl
xor
lods
out
pop
mov
in
scas
out
sbb
leave
xchg
fcmovu
pushf
mov
loop
into
mov
mov
out
test
aad
loop
mov
inc
mov
xor
mov
xor
loope
fcmovbe
cmp
cmp
aad
fmulp
mov
int3
dec
push
scas
out
into
fidivrl
lret
push
or
iret
fdivrl
leave
mov
fisubrs
aas
jl
xor
lock
repnz
int
fcomps
fisttpll
jo
int
into
aad
shrb
aaa
jecxz
inc
adc
scas
enter
lret
xchg
xor
or
cmpsl
mov
fldcw
shrl
insl
and
and
repnz
scas
insl
pop
mov
jb
mov
in
fld
repnz
lret
icebp
int3
iret
ficoms
shll
stos
sbbb
xor
test
mov
cmp
mov
mov
int3
ret
jnp
fwait
adc
mov
movsb
popf
lds
repz
aad
in
fisubs
mov
pusha
movb
mov
ret
rcll
popf
adc
call
fs
out
lods
add
mov
loop
and
push
adc
aad
mov
ficompl
mov
aas
push
add
mov
cmp
fidivs
lret
fcmovnbe
add
mov
lods
mov
or
stos
out
mov
mov
stos
mov
test
and
cmp
int3
shl
xlat
fnsave
dec
leave
lcall
sbb
out
stos
jp
mov
idiv
xor
stc
mov
push
xor
cli
jg
clc
test
adc
scas
cmpl
in
popf
sub
push
mov
jmp
ficoml
lea
fwait
ret
pushf
cld
aad
iret
sbb
scas
mov
movsl
ljmp
xchg
movsb
mov
paddq
sub
sbb
shlb
pop
loop
sbb
cltd
fwait
mulb
xchg
pushf
dec
fimull
push
movsl
cmpsl
int
xchg
popa
mov
dec
in
xchg
xor
push
lret
mov
out
mov
mov
ficoms
sti
rcrl
xchg
sbb
stos
dec
aad
push
mov
cs
add
dec
out
leave
mov
movsl
fsubrs
cld
mov
mov
loope
lret
ror
dec
mov
out
sbb
fwait
xchg
ja
sbb
jne
pushf
lret
dec
test
lret
lret
mov
test
push
xor
iret
test
xchg
mov
into
mov
mov
push
sarb
xlat
mov
mov
int
scas
dec
das
and
jbe
cmpsl
test
adc
pop
sbb
ficompl
shll
push
scas
repz
icebp
ffree
mov
jns
dec
cld
xor
mov
aad
arpl
jge
xchg
fadd
inc
jns
fmuls
dec
clc
pop
stos
lret
sahf
bound
mov
out
sti
fimull
sub
bound
push
adc
mov
cmpsb
adc
ffree
ret
fnstenv
add
sarl
lret
lods
add
lods
xor
addr16
mov
xor
fisttpl
mov
out
bound
andb
pop
or
or
push
rol
stos
or
mov
call
rcr
test
fcmovu
in
popf
xor
and
movsl
loope
mov
es
out
int
shlb
clc
scas
call
les
fadd
adc
fpatan
lods
and
inc
ret
fistl
mov
pop
fisubl
lret
lods
popf
test
sub
inc
mov
sbb
sahf
xlat
push
arpl
sub
leave
stos
loop
shrl
popf
jl
mov
int
loop
jge
or
bound
inc
loope
jbe
loop
xor
fnstcw
aas
iret
int3
stos
and
jmp
pushf
dec
or
aam
mov
and
sbb
cmp
loope
loopne
sahf
jmp
sbb
aam
ret
movsb
sub
sarl
movsl
mov
sahf
mov
es
out
leave
aam
repnz
inc
dec
icebp
pushf
xlat
out
test
loopne
mov
cmc
pushf
add
lock
mov
les
lret
pusha
ficompl
pop
pop
test
and
aas
push
mov
pushf
loope
shl
xchg
push
sahf
lods
addr16
ljmp
cli
les
and
loope
movsl
ljmp
aaa
lods
mov
sarb
es
pushf
test
ljmp
mov
test
cmpsl
stos
stos
ret
sahf
jbe
clc
jmp
push
adc
or
mov
sub
movsl
fidivs
test
insb
testb
xor
push
or
mov
mov
or
insl
cmpsb
lret
xor
sahf
sar
adc
sbb
sbb
mov
cmp
call
out
mov
or
iret
xlat
test
dec
sti
stos
mov
ficoml
push
shlb
test
lock
cmp
out
mov
sbb
mov
stos
xchg
rcrl
mov
dec
ds
mov
fisttpl
mov
fld
movsl
dec
jge
int3
and
jbe
jle
fcmovnbe
mov
int3
mov
or
popf
push
out
out
mov
mov
sub
mov
fmulp
cmp
or
sbb
ljmp
ficompl
cli
jmp
mov
pushf
mov
out
dec
fucom
stos
in
lods
mov
scas
pop
mov
xchg
sub
sahf
mov
xchg
add
scas
xchg
push
sahf
popf
popa
or
stos
frstor
sbb
jp
enter
xor
mov
mov
mov
enter
push
shl
inc
into
scas
mov
out
lret
fiadds
cmpsl
xor
lret
jae
loop
mov
mov
imul
je
mov
xor
lods
jecxz
xor
mov
jb
fadds
sbb
mov
daa
repnz
ss
xchg
in
neg
xchg
movsb
mov
mov
int3
popa
fadds
push
inc
stos
ret
sub
dec
mov
lds
xchg
pop
mov
pop
push
lret
mov
pop
int
icebp
repnz
push
pop
dec
popf
mov
or
fisubrl
rcrl
ljmp
or
mov
daa
jbe
test
into
btc
out
fwait
test
jb
fisubrl
pushf
out
enter
mov
add
scas
xchg
pop
and
ret
cmpsl
push
out
stc
idivb
inc
xor
push
or
sahf
stos
repnz
sbb
fmulp
rep
insb
lret
mov
xchg
out
jge
popf
mov
enter
loopne
dec
inc
sbb
push
fsubrs
loop
enterw
cld
ljmp
inc
sbb
fmul
and
xchg
xlat
scas
and
in
popf
lock
add
mov
popf
inc
test
out
mov
rcll
dec
mov
sub
mov
andl
cmc
enter
out
lcall
push
test
xchg
dec
xchg
clc
mov
jmp
movsb
adc
and
testb
nop
sbb
sub
sbb
mov
sbb
insl
ljmp
push
sahf
test
fisttpl
aam
loop
xor
and
leave
lret
ljmp
clc
mov
negb
lahf
rcr
in
mov
mov
ss
mov
mov
into
stos
testl
out
ljmp
repz
mov
lock
int
cli
ret
jo
out
pop
lret
movsb
popf
into
lock
je
loopne
stos
ret
lds
mov
xlat
out
mov
lcall
mov
add
das
clc
clc
fdivrs
iret
mov
rol
int3
bound
fldt
out
add
jo
in
in
mov
scas
mov
sar
fucomp
xlat
or
js
cmpsl
mov
jmp
mov
repz
lods
lock
dec
adc
xchg
mov
sar
or
jmp
or
lods
pop
adc
mov
bound
rol
mov
mov
xchg
outsl
comiss
mov
enter
enter
cmpsl
jmp
fstcw
je
lods
pop
mov
fisubl
mov
stc
int
pop
or
xorb
mov
push
jecxz
fimuls
xor
mov
and
fcompl
xor
mov
mov
fsub
mov
lret
shrb
sbb
sub
cmp
idivb
les
xchg
lods
into
fimuls
mov
lds
jb
enter
int3
movsb
fidivs
ror
fucomi
mov
out
mov
dec
jmp
sti
pop
xor
iret
iret
dec
add
jne
dec
sbb
push
push
stos
fcmovne
divl
movsb
pushf
mov
mov
iret
mov
out
inc
mov
mov
rcrl
or
pushf
mov
sub
mov
mov
lret
in
out
or
rcrb
aad
shl
cmpsl
mov
loope
push
push
cltd
fimuls
movsb
mov
xchg
mov
mov
mov
fcomps
es
loop
cmpsl
mov
movsb
jmp
enter
test
mov
testb
mov
sub
mov
int
test
repz
out
xor
ja
call
lods
pushf
cmp
int3
pop
adc
loop
movsl
mov
or
rcrb
mov
leave
jl
mov
pop
movsb
jae
pop
mov
ficompl
mov
jecxz
call
lods
or
cltd
adc
rolb
inc
das
loope
aad
loope
lock
xchg
mov
mov
fnstcw
push
add
sahf
fstl
push
loope
ror
repnz
push
ljmp
adc
lret
and
dec
shrb
mov
jo
lock
push
jnp
mov
adc
lret
mov
mov
jmp
adc
test
es
and
push
mov
test
in
stos
adc
out
scas
adc
scas
addl
stos
scas
jg
xor
int3
enter
push
jl
lahf
adc
enter
mov
push
mov
dec
pusha
dec
shrl
rol
flds
sbb
cmpsl
int
fadd
xor
adc
mov
dec
shrb
icebp
cld
fldcw
pop
or
mov
cwtl
adc
xchg
das
leave
lds
xchg
sahf
rcll
mov
mov
insb
mov
test
shlb
into
xorb
ret
sub
stos
xlat
push
jecxz
mov
or
fwait
iret
sti
iret
push
fcmove
movsl
and
repnz
dec
xor
lods
int
and
fidivrs
ds
xchg
xorb
fdivrl
loop
dec
cwtl
xchg
push
pop
jae
mov
scas
iret
inc
test
ret
pushf
scas
pand
in
fiaddl
mov
mov
fstpt
dec
insl
xor
and
sbb
push
popf
sbb
lods
fwait
mov
mov
push
int3
mov
mov
mov
out
mov
inc
lods
movsl
stos
sub
dec
sbb
std
arpl
popa
aam
cmp
lahf
or
cmp
sti
in
add
adc
adc
mov
xor
sbb
push
shll
scas
pslld
mov
push
sub
sahf
lret
lea
test
push
xor
loop,pn
lret
lods
fsubr
jns
push
loope
mov
push
cmp
and
fadd
shll
lea
jl
sbb
pop
push
cmp
mov
lret
stos
jb
mov
jp
mov
cmpsl
dec
add
jle
xchg
push
loop
out
fimuls
add
mov
push
pop
push
int3
jmp
mov
lods
lock
cltd
jo
cld
xorl
mov
jnp
aam
cmpsl
and
mov
pop
in
dec
adc
int
mov
sbb
scas
stos
lods
xchg
into
fstpt
call
jp
jbe
cld
aam
xor
push
sbb
dec
aaa
ja
fdivs
inc
les
aas
ret
pop
dec
xchg
cmp
out
xchg
dec
test
lret
clc
lahf
jmp
in
mov
cmpsl
lock
clc
xchg
es
push
fwait
enter
fst
mov
loope
pop
lret
subb
cmpsl
mov
movsb
popf
icebp
js
sub
mov
int
push
lea
push
rclb
pushf
sbb
sub
test
lods
stos
pushf
and
or
mov
cmpsl
xchg
enter
sub
dec
mov
or
add
push
xlat
mov
fwait
sbb
mov
aam
fdivs
cltd
or
mov
jae
mov
jb
int
and
fwait
sub
mov
jmp
xor
mov
mov
imul
int3
xchg
int3
push
mov
cmpsl
sahf
daa
stos
mov
out
mov
int
mov
test
add
mov
push
call
ret
movsb
adc
lret
xchg
mov
mov
mov
rcrb
push
inc
mov
aam
inc
in
fstpt
stos
fmull
popa
sbb
call
bound
lods
repnz
xchg
js
xchg
jmp
lret
jle
lods
mov
stos
mov
mov
push
ss
jnp
mov
fwait
shll
movsl
pop
cmp
xor
lods
mov
popf
bound
clc
mov
pushf
fwait
repz
push
mov
leave
mov
and
mov
cmpsl
idivb
or
lret
lret
mov
pop
xchg
shlb
sub
xchg
cltd
lds
bound
and
push
sahf
movsl
cmp
dec
mov
scas
test
loopne
aam
into
int
popf
cltd
xor
repz
xor
mov
test
mov
daa
es
mov
leave
mov
adc
lods
cmp
push
pop
inc
push
push
test
xchg
jmp
or
movsb
into
test
push
rcr
mov
push
mov
push
aam
out
dec
sbb
and
cltd
mov
pop
ja
mov
daa
jmp
iret
mov
xor
je
xchg
fsubrp
sbb
cmpl
push
xchg
popf
stos
out
stos
lods
adc
fcmove
jmp
repz
incb
out
ljmp
test
stos
adc
popf
lods
les
push
push
xchg
lock
mov
pxor
mov
or
xchg
rcrb
cld
aam
dec
repz
loope
mov
dec
mov
nop
xchg
stos
shl
outsb
adc
or
sbb
repnz
fs
adc
pop
fucomi
mov
mov
fidivrs
aad
imul
sar
lds
mov
adc
lret
pop
int
mov
sbb
jb
int
les
movsb
mov
sti
stc
or
mov
cmpsl
shrl
in
test
mov
pushf
mov
lods
push
scas
int
inc
addb
icebp
dec
int3
or
fidivrl
adc
imul
push
jno
push
xchg
popf
movsl
fidivl
inc
scas
pop
addr16
rorb
test
or
int3
or
ror
mov
pop
xchg
lods
pop
test
sub
mov
icebp
ljmp
xlat
loope
jbe
lahf
ret
les
test
movsb
sti
iret
xor
or
hlt
mov
mov
popf
aam
mov
testb
adc
mov
and
ljmp
sar
fs
repz
sbb
loop
fldcw
popf
mov
mov
shll
loopne
stos
arpl
lods
mov
fnclex
nop
dec
lods
rcrb
repz
dec
cltd
rorl
mov
lcall
fcmovne
loop
stos
in
pushf
or
movsl
mov
loop
push
fcmove
sub
out
clc
aad
or
sti
mov
lret
mov
inc
fnstenv
shr
xchg
sarl
mov
into
lock
test
adc
scas
out
fld
mov
mov
shrb
movsb
mov
in
mov
and
ret
leave
add
add
pop
insb
fdivrs
pushf
fcmovnbe
and
dec
mov
movsb
mov
push
lret
ljmp
mov
fwait
lret
inc
stos
incb
out
xchg
fmull
ljmp
lahf
xchg
shlb
cmp
jecxz
aad
ficompl
cltd
and
iret
xchg
jl
stos
stos
scas
fcomps
cltd
lods
and
cmp
movsb
out
movsl
push
sub
and
dec
xchg
mov
imulb
test
inc
adc
nop
mov
stos
cwtl
popf
ljmp
mov
cli
cmp
into
rcrl
test
mov
mov
je
iret
cmpsl
sub
adc
jp
xlat
pushf
sahf
ljmp
fldcw
push
add
sbb
mov
lods
lea
out
push
es
mov
call
xor
jg
pop
and
and
mov
cs
mov
fcoms
fwait
popf
or
or
loopne
clc
aad
out
mov
mov
loope
cmpsl
xor
jp
ret
push
ret
mov
movsl
sub
or
fnstenv
scas
iret
mov
divl
mov
int3
push
xlat
fwait
int3
xor
mov
xor
lds
dec
dec
js
lods
adc
movsb
fdivs
call
lret
iret
adc
movsl
jns
repz
add
jo
jnp
mov
or
or
scas
xlat
mov
mov
mov
loop
lret
adc
fxch
mov
jmp
mov
sarl
repz
add
lods
mov
and
pop
or
fstps
enter
sarb
int
out
fmul
pop
adc
ljmp
mov
cli
sub
ss
mov
mov
cmpsb
adc
and
pushf
int
dec
or
mov
lretw
popf
popf
imulb
push
mov
ljmp
push
ret
int
stos
out
mov
lods
iret
lret
inc
lds
loopne
out
out
add
into
dec
fcmovu
int3
loope
loop
call
fwait
xchg
mov
mov
movsb
lds
jno
loop
fildll
fld
or
scas
fwait
out
sub
pop
rcrl
movsl
aaa
addr16
call
imulb
leave
mov
subl
lock
daa
mov
adc
xchg
fistpll
in
mov
mov
jbe
push
lods
scas
xlat
mov
push
addr16
cmp
lods
mov
out
jnp
lret
adc
or
jecxz
ror
fwait
shrl
aam
movsb
fimuls
adc
loop
jb
adc
mov
push
scas
ret
rcrl
and
push
cld
leave
decl
add
sbb
pushf
mov
jae
mov
movsl
rcl
mov
mov
mov
mov
inc
xsave
clc
out
inc
jl
int
sub
jns
cmpsl
dec
bound
repz
xchg
push
lret
and
xchg
fs
and
sbb
inc
cmp
jp
mov
and
push
and
jmp
aas
or
mov
dec
iret
pushf
mov
es
sbb
lods
mov
add
sahf
imul
aaa
mov
outsl
jmp
mov
inc
lret
flds
aad
movsl
mov
or
mov
out
mov
aam
add
jnp
push
jmp
mov
mov
out
sti
ljmp
mov
adc
es
lret
mov
or
xor
rcrb
xor
repz
and
icebp
sbb
sbb
inc
out
repnz
out
cld
mull
xchg
or
sub
lahf
xchg
sbb
cmpl
loopne
in
push
mov
jmp
mov
repnz
mov
fidivs
mov
sbb
push
mov
out
mov
in
in
sahf
and
rcll
rcll
cmp
test
ret
push
aad
fxch
xor
out
adc
movsl
sbb
mov
dec
aam
cmp
iret
fld
mov
push
mov
jbe
cld
pushf
mov
or
scas
xchg
loop
je
xor
test
pusha
adc
aam
mov
xchg
loope
cmp
sbb
mov
sahf
push
push
sbb
push
cmpsl
mov
pop
xor
sub
xchg
mov
pushf
ljmp
bnd
mov
orb
or
mov
xchg
mov
les
push
neg
popf
addb
mov
pop
jb
les
lahf
fs
mov
push
sbb
mov
loope
mov
mov
shrl
pushf
fcmove
aas
movsl
lret
test
push
mov
xlat
sahf
adc
fnsave
andl
or
shlb
enter
or
xlat
sbb
pushf
mov
push
push
in
sahf
orl
jbe
out
mov
nop
pop
add
fs
sbb
or
mov
aad
fists
mov
adc
push
mov
fsubl
in
mov
mov
scas
cmp
and
aad
iret
sbb
stos
jns
fmuls
push
lret
shl
shr
scas
mov
aam
xchg
leave
xor
loope
fwait
push
pushf
add
mov
adcl
mov
sbb
ret
sbb
fnstenv
push
stos
lcall
mov
push
fldcw
adc
repz
sbb
aam
movsl
insb
pop
leave
mov
int
sbb
imul
xchg
imul
jl
imul
fucomi
iret
push
ljmp
scas
add
mov
iret
mov
mov
mov
test
mov
inc
xchg
jbe
mov
pop
scas
pop
dec
push
or
fxch
ficomps
loopne
mov
stos
fdivrs
add
cmpsl
loop
repnz
lods
jmp
or
lea
adc
pop
adc
movsb
cmpsl
xlat
sub
mov
and
add
sub
iret
pop
mov
dec
stos
loope
mov
fsubrs
roll
inc
sarl
push
xor
adcl
sbb
scas
cwtl
stos
inc
call
or
out
mov
leave
and
xor
xchg
pop
adc
loop
sub
popf
std
lret
cmpsl
ficoms
aam
pushf
leave
jne
movsl
fistl
mov
jb
lds
mov
push
out
incl
loopne
stos
mov
cld
push
adc
ffree
mov
test
mov
or
cmp
movsb
lret
pop
ficomps
xlat
xor
adc
lock
orb
out
mov
sahf
sbb
shll
loope
lea
mov
lds
vpsubsw
xor
cltd
mov
add
mov
sbb
test
int3
enter
mov
repnz
or
ficompl
push
insl
adc
pop
movsb
mov
cltd
movsl
mov
jmp
popf
out
stos
mov
notb
and
fst
scas
jne
xchg
dec
test
adc
adc
or
mov
sub
fidivrs
test
bound
pop
popa
mov
mov
ja
fsts
add
mov
lds
mov
lea
and
and
adc
mov
dec
int3
sbb
movb
test
pop
lret
lock
sbb
lret
mov
jmp
or
rcr
stos
push
mov
adc
sbb
pop
in
sarl
mov
sbb
cmp
jbe
pop
dec
xchg
pop
sbb
push
add
pushf
xor
mov
cmp
cmc
sbb
sbb
fimuls
mov
jmp
jmp
rcrl
pop
popf
ljmp
lea
fdivrs
int3
xor
lods
out
call
cmp
popa
xor
sub
nop
not
add
aaa
adc
pop
adc
test
jmp
movsb
mov
cmp
fimull
aad
mov
fmuls
dec
mov
mov
scas
movsb
int
shl
sbb
sahf
cmpsl
scas
cmpsb
mov
push
mov
cmpsl
pushf
test
mov
stos
imul
mov
movsb
cmc
int3
mov
ficoml
mov
int
shlb
mov
mov
mov
loop
sahf
cmp
dec
pushf
rcll
adc
jg
fnsave
popf
test
fldcw
out
mov
sbb
dec
mov
lea
cli
test
dec
cli
rcrl
add
scas
shr
or
mov
movsb
test
sahf
je
adc
into
jnp
test
jg
lods
jno
ret
xor
mov
sub
pop
stos
int3
into
adc
adc
fcompl
push
xchg
bound
push
int
cmpsl
stos
adc
adc
lret
movsb
data16
adc
movsl
fsub
aam
loopne
inc
fmul
xchg
cmp
popf
leave
adc
test
movsb
inc
adc
mov
and
flds
int
pop
cli
jp
je
mov
out
enter
shr
xchg
fmul
xlat
mov
in
lret
frstor
aam
fwait
les
fisubrl
mov
mov
mov
mov
add
jp
mov
cmp
jp
daa
loopne
fmul
pop
or
fldcw
repnz
adc
shl
dec
fcomps
ficompl
xchg
cmpsb
jns
cltd
repz
int3
jne
lods
imul
gs
pop
les
enter
adc
stos
aam
fwait
push
fsubs
fisttpl
and
pushf
je
cli
out
in
outsb
out
inc
adc
fsubrl
mov
lods
ret
repz
lds
inc
lods
sbb
aam
adc
mov
loope
loop
lods
sbb
inc
cs
or
push
iret
xlat
sahf
inc
xchg
sub
mov
ljmp
mov
and
fcmove
cmpsb
push
xchg
fwait
movsl
xchg
stos
in
mov
daa
mov
test
sbb
fwait
sbb
es
mov
or
cmpsl
mov
xchg
mov
out
mov
shll
cmp
aad
mov
cmpsb
mov
stos
mov
xchg
fisubs
int
sti
lods
sub
sarb
test
scas
jmp
cmp
mov
lods
loop
rcr
inc
push
lods
idivb
sar
stos
movsl
mov
pop
fsubrl
fisttpl
mov
xor
xchg
data16
push
jne
mov
mov
mov
inc
cmpsl
int3
mov
les
popa
sub
pop
sub
shl
stos
mul
mov
sarl
cmpsl
mov
mov
mov
roll
mov
mov
shrl
jecxz
inc
fstpt
sub
and
push
lods
in
scas
ficompl
int3
sbb
add
je
mov
int
arpl
push
xor
in
lds
and
xchg
rorb
insl
pop
sarb
mov
mov
in
in
pushf
shrb
fidivrl
adc
add
fistpl
lods
mov
mov
mov
loope
repnz
cmp
sbb
hlt
scas
stos
xchg
mov
fisubrl
jno
scas
xchg
add
fstpl
ret
lods
imul
inc
dec
in
popf
xchg
int3
sub
jbe
ljmp
lret
ret
jg
sti
stos
out
sbb
aad
scas
adc
mov
jnp
lds
adc
fildll
lret
mov
test
aad
push
enter
rcll
lret
and
cmp
ret
scas
jle
xchg
xchg
int3
mov
aam
rolb
lret
mov
jg
mov
sub
inc
ds
shlb
jns
sbb
adc
mov
out
mov
dec
jp
fucomi
fdivl
xor
lods
iret
jb
leave
movsb
mov
shll
ret
mov
int
lods
orl
cmp
aam
xor
psadbw
fstps
sub
inc
xor
mov
mov
lods
mov
mov
loope
jecxz
mov
fldl
nop
test
cmp
mull
dec
leave
push
test
dec
mov
scas
mov
xor
scas
dec
push
sarl
fs
pop
inc
lods
lds
das
int
sahf
stc
mov
mov
and
enter
mov
mov
lods
mov
rorl
jmp
adc
loopne
stos
xchg
mov
dec
movsb
mov
sahf
mov
adc
faddp
scas
jmp
sbb
ljmp
out
lea
aam
fucom
movsb
push
loop
mov
jg
mov
push
jecxz
shrl
fnstenv
xchg
test
dec
add
aam
sahf
adc
mov
mov
fnop
cld
lods
lret
ficompl
xor
aad
out
lret
cltd
mov
int3
pusha
lea
mov
xchg
xor
clc
insb
cld
cmpsl
adc
int
cwtl
loopne
pushf
jle
imulb
add
inc
sahf
cld
adc
lods
sbb
leave
enter
shrl
mov
out
or
loopne
lcall
insl
jle
jp
aam
mov
or
push
iret
mov
cltd
sub
sbb
test
lds
adcl
cmp
mov
mov
jg
movsb
add
or
mov
lods
lods
fsubs
ret
cmpsb
filds
lret
cmpsl
adc
lret
lods
inc
bound
test
or
bound
add
mov
pop
cld
int
cmp
lods
in
lods
test
ret
pushf
loopne
xchg
out
vmovdqa
loop
mov
lds
mov
stos
stos
dec
adc
ret
int3
rol
shll
xor
negb
pop
pop
pop
mov
into
bound
call
out
aam
inc
outsl
lahf
mov
lods
mov
scas
mov
mov
mov
aam
nop
addl
mov
dec
push
mov
push
mov
ljmp
aad
call
lods
loope
mov
iret
sahf
and
push
loope
scas
mov
shll
mov
jle
loope
mov
sbb
xchg
test
mov
into
dec
stc
andl
imul
xor
xor
lret
scas
or
push
mov
mov
mov
jo
loop
int3
aas
xchg
sahf
subb
sbb
fsubs
cmpsb
ret
not
mov
lods
mov
fnstsw
lret
and
pop
sbb
dec
mov
xlat
sbbb
sahf
and
mov
xor
scas
cmpsl
ljmp
int
addr16
rep
pushf
movsl
sahf
fwait
add
shll
mov
cmpsl
inc
insb
and
fcomi
sahf
out
mov
out
leave
ret
adc
stos
mov
sahf
ror
into
fldt
and
bound
lds
out
lea
rcrl
sbb
out
fst
mov
add
scas
les
movsl
or
scas
enter
pop
lret
movsb
xlat
jne
pushf
mov
push
xor
sahf
dec
sub
into
movsb
mov
jp
mov
andnps
fdivrp
mov
stos
les
or
lret
std
lods
mov
sub
cmpsb
stos
clc
imul
ljmp
sahf
mov
mov
lods
cmp
scas
out
mov
mov
scas
stos
scas
test
shl
add
push
shrl
popa
stos
hlt
aam
xchg
adc
insl
mov
insl
and
cmpsl
mov
fdivs
decb
push
dec
lock
ret
mov
lds
aam
ds
mov
rcll
shrb
mov
cmp
cmpsb
loop
mov
int
mov
inc
pushf
jo
std
out
jl
push
rcl
fdivp
test
lods
jp
xor
imul
shlb
jge
adc
pushf
les
stos
out
sahf
test
leave
cmp
pop
dec
sub
out
ds
dec
sub
sub
lret
clc
lret
mov
cli
mov
das
mov
movsl
in
cmpsl
push
in
test
sbb
adc
or
pop
pop
add
outsb
adc
lahf
add
or
sbb
fsubr
lds
dec
inc
sarl
sub
mov
mov
dec
enter
lret
neg
mov
xchg
test
divb
mov
int
jle
out
mov
popf
xor
adc
mov
orb
stos
xor
ljmp
fcmovu
js
fldt
rep
dec
es
mov
loopne
sti
jmp
cltd
fidivl
call
out
adc
mov
fadd
popf
aas
hlt
outsb
jae
ret
mov
cmp
jns
mov
repz
lret
lds
into
leave
andb
call
cmpsl
fsubl
cs
stos
pop
mov
mov
js
mov
mov
pushf
mov
out
lret
xorb
mov
lds
mov
mov
lret
add
mov
test
mov
rcrl
xchg
mov
mov
xchg
mov
adc
sub
mov
mov
fcom
xorl
ss
sbb
adc
cmpsl
into
shr
mov
mov
fisubrs
sbb
cmpsl
mov
pop
pushf
xchg
mov
jecxz
sar
sbb
popf
mov
cltd
jp
dec
ljmp
jmp
mov
add
stos
mov
int3
fisubrs
shlb
insb
mov
xor
into
fmulp
mov
lods
mov
and
xor
sbb
sbb
int3
jecxz
lods
clc
scas
pusha
cld
int
not
mov
sbb
mov
pop
fidivrs
clc
sti
test
adc
repnz
jb
mov
inc
outsb
xchg
lods
mov
pop
sub
in
test
mov
mov
mov
lds
or
mov
lods
push
dec
sub
into
dec
mov
int3
lods
or
pop
int3
lret
mov
xchg
push
mov
mov
add
fwait
leave
push
jmp
out
adc
lods
ror
sahf
ror
fisubs
clc
lds
ds
pop
movsb
out
mov
enter
push
shll
mov
scas
lock
sahf
inc
dec
jae
lds
mov
aam
fisubrl
mov
ds
daa
xchg
ss
lcall
scas
call
pop
xor
mov
mov
cmpsb
lock
in
es
xchg
repnz
out
or
pop
fisttpll
push
or
sbb
dec
idivb
mov
rcll
mov
arpl
leave
loop
int
inc
lret
popf
mov
js
adc
loop
aas
test
pop
or
shll
jmp
xchg
iret
cmp
repz
leave
out
lret
or
sbb
test
loop
imul
ljmp
or
cs
mov
pop
in
loopne
pop
sbb
cmp
jl
lret
push
fsubl
aam
loop
aaa
imul
mov
shlb
bound
adcb
lods
shlb
test
mov
sbb
mov
shlb
xor
fcmove
xor
das
lods
ficoms
lret
int3
cmc
aam
xlat
shrb
stos
xchg
add
mov
pop
mov
adc
ljmp
cmpsl
xchg
aam
aad
lods
adc
pushf
mov
out
jmp
cld
leave
and
fwait
lahf
into
test
jge
loope
inc
fisubs
rcl
sahf
ljmp
shlb
cmpsb
daa
repnz
sub
loop
pusha
iret
cs
aam
test
pop
shlb
bound
addb
mov
inc
inc
out
lock
lods
mov
iret
add
sahf
sub
scas
mov
pop
adc
fdivrs
cmp
insl
sahf
mov
mov
fdivs
jecxz
mov
leave
cmp
mov
ror
test
adc
mov
stos
les
fcmovu
lret
lods
test
adc
es
loope
lret
movsl
ljmp
popf
out
fucomp
mov
adc
jg
cmp
mov
mov
jp
icebp
out
outsl
mov
push
or
dec
xchg
fidivs
test
dec
xor
mov
pop
and
fabs
xor
call
ret
rcl
loope
push
enter
pop
push
or
arpl
mov
pop
add
add
mov
lret
out
les
adc
hlt
data16
mov
jne
scas
and
fcmovne
and
push
mov
stos
cltd
jmp
mov
inc
ljmp
xlat
and
test
lods
add
ds
or
lock
sub
mov
push
sbb
xchg
inc
sub
jl
enter
insl
dec
ret
cmpsl
jecxz
lret
xchg
loop
int
mov
call
daa
cmp
adc
or
out
jne
out
fwait
scas
sub
jb
les
call
lahf
jbe
mov
jo
mov
das
or
sar
into
loop
stos
fidivrl
lcall
call
int3
bound
aad
test
lods
mov
mov
clc
dec
out
icebp
or
frstor
mov
sbbb
and
je
sub
dec
or
stos
loop
mov
push
mov
push
ret
fldcw
out
cmpsl
mov
call
inc
xchg
mov
push
lret
outsb
cmpsl
outsl
push
and
cmp
mov
lea
loope
mov
sub
sbb
sub
mov
test
mov
das
jnp
fimuls
dec
cmpsl
test
mov
and
ja
mov
xor
sub
dec
and
test
test
xchg
leave
bound
mov
insl
shrb
test
fcomp
fstpl
sbb
ljmp
xor
lods
add
mov
mov
scas
enter
call
mov
mov
insl
out
mov
popf
movsl
or
sub
mov
lods
sub
mov
sahf
push
mov
fsubs
movsb
fstl
movsl
push
aam
stos
or
mov
add
and
lods
ret
push
pop
movsl
mov
xchg
rolb
ljmp
leave
sbb
sbb
loope
or
data16
adc
iret
scas
dec
mov
dec
scas
inc
adc
or
sbb
lock
pop
jae
xchg
fcompl
mov
pop
filds
mov
lock
stos
in
sahf
lret
imul
dec
and
sub
insb
jp
push
xlat
fdivs
adc
mov
or
psubusb
mov
dec
scas
and
je
jg
test
fsubrs
call
mov
lret
mov
lret
mov
mov
or
mov
stc
lret
adc
ds
sub
mov
ljmp
aas
adc
dec
fcmove
mov
stos
mov
out
scas
lahf
rcr
fsubp
xchg
in
fisubrl
movsb
das
inc
mov
enter
mov
ljmp
dec
scas
or
lods
mov
sub
jl
xorb
xor
push
ljmp
inc
int
adc
jl
fstpt
test
stos
mov
mov
jmp
mov
cmpsl
ljmp
loop
pop
ret
cmp
push
sbb
les
insb
mov
loop
test
ljmp
mov
shll
or
add
push
movsb
call
mov
mov
inc
ror
pop
cmpsl
or
fsubrl
cmp
fcompl
rdtsc
mov
mov
lret
movl
aam
xor
fdivr
nop
sbb
test
push
push
scas
xchg
in
lret
cmc
int3
adc
and
stos
jo
fsubr
popf
lret
mov
in
sbb
fdivrs
xlat
sahf
idivl
adc
lret
mov
lods
and
repz
clc
ret
adc
sti
inc
adc
fsts
scas
fdivl
lea
fs
push
loop
xchg
fwait
dec
pushf
mov
push
mov
loop
repz
mov
cmpsl
fldcw
xchg
pushf
enter
test
cmpsl
lret
xlat
imul
out
pop
sub
shl
mov
stos
fsubrl
jl
mov
iret
jb
aam
fsubrs
fldl
iret
mov
cmpsl
loop
lods
jae
and
xor
ljmp
mov
mov
out
jne
int3
fdivrs
dec
push
les
aas
movsl
xchg
jo
mov
mov
dec
adc
sbb
sbb
aad
nop
dec
sbb
out
dec
dec
cwtl
cmp
addr16
test
stos
fsubrs
mov
mov
clc
adc
sahf
ret
add
xchg
js
nop
movsb
test
push
adc
fcompl
scas
repz
popf
aad
pop
dec
or
fcmovne
add
leave
mov
add
out
adc
or
add
pushf
xchg
and
sbb
sahf
leave
mov
loop
pop
push
scas
pop
ds
movsl
cmp
mov
adc
popa
sbb
mov
mov
sahf
lods
fsubl
dec
lods
aam
mov
fcoml
cmpsl
int3
lods
pop
mov
popa
mov
jne
rep
or
mov
ret
cmc
cmpsl
dec
enter
sahf
mov
dec
insb
mov
shlb
or
mov
sub
lds
pop
test
insb
or
mov
xor
dec
xchg
mov
int3
or
lods
movsb
adc
xor
sbb
ljmp
orb
cmpsl
fwait
dec
ljmp
popf
xlat
clc
mov
cmpxchg
lock
loope
icebp
jo
jno
pop
fidivrl
lods
push
movsb
clc
mov
add
aad
mov
xchg
lcall
jp
mov
jo
mov
mov
adc
mov
jae
int3
jb
jge
pusha
or
mov
sar
repz
lea
push
adc
xchg
and
mov
icebp
add
xchg
outsl
mov
stos
inc
fwait
mov
fidivrl
pushl
dec
rolb
popf
mov
xor
sbb
daa
fmull
pop
mov
aad
adc
xor
or
stos
shlb
mov
xor
jmp
out
imul
sub
mov
or
scas
push
mov
cs
mov
mov
aam
jnp
out
and
sub
ljmp
sbb
fmull
daa
int3
imul
out
pop
clc
adc
loop
sti
mov
xchg
ret
imul
lock
subl
mov
ficomps
jo
into
push
sub
jmp
add
mov
lcall
bound
and
loop
repz
adc
call
test
sahf
popf
iret
mov
idivl
nop
sbb
into
mov
movsb
inc
fucomi
xchg
sub
cmp
out
lcall
mov
jp
add
loope
pusha
ja
dec
pop
cltd
test
pop
mov
fnstcw
daa
push
fwait
shl
mov
xchg
hlt
insl
xor
hlt
mov
iret
xlat
cmpsl
dec
movsb
pushf
inc
leave
xchg
push
adc
repnz
popf
xlat
push
sub
cmc
mov
lods
addb
lods
leave
lret
aad
push
mov
ret
mov
and
sbb
aad
dec
pop
mov
sub
mov
fwait
mov
popf
add
mov
adc
lock
bound
les
icebp
mov
cli
jb
test
or
fiaddl
call
loopne
lods
jmp
or
pusha
shrl
sahf
loope
test
je
int3
fsub
mov
cwtl
jbe
pop
lret
sbb
xchg
lods
push
lods
stc
push
pop
stos
xchg
pop
lret
mov
or
data16
faddl
jecxz
adc
into
pushf
ret
xor
aam
cmp
stos
aam
push
mov
jmp
and
leave
lret
push
jnp
rcll
hlt
popf
es
stos
scas
xchg
scas
mov
scas
xor
pop
lods
popf
call
in
fidivl
ret
mov
rol
cwtl
mov
push
xchg
xchg
sub
xor
clc
lret
loope
fsubl
xlat
sti
mov
pop
in
enter
shl
pop
fsubrl
mov
sti
loop
push
leave
sahf
aad
movsl
push
bound
adc
mov
test
aad
sti
lods
lret
mov
mov
ljmp
mov
fxch
sahf
int
sbb
mov
movsb
mov
out
ret
sti
sar
adc
or
mov
sbb
out
mov
in
jns
ret
movsl
mov
mov
cmpsl
ja
ljmp
test
mov
sbb
into
mov
enter
xor
dec
loop
lods
cmp
lret
repnz
lret
mov
movsb
sbb
add
out
adc
xor
andb
xchg
mov
fwait
aam
mov
xchg
cmpsl
and
scas
lock
cli
add
and
lret
lock
bnd
jecxz
jmp
mov
ficoml
lahf
cld
rcl
cli
add
jb
leave
scas
pop
lods
ljmp
insb
mov
lds
cmp
mov
lret
stos
cwtl
push
pop
lea
mov
enter
insb
pop
xchg
clc
adc
xor
stos
loop
add
sarl
shrl
push
mov
mov
test
fidivl
enter
jae
jl
push
call
test
into
ljmp
mov
mov
loop
sbb
shll
stos
dec
xor
sti
jecxz
cmp
lea
out
mov
mov
lea
int3
push
dec
dec
pop
enter
movsb
orl
pop
inc
sbb
sbb
das
stos
or
aad
and
ret
xchg
sub
test
lret
shr
out
test
in
in
lods
dec
mov
lcall
test
cmp
mov
popf
stos
in
mov
fstpl
mov
aam
fwait
dec
repnz
push
divb
cs
out
adc
js
xchg
cli
int3
cmp
sub
sti
aam
inc
pusha
sti
and
sub
stos
lret
cmc
test
push
xchg
movsb
sbb
lods
adc
mov
jmp
mov
jg
fildll
rorl
ret
mov
pushf
sub
popf
test
int3
movsb
sar
loope
xor
movsb
iret
ljmp
or
cli
jmp
sbb
hlt
lds
dec
ret
adc
test
shrb
ficompl
test
test
or
xchg
nop
cmovge
mov
enter
xor
ds
or
fwait
shl
lds
or
iret
mov
into
mov
mov
mov
fwait
aad
mov
add
enter
or
push
mov
mov
add
ret
lret
jne
lea
dec
scas
lret
and
shll
aam
mov
mov
lret
push
ret
subb
fmull
inc
into
and
lds
test
lods
shrb
mov
fcmovnb
dec
lret
pop
or
xchg
or
mov
mov
push
out
sub
stos
dec
clc
jmp
xlat
pusha
xchg
push
rcr
mov
shlb
push
inc
aad
ret
test
and
bound
bound
popf
mov
lret
les
fwait
jbe
mov
xchg
mov
mov
mov
es
mov
or
leave
fst
push
es
mov
adc
sahf
mov
sub
mov
scas
ret
mov
xlat
mov
fstpl
sbbl
fdivs
mov
jmp
and
cld
lret
movsl
lods
and
mov
ss
xor
out
mov
fisubl
cmp
pop
loop
roll
nop
cltd
mov
flds
in
lret
mov
sbb
popf
int
lret
push
stos
sbb
push
out
pushf
mov
test
push
or
outsl
lods
mov
test
clc
mov
fst
mov
rcl
lcall
cld
mov
out
adc
lds
cwtl
xor
or
mov
cmpsl
sbb
mov
popf
call
mov
fcmovb
icebp
shlb
pop
repz
movsb
jg
stos
faddp
les
sahf
aad
mov
movsl
lret
fldcw
cmp
cmpsb
les
loope
sub
dec
xor
mov
cmp
in
fpatan
mov
adc
cltd
stos
aam
sbb
lods
jo
loope
push
sub
mov
adcb
mov
push
cmp
dec
add
jno
outsl
lret
mov
xchg
adc
mov
or
cwtl
dec
mov
test
ror
leave
sub
js
leave
iret
movsl
dec
sahf
inc
lea
push
jb
mov
loop
push
pop
ret
repz
sbb
pop
xchg
add
test
mov
ss
jb
repnz
shrl
jns
ljmp
call
aam
mov
sub
push
aas
lock
sub
stos
test
dec
cmpsb
rcll
into
fldt
int3
fistpl
push
xor
int3
fiaddl
scas
loop
lods
out
iret
adc
movsl
lods
out
mov
sub
pushf
enter
xchg
ljmp
aad
mov
popf
ret
lret
fimull
rcll
or
popf
repz
int3
hlt
add
iret
in
mov
out
loope
dec
mov
mov
dec
or
cli
inc
xchg
add
fcmovnbe
ljmp
stos
sahf
cmpsl
lods
pop
les
ffree
out
lods
xchg
ror
lods
cmpsl
lret
scas
mov
add
aad
inc
fldl
lock
pusha
dec
push
push
test
add
lahf
or
mov
mov
jbe
sbb
cmpsl
adc
loope
pop
in
or
enter
in
shl
out
adc
loop
sbb
sarb
rcrb
imul
scas
sub
push
stos
lret
cmp
rcr
sub
or
and
and
cmpsl
mov
loope
adc
int
mov
push
fldenv
ja
fsubrs
xlat
ja
sub
scas
fsub
insl
subb
sahf
sub
loope
mov
cmp
test
ljmp
test
ds
mov
aam
out
inc
add
xlat
mov
scas
jmp
mov
ret
add
add
loop
int3
mov
mov
loope
sti
loope
ficompl
inc
pop
or
cmpsl
int
lods
jecxz
pushf
fucomp
push
sub
mov
xchg
xchg
out
fists
lds
mov
in
test
or
faddp
fnstcw
cmpb
nop
mov
mov
loop
fcmovu
add
cs
cmc
shlb
mov
mov
rol
mov
jb
dec
call
or
inc
jle
and
cwtl
popf
stos
arpl
xor
cmp
loopne
mov
fsubl
mov
mov
stos
int
stos
sbb
popf
jecxz
out
cmpsl
fsubl
and
sbb
les
pop
lods
in
adc
sub
lret
lret
loop
adc
mov
aad
ljmpw
adc
inc
bound
mov
mov
repz
fisubrs
fwait
mov
xchg
les
adc
mov
aam
jns
loope
xor
ret
fmuls
rorb
ret
stos
test
mov
xlat
int3
dec
rol
int
sahf
mov
out
xchg
stos
les
sub
and
lret
mov
xchg
mov
test
lods
loope
scas
fisubrl
mov
jno
addb
adc
sahf
dec
cmpsl
in
stos
rcl
sub
dec
mov
cmpsl
into
push
or
fcmovbe
xor
data16
dec
push
push
test
loop
mov
or
scas
fwait
stos
xor
popa
adc
mov
shlb
pushf
into
es
lahf
and
mov
nop
adc
mov
aam
fsubrs
mov
push
call
enter
test
int3
mov
lods
mov
ljmp
xchg
loope
xorb
sub
dec
sub
jp
leave
shll
mov
ljmp
inc
mov
and
les
loop
cmpsb
bound
mov
cmp
add
fwait
lret
add
mov
mov
dec
icebp
mov
pop
movsb
xor
ljmp
lret
int
xor
xchg
inc
mov
xlat
mov
lret
dec
lret
int
add
lock
movsl
call
inc
adc
rcll
pop
jne
or
fstpt
mov
mov
mov
push
out
xchg
adc
xchg
rcrb
call
ljmp
aas
lock
in
out
lds
mov
clc
scas
loope
sti
int3
psubd
fdivl
loop
xchg
scas
fwait
adc
stos
adc
lods
test
fstpt
orl
mov
test
adc
stos
aad
cmp
movsl
sub
les
mov
xor
xchg
cmp
aam
mov
or
lret
stos
jb
adc
scas
jmp
lods
stos
scas
sbb
aam
adc
mov
adc
sti
pop
loope
sub
xor
ljmp
mov
mov
aad
fwait
loop
mov
xlat
inc
fcom
stos
ret
sbb
ret
loope
sti
xlat
sahf
fsincos
push
cli
popf
jmp
test
aad
or
mov
sub
mov
aad
xchg
idivb
popf
sbb
aad
inc
mov
fcmove
xchg
pop
sarb
call
lods
subl
fmull
xchg
jb
lret
fidivrs
dec
mov
lds
push
lds
cmp
call
loope
repz
fnstsw
movsl
clc
fisubs
mov
lea
mov
mov
aas
cmp
popf
dec
icebp
mov
push
mov
fimull
scas
mov
adc
mov
cltd
xor
int3
mov
call
testb
mov
cld
loope
sti
lahf
adc
stos
cmpsl
lods
lret
test
imul
outsb
mov
jno
repz
jb
mov
movsl
cwtl
adc
int3
mov
pop
cmc
enter
bound
call
mov
iret
data16
xlat
ljmp
push
int3
adc
call
fsts
and
leave
lods
out
ret
loop
enter
stc
mulb
stos
mov
icebp
cwtl
jecxz
push
sub
cmp
ffree
xchg
fldt
xlat
inc
adc
stos
mov
pushf
lret
mov
xchg
fsubl
mov
cmpsb
lret
ficomps
mov
mov
scas
loop
int3
lret
lret
shr
repz
or
shr
mov
sub
mov
lock
inc
out
cmpsb
adc
mov
jns
lock
lds
mov
mov
insl
fcmovu
loop
lods
dec
mov
iret
push
fcmove
cwtd
aaa
das
dec
imulb
lds
mov
lds
popf
inc
mov
scas
fistps
jno
leave
dec
rorl
gs
stos
repnz
stos
stos
cli
mov
pushf
popf
jmp
loope
stos
dec
push
pop
fcoms
or
lods
mov
int
fadds
jp
jg
mov
dec
fisubl
adc
push
sahf
lods
scas
call
loopne
mov
into
or
movsb
lret
xchg
fdivrl
or
inc
out
push
mov
out
and
int
ss
popf
loopne
lods
or
add
mov
mov
mov
sbb
out
rcr
lret
out
or
mov
aam
dec
loope
add
jle
nop
xlat
mov
aam
shrl
enter
xchg
and
cld
aam
add
addl
mov
scas
or
and
ret
int3
enter
int
sti
sahf
fidivrl
imul
scas
mov
outsl
icebp
xor
loope
mov
iret
dec
dec
ficomps
roll
and
sub
dec
ret
and
push
arpl
mov
fwait
cmpb
push
adc
mov
rcrb
cmpsl
adc
movsl
pop
or
mov
sbb
push
stos
in
aam
push
pop
mov
or
add
ds
loope
movsb
xchg
inc
pushf
aad
aam
cmpsl
mov
insl
dec
lods
mov
and
add
sbb
scas
sbb
sub
mov
cld
out
mov
mov
aas
mov
fidivs
mov
insl
sbb
and
mov
test
shll
into
jle
xchg
aam
fsubl
mov
push
mov
ss
in
loope
mov
loop
sbb
insb
xchg
xlat
lods
dec
cmp
icebp
inc
loope
xor
cli
repnz
clc
fdivrl
cltd
mov
jl
pop
out
stos
inc
cmp
orl
mov
ret
stos
fwait
aam
push
adc
int
mov
push
int3
mov
xchg
fcomip
lods
clts
data16
mov
int3
addr16
mov
mov
ja
pop
lods
jl,pt
or
clc
lret
cli
ds
inc
inc
insb
xor
outsb
push
dec
enter
pushf
int
adc
fcmovnb
jns
mov
int3
ror
jns
dec
test
mov
adc
mov
xor
push
push
fcoml
adc
xlat
dec
les
les
dec
sbb
push
lock
das
dec
push
add
hlt
adc
int
dec
fdivl
shl
or
into
sub
sahf
push
gs
mov
mov
cwtl
out
lret
out
into
mov
jb
shlb
cmpsl
cld
mov
fdivrl
dec
fsub
xchg
movsb
rcl
mov
mov
lret
aam
push
daa
mov
test
sub
ss
ffree
xchg
ret
lods
int
mov
loope
mov
dec
bound
jno
in
lods
ljmp
inc
xor
pusha
rcr
std
push
fsubrs
lods
pushf
or
mov
decw
scas
or
lret
sbb
lods
cmpsl
sbb
push
loopne
cmpsl
cmp
adc
cmp
mov
adc
aam
adc
loop
mov
rcrl
je
lcall
mov
xor
imul
cli
sbb
xchg
cmpsl
orb
cmc
lret
js,pt
mov
mov
ret
int
mov
xor
cmc
repz
int3
nop
or
xchg
icebp
pop
int3
or
clc
fs
lret
cli
sub
loopne
add
fwait
outsb
out
iret
push
cld
leave
insl
sbb
mov
fcom
mov
es
mov
adc
mov
xchg
dec
mov
add
loop
icebp
outsb
shrb
mov
pop
adc
movsb
adc
mov
dec
lcall
das
sub
adc
call
adc
lods
in
mov
add
shlb
lret
insl
sub
repnz
aad
loope
push
shrb
iret
fisttpl
dec
call
cmpsb
mov
mov
fnstsw
lea
stos
out
mov
daa
loop
aam
stos
adc
push
popf
mov
out
pop
sbb
faddl
test
lods
scas
or
cmp
jmp
xor
sbb
sar
jno
movsl
int3
rcrl
push
cmpsl
pinsrw
mov
mov
shlb
mov
mov
xchg
orb
xor
push
leave
mov
fcmove
xchg
push
cmpsb
cmp
bound
cld
mov
xor
sarb
jl
or
lret
dec
xchg
int3
dec
popf
sbbl
mov
popf
lret
or
pop
xchg
bound
insl
insl
loope
loop
in
insl
push
out
addr16
repnz
test
fldt
mov
add
les
mov
mov
jl
push
shr
loop
push
jge
xlat
lock
movsl
push
lods
mov
mov
or
out
mov
out
ror
and
or
mov
leave
fmul
mov
jmp
mov
cmp
ljmp
fistps
xlat
test
divb
cmpsl
int3
ror
mov
arpl
mov
sbb
shl
cmp
stos
adc
fwait
loop
mov
inc
jbe
dec
clc
mov
add
mov
xlat
sti
incb
decl
cmp
xor
mov
rcrl
stc
cltd
xchg
btr
fcomps
and
push
jp
push
scas
rol
adc
out
scas
mov
xchg
subl
push
xor
in
or
lret
mov
mov
rcr
out
stc
adc
lods
dec
ror
mov
add
mov
add
mov
xchg
test
insb
iret
popf
rorb
jns
push
aam
in
loope
push
scas
cmp
and
mov
adc
jb
enter
shl
mov
cld
lea
leave
jmp
loope
push
sub
xlat
pushf
fnstenv
lods
sbb
pushf
xchg
inc
mov
xchg
push
into
int
pop
clc
loope
orl
dec
dec
ror
cmp
enter
mov
call
test
mov
mov
mov
push
mov
or
mov
movsl
sbb
sahf
mov
or
xlat
fcmovu
mov
lods
mov
and
mov
loop
test
adc
int3
mov
mov
lods
xor
mov
stos
mov
pusha
cmc
mov
ljmp
mov
out
leave
fidivl
fidivl
lods
ret
fsubrl
fldcw
lds
mov
mov
mov
mov
xor
mov
scas
xchg
clc
or
push
jno
mov
scas
push
test
pushf
andl
cld
ficompl
jl
mov
mov
les
faddp
xchg
jmp
stos
mov
sub
mov
ljmp
stos
push
mov
add
or
fldenv
vphaddudq
movsb
aam
stos
bswap
stos
dec
sbb
mov
rcr
sub
int
into
popf
bound
out
ljmp
shrb
jae
push
inc
fucomp
ljmp
movsb
cld
sti
or
repnz
out
xchg
fimuls
mov
fsubr
repz
loope
fucom
scas
stos
inc
daa
daa
sahf
pop
fisttps
mov
dec
mov
cltd
imul
repz
aam
lcall
lds
xlat
xor
rclb
aam
sbb
xor
xor
enter
xchg
mov
lods
push
scas
fcomp
repnz
add
popf
pop
xchg
jp
pop
cmpsl
dec
insb
mov
push
dec
inc
jg
fmulp
mov
push
xor
fcmovnbe
adc
aad
lret
cmc
fcmovb
lods
cltd
int3
sub
or
into
fwait
and
pop
lods
mov
pushf
movl
jmp
out
out
int3
sbb
testb
pop
lret
call
lret
mov
or
jae
ret
ljmp
loop
cli
scas
fldt
mov
sub
mov
shlb
repz
into
sub
dec
sub
ds
xchg
xlat
mov
into
cmpsl
icebp
or
sbb
clc
scas
fscale
jmp
push
int3
lret
mov
repnz
mov
test
add
lods
negb
mov
arpl
mov
stos
out
stos
scas
adc
aad
test
fnclex
out
fdivrl
icebp
mulb
shll
sub
loope
sub
scas
js
inc
loopne
fs
sti
mov
rcrb
iret
lods
mov
call
dec
adc
mov
addr16
test
lret
sub
aam
mov
xchg
mov
push
cmc
lods
jg
jp
fcmovnb
mov
adc
sbb
repz
shll
lea
mov
xchg
fistps
mov
lret
cmp
mov
movsb
mov
mov
icebp
jno
jl
orb
insl
shlb
push
fxch
lret
fmulp
mov
hlt
rcrl
aam
mov
cmp
mov
mov
sti
loop
ud1
push
fcmovb
push
lea
pusha
pop
mov
jne
in
enter
push
shrb
insl
std
pop
lcall
inc
inc
xchg
ret
mov
sbb
loope
fists
fwait
lret
fcmovu
sub
mov
mov
jl
test
mov
lret
cltd
inc
pusha
pop
mov
lds
movsl
mov
icebp
jle
dec
mov
movsl
jmp
js
adc
jb
cmpsl
and
aad
aam
sar
fsubs
fld
shlb
mov
sti
out
add
cltd
test
mov
dec
in
mov
fcomps
dec
mov
cmpsb
lret
mov
sahf
movsl
push
mov
dec
sub
pop
movsl
or
rcll
push
mov
stos
faddp
scas
inc
shl
nop
fnstcw
mov
pop
loope
out
mov
sub
ret
fyl2x
dec
jecxz
cmpsb
jmp
mov
scas
or
mov
mov
push
lods
pop
pop
mov
rcr
push
aam
hlt
ret
xchg
out
jecxz
lods
jbe
ja
test
jmp
aam
mov
push
ret
jbe
sti
shrl
ds
or
sti
pop
add
test
xchg
fsubrl
int3
mov
xchg
sbb
xchg
push
mov
or
stos
iret
cmp
sbb
dec
cmovns
repz
push
stos
mov
or
mov
scas
cmp
out
dec
pop
scas
popf
dec
loope
adc
mov
adc
lds
scas
mov
lret
in
out
lret
mov
out
mov
xlat
aam
push
bswap
xor
xor
bound
mov
xchg
pop
fistpll
stos
mov
or
sbb
mov
xchg
leave
scas
mov
mov
int
add
lcall
adc
mov
cmp
mov
into
call
subb
aam
int3
mov
pop
mov
movsb
test
scas
les
pusha
fwait
pop
leave
push
loop
into
inc
fidivs
cmp
mov
jae
out
mov
add
cmp
fdivrl
movsb
test
mov
xchg
mov
or
shlb
iret
lock
lods
mul
add
push
call
lret
adc
stos
scas
loop
icebp
pop
mov
sahf
jb
mov
push
lock
das
mov
mov
fsubl
ss
int
jnp
mov
jmp
pop
aad
movsb
push
mov
fsubl
scas
lods
leave
loope
mov
sahf
inc
les
and
jae
xor
pop
adc
mov
lds
sub
jg
dec
mov
push
cwtl
lret
mov
dec
out
xchg
xlat
lods
adc
fwait
movsb
mov
loop
orl
dec
jg
xor
or
fdivl
dec
mov
loopne
mov
loop
enter
or
push
in
lret
mov
shll
cs
sti
xchg
out
shlb
lret
lods
fcmovnb
call
jns
mov
mov
int
ljmp
mov
dec
xchg
aad
cmp
adc
icebp
mov
loope
mov
repz
sub
movsl
enter
or
shll
ja
push
ds
xchg
shlb
out
iret
mov
cmpsl
adc
loop
mov
scas
push
fsubl
lret
mov
xchg
scas
les
lret
pushf
shrb
iret
and
mov
mov
out
lock
bound
popf
scas
loope
loop
lods
lods
movsb
lock
mov
cli
pop
jmp
dec
ljmp
mov
mov
ja
call
loope
lahf
out
arpl
dec
pushf
and
mov
mov
fcompl
jmp
sahf
aad
push
xor
pushf
add
out
lds
arpl
mov
push
cmpsl
test
lret
int
mov
mov
mov
ss
test
repz
mov
mov
loope
filds
cmpsb
rorl
xchg
jb
popf
fsubl
fisubs
subb
gs
scas
mov
xlat
xlat
lods
ss
int3
mov
mov
mov
mov
in
enter
cli
mov
ficoml
adc
cmpb
push
shrl
addr16
hlt
faddl
adc
fcmovne
lods
int3
pushf
sbb
pop
scas
stos
mov
popa
and
mov
insb
fcmove
leave
push
fisubrl
mov
adc
lods
lcall
mov
push
stos
push
and
loop
stos
icebp
arpl
dec
mov
imul
ljmp
lret
or
sahf
fcomp
mov
pushl
mov
aad
push
dec
lds
cmp
lret
lods
clc
lods
jmp
push
push
mov
pop
imul
leave
addr16
mov
les
sahf
add
out
fimull
push
xorb
xchg
out
test
lahf
flds
dec
lods
aas
repz
push
mov
test
mov
push
or
cld
fldcw
adc
fcomi
mov
sahf
aas
adc
sbb
sbb
movsb
fsubl
out
fstp
cmp
leave
ret
lds
ljmp
int
les
sbb
int3
xchg
loop
xor
mov
insb
lret
mov
fwait
adc
ret
scas
or
shlb
mov
shrb
mov
test
ljmp
and
into
int
fwait
enter
loop
add
out
mov
xchg
push
cmpsl
pop
mov
dec
mov
adc
ljmp
xchg
jno
sbb
je
adc
mov
repz
dec
xchg
mov
cmpsl
bound
aam
fcoms
push
lods
lods
not
aad
stc
xchg
test
mov
or
and
mov
loop
scas
daa
loope
int
jae
fmuls
dec
push
xlat
jl
insl
lods
icebp
xor
dec
adc
dec
outsl
mov
xor
mov
into
bound
in
or
mov
mov
fcmovbe
jmp
mov
adc
inc
lods
fistpll
out
mov
fmulp
shl
xchg
xor
loope
mov
loop
jae
xor
inc
pop
fdivs
mov
mov
stos
lods
mov
pop
mov
mov
mov
cmp
shrb
jecxz
aam
pop
pop
mov
xchg
mov
cmpsl
inc
mov
call
xor
cli
adc
fisubl
mov
test
mov
push
mov
mov
cltd
repz
loop
fwait
adc
out
mov
int3
test
aas
movsl
xchg
das
lea
sbb
push
xchg
add
mov
or
sub
scas
leave
scas
mov
adc
dec
aas
xorb
cmpsl
data16
mov
mov
adc
shll
rcl
xor
movsb
into
push
iret
fistl
clc
fst
stc
mulb
add
cs
xchg
adc
cmc
fcoms
xor
jo
enter
neg
fcmovbe
popf
mov
test
or
sbb
mov
les
mov
pop
pop
fwait
icebp
into
xor
adc
lds
or
xchg
loope
cmp
push
inc
push
cmp
adc
mov
jae
inc
shrl
pop
fimull
adc
into
pop
mov
dec
or
mov
dec
imulb
xchg
sbb
fdivr
lods
enter
jns
arpl
mov
adc
or
loop
mov
rcl
sbb
out
iret
ljmp
out
push
adc
xlat
into
mov
mov
lret
push
mov
mov
movsb
lret
add
sbb
lret
pushf
fdivrs
cmc
and
or
fsubrp
lds
mov
xor
repz
xchg
loope
inc
ret
bound
mov
sbb
cmp
test
ljmp
xchg
loope
ficoms
fstpl
ljmp
fstl
iret
mov
pop
ftst
cltd
xlat
mov
lds
xchg
dec
mov
aad
nop
xchg
adc
ror
xchg
jge
lods
mov
shll
mov
mov
sub
loope
cmp
xchg
push
repz
dec
jae
sub
lret
mov
pushf
xchg
jns
xchg
call
shll
adc
jb
sub
jmp
and
out
iret
mov
ljmp
sub
bound
icebp
mov
xorl
pop
pop
push
leave
mov
lods
mov
mov
repz
mov
fidivrl
push
sahf
lret
movsl
enter
hlt
adc
fnstcw
into
dec
add
lea
xlat
leave
das
mov
mov
stos
pushf
scas
popf
push
mov
repz
xchg
mov
lret
ss
stos
cli
fwait
lret
and
aas
repnz
aam
addr16
rorl
stos
fsubl
dec
enter
cmpsb
stc
test
ror
sub
push
ror
cld
ret
incl
inc
mov
into
xchg
fucom
scas
fdivs
and
push
mov
test
pushf
in
loope
jmp
int
shr
lock
ret
and
sbb
mov
push
mov
jo
pushf
decb
movl
mov
xchg
les
dec
test
add
mov
lcall
cmp
fimuls
lods
rolb
lret
adc
xlat
mov
cmc
leave
lret
fiaddl
mov
popa
push
das
cmc
scas
jae
aam
rcl
rcr
mov
adc
int3
fisubrl
pop
mov
stos
iret
inc
lds
xchg
scas
test
mov
call
xor
mov
repz
movsl
ds
adc
aad
movsb
loop
leave
inc
mov
movsl
mov
inc
inc
mov
sbb
xchg
and
dec
fcoml
mov
ljmp
or
adc
out
sahf
dec
xlat
stos
out
mov
add
cmp
adc
lret
fcomps
test
xchg
mov
fmulp
jl
jmp
scas
mov
das
push
sub
stos
sar
loop
push
adc
lods
adc
fmull
xchg
idivb
pop
fsubs
dec
adc
aad
shrb
rclb
clc
mov
pop
es
mov
enter
xchg
xchg
push
and
mov
dec
imulb
loop
movsb
jb
movsl
xlat
add
call
lret
mov
xchg
xchg
into
scas
mov
jl
sti
pushf
leave
mov
ret
mov
xlat
and
test
jmp
jnp
aad
stos
movsb
mov
aaa
outsb
rorb
cmpsl
mov
sbb
push
lods
gs
divb
jecxz
mov
mov
lea
mov
fptan
es
inc
iret
lods
mov
mov
frstpm(287
ljmp
or
mov
pop
data16
sti
es
rolb
bound
jg
and
loop
call
jl
adc
inc
or
and
fcom
jl
mov
shrb
out
mov
sarb
or
inc
add
popf
cmp
out
xor
push
movsb
mov
xchg
jle
out
sahf
mov
div
ljmp
dec
test
or
in
jecxz
mov
mov
push
leave
call
loop
stos
inc
fucomi
mov
movsb
out
retw
push
outsl
ja
lods
sbb
fdivrl
loope
int
lret
cmpsl
es
add
popf
in
fdivrs
mov
enter
arpl
sahf
pop
adc
test
lret
lds
mov
mov
pushf
mov
fimull
scas
fcmovnbe
repz
aam
inc
add
mov
fs
into
test
adc
int
out
adc
sbb
push
cmpb
mov
add
ret
dec
mov
aam
pushf
lret
fimull
int
rorb
inc
mov
movsb
int3
stos
mov
sub
dec
loope
test
mov
xchg
ljmp
sbb
mov
cwtl
lret
push
and
int
fcmovbe
fisubrs
push
scas
mov
imul
fnstcw
je
xchg
je
out
frstor
leave
lahf
mov
test
lds
jl
fisubrl
xor
iret
sahf
scas
mov
ror
leave
dec
cs
fchs
jb
stos
shlb
jae
leave
loope
les
fdivr
mov
xchg
rclb
mov
hlt
stos
push
mov
imul
popf
loope
loope
push
scas
leave
push
or
rcl
cld
push
setno
mov
fucomp
mov
mov
or
into
es
lods
movsl
pushf
out
pop
cwtl
repnz
mov
xlat
mov
or
je
add
cmpsb
out
mov
xor
ja
lret
mov
add
addr16
adc
fsubrs
imulb
mov
and
out
lahf
jb
shlb
bound
fisubrs
mov
lret
scas
mov
cmpl
aam
lods
lods
loope
mov
mov
lret
push
ficompl
fwait
shll
jne
sarl
aam
push
cmpsl
aad
fnstcw
fucomp
adc
vpsrlw
or
les
inc
mov
dec
mov
aad
leave
dec
mov
pushf
dec
mov
cmp
xchg
fsubp
dec
stc
adc
into
mov
fnstenv
inc
popf
mov
lret
movsl
idivb
out
fcmove
sbb
loopne
fdivl
xchg
push
test
imul
mov
out
pop
push
movsb
jp
bound
pop
xor
sub
aam
dec
jl
fcomi
xor
lock
into
xor
mov
fadd
mov
fnclex
test
mov
rcrb
into
sub
push
xlat
aam
fldt
xchg
adc
mov
int3
stos
aad
jns
lods
imulb
clc
ljmp
out
int
clc
sub
push
mov
mov
shl
mov
dec
neg
loopne
jmp
popf
std
inc
stos
xor
ret
adc
mov
sbb
lods
adc
adc
fwait
mov
pop
fxch
ja
insb
dec
push
outsl
or
stos
pusha
sarl
adc
xchg
dec
sbb
mov
sahf
fsub
mov
imul
lods
lea
pop
push
jl
loop
pop
scas
mov
rclb
inc
mov
shll
dec
popf
fsubrl
into
test
mov
xchg
scas
mov
xchg
mov
push
rcr
sub
cmp
frstor
fcoms
xchg
ljmp
mov
cmpsl
cli
ret
imul
or
lret
inc
aam
add
mov
mov
pop
xchg
call
lods
repz
leave
fldcw
lret
lret
ljmp
sahf
ror
out
or
popf
rorl
iret
dec
mov
cltd
mov
adc
adc
adc
mov
test
pop
xor
sarb
iret
xor
leave
stos
int3
fimull
cld
dec
lods
bswap
mov
call
mov
fisttpll
ljmp
mov
mov
enter
clc
pop
jle
shl
frstor
daa
icebp
cmc
dec
int3
mov
mov
mov
cmp
or
dec
pop
rorl
sub
popf
pop
cli
fsubs
push
scas
mov
loop
and
xchg
mov
in
shlb
aam
ror
stc
outsl
sti
dec
or
sub
sbb
stc
mov
leave
fcomps
cmpsl
sub
shll
pushf
add
xchg
cmp
adc
aad
or
pushf
mov
retw
dec
sub
lret
ffreep
ljmp
xorl
add
dec
les
daa
rcrl
mov
js
dec
dec
push
sahf
lret
jno
ss
repz
mov
lods
mov
or
inc
sbb
fdivrl
lret
fcmovnbe
ret
rcrl
xlat
xchg
cld
into
pushf
lods
loop
test
negb
mov
fistl
mov
popf
test
cli
into
xchg
ja
loop
repz
jp
xor
or
push
push
fcomps
cmp
or
mov
gs
jp
popf
pop
adc
int
scas
fwait
rorb
push
mov
sarl
fcmove
fwait
shrl
jb
mov
ljmp
cld
inc
lea
les
es
pop
mov
adc
jecxz
inc
mov
mov
jae
pop
scas
aas
fistps
jg
jb
push
leave
repz
push
mov
idivb
xchg
icebp
fmul
outsb
int
ror
sub
call
pop
mov
dec
xor
push
icebp
cmp
shlb
ljmp
scas
adc
ljmp
lret
lahf
push
stos
leave
out
lret
sarl
push
ja
mov
cmp
stos
and
mulb
rorl
scas
sbb
mov
fwait
jbe
or
jo
test
or
stos
repz
les
out
inc
mov
movsl
adc
or
inc
push
jno
mov
into
sbb
pushf
das
adc
cmp
ss
pusha
cmp
test
mov
add
mov
xchg
sub
into
neg
xor
push
and
fcoml
jmp
pushf
stos
mov
loopne
aam
sbb
orl
mov
mov
popf
lods
or
fmulp
fsubr
mov
lea
into
mov
sub
scas
int3
lods
das
push
pop
data16
lret
mov
int
mov
ja
lods
out
sti
stos
popf
adc
fldenv
lock
test
sbb
cli
mov
mov
idivb
roll
mov
mov
mov
xor
mov
lret
ror
sbb
scas
pop
mov
sarb
call
lahf
fxch
test
mov
fs
mov
push
stos
lock
mov
pusha
out
out
ret
lds
icebp
aaa
cwtl
mov
mov
jb
popf
pushf
inc
repnz
imul
ljmp
push
test
mov
movsb
adc
ficompl
or
mov
js
das
loope
sarl
or
lods
movsb
lods
popf
nop
repnz
stos
sub
or
leave
iret
adc
mov
cmc
ljmp
lods
push
hlt
dec
mov
mov
dec
out
stos
sbb
pop
fisubrl
dec
fstp
pop
cmpsb
fwait
out
and
enter
ret
ror
data16
int3
mov
jb
mov
push
lahf
rorl
lods
xlat
lods
cli
lret
lods
les
push
mov
leave
push
jae
lret
mov
call
pushf
les
leave
lock
scas
ficomps
movsb
ljmp
add
iret
xchg
int
fcoms
mov
mov
sarb
in
ret
repz
cmpsl
mov
mov
mov
cmc
fwait
int
xchg
rcl
jbe
mov
push
xorb
and
adc
pop
mov
sub
repnz
scas
iret
popf
xor
sahf
pusha
cld
push
int3
mov
push
stc
and
mov
inc
test
or
or
loopne
mov
dec
rorl
fwait
aam
shll
idivb
out
sbb
mov
sub
shl
int3
sahf
mov
push
loope
fcomps
mov
xchg
adc
clc
mov
jp
stos
xchg
mov
test
iret
dec
mov
ret
mov
test
dec
aam
les
and
shrl
iret
sbb
inc
call
or
mov
into
ljmp
and
repz
sti
mov
jmp
mov
sub
or
mov
mov
scas
out
aas
push
mov
iret
or
stos
cmc
sub
lahf
lret
cmp
rcrb
xor
or
mov
mov
and
mov
movsb
popf
push
test
inc
nop
pushf
loop
mov
mov
scas
fistl
ja
out
in
loope
lods
add
or
aam
stos
mov
lods
cmp
pop
out
loop
shl
int3
int
in
test
leave
push
ret
or
sahf
mov
mov
mov
enter
stos
fisubs
movsl
sahf
mov
mov
ret
loopne
or
les
lret
cli
ret
sbb
shlb
clc
les
out
or
call
inc
addb
lods
out
push
mov
int
scas
mov
jo,pt
fnstenv
loopne
loope
outsb
nop
call
mov
popf
cli
aad
mov
clc
into
ds
mov
add
push
sbb
mov
mov
cmpsl
scas
ds
cmpsl
cmp
out
sti
lods
or
ror
lods
test
push
sbb
dec
fisubs
push
mov
iret
jge
add
mov
rorl
cmp
lds
stc
test
lahf
bound
loopne
lods
fcmovu
jecxz
fwait
test
test
and
int
push
xor
enter
test
ljmp
call
jecxz
jmp
loopne
fwait
ret
mov
xchg
adc
data16
mov
mov
or
ret
stos
inc
fcmovnbe
cld
fisubs
test
in
fisttpl
scas
mov
sbb
mov
lret
cmpsl
insl
push
mov
sahf
push
imul
xchg
lods
das
and
adc
test
push
lods
orl
packsswb
mov
clc
iret
scas
push
add
pop
aam
inc
cmpsl
mov
mov
lret
orb
int
xchg
push
enter
push
sarb
mov
movsl
jg
xor
mov
sahf
jge
fcmovne
xor
inc
or
adc
mov
shll
inc
mov
or
mov
dec
cmpl
sbb
adc
shlb
rol
clc
sbb
fcmovb
loope
es
mov
daa
cli
or
scas
leave
popa
sbb
iret
lods
sub
out
pop
add
es
xchg
sbb
aam
mov
jmp
data16
loop
int3
add
or
addr16
adc
mov
lret
mov
mov
popf
movsl
fidivs
fmuls
scas
into
lea
cmp
xor
xchg
out
mov
movsl
ret
scas
mov
movsb
xor
test
popf
ljmp
lods
sub
mov
scas
push
out
aad
in
ret
loop
repz
rcr
push
aam
fnstsw
loopne
pop
mov
repz
ficoml
movsl
push
inc
cltd
sub
lret
lds
popa
fwait
dec
mov
fcmove
scas
pop
orl
mov
or
mov
sbb
les
mov
ret
testb
mov
pusha
fmul
adc
call
fisubs
pushf
rcll
mov
xchg
add
fdivr
jb
jle
adc
outsl
popf
mov
test
scas
xor
mov
imul
insl
aam
lock
adc
frstor
sahf
sub
adc
cmc
jo
out
xlat
sub
mov
aad
aam
scas
call
and
mov
mov
imul
and
cmpsl
mov
xchg
jecxz
cvtpi2ps
lods
jb
iret
mov
enter
fmul
xchg
out
sbb
mov
mov
aam
mov
mov
or
lods
shll
fstps
jmp
jge
mov
iret
mov
adc
lds
stos
mov
mov
nop
pop
push
mov
loope
xchg
mov
ljmp
sub
adc
out
or
fnsave
repnz
mov
push
pusha
loop
lds
or
int
jle
mov
lret
pop
xlat
mov
adc
mov
inc
or
mov
or
mov
adc
fistpl
jge
mov
mov
aam
outsb
mov
mov
dec
rcl
dec
pop
xchg
pushf
inc
out
mov
xchg
add
outsb
lea
sub
mov
fsubs
or
sbb
mov
jmp
scas
in
test
xlat
outsb
sbb
clc
outsb
test
scas
and
and
repnz
aam
movsl
sar
movsb
roll
out
fucompp
pop
dec
pop
pop
in
xchg
cmpsb
ret
push
mov
lahf
fcompl
int3
and
sub
adc
jo
insb
cmp
push
movsb
stos
lcall
dec
mov
test
rcl
or
ljmp
xchg
fldl
cmp
aam
push
rol
repz
div
jl
jmp
sub
jno
mov
inc
je
dec
scas
and
sub
insl
xor
lret
pop
nop
leave
ret
or
iret
repz
imul
in
mov
fs
aam
fcmove
jle
xchg
aad
sarb
outsl
mov
sub
fwait
dec
mov
mov
xchg
lret
out
add
scas
scas
stos
and
jmp
les
outsb
sub
mov
cmp
icebp
fbstp
add
call
pop
dec
popa
mov
ds
or
dec
fidivs
repnz
push
xchg
adc
rclb
loop
push
or
ret
xchg
fwait
movsb
lea
out
xchg
cld
lret
pop
test
dec
mov
add
movsb
je
lods
xlat
stos
mov
nop
movsb
into
test
rcl
ret
fnstsw
outsb
sbb
lock
stos
stos
fistpll
into
mov
fistpl
dec
and
rolb
lock
pop
cmp
mov
inc
into
jge
clc
nop
stos
pop
push
lret
fwait
bound
mov
inc
xchg
add
int
out
add
cmp
xor
sub
bound
out
cmp
dec
and
movsb
js
aad
ret
jb
repz
shlb
add
cmp
int3
call
mov
or
mov
xchg
push
int3
loope
int3
scas
shrb
pop
pop
cmc
push
sub
adc
lea
ljmp
xchg
mov
lahf
int
popf
and
mov
mov
xchg
adc
inc
outsb
rcl
loop
dec
aam
and
jmp
out
scas
popa
lea
dec
loop
loopne
and
fs
sub
enter
clc
nop
adc
negb
cli
fidivrs
mov
cli
scas
push
imul
shr
aas
jecxz
stos
inc
cmpb
xor
mov
push
cmp
mov
xchg
pop
movsb
and
jb
insl
xchg
mov
sub
or
mov
lock
mov
mov
or
adc
ljmp
mov
push
ret
pop
mov
movsb
fidivs
out
test
jmp
add
outsb
sti
pop
decl
sbb
loop
into
push
mov
mov
mov
xchg
nop
mov
add
jl
scas
dec
mov
out
es
cmpsb
loope
lret
lods
lret
sub
mov
mov
mov
pop
out
jp
mov
mov
out
pop
sub
rcr
add
dec
mov
movsb
mov
xchg
ljmp
mov
mov
xor
sbb
sbb
mov
xchg
test
pushf
or
dec
pushf
jmp
test
lds
shrb
repnz
mov
lods
xor
add
test
les
popf
cmp
pop
cld
pop
adc
scas
sahf
loope
mov
lret
mov
int3
fmul
lret
hlt
jb
lods
ffreep
mov
aaa
fsubr
lcall
leave
int3
mov
lds
dec
rolb
subb
popf
mov
shlb
out
sub
scas
movsl
test
shrl
dec
mov
mov
insb
gs
aas
gs
fstpl
mov
push
aam
test
call
movsl
nop
mov
int
stos
xlat
mov
add
pushf
repz
jae
leave
imull
mov
out
lods
std
mov
jmp
sbb
sahf
lahf
fs
call
out
jle
movsl
xchg
mov
pop
lods
jl
push
lods
add
cli
aad
stos
fisubl
test
fwait
lods
or
mov
pushf
fwait
push
out
scas
inc
sbb
mov
add
cld
ficoml
jecxz
xor
mov
xor
inc
insb
lret
and
repz
dec
sub
es
test
neg
sub
jb
movsb
popf
mov
sahf
lret
rcr
mov
cld
stos
test
ja
and
fnstenv
rcrb
add
sar
fsubrl
fidivrs
dec
pusha
imul
or
mov
pushf
mov
pop
sbb
cmpsb
iret
ret
mov
pushf
leave
jmp
xchg
mov
loope
fst
scas
loope
mov
loope
loope
xchg
cmp
pop
stc
cmp
sbb
mov
sahf
push
mov
loope
lds
fldcw
mov
pop
ret
xchg
int
addr16
mov
add
mov
jmp
and
sahf
aam
cmpl
mov
loop
repnz
xchg
mov
scas
sar
loope
aaa
lahf
mov
iret
xchg
mov
cmp
mov
scas
les
adc
gs
xlat
inc
fmul
push
fcmovu
xchg
les
adc
mov
dec
mov
aam
mov
sub
mov
fsubrs
lahf
in
daa
xchg
mov
mov
mov
mov
test
cltd
repz
xor
add
fcompl
fcmovbe
out
movsl
mov
push
inc
mov
jmp
sub
dec
mov
data16
mov
or
jmp
loop
idivl
rep
jns
or
movsb
sub
orl
fiadds
and
out
mov
call
mov
xor
jns
lret
fcmove
jmp
jp
xchg
pop
sahf
jle
push
cmpsl
mov
cmp
iret
pop
cmpsb
and
sti
movsb
sti
nop
cld
cmpsb
or
lods
popf
pop
mov
stos
flds
mov
push
push
lret
and
pop
loopne
ficoms
rcrb
mov
lret
lret
adc
scas
int
mov
lods
jl
sub
mov
pop
ffree
mov
fsub
pop
orb
push
call
aad
fmul
mov
inc
jbe
ficompl
cli
fsub
mov
popf
mov
push
xlat
mov
lock
mov
into
out
mov
add
les
adc
test
push
out
mov
mov
lret
fcmovnu
repz
int
jo
aas
lds
into
cmp
dec
add
mov
fsubp
sbb
or
xor
mov
out
inc
iret
inc
mov
aam
lahf
push
mov
scas
xor
adc
test
int3
test
roll
mov
mov
ss
inc
test
or
movsl
rcrl
sub
mov
inc
mov
cmpsl
lea
ss
sbb
scas
out
lret
movsb
out
inc
xlat
or
push
cmpb
cmp
pop
rcll
jmp
cld
dec
cli
or
add
mov
cmp
stos
lcall
lret
stos
mov
in
pop
ret
lret
xchg
fisubl
mov
lods
mov
xor
fcoms
lret
xchg
mov
mov
scas
cmp
add
pushf
cmpsl
pop
xchg
repz
enter
xor
popf
aam
roll
mov
mov
push
mov
lret
jg
push
jmp
out
mov
int
leave
or
pop
hlt
or
xsha256
cmpsb
shll
xor
mov
adcb
fisubrs
and
cltd
xchg
mov
cmp
mov
xchg
push
xchg
mov
sub
xchg
xchg
shrl
fucom
push
pushf
out
enter
mov
jg
iret
rcrl
adcb
and
sub
fstps
mov
mov
rcrl
repnz
fmul
mov
mov
leave
jle
mov
adc
fiaddl
not
mov
mov
jl
or
iret
fwait
lret
sub
in
pop
cmpsb
les
inc
out
mov
fcmovnbe
loop
sub
iret
pushf
loope
shlb
mov
adc
lods
lds
jmp
aad
mov
dec
fcom
jle
movsb
movsb
sahf
mov
xor
mov
xor
fadd
mov
int3
mov
push
jo
call
xchg
sub
ds
loopne
jl
mov
int3
jbe
das
loope
mov
mov
mov
stos
jnp
les
dec
cmpsl
leave
lret
mov
sahf
ret
mov
das
sti
in
mov
lds
sbb
pop
idivl
roll
inc
pop
or
fiadds
addr16
mov
popf
pushf
lds
daa
das
psrad
jmp
gs
xchg
into
fsubrs
repz
add
or
ss
faddp
adc
xchg
inc
stos
xchg
icebp
sbb
adc
jbe
fimuls
push
sarb
mov
xor
adc
mov
mov
adc
lock
loop
into
or
jp
adc
test
ret
lods
or
mov
mov
dec
pop
lahf
sahf
loopne
movsb
js
xchg
mov
ljmp
cltd
jl
xchg
ficompl
int
jmp
mov
sub
orl
xor
repnz
adc
and
mov
cmp
aas
cltd
add
push
insb
ret
sbb
scas
nop
fdivl
leave
loop
xor
xchg
cs
cli
stos
pop
test
rcll
or
shr
fistpll
jno
sbb
loopne
lods
aad
or
jo
mov
mov
cltd
sbb
adc
inc
stos
mov
mov
jg
pusha
adc
cmpsl
out
mov
fmull
sub
stos
iret
pop
mulb
fnsave
lahf
mov
iret
mov
adc
sarl
sbb
and
call
cmpsb
insl
push
inc
mov
adcb
lret
ljmp
aaa
es
adc
xchg
loop
shlb
mov
pop
xchg
push
lods
jmp
int3
jmp
out
out
rorl
aad
xlat
insb
inc
lret
hlt
lahf
sbb
mov
shl
sub
xchg
shrb
mov
shll
lret
call
mov
cld
es
cs
adc
in
xchg
mov
scas
inc
mov
cmp
iret
sbb
dec
rol
mov
repz
leave
mov
fld
out
movsb
stos
out
cmp
mov
ds
aam
mov
and
movsb
xchg
sahf
les
call
leave
fmulp
mov
es
jg
mov
shlb
push
enter
lea
mov
cmpsb
sub
fsub
shrb
xor
inc
push
jge
clc
mov
ds
fwait
and
movsb
iret
mov
mov
mov
loopne
ret
mov
insl
xor
clc
mov
lods
mov
fistps
std
pop
movsl
mov
movsb
aam
fistpl
fisubrs
int
stc
out
enter
shr
lret
dec
jae
inc
mov
out
cmp
das
mov
bnd
mov
sbb
jae
test
adc
mov
pop
arpl
cmp
rorl
lret
cmp
bound
bound
mov
bound
loope
aad
das
dec
mov
sbb
mov
mov
loop
mov
sub
cmc
rcrl
cmp
pop
clc
lods
movb
xor
pop
lds
dec
mov
jmp
mov
fisubrl
mov
sbb
leave
fld
cmc
stos
test
add
loopne
mov
shlb
cld
jb
lods
popf
scas
out
and
mov
leave
mov
clc
add
xor
sarb
push
ret
insb
xor
not
lods
sbbb
leave
loope
pop
or
int
imul
pop
adc
pushf
inc
xchg
mov
mov
mov
test
jb
loop
mov
lcallw
pusha
add
lret
xor
and
fisubrl
adc
inc
mov
mov
loopne
aad
out
xchg
sbb
mov
sub
mov
stos
jg
aam
lods
sahf
loop
test
lret
pusha
jb
jns
ss
mov
js
out
dec
inc
imulb
cld
sub
test
sub
loop,pn
cmp
lret
push
pop
cmp
cwtl
xchg
sbb
imul
scas
loop
xchg
lahf
fwait
pop
leave
mov
dec
adc
push
les
cwtl
mov
stos
lea
imul
xor
sbb
test
mov
adc
loop
popa
push
xchg
mov
add
enter
push
mov
add
icebp
adc
imul
fimull
mov
int
xchg
push
lret
ljmp
mov
or
mov
scas
fyl2x
jmp
fwait
repnz
lret
out
mov
push
mov
int
xor
lret
xlat
jle
in
mov
inc
xor
mov
pusha
sti
sub
adc
fdivrp
les
int3
xlat
fcomps
pop
inc
sub
sti
bound
xchg
mov
xchg
cmpsl
out
lods
or
fsubr
stos
scas
leave
mov
mov
out
lret
mov
lret
popf
jge
test
or
xchg
xor
mov
lock
addr16
lods
scas
dec
inc
mov
movsb
repnz
or
lods
jns
sub
adc
mov
lods
cltd
mov
pop
mov
inc
sub
mov
jecxz
add
out
movsl
fwait
mov
call
jg
xchg
adc
mov
mov
cmpsb
xor
cmpsb
lods
xor
fwait
scas
in
cmpsl
sbb
ljmp
movsl
mov
aad
cmp
incb
ljmp
or
cmp
mov
es
add
lret
mov
int
lahf
push
aam
shll
mov
test
call
push
lret
out
push
cld
mov
mov
pop
loop
mov
leave
rclb
iret
xchg
mov
push
vrsqrtss
out
fldl
loop
data16
jo
insl
loop
mov
inc
dec
ret
and
push
pop
mov
shl
cmp
repz
add
in
mov
sahf
jmp
lods
les
daa
jns
dec
adc
mov
lret
mov
loopne
mov
lret
int3
call
in
mov
xor
ss
xchg
pop
out
ljmp
stc
mov
mov
mov
outsb
mov
push
test
dec
lret
pushw
xchg
movsb
sub
push
fchs
ror
mov
movsl
xor
mov
or
frstor
sbbl
das
pop
popa
push
mov
cmpsl
and
mov
mov
mov
mov
leave
fiadds
cltd
pushf
xor
jb
adc
shrl
mov
push
ret
or
repz
test
jmp
mov
push
push
mov
pop
mov
aad
clc
int3
jmp
lret
cmp
mov
mov
fidivl
repz
mov
cmp
clc
push
bsr
sbb
mov
and
jmp
jmp
ret
mov
xchg
pop
inc
sbb
imul
xchg
and
ds
lock
mov
testb
aad
adc
icebp
icebp
bndstx
and
mov
aam
mov
lret
fadds
mov
adc
aaa
ljmp
scas
xor
pop
int3
mov
xchg
out
out
rorb
shlb
mov
fxch
xchg
sub
sti
or
pop
test
sahf
mov
jl
ljmp
mov
movsb
iret
fnstcw
loop
into
movsl
out
mov
mov
fistpl
mov
mov
ljmp
sbb
push
pop
and
ret
negl
lods
cmc
mov
xchg
jg
fcmovu
mov
clc
lret
mov
mov
lods
ret
fsts
stos
fsubrl
mov
rorb
mov
stos
mov
adc
xchg
and
movsb
not
mov
call
mov
mov
xchg
addb
mov
lock
fdivs
mov
stc
dec
lods
jmp
leave
mov
das
inc
aam
dec
lds
dec
pop
sbb
stos
sbb
stos
sahf
sub
stos
cmp
xor
mov
call
fiaddl
lret
sub
fucomp
ljmp
lods
mov
enter
mov
mov
mov
cmpsl
movsb
push
fdivrs
scas
fisubrs
mov
xchg
cmpsl
test
lret
fidivs
sti
ss
xchg
fidivl
mov
mov
rcl
ret
add
mov
adc
mov
sbb
ret
loop
or
loope
mov
decl
in
pop
pusha
xchg
loope
popf
lods
fst
lret
fcmove
and
mov
stos
mov
mov
fwait
int3
cli
popf
ret
aam
pop
and
mov
mov
mov
ficoml
scas
xlat
call
stc
in
mov
mov
hlt
imul
int3
and
enter
ret
fstp
fsubp
out
mov
aad
into
mov
enter
imul
fistpl
or
lret
mov
lods
rcr
lods
stos
imul
jmp
mull
scas
sub
and
cmpsl
test
iret
ds
int3
push
mov
rcl
lods
mov
mov
mov
xchg
enter
int3
push
mov
fisubrs
or
mov
mov
test
enter
shlb
fwait
lods
sub
pusha
push
cli
popf
test
notb
test
sahf
jb
fsubrl
or
lods
mov
lods
shr
fsubrp
stos
and
fisttpl
adc
loope
dec
iret
movsb
xor
mov
int
fcomp
pushf
mov
ljmp
fnsave
pop
bound
stos
test
in
dec
ret
jb
loop
movl
fsubl
lods
cmc
stos
loop
mov
mov
ljmp
test
mov
shlb
aad
iret
sarl
or
mov
mov
mov
fwait
xlat
mov
lret
scas
cmpsl
popa
jo
cs
mov
dec
out
lret
aad
mov
sbb
add
movsl
xlat
sbb
mov
rcrl
mov
nop
jb
stos
mov
int
sbb
mov
shr
cmp
mov
fldl
movsl
push
stos
fistps
in
aam
mov
adc
lods
test
sbb
mov
lret
movsl
iret
mov
dec
mov
ds
inc
sbb
shrl
lods
movsb
test
jmp
ret
out
mov
ror
stos
sub
and
push
pop
int
fnsave
dec
add
dec
out
and
popa
int3
xchg
mov
lods
and
inc
call
ljmp
out
push
rol
sbb
fsubrp
rorb
leave
mov
mov
dec
rclb
jg
mov
sarb
mov
ss
or
test
mov
loope
mov
aam
movsb
int
ret
mov
ret
roll
inc
add
test
andb
loope
orl
mov
xchg
mov
call
push
aad
out
lret
mov
ljmp
rcrl
ficoml
int3
add
jmp
push
repz
popf
mov
dec
out
mov
fsub
adc
or
mov
dec
and
push
out
adcl
scas
iret
icebp
push
xor
lods
test
cmpsl
push
adc
fsubrs
js
in
cmpsl
xor
mov
pop
stos
iret
aam
xchg
shrl
enter
mov
pop
mov
sub
loope
adc
lds
test
lret
rol
mov
iret
jmp
lret
push
sub
repz
lret
movsl
rcrb
dec
mov
add
iret
lds
mov
mov
fisubs
aad
test
leave
mov
xchg
mov
xlat
int
dec
lods
outsb
push
sti
mov
push
mov
into
loop
iret
in
movsb
mov
cmpb
aad
iret
cmpsl
loope
leave
cmc
xchg
mov
mov
mov
orl
cmpb
test
fisubl
ficoml
adc
mov
ficompl
add
jo
cmpsl
cld
scas
jmp
pushf
dec
cli
cltd
sahf
add
xchg
mov
push
push
lods
mov
test
mov
and
rcl
into
mov
mov
fisttpl
mov
repz
test
mov
fcmovu
repz
sbb
aad
hlt
cmpsl
mov
pushf
push
bound
out
outsl
xchg
lahf
out
movsl
sti
out
clc
or
out
mov
lret
out
ss
lea
mov
loop
adc
inc
xlat
inc
fwait
mov
out
mov
or
sarb
mov
lods
call
mov
enter
cmp
mov
fwait
push
lods
dec
xchg
fucomi
cmpsl
loop
lret
fisubrl
push
dec
mov
sarb
pop
adc
repnz
jg
ficomps
xlat
nop
call
xchg
fisttpll
lds
popa
xchg
xchg
adc
pushf
jmp
repnz
movsb
addr16
leave
xchg
test
pusha
adc
loop
enter
xor
or
decl
out
into
mov
dec
int
test
lret
cli
mov
push
mov
imul
int
testb
fcomps
out
notb
mov
add
jle
scas
out
int3
fcmovnb
sub
jmp
mov
inc
push
aad
ror
xor
dec
adc
leave
stos
mov
xlat
xchg
jmp
fxch
addr16
mov
jb
mov
pop
sbbl
xor
aas
pushf
jmp
mov
sahf
and
cmpsl
inc
mov
mov
lret
iret
test
mov
aad
popf
mov
dec
shlb
enter
mov
mov
mov
nop
mov
lods
es
mov
mov
dec
outsb
roll
push
lret
into
mov
rorl
movsl
repz
xchg
jmp
mov
adc
push
or
xor
lret
popf
loop
mov
je
mov
fildll
sti
aam
mov
add
iret
push
pop
xlat
stos
lcall
das
adc
mov
dec
shll
nop
add
ret
shll
mov
stos
fisubrs
shrl
and
mov
fdivs
leave
insb
ds
lods
pushf
ret
bound
sub
lods
daa
loop
fcoms
mov
loope
inc
dec
scas
adc
lret
add
ljmp
iret
xchg
adc
sti
das
sbb
out
ljmp
test
out
loopne
mov
int3
mov
cmpsl
inc
sbb
mov
into
adc
lret
push
cmc
mov
arpl
cmpsl
out
jo
out
mov
outsb
aam
cmpsb
sahf
sub
mov
enter
addr16
sbb
xchg
enter
push
icebp
stos
pop
inc
sub
enter
aad
and
scas
call
fdivrl
add
mov
sahf
mov
out
shrb
mov
or
lods
iret
ljmp
js
mov
mov
sbb
out
mov
scas
inc
fcmovb
cld
mov
or
mov
mov
mov
fldcw
frstor
lods
shrb
cmp
cmpsl
xchg
les
sarl
ret
ret
fidivrl
or
or
mov
repz
pop
leave
mov
inc
stos
fwait
sub
dec
xor
lods
ds
push
dec
sub
push
aam
sbb
iret
cmpsl
xor
ljmp
in
mov
in
fisttpl
fnsave
pushf
cli
sub
call
mov
scas
bound
mov
out
scas
mov
mov
mov
pushf
out
xlat
adc
mov
jbe
fcomps
xchg
adc
scas
cmpsb
fneni(8087
test
mov
out
lret
fwait
negb
ss
mov
mov
decb
xlat
loope
int
xchg
stos
fdivrs
fbld
fsubrl
cmp
xchg
push
out
es
jmp
xor
lret
mov
popf
lds
fldcw
and
mov
xchg
xchg
xchg
stos
jae
rcrl
stos
call
mov
ror
aad
fdivrs
int
je
cmp
imul
mov
xchg
mov
aam
movsl
jg
sub
push
loope
test
movsb
mov
addr16
mov
mov
sahf
fsincos
mov
mov
int3
stos
and
les
stos
out
cli
push
and
ljmp
xchg
out
jnp
mov
clc
cmp
into
fwait
jb
movsl
ret
movsl
cmp
iret
mov
rcl
or
pop
into
loopne
sbb
lret
dec
lds
xchg
int3
xchg
xchg
inc
or
lods
scas
je
and
aam
push
sub
lret
insb
mov
lods
iret
pop
ret
loop
shll
pop
sbb
inc
sahf
dec
js
adc
mov
jne
arpl
mov
mov
mov
aam
movsb
ret
loop
mov
call
js
mov
xorl
push
lret
ja
enter
test
jne
cld
data16
loop
out
lret
mov
repnz
stos
test
mov
cld
xchg
sti
pop
outsl
adc
sub
pop
aaa
repz
mov
popf
pop
insl
enter
cltd
mov
test
into
xor
shlb
cld
jmp
or
xor
mov
fidivs
mov
cmp
scas
xor
movsl
ds
dec
and
outsb
je
mov
loop
mov
call
xor
cmp
scas
lahf
mov
mov
inc
pmulhuw
jmp
fdivs
enter
xlat
aad
frstor
mov
mov
sub
add
dec
inc
ljmp
jmp
stos
sbb
ret
pushf
cmc
mov
daa
push
fwait
stos
push
les
aad
mov
enter
sbb
lret
mov
in
int3
xlat
movsl
xor
inc
mov
call
cmc
dec
sahf
push
mov
mov
das
and
pop
test
insl
insl
movsl
arpl
inc
das
push
ror
enter
fdivl
test
sahf
ret
in
scas
and
sub
mov
les
fistpl
cmp
aam
pop
insl
addr16
lods
loop
ljmp
daa
jl
bound
ljmp
popf
xchg
inc
mov
inc
stos
mov
out
xchg
movsb
stos
cmpsl
mov
fcmovu
int
add
testl
mov
push
add
outsb
xor
sahf
or
xchg
insl
mov
test
sub
mov
or
lods
test
into
icebp
leave
jmp
fidivrl
fnstenv
push
pop
stos
test
cmp
inc
leave
stos
mov
repz
enter
stos
jo
pop
mov
ret
out
mov
outsl
adc
sbb
cmp
add
ret
lret
int
sbb
scas
lods
scas
leave
shr
test
push
mov
xchg
xchg
lret
icebp
outsb
mov
dec
aad
mov
loope
imul
lea
mov
or
mov
outsl
mov
mov
push
adc
mov
enter
iret
dec
mov
stos
daa
push
dec
xor
bound
les
popf
pushf
shll
ds
sahf
into
aam
stos
scas
pop
sbb
call
leave
outsl
pop
pop
xor
push
or
imul
mov
sar
test
data16
leave
loope
pop
jmp
sarl
iret
push
rorb
rep
sahf
mov
out
ret
test
or
stos
aad
mov
fidivs
es
push
int3
mov
fcmovb
push
out
fisubs
loop
mov
loop
lret
adc
sbb
lea
pushf
fldt
or
xchg
leave
mov
repnz
rorb
pop
or
jl
jmp
jmp
rclb
jo
outsl
stos
out
movsb
scas
mov
jae
sbb
out
into
cmc
mov
shrb
ret
aam
mov
movsl
pop
rcr
popf
insb
or
adc
cmc
into
adc
mov
xchg
test
mov
xchg
aad
adc
pop
and
mov
or
inc
lods
lret
popf
push
mov
mov
das
out
adc
movsl
out
xor
fisubl
cmp
mov
push
dec
sahf
mov
fstpt
out
test
push
cmc
rcll
jecxz
jl
mov
mov
mov
jle
rep
push
sbb
scas
sarl
les
or
xchg
aaa
stos
rcl
push
rcr
jp
shll
mov
sub
stos
loopne
repz
inc
out
fdivrl
scas
fs
nop
aad
enter
adc
mov
outsl
test
jge
rcrb
aad
mov
sub
mov
into
bound
filds
int
add
fcmovb
scas
cmpsl
cmp
pop
fcoms
cld
mov
in
mov
add
fisubs
sub
jp
sahf
lret
clc
stos
ror
clc
sub
aam
js
inc
push
mov
stos
adc
mov
lods
sub
lds
fwait
push
in
mov
mov
or
cld
and
inc
sahf
int3
jp
or
loope
xor
mov
mov
ffree
cld
mov
stos
lock
cli
xchg
adc
pusha
aam
aas
cltd
mov
cld
mov
lea
pushf
repz
dec
push
push
dec
call
mov
cmp
mov
adc
push
xlat
out
lods
lret
or
adc
push
mov
sub
pop
movsb
push
lods
stos
out
mov
mov
loop
fisttpl
push
fwait
mov
stos
add
imulb
dec
mov
movsl
lods
mov
inc
pusha
push
enter
in
std
sub
pop
sbb
shrb
sahf
ret
xchg
and
xchg
dec
les
cmpsl
stos
stos
mov
mov
aam
popf
in
lret
movsb
test
in
pop
or
fisubl
jb
mov
lret
ret
lock
les
cmc
sbb
aam
out
lds
push
loope
test
and
xlat
lret
cld
test
adc
les
xor
mov
ss
cmp
push
insb
mov
movsb
js
inc
nop
xchg
or
mov
sbb
dec
mov
popf
test
lahf
cmpsl
call
dec
enter
and
and
popf
js
or
fwait
roll
xchg
sub
loop
mov
test
fdivr
sub
scas
mov
adc
loop
mov
xchg
dec
and
clc
mov
lret
ret
xor
rcl
sbb
stos
add
movsl
sbb
sahf
fld
adc
scas
fisubs
fsubr
aad
mov
and
sbbl
leave
aam
push
cmp
dec
into
scas
mov
mov
int3
mov
shlb
shll
or
aam
xlat
jmp
iret
push
cltd
stos
stos
push
fwait
mov
ds
lock
int
cld
mov
sbb
mov
lods
mov
dec
adc
iret
and
mov
test
les
out
pusha
psubw
lret
mov
call
mov
ljmp
psubq
loope
xchg
mov
jmp
rol
aad
mov
pushf
mov
mov
out
fisttpl
add
and
fcompl
stos
dec
insb
sbb
lods
aaa
js
stos
out
xlat
clc
mov
or
lock
mov
fwait
mov
mov
mov
pushf
mov
and
jmp
rolb
push
mov
sti
jne
mov
movsb
fstpt
xor
xor
inc
into
adcl
outsl
rolb
xor
mov
push
gs
dec
ret
mov
lods
jl
cld
mov
lds
scas
mov
ficoml
lahf
or
dec
imulb
scas
mov
scas
iret
movsb
cs
out
fcomp
lahf
in
mov
jl
sahf
jmp
repz
fisttpl
arpl
xor
pop
sub
cmc
mov
push
xchg
enter
aam
dec
mov
rol
sub
jl
cmpsl
xor
cmc
dec
or
sti
ret
enter
dec
rcpps
mov
sarb
pop
cmp
filds
mov
test
mov
loope
int3
int3
out
imul
enter
repz
shll
loop
adc
fwait
movsb
adc
stos
mov
fcoms
movsl
aad
adc
loop
cmpb
repz
sahf
lret
divb
push
mov
xchg
xlat
scas
fwait
mov
cmpsb
add
mov
mov
lret
mov
shr
pop
jnp
inc
fcomps
popf
call
mov
mov
and
test
and
push
and
xchg
pushf
sub
adc
pop
dec
sub
mov
hlt
shrl
mov
mov
cwtl
lret
popf
popf
inc
rcr
push
ljmp
push
cmpsl
mov
lods
fwait
stos
scas
mov
ds
pushf
dec
push
lock
fcmovbe
fcmovne
ret
sub
mov
pop
lods
in
ljmp
jae
pop
push
arpl
mov
roll
into
mov
mov
iret
es
out
mov
dec
arpl
loope
xor
fwait
bound
or
mov
adc
fimuls
lahf
fcmovnu
and
pop
xchg
add
pushf
outsl
mov
add
mov
mov
xchg
fadds
sub
pusha
adc
mov
outsl
loop
stos
sbb
pop
xor
fldt
mov
push
lret
pop
xchg
cmp
adc
rol
test
lretw
lret
stos
mov
shll
movsb
mov
cmp
ss
daa
push
into
test
in
mov
mov
fnstenv
ror
jl
pop
mov
lret
cld
lcall
mov
mov
adc
lods
stos
jmp
jl,pn
mov
lods
mov
aam
jno
in
mov
loope
out
out
divb
sbb
inc
adc
lods
fucom
stos
or
lret
xchg
lock
mov
aam
dec
call
mov
and
xor
fcmovnbe
subb
jecxz
and
mov
cld
and
cwtl
push
xchg
push
adc
test
negb
lahf
adc
mov
xchg
stos
outsl
or
into
mov
into
push
mul
shll
mov
ds
lret
and
fcoml
movsl
xchg
decb
mov
and
mov
or
test
xchg
mov
xlat
rorb
push
sub
fnstenv
aas
cmp
fmuls
stos
mov
ljmp
cmp
mov
dec
movsl
pop
gs
xchg
push
fwait
push
loop
mov
fdivl
rorb
loope
movsb
xor
inc
cld
test
and
push
std
loop
mov
test
dec
lock
or
mov
into
pop
mov
aam
lods
mov
or
lods
mov
inc
pusha
or
xor
popf
add
push
sbb
mov
nop
stos
fxch
std
ror
movsb
scas
pushf
outsl
mov
stos
xchg
and
scas
sub
mov
adc
mov
or
out
repz
mov
and
subb
fldenv
cmp
mov
repz
mov
xor
enter
add
jne
roll
mov
lret
xchg
lahf
popa
and
cld
stos
mov
xchg
and
xlat
popf
mov
inc
or
mov
flds
lods
aaa
das
adc
jg
xlat
fwait
loope
or
pop
jb
cmpsl
mov
mov
jl
mov
sbb
loopne
sti
mov
adc
rcrb
lret
sbb
int3
fwait
cld
popf
and
ljmp
mov
and
sahf
test
mov
or
movsl
mov
mov
mov
or
mov
je
mov
out
mov
popf
add
adc
mov
loop
rcrl
xlat
mov
movsl
mov
mov
adc
ret
lock
mov
push
int3
enter
mov
aad
test
pusha
cltd
movsb
mov
pop
adc
stos
push
lret
adc
sahf
insb
add
sub
scas
repnz
push
mov
lcall
call
dec
fisubs
lock
lds
in
adc
dec
mov
ret
int
inc
imul
cld
enter
sbb
xlat
mov
sti
test
mov
push
mov
jo
or
jmp
mov
xor
dec
push
loopne
fcoml
out
cmp
jmp
jle
sub
push
add
adcb
test
lods
mov
jne
and
aam
pmaxub
ffree
movsb
mov
stos
lods
pop
out
sahf
loope
or
rcr
filds
mov
mov
or
xor
andl
xchg
add
iret
and
loop
mov
fld
mov
sbb
popa
mov
movsl
int3
lret
fcmovnb
out
aam
repz
ljmp
mov
push
pushf
out
movsb
ret
in
sbb
movsl
imul
pushf
sbb
push
lods
dec
mov
data16
into
or
push
adc
or
and
aad
cltd
inc
fidivrl
movsl
insb
arpl
out
mov
jb
ret
sarb
sbb
mov
fisttpll
aam
fcomp
sbb
out
mov
addr16
push
fsub
lods
movsb
stos
lods
pop
repnz
mov
jmp
repnz
ror
mov
pop
mov
mov
mov
jmp
push
notb
js
pop
out
lcall
fwait
or
call
shl
jbe
imul
fwait
stos
jae
out
lods
cmp
movsb
fsubrl
adc
mov
bound
lods
mov
jmp
cmpsl
scas
mov
mov
shl
out
jg
test
xchg
jno
loopne
into
cs
push
js
in
mov
mov
out
test
aam
into
lods
les
cli
inc
xchg
adc
lret
add
stos
ja
push
or
xor
movsl
add
mov
lds
cmpl
cs
loopne
enter
sbb
movsl
jmp
sahf
je
icebp
test
mov
inc
fs
jne
mov
adc
aad
aam
dec
loop
mov
sar
loop
xor
mov
stos
stos
fcmovne
mov
cmp
or
mov
dec
mov
mov
and
cmpsl
rolb
add
xchg
mov
int3
fnsave
lods
pop
sbb
clc
cmp
add
shr
pushf
mov
cli
mov
adc
lds
dec
scas
cmp
push
ss
jmp
cmp
xlat
fmull
mov
add
repz
stos
jecxz
push
shlb
mov
out
fisubs
mov
daa
scas
mov
iret
sub
cld
jmp
mov
in
fsubrl
call
mov
pushf
sarb
mov
shrb
movsl
adc
int
es
rorl
fnsave
fidivrs
sbb
mov
enter
fidivl
mov
fnsave
xor
lods
aad
pop
sbb
jmp
test
add
push
scas
fwait
mov
int
mov
mov
mov
mov
adc
lods
cmpsl
inc
sub
popa
mov
dec
mov
fisttps
cmpsl
sahf
popf
insb
dec
lods
pop
sbb
xchg
add
scas
adc
inc
int3
popf
rorl
shrl
adc
add
jge
mov
mov
jns
dec
lock
xchg
rol
mov
lods
fcmove
aaa
scas
xchg
rorl
lret
popf
test
xchg
or
lret
call
cld
xor
dec
ss
fcmove
mov
mov
cltd
inc
sarb
iretw
sbb
mov
shrb
out
mov
adc
int3
loope
adc
sbb
push
out
inc
mov
fxch
mov
cmp
scas
jnp
ja
arpl
jmp
xor
loop
aam
mov
rcll
mov
ss
adc
jmp
inc
inc
dec
call
aas
mov
lods
xchg
mov
mov
popf
mov
pop
sbb
xchg
rorb
sbb
pushf
popf
sahf
xorb
fwait
int
jns
scas
xor
xor
dec
ljmp
stos
int3
fcom
aas
mov
pushf
lea
loope
add
ficoml
and
or
xchg
das
leave
or
je
mov
mov
out
or
jo
sub
loop
jmp
mov
adc
out
xlat
lods
into
fnsave
iret
adc
loop
cltd
add
push
lods
fstpl
stos
enter
mov
rcr
mov
dec
les
dec
mov
lahf
lea
int3
mov
scas
lods
xchg
aam
cmp
mov
out
mov
nop
iret
ret
subb
sub
shlb
and
add
mov
repz
and
mov
fisubs
shlb
repz
fadds
mov
xchg
mov
stos
rcl
das
sub
aam
dec
lret
insb
cld
popf
mov
int
test
lret
scas
imul
cltd
into
popf
mov
pop
lea
leave
xor
stos
mov
cmc
mov
sub
push
mov
movsl
rorb
fst
int
icebp
mov
test
push
ficompl
cmpsl
dec
pop
or
scas
scas
lret
pop
xchg
in
aad
pop
scas
sbb
outsl
push
pop
mov
mov
je
pop
or
pushf
enter
loope
fldcw
or
push
mov
addr16
inc
dec
adc
mov
loop
ljmp
mov
push
mov
fmulp
xchg
xor
repnz
mov
movsl
mov
ret
xchg
stos
jb
loope
xlat
xor
mov
sbb
mov
cmpsl
xlat
lods
sahf
adc
into
and
ja
push
dec
movsl
stos
fisubrl
sbb
xchg
mov
cld
nop
or
enter
outsb
push
daa
clc
and
sbb
sbb
fnstenv
mov
data16
dec
inc
in
test
or
fwait
mov
mov
push
inc
int3
popf
push
lret
push
xchg
fcmove
clc
rolb
fwait
scas
loopne
shl
mov
mov
sbb
jne
aam
je
mov
ljmp
iret
pop
sti
shld
popf
mov
mov
out
fsts
aam
lcall
mov
cmpsl
mov
adc
aam
call
int3
lret
fmul
ret
xor
jmp
pop
lods
call
dec
jp
fnstsw
lret
or
add
into
or
push
loop
mov
int3
jmp
mov
pop
xchg
insb
mov
inc
pop
mov
test
push
iret
and
mov
sti
movsb
push
rol
dec
cli
stos
out
inc
lret
cmp
mov
or
sub
stos
push
mov
mov
lcall
ja
into
cltd
push
mov
leave
ror
push
repz
dec
fs
mov
test
into
mov
int3
pop
sbb
popf
fucomip
fmuls
ljmp
xor
mov
enter
mov
xor
mov
inc
add
mov
push
cmp
sbb
mov
repz
out
test
iret
jbe
jp
pop
out
leave
lret
mov
mov
stos
xchg
push
mov
fcompl
stos
gs
loope
add
cmp
mov
es
in
jp
das
movsl
xlat
orb
aad
stos
pushf
fdivrl
fsubs
mov
xor
mov
pushf
fsubs
stos
jb
jb
mov
jp
clc
cmpsl
sbb
lret
mov
ror
rorl
xchg
xlat
int3
sbb
lea
mov
lods
int3
scas
mov
dec
mov
scas
mov
rep
adc
pop
pop
js
adc
mov
les
aam
and
push
shl
push
es
push
mov
sarl
loopne
fsubrl
daa
out
jnp
lods
adc
mov
jmp
scas
popf
pusha
loop
shll
xor
rcr
dec
mov
sti
mov
scas
jae
pusha
push
push
test
fisubrs
stos
lods
xchg
movsl
mov
loop
lock
sbb
test
cmp
cmpsl
sbb
mov
xor
pushf
iret
mov
jns
lods
faddp
fmull
aad
shrl
daa
sti
faddp
cli
icebp
mov
mov
mov
xlat
dec
xchg
cmp
add
mov
iret
sub
push
xchg
fsubrl
iret
mov
shl
push
xchg
lahf
jmp
cmpsl
fldenv
jns
cmpsb
std
pand
lret
inc
push
fistpl
mov
iret
or
lret
xchg
mov
inc
xchg
aad
sarb
fstpt
sub
mov
repz
scas
stos
xor
push
jmp
and
push
mov
lret
clc
mov
out
stos
xor
mov
aam
out
stos
pushf
mov
lods
lret
jmp
mov
add
ljmp
mov
fwait
pushf
push
xchg
sbb
adc
sbb
loop
fwait
mov
lea
aad
imul
and
fldenv
xchg
mov
inc
add
pop
int3
stos
and
sbb
testl
aad
cmpb
enter
or
aad
fimull
xor
mov
fwait
mov
out
mov
aad
mov
mov
xchg
dec
test
out
shrl
mov
fwait
movsb
ret
cmp
int
data16
add
sti
movsl
push
loop
lods
jmp
scas
rcl
pushf
bound
mov
sarb
scas
mov
push
rcl
test
add
sbb
mov
test
movsl
cld
out
mov
mov
mov
cmp
sub
xchg
dec
xor
mov
push
and
cwtl
lock
lods
movsb
mov
mov
scas
shr
call
test
sub
push
inc
cmpsl
fucom
popf
ret
jle
aam
outsl
shld
mov
fmul
fisubrl
popf
cmp
lods
shlb
jbe
sti
call
add
mov
mov
sub
pop
mov
or
outsl
cld
cmpsl
cli
inc
fcomi
lret
sub
int3
mov
and
lock
fadds
int3
enter
jmp
mov
ljmp
cmpsl
jb
lods
lock
fcoms
cmpsl
stos
fpatan
out
aam
movsl
mov
mov
ljmp
inc
shl
stos
mov
int
mov
inc
lods
dec
lret
lret
dec
cmpsl
mov
mov
pop
or
pushf
lret
mov
inc
cmp
sub
dec
push
mov
imul
sub
xor
xor
cmp
and
xor
ror
inc
mov
pushf
loop
push
popf
fldenv
aad
sbb
mov
loop
insl
shrb
mov
xlat
int
movsb
loope
mov
or
sub
lods
pop
mov
and
call
mov
pushf
lods
xchg
xchg
int3
leave
mov
rcl
xorb
cmp
lods
adc
mov
mov
rcrb
in
daa
xchg
and
shlb
pop
xor
or
sub
test
jbe
ljmp
rcrb
mov
loop
mov
cld
lds
adc
test
lods
outsl
push
jo
mov
aad
mov
popf
mov
rcr
mov
xlat
mov
dec
xchg
stos
sahf
jl
fcmove
ljmp
mov
mov
ficoms
test
lea
inc
test
fldcw
sub
fcmovne
xor
test
pushf
aam
repz
test
mov
mov
popf
movsl
mov
mov
push
sahf
repz
enter
lret
or
xor
push
mov
fadd
flds
mov
arpl
add
mov
out
popf
dec
mov
int
fsubrl
and
imul
into
lret
push
in
mov
or
icebp
pop
icebp
popf
into
ds
arpl
sahf
pop
mov
imul
fwait
and
mov
xchg
adc
xchg
mov
adc
mov
aaa
sub
stos
sub
push
test
cmp
dec
fs
lods
dec
not
movsb
in
pop
sub
dec
and
and
out
sub
negl
das
lret
scas
dec
test
int3
pushf
cs
rol
movsl
mov
stos
jns
loop
mov
imul
test
pop
cmpsl
aas
sbb
rcl
into
sub
xchg
mov
leave
mov
mov
stos
movsb
pop
ret
adc
dec
push
bound
jmp
sub
repnz
cmp
sbb
out
loop
mov
stos
lds
cmpsl
ret
bound
mov
xchg
out
or
jbe
mov
rolb
lret
fiadds
sahf
movsl
test
jnp
mov
dec
mov
fldt
lds
mov
cmp
cld
push
cld
sub
movsl
mov
stos
xchg
inc
push
push
sahf
stos
mov
into
mov
adc
mov
loop
aam
int3
cltd
and
test
out
sub
mov
sarb
mov
fwait
icebp
out
test
lods
dec
adc
ja
jno
rolb
out
loope
or
cmc
rorb
out
fcomps
fistpll
add
sbb
ds
dec
inc
adc
mov
dec
pop
jb
fsubrl
sbbb
fdivrs
clc
pushf
clc
clc
notl
adc
sti
sub
out
in
stos
and
mov
xor
test
int
lods
dec
fldenv
int3
test
jl
mov
fstl
scas
mov
clc
jmp
mov
movsl
cmpsl
ret
inc
into
cmp
adc
mov
mov
ret
fsincos
fimull
add
jl
mov
adc
dec
push
stos
pushf
aas
inc
mov
lods
adc
nop
int
les
sbb
mov
out
mov
ret
das
lods
int
enter
mov
enter
cld
jb
cli
dec
data16
inc
xor
out
mov
data16
jnp
inc
pop
adc
out
lods
xor
ficompl
mov
out
dec
rcrb
sahf
jge
scas
lods
and
aaa
mov
mov
add
aad
mov
movsb
repz
les
enter
stos
pop
aam
int3
sub
addl
mov
es
int3
iret
ficompl
leave
or
sub
mov
out
mov
fldcw
mov
mov
adc
movsb
fstl
ss
stos
jmp
fmul
or
sub
fs
mov
push
xlat
mov
mov
in
roll
pop
cltd
iret
dec
mov
sub
loop
lret
sub
mov
sti
mov
pop
test
lods
lret
mov
movsl
sbb
int3
sti
mov
mov
lret
pop
mov
sub
lods
les
xchg
sbb
dec
aam
es
push
movsl
mov
stos
adc
sti
into
pushf
sbb
mov
lds
push
push
ljmp
mov
xlat
add
outsb
push
adc
js
das
sbb
rol
mov
or
fisubl
push
mov
cmp
mov
adc
ret
repnz
mov
repnz
scas
mov
iret
jbe
jo
aad
pop
ret
and
movsb
push
out
fstpl
mov
xchg
fists
cmpsl
or
ret
fsts
push
leave
lods
pop
stos
popf
lock
push
outsb
test
sub
dec
jl
pusha
fildll
sbb
lcall
mov
pop
mov
pop
fmul
loope
daa
int
repnz
rcll
ror
mov
pop
or
stos
call
pop
dec
rolb
dec
dec
and
adc
xchg
mov
fsubrp
movsb
xlat
dec
arpl
les
stos
mov
in
ror
clc
data16
mov
cld
lret
or
xorb
mov
fndisi(8087
fwait
testl
repz
call
ljmp
lret
push
and
scas
inc
pop
cld
mov
add
xor
mov
mov
push
fcmovnb
ret
inc
cld
inc
dec
ss
cs
mov
pop
mov
mov
scas
sarl
mov
xchg
cld
int3
les
mov
fcmovu
icebp
clc
push
out
icebp
dec
cmp
sbb
test
adc
int3
fdiv
inc
lods
fiaddl
jns
sbb
into
mov
lods
lock
imull
fisttps
mov
loope
mov
add
ss
mov
fs
loopne
cmp
clc
iret
loop
push
int3
movsl
mov
fidivs
mov
sbb
out
lea
lods
mov
loope
pop
or
mov
inc
mov
scas
bound
scas
jns
out
into
out
ror
mov
je
loopne
int
stos
fadd
xlat
stos
stos
int3
adc
mov
sbb
test
mov
scas
cmp
lret
adc
mov
mov
repz
mov
iret
mov
inc
jmp
pusha
jl
cs
shr
push
sub
fwait
test
push
fcmovnb
shrl
cmp
aad
cmpsl
mov
dec
add
int3
mov
loop
shrl
pushl
mov
leave
mov
rcrb
push
iret
jo
push
stos
push
xor
out
movsb
fcmove
or
mov
cld
mov
movsb
lret
lcall
loope
enter
mov
push
fmull
movsl
fidivrl
sbb
mov
jmp
pop
cs
lock
pop
or
mov
out
sbb
vpaddq
pop
shll
ss
lcall
mov
add
mov
xchg
jmp
sbb
call
lea
fsubp
mov
enter
dec
cmp
fisubrl
popf
sbb
add
ss
push
mov
sbb
mov
lock
rcll
repnz
popa
inc
sahf
sbb
in
leave
mov
orb
cmpsl
lret
ret
ret
popf
repz
test
call
pushf
mov
mov
adc
and
hlt
int3
rcrb
lods
adc
repz
sarb
scas
test
sub
iret
mov
fcmovb
push
es
pop
mov
into
cmc
fstp
or
out
call
divb
push
mov
jle
ret
pop
test
or
cmpsb
or
fsubs
out
push
jg
ret
fidivrl
sbb
out
mov
popf
cmc
fcomp
dec
add
pop
adc
fdivr
pop
sbb
rcll
mov
cld
pop
add
scas
pop
in
mov
dec
mov
adc
scas
jg
rcrl
lods
fidivrl
xor
bound
ror
fildll
mov
sahf
lret
mov
clc
mov
adc
cmp
xor
mov
lds
mov
fistps
mov
outsl
xchg
xor
repz
xor
fnstenv
daa
loopne
leave
adc
rcr
cwtl
cmpsb
jl
int3
or
pusha
mov
leave
adc
jecxz
popa
ret
mov
movsb
out
jg
jns
ljmp
mov
stos
xor
scas
clc
popa
mov
sub
dec
loopne
ficomps
mov
fmul
and
ret
scas
test
fwait
movl
cmpsl
loopne
rcrl
fdivrl
pop
mov
xlat
and
lret
testb
int
in
mov
in
jg
cmpsl
shrl
xchg
out
sbb
push
pop
js
nop
ds
call
mov
dec
mov
lods
cwtl
and
xchg
mov
lret
call
add
popf
les
scas
loop
test
test
fsubs
in
addr16
lret
or
jp
scas
xchg
rcl
dec
daa
rol
int3
lods
cmp
movsl
cld
stos
push
or
dec
jno
lret
mov
loope
mov
pop
loop
fisubrs
mov
adc
mov
stos
rcl
mov
fucompp
sbb
sub
test
rcr
and
dec
push
pop
mov
dec
sbb
fsubrp
push
stc
adc
mov
xchg
mov
shrl
jg
lods
add
jl
sub
popf
ds
push
or
fidivrl
dec
fldenv
daa
cltd
lcall
pop
test
push
aad
pop
test
in
mov
mov
sti
add
fnstcw
stos
cli
int
shlb
mov
scas
push
mov
jnp
out
mov
lcall
sahf
hlt
jo
ja
fwait
mov
xlat
sbb
movsl
dec
push
mov
xchg
iret
lods
mov
mov
insb
rcrl
mov
cmpsl
arpl
stos
cmpsb
fstpl
mov
ljmp
sub
test
sar
mov
lret
push
jecxz
hlt
and
cld
rorb
mov
repz
hlt
aam
or
lods
popf
push
int
lcall
ror
shrl
push
sbb
and
scas
stos
loopne
lods
fisubrl
daa
and
cli
mov
pop
push
mov
fldt
gs
repz
sahf
pushf
mov
mov
lea
pop
jmp
repnz
jg
divl
ret
or
out
adc
sahf
sbb
test
xchg
in
pushf
pop
mov
dec
inc
adc
sub
test
repz
aam
mov
xchg
fdivs
pop
jmp
add
xchg
fmul
outsl
rcr
sti
lods
push
push
aam
lret
and
loop
iret
movsb
ret
mov
push
mov
fildl
dec
jns
popf
pop
push
mov
pop
int
xchg
dec
cs
dec
or
and
sub
mov
rcl
jns
and
pop
fistl
ret
lds
xchg
push
rorl
cmpsl
int3
jle
adc
ficoms
mov
xor
lcall
faddp
shl
sbb
mov
scas
or
fisubrs
lods
push
cli
faddp
test
sbb
lret
ror
mov
incl
ret
mov
mov
dec
divl
jge
int
mov
jnp
sub
mov
daa
adc
mov
lret
call
xchg
mov
ljmp
iret
xchg
jnp
mov
inc
sub
iret
test
rorl
jae
mov
pop
or
das
xor
adc
test
fsubp
stos
mov
mov
add
ret
mov
xor
mov
in
call
addr16
ljmp
ficompl
and
pushf
adc
sahf
lods
and
fldl2e
mov
adcl
leave
fistpl
mov
xor
mov
jo
cmp
insb
ss
into
and
loope
add
mov
xlat
mov
mov
shll
push
pushf
ret
inc
sahf
push
cld
mov
pushf
stos
adc
les
out
fwait
lret
or
popf
cmpsb
sbbl
adc
loope
mov
sarl
rclb
int
push
mov
leave
aad
out
and
or
fsubrs
sahf
sbb
dec
lods
int3
push
test
int
xlat
test
fwait
repnz
out
mov
fldcw
fmul
jne
int3
pusha
insb
jecxz
cmp
ljmp
lds
call
scas
outsb
lods
ret
out
xlat
xchg
or
fstl
jmp
es
test
sarl
aam
lods
dec
fcmove
xchg
dec
btc
mov
mov
cmpsl
fnstcw
fnstenv
shlb
out
int
mov
fcomps
push
fwait
call
aam
dec
iret
les
in
fcmovu
lds
mov
push
fcmovnbe
ret
ret
lret
out
push
int
lods
rsm
pushf
ficompl
push
lods
enter
fdivrl
rolb
mov
psllq
fsubr
mov
test
loope
scas
js
in
ss
jp
sti
pushf
iret
adc
lds
push
mov
adc
fmul
cmp
iret
mov
push
inc
pop
int3
jmp
mov
cld
xchg
or
inc
rorl
setge
lods
movsl
mov
mov
fstps
adc
push
call
fs
sbb
scas
aad
adc
mov
pushf
cmpsb
jecxz
pop
or
mov
es
add
leave
pushf
mov
mov
mov
out
insl
rorb
test
mov
lds
movsb
stos
aaa
dec
rorl
mov
fld
int3
xchg
decl
dec
fmulp
mov
add
shlb
or
test
mov
mov
iret
movsl
shll
mov
data16
pushf
dec
lods
fcoml
mov
mov
lret
mov
ficomps
ffree
lea
and
cwtl
xchg
aaa
insl
je
and
enter
aam
mov
adc
cld
mov
mov
pop
mov
int3
mov
shrb
insl
roll
fldt
mov
fidivrl
in
outsl
inc
lods
fimuls
xchg
stos
mov
xchg
mov
imul
iret
mov
repz
cmpsb
add
test
scas
das
adc
push
ja
mov
or
aas
sub
incb
lret
push
ret
repz
movsb
xchg
lret
das
push
lods
leave
lahf
out
aaa
mov
rorb
jmp
mov
mov
inc
fldt
jge
jmp
push
mov
enter
jecxz
les
sub
or
movsl
mov
test
jns
pop
mov
movzbl
leave
shrl
out
aas
aam
mov
loop
mov
bound
pop
adc
push
mov
movsb
lret
mov
leave
jp
sbb
mov
mov
sub
xlat
add
jp
cmpsl
xlat
mov
and
adc
ret
xor
lret
jge
cs
orb
popa
sti
into
mov
mov
sbb
test
fstpl
mov
cmpsl
fs
out
fcmovnbe
sbb
das
mov
es
cmc
mov
stos
mov
into
add
adc
add
and
and
iret
lret
aaa
in
stc
sub
sub
mov
mov
push
cld
test
or
leave
sub
mov
mov
rcl
ficoms
mov
aam
inc
sarl
mov
or
loope
sbb
lret
cmpb
mov
les
popf
call
jb
or
mov
or
dec
sahf
movsb
pop
lret
ret
adc
scas
ret
and
fstl
or
dec
inc
push
arpl
dec
ljmp
lret
cli
and
mov
aam
inc
xor
popa
add
mov
fsubs
xor
ss
jecxz
scas
jp
jns
fiaddl
sahf
bound
lods
mov
adc
mov
mov
pushf
jbe
cld
shrl
neg
jmp
add
scas
movsb
aas
frstor
fidivrl
scas
test
jmp
call
cmpsl
cmp
jle
aam
les
push
jmp
shl
add
adc
pop
inc
mov
sti
mov
ficompl
xlat
mov
adc
cmpsl
pop
or
or
sti
aam
inc
test
test
jle
leave
xchg
mov
push
add
dec
imul
sub
sahf
mov
fwait
fwait
mov
jle
lea
stc
push
popa
lods
adc
stos
mov
jmp
mov
mov
adc
sbb
test
testb
fwait
test
or
dec
or
sub
xchg
imul
sahf
bound
scas
lret
popf
jmp
sbb
cmp
add
cld
xchg
mov
lods
ja
mov
aas
mov
into
popf
xor
fcmovu
add
mov
std
in
cmpsl
fidivl
sbb
pushf
div
mov
cmp
fmulp
mov
mov
push
ficompl
adc
test
fsubrp
xor
ds
cmpsb
mov
adc
aam
sbb
jl
into
leave
mov
stos
inc
mov
aam
mov
into
pushf
lret
or
adc
call
mov
in
stos
dec
gs
mov
iret
jecxz
int
mov
mov
sbb
mov
test
pop
inc
lods
jo
mov
popf
fwait
stos
mov
push
icebp
add
rorb
sub
lods
push
lods
notb
popf
aad
les
test
mov
test
movsl
mov
sub
int3
call
dec
pop
clc
stos
mov
out
add
pop
adc
shl
loop
movsb
dec
sbb
int
shll
psrad
pushf
mov
fcmovbe
scas
xchg
popa
mov
mov
pop
sbb
shll
mov
fucomp
add
loop
stos
jmp
shll
outsl
pop
add
xlat
ja
mov
movsl
lds
test
fstps
test
roll
push
cld
scas
mov
stos
push
push
pushf
ljmp
jecxz
fucomi
cmpsl
bound
xchg
mov
pushf
int
inc
int
leave
push
in
pop
jb
loope
stos
mov
mov
ret
sbb
test
sbb
push
ljmp
fdivl
aad
adc
movsb
movsl
mov
sbb
loopne
mov
adc
push
lret
loopne
shl
test
sbb
and
les
scas
mov
aad
popf
movsl
mov
xor
mov
test
cld
clc
iret
idivl
dec
loope
fisubl
aam
xor
enter
mov
mov
mov
out
lret
iret
clc
les
enter
movsl
dec
xor
or
mov
aam
scas
loop
adc
mov
lret
out
and
lea
loope
add
test
jb
out
ret
jb
loopne
mov
xchg
repnz
mov
cmp
inc
xor
lret
test
stc
fcmovnbe
and
xor
dec
aam
ss
in
cmpsl
adc
lret
mov
dec
je
lods
cli
dec
mov
xchg
es
mov
fldl
into
cs
fucomi
or
popa
mov
movsl
shl
test
mov
mov
in
adc
mov
and
mov
aas
cmc
int3
mov
mov
adc
pushf
mov
xor
out
lret
add
xchg
push
mov
mov
rorb
loop
mov
jno
dec
testl
sarl
call
fdivrl
rol
movsb
mov
ds
scas
mov
stos
scas
or
stos
mov
jo
xlat
fiaddl
mov
sub
mov
rcll
loop
dec
and
repz
add
cs
rolb
leave
stos
adc
sbb
lods
sub
jbe
jmp
lahf
xchg
mov
lret
call
ljmp
xorb
stc
scas
push
push
rcll
movsb
mov
enter
jmp
mov
out
inc
or
iret
add
enter
int3
add
fimuls
xrelease
cli
mov
mov
jg
fsub
lods
mov
aam
push
xchg
jl
enter
xlat
pop
xchg
jnp
jmp
cmpsl
lret
int
ljmp
add
roll
mov
shll
lret
int3
mov
adc
inc
cmpsb
pop
pop
out
jnp
mov
mov
jmp
inc
xchg
mov
push
xchg
jl
enter
popf
sarl
mov
jne
push
scas
fld
dec
rcr
mov
cmc
xlat
xchg
push
mov
jno
jmp
mov
frndint
rcr
mov
clc
inc
cmp
test
mov
pop
mov
jnp
mov
jbe
aad
inc
jno
adc
out
and
add
lods
mov
pusha
ljmp
cltd
movsb
cmp
pop
adc
inc
jmp
lods
sub
in
mov
jno
jle
pop
into
xchg
notb
fsubr
stos
leave
scas
lods
popf
loope
push
add
and
shrb
ds
mov
mov
adc
adc
sub
xor
jmp
aas
jb
mov
xlat
mov
std
lods
stos
das
cmp
scas
cmpsl
iret
fisubs
out
mov
jo
int3
fwait
jecxz
scas
or
mov
mov
mov
lahf
out
xchg
mov
sub
or
les
fsubrs
enter
xchg
push
fisubrl
mov
fnstcw
mov
es
sbb
loop
fsts
cmc
inc
add
dec
lds
add
mov
loope
mov
stos
loop
sarl
sahf
mov
lods
out
sarb
xlat
aad
jmp
out
xor
hlt
lea
adc
out
stos
lods
jb
dec
sbb
scas
test
fdivrs
rol
inc
iret
mov
xchg
pop
shrl
out
mov
lods
call
shl
sahf
cld
out
and
popf
ss
mov
pop
fwait
and
inc
inc
aam
fimuls
and
lds
aam
cmp
sub
add
mov
ss
cld
mov
pop
ror
repz
mov
fsubrp
fimull
fcmovnu
stos
and
fwait
xor
adc
lret
mov
loope
dec
ret
mov
pop
sub
jle
lds
mov
insl
and
dec
loopne
ror
xchg
orb
test
mov
stos
jne
mov
fmulp
aad
ja
loope
mov
movsl
in
mov
push
or
sbb
mov
ja
xlat
ret
enter
lods
into
add
lea
pop
out
mov
pop
in
repz
jp
lret
sarl
jp
mov
or
mov
pop
pop
and
xor
and
fildll
add
lret
xchg
movsl
ja
stos
fsub
shll
aam
insl
add
pusha
sahf
xor
aam
clc
test
sbb
add
xor
xor
stos
mov
movsb
shll
les
stos
stos
mov
xor
fnstsw
adc
fmulp
aam
push
lods
out
loope
mov
mov
enter
into
fwait
mov
loopne
aaa
stos
dec
test
mov
call
mov
enter
fisttpl
mov
lods
movsb
mov
shrb
mov
cmpsl
stos
andl
xchg
inc
xor
mov
mov
fidivs
leave
cs
push
add
sbb
lods
ret
decl
mov
mov
into
inc
dec
outsb
mov
xlat
xor
inc
test
add
or
stos
enter
xchg
mov
movsb
and
int3
cld
ror
lods
arpl
popf
test
mov
out
lret
inc
jl
lahf
sbb
inc
mov
shlb
lahf
dec
or
mov
sbb
iret
mov
out
aad
and
mov
loop
lret
out
out
jo
or
lods
repz
mov
sbb
ss
mov
cld
sub
movsl
ljmp
jl
sbb
cmpsl
loope
dec
lret
loope
dec
mov
pushf
sarl
or
mov
arpl
xchg
loop
movsb
mov
pushf
mov
mov
stos
ljmp
test
loop
mov
push
sbb
loop
jns
xchg
xchg
xchg
stos
test
test
loopne
mov
cmpl
xchg
insl
sahf
rcl
ss
adcb
fcmove
cmpsl
loope
rclb
enter
cld
mov
into
mov
xorb
cwtl
inc
jo
ret
sti
iret
into
lret
fildl
lret
cmpsl
aad
fisubrl
jmp
lret
pop
loope
and
lods
lea
int
lock
aad
cmp
lret
shlb
mov
or
add
xchg
ret
movsl
dec
out
lret
out
iret
mov
ja
ficoms
ret
push
mov
cwtl
aad
popf
jge
outsl
xlat
pushf
rcr
pushf
mov
int3
enter
mov
loop
pushf
sahf
addb
mov
rcl
fdiv
iret
insb
mov
dec
push
lret
cld
pop
and
mov
or
mov
iret
mov
mov
out
fldcw
add
imul
add
push
lds
movl
pushf
mov
ret
cmc
pop
std
jp
aam
out
push
sbb
int
sbb
pop
lret
dec
and
test
push
scas
adcb
repz
dec
pop
out
xchg
xchg
fidivs
leave
jmp
or
ret
pop
data16
movsl
lret
mov
lock
movsb
mov
lret
rcl
in
mov
imul
out
mov
adcl
arpl
xchg
mov
dec
jle
hlt
dec
add
test
clc
rcll
shrl
stos
int3
sbb
stos
cli
mov
js
shlb
adc
jg
lods
add
repz
pushf
xlat
stos
lea
push
and
movsl
lods
mov
inc
fpatan
leave
and
lods
mov
outsl
cmp
movsl
lahf
shrb
mov
test
pushf
pop
mov
push
xchg
mov
pop
scas
cmp
push
jnp
movsl
sbb
into
or
xlat
loop
in
mov
sti
mov
mov
out
addr16
adc
mov
jp
or
int
pop
mov
or
sub
mov
cli
mov
mov
pop
loopne
xor
mov
test
jnp
test
dec
inc
lods
sbb
aaa
repnz
mov
sahf
adc
sti
int
push
mov
xchg
movsb
les
mov
fabs
aad
mov
push
adc
repz
stos
rcr
bound
loope
ret
or
je
mov
mov
inc
and
sub
xchg
mov
cmp
sahf
es
dec
fwait
andb
pop
mov
std
cmpsb
negb
dec
fdivl
dec
xor
mov
or
mov
sub
mov
aad
clc
out
sub
lea
leave
lahf
cltd
fmuls
dec
add
ds
mov
out
fs
jp
stos
sub
aam
sub
adc
iret
inc
adc
pop
adc
lret
jns
fidivl
fadd
popa
mov
and
pop
lret
push
or
vpmaxub
pop
aad
loopne
fwait
push
loopne
lods
clc
adc
inc
es
sti
mov
and
jmp
fildl
loopne
lret
cld
sbb
aad
test
push
or
mov
and
mov
sbb
xor
xlat
xchg
movsl
mov
mov
mov
nop
leave
pushf
jo
mov
fwait
pusha
mov
arpl
mov
iret
mov
cmp
mov
xorb
sbbb
mov
ja
xchg
dec
mov
dec
pop
stos
orb
xchg
std
jb
mov
std
inc
lea
loope
fisttps
leave
lods
mov
mov
sahf
jb
int3
push
aam
mov
ds
jl
insb
xor
jmp
out
inc
mov
ss
fidivl
mov
rorb
xor
jmp
sahf
mov
scas
test
iret
fsubrs
cmp
rcrb
out
xor
jmp
movsb
cmpsl
add
or
cld
xlat
ss
imull
lret
xor
out
inc
pushw
and
lods
pushf
insb
fnstenv
test
mov
imull
fwait
lods
out
mov
jb
out
test
loopne
ffreep
fidivl
out
mov
or
mov
fnstsw
call
fisttpl
xchg
cli
mov
mov
ret
fucom
lret
fisubrs
push
fcomps
or
inc
ljmp
fdivr
movsl
out
bnd
movsb
mov
test
mov
adc
stos
stos
xchg
lea
mov
lret
push
xchg
enter
stos
mov
daa
xor
adc
ljmp
xchg
aam
fwait
sbb
stos
or
ret
aam
sub
adc
repz
addr16
mov
dec
or
lret
scas
or
loop
mov
xor
mov
les
jmp
xor
stos
fwait
pop
test
mov
mov
pop
sbb
push
out
scas
mov
test
cmpsl
clc
push
fcompl
loop
push
test
int3
pop
movsb
in
adc
mov
nop
in
in
popf
mov
popf
sub
popw
xchg
sahf
lods
mov
iret
mov
out
sub
mov
push
mov
pop
mov
xchg
cmpsb
movsb
aam
bound
loope
lods
cs
negb
pusha
xlat
jecxz
es
fcmovu
ret
sti
popf
iret
jbe
or
mov
dec
loop
jmp
loop
fsubs
pop
push
fldcw
mov
xlat
loope
bsr
cmp
jmp
adc
mov
loop
xor
rorl
lret
rcrl
lret
pop
pusha
imul
xor
fmull
jno
mov
cmp
sti
adc
and
mov
xchg
lea
test
or
mov
lods
adc
sub
cmp
mov
or
sar
fsubl
stos
fnsave
cmpsl
cli
fwait
loop
sbb
lods
pop
les
vpsrad
test
jg
mov
mov
lods
mov
cld
push
cmp
fmull
in
popf
xlat
jnp
and
jae
xor
xor
mov
sti
leave
shld
lds
push
adc
pop
aam
mov
scas
mov
lret
xchg
pusha
mov
clc
int3
rcl
mov
pushf
into
sub
sahf
movsl
mov
xor
test
call
fimuls
lret
out
mov
sbb
int
push
inc
push
faddp
fisttpl
or
stos
int3
cmp
leave
pop
push
mov
jg
fwait
inc
inc
push
aad
mov
pushf
popf
mov
and
movsl
fldt
lds
into
push
cmpsl
bound
fcomp
inc
rolb
mov
iret
mov
pop
ret
add
call
clc
imul
mov
mov
dec
mov
sbb
movsl
iret
sahf
aas
adc
fstps
sarl
imul
and
rcr
push
fidivs
shll
clc
shll
adc
lds
scas
xchg
push
loop
mov
cmpsl
popf
mov
loope
into
mov
mov
push
movsl
or
mov
mov
shll
mov
fisubrl
outsl
lods
notb
mov
cs
bound
popf
aas
outsb
sar
insl
mov
and
sbb
roll
pop
test
mov
sbb
cmp
aam
and
out
mov
fwait
test
into
ljmp
push
movsl
xlat
ret
jb
insl
add
ds
test
lret
sahf
sbb
cmp
iret
int
dec
xor
or
icebp
es
fcmovnbe
sub
mov
rcl
dec
push
adc
mov
popf
add
rol
push
divl
mov
push
ror
jmp
push
jmp
cli
rol
mov
add
iret
sub
mov
adc
stos
or
dec
or
sbb
lret
cmp
lcall
cmpsl
mov
mov
movsb
pusha
inc
and
xlat
mov
or
mov
shrl
movsb
loop
stos
inc
fidivrl
xlat
mov
lret
mov
sub
push
mov
movsl
aad
neg
leave
or
adc
scas
mov
movsl
es
ffree
adc
mov
xchg
cmp
cmp
sub
adc
leave
pop
cld
daa
sbb
jae
scas
iret
xchg
cld
movsl
or
and
mov
rcl
mov
test
xor
push
mov
sub
adc
ror
and
jo
outsb
dec
add
lret
mov
mov
loope
das
addr16
mov
rolb
enter
dec
and
and
ficompl
cmpsb
iret
insl
inc
sahf
inc
sub
lods
sbb
mov
push
jne
push
clc
mov
xchg
dec
cld
mov
adc
push
lret
inc
movsl
jns
out
mov
xchg
pop
lods
mov
jle
mov
stos
cmp
xchg
sti
adc
stos
nop
negl
insb
repnz
push
fcom
out
mov
lcall
stos
cs
fcomi
loop
or
add
inc
mov
lods
loopne
adc
lds
inc
repnz
and
movsl
pushf
mov
inc
xor
bound
outsb
inc
in
mov
adc
cltd
jmp
stos
xchg
test
pop
lret
lods
enter
sub
cmp
popf
test
rcrb
mov
sub
test
jnp
int3
int
dec
mov
or
mov
mov
test
push
mov
and
jl
movsl
shrb
popf
stos
aam
mov
xor
push
lret
push
aad
xor
jno
fwait
jg
loopne
call
rcrb
in
pop
das
mov
repnz
les
jmp
xor
sub
popl
movsb
dec
sti
aam
aaa
dec
ss
xchg
stos
out
fwait
test
xor
aad
enter
mov
push
out
movsb
clc
mov
mov
or
mov
int3
stc
lods
mov
xor
xlat
ljmp
loopne
jb
test
clc
mov
out
mov
fwait
sarl
lret
xchg
push
lcall
leave
xor
call
push
stos
pop
out
mov
mov
lods
test
sbb
icebp
add
pushf
fld
dec
or
fldt
test
xchg
xchg
shr
stos
aas
cs
and
add
test
push
inc
jmp
mov
rorb
mov
sbb
rcr
xchg
movsl
and
adc
xlat
add
mov
adc
adc
movsb
jns
int3
xor
or
or
lods
lret
ror
sahf
xlat
loope
fiadds
rol
mov
and
ljmp
dec
leave
fwait
call
mov
cmp
out
inc
jno
jns
movb
mov
xchg
stos
and
in
roll
call
negl
dec
popf
mov
into
int3
les
mov
movsb
or
add
fwait
xlat
sbb
cmpsl
or
dec
subb
or
cmpsb
sub
xor
xlat
ljmp
jg
add
aam
fcmovu
sbb
int3
ljmp
popf
js
xlat
test
mov
inc
mov
jmp
popf
rep
stc
pop
imul
adc
lds
jno
ds
sub
or
ljmp
sahf
movsl
and
dec
mov
xor
lods
in
inc
cld
movsl
daa
pop
rclb
popa
shll
loope
xchg
mov
jns
push
sub
sub
sbb
fadd
push
dec
loope
xor
fcomi
mov
andb
xlat
sub
jmp
add
push
loop
fnstenv
xchg
aam
push
mov
shrl
inc
rclb
loop
xor
fdivrs
cli
ret
fldt
mov
cwtl
push
cmp
mov
rclb
mov
stos
iret
into
orb
dec
cmc
inc
cli
aam
pop
or
mov
out
mov
shrl
mov
mov
and
mov
mov
popf
movsl
loop
sarl
mov
gs
scas
fwait
pop
and
mov
sahf
shll
movsl
and
push
fprem1
add
cmpsl
mov
jmp
call
dec
xlat
xchg
shrb
rcll
stos
int
call
sbb
mov
jp
les
lods
repnz
cld
lret
test
fst
mov
iret
fcmovbe
mov
push
mov
stos
movsl
movsb
fcmovnbe
mov
push
clc
mov
lods
jne
cld
adc
mov
bound
stos
pop
rcrb
lock
inc
arpl
mov
int3
mov
mov
mov
mov
popf
test
sbb
icebp
add
push
aam
lret
pop
adc
mov
test
sbb
mov
sub
test
popa
adc
fsubrl
test
popa
scas
inc
ljmpw
insl
fiaddl
xor
lds
mov
add
dec
sub
ljmp
mov
enter
sti
test
mov
aam
add
cmp
ret
ljmp
aam
sbb
or
movsl
lods
inc
fidivrl
fdivrl
mov
out
loop
lret
lock
scas
pop
enter
sarl
scas
loop
lcall
ror
add
fcom
cmc
push
fs
lds
sbb
sahf
repz
mov
cmp
lret
aam
or
fdivrs
sti
and
and
pcmpeqb
aam
sub
jbe
sub
ret
fcomps
scas
add
ficoml
insl
inc
mov
mov
movsb
push
pop
sub
sub
scas
rcl
dec
dec
mov
into
jge
lret
mov
pop
dec
stos
mov
lret
aam
cmpsl
lret
and
popa
and
fdivrs
mov
cmp
ret
adc
fucom
mov
out
imul
mov
mov
loop
stos
stos
dec
pop
mov
enter
inc
push
shrl
in
pop
jge
int
into
adcb
fiaddl
dec
xlat
shll
mov
mov
and
scas
mov
enter
data16
sbb
imul
sbb
repz
xchg
insl
popf
ss
pushf
or
movsb
fst
fcmovne
and
lods
push
aam
pop
push
bnd
xor
dec
cmpsb
xor
lods
lods
mov
mov
bound
loop
shlb
fst
sti
ret
icebp
xor
les
mov
cli
mov
xchg
fisubrl
mov
mov
push
lods
cwtl
xchg
xchg
ret
out
mov
call
lret
jb
int
mov
mov
bound
aad
dec
pop
in
repz
loopne
mov
movsb
aam
pop
hlt
loopne
mov
mov
movsl
popf
mov
mov
enter
rolb
dec
fsubrs
and
sahf
adcl
mov
shr
outsl
cmpsl
fsubl
or
ss
stos
inc
jne
jne
adc
stos
stos
push
fsubrl
iret
fnstenv
push
stos
dec
bts
adc
fmul
out
cmpsl
mov
xchg
and
mov
xchg
stos
addr16
movsl
pushf
icebp
xchg
lods
lods
sub
jae
popf
int3
adc
aam
xchg
and
sbb
test
loopne
fisubs
ljmp
mov
fidivrl
dec
enter
ret
leave
push
mov
rcrl
into
out
mov
int3
cmp
cli
push
mov
lods
jnp
xor
in
imulb
popf
negl
or
repz
mov
shll
dec
jb
iret
scas
loopne
mov
addr16
mov
mov
fwait
movsl
int3
xor
mov
in
lods
cmpsb
push
sbb
fimuls
and
mov
cmp
stos
fisubrs
shrl
lret
push
mov
pop
mov
pop
xchg
in
ret
jecxz
mov
pop
mov
sahf
push
dec
cmc
popf
push
stos
mov
mov
cld
fcomp
les
and
fwait
rcr
mov
and
mov
lret
call
mov
mov
sar
pop
or
or
cli
cmpsb
mov
lods
dec
jmp
cmp
aas
cmp
loop
pop
mov
aad
xor
stos
faddl
into
mov
mov
enter
lret
test
dec
rcll
scas
adc
adc
iret
loope
scas
sub
rol
fidivs
push
test
pop
mov
scas
dec
or
out
aam
ficompl
jbe
mov
int3
xor
xchg
mov
and
fidivrl
insl
fs
push
lret
mov
dec
sahf
push
shlb
lods
fwait
loope
leave
int3
cmp
pop
shlb
fstpt
stos
cli
mov
insb
leave
enter
or
les
mov
mov
iret
sub
cmpsl
clc
mov
and
xor
scas
mov
jl
jne
flds
mov
mov
iret
aad
push
call
rolb
xlat
cmp
rclb
lret
xchg
or
mov
test
loopne
int3
rcll
ljmp
xlat
popa
and
cmp
lods
loope
repnz
fcomp
mov
mov
pop
and
lods
int3
pushf
cmpsl
test
mov
cli
xchg
hlt
cld
fwait
loop
jbe
cmpsl
mov
cmpb
lods
leave
fsubp
popf
adc
mov
inc
mov
mov
ret
mov
outsl
ljmp
imull
out
rorb
mov
test
add
inc
aam
adc
test
cmpsl
lret
loop
ss
call
push
push
mov
repz
inc
mov
mov
pop
sbb
rcrb
jp
ret
fldcw
imul
add
enter
jp
test
mov
lret
aad
enter
aam
mov
lret
and
sbb
es
mov
mov
loop
ret
fsubp
mov
out
mov
movsl
sbb
lods
repnz
fisubrs
cmc
lods
mov
mov
pushf
adc
lret
scas
inc
mov
sub
inc
pop
call
xchg
lahf
mov
inc
xchg
mov
movsb
ret
enter
xchg
lea
into
and
or
mov
mov
adc
fidivrs
jecxz
imul
cmpb
inc
sti
mov
dec
sahf
loopne
sbb
int
dec
repz
enter
std
lods
jecxz
xor
lea
lds
lret
int3
nop
div
aam
ret
mov
xlat
lock
mov
cltd
rcrb
subb
popf
loopne
push
mov
popa
dec
aas
rcr
aam
fimull
insb
sbb
fadd
mov
stos
dec
cmpsb
sarb
movsl
mov
mov
call
mov
out
lods
xchg
cmp
out
mov
push
les
pop
lods
sbb
lret
int3
ds
test
fmull
lret
jae
pop
scas
mov
jmp
loop
ljmp
fwait
xchg
sbb
test
mov
pusha
outsb
lret
lea
popf
mov
fcmovu
xor
cs
dec
out
enter
mov
xchg
xor
xor
sbb
adc
test
fstl
int
lds
fnsave
xlat
rorb
call
jo
or
scas
mov
mov
hlt
out
dec
adc
mov
mov
xchg
iret
inc
mov
mov
in
xchg
sbb
lret
mov
cmpsl
mov
dec
xor
mov
jmp
enter
lret
movsb
cmc
movsb
mov
mov
rcll
sbb
repz
xor
ret
ret
mov
pop
into
dec
mov
mov
das
das
mov
pusha
test
mov
pop
ret
or
mov
lret
popf
push
cmc
rol
mov
xchg
and
mov
mov
adc
out
push
testl
rcl
lds
int3
idivb
and
and
xchg
ffree
dec
loop,pt
ret
popf
and
and
jmp
push
fcomps
sbb
stos
shll
mov
loope
int3
or
test
je
mov
jb
cmp
mov
dec
into
insl
cmp
mov
xlat
test
xchg
adc
iret
shll
lret
cmpsb
and
jl
scas
fwait
ror
inc
ret
jp
ret
js
cmp
mov
aad
mov
out
jp
sbb
cmpsl
inc
and
adc
mov
call
dec
dec
aam
xor
enter
fmull
cmp
ljmp
mov
mov
mov
push
inc
adc
push
or
lds
sbb
mov
sahf
loope
shll
adc
ficompl
int
xchg
sub
mov
sub
mov
mov
inc
mov
mov
movsl
loop
into
not
call
jbe
stc
popf
mov
add
ss
lret
mov
leave
jmp
xchg
into
mov
into
leave
pop
leave
mov
cld
repz
pop
xor
or
enter
or
lahf
xchg
and
sub
es
into
ljmp
js
fcmovnbe
out
push
push
cmp
les
movsb
in
dec
enter
sahf
loop
adc
rcr
aaa
enter
inc
fisubrl
and
cmp
xor
addr16
movsb
arpl
enter
sbb
mov
mov
fdiv
push
shrl
fstp
lea
dec
mov
aad
adc
loope
mov
mov
mov
push
fstps
test
pop
out
aam
sub
filds
xchg
mov
lret
xchg
nop
aam
mov
lds
enter
int3
mov
lods
test
pop
stc
lods
shll
sub
mov
lods
test
sbb
cmpsb
in
fwait
into
lods
push
sbb
sbb
jbe
mov
adc
lods
xchg
xchg
jl
mov
rcll
stos
out
bound
lahf
xchg
lea
xor
mov
roll
mov
mov
push
sbb
or
mov
cmp
enter
pushf
stos
mov
test
lcall
xor
sti
jl
ds
scas
sarl
inc
repz
call
mov
insb
jae
pop
cmpsb
xchg
out
loope
pop
sub
shrl
and
dec
repnz
xchg
fnsave
adc
fldenv
cwtl
jbe
or
cltd
cmp
adc
lods
scas
fmuls
ljmp
fsubrs
lds
loop
mov
push
push
cmpsl
xlat
lock
xchg
lods
and
mov
jns
rcrb
out
int
lods
pop
int
lcall
cmp
sub
cmpsl
lods
add
loope
cmp
scas
mov
aad
jmp
pushf
sub
cmp
dec
out
lret
add
out
and
out
enter
mov
cmpsl
leave
jecxz
push
ret
stos
mov
int
xchg
fsubs
daa
jmp
clc
test
mov
lods
mov
mov
mov
inc
push
cmpsb
sti
out
dec
add
enter
lods
dec
fdivl
jne
xlat
xor
lcall
adc
enter
stos
lods
cmc
iret
xlat
lods
dec
lods
cltd
xor
dec
push
cmpsl
mov
mov
jg
sbb
adc
or
mov
dec
out
sbb
aam
lahf
cmpb
pop
test
ss
aam
or
fdivrl
xlat
insb
inc
xchg
popf
mov
mov
pushf
jecxz
fcoml
push
mov
fnsave
stos
scas
push
fcmovb
mov
test
cltd
mov
mov
movsl
jbe
jge
fwait
loop
movsb
sub
imul
mov
rcrl
sub
repnz
lahf
mov
iret
or
ljmp
or
test
out
lds
ret
lods
mov
pop
cli
fwait
test
xchg
cmc
mov
mov
sbb
sarl
xor
sub
mov
test
test
cmpsl
jno
lods
xchg
pushf
icebp
rcrb
jg
stos
dec
push
frstor
pop
movsb
adc
xchg
xchg
cld
mov
fcmove
cmpsl
icebp
icebp
or
into
mov
mov
rcrb
lret
mov
loop
scas
cmp
lret
fildll
into
out
jae
inc
inc
das
insl
mov
lea
push
test
pushf
mov
sub
aam
gs
fwait
pop
ljmp
arpl
ljmp
dec
and
jmp
mov
out
into
sub
lret
stos
inc
sti
jmp
enter
out
jmp
xor
leave
int3
or
ret
int3
sbb
pop
push
mov
loope
repnz
rorb
inc
jmp
int
fwait
xchg
sub
adc
popa
aas
mov
aad
aam
ljmp
mov
mov
jne
out
mov
sbb
aam
or
movsl
shll
mov
call
ljmp
lret
rcl
rcr
scas
imul
dec
xor
cld
jmp
mov
mov
mov
aaa
mov
fisttpl
fs
and
ljmp
clc
data16
lods
push
loope
cmp
or
popf
lea
cmp
sub
ja
loop
xchg
pop
fwait
mov
fbld
rorl
shrl
add
lahf
cltd
cmp
je
add
fcmovnb
test
sub
lea
fwait
out
out
or
xchg
inc
push
or
push
std
movsl
test
ss
xchg
or
or
mov
jmp
rorb
lods
mov
int3
mov
lret
not
sub
pop
repz
fcoml
fsubrs
fdivl
iret
out
jb
lret
ret
fidivrs
scas
dec
push
mov
stos
cmpsl
pop
mov
int3
push
call
pop
jmp
mov
jne
fmull
pop
xchg
aaa
ror
fnstenv
sahf
fsubs
das
push
stos
inc
mov
gs
cmc
stos
cmp
test
xor
mov
movsb
mov
sub
xchg
sub
lds
adcb
fxch
out
movsl
movsb
repz
inc
or
mov
movsl
movsl
mov
shlb
fmulp
mov
fs
mov
into
fnstcw
pop
jmp
jg
into
int3
int
mov
fisubrl
mov
insb
lods
mov
mov
out
mov
mov
mov
mov
in
mov
fsts
mov
andb
test
rclb
sub
dec
cli
out
leave
xor
sbb
jg
mov
and
fnstcw
out
jmp
mov
fdivl
xor
ret
enter
fisubl
loope
and
loope
pushf
mov
loop
data16
call
div
les
jb
loop
mov
xor
mov
scas
xchg
mov
sbb
lods
lods
popf
mov
mov
lock
jl
and
dec
jmp
mov
mov
mov
cmp
dec
mov
sbb
push
push
mov
mov
lock
sub
lret
lret
inc
fldenv
push
lret
pushf
mov
shlb
out
enter
imul
shr
jmp
notl
dec
ret
sbb
out
mov
mov
out
popa
mov
test
pushf
fld
push
dec
dec
out
enter
mov
stos
lret
push
adc
mov
into
fnstenv
movsl
sbb
daa
sub
out
adc
mov
int3
sarb
jae
cmc
scas
pop
out
lods
movsl
cmp
push
ret
fcoms
and
loope
jl
cld
mov
mov
xor
add
shlb
int
rclb
push
dec
enter
pop
ret
lods
push
ficomps
scas
jo
cmc
mov
sbb
add
fld
mov
adc
test
cmpsl
adc
xlat
mov
jle
movsb
leave
lds
ret
fisubrl
xchg
jno
sbb
mov
rcl
mov
mov
fmul
stos
movsl
mov
xor
cwtl
adc
not
test
xlat
and
repnz
lret
test
xchg
push
jmp
push
push
sbb
dec
out
ds
sti
mov
rcl
and
lds
pushf
dec
les
lahf
push
and
addr16
adc
cmpsl
cltd
fcompl
scas
ret
insl
xor
mov
fwait
jae
pushf
test
cmp
xor
inc
and
enter
ret
push
ret
pop
fisttpl
and
scas
ror
and
mov
mov
stos
xor
leave
and
sti
iret
or
rol
aam
dec
xchg
fadds
mov
xor
jmp
bound
push
aad
lret
das
sbb
push
mov
fwait
cmp
adc
inc
sbb
mov
cmc
or
fisubrs
fwait
lds
mov
dec
outsb
mov
ret
mov
xchg
pushf
test
lret
sarl
daa
adc
int3
outsl
and
mov
xchg
rcl
mov
mov
sti
xchg
fcompl
push
mov
mov
xchg
fidivs
sbb
popa
iret
sub
push
push
insl
xor
dec
fmull
test
call
sbb
aad
sbb
sahf
cltd
push
movsl
mov
stos
dec
push
mov
jae
adc
movsb
mov
mov
mov
lods
loopne
mov
stos
sbb
ret
xchg
lea
add
cmpsb
and
aad
add
ljmp
ret
enter
inc
fsub
dec
sbb
sahf
lret
loop
int
mov
add
dec
sbb
test
popf
mov
fimuls
lahf
pop
xchg
cs
loop
or
lock
cld
lret
or
fldl2t
xchg
fnstsw
mov
stos
les
jg
adc
jns
mov
lods
scas
mov
dec
inc
mov
imul
aas
in
mov
mov
movsb
fldl
pop
repnz
cmpsl
jg
cmc
mov
out
xlat
push
mov
cld
jbe
jmp
enter
fldenv
test
or
int3
jmp
ret
mov
fmuls
mov
popf
int3
inc
push
iret
or
mov
loop
ror
jg
add
and
or
stos
outsb
ret
xchg
rorl
ror
xchg
dec
pop
sbb
iret
mov
ss
push
add
cltd
enter
ret
push
jg
scas
shlb
cs
sbb
ljmp
mov
faddl
and
shll
leave
xchg
inc
daa
or
enter
loope
cmc
xchg
cmp
jecxz
fnsave
fcmovne
out
lea
lods
mov
lcall
scas
stc
lds
dec
fldcw
xchg
and
sub
sub
into
test
enter
fwait
pushf
frstor
jb
sahf
les
sti
decb
push
les
pop
ret
int
lret
test
and
iret
push
clc
out
das
adc
aad
jnp
pop
in
dec
leave
call
lret
clc
mov
mov
lds
movsl
jmp
fwait
leave
sbb
test
test
lds
negb
mov
mov
out
je
stos
repz
aad
cmp
mov
mull
outsl
testb
sub
ljmp
int3
mov
nop
pop
bound
add
nop
in
enter
jne
stos
repnz
push
out
fisubrs
mov
movsl
and
loop
ret
adc
loope
dec
pop
mov
repnz
cmp
mov
test
aam
popf
test
adc
lock
lea
out
dec
cs
icebp
lock
xchg
lret
fidivrs
lock
lret
mov
movsb
enter
ds
sbb
into
pop
rcr
lods
mov
mov
out
jbe
lret
enter
cltd
scas
mov
mov
dec
or
aam
xchg
mov
lods
lret
gs
mov
lret
sahf
fists
rep
and
pop
das
sbb
push
mov
fisubrl
popf
out
jnp
fistpl
sbb
sahf
fwait
inc
pop
int3
mov
cmpsl
mov
cmp
ds
adc
ljmp
frstor
movsb
or
pop
loopne
test
mov
or
xchg
sub
mov
mov
mov
mov
fcoml
mov
lods
mov
movsl
lods
shl
loop
sti
mov
rclb
cmpsl
subl
push
lods
xor
out
push
jg
lret
movsb
sarl
loop
int
fsub
mov
jp
leave
push
push
shll
std
aam
fnstsw
test
mov
enter
pushf
in
or
mov
jbe
cmpsl
ss
loope
into
lahf
cmpsl
neg
scas
inc
xchg
xlat
adc
ljmp
dec
jp
js
aam
lea
test
mov
dec
mov
sbb
ficomps
cld
mov
jo
cmc
fstl
movsl
shlb
rcrb
pop
add
scas
inc
in
lret
fmul
or
push
fsubl
jmp
fidivl
mov
in
rsm
mov
repz
addb
mov
stos
xor
xor
push
sub
cmp
movsl
mov
out
mov
mov
pushf
mov
lock
pop
adc
pushf
sbb
sbb
rorl
dec
leave
sarb
sub
fldenv
dec
xchg
mov
sbb
mov
cmp
loop
addl
pop
lods
ret
shr
popf
lret
push
cmpsl
stos
ret
xchg
cmpsb
movsl
shr
add
sub
icebp
hlt
pop
aaa
sbb
adc
data16
imulb
mov
lods
lock
movsb
fsubrp
mov
mov
sbb
dec
pusha
mov
mov
add
int3
aad
les
scas
mov
mov
iret
xor
sahf
mov
or
rcrb
mov
mov
dec
add
mov
mov
mov
fwait
aad
rcrl
sbb
pushf
xlat
mov
loop
mov
aam
mov
push
mov
jg
jno
stos
sub
mov
fldt
push
lods
scas
mov
rcll
rcr
out
jge
jp
mov
sti
fimull
cli
or
sti
mov
push
and
mov
push
shlb
mov
xor
sub
in
ljmp
aad
cmpsl
xor
fwait
repz
pop
xchg
mov
lret
mov
mov
les
cld
mov
repz
add
mov
scas
xlat
ljmp
or
add
mov
sbb
xchg
neg
jb
cmp
out
push
mov
movsb
mov
aam
xchg
outsl
mov
popf
addb
xor
nop
bsr
int3
test
scas
aad
adc
mov
lock
xchg
pop
xchg
and
sarb
aad
loope
int
add
cmpsl
aam
mov
add
cmp
xchg
jmp
xor
shl
mov
cs
insl
inc
mov
scas
jg
push
mov
ficompl
scas
inc
call
xchg
cmpsb
mov
ret
enter
shrb
fldl
lret
xorb
lods
fsubrl
jbe
popf
lahf
sahf
sbb
push
lock
push
push
into
mov
or
iret
pop
flds
out
stos
and
sbb
cltd
ss
out
dec
ret
lds
aaa
popa
cmp
sub
lret
test
call
int3
fnstenv
rol
loope
mov
popf
dec
or
dec
xchg
test
shll
push
pop
ret
scas
mov
mov
insb
add
dec
loop
fs
test
lods
lret
sbb
lret
int3
dec
mov
mov
jecxz
fistpl
jp
add
mov
fdivrl
leave
shlb
pop
xor
out
and
sbb
mov
pushf
mov
sbb
insb
and
add
xchg
cvtps2pd
rcr
mov
xlat
cltd
xchg
lods
bound
fwait
or
fcoms
mov
andl
mov
ret
call
fdiv
fchs
mov
pop
aaa
test
test
fisubs
sahf
repz
jmp
mov
xchg
lret
shr
fdivs
movsl
xor
fcmove
leave
imul
adc
fsubl
clc
leave
mov
rcrl
lcall
loop
pop
scas
push
push
mov
in
or
fcmovu
xor
mov
out
int
dec
and
test
leave
outsb
test
arpl
int3
jmp
mov
or
sahf
lock
sbb
sbb
or
or
and
leave
mov
bound
lret
fisubs
pcmpgtb
shr
sahf
bound
dec
mov
out
movsb
mov
or
pusha
mov
les
leave
orl
xchg
shlb
cmp
lods
and
mov
xor
push
fimull
mov
sbb
fidivrs
ret
loope
cmpsl
lods
lods
insb
jns
dec
pop
sub
mov
dec
mov
das
xlat
mov
enter
test
cmp
ljmp
movsb
mov
mov
mov
icebp
iret
mov
loop
aaa
mov
in
sub
sbb
dec
mov
fisubrl
push
dec
mov
sbbb
push
or
mov
mov
mov
mov
jne
adc
jb
fimull
or
lret
xchg
repz
ret
sub
jg
sbb
out
scas
int
cld
mov
fabs
aad
push
hlt
sub
xor
add
cmpsl
popf
adc
repz
dec
pop
inc
mov
loope
jbe
lods
daa
dec
pop
sub
sahf
mov
or
lods
ljmp
mov
mov
inc
push
int
jg
push
mov
movsl
fcmovbe
cmpsb
ljmp
adc
fidivl
stc
repz
sbb
or
int
imul
mov
mov
pop
ss
mov
dec
xchg
lret
xor
fldcw
shlb
mov
lods
aam
inc
cmpsl
jb
enter
sub
das
cld
dec
adc
popf
sti
mov
test
sbb
adc
fcmovnbe
inc
lahf
sbb
out
sbb
popf
xchg
lret
mov
outsl
shrb
adc
iret
scas
stos
cmp
cwtl
jns
push
iret
lret
mov
mov
xor
xchg
mov
adc
mov
dec
xlat
mov
pushf
mov
fs
lret
cmpsl
iret
mov
push
jo
mov
lea
mov
mov
dec
lret
cld
mov
pop
test
bound
cmpsl
xor
pop
repnz
shrl
pushf
lds
fmul
mov
sub
dec
mov
fwait
testl
ljmp
lods
xlat
shr
stos
mov
dec
out
mov
daa
cli
movsl
pop
mov
cld
xlat
lret
mov
mov
movsb
push
xchg
push
mov
loop
xchg
mull
sbb
or
sti
ds
mov
xchg
cmp
test
lods
mov
out
xsaves
fcom
fwait
and
outsb
leave
loop
pop
mov
pusha
loop
out
lods
in
leave
cmpsb
fs
xchg
mov
scas
ds
adc
add
jge
dec
mov
adc
test
sbb
scas
or
dec
lret
incb
push
test
sbb
sub
cmp
mov
mov
cmp
int3
movsb
lret
enter
xchg
cld
lods
loop
pop
cmc
mov
jle
lcall
jb
pop
out
out
and
aam
shrb
dec
into
sbb
sbb
xlat
into
loop
mov
mov
lret
mov
faddl
call
cltd
or
int
mov
testb
or
mov
mov
movsl
inc
ret
lods
sti
jmp
mov
mov
push
pop
cmp
xchg
repz
jbe
mov
fwait
sbb
bound
idivb
in
lret
enter
lahf
push
jo
xor
fs
enter
and
popf
pop
push
mov
push
cmp
sbb
shll
sti
scas
ret
ss
or
jbe
popf
pop
pop
fbld
dec
out
dec
and
repz
fcoml
sub
mov
insb
sti
or
sbb
lods
xor
rorb
xor
or
jb
stos
dec
in
in
mov
add
lock
movsl
mov
mov
sbb
jmp
cmpb
popf
lret
stos
mov
dec
lret
insb
xlat
push
pop
mov
lods
mov
lahf
push
pushf
mov
cli
push
dec
scas
mov
scas
mov
in
int3
dec
psllq
js
ret
cmpsb
push
idiv
in
pop
mov
insb
pop
sub
vpackuswb
pushf
fisubl
and
outsb
aad
scas
in
scas
iret
outsb
fucom
inc
push
int
scas
in
mov
loope
pop
or
and
fwait
xchg
ja
les
fcmovu
mov
stos
sub
mov
sub
js
xchg
and
mov
mov
sti
insl
adc
stos
or
stos
out
jg
fwait
cmpsl
mov
leave
ret
aam
sub
andl
test
movsb
inc
pop
mov
xor
fucomp
fldcw
inc
sub
enter
inc
jne
mov
inc
shll
scas
mov
jmp
adc
ljmp
int
or
mov
adc
stos
push
lods
xchg
jp,pn
lock
iret
lret
push
fstpl
ret
pushf
loope
mov
call
push
xor
mov
mov
stos
loope
xchg
shr
lret
loop
rcrb
icebp
mov
ror
fistpll
repz
daa
cmp
xlat
bound
loope
add
mov
loop
mov
fnstsw
cmp
mov
fstps
xchg
and
imulb
call
mov
pop
xlat
or
sti
int3
ret
sub
lods
aad
clc
mov
pop
push
shlb
mov
ljmp
test
iret
ja
lcall
pop
out
out
jo
adc
lret
rcll
cmpsl
or
rolb
pop
lock
dec
mov
cld
cld
mov
scas
iret
loope
and
mov
xacquire
sahf
lods
int
jne
cltd
inc
mov
scas
fmul
sub
add
lods
sub
lret
sbb
sahf
aam
mov
scas
daa
mov
fnclex
sub
xchg
scas
mov
xchg
movsb
pop
or
sahf
shl
ficoml
fstpl
scas
dec
repnz
xchg
mov
pop
inc
xchg
test
fstps
movsb
nop
lret
popf
ret
jecxz
shrl
std
sbb
and
ret
popf
push
cmp
repz
dec
add
mov
stos
dec
sbb
fcom
mov
sbb
aam
or
push
fwait
mov
pop
push
out
rclb
mov
mov
daa
inc
and
or
adc
rolb
mov
push
adc
mov
inc
ljmp
enter
scas
mov
int
out
leave
or
xor
jl
scas
leave
sub
and
adc
mov
push
std
lret
ffree
mov
lret
sub
loop
into
adc
ficomps
frstor
mov
push
in
mov
xchg
aas
or
xor
fcmovnu
lds
mov
or
ljmp
adc
icebp
cmp
rclb
adc
fdivs
xchg
pushf
mov
mov
fst
fcompp
out
scas
xchg
pop
jmp
cmpsl
ret
mov
arpl
lret
mov
mov
jo
pop
inc
or
mov
in
mov
dec
push
mov
mov
mov
movsb
nop
loop
pushf
bound
test
int
sbbb
fisttpll
stc
shrl
mov
fwait
aad
xlat
mov
jmp
data16
sbbb
sbb
mov
xlat
sahf
shl
mov
daa
lcall
scas
mov
mov
or
push
test
bound
int
mov
cwtl
scas
push
mov
mov
mov
aas
out
js
mov
mov
popf
bound
lret
clc
leave
adc
mov
mov
cli
cld
lret
add
pop
imul
xchg
mov
lret
mov
ljmp
mov
test
shrb
xlat
sbb
js
add
sbb
lret
adc
int3
sbb
mov
mov
stos
iret
xor
int
mov
fcmovne
shrl
and
mov
leave
out
mov
insb
in
jl,pt
lret
dec
xchg
push
ss
jmp
lea
std
rclb
mov
aam
popf
mov
mov
inc
rcrb
or
pushf
push
push
stos
fwait
mov
sub
negb
aam
mov
rcr
movsl
cmpsl
sbb
inc
int
sbb
int3
sub
ret
sub
popf
xor
ds
fsubrl
popa
stc
lock
fisttps
mov
mov
clc
sub
leave
mov
ficompl
mov
dec
lods
push
fmul
rcr
push
testb
jmp
sub
ret
in
push
mov
fwait
lret
jmp
xlat
or
call
lods
adc
aad
sub
cmpsl
bound
xor
repz
scas
jmp
or
mov
mov
mov
pop
int3
enter
jb
mov
mov
ds
hlt
loop
jl
addb
call
lods
ret
sahf
insl
inc
shll
cmp
sbb
mov
sahf
sarl
jb
int3
flds
cmpsl
push
fcmovbe
pop
movsl
movsl
fcmove
jnp
shr
ret
outsb
popf
sbb
push
les
mov
push
and
shlb
mov
mov
or
in
int3
pop
mov
into
pushf
mov
fwait
mov
jae
xchg
cmpsl
into
test
pushf
mov
movsl
adc
jg
in
mov
cs
leave
test
xor
lret
and
fldl
mov
cmpsl
popl
lods
mov
hlt
dec
jl
test
pop
ja
add
loope
inc
shr
mov
test
xchg
push
idivb
mov
push
addr16
shl
stos
inc
fwait
and
inc
cmp
sub
int3
iret
fcomp
cmp
aam
imul
mov
mov
fstpl
sahf
ret
out
and
mov
add
push
ror
mov
push
adc
scas
enter
xor
pushf
fmull
movsb
and
shl
iret
stos
test
and
faddp
cmpsb
lret
mov
dec
sbb
cmp
fcmovnbe
ljmp
div
roll
stos
vpinsrw
lock
lods
sbb
adc
inc
cld
movsb
adc
call
xor
out
scas
mov
push
out
dec
fnsave
fstps
testb
or
pause
cmp
adc
out
fcompl
mov
fimuls
loopne
ficompl
imul
nop
fidivl
mov
ret
mov
adc
repz
sub
push
repz
xor
dec
lret
mov
in
xchg
or
mov
lods
cmp
jo
mov
or
mov
mov
mov
addr16
aam
mov
movsb
sarl
sbb
jle
out
push
into
fisubl
ja
adcb
pop
pop
xchg
pushf
iret
in
stos
inc
xlat
sahf
cmp
jmp
iret
popf
mov
cmp
sahf
stos
inc
dec
mov
add
enter
jge
push
or
aam
orb
int3
mov
int
ss
les
xlat
out
les
frstor
inc
or
xchg
out
mov
in
daa
mov
and
jno
ljmp
repz
call
aam
mov
and
mov
inc
xchg
xor
or
stos
stos
jge
movsl
adc
jmp
movsl
sbb
push
mov
mov
gs
lock
ret
mov
int3
repz
pop
adc
fsubrl
test
mov
fs
fsubl
mov
lea
mov
sar
in
xchg
mov
stc
leave
mov
mov
fwait
mov
into
ljmp
add
xchg
mov
push
cmpsb
fiadds
jne
xchg
xchg
jge
xor
xchg
xchg
je
and
jne
sub
xchg
jne
and
xchg
mov
mov
xchg
mov
ret
lock
aad
sti
lret
pop
lahf
and
push
enter
cmpsl
pop
lret
rcl
aam
cld
pushf
loope
les
pop
pop
out
dec
ret
sub
mov
jo
cmp
mov
lock
jecxz
cltd
lret
mov
hlt
jb
mov
and
int3
nop
movsl
movsl
mov
add
mov
aad
pop
mov
ficoms
mov
arpl
ror
fs
rcrl
adc
scas
sbb
xor
fcmovnbe
sarl
inc
xchg
sbb
xchg
shll
xlat
leave
push
fcoml
mov
lret
movsl
and
loopne
es
pop
sbb
mov
jg
lret
add
add
mov
push
enter
push
gs
iret
fsubrl
out
sbb
xchg
popa
fucompp
sahf
and
fidivrl
jb
into
xor
adc
mov
out
fwait
jecxz
push
adc
mov
iret
aam
inc
scas
test
pop
ja
lret
je
pop
add
push
enter
mov
sbbb
stos
and
jb
ljmp
push
arpl
xlat
push
bswap
lret
lret
movsl
or
cli
ret
orb
test
sub
mov
sbb
pushf
les
and
and
or
jmp
cmp
jns
pushf
jbe
adc
lret
mov
pusha
rcl
movsl
mov
in
pop
cmp
imul
pop
fimull
pop
jp
jmp
cmpsl
sahf
shrb
adc
fistpl
rcr
mov
mov
test
lods
and
or
movsb
mov
sbb
mov
mov
repz
rolb
push
ljmp
in
xor
jg
pop
xchg
xor
mov
sahf
jns
or
rcrl
mov
imul
jmp
aad
cltd
add
call
xchg
into
dec
insl
xlat
sub
ficompl
repnz
lods
mov
mov
pushf
mov
and
test
xchg
into
test
bound
mov
insl
sbb
push
push
xlat
stos
push
dec
ja
xchg
inc
arpl
lods
mov
test
loopne
scas
push
out
shlb
sub
jmp
mov
mov
adcb
mov
test
mov
or
fucomp
dec
pusha
xchg
xlat
out
iret
mov
in
aam
repz
sbb
lret
daa
int3
pop
stos
lret
fimull
loop
adc
xchg
iret
xlat
adc
mov
lods
push
movsl
into
xchg
jo
testl
lods
sbbl
lcall
sub
dec
sbb
mov
shrb
inc
cs
out
iret
xchg
mov
jmp
mov
movsl
aam
sub
test
lret
out
iret
mov
sbb
or
stos
xchg
fs
cltd
mov
lret
push
ds
stos
pop
xorb
or
fisubs
fcoms
rcl
xchg
mov
fidivl
mov
cmc
inc
lods
xor
fcmovb
scas
in
and
aad
pop
and
jns
ds
test
mov
mov
repz
js
cld
int
xchg
nop
scas
mov
jbe
into
cltd
loope
mov
ret
in
jmp
jg
test
push
cld
test
or
pop
rorb
int3
enter
scas
lods
mov
fdivrl
cmpsl
mov
pop
enter
or
hlt
add
push
mov
cmp
mov
je
adcl
lret
loope
push
loope
cmpsl
fdivs
jl
push
or
dec
jns
sbb
je
mov
mov
fwait
sahf
mov
fnstcw
mov
aam
ss
cwtl
inc
iret
xor
fstp
xchg
dec
mov
mov
lods
test
push
lock
xchg
enter
pop
adc
cmpxchg
lret
enter
popf
add
mov
cmc
cmpsl
imul
pusha
dec
xchg
jmp
stos
popf
dec
fisubrs
out
mov
repnz
lods
and
mov
movsb
cmpsl
out
les
paddd
orb
out
mov
pop
insl
stos
scas
sbb
loope
adc
xchg
aam
mov
adc
fldt
mov
mov
popf
fadd
lods
imul
shld
into
cmpsl
enter
stos
xor
insl
pusha
loope
loopne
xor
in
mov
mov
shrl
sbb
mov
cli
mov
ss
cmp
fwait
mov
pop
sub
and
xchg
jp
movsl
jb
movsl
ljmp
call
add
outsb
rclb
mov
mov
mov
jl
in
adc
mov
into
ret
mov
inc
stos
loopne
int
mov
fnstenv
lret
mov
jp
fsubl
lods
mov
jle
inc
xchg
insb
mov
mov
lods
or
arpl
mov
loop
cld
aad
fisubrs
ret
push
repz
les
and
scas
mov
mov
mov
popf
enter
cmp
or
or
iret
popf
aad
pushf
lret
ret
repz
stos
aam
scas
adc
fstpt
rorl
nop
add
and
ss
out
cld
fadds
int3
xlat
loope
mov
inc
sbb
popf
test
mov
lea
leave
enter
mov
xchg
inc
sti
mov
jge
mov
aam
mov
jnp
push
out
rclb
or
int3
jmp
hlt
and
shrb
xchg
jmp
cmp
fwait
rcrl
aam
mov
jmp
movsb
xor
mov
pop
mov
pushf
pop
sahf
xchg
iret
test
fbstp
xor
fisubl
fsubr
enter
pop
or
int
mov
mov
lret
jno
test
dec
clc
inc
ret
test
lods
xchg
fdivrs
ret
lret
out
scas
xchg
push
loope
ljmp
mov
dec
xchg
rol
popf
mov
into
rcr
jecxz
add
fsubr
enter
push
in
sahf
int3
push
jbe
fwait
lods
sbb
das
stos
mov
xchg
js
int
mov
leave
out
xchg
mov
pushf
nop
pop
lods
ljmp
xlat
and
lret
lods
ja
mov
cmpsl
call
mov
int
xchg
popa
and
lods
and
dec
mov
mov
and
jl
mov
mov
lods
xchg
arpl
mov
shll
rcll
int3
mov
pushf
lret
sbb
shr
jne
sbb
cld
loop
movsl
or
dec
stos
fdivp
les
pop
popf
xchg
jno
test
sbb
shl
cmp
mov
rcr
fsubrl
push
enter
sub
movsl
sub
lods
sbb
mov
std
cmp
mov
pushf
rorl
loop
mov
push
enter
cld
in
or
xchg
mov
mov
fwait
aad
shlb
test
lret
movsl
int
mov
int3
mov
cmp
aas
stos
sbb
mov
stos
lods
inc
pop
insl
adc
push
sub
pop
lret
pop
cmp
int3
jmp
popf
mov
or
xchg
xor
insb
sarl
xchg
pop
push
mov
sbb
loop
repz
dec
test
rcr
loopne
call
xlat
mov
inc
add
cmp
mov
sahf
ret
ds
stos
aam
fs
fidivrs
push
sti
scas
scas
add
mov
push
clc
pop
cmpsl
test
xchg
lahf
add
lahf
and
mov
loope
jle
call
scas
cmp
ret
orb
add
mov
arpl
and
mov
cld
jmp
cmpsl
stos
xchg
xchg
insb
cmc
rclb
ret
iret
movsl
sbb
lods
mov
test
xor
cmp
scas
fiadds
fdivrs
cmpsl
mov
adc
mov
pop
mov
adcb
test
mov
ret
cmp
pop
mov
inc
fdivp
les
sub
outsb
and
fisttpl
cmp
xchg
popf
aam
mov
pushfw
test
aad
or
out
sti
dec
sub
les
mov
mov
int3
xchg
pusha
add
mov
mov
pushf
lods
fcmove
push
rclb
sahf
inc
pop
andb
test
lahf
lret
fcmovb
lock
dec
clc
inc
or
aam
daa
shrl
mov
inc
lcall
movsb
mov
jmp
adc
rol
dec
push
mov
sbb
pop
xchg
add
or
sbb
lods
mov
rcl
cs
jge
movsl
mov
popa
icebp
ja
stc
ljmp
int3
shlb
sub
and
mov
rcll
movsb
call
and
int3
idivb
in
mov
mov
ja
data16
dec
stos
scas
sbb
pop
mov
cmpsl
aad
mov
pushf
jno
pop
rolb
fcmovb
pop
mov
mov
aad
mulb
fnstcw
movsb
test
fidivs
mov
bound
scas
popf
mov
int3
rol
fwait
iret
rcrl
mov
insb
mov
mov
loop
movsl
in
rorb
int3
ret
les
lods
and
mov
mov
ret
aam
movsb
pushf
repnz
mov
or
dec
push
mov
jl
mov
lods
xchg
aad
out
rorl
sbb
dec
ljmp
cmpsl
xchg
fwait
mov
jnp
leave
sub
xchg
pop
les
pop
int
inc
and
pop
scas
xchg
sbb
dec
scas
mov
insl
cwtl
rcll
mov
lods
scas
ficoms
mov
adc
fcmovnbe
mov
ror
popf
shll
sbb
aam
fdivs
and
stos
hlt
ss
jno
movsb
xor
fcmovbe
jae
xchg
push
hlt
loopne
xor
pop
mov
int3
sub
dec
or
mov
mov
mov
rorb
aad
fidivrl
loope
mov
loop
rcrl
adc
sbb
sub
mov
adc
test
shrb
add
fcompl
sahf
ret
shll
dec
aad
pop
clc
int3
lret
mov
mov
stos
loope
jl
scas
add
idiv
jle
xchg
mov
mov
enter
mov
pop
ds
loop
mov
rcrb
fisttpll
les
out
popf
sbb
mov
xor
movsl
fisubrs
dec
jmp
push
insb
dec
or
sbb
mov
jbe
in
mul
notb
mov
sahf
arpl
les
arpl
je
outsl
mov
into
push
fsubs
adc
movsl
test
pop
fidivrs
mov
loopne
pop
lahf
mov
or
ret
cmpsb
fimull
sub
lret
out
and
test
mov
xor
push
push
call
nop
outsl
cltd
ljmp
pop
loopne
cmp
mov
rclb
mov
dec
iret
inc
xlat
mov
mov
adc
mov
out
aad
sahf
jb
movsl
mov
mov
mov
cmc
insl
sbb
mov
sbb
xchg
mov
mov
scas
sbb
stos
loop
scas
sbb
mov
fstps
pop
movsl
xchg
sub
fnstenv
mov
push
lret
mov
lret
call
sbb
jb
pushf
les
fisttpl
mov
stos
shrb
mov
aad
push
mov
es
out
test
mov
es
push
inc
fstps
xor
jne
push
out
cs
cltd
cmp
stc
mov
pop
into
aad
jnp
jecxz
scas
cld
movsl
out
hlt
or
fstpl
lret
test
bound
fdivrl
mov
mov
into
insb
xor
sub
mov
imul
inc
adc
iret
ss
call
int3
popa
aam
mov
imul
imulb
sub
int3
gs
pop
imul
and
mov
int3
mov
xor
adc
mov
int3
mov
in
mov
divl
cmpsb
divb
jmp
jb
xchg
dec
shrb
or
pop
enter
insb
pusha
mov
ljmp
loope
mov
lods
dec
fdivrl
cmpb
push
aam
test
loope
mov
adc
aam
movsl
xchg
out
fcomp
sbb
repnz
test
xchg
fldenv
mov
clc
andb
add
mov
into
popa
mov
movsb
cmpsb
lea
mov
fstpl
cmp
xchg
cmpsl
sub
imul
dec
in
into
push
insl
mov
rcr
xchg
shl
add
cld
lds
xor
aaa
cmc
mov
mov
sbb
int3
aam
ret
aad
out
push
call
and
mov
loop
test
aad
mov
pusha
in
pop
ret
repz
cmp
mov
mov
stos
pop
ja
repz
jnp
aas
out
xlat
test
loop
int
loope
cmp
inc
pop
jmp
fstl
xlat
movsb
mov
mov
inc
outsl
ja
lret
sahf
aad
add
into
ljmp
adc
mov
inc
mov
test
int
repz
into
jns
push
dec
icebp
fmulp
aad
pop
sahf
xor
xor
out
mov
repnz
mov
mov
sbb
mov
fimuls
mov
pop
lret
mov
cmpsl
addr16
clc
mov
xlat
ficomps
dec
in
dec
jb
jns
les
sub
mov
mov
iret
mov
pushf
lret
lahf
cmpsl
and
and
push
mov
mov
into
stos
ljmp
cmp
sub
dec
sub
fsubrs
mov
mov
lods
repz
into
test
xchg
xor
xchg
mov
out
lret
mov
cmp
das
leave
mov
lods
out
mov
sbb
xor
stos
jl
inc
dec
mov
and
into
adc
popf
mov
out
lds
int3
ret
dec
mov
andb
aad
pop
cltd
cmp
pop
mov
cmp
mov
xchg
mov
xor
dec
nop
cltd
int
jle
add
mov
fisubl
jmp
cwtl
and
cmpsl
ljmp
rcll
jnp
btr
mov
flds
inc
popf
pop
push
add
cli
movsl
cld
call
test
sub
mov
mov
mov
jmp
mov
lock
lret
adc
mov
shll
aam
ljmp
int3
mov
or
inc
cmpsl
stos
push
push
mov
fists
lods
ficoml
stos
daa
or
dec
xchg
pop
push
cmpsl
adc
lret
xchg
mov
mov
push
inc
stos
repz
rorb
outsb
mov
sub
cmpsl
sbb
scas
mov
inc
shlb
int3
movsl
mov
aam
and
test
stos
mov
sub
sahf
fs
rcll
add
int3
mull
add
cwtl
mov
fcoms
shlb
mov
out
mov
lret
mov
cld
fsubl
lods
lcall
cmc
sub
lock
ljmp
frstor
pusha
les
sahf
mov
mov
sub
mov
fnstcw
neg
int3
aas
repnz
mov
arpl
and
xor
lods
fistpl
mov
into
iret
jb
mov
enter
cmpsl
jb
or
sub
cmpsl
sub
daa
aam
leave
adc
or
cs
fsubrs
movsb
cmpsb
rcrb
fldcw
sub
out
dec
adc
dec
aas
xchg
fwait
mov
fdiv
adc
mov
ret
test
sbb
aad
push
rol
shlb
mov
inc
lock
mov
int3
mov
lret
pushf
xor
mov
ss
mov
test
stos
mov
or
and
xlat
pop
movsb
popf
test
scas
mov
mov
lock
outsb
and
mov
lds
mov
push
add
sarl
les
mov
insl
add
pop
xchg
push
in
loop
ljmp
out
mov
icebp
std
push
loope
push
out
mov
dec
nop
repnz
out
stos
mov
test
adc
mov
sahf
adc
mov
cld
pusha
or
rcr
test
test
addb
mov
les
lret
sbb
popf
imulb
mov
mov
loop
mov
repz
mov
bound
dec
cmpsl
cld
mov
mov
adc
mov
mov
push
out
cmp
dec
xor
into
cmp
aad
mov
gs
sub
lds
dec
add
mov
jge
movsl
icebp
nop
xor
dec
mov
fisttpl
mov
xchg
dec
stc
mov
mov
leave
pushf
xlat
lret
ret
xchg
fimull
lds
scas
inc
sub
fcmovb
sahf
sbb
xchg
pop
mov
fwait
and
or
add
add
mov
sub
int
lds
xor
popf
adc
mov
jmp
mov
loope
lret
mov
mov
ljmp
fistl
lods
mov
push
add
jnp
or
adc
xor
fisttpl
movsb
movsl
mov
mov
lods
jne
inc
ffree
scas
lods
lds
sbb
lahf
push
scas
xchg
and
fucomp
lods
ljmp
lods
test
aaa
sbb
xchg
xchg
mov
repz
xchg
lds
movsb
popa
clc
mov
shl
test
int3
sbb
call
mov
ljmp
mov
xor
leave
push
mov
add
mov
jmp
and
in
lds
lret
mov
inc
adc
movsb
sbb
sub
incb
scas
mov
cmpsb
dec
les
sub
add
fmulp
loope
pop
lret
enter
subb
push
mov
test
sbb
mov
stos
out
fsubrs
inc
push
iret
ljmp
iret
sahf
and
ret
idivb
cmpsb
enter
pushf
loop
lret
sub
popa
pop
and
fwait
roll
orl
ficoml
enter
out
adc
sahf
mov
mov
cmp
push
mov
out
bound
fsubrs
pop
dec
xchg
sub
mov
add
dec
aad
fisttpl
adc
scas
or
mov
push
or
push
or
lahf
mov
and
les
mov
scas
xor
dec
mov
mov
sti
rcr
fcompl
and
cwtl
not
or
fwait
scas
iret
shr
cmpb
pushf
enter
inc
dec
cmpsl
pop
enter
dec
cmc
mov
mov
xor
jecxz
jbe
sub
in
scas
fcomp
jo
fidivl
movsb
mov
mov
loop
repz
fdivl
xor
incl
das
rorl
ds
and
mov
lcall
subl
sub
or
test
xor
xor
insb
jb
stos
lret
fldenv
mov
enter
lods
sbb
daa
aaa
and
push
mov
cmpsl
jge
or
fadd
add
adc
adc
int
mov
mov
pop
test
push
pop
or
jbe
cmpsl
jne
mov
sbb
push
leave
xor
sbbl
stc
cmp
movsl
mov
les
adc
sarb
fsubrp
out
and
mov
dec
sarl
push
adc
mov
in
leave
sub
rcl
push
ljmp
imul
sub
clc
pop
cmc
mov
mov
ljmp
pop
mov
cmp
cmp
pushf
or
push
xchg
push
mov
rcr
jo
cli
rcl
movl
out
mov
sbb
jecxz
cmc
aas
adc
sbbl
aad
out
and
and
fcmove
and
aam
cld
sarb
test
movsl
pop
aad
arpl
cmpl
aam
fwait
pushf
fidivl
sub
sahf
xchg
adc
sbb
call
bound
mov
ljmp
repz
lods
ret
lret
mov
mov
cmpsl
xchg
jae
inc
ret
xor
mov
jg
and
shrl
fiadds
mov
scas
mov
arpl
lods
sahf
mov
ret
or
xchg
lods
scas
int
mov
stos
fld
ret
cmp
or
sahf
into
dec
pop
mov
xchg
cmpsl
lds
adc
test
jp
in
loope
ja
fldl
pusha
shl
pop
test
mov
sbb
dec
fadds
adc
jbe
scas
mov
mov
ret
frstor
lret
dec
scas
outsl
lea
out
fadd
xor
dec
stos
ljmp
pop
inc
dec
sub
xor
aam
mov
sub
sbb
mov
les
out
jns
sti
pop
bsf
fisubrl
iret
leave
adc
push
pop
outsl
xlat
out
aad
mov
imul
sbb
in
fsubrs
fidivrs
pop
aad
int
or
and
outsb
adc
repz
fwait
mov
ret
cld
mov
shlb
stos
mov
lret
test
xchg
mov
ret
int3
mov
enter
xchg
sbb
les
xchg
call
sbb
das
pop
and
out
push
jnp
ret
adc
sub
ja
rol
xor
cmp
cmp
mov
lods
fidivl
mov
scas
mov
stos
lds
into
mov
ljmp
ljmp
push
test
mov
jl
enter
incl
iret
mov
out
movsl
xor
popf
mov
mov
fstp
or
rorl
push
rcr
xlat
pop
cs
cmp
cltd
pushf
lret
imul
aad
inc
scas
outsb
popa
sarb
xlat
ret
jle
xchg
iret
jbe
shlb
out
ficompl
adc
cmc
test
or
iret
stos
dec
adc
lcall
jns
jbe
lods
cld
aad
or
push
push
jbe
shlb
loop
mov
fwait
push
adc
dec
and
mov
cmpsb
fisubs
pop
mov
push
mov
popf
loop
push
inc
xchg
mov
vpshufhw
pop
pushf
push
and
cmpsl
fdivl
pop
lds
jo
cwtl
xchg
jo
sahf
xor
fsts
out
mov
pop
mov
pop
sub
sub
int
outsb
idivl
mov
outsb
negb
cltd
push
and
mov
and
fdivs
sbb
test
jge
ds
inc
push
test
popf
jmp
xlat
das
xlat
jl
leave
stos
iret
ficoms
int3
mov
sub
in
xchg
into
enter
pop
or
popf
mov
mov
aas
or
xor
fcmove
mov
sub
mov
ljmp
rclb
push
mov
mov
dec
enter
loope
mov
inc
mov
dec
inc
jmp
fcmovnbe
push
repz
les
cmpsl
imulb
push
es
mov
fmul
inc
pop
or
movsb
scas
pop
ja
dec
push
shrb
fadd
jl
bound
xchg
dec
mov
movsb
test
nop
pop
jae
lea
shr
ljmp
mov
mov
or
push
xor
lods
aam
loope
int
xlat
inc
jns
jmp
stos
xchg
mov
pushf
sbb
dec
mov
or
test
sahf
stos
pushf
mov
add
enter
jp
lock
xor
add
mov
fwait
sub
adc
cmp
sbb
into
scas
test
cmp
mov
mov
dec
scas
or
sub
mov
out
loopne
ss
mov
out
mov
int3
cmp
xlat
scas
test
movsb
ret
out
lods
sbb
pop
push
insb
fmull
imull
sbb
shl
movsb
lods
daa
xor
out
int
fwait
stos
stos
xor
mov
movsb
test
mov
sbb
mov
jmp
rolb
mov
loope
rcrl
lahf
mov
xlat
outsb
xchg
iret
mov
adc
push
xlat
into
push
int
loope
cli
shrl
fdivr
movsb
xchg
jmp
lret
aam
roll
mov
into
or
out
ss
pop
or
pop
mov
andb
or
aad
rorb
movsb
ror
incl
jp
addr16
lret
mov
fcompl
lret
out
pop
sub
int3
lea
xchg
cld
ret
jmp
fdivs
lea
loope
imul
sahf
cli
pop
lret
movsb
cld
lods
cmp
xlat
mov
clc
movsl
gs
mov
inc
adcl
call
mov
fcmovne
mov
int3
scas
lahf
cmpsb
inc
lret
push
mov
jl
lret
pop
xlat
popf
test
shrb
jae
sbb
mov
sbb
jecxz
jnp
push
lods
mov
loop
add
in
into
jnp
stos
cld
loope
sub
ret
sbb
push
mov
mov
int3
fnstcw
sub
or
fnstenv
xchg
lret
stos
test
ror
mov
fisttpl
adc
out
enter
enter
movsl
lret
pop
aaa
loop
mov
out
ljmp
pop
ret
push
xor
movsb
mov
mov
mov
imul
push
adc
imul
mov
movsl
aad
ret
sahf
cmpsl
ljmp
inc
push
or
fdivs
dec
int3
call
mov
jmp
mov
pand
mov
out
mov
push
fidivl
xchg
jecxz
sbb
test
jecxz
cmp
pop
mov
je
lods
fwait
iret
nop
repnz
and
sbb
push
mov
call
pop
lods
jg
loop
pop
xchg
dec
int3
mov
sbb
mov
pushf
sub
xor
fcmovbe
fistl
aad
ret
imul
dec
test
aas
cwtl
cmpsl
movsl
je
mov
cmc
stos
stos
push
mov
cs
mov
sahf
xlat
iret
not
enter
ficoms
mov
mov
xchg
scas
cmp
out
cmpsl
mov
sub
mov
scas
flds
into
fs
dec
cld
popf
sahf
lret
out
ja
xchg
idivb
lret
sahf
xchg
iret
adc
repz
cltd
xor
int3
test
rcl
rcl
loope
mov
mov
fsub
jl
popf
cld
push
mov
leave
mov
xchg
fcmove
ljmp
scas
fisttpll
nop
xchg
fwait
mov
ja
push
mov
in
mov
lods
or
nop
xchg
mov
out
into
mov
sti
mov
hlt
pop
mov
iret
inc
and
pushf
mov
daa
jecxz
mov
aad
jmp
shrb
clc
fcompl
mov
fisubrs
jge
lods
mov
js
test
inc
aad
cmpsb
inc
lcall
or
out
mov
adc
movsl
stos
cmpsb
push
testl
fpatan
stos
fwait
mov
loop
sarl
les
ljmp
jne
test
out
ljmp
mov
iret
mov
shrl
movsb
dec
mov
xchg
cltd
ret
test
push
inc
scas
cmpxchg
enter
movsb
pop
jecxz
and
andb
sub
movsb
call
clc
loop
stos
loopne
push
mov
leave
cmpsl
movsl
fdiv
imul
test
cmp
test
push
scas
sahf
and
adc
mov
leave
loop
lods
adcl
adc
xor
rolb
lret
cld
movsl
lret
mov
nop
mov
ss
push
int
stos
aaa
loope
into
cli
lea
lods
repnz
mov
dec
push
mov
test
dec
pusha
add
outsl
or
add
aaa
addb
fadds
mov
out
iret
pushf
ljmp
lods
push
pop
jl
mov
or
mov
lahf
out
lahf
loop
out
mov
scas
stos
fsubr
jbe
sbb
mov
adc
scas
sahf
xor
leave
or
cld
insb
or
mov
cmpsl
icebp
es
mov
xchg
scas
stos
bound
in
call
mov
loop
xor
mov
shlb
sub
jg
sahf
popf
mov
mov
lods
fldl
mov
push
or
sahf
mov
leave
sti
scas
fwait
loop
adc
xchg
jge
fstpl
mov
sahf
mov
or
stos
ljmp
ret
mov
test
sti
loope
mov
insl
dec
mov
scas
out
bound
out
fcomps
mov
xchg
lods
sarb
repz
sbb
lahf
xchg
mov
mov
mov
lods
faddp
lret
adc
or
ljmp
and
loope
lods
out
int3
fwait
and
out
stos
mov
fcmovb
stos
dec
fmull
jp
xor
imul
mov
sub
insb
fistpl
xor
pop
mov
ds
idivl
pop
dec
mov
lret
cmp
mov
xchg
cs
call
lods
movsl
mov
aad
push
stos
lods
fstps
mov
rolb
jb
or
int3
das
loop
mov
jmp
fbstp
push
mov
xchg
and
test
xchg
adc
xchg
aam
and
fcom
dec
inc
push
sbb
dec
loop
xchg
dec
or
mov
xlat
cs
mov
sub
test
sti
cmp
push
cmp
mov
cli
jb
inc
lds
jmp
stos
ljmp
or
or
lods
int3
shrl
scas
xor
mov
out
mov
jbe
js
cmpsb
sbb
mov
mov
mov
add
mov
adc
rorb
clc
adc
into
shlb
lret
xchg
xchg
movsb
aam
popf
jmp
aad
cmpsl
dec
push
pushf
out
xlat
loope
push
xchg
mov
dec
shrl
mov
inc
sub
adc
out
mov
or
ret
aam
mov
mov
add
jo
out
sbb
scas
cmpsl
dec
dec
cmp
inc
decb
jle
neg
out
mov
enter
sti
movsl
iret
daa
adc
loope
xchg
lret
adc
mov
mov
lods
lods
push
mov
lods
xchg
into
int3
and
jmp
push
sub
xor
data16
dec
shrb
in
push
bound
lds
mov
mov
lret
cmp
out
aad
fsub
and
ret
js
leave
mov
test
lods
mov
mov
dec
or
int3
jb
mov
adc
lds
push
testb
fdivrs
sbb
xor
inc
adc
leave
mov
aad
ljmp
push
mov
mov
stos
sbb
or
js
pop
fwait
and
out
fcmovnbe
or
push
fnstsw
mov
scas
rorb
mov
shll
and
mov
mov
shlb
movl
out
adc
call
leave
push
scas
xchg
scas
icebp
lret
pop
jnp
or
sbb
faddl
inc
pushf
les
fidivl
mov
lea
fstp
mov
bound
bound
mov
aas
sar
rolb
sbb
leave
iret
and
cmp
loope
movsb
scas
loop
and
and
mov
rep
ljmp
test
jp
rorb
mov
mov
adc
scas
push
mov
adc
pop
add
mov
cmpsl
or
xor
lahf
cltd
nop
jbe
lret
popf
rorl
lds
lds
rorl
mov
sarb
or
xor
mov
fsub
rcrl
pmuludq
scas
repz
pushf
neg
mov
fwait
sahf
leave
popf
and
jmp
and
fwait
out
mov
adc
mov
xlat
xchg
inc
es
testb
ljmp
mov
sbb
sti
or
jbe
or
stos
aad
mov
ljmp
call
ss
scas
insl
lret
pushf
inc
push
fs
out
cmp
popf
loope
dec
inc
leave
xchg
xor
mov
fisttpll
imul
sahf
xor
into
xlat
les
imul
rcl
adc
lods
sahf
sub
enter
les
mov
lods
push
fsubr
mov
aas
pmullw
or
repz
rorl
andb
mov
mov
int3
outsl
pop
gs
fnstsw
dec
dec
lds
gs
adc
into
sub
shlb
fldenv
ret
pop
mov
mov
sti
mov
lret
ljmp
imul
mov
scas
pop
out
clc
jmp
adc
and
jg
shrl
fisubs
pop
pop
loop
aad
shrl
add
into
mov
sti
out
sbb
inc
mov
out
test
movsb
cmc
shrb
cmpb
or
sti
in
jp
or
call
mov
fisubrl
mov
add
xlat
scas
fcomip
out
add
push
dec
mov
jmp
test
mov
xchg
sub
and
cmc
das
clc
inc
notl
jl
enter
push
shrl
lods
hlt
xchg
mov
push
ret
pusha
pop
outsb
mov
in
pop
xlat
rcl
les
das
lock
mov
inc
inc
pushf
fisubrs
mov
cmc
jmp
pusha
lods
jb
mov
or
lods
rol
js
jmp
ljmp
mov
movsb
push
xchg
xor
and
xchg
mov
int3
movsl
flds
cmpsl
mov
mov
mov
call
ficoml
test
ss
mov
mov
nop
lods
mov
xchg
pop
xchg
push
imulb
cmc
sub
inc
cmp
xorb
ror
cwtl
adc
ficomps
xchg
cltd
cmp
aad
mov
fld
push
sub
or
js
bnd
mov
lods
popf
aam
sarl
lds
mov
jnp
lds
jb
mov
mov
sahf
int
movsl
in
jo
mov
fcomp
lods
and
mov
push
bound
into
or
mov
rcrl
inc
roll
and
pop
lret
loope
cli
xor
int
cltd
xchg
and
ds
fildl
out
jg
les
enter
jp
mov
jg
scas
or
or
stos
hlt
and
pop
adc
mov
xchg
mov
dec
or
lret
out
dec
sarb
mov
jmp
mov
fmulp
mov
das
js
movsl
fcompl
mov
xor
mov
mov
test
mov
rcll
xor
repnz
mov
sahf
xchg
jmp
int
int
xor
xchg
lods
add
lds
btl
aad
int3
push
testl
xlat
lods
jmp
enter
mov
into
movsb
mov
push
pop
push
je
cltd
imulb
rorl
mov
mov
xchg
adcl
leave
insl
clc
hlt
or
push
gs
adc
cmp
xchg
mov
aad
mov
adc
mov
int
imull
out
or
loop
leave
call
sahf
ljmp
lret
enter
in
jmp
stos
enter
inc
cld
loope
pushf
and
lods
insl
lret
loopne
leave
out
ret
shll
enter
ror
dec
test
sbb
mov
mov
lock
mov
push
movsl
stos
stos
mov
int
push
js
popf
test
or
scas
rorb
cwtl
out
mov
shlb
mov
gs
sahf
jmp
pop
push
lret
mov
lahf
mov
mov
stos
jecxz
jmp
mov
lret
call
shr
les
xchg
out
sub
lret
imul
xor
daa
adc
das
push
test
scas
leave
scas
out
nop
fidivs
dec
sbbb
dec
mov
out
jb
mov
sahf
test
sbb
movsb
ret
cltd
lods
xlat
cmp
or
scas
fsubrs
mov
sarb
inc
hlt
scas
scas
out
lret
ficoml
mov
pop
decl
fldl
and
jecxz
and
enter
mov
push
mov
xchg
xor
lods
aas
repnz
jmp
outsl
and
mov
push
sahf
icebp
push
lods
and
stc
out
out
add
cmp
loop
rol
popf
xchg
cmp
ja
fwait
incb
loopne
cmp
aaa
clc
inc
xchg
test
cmp
inc
int
cmpsl
mov
iret
fwait
mov
rolb
insl
add
repz
adc
or
mov
lods
add
jbe
clc
push
or
cld
lcall
xor
xor
out
mov
lods
cmp
pusha
pushf
lods
scas
lods
loop
loope
lret
das
enter
mov
xchg
push
mov
push
and
sahf
mov
xor
neg
xor
xchg
xchg
iret
loop
popf
dec
mov
shrl
or
shl
mov
fstp
inc
mov
int3
lret
dec
dec
or
or
xlat
cmpsl
lds
aaa
insl
int3
movsb
mov
bound
repz
leave
jo
mov
call
mov
imulb
leave
xchg
pop
sti
clc
lahf
out
ds
jne
shrl
out
and
gs
or
shll
mov
lock
xor
out
repz
sbb
mov
scas
or
pusha
inc
lret
sbb
sub
decl
clc
xchg
clc
cmp
lods
cmpsl
pushf
xchg
xor
dec
test
movsb
push
sahf
aas
fbld
movsl
shll
mov
push
cmp
mov
jmp
adc
mov
stos
sbb
int
mov
or
mov
and
sbb
mov
pusha
mov
cltd
insb
lods
xor
mov
or
movsb
mov
iret
out
sub
popf
in
fidivrs
cmp
scas
mov
mov
mov
xchg
cmpsb
xor
cmp
hlt
enter
ret
sub
pop
dec
mov
pop
xor
aam
jmp
lret
popf
inc
sti
fstpl
adc
mov
rorl
sub
ror
mov
push
pop
sub
ret
fsubrl
inc
test
jne
test
pop
jl
fld
push
mov
mov
into
xor
mov
aad
mov
lods
imul
xlat
mov
rcrl
repz
les
repnz
scas
in
dec
mov
and
aaa
adc
pushf
lods
shrl
loop
faddp
cmpsl
data16
sub
mov
aas
into
mov
scas
dec
shll
movsb
mov
lret
push
xchg
fldenv
adc
mov
enter
movsl
test
pop
and
imul
xchg
xchg
sub
mov
daa
scas
out
lret
mov
mov
dec
aad
test
rcrl
adc
rcr
aam
mov
jmp
test
mov
mov
orl
adc
lret
sub
push
inc
pop
cmc
leave
mov
fsubp
and
fcmovb
out
sahf
call
aad
les
addr16
lods
mov
mov
les
or
int3
dec
cmpsl
mov
dec
or
pop
mov
fisubl
push
lock
lods
cmp
inc
xlat
cmc
dec
test
push
xchg
das
inc
fiaddl
mov
outsb
xchg
mov
bound
fidivrl
ret
inc
psubsw
out
movsb
loope
jmp
out
pop
dec
fbstp
aad
xchg
int3
scas
into
js
jb
xchg
or
mov
jne
popf
mov
iret
mov
dec
xor
popa
jae
mov
adc
loop
ljmp
mov
lcall
shrb
rclb
int3
dec
xor
fmul
cs
dec
sub
leave
mov
mov
not
out
sbb
jb
call
sub
dec
leave
popf
cmc
mov
stos
out
into
lret
lea
lret
fsubr
dec
mov
or
sahf
sbb
or
inc
adc
sbb
out
leave
mov
mov
mov
imul
movsb
add
int3
and
lret
dec
out
inc
pusha
mov
fidivs
xorl
lds
aam
mov
iret
loop
pop
pop
lods
cmpb
out
mov
mov
fdivrs
movb
xlat
call
jo
mov
stos
rcr
nop
aam
mov
sbb
mov
jns
jecxz
repz
mov
ds
lods
mov
fimull
movsl
loop
lds
dec
xchg
out
ja
iret
int
int3
call
insl
pushl
test
cmpsl
js
inc
dec
hlt
mov
lods
and
mov
mov
ljmp
xor
sub
push
dec
aad
clc
jmp
movsl
out
mov
lods
add
enter
movsb
lock
outsb
sub
std
sbb
aas
push
ret
cmpsb
in
mov
stos
jl
cld
sbb
vpminub
ljmp
mov
pop
stos
aas
aas
cld
arpl
int
stos
aas
sbbl
call
andb
cmp
mov
out
ljmp
mov
inc
pop
lock
bound
lahf
xchg
fadd
and
mulb
or
test
sub
rcrb
enter
cmp
fsubrs
sti
xchg
sti
adc
lret
aad
lret
mov
xchg
aam
fmul
xchg
mov
push
stos
mov
cmc
ret
fs
add
mov
ljmp
mov
jmp
pushf
lret
adcl
jmp
stos
test
flds
loope
adc
subl
cs
clc
push
and
leave
fcmovb
adc
stos
shll
and
int3
jle
sti
fisttpll
sub
pop
out
loop
arpl
cmpsl
jo
adc
stos
sbb
or
aas
loope
inc
xor
fcmovb
iret
pop
icebp
sub
call
xchg
sub
push
data16
repz
cli
xor
ss
scas
lods
and
sbb
sub
insl
mov
hlt
ss
imul
lock
mov
mov
mov
push
sti
stos
bound
cmpsb
rcl
xor
push
leave
mov
fdivl
rcrl
mov
ljmp
push
lods
fsubr
iret
loop
call
lret
or
shll
movsb
sub
in
lea
lods
movsl
sbb
and
popf
jb
aam
mov
mov
scas
lret
test
add
jle
jp
scas
iret
imul
push
mov
lods
out
xlat
repz
ror
repnz
scas
mov
push
cmp
add
fdivp
sub
sbb
mov
int
popa
fcmovb
popf
clc
out
mov
lods
dec
dec
mov
add
shrb
pop
int
mov
mov
out
add
adc
mov
fwait
popf
enter
pop
pop
sbb
mov
rcl
sub
loope
xchg
lret
adc
scas
jo
mov
mov
push
shr
pop
call
fiaddl
mov
xchg
xor
in
out
scas
dec
inc
mov
push
iret
les
pop
jl
scas
cmc
adc
lret
mov
mov
test
mov
loope
call
fwait
jecxz
mov
mov
in
ret
mov
add
cmc
cmpsb
push
in
test
lret
into
mov
mov
popf
cld
pop
dec
adcl
push
int
xor
sub
adc
xor
stos
fstps
mov
stc
loop
fistpl
mov
mov
stos
jecxz
jp
mov
dec
insl
mov
and
test
add
dec
adcl
lret
les
lret
scas
jns
sarl
lds
insl
inc
ss
fwait
mov
out
ljmp
mov
aam
adc
xlat
outsb
adcl
mov
mov
fisubrs
and
loopne
mov
lods
iret
inc
bound
and
push
filds
iret
scas
adc
loope
sahf
mov
or
mov
pushf
sti
push
or
cmpsb
insl
or
repz
jbe
mov
push
mov
es
xor
popf
iret
aad
sbb
inc
mov
addr16
lcall
jg
test
sahf
hlt
mov
pop
push
stos
add
iret
inc
mov
xchg
mov
loope
repz
fildll
xchg
ret
ja
lods
orb
in
adc
mov
ret
jns
stos
ficompl
mov
fimull
dec
aam
cmp
stos
fwait
xor
cld
out
sbb
mov
cmpsl
sbb
int3
xchg
or
or
repnz
pushf
lret
add
xchg
lds
repnz
mov
sahf
push
mov
test
loop
int3
xchg
in
push
popl
mov
loopne
mov
xchg
cld
scas
sahf
mov
mov
daa
lahf
mov
dec
das
dec
add
adc
es
adc
fwait
mov
repz
dec
dec
stos
xchg
jno
mul
fisubrs
ss
sbb
mov
ljmp
cmpsl
sub
int3
and
and
test
insb
jl
xchg
fucom
leave
stos
pushf
mov
fcomps
mov
iret
out
test
lahf
push
fsubrl
test
in
mov
sbb
jnp
loop
cmpsl
out
cltd
imul
cld
mov
shrl
daa
movsl
jns
outsl
add
fsubp
sub
adc
lods
popf
mov
stos
pop
aas
mov
pushf
test
int
lret
adc
mov
sub
lret
mov
or
es
out
aam
clc
clc
fcmove
dec
or
cmpsl
rcl
inc
pop
sbb
fwait
inc
dec
stos
jbe
lock
add
lret
movsl
into
cmpsl
aas
mov
xchg
cmp
push
mov
adc
daa
adc
mov
jle
lods
jmp
test
mov
nop
lods
mov
rorl
mov
in
or
fnstenv
xor
movsl
lret
fsts
movsb
test
mov
mov
cwtl
scas
fwait
popf
test
repz
mov
mov
cld
inc
or
jns
push
ficompl
dec
cmp
inc
stos
leave
pop
mov
inc
mov
or
add
and
lea
out
ret
lea
inc
fst
rep
push
out
sbb
stos
ret
jae
add
mov
into
fwait
xchg
sti
mov
pop
mov
aas
mov
push
jl
push
lods
jmp
jp
xchg
pop
mov
int3
shl
mov
mov
lock
out
repz
movsb
sahf
add
jp
pop
and
enter
hlt
dec
lea
ss
sti
mov
movsl
decl
adc
mov
lret
insl
jge
xchg
aam
into
outsl
jge
mov
icebp
and
frstor
fldcw
push
fisubs
cld
or
mov
mov
repnz
xlat
iret
push
sti
fidivl
popf
mov
movsl
cmp
lds
fstpl
xor
sti
sar
sub
pop
loop
popf
es
pushf
fisubrl
shll
push
fwait
mov
and
ds
cmp
mov
daa
je
daa
cs
fnstenv
loope
fcoml
mov
pusha
adc
mov
add
mov
out
scas
call
add
mov
mov
int3
cmpsl
test
idivb
outsb
das
push
stos
iret
int
mov
mov
xchg
fists
popf
push
aad
xchg
cmpsl
sbb
movsb
loop
ljmp
mov
insl
add
pushf
ret
dec
inc
mov
clc
int3
ds
cld
out
sbb
or
leave
mov
mov
fcmovne
jmp
imul
jmp
mov
lea
test
adc
xor
adcl
stos
cld
lods
sti
testb
loop
ror
dec
cs
fldenv
insl
jle
cld
mov
push
fucom
sbb
dec
stos
mov
movsl
push
insl
inc
scas
sub
movsl
mov
mov
movsl
lret
jnp
mov
addr16
lea
cli
into
loop
popf
pextrw
sahf
jmp
aas
test
inc
sbb
sahf
pop
cmc
dec
mov
mov
call
ret
fbstp
cld
mov
shlb
pop
dec
shrb
sahf
lret
sti
enter
mov
out
xchg
cltd
int3
pop
dec
and
cmp
fmul
out
movsl
aam
pop
jmp
or
lods
daa
sbb
mov
mov
scas
bound
mov
add
pop
or
rcr
mov
adc
repz
dec
dec
sarb
lret
call
cmp
pusha
mov
std
fwait
les
mov
xlat
fidivs
add
imul
mov
dec
mov
shll
int
adc
mov
mov
int3
scas
adc
adc
mov
adc
mov
fistpl
inc
lods
sbb
jns
sbb
mov
fwait
ret
repz
lods
sbb
int3
xorb
fdivl
sub
pop
adc
call
call
mov
cmpsl
pushf
mov
lea
stos
loop
sbb
inc
ja
lret
ret
sbb
jne
sbb
xchg
sub
mov
and
xchg
cmp
sahf
mov
les
cmp
test
cmpsb
test
fidivl
mov
into
stos
lret
scas
fimuls
xor
rcrl
mov
or
mov
add
inc
ds
in
sbb
in
mov
sbb
mov
scas
mov
mov
jae
lds
mov
push
mov
xchg
stos
leave
fisubl
lret
fsubrl
int
mov
out
mov
stos
movsl
mov
mov
xchg
mov
hlt
mov
xchg
in
call
out
loope
ljmp
sub
scas
loope
stos
imul
out
movsl
clc
lret
ljmp
shrl
lret
xchg
test
iret
fstps
mov
sub
or
stos
mov
mov
mov
pop
clc
cmp
mov
add
mov
pop
jp
popf
popf
jmp
lods
and
insb
in
pop
push
pushw
stos
mov
xchg
imul
xor
push
outsb
testb
ror
sub
clc
shl
aam
mov
ljmp
push
aad
fsubrl
mov
jg
into
sbb
lods
xchg
insb
xchg
mov
dec
jp
out
adc
scas
jbe
mov
in
cmpsb
test
lea
fcmovne
xlat
insl
xor
adc
enter
mov
mov
lret
lods
cs
repz
lods
mov
cmp
out
push
mov
fs
test
movsb
rcrl
es
es
mov
loope
lods
mov
jl
or
scas
ficompl
nop
mov
mov
shl
xlat
out
fdiv
es
js
mov
movsl
rorl
sti
mov
sbb
mov
scas
push
test
nop
push
jo
icebp
fadd
fsubrs
xor
or
gs
fsubrp
les
dec
push
or
fsts
mov
outsb
pop
std
adc
jge
into
mov
push
test
call
les
test
fcmovne
mov
mov
pushf
push
sub
iret
lret
push
sahf
enter
into
test
mov
fcoml
xor
insl
pushf
lods
xor
and
addr16
int3
mov
push
ss
mov
stos
cmp
aaa
jne
pop
sti
loope
fidivl
fsubrl
xlat
cmpsl
iret
push
mov
or
int3
cwtl
mov
insl
mov
movsl
mov
test
test
jne
and
inc
clc
lods
addr16
int3
mov
xchg
jne
stos
sarb
mov
cmp
or
xchg
andl
je
cmpsb
jg
cmpsb
fnstcw
mov
fdivrl
test
and
mov
and
dec
adc
push
int
sahf
fcmovnb
mov
mov
mov
loop
add
scas
and
out
les
pop
lahf
xchg
jp
rcrl
adc
sti
mov
popf
xor
out
dec
ja
add
mov
test
fwait
xor
iret
cmp
mov
mov
loop
or
cld
stos
xchg
sbb
mov
mov
sub
shrb
mov
jo
test
shll
mov
loope
lods
fcmovnu
sub
scas
insl
jle
xor
mov
loop
ljmp
lods
dec
scas
pop
lret
inc
mov
ret
cmpsb
or
enter
lods
pop
inc
ret
cmpsl
bound
frstor
xchg
xor
enter
adc
into
fs
inc
loop
sub
je
inc
inc
data16
es
or
out
fidivrs
loope
ror
lock
std
adc
dec
pushf
stos
movsl
xchg
mov
test
adc
adc
xor
jmp
shrb
mov
insb
push
mov
test
fidivrs
loope
shll
ljmp
jno
daa
lret
pop
loop
aam
jno
ret
jmp
xor
dec
lods
mov
sub
stc
cmpsb
testl
or
adc
mov
mov
push
rcrb
sbb
mov
cld
xchg
jbe
gs
inc
ja
xchg
jne
add
test
adc
xchg
cli
mov
add
jnp
or
aad
adc
jmp
mov
rorb
sub
fdivl
stos
lret
mov
add
xor
mov
aam
test
rcl
cmpsl
sbb
lret
push
mov
dec
addr16
int
xlat
xor
sbb
lret
sarl
into
lods
and
sbbb
call
in
cmc
or
lods
lods
jns
and
stos
add
dec
sahf
pushf
mov
icebp
fxch
cmp
int3
mov
loope
dec
adc
call
int3
sbb
push
aaa
loopne
ret
cmpsl
insl
lea
lods
ficoml
push
mov
inc
pop
jl
stos
adc
ds
lods
add
mov
dec
in
ss
aam
sbb
cmpsl
lahf
adc
mov
mov
and
xor
popa
ljmp
loop
mov
dec
lods
leave
dec
xor
sbb
out
adc
roll
shrl
or
or
cmp
ret
out
lods
imulb
sbb
rclb
inc
lret
ja,pn
xlat
mov
or
ffree
sahf
mov
xchg
pop
scas
mov
cmp
mov
imul
sahf
jecxz
mov
mov
mov
repnz
mov
fucomp
mov
mov
lret
movsb
bound
xchg
aaa
nop
push
xchg
int3
adc
adc
sbb
test
test
lret
in
mov
and
bound
or
lods
int3
and
movsl
xchg
mov
sub
fcmovbe
mov
inc
loope
aam
int
mov
lds
push
mov
ja
jle
jmp
int
mulb
cmpsl
mov
out
into
jbe
sub
push
add
in
or
fnstenv
mov
sub
ret
inc
sub
mov
loop
movsl
loope
les
and
cli
cs
sti
fdivl
ds
mov
repz
ret
shrl
out
test
mov
out
jbe
sbb
fsubrl
jg
shll
rep
mov
sub
cmpsl
or
rcll
mov
out
daa
lods
xchg
loope
mov
cwtl
call
and
mov
cmp
mov
mov
xchg
int
addr16
ljmp
lods
cmpsl
fs
fnsave
mov
rorb
add
aam
xlat
xchg
lret
call
sub
jg
flds
cltd
xlat
movsl
lea
aam
xchg
int
mov
dec
dec
xchg
mov
rcrl
xchg
push
pop
push
push
push
sahf
cmp
push
xchg
sbb
nop
cwtl
fwait
or
adc
scas
pop
pinsrw
lods
loope
pop
stos
ljmp
dec
inc
mov
mov
xchg
bound
sahf
xlat
int3
jmp
pop
scas
movsl
jl
mov
mov
dec
bound
cmp
sahf
dec
movsl
fwait
mov
cli
push
sti
popf
cmpsl
or
enter
mov
adc
popf
sahf
fcomps
test
mov
test
mov
test
or
mov
loope
sbb
scas
stos
out
ds
test
rolb
or
test
push
lds
mov
mov
out
movsb
stos
push
mov
mov
or
jmp
fwait
ret
lods
cltd
mov
pop
or
mov
enter
ljmp
scas
mov
lea
inc
shrl
mov
pop
adc
adc
fwait
ljmp
mov
andb
lods
les
iret
xchg
jnp
push
faddp
int
mov
add
aad
jl
mov
push
addr16
lret
fisubrl
cld
iret
sti
call
dec
mov
popa
ret
mov
les
jns
adc
cmpsb
mov
dec
mov
test
leave
or
xor
jle
jle
sbb
loop
stos
push
lret
loopne
out
mov
aad
lods
stos
fidivl
popf
push
lods
dec
xor
lahf
dec
insb
xchg
nop
cli
ret
or
jmp
stos
push
dec
movsb
pop
sbbl
test
xchg
or
lods
push
pop
loop
fmulp
push
subl
je
in
cwtl
loope
lods
in
mov
sub
sub
cmc
lods
cmp
add
mov
lret
lods
mov
jmp
popf
mov
adc
cwtl
jg
jb
leave
xlat
adc
int
lods
sub
mov
xchg
lret
fndisi(8087
mov
jno
ret
or
aad
mov
enter
dec
mov
movsl
lret
and
arpl
test
sar
leave
cld
hlt
or
mov
mov
mov
pop
mov
lods
xchg
xchg
xchg
ja
push
aam
test
scas
faddl
scas
fistl
call
inc
shll
mov
jecxz
pop
in
cmc
sahf
ds
add
jg
inc
ljmp
lret
loop
jb
shrb
shrl
sbb
rorl
stos
sub
les
lret
mov
sbb
mov
rcl
fsubr
mov
lods
out
mov
addr16
mov
ret
js
or
rcl
cmp
push
int3
xor
ss
lods
xchg
into
jg
movsb
adc
les
ss
std
sbb
pushf
mov
inc
frstor
filds
leave
stos
and
fisubrl
or
mov
mov
outsb
lret
xlat
scas
rcr
mov
loope
sbb
lret
into
xchg
inc
int3
cmp
cld
inc
or
movsb
dec
lods
mov
sbb
jmp
mov
fwait
stos
imul
addr16
mov
xor
test
lret
mov
ret
loop
mov
or
xor
hlt
xlat
repz
dec
imul
out
sbb
mov
or
mov
neg
ret
lea
mov
scas
pop
sub
sti
lods
or
int3
inc
inc
and
adc
xorb
mov
cmpsl
adc
stos
xchg
pop
adc
mov
aam
rol
jns
adc
dec
bound
cli
mov
mov
mov
mov
aaa
lret
or
fcompl
fwait
rcl
iret
pop
mov
xor
fldt
aas
cmc
aam
mov
call
pushf
xchg
sti
loop
push
cmp
clc
lret
mov
movsl
push
ror
lods
xor
mov
mov
fsub
iret
int
lods
mov
fcmovne
pushf
jne
mov
out
cwtl
jo
fdivs
mov
dec
mov
pop
sub
daa
imulb
in
lods
pop
out
mov
lods
out
push
jge
in
fwait
dec
cld
cli
push
or
popf
loope
jb
mov
test
push
fbld
mull
mov
ss
je
mov
movsb
or
leave
test
push
cmc
mov
fcmovbe
aad
adc
mov
mov
push
add
lods
divb
mov
outsb
push
test
sbb
mov
mov
lret
loop
scas
fisubrl
pop
sbb
ljmp
dec
subb
ficomps
hlt
mov
pusha
out
or
out
inc
add
inc
xchg
jnp
jae
inc
in
frstor
fcomps
jne
iret
lret
jp
mov
movsb
fadds
jnp
sbb
lret
or
fs
repnz
leave
sbb
mov
stos
xchg
adc
cli
je
adc
testl
sub
push
js
pop
js
push
fdivl
outsl
fidivrl
push
cmp
push
pushf
push
push
imulb
sbb
mov
je
mov
lods
icebp
leave
sbb
mov
mov
xchg
lret
mov
shr
fld
and
add
loope
jo
cwtl
rcl
jmp
cmpsb
xchg
dec
cmc
cli
mov
cmpsb
pop
movsb
es
xchg
xchg
fiadds
and
cltd
movsb
push
xchg
pushf
outsb
lock
mov
pushf
sub
movsb
fiaddl
test
movsb
cmp
repz
xchg
cmpsb
call
inc
les
sub
adc
test
es
xchg
xchg
fldl
gs
pushf
ds
movsb
push
xchg
pushf
outsb
lock
mov
std
mov
xchg
xchg
mov
xchg
rclb
mov
jmp
jbe
inc
xchg
hlt
and
jl
leave
lods
or
inc
lds
loop
mov
cmpsl
push
lret
iret
mov
daa
int3
mov
pop
or
add
mov
fwait
scas
ud1
mov
mov
pop
repz
mov
cmpsl
mov
iret
inc
test
adc
scas
mov
mov
xlat
fwait
and
mov
fnstsw
lods
dec
mulb
lahf
sub
in
mov
mov
stos
sahf
das
jle
int3
mov
lahf
or
iret
mov
or
int
leave
loop
cli
jecxz
aaa
mov
out
fcmovb
sbb
fistpl
repz
xchg
je
flds
sbb
mov
cmc
or
and
mov
sub
out
xor
xor
dec
std
mov
jbe
xchg
push
mov
lret
fcoms
ficompl
into
popf
test
ljmp
outsl
dec
mov
push
popf
cmp
popf
mov
fidivrs
movsb
pop
loop
mov
inc
jl
sbb
or
sub
int3
fildll
leave
into
out
imul
pop
lcall
std
out
jb
mov
xchg
repz
lcall
dec
test
fsubrs
mov
roll
fsubrl
loope
lret
out
insl
fcmovne
int3
call
bnd
inc
inc
inc
das
aam
aad
or
lock
mov
ljmp
test
adc
or
mov
lods
or
mov
outsb
clc
scas
js
mov
inc
xchg
popf
jae
pop
cmp
repnz
xchg
fs
mov
fiaddl
jae
pop
sahf
xchg
sub
adc
mov
stc
cmpsl
out
movsb
mov
pop
push
test
rcl
out
jl
mov
sub
xchg
cs
xor
xor
sarb
sbbl
xor
nop
jns
xor
mov
or
out
jnp,pn
rcl
test
push
rolb
shrb
ret
adc
out
dec
sbb
call
mov
popa
outsb
out
scas
jle
cmp
jp
xlat
xchg
pop
rcrb
imul
loope
movsb
mov
or
xchg
xor
int3
lahf
ljmp
xor
jge
jno
xchg
rclb
xchg
mov
sbb
mov
loop
loopne
push
sub
ret
cmp
ljmp
inc
fsubp
sahf
lods
sub
xlat
pop
stos
aad
xchg
adc
int
ljmp
mov
sti
test
push
mov
sahf
pop
or
mov
xor
mov
mov
loop
xchg
lds
push
pop
mov
ret
ret
and
dec
outsb
add
in
lahf
sahf
popa
lret
push
dec
inc
out
test
mov
lods
dec
mov
xorb
jne
out
adcb
add
test
imul
repnz
scas
in
into
fidivrs
ret
sbb
cmc
add
mov
jl
sbb
mov
push
test
out
cmp
add
jne
fidivrl
add
fbstp
in
dec
and
loope
lock
fdiv
mov
dec
leave
into
ficomps
call
in
repz
push
cld
in
out
cmp
fcompl
adc
mov
mov
fidivl
lret
sbb
std
mov
mov
adc
xor
xchg
add
int3
loope
fdivr
sbb
ficomps
call
ljmp
push
fadd
imul
out
icebp
fisubs
call
sbb
or
lret
cli
vunpcklpd
movsl
fistl
pop
push
cwtl
cli
call
mov
jmp
cli
pop
loope
sbb
push
or
cs
ljmp
loop
jbe
cltd
cs
icebp
movsl
call
int3
ljmp
repz
icebp
loope
fcoml
fcmovnb
int3
fisubs
inc
int3
call
jmp
cli
vunpcklps
ror
sbb
or
sbb
or
loop
vunpcklpd
ror
sbb
or
xor
popa
adc
jmp
repz
lret
pop
jl
call
stos
or
call
xchg
loope
in
loope
out
fnstcw
shrb
ficoms
dec
loope
fsubrs
into
pop
insb
int3
pop
insb
shrb
stos
cmp
into
gs
jmp
mov
loop
ret
add
jmp
mov
ljmp
insl
mov
cs
mov
into
ficomps
outsb
insb
mov
insb
mov
insb
mov
insb
scas
pop
insb
lods
pop
insb
mov
insb
aam
ret
pop
insb
enter
add
aam
shl
in
icebp
frstor
pop
sbb
ljmp
pushf
pop
or
std
cld
notb
mov
sbb
std
or
es
push
mov
xor
movb
xchg
dec
movb
xchg
push
mov
out
or
mov
mov
stos
lahf
shrb
cltd
loop,pn
jmp
test
bound
inc
int3
loope
loope
loope,pn
js
loope
pop
mov
fstps
sbbl
push
out
shlb
sbb
push
flds
cli
mov
push
sbb
int
mov
out
sub
push
gs
leave
jp
mov
pop
xchg
dec
arpl
pop
ljmp
sub
pushf
add
hlt
clc
ljmp
cmp
fsubl
pop
out
clc
ljmp
in
ljmp
mov
imul
data16
pop
loop
out
xchg
movb
ja
and
int3
loop
loop
and
sbb
or
loope,pn
icebp
loope
loope
das
icebp
loope
outsb
hlt
imul
lret
hlt
rorl
mov
mov
mov
mov
sub
imul
pop
movb
and
or
xor
sub
int
fdivl
jne
xlat
push
mov
fiadds
sarl
insb
cld
divb
cmpsb
cmpsl
mov
popa
inc
aad
mov
js
cltd
ds
add
lds
rcl
mov
faddl
jb
fidivrl
xchg
scas
fstl
push
fldl
aad
push
add
nop
jae
push
add
jp
and
andb
lcall
test
mov
scas
fs
shrl
pop
cmpb
jle
shl
outsl
xchg
insb
cmp
xchg
ror
push
fs
loope
adc
repnz
dec
test
cli
aaa
adc
cli
mov
jp
cli
sarb
mov
or
xchg
fs
adc
mov
jne
xor
loop
xor
adc
loopne
cmp
xchg
and
xchg
imul
inc
scas
je
loop
push
adc
mov
ror
or
xor
jmp
test
mov
mov
sbb
or
jmp
mov
out
std
mov
mov
adc
mov
std
lds
ljmp
icebp
fnstsw
cmpsb
fsubp
in
jbe
int3
in
ret
lahf
pop
shlb
lret
mov
mov
loope
into
xchg
call
test
sub
bnd
pop
push
jns
mov
or
xlat
mov
pop
jbe
imul
jmp
rcrb
jl
fcmovnbe
jp
call
std
push
cs
or
mov
jmp
in
and
bound
pop
test
xchg
fstpt
fcompp
adc
std
add
mov
bound
je
out
ljmp
adc
rolb
fisubrl
int3
js
jnp
insl
ljmp
ljmp
mov
mov
pshufw
mov
mov
adc
js
call
cmpb
pusha
leave
ficoml
ljmp
pop
shr
push
mov
jl
push
aam
frstor
xchg
ret
sarl
mov
mov
or
pop
cmp
lods
inc
enter
dec
mov
faddp
jmp
fcmovnu
adc
repnz
fcmovnu
pop
outsb
pop
mov
adc
jne,pt
jle
sub
mov
mov
in
xchg
cmp
cmp
ret
loope
fisubl
push
outsb
int
cmp
mov
mov
mov
cli
mov
mov
test
or
mov
dec
movsl
sbb
jae
push
aad
sub
jae
jno
jp
enter
int
in
adc
cmp
jmp
mov
fcmovu
cld
inc
jae
xor
or
in
mov
leave
fucomi
in
scas
jge
lea
js
fiadds
iret
cmp
in
mov
lret
fucomp
loope
mov
repz
or
pop
fstps
aad
pop
ljmp
rcl
mov
mov
out
xchg
lock
jo
mov
jnp
data16
jnp
mov
xor
insb
pushf
jae
out
pop
ljmp
push
jo
clc
mov
or
incb
loop
fsubl
cld
push
mov
shrb
int
ja
dec
jle
sbb
or
call
push
es
hlt
testl
lea
mov
into
dec
loopne
inc
inc
loop
push
faddl
clc
faddp
fcmove
or
push
fnsave
ljmp
fmuls
sbb
mov
sbb
enter
lock
not
push
fimuls
jae
fucomi
sbb
std
inc
mov
insb
inc
jns
mov
mov
insb
mov
mov
xchg
dec
cli
shlb
sub
lods
into
out
pop
test
int3
outsb
or
gs
dec
repz
cld
cmp
out
loope
mov
nop
ljmp
stos
cmpsl
repnz
mov
fcmovu
fcomps
pushf
out
mov
cmp
je
push
cld
jmp
adc
mov
inc
ljmp
rorb
movsl
popa
mov
js
in
push
ss
pushf
cmove
xor
out
xchg
lcall
mov
push
test
add
fcoms
movsl
xchg
jbe
mov
je
out
jmp
repz
ret
out
jae
call
and
into
jmp
loop
pop
jnp
test
in
xchg
jbe
sub
movups
mov
insl
divl
fsubrp
jge
cld
jmp
mov
clc
repnz
mov
lds
xchg
fstpt
jne
hlt
xchg
sub
call
push
sar
idivb
rorb
js
stc
fucomi
jae
neg
push
fimuls
or
xchg
fwait
add
push
in
stos
sbb
cmpsl
fcompl
test
fadd
jp
jae
cmp
addr16
daa
and
push
xchg
fsubrp
add
mov
mov
sub
mov
lret
or
insb
mov
push
out
mov
std
xchg
mov
mov
sbb
fnstenv
aam
mov
gs
sub
adc
cmp
add
cmp
loop
inc
stc
add
adc
pop
cmp
push
mov
xorl
push
cmp
dec
mov
push
ljmp
inc
sub
pop
cwtl
fcmovu
lds
test
je
movsl
pushf
sar
ficoms
je
push
mov
lret
mov
mov
mov
jbe
neg
clc
ljmp
test
sahf
adc
xchg
xchg
inc
rclb
sar
cmp
stos
int3
out
xor
mov
stos
fwait
ret
cli
xchg
pushf
ss
shl
sbb
jo
loop
fimull
and
je
lods
sbb
mov
fs
fiadds
jp
mov
out
cs
cwtl
xchg
loop
repz
out
rcr
sub
push
dec
pop
jle
mov
cmp
call
test
call
xchg
mov
aaa
cmp
pop
sub
loop
fimuls
pushf
rclb
cs
out
lahf
jb
pop
lods
mov
or
sbb
sbb
sahf
scas
cmp
jne
mov
jae
jl
mov
cmp
mov
or
pop
mov
add
add
cmp
or
jge
cmpl
aam
pop
inc
ljmp
or
sbb
mov
or
cli
mov
push
push
lcall
cmp
pusha
fidivrl
faddp
std
mov
mov
lret
hlt
mov
popf
sbb
adc
rcl
push
xor
fisubrs
divb
xor
mov
inc
icebp
ljmp
pop
xor
call
shl
inc
call
rolb
sarb
rolb
rolb
out
add
mov
sarb
loop
push
faddp
daa
mov
cmc
mov
mov
push
xchg
sahf
dec
data16
hlt
dec
mov
hlt
ficompl
or
test
xchg
jmp
movsb
flds
imul
pusha
sbb
inc
lcall
iret
leave
fisubrs
push
movsb
jne
aaa
pusha
cmp
push
aam
int
adc
push
xor
xchg
push
jmp
and
adc
cld
decl
push
mov
adc
mov
xor
loop
xchg
movsb
or
stc
xor
xor
call
std
jle
sub
call
out
dec
mov
shlb
mov
enter
sbb
adc
mov
popaw
pop
call
mov
lds
lcall
jl
mov
test
cwtl
andl
fmull
mov
jle
xor
data16
nop
mov
fs
xor
scas
call
cmp
push
subb
push
les
push
push
jmp
push
nop
js
enter
push
iret
mov
fnsave
mov
mov
lods
stos
fs
in
xchg
xchg
xor
jge
loope
jle
mov
mov
push
lods
mov
es
push
jnp
stos
outsb
dec
push
sub
mov
pop
faddp
mov
xor
cld
bound
loopne
dec
mov
data16
inc
stc
insb
mov
int
cld
fdivl
ljmp
xor
lock
push
inc
fmuls
lret
mov
push
out
mov
jbe
jmp
jmp
jbe
ljmp
sub
iret
sahf
or
adc
sub
fidivs
in
fsub
xchg
fidivs
jp
iret
ljmp
adc
outsl
in
mov
mov
mov
lcall
inc
js
cmp
xchg
cmp
loop
mov
sub
loope
add
push
jb
stos
loop
mov
loopne
sahf
ret
mov
push
je
mov
loopne
mov
ret
cmpsl
push
adc
mov
test
ret
adc
jge
mov
rorb
les
or
fisubl
mov
mov
jnp
pushf
add
loope
inc
in
loopne
in
outsl
mov
imul
cmp
sti
rolb
mov
jl
sbb
movsb
shl
mov
jb
xchg
fstp
push
mov
fmul
out
mov
mov
imul
lds
ret
rclb
pop
in
adc
test
pop
loopne
test
shlb
jl
out
leave
data16
lods
cli
xor
dec
ds
inc
enter
call
mov
mov
out
inc
popl
repnz
mov
push
idivb
pop
cld
mov
es
pop
mov
cmp
sbb
rol
call
les
or
out
sarb
add
mov
scas
jecxz
inc
in
xchg
fwait
and
lea
cmc
jmp
inc
es
xorb
movsl
sarb
cmpsl
xchg
ljmp
jp
repz
jecxz,pt
aam
out
jnp
test
mov
call
dec
cwtl
fisubs
dec
orl
or
or
jle
pop
push
arpl
scas
pusha
xchg
out
addr16
rolb
fiadds
je
inc
mov
mov
xchg
mov
jecxz,pn
nop
cmpsb
lds
sbb
enter
cmpsb
mov
ret
sbb
mov
enter
sub
lret
cs
out
lret
or
mov
lock
xchg
shrb
push
cmp
cmp
xchg
pusha
push
cmpsl
insl
out
mov
sbb
std
sub
and
ss
hlt
and
mov
push
pop
and
lret
out
stc
mov
inc
jns
xor
fdivl
mov
pop
bound
nop
dec
mov
mov
mov
push
cmp
call
xor
jbe
ss
fcmovu
mov
cmp
inc
jbe
mov
shlb
test
out
faddl
pusha
jmp
pushf
jbe
push
xchg
movsl
xchg
ret
sbb
push
fdivrl
movsl
fsubr
mov
jmp
mov
out
cmc
fdivr
push
shr
add
xchg
ret
add
clc
call
jl
nop
and
push
adc
cltd
ljmp
andnps
movsb
jns
aaa
mov
clc
faddp
xor
or
imul
pop
pop
cmp
pop
movsl
fdivp
sub
mov
adc
jp
mov
push
xchg
mov
inc
jnp
outsl
je
lods
jno
jb
jo
out
iret
cld
and
insl
roll
push
in
scas
adc
pop
fimull
jg
leave
pop
mov
ret
pushf
push
out
mov
sbb
cmp
int
xor
and
mov
mov
rorl
xchg
inc
sub
adc
addr16
ljmp
pop
inc
rolb
mov
stos
lods
jns
fs
and
hlt
cmpsb
add
mov
adc
fisubs
out
ficomps
jbe
cwtl
int
sub
sub
loop
dec
arpl
xchg
ds
mov
add
fimuls
fisttps
cmc
mov
rcr
inc
lock
jb
mov
pushf
fnstenv
or
and
mov
call
mov
pmuludq
mov
dec
push
push
cs
cmc
clc
xor
sbb
popf
jno
ljmp
out
in
ljmp
pop
xchg
fsubrp
ljmp
inc
mov
xor
stc
jne
mov
inc
test
add
ret
popf
in
rorb
xchg
sub
adc
push
pop
cltd
fmuls
jns
sbb
cmp
test
jp
jnp
mov
mov
mov
lds
not
shr
mov
aad
mov
in
inc
scas
ljmp
adc
sar
out
roll
ja
mov
flds
pushf
ja
pushf
std
adc
add
es
mov
dec
cmpsb
clc
fimuls
mov
pop
popa
jmp
mov
mov
rcll
ljmp
movl
pushf
lea
jmp
and
sbb
mov
xchg
lea
cmp
imul
sbb
dec
outsl
sbb
movsl
movl
cmp
push
adc
in
sbb
push
ss
scas
xor
sti
mov
jne
push
jnp
loopne
call
aas
in
data16
pop
mov
jnp
add
paddsw
jmp
jns
int
in
push
imul
repz
mov
mov
or
mov
dec
jae
jmp
mov
and
int
loope
add
inc
sbb
cmpl
push
add
cld
or
jmp
je
jae
in
out
or
adcb
ljmp
mov
mov
maxps
rclb
shll
xor
push
ret
cwtl
dec
sub
and
dec
fdivr
mov
gs
push
sbb
sub
push
insb
mov
outsb
inc
lret
insb
jle
into
xor
sub
movb
lea
call
pushf
call
lea
jne
pusha
pushf
jmp
lea
call
pusha
jmp
or
jmp
ljmp
lea
insb
loop
adc
sbb
adc
push
shll
push
imul
std
add
mov
inc
pop
rcrb
lds
dec
dec
lret
nop
mov
movsb
mov
iret
in
adc
mov
scas
stos
mov
data16
mov
iret
lret
mov
cltd
icebp
std
negl
dec
gs
pop
loop
jb
ss
insb
or
sbbl
andb
xchg
mov
add
push
test
ss
fwait
cltd
loop
pop
mov
test
sbb
cmpsl
fnsave
popf
mov
push
push
lods
mov
mov
or
fs
ss
sub
subl
pop
jg
data16
pushf
mov
lock
sub
mov
dec
movsl
jmp
sbb
clc
movl
cmp
lea
jae
jb
bt
cmp
call
add
add
push
add
push
add
xor
aam
pop
add
dec
push
add
add
add
je
outsb
jnp
mov
and
pop
lea
dec
sbbl
lods
rcl
aam
dec
and
pop
lea
cld
test
gs
movsl
mov
cltd
mov
and
mov
or
dec
jle
adc
je
jp
in
jnp
sub
test
std
jmp
imul
inc
xchg
push
mov
pop
or
mov
insb
fs
mov
in
adc
mov
out
jae
test
lret
sbb
adc
ja
xchg
cmpsl
addb
push
mov
jecxz
xor
cmp
xor
jno
test
sti
add
ds
xor
jg
jae
nop
mov
jne
ja
ja
pop
push
inc
stos
inc
ret
shl
fistpll
mov
rcr
popf
xchg
cltd
mov
or
mov
fistl
adc
sbb
lea
call
push
sub
pushf
call
mov
movl
call
pushl
pushf
lea
jne
inc
shrd
mov
clc
add
call
push
stos
movsl
jns
mov
insl
arpl
shr
daa
inc
inc
imul
jp
arpl
call
dec
cmp
out
xchg
xchg
xchg
xchg
mov
shrl
cltd
ljmp
jg
adc
shrl
lods
incb
mov
jecxz
jl
icebp
cs
shrl
mov
test
iret
stc
and
inc
es
sub
dec
pop
xor
mov
lods
stos
lret
scas
and
test
call
ja
gs
inc
inc
inc
inc
mov
popa
pop
pop
movsl
aad
sbb
clc
idivb
adc
popf
mov
jmp
stos
pop
scas
mov
sar
push
subl
or
je
cmpsl
mov
push
enter
sbb
and
xchg
sahf
cmpsb
orl
xlat
dec
mov
sbb
in
cmc
popf
imul
mov
iret
push
mov
mov
mov
xor
push
js
adc
cltd
mov
mov
and
roll
rcrb
xlat
icebp
mov
adc
cs
shl
pop
xor
mov
mov
xor
repnz
addr16
or
stos
adc
push
mov
sbb
xchg
push
cmp
inc
icebp
repz
imul
mov
jp
hlt
std
decl
aaa
mov
rcl
xchg
cwtl
push
push
repz
popa
addl
rcrl
xchg
inc
imul
lahf
dec
push
lcall
lret
push
pop
cltd
addr16
ljmp
adc
mov
mov
xchg
sub
sub
fcmovnbe
push
push
mov
pop
add
sub
stos
lret
int3
or
jge
push
cld
clc
dec
aam
jae
into
enter
dec
push
std
pop
imul
outsb
nop
xor
xor
inc
inc
sub
jg
sahf
push
sub
int
or
cmp
add
arpl
pop
pop
xchg
mov
negb
and
mov
loopne
and
dec
dec
dec
insl
insb
mov
xchg
jne
adcl
jmp
out
cmp
out
add
sub
xchg
mov
and
out
clc
outsb
outsb
mov
pop
shl
mov
inc
mov
or
testl
adc
or
lahf
ljmp
ja
xchg
xchg
sahf
push
and
push
dec
push
or
clc
adc
add
in
leave
xchg
cltd
loop
jns
popf
and
fiaddl
sub
aam
push
es
push
sbb
and
shll
pop
jecxz
sbb
in
mov
in
lahf
div
in
out
cld
sub
aaa
rorb
or
fs
xor
popf
cmp
cs
add
xor
or
xor
dec
jno
int
fmuls
arpl
mov
jmp
loop
cmp
pop
shl
pop
xchg
int3
bound
mov
fst
push
xor
mov
add
sahf
into
cmpsl
mov
xchg
add
testl
nop
mov
insl
test
icebp
xlat
pop
je
in
ljmp
sbb
aaa
xor
xor
jb
inc
insb
sbb
addb
sub
loop
mov
imul
aam
push
mov
pusha
cmp
pushf
adc
jmp
movhps
ss
push
inc
imul
lods
les
jge
mul
fs
xchg
mov
sbb
pop
cmpsb
mov
adc
out
aad
and
pop
add
clc
sbb
and
lret
jmp
fidivl
movsb
scas
jb
leave
push
call
push
cmp
divb
aaa
sbbb
mov
xor
bnd
dec
jns
mov
mov
inc
mov
scas
shr
xor
lods
pusha
cs
ds
pop
jge
inc
jp
xlat
in
roll
xchg
xchg
or
fiadds
or
cld
lret
insl
inc
adc
popa
arpl
adc
pop
ja
imul
and
xchg
enter
cmp
xor
rcrb
or
sahf
mov
lcall
roll
sti
jo
cmp
ss
push
jne
sarl
pop
sub
movsb
mov
mov
and
cltd
mov
xlat
and
jne
dec
pop
adc
out
es
enter
insb
fs
cmpb
nop
in
mov
fstp
hlt
mov
xor
jns
nop
mov
adc
stc
sti
or
adc
bound
test
mov
lret
leave
vcvtps2dq
sbb
sub
mov
ja
out
imulb
enter
xchg
mov
out
inc
push
sbbb
push
push
add
add
ret
mov
repnz
pop
push
out
fnsave
add
sbb
loop
jmp
inc
frstpm(287
in
adc
add
int
ds
adc
push
ficompl
pop
sbb
or
pop
push
fsub
in
sbb
sub
adc
and
into
out
and
mov
jmp
and
dec
pop
or
in
ret
mov
std
daa
xchg
setg
add
sbbl
push
pop
mov
sti
stc
or
test
adc
and
inc
pop
popa
xlat
push
push
sbb
ror
mov
push
sahf
mov
push
ss
adc
jmp
xchg
mov
add
xor
pushl
ret
lea
jae
jmp
str
jmp
push
lock
std
std
mov
insl
mov
inc
jno
ror
or
mov
pop
jne
xor
mov
pushf
int
jne
in
fmuls
mov
pop
int3
add
jmp
xchg
push
aaa
test
sahf
popa
shrl
add
inc
mov
in
xchg
push
xchg
fstpt
rolb
lock
rorl
jmp
push
lea
jb
stc
test
push
jmp
xchg
std
repz
add
xor
mov
inc
cmp
adc
xor
fimuls
pop
xlat
fwait
roll
xchg
addr16
xchg
xor
push
fadds
mov
push
ds
bound
sahf
popf
add
call
aad
dec
clc
stc
bts
pushf
push
add
bsr
bsr
jmp
push
movl
call
call
call
cmp
pushf
lea
je
jmp
bt
cmp
pusha
call
sti
cli
cmc
jb
mov
movsl
mov
pop
sub
dec
xchg
inc
jl
fidivs
pop
cmpl
pop
mov
stc
adc
lock
decb
cmp
dec
popf
fisttps
cs
jle
lcall
pop
pop
push
pop
xchg
xchg
stc
jbe
std
or
cmp
pusha
mov
jmp
clc
or
mov
movb
lea
jne
setae
cmp
mov
pushf
clc
pushf
or
pusha
lea
je
call
call
setp
bswap
mov
lea
sete
jmp
call
rol
call
dec
cmc
bt
neg
bt
stc
stc
bt
rol
push
add
jg
cmc
cmc
sub
pushf
cmc
stc
stc
rol
call
out
loope
or
pushf
sahf
lods
call
jns
or
outsl
stc
sbb
adc
push
loopne
sbb
sub
test
mov
sbb
jne
xor
pop
aas
faddl
and
fcoml
jmp
pop
or
int3
leave
out
pushf
or
sarb
pop
lock
push
and
jmp
mov
add
mov
lea
jp
xor
lahf
inc
pop
imul
dec
ffree
xchg
aam
insl
xchg
insl
inc
mov
jnp
hlt
and
cld
cs
test
add
popa
test
lds
cmp
push
jne
adc
inc
pop
addr16
cmpsl
fcmovnu
jmp
aaa
push
push
mov
push
jb
mov
cmc
jmp
xor
pushl
pushf
movl
push
jmp
call
lea
call
jmp
ror
clc
ror
ror
jmp
icebp
inc
inc
jno
mov
add
adc
leave
mov
push
leave
sti
andb
jno
popf
mov
mov
es
cmp
or
inc
outsb
sbb
push
or
imul
inc
push
lea
testb
inc
jb
outsb
xchg
dec
mov
mov
je
mov
adc
inc
inc
dec
push
mov
mov
dec
dec
adcb
lret
shr
sti
or
push
adc
add
mov
outsb
outsl
and
in
sub
cli
mov
jb
sbb
push
cmp
icebp
mov
fs
cmp
out
call
int3
int
xor
push
int
fadds
inc
jmp
mov
pop
addr16
pusha
and
xchg
mov
xor
xor
pop
imul
stos
pop
pop
adc
imul
mov
je
lcall
in
mov
testb
pminub
xchg
test
cmp
adc
push
inc
and
stos
mov
dec
jae
pop
push
adc
push
stos
ror
repz
aam
jle
leave
mov
push
mov
cmp
sbb
in
jmp
pop
adc
xor
fildl
andb
cmp
sysexit
adc
out
outsb
gs
sub
into
les
imul
pop
sbbl
mov
into
iret
sbb
xlat
fsubrs
lahf
add
aam
hlt
mov
push
and
das
push
add
or
and
daa
push
pop
jmp
loop
push
and
adc
pop
adc
sahf
filds
aam
mov
bndldx
mov
sbb
ror
add
add
js
outsl
gs
clc
mov
es
mov
add
insb
scas
add
mov
cltd
mov
xchg
xchg
daa
cmp
gs
out
dec
or
js
mov
mov
or
es
fcmovbe
notb
addr16
jl
std
push
fsubr
and
call
jmp
stos
and
or
mov
test
push
mov
cmc
sub
outsb
xchg
es
inc
add
push
push
pop
imul
add
pop
outsl
jg
out
pop
mov
pop
sub
lock
jmp
orb
arpl
adc
in
pop
subb
cmp
xchg
mov
mov
test
inc
std
repnz
sbb
inc
jbe
lret
lea
call
push
lea
jae
push
pusha
bt
sub
jmp
rorl
add
mov
push
and
push
out
adc
dec
dec
out
adc
lock
jb
pop
and
mov
cmc
push
add
fldl
mov
mov
or
inc
cmp
call
std
jno
cmpsl
scas
into
xchg
enter
mov
xor
arpl
push
sbb
jo
add
loopne
dec
in
idivb
inc
push
cmp
rcrl
mov
out
adc
icebp
lcall
iret
imul
sahf
mov
aas
cmp
dec
dec
xor
cmp
sbb
sub
dec
cmc
mov
mov
mov
mov
rcl
dec
ret
or
mov
in
js
pop
sub
lcall
es
lods
dec
add
pop
dec
add
sbb
movl
call
sub
stc
pusha
test
cmp
pushl
popl
stc
pusha
clc
cmp
pushf
pushf
lea
jb
ja
jmp
pop
jmp
pushf
pusha
movl
push
movl
push
pushf
pushf
lea
jmp
pusha
call
xchg
xchg
nop
insb
or
push
insl
fwait
mov
frstor
jne
inc
js
jmp
xor
add
or
add
mov
ss
xchg
sbb
aad
push
mov
mov
pop
push
repz
incl
pushf
add
mov
rclb
xor
mov
jecxz
or
dec
dec
lods
and
sbb
imul
in
lock
dec
data16
and
fisubrs
sbb
test
test
dec
lret
sbb
repz
xchg
arpl
push
xor
push
jecxz
in
mov
lods
and
imul
push
popa
push
jnp
movsl
sub
jmp
mov
push
sti
or
add
dec
jae
jg
xlat
add
inc
outsl
imul
sbb
push
xchg
dec
mov
pushl
jmp
xchg
or
stos
mov
fimuls
sub
pop
xchg
enter
mov
loop
ds
fs
push
mov
cs
cmp
mov
daa
aam
pop
imul
dec
cltd
xchg
mov
cwtl
cmpsb
gs
fs
int3
ret
adc
lahf
les
lock
pop
jno
mov
mov
stos
and
dec
dec
jp
jmp
enter
mov
add
sub
movsb
lcall
mov
cmp
test
inc
dec
fcoml
lds
lret
imul
and
sbb
sub
jl
cwtl
repnz
arpl
ds
ja
pop
or
enter
xchg
roll
mov
push
bsf
iret
xchg
xchg
xchg
xchg
cmp
ljmp
ret
mov
jae
lcall
cmc
mov
mov
mov
arpl
push
cld
mov
rolb
test
add
jo
mov
out
pushl
out
ljmp
adc
pusha
lea
jmp
rol
cmc
stc
test
xor
cmp
neg
call
pusha
movl
pushf
pushf
pushl
lea
jmp
push
lock
std
std
add
out
mov
ret
jne
push
sbb
shrb
das
imul
aaa
pop
lahf
ss
or
insl
jge
imul
ss
aam
push
ret
call
xchg
es
pop
les
pop
add
cwtl
hlt
inc
xchg
jecxz
in
xchg
push
out
in
pop
sbb
fdivs
jmp
adc
inc
call
call
jmp
call
lcall
or
and
push
js
orb
push
movsl
add
and
or
fidivs
lahf
fs
mov
enter
cmp
iret
and
xor
push
mov
adc
mov
pusha
test
das
push
or
or
ja
cmc
pushf
cmc
imul
test
mov
pusha
cmc
add
pusha
lea
jmp
pushf
movl
pusha
call
shl
movb
push
lea
je
push
jmp
cmc
dec
inc
imul
fwait
test
inc
pop
mov
bound
add
addr16
sahf
fbld
lcall
mov
popa
mov
pop
or
push
sbb
and
sub
aaa
sub
push
push
push
pop
pop
jp
loopne
mov
jmp
jo
push
data16
dec
jae
jnp
ds
std
sbb
fstpl
adc
or
fimuls
and
scas
mov
pop
sub
xor
mov
call
add
add
das
jmp
xor
or
sub
iret
fpatan
adc
pushl
repnz
xchg
out
mov
cmp
push
push
pop
mov
popf
mov
clc
cwtl
popa
ja
pop
addl
mov
sub
xor
lcall
out
mov
icebp
int3
nop
adc
lds
jbe
xor
pop
push
pop
je
push
add
pop
mov
jecxz
mov
testl
sbb
mov
jbe
sub
test
and
or
cmp
and
mov
lahf
pushf
pushl
popl
call
sar
mov
cmp
test
and
push
add
push
mov
mov
lea
jmp
pop
aad
or
jecxz
mov
pop
js
out
cltd
sub
je
push
jle
jmp
mov
dec
inc
inc
push
inc
inc
cmp
insl
lods
aad
cmp
xlat
ljmp
mov
jmp
call
xchg
sbb
cmp
scas
ret
rolb
cli
idivb
cmp
push
jns
lds
ljmp
jo
pushf
in
ljmp
xor
push
lds
pop
leave
mov
int3
cli
lock
fadd
mov
nop
movsb
mov
mov
jne
cwtl
mov
lea
rcr
loopne
clc
adc
xor
insb
insb
imul
cmp
aam
rcl
jecxz
shld
mov
cmp
call
push
mov
and
push
outsb
fs
nop
lcall
adc
push
xor
arpl
pop
pop
bound
popf
mov
xchg
scas
scas
lock
daa
in
push
xchg
lods
fists
movhps
dec
cmpl
pop
and
pop
test
push
dec
insl
xchg
shl
or
cmp
mov
movzbl
jmp
and
sbb
push
mov
ret
adc
inc
data16
outsb
imul
mov
inc
insl
jecxz
adc
sbb
mov
stos
lods
sar
push
es
mov
push
mov
xchg
scas
repz
bswap
pusha
pushf
pushf
mov
not
pop
pushf
bswap
mov
lea
mov
bswap
movsbw
bswap
pop
mov
push
pushl
ret
lea
jb
cmp
push
clc
call
neg
sbb
ljmp
xchg
loopne
pop
repz
pushl
mov
pushf
lea
mov
pushf
pop
setbe
lea
pushf
jmp
movl
call
mov
lea
je
shrd
rol
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sbb
sub
dec
pop
sbbl
arpl
or
call
aam
push
lea
mov
inc
adc
xchg
adc
cld
mov
je
dec
xchg
dec
fwait
mov
jmp
out
sti
push
jo
add
xor
bound
xchg
pop
mov
mov
jne
sub
xor
mov
int3
loopne
add
je
mov
mov
ss
lcall
and
sub
subb
icebp
mov
pop
and
icebp
out
fldcw
mov
lahf
and
fisubrl
push
int3
mov
pop
xchg
jns
xchg
cmpsl
mov
rcl
lock
cmp
lahf
add
jnp
nop
out
jg
test
mov
int
inc
push
out
push
aam
dec
dec
push
je
stc
push
repnz
stos
out
leave
lea
and
or
and
cmp
mov
imul
cmp
dec
gs
cltd
mov
push
ljmp
dec
cld
decl
mov
shlb
inc
dec
pop
pushf
call
bt
mov
clc
add
test
test
movw
lea
jne
push
call
mov
arpl
mov
lods
mov
xor
mov
mov
out
stc
outsb
js
mov
aam
or
sbb
sub
dec
xchg
insl
insb
mov
cmp
gs
stos
sar
rcr
mov
and
push
fdiv
mov
push
push
xchg
mov
jl
adc
xchg
bound
mov
outsl
jno
mov
mov
mov
fs
xchg
or
jecxz
xchg
mov
push
outsb
data16
sbb
pop
jno
push
dec
pop
xrstor
lahf
sti
jmp
pop
and
or
push
mov
sarl
loope
mov
ret
rclb
sub
dec
or
flds
test
out
cld
es
mull
jns
fistpll
lock
ret
mov
mov
lods
int3
int3
adc
mov
hlt
cmp
and
jecxz
fs
je
push
adc
pusha
pushf
lea
jmp
push
movl
pushl
push
mov
push
lea
jmp
pusha
pusha
call
pushf
call
push
pushf
xchg
cwtl
cwtl
movzbw
lahf
pushl
popl
pushf
lea
movzbl
mov
cwtl
cwtl
movl
mov
lea
call
pusha
call
dec
inc
inc
bound
mov
out
add
xor
pusha
bound
xchg
pop
jle
and
out
and
leave
fsubrl
mov
sbb
jns
cmpsb
paddd
add
cmpsb
mov
jb
mov
scas
and
ret
jmp
nop
cld
mov
sbb
mov
fisttpl
and
xchg
stos
iret
and
cli
leave
das
pushf
lcall
bound
mov
mov
and
es
mov
cmpsl
pop
push
ja
cmpsb
push
fldl
lret
or
mov
inc
or
inc
leave
fists
into
xchg
bound
mov
pusha
jo
sarb
dec
cmp
sub
or
push
push
dec
jo
insb
xorb
pop
jge
cwtl
mov
imul
mov
xchg
push
jne
out
xor
hlt
div
aaa
jge,pn
mov
adc
and
push
stos
lret
sti
daa
dec
movsb
or
test
adc
loop
lea
jae
not
mov
call
jmp
call
lea
je
setb
call
jmp
pushf
jmp
mov
call
push
jmp
pushf
movl
push
call
lea
ja
shl
inc
jmp
not
movl
jmp
jne
gs
xor
fs
insb
add
xor
movl
mov
pushf
pushf
lea
jmp
jl
scas
pusha
or
lea
sbb
inc
push
adc
pop
dec
inc
mov
push
jbe
adc
pop
xor
xor
cmpl
mov
fwait
xchg
pop
pusha
jle
mov
pop
jb
scas
loop
test
mov
std
cld
cli
adc
in
cmc
rol
stc
cmc
cmc
pushf
sub
pusha
call
pushf
lea
je
push
pushf
test
add
jmp
push
movl
pusha
pushf
push
movl
mov
pushf
lea
jmp
mov
mov
pop
sbb
dec
es
daa
jnp
adc
sti
mov
sbb
push
fadd
shll
insb
bound
pop
ja
jnp
sbb
push
inc
je
sbb
clc
imul
fucom
pop
sub
cmc
call
xchg
pop
and
dec
and
insb
sbbb
lcall
xor
mov
jg
mov
aas
popf
iret
cwtl
sbb
fsubr
cld
sub
push
je
ror
inc
pop
cs
ds
xchg
adc
les
cmc
cwtl
mov
movzbw
xchg
xchg
setle
pop
xchg
xchg
lea
seto
pop
movsbw
pop
pusha
mov
mov
bswap
pusha
movzbw
mov
pusha
push
mov
movw
pushl
ret
loopne
xor
mov
cltd
stos
movsl
sar
out
in
sti
sbb
lahf
js
pop
or
imul
ljmp
pop
sbb
out
icebp
inc
pop
call
hlt
sub
mov
cmp
in
adc
jns
movsl
faddl
std
push
push
mov
movw
pushl
inc
pusha
ror
pushf
call
call
cmp
not
call
pushf
pusha
call
jmp
mov
call
push
pusha
pushl
call
lea
jne
mov
pusha
mov
movb
lea
jmp
movzbl
clc
mov
and
mov
stc
cmc
cmc
clc
add
pusha
lea
jmp
jmp
pusha
call
call
mov
repz
popl
push
call
xor
xor
mov
call
mov
sub
movw
mov
mov
movl
mov
lea
jmp
cmc
add
jmp
cmp
xor
call
pushf
mov
bswap
lea
pushf
mov
movb
push
movb
lea
cpuid
stc
cmc
pushf
sub
pusha
cmpl
call
pushf
popl
pushf
pusha
movl
pusha
pushl
popl
movb
lea
jmp
mov
pusha
pusha
pushf
pushl
ret
call
xor
pushl
call
btc
xor
movsbw
bt
rcr
neg
neg
stc
and
mov
mov
bt
call
add
pusha
pushl
pusha
lea
jmp
push
pusha
mov
pushl
repz
popl
call
call
cmc
rol
clc
movb
cmc
pusha
xor
clc
stc
pushf
sub
movb
cmc
jmp
add
das
mov
bt
cmp
clc
sub
push
not
pusha
jmp
pushf
call
movb
mov
jmp
cmp
stc
pusha
shr
pusha
push
mov
push
pushf
popl
call
mov
call
mov
pushf
movw
lea
jmp
jmp
shrd
stc
mov
shrd
bts
mov
add
lahf
adc
mov
movzbl
pushf
neg
sub
mov
push
rcl
mov
bsr
pushf
mov
movb
call
daa
aad
lea
push
pushl
push
cmp
push
jmp
mov
pushf
popl
jmp
push
pushf
popl
pusha
pusha
pushl
popl
pushf
lea
jmp
not
pop
not
inc
jmp
stc
cmp
btr
bts
mov
rcr
mov
push
pusha
add
call
pusha
inc
cmp
movsbw
mov
jmp
mov
xchg
shrd
add
or
mov
rol
btc
or
add
bts
shld
and
sub
push
bswap
inc
pushf
jmp
cmc
clc
cwtl
call
call
pushl
popl
pusha
call
movzbl
mov
pusha
lea
call
call
mov
pushf
lea
jmp
jmp
jmp
xorb
lea
mov
lea
call
pushf
pusha
sub
bt
shl
jmp
call
pushf
jmp
add
jmp
mov
call
pusha
mov
push
pushl
push
lea
jmp
neg
push
stc
xor
clc
cmp
mov
push
pushf
sub
pushf
pushf
push
pushf
inc
pushf
call
repz
popl
pushl
pushl
jmp
repz
popl
pushf
call
mov
push
call
sbb
movzbl
call
ror
pusha
clc
clc
stc
lea
pushl
pushf
cmc
test
add
cmp
sub
mov
mov
movw
pushf
lea
jmp
repz
popl
push
pushf
jmp
add
sbb
dec
mov
cmp
cmc
pusha
stc
add
pusha
push
lea
jmp
bsr
mov
pusha
rcl
mov
pushf
push
stc
add
push
mov
mov
push
pushf
mov
lea
jmp
mov
pushf
push
movb
movb
lea
jmp
jmp
mov
movw
push
push
pusha
lea
jmp
dec
movb
cmc
xor
stc
clc
rol
jmp
mov
pushf
movb
push
push
lea
jmp
sub
pushf
cwtl
stc
pusha
cmp
cmc
sub
jmp
mov
jmp
call
inc
stc
pushf
jmp
mov
pushl
pushf
lea
jne
pushf
xor
pusha
xchg
mov
movl
pushf
movb
pusha
mov
mov
pushf
pushl
ret
mov
pushf
lea
jmp
stc
call
sub
jmp
mov
pusha
push
pushf
call
shl
mov
push
test
pusha
lea
jle
sub
jmp
call
pushl
popl
push
lea
jmp
movb
pushl
mov
push
call
sub
movw
lea
jmp
call
bts
add
not
movzbl
mov
mov
push
pushl
pusha
inc
clc
push
add
pushf
jmp
push
jmp
not
call
dec
call
sub
call
bsf
shld
cmp
jge
mov
bt
cmp
add
pushf
pushf
pushf
pusha
lea
jmp
rcl
sub
dec
bts
mov
add
neg
jmp
call
push
pushl
mov
pushl
mov
movl
pushf
push
lea
jmp
pushf
jmp
add
sbb
rol
mov
adc
test
sub
mov
pusha
pusha
add
mov
jmp
pusha
pushf
mov
jmp
jmp
pusha
pushl
mov
jmp
pusha
mov
call
push
jmp
rol
rcl
mov
clc
cmp
cmp
add
pushf
lea
jmp
pusha
call
call
inc
pushl
decl
movb
lea
jne
pushf
jmp
test
shr
mov
pushf
movb
mov
mov
jmp
jmp
mov
pushf
push
pushf
pushl
add
jmp
mov
mov
jmp
xchg
rol
xchg
xchg
mov
bswap
rol
push
bt
mov
lea
movsbl
push
jmp
push
mov
movb
mov
movb
call
shl
lahf
lahf
sar
mov
clc
rcr
sar
mov
cmc
push
cmp
sub
jmp
cwtl
not
mov
mov
pushf
pushf
pushf
push
mov
call
jmp
lea
jl
inc
jmp
setbe
mov
call
movl
push
mov
call
and
pop
add
or
jae
pop
add
add
and
pop
add
lcall
jae
pop
add
out
pop
add
pop
add
add
add
pop
add
add
add
push
pop
add
cli
pop
add
push
pop
add
pop
add
push
pop
add
pop
add
repz
add
pop
add
pop
pop
add
lock
add
pop
add
pop
add
std
pop
add
pop
add
add
add
lock
add
cli
pop
add
add
add
cld
pop
add
pop
add
add
add
in
pop
add
lcall
popa
lcall
lods
add
add
pop
add
hlt
pop
add
lock
add
add
add
pop
add
pop
add
add
jno
pop
add
lcall
and
pop
add
pop
add
lcall
loopne
pop
add
hlt
pop
add
out
pop
add
hlt
pop
add
repnz
add
lcall
fldl
pop
add
add
add
lcall
and
pop
add
pop
add
pop
add
out
pop
add
push
pop
add
cld
pop
add
pop
pop
add
add
add
pop
add
pop
add
pop
add
or
add
pop
add
hlt
pop
add
pop
add
pop
add
pop
pop
add
repz
add
pop
add
add
lcall
in
pop
pop
add
lock
add
lcall
loopne
pop
add
cld
pop
add
pop
add
pop
add
lcall
add
pop
add
cld
pop
add
in
pop
add
pop
add
cli
pop
add
cli
pop
add
std
pop
add
or
popa
lcall
popa
lcall
fldl
pop
add
lcall
dec
repnz
add
add
jno
pop
add
cli
pop
add
add
add
popa
lcall
cs
pop
add
in
pop
add
pop
add
lcall
cs
pop
add
pop
add
push
pop
add
pop
add
or
sbb
pop
pop
add
pop
add
out
pop
add
out
pop
add
pop
add
add
cs
pop
add
in
pop
add
add
rolb
pop
add
add
imul
pop
add
or
add
push
pop
add
lcall
cmpsb
sti
pop
add
pop
add
out
pop
add
lcall
int
pop
add
pop
add
add
add
pop
add
pop
add
pop
add
or
sbb
pop
pop
add
pop
add
std
pop
add
pop
add
push
pop
add
add
add
pop
add
pop
add
pop
add
pop
add
repnz
add
pop
add
lcall
jno
pop
add
pop
add
add
mov
add
out
push
pop
add
cli
pop
add
add
add
sbb
repz
add
in
pop
add
pop
add
pop
add
or
jge
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
and
pop
add
lcall
jae
pop
add
add
and
pop
add
pop
add
pop
add
add
pop
add
hlt
pop
add
pop
add
out
pop
add
pop
add
push
pop
add
pop
add
repz
add
pop
add
out
pop
add
pop
add
lock
add
pop
add
lcall
jae
pop
add
in
pop
add
pop
add
lcall
jae
pop
add
cld
pop
add
pop
add
add
jae
pop
add
repnz
add
pop
add
or
add
pop
add
in
pop
add
pop
add
push
pop
add
pop
add
repz
add
lcall
xor
pop
add
pop
add
add
add
or
push
jmp
adc
call
pusha
movb
movw
mov
push
movw
call
mov
pushl
jmp
movb
movb
lea
jne
shr
sar
call
bt
add
pusha
pusha
push
pushf
popl
mov
movw
push
jmp
call
mov
stc
jmp
movl
pushf
popl
jmp
pushf
call
movb
pushl
popl
mov
mov
movb
mov
lea
jmp
call
clc
add
call
movb
pushl
popl
pusha
push
pushf
pushf
lea
jmp
pushl
popl
pushl
push
lea
jmp
sub
clc
bt
and
pushl
lea
ja
pushf
push
mov
jmp
pushl
mov
movb
movl
pushf
lea
jmp
call
mov
push
pushf
lea
jmp
pushf
lea
ja
aam
dec
mov
btr
clc
lea
neg
pusha
pushf
sar
sub
inc
lea
sar
rcl
inc
and
btc
bts
adc
sub
movsbl
pusha
mov
bswap
movsbw
movsbw
pushf
cld
push
call
mov
lea
jmp
jmp
mov
inc
movzbl
clc
add
test
bt
add
bt
clc
pushf
ror
stc
test
stc
movb
sub
pusha
add
clc
mov
push
sub
lea
jge
pusha
push
inc
pushf
mov
pushl
mov
lea
jmp
movb
pushf
popl
pushf
pushl
popl
mov
movw
lea
jmp
pushf
push
mov
push
mov
movw
lea
jmp
call
clc
ror
aad
mov
test
pusha
cmp
cmc
sub
call
push
pusha
pushf
mov
pushf
lea
jmp
pushl
mov
pushf
pushf
mov
lea
jne
stc
push
ror
mov
pusha
cmp
test
and
test
cmp
cmp
jmp
mov
pushf
lea
jmp
not
sbb
cmp
sub
call
push
pushf
mov
pusha
pushf
lea
jmp
mov
movb
push
mov
jmp
mov
movb
pushf
push
lea
jmp
add
cmp
pushl
popf
pushl
pushl
pushf
lea
jmp
mov
mov
lea
jmp
not
shrd
clc
cmp
mov
rcr
pushf
shld
add
and
or
add
cmc
ror
movsbw
bt
shld
sub
bts
add
setbe
pusha
mov
pushf
call
push
mov
pushf
pushf
pushf
pushf
pushl
ret
mov
push
mov
lea
jmp
pushl
pushf
popl
mov
pushl
popl
pushf
push
lea
jmp
mov
call
call
bswap
mov
bt
bts
mov
stc
jmp
push
pushl
popl
push
pushl
push
lea
jmp
cmp
neg
cmp
sar
mov
sar
add
setp
mov
stc
stc
cmc
bt
sub
bt
cmp
cmc
shl
push
jmp
jmp
lea
jns
pusha
movb
mov
pusha
jmp
push
push
pushf
mov
pushf
call
cmp
bt
sub
pushf
mov
push
mov
movb
pushf
mov
pushl
lea
jmp
bt
cmp
add
call
mov
pushf
mov
push
mov
movb
push
lea
jmp
pusha
pushl
popl
mov
movb
lea
jmp
push
repz
popl
call
cmp
call
mov
shl
mov
jmp
call
pusha
dec
pushf
lea
jne
push
not
cmp
add
test
cmp
clc
pusha
sub
push
movb
cwtl
pushf
call
jmp
pushl
popl
movw
mov
mov
movb
lea
jmp
shr
mov
and
shld
pop
shl
shl
pop
ror
pop
cld
lea
aad
pop
sub
call
pushl
popl
push
movl
movl
lea
jmp
call
cmc
cmp
or
pusha
push
pushf
call
xchg
shl
bt
mov
shl
mov
stc
sub
jmp
movw
sub
stc
cmp
shl
jmp
pushf
push
pushf
popl
movw
pushl
popl
pushf
mov
lea
jmp
call
mov
mov
push
push
mov
pushf
popl
call
call
push
jmp
xor
stc
rol
clc
pushf
xor
clc
cbtw
movw
cmp
cwtl
cmp
stc
clc
sub
pushf
mov
call
pusha
shr
jmp
pusha
xchg
call
mov
pusha
pushf
pushf
lea
jmp
dec
shl
movzbl
jmp
jmp
bswap
pushf
mov
pushf
bswap
lahf
mov
jmp
shl
dec
mov
clc
add
call
shl
shl
ror
movsbw
mov
pushf
cmc
add
jmp
pushf
jmp
sub
jmp
jmp
dec
bt
not
mov
pusha
push
jmp
bswap
neg
sar
call
pusha
dec
cmc
not
mov
stc
stc
movb
sub
bt
stc
cmp
sub
pushf
call
mov
lea
jbe
push
call
call
call
mov
pushf
call
test
xor
call
pusha
clc
shrd
jmp
pusha
jmp
mov
mov
clc
add
pushf
lea
jmp
bswap
mov
test
cmc
jmp
lea
pusha
seto
jmp
clc
inc
xadd
aas
mov
bsf
mov
bt
not
cmp
not
stc
and
jmp
neg
mov
inc
ror
xor
dec
setne
sets
inc
not
sets
movsbw
dec
neg
xor
stc
pop
rol
btr
xor
ror
movzbl
jmp
pusha
pushf
push
jmp
mov
pushf
push
call
add
pusha
mov
jmp
mov
pushf
mov
call
pushf
jmp
clc
pusha
mov
clc
call
pusha
push
movb
repz
popl
jmp
push
rcl
mov
jmp
mov
call
pushf
repz
popl
jmp
movsbw
mov
btc
bswap
btr
ror
xadd
pop
inc
add
rol
lea
shld
jmp
mov
call
add
cmc
pushf
test
call
mov
call
mov
call
mov
call
pushl
popl
movb
pushf
push
push
lea
jmp
pusha
repz
popl
call
add
pusha
clc
jmp
xchg
pusha
mov
movw
call
std
cld
call
mov
pushf
mov
mov
pusha
lea
jmp
mov
push
pusha
push
jmp
push
jmp
mov
pushf
lea
jmp
pusha
mov
call
push
call
mov
jmp
mov
mov
movb
movw
movl
lea
jmp
movb
mov
movl
pushf
pushl
lea
jmp
sub
call
bt
or
pushf
stc
stc
xor
jmp
mov
pushf
jmp
lea
jae
push
pushf
popl
jmp
adc
not
sub
bsr
mov
push
lea
cmc
pushf
cmc
cmp
sub
jmp
mov
pushl
popl
push
lea
jmp
pusha
mov
pushf
mov
push
mov
pushf
lea
jmp
sar
mov
jmp
push
mov
mov
repz
popl
call
mov
pushf
push
movb
pushf
lea
jmp
pushf
popl
push
call
btc
stc
mov
pusha
pushl
pusha
clc
sub
pushf
add
movw
pushf
mov
pushf
popl
push
mov
pushf
pushl
popl
mov
movw
lea
jmp
pusha
lea
jge
pusha
pushl
popl
pushf
mov
push
lea
jmp
pusha
mov
push
mov
pushf
mov
movb
mov
pushf
movw
lea
jmp
call
pushf
mov
jmp
pushf
call
movzbw
mov
jmp
mov
movb
pushf
pushl
pushl
lea
jmp
test
not
notl
setge
xor
pusha
mov
pushf
sub
call
divl
lea
jl
mov
jmp
test
mov
setnp
mov
or
pusha
bt
mov
pushf
push
cmc
add
bt
shld
push
mov
jmp
jmp
mov
pushf
pushl
mov
push
lea
jmp
call
btr
bsr
mov
jmp
bsf
mov
push
clc
call
jmp
mov
cmp
add
push
mov
pusha
pushf
lea
jmp
call
shrd
aad
movsbw
mov
cmp
push
add
call
mov
push
jmp
pushf
mov
mov
movb
pushl
ret
add
mov
not
add
sbb
sub
mov
pusha
pusha
call
pushf
pusha
call
push
push
inc
mov
lea
jmp
mov
pushl
pushl
lea
lea
jge
mov
pusha
lea
jmp
jmp
jmp
repz
popl
pushf
mov
movb
call
lea
js
pushf
call
pushf
popl
movb
movb
pushl
popl
movb
lea
jmp
jmp
call
jmp
pushf
sub
movw
lea
jne
test
bt
sub
pushf
jmp
call
pushf
not
clc
call
movl
mov
push
pushf
lea
jmp
cmp
mov
stc
cmc
stc
add
pushf
mov
pusha
push
lea
jmp
cbtw
jmp
jmp
bsr
btr
mov
not
shl
ror
test
mov
pushf
cmc
pushf
add
pushl
movb
mov
movb
pushf
mov
lea
jmp
mov
pushf
mov
mov
mov
pushf
movb
lea
jmp
pushf
mov
pushf
mov
movb
pusha
push
mov
lea
jmp
mov
movw
push
add
jmp
and
jmp
rcl
bsf
mov
rol
adc
rcl
test
mov
cmc
call
call
mov
call
ror
btr
mov
bt
add
push
push
movw
lea
jmp
jmp
shl
neg
bsf
mov
shld
rcr
shr
call
pushf
clc
xor
lea
jg
dec
pusha
xor
call
setb
pushf
mov
ror
btr
shl
add
or
sbb
clc
xor
add
ror
mov
bt
pusha
pushf
pusha
shl
pushf
cmc
cmp
cmp
shr
cmc
jmp
pushf
mov
push
xor
jmp
pushl
popl
movb
pushl
lea
jmp
setne
aam
stc
neg
mov
test
mov
test
cmc
add
jmp
pushf
mov
movl
push
lea
jmp
sbb
neg
mov
call
jmp
pushl
popl
mov
pusha
push
pushf
lea
jmp
shrd
rcl
xchg
xchg
mov
rcl
sub
or
xor
ror
add
not
adc
dec
xor
bswap
movsbw
shl
neg
bswap
or
btr
xor
bt
movsbw
xor
mov
call
stc
push
rcl
push
cmc
push
pusha
bts
movzbw
pushl
popl
ror
movl
bt
lea
jmp
dec
bt
cmp
cmp
xor
clc
pusha
call
pushf
jmp
pusha
mov
push
pushf
pushf
jmp
call
mov
movw
movw
pushf
push
lea
jmp
pushf
movb
pusha
mov
pushf
mov
pushf
pushl
mov
pushl
pushl
pushf
lea
jmp
not
call
pushl
popl
push
lea
jmp
jmp
bswap
test
mov
sub
mov
test
add
mov
cmc
js
sub
pushf
shl
mov
mov
pushf
pusha
jmp
movb
sub
call
mov
push
pushf
push
lea
jmp
pushf
popl
push
jmp
pushf
pushf
pushf
popl
pusha
pushf
lea
js
pushf
pushl
popl
pusha
pushl
push
lea
jmp
jmp
push
push
mov
movb
mov
pushf
movb
lea
jmp
add
add
mov
shl
sar
add
jmp
aad
mov
test
add
test
xor
push
pushl
dec
bt
jmp
pushl
popl
push
lea
jmp
call
cmp
mov
add
jp
bt
cmp
or
pushf
mov
lea
je
cmp
pushf
sub
cmp
xchg
clc
test
test
cmc
mov
pushf
clc
cmc
sub
jmp
lea
je
clc
push
xor
pusha
test
xchg
cmc
jmp
pushf
popl
call
pushf
popl
jmp
push
bts
shld
sub
rcr
xor
test
btc
clc
bswap
neg
bswap
setg
and
pushf
and
movsbw
shrd
call
push
pushf
popl
pushl
mov
call
pushl
popf
pushl
pushf
pushl
ret
pusha
push
mov
pushf
pushl
pushf
pushf
lea
jmp
call
pusha
mov
push
jmp
pusha
pushf
inc
call
pushf
pushf
call
or
inc
mov
pusha
pushl
add
pusha
pushl
pushf
pushf
lea
jmp
pushf
cmp
pusha
sub
movb
mov
pushf
lea
jmp
pushf
rep
mov
mov
movsbw
mov
call
movzbl
lea
pusha
jmp
mov
pushf
mov
mov
mov
jmp
push
mov
jmp
cmc
mov
cld
pushl
popf
movb
mov
movb
mov
lea
jmp
pushl
pushf
popl
lea
jns
pushf
pushf
pusha
pushl
popl
push
movb
lea
jmp
rcr
bsr
daa
mov
pushf
bts
sub
mov
clc
add
pushl
pushl
push
mov
pusha
mov
pushf
pushl
lea
jmp
setp
inc
aam
xadd
mov
shl
bsf
dec
mov
bt
call
inc
bsf
rdtsc
stc
jmp
jmp
movw
mov
pusha
mov
call
call
jmp
pushf
mov
jmp
call
pusha
pushf
mov
push
mov
push
movb
pushf
lea
jmp
jmp
mov
call
pushf
pushf
pushf
inc
pushf
mov
pushf
pushf
pushl
lea
jmp
pushf
mov
jmp
pusha
add
pushf
pushf
push
push
lea
jmp
mov
pushf
lea
jmp
pusha
clc
rol
stc
xor
stc
push
cmc
sub
stc
stc
cmp
movb
mov
cmc
sub
pushf
pushl
movb
lea
jmp
add
pusha
lea
jmp
