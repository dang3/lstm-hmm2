push
call
ret
ret
dec
adc
and
out
ss
lret
ljmp
pop
or
clc
jmp
mov
lock
pop
pop
add
mov
adc
xorb
int3
pop
aad
bound
in
loope
add
mov
pop
prefetchwt1
mov
fs
rcrl
cwtl
xor
loop
lods
inc
sbb
aaa
push
rdmsr
cld
sub
pop
push
mov
jg
push
das
not
add
das
iret
stos
pop
call
filds
std
mov
xchg
int
pop
popf
mov
mov
mov
mov
stc
adc
lea
rolb
xor
repnz
adc
test
out
xchg
cmp
jne
icebp
and
imul
jae
in
add
mov
push
xchg
subb
and
scas
imul
xor
mov
cmp
pusha
test
popf
lods
mov
mov
sub
sarl
push
xchg
sbb
mov
pop
or
sbb
or
js
and
cmp
into
in
adc
pop
adc
orb
pop
and
jg
out
nop
fisubrl
ds
and
mov
cmc
push
leave
clc
ds
ljmp
push
push
in
dec
sbb
std
and
pop
jns
xchg
mov
out
in
loopne
jp
stos
jne
enter
dec
sbb
fildl
inc
pushf
sbb
ljmp
jo
popa
psllw
mov
sub
iret
push
je
popf
sub
sbb
ds
xchg
shlb
jb
and
loope
xchg
data16
fwait
mov
xchg
push
bound
push
test
xchg
xor
cmpsl
xor
sbb
pusha
cmp
push
dec
and
mov
into
pop
push
popa
dec
cld
jl
outsb
fcmovu
enter
ljmp
jnp
sub
ror
pop
mov
shlb
neg
scas
push
pop
push
loop
test
movsb
aaa
or
cmp
ja
xchg
add
mov
pop
jno
int
push
out
cltd
add
out
int3
xchg
aaa
dec
xchg
mov
ja
adc
jne
adc
jge
mov
clc
jno
xor
imulb
fmull
mov
fisubrs
mov
dec
xchg
negl
add
iret
rorb
xor
aad
out
shll
jno
pushf
inc
adc
repz
sub
lods
jb
or
dec
bound
mov
add
cmpsl
sbb
addb
jno
dec
scas
mov
jl
xchg
cmp
push
outsl
xchg
call
mov
dec
or
mov
scas
push
in
adc
xlat
test
push
sbb
xor
dec
sub
aam
mov
je
push
pushf
loop
icebp
mov
stos
in
mov
ss
or
cld
in
dec
into
xchg
xor
push
adc
mov
test
sahf
sub
dec
loop
movsb
dec
decl
ret
or
and
por
bound
jbe
ja
mov
je
xchg
push
push
ficoml
dec
jmp
push
inc
push
adc
shll
inc
into
out
add
jo
xor
dec
loop
mov
and
imul
inc
xchg
dec
test
rcll
scas
aad
dec
mov
mov
and
jecxz
out
adc
popa
sub
cmpsl
notl
jns
mov
sbb
jmp
fsubs
or
cltd
aad
xchg
push
cld
and
cmp
leave
das
sbb
cmc
sub
or
loope
jge
sub
add
cmpsl
push
add
in
jb
mov
mov
jecxz
cli
hlt
push
push
std
scas
ffreep
int
mov
dec
dec
jge
mov
jnp
ds
push
push
call
stos
adc
jne
loope
adc
stos
mov
xor
fdivr
cmp
or
outsb
sub
js
push
add
in
mov
cltd
cltd
clc
xlat
scas
pop
xchg
cmp
dec
sub
jo
jb
test
es
decl
or
enter
xchg
out
rclb
cmpsb
inc
icebp
imul
push
jecxz
mov
add
push
xorl
dec
push
push
sbb
aam
push
fsubrs
out
jnp
mov
and
loope
jmp
xchg
frstor
arpl
jnp
or
arpl
es
sahf
repnz
pop
repnz
pop
das
mov
fucomip
aaa
mov
sub
xchg
xor
pop
sbb
cwtl
mov
lods
adc
ret
push
dec
sbb
push
adc
in
fildll
sub
rorb
cltd
or
in
xchg
cmp
inc
fcoml
pop
jnp
push
aaa
fidivrs
cltd
inc
sahf
mov
in
mov
and
aaa
or
das
ja
mov
das
movsl
gs
inc
mov
jge
das
das
dec
mov
popa
mov
mov
cld
cmp
jge
leave
push
stos
inc
push
mov
dec
ret
fwait
cmp
push
xchg
xchg
imul
lahf
ror
mov
jne
pop
cmp
or
dec
push
push
pop
imul
lds
or
lds
push
pop
fdivrs
loop
sub
pop
or
jmp
test
or
jne
xorb
call
xchg
and
outsb
sti
push
pushf
push
xor
mov
je
push
push
aaa
jge
fstl
inc
mov
mov
inc
push
je
shrl
jbe
xchg
or
test
in
inc
repnz
jns
fisttpl
jmp
int3
dec
xor
hlt
cli
dec
jbe
dec
mov
sbb
nop
mov
sbb
clc
fwait
movsb
mov
jae
jae
mov
pop
xorl
jno
mov
jbe
cli
mov
mov
mov
push
sbb
mov
and
xchg
std
dec
in
mov
scas
fistpll
pop
jbe
ret
in
pop
fucom
and
cli
xchg
xchg
sbb
mov
enter
cmpsb
nop
inc
out
mov
mov
push
pop
imul
ss
pop
mov
aam
int
gs
in
test
push
repnz
insl
imul
push
sub
arpl
xchg
and
stc
std
inc
aam
ret
mov
loope
lods
addl
repz
lret
xor
aaa
add
inc
push
lcall
cli
push
je
js
lea
or
jno
sbb
ds
test
and
sahf
pusha
fnstsw
jle
loop
sub
jbe
shrb
iret
lock
sub
and
mov
in
std
ja
xor
mov
addb
ds
mov
cwtl
jno
imul
pop
xor
xchg
inc
js
pusha
xor
or
add
aaa
repz
ret
add
xchg
mov
xor
pop
xchg
in
cmc
sub
sub
pop
lods
mov
sub
xchg
ret
mov
adc
repz
inc
shll
push
mov
sti
pusha
jnp
fldenv
addl
hlt
int
imul
mov
popf
std
lea
bnd
pop
mov
jmp
jno
inc
lods
lcall
add
push
int3
mov
cmp
or
out
mov
dec
dec
cltd
cli
pop
pop
push
andl
mov
sarl
cmp
pop
xor
cmp
rolb
and
sub
push
cwtl
cmpsl
lods
xor
pop
dec
dec
xor
mov
rclb
cmp
lds
push
xchg
int
in
out
xor
lds
dec
stc
out
mov
addl
fiaddl
sahf
daa
dec
fdivr
inc
dec
dec
mov
xchg
dec
ds
add
test
popf
sub
lret
out
fdivl
cld
pop
sub
xor
movsb
mov
mov
cwtl
not
leave
ss
dec
xchg
push
stos
into
sub
sbb
or
stos
pushw
xchg
add
inc
shll
xchg
ljmp
mov
imul
jge
dec
lds
pop
mov
push
hlt
pop
or
es
mov
cmp
pop
stos
mov
je
ljmp
lock
xchg
sti
mov
or
out
aas
lds
and
insl
adc
fidivs
sbb
loopne
cwtl
not
sahf
mov
mov
movsb
ss
inc
xchg
js
cli
mov
or
test
jge
mov
js
and
jge
xor
sub
sub
stc
inc
adc
mov
sub
bound
and
leave
add
popa
mov
or
out
inc
pushf
sbb
clc
shll
leave
dec
xchg
mov
enter
mov
mov
adc
insb
xor
insb
ror
lret
sahf
mov
push
and
outsb
jl
cmp
nop
sbb
inc
or
mov
adc
bound
repnz
adcl
stc
mov
in
mov
mov
fs
add
das
and
push
xor
sbb
repnz
jg
push
jle
insl
inc
inc
mov
out
mov
cmpb
or
and
pop
rorl
xchg
xchg
mov
jge
pop
jo
cmp
push
out
dec
mov
or
mov
adc
pop
imul
outsb
enter
lret
pop
and
jb
rorb
cmp
in
jae
mov
ficomps
jmp
pop
sub
xorb
repnz
push
sbb
mov
cltd
aaa
lea
cmpl
mov
fmulp
cmpsb
sub
popa
addl
arpl
lds
jmp
pop
sbb
mov
insl
shl
jecxz
int3
xchg
pusha
dec
or
xor
aam
pop
jbe
push
pop
cmp
sub
adcl
inc
mov
int3
jecxz
pop
push
push
mov
fiadds
bound
notl
xchg
ret
imul
jae
out
out
pusha
and
nop
inc
dec
dec
inc
xchg
shll
dec
cmp
mov
pop
stc
call
lea
negb
out
mov
loope
mov
push
pop
mov
xor
adc
sub
enter
jnp
addl
int
cltd
jno
push
in
loop
rcrl
daa
lods
out
pop
hlt
fidivl
xchg
mov
iret
lods
adc
jg
stc
sub
nop
dec
in
add
add
push
sbb
mov
mov
ljmp
xchg
jo
movsl
icebp
call
movsb
fisttps
lods
imulb
pop
add
decb
pop
cs
mov
push
test
data16
mov
sub
test
xchg
pop
sti
cmc
bound
push
and
shrb
stc
mov
cli
stc
and
js,pn
push
das
rdseed
and
xchg
mov
pop
ret
movsl
jg
lcall
adc
les
mov
jge
out
add
sub
and
rcl
fidivrs
sub
xchg
shll
into
push
lods
cmpsb
push
push
out
dec
mov
xor
mov
aas
push
leave
lods
mov
aaa
inc
leavew
xor
lock
push
sub
sbb
jns
ret
xchg
add
mov
pop
cmp
ds
dec
push
cs
int3
stc
loop
fstl
in
cmp
jecxz
fnsave
nop
mov
xchg
clc
pop
push
inc
negl
mov
loope
xchg
jl
xchg
jmp
adc
sbbb
add
add
push
and
insb
mov
mov
xchg
into
xlat
and
sbb
push
jg
dec
xor
test
fcom
lret
jecxz
sbb
fcompl
xor
lea
jbe
iret
test
mov
pop
and
ss
fsts
leave
pop
dec
pop
ds
sub
rcl
scas
sub
mov
mov
inc
cli
pop
mov
fs
push
ret
pop
adc
js
mov
gs
les
movb
add
cmp
int
sub
ljmp
push
bound
jae
mov
cs
or
xlat
ret
pusha
notb
add
xlat
in
fistl
xor
outsb
sahf
add
or
jae
loope
cwtl
inc
cmp
push
or
add
add
or
mov
add
mov
mov
or
sahf
or
push
mov
mov
cmp
les
push
mov
das
xchg
pop
mov
xchg
fadd
in
push
es
cld
lea
lret
test
push
cmp
rcll
mov
insb
jg
and
mov
mov
insl
stos
mov
push
pop
shlb
mov
xor
cmp
cwtl
xchg
cmc
in
push
stc
pop
out
cld
unpckhps
lods
push
pop
mov
cld
lock
enter
rcl
out
push
mov
andl
mov
jns
aaa
sbb
aas
test
imul
mov
pop
test
push
ljmp
inc
jbe
mov
sbb
test
enter
sub
int
addr16
cld
fs
leave
jge
mov
call
jbe
ret
cli
fldenv
clc
pop
divb
cmc
repnz
add
mov
in
adc
ss
or
lods
js
scas
in
pusha
jmp
mov
jo
pop
mov
xor
xchg
and
xor
call
jge
and
sub
xchg
xchg
and
and
pop
push
dec
sbb
inc
sbb
xchg
mov
add
push
push
adc
in
pop
mov
cmc
push
sbb
xchg
nop
aas
outsb
mov
push
pushf
insl
cwtl
add
push
hlt
add
leave
push
dec
adc
xchg
inc
xlat
dec
mov
mov
mov
push
pop
popa
mov
pop
add
jb
lea
and
xor
sub
sub
add
mov
jge
or
lods
mov
clc
and
push
hlt
movsb
fmuls
int
and
jmp
cltd
into
rclb
mov
iret
stos
xor
call
mov
ljmp
xchg
fmull
push
dec
popf
out
in
mov
aam
and
xchg
std
loopne
jl
into
fs
loopne
filds
inc
pop
popf
pop
lret
inc
sahf
sbb
xchg
sub
hlt
xchg
arpl
ret
pop
int3
lahf
ds
add
ja
std
dec
pop
jns
mov
push
pop
popf
addr16
xchg
jmp
or
or
fwait
pop
push
clc
loopne
fwait
jae
shlb
cli
mov
enter
gs
cwtl
mov
cmp
aad
ds
mov
out
lea
mov
jecxz
dec
mov
rorb
fs
aas
dec
sbb
test
mov
out
pop
jl
mov
in
sbb
aaa
sti
lods
arpl
inc
mov
lret
push
insl
jnp
dec
cmp
aaa
sub
jne
mov
mov
sbb
pop
sti
mov
mov
add
mov
sbbb
inc
repnz
loope
inc
sbb
cld
mov
add
pop
mov
mov
out
aam
inc
pushf
jbe
fsubrs
mov
cmp
lds
pop
in
cmpsb
mov
mov
aam
push
cmp
xchg
andb
adc
dec
mov
sbb
pusha
mov
ljmp
ljmp
mov
hlt
fiadds
pop
stos
jge
cwtl
lcall
jge
pop
adc
int
and
add
cmp
ret
mov
in
sub
cld
and
cmp
mov
cmc
insb
sbb
sub
cmp
adc
shl
dec
pop
cmp
cmp
mov
jle
mov
into
adc
push
cmp
lods
divb
sti
mulb
sar
dec
or
dec
lods
push
inc
jno
les
or
inc
pop
shll
pop
scas
sbb
icebp
jbe
enter
xchg
adc
sbb
enter
xchg
jbe
mov
cmp
xchg
mov
imul
xor
imul
cmp
mov
cmp
cli
cmpl
sub
xlat
and
jo
ret
sub
das
push
mov
xchg
aam
mov
jbe
push
in
add
clc
inc
xchg
xchg
jmp
dec
mov
sarb
xchg
das
icebp
mov
pusha
jno
cmp
mov
imul
or
mov
sub
dec
loopne
inc
sbb
lods
pop
outsl
icebp
lcall
and
pop
push
fdivr
repz
pop
insl
cli
into
imul
jne
ja
fcomp
cmc
or
and
pop
add
jge
or
aam
aaa
push
and
gs
ljmp
idiv
and
cmp
hlt
mov
inc
mov
scas
mov
jae
lds
fimuls
bound
aad
mov
rclb
lods
jl
cmpsl
sub
ja
or
mov
cltd
js
mov
or
jl
or
cmp
mov
push
popf
sbb
test
loopne
ja
scas
iret
nop
add
push
fisttpl
dec
mov
push
lods
push
and
inc
jmp
scas
std
adc
inc
loop
je
packsswb
sub
cmp
rorl
loop
icebp
imulb
lods
xor
imul
int
push
mov
lcall
aad
sub
in
adc
sub
push
shrb
jnp
sbb
or
add
xchg
inc
cld
mov
mov
or
f2xm1
sbb
dec
lock
cmp
test
out
je
pusha
xor
pop
sub
push
fildll
pop
aam
test
mov
mov
ret
pop
enter
cmp
cs
jmp
mov
cmp
mov
fdivrl
and
cmp
or
mov
dec
mov
push
xchg
lret
mov
test
mov
into
out
in
inc
inc
jmp
mov
ret
cwtl
loopne
cmp
dec
xchg
pop
arpl
pop
mov
dec
sbb
test
jmp
sahf
pop
jmp
repz
cld
fmull
push
popa
xor
xchg
xor
enter
neg
add
pop
jno
xchg
fstps
xor
rclb
fnstsw
addr16
lret
or
dec
stos
call
loopne
xor
dec
test
sub
inc
imul
fwait
and
sub
lock
imul
mov
pop
fsubrl
sbb
cmp
cli
inc
push
scas
int
xchg
pop
addr16
fdivrs
or
loop
cmp
cmp
xchg
loope
fildl
aam
arpl
popf
push
ss
jl
pop
lea
lods
insl
xor
mov
xor
push
xchg
pop
jne
cli
lret
popf
aas
lret
jb
repz
cli
mov
jp
call
xchg
daa
or
nop
ret
mov
and
jno
out
jl
lret
js
daa
jbe
add
sbb
mov
push
andb
notb
pop
popl
test
push
xchg
add
out
pop
mov
push
pop
fwait
push
jp
test
dec
pop
pop
in
cli
and
lcall
jo
adc
outsb
rcl
sub
push
jl
and
sbb
mov
sub
push
sbbb
dec
cmp
aas
xchg
std
aad
cli
fs
orl
lock
mov
cmpsl
sbb
xchg
pop
and
cwtl
aas
mov
or
adc
adc
and
jp
shlb
fistps
rorl
cmpsl
mov
mov
jp
sti
or
outsb
inc
fstpt
cmp
pop
push
or
mov
sub
mov
les
push
test
add
pop
sbb
add
in
jl
xlat
dec
in
inc
push
mov
sub
pop
mov
or
test
shlb
fimull
cmp
sahf
lds
add
inc
sub
and
fs
outsb
rcrl
dec
dec
je
add
mov
in
dec
mov
ljmp
mov
sbb
ficoms
jp
dec
filds
push
mov
nop
je
or
pop
jmp
jle
imul
dec
xor
inc
lds
mov
mov
subb
sbb
push
sbb
popf
or
add
add
xor
fisttpl
daa
push
fcomi
inc
jmp
shlb
pop
aas
push
inc
jg
dec
imul
cmp
add
rolb
hlt
adc
adc
pop
or
insl
dec
or
sub
add
movsb
cld
out
mov
ficomps
mov
pop
fwait
jmp
ja
fimull
outsb
pop
adc
fbstp
shll
inc
mov
dec
add
out
push
jp
cmp
inc
out
movsb
cmpsb
fldl
sti
sbbb
and
lds
int3
sbb
out
stos
push
dec
fnstsw
jne
test
push
sub
fimuls
sbb
or
scas
xor
cmp
pop
lea
pop
arpl
mov
push
mov
loope
adc
mov
push
loope
mov
or
add
imull
or
insl
ds
hlt
xchg
pop
fs
cs
cmc
push
data16
scas
mov
push
aam
adc
sbb
adc
add
ret
push
sbb
mov
or
testl
mov
cmp
push
xor
inc
mov
add
push
mov
xor
jmp
sbb
cmp
ret
add
jns
inc
arpl
insl
scas
aam
push
push
inc
frstor
adc
mov
inc
cmp
xchg
stos
out
push
jg
adc
arpl
and
dec
xor
cld
and
xchg
push
inc
leave
ds
fists
mov
shl
mul
sahf
push
push
pop
cmp
push
push
lods
add
subl
mov
loope
push
pop
and
cli
mov
imul
push
push
pushf
jae
pop
adcb
cmp
fcmovne
ret
mov
inc
mov
dec
jmp
daa
push
aad
jecxz
adcl
lods
cmp
inc
dec
mov
mov
xor
or
stos
and
dec
ds
out
lea
mov
pusha
adc
in
shrb
jnp
push
loope
xchg
imul
lods
andl
xor
inc
mov
and
lret
xor
and
rcrb
add
cltd
push
push
movlhps
int3
sub
fisubrs
pop
subb
add
mov
loopne
cwtl
jne
mov
leave
lcall
sti
dec
lods
xchg
iret
out
sar
dec
and
test
fxch
movsb
cmp
and
scas
loopne
push
sbb
js
xlat
cltd
gs
inc
arpl
add
clc
int3
es
aaa
ds
xchg
loopne
icebp
xor
mov
pop
mov
ja
fistl
inc
xor
or
push
push
mov
rorb
std
aad
mov
sub
sbb
push
cmpsb
or
jmp
jbe
out
xchg
in
pusha
and
add
push
pop
sub
rorl
xlat
ss
add
jns
orl
hlt
push
popa
mov
xchg
pop
in
push
scas
iret
sbb
mov
insl
adc
pop
mov
sub
fidivs
sbb
mov
cmp
dec
fldenv
xor
mov
sbb
cmp
inc
leavew
scas
cmpsb
jecxz
pusha
popa
add
in
scas
popa
lock
sub
addr16
cltd
sub
dec
jno
xor
call
and
adc
vunpckhpd
inc
and
mov
jo
mov
mov
sub
cmp
test
roll
jg
in
nop
stos
pushf
cmp
adc
mov
ret
sub
subl
je
lret
lret
mov
in
mov
jge
jnp
dec
xchg
scas
sti
stos
xor
bound
and
call
sti
out
xor
add
push
imul
mov
iret
mov
sub
push
cmp
orb
repz
cmp
xchg
loope
adc
push
lods
das
adc
and
push
sbb
ss
cmp
dec
roll
and
rolb
inc
mov
cmp
pusha
into
add
stos
std
icebp
out
lahf
cltd
adc
or
jbe
inc
sbb
xchg
rcrb
ficompl
mov
out
sbb
int3
pop
ret
aaa
jecxz
push
sub
in
jecxz
pop
out
sti
repz
inc
adc
push
andb
das
xlat
adc
ret
sub
sahf
pop
dec
dec
movsb
repz
addb
loopew
mov
xlat
iret
in
lea
mov
aas
mov
gs
in
inc
mov
mov
xchg
lcall
mov
mov
xor
int
push
sbb
mov
and
into
or
jmp
insb
fbld
jg
stos
sbb
icebp
movsl
adc
xor
pop
rcrb
push
push
dec
cmp
call
loope
sbb
and
jge
jmp
adc
cli
xchg
int3
inc
mov
sbb
or
push
cmp
push
push
xor
movsl
cli
or
fnstcw
add
popf
loopne
out
pop
jle
scas
mov
jns
mull
mov
add
aam
sarb
xchg
mov
ret
aad
dec
pop
jno
fadd
push
inc
pop
es
fwait
mov
pop
add
jbe
popf
dec
out
or
in
dec
and
push
add
test
pop
test
cmp
out
inc
sub
mov
shl
add
incb
cmpsl
rsqrtps
test
ret
rorl
pop
sub
mov
and
leave
scas
jmp
adc
push
xchg
sbb
cmc
sbbb
cmp
scas
pop
fcmovnbe
call
or
in
mov
clc
lods
or
scas
test
push
repz
cmp
or
cmc
adc
hlt
sub
sbb
pop
call
mov
sub
popa
xor
pop
pop
mov
movsl
xchg
pop
sub
inc
jl
cs
xor
mov
pusha
dec
dec
cmc
xchg
xlat
dec
cmpsl
and
fs
push
sub
sbb
add
push
mov
or
clc
subb
jb
xor
dec
js
mov
adc
add
or
test
or
mov
arpl
pop
jb
cmpsb
and
jp
pop
inc
xchg
cli
cmp
jb
jl
rolb
xchg
dec
xchg
sbb
movl
sbb
mov
orb
push
pop
jb
ljmp
pop
xor
sbb
push
rcll
gs
shlb
sub
xchg
mov
addr16
xchg
jns
dec
aas
scas
mov
mov
dec
push
mov
adc
or
or
fimull
sbb
fbstp
test
pop
mov
push
andb
jnp
sbb
lahf
lcall
ficoml
xadd
int3
outsb
dec
notl
push
orb
sub
push
xchg
into
xchg
repz
ja
js
stos
arpl
pop
out
idivb
out
cltd
outsb
pop
xchg
jbe
dec
sar
shlb
add
push
pop
loop
mov
or
std
jbe
cld
xor
inc
jno
cmp
movsl
fsubrs
sbb
push
orb
mov
mov
xlat
sahf
mov
shll
inc
or
ret
dec
sbb
insl
push
mov
dec
push
movsl
mov
xor
mov
mov
ja
xchg
nop
pop
shrl
xor
lods
cli
and
loope
sub
fisubrs
pop
xchg
mov
push
and
jp
sub
ss
or
in
dec
test
lods
icebp
jnp
cmpsb
mov
dec
pop
cmpsl
cli
fcomps
mov
push
into
clc
mov
adcl
xor
insl
popl
jne
cmc
das
aas
xchg
inc
jge
xchg
jae
jge
jns
fucompp
leave
xor
cmp
pop
ret
jecxz
mov
push
dec
or
loope
leave
loop
push
test
fpatan
xchg
add
dec
add
mov
lret
das
add
dec
test
jno
dec
sbb
inc
jecxz
mov
lret
xlat
adc
lcall
imul
jle
insb
imul
and
mov
rcl
sub
arpl
add
leave
mov
inc
sub
adc
sbb
mov
mov
sahf
mov
sahf
js
std
add
pop
cmp
jle
ret
mov
pusha
sub
in
loop
push
xor
outsl
and
or
mov
outsl
mov
mov
xor
les
out
add
mov
out
adc
mov
daa
fwait
into
push
pop
xor
and
sahf
sbb
loopne
aam
jmp
cli
mov
jle
out
jae
mov
mov
dec
pushf
pusha
dec
mov
jl
nop
xchg
fistps
lds
inc
scas
cld
mov
ja
leave
lock
rorb
pop
test
pop
adc
or
je
nop
leave
popa
push
mov
add
out
mov
push
push
jo
dec
cvtps2pi
mov
dec
jge
nop
or
pop
jmp
adc
es
pop
cmp
ljmp
loope
mov
mov
in
sub
aad
stc
push
imul
and
sub
hlt
lods
aad
mov
jl
clc
shl
movsl
in
int
dec
loope
sub
fdivs
cmp
mov
arpl
outsb
push
add
nop
sbb
mov
inc
repz
jo
aad
clc
mov
ja
pop
inc
out
out
jae
adc
xor
das
call
inc
negl
mov
mov
jne
cmpsb
xchg
push
aas
push
incb
inc
into
cld
sarb
adc
dec
sub
pop
andb
pop
int
push
call
mov
mov
mov
aam
cmc
cmp
movsl
push
repnz
adc
mov
nop
popa
fs
xor
adc
mov
mov
pop
test
out
int
jae
ror
jmp
subl
push
and
daa
push
pop
mov
mov
or
lret
adc
in
cmpsb
orb
dec
pminub
aas
mov
jno
mov
ljmp
sti
jb
add
pushf
xchg
cmp
mov
adc
mov
rcll
loop
call
fidivrl
inc
not
cmp
sub
lea
xor
dec
out
fnsave
js
enter
add
sub
jl
cmp
inc
cmp
add
mov
xor
outsb
and
pop
cmp
jne
fcomps
mov
dec
mov
and
out
add
cld
cwtl
dec
test
mov
insl
je
cmp
cmpsb
and
jg
js
xorl
loope
jns
mov
cmpsl
in
fiadds
cmpb
cmp
insl
xchg
dec
push
cltd
subl
mov
cmp
and
mov
pop
rcrl
fs
jg
cmp
test
add
ret
aad
loopne
fcomps
xchg
and
lahf
xor
subb
mov
push
dec
mov
fisubrl
in
xchg
pop
xchg
subl
or
jnp
addl
ja
enter
inc
bound
dec
inc
mov
push
sarl
add
nop
fistl
pop
mov
lock
popa
xchg
jecxz
dec
or
sbb
cs
mov
pop
mov
lods
sahf
pop
cld
outsb
push
out
dec
rorl
xchg
or
add
inc
add
mov
lret
aas
jmp
push
pop
repnz
and
in
loop
cmp
pop
call
xor
sub
sbb
dec
or
mov
pop
cmp
sbb
push
pop
mov
add
pop
inc
mov
and
xchg
aad
adc
add
scas
ret
mov
or
xor
js
sub
jns
inc
mov
dec
jmp
push
sbb
jge
push
aaa
pop
in
pop
gs
mov
int
push
bound
test
push
ds
jno
pop
repz
loope
cmpsb
pop
aas
fcmovnu
fadds
scas
loop
xor
jg
lcall
xchg
sub
xchg
jns
daa
push
std
outsl
push
pop
pop
and
mov
xchg
add
sbb
xchg
fisttpl
ret
adc
jecxz
loop
cmp
or
adc
xchg
ds
push
jg
push
sub
mov
push
mov
xor
es
cs
fisttpl
sarb
fstps
inc
jmp
push
xchg
xor
jno
dec
cwtl
sbb
mov
repnz
add
xor
sbb
fsubrp
inc
jge
mov
xchg
push
jb
shl
pop
popf
sub
cmp
mov
leave
shld
dec
imul
inc
push
pop
rcl
push
cmp
add
fisubs
mov
push
jp
ljmp
mov
or
loopne
aas
xchg
je
mov
loop
pop
mov
rcrb
sub
mov
fisubl
in
aas
adc
ja
es
cmp
add
daa
jge
scas
sbb
push
xor
sub
add
jl
xchg
mov
jg
aas
sti
fistps
mull
lret
hlt
pop
sub
lods
out
add
cmp
inc
xor
sub
pop
lea
cs
movsl
mov
push
daa
test
mov
ret
jno
push
ljmp
pop
adc
cltd
add
mov
xor
sarb
pop
push
jne
or
add
mov
pop
pop
mov
dec
movsl
jecxz
loope
aaa
repz
pushf
test
ss
lock
adc
cs
stos
add
ja
xchg
lods
jg
inc
xchg
aas
inc
sub
mov
and
aas
dec
fsubs
mov
xlat
cmpsb
loopne
testl
mov
xor
or
dec
jnp
sub
lock
or
fs
test
push
jmp
repz
dec
cmpsb
pop
push
inc
dec
mov
add
cwtl
fwait
sbb
sbb
xchg
sbb
push
sub
dec
sbb
mov
xchg
out
aas
popa
inc
pop
and
lods
push
and
test
fcomps
rcrl
pop
sub
lret
pop
lods
xchg
call
mov
push
mov
add
mov
xor
cmp
addr16
repz
mov
mov
inc
lock
push
inc
in
fldl
enter
xor
cltd
insl
push
stc
aaa
aas
and
inc
cmc
lret
inc
int
cmc
mov
xchg
mov
cmpsl
adc
sbb
out
pop
shll
dec
mov
and
lods
in
fnstsw
std
push
out
inc
test
xor
pop
lock
push
mov
mov
ds
in
daa
mov
add
and
sahf
shlb
je
and
fwait
sub
in
dec
icebp
sub
xlat
sahf
sbb
xchg
add
popa
sbb
scas
lods
outsl
lods
mov
mov
mov
scas
aam
js
and
sahf
mov
aad
jp
push
sub
into
and
push
popf
pop
push
sbb
sbb
loopne
xchg
sahf
sbb
xor
iret
and
shrb
pmuludq
pushf
in
or
adc
rcrl
inc
mov
or
fisttps
push
movsl
push
inc
pop
jge
ljmp
outsl
mov
bound
add
out
aam
mov
addr16
movb
cmpsl
push
jle
mov
decl
pop
inc
scas
shlb
leave
insl
inc
mov
inc
jno
incl
loopne
push
push
sbbl
jo
pop
mov
aam
clc
xor
push
or
dec
icebp
lods
dec
cmp
adc
push
rclb
inc
fwait
test
out
lret
dec
stos
sti
xchg
movsl
stc
push
sbb
sub
jp
push
push
subb
mov
xchg
push
or
inc
jae
aad
bound
jnp
jl
clc
add
mov
pop
pop
xchg
push
and
sub
lds
mov
xor
insb
xor
cmp
cwtl
nop
lds
aas
sbb
es
mov
lods
xchg
movsl
lret
dec
into
dec
jbe
ret
sbb
pop
fsubrs
xchg
out
enter
xor
out
push
orl
xchg
push
inc
bound
inc
mov
cli
cmp
movsl
inc
pop
xor
push
int
clc
aaa
xor
mov
clc
and
dec
push
sbb
push
cwtd
and
repnz
sbbb
aam
gs
push
imul
and
pop
div
or
add
xor
xor
add
jo
subl
cmp
sbb
mov
clc
and
pushf
pusha
sub
leave
mov
xor
outsl
lret
dec
add
cmpl
pop
and
leave
mov
mov
push
ret
jp
gs
mov
notl
add
add
enter
pop
stc
fwait
mov
imul
mov
mov
divl
xorl
mov
add
sti
lds
lea
pop
adc
sub
push
cs
jle
std
hlt
xchg
inc
rclb
cmpsl
add
jp
push
je
cmp
xlat
xor
add
cmc
xorb
xchg
sub
out
adc
fmuls
mov
jmp
jo
popf
cli
sbb
jbe
sub
push
dec
sub
jno
or
movzbl
or
xchg
xchg
insl
or
sbb
or
dec
mov
movl
inc
push
les
inc
or
mov
in
arpl
cwtl
xor
mov
push
jg
insl
xor
mov
mov
addr16
rcrl
cmpsb
xor
xchg
xlat
adcb
xchg
push
test
mov
or
xlat
data16
mov
add
inc
dec
int3
loop
out
fistpl
xor
fidivs
pusha
stos
repnz
insl
mov
mov
mov
and
dec
adc
into
rcrl
leave
insl
pop
push
outsb
clc
add
ss
les
stos
test
wrmsr
jno
lcall
rolb
mov
test
aaa
ds
out
cmpsl
dec
push
ljmp
mov
out
sbb
xchg
cmp
sbb
pop
jge
fwait
rcrl
mov
mov
inc
addl
fs
adc
insw
iret
in
sbb
cmp
ds
sti
rolb
cmc
imul
rclb
jp
in
movsb
insb
mov
push
push
inc
push
mov
movsl
pop
push
fmuls
stc
in
pop
in
xlat
cmpsl
sarl
out
in
and
mov
pop
ret
in
cmc
insl
cmp
push
fadds
stos
inc
hlt
jecxz
sub
fbld
cmp
addb
or
into
sub
dec
pop
mov
mov
pop
imul
adc
mov
loope
mov
loopne
push
test
mov
movl
or
lods
jg
sbb
loope
cmpsl
decl
outsl
adc
std
out
test
push
or
dec
notl
js
inc
cmp
mov
mov
into
add
jge
std
sbb
insl
dec
xchg
jae
sbbb
or
cmp
jle
mov
and
nop
lret
es
mov
rcl
outsb
pop
and
movsb
mov
gs
inc
mov
xchg
gs
adc
inc
sbb
dec
dec
xor
jo
jl
push
insl
loope
adc
inc
aam
or
xchg
xchg
popa
xor
insl
adc
scas
loop
xor
dec
cmovge
mov
mov
mov
les
into
shlb
fsubrs
sub
adc
loop
repz
nop
mov
lret
inc
add
push
subl
nop
insl
test
stos
pusha
xchg
loope
add
xor
loopne
enter
outsl
mov
popf
aaa
jge
aas
dec
cmpsb
ss
jmp
adc
dec
mov
mov
mov
test
aam
dec
sbb
xlat
push
lahf
mov
fnstenv
push
shlb
sti
pushf
test
add
sbb
sti
gs
pop
sbb
inc
inc
shlb
and
test
outsl
shll
nop
cs
jg
pmaxub
adc
sub
dec
mov
add
aad
mov
rorb
stos
pop
jg
push
mov
hlt
test
sbb
and
jmp
sub
ljmp
in
mov
lds
lahf
loop
mov
aam
mov
xchg
imul
pushf
sbb
dec
dec
fbstp
mov
fildl
push
lds
adc
jmp
push
dec
orl
loope
mov
nop
shlb
imul
xchg
movsl
cmp
or
bound
fbstp
movl
mov
mov
sub
in
lea
mov
xor
xchg
ret
fld
add
lods
xor
stos
and
sub
mov
into
mov
mov
cmp
cmc
jne
sub
int3
adc
out
loopne
ss
fs
jle
mov
push
imul
imul
mov
mov
pop
test
pop
mov
sub
das
push
mov
mov
and
adc
outsl
adc
pop
and
in
data16
scas
cmp
push
imul
mov
andl
cmp
pop
jmp
jl
mov
aad
jg
mov
mov
sahf
cmpsl
lds
rol
ja
lock
or
call
aad
sbbl
xchg
arpl
test
mov
add
adc
jp
pusha
jb
mov
in
inc
fbstp
stos
add
sarb
add
or
pop
fidivs
shll
repnz
fdivrs
sbb
mov
lds
pop
pop
mov
test
lret
sub
gs
mov
dec
xor
mov
and
mov
jne
addb
pop
imul
mov
outsb
leave
jle
arpl
xor
dec
push
inc
cmpsb
movsl
icebp
mov
sbb
xchg
jg
push
andb
shlb
jae
lret
pop
inc
out
out
ds
push
ja
or
and
clc
cmp
imul
mov
imul
out
roll
inc
mov
movsb
cltd
lock
outsb
rcl
iret
mov
cmp
out
xchg
popf
fldcw
xor
dec
xchg
push
ja
xchg
and
pop
sbb
ja
in
adc
sbb
ret
rep
cmp
popa
sti
jmp
mov
cmp
movsl
icebp
test
pop
xchg
std
xor
hlt
dec
pop
ja
inc
iret
aaa
shlb
je
fwait
sub
dec
cmp
scas
fwait
pop
cmp
into
fs
ds
mov
adc
cltd
xor
pop
shrl
loopne
in
or
aas
xor
mov
add
icebp
out
int3
or
jecxz
xchg
mov
mov
int3
or
std
dec
add
or
cmp
xor
sbb
mov
fildl
lods
bound
in
sub
stos
fldcw
mov
mov
xchg
dec
mov
pop
dec
mulb
ljmp
or
adc
test
fisubrs
mov
into
add
cmp
call
test
pop
fdivl
repnz
sbb
loop
movsb
fucomi
adc
cmp
les
xchg
xchg
xor
dec
shl
push
inc
pushf
mov
xchg
mov
xchg
xchg
pop
jne
mov
out
scas
popa
pop
mov
jecxz
lret
std
ss
js
add
push
xchg
jae
push
daa
push
fdivrl
xchg
add
fnstenv
insl
jns
aad
pop
es
mov
mov
jl
cmp
add
push
inc
cmpsb
inc
fstps
push
adc
repz
rcrl
insl
or
or
push
out
push
stos
xorl
jp
ja
hlt
add
cmp
and
out
xchg
dec
in
aad
cmp
lods
cmp
cli
cmpsl
and
push
in
iret
cltd
bswap
clc
push
jmp
pop
jb
mov
aam
out
loop
pop
xchg
push
int3
xlat
xchg
inc
outsl
or
pop
add
dec
cmovle
ss
popf
aam
cmpsw
xchg
outsb
add
xor
daa
into
popa
rcr
mov
das
je
pop
insb
cmp
ret
mov
sbb
arpl
aam
jne
sbb
fisubrl
cmpsb
add
testl
pop
dec
mov
clc
fnstenv
jo
std
lea
jne
sub
call
bound
bound
addl
mov
mov
xchg
out
mov
push
jbe
mov
neg
test
cmp
xchg
pop
idiv
cmp
sub
inc
dec
insl
push
jmp
call
ret
pop
mov
adc
call
dec
test
ret
outsb
xchg
mov
out
dec
xchg
push
jne
dec
popa
stc
and
dec
mov
push
pop
in
cmp
and
pop
imul
mov
inc
and
jb
hlt
mov
mov
adc
mov
lods
scas
add
ds
mov
adc
rorb
out
pop
out
xchg
rcrb
jge
or
inc
into
inc
movsb
dec
and
imul
and
push
jmp
xor
mov
inc
ffreep
inc
jae
pop
dec
cwtl
sbb
jp
sub
mov
dec
fstpl
in
jne
fidivrl
daa
mov
push
or
iret
push
aaa
push
arpl
jge
sbb
jne
push
imul
jl
inc
sbb
mov
imull
jecxz
jg
ficompl
mov
jae
xor
cltd
mov
sbb
repnz
shrb
pop
bnd
xchg
xor
daa
sbb
sbb
inc
aam
es
jo
mov
and
mov
imul
cmp
pop
out
sahf
jge
lcall
stos
or
inc
fmull
xchg
pop
pop
adc
sub
jae
or
mov
mov
lcall
testl
mov
adcl
jge
in
fnstcw
pop
xchg
lahf
rcll
or
jle
out
xchg
jne
hlt
mov
or
out
outsl
test
xchg
jl
les
dec
xchg
adc
stos
mov
inc
divl
inc
test
insl
inc
dec
lcall
mull
nop
cwtl
mov
sub
test
ret
cmpsl
inc
cwtl
jle
xor
jge
daa
notl
jno
jo
je
mov
pusha
addb
bound
xor
movl
xchg
xchg
adc
out
adc
mov
inc
pop
int3
es
shl
popf
ja
std
out
mov
fistpl
xor
fsubrl
ss
push
movsb
mov
movsb
pop
test
dec
inc
imul
sbb
js
lahf
cmp
sub
and
les
cld
mov
sbb
pop
jne
lret
sub
pop
jne
arpl
xchg
sub
test
dec
into
adc
and
adc
add
stos
mov
ds
lret
dec
xchg
sub
hlt
repz
mov
scas
ret
mov
add
adc
mov
lods
dec
aam
clc
sub
xchg
cli
adcb
lds
test
dec
scas
int
fs
ret
and
bound
loopne
aad
xchg
inc
cmp
sahf
sbb
ret
mov
jne
add
test
daa
stos
adc
daa
add
sahf
movsl
and
inc
jbe
arpl
or
xor
lds
std
insb
mov
xor
jl
and
pcmpgtw
lea
mov
xchg
xchg
outsl
cwtl
fcomps
stos
xchg
sbb
dec
repnz
pop
push
inc
vmulpd
sbb
adc
aam
sub
mov
cmpsl
add
pop
mov
sbb
lahf
push
in
cmp
popa
xor
stos
xlat
addl
loopne
xlat
cwtl
fldenv
push
cmp
mov
push
out
mov
inc
ret
je
add
cmp
fisttpl
xchg
lods
test
cmc
es
dec
jae
cli
cmpsb
ds
cld
loopne
cmpl
mov
mov
call
movsl
sbb
and
icebp
mov
xlat
fmull
add
sub
fildll
xlat
dec
and
add
lds
dec
add
fsubr
inc
or
sbb
push
imul
movsl
jle
movsl
jno
xchg
leave
mov
inc
test
pop
lds
int3
shlb
or
sub
arpl
pop
xor
pop
mov
rcrl
or
hlt
xor
and
lock
rorb
adc
fwait
ds
jb
mov
jmp
imul
and
push
lock
aas
nop
xlat
sbb
sub
dec
sub
mov
or
std
inc
xchg
mov
movsb
mov
inc
hlt
xor
mov
jne
adc
lds
mov
mov
out
shr
les
les
rolb
fisubl
fnsave
and
arpl
outsb
test
pop
push
jb
mov
mov
dec
push
movsl
bound
outsb
lea
call
cmp
in
add
jp
mov
aam
mov
jl
sbb
stos
jg
lret
sbb
and
int3
jl
mov
movsb
cmpsl
adc
addr16
inc
movsl
sub
stc
or
pop
aam
adc
mov
inc
sub
lods
in
cs
pop
and
mov
xchg
loope
ds
test
cwtl
jg
sub
test
cmp
mov
gs
das
jl
pop
add
mov
or
sti
push
insb
shll
fimull
std
bound
xor
mov
add
mov
pop
pop
or
lret
mov
jp
cmp
mov
mov
std
mov
and
mov
mov
mov
movsl
lret
into
bound
sub
cmp
xchg
nop
fwait
pop
sbb
push
into
xlat
dec
inc
mov
add
lods
test
ljmp
ss
push
mov
and
adc
insl
mov
push
jae
xorb
in
ret
mov
dec
adc
mul
adc
fimull
jns
sbb
mov
jne
scas
mulb
cmp
cmpsl
mov
je
dec
outsb
fistl
xor
in
in
mov
and
jno
aam
lret
insb
lock
cltd
pop
int3
dec
mov
lock
or
xadd
cmpsl
loope
icebp
mov
inc
mov
out
push
in
shlb
add
push
sub
xchg
xchg
scas
neg
into
mov
aam
inc
xchg
mov
mov
pop
add
xchg
or
lds
mov
mov
cld
cwtl
fisttpll
daa
jg
sub
sahf
addr16
loope
or
or
sub
lods
jb
icebp
mov
sub
add
sub
outsb
nop
loope
dec
lea
movsl
mov
add
sbb
cmp
mov
push
add
cmp
cmpsl
jg
imul
popa
pshufw
ret
imul
test
clc
rcl
cmpsb
stos
data16
push
in
sub
pop
and
fldcw
jbe
sahf
push
jge
outsb
mov
dec
push
or
movsb
mov
arpl
sarb
cld
je
dec
icebp
out
fsubrs
jl
les
pop
js
cmp
xor
movsl
mov
out
inc
std
test
mov
sti
loopne
mov
mov
rcl
scas
sbb
mov
mov
push
lea
and
test
adc
idivb
test
add
addl
xchg
mov
cmp
roll
outsb
pop
jge
test
cli
sti
insb
inc
xor
imul
jp
js
aad
les
inc
popf
ror
inc
iret
test
jae
shll
mov
xchg
mov
sub
int
hlt
loope
aaa
popf
jecxz
dec
sub
mov
pop
andb
scas
adc
ljmp
pop
sub
test
mov
dec
dec
xlat
sbb
rcrl
sbb
push
loope
xchg
jae
inc
rol
sbb
stc
daa
push
jmp
xchg
mov
cmpsb
xor
pusha
xchg
sbb
scas
lods
or
addr16
out
add
or
shll
dec
jno
adc
dec
push
push
mov
or
fistl
insl
aad
add
lcall
fisttpl
xchg
addb
aad
jg
clc
into
pusha
arpl
jo
pushl
mulb
in
inc
mov
rcrb
js
mov
push
lods
jo
lahf
add
sbb
out
push
or
sub
jbe
rorl
xor
cld
push
ret
divl
mov
pop
int
test
sbb
into
xor
or
lea
inc
test
int
movsl
hlt
fcoml
pop
dec
mov
mov
xor
inc
cmp
xchg
loop
test
cmp
add
rcrl
repz
popf
jo
sahf
inc
ja
jmp
or
push
push
daa
and
and
test
movsl
inc
pop
sti
sbb
mov
fs
nop
fdivl
movsb
mov
adc
popa
jmp
aad
or
repnz
mov
shlb
aam
mov
sub
jecxz
sbb
adc
mov
jg
jmp
or
xchg
ja
jg
int3
daa
sbb
dec
aaa
mov
sahf
scas
call
add
cmp
mov
outsl
in
popa
dec
mov
lret
dec
inc
or
push
fwait
addr16
loope
pop
pop
fisubrl
push
mov
sbb
dec
ret
mov
arpl
mov
jb
in
pop
sub
push
or
mov
ds
xchg
add
adc
and
mov
xor
jno
mov
push
dec
dec
pop
jns
pop
inc
xor
std
das
out
inc
or
or
jne
movsb
push
xor
bound
add
movsb
stos
mov
push
test
inc
jns
ret
dec
xor
rcll
stos
js
imul
dec
shll
push
inc
sub
out
out
xchg
test
fs
mov
in
push
fistpl
and
aaa
out
je
xchg
sahf
mov
adc
fs
mov
repnz
outsb
add
lahf
adc
push
sub
push
popa
pop
dec
xlat
push
mov
fnstenv
xchg
adc
faddl
subb
xor
iret
mov
cmp
orb
fsts
testb
adc
add
sbb
dec
idivl
cli
mov
subb
lods
adc
pop
enter
repz
repz
or
push
lret
cmpsb
adc
or
pop
in
sbb
cmp
sbb
lret
jge
cmp
mov
pop
mov
mov
mov
test
arpl
into
pop
cli
jnp
mov
int
loop
xchg
pusha
mov
jo
push
lods
add
dec
fnsetpm(287
mov
cmpsb
add
incl
jg
pop
or
ljmp
sub
loope
mov
push
jns
repnz
push
leave
lock
sbb
fildll
js
push
rcll
lds
fcomps
ss
ret
xchg
or
es
push
xchg
xchg
je
das
mov
dec
and
adc
push
adc
daa
mov
das
adcb
pop
jb
pop
clc
popa
push
cmp
push
mov
push
stos
ljmp
sbb
loop
cmp
out
xchg
lock
aad
and
push
out
mov
inc
je
lret
xchg
dec
fstps
insl
orl
fdivrl
mov
xor
mov
jo
shrb
adc
daa
jp
cmpsl
hlt
dec
int
popa
inc
int3
xchg
pop
mov
pop
push
push
shr
icebp
clc
mov
push
hlt
stos
cmp
push
roll
dec
outsl
xlat
cs
insl
jne
and
fisttps
or
add
test
xchg
lds
jmp
popf
push
sbbl
push
xchg
cmp
sbb
daa
mov
in
or
in
adc
push
cmp
in
add
ja
loopne
cmp
mov
leave
call
std
fs
jae
pusha
pop
and
imull
dec
ficoml
mov
pop
sbb
mov
sub
mov
cmp
push
lahf
test
mov
jb
mov
out
sub
pop
lea
mov
cmc
or
hlt
or
mov
jne
aaa
and
lret
xchg
xor
and
add
insl
addr16
xchg
jg
fs
loopne
dec
jecxz
push
dec
out
lods
fldenv
mov
repz
dec
adc
push
cmc
cs
std
or
stos
gs
mov
xor
jl
imul
shlb
gs
push
mov
dec
popf
stc
loop
mov
aaa
imul
pop
lds
inc
rorl
inc
add
movsb
into
and
mov
lds
dec
movsl
mov
cmp
loop
jnp
repnz
xor
pusha
mov
jbe
xor
arpl
test
imul
pop
hlt
or
jecxz
and
mov
shl
ret
inc
cmp
clc
sub
test
mov
pop
sub
dec
cltd
add
pusha
decl
popa
fsubr
out
mov
cs
push
dec
dec
stos
aaa
add
adc
test
and
test
dec
add
xorb
pop
bound
push
xchg
mov
les
mov
sbb
ja
xor
jl
in
jecxz
int3
and
shlb
mov
lret
rclb
push
popa
es
aas
out
xor
sbb
jp
in
mov
push
repz
roll
push
dec
jmp
mov
xchg
scas
clc
daa
cltd
push
sub
mov
push
dec
sbb
jle
lret
aad
loop
fimuls
xchg
ret
xchg
outsl
add
add
out
or
adc
in
cmp
or
ret
xor
ds
xor
or
mov
rcrb
loop
inc
mov
mov
add
frndint
xor
add
push
dec
or
xor
mov
push
jp
mov
das
test
lock
mov
inc
cmp
sbb
or
rcll
test
push
outsw
popf
push
cmc
aas
ss
movsl
hlt
xchg
sahf
jmp
imul
adc
mov
xchg
ljmp
inc
push
imul
cmp
cmpsb
sub
testl
scas
cmp
or
ja
mov
adc
xchg
sbb
cmp
clc
icebp
loope
nop
lret
addr16
sub
push
les
pushl
cmpsl
cmpl
mov
jle
push
je
dec
xor
pop
test
or
mov
mov
jle
jg
test
jns
lods
or
arpl
mov
icebp
sub
ss
in
jg
pop
jno
mov
rcrl
bound
popa
imul
mov
scas
push
stos
test
in
movsl
repz
inc
xlat
stos
cmp
jnp
jns
cmpb
pop
in
push
icebp
cmp
aas
fsubp
movsb
aas
dec
dec
mov
aad
pop
icebp
inc
cmpsb
ljmp
aas
pop
ficompl
adc
xchg
add
cmp
in
pop
jmp
lds
int
loop
ja
hlt
pop
pop
sbb
scas
add
lods
scas
cld
sahf
mov
lods
imul
test
push
std
iret
bnd
test
imul
dec
loop
lahf
mov
mov
test
lahf
cmp
sahf
jecxz
cmpsb
mov
in
xchg
sbb
add
leave
cmp
rcll
enter
aas
jo
test
fistpl
mov
cli
xor
shll
sbb
sub
dec
cmp
mov
mov
popa
mov
aas
fs
push
add
add
les
mov
inc
scas
push
adc
mov
mov
out
lds
stc
imul
jns
sub
mov
and
in
ja
cli
pop
add
mov
mov
lret
sbb
popf
and
xchg
in
xchg
mulb
sbb
mov
mov
leave
addr16
movsb
mov
test
xchg
xlat
and
push
push
out
xchg
lret
lods
mov
xchg
inc
mov
push
push
fldcw
inc
std
imul
pop
pop
dec
shll
in
inc
ret
hlt
cmp
and
test
popf
outsl
enter
popf
jae
adc
in
int
or
xchg
add
inc
xchg
push
mov
xchg
loop
pop
int3
jae
leave
dec
clc
push
mov
xchg
jge
pop
fbld
adcb
mov
cmc
sti
shll
out
push
push
leave
adc
inc
rclb
mov
push
cmp
mov
adc
inc
enter
inc
pslld
bound
orl
pushf
xchg
inc
negl
rcrb
adcb
pop
fnstcw
fbstp
orl
lds
and
xchg
sub
call
rolb
idiv
es
pop
stos
js
dec
test
pop
jo
hlt
subb
fcmovb
int3
lret
add
add
pusha
mov
nop
inc
daa
arpl
ds
push
dec
repnz
jle
add
xchg
jae
adc
scas
push
lods
push
cmpl
push
cmpsb
add
mov
adcb
lcall
inc
adc
push
je
inc
rol
rcll
mov
or
insl
imul
out
stc
ja
stc
mov
mov
sub
sub
lock
sbb
and
mov
sub
or
insb
push
sub
push
js
adc
in
shll
inc
repnz
negl
and
push
pop
pop
rorl
dec
inc
mov
xor
xorb
roll
ja
dec
sub
fdivs
les
out
popa
cmp
mov
inc
nop
dec
dec
test
test
rclb
jge
sub
pop
sub
add
test
mov
ficoml
sub
cmpsb
adc
jae
lret
addr16
or
or
jmp
push
add
push
ffree
ja
inc
mov
shll
mov
aas
imul
ds
mov
mov
jl
movsl
cmc
out
xchg
sub
pop
lods
pop
and
fs
push
mov
push
je
mov
xchg
dec
fisttps
inc
testl
js
or
cmp
stos
lods
jae
ds
mov
xor
mov
sbb
push
mov
sub
sbb
dec
add
jg
frndint
bound
pop
dec
and
int
xchg
inc
pop
xchg
in
push
xor
sub
hlt
inc
jnp,pt
push
rcrl
jnp
jmp
movb
inc
sub
inc
enter
push
pushf
and
or
push
scas
mov
add
iret
repnz
xchg
xor
push
addb
adc
and
push
cmc
nop
lea
in
xor
xchg
inc
jmp
push
hlt
ja
jg
in
data16
inc
enter
mov
push
jnp
push
cmp
or
movsl
push
icebp
aam
fidivl
dec
pop
fwait
iret
movsl
mov
dec
test
fistpll
insl
flds
loop
push
lock
pushw
mov
es
outsl
mov
dec
dec
inc
in
inc
inc
outsb
std
jge
orl
cmp
repz
jb
test
push
sub
stos
or
mov
stos
push
cli
mov
mov
inc
sub
loop
dec
xlat
cmp
lods
stc
cmc
fidivs
sbb
fmuls
inc
sub
fsubl
xchg
xor
js
ret
mov
mov
sahf
movsl
ret
and
push
add
and
data16
ljmp
jno
sbbl
call
dec
or
jbe
sarl
mov
add
sbb
out
shrl
cmc
outsl
and
idivl
add
scas
xor
es
mov
fucomip
mov
mov
mov
pop
push
dec
hlt
je
data16
out
and
mov
inc
rclb
jns
xchg
xlat
or
cmc
jno
rorl
xchg
movnti
mov
outsl
lods
pop
push
je
sbb
aaa
outsb
cmp
jge
pop
std
sub
or
inc
fwait
leave
hlt
into
repz
testl
jb
mov
loop
mov
es
mov
adc
div
divl
xchg
cmp
mov
mov
scas
loop
push
mov
sbb
lret
sbb
mov
lret
xchg
paddsb
subl
test
jo
jae
xchg
rolb
scas
movsb
push
leave
push
nop
fwait
mov
jb
insl
mov
sub
and
insl
mov
cld
mov
test
jb
sti
inc
popa
fldl
push
adc
ss
test
outsb
mov
sar
cmpl
int
hlt
inc
in
scas
inc
mov
ss
stos
das
movsb
xchg
jne
scas
sbb
icebp
mov
mov
mov
push
pop
dec
sbb
inc
test
push
outsb
jbe
jl
jo
xlat
adc
divps
push
xchg
cltd
xlat
jno
dec
lods
inc
jl
std
rorl
and
adc
xor
sbb
pushf
jecxz
or
cmp
aas
pop
iret
jnp
lock
adc
and
mov
adc
xor
or
jle
mov
popa
imul
jl
adc
inc
mov
add
js
enter
xor
out
ljmp
push
movsl
insl
addr16
int
popa
ds
insl
shlb
mov
fisubl
sbb
stos
adc
adc
lods
or
outsl
inc
push
rcrb
fildl
in
insb
push
in
aad
rcrb
clc
lret
push
jno
mov
outsl
push
ja
cmp
fs
dec
add
orb
daa
mov
lods
out
mov
repnz
call
xchg
xor
xchg
pop
dec
xor
mov
xchg
sbb
inc
cmp
inc
test
xor
icebp
jl
cwtl
loopne
aas
pop
roll
pusha
cmp
cmp
pop
sbb
in
jb
add
xchg
fsubs
jbe
daa
mov
test
data16
sbb
incb
inc
and
hlt
movsb
adc
pop
loopne
inc
fidivrs
imul
cmpl
add
jb
jne
sub
sub
pop
cmp
and
das
out
cmp
xor
test
add
in
xchg
xchg
adc
out
loop
in
sbb
lret
cmpsb
lahf
xchg
jge
testb
mov
dec
popl
icebp
push
inc
add
push
sbb
lock
cld
orl
movaps
mov
pinsrw
mov
mov
ljmp
xchg
inc
dec
mov
hlt
aam
jae
popf
in
push
xchg
xchg
cmp
insl
shlb
icebp
mov
outsl
ret
lret
rolb
ficompl
popa
popf
pop
stc
mov
push
adc
fmul
fdivrl
pop
or
inc
xchg
sarl
insl
or
scas
dec
orl
loope
sti
cltd
rcr
sub
mov
jl
jno
cmpsb
and
xchg
pusha
mov
cmc
adc
add
das
test
int
insl
push
cltd
add
cmp
outsl
loope
sub
and
xchg
sub
test
repz
dec
cltd
subl
and
shlb
enter
jl
andl
jmp
cmp
movsb
xchg
ret
mov
andb
adc
sbb
xchg
test
js
mov
inc
sub
xchg
inc
xchg
out
nop
sbb
lods
mov
fcoms
cmp
sub
je
push
and
fdivp
repnz
mov
negb
pop
andb
imul
adc
ss
lahf
sbb
outsl
sub
ret
insb
xor
test
shlb
dec
rcl
fisubrl
sbb
push
jmp
test
mov
je
stos
test
orb
in
push
aam
popf
aam
test
push
ja
jp
arpl
inc
popw
mov
pusha
mov
jae
stos
pop
inc
faddl
pop
shrb
in
fwait
insl
jle
and
fstpt
sub
mov
sub
push
test
rcll
cld
adc
sbb
fyl2x
push
mov
xor
out
ja
xchg
sub
data16
in
adc
xchg
rclb
inc
mov
or
and
sbb
fstpt
mov
leave
loope
inc
lcall
rol
push
inc
mov
mov
and
out
xor
mov
add
scas
hlt
jbe
stos
andb
out
xchg
jl
lods
sub
outsb
mov
and
data16
sub
popf
cwtl
ja
sub
xorb
dec
iret
xlat
ljmp
mov
pusha
sti
sub
jnp
and
xchg
std
in
jo
das
insl
aas
jge
mov
pop
rcll
xlat
pop
shl
dec
clc
push
daa
imul
xchg
xor
jl
pop
adc
dec
jge
ljmp
cmp
push
mov
sub
js
push
mov
add
adc
arpl
popf
ss
ret
jmp
dec
mov
nop
push
xor
push
lock
jle
mov
xorl
fsin
mov
subb
fisubrs
xor
stos
outsb
mov
push
jl
cli
popf
add
mov
in
xchg
sub
inc
fs
fwait
arpl
aas
imul
cmp
mov
xchg
movsb
movsl
add
lds
lcall
xchg
cmpsb
aas
and
int
js
jb
xchg
inc
pop
cwtl
adc
popf
jb
sub
push
ljmp
ret
or
xor
xor
repz
ret
stos
subl
mov
out
jo
sbb
xlat
mov
fistpll
lret
xchg
or
out
sbb
insl
cld
notl
dec
cmp
stos
sub
add
or
mov
aam
add
shrb
add
pop
fisttpll
add
in
data16
mov
imul
idivl
out
hlt
andb
cmp
daa
dec
xchg
out
fdiv
pop
jae
imull
mov
lcall
das
ror
cmp
in
mov
xchg
scas
sbb
enter
lret
xor
lock
les
add
sbb
int3
sub
or
adc
cwtl
lret
pop
daa
xor
xchg
aam
xchg
idivb
push
orl
in
mov
xchg
ficompl
fcoml
cmp
pop
insb
out
dec
push
push
mov
jl
out
loop
and
stc
stc
icebp
bound
inc
mov
mov
aas
sub
or
xor
out
pop
lods
repz
or
repz
xchg
dec
pop
rorb
rsqrtps
sbb
jecxz
loope
in
pop
sarl
enter
jbe
not
sub
push
pushf
xor
push
jns
mov
movsl
call
icebp
mov
decb
mov
jbe
aaa
mov
aaa
scas
sub
xchg
in
imulb
add
sbb
shll
push
int
cmp
cwtl
push
stos
xor
out
xor
xor
cmp
fs
loopne
mov
popf
and
pop
test
jp
or
and
push
pop
or
es
xor
sbb
loopne
shlb
sub
fcompl
fisttps
jo
cmpsl
jb
dec
mov
scas
pop
jge
pop
or
test
shrb
es
xor
fsubs
out
jnp
jle
es
into
inc
inc
add
jb
push
icebp
je
xor
imul
and
dec
pop
clc
jl
or
jo
rorl
mov
mov
mov
movsl
mov
inc
mov
xchg
jbe
in
inc
push
cmp
pop
ds
push
fs
call
inc
xchg
fs
ljmp
nop
test
inc
xchg
push
xchg
enter
jmp
out
or
inc
mov
das
insl
add
xchg
pushf
imul
push
ja
or
mov
adc
out
cmpb
sub
mov
push
sub
sbb
jecxz
cmp
or
sarb
push
fidivrl
add
add
cli
out
cmc
out
mov
sbb
adc
lahf
aam
inc
xchg
popf
dec
repz
jl
daa
mov
dec
fdivl
add
mov
fmuls
push
fisttpl
popf
es
push
out
mov
dec
jnp
jns
hlt
mov
mov
imulb
adc
mov
mov
or
fcmovnb
mov
ljmp
jge
hlt
pop
cmc
jmp
cwtl
inc
aas
cmpsl
stos
rcl
test
stc
insl
mov
inc
sbb
push
daa
cltd
mov
scas
pop
out
outsl
lret
mov
and
andl
xchg
mov
cmp
mov
ljmp
mov
jmp
or
sahf
push
je
lahf
mov
xchg
or
jmp
mov
jae
pop
fnstsw
int
es
mov
inc
or
and
testl
fcomi
movsl
push
or
pop
cmp
sub
sub
and
sbb
mov
mov
mov
stc
xchg
adc
nop
jge
or
jb
mov
dec
mov
mov
test
mov
dec
sub
aad
lods
decl
dec
xor
pushf
cmpsb
mov
jmp
push
xchg
dec
inc
push
xorb
aas
scas
pop
sti
or
mov
out
xchg
stc
adc
cmc
andl
and
or
inc
push
sub
sahf
or
jmp
popa
push
mov
adc
ffreep
mov
cmpsb
daa
adc
decl
imul
je
mov
and
in
imul
pop
jnp
scas
cs
pop
mov
lcall
jb
xchg
lea
mov
add
xchg
sub
inc
outsl
pop
or
movsl
push
dec
fistps
mov
pop
push
ljmp
sahf
xchg
xchg
mov
mov
push
fiadds
gs
sbb
xor
xor
ja
dec
sub
repnz
mov
outsb
shll
jae
jp
cld
pop
iret
and
mov
and
shlb
mov
scas
push
out
pop
jle
sbb
sbb
repz
es
movsl
mov
into
mov
dec
mov
lret
stos
mov
sbb
jecxz
call
jp
mov
push
push
cltd
mov
cmp
mov
mov
insl
xor
sbbl
mov
subl
les
fists
xor
sahf
movsb
mov
mov
daa
xor
mov
adc
out
push
mov
insl
fwait
xor
fiaddl
xchg
push
int3
mov
imulb
fimuls
test
sbb
pop
fs
fidivl
sub
cltd
icebp
stc
out
jb
insb
add
sbb
loope
mov
cmp
inc
mov
push
xchg
sub
fldenv
pop
out
xchg
pusha
es
cmp
adcl
loop,pn
or
decl
jg
or
int
lret
or
fs
sub
adc
je
add
popa
jle
rolb
out
jns
or
hlt
lcall
dec
adc
push
dec
jecxz
fisttps
test
aaa
inc
cltd
adc
push
inc
in
mov
push
rclb
iret
iret
dec
cmp
ds
arpl
fidivrl
mov
pop
mov
sarl
push
bound
mov
mov
mov
push
add
cltd
push
mov
push
cld
pop
pop
shrd
mov
aaa
xchg
movsb
jg
idivb
mov
outsl
lock
xor
jmp
push
lods
or
out
sub
fidivrl
in
out
adc
cmp
pop
and
mov
mov
push
mov
cmpsl
cwtl
xchg
mov
sub
imul
mov
mov
mov
loopne
mov
enter
fdivs
je
nop
mov
inc
cmc
daa
out
mov
sbb
sbb
std
mov
push
jp
mov
roll
int
sub
add
stos
inc
popf
insb
inc
pop
mov
pop
std
pop
jbe
or
mov
aad
cmc
xchg
testb
dec
add
lods
pop
pop
movsl
mov
jno
xor
add
gs
loopne
cmc
xchg
jb
arpl
sub
pop
push
icebp
adc
push
or
les
inc
movsb
mov
dec
dec
xlat
mov
xor
out
push
add
mov
add
fcoms
cmp
jl
dec
aaa
mov
out
es
xchg
push
mov
movsb
adc
push
push
insl
js
jmp
sbb
xchg
cmp
dec
fs
cmp
mov
xchg
popa
push
add
mov
adc
cmp
mov
pop
ljmp
je
pusha
lods
test
inc
gs
inc
out
adc
daa
ret
or
decb
inc
movsb
dec
mov
das
mov
cmpsl
ficompl
jns
sbb
sarl
or
pusha
sub
and
mov
lock
inc
js
fcomi
cmp
movsl
mov
or
dec
cld
pop
mov
xor
insb
cmpsb
cmp
mov
loop
sub
stos
sub
sbb
call
ret
sahf
mov
and
aas
xor
je
out
pop
call
mov
ss
and
xor
adc
pushf
mov
ds
xor
mov
mov
ficomps
xor
rorl
jl
jnp
mov
and
fsubp
cmp
fprem1
je
mov
mov
fidivs
cmc
jmp
fistps
and
sbb
jbe
jnp
bound
out
outsb
push
pop
icebp
repnz
mov
mov
pop
dec
fidivs
xor
bound
mov
shlb
aas
pop
out
lcall
inc
popf
pop
push
lods
xchg
clc
pop
push
push
insb
cmpsb
test
inc
inc
ret
mov
mov
lods
lret
out
lods
push
cmc
adc
dec
and
and
imul
iret
jbe
pop
xor
dec
pop
inc
sub
or
sbb
mov
nop
xor
repnz
outsl
arpl
rcr
jge
add
testb
inc
pusha
dec
cmpsl
pusha
or
mov
jo
add
mov
cltd
lret
mov
loopne
adc
cmp
xchg
sbb
ja
rcrb
mov
int3
pop
std
adc
xchg
aaa
jp
outsb
or
and
inc
pop
pop
fimull
cltd
popf
pop
in
addb
push
mov
lea
mov
xor
cs
test
sahf
testb
fs
add
push
or
dec
sbb
daa
negb
out
daa
cwtl
addb
daa
cmp
adc
mov
mov
sub
in
jae
popl
xchg
xchg
stos
pop
div
and
push
jne
cli
xor
pop
and
ret
sub
insl
pop
int
test
or
cmpsb
movsl
push
inc
je
adc
xchg
test
mov
and
hlt
mov
aas
add
xlat
cmpsl
pop
xor
imul
clc
mov
add
cmp
mov
cmc
dec
sti
and
stos
pop
fcompl
out
dec
cmpsl
fs
cld
sbb
pop
ret
mov
mov
lods
shlb
push
imul
xchg
jmp
sbb
in
in
pop
and
test
es
stos
imul
outsb
cmp
xor
fsubs
push
push
xchg
fsubl
cmc
inc
push
jp
fisttps
add
adc
cmc
add
push
addr16
jecxz
jmp
cmc
dec
les
sub
inc
cs
xor
jle
adc
test
cmpsb
xor
pop
sbb
adc
mov
xlat
popf
test
test
mov
push
repnz
and
stos
lret
pop
aam
jle
adc
dec
xchg
outsl
out
out
out
xchg
movsb
or
cld
outsl
ret
sbb
push
xchg
sbb
icebp
rorl
push
pop
aas
stos
mov
push
jno
xchg
lret
and
mov
push
cmp
xor
sub
or
punpckldq
pop
fsubr
cmp
dec
cli
leave
add
dec
pop
test
xor
lock
pop
jnp
dec
loopne
add
lods
pushf
mov
call
sub
addr16
bound
mov
fucompp
inc
shrb
pusha
add
cmp
dec
pop
mov
dec
and
imul
stos
mov
xchg
insl
xorb
js
les
pop
addr16
scas
imul
loope
in
iret
out
dec
outsl
lret
sub
lcall
fs
js
adc
xchg
mov
sub
ljmp
push
in
dec
or
nop
out
aaa
sbb
mov
cmp
outsl
mov
or
dec
iret
psllq
fsubrl
call
enter
add
cmc
xor
cmp
cli
cmp
neg
push
xor
jle
sub
push
aam
mov
xor
jae
cmpb
jbe
cmp
scas
push
popf
cmp
imul
test
mov
inc
mov
jecxz
jmp
sub
gs
enter
push
jle
inc
inc
pop
mov
push
ss
movsb
mov
xchg
loopne
lea
xor
push
ja
lahf
mov
mov
mov
insl
jl
mov
adc
xchg
insb
cmc
dec
ljmp
enter
jbe
xor
dec
sbb
jp
push
adc
or
xor
stos
xchg
or
js
sbb
or
insb
inc
jbe
outsl
inc
jb
ficoml
dec
jp
adc
jmp
ss
jnp
pushf
out
jo
ds
push
inc
jge
icebp
cmp
jbe
stos
adc
stc
cmp
jo
lds
inc
push
addr16
xor
fstp
sub
mov
xor
rclb
sub
cmc
xor
pop
inc
in
xchg
pop
push
arpl
shlb
mov
jecxz
out
jae
lods
or
test
mov
push
int
movsl
cmpsl
iret
pop
dec
hlt
inc
test
sub
cli
dec
sti
movsb
test
sbb
lods
cmpsb
fmul
ret
ss
pop
imul
jb
stos
out
cmp
xor
jle
ret
mov
xor
pop
fcom
jmp
jbe
sarb
out
lock
movl
subb
sbb
pop
push
sti
jo
push
and
jmp
imul
mov
arpl
sub
cld
or
cmp
outsb
jmp
dec
and
mov
push
jns
pushf
dec
pop
rcll
stc
ds
loope
daa
mov
inc
xor
inc
mov
in
ja
fstpl
mov
adc
cs
jnp
sub
cli
xor
or
cli
insl
inc
xchg
pop
push
clc
sbb
bnd
ja
mov
stc
inc
cmpsl
or
hlt
mov
pop
movsb
mov
adc
out
and
mov
out
or
xchg
push
gs
punpckhdq
je
imul
xor
push
sub
dec
push
mov
mov
ljmp
lahf
pushf
test
fstp
jb
imul
popa
jb,pn
lock
sbb
fwait
adc
mov
and
add
rolb
xchg
cmpsl
out
int
xchg
rcrb
jl
pop
es
mov
adc
ds
sbb
mov
xchg
jl
cmp
clc
das
pop
shl
ret
jmp
rcr
dec
leave
lds
or
shll
or
inc
fadds
inc
into
push
add
inc
push
xor
pop
dec
mov
lock
xchg
pop
push
stos
sbb
cmp
lock
or
add
jae
jmp
in
test
leave
insl
ret
das
jnp
xor
enter
fcoms
push
sbb
adc
push
int3
pop
adc
aas
or
or
mov
addr16
xor
rol
insl
cmp
mov
in
or
mov
pop
ss
testl
jno
adc
mov
push
cwtl
js
xlat
inc
adc
and
mov
or
ss
or
xchg
xor
or
dec
pop
shl
adcb
fcomip
arpl
xchg
fs
mov
inc
xor
xlat
adc
std
rolb
fisubrs
mov
jge
aam
stos
push
insb
or
mov
dec
scas
push
les
sub
cmp
cmpsl
aam
rclb
repz
rorl
imul
enter
or
andb
push
sbb
stos
leave
lods
repz
and
mov
xchg
sbbb
and
xchg
dec
cmc
xor
xchg
mov
out
add
call
jmp
inc
cld
dec
js
enter
pushf
cmpsb
add
pop
mov
inc
inc
adc
into
cmp
test
dec
or
push
idivb
or
pop
add
or
jecxz
scas
or
scas
xor
clc
aaa
sub
or
mov
ret
leave
repnz
adc
inc
jns
out
lret
inc
adc
pop
repz
rcll
sub
not
aam
enter
push
dec
js
rolb
or
jno
gs
sbb
mov
sub
mov
in
push
loope
repnz
xor
or
in
int3
fcompl
out
mov
add
and
popf
fsubl
pop
in
rcll
mov
xchg
daa
sbb
jp
les
cmp
aaa
ror
xchg
sub
sbb
testb
call
xchg
int
or
cli
aad
push
stos
lock
sbb
or
and
inc
lods
jle
in
dec
mov
in
loopne
add
jp
mov
sub
mov
dec
push
mov
in
in
mov
enter
jg
imul
mov
in
inc
into
jle
jecxz
lods
or
push
jp
clc
jmp
adc
cld
or
adcl
mov
xor
mov
xor
add
negb
test
inc
push
or
mov
jno
les
jmp
shrl
jo
movsb
enter
push
icebp
push
mov
adc
gs
mov
inc
jge
test
cmpsb
xlat
fistps
sub
jmp
mov
ja
inc
fidivrl
pop
std
sub
mov
xchg
and
adc
enter
inc
jecxz
repnz
pop
push
out
sbb
pop
dec
push
fs
test
jecxz
lcall
pop
or
inc
inc
mov
mov
mov
push
shrl
inc
testl
inc
mov
mov
lods
push
popa
pop
sarl
cmpl
mov
xchg
sub
jge
insl
call
cmpsl
cmp
icebp
sub
cmp
xchg
xchg
movb
add
mov
fisttps
lea
adc
ret
push
aad
jp
jnp
mov
shl
mov
inc
mov
sub
mov
push
dec
hlt
repnz
pop
adc
sbb
xchg
scas
gs
fs
loope
mov
cmpsb
repnz
mov
and
inc
shrb
addb
sahf
pop
rorb
imul
movsb
pop
sbb
cmp
das
dec
and
push
push
nop
sbb
push
insl
imull
clc
inc
cs
mov
push
sub
stos
lods
sub
test
test
jl
cmp
movsl
js
or
mov
pop
dec
lock
pop
fs
lahf
inc
or
xchg
push
xchg
fstpt
sbb
dec
je
jl
sbb
mov
xchg
mov
clc
xchg
sarl
ret
lcall
or
push
in
sub
popf
fsubrs
fcomi
cmp
cmp
cwtl
pusha
cltd
and
sub
push
push
xor
loopne
jmp
sbb
loope
repnz
and
cmp
add
or
dec
dec
jnp
scas
leave
lods
push
lds
cmpsl
sahf
sbb
push
rol
pop
xor
mov
xchg
dec
jl
dec
pushf
mov
pop
pop
push
sub
add
mov
in
sbb
or
enter
jno
pop
sub
sbb
push
out
push
mov
and
lods
pop
pop
testb
or
jbe,pt
xchg
clc
fs
lret
jns
outsl
or
mov
popa
sti
mov
repnz
popa
pop
add
and
mov
push
aam
sub
in
lock
imul
push
lret
repz
pop
mov
inc
mov
subl
cli
sbb
into
imul
arpl
dec
testb
jae
es
mov
push
js
mov
cmpsb
lcall
in
ja
lock
mov
hlt
iret
jbe
sbb
scas
mov
cmp
inc
sbb
fnstenv
and
scas
mov
cmp
pop
xchg
xor
inc
adc
adc
into
insl
cltd
shll
popf
jns
test
xchg
sbb
xor
in
pusha
daa
or
out
faddl
mov
out
stos
push
or
and
cmp
push
ror
jo
jae
or
adc
adc
fcmovnu
adc
jbe
push
xchg
mov
mov
fs
arpl
pop
mov
or
pop
mov
pop
inc
mov
das
mov
scas
add
stc
cmpsb
pop
sub
das
repnz
push
cmpsb
decb
in
fnstcw
push
xlat
mov
sub
outsb
jle
sbb
shrl
repnz
push
sub
inc
adc
mov
ror
cmpsb
pop
out
push
mov
add
sbb
adc
cld
fs
cld
and
cmpsl
mov
mov
fmulp
xor
mov
in
inc
inc
mov
mov
in
cld
das
fsubs
cmp
sub
add
dec
jo
jle
div
scas
mov
sub
in
jnp
popa
ja
leave
loop
xlat
jo
and
shll
in
cmp
mov
pop
inc
sub
nop
xchg
clc
mov
pusha
inc
mov
or
cld
xchg
mov
fldl
loopne
iret
ja
aad
xchg
das
adc
lds
fyl2x
daa
data16
mov
sbb
data16
cmp
mov
bswap
aad
call
daa
pop
sahf
mov
lret
xchg
test
cmp
xchg
orb
lcall
xchg
push
lds
repnz
mov
lret
outsb
pop
add
or
jg
jle
clc
or
sti
push
push
notb
mov
push
je
inc
lea
dec
les
sub
fistpl
mov
repnz
mov
test
mov
inc
sahf
mov
clc
xchg
dec
inc
push
jmp
out
popf
mov
stos
and
mov
ret
xchg
xor
cmp
inc
shll
dec
adc
outsb
pop
mov
mov
mov
adc
jg
lods
outsb
push
push
loope
test
pop
jg
out
push
cltd
ret
push
shl
ss
xchg
rolb
rcrl
xchg
inc
pop
mov
incl
push
imul
jmp
repnz
imul
cmp
add
mov
jge
jmp
and
xlat
loop
and
jae
mov
mov
push
ljmp
test
push
cli
xchg
jno
push
sbbl
xchg
jge
cld
ficompl
lahf
push
push
andl
push
mov
adc
jo
jbe
pop
sub
in
jl
test
add
sbb
fidivl
add
ret
sti
stos
divl
or
add
stc
lock
xchg
cmpsl
mov
adc
lret
adc
outsb
push
in
sub
adc
sub
ret
divl
jg
cmpl
imull
es
roll
pop
xchg
in
and
add
jecxz
hlt
push
arpl
pusha
in
sub
jg
loope
lods
test
mov
fnstcw
lods
aaa
or
scas
ficomps
or
push
push
aam
in
imul
enter
xchg
mov
mov
negb
fistps
pop
ds
pop
sub
xchg
cwtl
jecxz
orb
lret
cmpsl
adc
nop
and
popf
cld
repnz
xchg
push
mov
hlt
pop
adc
fsubr
out
jl
jbe
xchg
push
xchg
mov
scas
ljmp
jb
add
cmp
imul
ret
inc
cltd
jb
inc
movsl
cmp
mov
stos
ficompl
sbb
cmp
jg
push
lret
mov
add
pop
push
cmp
in
mov
clc
aas
jb
xchg
jg
sub
rcrb
insb
mov
add
jbe
iret
mov
ss
clc
sbb
add
ret
imul
aaa
inc
jno
mov
push
pop
test
add
jp
imul
push
mov
dec
adc
ficoml
mov
mov
sbb
inc
jb
fimuls
ret
daa
mov
inc
shrl
jmp
dec
inc
add
push
jbe
imull
jne
loope
js
outsb
pop
rclb
adcl
xor
inc
int3
or
mov
mov
fdiv
xor
out
xor
test
leave
test
inc
dec
lods
mov
mov
popa
inc
lahf
and
leave
popa
clc
dec
xor
inc
ss
mov
push
jo
addr16
mov
add
rorl
in
test
loopne
rolb
lahf
mov
push
jl
movsl
sub
cwtl
les
jmp
xor
mov
dec
push
or
sbbb
repz
adc
xchg
cmc
sti
mov
dec
xchg
shrl
stos
xor
mov
outsl
pop
add
jle
repz
mov
push
cmp
sbb
xor
xchg
pop
hlt
fwait
imul
add
push
daa
pop
loopne
lahf
iret
or
iret
xchg
sarb
int3
sbb
and
dec
movb
add
fmul
mov
subps
pusha
shll
push
or
sub
enter
jmp
lods
add
add
int3
xchg
mov
push
adc
push
add
ja
aad
mov
pusha
out
imul
xor
cmp
int
mov
movsl
and
jmp
jge
in
out
arpl
fldt
sub
mov
jb
sbb
adc
loope
pop
sub
dec
leave
push
js
jl
insl
fs
push
push
adc
sub
lcall
or
in
fs
jae
pop
jo
out
prefetcht0
push
fwait
dec
cmp
js
repnz
ss
sub
push
pusha
cmpsb
jmp
sub
clc
mov
dec
addr16
xor
cltd
mov
aas
sti
fmull
rcl
fwait
leave
cmpsl
mov
leave
lret
pop
mov
lahf
std
icebp
xchg
leave
aam
mov
pushl
xchg
sub
or
cmp
data16
mov
mov
cltd
xchg
sti
push
shll
sbb
jns
daa
lret
sbb
pop
inc
push
shll
popf
xchg
aas
xor
add
popf
imul
bnd
cwtl
psubq
xchg
sti
rorb
ljmp
mov
jnp
lods
inc
inc
xchg
push
jp
pop
pushf
and
pop
cmpsb
nop
in
push
mov
in
pop
mov
nop
dec
stos
outsb
and
cmpsb
adc
sbb
pop
inc
push
cwtl
adc
pop
mov
xor
call
push
movsb
rolb
mov
lds
xlat
sbb
lock
xor
jge
das
orl
pop
pusha
in
xor
mov
lods
incb
loop
dec
out
xchg
or
out
mov
arpl
test
mov
sub
and
in
sti
adc
sahf
xchg
jge
adc
loop
loop
bnd
pop
and
enter
and
and
imul
nop
mov
or
inc
push
dec
js
pop
mov
jle
mov
mov
and
xor
movb
in
mov
and
mov
jecxz
outsb
in
adc
or
jecxz
mov
or
sub
popf
or
mov
data16
dec
sub
adc
scas
jecxz
js
mov
test
add
pop
sbb
cmp
inc
enter
push
sub
mov
jg
inc
fnstcw
fwait
cmp
pop
adc
mov
mov
cmp
out
dec
dec
mov
sbb
pop
cld
jge
pusha
lds
data16
lahf
addr16
nop
andb
add
xchg
jmp
mov
push
cld
or
ds
out
dec
xor
ljmp
mov
sbb
sub
les
push
enter
fs
lea
xor
stos
loop
je
sub
push
cmp
pop
inc
xchg
jp
cmp
mov
shl
xchg
adc
fisttps
test
mov
pop
inc
imul
and
jno
add
repz
pop
loope
out
mov
mov
pop
pop
cltd
cwtl
stos
dec
xchg
out
adc
bound
sahf
inc
je
jbe
and
mov
ja
xor
insb
out
pop
mov
mov
add
or
loopne
jge
pop
cmp
inc
pop
inc
dec
xchg
pop
aad
or
pop
jns
mov
fnstcw
lret
lcall
cmpsl
out
lahf
mov
add
pop
mov
xor
xchg
cli
dec
outsl
int3
dec
push
push
fs
adc
addb
out
or
pop
cmc
inc
sub
popa
inc
rcl
mov
dec
jmp
leave
cld
gs
lock
enter
inc
xor
jb
xchg
idivl
lea
lret
adc
aas
pop
inc
outsb
sub
imul
repnz
dec
sti
test
testb
xor
pop
subb
pop
cmp
insl
mov
dec
gs
push
push
xor
outsb
sbb
test
and
push
shl
pop
cmpsb
xchg
sub
leave
pop
out
xchg
mov
adc
lods
lods
loop
mov
adc
inc
cld
scas
jb
inc
inc
lret
add
stos
or
fsts
jmp
mov
xchg
mov
dec
bound
xchg
jne
xchg
ficoml
test
xchg
mov
mov
jbe
fwait
data16
sub
gs
push
jae
cmpsl
lods
imul
shlb
cwtl
in
call
pushf
add
pop
push
ret
imul
fcmovnb
mov
mov
test
dec
sub
mov
sbb
ret
adc
in
adc
aad
insb
ljmp
sub
cmp
cwtl
rol
in
addb
sbb
test
int3
test
shrl
jmp
pop
push
leave
and
addr16
loopne
outsb
rcll
test
jo
mov
sbb
mov
insb
negb
rorb
fmuls
inc
fwait
jbe
in
je
sub
fs
cli
dec
jmp
jns
daa
out
fnsave
mov
dec
mov
jo
mov
cld
hlt
lea
ja
call
shll
out
and
clc
and
shrb
bound
cmp
jl
xlat
cld
or
sub
arpl
fisttpl
cltd
scas
jne
push
and
mov
mov
fadd
fildl
rcrl
push
out
inc
rcr
fistps
add
xchg
jne
arpl
cltd
add
mov
roll
push
lds
or
cmovbe
loopne
jecxz
scas
mov
rcrb
sar
cmp
xlat
dec
xor
in
dec
xor
mov
int3
je
andb
pop
mov
xor
cmp
fisubs
push
push
gs
inc
mov
outsl
mov
cmp
push
shlb
aad
push
sahf
fdivp
inc
inc
mov
or
mov
xchg
add
cmp
fstpl
or
sbb
adc
inc
dec
add
adc
mov
add
push
in
xor
mov
mov
ret
xchg
das
add
pop
enter
jp
or
hlt
dec
lds
aaa
add
leave
mov
pushf
dec
fmuls
inc
pop
leave
fs
jnp
adc
push
sub
sub
sbb
jbe
dec
lock
inc
adc
add
mov
enter
lock
jne
push
inc
scas
call
add
add
addl
push
jns
imul
fldenv
ss
sahf
sahf
and
dec
mov
xchg
dec
xchg
aas
jne
mov
pop
icebp
sbb
jbe
iretw
push
ja
cmpsb
dec
xor
outsb
in
inc
push
imul
neg
clc
xor
or
fdivl
sbb
add
inc
jno
sub
and
or
jbe
int
add
lcall
enter
ds
add
mov
cli
xlat
jmp
shll
jp
xchg
lret
dec
mov
mov
mov
sbb
inc
push
in
std
daa
fidivrs
insl
and
add
imulb
rep
inc
bound
or
js
and
jns
pop
rorl
or
pop
cmc
jbe
pop
ljmp
dec
lds
xchg
xor
sbb
pop
movsl
adc
sahf
out
inc
push
mov
adc
xchg
cwtl
mov
es
add
lret
add
loop
movsb
dec
insb
fsubrs
fs
ss
movsl
ret
pop
xlat
pop
daa
lcall
cmp
xor
loop
sbb
enter
into
adc
scas
mov
mov
or
cmp
cmp
sti
jle
mov
jecxz
pop
mov
ljmp
jl
cli
mov
mov
sbb
xchg
jnp
xor
in
cmpsb
mov
jecxz
pop
mov
icebp
or
xor
adc
cld
push
xchg
sbb
icebp
cld
mov
in
dec
cld
xchg
sub
push
pop
jge
cmp
push
aad
inc
aaa
rorb
insb
inc
pop
jmp
fnstsw
nop
dec
rcll
jnp
mov
stos
lcall
mov
xor
or
push
push
mov
jmp
test
movl
cli
fsubl
inc
mov
cmp
push
incl
cmp
std
outsl
pop
or
enter
mov
test
sbb
cli
cld
sub
add
cmpsb
mov
push
cld
ss
pop
add
push
daa
dec
and
mov
push
dec
xor
inc
xorb
add
mov
push
jmp
cmpsb
push
lods
jg
adc
cmp
dec
mov
lock
clc
loopne
dec
ret
rorl
push
les
icebp
push
mov
adc
and
inc
add
adc
sbb
std
in
cld
push
sahf
mov
cmp
scas
adc
add
cld
out
aaa
stos
ss
and
dec
mov
dec
mov
in
add
ja
xchg
mov
mov
repnz
aam
xlat
jle
xchg
cld
inc
push
inc
pop
pop
jb
enter
std
arpl
in
lock
ds
sub
sub
jnp
mov
fwait
xor
cltd
out
out
sbb
or
ljmp
dec
inc
loope
imul
into
lods
sbb
adcl
cmpsb
in
test
adc
xor
sub
push
hlt
test
adc
sbb
out
outsb
cs
notb
sbb
fistps
jmp
add
sbb
push
jl
pop
jge
sbb
cli
rcll
test
cmpsb
sub
mov
push
test
mov
lods
mov
jae
pop
add
call
lock
pop
inc
fidivs
ffreep
mov
jns
push
movb
std
mov
sbb
pop
sub
inc
sbb
adc
mov
add
add
xchg
out
loop
testb
push
jecxz
lods
jae
dec
aad
fidivrs
mov
dec
mov
mov
stos
inc
insb
xor
insl
rcl
js
pop
dec
mov
add
popf
fmuls
xchg
inc
xchg
adcb
mov
shlb
stc
jge
pop
add
xchg
pop
fimuls
push
add
ss
fs
mov
fcom
test
xorb
lods
test
sub
fistpll
test
mov
lds
xchg
xchg
fisubs
xchg
imul
jg
enter
sbb
push
loopne
adc
cmp
mov
mov
lock
scas
mov
and
arpl
push
pop
jge
xchg
xchg
leave
lods
inc
out
dec
shr
fnstenv
mov
lock
ds
sbb
and
movsb
in
lods
adc
shlb
push
xchg
sbb
lods
scas
fbstp
fabs
shr
jns
divl
sbb
jb
pop
adc
push
call
sub
sub
push
loopne
push
sbb
lret
xchg
int
or
add
stos
lret
in
mov
repz
xor
pop
std
pusha
iret
dec
cmpl
cmp
test
test
mov
addr16
xor
sbb
jb
cmpsb
push
push
pop
push
mov
enter
inc
jmp
xchg
pop
pop
dec
mov
sub
lds
mov
test
stos
sub
mov
in
bound
cltd
jmp
xor
xchg
in
in
stos
je
xor
xchg
fiaddl
adc
loope
pop
xor
fs
orl
sbb
pop
xor
test
das
push
mov
sub
clc
mov
add
popf
xchg
add
dec
sbb
jb
mov
sub
idivl
lods
loopnew
adc
nop
bound
push
xchg
inc
shrl
addl
adc
dec
cmpsb
orb
lret
enter
pop
cwtl
popa
push
jne
popa
rcrl
ficoms
ficoml
adc
cmp
leave
leave
hlt
scas
mov
loope
imul
dec
nop
in
ljmp
jp
fcomip
lret
push
add
sbb
push
je
cmp
jae
gs
mov
mov
jno
in
lds
inc
xchg
idiv
xor
mov
mov
and
out
mov
ret
cwtl
pop
lock
xchg
push
cmpsb
inc
and
xor
jno
fcmovne
pop
repz
sbb
sahf
and
xchg
jae
dec
out
loopne
jmp
pop
inc
jg
jge
jp
adc
fwait
ret
add
movsl
call
icebp
in
test
add
jo
or
repz
dec
push
adc
jg
mov
xor
sti
inc
cmp
popf
aad
fs
out
jl
sub
push
fstpt
sbb
lcall
in
incl
push
popa
and
add
pushf
into
mov
scas
ja
dec
loope
dec
bound
aas
ja
nop
or
in
push
lods
mov
mov
subb
add
mov
xchg
pop
enter
lea
push
push
or
fstps
repnz
rcr
cmp
push
out
and
call
test
addr16
scas
fwait
orl
outsl
loopne
rcrb
jl
xchg
lcall
call
inc
int3
cmc
pop
mov
enter
jmp
jp
or
and
pushf
stos
int
xor
or
pop
inc
into
test
pusha
movsb
mov
mov
xor
ljmp
and
pushf
popf
push
test
ret
jbe
popf
add
xchg
scas
push
jg
dec
xor
mov
pop
lret
mov
mov
pop
ds
mov
xor
push
clc
gs
jo
adc
xchg
aaa
pop
mov
push
adc
cmpsb
inc
lret
mov
mov
cmp
push
arpl
loop
jg
data16
bound
sahf
sbb
testl
mov
push
sub
ret
inc
int3
xlat
in
int
jae
mov
push
push
push
xor
mov
add
or
push
dec
add
mov
lcall
bswap
sub
adc
inc
pushf
fs
inc
lea
inc
mov
xchg
movsb
adc
push
mov
test
push
jae
cmpl
sub
xlat
sub
jb
push
jle
pop
test
cli
sub
mov
je
inc
xchg
or
pop
arpl
test
arpl
inc
arpl
or
mov
xchg
dec
add
cmp
mov
mov
test
cmpsb
jle
cmp
adc
les
fcoms
inc
xlat
xchg
test
jne
ror
mov
repnz
push
push
cmp
xlat
cwtl
imul
xchg
cmp
dec
ds
push
lods
mov
iret
cwtl
pushf
jge
repnz
sub
or
gs
repnz
loope
mov
ljmp
mov
mov
and
in
pop
inc
pop
and
jns
fstpl
movsb
inc
push
cmpsl
movsl
jae
insb
add
xor
popw
stos
stos
divb
mov
outsb
push
or
cmpsl
dec
inc
outsl
xor
lret
cmp
or
jbe
pop
imul
fcoml
xlat
lock
cmp
add
scas
ret
xchg
out
push
call
es
mov
mov
fs
les
dec
je
jmp
enter
scas
addl
push
outsb
out
add
or
cmpsb
test
in
ret
nop
rorb
add
mov
pushl
dec
mov
sub
out
or
sub
pop
and
mov
pop
iret
add
lods
xor
aam
dec
adc
lods
sub
jb
mov
lods
mov
rorb
imul
mov
xchg
xor
add
add
pop
cmp
push
cmp
pop
stos
inc
stc
out
jne
jge
push
jno
mov
sub
es
hlt
sub
inc
xchg
icebp
fwait
and
out
sbb
popf
lods
fwait
add
xchg
shll
push
xrelease
scas
xchg
mov
mov
mov
pop
mov
mov
ret
mov
adc
push
bound
gs
arpl
outsb
dec
outsl
pusha
xor
fisubrl
jno
dec
adc
cmpsb
and
ss
push
mov
mov
xchg
mov
jp
stos
or
sbb
bsr
pop
mov
dec
or
test
add
inc
mov
int3
sbb
out
or
mov
out
xor
repz
sbb
or
scas
or
aam
out
cld
inc
sbb
sub
je
adc
sub
xchg
rcll
je
aaa
not
cmpb
fs
jbe
scas
mov
push
incl
add
inc
mov
inc
or
jg
outsl
vhaddpd
es
icebp
fisttpll
mov
addr16
out
clc
mov
and
add
adc
dec
fimuls
sbb
inc
imull
push
jne
mov
sub
inc
jns
push
cwtl
int
imul
lret
lock
cli
mov
sbb
sub
imul
inc
pop
aad
mov
push
jl
in
jge
bound
sahf
mov
push
sub
js
or
dec
in
xorl
mov
fcmovb
jp
mov
aas
mov
aad
pop
jae
xor
dec
xchg
push
dec
jmp
rorb
cmpsb
lds
push
addb
push
pop
rorl
aad
jge
int3
mov
push
out
push
aad
jo
test
sub
test
les
sbb
push
scas
repz
jb
in
push
out
pop
adc
xchg
repz
popf
cmp
shrb
stc
push
push
ret
pop
inc
test
jne
cli
dec
movsl
cwtl
mov
adc
or
out
mov
enter
adc
mov
pop
mov
scas
pusha
and
int3
sub
sbb
movsl
pop
xor
fiadds
jg
xchg
lds
xchg
xor
push
iret
xchg
testl
movsl
jg
dec
mov
adc
decb
outsl
push
dec
dec
stos
xchg
data16
mov
inc
scas
bound
popa
cmc
push
scas
ret
xor
mov
les
shll
and
insb
lds
push
inc
bnd
pop
jnp
inc
lods
dec
cmp
scas
test
in
mov
jmp
sub
jmp
lock
nop
ja
out
or
in
sub
insl
sbb
pop
adc
movsb
aaa
shlb
int3
js
push
ret
shrb
cmp
mov
dec
fsts
cmp
orb
mov
pop
aaa
out
into
hlt
outsb
mov
fwait
int
test
dec
cmp
pusha
pop
inc
xchg
xor
adc
xchg
push
call
pop
sub
add
fldz
ds
add
lret
sbb
push
xor
movsb
mov
jbe
push
inc
adc
imul
shll
push
lret
inc
mov
lcall
outsb
mov
and
aas
stos
sbb
cmp
dec
mov
push
out
pop
cltd
fisttpl
arpl
ja
decb
aam
and
js
xchg
pop
lods
insb
repz
mov
push
cmp
sbb
dec
jnp
and
cmp
aas
jecxz
mov
loopne
in
call
xchg
mov
in
loopne
dec
ss
dec
jmp
lret
dec
sub
inc
lods
xor
or
inc
xchg
fwait
cmp
mov
xchg
xor
adc
cwtl
mov
cld
lock
loop
das
pop
insb
icebp
leave
lods
push
andb
in
cs
pushf
loopne
aas
cmpsb
push
jne
mov
int3
cmp
mov
shlb
sbb
scas
sub
jecxz
sbb
pop
aad
imul
stos
sub
in
and
lock
mov
push
xorb
in
xchg
outsl
loop
je
into
pop
cmp
xor
push
out
xor
jno
pusha
nop
ret
sbb
push
daa
loope,pt
add
mulb
pop
pop
movsb
xchg
les
lods
push
int3
xchg
mov
mov
pop
mov
xor
push
aas
leave
out
ret
push
mov
orl
push
decl
xchg
xchg
sbb
xor
cwtl
daa
push
cmp
xchg
xchg
shl
xor
jmp
sahf
fnstcw
dec
lahf
js
jns
push
scas
fiadds
inc
inc
add
inc
das
nop
inc
pop
inc
mov
jge
push
pop
inc
stc
jmp
xor
pop
add
into
sub
adc
add
outsb
mov
and
or
int
xchg
inc
adc
lahf
push
adc
jae
clc
xor
adc
adc
rolb
mov
popl
push
or
shll
mov
js
cli
mov
iret
adc
pop
xor
cmp
mov
sub
xor
std
std
into
mov
ljmp
movsl
call
je
inc
cmc
mov
inc
dec
inc
mov
incl
cmp
sbb
sbb
enter
and
std
into
out
ja
hlt
test
pop
lahf
stos
hlt
and
mov
mov
jmp
and
fldl
lea
xchg
cmpsl
in
xchg
mov
jle
sbb
sbb
jl
insb
or
nop
stos
or
loopne
bound
xchg
out
fwait
sti
and
sbb
jmp
sarb
jmp
hlt
jge
sbb
in
leave
xchg
push
push
xor
adc
push
cmc
stos
jg
sub
adc
mov
sub
enter
orb
adc
xor
out
xor
dec
inc
inc
cmpsl
xchg
cmpb
sbb
dec
xor
push
mov
inc
adc
mov
xchg
mov
fwait
call
or
adc
or
popa
clc
rclb
lds
sub
xchg
sbb
int3
push
sub
xchg
cmpl
jmp
leave
cmpsb
push
loopne
lods
push
jp
ds
fdivs
add
in
pop
rol
insb
es
repz
sub
sub
testb
jecxz
cmc
dec
jne
push
sarb
pop
jge
mov
shll
imul
clc
sub
aaa
xchg
mov
lock
xchg
push
push
frstor
int3
xchg
icebp
xchg
mov
popa
xorl
in
or
dec
adc
rcrb
mov
xchg
dec
arpl
or
sub
mov
aad
mov
push
dec
andb
jp
or
cli
imul
mov
add
push
in
mov
out
xchg
jae
jo
ds
adc
and
add
bound
ss
sub
scas
cmp
inc
mov
xchg
aam
jecxz
loopne
stos
push
sbb
aas
jnp
fstp
jmp
adc
xor
pop
lret
push
push
es
mov
cld
mov
ret
add
or
and
insb
decb
fdivr
sbb
fbstp
and
test
push
push
repnz
xrelease
or
adc
xchg
cmp
outsb
loope
xchg
or
xchg
jg
push
sbb
ljmp
pop
add
fsubs
add
xor
add
push
push
fwait
pop
pop
mov
mov
pusha
mov
mov
aad
pop
push
mov
add
adc
pop
mov
mov
data16
jae
inc
fildl
xor
leave
dec
aad
jno
hlt
sub
shr
rcll
xchg
iret
pop
push
pop
jmp
xchg
pop
ljmp
ja
mov
jge
std
mov
pminub
inc
jmp
ss
push
xchg
xor
xchg
sti
push
cli
loopne
lcall
mov
dec
fwait
pop
jb
scas
gs
rcrb
jecxz
pop
out
lods
vcvtsd2si
sbb
cmpsl
mov
jmp
es
pop
js
cmpsl
aam
xchg
jp
js
dec
in
push
and
cmp
jns
sub
jbe
sbb
out
dec
arpl
insb
jo
dec
add
or
inc
and
aas
aad
xlat
jne
leave
cs
push
jecxz
push
mov
cmc
shll
pushf
ficoml
xor
fidivs
inc
push
icebp
pop
adc
in
clc
notl
xorl
lret
pop
aaa
push
and
fidivrl
cmpl
repnz
ljmp
mov
rclb
xchg
xchg
inc
xchg
scas
imul
add
cmp
jmp
dec
and
xchg
mov
jl
jo
add
sbb
adc
mov
jno
inc
cltd
xchg
int
xchg
cmp
jbe
addr16
push
repnz
in
test
ret
dec
lahf
push
dec
loope
mov
cmp
adcl
lods
lret
test
xor
and
push
push
mov
cwtl
sti
ja
mov
adc
push
xchg
adc
subl
test
lock
pop
push
sub
arpl
mov
adc
call
out
xchg
leave
xchg
pop
mov
iret
push
sub
and
adc
add
mov
mov
mov
or
sti
orb
sbb
das
jg
ljmp
lea
sub
cmp
cmp
or
shl
arpl
pushf
nop
cli
sbb
lods
dec
jecxz
std
jno
add
lock
jge
push
scas
lds
in
xlat
pop
jmp
pop
push
jmp
sbb
and
add
stc
inc
inc
jbe
mov
xchg
sbb
sub
mov
mov
scas
inc
sub
lret
mov
adc
fstpl
jge
sub
sub
cs
js
data16
ljmp
stos
outsb
orb
mov
movsl
dec
jg,pt
mov
adc
sbb
pop
or
hlt
dec
stos
scas
lret
jb
mov
les
js
push
fnsave
out
xchg
into
xchg
inc
incl
mov
dec
jmp
scas
xchg
xor
mov
ret
xor
pop
lods
inc
mov
shlb
and
push
test
test
insb
ret
aas
mov
sbb
insl
push
jne
push
sahf
add
inc
push
js
mov
xlat
loope
ret
subl
xchg
dec
jb
xor
fdivl
inc
sub
fistl
dec
rorb
imul
scas
pop
adc
lock
dec
jecxz
fs
lahf
cmp
sbb
dec
jo
sub
inc
mov
sub
or
or
lcall
cld
or
rcr
sub
sbb
push
pop
sbb
mov
jecxz
push
addr16
cmp
inc
sbb
pop
mov
int3
push
bound
mov
shrb
mov
ljmp
lds
inc
jns
jmp
dec
pop
and
jle
pop
ret
xchg
scas
popf
sub
fs
adc
clc
in
dec
adc
ret
xchg
cli
xchg
add
sbb
dec
add
pop
notb
mov
stos
out
mov
and
pcmpeqd
inc
mov
arpl
stos
xor
jmp
mov
aaa
or
jne
inc
push
mov
push
xor
push
and
out
jl
jg
subb
lcall
sbb
jmp
push
cmc
stc
xorl
jmp
xchg
and
lds
dec
push
sbb
pop
or
cs
call
pop
psrlq
sbb
lods
aad
movb
add
in
mov
ds
xor
cmpsl
and
shll
pop
nopl
lock
dec
xchg
insl
xorl
xchg
out
inc
test
push
push
cmp
sbb
push
mov
fildl
leave
mov
jae
mov
adc
push
stos
sub
xchg
stc
jp
or
pop
iret
adc
add
pop
in
and
xchg
mov
movsl
mov
aad
fnstenv
xchg
sub
dec
dec
jns
in
fs
mov
and
ja
cmpb
loope
inc
xor
je
sub
or
add
mov
jmp
les
or
stos
xchg
fidivs
test
test
sbb
dec
inc
xor
dec
xchg
dec
rcll
in
in
push
sbb
jne
inc
out
lods
addr16
loopw
xor
test
shll
mov
xchg
mov
jecxz
popf
jns
add
pop
and
xchg
lretw
push
jmp
shlb
cmpb
enter
jecxz
sahf
imul
xchg
jns
mov
sbb
and
sbb
push
xchg
mov
das
lret
sbb
mov
mov
cmp
cmp
xor
push
xor
or
sahf
ja
pop
mov
aam
add
push
scas
or
and
aam
jp
pop
mov
add
mov
jl
ss
ja
out
js
cwtl
mov
push
sub
inc
mov
aas
jle
jno
lods
outsb
jb
cmp
xchg
movsb
and
xor
pop
cmpsl
cmp
stos
lret
sbb
movsl
pop
jno
cli
movsb
movsb
pop
pop
jmp
lcall
push
add
mov
sti
mov
push
clc
or
and
imul
outsl
push
test
xor
mov
xchg
mov
jecxz
shlb
xchg
sbb
inc
adc
popa
push
cmp
pop
cmp
mov
leave
repnz
adc
sbb
xlat
jns
and
and
inc
sub
in
mov
lock
push
shlb
roll
aaa
ret
xor
sbb
test
mov
aam
mov
sbb
sahf
fwait
push
jbe
les
push
in
push
movsl
out
inc
fstp
xchg
add
cltd
sub
iret
es
push
cmp
push
ljmp
fwait
cld
sub
push
orl
jno
imul
aam
add
dec
aas
cmp
xchg
outsb
mov
into
add
sub
lcall
insl
push
pop
js
xor
push
lock
shrl
pop
lret
int3
outsb
mov
mov
mov
xchg
mov
jno
push
mov
dec
add
sub
sub
inc
div
mov
dec
inc
add
dec
imul
sarb
sub
flds
in
in
mov
ret
adc
ret
adc
ljmp
and
xor
sub
jns
cmpsl
push
loopne
into
push
outsb
inc
dec
ds
jae
jmp
mov
outsl
gs
jp
test
pop
xchg
movsb
loop
iret
notb
mov
cmpsl
lds
push
iret
and
dec
lea
sti
dec
das
decl
enter
mov
dec
andb
sbbl
rclb
pop
hlt
cs
insl
jnp
aaa
mov
lods
decl
ljmp
mov
cld
or
sbb
mov
mov
sbb
dec
sarb
cld
out
cmp
rcll
and
fidivl
pop
outsl
inc
and
pusha
and
insl
sahf
lods
outsl
in
jbe
adc
int
lcall
cltd
inc
pop
insl
jp
fs
add
mov
dec
in
out
push
adc
out
jg
call
xchg
jp
and
inc
in
jns
and
xor
or
adc
int3
and
out
ljmp
inc
addr16
jecxz
jmp
outsl
push
push
cli
shlb
test
sub
jne
inc
mov
mov
cmpsl
hlt
sub
and
lods
push
mov
into
adc
lret
sbb
sbb
mov
int
imul
lcall
mov
pop
add
scas
sub
in
jb
rorb
lahf
js
sbb
enter
jb
adc
cmpl
or
movb
cmp
ljmp
sub
pop
fsubrp
adc
mov
or
xchg
insl
push
adc
mov
out
cmp
repz
xor
dec
add
sub
inc
cltd
jle
xor
aaa
loop
hlt
cmp
aad
jl
sub
jmp
xchg
dec
sahf
jns
je
pop
pop
dec
cltd
clc
cld
add
mov
insb
jle
btsl
xchg
sbb
sub
loopne
mov
in
scas
xchg
pusha
aas
ja
mov
jmp
fmuls
sub
mov
xchg
cwtl
add
cmp
ret
sub
scas
rol
and
pop
pop
sbb
sub
int3
fcoml
out
aam
int3
jbe
shll
cmp
ds
inc
sbb
jnp
clc
leave
adc
insl
jne
push
inc
sbb
jg
sub
sub
js
mov
push
add
sarb
outsb
repz
fcomps
gs
iret
jnp
fidivs
ficompl
sub
jmp
cld
popa
inc
inc
hlt
out
iret
mov
sub
sbb
test
lret
cmp
addb
xchg
outsb
xor
test
jg
cmpsb
and
dec
gs
cmp
xor
adc
cmc
icebp
mov
dec
hlt
mov
cmp
xchg
add
inc
pop
sbb
jns
out
xchg
ss
dec
pop
daa
out
je
lods
pop
das
js
adc
mov
test
xchg
adc
ret
cmp
inc
xchg
sub
mov
mov
sub
sub
cmp
jnp
xor
xchg
or
xchg
in
adc
addl
scas
stc
inc
jnp
mov
mov
xchg
out
std
mov
sbb
adc
imul
adc
daa
pop
popa
jb
ljmp
lret
push
ljmp
iret
mov
adc
sarl
mov
or
inc
adc
mov
push
fst
mov
ret
mov
cli
ret
sub
mov
lahf
jbe
jno
rcll
insl
adc
les
test
sub
xor
adc
push
mov
aas
mov
inc
loopne
mov
or
push
ja
addr16
enter
push
mov
cmpsb
lahf
xor
adc
sub
mov
fistl
sahf
in
pop
push
push
mov
fs
test
cmp
and
cmc
or
pusha
clc
push
pop
dec
jle
aas
test
sbb
bound
sub
jecxz
pop
test
cmp
inc
push
jmp
mov
jo
stos
fwait
jne
aaa
mov
subl
icebp
cwtl
push
push
and
rcrb
inc
xor
adc
mov
add
dec
adc
push
mov
int
pusha
or
or
jmp
push
mov
sbb
in
inc
sub
pop
daa
pop
movsb
jns
lcall
stos
lock
stos
popf
inc
ficoms
cmp
pop
pop
rcll
lret
xchg
lret
lret
jl
popf
add
push
gs
out
ja
dec
test
pop
inc
pop
pusha
fwait
stos
lahf
in
mov
cli
pusha
out
pop
jmp
ja
xor
mov
mov
out
push
pusha
test
push
stos
mov
push
clc
xor
xor
fstpt
faddl
les
fmul
mov
movsb
pop
sbb
int3
or
xor
ds
stc
push
out
bswap
sub
dec
jne
xchg
mov
movsb
sbb
out
dec
incb
out
push
cwtl
dec
cmp
ljmp
sbb
mov
inc
mov
pop
seto
sbb
add
sbb
mov
xor
adc
cmovns
daa
aad
bound
test
pushf
stc
into
dec
ja
iret
sub
push
lcall
stos
pop
icebp
push
shl
mov
mov
enter
imul
push
addr16
rorl
pusha
mov
daa
lret
enter
xor
mov
ret
movsl
sub
cmp
test
in
mov
ret
mov
adc
lret
ja
scas
and
pop
dec
cmovge
xchg
mov
cmp
repz
inc
cmc
jo
out
mov
mov
pop
fcomps
ret
clc
inc
pusha
xchg
sub
pop
test
push
mov
rorl
mov
fwait
push
xchg
jo
std
dec
sbb
adc
aaa
lcall
outsl
cmp
loope
dec
dec
and
mov
mov
mov
cmp
or
cmp
push
jl
jnp
or
ffreep
xchg
dec
testl
cltd
xchg
jo
pop
inc
imul
jecxz
push
cmpb
iret
mov
int
sbb
xchg
or
loopne
add
lds
cs
mov
mov
or
test
in
dec
adc
jge
mov
das
cmpsl
pop
cld
adc
add
repnz
shll
jecxz
popa
js
testb
cwtl
in
into
mov
mov
in
loope
jl
pop
dec
xchg
rcrb
dec
dec
pushf
addr16
xor
sub
inc
mov
mov
mov
dec
pushf
pop
push
mov
int3
bound
and
shl
jecxz
subl
jl
add
jbe
insl
cmp
inc
push
push
test
out
jno
insl
jnp
adc
loop
cmp
mov
inc
fsts
loope
dec
rcrb
push
cmp
nop
lret
pop
lret
enter
push
jecxz
cs
dec
leave
fs
addr16
and
pop
aas
mov
imul
sbb
les
cli
jbe
loop
mov
shrb
test
jae
dec
push
out
shll
cmpb
icebp
dec
jp
ds
adc
sub
mov
cmp
pop
pop
dec
pop
lock
cli
out
cmp
mov
adc
dec
dec
sub
sub
xor
movsb
clc
sub
inc
popf
sahf
popf
stc
sub
test
xchg
out
movsb
pop
inc
inc
inc
fistl
js
cmp
and
in
xchg
aam
adc
or
xchg
test
jg
xchg
mov
dec
push
pop
iret
sahf
test
inc
sbb
push
jnp
clc
cmc
xor
cmp
cmp
lods
repz
mov
cli
sbb
stos
xor
xchg
stos
mov
push
mov
or
popf
adc
mov
and
jae
and
add
sbb
mov
cmpsb
cmp
ficoms
and
xchg
fadds
push
lods
mov
sbb
fisttps
and
fidivrs
xchg
pop
xchg
into
adc
xlat
pop
add
lds
mov
lret
xor
loop
lret
fstp
addb
repz
int3
xor
movsb
lods
cltd
imul
aam
addb
lahf
cmp
and
or
dec
sbb
repnz
pop
mov
sub
int3
cltd
mov
inc
and
les
push
imul
popf
pop
subl
insl
cli
pop
jno
cmp
inc
cli
int3
pop
sti
nop
gs
lock
jae
xchg
shrl
mov
jp
mov
inc
fisubl
cmp
nop
jb
xorb
xlat
xor
incb
std
push
push
add
dec
lahf
sbb
mov
sub
js
addr16
repz
dec
paddq
dec
lret
stc
adc
sbb
push
jmp
lock
xchg
mov
jae
inc
mov
mov
int
dec
pop
or
fs
cmpsl
mov
fsubr
out
cmc
sub
das
push
mov
cmpsl
sbb
out
aas
pop
xor
mov
repz
mov
sahf
ljmp
adc
in
call
lret
push
mov
cli
rorb
sbb
push
shr
xor
push
add
push
movsl
int
cmp
shll
push
xchg
push
pop
sub
adc
test
sbb
jmp
sbb
adc
bound
jmp
push
iret
nop
lahf
or
jg
lods
std
mov
cmp
popf
stos
mov
mov
mov
test
rcll
sub
fidivrs
cmp
pop
sbb
jo
int
sbb
out
loop
mulb
pop
mov
sbb
adc
mov
adcb
xlat
mov
mov
mov
cmp
add
icebp
mov
pop
in
lock
jecxz
into
ds
sub
xor
dec
into
mov
mov
outsl
shll
xchg
dec
pushw
push
or
pop
xchg
lock
nop
pushf
out
dec
add
jnp
cltd
das
mov
rclb
adc
inc
jbe
pop
xchg
cmpsb
test
add
dec
xlat
mov
lret
bswap
inc
ficomps
jmp
inc
mov
mov
shr
ficompl
sbb
nop
sub
insl
inc
jp
cmp
jae
adc
scas
jne
add
pop
fidivrl
mov
sub
add
adc
lock
test
aas
popa
lahf
test
sbb
mov
xchg
push
insb
das
fmul
movsb
inc
sti
jge
cltd
push
mov
push
stos
push
pop
loopne
popa
cmp
sbb
mov
outsl
sub
xor
jl
lea
cwtl
push
lret
add
movsl
pop
inc
stos
inc
popa
sti
mov
jl
loope
push
jb
adc
icebp
in
xchg
mov
mov
sti
addl
int3
cmp
dec
leave
aad
enter
push
out
cmp
aad
jae
int3
mov
pushf
fxch
fdivrl
jp
cs
lea
std
xor
mov
sub
in
inc
js
add
or
cmpsl
sub
js
popf
cmpl
pop
es
sub
mov
int
mov
iret
inc
jae
mov
aam
das
fwait
push
fstps
mov
xchg
int3
mov
add
mov
stos
jo
cmpb
pop
cmp
mov
adc
mov
and
xor
jo
out
repnz
in
push
cmpsl
les
xchg
cmp
add
mov
js
mov
pop
shr
sub
adc
aas
jg
loop
jl
xchg
test
cltd
xcrypt-ecb
cmpsl
dec
inc
out
shrb
push
cmp
mov
int3
xor
add
sub
lcall
mov
add
test
push
and
mov
add
lock
jecxz
xchg
sbb
xchg
in
jns
cmp
ss
aad
jge
sti
mov
repnz
ss
add
pop
lods
lods
mov
nop
xchg
mov
push
or
insb
jle
sbb
in
lds
out
fs
insb
adc
push
mov
mov
imul
xlat
mov
dec
test
addr16
mov
mov
mov
push
loope
scas
add
mov
mov
punpckhdq
bound
add
outsl
or
in
xchg
lret
add
dec
add
pop
in
or
repz
loopne
and
inc
cld
fsubrl
pop
lock
mov
fstl
xchg
jge
call
cmp
mov
jbe
adc
pop
das
cltd
stc
nop
xor
adc
les
insl
nop
cmp
inc
xor
daa
in
mov
cmp
dec
or
jle
jmp
xchg
sub
mov
fisubs
cmp
mov
into
pop
jmp
pop
sti
mov
pop
jecxz
sub
sbb
and
sub
das
add
stc
jne
dec
mov
sbb
pop
lret
ret
test
or
jnp
pushf
insb
push
mov
testb
xacquire
mov
mov
std
negl
xorb
imul
pop
jp
cmp
stc
lea
sub
fdivs
nop
cmpl
sub
xor
mov
jae
cld
shlb
push
xchg
pop
push
push
scas
ud1
inc
inc
rcrb
mov
mov
pop
mov
push
cmp
jbe
xchg
scas
out
jge
lret
nop
adc
cli
shlb
test
adc
scas
xchg
lahf
xchg
call
call
ljmp
loop
hlt
lcall
fs
std
fcompl
jle
and
cltd
insl
jbe
dec
ret
iret
adc
scas
lods
lea
and
mov
nop
mov
loopne
adc
and
cmp
push
xchg
xchg
adc
in
scas
inc
fwait
and
and
jmp
adc
inc
mov
or
pop
out
push
xor
inc
push
xor
fcompl
jno
mov
push
scas
divb
jle
pusha
sbbb
icebp
loopne
insb
add
lcall
inc
dec
inc
xor
adc
mov
jbe
aad
mov
fcmovnb
adc
lea
cmpsl
fnstsw
in
out
std
or
testb
orb
mov
sbb
iret
mov
sub
add
add
xor
es
mov
scas
xor
es
movsb
xor
outsl
sbb
inc
pop
shrb
stc
lret
xchg
adc
or
adc
leave
cld
in
mov
subl
and
or
loop
inc
sbb
add
adc
cs
add
loope
outsb
in
fwait
add
rclb
mov
jne
pop
pop
stos
mov
sub
in
test
mov
lods
xor
sub
jecxz
mov
gs
in
ss
or
stos
fsubrp
push
fcomi
xchg
mov
dec
mov
enter
add
dec
mov
add
rol
sub
mov
xchg
sbb
xchg
mov
mov
fcmovb
jae
lea
mov
das
cs
pop
and
icebp
loopnew
fadds
sbb
inc
das
pop
into
fcomps
sbb
jae
js
rcr
movsl
in
mov
cli
mov
cltd
fcomp
loopne
aam
push
shrb
dec
adc
mov
sub
stc
std
adc
pushf
and
push
and
xchg
or
jmp
clc
sbb
cmp
sbb
cmpsb
pushf
lret
sub
mov
aad
dec
into
iret
rorl
insl
out
xor
icebp
sbb
dec
stos
and
push
mov
or
xor
dec
mov
mov
jl
xchg
stc
or
repnz
fildll
and
mov
iret
pushf
mov
test
adc
dec
leave
clc
pop
xor
dec
and
cmp
sbb
push
jmp
sub
xchg
xor
iret
cmp
cmp
sbb
js
mov
inc
andl
push
pusha
inc
cmp
push
imul
call
clc
add
hlt
ror
aad
dec
cwtl
push
fs
sti
cmp
hlt
adc
out
jne
test
sti
lret
inc
xchg
xchg
mov
add
pop
aam
pushf
add
and
mov
or
cmp
lret
push
insb
sub
imul
xor
mov
sub
push
jnp
insl
push
aas
add
mov
sub
sub
pushf
dec
sub
lret
push
sbb
call
push
hlt
insl
and
push
lahf
mov
andb
sti
mov
imul
pushf
cmp
inc
je
into
std
or
inc
jg
mov
xchg
mov
xorb
push
xchg
movsl
add
adc
icebp
push
xor
mov
das
jbe
pusha
mov
cmpsl
mov
xchg
xchg
mov
addr16
pop
add
aas
ret
daa
jae
jle
inc
shlb
jns
xor
mov
jle
mov
aam
rcrb
xor
hlt
cmp
sub
fiadds
icebp
add
pop
int3
jb
sbb
sub
sbb
xlat
mov
or
dec
pushf
sbb
cli
shlb
add
loop
mov
dec
icebp
and
cmp
jp
shlb
jb
jecxz
out
mov
and
push
add
cmpsb
jecxz
movsb
inc
mov
lods
mov
shrb
or
or
sbb
fildl
rolw
les
add
lea
outsb
mov
push
sub
stc
pop
ds
inc
push
cmpsb
in
insb
fwait
mov
xchg
lock
xchg
fcomi
adc
pop
aad
sub
sub
cmpsl
xor
jb
sub
xor
cli
or
pop
pop
loopne
or
jecxz
out
insl
lret
movsb
test
out
dec
cwtl
mov
xor
scas
inc
repz
xchg
mov
xor
fsub
push
mov
arpl
lret
and
repz
jg
lods
add
imul
mov
or
and
sti
inc
dec
cltd
cmpsb
test
inc
xchg
loopne
adc
cld
aad
jg
notb
xchg
sub
mov
jne
sbb
mov
sub
lods
adc
jo
sbb
inc
inc
popf
cld
lret
jne
pop
pop
adc
ret
mov
or
out
jno
cmp
test
aam
lret
mov
cmp
call
dec
cvtpi2ps
push
repnz
or
ret
mulb
dec
pop
rclb
lock
xchg
bound
iret
xchg
insl
ljmp
mov
pop
and
xor
scas
add
jae
pop
decb
and
aaa
cmp
xor
clc
pop
jle
fildl
sti
push
jno
shr
mov
repnz
icebp
dec
jne
nop
jns
enter
lcall
add
jp
dec
jb
cmp
add
mov
leave
jo
push
ret
ljmp
xor
clc
stos
push
mov
testb
fimuls
mov
mov
es
retw
sub
jnp
or
mov
mov
outsb
imul
jl
mov
pop
xchg
jecxz
test
jle
inc
mov
jne
pop
push
jo,pn
jmp
popa
stc
pavgw
stc
outsb
je
pop
or
pop
outsb
int
imul
cmp
cmpsl
int
shll
pop
cmpsb
mov
addr16
mov
insl
rcrl
add
jnp
adc
push
cmp
or
pop
lods
out
outsl
push
push
push
pop
int3
cmp
xor
fwait
jno
push
sub
mov
sub
add
rolb
jbe
imul
nop
ret
es
fisubrl
ret
jg
jl
push
out
das
scas
mov
mov
shlw
inc
mov
sub
stos
orb
dec
push
outsb
jg
push
adc
xchg
push
adc
pusha
pop
cli
lahf
cwtl
cmp
inc
jg
push
dec
inc
rorl
das
rcll
sbb
inc
stc
xor
fmull
stos
mov
dec
xor
mov
clc
add
dec
jmp
jge
lcall
popf
lods
mov
jns
jecxz
jmp
sbb
outsb
in
mov
and
pop
pop
pop
test
sub
sti
addl
adc
push
cli
push
je
imul
test
jbe
or
cs
lds
imul
mov
fldln2
ja
cmp
mov
out
fisubrl
sbbb
arpl
jle
cwtl
mov
jnp
aam
or
mov
dec
xchg
xchg
mov
mov
aam
xor
pop
push
xchg
mov
push
sahf
pop
lea
filds
shll
out
bound
ficomps
mov
jno
into
cmp
insb
call
leave
addr16
and
push
test
les
mov
scas
inc
ret
sahf
dec
in
outsb
mov
push
mov
scas
inc
movsb
sub
sub
push
push
ss
mov
inc
dec
dec
or
adc
push
sub
es
xchg
iret
mov
adc
test
loope
lods
add
test
out
aaa
aad
cmp
ljmp
scas
std
aas
shrl
sahf
xchg
popa
repnz
das
movsl
adcl
and
mov
stos
ret
xchg
out
in
push
fsubs
hlt
flds
inc
push
nop
dec
add
insl
ret
xor
ret
rcr
nop
lods
fcmovnu
cmpsl
ds
pop
xor
outsb
mov
sub
push
lret
aad
mov
imulb
and
lods
adc
sarb
and
insb
gs
mov
jnp
nop
bnd
stos
cmpl
lret
mov
and
int
mov
iret
push
or
inc
push
je
sbb
es
addb
mov
sahf
rcll
dec
and
adc
pop
push
xor
push
nop
insb
and
popa
mov
scas
in
xchg
pop
push
sbb
xchg
dec
cs
jmp
ss
or
ror
scas
jp
adc
popa
orl
pop
and
in
je
popf
jmp
lds
mov
pusha
add
lret
addb
and
dec
iret
mov
mov
rcll
xor
xor
mov
in
xor
push
push
js
jp
int3
lret
daa
xchg
sbb
ja
cli
mov
out
push
xchg
jne
aad
add
fs
xchg
push
gs
ljmp
sti
inc
mov
data16
cmp
mov
pop
stos
lock
mov
and
jnp
outsb
ficomps
and
sub
push
jmp
out
inc
fs
lret
add
lahf
ljmp
lcall
mov
arpl
cmpsl
inc
add
cmp
int3
mov
adc
jnp
mov
or
sbb
pop
push
fmul
in
arpl
adc
test
push
lret
jbe
jb
icebp
mov
and
ret
adc
cwtl
stos
add
cwtl
and
addr16
adc
jmp
adc
shrb
fsts
in
mov
mov
popa
int3
adc
divb
movsb
aas
jno
lcall
mov
mov
mov
jle
xchg
adc
xchg
xor
or
fimuls
fiaddl
cmp
in
or
ds
dec
out
pop
dec
sbb
mov
das
inc
out
scas
incb
out
leave
and
dec
sarl
daa
int
inc
daa
sti
and
pop
popf
divps
jnp
testb
fcomps
sti
sub
xchg
pop
int3
insl
add
cmp
push
nop
pop
aaa
hlt
dec
xorb
mov
divb
jae
mov
dec
std
mov
xchg
pop
notl
xor
lcall
std
push
ss
nop
loop
mov
or
int
cld
jp
stc
imul
pop
cs
mov
hlt
dec
leave
push
nop
add
or
mov
xor
ret
pop
xchg
sbb
xlat
clc
mov
mov
jns
inc
mov
sbb
dec
ss
push
cwtl
into
rol
mov
sbb
xlat
lods
dec
jb
cmc
aaa
imul
mov
testb
iret
lea
or
jl
cmp
fdivs
xchg
mov
mov
add
inc
fld
dec
cmp
ds
shl
fucomp
push
adc
inc
int3
clc
inc
in
js
sahf
call
imul
call
sahf
nop
insl
jecxz
addr16
lea
es
movsb
pop
push
add
add
push
jp
loop
mov
cmp
sub
push
ja
add
mov
test
push
cmp
aam
add
pushf
pop
movsl
mov
enter
mov
add
nop
in
add
jbe
xchg
scas
cltd
stc
cmpsb
sarl
ljmp
jecxz
test
sbb
pop
lahf
xor
idivl
xlat
push
into
or
mov
xlat
jne
mov
loop
dec
loope
lea
inc
clc
adc
push
mov
push
xchg
cwtl
push
loope
mov
jecxz
xor
xchg
jmp
je,pn
mov
sub
in
add
cld
js
ljmp
hlt
clc
mul
mov
popf
xchg
das
pop
cmp
mov
aas
or
xor
sub
imul
sub
xor
add
mov
dec
sub
sahf
aad
pop
cld
inc
hlt
push
cmp
adc
and
sbb
xchg
sbb
cmp
loopne
push
mull
iret
call
pushf
jns
lea
notl
sti
or
cli
or
xchg
mov
xor
xchg
gs
mov
mov
mov
in
mov
mov
and
mov
je
mov
cmp
ret
std
daa
fstpt
adc
enter
js
stc
lock
dec
xchg
push
pusha
xor
in
rorl
fidivs
pop
sti
outsl
cmp
inc
jnp
dec
jecxz
xor
movsl
xchg
aad
mov
dec
scas
jecxz
ss
lret
outsb
mov
arpl
fisttps
sbb
cmp
sub
inc
adc
or
fstp
in
lar
inc
movsl
test
arpl
mov
les
enter
insb
enter
lahf
dec
ds
movsl
in
mov
mov
pop
sub
fmuls
out
mov
int
xor
push
dec
movsl
pop
out
mov
ja
lods
or
or
dec
bound
jmp
popa
imul
movnti
mov
call
and
xlat
fs
cli
mov
mov
sbb
aam
outsb
nop
popf
outsl
scas
arpl
sti
adc
sub
sub
mov
mov
cmpl
pushf
filds
out
jge
iret
adcl
add
movsb
jns
xchg
sbb
ds
ret
add
stos
in
je
test
push
sbb
cmpl
ret
dec
push
or
ret
jo
cmpsl
add
xlat
mov
insb
mov
lcall
jg
int
shlb
sarb
daa
fwait
test
push
jg
mov
data16
push
cs
aam
fistps
mov
int
loope
xchg
stos
mov
and
sub
jmp
mov
je
adc
push
les
out
pop
cmp
xchg
shlb
ret
aam
mov
jmp
out
add
rcrl
or
outsl
jno
add
pop
adc
push
inc
repnz
push
or
push
xchg
hlt
inc
cmp
and
add
addr16
aas
loope
movsl
outsl
in
pusha
jp
mov
out
lret
vpunpckhbw
cli
xor
sti
scas
cmp
sbb
clc
in
or
test
push
jo
cmpsb
aas
fildl
loop
ljmp
repz
in
outsl
test
or
adc
push
in
fcompl
shrl
insl
sarb
fstpl
repnz
addr16
hlt
jnp
cmp
mov
jmp
jno
jmp
or
add
pop
test
or
or
pop
subl
fistps
rolb
xor
or
inc
ljmp
xor
pop
xchg
or
add
jne
jp
fisubs
enter
fcoms
adc
iret
cmc
aas
cmp
sbb
mov
sub
rcrl
pop
add
inc
mov
call
pop
sbb
or
cmpsl
outsb
xlat
ja
sbb
mov
dec
sub
and
inc
sub
push
call
test
lds
mov
mov
es
ja
inc
adc
popa
or
data16
inc
lcall
or
push
cmp
jle
arpl
inc
dec
lock
mov
dec
mov
add
enter
and
arpl
daa
lcall
dec
loopne
push
push
fs
sub
mov
adc
mov
cmp
gs
in
or
add
imul
xchg
jecxz
jo
add
mov
add
clc
add
movsl
cld
adc
inc
fnsave
jle
scas
fstp
dec
fsubrl
xor
pop
adc
push
dec
scas
xor
scas
adc
cmp
and
sbb
inc
scas
movsl
lock
lahf
into
repz
mov
cmp
sub
lds
daa
cmpsl
loopne
icebp
scas
rcr
cmp
cmc
ret
loop
cs
pop
shll
and
fbld
adc
stos
add
and
xchg
and
sbb
test
dec
pop
push
aaa
into
and
inc
xchg
mov
sbb
add
imul
xchg
sbb
inc
xlat
lret
add
or
mov
mov
xchg
fidivs
fs
mov
mov
sub
jne
and
jbe
aas
cmp
dec
xchg
pop
or
in
mov
jbe
sbb
jo
aaa
in
in
xor
or
inc
inc
sub
and
dec
cld
bnd
je
and
sbbb
addr16
push
add
addr16
data16
mov
orb
pop
xchg
sbb
and
fs
shrl
push
xor
adc
cmp
xchg
out
ja
jno
insb
pop
mov
jo
mov
pop
sub
adc
mov
xor
mov
push
cs
leave
lret
lock
scas
shrl
gs
je
mov
leave
bnd
xor
xchg
cli
les
pop
cld
je
push
add
mov
lret
stos
outsb
mov
es
cmp
sbb
daa
hlt
and
add
cmp
mov
sub
jmp
sub
mov
xor
cmp
in
daa
dec
in
out
leave
fisubrl
push
stc
and
and
repz
dec
fisttps
cli
and
dec
addr16
mov
loop
xchg
lret
lea
mov
xchg
xchg
addr16
int3
stos
or
mov
add
hlt
dec
std
popf
or
cmp
iret
xchg
int3
mov
inc
sti
ss
stos
fnstcw
sub
adc
in
mov
popa
fisubl
imul
mov
fxch
and
add
xor
loope
xor
jbe
xor
jnp
pushf
xor
ror
in
mull
das
inc
sub
test
inc
test
dec
push
pop
cltd
mov
and
in
xor
jns
jno
adc
lret
mov
jecxz
fwait
adc
pop
dec
mov
lods
cmp
xchg
repz
pop
iret
pusha
mov
sbb
ljmp
push
adc
fstps
adc
push
aad
and
sub
int3
jmp
sbb
shlb
in
ljmp
cmp
bound
jmp
xchg
lret
dec
sub
rcr
arpl
icebp
outsl
add
pop
jle
push
addr16
imul
or
mov
or
pop
sub
push
mov
ficoms
mov
pop
jle
fisubrl
inc
shlb
push
or
sysret
rclb
iret
dec
out
xchg
repnz
push
js
ljmp
mov
mov
mov
xchg
icebp
out
sub
sbb
xchg
insb
dec
leave
xchg
dec
jae
adc
roll
push
and
movsl
js
mov
and
mov
enter
addr16
push
mov
out
lea
insb
in
xchg
sub
pop
lock
arpl
leave
inc
push
roll
mov
jae
aaa
scas
mov
lret
inc
push
aad
mov
out
jnp
aad
xor
pop
or
xchg
xchg
es
pop
adc
push
mov
push
xor
scas
in
sti
ljmp
cmp
push
jnp
adc
subb
bound
pop
inc
pop
jnp
mov
push
push
cmp
or
cld
stc
mov
pop
push
mov
add
jmp
jmp
mov
mov
inc
fists
mov
out
fimuls
inc
and
dec
fmul
lock
push
lds
test
jge
lret
pusha
mov
fidivrs
scas
dec
adc
fcoml
push
xchg
dec
jmp
shll
xor
push
js
cmpsb
push
pop
sbb
adcl
cld
sbbl
mov
repz
ror
add
movb
jge
aam
adc
or
dec
sub
ror
jge
dec
adc
add
divb
clc
pop
outsb
mov
sub
mov
ss
pop
fildll
lock
call
mov
xor
popf
in
loop
xor
fcmovb
into
add
pop
bound
pushf
and
cld
xchg
add
das
ljmp
popa
std
pop
hlt
sub
xchg
mov
shlb
mov
lds
mov
or
lret
cwtl
or
popa
mov
fcomps
jnp
gs
cmp
mov
mov
ljmp
adc
insb
mov
push
cwtl
in
out
andl
mov
mov
xor
push
cmpsl
mov
xchg
dec
imul
jbe
lock
lock
fiaddl
cmpsb
in
pop
push
mov
cld
ficoml
faddp
mov
mov
subb
mov
add
sub
pop
xchg
sub
push
mov
cmc
pop
movsl
xchg
and
xor
fdiv
call
ss
dec
out
jo
push
das
stos
mov
fnsave
lods
sub
xchg
aad
testl
scas
repz
xor
or
cmpsl
push
jl
in
sub
idivl
scas
mov
mov
rcll
sbb
cltd
movsb
gs
into
sahf
ret
ss
es
jl
jbe
dec
addr16
ss
sub
sbb
add
out
dec
xchg
push
add
cmpb
dec
cmp
in
sbb
cmp
jmp
hlt
aad
inc
cmpl
mov
aad
ret
arpl
ja
mov
and
fadd
jg
adc
or
ficompl
inc
insl
mov
sbb
jecxz
lods
and
sbb
vmwrite
test
popf
adc
test
xchg
add
adc
fldcw
lods
test
addr16
mov
xchg
jge
iret
and
idivl
add
imul
fxtract
fcmove
js
mov
inc
sbb
xchg
jo
loopne
jle
jl
leave
mov
lock
hlt
adc
test
and
and
and
ja
adc
jmp
and
les
push
or
sbbl
call
clc
pushf
enter
les
mov
lahf
push
inc
or
mov
lods
or
sub
outsb
outsb
addr16
cmp
mov
pushf
mov
push
rolb
fnstenv
loope
cwtl
push
ret
adc
rolb
ss
push
icebp
mov
push
stos
dec
incb
push
movl
mov
adc
jns
mov
jl
mov
popa
mov
pop
xchg
cwtl
int3
out
lods
sub
mov
fwait
sbb
push
aam
mov
adc
mov
fcomps
out
pusha
sub
fidivl
jecxz
jl
cmpsb
inc
add
or
pop
jmp
or
mov
jmp
das
cltd
mov
je
pop
xor
daa
inc
mov
rcrl
fwait
imul
sbb
xchg
dec
dec
stos
dec
pop
aaa
dec
dec
xchg
mov
jnp
fcmovne
pushf
jl
daa
rolw
shl
mov
inc
addr16
mov
cmp
popf
insb
fs
xchg
enter
or
push
sbb
repz
add
dec
add
lahf
ret
movsb
mov
lock
das
push
mov
adcb
and
sub
push
adc
dec
inc
fcmovnbe
mov
mov
jle
cmp
xchg
mov
jbe
das
adc
sub
insb
push
mov
out
shlb
gs
rclb
adc
ret
cwtl
cmp
jmp
xchg
stc
cli
cld
pop
shr
movsl
lahf
pusha
ds
mov
and
orl
sti
sub
jg
jmp
outsl
popf
data16
std
jbe
inc
repz
in
cmp
lcall
jno
sub
out
cmp
loope
into
push
dec
fdivr
adcl
test
repnz
ss
fcomps
sbb
sbb
test
ret
mov
dec
ss
int3
push
loop
mov
ja
xchg
jno
aam
sbb
ficomps
aas
frstor
mov
jge
mov
leave
addb
insl
jne
enter
mov
jle
imul
push
jge
out
call
cmp
sub
mov
push
xchg
xor
sbbb
fsubrs
dec
mov
dec
mov
shll
test
scas
or
jo
imul
xor
rcr
push
inc
pop
push
clc
aaa
rcrb
sbb
mov
jmp
stos
ss
xor
jno
jb
aas
mov
test
out
add
out
or
inc
enter
imul
dec
daa
sub
arpl
mov
push
nop
out
xor
mov
clc
mov
ret
xchg
mov
inc
adcb
pushf
std
push
and
aam
in
jmp
fstpl
inc
aas
daa
nop
iret
data16
cmp
and
cmpsb
dec
daa
das
out
fstpl
dec
loop
push
jmp
stos
outsb
cmpsb
icebp
push
fdivrs
cmpsb
xorb
add
lods
loopne
add
jmp
inc
mov
fnsave
ja
out
jo
pusha
push
lret
sahf
mov
imul
add
inc
mov
xor
fistpll
cmp
pop
test
pop
shrb
pop
sti
pop
mov
js
mov
sbbl
sarb
stc
jge
aad
dec
cmpsl
sarb
mov
mov
stos
add
les
sub
xchg
xchg
stos
cmp
mov
pop
test
jp
sar
and
repz
jmp
xchg
pop
add
sbb
test
ret
mov
add
mov
lcall
loop
bound
jbe
sbb
call
add
inc
cmc
stos
pusha
or
push
and
clc
mov
cwtl
xchg
fsubl
aaa
mov
outsl
data16
fdivs
data16
ljmp
dec
repz
clc
pop
cmpb
fisttpl
inc
push
imul
arpl
or
ja
fisttps
sub
push
mulb
daa
lcall
popf
adc
jns
pop
clc
push
mov
xor
xor
leave
jmp
push
mov
rolb
leave
mov
cmp
movsl
loop
adc
fwait
inc
arpl
add
rcrl
loop
fbstp
mov
lret
xchg
inc
insb
les
inc
out
andb
jmp
push
dec
or
out
inc
dec
test
loopne
mov
cmpsb
cli
adc
mov
push
out
out
xchg
lods
xor
pop
inc
adc
andb
or
cmp
push
ret
xor
xor
xchg
je
movsl
adc
cmp
cmp
lods
cmp
stos
sbb
std
int
mov
mov
les
cwtl
aad
pop
clc
call
sbb
mov
mov
repz
das
add
insl
lds
mov
push
push
jo
xor
repnz
rcll
pop
leave
imul
jp
inc
add
dec
fsts
movsb
cmp
lret
cmp
xor
mov
inc
iret
jno
dec
lcall
pop
out
sbb
cmp
call
jmp
sbb
cmp
jmp
cmp
addr16
shrl
or
ljmp
adc
ljmp
xchg
jns
out
jle
adc
popa
imull
sbb
add
push
call
sbb
mov
out
popf
lret
or
orl
mov
or
push
jo
jno
mov
mov
mov
mov
ficoms
rcl
fcoms
jo
push
cmp
cli
lods
pop
hlt
xchg
sub
mov
mov
jp
clc
lahf
div
jns
rcrb
clc
clc
lret
imul
outsl
xor
sub
push
in
inc
ret
lret
pop
out
dec
nop
adcb
aad
jnp
or
int
pop
je
out
or
jg
cwtl
call
fidivl
push
cmp
aaa
scas
xchg
push
lahf
mov
dec
stc
and
ficoms
daa
mov
add
stos
dec
dec
cmc
movb
notb
or
mov
jmp
incl
divb
xchg
or
jg
inc
cs
cmpsl
mov
inc
sahf
lret
bound
idiv
imul
jae
adc
lahf
fistpll
sub
dec
shrb
testl
lods
mov
pop
icebp
addb
jo
ja
mov
es
xchg
out
stc
mov
and
and
movsb
test
stos
or
out
loopne
adc
add
cmpps
stc
test
pop
sarl
dec
sbb
push
push
lock
ja
inc
ss
cmpsl
rclb
pop
lret
lahf
inc
sbb
out
mov
fs
add
bound
cmp
vcomiss
inc
les
xchg
imul
cld
notb
and
mov
je
and
inc
lods
inc
mov
int3
roll
mov
sarl
fistpl
imul
pop
cltd
push
cld
jb
cld
iret
xchg
rol
aam
add
push
sub
adc
movsl
popa
ja
movsb
sub
jle
mov
xor
addr16
sub
or
sahf
push
push
dec
dec
loopne
push
mov
mov
stc
imul
jns
lock
jmp
push
sbb
mov
jbe
out
mov
xchg
leave
loop
shr
sbb
ja
lods
loop
es
add
aas
sbb
dec
cmp
lods
cmp
out
scas
lea
mov
xchg
sub
pop
das
push
push
jecxz
mov
push
fbld
mov
mov
inc
imul
sub
int3
jbe
sbb
cwtl
mov
mov
mov
leave
ds
repz
mov
cmp
add
pop
and
add
fistpl
lods
std
ud2
std
adc
loop
popa
jmp
lds
out
jns
mov
jae
inc
mov
push
pusha
inc
and
sub
dec
mov
mov
dec
xchg
and
ret
leave
pop
mov
ds
push
orb
scas
pop
arpl
aad
divps
rcrb
popa
lods
das
rorb
ret
lahf
cmc
mov
push
push
push
dec
loopne
imul
jg
dec
push
mov
cmpsl
xchg
out
mov
inc
and
adc
push
adcb
das
dec
cs
inc
adc
fidivl
xchg
cwtl
repz
jo
arpl
xchg
fcoml
xchg
push
clc
add
pop
test
das
mov
ja
mov
dec
sub
sbb
cmpb
adc
lret
sub
lret
adc
jnp
dec
sbb
mov
cmp
stos
push
pop
sub
out
iret
outsl
push
cmpsb
mov
inc
adc
or
mov
jne
cld
push
scas
outsl
cwtl
mov
stos
adc
leave
in
ficoms
shll
push
jg
rol
fucom
pusha
adc
les
gs
sub
mov
xchg
jmp
pop
mov
push
fistps
cmp
cltd
sahf
jl
mov
mov
ljmp
call
int
add
rorb
adc
insb
je
leave
jl
mov
les
xlat
and
rcrl
mov
fwait
mov
pop
add
hlt
pop
inc
ja
cld
add
and
mov
lods
jae
jo
scas
inc
daa
mov
fs
scas
pop
and
stc
fdivrs
sub
cmpl
loope
jns
call
cmp
nop
or
or
add
cmpsl
or
decb
icebp
push
mov
inc
cld
mov
mov
dec
stos
in
mov
inc
fs
cmp
inc
jp
popf
or
xor
cli
in
mulb
pop
cmp
pop
shrl
test
mov
ret
test
pop
and
mov
inc
or
arpl
and
pop
lock
push
pop
cmc
adcb
fisttps
dec
push
imul
adc
cs
mov
test
popf
push
in
out
je
sbb
jo
lahf
stc
das
fsubp
jae
and
outsb
loopne
cmp
xor
pop
push
adc
push
xor
sub
or
push
push
push
jbe
outsl
shrb
call
fsubr
push
sub
daa
sarl
bound
lods
fwait
nop
mov
js
jmp
insl
inc
sbb
xor
or
lret
xchg
xchg
push
test
stos
xchg
mov
out
mov
out
repz
adc
dec
sbb
pusha
push
insl
mov
jg
push
ret
xchg
and
sti
popf
cmpl
cwtl
mov
mov
in
mov
push
je
sub
data16
lods
ret
cmc
fcmovnu
inc
sbb
nop
gs
js
mull
jge
jle
dec
into
push
lahf
pop
inc
cmp
bound
popa
test
test
aam
les
sbb
and
lahf
ret
xor
imul
hlt
push
int
adc
xchg
add
sbb
cmp
sbb
out
sub
jno
pop
adc
add
xchg
divb
mov
lea
daa
sahf
test
out
repnz
iret
push
iret
cmp
mov
fimuls
ja
imul
sub
loopne
dec
out
loopne,pt
test
fs
inc
ljmp
popa
repz
cs
mov
xchg
cmp
mov
mov
div
scas
xchg
pop
jns
cmp
inc
scas
cmp
gs
rorl
mov
push
push
mov
jae
je
xlat
xchg
enter
mov
ficoml
adc
mov
mov
loope
lods
les
adc
push
jbe
mov
iret
icebp
pop
andl
xlat
mov
xchg
mov
mov
xor
cmp
mov
cmp
leave
loop
es
outsl
xchg
call
xchg
shrl
mov
pushf
pop
lahf
mov
daa
popf
lret
das
sub
mov
jge
iret
xor
mov
push
push
pop
test
lret
lds
outsb
incl
xor
sub
xor
hlt
dec
inc
push
xchg
push
cmp
sub
jge
stc
pop
push
pop
jbe
jno
lods
gs
shlb
lock
enter
pop
xchg
or
and
imul
pop
mov
push
cmp
inc
clc
xor
inc
mov
jl
push
pushf
wrmsr
mov
shrb
push
rol
jns
rcrb
movsb
xchg
sub
je
insl
xor
adc
std
repnz
rcll
and
adc
or
adc
xor
lods
jmp
jnp
in
xchg
inc
push
sti
xor
int3
and
dec
add
cli
pop
push
mov
push
addr16
test
test
mov
repz
sbb
add
dec
xchg
hlt
mov
dec
cwtl
push
decb
data16
popf
inc
sbb
fisttps
dec
inc
mov
mov
call
addr16
iret
cmp
loope
push
mov
sub
aad
cmpsb
mov
cltd
adc
and
call
xor
push
pop
push
lret
fstpt
jmp
scas
iret
or
out
mov
test
xor
xor
add
inc
add
aaa
dec
or
insb
cmpsb
outsb
push
insb
pop
fdivrl
pusha
popf
xchg
out
in
mov
mov
adc
fs
adc
sub
and
push
out
sbb
jle
cmp
cmp
popa
std
roll
adc
cmpsl
push
mov
mov
pop
aaa
add
push
cmpsl
pop
test
push
xor
ret
stc
lods
and
cmc
and
test
cmpsb
sub
jl
add
xor
add
mov
jl
enter
imul
sub
data16
scas
adc
sbb
divb
out
mov
sar
pop
and
xchg
add
gs
je
test
xchg
sbb
test
mov
repz
and
shl
jg
scas
push
cmp
sbb
pop
and
inc
arpl
jp
dec
fdivp
in
push
divl
loopne
mov
test
and
rolb
push
fisttpll
sub
dec
xor
bound
jae
push
pop
xor
in
addr16
jne
std
sbb
adc
add
aad
cmp
pop
divb
or
repz
pop
inc
movl
stos
js
insl
aaa
cmp
mov
ret
out
or
or
xor
loop
and
and
push
xor
cltd
mov
dec
push
dec
adc
shr
shlb
out
mov
enter
and
mov
jp
sbb
or
jo
out
mov
stos
iret
cmpsb
dec
adc
xor
dec
add
pusha
push
mov
xchg
in
popw
call
cmp
jg
fs
daa
xchg
xchg
lcall
sub
mov
or
sbb
sbb
movsl
fsubrs
jne
stc
push
mov
jg
mov
fwait
inc
sbb
lea
add
out
pop
fcmovu
add
dec
dec
sbbl
mov
adc
adcl
pop
or
dec
mov
inc
mov
sahf
jae
hlt
mov
out
jno
aaa
sbb
cmc
sub
jmp
idivl
cmp
iret
ss
cmpl
pminub
mov
scas
mov
mov
dec
shlb
popa
test
in
xor
jnp
xlat
or
push
sub
push
push
das
decb
lds
sarb
bound
mov
addl
bound
cmpl
ret
mov
outsb
pop
cli
stc
dec
scas
mov
insb
xchg
into
mov
cmp
inc
xchg
insl
sahf
ret
pop
scas
sub
mov
je
mov
dec
jmp
jns
inc
daa
out
adc
sbb
in
outsl
lahf
xor
aas
ja
dec
dec
add
fwait
xor
lds
mov
dec
pop
jl
es
cmp
or
jg
cmp
jnp
sbb
das
insb
and
mov
int3
sbb
bound
repz
leave
xor
push
jns
jae
popf
mov
test
bound
inc
jl
clc
divb
rcrb
or
dec
xchg
insl
loopne
std
mov
xchg
out
and
icebp
inc
sti
push
out
sub
je
in
in
sub
dec
or
lods
test
or
nop
fstpl
mov
shll
fs
xor
sub
into
mov
add
mov
jecxz
aam
xor
out
pop
push
loope
mov
pop
clc
or
aad
aaa
add
scas
ret
sbb
inc
scas
add
cld
xchg
mov
ss
or
arpl
mov
call
or
adc
add
loopne
insb
mov
div
push
aad
push
arpl
add
mov
mov
add
mov
or
sbb
sub
inc
lahf
lret
and
sti
mov
adc
test
xchg
outsb
clc
lcall
in
adc
repz
pop
in
pushf
call
call
jmp
or
icebp
xchg
mov
mov
xor
lea
and
add
and
xor
insb
jne
xchg
xchg
ret
adc
out
pop
adc
fmull
xchg
jmp
stos
push
sar
pop
inc
call
pop
dec
pushf
pop
ljmp
testb
mov
fldcw
mov
ja
test
jno
adc
lods
or
mov
std
sub
stc
dec
sub
nop
mov
ss
pop
lahf
fldcw
gs
les
scas
pop
fldln2
sub
xchg
shl
rcll
std
clc
jo
ret
sub
jae
popf
inc
dec
imul
lcall
mov
lods
out
fsubrs
pushf
sub
xorb
jns
pusha
mov
lahf
sbb
outsl
sub
insb
pop
cmc
jb
sbb
ja
aaa
stos
adc
inc
sub
push
and
xor
jae
mov
mov
pop
aam
scas
jle
xor
pop
repnz
mov
pop
xor
xor
int
add
cwtl
pusha
xor
shlb
cmpsb
fsubrs
dec
lea
sarb
sub
out
push
inc
or
clc
popf
in
lds
add
push
xor
and
mov
xlat
mov
push
out
mov
jecxz
xor
jnp
adc
lret
or
jns
or
fildl
shrb
test
adc
and
popa
mov
cmpsb
xchg
xchg
push
or
xlat
mov
mov
xor
mov
in
mov
lret
mov
jp
into
aam
jp
lret
add
inc
xor
pusha
mov
popf
aam
pusha
dec
mov
iret
dec
inc
cmpl
nop
xchg
bound
rorb
mov
cltd
xchg
or
lock
jo
jge
inc
add
xor
push
lds
mov
mov
fcoml
mov
mov
adc
push
mov
mov
inc
xor
add
rorb
icebp
and
les
mov
cmp
inc
adc
cmp
sub
mulb
lds
push
mov
and
int
bound
sub
jg
jno
leave
push
xchg
lock
arpl
sahf
test
dec
mov
js
lret
and
fisttps
loope
push
jnp
mov
and
adc
bound
jecxz
xchg
daa
jbe
add
mov
repnz
test
inc
mov
mov
pop
movsb
sub
testb
mov
vrsqrtps
int3
jns
push
push
adc
loope
inc
movsb
lods
daa
xor
lret
bound
xchg
notl
mov
dec
jg
push
push
in
push
cs
iret
push
mov
inc
jge
out
cmp
imul
pop
lahf
sbb
rol
add
sub
test
aaa
inc
jge
testl
mov
icebp
dec
cs
push
push
jno
push
idivb
ds
aam
test
jno
aam
scas
mov
sub
mov
test
add
dec
icebp
add
jp
mov
mov
sbb
cmp
dec
push
daa
jo
arpl
rcl
fdivs
cmp
lods
cmpsl
push
fimull
jg
int3
jle
int3
cwtl
pop
pop
jg
jb
test
outsb
push
inc
adc
jbe
cmpsb
mov
shufps
je
rcr
loope
call
not
push
aaa
push
cmc
js
cmp
adc
cs
rolb
int
cmp
xchg
cwtl
repnz
sbb
inc
popf
sbb
into
testl
outsl
jge
aas
in
dec
mov
xor
dec
mov
imul
or
adc
pusha
push
aaa
mov
mov
push
and
insb
ficompl
xor
push
cli
leave
das
push
mov
cmp
mov
or
cmc
movsb
and
in
push
sarb
push
push
mov
push
cmp
aad
adc
sub
and
sbb
shrl
pusha
repnz
jae
push
nop
std
lcall
mov
dec
fidivrl
add
and
mov
adc
add
lods
pop
insl
push
data16
jmp
mov
movsl
jns
mov
adc
orb
mov
sbb
imul
xchg
pop
add
dec
leave
xor
and
and
push
decl
movsl
mov
inc
outsl
cmp
dec
xlat
or
inc
pop
sbb
je
pop
add
xchg
mov
bound
add
lret
push
ja
xchg
xchg
lcall
and
push
sub
mov
bound
icebp
in
into
and
sub
lret
mov
cs
jo
subb
jp
dec
mov
lret
mov
inc
leave
mov
mov
cmpsb
push
in
in
jl
mov
xchg
xor
xor
inc
sbb
adc
ret
jnp
insb
leave
xchg
inc
dec
imul
fwait
lods
lcall
adc
fs
adc
push
mov
push
jg
scas
xchg
popf
jmp
mov
mov
int
icebp
stc
decb
jp
test
mov
out
jmp
outsb
cld
sbb
lods
mov
out
sub
test
adc
mov
xor
jnp
jl
icebp
std
add
es
stc
mov
jne
fidivl
sbbl
mov
imul
das
nop
scas
pop
mov
cmp
enter
loop
daa
repz
fmull
xor
ror
sbb
xchg
fs
es
mov
fxch
nop
or
xchg
mov
and
jbe
pop
mov
mov
out
les
dec
repz
mov
pop
cmp
scas
inc
mov
out
in
mov
movsl
pop
cmp
or
xor
outsb
add
cmpsb
lods
mov
jae
sbb
xchg
sbb
mov
mov
and
pop
mov
shrb
xchg
pop
imul
imulb
sbb
cld
std
fidivl
test
jl
pushf
cli
xchg
mov
dec
xor
dec
jnp
jg
int3
hlt
mov
out
jecxz
int
or
jle
outsb
fwait
sqrtps
roll
xor
enter
mov
sub
pop
and
cmp
dec
push
adc
push
iret
adc
mov
mov
sbb
add
xchg
xchg
pop
nop
cli
or
iret
shlb
or
add
fs
xchg
inc
mov
test
xchg
cmp
mov
stc
ss
xlat
shlb
lds
inc
and
xchg
dec
or
sbb
pop
aaa
movq
das
mov
hlt
or
and
es
adc
je
out
aas
es
xchg
sahf
add
rcr
sbb
and
sub
jno
pop
les
mov
or
lods
mov
fs
and
sti
incb
mov
loopw
xchg
mov
into
mov
leave
insb
call
ss
cmp
nop
out
pop
ljmp
popa
movsl
jge
cmc
cmc
xchg
fiadds
mov
int
add
imul
scas
out
out
and
popa
cmpsl
imul
aam
push
xor
gs
test
mov
stc
clc
dec
mov
mov
call
add
jmp
rclb
xchg
jne
inc
push
je
clc
mov
jmp
pop
mov
rcl
loopne
aad
dec
lods
mov
sbb
ljmp
mov
ss
cmpl
or
rcl
in
mov
xchg
xor
loope
aam
mov
aam
inc
sbb
ret
jns
dec
inc
xchg
loopne
push
lahf
xor
xchg
mov
lret
dec
je
pop
add
xor
mov
xchg
stos
push
jns
xor
push
sub
scas
and
and
lret
adc
out
imul
leave
push
sbb
repz
sbbb
js
push
inc
ficomps
mov
aaa
adc
mov
lea
int3
in
nop
subl
inc
push
fsubrs
movsb
xor
icebp
jbe
xchg
push
xchg
jmp
fwait
mov
mov
sbb
movsl
pop
decb
aas
mov
push
or
xor
stos
cli
sub
add
addr16
mov
ret
movsb
inc
jmp
ldmxcsr
popa
dec
mov
addr16
sbb
fwait
arpl
mov
push
mov
test
push
arpl
fidivs
add
mov
mov
jb
xor
scas
mov
jnp
mov
shlb
dec
pop
sub
into
cli
jg
dec
or
sub
sbb
les
mov
mov
inc
mov
jmp
xor
push
xor
jnp
jnp
mov
cltd
pop
inc
or
stc
cmp
scas
inc
inc
scas
adc
das
dec
mov
jecxz
sub
stos
aam
mov
lcall
inc
pop
mov
jge
popf
outsb
pushf
iret
and
xchg
popa
mov
dec
sub
sbb
cli
sub
stos
push
and
test
add
out
cld
push
arpl
pmulhuw
outsb
push
out
inc
paddq
in
pop
mov
sbb
xlat
pop
pop
int
jp
xchg
push
aas
fcmovnbe
rsqrtps
mov
mov
mov
sbb
sub
mov
dec
popf
cli
jge
cmpsl
fstpt
xor
cmc
or
dec
adc
cmp
dec
sub
lcall
add
sarl
mov
add
dec
mov
icebp
pop
add
mov
pop
lret
jmp
ftst
js
in
cltd
cmp
pop
pop
in
jne
loope
loopne
lahf
jne
repz
sbb
movsl
into
call
addr16
mov
pop
dec
mov
sbb
movsb
xor
inc
push
out
scas
sahf
iret
and
jp
mov
rcr
inc
nop
lods
gs
addr16
orb
sub
in
xchg
jnp
push
sarl
jne
sub
or
outsb
xchg
aam
dec
push
adc
jecxz
fstps
outsl
dec
push
hlt
jne
outsl
jno
dec
or
add
cmpsb
jl
add
jge
aad
and
jnp
aaa
sbb
out
mov
mov
xchg
out
jle
cmp
test
cmp
insb
movsl
in
ds
into
sub
inc
and
inc
mov
cmp
adc
cld
jb
pop
cli
xchg
cld
ficomps
cmp
cs
jno
clc
leave
hlt
pop
mov
imul
mov
sti
pop
mov
dec
dec
aas
adc
in
mov
jg
jge
out
pop
fists
aam
inc
and
add
push
xor
add
fistl
cmp
mov
aad
test
fld
mov
addr16
mov
jb
sarb
jnp
jbe
scas
jnp
int3
dec
stc
and
cmp
pushl
jmp
loop
shll
and
pusha
fsubr
leave
cltd
sub
pop
jle
inc
shlb
adc
mov
jge
pop
fistl
test
jecxz
and
stos
push
xor
mov
into
out
repz
pop
ret
jbe
or
repnz
clc
aad
xchg
sub
ret
mov
testl
scas
cltd
and
dec
mov
rorl
sbb
sub
test
xchg
adcb
cmpb
cmp
loop
js
xor
mov
sub
leave
mov
sbb
loop
aad
lea
pop
outsb
popa
neg
rclb
loop,pn
fs
leave
jno
dec
inc
dec
jmp
loop
push
jl
dec
cld
movsl
data16
jmp
add
and
xchg
sbb
out
and
out
ds
cmp
jecxz
push
and
movsl
fdivrs
pop
xor
ja
or
out
push
mov
movsb
popf
out
shl
lahf
pop
pop
pop
std
push
in
add
push
fstp
mov
adc
jle
push
decl
test
sahf
jl
mov
pop
daa
popa
clc
push
cmpsb
popf
out
frstor
popa
outsl
loope
fs
jmp
outsl
aad
pop
out
xchg
mov
enter
inc
inc
xlat
add
jae
iret
fnsave
mov
into
xchg
jle
adc
and
movsl
popa
cli
jmp
loop
insb
out
fldenv
dec
out
adc
nop
pop
sbb
movsb
sub
dec
dec
sbbb
gs
cmpb
xor
mov
scas
aad
pop
xchg
and
lods
test
fidivrs
icebp
stos
popf
cmp
push
xlat
movsb
inc
aas
nop
jge
addr16
pop
xlat
lret
into
stc
push
sbb
mov
mov
stos
jns
inc
lret
inc
add
jbe
out
ret
adcl
ja
mov
cld
inc
xchg
cmpb
mov
inc
mov
inc
insl
ret
mov
fsubrs
jbe
or
aam
stos
test
dec
cli
xchg
testb
subb
jg
mov
stc
in
dec
inc
push
or
fsubs
xchg
mov
sub
fmul
xchg
gs
int
js
inc
and
cmpsl
jp
sub
addb
gs
hlt
xor
clc
add
out
push
mov
sbb
dec
cld
out
sar
out
or
lock
bound
out
pop
dec
scas
mov
fucom
xchg
adc
push
push
rcll
xchg
mov
pop
arpl
dec
loopne
mov
rcrl
jecxz
adc
orb
fstpt
xor
xor
cmc
pop
adc
cmp
aas
pop
xchg
insb
xor
pushf
pop
push
call
inc
mov
lods
jno
mov
cmpsb
add
icebp
in
mov
cmc
imul
mov
or
xor
rcrb
jo
sub
mov
test
push
mov
sub
jns
pop
in
ljmp
cmpl
cmp
push
negb
jecxz
mov
imul
mov
test
sbb
test
inc
xchg
dec
xchg
imul
pop
imull
or
rclb
test
fcomp
xchg
fwait
arpl
call
aad
mov
addr16
clc
pop
ljmp
push
lds
loopne
cld
pop
orb
push
add
mov
fidivrl
bound
sbb
fsubl
int3
ret
push
pop
and
push
sbb
push
jl
icebp
add
clc
mov
das
mov
cmp
jecxz
leave
mov
loopne
push
in
in
es
inc
sbb
test
add
push
pop
xor
pop
imul
imul
push
or
dec
inc
add
mov
movsl
andl
sbb
lods
cltd
and
lret
jecxz
adc
mov
mov
dec
xchg
mov
test
push
lret
mov
xor
insl
out
call
into
rorb
ljmp
out
or
and
fdivs
pandn
or
lret
pop
adc
rcr
inc
pushf
out
sbb
xor
inc
orl
lds
movsb
insl
outsl
aad
mov
mov
xchg
dec
mov
and
adc
cmp
fisubrs
dec
push
jnp
inc
outsb
push
xchg
sbb
mov
cmp
cmp
cmpsl
xchg
mov
mov
sbb
jnp
dec
pop
cltd
jle
fdivs
jbe
sub
js
jge
jmp
popa
adc
popf
or
mov
jmp
and
xor
loop
push
and
and
and
and
roll
jne
fmuls
sbb
movsb
xor
outsb
lods
inc
insl
int3
loop
mov
mov
pop
daa
mov
mov
jge
jecxz
push
lret
stos
push
cmp
push
jne
mov
or
xor
dec
cmpsl
xor
pop
in
les
pop
mov
inc
jnp
lcall
xchg
das
lret
repnz
or
lds
mov
lea
call
or
iret
push
and
mov
pusha
outsb
inc
loope
cmp
adc
pop
mov
enter
mov
aam
adc
js
mov
inc
mov
fs
inc
mov
mov
out
cmp
sti
fsts
adc
xchg
pop
sub
xlat
cmp
popf
sub
sbb
fstl
jns
add
push
int
pusha
pop
add
sahf
fnstsw
mov
or
xchg
rorl
and
cmp
dec
jo
jmp
fsub
sbb
inc
orb
aas
cmp
push
popa
sahf
mov
push
cld
push
les
mov
push
das
mov
and
pop
pop
or
movsb
pop
ret
test
jge
mov
dec
sub
ret
mov
fs
addb
cli
push
scas
mov
repz
bound
pop
out
mov
cwtl
mov
dec
cs
pop
lahf
push
dec
ret
loopne
mov
inc
hlt
jns
sub
sbb
jecxz
adc
jg
cmpsl
test
mov
add
cmpl
mov
or
out
and
push
pop
or
popf
lcall
xchg
xchg
sub
mull
mov
mov
cs
xchg
sbb
scas
repnz
sub
jb
adc
je
lret
das
push
pop
and
adc
xchg
enter
out
sbb
das
or
mov
sarl
mov
mov
pop
xor
cwtl
lahf
test
aaa
in
icebp
sub
addb
lret
mov
mov
xchg
cltd
inc
popa
mov
insb
mov
xchg
test
in
mov
imul
sbb
in
jg
insl
mov
fcmove
aas
push
jne
stos
mov
ds
into
test
cmpl
stc
xor
push
inc
shlb
dec
in
pop
adc
and
fisttpll
xchg
cli
mov
jne
add
mov
enter
jle
jge
out
add
fs
sbb
in
sahf
jmp
mov
subb
jecxz
gs
movsb
xchg
cwtl
jmp
stc
xchg
out
outsb
cmp
in
add
mov
cmp
fiadds
mov
sbb
test
rol
add
or
xlat
dec
fisubs
out
jecxz
int
cmp
adc
xor
frstor
repz
pop
sbb
ljmp
push
mov
jp
mov
add
pop
mov
or
mov
mov
adc
das
inc
add
int3
pusha
lock
arpl
inc
pop
popw
fwait
lock
fisttps
jecxz
dec
jle
lahf
and
gs
scas
and
jbe
add
sub
insl
xor
cmc
sbb
lea
sbb
jno
mov
push
test
inc
aad
xor
ja
loopne
xor
daa
push
adc
ss
out
and
lods
push
fbld
popf
jno
push
push
imul
daa
and
push
lahf
inc
fiadds
sub
mov
int3
in
faddl
sbb
sub
out
ds
dec
push
sbb
out
int
pop
hlt
pop
ret
scas
scas
mov
popf
sti
cmpsb
sbb
mov
jge
cmp
push
test
adcb
pop
xchg
cltd
pop
adc
mov
jge
cmpsb
leave
push
test
mov
rorb
cmp
dec
cwtl
mov
call
add
lret
jns
jne
adc
sub
insb
subl
jo
inc
pop
frstor
mov
fdivrl
int
jge
imul
xor
cmp
std
sahf
push
cmpsl
ljmp
push
add
sub
lds
or
mov
mov
sub
adc
scas
cmp
dec
or
lret
in
sub
notl
push
cwtl
ds
jns
arpl
in
cltd
outsl
push
mov
imul
or
aam
sti
outsb
addr16
mov
inc
nop
out
inc
ret
adc
leave
and
dec
ja
sti
shrl
push
push
add
shr
pop
inc
xor
xchg
mov
rolb
pop
insl
rorl
adc
or
int3
push
das
xor
xchg
mov
call
into
adc
jp
mov
dec
pop
bound
shlb
xchg
sbb
mov
fiaddl
scas
outsb
cmpsb
loopne
mov
xchg
mov
aam
add
loopne
loop
mov
jb,pt
jmp
xlat
sub
idivl
cs
dec
xchg
out
sbb
push
clc
repnz
or
repnz
addl
gs
and
test
and
push
test
in
push
cmpsl
sbb
sarb
imul
jo
mov
push
jns
insl
sbb
sub
and
xchg
xor
cmp
pop
pusha
cmp
push
lods
xchg
cmpsl
aaa
fidivrl
aam
and
push
xchg
fisubl
jns
mov
xor
jae
subl
ficomps
mov
lret
add
aam
xchg
in
jbe
mov
adc
out
scas
out
xlat
cltd
mov
mov
mov
xchg
adc
dec
push
test
jbe
aam
adc
test
aad
dec
cmp
push
scas
enter
sub
xchg
imul
out
adc
pop
xor
fstpt
nop
fsts
dec
divb
mov
insb
shl
fcmovu
lret
sub
mov
adc
aad
sbb
add
leave
xchg
add
test
lret
gs
push
mov
repnz
out
int
add
insb
xchg
jne
adc
push
jge
jp
cli
mov
dec
cld
andb
dec
call
or
or
cmp
pop
mov
scas
sbb
inc
loope
aaa
jecxz
fcmovnu
lret
add
dec
daa
add
out
and
or
pop
das
cmpsb
ret
mov
ja
cmc
cld
jecxz
in
push
push
dec
mov
pop
rolb
pop
push
or
out
ja
fwait
xchg
popa
test
mov
inc
push
in
enter
sbb
lret
icebp
loope
xchg
movsl
cmc
rcl
roll
pop
lcall
mov
push
jae
repz
ljmp
addr16
adcl
ljmp
lods
lds
lret
pop
lods
outsb
xor
filds
sbb
cmp
dec
popf
pop
and
aam
jmp
jecxz
cmpsb
mov
pop
test
or
pop
rolb
adc
mov
enter
pop
aaa
jno
cli
or
mov
sahf
in
cltd
push
fstl
adc
jl
dec
dec
std
cmpsb
pop
sbb
shl
iret
cmp
pop
test
jae
xor
idivb
out
mov
lds
mov
xchg
popf
outsl
jmp
mov
rcrb
repnz
in
ret
fstpl
int
xchg
and
popf
jnp
jno
out
call
add
sbb
rcr
pop
mov
cwtl
add
or
sub
int
ja
cld
jp
rcr
repz
or
adc
xchg
je
jmp
insb
inc
outsl
mov
fstpt
lock
insb
insl
jne
mov
mov
sub
addr16
cmp
push
fidivs
dec
fidivs
fldenv
ja
out
pop
inc
iret
imul
in
or
adc
icebp
mov
arpl
push
xchg
dec
mov
mov
inc
stc
mov
movsb
test
mov
mov
mov
mov
cmpsb
loopne
sbb
ficoms
fs
xlat
outsb
inc
rolb
out
in
push
in
test
aas
fucomp
jbe
jg
inc
cmp
repnz
test
ljmp
iret
xor
sub
adc
mov
fisubrl
fisttpl
xchg
pop
or
push
lods
hlt
lods
add
mov
ljmp
out
cwtl
sahf
mov
enter
jge
ljmp
push
dec
movsb
popl
xchg
push
stc
push
out
pop
inc
call
mov
popa
lods
pop
pop
sub
ja
loopne
clc
out
ss
mov
arpl
lds
xchg
adc
fildll
and
outsl
inc
gs
popa
out
jns
pusha
sub
mov
int
push
leave
sbb
sbb
ja
mov
push
ret
gs
jle
mov
xor
popa
dec
je
push
andb
mov
cmp
sahf
pop
mov
popf
cs
mov
cmpsl
dec
mov
aaa
rcrl
test
mov
cwtl
inc
in
adc
sub
in
mov
xor
adc
test
sub
mov
gs
ljmp
dec
xor
sub
xchg
nop
xchg
mov
inc
add
mov
repz
sbb
shr
aas
jp
mov
inc
movsl
cmpsl
push
jnp
inc
adc
dec
mov
shlb
xchg
ss
or
lea
lock
adc
insb
aas
addr16
hlt
fisubrs
jb
pusha
cmp
in
inc
dec
jbe
dec
in
orl
test
ret
push
lret
sbb
pop
mov
jle
sbb
int
test
xor
mov
les
push
add
fmul
pop
add
add
outsb
test
sahf
test
aaa
aaa
out
stos
jmp
or
xchg
pop
cld
divb
in
jecxz
call
pop
rcrl
dec
mov
mov
sti
adc
sub
push
lods
in
pop
add
and
inc
outsb
addr16
insl
lock
jo
andl
mov
test
mov
ss
in
dec
shll
in
mov
xchg
aad
dec
xor
sub
scas
inc
cmpsl
shll
int3
jle
lods
repnz
cmp
xor
cmp
jp
push
sbb
and
lret
mov
cld
push
xor
xchg
jge
mov
dec
in
or
cmp
mov
std
pop
fldl
push
test
fdivl
nop
test
pop
push
daa
out
mov
rcll
in
xor
cli
lret
insl
adc
mov
or
fs
outsb
lods
mov
inc
mov
int
ret
fimuls
inc
and
les
push
cmp
outsb
imul
aam
mov
mov
aam
imul
add
push
push
and
mov
jge
jle
push
lahf
mov
dec
in
cli
mov
ret
sub
lods
sbb
cmpsb
cmp
fistps
es
mov
jle
push
pop
push
jae
scas
test
fimull
pop
xlat
popl
push
sub
pop
pop
jp
xor
test
test
inc
mov
cmp
pop
or
je
push
adc
je
inc
mov
jno
xchg
pop
push
stos
aas
add
sbb
mov
cmp
jge
xchg
xor
rclb
mov
out
ret
cltd
xor
dec
fst
adc
dec
push
xchg
out
addb
in
add
inc
sarl
imul
jge
xchg
popa
adc
inc
xor
addr16
mov
jno
out
add
gs
ja
fwait
pop
jnp
mov
xchg
insb
jecxz
gs
pushf
jae
mov
loope
mov
gs
cltd
push
cmp
mov
shr
iret
push
jge
iret
push
cmpsl
add
pop
imul
inc
lds
xor
andb
mov
lods
xchg
loopne
mov
fsubp
sub
xchg
fldenv
outsb
add
dec
push
cwtl
sub
push
jae
sbb
or
jecxz
cmc
outsl
movsb
jmp
sbb
test
popf
lods
or
push
andl
add
xor
movsl
sbbl
popa
into
jmp
addr16
arpl
stos
test
xchg
out
dec
sbb
lcall
repnz
jmp
xchg
mov
popf
inc
and
jnp
add
add
push
mov
jecxz
add
mov
or
xlat
sbb
add
ja
or
pop
inc
ja
ds
rol
and
pop
jae
cli
pop
arpl
popa
stos
push
jne
out
pop
dec
data16
sarb
iret
jo
dec
stos
or
clc
cwtl
mov
daa
in
int
push
aas
mov
or
outsb
cltd
dec
fidivrs
loopne
sbb
ret
dec
into
and
jecxz
adc
jg
and
and
jns
jl
sbb
mov
xor
push
sahf
sbb
pusha
sti
push
mov
push
or
pop
lret
repz
das
ficompl
movsl
lret
hlt
adcb
iret
xchg
cltd
sub
icebp
stos
repz
in
arpl
pop
cwtl
test
sub
lods
add
cs
out
add
push
outsl
mov
xchg
jo
dec
test
xlat
dec
jg
enter
jno
ss
adc
test
cmp
shl
push
sbb
out
or
push
movsb
cld
sbb
dec
cld
popf
fwait
into
fdivs
jge
sbb
inc
insl
dec
inc
nop
inc
stos
jle
out
and
mov
dec
in
pop
pop
mov
push
test
sbb
cmp
mov
and
or
sub
fcom
sbb
mov
pop
fnstenv
add
ja
pop
dec
jns
call
push
push
mov
jb
imul
jl
cmc
xchg
orb
std
pop
cmp
fdivp
fld
push
js
mov
push
sbb
dec
and
sub
push
adc
and
mov
inc
es
loop
mov
sub
jmp
xor
imul
pop
jg
mov
mov
inc
frstor
filds
out
cmpsl
push
test
insl
xchg
jp
je
pop
sub
sub
loop
lcall
into
fstps
icebp
cmp
mov
test
and
inc
sub
xchg
push
mov
cmp
fidivs
jae
mov
movsw
insb
inc
addps
mov
rcrl
xchg
data16
sbb
nop
pop
into
test
sahf
lods
xor
mov
repz
pop
clc
sbb
sbb
rclb
push
cmc
add
inc
sub
decb
arpl
cmpsb
call
add
ljmp
dec
sub
mov
and
push
gs
sti
xor
call
mov
mov
inc
andl
push
inc
popf
mov
shll
push
adc
pushf
clc
or
and
and
cmpb
repz
cmpsl
mov
xor
mulb
test
add
dec
inc
in
outsb
aam
dec
cld
or
pop
gs
not
in
mov
mov
adc
xchg
xchg
loopne
inc
jge
cmc
cltd
or
ficoml
and
test
orl
xchg
xor
jge
sub
lahf
push
mov
inc
add
sub
add
sti
insl
loop
or
repnz
mov
cs
or
push
test
dec
mov
mov
ljmp
pusha
fidivrl
jge
mov
mov
loop
and
insl
outsl
popa
out
fimull
into
insb
add
push
pusha
xor
mov
out
fmull
fldenv
scas
mov
inc
jge
aad
out
lock
xchg
into
imul
int
into
std
pop
loope
pusha
push
iret
imul
test
lock
out
xlat
sub
aaa
add
cs
push
arpl
jecxz
enter
sti
cmp
and
cmp
jo
add
inc
cs
clc
imul
xchg
push
pop
and
cmpsl
aas
dec
arpl
std
dec
push
inc
push
sbb
cmpsl
stc
sub
aaa
fnsave
inc
test
leavew
push
mov
scas
loopne
dec
jbe
pop
dec
xchg
pop
stos
je
dec
ss
fsubs
cmpsl
or
pop
mov
aas
sbb
test
push
adc
sarl
in
gs
stos
add
dec
jb
dec
das
scas
xor
mov
and
dec
imul
shrb
inc
pop
jo
dec
xchg
out
cs
xor
sub
dec
dec
scas
dec
test
inc
push
jns
inc
xchg
ret
mov
aad
xor
jp
aam
fs
push
xor
xlat
mov
ss
inc
mov
adc
cmp
adc
andb
jle
stos
loop
shlb
xchg
sub
sbb
in
lods
fildl
enter
and
xor
add
mov
push
int
rcrl
pop
hlt
add
out
xchg
fistpll
mov
mov
lret
into
mov
jns
push
cwtl
inc
push
push
sbb
faddl
push
cmp
lahf
shll
cs
jo
xor
sarl
pop
repnz
inc
das
in
pop
cmpsb
imull
inc
std
mov
inc
rolb
fsubrl
mov
mov
mov
in
cmpsb
loop
sbb
cltd
sbbl
fmuls
js
nop
inc
lcall
shll
xor
mov
dec
xor
lret
mov
cmpsl
mov
scas
mov
dec
pop
pop
xchg
lret
pop
icebp
xchg
push
push
jb
movsl
lret
mov
inc
or
mov
es
imul
sbb
pop
aaa
call
sti
aam
xchg
movsb
enter
adc
nop
ja
xchg
and
adc
mov
dec
in
and
jl
jne
loop
cmp
adc
jno
jl
jns
fisttpl
jl
lds
or
pop
pop
in
push
lret
dec
int3
jg
cmc
cmp
mov
mov
ds
jo
test
pop
inc
add
mov
pushf
rolb
mov
mov
dec
loope
add
in
js
pop
scas
sbb
iret
fcom
loopne
dec
mov
lahf
inc
jg,pn
insl
sbbl
mov
rolb
insb
xchg
enter
ret
cmp
andb
push
icebp
add
addr16
enter
insb
xor
xlat
scas
dec
rcl
mov
pushl
mov
xor
and
add
cld
cmp
test
add
aaa
popf
in
test
and
pop
push
add
mov
or
mov
cmp
popa
aas
or
je
xchg
mov
dec
inc
lods
mov
mov
test
pop
cmpsl
insl
fidivl
clc
fistps
push
mov
fucompp
pop
push
cmpsb
inc
das
fldt
mov
adc
das
inc
scas
and
test
push
fcompl
add
leave
popa
dec
ja
mov
pop
adc
shrb
mov
negl
test
bound
pop
push
popf
repnz
push
pushf
pop
or
xor
fisttpll
stos
mov
in
loopne
xor
sahf
mov
rolb
ljmp
mov
les
add
call
ret
mov
cmp
push
stos
adc
fldt
push
add
xor
mov
les
into
aas
fst
mov
cmp
stc
sub
mov
and
xor
pop
loope
loop
sub
jno
cwtl
in
push
lret
sti
sahf
mov
or
cmp
cmp
repnz
and
and
xlat
sbb
push
pop
fistl
push
addb
mov
sbb
sbb
fs
ljmp
push
setne
int3
dec
add
push
clc
inc
je
inc
in
jne
mov
addr16
jl
inc
ret
call
dec
pop
cmpb
in
adc
shll
sbb
lahf
sub
push
subl
aad
aas
loope
pop
sub
mov
mov
mov
outsl
mov
push
fnstenv
insl
cli
add
ret
call
sti
test
or
cmp
jae
dec
add
ret
sbb
xchg
loop
lahf
insb
test
aas
push
sti
shlb
sbb
or
aas
sahf
xlat
add
xchg
cmpsb
daa
xchg
mov
imul
pushl
mov
adcb
add
xor
cwtl
shrl
jl
shrb
push
ss
xchg
adc
pusha
and
and
xor
rorb
and
dec
push
cmovno
xor
inc
in
test
cmp
ja
les
sub
sub
fiaddl
jbe
pop
mov
lds
ds
mov
lahf
jle
or
pusha
lods
clc
cmp
or
jge
sub
addb
adc
aaa
sub
mov
daa
testb
cld
mov
in
mov
popf
stos
stos
push
xchg
xchg
and
incl
xchg
lcall
xchg
ds
in
jle
aaa
outsl
and
or
push
ficomps
rcrb
jnp
lret
test
inc
cwtl
mov
xchg
push
or
sbb
push
scas
push
add
outsb
and
imul
test
ret
idiv
jae
pop
nop
sahf
mov
fisttpll
push
fcoml
cli
bound
xchg
adc
push
fisubrs
cmp
push
mov
movsl
mov
adcb
mov
push
loop
daa
insb
test
imul
insl
sti
mov
mov
jo
addr16
cmc
lods
mov
inc
cld
insb
sbbl
aas
jl
notl
pop
jno
mov
andl
push
push
lds
loope
sub
jge
lea
add
test
fdivr
inc
filds
in
xchg
ror
adcb
mov
mov
test
sti
dec
adc
and
xor
ret
loope
gs
adc
dec
stc
or
add
sbb
lea
rcrb
adcl
movntps
mov
std
cmp
sub
movsb
cmp
push
cli
aam
or
dec
xor
stos
cwtl
pop
out
push
add
mov
inc
add
mov
or
popf
sti
cltd
ljmp
jo
sub
or
jecxz
inc
ss
clc
inc
mov
imul
rcrl
jno
mov
pop
cs
push
jg
push
push
mov
cmpsb
sub
fwait
dec
arpl
notb
loopne
push
loope
or
adc
inc
inc
add
xlat
dec
outsl
lea
jbe
mov
jl
iret
aaa
mov
cmp
mov
push
movsl
cmp
adc
jo
xchg
out
jmp
mov
arpl
jecxz
sub
icebp
out
cwtl
and
xor
mov
int3
dec
lcall
addl
push
and
inc
scas
cwtl
mov
push
jmp
mov
lret
fidivrs
out
mov
sbb
andb
imul
add
mov
add
cmp
ljmp
loop
xchg
xor
std
fwait
shlb
lds
test
pop
sbb
cmpsl
nop
pop
sub
daa
mov
cmpsl
push
test
mov
xchg
std
pusha
ds
or
push
xor
aaa
nop
mov
out
jns
fstps
xchg
scas
outsb
rcrb
pop
sahf
sarl
jl
fs
shrl
xor
pop
jo
jle
leave
jae
xchg
scas
push
int
jl
jecxz
or
and
pop
and
repnz
dec
ret
nop
mov
popa
out
scas
jbe
and
pop
or
and
xchg
add
insb
or
adc
int
xchg
jecxz
sahf
jmp
out
jl
push
ficoml
mov
dec
adc
pop
pop
fstpt
enter
pop
xor
cli
and
fcos
fptan
dec
imul
test
lret
ljmp
aad
ss
dec
sub
es
cmp
mov
mov
jno
enter
mov
mov
sbb
dec
pusha
ss
movsb
in
pop
adc
cmp
xor
shl
sbbl
pop
sub
mov
mov
push
sbb
popa
adc
cvtps2pi
xchg
sub
arpl
cmc
cltd
outsb
and
call
push
add
mov
push
lcall
pop
push
repz
into
lret
pusha
es
cli
in
mov
sub
xchg
std
ljmp
pop
in
test
shll
cmp
arpl
pop
enter
out
icebp
cltd
mov
sbbl
das
xor
les
incl
or
inc
outsb
lock
sbb
movsl
inc
jnp
push
or
out
cmp
xchg
enter
add
mov
mov
clc
scas
mov
scas
leave
cmc
out
mov
push
test
fwait
mov
or
ds
js
jns
xchg
sub
add
cli
push
in
hlt
mov
shll
cld
stc
imul
pop
or
lahf
lret
add
mov
jp
jbe
mov
xchg
xor
pop
icebp
repnz
insl
scas
xor
leave
jp
inc
insb
in
pop
dec
sub
icebp
mov
outsl
adc
leave
rclb
or
stos
xor
aaa
jecxz
fbstp
je
addr16
lods
hlt
sbb
mov
das
ficomps
in
orl
mov
mov
fisubrs
out
mov
insb
lret
inc
out
loopne
rolb
popf
dec
dec
int
out
ss
jp
clc
das
add
mov
shl
popf
lds
mov
nop
dec
fnstenv
cld
dec
mov
jbe
push
ds
mov
pop
call
cmpsb
js
out
or
scas
push
repz
lret
pusha
push
and
fldcw
aaa
cmp
cmpsl
sar
mov
fcoms
adc
test
and
aas
les
fnstenv
decb
test
inc
xchg
pop
xchg
push
dec
pusha
pop
rcl
lods
pop
jl
imul
arpl
or
mov
push
sbb
popf
mov
stc
push
sbb
out
std
adc
sbb
shrb
dec
jmp
and
dec
cmp
sub
enter
mov
movsb
inc
int
jo
loope
test
jmp
decl
test
dec
pop
cmp
mov
test
test
inc
cmp
lret
addl
int
shlb
inc
inc
jae
repz
addr16
mov
aas
sahf
xor
outsb
push
idivl
sbb
loopne
cltd
ret
pop
cmp
out
xchg
adc
lods
push
push
jns
sbb
xchg
xchg
sbb
inc
fildll
adcl
inc
gs
jp
xor
adc
sub
jno
minps
or
dec
fiadds
je
pmaxub
sarl
pop
cmp
push
test
into
popf
jo
jbe
pop
icebp
mov
fidivrl
cmc
fs
gs
shrb
mov
xchg
xor
mov
inc
jnp
stc
out
adc
scas
lds
push
ja
jmp
cwtl
fdivrp
scas
pop
lods
dec
inc
cltd
movntq
and
test
movsb
inc
adc
xlat
mov
fwait
int3
jmp
cmp
jle
push
sbb
movsl
aas
and
lods
sbb
or
add
stos
lcall
or
push
gs
push
sarl
dec
and
jecxz
adc
ret
pop
inc
push
jo
xchg
hlt
incl
adc
lsl
repnz
lods
loope
in
sahf
and
stos
scas
push
xor
std
cmpsb
mov
movsb
test
mov
out
test
cmp
icebp
out
es
jmp
cwtl
xor
std
loopne
xchg
fdiv
pop
aas
adc
add
inc
int
add
jno
pop
pop
push
add
lds
pop
mov
sub
push
adcb
or
mov
sahf
rclb
out
push
and
jmp
out
dec
jmp
je
sbb
xchg
daa
jo
inc
and
mov
sarl
mov
jnp
xchg
mov
stc
hlt
add
aas
bound
or
xchg
mov
fucomp
adc
cwtl
in
test
add
mov
pop
mov
into
ret
adc
leave
int
imul
sbb
leave
xlat
jle
aas
fsubrs
cmpl
fcompl
movsb
mov
adc
aas
bound
test
fs
cmp
lods
loopw
movsb
hlt
imul
push
mov
mov
and
xchg
sbb
push
adc
outsb
ret
int
jbe
lcall
push
adc
mov
adc
jl
ds
test
dec
push
dec
xchg
sbb
lahf
stc
out
xchg
mov
popa
lock
sub
outsl
xchg
mov
sub
loope
xchg
arpl
lds
aam
sbb
inc
jle
jl
cmp
cmpsb
dec
into
sbb
cmp
jg
or
repnz
fld
stos
jae
dec
mov
cltd
dec
or
in
mov
push
divb
push
pop
stos
imull
push
mov
call
and
sti
test
pop
in
push
and
fidivs
sti
xchg
les
aad
mov
mov
das
and
inc
and
dec
stos
push
movb
push
out
leave
insb
push
fistps
xor
ljmp
push
mov
sbb
fistpll
leave
sub
mov
mov
ljmp
rcrl
xchg
xchg
cmp
lds
les
les
adc
je
jb
jae
add
ds
mov
cs
call
icebp
sub
arpl
xor
inc
gs
sbb
or
lea
push
push
xorl
stos
pop
xor
por
in
add
sbb
scas
vucomiss
push
stos
cmp
lret
inc
pop
and
jmp
shl
mov
cmpsl
lds
and
lahf
mov
popa
aad
bound
in
jle
repnz
mov
mov
imul
loopne
jge
stc
shll
sbb
jns
fnsave
push
and
pop
addr16
cmp
adc
mov
sub
sub
xor
scas
shl
mov
jne
loop
xrelease
xchg
fs
xor
ljmp
mov
nop
xchg
arpl
ljmp
and
mov
lret
mov
fnstcw
pop
in
jns
push
in
fnstcw
in
cmp
leave
mov
popf
imul
shrl
cmp
and
sub
in
inc
sbb
push
insb
or
repz
leave
mov
subb
in
push
movb
xchg
lcall
adc
pop
xchg
or
add
out
pushf
push
mov
stos
inc
add
inc
popa
push
inc
insb
sub
jmp
sub
mov
sahf
mov
inc
xchg
adc
push
pop
push
fldt
cmp
mov
idivl
jge
mov
lds
sub
pop
jne
inc
leave
push
mov
mov
sub
cmp
mov
stos
test
test
cmpsl
jne
dec
lahf
stos
pop
sub
and
jge
daa
test
aam
cwtl
sub
pop
in
out
inc
xchg
les
lahf
pop
and
inc
lret
lret
add
in
arpl
out
cmp
xchg
pop
add
inc
ficomps
push
faddp
cltd
xor
mov
dec
adc
mov
loopne
jae
mov
or
jb
mov
ljmp
mov
cmp
jb
xchg
in
jle
xchg
cmp
outsl
mov
jecxz
sub
imul
pop
cltd
mov
mov
pop
add
jo
push
xor
mov
push
ds
xor
sbb
xor
xor
adc
in
aam
inc
mov
movsb
xor
xchg
xor
test
stos
imul
lret
jmp
and
sbb
jle
js
fcoms
lods
imul
xchg
scas
lahf
pop
insb
fcmovu
es
testl
pop
mov
sbb
adc
xchg
xchg
cwtl
adc
pushf
dec
stos
cmp
out
in
lods
or
rcl
and
aad
insb
sub
mul
scas
insl
jmp
push
lret
dec
test
adc
jecxz
dec
mov
dec
inc
xor
mov
xchg
in
mov
in
add
fildll
inc
lahf
jb
repnz
sbb
inc
cmp
dec
mov
jecxz
lods
adc
out
inc
jnp
aaa
push
test
lock
pop
inc
pop
adc
popa
inc
or
mov
insb
in
xchg
mov
push
and
adc
test
mov
lds
out
and
test
xchg
xlat
adc
jno
roll
loope
movsl
rolb
ret
push
les
and
das
test
mov
cwtl
hlt
mov
mov
pop
fistps
sbb
sbb
stos
dec
ss
js
int
cmp
jne
pop
leave
mov
out
push
push
ljmp
test
adc
xchg
rcrb
push
mull
xlat
mov
mov
addr16
sbb
sub
or
pop
adc
mov
pop
imul
mov
loope
fs
std
pop
mov
imul
lret
leave
inc
lock
jl
lcall
ret
or
dec
je
in
sub
cmp
fldlg2
jae
fsubrl
dec
mov
pop
or
jo
push
push
dec
xlat
test
mov
pop
enter
mov
sti
cmc
ds
fidivs
test
arpl
in
pop
lds
mov
xor
idivb
rorb
call
pop
xlat
push
or
std
sub
jle
jb
push
cs
aas
jp
xor
lret
bound
xor
pop
repz
in
sub
xor
add
fwait
mov
add
inc
xchg
adc
sub
xor
xor
xchg
jae
jne
jl
xchg
mov
dec
aas
xchg
fstpl
aas
enter
adc
int
adc
xor
mov
es
xchg
cmp
loop
dec
jne
lea
test
dec
popf
and
pop
pushf
mulb
sbbl
jns
push
lea
stc
stos
adc
pop
out
xor
inc
lods
stos
int3
test
pop
mov
jge
push
adc
cli
cli
xlat
jmp
popf
in
mov
leave
or
xchg
pop
jae
or
repz
sti
push
add
out
pmovmskb
aam
jb
or
mov
xor
movsb
clc
cld
xchg
jb
ljmp
xor
addr16
stos
test
arpl
push
add
mov
xor
stos
inc
les
mov
cmp
ss
lea
mov
cmp
cmpsl
out
nop
mov
xor
inc
mov
sbb
jmp
sub
test
cwtl
enter
jl
xor
in
nop
dec
cld
sub
faddl
xor
in
imul
sar
fs
or
push
mov
add
fwait
lds
mov
adc
mov
test
xor
push
outsb
dec
xchg
pushl
clc
xor
xchg
xchg
pop
sbb
loop
push
dec
add
inc
cwtl
out
and
adc
mov
and
jb
sub
sub
scas
add
push
stc
rorl
lahf
in
mov
lahf
mov
fisttps
mov
test
push
pop
cmp
jns
xlat
in
jae
lahf
and
pop
add
push
mov
in
and
jmp
test
outsb
cmp
and
fildl
or
sub
or
jmp
sub
popf
imul
sub
arpl
dec
adc
mov
xchg
sub
mov
xchg
fstl
std
and
mov
pusha
js
jnp
cmp
lds
xchg
pop
push
rclb
xor
xchg
sbb
ret
xor
test
dec
loop
lcall
adc
sahf
sbb
pushf
leave
add
cmp
xchg
orl
xor
lds
out
pusha
sbb
ret
aad
or
jp
cmp
mov
xchg
in
sbb
push
idiv
fdiv
test
xor
mov
nop
je
dec
pop
jmp
in
fwait
repz
scas
dec
sub
dec
xchg
add
mov
lret
mov
scas
cltd
push
dec
lock
ljmp
shrl
lret
out
repz
ds
rolb
xlat
lock
push
imul
shl
aad
and
vmovsldup
add
aam
imul
testl
mov
add
sub
pop
dec
mov
adc
jg
or
popa
mov
cwtl
js
ret
std
mov
mov
dec
movsb
ret
ljmp
pop
sar
mov
sbb
mov
push
mov
sub
jmp
fiadds
je
adc
icebp
es
mov
jb
in
cmp
jmp
cli
add
adc
dec
mov
lret
ja
lret
jp
pop
int3
imul
mov
sub
jae
sbb
addr16
pop
jge
loope
pushf
pop
es
jp
fistps
push
push
xchg
mov
dec
lahf
pop
jp
pop
leave
mov
cltd
in
data16
inc
dec
mov
not
push
inc
popf
xchg
pop
ja
inc
push
rcr
mov
sahf
shl
out
adc
inc
xchg
ret
or
insb
arpl
idivl
inc
sbbl
loope
sbb
sub
dec
hlt
frstor
mov
inc
and
mov
sub
fcoml
ds
adc
in
jg
mov
adc
arpl
enter
cmpsb
mov
add
bound
push
fsubs
dec
push
xchg
cmp
xlat
jge
repnz
push
add
push
test
dec
in
stc
and
sbb
clc
push
hlt
mov
adc
pop
cmp
int
add
or
decb
jns
mov
inc
aaa
stos
push
add
loop
add
xlat
cmp
adc
jo
pushf
notb
jl
cld
push
jmp
enter
adc
cmpl
xchg
movsl
rcrl
enter
jg
dec
xorl
pop
cmp
test
jae
popa
in
cmp
cmc
add
ljmp
adc
test
inc
push
dec
pop
pop
sbb
dec
mov
sub
aam
xlat
negb
out
cmpsl
or
pop
gs
sub
out
and
pop
push
insb
movb
mov
fidivs
outsb
aas
and
pop
in
pop
imul
fnstcw
pushf
mov
js
inc
mov
sbb
pop
test
jmp
std
repz
dec
ficompl
fadds
test
dec
sbb
inc
cmp
jo
dec
xor
dec
int
inc
jge
ja
int
dec
cmp
mov
sbb
mov
cs
or
dec
jp
mov
jmp
cmpsb
and
push
cmpsb
sub
dec
push
mov
and
popa
dec
loopne
sub
ljmp
or
repnz
lds
sub
sub
clc
mov
xchg
mov
clc
popa
jg,pt
jle
stc
iret
add
or
pop
ficoms
mov
fimuls
jno
push
mov
pop
jnp
push
add
or
or
leave
fldenv
or
inc
ret
sub
mov
pop
or
mov
leave
sbb
sub
cli
in
insb
push
cmp
mov
push
pushf
fisubrl
jle
inc
push
pop
sahf
lods
das
mov
xchg
loopne
bnd
sbb
subps
fwait
cmp
sbb
cmp
xorb
mov
movsl
jnp
inc
push
inc
int
xor
push
clc
sbb
aad
sahf
call
or
fwait
mov
jp
fsub
adc
sub
test
aad
dec
inc
fdivs
inc
mov
cld
jl
cltd
xor
push
jo
sbb
lret
mov
jl
adc
lods
cmp
inc
imul
daa
enter
mov
pop
das
dec
sbb
daa
sbb
add
andb
lahf
push
push
mov
jbe
mov
mov
xlat
lock
iret
das
std
pop
cmp
xchg
pop
sub
std
sbb
pushf
inc
mov
ret
aad
and
push
mov
outsb
movsb
stos
scas
adc
xor
jp
int
jno
out
bound
mov
jo
pop
mov
add
pop
in
mov
movsb
repz
mov
adc
lcall
push
stos
and
dec
jae
lds
adc
ficoms
repz
xor
inc
add
js
sub
xor
push
sbbl
aas
lods
mov
lock
mov
pop
xlat
rcl
jmp
sbb
jge
jg
mov
jo
sub
and
es
int3
testb
pop
aad
div
jae
jno
mov
stos
and
aaa
inc
popf
xchg
mov
bound
sub
sbb
cmpsl
fimuls
sbb
sbb
xor
pop
mov
push
shll
hlt
insl
jmp
xchg
jge
or
fstps
push
out
fisttps
jmp
cltd
xor
add
add
popa
mov
sbb
push
inc
fnstcw
pushf
push
lea
cmc
movsl
inc
call
xchg
push
loopne
fwait
neg
int
sub
out
cmp
pop
mov
cmpsb
mov
cltd
out
fistps
dec
loope
sub
int
ss
adc
mov
push
sub
add
and
fisubl
dec
inc
cmpsl
icebp
add
xor
loop
cli
repnz
cltd
or
sub
jns
sbb
nop
adc
jae
cmp
cmpsb
lods
sub
push
testl
call
sti
push
call
pop
dec
shl
fistl
sbb
lock
cld
les
dec
adc
outsl
and
cs
and
cmp
adc
mov
xchg
sub
adc
mov
xor
pop
mov
push
cmpsl
jl
sahf
test
push
sbb
rcrb
rcl
sub
scas
mov
jl
hlt
xchg
cli
cmp
sbb
fcomip
xor
outsl
and
adc
cmp
adc
int3
lahf
cmp
jno
outsb
shl
dec
sbb
mov
mov
int3
iret
jp
lock
das
cld
xchg
cmpsl
xchg
mov
and
adc
mov
ja
push
lea
test
popa
outsb
sahf
xchg
aad
dec
xchg
mov
sbb
sbb
jl
inc
and
divb
int
dec
xor
sbb
imul
lods
adc
out
or
mov
ret
in
insl
lods
sbb
adc
sub
inc
inc
jecxz
mov
mov
inc
test
and
jae
aaa
aas
adc
je
jecxz
loop
ror
and
sub
cltd
jmp
push
adc
mov
ret
pop
or
mov
and
out
add
int3
inc
pop
or
and
cmpsb
addb
xchg
push
in
sub
mov
ljmp
xor
out
ja
cmc
test
xlat
push
out
pop
pop
adc
cmpsb
cmp
adc
dec
mov
fistl
shl
push
mov
jmp
mov
cwtl
call
fs
adcb
clc
movsl
xchg
push
mov
mov
push
mov
jnp
xchg
or
fwait
cmp
stc
icebp
and
inc
fisubl
push
inc
mov
jp
dec
sbb
adc
gs
dec
je
add
loop
lds
out
xchg
inc
push
sub
xorl
sbb
int
mov
cmp
jmp
push
add
mov
or
add
inc
mov
add
stos
shrl
push
or
mov
test
out
stc
inc
lock
mov
adc
rcrb
sbb
repz
xchg
jae
push
dec
inc
pushf
sahf
adc
xor
into
or
xor
sub
test
dec
xchg
inc
and
push
mov
das
pop
imul
mov
sub
jae
stc
aam
loop
loopne,pt
push
sahf
cmc
mov
dec
aad
and
rcrl
mov
dec
xor
call
cmp
jmp
sbb
aad
in
fwait
xorl
aaa
outsb
sub
hlt
int3
push
push
sub
popf
xorb
adc
or
inc
cmp
adc
or
inc
or
out
pop
cli
bndstx
test
or
pop
xor
push
cld
out
das
inc
mov
lret
dec
addb
jo
aas
cmp
xchg
adc
xchg
iret
neg
xorb
scas
testl
jbe
in
loope
hlt
and
mov
xchg
iret
adc
push
cwtl
cmp
hlt
and
cltd
cwtl
ja
mov
in
scas
and
sbb
push
jbe
jmp
pop
push
mov
mov
cwtl
jge
add
dec
xchg
rcrb
roll
mov
or
dec
mull
lock
es
std
pop
cmp
out
or
xchg
add
sbb
push
cmpsl
pop
ret
xchg
lods
cmp
sbb
cmp
add
cmp
inc
push
sub
cmp
mov
mov
cmp
jno
adc
jecxz,pn
daa
nop
mov
or
mov
pinsrw
insb
push
lea
adc
repz
push
fsub
pop
lea
jbe
jmp
loopne
shr
pop
mov
xchg
sub
xchg
xchg
push
in
cwtl
cld
and
call
pop
mov
and
aaa
mov
inc
cmp
sub
mov
subb
outsl
sahf
pop
xor
push
xor
cmpsb
rorl
loopne
mov
int3
scas
mov
pop
push
pop
adc
nop
jp
mov
and
popf
fs
loopne
jge
cmp
ret
bound
lods
jno
cmp
outsl
pop
mov
int
lock
shlb
and
xchg
testl
dec
dec
mov
pop
lea
push
pop
ja
jne
inc
fcomps
or
cmc
inc
stos
movsb
cmp
pop
pop
xorb
call
jnp
sarl
and
dec
out
outsb
mov
and
cmpsb
inc
cmpsl
scas
mov
inc
jmp
lods
testb
jne
movsl
add
mov
data16
adc
fcmovnu
in
cmp
or
scas
std
fstpl
dec
and
sbb
shrb
inc
fcmovbe
lock
cltd
int
push
sub
out
mov
jp
adc
sub
bound
jne
test
or
xor
lret
add
shr
jns
movzwl
jnp
cmpsl
decb
setbe
mov
jp
enter
aaa
ja
rorl
fcmovnbe
mov
jmp
push
or
dec
sub
mov
or
in
daa
pop
sbb
jecxz,pt
nop
push
sub
jbe
fdivr
fisubrs
xlat
inc
cmp
xor
and
sbb
cmc
mov
divl
aad
jecxz
dec
jl
shrl
push
fisttpll
popf
notb
insb
xor
dec
test
or
xchg
xchg
pop
sbb
sbb
cltd
push
ljmp
sub
mov
ror
mov
lea
bnd
stos
push
jb
inc
lahf
repz
cmp
xchg
cltd
int3
xchg
sub
pop
and
out
cli
jecxz
push
jl
ret
push
pop
imul
xor
lahf
ss
xor
js
jecxz
mov
fisttps
ret
sbb
push
ret
and
or
jmp
jle
int3
mov
sub
je
and
movsl
lret
inc
clc
mov
sahf
mov
into
add
sti
adc
outsl
adc
ja,pt
scas
cltd
pop
jg
pop
orl
sti
mov
cli
mov
cmpsb
and
clc
pushf
hlt
movsl
pusha
sahf
test
xchg
and
and
aas
stos
dec
outsl
dec
stos
test
cmp
popf
jnp
repz
test
sub
in
add
add
jmp
push
mov
mov
push
jg
movsb
js
mov
xchg
sub
data16
cmpsl
test
pop
and
jo
es
mov
out
mov
push
subb
jp
add
je
in
dec
scas
movsl
mov
and
js
jns
out
sub
sbb
sub
insb
mov
mulb
roll
sub
cmp
or
icebp
test
sbb
add
inc
mov
dec
xor
cmpsl
push
outsb
mull
mov
aaa
arpl
sbb
inc
cmp
adc
inc
ret
sti
or
rcr
sub
dec
pop
call
fistpl
in
sub
xchg
sub
inc
subb
mov
fiadds
hlt
jno
dec
int3
mulb
out
clc
fstpt
mov
dec
negb
cmp
insb
or
ret
pushf
aam
jb
imul
loopne
add
fcmovnb
mov
or
dec
xor
ret
mov
pop
out
lret
or
insl
add
jno
out
pop
jecxz
lock
jl
popa
sub
push
mov
rorl
lds
fdivp
dec
scas
dec
fs
xchg
mov
movsb
popl
dec
pop
in
je
insb
into
and
sbb
sbb
adc
notl
rcl
xchg
push
rolw
sub
imul
jl
xor
mov
add
test
shl
mov
insl
pop
add
loop
cmp
dec
add
or
cs
cltd
pop
push
dec
adc
sbb
aam
xor
push
cmp
push
or
sahf
in
frstor
test
cmp
push
xchg
adc
mov
jno
push
inc
aad
addr16
xor
lods
pop
repnz
mov
mov
pop
xchg
xor
push
repnz
shrb
icebp
lods
adc
pop
xchg
lods
mov
dec
dec
mov
fs
jecxz
or
xchg
sbb
dec
icebp
mov
cmp
push
lods
cmpsl
andl
out
and
mov
push
dec
movsb
stos
cmp
imul
cs
mov
nop
movsl
push
jmp
sub
test
es
test
dec
addr16
mov
or
jle
push
jb
insl
fcomps
xor
xchg
xor
or
lock
add
sub
movsb
and
xor
adc
dec
cld
roll
add
sub
pop
dec
mov
adc
xchg
mov
pop
and
sarl
ret
jmp
out
or
cmpsb
mov
xchg
orl
and
adc
mov
bound
cld
dec
sub
jmp
jl
adc
inc
test
jecxz
lahf
stos
lahf
hlt
daa
sbb
cmpsl
inc
jo
mov
sub
push
add
cs
inc
pop
cmp
js
out
mov
fisttps
cmp
mov
divb
in
scas
ljmp
shl
jae
aaa
addr16
sahf
or
fld
mov
xor
clc
arpl
ds
lods
addb
lcall
int
cli
jnp
cmc
push
cmp
dec
push
cmp
jecxz
sar
dec
pop
lods
push
les
test
adc
lcall
dec
out
bound
inc
enter
ss
xchg
mov
xor
inc
sbb
imul
cmp
dec
pop
test
mov
push
mul
lret
sbb
cli
incl
test
pop
push
aam
pop
inc
cld
xor
mov
dec
insb
mov
xchg
mov
add
add
cmp
pop
dec
test
adc
sbb
xchg
inc
push
cmp
clc
mov
dec
shrb
xchg
cmp
xor
xchg
xor
mov
fisttpll
mov
sbbl
pop
inc
aas
popa
imul
lret
js
test
xor
mov
mov
cmp
xchg
inc
or
sbb
or
dec
sub
adc
and
loop
mov
sbb
mov
sar
sub
cmove
dec
inc
jg
mov
aas
pop
mov
repz
push
adc
xchg
sub
push
das
int
scas
xchg
rcr
lea
es
aam
dec
sti
mov
test
jmp
inc
pop
cmp
push
push
out
push
out
adc
sub
push
icebp
in
arpl
int
jl
pop
mov
xor
sbb
jl
jecxz
add
cmp
pop
xchg
fs
test
repz
cmp
push
push
fs
mov
lret
stc
sub
shl
test
addr16
repz
cmp
mov
mov
push
daa
mov
sub
xchg
into
jecxz
repnz
mov
imul
mov
or
fcompl
cmp
or
in
fs
push
or
sub
scas
xor
jo
je
xchg
fistpll
lds
dec
dec
test
mov
add
or
and
pop
inc
fs
push
sub
popa
jae
mov
aam
mov
ja
mov
out
fwait
push
cmp
lea
push
mov
dec
lods
lret
mov
xor
call
add
outsl
call
ja
jge
jge
adc
jg
out
out
cs
cld
nop
je
or
and
aam
push
push
push
mov
fcomps
inc
nop
inc
stos
xor
push
cmc
aaa
mov
int3
cmpsb
mov
and
lods
pop
add
les
dec
dec
lahf
mov
add
movd
stc
pop
push
sbb
jg
out
mov
imul
lret
test
fucomi
inc
mov
rcrb
mov
stc
jbe
fwait
mov
jl
mov
lock
jl
dec
into
dec
fdivrl
hlt
mov
dec
fcmovbe
xor
inc
pop
cmpsl
jne
arpl
mov
push
cld
add
xorb
les
testb
addl
inc
push
xor
test
ljmp
dec
loop
mov
in
xor
aaa
mov
or
fimull
jnp
sbb
shll
mov
mov
mov
mov
jo
mov
and
jbe
pushf
call
jnp
jo
xchg
cltd
push
push
lcall
clc
ds
push
dec
pop
cs
inc
iret
outsl
faddl
xor
movsb
stc
xchg
rcl
into
add
divb
xchg
mov
leave
cltd
inc
inc
jp
shr
add
fistpll
pop
xchg
xor
movsb
jg
hlt
hlt
fisubs
shlb
jle
nop
mov
dec
das
mov
sbb
leave
mov
inc
mov
rcll
mov
insl
pop
pop
addr16
cmp
sub
out
sbb
sbb
dec
stc
inc
mov
pop
xor
pavgw
lock
bnd
mov
popa
sahf
pop
js
jbe
push
jo
sbb
mov
je
mov
pop
fcmovne
sub
add
and
js
stos
add
cmpsb
repnz
jns
loop
pop
mov
shr
outsb
lahf
xor
into
shrl
hlt
xchg
cmp
inc
push
adc
cld
adc
push
cmp
rol
test
cmp
into
orl
dec
imul
fidivs
sbb
arpl
sub
jo
cmpsb
filds
cmpsb
nop
imulb
xlat
scas
js
fildll
in
ljmp
test
adc
mov
dec
adc
cwtl
add
jns
cmp
test
call
lock
jecxz
mov
jle
in
sbb
pop
or
cmpsl
in
jne
insb
or
enter
jle
sahf
call
clc
into
ret
mov
ljmp
pop
addr16
lret
or
mov
push
cmp
nop
aam
and
inc
testb
cmp
ljmp
xchg
shr
adc
rcll
fistpll
imul
in
mov
sub
cwtl
negl
outsb
xchg
push
sahf
xchg
outsl
arpl
mov
imul
jl
sub
sbb
push
subl
xchg
sub
push
lret
or
sbbl
jmp
add
fwait
xchg
test
int
inc
adc
xchg
mov
daa
gs
scas
popa
cltd
cld
jne
or
das
insl
xor
out
mov
jp
jmp
mov
mov
pop
lcall
fidivl
or
rcrl
dec
jno
and
pop
inc
ss
mov
push
or
popf
in
inc
into
jmp
in
into
or
xor
lods
hlt
outsl
jns
mov
xchg
jnp
xor
in
jb
push
adc
push
in
arpl
int3
add
cmpsb
shll
xchg
jecxz
jmp
scas
xor
xchg
push
or
xchg
je
inc
xor
cmc
inc
scas
jae
int
fcompl
mov
cmp
out
bound
cmp
cmpsb
lahf
push
push
pop
in
dec
push
add
xchg
fnstcw
jnp
mov
fsts
fisubs
dec
inc
jne
pop
mull
shlb
mov
cmp
repnz
loopne
loop
shlb
mov
push
push
shl
push
stos
sbb
loopne
sti
mov
ljmp
dec
pop
mov
lret
cmc
aas
sub
scas
mov
test
and
push
fstpt
popf
ljmp
insb
xchg
out
loop
jle
imul
cmpsl
jl
jbe
pop
push
jecxz
or
dec
pop
mov
pop
mov
mov
pushf
lock
mov
outsl
lock
mov
jae
shrb
xchg
inc
clc
xor
mov
xor
sbb
xor
or
mov
adc
pop
andl
decl
xor
and
mov
lret
push
ficoml
jne
ds
fwait
cmp
sub
mov
outsl
out
lods
pop
lret
jl
sbb
adc
movsb
fmull
repnz
aam
mov
cmp
nop
test
clc
js
jnp
int3
rorb
insb
fstpt
fnstcw
cmpb
xchg
negl
std
in
inc
pushl
iret
mov
popa
ds
mov
sbb
cmp
stos
in
pop
cmp
xor
aam
sbb
addl
mov
rorb
sub
mov
jmp
sbb
xchg
mov
push
out
fadds
jne
incl
and
dec
jmp
inc
add
shlb
pop
adc
cmp
adc
jmp
mov
jno
mov
adc
and
dec
adcb
dec
repnz
add
add
xchg
rorb
cmp
imulb
enter
sub
stos
lea
sbb
inc
xchg
icebp
and
adc
bound
sbbb
push
mov
clc
jp
out
or
push
shrb
mov
inc
xchg
sbbb
rcr
int
ret
mov
aas
cmpsl
push
mov
stc
lret
movsl
test
xor
out
dec
mov
in
push
cbtw
xchg
aam
test
xchg
imul
cmc
fsubs
sahf
jno
ror
adc
sub
jb
faddp
cmovo
inc
push
lea
movl
movsl
mov
in
fwait
push
out
insb
mov
fdivs
pop
mov
mov
aas
setge
mov
mov
pop
mov
add
inc
fwait
xlat
sub
dec
sbb
or
push
into
dec
push
mov
xor
repnz
cmp
xor
jns
in
cmp
cmp
adc
icebp
call
sar
loope
inc
js
fbld
ds
sbb
dec
cmpsb
mov
loop
sub
sbb
je
push
cmc
jmp
sti
jne
cmpsb
js
mov
mov
fwait
sbb
sbb
dec
pop
test
fsts
jecxz,pt
lret
aad
mov
cmp
sub
adc
jne
and
iret
inc
lods
call
lcall
xor
fsubl
int3
xor
lods
mov
frstor
cltd
fildl
js
enter
xchg
and
lods
cmpsl
pusha
incb
mov
pop
mov
xlat
xchg
pop
ljmp
nop
inc
or
das
xor
jne
mov
dec
and
and
inc
xchg
sub
push
lret
jl
dec
popa
bound
add
push
sub
add
in
jno
mov
inc
sbb
movsb
sti
pop
dec
ret
and
insb
mov
mov
add
lock
cmpsl
mov
dec
dec
int3
and
scas
pushf
cmp
fwait
inc
fdivrs
add
lds
or
or
push
loop
insb
sbb
dec
rolb
dec
jae
mov
sub
shll
adc
mov
pop
cmp
cmpsb
or
xor
mov
fwait
push
xchg
xchg
mov
pop
call
sahf
data16
push
inc
jge
lock
adc
push
jl
mov
or
out
lock
jl
leave
lcall
push
imul
outsl
jae
out
lahf
in
out
addr16
nop
xlat
push
test
shll
shl
lds
mov
leave
or
in
shll
xchg
shrl
rcll
mov
cmpsl
cmpsb
cltd
imul
jg
xchg
pop
insl
inc
sbb
out
popl
imul
xchg
fstpl
testl
mov
les
xchg
sarb
sahf
adc
mov
daa
sbb
sbb
pop
mov
dec
xor
insb
std
xchg
xchg
xor
call
mov
jmp
inc
cmp
test
mov
inc
adc
cli
sub
popl
leave
sti
test
jl,pn
xor
mov
mov
and
cs
jp
adc
push
movl
inc
es
cmp
or
lahf
push
loopne
cmc
icebp
mov
xor
outsl
adc
push
iret
dec
fistpll
jmpw
pusha
and
cmc
mov
add
cmpsl
jno
in
fwait
je
aaa
cmp
enter
jge
mov
inc
jnp
inc
and
mov
jge
push
jecxz
nop
leave
test
sbb
mov
dec
daa
mov
push
push
push
xlat
sbb
jl
or
test
repnz
outsb
push
mov
inc
xchg
loop
shrb
inc
cltd
neg
pop
jg
and
sub
jge
pusha
daa
jo
scas
mov
imul
mov
cmp
push
cmp
mov
sub
mov
sahf
or
cmp
bound
sahf
repz
jnp
nop
cmc
inc
idivb
push
mov
sub
mov
adc
fnstenv
mov
add
pop
mov
fildll
js
push
pushf
jl
jnp
std
cmp
mov
mov
sbb
mov
fstpl
jb
in
orb
ret
aaa
pop
push
lret
stc
xor
sbb
xchg
testl
jb
dec
inc
shl
sbb
mov
xlat
adc
mov
imul
adc
dec
roll
test
push
fisttpl
add
jo
mov
xlat
add
jge
or
aaa
xchg
popf
lret
pop
cmp
mov
jo
mov
xchg
cmpb
or
cwtl
fincstp
pop
xor
mov
jl
push
lods
popf
jnp
stc
add
sbb
cwtl
mov
adc
stc
fidivs
pop
lods
jno
cmp
leave
and
mov
and
enter
scas
je
jmp
pop
jnp
inc
lcall
inc
test
pop
dec
outsl
jmp
xor
add
in
movd
ss
leave
dec
push
daa
mov
repnz
mov
xchg
incl
dec
push
mov
push
out
and
mov
cmpsl
lea
pop
in
out
mov
fdiv
pushl
gs
test
add
push
inc
mov
push
lret
test
roll
loop
inc
js
mov
imul
bswap
adc
mov
les
jae
jae
mov
out
inc
addr16
jg
shll
insl
sub
sbb
pop
push
cmpsl
ret
mov
mov
subl
ss
sbb
mov
loope
pop
rcll
push
insl
jmp
stos
subl
mov
in
mov
inc
scas
pop
sub
cmc
lahf
adc
dec
iret
cmp
jo
adc
in
adc
ds
and
andl
call
mov
jmp
pop
adc
roll
sub
xchg
dec
lds
xchg
dec
mov
pop
fnstsw
sarl
pushf
push
xchg
mov
daa
test
arpl
dec
cmp
cmc
stc
cmp
mulb
mov
inc
jg
or
shll
cmp
sbb
dec
ret
outsl
push
jmp
push
adc
insl
xor
cmp
nop
dec
fstps
ja
jecxz
mov
xlat
bnd
jne
mov
in
mov
negl
sbb
sahf
dec
pop
popa
aaa
out
mov
out
jle
xor
lret
xchg
ret
sub
bound
das
xchg
inc
pop
fsubrs
in
mov
into
lret
test
insb
cmp
xor
sub
pop
enter
push
inc
lahf
and
xor
jbe
dec
and
imul
scas
nop
push
mov
push
dec
inc
leave
repnz
es
push
ja
insb
push
cmc
xchg
nop
mov
sub
das
arpl
scas
pop
pop
int3
pop
sbb
jecxz
test
pop
aam
xor
in
xchg
rolb
push
dec
jnp
add
loope
pop
jg
mov
or
pop
pop
pop
add
sbb
push
fwait
aad
in
mov
ljmp
mov
ret
int
ret
arpl
ds
jo
rcll
int
in
mov
mov
mov
jb
push
adc
pop
into
mov
sbb
dec
fchs
shrl
repz
in
adc
adc
xor
lret
sub
adc
ljmp
into
and
push
cli
sahf
test
pop
fcomp
push
adc
int
jb,pn
inc
in
inc
stos
stos
adc
or
push
fdivp
sahf
or
xchg
jns
dec
push
faddl
mov
mov
sub
movsl
mov
bound
sub
pop
dec
pushf
dec
pop
vpmacsdd
xor
mov
cmp
sub
or
popa
in
and
inc
adc
jge
mov
test
addr16
js
pop
pop
lcall
js
rcl
cwtl
add
das
and
shlb
dec
aad
aaa
xor
bound
adc
xchg
sti
sbb
adc
cmc
sbbl
fwait
mov
and
dec
call
or
gs
xor
add
xchg
lock
rorl
mov
pop
fsubrl
jge
mov
orb
in
insl
mov
mov
adc
add
int
push
mov
push
and
and
aad
push
xchg
adc
loop,pn
jns
lahf
xor
mov
mov
cld
imul
and
lea
ja
outsl
out
mov
leave
push
sub
dec
pop
loop
mov
fmul
rcr
lods
adc
mov
push
fldl
pusha
insl
fs
push
or
fwait
bound
out
std
lock
pop
xchg
movsb
into
sbb
out
push
push
mov
push
inc
xchg
mov
test
out
or
and
daa
xchg
cmp
inc
rcrl
cwtl
jle
popa
push
cld
pop
pop
ret
es
mov
out
mov
pop
lods
ja
xor
ret
jno
push
cmp
or
xchg
outsl
andb
jb
ljmp
js
xchg
mov
adc
dec
aas
pop
mov
mov
mov
jp
add
push
enter
mov
jbe
pop
ret
in
mov
loope
scas
ja
xchg
scas
jne
xorb
sarl
popa
lock
fsubrl
jne
xor
sub
aam
dec
imul
shll
pop
add
insl
test
add
fsub
sub
cmp
push
mov
or
sub
dec
push
pop
inc
sub
icebp
inc
push
push
jge
dec
mov
or
mov
sbb
mov
adc
inc
sbb
in
xchg
aas
bsf
mov
out
jne
out
adc
arpl
cmpsb
mov
cmp
add
xchg
aaa
adc
cmp
dec
add
rolb
sbb
cwtl
nop
xchg
cwtl
loopne
pop
repz
dec
loopne
cmc
jbe
dec
and
lahf
sub
xor
adc
inc
and
push
repnz
fistps
sub
pushf
imul
flds
fdivs
mov
jae
loope
sti
arpl
enter
mov
in
xor
mov
xchg
lods
ljmp
and
xchg
and
mov
mov
arpl
imul
sub
jp
push
imul
jge
push
aam
push
cwtl
test
pop
cmp
push
push
scas
nop
mov
cmpsb
loopne
imul
jl
into
nop
jecxz
mov
or
or
pop
inc
jbe
push
and
xor
adc
ret
cmpb
dec
cmp
push
inc
dec
xor
fwait
stc
lret
dec
scas
dec
int
pop
push
cmp
pop
and
daa
flds
jno
fldcw
fstpt
ret
pop
or
push
mov
ljmp
push
jns
cmp
cmpsb
rcl
lret
add
cltd
mov
ds
xlat
cmp
add
or
jg
cs
pop
mov
ds
repz
jno
add
mov
adc
adc
sbb
cmp
scas
pop
push
into
mov
mov
xchg
sbb
dec
mov
lock
test
sbb
xchg
push
adc
movsl
test
movsb
mov
add
mov
jecxz
cmc
shl
popf
sti
lret
xchg
xorl
cmp
dec
in
xchg
and
jo
dec
xor
inc
outsl
push
or
arpl
scas
enter
mov
mov
insb
insl
repnz
push
xchg
fdivs
pusha
bswap
repnz
jo
or
mov
push
inc
sbb
enter
aas
repnz
mov
mov
cs
xchg
cmp
inc
push
jo
sbb
mov
popf
push
mov
data16
ljmp
mov
xchg
mov
dec
or
sub
mov
lods
frstor
ljmp
fmuls
push
xchg
and
mov
add
pusha
dec
cld
lods
mov
push
bound
jno
hlt
and
or
aad
xchg
pop
das
mov
cmp
inc
les
ljmp
ds
and
enter
bound
icebp
add
add
shl
repnz
daa
jo
jnp
ret
pop
push
fcompl
push
mov
mov
repnz
cmp
sbb
pushf
jb
cwtl
jb
mov
mov
addl
mov
or
popf
fcmovnbe
push
inc
popf
nop
gs
inc
pop
stos
push
data16
addb
pop
cld
dec
push
jle
clc
adc
enter
dec
fwait
outsb
bound
sub
inc
pusha
adc
cltd
cmp
mov
pop
pop
test
xchg
jge
scas
scas
push
xchg
aas
or
ret
test
push
lds
push
jge
or
adc
aad
ret
shlb
adc
sub
xchg
pop
fisubl
repz
fmuls
adc
negl
scas
xchg
push
in
cmp
jno
inc
sbb
and
insb
xchg
jg
outsl
sahf
bound
daa
jns
rcrb
rorl
adc
jl
enter
imul
pop
jl
mov
test
mov
pop
iret
test
out
jns
hlt
ret
data16
dec
xchg
inc
adc
daa
pop
movsb
push
icebp
add
push
mov
inc
and
ror
and
jne
test
cmp
push
adc
adc
imul
dec
sbb
cli
cmp
gs
push
add
dec
adc
jle
xlat
orl
push
dec
sbb
push
mov
fs
lcall
rolb
rorl
test
nop
gs
insb
push
jo
in
sbb
mov
cld
jle
inc
cmp
xchg
mov
cltd
inc
test
pop
loop
or
stc
push
sbb
les
sub
push
iret
push
gs
jae
push
leave
dec
int3
add
ss
or
imul
loope
ds
mov
rcll
jecxz
push
xorb
xlat
jecxz
mov
pusha
stos
xor
sub
push
push
pop
inc
aas
mov
inc
add
pop
icebp
cmp
ret
or
out
push
mov
adc
add
imul
daa
xor
mov
xchg
imul
pop
cli
add
add
stos
inc
push
and
pop
adc
mov
xchg
gs
mov
int3
popl
inc
je
pop
add
xlat
push
cwtl
stos
push
sbb
shlb
loop
mov
cmp
loope
mov
jbe
sub
int3
test
jmp
in
clc
out
arpl
cmpb
cmp
popl
cmc
dec
mov
xchg
aad
out
fisttps
inc
mov
mov
xor
ficomps
sbb
xor
mov
pop
ficoms
jecxz
xor
cmc
scas
and
lahf
scas
mov
cld
push
lods
mov
cmpb
fcmovb
shll
test
rclb
stos
or
lea
out
inc
pop
xchg
stc
movl
sub
data16
fs
leave
into
adc
clc
push
mov
inc
ds
roll
out
inc
and
sbb
call
icebp
jnp
jl
sub
jne
cmp
cmp
loopne
mov
inc
clc
xor
cltd
test
xchg
stos
arpl
test
push
icebp
out
sub
bound
cmpsl
fwait
sub
and
icebp
bound
rcrl
dec
nop
lds
rorb
mov
out
jle
cmp
mov
jp
ljmp
cltd
and
add
ficompl
or
cwtl
popa
int
or
addb
dec
mov
pop
and
cli
dec
fsubp
xchg
testb
mov
mov
shrb
push
fcoml
pop
or
mov
xchg
gs
adc
leave
imul
inc
iret
xchg
or
xchg
popf
paddusb
sub
das
sbbb
or
mov
test
sbb
ds
inc
aaa
cmpl
mov
je
mul
sub
xchg
mov
mov
jmp
cmp
popw
inc
dec
inc
jle
cmp
daa
sbb
jecxz
jno
jge
ficomps
push
push
imul
or
cmp
pusha
flds
mov
mov
pop
cmp
in
push
inc
mov
cmp
pop
xchg
nop
ret
xchg
and
outsb
xor
mov
push
push
test
sbb
stos
cmp
and
push
dec
xchg
xchg
sarl
dec
ret
stos
pop
sub
movsl
adc
enter
enter
ja
pop
popl
in
jno
add
int3
mov
adc
mov
pop
xchg
push
lret
rol
jg
or
lahf
push
pushf
sbb
xor
pusha
fcomps
or
dec
push
push
sub
in
ja
cld
aad
fimuls
mov
or
dec
and
push
ret
addr16
test
rcll
loope
mov
mov
in
movsl
shll
xchg
ja
into
jp
fistps
outsb
enter
pushf
push
and
ds
int3
inc
shr
popa
cmp
mov
dec
lret
in
js
inc
push
jg
inc
xor
push
push
xchg
inc
sub
xchg
sbb
add
sti
inc
cmp
stc
mov
or
testb
sbb
ljmp
mov
and
aaa
jb
adc
pushf
jne
ror
jmp
sub
lods
aam
mov
daa
cmp
popa
repz
sub
sub
gs
xchg
add
movsl
in
adc
mov
mov
cmpsl
dec
subl
jmp
mov
and
mov
jmp
mov
xchg
cmp
out
ja
shlb
leave
mov
cs
adc
imul
or
xchg
push
and
sub
adc
inc
jecxz
lcall
mov
push
sub
cmpsb
mov
mov
ret
lret
xor
insb
sbbl
loop
ror
adc
mov
int
in
add
into
dec
cli
and
ficomps
aad
repz
mov
out
cld
lahf
mov
push
sbb
addr16
in
stos
outsb
xchg
out
imul
call
adc
jp
cmc
js,pt
jp
das
idivb
jle
and
das
lods
dec
frstor
xchg
push
sahf
sub
xlat
cld
adc
jo
xchg
jns
or
mov
xacquire
push
notb
sbb
pop
movsl
xor
sub
mov
ret
push
rcl
add
cmp
mov
adc
aam
fs
xchg
popf
inc
ret
aam
adc
adc
mov
dec
inc
and
mov
add
push
mov
fdiv
in
flds
mov
cmp
push
sbb
and
fldenv
scas
push
jne
sbb
loop
repz
cmp
lock
mov
jno
mov
pushf
js
out
mov
aas
sahf
cli
add
add
rcrb
out
call
inc
add
sar
and
xchg
aad
std
leave
xchg
daa
dec
mov
pop
xchg
mov
xrelease
jbe
clc
pop
jp
inc
mov
gs
sarl
or
mov
fnstenv
aas
cmc
xor
mov
mov
mov
pop
sbb
jno
mov
or
andb
and
inc
pop
sub
repnz
fsubrp
push
push
daa
imul
push
add
out
outsb
push
push
push
jmp
nop
jg,pn
fs
scas
insb
lcall
adc
insl
and
xchg
test
pop
out
and
add
xchg
jmp
lahf
lods
outsl
jbe
ret
pop
rcll
jle
xor
pop
insl
sub
in
fisttpll
aas
xchg
pusha
push
test
test
faddp
js
lock
mov
jo
cmp
sbb
sub
daa
jae
dec
cmp
fsubl
pop
sub
bound
lret
sub
cmp
jmp
loope
mov
out
mov
notb
in
push
pushf
pop
cmp
xlat
daa
push
push
mov
xchg
insl
cwtl
fnsave
popa
rcrb
cmp
mov
inc
push
lret
jecxz
dec
icebp
jae
filds
cmp
cwtl
out
test
js
inc
jecxz
lea
js
pop
aas
and
mov
sub
rorb
pushf
xchg
or
xlat
jno
xchg
cmp
fdivrp
outsl
lret
stos
mov
sar
push
cld
ljmp
hlt
dec
cld
or
sub
cmpsl
pop
pop
mov
jae
cmpsl
mov
mov
or
lock
fcmovnbe
clc
test
push
mov
int3
and
aas
inc
inc
sbb
sahf
adc
out
mov
loopne
adc
scas
mov
leave
jl
dec
lods
xchg
iret
push
dec
enter
and
push
imul
ljmp
hlt
movsl
outsl
fcoml
dec
xor
pusha
mov
into
mov
jb
mov
das
and
aad
or
cmpsl
std
jns
out
lock
in
test
and
or
pushf
aaa
cli
leave
repz
inc
sbb
push
js
lcall
mov
sbb
test
lcall
rorl
fsubrs
les
mov
imul
or
nop
sarb
mov
lods
jae
fs
mov
mov
push
push
subl
les
lret
mov
push
dec
jg
andb
js
sahf
jae
pop
push
leave
ret
imul
sbbl
adc
xchg
gs
xor
push
mov
adc
testl
shrl
jne
mov
dec
jnp
cmpsb
xchg
std
stos
sbb
fistps
js
or
or
enter
push
pextrw
add
push
mov
dec
lods
dec
mov
inc
adc
cmp
int3
and
sbb
pop
divl
cld
mov
gs
lret
dec
pop
cmc
xchg
gs
sub
mov
aad
sbbb
or
rcll
pop
into
pop
sub
mov
sbb
or
dec
das
sahf
in
mov
add
pop
xchg
das
dec
sub
pop
jmp
cmc
popa
gs
jbe
mov
pop
fwait
mov
fs
cmp
push
ret
jmp
je
sbb
jbe
gs
cmp
mov
add
jno
insb
cmp
sbb
es
jl
dec
sahf
leave
clc
sbbb
insb
int
lahf
data16
imul
add
scas
mov
pop
pusha
scas
adc
call
hlt
push
out
lret
test
loopne
scas
cmp
or
sub
aaa
das
test
lea
inc
lds
pop
pop
movsb
dec
xorl
adc
loop
pop
sub
incb
adc
mov
inc
xchg
push
out
sbb
jns
sub
jo
cld
decb
pop
lcall
data16
or
lea
icebp
mov
shrl
push
loop
rcrb
enter
lock
out
or
jp
sbb
xchg
mov
mov
ljmp
out
jns
js
mov
cs
inc
ret
iret
push
push
mov
push
push
mov
adc
add
xchg
popf
outsb
std
dec
sub
outsl
dec
mov
jno
shr
adc
inc
or
cmpsl
and
test
orb
jmp
and
mov
inc
xor
xorl
divb
out
pop
aad
xor
in
ficompl
mov
lahf
xor
push
aaa
xchg
jns
lret
hlt
insb
les
loopne
mov
mov
es
insl
mov
sbb
mov
addr16
int3
mov
dec
cltd
add
stos
inc
rcr
xchg
mov
fstl
shl
mov
push
fs
pop
je
push
sub
adc
movsb
je
push
mov
aas
rol
lock
test
and
mov
jge
push
cmp
xlat
jg
sahf
stc
ret
sub
call
adc
or
subl
mov
xor
mov
leave
inc
faddl
lret
xchg
mov
pop
test
xchg
nop
xchg
outsl
pop
scas
int3
add
mov
jp
bnd
rcl
call
popf
mov
popa
and
outsl
cltd
in
mov
sahf
xor
aaa
mov
jns
and
jle
add
push
xchg
inc
sub
sbb
arpl
jns
adc
arpl
xchg
sahf
cs
cmp
push
nop
mov
out
xorl
push
dec
pop
int
dec
and
pop
mov
xchg
iret
add
push
jns
lahf
or
cmc
sub
xchg
pop
cmp
pop
mov
sub
loop
stos
ds
push
int
xlat
cmp
add
sbb
fadd
or
popa
fistpll
hlt
test
in
push
xlat
jmp
ror
mov
aas
push
mov
sbb
popl
addb
repz
cmp
addr16
pop
ficoms
inc
or
cmpl
adc
mov
cld
mov
in
jp
add
lret
or
push
dec
add
movsb
or
push
shll
iret
mov
jo
out
adc
je
orl
mov
sbbl
mov
sub
jae
bound
lahf
rclb
jle
inc
lock
std
lods
lock
add
mov
stos
and
in
out
gs
cli
mov
ficoml
shll
orl
test
mov
cmp
lret
stos
loop
sbb
inc
popf
adc
and
add
mov
incl
adc
rorl
push
vmovdqa
add
xchg
mov
xor
mov
cmp
xor
andb
and
sbb
addl
add
es
jmp
mov
psubq
push
call
loop
dec
cmp
bound
xchg
xchg
jecxz
addr16
push
fsubrp
cmp
sub
mov
jge
jae
sub
push
sub
mov
adc
lea
scas
nopl
sbb
mov
imul
sbb
mov
mov
aad
je
gs
jge
mov
jo
mov
faddl
add
adc
shll
es
scas
adc
or
xor
fidivs
cmpsl
push
out
pop
jno
mov
sbb
mov
repnz
mov
jg
data16
leave
xlat
jno
inc
lret
out
jne
jnp
push
pop
dec
and
leave
lds
sahf
scas
lods
mov
jecxz
push
ljmp
outsl
mov
jb
stos
ja
test
push
ret
xchg
fisubrs
loopne
rorb
clc
adc
cmp
mov
add
addr16
pop
ss
ss
push
stos
and
lea
int
adc
ret
outsb
push
out
mov
jno
daa
inc
cmc
rcrb
and
mov
sub
mov
addb
xchg
cltd
scas
sbb
je
in
cmpsl
daa
dec
xchg
push
and
push
pop
lds
movsl
out
mov
mov
xor
inc
cmp
cmpl
cmp
jmp
js
push
sbb
into
mov
xlat
addr16
dec
out
cmp
cmp
scas
aam
fst
xor
sar
mov
loop
push
jg
sbb
pop
scas
fcoml
add
cmp
aad
mov
pop
jecxz
out
subb
adc
fnstsw
sbb
fldenv
test
mov
pushf
lds
mov
std
fnstcw
dec
push
sahf
stos
pop
enter
sbb
test
mov
push
push
addb
xor
and
data16
popf
nop
jp
fstps
out
fistl
in
mov
cmp
cmpsb
stc
jnp
xchg
mov
jo
ja
ds
add
or
std
xchg
std
gs
dec
test
and
addr16
pop
ljmp
jb
add
stos
movsl
loop
sbb
aas
outsl
mov
dec
and
cmpsb
push
test
ljmp
xor
loope
pop
ss
push
lret
fidivrl
pop
mov
mov
jmp
mov
sub
nop
jne
cmpsb
pop
arpl
popf
push
leave
lea
pushf
addr16
cmp
lods
lods
lods
jbe
cs
cmp
inc
cmc
push
subb
pushf
outsb
xchg
mov
inc
mov
xchg
xorb
stos
out
adc
aam
pushf
jmp
xchg
fimull
sub
das
mov
push
xchg
adc
out
ret
inc
lret
ficomps
cmpl
aaa
sti
out
int3
mulb
jae
cmpsb
xchg
mov
bound
mov
xor
pop
out
dec
xor
xchg
daa
lods
cmp
shlb
pusha
inc
fcomps
xchg
loopne
test
rep
push
cli
inc
mov
jge
outsl
pop
addr16
sbb
jg
fidivl
inc
call
out
sub
or
pop
and
mov
xor
lds
inc
cs
add
movsl
cltd
call
cmp
out
mov
outsl
push
imul
bound
sbb
shll
push
push
jne
add
ja
cmpl
mov
lahf
push
nop
adc
xchg
pop
mov
cmp
xor
pop
jbe
lret
dec
pop
loopne
and
or
push
imul
inc
scas
and
test
mov
sbb
insb
cmp
add
adc
stos
test
jno
pop
cmpsb
mov
xor
cli
mov
push
add
mov
lcall
in
adc
mov
lahf
add
dec
xor
fimull
dec
inc
pop
mov
lods
mov
cmc
enter
dec
repz
adc
fwait
push
dec
and
push
sub
jno
push
and
push
mov
cwtl
adc
pushl
inc
and
mov
push
jae
push
je
xor
inc
loopne
mov
push
dec
or
mov
cmp
cs
sbb
out
cmp
test
push
pop
inc
mul
shlb
xchg
inc
jp
mov
jecxz
fstl
and
daa
fs
inc
add
pop
adcl
std
inc
inc
andl
xor
fcomi
mov
inc
jle
mov
jp
or
xor
sti
out
std
and
das
inc
fistpl
dec
sbb
repz
imul
and
push
sbb
aaa
mov
jne
dec
mov
sbb
fincstp
stos
jno
das
jo
mov
inc
sti
cli
outsb
cmpsb
mulb
mov
movsl
pop
cmp
in
inc
hlt
pop
cmpsb
mov
mov
dec
int
dec
or
cwtl
sub
test
dec
stos
mov
and
mov
gs
je
aaa
xor
cli
shll
mov
jb
movsl
das
lret
orb
in
mov
lcall
and
add
ss
dec
dec
sbb
and
das
jp
js
aad
xor
inc
cmp
push
movsl
pop
cmpb
jp
add
sub
dec
pushf
sbb
sahf
loopne
adc
pop
cmp
repnz
dec
mov
lret
jno
push
inc
sti
sub
imul
cmp
xchg
and
rol
mov
xchg
inc
adc
movsl
inc
push
clc
adc
cmp
mov
iret
pop
in
push
sub
mov
shl
ss
pop
sbb
sbb
xor
fwait
cmp
cmpb
ds
ror
inc
inc
push
or
dec
je
sbb
jmp
dec
fisubrs
sbb
ret
jo
jge
ret
in
dec
out
popf
add
sub
sahf
pxor
cmp
pop
fnop
popa
add
in
sti
movnti
jmp
inc
test
ds
adc
testb
mov
jb
leave
stos
add
xor
dec
hlt
sahf
push
outsb
cs
stos
subb
sbb
add
xchg
and
xor
imul
or
push
adc
sub
fwait
es
pop
jne
push
cltd
divl
mov
orb
pop
ja
xchg
xlat
outsl
cs
sbb
rorl
rcrl
jg
or
je
aad
adcl
repz
gs
mov
pusha
and
clc
arpl
ret
push
push
xchg
adc
dec
leave
ficompl
idivb
pop
mov
jmp
or
push
fst
test
test
sarl
and
xchg
sahf
mov
ret
jp
mov
imulb
iret
fstp
dec
pop
std
xchg
push
cmp
fwait
lds
xchg
xchg
cmp
dec
or
sti
fimull
fs
pusha
data16
jmp
pop
leave
ss
cmp
or
mov
push
push
sar
inc
ljmp
aad
add
push
pop
xchg
ds
fbld
add
xor
mov
gs
int3
jge
mov
fwait
pop
add
sub
dec
sub
jg
sub
or
ret
loopne
addb
lahf
mov
push
shr
aam
xorl
test
fcomp
sbb
dec
lcall
popf
in
push
inc
pop
add
pop
xchg
orb
inc
xchg
xor
ficoms
retw
test
mov
addr16
or
cmp
mov
bound
mov
inc
lret
lcall
inc
jb
cli
inc
dec
cwtl
ljmp
sub
jmp
cwtl
mov
aas
adc
or
int3
jp
inc
es
ss
in
sub
inc
jb
cmp
scas
pop
pop
gs
ljmp
xor
inc
jecxz
repz
pushf
div
invd
gs
ret
pop
cli
insl
mov
cmp
hlt
sbb
mov
cld
or
mov
sub
fildl
mov
sbb
xor
das
popf
bound
sbb
inc
mov
jno
arpl
add
sub
leave
lea
push
mov
sbb
subl
xchg
arpl
mov
inc
in
js
jmp
jmp
cmp
pop
ja
jmp
mov
fsubrl
in
into
loopne
xlat
divl
jmp
bound
sti
jns
insl
add
cmp
aad
mov
fimuls
add
xchg
xchg
pop
test
mov
sub
ljmp
sub
push
xchg
stos
lret
jmp
and
bound
in
sbb
sbb
cmpsb
aam
jg
imul
lea
leave
pop
pop
insb
sbb
mov
loopne
push
ret
adc
adc
and
lahf
mov
adc
dec
pop
sbb
decb
dec
stos
inc
add
jno
insb
mov
cs
jmp
sbb
and
mov
js
mov
ja
jne
or
sub
orb
popa
daa
dec
rcr
int
das
add
push
mov
idivl
push
mov
in
xor
stc
outsl
fdivrs
sbb
movsb
call
xadd
dec
pop
push
ja
fwait
xchg
addl
aaa
cmp
ss
cmp
mov
lock
mov
inc
into
mull
jmp
sub
fwait
dec
jbe
in
les
cmp
les
enter
fcmovnbe
ljmp
jbe
mov
xchg
xchg
outsl
fdivs
dec
inc
cld
sub
jle
jle
shrl
mov
pop
sub
test
gs
stc
fimull
mov
mov
xchg
roll
incb
movsb
and
add
push
aam
inc
xor
add
rcll
inc
loop
jns
popa
pop
cmp
inc
xchg
cmp
fsubr
adc
cmp
lret
outsl
lcall
call
repnz
vprotd
cmp
xchg
sbb
je
ss
pop
fistpll
popa
and
imul
movsl
js
test
jae
sti
shll
stos
mov
sbb
sub
adc
inc
aad
out
adc
sub
xor
je
inc
xor
push
shl
addr16
mov
outsl
xchg
in
mov
jbe
test
mov
cmp
mov
sub
movsb
pop
mov
int
pop
xor
inc
leave
pop
imul
aaa
dec
inc
add
dec
adc
imulb
and
pop
mov
or
push
xchg
addl
lock
pusha
call
adcl
xchg
mov
jmp
mov
js
loopne
mov
sbb
std
daa
outsb
push
out
jg
sub
insl
xor
addr16
pop
inc
neg
xchg
rcrb
jle
xchg
pop
xchg
adc
mov
cld
divl
ret
cmp
call
dec
test
xor
rorl
mov
push
loopne
or
or
push
sbb
mov
std
cs
out
jg
cld
jo
add
ficomps
and
and
xchg
push
mov
maxps
out
push
lods
pop
push
inc
mov
xchg
cmpb
sbb
jle
mov
cmpsb
dec
aam
or
fs
adc
pop
ret
xor
push
movsl
inc
cmpsb
pop
fcoms
js
lahf
and
shr
dec
aam
mov
stc
cmpsl
adc
pop
pop
or
fs
fdivrl
push
fwait
cli
pop
scas
aas
xchg
fucomip
lods
ret
xor
inc
loope
cmp
sub
mov
inc
data16
fsts
jae
xlat
inc
repnz
sahf
int3
dec
mov
pop
xchg
adc
scas
mov
xor
icebp
lret
push
test
push
pop
pushf
add
fsts
pop
pop
add
ja
dec
mov
outsb
movswl
mov
repz
inc
jl
pop
push
mov
pop
xor
aam
std
jge
mov
push
out
lcall
inc
mov
int
bound
xchg
lret
outsl
icebp
leave
fnstsw
xchg
nop
add
int3
push
test
cli
daa
jmp
seto
pop
mov
mov
inc
push
add
mov
insl
cmc
fisubl
push
psubusw
pop
sbb
cltd
aaa
das
int3
sub
push
fisttpl
push
xlat
in
iret
add
lret
pop
leave
loope
inc
mov
xor
inc
aas
xchg
into
test
xchg
sub
aas
mov
inc
pop
dec
mov
cltd
jge
bound
xor
mov
adc
pop
bound
jl
nop
sub
xchg
mov
xchg
icebp
jge
gs
popf
lret
mov
repz
xchg
call
clc
dec
cmp
sbbb
xor
xor
fcmovb
xchg
insb
arpl
cmp
in
xor
cmpsb
mov
mov
stos
sbb
out
data16
fadds
adc
mov
movsl
les
mov
lods
xor
pop
and
mov
loop
stos
inc
push
in
mov
sub
test
and
data16
push
test
add
pop
mov
jne
push
inc
enter
lds
fwait
div
mov
jo
mov
cltd
imul
in
mov
push
movsb
mov
lds
pop
xchg
mov
les
cli
fnstsw
pop
sahf
clc
fsubrl
push
loope
xor
stos
inc
mov
imul
aaa
xchg
into
jle
mov
push
imul
movsb
int
scas
mov
ja
daa
jmp
leave
inc
je
les
adc
ljmp
ret
jns
cli
pop
insb
cmp
xchg
sub
daa
add
leave
inc
mov
lcall
adc
pop
repnz
dec
dec
insb
pop
cmp
imul
inc
cmp
sti
lret
and
add
dec
das
xchg
lea
jns
clc
test
xchg
jp
mov
popa
add
lods
ret
js
outsl
repz
outsl
cs
jo
add
push
pushf
fmull
call
mov
scas
push
mov
mov
add
pop
jno
mov
in
xchg
mov
loopne
or
shl
and
clc
xchg
add
sbb
cld
bound
fstpt
js
adc
repz
popf
cwtl
add
lock
jns
mov
push
les
dec
clc
add
adc
push
mov
jmp
jle
mulb
jmp
adc
icebp
in
addl
fyl2x
subl
pop
mov
and
push
inc
mov
xchg
xchg
xchg
in
pop
dec
test
sbb
or
add
add
push
jp
adc
or
jno
mov
imul
mov
inc
jae
pop
pop
test
mov
iret
and
roll
stos
add
stos
add
sbb
jmp
push
pop
roll
lds
dec
shlb
std
test
shll
fcmove
mov
jae
je
std
cmp
mov
sbb
data16
cmp
inc
mov
or
lods
mov
push
rep
leave
frstor
arpl
mov
outsb
in
and
inc
cmp
pusha
lds
out
dec
lea
xorl
adc
mov
inc
sbb
xor
ss
sahf
or
push
xor
int
sti
cmc
xor
enter
jl
cwtl
or
push
mov
add
movsl
inc
cmp
push
xchg
ja
inc
ss
jp
pop
fchs
xlat
dec
addr16
outsl
pop
inc
adc
inc
lret
in
sub
subl
xor
repz
sub
dec
clc
adc
hlt
test
sti
add
cmp
pop
arpl
fldl
ja
xchg
into
stos
fldcw
out
mov
loope
ds
xor
mov
inc
jo
sbb
xchg
outsl
fwait
ljmp
jno
inc
pushf
out
into
pop
in
nop
cwtl
pop
push
inc
jne
std
add
or
jb
inc
es
or
mov
or
mov
ds
add
jb
cmp
cmc
stos
inc
movl
inc
jnp
dec
decl
push
pop
dec
inc
out
mov
and
loope
cltd
mov
or
enter
jbe
clc
rcrl
insb
dec
sbbl
ficoms
in
dec
int3
xchg
and
jmp
push
mov
cld
push
pop
inc
repnz
jno
xor
ficomps
inc
xchg
stc
nop
xchg
enter
sub
or
icebp
es
popa
adc
or
fldcw
push
adc
aas
push
cld
pop
shrl
test
rcl
shr
fs
jnp
push
test
pop
mov
scas
out
jmp
aam
lods
ljmp
cmp
repz
mov
les
xchg
cli
lcall
fildl
mov
or
call
jns
push
sbb
aaa
sbb
pop
test
movsb
fwait
cli
inc
inc
ss
mov
outsl
lahf
loope
test
insl
jb
das
lahf
test
sarl
jo
dec
jno
sub
sbb
inc
lret
stos
inc
xchg
mov
insl
cmp
mov
in
andb
push
rcrb
dec
fists
jno
fadds
sahf
jb
jmp
push
arpl
addr16
xor
sbb
fidivs
std
test
push
mov
mov
push
mov
sbb
mov
decl
shl
pusha
push
je
mov
inc
pop
xchg
pop
jnp
fldcw
xorl
inc
or
mov
mov
stos
dec
jmp
mov
or
mov
ret
orl
push
cmp
jno
add
xor
mov
inc
push
sub
insl
popf
cmp
push
mov
xlat
test
flds
insb
sbb
jl
test
lahf
iret
or
xchg
js
divb
daa
jnp
inc
movsb
inc
cmp
add
add
cmc
pop
push
jo
pop
add
hlt
xlat
push
adc
in
add
and
push
sahf
inc
les
lahf
push
push
ljmp
inc
mov
in
aam
xchg
fcomps
dec
setno
in
adc
lahf
fs
xchg
arpl
sub
push
xor
js
std
add
lds
fmul
inc
dec
jg
pcmpgtb
inc
pop
sahf
pop
mov
lods
out
iret
sbb
pop
std
pop
jmp
mov
aad
mov
jne
push
hlt
movsl
sub
jge
repnz
xlat
jp
xlat
dec
decl
aad
add
add
jae
lods
imul
insb
dec
cmp
dec
daa
sarl
pop
mov
xor
scas
mov
mov
add
enter
cmp
pop
enter
mov
add
mov
jecxz
xchg
sbb
sub
or
and
inc
dec
lea
jbe
mov
cmp
pop
lahf
or
idiv
inc
pop
adc
popa
push
fiadds
xchg
xchg
std
cmp
cltd
mov
and
stc
sbb
push
loope
jne
pop
jecxz
add
fs
daa
add
and
lcall
fiaddl
ret
cmp
cli
cltd
sbb
jmp
mov
or
dec
sub
push
adc
loopne
out
fistl
std
mov
push
sbb
clc
pop
and
pop
xlat
scas
jb
stos
inc
add
dec
pop
jno
pop
cmc
lcall
repz
movsb
sub
or
aas
inc
loop
aaa
arpl
lcall
xor
push
mov
iret
pusha
mov
outsb
jmp
pop
div
loope
lods
push
xchg
fsub
jle
mov
iret
inc
sub
xchg
movsl
adc
mov
jl
push
mov
mov
std
in
shll
inc
fisubrl
test
mov
bound
out
lahf
mov
cmp
pop
pop
es
pop
pop
pop
mov
push
sub
push
inc
lcall
rcrb
loopne
fwait
or
ljmp
or
lods
mov
jnp
sub
loop
jmp
inc
sub
push
test
add
jb
pop
mov
cmp
fildll
lods
adc
sub
add
lcall
out
inc
dec
and
add
xor
inc
jp
jle
add
ljmp
cmp
inc
mov
fwait
cld
sub
cwtl
lods
jae
rorb
leave
mov
xor
pop
pop
insl
sbb
lock
jmp
jmp
and
jl
or
das
jnp
mov
or
fidivrl
test
pop
and
nop
in
arpl
movsl
and
push
mov
mov
arpl
mov
sti
popa
pop
sub
mov
inc
add
js
mov
mov
adc
aam
mov
jp
mov
and
push
sbb
xor
jo
lds
out
xor
xor
lds
jb
xor
jno
push
pop
pop
cwtl
mov
sub
stos
stc
sub
and
or
js
stos
dec
fidivl
pop
insb
out
sbb
add
call
faddp
inc
inc
jg
inc
stos
sub
je
lret
mov
cmp
test
xor
movsl
xchg
mov
dec
leave
mov
js
pop
mov
sbb
jne
out
cmc
inc
popa
add
adc
arpl
xchg
outsb
xchg
cmc
es
push
xchg
sbb
icebp
sti
or
decb
cmpsb
adc
sbb
movsl
cmp
xor
cli
stos
daa
test
mov
iret
aas
nopl
enter
out
add
lock
adc
mov
push
cmp
pop
jg
mov
add
jb
clc
es
stos
inc
lea
mov
xlat
test
push
aaa
mov
pop
pop
in
aaa
mov
inc
fldenv
pusha
daa
outsb
scas
or
fsubrs
daa
jp
cwtl
int3
push
lods
inc
pop
pop
dec
jge
and
inc
sbb
insl
es
pop
inc
cld
xchg
xor
insb
jns
or
push
out
xchg
lahf
jecxz
push
loopne
and
cmpsb
and
lock
mov
adc
cmp
cs
ss
lds
jno
and
out
and
xor
xchg
rcl
fdivp
ss
fwait
loop
xchg
cmpsb
pop
icebp
out
popa
jp
dec
popf
fisttps
mov
lods
inc
push
outsb
sub
cmp
popa
nop
enter
rcrl
outsl
mov
les
xorb
push
or
scas
iret
add
push
lcall
mov
and
in
stos
ret
call
int
dec
pop
cmp
cmp
popa
pop
jbe
sbb
xor
pop
cmpsl
rorb
aaa
and
outsl
popf
nop
push
add
jle
mov
mov
test
dec
sarb
mov
int
cs
mov
mov
jns
in
xchg
fidivrs
sub
and
mov
mov
xor
js
xor
mov
push
stc
and
mov
mov
sahf
mov
fnsave
jne
repnz
pop
push
sbb
or
cmp
xor
mov
lret
cmp
lret
xchg
mov
xorl
push
mov
mov
int3
loop
int3
and
test
sub
mov
call
out
inc
inc
mov
jl
fimull
pop
xchg
in
xchg
sti
sub
leave
arpl
fistpl
enter
xchg
xchg
pop
xor
xchg
rcrw
mov
mov
loope
nop
push
inc
and
cli
or
mov
push
xor
cmpsl
adc
js
lcall
mov
lods
imul
icebp
sahf
popl
mov
sti
mov
lods
xlat
mov
icebp
outsl
in
in
sarl
dec
insb
jb
adc
repz
call
push
leave
es
dec
jmp
imul
jno
call
out
xchg
test
loop
add
mov
shrl
ljmp
into
jecxz
or
xrelease
out
sahf
shr
push
inc
es
in
adc
adc
jno
outsb
fildll
xor
fwait
push
mov
pop
sbb
out
fnstcw
gs
and
mov
sub
xchg
in
mov
push
xchg
jg
addl
sbb
mov
fwait
and
sub
push
ret
fwait
adc
outsl
in
fidivrl
xor
cli
xchg
lret
or
pop
insl
ja
jg
imul
or
jne
mov
xchg
add
push
gs
insl
jno
call
or
test
icebp
in
cmpsl
rorl
out
pop
and
adc
xchg
push
dec
ret
pop
cld
pop
xchg
add
push
hlt
call
clc
jns
push
xor
fwait
movsl
lea
push
shr
pop
mov
test
inc
shll
das
mov
ljmp
and
mov
or
inc
push
clc
sub
inc
sbb
insl
outsl
aaa
test
adc
scas
aas
fistl
mov
pop
mov
dec
lret
sub
idivb
push
orl
xchg
and
inc
lods
adc
inc
fmuls
mov
das
inc
fildll
push
daa
push
adc
push
sahf
gs
pop
lock
pusha
push
sahf
popa
ds
jno
dec
xor
sub
outsb
jno
shrl
fisttpll
loopne
in
cmpxchg
xchg
xchg
in
hlt
repz
in
int3
lret
jno
mov
lods
in
and
mov
in
mov
sub
gs
test
jmp
push
adc
and
xchg
jecxz
lods
push
ja
jb
mov
fs
jl
xor
cmp
push
scas
sarl
add
add
jmp
xor
js
push
dec
outsl
xor
stos
inc
mov
les
add
stos
mov
and
dec
mov
dec
int
push
outsl
std
push
mov
inc
pop
xchg
addr16
or
ljmp
adc
jo
in
sub
fcomps
pop
imul
int3
mov
les
push
jge
inc
sbb
test
call
xchg
sub
les
dec
inc
repz
push
lea
loope
cltd
gs
add
sub
dec
inc
cli
ret
sub
std
pop
sbb
icebp
mov
imul
jnp
lret
mov
xorb
insl
mov
or
pop
aad
push
lcall
mov
add
xor
in
out
popf
or
imul
rorl
mov
xchg
into
lods
lahf
aaa
mov
xor
cmp
and
add
pop
jae
sahf
clc
lahf
sahf
or
sbb
andb
push
bound
jp
loop
pop
lcall
jecxz
xchg
or
add
cwtl
push
inc
outsb
push
test
dec
ds
cmp
mov
xor
pop
or
ror
jne
and
aaa
cmp
je
nop
inc
out
enter
fs
inc
dec
frstor
push
lock
mov
pop
jp
fisubl
xor
aam
xchg
jbe
ss
leave
xchg
cmc
filds
mov
add
sbb
cs
adc
les
movsl
push
sbb
sahf
push
pop
cmp
arpl
xor
in
push
lcall
adc
cmp
mov
lock
mov
sbb
insl
inc
jle
shll
mov
jbe
mov
mov
jl
mov
pop
lret
or
movsb
sbb
loop
loopne
jmp
adcl
cli
divb
xor
cwtl
andb
mov
jl
cmp
xchg
icebp
xlat
repz
mov
ds
xchg
jmp
add
cli
pop
ret
mov
jae
jnp
aad
push
sbb
pushf
jb
andl
lret
out
in
pop
jle
in
cmp
cmp
out
scas
add
mov
push
pop
int
jbe
lcall
dec
dec
adc
fcoml
xchg
aas
add
inc
and
pop
icebp
enter
dec
lods
sbb
popf
mov
mov
loopne
stc
mov
cmp
inc
mov
loopne
or
dec
mov
mov
xchg
hlt
dec
loop
popf
fucomi
push
cmp
call
das
sar
cmp
sarb
ret
xor
stos
cmpsb
out
nop
mov
int
mov
cmp
xor
jp
fimull
jge
cmpsl
and
cmp
idivl
cs
adc
xchg
popf
pop
in
mov
js
sub
fildl
daa
adcb
push
pop
mov
xor
mov
ror
pop
test
inc
xchg
push
xor
pop
mov
mov
jge
testl
or
jno
cs
mov
dec
mov
test
cmpsl
in
pop
test
out
mov
jle
test
fs
xor
inc
mov
sbb
and
or
push
jge
jnp
mov
sub
xorl
push
pushf
xor
dec
pop
and
aaa
mov
movsl
and
xchg
daa
lods
jnp
jno
add
ficoml
bound
jge
sti
mov
les
inc
movsb
rolb
call
cmpsl
cld
stc
lea
jno
addl
dec
subl
adc
mov
or
adc
in
xchg
xchg
mov
std
cmc
sbb
js
loope
cs
in
cmp
aam
rcl
xor
xchg
xchg
pop
fs
mov
mov
out
es
fdivs
fidivrl
pop
or
repz
stc
push
or
es
jp
inc
stos
sub
repz
inc
dec
insb
cmpb
cmp
je
imul
pop
sbb
pop
adc
fcmovbe
jns
xchg
add
sti
shl
xchg
jbe
sub
push
sbb
dec
jmp
outsb
jo
mov
fldt
lds
lcall
mov
imul
mov
adc
sbb
mov
mov
or
inc
push
testb
and
ja
cmpsl
jae
jge
xchg
cmpsb
jmp
sub
mov
dec
jecxz
icebp
scas
jp
loopne
cmpxchg
test
shll
push
fbstp
adc
xor
shl
popa
hlt
std
arpl
mov
int3
leave
fldl
inc
xor
push
add
lods
push
sbb
jno
js
jmp
sbb
fcoml
mov
ljmp
fwait
and
daa
ja
pop
cwtl
or
mov
mov
jo
push
or
jns
mov
sub
gs
jle
xchg
sbb
out
dec
push
gs
js
out
cmpsl
std
aas
xchg
imul
xchg
pushf
jl
rolb
add
xchg
pushf
dec
and
fiadds
or
add
into
add
or
lods
jle
mov
scas
add
loope
mov
in
mov
and
gs
test
mov
shll
fcoml
aaa
mov
pushl
xchg
lret
or
mov
aam
cmc
mov
loop
iret
pop
daa
cli
icebp
aaa
jae
loopne
stos
dec
cmc
xchg
in
mov
orb
jbe
rcrl
add
cmpsb
enter
sbb
mov
xor
cmp
scas
cltd
sahf
push
in
mov
xor
lea
fstl
lcall
ret
add
insl
pop
xchg
fs
loop
mov
movsb
lods
sub
push
push
fs
adc
cwtl
jle
movswl
mov
inc
sbb
dec
jle
in
fwait
xor
dec
aas
mov
jno
xchg
ja
cmp
push
adc
push
pop
add
mov
add
in
add
test
outsl
or
cmp
jns
add
mov
cmp
idivb
loope
imul
iret
push
aas
mov
dec
pop
mov
or
jmp
pop
int3
add
stos
jae
adc
adc
mov
sbb
inc
aas
xchg
fsubrs
add
rcll
scas
pop
cmp
out
lret
jp
std
pop
adc
cmpsl
aam
or
cltd
jno
popf
lcall
mov
aad
mov
loope
push
jge
loopne
fcmovu
rcrl
or
inc
and
leave
xchg
mov
mov
pop
jmp
mov
sbbl
jne
add
sti
mov
push
rorb
xchg
stos
insb
mov
lds
mov
mov
xchg
js
inc
mov
jle
sbb
roll
adc
dec
cmp
lods
fimuls
dec
daa
ret
mov
fidivl
or
adc
add
leave
pop
inc
mov
imul
xchg
stc
sub
rolb
dec
cltd
mov
and
ds
mov
in
pop
jmp
lods
jge
pop
stc
cli
mov
dec
xor
jb
xor
xchg
add
leave
mov
sub
stos
data16
cmp
outsl
mov
pop
negl
ret
aaa
jmp
lods
roll
out
outsl
mov
insb
sub
cmp
sbb
push
jb
fwait
or
sbb
ficomps
lds
dec
ficoms
xor
pop
xor
sahf
sar
daa
sub
dec
divb
inc
in
rclb
jg
aad
push
jnp
fisttpl
inc
fstps
and
ret
in
pop
call
and
and
lods
lea
adc
pop
lea
scas
pop
mov
popa
push
jae
or
daa
scas
inc
xchg
or
jecxz,pt
rcl
iret
jns
rcr
mov
sbb
mov
sbb
clc
jecxz,pt
test
mov
out
or
mov
ljmp
loope
inc
repz
add
dec
jge
and
push
mov
jno
cmp
xorl
cld
and
out
cmp
adc
xchg
out
into
in
xlat
data16
ret
imul
pusha
mov
ror
adc
pop
fcom
jle
aam
nop
insb
fucom
aaa
mov
enter
inc
jge
insb
nop
cmp
cmp
jp
out
repz
insb
lea
imul
scas
push
sub
xchg
sbb
pushf
outsl
push
mov
ret
popa
dec
sarb
sbb
pop
sbb
iret
enter
scas
xor
inc
sub
negl
lods
mov
lods
xor
pop
outsb
repnz
jbe
xchg
sbb
jmp
test
add
outsl
es
sbb
in
or
mov
ret
cs
or
cmpsl
enter
test
dec
arpl
inc
or
jl
addr16
cltd
lods
mov
in
inc
cwtl
lret
xchg
int
and
cmp
mov
push
daa
sub
or
sub
sbb
iret
or
insb
in
popf
xchg
outsl
pop
pop
stos
add
cmp
inc
mov
movsl
cmp
dec
dec
loopne
mov
xor
aas
sbb
jg
addb
or
mov
add
aam
jae
gs
jno
and
push
sub
sbb
lea
cmp
xlat
pop
push
aas
out
dec
mov
dec
fsub
sbb
mov
into
out
dec
sub
push
cmp
xchg
mov
cmpl
aaa
pop
scas
sbb
xchg
adc
fbstp
lret
dec
loop
sub
add
cltd
insb
movsb
loopne
dec
cmpsb
shrb
push
adc
cmc
in
add
nop
push
inc
push
aad
lods
test
jnp
mov
cs
repz
and
add
mov
mov
jbe
pop
mov
clc
popa
aam
clc
cmp
xor
arpl
xchg
fadds
ja
mov
push
aas
push
out
pop
jmp
inc
nop
ds
leave
in
push
jg
mov
in
fs
inc
ja
outsl
sub
inc
pop
push
mov
cli
lock
in
outsb
mov
jecxz
sbb
pop
and
ja
push
sti
push
std
xchg
xor
xchg
test
addr16
pop
stos
adc
imul
aad
lock
sub
push
jle
xor
push
jl
fdivr
jle
pop
stos
enter
das
push
loopne
loope
cmp
push
push
lea
jp
xchg
push
or
pop
jb
pop
pop
adc
jle
jnp
inc
sub
cmpsl
xchg
lods
jnp,pn
push
repz
lea
pop
pop
and
imul
pop
mov
xchg
cmp
stos
mov
mov
jmp
mov
xor
push
xchg
popa
js
pop
daa
dec
enter
xchg
icebp
into
xchg
mov
adc
jle
or
push
fucompp
ja
mov
dec
adc
test
jns
sbb
enter
ljmp
sbbb
lds
adc
in
std
lods
in
lods
adc
fs
mov
and
cmc
inc
dec
repnz
in
ss
pop
xor
fisubrs
in
xor
adc
and
lret
inc
stos
sarb
mov
mov
push
repnz
stos
out
inc
icebp
pop
in
xor
adc
cmp
dec
sub
inc
out
mov
fdivr
pop
and
lret
enter
mov
inc
shrl
lock
cltd
xchg
cmp
hlt
outsl
icebp
sub
fs
cld
fistpll
bound
shl
daa
aad
xchg
jns
pop
lock
xchg
fstpl
jno
inc
or
outsl
cs
sub
es
stc
enter
fdivl
cmp
stos
jmp
xor
test
xchg
dec
lods
lahf
gs
pop
pop
sub
mov
cmpsb
inc
cmp
adc
pop
pushf
ret
xchg
lret
jmp
add
stos
out
aam
mov
jo
sub
inc
and
xchg
mov
lds
and
mov
cmpb
in
push
cmpsb
sub
mov
jle
in
xchg
push
je
in
das
dec
and
jp
test
mov
jne
adc
imul
cmp
ss
faddl
icebp
clc
jns
and
lods
and
sub
mov
lock
jecxz
lea
pushf
aam
cmc
pusha
and
ret
shrb
mov
std
lods
cmp
sahf
daa
fcoml
sarb
or
xchg
jbe
dec
dec
pop
mov
push
xchg
hlt
nop
push
data16
push
pop
sub
or
cltd
test
fsubrl
enter
dec
loope
push
imul
loope
sbb
dec
xchg
jae
push
dec
or
fwait
mov
je
jae
or
inc
lea
or
adc
mov
into
xor
rol
jle
mov
inc
lds
dec
fidivrl
inc
push
mov
mov
mov
fnstsw
mov
adc
clc
cmp
pop
and
dec
xor
adc
mov
mov
pusha
pop
adc
call
or
scas
inc
push
subl
dec
fmul
or
adc
add
mov
xlat
leave
mov
xchg
mov
xchg
push
ljmp
insb
test
mov
push
add
xor
push
lock
scas
xchg
pop
jbe
fcomps
fsubr
adc
mov
cmpsb
scas
repnz
mov
fcomp
pop
and
je
cwtl
shr
mov
cmp
inc
push
ret
out
adc
adc
scas
adc
and
or
cltd
inc
enter
pop
loopne
push
pop
inc
negb
imul
inc
xchg
cmp
test
sub
movsl
rorb
inc
adc
enter
gs
pop
neg
jb
sahf
xor
push
mov
adc
ds
subb
push
pop
stos
adc
pushf
mov
leave
push
in
mov
xor
jl
in
andl
inc
fidivs
clc
cmp
mov
mov
es
sarb
mov
fcomps
adc
mov
jne
out
add
sub
ja
aad
int3
xlat
or
mov
lds
sti
out
fdivrs
cmc
or
mov
pushl
icebp
push
xchg
in
icebp
fmull
jnp
mov
adc
shl
fldcw
or
xchg
fcoml
adc
test
jmp
xor
outsl
loopne
mov
lods
roll
data16
mov
jge
xor
ss
and
pslld
dec
xchg
out
and
mov
aas
adc
mov
scas
push
jbe
stc
sti
sub
hlt
sbb
in
pop
pop
pop
mov
mov
adc
addr16
dec
rcrb
add
ret
inc
jmp
mov
xor
ja
mov
insl
fiaddl
fldl
fcoml
stos
push
mov
test
push
jle
std
inc
sbb
mov
cld
sbb
xlat
dec
dec
sar
push
in
stos
pop
push
mov
dec
lcall
or
mov
out
pop
push
xchg
fistpll
repz
inc
sbb
int
test
inc
lock
mov
inc
or
sbbb
movsb
bound
sub
mov
push
test
cli
data16
mov
adc
pop
loop
dec
and
lods
sbb
add
aas
add
ds
popf
or
pop
stos
frstor
jmp
into
cli
scas
sti
je
mov
rorl
add
fidivrs
jp
xchg
in
cmp
mov
or
das
cmpsb
rcrb
adc
dec
sti
cli
mov
cmp
sahf
test
push
pop
sahf
inc
lods
ffreep
pop
adcl
dec
mov
ficoms
cmpsl
sbb
mov
inc
xchg
xchg
mov
call
xor
movsb
ljmp
pop
bound
fistpl
mov
orb
lea
mov
sbb
mov
mov
lods
call
out
jmp
imul
ljmp
xchg
pop
xor
xor
xor
out
xchg
and
push
sub
add
pop
fcompl
push
loopne
into
popf
hlt
xorb
insl
xor
cmpsb
cmp
mov
leave
add
push
test
push
inc
dec
lret
idivl
dec
das
cmp
inc
push
daa
aas
push
dec
imul
jno
fwait
cmc
das
lahf
mov
aad
cmpsb
sahf
sbb
mov
pop
mov
loope
xchg
outsb
orl
xlat
lret
mov
push
insl
aad
enter
daa
out
pop
push
mov
fisubrl
shlb
mov
xchg
adc
or
jbe
mov
lods
lock
ret
movsl
adc
push
cmpsl
cmp
lcall
fistpl
aas
test
popf
popa
sub
clc
mov
lods
imul
pop
jge
scas
mov
and
sub
out
xchg
daa
pop
in
sahf
in
push
mov
addb
dec
enter
adc
popa
loopne
icebp
sub
in
cmpsl
loope
or
pop
aad
popa
mov
push
cmp
cmpsb
push
stos
pushf
or
adc
imul
sbbb
test
adc
test
das
xlat
inc
cltd
leave
dec
pop
cld
mov
ret
dec
mov
mov
mov
xor
cmp
inc
xchg
adc
call
mov
shlb
aam
pop
push
and
adc
sbb
or
loope
cmc
jb
in
push
je
jo
into
inc
hlt
lods
loop
push
jo
xchg
addr16
jno
push
adc
sub
outsl
or
popa
out
scas
incb
mov
jg
sub
sub
in
jg
adc
mov
fidivl
push
call
imul
repz
inc
sbb
mov
les
aam
outsb
popf
mov
lods
pushf
mov
insb
push
aad
out
in
cmpl
sbb
add
dec
loopne
xor
clc
icebp
scas
mov
loopne
loopne
dec
lock
les
rcrb
adc
out
cmpsl
lahf
shlb
fstl
inc
rolb
push
xchg
mov
cmpxchg
inc
sarb
dec
cmp
push
jp
add
jecxz
stc
in
ficompl
out
cld
adc
pop
shrl
fldt
jmp
fstpl
fdivl
xor
lods
gs
inc
inc
fildl
insb
addb
es
outsb
es
xchg
test
sbb
and
lahf
dec
push
push
pushf
btr
lret
jb
adc
mov
je
pop
push
mov
sub
pop
or
cmp
dec
mov
cmpsb
or
inc
js
enter
add
cmp
dec
sbb
jp
cmp
loop
jbe
out
out
push
push
xor
pop
xor
dec
dec
lret
adc
dec
clc
xor
sub
mov
insb
inc
std
scas
or
adc
adc
pop
adc
pop
cmp
xchg
or
jne
xor
mov
sbb
addr16
aas
xor
push
xlat
cli
int3
or
inc
iret
xchg
lea
lock
xchg
push
push
cwtl
shrb
add
cmp
xlat
inc
cmp
mov
pushf
sub
or
jae
push
mov
jno
jge
scas
add
dec
outsl
stos
push
rcll
clc
pop
rclb
mov
adc
in
adc
icebp
pushf
pop
cmp
jae
pop
int
cmp
imul
out
push
ret
aad
nop
push
xlat
sarb
test
mov
dec
or
dec
rclb
daa
jecxz
mov
sbb
sbb
mov
push
xorl
cmpsl
loop
adc
jge
inc
cmp
and
dec
sti
test
fsubp
in
imul
loopne
add
movsb
frstor
mov
aam
xchg
xor
int
jl
xor
out
lods
and
aas
and
and
in
iret
cld
fwait
cld
cmp
add
dec
mov
inc
push
mov
iret
notb
adc
leave
jnp
mov
rclb
ss
gs
scas
jb
outsl
cwtl
es
sbb
and
rcll
inc
and
rorl
push
ja
push
xor
cmp
bound
push
mov
addr16
xor
aad
sbb
or
push
scas
push
rcrl
mov
adc
sbb
fiadds
insl
in
jno
outsl
in
jmp
mov
enter
ds
stos
adcb
repz
test
lret
cmp
icebp
scas
xchg
and
int
sar
mov
and
mov
in
xor
out
ss
xor
mov
pop
adc
jns
bound
push
pop
inc
xchg
sbb
jg
les
cltd
loope
ret
sbb
mov
bound
dec
add
adc
adc
mov
mov
test
cltd
jae
cmp
dec
mov
insl
shrb
mov
push
pop
sub
lcall
fsubrl
arpl
cld
or
pop
roll
sbb
mov
pop
ja
inc
or
cmp
inc
lods
dec
inc
arpl
cltd
test
xor
sbb
lds
lret
cmp
mov
adc
loope
pop
dec
lahf
mov
fcomps
pop
mov
scas
dec
xchg
mov
cld
test
cmpsb
insl
hlt
sbb
mov
aam
cmp
in
pop
add
imul
icebp
in
sub
loope
ret
sti
add
mov
dec
ljmp
test
pop
lock
inc
or
arpl
xchg
adc
or
cltd
mov
sub
rcrb
mov
inc
popl
pusha
data16
mov
faddl
cmp
ss
addl
sbb
dec
pushf
mov
in
or
inc
adc
lock
dec
jnp
fdivp
jge
push
mov
dec
xchg
jmp
pop
fucom
mov
xchg
cmp
cmp
dec
mov
scas
stos
cltd
in
incb
mov
mov
mov
rorl
mov
push
shr
push
cmpsb
jp
add
sbb
mov
inc
push
mov
les
mov
fstl
test
daa
fpatan
dec
push
incl
or
outsl
jmp
call
test
or
jnp
lret
and
nop
clc
test
lds
mov
jecxz
mov
dec
xchg
ds
sub
mov
mov
rcll
and
push
and
iret
pop
lcall
lock
fcmovnbe
mov
fwait
xor
push
mov
stc
dec
add
mov
ljmp
or
xor
sub
lret
sbb
mov
fdivr
mov
int
sbb
ret
dec
jmp
fcoml
sbb
push
xor
jp
outsl
mov
ret
mov
and
lahf
mov
ret
aam
aaa
mov
jo
push
stos
xor
xor
mov
mov
fcoml
fldenv
pop
dec
mov
push
and
dec
xchg
mov
push
scas
xchg
loope
hlt
xchg
pop
daa
sbb
pop
cmc
sub
repz
adc
lea
pop
xchg
adc
imull
in
jmp
cmp
mov
push
movl
or
and
nop
xor
mul
and
aaa
stos
gs
xchg
sbb
cwtl
aaa
in
fbstp
lods
loopne
mov
leave
orb
add
addr16
in
jp
jp
imulb
fnsave
lods
sbb
mov
mov
mov
sub
push
into
mov
sub
mov
sbb
add
cmpsb
aaa
bound
mov
lret
jbe
pop
out
jle
pop
xor
frstor
repz
jmp
outsb
das
dec
pop
add
push
dec
hlt
out
lods
aam
insb
push
pop
inc
lods
adc
mov
popf
out
stos
mov
xchg
add
out
mov
ljmp
sub
pop
lock
test
lretw
mov
sbb
out
jno
and
mulb
push
pop
push
push
mov
push
mov
pop
cltd
sbb
test
or
pop
enter
jb
in
rorl
das
jecxz
std
data16
insb
cmc
jne
into
inc
lahf
jne
mov
cmp
imul
repz
call
pop
lods
aaa
jbe
cmpsl
dec
lods
xchg
aam
xorb
cwtl
hlt
pop
aaa
popa
out
push
call
test
add
negb
mov
lock
cmp
in
lcall
std
cs
sub
lea
enter
leave
jecxz
push
bound
add
pop
iret
inc
mov
call
jg
pop
out
lds
adc
xchg
xor
mov
mov
loopne
jmp
xor
jbe
jno
pusha
jno
jno
aaa
push
dec
dec
rclb
dec
test
pop
call
push
stc
mov
pop
mov
loop
or
out
mov
fisttpll
xor
xchg
sub
push
jg
dec
push
dec
xor
rcrb
out
shrl
xor
add
add
ds
inc
adc
xor
clc
jae
or
fcmovnbe
xchg
mov
das
int
imul
ss
loopne
dec
inc
jl
outsb
jbe
iret
xchg
add
scas
cmpsb
mov
stos
test
mov
mov
or
cwtl
addl
pop
lret
pop
insb
inc
cmc
mov
xchg
mov
mov
xchg
dec
sub
mov
add
insb
pushf
jb
cmp
adc
cmp
push
mov
stos
inc
push
int
ljmp
fisubrs
shlb
sahf
idivl
fdivrp
sub
pushf
fwait
dec
push
adc
jecxz
mov
push
rcrl
sbb
or
jns
mov
xchg
sub
cmp
adc
cmp
sub
xor
mov
cmpsb
jns
xchg
scas
jnp
xlat
or
add
pop
inc
add
imull
loope
dec
je
scas
out
loopne
cli
sbb
js
jne
mov
cli
out
adc
push
out
cltd
cli
xchg
outsl
mov
fincstp
add
push
addr16
lods
mov
gs
mov
fldt
sahf
mov
shll
jne
jl
mov
addr16
and
int3
push
cs
mov
stos
dec
into
fst
ret
cs
xor
or
jae
lods
sbb
xchg
popa
test
pop
mov
jl
fbld
pop
jo
xor
xchg
ja
inc
mov
fldt
cmpsb
int
add
pusha
pusha
shr
adcl
pop
aad
shrl
in
ja
mov
and
inc
mov
inc
sarl
int
cltd
xchg
and
xchg
fmul
mov
xchg
lock
dec
insl
hlt
cmpsl
xor
add
es
loope
and
insl
cmpsb
sbb
mov
mov
adc
lds
out
mov
mov
push
je
shrl
add
add
hlt
sbb
mov
xlat
mov
dec
fildl
push
in
pop
mov
test
lods
dec
mov
jmp
xor
les
lds
adc
pop
and
xchg
push
mov
mov
sahf
cwtl
and
test
pop
jnp
mov
mov
cmpsl
aas
xchg
ret
aad
xchg
adc
jmp
movsb
inc
call
pop
das
push
int
out
mov
xchg
pushf
in
push
cmpb
dec
sub
add
lahf
inc
or
xchg
mov
jae
mov
add
or
mov
arpl
fwait
mov
jg
cs
pop
xchg
out
xlat
sub
jg
in
ficoms
xchg
imul
push
and
pop
test
inc
jns
jnp
add
pushl
jns
sbb
add
adc
loope
dec
out
mov
xchg
and
xor
inc
shrl
xchg
jp
test
inc
insl
add
mov
mov
jbe
cld
mov
mov
icebp
mov
inc
nop
in
mov
or
loopne
std
std
xchg
sub
call
ss
stos
pusha
sub
and
cwtl
iret
mov
jge
sub
popf
sub
aas
mov
imul
frstor
cmp
orb
push
xchg
mov
inc
add
jl
mov
push
rcrl
push
dec
aas
push
mov
in
push
insl
mov
jecxz
xchg
or
or
cmp
mov
cli
in
xchg
jge
inc
cmp
push
xchg
mov
repnz
adc
inc
xlat
sbb
add
in
mov
inc
out
lret
push
test
dec
push
fmuls
insl
enter
mov
lea
add
xlat
sub
jne
adc
push
mov
adc
fidivs
cmp
xadd
loop
xchg
jb
stos
cmp
test
and
mov
loope
call
pop
icebp
or
les
or
fildll
inc
sub
test
or
das
dec
mov
push
cmp
add
aas
mov
enter
jg
sub
stos
cmp
sbb
imul
or
std
pop
les
aam
inc
mov
movb
shrb
ds
fidivrs
std
jle
icebp
dec
inc
adc
mov
jmp
movsb
in
fisttps
out
lock
stos
pop
xchg
mov
js
push
xor
dec
in
jmp
xor
push
mov
inc
adc
pop
subb
add
jl
mov
movsb
jle
pop
push
cmp
cmpsb
sub
and
enter
inc
sub
daa
test
lret
adcl
ret
sub
js
push
dec
int3
mov
mov
stos
push
sbb
or
pop
cltd
add
dec
adc
das
test
ljmp
inc
test
adc
mov
mov
mov
mov
fstps
insb
push
fsts
out
mov
and
mov
mov
pop
jae
jb
imul
jns
idivl
sbb
cwtl
and
fwait
test
inc
orb
mov
mov
push
xor
pop
push
sub
mov
es
inc
rclb
xlat
daa
scas
mov
popa
daa
adc
mov
mov
insb
aam
xor
push
cld
mov
jecxz
test
xchg
and
divl
adc
das
sarl
sbb
xchg
jmp
sbb
les
movsb
fidivl
repnz
xor
inc
push
xor
cmp
pop
adc
lds
repnz
movsl
cltd
push
repnz
adc
inc
mov
jne
pop
aas
mov
clc
movsl
into
or
sbb
mov
insb
daa
shl
xor
adc
pop
xor
test
push
cmp
push
bswap
jl
sub
xchg
clc
jae
or
cmp
jno
mov
in
inc
cmp
add
mov
insb
jg
mov
cmc
arpl
and
movb
mov
outsl
je
pop
loopne
call
daa
jg
stos
jmp
jg
adc
xor
adc
xchg
popa
dec
std
jno,pt
lret
and
mov
jae
outsb
jb
inc
sub
lods
add
sub
shrd
gs
or
pop
daa
sbb
mov
push
xor
mov
les
sbb
xorb
dec
or
and
mov
rorl
jo
inc
leave
ds
and
push
dec
outsl
pop
sbb
sti
ds
test
lea
jbe
or
jnp
push
or
xchg
cmp
insl
jo
mov
bound
ret
rcrl
scas
mov
loop
dec
or
pop
mov
inc
bound
pop
mov
rcr
adc
repz
lods
xor
daa
xor
std
push
add
push
aaa
sub
inc
adc
nop
movsb
sbb
push
lret
dec
aaa
clc
jnp
pop
mov
push
lret
shll
jo
sub
pop
mov
jp
insb
pop
jl
ja
scas
xor
fisubl
aam
mov
push
push
sbb
imul
dec
sbb
dec
push
adc
call
dec
or
and
rep
cmp
mov
call
ret
out
push
test
aad
in
jbe
mov
js
jnp
out
push
daa
lea
adc
and
mov
cmp
mov
out
cmc
outsl
cmpsb
jle
xor
jl
jecxz
mov
imul
imul
jl
loope
jmp
test
repz
pop
decl
adc
fimuls
cmp
test
add
lcall
daa
cmp
out
imul
mov
push
sbb
test
popa
enter
aaa
repz
fwait
shll
mov
loopne
and
or
repnz
xor
pop
jmp
mov
sti
mov
arpl
and
ss
add
pop
repnz
cmp
rclb
dec
in
out
cld
data16
sbb
psllw
bound
imul
scas
fimull
setp
inc
icebp
push
aas
or
je
xorl
and
stos
roll
cmp
ds
push
push
aam
and
test
pop
sti
in
icebp
es
add
and
lahf
out
mov
imull
dec
mov
adc
out
jl
sbb
mov
out
hlt
das
rcrl
sbb
mov
sub
add
add
push
in
cmp
js
jmp
mov
testb
xor
pushf
lods
cmpsb
rcl
mov
shll
adc
pusha
sahf
movsb
mov
je
test
xor
cmp
sbbl
sbb
cmp
or
out
dec
imul
int3
in
jbe
jne
push
add
jge
enter
jne
mov
xchg
mov
stc
mov
mov
sbb
in
cs
call
pop
or
stos
sarb
xor
js
dec
orl
enter
add
jmp
and
les
arpl
mov
ret
daa
shlb
sub
cmp
mov
xchg
cli
clc
ja
insl
std
lock
divl
cmc
sub
xchg
mov
mov
mov
push
mov
jle
pop
fs
lods
movsl
xchg
mov
fldlg2
inc
pop
mov
out
ja
mov
fildl
xchg
fimull
gs
imul
popf
lcall
mov
pop
mov
out
lcall
dec
leave
dec
mov
cltd
push
cmpsb
out
les
or
add
pop
cwtl
rcll
push
leave
cmp
and
shrl
add
sahf
push
dec
jns
out
cmp
sub
sbb
lods
cmpsb
sub
xlat
add
jecxz
inc
push
jecxz
lret
adcb
jle,pt
push
shlb
push
lds
mov
stc
mov
add
pop
hlt
sub
pop
lods
sahf
dec
out
rorb
test
fdivrp
repnz
orb
clc
movb
xchg
jl
jmp
inc
xor
std
out
bound
and
mov
jecxz
push
xchg
das
push
sbb
add
in
aam
xchg
loopne
push
dec
fs
or
jl
cmp
cmp
pop
cmp
mov
rcrb
adc
popa
or
inc
push
xchg
xchg
outsb
jae
cs
or
repnz
out
and
arpl
inc
das
insb
lods
xchg
pop
xor
rorb
dec
mov
cmpsb
int3
cmp
pusha
sub
insb
sub
dec
mov
je
jns
mov
push
pop
push
jae
cmc
push
int3
mov
jb
adc
decb
rorl
or
xchg
outsl
not
test
mov
loopne
cld
and
insb
pusha
cmova
es
add
cld
outsb
rclb
ja,pn
mov
adc
mov
jae
jbe
xchg
sbb
mov
push
addb
jp
and
call
jg
push
pusha
dec
movsl
sbb
push
sbb
cmp
jnp
xchg
dec
aaa
insl
xor
dec
mov
lahf
orl
lret
int
sub
inc
dec
jle
push
cmpsl
ret
into
xchg
add
xlat
cmp
js
std
sahf
aam
and
cmc
rclb
jae
mov
push
mov
and
adc
aas
and
rclb
add
jle
cmp
mov
lret
cmp
aam
cmc
mov
dec
test
repnz
mov
movsl
xchg
add
orb
sub
fstp
fwait
push
fldz
pop
inc
cli
pop
xlat
push
outsl
fwait
stc
jg
push
jecxz
push
dec
cmpl
sub
add
pop
je
xor
mov
andb
inc
dec
es
fldcw
lret
mov
and
xor
es
loope
iret
pop
jmp
jl
fmull
negb
ficoml
mov
pop
mov
cmp
or
jno
scas
mov
out
nop
xor
inc
mov
fbld
mov
je
imul
or
sbb
pop
push
stos
bound
cmpsl
mov
sub
cwtl
outsl
or
imul
lods
insl
in
jp
jmp
insb
jnp
push
fistl
add
adc
cmp
out
xchg
add
divb
in
aaa
mov
imul
cltd
aad
adc
pop
out
pop
add
testb
push
lcall
mov
test
lods
mov
push
or
lcall
or
xchg
mov
out
rorl
jnp
pop
int
push
inc
mov
fildll
inc
rorb
push
xor
mov
xchg
mov
stos
divl
pop
in
dec
mov
push
add
jb
xor
filds
mov
and
xchg
xchg
int3
mov
jno
dec
push
cltd
dec
loop
sbb
rclb
int
or
xchg
mov
ss
sahf
pushf
cmp
lret
leave
nop
std
mov
fdivrs
jle
mov
add
outsb
outsb
cmpsb
int
outsb
cmp
jnp
add
mov
xchg
fs
into
push
push
push
insb
nop
pop
clc
iret
lock
pop
outsl
inc
inc
xor
mov
mov
insl
lock
cltd
loop
pop
jp
cwtl
push
jbe
dec
lahf
sti
inc
stc
mov
shll
cli
mov
movsl
test
jb
push
or
fstps
xchg
dec
ret
and
cmp
pop
jecxz
adc
or
inc
stos
inc
push
into
cli
loop
test
adc
ret
add
out
adc
dec
ds
push
ljmp
insl
jns
cmp
adc
add
add
pop
sub
pusha
jno
adc
mov
mov
xchg
leave
cmp
pop
std
in
mov
mov
jo
rorl
ret
pusha
aas
nop
mov
add
cmpsl
imul
mov
mov
push
adc
add
xchg
les
cs
and
ror
cmp
and
outsl
aam
push
jl
lcall
adc
cmc
lea
jns
imul
mov
xor
ret
dec
lahf
jmp
pop
in
lea
aaa
pop
call
jns
mov
sub
sbb
pop
lahf
push
dec
add
imul
jns
orl
push
sbb
sbb
xorb
mov
jmp
js
rol
inc
xor
sub
inc
jl
dec
in
movsl
sub
jnp
jl
xorb
stos
js
movsl
fiaddl
mov
dec
enter
push
pop
cld
ds
outsb
mov
decb
ret
push
xchg
ja
ljmp
mov
push
xlat
xchg
std
movsb
and
stc
xor
pop
sub
sbb
sti
notb
jp
scas
lock
stos
sbb
ja
sub
push
scas
xor
decl
push
jle
mov
das
jl
call
mov
call
popf
add
aas
rcll
das
out
and
cmp
sbb
or
inc
and
add
daa
clc
cmp
or
mov
lods
sub
rolb
xchg
gs
aaa
dec
push
mov
and
rcll
or
cs
hlt
or
jp
sub
stos
adc
mov
stos
lahf
es
xchg
out
add
testb
and
mov
out
inc
inc
dec
aas
mov
lock
push
shl
testl
mov
sahf
aaa
mov
cltd
inc
dec
int
mov
mov
lock
mov
jl
loop
xchg
inc
lcall
roll
pusha
repz
ja
and
fs
icebp
cmp
xchg
xor
stos
mov
xchg
hlt
xchg
ror
sbb
jge
sti
into
push
and
xchg
lods
nop
aad
ja
pusha
lods
jmp
sub
push
push
in
fmul
adc
nop
cmp
adc
and
jp
or
mov
sbb
mov
mov
jns
dec
dec
inc
cmc
mov
fs
jp
mov
loope
out
mov
pop
and
sbb
test
data16
or
dec
mov
lcall
sub
cmc
hlt
shlb
imul
outsl
inc
or
scas
and
xchg
clc
add
imul
sub
pop
pop
xor
dec
movsb
ljmp
and
test
dec
stc
or
pop
ret
mov
cltd
xor
jle
jbe
mov
in
int
pop
ja
xchg
fwait
xchg
pusha
hlt
sbb
out
pushf
mov
pop
add
movsb
mov
inc
movsl
outsl
sbb
add
jne
inc
fwait
mov
jo
pushf
lock
int
adcb
insl
jb
syscall
aad
jp
mov
adc
xor
sbb
pop
sbb
mov
pop
lret
add
and
mov
inc
fstps
lds
dec
fnstcw
imul
int3
add
stc
into
cld
or
mov
push
sub
add
mov
or
add
inc
shlb
fdivrl
and
or
jle
roll
scas
cmp
outsl
jne
xchg
xchg
in
adc
xchg
jns
jmp
negl
lods
xor
mov
daa
stos
stos
sahf
dec
mov
lret
add
push
fbstp
addr16
cwtl
mov
fsub
jae
outsl
incl
hlt
add
lds
pusha
cmp
pop
jl
jmp
repz
dec
lret
and
repz
inc
add
adc
testb
sub
lods
mov
data16
ficoms
sub
shrb
xor
push
adc
push
test
sbbl
cwtl
sbb
int3
xchg
subb
movsb
out
jno
int
pop
dec
xchg
lea
inc
jne
fldenv
pop
iret
jbe
repnz
sbb
cmp
lds
in
fucom
lcall
ja
mov
adc
xchg
stc
jmp
movsb
pop
sti
sbbb
dec
and
in
std
lahf
inc
adc
xchg
aam
test
out
add
hlt
push
idiv
jg
aam
imul
mov
jle
and
or
fwait
jl
jp
cmc
cmp
adc
and
iret
lods
mov
pop
jo
mov
shll
cs
xor
or
xchg
mov
add
fisubs
push
imul
cmp
dec
inc
xchg
rclb
sub
data16
adcl
test
aas
cmc
add
pop
jbe
jns
repnz
cli
pop
lods
sahf
jle
shl
mov
movsl
pop
imul
mov
dec
xchg
stc
iret
push
out
or
fs
dec
pop
js
push
dec
je
mov
xchg
adc
and
js
scas
jno
rclb
dec
movsl
call
mov
xor
push
pop
lret
xchg
and
mov
ja
mov
pop
subl
outsb
sub
cmp
xchg
mov
jb
and
popf
inc
add
mov
pop
movsb
jl
ret
push
cld
popa
sub
xchg
loope
mov
dec
out
clc
nop
jg
jns
adc
aam
add
pusha
jnp
lods
xchg
insl
push
enter
jmp
les
jecxz
rorb
repnz
and
pop
mov
mov
adc
cmp
popf
jbe
popf
add
popf
jmp
sbb
jb
cmp
xor
mov
adc
dec
mov
jb
imul
dec
mov
incl
jle
mov
jp
push
mov
sbb
in
cltd
daa
mov
dec
push
es
cmp
mov
jmp
mov
push
mov
test
les
sbb
xchg
fmulp
pop
ret
pop
inc
mov
nop
xor
push
pop
cmp
ret
add
insb
push
popf
je
dec
insl
imul
inc
sub
cmpsb
je
sub
mov
push
pusha
mov
sub
jmp
jl
dec
insb
mov
push
out
dec
or
add
jge
aam
jecxz
inc
arpl
fsubrs
adc
scas
cmp
es
inc
lds
xchg
push
mov
add
xchg
jno
or
lods
les
shr
inc
cmp
cmpsb
jp
pop
pushf
rcrl
mov
loopne
push
rolb
int
jo
data16
fldenv
jp
loopne
push
push
mov
stc
ljmp
push
add
movsb
repz
inc
mov
fdivrl
outsl
into
hlt
sub
adc
aad
inc
js
popa
testb
dec
xchg
xlat
push
mov
es
loopne
mov
imul
mov
nop
test
xchg
and
sbb
shlb
push
scas
add
xchg
add
pusha
scas
or
jecxz
sbb
scas
loope
pop
nop
push
sub
repnz
out
out
in
mov
int
loop
shlb
and
stos
mov
nop
xlat
mov
sbb
pop
mov
in
in
xchg
xchg
cmp
mov
inc
lea
orb
mov
and
push
imul
cmp
and
pop
mov
jecxz
and
outsb
mov
mov
or
push
xchg
mov
dec
test
or
mov
push
fwait
cmp
fisubl
jecxz
inc
or
sbb
add
stos
rclb
cmp
insl
scas
std
push
jne
jno
mov
fbld
lahf
adc
mov
mov
sbb
mov
sti
mov
xchg
gs
lds
mov
xchg
mulw
pop
fisttps
dec
xchg
or
push
mov
mov
fcoml
call
and
jp
out
in
jae
mov
leave
xor
sbb
cwtl
ja
aas
rclb
jbe
lds
mov
in
jg
sbb
aam
mov
aaa
mov
cmp
push
cmp
mov
dec
jp
and
std
cmp
push
pop
adc
in
jno
mov
jbe
inc
sahf
test
xor
jbe
push
cmpl
pop
jae
leave
stos
popl
adc
mov
sub
out
lods
jg
pop
test
sbb
in
outsb
repnz
imul
fwait
add
test
fdivrl
pop
xchg
mov
rolb
aad
dec
stos
inc
sub
inc
mov
js
xor
int3
xor
mov
inc
outsb
add
jle
adc
popa
cmpl
mov
sti
push
aam
lock
fidivrs
mov
stos
movsl
test
fs
sbb
popa
fmulp
mull
leave
push
fidivl
scas
push
xor
cmc
insl
or
subb
loop
jns
mov
mov
imul
sbb
popa
pop
adc
add
out
xchg
pop
pop
xchg
mov
adc
push
cmp
pushf
adc
sub
and
xor
push
adc
xor
mov
push
fildl
xchg
repz
or
adc
mov
fwait
xor
mov
nop
rcll
xor
push
and
aaa
cld
stos
xchg
dec
xor
mov
clc
out
loopne
cmpsl
outsb
sub
scas
adc
inc
outsb
lahf
testb
sbb
int3
test
testb
mov
xor
movsb
pop
out
movsl
int
fisubs
fs
mov
cli
ret
inc
xor
fldl
cmc
int3
enter
fwait
das
out
xor
mov
sbb
xchg
or
pop
and
flds
cmpsl
sub
out
sbb
mov
bound
jns
xor
loopne
jl
je
xchg
cmpl
mov
sti
mov
fisttps
stos
sub
outsb
and
xor
pop
mov
inc
cmp
mov
cmp
inc
testb
pop
bound
inc
pop
pop
dec
test
popf
ret
cmc
xchg
sbb
xorb
sub
mov
icebp
xor
cld
sub
nop
xchg
sub
push
loope
aam
sub
mov
sub
or
sub
repnz
icebp
jmp
sahf
outsl
jb
ret
insb
cmpsl
pop
loope
mov
dec
int
daa
out
dec
xchg
ret
cld
insl
mov
inc
sub
jns
jb
outsl
xlat
sub
and
lret
add
sbb
ret
mov
test
xor
pop
nop
mov
btr
and
cmp
cmp
gs
fwait
popl
push
mov
sbb
aad
inc
rol
add
sarl
test
outsl
mov
pop
mov
repnz
js
shrl
loope
call
push
xchg
call
js
int3
stc
lret
cli
rcr
daa
dec
imul
jp
inc
rcrl
mov
stos
clc
dec
in
leave
or
mov
iret
shll
imul
loope
mov
pop
add
pop
xchg
mov
sbb
push
in
pushf
imul
insb
pop
ss
cld
xchg
dec
and
sahf
inc
pop
push
outsb
adc
aas
hlt
sub
pop
flds
jl
jge
mov
int3
das
cmp
sbb
push
dec
test
push
adc
scas
dec
add
mov
or
sahf
dec
pushf
xchg
je
adc
inc
add
data16
ret
mov
jecxz
dec
scas
xchg
test
insb
cmp
jle
xchg
adc
aam
cs
dec
xor
or
cmpsb
popl
shlb
inc
fadds
fsubrl
xchg
pushf
rcrb
imul
xchg
int
mov
icebp
ret
sarb
pop
jno
inc
loop
sbb
push
mov
or
lods
movsl
arpl
jle
push
sub
shrb
add
xchg
jbe
call
mov
inc
outsb
jnp
mov
in
pop
inc
push
lea
ds
mov
xchg
pop
mov
jl
fucomip
in
fstpt
sub
aad
movsb
adc
pop
insb
cmpsb
sti
dec
push
mov
dec
pop
cmpsb
pushf
cld
pop
pushf
or
jg
cli
ret
pop
xor
cld
lret
and
xchg
lock
aaa
and
dec
shrb
jnp
sbb
in
sbb
in
insb
loop
xor
dec
pusha
mov
mov
push
push
or
mov
fiaddl
xor
lods
sbb
andl
pusha
mov
orps
lret
add
xor
sub
and
bound
inc
mov
cmp
inc
pop
sub
adc
popa
popf
mov
fcmovu
pop
xchg
int
mov
dec
orb
lahf
dec
jno
imul
inc
mov
and
cmp
jb
pop
jg
lcall
push
push
sub
addl
inc
add
xchg
lods
call
imul
loopne
sbb
cmp
mov
loopne
lret
jae
and
lret
push
test
test
inc
inc
movd
cmc
push
or
pop
xchg
sahf
in
nop
or
fisubs
imull
sbb
adc
aad
sahf
into
in
cmp
jno
mov
add
lds
sub
mov
sbbl
sti
fisubrl
inc
push
sahf
sbb
sub
jecxz
push
and
mov
lahf
stos
inc
jae
repnz
cmpsb
mov
cmpsl
xchg
mov
lret
xchg
inc
outsl
adc
xchg
rcll
fdivr
pop
or
hlt
add
cmpl
inc
in
mov
enter
ja
adc
aaa
pop
fnstenv
gs
mov
test
ret
in
fadd
movsb
das
int3
insl
imul
ds
adc
movsb
jns
shlb
jecxz
pop
push
in
lahf
out
loope
jne
stos
pusha
push
mov
in
push
mov
mov
or
cmp
mov
mov
sti
mov
ret
jg
xor
inc
enter
bound
in
mov
mov
pop
sub
sbb
push
mov
outsl
or
loope
loope
mov
pushf
adcb
xlat
shl
lods
loopne
imul
scas
hlt
xor
mov
sbb
leave
mov
mov
mov
stos
rclb
jg
jecxz
pusha
std
mov
pop
jb
sbb
add
push
push
icebp
mov
jle
leave
inc
fiadds
jmp
sbb
cltd
push
test
outsl
rclb
test
ret
stc
sbb
sbb
dec
xor
dec
dec
sub
jmp
les
lods
lcall
jo
or
call
dec
or
flds
aam
enter
xchg
xchg
fdivrs
pop
jmp
cmp
jo
lret
outsb
jo
clc
inc
out
cmp
test
cmp
dec
leave
sahf
fidivrs
pushf
loope
jb
sbb
mov
xor
out
je
idivb
stos
adc
inc
push
push
sbbl
xor
pop
inc
out
adc
xchg
adc
mov
jns
lretw
jge
mov
decl
mov
push
lods
test
fnstenv
jle
gs
pop
and
pop
inc
lea
jne
add
testb
sub
dec
icebp
mov
nop
fcomps
pop
es
imul
fstl
mov
mov
into
lods
or
out
inc
popf
ficoml
insl
pop
or
cmp
stc
insl
je
iret
cli
in
movsl
shrl
cmpsb
les
lods
add
mov
cmp
mov
and
and
in
imul
enter
das
std
pop
loopne
xchg
push
test
mov
adc
pop
push
jns
scas
mov
test
dec
mov
mov
movsl
pop
inc
xchg
pushf
sub
jmp
ficomps
scas
cmp
dec
dec
jmp
imul
push
lcall
cmpsl
imul
test
sahf
sub
push
movsl
xchg
ret
punpckhbw
sbb
lock
fisubrl
adc
call
cmp
mov
jb
mov
or
cmpsl
stc
cmc
pop
addl
jns
test
mov
out
cmp
fdivrs
xchg
push
jecxz
aam
add
outsb
rol
das
or
or
push
add
clc
xchg
imul
mov
cmpsl
xchg
cld
sbb
test
push
fs
leave
int
and
movsb
out
inc
cmc
cmp
insb
and
cmp
fwait
sar
sub
dec
adc
pop
out
int
push
data16
mov
jp
enter
stos
pop
xor
or
movsb
movntps
mov
bound
mov
mov
sbb
add
cmp
pusha
cmp
mov
xchg
lds
add
fwait
mov
std
call
add
popa
pop
mov
fcmovnbe
ret
or
jmp
mov
out
fisubs
xor
fst
and
pop
scas
ficomps
and
sub
dec
and
stos
imulb
inc
xor
lods
and
jns
cmp
jo
fdivr
fs
into
push
jmp
insb
mov
je
out
stc
cmpl
sbb
lea
push
subl
enter
in
ss
fsubrl
js
fsubrl
test
jo
cmp
or
pop
or
jno
icebp
jnp
dec
xorl
addl
xchg
cmpsl
mov
or
stos
movsb
inc
pop
enter
or
add
cmpsb
in
pop
cld
cmp
or
pop
scas
es
pop
sbb
lret
fs
or
std
jno
mov
aad
aad
sub
inc
nop
cmpsl
push
test
mov
and
adc
xlat
xlat
adc
fwait
mov
mulb
jp
add
xchg
add
test
xlat
leave
push
xchg
mov
cmp
inc
stc
mov
push
add
xor
test
test
repnz
sub
push
gs
pop
mov
mov
pop
inc
push
rolb
add
pop
jns
rcrl
icebp
adcl
test
or
mov
lods
movb
or
xchg
push
and
ja
and
mov
pusha
fwait
leave
xchg
xor
cmp
cwtl
in
test
and
inc
jmp
movsb
push
fcmovnb
loop
push
and
repz
pop
ret
fistps
lret
mov
cwtl
jne
jmp
push
arpl
adc
into
pmaddwd
imul
idivb
dec
int3
cmp
adc
les
sub
mov
aaa
xor
arpl
fwait
xor
jl
or
push
loop
pop
and
lahf
int
rcrl
push
and
or
mov
sub
push
push
and
dec
push
outsb
scas
insb
ficomps
addr16
je
clc
lock
movsl
in
adc
leave
test
je
mov
aas
inc
imul
gs
outsb
dec
sbbb
js
movsb
les
sub
int
and
mov
xchg
sub
pop
lods
pop
and
push
cld
fdivrl
cli
pop
jg
lahf
icebp
rorb
push
popf
adc
add
je
dec
gs
sub
sub
jmp
aas
je
inc
push
xchg
xor
shll
pop
imul
pushf
jp
cmp
int3
adc
shl
stos
in
and
pop
dec
inc
mov
xor
rolb
aas
sbb
push
dec
int3
dec
lods
cld
arpl
fnstsw
lods
pop
and
push
lcall
vmread
int3
js
push
inc
jl
xchg
jnp
mov
insb
jg
mov
nop
cmp
inc
inc
out
into
test
or
aas
fmull
hlt
push
stos
xorl
outsb
sbb
sbb
sbb
jmp
jge
scas
inc
loope
dec
out
sahf
ljmp
loopne
add
call
dec
incl
jo
lret
xchg
fnsave
mov
and
or
mov
cmpsl
ss
out
cltd
mov
sub
jae
mov
lret
inc
add
popa
mov
xor
mov
mov
pop
adc
popa
arpl
movl
mov
mov
mov
ds
jge
imul
mov
sahf
jmp
notl
push
dec
aad
or
int
inc
movsl
rcrb
repz
cld
add
out
aaa
lahf
xlat
daa
out
repnz
cmp
inc
cmpl
xchg
jge
in
ds
mov
sbb
xchg
insl
mov
in
imul
les
pop
mov
icebp
shlb
inc
out
and
sti
mov
jne
icebp
gs
mov
xchg
mov
dec
mov
jle
adc
test
aas
inc
ja
xor
push
pop
cmp
in
movsb
outsb
mov
jl
repnz
out
push
jge
xchg
aad
aam
add
lret
pop
stos
sub
in
sahf
push
out
mov
add
gs
mov
pop
scas
sub
bound
mov
scas
pop
jge
aaa
jp
inc
outsb
addr16
sbb
push
sti
shll
add
push
cmovae
push
popa
cmp
fistps
ret
push
loopne
out
lahf
push
pop
push
mov
popa
jnp
mov
mov
lret
push
cmp
mov
cwtl
mov
mov
mov
mov
sbb
lea
xor
call
cmp
mov
mov
and
xor
push
sub
push
inc
adc
lock
sti
xchg
jmp
adcl
and
imul
dec
loope
cmp
xor
movsb
js
xlat
adc
lods
das
jp
orl
push
xor
sub
jnp
xchg
sbb
and
inc
pop
add
cmp
in
iret
popf
testl
daa
mov
popf
add
filds
in
es
int3
jns
inc
inc
or
cmpsl
mov
xchg
stos
mov
shll
cmpsl
jb
inc
jne
arpl
mov
xor
int3
int
cmpsb
mov
xor
dec
pop
push
ret
insb
mov
jg
push
int
sub
adc
movsl
gs
jl
push
xor
in
lcall
or
je
fisubl
lahf
mov
int3
shlb
lds
xchg
mov
js
mov
cltd
jmp
push
xchg
ss
adc
or
and
stos
rcr
bound
mov
dec
cld
or
xor
jo
lds
pop
ja
movsb
rcrb
dec
outsl
sbb
lods
pop
in
inc
jno
mov
notl
pushf
mov
xchg
test
negl
mov
mov
inc
in
push
add
icebp
pop
dec
arpl
lea
jns
jmp
das
test
sbb
out
fs
or
cltd
pop
sbb
push
sub
es
js
mov
inc
fsubl
cmpxchg
stos
cmpsb
adc
sbb
loope
jge
les
movsb
and
pop
or
aaa
fwait
ret
sub
cmp
mov
js
rcrb
mov
cmp
mov
out
push
les
or
or
or
push
fs
sti
jp
xor
lret
jno
pop
xchg
mov
mov
sti
cld
enter
test
push
dec
xor
int3
mov
fcomps
mov
add
push
fwait
fs
push
sbb
dec
lcall
movsl
pop
mov
idivl
adc
dec
cmp
loope
les
inc
dec
mov
cmp
pop
xchg
dec
lock
dec
aas
xchg
sbb
mov
outsb
xor
xchg
jl
repz
mov
mov
cli
xchg
jb
inc
inc
xchg
icebp
xchg
and
in
stc
pop
xchg
inc
repz
lahf
push
adc
lahf
into
jmp
call
cmp
stos
jnp
jbe
jl
nop
add
es
and
into
adc
shll
je
inc
push
cmp
pop
mov
push
xorb
inc
mov
rolb
nop
ds
mov
je
xchg
adc
jp
je
outsl
jmp
pop
cli
pop
inc
scas
sub
cld
dec
adc
mov
ss
mov
adc
negb
loopne
xchg
out
mov
xor
and
pop
hlt
fcmovnu
fnstsw
jns
hlt
dec
push
std
int3
icebp
pushf
fsub
sub
cld
call
daa
popa
in
xchg
push
add
xchg
inc
imul
jecxz
mov
adc
xchg
pop
dec
sbb
mov
inc
inc
jmp
inc
inc
bound
jmp
mov
in
inc
sarl
jmp
pop
sub
mov
add
push
pusha
mov
mov
jmp
lods
lcall
jns
jb
scas
sub
fcmovb
jbe
inc
pop
test
fsubl
and
mov
iret
push
cmc
add
shll
xchg
movsb
adc
pop
mov
ret
adc
lea
fwait
add
mov
std
adc
loope
loopne
or
inc
jge
orl
cmp
int
jmp
ret
ljmp
cld
loope
mov
push
push
mov
jmp
or
imul
mov
ljmp
ret
push
mov
int
sub
mov
insl
mov
pop
jno
js
les
daa
loop
xchg
loope
andl
or
xchg
stc
loop
enter
ret
in
push
shll
push
mov
es
jg
adc
ja
jge
mov
les
adc
jecxz
outsl
xchg
mov
pop
push
dec
fwait
push
rcr
and
aad
xor
pop
std
jb
or
push
jmp
mov
sbb
sbb
jp
mov
push
dec
sbb
in
push
xchg
sub
and
fwait
sbbl
stos
inc
loop
scas
shrl
popa
and
dec
or
out
lcall
pop
leave
dec
std
loope
pop
dec
mov
out
xor
call
pop
mov
or
mov
out
je
add
and
adc
dec
lret
rcl
push
test
cmp
push
stc
pop
and
sbb
fistps
pop
push
push
mov
es
fmull
pop
mov
sub
jg
cwtl
inc
int3
int
sub
xchg
iret
into
fcompl
rcll
loopne
call
aad
push
fwait
xchg
cld
cmp
lcall
or
sbb
dec
scas
cmp
inc
out
cmp
jo
into
shll
clc
int3
cmp
mov
ret
arpl
hlt
mov
push
test
imul
scas
push
incl
or
rorl
push
and
cltd
pop
add
fs
adc
mov
dec
push
divb
out
mov
xor
pop
jbe
test
dec
pop
jno
movsb
sti
clc
and
iret
jecxz
shrb
mov
or
add
mov
ret
mov
jmp
adc
es
lock
test
adc
and
or
xchg
sbb
data16
negl
jo
shlb
decb
pop
mov
xchg
aas
out
jbe
or
mov
mov
icebp
aam
shll
shrl
xchg
fildl
test
lahf
in
lea
xor
cmp
cmp
cmp
add
add
adc
add
aad
jo
jle
sbb
sub
jp
loop
jns
out
push
or
call
aas
ret
out
add
cmp
shll
stc
mov
test
adc
out
icebp
mov
mov
adc
out
roll
hlt
repnz
lods
xlat
jne
in
jmp
pop
test
sub
mov
inc
rcl
call
lcall
jae
push
push
or
leave
add
adc
mov
sub
in
test
sub
mov
add
rol
mov
cmpsb
cmpsl
dec
fldl
sbb
and
jcxz
sti
mov
sahf
gs
pop
pop
pushf
stc
cwtl
adc
data16
push
mov
scas
xor
sbb
mov
mov
or
push
lret
out
xchg
jle
cli
xchg
mov
lods
pop
daa
jmp
shlb
mov
xchg
and
add
pop
frstor
dec
test
xchg
xchg
dec
cmpsl
sub
add
clc
xchg
xor
repz
test
out
cwtl
dec
mov
jmp
xorl
inc
enter
adc
icebp
neg
adc
test
stos
fsubrs
xchg
jge
clc
fcmovnu
sti
inc
or
and
das
mov
xchg
pop
pop
inc
adcb
xor
jl
fwait
std
cltd
dec
cmpsl
lret
dec
add
outsb
jb
cmpsb
xor
xchg
fcmovnbe
ljmp
pushf
rdmsr
addr16
insb
add
inc
dec
pop
jecxz
add
xchg
ss
cmpsb
add
rcr
jmp
jg
mov
push
push
ss
and
push
inc
imul
xchg
add
jne
xor
lods
test
lds
cmp
jg
cmpsb
mov
mov
jb
rep
mov
les
loop
pop
lds
jmp
push
adc
in
in
subl
adc
aas
dec
into
push
sbb
cmc
push
leave
repnz
add
jb
mov
insb
pop
push
push
popf
cmp
sarl
sbb
out
inc
add
adc
jns
and
rcrb
cmpsl
adc
shlb
inc
es
mov
addr16
adcl
leave
jmp
in
jl
xor
daa
mov
sbb
into
gs
out
fdivp
sbb
inc
loopne
std
inc
adc
int3
sbb
adc
add
das
mov
std
sti
subl
fwait
movsb
cld
fucom
sarb
sbb
push
inc
imul
push
imull
lods
mov
dec
mov
or
imul
frstpm(287
stc
scas
lock
add
cmp
lds
out
mov
or
movl
dec
and
std
test
rol
pusha
shlb
adc
jge
mov
out
loopne
inc
dec
dec
sub
mov
jecxz
jbe
adc
jmp
sub
out
lret
out
push
pop
sub
jge
mov
cmp
sti
out
sub
sub
jg
fnstenv
xor
pop
mov
mov
ret
xchg
push
in
add
sbb
mov
lods
and
into
int3
incl
mov
jns
mov
js
cli
jecxz
and
jl
cwtl
inc
or
adc
scas
sti
pop
cwtl
pop
sbb
int
or
and
xchg
push
sbb
ds
fdivs
dec
ret
cmpsl
lds
and
inc
mov
sahf
int3
int3
inc
out
push
mov
out
lods
mov
pop
mov
sbb
in
and
std
aam
jae
jp
movsb
cmp
call
loop
mov
ficoml
dec
pop
ds
xlat
pop
mov
jae
or
repnz
stos
adc
pop
pushf
insl
xchg
cmp
ror
rorb
mov
cmpsl
inc
xor
jae
stos
dec
into
dec
jb
clc
repz
xor
cmp
aam
push
add
ljmp
xor
cmp
cmp
popa
push
mov
ja
ret
faddl
ficomps
xor
fisubrs
mov
cli
sub
inc
pop
test
inc
icebp
int3
aas
inc
mov
cmp
mov
push
mov
shrl
std
inc
iret
in
imul
dec
xchg
xchg
pushl
out
and
push
and
ficompl
aaa
and
inc
push
nop
xchg
fdiv
and
cmp
lret
or
sbb
dec
mov
cmp
nop
mov
and
test
clc
lahf
test
xor
scas
rcl
orl
cli
mov
cwtl
fbstp
pop
push
push
out
mov
out
int3
jno
hlt
mov
pop
jno
mov
out
test
fcompl
xchg
sub
sbb
cld
push
clc
nop
or
mov
or
out
xorb
xchg
mov
shrl
repnz
sub
sub
xchg
and
push
jp
xchg
pop
aad
ret
jbe
fmuls
dec
xor
ret
cli
inc
mov
es
pop
dec
jnp
cmpsl
outsb
les
inc
ja
mov
xchg
insb
imul
lods
out
roll
in
insl
and
test
mov
mov
mov
fs
in
ror
stc
xchg
pop
decl
lcall
insb
lods
xchg
sti
int3
mov
cmc
or
pop
enter
adc
adc
lret
add
leave
add
das
mov
outsb
movsl
movsb
jl
test
xor
je
jmp
test
adc
popa
fstpt
rorb
add
sub
add
addl
dec
add
cmp
add
or
add
adc
cmpsl
push
das
mov
cmpsl
push
sbb
mov
jns
into
ljmp
xor
sarb
mov
xlat
cmc
cwtl
cs
neg
jmp
add
xor
fdivrl
mov
xor
outsb
xchg
mov
out
sub
mov
xchg
mov
mov
outsb
xchg
xor
cwtl
mov
jecxz
mov
mov
sbb
pop
cmp
mov
cmpsl
and
dec
cmp
sbb
not
out
mov
mov
jp
jg
jbe
out
adc
mov
sbb
mov
sbb
imul
leave
mov
roll
cs
jp
xchg
arpl
adcl
xchg
jae
adc
adc
stos
ret
xchg
jno
sbb
ja
push
sbb
sub
cmpsl
sub
mov
addl
add
mov
shrl
sub
dec
sbb
mov
jo
aad
clc
shll
cli
popf
lret
cmp
sbb
stos
stos
cmp
loope
pop
push
push
lret
fadds
repnz
shl
mov
sbb
jecxz
das
movsb
inc
insb
xchg
pop
or
sub
icebp
lea
mov
sbb
ret
add
jecxz
loopne
push
dec
mov
mov
shl
cmpl
es
out
mov
jg
inc
repz
xlat
jbe
pop
dec
cmp
sti
ss
push
sbb
add
fildll
mov
subb
pushf
xlat
sbb
bound
ss
pop
mov
jno
push
pop
popf
fldt
call
int
adcb
aas
cs
xor
fsubs
cmp
jle
mov
lods
les
sbb
and
test
das
in
mov
ret
and
lret
push
imul
repnz
cmpsb
outsl
dec
fwait
jns
pop
in
rolb
and
push
inc
orb
aam
test
push
sbb
pop
jge
ss
inc
add
loope
inc
cltd
push
leave
jo
aas
ds
pop
bound
insl
rclb
jle
subl
repnz
pop
jns
xor
mov
add
icebp
gs
out
out
pop
fldl
lods
dec
insb
cld
negb
sub
pusha
inc
push
fmuls
or
fisubs
cld
jl
rorb
sbb
out
jbe
mov
cmc
insl
mov
dec
cltd
jno
insl
jmp
in
inc
andl
cmp
and
enter
mov
gs
dec
cmp
mov
in
mov
jae
mov
stos
lds
jge
iret
mov
ljmp
jb
sbb
mov
lea
lock
shrl
out
fimull
push
jbe
pop
jge
fidivs
in
pop
loop
dec
js
adc
xor
xor
mov
ja
xor
xlat
nop
call
lea
inc
cltd
inc
outsb
cmp
inc
bnd
cmp
jle
cmpsb
sub
stos
scas
push
lret
stos
aas
cmp
fwait
adc
pop
lea
rorl
xor
push
popa
test
ds
aad
scas
mov
cmc
xchg
insl
dec
aas
out
jb
mov
mov
pop
icebp
xlat
or
fs
mov
adc
sub
mov
mov
add
dec
cmpsl
dec
pop
movl
scas
dec
outsb
cmp
shll
mov
in
and
and
cltd
adc
jmp
pop
jecxz
fs
shlb
mov
pop
lret
fwait
add
hlt
push
cmpsb
mov
sbb
ret
cmp
mov
jg
in
je
cmp
inc
mov
push
xchg
js
dec
jo
sbb
add
repnz
ljmp
and
cmp
mov
jbe
ss
ret
dec
mov
dec
sahf
dec
pop
push
mov
test
ret
pop
pop
push
or
xchg
push
mov
or
lcall
or
out
mov
stos
ror
push
pop
sbb
ja
add
decl
not
jp
xor
or
mov
nop
jl
aas
ds
sbb
mov
test
loope
into
ret
pop
mov
test
iret
mov
into
push
cmc
jl
in
sub
je
rorb
sub
sbb
stc
cmpsb
sub
das
int3
inc
cmp
add
test
add
mov
call
sub
rol
cmp
imul
lahf
cmp
cmp
push
inc
fld
xchg
fsts
xor
addb
mov
inc
jae
mov
test
pop
cwtl
mov
imul
shrl
jbe
mov
dec
jge
frstor
sbb
xor
cwtl
scas
data16
push
xor
push
add
xchg
pop
lods
and
popf
mov
shrb
sub
stos
push
add
bound
push
fisttpll
sbb
nop
and
nop
mov
jb
sub
lret
sbb
lods
cwtl
shl
pop
dec
adc
jecxz
adc
cmp
xchg
sbb
pushf
fwait
xlat
ja
mov
mov
pop
ja
loope
cltd
xor
push
sar
stos
jle
lods
int
fadds
cmp
testb
js
cmp
mov
push
jne
lret
inc
test
jle
cli
js
xor
paddb
xchg
lea
in
rorb
mov
pop
dec
or
dec
add
js
shl
xlat
dec
outsb
stos
dec
in
into
ficoms
enter
mov
pop
test
aam
xchg
gs
inc
adc
inc
roll
sarl
xor
movsl
icebp
jno
into
jp
das
loope
cmp
inc
pushf
cmp
mov
inc
imul
fcom
mov
push
cli
pop
xor
dec
push
js
ja
cmpsb
jmp
and
das
sub
andl
cmp
into
push
repz
dec
pusha
jmp
in
fsub
iret
sbb
mov
jle
xchg
fstpl
out
push
inc
jnp
jno
dec
and
mov
dec
adc
mov
fdivr
outsl
int
mov
mov
nop
xor
mov
cli
mov
lcall
mov
notb
ror
sti
pop
subl
repnz
bound
dec
leave
cmp
repnz
je
mov
cmp
inc
rcrl
jne
pushf
inc
das
es
fnsave
xor
or
orb
jb
or
fiaddl
xlat
sbb
sub
add
cmp
lds
cld
xor
pop
clc
pusha
jno
or
dec
loopne
dec
dec
add
mov
fcoml
mov
lea
mov
inc
cmp
jg
fidivrl
lea
mov
mulb
leave
pop
mov
icebp
nop
xchg
xchg
icebp
sahf
push
add
lret
mulb
jns
je
push
in
mov
ja
push
dec
mov
xchg
pop
aas
or
mov
ret
repnz
adc
sbb
addb
notl
xchg
and
xor
insb
paddq
or
jae
inc
cli
adc
xchg
push
aaa
xor
sub
inc
jbe
pusha
push
cmp
lds
xchg
pusha
cmpl
pop
sbb
pop
or
sbb
lods
pop
stos
enter
add
push
in
in
jle
inc
je
iret
xchg
cmc
xchg
pop
add
xor
xor
rclb
daa
orl
subb
mov
xor
inc
mov
jg
pop
aad
mov
shll
loopne
pop
jno
cmpsb
pusha
nop
adc
dec
hlt
xor
mov
inc
jg
dec
sub
mov
loope
xor
cmp
cltd
negl
int
add
push
cwtl
loope
mov
fdecstp
adc
aaa
aam
inc
push
shlb
push
cwtl
pushf
mov
inc
jg
fcmovb
enter
mov
sti
dec
enter
mulb
bound
xchg
rorb
fcoms
stos
cmp
and
scas
xchg
ret
push
add
out
and
inc
pushf
pusha
ret
test
add
cs
ret
aaa
cmp
xchg
popa
ficoml
test
pop
testl
jbe
mov
sahf
mov
in
aaa
or
test
xchg
push
dec
in
mov
or
jbe
fisubrs
jo
mul
sbb
push
cmc
push
mov
mov
sub
or
ret
popf
lock
les
lds
sahf
out
push
add
push
int3
out
daa
xor
push
ja
ret
js
int3
mov
inc
mov
orl
cmpsl
in
mull
mov
xor
xor
pop
fsubl
out
lods
inc
lcall
add
xchg
je
and
and
inc
push
push
dec
xchg
daa
cmp
mov
mov
fdiv
call
pop
adc
cld
adcb
mov
aas
out
sbb
push
ficompl
shrl
aam
test
adc
add
dec
popf
jne
inc
stc
add
or
push
pop
pop
push
cs
je
loop
sti
outsb
aad
and
jle
test
cmpb
mov
push
in
popa
je
or
in
mov
aad
push
sub
or
les
pushf
mov
inc
push
mov
cmp
add
push
nop
mov
xor
test
jae
push
pop
xchg
into
arpl
or
mov
mov
adc
sbb
mov
or
mov
or
pusha
xor
fisubl
mov
jp
jae
mov
cmovge
loopne
ds
arpl
or
les
mov
mov
lds
cmp
inc
popf
nop
icebp
cmp
cmp
push
sbb
addr16
add
fbld
mov
jne
adc
mov
in
push
pusha
pop
cld
xor
stos
sub
adc
ja
sbb
push
in
loope
mov
mov
and
sarl
pushf
sti
xor
add
or
mull
push
xor
pmullw
adc
xchg
cmc
rol
add
repnz
xor
or
push
std
mov
sti
aas
sub
or
mov
cld
push
fsubrs
mov
rol
jo
repz
rorl
rcll
jo
or
ja
pushf
pop
cmpsl
arpl
jns
pop
cli
xor
fstpl
dec
lods
pusha
imul
push
mov
jns
and
mov
dec
mov
rcrl
pop
mov
popf
stos
iret
lahf
lock
dec
notl
inc
or
push
pop
adc
dec
and
in
lgs
push
adc
ja
pop
mov
icebp
adc
nop
rcrb
out
subb
lods
les
fs
popa
and
divb
int
sbb
pop
add
mov
xor
test
fsts
mov
push
xor
int
xor
in
out
mov
or
and
cmpsl
iret
arpl
pop
scas
push
dec
cmp
sub
mov
aaa
inc
mov
add
jge
mov
inc
das
jo
push
fbstp
lcall
inc
xchg
lock
jo
jnp
test
inc
sbb
ret
and
jecxz
sar
lcall
popa
and
inc
cli
cmpsb
xchg
sub
sub
xor
pop
adc
mov
push
cmp
sub
adcl
aam
mov
out
dec
dec
hlt
inc
cmp
jnp
das
pusha
popf
pop
push
mov
xchg
or
les
xor
insl
shrb
sbbb
mov
inc
mov
loope
xlat
aaa
cwtl
repnz
or
pusha
std
sub
lret
pushf
sbb
cmpsb
mov
sbb
pop
leave
xor
pop
clc
push
and
shrl
dec
into
lock
sub
xchg
aas
minps
cs
std
aas
xlat
mov
notb
repnz
push
mov
push
stos
push
sub
imul
cmp
dec
gs
repz
mov
fwait
sahf
ror
enter
cmc
out
out
inc
movl
xchg
cli
inc
cmp
mov
push
jg
stc
and
jle
jl
lahf
jmp
add
cmp
jmp
loopne
inc
jp
cwtl
aaa
neg
ds
xchg
shll
push
sub
int3
xchg
push
jecxz
xor
dec
adc
adc
cs
sbb
negb
out
aaa
adc
js
in
loop
cmp
xchg
adc
das
lock
xchg
mov
in
data16
scas
xor
push
xor
xchg
lahf
jge
mov
sbb
loope
push
test
pusha
arpl
in
and
ljmp
add
dec
push
cmp
nop
push
lock
cmp
pop
adc
push
mov
mov
out
hlt
dec
outsl
mov
adc
test
fisubrl
cld
andl
fnstenv
sub
sahf
out
pop
dec
fldcw
in
dec
adcl
push
aad
ret
or
jl
ljmp
inc
loopne
hlt
cmp
cld
cltd
push
movsl
pop
xchg
or
les
cmp
push
or
dec
mov
dec
cli
fisubrs
mov
pop
cmp
pop
fucomp
inc
bound
js
and
repz
shlb
lea
xor
fcoml
mov
out
mov
adc
adc
popa
int3
jmp
cmp
ffreep
push
mov
jp
mov
addb
xchg
cmp
mov
mov
sub
hlt
stos
mov
lahf
mov
enter
xchg
mov
sbb
ret
shl
sub
sbb
inc
int3
push
in
inc
or
dec
leave
arpl
repz
scas
into
jb
pop
fbld
pop
push
jle
inc
ss
sub
outsl
hlt
xor
in
and
testl
push
popf
das
fnsave
sub
cwtl
mov
movsb
in
jl
mov
rorl
push
jo
lds
dec
out
popa
ss
mov
mov
cmp
cld
cs
lahf
adc
aam
and
xorps
scas
or
stos
xchg
cmp
in
add
sahf
add
dec
xchg
mov
shrb
mov
ss
add
add
cmp
push
inc
mov
pop
aas
lret
sbb
push
dec
inc
ret
test
jne
sub
push
jno
xchg
inc
or
push
hlt
xorb
push
fnstenv
sbb
movsb
adc
adc
pop
adc
dec
shll
outsb
mull
mov
add
ficoml
jmp
mov
jmp
imul
cmp
pop
xchg
cmp
ret
pop
sub
sub
into
fcmovb
cmp
dec
push
push
jle
idivb
cli
cmovs
scas
mov
or
ss
inc
push
cld
mov
or
maskmovq
cmp
pop
jbe
or
jnp
jne
jnp
shll
dec
cmpb
jmp
xor
pop
jp
mov
fcoml
xchg
inc
xor
pop
int
lds
lock
test
dec
push
mov
inc
mov
jae
clc
dec
out
jno
jl
bound
in
nop
cmp
int3
jno
dec
mov
mov
daa
dec
dec
sbb
cmp
cmp
dec
push
rcrl
aad
mov
lea
popa
xchg
out
movsb
mov
and
sub
orl
fcmovbe
inc
cmp
aaa
xchg
dec
test
jb
push
xor
int
into
test
ljmp
cmc
xor
aas
dec
dec
pop
ss
sbb
jg
sub
sar
leave
scas
add
cli
movsl
and
pop
inc
mov
mov
fmuls
int
imul
ret
inc
sub
sti
inc
movsb
ss
jl
xchg
lods
mov
add
iret
pop
add
ret
or
xor
xor
cs
xor
mov
cmp
mov
pusha
jno
xchg
adc
sbb
repnz
dec
mov
sbb
loop
mov
ljmp
repz
mov
js
add
pop
bound
adc
cwtl
pop
xor
enter
addr16
sbb
inc
fimull
sahf
lods
pusha
je
jmp
pcmpeqd
outsl
pop
loope
adc
outsb
pop
out
sbb
in
aad
mov
rep
iret
call
jl
outsl
insl
dec
stos
std
push
insl
mov
shlb
push
mov
sub
imul
cmp
addb
add
jbe
cmp
bound
fcompl
decl
es
popa
std
pop
jl
jne
push
push
stos
mov
sbb
pop
jnp
xchg
or
ret
nop
cmpsl
stos
out
aas
xlat
dec
pop
mov
push
idivl
mov
inc
daa
sbb
fwait
loop
cld
sbb
inc
sub
outsl
test
enter
fisubl
xor
scas
movzwl
fmulp
out
pop
mov
mov
add
mov
scas
dec
mov
adc
xchg
lock
push
in
dec
xlat
sub
and
mov
sbb
ret
sub
loop
mov
mov
and
pop
popf
rcll
fs
xchg
pop
mul
sub
stos
xor
jmp
push
es
fistps
pop
xor
cmpsb
lds
sarb
inc
push
das
jge
mov
daa
fmull
scas
leave
cmc
or
fnstsw
xor
icebp
bnd
cmp
aaa
lods
mov
ds
and
std
stos
cltd
mov
or
mov
js
cmp
hlt
icebp
mov
insl
movsl
push
mov
inc
mov
int
cmp
loopne
jl
popf
jbe
sub
cmpsb
inc
mov
adc
jl
insl
rclb
mov
xchg
jle
jns
fbld
jge
xchg
sub
out
mov
sub
sub
xchg
jnp
out
aad
sub
cmpsb
inc
mov
lret
dec
inc
inc
aas
sti
xor
jmp
rorl
mov
decl
iret
mov
push
mov
in
dec
sbb
push
shlb
inc
push
bswap
mov
out
jo
sbb
in
push
adc
sub
cmc
add
pop
in
notb
push
adc
pusha
imul
aad
mov
popa
ret
pop
fs
js
push
adc
int3
or
xor
in
stc
sbb
push
cmp
jecxz
xor
mov
subb
pop
and
add
pop
inc
xchg
insl
cmp
enter
fdiv
loop
sub
sahf
pop
sarl
push
cmp
inc
out
cwtl
push
mov
or
adc
test
xor
negb
lods
nop
pop
in
fnstenv
and
ds
dec
xor
stc
sub
scas
cmpsb
sahf
test
xorl
jb
fistps
sbbl
fsts
test
fdivr
pop
or
sbb
jl
data16
mov
roll
pop
sbb
mov
xchg
pop
dec
stos
movsl
xchg
and
inc
mov
fs
insl
xchg
push
fwait
daa
add
cwtl
fdivrl
data16
insl
into
push
dec
jae
repz
or
outsb
dec
lea
jbe
sahf
adc
xor
add
ret
sbb
mov
jne
mov
dec
cmp
dec
ljmp
lods
push
cmp
xchg
pop
repnz
mov
fdivrp
pusha
dec
lock
xchg
xchg
sbb
rorb
pushl
inc
push
lock
repnz
in
jo
push
mov
jae
sbb
sub
mov
fisubrl
mov
inc
fnstcw
mov
adc
or
lcall
scas
repz
mov
jno
ret
scas
cmp
add
or
jg
scas
imul
xor
ret
add
roll
loop
jge
int
mov
jg
testb
movsb
shr
popf
add
in
lret
and
and
ja
xchg
pop
jl
xchg
cmp
cli
jle
lcall
sbb
xor
mov
or
shll
or
jl
pushf
sub
shll
push
mov
sbb
inc
xchg
sub
mov
das
jge
jg
push
mov
test
jb
mov
pushf
fwait
pushf
and
mov
dec
cli
sti
insb
loopne
sub
stc
cmp
cwtl
inc
bound
aaa
xchg
daa
lds
add
inc
xchg
test
aam
sub
or
adc
ret
dec
or
pop
xchg
test
push
aad
mov
and
jle
sbb
add
xchg
ret
xor
sahf
ss
js
xchg
inc
dec
out
pop
cld
inc
inc
mov
and
inc
cltd
paddq
push
xlat
jno
jo
adc
inc
rcll
out
daa
jbe
out
clc
mov
adc
push
mov
mov
dec
jle
test
and
movsb
dec
or
cmpsl
xchg
inc
pop
sbb
jb
xchg
push
dec
mov
repz
or
filds
dec
dec
mov
lods
jnp
repnz
dec
push
inc
sbb
fistpll
cltd
mov
addr16
cvtpi2ps
mov
ljmp
xor
faddl
fbstp
mov
xor
add
sti
nop
sub
imul
insl
test
addb
leave
out
mov
mov
fldt
rcll
int
xchg
mov
pop
scas
dec
cmp
aam
xchg
dec
and
lcall
dec
and
fsub
mov
adc
mov
xor
mov
cmpsb
outsb
jl
pop
mov
xor
bound
cmp
rorb
push
pop
mov
mov
inc
pop
mov
inc
lret
mov
pop
jne
pop
add
in
sbb
cmp
mov
mov
imul
cld
and
ljmp
dec
and
adc
jecxz
fistpl
mov
cmp
rclb
xor
inc
mov
mov
cmp
xlat
insl
test
hlt
loopne
sub
push
mov
int
cmp
outsl
adc
rcrl
lods
out
xor
imul
or
das
stc
mov
jmp
dec
mov
pop
xor
call
data16
cmp
nop
insl
push
mov
insl
ja
jp
pop
pop
int
adc
insl
popa
pop
sbb
hlt
xor
std
jg
pop
lds
push
pusha
shrl
pop
movsl
rolb
xor
cld
mov
push
mov
rorb
test
xor
sti
lods
lods
jae
rcr
mov
repz
pop
sub
addr16
xchg
out
fbld
add
popa
mov
pop
xor
jbe
pop
pop
xchg
sarb
mov
jecxz
fwait
adc
js
in
xchg
movsb
mov
dec
push
push
or
ret
or
pop
enterw
jmp
inc
les
xchg
and
jnp
and
cld
arpl
add
js
xor
cmpl
jo
daa
test
or
mov
repnz
into
push
cmc
xchg
lcall
pop
daa
es
mov
addr16
adc
mov
xchg
sahf
pop
arpl
xchg
ds
sbb
es
test
mov
leave
mov
push
std
in
fstpl
imul
sti
xchg
call
xor
mov
xchg
jbe
mov
ss
cld
xor
hlt
add
inc
and
mov
scas
add
cmp
pop
xchg
lcall
dec
ror
js
cltd
int3
sbb
rcl
rolb
sub
mov
jmp
xor
inc
pop
mov
or
inc
and
adc
test
push
and
cs
mov
sbb
xor
mov
jno
lods
sub
or
mov
sub
lock
push
incw
mov
fiadds
mov
in
scas
dec
shll
xor
or
mov
mov
repz
jne
pop
repz
push
out
mov
dec
add
fcmovnb
test
mov
fiadds
adc
repnz
push
jnp
stos
test
xchg
dec
adc
add
test
les
aad
into
dec
neg
or
leave
push
bnd
adc
xchg
cmp
jnp
setae
and
leave
popf
subl
aas
mov
xchg
jo
scas
mov
fidivrl
scas
mov
sbb
fsubrs
insl
push
sarb
xor
fbld
cltd
push
lret
cli
addr16
cmp
aad
cld
and
xchg
sub
je
or
ret
rol
out
adc
cmp
and
mov
cld
pop
fdivrl
inc
lock
fwait
push
int3
ret
xchg
pushf
mov
das
cmpsb
inc
ja
cmp
call
dec
pop
daa
fnstenv
cmp
fwait
push
add
xchg
adc
push
sbb
ja
ss
and
nop
add
sub
mov
test
push
pop
dec
sbb
mov
outsl
and
or
idivl
cmpl
cmp
xchg
cmp
mov
or
sbb
lahf
hlt
or
roll
push
jnp
nop
cmpb
fsubs
and
add
cmp
cmp
stos
call
test
enter
lods
dec
add
nop
and
and
add
pop
flds
rolb
cltd
add
aad
and
xorl
jg
or
gs
gs
adc
pop
inc
cmp
pop
das
xor
scas
in
data16
fmuls
xchg
add
fldenv
sbb
mov
mov
stc
fisttpl
or
cmp
and
sub
ret
or
popf
adcb
xlat
loopne
jg
pushf
jge
adc
aad
nop
sti
adc
punpckhdq
pop
add
fdivr
cmpsl
xchg
ss
jmp
dec
mov
sub
shrl
sbb
adc
push
push
gs
insb
pop
inc
out
es
enter
outsl
sbb
addl
lds
ja
cmpsb
mov
lcall
and
shrl
int3
test
mov
xchg
cmp
mov
adc
mov
dec
rcrl
dec
xchg
je
sub
inc
xchg
sbb
jmp
loopne
add
xchg
js
inc
sbb
lods
lcall
dec
sbb
aad
out
inc
lds
icebp
jns
stc
push
fsqrt
or
adc
iret
xchg
jp
daa
push
int3
cli
aaa
jbe
movsb
test
mov
enter
jge
push
imull
jnp
add
pop
or
lods
test
push
xchg
cmpsb
lea
jl
fnsave
pop
fistl
in
sbb
sahf
push
bound
pop
xor
push
fstpt
std
cmpsb
idivl
lds
outsl
pop
data16
lret
cmp
inc
xchg
ljmp
out
clc
mov
inc
int
scas
mov
and
sub
mov
cmc
faddp
xor
fistpll
lods
jecxz
cmp
pop
loope
repnz
xchg
pop
decl
xchg
xor
insb
aas
inc
movb
mov
popf
adc
sbb
fisubrl
sbb
call
loope
insl
loop
testl
aad
and
imul
fldl
pop
jno
sahf
daa
pop
cmp
movsl
or
ljmp
jmp
call
repnz
test
in
add
in
cmp
push
mov
mov
push
or
fucomi
ja
popa
cmpsb
lret
imul
jecxz
in
arpl
inc
sarl
dec
sbb
lds
std
dec
xor
xchg
jnp
cmc
mov
mov
jg
aas
sub
aaa
inc
lahf
pop
ja
fldenv
aam
int3
jo
fwait
xchg
mov
jnp
mov
cltd
pop
adc
stos
xchg
mov
mov
test
push
sub
pop
pop
cmp
pop
sub
faddl
sub
int
clc
int3
mov
xlat
mov
sbb
xor
insl
les
mov
mov
sarl
out
cmp
pop
cmpb
popf
fcoml
xor
push
mov
add
stos
cmp
cmpsl
stc
mov
lods
inc
sub
jge
push
mov
or
pop
xchg
loop
movl
lahf
scas
call
clc
add
jns
mov
stc
jns
sub
jae
ficompl
lret
fsubl
fdivl
fwait
movsl
repnz
xor
xchg
jns
mov
mov
jbe
rclb
mov
orl
and
jl
dec
push
add
pop
cld
movsb
and
xchg
aaa
fsts
in
or
mov
scas
or
add
test
ds
sbb
pop
dec
and
psraw
xchg
popf
cmp
push
jl
cwtl
xor
loope
adc
scas
sbb
fistpl
mov
mov
mov
outsb
push
pop
pop
into
out
test
test
xor
push
sub
out
xchg
cmp
leave
jbe
and
ret
fistpll
and
stos
jae
icebp
push
or
mov
xor
inc
xchg
gs
ficoms
decb
sbb
sbbl
mov
aaa
jge
inc
push
movsb
xor
test
lea
in
xchg
orl
outsb
lock
ds
call
addl
cmpl
dec
dec
and
sbb
cld
test
lea
dec
sbb
mov
add
ljmp
xchg
insl
test
cmp
aam
ret
adc
mov
xor
shlb
outsl
adc
aas
and
stos
fsubl
cmp
xor
lret
aad
sub
push
movsb
cmp
add
mov
sbb
adc
dec
or
out
dec
inc
lret
xchg
pop
inc
and
subl
jnp
mov
xchg
repnz
adc
mov
jge
es
fucomp
jp
in
pushf
call
cmpsl
hlt
pop
dec
imulb
je
ret
mov
hlt
and
xor
out
into
adc
mov
je
js
xchg
add
jns
imul
inc
mov
stos
repnz
mov
scas
in
sub
xchg
lock
mov
add
shll
cmpsl
das
ja
cmp
ja
dec
xor
add
mov
dec
sbb
sahf
test
out
dec
jne
jno,pn
rcl
stos
pop
in
fistpll
fdivrs
pop
mov
mov
dec
cmp
inc
in
xchg
in
lds
dec
mov
decl
scas
fcomi
std
loop
cmpsl
rcrl
loope
inc
ja
push
mov
inc
jbe
push
mov
call
jl
test
test
aas
sti
out
dec
adc
cwtl
lock
xchg
inc
iret
push
mov
arpl
orl
nop
xorl
sti
stos
jmp
pop
sub
rcrl
gs
imul
cmpsl
jp
clc
or
testl
mov
lret
push
lea
addr16
pop
xchg
mov
jmp
mov
push
shr
test
shrb
xchg
push
dec
pop
orl
decb
or
cmpl
popf
inc
mov
add
mov
inc
cld
sub
and
aam
sahf
or
push
cmpsb
mov
sub
jne
aam
imul
movsb
mov
cs
insl
cmp
popa
cmp
mov
fwait
lds
mov
std
or
shrl
aaa
push
stos
xchg
add
push
dec
cltd
lds
cs
mov
or
pop
mov
insb
mov
sub
pop
shrb
sub
inc
sbb
xchg
decl
repnz
js
jle
addr16
mov
or
lods
jae
bnd
cmp
dec
lret
loop
rclb
cmp
mov
sbb
adc
imul
adc
fidivs
imul
testb
out
aad
sbb
lcall
rorb
aaa
xor
jbe
cs
pop
pop
in
fimuls
jl
mov
or
stos
out
sub
es
or
ffree
stos
xchg
mov
pop
cmp
into
mov
xchg
jmp
mov
loop
insb
divl
ret
mov
and
sahf
lods
cmp
in
fsub
jno
lds
xchg
call
cltd
in
cmp
sub
stc
pop
rcll
es
sbb
data16
inc
hlt
xor
js
and
mov
aas
xor
ret
add
xorb
xchg
cmc
sub
or
adc
cmc
jo
loope
pop
inc
sub
mov
imul
and
lea
incl
into
mov
or
imull
lret
stos
pop
push
addb
decb
sbbl
imul
dec
sub
dec
data16
in
aad
push
mov
loop
xchg
cli
mov
push
cli
arpl
or
cmpsb
out
lds
push
jge
lcall
cmp
dec
push
dec
cs
xor
in
xchg
jge
fcomip
xchg
adc
int3
incl
cmp
orb
lods
clc
movsl
mov
xor
js
mov
js
jo
xchg
inc
sbb
enter
stc
mov
mov
clc
imul
pop
add
xchg
push
mov
push
and
push
sub
add
shll
nop
add
hlt
dec
dec
mov
cwtl
xor
push
pop
or
jae
pop
pop
push
cmp
jg
jne
adc
mov
inc
sub
jnp
int3
or
mov
dec
rcl
xlat
xor
push
push
cmp
clc
enter
dec
xchg
xchg
repnz
push
sbb
loope
or
shl
cwtl
fs
xchg
out
sarl
or
icebp
sti
pop
pop
xchg
mov
outsb
xor
or
stos
imul
mov
aaa
cli
test
sarl
sbb
popa
mov
ffreep
dec
adc
push
popf
jno
lahf
cmpsb
xor
sti
push
xchg
fidivrl
sarl
xor
imul
inc
jmp
call
scas
out
leave
mov
ds
scas
xor
mov
push
xchg
add
sub
mov
cs
pop
test
int
push
xor
daa
movsl
jnp
out
rcrb
insl
lea
mov
jg
jecxz
loope
rcrb
push
mov
adc
cltd
popa
jmp
hlt
das
xor
enter
add
das
popa
bnd
repnz
add
out
hlt
pop
mov
mov
sbb
test
xchg
fdivrp
arpl
sbb
xchg
mov
push
jae
sbb
add
mov
sub
xchg
and
sbb
fists
js
add
dec
outsl
xchg
jmp
add
enter
cltd
jb
mov
es
xchg
and
dec
in
mov
or
xor
aam
mov
push
jbe
sahf
jb
inc
mov
aam
cmpsl
addr16
jne
movlhps
push
inc
add
push
rolb
xchg
imul
jle
add
cwtl
dec
int
ja
insb
addr16
fs
cltd
mov
xor
in
mov
xor
cmc
lcall
stos
dec
fsubl
hlt
adc
jmp
sbb
ret
stc
inc
in
insl
jne
cmpsl
or
fldenv
negb
pop
cwtl
jmp
shlb
dec
sub
or
mov
aam
jb
jnp
stos
std
sub
mov
popf
inc
xor
mov
mov
push
pop
bound
cmc
faddl
sub
int3
inc
pop
addl
cmp
stos
stc
mov
daa
pop
and
dec
insb
push
das
dec
cmp
mov
or
paddq
adc
ljmp
jl
adc
pop
cld
cld
push
inc
jnp
xchg
cmp
outsb
adc
push
jne
daa
xchg
push
mov
and
mov
scas
xor
flds
adc
das
or
imul
rcrl
loop
mov
or
mov
movsl
mov
mov
mov
mov
xlat
shll
aam
test
insl
push
inc
inc
pop
cmp
loopne
xchg
or
ss
xlat
fwait
outsl
or
arpl
in
cs
lds
jecxz
aas
sub
mov
fst
repnz
jmp
adc
xchg
push
cmp
push
add
sbb
mov
cwtl
xchg
pop
stc
mov
mov
xchg
pop
shl
inc
dec
pushf
out
cld
mov
les
sub
pusha
push
rcll
in
test
add
pop
xor
subb
or
push
or
pop
in
std
adc
imul
sub
xchg
mov
mov
or
push
lods
lods
xlat
pop
push
sbb
shlb
in
ror
jl
adc
push
lock
enter
push
shl
add
add
popa
mov
sbb
mov
mov
dec
adc
icebp
mov
repz
xchg
das
mov
and
pop
xor
xlat
inc
call
xchg
mov
cli
aad
xor
xchg
xchg
and
mov
in
add
sbb
cltd
in
push
adc
xor
gs
imul
int3
sahf
call
cmp
pushf
sbb
outsb
pop
pop
out
icebp
aaa
sub
hlt
cmpsl
scas
mov
mov
and
add
es
rol
xor
rcl
addr16
xchg
int3
add
mov
jbe
jmp
das
mov
xchg
enter
pushl
inc
dec
mov
mov
sub
repz
push
fs
inc
loopne
cvtpi2ps
add
pusha
adc
add
xor
adc
jle
mov
lock
mov
xor
jno
push
les
jl
xlat
popa
sahf
push
xor
xchg
dec
and
insb
mov
sub
scas
mov
ja
mov
aas
jl
cmp
out
and
push
fucomip
out
xchg
mov
sub
loop
pop
pop
cmp
outsb
sbb
push
sub
ficomps
mov
pop
sbb
cmp
fwait
push
rcll
xchg
clc
lods
add
sbb
sar
test
or
cltd
scas
sbb
xchg
cs
data16
fwait
gs
jnp
repnz
pop
addr16
cmp
jns
inc
mov
adc
xchg
lods
loop
in
add
xchg
and
in
pop
imul
mov
xor
push
sbb
nop
or
sbb
pushf
fsubs
mov
mov
fildl
repnz
dec
lods
dec
mov
and
sub
insb
pop
pushf
adc
inc
call
sahf
add
jbe
aad
arpl
fnstenv
es
loope
xchg
cmp
cld
push
lret
daa
xor
fsubrs
lods
xchg
shlb
dec
jecxz
jp
fs
jmp
push
jno
fdiv
or
aad
cmpsl
mov
sub
lds
cmp
mov
pop
adc
jmp
sub
subl
mov
sub
ret
push
test
fbstp
daa
test
loop
sbbb
mov
icebp
mov
std
inc
inc
push
cmpsb
push
popf
lcall
mov
movl
mov
cld
jbe
js
sub
xor
pop
push
and
sub
adc
cmp
xor
mov
or
pop
jmp
mov
ja
dec
or
inc
ret
mov
fildll
inc
pop
xor
movsb
sahf
cmpsb
jp
fstpl
mov
das
sub
pop
scas
sbb
pop
add
mov
mov
lret
sub
mov
dec
mov
ss
pusha
lock
mov
inc
std
nop
jl
push
imul
ss
andb
xchg
pop
std
div
xor
pop
das
leave
mov
fistps
mov
mov
out
in
sbb
push
sbb
inc
mov
popf
dec
mov
add
pop
fmull
fdivrl
test
ja
cmp
test
mov
andl
xorl
fwait
rclb
dec
ja
enter
aaa
insb
adc
sub
sti
std
inc
mov
mov
arpl
xor
loopne
mov
incb
add
inc
inc
sbb
dec
inc
fcomi
mov
cmc
je
and
xchg
pop
popa
xchg
scas
cld
outsl
cmp
push
pop
pop
pop
aas
jno
push
mov
or
pushf
mov
pop
mov
cmpsb
icebp
rol
mov
mov
mov
xor
mov
dec
dec
adc
sbb
jmp
scas
das
ret
fisubs
int3
ljmp
mov
push
push
mov
ret
mov
int
or
imul
ds
arpl
out
pop
and
cmpsb
xor
in
mov
mov
push
pop
mov
push
dec
shrb
mov
mov
repz
leave
and
push
repnz
jmp
icebp
adc
loopne
push
inc
outsb
or
adc
mov
cltd
sar
dec
cmpb
add
xor
mov
js
or
sub
inc
imul
inc
popf
lods
icebp
je
cmp
mull
mov
fstps
cmp
mov
mulb
ret
in
mov
test
inc
xchg
pop
jno
dec
test
scas
shll
loopne
in
leave
int3
mov
cltd
or
lds
mov
and
movsb
jb
jmp
jecxz
aad
dec
inc
xchg
sub
cmc
push
pop
lods
rdpmc
out
cmp
dec
fwait
lahf
mov
jg
pop
xchg
mov
xchg
mov
jb
dec
cmp
xchg
mov
cmp
sti
xchg
sub
repnz
dec
stos
or
mov
mov
jge
mov
popa
adc
ficomps
aaa
sahf
xchg
fldl
push
pop
loopne
add
es
and
adc
out
cmp
sub
stc
popa
sub
int
cmc
xchg
in
mov
push
in
jne
es
sahf
movsb
add
repnz
and
loopne
mul
in
and
or
jb
jp
imul
lea
xchg
loop
insb
inc
call
lods
fmul
cmp
sbb
pop
lret
sbb
loop
cmp
int3
push
fwait
cmp
in
xor
mov
lret
xchg
sbb
ja
xor
pop
cmc
pop
fsubs
ret
lock
dec
cmpsb
dec
lods
push
insb
sbb
sbb
add
int3
mov
shll
data16
cmp
pop
std
lahf
mov
popa
je
lea
pop
sub
cmp
stos
xlat
jl
inc
inc
fst
mov
je
ret
loope
jmp
repz
hlt
cltd
adc
inc
mov
push
sbb
in
ret
pop
dec
in
jmp
push
mov
mov
not
mov
ds
cmpsb
je
inc
gs
outsb
inc
cmp
push
xchg
inc
jbe
mov
pop
int
xor
sub
jge
out
push
test
test
sbb
xchg
push
push
in
or
push
inc
out
push
xchg
mov
testl
stos
repz
aaa
adc
lds
mov
in
rorl
mov
gs
push
or
sbb
mov
ljmp
data16
jmp
into
inc
sub
or
and
repnz
push
xchg
lods
imul
xor
lcall
push
xchg
imul
mov
int3
push
xchg
iret
xlat
test
push
adc
mov
xchg
sub
cs
mov
repz
imul
fildll
je
mov
jno
fwait
pushf
test
rolb
inc
adc
jge
in
dec
cli
imul
int3
inc
push
jbe
movsl
das
mov
scas
xchg
mov
sbb
int
sub
testl
or
je
das
adc
imul
sbb
mov
pop
in
inc
sub
mov
cmc
popf
lahf
andl
inc
mov
pop
sbb
jmp
mov
scas
dec
out
in
push
and
xlat
ret
pop
sbb
stos
cmp
xchg
addb
loop
dec
int3
cmc
loopne
jmp
cmpl
cmp
mov
loope
mov
cmp
inc
fwait
xchg
sub
scas
aaa
lods
and
scas
arpl
clc
jo
movsl
lret
scas
sahf
cld
cmp
fs
adc
mov
sub
hlt
mov
jl
loope
fwait
mov
and
sub
cli
mov
sub
sub
loopne
std
jp
stc
out
or
es
adc
push
inc
sub
jo
xlat
jge
rorl
ror
sbb
and
dec
adc
cmp
mov
lock
sbb
shll
inc
jo
pop
gs
lret
aad
push
sub
bound
mul
pusha
mov
pushf
inc
sbb
ret
gs
mov
cmp
loopne
or
sub
mov
xor
and
movsb
adc
mov
orl
sti
in
sar
jge
mov
js
sbb
bound
lcall
fcompl
adc
scas
movsl
repnz
scas
inc
es
leave
mov
scas
mov
out
sbb
push
inc
jmp
jge
lods
inc
inc
in
aaa
jg
xchg
fs
jbe
leave
jmp
sbb
les
sbb
rcll
pop
data16
outsb
cld
pop
mov
les
sti
ljmp
fstp
dec
sbb
repz
jg
sti
fidivl
cmc
dec
lds
dec
cmp
dec
adc
outsb
xchg
xchg
push
imul
xlat
pusha
scas
mov
js
add
mov
ljmp
aad
lock
adc
rcll
jo
and
and
frstor
cwtl
scas
data16
pop
mov
dec
repnz
cmpsb
in
xchg
mov
mov
adc
jl
sahf
inc
mov
in
push
and
ret
fcompl
xor
jb
rorb
sub
aas
adc
jp
lret
pop
loopne
aam
sbb
rcrb
test
sub
je
clc
inc
inc
sbb
and
repnz
jecxz
lea
stos
jb
rcl
sub
inc
lds
outsl
daa
jno
idivl
js
sbb
sbb
mov
repnz
out
adc
inc
push
mov
and
fs
mov
cmp
stos
vcvttsd2si
xchg
or
sub
arpl
push
scas
fisubs
xchg
adc
mov
shrb
jge
and
mov
bound
adcb
les
insl
jmp
fs
mov
les
or
data16
jno
mov
add
mov
out
orb
jae
loop
push
pop
insb
cmp
rcl
mov
lcall
sub
fs
push
cmp
xchg
xchg
mov
pop
sbbb
cs
js
lock
fnstsw
lret
mov
fs
push
call
xor
mov
add
lods
xchg
shlb
fstl
sub
rcrb
and
test
fs
leave
iret
aam
inc
cmp
adc
rclb
pop
jnp
adc
aas
cmp
movlps
idiv
sahf
fstl
sahf
call
je
cltd
dec
jns
xor
pop
xchg
stos
pusha
pusha
xchg
xchg
aas
mov
sub
clc
jle
stos
fstl
mov
subl
cmp
jno
ror
frstor
push
stos
ja
icebp
push
mov
cli
pop
aam
pop
lods
push
fcmovb
pop
cmp
xchg
mov
and
jnp
add
inc
call
ds
addb
xchg
sub
aas
push
sub
add
jns
xchg
shll
daa
in
psubusw
leave
mov
outsl
pop
pusha
sub
mov
cwtl
xlat
je
adc
push
lock
cmp
std
sub
jns
pop
cmp
cmp
fwait
or
sbb
jmp
xchg
aas
and
push
scas
ss
int3
mov
cmp
call
fiaddl
mov
dec
adc
aaa
push
xchg
jbe
sbb
mov
dec
call
mov
add
mov
mov
adc
lcall
icebp
lods
addr16
out
insb
daa
lcall
pop
loopne
push
mov
fisttpl
popf
decb
in
sub
enter
xchg
mov
popf
addr16
jle
push
inc
aas
data16
test
xor
push
cmpsl
cmp
sub
imulb
push
ljmp
rcrl
es
push
repz
mov
xchg
sub
cmp
fwait
in
cmp
pop
add
dec
shrb
sbb
inc
in
dec
adc
mov
jecxz
test
mov
ljmp
mov
mov
mov
adc
pop
adc
aaa
lahf
mov
pop
test
scas
loop
pushf
add
ffreep
xor
aam
push
mov
in
ja
popf
hlt
mov
cli
push
push
mov
pop
adc
idivl
and
test
iret
mov
pop
pop
pop
sub
gs
bound
sbb
fistpl
pop
ja
jns
dec
icebp
jmp
aaa
pop
inc
fs
dec
and
stc
xchg
or
shll
jnp
mov
notb
aad
jbe
int
int3
and
pop
dec
dec
sbb
pop
sbb
insl
fcmovnb
jle
cmp
adc
mov
fnsave
pop
bound
lcall
mov
sub
mov
int3
inc
stos
sbb
movsl
push
divb
dec
mov
dec
ds
jno
fidivrs
jo
mov
and
ret
or
cmc
pusha
cmpsb
mov
aam
xchg
jbe
test
subl
imul
mov
js
adc
aad
popf
in
jg
dec
push
inc
pop
xchg
popf
mov
aaa
mov
out
sub
jns
and
push
mov
lcall
jg
pusha
cmp
sub
push
mov
inc
int3
cmp
adcb
cmp
pop
popf
je
mov
add
cmp
repz
fistl
push
dec
rcrb
mov
jb
mov
loop
sti
sub
out
fidivs
inc
lahf
popf
jg
daa
stos
in
in
outsl
stc
in
jg
xchg
dec
test
lea
mov
xor
leave
mov
push
mov
add
jne
dec
cmp
orb
scas
lock
cmp
mov
aam
xchg
je
mov
fbld
in
ja
aas
and
xchg
lds
xor
std
pop
scas
dec
je
push
xchg
sub
test
lret
in
lock
push
sbb
cli
or
stos
push
and
lcall
ret
mov
sbb
mov
add
push
int
mov
lods
test
sbb
cld
mov
clc
push
push
mov
xchg
and
in
cmp
lods
xor
shrl
mov
jl
dec
je
popf
adc
les
adc
outsb
push
adc
push
or
or
xor
push
xchg
fistps
sbbb
push
jbe
ljmp
mov
pusha
imul
mov
push
mov
cwtl
insl
jns
mov
fcomps
iret
lahf
inc
jno
xchg
in
pusha
xchg
bound
xchg
test
data16
adc
xchg
lods
ljmp
pop
xchg
or
add
dec
inc
add
mov
das
add
jp
mov
mov
shrb
sub
fwait
push
xchg
pop
mov
cmp
pop
push
sub
fwait
xlat
mov
mov
pusha
mov
mov
mov
pop
lods
push
aad
aaa
scas
call
scas
cmc
push
jno
int
loop
adc
push
gs
xchg
jb
fistps
je
es
jno
cmpsb
into
icebp
fs
mov
aaa
shll
sarb
jbe
or
out
push
jle
cmc
sub
outsl
jp
fdivrs
out
jmp
pop
mov
js
sbb
shlb
xchg
xor
sub
inc
adc
shlb
cmp
adc
out
mov
dec
sbb
pushf
pop
xor
cmp
mov
jmp
mov
cmp
fstl
lods
pop
push
add
xchg
jno
and
and
icebp
xchg
sub
dec
sbb
inc
lds
frstor
jne
jg
sbb
cmp
lret
pop
pusha
jb
dec
mov
scas
fidivl
xor
sbb
shrl
sub
icebp
xchg
daa
insl
xor
jb
dec
dec
xor
mov
out
dec
aas
imul
or
jno
xor
loopne
mov
es
decb
es
test
lret
addr16
test
insl
cmpsb
and
cld
test
rclb
inc
clc
imul
xlat
jb
addr16
pop
jg
aam
jp
lretw
sbb
jno
std
mov
mov
aaa
jle
adc
arpl
dec
jp
sbb
xchg
xchg
pop
outsb
dec
pop
dec
addr16
scas
mov
cs
cmpsb
pop
insl
jecxz
test
add
xor
repz
out
jp
lahf
lea
sbb
adcb
cmp
lahf
pop
insb
shrb
push
pop
test
repz
in
xor
push
lods
repnz
push
mov
bsf
je
clc
xchg
addb
sarl
inc
repz
adc
push
cs
pop
addb
popa
mov
jns
jle
jmp
addb
js
insl
and
jbe
lea
leave
xchg
xchg
scas
into
imul
xorl
fstpt
cltd
add
and
pushw
mov
cmpsl
sub
adc
leave
mov
pop
inc
subl
xor
lret
mov
repnz
xchg
rcl
fcmovnu
repnz
pop
cmpsl
add
out
cmpsb
mov
js
test
dec
push
std
and
jo
fbstp
sub
icebp
xor
std
xchg
das
add
lods
pushf
shrl
outsl
xor
pop
fcoms
je
mov
fidivl
iret
into
sub
push
xchg
inc
dec
test
aaa
cmp
inc
pop
popa
addr16
nop
dec
nopl
xchg
cmp
scas
scas
dec
inc
fbld
scas
mov
sbb
sti
js
lret
jbe
inc
aas
sub
inc
loope
mov
xchg
or
mov
sti
jge
repnz
in
dec
pop
sahf
daa
pop
and
sub
mov
mov
dec
jecxz
dec
sbb
sbb
inc
scas
jns
cmp
stos
mov
pushf
add
in
or
jb
fsub
testl
mov
add
loop
mov
popf
sbb
lods
js
sahf
add
sub
cs
mov
lds
outsl
loop
jmp
test
adc
push
and
shll
lret
outsl
fwait
jne
sbb
xchg
lret
add
out
pop
shlb
dec
idiv
xchg
mov
fcom
pop
mov
adc
inc
mov
roll
jmp
insl
lock
sbb
imul
jnp
ret
adc
ss
or
imul
int3
xor
aaa
cwtl
pop
push
jle
jg
pop
mov
sbb
push
repz
das
bound
xor
inc
xor
pop
rorb
fstp
das
pop
aad
pop
int3
fcmovnbe
mov
pop
push
movsl
stc
sbb
and
cltd
hlt
clc
xchg
je
idivb
xchg
test
push
iret
dec
push
sub
out
add
pop
adc
fstpl
ffreep
stos
into
push
incl
cld
cmpsl
inc
call
pop
mov
sbb
xchg
leave
cmp
lock
daa
jg
out
stc
xsha1
cmpsb
or
aas
fnstsw
popa
clc
and
fiadds
sahf
icebp
mov
mov
sbb
jmp
dec
and
push
iret
jle
data16
iret
jg
sub
imul
in
mov
movsb
js
data16
addr16
jecxz
in
inc
ja
adc
out
lret
inc
fs
jae
insb
add
lods
dec
jnp
lea
ror
xor
shrb
aam
pusha
jp
mov
clc
mov
jbe
insl
ret
xchg
hlt
mov
dec
xchg
xor
pop
mov
lcall
fbld
mov
faddp
addr16
mov
sahf
lahf
and
lods
push
repnz
jne
xor
cmp
cmpb
dec
movsl
int3
arpl
out
sbb
cmpsl
jns
sub
sbb
or
aad
stos
push
xor
sub
push
imul
or
fcompl
xor
adc
out
pop
mov
and
pop
pusha
outsb
mov
xchg
cmp
xchg
inc
xchg
sbb
or
sub
xchg
sahf
or
mov
push
push
add
jg
leave
mov
shll
cli
mov
xchg
test
adc
insb
in
div
jno,pn
push
pop
mov
add
int
lret
cmpb
inc
lcall
dec
pop
adc
xchg
or
mov
sub
push
fs
adc
sub
testb
sub
mov
out
push
call
mov
inc
mov
mov
pop
sub
shrl
pop
cld
add
inc
xor
popf
push
aad
cmc
push
lock
jb
in
pusha
mov
mov
lahf
cmp
cmp
rolb
test
cmp
pop
pop
xchg
stos
lods
mov
or
daa
mov
mov
sub
and
leave
arpl
hlt
add
adc
shrb
or
jo
sarl
push
xchg
xchg
cmp
jns
dec
pop
mov
mov
aad
loope
adc
shll
xchg
ss
push
cmp
je
ret
aaa
add
cmp
cmp
out
or
push
fidivrs
adc
cltd
scas
xor
out
lret
mov
in
and
xchg
rclb
add
inc
xor
mov
adc
cmp
pop
cltd
xchg
inc
sub
insl
mov
push
and
mov
daa
cmpsb
jne
stc
xor
mov
or
imul
mov
dec
ds
cmp
cmp
push
xchg
movsl
arpl
pop
cli
decl
popf
enter
imul
enter
in
push
in
mov
popf
adc
cli
push
xor
adc
jae
lea
pop
inc
loopne
icebp
loope
inc
test
outsb
sar
es
aad
mov
leave
lar
out
jns
aas
pushf
lods
xchg
xor
aaa
xor
add
mov
pop
dec
mov
movsl
repnz
sbb
rclb
stc
fsubr
xchg
add
jle
add
xor
adc
adc
nop
adc
and
dec
inc
jle
mov
bound
outsl
mov
pop
mov
push
mov
mov
add
ja
mov
sbb
ja
sub
sub
lcall
mov
push
jmp
das
xor
gs
les
mov
repnz
xlat
lret
pop
push
inc
xor
cld
jo
in
xor
cmp
cmp
insl
pop
cmp
jl
adc
jae
fistpl
fld
jle
pop
push
push
pop
push
and
xchg
das
ds
pop
and
jb
lcall
data16
les
imulb
xor
xchg
jmp
inc
dec
insl
imul
dec
mov
call
inc
filds
cltd
xchg
nop
popa
xlat
mov
adc
push
xchg
lock
pop
lea
shll
sarl
push
jns
aas
cmp
jge
adcl
fimuls
cmp
ret
dec
mov
pop
adc
xchg
lods
jb
enter
or
sub
sub
fsubr
add
mov
pop
xor
push
mov
in
insl
sbb
lock
or
cmp
loopne
or
cmpl
lds
out
je
clc
and
stos
js
loope
sub
ja
adc
ret
ret
jns
jecxz
inc
dec
lods
mov
frstor
jae
cli
sub
icebp
add
xorl
cmpsb
or
lea
mov
pop
xchg
cmpb
movsb
shl
in
out
into
scas
outsb
jp
or
cmp
and
or
lret
sbb
out
or
cmp
rorl
push
les
clc
push
lea
lea
filds
sbb
jg
jmp
das
jb
int3
push
pop
sbb
push
push
in
lret
lcall
lds
dec
insl
add
movl
push
dec
pop
imul
push
xlat
mov
je
stos
pop
jbe
mov
mov
xchg
push
and
mov
sbb
xor
mov
roll
sbb
jo
jns
lcall
ja
sub
shrl
pop
and
repz
test
and
call
xchg
in
jnp
sub
aad
std
mov
mov
repz
jne
dec
outsb
push
mov
pop
xor
pcmpgtw
mov
mov
sbb
loopne
push
xchg
test
push
scas
xlat
hlt
mov
push
sub
stos
std
sbb
xchg
cmpsl
mov
cmp
inc
outsb
cmp
mov
xor
lods
clc
pop
addb
push
fwait
push
adcb
loop
jno
ljmp
push
movsl
das
push
movsb
adc
test
test
adc
int3
jg
test
jns
scas
mov
dec
adc
push
sbb
push
rcrb
cs
stc
mul
cmp
fisubrs
or
push
cwtl
inc
dec
nop
dec
lret
jecxz
les
scas
out
xlat
jne
mov
sbb
pop
mov
sar
in
inc
lods
aam
jne
xchg
xchg
fsts
inc
push
mov
rcrl
dec
pop
sbb
inc
pushf
mov
mov
cmp
outsb
jp
js
jl
leave
pop
popa
mov
mov
insl
push
cmovs
adc
push
mov
scas
imul
xchg
and
mov
jne
mov
cli
adc
and
scas
cltd
mov
dec
jle
push
pop
cmc
dec
inc
xchg
jo
mov
js
cmp
insl
dec
aam
les
out
jecxz
push
ret
mov
divb
inc
add
loopne,pt
std
addr16
push
lods
out
inc
hlt
fisttpll
repz
push
push
nop
lock
int3
rcll
push
xor
xor
out
inc
pop
and
je
push
fldcw
sbb
jbe
popf
xor
inc
in
push
xchg
xor
std
fisubl
lahf
mov
dec
ficoms
shl
fs
adcl
aas
push
lea
mov
add
movsw
outsb
movsb
sti
cmp
movsb
mov
mov
xchg
push
rcll
xchg
dec
stos
and
cmp
fdivl
sahf
mov
or
xchg
push
sub
push
icebp
shll
add
jne
mov
cmpb
adc
call
mov
xor
and
aam
push
scas
mov
fsubp
ds
les
insl
jmp
hlt
pop
xchg
or
and
mov
push
and
pop
ds
loop
in
or
adc
or
scas
and
outsl
sbb
dec
adc
test
lcall
mov
ds
sahf
test
sarl
imul
subl
mov
out
mov
pop
out
or
pop
sub
in
es
pop
sbb
pop
mov
inc
lods
fcomi
jge
push
xor
cmp
cmp
lret
or
xlat
gs
int
cmc
mov
in
mov
push
jns
cwtl
not
cld
aas
mov
dec
rolb
pop
pop
leave
jb
in
mov
push
sbbl
pop
add
stc
pop
stos
adc
or
pop
test
xchg
jae
and
pushl
mov
stc
push
je
jle
sub
fcmovu
cmc
mov
out
hlt
fildll
in
aad
les
sbb
stc
cmp
mov
push
sbb
inc
inc
sub
stc
push
sub
jno
mov
sbb
or
loope
add
pop
stos
ret
or
lds
fisubs
xchg
sbb
cmp
push
adc
cmc
scas
pop
mov
sub
and
sub
pop
roll
into
cmp
xor
cmp
pop
inc
mov
inc
outsb
lcall
cld
cmp
mov
sbb
or
cmpb
xchg
and
push
mov
xchg
push
mov
sub
add
fimuls
jg
xchg
cmp
sbb
mov
mov
imul
or
rclb
sti
xlat
add
xor
or
push
call
inc
andl
dec
mov
rcr
cmc
sub
push
mov
sub
inc
push
mov
bound
outsl
pop
call
pop
clc
out
in
aas
pop
and
lcall
sub
out
dec
cmc
or
mull
cvtps2pi
push
jecxz
lods
insb
push
popl
in
cli
adc
push
outsb
push
cli
dec
inc
mov
or
mov
cltd
idivl
cld
dec
mov
push
pop
mov
jge
add
mov
bound
mov
mov
stos
hlt
adc
stos
and
cmp
in
inc
rolb
cmp
popa
jmp
adc
jo
daa
jae
or
negb
xchg
add
ret
outsb
js
cmp
dec
clc
ljmp
cmp
push
pop
mov
adc
into
and
fsubrs
add
lret
movsl
mov
outsl
mov
arpl
lea
mov
in
in
add
dec
mov
xchg
sahf
or
lea
push
ret
dec
notl
pop
lret
daa
add
mov
or
leave
push
and
cmp
xor
js
dec
mov
pop
jbe
pop
or
dec
outsb
jne
xchg
add
mov
lods
lock
xor
cmpsl
and
pop
test
je
mov
pop
push
adc
mov
dec
stc
jl
mov
fisubs
cltd
shr
testl
pop
and
ds
es
sub
jnp
add
cmp
rorb
inc
cmpsb
mov
push
or
push
fidivl
jge
adc
mov
repz
xor
inc
and
jne
and
imul
test
leave
subl
or
xchg
andl
mov
and
repnz
clc
nop
cltd
in
pop
mov
xorl
stc
xor
mov
icebp
popf
cmp
jp
jmp
and
and
test
xchg
sbb
loope
cltd
lods
repz
dec
cmpsl
cmc
loopne
cmp
pop
aad
mov
mov
ljmp
dec
testb
jae
fcomi
sbb
int3
inc
pop
fsts
jnp
pop
call
inc
lds
imul
push
dec
sahf
fmull
mov
push
in
jl
fcmovnbe
push
pop
hlt
mov
adc
into
push
dec
xor
imul
dec
pop
das
adc
adc
jg
cli
dec
jnp
lods
jle
sbb
mov
mov
adc
jmp
jae
popf
pop
out
cmc
fisubs
sub
mov
push
dec
arpl
xchg
xor
cli
jge
mov
mov
adc
mov
test
int3
adc
pushf
push
call
mov
pop
and
mov
sub
sub
jp
setge
inc
xchg
push
addr16
cwtl
adc
je
mov
lods
leave
popf
aaa
in
sbb
mov
ljmp
pusha
lahf
lcall
or
nop
leave
add
xchg
movsl
popf
pop
inc
int3
cld
data16
in
psraw
dec
and
int
sbb
ljmp
and
bound
push
lcall
mov
js
dec
push
ljmp
in
test
aas
inc
sar
inc
daa
dec
cmp
rcrl
mov
inc
ja
lea
inc
roll
jno
fwait
mov
xor
pop
icebp
js
dec
cmp
cs
push
push
popa
pop
or
popa
loopne
adc
fstps
lods
cmpsb
or
mov
int3
loopne
cmp
inc
mov
mov
ds
inc
cltd
pushf
rep
mov
nop
or
ret
loope
mov
and
cs
nop
adc
jae
xchg
adc
outsl
push
push
mov
test
cwtl
dec
scas
inc
mov
adc
cli
push
jmp
mov
call
in
lock
add
enter
insb
shlb
aaa
mov
lock
lds
orl
sbb
pop
stos
mov
sub
xor
xchg
fisubs
daa
js
je
loopne
mov
jae
in
das
cmpb
scas
and
lods
add
mov
xchg
jecxz
lret
ljmp
lcall
cs
je
scas
xlat
jae
add
arpl
out
inc
outsb
adcb
nop
bound
notl
push
pusha
xor
inc
in
adc
cltd
lods
icebp
mov
push
loopne
pop
out
inc
push
pop
xchg
fiadds
cmc
fs
movsl
fldl
mov
fs
mov
jle
repnz
and
loop
imulb
add
clc
idivl
fwait
pop
sbb
scas
int3
and
rolb
inc
cmpsb
mov
in
mov
xchg
lods
mov
xor
mov
jl
push
jmp
int
inc
pop
push
jnp
xchg
or
jp
push
cmp
dec
aam
cltd
fwait
ja
mov
test
je
outsb
aas
out
push
or
xor
cmpsb
push
pusha
add
and
jp
pop
ss
mov
popl
xchg
int3
jb
and
mov
inc
insb
pop
rcr
es
sub
ret
mov
lret
and
xor
sub
in
scas
les
cmp
inc
repnz
mov
or
cmp
and
xor
shlb
adc
out
xchg
pop
xchg
lahf
mov
sbb
scas
outsl
outsl
cmpsl
call
mov
xchg
mov
dec
jbe
hlt
push
stc
bound
jnp
pop
imul
in
jl
mov
sbb
sti
and
xchg
jecxz
iret
jg
lds
xchg
leave
fwait
xor
inc
loope
cmp
lcall
rcrb
jmp
mov
scas
cltd
out
bound
mov
sbb
push
mov
lock
fld1
or
divb
sti
mov
xchg
or
vpsrlw
or
shll
pop
dec
cld
bound
pop
cmp
push
jo
jno
adc
into
pop
inc
repnz
push
fadds
hlt
push
xchg
sub
gs
mov
daa
daa
mov
sub
outsb
add
cld
inc
data16
imul
imul
xchg
xor
push
out
das
repz
fisttpl
test
bnd
shrl
sbb
adc
cmc
mov
sbb
and
dec
dec
nop
testb
adc
pop
loope
xchg
mov
sub
push
xor
daa
and
sbb
pop
xchg
mov
xchg
repz
xchg
inc
scas
mov
lret
int
rclb
lds
mov
add
and
lsl
out
jge
and
push
jae
mov
movsb
int
lods
pop
and
xchg
sub
out
cmp
cmp
pop
add
inc
mov
ljmp
push
jmp
outsl
xchg
mov
out
test
or
lcall
xor
cld
mov
rcl
cmp
mov
xchg
inc
subb
mov
rdmsr
lahf
push
jns
ret
push
mov
dec
sbb
pop
jl
mov
into
shrl
fscale
xchg
jb
inc
cmpsl
cli
xor
or
jg
mov
jnp
and
sub
loop
push
lret
ja
xchg
pop
dec
inc
jae
in
adc
xor
out
hlt
pop
sbb
pop
fnstsw
rcl
add
rcrl
pop
pop
movsl
movsb
out
into
push
neg
inc
subb
xor
fs
data16
popf
push
arpl
or
adc
dec
jns
fcmovb
lahf
mov
push
loop
xlat
jno
mov
pop
fcmovnu
add
aas
adc
test
aaa
clc
inc
cmc
push
mov
mov
mov
push
add
inc
inc
not
std
push
sbb
lds
call
jmp
jl
addl
jae
xchg
cld
test
pop
test
enter
xor
out
add
stc
aaa
les
jb
inc
insb
in
fwait
jle
jp
push
sbb
insb
scas
lcall
mov
jns
mov
pop
test
in
or
cli
ds
pop
call
inc
pusha
in
ja
xchg
mov
cli
cvtps2pi
push
lcall
xlat
or
addl
mov
adc
and
pop
xchg
icebp
lcall
inc
cltd
popf
ljmp
xor
filds
addl
stc
lcall
imul
jl
xlat
iret
pop
mov
ja
and
movsb
insb
add
lret
pop
sbb
enter
push
push
outsl
mov
jo
cmp
ret
cmp
dec
xor
int3
sbbb
jl
jno
cmp
arpl
pusha
fwait
test
rcrb
xor
xor
shll
pop
cmp
aam
or
lcall
lcall
and
adc
jne
xor
lahf
jp
ss
jae
sbb
in
into
fsubrl
inc
or
add
xlat
push
andl
lcall
mov
js
cmp
fmull
mov
data16
imul
pop
cmp
int
dec
insb
inc
sub
in
cltd
push
mov
scas
push
or
cmc
imul
dec
jae
cmc
aam
add
fcomps
mov
pop
repnz
imul
int3
fwait
or
sbb
mov
lods
sbb
xchg
lahf
dec
dec
repnz
or
adc
mov
subl
mov
daa
mov
in
ja
std
outsb
out
in
mov
mov
aaa
or
stos
or
pop
fwait
into
cmp
std
pop
dec
js
push
mov
pop
dec
lds
sbb
sahf
int
xor
lahf
es
enter
mov
xor
or
shl
cld
push
dec
or
shl
pop
test
outsb
movhps
pop
shl
xor
daa
inc
aaa
test
lret
cmp
imul
addr16
mov
inc
adc
fistpl
xor
or
insb
imul
in
xchg
xor
mov
cltd
mov
cmp
icebp
test
jecxz
mov
dec
jns,pn
xor
pop
arpl
or
les
push
insb
or
dec
and
adc
cmc
clc
ret
and
add
mov
xor
std
in
pop
jo
mov
icebp
cmp
push
arpl
sbb
fisubrl
jb
aaa
push
inc
jno
jmp
cmpsl
mov
mov
jmp
fsubrl
out
sbb
cmp
rolb
xor
jg
push
jo
scas
aaa
test
clc
xor
dec
stos
xchg
mov
outsb
lods
cli
lock
xor
lahf
int
nop
repnz
es
iret
aaa
pop
xchg
loopne
push
jecxz
aad
movsl
inc
mov
push
push
xor
insl
sti
cmp
enter
sbb
mov
mov
fwait
mov
mov
jns
xchg
test
icebp
jo
aad
or
push
and
scas
sub
add
rol
pop
cmpsb
inc
ds
xchg
scas
add
xor
dec
in
sahf
test
test
jae
rolb
loop
push
popa
xor
inc
mov
and
enter
hlt
and
out
cmp
push
xchg
and
jae
mov
int
dec
mov
ret
xchg
cmp
imul
lea
outsl
pushf
push
ja
push
inc
fucomip
fistpl
out
mov
fstpt
mov
adc
push
imul
sbb
scas
insl
sub
sub
imul
dec
cmp
add
cmp
in
je
popa
pop
xor
dec
call
cmp
stos
imul
jns
js
shrl
out
pop
jge
lods
cmp
in
jmp
push
dec
call
pop
adc
sti
es
add
mov
into
cwtl
stos
clc
fwait
jmp
ss
incl
clc
ljmp
and
or
jb
pop
imul
jge
andb
inc
pop
xor
aam
mov
xor
pop
daa
out
mov
push
inc
jp
fimuls
sbb
or
pop
xor
mov
or
test
icebp
pop
mov
adc
fwait
hlt
or
xor
mov
and
cs
rcll
dec
push
mov
push
push
mov
push
xor
je
xchg
cwtl
sbb
jne
jns
xor
pop
js
xchg
mov
das
imul
testb
jno
or
add
ss
aad
add
and
jge
mov
jp
mov
hlt
sbb
bound
sub
sub
and
fs
adc
test
dec
jne
cli
and
lcall
add
incb
outsl
cmpsw
es
mov
mov
scas
fstps
or
fnsave
movsl
mov
fildl
xadd
fneni(8087
cs
lret
fldt
scas
in
cmp
xor
add
js
mov
xchg
push
test
faddp
xchg
sbb
mov
mov
mov
in
jmp
mov
imul
cmp
call
out
push
mov
mov
in
sub
dec
enter
dec
rorb
int3
push
add
into
pusha
cmpb
push
sbb
rcll
fisubrl
call
lods
xor
psraw
in
sbb
out
ljmp
inc
push
xor
sub
lods
cmpsl
hlt
imul
mov
sub
xchg
mov
mov
sub
sti
push
xchg
icebp
shrb
mov
xchg
add
cmp
dec
xchg
push
jns
jp
or
cld
imulb
test
jns
dec
lret
sub
stos
and
sub
mov
js
inc
adc
int
inc
rolb
and
leave
or
les
mov
rcll
addr16
lret
stc
mov
and
sub
imulb
add
cwtl
mov
out
cs
sbb
and
jmp
xlat
je
mov
add
es
adc
sbb
mov
jp
in
stos
adc
xchg
and
sbb
movsb
and
ljmp
sbbb
sti
fimuls
cs
xor
js
leave
xlat
mov
dec
sti
imul
jmp
mov
push
mov
mov
jbe
jno
jg
sbb
mov
cmpsl
and
aad
movsl
into
inc
add
push
pop
mov
inc
test
or
push
fs
in
xchg
leave
out
mov
adc
xlat
cmp
push
dec
nop
sub
cmpsb
lcall
inc
inc
push
mov
ja
xchg
mov
sub
xor
icebp
cmc
xchg
xor
ds
add
jns
outsb
push
lea
std
mov
pop
test
shrb
test
divl
dec
jns
xor
scas
xor
clc
push
loop
cmpsl
pop
aam
dec
mov
stos
cmp
sbb
xor
or
sub
xlat
sarl
jnp
lods
into
jge
sti
leave
pop
push
jmp
mov
xchg
rclb
and
addr16
mov
bnd
jge
movsl
dec
jbe
or
je
jg
mov
inc
xchg
sub
push
inc
sub
nop
xchg
sub
lahf
into
pop
sub
ja
scas
sub
ljmp
dec
lahf
jae
shlb
outsl
xor
mov
cmp
mov
add
inc
mov
rclb
xchg
mov
scas
xor
imul
inc
cmp
shl
pop
das
dec
jmp
jnp
mov
pop
lcall
leave
outsl
nop
dec
dec
xchg
push
jmp
cmpsl
lea
fs
xor
adc
ds
mov
dec
leave
and
std
sbb
add
cmp
test
pushl
aad
aas
sub
push
adc
jno
push
mov
push
pushf
mov
js
xorb
shlb
cmp
cmp
jb
stc
jp
loopne
lcall
push
lret
lods
imul
sbb
jns
sbb
or
mov
jae
mulb
scas
lret
fwait
jle
das
fisubrs
mov
adc
movsb
sub
mov
cmp
fistl
push
fisttpll
adcl
and
xchg
out
outsb
adc
cmp
rcl
adc
into
push
and
fsubp
mov
jbe
sub
cmp
cmc
loop
inc
adc
mov
fdivrl
loopne
push
rorl
dec
test
dec
push
jnp
add
bswap
jnp
insb
gs
mov
inc
aas
nop
jecxz
xor
push
mov
push
clc
jo
ds
mov
push
mov
adc
loope
jno
sub
cmp
mov
pop
mov
and
inc
mov
pop
outsl
pop
leave
fildll
adcl
push
and
xchg
jo
dec
out
fadds
and
bound
adc
pop
pop
movsb
pop
inc
movsb
push
pop
stos
mov
ret
push
hlt
cmp
imul
loope
cmc
int
pop
addb
rclb
das
or
push
mov
loop
das
fiaddl
repz
sbb
sub
inc
movsl
mov
xchg
mov
xchg
jno
add
jge
add
pop
xor
nop
aam
pusha
jbe
inc
push
add
xchg
pop
xchg
mov
xor
mul
mov
pop
adc
push
adc
test
mov
nop
andb
je
loopne
xchg
xor
movups
dec
mov
inc
cmpsb
mov
outsl
mov
sbb
dec
es
vmread
popf
sbb
or
loop
push
jge
repnz
in
sbb
out
or
testl
adc
mov
mov
sarb
sbb
mov
xchg
cmpsb
cmp
cmp
shr
es
mov
dec
push
jl
pop
xlat
inc
fdivs
cld
in
out
and
aaa
sub
bound
push
xacquire
loop
insl
and
out
test
push
jl
out
outsl
inc
mov
rol
push
mov
psadbw
sub
pop
mov
push
lcall
jmp
push
in
pop
cli
xor
inc
mov
and
lret
dec
fstpt
or
jle
xchg
fsubrl
cmpsl
sbb
dec
sbb
in
cwtl
scas
pop
xchg
mov
xchg
xor
dec
push
and
enter
jl
enter
stc
push
das
cmp
pop
jae
pop
inc
imul
cld
mov
jo
xchg
cltd
and
and
sub
mov
icebp
xchg
ja
xchg
inc
jns
inc
nop
into
jmp
and
out
or
jb
pop
push
mov
push
bound
or
mov
pop
jno
pop
aam
pop
mov
jmp
in
xchg
cs
jno
repnz
shll
pop
dec
sbb
sbb
mov
push
popa
or
ljmp
xchg
push
mov
or
adc
adc
ja
pop
xchg
cmpsl
sbb
leave
loop
sbbb
jecxz
inc
xchg
inc
stos
add
mov
pusha
mov
out
jp
out
sub
lcall
sub
xchg
mov
add
xor
cmp
cmp
mov
in
loop
mov
je
stc
fcoml
xchg
mov
push
shrl
movsl
sub
mov
push
inc
dec
push
xchg
inc
outsb
int
inc
mov
fs
mov
lcall
mov
sub
push
push
pop
mov
sarl
aaa
push
jge
sub
mov
jge
mov
divb
bndstx
jge
lea
push
push
addl
inc
mov
xchg
int3
in
test
out
add
pop
in
sub
dec
cmp
es
into
icebp
outsb
loop
fadds
sti
inc
dec
inc
pop
shrb
add
push
hlt
pop
test
jge
les
xchg
mov
or
sbb
and
jge
mov
push
xchg
dec
stc
add
pushf
pop
xchg
sbb
lcall
mov
push
push
scas
cmp
jnp
pop
ja
popa
int3
adc
bswap
push
xchg
enter
fcom
subb
sbb
xchg
fdivl
mov
adc
pop
push
add
add
ror
add
cmp
mov
dec
iret
sub
cli
subb
jae
icebp
adc
xchg
aas
fcomps
adc
data16
ds
sar
mov
ss
push
fwait
jmp
loopne
xor
mov
pop
cmp
fucomi
cmp
repz
jmp
pmulhuw
fiadds
mov
mov
cltd
int3
and
testl
call
test
gs
dec
lds
pop
js
and
xchg
inc
cli
and
fcmovne
lds
movsl
cmp
or
or
sbb
out
adc
inc
add
movsl
and
inc
adc
mov
movsl
pusha
movsl
push
xchg
daa
addb
mov
push
mov
loop
lahf
or
cmp
xlat
pop
mov
cs
aad
aaa
xchg
pop
fsubr
mov
fildl
xchg
es
xor
fcmove
push
mov
cmc
scas
popf
push
mov
mov
fndisi(8087
ss
repnz
lods
jno
int3
xchg
mov
pop
pop
sub
outsb
add
fs
or
ljmp
mov
sub
or
mov
sub
ret
inc
rsm
lods
pop
mov
decb
out
push
push
or
leave
sub
push
xor
test
movsb
pop
dec
ret
jmp
fdivs
dec
rcl
loopne
fdivl
mov
insb
repnz
push
sbb
add
clc
pop
and
push
pop
mov
sub
add
dec
je
sub
outsl
imull
pop
je
test
fisubs
pop
push
jo
nop
jae
cmp
out
push
inc
dec
pop
ficoms
ja
repz
mov
cmpsb
inc
jno
jno
insb
and
sub
cmc
mov
out
mov
ljmp
pop
movl
ja
jno
pop
cmc
repz
std
insl
adc
in
test
add
dec
cmp
lods
xchg
mov
cld
push
jne
cld
sub
test
lods
mov
loop
xchg
pop
push
cmc
hlt
pop
ret
inc
mull
sbb
pop
cli
out
enter
call
iret
stc
mov
pop
in
popl
test
or
xchg
xchg
sbb
xchg
stc
loope
sbb
lahf
cmpsb
and
sbb
jle
add
jge
mov
loopne
jns
ficompl
jmp
sbb
push
daa
fidivrl
out
test
adc
aam
or
out
push
or
pop
fldcw
or
sti
sbb
das
cmp
xor
cmpsl
inc
mov
jns
mov
cmp
push
test
adc
adc
inc
cli
stc
in
push
into
and
fnsave
sarb
or
add
leave
andb
cmp
mov
mov
add
adc
nop
pop
xchg
or
sub
in
jno
lods
in
sbb
push
adc
insl
lods
add
cwtl
mov
lea
sub
add
jne
lahf
mov
hlt
and
in
or
dec
in
mov
xchg
adc
add
pop
adc
push
mov
mov
jae
adc
loopne
sub
cwtl
mov
mov
or
inc
cmp
xor
xor
xorl
loope
aad
shlb
ljmp
arpl
outsb
mov
lret
pusha
in
aam
inc
inc
inc
xor
xchg
popa
ds
adc
pop
mov
fdivrl
mov
int
cmp
loopne
xor
sub
cwtl
jmp
mov
sub
fsubs
ja
in
jns
inc
repz
lret
in
cmpsl
bound
notb
xchg
rolb
imul
push
cmpb
in
mov
lock
int3
ja
popf
jmp
mov
out
mov
lcall
popa
inc
lahf
cmp
xchg
mov
cmpsl
push
lcall
sbb
fcoms
popa
or
add
and
cmp
insl
push
aam
fs
xchg
or
dec
mov
call
out
rcrb
push
xchg
jae
in
add
lods
ret
test
leave
pop
and
jae
mov
sbb
jle
xchg
jmp
ficomps
rcll
mov
mov
jnp
adc
pusha
jns
pop
mov
xchg
mov
mov
ret
lds
mov
xor
int3
dec
add
push
mov
cmp
sub
pop
jne
jo
out
push
or
xchg
jo
fwait
aam
popa
dec
inc
mov
cld
fsubrp
fdivl
lock
or
imul
loope
in
push
fldt
data16
xchg
hlt
dec
or
lahf
add
icebp
test
and
decb
xor
negl
pop
sti
sbb
fnstcw
repz
outsb
dec
jnp
test
cmp
adc
fs
xorb
xor
cwtl
loopne
out
sbb
push
lcall
jg
test
fnstenv
jecxz
mov
imul
and
iret
lahf
stc
and
fwait
jns
stos
adc
mov
dec
and
pop
test
pop
jae
sub
mov
push
push
cmp
test
arpl
in
pop
pop
sti
inc
mov
xor
lods
push
imul
ss
xor
icebp
lahf
jge
rcl
les
jge
jne
inc
in
inc
test
nop
adc
jge
sub
jnp
mov
ret
xor
jle
loope
adc
repz
addb
orl
inc
loopne
xor
or
lahf
jmp
xchg
in
lods
push
pop
inc
mov
add
pop
int3
filds
in
scas
in
or
mov
sarb
lods
push
rcrl
jmp
adc
cmp
sarl
mov
insl
mov
mov
sub
ljmp
mov
inc
mov
pop
inc
lods
ljmp
add
roll
push
mov
cli
lea
sbb
add
and
out
popf
xchg
mov
das
lahf
aas
cmp
xor
icebp
jb
popf
jg
in
inc
mov
and
lods
jno
in
stos
inc
push
lea
mov
pop
jg
mov
cwtl
jnp
inc
push
pop
pop
dec
aad
fisubs
sub
mov
sbb
sti
les
test
das
xchg
sub
ljmp
inc
push
and
fwait
jg
sub
add
mov
movsl
push
mov
pop
test
pop
adc
stos
jge
mov
push
pop
pop
xchg
sti
and
jnp
push
dec
or
ret
push
jg
stc
or
sub
pushl
inc
dec
das
daa
adc
sub
lret
loope
lods
mov
ret
xchg
shlb
inc
add
pop
movsb
pop
in
in
adc
aam
lods
sahf
andb
hlt
mov
or
xchg
mov
adc
mov
scas
jno
enter
aad
dec
lods
mov
push
mov
mov
stos
xchg
jmp
call
sub
aas
pop
int
sbb
or
stos
iret
cmp
jge
mov
mov
push
fildll
xchg
jns
lods
and
insb
divb
xchg
cmp
aam
dec
fdivrl
lcall
loope
jo
pop
addr16
xor
pop
pop
mov
dec
and
call
loop
dec
popf
mov
cli
xor
xchg
ljmp
lods
insb
cmpsb
stc
pop
mov
or
push
cmp
arpl
and
cmpsb
ds
inc
dec
or
push
cmpsb
in
push
cmp
mov
push
and
inc
mov
cmp
test
mov
dec
pushf
nop
jmp
mov
stos
jle
sbb
call
mov
and
pop
imul
aas
outsl
push
popf
push
cli
mov
vcvtsd2si
test
fadds
or
lret
out
inc
xchg
sub
mov
and
dec
push
cmpsb
sbb
int3
out
cmp
or
xor
jns
push
pop
inc
lock
insb
adc
dec
in
aaa
adc
cmpsl
out
ret
adcl
mov
aad
into
mov
sahf
add
xchg
push
cmp
sbb
jno
jo
cmp
movsl
push
out
mov
shl
lret
inc
pop
push
adcl
push
push
sbb
add
pushf
xchg
nop
fwait
lock
cmpsl
inc
xor
and
xchg
in
lret
cli
jae
aas
aam
xor
xchg
add
inc
jmp
cli
insb
add
sbb
test
mov
aad
xchg
lcall
and
push
aas
push
das
stc
adc
mov
push
sub
inc
mov
stos
arpl
inc
std
jecxz
test
cs
cld
or
sbb
sbb
xor
ret
test
xchg
mov
rorl
xlat
mov
scas
mov
popa
mov
jnp
sahf
ret
push
into
cmp
dec
daa
test
jge
dec
jns
xchg
jne
inc
fsubp
popf
gs
add
sbb
pop
cwtl
jae
ret
mov
aam
push
inc
int3
pop
inc
cmp
push
insb
dec
xchg
scas
mov
int3
mov
and
cmpl
dec
xchg
adc
enter
je
ret
push
cli
mov
xchg
push
cmp
sbb
test
aad
inc
fadds
in
or
add
dec
out
cmp
and
and
pop
lds
cmpsl
xchg
ljmp
push
std
leave
clc
mov
std
lcall
rorb
js
aaa
push
lods
xchg
push
insl
pop
cmp
inc
hlt
add
add
insl
scas
xchg
push
sub
sbb
cld
pushl
loopne
sar
mov
sub
jle
punpcklbw
in
aam
stos
mov
cmp
pushf
test
int3
jne
sub
mov
or
shlb
cwtl
stos
mov
mov
cmp
loopne
pop
fsubrs
jo
mov
adc
push
out
inc
and
inc
imul
pusha
shll
cld
xchg
pusha
jg
ljmp
xchg
add
adc
mov
sbb
negl
loopne
nop
popa
fs
test
sbb
loop
sbb
xchg
sbb
neg
dec
addb
xchg
outsb
push
push
inc
push
idiv
adc
movsb
xlat
mov
shll
jmp
dec
sar
std
push
xor
ljmp
inc
push
adc
sahf
outsl
add
cmp
lods
pop
outsb
divl
outsb
dec
loopne
inc
out
jns
test
ret
xorl
adc
sub
subb
std
clc
inc
pop
push
shrb
enter
jo
or
imul
push
lods
lds
loop
jg
cltd
cltd
cld
or
adc
push
bswap
push
mov
inc
pop
or
out
or
jb
ret
push
dec
outsl
jmp
dec
mov
test
outsl
xor
enter
in
test
mov
fwait
mov
add
adc
cwtl
inc
andb
repnz
xchg
mov
adc
sbb
mov
push
and
cltd
xor
outsb
inc
rcl
and
add
and
js
push
pop
xchg
les
push
in
outsl
call
xor
jl
pop
mov
add
mov
shll
outsb
xchg
jnp
cs
icebp
or
jno
xor
jae
and
test
es
je
imul
adcl
inc
add
cmp
xchg
jg
test
in
pop
inc
rorb
ja
inc
xor
int
mov
mov
xchg
inc
cmp
int3
test
mov
adc
aad
mov
sar
jbe
out
and
pop
cltd
jb
or
aad
cmpsl
push
xor
mov
cld
adc
mov
loop
jae
cs
and
ja
int3
insl
mov
test
rcrl
add
lods
adc
lret
xchg
test
nop
push
adc
in
lret
xor
scas
aaa
add
rcrb
shlb
xchg
aad
outsb
pop
jb
jmp
lcall
loopne
cmp
ss
inc
sub
lods
lahf
ret
mov
stos
sbb
adc
addr16
xchg
in
jb
enter
push
or
sub
push
adc
sbb
aas
xchg
cli
xor
xchg
loopne
mov
mov
gs
jo
lds
add
pop
sub
cmp
sbb
dec
jb
xchg
fwait
imul
jb
jb
les
sub
or
jecxz
push
cwtl
ds
stos
cmpsb
mov
dec
fs
outsb
mov
inc
inc
cli
pop
xlat
and
movsb
push
pop
fimull
fcomps
arpl
out
jp
inc
or
or
xchg
nop
xor
dec
dec
mov
int
push
pop
mov
stos
adc
addr16
pop
aaa
into
sbb
pop
jae
or
jb
pop
pop
sub
push
add
cmp
lods
adc
adc
push
pop
scas
add
mov
aad
mov
mov
lret
mov
pop
cmp
dec
cmpsl
shlb
cwtl
xchg
sbb
mov
fstl
cmp
gs
scas
sbb
add
outsb
cmpsb
mov
cmc
xor
pop
mov
imul
cmc
aaa
mul
mov
js
aam
or
insb
sti
sub
addr16
mov
ret
and
mov
rorb
into
cmp
lods
cmp
xor
loopne
push
popf
shlb
xchg
loop
mov
xchg
test
cmp
sbb
xor
cmc
jno
out
mov
cli
and
mov
push
jno
arpl
gs
out
in
push
fsts
mov
lods
test
fisttpll
popa
cmc
ds
mov
jg
push
jo
cmpsl
inc
mov
clc
push
repnz
sub
dec
push
and
aam
aas
fidivl
and
test
cmc
aaa
repz
or
out
pop
dec
aaa
jg
repnz
jne
or
xor
mov
mov
push
lret
mov
sub
jne
lea
cmp
mov
sub
or
or
push
jns
lret
adc
adc
xor
repz
orl
pushf
cli
push
push
cmp
dec
adc
mov
lea
in
out
mov
cltd
js
mov
mov
fbstp
adc
arpl
popf
mov
mov
and
adc
mov
jl
pop
pop
push
push
mov
xchg
jno
push
xchg
pop
loope
in
mov
xchg
rcll
cmp
pop
scas
lcall
aam
xorl
loop
cmp
scas
mov
dec
mov
and
ret
in
lods
scas
repnz
push
bound
mov
add
inc
notb
jne
cmp
cwtl
mov
xor
or
sbb
movsl
inc
xor
fists
pushf
out
and
les
popa
xchg
aaa
imull
or
add
pop
cmp
mov
mov
fisttps
std
xor
cmp
xsaveopt
shl
ds
dec
push
jg
fsubl
in
cmp
mov
test
insb
out
cld
cmpsb
sbb
inc
pop
and
and
aaa
push
mov
cmpsb
add
pop
push
loop
mov
test
lret
fs
outsl
sub
mov
mov
lret
push
mov
lcall
fst
dec
mov
sbb
test
mov
insl
repnz
outsl
jne
sub
mov
push
cmc
movsb
and
fcompl
pop
push
leave
dec
xlat
je
int
cld
scas
or
pop
cmp
movsb
sbb
movsb
cmp
rcr
sub
pop
shll
jo
cmp
adc
movsl
mov
test
pop
mov
dec
stc
ljmp
add
lods
jecxz
dec
pop
push
adc
int3
pop
lods
mov
fistl
jle
xchg
xor
push
das
or
jb
xor
inc
les
push
add
popf
shlb
pop
movsb
js
aas
push
ja
lods
mov
mov
push
das
test
repz
cmc
dec
lret
jae
xchg
rorb
pushf
fnsave
add
xchg
fcoml
stos
xchg
or
movb
mov
iret
cli
imul
sub
add
imul
push
cli
mov
xchg
pop
lds
cli
and
aas
dec
insb
vmmcall
daa
dec
int
mov
cmp
xchg
sbb
push
sbb
mul
adc
das
jbe
push
mov
lret
pop
inc
xchg
and
lret
push
sub
mov
jg
xchg
sub
jecxz
sub
cwtl
jne
push
and
cmc
cmp
in
mov
jg
pop
cmp
mov
fbstp
pop
cmpsb
adc
data16
in
adc
mov
scas
jno
ror
and
clc
push
flds
sbbb
int3
clc
push
lods
pop
pushf
test
ds
push
and
lahf
cltd
mul
outsl
aas
outsl
ret
loope
in
fs
xchg
ficoml
insb
add
clc
cmp
not
out
ljmp
and
cmp
or
out
or
int3
int
mov
aad
dec
test
mov
fnstsw
pushf
dec
lret
in
lret
lds
inc
cmp
sbb
mov
data16
sbb
dec
jae
cmp
pop
clc
sahf
lods
scas
mov
fnsave
xchg
xor
nop
pop
dec
lods
cwtl
adc
pop
jns
int3
aaa
popf
mov
mov
loope
mov
imul
lds
daa
mov
mov
inc
xchg
loope
stos
fsubrl
daa
jge
mov
notl
adc
pushf
cmp
jno
sbb
lock
cmpsl
dec
mov
jmp
lahf
sbb
and
sbbl
cmp
and
test
cmp
fnstcw
fisubs
loopne
inc
dec
add
push
sbb
push
loope
cs
xor
and
andb
lods
jmp
cmp
sub
outsl
out
lea
add
les
hlt
cmp
jl
out
xor
pop
cmp
xorb
xchg
mov
loope
mov
xchg
div
out
add
cmpsb
lcall
stc
call
inc
or
leave
pop
sub
inc
shrl
enter
inc
repz
sub
lret
sbb
enter
in
stc
repnz
xor
xchg
jge
mov
mov
sti
ss
push
or
sarb
or
xchg
paddusb
adc
push
inc
push
push
or
in
inc
ficoms
inc
xchg
ja
fsts
and
fdivl
enter
mov
mov
lret
adc
inc
and
hlt
aaa
fidivrs
lock
roll
pushf
js
fwait
add
repnz
sbb
jnp
sti
nop
or
cmp
cmp
cmp
sub
mov
xchg
mov
and
inc
pop
mov
mov
sbb
jb
cmp
or
mov
xchg
fldenv
sbb
jp
aam
push
and
mov
pop
aad
out
jp
xor
xchg
jmp
test
out
daa
xor
adc
lcall
mov
sbb
mov
pop
adc
pop
pop
mov
push
adc
shlb
xchg
int
sub
ret
inc
rcr
lret
inc
scas
subl
loopne
rorl
repnz
mov
cmp
ret
lahf
jno
jecxz
stc
scas
xchg
ljmp
int3
in
mov
movsl
testb
out
das
negb
xchg
cmp
je
lea
loope
pop
movsb
outsl
pop
es
mov
dec
popa
sbb
arpl
and
xor
cmp
sbb
adc
inc
std
data16
lahf
xor
lret
or
pop
xor
or
cli
xchg
repz
mov
fisubl
push
fidivl
cmp
in
xchg
xor
push
shrb
inc
fimuls
push
adc
sbb
and
lret
jbe
adc
flds
jnp
shrl
psubsb
cs
aam
dec
push
pop
outsb
mov
dec
inc
in
mov
jo
cmc
xchg
arpl
lea
pop
mov
fcomi
lcall
aaa
inc
das
sbb
cmp
and
dec
dec
push
outsb
or
inc
sar
mov
push
xchg
mov
nop
mov
add
xchg
rorl
and
nop
movsb
jnp
mov
loopne
hlt
mov
xchg
lea
fnsave
xchg
push
push
xchg
lcall
fsubr
cmpl
xor
cwtl
sub
mov
andb
hlt
push
and
cmpl
in
testl
sub
pop
mov
mov
xor
xchg
jne
adc
xor
adc
mov
mov
fsubl
pop
sub
dec
scas
fildll
mov
mov
xchg
mov
adc
adc
sbb
jo
jno
or
ret
inc
jmp
xchg
xor
scas
subb
pop
dec
inc
or
ret
push
dec
cli
movsb
xor
push
movsl
xchg
push
incb
pop
shrd
push
sti
push
ljmp
mov
js
cmp
inc
test
stos
sbb
push
cs
inc
xchg
adc
das
xchg
cmp
pop
or
mov
sbb
mov
out
test
adc
sbbb
pop
es
push
jecxz
pushf
pop
out
mov
addr16
jno
or
scas
out
adc
pop
sbb
iret
jecxz
in
scas
loopne
popa
out
add
sbb
add
stos
pushf
insl
pop
sbb
cmpb
mov
pop
dec
jns
mov
jb
push
andl
mov
aad
jecxz
punpckhwd
jle
adc
or
mov
cmpsl
ss
setnp
dec
fidivl
out
jmp
sub
faddl
sbb
lock
push
or
mov
les
inc
lahf
fsts
dec
loop
loop
and
adc
push
dec
ja
push
inc
add
pushf
sub
pop
movsl
mov
inc
cltd
das
cmc
cmp
dec
je
xchg
shll
mov
sar
jo
xor
test
test
test
enter
es
or
arpl
inc
pop
jb
shrl
mov
push
cmp
std
insl
mov
xchg
daa
ja
loope
sbb
jmp
xchg
sbb
mov
cmp
rcrb
add
lret
jno
int3
lods
mov
cmp
mov
mov
addl
cmpl
jno
clc
popa
xor
dec
ds
xor
xchg
lret
mov
jnp
movsl
in
add
out
gs
push
and
add
bound
adc
inc
mov
popa
dec
push
int3
push
cs
ret
adc
rcrl
orl
or
push
pop
jge
mov
mulb
sbbb
icebp
push
mov
lock
outsb
or
rolb
xchg
inc
pop
or
ljmp
shrb
mov
xor
sbbl
push
test
push
test
shll
add
and
int3
in
jo
scas
xor
pop
jge
es
or
and
cli
add
xor
pop
xor
cmp
pop
push
add
jl
rcrb
jo
jno
jno
push
inc
jle
dec
rcl
jg
loope
push
outsl
cmc
test
fwait
xchg
xor
xchg
repnz
cli
shll
cmpsb
mov
and
lret
sbb
gs
jns
cmpl
jp
mov
rorl
inc
xchg
fisubrl
add
or
cltd
loopne
mov
xor
sarb
lahf
cmp
inc
adc
xchg
sub
pop
push
push
fstl
sub
and
mov
dec
mov
add
add
adc
push
mov
sbb
bound
lret
pusha
sub
es
leave
or
in
xor
ds
cmp
ret
in
mov
lods
lods
add
dec
aas
sbb
adc
into
cmpsl
ljmp
jp
push
add
cmc
adc
and
jecxz
lret
jno
sub
jno
adc
leave
jp
or
mov
pop
inc
in
pop
je
push
dec
sbb
push
push
push
sub
sbb
loopne
cwtl
push
xlat
and
int
and
icebp
mov
adc
fsubrs
outsb
jge
clc
pop
jg
push
lahf
sbb
sub
rorb
ret
iret
cmp
mov
icebp
add
push
stos
push
jl
inc
sub
push
int
imul
mov
iret
sub
dec
pop
cwtl
mov
cmp
aam
pop
push
mov
add
jns
pop
outsl
fcomp
jb
adc
lock
lcall
fisubrs
sti
mov
jbe
ja
xor
int
es
jg
loop
clc
sub
cmp
sahf
push
xchg
jle
jmp
in
stos
jns
sbb
out
loopne
mov
push
out
pusha
inc
pushf
pop
out
cs
icebp
xor
adc
jbe
mov
ret
andl
xchg
add
scas
xlat
es
mov
sub
and
or
movsl
xchg
xchg
out
xor
cltd
or
fwait
mov
add
movsl
add
ss
add
pop
inc
inc
xor
push
repnz
jno
fstpl
jge
and
je
addr16
mov
jns
mov
adc
mov
jmp
mov
fdivrl
add
xchg
mov
stc
fs
popf
mov
insb
imul
imul
push
out
in
mov
xor
mov
jp
xor
fwait
jecxz
add
jne
xchg
sub
stc
idivl
pop
add
das
adc
jle
xchg
int3
gs
sbb
xor
xor
inc
lret
cmp
jge
mov
gs
sbb
lods
inc
fimuls
cld
lock
ja
sub
push
inc
jae
mov
mov
fcomps
into
rorb
aad
mov
or
sub
lret
cmpsl
xor
mov
stos
js
fistps
sbb
jge
repnz
sti
stc
aas
mov
mov
inc
fsubrs
ljmp
jnp
fdivr
in
inc
inc
xor
dec
or
shl
sub
fdivrp
mov
push
xor
fisttpll
or
and
mov
xchg
popa
or
inc
xor
scas
dec
mov
inc
inc
fbld
das
pop
xlat
cmc
push
lret
xchg
mov
stos
lahf
add
adcb
or
xchg
lret
mov
pop
mov
pop
ss
dec
xchg
sub
jo
jl
jge
cmpsl
xor
in
insb
pop
insb
jecxz
mov
inc
adc
ss
aam
mov
mov
mov
and
int
in
es
cwtl
push
insb
dec
mov
and
dec
inc
jb
dec
cmpsl
cs
push
movsl
push
lahf
imul
push
hlt
test
push
cmp
pop
push
mov
aas
and
stos
add
outsl
inc
jae
push
ret
fsubrs
sub
xchg
fadd
inc
mov
jecxz
je
sub
rolb
or
sti
mov
outsl
push
sbb
ds
movsl
fisubrs
xchg
add
mov
mov
in
mov
mov
mov
imul
jge
xor
sahf
shr
push
inc
jo
leave
lret
dec
test
fstl
push
mov
cmovle
push
scas
addr16
push
ja
adc
lcall
mov
jmp
rcrl
loopne
mov
jno
adc
rclb
inc
pushl
and
inc
nop
xchg
add
stos
or
inc
ljmp
in
pop
dec
sbb
cltd
lahf
sbb
dec
xchg
push
jle
bound
int
jg
into
das
ljmp
sub
and
and
jmp
stc
imul
out
leave
sub
loope
xor
leave
vaddss
xor
adc
mov
mov
movsb
push
sub
jnp
add
mov
lcall
xchg
pop
cmp
les
sarb
mov
mov
rcll
sbb
jne
jb
pushf
ret
sub
jecxz
sbb
xorb
stos
mov
fsubrl
jns
cmp
cwtl
in
addl
mov
iret
jno
lret
test
insl
adc
xchg
jg
add
ss
push
adc
xchg
inc
sbb
out
clc
cmp
test
sbb
xchg
pop
or
idivl
andb
push
mov
stos
fbstp
mov
add
faddl
pop
mov
iret
das
mov
fs
mov
sub
inc
sbb
jge
add
sub
pop
arpl
xchg
in
aad
popl
dec
dec
pusha
sbb
sahf
pop
aas
jg
adc
jne
subb
mov
pop
jae
push
add
cwtl
out
aas
mov
mov
lea
int
or
test
mov
aaa
arpl
iret
mov
sbb
cwtl
cltd
jns
adc
adc
sub
mov
imul
mov
test
inc
cmp
aad
jl
mov
jl
enter
push
lret
cmp
sbb
dec
cmp
cmpsl
in
push
mov
cli
pushf
sbb
mov
push
mov
scas
and
and
les
xchg
push
das
jg
cmp
and
add
in
imul
pop
lock
in
xor
xchg
mov
in
jne
scas
add
xchg
push
push
lret
aaa
mov
or
out
push
cmp
push
ret
mov
repz
sbb
call
push
xor
jb
shlb
adc
dec
repnz
cwtl
int
aaa
lds
push
loopne
xor
pop
pop
mov
cmp
mov
lahf
adc
dec
addl
add
xchg
dec
mov
jns
das
pop
lea
icebp
fbld
rolb
out
or
or
repnz
cmpsl
push
daa
iret
ja
lea
xor
jl
data16
stc
test
fisttps
pop
fs
pop
in
inc
imul
lods
aas
inc
push
pop
jae
stos
int3
addr16
rol
sbbl
pop
pop
cmp
fiaddl
push
xchg
push
push
div
cmpsl
leave
sub
test
inc
dec
mov
inc
or
sbb
jb
data16
fldenv
jecxz
shlb
adc
add
jnp
adc
mov
adc
outsb
loopne
ljmp
xchg
or
xor
in
adc
sub
lret
pop
add
and
cmp
xchg
subb
mov
outsb
stc
testl
and
sahf
clc
pop
aad
leave
sbb
jle
test
test
xor
mov
outsb
jo
lahf
inc
aas
test
push
or
pushf
xchg
push
sub
arpl
popl
xchg
test
mov
cmp
data16
mov
dec
push
xor
dec
int3
push
push
add
mov
movsb
dec
ljmp
and
dec
xchg
pop
xchg
xor
xchg
push
clc
mov
and
movsb
mov
mov
xchg
std
rolb
sbb
popf
mov
cmc
jecxz
lea
pop
aam
cmc
mov
pop
lret
addb
pushf
ja
mov
jnp
xor
pop
loope
mov
inc
in
cmc
scas
test
push
mov
cmpl
int
cltd
loope
dec
add
push
sub
test
data16
out
sbb
ret
dec
and
rcll
cmp
inc
mov
add
mov
scas
fs
inc
dec
xchg
lret
ret
cmpsb
sub
fstpl
movsl
mov
adc
and
inc
nop
mov
fs
fcoms
in
aam
ret
lar
fidivrl
jns
call
repnz
sbbb
pop
sbb
mov
aas
push
sbb
das
jg
jns
mov
repz
xchg
adc
pop
scas
ds
std
in
push
test
mov
push
xchg
jbe
cmp
test
push
outsl
imul
out
fwait
jge
inc
sub
movsb
sahf
cmp
out
in
jae
or
pop
stos
push
xchg
das
roll
nop
cld
cwtl
repz
in
push
jp
fstl
aaa
pop
xor
pusha
push
add
fsubs
test
inc
arpl
adc
frstor
mov
roll
fs
sti
jecxz
stos
sub
iret
std
dec
xchg
or
push
or
mov
jne
jns
or
adc
and
mov
dec
enter
lahf
push
sbbb
pop
in
popa
sbb
mov
std
lret
fistps
xchg
push
lock
test
test
and
std
lds
push
sbb
inc
mov
loopne
addr16
pop
fidivrs
adc
jae
cli
out
mov
arpl
cmpl
sub
loope
fiadds
es
inc
outsb
lock
mov
mov
mov
jp
jo
dec
xorl
stos
and
scas
mov
cwtl
sub
les
cmp
push
fldcw
or
test
jecxz
xor
jns
cli
stos
les
xor
aas
dec
mov
in
rcl
jb
neg
mov
mov
sbb
dec
inc
mov
popa
xchg
pop
in
push
sub
lods
es
test
fstps
mov
sbb
aas
pop
sub
mov
das
popf
imul
xor
xor
hlt
inc
int
fwait
lahf
pop
inc
cmp
xorb
mov
popf
push
and
jno
cmp
cmpsb
sbb
ret
stos
das
repz
dec
xchg
lret
push
add
push
ret
dec
cmp
les
cmp
lds
fs
cli
pusha
cmc
add
jns
repnz
xchg
repz
adc
cmp
rorl
or
or
sub
cmpsl
lea
leave
push
push
xchg
lods
mov
cltd
leave
xor
dec
mov
lcall
mov
sbb
popf
lock
dec
jle
rolb
pop
fabs
and
pop
cmc
ljmp
inc
mov
jle
push
jne
gs
test
clc
out
push
mov
rolb
cvtps2pi
inc
lret
arpl
stos
and
pop
mov
xlat
sbb
outsl
ja
inc
sbb
stos
test
arpl
test
push
add
mov
lods
inc
sub
jb
pop
pop
push
cmpsb
jae
das
adc
pop
xchg
outsb
and
or
push
sbb
sbb
out
loope
cwtl
xchg
pop
xor
js
test
cmp
cmp
in
aas
out
xchg
test
sub
mov
inc
fsubs
or
mov
jno
dec
jb
shl
mov
scas
lds
pop
cmp
xchg
adcb
mov
int
dec
pop
inc
lea
dec
stos
call
jne
lods
inc
pop
das
sbb
or
mov
ficomps
decb
enter
adc
mov
sbb
aad
jp
lods
arpl
mov
dec
sbb
movsl
dec
nop
aad
mov
popf
or
lea
jecxz
or
out
in
or
add
push
stc
orl
outsl
xchg
mov
pushf
jle
sahf
pop
add
mov
mov
imul
fldt
adc
imul
or
jae
lods
fimull
push
loop
sub
pop
jg
inc
push
sub
and
std
push
enter
js
mov
stos
cwtl
mov
rorb
mov
mov
psubsb
bound
cmp
jno
outsb
or
jg
jns
test
push
mov
sub
and
jne
adc
loope
stc
fs
popa
sub
pop
aas
sub
mov
das
pop
aas
orb
out
outsl
or
pop
jnp
in
mov
addr16
jo
mov
mov
mov
cli
shlb
mov
xlat
sbbl
mov
movsl
inc
gs
mov
daa
dec
lret
sbb
sub
add
mov
pop
aam
push
dec
aaa
add
mov
dec
mov
push
not
fwait
negb
jge
test
out
jle
test
dec
xor
adcb
into
mov
clc
and
xchg
push
xor
jmp
jmp
repnz
ds
fucomip
icebp
xor
out
repz
stc
cmc
xchg
cld
dec
lock
subl
outsb
or
outsl
icebp
dec
push
pop
movsl
ret
daa
out
xor
imulb
sub
push
xchg
rorl
std
sbb
in
and
dec
inc
out
lret
sbb
dec
add
in
mov
test
aaa
push
and
enter
aam
mov
data16
cli
pusha
cli
arpl
sahf
sahf
insl
cli
mov
dec
pop
add
sub
insl
or
xor
cmp
cli
rcl
ja
adc
lret
fbstp
testb
fs
cmp
aaa
pop
aad
je
mov
test
adc
dec
or
into
scas
es
inc
xchg
mov
mov
unpckhps
iret
sub
fmull
push
inc
mov
sub
sbb
ds
or
js
movsl
fistpl
mov
xor
int3
pop
mov
inc
mov
scas
fisttpll
out
pop
lret
push
lods
arpl
jge
or
push
dec
cmpsl
jge
pop
sarl
inc
ret
mov
push
pop
or
iret
xchg
test
enter
mov
loop
js
pop
test
imul
sbb
sub
leave
in
xlat
out
mov
lds
imull
loope
xor
pop
mov
enter
dec
pop
fldcw
in
leave
inc
cmc
dec
fwait
add
mov
sub
xorb
mov
push
push
rcrl
cmpsb
dec
mov
std
pop
int3
pop
jno
jb
dec
es
mov
xchg
mov
and
mov
pop
lods
mov
inc
mov
ss
add
xor
cmc
cwtl
adc
iret
or
mov
stos
lahf
mov
push
or
sarb
push
rcrb
jae
test
adc
pop
scas
cltd
cmp
sub
hlt
scas
addps
lahf
lcall
ret
dec
inc
aaa
orl
dec
nop
orb
int3
decl
mov
sahf
loopne
stos
jg
sbb
xchg
jb
leave
pop
or
push
imul
bound
pop
ret
push
xchg
and
aad
fmull
es
repnz
adc
xchg
mov
mov
loop
pop
and
movsb
jae
pop
adcb
es
decb
leave
or
inc
es
inc
cmpsb
int
iret
stc
sahf
jbe
aam
pusha
inc
fs
test
pop
mov
and
pop
movsb
sbb
sbb
adcb
xchg
fstpl
dec
dec
xchg
daa
fcomi
test
ljmp
adc
icebp
mov
pop
jl
mov
les
rolb
int3
add
call
sub
xchg
inc
cmp
push
inc
cmpsb
push
mov
pop
xor
sub
addr16
cmpsb
jge
mov
jno
inc
arpl
mov
and
sub
mov
fisubs
mov
jmp
js
mov
sbb
repz
insl
jne
or
stos
sbbl
cmp
push
out
cmp
mov
addr16
inc
push
mov
clc
pop
jnp
jae
idivb
js,pt
enter
rorb
je
adc
sub
sub
sub
aad
ljmp
iret
sub
fs
ja
push
in
cmp
mov
fdivrl
xlat
sbb
cwtl
mov
inc
cmp
sbbb
inc
aas
scas
lea
push
aaa
ss
int
hlt
mov
and
mov
jp
sti
mov
xchg
pop
in
push
mov
hlt
imul
out
push
mov
mov
sti
sub
jmp
shlb
jmp
sahf
add
xchg
aaa
and
sbb
addr16
fstpt
out
sub
xchg
xchg
and
aad
jo
and
jbe
mov
lcall
xchg
movsl
mov
push
push
sbb
adc
mull
mov
and
cwtl
fisttpl
xchg
arpl
in
dec
fcoms
out
aam
fbstp
scas
jp
int3
scas
mov
int3
mov
mov
ds
outsb
fsubl
sub
inc
xlat
jbe
pop
pop
in
push
jg
dec
sbb
push
inc
or
push
call
push
mov
stc
or
or
pushf
jno
loop
add
stc
push
cld
aaa
arpl
or
fcomp
push
rcr
pusha
out
mov
jg
cs
in
fistps
inc
int3
xchg
push
mov
out
iret
dec
adc
movq
adc
leave
lods
xchg
jecxz
stos
in
adc
cmpsb
dec
sub
xor
lea
mov
outsl
or
pop
stos
mov
mov
lahf
jge
in
loope
popf
lret
xor
pusha
fwait
clc
push
adc
sbb
jnp
mov
pop
mov
sbb
jae
lcall
mov
dec
xchg
mov
jae
enter
aam
xchg
mov
xchg
unpckhps
add
out
fs
in
roll
out
scas
adc
mov
or
jecxz
sbb
int3
dec
sbb
enter
xor
out
stos
dec
addb
hlt
bnd
xor
push
aad
daa
ret
in
and
push
scas
cmp
es
xchg
xchg
in
jp
orl
and
xchg
cmpsb
ja
mov
sbb
std
jbe
mov
aad
clc
test
mov
dec
cs
sub
pushf
pop
movsb
xor
gs
das
pushf
and
pop
add
cmpsb
fisubs
mov
push
int
out
jl
cmp
cmpsb
pop
clc
aad
and
adc
sub
push
mov
mov
scas
cld
outsb
movsl
je
aad
cmc
out
dec
movsb
sub
push
xchg
fidivs
push
stos
mov
xchg
mov
sbbb
fwait
mov
dec
call
stos
enter
sub
lods
cli
cmpsb
cmpsl
cmp
sbb
adc
mov
mov
ja
daa
test
sahf
add
sbb
add
mov
sarb
fildll
xchg
or
js
inc
push
or
push
ffree
adc
gs
sbb
pop
push
icebp
pop
jmp
out
add
leave
push
repz
jge
test
dec
cltd
xor
jg
flds
push
adc
adc
arpl
decb
dec
inc
jl
push
out
out
push
test
dec
adcb
ficoms
inc
mov
jl
mov
pop
sub
jecxz
out
cli
fisubrs
pop
sub
repz
stos
inc
push
cltd
jns
pop
fs
mov
lahf
fs
mov
aad
push
xchg
enter
mov
lds
lret
test
mov
xor
cmp
jo
mov
testl
das
incb
or
dec
pop
sti
fstps
pop
or
jbe
and
cwtl
lock
cmp
sbb
inc
push
out
jle
cwtl
jle
dec
lea
mov
jae
into
test
movsb
inc
mov
in
rep
cli
xchg
jecxz
mov
stos
cltd
cmpsb
scas
rcrl
mov
xchg
test
sbb
lahf
and
lret
mov
insl
push
jmp
lods
and
sbb
push
jp
pusha
push
add
adcl
sbbl
xor
xor
clc
orl
inc
mov
add
mov
mov
lahf
cmc
dec
daa
inc
add
cmpsb
jae
cmpsl
adc
cmpsl
sbb
mov
repz
sbbb
pushf
push
pusha
jae
sub
std
sti
gs
outsl
lahf
sbb
out
call
mul
inc
roll
outsb
cmp
dec
fdivrs
add
cli
push
hlt
sub
xor
xchg
pop
test
cmp
jmp
push
xchg
into
les
mov
aas
into
lods
daa
sub
pusha
loopne
adc
pop
push
xor
cld
add
pop
outsl
out
cmp
jnp
mov
lret
lods
notb
imul
jno
adc
pop
or
ja
push
sbb
push
jo
rcrl
mov
push
jle
jl
fyl2x
outsb
fstl
xchg
jns
loopne
or
ds
or
cmp
jle
jle
mov
push
es
and
fisubl
icebp
stos
jg
fsubs
arpl
shrb
divl
add
push
xor
push
std
mov
out
and
mov
mov
test
mov
push
fcmovnbe
sbb
sti
aam
push
inc
push
push
cmpsl
pop
out
roll
adc
mov
jne
stos
add
cmp
scas
bound
adc
lret
adc
shll
cmp
jae
idiv
cltd
add
jno
stos
or
mov
or
loop
gs
hlt
pop
mov
mov
sub
dec
pop
push
mov
xchg
add
repz
cmpsl
stos
push
add
pop
or
mov
outsb
pop
push
and
lock
jp
pop
je
sahf
fiadds
ret
ja
xchg
push
sti
mov
add
stos
fstl
popa
mov
in
sbb
jns
outsl
hlt
and
test
or
ss
mov
lret
pop
in
cltd
rolb
fistpll
addr16
pop
mov
hlt
inc
xchg
das
mov
adc
rclb
arpl
cs
sbbl
popa
xor
pop
gs
add
lds
rclb
mov
lea
gs
out
add
pop
adc
add
outsb
sub
cmova
vpcmpgtb
setl
ret
data16
mov
mov
arpl
sarl
es
jge
js
and
xchg
push
sbb
cmc
dec
cmp
mov
add
mov
in
std
data16
sahf
ret
daa
mov
xchg
sub
pop
dec
je
gs
int
repz
ss
mov
mov
in
ljmp
ljmp
and
shlb
cmc
sbb
cmp
das
push
mov
test
cld
iret
dec
lahf
add
enter
mov
dec
mov
cli
inc
and
fcmovbe
ds
fildll
xor
mov
mov
xor
arpl
fstl
sbb
repnz
outsb
aaa
out
jg
cwtl
and
or
cmp
add
add
pushf
lret
jmp
jbe
repz
push
sub
data16
or
mov
and
xor
dec
xor
add
outsb
aam
jno
fwait
dec
xor
jnp
sub
pop
pop
push
and
mov
lods
add
das
call
ss
adc
leave
add
clc
out
cmp
test
adc
cmp
rol
lds
sub
sarl
xchg
jne
mov
lods
fsubr
subl
std
push
scas
fwait
shlb
stc
std
ja
inc
mov
push
clc
push
rorl
loopne
out
jg
rolb
inc
jp
out
lahf
icebp
aas
outsl
adcb
sub
out
xor
xor
push
push
cmpsl
pop
xchg
je
std
or
arpl
or
mov
pop
xor
addr16
xor
imul
call
sbb
push
fistl
movsl
inc
insl
icebp
adc
insb
cmp
cmpsb
pop
rcrl
test
mov
insl
inc
jbe
sbb
fxch
jecxz
jne
lcall
sbb
nop
mov
pop
inc
mov
faddl
lea
mov
andnps
adc
sahf
push
jmp
pop
lds
orl
jmp
in
mov
imul
test
add
ss
mov
js
test
call
mov
in
or
mov
sbb
and
jnp
mov
pushf
nop
pop
insb
jnp
out
dec
mov
arpl
jnp
out
mov
js
bswap
pop
aas
push
add
popf
scas
vmovq
rorl
data16
jp
lcall
mov
mov
aad
jp
std
imul
stos
jbe
les
syscall
pop
test
jp
cmc
mov
or
push
addr16
outsl
xchg
std
ds
popf
mov
mov
pop
xor
or
fwait
jae
or
ljmp
adc
add
mov
xchg
cmp
xor
xor
imull
push
lods
inc
ret
inc
prefetchnta
xor
xor
mov
daa
das
je
jo
subb
pop
das
daa
mov
xorb
out
adc
push
lret
loop
scas
and
and
shl
pop
xchg
xor
cmp
push
xor
push
aad
add
inc
sub
enter
jge
sub
insl
dec
mov
push
add
ret
mov
arpl
push
ret
ljmp
rcll
ret
mov
loop
into
out
dec
arpl
cmc
sbb
cmp
push
stos
and
or
mov
mov
sarl
stc
xchg
fcompl
mov
mov
rorl
shll
pop
mov
jge
inc
cmpsb
jo
inc
aam
in
sub
sbb
test
inc
test
mov
inc
sbb
sub
mov
dec
jne
faddl
mov
adc
mov
bound
std
mov
scas
shll
mov
fstps
mov
inc
xor
and
clc
outsl
cmpsb
cmp
std
loopne
and
or
jb
in
mov
sub
jb
push
xchg
aas
mov
add
into
sbb
xor
rorl
shlb
bnd
pop
call
lds
test
je
mov
psubd
sub
mov
in
dec
out
out
loop
jl
or
inc
mov
mov
cld
mov
scas
mov
sub
lods
iret
mov
sahf
mov
or
xchg
push
push
ss
lea
test
mov
nop
ret
dec
and
jg
push
imul
mov
rorb
repnz
adc
push
cmc
jmp
sub
dec
arpl
outsl
scas
inc
xlat
js
push
movsb
cwtl
jg
pop
push
scas
iret
dec
push
xor
pop
js
outsl
push
lret
lods
movsb
arpl
pushf
int
jnp
xlat
pop
mov
daa
call
add
mov
insl
pop
cwtl
je
xor
fs
xor
stos
pop
sub
test
cmp
adc
adc
lahf
inc
jmp
dec
jb
jecxz
cmpsb
xchg
test
cmp
addl
pushf
add
int
or
xchg
cmp
rcll
sti
int
les
lods
pop
dec
pop
cmp
jae
dec
hlt
mov
addr16
cmc
push
mov
jno
jg
dec
xor
insb
pop
xchg
addr16
in
dec
sbb
sub
je
sbb
adc
inc
iret
and
ljmp
mov
stos
repnz
push
sti
inc
cmp
pop
in
pop
sub
xchg
cmp
stos
or
mov
xchg
mov
push
insl
data16
sbb
xor
mov
leave
add
data16
lds
mov
pmullw
test
loope
add
xor
cli
cwtl
mov
movsb
test
testb
arpl
rcrb
stos
adc
cmp
fwait
adc
insb
in
das
push
pushf
cmp
xchg
mov
ret
les
fiaddl
dec
adc
cli
push
pop
out
fcomp
xchg
mov
cmp
dec
repz
mov
enter
sbb
mov
xchg
rcrl
sub
sub
mov
xchg
shrl
push
jge
aaa
fists
pusha
in
adc
mov
lods
dec
lds
xor
or
sbb
nop
sbbl
outsl
repnz
imul
cld
insl
mov
ljmp
and
xchg
sbb
adc
leave
aas
fstl
inc
xchg
shlb
arpl
push
push
ja
jle
cmp
daa
xchg
dec
mov
das
in
sahf
push
dec
out
cmp
push
mov
pop
mov
ds
mov
jae
lcall
push
dec
call
mov
push
notl
scas
mov
pop
mov
sahf
jne
jg
loopne
rcll
push
inc
fmuls
sbb
add
jb
push
mov
jl
jae
jl
mov
lds
adc
lock
xchg
lret
clc
adc
push
mov
enter
push
adc
mov
scas
add
and
sti
js
addl
in
aam
int
sbb
stos
dec
fwait
mov
adc
pop
subl
rolb
imul
cmp
jb
mov
push
daa
test
fdivrp
movsb
mov
leave
scas
jns
sbb
sub
mov
jl
fsubrs
cmpsl
cld
mov
push
xchg
rclb
outsl
div
jge
sub
push
pop
sub
call
ficompl
xlat
jo
pop
xor
fimuls
mov
or
imul
push
jo
sub
cmp
jp
push
mov
xchg
movsb
cmp
ret
mov
pop
stc
jns
push
and
repz
jle
xor
insb
repz
div
insb
sbbl
in
ljmp
push
call
pusha
cmp
and
insl
jg
mov
add
xchg
popa
jmp
imul
or
jb
xor
aaa
cmp
sub
bound
jae
push
mov
inc
clc
mov
jno
sbb
cmp
aaa
ret
fimuls
push
cwtl
and
lds
lret
loope
pusha
cmp
adc
push
push
mov
sbb
pushf
aaa
icebp
mov
xor
jp
or
jle
scas
outsb
sub
ljmp
ret
mov
sub
sbb
sub
mov
dec
insb
gs
outsb
hlt
push
sub
cmpsl
mov
xchg
cwtl
imul
lahf
js
mov
sub
stc
in
add
xchg
inc
jnp
daa
add
push
fwait
pop
or
outsb
mov
roll
invd
add
mov
sbb
int3
call
sbb
out
nop
ds
jo
inc
sti
fnstcw
std
arpl
sub
lret
shrl
mov
sbb
outsl
sub
les
pop
sahf
inc
xchg
dec
neg
sahf
sub
jae
int
fldt
lds
cs
or
cmp
ss
xor
jbe
mov
popl
adc
jmp
mov
lret
add
cltd
movsb
enter
xor
push
sbb
xchg
sub
xor
push
shlb
pusha
cs
out
mov
jl
xor
sbb
mov
in
xchg
xchg
mov
xor
mov
xor
adc
cld
pop
mov
sbb
mov
pusha
insb
jp
inc
in
aaa
sqrtps
inc
mov
mov
push
mov
xchg
mov
xchg
push
pop
xchg
icebp
mov
sub
lock
dec
mov
push
jl
pop
xchg
orb
loop
cmp
xor
jno
and
pusha
scas
and
mov
mov
leave
pop
mov
push
xor
test
movsb
test
and
jle
loopne
enter
pop
xchg
loop
dec
cs
push
jmp
inc
mov
sahf
fnsave
cmp
add
sub
rorb
fst
in
or
and
hlt
cld
std
outsl
pushf
jg
cmpb
push
nop
loopne
stos
hlt
push
xor
shll
sbb
ss
push
and
movsl
stos
imul
inc
mov
push
or
rolb
mov
pushf
clc
rol
pop
out
adc
sbb
fnstsw
adc
in
add
call
jno
fistpll
insb
and
testl
push
pop
daa
loope
ja
or
or
popa
in
inc
dec
push
push
lods
push
in
in
sahf
lret
sub
mov
dec
and
mov
mov
fstp
ss
inc
sub
adc
adc
xorb
jno,pt
adc
xor
es
into
push
fs
sarl
test
adc
pop
push
cmpsb
jl
incb
icebp
test
subb
aad
pop
fwait
lods
fbld
or
movswl
jl
sbb
insb
mov
cmpsl
or
inc
mov
xor
mov
cltd
repnz
enter
std
mov
mov
jo
fsubr
or
loopne
faddl
test
or
add
shrb
push
mov
stc
xchg
dec
in
addr16
sahf
sti
mov
fimuls
aas
sub
lea
sbb
bound
cmp
rcll
dec
cmc
fidivs
repz
stos
outsl
lahf
cmp
inc
inc
imul
jmp
mov
iret
sbb
mov
test
loop
out
push
pop
shlb
cwtl
xchg
aad
into
test
ret
outsb
andl
icebp
xchg
pop
out
movsb
bound
or
xor
sbb
shrb
fs
imul
test
cmp
imul
xor
inc
in
inc
mov
dec
push
sub
or
jno
or
lds
pushf
pusha
pop
imul
pop
or
pop
jp
test
or
fcmovb
jb
push
add
dec
lahf
cmp
dec
imul
mov
adc
fnstenv
test
popf
aaa
imul
jne
outsb
test
inc
jbe
add
mov
popl
insl
notb
shrb
daa
dec
adc
mov
push
sub
iret
inc
sbb
sbb
mov
pop
je
xchg
adc
add
lcall
dec
dec
nop
xor
lds
bswap
add
les
into
test
xchg
or
push
pop
icebp
movsb
adc
adc
cmc
loop
dec
add
sub
dec
jp
xor
into
mov
add
inc
das
push
lret
dec
jnp
out
xor
inc
shll
inc
movsl
push
cmp
mov
push
pop
dec
push
mov
pop
xchg
or
notb
adc
aad
dec
xor
rorl
icebp
mov
push
lods
jns
xchg
add
in
scas
and
jae
and
inc
ds
nop
pop
sub
hlt
scas
cmc
pop
insb
push
sbb
jae
fdiv
bound
push
jo
push
sub
imulb
les
dec
fiaddl
fldcw
popf
lret
fmuls
mov
lret
lahf
add
out
ljmp
or
lods
pop
add
xchg
lods
xchg
lret
pop
lahf
es
adc
loope
addr16
lret
sub
push
jp
ja
mov
leave
je
sahf
cwtl
shlb
lar
mov
aaa
sub
jns
lods
aas
sub
mov
fisttps
fisttps
jle
cmpl
aad
aaa
repz
rcl
inc
cwtl
or
mov
call
and
arpl
insl
lcall
and
lcall
xchg
adc
jmp
aaa
xchg
imul
inc
aas
out
cmp
stos
pop
mov
mov
loope
out
inc
push
or
hlt
mov
sbb
mov
int
pop
mov
fstpt
or
notl
jmp
lret
mov
cmp
popa
dec
lret
ss
fiadds
mov
pop
shr
cmpb
cmpsl
dec
in
push
lods
xchg
int3
or
pop
xchg
xchg
or
stos
xor
pop
out
test
xorl
and
insb
mov
cmp
aam
test
jmp
inc
cmp
js
jo
jge
push
call
rorb
xchg
sarb
fadds
mov
cmp
and
xor
push
sub
into
aad
sbb
jbe
lea
je
pop
addr16
sub
xchg
mov
cmp
cmp
mov
testl
fwait
and
int
nop
adc
sbb
call
frstor
inc
jge
into
xor
sbb
xchg
xor
out
or
cmpsb
aam
arpl
jmp
stc
out
lret
xor
inc
movb
rorl
push
inc
xor
mov
movsb
xchg
add
fwait
sub
push
ret
jb
adc
xor
push
push
xchg
xor
aam
jmp
imul
sti
stos
pop
push
push
push
pcmpgtd
push
adc
outsl
leave
add
xchg
icebp
xor
push
adc
in
jnp
dec
pop
or
and
jmp
mov
adc
imul
mov
cmpsb
popf
mov
faddl
rolb
dec
adc
mov
add
adc
sar
imul
pop
ss
push
inc
mov
mov
mov
and
fnstcw
cli
jns
aam
in
shlb
mov
mov
inc
std
dec
loope
push
testl
mov
insl
xchg
or
es
ljmp
test
leave
int
add
sbb
xlat
mov
cmp
jmp
xchg
sbb
idivb
fwait
xchg
mov
ds
jl
subb
xor
or
test
jne
or
pop
inc
jge
fnsave
mov
sbb
push
decl
movsl
pop
pop
inc
cmp
or
adc
loopne
xchg
rcrl
test
xchg
adc
inc
mov
sub
orb
call
out
mov
aam
mov
hlt
push
cmp
xchg
repz
dec
add
push
jae
lcall
xor
or
mov
push
dec
adc
cmp
mov
into
jno
inc
cltd
in
bound
dec
repnz
aas
add
cmpsb
orb
mov
cmp
int3
mov
cmc
mov
fstl
jge
into
das
mov
pop
lahf
outsl
dec
mov
fs
lds
mov
aas
cmp
jmp
daa
and
jbe
push
lds
xchg
scas
lahf
xlat
adcb
xchg
push
pop
scas
and
iret
cmp
inc
inc
movaps
daa
pop
in
mov
mov
sbb
adc
dec
adc
mov
ss
or
mov
inc
mov
cwtl
jecxz
jge
inc
sti
filds
cmp
and
pop
jecxz
insl
xchg
mov
or
and
jecxz
cld
or
in
dec
mov
xchg
push
or
faddl
cli
decb
fildll
ffree
in
or
nop
scas
lret
outsl
enter
insb
and
pop
test
lock
es
cmp
mov
pop
xlat
ret
ret
out
mov
hlt
es
mov
enter
fstp
out
into
add
mull
idivb
sbb
call
popa
jp
addr16
sbb
ds
sbb
jo
add
je
imul
fistl
cmc
pop
mov
stc
gs
or
cmp
mov
pop
dec
notb
xchg
std
or
test
in
mov
iret
out
test
popf
sbbl
popa
sub
sub
dec
nop
adc
jbe
orb
lea
jo
push
cmp
add
daa
sub
push
or
lret
test
add
mov
and
pop
push
mov
insb
vmwrite
cwtl
sbb
jns
insb
test
mov
in
idivb
mov
std
in
sbb
or
leave
jmp
mov
add
data16
daa
jg
pop
movb
xchg
rorb
add
jmp
push
and
fistps
push
mov
pusha
dec
lock
das
dec
fnstenv
adc
inc
mov
dec
and
lret
xor
xor
movsb
mov
outsb
push
xchg
xlat
js
ret
fdivr
repz
out
and
add
mov
cmp
enter
pop
cs
fnclex
gs
imul
movsb
enter
inc
hlt
sbb
fcmovnbe
dec
scas
rolb
xor
cmp
push
orl
inc
out
insl
and
clc
lods
aam
enter
pusha
or
push
frstor
pop
pop
jle
cmpsl
xchg
imul
jae
pop
in
gs
mov
dec
and
mov
addr16
push
push
fwait
aam
xchg
mov
or
test
lods
add
dec
xor
in
pop
test
mov
mov
cs
imul
jae
scas
movsl
into
lcall
daa
sahf
jo
sbb
pop
das
in
dec
jne
dec
pop
jbe
loope
jle
cltd
hlt
cmc
jne
push
mov
pop
cmpsb
xor
cmp
mov
bound
clc
fmul
and
xchg
dec
lds
out
mov
movsl
adc
or
cmp
pop
mov
and
xrstors
fwait
testl
or
ss
and
and
mov
sub
push
iret
cmp
sbb
add
xchg
and
cmc
cmpsl
in
lods
adc
repnz
mov
popf
idivl
adc
mov
clc
hlt
sbb
and
lret
sub
sahf
ljmp
sahf
pop
cli
inc
mov
ss
jae
repnz
sub
aaa
loope
clc
add
mov
scas
sub
aas
sbb
push
in
outsb
cmp
push
rcrl
push
mov
fcoms
sbbb
lret
fimuls
push
pop
ret
hlt
cmp
test
fmul
mov
pop
dec
pop
pop
cli
mov
jp
dec
and
lret
into
je
push
inc
sbb
fsubs
sahf
mov
fstpl
jne
mov
push
sti
lods
popf
or
shl
pop
jo
test
mov
inc
jb
pop
add
sbb
pop
in
xor
mov
push
mov
ds
in
lret
fisubs
add
sti
pop
ffreep
jbe
jb
int
orb
shll
lret
mov
mov
and
push
into
pop
stos
jmp
test
mov
push
inc
mov
lret
cltd
insl
mov
movsb
scas
movsl
mov
ss
std
je
cld
pop
lods
pop
insb
pushf
or
or
ficoms
ret
test
ljmp
mov
shlb
lahf
scas
ret
clc
pop
popl
jecxz
js
add
pop
imul
sbbb
stc
mov
push
insb
pop
fsub
shlb
lar
inc
outsb
pop
jge
test
cmpsb
js
movsl
in
iret
xor
idivb
mov
pop
push
into
scas
cltd
mov
cwtl
aad
ljmp
add
push
mov
pop
cmpsb
push
xor
cmpsb
inc
stos
jnp
subl
lods
adc
into
pop
and
into
push
into
inc
mov
imulb
sbb
and
movsb
push
dec
les
or
int
repz
pop
push
fdivrs
icebp
stc
pop
shll
mov
add
inc
cld
std
testl
out
inc
inc
cmp
pop
xchg
bound
xchg
jns
pop
fisttpll
mov
insb
xorb
jb
mov
mov
jnp
vmptrst
xchg
dec
or
hlt
pop
and
xchg
pop
jns
mov
addr16
dec
adc
sbb
xchg
aad
nop
orb
mov
imul
int
mov
lret
dec
jns
cs
enter
jp
xchg
sbb
mov
outsl
in
out
fiaddl
int3
fdivs
cmp
sbb
xor
sbb
add
sti
push
xchg
inc
imul
aad
rdmsr
jge
cltd
nop
and
arpl
shrl
pop
push
lock
or
cmc
sbb
and
mov
test
jecxz
fidivl
aaa
sub
jae
dec
sbb
pop
sbb
test
push
fstl
jl
dec
test
push
mov
xor
ret
xchg
sbb
mov
jne
ljmp
add
cmp
push
pop
cmpsb
xorb
or
sbb
adc
jmp
mov
cmp
inc
leave
call
nop
push
inc
push
dec
lock
aaa
iret
push
inc
xchg
or
int
mov
add
test
mov
inc
mov
add
testl
cmpsl
shlb
xor
xchg
movsl
out
dec
push
xchg
call
adc
roll
outsl
aaa
fdivs
fwait
test
sbb
std
sarb
sbb
cld
mov
cmp
nop
test
aaa
mov
mov
adc
jp,pn
add
adc
popf
add
sub
or
cmp
add
hlt
into
jmp
leave
loop
xor
mov
mov
adc
push
or
sub
pop
not
add
pop
xchg
sub
fs
adc
push
mov
daa
scas
test
cmc
sub
std
xor
cmp
enter
push
sub
ljmp
pop
jno
daa
pop
inc
inc
cli
or
pop
test
push
lock
mov
mov
std
pop
adc
in
cmc
and
daa
cltd
stc
and
movsl
pop
cmp
push
push
jnp
dec
jnp
sub
and
add
out
rorl
int
fnsave
mov
mov
inc
sub
mov
dec
add
mov
flds
xchg
dec
ds
arpl
or
jns
mov
rcl
or
pop
ss
jae
sub
mov
sub
sub
xor
leave
mov
rcr
fs
and
jbe
xchg
movsl
rcl
enter
adc
jbe
mov
jl
or
rcll
fisubs
rolb
inc
add
fbstp
daa
fs
mov
test
lahf
call
lahf
div
aam
aas
pop
fst
inc
jmp
xor
mov
push
nop
push
lret
rclb
mov
sbb
stos
cmp
sub
pusha
aad
jecxz
fcompl
in
imul
cmp
xor
icebp
dec
adc
add
js
sub
imul
and
xor
dec
sub
sub
loop
ja
cvtps2pi
pop
aam
dec
fistpll
xor
outsb
inc
arpl
dec
aas
sbbl
shl
ret
in
sub
stos
ret
dec
add
test
jl
enter
pop
sub
sbb
in
push
dec
test
cmp
dec
ds
lahf
add
outsb
jae
je
push
in
ds
daa
sahf
pop
adc
pushf
sub
pop
add
push
imul
add
repz
push
test
push
push
cltd
mulb
sbb
sub
mov
pop
aad
xchg
ret
in
mov
xor
icebp
xchg
cmpsb
in
or
or
lds
ret
sbb
inc
lcall
pop
roll
pop
xchg
ljmp
mov
jae
in
xchg
aam
adc
and
dec
mov
xchg
dec
adc
in
cmpsb
jbe
ss
mov
fadd
imul
out
cld
pushl
mov
mov
cli
loopne
and
in
mov
sbb
pusha
aad
jnp
and
pop
sti
loope
adc
shl
insl
mov
int3
xchg
mov
lret
jp
or
lock
aad
jnp
sub
mov
jns
imul
js
pop
iret
daa
arpl
inc
pop
xchg
aam
sti
xchg
out
popf
arpl
xchg
test
addb
movsl
push
jle
cmp
cli
fidivrl
cmp
xor
std
enter
ffreep
push
pop
pop
std
push
cld
andb
dec
sbb
and
cs
les
stos
movsl
pop
in
cli
out
cwtl
pop
subl
and
or
mov
testl
mov
flds
pop
rorb
push
jne
pop
inc
sub
cmp
mov
fwait
repnz
cmp
cmpsb
out
xchg
stos
push
popa
adc
mov
push
mov
xchg
jbe
mov
pop
data16
or
mov
adc
pop
pop
push
and
insl
rclb
mov
loope
icebp
aas
adc
iret
push
lret
adc
cltd
imul
arpl
mov
ret
testl
mov
enter
jne
xor
lods
lods
push
pusha
aas
adcb
cmp
cmp
vmovaps
mov
pop
cmpsl
ficoml
jmp
stos
fadds
pop
into
fnstenv
hlt
lods
out
adc
cmp
clc
xchg
cmp
mov
or
into
in
xor
imul
mov
jmp
gs
adc
std
add
mov
xor
xchg
pop
adcb
stos
xchg
out
movsl
pusha
xchg
out
jbe
jmp
inc
pop
mov
xchg
dec
mov
jg
int3
add
stos
xchg
add
outsb
sub
jecxz
mov
jl
adc
stos
sub
addr16
es
int3
jmp
pusha
push
into
add
lods
inc
sub
dec
jns
push
int3
into
mov
xor
sbb
mov
lret
loope
in
xchg
push
dec
mov
jnp
adc
sbb
ja
jmp
inc
pop
pop
out
mov
shrd
or
mov
jb
push
mov
sbb
arpl
and
inc
ret
into
cmp
and
out
lods
mov
dec
inc
stos
adc
mov
inc
push
xor
clc
pop
fstpt
sub
pusha
sbb
mov
dec
jns
push
push
cwtl
lds
jl
xor
das
xchg
mov
jae
mov
jl
mull
xchg
pushf
aas
aaa
and
dec
cli
add
inc
lods
lret
xor
or
lret
mov
test
cmc
push
add
push
and
add
icebp
cs
outsb
xor
test
cmp
pushf
fistpl
out
dec
sbb
push
push
mov
and
adc
out
test
add
mov
and
mov
fcmovne
movsb
or
jl
adc
jge
insl
sub
sbb
pop
pop
dec
or
les
hlt
gs
rol
xor
mov
add
fnstenv
repz
stos
stos
pop
cmpsb
loope
adc
mov
dec
fdivs
stc
ss
cmp
adc
bound
xor
psubusw
shl
loopne
push
test
mov
xor
lock
sub
add
in
imul
aas
jmp
imul
shrl
lcall
outsl
int
or
jne
jb
int3
lds
addr16
shll
test
xchg
cmc
dec
aad
ja
jae
pop
sbb
stc
call
add
pusha
insb
xchg
jo
xchg
push
inc
xor
shlb
sbb
add
push
or
dec
xchg
scas
mov
sbb
fwait
inc
inc
pop
jb
jne
cltd
cli
fdivp
lods
aas
jmp
cmpb
pop
lea
and
dec
cmp
push
lock
mov
xor
sbbl
jmp
cmp
scas
leave
xchg
mov
loope
stc
or
lds
iret
cmpsl
in
pop
test
aaa
jg
mov
jecxz
sti
popa
icebp
arpl
mov
mov
fldt
bound
sbb
bound
sbb
stc
outsl
jne
out
fcompl
adc
sti
jnp
mov
pop
push
pop
scas
loopne
push
jo
jl
push
lret
pop
fwait
sub
mov
fsubl
shll
xchg
out
cmp
hlt
mov
add
sbb
es
push
xlat
daa
xor
mov
and
mov
mov
jnp
xchg
xor
mov
xor
sub
out
xchg
fucomi
ud1
adc
add
ret
jne
imul
jno
aam
jno
dec
sbb
jnp
pusha
lret
mov
lods
sub
imul
or
mov
cld
mov
add
and
int3
or
popa
jns
adc
and
rcr
mov
lret
jbe
test
rorl
add
mulb
sahf
inc
xchg
pop
dec
ret
jle
inc
mov
arpl
and
subb
and
sub
xlat
loop
in
jno
lods
icebp
fmuls
pushf
aaa
sbb
cltd
add
push
testb
les
mov
lcall
xor
and
or
xor
adc
jae
jmp
adcb
icebp
push
push
adc
push
in
push
push
jge
pop
fadds
outsl
sar
xor
jge
leave
bound
dec
or
lock
cmc
pop
pop
cli
mov
cwtl
fxsave
test
pop
add
in
xchg
push
push
lcall
imulb
sbb
sub
xor
js
pop
loopne
cmc
jbe
dec
aad
xor
repz
mov
loope
fistpl
bound
mov
xchg
dec
subb
mov
xchg
cmp
loopne
mov
mov
inc
add
call
push
xor
lcall
cwtl
or
sub
repz
shll
gs
push
cld
pushf
lea
add
jb
add
ret
pop
xchg
dec
cmp
in
shlb
push
popa
add
and
mov
lods
fstps
xor
hlt
jne
ret
aad
cmp
adc
cmpb
dec
pop
sub
dec
dec
outsb
sub
lds
or
mov
or
pop
lcall
mov
sbb
jnp
pop
push
enter
pop
dec
mov
and
ja
push
mov
ficoml
add
cmp
scas
aad
out
jno
xchg
dec
rolb
or
jge
fadds
iret
aaa
add
arpl
cwtl
iret
dec
mov
adc
mov
xor
scas
xchg
stos
add
lahf
mov
inc
adc
fwait
mov
jg
mov
imul
outsb
sub
incl
adc
sub
das
inc
push
push
xchg
adc
cld
xchg
mov
sti
insl
pop
test
sub
sbb
sbbb
mov
cmp
lea
inc
or
dec
repz
lea
xchg
bound
inc
enter
into
cmp
sbb
pop
outsl
popa
test
jno
inc
cmpsb
push
sbb
ret
test
xchg
incl
mov
dec
jmp
ror
cmc
rcll
push
push
sbb
in
int3
jb
divl
xor
outsl
pushf
push
into
icebp
add
cmp
mov
arpl
ljmp
dec
or
jg
push
push
aaa
cmp
and
xchg
mov
fcmove
and
cmp
or
fmuls
jb
xor
add
mov
mov
test
mov
loope
sbb
imulb
sbb
jno
stos
and
cmp
int
push
sub
adc
sbb
lret
mov
adc
pushf
std
mov
mov
icebp
mov
aam
xchg
pop
xor
cld
es
hlt
fcompl
pop
mov
or
insb
into
adcb
test
and
cmc
ss
hlt
sbb
add
push
push
push
sbb
scas
sub
sub
adc
out
arpl
ds
lret
and
or
clc
pop
push
xchg
push
mov
stc
imul
pop
cwtl
rcll
repnz
cmp
popf
enter
sbb
pop
mov
mov
movsb
mov
or
add
ret
mul
adc
test
incb
mov
test
or
roll
push
jns
jae
loope
mov
sbb
dec
iret
push
aaa
jle
outsl
adc
fnsave
sahf
pop
js
cmp
popa
sub
add
add
jnp
pop
cld
mov
stos
sbb
cmp
jmp
add
pop
nop
insb
dec
cltd
call
fldcw
mov
imul
pop
ss
and
outsb
subl
lods
fisttpll
fists
movsb
neg
xor
cmp
nop
stos
push
popa
jnp
dec
lahf
inc
jns
mov
testl
pop
push
cmp
in
adc
mov
rclb
and
cmp
mov
or
jle
mov
jge
cwtl
and
scas
push
mov
rclb
test
push
pushf
insb
jns
aad
movsb
test
jb
sub
mov
pusha
push
clc
icebp
xlat
add
and
std
std
ffree
and
mov
test
fiaddl
sarl
sub
pop
push
xor
es
popf
jge
xchg
sbb
jp
je
iret
pop
xchg
inc
cmp
add
gs
mov
cld
sbb
bound
fwait
xor
adc
lret
jo
lcall
push
ss
or
dec
fldl
sub
jae
test
loopne
xchg
push
lahf
dec
icebp
jo
test
adc
adc
cmp
fdivs
xchg
lods
mov
dec
mov
xor
pop
movsb
addr16
imul
sbb
jo
xchg
lret
pop
and
mov
or
sbb
sub
rcl
adc
sub
lea
add
test
pop
sbb
push
enter
lret
jo,pt
fisubl
sbb
jle
stos
jae
adc
imull
repnz
xor
lret
pop
jl
sbb
scas
aas
jnp
dec
repz
mov
push
pop
mov
pop
adc
jl
mov
and
push
mov
mov
mov
add
xor
or
xchg
push
dec
jl
lahf
outsb
aaa
fldenv
add
mov
and
jo
jecxz
xchg
aaa
push
icebp
test
call
movsl
fmull
fcompl
mov
std
lar
mov
push
sti
and
mov
push
mov
mov
fildl
iret
sub
or
bound
jg
in
adc
sbb
lcall
inc
cld
sbb
and
pop
arpl
push
addb
mov
psubq
mov
push
stos
pop
cmp
jecxz
mov
lahf
add
inc
pop
mov
icebp
stos
xor
push
xor
div
iret
mov
dec
pop
cs
mov
mov
lds
jle
mov
shll
pop
out
jmp
adc
sbbb
xorb
xchg
dec
iret
xor
mov
rcrl
dec
ljmp
in
jp
xchg
xchg
stos
jmp
push
cs
inc
adc
jbe
mov
sub
xlat
vmulps
dec
mov
jb
inc
xchg
fs
not
mov
loope
lret
test
orl
subb
lods
mov
aaa
pop
icebp
aaa
dec
mov
dec
cmc
enter
cltd
sub
mov
push
mov
or
hlt
cld
xchg
sbb
fistpll
stos
xor
inc
popa
ljmp
daa
mov
addr16
push
movsb
mov
jge
or
jb
in
popf
rorb
aad
xchg
addr16
pop
call
fucom
mov
pop
rolb
mov
cli
sbb
cmpsb
cld
mov
movsb
sub
insl
jb
ja
loope
mov
or
mov
jge
movsb
aas
lret
popa
pop
and
jo,pt
push
jno
leave
jmp
outsl
sub
adc
and
loopne
ret
imul
xchg
xor
xor
in
cmp
mov
scas
sbb
sahf
ret
mov
add
and
push
lods
in
leave
push
dec
mov
mov
push
scas
std
das
insl
push
xchg
xchg
adc
mov
xchg
push
xor
cmp
and
test
imul
jb
icebp
xchg
mov
mov
sub
lds
and
out
sub
cmp
cltd
stos
dec
insb
mov
sub
cmpl
movsb
mov
je
xor
and
cld
lods
push
std
movsb
ljmp
xchg
mov
xchg
call
lahf
inc
xor
loopne
xorl
mov
out
std
pop
fistps
out
out
mov
sub
cs
push
cmp
push
popf
ret
fwait
jo
dec
pop
pop
mov
aam
in
lds
inc
sbb
xchg
cmp
loopne
jmp
sti
jecxz
mov
mov
add
and
sub
cmp
mov
push
enter
or
or
ss
ljmp
leave
out
pop
xchg
add
ljmp
mov
pop
imul
data16
movsb
mov
jecxz
add
mov
sub
xchg
movsb
jb
incb
sbb
loopne
stos
test
xlat
pop
xor
ljmp
mov
lcall
setp
push
cmpsl
shll
mov
or
xor
cmpsb
dec
out
fwait
andb
xor
push
sbb
mov
push
jge
pop
mov
std
rol
das
cltd
xor
out
pop
add
adc
enter
sbb
push
fstpl
push
insl
fstpl
shll
aad
test
and
inc
push
xchg
int
inc
add
dec
mov
fidivrs
push
into
cmp
cwtl
cs
add
sbb
inc
xor
int3
xchg
es
jno
inc
xchg
lods
jb
outsb
call
pusha
mov
pusha
mov
or
pop
cwtl
loopne
pop
add
dec
push
xchg
dec
sub
cmp
lods
jns
add
sub
cmpsl
int
idivb
inc
std
ljmp
shr
push
and
cmpsb
xor
jns
dec
movsl
lret
mov
incl
andl
gs
cmp
lods
jnp
iret
lods
dec
fcoms
mov
adc
jle
and
mov
or
adc
inc
jne
jle
mov
xor
xchg
adc
sbb
adc
mov
es
xchg
xlat
jmp
mov
mov
pushf
and
dec
inc
iret
jo
and
daa
mov
xchg
aad
push
aaa
cmp
mov
hlt
inc
push
fidivrl
movsb
jae
out
shr
test
push
pop
pushf
bound
inc
xchg
iret
inc
xchg
mov
or
jmp
lsl
inc
sti
scas
pop
xor
popa
push
xor
cmp
xor
rolb
xchg
fmuls
in
cmp
mov
in
cmp
xor
add
incl
mov
shlb
inc
xchg
mov
xor
inc
inc
push
sarb
lcall
push
sar
and
and
mov
and
jo
outsl
loope
ljmp
push
xor
mov
je
or
jae
mov
push
iret
mov
jg
les
add
nop
jae
push
inc
push
xchg
push
std
pop
clc
push
repz
ja
lret
mov
inc
loope
popf
sbb
lcall
js
pop
push
or
push
clc
inc
mov
mov
imul
pushf
or
mov
jb
lea
add
imul
in
and
pop
into
mov
stos
dec
inc
mov
pop
and
fisubs
ds
inc
in
incb
inc
jae
sbb
mov
inc
imul
int3
das
dec
loope,pn
adc
js
mov
imul
sub
out
or
lcall
mov
dec
inc
into
mov
mov
push
sahf
jl
ffree
sbb
sbb
push
shlb
aas
popf
les
stos
fcompl
mov
ret
push
inc
popa
dec
sbb
sub
ds
orl
cld
mov
movsb
dec
jae
or
int3
mov
pop
and
enter
push
push
jo
lock
iret
iret
repz
repz
popf
xor
xchg
aad
aas
lahf
lret
int
addl
xchg
push
add
dec
hlt
inc
pop
adc
int
sbbl
int3
xchg
and
sarl
in
arpl
inc
lods
sub
and
xor
hlt
and
in
jl
addr16
cmp
xor
inc
jae
jno
add
xchg
xor
fists
sub
push
push
inc
push
add
int3
mov
stc
loopne
fidivrl
std
add
push
jl
jmp
pop
mov
sbb
bound
movlps
mov
repz
cmp
fcom
mov
mov
cmp
add
lret
ss
or
add
fucom
mov
fsubrs
push
iret
mov
out
jle
dec
rep
add
das
stos
fwait
xor
bound
adc
pop
int3
dec
orps
mov
dec
insb
fcomi
cmp
popf
cli
enter
cs
lock
mov
pop
mov
mov
iret
mov
add
add
dec
adc
ja
fsubrl
mov
xchg
push
jne
mov
and
pop
sub
ds
nop
mov
rcl
push
xchg
shrl
ds
out
ja
int3
mull
cmpb
or
mov
dec
pusha
cmp
jmp
mov
adc
jb
or
jno
cwtl
shlb
leave
mov
das
aam
int3
jmp
rclb
mov
and
mov
mov
xchg
testl
sub
mov
out
in
inc
daa
mov
push
iret
hlt
fists
ret
push
call
aaa
xor
call
ljmp
ror
sbb
pop
rolb
in
iret
mov
pop
sub
adc
or
je
or
enter
mov
pop
imul
lcall
cmpsb
stos
lret
aam
stos
out
add
dec
hlt
loopne
xchg
sub
ja
adc
fcompl
filds
push
jmp
notl
push
or
clc
sub
cld
add
jns
rcll
std
inc
lods
pop
or
jmp
stos
leave
sar
in
sbb
or
inc
cmpsb
xchg
lock
pop
mov
test
mov
lahf
dec
les
sbb
jns
pop
inc
jno
loopne
sbb
data16
dec
pusha
sarl
mov
sbb
mov
sub
aad
and
sub
stos
add
mov
adc
mov
aad
imul
subb
icebp
aas
ja
fs
leave
sarb
add
sub
loope
out
lock
mov
push
dec
sti
inc
inc
and
fldt
mov
fcomps
mov
in
test
xchg
cmpsb
jmp
cmpsl
jb
out
shlb
shll
clc
cmc
js
cmp
xchg
sbb
push
bound
arpl
mov
in
mov
xor
xchg
sti
jne
mov
mov
add
sbb
or
dec
out
xor
or
cld
and
add
pop
in
adc
scas
test
add
xchg
sbb
lods
inc
cmp
mov
pop
insl
lret
jne
rcl
int
popl
imul
repnz
leave
xchg
scas
adc
imul
xchg
add
and
mov
out
enter
mov
cmp
repz
jnp
xchg
mov
or
jmp
fistps
mov
pop
int3
lods
or
xor
adc
add
in
jbe
out
dec
cld
sub
mov
insl
outsb
rcrl
cmp
ljmp
or
xor
add
repnz
shll
addr16
dec
lahf
loop
ds
subb
xor
and
sbb
mov
rcrl
push
adc
add
push
xorb
imul
and
and
inc
or
jge
jb
movsl
aam
scas
imul
imul
mov
lds
dec
addl
cwtl
lods
xchg
nop
mov
mov
mov
pop
sahf
andl
hlt
mov
insb
push
adc
fprem1
popf
loopne
mov
xchg
lods
decl
leave
in
ljmp
adc
hlt
ror
stos
or
ljmp
or
jae
dec
js
incb
sbb
out
int3
dec
inc
jb
enter
mov
mov
mov
cmp
movsl
jbe
sub
adc
mov
or
sbb
jmp
adc
hlt
test
test
mov
scas
mov
dec
or
loopne
in
push
lfs
stos
xchg
hlt
sub
ret
xchg
dec
mov
add
jecxz
mov
jnp
xor
mov
pop
inc
addr16
pop
aad
fimull
add
adc
leave
jmp
pop
jmp
cwtl
aas
call
cmpsb
icebp
sbb
in
std
or
nop
rcrl
leave
call
jle
scas
lret
sarl
push
into
push
push
sti
and
sbb
call
dec
jp
pop
push
cmp
aas
xchg
iret
mov
mov
and
sub
xor
cs
dec
add
dec
inc
xlat
lea
cmp
mov
nop
jae
dec
mov
outsb
or
fnstcw
lahf
mov
outsb
dec
and
mov
cmovno
rcll
or
jp
gs
in
push
mov
in
pushf
xchg
sub
and
sbb
mov
and
sbbb
inc
mov
adc
push
scas
adc
rclb
arpl
adc
std
add
cli
nop
or
shlb
or
or
loope
mov
insl
lret
xchg
jl
mov
cmp
and
or
inc
enter
adc
pop
inc
or
pop
arpl
aad
idivl
xchg
mov
jmp
aas
out
sti
sbb
push
xchg
xlat
jl
cmp
xchg
or
repnz
addr16
xchg
shrb
nop
repnz
add
jge
xchg
sub
out
jg
adc
jmp
jbe
inc
lds
xchg
push
inc
test
ljmp
mov
or
rcrb
sti
jo
push
sub
popf
fwait
lret
or
lock
push
lea
icebp
jp
repnz
lahf
adc
xlat
in
jno
push
mov
icebp
sbb
push
cmp
mov
jl
xor
inc
loopne
add
cmp
in
push
sahf
das
mov
les
pop
xchg
sti
xor
je
aam
ficoms
push
inc
int
or
xchg
mov
cld
or
cmp
fisttpl
add
out
jp
rcl
fucomi
adc
sub
js
mov
add
addr16
cltd
test
cld
push
pop
nop
ss
mov
pop
and
out
xchg
incb
xor
imul
pushf
pop
jb
xor
push
adc
xchg
sbb
pop
pop
mov
xchg
and
cltd
test
int3
cli
mov
xor
subb
mov
mov
sti
in
push
cmp
sub
add
push
push
mov
add
frstor
push
insl
insl
test
in
scas
clc
pop
xor
xchg
and
mov
jnp
gs
cmp
mov
or
test
add
xor
lods
rol
inc
lods
add
dec
std
cmpsl
or
iret
cmp
jmp
xchg
mov
cmp
out
mov
sub
ja
ss
xchg
mov
pop
mov
bound
push
sbb
rcl
dec
dec
insb
xchg
dec
fistps
int3
mov
xor
jno
mov
iret
pop
jge
cmc
sub
pop
stc
daa
cmpsb
pop
fsubs
jmp
nop
lods
cmp
in
fs
inc
rorb
cmp
negl
data16
mov
adc
pop
ret
mov
out
sbb
mov
into
adc
scas
mov
imul
loop
into
sbb
cld
jle
sbb
push
mov
xchg
xor
sti
mov
mov
mov
push
jnp
pop
adc
xchg
rcrb
stos
and
mov
xchg
in
lcall
pushf
or
popa
pop
les
pop
sti
test
mov
mov
movsl
pop
xchg
ss
ds
scas
fmull
shl
rcll
pop
out
jp
fidivs
adc
cmpsl
in
shll
shrd
call
jae
cmpsb
mov
stos
xchg
movsb
mov
movsb
mov
in
add
les
pushl
pop
fwait
pop
mov
ja
mov
mov
push
hlt
push
or
test
cld
sub
push
rol
lcall
js
mov
pop
sub
or
imul
cmp
mov
xchg
js
dec
mov
xor
xchg
pop
sub
stos
cs
and
mov
push
pop
repz
js
nop
enter
sahf
push
xor
mov
pop
scas
stos
dec
mov
sbb
xchg
sbb
adc
xor
fabs
divb
rcll
xor
and
cmpl
xchg
inc
lods
pop
call
in
gs
jge
mov
sbb
push
rolb
pop
push
fildll
push
push
pop
and
cmp
adc
dec
xor
cmp
and
or
fsubs
pop
dec
stos
sub
inc
or
inc
and
push
lods
daa
mov
jg
loope
cltd
repz
push
repnz
push
xchg
adc
mov
sahf
cli
cmp
push
mov
test
xchg
xlat
shlb
xchg
out
mov
xchg
and
jns
movsb
or
fnsave
inc
lds
cmp
ret
mov
jmp
push
dec
mov
xchg
mov
pushf
mov
add
mov
and
fcomps
movsl
fsubl
push
mov
jae
and
in
shll
xchg
and
jnp
and
outsb
xchg
sahf
adc
xchg
lods
cltd
ret
mov
sbb
add
fs
in
push
outsl
and
mov
mov
mull
add
ficoml
adc
shl
loopne
popf
out
lret
and
inc
loopne
pop
dec
cmp
inc
cli
mov
lock
clc
ljmp
inc
clc
xchg
sarb
sbb
push
test
or
mov
divb
jp
jae
jns
push
call
lret
mov
jb
addr16
mov
fwait
mov
jecxz
push
xchg
scas
or
or
or
mov
rcll
repnz
mov
jle
mov
pop
jno
cs
jmp
jo
adc
sub
fs
mov
inc
loopne
mov
jge
xchg
sbb
pusha
fdivs
adc
add
push
mov
adc
inc
loope
jnp
out
add
clc
repnz
push
pop
or
cltd
out
ret
xchg
xor
mov
das
les
mov
sub
jo
push
aaa
ret
loopne
mov
in
push
mov
into
shll
pop
iret
sub
jno
je
sbb
xchg
jbe
add
adc
in
xor
pop
jno
sbb
sbb
int
out
sbb
and
ret
nop
mul
or
mov
movsb
and
mov
pop
push
sbb
mov
xor
mov
dec
cmpsl
pushw
sub
lahf
fisubrs
or
pushf
jle
sbb
xchg
fists
pop
fnstenv
or
arpl
int3
xchg
jo
or
adc
mov
dec
outsb
into
xor
mull
inc
push
leave
rep
fsts
ds
lret
mov
pop
mov
add
sub
dec
cmpsl
jge
clc
shll
jne
loopne
ss
fdiv
xor
push
sub
popf
hlt
or
xchg
inc
sub
scas
xchg
movsb
aam
pop
stc
cmpsl
pusha
cmc
mov
and
aaa
icebp
or
repnz
jecxz
mov
jb
arpl
dec
out
mov
incb
data16
and
fbld
rcl
mov
push
rclb
mov
sub
cmp
ficompl
pop
outsb
enter
push
pop
xor
mov
orb
movsl
xchg
clc
out
inc
lret
imulb
divb
xchg
int3
and
jmp
mov
xabort
in
scas
jmp
cmpsb
lcall
les
je
sub
mov
in
xchg
cmp
aaa
sbb
out
mov
std
les
inc
out
mov
into
mov
fcmovnu
or
push
rclb
into
cmp
cmp
xchg
adc
aam
push
and
xchg
dec
hlt
mov
jnp
lds
hlt
push
scas
daa
cmp
arpl
push
xor
addr16
fnstcw
cwtl
nop
pop
mov
lods
int
mov
pop
ficoms
sbb
divb
int3
leave
out
add
addb
or
inc
add
js
jae
sbb
xchg
xor
aam
test
jg
add
xchg
dec
jmp
xor
ret
outsb
sbb
mov
cmp
cmpsb
ds
pop
add
lcall
pop
inc
fsubp
sub
sub
ds
test
mov
scas
cmpsl
cmc
xor
aaa
xor
sar
loope
dec
mov
imul
xchg
dec
add
mov
dec
and
nop
testl
mov
popa
sahf
jno
mov
enter
jb
xor
ret
jg
xor
leave
loop
and
fucomp
adc
xor
xchg
lods
pusha
repnz
mov
lret
mov
stos
and
cmp
stos
or
daa
sbb
mov
sbb
in
mov
pushf
aas
xor
jge
adc
mov
push
sbb
xchg
dec
or
mov
fmuls
mov
sub
addl
rclb
cmp
sbb
jg
test
into
add
sbb
adc
scas
or
xor
mov
push
or
dec
loop
repnz
test
cmc
inc
or
mov
in
out
stos
sub
cmpsl
xchg
mov
push
cmp
mov
imul
test
cmpsl
mov
ficoml
mov
inc
mov
mov
cmp
mov
mov
jecxz
sbb
fstp
adc
insb
xchg
xchg
das
imul
lret
mov
push
add
pop
int3
bound
nop
es
jl
and
lahf
mov
jecxz
push
cs
pop
dec
mov
cli
aas
fwait
jne
movsb
bound
in
sbb
scas
js
insb
ds
fs
aaa
nop
fxch
dec
sahf
popa
jo
test
xor
pop
rorl
xchg
addr16
sti
and
jo
repz
and
mov
outsb
mov
dec
adc
mov
out
andl
mov
fucomi
rol
xorl
and
jl
scas
sbb
adc
inc
fs
adc
mov
ljmp
cmpsl
xchg
adc
inc
mov
jle
add
xchg
mov
aaa
jno
sub
in
or
fnstcw
push
imul
repz
and
inc
jne
out
rol
loop
nop
add
aam
jno
mov
jmp
ss
leave
or
push
push
test
in
aad
inc
jb
push
test
push
xchg
push
mov
and
cmp
adc
mov
pop
pushf
loopne
add
rorb
mov
push
fadds
test
bound
fwait
jmp
loope
push
cmp
sbb
scas
les
xor
idiv
jl
push
inc
adc
cmc
mov
lds
clc
jae
add
inc
movsl
lods
and
inc
outsb
push
sbb
push
sbb
cmpb
or
pop
icebp
subb
xlat
cmpsb
fwait
loope
les
je
pop
mov
xor
inc
mov
xchg
repz
pop
stc
popf
jl
push
xchg
xchg
int3
mov
sahf
push
push
lods
add
jne
sbb
jp
jg
push
lret
cmc
shlb
sub
testl
repnz
mov
aaa
idivl
push
outsb
out
pop
test
enter
rclb
sbb
insl
cld
or
jmp
dec
sub
cs
sahf
xor
xchg
cli
lahf
jp
pop
fmull
out
pop
fs
sbb
push
idivl
adc
sbbl
adc
dec
fldcw
jecxz
fbld
lea
loopne
rolb
aas
and
jo
rcrl
cmc
loopne
dec
and
sub
cmp
insb
mov
mov
gs
adcb
sti
loope
sbb
jmp
cmpsl
bnd
stos
aad
xchg
jmp
adc
jae
ss
jmp
dec
lret
push
movsb
xlat
add
lret
lret
mov
in
jl
jmp
add
and
cmc
sti
xor
pop
jmp
dec
test
xor
out
cli
ljmpw
iret
mov
and
sub
je
xor
push
sbb
push
inc
ret
sub
sub
fbld
imul
ret
sbb
arpl
jb
xchg
dec
lods
push
jl
clc
andl
or
sbb
pop
fisttps
sarl
push
push
pushl
in
xor
pushf
sarb
lret
sbb
inc
mov
add
jl
sahf
add
sub
xchg
mov
cs
pop
inc
xor
in
push
mov
pop
popa
mov
sbb
mulb
mov
lret
cmp
out
add
push
fs
push
push
test
mov
scas
mov
sbb
iret
loope
leave
mov
push
int
ficomps
xlat
rclb
xor
cmpsb
stc
es
addr16
aas
sbb
mov
adc
insl
inc
mov
cmp
xorl
lahf
mov
nop
loop
lahf
mov
mov
mov
js
loope
xor
push
sbb
fisubs
loop
xchg
jns
sbb
mov
cmp
ret
in
push
adcb
add
dec
outsb
jle
dec
or
cmp
imul
outsl
sub
pop
inc
add
add
or
add
clc
loopne
daa
in
aas
movsb
and
nop
cmp
shlb
int3
or
fcmovb
push
sbb
lahf
cmp
ficoms
or
push
stc
cmp
or
push
pop
scas
cmp
stos
pop
mov
pop
sub
push
add
or
fidivrs
pop
in
or
cmp
add
mov
dec
push
lret
jle
mov
mov
sub
sbb
inc
bound
int3
jecxz
repz
xchg
das
subb
clc
add
pop
cmpsl
cmp
repnz
mov
cmp
mov
andl
icebp
dec
testb
aas
clc
hlt
xchg
pop
stos
pop
call
jmp
cli
test
push
fnstcw
outsb
fwait
mov
iret
jg
or
outsl
cmp
push
xor
in
std
pop
scas
mov
mov
inc
aas
ret
push
dec
pop
icebp
xor
hlt
or
push
push
addl
dec
les
popl
ja
sbb
inc
and
push
push
xchg
push
xchg
in
and
das
ds
and
push
push
xorb
adc
pop
mov
add
sbb
negb
stos
dec
sub
imul
cmp
push
cmpsl
sub
stc
rol
xchg
mov
jge
nop
jne
xchg
pushf
sub
adc
insl
dec
jae
in
pop
clc
sbb
test
lcall
xor
cmp
xlat
gs
cmp
xor
daa
mov
push
loop
add
push
or
test
sbbl
je
sarb
xor
xchg
sbb
xlat
push
aad
push
in
popa
repnz
cmpsb
daa
push
int
jbe
aam
pop
out
imul
roll
shr
cld
mov
jo
sbb
lret
cmp
mov
mov
pop
test
int
mov
mov
sti
gs
mov
outsb
out
lods
test
xor
fdivrs
cmp
xor
in
mov
aad
mov
aad
inc
inc
faddp
xchg
stc
das
push
jo
sub
dec
dec
xor
add
dec
add
in
lret
pop
or
xchg
les
inc
dec
mov
add
xor
xchg
pop
pop
aaa
inc
jbe
fs
scas
cmp
iret
cld
or
ret
pop
add
adc
push
inc
jmp
popa
jl
xor
sub
pop
scas
lods
lcall
jnp
out
pop
aaa
mov
or
xchg
je
mov
outsb
dec
jge
fisubrl
lret
xchg
inc
mov
mov
xchg
xchg
adc
in
rcll
and
add
inc
mov
jnp
adc
xchg
sub
mov
or
or
lods
rclb
sub
xor
fstps
test
std
leave
rcr
push
fsubrs
icebp
pop
lret
adc
dec
out
xor
test
mov
mov
les
xor
jnp
addr16
xchg
leave
cmp
cwtl
mov
mov
cmpsl
jb
repz
push
mov
rcrb
out
out
movsl
and
mov
mov
inc
push
cmp
mull
mov
dec
lret
leave
sub
mov
xchg
xor
mov
repnz
xchg
test
imull
push
lret
shll
dec
and
ja
adc
inc
ss
sub
xlat
xor
jmp
mov
movsl
imul
xor
pop
repnz
dec
mov
mov
ds
in
int3
sbb
mov
loope
loopne
test
dec
or
jle
inc
push
int3
jp
xchg
inc
mov
das
or
clc
jo
push
fldenv
xlat
sub
mov
and
cmc
mov
lods
sahf
dec
loop
fwait
aaa
add
scas
inc
dec
cmp
dec
pop
in
ret
aaa
std
push
sub
pop
imul
popa
mov
add
ret
mov
mov
jae
push
inc
mov
xchg
adc
mov
pushl
pop
enter
pop
jp
fucomip
repz
mov
out
dec
push
xchg
adc
and
fistpl
popf
xchg
xor
aaa
inc
imul
dec
dec
xchg
test
xchg
dec
mov
or
xchg
loop
lods
mov
aas
cltd
add
dec
insb
push
sub
mov
inc
call
fwait
loopne
mov
in
mov
inc
adc
pushf
outsb
cld
or
cwtl
dec
or
xchg
push
lcall
dec
cltd
or
insb
sbb
mov
jmp
dec
std
xor
add
stc
shlb
mov
dec
shll
arpl
mov
sub
xor
sub
mov
mov
call
jmp
mov
inc
in
mov
call
jle
shlb
fcomip
in
mov
scas
imulb
xchg
or
or
xchg
pop
jle
mov
mov
sbb
movsb
push
mov
mov
add
cmp
pusha
dec
lods
mov
je
orb
dec
js
add
jno
xlat
xchg
pop
and
xor
js
das
push
pop
pop
hlt
popl
fsubr
and
mov
jmp
dec
out
and
clc
sbbb
repz
jmp
jecxz
lret
sub
ss
xchg
xor
adc
mov
into
add
nop
xchg
ret
js
and
cltd
mov
sbbl
test
mov
stos
xor
cmc
push
loop
dec
inc
mov
mov
cld
xchg
imull
aas
mov
sub
inc
mov
in
test
adc
aam
mov
outsl
jne
xchg
leave
xchg
js
ja,pt
lock
jl
add
ret
push
add
dec
and
testb
ja
mov
pop
daa
sti
andb
fstpt
lods
and
sub
jb
cmc
in
inc
mov
adc
mov
dec
xchg
ret
pop
aam
fcmovnb
ret
ds
repz
push
cmp
mov
insl
push
xchg
lgs
add
jae
or
leave
add
fcmovbe
or
adc
scas
fildl
xchg
sbb
mov
jbe
dec
inc
enter
jp
hlt
int3
test
jo
push
cmpsl
shll
mov
sbb
cmp
mov
dec
mov
mov
adc
call
dec
aam
iret
imul
aam
fisubl
lods
mov
cmp
mov
leave
addb
add
imul
pop
xchg
ficomps
fwait
loopne
lahf
mov
adc
adc
pop
jmp
pop
sbb
xor
shrb
sub
out
femms
out
hlt
adc
arpl
sbb
pop
xor
and
dec
inc
cmpsl
xchg
push
insb
jle
push
movsl
push
shlb
leave
ror
cmp
jge
addb
adc
add
test
in
into
jo
mov
xor
pop
cwtl
movsl
mov
inc
dec
xlat
into
mov
xchg
or
rorl
sti
dec
mov
mov
or
jns
rcll
icebp
dec
mov
inc
aad
test
and
aas
lods
jge
fwait
pop
stc
jecxz
adc
pop
data16
ljmp
scas
pop
or
xchg
test
jnp
add
subl
sbb
out
cmpxchg
sbbb
test
mov
fcom
sub
sbb
add
int
leave
fsts
sbb
mov
and
nop
mov
mov
out
xlat
fldlg2
jmp
sub
pop
inc
call
rcr
mov
outsb
test
dec
fwait
rcl
pcmpgtb
push
dec
out
inc
xchg
aam
lea
cmpsl
or
hlt
xor
aas
bound
repnz
iret
xchg
jmp
repnz
jl
mov
mov
or
jmp
mov
sti
bound
popa
mov
mov
cmp
hlt
addb
mov
jmp
test
or
dec
ds
scas
in
dec
sbb
xchg
sub
ret
cmp
cmp
push
xor
shlb
aam
push
mov
repnz
adc
leave
xor
cmp
mov
out
xchg
mov
push
in
js
push
sbb
rorb
scas
es
cmp
aaa
cmpb
and
cltd
and
in
enter
sbb
cmpb
pushf
jecxz
push
ret
push
mov
ds
lods
inc
push
inc
mov
cwtl
movsb
shlb
jno
testl
fcmovnu
sahf
test
arpl
dec
popf
sbb
out
push
sbb
jp
test
or
mov
jne
mov
cli
cmp
push
fmull
jno
cmpsb
shl
mov
lcall
dec
sti
xlat
dec
fmull
sbb
mov
ds
js
adc
jp
jg
shrb
aad
lods
stc
ror
and
sbb
pop
pop
in
rolb
jge
mov
cwtl
ljmp
or
xlat
and
idivb
lock
pop
or
mov
xchg
bound
fcoms
mov
push
cltd
in
cld
mov
dec
test
mov
add
sub
sbb
ret
and
xor
mov
jnp
sahf
dec
pop
test
scas
loopne
add
cmp
fadds
shrb
jo
mov
sbb
add
inc
sub
sbb
and
xor
scas
push
test
push
dec
push
ret
xchg
push
xor
pop
arpl
sbb
inc
and
mov
xchg
mov
jns
movsb
sub
jnp
lahf
out
mov
and
lea
mov
imul
add
and
test
push
dec
xor
ljmp
lahf
and
xchg
xor
dec
repz
or
xchg
pop
popa
xor
in
jle
das
add
mov
or
sub
inc
shl
push
les
pop
fucom
push
mov
mov
in
mov
cwtl
xor
mov
jne
data16
jle
xchg
or
cld
data16
lds
daa
stc
testl
add
pop
mov
xor
and
pusha
jbe
jnp
or
mov
and
pop
mov
sti
push
mov
mov
sbb
and
lds
jns
mov
cmpl
adc
mov
hlt
push
lret
sbb
pop
jae
nop
xchg
out
jg
mov
mov
dec
and
add
sub
jbe
loop
inc
add
jnp
xor
je
mov
es
mov
mov
cld
jns
ret
mov
push
cmp
and
insl
pop
lods
ss
shrl
js
call
cmpsl
loop
xor
push
mov
jle
sbb
or
outsl
add
ljmp
add
jno
dec
movsl
jg
leave
and
mov
dec
addr16
cwtl
divb
dec
mov
mov
dec
push
fisubrs
insb
add
pusha
pop
das
add
rcll
pop
mov
sbbl
dec
add
sbb
push
xchg
cld
scas
or
out
aaa
inc
cli
insb
pushl
adc
xchg
and
pop
cmp
insl
mov
shl
cmp
xchg
pop
rorb
scas
jo
xor
ja
push
sub
jecxz
jl
jnp
scas
xchg
out
rcrl
fidivl
stos
push
push
xor
mov
mov
or
add
mov
mov
dec
popf
out
insb
inc
sbb
or
and
xor
sub
push
pop
in
ljmp
aam
push
mov
mov
xorb
addb
imul
sbb
icebp
sub
adcb
cld
mov
cs
cmp
inc
cmp
sub
xlat
mov
in
insb
int3
push
movsb
mov
jmp
or
faddl
xor
mov
fs
mulb
shrl
aas
outsb
pop
jl
jno
movsl
sbb
mov
sbb
jle
pop
cld
call
in
popf
lock
psllw
cmpsl
mov
shlb
push
inc
sub
addb
inc
push
jne
jge
add
outsl
cld
iret
sub
cmp
into
mov
xchg
insb
inc
pop
jno
jo
push
pop
std
movsl
jecxz
push
sti
jne
or
pushf
bound
push
inc
push
pop
daa
sbb
pop
mov
hlt
mov
test
pop
jnp
push
pop
mov
scas
stos
inc
xchg
push
jle
fnsave
or
lret
mov
cmp
mov
cmp
xor
adc
fs
push
push
sub
psubb
into
cld
stos
push
out
mov
push
negb
dec
push
pusha
or
fcompp
cmpl
push
imul
xor
mov
adc
fiadds
sbb
stos
xchg
int3
loope
in
aas
imull
fs
loope
icebp
aad
sarb
xchg
imul
mov
mov
mov
popa
daa
addb
mov
or
ds
ja
push
jno
jae
pop
call
ret
xchg
std
xor
stos
jbe
sbb
add
xor
xchg
mov
jnp
inc
aas
flds
lock
inc
and
das
sti
int3
scas
ds
imul
jae
lahf
xchg
ss
movb
adc
jne
loopne
cmp
ljmp
nop
cs
adc
cs
shll
mov
pop
xchg
shrl
mov
dec
shrl
lock
lock
aaa
mov
dec
mov
ja
jno
mov
mov
out
je
xchg
xor
js
testl
adc
pop
dec
and
mov
lods
xor
mov
int3
loopne
xchg
or
push
cltd
mov
pusha
add
jnp
ss
sub
push
xchg
loop
into
xchg
push
xchg
pop
xchg
pop
daa
inc
out
fcompl
popf
cmpsl
mov
and
outsb
fistpl
and
shrl
cmpsb
jne
mov
fucomip
pop
jle
cld
call
pop
add
jp
sub
pusha
mov
pushf
sub
xchg
stos
adc
cs
jne
jp
mov
cld
imulb
jp
in
mov
xchg
dec
rclb
int3
cmp
add
lock
jle
bound
out
fadds
sub
inc
sti
mov
movsl
mov
leave
mov
jle
mov
mov
lds
cmc
pusha
lds
in
movsb
lods
mov
xor
divl
pop
jle
les
lcall
out
pusha
int3
pop
push
bound
mov
xor
cmpsb
cmc
dec
adc
pushf
out
push
pop
lea
or
mov
fnstcw
aam
push
sbb
mov
imul
or
out
cmp
fldl
and
das
sub
dec
push
test
rolb
dec
divb
mov
divb
jle
cmp
pop
or
sbb
daa
push
mov
mov
sub
sub
fisubs
jg
pop
mov
cltd
les
mov
mov
jl
out
rcll
rcr
adc
mov
lcall
inc
xor
outsl
ljmp
popf
inc
xor
or
sbb
jno
sub
fdecstp
ret
adc
inc
lods
loopne
adc
push
dec
ret
sub
mov
je
mov
out
jge
or
hlt
orl
xorl
hlt
sbb
dec
xor
aas
mov
jp
rcrb
clc
popa
js
inc
adc
stos
sub
outsb
aas
or
push
mov
lods
in
mov
xchg
push
hlt
pop
cwtl
lds
movsl
lcall
jge
xchg
or
jge
and
fst
rcrl
cmp
sbbl
xor
pop
push
nop
push
les
add
ds
mov
cmp
insl
and
in
ror
into
cltd
add
adc
pop
lcall
pop
lret
subb
adc
push
int3
sub
popa
push
out
jno
out
xor
fists
inc
hlt
inc
inc
sbb
lds
add
rcl
sbb
mov
gs
inc
stc
stos
mov
jbe
negb
sbb
cmc
xchg
hlt
rcr
leave
je
adc
mov
mov
mov
mov
faddl
cmp
fsubr
not
dec
mov
xchg
jg
xor
pop
in
and
aas
insb
push
paddsb
rorl
jmp
push
sbb
jbe
stc
push
aaa
dec
dec
xor
push
lock
outsl
into
jl
xor
outsl
mov
ljmp
test
outsl
fimull
mov
rcll
jbe
das
push
push
adc
cmpsl
popf
in
es
xor
push
icebp
cmp
lcall
sub
and
outsb
mov
fidivs
fwait
sub
or
and
inc
jns
jp
push
nop
jmp
loopne
rorl
mov
jns
inc
sbb
outsb
mov
inc
sbb
xor
out
int3
mov
fsubrs
repz
mov
daa
stos
andb
clc
into
adc
rorb
jge
dec
in
loopne
dec
sbbl
cmc
dec
and
arpl
push
mov
pop
aad
cmpsb
cmp
sub
cmpsl
xchg
cld
dec
icebp
inc
mov
xchg
dec
lock
xchg
sbb
stos
sub
mov
out
or
pop
stc
add
dec
pop
testl
cmp
sub
inc
mov
xchg
adc
pop
loope
filds
and
das
insb
out
mov
mov
int3
cwtl
push
out
gs
xchg
pop
cld
and
fistpl
jg
xchg
into
dec
xor
or
or
daa
testl
cmp
scas
ljmp
sub
cmp
imul
mov
or
lret
cmpsl
cltd
out
andl
sub
pop
pushf
js
gs
xor
dec
push
out
stos
xlat
adc
mov
aam
rclb
dec
sbb
mov
pushf
or
repz
lock
xor
rol
cmpl
leave
sub
test
sbb
inc
sub
mov
push
jmp
fldcw
int
sbb
inc
inc
push
cmp
arpl
dec
mov
push
jl
jae
ja
adc
rolb
stos
cmp
repnz
int
mov
xchg
lds
fnsave
sahf
iret
shlb
jnp
inc
roll
loope
repnz
jnp
cmp
and
jbe
inc
rcrl
jg
xor
stos
nop
and
adc
jge
hlt
imul
push
popf
adc
ja
das
sahf
int
inc
add
insb
aam
mov
popa
call
into
pop
sub
fidivrs
push
repz
cli
pop
push
or
in
jl
push
and
fadd
add
or
xor
jno
mov
dec
out
pushl
and
add
jge
in
ds
je
testl
or
mov
mov
adc
aaa
testl
lock
insb
mov
sarl
mov
test
xor
std
ss
jb
cmp
aaa
data16
out
test
stos
xor
mov
aaa
mov
negb
rcrl
movsb
add
fnstcw
push
and
jle
mov
push
fucomp
xchg
sti
pop
dec
repz
and
repz
mov
lret
jae
add
loopne
daa
or
jecxz
mov
int3
or
pop
inc
adc
fwait
and
sub
mov
aas
fs
out
or
jbe
rclb
xor
out
call
fsubl
mov
popf
test
or
dec
mov
inc
cs
inc
mov
ret
xor
test
ja
push
jge
inc
pop
mov
add
mov
sub
loop
pushf
cmp
sbb
divb
push
mov
inc
nop
or
jne
ljmp
enter
adc
or
fisubs
add
cli
scas
out
addr16
xchg
popf
sbb
add
add
daa
push
or
stos
das
and
popl
push
shrl
xchg
and
popf
or
pop
xchg
mov
pop
pop
add
mov
cs
jmp
test
les
jmp
xchg
mov
sahf
ficomps
push
andl
scas
mov
aas
sbb
lds
pop
xchg
lock
xorl
sahf
jmp
jns
in
cli
cs
cmpsb
inc
ret
inc
jmp
call
andb
in
pop
or
js
sbb
push
xor
cs
pop
flds
adc
mov
dec
mov
push
xlat
stos
push
enter
scas
xor
out
inc
in
int
adc
in
in
xchg
lea
or
mov
jmp
cmp
lret
lret
sub
pushf
or
or
cmp
mov
in
cld
ljmp
push
sbb
idivb
ja
pop
adc
mov
push
pop
xchg
sub
pop
je
adc
cmp
jb
aas
push
add
shl
div
xor
imul
dec
lock
jecxz
push
ret
aad
outsl
ljmp
addr16
jo
inc
sbb
add
inc
pusha
push
push
pop
scas
unpckhps
test
leave
jl
xchg
xchg
rolb
jo
bound
push
lcall
dec
cmp
lret
inc
pop
adc
xor
inc
push
add
or
in
add
push
popa
stos
out
add
and
les
rorl
fdivs
das
in
lret
jl
arpl
and
and
jae
jns
and
enter
adc
cs
sub
out
fidivs
inc
push
adc
cli
jmp
int3
sub
in
add
lds
ficompl
outsb
xrelease
cmpl
shrl
and
sbb
cmc
icebp
xchg
push
inc
insl
xchg
gs
xor
lret
movsl
pusha
data16
sti
inc
mov
nop
out
cmp
push
sub
loop
test
js
xchg
fcompl
int3
ljmp
sbbl
sub
dec
stos
movsl
loope
jb
or
ss
cltd
jns
mov
lret
fbld
mov
cmpsb
hlt
fsubp
aam
adc
sub
sbb
cmpsl
in
push
sbb
stc
xchg
jl
pop
mov
leave
pop
lock
xchg
pop
dec
pop
inc
mov
mov
je
jge
sub
xchg
jmp
sub
jne
xor
cmp
add
push
xchg
pop
scas
addr16
and
pop
jg
jmp
mov
dec
push
mov
outsl
sbb
dec
or
cltd
inc
sbbl
outsl
pop
cmp
jmp
in
mov
iret
dec
or
adc
jns
xchg
xchg
jbe
cmpsb
ficoms
or
add
xchg
incb
add
xor
adc
push
xchg
enter
addb
fiaddl
ret
jmp
out
dec
push
out
sub
or
ljmp
ja
add
sub
clc
lods
arpl
test
xchg
add
ss
jge
push
fmulp
xlat
lds
adc
aas
push
iret
mov
cmp
cld
inc
or
out
movsl
jecxz
adc
mov
sbb
sub
ja
aas
les
in
lret
pop
xchg
fcoml
push
loop
aaa
push
sti
out
jmp
hlt
adc
or
pop
jnp
mov
or
mov
push
out
mov
mov
cmp
mov
cli
inc
mov
test
inc
fldl
sti
addb
fidivrl
add
ret
lds
and
push
inc
mov
sbb
jns
in
push
movzwl
cmp
fldln2
dec
int
idivb
inc
aam
scas
jns
sbb
sahf
sub
xor
shll
pop
das
sbb
push
jb
in
es
lret
dec
cmp
sub
dec
test
mov
cmp
jmp
test
jecxz
push
movups
popa
pop
popl
cli
mov
dec
out
imul
xchg
or
add
fidivrl
in
sub
lods
daa
mov
push
popf
hlt
mov
cli
xchg
xor
popf
inc
adc
mov
stos
jl
push
mov
cltd
decb
inc
imul
mov
xchg
jnp
iret
push
sub
sub
scas
divl
sbb
lods
sbb
leave
mov
scas
pop
popa
aam
and
mov
pop
in
mov
mov
inc
inc
add
je
call
mov
jl
gs
xchg
push
testb
insl
ficoml
add
or
adc
cmpsl
jle
shlb
lea
or
int3
pop
out
lret
dec
adc
dec
pop
add
cmp
iret
sti
lds
inc
push
int3
int3
in
jge
fs
mov
mov
or
jp
xchg
xchg
pop
mov
xor
ss
mov
cmp
sahf
push
pop
in
sbb
fcmove
es
outsl
push
jbe
inc
fsub
sub
sbb
es
sub
or
hlt
add
enter
mov
test
pop
scas
push
fadd
adc
sub
cld
xor
mov
sub
jge
arpl
fcom
sub
notb
xchg
loop
push
mov
dec
insb
pop
adc
push
stos
xchg
jg
pop
pusha
sub
cmp
mov
or
idivl
xor
or
cmp
aad
lds
and
mov
ficoms
sbb
mov
inc
rolb
xor
js
rcll
add
mov
shll
xor
xor
mov
les
or
stos
sbb
bound
sub
sub
xor
adc
sub
or
inc
mov
ja
and
fdivrs
xchg
pop
dec
push
arpl
stos
jl
das
cmp
sbb
pushf
xor
ret
cmp
jl
push
jl
mov
mov
imull
pushf
ret
les
adc
xchg
cmp
shl
or
test
aaa
push
pop
shll
push
sub
stos
insl
inc
xor
dec
xor
aaa
push
aad
or
dec
mov
xlat
mov
ljmp
mov
pushf
les
sar
outsb
call
or
lds
test
jb
xor
test
mov
xor
sub
cmp
fnstenv
push
jo
xchg
xlat
cltd
xchg
popw
andb
js
into
clc
push
notb
cwtl
xor
scas
movb
mov
push
mov
loope
js
dec
xlat
icebp
aaa
inc
jmp
or
and
sbb
sbb
sub
xor
nop
pusha
mov
rcr
push
lret
js
xchg
clc
push
push
loop
sbbb
outsl
add
mov
mov
lret
lea
call
sbb
popf
aam
mov
sbb
mov
xchg
mov
lock
test
pop
and
push
bound
hlt
push
lods
mov
outsl
push
mov
xor
sti
inc
mov
aam
adc
dec
cmp
mov
cmp
pop
stc
xorl
or
jne
cli
lock
leave
mov
cmp
mov
pop
pop
insb
sbb
lahf
pop
das
mov
sbb
gs
sbb
sbb
adc
mov
movsb
xlat
push
push
bound
adc
inc
sbb
outsl
cmpsb
int3
sbb
push
mov
xor
push
mov
jb
fadd
leave
leave
inc
imulb
imul
pop
jb
aas
mov
arpl
inc
or
das
xchg
in
test
push
aam
in
aas
sbb
dec
push
loop
jb
xchg
adc
mov
adc
add
int
repnz
jno
mov
cwtl
iret
jecxz
sub
jno
out
fisttpll
ss
int3
in
fadds
sub
xor
fsubr
shll
imul
int
ret
cmp
scas
add
push
cli
mov
sbb
mov
inc
cs
jns
sub
sub
adc
sub
jmp
mov
fistps
jae
sub
dec
cmpsb
jb
into
mov
int
push
push
cld
or
push
cs
cmpsb
push
lcall
nop
fdivl
inc
call
fldl
cmp
fmul
pop
inc
jmp
mov
fnstsw
int3
sbb
fadds
pop
ja
shll
sub
inc
jp
xchg
ljmp
pop
sub
pop
xor
lret
daa
jp
in
fs
mov
push
je
adc
inc
mov
sub
lea
jl
imulb
push
repz
xchg
gs
mov
call
repz
loop
inc
sarb
fcoml
mov
cmp
dec
push
inc
pop
pop
scas
mov
leave
push
inc
sub
push
jp
sti
push
mov
jp
pop
lods
push
cwtl
xor
or
enter
sbb
sub
test
xchg
jnp
test
cli
inc
mov
orb
cmp
jns
push
lods
cmp
xchg
xchg
cmp
test
sti
hlt
lret
inc
hlt
jbe
loop
sub
dec
stos
fcom
leave
aaa
lods
or
adc
lds
pop
xchg
je
jecxz
mov
outsl
inc
decb
inc
fsubrl
pushf
scas
mov
sbb
rolb
jno
inc
sub
jge
test
add
and
inc
dec
jmp
sbb
mov
sub
hlt
insl
or
or
jl
iret
cmp
pop
ja
jb
sbb
mov
mov
sti
imul
sbb
push
pusha
ss
sbb
mov
lods
ret
pop
fstl
adc
push
rolb
ret
cs
xlat
xor
sbb
add
dec
js
addr16
mov
dec
xchg
fwait
push
sbb
or
push
icebp
mov
pop
loopne
test
fisttpll
xchg
test
gs
mov
sbb
inc
jmp
mov
scas
dec
cmp
scas
mov
out
xor
scas
mov
dec
jbe
pop
pop
xor
mov
jne
xchg
jnp
or
lcall
mov
sub
or
ss
out
mov
lds
and
jae
jmp
mov
aad
dec
ficompl
xchg
ss
test
repz
cmp
cli
stos
scas
addl
scas
insl
cmp
sbb
sub
inc
inc
mov
xor
mov
jnp
ljmp
dec
mov
popa
mov
sub
xchg
cmpsl
stc
cmp
pop
pushf
cld
ss
repnz
push
ljmp
xchg
shlb
std
dec
in
or
ror
pop
and
pop
fcmovu
mov
insb
sub
cmp
js
arpl
loope
push
jo
jb
loopne
add
icebp
add
mov
xor
push
add
sarl
sbb
sbb
ret
dec
dec
jno
sbb
out
loope
in
jns
cmpb
mov
jnp
and
and
out
adc
xchg
inc
jp
daa
nop
sahf
aaa
mov
mov
pop
out
mov
xor
dec
mov
push
adc
mov
jns
cld
pusha
push
into
push
cmp
bound
xchg
mov
and
mov
sbb
mov
data16
rolb
push
sub
sub
sti
push
mov
jmp
sub
adc
jns
jle
mov
mov
mov
sub
cmp
push
or
inc
jl
sbb
push
or
pop
xchg
sub
ds
bound
dec
cs
in
imul
mov
mov
add
pop
xor
jg
mov
mov
adc
lods
mov
mov
sbb
call
mov
jbe
inc
lret
ret
sub
mov
hlt
fnstcw
sub
xchg
pop
jo
add
mov
xchg
adc
gs
and
jl
lods
mov
xchg
shl
sbb
and
inc
test
and
mov
and
pop
xchg
and
cs
add
add
xor
in
jl
imul
cmp
aas
jecxz
jmp
mov
push
sub
xchg
add
sbb
mov
ljmp
add
nop
sub
or
xor
or
mov
jle
adc
xor
adc
ficompl
lahf
xor
movsl
nop
sbb
clc
pop
xor
mov
pop
cwtl
sbb
mov
sbb
pop
adc
stos
pusha
test
data16
mov
sti
out
push
sti
xor
lods
addr16
xor
fdiv
push
adc
mov
mov
adc
aas
push
add
ret
sbb
es
mov
jp
sahf
mov
xchg
addps
mov
jae
icebp
push
and
sbb
hlt
push
cli
mov
push
jmp
aas
or
pop
ret
inc
jecxz
dec
hlt
lods
adc
inc
adc
mov
fdiv
stos
out
in
outsb
in
int
shll
add
clc
lret
push
sbb
leave
xlat
add
jbe
pusha
push
pop
sbb
pop
sbb
lret
mov
lea
mov
push
xchg
sbb
mov
dec
push
daa
push
int
repz
xchg
mov
aad
test
sbb
fimull
jno
and
xchg
sub
out
pop
lret
ret
shlb
and
add
push
jp
xchg
inc
jg
push
cltd
xchg
int
or
rcll
orb
fcmovbe
out
les
bnd
cmp
inc
sub
pushf
xchg
fidivs
jbe
shlb
fisubl
loopne
jmp
jl
xchg
lock
sarb
in
push
data16
ljmp
aam
inc
idivb
push
insl
add
dec
lds
or
adc
dec
dec
das
pusha
ret
mov
push
call
test
add
xchg
das
push
pop
enter
add
aam
jle
push
ss
and
mov
sub
out
imul
push
arpl
call
push
cmp
adc
add
inc
ficomps
scas
sub
sub
and
cmpsl
es
xor
shrl
icebp
jae
bound
test
lods
cmp
pop
cld
and
mov
cmp
pop
js
add
mov
out
jle
into
out
dec
mov
mov
fwait
push
insb
pop
xchg
insl
pop
cmpsl
lret
mov
mov
and
dec
mov
mov
cmpsl
dec
out
mov
outsl
movsl
movsb
dec
sbb
or
ljmp
cmpsl
shll
mov
ljmp
xor
cwtl
adc
cmpsl
imul
addr16
mov
insl
cmp
adc
in
pop
adc
jmp
mov
je
sub
jbe
and
cmp
mov
pop
pushf
push
inc
data16
cmp
add
push
outsl
sbb
pop
xchg
adc
sub
or
inc
inc
mov
repnz
pushf
push
xor
adc
xor
cs
xchg
xor
jo
lret
cmp
or
push
lcall
ror
sbb
jmp
sub
cmpsl
cmp
pop
jo
fldcw
jl
push
inc
lea
out
push
ss
sarl
stc
mov
xchg
pop
mov
cwtl
mov
dec
push
into
jae
clc
xchg
sbb
jno
cwtl
jp
lods
ret
push
cmp
and
cmp
push
jbe
popa
ds
adc
adc
sub
mov
xchg
and
mov
mov
fnstenv
es
xor
arpl
fdivs
fwait
cmc
test
imul
daa
and
mov
add
push
int3
cmp
test
pop
xor
out
add
aam
cmp
outsb
int
nop
sub
and
lods
sub
push
push
dec
pop
iret
repnz
es
cmp
xlat
iret
xchg
cmp
sbb
jno
sbb
push
pusha
sub
movsb
cmpsb
sbbb
mov
rcrb
cmp
mov
ret
pop
jge
jns
repz
stos
es
lods
add
cmp
xchg
xchg
inc
jecxz
jnp
adc
imul
ja
out
sbb
dec
xchg
std
sbb
and
xchg
ret
xchg
cmp
and
push
ss
xor
pop
repz
notl
mov
inc
and
xor
lock
xor
or
out
sti
push
dec
addr16
fiadds
xor
xor
inc
sub
clc
inc
aad
mov
push
es
xchg
or
pushf
mov
adc
sub
sub
cltd
ljmpw
lea
repz
les
shll
and
fmul
push
dec
jp
clc
popf
sbb
jle
fnstsw
pop
mov
xchg
add
cmc
xchg
mov
sub
daa
int
ljmp
scas
sub
inc
mov
cwtl
mov
and
ret
js
sbb
push
int
cwtl
xlat
test
hlt
adc
mov
pop
iret
ja
test
and
jb
stos
imulb
mov
movsb
scas
fidivrs
pop
or
outsb
mov
fidivs
push
out
sub
scas
dec
ficoml
sbb
rcrl
out
mov
mov
add
xchg
mov
jne
sbb
jge
and
inc
and
lock
and
xchg
mov
xlat
and
mov
or
orb
cs
add
push
shl
jbe
in
xchg
cwtl
pop
test
mov
pop
mov
inc
push
lea
movsl
mov
push
and
xchg
xchg
jmp
je
and
into
push
sar
in
lret
ja
cmp
movsb
push
inc
pop
sbb
pushf
sub
icebp
popf
cmp
and
arpl
gs
in
aad
insl
push
fwait
mov
sbb
pop
mov
push
dec
les
cmp
out
cmpsb
mov
push
mov
pop
mov
jo
jg
and
mov
dec
or
pop
cli
clc
pushf
ret
cld
ret
xor
dec
jmp
add
movsb
fidivrl
cs
inc
push
aas
lret
inc
inc
aad
loopne
mov
push
sbb
push
mov
dec
outsl
aad
loop
cmp
insl
push
cwtl
pop
push
addb
sbb
vpsrld
in
ficompl
loope
xchg
fnstcw
jp
pop
xor
sbb
arpl
nop
mov
push
pop
xchg
mov
gs
dec
mov
lock
fs
roll
insl
or
dec
lcall
inc
arpl
push
aas
inc
jecxz
dec
mov
repz
dec
jecxz
and
roll
xchg
insb
jo
je
sub
jmp
mov
cmpsl
pop
jb
sbb
mov
sub
mov
add
loope
bnd
cmp
adc
or
shll
sbb
mov
sub
sbb
mov
push
and
pop
pop
sbb
and
aas
xchg
push
cli
adc
mov
out
into
push
adc
mov
push
xchg
bswap
gs
mov
adc
cmc
int
adc
push
jno
mov
dec
sub
pop
mov
std
repnz
mov
and
mov
fcmovnbe
jb
sub
loopne
and
sarl
clc
ja
ret
push
add
jp
xchg
mov
jns
lret
mov
mov
jge
addr16
or
addr16
or
cli
cli
and
ds
push
push
mov
sbb
scas
ret
in
adc
ja
pop
pop
jmp
inc
lcall
insl
jno
outsl
sub
sub
lcall
xchg
xorb
popf
lods
cli
jle
out
in
mov
and
cmc
arpl
ljmp
mov
loope
inc
add
dec
pop
inc
adc
mov
pop
test
pop
into
pop
adc
ds
out
nop
add
xchg
and
mov
mov
xchg
sti
cli
es
sbb
lahf
xchg
push
cmp
loope
or
xchg
lea
inc
or
roll
cli
mov
push
jns
out
push
hlt
dec
sahf
adc
pop
mov
in
and
imul
js
lahf
add
or
sbb
xchg
ds
sbb
fwait
inc
pop
push
adcl
pop
mov
lea
xchg
cmpb
inc
sarb
cmp
cmpsb
xor
fcompl
lds
loop
gs
loope
lea
inc
cmp
push
icebp
push
xchg
push
fstps
fcomps
adc
loopne
test
dec
inc
scas
mov
or
mov
mov
test
sbb
loope
daa
add
adc
iret
testb
cmp
je
jne
data16
orl
mov
fucomip
mov
aaa
or
add
fisubrl
mov
stos
xlat
xchg
popf
mov
mov
adc
xor
sub
or
rcrl
ret
fisubrs
cmp
subb
popl
orl
sbb
push
mov
pop
sti
inc
rorl
and
jbe
mov
push
cltd
hlt
enter
push
sub
loopne
imul
int
push
or
outsl
mov
jo
sbb
inc
in
push
pusha
add
xor
out
scas
test
and
sub
jp
inc
adc
iret
mov
in
sbb
in
and
ja
test
sbb
sahf
jg
sahf
xchg
out
adc
sub
jp
adc
sar
push
popf
push
xchg
or
lret
xchg
jecxz
sbb
sti
test
sub
push
and
stc
sub
cmp
jecxz
mov
dec
mov
in
fs
pop
aad
pop
cmp
les
push
xlat
or
mov
mov
or
ret
and
jno
repz
lahf
in
sahf
push
mov
sbb
or
lea
jno
sub
in
test
call
sub
mov
fdiv
mov
push
mov
insb
pop
lret
add
mov
daa
mov
popf
pop
rcrl
negb
mov
mov
jns
fs
lds
ret
cli
int3
testb
mov
lods
je
cmp
push
dec
arpl
sbb
inc
in
leave
and
cmpl
daa
cmpsb
jl
ja
xchg
sub
cmp
push
cmp
sti
mov
xchg
cmp
data16
lods
sarb
lret
adc
in
mov
and
cmc
arpl
cltd
loopne
or
call
xchg
sti
push
inc
sbb
add
out
inc
jo
or
nop
mov
insb
jp
add
or
jno
sbb
icebp
loopne,pn
sbb
jo
mov
xor
lahf
incl
push
add
int3
sti
jo
ja
ss
mov
scas
xchg
cltd
mov
jne
sahf
cwtl
cmpsl
xchg
mov
jle
sbb
imul
xor
in
orb
rcrb
jnp
push
and
lcall
inc
ljmp
pop
jg
inc
lret
mov
sbb
inc
pop
fldcw
xchg
xchg
mov
roll
mov
push
dec
fs
inc
jmp
imull
negl
aad
mov
add
clc
mov
adcb
inc
pop
stos
and
outsb
inc
and
fcomp
lods
subb
cld
in
outsl
aaa
loop
xchg
cmpsb
lret
xor
cmpsl
sub
xchg
inc
into
pop
ficompl
aad
xchg
bound
in
jl
fistpll
fs
aaa
lahf
arpl
mov
shrl
dec
jp
and
mov
test
and
ljmp
sti
lret
daa
mov
ret
sbb
push
mov
lret
mov
mov
repnz
ja
sbb
jmp
rol
mul
mov
sbb
mov
movsl
cmp
test
mov
mov
xchg
cmp
xor
or
subb
and
aam
pop
test
push
push
or
leave
mov
jno
movsl
test
je
stos
dec
xlat
int
shl
scas
or
adc
sub
xchg
stos
insb
push
cmp
xchg
das
mov
dec
mov
jbe
xchg
pop
scas
movb
jmp
mov
cltd
adc
push
cmp
add
loop
lock
jmp
mov
jne
or
add
pushf
or
cli
and
stos
fdivr
imul
sbb
loope
mov
pop
cmp
outsl
dec
test
in
dec
outsl
shrb
pop
xor
and
sbb
out
push
dec
dec
pop
or
or
xor
int
cmp
out
aaa
cmp
rcll
test
stos
mov
outsl
ljmp
sub
push
mov
mov
scas
fmul
shlb
xlat
mov
cltd
dec
fcmovne
mov
sbb
ljmp
test
add
add
dec
cmpsb
xor
mov
jns
mov
cmpl
aas
mov
shr
sbb
ljmp
imul
xchg
xchg
sub
mov
jnp
jge
jo,pt
pushf
loope
xor
mov
pop
sub
mov
mov
pushl
pop
adc
lret
pop
cld
push
push
cmp
test
int
test
sub
stos
data16
jne
outsb
xchg
inc
push
enter
insl
fwait
jno
inc
les
scas
call
in
dec
mov
jnp
sbb
lret
pop
hlt
je
push
push
test
sbb
push
imul
ror
loope
aam
mov
dec
push
cli
mov
push
rol
sti
mov
mov
imul
or
xor
stc
mov
push
bound
leave
and
shlb
fistps
mov
dec
mov
ds
pushf
cmp
cmp
fcmovnb
adcl
fs
lret
pop
sbb
cmpsl
in
sbb
adc
sar
lods
or
out
jbe
jns
add
push
out
sub
and
jne
xchg
mov
int
sub
mov
pop
cs
lahf
shlb
clc
mov
inc
jl
and
and
and
call
popa
out
xor
mov
or
inc
outsl
cltd
js
mov
lds
cs
mov
jne
jle
sub
mov
add
popl
sbb
mov
in
imul
enter
jmp
cld
out
rcr
jg
sbb
xchg
lods
orb
lea
cmp
loope
adc
ds
dec
ss
xor
adc
dec
rol
xor
mov
mov
daa
cmpsb
mov
mov
int
das
rcrl
pop
mov
fldenv
mov
dec
shrb
dec
jne
dec
mov
dec
cmp
mov
push
cmc
aam
inc
jo
mov
fcoml
jbe
xchg
jo
push
pop
and
dec
mov
nop
add
lea
js,pt
xor
clc
push
into
insb
and
dec
add
lds
lods
pop
mov
negb
mov
mov
cmpsl
insb
stos
addb
xchg
xchg
aaa
test
mov
lcall
mov
cmp
ljmp
xchg
lret
ss
or
jae
je
lret
in
mov
push
mov
out
adc
cmp
cld
fdiv
pusha
fstpl
xchg
push
loop
jb
bound
or
pop
mov
mov
inc
mov
iret
ljmp
stos
push
sub
mov
pop
pop
dec
shll
jns
push
scas
push
imul
rcll
inc
xor
add
dec
dec
lcall
popf
pop
jnp
and
sbb
aad
add
fdivrl
push
mov
jmp
pop
int
iret
jg
lret
aas
fcos
cli
lret
fldenv
add
imul
mov
lods
dec
scas
addb
sbb
jnp
cmp
sub
mov
and
cmp
outsb
daa
add
mov
outsb
lret
jg
lock
jb
imul
or
push
push
roll
xlat
stos
mov
inc
pop
xchg
mov
xchg
in
int
ret
xor
inc
xchg
adc
push
adc
add
push
clc
fsubrp
jl
les
jmp
in
or
push
sbb
and
test
push
adc
and
or
adc
cmpl
out
sbb
int
xchg
mov
adc
iret
ss
sbb
sbb
pop
dec
sbb
xchg
in
loop
out
ret
mov
xchg
subb
pop
xor
inc
jg
repz
pop
sub
sub
test
mov
inc
bound
popl
jmp
and
out
stos
cmp
in
lahf
movb
xor
nop
jns
cld
pop
inc
sbb
mov
shr
or
jns
pop
fdivl
mov
sbb
xchg
add
xchg
add
cli
scas
xchg
dec
clc
push
in
je
shrl
and
fimuls
aaa
jl
fwait
int3
out
jl
in
inc
or
xor
and
mov
insb
icebp
stos
sub
jmp
es
mov
pop
stos
dec
das
ss
push
fcoms
pop
jne
pusha
sbb
add
pop
popf
ss
pop
jmp
mov
mov
sub
xchg
mov
pop
rcrl
sub
cltd
cmp
cmpb
or
push
jnp
jne
cmc
out
adc
inc
mov
push
mov
fmulp
xor
adc
push
push
repz
mov
jae
hlt
jnp
les
xor
je
icebp
ljmp
int
jle
inc
insb
inc
cld
into
mov
mov
push
xchg
imul
mov
outsb
push
adc
mov
and
testb
insl
inc
pop
jg
dec
mov
test
mov
cmp
lea
shl
int
daa
push
adc
adc
or
sub
iret
xchg
add
push
xchg
cmc
out
in
or
pop
pop
add
iret
imul
cmp
mov
xor
addr16
inc
sti
loopne
xchg
cwtl
fsubr
dec
xchg
cld
mov
les
pop
push
je
mov
orl
stos
inc
loop
cld
cmpsl
std
call
test
ja
pop
cmp
dec
add
and
cmp
mov
test
or
cmp
sbb
pop
outsb
xchg
cmp
clc
repz
dec
dec
add
xor
out
mov
test
out
bound
sub
adc
insl
ficoml
xchg
repz
shll
sbb
jmp
fwait
xchg
sub
adc
and
adc
add
rorb
or
stos
or
pop
cmp
mov
or
addr16
ror
lahf
clc
pop
inc
sbb
test
ja
xor
jg
cmp
cmp
inc
mov
jge
imul
shlb
loop
mov
das
dec
sub
pop
mov
pop
xchg
lret
dec
fstpt
and
and
icebp
outsl
pushf
fiaddl
daa
adcl
adc
or
mov
push
scas
insb
mov
and
into
or
into
pop
cmpb
jge
xchg
push
lock
repnz
lret
sbb
push
mov
push
push
pop
cmpsl
hlt
pop
ret
xlat
icebp
les
aaa
cmp
xchg
ds
scas
out
mov
enter
sarb
nop
jle
shlb
cmpsl
or
aam
lods
pushf
outsl
aas
out
mov
js,pt
jnp
hlt
scas
jmp
xchg
loop
dec
mov
mov
pop
mov
xchg
shrb
jb
and
or
popa
jle
push
mov
daa
subl
mov
js
aas
inc
add
stc
clc
test
mov
cltd
stos
or
hlt
sub
pusha
inc
mov
loop
outsb
int3
pop
push
xchg
in
pusha
xchg
and
pop
adc
xlat
pushl
lock
sti
jg
stos
push
loope
cmp
and
cli
rorl
scas
inc
ret
inc
push
shrb
mov
nop
add
fimull
movsl
fsts
sbb
push
fildl
clc
out
sub
ss
jns
fcmovnu
in
mov
mov
cli
leave
fisttps
dec
push
pushf
push
fs
loopne
and
mov
push
repz
xor
xchg
js
pop
push
push
iret
push
mov
js
sub
fwait
adc
test
jnp
mov
ja
pop
or
addb
lret
xchg
lock
pushf
repz
mov
inc
stos
push
sbb
mov
add
push
push
pop
jle
mov
adc
sti
add
sbb
and
je
inc
jnp
sahf
sbb
mov
mov
popa
or
fsubl
in
cmp
adc
inc
dec
ficomps
pop
fcoms
pop
push
movsb
cld
sub
cmpsl
cmp
and
push
mov
cli
clc
cli
jns
popf
adc
cld
test
sub
loope
mov
or
mov
hlt
xchg
dec
or
dec
jmp
inc
mov
mov
adc
repnz
jno
cmp
in
xchg
and
daa
cwtl
dec
cmp
shll
adc
adc
xchg
sbb
popf
ficompl
or
bnd
scas
mov
in
inc
dec
imul
aad
add
or
pop
xchg
nop
sub
js
bound
dec
pusha
movsb
sbb
stc
push
push
rclb
in
imul
lods
cwtl
mov
lds
lods
cmc
jnp
in
rol
push
adc
out
fwait
inc
jo
pushl
jecxz
pop
xchg
and
mov
mov
jns
rcrl
sbb
adc
lahf
xchg
add
inc
bnd
sbb
fisubrl
out
sub
mov
fstps
lret
lock
rolb
addl
sub
fcmovnu
pop
mov
xchg
jg
inc
mov
cld
mov
add
and
push
dec
lea
mov
inc
push
jp
ljmp
jle
fisubl
movsb
lahf
mov
aam
cmp
add
or
push
clc
mov
push
mov
dec
pop
ds
cld
shl
xor
addr16
dec
es
hlt
popf
gs
add
andl
popf
adc
push
movsl
pusha
push
sub
aad
int
and
or
xchg
push
jge
add
jbe
adc
inc
jmp
movsl
inc
stc
addr16
call
jle
jmp
xlat
orb
xorb
sbb
arpl
mov
mov
inc
test
ret
insb
lcall
lds
mov
and
data16
cmp
sbb
or
mov
aam
ficompl
insb
or
jge
pop
shl
test
mov
lahf
inc
ja
xor
push
cmp
mov
scas
sbb
je
daa
mulb
sub
stos
jae
jnp
xor
sub
sub
xchg
push
enter
mull
rorl
inc
xchg
cwtl
stos
or
cmp
jno
arpl
shll
or
pop
sarb
dec
push
gs
jb
sbb
push
pop
fmull
fwait
int3
xchg
je
adc
push
fdivrl
fstpl
inc
arpl
imul
add
pop
inc
fidivrs
jp
ret
in
fwait
scas
ja
add
mov
int
jge
jecxz
sbb
sbb
lcall
call
jl
int
js
mov
and
fidivs
ljmp
mov
jbe
xchg
lds
pop
imul
pop
loopne
popa
pop
xorb
pop
lods
adc
lahf
xor
push
mov
and
jg
sbb
pushl
cli
in
xor
iret
hlt
ja
sbb
clc
lret
test
jo
test
insl
adc
cli
lret
or
push
fdivrs
xor
mov
popf
inc
add
scas
inc
enter
icebp
cmp
xchg
outsl
repz
dec
adc
repnz
ret
sbb
inc
ficomps
ja
test
inc
xchg
out
fsubrl
jae
imull
add
push
fwait
mov
arpl
lods
jns
mov
mov
arpl
or
mov
mov
xor
xchg
sub
sub
adcl
test
jb
inc
push
jmp
jb
jae
jecxz
scas
shr
or
cmpsl
mov
inc
hlt
int
mov
push
repz
cltd
mov
sub
jo
scas
pop
pop
xchg
jo
push
sbb
cmp
mov
int
fstpl
or
xchg
insl
adc
setp
pushf
sub
ja
pop
or
pop
scas
cld
dec
jb
cmp
aas
fnstsw
inc
add
dec
fucom
fwait
xor
and
repz
shrb
jge,pn
xchg
dec
inc
pop
mov
in
dec
sub
imull
dec
adc
testl
or
hlt
pushf
add
add
mov
and
push
xchg
cli
cmp
dec
inc
fwait
pop
es
sub
stos
test
or
xchg
and
mov
push
fsub
mov
or
inc
sub
cmp
and
test
xchg
dec
leave
psubd
enter
xchg
daa
repnz
jo
push
int
out
adc
xor
gs
mov
mov
bound
mov
xlat
mov
lret
mov
xlat
test
cmp
stc
push
stc
dec
dec
pop
mov
dec
mov
cmpxchg
push
scas
mov
sbb
lods
ret
adc
add
sbb
shlb
sbb
lahf
decb
pshufw
xchg
mov
sbb
xchg
lahf
dec
test
gs
fldln2
pop
out
sbb
pop
sarb
test
lods
ret
sbb
xchg
addr16
cwtl
mov
pop
pop
ds
daa
cmpsb
pop
adc
sbb
enter
cmp
inc
sbb
push
push
pop
or
ds
aaa
cmp
or
cmp
jo
mov
inc
xchg
xlat
push
inc
inc
int3
cmp
sarb
pop
nop
xor
fs
popa
jne
cli
xor
adc
popl
stos
sbbb
inc
or
sbb
popf
daa
gs
enter
push
cli
mov
adc
or
pop
jmp
lock
jmp
jg
les
ds
in
sbb
mov
sti
sahf
notl
in
xor
mov
push
sub
subb
out
push
sub
mov
js
push
sbb
push
push
push
cmp
sti
ja
push
and
in
pusha
jg
adc
fnstenv
or
add
shrl
jp
adcl
sbb
and
cmc
test
jmp
outsl
call
cli
int3
loop
inc
pop
insl
out
cmp
adc
and
or
adc
sbb
xchg
mov
fildl
pusha
lods
pop
pop
mov
lds
aas
outsb
mov
addr16
popa
push
adc
int
pop
cli
inc
jne
mov
xor
cltd
xchg
dec
xchg
out
mov
push
xchg
jecxz
sbb
fstl
mov
mov
mov
jo
outsl
adc
add
adc
cmp
mov
mov
lds
add
cmp
clc
iret
dec
adc
call
aas
mov
sub
shlb
adc
das
repz
pop
fldenv
sahf
fucomi
adc
sbb
jnp
clc
xchg
movsb
and
inc
push
jecxz
push
mov
inc
es
bound
shlb
sbb
cmpsb
test
xchg
test
gs
add
daa
adc
jg
cmp
adc
mov
xor
gs
int
andl
inc
addr16
xor
enter
mov
sbb
xchg
adc
xor
das
cmpsl
mov
mov
sarb
andb
sbb
imul
outsl
pop
scas
popa
outsb
sahf
pusha
push
mov
in
push
mov
cmp
jmp
sub
or
dec
pop
xchg
imul
leave
mov
mov
jge
lahf
movsb
stos
jmp
and
mov
xor
xchg
jl
xor
loopne
mov
xchg
push
int3
rcl
das
xor
mov
push
fsubr
xchg
cmp
test
jmp
push
mov
aas
imul
ss
or
jno
packssdw
pop
mov
or
imulb
insb
mov
push
insb
shrb
and
or
lds
cmp
xchg
add
cmpsb
lret
sti
or
dec
movsl
and
mov
out
mov
pop
or
mov
push
pop
cmp
les
push
dec
xor
punpckldq
mov
data16
mov
imul
mov
inc
daa
inc
sbb
add
sbb
jo
in
push
or
add
mov
cmp
loop
cmpsb
orl
imul
pop
cmp
mov
lret
jns
xor
ja
in
mov
sub
sar
adc
icebp
outsb
addl
mov
ret
sahf
push
xchg
popa
aad
xchg
xchg
adc
stos
xchg
lea
pop
pop
mov
test
dec
addr16
jbe
or
pop
push
iret
pop
adc
jmp
mov
js
dec
fs
inc
loop
jo
shl
mov
dec
fs
out
adc
icebp
mov
mov
dec
push
or
call
lret
add
cmp
mov
and
dec
filds
sbb
push
dec
add
push
sub
andl
xlat
mov
inc
in
adc
popa
xchg
mov
pushf
mov
lahf
pop
lret
ss
adc
add
testl
xchg
cltd
divl
cmovl
call
adc
cwtl
push
mov
outsl
and
and
jno
int3
xor
lcall
clc
rorb
mov
mov
movsl
adc
fwait
loope
rcr
pop
lret
data16
daa
call
pop
pop
push
jnp
lret
stc
cmp
imul
fsubrl
add
xchg
pop
arpl
test
imul
xor
cmpsb
je
and
inc
inc
push
insl
mov
imul
loope
push
cmc
mov
pop
adc
js
mov
cmpsl
dec
insl
rol
testb
inc
sub
nop
inc
sub
out
jle
imul
jnp
loopne
stc
je
in
jecxz
fwait
mov
popa
mov
test
repnz
and
dec
daa
fcmovb
dec
ja
mov
jbe
xor
pop
pop
push
sub
mov
out
int3
push
cmpsb
fisubs
xlat
xchg
fstl
pushf
fadds
push
data16
cmpsl
xchg
mov
in
push
cltd
mov
adc
cmpsl
sbb
movsb
fbstp
pop
cmpsb
cmp
ja
sbb
inc
int
sub
in
std
inc
cmp
fimuls
gs
ds
inc
inc
dec
out
xchg
in
ret
cmc
adc
dec
mov
xchg
jb
decb
adc
jp
jae
pop
ljmp
aaa
adc
add
cmp
and
push
cmp
pusha
inc
inc
movsl
push
dec
jge
popa
cmp
mov
inc
lds
pop
mov
testb
and
cwtl
fdiv
mov
xchg
mov
scas
leave
xchg
sarb
popf
pop
dec
rorl
es
sub
cltd
push
mov
imul
fstpt
xchg
xor
loop
inc
enter
dec
rcrl
lods
outsl
xchg
andb
in
inc
out
inc
mov
cld
mov
push
xchg
repnz
and
pop
inc
filds
jl
and
dec
pop
movsl
cmpsl
lahf
jmp
jp
ret
pop
and
pop
ljmp
mov
inc
enter
stc
inc
xor
je
out
mov
fcoml
pop
sub
mov
ds
jmp
cmc
mov
sbb
loopne
sub
or
xchg
xchg
ja
and
push
push
cli
dec
out
xadd
jno
push
jbe
stc
sbb
mov
inc
push
daa
pop
jecxz
xchg
movb
and
je
in
ja
sahf
outsb
jnp
aas
dec
pop
sbb
nop
outsb
andl
leave
sbb
pop
mov
sarl
test
push
jns
and
mov
xchg
lods
idivl
or
decb
xor
and
and
xor
mov
mov
add
cmc
int3
dec
xor
clc
inc
fisubs
sub
imul
cmp
mov
xchg
fiadds
ret
mov
cmp
les
cmpsb
lahf
sbb
jnp
inc
cmp
fsubrp
jp
in
xor
and
adc
mov
shrl
mov
sbb
mov
dec
push
repnz
daa
ret
push
sbb
jb
pop
push
cwtl
popf
out
repnz
cltd
stos
imul
cmc
fidivrl
inc
xchg
fisttpll
mov
lds
sub
jae
ljmp
add
jmp
insl
mov
inc
je
cli
inc
dec
jmp
bound
andl
mov
out
cmpsb
loope
arpl
mov
and
sbb
sbb
iret
insb
jge
xor
pop
push
dec
cwtl
and
adc
push
and
sbb
mov
test
in
fcmovnu
fdivp
mov
pause
mov
pop
pop
jno
ss
pop
icebp
inc
mov
and
loope
es
std
clc
out
pop
fsubr
sub
mov
mov
mov
lcall
movsl
mov
sbb
clc
mov
repz
fstl
push
daa
hlt
mov
jl
je
xchg
xchg
mov
scas
mov
and
inc
xchg
repnz
test
jns
cmp
imul
scas
pop
ss
sbb
mov
daa
lret
or
add
test
sub
repz
and
xchg
ret
mov
xor
add
loopne
sbb
xchg
loope
aam
pop
fs
aam
call
fsts
daa
fcoml
insb
and
xor
lcall
lret
outsb
mov
outsl
xor
add
rorl
inc
inc
imul
sbb
mov
movsl
daa
scas
fidivrs
xchg
sbb
jmp
push
aas
incb
mov
or
jns
xlat
sub
mov
inc
pop
imul
xchg
outsb
into
cmpsl
dec
xchg
bound
ljmp
xor
loop
loopne
sub
pop
mov
leave
mov
sahf
xor
pop
xchg
test
fwait
stc
mov
out
jnp
mov
nop
dec
mov
mov
movsl
push
mov
mov
js
stc
jns
push
icebp
and
xchg
mov
fistpl
sub
clc
movsb
and
cmp
inc
addr16
push
addb
rol
or
add
dec
lds
pop
xor
adc
cmp
push
or
std
daa
fisubrs
push
and
aad
int
ss
mov
xchg
cmp
add
rcl
inc
scas
add
mov
test
jb
fwait
in
loop
stc
inc
popa
movsb
jle
xchg
cmp
mov
add
xor
roll
nop
cmp
fs
jecxz
aaa
add
xchg
add
popf
fistl
mov
cmp
orl
movsb
and
xchg
loope
push
and
les
sbb
xchg
lret
inc
xchg
xor
testb
xlat
into
jge
cld
sub
mov
pop
cmc
jmp
mov
fimull
sbb
cmp
das
stc
xor
sbb
dec
cltd
push
add
fs
mov
arpl
pop
mov
fldl
data16
cmp
daa
pop
cmp
push
lret
cwtl
ret
addr16
int3
cmpsb
push
lods
jge
push
sbb
cmpsb
dec
test
or
rcr
pop
sbbl
sub
add
out
out
outsb
inc
push
sbb
jae
in
mov
push
sbb
cltd
clc
jo
lods
enter
je
mov
out
dec
mov
rcll
jg
push
mov
jmp
rorl
shr
sbb
jns
fidivrs
hlt
push
cmp
shr
jge
push
sub
and
xchg
sub
rol
push
and
mov
ljmp
pop
push
bound
inc
sub
fldenv
push
mov
sub
mov
repz
imul
cmp
loopne
imul
pop
adc
inc
add
gs
xor
cwtl
ljmp
sbb
addr16
divb
int3
mov
cltd
inc
add
data16
loopne
xchg
subl
push
test
cld
jp
add
inc
xchg
or
add
mov
and
inc
pop
out
add
ror
pusha
mov
cmc
jg
sbb
sbb
jl
jge
cmp
aam
jo
imul
mov
add
inc
sub
sbb
shll
aas
std
pop
mov
jae
pop
popl
pusha
lcall
mov
inc
sbb
scas
mov
push
xchg
lret
pop
xchg
xor
add
sub
inc
aaa
inc
cltd
push
sbb
stos
mov
inc
jge
pop
mov
jge
sub
adc
cmp
inc
jne
inc
push
scas
aad
pop
inc
sub
repnz
cmc
das
xchg
mov
xor
mov
cmp
lea
int
js
movsb
ret
hlt
sub
or
rclb
mov
imul
stos
cmpsb
lcall
dec
ljmp
call
push
sub
daa
out
das
movsb
cltd
push
fadds
pop
mov
cmp
sbb
sub
mov
es
loopne
sbb
mov
inc
shll
xchg
fsubl
filds
fucomip
dec
pop
sahf
mov
lret
pop
cmp
push
loop
popa
cli
inc
ret
sbb
or
lock
dec
cmp
out
mov
jae
std
add
imulb
xchg
insl
mov
cmp
cmp
loop
xchg
popfw
pop
mov
jg
in
sub
cmpl
adc
lea
mov
jbe
jge
leave
and
mov
mov
daa
or
push
or
cwtl
mov
cwtl
ret
pop
adc
loope
pusha
popf
cmp
lds
bound
je
aas
stos
and
dec
mov
dec
dec
mov
jl
sbb
add
cmp
mov
decl
sub
imul
dec
and
mov
mov
and
sub
adc
and
ss
in
in
push
xor
mov
cmp
aas
mov
mov
pop
adc
lret
data16
mov
adc
mov
cmp
inc
lcall
cmp
and
pop
pop
adc
clc
inc
jne
test
adc
sbb
mov
push
fdivs
out
xchg
repz
xor
ss
adc
mov
xor
out
dec
popf
jge
cli
adc
mov
mov
pushf
dec
out
add
and
or
out
addb
shrb
pop
xchg
and
sbb
push
xchg
sbb
sbb
in
aas
mov
xchg
xchg
cmp
mov
call
cltd
pusha
test
ds
push
cmpl
adc
fcmovb
lea
js
popa
lods
test
ljmp
push
cmpsb
mov
aas
pusha
rcrb
cmp
push
xchg
shrb
adc
inc
pushf
jg
adcl
mov
or
jno
xor
cld
ret
loopne
adc
les
imul
or
aad
idivb
or
jl
dec
mov
adc
sbb
xchg
enter
dec
lods
sti
mov
mov
scas
movsl
outsb
sahf
or
les
sbbb
adc
fld
sbb
or
daa
in
out
cmp
mov
mov
push
pop
jle
xchg
adc
cmp
push
push
fs
clc
mov
sub
pop
rcl
div
movsl
or
adc
xor
incb
mov
dec
xchg
pop
roll
push
lret
ja
push
popf
mov
xchg
cli
push
imul
mov
sbb
sbb
sbb
sbb
stc
pop
mov
mov
sub
jno
lcall
mov
movsb
test
push
and
popa
dec
jbe
inc
pop
xchg
mov
pusha
cmp
fwait
adc
mov
fs
imul
test
mov
cmp
push
fisubs
xor
jg
jns
notl
jne
in
lea
jmp
fmul
clc
mov
pop
repnz
sbb
int3
mov
in
jnp
fldenv
cmpl
stos
add
sbb
jo
mov
sub
push
test
inc
cld
lret
sbb
inc
rcl
in
stos
arpl
test
out
pop
mov
clc
fcoms
sbb
cwtl
cmp
ret
xchg
sbb
push
outsb
inc
pop
and
mov
xchg
or
lret
inc
lods
sbb
sub
in
incb
inc
xlat
test
pop
sarl
les
jo
stos
ret
idivb
mov
pop
cwtl
call
inc
sahf
mov
mov
pop
mov
and
jl
jb
pop
mov
fidivs
popa
mov
mov
mov
jmp
repnz
sbbb
repnz
push
xchg
enter
push
xchg
mov
roll
xor
dec
fwait
lods
div
pushf
inc
xchg
int3
mov
and
inc
call
je
jnp
cmc
pop
cmp
dec
mov
mov
mov
or
lret
out
mov
push
xchg
jnp
js
fnstenv
stos
cmp
unpckhps
mov
jae
lock
fcmovbe
inc
mov
mov
jmp
rol
cwtl
cmpsl
inc
in
imulb
or
xor
pop
inc
orl
push
movsl
test
scas
loope
nop
adc
inc
xor
pop
stos
outsb
cmp
jne
les
call
xchg
mov
imul
mov
cmp
xor
and
rcr
xchg
add
hlt
addr16
jne
pop
out
fbld
xchg
jbe
lods
mov
sbb
mov
icebp
adc
leave
mov
into
mov
and
icebp
mov
sub
or
sub
adc
adc
jae,pn
adc
out
xchg
dec
xor
insl
xor
fwait
dec
mov
test
movsb
rcr
daa
mov
add
lea
pop
mov
sbb
ljmp
sahf
push
inc
mov
jg
xlat
add
rorl
jbe
imul
inc
add
push
mov
xchg
lcall
mov
aaa
adcb
sarb
orb
push
sahf
ret
mov
cmpsb
add
pop
les
enter
cltd
push
in
data16
leave
sub
xchg
xor
lcall
mov
push
je
rolb
or
push
lahf
repnz
cld
jp
rorb
cmpsb
jo
loope
push
test
jecxz
xor
and
mov
dec
out
xchg
out
outsl
push
outsl
leave
sub
iret
adc
or
ljmp
scas
push
loope
addr16
pop
mov
add
push
ljmp
mov
adc
xor
sub
out
repnz
or
xchg
fimuls
mov
pop
shll
mov
add
push
leave
stc
ss
xchg
cmpsl
cmpsl
jmp
adc
inc
push
push
xor
and
clc
sti
test
stc
rol
scas
xchg
dec
push
push
mov
enter
push
jbe
aaa
or
xchg
cmp
xchg
lcall
fsubrl
mov
sbb
mov
dec
in
arpl
jge
addr16
jae
fwait
cltd
js
fiadds
cmpsb
test
bound
mov
inc
stc
mov
fisttps
mov
dec
and
mov
inc
pop
push
loope
lret
shll
and
fwait
lahf
dec
push
push
xor
pop
sbb
pusha
mov
jle
mov
bound
out
clc
sbb
sbb
movsb
bnd
jbe
ret
push
pop
adc
or
ja
enter
jecxz
push
pop
outsl
test
imul
scas
adc
push
test
cmpsb
neg
push
in
adc
jmp
gs
pop
inc
mov
movsl
push
imul
mov
test
std
pop
jge
cmp
sbb
ds
jecxz
scas
mov
xlat
inc
sti
mov
xor
inc
out
lds
cmp
jecxz
inc
enter
inc
and
push
dec
cmc
xchg
mov
mov
push
push
subb
hlt
xchg
ds
sub
cltd
and
fbstp
stc
jo
mov
push
roll
lahf
pop
in
out
mov
js
out
xchg
pusha
pop
pop
mov
push
jns
fildl
loopne
and
push
in
stos
scas
fld
rep
cmp
ds
dec
loope
xchg
cmpsl
sub
int
aaa
xor
xchg
push
inc
unpckhps
mov
xchg
cmpsb
adc
cmpb
push
iret
sub
xchg
adcl
cmp
sub
mov
mov
jmp
cs
mov
jnp
push
in
ffree
mov
imul
sbb
mov
jae
mov
and
jbe
aaa
sar
xchg
jp
sub
push
daa
fistl
sub
mov
pop
mov
enter
inc
inc
jmp
in
mov
push
cmpsb
insl
cmc
xchg
add
xor
hlt
cwtl
push
pusha
out
mov
je
lea
ret
xor
ljmp
subl
xchg
shlb
shlb
scas
mov
fiaddl
sarl
adc
sbb
insl
mov
add
xor
cmp
pop
and
ljmp
sub
ss
sub
xor
or
cld
jno
adc
imull
and
jne
scas
lock
dec
std
sbb
movsl
dec
in
or
sbb
movsb
sbb
mov
and
mov
imul
inc
adc
xchg
testb
js
insl
cmc
fwait
jb
testl
mov
and
pop
xchg
loope
scas
fcmovnbe
jl
ja
sub
pop
aam
jae
pop
mov
loop
cmp
je
xchg
sbb
sub
call
mov
add
aad
mov
add
jmp
cld
mov
inc
stc
jp
jg
xchg
cmpsl
pop
adc
cs
es
bound
lcall
mov
adcl
sbb
das
push
inc
pop
hlt
add
or
cmp
pushf
pop
addb
jecxz
xor
cmp
or
add
sub
fcom
jge
out
je
xor
fisubrs
arpl
jle
jg
mov
scas
insl
loopne
dec
bound
imul
xchg
scas
loop
xor
or
enter
xchg
cli
les
xchg
shrl
lret
mov
inc
adc
cmp
dec
les
jge
out
cmp
xlat
cmp
xchg
stos
dec
jb
pop
mov
mov
and
inc
mov
jae
mov
int
lock
pop
push
test
lock
mov
push
adc
call
fcoms
ja
and
scas
pop
cmpsl
fisubrl
pop
rolb
mov
or
cmp
cli
push
push
xchg
lds
pop
dec
inc
inc
in
fsubrs
sti
shrb
xchg
pop
lock
lock
add
addr16
jge
rcrb
xchg
and
fucomip
jae
int
xchg
es
lahf
or
loopne
into
inc
cmc
cmp
insb
pop
stos
xlat
jb
movsb
xor
push
cmpb
andl
shr
ret
dec
fimull
rolb
sbb
inc
repz
sbb
add
movsb
ret
fwait
imul
ljmp
pop
mov
daa
jmp
cltd
and
jle
sbb
cltd
dec
mov
loope
cmp
or
stos
and
notb
push
fsubr
xorl
mov
mov
pop
adc
pop
fldenv
roll
mov
mov
adc
push
inc
or
pop
lods
fsubs
cltd
adc
sub
push
hlt
jns
insb
push
mov
sbb
scas
jle
xchg
or
dec
sahf
jb
data16
icebp
es
mov
bound
std
in
add
mov
sub
outsl
add
jl
scas
insb
mov
pop
mov
into
loop
outsl
add
xchg
mov
sbb
arpl
adc
jmp
sub
fisubs
mov
jbe
jge
cmp
add
loopne
aad
pop
lods
add
pushf
mov
je
mov
fimull
lret
aas
repnz
mov
or
lahf
cmc
imul
fs
xchg
outsl
sbb
lods
loopne
or
lret
je
mov
sub
mov
leave
cmp
out
lods
ss
push
ret
fstpl
test
mov
sbb
std
sub
sub
sub
cmpsb
mov
bound
jnp
xor
xchg
icebp
sbb
xor
and
and
int3
jecxz
pusha
je
xchg
xor
in
cmpb
ret
xor
or
add
cmpsb
mov
jmp
mov
cltd
sti
dec
pop
jge
int
clc
pop
sub
push
repz
out
add
mov
jp
lock
sub
xchg
push
cwtl
add
sbb
mov
movsl
insl
mov
dec
jo
sub
leave
dec
cli
and
sub
shrl
adc
xadd
cwtl
add
pop
xlat
sub
pop
xor
inc
nop
jg
addr16
in
fsubl
mov
test
ljmp
pop
push
imull
outsb
mov
jns
xlat
mov
ds
aaa
in
dec
rorb
mov
sub
mov
cli
out
jo
lcall
movsl
and
es
leave
sahf
xchg
popf
lds
aaa
cld
fiadds
lds
faddl
push
xchg
call
mov
ret
scas
jnp
mov
dec
rorl
lret
jle
jb
out
pusha
lds
xchg
outsl
pop
inc
pop
mov
pop
sbb
arpl
and
ret
dec
mov
sahf
ficomps
jnp
add
idivb
in
testb
int3
ficoms
jmp
sbb
sbb
adc
adc
add
pop
out
ret
popf
sbb
mov
and
xor
and
out
mov
dec
add
shlb
or
push
clc
popf
mov
cld
pop
call
test
dec
push
addb
testl
adc
sahf
jmp
push
out
xchg
cmp
gs
jne
jns
nop
mov
cmp
jp
fdivrp
cmp
aaa
subl
es
out
in
test
push
xor
sub
cmpsl
dec
loope
popf
sbb
pop
ss
add
bnd
lods
into
mov
popa
jbe
movsl
fstpl
test
test
leave
fs
push
dec
dec
mov
stc
cs
jmp
mov
lods
das
pop
andb
or
arpl
pcmpgtw
pop
xor
inc
push
data16
or
test
cs
shll
sar
fldt
adc
mov
mov
sub
out
mov
dec
loope
add
push
gs
add
or
jg
lcall
xchg
pop
jecxz
testl
or
sub
mov
andl
jae
mov
pushf
push
cwtl
jge
dec
pop
ret
daa
aas
jge
leave
div
cmp
aas
or
mov
into
adc
add
clc
fidivrl
jno
push
jge
pop
xchg
movsl
push
push
adc
or
popf
into
xchg
sub
sbb
cmp
add
mov
jmp
ds
adc
push
mov
mov
push
iret
lods
add
shll
sbb
pop
mov
iret
out
sub
arpl
fnstsw
stos
inc
cs
loope
faddl
and
inc
mov
sbb
jg
mov
out
sbb
xor
push
fcoms
push
bound
adc
insl
lods
ja
inc
and
insb
data16
adc
pop
sbb
dec
mov
adc
pminub
movsl
inc
push
imul
push
testb
sahf
jmp
or
push
xor
push
lcall
pop
addl
iret
jl
jecxz
aas
out
pop
or
jns
out
mov
jecxz
mov
lahf
jo
sub
addb
outsb
inc
mov
or
adcl
les
or
sbb
test
stc
scas
aad
and
lods
out
cmp
sub
adcb
nop
fcoms
jbe
fmull
xchg
jle
mov
jo
add
iret
sub
sahf
mul
shlb
imul
mov
fiaddl
and
outsl
in
xlat
push
sub
mov
sub
jp
mov
ljmp
jns
mov
pop
mov
imul
stos
cmp
mov
mov
sti
push
sbb
adc
mov
or
add
cmc
in
lock
repnz
and
inc
cwtl
aam
imul
sub
push
mov
push
ret
inc
cmp
idivb
fs
sbb
mov
test
rcr
add
sub
pop
div
mov
ja
sub
daa
or
jo
addr16
rcrl
sub
cmc
adc
push
xchg
and
jns
cmpsb
outsl
inc
inc
shll
arpl
ljmp
outsl
jmp
mov
outsb
clc
jge
push
pop
das
dec
mov
movl
ret
cmpsl
out
dec
fmulp
xchg
fwait
mov
lret
add
adc
mov
imul
scas
mov
mov
xorb
jno
sbb
dec
mov
mov
dec
shlb
inc
gs
rorb
out
psrld
add
test
jmp
popa
rcl
mov
adc
jae
cld
pop
adc
stc
dec
in
cmpl
fsubl
and
or
icebp
cmp
mov
push
daa
enter
or
mov
repnz
add
sub
subl
adc
loop
cmpsl
add
push
sbb
ror
repz
sbb
mov
pop
stos
daa
sub
rcrb
ret
pushf
mov
scas
push
pop
sub
mov
mov
iret
adc
adc
filds
cmpsb
inc
fwait
and
mov
sbb
cwtl
xchg
xchg
cmp
mov
push
adc
lea
nop
call
fnstsw
bound
add
sti
lahf
outsl
les
add
xchg
ljmp
outsb
xchg
int3
jns
jge
add
jns
out
dec
dec
ss
mov
add
sbb
js
fisttpll
mov
js
mov
jl
dec
dec
push
bswap
pop
stc
cmp
sub
sub
inc
cmp
imul
cmp
cmpsb
push
test
xchg
stc
ret
rolb
pusha
push
mov
cwtl
repz
cmpsb
aas
movsl
sbb
iret
jbe
fcoms
add
fnsave
or
mov
mov
stos
gs
push
sti
aad
mov
inc
jbe
out
aaa
out
loope
or
xchg
inc
rorl
jecxz
xchg
shll
mov
adc
imulb
mov
outsb
fs
loope
adc
xor
inc
loope,pt
mov
mov
test
mov
push
jge
dec
pushf
mov
test
xor
dec
mov
pusha
lahf
repnz
sub
scas
pop
pandn
pop
clc
shll
test
inc
in
or
xor
leave
pop
pop
inc
jb
jmp
inc
cli
out
out
andb
xor
push
mov
lods
add
jl
and
add
pop
inc
adc
dec
out
push
pop
jecxz
in
inc
mov
jbe
jno
fldcw
lock
jmp
popf
imul
loope
jns
lods
sub
xchg
xor
mov
arpl
cmc
mov
jb
fs
test
sub
in
daa
ret
mov
mov
popa
lods
jecxz
or
scas
sbb
dec
icebp
push
stos
mov
orb
cmp
jo
es
push
xor
out
sub
xor
popa
stos
mov
xorl
inc
ret
inc
lret
or
lret
adc
subb
sbb
push
sti
mov
sub
add
jl
mov
push
mov
adc
add
inc
stos
mov
and
rcll
addl
inc
mov
pop
mul
ljmp
fidivrs
repz
dec
cmp
mov
sbb
neg
mov
stc
ja
xchg
sub
mov
mov
cltd
lret
xchg
xlat
fimuls
insl
ret
pop
cmp
insb
fistps
stc
add
imul
sbb
stos
mov
cmpl
add
push
scas
loopne
mov
pop
and
push
cmp
push
pop
daa
xor
popa
addb
dec
clc
sub
sub
lret
fwait
gs
cmp
mov
inc
sbb
sub
jle
jns
xchg
mov
repz
cmc
fwait
pushf
scas
adc
pop
in
jecxz
roll
jns
adc
aaa
sub
test
sbb
sub
xchg
jl
pop
shlb
push
sub
cltd
sbb
lods
jg
mul
and
fdiv
lods
test
mov
sbb
jae
pop
inc
out
arpl
dec
mov
ret
roll
mov
sti
and
sub
xchg
sarl
jbe
ret
and
daa
jle
sahf
call
cld
jnp
dec
fs
push
pop
movb
xchg
bound
xor
pop
pop
push
cmp
std
cmp
divl
inc
call
push
xchg
loope
fcmovnbe
out
loopne
cmp
sub
lret
add
mov
mov
mov
sub
lret
mov
xchg
mov
scas
imul
test
into
out
scas
push
xchg
scas
iret
xchg
popa
inc
mov
jbe
bound
jmp
jmp
divb
jnp
mov
or
stc
mov
icebp
pushf
dec
xchg
and
clc
movsb
mov
shlb
and
ret
ficoms
mov
leave
call
das
xchg
add
jp,pn
xor
stos
outsb
sbb
pop
dec
mov
inc
add
imul
xorb
mov
cmp
mov
cmp
fsubl
cmc
add
mov
xor
pop
cmp
pop
xchg
push
sbb
sti
gs
hlt
mov
and
push
popf
cmp
jns
jbe
repnz
pop
push
imul
out
mov
mov
gs
lahf
mov
lods
mov
rclb
imul
add
or
test
imul
push
sbb
jp
aaa
push
jmp
in
je
repz
aam
std
sbb
sbbl
jo
xor
push
mov
test
in
pop
fmul
add
mov
sbb
mov
cmp
sbb
or
rcll
adc
les
jle
inc
lahf
adc
push
test
jmp
xor
mov
cltd
push
mov
insb
jmp
test
fisubrl
mov
cmp
gs
jl
aam
xchg
push
scas
xor
mov
stos
sbb
and
mov
scas
cmc
push
hlt
movsb
pop
jns
push
aam
pushf
subb
jns
mov
cwtl
scas
shl
and
call
inc
sub
sub
cmc
mov
ret
sub
hlt
mov
aad
pusha
and
mov
push
lock
push
fstl
xor
lods
insb
mov
lods
mov
xor
xchg
scas
dec
orl
mov
mov
mov
xlat
ret
mov
adc
lods
adcl
mov
enter
cmp
popf
or
xchg
leave
cs
sbb
pop
cwtl
repnz
test
or
and
inc
lds
stos
mov
int
pop
xchg
inc
lret
pop
xor
mov
adc
fldt
aad
ljmp
and
push
rcr
movsb
cmp
loop
push
andl
cmp
pop
xor
faddp
mov
inc
sbb
test
cli
and
mov
sbb
dec
ds
loopne
dec
push
xlat
dec
inc
sahf
inc
mov
pushl
add
mov
sti
push
mov
imul
pushf
sub
sbb
dec
leave
sub
aaa
pop
insl
jno
xchg
pop
pop
clc
es
adc
scas
mov
aam
out
in
jecxz
leave
sub
sub
lds
sub
popa
jp
and
dec
pop
jb
arpl
fiadds
sbb
dec
or
sub
push
fdivrs
pop
shll
fisttpll
ja
lea
test
mov
jne
roll
inc
addl
movsb
pop
repnz
pop
mov
fisttps
inc
fadd
mov
mov
add
xchg
popa
repnz
cmp
insb
mov
or
leave
loopne
fwait
cmp
xchg
out
cmp
adc
fmull
sahf
incb
push
call
inc
jecxz
ror
dec
imull
or
dec
out
sbb
rcll
movsl
ds
sub
or
xchg
lcall
rclb
and
ror
lahf
mov
mov
dec
shl
movsb
xorb
mov
adc
and
xchg
mov
movsb
pop
popa
icebp
cltd
aam
out
add
iret
add
jae
mov
lcall
adc
mov
and
andb
mov
cld
dec
add
dec
adc
out
int3
pop
ffreep
clc
mov
sub
dec
cld
pushf
xchg
and
rolb
cmp
dec
xchg
xchg
jne
iret
pop
xchg
rolb
mov
testb
cmp
or
xor
fucomp
sub
adc
or
xchg
cli
xchg
adc
lds
sbb
fdivrl
adc
xchg
fs
lahf
aad
enter
mov
fcmovnu
push
std
xchg
lods
push
ljmp
inc
adc
xchg
push
jo
xchg
movhps
mov
rol
mov
in
rolb
fwait
aam
addr16
hlt
test
cmp
in
movsb
repz
cli
sbb
hlt
loop
sbb
xchg
jl
test
dec
lods
sbb
mov
lods
sbb
outsl
sbb
push
mov
fdivr
iret
xor
mov
adc
jp
movsl
dec
bound
loope
subb
sub
sub
loope
mov
or
xchg
fstl
and
xor
xor
fcompl
out
push
push
inc
and
rcll
js
cmp
aad
or
dec
add
scas
pop
mov
xor
loopne
sbb
outsb
stos
ss
call
jecxz
jns
cmc
dec
sarb
fcmovnb
test
dec
imul
shr
fmull
lods
fs
mov
dec
push
pusha
into
xor
lret
fildl
mov
pop
test
xor
mov
sbb
mov
xchg
jmp
inc
push
outsl
in
mov
push
dec
ja
add
push
rolb
rcrb
lea
jno
xchg
xchg
leave
in
ljmp
dec
cmp
rolb
cs
je
aas
fcoms
pop
jmp
sub
inc
mov
xchg
outsl
repz
fs
icebp
pop
ret
jge
pop
jl
inc
dec
xlat
push
cmp
push
jae
dec
ss
imul
mov
push
leave
pop
sub
mov
in
mov
inc
insl
xor
in
mov
ret
ss
iret
push
call
in
cmp
mov
adc
lret
pop
in
popf
mov
call
xchg
movl
inc
push
call
insb
dec
bnd
inc
cld
aaa
cmp
orb
fldl
adc
pop
add
mov
xor
pop
dec
stos
xchg
dec
jns
push
pop
jl
and
mov
push
xor
inc
movsb
gs
iret
dec
repnz
gs
rep
pop
sbb
mov
daa
imul
shr
jo
fisubl
xchg
mov
shll
push
or
sub
sbb
dec
fistl
or
or
daa
fs
inc
jp
repz
mov
arpl
dec
inc
mov
jl
sub
test
sbb
sub
idivb
xchg
cld
dec
fnstsw
pop
xlat
push
mov
pop
mov
cmpsl
int
cld
mov
pop
arpl
push
cs
test
sarl
outsl
push
mov
jge
outsl
pushf
jge
xor
sub
fidivs
cmp
cmc
mov
cli
cmp
inc
in
push
ds
mov
xlat
add
sbb
test
and
inc
cmpsl
cwtl
ret
mov
jno
cwtl
add
std
imul
cmc
cli
ret
shll
and
ss
fstpt
imul
test
ljmp
fnstcw
fisubrs
outsl
inc
xchg
sub
rol
cmp
out
pop
aas
sarb
mov
aad
ja
jle
cmp
rorb
mov
out
pop
xor
int
das
sub
div
ret
xlat
shlb
mov
daa
movsl
jecxz
lds
mov
scas
insb
pop
xchg
incl
in
jg
test
insl
or
cmpsl
pop
scas
mov
hlt
jno
and
xlat
fsubrs
sub
sub
test
cmp
add
shll
das
or
push
test
sbb
jb
pop
jae
push
jge
popf
and
sarb
into
fldt
xchg
js
std
into
into
into
scas
cmpsl
std
stos
push
sbb
mov
into
sub
pop
add
dec
test
push
stos
cmp
fucom
cmp
push
and
std
or
mov
loop
inc
shrl
mov
adc
and
shrb
rcl
jns
cmp
adc
add
and
xchg
cwtl
cwtl
clc
out
xchg
lock
repz
xchg
insl
js
add
dec
js
xor
int3
mov
adc
add
clc
dec
cmp
rolb
leave
ds
out
lods
ds
mov
es
xchg
cmp
adcb
std
dec
lods
rcrb
fcmovnb
stos
test
mov
push
xchg
cmpsl
cmc
ljmp
mov
lods
icebp
push
out
mov
pop
mov
xor
scas
pushf
lret
mov
loopne
push
jns
xor
pop
pop
cwtl
mov
shrb
stos
mov
sbb
xor
rolb
pop
mov
loop
jg
clc
test
push
jmp
enter
pop
std
aam
push
insl
dec
fcmove
pushl
jmp
in
loop
mov
aad
pop
repz
add
mov
pop
cmc
or
jmp
sub
or
stos
inc
adc
imul
mov
mov
or
mov
sub
pusha
inc
sbb
outsb
add
test
fisubrl
fldt
scas
mov
and
ret
in
sub
les
lcall
mov
scas
loopne
mov
cwtl
push
pop
mov
dec
loope
adc
jo
int
ret
cwtl
mov
jb
mov
das
dec
lret
mov
dec
or
cwtl
test
into
xchg
ja
arpl
add
pop
in
lea
adc
push
popa
sbb
das
dec
mov
pop
fildl
fidivl
push
sbb
cmc
fdivr
movsl
test
enter
push
lret
xchg
xchg
clc
fistl
push
nop
gs
hlt
in
jns
das
push
and
ret
push
cld
jb
xor
mov
je
jecxz
lahf
hlt
call
sti
aaa
fisttpl
lods
fsts
cmc
popa
pop
push
push
dec
loopne
or
lock
imul
rolb
mov
mov
cmp
out
daa
mov
fidivl
and
aaa
add
popa
mov
xor
das
and
daa
inc
addr16
cmpsl
jns
sbbl
fadd
aad
pop
cmp
jp
mov
jle
xchg
jl
push
dec
enter
cmpsb
sbb
cli
js
cmp
test
das
inc
mov
js
pop
cmp
fldenv
or
add
sbb
popf
jmp
or
or
aas
sbb
sbbl
jnp
pusha
lods
jg
push
xor
jb
stos
jo
movsb
mov
lret
sub
aam
pop
xchg
mov
insb
cld
cmpsb
ret
test
fmuls
test
movsl
jno
and
call
repnz
out
movsb
pushf
int3
inc
push
adc
out
xorb
cmp
jae
in
aas
xchg
ret
push
or
stc
and
xchg
xchg
xchg
adc
push
data16
mov
das
out
std
out
jbe
dec
jle
pop
cli
xchg
inc
or
push
repz
ss
outsl
inc
xchg
cmpsl
ss
inc
sub
jae
lahf
dec
mov
push
in
push
std
mov
inc
cld
xchg
cltd
ret
jg
push
jp
imul
push
inc
cltd
mov
in
cltd
aaa
test
jnp
or
frstor
sbb
negl
dec
out
add
pop
aaa
jne
cmp
or
sub
lock
xchg
movb
shrb
add
ljmp
repz
cmpsb
std
pop
ljmp
mov
dec
mov
clc
cltd
and
out
aas
cmp
cmp
jbe
mov
imul
hlt
inc
out
mov
cld
mov
scas
or
insl
rcll
std
inc
lea
jle
test
movsbl
sbb
clzero
jg
cmp
bswap
adc
pusha
gs
dec
cmpsb
dec
push
add
jno
push
addr16
sub
mov
mov
push
lods
jle
aad
jle
xor
mov
scas
mov
rcrb
or
outsb
mov
je
arpl
shll
in
sub
out
sub
popa
and
popa
nop
popa
push
mov
mov
cmp
inc
cmp
mov
inc
out
sbb
cmp
inc
das
xor
cmpsl
sbb
and
ja
test
or
xchg
mov
movsl
mov
cltd
pop
push
and
mov
mov
sbb
cwtl
out
xor
lcall
pop
sarl
fwait
sbb
insl
and
lods
pop
adc
gs
jl
test
mov
mov
mov
add
and
and
out
ss
cli
pushl
or
fnstcw
or
lahf
test
mov
cld
lret
std
mov
test
sub
jno
push
push
mov
push
rcrl
icebp
repnz
js
int
cli
incl
pop
and
pop
mov
cmp
movsb
test
aad
mov
xlat
call
xchg
mov
leave
enter
mov
sti
lret
out
add
pop
sbb
cli
xchg
ljmp
mov
cwtl
les
jmp
bound
jbe
ljmp
push
stos
cmp
adc
inc
pop
jecxz
jg
push
sub
aas
std
or
pop
imul
es
fisttpll
jne
fs
push
mov
repz
xor
adc
lret
lcall
xchg
or
lahf
cmp
mov
xor
stos
xchg
jp
ljmp
fstps
cmp
cli
mov
sahf
inc
cld
mull
mov
and
out
sti
and
jno
mov
cmp
pushf
jle
movsb
add
gs
and
insb
inc
stc
icebp
xor
sbb
mov
iret
push
mov
push
jmp
jae
inc
addr16
fwait
xchg
ret
mov
adc
jp
xor
or
cmp
movsl
mov
mov
xchg
pop
adc
pop
int
mov
mov
ljmp
stos
iret
xchg
lods
mov
and
push
outsl
mov
int3
das
mov
add
pusha
mov
jge
jg
sti
ret
adc
jae
dec
cmp
cmp
push
popa
inc
imul
imull
outsl
nop
jge
jb
mov
jmp
mov
sbb
and
add
xor
inc
xor
lahf
mov
sbb
nop
cmc
pop
aam
push
jbe
mov
dec
push
mov
sub
int
mov
push
nop
dec
test
add
dec
or
mov
and
popa
sahf
cmp
dec
sarl
inc
sub
fcomps
mov
xchg
push
xchg
repz
mov
leave
adc
es
add
push
sbb
aaa
mull
cmp
sbb
sbb
pop
mov
pop
fwait
ljmp
add
sub
xchg
ja
pop
mov
or
cmp
mov
dec
push
dec
out
or
lods
cmp
jge
xchg
and
xor
test
jp
stc
sub
movsw
loope
jnp
and
jbe
xchg
inc
cmp
push
testl
outsl
and
and
ss
cwtl
outsl
cmp
mov
jae
jmp
into
adc
sub
mov
inc
add
sbb
out
addl
pusha
jae
push
mov
cli
hlt
cld
sbb
movsl
outsl
sahf
cmp
pop
lret
and
call
cli
scas
jb
mov
xor
pop
call
mov
sbb
lahf
repz
in
sub
movsl
xchg
jge
push
arpl
mov
iret
fistps
jnp
pop
out
inc
push
jno
adc
and
sub
jecxz
push
push
imul
push
jg
fwait
xor
sub
hlt
adc
push
fstpt
jmp
xchg
aam
lcall
push
lcall
xchg
addl
sti
bound
mov
ja
pusha
andb
out
and
mov
pop
loop
cld
xchg
xchg
xor
xchg
into
lahf
adc
cmp
out
enter
jae
mov
pop
dec
mov
inc
fmull
dec
cmc
movl
cmp
cmpb
add
or
add
fsubrl
andb
or
jbe
inc
pop
inc
push
ja
mov
push
std
mov
dec
in
pop
sub
mov
sbb
pop
lcall
mov
adc
mov
dec
stos
sbb
dec
add
lret
loope
pushf
inc
xchg
lds
xorb
fdivr
adc
sti
out
xorb
dec
loope
dec
sub
mov
adc
mov
xor
sub
pop
fstl
andb
ljmp
or
mov
nop
std
pop
lods
cmp
ljmp
xor
stc
or
mov
lret
mov
mov
mov
mov
xor
xchg
jbe
add
cmp
aas
lods
in
rcrb
or
inc
xlat
adc
mov
mov
mov
sub
mov
sub
jo
lcall
cli
dec
arpl
push
fidivrl
clc
sub
fstp
fidivrs
imul
mov
lcall
dec
notb
dec
xacquire
sub
jne
or
aas
imul
cmc
mov
scas
xor
lret
xor
imul
hlt
xchg
imul
jae
cmp
mov
jne
xchg
xchg
push
faddp
dec
adc
in
imul
mov
push
subl
std
mov
sub
xchg
in
lahf
xor
xchg
mov
mov
daa
pushf
in
repnz
cld
and
and
jno
iret
insb
dec
mov
incl
lret
xchg
cvtdq2ps
xor
push
int3
int
mov
into
faddl
sbb
mov
xcrypt-ofb
cmpsl
outsl
repnz
jns
pop
insb
popf
or
cmpl
out
mov
loop
xor
mov
mov
jge
sbb
jmp
fwait
cmp
cmp
mov
push
cltd
mov
js
sarl
jb
mov
roll
sahf
inc
add
ficomps
cld
mov
sti
push
scas
inc
push
dec
pop
ds
dec
jg
xchg
loop
dec
lds
mov
lcall
add
call
js
mov
adc
jae
scas
aad
outsb
or
pop
pop
imul
push
inc
cmpsl
jge
lds
or
out
cmpsb
loopne
stos
and
outsb
cld
inc
jle
aaa
ja
push
dec
out
icebp
sbb
shrl
adc
fmul
shr
and
pop
add
gs
adc
mov
mov
jne
andb
inc
sbb
cld
jmp
and
std
es
jmp
push
lods
fptan
push
lret
push
addr16
inc
or
sub
scas
cmp
lea
cmp
call
ret
addb
lea
xchg
cmpsb
gs
cltd
out
pop
mov
sbb
aam
fcomi
aad
mov
inc
mov
int
dec
std
pop
incl
fs
stc
sbb
and
xor
mov
add
dec
mov
mov
adc
push
loope
sbb
ficoml
mov
jg
xchg
mov
inc
mov
rol
int3
pushf
dec
orb
pop
lods
aas
pushf
push
cmp
clc
jns
sbb
into
pushf
jmp
jmp
in
inc
mov
sti
daa
cltd
outsl
pop
in
cwtl
stc
add
aas
lcall
mov
scas
movsl
fstps
leave
push
dec
out
je
mov
popf
mov
outsl
add
adcb
ret
sub
xor
ja
aam
cmp
pop
mov
fcoms
pop
pop
pop
jns
push
add
in
mov
out
fildll
xchg
and
negb
ja
scas
add
push
lock
jae
movsb
and
push
test
mov
add
cmp
cs
ss
pop
cmp
in
in
sbb
hlt
xor
mov
push
or
mov
test
sbb
gs
pop
and
lahf
iret
mov
enter
imul
pop
dec
sbb
jae
es
pushf
incb
or
mov
add
push
and
mov
jb
ja
xchg
incl
xlat
lock
in
pop
stc
mov
pop
cmpsl
inc
cwtl
jl
sub
dec
xchg
mov
and
push
adc
mov
pop
push
hlt
jbe
mov
div
pusha
lea
jmp
sbb
adc
mov
jecxz
inc
ljmp
scas
inc
int
xchg
cmp
push
adc
dec
andl
repz
fld
mov
sbb
out
mov
xor
repz
push
leave
pop
xchg
fimull
xadd
enter
sub
adc
sub
ljmp
inc
pop
dec
cmp
nop
test
adc
cmp
fisttps
aas
out
and
or
ret
jle
inc
mov
mov
fisubrs
mov
cltd
ljmp
loope
cmp
in
push
dec
loop
mov
mov
xchg
les
les
xor
mov
mov
xchg
add
lds
xor
xor
insb
int
popf
sub
fsubs
add
jae
cmc
xchg
dec
loopne
cmp
inc
insl
dec
inc
fcompl
fisubs
cmp
movsb
cwtl
in
cmp
or
pop
mov
loopne
inc
and
mov
push
shlb
mov
popa
sub
pop
rolb
aaa
into
popa
cmp
pop
pop
test
cmpsl
cs
xorl
aam
dec
pop
push
xchg
pop
sub
lock
pop
xchg
into
repz
neg
jmp
xchg
mov
xchg
cmpsb
inc
add
xlat
test
fcmovb
mov
sbb
mov
dec
jo
mov
lret
fwait
pushw
jmp
push
ret
mov
shll
aad
test
xor
fyl2xp1
icebp
sbb
lea
inc
push
dec
cmpxchg
outsb
sbb
jecxz
ja
cli
stos
mov
popl
add
mov
xchg
sbb
test
mov
aas
icebp
pop
fisubrs
imul
add
jns,pn
test
fbld
insl
mov
push
push
ret
pop
popa
ss
push
lcall
mov
test
xlat
jbe
cmp
mov
popf
push
std
pop
stc
mov
adc
daa
mov
xor
jo
mov
cmp
decb
sbb
cmp
pushf
pop
push
arpl
addr16
add
imul
mov
lahf
lret
lret
repnz
vmovntps
negl
mov
fistps
cmp
push
rolb
add
outsl
jl
movsl
fisubrs
shlb
cmp
xchg
push
pop
in
movb
adc
cmp
mov
aaa
sub
aas
les
lock
xor
push
mov
les
mov
cmp
insl
inc
jne
push
rolb
fnstcw
imul
jecxz
in
jmp
bound
xor
sbb
dec
ret
inc
jae
jns
sub
cmpsl
loopne
or
cld
data16
dec
jle
mov
adc
fnstenv
mov
fdivs
or
push
dec
rcrb
stos
fwait
imul
scas
dec
mov
enter
mov
gs
bound
xchg
je
jno
jmp
fdivrp
imul
cs
inc
cld
adc
stos
popa
outsb
lea
fstpl
cmp
push
mov
push
xor
cmpl
or
int3
or
jo
cmp
hlt
test
hlt
adc
test
jg
xlat
stc
fmull
fwait
xchg
xchg
outsl
dec
jnp
inc
les
sbb
jl
aas
jno
in
mov
lret
sub
mov
aaa
sub
lret
out
mov
lret
inc
cmovge
pop
inc
ss
sub
dec
xchg
fadds
mov
outsl
jg
out
cmc
sub
inc
inc
inc
jmp
jge
sbb
inc
int3
mov
ja
inc
inc
daa
mov
sbb
movsl
ds
cmp
jbe
sub
subl
out
pop
cltd
sbb
xor
cmpsb
shrb
or
or
arpl
int3
test
or
xchg
gs
push
mov
sbb
push
xchg
push
inc
or
dec
mov
mov
jne
or
xchg
int
mov
pop
idiv
pop
mov
mov
pop
popa
xchg
lea
jp
roll
inc
and
mov
push
mov
cmp
test
test
addr16
mov
push
callw
loopne
mov
mov
mov
js
jae
mov
mov
cmpsb
out
iret
es
cli
cmp
pop
and
adc
xchg
out
push
in
dec
call
cmp
insb
dec
xchg
xor
or
inc
mov
jnp
inc
dec
sbbb
out
jecxz
xor
dec
int
xchg
pcmpgtd
inc
imul
push
jl
loop
int3
xchg
push
leave
and
rorl
mov
lock
mov
pop
push
add
ja
dec
ret
or
adc
and
dec
insl
dec
in
in
cmp
movb
or
sbb
icebp
movsb
cmc
lods
pop
divl
insb
test
lcall
adc
xchg
and
jge
xchg
mov
lds
sbb
jo
sahf
jb
sub
mov
push
addr16
sub
push
and
sbb
mov
popa
fs
xor
mov
sub
cmpsb
sarb
cmc
aad
and
mov
push
sub
xor
or
xchg
sti
push
mov
das
add
inc
js
cmp
mov
inc
call
sub
and
leave
movsb
cmpsl
jecxz
mov
mov
movsb
jl
mov
sub
pop
dec
dec
sti
lcall
sbb
cmp
sbbl
or
push
adc
dec
sbb
ror
out
xchg
dec
push
mov
xchg
out
std
ja
rcl
mov
sub
cmp
jae
mov
fistpll
mov
mov
push
inc
xchg
fistpl
dec
jns
mov
xchg
out
call
test
sti
and
inc
dec
lea
mov
mov
sbb
into
adc
repnz
jl
mov
inc
call
pop
fwait
push
sub
sti
mov
lret
add
mov
fidivrs
addb
jle
xchg
movsb
cmp
mov
add
or
cmpsl
jmp
test
xlat
inc
push
mov
mov
scas
and
add
mov
xor
dec
mov
jg
mov
xchg
and
push
es
mov
test
inc
jmp
mov
std
xlat
fildl
adc
jg
add
std
out
jecxz
sbb
push
push
or
xchg
pushf
mov
inc
pop
test
mov
jbe
fcom
daa
xor
dec
xchg
fwait
inc
inc
inc
lds
add
pop
pop
cmp
mov
sbb
aam
push
push
xchg
aad
cli
aad
xor
cmp
gs
jne
pusha
mov
mov
lods
into
jl
mov
cmpl
xchg
mov
mov
dec
xor
jmp
and
push
inc
mov
cli
or
imul
mov
enter
jp
outsb
and
ja
call
jo
inc
mov
je
ja
nop
push
iret
lock
int3
fcoms
test
jbe
in
jb
scas
subl
ljmp
push
jle
pop
cmpsb
mov
loopne
lods
mov
jnp
inc
lret
pop
outsl
icebp
in
and
cmpsb
sub
sub
sub
pop
inc
out
lea
test
out
loopne
out
xchg
iret
pusha
push
mov
loop
jp
pop
inc
pop
jae
gs
sbb
mov
or
mov
or
add
filds
jg
xchg
or
dec
mov
push
pop
mov
cli
push
testb
subb
adc
mov
adc
rorl
fucom
sbb
mov
fs
bound
adc
mov
mov
cmp
push
repnz
in
loopne
pop
loopne
js
adc
inc
adc
addr16
repz
xor
mov
out
filds
roll
enter
imul
bound
shll
xor
add
inc
lods
daa
xor
xchg
adc
inc
aam
fwait
and
push
pop
sub
jbe
movsl
jge
push
or
xchg
pop
cmp
sbb
insl
xor
and
int3
and
adc
push
out
mov
mov
mov
mov
sahf
out
out
fwait
movsb
lret
xor
xchg
or
cmpsb
push
push
dec
sbb
push
push
sbb
jnp
mov
js
inc
push
xlat
aas
push
fcmove
mov
rolb
pop
cltd
sub
sti
xor
jbe
inc
in
je
sbb
jbe
adc
mov
lock
sti
and
sar
adc
cmp
mov
inc
cmp
popa
mov
shll
add
pusha
push
pop
sbbb
xchg
pop
and
loop
mov
sbb
rclb
or
jmp
popa
dec
push
jge
add
cltd
pop
mov
or
into
jl
sbbb
mov
test
inc
sbb
dec
imul
in
jmp
loope
cmp
ds
dec
bound
fs
test
dec
mov
push
pop
pop
insl
nop
outsl
lea
mov
sub
jecxz
mov
test
adc
les
or
mov
fsubs
mov
sub
into
xchg
out
xchg
pop
jecxz
push
mov
shll
xchg
jo
aam
jecxz
in
aam
sbb
fs
mov
push
adc
jmp
and
js
ds
aam
adc
pusha
mov
cmpsb
jnp
sbb
jl
mov
and
mov
out
cmpsb
xchg
or
std
ss
aam
mov
inc
sbb
mov
popa
cld
ss
mov
cmc
push
out
or
loop
xor
call
or
push
mov
sbb
addr16
pop
jns
pop
and
adc
or
mov
arpl
dec
jnp
jnp
xor
xor
movsl
pop
xchg
mov
imul
xor
or
push
xchg
es
add
adc
inc
mov
icebp
das
jno
push
mov
jnp
cmp
add
or
ja
test
call
push
xchg
xchg
mov
pop
addr16
adc
mov
mov
adc
jne
sti
lret
or
ss
rolb
loop
dec
clc
fisttps
fistpll
push
movl
rclb
sbb
repnz
xchg
jae
xlat
jmp
mov
jge
or
push
xchg
inc
sub
dec
and
data16
sahf
cmc
mov
pusha
pop
dec
or
out
shrb
sbb
push
add
ja
push
adc
int
push
stos
aas
inc
cwtl
cwtl
repz
in
mov
lea
dec
and
mov
gs
fucomip
popa
or
inc
test
outsl
jecxz
fcoms
ljmp
clc
mov
es
adc
cld
dec
xchg
pop
leave
mov
add
xorb
mov
rcl
pop
add
movsb
pop
repz
lods
and
shl
push
mov
or
cmp
adc
lcall
xor
inc
xor
sub
icebp
xchg
addl
addl
jo
aam
push
xor
lret
jne
repz
insl
jg
movsb
das
subl
loope
test
dec
dec
add
popf
mov
fcomps
dec
xor
aaa
in
or
into
leave
jae
imul
cmovne
and
shlb
fsubs
les
orl
add
cmp
pop
push
test
sub
mov
in
ret
push
fcoml
insl
cmp
int3
mov
repz
imul
xchg
dec
test
loope
push
inc
add
and
mov
pop
sahf
dec
rcr
rcll
mov
dec
mov
into
mov
in
in
out
xchg
daa
inc
fwait
adc
add
or
pushf
out
into
inc
sub
cmpb
xchg
xchg
fs
out
aad
sarl
xchg
push
jno
and
jno
nop
mov
xchg
mov
adc
and
les
repnz
call
leave
jnp
mov
sub
or
xor
xor
jb
cs
or
lahf
inc
int3
dec
repz
dec
shr
cmp
sub
rclb
jecxz
mov
jmp
inc
mov
inc
loop
addl
mov
dec
cltd
sbb
mov
scas
lods
outsb
sub
xchg
mov
in
insl
xchg
das
cwtl
daa
subb
in
mov
add
cld
aaa
andl
inc
rcrl
mov
repnz
jb
jg
daa
in
fmuls
out
rcrl
notb
mov
scas
inc
int
daa
les
xor
add
fidivl
fistpl
adc
insl
aaa
roll
stos
lea
mov
or
fisttps
cmp
lock
jecxz
inc
mov
jbe
push
adc
std
jl
mov
xchg
loope
push
and
push
jp
lret
fmul
inc
ds
xor
pop
sbb
pop
cs
dec
movsl
mov
aad
daa
mov
pop
mov
outsb
mulb
jbe
arpl
add
cli
jne
adc
adc
and
bound
mov
fcom
mov
insl
dec
sbb
ss
dec
pop
jbe
jge
insl
enter
xor
sbb
cmpsb
or
in
add
inc
jns
dec
cli
inc
and
add
sbb
mov
and
insb
or
adc
and
andb
insl
mov
into
sbb
dec
enter
xchg
out
and
jl
pop
mov
mov
movsl
jmp
fwait
adc
sub
xorb
mov
addr16
ja
and
or
adc
jbe
insb
nop
aam
xor
fsts
scas
int3
jae
adcl
add
fwait
cmp
push
pop
mov
lods
cmp
push
inc
movsb
or
mov
xchg
xchg
sbb
jo
pop
jo
inc
cld
mov
or
xor
dec
cmp
leave
fwait
daa
inc
dec
arpl
pop
lret
gs
cmp
xor
pop
xchg
addr16
push
je
popw
nop
sbbb
gs
dec
rclb
sbb
std
mov
jo
mov
fwait
pop
pop
lock
idivb
in
test
pop
ret
xor
shrb
fildll
setg
jo
sarb
inc
adc
inc
push
xchg
daa
out
insl
andl
pop
cs
addb
jae
xor
xor
pop
mov
xchg
sub
adc
push
dec
fimuls
movsl
cmp
inc
js
cmp
cli
lods
add
lahf
push
and
mov
aaa
mov
or
fwait
das
aam
xchg
sbb
and
fcmove
in
mov
cmp
test
pop
sub
mov
mov
jb
arpl
jno
mov
sub
fadds
divl
repnz
nop
out
fisubrl
lcall
arpl
mov
sbb
shlb
fistpl
faddl
push
loope
andb
leave
lcall
imul
mov
daa
add
flds
imul
into
dec
adc
push
push
push
andl
repnz
icebp
jge
xor
dec
mov
adc
mov
push
and
je
icebp
jne
pusha
push
jp
push
xchg
data16
icebp
sub
inc
push
fcomps
rolb
or
scas
mov
jae
enter
jg
adc
rclb
jns
in
mov
xor
push
insb
inc
loope
out
xchg
and
push
or
loop
jbe
int
ljmp
cmp
and
jo
add
mov
mov
out
adc
sub
leave
test
lock
shll
dec
cpuid
jo
sahf
outsb
add
fucom
sbb
add
push
cmp
cltd
push
sbb
fcmovnb
ljmp
xchg
jecxz
jno
sub
cmp
daa
loope
scas
sub
push
shrl
or
or
lods
mov
push
movsb
fidivs
mov
or
mov
inc
int3
mov
push
sub
cltd
ljmp
jno
das
in
and
movsl
mov
repz
xchg
fcomps
push
frstor
push
inc
sbb
addr16
icebp
push
inc
push
imulb
ss
adc
mov
xor
shrb
mov
mov
dec
xchg
ror
leave
and
xchg
aad
sub
inc
popa
icebp
shll
stos
sahf
jge
jecxz
or
xchg
nop
sub
push
cmp
mov
xchg
adc
lock
cld
insl
mov
mov
fldl
cmc
clc
sbb
in
cmpsb
jge
mov
xor
lret
icebp
mov
dec
add
cs
scas
xchg
mov
jle
ficomps
mov
lcall
rorl
xor
mov
fidivl
fiadds
cwtl
mov
in
sub
pop
aaa
mov
sbb
pusha
mov
into
lds
or
fiaddl
test
push
sbb
mov
xor
pop
dec
data16
out
pop
cltd
hlt
repnz
dec
test
pop
and
popa
push
stos
jmp
pop
cmp
sbb
stos
pop
test
in
jl
push
js
enter
cmpb
add
lds
jnp
out
or
ret
xor
sbb
mov
push
addb
mov
mov
out
cmpsl
les
aam
aad
rorb
jbe
popa
add
and
fs
lcall
outsl
fmull
cmp
clc
clc
sbbb
jecxz
lods
xchg
pop
cmp
add
icebp
scas
enter
xchg
cs
int
push
mov
push
push
mov
jae
aam
jb
sub
pop
pop
sub
pop
sub
xor
lods
movsl
imul
xchg
jl
test
shr
add
rcl
add
push
fsubrs
mov
sti
sti
mov
add
mov
pop
add
xchg
adc
pusha
ud1
sbb
inc
out
push
mov
rol
sahf
mov
pop
stc
add
into
ljmp
pop
mov
push
push
or
sub
addb
jnp
clc
lods
loope
push
pop
sbb
cs
imul
mov
jbe
inc
or
xchg
xchg
scas
dec
mov
out
mov
xor
cmc
cmp
adc
push
ret
push
cmp
mov
jmp
mov
push
cmc
mov
mov
pop
jle
xor
xor
or
testb
adc
pusha
jecxz
dec
out
and
ret
mov
mov
stos
and
test
mov
cli
cltd
pop
idiv
pop
xor
jno
mov
dec
push
into
jnp
hlt
mov
mov
nop
jno
insb
add
aam
mov
xor
movsb
mov
aad
dec
mov
push
popa
jg
js
sub
imulb
or
jmp
mov
and
xor
lock
in
lods
cmp
cs
xchg
std
mov
xchg
push
xlat
sub
jnp
xchg
sub
jg
jne
fistpll
push
jbe
dec
imul
cmp
or
jp
push
rclb
pusha
or
inc
insl
bound
sbb
mov
in
and
push
or
xor
jae
es
leave
add
loope
pop
mov
orl
sub
bound
cs
sbb
outsl
ljmp
test
jp
xchg
xchg
and
iret
mov
lcall
pop
les
jbe
xor
jnp
sbb
inc
mov
ja
es
mov
fistpll
mov
mov
inc
and
scas
shrb
jecxz
cmp
mov
or
shll
out
xorl
sbb
inc
popa
push
addr16
adc
lahf
cmp
push
add
addr16
ds
dec
imul
mov
mov
out
adc
push
push
cmp
aad
mov
jmp
xor
fbld
push
inc
fnstsw
cmpsb
sbb
mov
ffreep
sbb
and
ljmp
test
adc
fbstp
and
jp
out
jg
adc
adc
jg
dec
pop
das
add
repnz
xor
mov
fcompl
leave
pop
fwait
mov
xchg
inc
xchg
or
adc
je
sbb
filds
xor
iret
pop
pop
fcoms
ret
imul
and
jle
aad
in
mov
mov
or
xchg
pop
arpl
mov
mov
dec
fcmovu
in
popf
fs
repnz
in
or
xchg
add
mov
add
das
push
jmp
imul
sbb
inc
xchg
mov
sbb
pop
mov
xlat
repnz
scas
cmp
push
loopne
movsl
jno
pop
mov
movzwl
out
pop
xorl
test
sarl
xor
pop
rorb
or
jmp
sub
push
mov
xor
cmp
lahf
push
cmpsb
and
popa
and
pushw
or
push
add
pusha
cmp
jne
lods
outsb
dec
mov
out
test
xchg
jg
je
into
xor
loope
imul
test
cmpsl
jl
mov
mov
push
push
xchg
xor
add
mov
sbb
add
jecxz
fdivrl
pop
push
iret
dec
mov
adc
or
add
jne
cld
mov
xor
mov
inc
adc
outsl
jne
mov
add
adc
xchg
inc
cmpsb
jae
out
sbb
stc
xchg
sbb
ficompl
repz
ror
sub
and
js
shrb
shll
cmp
mov
mov
pop
mov
jle
cmp
xor
hlt
or
lds
push
inc
xchg
arpl
hlt
repnz
dec
sub
ds
jmp
leave
mov
negb
jle
repnz
adc
mov
sbb
daa
lret
push
dec
aaa
jbe
shll
pusha
mov
dec
imul
in
subb
in
cli
inc
and
sbb
fcompl
lret
jo
repz
jnp
shlb
hlt
pop
or
adc
adc
sbb
xchg
fcomps
mov
outsl
lock
or
pop
add
adc
mov
pop
mov
and
sarb
data16
adc
fninit
fistl
cmpsb
test
dec
push
add
shrb
cs
std
rol
xchg
imul
call
fwait
repz
dec
cmp
pop
mov
cmp
gs
push
mov
lods
pop
cmp
pop
mov
fstl
jnp
or
jae
outsl
iret
nop
xchg
out
clc
clc
sub
icebp
lds
orl
adc
popa
out
mov
sub
adc
ret
fisubrs
aam
mov
fcomp
and
jnp
add
sub
cwtl
sub
fwait
push
jge
and
iret
mov
test
xor
aam
mov
js
cmp
std
rcll
mov
icebp
into
test
scas
out
sbb
sahf
add
in
int
ret
dec
push
jno
aaa
loop
lods
dec
add
cmp
and
std
xor
mov
ljmp
mov
sqrtps
sbb
les
ret
lods
test
shll
add
leave
push
mov
mul
push
js
sub
les
mov
out
add
inc
fcos
out
test
xor
in
mov
add
jnp
loopne
mov
insb
cmc
push
sub
hlt
pop
push
and
mov
pop
dec
jne
push
ds
inc
stc
in
push
fcompl
inc
pusha
cmp
jbe
notb
add
imul
pushf
add
out
and
xorb
cmp
out
aad
mov
in
sti
inc
jno
xor
sub
jb
push
jmp
sbb
or
ficomps
out
dec
out
mov
popf
insb
aas
in
js
xor
sub
pop
notl
add
pop
xor
mov
jae
shl
jne
xchg
pop
outsb
pop
cli
pop
jge
dec
lahf
das
pop
push
iret
or
add
popf
add
aaa
cmp
mov
sub
fwait
sub
push
sub
outsb
add
insb
notl
xchg
fdivrs
jne
in
cli
sbb
push
cmp
mov
dec
or
sbb
out
pop
andb
ret
je
xchg
xor
pop
cmp
or
mov
fiadds
cltd
not
jl
pop
sub
loopne
in
aad
inc
push
adc
subb
cltd
pop
lds
mov
pop
aaa
and
fcmovu
mov
shl
mov
je
cwtl
push
les
ja
mov
cmp
jnp
das
push
sbb
ret
and
pop
adc
xor
adc
daa
cmpb
loope
leave
loop
orl
rorb
mov
push
push
pushf
popf
and
sarl
imul
cmp
cld
cld
xlat
dec
xchg
push
pop
sbb
push
lock
inc
in
or
lods
in
std
xor
subb
popa
fcompl
xchg
ds
and
mov
and
mov
cli
sub
jl
inc
jno
daa
clc
or
sbb
lahf
repnz
into
or
sahf
daa
and
mov
test
test
add
ret
pushf
bound
mov
out
fmuls
pop
dec
xor
imul
out
test
sar
sahf
neg
mov
call
xor
cmp
test
pop
sahf
call
test
mov
fwait
clc
mov
inc
sub
pop
inc
adc
cmp
js
push
push
jbe
std
cmp
mov
mov
addr16
stos
pop
sahf
sbb
mov
ljmp
test
stos
call
xchg
inc
outsb
insb
or
lret
in
pop
out
xchg
ljmp
push
fstp
cli
jbe
vpmaddwd
mov
in
or
inc
jp
cmc
adc
sub
lahf
aas
inc
frstor
mov
cs
ret
ds
inc
stc
and
cmp
scas
pop
je
inc
add
leave
pop
cmpb
dec
inc
mov
pop
test
xor
aas
xchg
sahf
filds
add
xchg
inc
pop
mov
xorl
mov
dec
push
sti
adc
mov
fs
lret
sahf
and
mov
add
sub
rolb
inc
ret
xor
lahf
cli
xchg
lahf
enter
cmp
adc
xor
and
cli
mov
xor
xor
push
xor
imul
lds
lahf
mov
push
or
sti
je
push
sarb
lods
mov
icebp
pop
lahf
scas
mov
pop
jmp
jecxz
or
sbb
push
lahf
lahf
ss
pop
in
rcl
sub
mov
cmp
popf
imul
and
repz
ja
xor
or
movsb
adc
mov
decl
inc
scas
and
mov
hlt
fildll
lret
dec
outsl
or
mov
or
addb
lock
cwtl
outsb
adc
inc
sbb
lods
sub
mov
push
dec
aam
mov
dec
call
nop
das
sub
aaa
push
rcr
out
imul
lcall
pop
cmpsb
sahf
xchg
add
shrb
jmp
jo
lret
insl
inc
push
xchg
dec
rorb
rol
or
sbb
roll
stos
xchg
inc
dec
jle
dec
hlt
rorl
mov
jnp
cld
inc
xor
jns
outsb
je
mov
in
pop
mov
xor
cmp
lret
xlat
push
fbld
sbb
jne
mov
loopne
add
adc
scas
roll
int
sbb
je
cs
xchg
mov
arpl
pop
js
jg
repz
lods
jno
fiaddl
imul
mov
push
mov
mov
pop
lret
movsl
popf
and
ja
sub
fucomip
lea
repnz
adc
cmp
xor
inc
lea
and
or
dec
pop
inc
mov
dec
cmpsb
cmp
cli
sbb
subl
cld
or
cmp
mov
icebp
and
aam
cmp
cwtl
sub
add
lods
enter
pop
or
addl
repnz
jnp
iret
mov
sti
ja
imul
cmp
out
cmp
scas
in
pop
rcll
mov
jle
xor
adc
xchg
in
mov
out
xchg
shlb
push
mov
cmpsb
js
mov
mov
lea
jmp
into
negl
cmp
mov
adc
imul
mov
call
fldt
xchg
outsl
stos
xchg
stos
and
lahf
mov
arpl
mov
cmpsl
jnp
inc
sbb
xchg
std
ret
icebp
inc
leave
ja
in
mov
icebp
mov
sub
mov
xchg
aam
cmpsl
out
fistps
adc
into
popl
jns
cmpsb
das
iret
lock
js
jg
adc
xchg
sub
lahf
ja
mov
dec
shrb
gs
out
mov
sahf
cmp
xchg
movsl
push
dec
fwait
mov
repz
stos
mov
shll
std
mov
pop
add
push
out
in
xlat
mov
push
xchg
mov
cld
addr16
imul
mov
jns
cmp
push
pop
cmpsl
mov
lret
sub
push
dec
popa
or
push
adc
ficoml
test
mov
rorb
lahf
cmp
cmp
xchg
pushf
mov
pop
cmpl
in
sbb
jne
fistl
push
loope
push
loope
mov
scas
lahf
xor
mov
xor
mov
mov
mov
in
lods
sub
cmp
mov
adc
fidivl
add
mov
lods
mov
add
lret
mov
sub
mov
push
cmp
in
std
mov
xor
xor
adc
pusha
lock
fdivrl
cs
or
cmpsl
pop
pop
outsl
push
push
mov
fiaddl
test
sbb
in
stos
out
push
addl
mov
int
push
jo
scas
jecxz
or
stos
cs
mov
xorb
imul
mov
xor
cmpb
outsl
jne
in
mov
in
xchg
jbe
sahf
aam
scas
add
dec
scas
mov
dec
cwtl
push
dec
mov
or
iret
loop
stc
sbbb
sbbl
dec
in
push
push
icebp
add
leave
push
lret
xor
lcall
rcl
inc
sub
push
mov
loopne
std
nop
testl
dec
or
or
sub
xchg
cli
pop
fs
or
data16
lds
pop
adc
adc
mov
sub
sub
stos
ficoml
or
sahf
mov
js
shl
jo
xchg
icebp
int3
lods
popa
cwtl
push
push
push
adc
dec
sub
insb
or
sbb
sbb
lcall
icebp
pop
repnz
shlb
pop
test
aam
insl
inc
enter
or
mov
add
in
xchg
jns
and
setno
outsb
fidivs
aas
imul
pop
inc
mov
push
aad
in
pusha
movsb
rep
jg
inc
xor
daa
push
rcrb
push
push
sbb
mov
mov
jns
iret
lods
jbe
outsb
fnsave
dec
shlb
push
or
adc
shlb
pop
pop
mov
std
jl
push
bound
mov
loop
cli
adc
pop
inc
sbb
sbbl
test
xchg
je
inc
mov
jl
cltd
enter
or
inc
pop
xchg
inc
repz
fcoms
cltd
add
mov
repnz
jge
dec
or
rclb
fdiv
rcll
sarb
movsb
inc
mov
ss
imul
cwtl
sub
dec
sbb
push
mov
mov
das
movsl
movsl
enter
pop
popa
loope
adc
pop
pusha
xor
adc
inc
sbbl
and
cmp
js
insb
inc
loop
pop
mov
scas
in
mov
add
mov
stos
xor
and
and
scas
stos
mov
mov
divb
xor
stos
sbb
les
jne
or
lea
mov
lahf
jno
jle
fucomi
repnz
pop
cmpl
lods
inc
or
dec
lds
js
jae
adc
or
xorb
shl
push
mov
mov
addr16
and
lret
negl
testb
push
dec
aaa
add
adc
push
fldenv
lahf
repnz
push
xchg
pop
add
mov
jb
test
pop
mov
adc
dec
adc
test
pop
sbb
add
sub
lock
mov
jo
pusha
sbb
or
mov
push
adc
outsb
andb
enter
sbbl
or
jns
push
jecxz
sarb
add
sbbb
movsl
or
inc
loopew
sar
sbb
cs
jle
cltd
xor
push
push
test
xchg
inc
sbbb
jo
shlb
pop
cmp
popa
test
stos
and
call
mov
push
insb
pop
add
enter
addr16
adc
pushl
inc
dec
jp
adc
aaa
sub
xchg
enter
mov
xchg
and
test
shlb
stos
lods
xor
es
cmp
lea
movsb
jne
movsb
jecxz
clc
and
mov
mov
mul
std
sbbb
inc
popa
xor
xor
in
inc
aaa
mov
daa
mov
mov
adc
push
fs
mov
lods
xor
adc
popa
or
mov
int
push
ficomps
cmpsb
scas
pop
cld
insb
xchg
bound
scas
cs
push
dec
inc
es
mov
pop
jns
mov
xor
or
push
movl
and
mov
lods
lahf
mov
fs
loope
xchg
push
jmp
pop
ss
cmp
lret
cmp
jg
mov
shrl
jg
mov
pop
xor
fisubrs
bound
rol
fidivl
and
sbb
sar
mov
inc
xor
adc
insb
add
add
nop
cmc
push
sbb
stos
subl
push
sti
or
inc
or
sub
mov
jno
cmp
lds
mov
or
pop
scas
js
xlat
sti
cmpsb
repnz
adc
inc
mov
insb
ss
mov
and
cmp
lret
stos
mov
aaa
and
add
add
movsl
cmp
mov
aam
rolb
scas
testb
and
cmc
dec
and
jno
fmull
mov
cmpsb
xor
test
adc
and
imul
inc
les
movsb
roll
out
and
jo
hlt
xchg
pop
loope
push
jns
lds
call
lds
fld
in
call
out
pop
fistpll
dec
adc
fidivl
pop
fwait
ss
daa
out
lds
adc
mov
dec
sbbl
mov
dec
mov
xchg
inc
sub
out
jae
mov
ljmp
std
addr16
scas
cmpsl
leave
xor
push
fdivs
ja
idivl
sahf
or
mov
inc
dec
sahf
or
pusha
dec
je
xchg
scas
inc
dec
push
movsl
lret
xchg
sbb
sbb
jg
dec
icebp
sbb
mov
adc
xor
in
mov
mov
add
xchg
into
sbb
call
mov
addr16
cmp
int3
xchg
sbb
aas
cmc
cld
sbb
cltd
cli
popf
mov
fnstcw
movsl
sti
cwtl
inc
xor
adc
stc
insl
in
into
mov
sti
sbb
insl
iret
addr16
stos
bound
push
push
pop
out
icebp
inc
call
loope
push
cmp
xchg
ds
or
mov
mov
leave
dec
popf
mov
mov
aaa
mov
ficomps
insb
pop
test
jg
jnp
mov
inc
and
scas
test
scas
adc
adc
push
jecxz
in
cmp
outsl
push
test
xchg
sbb
push
idivl
jl
gs
fwait
test
xchg
mov
jae
loopne
loopne
and
pop
sub
lods
and
aam
mov
shrb
std
jg
jo
insl
out
bound
lcall
dec
inc
add
into
iret
inc
or
cltd
dec
dec
test
daa
mov
ret
lcall
mov
ss
out
pop
jl
jno
push
test
test
pop
adc
fs
in
push
sub
mov
pop
sub
and
rep
add
pop
jne
imul
mov
dec
mov
or
push
pop
mov
pop
mov
cmp
mov
mov
mov
xchg
xchg
leave
or
inc
push
and
lods
out
movhps
outsb
inc
aas
mov
outsl
hlt
push
inc
xlat
mov
test
repnz
scas
subl
fmul
pusha
movsb
xchg
mov
xchg
nop
out
mov
cmp
mov
dec
mov
mov
jp
xchg
dec
xlat
sbb
int
push
sub
push
push
notb
js
push
xchg
movsl
js
imul
xlat
std
mov
dec
scas
cwtl
dec
jg
data16
mov
js
pop
jnp
in
cmpsb
loopne
arpl
enter
fcomps
int3
push
sbb
notl
sub
adc
sbb
fnstenv
sbb
shr
mov
and
rclb
pop
sbb
pop
and
xor
lock
mov
sahf
arpl
lret
xchg
and
add
test
jmp
mov
mov
sbb
aam
jae
inc
cmpsb
cmp
push
push
ret
add
test
push
rcl
fadds
pop
inc
push
out
cli
xor
xlat
xchg
mov
dec
sub
ss
jo
fisubs
leave
fnstsw
cld
sub
aam
pop
sahf
xchg
mov
aam
sbb
add
shlb
mov
rclb
icebp
xchg
enter
adc
pop
pop
div
xor
shld
cmpsb
inc
pop
inc
pushf
movsl
add
and
stos
mov
pusha
ljmp
push
and
xor
pop
sar
adc
out
xchg
dec
pushl
mov
sbbb
popa
gs
inc
xchg
sbb
xor
sub
push
scas
std
mov
mov
dec
lock
int3
push
cmp
bnd
cmp
jbe
roll
arpl
mov
int3
lret
mov
test
out
lret
pop
call
xchg
je
iret
lock
fistps
hlt
scas
daa
lock
push
arpl
add
inc
pop
pushf
jmp
xor
sti
xchg
vmovups
push
sbb
xchg
jmp
push
and
out
inc
xchg
or
pop
enter
bound
shll
push
push
es
outsb
rorl
pop
test
mov
ds
add
icebp
shll
imul
imul
idivb
test
sbb
imul
iret
add
push
out
movsb
sub
and
xor
in
out
pop
push
aas
jnp
mov
inc
dec
and
or
cmpsl
jp
xor
sti
out
xorl
sub
add
push
dec
nop
test
subb
or
jno
call
push
je
stos
xor
mov
test
jb
dec
jb
cltd
aaa
pop
jns
push
and
inc
gs
mov
shlb
test
jge
test
cwtl
sub
cmp
lds
sbb
negl
outsl
popf
mov
lds
insb
xor
pop
xchg
clc
mov
pop
xchg
push
dec
movl
mov
pop
jge
cmpsb
and
xor
lret
adc
mov
scas
stos
inc
xchg
in
pop
add
adcb
loope
outsb
sbb
test
inc
shl
je
popa
sti
aaa
and
jb
sub
inc
sub
out
xchg
inc
lret
mov
jbe
inc
lret
sbb
or
popa
push
jmp
cmp
xor
pop
xor
fs
cmp
fnstcw
add
pop
jo
stos
loope
pushf
xchg
jmp
iret
rol
loope
hlt
addr16
inc
jno
cmp
stos
cmpsl
or
rcr
repz
push
inc
repz
rorl
dec
scas
inc
fdivs
sub
aam
mov
pusha
jb
out
xchg
int
pusha
call
mov
cmp
dec
lds
in
subb
repz
popa
pop
pop
pop
in
inc
mov
inc
dec
xor
test
sub
cli
daa
dec
xchg
in
mov
hlt
or
xor
mov
mov
out
xchg
mov
into
cmp
mov
jge
jbe
jge
lcall
js
cld
call
xor
sahf
mov
add
pop
mov
pop
test
fldcw
mov
push
cmp
sbb
lret
stos
inc
into
aas
xchg
gs
and
cwtl
mov
dec
stc
inc
add
inc
mov
cmc
jae
inc
cmp
adc
pop
mov
nop
add
or
rcll
xchg
push
dec
cs
adc
mov
inc
jecxz
cmp
into
mov
and
or
pop
pop
or
movsl
xor
out
or
jns
pop
jge
mov
shrb
repz
mov
sti
stc
cwtl
jge
dec
aam
icebp
les
cmpsl
mov
push
jb
or
or
ud2
call
pusha
xor
inc
mov
cs
mul
inc
scas
add
in
scas
repz
pop
data16
scas
pop
test
adc
in
cmp
cmp
lea
clc
sarb
cwtl
and
pop
inc
mov
mov
pop
lahf
mov
xor
mov
cmp
fiaddl
sbb
pop
scas
lea
jle
loope
out
and
clc
leave
xor
sub
addr16
fsub
jmp
cmc
jae
push
or
mov
mov
aad
mov
jp
inc
cmp
jnp
push
sbb
push
or
imul
daa
cmc
pop
lds
out
mov
pushf
cmc
mov
mov
outsb
cmp
and
lcall
pop
mov
sub
push
std
jle
sbb
std
popf
jmp
xor
push
es
xchg
sub
sub
xor
jo
js
ror
andl
ror
xchg
mov
jb
adc
pop
sbb
mov
xchg
lcall
mov
in
pop
mov
stos
aad
sub
fmull
in
or
xor
mov
pop
sub
cmp
data16
outsl
cmpsl
mov
pop
xor
sbb
call
adc
pop
cmpsb
push
pop
arpl
int3
in
lret
adc
pop
test
push
sub
cmp
inc
rcrl
roll
pop
xchg
lea
inc
ja
repnz
stos
inc
jb
mov
popa
mov
cmpsb
dec
pop
bound
xor
cmp
pop
inc
shrl
sarl
cmpsb
dec
xchg
xlat
cmpsb
pop
imul
ja
jno
add
repnz
push
pop
lea
movsl
push
test
pop
ficoms
pop
scas
std
pop
fidivs
out
cs
mov
ret
xor
pop
push
lret
mov
mov
pop
dec
je
inc
jecxz
popa
or
add
or
inc
mov
pop
inc
lret
xor
jae
push
call
lcall
pop
or
dec
cwtl
push
outsl
push
sbb
pop
sbb
fwait
cmp
aam
jg
icebp
push
outsb
scas
sbb
xorl
dec
andb
in
sti
nop
std
xchg
sahf
filds
xchg
lds
in
popa
inc
lods
cmovg
aad
cmpsl
ja
pop
das
adc
xor
mov
insb
push
stos
inc
inc
inc
mov
mov
pop
fistps
pop
imul
add
rep
cmp
ja
jmp
stos
xor
fistpl
scas
dec
cmp
into
call
jmp
or
adc
aam
adc
int3
sub
loopne
loop
dec
lea
subb
int3
fs
sbb
and
and
mov
iret
sbb
xorb
jmp
movsb
jl
or
fiadds
call
lds
adc
mov
insb
mov
testl
out
xor
inc
jg
sub
jmp
cmpl
scas
pop
inc
xchg
imul
sti
in
addr16
mov
mov
pop
ljmp
sti
push
cli
movsb
out
popf
out
push
into
fistpll
int
or
clc
stos
mov
push
fmul
xchg
bound
adc
cmc
sti
mov
pop
xchg
add
cmp
jbe
mov
mov
and
fsubrs
rclb
mov
inc
jne
sbb
add
push
xor
adc
test
xchg
adcb
cmp
inc
je
push
mov
pop
shlb
add
fildl
xchg
or
stos
ret
mov
loopne
orl
mov
lahf
dec
movsb
sti
sahf
adc
xchg
sbb
ret
repnz
pop
ds
mov
and
out
test
stc
pop
fnstsw
call
into
outsb
dec
outsb
jne
pop
and
imul
dec
lret
ret
cmp
adc
in
std
stos
pop
jge
xchg
out
dec
mov
inc
xchg
lahf
mov
xchg
mov
xor
js
fisubrs
test
repz
mov
rorb
push
es
dec
cmpsb
popa
cmp
jo
insl
push
lods
jecxz
jb
mov
or
enter
add
shlb
shrb
loop
mov
mov
gs
rcrl
insb
int
mov
inc
adc
loop
mov
push
xor
in
ret
arpl
add
jo
fmuls
push
pop
shl
pusha
lret
fs
mov
adc
mov
sub
mov
loop
add
fstpl
mov
pusha
cs
push
add
or
test
xor
movsb
sbb
jbe
nop
ja
sub
mov
push
cwtl
sub
test
lahf
das
imul
mov
mov
adc
jge
jb
inc
or
call
cmp
xchg
mov
test
icebp
andl
add
ja
sbb
and
call
and
or
push
push
imul
gs
inc
lret
jnp
mov
sub
in
dec
jne
ds
adc
cmp
inc
mov
in
inc
out
cmp
cli
out
das
sbb
or
cmp
andb
ja
stc
adc
call
push
push
add
mov
rcl
movsb
xchg
mov
jmp
cmp
dec
in
sbb
repnz
in
push
dec
mov
out
shrb
fbstp
movsl
or
dec
std
cmp
lret
adc
fsubs
aam
push
adc
xchg
lret
inc
das
mov
cli
cld
xchg
pop
jnp
nop
pop
ja
cmp
or
cwtl
push
cmp
es
cmpsb
or
clc
sbb
shrl
mov
adc
dec
clc
xchg
dec
nop
out
scas
aas
sbb
add
sbb
xchg
dec
pop
pop
aam
mov
jecxz
push
or
in
in
push
add
inc
mov
jl
loopne
push
mov
xchg
xor
inc
pop
jmp
pop
scas
imul
jbe
jb
sub
mov
popa
and
push
cmp
dec
jle
jne
push
adc
xchg
cmp
ds
icebp
sbb
or
push
cli
xlat
fidivs
or
mov
push
cmpb
fmuls
in
cmp
jmp
rclb
movsb
mov
scas
push
cmp
lods
fstpt
imul
icebp
mov
push
test
movsl
jbe
int
xor
lds
xchg
jecxz
loope
repnz
push
pop
out
jmp
pusha
test
scas
xor
imul
iret
xlat
stos
xchg
jecxz
xchg
in
push
inc
sbb
push
in
mov
inc
push
and
add
sysexit
xchg
arpl
xchg
ss
enter
add
push
mov
sub
test
mov
add
xor
mov
xchg
dec
add
decl
into
pop
inc
sbb
ss
add
and
out
aam
mov
add
lock
shll
and
nop
js
mov
cmp
int3
adc
sbb
shl
pop
arpl
mov
inc
lock
jo
stos
jno
les
nop
loop
out
add
arpl
pusha
in
add
xchg
mov
push
mov
aam
sbb
es
in
aas
jle
pop
dec
add
mov
adc
cmp
ret
sahf
stc
cmpsb
mov
adc
push
push
cmp
out
inc
fmull
subl
je
xor
push
repz
ja
jbe
test
icebp
pop
push
xor
mov
and
mov
pop
cmp
mov
cmp
push
ljmp
pop
add
dec
cli
adc
shll
xchg
rclb
enter
cltd
enter
sahf
popf
jmp
push
lods
jmp
rorb
sahf
fstl
sbb
ret
push
sub
adc
sub
cmp
pusha
xchg
mov
xchg
test
mov
lea
outsl
loopne
mov
cltd
mov
bound
loopne
mov
xchg
cmp
ficoms
shrl
iret
mov
mov
fadds
adc
sbb
insb
sahf
lret
and
sbb
out
and
mov
mov
enter
lea
fnstcw
xor
sbb
fdivs
inc
sub
pushf
stc
add
ds
out
hlt
outsl
divb
xor
dec
addr16
inc
xchg
or
adc
jae
out
imul
mov
pop
out
cmpsl
rclb
sbb
cmp
nop
aaa
cmc
adc
sahf
addr16
mov
cmp
outsb
and
cmp
dec
add
jle
pop
sbb
cmpsb
xorb
stc
jecxz
sbb
and
xchg
imul
mov
imul
mov
add
mov
lods
dec
test
or
xchg
dec
fistpll
insl
insl
mov
add
jbe
xor
daa
cwtl
xchg
lock
nop
add
int3
push
sbb
stc
mov
push
sbb
xchg
out
pushl
add
xchg
xchg
fidivs
push
ret
xchg
js
lahf
je
arpl
dec
adc
mov
pop
je
or
jnp
or
outsb
aaa
fcmovnu
lea
fnstcw
shl
and
out
bound
dec
and
push
dec
sbb
and
lods
icebp
adcl
sub
hlt
cmc
stos
lret
movsl
fidivl
and
jmp
cmpb
lret
lods
pop
and
mov
into
pop
cmp
push
dec
mov
mov
push
push
addr16
or
mov
and
or
or
lea
add
adc
lods
repz
les
andb
out
cltd
cmp
mov
movsb
lock
ss
out
adc
mov
ja
dec
je
rorb
cld
out
imul
mov
fwait
fs
hlt
stos
jl
shr
inc
cld
xchg
sub
fldcw
inc
dec
sub
ds
cmp
jmp
jnp
sbb
jmp
loope
sbb
andb
fsubr
das
jbe
shlb
mov
pop
inc
sub
xchg
adc
sub
mov
loop
add
adc
mov
cmp
add
sub
lock
push
data16
dec
sbbl
cmp
push
cltd
shrl
jg
push
popf
adc
int
fbld
call
or
add
stos
cmp
jo
sub
inc
fsubrp
inc
cmp
ret
outsb
mov
insl
in
stc
mov
xchg
pop
jae
cltd
cmpsb
hlt
jecxz
mov
inc
and
adc
icebp
mov
pop
int3
mov
lods
xor
shl
sbb
ficoml
lds
mov
loopne
mov
xor
ret
hlt
xchg
decl
sbb
sub
mulb
add
jne
inc
and
sbb
mov
imul
call
xorb
xchg
xor
lds
xor
jl
popf
dec
fsubl
lods
arpl
mov
sahf
mov
mov
jne
rolb
fadds
xor
popa
and
mov
cld
scas
stos
adc
dec
mov
add
adc
jbe
les
jecxz
pop
push
dec
sti
mov
mov
adc
dec
push
loopne
pop
ds
into
jp
lds
in
inc
mov
and
movsb
stos
fdivrs
fcomps
push
push
push
insl
cmp
jg
push
adc
jge
js
lea
call
sub
js
int3
mov
int3
mov
pushf
mov
add
xor
gs
lahf
iret
sbb
push
and
xor
mov
inc
bound
call
cld
pop
cmp
sub
xor
pop
bound
std
mov
cmpsb
mov
cmp
dec
repnz
leave
lret
rcll
cmc
pop
daa
cmp
cmp
push
adc
mov
sbb
cld
or
sarb
sbb
or
lahf
adc
push
or
pop
jne
mov
mov
aam
adc
fs
pop
ret
mov
jmp
test
stos
pop
push
pop
mov
shll
sbb
loop
ret
iret
or
pop
lods
mov
inc
xchg
int3
ficoml
dec
or
jbe
cmp
dec
mov
and
pop
xor
add
push
fcomip
test
ljmp
inc
xchg
iret
adc
jnp
lret
sub
xor
or
push
test
jl
jle
sti
and
int
fxch
push
std
jmp
stos
xor
push
addr16
and
fisubrs
and
jno
push
imul
dec
popf
adc
adc
sbb
mov
cli
ficompl
repnz
into
pop
imul
clc
test
stos
mov
sbb
jecxz
add
repz
and
dec
xchg
fisubrs
push
and
ljmp
dec
pop
lds
mov
loop
adc
fstpl
mov
xchg
lods
ficomps
jg
mov
lahf
bound
test
lcall
out
inc
inc
out
lock
and
out
ss
push
mov
movsb
add
arpl
rorl
lods
dec
or
fisubrs
pop
xor
mov
cmp
ret
lds
fnstenv
pcmpeqd
dec
out
mov
outsb
mov
in
stc
int
add
imul
inc
out
clc
mov
pop
pand
mov
or
daa
or
sbb
xchg
movsb
pop
or
ret
lods
xor
dec
popf
or
rcrb
aaa
es
cmovnp
cmp
adcb
mov
push
insb
jns
adc
loope
iret
daa
outsb
or
mov
aam
and
cmc
shlb
jmp
ja
insb
jo
xchg
xchg
sbb
cmp
and
pop
add
mov
aad
or
push
in
inc
xchg
cmp
xlat
push
jmp
ret
adc
or
daa
sub
mov
pop
test
dec
stos
dec
dec
fstpt
pop
sbb
inc
mov
popa
aas
lods
iret
jno
aaa
test
cltd
pop
jecxz
lret
mov
adc
in
xor
xchg
jno
addb
cmpb
xchg
pop
jb
add
xlat
filds
lahf
xchg
inc
insl
cmpsb
add
cltd
push
xchg
adc
mov
inc
mov
cld
popa
mov
or
mov
mov
mov
popa
cld
jo
cmp
repnz
movsl
repnz
aad
mov
cwtl
mov
sub
add
inc
xor
lret
pop
fistps
sub
xchg
add
ja
inc
in
pop
ret
ss
add
cmp
jo
inc
call
orb
push
bound
imul
xchg
mov
mov
cld
loop
adc
sub
mov
sbb
stos
adc
xchg
inc
jno
jnp
mov
or
movhps
lcall
pop
das
pushf
jle
xor
lcall
shrl
pusha
inc
inc
ret
add
add
or
gs
mov
sbb
fs
test
dec
aaa
jno
sub
sbb
push
adc
iret
xchg
push
add
imul
dec
inc
pop
sbb
jmp
mov
cmp
add
xchg
lock
jle
mov
enter
or
out
pop
cmc
outsb
imul
out
dec
cli
jbe
add
sbb
sti
jno
test
xlat
add
movsl
popa
mov
dec
hlt
adc
dec
repnz
add
decl
xor
fxch
push
loope
in
cli
xor
sahf
push
jg
icebp
hlt
dec
fsts
int
xchg
sbb
add
add
mov
clc
fs
cmc
mov
sub
test
ja
push
cld
inc
out
shlb
or
sbb
mov
shll
data16
push
roll
je
subl
in
movsb
jmp
dec
adc
jns
mov
xor
gs
rcrl
cmp
adc
mov
lcall
mov
outsb
push
inc
add
or
lods
lods
sub
int3
call
sub
bound
and
jae
mov
nop
shlb
adc
fsubrs
lods
lods
jmp
or
cld
push
addr16
inc
cwtl
ljmp
mov
fiadds
xchg
shll
mov
in
or
mov
xchg
inc
dec
pop
insl
xchg
cli
add
xor
and
mov
jo
std
ja
mov
stc
mov
mov
jbe
sbb
fstl
xchg
out
mov
adc
push
mov
push
dec
js
adc
xchg
pop
scas
lahf
and
aad
movsl
int
sub
cmp
cwtl
dec
xchg
fists
pop
fldl
cmp
pop
jge
fs
xchg
imul
and
mov
clc
push
sbb
cli
xchg
xor
pmaxub
loope
std
xor
out
nop
bound
ljmp
aad
into
pop
fisubs
xchg
cmp
sub
fldenv
test
stos
enter
push
outsl
xor
ret
incl
imul
int
push
add
lock
jecxz
xor
add
sub
dec
pop
daa
pushf
lods
test
clc
mov
repnz
xchg
std
xchg
cld
lock
testb
cli
jbe
sahf
mov
movsb
lahf
mov
iret
sbb
not
or
pop
cmp
cs
test
mov
mov
imul
inc
fwait
add
orb
jae
popf
mov
xor
cmp
inc
sbb
add
aaa
mov
push
icebp
add
lods
sub
cmp
int
cltd
pop
lahf
mov
iret
pop
call
jne
push
div
into
inc
cmp
sbb
pop
addl
xchg
pushf
sarb
dec
movsb
inc
mov
iret
movsb
sbb
mov
or
lds
sub
jle
rdtsc
and
cmp
out
call
ret
inc
push
pop
add
jle
or
in
clc
stos
mov
mov
or
adc
mov
in
add
inc
das
mov
mov
xchg
sub
jle
or
pop
mov
dec
movsb
in
mov
dec
jne
lock
leave
loopne
pop
mov
push
ja
xor
pushf
dec
out
and
dec
xor
out
xor
gs
daa
mov
inc
pop
fs
iret
sbb
idivb
sub
xchg
stos
call
test
inc
jb
cmp
pop
pop
repz
pop
les
push
mov
add
jmp
scas
out
inc
add
xchg
xor
mov
jl
in
add
add
imul
sbb
cmp
addr16
sbb
lret
jb
sub
push
mov
lcallw
dec
test
cltd
push
sahf
dec
fsts
and
call
cmp
dec
fsubs
in
ret
mov
out
outsb
dec
adc
int3
call
fs
push
leave
cmp
clc
daa
adc
movsl
jo
int3
stos
push
in
mov
stos
add
std
ret
or
sbb
icebp
test
dec
cli
mov
iret
push
or
or
jo
jecxz
cs
fs
mov
push
dec
dec
sti
push
jl
lcall
cs
mov
pop
inc
push
mov
inc
pop
hlt
push
mov
mov
cwtl
jbe
inc
cmp
cmc
test
xchg
jg
dec
cli
aad
mov
mov
jno
iret
outsl
sub
ret
bound
cmp
test
pop
loopne
int
xor
adc
or
mov
dec
lahf
sub
and
cmp
aam
mov
stc
nop
inc
cmp
mov
pop
enter
loopne
add
add
sbb
repnz
pusha
fdivrs
scas
loope
mov
mov
mov
shll
movsl
inc
mov
imul
lods
mov
xchg
cmc
popa
outsl
fdivrl
sub
mov
xchg
adc
loopne
pop
xor
mov
fwait
mov
and
lds
fnstsw
dec
sub
cmp
jnp
out
cmpsb
pop
push
jg
loopne
mov
push
sub
lock
repnz
lds
es
stos
mov
or
shl
pop
sub
xchg
jnp
imul
jo
pop
bnd
adc
inc
sbb
pop
test
arpl
shrl
fdivl
xchg
or
jae
int3
jns
nop
sbb
xor
jno
mov
cmp
xchg
fisttpl
and
daa
shlb
jge
or
mov
xor
bound
out
jg,pt
add
xchg
jg
icebp
imul
lret
sub
aad
stc
orl
jae
repnz
out
mul
mov
outsb
or
fsubl
sub
stos
iret
mov
jae
xor
scas
jg
add
sub
fcomps
stos
dec
popf
push
enter
int
mov
xchg
dec
cmpsb
sbb
cmp
mov
pop
pop
into
ss
lret
loopne
inc
loop
push
clc
xor
adc
js
dec
es
insl
cmc
mov
pop
pop
mov
push
stos
arpl
fiadds
pop
lock
pop
iret
ja
repnz
add
fstl
imul
adc
dec
mov
fs
cltd
adc
inc
pop
jne
mov
scas
adc
pop
add
stos
out
jmp
jae
xlat
inc
fcomip
out
jns
push
jmp
and
fscale
add
xlat
jp
mov
jns
mov
inc
xor
pop
or
test
ret
int
push
pushf
xchg
or
add
dec
mov
movsb
iret
shll
cs
lret
and
mov
jno
xor
dec
mov
mov
inc
adc
jle
xchg
cmp
ret
out
sub
pop
adc
stc
push
lret
jns
or
mov
imul
jmp
dec
jecxz
movsb
dec
cli
push
pop
xor
divb
sub
cmp
inc
mov
xchg
nop
xor
inc
rorl
bound
das
push
lret
pop
pop
movsb
jecxz
jbe
mov
cmp
in
mov
xchg
out
sbb
xchg
outsb
jg
and
mov
adc
pop
push
test
test
lds
stos
jmp
test
loop
xchg
or
dec
rcl
xchg
inc
in
lret
dec
std
xchg
stos
scas
cmp
lds
mov
rolb
out
outsl
inc
bound
jmp
pop
jne
mov
pop
push
cli
inc
push
lods
dec
in
popf
lds
cmp
inc
jmp
aad
stc
jmp
fwait
ja
lods
jns
xor
out
jno
cmp
jns
in
dec
push
sbb
frstor
int3
sbb
jle
ljmp
add
ljmp
test
call
dec
pop
xor
ljmp
lret
pusha
pop
stc
push
inc
imul
movsb
xchg
push
adc
sbb
sub
nop
xor
stos
jge
clc
mov
or
scas
mov
add
jmp
out
movsb
adc
outsb
aad
add
addr16
repz
cltd
cli
lods
cwtl
inc
push
mov
das
pop
jmp
pop
mov
jl
call
pop
xchg
mov
xchg
or
rolb
adc
movsl
dec
pushf
xor
arpl
sub
fsqrt
sub
jmp
imul
jne
sti
jne
and
out
fistl
sahf
and
mov
mov
imul
in
je,pn
dec
inc
iret
jb
jmp
adc
in
mov
lret
adc
es
pop
dec
in
icebp
add
sbb
in
xchg
aad
popf
testb
daa
pop
mov
push
leave
loopne
lea
dec
cld
sbb
add
dec
jb
xlat
inc
fs
fidivrs
mov
add
jle
mov
or
mov
rcl
adc
mov
cmp
mov
xchg
xor
add
sbb
jle
or
popa
or
shrl
sbb
loop
xchg
xor
cwtl
andl
subb
pop
ret
dec
adc
inc
mov
add
mov
loope
in
jae
pushf
rorb
adc
movsl
xor
pusha
and
ficoml
push
push
push
jecxz
negl
lock
ljmp
insb
xlat
sbb
scas
sahf
pop
js
add
or
xchg
int
xor
push
mov
mov
or
mov
pop
mov
xor
addr16
xchg
lock
test
arpl
mov
dec
mov
ret
ret
test
inc
fsubrs
mov
cmp
popf
in
mov
inc
fs
lret
imul
cmpsb
hlt
popa
jl
sbb
fmul
lea
xor
cmp
and
fisttps
dec
out
clc
jg
mov
and
dec
cmp
xchg
fldl
faddl
out
inc
aad
shlb
inc
cmpb
outsb
mov
xchg
dec
cmpsl
or
adc
dec
and
popa
adc
jno
mov
call
adc
jle
sub
xor
mov
add
mov
or
jne
inc
test
push
test
bound
cmpsl
stc
lods
mov
mov
nop
jno
fincstp
sbbl
nop
push
and
push
jg
add
scas
les
sbb
ljmp
cmp
ficoml
dec
adc
and
sub
or
jns
fwait
adc
push
mov
sbb
popa
xor
sbb
xor
xchg
fchs
test
aas
popf
data16
xchg
mov
dec
out
cmp
mov
xor
and
into
jle
aas
std
andl
cmpl
loopne
les
adc
mov
stos
shl
pop
sbb
in
xchg
daa
mov
add
xor
cwtl
adc
les
and
js
popf
lahf
shrb
fldt
out
loopne
shr
jp
fisubrs
sbb
push
out
icebp
sti
shl
loope,pn
pop
cli
scas
fcompl
int
mov
xchg
lds
shl
cmp
push
lods
nop
or
pop
or
leave
jl
jp
mov
sub
xor
mov
pusha
test
repz
fstpt
ret
movsl
xor
fcompl
jmp
sti
cld
cmp
dec
mov
push
es
shl
xor
or
cmp
stc
mov
mov
icebp
push
pop
cmp
ljmp
and
cmpl
sahf
imul
dec
mov
push
adc
aas
inc
outsb
and
bound
pop
int
cltd
decb
fisttpl
fmull
scas
shr
push
push
push
or
loope
or
inc
icebp
xlat
jecxz
sbb
pop
jmp
mov
sbb
xor
dec
nop
je
adc
stos
inc
scas
sbb
xlat
decb
pop
push
sbb
xorb
out
fdivl
inc
data16
jno
test
mov
pusha
shl
cmc
in
adc
test
sahf
daa
xchg
jae
in
les
jmp
in
cmpsl
mov
dec
repz
inc
jge
push
add
adc
outsl
inc
push
sbb
or
or
jne
and
xor
int
ss
jmp
lods
ljmp
sub
cmp
pop
pusha
sub
pop
in
push
xor
and
or
loop
movsb
push
sbb
pop
mov
cmpsl
pop
stc
sahf
mov
movb
xchg
xchg
jo
loope
cmp
mov
mov
ja
jbe
mov
mov
ljmp
jle
mov
outsb
hlt
push
sub
loop
push
insb
jb
cmp
xor
xchg
cmp
sahf
cmc
loopne
fcompl
adc
xchg
in
push
fisttps
xlat
ja
stos
mov
mov
stos
ret
mov
out
jecxz
dec
aas
jl
mov
xchg
and
out
cli
xchg
aad
fisttpl
inc
xchg
mov
sub
push
sbb
loopne
dec
jmp
mov
hlt
test
add
call
mov
mov
add
xor
out
rcl
jecxz
or
push
dec
hlt
cltd
jns
push
popa
shl
or
push
adc
shrb
mov
jp
mov
push
push
je
add
lahf
test
jle
pop
mov
lods
fmulp
mov
jae
jns
push
stos
mov
or
cwtl
shr
loop
xchg
mov
shlb
fisubrs
leave
adc
sub
cmp
dec
adcb
movsb
inc
mov
je
leave
xchg
xchg
test
es
cmp
js
sbb
adc
mov
sahf
filds
inc
jecxz
int3
inc
mov
ljmp
push
dec
popf
dec
mov
xorb
inc
leave
cmc
inc
aad
inc
push
insl
add
adc
cld
mov
inc
mov
packsswb
jns
push
int3
xchg
xor
cli
dec
sub
popa
adc
std
mov
sbb
adc
sub
and
mov
repz
mov
lock
gs
movsl
fildl
or
jge
pop
xlat
je
je
push
ret
stos
jb
ja
jecxz
cltd
leave
lcall
push
ret
pop
pop
and
or
sub
and
xor
movsl
xor
notb
cld
and
insb
sbb
mov
jno
xor
mov
and
pop
jbe
mov
xchg
xor
push
or
jb
dec
xor
inc
popa
sbb
jp
or
flds
popf
sub
jle
ljmp
mov
addl
add
dec
xchg
xor
xor
in
repz
fwait
push
push
xchg
dec
faddp
dec
and
les
push
stc
mov
cli
xchg
je
fsubl
xchg
mov
out
adc
xchg
cmp
adc
and
loope
push
mov
cmp
cwtl
adc
out
popa
xchg
aam
in
mov
and
ljmp
jp
add
mov
cmp
add
xor
mov
loop,pn
mov
inc
andl
inc
js
cltd
out
jmp
mov
test
dec
lods
cli
push
push
imul
adc
add
out
cmp
jecxz
cli
leave
xlat
push
loope
xor
lock
xor
fdivp
cmp
mov
cltd
mov
cltd
fsubr
push
add
cmc
sub
xchg
xchg
cs
jne
mov
mov
ss
jmp
mov
shrb
xchg
pop
pop
js
in
mov
push
imul
jmp
inc
dec
push
xchg
ds
lds
arpl
add
into
add
clc
xchg
in
lret
dec
movsb
adc
push
bound
xchg
loop
mov
dec
les
mov
pusha
jp
adc
popa
cmpsl
or
lret
nop
sub
push
in
rcll
jmp
into
icebp
dec
inc
cltd
jbe
pop
sub
in
sub
loopnew
les
mov
mov
sbb
insl
ret
mov
sbb
jo
fisubl
pop
fisttps
lcall
xor
mov
ss
leave
jns
loop
movsb
arpl
aaa
pop
sbb
push
push
xchg
call
mov
insl
xor
mov
loopne
push
pcmpgtd
cmpl
xchg
dec
fs
xchg
cmc
and
push
into
loopne
and
fs
mov
cltd
pop
pop
popf
adc
clc
shrl
sbb
mov
call
dec
pop
adc
lds
aad
ja
pop
andb
popa
cltd
jo
pop
fxch
imul
mov
enter
jmp
movsl
cmc
push
ja,pt
add
xor
pop
loope
or
fdivp
cmp
dec
cmp
lock
cwtl
mov
push
stc
arpl
xchg
lret
sub
pop
shlb
pcmpeqb
scas
push
stc
jle
pop
es
out
or
lret
xchg
cmp
or
lahf
and
je
outsb
movsb
sbb
push
pop
mov
adc
shrl
sahf
lret
and
sbbl
test
sbb
stos
jo
jle
cmp
sbb
dec
ss
rorl
add
rcr
push
bound
insb
testb
jp
add
icebp
mov
ss
je
add
enter
js
mov
add
push
arpl
push
mov
push
stc
jnp
ja
jp
les
lock
in
cmp
add
in
clc
add
loope
inc
xchg
sbb
sub
lods
icebp
sbb
add
xor
pusha
and
adcb
mov
sbb
sub
xchg
clc
sbb
inc
cli
ret
fmul
je
push
bound
add
inc
inc
inc
inc
jne
int3
icebp
sbb
cmp
int
jae
lcall
cmp
clc
int
xor
dec
ljmp
nop
arpl
setae
mov
loopne
inc
jp
mov
push
jg
sti
xchg
jae
data16
es
fidivrl
int
dec
sub
popf
in
fsubp
mov
mov
rcrb
pop
outsb
mov
test
in
fisubs
in
mov
sub
test
pop
xchg
cmp
jl
add
push
jecxz
sbb
cmpsb
shll
mov
fcoms
mov
es
and
fsubl
add
mov
movsb
std
lods
xlat
div
scas
es
pop
in
imul
loop
cmpb
push
adc
sti
push
mov
les
xor
jl
frstor
insl
pop
adc
mov
and
sbb
ret
fnstsw
ret
push
adc
push
jb
mov
pop
jl
stos
das
cmp
pushl
fdivl
adc
inc
mov
inc
sub
ja
vphadduwd
xchg
cmp
or
adc
sbb
add
jne
fcoml
jno
sbb
js
push
pop
aam
cs
popa
adc
push
pop
mov
adcl
xlat
popa
cmp
mov
fisubs
in
xor
mov
lea
push
jbe
mov
jmp
add
cltd
int3
call
cmp
jge
adc
pushf
sahf
test
sbb
and
into
sbb
lcall
cmpsl
stc
ret
mov
mov
push
stos
inc
or
in
jbe
scas
cmp
or
mov
mov
faddl
push
cmc
sub
add
mov
mov
mov
xchg
jbe
fisubs
fistpl
or
cmp
push
cmp
xor
sarb
jmp
push
rcll
ret
mov
or
lods
int3
pop
xor
sub
xor
mov
test
lret
test
or
cmp
jmp
cmc
stos
fisttps
insl
push
pusha
repz
push
popa
and
int
sbbl
fistl
inc
sbb
xchg
iret
mov
adc
addr16
lcall
loopne
fisubs
les
fwait
out
outsb
inc
mov
inc
jb
cmp
pop
dec
sub
mov
inc
ret
lds
fucomp
mov
inc
inc
cmpsb
sbb
rorb
mov
or
pop
sti
ret
push
int
gs
or
test
inc
dec
and
sub
in
aam
mov
cmc
mov
jl
adc
icebp
pop
mov
loope
mov
enter
imul
add
mov
xchg
popf
gs
and
mov
pop
call
mov
mov
cld
dec
mov
stc
add
outsb
ror
jnp
test
fs
xchg
sub
jmp
lret
test
nop
adc
pop
leave
cli
mov
stos
sbb
rcr
leave
lods
insb
inc
out
xchg
jmp
cmc
xchg
mov
mov
outsl
sti
add
xchg
test
fwait
pop
imul
lods
jnp
or
les
jge
leave
mov
fwait
gs
push
int3
inc
movsl
mov
push
add
jne
and
das
fptan
enter
loope
inc
adc
dec
dec
pop
or
and
popa
repz
loopne
pop
test
rol
ds
lahf
scas
lret
jmp
lock
push
fldln2
sarb
lret
and
enter
and
das
dec
push
jge
shrb
std
push
fistl
lea
ljmp
pop
sbb
int
movsb
pop
mov
or
inc
dec
push
fs
pop
xchg
dec
jl
mov
fisubrs
xchg
and
and
jle
xchg
xchg
mov
repz
xor
lods
push
xorb
cmp
cmpsl
loope
and
movb
mov
mov
cmc
jmp
cmp
mov
xchg
pop
cmpsb
pop
xor
mov
xchg
pop
push
lods
adc
lods
push
dec
lret
cmp
inc
jno
sti
shrl
test
inc
mov
pop
dec
nop
xchg
lcall
repnz
fstl
out
inc
stos
mov
lock
adc
mov
xor
repz
mov
ljmp
movsl
mov
pop
orb
mov
adc
add
or
dec
and
gs
repnz
cwtl
mov
and
and
sbb
add
imul
jo
repz
or
cmp
icebp
fldt
insl
insl
inc
decl
sub
cltd
cmp
addr16
daa
pop
push
lods
cltd
dec
icebp
xchg
mov
sbb
mov
fsubrs
mov
sbb
inc
and
and
dec
push
jle
jno
sbb
lret
adc
out
sub
sub
pop
cmp
pop
cmpsl
out
ljmp
push
out
enter
pop
pop
jmp
aam
add
push
xor
pop
stos
mov
add
out
adc
inc
sbb
mov
ljmp
mov
mov
imul
mov
xchg
dec
adc
mov
pushf
cmp
ret
movsl
fwait
arpl
xchg
testl
test
shl
cmp
test
inc
mov
push
mov
je
mov
test
daa
add
repnz
pop
ja
xor
andb
dec
fbstp
dec
std
pop
mov
cli
addr16
mov
push
das
mov
sbb
and
adc
and
scas
test
pushf
adc
andb
and
jae
dec
sarb
and
xor
mov
aam
dec
or
fistpl
aaa
in
clc
mov
mov
inc
mov
pusha
inc
mov
shlb
jmp
int
sarl
mov
lahf
rorb
aam
cmp
shr
dec
pop
mov
dec
imul
pop
sbb
inc
out
dec
cmpsb
lahf
sub
push
mov
lret
lock
dec
xor
repnz
cmp
mov
pop
js
movsl
test
addb
shl
mov
sub
testb
je
dec
mov
and
adc
movsl
mov
cmp
or
pushf
mov
sti
pop
ds
mov
fisubrs
or
mov
es
push
lret
orb
dec
stc
aam
sub
push
mov
pop
mov
fbld
pop
adc
xchg
push
mov
inc
inc
jmp
and
mov
cmp
cmpxchg
pop
stc
movsb
pop
jp
call
xorb
lret
dec
push
dec
jbe
sub
jnp
aas
sahf
mov
or
lock
dec
call
mov
xor
add
aas
ljmp
insb
mov
xlat
cmp
loopne
and
add
les
adc
cmp
out
fstps
stos
dec
aaa
push
mov
jmp
dec
and
lds
addr16
das
ljmp
xchg
roll
cwtl
or
call
lock
pop
and
and
and
pop
stc
jmp
sub
add
insl
mov
int3
int3
lds
aad
adc
in
das
or
or
adc
popf
mov
sub
jbe
test
push
in
repnz
xchg
out
mov
sti
adc
lret
fistl
in
addr16
cs
add
cmp
cmpsb
mov
std
dec
pop
mov
std
movsl
inc
push
pop
mov
leave
insl
out
pop
aaa
test
outsl
push
shlb
mov
lgs
inc
pop
mov
xchg
jl
dec
leave
dec
mov
sub
and
push
cmc
data16
and
lcall
and
test
adc
les
jl
push
sbb
push
push
adc
orb
rcrl
adcb
frstor
punpckhdq
sub
xor
mov
aam
push
pusha
cs
pop
inc
cmp
in
adc
cmc
dec
mov
push
push
mov
adc
in
mov
movsl
mov
daa
arpl
xor
jecxz
sarl
xchg
imul
pop
adc
sub
cmpsl
sub
sbb
fsubr
aas
rclb
fdiv
and
in
sub
push
xor
inc
nop
sbb
push
xchg
cli
icebp
mov
jge
adc
add
outsb
mov
imul
cli
mov
or
clc
cwtl
pusha
out
addr16
je
xchg
xor
xor
popf
std
sub
insb
cmp
jle
in
loop
add
push
xchg
repnz
add
std
pop
in
mov
std
xchg
jo
in
xchg
in
mov
mov
test
push
mov
movsl
aam
in
idivl
mov
mov
fsts
sbb
mov
arpl
mov
in
jo,pt
push
clc
push
lret
xchg
jp
push
sbb
xchg
fisttpl
or
cmpsl
mov
imul
mov
rclb
xor
call
mov
mov
sahf
out
mov
or
dec
aad
data16
mov
sbb
push
call
mov
pop
push
jl
addr16
inc
jl
cmp
xchg
out
ret
and
stc
sbb
ljmp
jne
sub
cmc
ret
inc
add
call
inc
into
mov
xchg
add
and
mov
or
dec
iret
cmp
cltd
fidivl
arpl
shr
jg
sti
in
inc
mov
sbb
clc
lock
xlat
repz
out
repz
je
jecxz
daa
add
sub
cmpsl
cmpsb
jmp
mov
pop
jo
mov
pop
shrb
jle
add
orb
inc
push
mov
sbb
loope
stos
pop
jbe
mov
mov
mov
cltd
cmp
sub
or
xchg
mov
push
je
popf
pop
mov
sbb
lods
testl
xlat
inc
aas
shlb
jno
out
pop
mov
and
vfmadd213ss
jge
int3
cmp
or
push
out
xor
push
shr
out
mov
iret
jbe
jecxz
mov
into
xchg
fs
lea
int3
sbb
sub
scas
movsb
pop
pop
push
aam
mov
mov
popf
cld
dec
dec
pop
rclb
adc
jg
addr16
inc
outsl
dec
rorl
pusha
popa
cmp
sbbb
mov
out
adc
cmp
rol
add
insl
pop
aad
fistl
sub
or
js
test
or
dec
push
in
xchg
out
pushl
push
aas
or
loop
dec
aas
sub
push
adc
cltd
mov
or
xchg
pop
stos
out
fldt
sbb
shll
add
add
xor
dec
mov
sbb
fisubrs
enter
dec
pop
add
jno
mov
and
dec
ja
and
adc
out
xchg
popa
xchg
mov
fisubs
sub
ljmp
or
sti
shrl
push
sahf
in
push
adc
add
adc
jecxz
sub
xchg
std
and
in
mov
inc
lea
mov
dec
gs
push
lret
inc
xor
sarl
dec
iret
mov
jnp
call
adc
or
jg
xchg
dec
test
mov
ret
xchg
sub
call
pusha
in
lods
xchg
hlt
lds
mov
or
rcll
inc
jae
flds
push
mov
mov
fwait
scas
lcall
cmc
jnp
xor
scas
hlt
lods
incb
ljmp
insb
sub
loopne
sub
xchg
inc
jge
out
ja
mov
jbe
cmp
clc
roll
mov
out
mov
je
or
out
jo
cltd
jnp
mov
push
dec
mov
pusha
out
mov
xlat
dec
ret
and
test
lods
sub
and
pop
das
test
test
or
mov
cmp
pop
dec
mov
jl
jae
sarl
cmc
push
icebp
inc
pop
repnz
shl
loopne
scas
mov
cmp
repz
push
xor
out
add
loopne
cmc
mov
arpl
mov
mov
inc
arpl
add
pop
xchg
test
aas
xchg
push
pop
pop
rorl
bound
divb
mov
and
lahf
cmp
dec
aam
dec
leave
mov
int
std
dec
popf
add
out
fmull
test
lret
jb
xor
popa
push
test
cmp
ficomps
pop
dec
je
incb
repz
mov
lcall
fnstcw
popa
jae
fstpt
add
xchg
adc
xor
popf
xchg
stos
movsl
in
and
fistl
dec
stc
fst
jns
or
ret
fistps
cmp
and
mov
push
inc
dec
adcb
rcrb
orb
mov
rcl
add
xchg
cmp
adc
cli
in
xlat
faddl
fstps
lea
sub
outsl
fbstp
outsb
xchg
out
test
inc
subb
push
stos
push
clc
adc
push
mov
mov
mov
and
push
out
in
inc
mov
or
loope
lods
xchg
fucomip
xchg
outsl
leave
or
iret
ror
jmp
and
fucomp
add
inc
inc
adc
lret
in
rcrl
out
dec
and
push
mov
jmp
dec
out
fcompl
adc
aam
stc
lods
in
rcl
mov
mov
daa
inc
inc
test
or
mov
jo
mov
popa
pop
pusha
in
scas
imul
imul
push
daa
mov
and
stos
das
mov
bound
and
into
dec
mov
jge
lock
pop
bound
jno
in
dec
mov
mov
xlat
mov
scas
fcomps
sti
outsl
mov
and
je
test
imul
push
pop
outsl
push
push
pop
sti
dec
dec
addl
in
test
cmovo
test
iret
pop
repz
jns
and
adc
aad
pop
in
dec
xchg
mov
lahf
xchg
call
insb
pop
or
ficoml
neg
inc
lds
iret
pop
cmpsb
mov
pop
and
ror
gs
sbbl
sub
cltd
lret
divl
sbb
lods
fwait
sub
jge
sar
sbb
push
fld
jle
fiaddl
nop
adc
adc
xchg
jmp
adc
fdivp
cmc
shrl
test
in
lds
jmp
loope
das
dec
dec
push
sub
cmp
adc
and
mov
std
out
add
mov
mov
lret
clc
test
inc
xchg
mov
xor
xchg
jmp
dec
xchg
imul
in
pop
stos
outsl
or
lahf
xchg
and
es
orb
mov
mov
sbb
pop
cmpsb
incb
pushf
fdivrl
and
imul
icebp
cmc
lret
popl
xchg
bound
aas
das
and
inc
fwait
cltd
xlat
dec
and
xchg
push
fistl
and
mov
call
repnz
pusha
mov
hlt
fldz
sub
clc
movb
pop
sarl
test
cmpsl
inc
add
aaa
sti
adc
xchg
lock
pop
dec
push
loope
ljmp
add
std
fisubs
mov
pop
jns
sbb
imul
jbe
xchg
rorl
sbb
add
test
fsub
dec
psubsb
inc
in
scas
and
popl
mov
cwtl
sbb
xor
hlt
cmpsl
mov
in
and
rcr
js
push
xchg
mov
pop
mov
push
pop
cmp
pop
xchg
aam
cltd
lcall
stos
add
out
xchg
outsb
inc
dec
and
push
lret
push
outsb
mov
add
test
int
push
sti
cli
xchg
std
arpl
ds
aad
push
inc
mov
fwait
jnp
xchg
pop
aam
mov
jle
imul
mov
lahf
push
aaa
std
mov
pop
cmp
inc
bound
fldt
cmpsb
jge
out
orb
xchg
pop
cmpsl
int
cmc
gs
push
inc
cltd
movsb
lods
adc
cmp
cmp
jb
pop
ss
jne
mov
jns
inc
cli
pop
add
xchg
rorb
addr16
mov
mov
adc
sahf
mov
dec
mov
inc
lods
pop
or
lods
sbb
rorb
rcll
pop
pop
jne
mov
sbb
add
ss
shrl
xchg
imul
cmp
pop
insb
adcl
push
xchg
decl
push
add
dec
xchg
mov
icebp
pop
xchg
cmp
lock
sbb
in
mov
cmc
adc
pop
das
or
pushf
fstpl
cmpsl
popa
push
jp
rolb
fidivs
pushf
in
pushf
repz
xor
je
and
xchg
mov
jne
push
xchg
call
cmp
ja
and
gs
mov
into
orb
test
mov
test
pop
sub
insl
gs
bound
test
xchg
sbb
jae
aas
or
xchg
inc
xchg
imul
mov
cmp
sbb
sbb
add
xchg
in
es
jp
mov
or
lret
xor
sbb
inc
jns
imul
lds
scas
cmpl
push
into
mov
push
fstpt
test
push
lea
jb
push
push
mov
es
push
leave
imul
xchg
pop
cmp
je
imul
lea
sahf
divb
repz
cmp
and
mov
repz
neg
shrl
ficoms
add
lret
adc
add
loop
mov
mov
xchg
pop
lcall
sub
xchg
call
nop
adc
jge
repz
cld
dec
mov
popf
std
scas
xchg
push
nop
cmp
imul
adc
das
pop
hlt
loop,pn
loop
xchg
inc
push
lea
mov
mov
out
out
test
jmp
test
pop
imul
mov
ja
out
insb
data16
lahf
add
add
pusha
mov
mov
cltd
pop
xor
push
pop
test
je
dec
mov
xchg
into
jle
xlat
mov
fwait
add
out
aad
adc
cmc
dec
and
xor
jle
insl
sub
xchg
xchg
loop
or
dec
pop
lods
gs
mov
xchg
pushf
pop
lods
fldl
into
fisttpll
jmp
dec
daa
jle
fimull
lods
xor
outsb
sbb
pop
adc
pop
lock
jp
iret
outsl
xchg
sub
in
mov
cmp
cmpsl
jne
sbbb
mov
add
ficompl
jb
mov
cmp
pop
iret
xchg
out
gs
scas
mov
push
add
and
xchg
imul
pop
xchg
inc
lods
sti
sub
call
mov
or
imul
push
rol
dec
mov
pop
cmp
and
aaa
movsb
dec
mov
test
add
cmpb
mov
xor
fmull
inc
mov
push
loopne
mov
push
sbb
jp
xlat
sbb
in
jmp
and
out
xor
dec
push
cmp
ret
outsb
outsl
rcr
into
loope
rdtsc
outsl
lahf
push
push
loop
ret
jno
or
test
mov
mov
aas
dec
aad
pop
in
sbb
xlat
add
sbb
call
enter
inc
faddl
lds
jbe
cwtl
pop
lock
and
jge
push
mov
xchg
xchg
xchg
jecxz
das
push
mov
cmpl
scas
mov
fisubs
inc
mov
lcall
pop
sbb
pop
mov
push
cmpsb
push
mov
jmp
or
adc
jo
cs
push
stos
fdivrs
sti
jnp
xchg
daa
jecxz
add
mov
xchg
or
loopne
mov
pop
fs
aas
jecxz
xor
stos
mov
push
mov
adc
and
flds
pusha
incb
cmpsb
scas
sarl
bound
push
roll
inc
xor
xchg
out
popa
cwtl
in
xchg
test
push
movsb
mov
out
fstp
jno
push
xlat
stc
or
or
idiv
or
hlt
cmp
pop
xchg
cltd
sbb
xchg
cmp
psllw
mov
add
xchg
inc
pop
xor
fdivs
leave
scas
sahf
xor
pop
aaa
and
sbb
xchg
lods
mov
fcmovb
mov
sbb
insl
ss
push
pop
neg
int
push
cmc
mov
mov
shll
sarb
or
jle
imul
lock
pop
push
jns
cmp
hlt
push
stos
pop
mov
push
repnz
add
shrb
lret
sti
xchg
push
scas
cs
or
and
adc
mov
je
lahf
aad
xchg
lds
scas
mov
sub
idivb
lret
lret
dec
int
mov
push
or
jg
adc
daa
jp
jecxz
icebp
jmp
push
repz
xlat
jnp
jecxz
les
nop
mul
daa
jge
mov
add
pop
cmc
xchg
insl
test
jns
mov
data16
out
add
push
add
out
scas
adc
pop
loope
shrl
cmp
mov
popa
mov
xchg
test
clc
mov
or
cmc
cmp
xchg
jnp
and
inc
cli
inc
iret
in
addr16
lea
xchg
call
mov
jns
stos
icebp
andl
sar
ljmp
out
inc
adc
mov
orl
iret
jge
ljmp
cmp
cltd
ds
inc
xor
mul
mov
adc
das
pop
inc
repz
jl
lcall
add
xorl
mov
jae
movsw
sbb
cltd
je
nop
int3
lock
popa
lods
addr16
push
rolb
push
jb
loope
jg
sti
clc
pop
call
lcall
dec
ret
in
mov
push
or
inc
push
xchg
pop
gs
imul
call
add
push
adc
mov
js
adc
mov
ja
fwait
sub
pusha
push
cltd
rclb
xchg
mov
out
mov
loop
jnp
or
mov
testl
sbb
test
lock
sub
cmpl
cmp
loop
dec
inc
lahf
vandnps
leave
pusha
xor
sbb
xor
cli
mov
mov
stos
and
iret
lds
sbbb
lea
fcomps
fwait
push
sub
movsl
mov
or
loope
pop
out
test
mov
aad
scas
push
inc
sbb
lock
sub
cli
hlt
test
jmp
stc
pop
jmp
inc
xchg
mov
js
call
inc
out
adc
insl
les
in
loopne
inc
sub
aam
pop
sub
mov
adc
xor
icebp
int
ret
cmc
mov
sahf
push
push
jnp
or
repz
out
fistps
cmp
jb
sub
mov
das
pop
and
xor
ret
popa
test
mov
std
mov
es
jae
mov
jne
imul
or
jmp
shrb
pop
jns
mov
stc
adc
adc
cmp
stos
jno
sub
hlt
jae
icebp
repz
jno
jmp
mov
push
mov
repnz
fs
test
push
jo
fs
sbb
jnp
sbb
repz
add
sbb
dec
test
in
lret
push
add
notl
popa
andb
lods
xorb
jmp
out
in
lds
xchg
adc
cs
push
rolb
andl
adc
add
pusha
cmp
lods
push
loope
rorb
xlat
sub
push
sar
sbb
test
ljmp
inc
je
outsl
cmpsb
xchg
out
xlat
cwtl
adc
inc
or
rorb
inc
mov
jo
push
das
xchg
mov
xlat
adc
sti
andb
mov
xlat
adc
pop
cli
jg
cmp
pop
pop
xchg
stos
sbb
jne
mov
jl
in
add
push
leave
and
jbe
scas
imul
test
test
cld
stc
adc
scas
popa
stos
mov
scas
sar
dec
cmc
adc
pushf
lret
test
es
imul
jb
dec
jb
push
cmp
js
stc
test
lds
mov
xchg
dec
dec
leave
ret
pop
sahf
rorb
ficoms
sbb
movsb
insb
sti
mov
dec
inc
es
lcall
loop
sbb
dec
push
sub
xor
xor
push
sti
adc
or
push
cmp
mov
fs
mov
cmp
lret
leave
leave
sti
int
fcomps
jp
out
jne
outsb
xchg
imul
xor
jno
xchg
push
pop
mov
jecxz
pop
outsl
outsl
xchg
inc
pop
push
dec
add
lock
mov
insl
roll
sbb
into
mov
aaa
push
das
pusha
leave
test
inc
gs
icebp
negl
pusha
push
lock
or
pop
add
inc
cmp
jb
imul
mov
push
or
or
in
das
insl
inc
cld
cwtl
xor
ljmp
jns
inc
iret
loopne
add
popa
push
movsl
sbb
xchg
xlat
inc
repz
addr16
fnsave
push
outsl
out
jae
icebp
xor
xchg
push
js
xchg
das
aad
data16
movl
push
out
adc
add
and
dec
cltd
or
sbb
int
push
xchg
push
cli
lret
loope
jmp
mov
xchg
nop
fiadds
jp
xchg
out
js
jecxz
sub
pop
mov
outsl
rcll
adc
fstps
lea
repnz
es
aaa
dec
pop
inc
repz
mov
ja
or
ss
jmp
ljmp
aas
cmp
adc
in
loope
mov
mov
punpckhbw
add
or
out
arpl
shlb
mov
or
cmpsb
imul
pop
mov
mov
ret
pop
cmp
cmpsb
sahf
push
jmp
mov
test
add
add
mov
sbbb
into
addb
adc
in
hlt
lea
mov
cmp
sbb
and
cmp
xor
or
mov
xchg
mov
sub
mov
xor
dec
imul
das
hlt
int3
fcmovnbe
mov
sub
and
stos
add
adc
cmp
pop
insb
cld
int3
cld
mov
cmp
rolb
cmp
inc
jg
add
mov
pop
sbb
mov
xchg
dec
repnz
sub
movsb
aad
xchg
loop
pop
sub
ret
cmpsb
add
jnp
xchg
push
mov
loopne
int
dec
pop
lahf
jg
ja
sbb
int
mov
or
push
loopne
inc
enter
push
fisttpl
jbe
fsub
shlb
mov
sub
lret
das
cwtl
adc
mov
mov
and
mov
mov
inc
pop
mov
outsb
cld
add
and
fstl
mov
stos
out
add
insb
jecxz
cmpsl
insb
adc
mov
dec
js
jge
mov
cmpsb
mov
sub
sbb
orl
lcall
xlat
mov
push
mov
adc
jge
cmp
repz
lods
jecxz
pushf
and
xchg
push
lods
pushf
mov
cwtl
mov
lock
mulb
mov
fwait
cltd
xchg
mov
jmp
mov
inc
xchg
sub
xor
mulb
imul
hlt
xor
dec
repz
mov
out
pushf
pop
dec
int
outsb
cmp
ret
mov
jb
fimuls
mov
jmp
neg
je
incb
cmp
scas
fstl
addr16
push
frstor
pop
or
repnz
dec
dec
pop
inc
xor
mov
sbb
ljmp
xor
js
inc
imul
lods
push
inc
std
outsb
jg
add
jno
sub
test
nop
je
push
pushf
clc
in
xor
sarb
and
mov
lods
sarb
sbb
aas
fucomi
mov
push
jmp
sbb
push
dec
and
pushf
sub
inc
inc
mov
pop
dec
mov
bound
cs
dec
test
call
push
inc
ret
cs
aaa
das
pop
mov
xchg
loope
mov
xchg
dec
in
popa
testl
test
inc
xchg
sub
cmpsl
sub
aas
sub
push
push
cmp
mov
lods
cmp
lea
push
jns
out
cld
and
and
out
xchg
hlt
cmc
imul
ss
test
popf
ss
fbstp
sbb
icebp
mov
loopne
inc
test
lcall
cmp
lock
inc
or
cmpsl
jecxz
mov
cmp
loopne
xor
and
cmpsl
sbb
lea
movsb
rolb
or
dec
xlat
pop
or
and
adc
mov
and
repnz
cwtl
hlt
scas
sub
lcall
sub
out
pop
hlt
sub
in
jle
dec
leave
sahf
cmp
xchg
push
mov
mov
jg
lock
push
gs
mov
inc
les
xchg
popa
xchg
cmp
out
test
mov
and
jp
insl
add
js
xor
loop
imulb
je
lcall
and
in
shl
and
inc
js
lahf
icebp
fidivrl
pop
scas
add
adc
adc
ficoms
mov
xchg
test
cmp
out
arpl
xchg
or
mov
xchg
mov
jne
cwtl
std
jbe
mov
pusha
gs
sub
mov
xchg
xchg
lods
cwtl
test
addr16
jns
mov
out
loop
mov
and
pop
mov
pop
sti
adc
sub
mov
jnp
int
jo
xor
insl
int3
xor
and
and
sti
adc
jle
sarl
enter
inc
adc
mov
dec
push
cmp
sub
push
mov
hlt
jmp
loope
adc
jp
subl
stos
pushf
imul
stos
fcoml
push
ret
idivl
pop
mov
popa
xchg
sahf
cmpsb
and
add
or
in
and
push
test
jecxz
xlat
adc
push
push
mov
enter
loop
cmpsb
dec
add
pop
cmp
jl
mov
xchg
es
stos
imul
xor
fwait
cmp
xor
inc
inc
in
push
sbbl
mov
xchg
cmp
mov
inc
stos
pop
push
mov
mov
popa
notl
inc
faddp
fwait
push
and
notl
mov
jle
lock
scas
lods
xchg
das
jmp
aas
xchg
pop
aaa
pop
js
dec
stos
icebp
daa
jbe
push
adc
inc
inc
dec
or
dec
push
xlat
test
cli
aad
jg
jnp
je
jns
pop
or
ss
test
hlt
jo
in
dec
pop
and
or
mov
xchg
popa
stos
cmp
cwtl
sbbl
sbb
test
cmp
dec
xchg
add
insl
sub
mov
mov
xor
test
jb
cmp
push
sarb
pop
pop
xchg
jnp
cmp
cmp
je,pt
lods
add
push
dec
popa
in
mov
fistpll
sbbb
cli
or
lret
push
mov
mov
mov
into
or
or
jmp
or
in
sub
out
add
addr16
js
aad
test
and
and
shll
pop
xor
mov
dec
jg
addr16
jns
pop
loope
xchg
cmp
xchg
inc
mov
mov
fsubr
dec
sbb
aam
xchg
daa
sbb
nop
jbe
aas
mov
inc
out
push
adc
lock
mov
cmpsb
mov
xor
sbb
xchg
cmpsl
imul
call
or
pop
sbb
or
dec
sub
lods
leave
imul
pop
pop
sbb
jbe
in
out
sub
ja
gs
sub
sti
cwtl
movsl
cmp
fildl
xchg
push
pusha
mov
add
test
imul
sti
out
dec
ljmp
fisttps
scas
adc
adc
out
xchg
mov
sbb
cmp
insl
pop
in
mov
ret
xor
ds
int3
lea
dec
mov
repnz
je
addr16
sub
xchg
fwait
int3
sub
lea
push
sbb
fnstenv
cld
adc
cmp
sub
xlat
rcrl
mov
lahf
adc
mov
push
add
pop
mov
push
push
fadd
sbb
inc
xchg
xor
pop
sub
cmpsl
das
lret
jno
ss
dec
xchg
shl
mov
shlb
adc
cmp
sub
xor
and
insl
out
xchg
mov
mov
sti
xchg
cs
leave
mov
aaa
mov
mov
mov
test
push
lods
in
ss
pop
xchg
xchg
cli
lret
ds
inc
outsl
imul
js
adc
lret
push
call
xor
lea
aas
inc
aam
mov
leave
ffreep
add
int3
pop
pop
jb
push
and
cwtl
mov
mov
xchg
push
stos
test
test
pusha
push
mov
insl
inc
int
test
lds
jo
lret
mov
mov
jp
pop
or
fs
shrl
loopne
shrb
pop
cmp
mov
or
xchg
mov
adc
fnsave
mov
mov
push
ljmp
jge
jecxz
sub
xchg
xor
cmp
mov
pop
push
outsl
iret
repnz
mov
mov
scas
loopne
cmp
mov
loope
sub
fisttpll
xor
les
clc
mov
jno
mov
test
out
fcmovu
fsubl
pop
jae
lods
ficompl
xchg
arpl
mov
jnp
loop
loopne
pop
cmp
lods
out
aad
sti
arpl
xor
repz
push
fld
pop
xchg
testl
fdivs
push
and
lret
je
jbe
jbe
jb
call
out
in
mov
fldl
addl
das
sti
cmpsb
sub
mov
ss
ss
jns
jns
push
pop
in
fldl
addr16
jge
cltd
lcall
xlat
leave
arpl
xor
pop
push
les
cli
inc
or
rorb
jle
es
and
sbb
fcoml
in
push
jnp
mov
mov
stc
and
jp
cmp
hlt
dec
xorl
mov
outsl
push
and
lods
or
neg
addr16
dec
mov
sahf
mov
cmpl
jmp
cmpsl
mov
cli
aaa
fucomp
jg
test
adc
orl
cmp
mov
jle
fisttpll
xor
je
dec
enter
into
adc
popf
mov
and
xchg
pop
shll
jmp
loope
out
sbb
fmull
and
dec
pop
stos
cmp
xorl
popa
cmp
imul
push
jbe
mov
jle
fildl
pushaw
jge
scas
push
xchg
ds
das
mov
and
dec
sub
push
sarb
scas
imul
pop
push
stos
push
jno
dec
mov
daa
mov
push
insb
lahf
pop
sub
mov
xor
lea
fs
into
sahf
add
mov
rorb
mov
aaa
stos
movsb
pop
out
sbb
push
xor
decb
jbe
rorl
or
movsl
inc
rolb
ret
aam
nop
daa
pop
push
out
add
cld
inc
cmp
xor
jne
fisubs
pop
rcll
mov
xchg
push
ficoms
jno
adc
jecxz
xor
movsb
xchg
int3
hlt
xchg
inc
push
fisttpl
jb
pslld
add
mov
mov
fstpt
lcall
jmp
and
loope
inc
popf
sahf
cmp
jecxz
test
add
push
and
dec
push
cmp
sbb
adc
aad
sub
pop
xor
fiaddl
cmp
push
nop
add
xor
inc
jecxz
jb
or
movsl
rorl
and
scas
cmp
rorb
stos
mov
xor
int3
and
add
jmp
pushf
adc
movsl
mov
fldenv
sbb
sub
outsl
test
adc
mov
pop
xchg
rorl
mov
inc
ss
xor
or
and
fmulp
in
lock
push
orl
sbb
jae
xchg
std
andl
stc
sbb
repz
xchg
sub
mov
mov
out
pop
call
adc
jae
inc
dec
fistl
pop
push
sub
mov
cmpsb
sbb
fdivrs
pop
mov
lock
jg
cld
int3
int3
or
cmp
lcall
mov
cltd
ljmp
jb
add
cmpsl
jo
insl
xor
cmp
xchg
adc
xlat
fidivs
pop
sub
mov
mov
mov
xlat
psllq
cwtl
mov
andl
dec
or
xlat
stos
icebp
adc
stos
cld
xlat
push
mov
xchg
das
push
xor
inc
pop
out
and
shlb
xchg
mov
xor
sarl
fs
jae
in
outsb
lcall
sbb
arpl
pop
jecxz
int3
int3
outsl
jmp
out
adc
ret
aam
or
dec
in
pusha
sbb
jnp
loope
je
andb
insb
cld
add
push
xchg
loope
pop
pop
mov
mov
stc
cmc
push
pop
sub
fdivr
mov
xchg
push
and
lods
adc
mov
stc
mov
adc
shll
mov
pop
mov
leave
sub
dec
sbb
adc
cmp
sbb
stos
jns
sar
mov
call
mov
in
js
xchg
jge
sub
sub
mov
rep
test
sbb
sbb
movl
pushf
push
fsubp
adc
pushl
nop
sbb
pop
mov
addr16
frstor
pop
mov
mov
sbb
in
icebp
ljmp
lahf
sbb
nop
ljmp
jbe
add
lcall
xor
sbb
test
in
inc
jmp
push
push
lock
push
rcrl
mov
mov
push
inc
stos
adc
bound
jmp
or
repnz
das
mov
stos
pop
stc
mov
sub
in
es
dec
mov
pop
dec
out
test
xchg
addl
popf
mov
movsb
sub
stos
cmp
push
ja
mov
test
jno
into
clc
hlt
cmpb
mov
xchg
and
subl
lock
sub
jae
mov
jo
out
mov
cmp
out
gs
js
add
jle
inc
xchg
inc
cmpsl
xchg
fsin
out
push
sub
mov
mov
es
fcoms
cmp
add
aaa
push
or
aam
dec
jbe
lahf
test
push
int3
mov
cmp
in
cwtl
cmp
in
or
std
sbb
xchg
sub
sahf
sar
or
pop
pop
popf
sbb
and
xor
jg
sarb
push
add
shl
out
add
outsl
stc
push
pop
rorl
sbb
fmulp
jg
dec
jae
test
pop
test
cmpb
lock
jmp
ds
scas
mov
ret
in
movsl
sti
and
xchg
xchg
lods
insl
ja
ljmp
bound
stos
imul
pop
sbb
push
js
rcll
test
and
push
add
loop
jo
test
jg
outsl
fldenv
sub
mov
popf
rcr
push
pushf
add
jle
xchg
das
test
add
cli
lods
adc
adc
stos
inc
xchg
daa
cmp
inc
pop
push
sbb
xor
jge
divl
sub
sbb
arpl
xchg
xchg
mov
jbe
mov
int
sbb
add
mov
pop
loope
jmp
popa
jle
cmpl
daa
or
adc
jp
dec
gs
mov
jge
pop
cmpsb
push
dec
mov
sbb
cmc
cmpsb
xor
xorl
pop
push
mov
cmpsb
pop
mulb
int3
in
dec
adc
ficomps
push
shrl
ljmp
stos
mov
js
out
inc
xorb
shrb
sahf
mov
aas
sbb
push
int
jl
push
pop
xor
mov
cwtl
js
sbb
imul
add
pop
mov
sbb
xchg
das
mov
insl
ror
int3
pop
jle
dec
jnp
mov
fidivrl
and
dec
les
cli
test
mov
sub
and
popf
push
xor
sub
pop
imul
sbb
sub
cmpsb
or
das
test
xor
add
and
adc
add
push
xchg
jae
lret
xchg
mov
cmpsb
or
xchg
xchg
daa
test
xchg
mov
and
add
inc
add
aaa
jbe
xor
or
aas
pop
xor
jno
and
xchg
mov
mov
xor
sub
fistl
fadd
mov
rcrl
mov
xchg
or
scas
adc
adc
jle
or
icebp
jbe
repz
mov
test
xchg
stos
dec
jnp
push
sbb
sbb
loopne
adc
sbb
xchg
cli
push
or
adc
cmp
add
sub
push
fists
aas
lcall
mov
adc
sub
jecxz
push
hlt
inc
orl
push
stos
cmc
cli
cmp
or
movsb
sti
inc
pop
out
fwait
dec
pop
jecxz
sub
inc
js
out
dec
movsl
adc
inc
inc
xor
hlt
or
ficomps
pop
iret
and
hlt
addl
test
mov
sbb
mov
push
xor
and
add
or
adc
jae
push
loop
xchg
add
andl
cmp
inc
imul
push
aad
inc
ss
sub
push
dec
stc
mov
mov
jb
daa
iret
mov
and
hlt
fisubrs
add
mov
pop
cmpsb
jg
lods
pop
mov
dec
lods
test
mov
or
mov
jns
hlt
pushf
dec
or
inc
mov
inc
xchg
imul
in
fwait
mov
cmpl
xchg
jns
mov
push
cmp
lock
test
push
rorb
xor
cmp
mov
xchg
mov
push
jle
mov
fs
movsb
shll
bound
sub
cmpsl
inc
insl
inc
jnp
xor
mov
add
aam
xchg
inc
sbb
cmpsb
and
shlb
sbb
xchg
or
sbb
sti
push
rcr
mov
repnz
mov
pop
push
popf
pop
add
ret
addr16
xchg
dec
cmp
mov
jb
jo
or
sti
lret
mov
dec
les
add
jnp
ds
pop
mov
stos
std
in
or
inc
mov
leave
sbb
jmp
fiaddl
xor
sbb
mov
push
xor
jg
mov
fcoms
cmp
scas
sti
jb
das
and
dec
mov
xchg
repz
sbb
lods
hlt
mov
dec
jmp
lea
ficomps
out
loop
pop
dec
shrb
int3
jg
xlat
xchg
mov
inc
sbb
bound
dec
inc
mov
pop
bound
adc
mov
js
cli
fstl
nop
mov
and
fisubrs
jnp
xchg
out
inc
adc
sbb
sub
or
mov
rcrl
mov
inc
jae
fs
mov
ljmp
pop
or
mov
gs
jnp
dec
data16
mov
or
pusha
popf
jg
sbb
add
inc
das
cmp
loope
cmpl
lahf
int
data16
mov
adc
sbb
popf
push
mov
adcl
mov
mov
out
stos
insl
in
push
jo
mov
mov
aaa
enter
mov
cmp
xchg
mov
loop
cmpb
pop
jne
arpl
xchg
mov
pop
ficoms
dec
add
and
sbb
push
jnp
xchg
pushl
xchg
xor
fsin
aam
cwtl
ds
xor
lret
les
sbb
lret
adcb
xor
cmp
cs
xchg
pop
imul
cmp
inc
mov
aam
roll
xor
repnz
lret
into
aaa
movsb
enter
mov
loop
sbb
popa
push
loopne
loope
out
int
add
push
lods
push
ja
mov
inc
xor
mov
dec
mov
dec
mov
in
jno
xlat
xchg
push
mov
sub
pop
mov
daa
cmp
pop
mov
lds
popf
xchg
fwait
insl
in
ds
mov
xorps
out
negb
pop
adc
push
subb
mov
fprem1
mov
clc
scas
jns
gs
dec
xchg
adc
xchg
or
fcoms
imul
cmpsl
repnz
pusha
aas
testl
fs
fimull
mov
xor
sahf
std
jle
movsl
dec
add
mov
lahf
inc
les
nop
cmpsb
test
in
push
fistpl
inc
lock
adc
xchg
xor
addr16
leave
icebp
movsb
cwtl
mov
mov
add
loop
mov
sub
in
sbb
data16
push
test
xlat
sbb
sub
rcr
jb
jbe
movsb
movsb
pusha
lea
les
add
insl
push
mov
repz
bound
mov
jg
cld
sbb
test
int3
mov
rcll
cwtl
jne
mov
xchg
push
stos
cwtl
mov
cmp
dec
in
mov
repz
divps
sub
scas
xchg
je
in
jmp
lret
or
loope
or
je
sub
push
es
inc
in
inc
cmpsl
popf
mov
inc
in
imul
or
mov
lahf
lods
sahf
cli
aaa
lock
rcrl
es
jle
mov
jbe
sub
sub
inc
push
push
mov
push
imul
fimuls
loopne
bound
mov
addb
jb
add
in
pop
bnd
aam
or
stc
sbb
scas
les
jno
dec
test
int
out
mov
pop
mov
dec
mov
mov
into
or
mov
jno
push
imul
stos
popf
dec
cmc
mov
inc
pop
sub
jp
sbb
pop
lds
mov
fcomps
push
jg
test
adc
adc
mov
dec
push
and
pop
mov
or
cmp
pop
std
jle
icebp
and
ret
xor
jae
add
pop
pop
popa
mov
jge
jo
and
push
js
outsb
je
movsl
sbbb
fisubrl
cli
xchg
idivl
or
jge
mov
pusha
stc
sahf
mov
iret
cmp
jmp
aad
aaa
push
push
and
ficoms
cmc
mov
outsl
fcmovnu
sub
pop
and
and
push
mov
cltd
mov
mov
es
les
mov
jl
xchg
inc
pop
sar
les
or
fcomps
cs
mov
int
cltd
daa
inc
jne
mov
aaa
aas
hlt
or
add
vmovdqa
push
into
fs
prefetchwt1
xchg
scas
fstpl
outsl
add
movsl
shll
or
push
je
inc
int
or
popf
push
jbe
cmpsb
mov
pop
andl
and
pop
js
or
dec
stc
nop
sahf
inc
pop
add
int3
lret
out
aaa
jae
push
jns
fdivs
lods
dec
sub
aam
push
test
xchg
nop
testl
cmp
cmp
push
cmp
add
jmp
scas
add
testb
nop
leave
jp
pop
xchg
dec
and
or
hlt
jp
lock
adc
cwtl
sub
jmp
jmp
stos
dec
push
inc
lock
pop
sub
mov
push
mov
xor
dec
fsubrl
inc
pop
divb
pop
out
test
insl
aas
xchg
add
subl
adc
mov
mov
and
mov
sbb
js
inc
sbb
add
pop
mov
mov
sbb
mov
push
repnz
cmp
adc
jae
cld
fwait
mov
test
adc
js
adc
js
push
bound
pop
loop
xchg
mov
in
pop
sbbb
lret
add
movsb
hlt
out
mov
fisubrs
mov
jnp
outsb
jle
jnp
push
sub
frstor
pushf
mov
sbb
ret
aaa
outsb
test
mov
cmp
out
add
es
jmp
ficoms
std
xchg
jb
or
in
xlat
sbb
inc
mov
cmp
and
lahf
ds
mov
mov
aam
sbb
pushf
int3
mov
mov
mov
mov
add
mov
dec
xchg
ds
jno
xchg
outsl
pop
xor
pop
scas
mov
in
pop
adc
inc
xchg
mov
cmp
cltd
clc
push
neg
mov
outsb
arpl
push
loopne
stos
xor
or
mov
in
sub
sub
xchg
pop
ret
xchg
arpl
dec
xchg
push
mov
dec
sub
insb
pop
cmp
fsubr
sti
hlt
sbb
js
mov
fs
cmc
sub
jbe
xchg
push
dec
ret
jbe
leave
in
cmp
pop
lcall
out
test
sbb
jp
in
arpl
test
mov
push
mov
ret
js
fldcw
xchg
adc
or
aas
or
rorl
call
xor
inc
push
ljmp
popa
data16
or
inc
xchg
inc
or
cmp
xor
jmp
call
dec
dec
cld
push
mov
push
mov
movsl
out
push
lods
xor
xchg
and
ds
xchg
xor
in
out
adc
mov
jns
out
dec
jns
les
roll
xor
mov
pushf
xchg
jle
repz
dec
and
popf
sub
pop
repz
push
xchg
xchg
int
cli
aaa
xlat
inc
add
mov
mov
lea
leave
popa
inc
xchg
or
test
adc
cmp
sub
std
cmp
mov
sub
fbstp
ror
adc
out
cmpsl
xchg
loop
test
inc
jge
movsl
lret
mov
sbb
mov
pop
fildl
test
jl
dec
pop
je
sbb
imul
ja
sub
lock
add
sub
and
jo
rcrb
mov
and
cmp
mov
movsl
add
pop
loopne
adc
dec
scas
xchg
jae
jno
leave
push
aam
add
add
jbe
lds
push
std
das
sbb
pop
cwtl
adc
adc
jmp
ja
xchg
rcrb
or
js
mov
int
lahf
mov
gs
push
add
push
or
test
sarl
cmp
jno
in
rcrb
cmp
insb
jne
iret
imul
stos
add
sbb
xchg
xchg
fimull
add
ja
outsl
dec
mov
ds
and
mov
xlat
mov
insb
arpl
inc
push
pop
or
or
cs
add
ljmp
inc
pop
mov
sarb
ret
dec
mov
adcl
movsb
inc
inc
roll
sbb
mov
add
and
inc
xor
lods
fs
adc
inc
aam
mulb
sbb
je
inc
mov
push
jnp
cltd
gs
in
mov
xor
push
scas
sub
cwtl
xor
push
xchg
in
mov
jno
mov
lods
int
out
inc
js
aaa
rcrb
out
jns
sub
pop
mov
adc
jp
add
mov
sbb
pop
lret
add
imul
sti
paddd
mov
xor
adcb
sub
loope
jg
inc
mov
add
outsb
popf
jb
xchg
std
test
in
test
in
pop
outsl
mov
pusha
scas
mov
fs
add
mov
movsb
jb
xchg
test
in
push
mov
pop
aad
outsl
jle
cmp
pop
pop
scas
jl
mov
adc
aam
mov
sbb
cld
and
jg
xchg
loop
sahf
popf
add
and
enter
imul
gs
call
add
std
gs
dec
in
in
inc
or
pusha
jecxz
notl
dec
jle
add
ss
jne
add
int3
outsl
popf
iret
lods
push
scas
pop
bound
outsb
jbe
lcall
int
pop
into
dec
cmp
icebp
leave
dec
out
mov
ss
or
fwait
stos
aas
inc
jb
sbb
lds
push
sar
fmull
cmp
fadd
scas
loope
jo
mov
pop
sbb
xorb
jbe
lods
shrl
test
lahf
scas
hlt
xchg
mov
sub
jno
jmp
rcrb
shll
lock
mov
mov
jae
add
sbb
pop
push
fs
into
add
in
and
fsubl
and
fwait
leave
cmp
shrl
jo
repz
fisttpl
adcl
clc
lea
dec
cs
dec
fstpl
pop
or
cwtl
mov
mov
pop
fs
mov
mov
push
fs
out
jns
or
push
pop
pop
sub
cmc
fsub
inc
sbb
and
cwtl
xor
dec
xor
mov
mov
movsb
subl
cmpsb
push
push
call
jbe
arpl
adc
lea
cmc
add
mov
dec
mov
pop
pop
inc
mov
test
mov
rcll
test
cmp
shr
adc
mov
xor
filds
dec
ds
cmp
jns
push
push
int
call
ljmp
lret
dec
mov
cmp
mov
inc
fs
xchg
leave
ret
iret
int
xlat
and
adc
insb
aas
push
inc
shr
std
jmp
dec
loope
incb
les
aaa
push
jbe
ss
cmp
mov
fcmovnbe
cwtl
add
pop
imul
rcrl
mov
inc
scas
test
test
pop
subb
stc
inc
mov
cmp
add
aam
push
shrl
js
xchg
mov
dec
icebp
movsl
dec
mov
fs
inc
dec
dec
pop
cmp
enter
std
enter
xchg
mov
inc
xchg
lods
xor
and
xor
adc
aas
inc
std
and
mov
mov
push
sub
movsb
bound
stos
mov
sbbb
mov
mov
push
in
pusha
adc
adc
push
imul
test
adc
ds
les
fadds
sub
adc
and
xchg
outsl
leave
pop
pop
jno
and
negl
std
cmpsb
lods
aas
xor
mov
fs
sub
stos
sbb
mov
cli
cmc
cmp
rorl
leave
mov
jnp
test
das
pop
ja
push
fdivrs
jo
int3
out
mov
jg
std
lret
and
mov
push
mov
mov
lahf
ss
sub
test
sti
mov
adc
xor
or
mov
xchg
fistps
pop
or
dec
cld
mov
inc
fldt
pop
in
pop
or
out
je
scas
addr16
test
push
sub
jnp
jle
lods
lods
or
gs
in
ja
sbb
pop
jmp
js
sub
add
xchg
pop
cmp
outsb
mov
jno
ss
in
sub
loope
dec
imul
insl
mov
cmpsb
les
cmp
addl
adc
mov
inc
test
and
jp
call
bound
add
mov
out
in
mov
mov
xchg
pop
rcl
scas
push
pop
cs
cltd
movsl
pop
lahf
jle
mov
or
mov
adc
addb
int
clc
cmp
pushl
cmc
dec
jnp
popa
popf
jae
arpl
lods
es
jns
sbb
test
mov
push
jp
mov
insl
insl
dec
shr
rcrl
sub
push
into
daa
mov
repnz
mov
rep
jle
sahf
inc
adc
pop
mov
push
dec
outsl
pop
xchg
or
mov
iret
pop
mov
xor
cmp
sahf
mov
loop
xchg
mov
mov
sar
cli
imul
adc
or
fcmovnu
jl
lods
icebp
test
xor
pop
cmp
push
cmp
and
inc
jno
xor
lahf
lods
adc
and
or
mov
or
cmp
push
push
cmp
mov
inc
push
pop
movsb
jmp
cld
fs
sub
add
push
jns
jp
or
jae
cmovns
pop
sbb
mov
orb
mov
cmp
cmpsb
je
std
push
sbb
xchg
cmp
cmp
add
movw
addr16
movsb
fs
int3
sbb
sbb
fldenv
mov
sub
sub
sub
shll
loop
loop
mov
bound
mov
and
lds
ds
sahf
sub
test
mov
inc
sarb
lret
or
scas
dec
jb
aaa
movsl
mov
mov
lds
and
cmp
push
icebp
ror
mov
sub
nop
xor
pusha
movsb
push
jmp
outsb
jl
fcmovnb
push
mov
outsl
mov
icebp
jg
inc
ljmp
jp
jns
or
or
xchg
leave
lods
pop
jo
jmp
adc
mov
jecxz
mov
pushl
xchg
lds
pop
jnp
dec
jnp
cmpsl
testb
xchg
test
mov
mov
push
xchg
mov
popa
or
repz
inc
or
mov
testl
loop
or
mov
adc
std
fsts
stos
push
mov
out
out
lret
inc
out
movsl
add
mov
pop
cmp
pop
mov
add
mov
shlb
dec
pop
rcrl
pusha
out
out
push
shrd
jno
xchg
jne
stc
mov
mov
hlt
push
pop
ja
movsb
xchg
fwait
xor
jge
push
decb
nop
cmp
dec
sbbb
out
movsl
mov
pop
mov
jns
in
mov
pop
mov
and
fwait
xor
adc
dec
mov
push
or
mov
scas
or
jns
addb
pop
cmpxchg8b
sbb
pop
inc
shrl
jecxz
adc
inc
pop
mov
push
repnz
jns
inc
iret
js
add
pushf
mov
movsl
arpl
cmp
pop
aam
push
mov
xor
mov
cltd
cmp
cs
loopne
inc
stos
dec
stos
and
call
outsl
push
roll
pop
pop
cli
scas
mov
fstps
mov
in
xchg
jp
and
jg
jl
jb
jnp
subl
and
fidivl
ja
inc
aaa
dec
sarl
es
mov
mov
ja
pop
rorb
test
xchg
notl
push
push
flds
add
jmp
xchg
fimull
loop
add
stos
mov
sub
add
jo
xchg
jo
lcall
ljmp
hlt
mov
mov
mov
lods
push
mov
loop
or
jbe
sbb
stos
sbb
pop
shl
loope
std
mov
inc
ds
les
in
insl
push
cmpsl
mov
pop
lods
out
scas
jnp
jl
clc
ja
jge
mov
leave
bound
dec
fidivs
sbb
jl
divl
or
test
xchg
ror
nop
mov
stos
out
push
adc
lahf
into
xchg
pop
mov
fldl
push
adc
rorb
adc
mov
or
icebp
insl
repz
pusha
dec
cmp
inc
aam
cmpsl
add
jge
dec
fnsave
frstor
xchg
jecxz
xchg
repnz
mov
faddl
xor
rcrl
sub
dec
imul
or
dec
jp
push
shll
mov
or
xor
dec
ss
pop
adc
in
cmp
fisubl
and
adc
in
push
xchg
leave
imul
jecxz
shlb
sbb
mov
sahf
push
js
mov
pop
pop
xchg
jle
jmp
add
int3
pop
stos
push
pop
aad
xchg
aaa
inc
jge
lea
mov
sub
push
ja
and
repnz
cmp
rcrl
or
lds
push
mov
xchg
push
mov
push
mov
arpl
stos
inc
pop
xchg
daa
dec
push
loope
mov
push
insl
clc
mov
mov
lock
mov
adc
outsl
xchg
cmp
aas
mov
iret
pop
jmp
and
jbe
dec
mov
inc
jb
cmp
adc
lods
mov
or
in
ljmp
jge
cli
icebp
mov
cmp
out
adc
xor
xchg
imul
rcll
retw
int
addr16
mov
jns
pop
std
test
fiaddl
push
cmpsb
xor
inc
push
add
mov
mov
pop
cmc
neg
fcmovb
mov
lcall
cs
lods
sbb
addr16
pop
repz
incl
imul
sub
imul
sub
lea
mov
daa
sub
movsl
rolb
movsb
sub
and
xchg
imulb
pop
push
add
adc
mov
cltd
jne
loop
xchg
sbb
in
in
repz
das
pushf
mov
mov
in
dec
cmp
in
inc
mov
mov
es
xchg
mov
xlat
in
cmp
push
mov
mov
ljmp
or
iret
sti
cmp
mov
fs
pop
ljmp
sub
bound
clc
mov
das
std
mov
out
add
dec
dec
xor
cmp
inc
pop
fs
cmp
stos
xchg
out
repz
push
into
fdivs
imul
jge
lock
dec
xor
or
pop
loope
jno
in
icebp
lods
out
insl
mov
adc
dec
push
nop
or
or
stos
mov
jle
idivl
dec
xchg
out
icebp
push
add
mov
xchg
inc
xor
mov
or
fwait
sub
add
jo
in
rcrb
insb
mov
popa
jns
dec
test
das
jecxz
std
add
scas
cmp
or
jae
xchg
mov
jne
dec
and
and
cmp
insb
orb
cmp
xor
sbb
xchg
in
in
mov
sub
lret
insb
xchg
fdivl
dec
sub
cmpsb
loopne
popf
dec
mov
mov
ret
clc
mov
mov
and
sub
mov
hlt
roll
addr16
add
test
sarl
jns
and
out
xor
in
rolb
dec
in
sub
mov
outsl
cmpsl
mov
out
mov
push
lds
jge
rcl
ret
add
sbb
rcr
sbb
and
mov
xor
mov
sbb
inc
rcl
fcoml
mov
jns
cmp
sti
xorl
xor
mov
xor
stos
addr16
jbe
mov
call
mov
inc
shlb
inc
loope
jge
pop
lret
insb
test
shlb
xlat
push
in
in
iret
inc
push
pop
aas
imul
adc
jae
add
repz
out
test
add
lret
dec
mov
adc
add
xor
or
fcom
push
mov
dec
lds
and
dec
xchg
mov
push
add
push
push
push
adc
cld
test
int
adc
rolb
push
mov
fnstenv
outsb
jl
dec
xchg
je
shl
lods
cmpsb
adc
mov
lahf
xor
por
flds
shlb
jo
and
sbb
sahf
cmp
icebp
fwait
xor
mov
push
rcrb
mov
insl
mov
add
repz
pop
or
xor
sub
ret
lea
cli
orb
mov
add
cmp
adc
test
test
outsl
aas
adc
lods
out
mov
pusha
push
je
lods
sbb
daa
xor
popf
gs
mov
movsl
movsb
mov
sbb
or
jo
dec
cltd
mov
out
dec
aaa
jno
fcomps
fsubs
roll
and
add
call
pop
dec
mov
adc
fwait
push
mov
movsl
out
addr16
mov
notl
cli
sahf
int
pause
jecxz
push
cltd
xchg
cltd
or
in
jge
test
and
lcall
ja
fnsave
leave
ret
fcmove
xor
mov
and
int
xor
popa
cmp
and
or
fcoml
sarl
jp
dec
scas
sbb
pop
or
dec
or
sub
add
es
inc
aad
jne
iret
add
xchg
imulb
dec
jmp
fistps
in
fadd
inc
inc
int
lahf
cs
nop
cmpsb
sub
mov
cmp
xchg
sahf
pop
sbb
mov
push
dec
jmp
inc
mov
and
inc
jg
stos
mov
aad
mov
popa
push
sti
jg
lods
jne
pop
push
and
ja
mov
lods
mov
sti
leave
hlt
mov
xchg
adc
sub
add
xchg
push
ja
sub
out
jp
stos
jg
inc
loopne
int
shlb
jb
mov
mov
fcomip
pop
xor
clc
clc
xlat
insl
mov
or
xchg
mov
jmp
push
inc
icebp
sbb
mov
xor
mov
and
mov
mov
rolb
ljmp
hlt
xor
cld
jno
push
lret
pop
jmp
loopne
jnp
mov
hlt
mov
adc
fnstcw
adc
cli
data16
or
add
lahf
push
iret
adc
sbb
inc
jg
sar
mov
pop
dec
fstl
fbld
daa
xor
push
gs
jge
xor
pop
xor
lcall
and
adc
pop
push
push
xchg
leave
fyl2x
mov
add
jae
cmpb
pop
push
pop
mov
cmpsl
mov
sbbb
hlt
mov
push
mov
sub
xchg
mov
ret
jbe
sbbb
add
shll
xchg
or
imulb
in
mov
push
fidivl
mov
repz
mov
xor
roll
aas
popf
pushl
out
bound
mov
push
and
adcb
fadds
xor
pop
lahf
pop
add
test
or
mov
mov
pop
hlt
dec
or
fisttpll
pop
mov
repz
enter
loope
scas
and
stos
adc
cmpl
test
out
sarl
ss
sub
and
lcall
out
inc
add
loop,pn
pushf
outsl
sub
sub
rclb
xor
icebp
adc
push
dec
or
cwtl
and
jo
push
inc
pop
cltd
push
popf
stc
in
fmull
mov
sbb
lret
mov
ss
sub
lret
pop
add
sti
mov
lea
pop
add
loopne
test
cmp
push
mov
movsb
sahf
sub
lock
scas
mov
loope
cmp
cmc
add
cmp
mov
sbb
sbb
loop
iret
jo
fwait
inc
ds
xchg
movsb
cmpsl
pop
pop
out
dec
cmpsb
pop
pop
xchg
sub
in
mov
lock
in
adc
push
cli
mov
iret
cwtl
and
mov
lods
jns
andl
xorb
xor
dec
mov
outsl
jmp
or
gs
add
icebp
movsl
out
cmp
scas
std
into
dec
cli
fidivl
inc
leave
setne
scas
jp
insl
cmp
xor
jno
call
or
and
addr16
sub
jno
mov
inc
aaa
add
stos
inc
adc
inc
cmpb
sub
bound
leave
cmp
nop
clc
or
pushf
sub
test
jne
cmp
jb
jnp
xchg
sub
sbb
sbb
sbb
or
dec
sub
in
divl
ret
and
je
jbe
xor
fs
in
and
jne
dec
xor
aas
rcr
mov
sbb
sub
jecxz
roll
test
in
xchg
adc
ds
loope
and
push
and
xchg
or
ficomps
jle
movsb
xor
test
ja
data16
jmp
mov
inc
add
int
repz
cmpsb
mov
sub
cmp
cmp
fsubl
and
sbb
inc
add
imul
popf
fucomip
inc
add
movsl
adcl
xchg
fisubrs
hlt
cwtl
das
enter
sbb
inc
sahf
or
dec
jne
inc
fildll
lahf
pop
je
and
push
xchg
notl
fs
scas
push
jns
cmp
in
xchg
inc
adc
cmp
mov
ret
fisubrs
nop
sbb
add
xor
hlt
dec
shlb
loopne
aas
jge
jnp
cmp
push
jns
pusha
mov
notl
pop
gs
pop
jae
adc
add
fcoms
xchg
aaa
jae
clc
outsb
mov
xorl
out
and
int
in
fldl
lods
sbb
insb
aad
dec
mov
mov
sbb
leave
mov
int3
lods
ljmp
in
lea
bndstx
clc
fbld
push
loopne
and
into
sbb
pop
ret
xchg
rcr
sbb
cli
sbb
mov
je
jns
icebp
dec
aad
scas
out
insb
jne
lcall
push
cltd
negb
xor
nop
sbb
push
cmpl
popf
mov
add
mov
les
cmpsb
mov
jae
jae
scas
pop
push
pop
aad
add
xchg
std
in
jnp
xchg
sub
daa
cld
sarb
lahf
fsubrs
sahf
pushf
dec
mov
jp
dec
mov
pop
inc
and
into
cmpb
and
jnp
pop
rcr
add
mov
cltd
fldl
or
xchg
add
xchg
lock
sub
pop
bound
lret
sub
lea
pop
xor
sbb
push
mov
mov
dec
xor
movsl
lock
call
testb
test
inc
testl
jnp
hlt
sti
clc
or
mov
mov
movsl
call
jno
cwtl
mov
mov
icebp
pop
rol
dec
xor
sbb
mov
sbb
adc
out
add
call
xor
mov
cld
mov
mov
mov
jne
adc
arpl
arpl
mov
inc
pop
cli
fimuls
inc
cld
movsl
inc
add
sbb
movsl
ret
outsb
add
loope
int3
pop
jnp
jmp
sti
subb
aam
out
mov
sti
clc
lods
test
cmp
iret
ds
pop
inc
cli
pop
int
fisubrs
mov
call
fsubrs
push
push
or
adc
outsb
jmp
inc
cmc
sbb
xchg
fisttpl
xchg
into
xor
popa
lret
fisttpl
add
pop
negl
repnz
sub
jg
repnz
lods
imul
nop
sub
test
lods
sub
mov
pop
and
mov
push
sti
mov
dec
pop
test
inc
in
xor
jns
add
add
out
repz
lahf
jae
icebp
mov
push
pop
xor
insb
ljmp
push
enter
outsl
sbb
addl
inc
sub
dec
les
pop
imull
fwait
xchg
xchg
jns
and
mov
lahf
outsb
cmc
sbb
call
cmp
xchg
jge
jns
xchg
mov
shlb
sbb
hlt
mov
stc
dec
leave
std
loope
mov
push
subb
sub
xchg
mov
inc
pop
or
cmc
mov
test
out
or
into
inc
into
or
sbbb
loop
lret
imull
cmc
imul
mov
lods
pop
pusha
push
cmp
notl
and
xchg
sub
cltd
sub
mov
jo
cmp
outsl
sub
adc
call
or
xor
hlt
test
adc
cli
sti
je
xchg
clc
inc
jg
pop
test
cmp
sbb
or
sub
add
push
scas
repz
push
stc
inc
shll
je
pop
int
ss
push
in
jp
loope
test
dec
or
jne
lret
sbb
add
jne
lods
in
arpl
push
push
mov
push
inc
incb
pop
push
out
les
push
in
insl
ss
test
sbb
push
jmp
lret
sarb
leave
pop
push
cmpsb
or
mov
xor
pop
std
dec
dec
faddl
shr
mov
lret
out
inc
popa
and
andl
xor
adc
adc
ljmp
std
mov
adc
jno
mov
rcll
pop
mov
test
jge
add
outsl
sbb
cmpsb
mov
dec
pop
cmpsl
pop
mov
cmp
jle
fcoml
test
sbb
mov
jae
jle
sar
into
clc
out
add
mov
lret
jp
in
mov
clc
pop
jecxz
repnz
adc
push
adc
inc
cmp
in
xor
or
and
mov
pop
fmul
mov
push
push
adc
rolb
mov
dec
cmp
das
push
pop
stc
push
dec
lods
les
cmp
pop
sbb
xchg
adc
testl
adc
mov
inc
or
jne
mov
insb
aaa
testb
ds
jnp
ljmp
repz
pop
hlt
sti
adc
loope
xchg
and
mov
ficompl
or
mov
lcall
sbb
sbb
incb
dec
or
lds
subb
loop
push
pop
inc
repz
push
mov
inc
das
fstpt
popf
mov
push
loope
shll
lds
pop
mov
mov
sbb
rcll
dec
incl
dec
loopne
inc
push
lret
push
cmpsl
das
dec
and
jb
cmc
sbb
mov
xchg
mov
and
jg
lahf
repz
push
push
jo
in
jl
addr16
mov
fisubrl
pushf
dec
jo
shlb
pop
or
mov
mov
adc
push
dec
into
xor
jl
lods
push
aaa
sbb
loopne
and
xor
mov
xor
or
sub
repz
test
add
testl
popa
inc
cmpsl
arpl
sbb
bound
into
int
cli
sub
stc
jl
cmc
popl
push
out
insl
dec
insb
outsb
shll
add
dec
dec
mov
and
mov
pop
test
lock
test
mov
adc
out
mov
pop
pinsrw
sbb
dec
jae
imul
je
loopne
sti
inc
xor
gs
sbb
cld
daa
mov
push
mov
dec
hlt
sbb
mov
dec
add
cmpsl
cmpsl
jecxz
pop
inc
fdivrl
mov
enter
sub
cmp
add
xor
test
push
xor
cmp
jle
sbb
lods
mov
xor
push
clc
mov
and
adc
mov
imul
mov
or
into
adc
nop
ret
mov
xor
jecxz
mov
test
fnsetpm(287
inc
dec
lods
mov
int3
xchg
sti
adc
jb
and
lock
adc
stos
rolb
fwait
push
jo
add
pop
push
insl
outsl
mov
in
outsb
jmp
test
sbb
mov
xor
in
mov
imul
or
test
sbb
jmp
lcall
push
test
mov
mov
mov
sti
sub
mov
ret
or
add
ss
adc
xchg
mov
mov
imul
test
jbe
test
aad
popf
push
jno
inc
and
sbb
jl
sub
mov
pop
ds
iret
lcall
mov
jge
icebp
push
sbb
mov
sarb
push
movsl
dec
or
mov
in
sub
cmpsl
mov
mov
add
inc
push
jmp
xchg
outsb
add
mov
bound
cmpsl
ret
test
orb
cltd
stos
fdivs
push
mov
rep
lods
cmp
xor
xor
cli
movsl
or
xchg
jl
inc
jle
rcr
xchg
pop
mov
or
fidivrl
and
add
repnz
dec
push
push
adc
int3
cmp
leave
je
je
call
lods
clc
jmp
add
fdivs
push
js
ret
out
je
and
repnz
stos
stos
sbb
xor
push
jl
and
shrb
ret
adc
cld
fisttps
fcmovbe
sbb
mov
loopne
scas
jl
and
pop
mov
jno
mov
repnz
lea
bnd
cld
shrb
out
mov
add
inc
pop
mov
aad
icebp
push
xor
imul
stc
and
mov
cmp
xor
rolb
lahf
mov
push
jp
pop
or
or
inc
inc
lea
sub
repz
sbb
xor
test
push
inc
out
inc
cltd
adc
inc
sar
loop
stos
or
lds
adc
push
fdivs
sbb
mov
inc
sub
cld
xchg
test
popa
jnp
data16
repnz
cmpsl
mov
fistpl
les
jge
cmp
cld
inc
jmp
in
ljmp
pushf
inc
rcl
or
and
test
pop
gs
adc
xor
into
push
pop
je
daa
jo
xorb
icebp
cmp
int
repz
mov
xor
int3
adc
out
mov
int3
or
or
lods
cs
sbb
cmp
rclb
cmp
inc
xor
icebp
pushf
cmpsb
cmp
sbbb
call
pop
sbb
test
pop
mov
and
pop
je
xchg
add
push
xor
je
pop
push
fldl
push
sub
mov
xor
dec
iret
mov
xchg
mov
loop
xor
mov
pop
stc
call
xchg
fucomp
push
call
jecxz
push
adc
scas
adcb
ss
les
adc
rcrl
jecxz
mov
gs
xchg
add
push
jmp
repz
aad
dec
inc
aad
outsl
mov
or
popw
cltd
fiadds
sub
push
cmpsb
loopne
sbb
mov
pop
iret
push
bt
out
test
xchg
cmp
cmp
push
gs
aam
sub
xchg
mov
scas
xchg
inc
xchg
pushf
out
push
in
loopne
icebp
and
in
fisubl
pop
dec
test
in
adc
inc
cli
lcall
mov
inc
jb
pop
leave
leave
push
add
push
sub
push
lods
in
mov
xchg
cld
aad
pusha
mov
ljmp
xor
iret
popf
fadd
push
pusha
jno
sbb
push
popa
lahf
popf
jg
jg
loop
sbb
xor
and
popa
lret
test
ss
mov
sub
pop
cmp
loop
sub
xchg
push
push
adc
mov
and
push
jle
clc
xchg
jl
rcr
cmp
movsl
xor
lock
or
scas
lret
addr16
gs
test
and
push
cs
push
in
ja
or
push
shl
xor
mov
and
cmp
inc
cwtl
dec
iret
sub
adc
mov
jg
out
push
jg
mov
dec
xlat
inc
imul
lret
cwtl
lea
and
in
lods
scas
shlb
pop
xor
into
cmp
xor
mov
outsb
xchg
pushf
in
push
dec
mov
inc
rcl
add
aam
rcrl
and
iret
push
in
pop
sub
repz
mov
jne
xor
loop
mov
fnstcw
mov
xorb
pop
mov
int
call
cmpsl
pop
dec
imul
ret
xchg
cli
imul
lret
hlt
xchg
mov
pop
push
fcmovb
cmpl
or
fs
scas
add
dec
jmp
test
xor
rcrb
pop
lods
sahf
add
rcll
xchg
movlps
mov
iret
xor
cmp
jo
test
or
pop
cmp
and
and
jl
and
fs
push
pop
or
cmp
add
mov
pop
cwtl
gs
dec
cmp
shrl
shlb
xchg
les
test
push
popf
pop
jle
lahf
scas
fdivl
jp
mov
pop
imul
int3
mov
push
fsubr
fiaddl
cmp
dec
push
push
push
lcall
xchg
lock
push
stos
xchg
or
shll
pop
jb
roll
pushl
inc
and
cmc
sbbl
inc
xlat
push
outsb
in
jae
mov
outsb
add
jecxz
setno
push
jns
pop
decb
fsubrs
cmpsl
std
lahf
mov
iret
loope
pop
cli
push
mov
lds
enter
add
mov
sbb
xor
jle
fmul
mov
add
stos
xchg
xor
and
in
scas
sti
mov
mov
pop
sub
xor
inc
sti
pop
in
dec
xor
movsl
mov
out
iret
or
mov
lods
push
fiaddl
in
aaa
gs
inc
sub
popf
enter
jle
mov
mov
adc
sbb
test
add
pop
xchg
lahf
sub
dec
movl
test
or
shr
mov
fnstsw
xchg
dec
sbb
lcall
or
mov
xchg
push
push
sbb
ret
push
ss
sbbb
sub
cli
cmpsl
sub
jge
jecxz
enter
adc
mov
push
in
dec
faddl
pop
adc
mov
js
loop
or
addl
ja
je
jne
pop
mov
mov
sbb
mov
push
les
loopne
push
std
cs
arpl
hlt
mov
dec
fcmovb
pop
out
repz
cmc
test
les
adc
rcl
test
pop
sbb
jo
sbb
bnd
sbb
out
js
lcall
and
in
mov
nop
das
mov
stos
mov
xlat
mov
pop
xchg
and
sbb
lcall
rorb
leave
test
cmp
add
jl
lahf
cmp
int3
pop
and
push
jnp
xor
popa
nop
movl
jnp
push
je
jnp
cmc
cmp
stos
pop
xchg
xor
mov
insl
data16
lds
pop
mov
jle
cmp
xor
mov
in
add
movsl
shld
cmpsb
out
push
loop
out
fsubl
pop
mov
mov
cmpsb
push
sahf
icebp
inc
jl
fcmovnu
sbb
aad
fcomps
push
nop
loope
jecxz
out
inc
pusha
in
mov
iret
in
push
xchg
inc
int3
sub
push
and
bound
adc
xor
or
mov
or
push
mov
push
pop
pusha
out
push
mov
mov
enter
insl
mov
jne
sbb
ss
aaa
push
pop
ret
mov
add
mov
je
in
pop
nop
inc
xchg
mov
cmp
mov
sub
rolb
mov
ljmp
mov
in
sbb
fdiv
mov
mov
stos
je
es
mov
roll
pop
xor
adc
mov
mov
out
sub
mov
add
testl
popa
inc
outsl
xor
and
movsb
xchg
les
sub
xchg
mov
dec
mov
jge
out
mov
pop
es
pop
mov
pop
cmp
lods
push
fcoms
add
xchg
push
pop
loope
mov
and
push
push
and
shll
add
lcall
sbbl
jb
idivl
test
movsl
btr
jbe
xchg
cmc
sti
out
add
xor
push
fsubs
push
addl
inc
fsts
add
insb
lods
imul
push
fcoml
les
add
dec
or
sub
jl
ja
dec
fsubl
mov
pop
cs
sahf
sub
mov
adc
pop
loope
sub
push
xor
inc
add
outsl
std
jl
gs
lea
out
or
in
das
jmp
xor
xor
jae
cmp
or
insl
movsl
xor
or
jmp
insl
sbb
jp
ficoms
imul
ret
sbb
ret
jns
rcr
in
aam
sub
mov
out
dec
push
int
loopne
pop
add
or
mov
out
sbb
out
insb
movb
ret
mov
mov
mov
and
mov
sub
jmp
jb
and
out
mov
push
adc
into
pop
jnp
sbb
mov
sbb
add
ficoml
lret
jecxz
sar
mov
lahf
xchg
imul
scas
pop
fcmovbe
sub
xorl
pop
cmpsl
idivb
cmp
outsb
xor
lret
add
lret
jg
in
cmp
in
push
push
lea
or
dec
add
sbb
test
ds
nop
sete
pop
rclb
push
popa
mov
pop
shlb
stos
js
add
imul
js
push
inc
ja
cmp
add
std
add
fstp
mov
int3
sub
rorl
enter
sbb
in
imul
aam
test
cmp
popa
push
sub
xor
or
mov
push
pop
xor
or
pusha
mov
je
mov
lods
xchg
inc
jp
shlb
add
cld
add
mov
sarl
xor
add
sbb
push
cld
leave
out
test
add
rcrl
ret
les
es
je
mov
loop
xchg
push
les
ss
xlat
mov
aas
mov
scas
incb
lahf
lods
xor
mov
push
mov
ljmp
or
std
sbb
inc
and
movsl
mov
popf
in
test
sbb
scas
add
dec
or
insb
push
xor
add
xor
fucomi
pop
movl
mov
dec
adc
push
mov
mov
test
enter
mov
fldt
stos
je
in
jmp
sar
fs
mov
test
jle
inc
mov
push
ds
leave
mov
inc
fildll
sahf
xchg
pop
pop
fcmovnb
jge
rorb
stos
lret
push
lcall
dec
adc
in
sbb
shlb
push
int3
fnstcw
outsb
xchg
sub
xchg
filds
and
or
inc
or
sub
or
hlt
fninit
cmp
sarb
mov
xor
lock
dec
in
data16
add
inc
scas
movsb
mov
mov
xchg
loope
xchg
cli
jl
std
xchg
xchg
es
shr
cmp
icebp
stc
mov
or
mov
inc
lcall
or
cmc
in
repnz
adc
xchg
or
push
shll
ds
clc
outsl
inc
and
add
out
jae
xlat
xor
or
rcr
lret
lahf
mov
arpl
shrl
sub
adc
loop
fwait
aad
inc
cmp
shlb
aam
jo
dec
push
imul
jecxz
and
idivb
ret
out
mov
xor
cld
mov
mov
jg
push
inc
push
out
neg
movsl
das
xlat
push
pop
lahf
xchg
cmp
shll
in
test
divb
rcl
push
jmp
into
ret
sub
and
out
cmpsb
out
dec
xchg
seto
push
xor
mov
mov
mov
mov
jg
cmpsl
xorb
fidivrl
out
cli
imul
sbb
inc
cs
and
in
xchg
push
xchg
repz
rol
mov
sbb
movq
cmc
jp
mov
dec
adc
push
lret
adc
or
lock
mov
add
mov
inc
and
or
daa
js
mov
push
ret
adc
push
iret
sti
xor
pop
sahf
pop
outsl
xchg
test
xor
mov
xlat
jl
sub
inc
and
add
or
sub
xor
sbb
stos
ljmp
xor
xchg
int
call
lcall
xchg
add
je
sub
sahf
ds
mov
sbb
jge
lods
jae
xchg
gs
loopne
aas
fsubs
jo
xchg
sbb
sbb
mov
sbb
test
push
pop
xchg
stos
sti
sarl
push
add
sub
sti
mov
sti
xor
lahf
repz
xchg
adc
test
adc
inc
jmp
fcmovb
dec
cmp
push
popf
mov
test
test
imull
adc
test
mov
int3
pop
cmp
loop
out
test
dec
jecxz
lret
lahf
xchg
mov
push
adc
mov
mov
jbe
orb
fiadds
insb
test
lock
xor
insl
mov
dec
sti
jns
dec
mov
mov
lcall
std
pusha
movsb
in
orb
lret
mov
fiadds
fwait
push
aam
push
mov
jecxz
mov
jg
inc
push
clc
and
push
syscall
int
mov
mov
scas
push
xchg
jne
sub
push
lds
sbb
dec
lock
scas
jge
dec
inc
clc
iretw
outsl
stos
xchg
pushf
jns
ja
sbb
push
sbb
aad
jnp
pusha
or
jns
inc
or
hlt
ja
mov
insb
pop
mov
push
iret
imul
addl
push
aam
xchg
pop
adc
imul
loopne
add
stc
and
mov
jo
data16
dec
add
std
gs
ds
cld
std
mov
mov
pop
mov
cmp
push
mov
movsl
mov
into
xor
test
adc
ret
arpl
pavgb
in
das
mov
xchg
dec
cmpsl
adc
xchg
or
das
lock
lret
fistpll
cmpsl
scas
mov
xlat
sub
int
addr16
mov
mov
or
cmp
and
pushf
push
add
mov
insb
or
ds
xor
imulb
inc
xor
cmpb
lret
fisubs
sub
push
shrl
dec
mov
lods
add
push
leave
daa
jecxz
xchg
lcall
decb
ja
in
sub
cmp
movsl
or
inc
push
fldenv
sbb
cmp
or
test
lds
stc
xor
shlb
inc
lods
sbb
dec
jns
sbb
mov
fs
jg
adc
fadd
push
mulb
rcr
cmpsb
jl
mov
fidivs
dec
push
mov
jae
cwtl
movsb
jg
cmp
jnp,pn
dec
shrl
jecxz
cmp
pop
xlat
mov
add
push
repnz
sahf
mov
int
sbb
or
and
sub
mov
jmp
dec
push
pusha
mov
jne
push
push
mov
mov
pop
sahf
das
cmpsb
fwait
popf
sbb
and
mov
or
shl
aad
push
or
or
aam
adc
in
xor
pop
std
addl
jl
stc
adc
fstpt
fildll
daa
les
ret
add
pop
aaa
mov
adc
push
roll
addb
and
push
adc
sub
je
sub
mov
fcoms
pop
mov
pusha
cld
dec
or
add
push
into
inc
test
mov
test
out
inc
jae
outsl
push
data16
sub
mov
xor
test
add
fcom
jmp
dec
scas
sti
iret
mov
stos
jg
push
jle
adc
and
aaa
dec
cmp
stc
data16
and
mov
adc
sahf
out
dec
push
es
loope
dec
or
mov
pop
scas
push
stos
lds
xor
cld
nop
scas
inc
jge
mov
sbb
fisubrs
dec
mov
push
push
mov
cmp
shrl
lcall
xor
xchg
jp
mov
mov
scas
lods
pop
mov
hlt
movsb
test
daa
jns
fcmovnu
mov
cs
call
int
cmp
stos
test
inc
in
cmp
stos
pop
lods
mov
aam
jmp
sahf
cmp
xor
ja
push
sarl
and
imul
ja
imul
mov
and
insl
gs
stos
int3
sub
dec
xchg
outsl
int
pop
adc
mov
sbb
ficoms
div
ds
cmc
and
jbe
inc
aam
dec
repnz
jl
push
aaa
lods
test
fdivrl
inc
pop
movsl
xor
nop
xchg
dec
xchg
xchg
test
into
or
jnp
mov
ficompl
scas
or
cltd
push
aam
movhps
jle
jg
or
push
iret
cmp
jns
or
mov
xchg
stc
sahf
pop
test
pop
rcrl
mov
sub
jl
xchg
add
xchg
cmp
arpl
loop
adc
outsl
jg
in
popf
cmp
xchg
jecxz
adcl
in
int3
and
pop
scas
incl
sub
int3
loop
cli
push
pop
mov
add
notl
jne
mov
mov
jno
jecxz
insb
jl
repz
cmp
pop
push
fcompl
mov
pushf
int
dec
pop
stc
or
addr16
cmp
dec
push
icebp
hlt
test
xchg
idiv
dec
ljmp
psllw
imul
idivl
ljmp
sbb
out
shl
out
pop
pop
jecxz
sbbl
addl
add
adc
xchg
popa
pop
mov
mov
sbb
mov
pop
jl
cmp
xchg
outsb
sbb
ss
cmc
addr16
push
ljmp
jg
cmp
sub
daa
loop
scas
rcr
fnstsw
dec
add
jg
imul
mov
push
sub
mov
pop
test
pushf
xor
popf
nop
jg
add
leave
cmp
sarb
cmp
outsl
imul
mov
jne
mov
into
divb
xchg
dec
push
push
pop
out
loop
ret
lock
scas
pop
sub
mov
mov
push
or
adc
lock
or
cwtl
dec
shrl
test
mov
les
mov
es
jb
stos
scas
adc
push
ljmp
mov
movsl
jle
sbb
js
into
sbb
test
pop
inc
jae
mov
pop
aad
dec
ljmp
shll
push
mov
fiadds
xchg
or
lock
push
icebp
clc
outsl
push
rol
mov
pushf
mov
mov
xchg
push
jle
adcl
test
push
sbbl
or
in
arpl
movsb
dec
or
xor
jge
add
xor
out
mov
sti
push
addr16
mov
lret
repz
mov
xchg
mov
ljmp
xchg
sbb
test
mov
notl
pop
xchg
mov
xchg
and
push
lea
jmp
mov
adc
pop
dec
subb
ja
andl
pop
in
mov
dec
ljmp
out
jp
pop
popa
cli
sub
xor
repz
sbb
xchg
cs
notb
and
push
scas
pop
ja
out
and
cmp
ficompl
int3
mov
mov
jo
push
and
out
xor
sbb
scas
push
mov
cmpsl
or
ljmp
frstor
push
mov
inc
pop
mov
fidivl
mov
adcb
ficoml
notb
mov
mov
mov
sti
out
std
fdivrs
xlat
add
rorb
lahf
fsub
out
mov
pop
push
int3
add
es
stos
sahf
xchg
outsb
test
cmp
xor
das
in
xchg
push
jge
jb
mov
inc
sti
push
stos
or
dec
lret
test
sbb
and
sub
jecxz
sbb
add
iret
mov
add
cmp
shll
push
stos
mov
sti
jne
aad
mov
icebp
jo
mov
push
rcr
xchg
add
jmp
insb
fsubrs
inc
leave
cmc
stc
mov
out
loopne
sub
inc
cmp
out
sbb
xor
xchg
arpl
add
loop
xchg
in
mov
dec
push
inc
add
mov
mov
push
icebp
sub
or
icebp
pop
ret
ds
inc
and
clc
push
sbb
adc
pop
test
adc
test
xor
adc
or
loope
movsl
mov
fs
cli
sub
iret
mov
es
sti
inc
lock
enter
cmp
xorl
stc
mov
adc
mov
push
xchg
test
lret
inc
fucomp
shll
scas
addl
mov
and
es
outsl
outsb
xchg
dec
mov
jl
loope
and
addr16
cmc
dec
xchg
lds
loopnew
loop
sbb
inc
pop
add
dec
and
test
push
nop
std
popf
add
outsl
or
repz
nop
dec
xchg
adc
sub
jne
inc
daa
mov
adc
aaa
jl
xor
outsb
xchg
xor
in
xchg
cmpl
push
rorb
iret
nop
scas
push
inc
movl
sub
dec
cmpsl
cmp
mov
movsl
or
xchg
push
out
jnp
leave
shll
cmp
mov
mov
mov
stos
xor
xor
add
dec
jne
add
inc
pop
imul
cmp
fmull
mov
jnp
dec
jae
inc
adc
stc
sub
pop
sbb
sbb
and
mov
imul
lahf
dec
mov
inc
push
sub
int
jl
xchg
cmp
mov
ja
cmc
les
sbb
sbb
cmpsl
mov
jecxz
dec
faddp
loopne
stos
or
popa
xchg
pop
cld
rorl
lea
and
dec
out
ja
mov
and
gs
cmp
inc
mov
andb
adc
mov
and
divb
lret
movsb
fs
popa
jp
lret
xor
shlb
testl
push
mov
sti
imul
out
out
pop
pop
pop
loop
lods
movsl
test
dec
mov
daa
imul
imul
jecxz
aad
cmp
adc
cmp
lcall
loope
mov
enter
xchg
cli
cmp
xor
daa
idivb
fldl
mov
loopne
inc
push
lods
stos
add
aad
dec
in
add
mov
insb
pusha
sti
nop
xchg
push
rolb
outsl
inc
cmpsl
sub
push
mov
insb
mov
repnz
movsb
pop
dec
int3
mov
lea
and
inc
xchg
push
push
dec
shrb
ret
pop
dec
loop
and
arpl
cld
sbb
or
arpl
cmpsl
mov
fimuls
adc
incb
ljmp
ret
push
push
scas
lods
mov
pusha
adc
mov
shll
popf
dec
lock
jns
and
xlat
push
lret
lds
loopne
das
mov
stc
test
int
notl
add
and
sbb
xor
pop
mov
push
pusha
das
xor
ds
fisubs
lods
test
fmull
into
push
mov
inc
cld
dec
frstor
add
inc
in
sub
sub
and
gs
mov
cmpb
in
xor
inc
push
add
dec
xchg
or
cmp
out
jl
mov
stos
pop
out
jb
test
dec
std
mov
mov
push
xor
lock
pop
jne
pop
jecxz
sar
stos
push
repz
fisttpll
mov
nop
lret
cmpb
pop
test
lods
rol
das
cs
test
aad
jb
xchg
nop
and
sub
jne
inc
negl
push
jmp
mov
test
pop
pusha
outsb
aad
ja
jae
lods
stos
push
xchg
cmp
enter
jp
mov
inc
sti
es
mov
sti
xchg
mov
call
outsb
jge
jge
mov
mov
inc
mov
lods
les
push
mov
ss
push
cli
pop
cltd
mov
xor
enter
pop
sbb
call
adc
pop
sbb
and
jmp
out
jge
sbb
xor
fildll
jmp
inc
cmp
inc
jp
aad
mov
add
in
cltd
and
mov
addl
xchg
or
xor
loopne
mov
pop
repnz
int3
cwtl
xor
adc
mov
mov
adc
popa
stos
enter
out
dec
sub
int
aam
mov
int3
pushf
std
or
jmp
outsl
arpl
sahf
lret
mov
mov
sub
add
data16
inc
outsl
pop
lahf
popf
xor
mov
lcall
cmp
mov
fs
filds
pop
push
mov
push
inc
aaa
roll
insb
repz
stc
push
ljmp
lods
jnp
cmp
cmpsb
sub
mov
xchg
jg
scas
stos
or
fsubs
push
dec
xchg
hlt
pop
xorb
adc
push
dec
inc
push
popa
jb
out
or
ljmp
adc
test
out
arpl
cmp
out
rclb
mov
cmp
int3
sbb
push
mov
dec
xchg
sbb
lea
sahf
cmp
jmp
aam
rorb
jge
inc
mov
mov
int
jl
pop
mov
or
add
xor
mov
mov
mov
add
loop
cmp
leave
adc
cmp
cmp
adc
push
dec
imul
mov
add
mov
repnz
inc
lahf
aad
xchg
pop
jecxz
out
aaa
or
push
sub
lock
add
sub
imul
sbb
xchg
shl
and
repz
pop
xlat
pop
scas
sbb
pop
mov
mov
bound
mov
pusha
cwtl
jmp
push
sub
and
jns
pop
pop
jne
cmp
jl
sub
ret
loop
rclb
jl
ljmp
testl
adc
sarl
xchg
adc
cmpsl
bound
cmp
shll
in
sbb
xchg
cmp
xchg
and
inc
stos
push
sarb
mov
push
stos
andb
mov
imul
aam
shll
jecxz
inc
mov
in
or
inc
adcl
push
and
sbb
lods
push
or
mov
iret
xor
push
xlat
leave
fistpl
cli
push
stos
push
mov
mov
dec
lods
testb
inc
lock
add
sbb
lcall
add
mov
mov
inc
xchg
sub
jnp
and
fs
sub
inc
adc
aaa
mov
mov
ret
adc
lcall
xchg
sahf
sbb
scas
and
jne
mov
push
iret
jnp
dec
leave
pop
popl
fsubrs
inc
addr16
xchg
out
out
bnd
mov
sbb
aaa
push
movntps
mov
call
aam
jnp
ljmp
jno
cli
sti
pop
testb
cmpsl
push
stos
push
push
int3
pop
sahf
adc
push
rcll
dec
xor
push
nop
aad
insb
inc
mov
mov
sahf
ret
shrl
or
nop
into
cmp
mov
out
mov
dec
jl
adc
incb
xor
lret
xor
jge
loope
imul
aas
xchg
jge
mov
outsb
dec
cli
ljmp
xchg
and
push
inc
inc
sbb
andl
xchg
clc
addr16
out
std
nop
sti
jns
or
xlat
dec
les
adc
in
dec
xchg
mov
ficomps
outsl
das
fwait
icebp
xchg
fnstenv
stos
shll
stos
addr16
inc
enter
jl
cwtl
imul
leave
lods
inc
push
xor
mov
pusha
mov
mov
outsl
dec
lock
cli
sbb
jl
hlt
aam
xchg
pop
leave
lods
inc
out
cmp
cwtl
mov
mov
xor
sahf
mov
adc
les
pop
sbb
ret
lret
jnp
inc
sbb
xor
stc
sbbl
out
sarl
jne
test
push
sub
xchg
sub
push
cmpb
or
push
bound
cli
imul
sub
or
mov
mov
rolb
and
test
shrl
icebp
sub
push
lds
pop
pop
sub
mov
mov
pop
mov
sbb
pusha
je
scas
or
xchg
xor
cmpsl
mov
inc
stc
je
ret
adc
das
pop
mov
or
arpl
cmp
xor
repnz
jae
lds
mov
out
push
arpl
pop
mov
push
dec
lahf
jb
xor
cld
sbb
in
push
inc
fcompl
mov
jo
repz
sub
xchg
lods
mov
rclb
inc
loop
subl
pop
push
out
inc
cmp
test
call
push
js
xor
jnp
xlat
dec
rcrb
mov
sub
rcll
push
lret
ljmp
dec
faddl
cmp
push
pushf
sbb
icebp
cltd
test
cmp
les
es
or
cmp
pop
gs
stos
xor
mov
mov
jo
cmp
pop
orl
movb
fs
pop
bswap
std
mov
adc
sbb
adc
lahf
enter
add
loop
dec
in
cmp
stos
sub
scas
or
cltd
iret
and
mov
mov
adc
mov
cmc
and
sbb
dec
lock
mov
or
push
loopne
push
sub
jmp
stos
popa
js
cmp
je
push
xor
dec
mov
cltd
mov
dec
cmpsb
lods
xor
ja
add
cmpsl
xchg
loopne
mov
int3
dec
or
jmp
mov
dec
fwait
pop
in
push
xchg
jo
cmp
push
inc
std
xor
and
fiaddl
cld
std
fsubl
xchg
stos
pop
push
push
scas
cmp
mov
push
aam
andl
dec
or
add
ds
lock
jns
out
cwtl
lahf
add
dec
ror
xchg
outsl
dec
out
fidivs
cmpsl
mov
cmpsb
dec
and
push
out
bound
punpckhbw
into
inc
fdivs
cmpl
sbb
cltd
cld
mov
leave
dec
add
jg
sub
lea
mov
sbb
es
in
mov
scas
sti
xchg
mov
jbe
test
push
fsts
es
and
and
ret
lahf
or
mov
push
rclb
pop
stos
mov
dec
inc
sbb
test
sbbb
sbb
movsl
cli
or
scas
sbb
adc
dec
repz
in
ljmp
cmp
mov
outsb
lcall
and
sbb
mov
jbe
push
les
aaa
es
jg
add
jnp
sarl
pop
inc
mov
cmp
push
dec
mov
mov
jbe
mov
lret
mov
ja
test
mov
sbb
push
stos
xor
and
or
iret
mov
mov
inc
push
pop
in
imul
fsubs
leave
test
ljmp
lea
xchg
xchg
mov
mov
pop
push
dec
jp
orb
iret
imul
pop
out
in
jmp
int3
cli
imul
ss
fimuls
jae
xchg
xchg
sub
xor
mov
cmp
or
test
lods
fs
pop
xchg
and
mov
sub
jl
mov
out
daa
lods
sar
cmp
adc
cmp
mov
into
lock
sbb
repz
repz
push
xchg
fsubr
out
sbb
stc
lret
xor
in
jecxz
iret
dec
mov
popa
inc
adc
xor
add
pop
push
inc
test
scas
pusha
inc
mov
lcall
cld
dec
test
testb
jne
or
outsb
lods
push
xor
mov
mov
dec
js
mov
jl
inc
data16
inc
cli
xor
sbb
mov
mov
mov
test
cmpsb
lods
pop
cmp
xchg
bound
jmp
fcomps
fwait
add
pop
int
jns
lea
aad
lea
movsb
mov
add
roll
stos
insb
jp
cmp
xor
xorb
add
dec
test
mov
adc
andb
imul
pop
daa
mov
rorb
and
adc
out
dec
icebp
outsb
pop
inc
inc
lret
aad
inc
push
lock
and
and
mov
push
in
pop
fldcw
aaa
in
xor
dec
fsubrp
das
jecxz
in
sbb
or
or
test
dec
pop
or
add
and
mov
sbb
pop
mov
enter
cltd
out
loope
ja
xorb
das
mov
mov
cli
mov
decb
fiadds
mov
int
jno
out
dec
adc
xchg
pop
push
outsb
mov
adc
ja
adc
ret
data16
fcom
inc
mov
cli
dec
xlat
stos
dec
inc
out
dec
and
push
mov
les
popf
mov
add
shll
mov
movb
xchg
jg
mov
jnp
mov
mov
dec
push
ret
xchg
fldl
out
bound
or
cmp
pusha
daa
mov
nop
nop
push
cmpb
leave
js
xor
pop
and
sub
and
aam
mov
cmp
in
dec
loopne
pushf
mov
jp
push
imulb
lahf
and
mov
adc
inc
fwait
sbb
push
ss
jnp
daa
mov
ss
xchg
out
mov
out
inc
rorl
mov
mov
xor
out
jne
imul
bswap
mov
in
cmp
into
sahf
mov
out
mov
pop
mov
lea
and
mov
iret
adc
sahf
std
sub
mov
sbb
in
or
out
mov
mov
jg
inc
push
pop
out
push
or
and
or
sub
sahf
pushf
fwait
push
jnp
vpaddb
mov
jnp
fistps
ret
jne
inc
lds
xchg
es
mov
adc
sbb
sarb
mov
shlb
xor
xchg
mov
and
and
inc
es
pop
inc
mov
cmpsb
cmp
scas
cwtl
pop
xchg
sbb
lea
sti
and
jl
inc
mov
popf
fisttpll
pop
shll
je
or
mov
addr16
cmp
jle
popf
push
test
mov
xor
inc
imul
shlb
pop
pusha
adc
sahf
mov
sub
lret
dec
fnstsw
mov
or
loope
psubw
out
xor
pop
xor
movsl
adc
mov
daa
mov
stos
push
mov
xlat
sbb
shlb
push
outsb
sbb
iret
cmp
xor
sub
leave
stos
in
pop
mov
push
jae
call
loope
inc
and
je
mov
cmpl
xchg
popf
push
xor
stc
sbb
cwtl
push
scas
aad
popf
inc
xchg
push
push
mov
imul
aas
and
adc
mov
jmp
cmpsl
fs
int3
ret
mov
les
ret
xchg
loop
xorb
pop
jbe
or
mov
or
daa
dec
pop
cltd
ljmp
push
fwait
xor
and
inc
push
add
js
xorb
mov
sbb
pop
add
and
movsb
out
clc
stc
shrb
fnstenv
xchg
mov
ret
cmp
dec
mulb
pop
mov
stos
shl
gs
out
xchg
lods
jl
sub
push
pop
daa
in
push
xor
test
push
mov
scas
sbbb
imul
sarb
clc
xor
push
stos
cld
popw
test
cmp
clc
jae
xor
xor
scas
repz
in
clc
repz
jno
or
loopne
xchg
imul
dec
or
outsb
xchg
sub
jmp
cmp
call
and
adc
icebp
mov
pop
pop
sarb
pop
cwtl
les
push
or
push
adc
mov
fdivr
filds
jbe
outsb
sti
or
dec
out
adc
cmc
xchg
jge
pop
imul
jge
sahf
stc
inc
jb
mov
test
int
dec
aas
mov
push
clc
cltd
in
adc
push
bound
mov
ret
gs
stos
movd
out
lds
out
mov
adc
ja
push
or
int3
xchg
and
insb
cli
stos
addr16
cmp
and
cmc
hlt
adc
repz
arpl
mov
loop
jb
loopne
inc
pop
frstor
push
mov
imul
mov
loop
xchg
idivb
lock
xor
or
push
int3
mov
xchg
jo
aad
mov
sbb
insb
lret
xchg
fidivl
std
movlps
js
ss
xor
or
or
fisubl
scas
sbb
das
imul
mov
push
pop
scas
jns
fwait
mov
push
loop
mov
addl
jmp
jnp
add
in
xchg
jb
inc
sub
daa
mov
shl
out
loopne
cmp
sbb
js
cltd
or
or
loope
xor
aas
or
std
inc
pop
xchg
mov
push
jecxz
aas
sub
outsb
mov
in
outsb
xor
jne
stos
pop
rcll
jne
push
cmp
cli
ret
popa
out
inc
imul
mov
jmp
retw
xor
push
aad
sti
adc
lret
adc
ja
mov
push
xchg
pop
add
inc
and
popa
xchg
shlb
and
add
mov
lahf
push
aam
mov
js
test
jmp
lea
push
adc
fcmovbe
jns
inc
call
iret
pop
mov
loopne
mov
daa
shl
daa
inc
dec
sbb
push
ror
lcall
bound
stos
sbb
xor
cld
cmp
pop
or
imul
and
xchg
test
cmp
loope
cmp
aaa
add
inc
lcall
push
movb
sbb
call
fidivrs
mov
arpl
js
cwtl
test
ror
dec
sbb
fcomps
cmpsb
fs
jnp
arpl
sahf
jle
pop
cmp
add
stos
adc
inc
xchg
iret
int3
das
mov
outsb
sti
in
pop
adc
test
fwait
dec
insb
imul
fsubrl
pop
add
pop
mov
dec
pop
in
ds
lret
aam
cmp
fucom
jp
cli
aad
jge
cmpsl
sbb
mov
addr16
int3
and
movsb
jne
pop
ficomps
mov
outsl
push
inc
test
sub
pop
mov
cmpsl
adc
leave
leave
int
stc
fldl2e
ss
mov
stos
jne
mov
xchg
imull
jne
mov
sub
xchg
psrlw
dec
stc
inc
arpl
rcl
xchg
inc
cmp
je
popa
lds
loope
in
dec
or
mov
xchg
inc
aaa
and
mov
mov
push
add
fbstp
cmpb
mov
jecxz
mov
xchg
cmp
decb
mov
pop
push
push
push
outsl
loop
dec
xlat
std
je
sbb
mov
dec
and
mov
cmp
cmpsb
sbb
pop
mov
inc
xchg
sub
daa
and
or
sbb
sbb
cmp
pop
mov
push
jmp
sahf
xchg
fildl
mov
lods
out
jnp
xor
push
push
shll
fstps
jnp
sti
decl
or
inc
cmpsb
lods
pop
mov
fs
sti
test
lea
or
call
addb
popa
insl
jmp
lods
inc
pop
rol
inc
hlt
or
daa
jo
or
fiadds
dec
push
and
shrl
loopne
push
dec
aam
xor
cmp
sub
test
daa
inc
in
cmc
daa
outsl
push
mov
inc
fwait
cmp
sub
testl
ljmp
movsb
adc
pop
lods
mov
iret
push
rclb
in
arpl
das
cli
das
fs
in
mov
sub
stos
out
mov
mov
add
es
faddl
lret
in
add
jbe
or
push
pop
popf
pop
and
ret
lcall
cmp
adc
or
dec
xchg
imul
cmp
nop
adc
les
push
or
cmp
imul
insl
jle
push
mov
jno
add
xchg
repz
test
test
rcl
xchg
xchg
mov
push
cmp
pusha
aaa
test
enter
rcrl
sbb
sub
sub
mov
lds
sub
mov
clc
add
outsb
inc
and
cmp
mov
pop
push
pop
notb
pop
sub
out
mov
dec
lahf
mov
xor
ja
jb
cs
xchg
popf
imul
js
push
lret
push
mov
rcrl
inc
fsubl
add
lods
std
mov
mov
cmpsb
pop
mov
hlt
mul
mov
mov
push
les
mov
push
jbe
inc
gs
jp
jecxz
xor
clc
insl
ja
je
pushf
insb
adc
pop
das
mov
mov
dec
imul
sbbb
movsb
lcall
shll
push
push
cmp
push
iret
lret
in
mov
ret
xor
inc
pushf
pop
adc
or
cmp
cmp
lret
loope
mov
mov
mov
fisttps
loopne
push
add
daa
idivl
xchg
and
push
mov
or
inc
andb
popf
ret
lahf
xlat
fsubl
movsb
xor
or
outsl
inc
jp
pop
add
push
loopne
sub
aad
js
ja
movsb
xchg
es
fsts
add
mov
shl
call
das
adc
mov
inc
rorl
xor
add
scas
dec
in
imul
cltd
rcrb
mov
or
je
mov
mov
lds
ja
prefetchwt1
push
das
repz
popa
pop
pop
mov
popa
cs
fnstcw
enter
aam
pop
mov
and
mov
mov
test
mov
mov
scas
das
or
scas
cmp
scas
ds
mov
jb
gs
push
mov
adc
and
outsb
sbb
test
xchg
lea
and
fldcw
mov
repnz
sbb
push
sahf
cmp
mov
add
cld
xor
ljmp
inc
aad
adc
sbb
or
pop
dec
fs
push
arpl
cmp
mov
scas
out
clc
mov
dec
out
cmp
imul
aaa
mov
or
mov
dec
negl
popa
rcrb
mov
pushf
fs
movsb
pop
xchg
bound
add
cltd
cs
sbb
or
push
jl
iret
mov
mov
mov
and
cmpsb
cmc
or
adc
movsl
out
or
es
dec
jecxz
cmp
inc
dec
add
adc
arpl
mov
sarl
loope
add
lock
xchg
lock
out
add
cmp
in
shrb
ja
xor
cmp
lea
xor
push
lods
cmp
les
dec
jbe
rcll
jae
mov
jge
push
add
and
mov
shrb
ljmp
sub
cwtl
sbb
jne
inc
or
adc
sahf
aas
rsm
jbe
loopne
daa
mov
and
mov
call
jmp
pop
cwtl
cmp
out
xchg
outsb
lods
pop
nop
pop
popf
lret
and
shll
or
test
xchg
push
out
mov
sub
add
mov
int3
push
or
js
lcall
sbb
insl
xchg
imul
outsb
push
adc
jns
outsb
data16
mov
rclb
xchg
in
sti
shll
push
andb
out
push
mov
add
cs
cmp
sub
subb
nop
pop
or
add
outsb
pusha
dec
xchg
lea
adc
mov
inc
add
scas
movsl
push
out
mov
mov
repnz
lea
sub
lds
in
xchg
xchg
xorb
cmp
hlt
movl
fistps
sbbl
ja
adc
fisttps
sbb
sbb
pop
xor
mov
jg
pop
movsl
mov
and
int3
mov
fcomip
mov
mov
out
mov
xor
jecxz
inc
ds
sub
pop
popf
fwait
stc
data16
repnz
mov
in
repz
inc
mov
cmp
push
inc
fwait
adc
push
adc
in
sbb
rolb
cwtl
inc
and
into
frstor
add
cmc
inc
sub
cwtl
push
sti
scas
je
pop
xchg
jb
add
push
rorb
popa
into
inc
lock
sub
xor
xor
push
es
pop
cmpl
inc
mov
inc
cmp
shlb
enter
test
mov
orb
hlt
add
and
loop
insb
and
or
sub
notb
jmp
rol
stos
pop
xor
pushf
sub
cltd
scas
arpl
lods
mov
pop
mov
or
inc
ficompl
jge
insb
popa
pop
ja
cltd
icebp
loop
leave
or
add
jno
fiadds
xchg
adc
cmpsl
mov
mov
sarl
add
test
xchg
insl
or
mov
sbb
adc
mov
lret
movsl
in
adcl
call
inc
inc
xor
cld
cmpsl
out
call
call
pop
or
stos
in
gs
adc
sti
dec
fwait
lahf
jb
xchg
mov
testb
test
fwait
mov
cli
xor
repnz
adc
mov
scas
insb
or
sahf
lods
mov
cmpsb
xchg
jecxz
sub
loope
lods
out
adc
lahf
jae
jl
xchg
int3
clc
mov
dec
and
jns
je
lret
inc
lret
lds
dec
je
std
sbb
and
inc
pop
pop
xchg
outsb
sbb
mov
mov
addr16
adc
or
loope
loopne
pop
test
orl
sub
mov
xchg
stc
fists
lea
test
adc
mov
pop
lods
inc
repz
je
sbb
arpl
cmp
movsb
in
fidivl
pop
jmp
leave
and
and
mov
jae
ret
loope
test
ds
xchg
out
xchg
test
gs
cltd
lds
or
ja
jge
divl
andb
fildll
pushaw
js
out
mov
inc
call
jae
ja
clc
mov
push
fistpl
fnsave
hlt
xchg
ss
push
add
sbb
push
aad
xor
lods
sti
push
movsb
push
sub
loope
dec
movsb
jns
popa
cld
dec
inc
or
in
sarb
cltd
pop
rcrl
rcl
pushf
pop
bound
test
pop
notb
and
sahf
int3
repz
mov
pop
aam
sbb
lds
adc
insl
push
ja
in
jns
rcrb
and
mov
call
test
insl
ror
fadd
dec
inc
enter
mov
sbb
stc
fldt
sarb
fs
pop
ss
pop
inc
int
repnz
mov
jecxz
stos
cld
shll
repz
push
cmc
je
ljmp
test
mov
xchg
in
test
push
scas
arpl
popa
push
push
ljmp
dec
orb
or
loopne
fstp
mov
mov
sub
cmp
xor
jmp
cwtl
stos
xor
rorl
insb
sbb
xchg
xchg
test
mov
add
loopne
mov
xor
popa
adc
rolb
sahf
adc
or
jo
push
lret
sahf
mov
sbb
jns
push
adc
stc
repnz
popa
jbe
loop
add
jo
icebp
xchg
inc
jno
test
jno
sub
shll
dec
mov
pop
push
pop
xchg
mov
xchg
out
popa
and
cltd
jecxz
sub
out
mov
pop
leave
push
cmc
pop
add
jle
fiaddl
aaa
cmc
push
add
fs
scas
out
dec
scas
pop
fcmovbe
add
adc
mov
jle
jns
sub
push
push
notb
popf
sbbl
rcrl
jnp
inc
in
fmuls
add
adc
scas
insb
mov
sub
and
sbb
leave
les
pop
mov
xchg
test
mov
out
add
in
stos
mov
icebp
leave
inc
fcmovu
dec
inc
lods
xlat
test
lahf
iret
adc
orl
je
int
add
cmp
mov
andl
inc
test
int3
fisttpll
push
pop
insl
dec
rcl
scas
xchg
mov
int3
fiadds
cmp
cmpsb
mov
mov
jae
test
fwait
adc
out
mov
fbld
lea
push
add
pop
push
test
adc
enter
xor
and
push
outsb
test
push
mov
lock
and
rclb
and
ret
or
mov
call
push
shrb
mov
scas
xchg
cmp
dec
addl
pop
or
repnz
push
adc
adc
sub
xor
das
xchg
xor
fidivs
loope
jge
data16
ret
enter
out
jmp
sub
mov
mov
nop
adcl
jae
push
cs
mov
mov
dec
dec
lods
fidivl
out
adc
push
daa
lods
in
dec
or
push
add
repz
pop
xlat
xchg
pop
mov
sub
pusha
jg
clc
mov
icebp
xor
inc
push
mov
std
jp
call
or
leave
mov
push
mov
adc
fisttps
xchg
nop
mov
push
into
aas
out
pop
push
outsb
lret
cmpsl
icebp
icebp
inc
inc
in
and
mov
js
xchg
xlat
imulb
cld
std
adc
loopne
cmp
mov
cmpl
mov
mov
enter
ss
push
out
outsl
push
cld
aad
adcl
add
add
insb
push
mov
xchg
pop
ljmp
cmp
dec
pop
mov
lcall
push
subl
ret
mov
adcb
lcall
div
je
sbb
mov
daa
add
sbb
movsb
std
xchg
icebp
mov
jbe
je
sbb
jg
cmp
mov
ror
jnp
jno,pt
cli
xor
mov
aam
test
xor
scas
inc
sbb
movsl
fwait
addr16
inc
test
out
or
test
xchg
push
std
dec
lock
sbb
movsb
aaa
mov
loopne
jae
inc
sub
mov
stc
loope
pop
jnp
cli
xchg
hlt
mov
pop
xchg
iret
push
mov
or
inc
cmp
lahf
lds
adc
adc
je
xchg
aas
inc
mov
out
adc
test
jnp
sub
das
mov
cmc
prefetcht0
pop
sbb
mov
push
pop
out
cmpsl
into
cli
sti
pusha
faddl
mov
or
int3
test
int
bound
in
or
fnstsw
mov
inc
xor
shl
mov
mov
pop
ja
jb
ficomps
into
pop
cmpsb
push
cmpsb
mov
lea
mov
in
out
inc
loope
in
jl
mov
adc
mov
jmp
ficoml
push
loopne
xchg
lcall
adc
xor
faddp
in
mov
int3
pmaxsw
xor
xor
mov
fsincos
pop
cmp
call
fucom
jno
rep
cmc
imul
fcoml
mov
cs
lret
mov
rcrb
les
jg
js
out
test
sub
jb
mov
popf
enter
test
lcall
es
push
or
push
sub
inc
mov
into
jp
movsb
inc
mov
or
negl
adc
pop
add
test
fldenv
mov
or
push
ret
mov
xchg
pop
and
mov
mov
and
push
sahf
dec
into
adcl
jnp
mov
sub
mov
aad
sti
xor
loopne
repnz
test
stos
aam
scas
cmp
cmp
int3
xchg
sbb
xor
lahf
pop
inc
jmp
push
cmp
loopne
mov
movsb
mov
mov
push
out
out
cmp
pushf
iret
daa
xor
gs
or
jno
xchg
sahf
sub
xor
rolb
ja
scas
loopne
jge
sbb
in
sti
inc
pusha
adc
mov
rol
mov
popa
and
and
jg
xor
or
mov
ror
jge
out
loopne
addr16
xchg
gs
imul
xor
lods
inc
mov
pop
sbb
insb
mov
xor
mov
dec
divl
inc
and
inc
imulb
aaa
or
mov
imul
sti
push
inc
add
sbb
das
ficomps
adc
jo
jecxz
outsl
fs
outsl
sbb
mov
imul
inc
fmull
enter
cli
fisubl
aam
loopne
and
sbb
out
dec
push
sbb
out
pop
movsb
xchg
jne
sbb
sbb
pushf
push
and
repnz
jge
jecxz
pop
dec
cmp
jnp
ret
sbb
cmpsl
cmpsl
mov
or
push
lret
mov
pushl
adc
lock
xchg
fwait
pop
icebp
rorl
mov
imul
andb
pop
jno
pop
nop
cmpsb
mov
adc
fidivs
lock
cmpb
jl
leave
pop
mov
and
xchg
in
scas
pop
out
insb
xchg
repnz
jp
scas
insl
outsb
enter
movsl
imul
jno
test
inc
dec
add
mov
rclb
jmp
cwtl
js
push
jbe
xlat
hlt
xor
dec
sub
pop
dec
jns
pop
dec
pop
loop
es
in
frstor
jmp
gs
daa
xchg
sahf
lods
int
test
dec
fldcw
shl
mov
pop
cwtl
xchg
cmc
stos
insb
hlt
jecxz
inc
add
int
push
mov
lods
push
adc
inc
jno
push
and
push
std
pop
imul
jp
sbb
cmp
fdivp
dec
sarl
subb
fiadds
out
in
orps
mov
scas
sub
fldl
out
iret
pop
push
stos
test
ja
pop
lahf
mov
out
scas
and
in
lock
ror
outsb
inc
inc
pop
lds
subb
mov
mov
bound
rolb
push
out
mov
sub
fs
inc
mov
stc
or
icebp
inc
aaa
lret
divb
jl
ja
bound
mov
imul
enter
incl
cmp
xlat
push
sti
in
arpl
pusha
rcl
mov
push
sbb
movsl
in
cmp
fdivr
push
mov
lret
loope
or
push
leave
fcmove
and
dec
ret
or
cli
xchg
pop
cs
xorb
cld
lret
roll
stos
mov
fstl
stc
pop
ss
push
sbb
push
hlt
xchg
ja
outsb
jle
stc
sbb
outsb
test
stc
add
adc
loop
int3
loope
xchg
in
nop
loope
inc
mov
call
fdivs
sbb
mov
push
sub
cmpsb
lods
idivl
add
and
sbb
rclb
sbb
mov
pop
mov
dec
push
test
push
bound
sub
add
ret
add
mov
fidivl
mov
xchg
fdivrl
fstpt
std
mov
out
jp
add
cmpsb
and
out
dec
outsb
icebp
fcoml
rcrb
stc
inc
xlat
xchg
or
testb
movsl
mulb
add
mov
data16
bnd
xchg
cwtl
popf
bound
lcall
stos
sub
or
xchg
shr
push
in
add
mov
adc
pushf
push
jge
push
jle
mov
stc
mov
jg
fnstenv
cmpsl
pushf
cwtl
pop
mov
cwtl
sub
or
push
ret
mov
jmp
mov
clc
hlt
rorb
xor
cltd
hlt
pop
xor
das
wbinvd
stc
adc
jg
cmp
mov
pop
insl
incb
lcall
xor
out
data16
and
jns
rcll
out
nop
inc
pop
js
jecxz
adc
xor
sub
int
and
push
lds
mov
lret
inc
ljmp
cltd
lret
mov
out
in
pop
pop
adc
addr16
mov
jp
imull
arpl
mulb
loopne
loope
out
adc
mov
add
test
jl
or
testl
shrl
inc
jmp
cmpsl
fcos
mov
fs
stc
and
addl
subb
push
mov
jl
mov
mov
cmpsl
in
int
dec
sub
and
push
push
adc
int3
test
popa
nop
subb
rorb
dec
shrl
leave
sar
ljmp
stc
lret
mov
and
cs
pop
imulb
jnp
jle
sub
mov
push
add
pop
mov
mov
in
fwait
incb
xchg
mov
xor
mov
fcomps
xchg
in
out
dec
mov
lods
sub
mov
mov
xchg
mov
mov
mov
xchg
call
into
scas
pop
lret
dec
test
xor
jno
or
push
mull
popa
sti
xor
ffreep
inc
cmp
mov
dec
mov
jg
and
sahf
mov
sub
cmpsl
jo
lea
mov
fimuls
dec
clc
push
or
pop
nop
subb
in
mov
sbb
aaa
pop
dec
or
mov
movsl
mov
inc
fisubrl
cmpb
push
daa
adc
dec
divl
ljmp
mov
int3
dec
mov
movsl
subl
lods
xorl
sbb
cmp
mov
push
adc
mov
rorl
inc
xchg
adc
outsl
cs
ss
icebp
out
jge
sti
or
pushf
fnsave
pop
movsl
imul
popf
cmp
filds
mov
pop
mov
sbb
mov
xchg
dec
and
cmp
sti
enter
jge
sbb
mov
dec
mov
dec
fcmovnu
cltd
mov
sti
jne
jb
xor
cmp
dec
jb
cmp
loopne
sub
inc
pop
xchg
xchg
sahf
leave
mov
jne
jg
or
or
dec
cmp
mov
adcb
dec
mov
mov
cld
mov
xchg
shlb
pop
xor
jge
sub
shll
or
dec
in
push
mov
lock
neg
mov
pop
in
adc
pop
or
test
add
xchg
pop
xor
jecxz
mov
mov
pop
subl
push
jge
popf
adc
xor
in
js
sahf
sub
xchg
pop
out
int
or
call
ret
xor
mov
ds
mov
gs
sbbb
or
loopne
adc
das
jne
imul
or
jg
rol
stc
push
scas
dec
rorb
je
into
xor
xchg
popf
push
dec
stos
insb
push
mov
daa
pop
popa
add
pop
jbe
in
xor
out
test
shlb
shll
mov
jge
sbb
xor
imull
fs
cmpl
ret
and
mov
loope
pop
lret
adc
hlt
mov
add
fs
insl
loop
jl
aaa
jns
mov
fidivrl
jg
cmp
push
push
mov
mov
cmpsb
addb
and
push
jae
pop
lock
push
pause
hlt
dec
jp
jmp
lods
xor
in
xor
add
stos
pop
ds
stos
or
lret
mov
and
jno
add
bound
adc
in
rol
or
jmp
mov
mov
in
push
jb
stc
jb
fadds
sub
sbb
out
dec
mov
lock
fldcw
push
dec
xchg
cs
pop
or
std
mov
sub
mov
stos
push
cs
dec
insl
jmp
stc
das
pop
push
xchg
xor
lock
mov
jecxz
xor
out
lahf
arpl
adc
mov
jno
jnp
xor
mov
ret
lock
jle
shr
in
loope
add
in
stos
lahf
push
adc
jns
add
dec
jmp
mov
cmp
out
sarb
les
push
pop
repz
aaa
lods
minps
adc
test
ficoml
cmp
in
das
mov
dec
fldt
adc
das
lods
jbe
sub
pop
fbstp
mov
xchg
sbb
push
inc
jb
mov
jp
mov
in
sub
pop
leave
out
pop
mov
gs
fsubl
mov
gs
fstps
sub
cmpsl
test
jbe
pop
call
ss
push
outsl
or
movsb
pop
testb
xor
add
lret
and
add
fwait
sbb
inc
sti
mov
in
mov
sbb
stos
dec
fisttpll
scas
movsl
adc
xor
add
ljmp
xchg
pop
xor
xor
mov
mov
mov
lahf
mov
jle
daa
aaa
lods
ss
lea
xchg
sub
sbb
movsl
or
aas
sbb
pop
data16
push
lock
mov
dec
cli
lods
xchg
ret
pop
xor
mov
mov
movsl
pop
push
push
addr16
pop
pop
in
fnsave
loopne
js
leave
dec
or
std
leave
sbb
xor
cld
xor
ret
pop
icebp
add
inc
lahf
push
adcl
lret
pushf
mov
shl
in
repnz
test
lcall
gs
sbb
push
sahf
sbb
pop
jo
repz
jae
pop
scas
mov
mov
testl
insl
sub
arpl
dec
js
adc
fsts
lods
mov
cmpsl
lods
out
sbb
pop
xchg
push
lock
and
push
mov
jnp
jae
testb
addl
popa
add
into
sbb
inc
lds
inc
mov
or
arpl
test
mov
jecxz
std
cmpsl
xor
pop
test
adc
jmp
call
inc
xchg
nop
pop
ds
sbb
ret
add
aad
mov
inc
ds
cltd
mov
pop
cmp
test
mov
inc
int
stos
loopne
mov
ljmp
pop
pushf
and
int
dec
inc
sahf
add
out
add
les
adc
stos
rcl
xor
loop
dec
in
dec
pop
adc
xchg
lock
sbb
gs
es
xchg
lds
dec
xchg
std
lahf
sub
mov
in
lahf
pushf
mov
add
inc
xchg
fsub
add
mov
mov
rcr
outsl
imul
sub
pop
shrb
pop
pushf
push
out
daa
aam
push
inc
push
dec
push
xor
push
inc
dec
inc
insb
cmp
ds
and
mov
or
push
xor
push
xlat
movsb
push
push
push
mov
bound
out
cmc
push
cmpsl
pop
subb
arpl
stos
idivb
xchg
aam
pop
xor
xlat
pushf
sub
inc
int3
sub
repz
mov
push
loope
jbe
mov
ss
arpl
lods
adc
mov
imul
imul
rorl
iret
aaa
lods
inc
mov
push
mov
sahf
js
xchg
rcl
mov
out
pop
fsubs
push
xchg
mov
mov
and
pop
into
mov
mov
jge
test
lretw
es
cli
sub
sbb
into
fidivl
jge
mov
popf
cli
pop
lea
pop
leave
push
push
lods
sub
rcrb
ss
ss
mov
loop
cmpsb
sbb
sahf
xchg
shufps
repnz
fisttpl
mov
ds
add
ljmp
mov
mov
lret
pop
inc
mov
adc
int3
std
fimull
pop
pop
and
or
mov
xchg
outsl
fwait
mov
aas
out
pop
stc
push
xchg
xlat
mov
add
inc
ficomps
push
mov
xor
popa
pop
push
mov
pop
mov
push
ja
and
sti
les
je
imull
lret
ds
mov
cli
sub
xchg
push
scas
scas
jmp
sub
dec
mov
mov
and
int
xor
mov
icebp
arpl
imul
cmp
iret
sub
rcrb
sbb
inc
push
or
push
mov
outsb
mov
call
fcmovb
jne
jp
mov
xchg
mov
dec
sub
outsb
mov
mov
jge
loopne
and
pusha
mov
mov
mov
sbbl
cmp
fidivl
and
fisubl
push
fisubs
lock
and
and
addb
adc
inc
dec
adc
repnz
ret
mov
leave
lds
push
ss
push
push
sbb
adc
ljmp
out
popa
clc
pop
sub
into
pop
sarl
push
subb
sahf
inc
lods
call
or
add
xchg
xorb
popa
mov
imul
cltd
bound
frstor
aad
nop
cwtl
nop
or
imul
and
test
pop
mov
js
or
repz
adc
sbb
jns
jns
sub
outsb
shll
and
and
lahf
std
push
loopne
mov
lahf
adc
mov
aam
fisubrs
fsts
aaa
iret
jg
js
cli
inc
adc
jb
lcall
sub
dec
push
inc
push
clc
in
shl
aad
and
outsb
lret
iret
jbe
xor
dec
sbb
rclb
ja
sub
idivb
ror
mov
xor
inc
repz
sbb
push
push
add
inc
sahf
push
inc
jge
lods
pop
push
mov
sub
les
lret
lods
dec
andb
add
add
jbe
push
and
jle
sbb
test
jp
or
mov
push
push
mov
push
xchg
jo
mov
out
rcll
pop
and
sub
xchg
xchg
adc
loope
mov
mov
mov
fstpt
sub
movsb
push
jb
sahf
je
mov
lcall
push
lret
adc
sbb
pusha
aam
cltd
sbb
or
lods
mov
out
inc
cltd
jb
je
ds
outsl
sbb
jg
inc
mov
fwait
stc
pop
dec
aad
js
lods
leave
lods
xor
sbb
aas
es
dec
mov
leave
sub
pop
cld
repnz
inc
in
shrl
lret
cwtl
jecxz
iret
popa
mov
repz
mov
add
jbe
and
jo
adc
inc
push
adc
insl
adc
pop
in
inc
or
imul
aam
int3
aaa
jle
pop
insl
or
stos
push
div
inc
adc
sbb
lea
call
out
jbe
push
or
cmp
and
icebp
int
jge
cmp
sub
add
mov
add
xchg
subl
andb
enter
xchg
add
and
ficoml
mov
xor
test
sbb
and
cmpsb
or
lock
mov
test
stc
les
push
ds
xor
ljmp
pop
xor
mov
xor
rcrb
jns
adc
xchg
aas
std
xchg
int
movsb
mov
xchg
xchg
cltd
sub
adc
cld
inc
adc
pop
sarl
fdivrl
adc
xchg
cld
sbb
or
test
push
out
inc
push
cwtl
push
jecxz
sahf
inc
lds
rep
lret
adc
dec
ja
andb
subl
stc
lahf
pop
movsb
loope
jno
lock
mov
packsswb
mov
sbb
mov
clc
dec
int
mov
mov
nop
lods
adc
inc
pop
fs
push
fadd
pop
ljmp
cmpsb
movsb
xor
bswap
out
pop
jp
push
push
xor
xor
out
cwtl
add
imul
pop
xor
dec
inc
jae
xchg
pop
fisubl
mov
dec
outsb
test
xor
movsb
leavew
inc
sub
ror
les
stos
stos
jle
ds
test
push
xchg
xchg
nop
inc
or
ss
xor
xor
jo
les
xchg
mov
jne
inc
jecxz
sub
ljmp
aam
jl
inc
cmp
ret
lfs
xlat
cmp
aas
adc
jg
xchg
cmp
in
fists
lock
jle
fld
out
stos
arpl
adc
ret
or
aas
push
idivl
imul
xchg
xchg
sub
push
jle
mov
cmp
cmp
imulb
lret
cld
push
sbb
mov
inc
push
stos
cmpl
int3
lahf
adcb
daa
and
adc
out
aad
popa
add
and
loop
and
push
lcall
jge
sub
leave
mov
push
push
inc
xor
push
xchg
mov
addl
sub
icebp
fwait
iret
xchg
loopne
lea
sub
mov
enter
aas
mov
sbb
xchg
xchg
lret
cmpl
adc
cli
sbb
mov
test
jno
adc
sub
jg
fisubs
enter
jmp
jecxz
call
sub
cmpsb
jo
sub
call
push
cmp
ss
mov
ss
imul
sub
test
or
andl
fimuls
push
iret
and
hlt
mov
das
into
jl
cmp
mov
xchg
mov
in
lret
lods
lea
xchg
sub
pop
pop
add
icebp
into
cmpsl
jp
mov
xlat
inc
dec
popf
dec
push
add
dec
push
cltd
das
push
shrb
out
ss
scas
enter
xchg
jo
lcall
xchg
mov
loop
xlat
addr16
jmp
push
jns
fsts
lods
and
fnsave
lahf
adc
jb
inc
jl
jo
jmp
dec
cmpl
idivb
movsb
inc
mov
arpl
xchg
mov
mov
in
mov
xchg
lock
inc
mov
movsb
mov
cmpsl
insl
xchg
mov
scas
pop
sti
loopne
adc
push
je
mov
mov
inc
xchg
or
pop
push
dec
or
xorb
imul
cs
jb
xor
imul
insb
lock
mov
xchg
into
sub
out
jae
dec
and
movsl
mov
jo
or
lahf
push
cmp
mov
add
add
aaa
imull
das
repnz
pop
mov
push
dec
mov
movsl
pop
nop
addb
out
adc
jmp
icebp
inc
scas
dec
xor
int3
outsl
dec
mov
sbb
sbb
mov
mov
pop
xlat
mov
loop
fsubl
push
lock
sbb
add
and
ret
mov
jne
sbb
push
add
mov
in
lret
adc
or
inc
stos
movsb
adc
shll
rcr
inc
dec
es
cli
dec
in
es
sbb
mov
in
lahf
dec
xchg
das
sub
fsubl
sbb
data16
xor
sbb
out
das
inc
mov
jno
aam
sbb
clc
cld
adc
jne
push
imul
jmp
ret
xor
int3
mov
lret
divb
add
lcall
mov
jle
movl
push
stos
subl
cmp
loopne
cli
out
fstl
add
int
lods
add
sbb
jg
ret
xchg
les
shrl
daa
cmp
lret
test
shr
leave
xchg
inc
mov
fnstenv
lods
addb
hlt
inc
mov
es
loop
cmp
pop
ret
out
add
rolb
add
cltd
jbe
or
inc
out
leave
pop
out
push
pop
out
je
pop
js
mov
inc
mov
repnz
push
pop
and
mov
xchg
cli
out
add
loop
sahf
nop
sub
ret
cmp
rcrl
ret
divl
adcl
jne
pop
andb
shl
inc
dec
lcall
sbbl
cmpsl
adc
adc
gs
enter
xchg
adc
arpl
aaa
enter
push
pop
dec
leave
dec
or
enter
mov
shll
cmp
xchg
sub
sbb
movsl
outsl
into
xor
shl
les
xor
and
or
xor
dec
pop
mov
fmulp
mov
leave
lock
jecxz
enter
fcoms
jmp
das
negb
mov
iret
fists
inc
adc
test
sbb
mov
sub
push
fildll
ljmp
xor
inc
outsb
aas
inc
outsb
and
sub
ljmp
dec
andl
movsl
jle
inc
out
in
jl
push
and
or
mov
inc
cltd
cmp
xor
pop
addr16
rorl
mov
xchg
lea
ret
pop
in
out
cwtl
mov
xchg
dec
jg
cwtl
sbb
pushf
lock
push
jns
mov
dec
aaa
pushf
cli
sbb
mov
push
sbb
stc
hlt
std
cmp
mov
js
incl
call
scas
jl
inc
mov
xchg
mov
jge
mov
sahf
mov
push
frstor
or
push
test
push
xchg
ss
mov
push
dec
dec
lods
and
xor
and
dec
inc
or
fmul
push
cmp
rcr
lahf
jns
movsl
inc
outsl
mov
inc
push
xor
adc
pushf
insb
outsl
jne
add
adc
lret
fnstenv
jmp
pop
xor
cld
push
push
or
cli
lds
int3
mov
aaa
loopne
sub
jmp
in
cmpsb
push
sbb
sti
fists
push
inc
andb
jecxz
shrl
xor
cli
clc
cmc
mov
mov
loopne
popa
arpl
adc
nop
jecxz
sbb
repz
mov
outsb
loopne
fs
pop
push
pop
sti
sub
jmp
pop
insl
jle
sbb
or
mov
adc
lods
push
psubd
dec
call
lret
test
dec
cmp
pusha
ret
in
xchg
add
cmpsb
out
sbb
leave
cmp
lock
or
xor
xchg
mov
or
xor
test
xchg
inc
pop
mov
iret
xor
inc
xchg
mov
insl
mov
popf
xchg
cmp
fldl
push
lret
or
arpl
pop
imul
lahf
push
dec
lahf
mov
lret
jae
stos
xchg
cmp
and
add
adc
cld
sub
gs
movsl
xorl
in
inc
jp
push
mov
add
jne
and
sub
repnz
jmp
aam
adc
pusha
out
pop
iret
jecxz
mov
ret
repnz
push
xor
pop
mov
test
and
xchg
and
addr16
fldcw
inc
pop
popa
xchg
je
fucomip
testl
mov
jno
movsl
scas
pushf
xchg
mov
jge
xor
jp
dec
scas
test
inc
lret
cmp
daa
bound
add
popa
shll
add
out
jae
cmp
in
jmp
and
sahf
faddp
jp
into
sahf
lahf
mov
rcll
dec
loopne
push
or
mov
insb
sbb
jge
inc
inc
pop
and
lret
add
jge
rcll
add
sub
mov
idivl
cmp
mov
mov
mov
fldt
fdiv
cmp
insb
xor
fstpl
adcl
mov
xchg
insl
imul
adc
scas
jb
aad
inc
into
stc
cmc
inc
sub
pop
xchg
mov
test
lds
sbb
outsl
xor
into
in
fucomip
jo
sahf
shlb
and
cs
aam
jle
mov
dec
inc
mov
xchg
int
mov
stc
ljmp
jle
dec
icebp
mov
ss
rcr
mov
lea
inc
lods
xchg
clc
test
pop
and
lahf
dec
dec
stos
jbe
mov
fwait
pop
test
into
push
lea
addr16
cmp
lock
insb
es
mov
inc
dec
fs
arpl
sub
test
sub
outsl
inc
push
mov
xchg
cmp
subl
lea
pop
xor
ret
je
cmp
pop
mov
test
ss
fcompl
imul
ret
xor
int
adc
cmp
push
dec
adc
cmpsb
cld
push
fnsave
cmpsl
fsub
ds
xor
sub
decl
jbe
inc
ljmp
inc
push
jno
add
mov
mov
inc
lds
add
adc
or
inc
xchg
mov
pop
xchg
push
push
add
loop
mov
or
andl
mov
lods
cltd
fmul
imulb
xlat
ds
gs
outsl
xor
xchg
xchg
loopne
jg
jae
popf
push
xchg
cmp
mov
iret
out
sub
inc
lods
dec
dec
gs
mov
mov
rolb
cmp
ds
sub
mov
fcmovnu
pop
and
mov
dec
xchg
repz
test
sub
lahf
leave
insb
push
or
jecxz
dec
mov
cmp
cmp
cmpsb
xor
mov
inc
adc
outsb
push
add
sbb
mov
cmp
cmp
lods
enter
mov
xchg
repnz
push
in
mov
fadds
icebp
loopne
stc
xchg
push
jle
scas
fcmovnb
push
pop
iret
xchg
dec
mov
sub
xchg
jle
xchg
movsl
hlt
push
stos
fcomps
adc
idivb
mov
scas
and
js
sbb
sbb
pusha
fcmovnb
inc
mov
popf
add
mov
push
sub
loope
hlt
loope
outsb
test
or
cwtl
push
jmp
daa
fdivrs
push
fstpl
xchg
shll
mov
push
cmp
cmp
test
jge
push
hlt
sbb
ret
repz
mov
cmc
shll
adc
outsl
outsl
mov
enter
fisubs
push
ret
sbb
movsb
cmp
sbb
mov
lock
jle
movsl
fwait
repz
cmp
lods
int3
in
xchg
fsubl
out
jp
cmpsl
mulb
push
shll
xor
pop
adc
xchg
clc
xchg
outsb
mov
mov
or
xchg
out
out
imul
push
test
aaa
stc
test
sub
push
jnp
mov
jecxz
pop
add
add
inc
lea
push
cwtl
xor
or
outsl
mov
adc
sub
push
dec
scas
xor
mov
idivl
rorl
rcrl
rorl
cld
jecxz
stc
mov
pop
mov
dec
xchg
cmp
cmp
enter
add
test
jg
sbb
xchg
pop
jl
int
adcl
data16
push
fimull
xchg
in
fimuls
cmp
cmc
int
or
fsubrs
push
cmp
inc
scas
int3
in
fdiv
inc
push
xor
mov
xchg
les
leave
pop
sbb
dec
sub
jb
out
popa
cmp
fsubrs
pop
bound
fwait
inc
daa
adc
mov
int
jns
push
imul
jb
lock
or
and
pop
xor
pop
push
mov
incl
pop
xchg
add
adc
frstor
in
in
add
push
adc
fistl
inc
pop
jns
js
lcall
jnp
pop
xor
testb
and
jle
pop
stc
mov
movsb
adc
xor
pop
loopne
lea
movsl
arpl
sarb
jne
orl
leave
inc
imul
fs
cmpsl
mov
mov
lds
inc
stos
adc
rcl
and
xchg
bound
jae
std
adc
ret
int3
movb
fcoml
add
xchg
push
or
ja
mov
fdivrp
int3
out
jle
fiadds
andl
insb
and
gs
sti
cmpsl
das
mov
pop
in
pop
inc
pushf
in
xor
lods
scas
inc
fcoms
push
push
xchg
rcll
pop
stos
sub
pop
daa
cmc
popf
or
test
push
and
mov
inc
ss
jmp
mov
jbe
pushf
lods
push
fs
mov
mov
iret
ds
mov
shrl
pop
pop
fs
inc
gs
push
and
xchg
cmpsl
fdivs
movsl
out
pushf
sub
call
call
mov
icebp
scas
xchg
cltd
sbb
lret
and
lds
cld
cmpsl
and
not
in
test
xchg
std
sbb
sub
sub
xor
mov
mov
aad
pop
shrl
out
cmp
jns
bound
adc
xchg
push
add
fldcw
unpckhps
or
out
bnd
ret
xchg
mov
dec
ja
mov
sub
shrb
mov
cmp
int3
pop
inc
inc
push
mov
mov
frstor
fidivl
rcrl
mov
or
mov
mov
sbb
ret
bound
mov
nop
and
scas
cmpsb
xor
xor
sub
mov
adc
mov
sbb
jmp
fldt
or
cld
dec
pop
cmp
push
sbb
push
loopne
mov
mov
jbe
adc
adc
jp
push
rolb
out
test
inc
jnp
push
int
push
les
or
push
aas
bound
movsb
mov
mov
dec
pop
pop
adc
sbb
dec
nop
imul
sbb
out
sub
je
lahf
push
mov
xchg
inc
dec
push
imul
mov
loop
in
insl
sub
bound
out
scas
mov
icebp
frstor
push
mov
inc
xchg
push
mov
les
dec
rcrl
xor
add
aam
add
xchg
ret
mov
shrb
fwait
outsb
add
mov
sbb
test
push
loopne
out
lds
adc
mov
inc
add
jo
or
sub
rcrb
out
sbb
cmp
bound
popf
idiv
mov
leave
mov
jo
pop
std
jge
cmpb
fstl
sbb
loope
cmp
std
fldl
nop
addr16
mov
ljmp
cwtl
xor
xor
sbb
insl
mov
mov
fsubrs
add
dec
sbb
in
jle
add
jnp
mov
mov
test
xor
cmpsw
addr16
inc
jbe
mov
sub
jecxz
lods
sbb
insb
test
mov
int3
ljmp
imul
fwait
pop
ds
ret
pushl
cmp
subb
sub
mov
push
mov
mov
push
push
subb
stc
lret
jmp
out
xlat
lods
stos
and
pop
je
and
inc
mov
rcr
out
add
adc
hlt
jno
mov
call
mov
inc
cld
xchg
xchg
push
inc
fsubl
ficompl
sbb
sbb
xor
es
push
addb
inc
or
adc
std
arpl
adc
pop
cmp
add
repnz
cmc
jecxz
push
aam
mov
mov
cltd
rdpmc
ljmp
cmp
sub
shll
cltd
inc
jle
or
pop
idivl
push
inc
les
js
adc
cld
push
xor
push
in
jno
mov
cmc
mov
mov
add
orl
lahf
inc
sbb
insl
mov
shrl
jae
jno
ret
movsl
addl
pop
push
jge
scas
jo
pushf
std
cmovns
pop
dec
xor
or
mov
mov
fs
dec
jl
lods
call
push
cld
jp
xchg
pop
loopne
mov
std
or
add
and
and
sub
mov
into
push
or
sti
out
mov
mov
arpl
or
and
pop
test
push
int
repz
sbb
and
push
jns
rcr
mov
mov
outsb
jb
pop
push
clc
jae
pop
push
imul
or
jns
adc
mov
mov
jle
or
js
int
xor
mov
xchg
cmp
xor
and
sbb
push
lahf
mov
sbb
mov
add
fdivrs
jae
in
fiaddl
pushf
xor
in
mov
and
test
add
das
mov
sub
clc
out
pop
dec
cmpsl
mov
xor
or
adc
mov
lods
xchg
in
insb
cwtl
or
push
inc
loopne
je
add
inc
clc
repz
ret
xor
cltd
js
sahf
es
mov
jb
js
out
sbb
jle
pop
add
ret
in
push
cwtl
or
lret
push
mov
dec
cmpsl
out
push
out
jnp
sbb
cmp
mov
daa
cltd
fiaddl
mov
or
xor
andl
mov
loope
dec
pop
stos
test
adc
and
loope
leave
fidivl
movsl
mov
pop
notb
imul
jl
cmpb
int3
push
cmpsb
cmpsb
addr16
dec
mov
ret
add
repnz
jecxz
out
xor
flds
jp
dec
pop
add
sbb
pop
mov
and
mov
sahf
mov
fcomp
and
xor
add
mov
mov
cltd
imul
lea
dec
jmp
inc
cmc
adc
popl
pop
lock
pop
mov
cmpsb
jb
sbb
lret
jne
xchg
cltd
std
gs
adc
cmp
push
subb
or
out
cmp
fidivrs
or
jno
cmp
lods
sbb
test
stos
mov
cmp
lea
push
pop
outsl
movsb
movsb
and
cmp
dec
sbb
and
mov
xchg
mov
jb
push
and
push
in
in
mov
aad
outsb
cmp
pushf
lret
fimuls
outsl
inc
nop
fildl
arpl
cmp
push
pop
mov
mov
gs
xchg
outsl
inc
cmp
test
je
xchg
push
pop
bswap
mov
int3
out
cltd
jg
jno
movsl
xor
push
repnz
mov
and
ret
test
ss
mov
fcmovnb
imul
mov
add
imul
fsubrs
pop
movsb
jg
and
push
stos
sub
ss
std
in
push
jb
dec
mov
movsb
dec
gs
mov
dec
cmpxchg
rclb
jg
cmp
lret
xchg
dec
test
ja
ja
gs
leave
jae
push
adc
add
jmp
add
icebp
mov
cmp
jl
or
or
pushf
lcall
xor
mov
xchg
or
mov
fcmovnb
add
dec
daa
iret
es
add
xor
and
jns
sub
pop
iret
inc
sub
push
addb
inc
movsl
daa
lock
xchg
jmp
outsb
inc
xchg
push
dec
inc
jmp
mov
or
int3
fs
lock
leave
adc
addb
xlat
dec
movsl
fisttps
stos
fists
sbb
mov
adc
outsb
xchg
imul
aad
bound
add
fwait
jno
mov
sub
loopne
cli
inc
in
imul
rol
fmuls
mov
mov
lahf
lea
inc
dec
adc
add
mulb
fdivs
daa
mov
mov
xchg
test
fs
iret
mov
aaa
leave
ret
jbe
or
cwtl
jmp
mov
lods
jbe
addr16
inc
sbb
add
cli
mov
ds
mov
scas
shrl
cmp
sub
jmp
inc
pop
jns
and
xor
jp
int
add
add
movl
out
cltd
es
pop
push
add
lods
adc
inc
sbb
mov
icebp
dec
leave
movsb
movsb
xor
repz
push
test
adc
and
xchg
xchg
inc
scas
sub
pop
imul
rcrl
jae
adc
sbb
jae
mov
xchg
subb
mov
push
inc
add
adc
sub
xchg
adc
sbb
jae
daa
xor
sbb
cld
popf
imul
mov
test
into
stc
fmul
rorb
shlb
lret
in
and
repz
imulb
xchg
mov
scas
sub
ffree
cmp
icebp
lahf
mov
jns
adc
fstpl
js
xchg
push
test
insb
and
push
pop
test
add
mov
jecxz
dec
shl
scas
sub
mov
out
ljmp
fnstcw
and
hlt
sub
gs
into
lcall
addb
adc
or
sbb
jl
mov
sub
sbb
test
mov
push
inc
outsl
add
cmpsb
jl
aas
sbb
aam
push
push
popf
in
cmpsl
pop
dec
je
push
imul
shll
sbb
popa
xchg
jg
or
gs
int3
push
sahf
xor
mov
jno
jnp
pusha
test
je
fwait
test
daa
lahf
sub
sub
sub
xchg
mov
rcll
xor
mov
scas
xchg
data16
pop
mov
adc
call
xchg
rolb
push
fiaddl
dec
inc
xchg
mov
cmp
add
mov
divb
cmpsl
sbb
add
jnp
xor
jecxz
aaa
cmp
jbe
xor
int
jge
icebp
in
sub
sbb
jne
add
push
in
roll
sahf
lcall
sub
ret
inc
mov
cmpsl
mov
fmull
lds
notb
dec
cltd
push
xchg
dec
into
pop
mov
xor
fidivrl
add
stos
sbb
maxps
push
pop
xor
std
insb
aad
and
fucomi
push
cmp
pop
sub
leave
jns
add
pusha
negb
xorl
mov
cmc
dec
push
xor
test
cmp
cmp
mov
lahf
pop
lea
sub
fcomip
push
lods
jb
fwait
add
repnz
mov
inc
das
lods
or
mov
shr
mov
data16
outsb
aaa
jl
lds
jge
xchg
nop
mov
pushf
fldcw
sub
cmp
mov
push
pop
or
pusha
int3
dec
neg
xchg
pop
inc
mov
inc
pop
andl
sub
push
mov
jl
out
cmp
push
int3
addb
push
lods
adc
iret
mov
leave
js
xchg
addr16
xchg
aam
jnp
loopne
subl
roll
adc
pop
orl
mov
popf
lret
jl
dec
sbbb
xchg
lret
cli
ljmp
push
mov
sbb
pop
adc
sti
pop
mov
or
out
out
rcrb
insb
cmp
add
int3
sarl
adc
jbe
cmp
call
rcrl
xor
jae
std
aad
pop
in
dec
arpl
lret
scas
lds
inc
fsts
and
insl
xchg
cltd
and
dec
or
add
push
and
movq
push
push
and
jns
add
xchg
cmp
xor
in
sbbl
push
add
ja
stos
movb
dec
push
and
jl
adc
push
or
mov
sbbl
add
aam
dec
dec
jecxz
push
shll
test
lcall
xor
outsb
testb
clc
xor
add
imul
lock
fisubl
pop
add
mov
loope
aaa
pop
push
rcrl
icebp
insb
push
lods
loop
sub
mov
pop
mov
cmp
adc
sarl
bound
xor
fs
jmp
imul
mov
adcb
pop
inc
mov
mull
int3
push
mov
loopne
pop
push
rcrb
shll
lods
mov
mulb
stc
xchg
dec
movsb
fwait
mov
or
shlb
inc
dec
mov
lods
dec
sub
xor
mov
stos
ss
sub
mov
dec
mov
pop
out
cmp
jge
mov
addr16
adc
adc
or
mov
fdivr
icebp
mov
fistpl
fmull
in
pop
sbbb
sbb
jae
sub
mov
pushf
mov
aas
sbb
xlat
adc
cmp
ret
adc
push
xor
push
or
cmp
ret
inc
imul
punpckldq
and
sub
and
mov
inc
js
mov
pop
mov
sbb
inc
cmp
jge
push
movsb
les
pop
adc
bound
pushf
adc
pop
adc
int3
shr
sbb
ss
push
nop
int
jns
jl
test
fnstcw
sahf
xchg
lahf
mov
mov
fstpl
xchg
je
test
adc
pusha
add
jecxz
or
imul
movsb
mov
lock
pop
xor
mov
or
ds
push
les
inc
aad
xchg
cmp
and
sbb
mov
pop
cmp
scas
push
dec
and
and
or
rcrb
pop
xchg
xor
jmp
loope
ficomps
ret
cltd
sti
in
mov
sbb
push
dec
push
dec
rol
scas
adc
sub
and
xor
mov
jne
out
mov
cmc
xor
pop
jb
je
jns
mov
xchg
arpl
xchg
mov
pushf
inc
and
iret
adcb
dec
je
out
in
cmpsb
push
xchg
fbld
jno
test
js
movsl
cli
mov
xchg
push
jg
add
push
or
jns
js
iret
xor
sti
xor
cmp
sub
popa
pop
scas
mov
xchg
in
sti
int
adc
push
subb
cwtl
pusha
xor
add
sbb
dec
xor
adc
cmc
nop
xor
lcall
mov
jmp
adc
pop
or
mov
dec
loopne
fucomip
or
dec
aam
inc
dec
cmpsb
xor
out
in
add
pop
fnstcw
into
xor
aaa
imul
lds
addps
mov
mov
jne
xlat
pop
lret
les
lock
sub
loopne
cli
push
leave
adc
inc
sub
add
jecxz
cmpl
adc
lds
out
dec
sbb
xlat
sbb
lret
mov
int
pop
aaa
js
adc
mov
sub
lret
inc
es
add
jnp
aaa
popf
sbb
std
jb
push
out
out
loope
repnz
je
jmp
xchg
fldt
inc
or
mov
stos
sub
add
push
xchg
cmpsl
and
addr16
xchg
sbb
push
jmp
cmpsb
cld
in
mov
adc
das
int3
scas
mov
xchg
out
adc
sarb
mov
mov
movsl
adc
fsubs
push
ja
mov
cs
out
or
in
clc
fbld
loope
jae
jl
popf
imul
pminsw
add
ret
sbb
push
movsb
stc
in
fstps
sub
movsb
dec
sbb
jmp
xor
outsb
add
xor
out
loope
sub
mov
pop
repnz
roll
and
xor
out
mov
cmc
jo
and
cmc
cs
jne
int
cwtl
out
jg
and
insb
sub
dec
fdivs
stc
xor
inc
shll
cmpl
pop
or
mov
sbb
cwtl
orl
xchg
ds
push
xchg
sbb
subb
mulb
or
pop
imul
xchg
les
xchg
mov
and
aam
inc
xchg
incl
nop
sub
lret
add
mov
xchg
inc
mov
jmp
mov
out
adc
cmp
or
movsb
paddq
pop
mov
dec
dec
push
jmp
inc
adc
cmp
inc
sub
movsb
popa
aam
mov
in
test
pop
lcall
push
sub
push
xchg
outsl
negl
outsl
cli
test
mov
mov
mov
and
sub
push
je
mov
sbb
sub
pop
imul
cmp
fs
sub
decl
int3
packsswb
movsb
mov
adc
or
sbb
sub
jnp
add
les
cmp
adc
repz
aad
or
jl
outsb
mov
pop
repz
mov
sub
stos
pop
lret
push
mov
dec
jmp
xchg
inc
xchg
mov
xchg
push
and
xor
mov
adc
js
mov
xor
mov
sub
dec
xchg
sub
jmp
popw
jp
xlat
movl
jno
inc
push
jns
or
xor
int3
lods
mov
inc
lods
test
fnstenv
xor
mov
arpl
mov
insl
jns
sti
shlb
dec
push
xchg
mov
fimull
lret
arpl
out
adcl
movsl
sub
insl
sbb
xchg
adc
mov
cli
loope
jp
clc
out
aaa
nop
outsl
cmc
jecxz
adc
jecxz
enter
pop
loope
lock
mov
xchg
xchg
mov
add
cmp
rcrb
je
jecxz
lcall
test
mov
dec
faddl
xor
and
sbb
push
pushf
insb
scas
mov
arpl
or
js
pusha
les
or
aaa
add
mov
cmp
popf
shll
mov
push
outsb
loope
loopne
push
push
mov
sbb
xchg
fldenv
test
push
mov
pop
orb
add
dec
push
mov
aaa
lret
ficompl
inc
lret
adc
jo
lahf
test
or
shrl
icebp
imul
dec
mov
je
das
mov
pushl
cmp
mov
inc
pop
xchg
loopne
jl
rdtsc
lods
push
adc
sbb
and
jb
push
mov
dec
cmp
es
inc
and
loopne
fisubrs
mov
popf
xchg
imull
cs
lret
movsb
jmp
mov
fucomp
shrl
dec
pusha
fistpll
and
xor
lods
mov
push
sbb
or
jns
out
pop
mov
in
int3
ret
mov
out
mov
jbe
jns
push
sub
lea
in
lcall
js
pop
and
dec
mov
pop
movsb
pop
imul
lods
mov
cmpsb
faddl
je
int
pop
js
ret
pop
xor
pop
lea
mov
out
mov
jle
cmp
aas
push
outsl
xchg
sub
movsb
std
push
pop
xchg
ss
sub
xchg
mov
lds
jb
mov
dec
lea
sbb
ljmp
or
cwtl
pusha
xchg
and
xchg
or
lea
enter
fildll
pop
pusha
lock
adc
xor
and
scas
jmp
mov
adcb
aaa
leave
lods
cltd
mov
push
or
lds
mov
adc
and
repnz
idivl
push
pop
and
cmpsb
xchg
es
cli
inc
inc
cld
and
mov
mov
mov
sti
out
jg
je
push
sub
cmp
cmpsl
repz
lcall
jge
imul
xchg
mov
gs
push
rcrl
dec
xchg
pop
and
rorl
add
add
pop
addr16
mov
cmc
mov
outsl
dec
push
je
xchg
cwtl
sbb
add
sbb
out
inc
aad
out
push
sbb
mov
inc
xchg
test
movsb
gs
and
jmp
rcll
movsb
insb
rcll
lock
xchg
xor
mov
jle
jp
jno
jns
mov
xchg
or
inc
cmp
sti
push
cld
xor
inc
cmpl
and
xchg
mov
xchg
push
test
adc
ds
cmp
shrb
pop
shll
enter
jno
dec
std
or
xlat
outsb
mov
jno
hlt
jnp
cs
fsubs
es
cmp
lds
aas
jl
adc
sub
jmp
leave
pop
mull
mov
ja
or
xchg
out
call
dec
cli
fistpll
hlt
inc
xchg
add
inc
fisttpll
sbb
cmp
cmc
adc
mov
mov
mov
add
in
inc
popa
mov
and
add
mov
add
cmpl
sar
mov
insl
movsl
dec
inc
aas
push
pop
sub
xor
call
push
dec
negb
pop
xchg
fidivl
mov
jp
js
mov
pusha
vpavgw
dec
loop
jne
or
test
mov
inc
cmp
pop
aad
mov
outsb
stc
shl
cmp
xchg
xor
rorl
xor
test
jp
out
sub
rcrl
loop
sbb
mov
cmp
dec
pop
ret
or
jb
or
inc
js
cmpl
out
daa
pop
into
notb
push
jno
jo
cmp
xchg
sar
inc
adc
ucomiss
sbb
test
aad
jl
jp
lret
push
in
jo
and
std
mov
repz
stc
xor
rclb
and
leave
push
pop
push
sbb
je
pop
iret
frstor
data16
inc
popa
sbb
xchg
cs
pop
inc
outsb
cltd
roll
rorb
daa
push
dec
push
mov
test
dec
cmp
rolb
sti
idivl
cltd
loope
ficoms
mov
stos
test
mov
repnz
into
lcall
sbb
test
rcl
mov
clc
push
aas
movb
sub
arpl
push
lahf
xchg
push
aaa
mov
lret
mov
lods
insb
out
xchg
inc
fadds
mov
jnp
pop
ret
outsl
lods
rcr
pop
sahf
sbb
in
ljmp
push
cs
jmp
pop
mov
mov
stos
ja
inc
dec
pusha
sub
es
rclb
adc
sub
mov
or
rol
cmp
inc
inc
lods
xchg
pusha
nop
imulb
push
into
adc
mov
push
adc
push
rcl
hlt
pop
adc
mov
test
push
adc
xchg
dec
xor
jecxz
fidivrl
dec
in
pop
jnp
pop
sub
dec
cmp
outsb
mov
test
mov
jl
mov
mov
xor
scas
cmpsb
iret
imul
pushf
fistpll
mov
out
mov
in
push
fwait
cmp
xchg
pop
add
daa
aaa
mov
lods
add
or
test
jge
iret
fs
aad
push
and
imul
push
loopne
inc
push
inc
mov
mov
in
or
frstor
pop
sub
pop
mov
mov
cmp
cmpsb
dec
cmc
out
push
xor
sti
in
inc
fwait
xchg
adc
mov
out
mov
shrb
sbb
out
popa
xlat
inc
or
ret
push
mov
jg
mov
dec
dec
arpl
xchg
stos
cs
dec
and
test
dec
scas
mov
out
cmp
xchg
xchg
out
ret
cmp
or
dec
repz
or
shlb
scas
imul
jns
pop
stos
mov
push
push
push
fwait
icebp
or
psadbw
xor
pop
and
mov
push
pop
mov
xchg
sti
std
mov
adc
xor
sub
or
out
lea
push
es
jb
push
clc
popa
jne
insb
gs
jne
fidivs
scas
sub
stos
shlb
adc
pop
loope,pt
pop
cltd
xor
iret
out
fisttpl
adc
fstl
shlb
fimull
lret
scas
bound
rcrb
pop
dec
or
test
jg
xlat
fst
mov
push
lods
push
xchg
pusha
jle
sahf
mov
imulb
jnp
cmp
cmp
test
or
popa
xchg
xchg
ds
mov
aad
into
je
into
ret
inc
mov
cmp
mov
or
cmpsb
add
rcr
fwait
cs
enter
adcb
mov
push
dec
roll
mov
pushf
jb
mov
cmc
mov
loopne
jno
cwtl
in
push
mov
and
out
mov
nop
adc
cmp
adc
mov
cwtl
add
imul
mov
imul
inc
jg
and
sti
scas
mov
sbb
outsb
in
mov
test
inc
fwait
js
jns
rsm
js
ret
push
nop
mov
mov
bound
cs
mov
popf
imul
cmpsl
lret
xchg
xchg
cmp
and
cmpsb
push
pop
loopne
inc
sbb
test
mov
or
xchg
xchg
rol
xor
mov
scas
lods
mov
pushf
xchg
inc
push
mov
fs
xchg
and
and
fdivr
lds
loope
stos
push
sub
popa
mov
adc
popl
testl
loopne
imul
cmp
or
out
out
jl
jmp
adc
cltd
push
clc
cmp
addr16
sub
sbb
cmp
loope
popf
ficompl
into
mov
les
dec
es
ds
insb
xor
add
fwait
adc
jmp
mov
cmpl
fidivs
cs
and
or
jmp
mov
or
scas
or
repnz
test
movsl
fisttpl
outsb
xchg
mov
fildll
test
jecxz
lds
lret
cwtl
inc
sbb
sbb
sub
fwait
pop
pop
mov
call
mov
dec
iret
stc
and
imul
push
les
jg
pop
mov
cmc
test
dec
in
sti
fsubl
xchg
inc
jecxz
rcrl
into
adc
xchg
repnz
rorb
mov
imul
mov
mov
cli
dec
adc
mov
cmp
jno
pop
je
mov
dec
or
aaa
xchg
aam
or
lea
and
scas
push
insl
and
les
push
popa
jge
aam
repz
fcoml
aas
xor
and
mov
pop
les
sti
xchg
jl
aam
fwait
or
xchg
cmp
jge
mov
inc
jl
cmp
ficoms
jecxz
dec
cmp
or
adc
cmpl
in
movsl
pop
ja
and
sahf
addb
imul
test
int3
ljmp
icebp
nop
adc
test
icebp
push
cmp
sbb
mov
adc
push
sub
dec
add
mov
pop
rcl
sbb
jle
adc
pop
dec
js
xchg
negl
outsb
mov
js
icebp
fimull
pop
out
in
scas
popf
je
push
pop
dec
and
fadds
xchg
inc
and
jnp
pop
pop
lahf
addr16
loopne
adc
mov
xor
lods
daa
in
xchg
inc
sti
ret
fisttpll
cld
xor
cs
cwtl
cltd
dec
cs
dec
sub
shrb
hlt
arpl
cli
shr
stos
mov
mull
aas
dec
push
add
and
int3
xchg
pop
mov
movsl
sub
lret
pop
movsl
mov
push
sbb
pop
and
mov
stos
sbbb
pop
mov
int3
jno
lahf
jbe
cmp
rcll
dec
mov
cli
je
int3
fdiv
test
cmp
dec
cld
inc
cmc
adc
jle
mov
cld
xor
lock
xchg
fs
mov
pushf
pop
push
jg
sbb
lret
adc
stc
and
addr16
sbb
test
pop
adc
ja
add
outsl
cmpsb
dec
inc
dec
and
setg
jae
rclb
push
fs
inc
add
jg
push
xchg
xchg
jbe
jno
hlt
pop
clc
jno
not
xor
mov
hlt
decb
dec
fmuls
jae
adc
and
dec
dec
inc
jae
and
ret
sbb
sbb
inc
push
imul
jg
es
jbe
call
or
call
jg
push
test
ficomps
and
in
shrb
add
jecxz
push
stos
outsb
xchg
test
lret
and
outsb
repz
pusha
sarl
push
dec
inc
imul
xchg
dec
insl
scas
int
jle
mov
incb
pop
sbb
jle
aad
mov
mov
pop
icebp
add
hlt
cli
shlb
xor
stos
xchg
inc
push
sbb
scas
jbe
mov
jl
popa
out
sbb
stos
addl
cmp
ljmp
sub
jl
cmp
mov
sub
xchg
lret
xor
cmp
mov
mov
mov
pop
and
cmpsl
xchg
out
lahf
call
jnp
insl
push
test
insb
repnz
scas
fadds
and
xor
psubusb
jge
js
ljmp
mov
mov
pop
push
jg
in
adc
xchg
fstpt
cmc
push
dec
cmp
sarb
jg
push
out
sbb
jnp
iret
adc
pop
mov
mov
jns
leave
pop
xchg
popf
mov
or
or
jnp
xchg
test
subb
sub
and
repnz
mov
std
movsl
jle
sbb
push
dec
clc
fstp
ret
push
cmp
cmp
push
into
cmp
leave
enter
jmp
pop
jl
or
cltd
popf
jp
xchg
xchg
jmp
rorb
xor
jno
lret
mov
cli
sub
negb
or
cmp
pop
jge
mov
xor
xchg
cmp
arpl
mov
push
jae
call
fimuls
mov
jle
mov
and
repz
inc
mov
mov
xchg
cs
icebp
pop
and
xor
xchg
test
adc
out
adc
xchg
shr
cmp
push
out
add
adc
pop
cmp
or
aam
push
aas
pop
out
insl
dec
es
mov
jns
cwtl
test
sbb
andb
js
fs
cmpsl
push
loop
or
and
mov
add
scas
xchg
jp
cmp
cwtl
push
shlb
aam
mov
jbe
jmp
fnstenv
adc
and
sahf
rolb
push
out
enter
fbld
jle
cmp
test
mov
mov
rcrb
icebp
push
stos
lret
popf
and
cli
out
sahf
addr16
mov
adc
jp
and
jp
lret
data16
and
mov
xchg
xchg
dec
mov
shr
jne
cmc
xor
rorl
push
mov
ret
push
sbb
lcall
mov
mov
pop
les
xchg
dec
repnz
cmc
mulb
inc
mov
push
jecxz
xchg
mov
mov
mov
xlat
push
push
insl
aad
imul
aas
xor
imul
pusha
mov
rcrl
scas
stos
mov
pop
push
sar
mov
arpl
imul
int
sub
aad
xorb
shlb
repz
outsl
mov
movsl
testl
notl
in
std
std
clc
fwait
push
das
lret
jmp
jl
mov
test
or
mov
aad
pop
jnp
mov
mov
loopne
fldl
data16
adc
int3
cli
into
and
push
clc
arpl
inc
data16
jmp
mov
xor
cmp
sbb
stos
fdivr
hlt
sbb
das
mov
loopne
mov
or
out
lea
pop
gs
jns
mov
sbb
nop
pop
rorb
and
inc
mov
mov
roll
cmp
mov
mov
test
jmp
jno
test
mov
xorl
xchg
or
jno
fcmovne
fwait
mov
jp
jg
push
fcomip
push
jle
lock
mov
add
mov
fst
and
test
jmp
xchg
mov
rorb
xchg
xchg
mov
inc
mov
fidivrs
movsl
out
sub
xlat
lahf
stc
out
add
cmp
ret
shll
mov
sbb
or
mov
add
adc
push
int
fisubs
aam
jl
or
test
es
test
fistps
ret
leave
cwtl
dec
inc
inc
cmc
jb
push
xchg
out
outsl
sub
jnp
adc
or
jg
sub
xchg
mov
xchg
push
ja
es
push
xor
cmpsl
test
sbb
cltd
push
jno
push
sbbl
sti
fucom
mov
imul
mov
sub
loopne
subl
pop
dec
push
sub
add
jl
cmc
adc
aad
sete
dec
test
dec
sbb
pop
in
xor
insl
mull
popf
int3
inc
jecxz
bnd
in
testl
sarl
sub
loop
mov
xchg
enter
pop
xor
cmp
pop
xchg
jge,pn
lea
or
push
lods
lcall
lea
lock
kmovb
push
dec
loope
fmull
push
fstpt
rorl
imull
pusha
mov
inc
cld
adc
xchg
pusha
shlb
inc
or
jle
jmp
add
popf
push
and
mov
pop
mov
xchg
inc
repz
fisttpll
cmp
adc
movsl
push
icebp
sub
lcall
pop
popf
icebp
jmp
cwtl
bound
dec
lock
dec
es
fadd
mov
popa
ja
push
ficoml
sbbb
xchg
jmp
push
pop
shr
cltd
fwait
xor
inc
movsl
push
das
mov
push
hlt
and
es
pop
js
mov
xchg
rorb
movsb
adc
outsb
leave
in
js
out
push
test
ljmp
push
mov
fs
outsl
push
enter
pusha
icebp
push
or
ret
dec
xchg
xor
pop
and
mov
xor
xor
xchg
jl
fs
pop
test
stc
dec
mov
test
cmp
in
pop
call
push
call
in
xchg
dec
test
rorb
sbb
int
and
daa
sbb
je
rol
in
add
sbb
or
xchg
inc
dec
xor
jno
and
jnp
les
in
sbb
int3
cmp
fwait
mov
mov
daa
movsb
and
dec
pop
int3
bound
xchg
insl
pop
out
or
mov
inc
mulb
cmp
adc
and
and
jecxz
ss
mov
cmp
or
sbb
xchg
inc
push
data16
loop
mulb
add
cmove
shlb
cmp
lahf
pusha
test
add
push
mov
popa
rclb
loopne
call
in
test
loope
adc
fidivl
jo
test
es
mov
lahf
push
adcl
add
lods
xchg
mov
stos
add
lods
push
sbb
sarb
fimuls
movsl
mov
addr16
clc
push
loopne
jo
cmp
jle
outsl
sbb
jg
xchg
movsb
cmpb
and
addr16
jl
add
mov
jnp
sub
sub
loop
rcrl
sub
push
fists
stos
lcall
sub
sbb
pop
push
add
or
les
fxch
sub
ljmp
ss
mov
inc
lret
stos
lods
pop
cmp
sti
dec
cmp
loope
flds
ret
sbb
mov
push
fisubs
xchg
rolb
pusha
shlb
out
mov
mov
pop
push
test
mov
xchg
ss
scas
dec
xchg
xorb
add
sti
lcall
stos
and
xchg
into
pop
pop
pop
mov
popf
call
sub
push
push
jb
inc
adc
in
xlat
dec
stos
sub
mov
dec
rcrb
push
daa
sbb
aas
fdiv
popf
cli
stos
cld
adc
inc
daa
out
mov
cwtl
add
mov
lods
aam
stos
mov
mov
popa
pop
in
clc
sti
clc
mov
jb
sbbb
lcall
int3
clc
out
in
pop
lcall
mov
mov
adc
xchg
mov
fcoms
leave
inc
movsb
and
pop
lcall
popf
pop
orb
outsl
icebp
mov
push
hlt
test
stos
mov
xor
cmp
cmp
pop
inc
lcall
push
scas
xlat
jle
addr16
xchg
jns
lcall
jb
in
aas
repz
lods
cmp
cmp
out
xchg
pop
inc
push
dec
lods
mov
xchg
out
or
xchg
adc
or
or
popf
shrb
punpcklbw
in
mov
sbb
lret
js
cmpsl
and
push
cmp
hlt
cli
pushf
jge
es
xlat
imul
inc
cmp
add
daa
clc
popa
mov
daa
add
jnp
add
jmp
pushf
cld
popf
cmc
pop
cmpsb
sti
inc
xchg
lret
pop
fisubrs
shlb
rcl
push
inc
sbb
js
push
std
in
fsts
inc
lods
sub
pop
loopne
adc
and
jg
add
or
enter
mov
and
and
fistpll
and
jl
shll
cmc
xchg
movsb
pop
jnp
push
test
rep
xor
fxam
shlb
outsl
stos
add
test
sarl
sub
jle
push
xor
jl
jne
dec
pop
sbb
repz
cld
loop
pop
daa
dec
mov
popa
jge
xor
adc
or
out
cmp
loopne
cmc
xchg
cmpl
push
lods
pop
test
mov
scas
push
xchg
xchg
and
sub
pop
and
fisubrs
push
test
sub
mov
jns
pop
clc
mov
mov
aad
addr16
mulb
int
in
icebp
and
shrl
test
mov
add
fisttpll
mov
mov
jo
mov
inc
jb
lcall
jl
inc
or
test
ds
push
mov
or
mov
xor
loope
imul
mov
test
mov
ficomps
sbb
mov
adc
add
aad
add
ret
cmpsb
sarl
mov
xchg
pusha
add
pop
dec
mov
test
fildl
pop
sbb
mov
int3
mov
fwait
leave
sbb
scas
cmp
inc
mov
xchg
outsb
adc
inc
mov
hlt
sub
shlb
popf
loop
js
int3
adcl
test
lret
inc
add
push
stos
jmp
xor
arpl
add
dec
sarb
mov
test
loop
hlt
jmp
and
pop
push
aam
pusha
dec
mov
add
outsl
mov
push
dec
pusha
arpl
mov
adc
mov
pop
or
and
aaa
movsl
leave
imul
fisubrl
out
xorb
leave
les
xchg
fistl
push
or
mov
fdivrs
sbb
and
movsb
arpl
dec
and
fidivl
pop
sub
cmpsl
mov
fcomp
or
mov
int3
inc
mov
movsl
xor
or
jl
xchg
fisubs
int
enter
xlat
pop
push
int
hlt
in
int3
fldt
int3
enter
cs
das
pop
xchg
divl
push
sahf
mov
stc
pop
jmp
aam
aaa
iret
shr
fs
pop
adc
push
xchg
cmp
jnp
push
pushf
pop
mov
push
pop
jge
add
fsubl
ja
cmp
jle
lret
sbbl
jmp
jne
jne
mov
nop
sarl
rcrb
sti
mov
lea
mov
out
fimull
sbb
std
cmp
pop
dec
scas
sub
inc
cmp
jecxz
sub
mov
arpl
mov
in
lret
or
pop
add
sub
push
ljmp
inc
mov
test
out
xchg
mov
mov
jo
and
fdivs
xor
cwtl
movsb
mov
imul
sub
pop
jle
mov
lahf
or
pop
xchg
jnp
add
scas
mov
fistps
jle
addr16
mov
push
cmc
or
mov
mov
ret
ds
fcomi
and
pop
mov
inc
jecxz
push
imul
enter
aad
int
push
sti
inc
xchg
inc
cli
cmp
jnp
pop
shrb
jmp
sbb
mov
cli
mov
ret
mov
mov
aas
mov
xchg
loopne
repz
push
dec
lea
mov
out
in
jbe
pop
lods
jns
cli
test
jnp
or
scas
rcll
in
dec
int3
jae
add
or
lahf
sbb
test
jns
pop
stos
test
sarl
mov
adc
push
jo
and
pop
lcall
jb
pop
push
xor
rcrb
pop
repz
and
push
or
or
cli
ret
fwait
xchg
mov
inc
push
int
adc
icebp
sahf
jecxz
lea
lahf
inc
adc
lahf
jb
fimull
mov
addr16
ret
lret
fwait
dec
sti
xor
mov
xchg
jmp
addl
je
jp
xchg
adc
cmp
jecxz
jno
mov
fstps
add
sar
insl
or
inc
cmpsb
and
sbb
das
sti
cld
dec
cmpl
dec
mov
shll
pop
fldt
mov
into
cmp
and
pushf
cmp
mov
sub
data16
fistl
add
and
ljmp
xchg
outsl
xlat
mov
xchg
adc
ds
cmp
clc
xor
mov
dec
cld
mov
rolb
inc
push
daa
or
pop
popf
sbb
or
inc
fcoms
jmp
iret
pop
push
sub
or
sub
test
stos
aad
mov
inc
pop
ret
addr16
lods
push
aas
fidivs
ss
cli
cmp
inc
mov
and
pushf
dec
int
icebp
pusha
cmpsb
push
mov
dec
cmpsb
push
fcomp
dec
inc
adc
ja
mov
dec
lcall
dec
aas
and
lahf
jge
mov
push
mov
xchg
add
std
cli
dec
popf
mov
shlb
dec
and
or
lods
xlat
movsb
jmp
xlat
data16
dec
ss
cmpb
fidivs
mov
addr16
dec
addb
sahf
popa
push
out
mov
jo
sbb
ret
sbb
inc
int
fisubs
push
fnsave
jbe
dec
lret
in
in
js
and
sbb
popa
mov
out
lcall
dec
mov
fadds
xor
xchg
out
les
out
loop
add
shlb
xor
jg
test
adc
lret
das
pop
mov
mov
fistl
pop
pop
pop
sbb
mov
xchg
shld
jp
ljmp
adcb
sahf
shll
mov
popf
xchg
pop
arpl
icebp
dec
jne
cmpsl
push
lcall
cld
lret
adc
fstl
ffreep
dec
arpl
cmc
aas
faddl
and
movsl
divl
pushf
cmpsl
fmull
xor
sub
and
or
ja
mov
dec
cmp
sbb
test
cltd
faddl
das
push
sbb
pop
popa
stc
jae
sahf
stc
inc
add
sub
repz
lods
fldenv
imull
daa
imul
in
add
mov
out
cli
in
scas
das
addr16
test
fstl
add
adc
push
mov
icebp
dec
or
lcall
decb
jmp
mov
jnp
orl
insl
and
push
jp
xchg
adc
xor
xor
call
pop
push
mov
aas
ja
sbb
fidivrs
pop
sub
lahf
or
jb
sbb
push
or
jae
imul
pop
test
sbb
insb
xchg
cltd
mov
or
mov
mov
je
insl
insb
pop
xchg
cmpsl
xor
adc
fwait
push
sbb
adc
jo
xchg
lcall
mov
leave
pop
test
call
popa
cmp
rcr
dec
xor
xchg
dec
ljmp
mov
xlat
push
scas
xor
and
into
out
lods
rcrl
cmpsl
popa
in
fdivrs
in
and
mov
sbb
add
in
bound
loop
and
test
xchg
cli
mulb
inc
xor
push
mov
cltd
loope
add
pop
mov
or
mov
xchg
push
pop
adc
mov
addr16
sub
sbb
or
dec
sarl
and
movsb
andl
faddl
jae
inc
or
mov
dec
mov
pop
cmc
loope
xor
icebp
leave
jl
shlb
fnstcw
dec
nop
xor
pushf
xchg
jns
cmpsb
es
enter
adc
dec
loopne
cmp
stos
and
fiaddl
mov
jns
and
fmull
push
adc
into
jo
call
xor
outsl
lods
mov
mov
lods
xchg
mov
pop
je
mov
aaa
pop
pop
jge
ss
add
pop
pause
add
sub
and
cmc
pop
in
repz
imul
sub
dec
pop
push
cmp
fsub
sub
inc
sub
rcrb
cmpsb
jmp
cmp
xchg
test
out
or
rol
xchg
xchg
mov
mov
shr
imul
add
aas
cli
cli
cmp
and
fsubs
outsb
shlb
jl
stc
loop
loope
lea
pushf
outsb
out
dec
inc
pushf
xchg
scas
xor
adc
enter
dec
sbb
inc
xchg
gs
test
sub
call
push
enter
jo
test
cltd
stc
lret
test
cmpsl
enter
xor
mov
into
aam
push
push
lret
mov
push
adc
mov
out
sbb
ret
loopne
xor
push
inc
repz
in
aas
sub
or
leave
jnp
adc
inc
add
push
pushf
and
sub
cmp
xchg
in
or
lods
mov
mov
arpl
iret
jbe
cmp
or
lahf
push
mov
jo
xchg
jl
or
loopne
or
add
cmp
cmpsl
fisubs
cwtl
add
xor
push
inc
aad
imul
ficoms
adc
std
ret
clc
push
fwait
pop
sbbb
adc
sub
xchg
jle
aam
fadds
mov
insl
mov
mov
mov
lods
sub
filds
push
sti
adc
inc
ja
out
jp
sahf
stos
mulb
or
iret
mov
sbb
in
add
cmp
push
push
mov
push
fistps
dec
scas
inc
jbe
cltd
fisttpll
stc
lods
outsb
push
rolb
jmp
push
adcb
data16
fiaddl
mul
mov
or
add
mov
test
and
mov
sar
inc
arpl
jae
and
sub
outsl
jno
xchg
dec
loope
cmp
pop
jno
mov
push
movsl
or
rol
ljmp
xor
test
imul
out
mov
jp
dec
scas
repz
or
add
jg
inc
fisubrl
dec
lret
imul
jne
sub
fwait
enter
add
fs
lcall
lahf
popa
jb
dec
adc
out
cmp
cmpsb
out
sub
insl
xor
lock
mov
nop
mov
loop
outsb
arpl
icebp
lods
orb
cmp
push
mov
test
movsb
mov
cli
stos
jnp
xchg
fisttpll
cmp
out
arpl
xor
mov
ljmp
inc
dec
xor
jb
and
jmp
lea
push
jnp
aaa
hlt
lcall
in
cmc
lods
insb
xor
fwait
adcl
cld
xorl
sub
cmpsb
xchg
jle
mov
lds
icebp
ret
mov
pop
add
pop
js
mov
dec
fwait
cmp
aad
jp
mov
int
test
insb
sub
dec
adc
test
cli
imul
sbb
icebp
dec
cmc
ss
mov
jae
cwtl
push
test
push
lahf
fistps
mov
xchg
mov
xor
je
icebp
fwait
or
mov
mov
pushf
xor
jg
ret
pusha
in
shll
and
mov
adc
push
xchg
xchg
bnd
mov
data16
cmp
inc
pop
push
imul
incb
and
cmc
push
dec
jg
and
dec
fidivs
in
loope
push
mov
repz
jp
inc
orb
push
sti
xor
cmp
icebp
mov
pushf
pusha
push
sbb
cmpsl
mov
fisttps
jbe
pop
ja
cld
cmp
inc
cmp
xchg
repnz
int3
mov
orl
ret
push
dec
push
jp
xor
mov
cs
xchg
xchg
sub
shlb
lahf
hlt
ss
xor
in
or
out
xchg
and
cwtl
cmpsb
gs
test
push
lds
bound
adc
out
rep
pop
lds
mov
mov
call
xor
dec
push
scas
cmp
mov
push
loope
js
and
adc
and
cmpsb
dec
movsl
test
push
xchg
jb
lahf
inc
pop
out
shrw
movsb
movsb
xor
sbb
xor
or
lock
cli
jp
ret
jnp
lahf
mov
imul
sbb
movsb
xor
int
push
sbb
leave
jae
popf
idivb
mov
fimull
jl
data16
pushf
mov
lds
xchg
pop
push
imul
cwtl
jmp
jns
add
sbb
add
insb
pop
bound
lret
fxch
and
cmp
inc
nop
sahf
add
icebp
mulb
test
add
pushf
mov
push
jno
dec
stc
lcall
mov
dec
sahf
sub
push
pop
cs
sarl
sub
pop
sbb
loopne
mov
sbb
lds
jb
addr16
xor
dec
loop
and
sub
andb
mov
clc
imul
loope
push
loopne
fdivr
add
lahf
leave
pop
inc
insl
xchg
jecxz
aas
pop
mov
movsb
sub
push
cmc
mov
mov
cmp
lret
xchg
popf
ss
mov
mov
or
jmp
shll
std
sub
data16
mov
jg
in
fldcw
addr16
add
sbb
xchg
aad
jl
outsb
test
sbb
je
or
push
shl
push
mov
cwtl
dec
cmpsl
mov
les
pop
cmp
mov
jecxz
scas
ficoml
inc
dec
mov
sbb
xor
lock
sub
jns
fwait
in
fbstp
jbe
pop
pop
fiaddl
scas
xor
inc
insb
mov
pusha
add
loop
orl
pop
push
mov
push
lret
add
dec
jns
sbb
or
ss
xor
mov
outsb
ja
jmp
sub
or
std
add
cli
sbb
xchg
mov
int3
sti
cmc
lcall
jmp
mov
out
mov
ror
mov
aaa
push
dec
nop
or
lods
xchg
into
inc
pop
out
or
cmp
jns
shll
pop
push
jl
insb
scas
jae
insl
dec
xchg
cmp
adcb
in
cmpsb
jg
jo
stc
add
inc
sahf
mov
sbb
jp
pop
dec
inc
jecxz
out
jp
movsb
and
sub
inc
loope
pop
aas
in
push
stos
loopne
rol
out
push
test
pusha
sahf
cmc
and
ficoms
out
clc
sbb
xor
orb
call
imul
ljmp
push
bound
cmp
testl
pop
popf
mov
pop
pop
lahf
addr16
daa
sub
clc
call
out
pop
sub
je
mov
and
or
cmp
cmpsl
mov
js
test
jecxz
pop
jae
xchg
inc
xor
in
xor
divb
movsl
aad
decl
or
dec
gs
dec
out
fs
inc
leave
insl
and
mov
cs
adc
mov
sti
cmpsb
popf
leave
sub
pop
cmp
rcl
leave
xor
xor
sub
jbe
lahf
mov
xchg
lcall
push
xchg
shlb
and
cmp
mov
cmp
and
arpl
out
sub
lret
mov
ss
js
std
xor
lcall
jle
int3
cwtl
rorl
cmpsl
aaa
sbb
xchg
mov
adc
or
cltd
add
and
addr16
adcl
jns
icebp
stc
sub
subb
imul
dec
push
popf
xor
pop
xchg
fs
imul
and
inc
add
adc
xchg
movsb
ds
stos
fldcw
xorb
and
push
outsb
push
xchg
mov
cs
cmp
divb
dec
or
xchg
js
pop
jbe
movsb
imul
xor
arpl
loop
lcall
inc
int3
inc
lret
mov
xlat
pop
pop
push
dec
scas
arpl
push
sbb
or
jle
or
stos
cmpsl
xchg
andl
lock
negb
xchg
aaa
clc
scas
and
inc
add
imull
aad
ds
inc
and
push
inc
dec
jno
int
or
xor
aas
cmpsb
mov
push
inc
in
jp
negb
je
push
inc
movsl
jmp
pop
leave
ds
inc
imul
out
push
lds
push
jnp
push
push
repz
push
jae
push
aas
movsl
xchg
shll
mov
movsb
sahf
int3
pop
decl
bound
mov
add
in
loop
ret
push
or
out
or
insb
stos
pop
rcr
lea
push
mov
sahf
fwait
jbe
orl
pop
sbb
inc
cmc
cltd
scas
pop
cltd
aad
xchg
fmull
cmp
imul
jp
fs
inc
push
cli
sbb
inc
and
mov
inc
fimuls
xchg
int
xchg
lods
sbb
lcall
es
mov
les
sahf
adc
mov
cmpsb
pop
daa
cmp
ret
adc
fwait
clc
ja
mov
aam
aam
jl
not
outsl
div
push
cltd
xor
cld
aad
mov
sbb
lea
out
mov
in
loope
scas
mov
mov
loopne
mull
push
mov
mov
mov
aaa
shrl
and
out
cmpsl
hlt
push
push
push
iret
sbb
into
ss
les
jl
sub
cmc
push
cmp
mov
sub
ret
jp
cs
inc
mov
mov
dec
xor
cmp
lea
decb
cmp
mov
lods
mov
sbb
mov
or
orl
fs
adc
jae
les
nop
dec
pop
xor
adc
cmp
test
xor
inc
jbe
xchg
pop
pop
bound
mov
stos
mul
add
rorl
and
add
jmp
shll
pop
outsl
jne
xlat
arpl
cmp
ljmp
lea
rorl
gs
adc
fistpl
fwait
jo
insb
arpl
test
ds
add
pop
adc
movsb
add
inc
frstor
test
pop
push
xchg
mov
cmp
out
imul
pushf
jp
xchg
jo
stos
ljmp
mov
inc
push
xor
xor
test
mov
sbb
loope
or
jbe
imul
pop
out
cltd
outsb
nop
xchg
push
sbbl
cmp
mov
int3
mov
cmp
sub
pop
inc
in
adc
movsb
inc
loop
icebp
cmp
mov
mov
jl
jmp
js
or
mov
mov
ret
out
xchg
movsl
roll
add
pop
mov
bound
jo
jge
or
test
push
mov
out
or
or
jnp
cmp
cmp
test
cmp
iret
insl
xchg
aas
pop
lods
ret
fidivrs
les
cmp
loope
ret
add
pusha
movsb
xor
sub
adc
loope
pop
ja
adc
xchg
or
sbb
rcrb
movsl
mov
aas
leave
lock
out
mov
xchg
aad
lock
pushf
rorl
out
push
push
lcall
lret
cmp
loop
mov
push
mov
shl
jns
mov
push
enter
xor
inc
mov
ljmp
adc
and
adc
sahf
arpl
xor
push
mov
cmp
hlt
lea
pop
add
sbb
out
adc
push
addl
cmp
ret
push
adc
jge
xlat
int
xchg
mov
sti
pop
or
subl
mov
int3
adc
adc
jne
mov
add
add
mov
adc
sub
adc
dec
sti
mov
loop
pop
xor
xchg
nop
push
fldcw
push
jl,pn
mov
pusha
ja
jmp
mov
push
mov
or
dec
xchg
frstor
adc
data16
fsubrp
ja
mov
dec
arpl
or
nop
loop
pop
stc
scas
bound
js
dec
andb
pop
and
inc
aaa
stos
xor
out
pop
aam
inc
pop
int3
insb
xchg
sub
cmpl
fsubrp
add
xorl
cmp
mov
sahf
sub
stc
mov
js
cmp
inc
sbbb
push
fwait
and
jle
les
jecxz
loop
mov
mov
adc
loope
jae
in
mov
mov
mov
nop
sbb
lahf
mov
push
mov
mov
lret
roll
mov
add
fs
ror
decb
imul
dec
jnp
cmc
movsb
push
cmc
jne
lds
test
ja
cmp
lock
cld
lods
cmpb
shlb
inc
shl
lods
ret
scas
inc
shrb
xchg
jno
lods
sub
jge
inc
sbb
inc
dec
mov
or
pushf
mov
jle
mov
jmp
sub
mov
jb
xchg
xchg
dec
repnz
sbb
xor
push
jmp
push
xor
into
repz
lahf
lea
aam
ja
jecxz
inc
adc
xchg
out
pop
pusha
push
mov
lahf
jmp
xlat
hlt
sti
mov
je
sti
cmp
push
mov
push
loopne
or
scas
push
mov
push
cld
xchg
stc
sar
inc
mov
push
ja
adc
and
sub
jg
negl
mov
test
dec
jns
push
lahf
mov
push
cmpb
bound
or
or
imul
dec
push
sbb
lahf
movq
sub
lret
outsb
mov
fstp
bound
mov
es
jno
sub
jo
sub
mov
xor
notl
fcomi
in
lock
out
sbb
call
mov
sbb
xchg
sub
insl
pop
frstor
divb
jmp
mov
sbb
xor
rolb
xchg
lcall
fisttpll
xlat
or
or
cmp
xchg
xor
sub
xorl
cmp
sbbl
adc
xchg
jb
loopne
push
push
mov
jecxz
pop
or
mov
mov
sar
lds
test
push
imul
dec
popa
mov
int
into
pop
dec
out
add
je
xor
aam
xlat
scas
xchg
movsb
cmp
ret
pop
int3
sub
test
mov
add
out
repz
dec
into
adc
fdivrl
in
out
mov
pop
in
sub
xchg
into
cltd
sub
inc
bound
in
push
shl
mov
inc
jge
inc
aad
mov
xor
adc
out
test
sub
das
test
dec
lret
idivl
popf
add
or
ljmp
imul
es
and
clc
aaa
adc
pop
inc
sbb
adc
popf
mov
pop
jns
sbb
dec
insl
push
shl
jb
pushf
mov
mov
arpl
jge
fsubp
leave
dec
popf
and
lcall
rolb
subl
sbb
mov
cmp
inc
and
fcomip
jl
adc
subb
sub
scas
xchg
and
repnz
outsl
sub
pop
cwtl
inc
jg
push
mov
mov
push
ja
add
jns
adc
jle
mov
sbb
loope
in
or
push
xchg
pop
imul
cwtl
mov
iret
hlt
push
imul
repnz
faddl
leave
pop
scas
imul
sub
mov
aad
xor
idiv
push
jp
std
push
mov
sub
and
mov
fmulp
sub
negb
push
mov
loope
pusha
gs
lcall
in
sbb
cwtl
inc
inc
fucomip
sbb
sbb
mov
ja
and
lcall
add
ljmp
add
or
adc
xchg
mov
mov
fisttpll
sub
sahf
imul
clc
cmp
stc
lods
jecxz
mov
fisttpl
sbb
aaa
cmp
cmp
pop
sarb
dec
ficompl
xchg
mov
enter
add
push
cmpsb
movsl
push
pop
or
push
pop
xlat
mov
cmp
cltd
rcrl
mov
pusha
sub
nop
lret
std
imul
mov
sti
or
sahf
and
push
inc
mov
insb
mov
fistps
es
pop
call
xor
mov
xor
lea
fldcw
addb
push
xlat
pop
jl
fwait
sbb
lods
or
mov
iret
pop
xchg
push
adc
aaa
inc
push
daa
push
test
add
sarl
ds
sti
or
pop
pop
jp
and
std
push
and
subb
dec
push
loopne
sub
roll
sbbl
das
pushw
xor
mov
mov
adc
cmp
xor
xchg
sbb
test
xchg
dec
xlat
push
lret
cmc
mov
xlat
or
push
sahf
jl
ja
lahf
lea
mov
fdivrs
lret
push
fidivrs
je
xor
dec
and
repz
and
pop
mov
sbb
subb
push
insb
mov
mull
daa
and
or
imul
sub
sub
push
shlb
jne
cmp
idivb
mov
jp
rolb
test
cld
mov
std
mov
mov
cmc
sahf
pop
mov
ficoms
icebp
sbb
sbb
push
test
cmp
ficompl
push
repz
ss
mov
lahf
mov
ds
insb
fnstsw
scas
cs
xchg
out
aas
ret
lock
scas
cli
jae
jecxz
xchg
pop
and
lret
jp
ljmp
adc
add
or
inc
pop
xchg
add
les
cli
jo
push
sub
cmpsl
idivb
push
stc
lret
pop
incb
cli
enter
push
and
pop
inc
jecxz
mov
jmp
out
mov
adc
push
pop
xchg
lcall
and
ljmp
fwait
jne
data16
gs
sub
pop
xor
xchg
or
mov
jb
inc
push
xchg
or
jb
pop
push
and
jmp
test
pop
lret
jbe
xorl
cmp
mov
push
jne
shlb
out
mov
stos
jo
xchg
aaa
scas
pushw
mov
sbb
and
lcall
jo
sub
xchg
or
dec
and
in
jo
iret
repz
aaa
scas
add
sbb
push
inc
pushf
mov
xchg
repz
mov
insl
pop
and
sub
push
dec
jle
out
mov
pop
xchg
push
mov
xlat
imul
sub
popa
or
in
mov
jecxz
loopne
loopne
pop
lret
mov
sbbl
lahf
popf
mov
insb
addb
imul
mov
popa
mov
fwait
push
mov
mov
fs
movsl
jecxz
decl
hlt
imul
pop
sub
ja
outsl
insl
push
sub
adc
insl
sbb
mov
xchg
iret
mov
sub
lds
cmpsl
mov
or
dec
dec
imul
std
pop
ds
xor
ror
mov
pop
mov
aas
loope
aad
arpl
inc
js
dec
fucom
roll
rcrb
imul
test
adc
addr16
js
jl
push
mov
pop
push
adc
sbb
cmpxchg
pop
icebp
imul
adc
xchg
pop
hlt
std
arpl
aas
negl
mov
push
or
lcall
stos
sahf
xor
mov
fwait
scas
or
add
adc
jb
sarl
add
sarb
jnp
in
lret
lods
lea
add
dec
mov
cmp
sub
call
cld
outsl
outsb
ficoms
sbb
dec
or
fidivrl
mov
and
pop
inc
add
cld
dec
inc
lock
xlat
ja
xchg
mov
rorl
sub
shll
test
mov
dec
jl
jl
outsl
xchg
test
inc
or
pop
and
psraw
pop
pop
cmp
sub
arpl
mov
mov
test
out
jo
jns
inc
xchg
and
adc
test
jae
xchg
dec
mov
mov
in
dec
pop
fwait
push
les
dec
xor
mov
sti
pop
sub
mov
pop
clc
add
lds
xor
test
insb
push
lock
aas
add
fsubl
cli
adc
fisubrl
jo
arpl
ds
out
adc
mov
jne
call
outsl
pop
mov
filds
lret
stc
sub
cmpsl
pop
push
lods
inc
xchg
mov
clc
out
adc
cmp
inc
pop
jne
pop
clc
jecxz
sbb
sub
orb
jnp
loope
outsl
clc
repnz
sub
xchg
scas
xchg
iret
xchg
or
arpl
fldt
xor
rcrl
sbb
push
out
jns
into
fimull
adc
dec
mov
inc
sub
fcomi
in
or
push
mov
lods
sbb
mov
in
add
aas
add
clc
cld
mov
cwtl
fwait
or
adc
jns
jo
xor
orl
movsb
loope
mov
and
decb
imul
mov
pop
push
test
jo
pop
lods
or
jmp
mov
add
pop
test
pop
pop
not
lret
leave
and
clc
xchg
inc
cmpsl
fsubrl
in
repz
pop
outsb
aam
rorb
shll
jae
cmpsb
loope
xchg
xchg
cltd
outsl
sub
pop
jnp
add
sub
sub
dec
lcall
xchg
xor
adc
ljmp
mov
dec
rclb
in
xor
inc
test
mov
dec
jmp
mov
pop
aad
jns
cmpsl
std
rcrb
enter
in
fbld
stc
lahf
inc
lret
inc
add
or
inc
int3
dec
sbb
pop
and
mov
pop
rcll
add
sti
and
lcall
lcall
fld
jne
sahf
test
sbb
and
add
scas
popa
xorl
insl
add
add
push
sti
outsl
cltd
xchg
jbe
inc
add
pop
fstl
imul
and
ror
inc
call
mov
mov
sbb
jbe
lahf
aad
idivl
icebp
addr16
test
mov
and
mov
mov
sbb
jp
lea
push
xor
loop
add
imul
loopne
fcomip
mov
or
mov
inc
push
fcmovu
or
adc
js
loopne
aas
sbb
adc
inc
jle
call
sub
lahf
cmp
fwait
sbb
test
cli
pop
repnz
and
and
andb
sub
lcall
sub
mov
mov
sub
dec
xchg
mov
mov
test
popf
ss
shll
dec
mov
xlat
pop
fisttps
js
dec
daa
mov
ret
sbbb
sbb
fstps
dec
ret
test
ss
xchg
xchg
sti
jb
aad
inc
in
jg
pop
or
out
xchg
sbb
pop
adc
and
bound
mov
or
mov
jne,pt
dec
push
inc
lret
das
ljmp
std
adcb
mov
add
std
rclb
lods
push
xor
dec
sub
sbb
push
push
movb
inc
cmc
das
or
popf
xchg
popf
xchg
insb
out
aam
sahf
mov
int
mov
int
xchg
sbb
in
jg
je
loopne
insl
xor
cmp
push
cmpsl
out
loope
and
pop
mov
shrl
scas
ret
movsl
fsubr
dec
mov
divl
mov
xchg
cwtl
aad
xor
es
sbb
iret
dec
aaa
mov
mov
inc
adc
mov
arpl
fdiv
lahf
jnp
mov
and
pushf
and
jb
ss
andb
repnz
push
pusha
es
in
lea
pop
ss
mov
mov
ret
je
dec
je
roll
repz
jnp
pop
and
cmp
xor
mov
inc
xchg
mov
cmp
cmc
int3
jbe
inc
push
and
xor
jg
or
ret
shll
es
and
xor
popf
inc
adc
xchg
dec
cs
arpl
mov
adc
lcall
mov
lds
mov
cmp
loopne
or
mov
jl
mov
test
push
fsubr
mov
jmp
ja
jne
push
inc
int
add
xor
jb
ljmp
push
subb
insl
mov
xchg
cmp
add
mov
and
leave
mov
push
das
ds
add
inc
xor
xor
int
add
fdivrl
aaa
lock
addr16
loop
call
pop
gs
adc
ss
dec
sbb
sbb
ret
les
xor
jbe
cs
sub
cmp
cmp
enter
push
jecxz
pop
sti
cmovns
int
pop
bound
aad
push
outsl
pop
loopne
pop
xor
lret
xchg
ds
sub
mov
fistpl
inc
pop
cmp
inc
fstpl
xchg
pop
movsb
sqrtps
shlb
mov
xchg
insl
mov
movsl
pop
inc
push
xor
roll
aas
ss
ss
lcall
shlb
dec
jge
cmp
movsb
xchg
xchg
popf
sbb
mov
dec
scas
and
or
inc
mulb
xchg
cmp
js
ss
cmp
mov
test
sbb
pop
pop
sbb
xchg
xor
add
punpckhwd
cltd
add
mov
gs
shll
sti
stc
int
xchg
mov
mov
loopne
adc
orl
stos
loop
mov
add
fld
ret
std
int3
popl
int
sub
cmp
jb
pop
das
cmpsl
and
dec
mov
ficompl
sub
add
cli
cmovno
stc
or
subb
push
in
fisubs
mov
or
push
call
gs
add
jge
aas
push
out
inc
cmp
jle
into
daa
fisubrl
adc
mov
push
push
addr16
cmp
xor
add
decl
jge
push
scas
jl
sub
add
inc
arpl
mov
shll
out
and
lods
mov
orl
pop
fsubr
inc
dec
fiaddl
or
into
addr16
sub
jae
jle
and
mov
std
xor
xchg
mov
cmc
pop
adcl
dec
iret
and
aam
packsswb
js
out
xor
cli
adc
push
cmp
out
into
cmpb
cmp
jl
push
daa
int
jne
popa
cs
stos
dec
movsb
mov
iret
add
xor
fnstsw
adc
mov
or
shll
adc
push
nop
xor
cmpsl
push
push
mov
push
leave
inc
mov
xchg
lods
in
jmp
or
arpl
hlt
mov
shrl
lcall
pop
sbb
sub
lds
popf
dec
not
sbb
add
sbb
sub
sub
add
div
push
cwtl
push
testl
jae
adc
mov
and
lret
dec
dec
rolb
and
xor
arpl
cli
hlt
into
add
nop
cmpsl
cmc
sub
hlt
sahf
mov
adc
shll
fcompl
pop
push
ret
imul
mov
imul
cmpsb
sbb
loop
push
inc
and
or
push
push
sub
mov
jne
loope,pt
push
clc
mov
fs
pushf
push
arpl
shrb
enter
aam
in
cmp
in
pop
mov
mov
test
and
pushf
fistpl
jmp
mov
xchg
mov
jns
mov
leave
pop
cmp
push
rcr
push
xchg
adc
mov
lahf
dec
cmc
in
daa
mov
fs
jae
push
rolb
lret
jl
cs
push
xchg
jge
fildll
outsl
pop
repnz
mov
or
xchg
xor
mov
xor
xchg
pop
or
pop
icebp
sbb
xchg
mov
cs
jbe
pop
cmp
or
sbb
pop
mov
jbe
sbb
mov
jnp
je
and
jmp
js
scas
adc
or
adc
andb
sbb
aad
pop
jne
int3
push
das
pusha
lock
loope
pushf
es
mov
and
cld
lahf
loopne
outsb
mov
stos
sahf
mov
mov
or
std
mov
fnstsw
test
mov
arpl
test
test
dec
xor
mov
cmp
icebp
cmp
mov
scas
loopne
std
mov
popa
adc
add
push
add
test
push
es
sbb
dec
pop
loop
and
outsl
iret
sub
popf
jle
lds
mov
lcall
jmp
jge
xor
mov
adc
or
int3
pop
or
cli
fwait
aaa
loop
add
ja
cmpsb
mov
and
rclb
pop
jmp
movsb
xchg
loop
dec
rclb
jl
xor
jecxz
inc
mov
movsb
loopne
push
xor
mov
jno
pop
popa
mov
call
in
in
fsubrl
inc
cmp
xchg
pop
inc
nop
int3
jmp
test
cmp
jl
mov
lds
test
and
jb
out
lods
sti
dec
imull
sbb
popw
push
adc
ljmp
inc
mov
in
sbb
sub
pop
lahf
push
fstpt
insl
inc
cmp
ljmp
and
out
decb
fidivs
sbb
jae
imul
test
scas
int
mov
sbb
ds
sbb
data16
enter
sub
jae
mov
mov
pop
or
inc
mov
jno
xchg
sbb
cmp
into
out
in
mov
dec
pop
push
sub
mov
hlt
and
repz
jecxz
and
out
stos
mov
inc
jne
fists
fmul
mulb
int3
push
das
outsl
mov
divl
mov
fsubrs
cmp
jb
repz
cmc
xchg
call
inc
lds
push
nop
push
push
mov
mov
adcl
or
mov
adc
jmp
movsb
mov
lods
mov
mov
sub
or
inc
jnp
cwtl
loope
mov
imul
jne
jg
pop
cmp
dec
mov
cmp
or
push
sub
and
int3
inc
xor
roll
ret
push
pop
push
jecxz
std
jbe
imul
xchg
and
add
cmp
add
jbe
shlb
adc
fidivl
and
jmp
jl
cmc
dec
and
sahf
roll
sbb
std
inc
int3
iret
xor
adc
hlt
in
push
push
ljmp
gs
push
aad
pop
mov
punpckhbw
cwtl
push
aad
mov
pcmpgtb
mov
or
test
and
pop
sub
les
inc
pusha
call
ret
daa
xlat
addb
cmp
pop
dec
pop
xor
adc
jg
rorl
ret
push
jecxz
push
sub
mov
jge
aam
addr16
inc
xchg
dec
shr
das
aad
ja
pop
jle
scas
mov
xor
inc
in
outsl
pusha
stos
arpl
sbb
in
mov
es
mov
fs
mov
clc
lods
sbb
js
sbb
xchg
lahf
dec
popa
jl
enter
pop
mov
lret
stos
push
sbb
mov
stos
xor
adc
mov
test
int3
and
mov
clc
push
stos
clc
adc
mov
ds
mov
inc
repnz
adc
cmpsb
adc
icebp
mov
jmp
jge
mov
rcl
in
mov
nop
test
ss
mov
fimuls
lock
fwait
mov
hlt
cmp
mov
dec
pop
cs
inc
rorb
sub
and
push
push
add
fnstenv
out
jbe
mov
mov
push
pop
xchg
mov
inc
mov
and
jecxz
mov
jmp
test
adc
cld
jle
scas
into
push
into
pushf
cmc
push
mov
movsl
sbbl
push
movsl
in
ficomps
push
lret
lods
aam
pop
in
and
cld
jae
jmp
mov
and
into
mov
jne
sbb
dec
adc
les
adc
mov
push
sub
loope
fimuls
xchg
mov
mov
adc
add
sub
cltd
sarl
cltd
enter
cmp
add
jnp
hlt
out
test
loope
test
daa
leave
jnp
jecxz
ret
int
mov
jnp
xchg
frstor
push
pop
fists
lret
pushf
enter
cld
inc
lds
push
imul
add
sbbl
shlb
pop
loop
leave
movsl
pop
cli
shr
aad
jb
jmp
xchg
mov
jo
inc
mov
add
fwait
dec
subb
jns
movsl
shrb
adc
jno
dec
in
mov
in
cmp
and
les
int
ret
inc
cltd
ja,pt
inc
cli
adc
stos
add
fdivp
out
or
addr16
jnp
int
adc
mov
shlb
sbb
movsl
jne
jge
leave
add
sbbb
sbbl
adc
jno
jnp
movsl
insb
inc
xor
nop
sub
jb
adc
and
in
mov
adc
push
mov
mov
sub
pop
inc
lock
mov
or
xor
mov
pop
pop
bound
push
push
fsts
pop
cmp
mov
dec
xchg
xchg
in
test
into
adc
sub
mov
lahf
jo
int
lahf
scas
pop
fwait
enter
mov
jnp
xchg
and
xchg
pop
push
clc
aaa
push
mov
lahf
cmc
mov
xchg
xlat
pushf
lcall
push
mov
mov
mov
cld
dec
pop
mov
push
je
leave
mov
adc
pop
adc
xchg
shlb
mov
jecxz
std
aam
ret
pusha
pushf
ret
mov
mov
adc
mov
out
sahf
xor
xchg
ret
jne
pop
cmp
hlt
std
fwait
dec
dec
jae
jp
and
shll
mov
lods
shr
out
imul
sbb
and
les
pushf
in
ds
xor
pop
pop
cmpsb
and
inc
and
jecxz
icebp
cmp
or
mov
rcl
sar
test
adcl
aam
pop
in
push
daa
scas
sarl
scas
outsb
ljmp
in
mov
cmp
cmp
sbbb
insl
mov
jae
cmpl
in
mov
jg
les
jg
scas
jg
movsl
je
and
sbb
xor
enter
mov
inc
das
iret
ret
add
out
pop
jge
sahf
shll
out
and
or
sbb
rolb
jb
icebp
shlb
cmp
aad
shrb
push
cmpsb
adc
push
scas
sub
in
fsubrs
je
sahf
fistpll
xchg
dec
xchg
or
into
mov
ljmp
push
mov
jae
popa
fld
or
orl
repz
stos
test
pop
js
imul
jle
inc
mov
sbb
jns
aad
out
inc
adcb
inc
mov
or
jl
add
lock
call
scas
mov
stc
lods
mov
add
aas
push
test
mov
xchg
jns
add
sahf
lret
xsha1
cmpsb
int
sub
adc
xor
adc
and
cmp
dec
or
sbb
ja
test
xor
adc
test
jo
or
inc
pop
cmp
adc
repnz
in
ds
lret
pop
cs
insb
push
xchg
ficomps
and
test
inc
mov
popa
and
iret
or
mov
add
in
push
out
cli
add
sub
aad
jg
stos
sahf
mov
sahf
rorb
pop
testb
jb
push
dec
fmul
call
or
ljmp
test
and
int3
imul
imul
and
add
or
out
add
sbb
es
add
addr16
popf
and
push
stos
or
inc
push
mov
sti
imul
and
mov
sub
es
je
stos
dec
jb
fwait
pop
add
mov
scas
les
xchg
ss
iret
cld
fisubrl
lods
xchg
shr
dec
jae
adc
or
add
int3
stc
imul
mov
leavew
in
lahf
xchg
insb
and
mov
fdivrp
add
adc
sub
push
xchg
daa
or
jmp
idivl
lret
fs
in
mov
orb
adc
mov
vhsubps
std
xchg
loopne
jnp
popa
shll
jge
shrb
es
gs
lods
or
add
lock
in
dec
dec
testb
aad
ret
test
aas
push
rcl
mov
xor
imulb
fdivl
jecxz
insl
shr
outsl
mov
ficoms
mov
sbbb
sub
push
cmc
in
scas
pop
mov
xchg
sub
sub
lea
sbb
and
cmpps
sti
push
inc
mov
cmpsl
xchg
inc
aad
int3
and
adc
sub
jge
adc
cltd
icebp
push
scas
xchg
daa
aaa
cmc
das
xlat
push
mov
jg
xorb
push
add
ret
pop
data16
ljmp
dec
pop
jnp
push
gs
frstor
adc
mov
mov
xchg
ss
jle
out
xchg
sub
mov
aam
push
and
dec
pop
dec
or
jo
jle
push
fstl
cli
adc
xchg
dec
test
repnz
loope
mov
lods
cmp
push
xor
mov
mov
sbb
cwtl
pop
sub
jo
jl
cmpb
xor
or
inc
jge
inc
xchg
arpl
inc
push
in
sbb
nop
jecxz
jns
arpl
ret
add
xchg
cwtl
cmp
stos
test
jl
adc
scas
sbb
dec
aaa
out
lcall
xor
push
jae
jae
inc
inc
jge
add
pop
test
daa
sub
pushf
adcb
rcrl
xor
sbb
scas
lcall
test
into
sub
orl
add
jnp
push
nop
mov
outsl
mov
stc
adc
jns,pt
cmpsl
test
cltd
ds
xchg
out
sahf
std
xchg
mov
pop
imul
sub
lds
mov
mov
pop
adc
stos
ljmp
xor
push
dec
dec
pop
cmpsb
cmp
mov
call
xor
cmpsb
sub
lds
aam
scas
push
cmp
pop
shrl
xor
jae
ret
out
repz
data16
cmpsl
lods
aas
mov
mov
mov
mov
daa
lods
cmpsl
xor
roll
std
enter
inc
in
lcall
cmp
or
xchg
jp
mov
mov
xor
mov
pop
push
jmp
pop
jb
fsubrs
mov
sahf
enter
mov
jg
xchg
ja
lcall
mov
ss
add
xor
fwait
dec
cpuid
xor
incl
cltd
fnstenv
push
dec
call
mov
add
and
mov
das
sbb
test
jmp
aaa
mov
or
inc
pop
cmp
insb
gs
cmpsb
je
push
inc
fcoml
sub
pop
xchg
mov
fs
imul
xchg
jmp
test
mov
loope
mov
aam
sub
cld
push
xchg
jbe
icebp
fdivrs
mov
dec
cmc
mov
call
aam
aaa
aas
xchg
sub
fldcw
shl
adc
inc
leave
add
xor
out
into
adc
int
mov
out
in
dec
lock
es
test
mov
jl
jne
loopne
mov
push
pop
dec
xchg
adc
inc
dec
call
loop
or
adc
push
cmp
jae
imul
and
cmp
ror
push
dec
lock
mov
mov
jmp
and
popa
add
add
adc
sub
push
loope
xor
mov
lock
dec
mov
ljmp
jl
pop
mov
mov
int
and
test
jne
test
sub
push
or
and
cmc
arpl
adc
notl
mov
jo
sar
outsl
mov
orl
add
es
pop
mov
into
mov
push
mov
xchg
mull
fs
pop
data16
mov
out
cmp
pop
jmp
mov
shlb
xchg
cmp
cli
cld
aad
dec
and
xlat
lods
or
rcll
mov
mov
leave
adc
xor
out
jp
ja
outsl
xchg
adc
faddl
cmpsl
xor
xor
rcl
jb
cli
fnstcw
je
push
sbb
mov
mov
data16
sahf
xor
les
xlat
or
jl
insb
imul
aam
int
mov
lret
mov
mov
cmp
ss
or
or
xchg
sbb
stc
sti
int3
cmp
pushf
testl
xchg
and
jbe
mov
cli
jmp
mov
and
lret
popf
or
shl
call
cmpsl
or
addb
dec
clc
xor
fldt
lahf
int
rol
and
stos
outsb
divb
xlat
add
xchg
popa
shlb
add
pop
int3
push
adc
cmc
orl
pop
cmp
cmp
mov
pop
scas
fstl
cmp
dec
ja
inc
add
das
test
test
icebp
fwait
inc
outsl
fwait
aad
mov
hlt
xchg
sahf
pop
sub
add
rolb
cltd
cmpb
inc
inc
imul
inc
out
fs
push
pop
fstps
push
push
mov
enter
iret
cwtl
pop
lock
jae
add
xlat
leave
bound
ret
cmp
adc
cmpsl
mov
lods
imul
jbe
cs
cmp
add
mov
daa
ljmp
stos
or
sub
jnp
mov
call
pop
mov
scas
dec
pop
xor
mov
jle
cmpsl
jae
outsb
ffreep
mov
adc
pushf
push
ret
loopne
push
jnp
data16
imul
popa
lds
jg
xor
adc
iret
movsb
cmp
jecxz
fisttps
mov
inc
sbb
xchg
rorb
xchg
lret
jg
test
xchg
xchg
and
popa
and
pop
adc
stos
mov
test
push
xor
adc
mov
cmp
pushf
outsb
pushl
xor
pop
fdivrs
pop
jl
push
mov
cmp
adc
xor
push
daa
js
cmp
xchg
shlb
pop
dec
xchg
or
jmp
int
dec
in
bound
enter
cmp
mov
ret
mov
adc
mov
lock
test
pop
imul
push
add
pop
dec
jo
outsb
movb
out
jge
aad
jns
sub
out
and
cmpb
das
jecxz
sbb
xchg
js
fimull
call
inc
outsl
sub
lret
cmp
jmp
inc
and
cld
je
ss
xor
ja
push
rol
adc
or
cld
subl
aaa
pushf
into
or
fsub
cmp
mov
sbb
jg
mov
insl
mov
or
mov
or
adc
sub
add
inc
out
sbb
pop
in
test
sbb
pusha
xchg
xchg
repz
outsl
or
xor
dec
mov
mov
outsl
mov
jnp
cmp
aam
push
fbstp
cs
mov
mov
or
sbb
push
mull
sbb
mov
adc
das
xchg
push
sbb
stc
xor
scas
cmpsb
test
xor
cmp
mov
sub
gs
and
lahf
pop
aas
sbb
pop
sub
sbb
xchg
inc
mov
mov
add
lcall
xor
pop
xchg
sbb
outsl
mov
or
cmp
pop
xlat
sbb
and
test
xor
lds
xor
xor
fiaddl
mov
sbb
xchg
insb
inc
faddl
mov
into
jge
mov
xchg
sub
mov
push
push
mov
inc
loopne
xor
mov
fcoms
les
pop
pop
sub
jle
popf
shll
xchg
mov
cmpsb
repz
cwtl
loop
loop
imull
movsb
testl
loopne
pushf
loopne
jns
adc
sahf
mov
cld
mov
or
int
jno
cmc
lret
cltd
arpl
push
aad
repz
sub
inc
jnp
test
adc
inc
dec
popf
sub
call
cltd
jle
sbb
call
mov
mov
loop
dec
push
mov
mov
lds
rorb
lcall
push
rcrl
or
jecxz
inc
mov
rcrb
push
dec
out
das
or
inc
arpl
orb
leavew
mov
inc
in
dec
add
jne
jmp
push
and
or
mov
dec
data16
pop
rorb
stos
fs
jp
aam
jns
push
aaa
rolb
push
mov
cs
cmp
cmc
lret
inc
mov
cli
or
cld
ds
clc
adc
shlb
sbb
insb
lods
inc
cmp
jo
dec
cmp
and
ss
push
add
lock
into
testl
jnp
cmpsb
mov
jbe
sub
or
nop
lcall
dec
shrb
repnz
mov
pop
sbb
cmp
pop
or
mov
lret
cmp
js
mov
gs
out
sbb
call
lods
ret
cmc
cmpsb
aad
aaa
sub
int
xor
out
mov
adc
xlat
loopne
push
ja
cmp
mov
pop
fbstp
jnp
enter
pop
lahf
and
inc
xchg
loopne
movzwl
cmova
inc
dec
rorb
in
mov
je
icebp
xchg
insl
push
out
leave
push
clc
cld
nop
inc
pushf
jl
add
inc
push
sbb
lea
flds
and
pop
ret
xlat
dec
cld
loop
iret
dec
clc
out
mov
xchg
aad
out
xor
mov
pop
dec
rcll
mov
repnz
lds
repz
cmpsb
push
stos
mov
arpl
sub
lds
adc
jecxz
dec
xchg
adc
jmp
push
dec
pop
dec
xor
jns
rcr
cltd
or
divl
fnstsw
cwtl
push
lahf
or
pop
xchg
jecxz
xor
sub
pop
in
daa
inc
inc
jg
jne
and
aaa
dec
xchg
orl
jne
insl
pop
sub
loopne
or
jo
nop
repz
dec
inc
fwait
pop
sahf
and
popa
dec
mov
out
push
mov
xchg
adc
dec
stc
aad
rolb
inc
push
outsb
inc
push
cwtl
mov
repz
jmp
dec
fcomip
loop
rorb
cmc
push
jb
pop
test
movsl
jbe
das
js
jnp
pop
sub
ds
inc
cmp
mov
sub
sbb
mov
dec
outsl
fldl
mov
mov
jmp
repz
or
pop
sbbl
pop
scas
iret
jle
movsb
xor
clc
int
pop
fucomip
lods
cltd
push
xor
sbb
ror
cmp
push
sub
clc
fcoms
ja
test
lods
and
outsl
dec
dec
clc
jecxz
mov
pusha
sbb
repz
jb
cmp
push
mov
gs
or
or
nop
popf
shll
outsb
mov
gs
add
xchg
cltd
out
fldt
push
cmp
inc
movsl
lahf
out
data16
xchg
fldcw
daa
dec
add
pop
jnp
mov
mov
ds
mov
sbbl
pop
dec
fnsave
and
adc
mov
sub
inc
inc
adc
lahf
sti
dec
mov
push
gs
mov
or
and
add
outsl
mov
cli
pop
test
mov
in
cmc
push
sahf
dec
cmp
push
or
mov
jae
sub
mov
cmc
or
les
adc
mov
stc
xchg
repnz
push
rorl
leave
ret
xor
cmpsl
pop
dec
xchg
idiv
lret
cs
jbe
mov
pop
mov
or
rcr
push
outsl
jge
and
sbb
cmp
xor
and
mov
insl
jge
stc
jg
popa
jl
stos
ja
or
add
int3
cmc
sbb
outsb
rol
fmulp
daa
mov
pop
cmpsb
mov
inc
pop
mov
loop
dec
lret
ret
and
xor
cmpsl
int3
insb
sbb
push
aam
loopne
adc
and
jge
mov
in
shlb
clc
push
adc
fsubs
mov
std
cmp
pop
and
out
xor
dec
cltd
roll
lret
mov
and
mov
sub
inc
jbe
cmp
test
aas
test
add
inc
es
fcmovne
lret
cmpsl
sub
xchg
adc
shlb
adc
dec
ret
outsl
xlat
pop
cli
movsl
shll
pop
push
fdivrs
aam
clc
jo
lahf
not
push
and
sub
ja
mov
mov
dec
or
sar
jl
mov
outsb
jge
pop
hlt
push
jge
xor
aas
or
inc
movd
jmp
jmp
pop
add
in
jo
xchg
into
repz
into
shlb
cmp
jl
pushf
pop
int3
jbe
bound
je
mov
jmp
add
mov
icebp
sbb
xchg
jge
out
add
sbb
mov
jmp
adc
lcall
xorb
stc
mov
popf
andl
lea
pop
xorb
adc
dec
mov
cs
jo
jbe
and
or
loope,pn
adc
lret
cltd
fwait
rcrb
into
cltd
push
dec
sbb
pusha
fwait
and
dec
add
xor
bound
ret
mov
sti
xchg
mov
pop
xor
add
clc
adc
jb
cmp
test
push
insb
test
les
push
xchg
sub
imull
aam
lea
jg
lret
xor
dec
push
subl
mov
mov
mov
sbb
mov
jae
out
rcrb
and
js
pop
decb
mov
dec
rcrb
sub
fimull
mov
out
cmp
mov
sbb
lds
push
adc
or
movsl
mov
dec
cmp
xchg
push
gs
in
sarb
or
aas
mov
test
repz
scas
inc
mov
je
xlat
insl
not
sbb
leave
dec
loop
jne
adc
ret
or
xor
lods
cs
in
fnstsw
jmp
xchg
in
mov
fcoms
daa
sub
jae
push
test
gs
roll
or
sub
push
jno
lcall
movsl
xchg
sbb
jp
and
xchg
mov
cmpl
scas
fidivrs
push
mov
mov
inc
or
mov
sbb
mov
ja
std
push
fistl
loope
jo
cmp
loope
jecxz
fldt
repnz
dec
dec
imul
icebp
in
lods
movsb
out
cmp
mov
pop
mov
adc
inc
leave
pop
inc
mov
mov
mov
das
add
out
xchg
cld
lret
ror
and
dec
sub
dec
and
push
test
mov
mov
aaa
andb
mov
into
fstps
out
jg
outsl
out
dec
jmp
cmpsl
mov
daa
xor
inc
repz
cmp
dec
mov
cltd
cwtl
sub
mov
cmp
imul
inc
rcrb
cld
dec
out
repnz
push
leave
xor
push
mov
mov
xchg
xor
and
rcll
out
out
ret
mov
and
sub
int
cwtl
pop
xchg
inc
pop
test
stos
clc
push
xor
lret
movsb
scas
mov
sti
inc
dec
int3
or
bound
insb
iret
lods
notl
xchg
cltd
test
inc
enter
xlat
pop
popa
cs
stos
stc
jg
outsb
clc
push
jo
cmp
adc
sahf
insl
call
cmpsb
jne
sub
sub
pop
push
sub
dec
xchg
ret
sub
movsb
mov
inc
xor
mov
mov
mov
sbb
push
std
xchg
rorb
mov
nop
push
rclb
ds
mov
int
sbb
leave
pop
mov
mov
push
pop
jmp
and
add
sbb
enter
mov
xchg
je
jnp
mov
add
sti
inc
jp
cli
xchg
xchg
or
jecxz
pop
stos
or
mov
ja
ret
leave
jle
lcall
fisubrl
push
mov
xor
shrl
test
dec
mov
jo
inc
fistps
xor
sahf
fs
or
jl
loopne
fdivl
cmpsl
jb
adc
inc
iret
jno
addb
add
pop
sub
xor
jae
pop
fwait
cltd
pushf
hlt
mov
xchg
xor
add
pop
shlb
add
xchg
fstl
xor
lahf
push
dec
fst
addl
mov
adc
mov
cmp
sbb
sbb
std
lods
ja
push
inc
les
ret
and
jne
nop
mov
pop
cmp
dec
mov
pop
inc
push
xchg
inc
jns
ds
cmp
faddl
mov
js
pop
xor
mov
mov
movsb
xlat
add
sbb
fcoms
pop
cli
outsb
in
cmp
push
es
bound
std
or
pop
ficompl
int
popa
push
push
pop
jmp
inc
add
icebp
ja
movb
out
jle
repnz
cmp
jns
or
push
movsl
sbb
aas
movsb
cs
loopne
adc
stc
mov
lock
cli
cli
ljmp
add
aam
lahf
pop
orl
pop
test
add
addr16
mov
fwait
aas
sub
push
jns
bound
leave
pop
dec
adc
mov
hlt
dec
fsts
push
xor
clc
pusha
lds
mov
fldenv
adc
loop
iret
ja
movsl
orb
movl
adc
imul
jno
sub
fimuls
mov
mov
mov
jns
in
out
jb
cmp
iret
enter
imul
mov
call
mov
cmp
outsb
dec
dec
int
jmp
xor
out
in
enter
jns
ffreep
subl
cmp
pop
fs
ds
mov
test
daa
or
xchg
ss
xor
pop
pop
std
add
daa
jge
push
sti
shr
mov
cmpl
pop
shl
mov
divb
in
mov
adc
mov
fdivs
and
jo
mov
je
mov
inc
loopne
mov
push
xor
je
mov
lds
inc
adc
adc
dec
xlat
xor
adc
jg
popa
and
sub
mov
jo
pop
sbb
and
and
rclb
out
jmp
dec
fadd
aaa
mov
jbe
and
jb
mov
push
incb
and
mov
fldcw
sbb
and
pop
mov
into
ret
dec
xchg
add
mov
xchg
mov
and
mov
fnsave
ljmp
daa
inc
ss
inc
xchg
mov
jecxz
lods
lods
lret
mov
les
xchg
loope
fcoms
add
add
pop
xchg
loop
mov
out
and
fucomp
sbb
mov
cli
mov
mov
xchg
mov
add
xchg
mov
int
xlat
sti
push
fwait
lds
leave
subl
insb
inc
or
xor
or
xor
inc
cmp
push
outsl
xchg
negl
xchg
xor
shll
or
xchg
add
pop
ret
ret
iret
lods
or
je
jne
mov
sub
jne
ss
cmp
bound
test
insl
stos
fs
out
add
xor
cmp
add
mov
rcrb
sub
dec
andb
dec
imul
adc
xorl
pop
bound
adc
stos
cli
out
imul
xor
jbe
imul
int3
inc
sub
or
addb
push
sub
xchg
or
add
push
add
addr16
cs
cmp
xlat
dec
mov
sub
cmpsb
sub
and
mov
jmp
xor
and
rcrl
mov
inc
adc
push
dec
in
cli
and
out
pop
jb
xchg
push
mov
scas
imul
stc
pop
add
les
pop
lock
or
inc
enter
pop
sub
push
push
jbe
mov
insl
inc
lret
fs
mulb
clc
loope
out
inc
mov
out
pop
push
addr16
dec
cmp
mov
pop
ret
push
adc
push
push
icebp
xchg
repnz
jns
movsb
lds
sbb
sarb
rcr
mov
jecxz
das
dec
inc
das
mov
xchg
or
fwait
aaa
inc
xor
push
aad
movb
cwtl
pop
outsb
xchg
jl
test
in
sub
push
lock
mov
lods
dec
pop
imul
sbb
iret
jne
jmp
jae
mov
xchg
repnz
mov
and
cmp
imulb
push
push
sbb
push
into
int
sub
icebp
add
cwtl
xchg
push
inc
aam
lods
xchg
xchg
iret
ja
inc
shrb
fistl
lock
inc
ja
adc
xchg
xchg
loopne
xlat
outsl
add
mov
mov
in
xchg
stc
dec
mov
jnp
scas
xor
gs
mov
aaa
pop
adc
ss
mov
andb
jns
movsb
or
jnp
shlb
sbb
ret
dec
push
pop
ss
int
mov
push
test
push
jae
call
insl
outsb
adc
mov
push
mov
cmp
faddl
popf
pop
test
test
mov
mov
outsb
sahf
in
mov
repz
cmpsl
sbb
repz
ret
adc
test
addr16
xor
or
mov
or
jg
fiadds
mov
sbb
fcompl
cmp
fs
xor
into
xor
addl
test
sbbl
cmp
add
jl
jl
jns
repz
push
inc
int3
sbb
push
stc
pop
mov
popa
fs
mov
imul
loopne
cs
sub
xchg
outsb
xchg
repz
int
mov
lods
popa
and
in
mov
sub
and
fcoml
ret
or
les
scas
in
mov
bound
sub
cld
inc
mov
mov
ret
gs
cmp
adc
push
fldenv
icebp
enter
je
jne
cli
mov
dec
test
sub
mov
adc
pop
cmp
lock
add
mov
test
adc
insl
inc
ret
hlt
push
or
push
stos
cmp
adc
xchg
or
scas
push
jb
pushf
test
sub
pop
xor
popf
mov
jp
xor
mov
test
xlat
pushf
dec
mov
push
sbb
and
add
lahf
adc
rep
mov
pop
sub
pop
cmp
mul
mov
fbstp
dec
adcl
popa
je
jne
gs
push
mov
inc
das
mov
fldcw
xchg
jo
out
sbb
hlt
sub
mov
push
movsb
test
insb
xchg
adc
jae
jge
mov
in
xchg
ja
push
or
push
jno
call
jmp
adc
lret
fcmovu
pop
and
shlb
fbld
pop
fisubl
pop
pop
stos
inc
xor
pop
lcall
or
ret
push
jmp
push
xchg
insl
inc
mov
push
in
dec
stos
or
or
and
push
xorb
mov
dec
push
or
push
and
out
ficomps
jp
sbb
ljmp
xor
cs
jge
sbb
ds
fs
sub
jnp
loopne,pn
popa
imulb
adc
adc
lret
ljmp
clc
pop
adc
in
lcall
and
fs
loopne
out
pushf
dec
popf
pusha
mov
addr16
loopne
jnp
inc
mov
jnp
sbb
sti
pop
sbb
lcall
sub
dec
pop
push
xchg
xor
xorl
inc
scas
shll
shrb
inc
int
and
std
pop
ret
xchg
insl
mov
in
mov
ljmp
sti
test
dec
jecxz
pop
std
mov
mov
push
int
pop
shl
adc
xchg
adc
outsl
adc
jo
dec
or
fdivl
bound
in
and
or
xchg
pop
jo
sbb
sbb
addr16
sbb
dec
rcrl
sbb
int3
sub
fsubr
or
cltd
dec
cld
fcom
imul
push
pop
lcall
ret
cmp
sub
cmpsl
jle
and
cmpsb
and
and
scas
add
mov
sub
insb
lods
pusha
cmp
lea
hlt
add
or
mov
mov
movsl
mov
sbb
xchg
and
xor
xchg
push
sub
sbb
jl
aas
mov
lea
xchg
xchg
push
inc
jo
fildl
adc
subb
xlat
gs
xor
jne
popf
mov
test
push
imul
loope
lods
jo
bound
mov
pop
lahf
rclb
clc
nop
rolb
sub
or
addl
mov
pop
mov
les
or
cmc
or
andb
mov
cmc
fwait
adc
inc
inc
and
les
xchg
inc
push
cmpsb
pusha
inc
std
pop
mov
lock
xor
insl
shlb
mov
mov
jno
or
insb
sahf
or
add
test
mov
jle
lock
cltd
adc
lock
addr16
gs
test
popa
jae
push
mov
test
mov
in
jl
xor
mov
dec
mov
or
xor
daa
inc
mov
ret
cmovg
adc
inc
pusha
jno
addl
mov
and
push
outsb
test
pop
mov
loopne
cli
xor
and
es
addl
cwtl
dec
pop
push
xor
mov
pmaddwd
inc
jge
lret
pop
sbb
or
and
inc
std
jge
jle
push
mov
cmp
adc
in
xor
jb
clc
stos
mov
stc
arpl
or
xchg
push
mov
sub
add
push
sub
or
int
sarl
sub
push
xchg
popa
sub
cmp
fdivrs
aas
and
mov
xchg
loop
frstor
mov
jo
insl
xor
call
mov
out
mov
push
notb
rorl
or
ljmp
and
inc
mov
pop
repnz
imul
and
std
cmp
push
pusha
lret
jle,pn
lock
mov
js
out
nop
cmp
adc
inc
jle
jbe
movsb
test
cmp
dec
push
mov
xlat
adc
jl
jmp
scas
fisttpll
and
sbb
into
rolb
icebp
mov
push
xchg
dec
in
sub
cmp
dec
cmp
pop
mov
sbb
inc
jne
jmp
adc
fistpll
mov
lods
cmpb
repz
mov
jl
je
mov
mov
rorl
in
push
lahf
mov
lds
out
popa
adc
xor
int
jp,pt
mov
pop
les
pop
bound
lods
mov
mov
ficomps
sbb
xchg
and
enter
jg,pt
out
sub
out
xchg
xor
sub
and
lods
sub
scas
adc
xor
pop
jp
or
rcl
mov
leave
and
mov
add
xchg
lcall
dec
jp
mov
adc
test
mov
pop
cmp
jmp
push
lock
mov
xchg
xchg
mov
mov
xor
pop
inc
sbbb
dec
and
out
cmp
int3
mov
popa
jbe
jbe
mov
aas
les
mov
jmp
or
sbb
or
xchg
jmp
lret
pusha
cmc
rorl
sub
add
mov
in
sbb
fistpll
or
dec
push
jmp
sbb
lea
mov
mov
decb
gs
mov
dec
push
sub
aas
inc
push
fwait
mov
orl
and
mov
pop
scas
test
insl
pop
jmp
cli
or
fwait
and
pop
lods
or
lret
pop
popf
adc
ja
sahf
popf
pop
lret
out
push
lea
push
pop
xchg
inc
stos
jmp
loope
mov
and
add
pop
icebp
call
mov
xchg
cmp
xchg
pop
pop
cmc
xchg
inc
cltd
push
subl
ljmp
scas
fisttpl
inc
jnp
pushf
hlt
rol
jno
add
addr16
mov
cmp
add
mov
inc
movl
dec
sti
xchg
sahf
fstps
mov
xor
pop
xchg
lods
arpl
div
jnp
sub
mov
push
sti
jmp
sub
mov
mov
dec
idivb
adc
lret
cmp
addr16
xlat
mov
sub
jnp
push
and
push
mov
lds
movsl
outsb
das
dec
push
clc
aam
stos
aam
movsb
sbb
pop
fstpt
and
call
mov
outsl
iret
mov
xchg
mulb
movsb
and
fimull
fdivs
frstor
inc
and
out
pop
int3
sti
mov
push
jnp
and
sbb
adc
jmp
push
xor
sub
mov
or
es
push
cmp
imul
mov
cwtl
mov
or
adc
mov
cmovns
pop
repz
sti
cmp
hlt
push
in
xorb
adcl
lret
jmp
movb
hlt
arpl
popa
mov
lret
and
cmpsl
pop
adc
mov
inc
xlat
rcrl
dec
lock
dec
inc
mov
out
cmp
cmp
dec
adc
data16
bound
pop
push
pop
pop
push
sti
mov
in
loope
leave
mov
pusha
cmp
adc
pop
fs
mov
std
cmp
jp
fnstcw
and
and
push
lods
sarl
enter
dec
or
or
movsb
dec
orl
and
pop
addr16
out
add
flds
adc
xchg
sarb
xchg
mov
fcmovnu
jae
test
xchg
jge
mov
cmp
sbb
jmp
mov
mov
cmpsl
sbb
lcall
cmp
pop
out
jae
cltd
iret
into
dec
xor
cmpsl
pop
popa
icebp
popa
decl
mov
jmp
cmc
call
leave
xchg
pop
sub
push
sti
mov
testl
mov
dec
out
push
dec
mov
insb
daa
enter
sarl
xchg
mov
dec
cmc
adc
add
lret
lea
cmc
mov
jae
mov
iret
es
jp
cmp
pop
pop
inc
mov
fildll
out
jae
lock
or
leave
sti
push
adc
les
jl
negl
xor
push
cmp
mov
push
aad
ret
sub
ret
adc
xor
lahf
shrl
mov
scas
std
lret
or
call
mov
sbb
repnz
inc
jl
mov
xor
fsub
out
roll
push
mov
je
in
or
push
fcoml
adc
out
andl
jp
jp
scas
int3
mov
das
ja
xchg
adc
mov
dec
das
cld
lahf
inc
ja
in
ja
mov
push
iret
fisubrl
cld
cmp
xor
push
push
or
cmpl
xchg
push
sub
jle
mov
lods
pusha
or
sbb
xchg
or
popa
push
pop
cwtl
cmp
call
jbe
aas
mov
jmp
xor
push
push
pop
inc
gs
pop
test
popf
loopew
mov
sub
clc
fsubr
mov
xchg
and
in
sub
es
lret
xchg
pop
call
cmp
mov
push
xchg
in
push
inc
dec
les
dec
sub
jb
lods
std
fwait
pop
sahf
shll
and
out
iret
jae
sub
sbb
inc
or
push
fldcw
movsb
and
and
sub
pop
adc
mov
jne
in
push
xor
push
jg
mov
hlt
push
or
dec
inc
ficompl
popa
mov
mov
loope
and
out
and
pop
dec
pop
push
jb
in
shll
out
cmp
icebp
jecxz
mov
pmulhuw
imul
and
sbb
xchg
aas
pop
jl
cmp
movl
fidivrs
sbb
out
mov
mov
xchg
cmp
sub
sarl
cltd
test
lds
mov
fcompl
xchg
cld
fstl
fwait
decb
push
xchg
roll
addr16
sbbb
mov
scas
scas
add
mov
add
jmp
movsb
dec
pop
xor
cmp
ror
mov
xchg
fidivs
sbb
sub
and
das
xchg
test
jnp
pop
jg
sahf
adcb
outsb
daa
int
cs
push
sti
cmp
inc
scas
addr16
lahf
into
push
lret
xor
test
je
leave
add
cmp
int3
test
jle
out
pop
and
ror
nop
mov
movsb
cs
add
inc
push
cmpsl
cltd
int3
sahf
mov
mov
or
xchg
or
push
mov
insb
test
jns
mov
testb
mov
ljmp
pop
movsl
push
repz
int3
ret
dec
test
test
inc
imul
lret
cmp
cmpl
nop
xchg
rorb
xchg
iret
rol
in
sbb
popa
es
or
xchg
arpl
rol
dec
push
inc
inc
iret
mov
mov
cltd
int
adc
adc
pop
mov
cmp
xchg
dec
pushf
jns
inc
xchg
cmpsb
lods
add
jl
data16
fucom
mov
es
in
dec
and
mov
testl
push
cmpsb
jle
xchg
int
add
xcrypt-ofb
cmpsl
in
and
hlt
jg,pn
adc
sub
add
repnz
mov
pop
hlt
sbb
xor
imul
das
subb
ss
push
out
sub
scas
sub
dec
emms
dec
testb
jbe
stc
shlb
repz
mov
and
sbb
mov
sbb
std
addb
dec
fisttpll
stc
push
cltd
and
orb
aad
sub
jae
js
outsb
rorb
mov
imul
outsl
sti
sub
push
lds
jnp
lret
iret
lret
cld
fldcw
sbb
xor
mov
test
fbstp
mov
add
aam
cmp
jae
sbb
incl
fwait
std
jo
cwtl
insb
sub
movsl
or
push
jb
bound
dec
test
push
add
fmuls
test
icebp
xchg
push
jne
mov
movl
xchg
jmp
enter
mov
push
cmp
mov
add
push
int
cmpsb
xor
xor
jecxz
mov
fidivrs
test
mov
dec
test
cwtl
pop
ret
cmc
and
lcall
mov
xor
out
fildll
xchg
lret
lods
insb
xor
sub
and
jbe
dec
pop
sbb
vmread
cwtl
sub
adc
mov
insb
xchg
call
xchg
mov
insl
cmpsl
jle
xchg
push
shrb
or
jno
mov
pusha
dec
cltd
adc
cld
fs
fs
fdivrs
pop
test
sub
or
and
mov
dec
sub
inc
cld
add
out
and
mov
sbb
adc
inc
addr16
les
icebp
aam
sub
fs
insl
repz
dec
mov
dec
dec
push
fstpt
pop
cmpsb
xchg
inc
aas
lcall
mov
pop
dec
movsb
clc
sbb
jno
lock
sbb
adc
pop
cmp
push
imul
ret
addr16
mov
les
and
orl
adc
fsts
ficoml
stos
clc
pusha
xchg
adc
ss
shrb
push
add
cmp
movsl
xor
mov
fs
sub
out
rorl
add
xor
pop
es
in
jbe
sub
aad
fisubl
imul
daa
mov
xchg
jl
jg
out
lods
pop
mov
lret
mov
push
cmp
pop
mov
mov
lods
int3
es
cld
adc
adc
jbe
jge
in
adc
xlat
add
out
je
xor
cmovp
xchg
stos
hlt
jg
adc
sub
cmc
lea
dec
mov
sbb
pop
arpl
rcrb
stos
mov
inc
call
insl
imulb
outsb
ret
dec
mov
xchg
pop
jns
add
jb
loope
lock
xor
inc
scas
sbb
sub
dec
mov
push
es
idivb
test
pop
adc
jne
loopne
mov
ret
loope
mov
iret
call
das
pop
ror
push
call
lea
lock
mov
push
ret
and
push
in
xchg
sbbb
mov
mov
mov
jae
jae
inc
mov
call
mov
out
std
in
addl
or
xor
mov
mov
fnstenv
enter
add
daa
cmpsl
push
daa
repz
sti
outsb
and
std
add
aaa
sbb
nop
pop
shll
loope
pop
push
inc
push
sbb
stos
mov
jns
cwtl
pop
call
sbb
out
lahf
aad
out
push
adc
adc
clc
call
imul
jb
inc
push
rorl
xor
xlat
stos
outsl
cmpsl
sub
mov
jns
adc
cmp
adc
insb
adc
dec
in
push
xchg
jo
push
push
cmp
dec
adc
dec
mov
mov
test
cmp
cs
pop
ret
pop
in
sarl
jns
repz
sub
repz
mov
fsubl
test
xchg
jo
xchg
and
or
pushf
xchg
jae
push
std
fwait
lret
sti
push
sbb
cmp
inc
pusha
insl
mov
sub
or
mov
data16
push
imul
xor
fimuls
std
fcomps
iret
outsb
pushf
and
xor
mov
in
inc
mov
aam
push
adc
add
scas
cmp
mov
mov
adc
jo
push
add
add
dec
inc
mov
pushf
sub
inc
insl
push
or
mov
mov
adc
xchg
js
adc
inc
shrb
jle
dec
adc
mov
out
dec
dec
inc
push
cmp
sarl
pop
mov
sbb
mov
fyl2x
push
pop
outsl
ret
push
stc
out
pop
push
pop
push
or
xlat
popf
dec
dec
iret
inc
pop
sub
adc
test
adcb
push
orl
test
inc
xchg
dec
xlat
or
mov
mov
into
sbb
push
aam
mov
lock
dec
push
mov
inc
scas
ss
roll
jae
sbb
ds
fwait
hlt
push
stos
or
add
dec
pop
rcr
inc
add
ljmp
mov
sti
push
es
jecxz
aam
xchg
pop
lock
int3
mov
push
add
lret
outsb
insl
sub
lret
adc
popf
into
mov
les
hlt
mov
sbb
and
cmp
pop
sub
cmpsb
adc
call
sbb
int
div
mov
scas
xchg
mov
pushf
jbe
shrb
mov
ja
lock
inc
lcall
jb
push
cmp
imul
dec
ja
add
stos
mov
inc
jno
nop
ljmp
jb
mov
and
mov
cmp
add
jo
mov
fisubrl
ficomps
cli
nop
aaa
jbe
fnstsw
sub
mov
xor
adc
test
shlb
mov
lds
fisttpll
push
lock
pop
mov
jp
mov
mov
xlat
xchg
int3
repnz
xor
fidivs
fwait
push
cmp
xchg
pop
push
mov
push
push
pop
loopne
jne
arpl
sahf
pop
sti
fidivrs
lahf
bound
inc
rolb
pusha
push
clc
insb
sbb
icebp
pop
push
div
dec
fldcw
stc
mov
rclb
jnp
inc
add
jbe
cmp
inc
mov
cmp
cmp
fstl
mov
xor
and
cli
fs
dec
mov
push
push
hlt
sbb
inc
mov
xchg
xor
adc
leave
jb
clc
dec
push
ja
cli
xchg
sub
jnp
idiv
mov
inc
jmp
fiadds
enter
lods
pop
movsl
ja
lock
push
and
clc
jae
loop
push
push
sub
push
iret
das
ljmp
pop
push
jg
inc
lahf
rorb
das
lods
lds
inc
test
int
sub
jecxz
ja
sbb
dec
pop
rol
lret
inc
xor
repz
ret
enter
inc
sbb
xor
scas
mov
mov
xor
or
addb
cld
negb
scas
adc
mulb
inc
jp
bound
and
out
into
and
dec
cmp
inc
addl
sub
aaa
insl
pop
arpl
repnz
inc
dec
into
repnz
inc
adc
add
cmpb
inc
dec
nop
adc
icebp
push
loopne
adc
sub
mov
insl
int3
or
iret
fcomps
out
mov
adc
or
mov
icebp
shl
int
mov
add
jae
jp
nop
clc
inc
mov
movsb
jl
mov
jb
jg
dec
ljmp
daa
inc
pop
sbb
aaa
xchg
pop
jg
call
and
sti
sub
jge
jne
push
push
xchg
clc
es
cmpsb
mov
es
mov
imul
cmp
scas
and
adc
movsb
xchg
shl
std
cld
jmp
aas
or
mov
lahf
mov
int
decb
mov
or
lods
push
in
pushf
movsb
aaa
mov
lea
mov
mov
call
out
xor
test
mov
and
repnz
fwait
sbb
test
leave
ror
pop
or
push
push
sub
jp
mov
fwait
outsl
and
and
push
mov
test
inc
mov
in
push
incl
add
sub
shlb
mov
mov
daa
mov
aad
nop
into
xor
ljmp
adc
pushf
jbe
inc
xor
shrl
push
ljmp
push
xor
movsb
arpl
icebp
inc
pop
ljmp
cld
add
mov
add
cmpl
jns
push
sub
lods
sbb
or
nop
lock
push
or
movsl
outsl
adc
sub
les
inc
data16
lods
dec
cld
test
dec
sbb
pop
dec
push
lret
test
movsb
popf
jb
adc
xor
jns
jb
sbb
push
adc
arpl
test
jge
mov
cld
mov
orl
and
jne
inc
data16
icebp
sbbb
lods
add
and
sti
cmp
jnp
xrelease
push
out
or
push
pop
pop
fstps
addr16
mov
lods
push
add
sub
sbb
and
stos
mov
ja
and
pop
fsubrl
lcall
out
xchg
xor
jo
insb
push
lds
movb
jno
push
dec
loopne
pop
popa
xchg
cld
push
push
add
js
imulb
shll
shl
and
lret
lods
adc
into
push
dec
fsubs
cmp
addr16
sub
adc
into
inc
inc
shll
rorl
scas
push
rorl
ja
jnp
push
dec
jbe
or
aaa
inc
adcb
sub
mov
ds
outsb
pop
outsl
sbb
adc
insb
push
and
sub
pop
and
int3
add
adc
jbe
dec
clc
mov
mov
fnstcw
leave
ljmp
dec
inc
outsl
pop
mov
fwait
inc
cmpxchg
push
mov
fisttpl
jmp
or
sbb
mov
pop
xchg
or
mov
ret
stos
sarb
dec
jp,pt
xor
sub
pop
adc
lret
mov
dec
jle
ret
leave
inc
add
mov
and
stc
inc
in
adc
push
xchg
lea
xchg
les
inc
pop
bound
dec
fcmovne
and
and
cmc
adc
cs
mov
and
push
inc
shll
jnp
lret
enter
mov
cmp
jle
adc
cmc
fxch
sub
add
cli
imul
cmp
cmp
jmp
iret
sbb
repnz
test
inc
das
in
lods
dec
push
push
mov
adc
lcall
fs
pop
std
repnz
mov
loopne
or
mov
push
fmull
loope
or
fdivl
scas
mov
movsb
fdivrl
inc
jbe
mov
add
or
imul
subl
sub
sub
div
mov
jl
mov
push
xchg
sti
cs
scas
mov
notb
sbb
push
inc
cmc
mov
xchg
cli
out
sbb
mov
mov
lret
sarb
xor
adc
add
je
or
sahf
mov
and
push
imul
fbld
int
dec
clc
mov
xchg
mov
adc
inc
subb
lods
pop
and
push
loop
push
jo
scas
add
cmp
mov
pop
xchg
pushf
adc
cmp
pop
fnstenv
cmp
mov
into
outsl
sub
cmp
dec
xchg
lds
sti
adc
add
inc
mov
sbb
nop
mov
cwtl
sbb
sub
pop
xor
xchg
out
cmp
pop
inc
out
mov
test
add
cmpsl
sub
je
push
divb
mov
mov
rcl
pop
es
jo
xchg
cmp
insl
push
mov
cmpsb
imul
daa
add
sahf
jmp
add
and
and
jp
push
add
loope
cmc
loop
adc
push
mov
fdivl
mov
ficoml
sub
cmpsb
pop
mov
xchg
adc
or
mov
mov
and
and
adc
filds
loope
xchg
movsb
daa
orb
jmp
ds
call
jmp
pop
out
loopne
fisubrl
jl
cmpsl
mov
loope
popf
jne
iret
push
push
clc
clc
or
xchg
pop
and
sub
emms
icebp
fdivrs
push
push
mov
or
mov
inc
insl
lret
sub
int3
fsubrs
jo
fimull
fisttpl
fdivrs
dec
inc
adc
mov
sub
stos
xchg
ret
jge
mov
movsb
adc
add
dec
scas
pop
dec
notl
xchg
loop
test
sahf
push
xchg
dec
inc
or
cmp
lret
inc
cld
cwtl
dec
adc
mov
xlat
in
xlat
int
aas
int3
mov
jae
push
addr16
pop
adc
outsb
jno
insb
push
arpl
adc
mov
and
cmp
jbe
cs
jle
js
pop
jno
cmp
cmp
sub
aas
adc
stos
rcrl
xchg
lahf
mov
cwtl
lods
and
push
inc
js
pop
lds
cmpsl
sbb
iret
outsb
adc
cmc
jecxz
inc
sub
push
mov
sub
pop
dec
sbb
aam
cmp
add
push
mov
cmc
sub
lahf
cmp
fidivs
cli
xchg
jbe
add
popf
fiadds
adc
dec
lods
in
cmpsl
incb
push
rcl
jo
movsl
push
or
popa
jmp
outsl
aaa
ficompl
stos
sbb
xor
push
xor
loop
dec
adc
orl
adc
cmp
dec
mov
xchg
xorb
mov
mov
adc
mov
aam
or
push
xchg
das
divb
mov
les
push
addr16
mov
pusha
sub
push
push
jge
dec
das
dec
adcl
xlat
leave
in
pop
mov
pop
das
jbe
sbb
ds
pop
xchg
cltd
leave
int
shll
out
xchg
mov
jno
repz
sub
mov
sub
sbb
bound
dec
xchg
cmp
mov
aad
and
lret
scas
jle
lods
pop
scas
jne
sub
adc
cmpsl
testl
das
mov
jo
rol
push
mov
mov
xor
push
psraw
in
cwtl
push
inc
pop
in
lds
test
outsb
call
loopne
enter
pop
test
out
movsl
jge
push
push
or
jns
pop
push
dec
arpl
dec
xchg
rcrl
adc
adc
mov
add
sbb
sub
mov
mov
push
push
and
push
pushf
push
push
aam
aas
pop
mov
testl
cmpl
testl
lret
xor
sbb
and
pop
mov
outsl
push
loope
je
push
test
arpl
enter
pop
idivb
lods
test
popa
adcl
pop
mov
push
aas
xor
lahf
adc
cmpsl
test
cmp
outsl
shl
clc
push
inc
jg
jecxz
loope
lahf
mov
mov
cmp
cmp
and
sub
cli
ds
je
jb
jbe
mov
gs
addb
jecxz
and
mov
jmp
xlat
xchg
sub
call
inc
dec
test
cwtl
test
ja
add
imul
mov
and
or
jae
xchg
xchg
std
in
sbb
pop
jle
loope
sub
lahf
pusha
clc
int
xlat
out
shlb
sbb
ficompl
js
pusha
and
xor
jne
lods
fwait
add
call
rorl
in
adc
or
jb
std
testl
sbb
xor
pop
adc
mov
iret
imul
lcall
mov
inc
mov
lcall
cmpsl
jnp
pop
xlat
adc
sub
mov
iret
push
movb
movsb
loope
test
pop
loop
and
jo
sbb
or
in
sbb
mov
mov
add
push
je
or
jbe
xor
lahf
jg
dec
scas
lock
shl
xor
mov
sub
lcall
and
or
cmp
subb
inc
cs
sub
inc
xchg
lea
jb
jae
insb
jge
sub
jnp
mov
lea
jns
sbb
adc
adc
xor
xchg
incb
dec
into
jecxz
adcl
dec
sub
data16
or
jmp
aaa
push
adc
call
inc
test
sti
push
in
adc
rorb
sub
not
push
inc
repnz
pop
bt
dec
mov
dec
clc
or
jne
out
mov
jle
out
cmp
pop
icebp
dec
sbb
mov
jle
lahf
inc
inc
js
mov
scas
xchg
jae
out
dec
xchg
jge
ljmp
inc
jg
adc
cmp
pop
in
mov
and
xor
jecxz
push
mov
xlat
push
sub
rcll
in
push
jo
adcb
mov
push
adc
jge
je
sub
pop
fstps
dec
cli
popf
push
jbe
and
in
mov
push
ss
sbb
stos
iret
sub
popa
pop
cmp
repz
jge
outsl
xchg
sub
ss
ror
xchg
and
jl
push
incl
shrl
dec
pusha
mov
aad
adc
iret
lds
adc
mov
aad
dec
adc
fcmovu
incb
mov
push
imul
outsl
xor
and
imul
stos
pusha
cmc
loopne
push
jl
xchg
divl
mov
xchg
addr16
jno,pt
ss
mov
push
sub
hlt
jo
mov
in
xchg
sbb
pop
inc
ret
xor
mov
push
push
xchg
xchg
xor
adc
add
dec
adc
jp
test
shrl
popf
outsl
mov
add
bound
adc
aaa
movsb
push
dec
sub
je
stos
and
adc
cs
mov
sbb
negl
fdivrs
jnp
mov
adc
popf
sbb
insb
popa
cmp
mov
cmp
inc
cli
sub
xor
add
rcr
and
int3
ret
rolb
jae
push
inc
fwait
xor
mov
shl
lahf
or
prefetch
inc
repnz
test
fimull
pop
js
in
rcll
adc
xor
mov
test
imul
lea
and
xlat
xchg
mov
cmp
pop
lea
hlt
add
arpl
test
fidivl
inc
jg
rcrb
fs
sbb
cmpl
and
call
xorb
push
xor
sbb
lods
adc
scas
lret
push
clc
push
in
popa
shlb
xchg
lea
and
xor
or
mov
ds
xor
cmp
xchg
out
push
mov
mov
inc
ljmp
jnp
in
stos
pop
js
or
sbb
cmovge
sahf
mov
adcb
fiaddl
scas
cmp
mov
cld
lret
in
adc
dec
shrl
inc
shll
sub
mov
adcl
inc
add
mov
dec
mov
sbb
outsb
daa
rclb
shr
cmpsl
jecxz
cmpsl
sbb
sahf
cld
and
jle
inc
mov
mov
jno
pop
push
add
popf
mov
rcrb
or
inc
jno
scas
push
adc
cmp
ret
movsb
scas
adc
jle
cwtl
xor
mov
jbe
pop
js
test
pop
sbb
aas
test
dec
dec
jbe
push
mov
cmp
out
jno
or
mov
insb
jb
popa
inc
or
sub
stos
lock
fistpll
push
and
dec
rcl
mov
gs
pop
shlb
imul
clc
pushw
xchg
add
scas
shrl
std
jns,pn
cmpsb
sub
inc
cmp
push
mov
jge
aaa
daa
jne
icebp
loopne
or
jb
add
xchg
mov
or
push
clc
gs
cmp
xchg
inc
xchg
scas
movsl
in
mov
mov
and
inc
sbb
das
test
jb
cld
mov
testl
in
add
or
pop
adc
out
or
leave
hlt
cmp
or
adc
aaa
loope
aas
jle
cmp
xor
sbb
inc
leave
adc
push
out
nop
add
and
pop
ret
out
out
test
cmp
mov
add
scas
movsb
lea
push
jge
jb
xchg
jb
cmp
loopne
cltd
scas
jno
push
adc
jg
inc
sub
test
mov
addr16
xor
inc
mov
push
in
out
or
xor
lods
sub
leave
lcall
lahf
push
insl
adc
int
mulb
push
xor
pop
inc
scas
sahf
sbb
ror
lcall
xor
cmp
dec
loop
and
jecxz
xchg
jle
adc
ljmp
nop
je
or
xor
repz
mov
inc
idivb
dec
in
push
mov
cmc
mov
jl
jne
sbb
fcmovu
icebp
mov
mov
push
rcl
xor
pop
fcoml
les
sub
outsb
pop
mov
out
nop
and
int
jo
or
mov
mov
fiadds
movsl
dec
push
sub
mov
inc
add
imul
daa
outsl
addl
cld
sarl
adc
sarl
inc
sbb
jl
xchg
dec
outsb
add
xchg
outsb
iret
xor
aam
and
outsl
les
and
mov
pushf
sub
hlt
mov
scas
sbb
insl
pop
xor
fmull
xchg
pop
fmul
jae
movsb
mov
repz
push
and
sub
pop
xchg
imul
xor
arpl
in
cld
and
xchg
bound
dec
adc
inc
test
lret
dec
mov
jae
push
xchg
adcb
add
adc
sub
stc
data16
insb
add
aad
popf
aad
out
sbb
add
movsb
pop
pop
sbb
fstpt
push
test
or
in
aaa
insb
shlb
mov
mov
or
cli
movsb
pop
mov
aaa
out
pop
pushf
dec
add
pop
movb
cwtl
stos
in
sbb
jge
repz
xor
sub
into
fidivs
lret
xchg
cs
xchg
mov
adc
xor
mov
sub
loop
inc
cmc
imull
push
es
cmpxchg
dec
pushf
aad
mov
aaa
fbstp
xor
xor
test
in
sub
out
sarl
sahf
outsb
or
push
cmpsb
imul
adc
insb
pop
inc
add
mov
stos
imul
jecxz
cmp
mov
outsb
sub
pop
outsl
or
add
xor
in
cltd
cmp
fistl
mov
sub
inc
imul
and
mov
outsb
xchg
cmp
faddl
jp
xchg
mov
sub
in
adc
push
push
xchg
cmp
push
loop
ret
les
mov
cmp
add
out
fildll
mov
and
xor
scas
push
mov
mov
sarl
out
sbb
mov
jecxz
and
jle
add
push
sbb
fldcw
xchg
mov
pushf
lcall
xor
adc
mov
mov
xor
nop
fists
nop
popa
fs
pop
out
lcall
mov
aaa
xchg
xchg
imul
out
add
xlat
out
shrl
push
mov
sbb
out
jmp
push
lret
aas
mov
fidivrl
and
dec
adc
out
or
int
add
add
vrcpps
sqrtps
clc
pushf
movsb
mov
cwtl
int
xchg
shll
pop
push
outsl
xchg
sub
pop
int
in
inc
and
lds
iret
fisttpll
lock
aad
cltd
lds
loop
pop
loopne
clc
push
out
je
push
scas
lds
bound
out
insl
and
inc
test
sbb
mov
dec
pop
pop
inc
sub
mov
push
jp
into
aam
jp
movsl
jno
int3
fdivs
jae
jp
test
fdivl
imul
cmpsl
inc
jmp
inc
inc
idiv
sbb
cmpsb
adc
pop
xchg
mov
enter
push
ror
aad
cmpsl
imul
insb
popa
jne
stc
mov
ds
ficoms
lds
and
out
addr16
gs
add
and
sti
sbb
loopne
arpl
scas
cmc
mov
jnp
adc
daa
insl
loope
mov
adc
jecxz
inc
mov
and
xor
shrl
inc
ret
or
mov
pop
jnp
lea
jno
cmp
mov
mov
jae
ret
cmpb
push
dec
jnp
push
mov
mov
outsl
pop
xchg
ret
out
lcall
or
vpunpckhwd
dec
insb
sub
cwtl
xchg
icebp
or
cmp
aas
outsb
jae
dec
in
dec
push
xor
into
xchg
push
fdiv
popaw
mov
test
call
xchg
in
fildll
popf
ds
fisubrs
js
jnp
mov
mov
in
pause
add
jmp
push
jl
mov
sbb
jno
add
xor
test
or
pop
loopne
sbb
fisubrl
mov
cmp
pop
mov
cwtl
and
test
xchg
jg
mov
arpl
jne
or
je
mov
fadd
dec
or
xchg
adc
lea
in
push
nop
mov
imull
push
adc
cmp
aam
add
call
scas
dec
aad
mov
dec
and
xchg
pusha
cltd
jl
mov
jg
ret
aad
mov
jo
pop
pop
loope
insb
lds
imul
push
pop
mov
divl
jge
dec
outsb
and
roll
outsb
mov
push
push
les
jle
int
negl
add
subl
dec
in
pop
repnz
outsb
mov
dec
lcall
mov
adc
aas
jmp
cmp
push
mov
rcrb
jae
mov
pop
push
js,pn
out
sahf
clc
cmpsl
cmp
xchg
cmpsl
stc
ss
dec
xor
mov
orl
in
push
cmp
dec
xchg
mov
es
insb
lcall
mov
mov
aaa
pop
sub
out
into
daa
ret
pop
inc
pusha
sbb
sbb
push
shlb
leave
mov
ja
jb,pn
adc
push
mov
mov
inc
sub
add
adc
pop
dec
pop
notl
push
mov
jno
jne
fs
pusha
bound
test
sbbb
fwait
or
mov
ljmp
jle
cmp
or
daa
sbb
shrl
or
loop
lods
dec
ljmp
xchg
imul
mov
enter
mov
rcrb
mov
lret
mov
jmp
jne
sbb
loop
inc
xlat
rorl
push
adc
ja
sub
adc
popa
cltd
cmpl
out
cmp
insb
in
lock
mov
adc
addr16
push
test
push
scas
into
jno
cwtl
push
xchg
sub
push
pop
test
dec
mov
test
jmp
pop
sub
negl
xchg
pop
mov
mov
imul
mov
and
rcrl
hlt
les
lds
insl
mov
stos
pop
mov
mov
adc
lcall
sub
test
and
and
call
sub
fimull
mov
sub
sti
adc
dec
lret
sbb
rcll
jns
adc
add
stos
mov
jb
mov
push
add
roll
push
jnp
sbb
sbb
pop
xchg
cmp
je
hlt
and
cwtl
jbe
cli
mov
int3
lcall
mov
repz
sbb
int3
xchg
jo
or
xchg
shlb
sbb
negb
or
pushf
push
fcoml
clc
inc
xor
mov
sar
rol
fsubrl
sbb
adc
inc
dec
mov
fnstenv
pop
sti
stc
dec
cld
ret
dec
inc
clc
pusha
and
jbe
test
das
out
outsb
mov
incl
imul
jg
pop
mov
pop
test
cmp
xchg
mov
cltd
fidivrs
or
pop
stc
push
ret
out
lock
push
mov
pop
jo
xchg
jmp
xor
in
mov
clc
jne
in
push
push
dec
cmp
ret
and
ret
nop
addr16
adc
mov
sahf
loop
imul
xor
jge
pop
jecxz
push
mov
inc
nop
xor
stc
mov
xor
inc
cmp
push
pop
ja
iret
sub
mov
or
add
or
filds
pop
mov
shll
inc
pop
inc
scas
mov
out
pop
adc
jns
movsl
imul
mov
cs
aaa
stos
imulb
and
xchg
sbb
outsl
daa
dec
cmp
mov
fistl
or
lock
imul
mov
adc
lcall
or
or
fwait
jecxz
xchg
dec
push
icebp
adc
push
cld
sbb
pop
stos
es
inc
test
call
sbb
psubw
aam
ret
sti
mov
pop
sub
pop
and
pop
fiaddl
repnz
mov
jmp
adc
lcall
mov
cmp
inc
cmpsb
lret
ja
dec
aam
in
fwait
test
stc
daa
testl
bound
cmpsl
add
dec
mov
cmc
scas
mov
enter
push
push
jmp
inc
or
fidivs
push
sub
dec
lahf
dec
mov
rcrl
rcll
cmpsl
add
pop
test
fisubl
mov
popa
aad
fimull
sar
jecxz
dec
test
jns
mov
mov
pop
jecxz
cmovg
inc
and
and
rclb
inc
jl
popf
into
aad
pop
mov
je
and
xor
mov
lahf
fsubrl
aaa
fdivl
leave
dec
aad
cmp
ja
inc
dec
fsubl
aas
int
popa
subb
jo
push
clc
dec
in
push
adc
movsb
xchg
ret
ficoml
call
adc
inc
pushf
lahf
jp
mov
pop
negl
adcl
or
jb
sti
cwtl
leave
aas
push
out
xor
push
arpl
dec
orb
pop
push
scas
sbb
popf
hlt
outsb
stc
or
cmpsb
mov
cs
int3
pushw
inc
jne
bound
data16
push
jno
push
in
cmp
push
es
mov
push
in
cwtl
push
daa
enter
sub
test
xor
int
cmc
mov
int3
sbb
dec
and
fbld
es
pop
cltd
insb
dec
and
pop
cltd
cwtl
mov
cmc
mov
cltd
into
xor
daa
cltd
fdivrs
pop
mov
addl
les
popl
aam
lret
aaa
inc
adc
add
int
add
sbb
sub
mov
inc
test
adc
in
and
sbb
jmp
sbb
clc
loop
scas
popa
mov
inc
cld
mov
jns
add
ljmp
jb
loop
adc
inc
sarb
mov
push
sub
pop
jp
xor
loopne
jl
cmpxchg
rsm
jmp
and
push
xchg
jnp
aas
push
in
and
xstore-rng
cmpsl
cmpb
mov
movsl
popa
adc
inc
daa
lods
inc
aas
pop
daa
js
imul
pop
mov
fwait
aaa
xor
dec
ja
adc
leave
fs
das
in
xchg
int
popa
pusha
andw
jp
inc
scas
pop
mov
jne
rol
cs
out
sbb
popa
xchg
or
ja
negb
mov
jg
data16
jp
cmpsb
adc
dec
lds
mov
fmuls
add
jb
mov
inc
and
aaa
out
clc
cmc
sub
dec
loope
fs
movsl
jnp
insl
das
imul
aaa
xorl
push
lahf
xor
or
outsl
insl
out
ljmp
test
ds
mov
insl
inc
xlat
scas
inc
bnd
dec
test
sub
dec
loope
xorb
test
cwtl
jl
mov
mov
mov
cli
std
or
cmp
xor
mov
js
dec
mov
shll
jb
cltd
or
mov
or
sub
in
stc
sbb
adc
jbe
dec
mov
fldz
lods
push
cmpsl
test
cld
dec
je
pushf
xchg
cwtl
outsb
fucom
in
push
std
sub
dec
sbb
or
add
inc
scas
mov
repz
jb
rcl
push
xchg
push
mov
mov
xchg
push
lea
insl
sbb
or
bound
jmp
ficoms
inc
mov
movsb
push
and
or
push
outsb
popf
cmp
jne
int3
cmp
adc
and
test
mov
out
push
mov
outsl
xchg
cli
add
bound
sub
sti
js
or
out
lock
inc
pop
dec
xchg
jnp
leave
sbb
or
test
push
jge
push
fisubrs
arpl
insb
xor
pop
mov
or
xchg
inc
call
adc
adc
xor
fidivl
inc
mov
dec
inc
jp
jle
fs
jne
sbb
push
test
fidivrl
xchg
xor
and
in
adc
or
mov
rcll
in
cltd
sbb
cmpsl
xlat
int3
and
push
testl
mov
clc
outsb
fdivrs
push
adc
cmpsb
and
into
pusha
pushf
hlt
jns
push
mov
xlat
push
lret
repz
inc
xchg
sbb
xor
ret
mov
jl
test
pop
pop
mov
stos
subl
dec
inc
xor
xor
rcl
mov
adc
test
out
cmpsl
push
cmovne
push
and
negb
arpl
mov
adc
mov
or
int
test
into
daa
outsb
inc
fimull
inc
pop
in
fists
xor
stc
fildll
cmpl
xor
mov
loopne
inc
xchg
cmp
wbinvd
cmpsl
mov
imul
into
fisubrs
jns
scas
adc
sub
jns
adc
dec
add
push
mov
mov
push
add
sahf
fiadds
push
xor
mov
pop
sarb
js
and
or
pusha
rolb
mov
enter
lahf
pop
aam
out
mov
setb
mov
xor
sub
loope
adc
push
and
sti
jo
mov
movsb
xor
insb
cli
cmp
cwtl
aaa
jle
jmp
imul
or
mov
je
push
inc
mov
dec
daa
sarb
repnz
mov
in
mov
jne
xchg
mov
ss
mov
sub
adc
mov
cmp
mov
idivb
mov
or
add
adc
sti
push
jbe
pop
ds
pop
xchg
inc
pop
and
lret
xchg
pop
loopne
adc
test
shll
imul
lods
in
or
jo
pop
jmp
sbb
push
sbb
shl
out
and
sub
dec
sbb
add
push
les
movsb
xor
cld
movsl
rorb
mov
push
loope
sbb
lcall
xor
mov
jns
notb
shl
je
in
lahf
outsl
fsubl
sbb
repnz
cmp
pop
cmp
outsb
cmp
xchg
leave
outsl
cmc
add
push
pusha
test
insl
mov
in
xchg
mov
add
gs
pop
cmp
into
xlat
stos
scas
mov
pop
scas
pop
pop
mov
xor
pop
sbb
mov
ja
ds
add
mov
cmpl
mov
ds
mov
sarl
mov
inc
pop
jle
into
mov
idivb
mov
outsb
ss
in
mov
stos
or
aam
gs
pushf
add
shrb
and
leave
push
sub
pop
jmp
pusha
or
das
pop
xchg
adc
xchg
fisubrs
ljmp
mov
lret
lods
jp
div
add
jge
fnstenv
fiadds
repnz
setne
mov
cmp
stos
jb
repnz
push
mov
push
out
jnp
xor
dec
inc
sbb
sub
mov
nop
push
out
sahf
pop
in
insl
test
stc
fnop
adc
out
test
xor
cmp
fidivrl
mov
adc
and
mov
icebp
adc
fistl
flds
xchg
out
xor
xchg
inc
out
xchg
or
sub
test
mov
jno
gs
and
add
xchg
adc
dec
or
xchg
push
adc
std
pushf
into
idiv
bound
popf
pop
loop
add
sti
mov
pop
dec
mov
mov
cmp
jle
fsubrs
pop
dec
aaa
mov
stc
cmpsb
dec
imul
les
push
ss
lods
ss
hlt
out
mov
std
sub
push
pop
adc
inc
xchg
lret
nop
mov
push
in
add
in
pop
xor
inc
xchg
dec
out
sub
mov
lods
subl
clc
cmp
pop
sbb
push
inc
inc
out
out
int
jl
dec
adcb
stos
lods
or
scas
dec
out
sbb
sbb
ds
sbb
jb
lea
mov
cmp
inc
js
push
sub
mov
inc
jo
incl
rcll
ret
sub
cmp
sbbb
lds
or
cmc
stos
or
pop
inc
sar
bound
stos
repz
jmp
outsb
jb
add
into
movsl
js
sbb
idiv
pop
mov
shlb
pop
fsubrs
out
shl
inc
insb
dec
jge
or
cmp
push
jbe
cli
jo
popf
mov
pop
dec
shll
jno
push
and
scas
pop
or
mov
out
das
mov
arpl
mov
adc
mov
cld
clc
cmp
pop
cs
mov
nop
inc
sbbb
xor
inc
in
cli
icebp
fldt
sub
icebp
xchg
filds
sbb
stos
movsl
out
insb
push
adc
enter
adc
inc
movsb
cmp
xor
adc
push
push
mov
movsl
cmp
adc
je
mov
clc
data16
sbb
ja
loopne
push
cmp
lahf
adc
int3
add
ds
cld
adc
pop
push
ret
jmp
fnstenv
call
shlb
gs
and
fcoml
xor
in
sarl
dec
pop
pop
and
pop
cld
add
push
or
int
jae
addr16
mov
mov
ret
outsb
addr16
xor
subb
bound
mov
inc
adc
lahf
xlat
push
dec
bound
fs
je
sub
std
movsl
in
jne
out
inc
cli
pop
push
sbb
mov
jmp
xchg
xchg
mov
test
call
pop
cmc
out
loopne
fstps
mov
nop
mulb
mov
inc
lods
cld
mov
insl
xor
rcr
in
mov
lds
sbb
jg
aaa
sar
stc
daa
adc
dec
xchg
and
sahf
jp
sarb
call
out
scas
mov
cmp
adc
adc
aas
test
jne
mov
call
mov
mov
add
idivb
push
cmc
sahf
lock
jmp
icebp
filds
xchg
mov
or
and
cmp
cmc
add
hlt
inc
inc
cmp
jmp
mov
decb
cmp
ficoml
pushf
pop
int3
lea
xor
je
and
inc
pusha
mov
cmp
xchg
je
pop
shrb
bound
lcall
xchg
or
call
push
mov
mov
iret
dec
ds
jmp
fcmovbe
scas
sub
aam
and
inc
adc
bound
inc
out
cld
sub
mov
and
pop
scas
fmuls
mov
mov
jge
gs
andl
sti
jae
inc
lret
mov
insb
pop
iret
scas
popa
mov
ljmp
sub
ret
mov
jecxz
mov
dec
pop
popa
jmp
inc
shll
dec
mov
cmpb
adc
mov
stc
add
jge
aad
lahf
movsb
push
lock
adc
mov
aad
jge
arpl
xor
out
leave
xor
ljmp
fsubs
sbb
inc
iret
inc
lcall
jle
nop
fcmovbe
stc
and
sbb
pop
and
jo
push
mov
loope
inc
sbb
ljmp
pop
rorl
sbb
push
adc
jl
mov
mov
inc
push
sbb
pop
jp
inc
loop
mov
xor
mov
mov
pop
ret
xor
ds
aad
cmc
dec
ja
mov
in
bnd
or
dec
or
adc
push
stos
lods
jmp
jo
cs
sub
jae
jl
mov
pop
in
filds
das
rolb
mov
jecxz
rorl
rcl
lahf
scas
call
js
push
shrl
xchg
or
xchg
pop
lods
mov
cmpsl
pop
loope
or
xor
xor
std
shrl
mov
mov
bound
hlt
in
or
cli
mov
out
es
adc
jae
and
and
xchg
in
sub
mov
mov
jecxz
in
push
inc
mov
push
in
xchg
shll
or
cmp
xchg
repnz
mov
xchg
ret
add
int3
arpl
push
stos
repz
mov
inc
push
test
icebp
clc
fisubl
and
inc
pop
mov
in
lcall
sub
cmp
add
das
out
lret
insl
aaa
gs
mov
test
push
xchg
push
loopne
xor
repnz
dec
mov
dec
adcb
aad
mov
mov
add
ja
vmovntdq
test
jg
sbb
aaa
rolb
jge
sbb
xchg
out
push
push
mov
dec
pop
add
dec
stos
sbb
sub
push
outsl
sbb
sub
and
movsb
pop
out
xor
jo
out
mov
hlt
popf
std
daa
jg
repnz
jo
push
sahf
inc
xchg
mov
xor
mov
ficoml
std
sub
mov
adc
mov
jb
nopl
sarb
int3
jbe
and
in
mov
ja
add
mov
cmp
lods
inc
pop
ja
aaa
add
sbb
cmp
inc
lret
fbld
cmpsl
idiv
test
add
and
add
je
enter
xlat
popf
cmp
les
test
pop
imul
add
jae
fisttps
ljmp
and
sarb
mull
mov
and
stos
shl
pop
cmp
sub
jae
inc
ret
pusha
int
addr16
stos
xchg
ret
dec
mov
fisttpl
inc
lds
jle
fsubs
dec
pop
xchg
je
fst
shrl
stos
icebp
push
xchg
mov
mov
enter
out
cmp
mov
ljmp
lds
mov
stos
sbb
adc
sbb
or
mov
sti
mov
ret
cmp
sti
in
outsb
dec
adc
call
inc
pop
mov
mov
clts
fists
sbb
xor
test
mov
jb
sbb
outsb
ret
clc
sbb
adc
mov
std
add
mov
outsl
fbld
clc
push
movsb
dec
and
or
push
xchg
ret
dec
insl
bndstx
jbe
inc
stos
stos
cmp
arpl
xchg
sbb
xor
pusha
xor
ljmp
xor
xor
enter
jns
dec
xor
mov
jecxz
and
push
inc
push
pop
jl
mov
gs
push
mov
add
std
inc
mov
addr16
into
add
push
jne
pop
clc
sub
inc
das
inc
or
call
lcall
hlt
inc
push
dec
mov
lcall
mov
insb
xor
clc
mov
inc
dec
add
sahf
bound
dec
sarl
or
arpl
sub
stc
mov
dec
inc
frstor
pop
fadds
cmp
pop
mov
jg
xor
jp
andb
or
pop
sti
push
insb
adc
add
mov
orb
fidivl
jns
imulb
std
repnz
push
mov
xchg
stos
sbb
gs
add
jle
outsb
add
shll
int
mov
cmp
std
mov
notl
lods
daa
jge
popa
inc
mov
push
jle
loopne
into
mov
in
lods
mov
sbbl
sahf
sbb
mov
xor
in
fidivrs
pop
fdivl
jae
inc
xor
pop
lret
or
fsubs
mov
cmp
dec
add
sub
cs
jge
arpl
xor
pop
mov
js
mov
sub
or
dec
xchg
xor
cmpsl
add
js
aad
dec
mov
mov
cmp
sahf
or
mov
rcll
add
add
cli
data16
adc
mov
xor
xchg
fnstsw
xlat
fldcw
insl
negb
cltd
mov
jecxz
test
aam
sub
sub
fbld
mov
test
icebp
hlt
orb
push
xchg
dec
popa
xchg
adc
or
stc
dec
addr16
shll
cmp
js
inc
negb
add
popa
add
mov
mov
xchg
pop
xor
and
cmp
push
adc
xor
wbinvd
xor
cmpsb
jmp
pop
cld
test
or
jb
testb
sti
dec
shlb
mov
ss
lds
test
daa
lret
mov
test
mov
xlat
mov
enter
xor
aam
xor
mov
mov
gs
sub
ficompl
sub
call
xchg
mov
ds
aad
fcomp
inc
cmp
inc
fadd
push
aaa
out
xor
mov
repnz
pop
or
mov
push
adc
sub
xlat
lods
repz
test
inc
loope
jmp
jecxz
gs
cmp
les
push
jae
rcll
jnp
xchg
add
fisubs
or
sub
repnz
push
es
cmp
add
shll
repz
pop
xchg
mov
jnp
push
orb
mov
jmp
lret
push
and
lret
pop
mov
scas
mov
cmp
loope
or
mov
sbb
sbb
push
mov
rcr
jle
sub
in
jns
adc
sarl
int
rolb
js
xchg
add
jbe
jp
in
pop
mov
fstpl
cmp
mov
or
call
lret
xchg
pop
std
or
ret
lahf
push
lcall
and
adc
es
sbb
jns
loop
mov
adc
addr16
adc
dec
xchg
dec
cwtl
pop
push
leave
ljmp
push
das
add
sbb
sbb
mov
out
movsb
dec
dec
mov
fidivs
aam
in
xchg
dec
fcoml
inc
fwait
xchg
pop
int3
das
pop
lret
cmp
movl
mov
movb
outsb
xchg
pop
cmp
and
and
push
xchg
je
mov
push
push
fadd
adc
sbb
stos
jns
cmpsb
shr
xor
push
mov
scas
or
aaa
dec
sahf
mov
cs
insl
adc
xor
sbb
ds
fs
dec
fnsave
pop
shlb
jecxz
lcall
mov
sbb
mov
mov
push
iret
je
mov
and
and
lods
mov
push
rorl
push
sbb
mov
shlb
pop
idivl
sbb
add
push
and
lds
jg
fisttpll
xor
pop
sarb
push
fisttps
in
clc
xor
jo
xchg
fisttps
into
stos
and
sti
adc
shll
mov
scas
hlt
mov
test
pop
cmp
cwtl
dec
and
in
or
xchg
inc
das
loop
test
xchg
pop
xchg
mov
fwait
popa
in
mov
pop
std
sub
or
sbbl
sbb
sub
in
or
in
dec
push
out
gs
ss
mov
fimull
adc
loope
imul
pusha
adc
loopne
out
or
mov
dec
bound
cmp
scas
or
fwait
jle
pop
dec
in
clc
push
pop
mov
pop
cmp
cmp
dec
jb
fcomp
pop
sbb
rcrl
sub
ja
nop
ja
dec
cmp
rorl
dec
pop
sub
jae
cmp
add
fisttps
out
sub
sub
mov
test
mov
and
sbb
mov
mov
arpl
pushf
adc
inc
or
call
pop
inc
in
sbb
int3
sub
shll
jl
aam
sub
push
mov
mov
push
add
ficompl
adc
mov
xchg
ja
cmp
jo
pop
push
hlt
repz
in
loop
andl
cld
or
push
pushf
cli
sub
loopne
xor
hlt
push
xchg
sub
ret
mov
cmpb
ficoms
and
mov
jmp
xchg
push
xor
pop
adc
in
shrl
xchg
xchg
insb
adc
jg
jno
xchg
aad
cmpsb
cmp
mov
stos
mov
out
and
inc
push
mov
inc
movsl
inc
mov
cs
adc
push
decl
loope
xor
or
fisubl
ss
jl
lret
sbb
jo
pop
addr16
jae
test
sbb
add
fmull
iret
mov
cmpsb
push
repnz
jb
out
icebp
inc
mov
ret
sar
ds
insl
lcall
push
clc
orb
xor
push
fisttpll
pop
cmpsl
lret
sub
inc
loop
mov
ss
arpl
lods
adc
fbstp
jne
inc
flds
inc
jbe
mov
sbb
push
xchg
jge
adc
and
mov
decl
dec
jo
dec
jns
cmp
mov
rcrl
cmp
xchg
adc
pop
mov
inc
adc
push
out
dec
cld
fcomps
xchg
daa
jl
aas
lahf
push
or
insl
push
and
dec
xchg
lret
shl
outsl
dec
mov
fmull
in
out
xor
lahf
inc
sub
adc
mov
notl
or
push
pushf
das
push
lds
sti
rcl
inc
mov
ss
fisubl
xchg
fnstenv
adc
leave
hlt
push
cli
scas
add
test
jnp
ljmp
add
cmc
push
scas
loopne
dec
test
pop
movsl
ret
jbe
cmpsl
clc
cmp
add
mov
xor
push
out
scas
decl
aad
or
pop
adc
adc
jg
leave
fidivl
jne
loope
push
jns
aaa
mov
push
repz
lods
push
sub
xchg
adc
in
jge
scas
dec
rclb
xchg
xchg
loop
or
push
xrstors
aaa
test
negb
cmp
xor
ret
out
add
or
mov
xor
sbb
sbbb
pusha
es
fs
push
stos
adc
aas
adc
hlt
movsb
mov
hlt
push
push
jnp
aas
loop
mov
aas
mov
mov
ret
cmp
rcll
push
sbb
repnz
xchg
mov
xor
mov
fs
cld
nop
cmp
inc
adc
loope
jo
js
sub
sub
negb
adc
and
jnp
pop
pop
add
inc
out
out
fisubl
push
pop
cmp
loop
mov
mov
stos
push
xlat
xor
inc
es
hlt
mov
in
dec
add
or
lock
jmp
adc
push
call
loopne
xchg
lock
lea
inc
dec
nop
in
subb
mov
sarb
xor
mov
add
loop
out
jae
rcll
call
jnp
fisubs
aas
int3
push
loope
in
scas
imulb
push
pop
push
sti
out
std
int3
adc
cwtl
sbbb
gs
mov
pusha
dec
or
insl
lods
push
push
pop
push
add
adc
test
sarl
inc
add
dec
push
cli
pusha
inc
push
jp
ret
out
mov
call
subb
jmp
xchg
pop
inc
pop
xchg
mov
sub
mov
idivb
inc
jp
cmpsl
cli
adc
in
mov
push
rclb
jecxz
inc
pop
cmc
or
add
mov
inc
notb
bound
sarl
bndstx
scas
sbb
xor
sbb
and
test
sub
inc
push
movsb
xor
mov
mov
outsl
sub
loope
out
ficoms
cmp
xor
movsl
xchg
das
sub
mov
insb
inc
xchg
loop
lret
jecxz
les
cmp
adc
jae
cmp
repz
ret
fisubrl
mov
mov
add
inc
adc
clc
je
or
out
int3
sub
leave
addr16
and
sbb
out
xchg
jno
insl
bound
dec
imull
dec
cmp
pop
push
ret
lds
mov
push
mov
push
dec
mov
inc
and
cmp
and
cmp
loope
cmp
stc
ffreep
rol
xor
mov
mov
bnd
sahf
in
out
gs
aaa
mov
cmpsb
popf
js
aas
xchg
push
xchg
lcall
ret
pop
sub
es
js
js
mov
xchg
jmp
add
or
inc
in
add
popa
aam
push
jge
xchg
and
cmpsb
test
push
xchg
std
sbb
mov
std
jge
movsb
imul
jns
sbb
sub
scas
xchg
mov
movsl
or
pop
sbbl
cli
sti
fldt
movsb
test
dec
imull
jge
lcall
ss
sbb
outsb
lock
jne
cltd
or
shll
push
and
cmp
push
fcoml
lods
mov
pop
lret
xchg
mov
mov
repz
sbb
and
jns
push
int3
adc
jae
in
jnp
xor
mov
ret
adc
fiadds
push
mov
es
adc
push
jbe
add
test
jmp
adc
xchg
xor
lods
aaa
and
out
sahf
cmpsl
movsl
andl
inc
lea
xor
outsl
repz
mov
daa
mov
js
loop
push
cmp
lods
ror
mov
movsl
push
pop
inc
or
es
call
call
xchg
xchg
jnp
cmp
jle
mov
clc
pop
add
mov
ret
xchg
shll
iret
imul
icebp
add
jns
int3
sub
ja
cmp
das
nop
xchg
xchg
pop
push
add
mov
xor
push
movsb
sbb
cli
mov
push
and
mov
mov
insb
mov
dec
mov
rorl
in
sbb
xchg
ljmp
push
insl
and
mov
add
pushf
lret
imul
push
inc
shrl
mov
adc
rolb
mov
bound
inc
xor
jbe
enter
clc
jle
inc
xchg
in
stc
and
jg
add
xchg
out
out
cmpsb
pop
lret
pop
aam
dec
and
mov
in
xor
sbb
dec
in
mov
dec
addb
push
shlb
in
sub
sahf
mov
cmp
cmp
cwtl
lods
mov
stos
stos
mov
ja
mov
xlat
scas
inc
add
jbe
stos
dec
loope
add
xchg
mov
and
sahf
cmp
sub
std
aad
int
adc
lret
dec
stc
and
sub
repnz
arpl
icebp
push
fimuls
shlb
aam
mov
jae
hlt
je
loop
jbe
xchg
or
mov
mov
sbb
push
jae
dec
xchg
in
cmp
or
inc
xor
aam
pusha
ss
out
dec
and
call
addr16
lret
bswap
mov
imul
loop
scas
mov
xchg
sbb
adc
ficomps
sub
lods
mov
pop
xor
push
inc
mov
mov
cltd
call
and
stos
bound
fistpl
mov
sbb
jb
imul
dec
dec
mov
and
fiaddl
jmp
in
adc
imul
xor
xchg
loope
mov
mov
xor
ja
cli
xchg
mov
fisubrs
inc
rorl
test
jg
jmp
xor
mov
sbb
mov
or
popa
fmuls
fiadds
stos
push
lods
outsl
jmpw
das
stc
nop
dec
loope
imul
jmp
mov
icebp
out
inc
xchg
pusha
cmp
mov
jge
loopne
jecxz
and
mov
lcall
cmpsb
jp
push
jmp
test
std
push
xchg
pop
cmc
inc
jp
jns
roll
add
mov
jp
push
repz
shlb
push
fstps
aaa
popf
adc
xchg
fldl
mov
fs
pusha
mov
sbb
and
jae
mov
push
sbb
out
mov
adc
cmpsb
adc
xchg
pop
mov
cli
sub
adc
and
in
daa
mov
xchg
or
icebp
fsubr
dec
pusha
mov
adc
and
test
xchg
lcall
int
aam
aam
stos
push
jo
sub
cmp
dec
jbe
inc
insb
mov
dec
test
add
aas
sbb
xor
pop
lret
cmp
xchg
out
and
enter
mov
mov
loop
xlat
mov
lods
pop
mov
mov
mov
imul
ss
mov
ja
and
cmc
lret
pop
xchg
std
add
popa
jg
xchg
ja
sarb
inc
mov
mov
push
mov
test
sbb
loope
lods
cmp
out
imulb
mov
sub
sbb
cwtl
cmp
in
jno
ds
jle
int3
pop
fisttps
dec
sbb
and
ja
xchg
jne
sub
sbb
push
fcoml
lds
xor
ret
mov
out
fld1
int
inc
xchg
mov
ljmp
sbb
pop
fnstcw
lods
iret
sbb
sub
sbb
adc
jg
mov
jmp
ja
repz
int
popf
or
incl
cld
lret
aam
dec
or
xchg
xchg
test
test
pop
push
popa
movsl
pop
js
rclb
fcmovnbe
sub
jnp
fildll
push
stc
insl
sub
pusha
ss
inc
aas
cmc
push
out
lret
pop
idivb
inc
cli
stos
cmp
clc
int3
movl
fs
cmp
loopne
ja
in
or
push
xchg
lcall
inc
sarb
hlt
jns
ss
sub
sub
push
hlt
bound
movsb
push
subb
shll
mov
sub
lods
sbb
xchg
pop
sub
popa
push
add
cmp
shl
and
fistpl
repnz
lods
adc
fwait
aad
jae
sub
sbb
fldl
lahf
xchg
sbb
scas
lods
sbb
sub
push
jns
dec
popf
mov
mov
call
inc
xor
aad
mov
frstor
push
inc
cmpsb
cmpl
inc
subl
dec
sbb
arpl
mov
adc
stos
imul
rolb
out
outsb
std
push
dec
sar
adc
outsb
push
lahf
fstps
or
les
scas
dec
test
mov
mov
mov
or
dec
cmpsl
sbb
dec
jae
loop
xchg
into
xchg
xchg
mov
fs
in
loopne
mov
mov
ret
mov
mov
lods
push
mov
fldt
cmp
push
inc
in
test
dec
popf
mov
lods
loope
xchg
loope
call
pop
ja
jecxz
push
in
call
mov
je
outsl
pop
push
xchg
push
or
cmpsb
pop
jg
push
mov
and
dec
lock
mov
sbb
or
out
in
stos
notb
push
sbb
cmpsb
stos
or
insb
sbb
inc
es
push
loopne
mov
sub
xchg
lock
cld
jno
sbb
jle
inc
out
call
adc
xchg
repnz
sub
lods
lods
xchg
add
and
int
pop
jbe
shrl
sub
aam
sar
enter
adcb
xor
cmc
jl
inc
mov
mov
std
and
push
das
pop
push
and
jecxz
neg
sbb
push
adc
fmul
add
xor
mov
daa
mov
push
mov
cmpsb
fwait
scas
adc
addr16
daa
push
push
xor
clc
fisubrs
les
jne
push
and
or
mov
js
fimull
bound
das
jo
cli
add
mov
rcr
pop
in
cwtl
mov
inc
add
ret
cmp
cmc
push
pushf
mov
into
jbe
into
jmp
or
popf
jno
stos
rcr
sbb
add
jmp
push
imul
jo
xchg
popf
movsb
aaa
shlb
add
call
dec
cs
scas
pushf
push
or
add
aad
mov
xor
adc
xchg
jg
xchg
and
jno
jb
scas
sti
push
sbb
mov
aas
xchg
sub
adc
jg
sub
enter
mov
jb
sti
loope
xor
mov
push
imul
inc
fwait
out
mov
pop
inc
sbb
clc
mov
test
inc
int3
pop
mov
inc
sbb
push
inc
adc
mov
fsub
push
mov
ret
iret
xor
lahf
or
xor
je,pn
dec
add
std
in
jg
add
jbe
mov
bt
rcrb
inc
scas
scas
lds
andb
mov
cmp
loop
pop
pusha
scas
mov
cmp
les
and
mov
out
push
and
pop
add
mov
pop
call
jo
mov
ret
sbb
les
shr
in
add
pop
arpl
dec
or
pop
testl
nop
jmp
push
stos
hlt
fsubr
test
mov
mov
lock
stos
xchg
cmp
add
xchg
pop
inc
stos
or
cmp
out
jns
ljmp
xchg
sbb
pop
xchg
pop
cs
jecxz
loope
int
sub
mov
dec
jge
adc
ret
in
cwtl
lahf
dec
xchg
xchg
fisttps
sbb
and
faddl
jg
imul
jbe
aas
add
push
loopne
xchg
inc
bound
dec
and
enter
adc
std
adc
and
add
push
movaps
test
scas
dec
adc
aam
pop
popa
out
rclb
push
inc
in
jp
push
adc
daa
xor
jae
inc
jae
dec
mov
mull
leave
int3
xor
gs
pop
or
arpl
lret
test
fsts
ds
dec
subb
enter
xor
adc
jnp
test
insb
jns
ljmp
test
addr16
push
popf
jne
inc
and
and
bnd
mov
xor
dec
mov
xchg
fcmovnu
lds
pop
cmp
jg
dec
add
sub
cmp
adc
push
lds
cmp
out
cmpsb
xchg
push
add
mov
mov
xor
fsub
mov
shrl
mov
pop
inc
lods
clc
jmp
sbb
popa
dec
or
dec
gs
jge
lods
les
outsl
dec
rclb
push
inc
lea
lahf
notl
rclb
xchg
sbb
inc
sbb
cs
add
ret
fcomps
fisttpll
dec
cmpsb
push
sub
push
repnz
push
call
cmp
movsl
out
push
scas
mov
add
inc
movsl
jbe
mov
repnz
add
cld
mov
aam
mov
loop
fpatan
mov
pop
pop
nop
pop
incb
test
sub
fcmovnbe
sarl
jmp
mov
lods
pop
lds
jp
sti
les
jno
femms
mov
push
sbb
push
lret
sub
pop
mov
sbb
adc
stc
cmp
outsb
pop
and
xor
neg
xor
jl
repnz
push
aam
mov
fnstenv
divl
jl
mov
and
cmpsb
add
adcl
scas
pop
pushf
sbb
rcll
add
lcall
aas
inc
cwtl
push
lods
jnp
shrl
mov
addr16
xor
jl
addr16
push
pop
inc
mov
xor
xor
push
cld
mov
pop
mov
in
lods
mov
scas
enter
mov
push
aas
ss
cmp
lock
sub
xchg
and
pop
sti
popl
or
dec
cli
or
rcrl
pop
jmp
insb
add
das
jns
cmpsl
mov
loop
push
stc
call
cld
adc
sbb
xchg
adc
stc
ret
xor
pop
and
int
sahf
test
out
push
mov
jle
popf
cmpb
cltd
shlb
into
pushf
jnp
jg
jle
jne
jo
add
dec
pop
outsb
andl
sbb
cvtps2pi
sbb
xchg
xchg
mov
pop
sbbl
xor
clc
cmp
aas
jge
or
sbb
sbb
mov
jne
insl
sahf
mov
mov
dec
mov
push
sub
loopne
sub
shlb
lock
jge
mov
lahf
inc
push
mov
shlb
cwtl
stos
mov
xchg
cmp
add
jbe
xor
shll
movsb
or
xor
test
fs
xchg
xchg
pop
mov
in
dec
icebp
dec
sbb
scas
lahf
jge
and
pop
fmulp
add
pop
push
shlb
leave
in
jl
mul
outsl
sbb
inc
into
add
iret
mov
push
sbb
push
lods
insb
cmp
es
arpl
dec
sbb
mov
sbbl
inc
or
in
sbb
push
and
cmpsb
inc
cmpsb
ds
push
lcall
test
in
in
daa
mov
mov
and
sub
mov
inc
lods
lret
decb
pushf
hlt
mov
xor
inc
pop
movsl
xor
mov
mov
es
push
fcomip
shr
out
shlb
aaa
and
or
mov
sbb
mov
jmp
jle
aaa
cltd
jae
call
in
sub
pop
movsl
cmp
fnsave
cmp
repz
sbb
inc
pop
notl
push
or
jl
pop
lock
iret
stos
add
fadd
pop
data16
push
fwait
test
nop
inc
data16
cmp
add
ljmp
push
jo
lret
jg
push
sub
xchg
scas
leave
repz
add
pop
mov
sub
adc
fbstp
inc
popa
pop
mov
loopne
add
cmc
pusha
inc
in
lods
mov
xchg
popa
xchg
mov
xchg
mov
dec
or
sbb
and
sub
jns
das
push
loopne
fiadds
jmp
inc
pop
popf
sahf
push
fcoms
loopne
hlt
pop
adc
add
pop
int
xchg
adc
and
adc
hlt
jmp
mov
inc
cmp
cltd
std
jae
ljmp
mull
pop
inc
mov
inc
or
and
sti
mov
out
and
lds
pop
fwait
xchg
mov
or
add
in
or
cmpsl
and
pop
xchg
mov
data16
push
xor
repz
add
mov
aam
mov
pop
fs
pop
push
ss
les
sub
stos
cmpsb
fwait
inc
mov
push
stos
jg
mov
mov
das
insb
shrl
jl
xchg
ss
loop
mov
ret
cmp
add
pop
and
dec
out
sbb
or
cmp
outsl
push
in
movsl
mov
xor
pop
lea
xchg
movsb
mov
and
lods
fcmovu
xor
jns
jmp
ret
mov
and
pop
dec
push
fnstsw
test
jmp
test
sub
adc
in
pop
inc
loop
dec
enter
mov
lock
addr16
xchg
fisttps
push
das
bound
testl
mov
cwtl
mov
repz
dec
and
sub
pop
leave
xchg
sub
insb
int
in
dec
adc
sub
leave
push
dec
sti
aas
fdecstp
scas
dec
pop
or
xor
dec
rcll
and
push
push
sbb
pusha
aad
adcl
divl
out
sbb
jge
pop
adc
in
jle
xchg
cltd
imul
inc
or
mov
mov
jns
jnp
mov
iret
xor
mov
aad
cmp
cmp
push
push
ret
mov
test
mov
lret
repz
nop
out
push
dec
mov
cmp
fstps
jmp
or
fcoms
icebp
rolb
and
pop
mov
lcall
lcall
mov
fsubrs
adc
fcmovu
mov
and
inc
mov
aad
iret
mov
dec
test
faddl
pop
cmp
call
mov
popa
arpl
push
pop
mov
aam
fisttpl
clc
fidivrs
outsl
jb
mov
incb
adc
repz
xor
stos
mov
push
cmp
push
pusha
sti
sub
push
jg
imul
xor
jno
outsl
pop
jo
push
sub
call
jae
push
jg
and
daa
sbb
xor
je
xchg
std
xorb
sahf
push
scas
pop
sub
sub
ss
mov
push
loop
xchg
mov
cli
add
add
shll
xchg
or
sub
and
xor
jns
pop
les
inc
or
stos
mov
sub
mov
nop
and
cmp
inc
test
dec
imul
sbb
or
mov
sarl
mov
dec
pop
cmp
movsb
ret
lcall
std
mov
add
arpl
rcrb
fisubs
ret
mov
repnz
shr
insl
mov
adc
aad
lea
jg
ficoms
gs
into
or
sbb
sub
addr16
adc
sbb
cmp
pop
fisubs
xor
lods
pop
push
mov
pop
and
dec
sti
push
bound
jg
xor
cmpb
sub
pop
nop
or
outsb
pop
sbb
jbe
imul
adc
test
sbb
mov
sbb
xchg
jbe
sahf
sbb
xchg
jo
cmp
inc
sub
jecxz
sarb
gs
and
shr
in
push
mov
inc
rcl
xchg
and
jnp
sub
cmp
outsl
cmpsb
pop
mov
and
sub
adc
pop
repnz
xchg
cli
cmp
xchg
sbb
outsb
testl
inc
adcb
adc
mov
cltd
les
jb
ficoml
xlat
aas
pushf
mov
pop
sahf
mov
movsb
outsb
xor
adc
sarb
cmp
clc
dec
pusha
push
movsl
mov
add
lcall
xchg
inc
sub
bound
jmp
cltd
dec
popf
clc
jo
inc
ret
fcompl
ret
push
test
sbbl
outsb
sbb
cmp
sbb
hlt
and
mov
xchg
adc
pusha
movsl
fstl
jl
push
leave
idivl
sti
iret
rclb
mov
sbb
loopne
sub
mov
pushf
pop
xor
sbb
insl
push
not
fbld
or
push
mov
jle
xchg
fs
jo
testl
mov
icebp
or
loop
cmpsb
lret
shrl
dec
cmp
pop
ljmp
mov
bound
cmc
xor
pop
sbb
adc
in
scas
data16
jp
sarb
ret
movsl
cmp
mov
rcl
dec
push
and
xchg
pop
or
jp
sbb
push
add
push
lods
ret
cld
push
out
aad
rol
test
pop
adc
out
cld
stc
inc
xchg
sub
lea
mov
push
movsb
pop
mov
ljmp
lds
test
push
stc
imul
xor
leave
pop
ja
add
pop
in
push
pusha
ror
pusha
in
or
pop
cmp
hlt
jno
mov
mov
sarb
jl
mov
push
iret
int3
jns
sbb
sbb
pop
push
add
pusha
xchg
pusha
lcall
mov
xlat
aas
mov
inc
push
clc
xor
int
leave
pop
or
lea
jb
mov
pop
or
sub
push
xchg
inc
arpl
std
add
sbb
pop
out
lods
push
mov
push
mov
hlt
ret
fcomps
push
hlt
dec
cwtl
dec
mov
outsl
push
xorl
inc
fwait
insb
inc
xor
shlb
adc
aas
out
je
fistpll
nop
add
add
mov
andb
dec
cmp
add
pop
jb
cltd
sub
loop
repnz
jnp
push
xor
push
rorb
pop
cmp
mov
or
leave
or
mov
insl
push
mov
adc
repz
aas
cli
mov
lods
out
mov
fnsave
js
sbb
insl
mov
dec
adc
pop
and
adc
clc
push
xchg
dec
testb
and
sub
js
dec
pop
outsl
loope
loope
inc
jg
xchg
mov
mov
sub
xor
jae
pop
add
loopne
sub
cmpsb
or
rorl
pop
into
lock
aaa
push
mov
js
xor
and
decb
cmpsb
inc
mov
xchg
cmp
sbb
mov
cs
xor
fwait
xor
mov
cmp
mov
sbb
mov
insl
aas
pop
xchg
jno
mov
push
mov
mov
dec
xchg
nop
mov
repnz
call
sbb
sbb
and
and
sahf
ret
and
xor
jnp
cmp
iret
cmp
insl
push
out
pop
push
inc
int3
sbb
pop
jo
mov
das
outsb
xor
push
inc
rcll
fldenv
loop
das
dec
jp
or
fisubl
cmpsl
aas
sbb
out
lock
and
fadd
cltd
pop
subb
sbb
cmp
imul
inc
xor
push
push
ror
push
lahf
sub
loopne
bound
add
aaa
into
adc
mov
test
jae
ds
dec
orl
pop
inc
sahf
jecxz
and
dec
add
ss
lods
fisubrs
xor
std
addr16
std
mov
dec
mov
in
push
je
test
fcompl
xchg
or
ret
addb
push
incb
lcall
pop
xchg
call
in
cld
scas
test
inc
cmp
push
out
int3
adc
mov
dec
imul
pop
sbb
inc
aas
and
xor
mov
pop
adc
push
mov
cmp
mov
dec
out
jo
push
dec
xlat
dec
mov
popf
push
les
out
repz
mov
push
cli
jno
pop
add
xor
jae
cmp
fidivrl
or
bound
hlt
repz
loope
mov
xchg
pop
pop
mov
adc
push
dec
mov
test
sahf
ss
ds
and
and
and
scas
adc
adc
popf
lds
sub
loop
mov
dec
pushw
add
stos
mov
xchg
sub
inc
fmull
jge
loopne
xchg
outsl
and
mov
fbld
jecxz
fwait
mov
je
dec
mov
pop
or
mov
adc
or
arpl
pusha
dec
scas
sar
sub
movsb
mov
loop
rol
lock
lock
adc
fmuls
mov
mov
inc
jge
cmp
inc
push
jg
push
ja
stos
push
jmp
pusha
jle
hlt
sbb
fnsave
ficoms
mov
push
sbb
adc
cmp
inc
push
dec
xchg
xchg
sbb
jge
jnp
in
jo
int3
pop
inc
mov
adc
testl
push
popf
clc
xor
push
sbb
dec
mov
outsl
jns
mov
adc
xlat
cmpsl
in
dec
inc
insl
test
add
sub
jb
adc
jge
push
sub
dec
cld
inc
jle
lcall
inc
std
jo
outsl
subb
push
rorb
fnstenv
sbb
xchg
sub
in
lds
loopne
pop
sbb
push
call
loope
fnstsw
xchg
mov
xor
mov
loope
outsl
push
ja
adc
dec
mov
jns
stos
add
enter
in
mov
jge
fildll
pop
sbb
push
mov
add
jecxz
dec
mov
lret
arpl
pop
and
mov
jne
dec
and
mov
add
jp
push
xor
outsb
jno
loop
push
add
rcll
sbb
insb
cltd
add
into
test
test
push
movsb
or
pop
flds
ss
ficoml
gs
cs
adc
and
push
or
aad
mov
cmpsl
xlat
out
and
and
popa
mov
cltd
jno
mov
pop
lea
sub
cwtl
mov
xchg
sbb
sbb
jg
ud1
cmc
xor
aad
or
xchg
icebp
lret
sbb
push
dec
lret
rcr
mov
add
adc
mov
push
mov
and
fs
push
dec
test
lea
add
ljmp
sti
mov
mov
pop
jmp
and
inc
scas
and
xor
insl
xor
cmp
pop
add
in
iret
mov
insb
jp
movsl
mov
jecxz
xchg
int
jbe
mov
mov
inc
dec
mov
or
adc
ljmp
or
pop
xor
or
scas
add
cld
mov
imul
jecxz
mov
sub
sti
lods
mov
xchg
or
repnz
loopne
xor
sbb
or
jl
test
mov
or
popa
or
cmp
sti
inc
clc
jg
add
fwait
jle
or
xchg
sub
loopne
mov
lret
pop
sub
sarl
ljmp
or
adc
jno
dec
mov
out
outsb
pop
cs
mov
ss
inc
sub
dec
xor
sub
push
lret
mov
sbb
outsl
sub
and
sbb
pop
sub
stos
inc
push
fildl
cs
push
mov
mov
jno
orb
fcoms
fisubrs
decb
push
or
sahf
and
mov
into
ja
sub
jl
ja
fcoms
popf
into
dec
jmp
stos
add
adc
mov
movsb
jbe
sub
mov
inc
cmp
les
lds
enter
test
inc
dec
mov
jg
mov
jne
aad
and
mov
stos
rolb
pop
mov
sbb
in
or
or
shr
ljmp
adc
mov
lds
mov
xchg
push
jp
test
xchg
bound
mov
in
or
add
lcall
cmp
jmp
je
mov
cmpb
and
sbb
xor
pop
ret
pop
jo
scas
ss
adc
mov
push
mov
es
std
test
fsubrl
push
repz
add
adc
push
sbb
xor
roll
mov
mov
in
mov
in
jmp
iret
jnp
sub
ret
add
push
pusha
cmp
mov
loop
jmp
cmp
inc
daa
xchg
xor
sbb
mov
xchg
in
pop
xor
add
or
jno
sub
sarl
inc
insb
pop
ret
sahf
sbb
cmovbe
mov
jb
jp
sub
inc
test
aam
je
mov
and
addr16
mov
pop
bound
dec
add
jle
shll
xor
cli
arpl
inc
cltd
arpl
mov
dec
clc
lds
sub
xchg
push
add
mov
out
imul
mov
leave
clc
mov
sub
pop
add
xchg
adc
dec
cmpl
jo
jl
push
fstp
addl
xchg
xchg
xor
lret
adc
inc
sub
mov
and
sub
mov
sub
xchg
xchg
mov
in
ficompl
sahf
scas
mov
sbb
sbb
out
add
dec
pop
adc
jecxz
push
shlb
xchg
gs
fdivrs
or
decb
sbb
test
pop
jmp
sbb
jle
imul
cmp
scas
dec
fstpl
pop
mov
jecxz
mov
dec
inc
jle
mov
add
in
inc
cmpsb
pop
mov
jg
xchg
sarb
hlt
je
pop
inc
daa
cs
daa
aaa
inc
dec
test
or
xor
fstpt
inc
lret
mov
sbb
arpl
xor
ret
clc
enter
sbb
dec
movsb
push
mov
jecxz
cmp
fyl2x
jp
add
fnstsw
sbb
mov
andb
cmp
cltd
dec
xchg
shll
aaa
addr16
ret
xchg
les
shl
orb
mov
cmp
ds
imul
mov
jo
repnz
cmp
mov
rcll
sub
jge
mov
mov
fwait
xor
cltd
cmc
fidivl
arpl
push
pop
mov
lahf
inc
aad
std
sarb
xor
mov
pop
fbld
sbb
sub
ret
in
outsl
fcomip
movsl
mov
add
lods
push
push
test
adc
pop
leave
xchg
push
lcall
mov
dec
in
mov
jno
cmp
push
aas
pop
in
das
cmp
adc
xchg
xchg
scas
fnstsw
and
jbe
icebp
sbb
push
pop
cs
inc
leave
cmpl
mov
mov
subl
xor
into
mov
push
cwtl
mov
dec
jno
xchg
pusha
test
jno
jge
fs
push
fs
mov
lahf
jo
jecxz
pop
mov
pop
mov
sub
mov
xchg
sub
xor
cmpsb
pop
nop
jle
nop
push
mov
add
addr16
mov
cmp
fbstp
call
jae
out
icebp
dec
ficoms
jge
scas
push
adc
cmp
mov
test
stos
pushf
sbb
scas
sub
jmp
mov
ret
sub
andl
jg
int
test
scas
ret
daa
and
jl
fnsave
test
mov
mov
adc
sahf
in
cmp
sbb
jo
pop
ret
data16
dec
push
jo
out
dec
sarb
add
sub
or
iret
outsb
mov
and
jg
stos
call
xor
jl
jge
cmpsl
or
shlb
cmp
fcoms
repnz
in
xor
push
cwtl
insb
arpl
stos
test
cmp
sahf
and
and
out
popa
jns
xor
cmp
lret
xchg
dec
or
sbb
test
inc
mov
out
jg
xor
dec
pop
dec
ret
loop
add
xchg
push
inc
mov
inc
xchg
scas
push
fcmove
in
insb
adc
mov
jp
out
dec
shrb
mov
loop
sbb
les
adc
ds
jle
out
add
ret
testl
scas
ret
jns
adc
ds
push
adc
xchg
push
mov
into
sti
jb
fiaddl
ds
mov
fcomi
inc
cmp
dec
mov
test
loopne,pn
out
cmp
push
xchg
or
xchg
lods
jnp
jno
push
jl
pop
jno
scas
les
mov
insb
in
inc
inc
sbb
xchg
shlb
sti
movswl
xor
mov
mov
int3
fmull
adc
loop
sbb
adc
cltd
cmp
lds
sarb
mov
out
out
addr16
push
inc
popw
xor
xor
xchg
inc
or
xchg
and
bnd
lock
popa
xor
mov
cld
fsubs
ja
mov
cmp
test
xor
jb
fmuls
push
addr16
scas
lods
enter
cmp
mov
pop
lea
int
test
popf
sbb
pushl
inc
adc
pushl
lods
adcl
inc
sub
mov
pop
rcl
mov
sbb
sub
dec
ja
cmp
in
sub
cmp
hlt
and
cmp
adc
shll
std
rcrl
xchg
insl
or
enter
shlb
and
xchg
dec
in
jbe
fcmovnu
fidivl
dec
sbb
mov
aad
aam
add
pop
clc
adc
push
fwait
or
sub
push
insl
loop
fs
dec
add
mov
inc
pop
push
pop
aad
pop
cmc
sub
flds
xor
add
icebp
or
cld
stos
data16
mov
aaa
dec
movsb
dec
xchg
mov
pushf
mov
sarb
out
cmp
inc
es
push
ja
adc
pusha
inc
sahf
ds
xchg
int3
outsb
and
out
and
mov
mov
push
repz
mov
stos
cltd
xchg
or
rcrl
jle
adc
std
fs
jmp
mov
dec
cmp
and
aaa
mov
push
dec
dec
ljmp
sarb
decb
cmp
cmp
mulb
mov
inc
iret
jns
sahf
jo
fdivs
std
adc
addl
xor
stos
or
cs
jno
dec
inc
add
lret
testb
std
mov
in
clc
mov
sahf
sub
movsl
std
jno
xor
or
repnz
aas
mov
mov
bound
jp
push
mov
popf
jl
jmp
mov
scas
lea
test
push
xchg
cmp
inc
fs
xor
dec
dec
fldt
add
cli
cmp
or
mov
lock
pop
sbb
mov
fs
jbe
pop
pushf
add
inc
xor
pop
jmp
push
pop
and
ds
movl
out
jg
xchg
gs
mov
jp
ret
or
push
or
sub
mov
xor
inc
lret
shlb
stc
jmp
andb
jne
mov
rcll
inc
and
push
js
mov
and
pop
xor
dec
std
and
cmp
jae
in
sbb
jp
cwtl
fdivrl
scas
inc
ret
lock
mov
mov
ret
cmc
or
ret
pop
dec
xchg
fcmovbe
xchg
adc
cwtl
inc
arpl
outsl
jbe
adc
mov
and
fiaddl
leave
adc
in
jo
push
push
jae
fistpll
push
imul
mov
sub
add
daa
popa
fwait
inc
pop
loopne
jo
dec
mov
pusha
pop
or
jmp
push
push
into
repz
les
pop
sub
insb
mov
pop
inc
outsl
in
jmp
fcmove
jmp
mov
mov
and
dec
outsb
in
js
mov
outsl
inc
rcrl
lret
cmp
xchg
lock
xchg
pushf
pop
add
jle,pn
lods
jecxz
xchg
inc
inc
mov
xchg
stos
adc
inc
mov
add
pushf
fcmovnu
ljmp
ret
outsl
adc
call
add
fcmove
dec
pop
aad
out
cmp
cmp
scas
ss
pushf
cmp
inc
cmp
rcr
mov
int3
mov
or
lock
xor
pop
mov
fmull
clc
push
pop
dec
jo
push
mov
daa
push
aas
fs
leave
sti
inc
sahf
fwait
adc
adc
mulb
jmp
xor
mov
jnp
scas
push
dec
lret
lods
pop
sub
aam
cmp
bound
fists
rolb
jae
fistl
inc
jg
add
repz
pop
fists
adc
movsb
and
or
cltd
xor
cmp
pop
outsb
mov
sub
inc
xchg
mov
ljmp
jne
scas
test
std
sub
lds
ljmp
fsts
jmp
sti
cwtl
das
jns
jg
jl
imul
shrl
fwait
rcll
mov
lret
xor
lcall
push
adc
and
clc
in
sub
mov
cmp
jne
out
pop
inc
outsl
aas
pop
aaa
dec
pusha
decb
adc
rcl
aaa
popa
in
mov
mov
mov
jne
fstpt
in
dec
sbb
sub
jae
movsl
aad
jo
mov
js
inc
clc
pop
fsubrl
add
cs
fs
jns
cmp
cmp
push
push
sbb
cs
or
int3
inc
jge
aaa
mov
mov
push
and
lods
or
in
add
push
xchg
imul
cmp
popa
mov
jns
call
mov
cmc
and
push
repz
pop
push
inc
pop
mov
fsubrl
xchg
insb
mov
add
push
sbb
jge
imul
cmp
xor
dec
push
imul
in
sti
in
cmp
cmpsl
repnz
add
dec
inc
and
pop
mov
test
stos
jne
pop
inc
mov
jle
mov
outsl
int3
pop
or
out
lds
fstps
push
ljmp
xor
daa
outsb
pop
jp
das
add
xlat
mov
add
outsb
add
cmpsl
and
scas
fidivs
mov
inc
cmp
lods
cltd
test
testb
out
clc
adc
iret
xchg
xchg
dec
in
add
fisttpl
xchg
add
push
adc
push
xchg
pop
mov
cmp
inc
sahf
mov
adc
pop
hlt
dec
push
mov
dec
mov
mov
and
pushf
jle
adc
sahf
fisubrs
lds
sbb
jae
mov
pop
outsl
decb
mov
call
mov
or
jb
cmpsl
or
pushf
sub
out
sbb
mov
aas
stos
into
xor
fsubl
dec
pushf
mov
icebp
jo
xchg
setae
popf
sbbb
inc
addr16
push
movsb
xchg
adc
adcl
push
popa
add
inc
add
sbb
aas
fdivrs
xor
add
ljmp
test
mov
hlt
push
aas
imul
call
mov
jnp
mov
in
push
cld
nop
pop
movsb
push
sti
gs
mov
mov
cmp
add
lret
add
pop
sub
test
in
inc
add
xor
adc
mov
mov
test
lret
adc
mov
call
push
lret
mov
arpl
cmp
imul
sub
test
insb
add
or
and
shlb
dec
or
inc
mov
mov
push
jmp
idivl
fdivl
mov
add
fcmovnbe
pop
in
popf
lods
jo
pop
mov
mov
dec
addr16
mov
xchg
jle
jge
rcrb
int3
sbb
nop
dec
loopne
xchg
das
adc
sub
or
scas
test
insl
or
je
jb
ljmp
out
cmp
lret
aad
adc
in
lcall
outsl
call
xchg
addr16
lcall
loope
push
mov
fdivrl
pusha
mov
pop
mov
xchg
aad
xchg
pop
and
mov
fdivrs
sub
cmp
inc
loopne
cmp
subl
fst
repz
mov
lahf
push
adc
js
xchg
call
ds
xchg
mov
fstpl
cltd
jno
insl
xchg
scas
cs
test
aaa
lcall
dec
mov
out
jmp
fcompl
add
in
movsl
mov
movsl
xchg
and
stos
fsubl
decl
xor
enter
dec
into
adc
inc
shrb
cs
ficompl
cld
popw
ja
jp
lret
rolb
mov
js
push
cli
cmp
mov
jo
sub
push
pusha
je
repz
pop
lods
lcall
sbb
cs
and
or
shll
divb
jo
outsb
fs
ret
sbb
cmpsl
out
jno
ljmp
fadds
outsb
pop
mov
adc
nop
popa
or
mov
aaa
dec
stos
adc
bound
gs
bound
les
aaa
cmp
adc
push
scas
pop
aad
lods
cmp
cmp
scas
jae
mov
addl
test
in
dec
sbb
dec
ds
jge
push
orb
mov
loopne
sbb
mov
inc
int
dec
in
push
xor
xchg
jmp
push
xchg
sub
inc
cltd
test
inc
ja
push
jo
push
cmp
jge
inc
adc
inc
cmp
icebp
addb
pop
xchg
sbb
push
mov
cmp
push
mov
daa
or
add
movsb
mov
roll
mov
rolb
xchg
cmp
push
inc
scas
mov
std
push
jmp
sub
jb
push
cmp
mov
int
lods
cmp
cltd
test
cwtl
jbe
stos
push
mov
imul
push
test
roll
xchg
or
xchg
or
cmp
incl
stos
cs
ficoml
add
sti
cltd
mov
pop
rclb
or
pop
imul
mov
pop
cmp
stos
push
cmp
push
lret
mov
das
inc
mov
dec
adcl
lock
jo
aam
cmp
inc
jb
mull
push
out
and
aad
jmp
push
test
cmp
cwtl
cli
xor
adc
sti
or
xor
psubsw
adc
xchg
jge
add
in
loopne
rorb
and
jecxz
ja
scas
cmp
inc
cwtl
jg
and
sub
add
inc
push
daa
adc
aas
mov
insb
arpl
out
push
jmp
out
rorb
and
pushf
fs
and
cmpb
rclb
push
adc
popa
dec
cmp
fmull
popf
imul
inc
push
mov
pop
das
inc
iret
je
mov
add
nop
mov
jae
aaa
inc
enter
sub
jns
xor
xor
mov
and
dec
xchg
sti
test
cld
jg
outsl
cmp
cmp
addl
es
and
jp
or
mov
aaa
mov
popa
push
sbb
sti
out
popa
jecxz
dec
fmull
adc
jge
ja
orl
cltd
xlat
pop
mov
pushf
shrb
push
jns
orb
sub
pop
add
sub
adc
out
sub
lods
adc
lret
mov
mov
dec
imul
gs
icebp
lret
or
sub
mov
cs
lret
repz
stos
fdivl
mov
lcall
std
adc
insb
shl
xor
inc
mov
jle
loopne
mov
repnz
ss
sub
inc
cmc
mov
mov
adc
xchg
aam
fisubs
push
iret
out
mov
cmp
mov
call
ds
jl
sub
aam
test
outsb
lds
mov
jne
sub
sbb
mov
push
lret
in
adc
mov
scas
and
ret
jno
cmpsb
sub
mov
or
jmp
sbb
mov
inc
and
mov
out
xor
enter
in
repz
pop
inc
dec
pop
sub
xor
scas
test
adcb
int
mov
loopne
mov
in
gs
mov
jbe
test
fstpt
cmp
mov
popf
xor
int
mov
xor
mov
sbb
mov
cld
movsb
xchg
dec
adc
fnsave
das
mov
mov
xchg
push
and
cld
xor
daa
pop
jmp
insb
pop
mov
daa
pop
out
inc
push
pop
jb
dec
fisubrl
xchg
cwtl
pushf
ds
push
push
js
cmp
push
lcall
hlt
iret
adc
mov
rorb
out
aam
das
mov
ficoml
xchg
in
aam
sub
sarl
rorb
inc
out
es
out
jmp
adc
inc
sbb
xor
fidivrl
pop
lods
inc
stos
in
movsl
mov
add
fisubl
ror
mov
cmpsb
in
fcoml
sub
inc
jmp
lcall
ffreep
bound
jb
add
loopne
xchg
js
xchg
cmc
pop
add
jo
mov
dec
aas
pusha
cmp
mov
inc
in
or
or
aaa
sub
xor
adc
hlt
fistpl
push
enter
xchg
xchg
pop
les
mov
push
out
adc
pusha
loop
ret
sbb
mov
in
xlat
and
xchg
pop
icebp
and
out
cs
and
fwait
std
push
mov
out
jp
inc
cltd
add
int
xchg
call
mov
xor
jl
nop
inc
inc
mov
cltd
jle
jecxz
cmp
mov
mov
ja
mov
daa
sub
add
inc
inc
sbb
dec
rol
aaa
xchg
mov
sub
xchg
add
popa
adc
push
and
imul
push
dec
cmpsl
scas
push
sbb
or
cmpb
faddl
jnp
dec
jp
push
ror
or
outsl
sub
les
pop
lods
pop
sub
lret
pop
pop
pop
scas
mov
mov
push
aaa
jp
cmp
lcall
add
dec
jno
xchg
pop
mov
add
sti
push
push
mov
fs
and
jns
xor
mov
in
les
mov
js,pt
inc
adc
jecxz
inc
jecxz
cmp
inc
push
fcmovnb
add
mov
jae
jmp
mov
insl
cmc
arpl
rcrb
sub
dec
addr16
mov
inc
xchg
mov
lock
sbb
xlat
iret
mov
sahf
push
ficoms
nop
adc
pop
push
and
int
fnop
sub
sub
out
lods
xchg
push
dec
pop
adc
aad
add
xchg
insl
mov
fmull
call
das
negl
lods
add
mov
ficoml
rcl
mov
mov
or
out
int
ljmp
cmp
mov
scas
fbstp
lods
xchg
mov
cmp
das
loop
test
jge
jle
jle
cmp
jno
das
dec
add
movsl
push
push
decb
and
test
sbb
je
jg
or
jmp
mov
cvtps2pi
dec
mov
fldenv
jle
sbb
adc
pop
pminub
js
jno
xchg
adc
sbb
js
mov
push
and
sbb
ds
mov
push
cmp
jp
clc
ss
out
loopne
push
mov
scas
add
jae
jmp
add
adc
xchg
inc
fmull
push
add
idivb
push
rorl
sub
mov
jno
ror
repnz
adcl
jp
dec
cmp
cmp
mov
jbe
cmp
push
and
add
inc
stos
pcmpgtd
bound
shrl
push
jge
test
fstps
fwait
lret
mov
add
popf
jns
cmp
jg
inc
fnstcw
stos
pop
jl
leave
divl
mov
icebp
dec
inc
negl
jb
pushf
jns
call
inc
jns
cld
cmc
and
addr16
cmp
sahf
sub
add
roll
mov
iret
cmpsb
repz
inc
jecxz
pop
and
pushf
cli
rclb
xor
pop
add
and
shlb
in
mov
sti
inc
xor
inc
adc
jecxz
pop
xor
mov
cli
pop
dec
xchg
test
jo
jl
xor
int
inc
jmp
in
mov
or
out
jno
jbe
fisubl
mov
mov
dec
adc
jp
jne
test
out
das
push
aas
ja
mov
scas
outsb
adc
jb
mov
out
mov
cmp
pop
xchg
add
test
popf
cmpsl
push
enter
xchg
mov
in
dec
rol
sub
lahf
in
cli
xsha1
cmpsb
dec
xor
add
pop
test
adc
stos
aad
mov
fcompl
jg
stc
loope
sub
or
push
dec
jge
pop
mov
imul
enter
scas
ficomps
and
int3
outsl
lds
inc
into
mov
add
test
mov
xor
lds
icebp
jecxz
retw
sbb
inc
incl
sbb
int3
or
or
cmpsl
xor
mulb
loope
jo
jo
sbb
mov
cmpsl
cmp
rorl
cwtl
mov
cltd
enter
inc
popf
inc
mov
or
sahf
push
sbb
inc
out
sub
adc
andl
and
dec
bound
add
popa
adc
mov
aad
loope
movsb
push
mov
mov
les
imul
in
loopne
mov
and
bound
pop
pop
add
cs
lock
ja
pop
xor
push
mov
sub
sarl
mov
inc
mov
lret
mov
mov
and
mov
or
into
lcall
push
das
dec
mov
fstl
outsl
cs
outsb
dec
ret
inc
add
movsl
sbb
cmp
xchg
mov
jmp
mov
inc
jl
xchg
in
ret
fs
mov
cltd
outsb
cmpsl
mov
jmp
push
test
mov
das
lret
int3
lret
in
adc
cmpsl
fcompl
jnp
mov
lods
lret
jnp
lahf
jmp
aaa
inc
sahf
jns
test
mov
out
mov
pop
repnz
int3
pop
pop
outsb
in
inc
out
cli
sahf
clc
mov
movsl
pop
addr16
divl
stc
or
sti
ret
sub
jbe
jmp
pop
dec
jnp
pusha
pop
hlt
lret
mov
sub
push
sbb
and
xchg
cmpl
and
dec
ja
sti
xor
cwtl
test
lods
mov
cld
rcrl
out
push
ret
lcall
ss
mov
loopne
xchg
xchg
pushf
movsb
int3
insb
adc
sti
ret
bound
gs
icebp
jne
push
je
movsb
jb
push
or
shrl
stc
data16
aam
jnp
ret
add
cli
inc
push
fsubrs
cli
fld
pop
js
lret
inc
jle
les
aam
jb
pop
lret
rorl
aad
jo
aas
repnz
add
xchg
pop
mov
mov
loop
fsubr
cmp
out
mov
cwtl
cli
mov
jmp
pop
push
arpl
ficoml
cli
push
ret
popa
mov
cmp
mov
mov
add
inc
dec
lods
jmp
inc
mov
lds
jnp
popf
rorl
ja
mov
or
ret
sahf
imul
inc
outsl
fiadds
fldt
stos
jne
sti
ds
pop
test
repnz
jae
mov
test
sbb
jp
and
pop
mov
call
adc
push
or
shl
idivl
lea
jg
pop
test
and
in
call
pop
outsb
imulb
mov
stc
mov
pop
rcll
in
shl
inc
sbb
cmpsl
or
loop
xchg
imul
and
cmp
pop
stos
and
setno
and
nop
stos
sarb
mov
mov
fstl
adc
dec
push
pop
inc
sahf
xchg
fs
sarb
movsb
movsb
mov
add
and
pop
xchg
sub
mov
pop
inc
inc
xchg
mov
lea
lock
sbb
cld
pusha
xchg
or
sbb
jnp
dec
fnstenv
sbb
or
mov
jnp
ret
cmp
add
rorl
dec
pop
sub
push
out
sbb
xchg
mov
ret
xchg
dec
out
ficoml
pop
ljmp
add
mov
shll
and
loop
xchg
cmc
int
mov
fs
pop
repnz
ds
mov
fs
lods
cltd
sbb
cwtl
sar
les
dec
pop
cmc
or
mov
inc
hlt
rolb
icebp
jns
nop
sub
nop
adc
push
cmp
fucomip
out
pop
into
fdiv
pop
adc
jp
pop
call
mov
dec
mov
test
and
inc
mov
and
mov
les
div
add
jle
sarl
mov
jp
stos
jmp
sub
xor
or
cld
out
push
cli
outsb
push
sub
shll
dec
xor
cmp
or
lods
pop
inc
push
xor
scas
mov
adc
movl
imul
cmpb
mov
ljmp
dec
fwait
pop
xor
mov
add
and
push
out
dec
or
adc
and
add
xchg
xor
mov
mov
cwtl
push
pop
dec
xor
aas
add
pop
lahf
stc
inc
clc
add
fisubrl
inc
mov
push
cwtl
lods
sahf
mov
ret
ds
or
out
scas
scas
add
push
ds
pop
bound
daa
cmp
or
cmovle
inc
rorl
inc
cmp
dec
add
mov
neg
mov
jle
inc
and
aam
xorb
dec
out
lahf
pop
test
mov
pop
add
pop
dec
cmp
lock
xchg
popf
mov
pop
adc
mov
cmp
add
movb
mov
data16
mov
out
pop
xlat
mov
pop
adc
aad
ja
adc
or
sub
jae
popa
dec
inc
add
cmp
adc
mov
xchg
add
insb
sahf
cs
push
test
sub
aam
lret
aas
and
lock
xchg
mov
push
push
push
lcall
mov
ljmp
add
cltd
lret
clc
mov
cmc
sbb
sbb
sub
incb
dec
push
mov
mov
jmp
sti
faddl
add
mov
xor
int3
je
loope
gs
add
push
push
jecxz
push
call
shrb
cmpsb
mov
or
inc
cwtl
jl
fsubr
adc
adc
ret
shrl
xor
aad
out
testb
sti
sbb
jl
movsb
scas
or
jecxz
fcoml
mov
addr16
push
mov
add
pop
setns
dec
loopne
xchg
in
rorb
jne
test
lds
mov
add
mov
adc
pusha
clc
mov
jg
cltd
add
adc
lret
popf
movsl
push
sub
sbb
xor
mov
pushf
adc
sarb
daa
and
and
xchg
mov
rcll
jg
outsb
pushf
call
lret
testb
sub
cmc
jne
mov
test
cmpsl
gs
mov
outsl
mov
or
movsb
decb
add
adc
jo
dec
je
mov
sub
jmp
add
iret
lret
enter
jb
movl
pop
fwait
stos
mov
adc
in
into
mov
call
outsl
push
fmulp
adc
sbbb
lock
outsb
rorb
xchg
cmp
into
mov
push
bound
ja
int3
lods
adc
mov
dec
mov
cmp
stos
pop
jecxz
adcb
lahf
xor
mov
stos
mov
sbb
lock
aam
mov
xorb
xlat
shlb
fstpt
insb
mov
pop
push
rcll
add
shll
mov
gs
xor
stos
stos
loop
dec
xlat
orb
sarl
outsb
rcll
jno
push
adc
cmp
mov
out
pop
sub
pop
int3
and
fistps
xor
shl
jg
ret
stos
fwait
inc
mov
adc
dec
icebp
fsubr
dec
sbb
sub
fs
out
mov
cmpl
insl
add
cmp
popf
shll
mov
sbb
adc
cmp
fbstp
xchg
pusha
jno
push
mov
lock
mov
inc
lret
sbb
in
jb
jae,pt
test
cmp
addr16
sub
js
cmc
sub
xorb
pop
mov
sahf
and
inc
outsl
inc
das
xor
cwtl
mov
or
pop
lahf
orl
sub
mov
mov
or
in
dec
mov
es
push
test
sub
cmp
pusha
imul
test
jae
mov
sbb
mov
loope
outsb
pop
pop
shl
xor
insl
cmp
add
push
in
aas
shr
mov
cwtl
dec
push
cmp
mov
mov
shl
ficomps
xchg
jae
cmp
cmp
pop
or
leave
push
and
jmp
xchg
call
shlb
enter
ja
dec
cmp
xchg
hlt
xchg
cwtl
push
push
inc
and
sbb
push
cmp
movsb
mov
shlb
sub
push
ud1
xor
sbb
inc
pop
out
loop
and
mov
adc
xor
mov
pop
xor
cmp
xchg
popa
lret
dec
lcall
xor
pop
std
cs
mov
inc
jb
setb
jecxz
xor
ja
js
test
pop
dec
pusha
mov
mov
jne
push
das
and
xlat
arpl
mov
popa
or
xchg
xchg
cs
inc
and
and
adc
push
out
push
cli
lahf
das
lahf
xchg
cmc
cld
in
adc
call
add
jecxz
mov
fstpl
lds
sbb
xor
in
stos
into
mov
repnz
and
mov
and
mov
sub
in
add
orb
out
aas
cld
xchg
xchg
add
mov
mov
fcmovnb
xor
ret
fbld
mov
loop
mov
adc
lods
sbb
jbe
jae
rorl
cmpsb
mov
xchg
je
cmp
andb
add
popf
cmpsb
mov
ds
gs
adc
daa
lret
jnp
das
xor
jns
xchg
mov
ret
sbb
jmp
insl
push
imul
mov
mov
js
lcall
jae
jb
inc
addr16
daa
or
or
and
pusha
dec
out
xlat
push
lret
add
push
es
mov
lahf
xor
sbb
pop
inc
cmp
shlb
and
lea
xchg
dec
enter
pop
aad
icebp
std
test
sbb
idivl
cwtl
mov
jb
shl
lret
in
ljmp
movsl
jmp
jno
jae
fsubr
test
adc
xor
push
cmp
push
inc
fistpll
clc
rcrl
mov
ret
pop
sbb
clc
push
daa
push
outsl
sbb
xchg
push
movsb
push
and
push
dec
repnz
je
sub
jnp
adc
jo
mov
adc
mov
jbe
movsl
mov
aam
dec
clc
ret
push
ss
jg
ret
push
sub
aad
pinsrw
popa
dec
dec
cs
or
dec
std
inc
or
mov
ss
fidivs
mov
mov
cltd
loope
push
xor
jnp
cmc
push
dec
sub
test
jne
movsb
pop
push
pop
xor
dec
fsubr
es
icebp
add
cwtl
shr
pushf
xor
int
jp
jl
insl
ret
dec
mov
bound
jo
pop
add
mov
mov
mov
add
adc
mov
push
lods
add
jne
mov
negb
das
cmp
dec
cpuid
shrl
jecxz
cli
popf
jmp
pop
mov
movsb
jecxz
mov
lahf
inc
pop
iret
fsts
mov
in
mov
lock
sbb
test
dec
decb
lahf
mov
jbe
pop
popf
push
sbb
sbb
add
lret
or
adc
sahf
scas
movsb
shll
dec
loope
inc
lds
lret
imul
les
sub
push
arpl
inc
xlat
mov
push
andl
lea
pop
cmp
repz
pop
in
xlat
mov
in
dec
pop
in
stos
roll
push
mov
stos
cwtl
scas
inc
iret
test
jle
push
lahf
adc
or
jmp
adcl
lret
pushf
push
cmp
or
mov
hlt
xorl
out
out
out
mov
sbb
fcoml
dec
sti
jnp
or
imul
inc
xchg
pop
lods
es
subl
jae,pt
addr16
dec
xor
aam
xchg
pop
xor
lods
push
iret
out
jle
or
fbstp
arpl
pop
ficomps
cmp
in
mov
jne
gs
loop
repnz
repnz
sarl
mov
outsb
gs
cli
mov
rcr
sarb
testl
pop
pop
dec
out
lods
sub
imul
pop
into
lret
out
and
loop
pop
into
mov
mov
scas
push
mov
xchg
les
and
pop
jge
xchg
mov
fdivs
xchg
cmc
scas
adc
xchg
cmp
sub
and
mov
mov
rcll
mov
addr16
and
lds
sub
xor
inc
mov
or
inc
push
cmp
cmp
rcr
push
stos
stc
xor
frstor
std
in
scas
dec
jne
add
leave
in
sbb
push
ss
push
jo
and
test
fsubr
mov
xchg
cmp
jb
sti
es
sub
jbe
pop
clc
dec
pop
jecxz
cld
out
add
sbb
xchg
in
sbb
xor
sub
ljmp
cmpsb
out
nop
sti
sbb
enter
adc
cmpsl
cmp
into
shlb
imul
out
cmpsb
dec
ds
sarb
movsb
cmp
mov
jb
aaa
sub
ss
jge
xchg
cli
mov
nop
mov
cmp
mov
sbb
shll
cmp
scas
jp
addb
sti
pop
fistl
jne
xchg
imul
gs
or
ret
nop
inc
or
popa
inc
mov
in
adc
aad
mov
dec
cld
mov
icebp
or
out
xor
sbb
dec
insl
lahf
mov
mov
inc
dec
fstpl
testb
cmp
jnp
or
ficoms
add
mov
ret
mov
jmp
insb
xchg
in
imul
lods
jp
jnp
in
lea
push
cmp
xchg
cli
pop
inc
adc
push
jl
pushf
push
mov
mov
sbb
adc
outsb
pop
jecxz
adc
int3
call
shlb
cmp
inc
sub
lea
and
sbb
fidivrl
lret
mov
xor
in
repz
mov
rcrl
aad
mov
outsb
mov
es
sub
add
adc
add
jmp
scas
and
mov
popf
sahf
push
out
jbe
mov
dec
push
mov
push
sbb
cmpb
out
jnp
ud1
addb
dec
mov
andl
add
clc
in
bound
inc
sub
jnp
xchg
xchg
std
xchg
adc
push
outsb
and
and
dec
inc
adc
mov
stc
iret
sbb
mov
lds
dec
pop
and
mov
repnz
adc
mov
movsl
imul
mov
data16
aaa
cli
decb
shrl
gs
jle
pop
lahf
lret
adc
shll
test
add
inc
xchg
cmp
sbb
xor
sti
imul
mov
add
into
fcmove
adc
xor
dec
pop
mov
call
aad
xor
sti
cmp
cmp
adc
push
aas
push
call
push
aad
mov
ret
pop
inc
push
inc
jecxz
in
out
scas
rolb
xor
xchg
fcoms
or
xor
cwtl
mov
popf
add
mov
cli
jnp
scas
test
nop
and
aas
push
ss
insb
dec
pop
inc
add
enter
mov
inc
dec
dec
mov
xor
js
enter
in
add
idivb
sub
mov
jmp
out
loop
adc
bound
lods
sarl
nop
cld
ja
icebp
outsl
xor
sti
jns
and
adc
sub
test
daa
and
dec
fistpl
dec
mov
ret
mov
and
mov
aam
mov
sbb
shll
mov
fistpl
popf
or
adc
mov
imul
mov
cmpsb
mov
mov
xor
outsl
call
and
scas
dec
pop
cmp
sarl
das
push
adc
sbb
cwtl
xchg
mov
cld
cmpsb
sbb
mov
shrb
jl
loopne
cli
push
aas
adc
js
jnp
data16
insl
jmp
sahf
mov
in
in
xor
jns
lahf
dec
jl
addr16
mov
fldl2e
add
or
daa
rcr
push
or
icebp
xor
in
push
or
fwait
ret
test
mov
lds
pop
xchg
loope
inc
data16
lea
xor
icebp
dec
fsubp
mov
sbb
inc
loope
adc
mov
enter
jecxz
xchg
push
jle
clc
clc
sti
xor
mov
int3
xchg
pop
pop
xchg
int
push
inc
rclb
imul
or
push
cmp
sbb
push
shlb
out
and
pop
and
inc
cmp
jo
and
cmp
cli
dec
inc
loope
mov
jbe
movsb
idiv
sub
je
cmp
cld
in
mov
sbbb
aad
mov
jns
cld
mov
dec
sub
push
mov
ficompl
xchg
sub
jae
cmp
push
push
lret
sub
in
xor
cmp
mov
outsb
push
cmp
xor
xchg
aas
sbb
insb
inc
shl
add
push
jo
lcall
add
outsl
jns
adc
lcall
or
lcall
jbe
xchg
sub
jns
and
xchg
andl
loop
cmp
adc
js
popa
lds
inc
popf
mov
popf
cmpsl
mov
ds
adc
rcrl
ljmp
pop
adc
push
sub
rcll
scas
jle
inc
insl
les
in
imul
or
cwtl
imul
dec
pop
bound
or
pop
mov
and
fsubrs
fsubl
lahf
jmp
lret
lea
xchg
jl
mov
and
inc
jl
out
cld
add
loope
pop
mov
in
push
inc
xchg
hlt
nop
mov
scas
and
lret
je
insl
icebp
test
lret
in
pop
inc
xchg
fisubl
and
push
jle
repz
mov
std
pop
sahf
xchg
sbb
adc
andb
inc
pop
lret
adc
es
ljmp
lahf
rcrb
popa
mov
and
fsubl
push
popf
bnd
pop
sub
mov
cmp
sub
rolb
into
cmpsl
mov
aaa
addl
xor
sub
sarb
add
pop
lds
mov
xchg
lret
push
shrl
or
ljmp
fbld
or
cmpsb
in
jmp
fisttpl
jmp
mov
lahf
scas
mov
mov
pop
push
lods
xchg
jb
push
dec
mov
push
test
mov
stc
adc
cmpsl
pop
push
jle
jmp
and
and
add
sarb
xor
mov
and
sbb
mov
shrl
ds
in
popa
in
push
xor
ss
mov
mov
xor
pop
push
pop
repnz
cwtl
jl
sub
out
aam
cmc
fs
idivb
hlt
decl
adc
fwait
jne
stc
mov
mov
mov
push
int3
into
pop
or
aaa
mov
cmpsl
pop
and
xor
cmpsb
out
and
jb
mov
mov
cwtl
lcall
movsl
nop
aas
xor
idivl
hlt
sbb
sahf
clc
push
push
rcrl
stos
icebp
fmull
sub
push
mov
pop
in
pop
jmp
addr16
lods
cmpsb
out
out
popf
dec
fsubrs
inc
pushf
fstpl
rol
xor
ret
fisttpll
xchg
or
xor
mov
xor
lcall
jo
das
inc
icebp
and
adc
or
jb
pusha
std
out
push
sbb
mov
pop
xchg
dec
xor
aaa
mov
jae
sbb
mov
nop
jne
add
fsubrp
lods
add
notl
inc
or
sub
adc
loopne
or
sti
xchg
loop
jo
dec
std
add
pop
sti
jg
iret
xchg
xchg
push
test
jmp
bound
xchg
cmp
inc
xchg
mov
pop
pop
jl
test
dec
out
insl
mov
imul
mov
dec
push
rcrb
dec
sub
scas
inc
cli
popa
sbb
sub
adc
mov
mov
or
ja
inc
sti
dec
jns
scas
cltd
fnstsw
mov
jp
mov
or
pop
pop
inc
mov
inc
jae
in
fcoms
jnp
xor
xchg
test
xor
mov
or
adcl
test
clc
push
out
inc
adc
int
addb
adc
push
pop
adc
loope
pushf
mov
inc
and
mov
clc
jg
pushf
mov
lods
jmp
mov
add
push
aad
mov
xor
dec
mov
pop
out
test
cmp
xchg
movsb
jne
cmpsl
in
dec
mov
pop
sahf
cmpsl
sub
add
xor
push
and
mov
rcrl
mov
pop
and
cmp
stos
out
dec
loopne
cmp
xchg
lret
mov
andb
adc
lahf
dec
and
sbb
outsl
dec
xor
xor
xchg
int
cmp
gs
dec
mov
cmpsb
sub
pop
sti
lret
jg
xchg
mov
ss
cmp
cmp
mov
or
pop
pusha
add
loop
stos
arpl
sub
adc
inc
fstpl
cmpsb
rcl
ja
xchg
and
pop
test
jo
in
pop
sub
and
fcmovnu
adc
nop
sarb
xor
dec
push
mov
pop
cmp
cli
loope
jnp
fbstp
int
dec
imul
arpl
push
adc
inc
mov
xlat
negb
push
in
push
lock
pop
jmp
clc
fs
and
xchg
mov
fsubrs
xor
sub
test
not
push
sbb
xchg
mov
jl
in
mov
aaa
adc
movl
cmp
out
and
cmp
in
cmpsb
mov
in
mov
lods
insl
ds
das
iret
pop
dec
sub
mov
adc
add
xchg
sahf
cmp
sub
mov
in
lcall
inc
mov
sbb
pop
daa
imul
cmc
or
push
ret
test
lcall
out
lret
pop
cmpsl
push
xchg
sbb
lret
aaa
flds
leave
out
scas
pop
not
mov
add
lds
insb
pop
jp
mov
insb
shrb
or
jge
jno
ficomps
cmp
inc
and
and
and
push
pusha
testb
outsl
pushf
movsl
jns
and
adc
lds
insl
cmp
pop
cmp
cmpl
scas
push
cwtl
int
fdiv
loopne
push
mov
inc
test
cli
shll
in
xchg
popa
ss
lods
mov
dec
fstps
movsb
fdivs
sub
out
insl
ret
and
pop
rorl
pusha
dec
jge
xor
jp
arpl
mov
shr
xor
push
push
rcr
daa
mov
adcl
pop
inc
nop
push
pop
int3
pop
lds
repz
push
pop
enter
push
xchg
cli
pushf
xchg
insb
and
mov
push
mov
out
cmpsl
ljmp
xchg
mov
es
jns
pop
imul
jg
int
insl
mov
cli
add
dec
mul
or
push
jnp
adc
subl
mov
cmp
ds
test
mov
shll
cwtl
nop
cltd
mov
in
add
push
pop
xor
mov
mov
ja
inc
outsb
xchg
sub
sbb
pop
test
jnp
out
test
in
jl
cmp
push
cmp
adc
mov
imul
jecxz
repnz
xor
in
sbb
stos
mov
flds
fsubrp
or
aaa
pop
cmp
jle
fisubrl
dec
fs
lea
pop
aam
out
mov
and
cmp
test
test
mov
popf
sub
mov
mov
mov
cwtl
push
mov
sub
data16
ret
cmp
mov
je
cmp
xchg
loope
dec
and
push
jns
xchg
andb
addr16
xchg
out
js
xchg
jmp
imul
push
scas
mov
scas
cmpsl
push
and
adc
jle
push
icebp
pop
sub
add
test
test
jno
inc
into
mov
and
and
cmpsl
and
xchg
fmull
aam
sbb
push
xchg
sarb
repz
decb
loope
jge
dec
pop
xchg
in
dec
lods
pop
lods
push
xchg
mov
jo
aaa
cld
mov
stos
out
stos
sbb
in
add
int
mov
cmp
xchg
test
add
repnz
aaa
nop
addr16
or
lcall
cmp
and
rorl
fcoml
pop
jg
adc
outsb
ret
adc
mov
sub
dec
ret
lcall
adc
aam
pushf
mov
push
xchg
clc
ljmp
jle
lds
mov
imul
movl
cmp
xchg
insb
mov
xchg
lret
add
xor
inc
arpl
or
push
lods
lods
cmp
and
adc
loopne
jbe
mov
shrb
fiaddl
jg
and
cmpsl
adc
sahf
shrb
mov
scas
mov
scas
cs
push
sbb
enter
cmpl
repz
mov
pushf
insl
jp
jae
hlt
lds
push
cmpb
loopne
fiaddl
test
fistps
jnp
out
push
pop
xchg
jmp
or
js
inc
mov
stos
fs
cmpsl
jle
cmpsl
aaa
fwait
xor
popf
mov
mov
push
scas
or
lret
in
xchg
sahf
cmp
dec
xorps
popa
jb
cmpsb
ret
inc
sahf
push
scas
fdivl
mov
ficomps
gs
sbb
std
mov
xor
sbb
inc
inc
stos
xchg
mov
mov
dec
nop
adc
sbb
push
cltd
mov
pop
pop
repz
mov
ds
pop
dec
ror
jbe
jle
xchg
xchg
repz
mov
cmpsb
push
lea
cmp
sub
or
push
push
jae
std
lret
ficompl
mov
mov
mov
lea
loopne
movsb
in
andb
pop
je
jl
ds
mov
popf
gs
or
movsb
xlat
decl
sub
jmp
xchg
data16
cwtl
cmp
mov
vpcmpgtd
xchg
sub
sbb
in
sub
lea
cwtl
adc
cltd
xchg
aam
mov
outsl
in
push
cmp
add
inc
dec
cmp
hlt
and
sahf
adc
and
addr16
cli
imul
imul
cmp
inc
arpl
cmp
mov
xchg
movsb
jl
cmp
lret
lds
js
mov
lahf
or
hlt
sti
sbb
and
lret
jne
mov
or
movsl
mov
inc
ds
daa
xor
pushf
xor
xchg
les
rorl
popa
sbb
jnp
inc
inc
xchg
inc
pop
add
scas
lods
add
jne
pop
mov
inc
ret
or
popf
in
sbb
push
ss
cmp
mov
in
insl
popf
sbb
mov
mov
adc
pop
fbld
inc
cmp
or
mov
frstor
popf
mov
and
shlb
in
or
sub
add
xor
aad
es
inc
mov
popa
cmpsb
jb
add
outsb
lods
out
add
sbb
pop
xlat
pop
pop
add
xor
push
jg
mov
fstps
popf
jnp
sub
shl
in
pop
jae
stc
and
je
roll
pop
cmp
leave
cwtl
inc
mov
push
scas
mov
cmpsb
cmp
fsubs
out
clc
jne
adc
insl
add
cmp
jae
cwtl
aad
jmp
aas
mov
jmp
lahf
pop
cmpsl
ret
sbb
adc
xchg
mov
fistps
mov
imul
fsts
and
es
xchg
mov
mov
call
xchg
sbb
lods
xchg
loopne
push
jbe
mov
cltd
cmp
mov
test
jmp
popf
adc
inc
xchg
pushf
les
nop
mov
fsubrl
insb
push
sbb
out
outsl
sbb
fsubrs
in
xchg
lret
lods
bound
xchg
sbb
mov
and
call
xor
cld
sub
inc
dec
popf
sbb
sub
aad
mov
adc
cmpsw
or
jno
xchg
pop
mov
lahf
or
aad
xor
xchg
hlt
in
cmovno
bound
out
pushf
mov
data16
das
pusha
mov
lods
inc
xchg
test
ret
test
out
sub
sub
std
pop
sbb
or
push
xchg
lock
addr16
xchg
dec
cld
cltd
inc
fsubs
xchg
inc
lahf
loop
jne
cmp
fldenv
push
ds
cwtl
sub
sbb
in
sub
stc
in
inc
cld
cmp
jno
sub
cmp
add
sti
push
adc
sti
mov
mov
fwait
lahf
xchg
push
das
roll
out
push
pop
and
aad
shl
fwait
pop
push
jns
push
sub
mov
adc
shl
fldcw
fists
lret
faddl
sbb
adc
cmp
sub
mov
lods
scas
aas
cmp
dec
xchg
adc
cmpsb
xchg
sub
out
sbb
sub
lods
xor
push
clc
cs
nopl
pop
cmc
cmp
dec
mov
mov
mov
in
adc
xchg
mov
push
nop
adc
bound
loop
repnz
aaa
das
loopne
add
push
xor
jl
pop
lcall
ds
lret
and
and
mov
mov
mov
stos
or
mov
mov
push
sub
xchg
stos
push
gs
ds
xor
lret
daa
in
push
fists
add
aad
dec
add
add
xchg
push
sti
pop
insb
dec
cli
and
clc
fdivrl
fdivl
ret
enter
cmp
xchg
inc
pushf
dec
cmpsl
push
outsl
mov
shrb
lret
les
cmp
into
xor
xchg
mov
pop
cwtl
cwtl
or
rorb
pop
iret
loope
cmp
xor
movsl
push
push
adc
dec
mov
imul
pusha
iret
mov
adc
pop
jne
sub
mov
lret
dec
push
movsb
jns
inc
aam
cmp
insb
push
stc
lds
mov
insl
pushf
scas
incb
xor
fisubrl
scas
jp
sar
jno
test
out
dec
push
into
lea
out
repnz
ret
mov
sub
stc
popl
pop
out
lods
sbb
gs
push
fstp
mov
sbb
mov
fstp
cmp
mov
pushf
in
je
das
sbb
pop
ret
pop
lea
mov
cmp
je
adc
and
mov
push
pop
lahf
and
inc
stos
fnsave
out
shl
pop
adcb
aas
stos
bound
jo
ss
xor
mov
lahf
cmp
sub
xchg
fnstenv
xlat
loope
mov
mov
mov
xor
daa
jo
out
ja
int3
dec
mov
imul
imul
cmp
cmc
fsubrs
repnz
or
call
iret
pushf
mov
dec
icebp
movsl
adc
cwtl
lea
in
mov
rorl
sahf
dec
jae
push
pop
pop
jno
push
mov
das
inc
mov
jecxz
pop
sub
imul
aaa
and
jo
xor
lods
lods
xchg
idivb
cmp
or
pop
jae
inc
jp
js
add
aas
mov
mov
mov
test
test
movsl
mov
sahf
loopne
mov
stos
test
shrl
dec
mov
rol
jge
mov
jno
and
or
xchg
cmp
cmp
in
lcall
std
inc
mov
gs
scas
mov
leave
push
jl
mov
mov
loopne
xchg
add
call
cmp
test
cmp
sbb
or
inc
sahf
xor
popf
mov
xchg
jecxz
or
arpl
push
cmc
add
rcrb
nop
mov
movsl
jbe
fwait
inc
adc
fbld
es
int
imul
pop
dec
mov
repnz
xchg
jmp
or
sbb
in
shr
xchg
dec
movsb
data16
adc
ficoms
xor
fstl
out
xor
and
mov
and
xchg
stos
lcall
or
cmp
mov
dec
in
cmpsl
daa
out
cmpsl
notb
jno
andl
xchg
jl
add
jne
sbb
pop
scas
rcl
les
loop
les
fs
jae
pushf
lret
cmp
mov
sub
or
outsl
dec
cmp
adc
lcall
ja
bound
leave
fmull
add
inc
xlat
fisttpll
ja
mov
xor
add
ret
mov
mov
stos
pop
mov
cmpsl
imul
push
mov
cmp
test
repnz
arpl
sbb
push
dec
mov
nop
popa
push
aaa
roll
cltd
or
jle
or
mov
mov
inc
adc
xchg
gs
sub
xor
xchg
mov
xchg
adc
cmpsb
imul
les
cmp
jno
mov
sahf
xor
mov
fsincos
es
sbb
lea
jle
add
enter
into
lea
push
mov
loopne
xchg
inc
push
in
dec
xchg
scas
ja
inc
cmp
andb
mov
mov
push
inc
adc
pop
inc
adc
dec
inc
mov
ds
pop
iret
jge
inc
sti
and
or
ja
in
xchg
push
pop
rcl
ss
xchg
data16
adc
cmpsl
pop
xchg
stos
fcom
xchg
jge
imul
sbb
iret
out
mov
add
jo
imul
inc
dec
outsl
push
repz
push
rcll
mov
jae
imul
add
int3
inc
mov
xor
mov
fadds
sbb
lods
inc
mov
pushf
cmp
clc
loop
push
rolb
dec
hlt
push
adc
xchg
out
sub
fld
les
mov
iret
stc
xchg
xor
mov
and
or
xor
and
adc
mov
mov
pop
dec
mov
jmp
mov
daa
dec
cwtl
addr16
mov
ja
mov
lcall
stos
cmpsl
leave
bound
mov
dec
dec
jae
mov
sbb
or
mov
pop
sub
mov
loop
dec
jle
roll
enter
mov
push
jnp
mov
in
into
mov
sbb
pop
ficomps
sub
add
jno
stc
addb
push
clc
popf
xchg
adc
cmp
xor
and
cmp
fnsave
adc
mov
mov
sub
decl
xor
pop
jecxz
and
jnp
mov
sbb
inc
sub
jno
push
adc
fstl
xchg
cwtl
lret
bound
pop
les
mov
imulb
icebp
mov
dec
cwtl
ljmp
dec
cltd
push
rclb
sub
dec
mov
mov
pop
int3
fiaddl
jns
xor
pusha
je
xlat
xchg
inc
leave
testb
pop
in
sbb
test
jge
sahf
push
adc
jecxz
jns
or
xor
xchg
sbb
out
mov
gs
popa
adc
jmp
mov
adc
stc
ds
mov
popf
nop
or
xchg
inc
xor
xchg
mov
mov
jmp
dec
xorb
bound
ret
movsl
push
mov
fxch
bound
or
stos
out
aam
xor
insl
call
es
cmp
jecxz
mov
addr16
adc
nop
xchg
enter
sub
push
jno
lea
test
pop
popa
or
push
pop
test
xchg
dec
call
push
mov
pop
stos
push
insl
cmc
in
int
fiaddl
add
pop
lcall
jl
jae
pop
ljmp
mov
jle,pt
ljmp
fcom
xchg
mov
aas
orb
cli
mov
dec
cmp
popa
and
lahf
and
mov
dec
jo
subl
push
push
inc
mull
jg
mov
cmp
cmp
cmp
xchg
jno
mov
add
dec
inc
cmp
mov
sbb
push
sub
sbb
in
test
mov
dec
pushf
cmp
out
inc
comiss
push
out
clc
jbe
mov
loop
enter
arpl
xchg
mov
cltd
mov
jg
jmp
push
mov
aam
push
out
xchg
into
lods
xor
fnstsw
push
mov
and
fisubs
lea
pop
add
lahf
cmp
adc
mov
mov
clc
call
ss
jecxz
cwtl
xchg
mov
push
sbb
mov
iret
sbb
inc
int3
stos
add
imul
pop
pop
in
pop
loope
test
lea
test
mov
sar
and
hlt
or
push
outsb
jb
lahf
rorl
adc
leave
pop
je
pushf
shrb
lahf
dec
test
iret
imul
pop
xor
sub
fisubl
lods
mov
insl
inc
sub
jl
outsb
pop
stc
mov
fxch
lahf
sub
or
bound
cmp
popf
cmpsl
push
les
or
mov
jle
sub
mov
lods
pop
inc
in
aaa
sub
pop
and
xor
mov
rcr
stc
lahf
lret
pop
dec
xchg
lea
mov
clc
dec
test
jg
or
inc
push
insl
outsb
cmpsl
lock
dec
or
stos
cltd
sub
pop
les
mov
lret
push
punpckhbw
insl
aas
cmpsb
sbb
cmp
ljmp
cmp
and
rcr
popf
hlt
pop
lock
rorb
jb
mov
mov
mov
sbb
sbb
lea
add
divb
dec
sub
fcompl
mov
sbb
push
jbe
mov
loopne
add
mov
xchg
push
mov
stc
imul
jnp
push
mov
lahf
xchg
mov
int3
jne
mov
mov
mov
xchg
cld
mov
xchg
gs
stc
in
inc
ds
test
or
sub
lret
pushf
enter
in
int
mov
jno
insl
popf
adc
cs
mov
fldcw
cltd
sbb
ss
cmp
or
mov
in
adc
int
inc
cli
fadd
xor
pusha
pop
add
bound
movb
adc
mov
adcl
xor
subb
ficomps
cmp
mov
or
jnp
pop
scas
in
dec
xor
cli
inc
jno
icebp
sbbb
lcall
jnp
or
test
mov
sahf
stos
arpl
cs
pop
mov
aaa
jmp
into
mov
stc
inc
fildl
dec
int
push
fnsave
fdivp
mov
xorb
adc
leave
pop
push
cs
gs
push
movsl
sub
push
in
push
lahf
cltd
testl
xor
push
lahf
or
orb
push
jno
and
xlat
jne
sub
xor
lds
jns
add
fwait
mov
pminub
dec
das
ja
xchg
push
sbb
add
cmpsl
cld
repz
cmp
pusha
jns
int3
dec
jp
test
popf
cmp
je
sub
cltd
jno
nop
imul
jo
rol
das
insb
inc
push
scas
ret
aas
and
les
dec
or
imul
popf
inc
jae
stos
jae
or
outsl
xchg
imul
xor
enter
mov
jge
xchg
add
add
into
test
movb
mov
andl
cmp
push
cmpsl
dec
les
dec
cmp
div
and
dec
pushf
dec
stc
jb
es
rolb
xor
pop
addr16
nop
xchg
mov
daa
push
sbb
iret
stc
in
adc
xchg
jmp
mov
sbb
mov
in
mov
xor
and
sti
xchg
mov
inc
fldl
cmp
inc
jne
adc
les
das
or
mov
adc
mov
out
icebp
jge
rclb
cs
add
icebp
adc
mov
cmp
shlb
scas
adc
nop
clc
inc
jp
sub
lea
movsl
jnp
movsl
jne
lock
aas
mov
inc
aaa
push
cmp
movsb
xchg
mov
mov
mov
jg
adc
stc
imul
adc
push
or
clc
test
ds
fistps
fdivrl
xchg
push
jp
mov
mov
jnp
imul
or
xor
pushf
test
pushf
xor
iret
jecxz
or
dec
xlat
dec
pop
add
nop
mull
fildl
lods
and
sti
hlt
mov
xlat
loop
pop
movb
mov
int
sti
adc
cli
fcmovnb
and
xchg
outsl
sbb
fstpl
mov
dec
pop
dec
daa
push
mov
mov
cwtl
nop
stc
or
stos
mov
push
jne
sub
push
test
xor
fdivrs
mov
lea
sahf
pop
cltd
jmp
aaa
cmpsl
imul
inc
cmc
ljmp
and
push
xchg
jns
ja
andb
add
mov
mov
test
cmp
hlt
dec
push
push
ss
repnz
cmp
pushf
cld
test
rorb
push
add
mov
xchg
loope
outsb
stc
and
fisttpl
addr16
mov
outsl
pop
adc
fdivrp
push
jne
adc
xor
pop
or
mov
decl
dec
and
adc
cmc
or
jge
adc
cld
leave
loop
dec
sbb
cmc
fwait
pop
push
rclb
or
push
sarb
cmp
xchg
mov
rolb
pushf
in
sub
xchg
mov
or
aam
stc
rcrl
shll
add
sahf
xchg
loope
sbb
clc
into
in
or
mov
into
lock
test
jmp
lea
add
test
sarl
clc
scas
cli
outsb
pop
push
lcall
xchg
insb
xor
repnz
adc
imul
jae
lea
jecxz
fwait
jp
dec
scas
fistpll
pushf
int
mov
mov
sahf
mov
stos
testl
ret
pop
aam
ja
inc
ljmp
stc
fidivrl
fcomi
fcmovnb
inc
push
ljmp
push
enter
inc
cmp
mov
sub
ds
popf
pusha
cli
adc
pop
aaa
stos
or
inc
xchg
inc
push
adc
mov
js
add
arpl
loop
hlt
push
or
orl
mov
mov
shl
mov
xchg
and
add
mov
out
lahf
iret
pop
cmp
xor
push
xor
sbb
xchg
int
test
mov
push
mov
int3
pusha
das
mov
out
std
or
push
cmpsl
shl
stos
jg
es
or
jns
xor
fwait
lock
mov
aas
add
cli
xor
testl
add
call
mov
jecxz
cmp
enter
shll
pushf
loope
jecxz
jo
outsl
fldenv
insl
xchg
sub
mov
push
dec
jge
fcmovnu
sub
jg
insb
es
push
xor
lahf
pop
sub
xor
lcall
xchg
mov
movsl
pop
push
ja
pop
cmp
fsubr
bound
fwait
or
or
mov
stos
addr16
sti
inc
pop
aaa
loope
shlb
mov
jb
lcall
ret
lret
in
test
jo
out
leave
flds
and
xor
lea
scas
push
dec
mov
inc
xchg
jmp
repz
cmpsb
insb
pop
fwait
jnp
push
mov
xlat
push
xchg
mov
mov
rolb
out
negl
popa
xlat
inc
arpl
lds
xlat
jp
push
mov
or
fdivl
jge
insb
inc
pop
push
ret
movsb
or
push
push
into
out
out
fisubrl
sbb
push
mov
pop
sbb
cli
int3
mov
adc
lret
sbb
hlt
pop
xchg
dec
and
jp
orb
inc
sti
and
outsl
xor
push
in
rcll
xchg
and
mov
scas
mov
test
inc
add
and
mov
out
int3
repz
scas
pop
add
pop
push
outsl
xchg
jge
xchg
aad
sub
and
push
pop
aas
mov
int3
fists
inc
lret
lcall
and
shll
rolb
and
inc
mov
and
cwtl
test
sbb
insl
ds
test
icebp
cmpsl
fbstp
lcall
test
jae
movsb
dec
dec
dec
fcmovnb
sti
push
sbb
pop
ds
unpckhps
mov
scas
out
cmpsl
adc
push
gs
stc
adc
cmp
jge
pop
push
pop
andl
dec
in
sbb
mov
lret
or
fnstcw
and
pop
sbb
inc
scas
and
test
rcll
sbb
add
lock
bnd
jns
je,pt
shr
scas
pop
fcmovnbe
xlat
cwtl
and
sub
sbb
adc
sbb
and
mov
sti
call
jne
jnp
roll
mov
xor
push
clc
in
push
repnz
xchg
mov
ljmp
push
aaa
ljmp
sbb
mov
push
jmp
or
pop
jp
mov
sub
pop
roll
cld
jnp
stos
in
or
in
pop
xor
mov
clc
or
jp
into
rcl
popf
push
or
shl
aaa
sbb
and
xor
bnd
xor
insl
inc
mov
imul
shlb
push
mov
in
jg
cld
lret
or
ja
jb
mov
push
pop
shrb
xchg
xor
bound
pushf
cmp
pop
xchg
in
movsl
xchg
mov
jmp
cmp
pop
push
ja
jnp
sti
test
cli
xchg
xchg
push
and
push
dec
pop
je
jns
adc
add
int3
lods
insb
mov
les
in
adc
sbb
sub
inc
mov
sbb
inc
out
mov
aad
aad
cmp
xchg
push
call
or
imul
shll
xor
adc
mov
jnp
imul
xchg
jecxz
lods
or
sarl
xchg
test
and
jae
inc
mov
imul
or
lock
popf
mov
xchg
sbb
fdiv
roll
push
or
in
addr16
mov
lea
aas
icebp
push
sub
add
cmpsl
pop
and
popf
cwtl
push
rcll
xor
sub
ljmp
mov
js
in
movsl
stos
xor
inc
cmp
nop
jecxz
into
cmpsl
shll
sbb
xor
mov
popa
into
and
mov
xchg
sub
loope
outsl
test
push
dec
stos
push
xchg
andb
mov
add
mov
jb
rcrl
mov
ret
out
cmpsl
or
loop
dec
mov
lds
mov
nop
xor
pop
mov
inc
or
ret
cld
or
xor
nop
pop
dec
test
pop
fwait
inc
scas
fld
addr16
push
in
stc
scas
jo
ss
adc
push
pop
daa
icebp
jae
xchg
in
dec
rcrb
xor
lods
daa
pop
out
dec
stos
daa
push
sub
pop
jmp
sub
pop
or
cli
jmp
repnz
movsl
xchg
lock
pop
dec
lock
cmpsb
dec
popa
mov
daa
ficomps
mov
arpl
rcr
push
jl
sti
xorb
inc
mov
loope
cmp
loop
mov
jl
popl
adc
bound
mov
add
mov
pop
ret
push
test
stos
call
popa
lds
popf
addr16
mov
jnp
pop
xchg
jnp
push
scas
or
mov
mov
jnp
dec
jnp
cmp
rcll
nop
push
test
jecxz
clc
cltd
jl
mov
add
es
cmc
cld
xchg
test
inc
sti
dec
mov
outsl
mov
insb
or
int
mov
jns
cmc
xchg
sbb
fcomp
xchg
mov
rorb
int3
lret
xor
cmp
push
pusha
pushl
xor
and
mull
rorl
inc
sub
orb
xor
mov
sub
lcall
pop
stos
imul
xchg
pusha
and
negb
or
sub
subl
int
pusha
pusha
fwait
pcmpgtb
mov
push
orb
mov
nop
sbb
sbb
rorb
and
sub
push
mov
ja
dec
add
lahf
repnz
jo
dec
fadd
lcall
xor
ret
test
and
mov
pop
sub
dec
mov
jle
and
xchg
mov
mov
xchg
push
lcall
push
add
push
cmp
inc
in
es
mov
outsl
loop
and
es
std
inc
push
mov
enter
push
addr16
and
jnp
dec
mov
js
enter
lds
mov
adc
mov
mov
xor
popf
shl
in
push
jmp
cmp
or
cmp
pop
jb
mov
loop
mov
xchg
das
mov
aas
pop
bound
mov
push
pop
icebp
fistps
or
rcrl
rcrl
ljmp
sti
sub
out
xor
inc
cld
sbb
pop
mov
mov
dec
inc
arpl
sub
fdivrl
mov
scas
push
andb
adc
mov
clc
sbb
ret
dec
push
mov
stos
ljmp
popa
aam
mov
test
es
push
adc
sub
xor
cmp
or
fidivrl
sbb
pop
repnz
push
dec
dec
or
and
cmp
daa
jmp
push
mov
push
pop
test
leave
outsl
push
mov
push
popf
insb
pop
lds
push
sahf
adc
pusha
pop
jle
int3
jo
movsb
cmp
dec
adc
sub
lret
ret
addl
loop
cwtl
dec
gs
xchg
lret
xorb
scas
inc
sub
push
jns
inc
mov
push
flds
fcomps
pop
test
lcall
les
pop
lahf
pusha
out
loopne
or
xchg
adc
mov
mov
inc
imul
iret
xor
addb
rcrb
inc
addr16
test
in
cmc
stos
push
push
push
faddp
out
movsb
push
movsb
xor
mov
xor
addr16
sahf
idiv
push
dec
pushf
orl
jp
int3
out
dec
dec
add
orps
arpl
cmp
hlt
pusha
jle
lahf
pop
int3
xchg
and
jb
xchg
popf
jne
loop
mov
adc
cmp
pop
sbb
cmp
push
jle
dec
aam
xchg
add
into
fmull
sahf
cmp
imul
add
cmpsl
out
mov
and
in
popa
int
insl
clc
mov
jle
inc
sarb
push
mov
repnz
gs
sbb
inc
xor
push
push
cmp
xor
mov
push
popa
mov
out
mov
iret
jmp
clc
stc
adcl
lock
cmp
ret
inc
mov
test
rcr
mov
mov
int
aam
adc
mov
out
or
and
adc
push
mov
outsl
dec
jnp
sbb
adc
fcomps
icebp
mov
popf
cs
stos
and
std
sub
enter
xor
xchg
jmp
dec
cmpsl
push
adc
or
hlt
loop
mov
jl
mov
xor
add
mov
dec
dec
push
cmpl
xor
mov
mov
fcoml
scas
repnz
dec
jge
add
repnz
int
fcompl
outsb
sbb
imul
rolb
mov
mov
cld
hlt
add
pop
mov
mov
aas
jg
xor
ss
popl
imul
mov
sub
jle
pop
mov
add
inc
ret
movsl
incb
mov
fwait
dec
lret
push
out
cmp
pop
pop
fcoml
sub
pop
stos
adc
add
adc
int3
push
and
fcomp
add
enter
test
sub
push
cmp
sub
mov
mov
adc
or
xor
dec
lcall
or
mov
pop
out
mov
push
xor
jecxz
dec
gs
movsb
mov
jl
add
inc
int3
ljmp
test
inc
out
loope
sarb
pop
jle
aas
sbb
jbe
dec
insl
mov
mov
jns
sahf
faddl
int3
arpl
mov
test
pop
push
arpl
mov
dec
pop
aaa
cmpsl
xchg
jne
int3
cmp
hlt
inc
dec
andl
sbb
mov
ljmp
pop
bound
imul
mov
and
fdivl
sub
shufps
pop
in
icebp
imul
jne
mov
add
idivb
ret
aas
adc
pop
lds
lds
jae
enter
popa
sahf
ja
test
xchg
mov
cltd
push
jp
mov
dec
dec
jno
cltd
pushf
outsb
cwtl
inc
lds
lahf
xor
jno
mov
sbbl
mov
out
pop
jg
push
aaa
ret
xchg
sbb
cmp
push
or
jb
es
jge
dec
fs
lahf
dec
add
in
mov
sub
bound
lds
rorb
mov
xchg
popf
cld
inc
inc
inc
sub
pop
jnp
and
xchg
jg
mov
outsb
jnp
mov
xchg
lods
dec
or
cmpsl
divps
add
lret
pop
mov
mov
jae
sub
push
lret
fbstp
sub
out
js
mov
jne
mov
insl
ja
add
push
and
aaa
insl
ljmp
cs
mov
jl
and
sbb
mov
xchg
pop
sub
mov
mov
push
sub
adc
adc
mov
addl
iret
test
mov
repz
xchg
dec
icebp
sub
lds
shrb
imul
cmp
leave
jp
sarb
pop
adc
shll
sub
xchg
sub
sub
jp
outsb
mov
push
push
mov
sub
test
inc
add
sub
xor
pusha
dec
lods
addr16
dec
jl
dec
inc
test
int3
test
out
jmp
mov
test
push
lahf
pop
in
xchg
lock
push
sbb
xchg
push
push
ret
jbe
lcall
jno
sbb
inc
mov
mov
rcr
add
inc
mov
sbb
inc
pop
mov
adc
inc
lahf
sub
cmp
fsubrl
das
ficomps
shlb
xor
xchg
popf
push
movsb
es
sti
xlat
mov
push
loopne
test
cmp
inc
and
mov
fldcw
popf
imul
xor
sub
mov
out
lods
aad
mov
ljmp
cmp
outsl
jae
and
mov
xorl
mov
push
cmp
add
into
jb
fs
rcll
negl
sub
pop
lods
mov
dec
ljmp
ss
movsb
mov
sbb
lock
cmp
sbb
push
shlb
fnstenv
xor
popa
aaa
adc
xchg
aad
push
in
in
jnp
cli
popa
xchg
add
inc
clc
jo
mov
lahf
aad
repz
sbb
jbe
loopne
flds
inc
adc
repz
stos
and
mov
mov
fcoms
and
inc
call
jae
sub
in
add
cmp
in
mov
sbb
xor
fwait
push
mov
lret
mov
mov
mov
dec
add
mov
xchg
jne
pop
sbb
push
fwait
xchg
pop
add
aas
inc
mov
pop
js
push
and
mov
mov
xchg
jns
stc
or
mov
xchg
in
hlt
fldcw
cltd
stos
sbb
sub
aaa
push
dec
xor
and
inc
xor
cs
inc
imul
sbb
xor
lock
lret
sbb
inc
aas
add
fs
leave
js
mov
cmpsb
xor
jecxz
or
outsl
leave
in
add
jl
or
and
out
mov
mov
push
jp
popf
push
cmp
jae
jns
mov
pop
loopne
sbb
add
mov
and
sub
jnp
push
add
lahf
das
push
inc
add
push
je
xor
std
cwtl
mov
rcr
imul
xchg
lds
jecxz
sbb
cmp
push
mov
rcrb
out
cmp
shlb
loopne
sub
fs
les
mov
add
movsb
sbb
repnz
fdivs
xchg
es
nop
lea
pop
adc
sbb
xchg
fists
inc
fwait
sahf
adc
adc
adc
dec
mov
jae
nop
xchg
enter
arpl
jp
jns
sti
or
aas
mov
pop
lret
sbb
push
or
mov
int3
out
or
in
or
pop
in
cwtl
lcall
pushf
mov
sub
in
push
add
fidivl
icebp
mov
xchg
std
mov
popa
jnp
fnsave
cld
stc
xchg
ja
adcl
repnz
outsl
push
cltd
push
push
pop
lods
popa
and
les
push
mov
jb
jp
cmc
pop
in
mov
inc
and
add
push
inc
xlat
pop
jo
inc
pushf
push
cmp
movsb
daa
mov
mov
xchg
mov
int
lock
cmpsb
or
mov
jmp
stos
mov
xchg
jnp
cmpsl
insl
test
cmp
or
call
pop
cli
mov
outsb
sbb
inc
std
jge
sahf
jp
or
mov
sbb
xlat
jg
mov
jae
in
dec
test
les
or
jg
imul
xlat
dec
push
ljmp
ret
or
movsl
push
rclb
out
lods
lods
iret
push
or
nop
fs
movsl
mov
sbb
pop
push
lods
test
mov
lahf
and
fisubrs
ljmp
pop
mov
jle
and
test
lcall
push
push
adc
and
or
push
ja
lea
aam
sub
adc
cmp
in
aas
mov
clc
in
inc
shrb
and
jmp
mov
in
pop
xor
shll
mov
mov
sahf
pop
jns
shll
test
movsb
sub
sub
xchg
push
int
add
aaa
cld
adc
cmp
mov
mov
sbb
repnz
or
repz
sub
rolb
or
mov
insb
add
ret
mov
pushf
xchg
adc
mov
pop
fs
fisttps
jbe
je
or
adc
mov
dec
nop
aad
lea
std
insl
and
and
in
std
aas
jge
xor
or
mov
nop
cli
push
mov
adc
jp
xchg
aaa
jp
subl
fcmovne
push
lds
mov
pop
pop
mov
pop
pop
add
aaa
mov
dec
ja
nop
aaa
mov
and
mov
cld
insl
cwtl
fcmovu
shl
popa
lds
push
pop
cmc
mov
movsb
es
jbe
cltd
inc
inc
hlt
fcompl
jecxz
jmp
jg
popa
add
cmpsl
repz
sub
stc
mov
cld
daa
rcll
adc
push
ds
jbe
popf
adc
movsl
pop
and
divb
lds
push
jle
jmp
dec
mov
pop
daa
sbb
inc
pusha
sub
iret
and
push
ss
inc
les
outsb
or
lds
sti
cld
hlt
jp
cmp
cs
insl
mov
xchg
rorb
dec
rolb
int
inc
rolb
test
xchg
push
icebp
lahf
mov
cmp
mov
dec
das
out
movsb
out
out
fistl
ret
cmp
cmp
cwtl
adc
xchg
prefetch
jle
mov
jns
dec
test
les
cmp
or
or
mov
jp
fiadds
aad
loop
fwait
or
dec
call
pushf
leave
dec
mov
mov
jbe
test
je
jbe
dec
dec
push
mov
fadd
jle
cld
xchg
mov
cmc
or
push
or
pushf
lret
popa
cltd
les
push
mov
push
mov
or
shll
stc
nop
jo
mov
imul
adc
addb
xor
adc
pop
fdivl
push
mov
xchg
inc
sub
mov
in
dec
loope
lds
idivl
jo
mov
push
lods
lds
jmp
sub
add
rolb
inc
subb
mov
int3
sub
fxch
xchg
cwtl
adc
rclb
js
ret
or
sbb
xor
sti
ror
icebp
std
inc
mov
or
mov
pop
ret
rol
fucom
lods
add
repnz
pusha
pop
shr
inc
pop
hlt
fmuls
push
xlat
add
mov
cli
adc
jge
xor
add
lahf
outsl
ja
dec
jno
pop
adc
mov
outsb
sub
inc
and
cmp
mov
xchg
clc
mov
pop
push
sbb
jl
lock
dec
repz
xor
shll
and
cmc
js
gs
mov
pop
mov
idivl
mov
lock
repnz
sbb
clc
jle
loop
icebp
movsb
push
mov
adc
dec
push
mov
sub
cwtl
out
push
ffree
or
cmpsb
and
lret
jnp
notb
cmp
je
imul
rclb
test
lock
cmp
xor
and
mov
adc
or
movsb
pop
add
sbbl
inc
popa
or
out
out
fldln2
daa
loope
mov
dec
fcmovbe
adcb
call
in
sub
cld
lea
jo
imul
adc
sub
mov
cmp
sti
pop
pop
push
inc
cmpsb
cmp
test
mov
dec
pop
sub
stc
mov
sahf
iret
xchg
into
sub
call
pop
pop
or
data16
jbe
fdivl
out
pusha
jmp
andl
sub
in
xchg
push
jns
sti
nop
adc
sbb
lods
lcall
movsb
push
push
stos
pop
cmp
add
lods
or
divb
cmp
add
pop
xchg
sbb
loop
rcrl
out
cmp
ljmp
inc
lods
mov
ljmp
ds
nop
cmpsl
push
sub
push
ljmp
daa
xor
fstl
or
sub
lods
jns
and
test
pop
sub
lods
ret
lea
mov
into
push
xchg
pop
insl
mov
mov
inc
mov
movsl
pop
fadds
pop
mov
popf
push
inc
add
out
add
shl
pop
inc
gs
ret
scas
ds
pop
subl
aam
outsl
adc
push
shr
ss
out
test
adc
pop
arpl
sub
sarl
push
enter
mov
cli
jmp
lods
push
cmp
out
aam
lds
xchg
sub
das
cmp
add
push
in
aaa
inc
mov
mov
lods
mov
cmp
mov
jge
test
rclb
xor
push
pop
int3
ror
add
adcl
pop
sub
in
fmull
out
push
pop
jle
jg
idiv
lods
dec
inc
jecxz
lret
xor
ds
xor
shrl
rcl
adc
pushl
sbb
or
cs
je
pop
sti
repz
xor
orb
sub
arpl
dec
jno
pop
xchg
insl
orl
fwait
popl
es
insb
sub
adc
subl
xchg
xor
fiadds
xlat
enter
dec
or
mov
cmpsl
addr16
imul
pushf
cs
movsl
sub
arpl
mov
daa
xchg
daa
inc
xlat
sub
push
decl
aam
imul
jo
rcrl
mov
in
in
mov
dec
lods
pusha
cmp
jecxz
xchg
lcall
inc
and
in
push
cmpsb
cmp
dec
imul
lods
sub
sbb
mov
aam
mov
adc
nop
jns
pop
add
pop
push
movsl
add
fdivrl
sahf
into
movsl
adcl
mov
sbb
inc
mov
std
clc
test
inc
xchg
mov
jg
adc
js
xor
loope
pushf
xor
in
ds
dec
mov
push
pushf
xor
ds
sub
sti
stc
xlat
call
lret
xor
jo
ret
add
adc
in
das
imull
lods
fisubl
in
not
cwtl
dec
ret
fs
pop
and
ror
push
jns
rorb
inc
jo
adc
push
ret
jnp
flds
jns
mov
jae
mov
hlt
lahf
aaa
ja
dec
js
int3
in
mov
pusha
shll
lds
mov
fiadds
cltd
aaa
add
popa
rol
sbb
push
shl
pop
pop
sub
sub
jnp
movsb
xchg
xchg
jg
dec
adc
add
test
pop
cld
cltd
add
pop
pop
xchg
sbb
mov
fdivs
mov
cmp
idivl
cli
scas
andl
js
dec
xchg
jnp
inc
cli
imul
xor
mov
fadds
mov
lret
push
mov
cmp
lea
xchg
adc
sub
cmp
lahf
test
fbld
xor
cmc
dec
cmp
inc
movsb
decb
sub
int3
pop
or
xchg
adc
inc
add
arpl
loope
cmc
adc
pop
fwait
sub
xor
xchg
leave
arpl
ss
cli
loopne
mov
adc
das
mov
push
cs
loope
imul
or
dec
jg
adc
mov
jne
inc
dec
jnp
or
ret
sub
incb
xchg
scas
lahf
out
cs
fcom
cld
and
mov
mov
jo
lock
mov
pop
fstpl
hlt
jne
dec
cmpsl
outsb
sbb
jp
jne
and
lcall
cmpsl
sub
fadds
je
sub
out
loop
push
test
js
dec
imul
leave
adc
cmp
push
enter
push
or
sbb
adc
pop
jbe
in
int3
adc
dec
aam
dec
push
lds
fidivl
pop
test
pop
int3
mov
mov
mov
jp
enter
scas
scas
dec
xchg
lret
lret
cld
push
xor
outsl
jo
mov
pop
subb
sub
loop
cmc
pop
mov
mov
fildll
movzbl
xchg
arpl
fistps
arpl
mov
sub
push
sub
jg
sub
mov
push
inc
sarb
lea
xchg
nop
test
mov
lahf
scas
lods
fsubl
pop
mov
xchg
ds
and
push
syscall
icebp
test
arpl
dec
loope
std
dec
loope
in
mov
mov
cmp
push
jo
pop
popa
scas
inc
inc
into
in
and
aaa
pop
div
enter
stos
push
push
cmp
ljmp
xorl
sub
mov
andl
xchg
add
push
int
and
int3
mov
loopne
sti
xchg
xor
andb
out
pop
xchg
sbb
loope
adc
xchg
mov
subb
mov
mov
in
js
out
cmc
ret
subb
sub
sbb
out
mov
je
xchg
sahf
jle
and
mov
adc
push
xlat
shl
lods
xchg
lahf
jp
dec
dec
add
sbb
cmc
test
adc
in
lds
push
repz
jmp
pushf
mov
and
mov
cmpsl
andl
or
mov
push
xor
xchg
ss
js
lcall
sahf
push
addr16
or
jmp
cmc
pop
subb
xor
enter
dec
push
mov
cld
ret
in
sbb
out
pop
pop
insb
js
std
popf
adc
push
inc
xlat
adc
stos
loop
lcall
jae
fs
or
mov
data16
cmp
dec
mov
es
mov
ds
xchg
out
cmc
dec
ljmp
cmp
xor
mov
out
xchg
sbb
xchg
jmp
mov
mov
xchg
jmp
dec
popf
mov
jp
pop
jae
adc
js
xlat
xor
sub
pusha
sbb
in
pminsw
movsb
adc
xchg
data16
cs
or
add
and
dec
and
leave
push
stos
fst
andb
pop
inc
aad
hlt
bnd
repnz
jno
decb
push
jmp
mov
arpl
cmp
push
cmp
adc
mov
push
pop
add
mov
xchg
push
pop
xchg
or
loop
pop
dec
rcll
or
push
rolb
sbb
cli
sub
in
imul
cltd
lea
cmp
lahf
pop
mov
sarl
loopne
ud2
dec
cmp
adc
sti
xor
pop
sub
aaa
fbstp
or
mov
and
in
mov
idiv
loopne
std
jb
cmpsb
rorb
dec
jbe
dec
call
andb
or
nop
outsl
adc
or
jb
clc
insl
push
sbbb
cld
imulb
cmpsb
scas
dec
fwait
or
out
jno
push
mov
cmc
push
in
jb
mov
pop
pop
pop
jge
mov
in
mov
arpl
out
stos
mov
loopne
adc
enter
cmpsb
mov
cmp
cmp
cltd
inc
sbb
push
jecxz
test
bound
lea
mov
bound
rorb
loopne
enter
ret
ss
sbbl
jle
cmp
sahf
loope
or
dec
dec
aam
daa
mov
rorb
out
cmp
repz
mov
popf
aaa
pusha
cmp
outsl
andl
or
dec
cli
pop
mov
cmc
cwtl
shlb
imul
mov
data16
shlb
push
sahf
mov
mov
cmp
test
fdiv
xchg
cli
dec
mov
push
outsb
inc
pop
mov
shr
arpl
shlb
add
xor
mov
loopne
lret
dec
jle
xchg
sbb
lcall
fs
xchg
mov
mov
insb
dec
insb
mov
ret
pusha
mov
aad
andl
insb
cmp
or
sahf
xchg
mov
pop
cmp
dec
fdivs
shl
sub
mov
jge
das
mov
xor
mov
gs
imull
aad
sahf
int3
push
imul
movsl
and
loopne
insl
icebp
ds
mov
sbb
movlps
cs
inc
repz
push
clc
clc
xor
and
insl
mov
movsl
mov
mov
xchg
mov
push
jmp
push
mov
mov
out
pop
movsb
into
sbb
pop
jae
iret
mov
ret
out
jecxz
out
add
inc
in
push
and
mov
iret
xchg
in
sbb
sbb
push
jp
insl
arpl
inc
in
sub
sub
mov
add
lret
cli
lret
pop
out
test
ret
sub
xchg
push
mov
and
add
subl
jle
dec
pop
add
xchg
popf
push
mov
mov
mov
xchg
lea
fldenv
test
cmc
inc
jo
sbb
icebp
pop
xchg
test
jne,pt
xchg
push
mov
rcrb
mov
cmp
sub
cld
stos
out
scas
jo
mov
sbb
dec
pop
ljmp
xor
fwait
test
adc
xchg
cmp
push
push
lods
lret
rorb
and
mov
lret
and
popa
xchg
pop
test
sub
icebp
jno
into
pop
imul
cmp
into
sub
xor
lret
push
outsb
scas
js
add
int
lcall
or
test
jae
sub
jnp
jbe
into
aad
mov
jg,pn
ss
or
or
xor
outsl
push
xchg
lcall
add
push
jne
cmpsb
jb
fsubrp
test
dec
pop
jnp
push
sub
lahf
xchg
vmwrite
test
or
cmpsl
pop
inc
or
add
inc
xchg
ljmp
push
adc
and
dec
lock
push
in
scas
loop
rolb
mov
sbb
inc
int
sbb
inc
shrl
inc
pop
pushf
test
sub
jp
es
pop
or
sbb
in
mov
mov
inc
mov
pop
inc
orb
call
adc
mov
sub
adc
mov
mov
clc
popa
push
add
pop
fcoms
mov
imul
and
fldl
dec
scas
xchg
std
jmp
cmp
push
or
ret
sahf
or
orl
mov
lret
adc
mov
sub
mov
cld
inc
cmp
nop
cmp
add
adcb
fidivs
pop
test
mov
and
in
aam
mov
add
or
ror
xor
pop
pop
mov
mov
loope
mov
in
ret
dec
adc
cld
mov
rolb
push
mov
test
pusha
jmp
inc
stos
add
pop
xchg
lock
add
xchg
cmp
add
hlt
adc
stc
mov
rcrb
lret
es
xor
call
inc
inc
jl
repnz
cli
pop
add
sub
or
inc
cld
dec
rorb
movsb
mov
xor
lods
push
imulb
loop
out
outsl
dec
push
dec
xor
xor
or
xor
mov
adc
aam
cmp
sub
repnz
push
lods
popf
ja
andb
movsl
mov
mov
icebp
shlb
push
je
call
dec
popf
in
mov
sub
xlat
rcl
js
stos
aas
xchg
cld
mov
mov
pop
sbb
sbb
sub
mov
sbb
loope
je
nop
jbe
sbb
cmc
daa
mov
fwait
loop
xchg
fists
pop
addb
or
lret
in
stos
fsubrl
pushf
stos
push
adc
xor
shl
push
lds
dec
mov
cmp
outsl
pushl
stc
push
xor
xor
dec
aad
mov
mov
pop
fadds
or
xchg
bound
bnd
adc
das
out
pop
pop
ljmp
mov
dec
int3
push
sbb
dec
push
sbb
andl
mov
cli
ds
sub
jo
inc
aaa
jmp
sarl
jno
xchg
xor
aas
dec
aad
clc
in
pop
xchg
test
jne
and
jbe
in
add
dec
inc
cltd
stc
cmp
cmp
aas
ds
pushf
addr16
out
mov
stc
and
in
in
pop
rcrl
and
adc
adc
ret
cmpsl
orb
shld
sarb
ror
dec
cmp
popa
outsb
sbb
sbb
mov
stc
fcmovu
add
enter
fnstenv
addl
int
addl
mov
aas
mov
jecxz
cmp
dec
jl
add
psubsw
pop
mov
lock
loope
pop
or
jnp
or
mov
xchg
dec
mov
rcl
push
and
jo
in
sub
mov
imul
imul
and
xchg
nop
cmpb
inc
xor
jns
mov
inc
imul
shlb
fidivrl
add
pop
out
push
jbe
jns
mov
loope
xor
jo
dec
mov
lods
aam
shl
negb
movsb
enter
push
xchg
jmp
pushf
lcall
enter
in
or
xchg
add
jmp
mov
xchg
cmp
sbb
xor
call
lahf
clc
jno
push
lret
loope
cwtl
add
pop
inc
push
loop
jns
xchg
out
movsb
in
inc
lret
add
pop
cmpsl
xchg
xor
pusha
jnp
add
in
jbe
pusha
pop
scas
sbb
mov
cmp
push
repz
xor
or
insb
dec
lcall
xchg
sbb
js
jae
out
adcl
jge
fldl
fstpl
pop
ss
xor
mov
cmpsl
jecxz
pushf
rdmsr
int
test
adc
xor
cltd
std
mov
out
arpl
mov
imul
mov
cmp
jb
call
push
inc
addr16
mov
pop
loop
adc
bound
iret
sbb
jp
aas
push
rcrb
out
mov
xlat
sahf
xlat
mov
sub
cmp
mov
mov
xchg
mov
add
push
fmuls
push
or
ret
sbb
mov
cltd
xchg
add
imul
and
dec
pop
inc
int3
js
and
lds
xchg
aam
cwtl
jae
cmc
xchg
mov
and
int
push
fldt
popa
test
sub
push
push
rol
in
mov
xchg
inc
dec
mov
sub
cld
adc
in
lods
fdivp
ds
fstpl
ja
jge
push
inc
cmp
es
jmp
popa
cltd
add
cli
test
inc
loope
dec
jle
fs
sbb
cmc
jnp
scas
out
sub
sub
aam
sarb
ret
insb
int3
psubq
sbb
adc
or
pusha
inc
fimull
mov
pop
sbb
jle
inc
shl
inc
mov
out
fbld
ret
add
jnp
jo
es
int3
jp
shlb
push
or
mov
sub
fildll
lea
xchg
pop
test
data16
jmp
xchg
mov
mov
inc
notl
test
jbe
lret
cmp
xchg
aas
sbb
lds
outsw
decb
jo
xlat
stos
popf
ljmp
imul
cmp
dec
dec
pop
adc
jg
pop
addr16
out
shl
and
dec
mov
sbb
pushf
pop
das
movsl
mov
and
add
mov
cmp
mov
push
rcrb
pop
adc
cmp
push
inc
mov
pop
pop
pop
jno
outsl
and
sahf
rcr
pusha
jp
loopne
push
jmp
pop
movsb
pop
sbb
mov
add
pop
adc
out
push
sti
stos
inc
adcb
lret
jo
fsubl
rolb
dec
inc
bound
jae
dec
je
inc
pop
mov
lods
mov
cli
sub
pop
jl
dec
xor
rcrl
stc
xchg
lcall
cld
ss
push
push
outsb
or
cmp
cmp
jbe
das
pop
dec
cmp
sub
iret
int3
loopne
je
inc
xchg
add
jg
cmpsb
rcl
repz
adc
inc
xchg
out
paddq
pop
xor
lods
inc
fistl
loope
jno
adc
and
xchg
mov
lret
cmp
xor
jge
loop
cmp
mov
mov
pop
xlat
outsl
iret
loopne
push
xchg
lcall
mov
mov
mov
cmp
xor
sub
cmpsb
mov
pop
push
ljmp
mov
cmpsl
xchg
dec
dec
xchg
push
cmp
in
mul
jo
mov
adc
out
std
xchg
dec
sub
and
push
repnz
out
inc
jecxz
xor
sub
add
mov
pusha
or
mov
sbb
daa
mov
addr16
push
mov
ficomps
xchg
add
andl
rorb
push
xor
stos
clc
xchg
cli
lods
sub
addb
loop
sbb
mov
mov
dec
dec
add
ror
push
pop
jbe
and
sbb
and
lret
fcomi
rorl
arpl
xchg
cli
xchg
xchg
shrl
xchg
cli
bswap
ja
adc
xchg
mov
test
add
sbb
shlb
roll
hlt
jae
xchg
fwait
lret
pop
sahf
and
jecxz,pt
pop
lods
in
lock
jno
das
test
iret
shlb
xor
jmp
xchg
dec
mov
fsts
fcmovbe
in
cltd
push
iret
mov
fisubrs
inc
dec
xchg
cli
sbb
adc
lods
stc
fnstenv
pop
testb
js
xchg
cmpsb
push
add
or
hlt
pop
leave
sahf
scas
pop
xor
jno
jle
aaa
mov
jb
inc
lods
cmp
cmp
adc
hlt
push
iret
fdivrl
faddl
test
dec
adc
pop
aam
repnz
dec
pop
mov
or
movsb
adc
mov
test
in
push
jnp
shr
cmp
imul
cwtl
insb
and
std
out
in
call
cmpsb
jmp
lods
cmp
les
repz
jle
rcrb
add
iret
dec
mov
cmp
in
fisttpll
in
cmp
or
std
and
push
inc
fistpl
test
pop
cmpsb
cmpsl
lret
or
jns
push
mov
add
sub
push
clc
test
sarb
cmp
iret
xchg
in
cld
lock
and
pop
mov
imul
sti
jns
sub
push
ja
xchg
arpl
cmp
popf
xchg
insl
jmp
dec
dec
hlt
xor
push
or
jecxz
cmp
ret
sub
push
notl
daa
inc
jp
sub
pop
shll
dec
jb
sbb
insl
mov
mov
enter
roll
pop
out
inc
aam
sbb
into
xchg
popa
test
cmp
rcrl
jbe
popf
movsl
add
xchg
mov
xor
jecxz
adc
push
shll
cmpb
stos
popf
das
jns
aad
or
dec
jmp
xorb
outsl
and
in
lods
hlt
cmp
lahf
adcb
dec
sub
or
mov
xchg
into
mov
test
and
repz
xchg
mov
xor
and
les
xor
dec
std
jge
pop
mov
sbb
lods
inc
data16
jmp
inc
loop
push
popf
sub
inc
push
ljmp
in
insl
std
ljmp
jge
in
cs
insl
lahf
push
les
ficoms
cmp
mov
adc
cltd
jbe
dec
mov
mov
loopne
sbb
xchg
popa
aad
mov
xchg
or
cld
xor
out
push
xchg
xchg
sti
gs
push
faddp
sub
aaa
push
fcmovne
fwait
lret
sub
pop
add
jl
add
cmc
sbb
lcall
mov
pop
push
and
sub
call
fldcw
mov
sub
mov
movsl
setbe
mov
pusha
mov
std
mov
sub
mov
mov
aam
bound
lds
xor
push
aaa
and
test
mov
push
gs
xchg
xchg
scas
dec
ud2
push
insb
lret
mov
adc
sub
leave
push
fchs
jle
in
jb
mov
loop
push
push
scas
xor
loopne
fcmovne
inc
mov
ja
push
hlt
pop
daa
mov
pop
sub
lcall
into
add
push
jae
jl
xchg
mov
loop
ljmp
sub
xchg
pop
jl
imul
jle
xor
jp
sbb
icebp
out
jbe
out
jl
inc
movsl
outsl
cli
xchg
push
cmc
xchg
int
jb
sarb
cmpsb
pop
popf
sub
es
mov
inc
or
in
cmp
lods
ffreep
subb
mulps
xchg
adc
mov
rcl
pop
stos
insb
clc
mov
ljmp
cld
xchg
cmpsb
adc
jmp
outsb
rclb
out
or
stos
push
sbb
iret
and
jmp
mov
add
dec
sbbl
ss
jmp
lahf
jecxz
pop
mov
inc
sarl
stc
fidivs
fbstp
cmc
sbb
jne
mov
ret
sbb
dec
mov
insl
lcall
mov
mov
enter
mov
andl
xchg
addr16
dec
pushf
imul
xor
add
jge
cmp
dec
dec
jp
and
inc
xchg
insl
rcr
fstpl
cmp
pop
leave
outsb
dec
popa
fwait
pushf
flds
add
mov
fcompl
popf
push
add
pop
jbe
jg
and
test
outsl
jbe
ja
inc
cmp
fst
imul
fistpl
mov
cwtl
adc
subb
pop
mov
fiaddl
popf
mov
sbb
and
add
jb
or
dec
sbb
mov
inc
stc
push
fildl
int3
xor
lods
shrl
mov
icebp
mov
ret
jb
or
loop
cld
mov
mov
out
push
fstpt
add
jge
stc
lcall
xchg
aaa
lret
sahf
xchg
sbb
push
jbe
jae
js
xor
loop
adc
mov
fisubl
mov
mov
rorl
sahf
adc
out
push
jmp
stc
icebp
ljmp
inc
and
jnp
arpl
in
jmp
cmp
xchg
and
ss
cli
lods
arpl
pushf
lahf
sub
push
add
data16
in
inc
push
sbb
pop
adc
lahf
mov
addr16
sbb
arpl
shlb
test
sub
shlb
rcr
pushf
faddl
adc
lss
lcall
test
xchg
fistpll
test
mov
repz
cltd
outsb
pop
mov
fwait
lods
jo
mov
mov
test
mov
rep
dec
or
xor
pop
rcl
jp
arpl
cmp
mov
clc
orl
mov
cmpsb
pop
pushw
arpl
das
cld
xchg
in
sarl
andl
fiaddl
stos
pop
add
stos
out
xchg
popa
mov
shlb
rcl
mov
xchg
andb
sub
int
cmp
sbb
sub
sbb
and
add
stc
or
mov
test
les
mov
insb
ljmp
push
lock
arpl
sbb
cmp
aas
pop
call
ds
repnz
ja
movsb
movsb
push
inc
mov
mov
sbb
cmp
mov
sbb
jbe
lahf
mov
or
pop
inc
pop
mov
lods
lods
mov
fnstcw
je
mov
jg
fsts
js
or
mov
out
dec
cmpsl
std
cmpsb
repnz
mov
xchg
decb
movsb
cwtl
popf
lods
int
shrl
jno
das
dec
in
lcall
inc
inc
cmp
pop
ds
cmp
xchg
adc
mov
test
xor
adc
jae
aad
mov
int
out
nop
loop
imul
lret
sub
into
xorl
or
cs
test
push
jle
ds
and
dec
fwait
cs
testl
push
mull
testl
int3
mov
pop
js
addr16
dec
jmp
sub
lods
loop
or
imul
or
xchg
add
stos
mov
rcrl
mov
imul
test
fisttpll
movsb
jecxz
ljmp
mov
out
and
mov
cmc
pop
jecxz
sbb
xchg
jl
mov
push
and
jnp
jle
jmp
push
pop
outsb
cmp
call
fwait
jns
sbb
mov
or
xlat
outsl
test
push
lcall
inc
or
dec
mov
int
sbbb
outsb
cmp
cli
jmp
sub
lock
mov
out
mov
sti
fmull
and
inc
out
sbb
daa
inc
imull
in
inc
addr16
xor
adc
movsl
fbstp
in
add
gs
adc
push
into
ss
mov
fsts
xor
adc
xor
jne
adc
test
jmp
xor
lret
lcall
in
fadds
cmpsb
fwait
sbb
mov
add
cs
shll
or
in
les
stos
push
dec
sub
and
sti
mov
ds
dec
mov
sub
push
pop
into
push
mov
enter
and
hlt
mov
push
push
bound
shr
das
pop
popf
movb
imul
and
or
cmp
pop
pop
int3
ret
inc
or
add
xor
mov
dec
mov
mov
lock
push
out
jb
insl
push
pop
in
and
in
sub
push
pop
sub
jo
push
sbb
mov
lret
push
sbbb
dec
lcall
mov
mov
sub
adc
arpl
inc
outsb
or
mov
stos
mov
aam
push
jecxz
test
xlat
cmp
xchg
lods
sbb
cmc
mov
out
xchg
lahf
mov
popa
cmpsb
mov
movsl
sbb
jp
inc
ds
fsubrl
out
gs
js
lds
xor
mov
or
hlt
jno
dec
sbb
or
xchg
jno
ja
test
lcall
popf
mov
mov
pop
mov
pop
jo
je
stc
sbb
adc
xor
fstpl
jb
rolb
lock
iret
sbb
les
imul
add
fwait
pop
xchg
in
js
mov
out
sahf
xor
sbbl
mov
insb
leave
add
mov
in
push
fldenv
scas
pop
arpl
ret
fsts
and
push
push
push
dec
stos
cld
dec
or
fcom
inc
inc
push
mov
xor
insl
inc
or
sbb
sbb
sub
imul
testl
f2xm1
jle
test
sub
xor
cmp
or
push
jo
popa
call
cmp
add
sbb
arpl
mov
ja
cmp
aaa
stos
mov
adc
fwait
push
inc
jl
dec
adc
inc
mull
xlat
stos
mov
mov
push
push
inc
out
xchg
mov
mov
xchg
inc
dec
ds
aas
dec
mov
mov
mov
mov
fildl
sub
adc
mov
dec
loopne
leave
lahf
jl
fisubrs
daa
shrb
les
fsubl
jae
sub
test
jg
sbb
loope
adc
pop
xchg
outsb
mov
or
outsb
dec
push
inc
sub
push
mov
sarl
fimuls
fisubs
and
xchg
adc
arpl
xor
mov
or
pop
adc
fsubs
ja
or
inc
mov
fwait
xchg
pop
inc
daa
imul
adc
jnp
lea
jle
cmc
adc
aam
push
loop
popf
xchg
add
nop
fiaddl
xchg
test
gs
jp
cmpsl
clc
pushf
stos
push
jns
aas
mov
adc
adc
imul
bound
or
jno
push
rcrl
add
fldcw
mov
das
mov
ret
dec
idivb
adc
decb
aad
mov
inc
aad
dec
movsb
push
mov
xchg
mov
mov
dec
fcoms
mov
add
pop
inc
push
insb
jae
clc
and
scas
sub
xor
pop
popa
fs
dec
mov
js
push
jp
fimull
sub
cmp
loop
and
mov
sar
push
loop
push
imul
mov
loopne
xor
cs
imul
mov
pop
cmp
inc
inc
daa
test
sub
mov
fnclex
enter
dec
mov
sbb
dec
add
adcl
jg
ret
lods
sub
roll
cmp
or
xlat
out
iret
and
push
lahf
loopne
ljmp
jae
lcall
push
cmp
insl
adc
mov
lods
orb
out
repz
fs
xor
mov
adc
dec
incl
push
pop
cmc
test
mov
stos
push
jg
divl
outsl
mov
push
sbb
push
data16
loopne
pop
adc
jl
cvtps2pi
xchg
mov
es
inc
iret
adc
cmp
call
jb
sbb
or
lods
sbb
incb
xchg
sub
sub
jne
scas
jl
jmp
fsubr
xchg
lea
pop
xchg
ja
inc
dec
inc
jl
add
xchg
inc
xor
cltd
mov
rolb
add
imul
adc
bound
mov
in
push
popf
push
sub
push
lret
cli
xchg
add
inc
inc
mov
xchg
sti
cltd
add
or
popf
dec
xor
jle
mov
sbb
jl
inc
mov
es
pop
sahf
mov
incl
xor
adc
hlt
std
dec
xor
in
inc
subb
pop
es
ret
loope
fbstp
incb
std
fld
lret
test
push
subl
dec
loopne
in
addr16
dec
and
int
push
cmp
mov
cmp
mov
pop
lods
in
cmp
mov
lret
xchg
cmc
push
push
xchg
in
fs
repnz
test
push
sbbl
lea
mov
clc
jb
inc
fs
xchg
adcb
mov
lods
clc
fnstenv
or
inc
xor
jg
jnp
sarl
scas
in
das
clc
loopne
fdivrs
jnp
push
lock
cmp
add
sub
pop
inc
pop
cmp
popa
ljmp
test
ds
mov
jp
mov
in
cmp
imul
xchg
mov
das
pop
shll
sahf
int
arpl
dec
bound
xchg
hlt
jge
inc
lret
push
pop
clc
xchg
xchg
pop
popf
inc
mov
sbb
sahf
jae
dec
xlat
pop
les
cmp
cwtl
mov
aas
scas
pop
sbb
movq
lret
repz
jae
and
or
push
jg
scas
das
imul
stos
pop
pop
mov
roll
sbb
fcoml
enter
jg
cmp
loop
xchg
xor
or
fistps
sub
sbb
and
lock
pop
dec
push
scas
push
mov
push
jle
add
cmp
push
in
xor
xchg
ficomps
das
pop
mov
sbb
mov
pop
mov
lods
mov
loop
xchg
pop
mov
movsb
rcll
in
sti
cli
fidivrs
sarb
cmp
sub
pop
mov
and
subl
push
sub
cltd
inc
incl
xor
dec
xor
mov
push
cwtl
lea
xor
pop
clc
stc
cli
xor
pop
cmp
push
dec
adc
in
in
imul
inc
mov
jecxz
clc
xchg
and
push
push
mov
mov
popf
aam
inc
popa
xchg
dec
int
and
jp
out
or
push
push
sub
mov
push
pop
lret
jb
or
fcompl
jecxz
mov
loope
adcb
sbb
aad
popa
in
sub
or
or
das
adc
test
gs
jb
cli
jae
out
xchg
pop
aas
pop
sar
xchg
mov
call
adc
adc
cmp
mov
das
jp
imul
arpl
or
ret
dec
xchg
jmp
js
cmp
inc
shlb
es
jno
stos
pop
xchg
cld
or
and
gs
out
mov
xchg
inc
mov
or
add
push
leave
sbb
ja
addr16
outsl
cmp
sub
push
xor
or
jl
jbe
outsl
pop
insb
repz
sbb
popa
mov
dec
out
jmp
mov
xchg
xor
stos
jb
jl
inc
divb
rcrb
in
movsl
push
xor
clc
mov
decb
jmp
dec
add
sbb
cmp
cmpsb
mov
outsb
call
out
adc
push
xchg
xchg
addb
stos
in
jecxz
inc
pop
dec
out
push
enter
movb
sbb
mov
push
in
sbb
movsl
jae
ss
xor
dec
fs
sbb
mov
fstp
mov
insl
or
rclb
jns
jge
ljmp
inc
sbb
es
push
add
add
xchg
jo
cli
insl
imul
mov
roll
cmp
out
or
ficoml
shll
mov
pop
push
add
adc
imul
cmp
dec
aas
sbb
mov
pop
jns
adc
int3
pop
pop
pop
dec
les
xor
cltd
shr
xchg
cmpsl
in
xchg
mov
push
pop
jg
rol
cmpsb
js
adcb
mov
xchg
sub
jno
add
clc
jne
xchg
pop
xchg
lock
sbb
mov
daa
idivb
jnp
xor
dec
int3
xchg
shr
mov
lock
xchg
daa
xor
xor
xchg
dec
inc
andl
dec
dec
or
lock
xor
stc
cmpl
es
into
outsl
pop
sbb
or
adc
lahf
daa
adc
jge
imul
daa
mov
dec
jl
subb
cs
jns
imul
lock
mov
dec
push
cld
mov
int3
mov
out
sub
shl
ficompl
xchg
xor
mov
jns
cld
in
mov
xchg
push
xchg
loop
nop
icebp
push
ret
lret
cmp
adc
les
arpl
fcomps
je
test
add
mov
xchg
add
mov
sub
shrl
pop
cli
push
hlt
iret
xor
push
mov
je
les
ljmp
jecxz
add
lcall
lods
ja
mov
xlat
adc
cmp
xchg
push
cwtl
js
andb
call
mov
ret
repz
sbb
cs
inc
sub
inc
push
cmpsb
adc
push
mov
xchg
popf
cmp
fbld
loopne
fimull
lods
mov
add
sbb
push
mov
push
inc
add
mov
ret
mov
pop
or
adc
mov
in
sarb
ficoms
pop
loopne
sbb
dec
cmp
int3
mov
mov
or
mov
inc
jmp
xchg
lock
shrb
mov
xor
xchg
mov
lods
lret
idivl
lret
and
lods
mov
movsb
lds
add
xchg
subl
add
jae
ss
pop
push
dec
aam
shlb
pop
aam
jmp
popf
imul
lock
outsl
cwtl
ret
dec
dec
mov
ljmp
xchg
int3
sbb
iret
push
fcom
dec
sub
push
push
jae
xorl
mov
fidivrs
xor
mov
and
or
push
jge
mov
cmp
mov
xchg
xchg
jae
pop
sbb
jno
stc
jl
or
push
sti
and
pushf
inc
push
and
or
fldl
ja
fdivrl
jb
sbb
and
mov
sub
mov
pop
pop
ss
mov
in
xchg
pop
mov
jmp
sbb
and
push
in
jecxz
mov
mov
out
mov
sbb
pop
cwtl
movsl
mov
roll
mov
xchg
rolb
js
jae
fdivl
mov
lret
cmpsl
test
jecxz
test
aas
aam
pop
into
cs
mov
jmp
in
stos
cmpsb
cmp
out
mov
pop
jle
jmp
push
lods
and
fdivs
dec
mov
or
sub
adc
iret
or
mov
loop
mov
mov
stos
xor
jo
lea
mov
lods
pop
cwtl
sub
jl
rol
and
fcoms
sbb
xor
addr16
inc
xchg
push
lods
jle
ja
mov
cmp
or
imulb
mov
gs
sbb
lret
mov
cmpsl
dec
jge
push
std
imul
adc
fistl
push
popl
mov
inc
sub
jno
push
mov
mov
pusha
xorl
fiadds
in
mov
and
aad
outsl
mov
pop
into
pop
jns
push
mov
test
xchg
roll
sub
sub
ds
cmc
push
test
mull
jno
cmp
int
mov
mov
mov
sub
mov
fistpl
or
push
int
cmp
cld
pop
jnp
aas
sub
rcrb
jno
dec
mov
ljmp
sub
nop
pop
cmovp
cmp
xor
add
in
jnp
xor
movsl
rcrb
jno
cwtl
adc
shrb
fsubs
daa
mov
jns
out
dec
xor
icebp
add
stos
sbb
pop
push
adc
pop
ret
cs
dec
sub
popa
jbe
int3
cmpsl
fnstsw
add
jecxz
xchg
push
aam
jmp
scas
push
daa
cs
sti
add
icebp
lock
ljmp
adc
add
dec
test
xor
movsl
int
jns
test
loop
lret
sbbl
and
and
mov
pusha
lcall
add
rcl
pop
pop
nop
mov
add
fadd
pop
vmread
pop
outsl
repnz
add
cmp
out
fs
fadd
repnz
les
cli
pop
daa
aaa
and
mov
popa
loop
lahf
rol
pop
cmc
sub
ss
mov
lret
imul
pop
mov
ret
lahf
lock
pop
adc
scas
imul
inc
pusha
in
adc
and
sub
fs
cwtl
jns
sbb
mov
lahf
jno
adc
outsb
xchg
push
outsl
pop
inc
fs
je
fwait
call
or
repz
pop
ss
fsubrs
test
jne,pt
je
lcall
loope
pushf
cwtl
xor
sub
lods
dec
sahf
pushf
inc
data16
xlat
dec
into
xor
cwtl
xor
mov
push
imul
adc
mov
jmp
push
xchg
inc
lea
repz
push
sbb
xchg
pushf
and
outsb
lret
sbb
in
out
stos
sbb
xlat
hlt
rcrl
cmp
stos
leave
orl
jmp
jae
call
push
mov
add
ja
mov
jge
movups
push
rcrb
dec
ds
fwait
es
mov
add
inc
repnz
or
popf
dec
or
cmp
and
xchg
movsb
in
fiadds
out
aaa
cmpsl
mov
sub
cmpb
push
cmpsl
repz
in
pusha
pop
dec
aam
mov
cmp
mov
dec
mov
inc
jg
cmp
jmp
push
adc
mov
xchg
or
adcb
movaps
les
jbe
xlat
pop
xchg
mov
sub
ret
xor
sub
cmp
pop
dec
cmp
mov
lock
movsl
cmp
add
clc
lret
pop
mov
dec
dec
shrb
sarb
aam
add
pop
dec
mov
in
adc
jge
cmp
out
les
sub
insl
ja
loop
adc
es
mov
pop
inc
add
mov
jo
call
sbb
pop
push
cmp
inc
xor
cmpps
rol
aas
cmp
outsl
mov
sub
sbb
repnz
jns
push
pop
fiaddl
shrb
sbb
mov
push
faddl
stos
fstpt
cmp
pop
sub
cmp
fsub
mov
cld
inc
and
in
xchg
push
xchg
inc
cmp
push
cltd
pop
xchg
cmp
xchg
sbb
int3
mov
outsb
cmp
add
stos
push
push
push
push
mov
es
sbb
adc
adc
clc
push
ret
xchg
ss
stc
jnp
aaa
sbb
push
clc
lock
xchg
push
lock
in
push
jo
xlat
lods
clc
mov
insl
mov
or
add
xchg
mov
or
sub
fmuls
cltd
int3
adc
ljmp
jno
js
sbb
mov
pop
push
sbb
enter
loopne
test
jg
jmp
cltd
lock
sub
jo
jmp
sub
jp
leave
mov
inc
aam
mov
daa
divl
cmp
pop
xchg
bound
repnz
mov
js
push
popf
mov
adc
jge
add
shrl
ret
sbb
stos
bound
pop
add
dec
sbb
and
jne
xchg
mov
dec
lods
inc
movsb
cmp
cmp
or
inc
sub
ret
orl
add
ss
sub
adc
dec
mov
out
rcll
dec
add
lods
push
cmp
stos
sub
stos
inc
add
adc
inc
jno
sbb
bound
xchg
adcb
daa
out
xor
xlat
mov
inc
mov
rcrb
out
lahf
dec
dec
dec
popa
call
mov
cwtl
sub
and
sub
leave
imul
fsubr
out
sbb
dec
add
in
dec
push
jecxz
movsb
out
xchg
xor
mov
cmp
add
int3
movsl
mov
dec
int
pop
inc
aas
fisubs
lret
pusha
int3
sbb
movsb
mov
test
mov
nop
xor
sub
add
mov
cli
cli
xor
int
test
adc
push
clc
push
lock
push
xlat
jo
sub
in
hlt
lcall
adc
ret
mov
mov
inc
xor
add
mov
pop
and
stos
pop
leave
sub
xchg
adc
mov
push
scas
mov
xor
ficompl
mov
push
and
xchg
ficompl
pop
cmp
xor
rorl
and
lock
add
fistps
pop
jmp
xchg
add
insb
in
sub
jmp
int3
inc
icebp
mov
inc
insb
pushf
jns
mov
sub
inc
adc
gs
inc
stc
sbb
jns
frstor
inc
jb
mov
pop
push
mov
out
push
sti
xlat
mov
xor
sbb
into
xchg
mov
xchg
rclb
iret
or
ret
sbb
push
dec
pop
sti
jecxz
jb
inc
push
call
popa
mov
ja
mov
sbb
aaa
ds
cmp
out
adc
and
xchg
mov
mov
ss
or
xchg
test
repz
mov
jo
test
mov
loopne,pt
or
cmp
push
cmpsl
stc
repnz
mov
enter
xor
shll
imul
sbbb
pop
jecxz
xchg
lods
pop
or
push
js
mov
scas
sub
fsubr
shrb
pop
testb
pop
sahf
lret
test
stc
mov
cs
mov
mov
mov
push
lock
hlt
cmp
push
dec
notl
out
push
jp
nop
mov
and
into
dec
insb
fcmovbe
lods
xchg
jns
in
or
add
push
loopne
add
sub
inc
xor
push
sbb
outsl
ret
dec
stc
lahf
push
inc
dec
loopne
xchg
cmpsl
sti
cs
loope
movsl
sbb
sub
cmpsl
outsb
jae
repz
jle
push
scas
cmp
mov
sar
pushf
xlat
jne
int3
test
cmpsb
jg
ds
sbb
lods
push
xlat
fistl
dec
loopne
or
sbb
imul
xor
subl
mov
das
xor
mov
scas
je
add
push
push
push
or
xlat
std
jo
inc
inc
push
mov
test
cmp
cltd
inc
jle
movsl
loope
xchg
fsubrs
das
lods
icebp
mov
sbb
mov
iret
mov
ljmp
loop
push
inc
cld
jnp
test
das
aad
fs
mov
push
popa
xchg
xchg
adc
fistpl
arpl
add
xchg
test
lock
loop
cmp
cli
cmp
sti
in
dec
xor
sbb
xor
mov
fldenv
mov
dec
adc
mov
mov
pop
or
xlat
xchg
icebp
dec
adc
lock
or
push
orb
mov
fmuls
adc
je
dec
mov
outsl
pop
push
outsb
sub
push
add
push
push
xchg
adc
sub
cmpsl
jns
jns
into
sahf
dec
push
cmp
xor
jge
lahf
xchg
imul
mov
sbb
test
dec
testl
jno
jg
testl
pop
int
push
lock
icebp
sbb
cmp
xor
xor
and
push
cmpsb
pop
add
jno
xchg
lcall
repz
xchg
adc
mov
or
xchg
mov
inc
cmp
sbb
or
cmp
fidivrl
shrl
or
mov
movsb
nop
test
mull
stos
aaa
clc
add
xchg
sub
icebp
loopne
pop
mov
scas
outsb
out
cmc
outsb
insl
add
jge
add
aas
cmp
sbb
add
pop
xlat
xchg
inc
int3
in
push
mov
adc
inc
pop
pop
xor
call
sub
or
test
adc
mov
les
push
mov
xor
sbb
xor
ljmp
add
jae
adc
gs
in
cwtl
dec
inc
xchg
jo
pop
imul
xchg
mov
inc
and
je
rorl
loopne
push
jo
cld
imul
xor
in
notl
stos
scas
push
xchg
lahf
int
ret
add
out
mov
js
mov
mov
pop
pusha
mov
pop
jle
ja
xchg
sbb
push
sbb
cmpsl
push
mov
sub
xchg
cmovg
das
mov
lret
fnstcw
pop
fsubrp
push
ret
lea
xchg
in
pop
movsb
mov
cmpsl
and
sub
push
test
sub
jne
dec
fldcw
ret
lcall
jl
or
push
lea
insl
push
stos
jno
sub
adc
lahf
xchg
ret
mov
test
push
scas
cmp
add
xchg
or
xor
into
jo
aad
test
or
aaa
in
sar
out
enter
lods
xorl
imul
je
add
push
add
mov
test
pusha
pop
adc
push
jb
mov
fdivrs
sar
adc
inc
mov
dec
jl
lods
jle
push
mov
js
insb
out
adc
inc
push
and
fisubrs
cmp
dec
out
xchg
js
and
pushf
and
clc
aaa
std
xlat
xchg
xchg
lods
push
sahf
outsb
jne
xchg
addr16
ret
sub
jl
pop
orb
mov
std
jle
rorb
gs
inc
lahf
iret
sub
dec
sub
sub
mov
fwait
pop
cmp
add
or
jmp
jb
dec
cmp
xchg
add
pop
notb
sbb
xlat
fldl
sub
cmp
dec
mov
je
and
loope,pn
and
pop
mov
jge
dec
push
shrb
insl
push
mov
xchg
lock
add
pusha
aad
jo
stc
out
aam
lcall
clc
and
cmp
pop
lea
sbb
mov
and
stos
int3
js
popa
movsb
or
cmc
mov
sub
movsl
orl
jae
adc
adc
sub
lods
lcall
mov
mov
fwait
mov
movb
sub
mov
notl
mov
int
xchg
inc
jmp
ja
sub
lcall
lea
lds
mov
dec
add
xchg
push
dec
pop
mov
lock
in
outsl
idivb
lahf
sub
sbb
fidivrs
push
mov
ret
xlat
loopne
aaa
stos
clc
cli
hlt
pop
imul
popa
addl
pop
adc
sub
jle
jg
adcl
lahf
xlat
shr
popa
dec
sbb
mov
adc
adc
inc
cmp
mov
lahf
shrl
stos
in
adc
push
jbe
dec
jge
pop
bound
pop
pop
mov
or
ret
insb
out
leave
insb
and
mov
push
xchg
shlb
xchg
test
movsl
jmp
dec
jne
adc
out
out
test
dec
xor
lcall
jmp
pusha
es
les
mov
and
sbb
shll
cmp
cwtl
mov
fiaddl
sub
das
and
mov
xor
jns
sub
and
pop
insb
in
xor
inc
cli
and
dec
int
iret
outsl
in
ja
std
call
mov
lock
jb
mov
test
and
add
mov
push
leave
lock
fmuls
xor
jbe
outsl
loopne
xchg
les
and
jbe
test
or
inc
xchg
adc
jnp
jne
scas
or
nop
je
in
aam
ljmp
test
dec
mov
daa
push
enter
idivb
xchg
aad
and
mov
jg
lea
cmpl
mov
inc
push
out
jmp
push
add
gs
push
mov
iret
push
rcll
jmp
sbb
fcmovb
or
dec
xchg
and
sub
stos
push
call
jmp
add
push
mov
sahf
jo
fcmovne
sarb
push
or
insl
or
dec
out
dec
mov
mov
mov
sbb
jo
sub
in
dec
xchg
xchg
adc
mov
pop
mov
js
sbbb
inc
pop
lret
cld
push
neg
jle
adc
mov
icebp
in
cs
incl
sub
cmp
pop
mov
pop
jo
pop
test
jne
and
sub
rol
mov
push
xor
ret
orl
pop
orl
or
xchg
jno
lahf
inc
mov
aam
js
add
dec
mov
lret
leave
mov
lds
shrl
les
lea
movsl
mov
loopne
enter
sub
inc
inc
bound
int3
in
shll
call
xchg
inc
bound
sub
out
leave
cmpsl
gs
pop
mov
jmp
pushf
clc
pop
pop
mov
cmp
sbb
je
imul
xorl
xchg
push
lcall
fwait
rcrb
aas
mov
xlat
gs
popf
fldenv
dec
lahf
pusha
scas
push
lock
stos
out
adc
movsl
sahf
roll
push
or
xlat
rclb
test
inc
cmp
popf
jne
pop
sub
xchg
xor
cmc
cwtl
add
adc
loop
shlb
fdivs
adc
mov
dec
in
fsubrp
aaa
fcmovnbe
pop
pusha
ja
push
pop
cmp
arpl
adc
loope
or
pop
outsb
aad
mov
or
testl
iret
add
insb
outsb
test
xor
jle
loopne
pop
test
enter
push
rcl
rcrb
cmp
push
test
cmc
call
adc
in
icebp
cld
lcall
leave
or
cmpsl
xchg
fdivrs
cmpsl
repz
mov
cmpl
jle
cmc
inc
fsubs
mov
cmp
mov
aas
lock
pop
mov
inc
imul
and
jp
int
sub
sti
cmp
xor
orb
inc
adc
in
lcall
sbbb
push
outsl
js
test
loope
cmpsb
cs
or
adc
dec
mov
dec
pop
xor
adc
or
imul
outsb
or
ja
or
test
pop
mov
das
popf
jmp
pop
imul
mov
je
ss
mov
xchg
std
push
jmp
push
mov
adc
add
cmc
test
int3
pop
mov
mov
jecxz
sbb
dec
push
cmpsl
int
mov
jns
or
dec
addr16
xchg
arpl
mov
push
xor
addb
jg
fwait
pop
into
call
lret
mov
jno
dec
pop
adc
xchg
or
testl
xchg
dec
ret
pop
stos
rorl
push
sahf
cmp
pop
add
or
sub
rcl
je
ljmp
mov
xchg
adc
outsb
mov
imul
daa
add
jb
repz
or
jns
movsl
loope
shrl
scas
xchg
push
lock
fstpl
es
push
ja
and
add
mov
pushf
das
scas
ljmp
aam
das
xchg
fs
in
pop
movsl
fisubl
aad
cmp
cs
into
dec
mov
and
mov
pop
mov
cmp
int3
shll
sub
int
pop
xchg
mov
dec
mov
jmp
xlat
xor
iret
mov
cld
or
adc
pop
in
sbb
ja
mov
loop
push
lahf
sub
xchg
fst
lock
mov
xchg
xchg
and
in
dec
xchg
in
stos
jae
sub
sub
cmp
out
loope
adc
cmp
inc
shlb
pop
xchg
mov
sbb
fisubl
fs
mov
js
cs
jmp
mov
loopne
and
repz
adc
lods
push
mov
std
inc
adc
lret
loop
mov
clc
enter
xchg
xchg
jl
insb
mov
mov
fisubl
sbb
or
aad
jmp
xor
dec
cmp
outsl
push
xchg
gs
or
lods
ss
addr16
popf
jecxz
mov
jl
negb
std
cmpsb
repnz
sbb
jmpw
pop
aad
inc
loope
int3
push
dec
push
fldenv
addb
lcall
pop
add
mov
out
or
inc
test
pop
and
inc
mov
pop
stos
push
dec
andl
addb
mov
fcoml
pop
inc
xchg
sarl
insb
xchg
andb
push
xchg
das
push
negb
dec
fsubr
outsl
push
sbb
es
ret
movsl
int3
stos
ljmp
hlt
xor
sbb
fdivl
xorl
cld
cltd
jae
mov
add
pop
insl
cli
int3
and
inc
cmpsl
sarl
mov
icebp
jne
cwtl
push
clc
inc
and
push
cmp
test
mov
in
sub
call
rorb
inc
mov
leave
jecxz
bound
andb
lods
iret
aaa
dec
orl
aad
out
inc
xor
adc
inc
jmp
push
push
int
jle
mov
jae
div
stos
js
mov
test
mov
int3
lock
mov
jg
xchg
out
cmpsl
filds
in
andb
xchg
ror
push
jno
mov
jge
mov
loopne
sbb
cmpb
andb
bound
xor
mov
stos
push
pop
cs
dec
jl
cmp
imul
notl
push
mov
arpl
and
out
outsb
sbb
and
fnstcw
mov
and
cltd
ljmp
loopne
xchg
or
subl
loop
imull
jae
movsb
int
jnp
fists
std
fstpl
outsl
mov
lcall
mov
mov
mov
into
cmc
je
push
sbb
pop
jmp
in
cmp
xchg
cmpsl
ret
push
xor
sub
sub
bound
cmp
out
scas
jp
adc
lcall
mov
negl
or
pop
loop
xchg
aas
mov
in
adc
addb
sbb
jge
inc
cmpsl
sbb
les
mov
es
orb
or
xchg
dec
mov
or
shl
adc
adc
jno
nop
sbb
lret
sti
adc
jb
or
jmp
mov
outsb
cs
ss
or
shlb
sub
das
fistps
aaa
dec
xor
xchg
fld1
jmp
pushf
dec
dec
mov
push
jbe
fs
push
pop
add
out
push
lahf
or
in
push
rolb
mov
rcl
jmp
dec
pop
cmc
stc
adc
popa
in
adc
lods
insb
scas
fdivl
sti
cld
jg
nop
mov
movsl
inc
sub
aad
arpl
sbb
test
dec
icebp
outsl
mov
sbb
cmp
or
add
xor
xchg
mov
popf
mov
addr16
dec
pop
daa
push
push
xchg
insl
mov
cmpsb
jge
pop
es
push
jge
es
xor
and
mov
out
je
jecxz
mov
ret
mov
lcall
call
mov
dec
xor
xchg
or
lret
pop
jnp
in
pop
sti
gs
stos
or
fsubrl
imul
jo
aas
mov
lret
adc
outsl
clc
mov
xor
sub
frstor
dec
lret
dec
out
lock
cmp
mov
shrl
out
je
repz
push
mov
cmp
fucomi
mov
sub
data16
std
pusha
and
aas
stos
add
js
lods
dec
imul
ljmp
sbb
sub
fcoms
gs
cmp
loope
push
pop
ss
dec
xchg
push
out
sbb
xor
cmp
mov
rcrb
in
outsb
daa
out
ret
lods
cli
mov
outsl
cmpsb
jnp
sti
lods
jno
icebp
popf
adc
dec
jb
add
popf
jbe
fbld
xchg
adc
jmp
mov
adcb
test
rcr
lcall
inc
mov
fldl
mov
dec
daa
fldenv
imul
dec
mov
dec
xor
cs
jae
sbb
fimull
popa
add
out
mov
or
sahf
adc
movsl
cmp
jg
and
mov
sub
add
sbb
dec
fsubs
fists
and
sub
jge
shlb
mov
xchg
pop
inc
xchg
aad
decl
inc
jl
jge
jmp
sub
jmp
mov
xchg
mov
inc
inc
je
stos
shlb
adc
ret
fdivrs
jl
jmp
sub
lods
push
inc
pop
in
add
push
in
ss
outsl
push
ljmp
cmp
xor
mov
dec
dec
push
sub
xchg
les
movl
loop
pushf
nop
js
fs
sbb
jnp
mov
push
in
mov
sub
mov
in
push
cmp
addr16
test
pop
in
mov
outsb
xchg
ljmp
xor
std
mov
and
add
sbb
loope
mov
dec
xor
push
rorl
pop
xchg
sbb
cli
movsb
je
jecxz
xchg
sbb
mov
in
stos
mov
dec
jl
sahf
and
ljmp
gs
shrl
jle
cwtl
clc
dec
enter
pop
int3
push
add
mov
jbe
jmp
insl
lods
aas
int3
scas
cmp
pop
movsl
sbb
cmp
mov
nop
sti
xor
lods
adc
xlat
test
nop
or
not
outsl
test
fimuls
inc
test
mov
cld
jb
push
mov
inc
mov
lods
rcrl
stc
fistl
jecxz
fsubr
inc
loop
std
shr
pusha
lds
in
add
jp
leave
pop
popf
dec
psadbw
out
xchg
and
enter
adc
test
btr
sub
in
mov
clc
pop
pop
lods
jmp
mov
cltd
or
mov
lret
cmpsb
cwtl
pop
pop
pop
lods
mov
or
xchg
cmpsb
scas
xlat
test
mov
pop
outsb
std
cmp
jae
addr16
cmp
adc
out
les
mov
ljmp
stos
lods
jae
shlb
jp
xor
push
dec
and
fildll
mov
jnp
insb
cltd
out
mov
or
push
xor
lea
jge
fdivl
popl
xchg
xor
xor
sub
test
adc
jge
sti
out
test
daa
scas
movsb
pushf
fidivrs
pop
inc
and
sbb
or
xchg
sub
cmp
gs
add
push
xchg
add
scas
dec
dec
push
and
xor
insb
push
jmp
loope
cltd
aad
or
sub
jb
mov
inc
xchg
imul
cmp
pop
push
mov
mov
cmp
cmp
pop
sub
pop
xor
jae
scas
dec
aas
inc
popf
addr16
push
xchg
fs
test
faddp
jo
sbb
or
cmp
movsl
jge
cmp
dec
fdivs
lods
rorl
out
iret
mov
mov
inc
popf
sub
lock
pop
mov
mov
es
push
icebp
fmulp
xorl
add
pop
ja
mov
pop
out
lret
stos
rorl
mov
cmp
lods
sub
cmp
jae
andl
int3
cwtl
xor
cmpsb
bound
push
pop
and
lds
mov
inc
js
dec
fwait
dec
pop
into
mov
rcrb
bnd
loopne
shll
out
ljmp
sbb
and
nopl
in
dec
shrb
loop
bound
jmp
ljmp
or
mov
sbb
shll
push
fs
movsb
call
pop
sbb
int
mov
xchg
mov
lret
adc
pop
arpl
sub
jns
mov
mov
mov
mov
loop
pop
and
movsb
push
push
rorb
add
out
lahf
mov
cwtl
shrb
jecxz
xor
into
sbb
mov
sub
xlat
loope
fsts
mov
inc
int
dec
loopne
lds
or
mov
mov
imulb
push
imul
dec
aad
sbbb
and
into
push
paddb
ret
insb
push
repz
nop
or
frstor
sub
xchg
and
sahf
fdivrs
in
fisttpl
add
popf
gs
inc
iret
cmp
jmp
inc
sbb
lods
aas
es
sub
fs
in
cltd
ljmp
repnz
or
adc
mov
jne
faddp
mov
adc
aaa
gs
adc
cmp
inc
sub
pop
and
xchg
aad
cmp
or
subb
cmp
out
jne
mov
cs
adc
shl
dec
imul
in
pop
scas
mov
mov
mov
lds
inc
ret
outsl
scas
push
ret
sbb
xchg
jno
jmp
jo
scas
and
andb
mov
push
sbb
aas
mov
push
scas
xor
pop
dec
mov
xchg
adc
push
mov
sbb
and
ret
mov
setg
xor
push
xchg
xlat
jle
lods
stos
in
fs
push
test
jo
mov
nop
pop
in
push
sbbl
lds
xchg
push
pop
xchg
int3
lods
mov
loop
inc
mov
and
in
jmp
lret
mov
dec
cmp
add
inc
dec
xchg
sub
sub
in
push
mov
jecxz
push
push
mov
and
in
fsubrs
jnp
mov
dec
test
push
jno
add
sahf
pop
cli
jmp
cltd
fcomp
lret
cli
or
aas
mov
outsl
add
or
adc
mov
mov
test
cmc
sub
mov
add
addl
dec
mov
fsubrs
add
shrl
cmpxchg
dec
sahf
je
xchg
xchg
stos
pop
xor
push
decl
xor
sahf
adc
sahf
jns
js
jg
loopne
xor
mov
aad
inc
outsb
mov
mov
push
sbb
fsubs
or
pusha
cmp
push
lock
nop
fmulp
mov
jne
out
loope
push
int
pop
lds
cmpsb
jle
or
cwtl
sub
sub
pop
xor
mov
jge
jmp
pop
or
jp
mov
jmp
inc
imul
sub
jmp
js
mov
mov
cmp
mov
sbb
inc
xlat
imul
push
lods
push
cmp
sbb
xor
pop
push
sub
pop
adc
aam
imulb
dec
jmp
push
in
fisubl
mov
sti
ljmp
data16
mov
add
lret
mov
jl
in
push
rol
sub
lahf
and
inc
popf
bound
cld
sbb
loopne
inc
into
xchg
stos
imul
js
jecxz
iret
jns
adc
cmp
mov
bound
and
push
jmp
jno
loope
cmp
test
and
mov
repz
test
lods
gs
sub
inc
aad
xor
xlat
lock
sub
lea
inc
into
dec
lods
fiadds
leave
or
xor
adc
hlt
pop
nop/reserved
mov
pop
fsts
clc
mov
cmpsw
xchg
repz
pop
divb
into
stc
test
sub
sub
bound
lds
stos
repnz
call
pop
in
lods
loope
mov
andl
test
jne
adc
or
mov
sti
push
gs
pop
or
repnz
adc
fwait
in
mov
mov
adc
xlat
mov
dec
addl
and
mov
lods
xchg
push
mov
in
lds
popa
test
les
inc
mov
clc
mov
in
dec
pop
xlat
adc
mov
mov
pop
ljmp
push
lods
repz
jp
test
sub
dec
ret
loope
mov
dec
sbb
insb
lea
pop
imul
dec
jns
jo
sbb
mov
pop
bsr
dec
testl
mov
lahf
pop
adcl
dec
nop
jmp
or
xchg
std
xor
pop
int
pop
gs
out
dec
insl
adc
add
es
lock
testl
push
or
push
aam
mov
or
sub
sub
leave
cmpsb
test
inc
loopne
cs
fdivs
cmpl
push
or
scas
pop
fistps
cwtl
test
xor
aas
int3
sahf
test
cli
pop
pop
aam
pop
sub
mov
pop
and
fnstenv
int
dec
sbb
iret
fsubl
dec
test
jp
das
dec
pminub
mov
icebp
rorb
and
mov
cld
aam
xlat
scas
cmpsl
mov
es
mov
xchg
sub
addr16
fbstp
stc
in
fiadds
mov
std
cmp
dec
fimuls
clc
ret
xchg
dec
adc
pop
push
cmp
cli
pop
hlt
lret
loope
daa
aad
movsb
ds
pop
push
stc
lock
nop
lds
jle
in
adc
dec
mov
iret
mov
xchg
lret
cmp
mov
adc
xchg
mov
hlt
cli
mov
int3
loopne
imul
imul
mov
mov
xchg
imul
push
jg
dec
xchg
add
jmp
ret
sub
dec
lahf
scas
into
xorb
or
cli
mov
dec
imul
jo
orl
xchg
xor
xlat
ja
ds
dec
push
push
inc
repz
jl
or
dec
mov
adc
add
push
sbb
imul
outsb
mov
dec
cmp
shll
mov
lahf
out
mov
xchg
faddl
and
push
sub
jl,pn
xor
cltd
push
leave
xor
daa
ficoms
xor
clc
inc
push
std
inc
add
xor
fucomp
mov
in
repz
je
pusha
fstps
insl
inc
andl
and
test
pop
out
inc
xlat
or
fstp
or
pop
dec
in
dec
test
xchg
in
popa
nop
aam
xor
call
imul
mov
pop
enter
insb
push
mov
sub
xchg
xchg
rcrl
mov
push
lods
pushf
jmp
divb
pushf
jle
pop
push
dec
xchg
inc
imul
cmp
pop
cmc
insl
cmp
pop
jge
ret
xchg
jecxz
xor
lcall
lahf
and
cwtl
mov
cmpsl
cmc
mov
and
jmp
mov
jmp
mov
push
add
lock
std
test
push
push
dec
dec
fsubrs
sbb
mov
mov
test
scas
das
stc
into
xchg
inc
and
cmpsb
ds
adc
mov
push
xor
pusha
xchg
fwait
add
inc
lods
push
and
outsl
test
shll
cmp
loope
xor
mov
inc
xchg
ljmp
sbb
adc
bound
xor
mov
hlt
dec
sub
sub
orb
iret
stos
add
testl
rorl
stc
int3
jne
in
jne
das
push
jns
dec
push
add
int3
loop
mov
jecxz
fimuls
cmp
jle
push
out
xor
testb
dec
cmpl
imul
je
mov
dec
mov
mov
or
ds
jno
pop
lret
sub
sbb
mov
xor
orb
fstl
jnp
xchg
mov
jl
push
cltd
mov
pop
cmp
or
mov
loopne
stos
sbb
cmc
shlb
test
out
repz
daa
mov
lock
faddl
insb
jecxz
popf
in
les
and
jle
inc
jb
mov
clc
add
xchg
call
xchg
divl
sbb
cld
daa
cmpsl
repnz
sbbb
and
add
lret
mov
aam
scas
lcall
xor
mov
sbb
dec
sbb
faddl
rcrl
dec
ds
mov
mov
jp
mov
sbb
pusha
inc
leave
cmpsb
fldt
divb
pop
fisubs
ja
mov
push
std
inc
mov
mov
xchg
push
js
push
fistl
jb
pop
idiv
or
movsb
es
xor
out
pop
nop
mov
orl
fdivl
lret
fldenv
push
push
daa
mov
in
imul
popf
loop
fsubrl
hlt
jbe
jmp
add
or
leave
cli
pop
lcall
das
daa
adc
ljmp
push
jne
jecxz
xchg
xchg
and
cs
mov
pop
jmp
out
xchg
mov
mov
fsubl
in
and
ja
dec
inc
jns
les
jns
sub
xlat
dec
or
dec
fcmovne
das
leave
and
aas
or
mov
cmp
out
jne
test
cmpsb
je
push
mov
aaa
bound
outsl
push
fistpll
ss
movsl
pop
daa
cmpsl
mov
jp
pop
mov
enter
inc
pusha
jmp
lret
dec
jecxz
xchg
xor
jg
mov
add
test
js
jb
add
lahf
push
xrelease
cmc
add
lahf
in
out
test
in
scas
les
xor
and
pop
fdivrs
sahf
dec
es
in
and
mov
fs
dec
pop
cmc
ss
xor
and
pop
mov
xchg
outsb
add
daa
or
negl
jle
arpl
lds
in
das
mov
and
in
cli
into
cmpb
rcrb
mov
mov
mov
outsl
fstp
js
lods
bnd
mov
fdivs
mov
add
jns
repz
mov
sahf
sub
leave
pop
mov
int
movsl
in
mov
aaa
inc
out
hlt
inc
fsub
std
lret
pop
mov
jp
or
and
jb
or
xchg
pusha
add
aam
push
mov
cmp
xchg
shrl
outsl
iret
inc
xchg
cmpsl
cmp
mov
mov
pop
adc
mov
hlt
cmp
scas
pop
gs
xor
cmp
test
xor
jae
inc
jle
cmp
loopne
daa
bound
out
jbe
aam
enter
pop
mov
fwait
xchg
pushf
add
dec
popa
xor
inc
push
data16
mov
and
ficoml
popf
xor
mov
sti
pop
sub
in
decl
mov
push
mov
adc
cmp
pop
out
in
lcall
outsb
mov
adc
xor
call
inc
xorl
cmp
mov
push
jle
nop
arpl
clc
imul
push
jae
fcomip
cmpsl
add
clc
and
cwtl
test
push
or
cltd
enter
outsb
push
mov
outsb
lea
and
aaa
add
pop
push
popl
mov
jge
inc
ret
xchg
hlt
dec
mov
aad
imul
in
xchg
les
add
fdivr
push
mov
fidivrl
movsb
push
addr16
cmp
test
or
es
lret
push
push
lods
cwtl
lea
jle
fimuls
cmp
mov
cmp
popa
loop
adc
fsts
flds
add
loopne
jb
mov
fisubl
aaa
pshufw
jnp
test
sahf
dec
popa
push
sbb
or
xlat
xchg
mov
fsubs
dec
and
pop
cmp
test
adc
cmpsb
adc
sub
loopne
xchg
lret
sub
cmp
sub
inc
xchg
icebp
add
icebp
cmp
aas
cmovnp
mov
or
cmc
mov
pop
adc
add
mov
dec
inc
mov
cmp
imul
aad
inc
fisubs
xchg
das
pushf
orb
sarl
lods
or
cmp
aas
mov
fnstcw
das
notl
xor
loope
data16
mov
xchg
fldcw
adc
mov
data16
stc
cmp
xchg
or
dec
xchg
shr
mov
push
inc
in
das
or
lcall
clc
inc
adc
or
subb
pusha
push
cmp
fwait
mov
sbb
jmp
mov
imul
push
inc
repz
hlt
xorb
flds
inc
sbb
cmc
int
push
filds
push
int3
data16
ficoml
xchg
insl
cmpsl
cmp
nop
add
lret
imul
test
aam
jmp
loop
push
push
xchg
in
ficoms
mov
push
out
lock
push
das
add
adc
sbb
mov
mov
in
orb
fisttpll
and
les
jge
push
testl
call
popa
aam
xchg
cwtl
sbb
scas
lods
divb
pop
pusha
pop
mov
add
mov
jo
sub
jne
push
fidivs
jne
push
jae
out
lock
sub
add
movsl
bound
inc
or
push
cmp
sub
in
pop
mov
leave
xchg
movsb
push
movsb
pop
or
mov
repnz
setl
push
sarl
cmpsb
cmpsb
in
imul
xor
sub
mov
sbb
fnstsw
push
iret
mov
or
adc
xor
repnz
bound
stc
sub
aas
xchg
xor
mov
vpcomb
xchg
sbb
xchg
sub
mov
jno
arpl
or
lock
std
int3
or
pop
in
icebp
sbb
mov
rolb
cmp
jno,pt
adc
lods
push
mov
aam
mov
in
jl
mov
xor
fisubrl
sbb
mov
xchg
aas
and
sub
push
adc
fstps
push
out
dec
lods
cmc
jmp
cmp
dec
ja
aam
popa
or
or
pop
and
push
inc
inc
icebp
jnp
pop
adc
jno
idivb
int3
in
pop
pop
in
lods
sti
mov
push
cmp
or
fcmove
add
es
mov
and
push
mov
jecxz
mov
adc
pop
xchg
shll
jne
repz
loopne
aas
mov
in
insl
xor
mov
push
enter
sbbl
inc
fwait
test
outsl
push
push
hlt
bound
outsb
pop
pop
lahf
inc
test
jl
jo
jo
scas
add
xchg
negl
test
loopne
loope
mov
shlb
shl
sbb
mov
sbb
inc
push
mov
push
sbb
jp
in
or
sub
ret
add
pop
stos
push
and
push
dec
push
in
xchg
iret
std
out
gs
pop
mov
setl
stos
icebp
adc
xchg
push
or
fnsave
cld
inc
popa
jno
roll
xchg
push
jbe
and
and
jb
xor
fisttpll
push
mov
insb
sbb
in
fcoms
ja
cltd
fs
arpl
pop
test
pop
jb
jae
pop
push
ljmp
xor
pop
iret
mov
add
fwait
cmp
sbb
hlt
xchg
pop
rcrl
shrb
push
inc
mov
mov
cmp
jns
xchg
shl
xchg
mov
cmp
sbb
add
cs
shll
and
pop
lods
iret
sarl
scas
paddb
pop
js
or
jle
mov
or
mov
test
fisubs
imul
sbb
je
mov
sarl
shlb
add
cld
xor
xchg
in
sbbl
push
ret
addr16
fnstsw
mov
inc
lret
subb
mov
mov
jb
call
orb
xchg
arpl
into
popf
fldlg2
push
enter
push
int
pop
test
scas
dec
mov
xor
lea
fistl
pop
daa
pop
sbb
jns
outsl
jb
mov
dec
push
clc
outsb
push
sub
jne
sub
test
cmp
mov
rcrb
mov
pop
sahf
xchg
jmp
pop
into
mov
sbb
sbb
xor
in
add
outsb
adc
fwait
es
cmpsb
andl
orl
mov
mov
fiadds
sbb
into
dec
bound
imul
orb
and
sarb
mov
jge
in
xchg
stos
inc
adc
jno
sti
orb
or
pop
xorl
movsb
pop
in
push
adc
test
xor
stos
fs
ud0
out
push
rolb
xchg
imul
bound
jns
xchg
xchg
sub
out
xchg
adc
mov
mov
sub
mov
xor
mov
cmpsb
int
popa
xchg
lods
mov
es
mov
push
rol
pusha
in
hlt
outsl
cld
sbb
fcoms
cmpb
add
cli
cli
mov
cmpsl
xchg
mov
repz
repz
mov
stc
lea
fucomi
jge
ss
les
lret
xchg
pop
stos
stos
movsb
outsb
jmp
call
add
cltd
shll
bound
and
jge
jl
pop
or
jl
imul
pop
cwtl
fld
enter
out
jle
dec
sub
lcall
addr16
sub
aad
push
and
aaa
icebp
repz
mov
mov
pop
push
inc
sbb
push
stc
inc
jae
ret
rcll
lcall
jae
jnp
repnz
pop
add
ljmp
push
mov
mov
das
pop
push
sti
aas
sub
movsb
rorb
or
enter
ja
js
sti
jmp
ljmp
int3
xchg
adc
fwait
adc
pop
inc
inc
push
das
mov
cmpsb
lock
fsubs
mov
popa
rorb
or
xor
xchg
out
and
mov
cld
popa
cmpsl
add
insb
stos
fcomps
mov
mov
ljmp
inc
lcall
jmp
and
ret
mov
lret
je
scas
iret
aaa
outsl
sbb
add
lret
ds
jmp
dec
lcall
inc
adc
js
leave
sbb
pop
pop
ja
push
adcl
out
mov
jmp
fidivs
and
js
cmovb
mov
int3
loop
dec
les
inc
in
cmp
shll
mov
pop
inc
xchg
mov
ret
mov
mov
ds
jns
push
sbb
jo
gs
imul
lods
scas
inc
push
inc
and
roll
mov
out
inc
mov
cli
pop
loop
jo
xor
sar
xlat
repz
jmp
push
lcall
jbe
or
fdiv
inc
dec
out
or
add
cmpsb
push
and
loopne
pop
je
mov
pop
std
pop
sub
adc
in
jecxz
es
jg
xchg
dec
jle
xor
and
hlt
push
in
dec
or
dec
into
xchg
lcall
add
push
jge
cs
inc
in
jne
inc
xchg
adc
lea
out
sbb
fcomps
pop
adc
mov
xchg
dec
and
jp
mov
push
popa
addb
add
sub
or
lods
or
jnp
lcall
jne
push
xchg
out
addr16
hlt
mov
sbb
mov
cltd
jae
sbbb
out
mov
mov
and
fnstsw
pop
lahf
test
cli
sbb
jae
push
push
push
mov
xchg
cmp
and
test
push
ret
sbb
stos
test
add
jmp
and
pop
xchg
cmp
xchg
mov
pusha
jecxz
push
push
nopl
je
xchg
bound
add
mov
popa
in
int3
sub
lods
and
jns
push
daa
mov
cmc
lock
xor
in
lods
lret
xor
loop
mov
push
add
jp
cmp
push
les
sbb
sbb
add
or
fisttpll
mov
je
int3
es
data16
or
dec
out
popf
idivl
pop
jl
arpl
in
xor
dec
fists
mov
mov
or
jmp
in
leave
fbstp
cmp
sub
jno
cli
sub
dec
cli
jmp
nop
mov
pushf
cwtl
repnz
xor
sbb
mov
lahf
test
cmpsb
pop
jne
lahf
add
mov
xchg
mov
sub
jbe
rcrl
push
mov
pushf
pop
test
cmp
enter
aam
les
dec
in
jle
mov
jns
enter
add
adc
or
mov
jp
lahf
rcr
mov
push
lret
xchg
sbb
outsl
or
sub
mov
test
mov
rcrb
cmpsl
push
mov
lods
inc
loopne
mov
jmp
andl
adc
sti
or
inc
sbb
push
push
mov
pushf
sahf
add
add
or
mov
cmpsb
or
xchg
jmp
imul
repz
jge
aad
xorl
sahf
fstps
in
lret
sub
movl
nop
ja
adc
lods
mov
jnp
dec
xlat
xchg
lret
and
sahf
or
subl
mov
test
fistps
repnz
mov
xchg
jbe
add
or
mov
sahf
in
push
gs
cmp
mov
xchg
scas
cmpsl
lods
in
lret
pop
loop
or
in
mov
dec
add
jae
pop
jg
iret
repnz
lret
mov
or
push
fadd
bnd
iret
jnp
dec
pop
inc
push
movsl
pop
push
mov
mov
xchg
dec
or
inc
sub
mov
pusha
jp
pop
stos
movsb
add
insl
xlat
fidivs
jo
xchg
xchg
sbb
push
push
inc
mov
xlat
addr16
pushf
add
push
push
out
cmpsl
cmp
rcrb
sbb
xchg
sbb
push
push
push
xlat
xor
push
mov
in
and
sub
into
loop
or
popf
sahf
aas
jl
in
shrb
mov
xorb
outsl
mov
shrb
pushf
js
dec
int
fcmovne
sbb
fsubs
in
xchg
into
insb
fcmove
sbb
add
aaa
inc
xchg
mov
int3
aaa
push
mov
cmp
sub
shll
popa
xor
add
xor
stos
pusha
dec
dec
movntq
insb
jle
inc
xor
test
adc
adcl
cwtl
fld
jae
add
ret
sub
mov
and
or
mov
sahf
push
lods
int3
sbb
push
mul
mov
mov
jae
jg
jp
adc
push
das
bound
out
arpl
mov
inc
and
fnstenv
bound
pusha
mov
mov
mov
cld
and
cli
jns
int
sub
sub
cmp
mov
and
sub
jno
jmp
movsl
cmp
ficomps
sahf
test
cmp
ret
call
add
ss
push
test
clc
sbb
add
out
xor
push
cmove
adc
pop
or
cmpsl
int
mov
pop
cmc
mov
ljmp
pop
xchg
bound
test
and
inc
sbb
inc
and
xor
cltd
sub
aas
lret
mov
mov
adc
sahf
xor
ljmp
rcl
outsl
in
add
or
cs
clc
adc
mov
test
lahf
mov
rorb
mov
call
cmpsb
imul
pop
lret
out
mov
cmp
lods
int3
sub
testl
hlt
cmp
loop
xchg
outsb
cmp
xchg
mov
jp
std
cmpl
or
mov
jae
lahf
jecxz
pop
push
or
test
outsl
imul
cld
xor
and
pop
scas
cmpsl
jl
mov
pop
cmp
pusha
adc
xor
sub
outsl
mov
sarl
fs
ss
rcl
pop
fisubl
repz
push
bound
jb
cmpsb
cmp
inc
jl
adc
fistpl
lret
fcompl
push
jnp
dec
outsl
pop
mov
fdivp
insl
xchg
in
aad
in
mov
or
outsb
inc
jg
adc
lret
lret
or
xchg
ret
in
movb
xchg
lahf
cwtl
ss
and
pop
push
shrl
divl
testl
add
movsl
adc
cli
inc
cmp
mov
push
lcall
jnp
push
das
xor
out
and
cwtl
pop
stc
mov
sti
push
sub
lods
ja
cmp
dec
lods
push
cmpsb
insb
fwait
add
mov
in
xlat
inc
jo
dec
inc
loope
shlb
add
push
inc
push
or
sub
push
mov
pop
ja
cmpsl
adc
jb
add
fdiv
nop
mov
inc
push
lods
daa
in
test
add
xchg
jp
outsb
gs
ljmp
add
or
negl
adc
push
xchg
adc
and
jl
pop
pushf
xchg
add
cwtl
mov
xor
js
mov
stos
in
xor
bound
pop
mov
mov
add
bound
cmpsb
inc
pop
mov
jg
add
testl
inc
mov
mov
in
xlat
loopne
xor
cmp
mov
lds
out
inc
iret
xchg
jnp
adc
xor
stc
dec
add
sbb
jge
and
pop
jge
lods
les
push
aam
mov
iret
cmp
pop
cmp
sub
or
movsl
jns
sbb
mov
ja
sbb
hlt
push
aad
fwait
rcrb
lahf
lret
push
fstpt
pop
inc
adc
pop
dec
xchg
pusha
sbb
sahf
or
les
jp
hlt
call
mov
popa
push
sbb
test
dec
lret
inc
shlb
subl
mov
inc
lds
mov
cltd
mov
shlb
out
bound
push
je
push
mov
and
pop
adc
jno
and
jmp
jmp
dec
lahf
call
xchg
push
lahf
jbe
sbb
ljmp
pop
in
das
sahf
loopne
loop
in
inc
push
push
fcom
mov
cmpsl
test
mov
mov
xchg
pop
mov
and
loope
and
cmp
fcompl
dec
test
dec
lock
call
mov
push
stc
push
movsb
or
ljmp
xchg
jnp
cmp
sub
push
fcmovbe
rcrl
clc
std
movsb
fwait
scas
pop
ja
mov
imul
sub
iret
cmp
cmp
jmp
dec
in
sub
fcmovnb
in
test
mov
mov
sbb
lretw
xchg
in
adc
mov
es
jne
icebp
ljmp
jb
mov
repz
pop
sbb
cmp
lret
push
pop
cmpsl
fs
scas
gs
adc
xlat
adc
scas
add
xchg
inc
enter
fidivrl
ret
and
outsl
es
enter
fisttps
mov
in
jmp
adcl
loope
xchg
cmpsb
pop
rcll
daa
stc
rolb
xchg
inc
andb
sub
push
xor
jne
es
push
xchg
aad
fsubr
ret
loope
loope
lock
xchg
bound
adc
xlat
mov
call
pop
and
mov
cmpsb
call
shll
and
arpl
xchg
and
and
push
fnsave
inc
pusha
jg
adc
mov
sub
jmp
cmc
lahf
jns
xor
std
stc
mov
cmp
stos
sbb
xchg
sti
movb
jno
sar
push
bound
mov
push
sbb
into
out
lods
ljmp
jb
cmpsb
out
ljmp
in
and
inc
adc
imul
adc
aaa
push
adc
f2xm1
aas
cmpsb
in
insb
movl
test
push
packssdw
sbb
adc
and
je
lods
cmpsb
mov
cmp
push
pushf
push
cmp
shl
xchg
fisttpl
pop
std
data16
pop
incb
jg
push
inc
xor
insl
pop
loope
in
pop
outsl
nop
aas
lock
jmp
out
pop
and
or
mov
pop
test
pop
sbb
shll
cbtw
pop
sbb
jae
inc
dec
adc
push
cli
push
sbb
jge
popf
imul
xchg
jno
push
xor
cmp
icebp
mov
mov
into
push
repz
leave
mov
mov
leave
int
cmp
shll
inc
testl
adcl
scas
and
mov
or
inc
add
or
cmp
lahf
jne
inc
out
or
in
lahf
jge
fildl
dec
mov
in
sbb
pop
test
sti
pusha
add
pop
imulb
pop
mov
mov
aaa
pop
adc
push
je
jge
fsts
je
les
jg
dec
jmp
fisubrl
push
jne
push
pop
fsubl
jle
gs
inc
out
xchg
rolb
pop
mov
jns
adc
jb
pop
imul
sbb
out
mov
dec
stc
popf
xchg
shrl
and
add
and
into
aaa
sub
xchg
cmpsb
imul
cli
push
or
jp
stc
cmp
mov
out
cmp
xchg
xor
andb
jmp
xchg
mov
adc
mov
rorl
pop
movsb
pushf
subb
cmp
movsl
gs
xlat
or
xchg
jp
leave
dec
cmp
dec
loop
or
test
or
addr16
loope
sub
sti
jmp
sub
mov
mov
fwait
ljmp
mov
sbb
dec
xchg
fnsave
add
stos
mov
xchg
inc
cmp
dec
dec
jp
xor
pop
stos
adc
and
insb
dec
in
mov
repz
pop
and
sbb
insl
xor
dec
cmp
fiaddl
ljmp
and
mov
aad
pop
dec
mov
mov
lock
xor
cmp
mov
rclb
dec
lock
lods
fildll
andl
aas
and
push
nop
xor
test
outsl
jl
jp
jecxz
inc
jmp
dec
or
ljmp
xchg
outsb
xor
cltd
ss
arpl
bound
loopne
and
nop
mov
adc
and
or
dec
dec
incb
sub
cmp
jae
pop
xor
fistpll
fdivr
or
fistl
inc
leave
je
xorl
sbb
call
sub
xor
or
push
push
add
test
mov
out
ret
add
rol
push
in
push
mov
lods
lods
stc
cltd
popf
stos
bound
std
inc
mov
pushf
repz
and
pop
repz
push
pushf
or
sbb
or
lsl
pop
es
popf
mov
or
cmp
cmpsb
data16
out
enter
insl
jb
push
arpl
dec
pop
and
dec
lods
test
xchg
dec
roll
sub
sub
or
stos
out
push
xor
adc
test
add
cmpsl
inc
ret
xor
jl
es
and
ds
jno
xlat
jp
and
xchg
lret
ret
in
lcall
inc
cmp
sbb
pop
mov
in
or
das
pop
or
xor
add
outsb
arpl
movsl
jnp
lahf
pop
push
push
xor
inc
cs
push
addr16
add
lret
test
fistl
enter
enter
cmpsb
add
shlb
jb
in
xor
mov
jg
dec
out
jecxz
inc
stc
test
cmc
pusha
cld
inc
pop
cmp
sbb
rcrl
test
pop
sub
sarl
pop
push
fisubrs
inc
pop
pop
pop
mov
push
adc
xor
jns
lods
cmpsb
jge
xor
cmpsb
mov
movsb
and
rcl
jo
add
or
out
in
pandn
adc
xchg
inc
stos
ds
adc
cmovge
push
inc
lock
add
flds
or
iret
jl
push
clc
cmp
inc
add
popf
xchg
in
shlb
push
sbb
fistl
insl
popa
jo
ss
sbb
push
lods
incb
ret
lea
fcomps
je
push
lods
enter
dec
sbb
add
mov
cld
test
inc
xor
adc
or
xor
and
mov
add
ljmp
lock
add
mov
adc
xor
inc
mov
lock
sbb
and
pop
inc
pop
push
xchg
dec
cld
movsl
rorb
cmp
and
xchg
aaa
scas
sub
ficoms
inc
pop
lds
or
rcr
adc
push
out
add
loope
rcll
movsl
or
imul
sbb
inc
cmpsb
les
rorl
leave
aam
jnp
jmp
into
out
es
mov
ss
push
push
cmp
pop
cwtl
subl
mov
in
cmp
add
repnz
int3
bndldx
inc
xor
pop
aad
ret
push
nop
sub
mov
mul
push
lret
test
dec
jmp
popf
rcrl
mov
jae
pop
aaa
sub
out
outsb
xlat
push
sti
jno
movsb
cmc
xor
mov
scas
nop
cmpsl
daa
sub
sbb
outsl
into
dec
mov
xor
test
push
pop
pop
lret
xchg
mov
pop
je
frstor
pop
rcrl
push
testl
adc
pop
mov
jle
lds
movsl
aam
mov
xchg
fst
fnsave
jmp
mov
insl
dec
nop
out
addr16
pushf
arpl
inc
rorb
movl
dec
sets
jo
xor
outsb
lret
cmpsl
dec
test
rclb
push
sbbl
dec
sub
jecxz
mov
ss
repnz
xor
dec
cli
push
ljmp
sarl
std
mov
pop
jne
js
mov
xchg
scas
pop
ja
into
lret
sub
cmp
push
addr16
dec
xchg
jmp
insl
mov
cltd
xchg
mov
sbbb
cmp
add
mov
push
ret
sbb
roll
or
shll
movsb
rol
inc
ret
mov
dec
cmp
push
shrl
popa
dec
inc
lock
sbb
xchg
jg
cmp
popa
mov
adc
dec
mov
popf
ss
mov
adc
lods
cmp
insl
xor
inc
call
ficoms
jmp
push
scas
mov
sub
mov
fisttpll
ret
pop
jbe
inc
pop
sbb
clc
fimuls
mov
mov
jns
cwtl
add
repnz
lods
or
lret
dec
lcall
mov
filds
rorl
mov
xchg
fldt
sahf
pop
cwtl
hlt
jns
jnp
pop
insb
std
lea
lock
in
push
mov
call
sbb
repz
icebp
mov
mov
test
cmp
mov
fisubs
in
inc
mov
xor
mov
adc
imul
add
fisttpl
xchg
ds
repz
imul
dec
dec
aaa
inc
add
mov
adc
outsb
sahf
or
aad
xchg
std
subb
xor
jge
mov
sub
out
test
adc
movsb
and
mov
jecxz
add
popa
cmp
in
jecxz
mov
or
jecxz
push
into
or
sub
dec
mov
xor
sub
mov
jbe
outsb
xchg
cmpsl
add
shl
push
rcll
and
fisttpll
cmp
inc
in
adc
fdivs
mov
arpl
sub
pop
sub
out
mov
jb
call
lret
psrad
sub
or
repz
icebp
adc
dec
cmpsl
adc
mov
stos
sub
sub
mov
push
nop
xchg
outsb
adcb
adc
sbb
and
orl
lcall
pop
dec
pop
call
pop
dec
test
pop
mov
es
mov
dec
xchg
inc
outsl
testl
or
push
rcrl
sub
iret
dec
imul
test
loopne
xchg
jg
ja
dec
dec
jo
das
inc
push
dec
push
dec
loopne
roll
movsb
mov
cwtl
loop
mov
pop
xchg
pop
jb
xor
jle
lods
js
sbb
jnp
scas
jae
cmpsl
fisubrs
sub
mov
inc
jns
sbb
les
mov
test
dec
ja
dec
inc
leave
and
dec
lods
xchg
mov
je
orl
mov
and
cld
mov
out
stc
icebp
xchg
gs
pusha
cmp
mov
test
xchg
adc
iret
lds
lods
mov
divb
arpl
lret
or
test
les
jg
jmp
ficoms
lahf
mull
mov
push
out
roll
cltd
xor
mov
dec
jbe
and
jmp
hlt
dec
mov
pusha
xor
test
push
add
push
push
fnstsw
out
lret
dec
nop
and
test
add
adc
pop
mov
arpl
gs
das
scas
in
and
push
ror
lods
ljmp
mov
sbb
push
push
jne
inc
add
ret
pop
pop
cwtl
fdivs
into
or
decb
daa
rorl
mov
mov
lods
inc
xlat
rcll
cmp
shrb
cmpb
faddp
mov
call
and
jecxz
shrl
xor
push
daa
mov
cmp
pushf
inc
mov
loope
and
inc
icebp
call
fld
add
sbb
or
and
popa
movsb
test
mov
adc
inc
imul
std
in
push
sbb
xor
xor
push
add
testb
inc
adc
dec
sbb
es
inc
mov
dec
les
dec
push
outsb
or
stos
aad
flds
xchg
sbb
jg
ret
sub
scas
aad
daa
outsb
pop
and
pop
mov
sarl
or
jl
and
stos
rep
rol
pop
inc
add
sub
daa
js
jae
cwtl
jp
loope
lods
add
mov
lcall
test
cmp
fcompl
push
xchg
stos
imul
out
mov
pop
mov
mov
cwtl
fistps
xor
push
std
pop
out
add
or
push
dec
pop
leave
imul
cs
inc
jmp
lods
outsb
and
cmp
dec
out
loop
int
das
addr16
fwait
dec
or
xor
fistpl
xchg
jns
dec
fldt
push
xchg
jns
sti
mov
call
push
adc
fwait
xchg
popa
mov
xchg
inc
repnz
lea
clc
push
jg
or
mov
scas
fcoms
in
jns
test
fcoms
jnp
lds
mov
test
or
aaa
pop
pop
sbb
lds
adc
jbe
imul
cmc
add
shll
ds
adc
adc
jl
sbbl
scas
das
imul
je
pushf
mov
cld
repnz
inc
pop
fdivl
adc
push
sti
aad
mov
das
imul
orl
mov
enter
bound
xor
jae
pushf
sub
rorb
mov
stc
mov
rcrl
and
mov
aas
adc
test
rorb
mov
inc
xlat
test
hlt
ds
xorb
sbb
jmp
sbb
jb
fs
lods
xlat
pusha
popf
cmpsb
jl
cmp
insl
push
mov
cmpsl
add
add
dec
cmc
leave
jo
cmc
cld
ret
mov
scas
daa
mov
sub
das
jle
in
jle
jno
stos
adc
add
ds
cwtl
fldlg2
push
and
push
dec
jo
and
cmpsl
and
lret
cmc
mov
mov
jp
pop
in
mov
mov
dec
mov
popf
loope
xor
outsb
std
scas
lret
outsb
movsb
pusha
adc
lret
jbe
gs
jno
mov
push
bound
push
jbe
gs
shll
hlt
rclb
lods
enter
xor
sarl
in
and
xchg
inc
and
dec
xorl
rcll
pop
jne
test
je
pop
adc
ss
aaa
into
adc
mov
ja
push
pop
push
xor
jg
imul
jbe
in
xor
in
in
adc
imul
scas
imul
insb
mov
fcoml
sbb
out
cmp
pusha
lret
sub
sub
sub
std
lods
add
insb
std
dec
jb
pushl
shl
shrb
dec
pop
mov
sbb
jo
or
hlt
nop
push
mov
jae
xor
dec
aam
inc
jecxz
pop
cmp
lret
negl
xorps
push
or
jl
into
out
pop
mov
imul
mov
fisubl
iret
fwait
loope
cmpsb
popf
dec
cli
push
cmpsb
mov
sti
mov
sarl
sbb
mov
mov
gs
and
pop
xor
sarl
imul
mov
xchg
clc
ja
movsb
mov
stc
loope
xchg
push
leave
mov
cmp
push
push
cwtl
int3
cmpsl
mov
aad
mov
sahf
cmp
lods
jne
je
stos
adc
sub
pop
push
inc
mov
sub
shrl
adc
lods
stos
dec
inc
cmp
popf
push
sbb
or
rcl
iret
add
push
testb
pop
test
sarl
pop
add
ljmp
jns
dec
jp
ja
add
xchg
mov
aaa
aas
insb
dec
in
xor
xor
pushf
test
mov
fiadds
movsl
pop
push
sbb
cmpsb
fs
adc
test
jle
sbb
test
int
xchg
bound
pop
xor
mov
insb
pop
mov
push
lock
xor
ja
inc
or
cmp
mov
jmp
scas
adc
ljmpw
daa
xor
xchg
cmpsl
addr16
sbb
mov
push
test
fwait
int3
xchg
pop
imul
loope
movsl
xor
xchg
cmp
call
add
mov
mov
rorb
call
sub
addr16
push
les
pop
aas
das
gs
jnp
push
mov
sbbl
mov
mov
jne
cli
imul
lahf
dec
push
xchg
out
inc
push
imul
xor
rorl
in
push
loop
lea
fldl
or
mov
dec
std
xor
adc
lods
add
xor
iret
stos
jg
sbb
mov
jl
shrl
loopne
dec
and
cmc
lods
mov
pop
and
movsl
idiv
clc
inc
bound
pop
push
std
pusha
add
iret
aas
mov
or
in
movsb
fmull
es
xchg
lock
mov
pop
ds
rorl
lods
and
fidivl
or
pop
rcrb
xchg
fisttpl
ret
fcmovne
sbbl
cmp
arpl
xor
xor
lods
das
lds
push
xor
jg
test
jns
pop
xor
dec
pushf
mov
lahf
push
dec
add
mov
aas
cmovge
inc
sub
icebp
insb
shrl
pop
out
loopne
mov
adc
jo
or
push
test
cmp
lret
mov
pop
rol
cmc
int
and
fimuls
fmuls
int
mov
outsb
pop
push
repnz
xchg
je
adc
mov
das
scas
ror
adc
ljmp
xchg
dec
pusha
jae
sbb
adcl
orl
inc
sbb
loop
xchg
stc
xor
mov
mov
ljmp
mov
xor
jle
test
cmpsl
out
xchg
jmp
cmp
xor
popl
xlat
and
dec
mov
pop
dec
inc
xor
jecxz
push
mov
cmp
cli
rcrb
bound
fcomps
mov
xor
dec
push
pop
fstps
mov
lret
jecxz
jne
dec
xor
aaa
ficoml
hlt
scas
adc
into
fmuls
sti
add
pop
cmp
icebp
jns
repnz
cmpsb
int3
les
xchg
mov
adc
fstpl
popa
lret
movsb
mov
inc
xor
inc
and
adc
lods
xchg
cmp
xor
mov
sahf
shl
pop
mov
xlat
xor
fbstp
dec
pop
outsl
roll
or
jecxz
fs
sub
in
mov
sti
or
in
pushl
jo
loopne
cmpsb
adc
inc
lods
add
rol
daa
shrb
sahf
cmc
nop
and
jmp
pop
ja
int
sub
testb
xchg
lds
add
pushf
aas
xor
mov
call
mov
bswap
pop
in
je
lea
adc
clc
shr
in
add
jle
lahf
cwtl
sti
lods
outsl
xor
outsl
js
je
mov
cmp
inc
idivb
push
jg
dec
adc
sub
pop
mov
inc
sbb
adc
xchg
imul
pop
adc
inc
and
or
ror
nop
outsl
adc
test
rorb
movsl
cli
inc
dec
jne
and
mov
sbb
cmp
mov
iret
mov
xlat
pop
mov
inc
jmp
movl
adc
adcl
mov
xor
stos
mov
pop
inc
lock
repz
rcrl
mov
mov
xor
xchg
dec
int3
js
mov
jmp
mov
scas
xlat
adc
cmp
pop
mov
push
pop
jg
cmpsb
pop
sub
push
pop
cmpsb
inc
and
out
jnp
mov
inc
xchg
xlat
fidivrs
jo
mov
in
rcll
and
out
out
fisubs
rorb
xor
rcl
lds
fisttpl
es
add
ret
loop
shll
mov
sti
mov
jge
dec
aam
in
aas
mov
mov
in
insb
nop
push
shl
stos
lods
flds
cmpsb
lods
decl
cwtl
mov
push
xor
jo
mov
push
mov
inc
mov
and
insl
pop
loopne
dec
cltd
mov
ss
inc
mov
negb
addr16
xor
outsb
add
and
nop
push
jle
xchg
ja
xorb
pop
and
mov
faddp
add
lret
add
mov
adc
jae
jp
push
inc
out
push
inc
ret
push
dec
scas
dec
ss
fbstp
movsl
scas
xchg
ficompl
enter
mov
orl
aam
inc
cmp
mov
sub
xchg
ficomps
pop
lea
mov
xchg
mov
fdivr
pushf
pop
mov
inc
hlt
cmpsl
push
aad
rcrb
jbe
pop
mov
push
ja
or
jge
imul
mov
jnp
cwtl
in
sbb
mov
sti
rcr
fbstp
das
xchg
hlt
cmpb
dec
adc
jae
adcb
cmp
sub
adc
cmp
es
mov
stc
xchg
pop
sbb
push
mov
cmp
insl
repz
mov
outsl
or
mov
rcr
cmp
loopne
cli
xchg
adc
jmp
dec
mov
or
jl
movzwl
adc
dec
lahf
cmpsl
jbe
jg
out
mov
xchg
pop
mov
test
mov
gs
repz
add
push
or
pop
dec
js
jns
hlt
xchg
push
sub
add
and
add
js
jno
insb
rcrl
je
fcmovnbe
mov
je
adc
xlat
out
enter
push
push
push
mov
push
mov
test
jl,pn
je
jns
decb
test
lds
aas
push
mov
sub
xor
mov
pop
inc
cmpsl
test
jae
pop
test
insl
sti
inc
notb
and
sub
lcall
and
push
adcb
repz
pop
mov
testl
push
sahf
scas
fsubrs
cmpb
xchg
loope
mov
push
arpl
mov
leave
mov
or
mov
aaa
jle
je
hlt
arpl
je
dec
ljmp
sub
add
adc
fists
and
sbb
push
pop
lods
pop
push
cmpsb
cwtl
je
mov
push
nop
mov
push
adc
lret
cmp
loopne
sarl
mov
mov
lret
xchg
or
daa
jle
repz
fnstenv
fdiv
lods
mov
sbb
push
cmp
call
push
add
ja,pn
inc
xchg
call
shrb
je
push
popa
enter
inc
inc
cli
add
sub
outsl
scas
fbld
sub
es
xlat
jp
lock
stos
fisttpll
mov
outsb
jne
ljmp
or
add
adc
imul
adc
popf
add
cmpsb
in
pop
js
fimuls
gs
inc
jmp
in
push
stos
loopne
jmp
lea
in
cmpsl
mov
adc
push
add
jb
insb
cmc
jb
out
rcrl
adcl
int
cltd
cmpsl
or
sbb
cmpsl
cmp
int
data16
xchg
data16
stos
mov
mov
cmp
ret
xorb
fadds
test
dec
add
bound
shrl
add
ret
push
shr
xor
mov
jb
xor
xor
test
pop
lahf
addr16
arpl
insl
imul
mov
lcall
add
jecxz,pt
test
push
mov
jae
xchg
enter
and
inc
jge
lock
stos
lods
leave
sbb
mov
divl
call
pop
xchg
mov
in
daa
inc
std
push
popf
adc
push
fdivrl
xchg
push
fcmovnb
pusha
sahf
xchg
and
movsl
push
adc
jmp
jae
test
sub
stos
into
loopne
testl
out
fs
stos
in
es
insl
pop
lea
or
adc
stc
add
imul
jl
mov
lcall
sbb
push
pop
aaa
popf
mov
jp
lods
orb
iret
ret
test
pop
test
push
sbb
mov
add
scas
fdivr
adc
fisttps
push
in
shrb
cs
jl
sbb
push
ret
test
cwtl
inc
or
mov
jmp
pop
addb
cmp
lret
xor
jle
lret
xor
lea
dec
sbb
nop
rorl
xor
pop
mov
lds
inc
ficoms
nop
test
mov
pand
sbb
cmp
xchg
punpckldq
adc
sarl
test
xlat
xor
pop
sahf
add
pop
inc
or
mov
mov
adc
lea
pop
mov
mov
xor
ret
push
test
in
movsb
push
aaa
stc
loopne
inc
hlt
mov
dec
pushf
sub
xchg
sub
popa
call
lock
mov
into
in
sub
xchg
push
adc
addr16
cwtl
or
mov
xorl
mov
cmp
xor
or
xchg
pop
outsl
fwait
mov
rcrl
divb
xchg
divl
pusha
cmp
ja
and
pop
jecxz
sbb
mov
mov
es
outsb
push
das
fisubs
adc
push
gs
adc
lcall
lods
dec
filds
mov
push
ret
add
mov
stos
popl
stos
dec
mov
leave
dec
adc
add
pop
sub
shrb
push
pop
sbb
mov
and
mov
mov
jle
dec
stos
jle
scas
ret
lods
lods
outsb
dec
movsb
cmp
mov
sarb
add
paddb
sbb
mov
inc
jno
lret
add
jp
jmp
ret
jl
cmpsl
lea
cmp
movsb
fimuls
in
mov
shrb
lock
xchg
sarb
ljmp
mov
jp
push
lret
jle
cmp
lock
stc
in
out
push
jbe
imul
repnz
dec
out
sbb
fiadds
sub
fucomi
insl
sub
insl
mov
xor
stos
test
inc
dec
xlat
dec
cli
jno
xor
outsl
xor
cmp
popa
lods
movsl
xchg
shrb
mov
fidivs
push
lcall
bnd
inc
sub
dec
mov
frstor
divb
dec
stos
lea
andb
pushf
ljmp
dec
pop
bound
pop
mov
dec
ret
lock
fs
jl
out
add
dec
adcl
adc
add
pop
sbb
gs
cmp
movnti
test
pop
add
pop
ror
inc
ffree
mov
jp
out
insb
ret
loopne
mov
adc
xchg
push
popf
and
int
lods
aam
aad
gs
inc
dec
aam
and
mov
sti
jmp
decl
mul
outsb
push
int3
aaa
in
fildll
mov
sub
inc
push
scas
xchg
cmp
stc
mov
fadds
vfrczsd
jns
rcrl
test
into
movsl
xchg
movsl
cmp
imul
mov
jne
mov
or
ja
jl
in
xor
pop
shrl
xchg
fadds
xlat
mov
mov
mov
mov
in
add
aas
or
pop
repnz
jp
fimuls
out
jp
inc
xor
mov
sub
insl
jp
push
scas
ljmp
roll
pop
xor
jne
test
mov
loope
mov
test
fldenv
cmp
mov
fbstp
imul
fs
xor
cli
or
mov
dec
scas
jnp
ret
out
test
fisttpl
mov
lret
add
cwtl
mov
push
xchg
andl
sbb
addr16
pop
adc
ss
adc
push
les
dec
xor
or
imull
scas
dec
add
negb
test
repnz
out
xor
outsl
pusha
xchg
sub
jnp
incb
push
sbb
xchg
cmp
push
push
add
aas
stos
pop
xor
ljmp
pop
out
inc
in
push
cs
sub
jge
xor
jae
jecxz
push
idivb
addr16
into
mov
popa
cs
fstps
and
imul
das
adc
mov
ss
ficoms
mov
cmp
repz
or
or
and
cltd
jmp
jno
sbb
or
mov
subb
mov
sub
cmp
and
in
xor
ret
in
adc
call
xor
or
test
arpl
dec
jge
fisubrl
mov
lock
insb
adc
fdivrl
ljmp
fdivrs
xchg
movsl
dec
into
xchg
cmp
xlat
push
cmpsb
jae
adc
xchg
cltd
xchg
mov
jbe
xchg
divl
fwait
cmp
mov
inc
shll
push
inc
jl,pn
out
push
add
cmp
data16
js
aam
pop
xor
inc
icebp
fistpl
insl
insb
into
ss
inc
call
push
jl
sub
dec
movsw
imul
dec
push
and
cmc
filds
mov
adc
and
jg
into
rorb
shl
js
in
jne
add
insl
cs
addr16
add
addb
cmpsb
mov
icebp
jp
mov
js
push
ja,pn
aam
add
jge
repz
daa
lea
lcall
jbe
jb
or
add
lcall
xchg
dec
xor
pusha
pop
ds
inc
arpl
shrl
in
dec
lcall
fisttpll
or
or
mov
or
in
rorb
xchg
jo
sub
pop
inc
jne
sbb
mov
cmp
rorb
mov
xchg
sahf
lret
lret
jle
inc
push
cmp
mov
das
mov
repz
std
inc
lods
outsl
scas
lcall
push
aas
je
xchg
mov
dec
andb
add
xchg
jmp
rorl
lahf
out
jp
dec
jg
mov
movsl
push
cmpl
mov
mov
nop
cli
fwait
xchg
aad
cmp
std
sbb
cmp
push
outsl
jne
cmpsl
mov
enter
aam
fidivrl
pop
adc
mov
push
pop
xchg
cmp
js
rcrb
mov
jmp
inc
mov
out
inc
cmpsb
test
pop
fldenv
xchg
hlt
mov
adc
lret
cld
out
pushf
arpl
jno
roll
inc
ret
rorl
shlb
pop
mov
lret
add
repz
mov
pusha
push
and
mov
je
fistps
in
roll
loope
out
xor
or
cmp
jbe
clc
lods
sbb
cmp
outsb
stc
mov
fnstsw
xchg
bound
std
and
mov
cs
cld
adc
jo
and
fdivs
outsb
push
mov
xchg
cmp
cmp
addr16
pop
jae
dec
dec
inc
int
inc
add
pushf
mov
addr16
cwtl
pop
jecxz
and
or
sbb
lahf
dec
add
mov
push
cmp
dec
xchg
xchg
xlat
mov
inc
es
cmp
imul
jge
add
js
sbb
dec
xchg
cld
push
jl
out
dec
or
mov
pop
in
xchg
fistpl
mov
fdivl
and
std
or
xor
inc
sbb
out
mov
push
lods
out
mov
xchg
add
sbb
cltd
movsb
sbb
out
out
in
mov
cmc
popf
cmc
mov
into
push
ja
cmpsl
nop
dec
movsb
mov
jno
cmp
sub
shld
js
jno
inc
cmpsb
mov
jns
pusha
push
addr16
dec
add
loope
mov
push
mov
popa
outsl
mov
daa
rol
std
stos
clc
xchg
daa
dec
aas
sbb
push
scas
bnd
fbld
dec
inc
aam
xchg
push
add
inc
pop
adc
insl
popl
xchg
lds
fldcw
hlt
shlb
fcmovnu
mov
sti
inc
stc
data16
push
repz
adc
std
xchg
pop
js
cmp
xor
cmpsl
and
mov
rcr
cltd
push
outsl
and
pushf
inc
fisubl
daa
inc
mov
clc
inc
mov
push
mov
aad
jbe
aas
xor
jl
scas
ja
mov
pop
fcmovnb
lret
add
cmpsl
or
cwtl
sbb
push
xchg
inc
ss
aaa
sub
sahf
in
mov
imul
cli
insl
inc
xchg
je
push
cmp
cmp
mov
sbb
roll
inc
xchg
or
cmpsl
enter
push
dec
inc
dec
xor
insb
aas
push
fidivrl
inc
jecxz
pop
xor
mov
mov
jnp
shll
pop
fwait
push
cmpsl
popf
pushf
shrb
dec
sub
loope
jg
outsl
lret
iret
push
and
sub
adcl
insl
lds
mov
jno,pn
outsl
xchg
add
lods
mov
pop
call
sti
inc
jb
jle
into
addr16
sbb
iret
leave
aam
push
xchg
push
mov
pushf
jmp
xchg
imul
push
fnstsw
loop
dec
push
jp
add
xlat
dec
jnp
xor
xor
mov
ret
out
int
loopne
out
nop
push
add
stos
lods
push
nop
dec
int
cmpsb
or
data16
cli
add
add
testb
mov
or
push
lods
test
enter
sub
xchg
cmpl
pop
je
in
inc
rcl
mov
das
and
pop
mov
xchg
pop
sbb
sub
fidivl
inc
insl
xchg
sbb
dec
jmp
jl
and
cmp
jmp
push
cmpsb
sub
inc
adc
test
adc
add
andb
dec
inc
cmpsl
mov
jo
cmp
and
sbb
xchg
scas
or
lods
xchg
scas
mov
cwtl
sti
int
ret
in
jmp
cld
mov
jns
mull
pop
shlb
cmp
in
mov
fildl
out
test
jb
lea
push
push
test
rorl
mov
push
in
and
dec
dec
sbb
pop
adc
lret
push
movsb
cwtl
mov
repz
push
mov
lahf
es
inc
dec
fadds
movzwl
fstpl
mov
clc
stc
imul
arpl
int3
mov
stc
push
sarl
sbb
nop
lahf
fsubrs
ja
jno
pop
mov
inc
out
xchg
cmpsl
in
sub
xor
subb
jnp
sbb
or
lds
pop
arpl
out
sti
out
sti
adc
cmc
adc
aaa
fisttps
add
inc
outsl
clc
inc
pop
dec
mov
inc
and
sub
sub
or
ja
jne
push
jecxz
and
bound
mov
sub
pop
lahf
push
push
add
or
cmp
inc
cmp
pop
insb
pop
stc
and
lcall
stos
mov
imul
sub
cmp
adc
fstps
mov
or
push
add
icebp
cs
push
sbb
pop
popf
sahf
lahf
inc
rcrb
pop
int
push
mov
xlat
ficoms
pop
xorl
lahf
cmp
dec
fmuls
xchg
ds
dec
inc
mov
dec
jp
ds
sub
lcall
fidivl
cmpsl
jecxz
xchg
mov
pusha
jns
stos
andl
jns
test
ficomps
or
mov
cmp
and
fs
xchg
mov
mov
jns
mov
pop
cmc
fisubrl
adc
test
pop
dec
in
inc
loope
mov
les
nop
xchg
xchg
notl
mov
xchg
and
jne
or
fwait
insl
xchg
cltd
jbe
ljmp
in
orl
shrl
mov
push
lcall
fmuls
add
cld
mov
stos
jp
and
movhps
jnp
inc
adc
das
push
mov
and
mov
mov
push
lret
fistpl
cmp
cmp
cmp
push
js
jne
jl
in
movswl
pop
push
inc
inc
xchg
mov
cmc
mov
inc
pop
in
dec
fcomi
cli
test
jmp
xor
ja
stos
out
and
lods
lret
jle
bound
dec
inc
push
lahf
js
xchg
mov
sub
addr16
jnp
fcmovnu
fs
sbb
sbb
mov
xchg
sbb
cld
xor
pusha
fnstsw
lock
jo
inc
rcr
lahf
jmp
dec
sahf
icebp
subl
gs
ljmp
out
mov
or
cltd
shll
sub
pop
sbb
cli
and
repz
pop
add
pop
cmp
test
add
sarl
mov
cwtl
int3
cmp
shlb
cltd
inc
data16
es
ljmp
xor
in
icebp
xchg
mov
mov
test
add
fcomip
add
hlt
mov
lock
or
push
xchg
sub
sahf
or
sbb
add
lds
gs
iret
mov
jno
cmpsl
hlt
sbb
in
fisttpl
clc
mov
dec
arpl
movsl
jmp
sbb
outsl
cli
in
push
sbb
and
shrb
dec
repz
insl
adcb
cmp
fmull
lahf
sub
movsl
add
xchg
cmpsl
fidivs
std
lret
sbb
cmpl
cmpsl
or
mov
xchg
sbb
aam
mov
jecxz
xchg
cmp
js
pop
cwtl
xchg
mov
lret
or
in
jne
std
mov
xchg
out
cmp
and
push
xor
mov
arpl
sbb
jne
mov
in
mov
loop
mov
sbb
lcall
lahf
dec
sbb
or
xchg
cmp
scas
push
mov
mov
shlb
mov
jg
inc
test
adcb
pop
out
push
lahf
sbb
jmp
push
pop
shlb
iret
andb
jge
aam
dec
xor
mov
popf
out
push
xchg
std
sub
add
out
jge
sub
pop
jno
cmpsl
mov
add
cmpsl
or
ror
je
mov
push
int
jg
sbb
add
mov
push
xchg
aam
mov
sbb
or
pop
out
leave
ficoml
jmp
in
test
pop
jnp
in
adc
fisttpl
mov
sub
sub
shr
fisubl
int
fsubrs
add
jl
mulb
xchg
sbb
sti
push
shrb
mov
cld
fistl
or
push
fisubs
in
aad
lahf
sub
pop
int3
sbb
jo
sbb
cmp
stc
sub
or
adc
jl
or
mov
cmc
scas
add
das
jns
mov
xlat
mov
and
shll
insl
mov
mov
cmp
jl
rcrl
add
fs
and
ja
or
fimull
push
stos
rcr
sub
sbb
pop
xchg
pop
and
and
cmp
xchg
dec
fcmovnb
arpl
pop
insb
mov
fwait
ret
mov
test
xchg
xchg
les
pop
fucomp
out
mov
push
dec
adc
pop
idivb
dec
addr16
sub
pop
lcall
inc
dec
jne
xchg
inc
xor
loopne
bnd
movsl
nop
pushf
jb
sub
sbb
lds
sub
sahf
nop
mov
push
mov
pop
dec
call
inc
or
sahf
rcll
dec
stc
add
in
jge
punpcklbw
imul
inc
push
scas
mov
imul
mov
setl
icebp
iret
iret
sub
dec
jae
dec
lods
jns
sbb
pop
ret
mov
xchg
mov
sub
cmp
xor
out
jne
inc
std
or
jne
add
xor
dec
in
adcb
push
push
mov
sbb
mov
or
cld
ljmp
push
or
pop
and
sub
inc
inc
sbb
fsub
xchg
addb
fs
cmp
dec
cmp
xor
fiaddl
sbb
ja
adc
sub
mov
enter
sub
lea
jne
xor
cmpsl
pop
push
lcall
nop
ret
mov
fst
jbe
xor
fists
mov
jae
clc
test
mov
cs
dec
testb
jb
push
pop
xchg
imul
mov
lods
test
loopne
jne
mov
jae
sbb
jns
dec
xor
mov
mov
inc
nop
pop
pop
cli
inc
or
mov
pop
cltd
nop
lahf
jle
jecxz
push
nop
jbe
imul
or
ret
or
adc
dec
jb
xchg
stos
jmp
xchg
cmc
dec
mov
add
dec
stos
jns
inc
popf
mov
push
adcl
movsl
sbb
dec
int3
inc
push
push
xor
pand
cmc
cmp
stc
ds
ss
test
mov
dec
inc
sbb
adc
push
sbb
mov
hlt
mov
in
jge
je
push
cmp
aad
sahf
dec
sbb
lea
stos
nop
cld
sbb
mov
test
ljmp
ret
adc
xchg
mov
jmp
jne
out
cmp
adc
sub
out
nop
ss
and
cmovs
mov
mov
add
push
dec
orl
popf
adc
or
lcall
or
arpl
push
je
fidivl
popa
adc
fdivr
pop
cmpsb
sub
scas
xchg
mov
mov
jecxz
cmp
mov
mov
inc
adc
push
xchg
jno
aaa
mov
cmp
leave
jnp
jle
mov
jns
jg
pop
std
cmp
test
push
xor
dec
add
xchg
or
push
gs
sbb
sbb
ss
jge
outsb
aaa
loopne
cmpsb
aas
inc
or
jb
adc
nop
lret
pop
xchg
mov
scas
xor
jbe
mov
cmp
fld
adc
lret
lods
andl
jmp
rcr
repz
pusha
std
mov
cmpsb
xchg
adcl
jbe
xchg
jne
outsb
movl
pop
mov
xchg
cmc
sbb
dec
movsb
fidivl
arpl
insb
jne
sub
sbb
rorl
or
mov
popf
pushf
movsl
cmpsl
movsl
stos
add
gs
jmp
test
rclb
lret
aam
or
pop
popa
adc
test
ja
mov
cld
pop
push
pop
push
xchg
repnz
aad
dec
sbb
cltd
mov
fcom
mov
ds
aaa
mov
mov
jecxz
mov
jnp
inc
sbb
lock
loopne
xlat
adcl
or
mov
inc
out
xchg
rcrb
cmpsl
movsl
inc
out
es
pop
mov
ret
mov
lea
lock
lcall
mov
and
jns
sbb
rclb
xchg
fidivs
sahf
sbb
jns
sti
icebp
pushf
or
mov
inc
popf
test
test
pop
mov
out
cli
sbb
push
out
xchg
push
idiv
loop
popf
xor
cltd
xor
ds
nop
cmp
mov
dec
inc
add
inc
push
add
mov
stos
call
or
dec
mov
dec
jne,pn
xor
into
cmp
sub
mov
imul
push
lock
call
fsub
dec
cmp
lods
mov
mov
std
mov
and
shrb
cwtl
in
test
hlt
insb
push
mov
cmc
jmp
cmpsl
sub
push
add
inc
pop
stos
pop
out
mov
mov
pop
xor
subl
dec
xchg
ss
inc
mov
cmp
and
push
xchg
sub
sub
push
lahf
jp
pop
lods
inc
fdivl
xlat
and
outsl
pushf
lret
xor
sbb
push
or
nop
lds
xor
lock
roll
cmp
pop
repnz
vpsubsb
mov
xor
adc
xlat
or
out
in
pop
xor
jnp
insb
orb
push
sbb
cmpsl
mov
ret
ror
fidivl
add
imul
dec
jge
xchg
pop
lock
mov
mov
adc
lret
sti
push
mov
push
sub
add
stos
aaa
jmp
lret
jmp
sub
lock
out
fstpl
daa
icebp
in
xchg
mov
js
loope
mov
sub
dec
aad
mov
sub
or
xor
mov
addr16
mov
aas
scas
inc
or
mov
stos
scas
loopne
adc
mov
cmp
mov
nop
add
in
lcall
push
cli
or
cmp
ja
icebp
subl
and
fisubl
in
push
mov
aas
into
adc
ja
imul
ficoms
jge
rorb
out
mov
pop
adc
cmp
aad
sbb
pusha
outsb
adc
sub
push
mov
mov
pop
sbb
js
cli
push
hlt
ja
mov
aad
ficoms
jle
imul
int
and
cmp
data16
das
cmc
out
test
dec
jne
jmp
pop
dec
push
mov
xor
pop
pop
insl
inc
outsb
loopne
sub
icebp
cmpsl
push
push
xor
lds
push
jecxz
aas
js
mov
push
sbbb
test
add
jns
jae
icebp
pop
in
dec
lds
std
cmp
js
test
and
cmp
adc
mov
int
fistpl
or
orb
xor
mov
cmc
call
sub
icebp
jns
dec
xchg
arpl
rcrl
call
icebp
ret
mov
sahf
dec
dec
adc
and
fsubrp
cmpsl
jb
outsb
inc
or
ret
adc
jl
xchg
std
stc
scas
mov
cmp
pop
dec
fs
insb
adc
loope
pop
fbld
ret
xchg
inc
iret
adc
sub
mov
lea
outsb
aad
cs
je
mov
nop
and
adc
xchg
lds
push
lds
test
ja
mov
mov
popf
out
aas
and
std
mov
loope
xor
pop
or
in
lods
jns
mov
mov
es
bound
cwtl
nop
mov
inc
sub
pop
bound
aam
or
hlt
repz
stos
sub
movsb
ss
inc
jg
int
out
cltd
je
xor
and
pop
rorl
inc
mov
scas
pop
cmp
add
fimuls
outsl
mov
outsl
add
int
stc
inc
in
outsl
dec
out
cld
test
lods
mul
inc
stos
jmp
lods
jae
hlt
setle
mov
in
push
pop
mov
push
jbe
fcoms
jmp
jle
dec
mov
aad
mov
cmpsl
dec
inc
rorl
clc
cs
outsl
cltd
add
loope
icebp
cmc
cld
jp
test
add
xchg
out
imul
movsl
or
scas
aaa
adc
stc
xchg
in
sbb
movsl
in
scas
or
mov
push
and
mov
cmp
sahf
xchg
add
push
icebp
dec
sbb
out
insl
jmp
cmp
into
mov
lea
cmp
mov
lahf
inc
movsb
mov
cmpsb
or
aas
push
fneni(8087
fbld
stc
inc
xlat
and
mov
push
pop
push
cs
sbb
xor
inc
out
and
mov
addr16
and
mov
fdiv
ds
xchg
mov
insl
xor
sar
dec
mov
ljmp
cmp
enter
lods
xor
jp
sbb
shl
test
cmp
or
pop
lret
xlat
xchg
pop
mov
cmc
fisubrs
mov
cltd
add
je
pushf
repnz
sarl
rcll
xchg
mov
fisttpll
jge
in
xchg
jnp
pop
add
pop
je
push
in
dec
xor
fcomps
ret
movsl
sub
inc
xor
insb
jge
pop
pop
fidivrs
shl
inc
pop
and
leave
xchg
add
loopne
mov
cmp
fwait
decl
inc
imul
shrl
in
push
ss
push
insb
enter
xor
pop
pop
xchg
mov
mov
xorb
pop
sbb
lahf
jo
xchg
outsb
scas
in
mov
insl
movsb
aam
mov
mov
test
adcl
repnz
xchg
aas
mov
sti
es
pusha
loopne
xchg
rcr
xor
and
inc
and
push
mov
pop
push
push
dec
mov
pop
fcompp
add
jg
mov
mov
and
loope
sbb
jle
push
inc
sbb
or
loopne
push
mov
or
or
push
frstor
sub
xchg
xchg
fwait
test
adc
xlat
xchg
cli
pop
test
xchg
les
xchg
outsb
int
cmp
mov
jnp
sbb
or
mov
add
out
lods
shll
call
mov
xorb
and
sbb
lods
sti
imull
and
ret
mov
pushf
shr
es
and
fs
inc
add
cmp
mov
int
fsubrs
or
xchg
out
test
addr16
outsb
mov
int
shrl
add
dec
xor
fstp
dec
jno
addb
mov
test
push
inc
stc
test
cmc
push
test
shlb
insb
add
mov
es
and
cwtl
ja
mov
sbb
inc
hlt
test
inc
shll
sarl
negb
jb
xlat
lret
cmp
or
jge
mov
pusha
xchg
xor
gs
inc
cs
dec
jbe,pt
mov
add
ss
mov
mov
and
cmc
push
loopne
pop
in
bound
stos
push
popf
sbb
or
push
shl
aaa
aas
nop
cs
adc
jge
loopne
or
sti
test
add
mov
scas
dec
subl
pop
addr16
adc
jnp
sahf
out
ja
popa
clc
sub
pop
adc
fsubp
shlb
and
lods
lcall
mov
xor
push
mov
stos
aad
repz
xchg
xchg
lret
mov
cmp
int
push
pop
push
test
test
inc
jne
mov
in
sar
in
ret
repz
lret
mov
dec
inc
add
pop
sahf
cmp
bound
insb
adc
das
imull
push
mov
xor
inc
inc
cli
jns
movsb
push
cld
dec
cmp
pop
out
push
sub
fidivs
addl
sbb
mov
adc
cmc
iret
outsl
aas
adc
iret
call
xor
pop
std
popf
jnp
xchg
pop
sbb
lret
sub
bound
adc
inc
call
push
popa
cli
dec
pop
add
ret
test
and
jg
mov
push
fidivrs
cmp
jmp
fcoms
fsubp
inc
out
and
xchg
popa
mov
push
mov
aam
dec
pop
dec
xor
imul
or
js
push
add
not
test
movsb
testb
and
addr16
fnstcw
in
dec
xchg
inc
pop
sbb
ret
ret
ret
ror
adc
data16
jns
mov
mov
xchg
adc
pop
call
pop
shrl
sbb
inc
sub
out
mov
loop
sbb
int3
inc
mov
faddp
je
cmpsb
mov
push
js
clc
or
jbe
bnd
pop
icebp
add
daa
insl
pop
mul
add
jns
cmc
int3
mov
pop
aam
mov
xchg
test
inc
add
xlat
dec
adc
adc
push
popa
int
lods
jp
mov
neg
or
cmp
frstor
sbb
jae
xchg
lret
je
int3
int3
jnp
out
test
call
movsb
nop
or
or
fucomip
xlat
pop
xorl
inc
sbb
adc
xor
jne
xchg
loop
fs
pop
leave
dec
push
cltd
in
fimuls
mov
or
push
jp
cli
xor
inc
add
mov
xor
xchg
mov
imul
mov
push
push
jo
and
lds
pop
xor
sbb
scas
ja
mov
fwait
mov
imul
sbb
inc
xchg
sti
jns
mov
les
pop
insl
mov
std
cwtl
sub
fcoms
data16
pushf
loopne
call
cmp
movsl
mov
ret
mov
mov
xorb
imul
out
lret
imul
add
adc
int3
sub
inc
sub
repz
xlat
rolb
shl
je
sub
test
inc
add
test
fadds
pop
in
mov
fwait
add
push
inc
mov
pop
ja
add
xchg
jns
pop
dec
insl
inc
lea
sbb
mov
cld
mov
and
lcall
or
mov
or
daa
xor
in
fsubl
fnstcw
push
cmp
sbb
mov
test
shlb
xchg
jg
push
mov
inc
icebp
popf
push
mov
push
imul
loopne
mov
add
in
fdivs
in
frstor
das
add
shrb
or
pop
cmpsb
pop
sbb
repnz
dec
fwait
push
mov
add
cli
popa
out
arpl
or
stc
add
sahf
inc
adc
jge
sbb
iret
cli
mov
mov
jo
or
dec
mov
sub
push
xchg
add
iret
xor
jmp
and
sub
incb
ds
push
mov
fldt
dec
and
xchg
insl
mov
sub
mov
mov
jo
mov
test
loopne
cwtl
mov
scas
cmc
and
push
sbb
jo
lret
shll
mov
lock
jp
in
xor
cmp
aad
cmp
out
cmpsl
xor
or
lcall
mov
adc
mov
jbe
pop
cmp
cltd
cmp
ret
je
loope
lods
mov
popa
stos
cmc
fcoml
test
cs
and
jns
and
push
out
xchg
iret
std
dec
call
sbb
int
cmc
into
mov
addr16
iret
hlt
adc
xchg
fistpl
jo
mov
adc
fistps
add
std
mov
out
movsb
pop
fstl
cltd
or
rcrl
mov
jg
xlat
and
iret
outsb
push
es
lods
sub
dec
jb
mov
sbb
lds
mov
pop
and
adc
fdivl
aas
dec
lds
int
xchg
and
sub
fcomps
mov
cmp
jb
bound
pop
sub
jmp
cltd
cs
fwait
jno
outsb
cli
dec
fistps
div
push
mov
lahf
mov
sub
jge
out
stos
std
sarl
xor
mov
mov
mov
jp
insb
xchg
pop
nop
inc
scas
movsb
add
xchg
jge
xchg
add
inc
xor
or
loopne
je
popf
sar
mov
or
dec
jo
inc
cmpsl
arpl
lock
cmp
jmp
shl
scas
rcrl
call
mov
jns
mov
jp
xchg
int
sbb
push
insb
add
mov
fcmove
hlt
pusha
and
enter
mov
loopne
pop
sti
mov
cld
adc
mov
pop
adcl
xchg
daa
aas
jns
test
sub
rclb
out
jg
pop
in
pop
add
movsb
pop
inc
mov
sbb
lock
xchg
inc
cld
cmc
xor
add
mov
pushl
or
jp
call
leave
out
mov
lret
aaa
mov
call
dec
pop
cltd
insl
xor
adc
in
inc
lcall
sub
or
sbb
mov
add
aas
and
out
push
ss
jno
filds
add
push
jle
xor
stos
ds
jp
sbb
imul
mov
notb
add
xor
fcomps
test
pusha
shlb
fistl
dec
or
push
dec
call
jecxz
hlt
xor
inc
add
lea
in
mov
inc
cmp
jo
inc
lea
dec
push
add
int3
andl
jp
jb
lahf
roll
ret
popf
sbb
mov
aad
cmp
movsb
push
outsb
in
rorl
out
das
dec
shll
out
and
pop
push
dec
dec
popa
arpl
stc
fxch
lock
sbb
xchg
faddl
sarl
push
iret
cmc
in
sarl
jo
dec
loope
pop
xor
push
cmp
dec
jns
fs
push
add
push
cmpsb
out
movsb
mov
dec
mov
sbb
cltd
or
lds
xlat
les
and
mov
mov
fs
jne
mov
push
dec
aaa
scas
ja
jg
addr16
jae
mov
cld
sti
je
and
sbb
push
out
pop
lock
fs
leave
loopne
sahf
fstpl
lret
add
add
lds
jle
inc
out
mov
adcb
movl
sub
int3
xchg
in
or
pop
mov
cmp
fidivrl
ret
pop
sub
mov
mov
push
and
mov
pop
roll
pop
insb
sbb
aad
insb
ret
iret
enter
xlat
les
pop
pop
inc
jl
xor
and
pop
cmp
mov
fcoms
push
push
shl
gs
lret
outsl
or
pop
nop
adc
arpl
mov
data16
push
adc
jmp
lcall
add
mov
adc
pop
imul
lds
shr
sub
fldenv
arpl
lea
test
pop
lods
jecxz
sbb
mov
inc
sub
into
jne
dec
arpl
mov
lea
pop
call
jbe
fistpll
in
inc
inc
jle
and
fimull
and
in
cmp
mov
xchg
mov
mov
mov
rorl
mov
in
mov
imul
push
jbe
jb
or
scas
adc
arpl
mov
or
mov
mov
xchg
aad
lods
push
xchg
push
pop
sahf
shlb
lea
inc
out
jo
adc
pusha
shrl
fisubl
cmp
mov
loope
and
sbb
and
sbb
lea
push
les
pop
mov
fadds
call
and
rclb
int3
fsubl
add
mov
cmpsb
test
enter
cld
mov
je
mov
es
mov
jns
pop
fwait
cwtl
pop
mov
les
scas
xchg
adc
ds
or
rcl
mov
mov
jge
pop
mov
aas
or
rclb
inc
sub
adc
xchg
sbb
inc
inc
mov
sti
sahf
and
push
into
mov
mov
scas
pop
jge
inc
out
orb
xchg
sub
sub
or
les
test
inc
jecxz
popf
lret
pop
gs
dec
lock
pushf
add
inc
jo
ss
nop
xor
or
dec
cltd
and
lds
fsubl
or
sub
or
fidivl
outsb
add
pop
push
xor
push
mov
pop
shrl
aas
lods
test
mov
out
lcall
dec
inc
aas
stc
or
and
ret
das
jae
or
popf
jo
mov
cltd
dec
js
add
ret
lods
cmpl
rcl
lds
mov
cmp
pop
je
mov
dec
jne
xchg
xlat
and
push
mov
inc
divb
shrb
mov
dec
sub
inc
das
popa
or
inc
xor
fcomps
std
dec
flds
sbb
dec
jle
add
inc
mov
jle
fs
xchg
jl
outsl
ret
into
out
mov
dec
xor
xchg
add
orb
in
sub
mov
icebp
cmp
cltd
loope
cmpsb
mov
mov
fwait
out
lret
push
or
fiadds
les
mulb
inc
jo
daa
les
inc
jl
cmp
sbb
adc
mov
push
ljmp
rorl
in
mov
jle
jmp
sahf
mov
out
add
testb
jbe
mov
adc
mov
sar
and
dec
insb
js
ret
jbe
clc
out
dec
scas
gs
cmp
fsubrl
pop
xor
test
add
adc
push
andl
push
lret
sub
loopne
addl
xor
into
repz
push
jl
flds
test
fstps
mov
cmp
xchg
add
or
mov
in
xor
push
add
dec
in
mov
mov
and
cs
xchg
sbb
xor
or
sub
jge
test
jecxz
add
test
shrl
xchg
jo
pop
lcall
loope
inc
shrl
aas
mov
push
daa
pop
repz
pop
arpl
or
mov
adc
add
rcll
mov
add
movsl
leave
or
popf
lret
dec
mov
pop
push
sub
fcomps
pop
outsl
lahf
aaa
outsb
sbb
xlat
xchg
add
xor
dec
or
push
xchg
sub
xor
xor
lret
push
aas
imul
mov
push
clc
or
movl
sbb
adc
adc
pushf
jns
test
insb
xchg
cmpsb
jne
add
adc
ds
dec
cmp
push
jne
jge
sar
add
mov
jo
sbb
mov
push
pusha
aas
mov
xchg
sbb
mov
inc
dec
xchg
aaa
aaa
movsl
ja
mov
movsb
inc
mov
repnz
xchg
out
stc
ljmp
add
shrb
js
jg
jp
xor
inc
rclb
icebp
mov
inc
js
icebp
lcall
jmp
fnsave
in
mov
mov
and
push
pop
xchg
push
pop
mov
adc
jle
jecxz
in
int3
dec
dec
cs
and
lret
push
fdivl
inc
pop
add
jl
inc
jae
in
push
or
sbb
inc
jo
mov
out
push
mov
xchg
push
addb
adc
int
xchg
sbb
adc
ret
and
leave
in
ret
out
clc
nop
xor
push
push
cltd
xor
test
stos
sbb
add
arpl
iret
inc
stc
sbb
cld
pop
xchg
addb
pushf
pop
pop
cs
sbb
aas
shrb
xor
repnz
adc
stc
add
xor
in
pop
pop
pop
aad
push
sub
pushf
mov
ljmp
inc
cmp
sahf
ror
jge
rcrb
mov
jecxz
outsb
shlb
in
push
cmp
dec
mov
push
add
test
and
pop
lret
or
pop
fcmovnu
lcall
sub
mov
jno
ds
inc
repz
fnstenv
xchg
mov
clc
aas
adc
adc
movsl
lcall
rol
das
out
std
mov
add
bound
sahf
sbb
inc
stos
pop
je
or
jp
push
ljmp
mov
xchg
cli
neg
aas
jnp
ja
push
insl
mov
mov
popa
pushf
add
lock
pop
pop
or
inc
xchg
lds
push
repz
xchg
mov
lcall
cld
dec
sub
mov
sbb
jg
mov
inc
nop
jecxz
cmc
mov
test
dec
pusha
cld
fdivl
dec
add
add
add
add
sub
add
cwtl
add
adcb
add
fadds
add
add
add
add
add
dec
add
addb
add
jo
add
add
add
add
add
pusha
add
add
or
call
add
add
add
mov
add
push
orl
add
add
mov
add
addb
add
add
add
enter
sub
or
and
add
add
add
lock
addb
add
add
add
or
add
in
jl
add
add
and
add
add
add
arpl
mov
dec
es
jae
loop
xchg
mov
sbb
mov
lods
lods
dec
mov
pop
stos
sub
gs
stos
jo
add
fwait
xor
je
push
les
push
clc
jl
mov
mov
adc
inc
and
dec
mov
xchg
cld
daa
pop
inc
sti
or
adc
sub
es
cmp
repz
push
sbb
inc
pop
inc
cmp
insb
pop
xor
subl
fimuls
or
sub
jge
sbb
pop
add
jae
xchg
sbb
dec
xor
sahf
je
lds
pusha
and
fdivr
sahf
jbe
cltd
fs
push
pop
mov
adc
or
repnz
js
dec
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
add
and
pushf
movsl
jp
jmp
pop
xor
shlb
int3
adc
or
add
jl
fildl
xor
or
add
mov
sbb
xlat
les
inc
aam
adc
dec
sub
push
push
mov
pop
pop
xor
jne
movzwl
push
mov
popl
push
mov
pop
push
mov
pop
sub
mov
add
mov
cmp
jne
jmp
mov
push
and
fstps
fwait
jg
or
dec
enter
jmp
xor
dec
ja
into
jg
cmp
or
jle
daa
les
insb
jbe
testl
dec
ja
xchg
pop
gs
outsl
jmp
loope
cmpsl
or
jne
add
or
shld
ds
xor
pop
rcrb
xchg
or
aad
ret
test
and
je
dec
fcomps
and
mov
dec
or
mov
fistl
cmc
notb
ss
testb
cmc
clc
cs
xchg
xchg
ret
ss
pop
mov
dec
push
and
mov
inc
ja
dec
xor
outsl
inc
adc
inc
xchg
xchg
ret
frstor
imul
or
jne
push
out
pop
jmp
dec
ja
shlb
xor
cmp
pop
cs
pushf
pop
shr
mov
jb
lods
out
pop
pushf
jge
xchg
cmc
sbb
sub
xchg
lcall
outsl
std
test
iret
fsts
fldt
out
jno
adc
mov
mov
dec
je
or
int
mov
inc
int3
inc
out
add
pop
dec
cwtl
sti
mov
push
lock
push
xor
ret
ss
imul
syscall
xchg
xor
pop
push
dec
mov
adc
or
jp
or
mov
syscall
xchg
test
jae
in
mov
movsl
push
mov
testl
daa
adc
out
mov
ja
pushf
mov
jb
push
cmpsb
pop
out
insb
in
jmp
lea
das
and
popaw
pop
sub
add
icebp
sbb
mov
out
mov
mov
push
insb
faddl
mov
movsb
lods
mov
loop
add
sbb
sarb
faddl
mov
movsb
and
fdiv
mov
cmp
ja
inc
pop
movsb
fwait
mov
mov
shld
jne
or
mov
pop
movsb
inc
int3
push
push
jb
ja
mov
adc
mov
jns
adc
cmpsl
add
mov
cmp
ffreep
repz
repz
lock
je
mov
mov
aam
repz
sbb
jae
int
jae
lret
xlat
ret
adc
mov
in
sub
fs
enter
dec
insl
inc
or
loope
push
lret
inc
sub
xlat
int
hlt
fwait
loop
jle
xchg
push
fistps
xchg
stos
jae
jp
add
lock
jecxz
cld
jno
push
sti
fs
repz
adcl
jl
dec
repz
int
xor
push
js
xor
ret
aam
insl
in
in
jmp
inc
push
in
fisubrl
add
arpl
mov
pop
xchg
mov
outsl
scas
or
sub
aad
cmpb
jae
dec
js
mov
cmp
cmpsl
or
mov
mov
mov
fs
mov
cmp
inc
cmpsl
or
mov
mov
out
xchg
cmp
mov
lcall
add
cli
dec
arpl
xor
mov
scas
or
fdivrs
jo
jns
inc
mov
push
cmp
pushf
add
arpl
jle
outsb
jle
cmp
arpl
scas
inc
arpl
mov
inc
arpl
mov
push
outsb
scas
or
scas
fdivrl
xor
test
push
adc
int
arpl
mov
inc
arpl
mov
jp
aad
test
aad
stos
or
ljmp
gs
push
dec
ljmp
into
mov
scas
xchg
aas
std
pop
sbb
or
test
mov
mov
cmp
jo
sbb
arpl
or
sub
or
sub
sbb
aad
test
scas
or
mov
ljmp
add
inc
arpl
mov
scas
or
jl
imul
mov
jp
aad
test
push
add
cmp
xchg
test
jl
cmp
or
cmp
mov
out
cmp
arpl
or
pop
push
dec
loop
ret
add
jmp
les
lock
cmp
fmuls
lahf
pop
or
cltd
adcl
js
dec
push
std
lock
cmp
fmuls
xor
or
cltd
adcl
and
roll
cmp
push
cmp
xchg
jp
push
std
lock
cmp
fmuls
aas
inc
xor
jl
rorb
xchg
pop
sub
insb
scas
or
mov
jp
push
std
lock
cmp
fmuls
mov
in
cmpsb
in
insb
scas
or
mov
jp
push
std
lock
cmp
fmuls
mov
mov
out
arpl
adc
imul
mov
jae
cld
roll
cmp
push
cmp
xchg
xlat
lock
mov
ds
or
out
pop
sbb
mov
or
shll
xor
lock
mov
push
sbb
fnstsw
testb
lahf
jp
adc
in
mov
mov
push
sbb
fnstsw
mov
ret
pop
shrl
arpl
stos
mov
arpl
mov
arpl
ror
cltd
jo
cmp
insb
or
sti
stos
enter
ss
jnp
cmp
outsl
scas
or
pop
or
fisubl
adc
das
jge
or
lock
das
loope
sbb
mov
add
inc
sbb
scas
sbb
sub
or
sub
mov
out
js
or
xor
push
test
or
cmpsl
push
aaa
ja
fsubl
add
lods
pop
cmp
outsb
xor
pop
push
clc
mov
out
pop
hlt
or
cwtl
pop
icebp
hlt
mov
mov
and
mov
pop
pop
xor
cltd
cmp
arpl
or
arpl
or
arpl
mov
scas
stos
stos
or
arpl
or
or
arpl
add
arpl
or
arpl
test
ljmp
stos
testl
fimuls
insl
ficoms
jnp
lds
addl
mov
mov
and
sbb
pop
lret
cmp
lret
aaa
sti
iret
sar
push
push
lea
loope
jmp
mov
jns
push
bound
test
lock
xchg
scas
fwait
addr16
aad
out
mov
in
jge
sbb
repz
movsl
pop
ret
adc
imul
sbb
int
repnz
push
xor
cmp
push
scas
lret
cltd
loopne
pop
dec
push
lock
lcall
and
mov
repz
stc
pop
das
jns
adc
movsb
dec
xchg
xor
xorl
into
mov
cmpsl
mov
stos
dec
cmp
mov
push
pop
adc
andl
in
ds
xchg
je
icebp
cmp
inc
jecxz
xor
mov
pop
fmull
and
ja
data16
aad
mov
je
jmp
out
xor
cmc
scas
stc
or
and
or
jae
add
mov
dec
cltd
pop
jle
push
pop
jge
out
inc
or
std
dec
xchg
stos
inc
xor
loope
div
incb
xchg
push
push
out
cmp
lret
jae
lea
pop
js
popa
cmpsl
xchg
hlt
movsb
rorl
jp
repnz
xor
inc
dec
lods
mov
stos
out
dec
pop
shll
fs
test
mov
out
mov
inc
jmp
test
xchg
dec
decb
iret
pop
inc
sti
mov
dec
out
int
and
fwait
ss
test
lret
pop
in
mov
xor
orb
jg
pop
leave
int3
fdivs
rcl
push
outsb
sahf
push
cmp
cmp
dec
adc
imul
adc
hlt
movsb
cmpsl
cmp
pop
das
xor
pop
test
repz
call
inc
jne
fsubr
insl
int3
loop
pusha
inc
imul
int3
subb
lahf
cmp
xchg
je
sub
adc
mov
cmp
and
xchg
push
mov
cli
nop
test
push
fwait
pop
push
ja
popa
xchg
xchg
xor
add
fsubs
popf
push
sub
mov
ja
loop
pop
mov
dec
cmpsl
scas
ret
fldcw
mov
fwait
icebp
addr16
add
repz
negl
cmpl
shll
js
or
testb
inc
fisubs
and
mov
mov
xchg
xchg
push
push
std
mov
inc
adc
jle
mov
call
add
add
add
or
add
adc
jl
add
jl
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
jl
add
jnp
add
jl
add
jl
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
jl
add
add
add
jl
add
add
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
inc
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jl
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
je
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
je
insl
add
add
add
xor
cmp
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
jae
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
xor
pop
aas
sti
add
add
add
dec
icebp
jle
nop
lock
scas
jne
dec
mov
push
lods
add
in
add
pop
int3
mov
pop
ljmp
push
and
ror
or
sbb
pushf
sahf
dec
adc
add
shrb
cmpsb
jmp
mov
negb
cmpsl
ja
sbb
aad
test
push
test
cltd
pop
jmp
repz
sub
test
js
lock
shl
inc
mov
xor
cmpsl
sbb
leave
mov
jg
mov
push
jno
bound
inc
pop
xlat
adc
jb
mov
inc
and
imul
stos
bnd
testl
mov
sarb
stc
fdivrs
into
fisttps
inc
cs
ja
xorb
push
cli
or
hlt
or
in
rcl
mov
neg
pop
adc
sbb
cmpsl
jecxz
add
in
les
stc
sbb
aam
dec
repnz
ljmp
mov
jmp
ret
aam
mov
mov
xor
dec
out
mov
cmp
mov
sub
dec
or
bound
iret
dec
rdmsr
aad
stos
adc
cmp
call
inc
test
mov
leave
and
imul
ja
adc
adc
and
push
sti
imul
cmp
mov
dec
lahf
pop
mov
jle
push
test
sbb
xor
lods
fidivl
jp
outsb
jo
cmpsl
push
rclb
lods
idivb
add
leave
dec
sbb
aaa
inc
or
dec
or
aaa
sub
push
es
cmp
inc
hlt
xchg
dec
mov
xchg
loope
mov
jbe
jo
push
mov
sub
jg
mov
xor
in
dec
je
mov
xlat
in
push
int3
adc
add
orl
push
enter
mov
test
lahf
sub
jecxz
cltd
aam
daa
jbe
iret
add
inc
call
cltd
cmp
dec
adcl
sti
pop
cmp
push
test
loopne
inc
das
cwtl
daa
push
or
push
and
rolb
sub
cmp
mov
rclb
ss
jecxz
out
andl
xchg
clc
jns
xchg
lret
fldenv
dec
and
cmp
mov
enter
or
movsl
sbb
sub
in
sbb
dec
pop
add
lret
mov
cmpsl
fsub
std
jle
cwtl
inc
popl
mov
jle
ljmp
dec
or
jecxz
loop
cwtl
lret
cmp
sub
fcmovb
sub
sub
xchg
std
mov
leave
out
jge
ret
jo
mov
mov
dec
lds
bound
xchg
rcr
mov
pop
lock
ljmp
push
pop
cmp
aad
dec
or
mov
ret
iret
or
push
lcall
lods
push
dec
mov
das
jo
aaa
out
insl
pop
adc
push
mov
stos
xchg
dec
mov
sub
adc
inc
ljmp
sub
mov
push
js
xor
cmp
mov
push
stc
aam
pop
or
aam
xchg
sahf
lock
lds
fstps
xor
pop
in
in
ds
aas
es
fcoml
mov
pop
sub
mov
mov
mov
test
cs
cmpsb
das
add
mov
repz
mov
add
xor
add
hlt
sahf
addr16
add
sub
mov
xchg
outsl
mov
inc
pop
inc
jae
sub
mov
pop
push
popf
imul
sbb
hlt
fmulp
test
shl
je
xchg
xchg
sub
jle
dec
in
movsl
sub
jns
pop
mov
lahf
movsb
ds
inc
sbb
pavgw
out
popf
fcmovu
outsl
bound
mov
push
shufps
adc
pop
addr16
and
and
cmp
aam
mov
jge
jge
shlb
nop
insl
adc
ljmp
pminsw
mov
cltd
mov
mov
or
add
xchg
mov
repnz
popf
cmp
pop
fld
cmp
pop
jmp
dec
or
push
xor
insb
push
test
or
sub
gs
push
xor
cmp
push
pop
mov
inc
iret
and
add
hlt
insb
xlat
mov
aad
and
pop
jg
sti
pop
sbb
nop
mov
jg
or
push
aam
push
das
push
popf
jnp
jg
in
jg
mov
dec
jmp
pusha
jecxz
jnp
fldcw
dec
aad
ljmp
lcall
mov
clc
adc
scas
jb
xor
out
cltd
or
xlat
push
sub
cs
push
insl
aas
sub
mov
imul
sub
test
fnsave
jecxz
inc
mov
outsb
enter
fwait
insb
int3
xchg
gs
mov
imul
ds
adc
push
stos
mov
repz
xchg
add
rclb
mov
test
mov
popf
ljmp
enter
and
ret
cmp
test
mov
pusha
mov
dec
xor
cli
push
lock
xchg
sbb
mov
cmp
sbb
xor
sub
pushf
xlat
mov
inc
push
xlat
cmp
je
sbb
add
in
mov
and
cmp
jl
insl
incb
out
imul
ds
fisttps
hlt
add
clc
xor
testb
push
push
mov
and
mov
out
xchg
std
insb
stc
inc
xchg
hlt
popf
xor
shrb
in
xor
dec
jp
and
in
jmp
into
sti
pop
jle
lcall
cmp
mov
push
orl
in
xor
lods
mov
inc
pop
ljmp
lods
mov
in
jnp
in
std
cmp
dec
push
int3
cmpsl
inc
pop
addr16
cmp
sbb
imul
jno
adcl
mov
push
dec
jle
push
aaa
insb
pushf
inc
movsb
pushf
mov
loop
push
push
xchg
xchg
xor
dec
pop
adc
bound
pop
jo
popa
mov
cwtl
and
sub
push
inc
and
mov
je
sahf
adc
cmp
sub
in
lcall
adc
js
mov
jbe
outsb
sahf
mov
call
inc
int
jo
out
dec
adc
cli
jl
or
xchg
xor
pop
xor
pop
fs
rcl
cld
addr16
xchg
fnstsw
add
cmp
in
test
cli
popa
mov
leave
bound
mov
psrad
mov
pop
mov
xchg
mov
nop
js
add
and
in
xchg
and
pop
jnp
pop
sbb
daa
adc
inc
mov
pushf
loop
cli
into
sbb
jno
sarl
aas
jns
xchg
arpl
xchg
jge
insb
cmp
add
rcrl
mov
xor
pusha
cli
call
and
push
or
sbb
lods
ret
add
mov
push
cwtl
jg
rorl
and
insl
frstor
loope
mov
jns
or
lods
into
int
test
mov
lahf
fnstsw
and
shrb
arpl
mov
scas
cmp
ret
sub
ret
repnz
into
add
push
insl
scas
bound
faddl
ds
jae
add
dec
dec
jbe
stos
insl
pusha
mov
repnz
sub
loope
push
push
fwait
sbb
mov
add
adc
push
pop
and
pop
sbb
and
mov
movsl
into
push
or
or
int3
mov
jo
insb
mov
outsb
les
and
push
inc
push
mov
mov
adc
pop
in
mov
dec
imul
lret
adc
popa
cmp
dec
adc
xchg
call
cwtl
fbld
adc
push
icebp
mov
pop
xchg
mov
mov
mov
mov
jge
rclb
les
inc
ficomps
insl
repnz
cmp
pop
xor
push
xchg
jo
or
mov
lcall
dec
jbe
scas
cld
sbb
leave
push
cwtl
xchg
add
fistpll
leave
push
sub
into
mov
inc
test
xchg
in
pusha
icebp
jge
cmpsl
in
in
imull
loope
subb
test
in
pop
rcrl
out
push
cmpsl
xchg
pop
cltd
inc
mov
ret
mov
push
jnp
cld
cli
sub
out
les
rcrl
icebp
dec
loopne
imul
xor
shl
jb
dec
cmp
fisubrs
test
inc
or
xchg
test
and
out
dec
xchg
orb
xor
rclb
sub
dec
pushf
add
fs
mov
icebp
jge
out
mov
mov
int
stos
adc
andb
ja
push
cwtl
das
jp
adc
cmp
mov
repz
add
xchg
mov
gs
push
cmpb
add
jmp
xchg
mov
xchg
test
inc
cwtl
pop
mov
jne
mov
jbe
jne
xchg
inc
xor
dec
xor
in
adc
in
mov
xchg
out
stos
dec
cmpsl
scas
addr16
and
mov
sahf
test
push
mov
jmp
inc
outsb
cltd
add
mov
out
push
outsl
into
inc
inc
or
inc
aam
out
pop
push
or
cmpsb
fbstp
icebp
dec
mov
aam
aad
out
addl
fbstp
jmp
icebp
popf
xchg
inc
shlb
jl
adc
mov
or
mov
test
dec
lods
int
sti
cs
jp
jns
out
sub
xchg
sub
pop
cli
nop
movsb
les
clc
and
cmp
mov
push
push
mov
push
popa
faddl
mov
fwait
insb
xchg
mov
mov
dec
test
or
sar
pop
lock
or
mov
mov
int
mov
test
push
mov
orl
je
sub
lret
insl
push
pop
scas
or
mov
mov
adc
sbb
cmpl
lods
add
clc
or
add
xor
mov
jae
fnstcw
movsb
lea
lahf
lods
lods
jo
push
mov
xchg
rclb
xchg
inc
push
xor
into
xor
out
das
jg
imul
inc
jmp
jmp
and
mov
je
jne
push
in
mov
fstpl
aam
cmp
dec
jmp
cmpsl
xchg
sbb
xor
mov
mov
xor
repz
xchg
mov
enter
lds
outsb
or
push
mov
sbb
int3
sbb
and
xchg
push
jb
icebp
fs
movsb
aaa
xchg
dec
adc
add
adc
cmp
sar
dec
pop
cmp
or
sub
cwtl
std
push
ret
into
mov
ja
je
add
hlt
cmp
rcl
inc
pop
cmc
fs
out
mov
pop
pop
nop
outsl
xchg
in
lcall
sbb
and
sub
sbb
or
outsb
scas
mov
sbb
jge
add
shll
js
dec
shrl
mov
inc
mov
pop
cmp
mov
lock
jl
jbe
pop
dec
daa
mov
push
push
fwait
adc
jno
mov
add
cmpsb
ss
cwtl
scas
cmpsl
inc
jns
scas
mov
sub
cmp
data16
mov
pop
mov
or
repz
adc
lds
xor
dec
mov
or
push
repz
mov
add
and
pop
scas
xor
add
sbb
testb
and
push
mov
mov
mov
sub
das
fiadds
pop
movsb
lds
clc
push
movsb
xchg
xchg
jne
outsb
pop
mov
sub
jle
cltd
enter
xor
push
icebp
int
loopne
jge
inc
push
or
xlat
mov
adc
dec
fwait
popa
das
insl
fistps
test
pushf
scas
jb
xbegin
popf
pushf
mov
mov
cmp
movsl
popf
jecxz
push
jecxz
sub
pop
fmull
lock
cmp
enter
scas
ret
inc
mov
test
sub
ljmp
inc
lcall
push
popa
movsl
jnp
xor
stos
lods
loop
dec
stc
ss
stc
stc
out
daa
or
add
in
out
or
rolb
icebp
push
inc
push
sbb
mov
into
ljmp
or
and
xor
scas
or
cmp
daa
hlt
je
pop
mulb
cwtd
pop
cwtl
dec
adc
aas
test
adc
dec
mov
xchg
cltd
jae
lahf
insb
movsb
testb
imull
insl
daa
add
adc
test
jo
jae
sarl
xlat
jg
lret
pusha
cli
movsl
push
mov
sbb
dec
sbb
iret
fstl
push
out
adc
mov
lahf
pop
mov
cmpsl
fidivrs
ret
inc
xchg
orb
dec
fwait
test
sbb
cmp
hlt
or
fldcw
orl
or
adc
jae
inc
inc
fistpl
inc
cmc
cmp
dec
movsl
sbb
xchg
mov
xor
pop
test
dec
jmp
fmuls
xor
xchg
push
dec
xor
xchg
mov
sarl
scas
lods
or
ss
sbb
xchg
mov
dec
fists
fs
addr16
lods
adc
test
add
inc
inc
pop
loopne
ja
pop
mov
add
cmp
add
cmp
mov
pusha
pop
sub
xchg
mov
jnp
jno
aad
lock
sbb
mov
push
scas
sbb
into
lret
and
shrl
xchg
mov
mov
out
add
dec
roll
jl
push
and
fmull
sbb
sub
bsr
call
cmp
sbb
add
scas
lret
xor
ret
cmp
jb
mov
ss
out
inc
int
mov
mov
in
sbb
xor
sub
sbb
outsb
sub
das
adc
push
aas
jne
mov
flds
pusha
dec
mov
dec
sbb
lock
fwait
jno
outsl
fwait
ss
fadds
push
insb
or
mov
adc
jne
shr
mov
pop
jb
out
mov
xor
aas
mov
jmp
shr
push
mov
stc
xorb
pslld
fsubrl
pop
dec
js
shrb
std
mov
push
mov
push
outsl
pusha
adc
fsubl
je
push
inc
add
dec
push
in
sbb
and
pop
stos
inc
rcr
lea
inc
imul
ret
sub
inc
out
dec
and
loop
pop
adc
xor
out
cmp
pop
push
inc
cmpsb
cmp
leave
fmull
mov
mov
ljmp
sbb
je
xchg
lods
mov
insl
cltd
cmp
flds
add
lods
mov
mov
sub
popf
shr
cli
jge
cmp
add
shlb
mov
xor
fcoms
pop
cmp
add
std
inc
add
push
fnsave
push
pop
add
jmp
fldcw
xchg
sbb
fisubrs
aaa
jnp
aad
shr
pop
inc
loop
in
add
std
xchg
pop
ljmp
push
pop
mov
movsb
jno
xor
mov
inc
mov
jne
fcmovnb
mov
pop
icebp
mov
outsl
lahf
jp
xchg
lock
js
and
jge
into
fsubl
js
je
es
cmpsl
push
stc
aad
pusha
xor
stos
push
lcall
lods
scas
adc
pop
xorb
add
jge
mov
jno
mov
arpl
cmpl
mov
aas
mov
cmp
inc
cmp
or
leave
sub
mov
aad
adc
test
add
fisubl
inc
addl
je
stos
adc
imul
add
imul
push
scas
adc
add
pushf
xor
jns
mov
inc
movsb
dec
cmp
jl
rcll
stos
insb
outsb
in
cmpsb
inc
jbe
and
jo
or
out
fcomip
pop
fidivl
call
movsb
adc
repz
xchg
sbb
mov
push
imul
cmp
sbb
dec
pop
ljmp
and
nop
cmp
jmp
test
and
or
movsl
shlb
cs
into
lds
stos
movsb
and
leave
mov
adc
out
in
pop
xchg
inc
cli
lods
clc
sub
sub
push
loopne
roll
mov
pop
data16
jae
mov
lock
adc
daa
add
je
popf
and
iret
cwtl
addr16
iret
push
or
jecxz
mov
call
lds
daa
lock
and
fsubs
enter
or
adc
inc
lods
jmp
callw
fs
out
jecxz
ror
jp
adc
xchg
idivb
and
push
xor
mov
pushf
adc
mov
imul
sbb
push
mov
into
and
gs
mov
mov
pop
lock
jcxz
cli
les
test
inc
cmc
jecxz
mov
fsts
sbb
outsl
mov
jecxz
lahf
and
iret
lock
test
outsb
pop
add
outsl
xor
or
sub
clc
lea
jg
inc
and
test
jno
jecxz
shll
cli
andl
in
jne
pop
xchg
push
dec
push
jecxz
outsl
fcompl
dec
and
pushf
in
cli
jmp
sub
cmp
inc
pusha
arpl
or
sbb
pushf
mov
es
daa
orb
stos
sbb
rcr
loope
ret
dec
gs
xor
dec
bound
cli
mov
lods
add
int
and
pop
xor
stc
jmp
ja
js
mov
arpl
mov
mul
mov
add
sub
lock
bndstx
fmull
or
stos
jle
jnp
xorl
push
bnd
xor
xlat
pop
leave
xor
sbb
daa
add
dec
xor
in
xor
jmp
jnp
pop
clc
add
pop
std
and
dec
inc
test
pop
push
mov
nop
add
xor
js
xor
adc
pop
or
outsl
mov
dec
push
sbb
in
cwtl
or
or
inc
movsl
add
xchg
and
out
cld
dec
push
mov
cld
enter
mov
das
dec
add
xor
insb
stos
sub
xor
lock
inc
adc
dec
aam
into
inc
xor
lret
cli
repz
xchg
lret
pop
leave
mov
inc
pusha
pusha
addr16
arpl
ds
aaa
neg
aam
mov
dec
inc
std
insl
iret
repnz
je
dec
and
push
sub
xor
adc
jae
adc
mov
dec
pop
adc
xor
inc
insb
add
mov
jp
idivl
dec
xchg
daa
mov
cmpsl
ja
mov
lea
fwait
or
daa
stc
mov
hlt
imul
and
ret
mov
push
push
pusha
dec
movsb
dec
mov
mov
mov
sbb
mov
int3
mov
mov
pop
mov
xorb
in
scas
sub
xchg
out
imul
loop
aaa
jbe
loop
repz
xor
xchg
or
pop
add
mov
xor
or
jle
jae
cmp
shl
fmuls
sub
sbb
out
mov
sub
aas
adc
pop
add
popa
mov
jp
outsb
or
test
rcrb
adc
dec
bound
push
orb
daa
mov
xchg
movsl
das
mov
pop
jge
fistps
jae
sqrtps
scas
icebp
mov
pop
mov
or
cmpsb
scas
out
or
push
or
popa
loope
mov
pop
sti
mov
repz
sub
call
pushw
sbb
xchg
dec
push
gs
mov
jl
pop
mov
insb
adc
push
inc
pop
xchg
mov
add
jmp
xchg
xchg
jle
xchg
or
addb
fnstcw
imull
xchg
mov
or
and
stos
testl
ss
aad
movsb
stos
fs
jne
std
inc
out
inc
mov
jb,pn
fstpl
lods
mov
fadds
sub
cmc
sbb
xchg
sbb
es
outsb
lock
mul
icebp
xchg
mov
pop
jecxz
and
adc
jecxz
mov
or
push
xor
fnstcw
lret
jge
pop
inc
sbb
sub
xchg
lcall
lds
enter
filds
dec
inc
push
idivb
sbb
mov
cmp
icebp
pop
imul
cmp
sub
xchg
sub
mov
inc
adc
popa
inc
les
shr
sbb
inc
push
push
and
dec
stos
add
inc
data16
xchg
cmp
stos
jo
aaa
jl
rolb
mov
vmulps
or
sub
mov
xor
sahf
rclb
inc
push
and
dec
push
ja
cmp
enter
enter
push
lahf
jp
dec
insl
adc
push
xor
out
neg
adc
push
sbb
out
pop
or
inc
js
dec
cmc
add
scas
cld
mov
fisubrl
push
mov
scas
iret
push
mov
push
addr16
add
lret
adc
mov
lds
or
aam
push
in
or
cmp
xorps
loopne
scas
mov
mov
enter
movsl
aam
sbb
movsl
mov
pop
inc
mov
cmpsl
fsubs
aam
in
add
nop
pop
roll
add
mov
cwtl
xor
mov
mov
xchg
lcall
and
sbb
test
mov
ljmp
mov
sbb
xor
fs
jle
xor
push
xchg
jle
fwait
stos
aam
cwtl
rorb
cltd
inc
lcall
loop
enter
out
ja
sub
push
fadds
cs
and
xor
dec
ljmp
mov
cltd
loop
push
mov
lret
xor
sbb
ss
test
jl
mov
jno
int3
xchg
movb
mov
ret
dec
sbbl
repz
stc
out
sarl
pop
xchg
sub
push
lahf
shl
shll
icebp
add
cmp
ret
mov
lods
outsl
loop
lret
adc
ja
andl
orl
mov
jns
mov
xor
fwait
lcall
ret
add
mov
jle
mov
sbb
push
adc
movsb
js
dec
xchg
xchg
mov
pusha
stos
mov
call
lahf
iret
addr16
ds
out
daa
loope
inc
mov
ss
or
xchg
cmpsl
sub
xchg
sub
sub
scas
pop
cld
cmp
in
sub
xlat
sbb
lds
adc
cmp
mov
pop
and
je
fdivs
sbb
mov
imul
add
mov
jp
nop
int3
test
lock
outsl
sbb
or
and
xor
and
loop
lret
xor
aas
or
fdivrs
xor
push
mov
shl
rcrl
in
pop
mov
adc
and
cmp
pop
subb
into
mov
out
loop
dec
jnp
aad
mov
xchg
and
xchg
pop
repz
lret
push
pushf
in
daa
call
ret
int3
adc
pop
lcall
pop
push
fs
mov
xchg
scas
push
jge
mov
cwtl
pop
out
add
fsubrl
aad
mov
outsl
cmpsb
iret
inc
push
inc
stos
cltd
pop
push
negl
hlt
adc
cwtl
mov
cmp
aaa
aas
pop
mov
fs
sahf
sub
ss
sbb
xchg
dec
sub
xchg
mov
add
jb
in
movsl
lock
lods
xor
in
xchg
or
lock
lods
bound
or
in
les
mov
dec
xor
sti
lock
push
fs
jmp
es
adc
inc
dec
adc
sarb
push
and
dec
mov
pop
sub
mov
jmp
xor
sub
sbb
sub
gs
fidivs
pop
stos
popa
flds
cmp
push
sbb
dec
push
sbb
mov
and
xchg
fcmovne
pop
pop
stos
jp
test
sbb
xor
jecxz
mov
inc
cmpsb
xor
js
addr16
cmc
xorl
cld
repnz
push
ficoms
lds
push
cmc
in
mov
fdivl
outsb
sbb
repz
test
mov
xchg
xchg
test
cmp
add
and
mov
adc
jno
enter
dec
jmp
rcll
popa
push
lods
movsl
or
push
hlt
adc
int
test
movsb
rorb
cmpl
mov
lret
cltd
sbb
adc
sub
aam
into
mov
hlt
in
insl
movsb
sub
sahf
imul
mov
cmc
sub
shll
jl
push
dec
dec
sub
mov
sub
cmp
mov
int3
xor
xchg
xchg
fwait
sbb
jnp
mov
addr16
and
mov
and
fstp
jle
or
push
imul
mov
xchg
test
push
mov
push
pop
mov
sbb
popa
repz
movsb
insb
popf
xchg
push
movsb
cmp
push
rcl
imul
std
test
fadds
loopne
adc
scas
jle
insl
pop
dec
xchg
dec
xchg
loope
idivl
popa
rclb
pop
insl
aad
insb
mov
out
test
jns
loop
in
xchg
sbb
add
push
fadds
jmp
xor
test
sbb
es
jl
sahf
adc
mov
inc
test
aad
xor
mov
adc
lret
push
mov
cmc
xorl
shrl
stos
in
jg
lret
iret
shl
xor
jp
and
cwtl
popf
and
imul
pop
dec
pushf
fdivrs
movsl
add
jns
int
cmpsl
call
mov
or
ja
stc
jae
lret
ljmp
jg
mov
lret
sbb
sub
out
jge
mov
scas
xchg
aam
mov
cmp
mov
mov
movsb
jno
adc
mov
in
dec
js
jmp
dec
jmp
in
lea
jb
cmp
pop
jle
ret
inc
aam
int3
or
dec
or
cmc
aam
movsb
pushf
push
sub
sbb
jns
pop
fists
xchg
mov
js
dec
or
insb
mov
cmpsb
xchg
or
xor
lods
push
subl
out
ja
sub
lret
and
out
lds
mov
clc
sbb
jo
mov
lahf
rcl
pop
les
pop
pusha
jge
out
sbb
sbb
jl
fnstcw
sti
jne
or
cmp
loop
lds
outsl
dec
pop
jbe
in
stc
mov
cli
movsb
add
xchg
rcll
imul
add
icebp
inc
in
in
je
sahf
test
sahf
aad
adc
mov
push
ret
mov
mov
gs
xchg
mov
mov
cmpsb
jnp
cld
or
push
out
lods
mov
dec
or
mov
stos
ja
enter
xchg
xor
mov
loopne
inc
mov
adc
cltd
mov
push
lahf
sbb
jns
mov
shr
sbb
cmpsl
jge
lea
xchg
mov
mov
ds
sbb
mov
push
jnp
mov
sub
jp
push
stos
nop
xchg
mull
pop
adc
ss
xchg
ffreep
xchg
outsl
pop
repz
push
mov
xor
inc
repz
add
ja
in
inc
dec
je
jecxz
jne
ffree
sub
stos
push
cltd
insl
dec
in
gs
cmp
inc
push
mov
mov
inc
push
and
xchg
imul
fists
cld
cmp
les
fcompl
mov
adc
adcb
pop
mov
sbb
enter
dec
xor
outsb
mov
scas
shrb
pop
sbb
test
fsub
mov
insl
lcall
adc
pop
and
mov
or
mov
lods
rclb
sub
aam
pop
xor
jmp
fldcw
imul
out
loope
in
fcomip
pop
fdivl
shlb
mov
cltd
or
xor
ficomps
enter
xor
and
out
scas
shl
xor
testl
push
les
lods
xchg
loopne
test
jp
xchg
mov
lods
or
xchg
sbb
jl
inc
cmp
shrl
mov
outsb
sbb
push
rolb
insb
mov
pop
int3
jg
xor
add
and
aas
mov
das
test
add
inc
jp
mov
xor
mov
xchg
push
insl
or
adc
push
adc
sbb
jo
enter
mov
xchg
pop
fsubs
fcoml
nop
pop
mov
rcrl
insb
loopne
es
or
add
repnz
xor
mov
cmp
add
imulb
subb
jns
sbb
cld
stc
mov
cmp
lret
mov
xchg
daa
sti
jp
int3
jbe
cmpl
sti
mov
fsubs
mov
insb
and
or
mov
add
divl
scas
mov
fwait
adc
fwait
test
adc
ds
out
lds
lar
inc
push
pushf
or
dec
push
xchg
sub
mov
mov
mov
out
cmpsl
movsl
cltd
sub
stos
jb
xchg
and
fcmovnb
fidivl
les
push
push
cltd
in
mov
push
or
sub
jmp
test
add
js
repz
xlat
das
jo
cmp
rcrl
sbb
inc
mov
sbb
aas
sti
sbb
pusha
xchg
jne
sbbb
data16
test
call
jae
popw
pop
lds
dec
mov
imull
sbb
pop
xlat
jecxz
movsb
cmp
test
inc
arpl
dec
sbb
mov
enter
mov
pushf
in
push
lods
mov
pop
imul
mov
sbb
or
pop
andl
add
testb
stos
sbb
or
enter
orl
add
outsl
pop
xchg
pop
ret
ret
mov
mov
sub
cld
mov
decl
call
int
aad
pop
scas
test
insl
sub
insb
andl
jae
out
mov
push
shll
xchg
enter
mov
insb
insb
scas
scas
lcall
daa
data16
int
jno
lahf
iret
cmp
cmp
push
mov
mov
push
roll
mov
fadds
cmp
inc
mov
mov
sarb
lret
dec
sub
jp
test
movsl
in
aad
popa
or
sbb
daa
movsb
lcall
in
sbb
adc
push
cmp
movsb
insl
sub
icebp
add
test
xchg
imulb
pop
jp
insb
push
leave
add
jno
mov
loop
sub
push
cmp
sub
dec
arpl
xor
dec
js
mov
into
xchg
outsl
pop
inc
in
movzbl
fwait
leave
pop
jge
adc
dec
cmp
movb
jnp
shrb
loopne
inc
rcrb
sbb
mov
data16
mov
pop
mov
enter
adc
mov
or
mov
insl
push
xor
xchg
outsl
or
xchg
cmp
or
inc
pop
push
push
mov
mov
xor
adc
push
cwtl
or
stc
gs
fcmovne
add
push
mov
pusha
add
mov
or
clc
in
pop
cs
clc
cmpsl
arpl
cmp
pop
cmc
insb
sub
jne
jbe
dec
sahf
dec
jecxz
dec
mov
mov
movsl
inc
lahf
sub
movsl
in
dec
cmp
add
xchg
push
cmc
dec
mov
mov
lcall
cmpsl
nop
add
loop
lock
dec
daa
sub
bound
in
inc
jne
fwait
add
xchg
loope
hlt
mov
xor
add
neg
xchg
fisubl
mov
hlt
ret
cmp
or
repz
and
jnp
push
dec
mov
inc
mov
addr16
cmp
outsb
test
fs
pop
sbb
jno
xchg
bound
or
mov
add
addr16
sub
sbb
xlat
sbb
dec
fnsave
fmull
neg
mov
or
ljmp
inc
sahf
xchg
mov
rclb
jge
dec
into
cmp
push
sahf
or
sbb
mov
xchg
and
arpl
jno
add
out
clc
jp
jmp
inc
out
out
subb
pop
sub
iret
into
push
xchg
add
mov
test
repz
sub
jmp
in
or
hlt
clc
out
sti
mov
push
cs
sub
sbb
xchg
or
mov
pop
add
loop
fcmovbe
sahf
enter
imul
mov
push
and
mov
xchg
addr16
cld
lret
test
jl
jne
inc
sub
pop
daa
test
mov
pusha
lcall
movsb
mov
cld
scas
mov
cmpsb
rorl
js
pop
or
insb
cmp
pop
in
cltd
sbb
std
xchg
inc
xor
dec
xlat
push
jle
cld
and
ror
inc
mov
sub
mov
mov
cmp
bound
dec
int
ss
and
adc
sbb
in
mov
subb
push
pop
fs
notb
jns
or
add
inc
add
cmp
inc
cmp
jnp
shlb
sarb
inc
mov
dec
imul
sub
mul
addr16
mov
stos
clc
cmp
in
imul
or
mov
cmp
mov
push
mov
jecxz
add
adc
dec
insl
adc
xchg
add
lods
or
pop
stos
rcll
jecxz
loopew
add
push
les
insb
inc
cwtl
jl
xchg
cmp
shlb
rcr
dec
movsb
sbb
add
repz
xchg
jg
int
and
lea
dec
mov
notl
mov
out
cmc
mov
mov
aas
adc
inc
xchg
jmp
pop
sub
adc
scas
push
jp
fwait
and
inc
out
cmp
pop
push
xor
or
leave
cmc
ret
cmc
dec
mov
mov
mov
call
xor
repnz
fwait
pop
push
test
or
ret
mov
icebp
or
roll
jp
sbb
lods
jnp
push
pusha
aaa
dec
loope
iret
imul
fnstcw
flds
or
insl
and
scas
daa
cli
and
cmc
xor
sbb
sub
xor
sbb
jb
sar
enter
das
int
scas
add
clc
mov
mov
mov
pop
or
arpl
inc
mov
mov
mov
push
imul
push
pop
dec
aam
xor
push
ja
popa
mov
sub
pop
orb
repz
fs
push
add
cmpb
lods
and
push
pop
rcrl
ds
mov
test
call
mov
xor
cmp
cmp
test
test
insb
xchg
push
loope
pop
push
frstor
inc
dec
cltd
jne
scas
rcrb
jl
rcll
mov
call
sub
push
lret
pusha
sub
jecxz
dec
mov
mov
fidivl
dec
je
sbb
push
lock
sub
fsts
fldt
xchg
mov
sbb
pop
das
fisubrl
test
push
mov
cmp
push
cmpsb
stc
xlat
daa
std
pop
push
xor
sbb
jmp
cmp
xlat
mov
adc
movsb
dec
sbb
xor
popf
shrb
jae
les
push
sbb
xchg
push
mov
mov
loopne
dec
dec
call
cmp
xor
inc
lods
and
shll
popa
dec
mov
out
mov
jmp
ss
ds
xchg
sarb
sub
inc
and
inc
cmpsl
pop
cld
stos
push
pushf
insl
push
pop
push
mov
iret
add
xchg
pop
inc
cmp
adc
test
lock
mov
mov
mov
aaa
outsl
cmp
push
mov
js
scas
inc
sbb
cmp
aaa
xchg
daa
jge
call
das
pop
dec
mov
mov
push
movsb
cmp
mov
out
cmp
fcomi
inc
jl
push
cmp
test
lods
sti
mov
dec
bound
nop
cli
push
jnp
mov
jecxz
sbb
jmp
push
mov
aas
stos
sbb
repnz
test
je
jge
and
lods
adc
cmp
leave
sub
mov
nop
pop
je
and
push
and
rcll
mov
int
mov
movsb
and
cmpsb
sbb
imul
into
xor
fsubr
add
fistpl
jg
rol
sub
jb
jmp
xor
mov
shrb
daa
sbb
mov
mov
hlt
stos
insb
dec
fbstp
test
fprem1
sub
enter
xchg
dec
mov
sub
inc
dec
add
xchg
nop
or
std
jbe
movsb
les
sbb
sbb
and
ss
out
push
and
mov
out
cltd
push
imulb
jne
lds
shll
into
add
lock
fdivr
mov
inc
ljmp
adc
push
imul
sub
std
mov
insb
imul
scas
jbe
std
jecxz
jo
mov
ret
sub
or
sub
xor
mov
fcmovb
sti
jp
fwait
cmp
adc
mov
jle
cltd
xchg
daa
ljmp
int3
push
cmp
cmp
mov
cmp
sarb
push
push
rclb
outsb
mull
movsb
push
icebp
lcall
cli
or
pusha
repnz
inc
inc
push
push
es
das
and
insl
inc
jp
jge
xchg
rcll
ljmp
divl
pushf
add
out
cmpl
push
clc
cltd
jb
or
cld
inc
lock
mov
outsl
cmp
sti
dec
fistl
xchg
cwtl
sub
mov
sbb
jmp
pushf
popf
sarb
iret
cmp
jp
fcoms
adc
mov
add
mov
xchg
test
jo
and
loopne
stos
xchg
xor
sub
aaa
mov
ds
sbb
cmp
scas
push
mov
pop
cmpsl
push
fbld
push
dec
pop
scas
incb
push
popa
add
out
push
sbb
inc
test
sbb
mov
mov
jnp
out
cmp
jbe
test
xor
subb
push
movsb
mov
clc
js
les
lret
xchg
loopne
sbb
js
and
lock
jle
or
push
out
mov
mov
push
and
lcall
add
lret
ss
jp
or
stc
cwtl
pop
mov
shl
je
repnz
pushl
cmp
push
push
add
adc
test
sbb
mov
mov
cltd
xchg
push
cmpsl
mov
mov
add
sub
cs
sahf
cltd
xor
shll
bound
lock
dec
sub
jo
fmull
mov
pop
scas
gs
out
mov
mov
clc
std
dec
mov
pop
mov
cmp
aad
popa
push
sub
mov
mov
adc
insl
loope
pop
subb
scas
inc
js
adc
movsl
sub
movsb
rolb
jb
adc
fs
sub
push
nop
xor
jb
dec
fnstsw
or
cltd
cld
mov
push
mov
aad
mov
xor
and
ja
outsl
data16
shrb
ret
sub
fdivs
lcall
pushf
rcrl
mov
and
flds
outsb
fsubs
add
xchg
ja
shrl
lock
sub
out
fcompl
xor
mov
push
aam
das
jg
inc
lods
jmp
es
jo
test
fmull
add
mov
lcall
iret
insl
xchg
xchg
mov
outsb
in
stc
mov
in
push
push
mov
jo
xchg
jo
test
imul
addr16
sub
pop
scas
loopne
add
and
cmp
pushf
mov
aad
adc
out
filds
add
out
icebp
test
movsl
add
negb
mov
jne
and
or
add
dec
mov
add
cs
mov
sub
push
push
popf
jno
jp
leave
dec
push
and
lods
and
cmp
int
in
cwtl
gs
fs
mov
outsl
daa
xchg
fisttpl
add
sti
mov
insl
push
cmp
inc
mov
inc
jmp
fdivrl
repz
enter
loopne
and
or
out
jo
xlat
inc
inc
les
insl
dec
xor
xor
popf
clc
pop
mov
cmp
ds
jne
mov
lret
or
mov
push
popl
out
dec
mov
add
int
testl
scas
es
add
rcl
dec
sbb
inc
add
data16
jns
rol
jl
mov
outsl
jae
sbb
xor
add
subl
xor
mov
mov
test
xchg
mov
repz
scas
adc
xchg
jg
add
mov
das
lret
push
or
inc
std
push
lahf
jmp
clc
sti
sbb
stc
lds
icebp
lret
lahf
gs
mov
shlb
dec
pop
mov
mov
jb
faddl
add
cmp
push
add
shll
mov
roll
pop
lcall
addr16
push
dec
les
mov
js
jecxz
out
mov
leave
aam
pop
or
mov
or
and
push
xchg
movsl
in
cli
inc
scas
lods
das
inc
xchg
out
lods
int
int3
in
cmp
xorl
push
mov
int
adc
and
pop
frstor
out
in
xor
push
std
push
mov
mov
nop
pop
push
jb
sub
mov
outsb
popf
aad
sbb
dec
lods
fprem
fisttps
add
push
ret
push
out
fcmovb
xchg
call
and
pop
pop
mov
inc
adc
les
or
out
push
cmp
add
or
mov
xchg
cmc
stos
xchg
ja
pop
xor
and
fmull
mov
cmp
xchg
repnz
cltd
mov
mov
ret
pushf
out
sub
fnstcw
cmp
cmc
sahf
pop
out
lods
mov
adc
mov
xlat
int
sbbl
push
xchg
push
ljmp
or
rcll
pop
lahf
test
and
call
adc
push
ds
pop
xchg
xchg
int
subl
sub
aaa
iret
mov
jl
cltd
add
pop
sbb
add
mov
fstp
outsl
mov
cmp
fdiv
data16
ret
movsb
fs
pop
js
xor
push
push
dec
loop
xchg
add
daa
cmp
dec
dec
dec
icebp
imul
in
cmp
imull
inc
daa
cmc
jno
hlt
ret
movsb
add
mov
pop
adc
jp
in
push
fld
je
fsubrs
push
nop
push
clc
xchg
xchg
movsl
stos
push
or
scas
outsb
subb
mov
into
xor
into
leave
aas
fiadds
into
or
in
push
sti
fildll
jnp
pusha
push
pop
lcall
ss
and
out
mov
cld
xchg
mov
add
pop
jle
lods
inc
aaa
js
pop
jp
mov
mov
in
mov
push
mov
jge
fld
in
ret
add
cmpsb
push
ds
pop
pop
add
xor
jecxz
inc
nop
rcll
fnstenv
aas
fnsave
push
cwtl
cmp
pop
fs
sub
jb
xchg
popf
sub
or
ret
popf
push
cwtl
fstpl
inc
jmp
jne
or
mov
cpuid
push
dec
ja
jge
cmc
jecxz
insb
je
and
insb
clc
hlt
cmp
mov
call
or
pusha
mov
push
dec
mov
lcall
dec
jno
mov
rclb
jp
pop
in
imul
popw
jl
loop
mov
xchg
addr16
and
das
xchg
jle
mov
rclb
std
lods
pushf
repz
xor
in
mov
into
and
test
clc
sbb
mov
xchg
cwtl
mov
rolb
dec
or
pop
cli
mov
clc
pushf
inc
mov
fwait
or
clc
mov
cld
xchg
mov
mov
sub
mov
iret
cmp
mov
xor
and
in
idiv
iret
int3
sub
pop
js
pop
mov
addl
mov
lds
dec
sahf
sbb
popl
sub
fimuls
les
cmpsb
or
loope
push
mov
add
inc
cmc
loope
sbb
inc
sub
shl
jae
test
inc
repz
mov
cltd
scas
rcrl
add
xchg
lahf
and
sub
ret
je
into
push
sub
or
push
scas
mov
lret
cwtl
dec
cmp
imul
adc
add
mov
icebp
lret
rolb
out
jmp
out
daa
jns
mov
sti
int3
pop
cmp
out
imull
jbe
ret
xor
add
dec
xchg
xchg
inc
mov
xlat
mov
std
inc
faddl
pop
mov
dec
iret
inc
push
cmp
cltd
out
aam
pop
inc
mov
out
mov
or
add
ja
scas
sbb
push
ret
xchg
stc
sarl
mov
mov
scas
scas
xchg
hlt
xor
and
xchg
pusha
and
les
inc
rcr
jnp
dec
mov
cs
jp
mov
testl
adc
incb
arpl
inc
gs
xchg
mov
pop
mov
lea
in
movsb
dec
cwtl
lock
repz
push
xchg
scas
cmp
aas
and
imul
inc
pop
sub
cmp
jl
lds
fiaddl
dec
mov
sbb
inc
dec
out
loopne
add
test
loopne
neg
or
test
xchg
add
mov
lahf
daa
sarl
stos
xlat
imul
pop
rolb
nop
jle
and
out
pop
test
push
cmp
dec
outsl
push
or
add
adc
mov
cmp
adc
mov
sbb
insl
movsl
leave
in
cmp
jo
xchg
pop
fwait
push
push
lock
daa
outsl
or
mov
inc
pop
stos
test
xchg
cmp
push
mov
fmuls
fnstsw
nop
mov
negl
adc
popf
in
xchg
lahf
xor
mov
shlb
push
subb
jecxz
insb
dec
xor
gs
ja
or
das
in
into
outsl
rol
mov
mov
popf
mov
push
xor
dec
cltd
test
fcomi
rcr
mov
repnz
mov
notb
fwait
jp
sub
jnp
int
sbb
in
adc
sbb
cmp
fnsave
loope
cltd
movsb
int
cmp
mov
popa
shrl
fwait
inc
jo
fcmovu
xor
sti
or
daa
dec
sbb
pushf
push
pushf
shlb
cs
bound
cld
sub
cmc
in
lret
and
insb
nop
int
mov
push
mov
inc
bts
adc
pop
maxps
fnstcw
stc
dec
insl
push
scas
dec
inc
fnstenv
repnz
pusha
out
push
cmp
add
mov
xchg
cs
scas
sub
mov
js
lock
sub
int3
iret
xchg
push
in
ds
movsb
xchg
roll
xor
je
je
lds
sbb
sahf
insl
sub
in
addr16
jbe
aam
pushf
inc
imul
aas
ljmp
mov
lret
nop
cli
dec
int
mov
cmp
and
pop
mov
cmp
pusha
test
int
int
fimuls
xor
nop
fldt
cmpps
loope
ja
push
dec
jecxz
aas
mov
roll
dec
mov
out
xchg
lret
stos
in
test
scas
std
sahf
adc
std
insl
xlat
cmp
into
xchg
sarl
jbe
xchg
or
jecxz
sbb
cmovne
ss
adc
leave
inc
mov
mov
push
push
pop
addr16
dec
and
pop
cmp
out
shlb
jg
ljmp
xorb
mov
jle
sub
push
inc
sub
aas
push
mov
aad
fbstp
push
and
int3
adc
push
movsl
pop
push
rcrl
dec
jg
xchg
mov
std
sbb
pop
dec
mov
movsl
es
inc
hlt
insl
sub
and
sbbb
pop
adc
std
jmp
inc
pop
cmp
jno
fsubp
cmc
cs
jle
pop
fdivl
dec
push
pop
test
push
sbb
addl
inc
test
and
stos
pop
ja
movsl
mov
push
xchg
jmp
pushf
sbb
mov
je
aaa
ss
lret
pusha
sbb
ja
dec
pop
add
popa
pop
in
jecxz
pop
ja
jecxz
repz
push
arpl
ds
or
aad
push
out
cmp
aad
push
lcall
pusha
test
andl
jb
push
inc
jge
inc
clc
imul
repnz
cmp
dec
fwait
and
sbb
call
pop
loopne
inc
xor
and
std
pop
imulb
enter
cwtl
decb
fstp
cwtl
call
pop
push
insb
dec
pop
add
cmp
pusha
mov
mov
cmp
adc
push
ret
test
popf
mov
mov
pop
pop
xor
jb
shl
cmc
or
adc
jbe
call
dec
add
inc
insl
fmuls
loop
inc
adc
xchg
rorb
mov
dec
repz
bound
orl
jae
es
inc
adc
dec
mov
lea
mov
mov
dec
add
in
ss
out
lret
dec
xor
add
stos
out
push
xor
or
xlat
or
stos
jbe
inc
and
leave
iret
aaa
cmc
test
inc
sti
push
repnz
mov
shl
sbbb
ret
enter
loope
das
xchg
xor
test
or
xchg
repnz
lods
mov
aaa
pop
mov
xchg
aas
loope
push
xchg
lock
shlb
clc
jle
jmp
and
cmc
mov
mov
dec
mov
aas
and
xchg
test
sbb
ret
insb
jno
cltd
mov
ret
add
and
ficompl
pop
fsubrl
aam
stos
jp
and
xchg
mov
and
sbb
inc
fnstsw
and
fstpt
lcall
lds
cmpsb
stos
movsb
mov
scas
jge
pop
les
dec
daa
in
pusha
aaa
xchg
test
mov
out
popl
xlat
lds
sub
js
xchg
pop
jmp
int3
xchg
popf
repz
lret
mov
bound
in
push
xchg
jp
enter
rep
cltd
jb
icebp
ljmp
jp
pop
xchg
aad
lret
push
sub
xor
sub
icebp
and
sbb
lds
dec
cmp
fwait
lret
gs
sbb
int3
xchg
push
adcb
or
adc
les
mov
lcall
xchg
xchg
lret
es
jo
in
xlat
pop
jp
ljmp
jle
adcl
hlt
adc
cld
mov
sub
je
fisubrl
stos
pop
push
and
in
pandn
inc
lcall
or
mov
gs
lret
xchg
mov
lds
je
or
inc
mov
dec
les
andl
aad
jo
xchg
mov
sub
xchg
push
enter
inc
gs
adc
sub
mov
ss
cmp
ljmpw
out
adc
push
testb
ja
lods
inc
and
fstpt
lock
sub
lea
iret
jbe
cmp
cmp
mov
pop
not
incl
xchg
into
gs
int
and
or
test
fs
shll
dec
lcall
xor
arpl
daa
mov
xchg
subl
imul
arpl
mov
jmp
pop
inc
in
push
xlat
push
inc
add
punpcklwd
loope
insl
xchg
mov
aad
xor
cmp
les
lods
in
add
or
add
sub
leave
cmp
das
sub
push
shrb
ret
mov
in
dec
divl
jmp
xlat
xchg
inc
popf
xlat
adc
call
jne
fldcw
jb
and
jecxz
mov
dec
outsb
and
push
push
xchg
jle
pop
jns
bound
out
cwtl
pushf
int3
fbstp
push
sbb
add
leave
mov
jmp
dec
sub
cmp
hlt
add
push
or
inc
sbb
insl
insl
js
daa
cs
aas
jno
lcall
in
mov
pop
mov
or
imul
jae
jle
mov
xor
cmp
lds
fisubs
arpl
movsl
out
mov
sbb
jnp
lea
sahf
push
push
out
and
push
pop
mov
lahf
insl
push
pop
xor
add
and
ret
inc
fnstcw
cmpsb
xlat
xchg
and
mov
movb
or
mov
dec
insb
mov
lea
lahf
int3
cli
stos
in
hlt
sbb
dec
push
cmpb
jb
jnp
loope
in
lret
jae
xor
sbb
xlat
adcb
xchg
imul
stc
mov
cmp
cli
aas
ds
inc
dec
cld
js
cld
es
and
sub
cmp
sahf
into
cmp
jg
jno
fwait
lods
cwtl
fsubs
fcompl
cli
repz
or
xchg
notb
mov
in
popa
fstl
pop
jbe
add
cwtl
cmpsl
out
push
fcmovbe
negb
into
mov
inc
shrl
mov
movl
outsb
inc
sti
fistpll
ja
sub
cmpsl
rolb
cmp
pop
hlt
sub
test
enter
add
lock
adc
cmp
in
jo
sbb
aaa
mov
jge
cs
aad
push
sbb
cmp
sub
and
xchg
in
nop
mov
xchg
xlat
xor
xchg
or
jbe
mov
daa
outsb
xor
mov
sbb
mov
shlb
and
scas
xlat
dec
adc
or
or
adc
sahf
push
mov
cmp
mov
repz
sbbl
mov
outsl
movsl
inc
or
adc
xlat
jno
lret
cmp
out
insb
fcom
xor
jmp
xchg
adc
les
mov
mov
add
adc
inc
mov
scas
popa
cli
adc
fdivs
sbb
scas
icebp
jo
push
fdivs
lret
imul
or
into
xor
sub
mov
std
cmp
add
movsl
pop
xor
lea
iret
fisttps
jl
add
inc
inc
imul
lcall
ja
inc
lcall
popl
in
xor
pop
idivb
sub
int3
pusha
call
repz
mov
daa
les
test
andb
rclb
xor
enter
cld
subb
decb
mov
outsb
push
dec
push
out
rclb
lods
into
loopne
addr16
inc
in
mov
inc
imul
dec
push
fs
adc
sub
xchg
pop
popl
cmp
arpl
andl
popf
sub
add
mov
add
add
mov
xchg
mov
cmp
js
sub
dec
sahf
adc
outsl
push
pushf
cwtl
fidivrl
or
scas
in
inc
cwtl
mov
pop
inc
shlb
wbinvd
fwait
aaa
and
mov
mov
jne
popf
rcll
mov
sbb
xchg
bound
mov
cmp
lret
pop
outsl
mov
push
fcomps
ja
bound
fisttpll
push
cmc
daa
daa
and
aam
mov
dec
icebp
adc
popf
push
adc
andl
or
mov
stos
enter
sub
push
and
stos
jo
shll
inc
dec
add
inc
xchg
jne
push
nop
mov
and
shll
cmp
cmp
dec
in
gs
add
fmull
loop
xchg
pushf
pusha
dec
mov
adc
into
xor
sar
test
movsb
cmpsb
andb
add
mov
pop
cmpsb
fwait
xlat
inc
jb
dec
and
push
push
mov
addb
stos
loop
push
addl
out
adc
pop
or
pop
cmp
stc
pop
sbb
lds
lods
sub
inc
and
es
cwtl
dec
push
or
xchg
cmp
call
push
movsb
outsb
ss
call
pusha
inc
push
hlt
mov
aam
sub
push
jge
add
pop
repz
jae
pop
int
and
or
inc
push
sbb
sbb
js
call
lret
shl
loopne
mov
subb
or
pop
out
push
sar
xchg
push
out
cmp
mov
lods
cmp
mov
icebp
xchg
lods
fs
enter
xchg
add
pop
xor
imul
inc
hlt
or
lahf
lret
inc
fcomp
scas
adc
stos
test
sub
cmpsb
es
sarb
js
data16
out
xor
sbbb
mov
rcll
loop
sbbl
iret
lahf
xor
shrl
imul
test
into
adc
cli
jl
xor
arpl
sahf
jp
xchg
and
push
mov
xlat
fs
ljmp
dec
sbb
mov
test
sbb
into
pushf
sub
adc
jg
in
aaa
js
push
push
subl
mov
xchg
or
aam
jecxz
sbb
xchg
pop
loope
loopne
dec
xchg
shl
adc
push
test
pusha
sub
pop
dec
lret
pop
test
fwait
xchg
sbb
in
daa
repz
cmp
inc
and
loopne
push
call
pusha
mov
mov
pop
stos
or
daa
ja
push
leave
jmp
adc
dec
bound
adc
clc
int3
xorl
or
mov
xchg
sbb
sub
and
int3
icebp
rcll
or
lods
out
mov
test
js
cmp
fidivl
shll
jb
insl
and
lods
or
lods
mov
dec
sahf
out
mov
push
sti
sbb
adc
ret
cmp
fwait
xlat
dec
cmc
mov
jp
xor
fcoml
jmp
je
std
push
jbe
add
vmread
jle
hlt
sar
sti
cmp
inc
test
push
mov
jecxz
pop
ret
inc
cmp
add
mov
leave
jbe
out
fsubr
mov
mov
mov
imul
rorl
cmp
add
adc
insl
pushf
arpl
push
jmp
jle
mov
mov
pusha
cmpxchg
and
loop
scas
cmp
sub
cwtl
push
flds
clc
int3
or
pop
sbb
pop
push
popf
jle
lods
adc
mov
imul
cmc
lock
fcomps
test
push
in
pop
pop
mov
pop
bound
fsubrl
fldcw
cmp
test
mov
xlat
push
in
cwtl
sub
lock
addl
adc
push
pop
jnp
in
pop
cmp
fs
jmp
pop
insb
sub
dec
push
fst
mov
fcmovnu
lods
loop
aam
call
je
jne
sub
int3
xchg
clc
push
mov
fwait
insl
push
repnz
xor
cmp
stos
sbb
push
pusha
fmull
dec
xchg
sbb
sbb
pop
add
add
mov
or
sbb
and
loopne
xlat
push
cmp
repnz
int3
add
rcr
cmpsb
adc
cld
jns
cmp
adc
xor
push
shrb
jne
and
inc
iret
in
push
pop
lret
push
fsubr
mov
mov
orl
outsl
ss
add
rcll
xor
cli
daa
int
out
pushf
cmpsb
mov
dec
lret
push
sbb
clc
aad
xor
dec
jmp
xor
into
gs
push
leave
adc
insb
mov
xchg
adc
stos
loop
call
xor
adc
int3
jecxz
xchg
xchg
push
mov
inc
stos
mov
push
xchg
mov
and
mov
fmul
push
loope
push
and
mov
add
fcomps
cmc
mov
jnp
fcmove
shll
stos
insb
pop
pop
jno
js
mov
xchg
repz
lds
mull
or
icebp
lcall
xchg
in
mov
mull
std
xor
popa
dec
shrb
and
push
mov
shrb
dec
addl
cmp
cmp
bound
sbbb
scas
outsb
dec
enter
jno
mov
out
cltd
mov
das
sub
sahf
cmc
fnstcw
sub
push
xchg
clc
cmp
loopne
or
xor
cmp
inc
mov
xchg
sbbb
fmuls
test
jl
lret
dec
push
lret
adc
popa
out
repnz
sub
inc
loop
xchg
mov
imul
push
stos
in
mov
inc
ljmp
das
mov
add
jg
jno
jne
jecxz
movsb
movsl
das
into
pop
adc
mov
shlb
sbb
out
and
xchg
incl
inc
xchg
mov
push
addl
ljmp
lea
cld
push
rolb
mov
cmp
gs
adc
xor
clc
and
fnstcw
adc
adc
popa
cmp
and
or
outsl
cmpsl
mov
inc
cmpb
and
daa
sarb
sbb
insb
out
pushf
push
clc
add
out
in
shlb
inc
test
fmull
inc
pop
mov
xchg
mov
dec
and
stos
sbb
push
and
sub
not
mov
or
jmp
cvtps2pi
test
aaa
cmp
subl
or
or
stos
lahf
add
cmpsl
sub
insb
push
sub
sti
fsubrp
xchg
add
movsb
push
outsl
outsb
pusha
into
outsl
cmc
xor
test
insb
stos
cwtl
xchg
stos
xor
pop
xor
mov
sbb
stos
mov
ficoml
out
dec
std
xchg
pop
loope
fsubrl
scas
xchg
out
add
lds
andb
mov
mov
pop
ja
cmp
fwait
aam
push
pusha
mov
inc
loop
adc
and
inc
lret
mov
repz
hlt
scas
or
leave
inc
fldt
aad
mov
enter
xchg
cmp
imul
and
inc
adc
mov
mov
sbb
mov
add
cld
push
push
inc
xlat
add
mov
popf
cmp
fdivrl
jbe
sub
mov
icebp
adc
sahf
push
sarb
mov
sub
je
loop
jnp
fbstp
sub
test
cmp
jmp
sbb
cli
xor
mov
movsl
sub
adc
stos
sti
scas
popa
setno
adc
imul
loope
fcoms
shrb
fists
inc
shrb
ret
cmpsl
sub
daa
clc
jmp
push
inc
xlat
adc
adc
js
pop
jne
cmp
ds
cld
jl
sti
filds
sub
xor
jge
xchg
lret
xchg
data16
push
mov
or
or
pop
xchg
or
sub
fadd
dec
sbb
inc
imul
jg
out
push
or
loop
jl
cmc
decl
scas
or
cs
sarl
push
movsb
out
or
jno
lret
jg
mov
mov
xor
jle
std
iret
dec
mov
or
or
test
mov
out
add
and
dec
cmp
dec
insl
or
mov
lret
jae
cmp
push
mov
imul
jmp
jl
sti
into
adc
inc
or
mov
add
inc
sub
xchg
aas
mov
fimull
or
dec
xor
adc
cmp
push
test
scas
jo
cmpsb
adcb
inc
cltd
push
dec
sbb
xor
movsb
and
repz
idivb
cmpsb
mov
shll
and
movsl
cmp
jmp
movsl
push
call
add
out
cmp
outsl
lret
push
out
cmp
add
arpl
mov
imul
xor
std
adc
or
and
pop
pushf
xchg
imul
iret
cltd
pop
out
std
xchg
mov
fidivrs
push
pop
popa
sub
fmulp
addr16
jb
enter
add
cmpsb
es
xor
and
fmuls
or
stc
add
ret
or
sti
push
xchg
sub
mov
adc
cmc
jge
mull
daa
jns
add
sbb
imul
pusha
pusha
lods
add
xchg
arpl
mov
out
xor
xchg
iret
out
adc
lahf
movsb
in
lods
add
xchg
arpl
rclb
fiaddl
add
popf
stc
pushf
in
add
shlb
xor
jb
mov
arpl
cld
cs
fs
fidivrl
daa
xor
mov
out
imul
cmp
out
ret
mov
add
testb
cltd
and
inc
lea
and
push
jmp
pop
add
jne
cs
jae
push
jno
sbb
mov
jp
mov
shrl
mov
push
xchg
pop
push
ds
jge
sbb
ja
loopne
sahf
pop
xchg
add
push
scas
mov
sysexit
mov
scas
gs
mov
xor
xor
or
shll
mov
mov
adc
dec
movsl
stc
sub
std
cmc
in
lahf
movsl
loopne
lret
jg
cmp
mov
lods
ljmp
pop
pop
sti
fsubrs
inc
rclb
add
lret
hlt
xor
sub
pop
mov
sub
jae
inc
xor
mov
insb
jl
arpl
xor
adc
movsb
insb
or
mov
pop
xchg
dec
sub
into
je
push
leave
inc
and
fimuls
hlt
mov
fldl
sub
sar
jmp
aad
nop
repz
mov
out
pop
ja
xchg
xchg
aam
jo
out
mov
addl
mov
lock
push
mov
xchg
insb
sub
inc
adc
inc
and
xchg
xchg
cli
xchg
cmovp
jo
sub
int3
mov
test
pmaxub
stos
gs
out
addr16
push
mov
icebp
xorb
xchg
sub
in
nop
aad
pop
xchg
testb
add
or
popf
loop
pop
sub
sbb
mov
mov
xchg
add
mov
sbb
mov
pop
movsb
or
fwait
sbb
cmpsl
and
pop
fldcw
push
fsubrs
jns
rcr
daa
out
movsb
cwtl
cmp
jmp
ljmp
stc
lods
pop
push
or
lret
pop
js
test
xchg
xchg
xor
insb
dec
mov
xchg
icebp
mov
call
addr16
sbb
ret
jnp
loopne
mov
push
repz
sub
shrb
fadd
cmp
lcall
mov
xor
inc
nop
mov
fisubrs
pop
mov
mov
cli
xchg
inc
scas
push
icebp
stc
jmp
sbb
lods
jl
or
pop
push
pop
lret
lret
and
nop
and
stos
scas
pushf
cli
pop
inc
in
push
mov
sub
outsl
ljmp
xchg
cli
push
sub
jecxz
sbb
pop
mov
imul
jb
lahf
clc
dec
push
cmpsb
movsl
mov
pusha
dec
xlat
test
inc
es
sub
fwait
jge
and
xor
subl
scas
sbb
push
imul
mov
in
test
mov
cmpsb
cmp
ljmp
sub
inc
stc
xor
sbb
bound
ret
rorb
pop
out
mov
movsl
pop
lods
jns
outsb
lods
movsl
inc
sub
mov
inc
lahf
ret
mov
cld
sub
rcrb
inc
lds
imul
or
cmp
or
pop
mov
cltd
mov
mov
dec
scas
unpckhps
push
sarl
jb
jp
out
test
jns
mov
pop
add
mov
mov
dec
mov
dec
jmp
mov
enter
outsl
mov
xor
shlb
push
rcll
cmp
cmp
sar
jecxz
cwtl
shl
mov
stos
mov
ljmp
and
imul
xor
lea
lret
notb
sti
fimuls
es
aad
mov
xchg
push
sub
rcrl
pop
push
cmp
ret
or
push
cmc
orb
ds
push
jg
movsl
pusha
mov
xlat
push
push
dec
repnz
test
lret
pop
ret
dec
shll
mov
fbld
inc
sub
test
dec
fisttpll
nop
std
int
sahf
pop
mov
loopne
dec
cltd
add
call
mov
stc
dec
add
shrb
enter
stc
adc
add
pop
in
mov
nop
mov
shrl
push
jns
xchg
sub
in
or
xchg
cmpsl
out
scas
into
jge
fcom
cltd
sbb
cli
mov
arpl
nop
push
jne
in
cmp
adc
and
xor
outsl
mov
in
popa
stos
negb
fsubs
add
and
push
test
xchg
xchg
xor
int
imul
imul
and
pop
out
lea
add
cmp
mov
addr16
and
mov
enter
fsts
xor
mov
aad
lds
in
mov
mov
pop
fwait
mov
xchg
repz
mov
adc
cmp
ret
xor
and
xchg
cmp
jmp
dec
orb
pop
mov
inc
xor
adc
movsl
mov
cli
stc
into
pushf
cmp
and
jl
xchg
add
dec
cmp
into
je
push
push
cmp
and
loop
xor
mov
dec
ja
cmp
lret
outsb
stos
pop
mov
jp
jbe
mov
rcr
or
cmp
popl
stos
scas
push
fiaddl
fnstsw
sysenter
imul
ss
mov
inc
xor
shr
aam
lret
dec
aad
fucom
dec
leave
mov
cld
shll
repz
pusha
xor
mov
fmull
add
jnp
xor
xor
rolb
adc
std
sahf
cmc
fs
push
xchg
lds
cld
cltd
mov
mov
stos
mov
leave
call
xchg
imul
cmp
adc
cmpb
xor
xor
inc
and
imull
mov
cmp
inc
in
je
xor
mov
jo
test
jnp
mov
adc
mov
lds
enter
mov
adc
sub
aad
and
paddq
pop
jmp
popa
push
or
rorl
cmp
insl
mov
lods
sti
fisubs
adc
mov
adc
inc
mov
pop
das
mov
popl
popf
mov
fidivrs
enter
push
popa
jecxz
and
dec
scas
clc
mov
cmp
test
adc
rcrl
sub
fucomp
mov
dec
call
xchg
mov
fwait
lret
push
jle
mov
sbb
into
mov
sbbb
adc
int3
sbb
and
push
pusha
xor
push
xor
sub
inc
jl
je
mov
pop
push
mov
push
or
mov
cmp
cltd
cmc
push
popa
pushf
cwtl
in
xchg
iret
mov
repnz
sbb
aad
hlt
xor
adc
flds
dec
mov
jle
insl
jp
xchg
inc
ret
or
cmpb
pop
or
xlat
mov
jle
push
add
cmpsl
aas
mov
push
dec
in
aam
inc
pushf
or
push
add
mov
cmpsl
out
sub
xor
imulb
mov
fcomi
and
mov
clc
fstpt
xchg
sub
test
out
sub
lret
push
mov
dec
mov
push
sbb
std
lods
mov
xor
dec
add
in
inc
add
xchg
outsl
cmp
or
add
ds
hlt
jg
xor
inc
pop
cmp
cmpsl
arpl
mov
fsub
lock
xchg
lods
lahf
out
insb
jp
roll
scas
adc
mov
mov
scas
inc
jbe
mov
sub
fnstenv
outsl
pmaddwd
push
add
dec
lock
jbe
aas
cmp
clc
popa
in
push
pop
stos
dec
sbb
mov
ss
sub
sahf
mov
es
rcr
cmp
fcomps
mov
lds
jno
cmp
outsl
xchg
into
data16
lods
jbe,pn
cmp
and
popf
mov
xchg
dec
sbb
push
xor
jo
mov
ljmp
fnstsw
and
popa
popa
mov
jl
sub
mov
adc
outsb
pop
xchg
shl
mov
add
fists
mov
xor
mov
imul
ficomps
fcmove
mov
imul
cmp
xor
adc
cmp
sahf
mov
or
adc
cli
dec
ret
push
mov
div
movsl
andl
loop
push
pop
loope
fstpl
or
jmp
xor
popa
sub
cwtl
xchg
lock
xchg
inc
mov
add
and
mov
mov
jmp
jbe
stos
mov
adc
xor
pop
mov
stos
out
and
sub
cs
cmp
popl
push
xchg
out
fwait
jo
fcmovu
out
pop
jne
mov
lods
aam
push
mov
je
dec
fcoml
dec
cmp
lret
pop
push
pushf
cli
arpl
dec
dec
popa
mov
icebp
aas
sbb
or
adc
cli
in
addr16
adc
dec
clc
pop
dec
dec
out
std
pop
cmp
shrb
dec
xchg
inc
cmpsl
std
ja
pop
cmp
sub
shrl
mov
inc
push
icebp
aas
out
stc
out
sub
pop
push
movsl
mov
mov
dec
shrb
dec
sbbl
repnz
popf
popa
or
lods
outsb
xchg
lcall
ja
xlat
arpl
jge
and
sub
sbb
out
mov
sub
cmp
xchg
add
push
push
and
dec
popa
and
js
rclb
lock
inc
jecxz
movsl
push
add
push
mov
pop
ljmp
push
fwait
cmpsb
mov
lods
and
sub
js
bound
pop
daa
push
xchg
adc
xchg
mov
add
repnz
enter
es
and
xlat
insl
pop
xchg
cmp
cmp
and
and
out
int
popa
mov
cltd
xor
insl
jbe
dec
push
fcomps
leave
or
cmp
popf
and
rcrb
lock
lcall
enter
xor
loopne
call
std
lea
sub
and
call
negb
mov
adc
in
aad
testb
je
dec
int3
aaa
mov
sbb
and
lcall
stos
xchg
mov
call
int3
jmp
ret
mov
inc
cmc
or
pop
xchg
icebp
cmp
int3
in
dec
and
mov
cli
add
shlb
jle
cmpsl
dec
loope
dec
lcall
shll
dec
outsb
hlt
out
sub
and
add
pushf
jl
call
sbbl
pop
fwait
mov
sbb
imul
xchg
cmp
and
not
cmp
mov
into
cwtl
sbbb
fidivl
inc
and
stc
mov
mov
ret
cli
shlb
xor
jg
jl
mov
aam
xrelease
mov
movsb
inc
sbb
and
rcll
arpl
fnstsw
mov
sbb
js
jnp
daa
lock
lea
sti
call
stc
adc
addb
in
int3
cmpsl
xorl
jbe
add
pop
cli
les
mov
int3
dec
or
push
jne
popf
mov
mov
rep
mov
add
nop
dec
aas
lods
sub
fadd
out
adc
cld
pop
pop
pop
movsl
aas
pop
sub
test
movsl
cmp
push
stos
inc
imul
ljmp
insl
mov
xor
xchg
push
dec
pop
cmp
aam
cmp
cmc
enter
xchg
daa
xor
sbb
testl
fbstp
and
inc
mov
fldcw
mov
add
and
jecxz
movsb
jns
mov
jmp
cmovb
icebp
dec
dec
ja
jnp
sbb
mov
dec
jnp
adc
dec
and
cmp
xor
cs
lret
sbb
sub
decl
and
lret
mov
xchg
fdivrs
mov
adc
push
sahf
gs
pop
mov
ljmp
imul
movsb
imul
mov
pop
test
xchg
ja
and
mov
mov
jmp
add
cwtl
repnz
adc
popf
xchg
inc
jo
xchg
int
push
mov
inc
add
dec
inc
call
leave
int
lods
stc
lods
repz
pop
xor
pop
ss
mov
mov
dec
and
mov
pop
enter
lock
movsl
gs
lahf
jbe
mov
mov
adc
cmc
bound
or
sub
rcll
mov
les
xor
jbe
mov
mov
mov
jge
xchg
push
rcrb
xlat
mov
adc
inc
fwait
push
sbb
sahf
fdivl
or
xor
ret
xchg
push
inc
int
js
push
cmp
cmp
sub
stos
adc
cwtl
add
mov
adc
inc
xor
xlat
pop
je
inc
movsl
addb
dec
mov
dec
dec
cmp
orb
jno
cs
jae
sbb
ja
fwait
push
test
cmpsb
and
sbb
pusha
sbb
jae
fucomp
movsl
xchg
inc
subl
repnz
sbb
andl
nop
fisttpll
mov
ret
jp
dec
mov
and
or
xor
cmp
repnz
or
xlat
inc
jnp
jnp
inc
jbe
movsb
insb
xchg
ss
fimuls
dec
cmp
cmpsl
jp
mov
sti
sbb
shll
xor
dec
fs
push
lods
dec
int3
push
outsb
or
in
mov
clc
mov
xchg
cmp
cmp
sub
jmp
ret
ret
xor
lock
stc
mov
inc
pop
jg
flds
std
and
imulb
dec
test
xor
aas
rcrb
adc
sbb
icebp
mov
mov
jmp
rcrb
lret
mov
adc
mov
dec
cmp
outsb
xlat
pop
stos
imul
cmp
jns
sub
les
mov
mov
lret
push
xor
add
xor
ja
mov
shrd
cmpsl
mov
or
in
sbb
dec
pop
cmpsb
incb
outsb
neg
lds
pusha
sbb
jns
cmp
pop
push
or
les
das
repnz
fs
xchg
inc
pop
jmp
cmp
jns
push
inc
addb
lods
jmp
addb
cmp
fisubrl
xchg
int3
mov
jg
mov
repnz
lret
adc
jmp
imul
jae
filds
outsb
and
adc
push
jns
push
pushf
pop
inc
movsl
mov
mov
add
xlat
sub
adc
outsb
sbb
cmp
xchg
iret
les
pop
xchg
test
lret
pop
and
int3
lock
pop
sub
xchg
out
mov
pop
dec
sub
adc
shlb
add
jecxz
or
sbb
loopne
mov
push
push
inc
loopne
cmp
test
sbb
mov
ds
or
inc
mulb
cmp
negb
mov
nop
or
mov
mov
repz
loope
adc
mov
mov
or
cmpl
pop
hlt
imulb
repnz
loope
or
xor
movsl
mov
popa
and
addr16
leave
vmovq
and
push
inc
js
push
aam
mov
pop
push
mov
imul
cmp
das
pop
dec
ret
xor
cmpsl
fs
mov
sbb
nop
loopne
xchg
or
les
sub
repz
mov
call
scas
push
cwtl
jmp
and
jg
add
push
bound
mov
push
insb
sbb
mov
adc
aad
mov
test
popf
call
cmp
ret
inc
popa
bound
inc
pop
mov
inc
mov
xchg
or
xchg
xchg
xor
push
mov
rolb
scas
add
xor
sub
test
sar
shr
xchg
repz
sub
enter
mull
add
xor
sub
mov
mov
push
rcrb
push
lret
mov
fstl
cwtl
ss
out
jbe
test
push
mov
mov
cld
mull
nop
mov
int3
sbb
mov
test
outsl
cmp
test
das
cltd
lahf
jbe
test
das
pop
lahf
sub
in
push
or
std
loop
movsb
sar
cs
out
cmp
aam
xchg
ret
mov
fistl
aad
sbb
sub
dec
dec
adc
lret
faddp
mov
enter
outsb
lods
and
in
sub
sub
push
in
add
les
out
jp
inc
pop
dec
movsb
lret
inc
push
xlat
dec
in
mov
sti
push
sbb
mov
xor
or
inc
iret
inc
jecxz
jge
sbb
sub
push
adc
push
push
mov
in
dec
or
dec
xor
jns
add
xlat
push
and
mov
pop
ss
loopne
sbb
add
mov
aam
int
and
pop
cmc
aaa
adc
jb
inc
pop
arpl
iret
lds
jge
lods
jns
push
xchg
pop
aam
mov
shll
pop
cmp
daa
jno
addb
fucomp
xchg
jbe
cld
or
dec
inc
jl
fwait
inc
lcall
jl
outsb
fs
sbb
lret
sub
btc
jg
out
test
mov
cmpl
pusha
pop
mov
push
mov
shlb
pop
sub
icebp
ljmp
jle
push
aas
jp
pop
jp
dec
cwtl
xchg
fcom
xor
out
mov
and
test
mov
jbe
jg
mov
cmp
in
stos
fldt
dec
in
fidivs
xor
sbb
test
mov
jne
lret
test
inc
mov
dec
dec
push
shll
mov
jne
jmp
push
cld
jno
cmp
aas
popa
leave
pop
adc
inc
and
testl
dec
sub
arpl
mov
xchg
xchg
stos
mov
pop
pop
pop
pusha
lcall
ror
stos
lock
rclb
cmpsb
test
repnz
pop
lret
jo
repz
xchg
push
xor
and
dec
add
or
push
mov
das
pop
popa
scas
dec
mov
mov
fsubrp
das
or
pop
sbb
mov
sub
mov
xor
cwtl
xchg
shl
sbb
aaa
cli
sbb
or
inc
jnp
and
adcb
test
pop
adc
pusha
imul
rcrl
aad
stos
pushf
mov
xchg
or
jmp
scas
pop
cmp
and
jge
add
mov
sbb
fsubs
xor
cmp
fcomip
rcrl
sahf
xchg
loopne
rcll
pop
mov
push
cmpsb
insb
jbe
adc
cmp
repnz
mov
aas
cmp
xchg
push
fs
mov
jne
jecxz
jne
xchg
test
lcall
aas
inc
je
loop
xlat
pop
lret
push
nop
lods
in
pop
lret
loope
repnz
sub
or
fisubs
ss
mov
and
adc
das
gs
adc
xor
fdivs
outsb
jns
push
popa
aas
lcall
aam
imul
aaa
je
pop
sbb
dec
mov
jl
sub
int3
push
pop
aaa
out
in
mov
xor
or
int
push
rorl
push
pop
jmp
dec
test
inc
mov
es
inc
pushf
ja
mov
jecxz
inc
lods
mov
jb
lods
repnz
lods
mov
test
testb
ret
or
inc
push
test
mov
nop
xchg
bound
outsl
adc
cmpl
sub
inc
imul
mov
lea
in
stc
push
adc
mov
mov
mov
jae
outsl
jl
cmp
pusha
cmc
in
and
jae
pop
pop
dec
std
popf
jl
sbb
jo
inc
pop
lds
sahf
push
movsl
sbb
fwait
xor
jecxz
pop
mov
push
pop
mov
adc
mov
mov
jo
xchg
icebp
mov
fwait
aas
sbb
or
iret
or
insb
jge
pop
push
xorb
or
cmp
pop
shrl
fisubrs
xor
dec
movsb
fwait
inc
push
popa
add
xchg
loope
into
inc
adc
adc
push
cmp
jno
sub
faddl
in
and
jnp
test
ss
push
ret
or
ret
or
lret
mov
sbb
pushf
and
adc
out
dec
push
add
pop
cmp
mov
mov
shll
ds
ljmp
jbe
pop
stos
xor
bt
mov
push
mov
out
out
shll
push
out
repnz
mov
push
inc
icebp
cmpsl
loopne
add
mov
add
push
jmp
or
ja
repnz
int3
icebp
mov
fucomi
jecxz
fwait
or
inc
xlat
or
xor
mov
mov
das
mov
pop
sbb
pop
nop
test
push
icebp
pop
out
and
or
push
or
sti
out
xor
mov
mov
test
mov
cmp
inc
sbb
ds
in
roll
lods
mov
sbb
push
out
jp
xor
jl
and
lods
std
jge
add
push
movsl
scas
jle
pusha
mov
lret
sub
jnp
in
cmpsl
vcvtdq2ps
or
out
push
enter
std
adc
sub
mov
pop
mov
int3
add
mov
call
das
and
aam
jecxz
int3
fwait
mov
pop
jge
sub
jp
mov
inc
bnd
insl
lahf
jnp
std
pop
cli
pusha
and
inc
mov
dec
loop
mov
jmp
xor
xor
mov
xchg
out
and
pop
push
sti
cld
push
jae
repnz
adc
scas
mov
icebp
out
xchg
clc
movsl
fsubp
in
cmp
dec
jo
fwait
xchg
xchg
in
sub
ret
ret
dec
push
jbe
or
into
loopne
xchg
fcoml
loop
repnz
fs
lock
shrb
outsl
add
clc
out
sti
stos
mov
or
or
jns
stos
xchg
xchg
iret
adc
xchg
fsubr
adc
xchg
in
in
es
adc
or
fwait
iret
dec
xchg
and
cmp
mov
sub
inc
neg
sub
js
jno
pushf
push
enter
xchg
fdiv
das
fcmovnbe
pusha
mov
lock
inc
cmp
mov
popf
push
inc
aam
inc
push
and
add
loop
pusha
xlat
cmp
jg
nop
std
xchg
mov
adc
fwait
jnp
dec
xor
or
sti
mov
push
mov
push
sbb
pop
dec
sbb
xchg
pop
aad
or
lock
mov
in
ret
aad
test
imul
and
scas
in
sub
jp
mov
clc
scas
cmp
xchg
ja
pop
push
inc
add
pop
pop
in
mov
cld
imulb
add
outsl
pop
test
mov
shll
push
rclb
xchg
cmpsl
int
hlt
sahf
xchg
pop
mov
or
adc
jne
bound
adc
sub
leave
incb
pop
sbb
pop
mov
push
data16
data16
fimuls
pop
mov
into
nop
jns
js
fisttpll
cmp
bound
mov
pop
aaa
sub
loopne
testl
inc
movsb
pusha
mov
mov
ds
mov
dec
mov
mov
in
arpl
jbe
aaa
je
cmp
sbb
mov
cmp
into
popf
mov
cs
int
popf
es
sarb
jb
add
mov
call
cmp
repnz
and
inc
das
out
and
sbb
fsubrs
fwait
scas
mov
sub
cwtl
push
sarl
adc
aam
sti
mov
movsl
lret
mov
add
xchg
mov
push
adc
fcoml
jae
stos
loope
fistps
int3
scas
subl
mov
add
cmp
adc
mov
inc
loope
enter
cwtl
pop
outsb
dec
in
rolb
or
in
sub
dec
daa
pop
push
xchg
pop
sar
js
pushf
jl
shlb
sub
out
xor
lds
cmp
adc
clc
sbbl
scas
cmp
test
inc
rorb
xchg
xchg
sahf
push
mov
sbb
dec
adc
xchg
daa
test
add
aad
ljmp
int
add
leave
pop
insb
and
inc
jp
xchg
addr16
cltd
add
jle
test
fdivl
nop
push
jmp
std
push
std
add
push
or
push
and
mov
jnp
pop
and
stos
testl
add
push
adc
das
mov
pop
xchg
aam
les
sarl
push
inc
inc
jne
sub
inc
or
aad
lret
xor
dec
jnp
cmp
ficoml
dec
pop
cmp
xchg
cwtl
movsb
pop
mov
add
mov
and
mov
adc
test
imul
or
push
in
jnp
dec
fnstsw
pop
popf
ret
mov
in
fwait
pop
add
push
aas
add
imul
dec
mov
mov
aam
mov
aaa
pop
adc
adc
adc
jg
nop
into
scas
cmpsl
enter
addl
xchg
dec
add
pop
fcoms
stos
jno
sbb
lret
jnp
mov
mov
xor
cmp
jne
out
push
jmp
adc
and
divb
popf
sub
rcrb
push
cmc
pushf
iret
dec
inc
push
mulb
xor
pop
pop
iret
mov
js
inc
out
jns
jecxz
push
cmp
std
ret
mov
subl
add
dec
int3
fsts
pop
cmp
xchg
push
stc
jns
mov
mov
out
sub
and
iret
aas
movsl
mov
inc
addr16
insb
jae
pop
icebp
mov
in
addb
sub
imul
xchg
loopnew
cli
inc
ret
push
sub
jle
and
xor
mov
pop
test
sub
cmpsl
xchg
repnz
loop
mov
mov
dec
jb
loopew
adc
jmp
scas
mov
popa
pusha
outsl
mov
int
and
jg
sub
cli
hlt
sbb
mov
dec
loopne
ds
and
lds
movsb
scas
idivb
push
inc
pop
sarl
mov
in
inc
push
lret
pop
int3
sub
xchg
push
xor
mov
int
lods
adc
ss
mov
pop
sub
hlt
jb
xchg
into
daa
mov
int
fldt
mull
sbb
ds
inc
mov
mov
scas
xchg
mov
fdivrs
imul
adc
xchg
stos
roll
and
xor
mov
rclb
pop
cmc
lcall
mov
mov
adc
adc
mov
mov
pop
push
jle
xchg
mov
hlt
mov
push
incb
adc
mov
sahf
lahf
ljmp
and
push
cmp
aam
xchg
xchg
and
dec
xor
lcall
pop
jno
cmpsw
xor
push
insl
data16
xchg
test
pop
push
push
lahf
mov
testl
js
nop
jns
mov
shr
mov
outsb
test
aas
xchg
std
cmp
xlat
pusha
in
pusha
sub
sti
shl
cmpsl
inc
xchg
je
mov
insb
xchg
movsb
std
push
insb
js
loopne
std
inc
orl
dec
pop
imulb
sub
or
mov
jecxz
out
ds
inc
cmpsl
into
sub
add
mov
xchg
sbb
pop
js
test
mov
xor
addl
jns
ja
cs
hlt
orb
into
jno
inc
push
rdmsr
jge
sbb
adc
pop
jne
imul
pop
out
shlb
sahf
je
mov
lcall
cmpsl
push
mov
pop
xchg
lods
std
and
inc
bound
add
leave
dec
rcrb
fildll
les
or
pushf
jno
xchg
test
daa
test
fmull
adc
in
outsl
cmp
out
arpl
pop
lea
data16
ficompl
mov
cwtl
decb
jp
gs
mov
xchg
add
shrb
shl
jb
inc
mov
add
jne
cmp
jg
bound
lock
and
add
inc
data16
out
sti
adc
cmp
push
test
mov
ljmp
leave
jge
jmp
fwait
andl
dec
loop
negb
rclb
adc
pop
mov
data16
sbb
jmp
xor
ds
sub
xor
add
or
add
lcall
call
pop
mov
dec
mov
and
mov
adc
cmp
xorl
and
push
jno
inc
in
roll
fdivl
sub
or
pushf
loope
and
inc
je
fmull
addr16
int3
cmp
mov
or
inc
inc
xchg
mov
je
and
pop
stos
fimuls
mov
inc
inc
lea
and
adc
add
lea
bound
stc
roll
addr16
ret
jo
mov
adc
sahf
in
inc
in
rcll
pop
dec
pop
push
out
mull
pushf
daa
adc
inc
mov
xor
in
data16
push
loop
hlt
fs
adc
pop
ret
inc
fistpll
pop
clc
in
push
mov
dec
mov
je
sar
jae
pushf
xchg
popf
xchg
mov
dec
dec
addb
out
dec
cmp
push
les
daa
lcall
sbb
mov
jg
pop
and
mov
idivl
shl
aas
push
pop
test
es
cmp
add
addr16
movsl
repnz
mov
and
and
pop
mov
mul
xchg
outsl
shlb
movsb
pop
test
mov
cmpsb
xor
mov
mov
aad
cli
add
xor
xchg
dec
or
push
mov
cmp
imul
shll
cltd
xchg
jle
jae
imul
adc
pop
jmp
pop
das
clc
iret
scas
dec
dec
push
out
lock
insl
ficoms
pop
cmp
sahf
ja
cmp
arpl
out
adc
movsb
mov
lds
and
es
jne
xchg
mov
and
and
adc
in
shrl
or
test
jae
imul
lret
mov
imul
ds
dec
out
mov
sub
xchg
aaa
int3
sbb
addb
push
or
xchg
inc
rcr
fstpt
adc
jns
scas
dec
mov
lret
adc
add
adc
addr16
icebp
adc
outsl
mov
aam
popa
push
fildll
sub
lea
cmpsl
jecxz
fsubr
movsb
and
pop
pop
mov
inc
push
ss
adc
pop
add
insb
repz
and
ljmp
push
clc
outsl
or
cmc
decb
or
shr
cmpsl
pop
pop
cmpb
lret
cmpsb
mov
pop
pop
ss
mov
add
xchg
push
rorl
fcmovu
jp
iret
cmpsl
fisubl
shll
xchg
fidivs
add
in
bound
arpl
outsb
cmp
ret
lahf
cwtl
outsb
jle
xchg
cmp
cmpsb
stc
or
push
pushf
adc
xchg
fimuls
addr16
imul
mov
xchg
or
enter
adc
or
xchg
add
ljmp
movsl
frstor
dec
shr
jno
popa
pusha
jbe
pop
ficoms
push
jb
popl
adc
nop
jp
lods
pop
pop
dec
jnp
sbb
adc
in
fisubl
lret
cwtl
pop
adc
not
and
xor
mov
out
insb
cltd
cmp
enter
mov
fs
add
shll
je
mov
loope
or
jle
ficoml
jp
lret
add
leave
jge
xchg
mov
leave
cs
push
inc
sahf
loop
sub
test
stos
lock
mov
idivb
insl
inc
jno
das
icebp
mov
cmp
sbb
adc
jbe
cmp
and
and
test
cmp
jo
out
or
push
inc
sti
mov
sarb
movsl
and
jnp
or
lret
lds
dec
shlb
imul
sub
xor
jb
mov
mov
clc
mov
or
lcall
add
inc
bound
cltd
mov
into
lcall
pop
push
mov
xchg
stos
fwait
pop
out
cmp
addr16
fidivrs
mov
movsb
mov
idivl
arpl
ficomps
mov
aam
lods
jae
pushf
sub
test
lods
and
adc
push
pop
cmpsl
or
mov
fadds
enter
dec
jle
mov
xor
jns
add
xor
lcall
mov
mov
ret
sbb
inc
aaa
jp
add
or
mov
jp
sbb
or
icebp
imul
bound
out
gs
cmp
cli
adc
sub
dec
ds
xlat
cmp
or
jmp
mul
dec
cmp
in
jle
cmp
insl
mov
cmp
in
repz
push
mov
jae
in
xor
add
test
or
mov
xor
mov
cld
jmp
add
mov
addr16
out
pop
aad
cmp
mov
adc
lcall
mov
mov
and
mov
ja
mov
sub
mov
frstor
fidivrl
mov
rorb
ja
fmuls
cld
lret
mov
xchg
pop
sbb
orl
xor
adc
aas
test
xchg
fisubl
lock
int3
std
mov
aam
inc
jns
and
adc
call
mov
mov
push
or
lcall
and
test
addr16
and
jge
push
lret
inc
mov
jo
jns
pop
dec
jl
bound
div
movsl
lcall
inc
ds
jb
mov
inc
sarl
and
and
add
pop
lea
inc
fs
sti
mov
add
sahf
xchg
int
mov
jbe
mov
js
out
ret
aam
pop
stos
add
into
movsb
push
xchg
sbb
mov
or
repz
sub
ret
sub
out
xchg
shl
inc
mov
cmpsl
lcall
cmpsb
int
enter
adc
push
dec
dec
ja,pt
in
cmc
sub
add
imul
dec
mov
push
mov
shlb
jns
movsbl
shll
stos
push
movsl
mov
je
mov
jb
adc
mov
mov
std
xchg
adc
push
icebp
adc
pop
mov
in
mov
iret
js
inc
xor
mov
jg
dec
je
jmp
sbb
lods
cltd
sub
push
push
mov
rcll
jne
fnstenv
enter
push
aaa
and
add
popf
mov
frstor
inc
ljmp
out
fbstp
mov
adc
lret
int3
ds
filds
ja
jmp
xchg
je
push
push
mov
jp
jl
inc
imul
lahf
mov
aaa
ficompl
lock
or
call
lods
cmp
cli
scas
xchg
ret
adc
fisubl
adc
fidivrs
test
mov
pop
mov
lds
cmp
fstpt
lahf
aas
push
mov
pop
movsl
icebp
pop
and
pushf
scas
fstpl
dec
mov
stos
int3
xchg
inc
sub
push
push
data16
pop
adc
pop
push
shlb
inc
mov
or
cmpsl
outsl
subl
dec
add
jge
and
pop
jmp
mov
xor
js
enter
xchg
adc
ds
mov
testb
push
inc
xchg
mov
rcr
fs
std
push
jno
sub
icebp
jp
loopne
cs
lea
xor
pop
mov
push
ret
cltd
out
data16
sub
dec
mov
mov
sub
shlb
cltd
inc
cmp
jl
ja
test
loopne
cli
out
repz
clc
pop
add
stc
inc
jbe
lcall
xchg
and
movsb
shll
arpl
push
cs
dec
sub
ret
ss
les
pop
shll
xlat
fildll
push
mov
jo
stos
movsl
cli
stos
outsl
cmp
cmp
xchg
mov
loop
sub
xor
mov
xlat
mov
scas
cmp
jg
gs
mov
roll
xorb
adcb
sub
iret
insl
pop
int
inc
inc
nop
mov
lcall
xor
xchg
jae
xor
sahf
dec
dec
dec
mov
xchg
cmp
imul
test
adc
cmp
adc
jb
je
jb
es
je
out
xor
iret
ret
add
sbb
dec
jmp
mov
aam
ja
push
lret
int
imul
sub
mov
mov
stc
imul
jp
cmp
mov
cld
push
jae
mov
pop
inc
fwait
stos
leave
sbb
inc
cmp
pop
dec
sbb
push
adc
mov
sahf
out
adc
mov
or
sub
iret
mov
mov
int3
sbb
sub
cltd
xchg
data16
pop
imul
mov
cmpsl
addl
sbb
sub
mov
mov
filds
mov
icebp
outsb
pop
mov
pop
jae
lods
pxor
push
xor
xchg
xchg
cld
push
scas
ja
movsl
shl
push
mov
imul
nop
pop
pop
inc
cmp
inc
call
mov
inc
jb
rcrl
nop
inc
inc
mov
mov
imul
bound
adc
sub
mov
call
mov
sub
loope
out
add
int
ljmp
push
inc
inc
push
lahf
pushf
push
aam
xor
adc
sub
xchg
test
push
push
jl
lock
pushf
adc
pop
hlt
jecxz
cli
cmc
aaa
lock
scas
test
dec
je
and
pusha
xor
lahf
xchg
inc
adc
mov
push
lcall
inc
mov
ja
sub
in
aad
or
std
mov
sub
outsb
rorl
mov
popf
cs
xor
xor
or
mov
addr16
bound
xchg
scas
rorb
js
rcrl
push
push
jp
lock
mov
inc
mov
out
dec
sub
and
pop
mov
in
or
inc
jbe
sub
arpl
enter
jo
xchg
int
mov
mov
xchg
inc
addr16
fidivs
pusha
xorb
jge
repz
push
mov
xor
pop
jne
xchg
sbb
mov
test
push
inc
mov
cmpsl
mov
ljmp
jae
lcall
jg
int3
jg
mov
adc
movsl
sbb
sbb
shlb
gs
push
jmp
jecxz
ljmp
mov
in
fbstp
sub
imul
sbb
enter
leave
movsb
mov
int3
adc
adc
lods
inc
add
sbb
enter
les
lods
stc
xchg
add
cmc
in
test
call
cwtl
add
and
mov
enter
ds
push
scas
mov
dec
mov
xchg
push
inc
ret
ljmp
jno
push
or
gs
jnp
sub
add
test
test
out
sti
mov
mov
stos
sbb
cmp
mov
leave
idivl
jns
push
leave
push
push
lea
jmp
aaa
or
je
shr
lods
mov
std
mov
cmpsl
pushaw
sbb
enter
pusha
cltd
jno
sbb
inc
scas
dec
sbb
inc
jg
sub
mov
enter
push
pop
push
sbb
mov
jl
jle
cmp
sbb
cmova
jnp
lods
les
or
pop
addb
dec
jl
hlt
cmp
lea
mov
lcall
inc
cmp
test
jle
lret
xor
xchg
cld
push
repz
lea
call
sub
dec
sub
add
adc
dec
adc
or
or
mov
iret
outsl
xchg
ds
mov
lods
pop
pop
mov
outsb
mov
cmp
add
push
pop
cmp
mov
cmpsb
xchg
sbb
mov
sub
push
fnstcw
es
ja
dec
xorb
xchg
cltd
movsl
icebp
pop
or
sbb
divb
dec
movsl
jae
or
dec
jnp
cwtl
fwait
movsl
cmp
jmp
in
stc
sbb
leave
xchg
into
movsl
mov
mov
pop
in
dec
ret
into
leave
cmp
sbb
jl
negb
cld
push
icebp
sbb
stos
add
mov
adc
pop
pop
rcrb
inc
jle
pusha
add
inc
arpl
add
fiaddl
orl
xchg
and
sbbb
rclb
int
fucomip
mov
lcall
imul
movsl
fldenv
insb
push
jg
pop
inc
out
adc
xor
int
mov
adc
aad
or
aam
sub
mov
ret
mov
cmp
pop
fcomi
mov
loop
fiaddl
adc
xor
mov
adc
js
xor
stc
enter
fstl
nop
pop
jl
das
aas
inc
mov
lcall
jbe
or
push
cltd
mov
divl
inc
mov
daa
stos
mov
pop
int3
sbb
imul
out
or
rcrl
inc
cmp
and
mov
es
xchg
inc
shlb
adc
and
cmp
mov
pop
fadd
cs
mov
shll
lcall
xchg
aaa
push
push
in
xchg
inc
xor
sbb
mov
push
stos
ret
dec
xor
mov
pop
lea
pop
xchg
adc
adc
mov
stc
dec
cmp
sub
mov
push
test
push
sbb
gs
ficoml
cltd
popa
shlb
bound
iret
mov
cli
fwait
subb
les
xchg
das
lahf
pop
cmpb
cmpsb
jae
mov
aad
bound
mov
dec
lea
push
incl
cmp
push
sbb
ficomps
cmp
out
repz
jbe
sub
ss
sbb
fs
movsb
pop
mov
std
test
ds
ja
mov
lds
jae
mov
loopne
add
mov
popa
arpl
mov
cld
mov
push
dec
inc
les
xchg
leave
hlt
clc
sub
jl
adc
mov
hlt
les
dec
pop
xor
mov
mov
xchg
repz
sbb
jbe
sbb
or
push
loope
inc
pusha
mov
scas
mov
cmp
mov
cltd
in
sub
xchg
mov
mov
jae
cli
ret
xchg
xlat
in
daa
or
sbb
pop
cmp
push
mov
das
or
adc
cmc
mov
scas
xchg
std
outsl
into
or
subl
push
and
cmp
inc
push
sbb
loope
mov
push
push
out
stos
xor
sbb
hlt
repz
jg
icebp
adc
mov
push
mov
fsubs
adc
sbb
inc
daa
lahf
inc
daa
mov
mov
fcomps
cli
xchg
fnstenv
mov
imul
arpl
imul
sub
inc
xchg
mov
decb
jp
mov
lock
xor
push
and
push
inc
jnp
lock
shl
add
mov
pop
iret
leave
data16
outsl
lret
add
mov
xchg
imul
call
dec
aam
and
fdivl
in
movsl
jnp
scas
fcmovu
mov
push
pushf
lret
push
iret
in
cld
cs
loopne
cmc
incl
sub
fs
pop
ja
xchg
mov
sbb
ret
imul
inc
scas
popa
mov
pop
les
jecxz
aas
cmc
dec
in
mov
xchg
stos
inc
xlat
sti
ja
xchg
mov
cmc
mov
in
dec
je
cmp
push
sbb
iret
jo
andl
imul
cmp
adc
push
sti
loop
push
add
lock
inc
dec
inc
dec
mull
mov
mov
sbb
aad
and
pushw
xor
fnstsw
ds
psubusb
lcall
jb
xor
xor
fdivl
cmp
jns
in
hlt
mov
out
idiv
xor
cmp
cmc
mov
sarl
aad
pop
dec
icebp
call
leave
or
fstps
xchg
dec
mov
loope
pop
push
mov
arpl
call
and
lods
pushf
cmp
dec
jg
xlat
dec
xchg
pop
out
inc
mov
scas
aaa
mov
adc
repz
jno
adc
daa
adc
sbb
jge
lock
push
in
cmp
sub
mov
inc
ss
mov
das
and
jns
outsb
ljmp
sahf
fldenv
pop
repz
sub
ds
and
lds
test
push
test
stos
and
ret
movsl
cmpsl
out
adc
or
inc
inc
call
popf
in
push
arpl
and
mov
inc
xchg
mov
dec
xor
inc
int
rcrl
mov
js
push
xchg
adc
sbb
xchg
pushf
test
inc
jecxz
cltd
pop
add
movsb
xchg
or
popa
frstor
adc
subb
popf
shl
push
addl
pop
and
xchg
jo
scas
jecxz
xorb
inc
and
adcl
mov
mov
lds
xchg
cmc
popa
jmp
add
enter
dec
add
les
and
repnz
idivl
cmp
add
and
mov
test
clc
and
mov
scas
js
inc
or
mov
add
xor
push
inc
or
jno
fwait
mov
std
sub
gs
or
imul
cs
mov
aas
cli
mov
mov
mov
push
adc
stos
jmp
and
pushf
movsl
sub
sbb
insl
jmp
js
push
cmp
sahf
xlat
rolb
les
push
js
mov
roll
push
addr16
add
mov
lcall
xchg
push
adc
sbbb
pusha
cmc
add
mov
sbb
sbb
push
adc
adc
lcall
shr
pop
inc
mov
in
add
pop
xor
sub
mov
out
std
push
jle
jne
cmova
movsb
jg
ret
aam
xchg
es
stc
stc
adc
imul
adc
cld
inc
rcrb
lds
ret
ja
fidivs
les
test
out
lret
cmc
fbld
xor
mov
push
mov
stc
sub
jmp
pop
fwait
sar
int3
aad
jp
gs
iret
imul
nop
fadds
jp
out
push
roll
in
mov
jae
mov
rcl
pop
loopne
test
test
test
mov
mov
jl,pn
loope
or
sub
dec
or
push
xor
hlt
xor
je
inc
cmp
int
pusha
adc
and
xor
push
std
inc
jg
xchg
mov
ljmp
mov
jle
push
lds
lret
cs
dec
daa
inc
scas
ficomps
mov
sti
sub
shll
rcl
and
daa
into
pushf
sub
mov
adc
add
adc
loop
cmc
data16
mov
pop
mov
popf
out
lock
push
mov
add
ljmp
pop
imul
aad
dec
sub
mov
loope
and
push
inc
inc
pop
and
in
jecxz
push
scas
stos
loop
sbb
inc
hlt
aad
mov
lods
mov
jecxz
lods
adc
outsb
mov
add
icebp
cmp
dec
sbbl
mov
movsl
ret
adc
or
popa
iret
es
cmp
xor
fldt
sub
adc
leave
push
rorb
pop
xor
cmp
loopne,pt
adc
cs
out
in
mov
jnp
adc
subl
inc
ds
or
xchg
add
mov
shlb
test
dec
mov
cs
jnp
mov
rorl
or
or
popf
dec
in
jnp
and
rcr
in
mov
fsubrp
out
pop
push
mov
ret
add
inc
push
sub
sub
aas
lret
sbb
and
mov
and
dec
jno
dec
aam
cmp
jg
fbld
sub
cld
dec
or
xor
testl
movsl
loope
gs
sbb
out
in
add
jbe
scas
cmp
push
into
loopne
push
sbbl
les
push
decl
stos
pop
les
popa
xchg
ds
scas
jne
nop
in
mov
push
mov
cld
jo
inc
imul
outsl
andb
add
sbb
lret
aad
sub
lods
inc
push
xor
dec
lock
cmc
add
ja
andl
sbb
mov
jecxz
in
cli
test
std
cli
pop
mov
mov
sbb
rcll
std
add
les
addr16
jl
daa
jp
jo
je
inc
add
xchg
sub
movsb
outsb
ja
pop
and
in
push
lcall
sti
pop
xor
test
ljmp
and
jg
in
add
sbb
mov
inc
jle
jmp
or
sub
je
inc
fwait
and
mov
jp
push
mov
mov
hlt
je
push
cwtl
fmulp
push
inc
push
ror
aaa
xchg
dec
dec
and
ret
jne
fbld
stos
fldenv
inc
mov
xor
or
mov
mov
mov
push
push
ja
inc
cmc
pop
sbb
pusha
xchg
ret
inc
jae
pop
stos
xchg
repz
hlt
xchg
lds
aam
sbb
xlat
or
push
in
jle
and
or
leave
fs
out
and
lcall
sbb
mov
hlt
cmp
popf
jb
mov
dec
imul
stos
ret
add
rcll
jns
lahf
mov
sbbb
imul
fisubrl
mov
dec
mov
hlt
and
mov
call
scas
loopne
out
ja
fwait
lcall
jo
out
mov
add
fs
push
cmpl
aam
cmp
cmpsb
inc
loopew
dec
mov
xor
ja
testb
mov
rclb
inc
ds
rcrb
adc
pop
lock
out
jp
dec
push
lds
sti
sub
mov
into
rorb
int3
mov
out
std
fcompl
iret
jl,pt
sub
mov
xchg
inc
rcll
xchg
push
fildll
pop
stos
sbb
je
out
arpl
xor
add
jmp
test
fadds
popf
sbb
mov
sbb
sub
xor
cmpsb
cmp
dec
mov
pop
movsl
lods
shl
imul
xorb
fdivl
xor
popa
xor
add
aaa
das
adcb
sbb
mov
imul
int
cwtl
int
ja
rcrb
add
test
ficoms
xor
ds
das
xor
xchg
mov
mov
and
hlt
add
push
xlat
daa
dec
aam
addr16
adc
out
in
add
jo
cwtl
push
xor
imul
sbb
addb
push
loop
ds
xchg
push
nop
push
xchg
nop
mov
xor
repz
add
loopne
sets
iret
out
stos
pop
xor
mov
sbb
fcom
mov
or
das
push
cmp
push
xor
mov
pop
pop
lock
test
mov
cmp
mov
cmp
fsubrl
fnstcw
ror
mov
inc
or
mov
ds
inc
out
jecxz
dec
sub
dec
hlt
mov
dec
xchg
inc
sbb
mov
out
ds
ret
sub
int
or
icebp
mov
adc
movl
hlt
nop
xor
inc
dec
jb
stos
add
pop
mov
and
bound
push
iret
dec
fyl2xp1
in
fidivrl
fcomps
xchg
adc
inc
mov
nop
outsb
ret
sub
daa
mov
jg
add
out
and
fisubrl
jno
movsb
push
ljmp
pop
inc
jl
dec
add
xor
data16
push
icebp
lahf
mov
setle
sbb
enter
test
notb
inc
ja
mov
lds
pop
int3
popa
mov
insb
ss
jnp
fisubrl
jae
lret
jno
xor
xor
repnz
test
cwtl
dec
int3
test
aad
lds
js
mov
inc
dec
mov
in
inc
sub
fadds
adc
inc
jb
push
mov
adc
in
popf
mov
cli
arpl
mov
sub
xor
inc
data16
dec
xlat
sub
arpl
call
fcmovne
sub
or
cs
or
sub
add
mov
hlt
sbb
add
xchg
cmp
aad
ret
mov
aam
popa
in
hlt
xchg
lock
or
xor
pop
popa
jnp
xchg
xor
jae
pushf
sub
leave
bound
mov
add
xlat
cmp
inc
ret
pop
sub
push
std
sahf
subl
imul
adc
arpl
lret
pusha
inc
mov
or
jl
add
setg
dec
and
sub
fldl
jnp
ljmp
cli
mov
sbb
inc
mov
sub
mov
jp
je
xor
js
push
mov
pop
push
mov
ret
push
cli
ret
cmpsb
sahf
pop
add
lea
gs
das
imul
xchg
leave
mov
push
push
das
bound
roll
sbb
cli
jbe
sub
loop
outsl
sub
lcall
fcmovne
cmp
mov
and
jns
pop
jle
loope
shlb
and
pop
lods
test
push
daa
push
dec
sbb
lods
cmp
push
cwtl
xchg
xchg
cmp
lds
out
outsb
out
das
mov
je
lret
sahf
into
pop
inc
and
in
sti
repz
popa
outsl
lcall
lds
dec
and
das
pop
cmp
cmp
mov
jb
sbb
push
and
mov
sbb
aaa
pop
and
fistl
mov
test
xor
jb
sub
sbb
jp
test
xchg
daa
dec
call
sub
push
divb
psllq
mov
pop
pop
push
clc
cmc
mov
test
loope
mov
std
mov
rcr
cmp
ret
xor
xchg
mov
pop
pop
into
mov
out
stos
aas
popa
int3
stos
out
pushf
pop
jp
sub
test
cmp
popf
popa
cmpsb
loope
mov
jl
enter
or
push
mov
dec
add
pop
adc
jmp
cmpsb
add
mov
cmp
dec
lret
rcrb
loope
ss
jns
mov
fisubl
imul
in
and
jo
decb
jns
outsw
imul
mov
or
xor
add
inc
sahf
adc
es
push
jp,pt
xor
mov
loop
dec
addb
dec
stc
inc
int3
dec
jle
in
dec
fistl
aas
push
mov
test
xor
xchg
cmp
nop
dec
inc
jo
push
push
pop
rolb
movsl
in
imul
add
xor
and
lahf
pop
adc
push
pop
ljmp
pop
mov
jp
daa
es
mov
mov
xchg
or
and
xchg
mov
jns
mov
jbe
rcl
lret
repnz
inc
inc
or
mov
sub
das
jno
or
in
xor
dec
cmp
test
pushf
aaa
and
addb
cmp
popf
inc
rolb
popf
pop
dec
repz
add
enter
test
sbb
roll
fcoms
dec
fbld
sub
arpl
arpl
or
es
inc
enter
add
rcrb
shl
mov
sub
push
out
lcall
sub
out
push
mov
xor
mov
mov
push
daa
dec
mov
mov
inc
in
mov
cli
inc
push
or
cmpsb
scas
loopne
sbb
and
in
scas
in
jns
mov
dec
xchg
mov
sbb
adc
push
push
nop
xor
outsl
push
push
sub
push
push
pop
sub
xchg
popf
pop
jmp
in
or
stos
jne
jmp
es
sub
mov
mov
loopne
pop
stos
test
cmp
pop
ror
das
mov
fistl
orl
jl
cwtl
mov
lret
jg
jno
xchg
adc
add
mov
add
pop
add
sbb
inc
inc
aaa
imul
or
jne
mov
mov
in
scas
xor
add
push
xchg
mov
movsl
test
or
push
lods
jne
mov
in
xor
addr16
sbb
mov
push
sbb
or
jo
sarl
pop
xlat
xchg
xor
out
scas
adc
sbb
enter
jmp
cli
loop
jae
in
fcomps
cmp
clc
mov
jae
mov
js
shrl
iret
leave
mov
aam
jg
loop
xor
xor
shrl
add
push
dec
cld
xor
fiadds
mov
outsb
xchg
sahf
sub
and
repnz
xor
cmpsb
repnz
popf
test
adc
mov
leave
or
popa
in
faddl
mov
or
and
mov
sbb
jnp
dec
das
dec
adcl
inc
loopne
inc
icebp
mov
insl
ds
fldlg2
or
xor
inc
jp
mov
add
xor
xchg
mov
sbb
ret
jge
inc
pop
sub
jp
imul
mov
mov
sub
mov
dec
cmc
dec
stos
cltd
adc
stos
sti
cltd
fildll
mov
cmc
les
xlat
fidivrs
mov
bound
subb
movsl
pop
nop
cli
ds
andl
loopne
sbb
pusha
mov
lock
imul
aas
xor
ljmp
stos
mov
push
dec
outsb
ret
jle
sbb
mov
cmpsl
test
add
mov
xor
fs
iret
cmc
jns
mov
rorb
sub
loop
jl
jge
and
icebp
clc
test
movsb
js
xor
sub
mov
pop
int
stc
cmp
inc
clc
das
insl
lods
sbb
and
lea
mov
lcall
repz
cli
repnz
shrw
outsl
aam
sbb
push
lahf
cmp
jne
cmp
mov
xor
cwtl
je
lret
cmpsb
fs
add
jle
loopne
and
push
popf
cmp
stos
inc
repz
sbb
in
mov
sarl
xchg
sbb
mov
sbb
mov
pop
movsb
inc
push
in
outsl
test
mov
ret
lcall
leave
fisubrs
testb
insb
fstpt
nop
jno
push
or
sub
in
sahf
sbb
loop
xor
pop
rsm
movsb
add
in
push
xchg
sbb
mov
jb
mov
xchg
sbb
sub
jecxz
fcoml
dec
out
lods
jno
adc
movb
fnstsw
dec
in
hlt
mov
rcr
dec
sarb
inc
mov
lahf
loop
movsb
scas
sbb
test
pop
test
add
hlt
inc
inc
fsubrl
addl
mov
repz
mov
xor
and
in
cmp
imul
jmp
xor
mov
pop
addb
inc
cmp
jne
or
mov
mov
out
outsl
gs
cmp
into
ljmp
mov
jecxz
dec
push
adc
mov
cmpsl
lahf
cmpsb
aas
mov
in
push
mov
jle
xor
and
push
out
sbb
repz
lahf
test
xor
mov
mov
in
mov
mov
lret
jge
mov
cmp
ret
adc
inc
jge
pop
pusha
test
gs
xor
sbb
andl
mov
lods
repz
fcomps
mov
jge
add
xchg
insb
out
movsl
rclb
dec
mov
cmp
add
rcrl
insb
add
xchg
push
jae
sbb
add
xchg
call
shr
mov
mov
pop
fs
mov
das
mov
icebp
adcl
loope
andl
jmp
jle
mov
mov
pop
jle
push
sub
scas
sub
scas
leave
stc
add
mov
push
sub
xor
ljmp
mov
test
jbe
call
addb
jl
xor
icebp
stos
cmc
out
insb
sub
insl
cmp
adc
lcall
rolb
lahf
mov
sub
push
fadd
aam
push
test
gs
loope
data16
lea
cmp
enter
data16
xor
out
rcrb
iret
lods
dec
push
mov
jb
add
push
jl
in
stc
sbb
push
rclb
jb
das
int3
in
daa
lahf
xchg
popa
andb
lret
sarl
fst
xor
xchg
sbbb
xchg
loopne
mov
xchg
enter
ss
mov
insb
mov
repz
rcrb
cmp
hlt
inc
sahf
imul
mov
lret
sbb
cs
sar
jno
mov
cmp
lahf
enter
xchg
js
xor
add
cmpsb
pushl
mov
cmpsl
lcall
sbb
mov
sub
and
test
xchg
push
repnz
push
leave
outsb
popf
fiadds
loope
sahf
pop
dec
mov
sub
enter
imul
cli
add
rcrl
es
fcoml
popf
xor
sub
ficomps
shrb
dec
iret
xchg
mov
mov
dec
stc
mov
jb
mov
and
cltd
addr16
sbb
push
pushf
lods
sbb
mov
xor
adc
test
pop
sub
aam
mov
lock
sbb
loopne
sub
mov
roll
out
pop
mov
push
cmpb
outsl
jo
in
popa
gs
cmovo
fistps
sub
mov
inc
mov
cld
fmull
aas
cld
jnp
iret
daa
andb
jecxz
insl
pushf
mov
and
out
xor
sbb
or
mov
out
sbb
in
and
mov
adc
addl
pusha
test
pop
pop
jge
scas
ljmp
arpl
sahf
insb
mov
push
jbe
xchg
mov
test
cmp
das
fucomp
add
mov
xlat
sub
adc
xor
pushf
mov
sti
cltd
mov
sarb
out
and
cmp
daa
js
add
mov
adc
in
int
mov
sub
add
addb
addb
mov
clc
cmpsl
sbb
icebp
add
push
cmp
push
sub
in
lds
or
xchg
or
pop
rcrb
inc
mov
mov
fisttpll
mov
mov
cmp
jb
cld
icebp
sub
xchg
imul
or
aam
adc
add
cmpsl
jmp
stos
add
repz
dec
cld
or
cmc
adc
xlat
repnz
daa
mov
xor
stos
ret
fsubrs
aaa
xchg
dec
lahf
push
std
sbb
cld
ss
lret
mov
xchg
outsl
loopne
lret
mov
cmp
into
adc
fxch
sarb
xchg
lock
inc
push
fstpt
stos
lods
sub
and
pop
lods
into
push
ret
cmc
in
ret
flds
push
lea
sahf
xor
movsb
bound
add
pop
loop
xchg
xchg
push
or
and
sbb
dec
mov
mov
popf
int
sbb
pop
jge
or
dec
or
test
fwait
jg
fwait
test
dec
cmpsb
push
add
inc
mov
loope
out
push
pop
sbbl
subb
jb
and
movsl
dec
mov
loop
push
inc
jge
hlt
loope
and
pop
inc
xchg
ror
pop
rolb
arpl
adcl
push
bound
rolb
jo
mov
mov
and
jbe
or
mov
rolb
ja
int3
sbb
jle
repz
cli
dec
jge
xlat
jmp
sbb
mulb
mov
xchg
inc
adc
sbbb
into
jno
imul
mov
outsb
cwtl
test
rclb
stos
add
jle
fcmove
push
out
xor
loopne
sahf
iret
popa
push
add
jmp
sbb
loopne
repz
pop
pop
push
test
fwait
inc
lret
pop
and
jecxz
lcall
mov
pop
fcompl
negb
cltd
fistps
add
push
shlb
shrl
rcll
cmp
fnstsw
mov
fwait
push
es
mov
xchg
ret
xor
lea
arpl
mov
cmc
jg
inc
jecxz
sbb
negb
jecxz
xor
xor
pop
xor
mov
fistl
push
pusha
test
or
das
aaa
mov
pusha
lahf
and
mov
cmp
divl
push
xchg
bound
cwtl
imul
xor
icebp
ficompl
pop
dec
xchg
pop
test
sub
push
jl
xor
addr16
and
dec
inc
mov
loope
test
in
rcll
test
dec
mov
push
mov
lds
imul
fisubrs
mov
push
add
stc
adc
bnd
lcall
mov
pop
ds
xchg
jl
sbb
sti
jae
mov
mov
pushf
lods
or
inc
daa
push
mov
mov
cltd
xlat
jl
mov
and
xchg
xchg
repz
fisubs
loopne
jmp
js
icebp
cmp
add
scas
mov
and
stos
inc
scas
scas
cmp
cmpsl
insb
fs
xchg
loope
pop
fldl
adc
sub
xchg
xchg
aaa
fcompl
sahf
sbb
add
fsubs
aam
mov
outsb
ja
loope
push
push
out
lods
sbb
dec
call
pop
mov
pop
sbb
sub
fnstenv
sbb
das
mov
cmpb
xchg
jmp
ss
jl
lds
cwtl
imul
aad
loop
push
call
cwtl
inc
jge
push
add
inc
add
addr16
mov
mov
adc
scas
sbb
push
cwtl
cld
and
or
mov
test
shlb
loope
sbb
pop
popa
repnz
out
add
push
dec
jle
pop
jb
int3
mov
jb
push
or
ja
dec
xchg
sbb
jmp
add
cmpsl
popf
dec
adc
jo
daa
mov
cwtl
ja
jecxz
dec
pop
inc
or
xchg
xor
xor
ja
and
sarb
xor
out
mulb
int
jnp
cwtl
jno
pop
xor
adc
push
cwtl
dec
dec
rcr
aam
mov
fimuls
arpl
mov
fisubrs
ret
or
jns
jno
stos
fsts
xor
adc
test
cmp
mov
orb
push
sti
sub
ss
out
push
je
xor
insl
iret
push
add
xchg
xchg
mov
rcll
ljmp
cmp
test
sbb
and
or
ret
jmp
cmpsl
es
dec
call
jnp
fisubrl
or
jp
roll
jg
push
sub
pop
pop
in
std
or
push
das
repz
inc
ficoml
add
shrl
xchg
lret
cmp
pusha
pop
add
inc
in
inc
in
loopne
fiaddl
push
int3
mov
dec
aas
pusha
dec
and
pop
dec
push
add
imul
mov
push
insb
mov
adc
nop
loop
imul
mov
sahf
leave
pop
mov
mov
push
push
iret
shlb
dec
push
decb
movsb
mov
mov
add
sub
push
fidivl
xor
ljmp
or
and
sub
jne
lret
push
or
inc
xor
or
or
add
pop
mov
mov
jecxz
mul
fldenv
cmpl
mov
sub
pop
or
popa
popf
bound
add
leave
cs
and
cltd
repz
fadds
popf
imul
jp
idivl
sub
add
out
pop
push
dec
test
or
mov
ret
lds
test
loope
jmp
xchg
dec
or
xchg
mov
sahf
xchg
ljmp
lret
idivb
adc
aaa
cmp
outsl
lds
in
cwtl
push
dec
add
xchg
scas
dec
adc
aad
cltd
xchg
ret
pop
rorl
movsb
mov
and
xlat
ja
sbb
sar
cs
jl
cs
mov
dec
push
test
dec
pop
dec
xchg
adc
repz
xchg
ljmp
stc
shll
pop
sub
mov
fisttpll
add
stos
loope
adcb
stc
enter
test
pusha
loopne
cld
xchg
jb
fcomps
mov
cld
fbstp
mov
popf
inc
lds
lret
nop
mov
add
cmp
lcall
jne
leave
and
pop
dec
xchg
das
mov
push
sahf
add
xchg
inc
lret
shlb
pop
test
gs
arpl
add
sbb
into
mov
pop
test
cmp
cmp
test
scas
add
or
leave
sahf
jl
and
inc
and
test
lahf
jo
outsl
mov
xchg
pop
imull
xor
xor
sub
add
das
cs
mov
xchg
jp
jb
dec
push
xchg
pop
adc
xor
jns
or
rcrb
cld
cmp
loopne
adc
jo
jg
movsl
mov
pop
jge
mov
in
movsb
mov
jmp
inc
adc
jl
insb
xor
cmp
and
sub
fs
aam
in
or
fldt
adc
inc
shll
daa
add
in
je
and
sub
xor
cmc
xor
into
inc
pop
inc
lea
sbb
push
xchg
xor
fcom
push
ret
mov
stos
mov
mov
roll
sbbl
rolb
aas
outsb
mov
out
jae
inc
fnstsw
jecxz
adc
mov
xor
or
cltd
sbb
mov
push
adc
mov
mov
cld
cmp
jmp
adc
pop
mov
jmp
stc
lods
add
pop
aaa
imul
cli
push
xchg
cmp
push
jge
inc
sbb
aam
jp
sbb
and
pop
pushf
or
mov
dec
jne
push
scas
enter
jne
outsl
cmp
arpl
and
int
mov
push
lret
jmp
mov
test
incb
pusha
pop
lret
mul
pop
dec
clc
add
xor
push
iret
dec
ds
pushf
add
movsb
inc
or
pop
xchg
jmp
or
cltd
fadd
dec
mov
shll
rclb
mov
shr
and
dec
call
test
cwtl
xchg
jecxz
sbb
and
xor
push
clc
sti
pop
lds
xor
insl
dec
pop
mov
scas
daa
xor
mov
or
jp
and
jg
add
and
es
insl
aas
xchg
int
js
sahf
adc
mov
sbb
aaa
lods
jge
aam
jge
xchg
sub
or
cmc
dec
jae
cmp
or
ss
xchg
fimull
stos
out
insl
or
pop
dec
xor
cld
test
adcl
xlat
pop
mov
push
add
test
mov
in
cltd
imul
jmp
aad
out
sti
mov
imul
pop
pop
shll
aam
data16
mov
test
jns
pop
insl
stos
fadd
dec
adc
out
fsub
stos
jbe
addb
lods
inc
dec
fs
lods
adc
and
insl
jmp
push
dec
out
push
jae
inc
vpsadbw
imul
push
sti
mov
sbb
test
push
inc
lods
jecxz
nop
cltd
dec
pushf
sarl
test
jp
outsl
adc
xchg
mov
mov
sbb
cmpsl
mov
jbe
xor
dec
lret
mov
loopne
shrl
int3
adc
adc
gs
jnp
adc
dec
mov
xor
imul
push
stos
inc
xor
xchg
pop
in
adc
mov
leave
jne
xchg
fistl
sub
pop
aad
sub
cs
ffreep
mov
iret
nop
adc
repz
scas
add
push
xor
mov
xor
iret
or
insb
inc
adc
push
les
sbb
cmc
sbb
jl
fidivrl
pop
icebp
jne
and
out
iret
jae
popf
add
jmp
cmpsb
psrlq
xor
cltd
test
mov
adc
cmpsl
sbb
xor
jmp
fprem
and
push
lods
xchg
xchg
dec
fwait
out
cmpsb
clc
adc
and
into
dec
imull
sub
jp
or
xchg
xor
cmpsb
into
sbb
adc
call
fcompl
cs
push
xlat
ljmp
pop
clc
push
into
hlt
andb
push
aas
shlb
mov
and
aam
pop
leave
cwtl
push
pop
mov
push
lea
pop
cmp
mov
cs
insb
sub
incb
jo
int3
enter
pushf
xlat
jecxz
push
mov
outsl
test
jns
stos
rcl
jg
dec
test
add
cmpsl
inc
es
repz
and
insl
and
sbb
stc
mov
inc
add
ret
xor
sbb
add
call
pop
mov
xchg
push
push
inc
or
xchg
push
sub
pop
stos
movsl
mov
gs
xchg
mov
outsb
xchg
mov
mov
in
sbb
cld
and
inc
mov
add
filds
rorl
add
movsl
dec
rcll
jecxz
dec
ss
or
sbb
mov
add
jl
and
add
stos
xor
ret
fadd
cmpsl
leave
xor
inc
adc
popf
xchg
and
insl
push
adc
sub
xchg
jl
mov
notb
call
adc
andb
sub
mulb
ja
sbb
jle
test
cmp
sbb
leave
sbb
aad
dec
push
cmp
cmp
ror
cltd
and
sbb
push
icebp
xchg
lods
andb
int
add
in
mov
push
xchg
aad
rol
mov
lret
les
push
dec
leave
dec
mov
jle
hlt
stos
orl
pop
outsb
mov
adc
movsb
mov
aas
add
daa
push
imul
cmp
cmp
arpl
imul
aaa
subl
arpl
sbb
dec
jle
push
pop
loope
jo
sub
xchg
repz
adc
stc
push
or
push
xchg
scas
push
xchg
insb
mov
add
sbb
cli
inc
mov
or
xchg
cwtl
insl
push
push
out
mov
in
or
inc
and
mov
rolb
sub
xchg
jnp
aad
arpl
lods
lock
cmp
loope
jne
ljmp
popl
stc
sbb
lods
lret
xchg
rclb
cwtl
cli
incb
nop
in
adc
mov
inc
pushf
or
pop
daa
mov
enter
add
insb
inc
adc
lret
pop
mov
or
and
je
mov
std
call
or
mov
ss
imul
or
ret
dec
imul
push
cmpl
cmpsb
hlt
lock
rcrl
mov
out
rclb
push
pop
jae
shl
mov
inc
stos
jne
shlb
cwtl
popf
movsl
push
out
mov
sub
rclb
insb
cmp
aad
xor
cmp
test
outsl
and
and
sub
add
or
dec
dec
cmp
lods
mov
fisttps
sub
push
cmp
mov
adc
es
inc
out
repnz
xchg
cld
outsb
xor
into
mov
imul
adc
ss
sbb
sub
or
adc
cmp
out
in
lret
test
aam
test
xchg
push
pop
add
mov
mov
jmp
pop
pop
cmp
inc
das
fbld
pop
push
sub
sub
mov
inc
sbb
add
stc
push
mov
xor
sti
lahf
and
and
bound
imul
loopne
aad
dec
mov
dec
push
std
add
lods
andl
lahf
and
xor
lcall
jmp
sbb
int3
jbe
outsl
hlt
adc
mov
fcomps
dec
flds
push
inc
dec
sub
mov
adc
adcb
xor
dec
cltd
sub
pop
jmp
xchg
outsb
xor
xchg
jmp
fidivs
gs
nop
or
jmp
pop
sbb
mov
mov
pop
mov
stc
mov
xchg
inc
movsl
cmp
sub
or
lret
jae
popa
stc
and
sarb
jecxz
jne
xorl
dec
mov
hlt
adc
ljmp
sub
call
into
mov
fdivrl
pop
repnz
mov
fadds
mov
mov
or
lcall
pop
or
test
xchg
lret
dec
dec
push
push
adc
ja
ret
lret
push
das
mov
in
jg
push
sbb
xor
xchg
mov
rcrb
nop
inc
out
popf
mov
add
mov
int3
sub
stc
dec
imul
and
jno
dec
dec
hlt
aad
xchg
push
sub
lds
aas
pop
and
rcll
test
cmpsb
sub
rolb
in
mov
lods
data16
push
inc
sbb
sbb
into
push
in
inc
negb
ds
adc
xchg
mov
mov
push
rolb
jb
fldenv
and
idivl
adcl
stc
repz
push
movsl
insb
xchg
ret
clc
lret
cli
xorl
pop
shll
fidivs
mov
or
ljmp
jno
lea
test
xchg
push
push
ljmp
fisubl
push
pop
pop
cld
pop
cld
push
push
push
dec
je
pop
mov
stos
jo
xchg
and
inc
lret
cmp
jno
clc
lods
push
mov
movsb
call
int
insl
inc
js
pop
adc
xchg
das
jbe
popa
data16
icebp
jno
movsb
mov
jnp
lcall
dec
clc
les
daa
iret
push
cmpsl
and
insb
sub
push
js
mov
fs
stos
in
adc
lret
push
lcall
mov
xor
sub
cs
bound
addr16
call
mov
cmp
ljmp
inc
sbb
mov
outsb
jb
js
mov
pusha
icebp
mov
sbbl
fwait
sbb
inc
pop
loop
adc
dec
push
sbb
mov
iret
repnz
jns
das
test
mov
pop
cmp
adc
dec
inc
xchg
add
ret
xor
fs
aad
mov
lds
mov
dec
test
movsl
int
mov
nop
clc
mov
push
cs
shrl
adc
cmp
mov
sbb
add
adc
and
mov
fnstcw
push
repz
js
add
sbb
dec
dec
mov
xchg
les
or
out
jae
pusha
inc
jae
aaa
ss
out
and
jb
fcmovbe
divb
jae
sbb
test
test
pop
pop
stos
xor
mov
aad
jp
fwait
out
in
dec
inc
cld
dec
push
mov
int
jae
test
inc
inc
mov
push
decb
cmc
jge
and
and
mov
lret
stos
push
add
stc
stos
lock
lea
push
inc
test
int3
push
addr16
data16
sahf
and
cli
movsb
psubusw
fldlg2
rcll
jns
lods
and
mov
pop
mov
pop
jp
xchg
sbb
mov
mov
je
xor
pop
mov
mov
or
jl
xchg
jbe
cmp
aam
cwtl
push
sbb
adc
inc
inc
aad
roll
or
aaa
cmp
mov
out
xor
xchg
popa
fcmovnbe
add
mov
imull
mov
or
jbe
cmc
ja
js
inc
add
out
jae
add
aas
int
test
repz
ret
jns
sti
dec
and
incb
sub
xchg
clc
cmpsb
push
xor
ficoms
jae
ret
test
inc
scas
pusha
dec
dec
aas
arpl
sub
scas
clc
add
inc
mov
repnz
mul
push
ds
adc
adc
movsl
lods
cmp
leave
mov
mov
sar
inc
sub
sbb
jns
jmp
mov
inc
movsb
and
cmp
jle
bound
inc
cmp
sub
xor
jmp
mov
xchg
mov
adc
mov
cmp
out
data16
adc
push
or
adc
jno
dec
decl
popa
bound
enter
cmpsb
lahf
into
jp
fldl
lcall
cmp
jmp
jle
jecxz
or
push
pop
xchg
adc
sbb
imul
int3
rcll
test
dec
push
jge
adc
test
or
jb
outsb
sub
cmp
mov
in
cmpsb
loop
jo
aad
cwtl
or
push
scas
sbb
inc
xchg
in
dec
cmpsl
mov
fsub
sti
mov
fbld
push
pushf
cmp
add
and
or
mov
pop
jae
inc
jae
mov
mov
mov
jnp
adc
mov
adc
lcall
cltd
insb
movsl
mov
sub
cmp
inc
sahf
cmp
movsb
es
and
jb
xchg
mov
ja
adc
jp
and
mov
cli
iret
imul
mov
pop
scas
xchg
inc
or
jge
mov
or
clc
pop
int3
mov
xchg
pop
cmp
fbstp
into
mov
xor
cmc
fstpl
cmpsb
add
scas
jb
fwait
ret
sub
cld
xorb
enter
inc
into
loopne
inc
dec
emms
daa
mov
mov
ss
js
inc
lcall
ja
or
popa
xchg
jp
and
push
nop
sub
xchg
pushf
into
sahf
xor
mov
sbb
lret
loop
push
adc
outsl
int
xor
pop
int
mov
arpl
movsl
xlat
xor
xchg
fdivr
popf
aam
xchg
jmp
les
jnp
xor
lcall
mov
jl
sbb
mov
jle
fstps
shll
fsub
fld
inc
cmp
mov
sub
mov
xchg
xor
sub
push
add
xor
out
cwtl
push
and
in
cs
xchg
fistps
jae
inc
or
popf
mov
repz
xchg
and
arpl
test
fxch
sbb
icebp
dec
dec
push
lods
bndstx
jp
jae
movl
scas
leave
or
mov
push
pop
fsubp
fists
pop
lret
jmp
mov
mov
xchg
mov
minps
fidivrl
push
sahf
cmpsl
dec
jle
hlt
adc
add
mov
mov
mov
add
dec
push
icebp
ljmp
mov
movsl
xor
jp
leave
ficoml
mov
mov
fdivrs
repnz
pop
dec
fiadds
mov
data16
in
jb
lret
in
sub
movl
pop
xor
jo
xlat
inc
dec
js
lahf
pop
lret
jp
sbb
xchg
stos
pop
arpl
sub
jbe
addr16
sub
loop
test
adc
lret
arpl
push
imul
jbe
loopne
js
mov
dec
jge
hlt
add
into
dec
js
pop
jle
mov
ret
add
dec
loopnew
or
adc
cli
sbbb
xchg
rorl
and
jo
pop
push
imul
jle
nop
or
pop
in
nop
je
leave
pusha
sub
sub
loopne
dec
sub
pushf
xchg
jle
or
psrld
gs
lret
inc
popf
mov
insl
pop
push
imul
lret
xlat
dec
lcall
jl
cmp
or
loope
add
adc
mov
jns
popfw
loopne
dec
test
jne
jle
adc
popf
add
pusha
sbb
scas
movsl
mov
repnz
ficoml
lahf
mov
push
andb
fisttpl
mov
repnz
test
mov
test
fiaddl
xchg
es
in
outsb
push
mov
nop
popf
iret
inc
out
sti
cwtl
stos
push
hlt
repz
mov
dec
push
add
bound
sub
data16
iret
idivb
lock
insl
push
ds
push
lea
fs
fwait
loopne
dec
fxch
and
sbb
cmp
xlat
pusha
adc
out
mov
outsl
and
lods
sub
jne
test
clc
mov
movsl
jb
mov
fldcw
xchg
icebp
sub
sbb
iret
ds
int3
outsl
push
jne
shll
repnz
pop
nop
cmp
push
arpl
addr16
fimuls
xchg
fldenv
inc
mov
out
mov
mov
sub
rcrl
adc
sbb
adc
sbb
cmp
add
aaa
addl
push
mov
xor
add
jns
pop
inc
mov
jl
loope
into
aad
xchg
in
mov
sub
lock
jge
insl
adc
cwtl
in
mov
add
jg
dec
xchg
lcall
cmc
std
lods
mov
aad
std
insl
adc
sub
mov
js
pop
dec
sbbb
mov
sub
mov
fsubl
mov
jno
andb
in
mov
push
sub
xchg
mov
mov
imul
mov
jne
loop
mov
js
jge
xchg
inc
inc
stc
adc
adc
or
sti
test
pop
dec
sti
iret
sub
cmc
gs
jecxz
lret
imull
sbb
icebp
or
psadbw
cwtl
mov
sub
dec
push
mov
adc
jnp
dec
outsl
push
mov
int
test
jno
ja
ror
mov
ljmp
pop
fstl
call
rcrb
lret
cmpb
inc
mov
movsl
fimuls
pop
inc
out
in
cmpsl
xor
ficoms
outsl
and
xor
mov
and
fsts
adc
mov
adc
les
divl
adc
xchg
jmp
xor
sbb
fstpt
pop
shrl
mov
sarb
add
insl
lods
leave
sahf
leave
call
mov
cmp
adc
clc
and
movsb
jg
xlat
dec
adc
inc
jne
shll
test
shrl
inc
testl
jb
loopne
mov
dec
or
or
es
push
sub
push
adc
mov
xchg
arpl
fs
je
mov
sbb
jmp
in
mov
clc
fdivs
mov
in
dec
std
out
insb
add
outsl
xchg
mov
xchg
outsl
std
sub
cmp
pop
int
rorb
xor
cwtl
jp
push
aad
outsl
push
dec
mov
inc
in
jbe,pn
in
fnsave
mov
xlat
xchg
pop
data16
cld
xor
in
imul
add
push
shl
pop
cmp
inc
jmp
addl
sbb
cmpsl
loope
sbb
aaa
imul
stc
fldcw
ljmp
cmp
leave
std
cmp
test
lods
ret
sbb
mov
insl
xor
xlat
mov
sahf
mov
in
insb
mov
sub
repnz
idiv
pop
cli
jb
dec
mov
cmpsb
jno
push
or
bound
mov
in
insb
pop
outsl
add
xor
xchg
out
inc
in
pop
loop
mov
int
sub
inc
in
out
push
pop
testb
xchg
test
adc
inc
ret
jmp
mov
popf
loopne
in
std
push
scas
shll
mov
adc
jmp
jmp
push
mov
lret
outsl
mov
push
mov
cmpl
inc
and
cmovb
sbb
call
dec
sarl
push
dec
ror
sti
pop
leave
cmp
loop
xchg
cmp
jns
cmp
jb
int
ret
test
mov
and
xchg
adc
push
cltd
jne
cmp
push
xchg
add
popf
iret
loope
jp
pop
jge
fwait
dec
dec
insl
scas
imul
jb
ror
xor
xor
stos
jb
pop
mov
out
into
les
add
pop
mov
leave
test
lods
jle
xchg
int
aas
negb
popf
pop
mov
int3
lret
lds
mov
mov
add
in
push
aam
push
mov
mov
push
xchg
dec
lock
or
int
adc
dec
pop
aad
in
mov
push
add
stos
mov
jecxz
adc
mov
dec
push
mov
rcr
cli
add
cmpsl
cs
inc
js
stos
pop
fiaddl
dec
adc
dec
push
inc
jne
dec
inc
pop
mov
shlb
insl
mov
jb
pop
sub
popa
jge
mov
xchg
mov
fwait
adc
dec
popf
mov
cltd
push
sahf
pop
push
lds
mov
cli
push
jge
xchg
xchg
cmp
push
sbb
je
cmp
stos
ja
hlt
test
push
les
push
int
mov
out
mov
xchg
inc
jb
xchg
inc
cs
mov
test
jae
add
xor
imul
test
sti
sub
adc
inc
push
adc
mov
fisubrl
mov
pop
imul
adc
fcoml
ss
adcl
mov
ret
cmp
dec
adc
and
cmpsb
pop
fs
xchg
xchg
rorw
aas
clc
sti
mov
cwtl
decl
loope
cmpsb
repnz
outsb
jg
sbb
fwait
shrl
dec
mov
sub
xlat
fdivl
jb
pop
dec
mov
mov
ja
push
xchg
add
ljmp
aas
nop
mov
ret
jp
mov
in
sbb
loope
lods
retw
and
sbb
sub
or
lods
cltd
cmp
jg
stc
add
cmp
and
stos
jne
push
mov
push
xor
or
sarb
int
cltd
js
jl,pn
xlat
sub
mov
cli
add
in
cmp
lods
sbb
and
inc
sbb
adc
pop
pop
aas
jne
jo
push
xor
rorb
xor
pop
test
or
cmp
sub
push
or
mov
cmp
shll
jmp
mov
cmpsl
lret
loope,pn
pop
ljmp
in
mov
push
push
push
cltd
stos
scas
out
test
dec
es
mov
push
lahf
pop
and
mov
pusha
gs
lds
and
jo
jge
pop
lds
xor
outsb
sti
and
lds
sub
mov
xchg
xchg
aaa
pop
xchg
test
cmpsl
jge
inc
icebp
xchg
jo
xor
fmuls
add
push
fsubrl
in
movsl
int3
inc
sar
mov
out
gs
cmovbe
inc
or
jno
jb
xchg
cmp
pop
ja
sbb
ja
mov
cwtl
arpl
mov
or
imul
sbb
mov
inc
aam
test
negb
rcll
xor
mov
add
jne
fcompl
xchg
test
sub
rolb
push
jns
sbb
jne
and
movsb
inc
movsbl
ljmp
cs
in
pop
push
das
bound
or
ss
in
sbb
sub
dec
inc
push
sbb
sub
and
mov
ret
mov
sbb
push
lds
je
mov
int3
lock
pop
mov
fistpll
jle
sbb
xor
in
aas
dec
push
cmp
cld
push
mov
adc
call
js
inc
ja
lcall
ljmp
push
xchg
sahf
ficompl
xchg
ljmp
loopne
sahf
cmp
xchg
ss
pop
cmp
das
mov
mov
jmp
or
xchg
dec
xor
fnstsw
xor
xlat
jle
dec
jp
pop
lcall
cs
add
adc
add
fisubrs
lods
sub
adc
into
cmpsl
cmp
decb
and
push
andl
scas
ja
leave
push
insl
pushf
iret
fsubr
test
fimull
sbb
mov
pop
pop
out
into
mov
je
in
push
scas
mov
xlat
push
pusha
mov
fisttpll
push
push
ret
xor
clc
mov
jle
mov
outsb
inc
mov
adc
sbb
push
mov
loopne
adc
sub
add
mov
push
sub
sbb
and
jno
das
pushl
or
popa
fmul
aad
dec
shlb
insb
xchg
xor
and
fcoms
ret
sti
push
fnstsw
mov
roll
ret
int3
repz
aad
lahf
push
jnp
mov
clc
cmp
inc
jecxz
pusha
mov
out
jg
out
cmpsb
mov
add
and
stos
push
fidivl
mov
test
stos
xor
pop
lahf
out
cmp
xor
inc
ss
mov
iret
cmpl
inc
testb
pop
jbe
in
push
xchg
add
mov
idivb
or
ret
pop
aas
or
call
inc
dec
inc
je
out
and
lret
mov
vcvtsi2ssl
ja
sub
cmpl
inc
or
add
sbb
cmpsb
into
fcoml
adcl
xor
mov
sbb
int
push
out
pop
sub
cmp
push
test
in
icebp
lods
cmpsb
fldt
xchg
mov
and
arpl
add
mov
loopne
lret
sub
dec
sub
rorl
mov
pop
push
enter
mov
inc
push
test
adc
sub
int3
addb
sub
aaa
xor
sar
or
pop
lret
push
ret
add
adc
pop
popf
ret
rcrl
inc
insl
mov
rorb
mov
add
sbb
sub
cmp
pushl
fmuls
jl
ret
or
mov
arpl
cwtl
andl
sti
test
dec
addr16
inc
sub
pop
jmp
mov
sub
in
scas
stc
mov
std
add
stc
rclb
icebp
loopne
lea
ja
pusha
mov
aam
loope
dec
push
push
jns
aad
fsts
cmp
gs
lods
fisubs
cmp
xchg
into
lcall
mov
and
xor
xchg
add
leave
popf
sbb
jl
push
in
mov
push
jnp
inc
repz
outsl
out
push
loop
mov
fbstp
lcall
sbb
pop
sub
or
push
js
into
test
fbld
push
pop
mov
test
add
jmp
xchg
mov
inc
imul
jo
lcall
das
inc
and
sbb
js
mov
fidivrs
jo
jmp
pop
push
and
imul
adc
add
xor
popa
adc
push
push
mov
cld
movsb
adc
xor
dec
sbb
std
mov
adc
test
les
push
pop
jmp
ret
and
cmc
loope
jmp
or
mov
in
push
rcrl
cld
jmp
pop
je
dec
mov
nop
scas
jmp
xor
mov
cmp
sbb
dec
cmp
fwait
push
addr16
cmp
lods
adc
mov
dec
fistpl
xchg
arpl
and
into
fildll
jns
movsl
push
fidivs
popl
scas
sahf
add
jnp
fdecstp
and
mov
cli
push
pop
dec
pop
push
iret
dec
jb
mov
insb
xchg
xchg
aad
push
popf
in
push
fldenv
call
add
and
mov
inc
or
into
xchg
pop
mov
shlb
std
cvtpi2ps
stc
shl
aas
pusha
xchg
iret
sub
dec
cmp
adc
xchg
xor
hlt
sbb
pop
test
jecxz
sbb
loopne
sahf
sbb
cmp
pushf
adc
push
gs
lods
movsl
mov
comiss
push
adc
xor
negb
jae
adc
sbb
add
add
out
repnz
ficoml
jb
mov
jmp
push
mov
vminsd
cltd
ficompl
aad
cmp
mov
inc
data16
add
stos
or
cld
scas
es
mov
mov
gs
push
sub
outsl
pop
ja
clc
es
in
inc
cmp
pop
cltd
int
adc
rcll
mull
mov
cmp
movsb
mov
mov
cmpsl
xor
cmp
mov
cld
mov
and
fmull
push
loop
jbe
mov
sub
mov
das
jo
sbb
lcall
sub
push
sub
mov
and
movsb
mov
mov
push
push
jmp
mov
daa
sbb
xchg
push
cmpsb
jp
adcl
pop
mov
push
dec
adc
addb
and
mov
ret
push
inc
js
enter
cmpsl
movsb
in
je
addr16
lods
cmpsl
pop
frstor
stc
dec
lahf
bound
mov
cs
std
stos
shll
pushf
jne
cmp
shrb
inc
pop
imul
test
ss
das
mov
jae
lea
xchg
push
daa
cmp
xchg
jne
test
jo
xchg
add
ds
inc
mov
ss
clc
push
cmpsb
repnz
outsb
jp
loop
cmc
cmpsl
aas
push
stos
sub
jo
hlt
and
or
add
ret
add
ja
punpcklwd
pop
in
xchg
arpl
pop
and
pusha
mov
sub
scas
jne
mulb
iret
and
shrb
fiaddl
pop
adc
out
dec
aad
mov
cmp
pop
lcall
add
cmp
push
repnz
pop
fisttpl
imul
lods
xchg
das
dec
nop
and
js
dec
add
popa
xchg
fcomps
arpl
mov
pop
or
stos
adc
insb
gs
daa
es
fisubl
pop
pushl
or
inc
xchg
pop
int3
mov
jbe
mov
sar
mov
stc
cmp
cld
stos
and
push
dec
roll
sbb
icebp
mov
sbb
adcb
sti
imul
xor
pop
imul
into
dec
mov
jb
mov
add
loope
push
in
mov
push
sub
pusha
mov
loop
mov
sub
lret
dec
stos
ret
push
inc
fidivs
sbb
or
je,pn
mov
or
clc
pop
mov
mov
mov
mov
dec
xor
stos
jg
les
and
lock
jg
jle
push
fimuls
jmp
pop
movsl
fdivl
sbb
jnp
adc
test
mov
or
lahf
push
sbb
xor
jae
push
subl
add
fisubl
or
push
lock
pop
xchg
imul
enter
adc
pop
enter
movsl
out
loope
push
mul
in
subl
aam
popf
cmp
outsb
xlat
dec
out
ljmp
rcl
scas
popf
into
test
xchg
cld
hlt
xchg
or
cmp
out
xchg
fimull
xchg
cmp
stos
popa
movb
int3
sti
lods
mov
xchg
clc
cwtl
lret
mov
cmp
outsb
adc
and
outsl
and
xchg
xor
mov
or
dec
shll
mov
sbb
pop
mov
and
jecxz
jbe
xor
sbb
inc
lcall
and
add
mov
xor
and
test
cmp
jae
jmp
dec
sar
mov
xchg
dec
test
inc
clc
iret
pop
call
imul
mov
push
shll
pop
mov
outsl
adc
pop
test
lea
cmp
lods
mov
or
ja
and
in
ret
shr
sub
in
add
jno
add
data16
pusha
jae
mov
push
scas
dec
add
add
inc
cmpsl
mov
push
push
push
adc
mov
lcall
sahf
pop
pop
push
in
fstpl
inc
stos
sbb
dec
mov
test
fiaddl
pop
in
sbb
push
lods
inc
pop
dec
jmp
sbb
or
push
jmp
add
sbb
inc
stc
mov
scas
pop
xlat
mov
pop
fcmovb
xorb
and
mov
cmp
sbb
addr16
cld
repnz
sub
fstpt
jecxz
shl
mov
mov
fnstcw
mov
xor
push
push
cld
in
icebp
cmp
rclb
or
mov
xchg
clc
mov
xor
xchg
jo
sbb
mov
push
aad
xchg
sbb
ffreep
stos
push
inc
dec
fs
pop
sbb
jno
mov
pusha
rclb
sbb
out
lea
cmp
xor
enter
xchg
sahf
sbb
leave
and
lds
test
rcll
fs
cmp
pop
push
movb
rcrb
fpatan
testl
repz
cmp
push
movsb
js
sti
fsub
pushf
xor
mov
add
clc
ja
add
fcomp
shrl
aam
inc
les
mov
daa
les
out
mov
push
or
mov
adc
inc
pop
sub
je
hlt
ljmp
ja
in
insb
push
sbb
xor
test
jb
push
pusha
icebp
mov
dec
mov
jnp
jmp
popf
fs
inc
jae
mov
in
inc
lea
shl
adc
cmp
push
push
andl
fimull
jge
mov
lcall
cmpsb
push
sub
dec
and
call
call
inc
jbe
add
push
sub
and
push
mov
icebp
in
jge
cmp
xchg
push
enter
add
mov
enter
mov
fnstcw
loope
dec
lahf
cmp
test
rol
mov
xor
adc
dec
xorb
aam
fstps
and
inc
xor
jns
push
and
jb
lods
push
mov
mov
je
popa
jmp
sarl
pop
xchg
xchg
lods
mov
lea
jns
mov
push
push
lds
das
imul
addr16
subl
lret
iret
fiadds
in
leave
incl
int
inc
push
xchg
repz
loope
push
xchg
ss
and
inc
out
sub
adc
fwait
or
push
sahf
aam
cli
shl
es
cmp
iret
loop
sub
jmp
das
pop
cmp
fbld
xor
cli
dec
aam
insl
in
xchg
sub
outsl
cmp
add
or
mov
gs
add
mov
or
mov
mov
push
cmpl
loopne
mov
mov
jmp
std
scas
loop
fwait
js
sbb
jmp
loop
enter
dec
outsb
lahf
pop
xorb
loop
push
mov
sbb
mov
sbb
jp
push
adc
mov
stc
mov
mov
pop
jp
mov
loop
mov
rcl
cmpsl
stos
pop
loopne
jecxz
lret
mov
mov
es
lret
fistpl
fwait
inc
mov
xor
iret
inc
lret
cs
nop
xchg
or
inc
xchg
xor
jo
jno
xchg
pusha
push
stos
pop
xor
cwtl
icebp
sbbb
add
fwait
mov
scas
imul
or
adc
adc
aad
or
flds
popf
sbb
mov
add
sbb
enter
sbb
xor
jmp
nop
sbb
xlat
push
lods
popf
mov
fs
lea
mov
sub
insl
push
xlat
dec
test
jo
lahf
iret
aaa
dec
fdivs
xor
pop
mov
inc
or
sbb
mov
lods
icebp
aas
push
mov
xor
loopne
movsb
mov
idivl
jne
jae
inc
mov
out
or
lea
mov
push
jb
mov
les
adc
mov
add
orl
mov
add
lret
jo
and
das
outsb
addl
lret
fimull
out
xor
divb
xchg
aad
cwtl
sbb
cmc
scas
js
add
int3
xor
mov
pop
xchg
rcll
mov
push
xor
mov
sbb
nop
cmp
pop
xchg
jae
xchg
push
lahf
lds
adcb
call
sarb
push
inc
xchg
fisubrl
fmull
mov
sbb
adc
test
and
fidivrs
scas
inc
mov
push
inc
sbb
inc
fisubs
and
adc
pop
push
std
xor
xor
ret
ficompl
and
mov
cwtl
cmpsl
inc
imulb
xchg
mov
ja
cmp
push
pop
outsl
jo
mov
ja
cwtl
fsubrs
inc
sbb
xchg
xor
sub
out
pop
mov
xor
jmp
inc
leave
mov
call
dec
sub
les
adc
pop
in
or
in
rorb
out
sub
jle
dec
push
or
lahf
xor
popl
xchg
stc
fwait
test
sub
mov
jbe
jg
cmp
jge
push
leave
addr16
mov
es
ja
lcall
push
hlt
mov
mov
popa
sbb
mov
cmp
int
andl
test
xchg
sub
push
inc
ret
push
mov
xor
sub
push
inc
int
lods
stc
push
dec
dec
or
incb
pop
push
leave
sbbl
jge
xchg
std
and
cs
test
jbe
and
aam
jnp
test
dec
sbb
mov
aam
lcall
ljmp
pushf
movsl
out
adc
fs
inc
jecxz
mov
sub
or
sub
mov
adc
fidivl
in
mov
xchg
test
out
push
out
push
or
stos
or
lret
insl
adcb
ja
mov
jno
fxch
addr16
mov
pushf
push
dec
mov
jno
movsl
pop
xchg
out
adc
xchg
int3
into
push
test
and
and
sbb
xorl
add
adc
dec
test
sti
hlt
or
mov
mov
sti
sbb
test
ds
or
sbb
scas
add
lea
push
mov
ljmp
mov
mov
out
pop
enter
movsl
xchg
scas
push
push
xor
addr16
out
adc
jb
rcl
lock
adc
es
push
rol
fildl
test
sub
iret
mov
imul
idivb
adcb
cmp
rcll
psrld
dec
test
sbb
jg
insl
cmpsb
pop
jl
xor
mov
and
jbe
sbb
inc
mov
xlat
xlat
mov
into
hlt
mov
cmp
sub
push
push
test
or
mov
leave
jbe
lret
cmp
xlat
push
cmp
add
ret
push
lahf
in
xchg
mov
mov
hlt
out
mov
add
jle
mov
mov
jl,pn
cwtl
mov
shll
mulb
mov
in
int3
mov
jnp
cmp
imul
inc
mov
push
inc
aaa
sub
jp
fmul
fnstenv
mov
push
out
int3
rorb
popf
popl
dec
xor
cli
adcb
xchg
jae
mov
sti
cmpsl
sti
jno
inc
rol
pop
add
leave
insl
and
inc
cltd
xor
test
cmp
xor
jne
mov
push
movsl
cmp
sti
xchg
mov
lret
xor
pusha
es
daa
adc
jnp
xchg
out
cmp
lea
xor
push
adc
cwtl
dec
dec
sub
sbb
push
sbb
mov
int
nop
adc
insb
call
in
into
icebp
adc
sub
testl
dec
jle
cwtl
add
out
jmp
pop
mov
xlat
xor
xor
adc
addr16
xor
imul
mov
xor
adc
adc
and
bound
sub
or
sbb
movsl
scas
fs
push
mov
or
fcompl
mov
nop
scas
inc
sbb
in
and
xor
popf
outsb
inc
mov
repz
mov
pop
rclb
mov
rorl
xchg
mov
sub
sub
mov
mov
hlt
add
orb
das
push
addr16
out
xchg
loope
and
fldcw
cmp
inc
mov
setae
mov
scas
and
mov
xchg
xlat
in
das
pop
mov
test
test
dec
push
pop
mov
adc
pmulhw
mov
rcrb
xchg
push
mov
arpl
dec
mov
sub
or
dec
in
xor
into
add
adc
test
cmp
push
aas
push
repnz
test
mov
hlt
repz
cs
out
test
cmp
in
sbbb
aam
inc
lea
adc
xor
fidivrl
das
or
and
jl
sub
je
cmpsl
xor
vucomiss
sub
xchg
test
inc
pop
in
in
mov
sub
jo
mov
xchg
bound
fsubrs
push
addr16
xchg
fildl
nop
pop
mov
jecxz
or
sub
sarl
lahf
inc
lods
lret
imul
je
add
pop
xchg
std
mov
in
fwait
mov
lds
rcl
pop
adc
push
sbb
sahf
je
xchg
cmp
cmp
sbb
push
lea
dec
mov
or
lods
sbb
mov
test
xchg
push
and
ss
mov
inc
adc
gs
out
aad
xlat
int
outsl
sub
int3
xor
mov
outsl
ss
enter
or
fldt
mov
pushf
fdivrl
std
add
mov
sbb
jbe
repnz
jno
mov
mov
lret
icebp
mov
mov
jg
neg
daa
lods
cmp
mov
int
push
mov
or
idivl
mov
mov
rcll
sub
xor
sti
xor
mov
sbb
and
lcall
xor
iret
xor
mov
cmp
adc
adc
jb
cmpsl
leave
ss
or
fdivp
icebp
jle
xchg
test
cmp
mov
pop
lret
fdivr
xor
mov
cmp
jg
dec
cltd
push
rclb
mov
and
test
lea
aad
or
pushf
shr
jecxz
xorb
xorl
fistl
imulb
arpl
xchg
lahf
insb
cmp
sbb
aas
jae
mov
sahf
push
or
add
shl
imul
and
pop
bound
xchg
dec
mov
stos
inc
mov
jecxz
cli
lds
cmp
push
jmp
inc
enter
loope
cmc
bound
ret
mov
sbb
and
in
es
and
lods
mov
aad
das
pusha
sti
jns
loopne
leave
mov
nop
inc
ljmp
sbb
push
jp
frstor
roll
imul
adc
jnp
and
sahf
fmull
cmp
xor
movsb
push
or
pusha
add
push
ss
adc
stc
jp
cwtl
mov
xchg
jo
lcall
test
jg
mov
dec
leave
inc
sub
xchg
ret
inc
into
pop
cld
push
outsl
or
rcrb
test
jb
sbb
pop
mov
cmc
call
mov
dec
or
jnp
std
xchg
loop
orl
and
int
je
mov
clc
xchg
push
or
outsb
aam
xor
or
imul
clc
in
or
and
cmpb
loop
sahf
fists
xchg
cmc
mov
sub
mov
jne
mov
clc
cmpsl
test
mov
call
jl
iret
mov
xor
fcmovu
mov
mov
xor
mov
mov
dec
push
pusha
and
pop
jg
or
adc
rolb
insl
xor
mov
test
xchg
push
mov
sbb
dec
mov
sbb
mov
fmull
sub
int3
xchg
push
lcall
mov
jg
test
adc
shrb
push
dec
call
js
fisubs
loopne
out
jns
jno,pt
and
int
cwtl
push
loop
es
sub
adc
xchg
lods
call
xchg
scas
loopne
lret
roll
mov
fwait
xor
popa
and
icebp
xchg
test
pushf
cmp
les
outsl
add
icebp
ja
mov
test
push
jge
out
leave
lea
push
ss
lretw
jns
out
mov
fcmovnb
lock
jb
xchg
call
add
pop
add
add
aad
fwait
pop
pop
push
ja
sbb
adc
repnz
cmp
fsubrl
or
repz
fildll
mov
movsb
mov
fsubr
mov
xchg
sahf
cwtl
leave
adc
or
cmc
xchg
jbe
stos
sbb
xchg
sbb
ss
push
push
xlat
int3
adcl
aaa
mov
imul
nop
imull
inc
out
adc
es
sbb
cmp
repz
in
ret
in
jle
pop
mov
es
mov
mov
adc
pop
mov
imul
lods
add
popf
pop
jb,pt
inc
subb
xlat
and
and
and
adc
std
movl
or
adc
sarb
and
mov
add
and
add
shll
shrb
and
test
adc
je
push
stc
or
sub
cld
aam
jne
push
jne
sahf
push
outsl
jb
dec
push
inc
sbb
xchg
sbb
push
mov
or
add
push
xchg
clc
scas
pop
incl
add
xchg
sti
lods
adc
jl
scas
lods
fimuls
push
jae
mov
out
adc
bound
adc
loopne
mov
sbb
dec
sbb
out
jle
sub
push
mov
dec
add
cmpsl
fidivl
stos
sbb
mov
je
shll
xor
outsl
push
jmp
das
ja
decb
pop
mov
mov
mov
divl
hlt
push
push
clc
repnz
mov
add
lods
es
sub
xchg
cmp
addb
hlt
push
in
inc
pop
sbb
fdivr
pop
or
jnp
nop
rcll
lea
xchg
daa
xchg
jge
in
push
cs
cmp
scas
add
cltd
out
adc
sahf
popf
roll
mov
imul
sub
mov
out
xchg
jp
xchg
insl
test
inc
push
repnz
pop
dec
and
jno
in
jne
cld
fdivl
int
xor
sub
popa
lcall
mov
sbb
jbe
mov
sbb
mov
outsb
sbb
aad
mov
and
iret
loop
mov
xor
sub
jle
inc
mov
fcoms
dec
push
lea
jecxz
lret
out
sbb
pop
sti
fbstp
cltd
sub
dec
in
cs
int
into
push
push
push
in
mov
loop
adc
loop
movsl
sub
add
das
xchg
ret
hlt
sub
lods
dec
mov
jmp
and
daa
mov
fistps
test
mov
mov
adc
jg
bound
addr16
sub
pop
mov
inc
ret
bound
adc
add
or
mov
nop
repz
or
cmp
mov
loopne
jge
loopne
or
repz
mov
sahf
out
jp
call
xchg
add
mov
and
into
testl
xor
lret
sub
xor
mov
mov
fdivrs
xchg
es
sbb
ret
cld
inc
in
xchg
xlat
aam
cmp
shlb
xor
ret
and
inc
in
xor
rcrl
cmc
orl
mov
jns
mov
inc
ret
je
pop
add
jecxz
imull
stc
shrl
pushf
mov
imul
jbe
repnz
rorb
out
pushf
adc
push
jg
jns
adc
push
sbb
cmc
arpl
addb
int3
ja
or
outsl
fldt
sbb
mov
fs
es
loopne
popw
int3
lods
cs
xchg
lods
adc
sbb
pusha
pop
sub
lahf
mov
enter
mov
shrl
insl
push
dec
pop
fiadds
sahf
cltd
insb
test
mov
push
push
and
sti
mov
frstor
data16
sbb
rclb
cli
sbbl
cmp
push
mov
inc
xor
shll
dec
push
push
cmpsb
cmpsb
lods
inc
xchg
nop
lret
sub
and
cmp
mov
add
push
inc
adc
inc
adc
jns
cmp
mov
mov
pop
xchg
les
std
sub
jo
and
adc
mov
jne
call
ljmp
out
pop
cmp
mov
stc
mov
lods
jp
add
push
cmp
scas
jg
dec
repnz
or
icebp
in
popa
int3
je
lcall
mov
loop
xchg
and
arpl
in
inc
mov
xchg
shrb
nop
int3
cwtl
in
push
or
aam
ss
xchg
cmc
loope
pop
inc
push
outsb
ss
cmp
les
dec
and
ds
xlat
js
inc
cmpb
dec
xchg
out
or
stc
divl
and
dec
aam
pop
mov
rolb
push
pop
push
mov
inc
loopne
mov
das
or
inc
shlb
mov
inc
pop
shrb
inc
inc
mov
or
mov
pop
cs
shrl
mov
stc
cmp
hlt
cltd
mov
adc
gs
pop
pop
scas
sbb
jmp
pop
scas
outsl
jo
mov
ss
push
push
inc
xlat
dec
jg
fcmovne
add
cmpsb
aam
popa
dec
sbb
mov
aas
mov
je
imul
int
movsb
call
inc
pop
sti
je
sti
movsb
jmp
ds
jge
sub
scas
daa
cmc
iret
adc
dec
das
cmpsb
decl
push
cwtl
mov
lret
fildll
pop
into
xor
dec
mov
pop
bound
add
shll
push
idivl
or
pop
push
sub
mov
ljmp
insl
jge
lea
in
or
lcall
repnz
test
dec
je
addr16
mov
jae
ja
xchg
add
aas
and
stc
jecxz
jecxz
jecxz
pop
dec
stc
inc
and
ja
or
loop
jnp
push
pop
xchg
sub
push
mov
pop
xchg
leave
push
cmp
adc
mov
jbe
or
bound
prefetch
cmp
push
mov
mov
mov
fbstp
es
fwait
testl
dec
repz
pop
cmpsl
orb
cmpb
pop
movsl
inc
test
xor
negl
sbb
jno
ljmp
add
or
fs
add
inc
dec
sbb
lock
out
push
and
and
cmp
jge
mov
mov
in
add
adc
test
push
push
jl
loop
mov
les
rcr
scas
clc
cs
sti
mov
cmp
test
sub
idivl
cld
xchg
inc
adc
mov
icebp
mov
pop
test
mov
cmp
jnp,pt
daa
xor
add
imul
push
hlt
test
je
loopne
das
push
inc
mov
and
fdivr
ret
shrl
lcall
cltd
push
mov
and
pop
fsubs
push
ja
and
xchg
roll
xchg
dec
enter
scas
mov
insb
insb
cmp
imul
fs
sub
pop
out
push
lds
xchg
popf
insb
es
popf
jle
cmp
adc
push
and
data16
pop
bound
mov
rolb
in
fisubl
shl
shrl
or
mov
clc
inc
xchg
adc
pop
aam
jne
insl
pop
in
stc
adc
stc
and
mov
leave
mov
mov
cmp
inc
dec
push
push
lcall
outsb
add
frstpm(287
inc
sbb
add
mov
sbb
fs
inc
or
insl
int3
add
ret
mov
mov
mov
pop
jg
fwait
in
inc
loope
cmp
push
aaa
mov
jae
mov
pop
jbe
stos
mov
pop
shrb
insl
push
shlb
push
dec
movsb
xchg
imul
sub
fldt
adc
inc
cmpsb
jno
outsl
pushf
mov
jnp
js
dec
clc
or
mov
loopne
data16
jnp
push
repnz
aad
jbe
cs
adc
cmp
out
mov
test
sub
jno
cmp
rcll
adc
loop
fwait
and
add
pusha
adc
fldt
push
or
out
inc
outsl
mov
sarl
out
dec
xchg
pop
andl
lea
add
clc
jg
pop
loope
popf
sub
in
cmp
sub
repnz
dec
xchg
fisubl
sbb
out
and
das
xor
shld
jne
dec
xchg
rorb
xchg
xchg
xor
mov
dec
or
test
and
mov
jo
mov
or
xor
data16
lret
inc
mov
adc
jp
add
pop
incb
cmp
lret
push
sbb
mov
pop
std
mov
in
jmp
ja
push
inc
sub
or
mov
orl
pop
and
outsb
jge
jb
xchg
dec
gs
fcmovbe
arpl
fidivrs
and
jle
fdivl
cmc
ds
dec
test
or
ja
cmp
and
adc
sbb
or
mov
das
out
and
push
mov
cmpsl
lret
xchg
xchg
sbb
mov
ljmp
fsubl
mov
lds
call
push
dec
xlat
sub
sbb
push
scas
lret
fldenv
pop
cmp
cld
cmpb
test
pop
pusha
sbb
mov
add
jo
mov
in
or
inc
adc
pop
pop
daa
cs
dec
cli
xchg
and
push
shrl
test
cltd
and
lds
testb
test
int
dec
aam
idiv
arpl
dec
jne
push
sub
in
pop
mov
or
ds
pop
and
cli
cmp
dec
cmpsb
jecxz
pop
aam
dec
popa
ss
in
cli
jg
imul
or
movsb
insb
adcb
pop
jb
loope
stc
jl
icebp
pop
adc
in
mov
pop
daa
cmp
out
add
aas
negl
adc
add
sub
imul
add
add
sbb
repz
jp
cmpsb
scas
mov
faddl
movsl
jbe
negb
inc
les
bound
js
and
aas
scas
movsb
fcmove
js
repz
jo
test
cmpsl
call
adc
fstpl
xchg
mov
cmc
pop
pop
cs
test
mov
cltd
aas
or
cmp
movsb
xchg
jno
xchg
push
fistps
pop
mov
xchg
push
mov
out
inc
pop
icebp
in
scas
mov
jne
pop
inc
cmc
int
mov
aad
sbb
js
mov
push
xlat
fsub
adc
mov
sbb
mov
sti
arpl
xchg
out
ss
add
pop
mov
cmp
add
jo
pop
push
je
inc
mov
cmc
fwait
inc
add
xchg
adc
or
notl
fldcw
cli
xchg
rorl
lock
popf
push
xor
ficompl
subl
cld
inc
movsb
mov
push
xlat
sub
andl
cld
inc
test
out
cmp
and
lahf
mov
or
inc
mov
pushf
cmp
sbb
xorl
cmp
rcll
xchg
add
jecxz
jno
insl
pop
icebp
push
insb
and
shrb
hlt
push
jmp
jmp
mov
aam
lcall
stc
test
bound
int
dec
dec
sbb
iret
lock
jo
xor
cmp
fs
ds
jecxz
es
cmc
xor
mov
ja
jmp
and
js
rorl
icebp
cmp
in
loop
jl
test
or
adc
test
jno
dec
in
mov
cmp
cli
nop
pop
je
scas
sub
jbe
or
mov
inc
pusha
xchg
subb
add
sub
cmp
mov
bound
movsb
jge
dec
bound
cli
mov
arpl
sub
int3
dec
dec
cmp
into
jmp
inc
clc
jp
leave
xor
and
cwtl
cmp
std
mov
and
outsb
cmp
pop
mov
pop
gs
sti
xchg
mov
and
movq
push
push
fs
cs
aas
dec
inc
jno
and
jp
sub
jns
dec
pop
mov
mov
aaa
inc
cmp
fwait
sarb
cmp
insl
push
hlt
scas
not
shlb
push
push
fsubrl
dec
xor
push
loop
jmp
das
pop
je
stos
xchg
ljmp
push
call
movsb
lea
shll
pop
adc
pop
jmp
fyl2x
and
call
ficoms
outsb
int3
mov
cmpl
pop
mov
and
gs
xlat
shll
lret
jnp
mov
repnz
in
lock
stos
cmp
mov
pop
pop
ljmp
xor
rcll
shlb
test
dec
xchg
mov
cld
fsubrs
or
push
add
mov
gs
cwtl
sub
mov
shlb
xor
jp
xorb
gs
adc
mov
fdivrs
mov
pop
adc
or
inc
pop
fmuls
gs
and
push
fcmovu
add
sti
test
xor
pop
into
jg
fsub
jb
in
outsb
xor
shrl
push
jge
sub
xchg
mov
mull
inc
inc
fsub
adc
pop
inc
push
mov
icebp
cmp
jp
fsubl
sbb
jp
in
daa
in
or
pushf
cmp
out
push
jno
out
lods
scas
adc
data16
sub
xchg
xchg
icebp
movsb
leave
fisubl
add
int3
mov
in
fcompl
mov
mov
sub
inc
push
mov
xchg
xchg
inc
push
les
xor
call
mov
inc
xchg
lds
adc
sbb
push
and
ja
push
adc
jmp
push
mov
mov
jl
pop
mov
fcoms
push
stos
movl
dec
hlt
xlat
inc
outsl
test
flds
rorb
in
and
js
rorl
ljmp
adc
mov
js
imul
movsb
insb
mov
scas
mov
into
loopne
cld
in
cwtl
xchg
jmp
inc
pop
add
ret
jns
adc
mov
stc
inc
pop
and
mov
cmpsb
mov
xchg
and
cmp
sbb
lods
mov
inc
fmuls
stc
pusha
and
cmp
into
inc
xorb
outsl
nop
xchg
sub
orps
mov
pop
repz
inc
lea
sbb
lcall
push
lock
lret
lea
cmpsl
adc
jno
je
mov
mov
mov
dec
pop
sub
stos
ret
jmp
cmp
dec
sub
add
sbb
dec
aad
jl
cmc
pop
int3
out
jb
call
jno
adc
push
outsl
or
testl
wbinvd
or
xchg
push
mov
or
push
cli
xchg
js
mov
cmpsl
pop
sub
stc
mov
sub
mov
cmp
femms
imul
xchg
adc
pop
das
cmp
imul
xor
pusha
push
adc
mov
shl
jmp
loopne
xor
xchg
bound
pushf
and
or
ja
sub
add
mov
sbb
sti
popa
icebp
movl
popf
int
mov
cmp
mov
add
inc
cwtl
mov
xor
pop
xchg
mov
ror
leave
or
xchg
cs
xchg
cs
outsl
dec
jmp
add
jb
xor
dec
fistpll
testb
popa
add
movzbl
or
ss
adc
fucomp
mov
fistpll
jg
mov
mov
add
and
jnp
xchg
cld
mov
sub
enter
cmpsl
dec
scas
cmp
stos
sbb
jbe
and
mov
jo
sbb
or
mov
in
cmp
stos
xor
jo
mov
out
les
cmp
mov
pop
pop
lret
ret
xor
xlat
cs
es
xor
jg
mov
sub
inc
inc
cmp
jbe
lahf
out
push
scas
mov
std
lret
dec
xor
dec
and
jo
jecxz,pn
adc
ss
pop
pop
dec
pop
into
rcll
adc
xlat
and
imul
push
test
pop
pop
rorl
mov
notb
testb
push
outsl
push
pop
pop
jge
addl
pop
test
mov
movsl
std
add
lcall
out
mov
mov
pop
sub
inc
mov
pusha
mov
les
dec
adc
test
ret
pop
enter
xchg
xchg
stc
adc
lds
subl
add
lock
and
ljmp
movsl
jecxz
out
pop
insl
pop
inc
imul
mov
xchg
scas
dec
insb
insb
lcall
loop
push
divl
fnstsw
cmpsb
test
adc
in
sub
xor
dec
mov
sarb
jo
pusha
or
mov
inc
jg
push
mov
pop
mov
fs
scas
pop
sub
imul
lahf
mov
cld
arpl
pop
pusha
dec
call
in
sub
mov
aad
insl
into
sbb
xchg
xchg
hlt
ret
out
push
and
mov
mov
dec
xor
cwtl
mov
pusha
das
ja
mov
shrb
loop
adc
out
fnstsw
mov
bound
mov
add
jo
lahf
je
dec
mov
lcall
sbbb
addl
xchg
insb
and
cld
xor
push
imulb
mov
orb
pop
sbb
sbb
and
in
mov
mov
fucomp
mov
cwtl
adc
sarb
sub
xor
aas
and
mov
stos
ljmp
sbb
inc
and
popa
pop
adc
popa
gs
mov
jg
and
jne
add
ror
jp
cmp
and
xchg
into
add
xor
xor
xchg
xchg
repnz
sub
add
fidivrs
daa
cmp
cmc
lcall
ja
and
out
movsb
mov
or
inc
aaa
lods
jle
aas
dec
bound
nop
int3
lock
movsl
scas
push
nop
es
mov
pop
or
lea
imul
mov
cmp
test
pop
jl
lock
sarb
pop
orb
jl
testb
jl
inc
fdivs
jle
sub
xchg
or
mov
xor
sbb
jno
pop
sbb
add
add
popa
stos
sbb
pop
push
fwait
add
movsb
cmpsl
xchg
xchg
dec
mov
fsubrs
rcr
jbe
popf
arpl
mov
nop
idivl
sbb
inc
mov
out
rolb
push
pop
jmp
int3
xor
xor
jbe
push
repz
imul
jne
cs
cli
loope
pop
jle
ja
pop
cmp
dec
stc
add
pop
pushf
lds
push
cmp
push
cmpsl
push
insb
out
hlt
push
pop
jl
jne
adc
cmpsb
stos
jmp
adc
adc
mov
mov
sub
orb
movsl
fbstp
adc
xor
pop
jb
icebp
push
inc
jecxz
push
les
popw
push
push
xlat
mov
fdivl
leave
jl
outsl
push
sub
fscale
push
add
in
pushf
sub
into
mov
es
ror
mov
daa
fstpt
push
fcoms
ret
or
fadd
ret
sub
scas
lret
cld
mov
cmp
gs
inc
dec
push
inc
or
xor
or
gs
push
repnz
sbb
sub
int3
stos
rcl
push
push
addb
lods
ja
sub
in
stc
and
xor
adc
aaa
std
xchg
dec
xor
out
fs
movsl
mov
jmp
sub
insl
je
out
test
insb
jecxz
jle
movsb
loopne
call
add
rorl
add
inc
cmc
addr16
mov
push
scas
or
stos
negb
add
cmp
int
test
mov
nop
jecxz
int3
xor
mov
mov
mov
mov
xlat
ss
cmp
mov
pop
mov
jecxz
shlb
enter
cld
sub
aad
gs
jo
loopne
shrb
jnp
enter
adc
gs
sbb
out
andl
jno
mov
mov
mov
xor
pop
mov
mov
adc
int
in
sbb
mov
loope
push
in
aas
pop
mov
pop
mov
pop
xor
pop
push
aam
xor
out
stc
adc
adc
and
cmpsl
ret
test
inc
cltd
out
aaa
and
mov
jae
sub
jae
adc
push
aas
xchg
leave
adc
add
mov
cmpsb
in
js
push
fldt
mov
sub
lods
jne
sbb
dec
leave
cltd
rcll
or
push
push
mov
enter
inc
into
mov
inc
dec
sub
mov
lret
les
mov
repz
fnstenv
jp
inc
adc
mov
and
inc
push
imul
push
mov
imul
mov
clc
cmc
mov
pop
imul
ficompl
xor
push
fs
push
xchg
mov
add
xchg
scas
xor
cltd
pop
add
inc
cmp
lret
stc
scas
dec
fldt
xor
jl
pop
xchg
fmull
and
inc
clc
add
and
js
fs
jnp
jnp
pushf
ret
mov
shlb
ja
jmp
ja
pop
add
pop
sbb
bound
stos
outsb
lcall
inc
push
mov
stos
mov
xor
mov
sbb
cltd
lods
fcoml
je
xor
repnz
inc
cmp
hlt
pushf
mov
jb
mov
add
insl
dec
pop
outsl
jmp
testl
stos
iret
and
and
cmp
inc
stos
cmp
fsubrl
gs
inc
mov
cli
scas
sub
sbb
dec
sarl
pop
jecxz
lea
push
in
lds
xor
clc
mov
aam
xlat
mov
pop
rorb
mov
int3
ljmp
mov
push
rorb
cmp
adc
pop
jmp
cmp
sub
cs
daa
daa
xchg
aaa
in
dec
in
ljmp
arpl
dec
in
push
push
movsl
rclb
cmpsl
test
pop
or
or
movsl
fsts
outsl
clc
shlb
fs
sub
pop
arpl
das
inc
dec
mov
cmp
iret
idivl
xlat
jns
int3
cltd
mov
jle
rcl
cmpsl
push
dec
pushl
jbe
jbe
jle
fisttps
xor
jne
cmc
push
add
and
cmc
mov
mov
and
xchg
test
push
dec
pop
pop
out
cmc
sub
push
xchg
in
lret
jmp
mov
sub
imul
push
in
cwtl
xchg
xor
icebp
fwait
in
jne
jg
or
popf
insb
jno
ds
xchg
xor
jp
lret
imul
loop
jno
and
mov
add
cltd
movsb
mov
and
fdivrs
repnz
xor
push
jg
sbb
std
mov
jns
add
push
adc
out
jmp
sub
sub
mov
gs
dec
xchg
or
add
das
outsl
cli
mov
add
add
out
mov
cmp
iret
dec
mov
pop
iret
jns
sub
sbb
out
mov
ficompl
mov
fisubs
sbb
lcall
xor
cmp
and
push
in
sub
iret
and
test
insb
ss
xchg
fmull
aaa
xchg
jns
stos
cmp
dec
fwait
add
sub
outsb
decl
or
out
iret
inc
lahf
dec
inc
in
shl
mov
aas
test
test
mov
aad
adc
mov
or
cmc
movsl
ljmp
std
ret
jne
icebp
dec
and
xchg
hlt
or
cltd
add
data16
or
das
and
das
mov
call
mov
into
loopne
sbb
call
das
sbb
jbe
dec
mov
mov
xor
daa
push
mov
xchg
cmp
sahf
push
mov
nop
cmp
fdivs
pusha
cmpsb
mov
xorl
xor
mov
dec
cmpsl
sub
rcrb
cmpl
sbb
fldt
jno
cmovae
inc
leave
pop
push
ret
cmp
sbb
popa
xchg
push
cmpsl
out
mov
das
lret
pop
shrl
inc
xchg
push
jbe
outsb
in
or
ret
sbb
in
xor
cmp
xlat
cmp
sbb
inc
int3
add
add
pop
cmp
shrl
test
aad
popf
push
xchg
mov
sbb
out
pop
mov
mov
popf
pop
mov
mov
cltd
mov
repnz
or
cmp
repnz
fdivr
out
and
bound
aaa
xchg
iret
fmul
outsl
cmp
xor
adc
daa
pop
inc
pop
push
jae
adc
orl
ret
dec
mov
movsb
push
xor
pop
mov
xchg
cmc
dec
dec
scas
and
push
or
stos
call
fcomp
sub
fcomip
cmc
sbb
or
mov
scas
sbb
test
mov
pusha
cmp
shr
xchg
dec
jb
jae
dec
insb
adc
sbbl
xchg
dec
inc
rorl
mov
xchg
aam
mov
in
mov
test
xor
and
bound
pop
int3
loopne
aaa
mov
aaa
nop
push
add
cmp
cmp
test
fcomps
test
icebp
xchg
push
imul
fldl2e
dec
repnz
outsl
cmp
mov
imulb
sahf
mov
ja
divb
movsb
cmp
int
push
mov
and
jmp
or
sbbb
icebp
add
xchg
push
mov
sub
mov
mov
sbb
movsb
data16
stos
and
fwait
mov
cmp
mov
lods
dec
or
out
cmc
dec
cmpsl
inc
ds
adc
ror
ljmp
out
call
mov
pop
fisubrl
ret
add
mov
lods
stos
scas
out
icebp
das
push
stos
mov
aaa
movb
scas
sahf
gs
adc
inc
lock
xor
dec
adc
sbbb
cld
mov
xchg
xchg
and
jb
pop
jae
int3
mov
std
icebp
stc
mov
mov
gs
pop
xor
mov
dec
js
mov
es
dec
bound
popf
and
fidivl
pushf
push
stc
sahf
xchg
iret
xchg
repz
outsl
or
mov
aas
cmpsl
cwtl
loopew
cmp
cmp
and
add
iret
and
mov
mov
pop
add
lods
ljmp
mulb
sub
xchg
nop
sub
iret
jbe
stos
xchg
mov
outsb
xor
and
xchg
out
mov
ror
pop
fmuls
mov
dec
and
mov
out
jbe
imul
gs
jno
sub
xorb
movsl
lret
es
inc
mov
jge
aam
hlt
inc
pop
mov
out
inc
xchg
fmul
int3
mov
cmpsl
and
pop
mov
in
and
orl
daa
je
jo
inc
xor
sbb
fidivl
icebp
cmpsb
sub
loopne
push
mov
xor
xor
std
jge
sub
gs
call
fsubl
cmpb
insb
cld
sti
mov
inc
add
popa
mov
lock
out
out
sub
pop
mov
lods
xlat
or
mov
insl
dec
loope
aam
mov
clc
loope
insl
in
sub
or
mov
cmp
push
mov
mull
loope
add
iret
lret
aad
cmpsb
rcrl
loopne
sub
push
ficomps
pop
inc
mov
cs
and
nop
loope
xchg
mov
push
xlat
push
roll
pop
ss
into
data16
bound
jmp
pop
fisubrs
mov
fcompl
xchg
jnp
xchg
insb
add
fcmove
xchg
add
jnp
ret
xchg
bound
aas
bound
ljmp
aas
pop
adc
outsb
ljmp
pop
add
fbld
jo
data16
sub
repz
mov
in
dec
xlat
mov
les
push
inc
iret
pop
ss
mov
xchg
jmp
jle
sbb
mul
mov
mov
sub
rol
xor
jg
lods
adc
lods
sbb
pop
jg
adc
inc
xchg
addr16
dec
xchg
xor
xorb
mov
cld
xlat
test
push
sbb
jle
lahf
lcall
adc
inc
lock
push
pop
push
dec
xrelease
mov
scas
xor
jns
push
shlb
faddl
mov
popa
push
sub
inc
push
xchg
sub
pop
pop
push
fstl
or
pop
stos
popa
lods
hlt
fwait
xchg
std
fldcw
pop
out
jmp
cmpsb
divb
arpl
jno
push
shll
jnp
jecxz
scas
sahf
and
aas
mov
hlt
sbb
loope
lret
in
insb
cmpsl
bound
es
ret
inc
stos
mov
pop
adc
stos
andl
jns
movsl
push
push
les
popa
ret
mov
sbb
add
pop
out
nop
imul
sub
adc
push
movsl
fsubr
cmpsb
sbbb
test
pop
sub
xor
mov
xor
pop
filds
out
lods
jp
jbe
jg
cmp
test
es
sub
push
ja
mov
sahf
sub
mov
outsl
shll
jbe
pusha
xchg
pop
scas
mov
pop
jo
adc
sub
mov
les
mov
aad
xor
dec
ffreep
mov
in
and
push
cmp
fwait
daa
notl
mov
mov
mov
sub
jns,pn
lret
jmp
cmp
mov
sub
sbb
rcrb
out
jmp
mov
mov
pop
movsb
mov
imul
sub
push
orb
std
ljmp
xchg
orb
mov
fldcw
test
test
dec
cmp
pop
push
cltd
inc
mov
pusha
lahf
arpl
add
pusha
xchg
fcompl
mov
xor
add
fsubl
jg
jno
dec
std
fdivrs
jne
hlt
push
lods
adc
or
pop
out
shlb
adc
loopne
clc
es
rcll
aad
movsb
div
push
test
push
loopne
stc
fists
or
sub
icebp
cmp
dec
mov
int3
roll
sbb
ja
sbb
and
or
out
aad
or
sub
xchg
sahf
or
imul
dec
rcl
xchg
xchg
fidivrs
jmp
adc
push
jnp
xchg
pop
ljmp
aaa
jle
cmp
cmp
jb
aaa
je
add
pushf
mov
mov
push
loopne
sarl
popa
leave
pop
fisttpll
dec
cmc
cmp
cmp
dec
jne
push
sbb
hlt
mov
movsb
adc
icebp
adc
push
subb
imul
dec
lahf
in
aas
push
cmp
hlt
xchg
ds
in
mov
bound
mov
cmpb
pop
mov
enter
push
out
jecxz
xor
dec
add
adc
xchg
lods
push
and
out
sarb
and
mov
mov
sub
or
xchg
fidivl
imul
aam
cmp
loop
mov
mov
adc
lahf
xor
ja
rcrl
sbb
adcl
xchg
add
xor
mov
test
xchg
xchg
mov
mov
jmp
jle
movsb
arpl
fisubs
jne
mov
push
cmp
notb
lea
negb
push
lret
lahf
fs
sub
or
mov
adc
jns
aas
mov
mov
pop
decl
test
mov
insb
std
icebp
int3
sbbl
sbb
jno
sti
cmpsb
ja
cmp
inc
pop
rcr
xchg
leave
sbb
popa
mov
inc
es
adc
stc
mov
sbb
add
dec
lods
lea
in
ljmp
mov
inc
jno
flds
lods
lock
stc
jnp
fs
jmp
imul
fwait
pop
mov
dec
out
push
cmpsl
mov
iret
pushf
adc
add
push
or
push
lock
notl
mov
divl
inc
add
cwtl
cmp
add
xchg
stos
add
mov
push
int
hlt
mov
jns
dec
jno
aad
popf
pop
loop
jno
movl
daa
repz
addr16
arpl
xchg
dec
push
outsl
in
pop
mov
sbb
in
pop
in
push
sub
jl
jg
pop
out
lea
aas
push
push
mov
adc
and
lcall
or
out
mov
xlat
shlb
xor
outsl
sbb
clc
ja
stos
mov
call
push
sahf
insl
adc
sub
leave
aad
add
xchg
ficompl
in
aam
gs
lock
pop
lds
inc
es
scas
lcall
adc
xor
fisubrl
stos
push
enter
bound
bound
rcl
je
les
and
cmovns
cmp
repnz
sbb
push
hlt
shrb
dec
jno
xchg
jno
addr16
stc
cmc
jae
cmpsl
fsubp
push
cli
ja
add
pop
ret
test
or
sbb
vpaddusw
ljmp
insl
or
lret
inc
fistps
fidivl
pop
jno
dec
mov
loope
cwtl
jne
mov
mov
ds
inc
xchg
hlt
iret
sub
xor
mov
repnz
mov
jmp
push
pusha
test
add
les
cld
popa
push
push
leave
jns
or
lret
pop
leave
inc
sarl
xor
in
xchg
pop
ret
test
test
sbb
cli
or
cmp
add
sti
subl
pop
sbb
push
add
in
mov
sbb
out
je
inc
out
xlat
mov
jg
cmc
cli
loop
outsl
adc
dec
out
bnd
nop
clc
movsb
dec
pop
push
jecxz
inc
xchg
xchg
stc
mov
inc
mov
push
mov
or
inc
in
jae
subl
mov
inc
cltd
lock
lods
mov
mov
pop
test
inc
in
fdiv
or
stos
mov
mov
decl
xchg
and
mov
inc
jge
shlb
clc
mov
sub
sbb
push
mov
dec
mov
loope
pusha
mov
stos
mov
mov
and
leave
out
in
ficoml
lahf
add
addb
mov
repnz
xchg
out
cltd
xlat
cmp
inc
push
in
push
popf
cmp
popf
fs
inc
mov
jns
dec
or
mov
fs
loop
cltd
add
adc
push
nop
cwtl
pop
nop
xchg
inc
xchg
xor
jmp
pop
imul
iret
jne
cld
lea
stos
pop
or
mov
gs
xchg
data16
xchg
pop
xchg
or
and
scas
cmp
jge
or
lds
push
and
inc
mov
rorb
call
xchg
sub
dec
iret
mov
sbb
loopne
jp
outsb
aaa
cmp
mov
movsb
adc
and
mov
xchg
jp
cmp
dec
push
repnz
pop
inc
addb
pop
data16
ror
arpl
mov
mov
lahf
pop
pop
rclb
in
pop
xor
je
dec
jl
rolb
jle
int3
ficoml
xchg
enter
mov
es
loop
jle
or
sbb
add
jmp
popa
pop
enter
dec
jl
inc
orl
movsb
lods
push
lahf
pop
popa
jnp
jo
pop
add
push
lods
sub
mov
and
daa
mov
xchg
sti
xchg
insl
iret
sub
or
jecxz
sbb
icebp
mov
aam
xor
mov
popf
xor
inc
sbb
enter
jmp
inc
dec
inc
hlt
push
rclb
adc
mov
js
mov
test
std
mov
mov
inc
adc
popa
pusha
jecxz
dec
pop
sub
push
test
push
and
out
std
or
aad
cmpsb
int3
dec
pop
jl
mov
or
pop
add
cmp
jns
shrl
inc
insl
cmc
push
inc
subb
mov
lods
ja
sbb
and
das
sub
inc
leave
jmp
js
sahf
bound
xchg
cs
rolb
out
jg
shrl
push
cmc
or
mov
jmp
mov
out
cwtl
sbb
pop
push
call
xchg
jle
test
jns
fidivrs
jle
push
and
call
pushf
inc
inc
inc
sbb
decb
fucomip
and
mov
lret
out
mov
bound
inc
ret
push
test
mov
data16
pop
mov
pushf
repz
jl
test
lret
orb
xor
push
mov
adc
push
out
push
push
cld
push
jo
mov
xchg
jp
mov
ret
outsb
iret
xchg
sub
pop
lods
mov
mov
inc
and
sub
push
aas
orl
cmc
cmp
jl
out
jge
sub
or
rcr
lret
dec
fnstsw
cmp
lfs
ret
cmp
xor
mov
pop
ret
mov
rolb
stos
iret
sub
rcll
adc
popf
mov
mov
cmp
pop
or
lods
jl
adc
or
fwait
inc
leave
icebp
stos
xchg
mov
sbb
xchg
sub
xchg
xlat
inc
pop
incb
mov
push
adc
ss
ds
xor
subb
cs
sub
loop
xor
sbb
pushf
aaa
int3
inc
test
push
or
mov
leave
insb
fs
inc
int
cltd
lret
stos
lods
addr16
jp
lds
rol
pop
inc
mov
cwtl
std
push
movb
or
inc
sarl
jae
mov
jns
popf
add
in
xor
push
fs
mov
adc
lret
ficomps
add
mov
loope
xor
fs
cmp
push
and
lds
inc
rcrl
call
hlt
cli
dec
push
add
loopne
lcall
push
inc
or
jp
test
mov
movb
adc
mov
lock
jg
jne
fwait
rorb
mov
int3
inc
pop
ret
xor
out
mov
inc
cs
vmovsldup
leave
inc
jno
xchg
xchg
sub
xchg
mov
cs
xor
fmuls
push
add
idiv
inc
js
ficoml
cmpsb
ja
fwait
push
adc
dec
xchg
dec
pushf
mov
repz
cmp
popf
cmp
adc
sarl
out
adc
cmp
push
mov
add
xchg
mov
mov
or
xor
lretw
sbb
pushf
xchg
icebp
lcall
inc
jle
mov
mov
dec
lcall
jne
pop
rclb
jge
push
shll
imul
add
sbb
pop
mov
mov
repnz
jmp
pop
outsb
jp
lock
sbb
xor
pop
push
bswap
ret
lret
out
inc
mov
int
add
and
mov
andb
mov
push
sarl
jmp
jns
inc
dec
mov
lods
mov
popa
and
xchg
mov
adc
cmp
push
or
out
popa
push
push
adc
addr16
push
xor
and
and
and
addr16
lahf
daa
dec
repnz
cwtl
cs
mov
sub
inc
mov
test
and
push
popa
mov
sub
gs
and
pop
js
loopne
into
addl
sbb
aam
notl
std
jge
or
xchg
jo
repnz
sub
dec
popf
pop
xchg
inc
insl
int
xchg
pusha
pop
sbbl
adc
jge
jno
int
mov
push
cmp
jmp
pop
adc
mov
pop
cmpsl
das
and
icebp
and
call
gs
pop
bound
pop
jae
mov
mov
and
lock
xor
loop
fiadds
dec
add
jo
ror
adc
push
adc
jge
fists
aad
xchg
scas
mov
js
push
lds
inc
scas
lcall
shlb
test
jno
lahf
lret
add
inc
cmpsl
jmp
push
roll
adc
mov
dec
dec
push
ljmp
in
lock
jmp
mov
jle
repz
adc
arpl
outsl
iret
pop
mov
mov
push
cmpsl
fistps
pushl
and
in
dec
les
xor
orl
mov
test
mov
xchg
stc
mov
sbb
adc
scas
in
push
inc
pop
sbb
es
xchg
push
or
mov
es
ja
mov
movsl
fisttpl
cld
arpl
lods
filds
int3
pop
in
loope
sub
jle
add
jnp
fsubrs
xchg
adc
in
ds
out
movsl
test
ljmp
imul
mov
mov
xor
es
lods
cmpl
loop
mov
arpl
push
and
cmc
repz
js
leave
outsb
xor
in
in
lods
pushf
add
sbb
push
outsb
cmp
outsb
cmp
int3
dec
iret
mov
pop
imul
xor
push
test
loope
inc
add
mov
jb
mov
out
pop
cmp
jecxz
xor
cmp
mov
jnp
dec
and
shll
cld
loope
push
sub
mov
or
and
cld
push
pop
cmp
pop
push
arpl
pop
push
mov
in
nop
mov
push
sar
pop
mov
pop
adcb
nop
js
out
outsl
inc
push
mov
inc
ds
xor
lahf
in
xor
and
jge
lcall
fwait
popf
loopne
aas
adc
cmpsl
dec
xchg
add
mov
bound
cld
daa
test
clc
xchg
fisubrl
xchg
push
cmp
js
jmp
jmp
mov
push
bound
in
jl
pop
mov
pop
inc
cs
into
dec
js
aam
pushf
mov
and
inc
test
dec
or
mov
cs
sarl
mov
in
sbbb
sub
jbe
pop
mov
xchg
xor
out
lret
fwait
loopne
jmp
mov
fs
popf
scas
ss
hlt
jae
jbe
mov
fcmove
aas
les
jg
rorl
repz
and
ss
jecxz
aad
jne
cmp
push
xor
out
sub
lock
std
jmp
mov
adc
pop
pop
daa
xchg
sbb
add
adc
aam
lret
adc
adc
out
adc
dec
inc
aas
cld
cmp
pop
in
rcl
pop
pushf
stos
lcall
dec
fxch
xchg
rcll
cmp
fcmovbe
rolb
fsubr
repz
mov
dec
iret
je
sahf
hlt
test
push
and
stos
jns
pop
xor
out
std
lahf
pop
cmp
lods
xchg
call
lahf
fistps
loop
push
jb
inc
xor
push
and
cld
xor
ds
mov
cmc
inc
adc
dec
cltd
push
ss
lahf
inc
jbe
pop
int
push
and
sahf
jmp
inc
fldenv
inc
shrl
sub
popa
fwait
das
hlt
les
adc
xchg
js
into
or
addr16
mov
nop
push
nop
fldl
add
xchg
mov
cld
mov
dec
popf
ficompl
lea
ds
das
addr16
icebp
ret
clc
sub
adc
test
mov
out
data16
jmp
cmpsl
std
push
lods
push
in
mov
mov
xchg
or
push
and
add
cmp
jae
sbb
icebp
mov
jno
cmpsb
lret
xor
mov
mov
sub
xchg
adc
push
aaa
sbb
xor
mov
popa
jmp
push
pop
dec
pop
arpl
movsl
push
pop
fisubl
out
sbb
xor
dec
sbb
js
sub
outsb
mov
and
xor
sub
aam
mov
jmp
ds
xor
or
pop
pop
mov
pop
std
jo
sub
add
mov
lods
notl
xorl
fsubl
leave
cwtl
les
jo
mov
stos
adc
nop
or
xchg
call
outsl
loop
mov
xchg
mov
cmp
icebp
push
sahf
xor
mov
insb
mull
sarl
pushaw
jne
cmp
dec
xchg
outsl
adc
push
cmpsb
out
test
cltd
arpl
addr16
stos
mov
js
mov
lahf
daa
pop
sbb
fbstp
jne
ror
push
sub
cli
adc
lret
mov
gs
mov
insb
andb
lret
jae
ret
pop
ljmp
sub
pop
lahf
or
sbb
repnz
pusha
push
sub
pop
adc
leave
outsl
pop
test
sub
xchg
fwait
imul
test
sub
push
call
cli
in
jno
pop
lods
dec
outsl
sti
pop
andb
cmp
and
xchg
movsb
mov
push
imull
lret
sub
add
fsubrp
pushf
xor
adc
push
push
cmpl
push
sahf
lcall
lret
adc
inc
cs
jmp
popa
in
sbb
jnp
cmpb
test
pop
out
pop
push
loopne
faddl
jbe
sbb
call
lods
mov
outsl
lds
sbb
sub
lret
shll
scas
push
xlat
jno
xchg
aad
pop
shl
call
sbb
fdivrs
mov
popa
out
mov
test
scas
pop
in
pop
mov
ljmp
pop
js
ljmp
in
daa
cmp
cld
popl
push
fcompl
inc
aaa
lret
mov
dec
jmp
cmp
clc
jnp
insl
aad
jns
inc
jbe
xchg
xchg
xor
adc
daa
or
int3
pop
outsl
and
in
lahf
add
lock
xor
mov
or
jno
dec
out
pop
adc
dec
inc
and
xchg
lods
lahf
dec
in
xor
es
repnz
dec
xchg
adcl
or
push
sbb
or
ja
out
dec
xchg
aaa
jg
push
push
inc
shll
pop
in
stos
inc
fsubs
push
cmpsl
xor
lret
loop
jno
push
aam
mov
mov
sub
add
scas
sub
xor
jns
push
fisttpl
std
pop
lcall
rorb
pop
mov
jge
mov
pop
mov
inc
sub
test
xchg
push
cwtl
pop
addr16
dec
mov
add
arpl
stos
data16
and
dec
jae
add
mov
xchg
add
sub
mov
xor
pop
dec
in
aaa
stos
fadds
or
mov
adc
sbb
add
mov
jecxz
xchg
pop
std
fdivrl
rcrl
aam
fwait
jnp
in
sub
push
mov
pop
fisubrs
out
imul
outsb
push
jnp
push
jmp
mov
jmp
pop
mov
jae
pushf
cmp
mov
mov
xor
and
pop
sarb
movq
shrb
mov
cmp
xchg
lods
cmp
pusha
stos
pop
daa
and
sbb
mov
inc
mov
mov
stos
xor
mov
sbb
imul
xchg
xor
lods
adc
lret
cmp
or
stos
inc
imul
icebp
pop
xchg
sbb
mov
clc
in
rol
stos
mov
imul
adc
inc
fcomp
mov
push
jmp
sbb
call
in
add
js
sub
adc
dec
push
idivl
stos
popa
and
mov
or
xor
push
push
es
lods
movsl
push
push
cmpsl
loop
adc
rolb
jae
push
add
icebp
mov
mov
out
jnp
pop
and
xor
jecxz
jg
add
int3
shrb
adc
jnp
sub
inc
pop
dec
mov
xchg
mov
push
dec
push
aam
dec
sub
fcompl
leave
popf
ljmp
fadd
call
aaa
cmp
shl
sub
jg
xor
stc
pop
pop
lret
out
pop
jnp
pop
cmpsb
dec
icebp
mov
sub
aam
testb
mov
icebp
stc
sbb
nop
pop
out
push
inc
xor
outsl
loope
xchg
dec
popf
xchg
adc
and
add
push
in
xor
loope
jmp
or
adc
xchg
rcl
jmp
mov
testl
cltd
movsl
mov
or
inc
cld
mov
in
int3
pop
fisttpl
sbb
sbbb
cmpsb
xchg
stc
aam
xor
cmp
xlat
sarb
sub
in
pop
gs
jp
outsb
sbb
filds
outsb
ljmp
and
fcmovne
mov
cmp
out
cld
scas
idivb
dec
out
or
mov
and
mov
fnsave
imul
jl
fiaddl
sbb
jl
dec
jg
scas
lret
dec
and
push
or
mov
mov
decl
jae
or
xlat
adc
mov
repz
jmp
dec
jb
pop
and
add
imul
clc
sbb
lret
inc
rclb
lods
stc
and
dec
push
rcll
sub
lods
in
and
lea
sbb
inc
aas
mov
mov
js
xchg
xchg
push
fdivp
test
repnz
inc
rep
jo
scas
fnsave
jb
les
xchg
into
pop
inc
aas
repnz
add
ret
or
pushf
cmp
jae
pop
ss
jne
push
ja
ret
pop
rol
xchg
sub
and
push
adc
jp
xor
xlat
cs
shrl
in
mov
movsb
enter
and
add
fidivl
lods
pop
jmp
stc
sbb
mov
mov
cmpsl
mov
dec
aam
arpl
sub
adcl
push
ss
clc
hlt
in
frstpm(287
dec
repnz
loope
push
sahf
cmpsl
cwtl
jo
add
xchg
or
xlat
pop
dec
pop
cwtl
xor
aaa
cmpb
jns
xchg
mov
xor
int3
mov
push
fldl2t
stos
jge
adc
mov
jge
repnz
mov
xor
push
inc
and
fs
in
adc
je
imul
cmp
dec
adcl
jb
sbb
xchg
push
sub
js
pavgw
mov
inc
arpl
ja
fidivrs
inc
incb
jle
test
push
jno
add
lds
div
xchg
and
and
dec
pusha
mov
sbb
pop
cwtl
jo
cmc
cmp
mov
jns
inc
jge
cmp
adc
frstor
loope
stos
aad
dec
adc
les
jp
js
push
mov
aas
mov
imull
icebp
cmp
movsb
popa
lods
push
push
adc
inc
xchg
add
xchg
movaps
scas
int3
test
mov
pop
aam
je
mov
ljmp
mov
cltd
mov
or
clc
mov
les
sbbb
adc
mov
jnp
cld
movsb
cmc
push
xchg
inc
clc
sub
inc
xor
loopne
cmp
adc
inc
push
xchg
or
mov
pop
add
lods
es
inc
pusha
in
stc
gs
out
inc
pop
jle
sar
jbe
jg
xor
in
scas
jl
clc
in
ss
mov
dec
test
or
mull
ss
imul
stc
nop
ja
pop
xchg
lock
leave
sbb
jne,pn
pop
int
hlt
outsl
mov
repz
or
scas
pop
push
repnz
or
or
imul
inc
loope
mov
add
and
fbld
push
push
push
imul
jno
jae
xor
sbb
jns
xchg
pop
lcall
fistpll
jb
pop
ret
xor
mov
cmp
aad
cmp
pop
pusha
mov
rcll
push
pop
sti
in
cmp
subl
inc
pop
std
std
push
nop
les
jnp
lret
out
cmp
mov
push
loopne
xchg
repnz
pop
dec
jae,pn
adc
stc
rcrl
mov
outsb
stos
sub
shlb
or
hlt
xor
and
mov
fisttpl
cwtl
cwtl
movsl
repnz
dec
adc
or
add
push
aaa
inc
pop
push
je
jg
mov
push
ret
sbb
jne
pop
mov
outsl
lret
jmp
mov
mov
dec
xchg
cli
imul
pop
dec
mov
mov
sbb
test
incb
shlb
pushf
pop
sub
fidivl
sub
jbe
outsl
lock
or
sti
pop
les
jmp
fsqrt
aad
shl
rclb
dec
mov
and
xchg
inc
out
mov
mov
add
ror
xchg
pop
stos
aam
imul
sbb
or
jo
xchg
sbb
xor
and
das
ja
pop
mov
pop
mov
popa
jge
push
xor
ja
mov
mov
xor
and
xor
adc
faddp
dec
in
or
cmp
mov
jno
push
iret
mov
pop
stos
les
nop
hlt
pop
int
dec
imul
loopne
repz
mov
dec
inc
mov
fbld
lds
sub
mov
dec
sbb
movb
inc
ljmp
out
loope
lock
stos
stos
cmp
mov
or
daa
icebp
dec
dec
sbb
es
popa
inc
add
cmp
mov
cli
pusha
addr16
add
lahf
sub
inc
bound
adc
push
mov
fwait
dec
push
cmpsb
rcr
cmp
xor
popf
pop
pop
sbb
scas
and
test
push
jno
insb
mov
or
mov
pop
push
movsb
sti
add
jne
xchg
xchg
mov
fwait
test
frstor
dec
and
insl
inc
out
or
pop
aas
mov
das
out
or
mov
insl
adc
xchg
jo
xor
mov
xchg
test
jecxz
imul
in
fldl
mov
mov
ja
lret
jns
jecxz
notl
pop
clc
mov
adcl
push
enter
pusha
or
or
pop
scas
fsts
xchg
mov
dec
lea
out
or
mov
ja
jae
push
adc
nop
pusha
mov
cmp
cmp
rorl
xchg
or
push
outsb
jnp
std
pop
es
mov
mov
lret
or
test
push
sub
scas
mov
negb
mov
or
xor
int
and
cmpsb
dec
int3
lea
or
jo
mov
arpl
or
adc
jecxz
cltd
jge
jbe
scas
lods
inc
mov
jno
mov
mov
mov
repnz
mov
rep
jb
push
adc
pop
sarb
sub
test
lods
loope
pop
movsb
jbe
mov
test
pop
xchg
roll
push
inc
fstl
push
aam
lahf
rcl
imull
pop
sub
icebp
insl
dec
lret
mov
cmpsl
clc
arpl
mov
jae
fistps
lods
fdivrs
push
pop
lcall
push
in
popf
adc
dec
dec
ja
shlb
mov
mov
out
addr16
xorl
xor
shl
add
enter
push
jmp
mov
mov
pushf
scas
das
push
mov
push
jns
cmp
mov
pop
jns
loope
push
lds
sbb
sbb
pop
sub
fisubrs
cmpsb
adc
iret
lcall
dec
add
sub
inc
stos
mov
push
aaa
mov
or
popa
cltd
leave
stos
jne
pop
int3
mov
ss
dec
outsb
pop
cmp
dec
mov
setns
adc
adc
mov
in
jl
pop
dec
or
jne
mov
cmp
imul
jae
pop
pop
ds
hlt
popf
or
sub
lret
mov
sub
sbb
cmpsb
test
mov
shr
sbb
repz
aam
inc
nop
or
lcall
ret
inc
mov
push
enter
stos
stos
push
insl
pop
mov
ret
cmp
push
fwait
movsb
mov
call
sar
aaa
xchg
movsl
dec
pop
nop
adcb
mov
rol
movb
shll
or
pop
ss
fisubl
add
cmp
jmp
mov
cs
in
shrb
aas
jmp
lods
insl
leave
std
jl
popa
movsb
xchg
scas
pop
pslld
sub
jl
adc
fiaddl
sub
adc
loope
mov
dec
repnz
nop
cmc
movsl
lcall
cmc
inc
push
or
dec
mov
fisttpl
mov
xor
arpl
repz
jo
stos
int
lret
pop
jno
xchg
cmp
arpl
rcll
dec
cld
pop
adc
fnstenv
ret
push
dec
rcr
fldt
filds
daa
aam
mov
jge
inc
enter
or
movsl
xor
testl
inc
sbb
shlb
insb
xchg
cwtl
dec
loope
inc
into
icebp
cmpsb
mov
pop
jecxz
cs
mov
or
mov
dec
or
stos
les
adc
sub
mov
loopne
xor
rcll
add
xchg
push
sbb
jbe
mov
stos
sub
lods
and
lods
xchg
xor
inc
pop
mov
in
mov
in
dec
dec
in
and
pop
cmp
rorl
aam
mov
mov
je
imul
inc
out
mov
jmpw
mov
cwtl
clc
movsl
int
popa
sahf
or
rcrl
mov
sub
dec
xchg
stc
sbb
add
add
mov
xor
ret
pop
or
subl
jg
sarb
mov
xor
sub
mov
std
or
in
jbe
add
xor
add
out
cmp
outsl
cmp
push
testb
cmp
lahf
sbb
int3
lods
sub
cmc
mov
mov
lret
std
dec
cmp
and
cwtl
imul
nop
or
outsb
jg
fsubrl
outsb
push
lods
mov
xchg
lods
xchg
or
outsb
dec
adc
mov
ja
and
push
jbe
sbb
mov
roll
jno
sub
loope
cmc
ret
movsb
lret
icebp
xor
adc
push
mov
sub
faddl
mov
enter
add
shlb
arpl
lahf
jb
pusha
pop
insb
fwait
xchg
cmpsb
mov
add
mov
leave
sbbl
dec
sbb
js
out
push
mov
mov
add
sbb
sbb
push
aad
hlt
adc
pusha
aaa
jl
imul
daa
xchg
sbb
dec
stos
in
push
jle
push
adc
mov
mov
loope
out
ficompl
add
dec
cmp
adc
ljmp
out
aaa
sbb
add
adc
mov
bound
fs
sub
mov
push
stos
jmp
mov
jns
mov
mov
sbb
pcmpgtw
sbb
das
pop
mov
cmp
loop
push
cld
mov
inc
pop
push
jl
jbe
pop
loop
stos
out
jge
xor
sti
push
mov
pop
ljmp
pop
lods
and
mov
mov
loop
cmc
das
les
push
lret
nop
mov
je
sub
insb
inc
adc
ja
xchg
mov
jnp
pop
add
mov
cltd
out
xchg
push
out
add
loop
dec
faddl
and
jb
inc
xchg
inc
xchg
dec
sbb
repnz
push
dec
cmp
out
push
adcb
in
hlt
cli
clc
or
lret
xchg
push
jge
sbb
jb
aad
std
stos
sub
dec
lret
add
mov
adcb
adc
lods
cmpsb
data16
mov
rclb
mov
sbb
lret
rorb
aaa
iret
pop
pop
adc
test
jne
push
test
xor
or
in
lahf
loopne
daa
cmp
das
jg
jnp
or
fmull
dec
repz
inc
push
test
dec
in
jle
add
cmp
daa
sbb
and
and
add
insb
dec
sbb
sbb
repz
push
jmp
out
pusha
dec
xor
dec
call
mov
sbb
mov
iret
add
ret
pop
sti
inc
pop
dec
xor
add
test
cmp
xchg
shlb
addl
shlb
push
jmp
rcr
icebp
scas
push
xchg
and
push
test
lret
mov
fadds
mov
sub
negb
adc
ljmp
lock
cmpsl
sub
jns
add
es
inc
jae
pop
stos
push
cmp
out
push
push
and
into
leave
test
shll
mov
imul
mov
xchg
mov
sahf
je
divb
xchg
sub
hlt
or
sub
jg
xor
inc
push
shrl
xchg
sub
mov
data16
out
and
mov
and
popa
sahf
fsubp
in
aad
lea
popa
popa
scas
int3
push
jns
fcomps
xchg
sub
add
mov
cmp
pop
inc
mov
inc
or
fdivr
in
inc
pop
hlt
mov
cmc
cmpsb
lods
mov
cmc
mov
data16
in
mov
sub
mov
cs
jg
scas
mov
sbbb
aas
cmpsl
jge
sti
fstpl
xchg
and
adc
xchg
jae
mov
push
inc
shll
shll
dec
jp
mov
push
xchg
mov
popa
in
test
cmp
fcomip
movsl
mov
pushf
mov
movsl
dec
sbb
lods
bound
sahf
popa
loope
addl
pop
dec
test
sbb
outsl
in
cwtl
clc
ret
pop
popa
add
fs
clc
test
cld
pushf
cli
int
mov
cwtl
outsb
and
pop
xor
jp
xor
insb
xor
outsl
decl
mov
shll
jb
int
add
pop
lcall
mov
sbb
adc
sbb
loopne
je
add
andl
or
xor
sub
xchg
cld
insl
xor
and
cld
xchg
sub
jns
cmp
sub
fisubl
ljmp
gs
push
mov
mov
adc
leave
jecxz
xchg
stos
sbb
loop
cmp
in
fsubl
js
mov
pop
ljmp
mov
cmc
clc
pop
sbb
andb
cmp
cld
outsl
add
mov
xchg
lods
push
xor
dec
cmp
andl
cs
sbb
mov
jl
push
dec
adc
popf
xchg
shll
lret
adc
in
mov
adc
cld
jmp
test
icebp
jbe
dec
lods
fwait
jp
jbe
push
scas
dec
adc
imul
add
mov
jno
cmp
mov
sbb
int3
mov
inc
push
es
into
inc
addb
mul
jge
jp
test
xor
xorl
inc
or
test
lods
int3
cs
jecxz
lret
sbb
jne
mov
aaa
sarb
test
or
mov
mov
rorb
mov
lods
or
int3
shl
lods
data16
xchg
es
xchg
and
daa
jb
dec
xchg
sahf
ds
xor
mov
mov
pop
push
rorb
loope
jg
ljmp
lods
push
push
ds
mov
cmp
adc
stos
pushf
inc
insl
cmp
push
or
mov
pop
mov
jp
or
or
js
mov
pop
mov
repnz
test
pop
ja
jmp
std
or
ss
dec
sub
rcrl
cli
pusha
push
stos
dec
cmp
xchg
jno
xorl
mov
mov
aas
cmp
mov
sbb
add
mov
push
mov
scas
cmpsl
push
cmpsl
testb
fs
fnstenv
andb
xchg
enter
dec
jecxz
and
lahf
adc
mov
or
mov
das
leave
ss
hlt
or
xor
inc
adc
mov
adc
fcmovnb
enter
add
add
mov
sub
movsb
and
inc
cmp
sbb
jne
or
xchg
fnsave
adc
jp
add
push
in
xor
js
fcomps
xchg
sub
divb
xchg
sahf
int
and
pop
xor
cmp
jo
jne
hlt
add
shll
jp
cmp
jg
gs
popa
mov
jbe
xor
mov
jbe
stos
dec
add
jnp
lcall
jg
mov
pop
ja
pop
arpl
mov
fsubl
inc
jne
jge
jmp
loope
stc
repz
fsubl
stc
mov
das
addr16
jae
ds
jnp
jbe
fists
or
and
jp
xor
mov
in
js
fmul
jle
jne
les
out
or
adc
dec
bound
xchg
cmpsl
pop
xchg
iret
xchg
stos
lret
cwtl
in
pop
and
adc
mov
hlt
mov
inc
in
pop
mov
ficomps
mov
pop
jns
dec
lds
cs
dec
adcl
rcr
mov
mov
frstor
pushf
adc
jb
shll
jo
jb
push
inc
cmp
pop
in
test
pop
jmp
mov
call
sub
mov
cld
jns
mov
mov
cld
or
push
adc
mulb
jbe
cs
cs
pop
fstpt
cwtl
mov
dec
xlat
aas
ss
add
daa
pop
call
jp
fisubrl
out
repnz
jns
dec
mov
fs
out
adc
clc
pop
xor
shl
mov
sub
iret
sbb
dec
inc
cwtl
mov
sub
adc
std
mov
add
rcll
lret
fcompl
pop
push
pusha
stos
sub
add
lods
icebp
iret
sub
ja
into
mov
sub
add
data16
out
aam
dec
js
xchg
xchg
je
jp
push
inc
sub
and
popa
mov
xor
lret
pushf
or
lret
or
pop
rorb
mov
push
out
test
add
xchg
add
adc
and
cs
or
scas
push
inc
pop
xchg
inc
popf
push
inc
ss
enter
cwtl
sub
push
mov
mov
sbb
jbe
ds
jno
movnti
lcall
icebp
and
cli
xchg
hlt
or
mov
outsb
cmp
sbb
call
sbb
adc
dec
sub
add
popa
inc
dec
mov
imul
adc
cmp
push
out
jmp
adc
jecxz
lock
rcl
mov
call
nop
jae
out
cmp
pop
xor
jnp
adc
js
add
loopne
xor
mov
cmc
sub
mov
adc
les
add
xchg
lock
fstpl
adc
lahf
and
jo
insb
insl
jb
adc
pop
mov
arpl
inc
dec
imul
sub
popa
test
cmovnp
fbstp
stos
out
inc
push
and
cwtl
mov
sahf
int3
pop
sbb
les
popa
xchg
loopne
dec
cmpb
lds
subl
rcrb
xor
add
iret
push
sti
cltd
or
mov
sbb
xor
pop
sub
dec
insb
ss
in
fisubs
es
mov
imul
sbb
push
fsubr
mov
fsubrl
cmp
push
shrl
test
pop
nop
idivl
and
add
das
or
or
xchg
in
shrl
fcoml
loopnew
and
mov
mov
int3
adc
cmp
popf
push
or
jo
sub
xor
pmuludq
xchg
and
pop
xchg
cmc
jne
mov
mov
adc
in
insb
dec
pop
out
imul
sub
imul
pop
movsl
push
fsubrs
out
bound
lcall
icebp
mov
push
cli
sarl
icebp
pop
rcr
sarl
outsb
sbbb
lea
push
cmpsb
pusha
jge
mov
or
test
and
cltd
outsb
mov
loope
outsl
pop
call
xchg
es
rorl
xor
add
outsb
sub
dec
jmp
ja
xchg
test
fwait
mov
adc
fs
and
fstps
pop
das
pop
insb
movsl
loop
adc
daa
mov
stc
es
into
ja
lods
stos
sahf
sub
call
cmp
loope
mov
hlt
lea
sbb
push
cltd
xchg
sbb
fs
ja
enter
pop
aad
push
dec
xchg
gs
shrb
add
pop
std
cmp
mov
fmull
rcr
cmp
jecxz
out
sub
push
shrl
dec
leave
inc
in
add
xchg
lock
iret
pop
cmpsl
inc
xchg
pop
lcall
jle
lcall
or
cmp
data16
push
and
cmp
popf
int
sbb
xchg
pop
imul
jbe
pusha
jno
jp
loopne
lret
pop
mov
aas
add
xchg
lods
test
adc
ds
pop
aaa
sub
fnsave
cmp
mov
mov
aam
xchg
mov
jbe
pushf
sti
cmp
dec
mov
rcl
jno
lret
clc
pop
mov
push
shrb
xor
mov
fwait
dec
pop
aad
jo
mov
pop
movsb
cltd
xchg
gs
shll
xor
ja
lcall
mov
mov
xchg
jns
lcall
shrl
lret
mov
mov
sbbb
xor
jge
call
movsl
cwtl
cmp
mov
and
repz
insl
jb
test
mov
movl
ficomps
add
enter
inc
mov
movsb
cmp
dec
lock
js
add
pop
mov
pop
out
jl
fisttpl
jmp
out
sbb
push
insl
dec
js
daa
add
adc
fcompl
data16
jns
daa
push
mov
push
in
mov
cmc
in
dec
leave
sbb
sbb
loope
jp
push
aas
lcall
mov
dec
test
lea
out
adc
add
hlt
test
mull
sti
sub
and
out
cmpsl
mov
xchg
gs
push
and
rcll
dec
je
hlt
out
xor
pop
rorl
jae
stc
aam
test
sbb
mov
dec
inc
mov
xchg
cmp
sahf
cltd
mov
sbbb
sub
push
ret
pop
fidivrs
inc
ret
and
mov
fsubrs
or
out
pop
ljmp
outsl
mov
push
jp
lret
jg
cmp
xor
inc
outsb
rolb
ja
or
cli
inc
jecxz
xchg
sub
iret
popa
sub
jmp
cmp
je
mov
mov
lock
push
sub
data16
inc
xchg
add
mull
sub
clc
mov
test
sarl
push
push
and
dec
push
mov
pop
xor
mov
sbb
sti
push
loop
jecxz
jae
push
inc
lock
fs
pop
inc
push
mov
mov
call
cmpsl
cmpl
mov
scas
adc
inc
jae
stos
lds
out
jae
push
es
or
fimuls
lds
arpl
fwait
dec
lret
int3
mov
stos
pusha
movsl
addb
outsb
stc
stos
aas
xor
xor
fucompp
cmp
sub
mov
fwait
adc
stc
cmp
es
decl
jmp
mov
mov
add
test
xor
pop
mov
nop
mov
jmp
stos
movsl
das
pop
xor
dec
push
stc
cmpsl
pop
out
negl
sub
jno
xorl
int3
jb
cmp
adc
jnp
stos
xchg
inc
or
mov
push
stos
inc
cmpl
outsl
adc
sub
sub
test
jb
andl
mov
cmc
inc
stos
lds
jl
repz
lea
or
inc
mov
jne
mov
pop
xchg
pop
mov
jecxz
mov
pop
cmp
xchg
in
sarl
sbb
imul
test
sbb
xchg
aaa
dec
std
pop
add
movsb
repz
cld
fmulp
mov
jnp
roll
cmp
enter
shr
divl
mov
xchg
jo
ljmp
cmp
and
arpl
enter
jecxz
fwait
xchg
outsb
shll
cmp
shrb
xlat
test
mov
fnstsw
xor
xlat
hlt
lods
jbe
jnp
ss
outsl
data16
sarb
mov
cmp
leave
leave
mov
lcall
dec
mov
test
out
adc
ljmp
lret
mov
sbb
loope
mov
stos
sub
adc
enter
cmpsl
mov
or
fsubr
add
pop
or
iret
dec
mov
leave
jbe
and
fidivs
shrl
mov
xor
push
add
aas
xchg
push
mov
stos
insb
lret
inc
xchg
insl
in
mov
rorb
jb
leave
cwtl
adc
jb
pushf
or
scas
dec
ds
insb
loop
jmp
inc
imul
sbb
fsubr
cld
insl
push
test
mov
loope
loop
sbb
pop
and
dec
sub
nop
imul
lahf
and
pop
rorl
addr16
outsb
sub
sub
mov
dec
jecxz
cmp
push
inc
movsb
push
in
test
lret
fldl
inc
push
out
idivb
xor
insl
add
lcall
inc
jbe
cld
dec
cmp
mov
lods
aam
add
sbb
cmpsl
iret
sti
loop
ja
mov
sti
jbe
movsb
jg
outsb
bound
repz
mov
das
jb
jns
xchg
aas
das
xlat
repz
xor
outsl
cltd
jno
movsl
lret
mov
xor
mov
stos
shr
lret
inc
mov
xchg
jle
sub
icebp
mov
out
aaa
fidivrl
gs
and
lods
mov
push
movsl
call
dec
and
orb
jmp
inc
inc
lcall
mov
inc
xchg
mov
sbbl
test
dec
inc
aaa
shlb
inc
je
cmp
push
lods
ja
iret
out
cltd
mov
or
cmp
arpl
ljmp
xor
lcall
pop
xor
rcrb
clc
mov
sbb
sbb
orl
push
add
jle
out
ds
inc
cmp
call
sub
mov
jge
in
fwait
inc
loope
sbb
mov
xorb
sub
popa
popa
mov
and
lcall
or
test
nop
xchg
ds
xor
pop
inc
cmpsl
mov
punpckhdq
mul
add
cmp
pop
adc
dec
int
push
mov
lods
mov
fwait
dec
hlt
test
iret
stos
arpl
ret
out
inc
imul
push
aas
cmp
xor
mov
fnstcw
stc
sub
mov
shll
cmpsb
enter
inc
sarl
iret
loop
push
repnz
xchg
ljmp
push
shlb
add
jp
pop
push
lahf
cmp
jno
addb
incb
sub
push
enter
xor
pop
les
push
jmp
or
push
fwait
lcall
add
cmpsl
pop
andl
mov
shrb
cltd
xchg
and
jecxz
fidivl
mov
sub
dec
jbe
mov
cmp
fcoml
test
cwtl
imul
push
or
es
pop
ffreep
xchg
dec
loop
xor
or
or
outsb
outsl
xchg
mov
sar
test
mov
xchg
push
test
xorl
mov
sbb
xchg
sub
mov
sub
insb
fistpl
pop
psubw
fldcw
sbb
jmp
movl
in
icebp
shll
sti
mov
push
pop
and
mov
push
lcall
clc
sub
pop
cli
cmpb
jp
int3
inc
push
jl
sarb
xchg
in
cmp
xchg
fwait
inc
int
imul
lods
sbb
mov
push
mov
loope
test
das
adc
adc
sbb
inc
test
arpl
push
jl
std
es
incl
fwait
xor
test
aam
stos
add
das
add
and
hlt
decl
cli
into
mov
xlat
push
cmp
sbb
hlt
pop
sub
test
out
fsubrs
mov
cmp
jl
xchg
test
jnp
push
pop
ret
dec
std
lock
repz
shl
xor
mov
popa
bound
mov
inc
sub
test
xchg
mov
fisubrl
test
dec
insl
scas
js
push
add
aad
dec
jbe
inc
and
lods
sbb
cmp
arpl
cmpsb
clc
jns
aad
and
mov
pushf
pop
incl
lcall
movsl
movsb
rolb
call
or
jp
mov
sbb
sbb
leave
push
mov
test
push
sbb
adc
cmp
pop
and
mov
xchg
iret
mov
xor
xchg
lods
fsub
xchg
es
mov
outsb
cmp
pop
js
or
add
jmp
popa
jbe
and
dec
cli
sub
push
enter
add
or
mov
movsl
xchg
cmp
ficoml
iret
cmpsl
ss
stos
cwtl
pop
inc
sbb
jbe
gs
push
pop
pop
pop
ret
es
push
add
push
pop
mov
sti
outsl
sbb
int3
push
cmp
jp
scas
aaa
in
mov
push
dec
xchg
cmp
or
add
pop
push
scas
in
cwtl
push
push
les
aam
xor
insb
xchg
push
mov
xor
add
out
xchg
fldl
cltd
mov
lods
mov
xchg
insl
lods
mov
jp
and
xchg
xor
cltd
rcll
mov
clc
sti
xor
outsl
xchg
cwtl
jle
adc
pusha
repz
pop
mov
inc
les
popf
aaa
push
mov
push
loope
xor
scas
dec
cmpsb
inc
cmp
mov
cmpsl
mov
sub
inc
xchg
sbb
or
add
data16
xchg
sbb
add
rolb
loopne
jecxz
nop
imul
popf
mov
push
xor
xor
aaa
jne
xchg
sbb
or
cmpsl
sub
fsubrs
inc
mov
sbb
int
pop
imul
xor
sub
mov
lds
adcb
popf
jnp
mov
leave
popf
mov
mov
ljmp
outsl
xchg
into
lret
loop
shrl
pop
sahf
push
fprem1
xchg
addr16
stc
bndstx
subb
repnz
cmpsb
fldl
sub
sub
xchg
mov
rcll
int3
and
adc
jmp
sbb
adc
lret
sahf
sub
xchg
and
add
stc
mov
out
jge
push
clc
mov
and
in
push
or
xor
test
insl
dec
sub
mov
mov
bound
sub
callw
push
cli
xchg
ret
mov
or
popf
xchg
xchg
in
jb
clc
icebp
or
add
ds
sub
rcll
inc
scas
mov
outsl
pop
dec
xchg
popa
sbb
ljmp
in
xchg
push
les
bound
push
popl
or
jbe
xchg
dec
inc
in
jbe
or
mov
fs
adc
push
add
cmp
or
lea
xor
pop
xchg
xor
jnp
adc
xchg
in
xor
rcrl
adc
mov
inc
in
lahf
add
mov
sub
mov
fsubl
cli
ljmp
push
ds
call
ljmp
fs
fisubl
pushf
popf
inc
sti
push
sub
adc
fwait
insl
cmp
cli
inc
sub
inc
jmp
je
mov
jno
das
ljmp
mov
push
sbb
loope
and
push
mov
nop
in
jg
cmp
xchg
test
push
mov
jp
in
xor
push
aas
in
mov
jp
inc
arpl
xchg
into
repnz
cltd
addr16
push
shlb
cmp
pusha
enter
cmp
ljmp
insl
xor
roll
jbe
jmp
pop
mov
pop
aam
inc
push
mov
in
xor
inc
push
dec
lcall
and
inc
jmp
push
jo
inc
or
sub
repz
pop
loope
arpl
cmovp
push
mov
outsb
and
cmp
dec
sbb
jo
inc
add
hlt
inc
mov
xor
cmpsb
ja
xor
sbb
pop
popl
fistpl
adc
loopne
adc
jmp
movsl
pop
imul
mov
fisubl
andl
mov
sub
shll
enter
outsl
jp
data16
ljmp
data16
adc
sahf
clc
mov
mov
imul
lock
dec
jge
mov
bound
sbb
cld
adc
ret
outsb
fldcw
clc
push
call
and
dec
cmp
imull
fists
icebp
cmp
xchg
push
shrb
stc
fs
mov
stc
mov
sub
pop
pop
fcompl
inc
xchg
and
xor
cs
adc
cmpsl
add
inc
mov
push
mov
xchg
in
mov
aas
test
pushf
out
push
loopne
mov
les
out
mov
add
arpl
and
mov
sub
lock
xchg
jns
idivb
imul
cmp
imul
push
push
mov
insb
pusha
cmpsl
ljmp
pop
outsb
xchg
mov
icebp
pushf
into
out
sbb
sti
repz
push
insl
test
push
in
jnp
lcall
lds
ffreep
hlt
xchg
push
shl
push
fwait
jmp
mov
push
stos
and
cmp
fldt
enter
cli
jl
mov
pusha
scas
xor
jae
adc
sar
cmp
cmp
and
clc
mov
xchg
cmp
inc
jmp
inc
push
xor
push
and
cmp
add
inc
outsl
adc
sbb
insl
fsubl
pusha
pop
rorl
mov
push
pop
xlat
adc
cmp
fdivrs
jbe
fists
mov
std
aam
arpl
sbb
jns
push
stos
pop
xor
das
push
adc
and
out
movb
adc
cmp
mov
adc
lret
add
jno
jb
pop
or
fisubs
dec
push
imul
push
sbb
pop
jp
lahf
shll
sub
jne
push
and
inc
loope
adc
fs
push
inc
fisubrs
mov
xchg
out
or
pop
mov
mov
pop
aad
cs
jae
cmp
int
sar
call
add
pop
push
mov
sbb
inc
sbb
ljmp
cmp
in
testb
sub
xchg
cmpsb
xchg
mov
or
lods
data16
stc
sbb
sub
dec
ret
popf
dec
sbb
das
sbb
mov
cmc
and
mov
es
repz
xchg
sbb
stos
xor
jmp
or
data16
enter
sub
es
shl
mov
sbb
push
xor
rclb
and
sahf
or
shr
pop
jecxz
push
or
ret
push
xlat
repnz
mov
leave
add
dec
repnz
std
mov
jns
xchg
dec
scas
scas
pop
shrb
lods
push
adc
xor
lods
das
cmp
jl
jmp
cli
jo
mov
jnp
loope
jg
pop
and
xchg
mov
lret
subl
adc
imul
and
xor
fst
sub
mov
loopne
mov
icebp
movsb
push
ja
enter
adc
pop
daa
insl
das
cmp
outsl
lea
adc
mov
or
ret
mov
cmpsl
mov
sahf
mov
mov
push
fdivrs
dec
daa
test
test
pop
or
adc
mov
xchg
lea
sub
adc
dec
push
pop
sbb
pop
loope
call
dec
xor
fsubrl
das
push
ss
adc
xchg
sti
pop
cmp
cli
or
dec
sub
mov
std
repz
pop
std
mov
inc
mov
and
rcl
and
jecxz
mov
sti
add
lret
sarb
xor
xchg
arpl
movsb
in
loop
lods
sbb
pop
ljmp
test
or
xchg
cmpsb
out
push
pop
mov
les
inc
inc
test
cmpsb
ret
std
test
add
in
push
xor
add
mov
and
and
aam
mov
cmp
xor
xchg
leave
test
inc
jbe
adc
or
mov
aad
iret
pop
int3
ja
inc
test
insl
xor
push
ss
sub
fwait
cmc
lret
movsl
push
mov
jnp
scas
mov
adc
xchg
rcrb
jb
cli
clc
jle
aaa
push
adc
out
jmp
cltd
pop
mov
pusha
aaa
nop
iret
gs
push
lds
imul
sbb
lods
inc
sbb
pop
add
dec
sub
jle
orl
imul
mov
push
mov
pop
scas
cmc
lcall
cmpsb
nop
das
jo
xor
jl
les
iret
sbb
xor
ss
mov
sub
or
sub
adcl
push
dec
cwtl
dec
test
push
js
mov
mov
mov
mulb
scas
aas
mov
push
push
mov
divb
jle
mov
cli
push
pop
mov
adc
adc
fistl
sbb
sub
pop
idivb
sub
test
iret
inc
je
jnp
mov
fiadds
lock
sub
in
stc
icebp
jns
jno
mov
mov
lcall
popa
sti
gs
loope
adc
outsl
inc
cmp
shrd
mov
loop
or
repz
call
in
fdivs
cs
sub
inc
jp
sbb
inc
stc
push
scas
fbstp
lret
adc
pop
mov
aam
cmp
jl
pop
xor
push
and
push
ret
cmp
cld
sub
ret
lcall
fisubs
mov
lea
dec
in
int3
dec
iret
adc
sbb
add
cmpsl
call
lods
fldenv
pop
inc
bound
jecxz
divb
mov
out
sbb
or
cmpsb
jecxz
sahf
dec
xor
mov
cwtl
or
inc
jne
out
mov
in
lods
xchg
movsl
jae
scas
sbb
jbe
jo
in
outsb
cmp
std
test
push
sahf
mov
add
das
frstor
mov
arpl
iret
sti
dec
stos
mov
dec
outsb
cmp
add
xor
xchg
mov
add
leave
mov
nop
lds
test
in
pop
sub
inc
cs
sahf
bound
loopne
xor
data16
rolb
fdivrs
xor
loope
jecxz
inc
pushf
repz
pop
iret
js
push
nop
adc
stc
pop
cmp
enter
mov
sub
pop
sbb
jno
mov
mov
aad
mov
jo
jmp
std
lea
dec
int3
push
and
pushf
sbb
mov
mov
adc
push
cmpsl
scas
mov
subb
nop
mov
sub
pop
or
movsb
dec
in
xor
stc
and
xor
push
dec
cmp
insb
pop
xor
decl
or
pop
cwtl
and
dec
mov
lahf
pop
or
ljmp
inc
into
repnz
mov
sub
cs
imul
in
movsl
mov
sbb
jl
lods
or
lock
mov
push
insl
enter
xchg
jecxz
sbb
add
dec
add
inc
in
fdivs
and
jno
in
inc
and
hlt
lret
lods
aas
les
inc
sbb
addr16
icebp
sbb
jmp
fisubrl
mov
push
fs
sbb
mov
stos
pop
sbb
pop
and
xor
loopne
sub
and
jnp
scas
aas
sub
xchg
pop
jo
xchg
xchg
lahf
adc
mov
lea
dec
clc
in
cmpb
pushf
divb
in
pop
out
pusha
and
mov
adc
popl
dec
mov
inc
inc
push
jno
mov
mov
lcall
lret
jmp
sub
add
add
cmp
jmp
or
inc
cmp
dec
xchg
rorb
hlt
inc
pop
pop
cmp
sub
roll
mov
sahf
ss
add
loopne
movsb
fimull
insl
and
jge
jbe
lods
cmp
push
sbb
jl
in
push
repz
ret
loopne
or
cwtl
cld
repnz
and
jp
stos
xchg
outsl
cmp
out
ljmp
pop
push
lret
rol
daa
sbb
sbb
inc
movsl
inc
mov
xor
sbb
call
fnsave
int3
insb
push
xor
sbb
or
or
fstpl
cmc
push
cmc
lcall
mov
mov
push
ja
imul
mov
cmp
or
shlb
or
mov
sbbl
cmpsb
pop
pushf
inc
enter
mov
jmp
dec
mov
inc
cld
aas
jns
fiadds
fimuls
movl
in
lds
mov
inc
les
mov
lret
test
inc
je
xor
jb
clc
int3
cwtl
es
sbb
clc
sbb
push
inc
loope
sbb
mov
jge
xor
adc
notb
out
xor
push
sbb
xor
push
lcall
and
jecxz
push
std
in
push
jl
clc
outsl
mov
scas
imul
ret
xchg
ret
sbb
inc
sti
xchg
int3
cli
dec
sbb
push
shr
insl
push
push
xor
lods
push
adc
push
shl
aas
gs
in
add
xor
inc
ljmp
enter
aaa
cmp
sahf
or
imul
sbb
dec
mov
into
adc
pusha
hlt
repz
sbb
les
je
add
jo
fisubrl
sub
rcrl
mov
sbb
std
push
gs
xchg
stos
push
lea
inc
cld
or
rolb
mull
dec
xor
lods
in
test
decl
mov
jns
push
cwtl
hlt
sahf
dec
sbbl
outsb
inc
aad
cld
dec
cs
rolb
adc
and
add
mov
or
sarl
in
test
add
cld
xlat
push
pop
or
pop
andb
sub
loop
scas
mov
push
daa
adc
gs
mov
fs
insl
jge
es
sbb
jns
mov
jne
push
gs
icebp
lcall
in
sbb
and
xor
pushf
inc
divl
aaa
js
or
cmp
xor
rolb
push
xchg
addb
pop
mov
nop
add
adc
decb
push
push
iret
repnz
aad
nop
insb
dec
frstor
out
adcb
or
ljmp
outsl
mov
movsb
aas
je
insl
inc
sub
dec
pop
sub
dec
rclb
pop
sbb
stos
inc
sub
jg
add
add
mov
inc
mov
sti
xchg
fs
rsqrtps
ret
cli
repnz
das
int
fists
lret
mov
sbb
xchg
insl
jb
sbb
std
leave
sbb
mov
add
add
imulb
cld
sbb
pop
push
sbb
std
js
adcb
out
jmp
push
addr16
int
xchg
ror
jle
mov
insl
inc
xchg
dec
or
inc
cli
xchg
sub
into
inc
lahf
jno
cmp
cmpsb
sbb
loop
sub
xor
ds
ss
mov
scas
cmp
sahf
sub
test
jmp
adc
hlt
ret
outsb
into
or
gs
push
add
sti
push
push
push
cmpsb
push
mov
xor
jb
fcompl
adc
dec
in
xor
push
adc
std
jmp
cltd
and
push
test
sub
fcompl
sub
jbe
xor
cmp
incl
aam
xchg
je
stos
pusha
mov
popf
adc
insl
cltd
leave
cmp
pop
xor
subb
pop
sub
cmp
push
and
sbb
sar
stos
in
mov
adc
pop
dec
lea
mov
test
outsl
mov
xchg
cmp
adc
adc
push
xor
xchg
shlb
cmpsl
gs
add
fistps
pop
das
or
dec
insb
jne
mov
jp
xchg
mov
mov
xchg
stc
repz
scas
pop
jle
cmp
pop
jne
in
test
push
jb
xorl
sub
and
jbe
dec
sub
mov
das
or
mov
adc
test
nop
ds
inc
clc
sbb
sbb
aas
insl
push
xchg
loopne
jmp
aam
add
jae
loop
lcall
arpl
push
or
shrb
mov
cmpsl
sbb
mov
pop
ja
inc
imul
ss
pop
jae
sahf
repnz
cltd
out
cmp
dec
je
stos
mov
in
pop
test
jecxz
subl
fcomps
cltd
fisubl
xchg
jns
mov
sbb
mov
daa
outsl
push
mov
aad
pop
push
pop
xchg
cmp
and
addr16
adc
cmc
inc
cmp
mov
movsl
push
push
jp
xchg
ja
clc
cmp
sbb
sbb
in
ds
repnz
fs
sbb
dec
aad
mov
incb
dec
cltd
mov
mov
ds
dec
lods
into
add
dec
call
cli
std
sbb
jns
xchg
into
xor
sbbl
adc
adc
fisubrl
sub
push
inc
out
cwtl
int3
bound
xchg
pusha
add
mov
dec
cld
jne
iret
lcall
push
inc
mov
test
repz
adc
mov
fldenv
pop
pusha
enter
lock
adc
incb
negl
sub
fisttps
clc
lds
mov
add
into
jb
sarb
nop
scas
and
mov
mov
movsl
inc
fwait
pop
mov
das
mov
inc
xchg
mov
mov
mov
push
fsub
loope
xchg
adc
push
lods
or
fsubrs
int3
mov
jbe
push
shll
jg
jge
iret
cs
fwait
mov
xchg
inc
lret
add
xchg
in
xchg
lret
cmp
mov
and
inc
hlt
cmp
jno
mov
sbb
ss
mov
out
test
lods
xor
add
sbb
add
fsubl
gs
or
cs
outsb
sub
insb
imul
mov
ss
sub
pop
jns
inc
pushf
sbb
mov
clc
xchg
sbb
dec
sarl
mov
mov
sub
jnp
jne
push
enter
mov
push
loope
pop
xlat
mov
mov
push
inc
repnz
test
and
cli
mov
fcmove
inc
xchg
or
shll
xchg
dec
pop
addl
jecxz
in
push
cmp
mov
in
adc
pusha
cmp
test
sub
inc
and
ret
imul
push
mov
adc
pop
cmp
arpl
sub
call
pop
xor
xor
leave
mov
mov
lret
repnz
lds
inc
xchg
iret
std
add
data16
scas
cmp
fcmovb
nop
jo
arpl
xor
leave
int
popf
test
cli
and
or
nop
cmc
roll
out
lea
std
mov
int
xchg
in
jle
add
stos
mov
xchg
xor
pop
pushf
inc
jae
inc
push
je
pop
das
mov
aaa
repz
cmp
ljmp
jb
mov
or
aam
push
dec
cmp
cmp
sbb
mov
orl
xor
pop
fimull
int3
hlt
xchg
jmp
insl
scas
mov
pop
xor
xor
jb
cmp
mov
les
mov
es
divb
fidivl
xchg
sub
sbb
mov
mov
cli
popf
adc
xlat
leave
mov
inc
mov
fwait
or
push
insl
xchg
in
pop
inc
testb
inc
int3
sbb
mov
std
dec
int3
pop
les
sbb
cmp
arpl
adc
pop
mov
cmp
push
push
mov
ja
inc
dec
mov
andb
mov
fwait
push
jle
ret
test
scas
pop
jbe
mov
nopl
fsubl
das
and
inc
pop
cmp
subl
pop
sbb
jo
insl
mov
lea
test
sub
and
rol
sub
lret
ds
cmp
mov
and
stos
jmp
fimuls
cwtl
repnz
jge
mov
sub
mov
jp
test
cmc
fnsave
aad
bound
adc
push
enter
ret
lock
pop
mov
sub
lcall
and
push
pop
icebp
push
dec
sti
cmp
mov
repnz
jp
or
pop
jb
mov
or
mov
shrl
fwait
iret
mov
out
mov
fs
mov
test
leave
popf
iret
std
fwait
mov
inc
xlat
pop
push
xor
or
arpl
in
test
pop
mov
mov
cmp
ds
jno
loope
xchg
or
lret
push
mov
mov
pusha
jns
pushl
sub
cmpsb
adc
pop
push
mov
dec
sbb
mov
xchg
or
popa
mov
add
stos
cld
sar
sub
push
cmp
pop
shrb
sub
cmp
sarl
cs
iret
aad
clc
sub
shrl
pop
test
ja
dec
jge
xor
push
mov
inc
movsb
mov
push
rcrl
push
outsb
fdivr
adc
fsubl
adc
mov
adc
scas
pushf
arpl
pop
negl
dec
std
outsl
pop
lret
call
leave
inc
mov
or
test
cmp
mov
outsl
pop
mov
ljmp
rcr
pop
imul
aaa
jecxz
dec
adc
sti
mov
daa
adc
pop
rorb
sti
add
fsubrl
xor
lret
fbstp
fnsave
or
inc
ret
cmp
push
jb
das
fldt
and
fsubp
pop
mov
popa
ret
aas
and
imul
out
ret
rorl
sbb
xor
jno
xchg
add
pop
lahf
inc
mov
call
dec
jne
aas
pop
add
shll
fbld
and
xchg
inc
shrb
jmp
imul
xchg
leave
movb
sub
xchg
cmp
dec
and
test
jp
or
js
and
aad
xchg
adc
jns
fisubrl
jmp
lods
adcb
adc
cmc
pop
fimull
jb
cmpsl
jp
dec
les
mov
mov
push
test
push
push
cwtl
sbb
lcall
adc
movsl
pop
cmp
in
bound
mov
push
xchg
push
dec
mov
xor
test
and
mov
cli
push
pop
hlt
mov
and
std
push
mov
jle
cmp
push
cmp
pop
push
jno
lds
arpl
int
divl
int3
daa
or
in
roll
mov
push
sti
mov
popf
jl
pop
jmp
and
add
fcmovnu
aam
aam
outsl
adc
sbb
test
jg
pop
inc
and
xor
push
addr16
imul
inc
mov
or
push
imul
subl
in
fistpl
lods
cli
xor
dec
or
fxam
push
mov
push
pop
in
xchg
push
inc
dec
add
adc
or
adc
pop
pop
outsl
or
andb
xchg
jbe
adc
inc
arpl
xor
sbb
pop
adc
mov
lcall
add
adc
mov
pop
aas
dec
repz
push
adcl
sahf
jae
sahf
pop
scas
push
scas
pushf
push
mov
sti
jns
mov
xchg
outsb
sbb
and
fistps
add
push
dec
add
mov
mov
ucomiss
bnd
movsl
aaa
sub
push
jno
dec
cmp
xchg
cli
xchg
mov
fsubrs
add
imul
fmuls
ss
xlat
push
mov
out
and
mov
xchg
cmc
jmp
lods
sub
fs
mov
into
outsl
outsb
fs
sub
jno
push
jp
xor
sahf
les
ret
dec
xchg
or
mov
cmp
mov
iret
inc
je
in
int
xor
andl
out
push
push
lret
mov
add
leave
dec
das
sbb
cs
insl
es
mov
jno
js
mov
pop
xlat
je
pop
jp
add
in
ret
push
inc
ret
push
and
in
mov
test
sarl
out
push
scas
mov
shll
aaa
fsubl
xchg
mov
sub
cwtl
sti
push
rolb
jns
push
rcrb
jecxz
push
push
pop
pop
andl
pusha
je
sub
fldpi
add
shlb
mov
andb
mov
jo
lock
mov
popf
ret
call
out
mov
mov
sub
add
fidivl
test
cltd
push
lret
js
repz
lods
aas
fistpl
orl
lods
inc
dec
sub
aam
jbe
push
test
pop
push
push
mov
cld
cmp
lods
push
add
fcom
pop
mov
lds
adc
mov
ret
and
and
xchg
pop
mov
dec
mov
jmp
imul
xchg
outsl
lret
and
mov
xchg
mov
add
push
jno
data16
movsl
outsb
js
aas
pushf
adc
imul
push
adc
pop
mov
mov
mov
fs
stos
push
cmp
fistps
pop
cmpsl
inc
mov
sub
push
mov
mov
ss
scas
loope
cs
test
ret
hlt
push
dec
and
fnstcw
cmp
lahf
repz
sbb
stc
jp
mov
push
lods
ljmp
jmp
leave
push
and
jp
repnz
enter
stos
loop
cmp
or
xchg
inc
fisttps
les
inc
scas
mov
sub
insl
dec
cltd
pop
and
js
mov
cmp
mov
push
xchg
jns
insl
adcb
dec
mov
inc
inc
sbb
push
xor
and
and
repnz
in
std
inc
jp
int
ljmp
adc
lcall
cli
pop
icebp
and
sub
mov
xchg
dec
add
xchg
add
jne
clc
mov
nop
andl
test
cmp
insl
cli
sub
int3
sti
movsl
push
mov
push
jae
lcall
inc
push
data16
add
push
call
fstpl
jbe
sub
cld
sbbl
insb
fwait
cmp
mov
and
push
rclb
mov
out
pop
test
mov
fbld
xor
mov
cmp
dec
jo
push
lea
mov
shrl
jbe
sbb
bnd
cmpsl
mov
jmp
orb
jg
xor
js
rorl
outsb
aam
icebp
test
mov
into
clc
outsl
cmpb
mov
add
lods
sub
push
adc
push
lds
and
out
sbbl
sbbb
enter
out
inc
sarb
rcrb
xchg
fidivrl
out
stos
scas
mov
test
add
jmp
fsubrp
dec
into
cwtl
sbb
mov
andb
ret
pop
enter
in
cs
aad
cmp
lret
jbe,pt
cmp
jg
dec
jnp
mov
mov
aaa
iret
testl
pop
mov
das
xchg
pop
inc
into
push
adc
gs
lods
push
xchg
add
sub
adcb
push
shl
cmc
mov
imul
inc
test
push
xlat
or
sbb
insl
fimuls
aam
mov
fisubrl
test
xchg
xor
sub
mov
push
sub
scas
adc
loop
jle
add
test
loopne
cmp
add
aas
adc
pushf
inc
sahf
cmp
dec
sub
outsb
adc
push
and
loop
add
mov
sbbl
jns
push
sbb
adcb
sbb
scas
out
add
xchg
push
mov
int3
cmp
addr16
test
test
rorb
push
xor
and
push
ret
outsb
popf
cltd
add
and
lret
cmp
out
jl
nop
lods
sbb
lock
push
call
sbb
jns
xchg
jns
clc
pop
cmp
add
xor
jae
lret
push
lret
cmp
mov
dec
mov
and
or
pop
add
pushf
dec
repz
dec
ret
adc
inc
popf
push
xor
add
mov
inc
mov
push
push
sbb
das
in
test
scas
imul
lods
mov
mov
jge
add
insb
pop
push
mov
jge
loop
cmp
mov
pop
dec
mov
mov
inc
dec
scas
loop
mov
test
fwait
push
aaa
dec
xchg
ss
scas
mov
add
lods
xor
jne
push
leave
mov
and
mov
sub
cmp
fisubs
cltd
push
cmp
fdivs
scas
mov
inc
stos
mov
add
and
movb
mov
inc
clc
cltd
lock
lea
movsb
mov
mov
cmp
stos
sub
sub
out
mov
dec
sahf
std
mov
cmp
push
xchg
outsb
std
sbb
ret
sub
pop
lahf
mov
repz
mov
adc
test
dec
loop
pop
or
cltd
imul
mov
std
cmp
push
mov
push
add
sub
bound
movsb
lea
int
pop
xchg
cmp
fcomps
cmc
mov
aaa
pop
xchg
xchg
ror
ror
fimull
cltd
mov
pmaxub
fimuls
out
mov
xor
sbb
dec
or
hlt
push
stc
dec
lret
mov
inc
push
addr16
add
lret
sbb
fisubrl
imul
jo
pop
imul
aaa
add
andl
lcall
jecxz
mov
ss
dec
leave
pop
fs
fistpl
adcl
pop
cmp
jmp
push
jle
rol
jo
pusha
inc
pop
add
jne
cmc
adc
lods
sub
push
add
push
fxch
outsb
jo
xlat
fwait
jb
mov
das
xor
mov
jo
jnp
sbb
lea
cli
scas
or
cmp
push
sub
js
fdivl
mov
adc
dec
adc
ficompl
push
or
insl
cltd
lcall
rorl
inc
mov
fwait
jp
jnp
mov
pushf
jl
aaa
inc
push
push
cli
push
lock
adc
stc
adc
sarb
scas
mov
push
pop
jp
bnd
and
adc
pushf
bound
std
and
push
jno
fdivs
xor
push
add
cld
rcrb
push
adc
fwait
mov
sbb
nopl
inc
je
fdivrs
aas
pop
dec
mov
mov
ret
icebp
or
testb
int
mov
ljmp
fcoms
mov
pusha
sar
add
sahf
je
mov
stos
xor
and
fs
ja
std
test
cltd
orl
cmp
xchg
push
push
push
loopne
fistl
sub
dec
cmp
mov
adc
push
pop
jge
jecxz
mov
sub
add
pop
mov
or
enter
movsl
stos
loopne
dec
mov
test
lahf
cmp
mov
mov
dec
jg
sub
and
pop
jns
add
rcl
loop
shll
xor
lea
mov
or
repnz
mov
lahf
cmpsl
jmp
mov
xchg
je
xor
aas
ljmp
adc
dec
jmp
test
js
out
xor
xor
fptan
test
jbe
stos
dec
les
xchg
cwtl
shrb
dec
add
pop
and
aad
mov
mov
adc
pop
andl
in
mov
nop
or
adc
pop
cli
dec
or
cltd
cmp
scas
fbstp
aad
mov
test
cli
xor
lea
xchg
mov
sub
xchg
into
or
and
jp
lahf
fnsave
mov
sbb
mov
pop
test
mov
adc
inc
push
xlat
jmp
push
orb
cltd
cmp
dec
dec
push
imul
dec
or
loopne
repz
inc
xchg
inc
adc
adc
pop
rcll
dec
out
mov
lea
lret
xor
rolb
dec
push
jl
fcmovnbe
adc
in
adc
sbb
jecxz
pop
jnp
repz
dec
mov
imul
inc
mov
add
call
fstpl
xor
mov
sti
int
outsb
pop
imulb
xchg
pop
imull
js
or
push
add
fisttpll
mov
clc
call
lea
xchg
aam
out
pop
pop
inc
les
cli
pop
scas
lods
or
in
fs
outsb
mov
lods
pop
push
movsl
iret
pop
inc
bound
imul
push
sbb
jbe
ljmp
fstpt
and
jmp
mov
dec
dec
sbbb
aam
aaa
fistpl
fisttpl
add
sub
cmp
test
fdivrl
les
sub
mov
outsl
xchg
out
mov
cmc
cmp
out
ds
daa
jb
fwait
inc
rcr
pop
mov
jno
mov
sbb
jl
push
jo
sbb
loop
mov
push
call
push
int
and
lcall
cli
pop
enter
andl
push
ret
cmp
fbstp
jbe
xor
xchg
mov
jge
or
aam
push
test
orl
movsb
icebp
lock
push
inc
pop
pop
xor
push
xlat
movsb
xor
insb
fwait
sub
ss
mov
mov
pop
xchg
jb
xor
push
cmp
and
xor
mov
jmp
mov
or
pusha
dec
dec
add
popa
xchg
pop
clc
mov
loope
cmp
pop
std
jl
hlt
sti
shlb
adc
loopne
fsubl
jb
or
cltd
out
stc
jecxz
pop
mov
hlt
negl
test
jmp
mov
and
sbb
cmc
pop
sub
sbb
push
dec
jno
jbe
xchg
outsl
pushf
arpl
mov
clc
fsub
pop
bound
inc
mov
and
bound
cmc
xchg
sbb
xor
pop
es
dec
jno
dec
out
jp
add
or
lea
add
mov
sbb
mov
arpl
pop
mov
sahf
jno
lret
jl
and
cmp
sub
test
pop
loope
cmp
inc
aad
jg
sbb
inc
dec
push
mov
adc
adc
rclb
outsl
push
inc
lock
sbbb
sahf
js
mov
test
test
cmp
dec
imul
cmp
dec
mov
jb
adc
dec
fsubr
out
adc
add
push
push
mov
cmpsb
je
jo
jl
pop
push
or
dec
icebp
stos
sbb
es
jecxz
adc
pop
clc
pop
mov
das
mov
sahf
inc
cmp
dec
jecxz
jle
loop
mov
iret
pop
lock
mov
jp
lods
sbbl
mov
mov
pop
rcrb
insl
icebp
aas
mov
sbb
push
imul
mov
mov
push
movsb
or
arpl
and
fsubl
jns
xchg
lock
mov
xchg
mov
pop
push
stos
push
aaa
test
daa
divb
jecxz
das
imul
xor
or
cmp
adc
mov
jb
jae
sub
ret
xor
cld
loope
jns
mov
das
and
or
mov
mov
out
jb
or
mov
mov
adc
test
movsl
cwtl
jne
jbe
fcoml
nop
adc
push
pushf
inc
jmp
jb
notb
pusha
addb
jl
dec
hlt
inc
jle
test
lods
jne
push
mov
notb
jge
lret
inc
imul
out
push
int3
pop
push
jmp
mov
and
fs
pop
stos
fnsave
test
enter
inc
cmpsl
dec
ljmp
adc
scas
xor
adc
leave
jmp
sbb
sub
test
jge
or
adc
rclb
sahf
mov
and
xchg
sbb
popf
call
pushf
scas
jp
mov
push
test
imul
mov
sbb
lods
popa
inc
inc
push
movsb
dec
cmp
faddl
cmp
sbb
mov
insl
faddl
sub
test
enter
cmpsl
mov
ret
push
outsb
fsubr
pop
test
jns
inc
dec
movsl
adc
xchg
push
mov
cmpsb
xor
int3
in
shrb
cmp
movsb
fidivrl
sub
mov
lret
pop
pop
jb,pn
shll
mov
add
inc
push
sbb
jnp
push
sarb
aaa
in
pop
push
push
jp
dec
add
mov
pop
incl
inc
stos
mov
sub
mov
insb
out
xchg
jl
push
rcrb
push
dec
push
bnd
sbb
jle
and
or
test
ss
or
and
xlat
xchg
dec
arpl
das
aaa
das
rcrl
cmp
fcompl
inc
fstl
mov
jne
test
mov
sbbl
jle
sti
aam
hlt
sub
add
ljmp
dec
cs
movsl
pop
push
jne
add
imul
pop
mov
pushf
adc
inc
in
std
mov
jg
jo
inc
sub
xor
lahf
addb
xchg
or
repz
int3
jl
cmc
jp
loop
push
mov
mov
cmp
fildl
in
mov
mov
hlt
loopne
xor
test
fcmovne
imulb
scas
inc
fimuls
fidivrl
lahf
or
adc
lds
or
mov
shll
lret
pop
add
cmc
push
mov
inc
sub
js
xor
sub
jmp
out
pop
repnz
pop
repz
dec
iret
push
dec
xchg
and
cltd
test
xorl
jb
jnp
hlt
sbb
lret
add
aaa
cltd
clc
addr16
outsb
pop
push
imul
call
loope
inc
ficoml
popa
shll
loop
mov
dec
incb
je
movsl
sbb
insb
xchg
mov
xchg
dec
imul
push
or
mov
add
adcb
and
insl
push
or
fadds
pop
loop
cmp
cmpsb
in
xchg
inc
stos
js
pop
imul
scas
mov
bound
inc
fmuls
in
das
mov
lcall
mov
cli
jg
jg
stos
xor
das
mov
push
icebp
mov
ret
std
xchg
adc
pop
test
xchg
pop
pop
ret
dec
lcall
fnstsw
or
pop
mov
jge
std
mov
xabort
loopne
fildll
xchg
pop
loop
popa
mov
fstl
imul
mov
je
pop
enter
cmc
xchg
sahf
dec
mov
mov
mov
sbb
push
or
xchg
arpl
pushf
std
or
int3
mov
adc
sbb
js
mov
push
pop
cmp
pop
scas
or
push
sbb
pusha
and
stc
push
in
aas
or
pop
xchg
push
push
mov
and
mov
push
cmpsb
divl
sub
clc
addb
loop
lock
int
sbb
jmp
xchg
adc
call
rclb
lcall
out
mov
imul
gs
sub
xor
add
mov
enter
add
das
aaa
mov
sub
add
adc
iret
push
out
push
inc
lods
and
call
sbb
or
and
enter
movsb
test
pop
int
mov
pop
sub
jno
clc
int
lret
ret
test
jecxz
sti
outsl
ss
pop
pop
repz
roll
sbb
cmpsb
jnp
out
cmc
push
lea
cmp
or
add
dec
repnz
mov
jo,pn
mov
ljmp
pushf
pusha
mov
pop
push
push
and
stos
mov
dec
es
mov
aas
fisttpll
jmp
shrl
pop
scas
outsb
loopne
xchg
insl
xchg
sti
roll
xchg
out
icebp
mov
mov
dec
std
jmp
cwtl
inc
js
xlat
mov
hlt
cmpsb
cmp
scas
xchg
or
dec
test
push
sbb
push
std
mov
insb
or
push
jge
dec
fldcw
adc
sub
in
movsb
orb
push
cmc
mov
adc
dec
lcall
jg
sbb
cwtl
repnz
ficoml
sahf
icebp
inc
stc
es
out
mov
sub
jle
pop
push
inc
mov
sbb
cmp
and
jl
pop
lods
repz
popa
out
cmp
jp
cmp
enter
out
outsl
sbb
out
in
lcall
negb
jl
mov
aam
fwait
mov
jne
adc
xor
add
pusha
std
push
shrl
sbb
xor
xchg
insl
adc
test
in
mov
sub
cwtl
stc
jbe
xlat
bound
das
aam
inc
shlb
xor
out
mov
adc
xchg
adc
ror
jns
ljmp
cmp
clc
adc
jl
dec
xchg
pushf
jb
aas
pop
dec
xor
daa
mov
push
jbe
inc
les
mov
repz
mov
enter
cmp
pop
fdivrl
jne
mov
adc
push
jae
stos
push
call
push
popf
add
test
cld
iret
cwtl
jl
inc
mov
test
or
lret
sub
push
push
jo
sar
call
lods
xor
mov
inc
jae
sbb
ss
es
lods
inc
shll
xor
xchg
xor
imul
push
sti
add
movsb
mov
pop
icebp
movsb
ds
push
dec
push
mov
fildll
loop
pusha
xchg
inc
pop
and
and
rorb
insl
fiaddl
addl
out
and
jmp
cmp
out
sarl
or
push
sbb
and
or
jbe
inc
mov
or
or
aad
imul
leave
js
pop
pop
pop
lods
jb
adc
nop
icebp
icebp
jg
xor
aam
repz
jp
orl
mov
fistps
nop
ficomps
push
cmp
test
cmp
aam
std
xor
outsb
cmp
loop
decb
adc
movd
lds
pop
adc
or
dec
or
testl
adc
hlt
xlat
hlt
xor
xor
in
and
push
cmp
add
pop
pop
dec
stc
ss
mov
out
dec
fmull
subb
addr16
popa
xchg
imul
mov
and
sub
ss
cmp
or
push
insb
xor
movsb
dec
or
aas
mov
push
out
xchg
inc
mov
data16
push
mov
leave
fs
dec
mov
enter
xor
mov
aam
scas
andb
and
pop
push
cmp
loopne
mov
out
dec
sbbl
scas
push
in
lahf
lea
mov
mov
popf
lock
in
jge
stos
divb
inc
dec
test
insl
xchg
aad
aam
jmp
addr16
pop
push
add
inc
stos
dec
dec
lock
cmp
sub
cmp
mov
adc
mov
fildl
jns
lcall
out
push
push
or
std
sar
mov
mov
dec
add
aas
adc
add
dec
mov
adc
jno
pop
push
movsl
push
incb
jmp
ds
mov
cltd
jo
dec
sub
cwtl
or
lods
mov
add
xor
xchg
jns
lods
jp
fwait
dec
pop
bound
std
mov
shrb
dec
pop
iret
fistpl
mov
pop
mov
test
loop
in
jnp
mov
sarl
fcoms
pop
push
ret
popl
cmc
leave
shlb
mov
out
adc
add
cmpsl
dec
hlt
loope
notb
leave
out
lock
out
sbb
jle
ja
test
xlat
mov
push
leave
repz
sub
and
hlt
cmpsl
push
mov
and
test
mov
ret
sub
cmpsb
mov
mov
cld
xor
fwait
aad
add
mov
mov
shl
repz
nop
rorb
in
clc
shl
xchg
insl
dec
or
jecxz
jge
pop
mov
pop
fxam
sbb
jl
dec
jge
jp
pop
divb
mov
pop
popf
sbbl
push
pop
jae
insl
jbe
adc
mov
stc
stc
hlt
push
insl
out
out
xor
lds
pusha
push
or
iret
dec
fstpt
xchg
sbb
popa
mov
mov
decb
and
cli
arpl
inc
aam
icebp
add
xchg
or
mov
aas
or
or
sub
mov
jnp
or
lock
sbbb
jb
lds
daa
rcr
daa
mov
pop
aam
imul
xchg
pop
xchg
lahf
out
pmulhw
outsl
mov
xlat
pop
and
mov
test
loope
mov
xchg
adc
or
sub
lret
push
xor
push
data16
adc
or
mov
mov
aam
rclb
daa
push
in
cmp
stos
out
mov
dec
add
push
cwtl
stos
mov
and
xchg
dec
das
mov
into
xor
stos
xchg
test
bound
cmpsl
xor
pop
jmp
inc
push
cmp
pop
out
xchg
fistl
addr16
ffree
stos
subb
loop
lea
in
lods
pop
add
mov
scas
dec
add
sub
add
jecxz
add
sub
les
jecxz
mov
mov
and
stos
push
sub
loop
push
and
push
mov
jmp
stos
or
sbb
cmp
out
push
rcll
out
call
movsb
xchg
dec
nop
xlat
jg
inc
inc
cmpsl
outsb
or
mov
cmc
mov
in
ror
push
sub
mov
sbb
arpl
inc
jno
jns
imul
pop
add
fbstp
ret
in
lea
insb
sbb
out
inc
imul
pop
ss
out
repz
js
jmp
adc
das
imul
daa
push
inc
sub
jne
dec
imul
scas
sti
fadds
fwait
mov
fmuls
mov
inc
in
scas
test
incl
push
movsb
popf
cmp
aas
mov
les
sarl
cmp
out
int
xchg
xorl
loop
addr16
repz
jne
and
add
fsubl
and
adc
or
scas
or
sub
rcll
lret
in
les
clc
xchg
sub
ja
sarb
dec
mov
mov
mov
push
cmpsb
sub
or
mov
fiaddl
mov
mov
pusha
loop
adc
addl
enter
iret
mov
pop
xchg
mov
cmpsl
call
add
push
push
cli
std
mov
outsb
sbb
xor
ljmp
sbb
mov
fs
lcall
dec
mov
mov
and
loope
mov
es
cmp
mov
jae
mov
xor
mov
push
loopne
outsb
ret
lret
outsl
push
mov
sub
sub
dec
or
push
out
dec
inc
push
imul
les
es
push
das
aaa
rclb
adc
loope
dec
stos
das
mov
xlat
xchg
mov
lock
out
divb
inc
and
push
inc
aas
ret
add
mov
jp
xchg
or
cmp
faddl
insl
icebp
sbb
jae
fadds
push
mov
inc
ja
mov
mov
cmc
dec
gs
je
cmp
sub
loop
jne
adc
popa
jne
xchg
lods
cmp
loopne
call
pushf
lods
and
xor
shlb
psraw
and
div
xor
mov
xor
test
cld
adc
mov
pop
and
dec
ss
mov
and
xor
add
dec
popf
rol
aaa
pop
testb
add
test
mov
add
xor
jle
into
out
je
sbb
fsubrs
or
stos
xor
cmp
sbb
pushf
punpckhbw
xchg
out
xchg
mov
sbb
ds
loopne
rclb
xlat
les
cli
rcl
jp
jns
aaa
ret
push
enter
sub
sbb
pop
outsb
pop
cmpsl
dec
cwtl
insl
mov
xchg
jl
jnp
mov
jns
idivb
ffreep
jge
push
and
cltd
jmp
xlat
dec
jno
pusha
xchg
or
out
xchg
add
jecxz
mov
lret
cld
dec
sbb
mov
jecxz
jo
mov
addr16
add
push
add
adc
jp
imul
movsl
xchg
cmc
shl
pop
and
mov
imul
pop
dec
adcl
lcall
out
adc
mov
mov
cmp
sub
daa
je
adc
mov
adc
sub
xor
dec
lcall
js
mov
mov
xor
int3
add
adc
mov
dec
and
dec
outsb
divb
ret
test
fldcw
xor
push
ss
imulb
jmp
iret
xchg
aam
lret
mov
push
inc
lret
aaa
sub
mov
cmp
dec
in
shrl
xor
and
xchg
mov
sti
jnp
xor
pusha
sbb
xchg
lret
push
repnz
pop
dec
push
mov
pop
shll
or
cmp
popa
push
inc
and
je
daa
add
sbb
inc
jo
dec
mov
fcmovbe
push
pop
imul
loope
movsl
jmp
mov
push
iret
or
jg
aaa
loop
push
dec
data16
divl
pusha
outsl
rdmsr
adcb
and
push
add
pop
jns
insb
lods
loope
les
lahf
mov
jl
aad
sub
dec
and
ret
fsubr
lahf
cmp
xor
pop
cmpsb
sbb
out
in
icebp
out
xchg
jecxz
or
or
aad
cmc
out
int
mov
pop
dec
movsb
mov
push
sbb
int
pusha
mov
loope
out
and
cmpsb
or
cwtl
testb
jg
xor
xor
sub
lcall
adc
pop
mov
or
sbb
adc
insl
push
andl
sbb
iret
xchg
mov
insb
mov
mov
inc
enter
push
jl
in
mov
mov
bound
jbe
push
clc
xor
sbb
jecxz
stos
subl
dec
lcall
out
lds
ss
push
fcomi
dec
lock
sub
jmp
std
pop
lock
mov
mov
fs
repz
insl
pop
aas
lcall
mov
xchg
ja
ss
push
jp
mov
xchg
lret
or
add
bndstx
inc
dec
aaa
adc
add
js
xor
arpl
mov
cmp
xchg
out
popf
insb
xchg
push
stos
lahf
stc
pop
shrl
cltd
cmc
roll
movsl
fsubrl
push
outsb
inc
mov
add
mov
or
jge
test
or
in
jnp
cmpsl
pop
movsb
fucomp
mov
cmp
movsb
ds
fildll
push
xor
ret
jmp
dec
mov
mov
std
sub
or
lcall
jp
jle
cmp
int
sbb
inc
mov
mov
xor
sub
dec
outsl
shl
call
push
sbb
xchg
mov
leave
int
movsb
sub
scas
mov
push
push
popf
cltd
push
je
scas
aaa
mov
adc
loope
aas
mov
cwtl
pop
add
rcrl
or
pop
xor
insl
push
aam
fnstenv
cld
mov
push
rcr
or
cltd
negl
adc
scas
mov
cwtl
pusha
push
sbb
jl
push
xor
adc
jmp
lea
mov
mov
mov
rclb
mov
imul
scas
lret
inc
arpl
iret
and
cltd
jmp
and
sbb
xor
add
imul
call
popl
mov
dec
bnd
mov
lahf
xchg
xor
rorl
or
dec
sahf
pushw
arpl
mov
ljmp
in
add
cmp
jl
xchg
sahf
adc
hlt
lcall
fidivrl
mov
inc
aad
dec
push
hlt
xchg
dec
mov
popf
popa
inc
in
cmc
jbe
or
mov
mov
cmc
mov
bound
fcomps
jbe
imul
inc
pusha
sarl
fs
testb
mov
mov
imul
and
loop
dec
movb
xchg
jg
cmpb
clc
js
ret
aaa
addr16
out
and
jmp
jnp
fmull
inc
imul
leave
cmp
ret
fdivrl
mov
sub
scas
xchg
pusha
pusha
lret
xor
out
sub
lcall
paddsw
testl
stc
aaa
lock
mov
jge
daa
push
push
pop
pop
and
dec
xor
jmp
inc
or
cmc
adc
xchg
in
out
sbb
ljmp
rorb
loop
cmp
lret
rcl
or
or
ret
cmp
cmc
das
xchg
sub
clc
jmp
in
clc
jge
jecxz
sbb
or
xchg
in
out
pop
stos
pop
mov
test
cmc
ljmp
loope
inc
cmp
pop
fs
jae
sbb
inc
dec
push
pop
bound
mov
mov
sahf
adcb
iret
lods
fstpl
lret
jnp
testl
xor
sbb
nop
ds
ret
or
adc
pop
jo
xchg
push
mov
paddsw
sub
subb
inc
sub
push
sub
mov
and
or
sub
jbe
push
pop
daa
test
pop
data16
insl
iret
mov
repz
or
push
addr16
jge
inc
loop
pusha
push
test
enter
mov
rclb
sub
xor
lock
add
out
test
pusha
xchg
je
and
ds
jmp
cmp
inc
and
into
fwait
sbb
repz
jecxz
sub
arpl
xchg
pop
jnp
jp
sbb
xor
decl
or
jno
xchg
mov
icebp
jge
cld
cmp
popa
pop
mov
or
push
shll
aad
push
jnp
mov
roll
ja
addr16
aas
jge
pop
ds
xchg
shlb
sub
sbb
xlat
cli
pusha
adc
xor
out
outsl
rcll
inc
mov
roll
lods
jecxz
xchg
daa
or
aam
dec
aas
insl
sub
mov
dec
cmp
test
movb
sub
in
xlat
mov
jle
mov
add
mov
inc
fsubrs
imul
jle
and
cmp
pushf
push
int3
leave
mov
scas
inc
jg
movsb
or
push
sub
les
push
test
addr16
mov
push
fcmovbe
or
and
adc
xchg
push
push
dec
ret
in
vminpd
cmp
cmp
iret
sub
sahf
dec
inc
xor
xchg
and
cmp
pop
imul
in
push
adc
scas
or
xchg
hlt
jnp
mov
jle
pusha
xchg
movsl
inc
xchg
mov
fsts
imulb
xchg
sub
push
mov
xor
pop
stos
jle
cmp
cmp
pop
mov
pop
jns
popf
pop
and
ja
not
and
or
ja
gs
outsb
xchg
pop
cmc
push
mov
jl
jne
jmp
push
xchg
rorb
insb
cs
adc
xchg
mov
out
add
ret
mov
mov
ftst
clc
push
ret
cmp
push
pop
jo
fmull
ds
movsb
stos
adc
mov
int3
std
stos
cmpsl
pop
mov
inc
fwait
push
add
insl
pop
hlt
jno
enter
sbb
dec
sub
fcmove
mov
pop
push
mov
or
loop
cli
iret
inc
dec
shl
lods
mov
mov
jae
jmp
sbb
je
test
shlb
test
mov
jmp
push
insb
gs
xchg
xor
mov
popa
mov
inc
adc
cwtl
data16
sbb
cmp
inc
cmc
mov
add
jns
ret
jbe
fwait
jle
loope
xor
dec
cld
inc
fimuls
ljmp
xchg
into
jmp
lock
jmp
pop
push
fs
push
sbb
push
pop
out
add
jbe
sbb
mov
leave
push
lock
out
xchg
jmp
orb
cld
xor
test
rclb
xchg
dec
inc
jns
xchg
test
push
cmpsb
pop
ss
add
cs
cltd
fs
mov
sarl
test
inc
cmp
mov
and
mov
sub
into
iret
lret
push
outsl
jmp
dec
jecxz
jmp
dec
ljmp
ja
data16
pusha
outsb
add
sbb
out
pop
cmp
inc
xchg
aad
cwtl
shlb
jns
jl
jne
repnz
test
hlt
gs
xor
dec
adc
cwtl
xor
shrb
scas
nop
push
and
xchg
sbb
lods
test
fisubs
push
in
pop
ja
loope
mov
in
pushfw
int3
jl
clc
mov
jle
test
popa
andl
das
jns
xlat
pop
fidivrl
xchg
jo
lret
dec
aad
jnp
or
scas
fadds
ficoml
inc
shll
xchg
and
push
les
cmp
pusha
add
iret
or
jg,pt
or
imul
bound
and
andl
repz
popf
scas
rcll
mov
mulb
mov
jmp
xor
xchg
mov
push
divb
pop
or
hlt
rcrb
xor
jnp
das
add
cmp
cs
sbb
cmp
push
movsl
xchg
cmp
push
sbb
out
push
and
fcoml
testl
das
mov
icebp
mov
xchg
mov
int3
jnp
jae
sarl
adc
jp
push
pop
adc
jne
xchg
cmp
sbb
cmp
sbb
lret
jl
imul
push
test
test
out
and
movsb
xchg
fcmovbe
fnstenv
push
push
insb
mov
ffreep
or
inc
and
inc
and
les
imul
sti
xchg
lahf
xchg
xchg
jecxz
push
lret
lret
push
cwtl
xchg
test
cmp
xchg
or
mov
data16
push
cmp
ss
mov
mov
inc
imul
lock
loop
out
das
fwait
dec
sbb
or
lret
std
jnp
das
mov
push
div
fcoml
aaa
jecxz
push
adc
xchg
lret
cmpsb
mov
hlt
js
inc
mov
ljmp
sbb
and
inc
roll
cmc
pop
das
cmp
adc
push
aaa
push
xchg
insl
into
imul
negb
popf
xchg
mov
test
and
push
out
jp
cld
inc
add
repz
cmpsb
add
jno
add
mov
dec
mov
test
or
imul
popa
mov
cmp
mov
sub
movsb
cli
ja
or
lret
popf
adc
jge
push
push
mov
mov
pop
sbb
roll
add
lret
dec
mov
cmpsl
es
mov
adc
and
mov
and
inc
bound
mov
sahf
ds
in
cmp
mov
call
popa
pop
test
inc
cmp
and
ds
int
pop
fstps
sub
push
jae
pop
push
mov
shlb
sbb
fdivl
cmpsl
mov
stos
ficoml
add
sub
jecxz
and
mov
mov
push
lret
shlb
movsb
jne
cmp
inc
mov
jne
mov
out
mov
sub
loopne
enter
jb
fisttpll
push
shlb
push
pop
movsb
cmp
aaa
lret
or
fmull
movl
pusha
mov
cmp
lcall
insb
inc
adc
mov
mov
sbbb
jge
scas
sbb
add
mov
or
xchg
ffreep
stos
aam
movsl
pop
daa
hlt
fcomps
rcr
inc
cli
subb
jmp
daa
sahf
int3
adc
clc
sbb
fldenv
or
or
negb
pop
rorb
sbb
in
iret
xchg
mov
jmp
stos
in
dec
fwait
push
push
test
or
imul
fildll
lcall
pop
dec
sub
pop
cmc
xor
insb
cli
rolb
inc
sub
loope
jge
adc
int
sub
adc
push
movsb
cmpsb
jne
int
mov
ret
cmpsb
lret
cltd
dec
ljmp
xlat
sarl
mov
clc
je
inc
in
inc
mov
and
hlt
pop
enter
inc
xchg
push
sbb
sbb
lds
jae
loope
insb
mov
ret
or
jo
push
cmp
in
lret
inc
push
push
imul
in
lock
jb
lods
les
or
pop
dec
pop
mov
mov
add
pushf
lods
sub
lock
mov
push
and
movsl
sahf
mov
push
adc
fisubrs
mov
fsubs
or
je
dec
mov
jo
dec
inc
pop
mov
and
push
daa
sti
bound
mov
imul
mov
out
gs
inc
inc
sbb
fs
pop
dec
gs
inc
rolb
in
pop
jae
outsb
aad
jae
sub
dec
flds
mov
fs
and
inc
ja
outsb
fs
insb
out
bound
xor
or
inc
stc
cltd
pop
loope
adc
lock
or
mov
mov
loop
scas
in
cmp
pop
mov
aaa
mov
inc
lcall
loope
xor
xchg
in
mov
inc
sbb
imul
mov
or
popa
xchg
and
mov
and
out
lds
hlt
sub
mov
imulb
xchg
into
sub
mov
ds
sbb
in
cmp
jbe
insb
punpckhwd
pop
nop
push
lock
inc
sbb
or
adc
jg
jl
inc
in
pop
sahf
ficompl
dec
mov
xchg
stc
movsb
js
dec
mov
arpl
mov
pop
nop
pop
jg
std
decl
ret
ds
lret
aaa
sub
and
lods
jne
mov
in
push
push
adc
dec
fildll
sub
push
in
push
adc
ja
lods
lcall
leave
bnd
fwait
cwtl
inc
xor
das
out
mov
sub
shll
pop
js
ds
ror
mov
in
cwtl
xchg
inc
push
mov
xor
or
cmc
fwait
out
shlb
cmpl
movl
or
inc
xchg
cmp
int
pop
int3
inc
push
cmp
lea
insb
cmpl
aam
mov
mov
mov
das
cmp
dec
or
cwtl
xchg
mov
in
fucomi
jge
jb
gs
mov
push
insl
imul
and
or
jge
pop
outsl
mov
add
sbb
call
jecxz,pt
nop
xor
inc
mov
les
fidivs
js
loope
ret
enter
xchg
cld
emms
pop
inc
and
xor
fsts
or
adc
out
push
scas
out
fidivl
mov
stos
pop
fcmovbe
and
stc
imul
popl
xor
xlat
push
jg
adc
aaa
sub
dec
xchg
add
stos
push
jb
mov
aas
imul
into
xchg
pop
cwtl
lds
or
xchg
ret
insl
mov
into
iret
mov
cmp
popa
dec
into
cld
lods
dec
xchg
aaa
jbe
cmp
imul
insl
imul
imull
out
xor
jnp
jge
sbb
in
out
mov
jo
mov
lock
jge
lods
cmc
mov
mov
or
pop
in
stos
xchg
ds
fcoms
pusha
push
stos
mov
add
idiv
cmp
cmp
sbb
popa
dec
cmp
xlat
mov
xor
insb
add
cmp
mull
popa
jg
daa
ds
push
movsl
lea
cmp
imul
int3
push
inc
test
cmp
iret
cmpsb
adc
sub
test
mov
pop
into
pop
imul
cmp
fwait
les
in
adc
unpcklps
test
cmp
enter
in
fmuls
js
xchg
das
xor
repnz
les
fildll
test
lahf
lret
loopne
cmp
pop
pop
push
cmp
shr
fdivrs
push
ret
cmp
loopne
rcrb
testb
into
mov
xor
xor
repz
jg
stos
mov
mov
cmp
jge
push
js
sbb
add
or
imul
std
push
fisttps
and
pop
in
lret
xlat
movsb
pop
ret
into
mov
mov
mov
cmc
daa
add
jmp
repnz
stos
fsubrs
lret
out
in
xchg
fincstp
sbb
and
xchg
xchg
dec
hlt
fwait
adc
cmp
movsb
adc
jl
cmp
mov
imul
test
mov
movsb
adc
jge
sar
inc
movsl
lock
imul
adc
or
jno
mov
ret
fisttpll
xchg
pushf
enter
data16
cmp
push
loope
iret
sbb
pop
jbe
sbb
sbb
hlt
adc
ret
and
cltd
push
and
inc
push
adc
mov
aaa
pandn
push
call
int3
std
out
sbb
mov
jbe
ja
outsl
pop
dec
stos
movsl
rdpmc
addb
mov
gs
and
test
cmp
and
xchg
push
and
imul
adc
mov
xchg
mov
push
into
dec
lret
jo
add
mov
xchg
fxch
fists
inc
mov
ret
cwtl
in
mov
sub
loopne
incl
adc
mov
or
and
test
push
pushf
lahf
loop
jmp
mov
fs
jmp
dec
xchg
mov
sbb
fidivrs
rcrb
gs
ret
xchg
sub
inc
and
mov
jae
jae
xchg
arpl
inc
je
mov
pop
lock
inc
mov
sub
cmc
movsb
sub
add
push
xchg
ds
daa
sub
popa
scas
push
mov
shrb
jne
sub
mov
jge
add
call
call
sbb
jbe
rorl
dec
mov
xchg
int
pop
nop
fadd
mov
mov
iret
cmpsb
xchg
jecxz
dec
gs
int3
jl
add
sub
inc
ret
jb
into
sbb
cmc
in
movsb
push
or
mov
sets
test
cmp
ficompl
cwtl
xchg
out
divl
sahf
mov
push
jno
dec
push
jae
fcompl
xchg
cwtl
xchg
cmp
push
mov
inc
aas
mov
sub
das
mov
mov
ds
lea
mov
mov
stos
mov
and
cmp
scas
int
in
pop
mov
or
and
pop
lds
andb
adc
mov
jmp
cmp
cmp
imul
sub
sbb
mov
out
out
test
lret
sbb
insb
clc
pop
je
and
inc
mov
cmp
xor
arpl
test
sbb
and
aam
aas
icebp
jg
jnp
mov
enter
addr16
sub
sub
dec
dec
cmp
mov
gs
lcall
mov
inc
push
pop
mov
xchg
xchg
mov
scas
aas
add
nopl
rcrl
in
and
lret
imul
ja
xor
les
dec
mov
mov
fcmovnbe
jmp
ficomps
aas
pop
add
mov
sub
xchg
mov
sbb
pop
loopne
sbb
sbb
push
fldcw
xchg
sub
push
insb
mov
xchg
or
imulb
sub
xor
in
xor
pop
jp
imul
imul
movl
xchg
push
insb
mov
and
enter
mov
cwtl
fidivrs
push
mov
gs
dec
sahf
inc
movsb
in
pop
push
sbb
pop
in
mov
cmpb
and
mov
cmpsl
es
and
sbbl
aad
xchg
inc
sbb
iret
shll
adc
sub
gs
fdivrs
mov
arpl
loope
popf
lds
fs
xchg
adc
mov
mov
sub
mov
add
mov
cmpsl
ljmp
aaa
xchg
lds
je
lcall
and
cmpl
fnstcw
mov
arpl
push
repz
mov
or
test
shll
imul
fidivl
push
cmp
adc
leave
aaa
or
aam
pushf
imul
inc
cmp
dec
lret
add
cmp
sbb
sub
or
xor
adcl
rolb
fs
fwait
test
loop
orb
add
xor
mov
js
push
bound
inc
push
ss
sub
leave
ret
fdiv
sbb
lcall
cld
scas
sbb
int3
and
outsl
sub
xor
jb
pop
jle
pusha
js
movsl
push
ret
sbb
loopne
cmp
in
dec
out
call
sub
jmp
or
dec
fstpt
mov
pop
pop
test
std
rcr
xor
out
jnp
add
mov
xorl
stos
fsubr
outsl
pusha
ja
add
and
dec
roll
nop
out
rorb
mov
jo
je
mov
sbb
cmpl
lret
sbb
inc
aaa
out
les
scas
mov
ficoml
push
rcll
clc
je
and
gs
jo
es
andb
out
push
or
outsl
or
shl
lods
insb
fwait
cmpsb
in
aaa
add
push
repnz
mov
fcoml
mov
sub
lea
pop
xor
out
test
ror
andl
ficomps
jmp
fs
sub
lods
sbb
jbe
or
fincstp
xchg
mov
push
lahf
pushf
cmp
cmpsl
jb
insb
outsb
jns
scas
sub
jle
mov
xor
push
aad
jge
mov
xor
sbb
mov
and
xchg
inc
ret
mov
ljmp
gs
es
dec
mov
inc
loopne
adc
jmp
movsl
inc
std
push
cmp
lods
test
add
cmp
or
and
call
pop
push
out
adc
lods
in
xorl
out
cwtl
lcall
jnp
sub
pop
cmc
es
jmp
xchg
gs
jae
loopne
out
jge
in
mov
cmp
insl
mov
lret
add
scas
pop
out
and
repnz
xchg
js
imul
xor
jo
add
jnp
add
cmpsb
sti
movsl
movsl
mulb
cmp
xchg
or
push
fwait
or
in
mov
add
and
test
sarl
addr16
js
add
mov
pop
call
xlat
ret
ss
sarl
sub
addr16
lcall
addr16
pop
add
imulb
int
mov
dec
mov
stc
pop
repz
lds
cli
clc
imul
add
clc
cld
fists
repz
mov
je
jns
mov
stc
test
fwait
outsb
mov
in
add
cwtl
xor
fnstsw
add
xor
mov
cmp
inc
daa
outsb
decb
lahf
xor
push
jle
lods
fs
mov
leave
in
push
das
imul
insb
call
lahf
sbbl
adc
test
imul
pop
push
xor
cmp
xor
data16
shll
lret
mov
push
sbb
lods
adc
fiaddl
orps
cmc
outsb
lods
jp
add
add
cmp
clc
push
and
sub
push
jge
jo
xchg
test
cmc
fldl
int3
int
sbb
addr16
aaa
or
in
or
xor
ja
je
stos
xor
ljmp
dec
adc
loope
out
movsl
lock
mov
mov
bound
ret
or
fwait
hlt
ror
nop
xchg
dec
dec
cmpsl
xchg
testb
or
int3
pop
aas
decl
jne
dec
pop
imul
movsl
int3
sub
dec
fcomi
hlt
pop
lcall
add
pusha
dec
mov
adc
adc
push
sahf
sub
dec
notl
and
dec
xchg
subb
pop
push
sbb
jecxz
mov
xor
dec
ret
or
daa
int3
mov
ljmp
lea
fnstsw
shrl
xchg
or
arpl
scas
arpl
lahf
dec
xor
nop
movsl
outsl
mov
xorl
inc
mov
sub
aas
cmp
nop
push
or
ss
push
dec
mov
jb
mov
pop
mov
and
mov
repnz
inc
mov
lea
sbb
lahf
mov
imul
out
mov
and
test
jne
fmull
mov
cmpsl
xor
sbb
lret
repz
push
cwtl
jae
ret
mov
clc
mov
lods
in
or
scas
cmpsb
bound
lock
cli
pop
ljmp
sub
pushf
adc
push
cld
pop
sti
push
pop
mov
pop
lea
add
movsb
dec
add
mov
fisubrl
push
out
mov
jns
mov
inc
mov
push
movsl
repnz
inc
aad
push
call
cmp
imul
sarb
iret
stos
sahf
mov
mov
movsl
or
stc
add
icebp
and
sbb
or
mov
movsl
inc
push
jmp
jnp
jmp
rcr
sbb
xchg
sub
xchg
aam
arpl
xor
xchg
pop
rol
mov
xor
inc
xchg
add
push
stc
xorb
mov
mov
stos
or
aad
ficompl
adc
mov
popf
popf
cld
and
aam
cmp
add
stos
mov
mov
int
push
add
sbb
push
inc
jno
push
leave
pop
test
js
push
adcl
inc
dec
shrl
pop
inc
outsl
lds
rorl
popf
push
push
mov
mov
add
or
xor
dec
repnz
inc
minps
mov
push
jns
mov
stos
xchg
jp
jp
and
cmp
popa
inc
aas
dec
or
xor
outsb
pop
cs
dec
loopne
pop
outsb
in
cmp
push
mov
call
dec
sti
adc
jnp
mov
push
aad
jmp
out
pop
jno
inc
sbb
lock
mov
sub
into
lods
xor
sub
adc
jle
es
orl
push
pop
inc
pop
pop
mov
shrb
cmpsl
lret
iret
adc
dec
or
out
and
rcrl
test
cmp
pop
fistpll
adcb
imul
lret
xchg
mov
mov
adc
push
lock
mov
aaa
cltd
ds
cmp
in
adc
iret
pop
mov
pop
in
fwait
push
or
push
das
mov
and
js
mov
xchg
jp
push
mov
dec
add
adc
iret
mov
mov
push
bound
mov
test
mov
or
mov
aam
jne
in
mov
xchg
icebp
mov
cmp
jno
pop
icebp
lahf
mov
insl
sub
or
and
mov
std
jnp
fnstcw
fstpl
hlt
mov
sbb
push
adc
lock
mov
scas
aas
xor
jb
mov
movsl
mov
fiadds
and
and
addr16
push
faddl
into
in
pop
xchg
or
xor
pop
aaa
loop
dec
in
push
adc
out
adc
push
inc
xchg
sahf
lods
loope
or
faddl
sub
or
pop
fiaddl
test
sub
idivl
pop
and
mov
popa
std
inc
xorb
add
pop
dec
shl
movsl
jo
leave
in
sub
call
push
jbe
inc
or
std
or
or
into
scas
rcrl
ljmp
call
ret
and
mul
push
mov
cltd
dec
out
or
pop
mov
push
lret
mov
jge
or
mov
cmp
jb
popf
cmp
std
add
xchg
lds
xor
imul
cs
addr16
sbb
mov
test
fs
loopne
fwait
mov
pop
mov
lcall
jp
and
xor
adc
adc
mov
inc
xchg
sub
enter
faddl
fwait
xchg
and
loop
and
sbb
push
or
dec
push
imul
addb
std
or
sbb
daa
push
aad
inc
outsl
lret
pop
mov
mov
fsubrl
in
xchg
sahf
popa
in
cmp
pop
cmp
clc
aad
shrl
ret
loope
adc
mov
pop
lods
pushf
lock
lret
das
xchg
cwtl
dec
lods
int
add
insl
cs
dec
fsubl
sbb
inc
jnp
lret
or
mov
insb
shlb
mov
popf
aam
pop
loope
lods
sbb
mov
je
xor
add
mov
inc
test
and
xchg
imul
pop
sarl
cmp
sbb
jo
dec
mov
lods
or
inc
sar
pop
xor
into
ret
insl
and
movsb
pop
xor
mov
and
cmp
mov
lret
and
imul
xor
sub
loope
xor
dec
mov
push
sub
lock
sbb
or
fwait
pop
gs
inc
adc
outsl
ret
xchg
pop
mov
pop
lea
jp
pushf
sub
dec
xor
imul
jmp
test
aas
testl
dec
ret
sbb
lods
cmp
fistl
inc
jp
pop
aaa
aad
enter
sbb
jl
pop
sti
and
cmp
sarb
adc
nop
add
outsb
jmp
add
push
dec
repnz
mov
mov
or
mov
js
sbbl
or
ljmp
dec
mov
sti
callw
pop
add
mov
dec
sub
pop
push
in
jns
cs
add
in
loop
mov
inc
jbe
or
pop
aam
lea
dec
add
test
out
sbb
shrb
mov
adc
outsl
out
inc
mov
int3
xor
jp
into
mov
mov
inc
fdivr
fisttps
xor
outsb
mov
pop
mov
mov
lock
pop
pop
movsl
pop
outsl
cmpsb
lds
push
mov
fnstsw
in
out
stc
stc
adc
xchg
aaa
cmp
enter
push
fidivs
aad
testl
mov
insb
adc
sti
aam
or
aad
rcll
mov
or
or
mov
das
in
sbb
xchg
mov
inc
cmp
outsb
xlat
lock
sub
in
mov
rcrb
aad
out
and
cli
add
push
push
jg
pushl
testb
pop
es
insl
out
stos
dec
jge
test
sub
shll
xchg
mov
jle
mov
aam
testb
repnz
ds
stos
leave
add
lahf
mov
cmp
mov
pop
inc
push
jmp
aas
repz
das
aam
push
pusha
jae
fnsave
cli
loop
mov
xorl
test
ret
sub
hlt
std
adc
mov
xchg
jg
shll
sbbb
lock
add
cmp
push
dec
sub
test
ss
jbe
push
sarl
aam
mov
daa
jl
repz
dec
stos
stos
add
push
mov
mov
popa
in
mov
mov
cli
pusha
xchg
or
add
push
out
mov
mov
clc
adc
out
outsb
and
jae
loop
movsl
push
cmp
cmc
int3
imul
cli
push
and
mov
push
cmp
sub
or
fldcw
or
shl
adc
sar
addr16
ja
push
pop
dec
xabort
insl
mov
pop
inc
sbb
cld
ret
popa
mov
sbb
ret
pop
ss
in
test
jne
int
and
pop
xor
into
xchg
pop
inc
sub
aas
mov
mov
bnd
add
loopne
cltd
lea
fidivrl
xchg
icebp
daa
repnz
adcb
and
pop
mov
lret
and
jbe
xor
or
repz
dec
add
insl
xchg
xchg
out
faddl
scas
or
repz
stos
int
xorb
sbb
pop
shlb
in
inc
aas
lahf
fwait
push
movl
xor
cs
lods
fs
inc
ss
pop
ds
mov
cs
xchg
sub
fwait
aaa
test
pop
sarb
inc
mov
sub
jle
jmp
hlt
and
xor
pusha
inc
aam
xchg
aas
sub
jns
dec
pop
sbb
sub
lods
lock
mov
test
jne
jo
dec
mov
je
pop
adc
pop
rorl
inc
jle
pusha
outsl
or
add
das
rcr
ljmp
mov
sbb
outsl
mov
cltd
loope
js
int3
hlt
stc
loopne
sub
push
mov
push
scas
dec
cs
xchg
int3
imul
xlat
into
mov
fdiv
lea
mov
popa
icebp
xor
dec
arpl
cwtl
insb
or
adc
into
xchg
mov
cld
cmc
in
outsl
test
lcall
inc
pusha
xor
fs
pop
mov
inc
cmc
cmpsb
sar
inc
dec
and
or
fisubl
pop
jg
push
or
pusha
inc
xor
xor
bound
xchg
bound
popa
test
ds
jmp
cli
ss
sub
pusha
inc
and
adc
mov
pop
mov
pop
ja
push
cmc
pop
pop
dec
les
orl
sub
nop
repz
rorl
int
adc
inc
test
enter
push
call
sti
and
xchg
adc
lret
data16
pop
mov
bound
aad
sub
push
pusha
fstl
shr
hlt
lock
push
stos
call
sub
out
adc
fwait
jns
add
sub
dec
xor
test
dec
pop
loop
lcall
ds
fbld
scas
xor
push
mov
clc
shlb
cmp
stos
int3
outsl
cli
rorb
push
mov
mov
leave
push
push
rcl
pop
xchg
loopne,pn
sub
enter
jecxz
and
push
scas
sbb
outsl
test
sub
rolb
mov
es
and
cld
rcr
mov
or
ret
fcmovnb
pop
mov
lods
out
mov
mov
lock
pushf
mov
mov
bswap
inc
push
in
mov
in
sub
popa
repz
imul
sub
scas
jb
xor
movsl
js
je
repnz
cmp
lcall
aad
sub
add
push
cmp
and
incl
test
sahf
ja
cmp
or
test
pop
jmp
notb
and
cld
ja
lea
mov
out
cmpsb
cmc
sbb
aam
in
enter
lods
sbb
sti
mov
adc
mov
and
add
mulb
mov
data16
fldcw
push
pop
xor
inc
and
sbb
bound
sub
int
dec
in
pushf
in
jecxz
sti
mov
jns
and
jl
xor
add
pop
adc
and
pop
jae
add
lret
repnz
imul
imul
dec
sub
and
mov
fcoms
xchg
dec
dec
cmpsl
iret
and
add
in
add
in
xor
cmpl
push
out
fldl
add
cmpsl
movsb
pop
push
push
sub
imul
jne
aas
inc
cmp
push
sti
and
pusha
mov
ja
ret
fsub
in
xchg
movsl
mov
push
sbb
dec
cmc
mov
sbb
cmp
fsubr
xlat
push
sti
jnp
xchg
js
add
adc
fisubs
fsubrl
gs
jg
add
cmc
mov
or
pop
ret
aaa
mov
rcl
std
mov
sub
pop
xchg
lahf
ja
in
xor
sbb
out
pop
adc
orb
sub
inc
scas
in
push
adc
sbb
stos
into
arpl
mov
xchg
pop
cwtl
xchg
sbb
push
and
mov
jno
adc
outsl
pop
icebp
jl
arpl
cmpsl
sarb
inc
and
xor
inc
cmpsl
xorb
sti
test
jnp
inc
dec
push
push
or
adc
scas
mov
mov
dec
xchg
cli
enter
pop
rclb
pusha
addb
adc
mov
jp
dec
in
and
adc
or
xor
and
add
push
popa
and
popf
and
lcall
push
aaa
mov
dec
fistpl
sar
sub
sub
dec
inc
mov
jecxz
mov
lret
dec
das
aaa
call
xchg
add
cmp
insl
cmc
jbe
shrl
fldcw
jb
push
push
lcall
and
push
pop
and
daa
mov
test
clc
sub
push
jb
jmp
mov
repnz
adc
mov
push
in
and
add
pop
scas
jbe
mov
call
adc
sarl
call
adc
scas
clc
daa
cmp
dec
scas
sbb
call
dec
aad
popa
jecxz
fidivs
mov
cltd
and
sub
sbb
pop
sbb
icebp
mov
adc
sti
js
and
mov
xchg
data16
adc
addr16
loop
bound
dec
std
xchg
cltd
and
push
movsb
lret
mov
icebp
fstpt
popl
mov
outsl
push
int3
loope
xlat
inc
hlt
popa
xor
cmp
sbb
inc
mov
mov
dec
jb
into
xchg
and
pop
repnz
repz
in
sub
xchg
sahf
xor
sbb
cmp
sti
push
clc
into
pop
lock
cmpsl
out
mov
mov
xchg
adc
andb
xorl
jb
addr16
push
pop
jmp
xor
outsb
mov
jno
sti
inc
xor
gs
sub
jle
mov
mov
jp
cmp
cmpsb
push
sub
lcall
pop
test
lds
rorb
fldcw
js
cmp
subb
es
mov
mov
cmpsw
lret
and
sbb
popa
pop
sub
inc
insb
adc
add
adc
lock
xrelease
mov
jecxz
mov
int3
mov
movsb
mov
test
imull
stc
push
aam
sbb
and
inc
sub
sti
and
sarb
xlat
cmp
ret
cmc
mov
jle
cmc
dec
or
jg
cmp
sti
int3
pop
orb
scas
out
mov
push
mov
out
pop
inc
pop
xchg
imul
adc
ret
sbb
shll
push
mov
mov
or
or
xchg
xchg
ret
idiv
xchg
aas
stc
adc
movsl
pop
mov
ljmp
filds
out
pop
cmp
xor
je
ljmp
enter
sbb
repnz
add
in
imul
inc
inc
add
and
push
pop
jo
cmp
cmp
cld
sbb
add
jp
in
nop
pusha
sub
lret
aam
sti
ss
jle
in
ror
test
mov
xor
pop
xchg
pop
imul
mov
jl
scas
dec
shlb
adc
add
xchg
and
lret
push
dec
pushf
jecxz
shrl
pop
xor
test
dec
bound
stos
pop
lahf
push
ja
jl
iret
pop
sub
orb
lea
aaa
scas
subb
in
pop
in
mov
jge
ljmp
aad
mov
insb
ja
mov
insb
add
mov
aad
pop
inc
add
aaa
xor
bound
inc
push
push
push
mov
int3
mov
mov
ret
mov
and
lods
lods
les
aaa
das
pop
mov
xchg
imul
or
mov
int3
mov
xchg
add
mov
sub
jge
scas
and
aad
sub
and
ffreep
xchg
or
or
lds
xor
cmp
cld
fldenv
pop
cli
gs
call
sub
cmp
outsb
xor
xchg
mov
enter
dec
inc
mov
sbb
popa
pop
cld
inc
push
sub
gs
out
test
jb
mov
jg
imul
movsb
aas
and
test
cwtl
push
mov
dec
sub
mov
nop
dec
lods
xlat
dec
inc
enter
xor
sbb
adc
loop
and
push
rcl
cmp
leave
ret
push
cmp
dec
adc
out
adc
scas
stc
adc
mov
cwtl
scas
insl
aaa
and
rolb
cmc
push
fwait
xchg
push
mov
push
xchg
or
jmp
orb
cmp
xchg
add
jp
cmp
mov
pop
std
lock
cltd
iret
add
xor
cmp
xchg
inc
jbe
or
pop
dec
es
popf
dec
test
leave
adc
push
int3
mov
jmp
mov
dec
lahf
outsb
and
fsubs
dec
dec
sub
xor
in
sub
mov
sub
insb
mov
test
jns
cmp
or
int
lcall
sti
dec
xchg
rol
and
jl
imul
and
movsb
push
gs
sub
sbb
outsl
aaa
mov
aaa
push
push
loope
scas
jb
jmp
pop
fnstenv
inc
in
rclb
xchg
push
add
in
repz
or
int
mov
btc
scas
cmp
fs
inc
stos
sbbl
add
push
inc
and
lret
imul
pushf
add
out
push
push
push
sar
mov
xchg
ficoml
fdiv
addl
mov
test
leave
mov
dec
fadds
mov
push
xor
fildll
dec
push
xlat
mov
mov
jmp
inc
movsl
adc
pop
loopne
pusha
sbb
rcrl
add
inc
popf
sbb
mov
mov
pop
dec
icebp
shl
push
add
data16
ret
inc
sahf
aad
ret
lea
add
and
mov
xor
ds
cmc
pushf
cmp
mov
push
test
mov
mov
sub
add
outsl
dec
add
mov
xorb
sbb
fcompl
dec
gs
add
push
pop
mov
jnp
cmpsb
aaa
xchg
je
jmp
cmp
in
sub
push
mov
repz
fdivl
inc
mov
arpl
ja
frstor
shll
mov
not
jo
rorb
or
movsb
nop
sub
adc
mov
aaa
jns
mov
and
adc
pop
xchg
xchg
xchg
lahf
icebp
rcll
inc
adc
mov
adc
xor
xchg
idiv
cmp
enter
xor
jns
es
inc
jno
pop
hlt
int
sbb
cs
lret
push
pop
outsl
addr16
xor
aam
push
movsl
out
flds
lea
pop
ljmp
loope
mov
cmp
add
sbb
mov
sbb
dec
scas
push
aad
cs
int
mov
aam
and
inc
lret
inc
jns
ret
cmp
shlb
or
cld
inc
or
cli
inc
inc
pop
idivl
in
cmp
out
mov
inc
mov
cmpsl
push
mov
roll
inc
sbb
daa
fldcw
pop
push
pop
testb
mov
sbb
fisttpl
cld
pop
fistpl
xor
popa
out
int
push
scas
loopne
ja
call
stc
and
xchg
push
mov
adc
imul
fdivs
xchg
cmp
sbb
in
mov
mov
mov
andl
dec
mov
pop
in
xchg
sahf
xchg
or
xor
mov
aas
je
stc
pop
push
mov
push
add
mov
lods
pop
ficompl
push
push
jnp
imul
cmp
xor
cli
sbb
out
xor
clc
in
js
loope
stos
add
add
adc
icebp
bound
mov
mov
andb
jo
ljmp
mov
jmp
mov
or
jmp
ret
sub
cld
add
jmp
inc
push
pop
mov
fists
or
sbb
imul
pop
mov
add
xchg
test
cmp
mov
push
sbb
add
cld
sbb
lret
cmp
jge
in
das
leave
imul
ret
dec
jnp
idivl
icebp
push
push
xchg
ficompl
push
mov
pop
push
xor
xor
cmp
sub
inc
enter
imul
mov
pop
imul
loopne
fnsave
mov
mov
repnz
jle
dec
flds
xchg
std
sub
mov
andb
mov
push
imul
nop
mov
fidivl
jg
push
xor
sbb
mov
shrb
dec
mov
and
sub
repnz
loopne
or
adcl
sahf
jecxz
xchg
pop
iret
les
repnz
fisubrs
jns
aaa
sub
repnz
arpl
stos
push
xchg
mov
add
movsb
xchg
fisubrs
sbb
dec
idivl
out
pop
xor
mov
mov
push
xor
pusha
das
fsubrs
stos
aam
xor
add
in
dec
scas
mov
mov
mov
mov
xchg
xchg
dec
ret
mulb
dec
inc
mov
std
shlb
pushf
or
jl
fiaddl
sbb
mov
push
inc
ret
cmp
mov
call
adc
sar
inc
xchg
xor
mov
add
xchg
pop
dec
js
js
std
int
clc
pushf
ss
xor
divb
dec
cmp
jo
pop
inc
add
es
fisubrs
test
dec
mov
pop
jbe
dec
cs
ja
insl
jg
sub
pop
bound
sti
jns
imul
sti
mov
cwtl
movsl
or
ds
adc
sub
cmp
cmpb
dec
inc
cmc
fisubs
push
in
leave
sti
dec
ja
mov
pop
aaa
xor
gs
push
testb
andb
aas
push
adc
gs
xchg
inc
and
pop
enter
clc
cmp
aad
loope
movsl
cmp
test
sahf
aaa
dec
cmpb
sbb
std
movsl
jg
imul
inc
jo
and
dec
cmpsl
lods
and
inc
stos
sbb
mov
inc
xor
sub
movsb
std
push
push
clc
pusha
pop
sahf
test
stos
push
sub
pop
push
les
cmp
rcrl
testl
leave
mov
and
mov
ficoml
jl
and
aas
jae
pop
jl
and
lods
pop
sbb
leave
insb
cmc
ljmp
insb
sti
and
frstor
and
mov
mov
addr16
data16
pop
sub
add
pop
loop
cmp
cld
xchg
test
loope
sub
loop
pushw
cmp
xor
iret
je
pop
cmpl
mov
mov
jmp
add
notl
insb
sub
faddl
mov
sahf
sbb
cmpsl
sbb
push
jl
mov
dec
imul
test
jnp
dec
fisubl
dec
jmp
mov
mov
inc
add
mov
pushl
mov
dec
mov
mov
movsb
and
sbb
mov
push
adc
xchg
out
js
push
lahf
or
es
popf
jmp
mov
out
enter
ds
dec
jo
add
enter
pop
pop
pop
xor
dec
mov
cmp
cltd
cli
xchg
out
mov
es
cmp
sub
jae
loopne
repz
jmp
dec
fstpt
or
jecxz
add
aaa
and
dec
add
mov
inc
dec
sahf
ficoms
hlt
lock
pop
mov
mov
fistps
xlat
in
popa
das
das
je
orb
bound
xchg
xchg
and
call
add
ret
and
cli
xor
insl
inc
xor
sbb
inc
shll
fs
push
pushfw
inc
stos
xor
mov
sub
loope
pop
pop
and
cs
xor
jge
sbb
adc
mov
mov
adcl
fsubp
add
bound
aam
sti
dec
das
sbb
pop
stc
lods
mov
ljmp
je
and
or
pop
and
inc
cwtl
dec
stos
and
and
pop
rcrl
adc
xchg
stc
lods
pop
sti
sub
inc
xlat
push
out
andb
in
mov
cli
mov
lret
cltd
and
sub
pop
lahf
pop
pop
sub
xor
dec
and
decb
fwait
and
lahf
out
push
fnstsw
in
aad
pop
sbb
dec
pusha
aaa
arpl
mov
jge
lahf
push
loope
dec
xor
mov
and
mov
xlat
std
cwtl
sub
rcrb
ss
push
flds
add
jp
jns,pn
pop
add
sub
push
fistpl
aam
scas
in
mov
add
ficompl
jo
jl
mov
lret
insb
dec
cmp
daa
hlt
shll
mov
dec
hlt
adc
inc
adc
jnp
inc
xor
imul
sub
lock
pop
and
xchg
aad
pushf
push
int
inc
cs
or
in
xchg
cmpsl
fs
xchg
adc
lahf
cwtl
lret
shl
outsb
cld
lea
hlt
pop
or
inc
push
subb
push
push
adc
ret
adc
dec
and
pop
push
fisubl
push
cwtl
and
jbe
or
push
xor
scas
nop
push
fsubs
add
add
mov
cwtl
jae
pop
imul
add
mov
test
ret
jg
xor
inc
xor
push
and
push
idiv
or
xchg
mov
lret
or
stos
scas
cltd
or
mov
pop
pop
adc
xchg
push
mov
xor
into
lahf
adc
lock
and
sti
dec
xor
cli
test
fstpl
cmpsl
cmp
imul
mov
ret
test
shlb
lds
dec
jo
decb
testl
pushf
push
aam
shlb
jbe
shll
xor
mov
push
call
lret
sbb
xchg
std
mov
push
out
mov
shl
fyl2xp1
mov
incb
movsb
into
pop
rcr
dec
add
scas
mov
or
out
inc
xor
pusha
scas
idivl
push
std
push
insl
addl
and
pop
enter
xor
aaa
scas
mov
inc
cmp
rolb
push
and
test
push
add
push
or
mov
sbb
or
xchg
cmc
jecxz
jnp
xor
call
lea
push
leave
inc
xor
pop
ds
pop
push
fisttpl
mov
ds
adc
pop
lods
addr16
in
lret
rcr
fcoms
mov
ret
sub
sub
xor
int3
cmp
js
mov
test
sarb
test
sub
mov
adc
lea
pop
mov
subb
arpl
push
aam
test
mov
jmp
in
inc
test
popa
adc
gs
mov
fcoms
je
mov
inc
std
add
pop
lods
lods
xor
inc
xchg
sbb
aas
pop
into
fnstcw
pushf
mov
jmp
icebp
adcl
xlat
js
leave
adc
out
jno
jg
mov
shl
sub
adc
mov
mov
sub
shrb
sti
mov
inc
pop
cs
push
adc
and
sarl
xor
pop
cmc
mov
leave
adc
dec
stos
xchg
xchg
sbb
xor
jae
mov
pop
jmp
push
xor
adc
mov
sbb
ja
adc
pop
test
sbb
xchg
ja
lea
pop
and
lret
xor
ss
les
adc
enter
nop
jnp
mov
lahf
push
into
leave
add
push
pop
sub
pop
inc
xor
fisttpl
test
icebp
lret
je
cltd
mov
stos
out
mov
dec
pop
ja
test
int
popf
mov
shrl
scas
lcall
xchg
fidivl
lret
fdivrl
mov
push
mov
outsb
dec
jne
cmp
xor
shlb
xor
adc
test
xchg
test
pop
pop
inc
es
jno
movsb
adc
mov
repz
idiv
rorl
xchg
xor
cmc
adc
push
sbb
inc
mov
lods
cld
cmp
outsl
mov
push
mov
xor
bound
shl
ljmp
imul
mov
or
das
rcll
push
repz
xor
pop
shrl
cs
repz
ljmp
xchg
loopne
add
mov
push
jecxz
das
add
and
mov
mov
mov
lods
cltd
loope
out
lret
and
loop
jo
popa
xor
push
and
outsb
test
jo
ret
mov
cmpsl
aaa
mov
lahf
sub
mov
mov
jg
jge
nop
mov
pop
mov
cwtl
mov
mov
sbb
pop
faddp
inc
das
pop
mov
mov
xor
js
neg
int
test
sbbl
rcr
jns
xchg
sbb
test
jae
fucomi
lahf
sub
add
xor
and
rcrb
push
sbb
adc
cwtl
cmp
movsl
dec
das
lcall
in
jge
pop
test
jl
test
mov
add
inc
lods
pop
and
movsb
xchg
ss
jnp
sbb
insb
and
fisttps
js
lea
fwait
pop
sbb
out
xor
or
mov
and
xchg
or
xor
sti
int3
leave
dec
out
xchg
test
push
faddl
cs
xlat
pop
fs
and
push
jns
lret
divb
sbb
push
mov
mov
filds
jge
clc
xchg
out
jnp
xchg
in
dec
data16
inc
xor
movsb
add
jp
cmpsb
and
ret
sbb
into
push
pcmpeqd
in
or
insb
nop
and
andl
clc
pop
xchg
mov
mov
inc
mov
sbb
cmp
mov
out
xchg
in
negb
sub
cmp
pop
cmp
cltd
adc
pop
dec
pushw
push
lea
fptan
push
xchg
cmp
mov
xchg
cmp
mov
movsl
push
cltd
outsb
push
sbb
or
adc
push
flds
mov
pop
cmp
pop
orb
lods
mov
fmul
fistl
push
push
fcomps
fdivr
push
ret
incb
imulb
and
or
or
jae
add
int
add
rcr
fcoms
xchg
and
push
je
pop
fsts
pop
sahf
jle
imul
xchg
ret
sbb
jp
jb
mul
inc
ds
cmp
dec
add
cwtl
inc
decb
nop
das
ficoml
gs
dec
call
or
cmc
xor
fsubrl
aaa
movsb
fisubl
push
sub
or
test
fsts
push
cmp
pop
and
jns
add
inc
inc
mov
mov
xlat
and
in
mov
jmp
sub
ss
scas
and
push
mov
xor
jo
inc
mov
jae
mov
lock
mov
int
or
cmp
jl
xchg
addr16
xor
push
ret
inc
repnz
mov
addr16
pop
inc
out
scas
lret
popf
dec
cmp
xchg
adc
test
adc
and
or
cmp
push
adc
cmp
and
iret
scas
daa
mov
dec
push
icebp
jle
bound
arpl
sbb
push
aas
and
rorl
jne
adc
xchg
pop
push
subb
xor
cmp
jmp
jno
sub
xchg
lret
mov
mov
test
xor
adc
lret
cmp
mov
inc
push
lret
adc
pop
pop
add
mov
push
ds
jns
fsubs
adc
test
icebp
fistps
and
xor
cmp
std
mov
mov
and
mov
cs
test
lods
mov
xchg
xchg
adc
cmp
jge
xchg
or
pop
mov
sbb
inc
lea
idiv
test
ror
mov
lods
xlat
lret
je
lret
sbbb
fcoms
mov
mov
out
lahf
push
sbb
lock
inc
push
adcb
in
adcb
pop
cmp
mov
test
sbb
sbb
dec
sub
add
insl
aas
adc
call
jns
push
push
daa
lods
iret
in
sub
xor
shr
mov
push
push
push
in
addb
gs
push
inc
aaa
cli
mov
fimull
mov
loope
mov
jecxz
mov
ret
cmp
sarl
sbb
xchg
loop
add
out
mov
push
pop
and
xor
lods
mov
stos
mov
out
xor
adc
nop
int
or
add
inc
fldt
push
or
jo
pop
push
je
push
mov
repnz
jae
sbb
call
and
inc
inc
adc
scas
das
mov
jo
out
and
xchg
pop
mov
mov
mov
sbb
ljmp
mov
sahf
std
popa
cmp
jno
and
jnp
inc
push
faddp
xchg
add
or
inc
orl
in
jae
pusha
mov
jecxz
fwait
shrl
std
shl
sbb
ljmp
or
mov
jge
or
repnz
int3
lea
xor
fsubr
mov
sbb
jnp
xchg
inc
push
mov
push
mov
into
mov
dec
in
enter
cmp
cmp
cwtl
pop
pop
push
outsb
push
pop
les
pop
movsl
in
movl
les
cs
dec
lret
popa
outsl
and
jbe
mov
sub
icebp
jo
ret
js
xchg
test
mov
xchg
and
shlb
test
and
imul
ljmp
into
sbb
jno
jp
aaa
shl
pop
test
outsl
imul
lods
adc
dec
push
fnstcw
loope
sub
fcoms
fdiv
imul
sub
mov
adc
mov
xchg
movsb
test
jo
mov
dec
sti
je
inc
xor
sub
pop
mov
add
add
call
mov
adc
cmp
or
mov
sbb
mov
jno
test
adc
push
rolb
cmpsl
ret
out
not
jg
in
cltd
push
lods
mov
jecxz
rolb
and
mov
out
adc
mov
outsl
ret
pop
das
sbb
xchg
jb
repz
aam
cmp
test
dec
pusha
and
les
jmp
pusha
cmc
je
fwait
cmpl
adc
xor
fabs
inc
push
dec
into
fisubs
mov
sbb
into
cmp
push
pop
adc
out
mov
repz
jmp
stos
push
pop
movsl
xor
movsl
push
aaa
jb
imul
int3
insl
dec
jae
or
jg
dec
test
aaa
fsubs
pop
and
and
iret
jmp
shr
jl
mov
aam
inc
test
icebp
add
dec
shll
xchg
fldenv
add
ret
hlt
movb
scas
aam
loop
mov
lea
xchg
movsl
mov
cmpl
sub
jl
sbb
or
pop
inc
jp
adc
in
negb
add
push
and
stos
fdivrs
arpl
jmp
xchg
rolb
or
pop
mov
dec
mov
lahf
adc
imul
mov
mov
pushf
or
int
fisttpll
pop
lods
inc
pop
cmpsb
out
test
pop
cmp
addr16
je
into
sti
lock
jb
xor
cmp
into
fstl
loope
pop
push
sub
or
pop
add
lea
mov
es
cmpxchg
or
shl
cli
unpckhps
push
inc
ja
mov
data16
je
inc
sti
sbb
imul
cmp
mov
adc
mov
mov
jmp
aaa
xchg
mulb
lret
lea
xchg
push
sub
adc
rcrl
inc
in
jno
mov
lock
rcl
outsb
sbb
sbb
jb
add
fnstenv
jno
cmp
xlat
jmpw
popf
xchg
jne
adc
and
popa
test
in
sti
pop
fcoms
rolb
dec
test
stos
mov
dec
les
add
int3
cmp
nop
stc
add
mov
shrl
shll
fdivs
test
mov
push
mov
subl
jno,pn
jecxz
sub
mov
je
cmc
and
mov
out
out
mov
pop
std
mov
mov
negl
cmp
loopne
fwait
xchg
test
dec
mov
mov
imul
add
flds
imul
fnstcw
mov
aam
sbb
and
mov
jge
outsb
aad
js
pop
ljmp
push
call
or
fimull
dec
cmpsb
bndstx
outsb
dec
adc
dec
testl
push
xor
andl
cmp
push
inc
loope
push
std
adc
mov
pop
add
inc
pushf
mov
jecxz
add
or
jmp
dec
push
jns
jecxz
icebp
arpl
repz
or
test
rcr
loope
lods
ja
dec
sub
aad
sub
and
out
inc
mov
dec
inc
fdivrs
mov
jp
mov
cs
je
es
data16
jo
mov
push
xor
cmp
jmp
jno
rcrb
jae
and
std
stos
mov
sbb
add
lret
xor
insl
add
jne
in
imul
movsl
or
xchg
sbb
jo
scas
mov
cmp
aam
int
cmp
scas
bound
nop
icebp
out
repnz
fldl
push
adc
mov
xorl
xchg
sbb
test
lock
push
sti
in
add
cmp
lret
mov
rcl
push
aaa
push
or
cmp
xor
int3
push
rcrl
cmpsb
aaa
mov
xor
outsl
adc
jb
mov
inc
lahf
cmp
fisubs
ss
pop
mov
mulb
cwtl
sbb
mov
pop
mov
mov
dec
pop
adc
and
mov
rcl
add
push
jl
es
add
or
movsb
dec
addr16
and
sarb
stos
jo
cmp
sbb
popf
in
cmpsl
shrl
pop
cwtl
sahf
outsl
push
sbb
stc
inc
es
pop
cmc
cs
mov
out
mov
stos
push
lea
add
daa
lds
call
mov
aaa
fwait
or
inc
mov
out
mov
inc
dec
add
subl
lcallw
imul
push
imul
lret
fmul
mov
or
sbb
fwait
lea
call
and
test
mov
xchg
in
cmp
into
in
mov
add
xchg
lods
mov
pop
pop
iret
push
push
push
cmp
push
mov
ret
call
fdivrs
aaa
mov
fidivrs
sub
push
push
out
mov
loopne
xchg
xchg
and
jo
xor
ret
stos
scas
push
pop
outsb
inc
ror
push
clts
lods
add
pop
loopne
pop
daa
xor
push
mov
jns
in
insb
inc
test
sub
inc
insl
pop
pop
clc
jl
push
or
adc
and
lds
inc
mov
daa
fbstp
push
aaa
cmpsb
stos
pop
cmp
popf
jl
les
sbb
daa
mov
imul
xchg
cli
daa
js
and
ret
sbb
push
pop
xor
jno
cmp
lahf
ljmp
negl
fwait
cli
popf
lea
addr16
repz
mov
and
mov
fcmove
inc
adc
inc
in
popf
loop
iret
push
out
cli
loopne
sub
cld
inc
mov
pusha
sahf
push
int
adc
scas
xchg
lds
or
pushf
jmp
push
ret
arpl
dec
lods
push
out
push
ss
xchg
add
cltd
or
dec
mov
je
imul
movsl
repz
lcall
mov
cs
cltd
push
lea
roll
adc
mov
leave
stos
orb
pop
and
out
dec
fs
lcall
sbb
hlt
jl
cmpsb
scas
jns
enter
xchg
ljmp
shrb
xchg
leave
sbb
cmp
jge
jecxz
dec
test
ljmp
xchg
mov
push
ret
mov
stos
pop
int3
sub
aaa
call
sbb
pop
xchg
cmp
mov
xor
pusha
adc
sbb
inc
es
ss
sti
jb
and
ret
out
push
sbb
test
mov
inc
jg
das
push
aam
xor
xchg
adc
out
pop
in
xchg
hlt
jns
fwait
mov
inc
jl
scas
adc
jge
or
mov
cmpsl
in
repz
imul
lods
jnp
mov
xchg
push
pop
jbe
ss
and
aas
pop
outsb
mov
inc
fnsave
jo
call
cmp
mov
lods
bound
loope
dec
push
stos
add
xor
ret
je
imul
dec
push
out
mov
sti
test
xchg
xchg
scas
gs
mov
sbb
add
bound
enter
sub
stc
cwtl
pusha
stos
lock
aaa
or
push
add
addb
fistl
push
dec
js
adc
cld
jg
icebp
cld
inc
ljmp
sub
dec
jle
cmp
push
jmp
jae
xor
inc
es
cmp
popf
pusha
js
ret
push
push
dec
jmp
hlt
adc
outsl
shlb
xchg
xchg
bswap
pop
cmpsb
pop
xchg
rorl
and
test
sub
das
pop
mov
xor
sbb
mov
aam
fs
daa
cli
xchg
cwtl
pop
add
mov
les
lret
sbb
ja
xlat
pop
pop
jae
jbe
mov
dec
pusha
out
push
std
inc
loope
mov
sbb
cmp
add
stos
mov
ret
xor
add
adc
rcr
mov
arpl
dec
imul
adc
loopne
stos
cmpl
push
jl
scas
roll
mov
movb
call
ret
jbe
xchg
mov
test
mov
sub
push
ljmp
pop
adc
sub
ret
jae
push
lret
bound
and
push
pop
pop
jl
andb
xor
xchg
mov
inc
mov
and
cs
repnz
dec
lret
push
add
dec
sub
into
push
jmp
stos
testl
js
scas
xchg
cmp
aad
jne
into
mov
in
fdivl
sahf
mov
mov
jmp
lods
jbe
dec
xor
lea
mov
fsubr
clc
cmp
fidivrs
inc
adc
sbb
mov
sub
sub
push
inc
push
mov
int
add
add
jb
jl
jnp
nop
cmpsb
clc
mov
fwait
aam
cli
dec
push
jg
int
lods
inc
lcall
fs
popf
push
jae
sub
out
cmp
inc
pop
inc
stc
add
xor
or
xchg
cmp
mov
jno
and
sbb
fiaddl
xchg
pop
fcompl
sbb
js
xor
inc
in
add
or
pop
push
bound
add
test
add
sbb
sub
push
mov
out
test
jmp
popf
push
xor
test
scas
ds
xor
push
sbb
cmp
jbe
out
repz
mov
pop
xor
js
arpl
outsl
ror
xor
mov
or
adc
pop
dec
mov
ret
mov
xor
mov
push
or
dec
xor
or
testb
sbb
xor
mov
and
mov
push
dec
cwtl
lea
cmp
jnp
push
popa
push
inc
ss
int
xchg
push
loop
iret
mov
test
cmpsl
lds
inc
es
cli
xor
insb
and
cmp
int
cmc
fs
test
aam
inc
rolb
push
inc
fidivs
push
pop
pop
loope
orl
sar
cmpsl
je
or
test
in
test
dec
mov
scas
sbbb
pop
or
cmpsb
std
add
lret
mov
jae
fcmovne
xor
xchg
mov
insl
bound
pop
pop
scas
jmp
mov
fwait
mov
divb
jp
dec
lock
fistps
and
imull
or
cli
sub
ss
mov
scas
push
push
jnp
insb
pop
mov
xor
push
repnz
push
lock
out
push
dec
lock
test
pop
scas
loope
mov
jbe
outsb
xchg
mov
cmp
pop
in
jl
xchg
xor
push
pusha
adc
cmp
popf
mov
xor
xor
or
and
lods
repz
rcrl
pop
mov
inc
cmp
out
mov
mov
imul
cmp
add
imul
js
dec
inc
ret
or
ss
outsb
mov
and
scas
inc
mov
fs
call
lods
sub
testb
mov
out
out
cltd
mov
popf
ret
stos
inc
or
sbb
ss
cmp
adc
outsl
pusha
fnsave
push
pop
sahf
mov
or
inc
dec
push
bound
cmp
sub
imul
aas
lahf
adc
scas
into
nop
fadds
mov
ffree
cwtl
mov
mov
insb
or
std
xorb
arpl
int
inc
stc
adc
loop
in
push
or
mov
jo
jns
jl
aam
mov
in
mov
mov
cmpsb
jns
movsl
inc
enter
push
outsb
jbe
sub
pop
mov
xchg
sbb
jge
test
jle
sbb
xor
xlat
lods
mov
and
icebp
cmp
xchg
and
je
jbe
jmp
rorb
std
dec
xor
sub
out
inc
cmp
dec
inc
mov
popl
ret
fmull
push
cwtl
push
jge
xor
repz
outsl
pop
rol
dec
test
aad
into
decl
lods
popa
xchg
test
mov
mov
and
into
sbb
lock
rol
je
pop
daa
lods
mov
pusha
imul
inc
pop
pop
add
or
push
ret
sub
popf
mov
lcall
jge
int3
jbe
adc
insl
and
out
cmp
test
test
repnz
lahf
scas
mov
lret
ds
pop
adc
sti
ja
jbe
xchg
lahf
psrlw
lods
inc
xchg
or
stos
push
scas
xchg
xor
push
xchg
rcl
pushl
or
loopw
outsb
arpl
add
mov
sbb
js
pop
fistl
pusha
mov
push
mov
sahf
adc
xchg
imul
lds
outsl
repnz
rolb
jmp
ret
pop
or
jecxz
aam
pop
jnp
cld
jb
pop
cmpsb
popa
push
and
andl
fistpll
xor
jns
hlt
push
dec
lods
and
jbe
xchg
xlat
and
pop
shll
lret
shrl
or
inc
test
mov
jo
mov
or
push
cli
mov
std
cmpsl
es
int3
orl
sahf
jo
loope
or
xchg
pop
ja
sub
mov
adc
adc
cvtps2pd
jae
mov
mov
mulb
int3
dec
jmp
add
jae
push
mov
fsubl
or
jbe
rclb
gs
bound
loop
stos
pop
sub
faddp
xchg
imul
add
cmp
adc
in
pop
lods
and
jge
sahf
sub
inc
je
inc
pop
cmp
inc
sahf
aam
add
jno
into
jbe
lea
mov
adc
scas
mov
movsl
inc
mov
ljmp
std
insb
int3
jge
int
clc
add
add
mov
push
enter
mov
sbb
aam
push
push
imul
pop
test
sbb
lea
ss
lds
test
pop
scas
sbbl
sub
pop
cmpsl
add
lock
aaa
xor
dec
pusha
inc
in
mov
test
and
or
xor
jae
jl
into
lahf
mov
cmp
xchg
push
movsb
repz
rolb
adc
sti
sub
or
mov
push
aas
push
lahf
das
cmp
popf
jg
cmc
mov
inc
mov
sub
mov
sub
icebp
or
sarl
mov
es
jne
mov
fcmovnbe
movsb
inc
mov
or
mov
test
inc
popa
mov
pop
lods
jle
xor
dec
push
mov
xor
push
push
xor
dec
jae
ds
xchg
mov
sub
add
add
ss
and
stos
xchg
das
in
and
movsb
jge
leave
push
and
fldl
push
xchg
outsb
scas
std
add
adc
cmp
xchg
cmp
push
inc
lret
iret
adc
push
lret
adc
mov
mov
adc
aam
sub
pop
addr16
inc
je
inc
je
dec
fsub
daa
in
mov
ret
jns
adc
jne
mov
and
andl
mov
inc
repz
scas
push
xchg
jae
shrl
push
sti
xchg
mov
ds
sarl
push
sub
shlb
jl
lcall
lock
xorl
push
fsqrt
mov
adc
orb
xor
mov
sahf
popf
mov
xlat
mov
shrb
outsl
pop
add
and
or
es
into
orl
enter
push
sbb
shll
pop
arpl
mov
sub
out
mov
ja
cwtl
cmp
xchg
push
lahf
adc
jmp
fidivrl
dec
sub
cmp
fdivrs
lea
and
pop
es
fidivl
stc
shlb
cmp
and
pop
pop
nop
roll
pop
mov
in
push
mov
and
bound
mov
iret
js,pn
lods
call
addl
enter
xchg
sahf
mov
push
sarl
mov
call
mov
addl
jl
xchg
xor
mov
aad
mov
sbb
jnp
inc
xor
daa
pop
pusha
and
inc
push
movsb
dec
jno
faddl
xor
inc
dec
sarl
ret
insl
xor
jo
in
or
mov
dec
pop
in
movsb
xor
xlat
inc
loopne
and
mov
jno
push
dec
test
jmp
mov
pop
je
xor
addb
cmp
insb
cmc
cmp
cwtl
stos
inc
xor
cmpsb
pop
ljmp
lret
inc
jne
xor
add
sbbl
cwtl
cmp
pop
dec
lret
in
jmp
rorb
or
lds
cwtl
pop
dec
jl
inc
or
xchg
sbb
popf
jge
in
and
fs
inc
adc
mov
jg
and
push
push
ljmp
mov
add
jns
mov
cld
outsb
jae
sbb
mov
std
bound
mov
mov
fistpl
jge
mov
cmpsb
mov
subb
leave
dec
out
popf
mov
xor
xchg
cmpsb
push
data16
dec
cmc
mov
pop
mov
adcb
imul
mov
fldcw
or
jnp
sub
push
in
outsl
outsb
shl
lret
dec
and
xchg
mov
push
lods
ljmp
out
sbb
or
mov
dec
popa
repnz
sbbl
pop
repz
cmp
pop
mov
mov
adc
xchg
jae
clc
lret
or
lret
addr16
adc
jbe
or
cmpsb
or
dec
adc
jae
or
and
pop
mov
insl
out
inc
cmp
cmpsl
std
movsl
mov
sub
insb
cltd
xor
xchg
adc
xlat
sub
or
xchg
test
daa
aam
das
mov
fucomp
popf
or
ljmp
rcl
je
xchg
stos
add
sbb
xchg
in
sahf
addb
int3
sahf
data16
fsts
popf
or
orl
nop
sbb
or
pop
scas
addb
sbb
dec
inc
stos
mov
sbb
into
jb
sbb
ljmp
cs
push
into
cmp
outsb
lods
dec
dec
pusha
ret
iret
push
stos
jle
xor
dec
inc
sarl
mov
fidivrs
cli
clc
fmul
das
lods
jbe
pop
mov
push
sub
or
ficoms
sub
dec
sub
add
push
dec
inc
inc
in
mov
jno
test
adc
pop
xchg
std
pop
outsb
int3
icebp
add
xchg
cmpb
push
pop
xchg
pop
dec
out
movsl
ret
add
jmp
mov
cmp
inc
xor
out
imul
fildll
lret
in
jle
push
iret
cmpsl
push
sbb
fs
pop
mov
daa
jp
insl
push
inc
inc
pop
add
gs
or
dec
inc
xchg
xor
xchg
sub
sarl
xchg
arpl
add
incl
repnz
add
push
mov
cwtl
xlat
ja
out
inc
test
add
mov
sbb
mov
sbb
das
jle
orb
les
imul
pop
push
cmp
push
mov
mov
push
jle
xchg
push
lea
cs
scas
mov
lds
xchg
lret
mov
mov
jl
ret
xor
inc
jecxz
cwtl
jae
mov
scas
mov
imul
xchg
or
mov
cmp
das
rcl
ja
cmp
mov
jnp
and
dec
in
outsb
mov
pushf
into
lds
in
cmp
dec
cmp
push
shl
jnp
std
out
fsts
and
sbbb
adc
sub
adc
rclb
fsubs
and
stos
jmp
add
dec
jns
outsb
adc
and
jb
cmc
negl
or
mov
sub
leave
ja
ret
fcoml
sbb
repz
push
pop
cmp
adc
add
out
rcll
or
cmp
ficoml
inc
out
jge
jmp
mov
icebp
lods
loopne
mov
adc
mov
cmp
and
aad
and
in
sub
add
popa
insl
iret
adc
sub
bound
js
or
call
bound
dec
dec
push
inc
icebp
xchg
insb
cltd
mov
push
mul
or
jo
push
lcall
enter
sub
mov
cmp
or
daa
inc
sbb
inc
loopne
scas
lock
popa
sbb
dec
fidivs
mov
lods
clc
mov
pop
sbb
or
jmp
outsb
lahf
repz
arpl
lock
es
cli
ret
inc
xor
xor
mov
addb
dec
or
mov
stos
pop
push
imul
cmp
push
push
fdecstp
mov
jle
or
aad
ss
popf
jb
cmp
push
int
or
pop
mov
loop
addb
cwtl
push
xchg
in
decb
das
in
cs
xchg
and
adc
neg
jge
sub
push
int
and
ja
lods
insl
scas
mov
cmp
mov
push
sub
xor
xchg
ss
cmp
ja
sbb
push
mov
ja
jbe
fbstp
out
clc
imul
in
insb
dec
jmp
sbb
adc
mov
mov
mov
or
jmp
jno
and
mov
cmp
or
ficompl
adc
jo
inc
mov
dec
sub
lret
pop
adc
push
mov
inc
inc
ret
mov
imul
sbb
fistpll
daa
lea
int3
gs
cmc
push
adc
leave
push
ss
flds
in
mov
aas
testl
repnz
leave
out
add
out
into
lret
aad
test
inc
popa
cmp
adc
and
mov
pop
and
xchg
mov
les
testb
int
cmp
adc
popa
add
push
addr16
pop
mov
outsb
and
inc
cld
sbb
dec
mov
xchg
sub
jbe
rorl
mov
aam
jl,pt
fldenv
scas
loop
mov
ficoml
rorb
dec
cmpsl
out
sbb
int3
sub
adc
inc
mov
ret
incl
xchg
in
insl
aad
push
leave
mov
in
imul
repnz
mov
test
mov
shl
pop
adc
call
inc
rcrl
push
stc
and
jns
loopne
nop
scas
xor
xchg
xchg
repz
je
sbb
test
repz
scas
out
add
sub
push
xchg
lahf
adc
xor
fwait
or
mov
push
sahf
scas
outsb
cmp
cld
imul
pop
add
add
pop
jns
fcoms
add
sbb
hlt
mov
sbb
jns
frstor
into
mov
or
inc
lods
push
pop
div
hlt
or
shll
or
cltd
or
adc
adc
mov
or
inc
inc
daa
inc
imul
push
out
out
arpl
jp
hlt
les
repnz
pop
stos
sbb
call
mov
test
xchg
jle
aad
pop
sbb
pop
and
pop
sti
add
jns
dec
xor
sbbb
add
into
pop
pop
inc
sbb
and
cltd
mov
xor
clc
push
jb
sub
mov
sub
jae
int3
scas
mov
in
mov
pop
ret
sub
adc
push
cli
stc
inc
dec
subl
in
add
int3
in
insb
mov
std
jnp
movsl
inc
cmp
cmp
inc
sarl
idiv
jmp
dec
adc
dec
dec
shll
push
call
enter
cwtl
xor
cmp
cmpsb
inc
xlat
mov
aad
data16
ficomps
leave
fwait
push
or
movsb
mull
jp
push
stos
ljmp
sbb
in
iret
call
push
daa
lods
mov
cmpb
adc
leave
push
es
mov
addl
lret
dec
in
inc
je
xchg
cs
fs
icebp
mov
mov
jbe
adc
push
mov
inc
loop
dec
loop
adc
push
enter
sub
jbe
and
xlat
inc
mov
push
popf
push
jne
lods
jne
insl
sub
mov
pop
pop
in
xchg
je
push
je
scas
scas
add
pop
fcoml
push
cmpsl
mov
ss
mov
scas
shlb
popa
lahf
fidivs
xchg
pusha
push
mov
or
je
fistpl
sub
jb
subb
fidivrs
dec
js
mov
sbbl
xlat
insl
out
xchg
js
gs
pop
mov
outsl
sbb
gs
cmp
push
fnstenv
mov
pusha
movsl
popa
xor
xor
ret
out
fmuls
arpl
fcomip
ja
cmp
pop
pop
jecxz
mov
sub
push
or
dec
out
mov
subl
jnp
mov
adc
mov
mov
mov
push
sbb
jbe,pn
xchg
lods
ret
repz
adc
ret
mov
shlb
int
enter
imul
inc
ret
jmp
pop
pop
cmp
push
or
das
jo
pop
mov
out
adc
jns
push
aad
out
jle
adc
pop
int
icebp
sbb
xchg
hlt
mov
and
add
roll
xlat
jg
adc
push
imulb
lret
mov
aaa
dec
push
sti
fmull
jne
repz
pop
out
insb
adc
lahf
lds
mov
icebp
mov
cltd
sub
repnz
ss
cmpsb
test
xor
pop
inc
mov
iret
js
dec
data16
gs
ret
into
movsb
fwait
jle
inc
sub
loope
cmpsl
push
adc
popa
or
andb
and
out
test
in
in
pmulhw
stc
ficoml
mov
jecxz
jno
fimuls
cmpsb
js
popa
out
or
inc
jmp
outsb
xor
jb
fcomps
lea
dec
sti
cmpsl
or
lock
test
outsb
out
rdmsr
xor
xor
xchg
ret
mov
jge
push
jle
loopne
out
or
shl
ficoml
add
jbe
movsb
inc
jecxz
jns
test
mov
lods
fbstp
jecxz
dec
clc
fsubrs
dec
sbb
test
xchg
mov
movsl
repz
push
ljmp
pop
add
inc
sbb
or
xchg
push
and
push
cmp
leave
adc
cs
jo
cwtl
movsb
test
push
add
sub
aam
es
adc
out
loope
lods
sbb
inc
lret
cmp
xchg
jg
xor
shlb
out
jbe
mov
imul
stos
inc
test
repz
out
sbb
orb
mov
xlat
cwtl
jnp
iret
pushf
cmp
cs
mov
mov
fists
add
fimuls
mov
xchg
iret
dec
loop
pop
sbb
pop
testb
add
into
push
jp
adc
push
or
pop
inc
sub
jle
aad
jns
add
mov
or
test
insl
inc
mov
shr
repnz
dec
test
mov
inc
pusha
jmp
xor
mov
bound
vmread
incl
in
lea
jle
inc
or
xor
sahf
and
fwait
rolb
sti
add
das
sbb
push
inc
jle
dec
enter
popa
bound
mov
test
cs
sti
adc
rcll
fdivl
std
adc
mov
adc
andb
adc
cmp
push
sti
inc
mov
shlb
fcmovu
pop
mov
pop
popf
enter
push
jae
inc
stos
mov
jnp
jmp
mov
mov
xor
jg
jns
jae
push
mov
dec
adc
add
in
idivl
pusha
out
xor
jg
jno
xchg
or
aas
mov
xor
ja
lret
int
loop
jmp
xchg
push
add
loopne
jo
and
test
cmp
jmp
push
outsb
sub
cli
out
inc
pop
daa
push
in
sahf
mov
dec
rorb
lret
stc
jno
push
xor
sub
cltd
jge
jge
pop
loop
lock
add
out
lret
push
inc
pop
lods
inc
outsl
movb
lods
and
sub
xor
and
clc
mov
insl
cmpsb
mov
test
popa
iret
sub
in
addl
pop
pop
sar
insb
push
or
call
es
in
lds
mov
jne
mov
jg
pop
subl
xchg
mov
lret
mov
mov
mov
sub
push
into
daa
pop
out
dec
ljmp
xchg
std
fiadds
or
push
stos
add
pop
dec
shrl
pushf
dec
sbb
out
jecxz
adc
dec
popf
and
icebp
das
aad
mov
rcrb
xor
sbb
mov
in
jle
xchg
test
arpl
cltd
sti
arpl
adc
call
xor
inc
das
mov
pusha
insb
cltd
jmp
pushf
inc
in
call
jnp
sbb
add
pmaddwd
mov
stos
inc
fwait
sbb
popa
in
int3
movsl
lods
and
dec
stos
or
push
dec
pop
sub
pusha
push
fimull
loopne
leave
out
push
xchg
adc
sub
in
cmp
mov
icebp
lds
jecxz
jg
mov
test
in
andb
mov
xor
in
pop
cmp
lcall
push
scas
mov
test
xor
mov
andl
jns
jns
jmp
mov
jle
sbb
jo
test
loope
push
into
test
bound
test
into
sbb
sbb
inc
lock
nop
push
inc
rcrl
jle
mov
imulb
or
test
rolb
icebp
dec
movsl
pop
mov
add
call
adc
xchg
pop
dec
sub
call
inc
jo
lea
mov
lock
popf
cmpsb
ret
mov
push
cltd
das
add
lret
adc
fidivrs
popf
mov
cmp
out
inc
adc
subl
icebp
call
and
fs
push
sub
das
push
ficomps
fcomip
lcall
fs
loope
add
insl
lea
mov
mov
push
jmp
jne
sub
insl
das
sub
repz
gs
xchg
fimuls
inc
iret
push
fistps
pop
jae
pop
adc
aad
push
call
mov
in
inc
mov
rolb
or
icebp
enter
mov
scas
lret
push
mov
pop
cmp
jbe
lock
mov
xchg
enter
or
adc
out
das
ret
mov
test
stc
push
mov
mov
or
push
mov
adc
ja
xchg
jnp
repz
shrb
mov
ret
jmp
mov
or
xchg
cwtl
mov
xchg
xchg
push
cmpsl
in
inc
xchg
inc
add
mov
xchg
test
sbb
ret
aaa
inc
push
in
and
adcl
xchg
xchg
pusha
arpl
fmul
sbb
add
outsl
push
iret
mov
or
sub
gs
shr
push
xor
add
scas
adcl
in
gs
adc
rcrl
in
mov
mov
hlt
lret
outsl
pop
adc
imul
adc
sbb
push
insb
or
mov
sub
fnstsw
lods
fisubrl
bound
jle
in
lds
cmp
cs
xchg
jnp
xorl
fbld
lock
jne
pop
inc
mov
mov
add
notb
pushf
in
and
ds
pop
jmp
push
push
aam
push
hlt
ja
loope
dec
jns
sub
pop
iret
adc
aad
pop
push
mov
pop
pop
mov
lods
enter
lea
sub
and
mov
popa
call
xor
iret
cmpsb
mov
mov
xor
imul
orb
or
cld
adc
test
cwtl
outsb
cmp
mov
push
sti
dec
inc
xor
call
lods
repz
stos
add
push
mov
xlat
xor
or
in
fcoms
test
push
inc
dec
shl
pop
inc
ljmp
adc
pop
xchg
test
cmpsb
pushf
stc
stos
popa
mov
lea
inc
cmp
ljmpw
or
mov
mov
sub
daa
fnstcw
movsl
int
cwtl
add
imull
mov
and
push
push
add
adc
lret
dec
jns
jp
stos
jno
mov
insl
stc
addb
jo
pop
and
ja
push
lock
aaa
and
lahf
cmp
out
push
es
mov
push
adc
push
cmp
repz
mov
xor
pop
mov
mov
ljmp
je
fnstsw
lret
push
dec
xchg
test
out
call
mov
mov
fwait
mov
repnz
pop
imul
fisubrs
cld
shrb
divb
out
pop
pop
lret
push
loop
xchg
cmc
sbb
mov
cli
rolb
pop
lods
jo
movsl
xchg
inc
push
dec
adc
and
rcrl
scas
pop
data16
jb
xor
sbb
mov
js
dec
xchg
cmp
adc
xor
push
scas
scas
xor
ret
ja
mov
push
negb
iret
dec
es
xor
or
mov
mov
jo
cwtl
fsubs
adcb
nop
inc
push
dec
jb
orb
push
pop
sahf
dec
insb
mov
stos
push
repz
or
inc
in
js
stos
push
jl
mov
roll
cwtl
icebp
cmp
dec
cmp
shl
sub
nop
and
xor
aad
test
inc
or
adc
iret
sbb
or
out
int
dec
test
xor
push
sbb
ljmp
inc
mov
cmpsl
pop
push
out
pushf
movsb
stos
out
cltd
lods
mov
mov
xor
and
in
lret
sahf
xor
and
inc
and
jb
call
mov
lret
outsb
adc
aas
out
push
outsl
jo
mov
add
or
jp
sbb
xor
add
pop
int3
and
xchg
inc
sbb
mov
sbb
adc
lret
mov
aam
dec
mov
ds
imul
in
pop
lcall
inc
lret
es
adc
xchg
pop
xchg
lods
jmp
ss
cld
cwtl
push
push
pop
shl
xchg
sahf
inc
or
add
add
mov
sbb
push
sbb
pop
outsb
jb
push
adc
jnp
push
mov
or
pop
pop
out
sarb
loop
jo
iret
call
jae
push
mov
jnp
hlt
aaa
fbstp
push
lret
loope
addl
fsubrl
lods
mov
cmp
xchg
and
aaa
fisubrl
mov
idivl
pop
test
imul
cmp
icebp
stc
sbb
pop
test
mov
mov
jo
sahf
xchg
sub
je
fs
stos
ds
cmp
ja
out
ficoms
mov
jno
push
repnz
sub
xorl
push
insl
xchg
xor
pop
jecxz
in
jns
add
sahf
jg
inc
daa
icebp
inc
and
or
mov
out
mul
dec
inc
jmp
outsl
pop
adc
lahf
xor
pop
and
popa
sbbb
dec
adc
mov
sub
dec
or
push
movsb
mov
and
imul
jae
sub
popf
cmp
sti
push
dec
iret
std
push
test
test
lret
mov
and
in
pop
jbe
ds
fidivl
sbb
or
fmul
outsb
fs
cltd
sbb
adc
test
in
mov
bound
adc
bound
push
int
shl
cmp
jo
loop
xchg
or
pop
cmpsl
sti
das
sub
push
dec
pusha
pop
mov
sub
adc
adc
inc
sar
or
add
dec
jns
mov
popa
pop
or
cli
push
ret
in
sbb
inc
cmp
loop
jno
int
mov
sub
add
and
fcmovnbe
jbe
mov
push
mov
dec
ret
dec
int3
ds
jmp
mov
and
leave
cwtl
sar
movsl
mov
sbb
sbb
lods
jg
outsb
add
adc
ds
icebp
mov
stc
jle
adc
adc
xchg
ret
mov
mov
lods
mov
push
mov
add
inc
xchg
inc
add
xor
es
fimuls
dec
xchg
mov
ss
mov
xor
pusha
sub
cmp
jp
jne
lods
jae
ret
stc
test
cwtl
mov
pushf
pusha
arpl
or
push
jmp
or
std
clc
fnsave
pop
ljmp
arpl
adc
testb
sahf
test
aaa
pop
sahf
bnd
loopne
bound
push
pop
mov
in
scas
insl
test
cmpsb
hlt
or
fwait
push
dec
outsl
inc
jnp
ret
adc
xor
add
je
cli
fidivrl
aad
ja
clc
popa
jno
mov
xchg
cmpb
add
cli
hlt
jl
dec
inc
xor
mov
mov
xor
xlat
sub
outsb
sbb
pushf
pop
add
test
mov
jb
and
and
lret
add
jp
adc
pop
lds
fs
lds
and
ja
pushf
cmp
int3
push
movsl
add
xchg
xchg
fdivp
cmp
sbb
mov
lcall
pop
pop
dec
xor
sub
push
cmc
das
mov
mov
inc
jl
add
mov
stos
ret
pop
subb
pop
cmp
test
push
sbb
sub
mov
jecxz
push
sbb
pop
xchg
pop
clc
in
sbbl
dec
pusha
out
cmp
inc
pop
sub
xchg
lods
jl
or
fdivs
push
xor
mov
add
dec
movsl
pusha
bound
adc
test
or
cli
sbb
call
xor
js
inc
dec
xor
inc
pop
or
push
iret
inc
out
out
push
arpl
inc
mov
sub
dec
mov
cmp
outsl
mov
mov
fcmovnu
imul
cmp
inc
mov
adc
pop
jae
xchg
gs
xorb
fs
jne
xchg
inc
xchg
in
sbb
jae
jbe
ljmp
lret
ja
and
add
out
mov
xor
js
mov
fdivs
or
lods
fwait
decb
fsubs
xlat
fwait
jb
jne
lcall
pop
stos
ljmp
hlt
pop
jle
xchg
sbb
ss
push
fists
fisubrs
adc
jg
push
rolb
mov
mov
cs
aad
aam
xchg
mov
push
mov
repnz
mov
mov
pop
sub
push
xor
pop
mov
mov
jb
lea
and
and
aas
push
xchg
sbb
or
mov
movb
stos
daa
das
xor
xchg
inc
test
pop
mov
and
idivl
inc
aas
lret
testb
sub
cmp
shl
mov
pcmpgtb
fcoml
mov
sub
push
test
divps
or
push
sahf
repnz
fldl
add
xor
into
push
nop
jle
bound
xor
cmp
mov
fdivl
fdivl
sahf
push
fstpl
mov
cmc
and
inc
shr
sub
cs
rcll
push
es
movsl
and
xor
mov
sub
imul
inc
leave
mov
mov
adc
lahf
out
sub
lods
push
andb
arpl
nop
mov
sub
inc
xor
or
add
loope
aad
adc
testb
icebp
pop
loop
outsl
pop
dec
ja
push
rol
lea
adc
mov
mov
mov
cmp
andb
test
in
pop
shl
mov
jmp
aam
js
mov
rcll
lods
loopne
or
adcb
movsw
stos
test
pop
mov
fstpl
xlat
pop
lret
jo
fsts
aaa
inc
ss
in
aam
xor
and
in
sub
dec
push
fcompl
mov
insl
pusha
mov
sbb
icebp
xor
add
leave
fwait
cli
scas
xacquire
sbb
gs
outsw
xchg
mov
xrelease
fcoml
fcmovne
cmp
arpl
fs
stc
jae
out
mov
div
outsl
jg
lahf
rorb
and
cmpsl
xlat
sbb
ret
or
jl
jbe
cltd
gs
andl
xor
jo
outsl
inc
in
cmp
cltd
cld
or
int3
xlat
push
cwtl
xchg
dec
xchg
sbb
pop
in
jecxz
add
icebp
les
loopne
mov
outsl
dec
add
ret
lret
pop
mov
jae
lods
push
push
ljmp
mov
rclb
sub
xor
push
jge
clc
xor
and
repz
pop
cmp
sbb
outsb
pop
xchg
mov
jge
add
loopne
dec
pop
add
inc
xor
ljmp
scas
adc
scas
repnz
push
or
sub
xlat
sub
nop
ljmp
sbb
jbe
test
popf
mov
inc
aad
stos
les
into
xchg
sub
cmp
inc
mov
or
aad
sti
cmp
push
sbb
mov
divb
sbb
xor
les
fisttpl
jmp
test
pop
pop
test
cmp
stos
aas
adc
add
push
jno
cmp
xor
pop
out
add
sbb
mov
push
shlb
mov
scas
xorl
inc
mov
mov
dec
push
fsubrl
int3
adc
lock
push
ret
inc
mov
mov
enter
add
out
icebp
add
in
loop
adc
jns
and
adc
bound
mov
repz
jle
roll
pop
ss
inc
mov
mov
pop
inc
or
stc
scas
imul
das
jb
ljmp
ja
push
cmpsl
cmp
call
sub
fsubrs
movsl
loope
out
cmp
mov
mov
scas
popa
inc
sbb
aas
mov
push
mov
inc
inc
mov
leave
push
inc
push
repnz
pop
arpl
int
dec
scas
pop
mov
pop
jb
movsb
xlat
icebp
lock
movsb
jmp
or
mov
jge
int
mov
push
push
fidivrs
aas
mov
roll
loop
test
push
cmp
int
xlat
dec
out
pop
jmp
cmpsl
lea
jnp
pop
aas
fdivrl
aam
lcall
and
push
xor
ss
adc
lods
cmpsb
jnp
mov
das
adc
shlb
orl
leave
sbb
filds
jne
fnstsw
stos
sub
xor
int3
icebp
ret
jmp
fldl
adc
inc
shrb
push
pop
cmp
scas
iret
push
les
out
xchg
or
iret
jno
mov
std
sahf
sub
mov
push
gs
mov
test
jo
xlat
mov
xor
orl
test
mov
mov
pop
scas
pushf
mov
int
xlat
add
sub
push
mov
lahf
cmpsb
jo
mov
fwait
xor
ss
sahf
jle
adc
cld
fwait
daa
push
sbb
add
xor
lret
ds
les
call
cwtl
lods
mov
adcb
mov
fisttpll
negb
movsl
xchg
cmp
mov
imul
jne
adc
rclb
movsb
cmp
lds
into
push
fwait
adc
daa
loope,pt
ljmp
es
cli
sbb
mov
and
in
xor
inc
lret
xchg
push
sbb
push
jmp
sahf
paddb
or
test
pop
sbb
pushl
sub
mov
xchg
mov
js
cmpsl
mov
or
int
xchg
mov
rcrl
addr16
out
ficoml
jns
dec
mov
push
loop
clc
lods
push
add
repz
movsl
cmpsl
sbb
mov
fiaddl
cmp
mov
pop
icebp
cmp
loopne
sbb
mov
cmp
loope
lods
fnsave
out
mov
into
mov
mov
aam
inc
cs
lahf
push
popa
iret
mov
daa
sub
pusha
xchg
sbb
push
push
and
lods
mov
adc
push
push
push
dec
jmp
loope
jecxz
xchg
push
out
mov
sub
lods
daa
lds
bound
jl
pushf
paddsw
insl
mov
push
mov
push
pop
mov
call
jnp
mov
pop
adc
fidivrl
jmp
pop
lret
aaa
xchg
call
or
jg
and
dec
stos
jae
je
mov
jno
fs
inc
mov
push
addr16
pop
pusha
mov
stc
xor
and
popf
outsl
cmp
jo
stc
lods
add
fimull
xchg
mov
cmp
push
mov
cld
shll
pop
out
popa
xchg
xchg
movsb
lahf
and
dec
inc
cmp
loopne
mov
lock
jns
sbb
or
hlt
adc
int
sub
push
fstp
jl
and
clc
arpl
inc
sbb
push
and
out
mov
xor
loop
add
xor
in
mov
sar
jne
rcr
rclb
jge
scas
out
pop
aas
mov
ret
sub
push
stos
filds
sarl
fstl
test
lcall
mov
hlt
push
xchg
insl
and
and
test
lods
cmp
ljmp
enter
iret
add
jns
xchg
sbb
fbld
lret
jb
xor
mov
mov
out
fwait
inc
mov
into
gs
and
lods
imul
into
fidivs
or
push
xor
outsl
xor
push
sbb
aas
addb
xchg
mov
jp
outsl
cmp
cld
jns
out
aam
outsl
push
daa
test
faddl
pop
bound
jnp
push
or
pushf
cs
popf
xorb
fwait
jle
pop
repnz
arpl
pop
popf
movsb
mov
test
movsl
ficomps
push
roll
pop
fiaddl
push
ret
movsl
into
push
ficoms
repnz
data16
lock
jmp
loopne
sbb
push
mov
cmpsl
sub
mov
jmp
sti
std
addb
scas
cwtl
fsubrs
js
inc
push
in
cld
in
orb
lahf
pushf
loop
in
sbbb
fs
push
sub
ds
loope
sarl
pop
mov
lods
dec
inc
cmp
adc
mov
inc
das
mov
ja
push
fs
sub
lahf
sbb
fs
and
mov
xor
push
ja
adc
ljmp
rorb
mov
dec
add
cltd
lahf
add
leave
roll
mov
in
mov
jne
loopne
dec
testb
push
fsub
lods
inc
sub
shld
or
stc
mov
stos
jo
push
in
lret
jge
lods
out
in
lea
push
add
inc
in
stos
xor
shlb
pop
inc
add
push
in
or
filds
xchg
sub
in
std
gs
xchg
call
hlt
sbb
lcall
outsl
and
stc
cli
add
lahf
mov
mov
out
mov
les
rorb
fisubrl
add
movsl
pop
cmpl
mov
pop
inc
bound
push
nop
popl
cmpsb
in
pop
les
dec
mov
pop
outsb
pushf
int3
lret
inc
xchg
sub
pop
out
dec
mov
inc
mov
in
pop
cmp
lea
in
gs
lcall
push
jo
dec
cmovg
lahf
mov
cli
fistps
es
push
dec
imul
jp
or
mov
addb
pop
mov
or
out
dec
mov
lods
pop
or
nop
lods
jno
cld
test
cli
leave
lds
mov
jl
or
jae
rcll
add
ljmp
sbb
jge
xlat
xchg
aad
mov
sbb
jbe
js
xor
hlt
and
es
int3
les
outsb
mov
dec
xor
mov
mov
mov
test
ljmp
fistpll
fdivrs
mov
sub
ret
aaa
mov
dec
cltd
mov
pop
fists
frndint
scas
sbb
push
and
lret
scas
push
rclb
loop
scas
movsl
add
int3
inc
add
shl
pushl
adc
dec
dec
in
push
enter
vmovhps
mov
mov
pop
fs
int
repnz
mov
test
push
mov
inc
scas
fbld
mov
or
test
mov
mov
add
loop
rclb
ss
hlt
cmp
push
cmp
cmp
call
mov
daa
orl
pop
cmpsl
xlat
jp
rcrb
rcll
mov
lcall
sub
jbe
icebp
mov
movsl
rcrl
std
cmpsb
xor
jb
stc
ljmp
push
arpl
sub
popa
add
mov
xor
cli
lret
mov
test
mov
daa
in
mov
jnp
xchg
shlb
push
insl
enter
outsb
shl
push
cmc
into
test
ds
jo
arpl
push
aas
jo
sub
inc
jecxz
mov
adc
stos
add
fists
jo
and
xor
sub
cs
or
das
jnp
int3
mov
add
xchg
mov
popl
aam
xor
xchg
push
jg
in
jg
test
shlb
mov
sahf
mov
call
dec
addr16
lock
xchg
mov
divb
insl
mov
sbb
out
cmc
addl
adc
or
push
lock
fcoms
sub
loope
fcomps
dec
add
or
mov
and
aad
jbe
jmp
add
pop
ss
push
jbe
add
xor
dec
lock
lcall
jns
pushf
test
test
xor
xlat
rorb
adc
iret
dec
pop
cltd
dec
cwtl
xchg
inc
xor
xchg
cmp
xor
ljmp
cmp
inc
mov
sub
imul
subl
jp
bound
mov
xchg
lret
scas
pushf
mov
roll
dec
or
and
leave
push
stos
cmp
and
xor
daa
out
inc
into
dec
pop
xchg
push
or
xor
popa
dec
adc
shlb
push
lods
insl
xchg
mov
inc
adc
mov
cltd
push
jno
mov
mov
lds
cltd
fisubl
andb
test
push
and
pushf
out
mov
sub
loop
cmpsb
popa
int3
pop
and
aam
testl
jne
dec
mul
push
or
pop
lret
fcoms
add
sub
fdivrl
cltd
jle
mov
xor
xor
pushf
outsl
call
clc
cmp
je
leave
fists
and
jae
dec
dec
push
mov
adc
clc
je
and
add
inc
pop
mov
push
cs
sub
xchg
jmp
dec
or
test
into
mov
add
jbe
jns
popa
es
jns
push
and
or
int3
clc
lods
mov
pop
addb
mov
mov
mov
xchg
cmpsb
lock
or
sahf
xor
hlt
xchg
cwtl
or
pop
fmull
mov
clc
or
push
aas
jecxz
cmp
cmpsb
and
sub
sub
cmp
hlt
mov
mov
cmc
outsl
pop
and
xchg
dec
in
xchg
es
dec
ret
mov
hlt
dec
mov
loopne
or
fstpt
test
lock
push
fwait
mov
add
mov
shr
data16
sbb
dec
dec
clc
test
ffree
and
or
cmpl
shlb
push
or
daa
sar
fwait
setl
leave
mov
sub
and
mov
push
lret
adc
and
mov
je
sbb
dec
jns
push
rclb
push
xor
arpl
fsubr
or
xchg
insl
sarl
sub
adc
jle
push
xor
pop
xchg
mov
xchg
cmc
mov
mov
jp
jle
sbb
add
mov
insb
push
mov
xchg
shrl
adc
sub
and
xor
movsl
xor
mov
xor
add
stc
mov
mov
les
repnz
stc
icebp
rcr
mov
push
js
ds
jmp
jae
sub
cli
sar
loopne
cld
mov
fimuls
lea
ficoms
xchg
cmp
sbb
push
push
ret
cmp
jle
jno
fisttpl
repnz
mov
jmp
push
xchg
jg
cmp
push
insl
or
mov
dec
dec
dec
jo
fdivl
and
sbb
sbb
mov
in
dec
add
jno
add
inc
xchg
cs
pop
jg
andl
scas
jnp
movsb
sbb
sub
mov
and
fstps
jp
mov
cmpsl
out
call
pop
je
cmp
int
movsl
ss
ficoms
insl
lods
cld
jle
call
cmp
adc
icebp
push
xor
jge
lock
add
cmpl
dec
xor
xchg
popf
andl
push
adc
cmp
sub
xor
sbb
insl
jo
mov
pop
xlat
add
rclb
jl
addr16
fdivs
pop
or
push
mov
sbb
out
add
xor
pop
into
dec
jbe
sub
mov
jecxz
popa
imul
movsl
xchg
and
ljmp
ds
bound
scas
and
cwtl
fnstenv
sbb
scas
adc
inc
or
dec
xchg
add
repnz
sahf
inc
or
push
and
xchg
jle
cmpsl
dec
jb
das
int3
pop
in
inc
cmpsl
cwtl
mov
out
add
ror
push
mulb
lcall
sbb
stos
es
ss
gs
stos
bound
jbe
jge
hlt
mov
pop
adc
mov
dec
inc
daa
add
or
sarl
frstor
jnp
adc
cs
adc
std
mov
lds
add
test
or
dec
je
pop
divl
icebp
pop
jns
divb
fs
in
lahf
add
or
cmpsb
add
inc
inc
mov
mov
add
in
and
aaa
sbb
jns
mov
xchg
and
ss
jge
xchg
out
shr
popa
loope
or
mov
mov
mov
popa
mov
ds
ret
pop
pushf
fdivrs
mov
adc
and
push
fsubl
push
shr
jno
jns
insb
movsl
out
or
sbbl
cld
dec
fcomps
and
mov
adc
mov
subl
push
stos
mov
inc
repz
mov
push
sbb
sti
mov
and
and
fiaddl
lds
dec
sbb
cmp
jge
add
cmp
xchg
cli
rcll
cvtps2pd
mov
fwait
cli
leave
mov
and
cmp
cmp
stos
inc
xor
aam
inc
push
fcompl
or
xor
and
add
shll
cltd
mov
insb
ficompl
out
pusha
lret
sub
jmp
fisttps
leave
jmp
mov
lods
mov
arpl
lods
ss
cmp
xor
mov
pop
pop
outsb
pop
push
in
je
es
xor
jne
loopne
pop
sbbb
adc
arpl
lds
rcr
dec
and
add
dec
test
nop
notb
adc
ds
jns
gs
test
js
and
push
jp
mov
xor
jmp
mov
mov
je
aaa
mov
xchg
pop
scas
or
out
neg
add
hlt
adc
pop
sbb
fninit
xchg
sbb
testl
mov
gs
xchg
add
out
hlt
and
pop
sub
push
xchg
ja
icebp
dec
int3
mov
rolb
cmc
in
adc
dec
pop
pop
adc
mov
int3
daa
pushf
int
js
adc
push
mov
pop
test
std
xor
mov
mov
or
pushf
or
bound
pushf
ficoml
rcrl
js
cmpsl
xlat
xchg
jno
sub
aam
or
clc
loopne
rcll
xchg
dec
test
or
stos
lods
out
pop
ja
ja
shrl
ds
mov
jge
cmpsb
rclb
adc
mov
and
in
adc
or
icebp
imul
adc
add
sahf
popf
xchg
fbld
xorb
movsl
xor
test
dec
inc
xor
push
movsl
cwtl
push
mov
adc
orb
and
pushf
lods
jecxz
inc
data16
loopne
insl
add
or
cli
addr16
pop
out
sbb
and
bound
xor
or
push
fisttpl
jb
add
pop
or
dec
sbb
mov
cmp
jecxz
and
jns
rorb
mov
lds
rcrl
fsubrs
aad
mov
sub
in
pusha
sbb
daa
js
add
push
lahf
gs
sub
sbb
cmc
loopne
fwait
insl
lock
and
cwtl
pop
movsl
icebp
pop
sub
jnp
jle
ficomps
inc
xor
lock
push
and
adc
notl
mov
cmc
in
cmp
push
lea
insl
add
push
jg
xor
xchg
int
xor
test
pop
sub
dec
cmp
dec
cmp
mov
pushf
push
jg
inc
imul
push
pop
mov
pop
int
mov
lret
lock
sub
test
mov
push
xchg
sbb
fisttpl
mov
dec
and
insb
cld
mov
push
push
aaa
push
sub
repnz
fwait
dec
inc
sti
cwtl
rol
lock
sbb
in
push
sub
ljmp
cld
and
push
pusha
fsubp
cmp
in
dec
shlb
cs
test
or
orb
push
pop
out
ret
adc
mov
inc
mov
mov
sub
push
push
jbe
adc
movsl
inc
dec
imul
inc
inc
ficoml
orb
shlb
xchg
fbstp
pop
sti
cmp
xor
jne
push
pop
dec
call
arpl
scas
ret
into
mov
movb
inc
mov
nop
or
inc
icebp
or
push
int
in
jg
bound
xchg
mov
mov
icebp
fsubr
hlt
inc
add
lock
dec
pop
leave
pop
push
mov
xchg
xchg
cmpsb
xchg
xlat
push
lret
ljmp
mov
fdivrs
push
int
daa
dec
lods
adc
push
ret
jle
insb
cmp
ret
sbb
mov
pushf
mov
call
das
notl
xor
call
mov
push
mov
adc
pop
sub
jne
fcmovnb
jo
and
lods
fs
out
mov
ficompl
sbb
jg
and
adc
add
jge
cmp
mov
xchg
dec
sbb
mov
xchg
test
into
mov
icebp
mov
out
jmp
int
push
lahf
stos
jno
mov
mov
mov
cmc
sahf
jbe
or
je
cmpsl
sub
jle
or
subl
fistl
push
out
fwait
setb
mull
sti
and
in
push
ss
fdivl
addb
xor
or
cmp
or
xchg
pop
cs
loope
jns
cli
or
in
cmp
mov
jecxz
test
stos
pop
mov
dec
cmp
add
in
hlt
push
bound
push
cmp
insl
or
bound
cmpsl
in
mov
mov
mov
subl
cmpsl
sbb
int
add
mov
cmp
inc
addr16
inc
or
test
out
dec
push
mov
mov
cmp
sbb
cmp
incl
or
xchg
rclb
cmpsb
cltd
mov
xor
sub
fisubs
sub
lahf
and
in
subl
add
sub
stos
dec
pop
cmp
cld
cmp
mov
mov
in
inc
je
mov
jbe
pop
mov
lods
xor
out
orpd
sbb
in
mov
or
push
cltd
cmp
aas
aad
adc
mov
jns
inc
xchg
rclb
call
mov
fwait
les
cwtl
xchg
jl
and
and
mov
std
add
xor
subb
add
mov
repnz
outsb
nop
pop
sbb
lahf
out
push
iret
aam
in
loopne
push
xchg
cmp
mov
push
imul
mov
call
lret
xchg
mov
xor
dec
pop
mov
jl
inc
jae
pushf
cmp
xchg
mov
jb
mov
jnp
inc
cmp
cmp
popf
fs
in
add
mov
mov
nop
lret
pop
cltd
sbb
push
dec
or
add
ret
mov
test
pusha
dec
hlt
jg
adc
xchg
iret
shlb
aaa
xchg
pop
jae
cmp
in
mov
inc
fcmove
xor
xor
jno
cmp
xchg
into
jecxz
dec
addr16
pop
cmp
cmp
pop
je
cltd
es
mov
into
and
xchg
xchg
stc
cltd
cli
mov
cmpsl
lret
test
jl
push
arpl
push
lret
fimull
xchg
fnstcw
je
dec
imull
test
leave
hlt
cmc
mov
adc
push
mov
mov
push
mov
push
sub
popf
cltd
sbb
in
or
jp
mov
in
and
xchg
push
scas
in
pop
adc
cmp
cmpsb
insl
add
push
mov
adc
lea
jbe
add
pop
mov
mov
dec
sti
inc
sbbl
or
ret
pop
test
push
adc
mov
ljmp
push
jne
or
adcl
mov
test
test
jb
mov
imulb
pop
je
mov
icebp
mov
paddw
lret
mov
jo
sar
push
adc
out
lret
pop
jl
ret
test
dec
pop
mov
movsb
xchg
out
push
cs
cmp
jle
dec
adc
test
insb
lcall
mov
lods
pushf
int3
jmp
lcall
and
xchg
or
aad
pop
dec
push
inc
push
mov
or
int
mov
clc
fxch
sub
adc
fldenv
or
test
jae
je
mov
adc
cmpsb
pop
mov
int3
scas
out
push
adc
sahf
je
pop
jb
xlat
pop
inc
ret
mov
clc
add
sbb
and
clc
sbb
cmp
repnz
cmp
ja
sbb
lret
push
js
dec
ds
mov
scas
mov
aam
nop
sti
in
scas
jp
mov
xor
mov
mov
leave
mov
stc
sub
pop
test
gs
push
adc
shrl
lds
inc
sub
lret
mov
aas
adc
and
sub
add
adcl
sahf
sub
xchg
jae
push
inc
mov
jae
in
aad
ljmp
imul
push
push
xchg
xchg
lret
xchg
mov
ffreep
mov
scas
scas
fistl
cwtl
mov
outsb
sub
jge
test
pop
mov
mov
add
mov
xor
aas
rorl
sti
xchg
push
jl
mov
fisubrs
enter
sarb
push
dec
push
xchg
enter
loop
testl
mov
sarl
xor
xchg
aad
mov
arpl
outsb
cs
lods
xor
pusha
jp
jmp
jae
push
imul
mull
jecxz
adc
in
lock
or
jae
enter
jl
sub
ret
xor
cmp
outsb
dec
jmp
sbb
cmp
lods
lods
sbb
insl
push
lds
mov
lret
cld
cwtl
fistps
jg
test
xor
lock
lock
adc
pop
cmc
xchg
stos
pop
or
repz
push
add
popa
cld
aas
jo
lret
rcll
pop
js
cld
pushf
cmp
out
fbstp
cmp
lret
js
mov
xchg
push
push
pop
xor
dec
loop
add
xor
fwait
xor
je
push
lods
and
and
sub
sub
sub
jp
or
out
mov
jo
fwait
inc
pop
mov
add
shlb
dec
sbbl
pop
mov
test
push
mov
int
ljmp
adc
jle
push
jl
orl
insl
in
sbbb
mov
lock
xchg
lods
jecxz
leave
int
pop
lret
stos
and
mov
lea
mov
es
push
es
mov
test
scas
mov
xchg
dec
jp
sbb
sbb
and
aas
and
rolb
pop
div
fwait
adcb
xlat
ds
psrld
cmp
sbb
ret
sbb
xchg
push
scas
lret
xor
sub
mov
jo
mov
push
addr16
fwait
xchg
pop
xor
in
out
icebp
aas
mov
push
dec
mov
xlat
pop
push
and
sti
push
adcl
dec
test
in
mov
js
push
jmp
push
xchg
inc
ret
fstpt
mov
lds
adcb
nop
pop
sbb
lahf
les
dec
add
adc
sub
pop
scas
insl
lods
push
ficomps
dec
scas
imul
and
xlat
or
xor
mov
push
lret
xchg
neg
cltd
and
push
lods
movsl
in
cmp
jo
and
lods
lods
sbb
mov
daa
es
mov
js
test
repz
out
out
int3
icebp
orl
pop
leave
call
sti
push
add
cmp
repnz
xlat
jae
xor
push
dec
test
inc
mov
movsl
mov
jns
mov
push
sub
jmp
test
or
mov
jno
mov
nop
fwait
pushf
pop
xor
dec
stc
ret
fcmovnb
xor
sub
or
cmp
testl
lcall
scas
fsubl
dec
push
lea
jge
sub
subl
int
mov
in
xor
inc
sub
je
push
cmpl
test
int
lahf
in
mov
lock
ljmp
dec
sub
je
push
or
jo
jl
gs
test
or
xor
inc
cmp
nop
sbbl
sub
test
arpl
mov
test
pop
sbb
add
loop
mov
sahf
out
pop
aaa
int3
lret
test
test
ljmp
push
je
fwait
pop
sbb
jmp
jbe
arpl
or
or
mov
mov
test
jp
popf
xor
xchg
stc
sub
loop
jecxz
dec
inc
mov
int
mov
outsb
ror
mov
mov
jae
sub
and
jle
push
xchg
inc
or
mov
adc
sbb
jns
xchg
les
test
push
mov
leave
cmp
xlat
cmp
jns
xorl
cmp
ljmp
or
or
mov
mov
or
or
pop
mov
jns
jae
lret
push
jg
mov
xor
jle
push
sbb
call
mov
lods
push
aad
xorl
push
call
insl
movsb
add
mov
stos
je
lahf
xchg
enter
sti
sbb
dec
push
sub
pop
dec
dec
or
in
mov
pop
mov
sub
sub
sbb
mov
adc
bound
mov
pop
test
mov
icebp
lcall
and
pop
fdivrs
fs
mov
call
push
enter
test
fwait
xor
loope
je
pop
sub
xor
int
clc
fwait
mov
mov
icebp
lock
in
pop
in
ss
jnp
cwtl
daa
cli
inc
mov
ds
aaa
and
pusha
xor
cmp
add
incl
dec
sbb
lahf
leave
mov
pop
sub
gs
xchg
out
call
add
mov
xor
push
jge
or
and
cwtl
jle
inc
in
comiss
icebp
imul
imul
add
pusha
and
dec
pop
dec
js
xchg
adc
xchg
gs
push
ss
sbb
cmc
in
idivb
insb
adc
imul
call
mov
mov
jmp
inc
neg
clc
add
popw
jno,pn
out
xchg
frstor
movsl
mov
mov
lock
jne
push
push
insl
shll
cmp
sub
ljmp
mov
xchg
gs
imul
insl
into
xchg
not
in
jno
shll
loopne
movsb
inc
fcompl
jmp
cmp
imul
cmpsl
jmp
stos
xor
scas
into
ret
or
in
jle
or
push
and
stos
rcr
int3
pop
test
push
in
subb
popl
inc
jno
fldl
mov
out
jb
mov
aaa
pushf
lds
cmp
imul
jno
insb
xor
jmp
jl
fcmovu
inc
les
ret
sub
and
jge
fisttpll
arpl
sub
or
insl
xchg
sub
sbb
rorb
into
lds
xchg
sbb
scas
nop
aas
push
mov
add
cld
cmp
loop
and
cmpsb
pop
adc
in
cmp
push
mov
add
pushf
dec
xchg
call
leave
nop
test
lret
adcl
bound
mov
mov
push
mov
pop
xor
jecxz
inc
cmp
movsb
mov
sti
jne
mov
xchg
and
sahf
xchg
cwtl
call
sbb
mov
xchg
outsl
test
adc
aas
dec
xchg
sbb
jp
and
xor
fistps
adc
sub
add
xchg
ds
lcall
jae
xchg
ja
mov
cmp
jb
pop
pop
jbe
cwtl
xorb
pop
mov
xor
out
cwtl
es
scas
and
insl
into
ficoms
leave
addb
jne
mov
mov
sbb
cmpsb
repnz
or
or
lds
jnp
test
fstl
add
mov
popa
imul
pop
ja
jb
cld
loop
jne
ret
push
cmp
xchg
dec
jle
sarl
cwtl
sub
pop
lret
jo
je
push
movsl
stc
mov
push
inc
mov
jge
xchg
push
aas
fidivrl
or
adc
xchg
and
in
xor
mov
cmpsb
shlb
sar
cmp
adcl
ljmp
push
mov
jmp
movl
insl
gs
jo
add
test
and
push
mov
out
dec
jnp
sbbl
loopne
sti
pop
and
lods
xlat
push
push
dec
xchg
int
ds
insl
push
adc
cmp
shlb
repz
andb
sti
call
mov
mov
push
dec
pusha
jg
lcall
fwait
ljmp
jns
jne
pop
inc
test
sbb
push
in
jo
mov
sbb
push
push
lds
pop
mov
nop
jb
sub
dec
cmpsl
adc
lcall
stc
out
xchg
movsl
push
add
xchg
test
nop
call
clc
stos
xchg
cmc
push
pushl
xor
dec
xchg
mov
jae
jle
fisubrl
pushf
aad
dec
rcll
dec
cmp
sbb
leave
jns
enter
pop
inc
mov
sub
add
xchg
mov
pop
popa
jo
xor
ror
cmpsl
jge
data16
into
mov
movsl
mov
jle
push
mov
out
ja
fs
cmp
or
pop
cmc
repnz
imul
xor
xchg
and
xchg
jns
sub
test
mov
in
push
mov
stos
mov
xlat
mov
decb
loope
out
push
and
adc
mov
mov
flds
sbb
fucomip
mov
rorl
jmp
lock
jmp
movsl
dec
adc
andl
xor
sub
mov
inc
stos
mov
adc
das
fwait
pusha
mov
sahf
xor
or
push
lock
outsl
std
mov
jmp
jmp
sub
inc
aas
out
aas
insl
loop
jp
inc
ss
jae
mov
push
adc
dec
add
inc
int
addl
aas
cld
dec
aaa
out
push
cmp
jg
imul
xor
xor
int
add
negl
push
inc
push
mov
hlt
mov
ficoms
and
cmpxchg
popa
bound
or
or
mov
inc
jmp
jne
jle
xor
inc
cmp
pop
dec
add
bound
push
and
cmpsl
mov
aad
sti
shrl
or
mov
mov
jle
cpuid
out
dec
lret
inc
pushf
dec
pop
stc
pop
hlt
adc
pop
or
shlb
xor
scas
xchg
sub
in
dec
scas
lods
or
jno
cmpb
jno
bound
sbb
dec
xchg
bound
arpl
cmc
fwait
adc
mov
fdivrs
aas
shlb
push
imul
shrl
in
test
fisubl
mov
xchg
jecxz
test
push
dec
xor
in
push
lods
ja
les
stc
data16
inc
mov
icebp
mov
dec
cmp
adc
push
cmp
pop
push
pop
inc
outsl
pop
repz
pop
mov
outsl
out
sbbb
add
fldcw
insl
mov
dec
xor
fildl
insb
cmpsb
in
pop
mov
push
adc
jne
in
gs
dec
xchg
xor
daa
cmp
outsl
mov
add
repnz
clc
es
repz
lret
jb
movsb
or
mov
das
outsl
out
scas
mov
mov
cmpsl
and
inc
xchg
sti
loop
sub
mov
lds
inc
fistl
sub
sub
inc
bound
addr16
or
int3
push
in
adc
fld
or
adc
mov
mov
push
or
mov
test
mov
dec
inc
repz
addr16
cmp
mov
hlt
pminsw
lods
testb
stc
ss
adc
pop
pop
fcmovnu
pusha
push
jae
xorb
hlt
jns
lret
push
push
cld
mov
subl
mov
push
addb
jae
lds
cmp
jae
xchg
jno
test
test
add
mov
pop
sub
sbb
jnp
ret
push
jae
repnz
push
scas
icebp
aas
pop
mov
xor
sarb
hlt
test
add
loop
sbb
rcl
incl
mov
push
int
jp
dec
push
cmpsb
dec
lret
pop
pop
sub
sbb
dec
jl
xor
subb
shll
pop
mov
cmp
add
nop
dec
pop
mov
int
jl
js
aas
inc
cltd
pop
pop
jmp
aad
xchg
popf
add
sub
xchg
lock
push
cwtl
in
jge
cli
jg
ljmp
gs
inc
cwtl
inc
inc
out
pop
sarb
and
jmp
adc
jg
aas
in
inc
and
aam
cmpsb
rcrl
popa
lea
out
shrl
nop
ret
lahf
adc
mulb
mov
shrb
mov
adc
gs
pop
inc
mov
xor
int3
rorl
lahf
in
or
and
movsb
sub
nop
mov
aas
sti
lods
jmp
test
push
and
arpl
mov
mov
jg
xor
insb
sbb
push
addr16
pop
hlt
pop
aas
cwtl
xchg
fisubrl
dec
adc
lods
or
xor
jns
repz
mov
ret
shll
outsl
in
mov
adc
sbb
xorl
sub
push
fdiv
adc
or
jno
cmp
pop
ret
dec
int3
dec
mov
outsb
fs
in
jns
fisttps
repz
ds
mov
xor
add
popa
int
xor
pop
into
jl
add
xorb
sbb
bswap
sub
fildll
push
mov
sbb
dec
repz
mov
daa
jae
mov
loope
cmp
in
and
cmpsl
or
arpl
push
out
lods
pop
mov
and
cmp
out
mov
cltd
dec
leave
pop
jle
jg
movsl
jno
sbb
inc
fwait
push
gs
dec
sub
jle
push
lods
and
xor
shlb
jae
test
daa
in
jns
mov
xchg
cmp
addr16
push
in
jg
adc
lret
jmp
jb
mov
cld
es
loopew
push
push
mov
adc
cmp
or
push
fildl
scas
xchg
jmp
xchg
cmpb
jns
leave
ds
adc
xor
adc
testb
jbe
mov
in
jle
mov
roll
pop
insl
jae
mov
inc
lock
lret
int3
xor
dec
mov
mov
lods
int
xchg
sub
push
sbb
add
fimull
sbb
sahf
cltd
rcll
iret
sub
push
xchg
cmp
bound
dec
sti
xchg
cmpsl
lahf
push
subl
and
add
adc
cmc
jo
xchg
cmp
jbe
or
loopne
lods
cs
inc
or
cmp
xor
mov
out
jns
cmp
in
sub
push
mov
mov
hlt
insb
int3
scas
imul
sarl
popa
sbb
sbb
xor
mov
xchg
and
mov
adc
sti
lds
push
xlat
pop
std
insl
jl
cld
std
inc
fisubrs
cmp
jno
push
sub
add
lea
fistpll
pop
pop
xor
cmpsl
hlt
xchg
dec
mov
push
and
gs
mov
xor
cltd
rcll
mov
call
xor
dec
sub
testl
popa
xor
xchg
sbb
mov
mov
adcl
jg
add
jno
sub
inc
xchg
lds
lock
flds
cmc
clc
fwait
push
push
int
je
mov
mov
addr16
shlb
dec
adc
sub
movsb
jne
jle
lea
mov
xor
pushf
pusha
sub
sub
sub
add
dec
and
push
fwait
jle
sahf
push
pop
es
push
data16
sbb
xor
mov
dec
scas
and
fs
inc
insb
add
push
orb
dec
xor
jmp
and
and
jmp
jae
test
mov
xchg
pop
dec
xchg
lock
and
jbe
jnp
jmp
mov
nop
xacquire
outsl
xor
pusha
repnz
nop
jle
rclb
adc
xchg
jne
call
cmp
repz
popf
test
sbb
in
ret
int3
inc
out
cmc
push
popf
rcll
lds
dec
push
ficompl
subl
incb
xchg
in
or
xor
pop
out
fists
pop
mov
andb
stos
les
mov
sub
daa
xor
or
and
gs
in
pop
ret
adc
jo
out
repz
xchg
xchg
push
call
pop
pop
in
out
ret
fidivrl
aad
movsl
pop
dec
aaa
cwtl
pop
mov
dec
or
jge
bound
push
pushf
outsl
int3
cmpsl
sbb
mov
jl
ds
testl
or
les
push
fsubl
mov
ret
xlat
mov
push
int3
into
and
jno
adcb
sbb
inc
pusha
inc
pop
shlb
push
scas
out
sub
xlat
fiaddl
cwtl
mov
add
mov
and
bswap
lock
jle
or
dec
jmp
inc
xor
sti
scas
dec
hlt
adc
lret
fs
mov
loope
mov
popf
js
jg
ja
jmp
mov
mov
and
hlt
and
fldl
ss
add
aam
stos
add
pop
xchg
pop
lcall
push
shll
lret
pop
sbb
test
cwtl
or
adc
xchg
sbb
rcll
test
push
xlat
pop
push
lods
adc
push
sbb
and
xchg
inc
mov
out
cli
in
push
xor
mov
sub
sub
xchg
fs
mov
ret
push
jo
xchg
mov
icebp
daa
ljmp
dec
fisubrl
loopw
jnp
fidivl
js
test
cwtl
aas
xchg
mov
jns
xchg
push
cli
pop
pop
hlt
inc
adc
outsb
mov
jbe
stos
add
out
add
mov
sbb
stos
or
outsl
xor
pop
lcall
xor
lret
in
and
and
test
add
lods
pop
fwait
xor
lea
cltd
jg
or
into
mov
ljmp
je
mov
loopne
push
outsl
sbb
inc
rcrl
or
rcr
and
cld
pop
add
push
out
inc
jno
sahf
sbb
loope
mov
jmp
test
sbbb
inc
and
jb
jecxz
call
or
pop
imul
in
repnz
movsb
nop
mov
dec
jle
push
mov
fildl
lds
and
enter
gs
mov
adc
repnz
cmpsb
push
aas
sarb
xchg
fists
aad
rcrb
std
inc
jmp
inc
and
jle
mov
inc
jl
data16
dec
sub
imul
sub
push
shll
xor
mov
jp,pt
add
mov
cmp
iret
mov
imul
adc
addb
and
inc
or
daa
loopne
lock
dec
in
rcrl
testb
das
jns
inc
sbb
and
aam
fs
jge
daa
sbbl
cmp
lods
and
imul
mov
repz
add
or
hlt
sahf
mov
jecxz
jno
cmp
jmp
cmp
std
pop
dec
sbb
into
lret
jp
jne
or
push
jne
and
insl
inc
sub
cwtl
sar
ja
add
sti
ret
outsl
rolb
sub
int
sbb
mov
and
pusha
cmc
subl
or
ds
js
jae
cmp
inc
or
daa
jg
sbb
lds
xchg
or
addr16
adc
cmp
int3
lret
mov
adc
dec
sub
push
xchg
mov
in
idiv
mov
aaa
jb
cmp
dec
cmpb
dec
xor
sbb
dec
xor
xchg
cltd
xchg
xchg
add
mov
lahf
xchg
dec
push
enter
jne
pop
shll
lock
pop
xorb
mov
pop
les
insb
cmpsb
pop
jno
xlat
cmpsb
inc
sub
xchg
sti
shlb
int
pop
add
cmp
out
cmpb
jo
sbb
inc
dec
enter
imulb
lret
pop
aaa
and
and
or
stos
mov
jne
push
ret
inc
push
or
sti
xlat
mov
js
push
pause
js
add
test
iret
adc
mov
inc
mov
lret
in
add
clc
addl
fildll
int3
repz
push
add
pop
cwtl
pop
nop
in
and
imul
orl
push
xor
xchg
jne
inc
xchg
jecxz
xlat
mov
mov
in
or
lds
xchg
fidivs
add
sub
mov
mov
xchg
int3
fnsave
xchg
jg
push
push
stc
jae
int3
or
imul
pusha
adc
rorl
and
and
icebp
xor
inc
push
mov
sub
adc
fnstcw
jno
sbb
cmp
or
imul
or
popa
rorl
sahf
insb
clc
fbstp
dec
dec
aas
mov
cmp
fildll
pop
call
adc
dec
xor
aad
or
push
addr16
push
and
and
ret
pusha
lret
pop
gs
xchg
out
lea
repz
push
inc
or
aaa
hlt
mov
add
sbb
and
lock
cli
push
jnp
jne
aad
rcr
mov
push
insb
lea
test
rcll
loop
push
enter
mulb
dec
mov
adc
adcl
pop
cmp
in
les
mov
add
mov
ljmp
jb
inc
fldl2t
mov
inc
dec
mov
dec
mov
cltd
dec
pop
ficomps
cmp
xor
test
cmp
out
jne
mov
sarl
ja
sub
sub
inc
jge
inc
into
xchg
rorl
insl
xlat
and
push
mov
push
xchg
add
in
test
nop
jb
xchg
out
mov
push
aas
inc
cmc
or
lret
pop
in
inc
lret
add
sti
ss
mov
ret
push
popa
push
movsl
into
sahf
popf
out
sahf
popa
test
insb
cmp
fimull
out
mov
pop
out
or
int
mov
shlb
aas
mov
push
test
add
popa
pushf
pop
mov
pop
orl
shl
inc
adc
sbb
dec
xor
imul
push
mov
js
xor
bound
test
bound
add
pop
mov
fstpl
filds
cli
addr16
inc
lock
xor
roll
cli
scas
sti
fimull
push
stc
in
call
push
fldt
pop
cmp
stc
jne
test
cmpsl
insl
mov
cmpsl
insb
adc
fadd
cs
aad
pusha
mov
and
movsl
sbb
or
enter
cmpb
lea
cmp
mov
mov
cmp
mov
push
xchg
mov
aaa
xlat
mov
adcl
test
rcr
xor
xchg
arpl
mov
lods
push
add
mov
pop
inc
lcall
in
push
inc
jp
hlt
cmp
mov
jb
sbb
mov
sbb
jns
fldenv
inc
xchg
mov
pushf
cwtl
or
add
adc
adc
outsl
arpl
dec
loope
lcall
xor
and
inc
adc
cmc
mov
int3
fisubs
xchg
ja
arpl
xor
lea
loopne
xchg
popa
mov
xlat
dec
or
mov
jg
xor
sub
or
xor
test
push
or
sbb
jl
xchg
shlb
add
movsb
jno
loopne
and
mov
adc
lcall
pop
pop
into
imul
lea
hlt
jmp
js
ret
xor
mov
mov
or
lods
inc
pusha
sub
mov
aad
rclb
add
vpmacsswd
lods
and
xchg
push
xchg
adcb
push
xor
xchg
test
cs
inc
sbb
movsb
cld
daa
jns
pop
fidivrl
and
fwait
stos
pop
push
sub
mov
sarb
jg
push
cmp
repnz
lods
inc
cmpb
mov
push
and
movsl
add
jo
es
data16
jmp
jo
fisubrl
push
mov
loop
inc
aas
lods
ds
xchg
js
sarl
xchg
pop
aas
bound
mov
fists
xor
movsb
out
ja
pop
test
cmpsl
fwait
cmp
pop
jo
mov
ja
insl
je
sub
call
sub
sbb
add
xchg
pop
jb
mov
mov
enter
clc
movzwl
insl
jb
loopne
mov
mov
clc
dec
jl
cmpsl
jno
cmp
dec
stos
pop
xchg
cmpsl
negl
lret
xchg
mov
arpl
mov
mov
mov
pop
adc
test
inc
push
mov
lods
pop
mov
shlb
push
daa
jl
loopne
leave
pop
out
and
imul
stos
je
je
mov
cmp
and
dec
lods
addr16
jp
dec
pop
shll
sbb
fstl
movsb
ret
push
popf
and
pop
movsb
jnp
imul
sub
stos
mov
mov
mov
in
mov
jno
inc
ret
push
cs
mov
push
sub
pop
js
shll
xchg
jg
hlt
jb
out
rclb
mov
sub
jmp
fwait
add
add
pop
and
in
std
mov
sbb
fisubs
mov
inc
sahf
orl
das
movsb
and
jne
push
xor
ret
out
mov
push
dec
int3
leave
mov
and
mov
adc
inc
out
insl
out
jae
xor
dec
ja
and
leave
sub
add
clc
fsubl
dec
cmpsb
xor
fiadds
jae
adc
and
lcall
or
add
sub
std
and
mov
adc
scas
dec
jo
mov
ja
dec
fwait
lahf
inc
stos
xchg
es
xchg
cmpsl
shlb
bound
sarb
jecxz
inc
movsb
adc
cli
dec
cmp
xchg
arpl
insb
lock
jp
mov
inc
lret
jle,pt
inc
shll
lahf
aam
lods
ljmp
add
mov
mov
das
adc
dec
mov
bound
int3
xchg
adc
add
clc
loope
jecxz
and
inc
mov
mov
mov
mov
insb
jp
shll
test
popf
test
div
jecxz
ret
inc
sbb
mov
in
pop
jno
rclb
mov
push
sub
push
addr16
test
mov
outsl
inc
xor
or
test
and
fisubrs
cmpsl
mov
clc
inc
fdivp
mov
fstpl
in
sbb
pop
daa
scas
aaa
adc
loope
add
cmc
dec
mov
and
imul
les
xchg
clc
adc
andl
rclb
outsl
fwait
sub
outsb
lods
xchg
sbb
dec
movsb
xor
mov
pop
gs
inc
xchg
mov
jle
xlat
jno
outsl
gs
in
jns
outsl
xchg
mov
loop
inc
adc
or
jns
dec
outsl
imull
xchg
shll
sbb
jl
xchg
and
xchg
pop
and
arpl
loope
movsl
adc
mov
jge
inc
enter
dec
lods
dec
in
iret
addr16
mov
sub
mov
fsubp
jmp
xor
sbb
test
hlt
inc
cmp
fdivrl
into
xchg
aaa
push
inc
bound
sub
sbb
pop
mov
cli
pop
adc
push
stos
adc
pop
push
gs
dec
insl
adc
popa
sub
data16
cmpsl
aad
into
lret
cmp
in
cmp
rcrb
sub
pop
sti
stc
or
je
and
cmpsb
sbb
mov
xor
add
and
jmp
push
add
sbb
sub
add
lcall
xor
fyl2xp1
rcr
imull
mov
and
lret
push
add
dec
jecxz
xor
or
ss
addr16
sbb
mov
sarl
das
insl
adc
fmul
cmp
enter
inc
shr
dec
push
test
pusha
xor
xchg
icebp
mov
jne
jmp
dec
fdivrs
xchg
movsb
loope
popf
dec
adc
dec
mov
imul
mov
xor
outsb
mov
lods
mov
xor
adcl
and
mov
int
pop
mov
mov
int3
fsubs
out
scas
sub
shll
loope
cs
adc
call
mov
mov
stos
in
je
xor
inc
in
sbb
ror
pusha
aad
sbb
fcoml
sbbb
mov
or
pop
negl
ljmp
ret
lods
mov
rcrb
jo
cwtl
pop
imul
fsubrl
dec
push
cwtl
pop
imul
out
mov
hlt
sbb
rorl
xor
mov
mov
inc
add
je
and
in
pop
daa
int
insb
stos
les
into
mov
cmpsl
outsl
and
dec
test
sbb
sahf
insl
adc
lret
cmpsl
imul
mov
mov
fnstcw
inc
mov
imul
ret
enter
scas
test
sub
std
in
lods
adc
aaa
add
in
push
loopne
xor
out
addr16
ret
pop
push
mov
and
addr16
shll
icebp
dec
pop
pop
dec
sub
sbb
imul
scas
decb
and
cmp
or
cmpsb
lods
dec
jns
and
filds
andb
and
mov
loopne
outsl
rolb
add
std
mov
outsb
cmp
jmp
add
loopew
out
xor
cmpsl
mov
stos
push
icebp
dec
push
out
xor
pop
mov
ret
in
mov
cmp
or
sub
or
repz
data16
sbb
lods
push
cmc
ljmp
sbb
nop
sub
icebp
or
xlat
inc
cmp
gs
fidivrl
pop
push
aad
or
jge
sti
repnz
lds
ljmp
xorl
out
mov
bound
jne
sbb
push
sub
push
xchg
cmp
mov
mov
out
fisttpl
shll
add
jno
stos
testb
jge
sar
inc
jg
sbb
lods
rol
inc
enter
shl
push
pop
ror
std
scas
sub
jge
addr16
xchg
xchg
xchg
in
inc
ja
jecxz
cmp
mov
call
stos
ds
pop
sahf
aaa
xchg
nop
sahf
add
mov
and
lret
lds
shrl
adc
jl
loop
jno
fistl
push
fbld
dec
jne
rcl
movsb
test
int
or
adc
dec
jl
dec
cmp
test
popf
jg
pop
ja
sahf
enter
fs
ds
movsl
add
inc
lret
dec
or
xchg
int3
cli
shlb
arpl
out
cmovae
pusha
into
sti
pop
dec
fstl
filds
nop
cmp
into
aad
fsubrl
stc
adc
xchg
push
jbe,pt
ljmp
mov
sub
mov
and
stos
ja
add
stc
push
sub
cli
mov
jmp
xor
lods
xchg
mov
arpl
dec
shrb
cmp
ret
daa
dec
mov
js
add
mov
aas
xor
pop
inc
or
lret
push
js
loop
mov
aad
mov
mov
push
xor
jp
movsl
enter
movsl
fcoms
and
add
mov
mov
sbb
imul
adc
out
outsb
jecxz
icebp
push
add
in
push
cmpsl
mov
or
xor
fists
aaa
js
xchg
stos
loopne
and
movsb
sarl
cld
mov
xor
jns
xchg
rcr
jecxz
inc
xor
mov
cmpsb
sub
les
push
ja
xchg
stc
or
add
andl
and
out
enter
cs
jge
lahf
push
cmp
lods
into
mov
pop
lret
scas
subl
pop
mov
test
jle
lods
in
fdivrs
jl
jo
dec
je
sub
gs
test
adc
pop
mov
bound
xchg
sub
xchg
xchg
jl
and
mov
dec
dec
sub
out
or
jge
inc
pop
sbb
test
adc
loope
xor
push
shlb
xor
push
dec
out
xchg
fwait
imul
push
aaa
add
push
into
and
call
popf
lea
divl
lret
iret
pushf
xor
hlt
push
mov
nop
push
push
addr16
lret
or
fucomip
aas
dec
sub
popa
mov
mov
lahf
fdivrs
pop
or
cmp
mov
leave
jae
sbb
les
add
ss
out
ret
out
mov
lods
pop
fdivl
sub
add
popf
inc
sbb
pop
add
and
mov
loopne
loope
push
pushf
ljmp
add
jmp
push
inc
inc
pop
dec
cmp
aaa
jb
lret
clc
int
jmp
add
cmpsl
test
cwtl
push
outsb
mov
int
lcall
test
scas
cmp
das
or
not
sbb
xchg
mov
sub
and
popa
bound
jae
xlat
out
inc
or
shlb
arpl
test
out
int
mov
fxam
lods
ja
aaa
leave
or
xor
stos
jno
cmp
inc
dec
cwtl
lret
iret
xor
jge
fstps
jge
ret
fidivrl
fnstcw
inc
adc
or
push
sbb
dec
sub
adc
or
sub
aam
insb
cli
and
in
or
dec
push
xchg
pop
imul
cmp
je
sub
fisttps
lret
xor
cld
inc
mov
xchg
cmpsb
jns
repz
sarb
and
std
movsl
loope
sbb
fildl
xor
push
insl
sub
outsb
cmp
in
into
test
lret
jp
sbb
sahf
sbb
jb
outsl
popa
imul
xlat
push
pop
in
out
pop
mov
rcrl
mov
mov
xor
mov
dec
pop
pop
or
mov
pop
jecxz
or
cli
push
dec
xchg
add
push
push
mov
adc
or
punpckhdq
insb
mov
mov
call
xor
orb
aam
and
mov
mov
jb
pop
pop
sbb
dec
push
inc
lcall
mov
xor
inc
les
push
leave
mov
test
dec
int
pop
push
js
sbb
xchg
mov
jnp
insl
nop
cmp
aaa
divl
sbb
and
adc
popa
add
call
call
xchg
jge
mov
pop
adc
fcmove
mov
in
mov
mov
jno
jns
jmp
mov
lods
push
imul
and
cltd
test
pusha
outsl
fisttpl
pop
test
lcall
adc
loop
js
xchg
test
sub
in
pop
and
dec
mov
dec
xor
dec
push
mov
movsb
jge
and
ret
xchg
adc
add
outsl
cmc
and
xchg
jnp
shl
cs
sbb
pop
cld
or
pop
adc
push
xchg
aaa
cld
pop
dec
addb
cmp
jno
movsb
sub
add
into
lret
mov
sbb
inc
fadd
cmp
inc
push
jo
mov
call
or
int
dec
adc
or
mov
mov
mov
int3
sub
sahf
cmc
cmp
adc
shl
inc
fcmovne
dec
push
lret
cmp
add
aaa
inc
xchg
sub
jnp
dec
femms
or
aas
push
pop
shrb
lcall
out
fisttpl
imul
ret
ret
outsl
cmpsb
subl
push
sbb
mov
int3
pop
fldl
sbb
out
inc
adcb
mov
cmp
sub
sub
fdivrl
ret
mov
outsl
jecxz
push
pushf
pop
pop
or
cmp
bound
sbb
fcomip
xchg
orl
or
clc
mov
mov
xchg
xor
sbb
lock
cmpsl
sub
divl
dec
sbb
dec
or
shl
cld
repnz
ret
movl
es
aaa
out
js
or
mov
add
ja
ss
or
stos
pop
add
inc
cmp
pop
mov
repnz
int3
add
push
test
ja
inc
jg
ret
and
sbb
clc
inc
sbb
inc
xchg
fbld
inc
andl
jbe
sub
or
adc
pop
mov
test
add
mov
lahf
or
lock
fwait
dec
sbb
push
insb
push
test
out
das
mov
push
sub
divb
imul
push
or
hlt
sahf
mov
js
mov
stc
call
inc
insb
loope
mov
cmp
push
das
lds
cmp
je
ljmp
fwait
adc
aaa
xchg
lock
ds
movsl
sbb
in
nop
fs
sbb
testb
lret
ds
outsl
xchg
mov
pop
mov
aaa
mov
std
xchg
pushf
insl
shrl
or
cs
popa
mov
hlt
and
movsl
or
or
ret
jns
xchg
mov
push
lret
pop
jecxz
clc
sahf
xchg
ret
mov
xor
out
jb
mov
mov
call
fs
loopne
inc
movsl
in
add
shll
in
call
ljmp
and
lcall
inc
or
aam
push
int
pusha
stos
adc
lahf
les
dec
pop
ja
imul
mov
rorl
stos
fmull
test
loop
lcall
cs
dec
and
xor
in
or
pop
sbb
jl
and
push
jg
cs
imul
push
in
xchg
aas
xor
pop
or
stos
in
stc
sub
sub
mov
xchg
rclb
mov
or
cmpsl
pop
jge
hlt
or
loop
push
dec
xchg
adc
cmp
jae
mov
sbb
out
adc
and
sahf
ljmp
rcrb
fimuls
insb
push
inc
fs
dec
fiadds
cmp
pop
mov
nop
sbb
outsb
nop
pop
add
cmpsl
outsb
into
jmp
push
packsswb
fsubrs
cmc
std
in
mov
mov
int
cmc
xor
adc
push
sub
test
das
mul
aaa
lods
add
sbb
jmp
mov
pop
dec
pop
pop
jb
cmpsb
adc
rcrb
jae
xchg
pop
sarb
mov
mov
sbb
in
xchg
jmp
stos
mov
insl
andl
adc
inc
inc
mov
in
add
out
adc
pop
sbb
xor
push
loop
movsb
mov
mov
and
adc
mov
jno
dec
dec
sahf
test
jp
pop
out
push
mov
arpl
adc
xchg
jge
ret
out
xor
movsb
dec
jb
imul
cmp
incb
in
aas
mov
mov
loop
mov
xor
adc
jbe
fcmovne
or
and
inc
frstor
jl
lret
sahf
sub
out
pop
sub
adc
jbe
fs
push
mov
insb
pushf
sub
jbe
mov
daa
mov
push
xchg
xchg
adc
push
dec
mov
or
fsubrl
js
nop
daa
dec
mov
pop
out
lods
je
cmc
out
daa
insl
or
sub
sub
xlat
int
repz
cmp
aad
push
lock
int
adc
push
xor
and
sahf
out
adc
and
cmpsb
lods
sbb
rorb
fistpl
aas
popa
out
popf
decl
mov
mov
push
inc
xchg
jmp
adc
dec
or
add
add
shrb
lcall
shrl
mov
jno
and
push
sbb
mov
loopne
xor
les
and
jb
movsb
popa
jne
cmp
inc
shr
call
lcall
jmp
or
lods
and
mov
out
lcall
jb
aaa
aam
inc
int
pop
pop
cltd
xchg
bound
xchg
in
scas
test
in
fldt
ret
outsb
push
mov
loopne
sbb
sbb
or
push
lea
or
movsl
pop
xchg
std
dec
ret
mov
dec
loope
inc
xchg
lahf
scas
xor
sahf
data16
add
movsb
into
adc
dec
stos
clc
loop
sub
inc
mov
mov
mov
mov
out
jg
cmp
and
push
shll
clc
pop
aad
pushf
pop
xor
cmp
lahf
out
sbb
add
push
lds
mov
mov
mov
add
addr16
subl
push
call
and
push
enter
sub
jg
mov
outsb
dec
push
jb
outsl
push
sbb
out
ds
xchg
adc
mov
sar
mov
and
push
fdivs
pop
mov
sti
lret
fistpll
and
imul
adc
flds
and
mov
jmp
jno
or
je
rolb
clc
nop
clc
xor
pop
sbb
xor
aas
and
pop
xor
adc
mov
mov
xchg
mov
sti
dec
pop
sahf
xor
pop
dec
xor
pop
and
mov
push
outsb
mov
cld
popf
jl
sbb
stc
in
pop
sbb
dec
pop
cwtl
jcxz
xor
ljmp
mov
push
int
and
mov
fwait
loopne
aam
mov
lock
out
jl
hlt
fidivs
push
imul
and
aam
add
and
fcomps
filds
sub
xor
pop
ret
add
cmc
lea
lds
pop
or
fiaddl
cmp
out
rorb
push
data16
ja
mov
pop
test
xor
fbld
cs
pop
and
pop
jne
adc
out
cmc
imul
jl
add
push
loopne
int3
stc
scas
mov
ljmp
mov
fistpll
bnd
sbb
in
and
call
ror
pop
test
aas
out
mov
leave
or
xor
mov
out
jmp
jno
xchg
dec
jg
into
sbb
mov
push
mov
ljmp
bound
aas
lret
adc
inc
or
inc
jecxz
stos
push
in
mov
repnz
mov
cmp
jne
pop
jbe
xor
push
popf
push
push
cld
in
sti
jmp
push
pop
mov
push
adc
jge
xchg
and
fisubs
repz
add
lods
jno
lock
stos
inc
fsts
or
push
xchg
arpl
fstl
inc
int
out
or
xchg
testl
jecxz
rcll
dec
shl
and
cmp
jp
jne
jae
cmp
adc
sahf
fs
lret
or
xor
cmc
loope
bound
and
mov
imul
into
inc
int
or
xchg
xor
shl
mov
es
in
lock
mov
sub
add
mov
pop
push
loope
leave
aas
pop
dec
mov
jo
mov
cmp
push
xlat
add
mov
jle
lods
or
xchg
orl
and
sar
mov
adc
inc
ret
fisttpl
ret
negb
jmp
sbbb
or
insl
push
jle
movsb
addr16
pop
xor
mov
jbe
call
sub
cmp
rclb
jno
xchg
push
dec
fildl
sbb
scas
roll
mov
and
pusha
inc
pop
fildll
push
add
jo
pushf
fwait
icebp
inc
aam
mov
clc
cld
mov
lods
mov
jmp
mov
sbb
adcl
mov
inc
addl
outsl
jmp
jmp
xchg
adcl
push
sti
std
lret
les
mov
ds
mov
pop
push
daa
jecxz
movsl
xchg
scas
inc
sub
jmp
mov
pop
adc
and
xor
lcall
iret
insb
rcrb
push
popf
pop
pop
ret
loope
mov
bt
shrl
cmp
sahf
lahf
cmp
mov
sbb
jnp
jl
mov
inc
lret
in
mov
lcall
popa
mov
ret
dec
mov
imul
ja
and
hlt
mov
shl
mov
cwtl
pop
cmp
test
test
jle
mov
lods
rcll
push
ja
cltd
inc
aad
xchg
mov
rorb
imul
and
jne
pop
xor
inc
data16
imul
push
cltd
notl
jge
roll
fdivl
jp
and
jp
stc
dec
repz
lock
pop
inc
stos
and
imul
inc
inc
aaa
add
mov
xchg
xchg
sbb
sti
push
out
and
push
cmpsb
adc
push
mov
imul
sbbl
cmp
lods
das
cmp
mov
dec
bnd
cmc
fsubl
sub
in
pop
xor
mov
or
cmp
inc
leave
jmp
pop
lcall
push
ret
incl
push
xor
cwtl
movntq
out
mov
dec
out
lcall
orb
sbb
xor
lods
or
jae
xor
sbb
mov
dec
xor
cmp
aam
cltd
addr16
clc
cmp
js
or
adc
dec
mov
fcmove
clc
cs
xor
jl
jns
push
dec
cmpsl
cmp
xchg
xor
or
xchg
out
je
les
jmp
cmpl
push
xor
fsubrl
fiadds
mov
sbb
in
outsb
and
jmp
push
mov
jb
inc
pusha
jbe
push
iret
imul
inc
cmp
test
adc
aam
jb
push
sub
inc
orl
rcrl
mov
adc
dec
in
das
xchg
sub
xchg
addl
sub
sbb
fnstenv
adc
dec
sbb
mov
loop
sub
gs
adc
lret
or
sbb
into
stos
adc
ds
ret
jp
enter
dec
cld
arpl
sbb
and
lret
sti
jne
sarb
mull
sbb
push
decb
inc
enter
dec
pushf
dec
fwait
ja
es
push
jnp
popa
test
dec
fs
jmp
ss
rorb
stos
add
mov
aam
push
xor
mov
lcall
adc
inc
cmp
xor
insb
xchg
outsb
add
dec
movsb
xor
push
lods
jb
cmp
cmp
mov
leave
icebp
adc
cmp
add
mov
addl
adc
inc
mov
sub
sbb
pop
adc
inc
mov
es
ljmp
pusha
push
adc
jno
pop
and
cli
lea
mov
pop
les
sti
outsb
into
xor
push
pop
inc
movsl
add
jns
iret
push
mov
stos
stos
insl
mov
es
ja
frstor
icebp
call
mov
xor
popa
js
add
and
mov
aam
andb
jns
out
ret
stos
std
stc
out
xor
pop
cmp
xchg
ss
cmp
mov
adc
stc
dec
xchg
mov
jg
dec
mov
sub
adc
or
xchg
cmpb
xlat
bound
loope
repnz
adc
aas
sub
jle
iret
sbb
xchg
lods
je
std
push
xchg
popa
les
xor
xor
loop
lods
pushf
test
cmp
mov
int
push
or
stc
xor
xchg
lret
mov
test
cmp
lahf
call
js
jnp
ret
pop
dec
daa
call
stc
and
adc
dec
icebp
stc
stc
and
dec
in
incl
bound
out
lret
sub
out
roll
or
ret
in
inc
and
icebp
pushf
subl
push
and
pop
cmp
add
mov
or
sti
aaa
mov
mov
ds
sub
gs
xor
jne
sbb
add
loopne
pop
in
rorb
sub
out
ds
cld
mov
fiaddl
xor
in
xchg
jne
das
fstl
mov
pop
fstpt
int
xor
xor
xchg
xchg
or
pop
inc
cmp
imul
out
mov
add
mov
xchg
scas
js
mov
jl
and
xlat
movsl
add
es
andl
ds
mov
js
xlat
lock
mov
rcll
in
test
cmp
lods
cmp
mov
lods
pop
xor
xchg
jo
imul
inc
inc
pop
push
push
xor
xchg
movsb
pop
insb
movsb
pop
inc
or
or
fdivl
pushf
sahf
xor
aas
fiadds
pop
pop
pop
sub
out
in
jp
push
test
and
push
dec
lock
and
scas
loop
jmp
es
cmpsb
mov
jmp
pop
push
leave
fistl
fidivrl
jmp
stos
xchg
movsl
sbb
push
and
int3
mov
fmull
jge
lods
shrl
mov
adcb
and
insb
test
movsb
xor
and
sti
out
mov
popf
and
and
fwait
pop
test
mov
mov
cmp
or
je
push
jo
nop
mov
jecxz
ds
inc
mov
mov
data16
mov
mov
cld
test
shrb
mov
xchg
sbbb
loop
sub
push
and
movsl
sarl
mov
sub
xchg
std
loope
mov
fucomi
clc
ljmp
lret
xchg
pop
int3
rcrb
adc
xchg
sub
in
dec
sbb
sbb
sbb
mov
call
xor
pusha
sbb
int3
js,pt
and
fisubs
andl
mov
pop
dec
sarl
cmp
into
inc
repnz
cmpsb
rcr
xchg
mov
add
xor
sub
or
push
xchg
xchg
imul
cli
jp
repz
cmp
mov
mov
inc
mov
adc
push
cli
stc
loop
push
fidivrl
enter
xchg
aaa
push
stos
mov
cmpsb
mov
dec
in
cmpsl
es
mov
imul
inc
and
xchg
jae
lahf
xchg
mov
ret
loope
xchg
fsubl
mov
stc
arpl
jne
add
cmp
dec
enter
xchg
dec
mov
mull
or
push
sar
sti
mov
xor
aas
faddl
pop
mov
jne
sbb
jns
roll
fs
pop
mov
sbb
aam
loopne
or
lea
jb
mov
popa
pop
fbld
mov
stc
addr16
loop
int
es
lock
fisubl
aaa
pop
popf
and
lcall
fwait
push
push
push
or
lret
adc
shrl
sbb
sbb
icebp
push
xor
sub
inc
aam
mov
sbb
jmp
sub
flds
mov
add
push
pop
sbb
in
pop
je
clc
mov
fsubr
arpl
push
jg
sbb
and
sub
xchg
loopne
push
mov
fcomps
mov
cmp
xchg
imul
sub
pop
lret
sub
ret
cmp
dec
cmc
xchg
sub
hlt
pusha
sub
cmpsb
jecxz
pushf
add
cmp
dec
es
test
fld
mov
mov
inc
dec
ja
mov
or
or
mov
pusha
push
nop
sbb
fsubrl
xchg
jno
sub
mov
movsb
js
loopne
jo
pushf
or
jns
jb
xor
std
xchg
and
loopne
mov
mov
or
addr16
lds
je
sub
xor
into
repz
cmp
icebp
leave
scas
sbb
jno
enter
push
add
sub
adc
dec
push
stos
adc
mov
rolb
jl
cmc
dec
mov
xchg
ret
imul
xor
sbb
imul
xor
xchg
inc
cmp
outsb
xor
mov
mov
sub
dec
add
lret
push
dec
mov
movq
xchg
mov
rcrl
inc
cmp
faddp
and
xchg
mov
stc
mov
pushf
xchg
xchg
lea
inc
cmp
inc
push
add
cmpsb
outsl
lock
cmpsb
inc
mov
push
mov
jmp
ljmp
jnp
inc
jg
xchg
mov
and
or
cmp
test
jp
sub
fnstenv
addb
push
xchg
adc
xchg
hlt
rep
iret
xchg
mov
pop
ss
jbe
pop
xchg
call
push
ror
cli
into
pushf
repz
add
and
xor
jecxz
jg
rolb
inc
call
mov
clc
mov
dec
movsb
dec
in
and
ret
out
mov
lret
int3
rol
loop
pop
xor
inc
pop
std
mov
xor
jb
mov
test
sbb
rcl
test
outsb
mov
lods
outsl
add
push
sti
jecxz
jno
loop
test
pop
imul
stc
mov
push
jb
jle
sub
mov
scas
dec
data16
insb
imul
add
pop
inc
jne
jno
push
mov
das
sbb
loop
inc
sub
dec
cld
mov
test
jg
call
lret
data16
or
repz
lods
mov
daa
mov
fadds
inc
cltd
dec
mov
out
arpl
dec
mov
cmpsl
dec
jae
mov
rcll
lock
push
add
imul
sub
test
enter
movups
sub
push
stos
pop
xor
push
cmp
js
add
xor
xor
cs
mov
pusha
dec
fiaddl
push
shrl
aas
lret
scas
sub
push
dec
lret
pop
push
and
sarb
pop
test
lds
and
pop
jg
dec
add
call
or
adc
adc
loope
dec
loopne
push
pop
jge
push
sub
and
jno
push
fstpl
xchg
cmpsb
lahf
lods
sbb
cmp
sahf
pop
or
pop
and
mov
add
mov
jle
mov
std
lods
cmp
iret
adc
lods
js
cmp
mov
jns
das
ret
rcrl
fistps
mov
or
xchg
inc
sarl
iret
xor
or
loop
rcl
ljmp
jbe
test
sbb
cs
andl
add
mov
es
mov
jg
xor
filds
inc
mov
mov
testb
popf
pop
imul
pop
ficoms
pop
stos
mov
lods
popf
mov
xchg
insl
nop
mov
push
scas
cmp
push
dec
mov
in
addr16
shll
add
imul
push
mov
xchg
shll
pop
jne
add
add
cwtl
loope
xor
shl
outsl
cmp
cmp
cmp
dec
cmpb
fcoml
inc
ficoml
out
out
mov
es
repz
xor
mov
mov
inc
aad
loop
sti
push
add
jnp
pop
cmp
divl
std
pop
sbb
inc
pop
shrb
push
push
sbbl
or
adc
test
inc
xor
xlat
add
fmul
clc
test
ret
std
push
xchg
mov
xor
insb
add
inc
inc
pop
sub
sub
jne
popf
mov
les
or
xchg
and
jo
xorb
test
xchg
enter
aad
pop
sub
xor
mov
add
xchg
sub
sub
lret
int
stos
inc
mov
jbe
lcall
xor
cltd
repz
mov
mov
xlat
adc
mov
sbb
or
clc
and
das
in
js
movl
imul
mov
pop
mov
data16
add
mov
gs
iret
bound
mov
add
inc
loop
imul
and
dec
sub
nop
inc
push
movsl
xor
ss
pop
jp
cmp
ja
sbb
fs
cmc
add
pushf
or
push
iret
outsl
popa
scas
into
mov
mov
aam
push
jp
mov
mov
pop
jb
stos
adc
out
ret
bound
test
sub
in
xchg
cltd
pop
add
std
push
lret
rclb
sub
and
push
pop
addl
lret
nop
push
xor
xor
sbb
mov
xor
lcall
int3
sub
inc
test
jae
cli
call
sbb
xchg
inc
xor
mov
mov
jmp
lock
mov
mov
stos
mov
mov
ds
push
adc
sbb
js
imul
insb
jle
arpl
aaa
push
leave
shlb
cmpsl
scas
cwtl
and
pop
mov
sbb
cmp
cmpsb
jmp
test
or
shrb
test
push
sub
sbb
mov
sbb
xchg
add
push
mov
fdivs
lcall
xor
ror
iret
mov
notl
inc
lret
iret
jae
dec
nop
stos
into
or
jne
loopne
arpl
call
push
jns
add
imul
or
aas
sub
cmp
imull
fcoms
movsb
rorl
pop
or
lcall
jno
out
push
and
inc
into
mov
test
std
movsb
repz
or
mov
cmp
loop
insl
cmp
or
jbe
mov
mov
mov
xchg
movsb
push
je
cs
xor
stc
mov
mov
xchg
repz
aaa
int3
nop
mov
nop
in
inc
mov
push
shrl
ret
xorb
xor
sbb
add
into
sub
mov
cltd
cltd
arpl
outsb
mov
pop
mov
data16
data16
jle
bnd
or
icebp
pop
pushf
shrl
inc
mov
lds
aas
xor
mov
push
lcall
imul
cmpsl
cmc
push
mov
shrb
aas
out
ret
push
inc
pop
sub
scas
data16
imulb
mov
jecxz
arpl
fidivl
push
jl
jae
adc
ficompl
sub
and
jb
push
pushf
jge
cmp
push
test
dec
sub
inc
ret
add
hlt
stos
imul
pop
add
sbb
jp
repnz
push
or
dec
sahf
xor
xor
jmp
lds
push
cli
sub
loop
jle
cli
adc
sub
fs
xchg
test
xor
mov
lea
test
push
das
push
inc
fnsave
imul
xorb
in
jecxz
imul
out
push
pop
push
mov
mov
mov
inc
daa
fwait
enter
fdivl
pop
ds
mov
push
cmp
lods
pop
in
outsb
hlt
setbe
push
jmp
loop
sbb
xor
pop
xorb
test
cmp
popf
push
push
dec
in
xor
addr16
jecxz
je
mov
sbb
fisttpll
adcl
nop
aam
test
add
sarl
jl
fcoms
mov
lret
add
mov
jg
push
cwtl
sti
hlt
inc
xchg
stc
out
pop
cs
cmp
aas
scas
sbb
cmc
jmp
lret
xor
xchg
xor
ljmp
out
xor
int3
pop
cmp
bound
push
or
xchg
and
sub
insl
sbb
popa
jl
popa
or
jbe
pop
daa
add
push
shrb
inc
fcmovnb
lea
int3
xor
pop
clc
call
push
cmp
mov
mov
ja
xchg
jb
push
mov
inc
mov
mov
insb
xor
es
adc
outsb
neg
adc
xor
subps
xchg
dec
dec
inc
jecxz
cmp
lahf
icebp
xchg
push
mov
clc
push
cmpsl
addr16
xor
and
jg
stc
je
aam
mov
dec
add
pop
fstpt
outsb
sbb
inc
xchg
adc
out
into
and
sub
and
mov
cld
dec
in
insl
push
mov
mov
jle
xor
sbb
call
xor
push
sbb
xchg
sbb
scas
mov
mov
cmpsl
add
add
arpl
xor
in
inc
mov
or
jp
cwtl
xchg
add
sub
xor
xor
out
dec
and
rorl
test
mov
popf
in
enter
push
lcall
cmp
xchg
int
inc
fwait
pop
stos
pushf
sahf
adc
test
push
sub
xor
xchg
add
subl
push
lahf
testl
push
aad
jnp
mov
xchg
mov
mov
js
lret
cmc
sarl
fbld
lahf
push
xor
mov
xor
ljmp
cwtl
xchg
jo
daa
test
add
cmp
push
fucomi
hlt
inc
hlt
hlt
ret
sahf
call
mov
jg
mov
xor
or
lods
or
data16
adc
pop
cmp
add
das
mov
push
rol
imull
pop
sub
rdtsc
mov
data16
jnp
outsb
jne
mov
dec
lds
sbb
mov
and
mov
xor
in
ljmp
push
daa
xchg
sbb
arpl
sbb
push
jae
adc
sbb
sti
dec
cli
das
xchg
jle
mov
aam
jo
addr16
popa
and
sub
xor
push
push
pop
sahf
in
mov
repnz
cs
dec
cmpsb
dec
inc
adc
hlt
fidivs
ror
sbb
xchg
stos
sbb
rorb
test
jmp
xor
add
xchg
stos
jg
push
push
mov
jo
movzwl
stos
push
fst
fdivr
push
and
data16
mull
and
aas
sbb
cltd
pop
aam
jecxz
mov
dec
jmp
bound
int
sbb
xchg
mov
mov
mov
stos
xchg
jo
sub
and
pop
sub
jb
add
ljmp
jo
ds
inc
sbb
mov
sbb
loope
mov
shrb
jno
orb
clc
mov
cwtl
inc
bound
dec
roll
fmul
call
js
cmp
sbb
mov
je
mov
js
adc
andl
imulb
mov
mov
inc
pop
sahf
jo
mov
not
push
add
inc
add
sahf
dec
jne
push
testb
mov
out
add
lods
shll
pop
js
mov
popf
stc
popa
rcll
xor
fisubs
xor
jl
mov
shl
insb
pop
lea
in
pushf
test
pushf
xchg
shlb
mov
or
adc
cmpsl
lods
cmp
xor
gs
rorl
pop
dec
and
shl
mov
das
xor
dec
dec
das
pop
cmp
pop
and
jbe
psubsw
aam
cmc
mov
and
or
cmpsl
cmp
adc
les
imul
imul
mov
cwtl
out
or
es
and
adc
xor
aam
or
outsl
nop
jp
and
cli
or
adc
pop
int
dec
cltd
inc
nop
mov
lret
pop
adcb
mov
ja
adc
in
fadd
lods
adc
shrb
pop
mov
das
out
pop
ffree
xchg
dec
decb
mov
mov
sub
jg
sub
mov
je
xor
pushf
or
mov
imul
pop
xchg
mov
clc
mov
jnp
push
xor
mov
fbld
nop
in
add
sbb
jb
icebp
mov
fwait
or
pusha
popa
or
pop
sub
cmp
mov
das
mov
inc
inc
dec
adc
insl
fstpt
ret
pop
xchg
push
sti
inc
jo
pop
sub
daa
pop
push
adc
mov
jmp
push
xlat
mov
cmpsl
sbb
xchg
mov
mov
test
in
lret
aad
inc
test
adc
mov
xchg
js
dec
sti
mov
jge
cli
cmp
pop
daa
adc
int3
pop
popf
idivl
lock
inc
sub
and
xor
js
dec
sub
ret
push
sbb
or
xor
push
adc
into
test
ljmp
xchg
roll
ja
dec
add
lahf
sub
adc
jno,pt
or
clc
in
mov
pop
inc
sub
sbb
gs
aas
sub
mov
mov
xchg
test
jae
xchg
and
mov
icebp
adc
sti
push
mulb
jb
inc
sub
iret
inc
pop
adc
setle
jbe
lahf
mov
cld
stos
sti
ljmp
pop
and
mov
int3
popf
imul
mov
adc
cmp
sub
aas
adc
push
aaa
lods
ja
imul
mov
psrad
push
lods
mov
add
or
dec
gs
jle
cmp
imul
and
pop
push
dec
faddl
pop
dec
xchg
adc
mov
in
cltd
daa
aad
sbb
adc
xchg
mov
jne
out
fs
loopne
sti
aad
ja
sahf
repnz
out
or
xchg
popf
inc
ss
xchg
lds
mov
pop
scas
cli
mov
cmp
aad
in
sar
push
in
mov
rcrb
adc
lds
rcrb
fwait
push
mov
ss
shlb
inc
js
scas
fwait
imul
push
xchg
jno
adc
sbb
xchg
sbb
das
out
daa
leave
dec
and
ret
mov
ret
push
or
aas
into
cld
mov
cltd
xchg
pop
outsl
lock
cs
ficoms
and
sub
mov
repnz
push
and
test
aad
mov
loope
and
push
push
mov
popf
adc
outsb
or
bound
popf
mov
imul
mov
xor
dec
jmp
movsl
sub
repnz
mov
in
ss
sub
pop
add
je
push
sbb
scas
call
insl
sbb
jg
xor
je
push
stc
or
jbe
or
cmp
push
pop
mov
loop
cs
jg
idivb
mov
cmp
add
xor
pop
pop
outsb
clc
mov
shlb
test
inc
test
adc
aam
mov
in
sub
add
into
push
push
rcrl
pop
ud2
popa
frstor
frstor
pop
in
push
or
jmp
leave
test
and
call
loope
pop
xchg
mov
lahf
sbb
mov
mov
icebp
stos
push
inc
push
int
pusha
cmp
push
test
push
push
add
jns
test
lahf
sub
xlat
pop
fs
or
mov
pop
scas
mov
mov
inc
push
fidivrl
adcl
push
jns
pop
addr16
xor
je
pop
adc
pop
pop
clc
inc
add
out
sub
stos
es
push
shll
imul
fwait
mov
jl
repnz
mov
mov
sbb
loope
jnp
sub
movsb
and
pop
adc
clc
push
aam
sbb
je
mov
cmp
fwait
dec
loopne
es
fimuls
insb
repz
cwtl
mov
test
jg
mov
xchg
test
stc
cmp
adc
jne
mov
sbbl
sbb
ds
shlb
xor
xor
sub
les
xchg
pop
idivb
adc
pop
pop
mov
push
push
std
mov
cld
pop
mov
push
pop
pop
xor
pop
stc
or
cmp
loop
push
insb
or
xchg
xchg
ds
xchg
push
lret
jg
or
jae
fwait
mov
rolb
lock
xchg
mov
sbb
insl
in
mov
jbe
test
rcr
sbb
adc
adc
enter
in
andb
dec
xchg
add
cld
pop
cmpsb
into
push
outsb
dec
cmp
movsl
xchg
fs
test
adcb
jb
scas
xor
loopne
sub
or
notl
sub
pop
pop
xor
cmp
pushf
sbb
fstpl
pop
aam
in
or
jl
movsb
dec
mov
jne
fcompl
sti
lahf
shrb
rorb
cli
pop
fadds
iret
fisttps
inc
fisubs
movsl
and
cmp
inc
adc
xor
shlb
jae
mov
jbe
or
lret
push
mov
inc
int3
ja
xchg
inc
inc
mov
cmc
pop
add
pop
dec
dec
fcomps
gs
cmpsl
sub
std
and
pop
test
fucomi
arpl
xchg
loopne
ss
into
adc
jl
push
test
adc
push
sub
daa
dec
jo
outsb
mov
sbb
cltd
dec
enter
mov
pop
cmp
ja
xor
andl
cmp
gs
in
adcb
mov
shrb
push
sarl
fs
and
cmp
mov
pop
pop
add
mov
pop
cli
es
btr
cmp
mov
ffree
fsub
leave
stos
mov
sub
pushl
inc
fucomp
dec
ret
mov
pop
out
pushl
daa
pop
xchg
cmp
mov
out
cmp
jo
mov
and
scas
mov
inc
dec
int3
xlat
sbb
push
cmp
stos
pop
fdivr
call
addb
jl
lods
push
or
or
adc
jno
addr16
sub
clc
repz
xchg
jle
movsb
and
sbb
xor
pop
pop
push
sbb
adc
lds
loope
mov
lret
ret
add
or
lea
xlat
jge
repnz
in
sub
xchg
adc
cmc
inc
xchg
cmp
fidivl
scas
xor
cmpsb
sarb
scas
pop
cmp
stc
or
test
and
movsl
pop
push
sub
pop
notl
pop
xor
sub
xor
out
inc
mov
jo
adc
pop
mov
pushf
ss
out
push
lret
iret
add
mov
push
adc
add
scas
lods
mov
mov
mov
dec
sub
in
and
pop
or
adc
insl
adc
dec
adc
cld
or
pop
les
cmp
dec
in
mov
or
xchg
cmp
popf
call
mov
push
jae
mov
sbb
xchg
dec
fstps
hlt
jns
dec
pop
jno
mov
jo
or
divb
popa
in
mov
mov
and
jae
jne
jecxz
aas
adc
add
in
mov
and
cmpsb
dec
mov
pop
mov
xor
repz
cmpsl
cmp
push
mov
std
shlb
ret
sahf
js
jg
jb
sub
push
adc
pop
rorb
pop
testl
movsb
adc
in
test
sbb
push
lret
xor
xor
mov
aaa
adc
in
dec
mov
add
ficoms
and
cmp
popa
cmpsl
cld
cmp
insb
jo
dec
pop
cpuid
add
xor
sub
cwtl
subl
jbe
dec
xchg
out
xchg
xorb
sub
sub
and
enter
push
movsb
adc
pop
jge
repnz
data16
mov
insb
outsl
push
add
jbe
mov
mov
scas
dec
jae
bound
push
pop
xchg
cld
loop
ljmp
adc
leave
decl
test
sbb
mov
sahf
and
in
gs
js
and
sahf
sub
and
sarb
mov
mov
sbb
mov
cs
pop
dec
dec
ljmp
movsl
push
mov
push
in
or
cmc
dec
stos
mov
popa
inc
les
popa
test
cmp
lret
push
ss
sbb
outsl
lods
mov
sub
push
hlt
mov
mov
xchg
mov
jge
ret
add
push
xchg
int
add
movsl
jl
out
outsb
sbb
or
cld
push
out
adc
adc
jns
imul
outsb
push
jns
mov
pushf
adc
int
cmp
inc
pop
daa
movsb
pop
mov
fcmovu
ds
mov
pop
adc
in
clc
fidivrl
jno
mov
mov
cwtl
inc
sub
ljmp
mov
outsl
sub
and
imul
adc
inc
jbe
xchg
es
add
mov
fisubl
adc
in
xchg
dec
call
outsb
cmp
sub
outsl
rorb
jp
mov
pop
mov
lss
mov
das
int
push
jno
jbe
push
outsl
xor
mov
and
or
push
push
mov
xor
push
dec
iret
mov
pop
rcrb
jnp
adc
fdivrs
lea
dec
and
mov
shrb
in
icebp
aaa
or
xor
push
rcrb
add
push
mov
sbb
add
xor
frstor
adcl
sbb
in
mov
push
nop
sub
adc
push
sub
ret
mov
out
cmc
or
dec
jle
popf
dec
jno
mov
xlat
inc
icebp
scas
imul
lret
mulb
adc
out
jno
jb
mov
xor
cmp
adc
fs
fwait
push
mov
inc
mov
mov
ljmp
jb
jae
push
mov
out
les
fisttps
push
aam
add
or
lods
add
out
inc
adc
sar
das
sub
inc
dec
xchg
jno
xchg
and
leave
adc
add
lods
mov
loop
xlat
out
ss
jo
int
cld
movsl
sbb
fnsave
pop
aaa
jns
sub
int3
inc
dec
outsb
or
je
sub
xor
dec
jb
data16
push
mov
xor
pushf
inc
outsl
mov
dec
stos
std
fimull
out
lods
mov
jp
add
sbb
xor
pop
and
push
pop
cmpsb
jl
jne
in
mov
jg
decb
push
popa
xlat
push
push
mov
stos
test
movsb
push
ds
adc
rol
mov
scas
jno
xchg
pusha
movsl
mov
out
mov
mov
jns
adc
sahf
cmp
mov
xchg
jg
cld
lock
in
fwait
or
outsb
ret
dec
adc
mov
push
jge
mov
or
add
sti
add
das
mov
divl
lods
sub
cs
mov
or
aam
in
movsl
push
outsl
fadd
repnz
dec
sub
pop
and
cmc
jge
mov
out
fldt
pop
mov
sub
iret
sbb
sarl
fcmovbe
pushf
and
fdivrs
mov
push
xor
xchg
cwtl
lret
sahf
je
add
addr16
add
loopne
insl
icebp
stc
icebp
inc
lret
outsl
rol
aaa
mov
mov
sub
cmp
out
cmp
xlat
or
add
cmp
add
sub
adc
ficoml
pop
and
adc
in
fs
sbb
je
push
push
hlt
xchg
pop
sahf
push
das
push
out
adc
and
inc
xor
roll
sbb
pop
ja
adc
sahf
sbb
pop
call
push
and
pop
pop
pop
iret
js
iret
popf
or
je
push
inc
sub
mov
je
fsubrs
sbb
adc
es
jmp
cmp
adc
add
sbb
mov
rclb
sahf
popf
add
mov
xor
inc
jp
loopne
std
and
sbb
push
jmp
fldt
sbb
in
call
inc
stos
mov
ror
fidivrs
jae
adc
shll
xchg
pop
sar
es
pop
inc
test
pusha
xchg
ds
inc
popf
jo
fcmove
mov
cmp
add
pop
mov
dec
cmovs
outsl
inc
dec
cmc
enter
arpl
adc
mov
shl
int3
out
push
inc
jg
fs
loopne
adc
mov
push
and
imul
imull
cmpsb
jl
push
pop
pop
lock
movsb
mov
test
pusha
mov
adc
or
loopne
mov
fwait
es
jnp
lcall
int3
movsb
gs
mov
jo
cmp
add
push
imul
popa
fcomip
lahf
xlat
push
adc
lea
les
ss
in
jmp
pop
inc
pop
test
push
push
sahf
pushl
jae
movsl
pop
movsl
fstpt
call
inc
ljmp
jmp
fcoml
add
jae
les
mov
ret
pop
mov
loope
mov
push
dec
xchg
repnz
mov
cld
mov
es
lds
cs
push
fsubp
dec
std
out
add
cmp
xor
std
or
dec
fsubp
popf
fdivs
jecxz
fwait
cmc
jno
push
addr16
ljmp
clc
movsb
cmpl
movsl
jle
xchg
out
pop
popl
enter
pusha
aaa
mov
imul
jl
gs
movl
cwtl
mov
lods
push
sub
push
mov
pmaxub
lock
jae
mull
or
mov
sub
inc
fsub
and
adc
mov
adc
out
lcall
stc
test
shl
mov
scas
aaa
cmp
outsl
xor
lock
cmp
adc
std
into
sub
orb
cmp
mov
test
sub
mov
lock
mov
popa
pop
mov
push
mov
fsts
loope
dec
mov
cmp
js
je
pop
mov
xchg
out
or
ror
inc
cmpsb
sub
in
repz
pop
adc
fnstsw
mov
mov
je
jo
out
daa
pop
jge
jl
pusha
pop
mov
into
in
adc
xchg
popa
xchg
stos
mov
adc
rorl
push
cmp
mov
and
aas
pop
xchg
jb
int3
mov
push
push
dec
lea
push
lret
gs
out
and
push
mov
push
mov
jmp
popf
scas
xchg
es
pop
push
xchg
push
sub
lahf
adc
out
pop
idiv
shl
mov
cmp
add
pop
push
and
push
mov
fsubrs
aad
jp
scas
ror
sub
adc
cmpsb
pop
or
xor
cmp
lods
add
xchg
lcall
lcall
iret
lret
xchg
aaa
pop
lds
push
data16
jbe
xor
and
jge
aam
adc
dec
inc
imul
and
pop
push
pop
in
lods
lcall
ret
aad
jne
pop
jmp
sub
ja
lods
stc
mov
xchg
call
aas
push
jl
inc
fstl
cmp
es
or
sub
push
insb
ds
loopne
xor
pushf
mull
adc
cmpsl
dec
stos
movsl
test
and
das
sbb
cmpsb
pusha
cmc
mov
mov
lds
sbb
pop
push
test
sbb
loope
mov
loope
jne
jmp
popa
jne
jge
aas
xchg
adc
notl
xor
gs
and
ja
jb
sarb
outsl
mov
ficomps
enter
xchg
xor
jns
mov
xor
rolb
int3
loopne
arpl
sub
inc
sub
fisttpl
jno
mov
js
sub
jns
jnp
dec
dec
fwait
rcrb
or
lret
push
xchg
jg
mov
pop
dec
cmpsb
bndstx
ret
pop
aas
test
sub
in
aaa
insl
iret
xor
pop
sbb
fcmovb
aad
push
mov
js
mov
sbb
dec
inc
outsb
rclb
clc
adc
jno
cmp
fistpll
cwtl
push
dec
adc
adc
sub
push
aaa
outsl
incb
xchg
lahf
xlat
or
ficomps
sbb
pop
clc
mov
fwait
js
aas
cltd
mov
sbb
pop
sbb
mov
fsts
neg
rcrb
es
ja
lret
and
fdivrl
push
cmp
mov
push
nop
out
jg
inc
cltd
xchg
mov
mov
add
or
dec
push
xlat
imulb
les
ret
fnsave
jp
pop
arpl
mov
and
inc
pop
lret
sbb
mov
pushf
stos
push
add
mov
mov
pushf
icebp
dec
lea
aaa
cmp
lock
test
add
ret
xchg
lcall
pop
pop
and
outsb
sbb
cmp
stos
sbb
nop
sbb
xor
xchg
push
adc
clc
mov
mov
mov
orb
mov
or
dec
ss
mov
fcomi
ja
dec
rcrl
cwtl
xor
icebp
adc
xlat
push
push
sub
push
and
cmpl
pop
int3
ljmp
pop
and
out
adc
pop
jl
cli
lcall
shlb
jle
sub
test
addr16
add
into
gs
pop
and
ret
xchg
loop
sti
ret
or
les
jmp
popf
jne
aaa
inc
das
lods
add
testb
testb
enter
sbb
jne
outsl
adcl
xchg
cli
aad
add
add
in
dec
mov
adc
pop
test
hlt
sbb
xchg
lds
jp
nop
pop
mov
outsl
push
inc
lds
popa
rorb
jle
je
outsb
arpl
filds
in
sar
pop
and
or
push
lock
xor
jecxz
inc
call
hlt
sbb
int3
out
adc
scas
mov
fwait
sbb
in
cmp
cmp
pop
pusha
mov
ds
ret
mov
cmp
imulb
adc
les
dec
push
inc
roll
loop
adc
scas
scas
test
cmp
sbb
aaa
pop
lock
inc
mov
sbb
fimuls
jbe
sub
imull
pop
cwtl
stos
mov
jmp
sbb
jbe
jmp
push
add
es
imul
pop
adc
pop
loop
push
rcr
jno
mov
push
out
in
into
inc
pop
mov
or
and
inc
rorb
shll
sub
inc
jge
popf
dec
jp
icebp
fsubrs
test
sbb
cltd
in
les
int3
dec
add
scas
xchg
cmpsl
dec
test
loop,pt
call
mov
lods
jnp
cmpsb
test
mov
push
dec
xchg
adc
sub
sbb
repnz
rolb
fmull
mov
divl
xor
jmp
cmp
push
cmp
fdiv
dec
movsl
repnz
lods
or
mov
or
in
mov
mov
add
dec
sahf
cmpsl
mov
mov
add
arpl
xchg
push
cmp
push
cld
sti
dec
shrl
cli
insw
xchg
je
push
insl
popa
in
ljmp
movb
popf
jnp
and
ja
ja
clc
pop
lret
je
lahf
xchg
pop
in
sahf
scas
out
or
push
mov
test
pop
ljmp
jle
clc
in
jns
mov
push
fwait
jbe
cmp
cmpsl
and
mov
ud1
sub
icebp
pop
mov
add
inc
mov
xor
lret
inc
xorw
adc
or
dec
iret
mov
pop
add
inc
mov
mov
add
cmp
pop
iret
xor
ja
enter
xchg
xor
mov
fcoml
test
inc
jl
adc
sub
mov
jne
cltd
xchg
das
gs
xchg
sbb
dec
ds
pop
shl
mov
xlat
jo
lock
arpl
mov
cmp
cmp
cmp
pop
cltd
mov
jnp
cmp
andb
shrl
popa
rclb
adc
cld
jns
fnstcw
push
dec
adcb
shr
cmp
sbb
mov
sub
loope
mov
sbb
mov
int
mov
dec
in
jp
lcall
sub
cs
lcall
scas
mov
jge
or
rolb
lahf
push
dec
adc
adc
cmp
das
imul
sbb
icebp
add
and
pop
or
lret
aas
test
popa
mov
es
scas
lods
or
shl
cmp
clc
cmpsl
mov
fwait
push
push
xorl
ljmp
pop
sbbb
push
aad
push
jecxz
stos
cmpsb
jecxz
or
and
es
enter
sbb
xor
cmp
xchg
xchg
lret
jnp
xchg
dec
testb
sahf
xor
repnz
push
dec
clc
xchg
sbb
xor
dec
mov
ja
adcb
es
dec
dec
inc
ja
inc
sub
call
shlb
add
jno
movl
sub
sub
sub
mov
jae
jnp
pop
dec
mov
lods
dec
cmp
pop
xor
sbb
adc
mov
jmp
fwait
cmc
mov
xor
bswap
xchg
dec
popa
add
lds
or
movsb
push
fstl
jno
repz
cli
and
jmp
pop
pushf
sub
mov
loopne
mov
cmp
adc
or
xor
fwait
mull
sbb
hlt
outsl
xchg
sbb
in
addr16
cmpsl
xor
sti
popf
mov
xor
xchg
dec
stos
xchg
cmp
shll
add
jl
add
push
xchg
push
sbb
add
cmp
jle
sti
add
cld
cmp
pop
pop
rolb
mov
push
or
cmp
je
fstl
xor
les
mov
or
shl
stc
enter
cmp
outsb
pop
xchg
loope
and
dec
mov
inc
pop
sbb
cmpb
aad
wrmsr
mov
cmpsl
pop
cmp
xchg
mov
aas
push
push
push
mov
dec
xorb
push
sub
mov
cmp
stos
xlat
mov
mov
add
pop
jmp
test
sub
fmul
arpl
std
mov
mov
addr16
fildl
lcall
stc
xor
cmp
jmp
xchg
pushf
xor
push
cmp
aad
orb
push
lret
in
lret
mov
inc
enter
loop
push
lods
mov
pop
fwait
push
test
lret
in
rorb
scas
or
sub
push
sub
pusha
xchg
stos
cli
orl
nop
leave
aas
call
jae
add
xchg
adc
loop
sub
mov
mov
pop
sahf
lret
mov
stc
mov
sub
cmp
in
sub
pusha
xor
test
jg
push
dec
nop
jle
loopne
xchg
int3
mov
mov
out
cmp
aad
sbb
hlt
subl
iret
push
xchg
add
sub
jl
fcoms
lret
push
imul
ja
xchg
push
lret
ret
bound
in
mov
notl
add
sbb
pushf
scas
pop
inc
pop
nop
jne
addr16
or
sub
dec
insb
add
sbb
dec
stos
stc
outsl
push
cmpsb
cmpsl
ficoms
lock
or
mov
fldl
outsb
mov
unpcklps
int3
push
xor
stc
ss
iret
icebp
js
jne
minps
push
fbstp
inc
jmp
jb
jl
rclb
aad
cmp
ds
fisubrl
or
loope
pop
cmc
decl
cld
xor
fs
sub
jl
xor
repnz
enter
adcb
shll
xor
int
loop
jnp
insl
iret
mov
sahf
pop
sub
stc
xor
enter
pop
add
cmp
and
mov
imul
negb
push
xchg
loope
dec
push
inc
adc
outsl
cmp
jae
xor
cmpl
stc
mov
out
fs
fwait
lods
xor
stc
sub
in
fucomp
stc
inc
pop
stos
test
repnz
lock
test
dec
test
mov
fiadds
ljmp
pop
xor
jmp
fisubrs
out
xor
subl
icebp
orl
jno
ja
lea
push
mov
or
or
out
pop
sbb
cmp
cmpsb
frstor
ret
ljmp
mov
insl
outsl
outsl
jl
xor
nop
adc
iret
cmp
out
push
jbe
pop
inc
inc
mov
add
icebp
sti
aas
mov
mov
in
fmull
ja
mov
ds
std
pop
mov
jecxz
xchg
and
adc
cwtl
lods
lock
insl
in
xchg
cmpsb
cmc
xchg
and
xchg
cld
ss
xchg
ss
mov
push
and
ret
jmp
sub
ret
ret
xchg
addr16
pushf
sub
pushf
in
movb
push
xor
mov
divb
cmp
movsl
mov
enter
push
mov
jb
pop
mov
es
mov
and
xor
pop
mov
gs
aam
out
xor
adcb
daa
cmp
inc
inc
inc
jle
cmp
sbb
dec
cmpsb
out
xchg
push
pop
adc
mov
sti
lds
mov
je
cmp
in
xchg
sahf
scas
orb
add
scas
pop
ret
inc
xor
lea
stc
paddw
mov
imul
xlat
sub
cli
clc
pop
les
jecxz
inc
in
call
cmp
lock
mov
int
test
negl
mov
push
pop
push
lods
mov
hlt
xor
shl
inc
rclb
xchg
fs
and
sbb
enter
fidivrl
and
mov
xchg
sbb
sub
inc
icebp
outsb
jne
jae,pn
mov
add
adc
call
aas
xor
pop
pop
pop
push
in
cmp
aad
mov
cmp
sbb
inc
jl
js
cmpsl
cltd
iret
jg
or
mov
sbb
js
inc
mov
jle
repz
pop
cs
push
in
or
and
dec
inc
push
out
add
jb
mov
iret
push
push
sub
cmpsb
adc
stc
or
or
repnz
and
push
sub
repnz
filds
or
aaa
mov
imul
imul
stos
aam
lea
out
add
stos
mov
xchg
das
jno
inc
test
mov
in
jnp
ljmp
ret
xchg
in
nop
je
push
fs
cltd
ja,pt
addr16
lods
lahf
mov
imul
cmp
aas
add
icebp
sbb
jl
jecxz
push
pop
loopne
inc
dec
movsb
sbb
push
cs
xlat
pop
stos
clc
dec
pop
or
push
mov
mov
dec
pop
mull
aas
testl
mov
fidivrl
into
mov
out
inc
rcrl
add
rcrb
lret
dec
and
loop
gs
out
repz
dec
call
mov
mov
ficoml
in
repnz
inc
mov
inc
pop
pop
adc
sti
pop
pop
dec
movsb
jne
jl
or
xchg
lock
fidivrs
dec
jo
cwtl
push
repnz
jno
mov
inc
jl
add
jmp
dec
fstps
sti
loop
fcmovne
leave
ss
push
xchg
sti
daa
cmpsl
lds
cmp
movlps
rorb
cwtl
mov
es
shlb
push
inc
mov
cmpl
mov
adc
xor
popa
and
dec
push
int
fists
stc
and
add
dec
sahf
mov
loop
xor
pushf
inc
cmpb
pop
sbb
cltd
dec
push
pushf
jb
adc
aaa
in
arpl
les
and
ret
cwtl
jle
pop
call
ret
sub
inc
xchg
cmp
mov
cmp
insl
cmp
cmp
pop
mov
cmc
jecxz
pop
pop
not
mov
xchg
jnp
xlat
sbb
mov
and
add
in
lahf
adc
mov
push
pop
add
xchg
or
ja
xchg
jns
aam
rcrl
movsb
pop
mov
push
fdivl
inc
lods
dec
icebp
mov
lret
xchg
add
das
lcall
inc
xor
int
sbb
jnp
aas
pusha
fbld
mov
add
gs
imul
pop
add
add
fwait
mov
or
leave
fdivrs
adc
out
and
imul
and
ds
add
and
mov
push
test
cmp
and
push
mov
jo
sti
in
leave
cmp
mov
push
jl
pushf
xor
nop
or
fildl
out
push
outsb
repnz
xlat
out
mov
jae
aaa
in
mov
mov
cmp
sbb
push
adc
mov
ret
call
stos
lds
xchg
lcall
mov
fisubl
mov
dec
add
rcll
mov
or
pop
dec
test
mov
mov
adc
lahf
xchg
jnp
add
cmp
jle
xor
ret
cmpsl
pusha
sti
dec
call
aas
pop
int3
popl
addr16
and
dec
aaa
clc
xchg
mov
pop
lock
insb
pop
ret
js
xor
je
xchg
loopne
inc
cld
mov
jbe
and
cmp
in
sbb
and
popa
mov
popf
repz
fistpl
mov
imul
xor
adc
xor
mov
jno
shlb
add
gs
pop
es
jnp
mov
sub
sbb
xor
xchg
or
shll
xor
leave
sbb
iret
mov
sub
adc
pop
mov
dec
add
cmp
pop
mov
orb
jns
add
div
jo,pt
pop
sub
das
mov
outsb
mov
in
aaa
or
test
das
aaa
jg
pop
loop
dec
inc
subps
push
jne
mov
mov
andl
les
or
jb
mov
adcb
lcall
cmpsb
repz
or
mov
cmpsl
lahf
jnp
inc
pop
inc
rorb
lcall
mov
leave
aaa
push
dec
jns
xchg
push
push
jnp
dec
pop
mov
push
pop
aad
jle
jb
loop
mov
cmc
add
aam
test
testl
je
out
pop
push
cmp
mov
not
push
or
rolb
cmp
leave
popa
sarb
fisubl
mov
fcmovb
cmp
push
inc
sub
inc
jl
mov
fcoms
inc
inc
movsl
stc
add
incb
inc
ret
mov
push
fcompl
in
mov
insl
mov
pusha
out
sub
mov
push
test
cmc
mov
ja
pop
mov
sbb
add
test
inc
fcomps
into
scas
mov
loop
dec
cmp
mov
cli
movsl
in
pop
mov
sub
pop
adc
mov
hlt
mov
rcll
negb
lods
dec
xchg
fidivrl
inc
fisubs
push
fcoms
or
outsb
push
shll
popa
pushf
add
clc
stos
out
ret
mov
data16
or
push
cli
and
iret
xchg
jmp
mov
icebp
imul
outsl
cmpsb
pop
mov
mov
and
test
jae
add
lods
jp
xchg
imul
stc
cmc
lock
jmp
sub
aad
addr16
aad
adc
sarl
add
outsl
mov
frstor
xor
outsb
aaa
sahf
mov
sbb
mov
scas
xchg
enter
lret
into
adc
mov
mov
sbb
es
jge
pop
fdivrp
mov
outsb
push
push
repnz
repnz
jmp
xchg
cli
push
cmp
pop
add
stos
adc
lret
dec
add
inc
jae
push
or
cmp
xchg
inc
icebp
cltd
and
popa
outsl
mov
fmulp
sbb
inc
xchg
ja
inc
or
lods
dec
cmp
inc
cmp
jb
scas
mov
pop
add
add
lret
or
mov
fs
testl
je
incl
mov
orl
push
popa
fildl
mov
jge
jecxz
orb
and
orl
xor
gs
adc
pop
enter
mov
dec
imul
pop
push
jg
sbb
mov
leave
test
mov
in
mov
aam
loop
jno
das
test
outsb
addr16
testb
icebp
testb
xor
jp,pn
icebp
xor
sub
psubusw
repz
rcll
xor
or
cmpsl
push
aam
adc
cld
push
sub
adc
push
test
add
pop
sub
push
sub
mov
pop
scas
sbb
jo
push
jb
iret
dec
clc
mov
cli
lods
mov
shll
stos
cmp
loope
add
pop
outsl
iret
push
xchg
mov
int
out
notb
mov
sti
lret
test
mov
cli
mov
outsl
clc
or
lret
xlat
xlat
test
xchg
daa
mov
movsl
sarb
shll
and
xor
xchg
jo
sbbl
inc
dec
pusha
sahf
inc
repz
ja
cmpsl
cmp
jo
int
sti
negb
orl
shlb
leave
cmp
lcall
jle
add
icebp
sahf
jnp
add
inc
imulb
mov
andb
adc
int
insl
push
mov
and
and
adc
mov
mov
jo
lret
cmpsl
pushf
rolb
test
add
push
xlat
mov
shlb
test
aam
cld
adc
dec
or
pushf
test
add
cmp
cmpsl
out
mov
lods
mov
pop
ficoml
lcall
sbb
mov
pop
rorl
mov
mov
push
scas
xchg
pop
or
addr16
add
mov
notb
clc
outsb
rolb
aam
inc
mov
pop
imull
mov
push
les
mov
xchg
movsb
jg
cmc
lret
lahf
outsl
inc
subl
xlat
call
xchg
push
sbbb
dec
mov
xchg
adc
dec
cmp
mov
movsl
mov
in
dec
fdivrl
insl
mov
icebp
lea
roll
es
cmc
xchg
enter
icebp
jns
aad
imul
push
inc
sbb
inc
jle
fsubrl
jg
lahf
push
test
arpl
orb
in
outsb
cmp
in
ja
loope
fmuls
and
rorb
xlat
or
push
add
mov
sbb
xadd
addr16
dec
stos
push
test
push
shlb
sbb
and
jp
imul
sub
jnp
cmpsb
sub
rolb
std
xor
rclb
push
push
push
jle
outsb
jo
decb
cwtl
mov
mov
fwait
dec
daa
xor
in
call
mov
bound
xchg
pop
add
leave
pop
add
pop
jg
insb
push
fsubl
push
mov
inc
mov
and
pusha
out
call
int3
fxtract
push
sbb
xor
or
sub
xchg
movsb
outsb
push
lods
je
mov
icebp
mov
jne
cmpsb
adc
notb
push
ss
daa
ljmp
in
xchg
jp
pop
call
stos
mov
inc
jb
xlat
inc
fistpl
adc
cmp
leave
xchg
adc
out
andl
movb
mov
in
push
repz
cmpsb
xor
adc
lcall
mov
outsb
or
mov
xchg
out
xor
xchg
add
mov
jo
and
fidivs
dec
pop
fildll
jl
sub
push
push
popa
cmpsb
and
push
mov
xor
rcr
mov
dec
test
pinsrw
mov
lahf
sbb
sbb
cmp
test
push
imul
pop
sbb
stos
sub
in
int
pushf
or
clc
add
pop
insb
or
arpl
sub
pop
dec
nop
sbb
into
fcoml
add
cmp
xor
subl
movsl
ret
nop
addr16
add
hlt
fisttpl
fs
shlb
or
xor
dec
in
jne
cmpsb
pop
push
les
push
loopne
xor
je
xchg
mov
das
leave
mov
call
dec
loope
mov
es
aam
mov
aam
in
out
int3
push
ds
xor
shrl
push
les
sbb
aaa
es
lods
cmp
jge
out
sub
sub
push
inc
cmp
in
mov
cmpsl
add
xchg
data16
mov
xchg
sbb
push
jmp
sbb
xorb
pop
in
mov
xchg
inc
inc
pop
jle
xor
jg
ret
aad
popa
unpcklps
push
inc
pop
sbb
lret
xchg
jle
mov
loop
arpl
ret
cld
test
add
es
pop
inc
cld
outsb
in
mov
adc
add
ljmp
rcr
in
xor
inc
ret
adc
in
out
adc
out
adc
cmc
jns
cmc
sbb
loop
jmp
mov
cmp
out
aas
icebp
ja
push
repnz
rclb
add
dec
test
pusha
stos
inc
dec
push
add
xchg
lea
sub
roll
popa
iret
cmc
cmp
enter
int3
adc
adc
dec
jno
xor
xchg
dec
add
dec
push
mov
push
loop
data16
es
pop
mov
or
shlb
leave
mov
inc
and
and
mov
mov
cmp
mov
xor
call
push
stos
and
sbb
jae
out
cmp
aad
sbbl
outsl
sub
dec
pop
popf
iret
xlat
add
shrb
sbb
aam
testl
push
pop
jns,pt
mov
push
inc
xchg
cmpsl
out
pop
and
jg
sub
mov
jecxz
jne
stos
pop
lds
test
push
dec
lahf
mov
jne
mov
and
inc
rcrl
into
inc
in
adc
adc
imul
lret
cmp
rorl
push
dec
inc
mov
and
rcrb
inc
mov
sahf
clc
aas
push
notb
xchg
cmp
rorl
loopne
mov
or
lds
sub
sub
jnp
sub
hlt
out
sub
cmc
int
pop
cltd
inc
and
int3
jns
sub
xor
sub
adc
outsl
dec
dec
cmpsb
and
add
cmp
pushf
hlt
lcall
and
mov
sbb
inc
adc
push
fdiv
mov
cwtl
adcl
jae
lods
xchg
dec
out
out
gs
mov
les
cmp
jmp
mov
cmp
push
fmuls
pop
adc
call
or
cmp
xchg
cmc
add
rorb
lret
xchg
das
xchg
dec
lods
inc
stos
imul
fidivrs
jo
out
mov
stc
testb
sub
jge
sbb
jp
lods
mov
fcomi
ja
mov
scas
lods
xchg
add
xchg
arpl
ss
dec
ret
push
push
aam
cld
fnstenv
cld
mov
lods
arpl
outsl
rol
add
sub
push
cvttps2pi
idivb
mov
fcomps
xchg
push
pop
rolb
iret
scas
inc
add
test
mov
mov
sarb
gs
ss
mov
dec
fdivrl
inc
mov
sti
inc
frstor
dec
push
mov
mov
sbb
xor
jns
scas
mov
and
in
hlt
jb
mov
mov
mov
xor
xchg
iret
lcall
shlb
jg
test
incb
or
test
rolb
roll
mov
pusha
cmp
sarl
or
mov
jbe
rcrb
insl
es
icebp
xor
insl
test
sub
mov
notl
pop
sub
mov
rorl
dec
inc
fwait
dec
or
push
or
cli
sahf
mov
mov
out
insb
sbb
movsl
xlat
jns
inc
lcall
out
mov
inc
adc
in
xor
popa
les
popf
stc
outsl
cmp
inc
xchg
cmp
xchg
or
xor
test
out
outsb
xchg
pop
mov
pop
inc
add
ret
cmp
sarl
xchg
mov
out
sbb
and
movsl
mov
lods
xchg
aaa
loopne
addl
mov
cmc
int
inc
sub
dec
imul
jmp
int3
cmp
icebp
out
mov
xchg
les
xor
cmpsl
inc
lea
cmp
inc
xorb
inc
js
jbe
cmp
and
rcr
adc
cwtl
xchg
mov
fdivs
dec
jge
orl
loopne
pop
das
test
dec
outsb
or
xchg
xchg
add
fsubrs
dec
jbe
mov
xchg
dec
dec
push
sbb
lock
xchg
xor
mov
and
cld
lretw
jb
xchg
in
sbb
sbb
dec
cld
fchs
cmp
nop
sub
adc
sub
out
pop
dec
cld
sub
in
mov
fimull
sbb
sahf
bound
lsl
data16
xor
scas
test
pop
stc
cmp
jne
je
insl
jmp
sbb
jbe
loop
outsl
mov
xlat
mov
and
jbe
mov
add
cmp
faddl
dec
mov
cwtl
inc
scas
loop
in
cld
inc
jle
inc
cmp
enter
push
push
stc
test
ljmp
xchg
push
sbb
insl
hlt
xor
ret
jg
addr16
jl
iret
add
paddusb
shll
lods
pop
stc
mov
cwtl
insb
lods
inc
push
shl
mov
xor
sbb
lret
mov
in
push
mov
push
push
leave
mov
or
lret
mov
sub
mov
sub
ja
lret
lret
mov
cld
arpl
and
pop
cmp
push
xchg
pop
cli
inc
lret
fiaddl
add
sbbb
xchg
mov
xchg
jae
leave
xor
cmp
xlat
or
cs
in
add
xchg
sub
cmpsl
or
jb
fsts
lret
mov
inc
mov
xchg
mov
pop
sbb
fsubrs
idivl
subl
jb
scas
sarb
dec
or
lret
xchg
mov
test
shll
outsl
mov
and
pop
aas
mov
mov
mov
movsl
daa
lds
cmpsb
fs
imul
push
divl
push
divb
pop
aaa
xchg
jnp
and
pop
out
pop
fisubrs
dec
adc
enter
sbb
add
loope
xor
rcll
cs
sub
mov
push
hlt
jge
fldl
stc
std
addb
xchg
xchg
ljmp
insl
cld
repz
popf
pop
outsb
mov
sbbb
and
mov
xlat
and
mov
xchg
mov
rolb
mov
repz
popf
jl
xor
push
sub
xor
cmp
push
test
insl
inc
cmp
inc
push
push
inc
sti
pop
jle
aas
lock
jge
push
test
add
add
js
cmc
fldt
xchg
lea
int
pop
outsl
test
push
pop
int3
pop
mov
xchg
sub
out
mov
jl
mov
xchg
inc
jnp
cmpl
decb
mov
xchg
fistps
and
xor
arpl
mov
jnp
dec
add
pop
lea
mov
pushf
dec
and
push
ljmp
cwtl
push
in
inc
test
sbb
or
imulb
es
sti
fnstcw
mov
test
and
sub
xchg
in
repz
je
xor
in
addr16
mov
dec
mov
test
mov
xor
popf
inc
aas
xchg
popf
rolb
adc
cld
imul
mov
push
cmpsl
in
dec
fwait
xchg
jle
inc
daa
mov
icebp
lcall
push
popa
lods
rcrb
sbb
mov
scas
xlat
repz
or
xchg
mov
mov
sub
or
mov
out
jmp
sbb
cwtl
into
mov
addr16
jo
adc
mov
pop
lcall
loop
jb
loope
andb
push
mov
into
scas
rcr
xchg
cmp
adc
adc
xchg
sbb
fs
repnz
push
jecxz
cli
mov
ljmp
ljmp
xchg
xchg
fsubrl
fcomps
jns
jae
mov
inc
std
repz
outsb
push
movsb
mov
psubsw
cli
ljmp
jne
lret
mov
sti
pop
sbb
out
fldenv
stos
xchg
lods
jns
jmp
mov
mov
cmpsb
daa
pop
mov
push
in
int3
cmpsb
in
or
sub
mov
sahf
pop
bound
inc
lods
out
xchg
or
cmp
add
cwtl
mov
scas
jns
rcll
pop
xorl
lods
and
pop
sub
push
mov
fwait
outsb
insb
jle
push
mov
imul
ret
jecxz
stos
or
push
jle
adc
mov
inc
pop
ds
sub
leave
mov
ret
lahf
mov
jle
shl
xchg
push
and
mov
jae
mov
mov
pop
sbb
xchg
lock
icebp
out
shll
or
je
push
push
add
and
into
inc
insl
test
sti
mov
dec
jp
add
xchg
mov
or
inc
lods
xchg
adc
scas
and
pop
sub
mov
icebp
int
mov
ss
inc
enter
pop
loopne
jbe
cmp
gs
aad
daa
das
imul
add
in
and
jg
or
pushf
push
loop
push
notb
inc
iret
and
mov
aaa
push
pushf
mov
lods
imul
xchg
imul
loope
in
push
push
mov
ja
mov
and
popf
adc
adc
out
xor
lea
outsb
and
push
cmp
push
mov
mov
jl
and
dec
mov
xchg
into
test
imul
adc
into
test
div
stc
ret
push
mov
and
and
jnp
call
dec
test
fwait
push
xor
cld
or
mov
xchg
inc
dec
mov
fistps
mov
xor
xchg
xchg
jne
jle
sub
cli
sahf
inc
add
lock
jno
hlt
inc
mov
sahf
das
in
dec
ret
dec
jns
andb
hlt
test
lcall
fbstp
dec
ljmp
scas
cmpsb
popa
jnp
std
cmc
push
jle
pop
add
ret
sbb
mov
dec
add
push
or
pop
rclb
inc
arpl
cwtl
lret
mov
dec
call
fdivrl
movsb
cmp
sub
dec
sub
jae
mov
rol
fs
and
ds
ja
dec
dec
adc
xor
cltd
lods
lsl
out
jl
and
nop
cwtl
add
stc
push
or
mov
xor
cs
loope
adc
inc
orl
fisubl
fidivrs
push
add
lock
icebp
or
loop
or
xor
out
jne
hlt
inc
out
loop
cltd
pop
pop
push
stc
push
pop
call
xor
daa
sbb
jne
mov
push
insl
mov
loop
aas
data16
test
imul
fdivrl
nop
push
dec
maxps
notl
insl
mov
lret
shll
popf
cld
das
popl
cmpsl
inc
clc
sub
xchg
cwtl
pop
inc
xor
xor
outsl
xchg
xor
icebp
lods
out
loope
mov
jecxz
outsb
xor
mov
xor
mov
lret
sbb
add
nop
fcomp
adc
mov
jb
lods
lahf
sub
mov
leave
and
sbb
call
cltd
lock
mov
daa
dec
std
lcall
mov
inc
add
xchg
add
repz
shll
or
shlb
cmc
stos
mov
push
insb
loope
int3
test
jmp
dec
xor
adc
and
mov
inc
push
dec
mov
call
push
cwtl
sub
sbb
push
or
or
scas
decl
data16
sbb
and
sub
out
cli
imul
cwtl
leave
enter
or
push
pop
arpl
mov
aaa
mov
mov
insb
test
jge
fmul
nop
xchg
lahf
xchg
jp
mov
fstpt
push
lcall
push
dec
jns
push
fbstp
insl
leave
pop
lcall
lea
adc
enter
jne
repz
and
ffree
call
inc
loopne
nop
xlat
push
adc
ret
xor
push
jp
in
dec
mov
or
mov
ret
mov
and
gs
loope
xor
xchg
lcall
mov
mov
add
ja
lock
pop
fcmovnbe
cli
sub
call
repz
incb
loope
sbb
outsl
pop
test
push
pop
sbb
fwait
mov
xchg
inc
repz
dec
lods
out
dec
mov
adc
mov
ss
and
test
pop
shll
or
mov
and
sub
mov
fistpll
mov
mov
jl
pop
test
mov
inc
outsb
xor
scas
dec
mov
jmp
jo
mov
xor
out
out
stc
push
jge
or
and
data16
loop
scas
add
out
jecxz
add
mov
dec
gs
pop
sbb
sbb
xor
jl
ficomps
movsb
pop
xor
js
xor
jle
mov
adc
xchg
aad
rcl
mulb
mov
pop
aam
lea
adc
cmp
or
inc
xchg
jo
pop
sbbl
sub
jecxz
je
dec
movsb
lds
in
repnz
rol
fucomp
sub
add
xchg
and
mov
nop
xchg
inc
inc
jp
das
xor
scas
mov
cmp
lods
cmc
popf
iret
mov
lret
leave
mov
jp
sub
and
push
lret
add
lock
xchg
add
xchg
jl
pop
xchg
lock
xlat
idivb
lret
cmp
fldt
bound
lret
push
clc
mov
sbb
out
dec
in
or
mov
xchg
inc
fwait
dec
sbb
in
ljmp
aam
dec
loop
push
cmc
jmp
imul
lds
scas
mov
mov
add
scas
test
xchg
test
ret
pop
mov
shll
ficoms
out
loope
xchg
pushf
bound
cwtl
hlt
in
sub
shrb
xchg
xchg
lods
inc
push
push
cmp
mov
or
pop
inc
jne
repz
xchg
cli
aaa
adc
jmp
mov
sbb
xor
rolb
mov
mov
push
call
pop
adc
and
mov
jecxz
cmp
leave
das
daa
xor
dec
stos
xchg
mov
mov
add
loope
sub
cmpsb
or
mov
jg
mov
mov
out
stos
lea
inc
or
bound
lock
jb
xchg
loop
adc
cmpsb
push
movsl
into
fisubl
test
aas
add
pushf
mov
ss
arpl
repnz
mov
test
pop
or
fmulp
dec
ds
les
icebp
cwtl
imul
cmc
data16
in
inc
sbb
adc
scas
iret
mov
lret
adc
fidivrl
insb
insb
divl
push
rcl
rorl
dec
push
mov
mov
outsb
hlt
out
or
xor
adc
add
lds
mov
sub
adc
xchg
pop
cmp
les
dec
pop
scas
mov
in
xor
sbb
mov
lcall
pop
sbb
mov
xchg
mov
and
ret
xor
jns
inc
dec
pusha
jle
mov
adc
data16
push
insb
lret
cli
stc
xchg
add
and
xchg
outsl
ljmp
jecxz
mov
inc
mov
pop
ja
adc
and
enter
in
push
scas
inc
imul
sarl
mov
loopne
mov
daa
lods
out
sbbb
ficomps
mov
jne
xchg
lds
inc
ret
lret
sbb
sub
shlb
add
shlb
push
fistpll
subl
sub
daa
sbb
jp
in
jmp
js
pushf
or
test
jb
jmp
jbe
mul
jae
jl
test
bound
scas
dec
int3
dec
pop
std
icebp
add
sahf
ja
jnp
dec
insb
pop
jmp
js
sbb
pop
cltd
out
daa
add
mov
xchg
popa
ret
dec
std
out
sbb
cmp
outsb
push
mov
pop
push
nop
std
lret
mov
les
inc
jae
aas
dec
rcl
mov
mov
in
ret
mov
mov
ljmp
push
fmul
mov
mov
xor
hlt
push
xor
aas
inc
xor
add
xor
pop
jge,pt
stos
dec
and
divb
push
or
and
orb
fnstenv
les
daa
cmpsb
jp
xor
add
cmp
fistl
nop
jae
or
or
fs
daa
aad
adc
push
and
pop
cmpsb
adc
fs
pop
cmp
lret
jecxz
mov
leave
fisubrs
inc
fcmovb
sarl
js
int3
push
pushf
in
lret
in
clc
notl
mov
sti
jb
or
btr
push
loop
call
lds
mov
movsl
je
xor
mulps
fpatan
cmp
and
pop
sub
repz
sbb
cmp
cwtl
cltd
push
call
sub
dec
loope
pushf
add
sub
shrb
outsl
adc
mov
ret
pop
out
movb
add
dec
inc
pop
mov
stos
out
add
out
nop
mov
adc
std
inc
cmpsb
xchg
lock
mov
add
and
xchg
or
inc
repnz
fs
lret
push
das
lds
iret
cs
insl
lods
xchg
inc
ret
cs
adc
jb
call
jge
nop
in
insb
dec
adc
mov
mov
xchg
push
dec
add
cmp
xor
incl
or
jae
imul
lcall
add
mov
pushf
js
jnp
xor
pushf
add
lcall
ljmp
std
jo
testb
cs
adc
in
add
popf
adc
ss
xchg
push
inc
sbb
sub
inc
xor
arpl
xchg
insl
outsl
and
loope
cmp
pop
jle
sub
dec
and
sbb
stc
xlat
pop
orb
pop
mov
xchg
sbb
cmpb
xchg
dec
shll
jo
cmc
sub
addr16
outsl
dec
xchg
pusha
clc
and
fisubrl
cmc
js
cmp
jae
insb
rcr
fildl
pop
add
aaa
shlb
mov
cltd
mov
adc
xchg
dec
clc
push
mov
or
mov
ds
mov
cwtl
mov
fs
loop
lahf
and
shll
jmp
scas
rcl
push
fsubs
xchg
test
mov
add
stos
popf
xor
rcrl
mov
cmp
add
adc
fs
je
dec
out
es
dec
test
and
push
pop
ds
pop
pop
adc
jno
test
mov
inc
pop
mov
fnstenv
add
ret
dec
or
push
mov
add
mov
lods
add
pop
jecxz
mov
fs
sub
push
fists
xorb
stc
xor
push
data16
rcr
js
not
xchg
mov
mull
mov
mov
jmp
test
test
pop
cmp
rcl
jge
jge
test
pop
or
dec
lcall
or
ja,pt
and
scas
loopne
idivl
adc
cli
lea
dec
pop
into
xor
pop
xchg
test
or
test
jae
push
or
dec
popa
shll
or
jle
sbb
cwtl
lds
jge
addr16
sub
jb
and
adc
imul
jb
movsb
addr16
cmc
fstpl
lds
int3
andl
popf
and
inc
jae
stos
xchg
push
dec
pop
mov
cwtl
testb
adc
push
in
lea
mov
out
scas
mov
inc
fsts
fiaddl
sbb
scas
xchg
out
pusha
pop
ds
repz
aam
mov
data16
pushf
loope
sub
inc
mov
fildl
or
xchg
out
jno
ret
push
mov
ds
idiv
addr16
repnz
push
add
push
mov
xchg
mov
lret
sbb
pop
dec
xor
idiv
out
nop
bound
int
and
rcrb
aas
inc
dec
cmp
cmpps
inc
je
pop
lods
inc
and
aam
add
hlt
jmp
fdivrl
push
shrb
shll
add
mov
mov
popa
xor
aam
xor
push
pop
mov
and
and
dec
loopne
xlat
mov
or
or
mov
stos
push
push
xor
xchg
cwtl
in
lods
jne
pop
lret
push
das
jecxz
dec
imul
add
or
rcrb
push
cli
xor
jecxz
xchg
mov
jns
imul
inc
and
js
das
popa
push
data16
push
push
mov
pusha
repnz
out
or
lds
lcall
and
sti
mov
xor
clc
orl
sbb
ds
call
rorb
shl
or
mov
xchg
int3
mov
push
stos
enter
xchg
pop
mov
lahf
lcall
rol
out
pop
or
push
loope
bound
or
jg
pop
xchg
mov
sub
cltd
inc
aad
lret
jmp
cmp
jmp
andl
repz
gs
mov
enter
jmp
imulb
inc
and
iret
mov
mov
push
test
lret
dec
adc
cmp
mov
and
xchg
popf
xor
lea
pop
test
in
lahf
push
divb
scas
or
and
loopne
jo
outsl
in
stc
ds
jecxz
mov
and
jns
sub
subl
lret
inc
shrl
sub
push
sbb
inc
popf
pop
sbb
adc
push
xor
mov
js
push
movsl
jb
test
nop
cmp
inc
test
outsl
cmp
inc
adc
ficompl
ret
and
pop
lret
jmp
and
popa
pop
push
fwait
jae
addl
movsb
cmc
cs
pop
shlb
add
out
sbb
stos
xor
pop
add
and
popa
sahf
push
stos
mov
sub
cmp
repz
push
aas
add
call
pop
repz
imul
adc
nop
arpl
dec
sub
inc
sub
pop
push
mov
jp
mov
adc
cmc
out
shll
jne
clc
mov
out
pop
jl
sub
adc
inc
xor
lahf
dec
inc
mov
sbb
inc
lahf
add
cmp
iret
or
mov
mov
mov
xchg
lret
in
testb
add
mov
iret
xchg
sbb
mov
orl
scas
dec
mov
or
dec
sbbl
pop
scas
int
loope
xor
xor
cld
and
cmp
mov
negb
adc
push
outsl
xchg
sbb
push
jl
enter
jns
in
jmp
cmp
sbb
or
xchg
lock
std
sar
mov
loop
leave
test
outsl
or
mov
xchg
mov
into
mov
pop
sub
das
js
out
stos
xchg
add
lds
je
pop
xchg
mov
or
adc
shrl
sbb
xor
aam
xchg
push
lods
test
mov
sub
jne
and
icebp
test
sbb
je
ret
pop
pop
jg
call
sti
repnz
rol
adc
sub
add
push
popa
xchg
push
test
repz
and
sbb
sub
inc
repz
dec
aad
adc
jbe
cmpl
mov
inc
cmpsb
pop
daa
andl
test
dec
ss
scas
cmp
jl
popf
imul
mov
xchg
test
inc
or
add
jo
clc
idivl
iret
fists
ja
ss
inc
pop
add
pop
pop
push
fstpl
leave
mov
imul
in
pop
pop
push
fcomi
dec
pop
fdivrl
push
sbb
xor
jecxz
rcr
outsl
push
les
xchg
inc
out
inc
push
jno
hlt
inc
xchg
push
xchg
push
jge
inc
push
mov
mov
mov
ret
dec
dec
cmp
int3
cmp
add
call
loope
lret
sub
daa
cmp
jnp
int3
fcmovb
aas
push
xor
xchg
inc
cwtl
mov
lods
xlat
or
cmp
rclb
sahf
xchg
sub
mov
cld
andl
cld
mull
push
ja
cmpsl
mov
out
and
call
imul
sub
cmpl
xlat
imul
sbb
jne
and
xchg
and
aam
mov
cmp
or
add
cld
out
push
sub
iret
inc
out
nop
pusha
ds
and
adc
and
cmp
adc
imul
ljmp
rolb
pop
pop
pusha
push
fiadds
mov
jnp
inc
mov
into
ljmp
fidivl
ds
fs
lahf
inc
xor
out
mov
mov
jle
sub
mov
bound
adc
xchg
cmpsb
xchg
xor
mov
out
inc
mov
cld
loope
popf
push
clc
mov
add
stc
icebp
xchg
jae
push
inc
add
pop
cmp
iret
or
outsl
jl
mov
push
mov
pop
and
push
mov
xorps
cmp
data16
sub
insb
jns
jnp
je
in
inc
test
xchg
cltd
xchg
leave
mov
sarb
popf
jle
sar
incl
inc
jno
test
and
and
pusha
pop
pop
dec
imul
cs
dec
shll
stos
fldt
gs
es
mov
in
dec
lret
pop
outsb
xlat
pop
xlat
and
dec
lock
fcmovne
sub
loope
mov
pushf
and
shl
fsubp
cld
sub
push
push
jl
dec
cwtl
lahf
out
jbe
sbb
insb
and
adcb
aam
push
popa
pusha
leave
push
mov
scas
ret
mov
addb
xor
or
and
inc
enter
or
pusha
loope
add
pop
xchg
daa
jno
xchg
add
cmp
sbb
push
xchg
lcall
ljmp
mov
call
adc
test
pushf
mov
inc
pop
xlat
lods
lret
pop
mov
and
int3
mov
mov
scas
je
sbb
sets
adcl
mov
sti
out
or
movsb
fstl
dec
jne
lea
cmp
push
fisubrl
enter
jno
cmp
cltd
push
dec
das
lea
sub
xorb
or
adc
jb
inc
jle
adc
in
xorl
jno
xchg
cmpsl
push
pop
in
sub
pop
inc
cmpsb
or
mov
jmp
icebp
repz
mov
or
xor
jmp
test
jmp
shlb
les
dec
sbb
add
mov
ja
clc
mov
add
cmp
cmp
add
out
aas
cld
push
push
cmp
loope
out
lahf
push
and
lahf
lahf
data16
lods
mov
sub
enter
ret
shll
int
jnp
imulb
xchg
mov
in
cmpb
and
fldcw
loopne
pop
add
imul
dec
mov
movsl
inc
jo
les
or
aad
pop
int
stos
add
sbb
pop
cmp
rorb
jns
scas
pop
push
sbb
aad
inc
mov
push
aad
push
push
jg
mov
xchg
xchg
popa
test
cmp
out
push
aaa
or
fstl
xchg
push
call
dec
aad
pop
mov
cmp
shl
cmp
sub
out
dec
cltd
lods
cld
and
xchg
mov
mov
in
push
jb
push
sti
inc
std
pushf
and
bound
cmpsl
aaa
mov
jl
enter
sahf
lret
pop
popf
jbe
leave
add
adc
ret
test
mov
mov
enter
lret
sub
repnz
push
das
cmpsl
cmp
leave
or
or
clc
or
sbb
push
inc
call
lahf
inc
mul
xchg
les
adc
jle
adc
lods
cwtl
insb
je
dec
add
sbb
jnp
jecxz
adc
push
jg,pt
mov
int
cli
dec
sbb
repz
je
pushf
int
jnp
outsb
les
ss
mull
test
mov
outsl
rclb
inc
daa
cltd
jecxz
push
aas
daa
pmulhuw
cmp
mov
in
ficomps
mov
xsha1
cmpsb
mov
sub
cs
js
orl
fstpl
sub
shlb
add
cmc
push
add
inc
outsl
cmp
adc
adc
push
push
or
es
and
sbb
fs
push
sub
xor
dec
jg
inc
dec
sahf
inc
and
adc
cmp
fnstcw
or
loop
sub
dec
jno
lcall
mov
jbe
outsl
cmp
and
add
add
call
loope
mov
movsb
pop
dec
rorl
xchg
repz
add
repz
xchg
outsb
pop
leave
data16
push
sbb
lea
jae
xchg
lret
or
lock
mov
mov
mov
sub
stc
outsl
xor
int3
xchg
xchg
inc
lret
mov
cwtl
mov
add
inc
ljmp
repnz
sti
adc
ret
mov
jge
push
jns
sbb
fstpl
pop
jle
ret
mov
mov
sbb
xlat
cltd
jmp
inc
pop
pushf
sar
imul
mov
fstp
mov
and
test
sub
or
xchg
rorb
aam
sub
lods
jg
push
push
xor
mul
jb
and
jp
shlb
and
pop
pop
or
jnp
cmp
out
loopne
hlt
in
sbb
mov
fstps
dec
mov
ret
adc
jno
lods
pop
or
mov
stos
mov
scas
add
das
ret
or
jne
sub
sub
pop
pop
sub
sub
addr16
adc
shrb
cmp
mov
inc
push
sbb
int3
ja
and
xchg
cs
and
or
jge
mov
clc
filds
cmpsb
mov
dec
aam
jne
mov
stos
int
inc
repz
jo
in
insl
cmp
rcr
fcmove
add
and
addr16
jecxz
movsl
call
pop
add
sub
xchg
cmp
push
xor
cli
mov
mov
adc
jg
mov
or
pusha
into
push
dec
aas
mov
add
cmc
in
sub
and
dec
and
popf
inc
outsl
cmpsb
movsb
push
mov
sarb
mov
adc
push
push
jnp
cmp
scas
movsl
push
fsts
cld
mov
in
adc
mov
outsl
push
cmp
lea
cmp
add
test
pushf
pop
icebp
or
pop
inc
fmuls
dec
xor
jnp
ficoms
fadds
add
pop
sub
aaa
dec
adc
push
clc
inc
aaa
mov
fwait
movsl
std
pop
test
lahf
fsubrl
and
add
js
scas
rcr
arpl
xor
test
inc
mov
dec
xchg
mov
mov
fistps
mov
mov
iret
inc
or
call
push
cmp
std
fildll
in
mov
sub
int3
mov
dec
push
jge
inc
or
mov
orl
xlat
xor
lock
lahf
fimull
jnp
sbb
incb
aam
sbb
xor
mov
cmp
stos
adc
stos
pop
es
adc
and
and
movsb
xchg
ret
test
out
aad
cltd
adc
cli
xchg
push
dec
sbb
jmp
aam
bound
jo
xchg
push
and
cmpsl
pusha
outsb
dec
dec
fidivl
mov
inc
repnz
fs
stos
push
pop
fcmovnb
cmp
mov
jno
push
arpl
mov
sbb
add
cld
jo
xor
ret
fs
jle
cltd
push
jo
fs
pushf
cmp
rcrb
pop
xlat
into
insb
mov
in
inc
cmp
dec
push
jg
jecxz
pop
int3
in
or
fildl
add
bound
mov
pop
fwait
and
jno
in
inc
and
pop
jp
sub
lahf
xchg
lcall
jle
or
mov
push
xlat
js
jnp
pop
mov
pushf
jae
shll
ja
iret
sbb
inc
imul
cli
mov
xor
adc
jp
movsl
adc
icebp
pop
gs
sub
and
insb
aaa
push
cmp
lods
cmp
xchg
stos
lods
rclb
push
inc
mov
test
cmp
mov
gs
xchg
mov
mov
xchg
daa
cmp
sar
sub
jecxz
cmp
sti
rclb
repnz
ret
out
mov
or
add
adc
or
les
or
mov
push
ret
movsb
push
mov
sub
test
lods
push
rcrb
rcl
fimull
mov
faddl
mov
mov
cmp
cmp
push
mov
ja
inc
imul
mov
and
add
sub
jbe
jp
out
dec
or
out
push
xchg
xchg
mov
leave
mov
lods
and
arpl
add
pushf
subl
in
testl
xchg
inc
cmp
movsb
fcoml
and
cmpsl
mov
or
mov
pop
rorb
fcmovnb
js
negb
movsl
repnz
in
cmp
mov
mov
xchg
js
es
aas
clc
sub
push
sub
sub
mov
in
xchg
sbb
jno
pop
ss
xchg
adc
cld
mov
jmp
cmp
dec
popf
cmp
js
cmpsb
fisubs
xchg
push
mov
repz
jbe
xchg
or
mov
dec
test
mov
cmp
lret
pop
mov
push
repnz
int3
mov
and
xchg
ss
sarb
push
aad
rcll
iret
std
pop
sbb
and
xor
insb
popf
inc
rep
jnp
lret
lret
orl
sbb
icebp
mov
in
xchg
in
xchg
bnd
cmc
jne
mov
xlat
std
dec
mov
sbb
push
xchg
ret
sbb
dec
sbb
adc
fwait
rclb
inc
sbb
rol
push
jns
mov
cmpsb
ds
add
icebp
dec
sub
call
pop
adc
sub
jle
daa
adc
andl
in
xor
pop
dec
in
ljmp
fld
icebp
mov
pop
xchg
mov
andl
loope
dec
enter
adc
pop
lds
iret
push
jbe
and
add
push
sbb
into
fldenvs
rorl
addb
adc
dec
pop
cmp
loope
jns
out
mov
dec
insl
gs
lret
mov
fldcw
push
movsb
repz
test
mov
or
rorb
nop
div
and
xchg
in
mov
fsts
out
mov
movsb
shll
push
cmp
and
xor
jbe
mov
clc
out
das
sar
lods
add
inc
cmp
jb
mov
andl
out
pop
mov
adc
sti
lahf
ljmp
daa
cld
adc
shl
pop
pop
dec
cmpsl
aas
adc
mov
push
inc
movsb
dec
jl
jo
dec
inc
push
aaa
push
sar
sub
dec
push
pop
fcomps
inc
jl
insl
jmp
push
jecxz
pop
rcl
aam
leave
icebp
sub
int3
cmc
and
arpl
hlt
fnstcw
push
mov
mov
push
or
and
int3
or
and
dec
jae
scas
mov
aaa
push
shr
mov
mov
lahf
fwait
cmp
sbb
pop
mov
cmp
imul
sub
hlt
jp
enter
inc
outsb
dec
sub
jl
jae
roll
cmp
lock
stos
mov
mov
mov
dec
pop
or
sub
enter
int3
and
cmpsl
loope
add
ss
scas
repnz
clc
and
loop
aad
pushf
mov
adcb
pop
cli
out
jno
xchg
jp
xchg
cwtl
xchg
inc
ljmp
jno
add
out
rcrb
sarb
jle
fs
inc
mov
iret
aas
pop
stc
sbb
hlt
fidivs
dec
jne
pop
inc
shl
shrl
adc
mov
sti
mov
test
jne
fistl
inc
and
rclb
cmpsl
inc
loope
aas
mov
lret
sbb
mov
xor
ds
cmp
jnp
je
cmp
jae
or
mov
arpl
push
in
push
inc
pop
pop
cmp
stc
loopne
sarb
cwtl
not
in
lea
in
icebp
stos
lahf
std
push
jns
add
sbb
es
dec
mov
sbb
test
mov
adc
mov
aas
cmp
lret
daa
fistl
adc
pop
int3
data16
push
scas
call
xchg
add
icebp
hlt
mov
dec
add
inc
aaa
jne
addl
lock
adc
sub
das
popa
sub
cmp
mov
mov
fistpl
xchg
adc
add
fdivrs
inc
dec
shrb
pop
shlb
mov
mov
rorl
loop
jns
mov
mov
mov
xlat
mov
sahf
call
cmpsb
lods
lods
nop
push
add
fs
int3
cmpsl
pop
mov
je
pusha
je
pop
jno
fdivp
xlat
or
das
push
ds
jle
retw
ss
mov
sub
rolb
stc
js
adc
clc
in
nop
shrl
sbb
sahf
dec
add
jmp
sti
mov
stos
sbb
push
jns
mov
shrl
jne
int3
fbstp
out
sbb
out
mov
add
cmc
and
pop
xchg
in
mov
inc
sub
add
xchg
jb
roll
arpl
push
cmp
imul
movsl
ss
lds
inc
inc
ret
ja
int3
xor
mov
sub
cli
sbb
movntq
cmp
pop
test
ja
loope
inc
xchg
pop
jecxz
mov
jb
mov
lahf
pop
mov
sub
add
mov
jp
int3
xorb
nop
repz
sahf
cmp
push
sarl
aam
sub
cmpsb
mov
fwait
shr
popa
cmpsl
fcompl
mov
mov
xor
leave
les
int3
dec
fadds
jno
cwtl
addl
push
rclb
or
dec
shr
sbb
out
icebp
sbb
mov
int
inc
mov
dec
shlb
xor
mov
pop
jo
mov
imul
jmp
or
or
pop
push
cs
push
mov
lods
mov
xlat
ror
out
mov
add
xlat
pop
popa
dec
cs
arpl
add
sbb
pop
data16
adcl
shlb
das
les
jo
aaa
adc
dec
cmp
repnz
push
xor
test
jl
sti
push
loope
int
mov
mov
ret
sub
pop
addr16
mov
addr16
and
das
jno
mov
push
cmpsb
sbb
int
ljmp
push
pop
jno
sub
repnz
test
mov
jp
cltd
lods
push
fcmovnbe
je
sarl
adc
pop
out
test
movsl
mov
inc
sbb
cltd
cmp
jl
cmpb
ror
out
mov
popf
out
cmp
xor
mov
jl
cmpsl
in
in
not
pusha
fnsave
fildll
cmpsb
test
inc
test
test
aas
data16
inc
xchg
jp
rcr
imul
or
cs
js
imul
in
lock
lods
add
and
inc
mov
lret
fidivl
pop
jns
mov
jnp
or
push
cmp
xor
xorl
mov
jecxz
into
and
lock
shr
mov
mov
adc
xchg
jno
and
add
sub
iret
inc
ficompl
mov
jmp
adc
enter
subb
loopne
or
dec
sbb
xchg
int
xlat
xor
loop
cs
test
mov
