inc
and
enter
mov
or
push
add
rolb
add
or
xchg
push
and
add
inc
add
sbb
and
xor
and
adc
adc
enter
addb
and
xor
xor
sbb
inc
mov
add
add
and
inc
add
or
inc
subl
add
add
and
nop
mov
sub
and
inc
dec
addb
add
cwtl
add
mov
adc
xchg
add
mov
pop
dec
xor
les
pop
push
sbb
adc
or
adc
adc
cmp
add
inc
in
and
rolb
and
inc
add
addb
cmp
andb
xorb
mov
andb
rcll
fs
add
aam
push
es
arpl
inc
or
dec
push
add
mov
adc
xchg
push
xor
ret
mov
orb
test
xor
add
bound
push
push
mov
or
or
mov
and
push
addb
add
inc
add
adcb
inc
add
leave
lock
add
roll
sub
dec
and
sbb
xchg
mov
and
push
inc
or
add
add
sbb
add
orb
mov
test
push
mov
push
and
sub
add
or
add
add
inc
adc
and
add
add
add
adcb
xor
test
push
add
and
adc
push
xor
flds
sub
push
popa
add
inc
or
inc
xor
or
add
add
inc
test
or
inc
movsb
sub
add
or
add
test
add
add
sub
add
inc
add
or
or
xchg
adc
add
adc
add
and
and
mov
sub
inc
dec
adcb
inc
adc
test
adc
rcrl
add
adc
js
sub
adc
add
adc
add
add
adc
andl
les
mov
add
mov
sbb
add
add
adc
cs
push
and
or
add
add
inc
movsb
add
enter
lea
or
or
or
pop
enter
add
adc
and
popl
adc
add
or
sbb
sub
cmp
add
push
lock
or
add
jo
sbb
dec
adc
cmp
test
add
add
push
and
add
adc
dec
sbb
ror
adc
dec
or
bound
mov
xchg
adc
add
ret
mov
xor
or
scas
or
es
je
add
mov
adc
or
xor
xor
sub
sbb
popa
sbb
adc
and
or
add
add
and
or
and
add
mov
test
mov
or
adc
pop
add
and
loopne
cmp
inc
test
mov
add
and
push
rclb
add
adc
addb
xor
add
add
loop
mov
inc
adc
add
and
inc
roll
addb
sbb
push
test
mov
dec
test
cmp
adc
add
sbb
and
jae
call
xchg
lret
orb
add
or
and
add
shlb
dec
mov
addb
add
adc
sub
sub
inc
jb
or
and
and
or
inc
ror
lea
add
push
add
mov
mov
cli
orb
add
sbb
add
pop
inc
andb
add
mov
and
or
inc
sbbl
add
xor
add
inc
les
andb
addb
pusha
mov
mov
push
add
add
push
add
or
inc
insl
add
or
inc
add
adc
add
add
add
add
inc
add
add
xchg
add
sbb
add
add
add
or
and
inc
adc
add
add
add
pusha
add
mov
dec
adc
inc
enter
add
xor
adc
add
add
and
add
pop
and
and
or
xchg
mov
lret
and
lret
adc
add
and
sbb
shlb
mov
xchg
andb
jl
cmp
mov
ja
and
adc
add
jno
orb
add
xor
add
or
add
jo
adc
nop
add
and
inc
addb
add
add
inc
inc
xor
test
add
add
bound
add
or
add
mov
cwtl
or
mov
add
rclb
add
mov
inc
and
inc
push
inc
shlb
add
add
mov
ret
sub
popa
adc
xchg
lock
xchg
sbb
add
add
add
sub
add
or
add
sub
adc
adc
adc
ret
adc
xchg
add
add
add
and
or
enter
mov
add
aad
add
or
add
test
addl
add
ret
add
add
add
add
add
adc
es
adc
and
popa
add
adc
add
add
add
add
mov
addl
add
add
mov
sbb
sbb
test
rorb
add
add
or
sub
and
pop
or
add
inc
add
dec
and
add
popa
and
inc
addb
add
and
add
sub
add
add
stos
adc
addb
sbbb
add
add
nop
adc
xor
sub
sub
and
and
add
call
xor
test
push
inc
add
mov
xorb
add
add
add
add
add
adcb
and
add
push
add
aad
addl
add
addb
or
orb
mov
addb
shlb
or
jne
add
xor
xchg
add
add
sub
xorl
add
inc
add
adc
adc
add
adc
sbb
add
addb
add
sub
or
adc
push
and
inc
pusha
xchg
inc
adc
add
push
add
inc
or
adc
and
sub
dec
inc
xchg
add
and
rolb
add
push
xchg
cmp
pop
or
xorb
addl
add
inc
dec
mov
add
adc
adc
add
add
push
sub
or
add
and
mov
add
pop
sub
addb
add
shll
and
adc
inc
or
add
adc
jl
sbb
sbb
adc
push
add
rolb
and
or
dec
add
cmp
add
and
adc
push
add
inc
inc
addl
movsl
adc
inc
add
add
push
data16
pusha
add
stos
mov
sub
add
add
and
dec
adc
bound
add
and
shrb
push
or
push
or
andb
add
and
add
adc
inc
or
cwtl
adc
shll
fs
add
add
and
add
inc
add
xor
cwtl
inc
add
add
adc
sbb
inc
adc
add
xor
add
push
or
add
inc
test
or
addb
aam
inc
adc
adc
add
add
add
lods
sbb
xchg
test
sbb
les
adc
inc
add
inc
inc
push
inc
adc
add
mov
rcrl
nop
add
add
inc
push
adc
int
xchg
nop
pusha
dec
cmp
adc
sub
adc
test
add
push
or
or
add
add
add
or
cs
cmpsl
or
adc
adc
and
xor
or
or
cmp
inc
and
sub
inc
adc
sub
add
inc
push
or
popa
and
inc
cmp
enter
xor
adc
add
adc
lods
rclb
inc
push
mov
adcb
dec
dec
cmp
inc
xor
inc
test
add
loopne
push
inc
cmp
add
inc
or
inc
push
sbb
dec
push
and
inc
pusha
inc
add
jno
pusha
mov
inc
test
shll
in
andb
add
push
lock
or
or
or
addb
or
add
cwtl
loop
bound
and
sub
sbb
or
add
or
shlb
dec
add
sbb
add
inc
inc
adc
or
adc
sub
add
int
add
call
xor
add
push
and
adc
sbb
add
and
add
lods
cltd
sub
add
inc
add
add
and
rclb
add
pop
or
inc
inc
cmp
push
popa
sub
add
and
add
inc
adc
adc
add
add
imul
or
adcl
and
test
test
mov
rorb
nop
or
add
push
dec
add
inc
push
bound
mov
adc
adc
push
int3
add
and
inc
or
adc
add
and
mov
sbb
sub
inc
add
add
call
xor
and
mov
addb
addl
dec
or
and
and
mov
add
and
sub
adcb
pop
inc
pusha
add
cmpl
or
add
movb
and
xchg
test
or
add
adc
popa
inc
dec
add
rclb
mov
add
inc
outsb
sbb
orl
addl
add
loopne
add
and
sub
add
add
xchg
and
inc
add
movsb
cwtl
add
xor
sbb
cmp
rcrb
add
lock
inc
pop
mov
mov
sub
or
adcb
nop
test
add
mov
cmp
lock
inc
sub
mov
add
add
add
add
sbbb
leave
adc
sbbb
lock
or
andl
or
andb
or
or
push
andl
ret
sbb
and
and
addl
add
or
or
add
add
add
adc
add
and
roll
xor
adcb
or
add
add
sub
aaa
add
dec
rolb
orb
adcb
adc
repnz
test
and
add
xor
add
sbbl
add
arpl
add
inc
adc
or
xchg
mov
push
and
adc
xor
cmpl
xchg
pusha
sbbb
inc
ret
adc
jp
xor
mov
inc
or
add
les
inc
add
sub
xor
pop
add
addb
or
add
movsb
and
mov
xchg
sub
inc
add
add
xor
roll
push
add
and
in
sbb
add
test
js
add
add
addb
adc
adcb
add
adc
or
inc
or
add
xchg
add
or
add
pusha
shll
xor
adc
add
cltd
xor
add
push
push
push
add
mov
cmp
pop
xor
or
test
lds
inc
cmp
xchg
add
add
sub
sub
test
or
or
orb
or
add
or
add
and
nop
orb
and
inc
adc
adc
or
inc
pop
and
or
add
add
leave
mov
xchg
add
and
add
xchg
add
dec
mov
inc
push
sbb
inc
mov
add
addb
push
xchg
addb
add
test
add
inc
addl
or
inc
xor
adc
sub
addb
adc
mov
orb
add
inc
add
sbb
mov
push
jo
sub
and
add
or
add
inc
add
inc
add
and
les
add
lods
xchg
adc
rolb
dec
add
inc
and
push
daa
add
mov
sub
pop
andl
add
add
or
add
adc
push
adcb
dec
cmp
xchg
je
add
popa
mov
add
adc
and
inc
adc
nop
add
xchg
rclb
add
add
or
add
xor
add
xor
addl
inc
rolb
inc
and
add
and
add
sub
pusha
push
dec
enter
or
inc
inc
or
add
add
bound
add
and
inc
mov
add
push
sub
adc
fnstenv
inc
mov
add
mov
sbb
sbb
les
add
pusha
rorb
add
inc
sub
or
or
xor
mov
and
xorb
and
and
inc
les
test
xchg
and
adcb
dec
and
or
mov
add
xor
add
push
add
adc
inc
addl
adc
cmpsb
insl
inc
xorb
dec
mov
push
or
cmpb
inc
les
dec
scas
xor
loopne
add
add
adc
sub
mov
addb
pop
add
mov
lea
and
loopne
xchg
icebp
adc
and
rol
adc
add
adc
or
test
or
inc
push
adc
add
add
add
push
adc
add
and
or
mov
xor
add
addb
addl
and
mov
nop
push
mov
add
add
test
or
add
add
add
adc
and
dec
inc
data16
je
or
or
xor
or
inc
lcall
or
mov
adc
lret
add
add
test
and
add
cmp
add
addb
add
pusha
imul
adc
add
adc
mov
cmp
adc
add
mov
add
push
add
add
add
xchg
adc
add
add
add
add
dec
add
or
sbb
add
push
inc
inc
pusha
dec
add
push
orb
sub
rorb
rolb
add
or
adc
addl
pusha
push
inc
dec
jno
add
add
les
add
push
mov
add
and
or
addb
nop
faddl
add
xor
add
addb
adc
inc
push
push
cmpsb
mov
push
adcb
or
adcb
cmpsl
inc
add
xor
and
popa
push
xchg
andb
inc
add
adc
add
or
or
addl
inc
add
mov
and
mov
xchg
add
adc
inc
add
or
dec
mov
add
mov
movsb
addb
add
xor
adc
add
sub
pop
or
sub
inc
pop
dec
mov
push
inc
addb
add
inc
enter
xor
mov
mov
mov
and
cmpb
add
and
add
add
or
sbb
add
or
inc
test
add
add
sbb
mov
add
push
xor
jno
add
fadds
add
adcb
adc
add
mov
mov
push
add
add
or
dec
add
adc
add
add
add
or
add
inc
add
push
and
add
inc
add
rcll
shrb
adc
arpl
andb
xor
dec
inc
add
push
or
pusha
add
add
and
or
dec
addb
cmpsb
and
sub
inc
mov
addb
addl
adc
add
inc
add
adc
nop
adc
adc
adc
adc
add
and
lds
push
and
adc
inc
enter
mov
add
mov
cmp
add
orl
push
dec
add
and
add
or
pop
mov
rcrb
test
addb
add
adc
and
add
adcb
nop
push
or
xchg
mov
inc
add
add
dec
xor
add
or
add
or
add
popa
and
add
and
and
add
daa
and
add
adc
push
push
inc
mov
or
rol
sbb
add
and
or
xor
add
sub
or
adc
or
inc
inc
add
add
push
xchg
rclb
add
add
add
mov
and
sbb
test
or
inc
test
lahf
add
sbbb
add
and
adc
push
mov
or
les
add
adc
movsb
push
test
or
add
add
xor
add
add
add
or
add
add
add
loope
dec
adc
add
and
nop
nop
mov
mov
andb
add
test
add
mov
test
subl
and
pop
add
push
popa
sub
mov
add
loope
orb
xchg
and
add
push
dec
add
inc
sarl
add
or
add
dec
addb
addl
addb
add
xor
adc
test
adc
xchg
cmp
add
addb
aam
add
mov
rolb
add
inc
and
xor
sub
mov
add
dec
ret
add
add
add
lock
inc
les
les
dec
test
adc
andl
mov
add
add
add
sbb
mov
add
and
dec
test
or
andb
add
adc
push
addl
cmp
add
lcall
inc
roll
andl
and
or
push
dec
addl
or
adc
add
add
lcall
mov
add
add
and
cmpb
or
push
xor
or
or
pop
xor
pop
add
cmpb
addb
xor
addl
and
pop
add
add
imul
or
add
rclb
and
add
or
or
add
nop
add
add
and
or
adc
push
loopne
pop
sbb
add
add
sbb
dec
mov
adc
adc
add
add
and
orl
add
or
inc
add
mov
addb
sbb
lahf
push
rorb
add
mov
sbb
xor
sub
add
inc
and
add
orb
inc
add
push
push
sub
and
add
add
and
and
shll
push
adc
or
test
add
adc
test
sbbb
sbb
add
add
inc
adc
orb
mov
push
or
mov
add
push
mov
adc
sbb
or
mov
inc
sbb
or
gs
inc
add
test
push
inc
push
test
push
and
in
and
and
add
inc
add
push
add
add
or
test
xchg
leave
add
add
and
push
cmp
les
xorl
xor
sub
add
adc
sbb
mov
add
adc
add
inc
nop
adc
add
inc
sbb
or
sbb
inc
or
pusha
add
adc
adc
ret
or
add
add
or
sbb
ret
add
or
addb
rorb
mov
push
add
xchg
sbb
inc
add
add
andb
and
add
and
adc
inc
or
add
inc
sbb
add
or
call
shlb
pop
and
xchg
add
dec
ljmp
add
mov
mov
mov
ret
add
cmp
inc
sub
ret
andb
dec
adc
adc
and
adc
shll
or
jo
inc
dec
add
or
and
add
sbbb
push
roll
add
jp
add
roll
xor
mov
add
add
sbb
and
push
and
inc
inc
add
addb
cmp
add
sub
add
add
add
inc
adc
add
sub
popa
rorl
inc
enter
cwtl
add
add
xorb
inc
mov
dec
test
rorb
adcb
cmp
and
add
addb
ret
add
sub
add
xchg
addl
or
push
add
add
cmp
add
adcb
enter
adc
and
add
mov
and
inc
and
push
sbb
and
mov
subl
add
add
js
add
add
rolb
inc
inc
inc
or
and
sub
push
addb
mov
in
add
add
pop
add
add
mov
push
adc
push
push
adc
addb
xchg
lock
push
push
add
or
jno
sub
pusha
test
add
xchg
inc
pop
add
add
lds
shlb
pusha
sub
or
inc
add
add
sahf
add
add
nop
push
inc
add
movb
add
sbb
and
adc
add
sarb
adc
add
and
dec
add
xchg
or
push
add
mov
pop
add
addb
nop
add
mov
add
addl
sbb
inc
add
mov
lods
add
add
adc
or
xor
sbb
add
and
push
mov
push
add
shlb
xor
dec
or
mov
add
imul
test
inc
xchg
add
inc
xor
or
or
inc
add
adc
insb
xor
mov
shrb
mov
clc
inc
xchg
add
add
andb
add
or
add
mov
or
push
push
adc
add
sbb
inc
adc
add
add
add
push
pop
mov
add
adc
inc
les
and
inc
add
adc
and
cmp
xor
and
or
adc
or
and
inc
push
addb
movsb
bound
add
jl
xor
add
add
pusha
pusha
add
xchg
push
ficoml
or
test
add
add
add
adc
mov
and
test
adc
test
lock
or
add
and
es
xor
inc
add
sub
and
add
dec
lock
or
and
addb
lods
pop
and
add
xorl
int
pusha
adc
mov
inc
cmp
adcb
or
cmp
rclb
add
cmp
sub
mov
nop
rol
inc
rolb
push
adc
xorb
adc
add
mov
sbb
add
pusha
add
adc
mov
or
arpl
loopne
cmp
dec
pop
add
dec
dec
xorb
sbb
inc
and
and
fs
nop
or
sub
push
add
add
add
cmpb
adc
or
push
sub
inc
add
cwtl
add
inc
add
shll
add
add
inc
and
enter
mov
adc
and
add
adc
xor
dec
adc
push
adc
test
dec
push
add
push
dec
add
add
mov
or
inc
inc
pusha
add
pusha
int3
adc
fs
andb
push
adc
add
mov
mov
mov
adc
adc
pop
mov
adc
push
add
les
push
push
add
cs
or
push
or
nop
es
rolb
or
adc
and
adcb
and
push
sub
pusha
and
or
dec
or
sbb
inc
and
and
add
cmpsb
and
mov
movsl
add
or
imul
test
add
pop
nop
fs
sbb
lcall
push
inc
dec
add
add
adc
push
inc
add
add
sub
cwtl
xchg
adc
add
xchg
cmpsb
push
add
adc
add
add
or
and
dec
add
or
or
mov
and
adc
and
sbb
and
les
add
mov
add
sub
inc
and
popa
lods
inc
and
and
xchg
andb
add
ret
inc
push
add
rolb
add
adc
mov
jo
or
add
add
and
lods
mov
add
add
loope
and
or
adc
int3
inc
pop
push
add
dec
and
add
test
add
roll
push
and
xchg
adc
add
add
xchg
add
add
or
sbb
xchg
add
jo
enter
add
inc
and
add
sbb
subl
mov
or
sub
inc
adc
test
or
sbb
and
inc
add
adcb
inc
push
add
adc
je
add
dec
dec
test
inc
add
or
sub
add
sub
adc
add
add
inc
adc
push
addb
add
adcb
push
loope
inc
dec
add
inc
inc
push
push
xorl
or
inc
adcb
gs
jns
inc
add
add
sub
adc
xchg
push
addb
adc
inc
adc
adc
xor
sub
pop
fmuls
push
addl
add
adcl
add
add
or
add
mov
inc
and
test
add
mov
pop
pop
mov
add
adc
add
pusha
pusha
rorb
cmp
add
add
adcb
add
add
test
add
xchg
test
add
xchg
and
add
add
push
pusha
loopne
add
and
add
add
jns
xor
inc
and
add
ss
or
add
pop
adc
mov
push
adc
inc
add
loopne
add
sbb
add
add
xorb
adc
rclb
add
and
add
or
add
adc
rclb
add
add
test
adc
and
mov
push
pusha
add
fisubrs
popa
push
and
xor
and
dec
and
add
push
and
and
nop
movsb
loopne
or
or
adcl
jbe
adc
adc
and
adc
push
orb
add
dec
dec
or
inc
and
add
push
addb
addb
adc
and
or
adc
and
adcb
addb
add
adc
push
inc
add
sub
inc
inc
adc
or
ret
nop
xor
xor
or
or
inc
add
add
push
rolb
inc
mov
inc
pusha
inc
dec
adc
add
nop
adc
subb
push
add
adc
inc
add
addb
adc
and
inc
add
jno
inc
adc
pusha
and
and
add
xor
push
add
and
es
add
add
add
add
push
xor
add
cmovo
dec
dec
mov
addb
fadds
shlb
addb
push
inc
push
sub
dec
adc
add
add
sub
and
and
pop
adc
or
add
dec
add
rolb
push
andb
sub
adc
adc
and
and
push
xor
cmpsb
and
test
adc
add
subl
adcb
and
addl
xchg
ret
add
add
add
jmp
adcb
mov
add
add
add
dec
add
sub
add
add
add
or
testl
xor
adc
es
xor
bound
add
add
adc
adc
add
add
inc
popa
inc
add
add
push
xor
sbb
add
pushf
add
nop
lcall
or
add
add
add
xor
loopne
or
pushf
xor
and
and
inc
nop
mov
and
or
pop
add
adc
adc
xorl
add
or
or
add
push
inc
andl
add
add
add
mov
mov
add
xor
pop
add
push
or
adc
or
add
push
push
addb
add
and
dec
int
sbb
cld
add
add
and
int3
or
dec
adc
bound
and
test
cmp
outsb
and
adc
or
and
dec
add
and
sub
add
jo
add
or
dec
add
add
fcompl
adc
cltd
add
or
or
add
mov
dec
jo
push
adc
add
or
pusha
add
addb
inc
add
dec
mov
adc
push
and
and
push
add
adc
or
and
inc
movhps
addb
dec
inc
add
adc
or
xchg
add
push
add
inc
repnz
out
inc
and
add
adc
les
test
add
or
and
test
or
add
and
add
and
adc
pusha
dec
inc
add
imul
push
adc
and
add
xchg
mov
dec
inc
adc
inc
mov
add
or
lods
adc
xor
mov
inc
adc
adc
add
mov
xor
add
inc
and
push
or
lds
add
mov
and
or
cmp
adc
inc
xchg
or
adc
add
aam
inc
sbb
inc
or
or
push
or
cmp
and
add
addb
and
or
adc
add
jo
mov
sbb
and
adc
pusha
or
pusha
leave
add
add
and
and
push
nop
adc
sub
mov
or
push
shlb
or
sbb
nop
and
push
ret
adc
cmp
or
add
pusha
and
mov
push
adc
movsb
add
dec
add
and
add
nop
add
or
add
inc
add
test
mov
jmp
add
adc
sbb
adc
dec
add
push
and
sbb
add
push
add
add
or
add
xor
xor
or
add
push
add
add
add
add
add
nop
adc
and
and
add
add
add
add
or
inc
rolb
in
or
add
mov
test
adcl
bound
add
pop
add
add
and
push
add
orl
or
add
sbb
dec
rolb
add
adc
nop
je
dec
inc
mov
fmuls
and
inc
xchg
inc
pop
rorl
cmp
sbb
pusha
or
or
or
rolb
add
add
mov
adc
add
xchg
inc
xchg
add
insb
inc
mov
test
or
sbb
add
and
add
add
add
adc
add
adc
add
orl
cmp
inc
add
adc
and
int
adc
and
push
add
pusha
or
mov
mov
mov
add
add
xor
cmp
ret
and
xor
or
andb
add
push
add
or
nop
loope
fs
js
inc
rolb
jae
add
enter
add
or
inc
push
add
pop
movsb
add
push
and
sbb
add
aam
xor
adc
push
push
mov
adc
adc
jb
add
adc
inc
adc
inc
or
push
and
mov
lock
cmp
xor
test
add
adc
add
add
add
xor
andl
xchg
and
enter
add
sub
inc
inc
add
add
jae
rclb
inc
and
adc
add
test
add
pop
add
push
inc
push
and
add
xor
xor
add
mov
movsb
lods
xor
and
mov
or
sub
adc
push
cmpsb
sub
andb
addb
lcall
add
adc
and
add
inc
adcl
enter
sub
mov
movsl
add
push
stos
ja
sub
pusha
add
addb
pusha
shll
or
add
or
aam
adc
nop
add
add
add
add
nop
add
mov
insb
mov
or
popa
xchg
and
sbbb
or
sbb
or
bound
orl
jbe
and
leave
add
xchg
mov
and
add
add
and
lods
xchg
sub
add
sbb
sbb
add
sbb
add
insb
mov
or
aam
sbb
adcb
adc
or
adc
sarb
dec
add
cs
adc
add
mov
and
adc
adc
sbb
rolb
xchg
xchg
jb
add
inc
xor
addb
inc
and
adc
or
push
popa
or
add
inc
inc
add
or
sbb
ficoml
add
sub
mov
inc
add
inc
adc
adcl
add
adc
push
and
inc
and
add
adc
add
or
add
add
mov
and
push
or
orb
add
cwtl
mov
push
and
xor
adcl
adc
add
adc
inc
and
add
cwtl
inc
or
sbb
jae
xor
mov
or
adc
or
inc
add
xchg
add
inc
inc
add
and
cltd
inc
fstl
inc
cwtl
inc
adc
add
inc
nop
and
orb
andl
add
add
adc
jnp
rorb
or
popf
push
orl
sbb
bound
xor
dec
push
add
inc
add
or
add
sub
inc
xorb
add
inc
sbbl
add
or
sub
adc
mov
mov
add
addb
adc
popa
pusha
push
add
addb
subb
or
and
jb
and
or
inc
sbb
or
addb
push
es
adc
xor
addb
sbb
mov
adcb
subl
mov
imul
dec
add
add
rolb
add
add
add
and
rolb
adc
and
add
add
add
adc
add
and
movsb
xchg
and
inc
mov
or
add
inc
add
mov
add
add
test
test
add
pop
mov
orb
add
mov
add
sbb
add
mov
loop
add
mov
add
and
inc
or
or
and
cmpb
xor
and
dec
mov
and
inc
add
add
addl
push
add
adcb
and
add
inc
hlt
rolb
adc
test
outsb
mov
test
push
test
add
or
or
rcll
mov
add
add
test
inc
add
and
pusha
adc
adc
sub
or
adc
inc
add
add
xorb
xchg
adc
adc
xor
adcb
les
add
add
adc
xchg
inc
inc
add
enter
add
or
mov
dec
push
pop
sbb
add
and
ret
xchg
add
popf
add
mov
mov
or
or
add
push
inc
out
or
sbb
adc
add
or
add
xchg
loope
xor
mov
add
mov
sub
mov
adc
inc
movsb
cmp
pusha
or
add
mov
and
add
push
adc
test
sbb
test
adc
addb
adc
or
cltd
add
add
test
inc
add
addl
add
inc
sgdtl
and
and
cwtl
add
pop
mov
pop
xor
adc
push
stos
orb
inc
inc
adc
sub
add
inc
push
or
and
xchg
add
mov
or
pop
push
popa
sbb
inc
addb
mov
or
lods
movsl
add
add
and
sub
or
pop
and
mov
add
test
or
inc
add
nop
adc
inc
popa
cmp
or
add
and
add
and
adc
inc
inc
add
mov
adc
pusha
push
add
add
addl
adc
add
add
inc
or
nop
push
sbb
mov
and
mov
nop
or
or
andb
shll
xor
add
add
dec
inc
xor
add
add
add
lcall
pop
pop
push
adc
imul
add
inc
popf
add
adc
inc
push
mov
inc
add
add
add
pop
or
sub
roll
add
or
nop
add
adc
test
addb
and
or
addl
dec
mov
pop
add
dec
movsb
inc
loop
rorl
mov
add
orb
std
adc
orb
add
adc
sbb
dec
add
xor
dec
inc
add
mov
push
add
add
mov
dec
or
adc
jo
mov
and
inc
add
orb
push
imul
add
add
addb
add
adc
inc
popf
adc
or
and
add
or
addb
adc
lock
mov
cltd
lcall
adc
push
inc
xchg
rcl
add
loopne
or
test
adc
xor
add
test
adc
nop
inc
andl
add
test
push
inc
add
inc
xchg
pop
insb
bound
addl
inc
add
dec
add
add
adc
adc
push
inc
and
xchg
mov
sub
inc
add
mov
addb
and
add
mov
inc
adc
pop
sbb
add
adcl
sub
sbb
movsb
add
cltd
and
mov
add
add
adc
cwtl
add
bound
add
loope
add
inc
addl
xor
hlt
add
or
sbbl
inc
xor
push
add
loopne
addb
push
adc
xchg
addb
add
orl
add
sbb
push
and
add
nop
mov
rclb
sbb
and
dec
add
add
nop
add
dec
or
add
add
orl
and
dec
cli
adc
inc
sbb
add
adc
sub
add
sub
adc
jns
or
nop
xor
imul
add
pusha
les
adc
jno
inc
inc
add
add
or
sub
add
or
pop
add
adc
and
and
push
dec
push
and
jo
xchg
cmp
dec
addb
or
and
add
shrl
inc
add
orb
inc
add
add
add
add
loopne
xchg
add
dec
mov
add
rolb
adc
rcl
add
add
push
orb
push
push
mov
add
add
adc
js
subb
add
mov
imul
addb
sbb
inc
inc
mov
pop
adc
add
push
or
rolb
and
sbbb
or
or
and
or
ret
or
and
test
inc
xor
adc
nop
push
add
or
push
es
pusha
adc
dec
bound
or
fadds
or
push
nop
addl
inc
nop
loopne
ret
andb
xchg
add
shll
or
pusha
or
adc
inc
add
push
rorl
add
and
pop
test
mov
dec
and
add
xor
adc
xor
cmp
addb
add
add
add
test
or
rolb
movsl
sbb
inc
inc
adc
inc
xchg
mov
sbb
adc
sub
call
add
adc
add
inc
add
add
add
inc
or
add
repnz
add
and
add
add
or
loope
inc
pop
push
addb
inc
adc
adc
or
jo
add
dec
adc
mov
or
cmp
inc
add
add
and
pusha
and
movsb
xlat
inc
and
adc
add
and
add
mov
inc
ret
roll
or
or
push
and
sub
jo
and
sub
sub
dec
nop
add
xchg
popa
add
ljmp
or
add
add
add
loop
add
add
adc
add
add
sub
push
and
xchg
sbb
or
adc
xchg
inc
push
or
inc
add
push
or
addb
add
add
and
add
and
add
dec
add
add
add
and
or
sbb
add
ret
add
inc
inc
add
mov
and
inc
adc
or
add
add
add
or
nop
or
mov
mov
add
add
in
orl
add
add
inc
mov
or
and
adcb
add
sbb
add
daa
sub
mov
enter
add
and
test
add
mov
pop
adc
sub
sbb
test
add
dec
inc
mov
test
xchg
add
lret
adc
or
adc
addl
xchg
add
add
adc
add
or
adc
xor
mov
nop
popa
add
add
mov
orb
add
and
add
mov
sub
or
and
test
and
add
mov
add
add
and
repnz
mov
add
orb
xor
add
add
mov
sub
dec
add
push
add
add
int3
and
nop
and
inc
adc
add
adcb
mov
sbb
inc
or
pop
inc
add
test
je
and
add
inc
add
rcrb
addl
inc
xchg
add
push
cmp
inc
and
add
sub
add
or
add
adc
push
adcb
add
inc
nop
addl
and
xchg
add
push
movsb
add
cwtl
push
adc
add
hlt
pop
and
adc
subl
or
and
adc
cmp
or
sbb
adc
add
inc
mov
and
adc
add
inc
add
cs
and
pusha
adc
add
cwtl
add
and
adc
test
add
add
pusha
push
rolb
sbb
or
xor
push
inc
add
adc
add
adc
cwtl
nop
push
and
add
and
add
adcb
add
add
sub
pusha
and
push
add
xor
add
jo
movsl
or
mov
or
dec
and
sub
test
add
sub
andl
or
lock
rorb
add
gs
push
bound
jo
dec
insb
or
dec
add
xchg
adc
cmpsl
mov
sbb
add
add
pusha
add
mov
inc
test
xor
aaa
add
enter
add
inc
xchg
add
adcb
add
adc
push
adc
mov
inc
add
adc
or
add
push
sbb
inc
addb
add
adc
test
or
pusha
add
adc
add
adc
or
subb
xor
int3
inc
rolb
add
enter
add
subl
or
nop
add
rolb
push
dec
inc
or
sub
add
and
dec
or
push
add
xchg
add
addl
inc
rclb
adc
andb
or
and
add
loope
add
add
add
adc
test
addb
or
add
test
add
movsb
addb
adc
push
or
mov
les
stos
je
xor
orb
fadds
addr16
push
pusha
sbb
sub
dec
es
inc
or
add
popa
and
add
add
inc
add
xchg
add
ret
add
add
nop
add
or
or
add
add
add
addl
dec
mov
dec
lea
add
and
add
cmp
and
mov
add
addb
add
inc
adcb
add
adc
push
and
andb
movsb
add
add
inc
or
add
add
les
and
nop
and
add
adc
add
add
add
mov
loop
cmpsb
add
adc
sub
rcll
add
and
or
add
add
add
sbb
add
add
rcl
push
adc
and
or
add
adc
push
mov
and
add
inc
adc
add
and
movsb
adc
or
mov
sbb
ja
add
add
and
xor
add
add
add
adc
nop
mov
and
ret
xchg
add
adc
and
orb
push
adc
add
add
and
or
test
push
andb
nop
add
add
xchg
adc
test
inc
add
adc
push
imul
or
add
adc
and
and
pop
and
and
mov
add
and
add
or
inc
js
inc
add
daa
bound
addl
addb
addb
lea
or
or
add
sub
inc
and
addl
sbb
mov
and
add
sbb
mov
push
sub
xchg
push
or
or
subb
rolb
addl
and
andl
adc
or
or
add
sub
and
addb
xchg
or
jp
and
inc
add
mov
enter
and
or
and
jo
or
mov
or
adc
or
xchg
addl
or
or
add
inc
and
sub
inc
push
popa
mov
add
or
mov
xor
mov
push
add
mov
and
or
add
ret
dec
shlb
xor
adc
lret
and
andl
inc
mov
addb
or
add
adc
orb
add
or
inc
push
inc
add
les
or
test
and
dec
inc
push
adcb
pop
push
adc
add
xor
add
adc
add
add
add
loopne
push
andb
xor
add
pusha
inc
sub
add
cmp
and
add
and
movsl
add
or
xchg
add
add
sbb
sub
orb
orb
adc
inc
or
add
mov
push
mov
dec
inc
push
add
xor
mov
inc
adc
add
sbb
inc
nop
dec
mov
add
sbb
dec
mov
add
sbbb
pusha
xchg
inc
add
adc
add
or
xchg
inc
cmp
bound
dec
mov
dec
sbbb
add
and
loopne
add
inc
inc
add
add
add
adc
add
inc
add
add
rolb
add
add
loopne
add
adc
xor
imul
pop
and
and
movsb
les
adc
push
and
and
push
and
cmp
add
sub
ret
pusha
mov
push
rolb
add
and
xchg
push
orb
dec
xchg
sbb
push
sbb
sbb
inc
lods
dec
add
adc
mov
sub
add
adc
add
xchg
xor
and
mov
mov
push
dec
inc
dec
mov
add
add
inc
xor
push
rolb
and
push
adc
xor
sbb
mov
add
and
dec
nop
and
mov
dec
inc
pusha
add
les
add
xchg
dec
add
shrl
test
jne
or
adc
add
add
inc
addl
adc
add
and
and
inc
adc
or
pusha
and
add
add
or
or
rorb
andl
inc
inc
or
add
or
or
or
addb
add
add
add
mov
adc
or
and
add
add
add
adc
or
mov
and
or
inc
add
ret
or
inc
loopne
add
inc
add
inc
adcb
add
add
push
or
mov
add
jo
inc
adc
add
mov
mov
add
add
add
and
mov
xchg
mov
pop
or
pop
and
roll
xor
adc
xchg
or
or
dec
inc
add
add
or
and
add
adc
mov
and
rolb
add
sbb
add
add
push
add
and
add
dec
xchg
add
add
adc
inc
inc
add
add
mov
add
adc
push
pop
addb
leave
andb
or
add
and
push
and
sub
sub
or
sbb
add
adc
add
jno
enter
add
add
sbb
roll
mov
popa
pop
add
add
inc
inc
test
add
rolb
inc
push
push
or
push
and
add
pushw
fsts
and
add
test
sbb
push
xor
lcall
mov
and
adc
add
mov
add
add
or
add
and
add
pusha
pusha
or
add
add
inc
or
adc
inc
and
addb
add
add
add
addb
adc
add
pusha
add
add
push
add
push
inc
xchg
and
subb
add
mov
push
xor
push
movsl
addb
enter
add
inc
mov
and
add
add
or
or
adc
xchg
add
shlb
inc
or
add
adc
popa
add
mov
adc
or
inc
lcall
adc
dec
adcb
or
add
add
and
adc
add
adc
add
sub
and
add
adc
add
or
sub
or
pusha
stos
or
mov
repnz
cwtl
sbbb
add
inc
add
mov
add
add
xchg
dec
enter
enter
xchg
pusha
or
add
inc
test
or
lcall
pusha
add
adc
jne
or
add
xor
pop
mov
add
inc
enter
and
push
xor
dec
add
sbb
add
push
add
ret
orb
mov
add
xor
or
add
jle
add
dec
push
push
or
add
add
movsb
inc
sub
test
jne
add
and
adc
nop
dec
add
test
inc
adc
add
or
and
push
inc
mov
xor
add
or
cmp
sub
inc
addl
or
rcl
adc
add
add
push
xchg
add
add
daa
add
push
xor
mov
add
repz
or
add
push
sub
push
popa
or
addl
add
xchg
or
add
add
push
or
add
add
or
or
gs
sbb
add
inc
add
inc
add
mov
add
add
addb
addb
adc
sbb
bound
add
add
sub
add
adc
call
and
mov
or
sub
rclb
sbb
adc
inc
push
pusha
call
adc
bound
add
adc
adc
add
xchg
mov
xor
addl
or
adc
dec
inc
xor
add
and
add
les
or
addb
or
add
mov
lods
sbb
or
push
xor
add
fcmovnb
and
movsb
push
aam
adc
and
dec
or
jnp
adc
inc
nop
add
add
add
pop
inc
addb
add
add
or
or
movsb
loopne
pop
xor
sbb
add
add
mov
add
add
test
ret
xchg
sbb
inc
push
addb
aam
push
sbb
push
and
rcrb
add
rcrb
add
insb
add
loop
xor
rcll
adc
adc
or
and
sub
addb
add
xor
inc
add
add
inc
adc
or
add
mov
xor
add
add
add
add
or
adc
add
and
inc
add
and
ret
or
adc
xchg
adc
add
and
add
add
xor
or
mov
mov
xchg
andb
add
add
sbb
adc
inc
and
sub
add
adc
addb
or
adc
add
inc
fiaddl
and
sbb
adc
add
or
xchg
and
and
add
and
xchg
and
add
push
add
rcrb
and
and
add
dec
add
and
add
and
adc
cld
and
mov
mov
inc
add
rolb
and
xor
add
es
cmp
adc
push
mov
addb
adc
push
orb
addb
sub
addl
add
lods
addl
add
or
popa
inc
cmp
shlb
or
xor
cmp
push
xchg
nop
rcr
or
lds
and
rorl
add
add
inc
or
pusha
add
push
xchg
push
pusha
and
push
push
inc
sarb
push
inc
mov
add
add
adc
add
add
xor
add
adc
inc
adc
add
icebp
push
add
or
push
inc
add
add
add
and
mov
or
jge
inc
inc
add
ret
add
rol
sub
mov
inc
sub
movsl
mov
xor
inc
inc
or
mov
clts
cmpb
pop
sub
orb
jae
add
and
xchg
adc
adc
add
and
add
or
add
addb
jno
add
ljmp
or
push
add
add
add
or
add
rorb
add
rclb
mov
sbbb
int3
mov
and
inc
js
add
or
cmp
or
mov
mov
orb
inc
push
add
add
adc
sub
dec
push
add
or
sbbl
and
mov
add
or
add
data16
add
rcll
inc
pop
add
adcb
addb
test
adc
dec
add
sub
ret
inc
add
inc
add
push
add
and
add
add
adc
test
adc
addb
insb
push
or
mov
or
add
or
and
and
adc
adc
sub
or
adc
push
inc
cmp
inc
inc
mov
arpl
adc
movsl
sbb
or
push
add
inc
or
adc
or
and
inc
subl
add
inc
push
adc
add
adc
add
add
add
orl
or
or
add
add
inc
dec
jb
inc
push
addb
inc
adcb
add
add
xor
adc
addl
adc
mov
movsb
roll
inc
or
inc
stos
add
inc
or
inc
call
xchg
mov
mov
add
mov
inc
sub
or
dec
add
test
and
pusha
and
add
adc
or
rorb
or
add
add
movsb
sub
adc
add
shlb
add
mov
and
add
add
xchg
addl
inc
fs
sub
and
xchg
add
and
orb
add
mov
sbb
gs
pop
and
mov
mov
pusha
inc
add
adc
test
insb
and
and
arpl
add
or
add
and
adc
subb
sbb
add
addl
add
inc
or
dec
and
add
adc
enter
nop
add
or
add
or
add
es
xchg
push
add
sub
loopne
sbb
add
push
sub
add
inc
pusha
pop
adc
add
shrb
shrb
nop
or
nop
adc
icebp
or
add
sub
sbb
sub
mov
xchg
adc
or
add
and
sbb
xor
enter
cmp
cmp
add
adc
inc
inc
addb
sbb
push
adc
add
mov
dec
add
orb
lds
add
orl
push
push
inc
add
or
sub
mov
and
leave
add
add
and
sub
add
push
add
inc
inc
ret
and
lret
pop
inc
add
add
or
push
or
sub
and
and
test
add
mov
and
adc
sub
mov
ret
call
test
and
test
add
adc
adc
or
sbb
pusha
add
add
mov
add
add
pop
rolb
add
xchg
mov
and
pusha
xor
roll
add
add
les
add
insb
test
mov
pusha
add
adc
inc
or
push
inc
addl
pusha
add
daa
xorl
adc
add
and
test
add
adc
adc
inc
or
adc
mov
mov
add
add
addb
add
les
add
xor
xor
sbb
sbb
inc
add
addl
inc
and
pusha
nop
stos
or
cmp
add
addb
sub
dec
and
adc
add
add
and
push
inc
sub
inc
or
push
add
add
orb
add
addb
adcl
adc
and
test
rolb
pusha
add
add
or
adc
add
push
in
or
adc
and
add
or
addb
xor
sbbl
mov
or
or
dec
add
add
inc
add
inc
adc
and
add
inc
add
adc
xor
add
add
add
add
add
add
mov
inc
add
add
or
and
add
lds
add
adcl
and
rolb
or
push
std
or
and
insb
addb
mov
dec
cmp
mov
mov
addl
dec
cwtl
sub
adc
push
and
add
add
sub
inc
dec
add
or
add
push
adc
xchg
shlb
and
and
nop
and
add
adc
lahf
mov
sub
or
adc
add
test
mov
and
adcb
rorb
inc
popf
add
pusha
or
add
add
movsb
addb
and
xchg
repnz
add
xchg
add
sbb
and
mov
and
or
add
add
adc
and
cmp
add
add
roll
add
adc
add
inc
jno
and
addb
add
adc
call
add
adc
addl
add
add
or
sbb
lods
sbb
or
add
jns
mov
xor
cwtl
ret
and
addl
add
add
adc
sub
adcl
add
mov
lock
push
add
mov
mov
adc
sub
add
or
int3
push
push
add
inc
or
adc
dec
inc
mov
and
cwtl
test
adc
add
addb
push
leave
push
cwtl
and
lds
add
test
adc
daa
sub
add
ret
add
dec
addl
add
mov
cmp
inc
or
xor
add
add
push
or
add
or
xor
add
pop
mov
ss
add
test
xchg
andb
add
adc
adc
adc
adcb
dec
add
dec
or
adc
inc
dec
sbbl
dec
adc
adc
add
pop
add
and
addl
inc
add
add
les
adc
add
pop
or
add
xor
bound
xchg
add
add
add
add
push
nop
add
or
adc
inc
add
xor
inc
rol
popa
sbb
addb
data16
mov
dec
or
xor
push
ret
inc
test
add
xor
inc
and
add
fs
mov
mov
and
add
inc
xor
add
add
add
inc
or
adc
dec
adc
and
inc
mov
ret
dec
xchg
add
mov
and
add
cmp
ljmp
inc
add
and
add
add
adc
add
mov
add
mov
pop
mov
push
push
xor
add
or
add
xor
or
imul
xor
nop
pop
orb
add
add
and
or
pop
add
add
inc
or
inc
rcll
and
push
add
pop
add
and
push
push
add
sbb
add
inc
inc
mov
adc
add
adc
sbb
or
xor
sbb
sub
adc
add
inc
and
jb
andb
push
mov
and
pusha
inc
add
add
mov
and
ds
add
xor
xor
add
add
push
add
add
adc
add
addb
add
inc
add
sbb
adc
add
add
and
add
and
mov
adc
inc
add
mov
push
and
or
pop
push
rorb
and
pusha
lret
inc
adcb
loopne
les
inc
add
and
push
or
jmp
and
sub
add
addb
push
adcb
push
pusha
nop
and
inc
sub
and
add
push
add
adc
sub
inc
shlb
xchg
add
add
and
add
and
add
push
add
movups
dec
xor
adc
push
and
and
push
push
addl
inc
movsb
sub
sbb
add
addl
or
cmp
push
and
addl
or
mov
andl
sbb
popa
pop
pusha
add
sbb
nop
and
cmpsb
call
and
adc
push
add
daa
add
test
dec
adc
adc
adc
or
add
add
add
inc
xchg
adc
mov
add
xchg
addb
and
or
add
and
add
xchg
rorb
inc
bound
inc
add
sbb
dec
add
pop
and
sbb
mov
or
insb
add
pop
inc
adc
xor
and
cwtl
and
aaa
or
inc
add
add
nop
andb
push
add
sbb
add
dec
cmp
addl
add
xor
or
add
adc
andb
add
sub
imul
subb
adc
xor
and
les
andb
cmpb
addb
test
adc
addb
adc
xor
addl
or
adc
mov
fs
add
sub
inc
add
inc
mov
adc
add
add
test
add
addl
mov
add
add
nop
pusha
lds
nop
add
test
add
xor
addl
add
mov
or
push
inc
addb
xor
cmp
add
popa
inc
sub
gs
add
add
add
sbb
subb
add
addb
xchg
adc
adc
add
add
stos
nop
add
adc
addb
mov
mov
and
sbb
out
mov
add
xor
adc
or
xor
add
daa
inc
add
jo
add
push
adc
sub
and
add
sub
inc
adc
ret
test
or
sarb
adc
inc
test
xor
and
xchg
inc
add
adc
faddp
adc
inc
lds
rolb
adc
addb
add
and
subb
les
or
xor
dec
adc
add
and
and
and
pop
movsb
les
pusha
cwtl
and
add
xorb
xor
inc
and
add
add
add
mov
test
pusha
inc
nop
dec
add
inc
or
dec
inc
and
sub
sub
add
sub
addb
add
and
test
sub
inc
dec
add
push
sbb
or
or
addl
add
test
add
and
dec
shl
push
dec
add
inc
inc
loopne
and
push
movsb
add
add
and
xchg
add
pusha
add
sbbl
add
inc
add
adc
rolb
add
add
or
mov
or
roll
adc
xor
push
add
inc
adc
mov
add
inc
addb
and
xorl
inc
xchg
and
test
and
adc
add
lret
adc
and
inc
inc
add
adc
and
adc
inc
xor
add
and
add
cmp
push
rolb
andl
or
rclb
iret
add
inc
add
nop
add
test
or
add
sub
inc
adc
inc
push
inc
mov
add
and
add
add
add
inc
xor
test
addb
or
xchg
and
add
push
mov
adc
push
add
mov
adc
add
push
adc
inc
add
adc
rolb
add
add
inc
xor
and
inc
add
cltd
inc
push
inc
inc
cmpb
add
pusha
pusha
or
addl
inc
and
inc
test
or
add
push
push
add
add
add
inc
sbbb
inc
pusha
inc
mov
add
or
xorb
add
add
add
or
add
or
or
add
imul
inc
add
or
es
add
and
or
and
add
or
inc
inc
inc
inc
add
shlb
inc
adc
add
add
add
or
rolb
inc
add
adc
adc
dec
add
add
and
and
add
add
add
pusha
or
sbbb
add
add
add
inc
les
adc
addb
add
bound
orb
add
add
push
add
or
and
add
add
and
mov
lcall
lea
add
adc
mov
add
add
push
add
add
add
inc
add
inc
add
mov
pusha
add
add
add
add
cmp
add
adc
add
inc
add
add
and
inc
pop
adc
add
adc
add
nop
mov
add
mov
adcb
dec
adc
add
add
adc
nop
addb
adc
popf
add
inc
or
add
add
sub
roll
add
and
pop
cwtl
dec
test
adc
adc
add
lock
inc
dec
repz
sbb
inc
inc
add
leave
rolb
add
mov
addb
add
xorb
pusha
addl
add
dec
inc
inc
add
inc
or
mov
add
add
mov
add
orb
inc
add
adc
add
xor
or
add
sbb
push
pop
adc
loopne
orb
add
adc
cmpsb
and
add
adcl
push
add
inc
adc
sbbb
inc
adc
or
sbbl
addb
adc
add
and
xchg
mov
add
adc
data16
adc
mov
or
add
add
and
add
inc
and
addb
add
add
mov
ror
add
test
add
daa
add
add
scas
hlt
inc
add
dec
addb
or
add
and
inc
addb
in
andb
add
add
add
add
or
or
and
sbb
sbb
addb
add
fs
adc
adc
adc
inc
add
add
add
add
add
inc
adc
add
or
push
and
adc
mov
or
test
inc
add
call
push
or
add
inc
inc
orb
adc
inc
test
add
inc
inc
xor
xor
add
add
push
adc
adc
enter
add
add
inc
bound
inc
add
ret
adc
add
dec
add
add
or
test
loopne
add
sbb
add
add
adc
mov
xchg
lods
xor
pop
mov
add
add
adc
or
or
inc
add
and
sub
and
push
add
inc
add
and
pusha
add
mov
inc
addl
and
inc
mov
sub
or
add
add
add
inc
addb
add
and
and
inc
add
js
add
and
or
addb
add
or
and
or
inc
test
cmp
add
rcrb
add
push
les
add
xor
add
cmp
add
test
inc
inc
addb
test
inc
addb
add
mov
andb
add
add
adcb
enter
and
sbb
add
addl
shrb
add
adc
add
add
addb
inc
shrl
add
jo
add
add
call
and
inc
and
and
inc
add
add
adc
add
add
pusha
dec
inc
add
and
mov
add
push
adc
and
add
add
inc
add
add
inc
sub
or
inc
or
add
add
add
add
cmp
and
add
pusha
mov
add
addb
addb
adc
addb
sub
andb
dec
add
add
add
add
adcl
nop
add
add
add
and
add
adc
push
and
add
add
add
and
rolb
inc
sbb
add
addb
xlat
mov
push
bound
add
sbb
inc
add
pusha
add
push
and
add
add
add
xor
sbb
xchg
add
adc
inc
pusha
subb
add
add
add
or
add
add
sub
adcb
add
adcb
adc
add
pusha
inc
addb
xchg
push
xorl
add
or
sbb
adc
inc
add
adc
dec
push
adc
add
add
add
dec
or
add
add
mov
adc
add
add
add
add
adc
inc
inc
add
mov
adc
addb
adcb
sub
pusha
inc
add
insl
add
add
adc
nop
add
mov
inc
push
add
add
add
add
adc
and
adc
add
jo
add
and
inc
add
add
and
add
add
inc
add
loopne
add
add
cltd
inc
addb
inc
add
add
or
sbb
adcb
add
xor
add
add
and
and
andb
xor
dec
add
add
addb
xchg
add
inc
addb
xor
push
add
and
adc
and
add
dec
add
adc
or
add
add
adcl
addl
sub
inc
inc
add
add
add
add
mov
adc
add
sbbb
mov
add
les
push
add
xchg
add
or
or
add
add
add
add
andb
add
and
mov
or
add
add
adc
add
inc
add
adc
and
les
test
inc
adc
nop
inc
nop
and
and
rolb
or
add
and
sbbl
andb
add
add
add
andb
push
add
or
and
adc
adc
add
add
push
add
add
adc
adc
add
add
and
add
add
add
mov
addl
inc
add
add
inc
add
add
add
add
je
addb
loopne
addb
pop
add
or
add
add
add
add
addb
add
inc
xchg
dec
push
shlb
and
add
andl
adc
add
addb
add
add
add
nop
add
add
add
rcll
mov
add
inc
add
inc
sub
add
addb
inc
add
add
xor
add
or
inc
loope
adc
add
and
inc
addl
add
and
jo
add
addb
add
add
or
xor
add
add
add
add
or
inc
bound
push
adc
add
inc
addb
addb
inc
or
add
push
inc
add
add
add
addb
les
dec
add
mov
add
add
add
addb
and
and
sub
sbb
add
push
add
orb
add
add
inc
add
and
add
cwtl
adc
add
add
imul
push
add
sub
andb
adc
addb
push
add
test
add
dec
add
sub
addb
add
push
add
pop
or
dec
add
adc
add
and
adcb
add
add
push
add
inc
and
and
add
add
mov
add
rolb
add
add
and
inc
and
pusha
adc
and
jo
adc
add
or
add
dec
shll
shlb
addb
or
or
rclb
add
and
push
inc
add
add
add
sbb
and
pusha
xor
push
sub
add
add
or
and
cmp
sbb
and
dec
add
mov
push
add
adc
movsb
add
add
add
push
add
and
add
push
inc
addb
cwtl
add
xchg
add
add
inc
sbbb
lds
inc
sbb
inc
adcb
mov
add
mov
inc
add
add
nop
add
lcall
add
add
adc
add
mov
push
add
add
add
inc
and
add
inc
adc
adc
orb
or
xor
adc
add
nop
and
add
and
add
add
push
add
adc
sub
pusha
add
mov
add
add
inc
add
add
jecxz
add
push
adc
add
addb
adc
add
add
loope
adc
xchg
dec
add
mov
mov
inc
adc
adc
push
and
or
jge
adc
sbb
xor
or
adc
add
adcb
mov
les
add
add
add
add
inc
inc
adc
adc
xor
add
adc
add
or
push
add
add
addb
add
add
add
addb
es
adc
test
and
add
dec
add
add
add
add
inc
push
dec
adc
sbb
mov
adc
add
mov
add
xor
add
add
add
push
adc
push
add
data16
inc
dec
add
inc
add
xor
add
adc
and
popa
add
sub
or
addb
add
pop
push
add
or
lret
roll
add
adc
mov
adc
add
cmp
adc
mov
pusha
add
or
add
add
adc
or
or
add
add
add
add
add
inc
add
push
adc
add
add
add
cwtl
or
add
or
and
push
and
inc
adc
dec
inc
add
mov
inc
add
sub
movsb
adc
test
add
and
add
adc
inc
and
add
add
rorb
add
addb
lock
add
add
or
push
or
add
pusha
and
adc
add
addb
sub
adc
add
or
or
add
add
inc
add
pop
add
dec
add
add
add
sub
sub
push
add
mov
inc
add
addb
add
add
add
add
add
and
and
mov
or
sbb
imul
add
nop
add
dec
inc
test
inc
add
int3
adc
add
add
nop
add
and
add
add
inc
adc
adc
add
inc
or
or
push
add
add
pusha
adc
insb
loope
add
add
add
inc
adc
add
add
add
pusha
inc
add
addl
adc
mov
add
add
ret
inc
adc
addb
add
dec
xor
addl
add
push
add
push
inc
inc
push
add
sub
add
addl
nop
add
or
add
sbbl
add
add
add
add
inc
mov
add
mov
add
add
pop
xor
add
add
es
dec
sub
or
xorb
add
push
inc
add
pop
and
add
adc
add
add
add
or
or
add
add
and
and
orb
add
adc
add
and
inc
push
or
popa
adc
and
mov
or
adc
sbb
add
add
add
add
push
xor
or
adc
mov
test
es
cmpsl
add
dec
adc
inc
add
inc
inc
or
add
adc
add
addb
add
cwtl
or
add
add
add
and
lcall
and
addb
add
add
push
dec
inc
pop
add
and
add
adc
movsb
test
add
push
add
push
stos
rorb
add
or
add
and
addb
add
or
add
and
add
jo
add
add
add
add
ss
adc
add
xor
add
add
xor
add
push
adc
sub
mov
push
adc
add
lret
rorb
inc
inc
adc
adc
and
adc
or
xor
add
inc
or
add
or
sbb
push
dec
add
add
test
adc
and
add
add
dec
add
add
adc
add
nop
rol
add
add
mov
roll
add
adc
sub
nop
add
insb
add
adcl
add
xchg
arpl
pop
inc
or
add
add
adcb
and
and
dec
pop
or
adc
and
or
inc
and
add
inc
add
push
add
add
xchg
adc
inc
test
add
or
add
add
push
add
shlb
or
addb
and
or
adc
add
adc
add
add
add
add
orb
pusha
add
or
jbe
add
inc
addb
adc
adc
mov
popa
inc
add
dec
add
xchg
add
inc
add
and
adc
bound
adc
and
add
mov
add
or
roll
add
inc
inc
add
sbb
testb
add
add
push
add
and
rorl
aad
xchg
or
imul
fs
sbb
mov
mov
pop
dec
cmpsb
loop
lods
or
sub
sahf
outsb
or
jbe
push
enter
into
test
sbb
inc
fs
jecxz
ficomps
icebp
lcall
out
add
sub
cmp
loopne
cmpsl
data16
roll
push
mov
cmp
cwtl
cwtl
ja
cmp
add
adc
je
mov
sbb
or
and
rorl
into
fldcw
jae
loopne
test
loopne
pop
or
xchg
xchg
add
jmp
sahf
rclb
sbb
aam
pop
ja
xor
popf
or
jmp
sahf
lods
xchg
bound
xchg
mov
iret
imulb
data16
rcrl
jmp
popf
or
jmp
mov
cmp
mov
or
jmp
rcrb
jmp
mov
fidivrl
add
xor
sbb
aad
jmp
popf
aam
int
and
out
or
out
adc
inc
adc
pop
push
and
xchg
out
aam
cld
pushf
or
int
and
int
and
mov
aam
int
jmp
cmp
aam
push
xchg
add
jmp
popf
ds
cld
push
pop
jb
jecxz
xchg
mov
out
lods
mov
mov
mov
fucomp
ja
mov
lods
daa
imul
and
movsb
andb
xor
mov
ljmp
sbb
sub
loop
out
sbb
sub
push
lret
pop
xchg
sbb
push
mov
adc
int
pop
jmp
push
fldenv
jmp
adc
aam
jmp
xor
mov
sbb
or
jmp
mov
in
mov
or
jmp
or
adc
jmp
sbb
daa
imul
in
movsl
in
loope
and
xrelease
or
xchg
divb
idivb
clc
mov
out
movsl
dec
xchg
andb
aam
sbb
jg
adc
push
lret
inc
mov
cmp
mov
jg
repz
in
insb
jbe
xchg
xorb
jg
add
mov
or
iret
in
jle
cld
jl
xor
mov
push
hlt
mov
pop
daa
fs
or
adc
jmp
mov
xor
dec
popf
jno
sub
shrl
sahf
aam
iret
jno
lods
rcl
rcrl
jmp
into
dec
push
jmp
lcall
jmp
jae
lahf
push
int3
ds
popf
sahf
aam
pop
or
mov
jmp
into
mov
cvttps2pi
add
push
pop
adc
cmc
call
push
aam
in
jnp
sub
movsb
stc
sub
mov
push
push
jae
rclb
js
lcall
add
pop
xchg
mov
and
jmp
dec
or
pop
nop
or
inc
loopne
test
loopne
pop
std
mov
popf
hlt
push
jmp
test
mov
sahf
mov
jmp
out
ds
fxtract
call
in
mov
jmp
rcrl
xor
push
mov
notb
mov
movsl
xor
popf
sarb
jp
push
push
adc
add
into
sarl
sahf
ss
int
xor
int
and
mov
jno
cmp
sarl
cli
gs
mov
fwait
dec
idivl
rcrl
push
enter
jl
cmp
or
jmp
sbb
iret
push
jmp
push
sarl
int
push
andb
adc
mov
push
mov
jmp
int
and
mov
push
push
pop
cwtl
daa
sbb
popf
xor
fdivs
or
jmp
sbb
rcrb
jmp
push
aam
jae
xchg
in
sahf
aaa
lret
adc
pushf
or
push
adc
cmp
lret
aam
or
mov
xor
mov
or
adc
mov
add
orb
push
sbb
xor
repz
lds
jbe
into
mov
loope
sbb
jecxz
outsb
in
bound
cltd
jae
out
and
sub
cld
mulb
ret
cld
xchg
adc
pushf
incb
sub
jmp
popa
and
ja
insb
imul
and
ja
sub
sbb
sbb
push
out
ja
push
fsubrs
pop
jmp
mov
xor
and
jge
mov
imul
mov
int
loop
icebp
js
sub
lea
shlb
ljmp
ds
or
add
aam
enter
jmp
cmpsb
fsubl
mov
inc
xchg
pop
mov
jmp
or
sahf
aam
shll
add
pushf
jb
jecxz
aam
jl
push
cs
rcr
rorb
lods
repz
dec
sbb
jecxz
cli
sub
jmp
sub
sbb
sub
push
push
jmp
mov
movsl
jecxz
aam
adc
or
jmp
sahf
aam
push
mov
push
mov
sti
sub
sahf
xchg
dec
mov
out
or
sub
es
lock
fsubp
sahf
aam
lods
je
shr
pop
std
das
xchg
sbb
mov
push
lret
push
jmp
sbb
push
aad
and
cmp
popf
and
jge
and
movsb
aam
js
mov
out
ror
adc
sub
mov
imul
int3
ret
add
fstpt
insb
sahf
pop
mov
insb
into
pop
out
ret
test
jo
enter
or
rcl
adc
clc
pop
cmp
xlat
cmpsb
xchg
sbb
out
xor
pop
mov
nop
je
fs
inc
lahf
dec
sbb
push
notb
cmp
test
adc
dec
jge
adc
push
inc
inc
adc
stos
nop
mov
xchg
add
xor
add
pushf
sub
jmp
jnp
sbb
push
lock
mov
pusha
in
loop
push
sahf
push
jge
stos
gs
dec
int
mov
push
mov
out
mov
leave
jle
jbe
or
mov
mov
mov
jp
pop
rorb
xor
sbb
xor
movsb
sbb
ja
xchg
dec
pop
popf
and
filds
cmpsb
push
inc
mov
stos
dec
mov
sub
fdivr
fadd
popf
cwtl
and
pushf
int3
cmpb
aad
jo
out
push
in
inc
xor
push
inc
or
out
out
cmpsb
fs
aas
push
es
mov
inc
add
sbb
mov
jg
pop
jle
lods
sub
push
ljmp
jns
xchg
in
dec
daa
lret
call
pop
dec
push
das
mov
mov
sbb
pop
mov
cs
sbb
subb
outsb
and
jl
and
inc
xchg
xchg
cmp
sbb
rol
rolb
int
call
repz
jg
cmp
adc
pushf
pop
orb
dec
outsl
pop
loopne
mov
xchg
in
pop
lret
and
push
add
int
leave
mov
sti
mov
mov
jno
jecxz
inc
xchg
movsl
es
adc
lahf
sbb
shr
pop
push
jo
dec
ret
xchg
repz
fdivrl
pop
fwait
cld
sub
jbe
xlat
sbb
cli
in
inc
js
insl
inc
inc
xchg
stos
or
lahf
xchg
pop
out
push
adc
scas
sub
mov
test
jb
jp
js
push
popf
xchg
sbb
push
out
sbb
insb
pop
mov
jecxz
hlt
jge
loopne
mov
pop
lods
mov
fcomip
cmpsl
gs
je
aaa
aas
out
add
sub
cmp
dec
lods
sbb
shrl
push
out
xor
out
fsubrs
cmp
lret
jmp
dec
dec
and
xor
loopne
aad
movsb
inc
mov
pop
jne
mov
cwtl
movsb
and
xor
adc
ja
mov
cli
shr
lret
mov
cmp
jnp
scas
mov
stos
inc
leave
sbbb
nop
outsb
outsb
fists
jns
call
xchg
call
aam
das
lcall
cs
cmp
mov
xlat
mov
and
enter
inc
scas
nop
jl
push
ds
jno
loop,pt
into
rolb
adc
cmp
mov
sub
adc
mov
xorb
inc
movsl
jnp,pt
or
int3
das
rcrl
inc
jns
lods
mov
pushf
int
xor
in
sahf
inc
faddl
int
pusha
insb
xchg
cs
in
jecxz
orb
pushf
pop
mov
jae
ds
push
rorl
adc
xor
ja
aaa
mov
inc
lods
xor
shlb
shufps
xor
aad
fstl
and
push
pusha
ret
ss
jo
js
cmp
test
jecxz
shll
mov
xor
xor
les
js
stc
fcoms
xor
and
adc
lods
adc
cwtl
mov
mov
fisubrs
inc
mov
lcall
push
jno
pop
sub
ljmp
or
mov
push
pop
clc
and
inc
fildl
aas
inc
loopne
or
test
pop
or
mov
sub
and
repz
dec
mov
cmp
sarb
mov
ficoms
es
cmp
dec
repz
and
xchg
in
xchg
mov
fwait
roll
pop
pushf
sbb
dec
or
mov
mov
xchg
sbb
cwtl
lret
por
lods
aas
or
mov
or
mov
stos
es
loope
sub
js
xor
ret
mov
mov
pop
pop
scas
and
pop
push
pop
add
icebp
pop
and
sar
add
cmpsb
xchg
adc
push
in
int3
int3
iret
cmp
push
jo
test
mov
gs
aad
inc
iret
jecxz
add
in
mov
lods
push
mov
scas
into
mov
mov
lahf
aad
adc
jnp
add
push
out
nop
shr
and
mov
loope
rorl
or
mov
cmp
xchg
sbb
arpl
in
in
adc
in
mov
mov
aad
xor
cwtl
imul
test
das
imul
or
jmp
and
pop
push
jle
pop
loop
mov
aas
outsb
adc
outsl
add
inc
leave
into
out
inc
aad
xchg
mov
xchg
mov
xor
sub
jle
and
cmp
pop
rolb
lret
inc
fidivrs
add
lds
es
aam
adc
jg
sbb
adc
pop
jmp
mov
test
shrb
push
sbb
dec
push
or
gs
repnz
cwtl
xor
pop
sbb
arpl
and
ret
jg
push
call
in
insl
fimuls
add
out
imul
loop
cmp
lret
iret
sub
shlb
cmp
pop
cmp
std
mov
lods
insl
cwtl
ss
pop
cmc
repnz
cwtl
push
fstpt
icebp
sub
or
movsb
adc
loop
rorb
and
pushf
popf
jp
xor
xor
and
shrl
jns
in
and
and
loope
inc
cltd
cmp
mov
adc
mov
stos
paddusb
outsb
sahf
mov
jmp
mov
push
push
fsubrs
add
xor
es
shr
std
xor
add
mov
push
cmp
jg
bnd
add
mov
pushf
sbb
jne
xchg
dec
and
inc
fldl
jmp
lret
and
mov
inc
frstor
das
cmpb
pop
idiv
sub
jno
subb
orb
adc
dec
insb
out
xlat
imul
mov
cmpsl
mov
scas
inc
mov
cmp
ljmp
sbb
push
cmpsb
jb
add
adc
gs
push
in
push
insb
or
cwtl
dec
jg
dec
cld
in
add
nop
fwait
int
xor
add
dec
sbb
sbb
push
push
movups
xor
ljmp
jbe
outsb
std
in
mov
js
mov
jnp
fs
in
fs
stos
ret
or
jl
mov
arpl
outsb
jmp
mov
lea
jne
movsl
lcall
add
sbb
mov
icebp
adc
or
outsb
adc
insl
mov
xor
xchg
adc
inc
cmc
jb
adc
push
andl
push
xchg
pop
stos
inc
js
fwait
jle
mov
cmp
dec
xor
cmpb
xchg
mov
into
cmp
mov
dec
lahf
in
lock
jmp
cmp
xchg
mov
int3
sub
mov
movsl
add
imul
out
sbb
jecxz
mov
push
push
pushf
fldl
jmp
xor
hlt
push
ret
in
out
xchg
hlt
lods
mov
ljmp
scas
add
lods
jne
cmp
outsb
addr16
pop
lds
loope
cmp
xor
pop
xor
and
mov
lret
adc
push
dec
pop
jne
or
cli
fcomps
repnz
insb
cli
lret
mov
sub
mov
inc
jp
sub
cli
mov
pop
adc
aam
mov
adcl
cltd
insb
sbb
lret
lds
loopne
sti
rcll
stos
mov
in
cwtl
or
or
jnp
cld
mov
mov
mov
ret
adc
add
mov
sub
jne
shll
xchg
mov
pop
repz
in
fs
clc
insb
pushf
shl
cmp
fmull
inc
mov
ficoms
scas
push
jo
pop
add
data16
repz
cs
mov
lock
ljmp
xchg
mov
sbb
and
cmp
and
ss
xchg
xor
jbe
inc
insl
pusha
fcmovb
in
loopne
scas
xchg
xor
in
scas
xlat
outsb
sbb
sub
and
cmp
imul
push
idivl
adc
push
dec
arpl
sarb
test
sub
pop
iret
fists
mov
repz
sbb
xchg
sbb
xchg
jb
cmp
jae
out
jno
cmp
inc
mov
mov
sbb
insl
cld
test
outsb
xor
mov
aam
sti
in
jnp
inc
mov
ds
aaa
push
jle
mov
add
xor
enter
test
or
xor
pop
pop
sbb
xchg
adc
fwait
das
imul
lea
lds
pop
leave
pop
push
call
dec
lret
xchg
pusha
cltd
xchg
repnz
cmp
sub
or
mov
loop
aad
mov
cmpsb
call
pop
repz
xchg
xchg
lods
ficomps
insl
pop
cmp
sub
xor
jo
push
push
bound
xchg
rcrl
aad
inc
push
cltd
push
push
jae
in
in
in
inc
dec
inc
mov
jle
cmp
cwtl
mov
mov
xchg
fwait
push
push
jne
loope
jmp
mov
insl
fcom
std
inc
ss
xchg
test
jae
je
mov
inc
mov
scas
sub
es
out
lret
pop
pop
pop
outsb
cmpsl
xchg
mov
mov
das
sahf
cmp
jae
cmp
rorl
mov
cs
iret
push
sub
inc
addr16
inc
mov
xor
xor
ret
xor
loop
lods
cmc
pop
es
pop
jae
jbe
inc
xor
jge,pt
xchg
int3
adc
cmp
add
or
jge
scas
or
add
sti
xchg
and
pop
nop
cmp
mov
pop
jno
movb
and
js
mov
fiadds
sbb
sbb
xchg
jle
rorl
arpl
filds
jle
mulb
into
xor
push
int
jnp
sbb
loope
pop
shrb
xor
cmp
gs
outsb
mov
das
shrl
out
loopne
sbb
push
cli
add
dec
mov
jno
fisubrs
lods
sbb
sub
into
push
repnz
ror
fdivrs
mov
adc
inc
out
sbb
xchg
es
je
imul
cmp
lea
aas
jne
adc
inc
jmp
ja
test
or
sub
and
or
in
jle
jecxz
mov
jmp
icebp
mov
shrb
mov
cmp
jmp
pop
or
roll
rorl
icebp
xchg
cmp
and
inc
mov
lods
add
inc
fcomps
inc
adc
jbe
stos
pop
test
repnz
shrb
mov
jmp
repnz
adc
pusha
movsl
rcll
dec
and
xchg
out
xor
fdivrl
xchg
movsl
jg
stos
mov
adc
pop
test
outsl
mov
and
lods
stc
add
mov
je
sub
sbb
pop
cs
lret
xchg
out
fbstp
test
lods
sbb
int
cmpb
insl
jmp
inc
cltd
pop
jl
mov
adc
sti
pop
push
push
add
addr16
add
fnsave
scas
sbb
repz
xchg
xchg
cwtl
dec
jnp
addl
outsb
repz
je
pop
int
mov
loop
dec
xor
sbb
in
sbb
les
or
inc
pop
jns
jle
mov
std
leave
jl
cmp
test
out
fldenv
insl
out
push
xor
mov
mov
xchg
cmp
lret
fidivrl
sub
aam
sti
es
hlt
mov
pop
cld
movsl
sub
jnp
push
push
cmp
mov
test
nop
cmp
mov
push
es
ss
lea
lods
shr
cmp
out
sbb
fidivs
xor
loope
xlat
jae
daa
fs
loopne
mov
add
sbb
cmp
dec
ds
ret
jb
sbb
out
xchg
cmpsb
mov
adc
lds
ljmp
xlat
jmp
mov
sub
psubsb
cltd
xchg
and
dec
mov
dec
insl
lea
lds
sub
push
xlat
inc
lods
mov
cltd
test
nop
insb
pop
loope
mov
cmp
xchg
xchg
sar
xchg
cld
orl
in
fmul
push
mov
inc
mov
or
test
jns
fsts
xlat
dec
sbb
fbld
fs
and
mov
mov
xchg
mov
cmp
jnp
add
mov
xor
pop
repnz
xchg
je
mov
sbb
ds
fimuls
fimuls
into
xor
outsl
push
notb
filds
mov
mov
xchg
dec
scas
mov
and
mov
test
xor
sub
leave
dec
mov
hlt
xor
mov
pop
dec
mov
mov
ret
mov
cli
aaa
sub
inc
inc
stos
adc
sub
fisubrl
mov
mov
shlb
dec
lock
sbb
adc
out
pop
imul
push
inc
pop
xchg
mov
inc
xor
sbb
push
mov
sub
jge
fisttpl
fadd
add
clc
loopw
mov
fwait
cwtl
gs
adc
add
mov
pushf
div
and
pop
mov
in
cmp
outsb
lock
jecxz
sbb
cmp
into
cmp
popf
lcall
adc
pop
xor
outsb
outsb
sub
das
pop
imul
cs
inc
dec
sbb
ret
xor
pusha
add
jns
push
pop
sbb
inc
jecxz
ss
pop
pop
cmp
mov
incb
xchg
rcr
addl
ja
aam
pop
inc
dec
test
push
in
mov
mov
xor
push
aad
cs
movb
leave
imul
sub
cmp
out
add
popf
adc
cli
adc
hlt
and
sbb
hlt
xchg
cmpsl
sbb
clc
cmc
clc
popf
xor
je
jp
gs
je
cmpsl
jo
ljmp
dec
pop
sub
fisubl
repz
jp
xor
inc
sub
movsb
add
andps
sub
mov
cmc
call
inc
xchg
mov
aam
loope
jge
in
popf
xchg
xor
arpl
test
mov
and
add
out
push
ja
imul
push
cmp
push
in
out
stos
mov
pop
mov
fcomps
inc
inc
xor
mov
adc
ret
push
mov
lcall
cmpsl
ds
scas
pop
cmp
xor
xor
dec
push
push
push
lret
mov
leave
insb
push
sarl
cli
jo
push
iret
in
pop
cmpsl
addl
imul
inc
jbe
jecxz
mov
jmp
fcoms
fwait
jmp
jg
or
pop
out
imull
imul
push
cli
loopne
lret
int3
test
test
dec
pop
cmc
cmc
lcall
mov
repnz
mov
add
or
enter
push
pusha
lcall
outsl
js
add
insb
mov
lds
lcall
mov
sub
ja
js
cs
pop
sub
mov
pop
push
mov
mov
jecxz
lret
add
js
dec
lcall
mov
mov
mov
inc
pop
cmp
daa
rcl
movsl
mov
mov
jns
jg
cmp
std
xor
pusha
pusha
ss
sbb
jbe
sbb
imul
loop
cmpsl
xchg
ds
lcall
js
fsubs
fnstsw
jb
inc
xchg
int3
aad
dec
pop
sbb
or
dec
and
mov
xchg
pop
or
out
jo
rcrl
div
bswap
loopne
cmp
add
sarl
xchg
jmp
bound
iret
push
add
sbb
or
cmp
cmp
fs
pop
std
nop
inc
aam
sub
repnz
push
push
jecxz
imul
arpl
push
jns
dec
add
push
dec
inc
dec
adc
out
outsb
pop
popf
int3
inc
inc
push
mov
push
jns
pop
rclb
out
imull
icebp
mov
mov
mov
sahf
lcall
adc
outsb
cwtl
and
cmp
jne
cmp
andb
adc
push
test
xchg
arpl
dec
es
outsl
dec
out
mov
out
fst
cmp
xor
xchg
mov
aas
xchg
out
sbbl
sub
mov
addr16
add
int
adc
fwait
clc
call
cmp
int
ret
je
cmp
int
data16
or
mov
dec
nopl
push
leave
leave
rcr
mov
pop
pop
outsl
fxch
stc
cmp
push
and
adc
ficomps
popf
aaa
mov
inc
in
dec
int
idiv
push
dec
lea
int
cmp
enter
cmp
dec
pushf
scas
cli
into
dec
pop
mov
jbe
pop
xchg
cs
mull
mov
lods
sbb
jp
icebp
pop
repnz
jo
jae
scas
aas
rcrb
inc
insl
in
sbb
pop
pop
sti
pop
sahf
ss
icebp
inc
mov
xor
push
repnz
and
xor
pushf
cld
les
hlt
add
stos
or
pop
pop
mov
jle
aaa
or
or
and
cmp
and
mul
jno
nop
sub
imul
push
in
xor
xchg
cmp
loopne
rcrl
or
inc
pop
sbb
mov
inc
in
scas
push
test
repz
mov
jecxz
rcr
fisttpll
cs
jmp
xchg
inc
popa
hlt
jbe
sar
pushf
push
lds
movsb
cmpsb
and
and
inc
loop
loopne
or
push
cwtl
or
xchg
mov
stos
pop
push
mov
mov
mov
pop
jnp
push
and
lock
pop
cs
pushf
inc
arpl
jecxz
cli
mov
or
call
xlat
mov
jl
mov
dec
mov
lret
enter
add
stos
int3
push
and
imul
xchg
scas
out
jae
fdivl
mov
sbb
cmp
add
in
or
icebp
daa
push
aaa
frstor
mov
xchg
ss
xchg
leave
sbb
lock
subl
add
ljmp
test
pop
mov
out
add
movsb
dec
insb
add
iret
and
in
movsb
dec
lahf
out
stos
cld
mov
mov
xorl
xor
dec
and
mov
aad
adcb
inc
mov
jo
push
lock
popa
xor
push
or
or
lahf
pusha
and
imul
mov
xchg
xchg
push
jle
das
xchg
pushf
and
cmp
jle
ljmp
enter
pop
shll
mov
xor
mov
pusha
cmp
call
add
and
int3
hlt
icebp
hlt
xchg
jp
xchg
pop
adc
addl
aaa
push
or
mov
jg
jp
pop
aam
and
xchg
cli
xor
cld
test
mov
mov
xor
mov
add
pop
inc
push
shll
insb
xor
sbb
jae
add
sbb
imul
int3
mov
rclb
or
dec
fmull
mov
movsb
cli
sub
stos
add
xchg
mov
cmp
stos
push
xor
mov
testb
pop
add
sub
test
dec
fiaddl
leave
out
test
fstl
repnz
xchg
aas
repz
insl
and
stos
pop
xchg
dec
inc
ret
cmc
or
or
incb
push
ret
mov
or
mov
lret
nop
jae
adcl
fdivr
sbb
ret
cli
adc
shl
ljmp
ret
pusha
mov
aaa
push
jnp
out
testb
sbb
ffree
sbb
jnp
test
cmp
adc
stc
lret
imul
in
cmpsl
xor
pop
and
push
push
imull
das
adc
aam
inc
sarl
loope
dec
add
and
xchg
fidivl
scas
int3
decl
inc
fidivs
sub
cmp
in
fsubrs
and
xor
push
loop
add
es
jo
lret
movsl
adc
call
mov
and
add
gs
adc
test
popa
addr16
adc
js
lea
mov
xor
or
pop
les
adc
lcall
sbb
mov
out
mov
sti
inc
mov
shll
mov
lret
pop
sbb
div
add
fucomip
in
fists
push
push
inc
xchg
lock
adc
in
lea
scas
ret
lds
ja
and
push
lea
inc
lea
jb
repz
sub
pushf
es
fldcw
lret
mov
es
pushf
les
pusha
in
test
movsb
adc
jmp
mov
push
testb
fisttps
mov
nop
stc
xlat
mov
imul
roll
in
mov
mov
movsb
mov
negb
xor
push
lret
cmp
jbe
and
jo
pop
pop
loope
popf
hlt
aam
test
xor
mov
pop
xor
popa
nop
sbb
je
adc
jbe
mov
or
lahf
mov
std
std
cmpsl
aaa
jl
lcall
jnp
rcrb
cmp
jns
cmpsl
call
fnsave
lahf
es
sub
add
jl
aad
sub
jne
push
add
mov
scas
cmp
lcall
loop
fsubrl
out
pop
mov
xchg
xchg
cmpsb
out
add
test
dec
pusha
cmpsb
lcall
xor
mov
mov
minps
jae
xchg
pop
mov
inc
idiv
imul
aam
ss
fs
or
fstl
xor
dec
bound
mov
and
jecxz
inc
lcall
jge
je
pop
testb
arpl
jmp
mov
or
jmp
leave
mov
fdivrl
adc
and
mov
lret
xor
push
lahf
lods
sub
and
or
adc
mov
dec
mov
sbb
cld
scas
ret
aam
mov
stos
mov
push
imul
test
mov
jge
std
sub
jl
out
mov
xchg
shll
cmp
ljmp
push
add
add
clc
pop
sti
xchg
imul
mov
sti
or
shll
jp
mov
jnp
aaa
ret
test
fimuls
inc
clc
mov
cld
add
and
or
adc
addr16
mov
cmp
jne
or
mov
rorl
inc
or
lods
push
fstps
shl
out
cmp
in
sub
xchg
nop
aad
loope
loope
push
enter
jbe
fcomps
pushf
sbb
xchg
lods
adc
out
int
push
and
test
inc
pop
frstor
lcall
nop
stos
dec
scas
fldt
cmp
sub
repz
outsl
insl
push
movsb
shll
popa
lret
int3
mov
jne
bnd
scas
sbb
mov
xchg
mov
push
jp
cmp
les
notb
or
lret
js
pop
sbb
cmc
xchg
pop
cltd
repnz
movsb
and
sub
lods
sbb
xor
in
push
and
mov
insb
pop
es
into
or
loope
jns
and
fcmovbe
dec
lahf
lock
fwait
lea
fisttpll
jb
cs
jnp
loope
int3
insl
imul
sbb
jno
fimuls
push
mov
and
dec
adc
aam
adcl
mov
movsb
outsb
popf
ret
add
dec
cmpsl
cs
das
rorl
out
dec
nop
xchg
cwtl
in
std
lds
push
dec
pushf
mov
decb
sarl
dec
movsb
xor
pop
fidivs
mov
add
in
cmp
mov
outsb
xchg
mov
dec
sbb
sbb
inc
xor
psubusb
mov
mov
sarb
xor
xchg
pusha
in
push
insl
clc
sub
pop
cmp
loop
les
int3
shlb
dec
jmp
add
in
movsl
dec
cmpsb
pop
test
imul
jge
mov
or
test
icebp
mov
js
dec
jbe
ds
push
mov
repz
shl
lods
xor
jl
clc
mov
cmpsl
repnz
test
in
cmp
nop
adc
jmp
cld
push
repnz
jge
add
dec
and
xchg
add
imul
int3
stc
lea
rol
push
cmpsb
and
cmc
jno
and
sahf
loop
pop
out
fdiv
lcall
std
shl
fstpl
mov
push
and
jecxz
neg
aam
inc
or
in
xor
iret
dec
loope
adc
je
push
mov
movsl
iret
scas
add
pop
nop
test
lock
js
cmp
xlat
or
sar
jecxz
dec
in
shrb
jecxz
enter
aaa
aam
mov
insb
xor
leave
push
sti
and
lods
jae
insb
sub
cmp
mov
icebp
pop
hlt
fimull
dec
popl
mov
mov
pop
lret
in
iret
outsb
dec
cmc
pop
arpl
push
pop
jp
into
loop
insl
mov
adc
bound
mov
stc
test
cmp
cmp
dec
scas
ss
and
sub
push
jo
gs
outsl
int
cmpsl
mov
ret
ljmp
es
mov
jnp
adc
inc
xchg
outsl
cli
mov
cmp
gs
sub
repz
leave
mov
cmp
mov
mov
ret
imulb
insb
or
mov
cltd
sub
and
mov
jge
mov
ja
cmc
clc
arpl
cltd
inc
fsts
jae
xchg
push
test
xchg
sub
loopne
push
aad
test
mov
insl
cmp
clc
adc
scas
mov
imull
sbb
scas
test
jb
xchg
pop
inc
ss
mov
pop
fldcw
push
ficomps
fstpt
mov
test
lcall
xchg
movsb
or
mov
fdivl
push
faddp
mov
arpl
mov
jae
les
test
dec
push
cmp
dec
popf
pop
cmpsl
loopne
movb
es
out
ficoml
cmpsl
push
pop
sub
cld
cli
cmc
fldenv
inc
cmpsb
imul
idivb
in
shr
and
push
cmp
test
jb
pop
out
shll
push
inc
sbb
xchg
pop
lods
jnp
dec
inc
or
scas
mov
lret
mov
cmpsb
mov
imul
or
or
xor
pusha
lods
lock
bnd
in
sub
pause
and
mul
std
or
cmp
cmc
movsb
push
cmp
ljmp
leave
iret
loopne
outsb
inc
call
mov
cmp
xor
cmpsl
cmp
sahf
or
and
loop
mov
sarb
inc
inc
xchg
add
mov
test
insb
cwtl
imul
bound
test
fistpl
xlat
mov
xor
icebp
enter
lahf
xchg
rcl
and
imul
pushw
dec
jmp
into
lods
shl
mov
fs
dec
adc
mov
sub
push
mov
out
cmp
adc
sahf
lahf
leave
inc
movsb
notb
mov
add
pavgw
ss
popf
mov
sbb
mov
mov
mov
mov
jbe
gs
add
out
ja
push
adc
fsubrs
sub
sbb
addr16
dec
or
mov
cmp
pushf
int3
dec
cli
sub
stos
adc
std
jmp
pop
stos
xchg
inc
xlat
adc
inc
cmp
loop
popf
lock
push
push
fadds
imul
jmp
inc
loopne
sbb
insb
mov
and
push
adc
inc
pop
xchg
xor
sbb
test
addr16
lock
or
repz
sub
push
mov
add
inc
imul
pusha
test
and
imulb
bound
xlat
or
mov
sbb
xchg
in
subl
add
lret
xor
lcall
outsl
clc
sub
mov
subl
sti
mov
outsb
adc
pop
cmp
xlat
add
push
sub
xor
adc
fildl
mov
xchg
movsb
das
stc
jno
lds
mov
shlb
xchg
stos
xchg
mov
lret
adc
inc
fiadds
int
adcb
xchg
xchg
outsl
loope
mov
jbe
and
push
xchg
cltd
dec
hlt
dec
lea
dec
mov
outsl
pop
ja
fninit
cmp
xchg
cmp
xchg
inc
or
scas
dec
xchg
pop
call
cmp
push
jecxz
out
dec
xchg
rorl
sbb
xor
shlb
std
xchg
push
dec
xlat
cmc
and
jns
push
xor
push
fidivrs
in
sub
loop
int
adc
sar
adc
or
dec
rclb
pop
push
add
mov
adc
jecxz
fldcw
sbb
aad
mov
push
inc
sbb
mov
xlat
xlat
add
inc
into
pop
sahf
mov
ret
subl
loop
cmp
lcall
movsb
add
jbe
mov
mov
nop
push
lcall
int
cmpsb
pop
add
lahf
pop
rorb
popa
stc
in
nop
push
aaa
pop
or
push
out
in
movsl
or
rcrl
std
pop
das
xchg
dec
lock
rep
and
or
jae
pop
repz
int3
jb
in
mov
jno
bound
dec
fmuls
and
sub
mov
mov
adc
adc
ret
aas
inc
pop
xlat
mov
mov
or
dec
imulb
sahf
or
mov
in
mov
add
bnd
insl
push
pop
fwait
loopew
jns
dec
dec
cmp
int3
fcmovnbe
loope,pt
mov
jae
sub
jle
jne
bound
les
mov
outsl
loope
cmp
outsb
sbb
rclb
mov
dec
xchg
repnz
lcall
pop
ja
mov
sub
in
cltd
and
sbb
cld
or
mov
jl
mov
scas
cmpsl
or
shrl
adc
pop
popf
and
xchg
mov
mov
pop
dec
jb
js
push
jge
adcl
xor
add
jae
mov
icebp
add
xchg
mov
cmp
sbb
sub
sub
lcall
roll
fisubs
jo
test
mov
mov
adcl
push
or
scas
imul
sahf
mov
gs
ret
mov
push
mov
cwtl
push
bswap
sbb
mov
lods
fwait
mov
stc
punpckldq
mov
fistl
push
je
mov
lock
in
arpl
dec
cmp
cmp
ret
jg
xor
push
jg
cmp
mov
pop
push
adc
mov
mov
push
cli
test
inc
ror
inc
fldl
cwtl
pop
mov
mov
and
dec
test
lahf
xchg
or
or
aas
ljmp
popa
mov
mov
fwait
mov
cwtl
mov
and
sub
mov
sub
push
outsb
push
dec
mov
adc
aam
sahf
push
push
jb
sbb
scas
fnstsw
and
lcall
out
faddl
leave
imul
rcrb
ss
test
and
cmc
or
sbb
inc
outsb
pop
jmp
push
dec
and
testl
add
mov
adc
loopne
sbb
cmpsb
mov
jmp
jbe
fldl
les
mov
add
and
sti
push
push
les
ret
push
fisubs
out
sti
mov
mov
pop
sbb
sub
mov
mov
xchg
push
xchg
push
ret
mov
cmp
incb
cmp
push
sub
sti
mov
xor
or
push
xchg
in
sbb
mov
jb
jle
dec
adc
es
fmull
dec
loope
test
in
inc
mov
sub
es
pop
test
jp
sub
mov
jg
outsl
sub
insl
mov
mov
repnz
mov
dec
int
inc
fcmovbe
out
repnz
shl
cmpsl
lret
or
cld
shll
lods
adc
adc
adc
scas
std
add
popa
clc
sbb
cmp
loopne
out
mov
mov
ret
stos
sub
ss
dec
int3
fisubrl
outsl
mov
xchg
jle
into
dec
sub
data16
subb
cmp
sub
sub
and
fwait
incl
loopne
aam
nop
gs
loop
pop
rclb
inc
sahf
andl
iret
rcrl
dec
mov
outsl
ja
fiadds
lahf
int3
sbb
aaa
cwtl
sahf
test
mov
inc
icebp
cli
pop
addr16
out
add
push
stc
dec
clc
push
divb
sbb
iret
notb
fwait
int3
adc
enter
mov
and
pop
jbe
icebp
stc
pop
or
fsubr
inc
clc
stos
mov
scas
mov
push
enter
outsb
cmp
fdivl
mov
out
aaa
mov
cwtl
rcrb
pop
or
ret
push
fsubp
pusha
xchg
into
out
int
xchg
in
or
jl
das
and
lds
or
cli
cmp
jl
leave
mov
jae
loope
orb
cmp
jmp
jl
mov
mov
ds
lods
adc
mov
jo
push
and
sbb
mov
imul
add
pop
fidivrs
pushf
mov
xchg
outsb
jmp
cs
outsl
adc
mov
movsb
call
and
push
cmp
int
xor
cwtl
jp
sbb
mov
cmpsb
inc
dec
xchg
gs
jle
ficoms
movsb
popa
xchg
lock
xchg
rcll
mov
imul
cli
and
add
in
les
pop
jl
cli
lods
testl
fildl
mov
cmp
into
int3
cmp
jg
or
push
dec
lods
xor
shlb
and
add
lods
or
mov
test
test
jnp
sub
popa
cmc
mov
addl
jnp
mov
aam
cvttps2pi
cmpsl
dec
dec
sahf
and
lock
xor
iret
adc
loopne
fcoml
js
sub
mov
orb
mov
push
xchg
fsub
pop
cmpb
or
cmp
xchg
push
lock
movsb
inc
pop
sti
rcll
mov
cld
imul
repnz
add
adc
xchg
stc
or
shll
lcall
sbb
xchg
push
lret
sbb
pusha
xchg
in
lcall
lahf
mov
imull
mov
and
and
repnz
fsubp
inc
stos
fucom
std
shufps
ds
rcr
outsl
cmc
cmp
iret
aam
mov
mov
mov
lcall
lcall
or
xchg
pushf
fstl
mov
stos
into
push
sub
cs
mov
sub
int
movsb
mov
shrl
jb
ds
add
and
mov
xchg
dec
cmc
ss
or
sub
xor
cmp
repz
jecxz
test
jge
mov
shl
stc
xor
int
jbe
cltd
xchg
adc
cltd
int
cmp
add
and
icebp
std
mov
xor
inc
xchg
dec
mov
mov
lods
div
or
pop
or
adc
repz
and
daa
bound
cli
and
scas
xor
add
js,pt
addr16
jbe
inc
sub
sbb
std
leave
xchg
imul
cmpb
jns
nop
jno
or
pop
adc
orl
lods
lahf
cmp
cli
jnp
jo
pop
push
jbe
and
xor
xchg
mov
cmpsl
cmp
adc
xor
arpl
and
nop
dec
inc
cmp
push
mov
xchg
jp
jno
xchg
and
xchg
mov
push
cmc
and
dec
xor
push
iret
sub
jge
insl
repz
add
rorw
push
and
ds
and
leave
clc
xchg
xchg
push
add
sbb
push
xchg
inc
shl
js
xacquire
sti
lds
cwtl
mov
outsb
test
mov
pop
cwtl
mov
iret
inc
mov
xchg
out
dec
xlat
mov
pop
movsb
cld
loopne
mov
mov
fcom
sbb
add
enter
push
mov
push
out
or
das
sti
pop
rorl
push
dec
jecxz
cmp
jmp
mov
cmpsb
sbb
sub
in
mov
xchg
mov
sahf
adc
push
xchg
or
or
jp
cltd
in
int
cmp
add
cwtl
sbb
or
imul
adc
fcomi
lds
aas
pop
mov
xlat
pop
mov
imul
cmp
jle
mov
inc
and
pop
into
aam
icebp
add
fbld
mov
sbb
sbb
in
mov
subb
mov
xchg
loopne
jp
xchg
pushl
dec
pushf
aad
and
out
fs
ljmp
aas
cltd
mov
xlat
fistpll
jae
std
add
pop
mov
icebp
sbb
cmc
inc
lret
mov
push
std
outsb
jnp
xor
int
js
fcoms
andb
clc
pop
mov
lret
sahf
jle
int3
cmp
sbbl
fs
xchg
fidivs
aam
add
aas
push
push
out
ss
push
add
push
movsb
movsb
icebp
fiaddl
fistpll
mov
repz
or
fisubrl
xor
or
cld
dec
mov
in
fcmove
sub
ds
std
adc
mov
cmpsb
loopne
push
cmp
jbe
pop
stos
mov
mov
minps
push
mov
shrb
xchg
leave
dec
inc
inc
je
imul
or
addw
cmpsb
xchg
movsb
sub
mov
jae
mov
or
pop
lds
xchg
iret
mov
popa
xchg
sub
lret
test
xchg
stos
jnp
aas
nop
lahf
sub
in
scas
xor
jl
movsl
jmp
cmp
cmpsl
out
mov
mov
cmpsb
sub
scas
jo
loopne
pop
and
arpl
jb
mov
dec
pushf
cmpsb
or
inc
scas
sub
out
cltd
pop
add
and
xchg
icebp
pop
es
in
popa
mov
jle
daa
insl
jecxz
je
push
imul
icebp
pop
mov
pop
int
sbb
call
push
fisttpl
dec
outsl
xor
mov
sub
add
aaa
leave
mov
dec
xor
movsb
mov
or
scas
and
add
cmp
mov
es
pushf
sub
imul
mov
testb
negl
ljmp
neg
popa
ret
and
out
int3
das
ss
repnz
or
xchg
mov
push
inc
push
dec
push
push
dec
arpl
testb
pop
sti
rcrw
lods
xor
xchg
cmp
xchg
jmp
test
call
inc
jnp
xchg
and
xchg
fildl
mov
test
ja
dec
je
scas
repnz
cld
jge
push
in
leave
stc
out
rcl
cmpsl
mov
insb
aad
sbb
gs
fcomps
adc
mov
sub
in
mov
cmp
shlb
scas
jne
mov
aaa
adc
mov
repnz
int
movsl
loopne
ljmp
movl
std
lock
leave
mov
xor
popf
add
adc
outsb
cld
orb
or
mov
jmp
push
out
sub
pusha
aaa
mov
push
mov
inc
jge
xor
inc
ss
xchg
inc
pop
xchg
dec
sub
and
out
fwait
pop
dec
in
je
ret
fcoms
stos
clc
in
inc
cmp
ljmp
scas
sbb
mov
outsl
sbb
xor
enter
mov
cltd
sti
jmp
xor
dec
into
xchg
mov
sub
xor
in
push
cmpsb
popf
mov
loopne
pcmpeqb
cmp
hlt
popa
cmp
jg
sahf
ret
popa
loop
icebp
into
dec
ret
lock
in
ret
ret
ljmp
xchg
or
pop
addl
and
push
lds
shrl
in
mov
das
xor
push
clc
cmp
xor
ret
jmp
cmp
es
mov
cmp
jecxz
jns
cmpsl
jne
pop
cmp
cmp
mov
cli
push
or
cmp
nop
scas
pusha
mov
sub
dec
aam
inc
sub
iret
jmp
xor
dec
xchg
sub
xor
xchg
aad
adc
xchg
pop
cmpl
add
insl
test
push
popa
nop
lret
adc
xor
add
test
and
call
call
fcomps
xchg
mov
jbe
aam
subl
mov
outsb
adc
or
icebp
aam
dec
mov
loop
mov
xor
lods
push
add
jae
sub
clc
mov
movsb
or
fdivrp
popa
xor
mov
push
std
or
add
jp
mov
scas
sub
pop
lcall
xchg
dec
mov
fs
int3
xchg
mov
mov
pop
mov
ljmp
jo
sub
push
ficomps
jno
insb
scas
mov
jno
es
and
jmp
xchg
pushf
dec
add
test
mov
xor
les
sbb
jo
dec
and
xchg
sub
addb
xor
shlb
pusha
es
mov
mov
dec
adc
pop
out
fadd
mov
push
movsl
mov
shl
xor
adc
and
cmpsb
out
push
dec
mov
outsl
pusha
data16
mov
mov
testb
fsubp
das
xor
popa
dec
bound
neg
das
push
lds
cmc
fisubs
daa
mov
into
add
lea
rcrb
insl
inc
ffree
mov
lret
add
fistpl
clc
stos
pop
sbb
push
movsb
clc
xchg
lcall
inc
or
and
xchg
cmp
lcall
outsb
nop
add
pop
or
xchg
xchg
inc
adc
pusha
xor
pop
lock
xor
mov
stos
pusha
ss
dec
rcll
mov
mov
cmc
or
out
insl
dec
icebp
push
sub
stos
in
or
add
in
push
cmp
push
cli
addl
jno
jge
adc
fdivs
test
js
iret
insl
dec
or
add
dec
jnp
scas
into
xchg
dec
mov
mov
jmp
mov
inc
cltd
test
stos
push
pop
mov
jno
hlt
arpl
pop
sbb
push
mov
and
das
xchg
ss
ret
xor
xchg
rolb
std
inc
ret
lcall
add
aas
fnstenv
xchg
mov
test
dec
stos
ss
repz
mov
popa
stos
je
outsl
js
repz
fwait
xor
sub
negl
loopne
cmpsl
notl
dec
jp
mov
inc
in
sub
cltd
sub
cmp
xchg
push
loop
mov
cltd
les
mov
lds
rcrl
mov
jb
ret
cli
test
mov
cmp
push
sbb
lods
sub
int
push
mov
fsubrs
mov
pop
inc
mov
scas
sub
fnstcw
jmp
xor
dec
dec
fwait
cmp
xor
push
xchg
cli
push
mov
xor
scas
jl
jl
fisubrs
rdtsc
cwtl
es
mov
mov
hlt
and
inc
imul
fs
test
xchg
push
int3
ss
outsb
mov
mov
cmpsb
push
pop
and
pushf
hlt
mov
or
and
andb
sti
jg
adc
out
push
aaa
sbb
fbld
enter
xor
repnz
add
mov
jb
fwait
sub
adc
sarl
mov
inc
imul
xchg
fbstp
and
xchg
jb
pop
mov
mov
and
adc
dec
dec
xchg
fisttpl
cmp
pop
imul
and
in
or
mov
mov
xchg
sti
js
xor
dec
dec
xchg
aas
outsl
jmp
cli
sarl
pop
mov
xchg
or
jp
movsb
test
adc
ret
lahf
out
adc
lcall
icebp
lock
mov
outsl
add
sahf
aaa
sbb
adc
cmp
lea
ret
lret
sbb
dec
add
loopne
pop
cld
ret
add
int
aaa
mov
adc
pop
in
orl
rcrl
push
aam
aad
lret
jb
push
addr16
mov
jmp
sbbb
mov
jb
mov
pop
sub
mov
sub
popa
out
popa
sahf
icebp
movsl
xor
push
aaa
jmp
adc
push
sti
fs
enter
out
ss
and
adc
mov
push
movsb
in
fcmove
push
pusha
jo
cs
lret
and
lock
jbe
idiv
add
testb
dec
rorb
pop
jmp
repz
jne
nop
add
ret
mov
cs
pop
sub
aas
adcl
std
xchg
mov
xchg
je
sub
xchg
mov
adc
inc
ss
test
inc
inc
adc
mov
data16
mov
imul
mov
xchg
or
xor
push
cmp
shll
lods
xchg
ret
imulb
mov
jae
push
repnz
cmp
out
aad
sbbl
data16
inc
outsl
jnp
pushf
cmp
rcrl
inc
pop
addr16
push
jg
mov
cmpsl
subl
or
sbb
in
mov
adc
loop
adc
test
jg
imul
js
jb
sub
mov
jne
jne
sbb
pop
inc
iret
pop
ss
shlb
and
sub
hlt
nop
sub
mov
lret
add
cmp
dec
sbb
popf
testl
jbe
imull
stc
jne
sets
inc
xchg
xor
fisttps
dec
add
insl
mulb
mov
mov
fcomi
dec
pop
push
fldt
movsb
js
stos
add
std
out
adc
mov
mov
enter
inc
insl
jae
push
movsb
das
mov
ljmp
scas
mov
popa
movsb
ds
lods
jae
clc
adc
jmp
aad
push
lock
cmp
or
je
shrb
pop
lods
les
jno
mov
sbb
les
xchg
je
pop
scas
and
push
push
sahf
push
mov
sub
lret
clc
sub
sub
cmpl
push
adc
pop
and
xchg
pop
pop
mov
repz
inc
call
xchg
out
xchg
pop
fists
daa
dec
mov
out
addl
out
cwtl
sbb
jne
mov
push
cmp
fsts
mov
pop
jecxz
mov
cli
test
imul
xor
xor
fistpll
lcall
fsubr
dec
dec
jb
jne
in
stos
sbb
inc
js
xchg
push
dec
xor
add
sbb
push
rorb
xor
adc
out
ljmp
mov
rolb
xchg
addr16
adc
mov
mov
iret
test
cli
jg
shlb
in
les
and
mov
mov
mov
mov
sahf
loope
test
enter
sbb
in
out
and
icebp
xchg
jecxz
add
mov
jl
sub
adc
je
es
sub
push
and
cwtl
dec
out
mov
adc
xlat
cmpsb
andb
fs
inc
jae
or
fadd
jno
in
adc
mov
add
into
jns
std
jp
dec
mov
mov
cmp
pop
or
xor
loop
lods
or
insb
and
add
dec
sbb
and
mov
adc
push
jae
sahf
fdivrl
dec
adc
loope
push
sbb
push
sbb
jmp
sbb
xchg
dec
js
ja
fstp
mov
test
out
mov
xor
adc
in
xchg
push
mov
ret
pop
xor
xchg
popf
xchg
test
mov
lcall
decb
and
jmp
mov
es
add
adc
sbb
push
out
pop
mov
fistl
ds
scas
popf
push
xchg
arpl
fdivl
mov
push
jmp
sbb
aad
jne,pt
cmp
scas
jle
pop
pusha
and
cmp
mov
dec
sbb
daa
jmp
test
rcrl
sbb
stos
arpl
inc
jmp
or
pop
add
push
sbb
jg
mov
scas
jnp
lds
mov
mov
push
cmp
add
enter
mov
push
and
dec
jge
pop
push
dec
js
shrb
stos
mov
cmp
adc
ljmp
xor
jp
sarb
sti
mov
ror
mov
hlt
popa
push
mov
dec
pop
xchg
fisubs
out
pop
insl
lahf
ljmp
sbb
or
push
or
lret
pop
fstl
push
movsb
aam
mov
sub
pop
out
inc
cs
rcr
lcall
aam
sbb
repz
cs
aaa
mov
xlat
insl
pop
dec
in
fwait
cwtl
cmp
mov
call
and
fsub
mov
mov
push
mov
dec
adc
push
push
dec
shlb
mov
sti
xor
in
cmp
pop
in
pop
sti
jo
stos
repnz
in
jae
or
stc
jl
ficoml
adc
loope
cmp
mov
ss
jmp
imul
push
ss
pop
xchg
lock
mov
fiadds
aaa
mov
jae
mov
stos
out
adc
adc
test
mov
ss
or
insl
or
adc
mov
mov
mov
inc
push
fildl
adc
cld
adc
sub
imul
rolb
add
lcall
xchg
sbb
fs
push
mov
orb
in
inc
les
add
lea
ret
sub
cmp
repz
mov
cmp
stos
rorl
ret
or
cs
mov
add
aas
inc
add
dec
lea
add
mov
inc
aas
dec
cwtl
adc
arpl
ds
sbb
cli
stos
mov
mov
sub
or
sub
mov
mov
ds
insb
mov
jl
cmpsl
dec
jle
out
push
insb
mov
out
add
dec
imul
jmp
enter
orl
mov
push
jo
cmc
sub
nop
mov
ja
xor
loop
jb
cli
faddl
or
lret
sub
mov
xchg
mov
test
and
test
xchg
sbb
sbb
jmp
jmp
pop
jns
dec
cmp
aad
jp
les
inc
fwait
pop
icebp
push
js
mov
ja
incb
fwait
mov
and
cmc
js
data16
dec
sub
notb
rolb
nop
mov
and
inc
dec
stos
femms
push
mov
lret
xchg
add
sahf
repnz
clc
fistps
ret
jecxz
out
push
nop
and
inc
xchg
xchg
push
inc
in
inc
dec
sbb
nop
fs
inc
shl
mov
inc
movsl
xor
call
and
add
push
pop
testl
stos
push
xchg
jae
mov
dec
es
aad
ret
aad
lods
mov
cmpsb
insl
pop
test
into
mov
int3
ljmp
aaa
inc
jbe
iret
lret
out
mul
jb
mov
mov
pusha
das
inc
mov
jbe
xor
out
shrb
pop
jo
je
pop
psrad
sbb
and
push
sbb
cmp
pop
lock
insl
sbb
push
jp
fwait
ljmp
aas
cmp
movsl
xor
push
loop
aam
outsb
xor
addl
dec
insb
gs
call
jg
adc
pusha
popf
mov
inc
fcompl
ror
jmpw
push
clc
pop
push
mov
imul
and
mov
js
orb
scas
ss
nop
xchg
cmp
fcompl
scas
test
adc
jl
sbb
out
enter
jo
xlat
ds
popa
cmp
divb
sub
repnz
cwtl
lods
sbb
sti
and
pop
js
jns
pop
lods
test
xor
xchg
or
int3
and
lods
enter
enter
out
xor
orl
pop
out
fs
jae
inc
mov
mov
and
sub
scas
data16
cmp
scas
pusha
xor
mov
out
fdivrl
rolb
fwait
stos
mov
adc
adc
fucomi
and
xlat
dec
sbb
mov
stos
movsb
insb
std
cld
outsl
and
daa
cld
movsl
aad
mov
add
mov
pop
push
mov
mov
xchg
add
bound
ja
or
or
dec
inc
fwait
outsl
lret
adc
mov
pusha
into
fdivrs
ja
jae
cmp
cmp
lahf
dec
and
inc
jecxz
shlb
jecxz
cmp
out
sbb
dec
fs
fildl
loop
pop
inc
push
push
and
and
decb
hlt
sub
dec
pop
mov
into
add
negb
repz
enter
movsl
adc
pop
lret
bound
movsb
fldenv
mov
sub
in
insl
in
clc
push
popf
and
lock
or
addr16
jnp
jge
push
ljmp
xor
addr16
push
mov
add
sub
sbb
mov
push
lcall
mov
mov
dec
sub
dec
stos
xchg
mov
adc
ljmp
jno
push
inc
aaa
addr16
ret
xchg
jbe
arpl
mov
xor
add
push
in
ficompl
int3
mov
ja
mov
mov
dec
mov
or
xchg
mov
lock
out
sub
lea
jmp
xor
xor
fldt
push
lcall
les
stos
mov
cs
out
sbb
popf
dec
jmp
mov
or
xchg
cli
loope
pop
cmp
dec
test
lods
arpl
push
dec
cmpsb
adc
push
push
mov
adc
xchg
lret
mov
lret
fimull
mov
xchg
pop
or
or
iret
xor
cli
imul
cmp
lea
rcrl
dec
push
mov
sub
dec
enter
cmpsb
and
push
clts
das
movsb
sbb
dec
ret
les
mov
xor
adc
pop
cwtl
mov
pop
pop
xchg
aaa
stos
cld
aaa
out
inc
maxps
minps
mov
push
add
int3
into
adcl
adc
dec
pop
stos
pop
sarb
mov
ss
xchg
cli
lock
fwait
outsl
sti
jmp
ds
add
sets
or
xchg
lcall
outsb
int
cmc
mov
rcr
xor
inc
and
cmp
cmp
dec
andl
pop
mov
lock
or
sub
dec
js
xor
lds
fiadds
and
jo
out
stos
mov
je
fs
mov
xchg
push
xor
jmp
pop
push
in
cmp
mov
aas
push
cld
cmpsl
xor
cmp
pop
scas
test
push
es
dec
jle
popa
add
js
add
xor
xor
push
and
xchg
xlat
ret
xlat
mov
into
fisubl
xchg
outsb
fdivs
fdivs
lods
mov
sub
jb
je
push
mov
jnp
popf
js
mov
mov
lds
jge
outsl
or
jbe
and
fbld
add
inc
jbe
push
pop
outsl
out
insl
pop
mul
test
scas
xchg
and
or
out
pusha
mov
dec
stos
lea
mov
jns
wbinvd
inc
adc
inc
xlat
lahf
jge
fistps
jmp
mov
scas
xchg
xchg
push
jl
sub
in
das
sub
push
xchg
in
pop
xlat
aad
int
cmp
sarl
negl
es
outsb
out
loope
scas
leave
outsb
js
inc
notl
inc
xor
xchg
add
in
mov
add
imul
insl
popa
mov
mov
mov
mov
push
outsl
ss
xchg
arpl
insl
in
jae
sub
xor
mov
cmp
iret
inc
cwtl
cmp
pop
pushf
test
jge
push
clc
ficompl
xor
xchg
xor
mov
negb
mov
push
imul
into
cmp
bound
cli
test
in
pop
lret
stc
cmp
out
test
gs
sbb
in
pop
mov
addb
enter
cmp
pop
xor
dec
je
cltd
mov
dec
mov
add
push
pop
imul
push
orl
int3
aad
or
mov
and
lds
or
dec
jl
imul
aam
aas
sub
inc
fcomip
jnp
inc
loopne
int
int
sub
test
and
fcmovbe
ds
add
xchg
test
std
outsb
cwtl
adc
sahf
cmp
inc
dec
aam
stos
jnp
pop
loopne
adc
nop
inc
xlat
jns
jbe
cwtl
fxch
outsl
cmpb
mov
pusha
fidivl
dec
xchg
xor
jbe
push
cmpsb
and
ja
cmp
pop
add
dec
arpl
dec
inc
std
jns
arpl
ja
jg
idiv
jmp
cltd
jns
cld
in
xor
or
scas
mov
cld
pop
sarl
xor
inc
inc
mov
loop
sbb
push
decb
cmp
mov
and
bnd
cmp
adc
sbbl
lahf
pop
fistpl
mov
xchg
mov
dec
jge
adc
sub
loopne
jb
fsubs
and
std
dec
sub
rcl
and
jg
mov
loop
sbb
xor
arpl
adc
sub
insl
dec
fildll
mov
repnz
fs
adc
out
pmullw
jbe
jbe
push
in
dec
subb
aam
jb
in
fwait
ret
mov
cmp
test
jecxz
jg
push
push
jae
ret
dec
xor
add
push
mov
dec
and
insb
cmpsb
cli
std
idivb
aas
mov
cmp
shrl
fs
jl
orb
mov
dec
mov
sarb
mov
fldenv
sbb
add
lcall
repnz
xchg
fldcw
jns
out
in
lods
jp
push
push
pop
movsb
rclb
cmp
add
jge
ss
dec
ret
das
ds
lds
lcall
lahf
arpl
add
fnstenv
js
adc
ja
mov
sahf
sbb
and
cli
jne
in
push
pop
mov
fbld
dec
mov
sbb
in
pop
mov
cmp
iret
fs
cmovs
or
sti
inc
jp
fadd
pop
pop
int3
lahf
jge
hlt
bound
or
adc
iret
mov
mov
or
inc
and
mov
fs
adc
cmp
sbb
inc
data16
arpl
pop
lahf
imulb
shlb
insb
out
mov
pop
xchg
mov
jnp
or
mov
jb
push
xchg
inc
sti
imul
popa
or
inc
fdivs
pop
test
std
in
xchg
xchg
inc
pop
jno
fadd
aad
data16
push
ds
ficoms
nop
lds
push
dec
cld
ffree
sub
loope
pop
ja
pusha
sub
dec
mov
push
leave
or
and
sbb
testb
ret
in
mov
stos
push
push
pushf
cld
mov
sub
imul
and
mov
cmp
scas
out
or
fdivl
sarb
sbb
or
pop
repz
jnp
xchg
xor
jo
js
mov
add
inc
stos
sbb
inc
dec
jmp
leave
jle
pop
inc
jno
pop
sub
std
dec
inc
jecxz
mov
enter
pop
test
outsb
jae
aam
pop
push
cwtl
xor
adc
out
loopne
mov
cmp
jnp
cmpb
push
and
sbb
jno
xchg
push
ja
pop
inc
and
add
fistpll
in
jo
fdivs
cmpsl
mov
js
pop
pop
mov
rcrl
mov
cmp
xor
mov
push
test
sahf
insb
push
or
fbld
bound
push
rol
jae
gs
add
in
int3
sahf
std
nopl
jnp
ret
lret
add
shll
out
and
ficompl
aad
mov
test
out
dec
mov
clc
or
rcr
pushf
push
in
fwait
sahf
dec
lds
push
shl
mov
cmp
out
addr16
dec
cmp
lret
inc
popf
test
cli
jecxz
sbb
push
dec
decl
push
insl
call
out
sub
loopne
stos
adc
jo
cwtl
xor
shlb
outsb
or
mov
jmp
je
cwtl
pop
dec
lods
pop
daa
addr16
jle
jo
mov
js
mov
pop
lds
sub
jle
scas
jns
pop
xor
inc
dec
pop
mov
sub
mov
in
adc
jg
push
cmp
mov
add
adcb
dec
mov
dec
ljmp
or
scas
push
adc
sub
adc
dec
in
jmp
jns
xchg
gs
popa
push
popa
movsb
roll
sar
push
sub
std
push
movl
or
movsb
push
into
lret
sbb
mov
jo
inc
inc
aad
cmp
lahf
cs
add
xchg
repz
jmp
push
vmovsldup
mov
imul
mulb
inc
jne
bound
out
push
or
hlt
mov
ljmp
stc
push
xchg
dec
fs
mov
inc
pop
sub
stc
xor
outsb
and
cmp
in
cltd
pop
jge
sti
cs
adc
mov
xor
jne
dec
sbb
dec
cmpsb
out
mov
in
scas
cld
ret
cld
mov
sbb
cmp
sub
std
push
adc
add
ficompl
ja
xor
fdivs
imul
dec
pop
dec
and
fdiv
enter
sbb
das
fcompl
jbe
in
inc
xchg
lea
fnop
testb
pop
in
adc
in
aaa
mov
call
stos
stos
jle
cltd
sub
outsl
int
into
jl
push
sbb
jecxz
push
cmp
shrl
mov
inc
stc
push
les
pushf
mov
loop
lock
mov
shl
aad
ret
in
cmp
orb
mov
dec
mov
pop
in
pop
sbb
push
sahf
xchg
notl
pop
mov
mov
addr16
xor
sub
pusha
jle
cmp
dec
jl
push
push
aad
add
popf
sarb
popf
sbb
fldenv
test
out
fstpl
pushf
adc
in
in
or
or
in
push
popf
ficoms
push
les
sub
sub
cld
aas
mov
mov
xor
repnz
cwtl
adc
xchg
fildll
mov
insb
repnz
jmp
mov
test
add
cmpsb
or
fldcw
lods
mov
scas
notl
test
or
lock
std
clc
sbb
inc
sub
les
inc
adc
lahf
adc
xchg
fdivr
add
push
push
fimull
call
out
fmuls
popl
push
das
addr16
adc
dec
imul
loopne
push
push
xchg
mov
and
xchg
mov
fiadds
std
pop
aad
and
call
mov
mov
scas
push
inc
inc
loope
push
and
aam
push
sub
inc
cmp
xor
lret
xchg
aam
sub
daa
inc
cmp
into
in
outsb
mov
mov
xchg
pushf
mov
add
mov
cmp
into
jnp
lret
mov
dec
out
iret
fwait
inc
mov
lea
xor
pop
fsubrs
push
leavew
das
xor
pop
and
lds
fcomp
je
push
in
outsl
pop
xchg
ds
cmp
or
jbe
mov
pop
jb
jle,pt
pop
nop
iret
jge
aaa
imul
nop
mov
cmc
aam
psubusw
mov
ret
inc
loop
adc
xchg
mov
sbb
icebp
lds
outsb
jmp
in
pop
pop
jb
in
sbb
jle
jb
into
xchg
jg
push
sub
adc
cld
insb
mov
out
test
mov
int3
xlat
aas
out
in
mov
sub
jne
adc
and
out
rcrl
or
mov
imul
movsb
sub
push
ds
inc
std
gs
jns
gs
mov
jne
xor
adc
pop
fiadds
push
pop
sar
jns
fwait
push
mov
push
mov
movsb
pop
int
inc
sahf
popf
out
sub
pop
scas
cmpsl
ljmp
mov
daa
push
nop
jbe
mov
dec
xchg
xchg
mov
cmp
and
out
push
mov
cltd
lea
insb
adc
sbb
dec
cmpsl
out
or
mulps
dec
pop
xlat
dec
pop
movsl
xor
cmc
inc
pop
gs
in
lock
fstl
add
out
mov
adc
js
pop
mov
je
jae
sub
add
loop
pusha
mov
add
mov
ret
dec
lock
push
or
pusha
lahf
and
loope
mov
jg
ret
aas
push
sub
inc
and
push
sub
in
jmp
mov
xchg
xchg
outsb
and
outsb
cltd
jmp
popf
mov
dec
mov
push
sbb
je
add
adc
mov
push
push
fbld
sbbb
repz
cmpsl
pop
sbb
das
and
jnp
push
pop
icebp
gs
insl
cmpl
adc
scas
mov
test
rep
scas
arpl
or
mov
pop
xchg
push
stc
lret
lret
push
outsb
push
mov
stc
jp
add
je
adc
sbb
inc
push
mov
mov
sbb
cmp
ljmp
push
mov
outsb
dec
cmp
cmp
jo
add
xchg
cmc
clc
mov
decl
adc
mov
pop
jle
jnp
outsb
inc
sahf
insl
mov
sub
push
push
out
adc
push
cmpb
mov
aaa
cmpsl
or
mov
shr
fisttpll
addr16
jp
pushf
popa
ja
sarb
or
lcall
sahf
std
xchg
dec
fildll
pop
lock
or
arpl
arpl
mov
lea
insl
aaa
xchg
cld
mov
jns
pop
ljmp
lcall
pushf
call
sahf
sbb
ja
mov
repnz
pop
and
xor
fcoml
sbb
or
je
xor
icebp
lret
lret
popf
movsl
or
xor
sub
arpl
xor
aaa
mov
jbe
jns
icebp
pop
cmpb
sbb
xor
sbb
sbb
imul
mov
mov
mov
scas
add
fs
cmp
int
adc
jg
jge
jbe
xor
js
mov
mov
push
cmp
xor
dec
lods
imul
nop
adc
or
stc
jns
inc
dec
popf
loop
ret
sub
cmc
sbb
jecxz
and
push
push
iret
rolb
or
jge
ja
je
sbb
insl
sbbl
clc
imul
scas
lods
push
pop
inc
push
gs
push
out
enter
xchg
mov
int3
cmp
fimuls
jecxz
xchg
cmp
fldenv
push
lcall
cmp
out
sub
or
hlt
ja
test
sahf
inc
xchg
mov
jo
mov
jnp
in
lret
lock
xor
add
inc
call
into
add
xor
jnp
insl
loope
push
shr
insl
pop
lcall
in
xor
shll
mov
out
mov
or
cmp
sbb
out
movsl
test
fmull
adc
mov
insb
cmp
in
js
or
jmp
push
mov
js
mov
repz
hlt
insl
xchg
arpl
mov
stos
ds
mov
and
cmpsl
lret
ds
enter
clc
addr16
mov
sub
and
sub
addr16
aas
adc
add
out
aaa
jo
mov
mov
xorl
pushf
aaa
fcomps
out
iret
and
jo
and
into
mov
fnstcw
sub
and
jmp
xchg
pop
mov
lods
aas
repnz
in
sbb
sbb
or
xor
insb
or
shlb
push
dec
std
ret
xchg
cmp
push
aam
dec
sub
mov
jae
mov
ret
out
xchg
pop
test
inc
push
push
insl
push
inc
jne
jle
scas
jg
ss
shrl
call
cwtl
cwtl
push
gs
and
lock
inc
push
or
push
cli
cmp
jae
fcmovbe
jbe
pop
inc
lock
and
jae
mov
lds
sub
add
push
mov
inc
pop
subb
dec
push
mov
js
push
ja
mov
mov
jbe
push
int3
xor
pushf
jl,pt
or
lods
rcl
rolb
sub
fisttpll
jb
repz
loop
ja
add
add
fiaddl
sub
cmc
fnsave
xchg
mov
pop
test
jmp
setbe
and
mov
in
and
adc
test
adc
pop
cmp
test
sbb
imul
loop
shrb
sarb
and
incl
xor
movsl
out
push
xchg
jl
pop
mov
cli
and
mov
pop
popf
jne
xor
and
jle
jae
and
mov
sub
xor
sub
jecxz
jl
iret
xor
mov
push
into
xor
push
dec
arpl
inc
es
fwait
in
sbb
xor
xchg
pop
mov
daa
pop
adc
pop
arpl
pop
xor
das
pop
fidivl
in
push
ss
mov
ret
lret
add
imul
es
mov
mov
sbb
mov
jge
fwait
jmp
dec
stc
xor
enter
cmp
lods
out
ficomps
lods
xchg
mov
mov
shr
adc
sub
sbb
sub
jb
push
dec
daa
mov
inc
mov
jp
push
les
popf
adc
in
cmpsb
mov
pop
or
mov
cltd
xchg
dec
scas
inc
inc
mov
lahf
dec
ja
sar
out
sub
loop
and
lods
push
lods
or
pop
jecxz
lds
leave
sub
movsb
jle
outsl
loop
sti
out
leave
add
mov
outsb
xor
dec
push
xchg
cmp
mov
push
cltd
pop
jbe
dec
or
mov
test
addr16
cmp
dec
adc
fiaddl
push
cmp
sbb
dec
shl
sub
sbb
inc
adcl
cmp
mov
xor
add
pop
inc
pusha
sub
movsb
inc
adc
inc
filds
jmp
cmpsl
repnz
xchg
lea
jbe
rcrl
mov
dec
gs
mov
mov
dec
lahf
ret
mov
xor
test
stos
lcall
subl
cmpsb
movsb
loopne
insb
push
jo
sbb
dec
mov
jl
mov
or
sbb
dec
push
and
popa
ficoms
enter
jae
jb
mov
adc
dec
push
int
xchg
and
adc
pop
dec
pop
cmp
jne
push
and
xor
scas
pop
out
sti
xchg
sub
mov
sbb
in
xor
mov
cmc
shrl
rclb
sbb
and
cmp
sub
push
mov
cmpsb
sub
xchg
insb
push
xchg
cmp
test
jmp
and
mov
add
mov
test
jbe
and
xchg
ds
mov
sarb
in
test
mov
sbb
lock
cld
xchg
jl
in
mov
es
pop
hlt
cwtl
lock
popf
int
cmp
inc
ficoms
fsubrs
inc
mov
out
mov
sub
cmp
xor
int3
cmp
outsb
js
leave
xchg
dec
insl
scas
addb
popf
outsb
mov
shll
and
xchg
repnz
out
xchg
add
inc
paddsw
ljmp
and
ds
ret
fistps
pop
outsl
cs
ss
sub
mov
jns
mov
jp
jp
mov
inc
dec
roll
fdivrs
in
and
aas
jmp
sbb
mov
fdivs
aaa
into
repz
adc
push
dec
ja
into
loope
mov
aas
aaa
cld
jp
xchg
popf
xchg
andl
mov
mov
in
dec
mov
push
sub
push
pop
jecxz
inc
cmp
xor
aas
mov
add
into
ja
popf
dec
xor
jnp
ret
outsb
clc
arpl
inc
cwtl
lcall
sub
mov
sbb
pop
lods
lea
dec
add
pop
aas
push
fsub
cmpsl
js
sarl
cmp
es
push
mov
cmpb
adc
xchg
fs
jnp
adcb
push
or
test
out
or
lret
jmp
ret
and
sar
std
push
ret
push
test
xchg
into
lods
call
xchg
mov
ja
cmovs
jo
stos
sub
dec
dec
or
xchg
sahf
jae
adc
push
int3
cmp
stos
std
lcall
fldl
push
push
xor
js
into
and
cmp
or
in
xchg
scas
data16
imul
cli
adc
adc
inc
sarb
mov
or
ficoms
sub
dec
jle
sub
push
push
xchg
fmuls
mov
cmp
repz
loop
cmp
ljmp
enter
add
cli
pop
pmullw
cmpb
and
repz
ss
and
push
popa
out
mov
imul
pushf
and
lods
mov
insb
test
in
cld
cmp
mov
xchg
mov
and
insl
sti
popa
fisubs
push
sti
mov
or
data16
mov
sbb
dec
jne
pop
sub
shrl
push
and
dec
mov
inc
fiadds
cwtl
lahf
mov
or
inc
shl
lret
and
jb
dec
fldenv
fcompl
popf
mov
jae
test
into
dec
addr16
imul
jle
sub
mov
lcall
push
push
in
popa
sub
test
cmpsl
lcall
mov
test
push
jg
neg
dec
mov
rorb
add
mov
sahf
sbb
mov
stos
jae
shll
imul
cmp
mov
test
fnstenv
mov
add
fstpl
gs
adc
jmp
jecxz
mov
sub
lcall
and
mov
pop
xchg
inc
out
mov
cmp
jae
jp,pt
test
ficoml
pop
mov
popf
lock
enter
imul
mov
stos
ss
mov
testl
shlb
cmp
lret
sub
mov
into
arpl
xchg
cmp
lea
sub
sahf
sub
and
stc
aas
pop
mov
xor
sar
and
lahf
push
and
pop
and
xchg
mov
jecxz
jg
pop
mov
pop
dec
mov
pusha
cmp
adc
cmp
xor
pushf
arpl
add
ja
int3
adc
jge
shlb
mov
lret
or
mov
xor
cmpsl
add
cmp
push
icebp
jo
lods
mov
mov
sub
and
leave
cld
jecxz
loopne
addr16
mov
movsb
scas
into
mov
jl
jge
into
adc
adc
and
arpl
sbb
mov
jl
popa
and
das
ss
cmc
in
in
ficomps
imul
aad
les
mov
xchg
xor
or
jp
in
cli
mov
jns
pusha
fcmovnb
outsb
pop
jae
outsb
xor
xchg
mov
pop
sarl
pop
pop
jecxz
jae
enter
mov
fmulp
pop
scas
add
jmp
mov
cwtl
xchg
sub
aam
adc
mov
adc
jle
jle
mov
cmp
or
lret
sub
xchg
and
or
cwtl
lds
out
dec
sub
sbbl
add
lds
fldenv
icebp
cli
xorb
add
jnp
pop
pop
pop
rclb
inc
fistl
or
mov
pusha
dec
add
scas
nop
cmp
mov
outsl
mov
add
adc
and
mov
mov
adcb
mov
adc
add
mov
sub
jbe
daa
adc
ja
cmp
rcrl
sub
popf
fcompl
mov
push
dec
inc
jae
test
jns
jno
mov
lcall
ret
fnstcw
in
mov
xchg
pop
dec
cld
lock
cmp
mov
sahf
shll
mov
ljmp
outsb
push
aaa
jmp
imul
xchg
add
adc
mov
nop
mov
lcall
mov
test
lock
or
negb
or
jge
mov
mov
mov
getsec
push
cmp
ret
nop
call
or
lea
xchg
and
sbb
mov
sti
subl
int
push
sbb
adc
cwtl
jmp
dec
pop
cmc
mov
jle
jl
inc
mov
fs
inc
loope
adc
push
movsl
cmpsb
mov
jo
sub
mov
cmpsb
scas
push
ja
mov
mov
pop
into
xor
bound
and
cli
repnz
jp
inc
in
push
pop
jne
push
mov
and
aaa
cli
push
outsl
and
pop
mov
inc
aaa
movsb
enter
sbb
inc
push
mov
xchg
pop
adc
popa
jle
sbb
insl
jno
push
and
cmpsb
call
mov
std
jns
pop
sbb
dec
mov
or
bound
cmp
cmpsb
jb
int
ss
push
aad
xor
jmp
lods
xchg
mov
pop
dec
sub
dec
loopne
fildll
and
mov
cltd
cld
dec
jne
xchg
inc
testb
lret
in
or
xor
or
loopne
pushf
mov
inc
xlat
arpl
pop
sub
cmp
cs
mov
adc
jns
jecxz
test
jecxz
or
xchg
insb
xor
in
daa
mov
inc
popf
add
push
or
or
jecxz
adc
adc
arpl
data16
imul
decl
cmp
xor
sbb
inc
nop
inc
mov
xor
setge
add
pop
or
or
dec
pop
js
push
or
daa
sub
xchg
test
push
mov
jecxz
pop
pop
cltd
push
sarl
scas
test
and
mov
pop
jmp
ja
sahf
push
fsubl
push
popf
testl
out
in
inc
seto
fs
cmp
push
sbb
xchg
out
jnp
xlat
and
inc
jmp
jge
fdivs
pop
add
cmp
or
in
cmp
jo
popf
lcall
mov
or
add
jp
mov
out
mov
push
mov
push
fidivrs
or
xor
mov
les
lret
ds
ljmp
cltd
fsubl
xchg
fwait
lea
shrb
insl
adc
sbb
fnstcw
shl
fisubl
pop
mov
fsubl
cmp
xchg
and
out
cmpl
add
and
mov
leave
mov
iret
repz
and
in
repnz
push
repz
cmp
fimuls
and
in
dec
mov
mov
data16
or
rorb
cwtl
pop
enterw
jle
or
fwait
jmp
and
add
orb
pushf
into
dec
xor
ljmp
ret
push
adc
leave
addr16
pusha
push
jb
ljmp
sti
gs
push
jg
dec
adc
jmp
or
movsb
addr16
cwtl
in
sbb
jmp
iret
insb
push
adc
mov
mov
adc
ljmp
shrb
daa
outsl
jbe
pop
inc
mov
pop
sbbb
std
cwtl
mov
xor
insl
sbb
push
ds
pop
sub
cmp
xchg
int3
leave
jge
and
subl
fstl
dec
jns
int3
js
xlat
inc
inc
lret
clc
push
and
or
mov
ljmp
dec
and
adc
pop
pop
lahf
add
xor
xchg
cmp
mov
inc
xchg
sbb
or
add
and
push
aaa
cli
outsb
fidivrs
ds
rolb
ja
fistl
test
int
mov
movsl
adc
jo
adcl
dec
push
jns
mov
dec
sub
ret
addr16
call
pop
add
js
scas
adc
and
cmp
ret
inc
imul
test
je
int3
mov
jge
cmpsl
mov
xchg
sbb
push
fs
test
out
lcall
test
xchg
add
out
scas
in
xchg
fistl
cmc
xlat
pop
push
xchg
mov
mov
pop
sbb
scas
cmpb
pop
or
js
out
test
cwtl
push
mov
xchg
inc
lds
xchg
data16
stc
add
dec
mov
push
cmp
sbb
xor
test
push
cmp
xchg
xlat
fwait
aad
mov
mov
and
push
lea
push
repnz
rolb
stos
lods
movsb
mov
lea
mov
and
inc
jg
adc
adc
aam
add
push
test
and
cmp
fistpl
add
xchg
dec
mov
jnp
in
pop
pop
lock
loope
in
test
je
jl
mov
and
idiv
mov
das
sti
les
cld
cmp
sbb
shlb
mov
mov
pop
dec
imul
cli
cltd
inc
xor
cld
mov
mov
jmp
jmp
das
mov
xor
roll
daa
cld
mov
inc
mov
lods
mov
int
movsl
cmpl
pop
shrl
push
adc
cmp
insb
ds
ret
hlt
das
xchg
fidivs
dec
or
push
push
fnsave
mov
je
jle
jecxz,pt
rolb
mov
mov
mov
sbb
xor
push
les
popf
lock
jne
pop
sub
mov
shll
imul
stos
mov
aad
lahf
or
inc
mov
mov
dec
xchg
int
jb
jg
dec
xor
enter
mov
mov
addb
call
xchg
ds
ja
push
cwtl
in
ja
xchg
jo
sti
jecxz
fmuls
and
or
pop
jecxz
mov
pushf
add
andb
mov
push
xor
test
ja
aad
int
addr16
ret
sarl
mov
rcl
mov
jb
or
loopne
in
scas
pop
and
sub
incb
add
icebp
arpl
fistpll
stos
aad
out
adcl
xchg
add
mov
add
leave
lds
push
mov
push
cmp
repz
cmp
es
mov
bound
mov
test
jo
mov
lds
inc
cltd
mov
movsb
jle
nop
aaa
and
lcall
or
push
lock
mov
push
jnp
fcomip
addr16
andb
loope
shl
decb
loope
dec
add
pop
xor
outsl
cwtl
mov
add
lds
push
outsb
sub
int3
lret
inc
ja
jno
cltd
inc
cli
xor
cmp
xchg
and
cmp
and
push
mov
mov
and
ds
push
cmpsl
ja
lock
pop
fidivl
fbstp
jl
mov
mov
mov
pop
sub
cli
incb
loop
or
repz
push
cli
add
dec
mov
popa
fucomip
jl
mov
adc
mov
xor
fwait
sbb
inc
mov
imul
sti
or
push
sbb
std
sub
ret
xchg
lret
mov
gs
daa
lahf
das
cmp
imul
rdmsr
fcoml
adc
xchg
push
pop
pop
xchg
orb
lcall
dec
fcomip
or
lock
xchg
mov
sub
icebp
sahf
mov
popa
mov
aaa
and
jb
or
int
xchg
cwtl
push
dec
cmpl
icebp
sbb
jo
jb
sbb
mov
pop
cmp
ja
dec
xlat
sti
js
jns
adc
cmp
cli
cmp
and
cmp
into
iret
ret
repnz
and
and
xor
daa
loopne
movsb
adc
adc
fdivl
lea
lock
dec
mov
aas
js
ret
push
int3
lahf
lret
popl
add
dec
das
inc
mov
and
popl
mov
loopne
stos
cmp
int3
sbb
dec
jbe
jecxz
loopne
iret
js
fldenv
lahf
mov
int3
mov
dec
out
imul
cmp
stos
subl
add
mov
sub
add
adc
inc
mov
stos
test
mov
sbb
jns
mov
test
fimuls
gs
xor
sbb
cli
cmp
clc
or
lret
repnz
add
sbb
mov
out
ret
mov
lods
mov
sahf
fdivl
mov
sub
pop
andl
lret
out
jno
movsl
and
jecxz
or
gs
out
add
pop
or
mov
mov
push
adc
jae
pop
jge
mov
and
iret
shlb
dec
ret
pushf
dec
add
pop
aas
xchg
sbb
gs
mov
insl
stc
pop
dec
std
icebp
in
cmp
out
fisubs
rorb
lret
mov
xchg
testl
iret
mov
xchg
mov
sbb
adc
dec
cmp
xlat
mov
pop
out
stos
scas
inc
leave
test
call
mov
mov
jmp
sub
popa
lods
push
stos
into
in
scas
shlw
dec
rorl
int
hlt
movsl
rcll
mov
xor
add
xor
ljmp
jo
mov
arpl
push
mov
pop
dec
jl
cmp
iret
sahf
add
xchg
jnp
sub
add
out
push
push
mov
pop
pusha
jb
lea
lret
mov
mov
fs
sub
enter
fidivs
jmp
jge
mov
cltd
adc
and
dec
dec
bound
hlt
sub
pop
in
int
jg
ret
mov
test
xchg
outsb
add
out
nop
fxch
inc
data16
push
mov
mov
xchg
ret
test
pop
shl
xor
cmpsl
lods
sbb
insb
sub
stc
fwait
int
loopne
adc
inc
mov
xchg
cmpsl
jnp
stos
stos
jle
fsubrl
mov
icebp
out
ja
outsb
call
mov
adc
arpl
xchg
and
mov
jge
cltd
int
int
std
xor
cmp
sbb
outsb
inc
inc
sbb
adc
xchg
pop
adc
out
stc
or
lods
mov
xorl
jle
adc
push
test
inc
push
fmuls
jl
stos
out
lods
cltd
in
lret
xchg
push
sub
mov
outsl
xchg
sub
neg
mov
addr16
fsubr
insb
shll
dec
pop
fisttpl
sbb
js
push
outsb
rcll
jnp
xchg
fsts
fcomps
push
iret
inc
inc
xor
adc
xor
es
neg
lret
dec
and
xor
jbe
push
push
xchg
leave
insb
ret
mov
sub
movsl
shr
idiv
icebp
pop
bnd
add
xorb
les
mov
test
ja
adcl
add
sbb
inc
xor
jge
data16
call
int
jbe
out
mov
inc
jl
clc
bnd
pushf
and
mov
mov
adc
shlb
cs
push
xchg
jecxz
repnz
out
mov
rorb
push
pushf
ror
pushf
out
test
inc
cltd
fimuls
ljmp
notl
xchg
arpl
arpl
inc
sub
rorl
imulb
int
adc
fbstp
mov
je
mov
dec
loop
popl
outsl
cmp
mov
mov
jb
in
es
push
nop
incb
jbe
mov
inc
or
jle
jbe
xchg
inc
sbb
sbb
loopne
stos
pop
clc
xchg
xor
jno
sbbl
filds
loopne
jge
jmp
push
fmull
xchg
push
or
xchg
inc
mov
out
and
es
mov
sti
mov
push
and
ds
jno
jl
cmp
mov
add
xor
fldcw
cs
add
hlt
lods
sbb
ja
mov
lds
fucomip
and
and
or
adc
adc
mov
mov
push
adc
insb
addr16
sti
or
in
es
sarl
jnp
shll
outsb
mov
aam
xchg
loop
adc
cmp
test
mov
loope
fistpll
cmp
cmp
cltd
shlb
mov
adc
inc
dec
cwtl
aaa
scas
in
lock
fdivrl
ret
push
or
mov
repz
and
pop
mov
jmp
insb
mov
movsb
cmp
mov
mov
jbe
shlb
mov
cs
shlb
jp
jmp
and
push
push
mov
mov
pusha
mov
cmp
lds
jo
cli
aam
cmp
dec
pop
mov
dec
out
push
movsl
sahf
fnstenv
out
cmpb
xchg
adc
jmp
pop
sbb
fidivl
xor
rclb
stos
enter
push
xchg
dec
fistps
xor
rorb
out
rcll
js
cmp
mov
outsb
push
cvtpi2ps
into
add
rcrb
out
sub
mov
imul
outsl
cld
xor
test
insb
xor
pop
mov
out
fcomps
imul
and
pop
cmovge
addr16
xchg
push
data16
jg
aad
xor
mov
sub
lock
inc
data16
cmpsl
sahf
mov
inc
add
xchg
mov
fcompl
fcomi
pop
lock
add
icebp
test
outsl
out
push
insl
push
lds
jne
or
or
dec
roll
push
cli
es
lret
xor
aad
dec
xor
insb
jecxz
dec
shr
jns
jecxz
fisttpl
cmp
jle
iret
adc
cmp
add
imul
pop
sbb
lret
nop
cmp
lds
pop
sbb
insb
cmc
leave
leave
stc
adc
scas
xchg
jns
ss
ficomps
test
mov
and
mov
add
inc
jmp
xor
pop
or
pop
xlat
pusha
frstor
xchg
xlat
aad
jmp
ficompl
xor
js
dec
and
lds
cwtl
call
lret
ds
outsb
scas
adc
xor
hlt
into
mov
out
stos
in
inc
test
jb
fistl
mov
push
cmpsb
inc
or
pop
int
sub
mov
loopne
bound
mov
insl
dec
sub
push
fwait
fwait
mov
adc
or
mov
add
decl
dec
popa
ja
add
dec
je
sbb
sub
jns
mov
xor
aad
adcl
mov
imul
sub
and
sarl
xchg
imul
jecxz
pop
mov
mov
cwtl
jmp
push
js
push
push
loop
sbb
es
or
sbbb
xchg
xchg
xchg
xor
pop
inc
push
or
push
push
push
pushf
shlb
and
js
pop
dec
lret
push
in
push
mov
movsb
in
push
xchg
out
hlt
je
stos
mov
xchg
sbb
mov
cwtl
xchg
insb
push
fistps
mov
dec
jp
into
or
scas
mov
lret
add
pop
mov
xchg
push
shlb
cmp
pop
cli
mov
fstp
outsb
fwait
jle
shrb
jp
aam
push
mov
jle
ds
loop
icebp
ret
jnp
fldt
xchg
mov
add
mov
push
leave
pop
icebp
xchg
lods
sbb
or
add
pop
test
pop
xor
mov
xchg
push
or
jae
or
pop
mov
jmp
push
notl
xor
rorl
or
xchg
dec
push
xor
ljmp
mov
dec
push
shld
lds
faddl
fcoml
mov
and
iret
adc
adcb
out
xchg
not
mov
cmp
push
jle
dec
clc
jae
mov
pop
inc
xor
dec
jb
cmpsb
xor
mov
xchg
ret
lret
cmp
cwtl
lahf
std
cmpsb
adc
int
dec
cmc
sub
rol
hlt
dec
imul
ss
into
push
xor
push
lods
jle
lret
insb
and
cld
jne
gs
cmp
pusha
out
mov
push
xor
pop
and
or
sbbl
push
add
sbb
addr16
dec
enter
fs
mov
jge
xor
cmpsb
xchg
inc
test
sub
cld
add
mov
mov
rcrb
xchg
cmp
aas
les
lock
faddl
mov
xchg
popf
out
xchg
ret
pusha
aas
arpl
fs
sub
pop
and
jmp
movsb
mov
xor
mov
jnp
xchg
pop
lock
leave
js
mov
insb
xor
cmp
bswap
mov
adc
shll
cld
fisttps
pop
sbb
and
iret
mov
xchg
aaa
sub
nop
pushf
mov
and
pop
push
into
nop
pop
lret
daa
scas
scas
cld
jg
aad
and
xor
enter
test
sbb
inc
pushf
into
test
and
xchg
push
pop
aad
mov
mov
mov
pop
jo
sbb
in
xchg
cld
or
rorb
sbb
inc
mov
adc
rcrb
sbb
adc
inc
cwtl
repz
xchg
ror
popa
sbb
and
aaa
lret
mov
movsb
and
sbb
popa
pop
out
mov
push
jbe
lods
or
inc
pop
xchg
push
sub
mov
xlat
sbb
dec
or
rcll
push
aad
or
nop
and
sub
nop
std
in
pop
sbb
call
sub
xchg
ficoms
sbb
repnz
ret
pop
testl
mov
dec
out
mov
jnp
aam
cltd
cmp
fnstcw
xchg
cmp
jne
sub
pop
or
fs
and
in
jmp
or
lock
fsubrs
outsl
test
inc
ret
sarb
jecxz
sub
js
test
sub
js
imul
xchg
and
sbb
jns
or
test
lret
jle
call
push
das
inc
inc
add
mov
jg
jp
pusha
mov
mov
test
xor
stos
adc
je
lock
and
arpl
out
and
dec
lea
push
dec
mov
sub
es
jb
icebp
pop
lds
xchg
cwtl
adcb
ret
clc
mov
lds
cmpsl
mov
or
mulb
inc
outsl
xor
mov
xor
mov
mov
push
adc
enter
cmp
pop
lea
add
test
xor
adc
push
cmpsb
push
xor
inc
out
jge
or
push
out
in
xor
mov
jmp
outsl
xor
dec
orl
movsl
adc
dec
xorb
inc
xchg
or
add
push
xchg
sar
shl
push
xor
jl
xchg
or
mov
or
mov
lret
cli
lcall
in
loopne
ja
fwait
sbb
dec
or
mov
sti
addr16
cmp
dec
push
dec
nop
ret
add
iret
xor
add
adc
inc
inc
add
mov
fdivr
xchg
call
movsl
lret
inc
outsb
or
movsl
test
sub
pop
aad
push
mov
fs
pop
push
in
pop
inc
adc
mov
mov
xchg
and
add
dec
jmp
pusha
enter
add
adc
data16
enter
or
aad
adc
xchg
sub
and
lret
jne
mov
add
repz
imul
xchg
frstor
or
int3
scas
int3
out
sbb
into
mov
xor
cs
sbb
mov
test
cmpsb
mov
in
sarb
push
xchg
int3
mov
in
stos
lods
or
and
into
int
jns
or
fdivrs
pop
push
adc
adc
and
xor
jae
jmp
je
ljmp
roll
fsubp
jmp
fidivs
jb
and
add
insb
ficoml
jge
xor
inc
aad
cmp
adc
ds
pop
cmp
mov
aad
mov
ds
dec
iret
adc
inc
cs
sub
jbe
mov
out
xchg
aad
loopne
xor
shlb
lahf
inc
cmp
sti
leave
sub
dec
sbb
mov
and
call
mov
in
cmp
movsb
mov
xlat
call
add
xrstors
cmp
sub
lds
call
addb
xor
mov
or
fmull
cmp
std
or
out
in
push
repz
xor
adc
sbb
push
adc
or
mov
cwtl
jo
nop
dec
xorb
flds
push
xor
push
in
xchg
stos
mov
push
and
fdivs
mov
sub
divb
nop
out
insl
pop
add
sbb
adc
inc
pop
push
lock
mov
and
push
sbb
push
repz
push
and
in
mov
fimuls
add
adc
stos
outsl
insb
dec
test
lock
bndstx
repz
sub
add
sub
inc
or
lock
in
or
mov
mov
aam
and
adc
mov
adc
fisttps
loopne
jns,pn
nop
and
mov
rorb
les
lock
add
iret
pop
bound
sbb
push
and
iret
dec
mov
es
lahf
xor
sbb
loope
inc
int3
bound
mov
lea
add
repz
pop
test
mov
and
push
push
repnz
adc
push
xor
imul
mov
test
ffreep
in
das
out
out
imul
fs
fwait
jbe
mov
fcompl
xor
mov
add
bound
adc
xchg
loop
test
mov
stos
nop
fs
fwait
mov
mov
and
xchg
fwait
or
pop
mov
jmp
mov
daa
add
sub
jl
push
adc
xchg
ret
adc
addr16
dec
push
outsb
pop
adc
jg
ficoms
jae
mov
or
xchg
push
xchg
mov
cmpsl
push
sarb
lock
mov
movsb
aas
and
dec
negb
xor
cmp
stos
mov
push
lahf
dec
xor
pop
stc
adc
ss
ss
out
sti
push
xchg
add
lcall
popa
adc
insl
mov
sub
pop
mov
xchg
test
std
inc
push
sbb
xor
in
fcomps
mov
cmpsl
or
es
lods
mov
outsb
js
fstpt
or
push
pop
das
pop
out
jno
jno
pop
jae
and
shlb
stos
pop
jb
xchg
pop
ds
cmpb
sbb
mov
add
push
sbb
arpl
out
cli
cmp
in
aad
xchg
sarl
or
pop
cmp
mov
mov
or
mov
mov
je
cli
jne
scas
push
repnz
lret
mov
dec
inc
scas
int3
adc
pusha
movsl
fmull
mov
mov
add
sub
xchg
pop
jecxz
mov
sbb
cltd
xchg
push
sub
xor
outsl
js
mov
test
dec
stos
out
cmp
push
pop
push
adc
stos
sbb
inc
xor
mov
jl
out
xor
jo
add
test
stos
xor
mov
sub
add
lahf
out
mov
mov
xor
sarl
addl
in
and
jg
xchg
mov
roll
insb
shll
ficoml
sbb
sub
add
push
jnp
jp
or
mov
dec
jmp
pop
mov
ficompl
inc
adc
and
and
dec
lods
cli
add
cmp
cmp
pop
inc
pop
jg
mov
xor
jg,pn
push
adc
cmp
mov
les
sub
pop
and
ret
in
scas
out
and
push
dec
mov
test
shl
movsb
call
mov
sahf
sbb
pop
sbb
ret
sbb
popf
or
pop
sub
inc
loop
add
int
out
and
adc
sbb
jns
js
mov
into
mov
lds
repnz
sahf
dec
cmp
int
in
in
gs
jp
sub
das
mov
xchg
sub
adc
or
dec
scas
test
and
sbb
jle
lret
xchg
sbb
add
mov
or
mov
cmc
jl
loopne
push
push
inc
push
cmpb
xor
scas
jne
nop
negb
inc
dec
inc
and
xor
xchg
bound
aaa
push
inc
sbb
and
mov
cmpsb
cli
adc
fisubrs
pop
into
outsl
or
push
add
nop
in
sub
scas
lcall
lcall
lahf
fisttpll
mov
ret
lcall
xchg
inc
out
pop
inc
divb
rcll
lahf
test
loop
ret
leave
pushf
fadds
repz
push
xchg
into
cltd
lretw
test
jne
mov
jnp
cwtl
jmp
mov
jne
adc
push
incl
das
push
sarb
adc
jge,pn
shlb
popf
popf
inc
ret
adc
ret
jbe
mov
sahf
inc
and
mov
cmpsl
sbb
outsb
adc
ficoms
jnp
and
shrw
mov
fiadds
aad
and
ret
dec
or
add
cld
mov
sub
push
imul
xchg
mov
mov
jb
mov
and
lret
mov
xchg
leave
cwtl
jo
sub
mov
shlb
stos
gs
pop
shr
mov
ljmp
notl
pop
clc
out
test
arpl
adc
adc
and
and
adc
jmp
push
xchg
nop
mov
test
out
loop
mov
xchg
testl
add
inc
mov
add
ja
push
scas
cli
das
out
ret
pop
pop
fisubrl
cmp
dec
push
outsb
mov
in
push
movb
fs
cmp
mov
decl
jo
mov
test
adc
and
orl
mov
add
hlt
mov
sarb
cmp
in
into
ret
jecxz
ds
mov
jns
in
testb
jecxz
mov
ds
lret
insl
arpl
cmpsb
adc
inc
inc
sub
mov
rorb
jo
arpl
movsl
pop
repz
jmp
push
xor
stos
in
jl
mov
stos
pop
out
pop
out
xor
fildll
notb
xchg
fbstp
mov
sbb
gs
out
mov
cmp
jbe
leave
loope
cli
push
fstpt
adc
push
inc
loope
sbbb
inc
mov
mov
lahf
shll
popa
cld
in
inc
push
dec
ja
jge
mov
shl
imull
jl
sbb
insb
xchg
cmc
and
sub
jmp
and
sub
mov
addl
adc
push
mov
jne
jmp
jb
dec
mov
or
fsubrs
sbb
shr
ret
mov
test
lock
or
ss
loopne
xor
mov
mov
call
adc
out
les
and
test
adc
scas
lea
push
stos
jge
lret
jae
xorb
cmovno
dec
repz
pop
fs
outsb
ret
ljmp
pop
dec
movsl
adc
ljmp
inc
adc
aas
sti
dec
adc
dec
out
enter
jl
or
push
aam
mov
mov
shl
cmp
mov
xchg
sub
pop
mov
ret
push
scas
jo
cmp
add
testb
leave
test
scas
sbb
cwtl
stc
mov
and
and
cmp
das
icebp
push
mov
cs
aam
leave
push
mov
mov
add
jno
lcall
push
ficoms
xrelease
shl
movsl
xchg
leave
popa
push
test
inc
mov
in
jae
sbb
fdivrl
out
mov
add
dec
movsl
adc
cmp
xor
mov
xor
cld
jmp
xor
mov
jne
into
pop
jg
jae
jae
sbb
mov
sub
imul
leave
push
loopne
sbb
fucomp
sub
ss
add
clc
adc
lods
test
gs
out
sbb
mov
xor
xchg
fsubr
mov
iret
add
sub
jmp
mov
lcall
adc
or
clc
pop
cmpsb
lret
pop
dec
push
add
jbe
out
fldt
cli
inc
sbb
mov
jg
rolb
popfw
or
test
nop
insl
dec
push
mov
fstpl
cmp
adc
orb
xchg
inc
loope
sbb
mov
and
ds
mov
xchg
push
enter
cmpb
sarb
repz
jo
dec
and
mov
call
sbb
shrb
aaa
and
shlb
test
cltd
jbe
repnz
adcb
xchg
or
push
repz
jnp,pt
in
xchg
sti
ret
cmp
mov
fwait
xor
out
bound
mov
push
push
sub
add
cmpsl
mov
jmp
mov
jmp
xor
loop
nop
adc
jl
ss
mov
xchg
rcrl
es
pop
and
push
ja
and
mov
pop
in
dec
mov
dec
test
dec
mov
sub
xchg
movsb
lcall
mov
rorb
inc
pusha
or
int
jge
cmp
andb
repnz
sub
popa
dec
cmc
xchg
push
pusha
movsl
or
loopne
mov
std
js
shl
xchg
aaa
push
mov
xchg
or
lcall
add
iret
les
movsl
jg
and
pusha
jmp
mov
clc
sub
mov
decb
repnz
mov
add
sbb
cmpsb
push
cmp
gs
pop
adc
lret
adc
push
and
jbe
movsl
cmpsb
in
sahf
into
mov
mov
int
pusha
pop
sub
test
call
test
or
movsb
xchg
loopne
js
and
dec
mov
xchg
cmp
sahf
test
insb
and
adc
mov
jne
xor
push
xchg
xchg
sbbw
nop
sarl
outsl
lahf
and
aaa
rolb
inc
imul
mov
aas
lea
dec
movsb
sub
testb
fsts
mov
add
loope
add
or
dec
gs
ja
stos
imul
xchg
repz
xchg
and
test
ret
orb
rorl
push
int3
cmpsl
imul
adc
or
xchg
call
add
test
jecxz
mov
inc
adc
cmpsl
or
mov
xor
mov
sbb
dec
push
movsl
ret
int3
jae
xor
mov
sbb
in
inc
xlat
pop
adc
loop
cmp
mov
lret
pushf
xor
xchg
stos
pusha
mov
sti
test
jno
cwtl
ror
pushl
dec
sbb
movsl
mov
das
mov
shll
aad
loope
rcrb
and
pmulhuw
lret
pop
mov
pop
repnz
jo
repz
arpl
xchg
fldt
imul
insl
mov
js
adc
arpl
rclb
testb
cmp
lahf
and
scas
xorl
xor
push
xor
cmp
add
or
mov
loopne
pop
pusha
jbe
icebp
inc
mov
cltd
sbb
idiv
xchg
ret
jns
sub
scas
jmp
push
xor
mov
sub
xor
push
cld
mov
pop
jecxz
ret
fsubr
lea
cmpsl
xchg
or
popf
neg
loop
into
insb
leave
mov
stc
and
bnd
mov
jp
pop
inc
push
imul
cli
push
lock
mov
dec
sbb
aam
test
xchg
mov
lahf
popf
jno
movsl
popf
loop
add
dec
enter
cmpsb
ljmp
xorl
pop
push
lock
hlt
or
mov
jae
mov
push
pop
shl
dec
lahf
fildl
xor
aam
sbb
sahf
jle
inc
je
insb
mov
ja
jnp
ljmp
in
rcr
lods
pop
fidivl
fistpll
mov
dec
test
sbb
test
sub
ljmp
mov
jp
mov
mov
jle
xor
and
mov
cmp
push
lods
pop
mov
ret
int
or
inc
jo
pop
push
loopne
add
sub
fcompl
orb
out
aam
xchg
sub
popf
cmpsl
pop
and
shld
popf
inc
popf
cld
lods
and
in
ss
fwait
add
out
jg
mov
inc
xchg
and
cld
dec
mov
xor
push
test
or
push
ds
lret
mov
dec
sub
mov
cs
mov
sti
sub
xlat
imulb
out
cmp
add
lods
dec
cmp
std
jl
mov
lret
add
sti
in
add
es
rorl
gs
xor
sbb
jmp
std
jbe
dec
mov
andl
lcall
push
int
xor
je
sarl
das
fstpt
pop
clc
int3
mov
jae
stc
and
popf
fimull
sbb
or
push
dec
xchg
scas
into
ljmp
jmp
add
adc
mov
mov
cmp
rorb
pop
adc
outsl
ljmp
mov
loope
cs
andb
sub
sbb
jbe
lcall
cmc
mov
sti
xchg
xor
imul
ss
lret
sbb
sub
lea
add
ret
int3
fbstp
int
fdivr
inc
xor
test
mov
xor
dec
pop
xchg
jecxz
cs
sub
pop
push
xor
jge
int3
xor
cmpsl
xor
int3
sub
mov
lods
fwait
pop
xor
outsl
call
popa
popf
and
and
xor
and
shlb
pop
adcl
popa
jmp
cmp
movb
inc
xchg
inc
js
mov
nop
sub
idivb
jne
ss
out
push
fdivl
xchg
out
mov
loope
icebp
faddl
mov
or
leave
repz
adc
lret
dec
and
cmp
and
jle
in
pop
adc
iret
adc
mov
imul
iret
mov
push
outsb
jns
aaa
into
fisubs
into
mov
xchg
dec
cli
add
lods
mov
stos
sbb
in
loopne
in
loope,pn
cmp
lds
mov
xchg
jg
jne
loop
mov
addr16
mov
inc
call
popa
add
jne
decb
add
mov
jg
cmp
adc
fisttpl
adc
sub
add
dec
jle
cmp
ljmp
adc
mov
lret
sub
xor
jle
xor
adc
push
xor
lea
mov
movsl
les
insb
push
push
outsb
mov
cmp
sbb
loope
jp
xor
add
out
and
pop
mov
cmp
les
mov
aad
fiadds
dec
jecxz
cld
adc
dec
mov
test
lock
adc
mov
jae
test
add
cmp
cltd
icebp
out
mov
pushf
fistpll
dec
fldcw
subl
add
dec
dec
add
and
pop
xchg
sub
xchg
cmp
inc
push
addr16
into
mov
jg
sahf
subl
shld
jae
test
mov
sbb
push
mov
jnp
mov
and
stos
or
test
mov
out
and
jg
xchg
adc
mov
or
outsl
cmp
mov
cmp
ficoml
orl
into
aas
adc
adc
mov
or
cs
gs
shrl
aad
add
adc
mov
sub
sti
lods
and
aas
lods
enter
outsb
sahf
aaa
inc
flds
or
add
xlat
jle
clc
push
adc
sub
jnp
sbb
jl
cmp
imul
xchg
inc
cmc
in
sbb
mov
sub
and
fisubrl
in
mov
daa
stos
test
sbb
stos
cwtl
pop
xor
dec
pop
push
stos
xor
xorl
push
incb
loopne
add
mov
fisttps
xchg
fsubl
sbb
xchg
jns
fwait
cmp
hlt
in
fsub
cmp
fs
adc
js
out
test
mov
or
int3
xchg
fcoms
sbb
int3
gs
xlat
lods
ja
fistl
mov
arpl
sbb
arpl
nop
pop
imul
jb
pop
in
or
and
and
or
scas
sub
je
js
push
movsl
movsb
push
cmpsl
daa
push
mov
push
lock
repz
pop
testb
push
mov
dec
ja
fisubs
sub
out
loop
pop
hlt
test
cs
lods
push
rcrl
sbb
pop
xor
xor
aam
jle
out
inc
push
fbld
inc
xor
clc
push
jae
sbb
add
or
add
incl
iret
cs
push
sub
popl
xlat
jge
cld
into
mov
ret
dec
enter
sbb
insl
xchg
cmp
push
add
mov
jbe
xor
aas
sbbl
pop
pop
daa
push
repz
je
and
xchg
fwait
mov
aas
xchg
fisubrl
xor
shl
sti
mov
int
xor
out
fistpll
out
jg
lret
outsb
test
lcall
std
outsl
scas
jg
jl
int3
rcll
jne
xor
arpl
subl
mov
out
push
in
orl
loop
sbb
repnz
cld
mov
and
ret
arpl
or
and
pushf
fst
fchs
pop
mov
mov
lds
lock
add
mov
aad
ret
adc
add
cmp
adc
and
pop
jp
jp
pop
xchg
dec
lea
add
push
test
pop
jg
fwait
jo
dec
adc
inc
mov
adc
mov
in
imul
out
sbb
cmp
xor
sbb
and
add
sub
in
cld
lods
mov
inc
cmp
pop
gs
lods
or
mov
dec
jmp
xabort
subl
fsubrs
xor
mov
add
iret
out
and
out
js
icebp
adc
xchg
mov
mov
xor
js
sub
cmp
les
pop
lret
and
cmpl
and
inc
shlb
sarl
push
orb
addr16
in
pop
ss
push
jbe
out
or
std
push
sub
mov
mov
ss
loop
mov
mov
test
aaa
sbb
in
or
pushf
mov
cmc
and
ficomps
gs
cld
data16
adc
lods
imul
dec
repz
or
mov
add
lods
adc
test
jbe
adc
push
mov
mov
stos
cmp
faddl
das
jmp
jns
mov
mov
push
mov
les
mov
flds
fldenv
jmp
sahf
mov
std
lret
fcomp
dec
flds
or
mov
inc
xor
and
sahf
jb
jbe,pt
jne
mov
clc
out
out
push
mov
jne
sbb
icebp
sahf
jbe
adc
push
add
sub
mov
scas
mov
out
shll
xchg
xchg
mov
sbb
into
jmp
sub
cli
push
jo
jmp
dec
test
push
add
movsb
loopne
dec
mov
or
lds
jns
out
jecxz
inc
jg
fucomi
lret
pop
or
call
sbb
jmp
sub
lock
add
lcall
sarb
cld
lods
mov
data16
jg
inc
and
outsb
out
lock
xchg
hlt
insl
out
lret
mov
jmp
jae
and
mov
adc
adc
add
inc
add
lea
cwtl
lahf
out
pop
sahf
adc
mov
pop
sbb
adc
out
insl
dec
enter
lods
lds
insb
stc
xor
pop
mov
in
push
out
fdivl
aad
jnp
lock
mov
sub
mov
jmp
jno
jo
cwtl
mov
push
push
mov
pop
and
xchg
add
iret
int
into
stos
push
lret
call
sbb
mov
jbe
sbb
sbb
out
jecxz
rcr
push
and
push
jb
xor
push
fidivl
jl
pop
lret
jbe
push
lods
sub
jbe
push
cwtl
scas
xor
es
mov
lods
mov
add
xchg
cmpsl
cltd
cmpsb
inc
es
pop
xchg
in
scas
sub
out
sbb
adc
fs
jmp
push
popa
or
gs
je
fcompl
sbb
rolb
jle
test
add
inc
fcompl
or
shll
cmpsb
jo
inc
sbb
sbb
cmp
fdivrs
pop
xor
imul
dec
and
js
mov
insl
rolb
dec
mov
xchg
fistpll
fnstenv
add
sub
xor
mov
ds
fstp
mov
or
sub
or
push
mov
inc
mov
fmuls
inc
inc
mov
rclb
test
aas
mov
idivb
mov
add
mov
mov
lahf
mov
in
lahf
js
je
popf
sbb
jmp
or
int
mov
adc
or
loopne
jo
jo
stc
inc
adc
pop
test
xchg
adc
popa
enter
into
fsubr
xor
mov
int
push
lret
or
sbb
push
es
mov
in
bound
fistpl
pop
std
mov
push
or
lahf
inc
mov
xchg
inc
xchg
aad
cli
mov
cli
sub
lret
sub
add
pusha
xchg
push
arpl
pop
dec
jg
jmp
mov
dec
dec
push
xlat
inc
ds
and
mov
and
adc
xor
mov
push
jge
pop
cmpsl
hlt
stos
adc
and
mov
mov
add
adcb
and
fidivrl
pop
insb
pop
mov
loope
xchg
sbb
xor
aam
fwait
mov
ret
adc
pop
pop
outsb
out
dec
mov
cmpsb
rclb
mov
leave
pop
xchg
insl
cmp
ret
mov
jmp
cli
inc
inc
rclb
mov
gs
mov
jge
xor
cmp
dec
rorl
outsl
repz
cld
fists
add
mov
mov
sbb
sub
faddp
outsb
incl
jns
push
xchg
sti
mov
jo
sbb
leave
and
rep
test
sub
arpl
mov
test
jno
push
add
push
jbe
cwtl
pop
ret
mov
sarl
mov
and
add
xchg
out
int
sti
out
aad
pop
sti
ja
sarl
lds
aad
adc
popa
jl
into
fistpl
fnstcw
pop
filds
inc
dec
out
lock
insl
ds
dec
in
outsb
sbb
mov
out
aas
shl
sti
and
xchg
jb
and
push
cmp
in
mov
mov
repnz
sti
pop
lret
fsubs
sbb
bound
sbb
in
movsb
add
arpl
mov
mov
out
inc
or
cmpsl
mov
iret
ret
xor
add
pop
cmp
pop
hlt
sbb
lahf
or
shll
and
das
int3
mov
pop
push
or
add
pushf
jge
outsb
fmuls
adc
adc
orb
fsubl
and
dec
jbe
pusha
sub
fndisi(8087
xchg
xor
lcall
mov
and
push
sub
aad
leave
fdivr
pushl
jb
or
fadds
fisttps
mov
pop
xlat
cmp
insb
mov
adc
fildl
mov
jmp
mov
pop
xor
insb
inc
jns
sti
sbb
mov
stos
mov
addb
push
insl
repz
fadds
sbb
sbb
inc
xchg
jp
adc
daa
into
adc
repz
cwtl
mov
jecxz
mov
xor
or
insb
push
sub
mov
xor
xchg
cmp
xchg
inc
mov
push
test
cmpsb
push
testb
pop
xchg
mov
jecxz
int
pop
jbe
rcrb
shrl
fwait
inc
cmp
push
std
jl
jae
test
dec
ret
gs
pmaxsw
into
jns
jl
and
test
pusha
or
pop
add
mov
mov
and
les
shr
or
and
xchg
sub
mov
movsb
ret
pop
pop
push
out
fwait
add
loopne
xchg
std
dec
sahf
gs
xor
iret
lods
popa
sbbb
add
fsubs
push
pop
insb
jmp
jle
ljmp
and
es
out
sub
mov
cltd
mov
lret
pop
cs
sub
idiv
and
pop
pop
mov
xchg
mov
in
hlt
and
cli
rcrb
shl
mov
into
jnp
inc
pusha
xor
push
into
inc
dec
xor
sub
add
jmp
xor
int3
scas
iret
and
push
fcoms
jecxz
aam
sub
ret
out
fnstsw
jmp
dec
or
sub
stos
es
repnz
pusha
test
ds
dec
and
pop
mov
dec
ficoml
add
fwait
cs
sbb
shlb
push
pop
xchg
leave
push
sbb
dec
push
inc
push
clc
or
sbb
hlt
or
bnd
imul
test
fmull
push
lret
pop
stos
mov
jecxz
mov
push
or
sub
jne
sbb
fldl
add
pop
cmpsl
pop
and
les
xor
out
sti
push
inc
jle
cmp
push
mov
push
xor
int
mov
sub
incb
xor
out
xchg
loop
notl
inc
cltd
stos
cmp
cmpsb
fildl
sub
xchg
imulb
cmc
hlt
lds
inc
in
jns
mov
scas
sarl
cmp
jle
ds
ret
and
push
dec
cli
sub
fstpl
imul
aad
push
or
insl
xor
outsb
or
mov
imul
mov
or
into
xor
xchg
push
dec
sub
fmulp
ret
mov
inc
jo
das
sbb
imul
fidivrs
pop
aas
add
dec
add
cmpsl
jp
pop
movsl
lcall
scas
loopne
push
pop
addr16
pop
popf
or
addr16
out
and
rclb
mov
xor
lods
jne
mov
das
or
pop
jae
or
ret
xchg
outsb
sbb
xor
mov
adc
mov
xor
xor
ss
pop
in
jecxz
test
cmp
inc
dec
int3
pop
adc
xchg
sbb
and
aad
clc
mov
xchg
jl
outsb
cltd
push
sbb
mov
or
pop
mov
push
out
ret
mov
in
mov
movsb
jg
push
cmpsb
outsl
adc
mov
xor
push
ret
aam
dec
pop
rolb
sbb
xchg
scas
mov
jne
ret
push
jl
push
jmp
lahf
out
add
inc
movsl
jbe
sub
dec
sub
ds
sbb
cmc
call
and
sub
cmp
imul
or
shrl
jge
inc
jae
xor
nop
jns
cmp
jecxz
push
pop
je
lock
std
mov
lea
push
dec
fnstsw
int
out
add
pop
js
pop
shrb
cmp
or
sbb
stos
inc
popf
mov
cwtl
aas
dec
jge
cmp
decl
dec
push
inc
and
es
mov
pop
adc
test
push
sbb
jp
in
inc
dec
sbb
jne
jg
ret
jl
in
jp
ljmp
add
cwtl
movsl
icebp
cmp
mov
fs
lcall
cmp
xor
jnp
mov
lret
jae
or
shld
jno
fadd
insb
lock
andl
nop
icebp
lods
scas
idivb
sbb
dec
addb
loope
fisttpll
dec
lods
rolb
sub
push
push
adc
sub
fdivrs
sub
or
nop
loopne
loope
aad
jmp
and
repnz
incl
or
dec
push
fistpll
mov
stos
adc
sti
in
fwait
je
mov
call
push
sub
stc
cld
lock
inc
pop
mov
es
addr16
inc
nop
aam
cli
jmp
pop
outsb
jnp
je
aam
inc
push
or
mov
fwait
rolb
jecxz
jge
popf
mov
div
leave
movsb
dec
xchg
mov
mov
test
pop
adc
xor
shll
lods
loope
push
cs
xchg
cmpsb
cs
mov
mov
and
int3
lods
sbb
out
xchg
mov
push
xor
fnclex
shll
sbb
jp
sub
sbb
or
pop
add
imul
cmp
fbstp
xchg
and
roll
scas
inc
dec
xor
mov
xchg
xchg
adc
and
push
pop
adcb
jg
gs
xor
leave
scas
lahf
jmp
pop
cmc
rcll
jae
fwait
mov
aad
js
jo
aaa
jg
cwtl
xlat
aad
repnz
add
jno
jb
test
add
into
jbe
push
nop
ss
ret
and
push
stc
imul
in
addr16
xchg
arpl
rcrb
aas
push
pushf
xor
pushf
or
das
mov
in
and
mov
mov
dec
pop
into
and
ljmp
sub
data16
pusha
mov
lods
fcomps
clc
xchg
stos
fnsave
imul
pusha
movsb
xchg
lahf
idiv
lea
xor
testb
and
xor
outsb
mov
add
mov
imul
mov
adc
fprem
pop
add
jno
dec
out
jle
mov
iret
sub
stos
leave
out
and
xchg
lods
cwtl
mov
adc
mov
mov
movsb
mov
out
outsb
sbb
adc
test
adc
andb
push
mov
push
add
cli
insl
stos
inc
lahf
lahf
sti
std
pop
sub
insl
repnz
add
subl
pop
mov
int
push
iret
dec
enter
inc
test
and
les
mov
scas
sbb
nop
lret
fisubrs
ljmp
push
pop
sub
cmp
inc
jno
icebp
ja
ss
mov
call
addl
jge
mov
sub
repnz
ret
cs
insb
mov
loope
icebp
mov
rclb
xor
sbb
test
repnz
cs
insl
out
mov
mov
add
in
pop
in
cwtl
and
pop
jb
mov
mov
repnz
roll
dec
and
add
movsb
imul
std
add
dec
xor
roll
xorl
add
add
mov
xchg
or
arpl
add
insb
insb
mov
mov
data16
adc
push
insl
mov
shlb
loope
jecxz
lea
pop
loop
pop
and
xchg
push
dec
fnsave
jb
out
lods
jnp
cmp
out
adc
mov
add
adc
fisttpl
sub
das
lods
fmul
cld
jnp
dec
and
fcoml
insb
jo
xrelease
add
mov
filds
push
adc
test
adcb
and
sti
sahf
lahf
mov
mov
pop
xor
cwtl
mov
and
insl
mov
dec
inc
mov
bound
push
lahf
sub
insl
jle
or
int
in
jle
out
sub
sbb
mov
ds
in
call
jae
sub
mov
adc
inc
loope
inc
and
into
mov
xor
lea
in
out
test
cmpsb
int3
pop
sub
repnz
or
xorl
sar
js
in
push
test
ljmp
jmp
inc
ret
es
sub
ljmp
imul
adc
out
mov
lea
cwtl
inc
fisubrl
jge
imul
mov
loop
add
int
sub
fwait
out
mov
cmp
cmp
mov
aam
mov
cmp
push
cmp
push
leave
pop
in
inc
rol
xchg
and
addr16
mov
in
xor
add
aaa
sarl
out
pop
ds
in
pop
lcall
scas
insb
aam
ret
fdivs
in
cld
mov
push
push
inc
dec
jnp
fucom
movsl
jmp
imulb
lods
lock
adc
jp
fucomi
icebp
int
and
aam
jge
clc
shrb
scas
sub
sbb
inc
stos
aam
cmp
or
cwtl
out
fimuls
sbbl
shlb
pop
or
clc
or
les
popf
cmpsb
mov
fdivl
int3
push
sbb
insl
out
cmpsb
mov
sbb
mov
pop
sbb
mov
xchg
pop
dec
aad
imul
pop
cltd
lcall
xchg
xlat
jecxz
jg
push
add
ret
xor
and
pop
shr
daa
mov
stos
push
mov
adc
ficompl
fstpt
mov
iret
or
out
or
jno
xchg
mov
mov
fsts
dec
push
sub
aam
loopne
repnz
stos
in
in
mov
stc
dec
jae
pop
xlat
push
jb
repnz
jo
mov
fnstsw
or
into
cmp
out
xchg
jl
xchg
inc
dec
sub
inc
sbb
xor
push
mov
mov
in
adc
pop
jl
imul
in
jmp
jg
stc
xor
adcl
scas
hlt
sbb
xchg
fdivs
jmp
push
in
movsl
cmc
addr16
dec
or
les
and
nop
push
mov
pusha
inc
cmp
push
enter
mov
sub
mov
imul
xchg
imul
inc
cwtl
test
ljmp
mov
xor
in
popf
xchg
xchg
mov
movsl
push
pusha
fs
repnz
aas
push
fadds
ret
dec
push
or
push
dec
lret
dec
mov
or
icebp
jno
dec
mov
cmp
imul
shll
cmp
xor
add
jge
aam
iret
imul
js
jae
sbb
xchg
rcr
cmp
mov
bound
adc
pop
cmp
xchg
cmp
adc
shlb
cmpsl
mov
popf
iret
inc
addb
or
ret
jg
push
test
mov
into
xchg
inc
push
xchg
and
inc
iret
arpl
inc
mov
sbb
mov
cmp
mov
adc
mov
cmpsb
mov
addr16
sub
das
add
add
pop
cmp
jl
jp
test
mov
in
add
and
xchg
xor
pop
adc
or
repz
pop
cmp
imul
test
sub
push
mov
mov
push
mov
cmpsb
push
popa
pop
inc
iret
mov
jae
mov
and
pop
xchg
jae
rcll
rol
push
rcl
fstpt
add
into
adc
xchg
add
inc
cmc
rcrl
shlb
enter
in
adc
mov
inc
dec
leave
cmpsl
sub
xchg
add
adc
mov
dec
push
adc
aaa
pop
ret
fistl
jb
ror
fmuls
mov
sbb
loope
fisttpll
cmp
mov
negb
repz
or
lret
inc
adc
push
cmp
xchg
push
jne
in
movsl
inc
push
jo
fildl
add
add
test
add
mov
add
jp
mov
lea
cmp
and
inc
movsb
mov
scas
aas
mov
mov
lock
jecxz,pn
sub
dec
push
imul
call
pusha
jecxz
add
pop
lahf
popl
mov
cmp
xor
sbb
fwait
jge
bound
js
cmp
sbb
or
sbb
shll
lods
mov
push
inc
mov
lds
lahf
mov
adc
out
add
cmp
movsb
xorb
lahf
or
inc
js
scas
mov
daa
sahf
test
or
mov
repnz
fisttpll
outsl
lcall
adc
aaa
jnp
cmp
out
mulb
or
sbb
lahf
pop
inc
fcomps
add
out
sub
jecxz
out
push
imul
xlat
dec
mov
clc
lea
dec
fsubrp
xchg
sarl
jb
jnp
jne
int
xor
js
sbb
adc
xorb
fs
add
andl
cmc
mov
mov
push
sub
adc
pop
or
pop
rorl
lock
out
inc
and
rclb
push
ljmp
mov
dec
ds
adc
lods
jle
lcall
enter
pop
xchg
movsb
pusha
or
lret
sarl
mov
ds
sbb
push
xor
push
jmp
xor
in
add
aad
nop
xor
add
mov
shrl
pop
ds
xchg
fistl
mulb
out
push
mov
testl
jne
daa
xor
dec
cmc
outsb
jae
aam
call
bound
push
int
fistpll
orb
xor
dec
movsb
std
dec
cwtl
loop
pop
cmp
sbb
adc
fucomp
into
push
mov
dec
xchg
jg
pop
loop
adc
into
ss
int
cli
sbb
or
js
pop
popa
and
sub
ret
js
and
pusha
push
add
sbb
js
dec
lret
jmp
ret
xchg
shr
psllw
dec
mov
in
and
fsts
insl
cmpsl
aaa
and
fisubrs
shr
xchg
add
sbb
mov
pop
insb
adc
jo
sbb
jo
dec
sub
add
rol
push
mov
mov
cmp
mov
jb
pusha
xchg
and
js
mov
mov
sbb
xor
jo
cmp
pop
push
into
mov
mov
dec
pop
add
rolb
dec
mov
xchg
xchg
push
xchg
and
xor
testb
rclb
sahf
push
push
mov
in
dec
outsl
adc
into
in
outsb
sub
sbbb
or
inc
shl
into
and
dec
nop
fwait
mov
ds
in
mov
rcl
pushf
nop
pop
jp
push
lahf
push
stos
dec
aas
sub
loope
push
xchg
enter
add
pop
and
mov
inc
jnp
sub
xor
data16
out
in
and
jnp
jo
or
repnz
xchg
push
or
stos
or
mov
inc
pop
dec
lret
subb
loop
pop
cmpsb
adc
and
mov
xchg
mov
call
push
pop
stos
dec
imul
cmpxchg8b
scas
stos
jge
bound
movsl
outsb
jle
mov
call
dec
clc
repz
mov
gs
cmp
stos
add
pop
push
sahf
inc
and
adc
lret
cmp
fildl
mov
xchg
xor
ljmp
push
pop
adcl
rorl
ljmp
shrb
in
jnp
sti
inc
aam
pushf
test
and
lods
inc
fidivrl
pop
pop
fldl
inc
mov
adc
xor
sbb
sahf
or
repnz
cmp
in
movsb
popa
mov
xchg
mov
xchg
in
lret
mov
lock
call
xchg
punpckhdq
in
ret
addr16
cmp
shrb
push
and
mov
out
dec
push
mov
imull
mov
out
popf
sarl
out
add
mov
adc
fidivl
gs
out
ficompl
popa
push
mov
cmp
les
or
mov
sub
mov
mov
pop
xchg
out
xor
cli
rcrb
lahf
adc
mov
frstor
addr16
mov
movsl
movsb
jns
cmp
push
adc
adc
repnz
cmp
jg
sub
xchg
test
mov
sub
add
mov
test
test
xchg
fmuls
lea
scas
jo
sub
push
pop
mov
push
push
int
mov
xor
aad
add
dec
jp
push
dec
out
mov
jle
xchg
inc
xor
cs
jno
cmp
inc
mov
xor
xchg
mov
mov
jb
cld
andl
dec
lock
ds
mov
adc
adc
cmp
addr16
popf
push
jecxz
sub
xor
aam
jge
popf
dec
sahf
stos
or
dec
repnz
push
mov
mov
jnp
decl
notl
xor
int3
and
xchg
mov
fwait
out
xchg
stc
add
jecxz
fstl
mov
sub
test
xchg
leave
and
ljmp
dec
cmc
adc
cs
je
adc
std
out
lret
lret
into
mov
sub
cwtl
hlt
ret
add
jmp
sbb
inc
jbe
and
enter
out
push
and
pushf
push
sbb
jp
push
lret
inc
jae
jge
ljmp
jbe
lods
mov
xchg
pusha
int
sbb
jg
adc
jg
cmpsb
fisubl
cmp
call
and
sub
push
pop
mov
pop
mov
xchg
mov
scas
xor
dec
add
mov
cmp
cmp
sysexit
inc
cmp
test
out
ja
test
mov
popa
ret
fstl
stos
pop
adc
cmp
mov
arpl
outsl
fs
cmp
aaa
movsb
mov
dec
jp
pop
pop
scas
xchg
push
lret
int
sub
sub
sub
mov
push
sarb
ret
push
insl
pop
mov
cmc
loop
jecxz
xor
mov
ds
add
fsubl
leave
and
jge
in
mov
sahf
iret
and
mov
iret
addr16
pop
or
mov
or
jge
ds
inc
dec
jns
and
data16
mov
loopne
sahf
jno
sbb
gs
lods
lock
lcall
pop
and
cltd
nop
shr
insl
dec
and
and
popf
and
fcomps
in
aad
sbbb
add
stos
push
fidivs
cmp
arpl
icebp
inc
add
ljmp
push
es
daa
push
sub
dec
adc
adc
andb
repz
jns
add
xchg
inc
cmp
das
jmp
sbb
or
loopne
mov
sbbl
jle
sarb
fistpll
jmp
dec
ss
jle
mov
cmpsb
in
add
push
jne
mov
or
sub
mov
inc
push
sahf
mov
sbb
mov
imul
inc
xor
dec
and
pop
ds
jge
out
insb
lock
repnz
es
arpl
xchg
lock
ja
or
xor
add
xchg
sub
cmp
xor
mov
adc
mov
mov
sbb
sub
js
aas
xorl
in
loopne
mov
dec
ficomps
not
dec
andl
xchg
outsb
out
pop
fcoml
ljmpw
fwait
cli
sbb
mov
mov
std
scas
push
sbb
sub
sub
clc
arpl
dec
sbb
mov
pop
pop
add
or
lock
repz
test
pop
inc
cmp
les
and
std
mov
fdivs
nop
rorb
mov
cmp
ret
stc
stc
cmp
or
pop
call
gs
adc
movsb
sub
adc
sbb
jno
outsl
popa
pop
add
jp
or
sti
push
xchg
xchg
stos
outsb
aam
ss
int3
add
ljmp
inc
inc
add
int3
jmp
sub
inc
jbe
fnstenv
jecxz
in
lahf
sbb
xchg
mov
jae
loope
insl
mov
push
fnstcw
add
or
inc
es
stos
fldcw
in
fsubs
adc
cmp
jo
sbb
adc
xchg
int3
ds
ror
push
xor
or
int
and
nop
xchg
mov
lock
inc
aad
ljmp
push
test
or
dec
push
xchg
insb
mov
jp
mov
mov
das
dec
lret
and
rcr
imull
cmp
cmpsl
mov
lods
in
lahf
ljmp
pop
inc
mov
stc
sarl
xchg
cld
outsl
sbb
push
dec
mov
outsb
rorb
fs
adc
ss
push
and
dec
pusha
mov
inc
cmc
sahf
test
imul
jecxz
imul
mov
ficoms
mov
rcl
orl
hlt
or
aad
mov
mov
fwait
or
loop
mov
mov
scas
in
sahf
leave
loop
sub
adc
dec
outsb
daa
sbb
adc
repz
pop
fimull
out
xchg
or
mov
jne
xchg
outsb
push
jne
dec
outsl
mov
xchg
inc
fimuls
cmp
jle
add
pop
bsr
loope
imul
fsubl
dec
and
sbb
and
es
push
push
cmpsb
dec
into
stos
test
das
data16
mov
insb
movsb
ret
mov
pop
fwait
xor
movsb
out
repnz
out
bound
out
test
dec
cmpb
shll
mov
adc
pop
inc
jnp
fisubrs
mov
rclb
leave
inc
loop
mov
adc
stos
sub
in
xchg
and
dec
jae
push
loope
sbb
out
fbstp
and
notb
jae
cs
in
xchg
shll
cmp
je
sub
mov
sahf
jo
insl
mov
xor
dec
mov
mov
sbb
test
xor
or
xor
ret
inc
mov
es
ret
mov
sbbl
mov
mov
push
sbb
ss
sbb
addr16
sbb
and
outsl
mov
xchg
xchg
mov
and
divb
and
adc
pop
pop
ds
std
xor
mov
adc
inc
andb
pause
fcompl
outsb
inc
outsl
outsb
imull
add
lods
mov
push
popf
sub
mov
fs
and
fadd
mov
ds
add
jecxz
sti
jecxz
push
push
cmpsb
dec
mov
pop
les
ffree
mov
add
popa
subb
stos
fildl
aad
sbb
cmp
test
jge
jge
lcall
shll
leave
nop
jge
bound
pop
repz
in
aam
mov
adcl
xor
pusha
faddl
out
xlat
adc
mov
sub
jne
aaa
in
cmpl
pop
sbb
push
add
dec
sbb
mov
pushf
pop
xor
popf
and
lods
dec
jns
cmp
ljmp
stos
adc
ds
sahf
fdivrs
mov
ficomps
cmp
and
mov
sbb
ljmp
xchg
stc
enter
adc
sub
std
and
mov
pusha
cs
sahf
add
xor
loop
aad
loope
mov
lret
cmp
orb
xchg
jbe
loop
jmp
imul
mov
inc
xchg
lock
fmul
dec
leave
idivb
popa
cli
repnz
int3
lret
adc
sbb
in
in
adc
cmpsl
int
es
jg
xlat
mov
lock
jecxz
movsl
push
loop
je
test
popf
jmp
and
mov
imul
into
dec
fneni(8087
cld
in
mov
in
int3
enter
rcll
sahf
loopne
jne
cmp
cmp
scas
or
and
mov
cld
adc
loop
into
sub
loope
add
and
push
sahf
mov
mov
inc
cmp
mov
sbb
arpl
cwtl
push
jecxz
sbb
adcb
pop
arpl
test
xchg
inc
mov
xchg
fimull
push
insl
sub
ljmp
fsubl
xlat
dec
das
in
lret
xor
xor
aam
insl
xor
and
hlt
xor
enter
add
das
push
in
imul
rclb
or
ds
mov
fcoml
add
int3
jnp
mov
mov
ljmp
mov
mov
sysenter
nop
add
pop
xchg
mov
testl
int
imul
jmp
cmp
dec
out
dec
xchg
iret
pop
mov
in
stc
dec
inc
rcrb
les
and
sbb
fldt
mov
push
cmp
out
lret
jae
gs
in
or
pop
push
lods
mov
push
xorl
mov
pop
rolb
imul
subl
ds
push
shr
enter
sub
add
mov
movsb
push
cmpsb
sub
aam
mov
mov
hlt
mov
push
inc
das
pop
in
mov
les
clc
adc
dec
cmp
test
ret
cli
loop
and
push
add
sbb
mov
stos
lods
mov
inc
sbb
js
sbb
push
xchg
lds
mov
push
lods
sahf
inc
test
mov
or
arpl
push
pushf
clc
in
clc
test
xor
xor
andl
xchg
nop
xchg
dec
jmp
les
fistpl
and
mov
sbb
xchg
je
ss
in
mov
jns
dec
call
in
rep
lock
fdivs
fisttps
xor
push
sub
pop
js
mov
rcr
pop
imul
adc
add
mov
mov
lahf
sbb
xchg
rclb
mov
into
sbb
pop
xchg
jecxz
and
and
push
mov
push
out
mov
pop
insb
lret
mov
mov
in
shrb
std
aas
xor
div
fmuls
xchg
mov
mov
fstpt
sbb
scas
adcl
into
aam
xchg
imul
mov
lahf
xchg
lds
mov
mov
mov
enter
cli
cwtl
ret
lret
bound
sbb
cmpsb
or
cltd
push
js
mov
cmpsb
sbb
fs
lret
cmpsb
xor
ss
cmpsl
aam
shll
push
jmp
hlt
xor
add
testl
loopne
fistpll
and
bound
jmp
cmp
push
add
mov
mov
mov
xchg
push
sbb
enter
mov
mov
rcr
push
cwtl
pusha
adc
js
int
jmp
fs
dec
sbb
push
push
loop
add
xor
sub
adcb
movsb
push
jo
loopne
out
inc
arpl
cld
sub
and
nop
in
mov
imul
mov
cmp
mov
shll
arpl
mov
ljmp
sbb
xchg
mov
xor
loop
push
xchg
mov
jmp
xchg
das
je
ljmp
out
pusha
mov
pop
mov
dec
pusha
test
std
adc
fs
inc
mov
mov
or
lods
or
imull
pop
cmpsb
dec
push
cmp
hlt
imul
adc
mov
adc
dec
int
pop
add
xor
xor
test
shll
arpl
pushf
pop
ja
sbb
jb
cmp
xchg
inc
push
mov
cmp
mov
cmp
inc
push
dec
shll
lret
inc
mov
xor
popa
mov
test
cs
pop
ret
out
mov
outsl
outsb
inc
or
cmc
and
dec
or
xor
sub
xchg
lea
xchg
faddl
adc
pop
xchg
arpl
loop
sbb
js
in
mov
jle
jp
shrl
cmp
out
js
aad
or
imul
add
pushf
or
scas
nop
lock
fisttpll
and
and
push
xchg
test
sbb
popa
sti
and
into
repnz
frstor
mov
lea
jmp
cmp
mov
imul
mov
dec
adc
cmpsb
mov
in
cltd
mov
adc
lahf
cmp
lret
push
xor
jp
sbb
jmp
out
push
pop
jp
bound
cmp
in
jp
lock
push
js
and
pop
push
popa
test
ds
and
sub
rolb
ret
fnstsw
nop
ja
aad
arpl
jg
lcall
ljmp
and
repnz
mov
mov
or
aam
pop
das
fcompl
lret
sbb
cmp
fisttps
shl
outsl
sbb
ds
jl
mov
xor
out
leave
lods
hlt
out
scas
mov
push
sub
mov
inc
jmp
lods
jo
iret
xchg
lock
pusha
jmp
dec
test
add
cmp
ffreep
cwtl
inc
xor
cwtl
aaa
int
out
jmp
jmp
lahf
shl
jmp
outsb
sub
pop
lods
mov
fisubrs
inc
mov
push
leave
adc
ss
test
rorl
cltd
jmp
mov
aam
ja
mov
xchg
sub
inc
add
pop
xchg
incb
outsb
mov
jno
sub
pop
sarb
push
xchg
rorb
bound
mov
mov
xchg
sbb
ljmp
stos
jbe
sbb
or
jnp
jle
pop
jg
pushf
fildll
sahf
test
ds
cmpsb
stos
pop
xchg
add
and
inc
js
pop
or
pop
mov
push
push
pop
cmp
dec
push
xor
jnp
outsb
andb
movsl
adc
mov
lret
xor
movsl
and
pushf
and
ficoms
sbb
es
jge
push
cmpsb
pop
fimuls
sub
fdivrp
mov
psubw
or
out
push
stc
fimuls
push
sbb
xor
lock
jbe
or
add
or
or
cmp
cmpsl
stos
inc
add
jmp
fcmovnb
inc
ret
or
loop
pop
add
cmp
cmp
xchg
add
je
lret
jo
jmp
ret
lea
xlat
pop
in
nop
repnz
inc
notl
fs
jmp
add
dec
and
je
mov
sbb
aam
adc
fxch
mov
mov
enter
xor
movsb
or
arpl
in
push
or
test
push
xchg
js
mov
xor
cli
fdiv
test
lahf
fcoml
adc
jecxz
fiadds
or
mov
mov
xchg
mov
aas
push
inc
xchg
cld
aam
sub
jmp
adc
lock
fistpl
add
cmpl
hlt
mov
ss
xor
push
cmp
sub
xlat
jp
out
dec
inc
shlb
jb
icebp
add
push
inc
xor
out
pop
adc
ja
mov
mov
dec
out
sbb
sub
movsl
jb
loope
jp
test
mov
push
and
test
dec
rorb
sub
mov
mov
sbb
lea
cwtl
push
and
dec
sbb
test
or
mov
repnz
xchg
mov
fcmovbe
dec
adc
xor
outsl
cmpsl
jnp
push
popf
and
mov
jb
leave
iret
sub
dec
push
dec
push
and
inc
add
nop
hlt
inc
arpl
popa
jb
mov
rcrb
jns
data16
dec
push
out
and
test
jae
mov
pop
enter
xor
sbb
mov
push
add
adc
jmp
in
outsb
lcall
bound
mov
xor
mov
roll
mov
jne
aam
mov
in
mov
xor
adc
jno
sbb
xor
into
push
and
adc
cmp
aas
cs
std
push
ret
rorl
lcall
std
repnz
xor
inc
xchg
lcall
push
scas
dec
cwtl
adc
and
pop
jae
sbb
and
or
push
lods
xor
mov
stos
ret
mov
inc
dec
mov
test
lods
sbb
data16
dec
rorb
mov
popa
push
lahf
mov
add
push
imull
jne
or
xor
fcomi
fs
arpl
in
fdivrs
cmp
jno
test
cli
jnp
hlt
pushf
fnstsw
js
std
xchg
sbb
fstpt
cmc
imul
jne
lcall
imul
jne
fidivl
into
sub
jle
scas
push
xor
ret
fsubr
insl
stos
sahf
sarb
repz
loopne
ljmp
adc
mov
test
xor
sbb
das
sbb
stos
out
inc
scas
addr16
or
test
ret
mov
or
xchg
repnz
and
std
and
mov
sbb
cwtl
inc
cmp
in
mov
repnz
push
out
sub
scas
mov
imul
aas
leave
dec
inc
push
xchg
cmp
es
jg
push
ret
in
inc
mov
sub
inc
mov
pop
icebp
mov
xchg
and
sbb
adc
dec
addr16
cmp
and
jne
hlt
flds
mov
sbb
pushl
or
jne
shl
or
or
clc
test
xchg
jl
les
ret
popa
push
sbb
jae
mov
pop
ficompl
dec
and
push
lds
xchg
into
js
mov
mov
cltd
sbb
fisttpll
inc
das
mov
outsl
dec
push
inc
adc
jno
es
pop
pop
or
push
cmp
nop
ds
cmpsb
bound
addl
aam
mov
mov
aas
je
jle
into
ror
rclb
xchg
sahf
mov
insl
pop
ss
cmc
popf
mov
pop
fiadds
incb
aam
or
or
mov
cmpsb
and
shll
bound
and
cmp
add
cltd
and
sub
lods
popf
pusha
lret
add
mov
jo
and
xor
jle
adc
adcl
xchg
negb
loopne
shll
jbe
cmp
call
repz
pop
xor
imul
and
clc
dec
lock
dec
and
iret
mov
call
or
test
inc
hlt
lods
mov
in
mov
cmpsb
nop
cmp
add
cld
negl
orb
into
mov
nop
outsb
pop
xchg
sbb
or
aad
icebp
sbb
jns
push
es
outsb
call
sub
popf
add
clc
dec
popf
popa
and
sets
cmp
pop
push
pop
fucomi
stc
sub
fisttps
add
xor
in
jg
dec
sbb
mov
mov
out
fistps
cli
xchg
push
jbe
repz
jbe
call
or
inc
dec
daa
lds
mov
out
sbb
push
cwtl
and
sbb
and
fiadds
in
aad
cld
xor
les
in
adc
xchg
and
push
push
mov
mov
leave
rcrb
std
mov
sub
sbbl
jecxz
push
stc
lcall
xchg
pop
sahf
add
sahf
mov
mov
mov
mov
imul
sub
rcrl
roll
cld
or
scas
arpl
dec
mov
lods
sbb
test
stos
pop
loopne
loope
xchg
dec
lret
arpl
and
test
cmp
fimuls
dec
and
xor
ja
push
mov
nop
cmpsb
hlt
ds
out
adc
sbb
inc
sub
pop
into
in
mov
rorl
and
pop
sbb
and
iret
ds
std
add
push
mov
inc
leave
aam
fistps
jbe
mov
jae
push
jg
fcmovnb
or
pusha
cli
mov
jae
push
movsl
and
lea
pushf
jne
xor
fmuls
into
int3
movsb
es
dec
jo
mov
and
dec
lret
xchg
vprotw
xchg
inc
imul
aad
test
cmp
dec
std
xchg
sub
sub
cltd
cli
repz
xchg
ret
call
adc
dec
es
adc
ret
icebp
sbb
jb
xchg
xor
out
shrl
sbb
shlb
push
mov
jbe
lock
jecxz
lds
ret
pop
repz
lcall
jb
test
sbb
mov
flds
xchg
inc
cmp
push
pusha
es
imul
aaa
rolb
les
cmp
divl
dec
push
inc
je
sub
and
call
sub
aad
cmp
shlb
clc
jmp
cs
fidivrs
ret
lods
fsincos
or
test
add
xchg
add
pop
roll
mov
pop
call
pop
sbb
and
test
repnz
push
mov
pop
push
aaa
mov
in
rcr
jmp
mov
fwait
xor
mov
mov
xchg
pop
sub
out
rol
push
cmp
lret
push
mov
cmpb
popf
dec
pop
test
or
repz
repz
sub
fs
xchg
inc
pop
push
insl
loopne
repz
add
data16
sub
cli
jnp
and
lock
pop
push
in
and
mov
push
sub
mov
jbe
outsb
xchg
jo
shl
cmp
xor
push
xchg
rcr
mov
jle
jl
xor
test
cmp
clc
mov
gs
mov
out
push
push
xchg
ret
hlt
add
mov
push
dec
movsl
jae
pushf
pop
cmp
scas
xor
sahf
fsubp
add
push
test
lret
shll
rol
or
jae
or
clc
fdivr
xchg
fwait
push
sti
scas
mov
dec
mov
push
leave
or
cwtl
dec
pop
push
mov
xchg
mov
out
mov
jo
mov
js
out
sti
mov
aam
dec
mov
fsubs
jnp
js
or
insl
es
pop
mov
test
dec
lcall
or
jnp
lods
xchg
insb
lock
in
or
and
jnp
int
movsl
cmpsb
out
aad
push
dec
xchg
cli
adc
xor
outsl
xor
add
into
xor
jle
scas
inc
sbb
stos
mov
pop
jle
fidivs
pop
adcl
mov
shrb
out
mov
xchg
push
add
xchg
fwait
loop
and
push
dec
popa
fwait
aas
pop
inc
adcb
loope
rcrb
jle
mov
xchg
je
mov
popa
arpl
jecxz
push
and
jbe
movsb
sbb
ret
mov
sbb
jecxz
xor
jae
or
jge
insl
movsl
push
imul
add
lds
jecxz
dec
mov
pop
jl
iret
sub
xor
rep
fsubr
pop
arpl
pop
scas
add
xchg
insb
sbbl
mov
fisubs
fwait
dec
cwtl
mov
movsl
out
scas
sahf
jle
pop
cwtl
mov
or
int
test
in
stc
arpl
push
lds
mov
testb
cmpsl
pop
cmpsl
dec
sub
jecxz
jmp
ret
loope
pop
jae
xchg
adc
in
xor
mov
mov
jecxz
loopne
lds
jbe
inc
lds
mov
xchg
adc
out
rcl
and
mov
sahf
mov
xor
sbb
jmp
ss
jecxz
std
xchg
push
pop
push
and
push
std
xchg
sub
jp
mov
test
in
push
xchg
sub
int
pop
fldenv
fistl
pop
and
dec
lahf
mov
inc
inc
pop
and
or
fdivp
push
jle
xchg
addl
push
hlt
mov
arpl
and
or
scas
sahf
sub
cmp
ljmp
add
nop
jae
rcr
mov
scas
mov
and
inc
std
fidivrs
roll
dec
inc
out
fs
jae
or
adc
sbb
inc
stc
sar
cmp
mov
mov
push
sub
fwait
jl
orl
pushf
and
daa
or
in
movsl
jle
and
into
dec
repz
add
adc
adc
cmp
pop
jae
hlt
ljmp
pop
inc
into
nop
addb
out
movsb
push
inc
js
inc
sub
jmp
and
xor
mulb
notb
inc
test
bound
es
adc
jnp
mov
aad
sub
jmp
enter
cmp
sbbb
push
mov
jl
lret
fiaddl
fs
dec
rcrl
fisttpll
inc
mov
stos
aam
or
sub
or
loop
mov
dec
leave
out
mov
imul
leave
sbb
xchg
std
dec
mov
into
hlt
stos
jp
test
mov
ret
jno
cmc
lcall
arpl
addr16
sarl
pop
ret
jp
jl
xchg
mov
test
fsub
add
xchg
sar
dec
dec
out
jb
or
fwait
and
imul
lahf
outsl
sub
push
cmc
xor
hlt
jb
fisttpll
test
lock
xor
jge
push
push
jns
fsubr
je
test
xor
ret
sti
popa
lods
out
or
add
lea
jne
cltd
sbb
ljmp
mov
push
mov
out
out
pop
dec
add
mov
movsl
mov
pop
add
jmp
imul
push
xchg
and
mov
pop
xchg
das
pushf
pop
jne
lcall
push
enter
xchg
xlat
addr16
pop
sub
in
jb
jecxz
ds
sarl
and
push
iret
dec
inc
fisubrs
sub
inc
sbb
sbb
imul
into
mov
das
xlat
pop
faddp
adc
enter
fidivrs
push
push
imul
int
and
daa
lret
ds
test
pop
pop
sub
cmp
cli
push
adc
cwtl
xor
xor
or
jne
imul
scas
mov
sub
xchg
push
imul
sub
pop
adc
push
mov
inc
fsubrl
mov
jp
test
sti
sbb
in
and
aam
sti
sahf
aaa
aam
std
das
imul
cmc
pop
adc
push
bound
cs
xor
pop
repnz
je
pop
mov
test
stos
pop
inc
pop
cmp
std
test
sub
sub
mov
jmp
iret
pop
out
and
addr16
add
sbb
xorl
xchg
scas
dec
sbb
xchg
xchg
test
cmp
push
push
mov
imul
mov
gs
outsb
pop
loopne
mov
ffreep
and
std
adc
xor
fimuls
loope
dec
inc
mov
sar
insl
xchg
mov
inc
mov
xor
lods
test
pop
adc
sbb
pop
pop
xlat
outsb
out
popf
adc
pop
mov
ja
out
pop
sbb
sbb
add
outsl
subb
js
mov
pop
xchg
lods
inc
pop
mov
push
add
out
mov
mov
cmc
cli
aad
push
mov
xor
pusha
insl
jnp
sti
in
pop
aam
jb
popf
cld
jmp
jg
es
cmp
pop
lods
clc
test
lret
adcb
loop
outsb
andb
push
popf
dec
mov
mov
sub
xchg
shl
pminsw
xchg
inc
sti
into
mov
xor
push
aam
cmp
adc
icebp
lret
sahf
lahf
lahf
xor
std
nop
dec
dec
jg
cli
dec
subl
hlt
jbe
and
mov
add
mov
add
pusha
lods
add
mov
aam
xchg
cld
iret
adc
clc
jl
jno
adc
mov
xor
test
pop
pop
jb
movb
rcrb
enter
push
cmp
int3
sahf
in
pusha
jne
sbb
scas
dec
into
cmp
and
imul
mov
shlb
rorb
add
mov
mov
inc
add
in
stos
xor
or
push
fildl
nop
int3
jne
out
stc
jo
dec
adc
loop
lods
mov
pop
inc
jp
pop
insl
pop
jmp
pop
dec
sahf
pop
paddusw
or
fcoml
dec
lcall
mov
and
mov
pop
ret
outsl
xchg
add
in
addl
sar
sub
popf
pusha
mov
pushf
pop
ss
pop
std
dec
out
rol
cmp
ror
and
ja
fcmovbe
inc
mov
cmp
mul
or
addr16
and
mov
cwtl
ss
insl
push
cli
mov
jae
ror
xor
or
loope
dec
mov
fidivs
jbe
or
mov
mov
sbb
fsubs
paddw
test
repnz
sbbl
lret
or
xor
ja
enter
jb
dec
cmpsl
imull
fistps
pop
push
cld
mov
jmp
add
fcomps
mov
lcall
mov
jmp
adc
pop
jns
cmp
mov
cmp
lret
fiaddl
loopne
outsb
xor
sub
cmp
cmp
mov
imul
xchg
pusha
lods
jne
pop
cmc
xlat
dec
jle
test
ud2
cs
int3
jg
and
sub
insl
es
push
ret
test
cmpsb
sbb
es
add
jne
je
xor
pop
cmp
lods
add
test
stos
mov
enter
xchg
movsl
sahf
mov
imul
xchg
jne,pt
sbb
cmp
out
jecxz
mov
pop
movsl
mov
mov
packssdw
daa
ret
out
cltd
mov
dec
stos
sub
mov
ja
dec
dec
repz
aas
mov
neg
cmp
movsl
int3
daa
sahf
mov
push
mov
movsb
xor
xchg
mov
fsubl
in
dec
outsl
lret
mov
shlb
mov
iret
mov
cmp
sbb
rcrb
in
ret
or
sub
xor
sbb
jmp
inc
xlat
hlt
jbe
pop
pop
pop
in
leave
fdivrs
fldcw
cwtl
int3
cmp
faddl
out
inc
dec
add
loope
dec
fmul
lock
test
push
inc
movb
pop
or
sub
push
mov
icebp
mov
andl
jle
sbb
ja
iret
clc
or
lcall
ret
xchg
mov
xor
mov
and
push
adcb
jae
jb
or
push
aam
xchg
nop
mull
stos
lcall
mov
or
arpl
inc
sub
std
ja
stc
add
xchg
loop
loope
scas
insl
adc
imul
aas
jns
inc
adc
pop
es
int3
cltd
cmp
cmp
sti
mov
mov
jmp
fcmovb
in
inc
in
sar
cmp
movsl
test
xor
shlb
icebp
jmp
xorl
aam
stos
loop
insb
cmp
push
stos
sti
and
push
fisubrl
or
cmp
nop
cmp
mov
mov
fimull
xor
mov
lahf
int3
ljmp
imul
fimull
insl
je
lds
and
pop
je
popa
loopne
mov
jecxz
gs
fdivr
lret
in
insb
nop
filds
rcrb
loopne
leave
mov
inc
test
mov
repz
push
mov
add
iret
dec
punpckhbw
adc
loop
xchg
sbb
dec
in
nop
pop
push
pop
sti
nop
and
mov
jnp
mov
ds
add
in
imul
xchg
mov
aaa
dec
outsb
cmp
fbld
jge
push
and
pop
into
inc
mov
pop
ds
enter
jo
shrl
adc
push
push
xor
xor
push
and
icebp
xchg
scas
push
adc
jmp
iret
cmpsb
filds
add
jae
and
mov
ds
xor
popf
inc
jmp
sbb
popa
in
cltd
nop
sbb
mov
fs
mov
push
sbb
mov
jbe
cwtl
mov
fistps
adc
scas
xchg
outsb
and
hlt
cld
jge
mov
icebp
popf
and
sbb
pop
pusha
imul
jnp
jl
jb
lret
dec
dec
data16
xor
loope
inc
pop
repz
pop
jmp
divb
repz
sbb
popa
int
iret
cmp
jae
sahf
mov
cld
ds
int
sbb
push
sbb
das
mov
mov
inc
lods
or
pop
roll
pop
and
pop
int3
mov
ficoms
adc
loop
mov
aam
aaa
out
shrl
push
cvtps2pi
fnstsw
push
repnz
rol
adc
mov
fcomps
popa
pop
and
aad
int3
push
ss
jno
push
jge
fcomps
into
and
stos
je
sub
out
or
jge
cli
sahf
fldt
lahf
sbb
lea
jns
cltd
imul
dec
scas
xchg
loopne
scas
in
iret
mov
xchg
mov
adc
in
or
and
int
gs
fisubrs
mov
inc
lcall
sub
pop
sti
add
jmp
mov
repnz
cmp
and
outsl
xor
xor
call
outsb
enter
fdivs
lods
shl
xchg
outsb
in
lods
cs
outsb
push
es
xor
mov
mov
mov
add
call
push
jl
ret
pop
pop
idivl
xchg
aas
push
push
jbe
push
cltd
or
mov
and
aam
jp
sbb
lahf
std
jl
in
hlt
mov
jo
mov
jle
mov
ss
stos
out
and
xchg
outsl
pop
icebp
repnz
scas
outsb
sar
ret
xor
inc
bound
scas
and
jae
out
cwtl
mov
push
cmc
add
pop
js
sbb
mov
xor
test
push
mov
adc
sub
in
jo
inc
pop
mov
cmc
sub
in
push
jg
jmp
arpl
add
mov
mov
pop
mov
loope
test
fbld
scas
jne
dec
in
cmp
nop
lock
xchg
push
cli
std
or
cmpsl
popf
test
pop
test
push
test
adc
leave
pushf
jle
cmp
out
push
jbe
inc
mov
jne
out
test
icebp
adc
test
jno
xor
dec
dec
shlb
adc
rclb
xor
fsubr
cmp
sahf
sbb
std
inc
or
mov
inc
fsubp
fs
inc
pop
imul
mov
int
dec
sti
outsl
or
add
in
push
std
adc
stos
imul
call
inc
push
fwait
imul
ljmp
or
dec
cmp
fcoms
mov
bound
lahf
mov
pop
lods
dec
movsb
or
xorb
lods
push
mov
sti
addr16
xor
leave
packsswb
jo
xor
jge
xchg
sbb
or
imul
pushf
pop
cmp
adc
inc
ss
cli
add
cld
cmp
insl
fisttpl
mov
repnz
mov
ret
dec
jb,pt
loop
or
mov
stos
push
xchg
std
or
jne
xor
cmp
adc
ror
mov
cmpsb
xchg
dec
xchg
cld
aas
cmp
pop
call
mov
jbe
jbe
ret
pop
add
and
jo
mov
clc
or
lahf
or
arpl
into
jg
add
ljmp
cmc
mov
fwait
and
pusha
stos
cmp
jg
stos
and
mov
xor
loop
push
pop
ja
lock
adc
jae
mov
mov
out
gs
push
xchg
mov
incb
repnz
inc
test
mov
ljmp
divb
inc
xor
in
cmp
push
push
call
add
push
push
call
add
push
add
push
push
push
push
call
add
push
push
push
push
push
call
add
push
mov
mov
add
push
push
push
call
add
push
mov
push
call
add
call
mov
push
push
push
push
call
add
call
push
push
push
push
call
add
push
push
push
push
call
add
push
call
add
push
push
call
add
sub
push
call
add
add
add
push
push
push
push
call
add
call
push
call
add
mov
xor
sub
push
push
push
push
push
call
add
push
push
call
add
cmp
jne
push
call
add
push
call
add
push
push
push
push
call
add
mov
sub
xor
sub
push
push
push
push
call
add
push
push
push
push
push
call
add
xor
mov
push
push
push
call
add
push
push
push
push
call
add
and
call
add
call
push
call
add
cmp
jne
call
push
push
push
push
call
add
call
mov
mov
or
add
add
add
cmp
je
or
test
jne
sub
add
mov
add
mov
cmp
jne
sub
mov
add
and
xor
test
je
sub
cmp
jne
sub
mov
cmp
jne
sub
sub
and
add
add
cmp
jne
add
mov
add
cmp
jne
mov
or
cmp
je
sub
mov
sub
cmp
je
mov
cmp
je
or
add
cmp
je
mov
test
je
mov
sub
mov
sub
add
mov
xor
and
sub
or
cmp
je
sub
mov
add
and
sub
and
or
mov
mov
or
sub
or
sub
add
cmp
jne
mov
mov
or
xor
add
cmp
je
xor
mov
cmp
je
and
add
cmp
jne
mov
sub
mov
sub
cmp
je
mov
mov
mov
add
cmp
jne
add
mov
add
sub
mov
push
push
call
cmp
je
mov
mov
sub
sub
or
cmp
jne
push
push
push
call
add
push
push
push
push
push
call
add
mov
add
or
push
push
push
push
call
add
push
push
push
push
call
add
test
jne
push
push
call
add
push
push
call
add
mov
push
push
push
push
push
call
add
mov
push
push
call
add
push
push
call
add
push
push
push
call
add
push
push
push
call
add
push
push
push
push
call
add
sub
cmp
je
push
push
call
add
push
push
call
add
push
push
call
add
mov
cmp
je
or
push
call
add
push
call
add
sub
push
push
push
call
add
call
or
add
push
push
push
push
call
add
push
push
push
call
add
mov
add
and
mov
sub
mov
add
and
cmp
je
mov
mov
sub
and
add
sub
sub
mov
call
call
push
push
call
add
mov
push
push
push
call
add
mov
push
push
push
push
call
add
mov
push
push
push
push
push
call
add
push
call
push
push
push
call
add
push
push
call
add
call
add
mov
push
push
push
push
call
add
push
push
push
call
add
push
call
add
push
push
push
push
call
add
push
push
push
call
add
push
push
call
add
push
push
call
add
push
push
push
push
call
add
push
push
call
add
push
push
call
add
add
push
push
call
add
push
push
push
push
call
add
push
call
add
cmp
jne
add
add
add
push
push
push
call
add
add
push
push
push
call
add
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
mov
push
call
add
call
push
push
push
call
add
push
push
push
push
call
add
mov
call
push
push
call
add
call
or
push
push
push
call
add
call
or
add
add
sub
push
push
push
call
add
lea
call
xor
push
push
push
push
call
add
push
and
xor
push
push
call
add
push
push
push
push
push
call
add
push
push
call
add
call
push
push
push
push
call
add
push
push
push
push
push
call
add
mov
call
push
push
push
call
add
shr
call
push
push
push
push
push
call
add
cmp
jne
mov
push
push
push
push
call
add
call
mov
mov
push
push
push
push
push
call
add
push
push
push
push
call
add
sub
push
push
call
add
call
mov
mov
cmp
jne
add
sub
add
cmp
jne
sub
cmp
je
or
mov
add
call
mov
push
push
call
add
push
push
push
push
call
add
pushl
push
pushl
call
mov
push
push
push
call
add
call
addl
push
push
push
call
add
push
push
call
add
mov
sub
call
push
push
push
push
call
add
push
push
push
call
add
push
push
call
add
mov
push
push
push
push
push
call
add
push
call
add
or
push
push
call
add
jmp
call
push
push
push
push
call
add
pop
cmp
je
push
push
push
push
push
call
add
pop
push
push
push
push
push
call
add
pop
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
call
push
mov
mov
call
push
push
call
add
push
sub
push
push
push
push
call
add
push
mov
push
push
push
call
add
sub
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
call
mov
add
push
push
push
call
add
add
push
push
call
add
sub
or
push
push
call
add
add
push
call
add
mov
cmp
je
push
push
push
push
push
call
add
push
push
call
add
cmp
jne
call
push
push
push
call
add
cmp
jne
add
push
push
call
add
movl
push
push
push
call
add
push
push
push
push
call
add
mov
mov
mov
xor
add
and
cmp
je
mov
cmp
jne
sub
cmp
je
mov
sub
add
mov
sub
cmp
jne
and
test
je
xor
mov
and
and
add
cmp
je
mov
mov
add
test
jne
add
mov
cmp
jne
mov
add
sub
and
xor
xor
sub
test
jne
sub
mov
and
mov
add
or
add
add
sub
add
mov
add
add
mov
sub
mov
sub
sub
add
mov
push
push
push
call
add
push
push
push
push
call
add
test
jne
mov
push
push
call
add
mov
add
sub
mov
mov
mov
cmp
jne
mov
add
add
mov
mov
and
add
sub
cmp
jne
or
add
sub
cmp
jne
cmp
je
mov
cmp
je
mov
mov
cmp
jne
sub
or
sub
cmp
jne
add
add
mov
sub
or
mov
and
cmp
jne
test
je
add
xor
cmp
je
test
je
mov
cmp
jne
add
sub
cmp
jne
add
add
mov
test
je
add
cmp
jne
add
mov
mov
cmp
je
sub
add
or
cmp
jne
add
mov
add
add
mov
sub
add
add
add
mov
add
mov
push
push
push
call
add
push
push
call
add
mov
push
push
push
call
add
push
push
push
push
call
add
test
je
push
push
push
push
push
call
add
push
push
call
add
mov
push
push
push
push
call
add
push
push
push
call
add
push
call
add
mov
mov
mov
cmp
jne
mov
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
mov
sub
push
push
push
push
call
add
push
call
add
add
push
push
call
add
push
push
push
push
push
call
add
call
add
push
push
push
call
add
call
push
push
call
add
push
push
push
push
call
add
call
push
push
push
call
add
push
push
push
call
add
push
push
push
call
add
rdtsc
sub
and
mov
add
mov
xor
sub
sub
or
sub
sub
add
mov
xor
cmp
je
mov
push
call
add
addl
or
push
push
push
call
add
push
call
mov
and
or
je
cmp
je
add
addl
sub
lea
mov
mov
add
and
add
push
push
push
push
call
add
inc
push
push
push
push
call
add
mov
cmp
je
cmp
jne
or
test
je
mov
cmp
je
mov
and
add
add
or
sub
sub
xor
mov
mov
sub
add
cmp
jne
or
add
mov
mov
and
sub
and
add
sub
add
and
or
and
sub
add
or
add
and
cmp
jne
sub
mov
mov
and
cmp
jne
add
cmp
je
add
cmp
je
mov
cmp
je
or
cmp
jne
test
jne
and
and
sub
and
and
add
sub
or
test
jne
mov
cmp
je
add
cmp
je
mov
add
mov
add
xor
cmp
jne
mov
or
mov
mov
cmp
je
mov
mov
cmp
je
cmp
jne
mov
add
add
sub
cmp
je
mov
mov
mov
cmp
jne
cmp
jne
xor
xor
sub
add
add
xor
sub
add
sub
add
push
call
add
mov
push
push
push
call
add
push
push
call
add
mov
cmp
jne
mov
mov
cmp
je
cmp
je
sub
xor
test
je
mov
mov
or
or
test
jne
cmp
jne
or
mov
sub
add
add
sub
sub
mov
mov
mov
add
or
sub
and
add
sub
mov
add
sub
push
push
push
call
add
push
push
call
add
push
push
push
call
add
add
push
call
add
sub
add
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
pop
push
push
push
call
add
pop
push
push
push
call
add
push
call
add
pop
call
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
call
add
call
push
mov
push
push
call
add
push
test
jne
cmp
je
mov
push
mov
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
mov
mov
mov
cmp
je
xor
cmpl
je
mov
test
je
mov
sub
mov
cmp
jne
test
jne
and
mov
cmp
jne
sub
cmp
jne
test
jne
mov
xor
xor
add
add
sub
test
je
add
or
mov
cmp
jne
cmp
je
mov
sub
mov
sub
sub
add
and
decl
cmp
jne
cmp
je
mov
xor
or
sub
cmp
je
mov
addl
mov
xor
sub
add
or
cmp
je
cmp
je
add
mov
xor
or
add
mov
mov
add
sub
sub
and
cmp
je
mov
add
add
xor
sub
cmp
je
mov
sub
mov
sub
sub
sub
and
cmp
je
add
subl
add
sub
rorl
add
add
cmp
jne
add
add
add
jmp
push
push
call
add
xor
push
call
add
call
push
push
push
push
call
add
pop
push
push
push
call
add
pop
add
or
push
push
push
push
push
call
add
pop
push
push
call
add
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
call
add
push
push
push
push
call
add
push
mov
call
push
push
push
push
call
add
call
push
push
call
add
push
push
push
push
push
call
add
or
mov
cmp
jne
mov
and
sub
add
push
push
push
push
push
push
call
add
push
push
push
push
call
add
mov
push
push
push
push
push
call
add
add
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
push
mov
add
push
push
push
push
push
call
add
push
mov
add
xor
add
call
or
push
push
push
push
push
call
add
sub
cmp
jne
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
mov
call
push
push
push
push
push
call
add
mov
push
push
push
push
push
call
add
push
call
add
call
push
push
push
push
push
call
add
push
push
push
call
add
push
call
add
push
push
call
add
push
push
push
push
call
add
call
add
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
call
add
add
push
push
call
add
push
call
add
push
push
call
add
test
jne
test
je
add
push
push
push
push
call
add
mov
add
mov
add
sub
mov
sub
sub
cmp
jne
mov
cmp
jne
mov
mov
cmp
jne
cmp
je
sub
mov
sub
mov
sub
or
add
sub
sub
sub
xor
call
mov
mov
push
call
add
movl
mov
push
push
push
push
call
add
push
push
push
call
add
mov
mov
push
push
push
push
push
call
add
and
call
call
mov
and
mov
mov
add
add
sub
sub
or
mov
mov
mov
sub
sub
xor
sub
test
jne
add
test
jne
sub
add
mov
sub
add
mov
and
sub
cmp
jne
mov
sub
test
jne
add
add
mov
mov
mov
add
mov
add
add
add
add
cmp
je
test
jne
mov
and
sub
or
xor
cmp
je
sub
mov
add
sub
mov
sub
sub
cmp
jne
or
or
je
and
sub
mov
add
add
add
add
repnz
push
push
push
push
call
add
mov
add
call
push
call
add
add
push
push
push
push
call
add
or
push
push
push
push
push
call
add
push
call
add
call
call
push
call
add
push
push
push
call
add
push
push
push
push
call
add
mov
push
call
add
push
call
add
push
push
push
call
add
call
call
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
push
call
add
push
push
push
push
push
call
add
test
je
add
add
mov
test
je
push
push
push
push
push
call
add
call
push
push
push
push
push
call
add
and
mov
push
push
push
push
push
call
add
mov
cmp
jne
mov
mov
push
push
push
push
call
add
sub
addl
add
cmp
je
sub
call
push
push
push
call
add
push
push
push
push
call
add
push
push
call
add
sub
mov
mov
push
push
push
push
push
call
add
push
push
push
call
add
call
push
push
push
push
push
call
add
call
push
push
push
push
push
call
add
test
je
mov
sub
xor
push
push
call
add
push
push
push
push
push
call
add
add
push
push
push
push
call
add
test
je
mov
push
call
add
cmp
jne
cmp
jne
mov
or
push
call
add
call
jmp
call
add
sub
push
call
add
mov
sub
xor
mov
sub
mov
sub
pop
mov
test
je
sub
pop
mov
mov
cmp
je
cmp
jne
xor
cmp
jne
mov
mov
sub
cmp
je
sub
mov
cmp
jne
test
jne
cmp
je
cmp
jne
or
sub
pop
mov
cmp
je
mov
test
je
or
sub
test
jne
cmp
jne
sub
sub
and
add
sub
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
mov
mov
add
and
add
mov
sub
add
push
add
push
add
mov
or
sub
mov
add
sub
test
je
mov
or
mov
sub
cmp
jne
mov
mov
add
sub
sub
or
cmp
jne
mov
xor
and
sub
mov
xor
or
add
push
add
mov
cmp
je
mov
sub
mov
sub
or
and
test
je
add
mov
add
mov
add
cmp
je
test
je
add
mov
sub
sub
or
add
mov
add
pop
sub
test
je
mov
sub
test
jne
mov
cmp
jne
sub
mov
cmp
je
mov
add
sub
mov
sub
and
sub
add
cmp
je
or
and
or
pop
cmp
jne
mov
mov
sub
add
test
jne
mov
mov
test
jne
mov
and
mov
and
and
and
add
add
sub
pop
sub
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
mov
push
add
xor
add
mov
add
test
jne
cmp
je
and
add
cmp
je
cmp
jne
sub
cmp
je
sub
test
jne
and
push
sub
mov
add
sub
push
mov
cmp
je
and
mov
add
add
sub
test
je
cmp
jne
mov
sub
add
sub
cmp
je
cmp
je
mov
sub
mov
add
cmp
je
mov
sub
sub
mov
add
cmp
jne
mov
add
cmp
je
sub
mov
add
xor
add
sub
cmp
je
sub
add
mov
mov
sub
or
cmp
jne
sub
add
mov
mov
mov
sub
add
add
cmp
je
mov
mov
add
cmp
je
sub
sub
cmp
je
and
xor
mov
cmp
je
sub
add
mov
mov
test
jne
mov
mov
add
or
sub
add
add
sub
pop
add
pop
mov
mov
sub
cmp
je
mov
sub
mov
cmp
je
add
mov
mov
sub
sub
sub
or
or
sub
pop
add
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
xor
mov
sub
mov
push
mov
mov
add
add
mov
mov
add
sub
sub
push
mov
xor
cmp
jne
mov
xor
cmp
je
or
mov
mov
add
sub
cmp
jne
mov
mov
and
cmp
jne
mov
mov
mov
sub
sub
sub
add
mov
push
add
sub
add
cmp
jne
mov
add
and
cmp
je
xor
mov
and
add
sub
sub
mov
or
pop
cmp
je
sub
pop
xor
pop
mov
and
mov
add
add
xor
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
xor
mov
add
mov
push
sub
push
mov
mov
add
sub
and
cmp
jne
sub
push
cmp
jne
xor
add
add
cmp
jne
add
mov
cmp
je
or
cmp
je
add
mov
mov
add
sub
add
sub
mov
mov
add
mov
pop
and
add
pop
mov
sub
mov
xor
add
sub
add
sub
pop
mov
add
or
sub
leave
ret
add
add
add
add
add
add
add
add
add
add
add
