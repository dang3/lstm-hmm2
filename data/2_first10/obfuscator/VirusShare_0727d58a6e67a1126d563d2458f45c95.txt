ljmp
call
in
add
add
imul
cmp
add
add
sub
cmp
cmp
add
mov
ljmp
rolb
cmp
cmp
sub
cmp
imul
sbb
push
sbb
imul
cmp
sub
adc
movl
cmp
in
incl
repnz
add
imul
push
sbb
sub
in
mov
rclb
movb
sbb
jae
filds
pop
mov
add
movb
jbe
lret
push
ret
lock
stc
adc
ret
jg
outsl
out
sbb
adc
add
clc
sbb
mov
or
roll
sbb
and
xor
mov
mov
imul
clc
sub
mov
sub
mov
mov
out
int
sbb
fidivs
adc
lock
sub
add
or
fidivs
ret
or
cld
sbb
mov
mov
fcomi
add
cli
push
fs
movzbl
pop
mov
fnstsw
add
mov
and
mov
mov
leave
sub
mov
mov
jnp
jle
add
mov
adc
test
je
jo
sub
idivb
or
fsin
or
scas
enter
fsubrl
jnp
jge
add
xchg
pop
add
sbb
mov
mov
in
or
ret
out
adc
cmp
and
mov
insb
fldt
rclb
pop
clc
adc
cmp
insl
xchg
adc
icebp
mov
sbb
fs
insb
in
loope
fdivrl
rol
add
pop
ljmp
idivb
jnp
cmp
stos
sbb
and
jo
sbb
sub
mov
lods
divb
xor
mov
rol
out
adc
sbb
or
mov
sub
ret
adc
or
add
pop
sbb
imul
out
imul
incl
test
lret
mov
out
outsb
fcomi
out
adc
sbb
movsl
cmp
imul
or
sarb
or
pop
push
or
or
mov
clc
sarb
xchg
jg
int3
lock
push
mov
sub
loope
outsl
fistpl
push
pop
push
jnp
xchg
pop
sub
imul
fiadds
jne
lret
mov
sbb
xor
ret
adc
enter
mov
jmp
sbb
adc
sbb
add
jb
adc
insl
sub
or
jno
pop
lods
xor
or
pop
js
add
bound
imul
and
add
mov
rcrb
into
sub
in
sbb
fstp
aaa
cs
inc
rcrb
mov
jle
push
fidivl
insb
push
add
call
repnz
push
jmp
mov
or
pop
inc
popf
call
test
pop
imul
filds
imul
inc
mov
pop
test
mov
pop
in
adc
xlat
into
add
inc
add
stc
pop
sub
loop
cltd
cmp
push
cmp
push
sti
add
mov
jmp
mov
insl
fcomi
pop
push
cmp
sub
add
out
in
push
cmp
rorl
insl
mov
fimull
popf
adc
lods
mov
mov
in
pop
add
div
jo
dec
enter
and
mov
xor
call
mov
inc
lock
fdivrl
sub
mov
ret
xchg
add
mov
jle
jmp
fcompl
dec
xlat
rorl
push
push
xchg
mov
or
inc
loope
mov
add
sahf
jmp
add
cs
jo
sbb
xlat
xchg
outsb
cmpsb
iret
cmp
or
adc
pushaw
jns
sub
adc
test
mov
jmp
adc
adc
or
bound
push
sarb
inc
pop
push
inc
adc
call
mov
fwait
shl
or
idivl
pop
add
mov
adc
enter
mov
out
mov
xlat
pop
adc
pop
aas
xor
cmp
roll
xor
ret
idiv
push
sti
adc
int3
inc
lods
mov
or
jae
jae
mov
ds
or
mov
cmp
and
xchg
and
shl
std
mov
or
sbb
add
jl
xchg
cli
mov
xlat
mov
sahf
hlt
xchg
pusha
xor
xor
xchg
aas
add
in
jbe
cmp
add
or
mov
mov
push
fisubl
cwtl
sbb
push
adc
and
in
sub
mov
or
nop
push
cld
data16
xor
fcomps
sub
or
loopne
outsb
and
adc
push
and
orl
in
or
dec
fwait
sbb
ret
outsb
mov
das
sbb
mov
mov
jnp
push
or
sbb
aam
push
jb
cli
sbb
mov
push
mov
jecxz
out
sub
mov
push
pop
mov
pop
js
incb
mov
iret
icebp
aam
dec
push
lcall
mov
jge
xabort
push
or
rcll
shrl
hlt
loope
outsb
sub
xchg
lahf
jl
push
xchg
lods
lods
adc
cmp
push
cwtl
cmc
mov
es
adc
sub
dec
add
xchg
or
push
sbb
and
call
mov
sbb
xor
or
mov
insb
imul
stc
and
cmpsl
in
leave
adc
xor
inc
lret
pop
in
inc
pminub
fwait
lock
push
fadds
clc
add
sarl
addr16
mov
jne
inc
xchg
ret
bound
jbe
jb
and
sub
jmp
jne
adc
xchg
idiv
xchg
push
mov
fmuls
aaa
sub
mov
cwtl
inc
shll
dec
into
inc
mov
or
rorl
icebp
icebp
leave
cmpsb
stc
pop
into
mov
pop
sbb
test
ficoml
lret
and
out
outsb
mov
rcll
mov
rclb
jns
cmp
imul
call
cwtl
ret
lret
mov
fmuls
pop
fsubrl
push
mov
cltd
je
inc
push
push
mov
rorb
sub
rcrl
fsubs
cltd
xchg
ljmp
inc
inc
mov
mov
rorl
pop
test
ja
add
mov
or
or
hlt
test
lods
mov
push
pop
mov
dec
xchg
cmpsb
cmp
js
add
xor
shlb
cmp
outsb
mov
sub
test
or
mov
or
add
mov
jmp
pop
mov
mov
mov
jp
js
adc
fistl
sbb
icebp
rolb
add
push
into
add
xor
scas
add
rcl
xor
or
add
imul
dec
test
mov
or
push
out
fstpt
xchg
jae
and
pop
out
sti
subl
rorb
lods
shl
jmp
imul
ret
jge
iret
add
pop
lret
in
sub
test
mov
sbb
adc
mov
or
in
push
stc
adc
dec
dec
int
pop
leave
cmpb
or
mov
xchg
add
std
loopne
xlat
push
mov
or
mov
xlat
push
jge
jae
mov
pop
rorl
or
inc
jmp
lock
std
ret
or
jle
mov
sbb
adc
into
or
dec
push
out
neg
sub
rcrb
or
sub
sbb
and
dec
lods
mov
sbb
push
nop
pop
movb
add
sbb
icebp
sbb
xchg
int3
mulb
mov
lock
jno
inc
add
and
das
sbb
xor
xchg
in
xchg
repz
movsl
movzwl
dec
test
mov
andl
mov
aad
cmp
out
dec
insb
mov
in
lods
mov
lock
rcl
sbb
icebp
adc
lock
mov
cli
addr16
sub
cmp
or
sarl
scas
pop
dec
rcrb
pop
mov
mov
shrb
mov
shrl
dec
sub
scas
and
mov
roll
pop
jg
mov
rol
push
jb
pop
adc
mov
pop
lahf
mov
inc
mov
fwait
mov
jmp
push
adc
pop
dec
lds
inc
into
mov
sysenter
shlb
clc
or
aad
sub
div
mov
pop
aad
out
push
insb
push
sbb
push
sbb
sub
loope
mov
mov
mov
test
mov
pop
test
rolb
loop
adc
sbb
push
add
rcr
loopne
xor
push
into
xorl
sbb
ret
mov
pop
push
jecxz
add
rolb
call
insb
adc
pop
aad
jo
insb
inc
add
ret
xchg
gs
stos
cmp
add
and
xchg
outsl
jecxz
sbb
fadd
daa
sar
loopne
rcrl
push
mov
fs
sub
sbb
shrb
jb
sub
dec
fstps
imul
test
js
xor
movsb
sbb
outsl
jg
pop
or
mov
xor
cmp
dec
jg
int
jnp
insb
call
add
sbb
or
or
pop
add
mov
and
xchg
sbbl
jo
xchg
cwtl
mov
xor
cwtl
into
inc
movl
adc
adc
adc
popa
push
pop
mov
push
inc
push
cld
push
dec
nop
mov
outsb
or
xchg
sahf
add
mov
or
or
jl
mov
bound
mov
fwait
xor
mov
shl
pop
int3
cmp
sub
dec
in
mov
rcrb
cmp
dec
gs
cmpsb
cmp
adc
push
jne
mov
or
rol
and
cwtl
xor
insl
jb
inc
push
das
ljmp
xchg
repnz
mov
mov
add
mov
into
js
push
push
pop
fsubr
push
aas
push
push
sbb
addr16
pop
pop
ret
rcr
insl
cs
or
or
mov
stc
ret
push
clc
pop
sub
xor
int
icebp
mov
mov
add
mov
loopne
or
ret
xchg
mov
or
dec
popf
cmp
add
cltd
dec
decb
push
adc
ljmp
mov
xchg
leave
push
push
push
push
push
mov
inc
xchg
push
out
add
and
add
clc
push
xor
sbb
clc
push
stos
in
jnp
mov
jl
push
rorb
adc
scas
add
pop
mov
xor
or
add
sub
sbb
add
aaa
inc
shll
or
and
push
mov
jo
test
pop
push
js
addl
jmp
int
cmp
call
int3
rcrl
lock
sub
daa
push
sbb
ret
jo
mov
add
or
cli
xchg
mov
iret
cli
inc
ret
add
addl
pop
jge
push
adc
xor
sub
mov
addr16
rcl
add
addb
neg
in
mov
push
dec
push
inc
cmpl
pop
or
dec
sub
sub
rcrb
cmc
mov
shrb
sbb
add
stc
fcoms
and
loopne
mov
rorl
sbb
mov
jbe
mov
lcall
test
or
or
pop
cmpsb
mov
sbb
fstpt
inc
jbe
push
sarb
or
shrl
shr
sbb
push
or
sahf
ljmp
or
repnz
add
pop
mov
cwtl
ds
imul
ljmp
hlt
lret
pop
cli
imul
add
ja
cmc
push
and
ds
mov
sbb
cmp
fwait
and
aad
pop
std
leave
inc
mov
sbb
dec
pop
xor
in
add
iret
fisubrl
cwtl
mov
ljmp
outsb
cmp
stos
cs
or
ds
enter
rcll
dec
pusha
sahf
push
mov
in
sub
aam
xor
clc
push
icebp
ret
mov
mov
mov
fs
and
mov
loope
sbb
mov
xor
sbb
fadd
out
cmp
shld
les
push
or
cmp
jmp
shlb
gs
shl
imul
push
push
dec
les
and
in
add
mov
or
movsl
mov
icebp
push
out
push
xor
out
cld
pop
and
cld
add
movzbl
mov
test
push
sub
jbe
shrl
mov
loop
add
adc
pop
int
pop
jl
cmp
add
je
loopne
sbb
lcall
nop
ret
adc
cli
arpl
mov
rol
ficoml
mov
rcrl
popf
gs
jp
imul
adc
inc
scas
negb
vmovups
pop
test
enter
js
sbb
mov
mov
adc
sub
dec
daa
xor
daa
into
cmpsl
icebp
mov
fisubrl
dec
cltd
call
add
push
xor
aam
xchg
lds
jne
sbb
xorl
pop
pushf
cmp
icebp
sarb
call
out
orl
nop
mov
aaa
add
cmpsb
sbb
iret
repz
out
out
lahf
sbb
cld
rcll
test
enter
adc
lock
push
or
cmp
sbb
push
mov
sbb
es
mov
add
jl
or
inc
repnz
ds
xchg
adc
add
jp
imul
push
enter
pop
add
pop
loope
int3
push
test
lods
inc
pusha
jae
loopne
mov
pop
loopne
test
inc
xchg
push
adc
jno
pop
hlt
jp
test
push
xor
jns
adc
pusha
sub
in
add
push
test
scas
add
or
mov
xchg
mov
mov
test
cli
pop
or
cli
xchg
outsb
les
adc
xchg
nop
aam
pop
icebp
xchg
ret
ror
pop
mov
adc
mov
stos
fisttpll
sbb
pusha
pop
inc
or
xor
jl
loope
fucomip
roll
shrl
cmp
mov
mov
fstl
pop
sub
add
adc
lea
and
ljmp
push
add
into
outsl
ljmp
pop
sbb
adc
icebp
punpckhbw
enter
adcb
les
rolb
push
cli
mov
out
xchg
loop
arpl
pop
or
or
mov
sub
mov
stc
or
test
jno
lds
add
or
mov
aaa
int
mov
ljmp
xchg
imul
in
push
or
daa
adc
push
das
in
cltd
xor
ud1
test
cmp
mov
xchg
mov
js
push
sbb
pop
popa
cwtl
insb
imul
scas
adc
xchg
push
mov
push
loope
mov
sarl
dec
push
sbb
out
or
outsb
and
mov
jb
sbb
loop
sbb
xchg
adc
test
push
jo
sarl
aas
or
sbb
or
mov
in
xor
xorb
xor
test
inc
leave
loopne
and
xor
out
stos
adc
dec
sbb
aam
inc
push
ljmp
jge
inc
repnz
push
pushf
test
cmpsb
mov
int
add
sub
test
orb
lea
js
add
push
mov
sub
sti
stos
orb
insb
xor
cmp
test
adc
nop
and
add
movsb
pop
shll
add
add
bound
jmp
neg
adc
lret
push
aad
inc
adc
loopne
or
dec
add
push
jno
and
pavgb
insl
jp
fisttps
dec
push
cld
dec
sbb
adc
rorb
push
cmp
mov
xchg
jmp
hlt
mov
nop
cmpsl
rclb
push
xorl
push
inc
mov
xchg
mov
mov
jbe
push
clc
sbb
popa
test
rcl
push
xor
sbb
pop
icebp
sub
adc
fldl2t
and
and
xchg
sbb
pop
icebp
sbb
sbb
inc
jbe
ret
push
movb
jge
adc
adc
fcmovnb
push
mov
lods
sbb
push
sub
inc
leave
pop
sbb
push
push
mov
mov
mov
cmp
xor
adc
mov
adc
into
cmp
mov
lcall
es
test
sbb
cmp
subb
loopne
test
mov
fidivl
jmp
adc
or
clc
pop
dec
sbb
rclb
es
andl
push
adc
outsb
rclb
ljmp
add
inc
sub
out
add
adc
ret
into
test
out
test
xchg
bound
and
sbb
lcall
dec
inc
aas
sbb
jl
xchg
sub
in
inc
pop
scas
pop
ja
mov
es
ljmp
cld
or
clc
negl
outsl
sub
or
cmp
add
push
pop
lods
mov
lea
arpl
pop
mov
clc
or
je
add
push
sbb
pop
lods
lcall
push
aam
stc
pop
jb
mov
dec
es
and
dec
shll
push
sub
popf
mov
push
cmp
jbe
mov
popa
or
sub
in
mov
mov
push
fxch
lret
adc
clc
push
js
fs
jmp
addb
roll
pop
je
xor
mov
jo
push
dec
push
add
cli
andb
sbbl
je
adc
inc
ret
push
cmp
adc
sbb
xor
sub
jns
push
sub
lods
and
fdivrp
sti
enter
xchg
pop
jmp
cmp
dec
inc
inc
and
stos
pop
sbb
mov
mov
xchg
sub
pop
jmp
icebp
inc
addr16
jae
xchg
jmp
push
or
rcrb
leave
dec
or
ljmp
outsb
cmpb
sub
shlb
je
cmpxchg
xor
mov
pop
arpl
mov
aad
mov
add
rcrl
popf
push
mov
xor
aam
sbb
sbb
cmpsb
fs
mov
addb
adc
push
push
jmp
pop
and
adc
xlat
rcll
int3
rolb
push
cs
sub
pusha
xlat
lods
insb
notl
mov
or
and
or
cmp
std
or
push
jnp
les
ret
xor
and
movsb
or
mov
test
sub
mov
push
xor
shlb
inc
inc
cmp
xor
pop
jle
lcall
adc
je
notb
mov
shl
out
add
and
xchg
mov
divb
xchg
inc
xchg
ss
mov
shll
mov
fisubrs
push
sbb
mov
xchg
xchg
pop
mov
sbb
inc
cmp
in
aad
sbbb
pop
cli
add
and
mov
push
mov
inc
das
xchg
sbb
xchg
xor
xor
push
add
xor
dec
popf
or
cmpsl
ret
push
xor
decl
jecxz
test
into
loop
push
push
or
mov
ds
add
fistps
inc
lock
mov
push
cltd
sub
cli
push
movsl
xchg
shlb
mov
test
add
jle
lcall
lods
enter
jne
jmp
mov
adc
push
push
cld
push
addl
mov
dec
jne
sbb
sbb
push
and
cwtl
adc
dec
mov
add
arpl
add
outsb
push
dec
xchg
lret
orl
mov
inc
cmp
test
loopne
enter
inc
inc
xchg
mov
jne
mov
sub
or
xchg
aaa
xchg
push
and
mov
dec
or
and
sbb
dec
sbb
pop
rcr
rolb
xor
outsb
sub
xchg
scas
lea
lret
push
jo
pop
sbb
lock
push
ret
push
or
lahf
lods
sbb
xchg
stos
push
or
test
mov
pop
xor
push
aam
mov
jns
lods
adc
xor
xor
aaa
mov
sarb
lret
add
pop
and
cmp
mov
sub
aad
aad
or
or
push
mov
stos
sbb
out
es
and
bound
dec
push
fisubrl
add
pop
sub
icebp
cmp
movsl
add
mov
fadds
in
push
iret
push
mov
cmc
adc
loop
mov
inc
outsb
aad
or
test
xchg
push
in
xor
outsl
adc
movsl
push
dec
int3
notl
lea
xchg
sbb
push
mov
jg
or
xor
adc
sub
jecxz
cmpsb
adc
push
inc
add
sbb
pop
sbb
sub
mov
dec
inc
sar
adc
sbb
data16
es
into
jae
enter
xor
enter
mov
add
adc
mov
int
mov
jns
cld
jmp
imul
cltd
into
ss
add
mov
pop
jae
push
iret
push
or
mov
popa
sbb
jo
aad
or
mov
loopne
add
addb
dec
call
xor
push
pop
sub
mov
inc
lret
test
add
addr16
adc
add
aad
int
pop
push
dec
std
push
mov
pop
fprem1
js
and
flds
enter
sbb
sbb
jb
push
repz
shr
lds
ret
adc
mov
sbb
mov
pop
sbb
inc
and
xlat
adc
jmp
mov
push
push
push
xchg
mov
outsb
mov
mov
or
cmp
sti
mov
and
or
inc
cmp
arpl
fchs
add
je
sbb
test
push
mov
pop
dec
sbbl
inc
xorb
jo
jle
jl
jge
xor
pop
pop
adc
xor
lahf
xor
rclb
add
ljmp
lret
out
incb
es
into
jo
sbb
cmp
inc
les
adc
test
and
sbb
push
mov
mov
pop
inc
mov
je
lret
lock
sbb
jb
inc
xchg
add
cmpb
xchg
loope
adc
push
fcoms
cmp
mov
mov
out
or
sahf
push
push
xor
js
push
cmc
mov
pop
cmp
rcrb
shll
sub
int3
out
sbb
mov
jmp
enter
mov
cmp
lret
nop
jae
xor
dec
cmp
or
add
fwait
sub
sbb
sbb
push
call
sti
ljmp
pop
or
insb
rorl
mov
mov
or
or
cmpsb
jno
mov
lahf
das
mov
rol
scas
jo
xchg
dec
cwtl
push
movsb
pop
aad
or
push
popa
rorb
sub
out
push
cmpsl
fcom
ret
aaa
cltd
call
jg
test
std
dec
sbb
adc
pusha
shrl
or
mov
adc
adc
lea
rcll
push
mov
xchg
cmp
adc
dec
and
jb
jb
leave
mov
mov
shll
or
pop
push
adc
inc
outsl
push
and
leave
outsl
pushf
out
inc
or
dec
clc
lret
sbb
add
push
test
negl
das
push
fisttps
cmpsb
xchg
mov
xchg
shlb
addb
add
push
scas
sbb
out
push
popf
negl
aam
cmpb
scas
jmp
jmp
popa
push
mov
in
cmp
and
dec
hlt
xor
mov
or
and
sar
add
daa
fisubrl
cmp
movsl
push
add
xor
add
sbb
or
test
add
test
mov
enter
add
mov
mov
push
xchg
adc
punpcklbw
mov
mov
xchg
enter
dec
sbb
sbb
or
adc
rorb
imul
or
test
addb
sarl
xchg
arpl
or
jbe
push
sub
adc
add
or
jbe
iret
mov
and
cwtl
int
dec
out
xchg
pop
jne
xor
or
ss
jmp
leave
pop
fimull
rcrb
push
jl
push
pop
cmp
or
stc
sbb
jo
push
sub
inc
scas
pop
cmpb
add
mov
pop
dec
push
cld
adc
mov
rcll
bound
roll
push
pushf
fstps
jecxz
adc
int
mov
jo
jo
pop
and
add
xlat
loopne
shll
rcrl
js
jnp
jle
xor
xor
lahf
fs
cmp
lock
gs
pop
cmpsl
adc
jl
movl
sbb
pop
inc
inc
jecxz
add
xor
ret
xchg
or
mov
jge
orb
sub
pop
test
mov
or
adcb
and
cmp
push
mov
stos
inc
jge
jns
inc
sub
movl
call
push
ds
pop
das
inc
loopne
jp
push
sbb
in
sub
or
cmp
pushf
adc
sbb
and
out
popa
push
popf
jecxz
pop
or
adc
jae
popa
and
xchg
dec
ficompl
push
cmp
js
lods
push
adc
orb
pop
ds
add
push
dec
adc
aad
mov
mov
jle
and
sbb
fldl
xor
push
sbb
pusha
inc
das
rolb
push
jo
sbb
stos
int
lea
add
or
xor
insb
pop
dec
mov
push
lret
ds
xchg
aad
or
cld
and
adc
dec
sub
mov
jmp
push
mov
mov
mov
adc
fstpt
dec
enter
popa
adc
inc
jno
dec
jge
leave
dec
mov
icebp
pop
xorl
cs
and
mov
rolb
mov
insb
repnz
fstpt
mov
cmpsb
aam
mov
sbb
mov
xor
orl
pop
mov
fimuls
cmp
sub
nop
xchg
addb
jnp
in
cld
dec
inc
inc
stos
clc
sbb
mov
scas
cmc
mov
andl
lock
dec
filds
dec
outsl
test
jge
push
daa
scas
or
sbb
inc
sbb
leave
inc
dec
or
pop
dec
bound
mov
push
addr16
push
mov
inc
scas
test
adc
stos
in
lock
push
inc
stos
adc
movb
cld
flds
stos
and
push
cmp
jle
addb
aam
push
lea
aad
sbb
aaa
or
pusha
sbb
dec
lds
inc
test
movsl
testb
enter
mov
dec
movsb
mov
mov
or
push
aas
sbb
cmp
adc
shll
jae
push
sub
sbb
cmc
mov
inc
cs
xchg
shll
shll
add
imul
sbb
push
mov
xlat
scas
ljmp
cmp
mov
sarl
xchg
xor
adc
leave
and
sub
sbb
rcrb
jnp
mov
lods
push
mov
inc
jp
jo
push
ror
jbe
pcmpgtb
push
mov
enter
cld
loop
ja
mov
push
fildl
pop
add
sub
aad
mov
lret
inc
sub
inc
cmp
and
icebp
and
rcrl
pushf
loop
shll
xor
out
sbb
incl
xchg
or
cmp
in
icebp
xor
repnz
cmp
add
or
movsb
pop
popf
jo
mov
or
and
nop
and
mov
adc
shlb
or
out
and
jo
pop
xor
dec
push
sbb
add
in
jb
ja
xchg
pop
repz
repz
js
cmp
push
clc
dec
clc
cmp
scas
sarl
jecxz
mov
add
leave
inc
sbbb
js
mov
or
inc
and
dec
pop
mov
enter
sbb
push
xchg
or
test
push
cwtl
lock
mov
push
je
stos
sbb
repnz
and
cli
or
or
scas
imul
add
mov
popa
rolb
dec
xor
add
mov
aaa
xchg
inc
loopne
cmpsb
xchg
adc
dec
ret
mov
inc
push
push
mov
cltd
out
popa
sub
mov
mov
or
inc
or
sbb
mov
sarl
push
rolb
lret
sbb
mov
nop
xchg
xor
pop
rcrb
add
rclb
jae
and
rclb
add
adc
mov
mov
cmpsl
adc
jo
shrb
int3
push
or
test
adc
outsb
cmp
ds
push
inc
dec
push
cli
test
repnz
and
aad
or
and
mov
push
arpl
cmp
flds
jo
clc
lods
lret
nop
mov
mov
sbb
rcrb
scas
and
mov
clc
adc
pop
xchg
stos
stos
push
sbb
enter
xchg
orb
inc
sub
or
add
push
test
mov
jo
inc
cmpsb
jb
idivl
add
sbb
cmp
fld
mov
sarb
mov
mov
ret
daa
add
push
testb
or
push
mov
or
mov
clc
or
add
loope
adc
mov
loopne
inc
push
push
cmc
rorl
rcll
mov
fisubrl
popf
ljmp
sbb
jle
or
mov
repnz
cmp
mov
lret
ja
and
or
imul
shlb
add
push
push
and
sub
sbb
push
xchg
pop
xchg
je
mov
scas
aad
and
push
xlat
cmc
bt
testb
scas
and
jb
les
inc
jnp
mov
dec
shlb
lods
or
lock
sbb
xor
or
rorl
or
inc
rcr
add
mov
adc
int3
ret
sbb
negl
jl
pop
mov
leave
sti
adc
rorb
adc
dec
jo
les
outsl
lret
daa
cli
cmpsb
ret
rcll
push
push
and
scas
fwait
add
adc
mov
mov
mov
or
jbe
subl
pop
ljmp
sub
sbb
dec
cmp
outsl
adc
ftst
dec
push
and
dec
ret
mov
sub
xlat
inc
inc
sbb
es
inc
loopne
lret
inc
jno
xor
sbbb
xor
mov
jbe
and
rorb
or
sbb
add
dec
mov
cmp
repnz
push
pop
or
or
mov
add
mov
dec
sbb
dec
repnz
xchg
cld
adc
iret
push
lret
or
addr16
scas
push
sbb
pop
aas
mov
les
cs
orb
rorb
in
test
pop
cmpsb
inc
popf
bound
cmpsb
push
shll
adc
test
adc
ret
xor
xchg
pop
mov
sbbl
pop
fwait
shl
ror
andb
dec
or
add
mov
push
pop
push
rcll
testb
aaa
js
fcompl
jge
inc
fimull
push
pop
xor
ror
mov
add
jp
insb
inc
xchg
roll
loopne
fiaddl
scas
scas
inc
mov
jnp
popf
mov
sbb
sub
aad
test
push
dec
push
mov
rclb
sub
push
mov
iret
xchg
adc
cmc
or
cmp
pop
sub
mov
mov
sbb
lret
adc
ja
cmpsb
imul
mov
test
mov
and
pop
push
test
push
js
sub
sbb
into
sbb
sbb
or
adc
sbb
dec
xor
mov
inc
sub
pop
aam
push
add
add
icebp
jne
mov
jg
sarb
pop
mov
sbb
fcmovnb
push
push
adc
mov
test
xchg
mov
lods
bound
sbb
mov
les
add
cvtpi2ps
pop
call
sub
testb
push
stos
xor
stos
rdtsc
leave
add
push
add
out
mov
nop
mov
sarl
mov
xchg
mov
sub
into
or
adc
ret
pop
add
pop
sbb
ja
add
jo
mov
adc
push
lods
aaa
push
xchg
lret
sbb
and
lcall
push
int3
les
cmpsl
popf
shll
cmpsb
ss
lret
mov
mov
xchg
mov
push
push
push
push
xor
jecxz
push
in
faddl
rclb
mov
xor
jno
mov
cmp
dec
and
rcrb
push
stos
filds
sahf
push
cli
pop
push
clc
push
and
subl
or
add
lret
call
sbb
mov
loopne
and
popa
push
sbb
insl
xor
andl
push
and
mov
or
sbb
add
inc
fcom
movb
cmp
stos
xchg
add
dec
and
sub
xor
inc
sarl
sbb
add
lret
mov
and
ret
sahf
ret
ret
in
push
call
stc
jl
cmp
addb
ds
cmpsl
roll
push
into
popa
mov
cmp
dec
sbbl
data16
push
scas
or
nop
and
push
pop
sbb
aam
adc
adcl
aas
fbld
enter
mov
fstpt
loopne
movnti
icebp
loop
push
inc
icebp
popa
mov
xor
jbe
or
stos
shrb
lcall
pop
jne
push
movsb
sbb
leave
and
shll
inc
and
out
pop
sbb
and
and
push
shlb
out
push
or
pop
inc
movsb
mov
popf
jmp
in
adc
cmpsb
cmp
sub
fstpt
sti
xchg
rclb
orb
mov
mov
pushf
jo
inc
cmp
sub
xor
pop
pop
inc
sbb
fcmovne
sbb
movl
jb
cwtl
mov
sbbl
ret
loope
adc
mov
mov
imul
push
jae,pn
aad
lahf
lds
jecxz
sub
js
in
inc
add
xchg
ljmp
pop
push
in
jmp
xchg
adcb
leave
push
pop
ljmp
adc
push
jo
inc
ret
cmp
cmpsb
dec
xor
xor
cmp
repnz
or
push
push
loopne
leave
add
pop
imul
in
and
and
inc
dec
cli
js
jb
inc
popa
fsts
es
inc
mov
movsb
or
sbb
lds
lcall
mov
xchg
jp
data16
jle
push
pop
inc
mov
add
pusha
stos
jp
aad
cwtl
xor
lret
xor
sub
adc
sbb
mov
imul
pop
insl
inc
and
dec
add
mov
jg
adc
sub
scas
jp
push
lcall
pop
mov
pusha
jo
add
mov
fadd
push
mov
mov
lds
jb
pop
sub
jp
iret
divb
mov
pop
mov
popf
rclb
sub
icebp
lea
cmp
out
add
cmpsb
dec
into
sub
aam
add
or
sbb
mov
and
push
sbb
movl
sbb
daa
ds
das
fsubs
ljmp
pop
ss
sbb
punpckhbw
ja
push
sub
call
pop
icebp
icebp
sbbb
push
push
adc
lods
inc
xor
icebp
cmp
mov
add
mov
cmc
lock
lock
insb
push
loopne
popa
daa
mov
mov
dec
push
dec
jo
sbb
ret
push
scas
data16
inc
sbb
sub
dec
pop
sub
mov
jbe
push
daa
cmp
cmp
iret
xor
mov
push
xchg
cmp
js
cltd
sbb
xor
sub
jge
pop
xor
lods
cmp
push
iret
mov
add
ljmp
push
shrl
and
or
cwtl
leave
inc
andb
test
rcl
jecxz
mov
dec
in
ss
stos
ret
mov
dec
hlt
push
mov
push
and
insb
add
adc
push
sbb
add
jae
and
arpl
ret
cmpsb
xor
dec
mov
stos
and
mov
dec
imul
gs
push
lret
sub
mov
add
ficomps
sbb
lods
adc
repnz
daa
mov
push
repz
mov
push
inc
insb
enter
pop
mov
dec
test
hlt
sbb
adc
cmp
stos
loope
sbb
test
mov
sub
popf
mov
lret
dec
xlat
and
cmp
dec
addl
mov
jb
fs
movsl
rorb
ret
pushf
sub
add
add
rol
adc
xlat
into
inc
sub
add
add
push
or
cli
data16
xchg
mov
test
add
inc
cld
sahf
inc
push
js
mov
add
push
inc
add
daa
mov
lods
pop
les
clc
jne
shr
das
inc
stc
add
pop
add
movsb
call
fisttpl
mov
push
inc
int
mov
or
xor
jb
xchg
jl
test
and
adc
fmull
inc
test
das
rolb
or
ret
push
push
rcll
xor
ret
loope
mov
add
fs
aad
mov
xchg
cmpsl
mov
and
pop
xchg
call
add
psrlq
pop
fs
adc
lods
mov
and
sbb
mov
leave
sbb
sbb
mov
cltd
enter
jo
es
xor
sub
adc
lea
jecxz
dec
leave
mov
fs
push
imul
cwtl
adc
xor
inc
jo
adc
loopne
push
push
pop
dec
rolb
pop
adc
out
sbb
cmpsl
push
sbb
hlt
push
test
addl
mov
push
pop
or
cmp
pusha
rcll
repz
jne
mov
dec
sub
sbb
cmp
add
ret
jmp
sahf
xchg
fldl
or
loopne
icebp
or
pop
cmp
sbb
imul
and
push
mov
and
pusha
movsl
adc
or
ret
and
xchg
dec
sbb
or
out
push
add
cmp
popf
sbb
sub
aad
or
jl
push
adc
out
push
test
push
cmp
add
inc
push
xor
rcll
push
push
xor
test
add
test
jo
fiadds
push
mov
mov
mov
inc
sbb
push
subl
popf
nop
add
repz
divb
sub
mov
shlb
dec
lods
scas
stos
xor
push
sbb
rclb
push
pop
pcmpeqb
xor
scas
inc
xchg
and
inc
fildl
add
lods
push
lahf
ljmp
ret
sbb
mov
or
ds
ja
dec
push
sarl
nop
stos
gs
ret
mov
scas
bnd
pop
add
inc
inc
repnz
and
cmp
inc
or
mov
call
insb
testb
sub
orb
call
adc
xchg
int
stos
pushf
sub
add
lea
notl
jns
insl
pop
inc
loop
cwtl
lock
mov
pusha
inc
sub
mov
mov
xchg
ret
and
repz
sbb
sub
cmp
add
adc
arpl
mov
pop
push
mov
roll
clc
add
imul
repnz
and
add
push
test
xchg
or
cmpsb
xchg
mov
push
or
inc
and
push
jecxz
sbb
xor
pop
sub
pop
stos
inc
push
nop
lods
daa
jmp
adc
cmp
adc
loope
and
inc
testb
faddl
mov
pop
aad
xchg
or
dec
gs
add
mov
fmull
jg
stc
or
aad
shl
into
jmp
xchg
hlt
push
test
inc
lods
cmp
mov
sub
push
inc
orl
daa
dec
adc
or
shrb
int3
sti
adcb
adc
add
and
test
imul
mov
in
push
sub
outsb
call
gs
sbb
add
sbb
jmp
push
push
lock
enter
or
add
and
cmp
dec
cmp
adc
sbb
and
xchg
arpl
mov
ljmp
push
out
pop
mov
mov
sbb
arpl
bound
and
adc
popf
test
push
rcl
test
pop
pop
aam
pop
lods
jo
and
xor
push
std
cmp
add
out
jle
adc
mov
mov
adc
push
rorb
xchg
dec
inc
ja
arpl
mov
adc
movzwl
inc
inc
testb
lahf
insl
push
pop
inc
lock
push
test
cmpsl
sub
sbb
sbb
push
sbb
subb
icebp
jp
adc
or
ljmp
cltd
jp
mov
sub
push
push
and
adc
andb
or
cmp
and
xchg
pop
daa
movsl
stos
sbb
adc
xor
mov
and
call
dec
int
jb
dec
xor
ret
mov
insl
sbb
inc
test
repnz
push
jne
shr
push
fnstcw
les
lock
cmc
scas
popl
call
sub
arpl
jmp
shlb
sub
and
inc
jne
fldl
popa
stos
sub
xor
ss
dec
inc
xor
or
hlt
sbbb
inc
lcall
or
mov
xchg
ret
adc
pop
push
sub
or
ljmp
sub
inc
or
adcb
leave
cmp
in
sub
loope
sti
push
jl
ret
sub
push
bound
and
movsl
sbb
adc
pop
xchg
notb
mov
ret
jmp
sub
push
push
loopne
sbb
add
pop
mov
mov
inc
jno
push
xchg
mov
sbb
pop
lds
pop
pushl
sbb
lods
sbb
jae
inc
test
shlb
push
lods
subb
pop
popa
add
ljmp
push
dec
jne
test
ljmp
ret
mov
les
or
stos
in
add
adc
mov
lea
or
mov
enter
mov
add
mov
in
add
add
mov
stos
sbb
push
push
inc
orl
adc
jno
jae
cltd
pop
nop
push
fst
data16
add
xchg
ljmp
and
inc
pop
ljmp
stos
das
sub
mov
lea
push
add
repnz
ljmp
pushf
mov
add
add
lret
jp
movsl
mov
add
ljmp
subl
test
pop
cmp
and
shlb
and
adc
test
data16
xor
cmp
js
ret
and
cmc
jge
cltd
call
adc
lret
sbb
mov
call
inc
mov
inc
jl
add
pop
or
mov
or
add
scas
int
pop
add
int
adc
pop
xlat
pop
cmp
xchg
test
cmp
mov
shlb
stos
push
adc
add
cwtl
xchg
adc
out
pop
jo
xchg
and
mov
add
test
push
ds
jge
lods
outsl
xchg
rcll
lods
loop
xlat
sbb
inc
shll
test
pop
loopne
out
shr
int3
push
aam
cltd
pop
nop
mov
repnz
ljmp
fs
inc
push
subl
xchg
rolb
push
mov
scas
push
leave
stc
push
lfs
add
loope
sub
add
jmp
inc
dec
add
bound
cmp
add
aad
adc
sti
psubsw
loopne
cmp
sbb
pop
mov
mov
cltd
inc
add
insb
movsl
ljmp
mov
dec
int3
inc
cli
sbb
inc
or
xor
or
mov
sub
dec
les
lods
cmp
daa
sub
mov
jmp
mov
add
in
roll
insb
mov
add
mov
dec
int
loop
and
in
out
push
add
add
test
rorb
xor
push
jle
mov
dec
orb
push
shl
push
pushf
or
and
mov
mov
xchg
jne
push
or
add
aas
add
push
cmp
je
lock
adc
test
sbb
xor
sbb
pop
aad
add
or
cs
repnz
jmp
dec
pop
xor
addb
add
mov
push
int
test
add
arpl
adc
lods
add
sbbb
push
ret
loopne
xchg
in
ljmp
loopne
xorb
in
incb
sbb
scas
xor
mov
fadd
aam
ret
mov
js
mov
imul
push
and
cmp
xor
mov
ret
xor
add
mov
add
pop
xchg
mov
int
repnz
cmc
and
sbb
sbb
push
or
sbb
xchg
aaa
enter
test
adc
addl
xchg
mov
sub
inc
jne
pop
cld
xchg
pop
decl
push
sbb
cmpsb
stc
add
xlat
enter
mov
bound
mov
emms
sarb
add
cmp
push
movsb
jmp
adc
add
into
ljmp
sbb
add
mov
or
or
mov
dec
dec
add
add
mov
push
mov
or
jp
adc
sbb
sub
sbb
dec
mov
andb
and
xor
pop
or
imul
push
icebp
stos
pop
adc
cmp
and
cmpl
mov
lds
mov
mov
stos
pop
cmc
sbb
cmp
mov
pop
add
push
push
or
pop
adc
xor
test
scas
ss
mov
lock
xor
jo
shrd
iret
es
outsb
fistl
inc
mov
add
pop
int3
push
inc
roll
sti
stos
add
notl
mov
mov
sub
adc
push
xor
test
push
adc
stos
lahf
js
mov
dec
das
push
imul
adc
movb
ret
xor
push
or
stos
insb
fwait
pop
lods
ret
jbe
mov
jbe
dec
mov
insl
lds
jg
cmp
rol
insl
add
inc
adc
cs
iret
sbb
adc
push
inc
push
rcl
xor
loope
sahf
into
add
pusha
stos
cmc
sub
bnd
cltd
scas
aaa
adc
mov
xchg
add
xor
dec
add
lods
out
gs
add
jo
or
xor
cmp
je
aaa
cmp
pop
xchg
es
cmp
and
push
cwtl
stos
les
dec
inc
sub
shrb
in
push
mov
loopne
jle
cmp
add
xchg
jp
or
inc
sub
push
lea
jnp
pushf
stos
jo
mov
mov
ljmp
sbb
add
and
cmp
scas
mov
test
arpl
mov
movsb
and
movsb
mov
mov
dec
push
or
test
inc
fdivrp
daa
push
sub
fnstsw
cmp
stos
gs
jne
mov
fwait
mov
imul
loope
adc
push
cmc
mov
scas
call
or
js
sbb
test
push
imul
inc
mov
mov
inc
xor
test
adc
push
andl
test
sti
je
roll
lds
push
mov
sub
push
inc
pop
pop
push
mov
mov
subl
lcall
and
mov
scas
jb
pop
inc
xchg
inc
sbb
rclb
imul
sbb
or
or
add
aam
inc
out
enter
push
push
daa
cmp
mov
mov
sub
push
add
arpl
hlt
or
sbb
sbbb
dec
xlat
inc
pushf
jno
jmp
bound
push
pop
xor
das
pop
push
pop
cmp
out
imul
rorl
sbb
dec
jb
push
push
js
inc
lods
inc
pop
add
push
dec
inc
push
iret
mov
cmpsb
ret
xchg
cmp
jp
xchg
jl
inc
add
ret
and
loopne
stos
cs
mov
jo
stc
sbb
inc
sub
and
mov
fs
xor
mov
out
outsb
pop
in
sbb
adc
sub
jbe
push
pop
cmpsb
xchg
aas
lock
dec
pop
pushf
xor
push
add
jo
mov
shrb
add
repz
xchg
or
pop
mulb
jmp
push
add
in
push
mov
mov
jl
pop
xchg
mov
push
mov
sbb
or
enter
shlb
imull
cmp
mov
push
or
pop
ja
jo
push
or
adc
sub
add
pop
or
sbb
adc
loope
or
push
xor
scas
mov
mov
iret
xchg
or
jmp
test
addr16
cwtl
rcrb
jl
pop
jle
sbb
jge
mov
adc
lods
mov
xor
jl
pop
test
dec
icebp
stos
jle
push
adc
push
cli
loopne
cs
daa
cmp
add
mov
pop
push
and
add
into
jmp
and
mov
mov
stc
cli
sbb
jmp
cmp
pop
ror
int
add
test
aam
sub
xchg
mov
push
mov
shlb
inc
cs
adc
inc
xor
shlb
xor
mov
jbe
sbb
jno
sbb
stos
loope
adcb
leave
fstps
rol
dec
mov
pop
adc
mov
fstps
cmp
lock
sbb
add
ret
dec
les
mov
sbb
or
dec
or
sbb
mov
sub
mov
push
dec
sti
adc
and
xor
lret
lret
outsl
rcrl
xchg
sahf
xor
pop
mov
sub
xchg
mov
shll
and
cmpsl
sbb
pusha
xchg
jo
or
or
lret
test
in
dec
or
inc
mov
jle
stos
pusha
mov
add
lcall
push
or
loope
cmp
add
adc
sbb
xchg
popa
ficoms
mov
xchg
pop
repz
test
mov
fistps
dec
rolb
mov
clc
inc
sbb
icebp
push
pop
in
jecxz
in
int3
add
nop
mov
xor
xchg
sub
add
sbb
shrb
and
mov
inc
testb
pop
or
xchg
gs
mov
inc
adc
adc
mov
sti
addb
push
push
rclb
jae
pop
sbb
insb
add
and
ja
cmpsl
aas
sub
stos
es
sbb
in
test
push
xor
jge
xorl
sbb
sbb
or
xchg
mov
lret
add
cli
dec
jbe,pt
sbb
dec
adc
jle
dec
add
fidivrl
push
imul
dec
mov
adcb
aas
dec
adc
mov
cmp
cmp
or
lock
rcrl
push
clc
add
es
inc
jnp
mov
adc
jmp
push
cmpl
sbb
add
mulb
hlt
flds
adc
incl
dec
adc
or
popa
mov
xor
aad
push
andb
mov
add
pop
rorl
orb
cmp
add
into
aam
add
loopne
cwtl
es
sbb
mov
pop
stos
scas
or
lret
inc
in
dec
sbb
or
fxsave
adc
ss
inc
mov
shlb
daa
adc
lret
mov
and
push
sub
add
jle
stos
push
lds
pop
mov
shll
xchg
jo
or
ret
mov
xor
cli
sub
xchg
jecxz
push
jne
mov
sub
push
add
mov
rolb
add
add
xchg
addl
dec
lock
xor
shlb
int3
dec
shl
push
pop
sub
jmp
das
adcb
jg
scas
jp
sarl
roll
cmpsb
sub
jne
push
adc
inc
push
ja
push
inc
cmp
rorl
mov
push
cmp
cmpsb
or
lock
and
insb
scas
shrb
fs
add
fistl
sub
rcrb
cli
lock
sbb
ljmp
inc
iret
rcrl
sarl
add
adc
xor
cmc
sub
sub
sub
push
shll
roll
pop
fbstp
cld
pop
orb
sar
or
in
stos
and
pf2iw
lock
aad
nop
or
inc
sahf
xchg
dec
add
ljmp
push
stc
rcrl
inc
ljmp
push
fidivl
cmp
test
jo
das
icebp
mov
rol
sbb
leave
std
and
pop
inc
pop
sub
xchg
xchg
and
sub
out
sbb
xor
adc
mov
jae
and
mov
scas
addr16
mov
inc
or
ret
sub
xchg
mov
pop
inc
or
mov
or
into
sti
rcll
outsw
mov
push
cwtl
push
sub
roll
xor
stos
mov
pushf
pop
out
push
lret
sbb
in
movsb
jb
jle
aam
xor
cmpsl
sbb
xor
mov
push
cmp
mov
or
cmpsb
stos
sub
adc
call
inc
add
cmp
les
cld
divb
pop
js
adc
clc
repnz
jle
add
shll
js
mov
dec
cmp
push
mov
ja
adc
mov
in
dec
adc
addb
mov
push
xchg
sbb
xchg
shlb
pop
leave
lret
cmp
testl
fs
stc
sbb
inc
push
cmp
mov
push
in
jo
mov
mov
sub
mov
test
dec
adc
pop
pushl
sub
in
dec
add
xchg
nop
xor
mov
rclb
int
cmp
pop
push
addb
xchg
xchg
pop
mov
dec
cmp
push
shlb
jmp
gs
sbb
add
cmp
jl
clc
stos
inc
in
inc
mov
daa
dec
or
push
lods
sbb
xor
jecxz
add
inc
ret
inc
add
inc
jle
sub
in
sub
rcrb
cmpsb
popa
sahf
jns
ret
cmpsb
push
minps
or
lock
scas
orl
add
dec
out
or
sbb
or
push
and
sbb
jmp
roll
scas
test
push
int
insl
jb
test
xchg
push
mov
leave
in
cmpsl
aam
dec
adc
adc
xchg
cmp
add
popa
sarl
sarl
icebp
sbb
jl
add
lcall
push
pop
movsb
or
push
xchg
cmp
jb
inc
push
push
mov
mov
dec
mov
add
rorb
ret
pusha
or
loopne
mov
insb
mov
pop
or
jnp
loopne
push
test
shrb
mov
pop
cmp
jmp
lods
test
iret
mov
jmp
hlt
ss
and
xor
add
sbb
lcall
jge
imul
jge
mov
movsb
mov
les
ds
push
movsb
dec
cmp
add
and
push
rcr
xchg
addl
mov
sbb
test
int3
fisubrl
and
test
xor
sub
mov
dec
mov
daa
std
mov
addr16
data16
rorb
mov
insb
mov
adc
inc
adc
js
idivl
inc
add
pop
mov
cmpsb
test
sbb
call
popa
ret
mov
push
jne
add
push
lret
rclb
ret
push
loopne
and
mov
mov
loop
incb
dec
and
jb
mov
sti
or
stc
je
lock
jle
jno
js
cltd
test
pushf
mov
mov
inc
aad
or
sahf
mov
ss
loopne
sbb
ljmp
inc
ret
js
stos
adc
sub
or
xor
mov
and
loopne
sbb
jne
test
or
xchg
jnp
bound
adc
add
xchg
outsl
sub
inc
decb
push
xchg
adc
clc
push
ret
mov
inc
btc
push
stos
xchg
jno
pop
popa
push
lcall
sbb
cmp
mov
enter
lea
roll
cmp
cli
mov
push
mov
sbb
jne
les
pop
inc
in
dec
mov
add
pop
addb
sbb
pushf
call
push
xor
xor
xor
dec
or
inc
xchg
ret
jno
mov
int
adc
cli
or
test
push
jg
ret
test
loopne
inc
cmpsb
cmpsb
pop
dec
inc
add
mov
mov
push
inc
cmp
mov
xor
push
sbb
aam
xor
mov
or
and
inc
icebp
mov
fwait
orl
les
jno
ret
rclb
test
sbb
adc
addb
or
mov
pop
xchg
inc
mov
sbb
sbbb
cwtl
pop
adc
and
icebp
test
inc
pop
xor
sti
pushf
adc
adc
arpl
push
sub
or
push
mov
push
xor
movsb
gs
sub
fcomps
mov
dec
add
sbb
nop
aas
adc
js,pt
mov
push
adc
or
lock
insl
movsb
or
clc
addb
xor
leave
mov
sbb
mov
out
xor
pop
int3
jo
push
pop
pop
icebp
lds
pop
lds
add
ds
jl
roll
into
mov
popa
mov
xor
ret
nop
sbb
jo
ret
add
mov
xor
sub
out
sbb
js
jmp
push
and
or
or
not
mov
mov
testb
add
jbe
pop
shrb
je
mov
pop
xchg
aas
xchg
xor
adc
insl
subb
fisttps
push
int
pop
fisubl
push
push
shlb
mov
mov
jb
lods
mov
test
cmpsl
xchg
xchg
xor
mov
lock
mov
test
lret
sbb
cmc
adc
enter
and
repnz
xchg
mov
pushf
cmp
arpl
sbb
xor
add
or
pop
sub
push
out
adc
ficompl
xchg
push
mov
ret
or
out
ljmp
arpl
or
jbe
shrb
add
movsl
mov
push
in
fwait
push
sbb
jne
mov
inc
jne
fsin
xor
adc
loopne
fsubs
shrl
add
mov
mov
push
or
lods
adc
adc
jb
and
addb
lea
mov
test
add
scas
sbb
pop
mov
xor
ss
add
xor
rcll
in
shlb
cs
xchg
in
inc
sub
mov
fucomip
or
and
mov
rclb
adc
rcr
test
stos
call
jbe
pop
aaa
fists
adc
cli
or
xor
rcl
enter
mov
test
rcll
sbb
mov
je
sub
xlat
cmp
add
cmpsl
jmp
nop
add
dec
push
push
idivb
mov
push
hlt
inc
lock
pop
leave
sbb
hlt
lret
adc
jge
jbe
jb
mov
mov
push
add
je
jae
adc
pop
aaa
fimull
pop
test
pop
mov
test
in
push
loope
pop
inc
dec
arpl
jecxz
or
cmp
mov
dec
mov
push
mov
fldl2t
or
in
dec
push
pop
xchg
ret
les
pop
pop
jb
mov
adc
sbb
dec
call
mov
movsl
leave
push
scas
add
inc
pop
popf
add
ds
cmpsl
or
mov
int
data16
xchg
pop
movsl
loopne
inc
cmpsb
cmpl
inc
mov
enter
adc
push
mov
mov
inc
jnp
mov
shll
cmp
lret
clc
push
xor
mov
mov
or
orl
xor
leave
sar
mov
aam
inc
adc
sub
or
sbb
sbb
sbb
das
dec
aam
lods
pop
test
popa
add
sarb
adc
fcompl
jnp
rorb
orb
roll
inc
andl
inc
shrb
test
enter
lcall
je
nop
add
sub
inc
scas
movb
test
loopne
add
in
push
inc
adc
cmp
sbb
movsl
ret
inc
inc
or
or
and
adc
mov
adc
movsb
es
add
pop
shlb
add
rolb
roll
jecxz
adc
loopne
mov
sbb
jl
pop
lds
mov
iret
push
lret
imulb
push
inc
leave
decb
cmp
inc
mov
test
pop
or
push
add
push
mov
jb
fs
inc
shrb
mov
sbb
mov
js
mov
stos
addl
pop
icebp
cmp
js
push
imul
adc
push
mov
sti
call
cmp
xor
push
jbe
jne
shlb
mov
mov
arpl
inc
cmpsl
subb
sbb
fimull
mov
mov
jnp
adcb
in
test
mov
jecxz
call
scas
xchg
pop
rolb
pop
push
mov
sbb
or
rcrb
fcoml
pushf
out
or
and
outsl
lds
int
dec
idivl
movsb
lock
vpdpbusds
cltd
mov
jns
adc
inc
mov
lea
ljmp
add
ret
cwtl
jb
push
fidivl
ss
adc
add
add
or
pop
mov
mov
xor
mov
xchg
add
icebp
dec
mov
or
std
push
test
cs
pop
dec
mov
pusha
sub
push
dec
mov
addl
insb
scas
adc
clc
leave
push
ret
dec
push
stos
and
les
push
sub
mov
push
push
cli
ja
xchg
lret
add
out
or
jo
adc
pop
inc
lods
popf
push
test
sub
push
dec
mov
stos
mov
adc
mov
push
orl
in
push
rorl
push
arpl
nop
ret
inc
sbb
jl
and
icebp
outsb
test
sbb
daa
aaa
popa
aam
dec
inc
enter
mov
sub
adc
pop
adc
js
test
and
pop
xchg
leave
pop
adc
loope
push
mov
into
cmp
mulb
aam
mov
pop
push
xchg
sbb
and
and
and
ds
les
call
into
and
movsl
clc
or
cmp
test
sub
rclb
filds
addr16
mov
xchg
pop
xchg
adcb
out
mov
xor
mov
loop
push
pop
jle
adc
pop
je
sbb
mov
lds
add
rorb
add
std
movb
js
lea
mov
test
or
psubq
call
iret
ror
xor
push
push
dec
cmpl
sub
mov
rolb
inc
sub
sbb
cmp
rclb
inc
and
aas
ja
stos
push
cmc
sub
sub
adc
sub
pop
xor
cmc
add
lods
ror
add
js
dec
inc
or
shll
jne
repz
add
test
bound
mov
dec
loopne
add
stos
cli
or
or
loope
popa
repnz
push
mov
jbe
out
adc
cmc
sti
mov
xlat
aad
pmulhuw
mov
xor
push
push
imul
dec
adc
mov
rorl
es
cli
lock
adc
push
test
add
fdivrs
sbb
sbb
mov
stos
test
pop
sbb
repnz
push
push
cmpsb
sub
cli
in
sub
adc
mov
popl
stc
or
inc
and
sub
dec
pop
cmp
add
cltd
cmp
cli
into
sbb
rclb
jecxz
adc
ds
push
in
shlb
lret
cmp
loopne
add
cmp
jge
pop
inc
orl
adc
stos
sbb
sti
xchg
rolb
mov
shrl
rorl
lock
mov
mov
xor
push
cmp
xor
mov
stos
adc
or
pop
aam
mov
mov
cmp
andb
or
or
inc
xchg
or
and
cmc
mov
xor
es
push
rclb
ret
shlb
out
jg
leave
gs
adc
and
ret
xchg
stos
lods
xchg
mov
fwait
pop
popf
addb
pusha
insb
cmc
in
out
xchg
decb
sbb
lock
sbb
push
movsb
mov
iret
adc
bound
cmp
aam
adc
mov
rcrb
cmpsl
xchg
popa
sbb
pop
mov
int3
add
sahf
icebp
push
and
mov
adc
ret
in
movsb
rcll
lods
es
xchg
fldt
adc
cmc
add
int3
popw
stos
mov
shlb
repz
subl
push
jbe
insb
xchg
push
test
adc
add
and
cmp
cmp
hlt
mov
sub
mov
pop
out
xchg
adc
lea
nop
sti
int
addb
inc
ret
and
lcall
test
pop
pop
jg
into
popf
push
andb
adc
sub
mov
rolb
pop
and
test
push
pop
xchg
test
into
lock
pop
inc
sbb
mov
mov
dec
add
push
mov
push
cmc
add
enter
mov
adc
or
cmp
and
enter
test
sub
cmpsl
stos
inc
adc
cmp
lcall
jmp
pop
and
push
and
pusha
mov
orb
push
push
or
adc
adc
inc
cmp
adc
inc
test
push
add
mov
fisubl
xchg
ds
adc
inc
cli
push
mov
subl
outsb
inc
fisttps
pop
orb
pop
push
enter
sub
shll
add
in
xchg
loopne
dec
push
mov
adc
enter
stos
repnz
add
mov
add
dec
sub
sub
push
hlt
lret
sub
mov
aad
out
sbbl
add
inc
pop
mov
adc
aad
sti
repnz
add
pop
out
lock
mov
sbb
mov
dec
movups
rolb
enter
mov
push
pop
xchg
mov
inc
push
addb
adc
stos
mov
mov
inc
sbb
lret
je
pop
jo
cmp
sti
inc
aad
cs
mov
je
arpl
mov
ret
mov
dec
incb
sub
adc
mov
andb
add
sbb
popa
mov
sbb
xchg
or
cmpsl
rclb
xor
test
out
mov
mov
cli
mov
mov
sbb
fs
nop
mov
adc
stos
push
mov
clc
cltd
or
inc
adc
nop
imul
in
pop
inc
aad
inc
outsl
jbe
inc
xor
dec
add
scas
mov
pop
int
adc
or
aad
xchg
push
in
add
icebp
notl
cld
xchg
adc
cmp
add
xchg
leave
inc
push
out
or
std
pop
adcl
cmpsl
imulb
add
mov
pop
sub
xorb
mov
add
mov
je
add
dec
mov
loope
fisttpl
push
inc
or
sbb
rorb
cmpsl
jnp
push
fidivs
int3
jno
testl
add
push
pop
les
nop
and
xor
loopne
sub
lahf
sbb
shlb
jge
subl
negl
and
push
sbb
lret
xchg
test
leave
push
jmp
jmp
mov
jnp
inc
pushf
sbb
cmp
inc
adc
push
or
sbb
test
sbb
leave
mov
clc
push
cmp
xchg
pop
ret
aaa
scas
push
rolb
add
or
adc
pop
jl
mov
inc
out
movb
sbb
dec
and
insl
mov
les
xor
sbb
pushf
pop
inc
mov
or
pop
mov
dec
mov
pop
insb
or
bound
jecxz
push
xor
push
movl
add
add
ret
test
cs
mov
push
loope
mov
js
stos
mov
testb
xor
adc
imul
fsubrl
arpl
pop
cmp
sbb
cltd
jmp
ljmp
and
fdivl
adc
add
cmp
adc
mov
sahf
jecxz
mov
push
and
inc
sub
adc
mov
in
mov
les
ret
lods
push
outsl
sub
rorb
stos
dec
bound
push
dec
pop
xor
adc
push
push
repnz
pop
add
rcr
cmp
pop
inc
js
aad
push
add
xchg
movsl
push
lea
push
mov
repnz
adc
orb
mov
and
push
or
inc
pop
mov
pop
mov
add
orb
dec
pushf
push
mov
rcrb
or
dec
lock
add
loopne
pusha
lds
scas
movb
add
xchg
cmc
cmc
js
pop
adc
movsb
lea
sub
subb
mov
test
in
leave
hlt
repnz
mov
aaa
je
mov
xchg
push
call
add
sbb
inc
stos
adc
jl
test
inc
daa
scas
inc
xchg
and
popa
mov
adc
adc
add
add
imul
xor
push
cmp
bound
pop
mov
and
sbb
adc
test
cmc
add
icebp
fwait
ss
mov
sbb
mov
aam
or
or
xor
stos
add
mov
cmovnp
add
sub
sbb
es
or
shrl
push
mov
lock
push
nop
mov
mov
lret
add
fistpl
rolb
and
loope
int
mov
and
mov
inc
inc
ljmp
sahf
test
loop
xchg
adc
or
rcll
inc
mov
pop
in
or
sahf
mov
dec
inc
xchg
mov
inc
jle
adc
adc
sub
sbb
jo
ret
in
sbb
jo
std
fldcw
mov
bound
ret
and
mov
lds
pop
lds
add
fs
mov
xchg
rclb
mov
jecxz
andl
stos
jnp
add
push
sub
adc
dec
movsb
or
cwtl
push
sbb
push
cwtl
pop
mov
adc
push
mov
adc
aam
add
sarb
jne
pop
push
fistl
mov
add
ljmp
icebp
push
test
push
or
mov
push
inc
mov
push
push
inc
jno
pushw
lcall
stos
dec
jo
or
outsb
xchg
push
leave
cmp
lods
pop
mov
xor
fwait
adc
fnsave
je
pop
bound
arpl
pop
cs
fadds
pop
inc
jecxz
cmp
inc
adc
mov
in
mov
aam
push
jb
mov
mov
cs
fimuls
adc
xchg
lret
jl
mov
push
sub
adc
push
push
sub
or
add
out
pushf
adc
adc
cmp
mov
pusha
add
adc
mov
push
icebp
dec
movsb
adc
push
aam
repnz
test
sub
or
shlb
mov
xor
mov
push
jne
inc
addr16
push
fimuls
xor
loopne
inc
sub
add
jns
adc
xor
sbb
mov
lcall
add
or
mov
gs
mov
push
fiaddl
mov
in
xchg
mov
cmp
xor
cld
cmp
sbb
cltd
std
stc
add
icebp
addb
insl
mov
in
shlb
push
inc
cmp
xchg
mov
insb
sbbb
or
inc
sbb
leave
movsb
scas
pusha
pop
mov
or
or
xchg
jp
add
sbb
imull
push
inc
mov
cli
and
sbb
adc
hlt
testb
sbb
add
inc
mov
push
add
inc
xchg
sbb
loop
add
lea
out
xor
ljmp
inc
enter
cmpsl
lcall
xor
addb
sbb
push
scas
sbb
mov
aam
cmpsb
mov
push
imul
scas
sbb
xchg
or
mov
jg
push
inc
daa
jb
push
cmp
push
cmc
icebp
jge
sbb
xchg
adc
leave
hlt
test
aas
inc
cmpsl
dec
inc
roll
or
icebp
sbb
sbb
mov
into
or
xor
aad
xchg
sbb
repnz
mov
xchg
js
sbb
add
add
loopne
sub
pop
adc
aam
dec
in
sub
hlt
sbb
addl
push
inc
adc
or
push
or
push
loop
pop
push
icebp
ss
xor
negb
jecxz
inc
adc
clc
adc
sbb
ror
adc
lock
cs
xchg
inc
sbb
or
scas
or
movsb
sub
cwtl
cmp
pop
and
es
sbb
push
ljmp
mov
aam
push
pop
scas
mov
jle
xchg
call
jns
scas
sbb
xchg
or
mov
lret
sbb
or
pop
pushf
sub
ds
fcoml
in
inc
or
mov
mov
repnz
int3
pop
lds
pusha
pusha
or
push
ljmp
mov
sub
inc
sbb
enter
mov
ss
jne
inc
lods
ja
inc
ds
add
add
sahf
sbb
or
lret
add
or
hlt
dec
and
fcom
push
xor
fcmovnu
movsb
addl
add
jl
push
fcomps
aad
in
repnz
cmp
mov
fadd
icebp
repz
add
insl
pop
dec
mov
adc
mov
adc
jl
pop
shrl
sub
add
dec
aas
in
or
sub
mov
push
inc
push
mov
out
mov
stos
xchg
mov
adc
stc
adc
push
mov
add
adc
mov
mov
mov
and
adc
repnz
sub
adc
stos
lea
testb
sbb
add
mov
xchg
cmc
add
repnz
jbe
nop
lea
push
movsb
mov
push
test
arpl
js
push
add
and
sbb
push
or
xchg
out
test
inc
pop
rolb
xor
das
repnz
mov
in
add
jo
data16
cmc
add
rcrl
sahf
inc
jne
inc
or
in
push
inc
test
mov
outsl
dec
jge
int
int3
adc
ret
ja
push
push
mov
add
sarl
pop
pop
in
mov
xchg
mov
ret
adc
push
sbb
sar
push
add
sbb
inc
test
testl
cli
mov
xor
xlat
inc
nop
lcall
test
adc
sbb
movsl
xor
xor
pusha
mov
ror
sbb
into
jp
adc
inc
add
pop
scas
enter
push
add
movsb
rclb
push
rclb
add
clc
inc
xchg
and
push
mov
into
ljmp
dec
rolb
notb
sub
add
aad
mov
cld
pop
adc
xchg
inc
inc
addb
mov
add
and
mov
and
cmpsb
test
and
mov
push
push
and
pop
rcrl
stc
aad
push
push
or
test
bound
xor
and
rorl
dec
push
add
fs
enter
push
sbb
outsl
cli
sbb
adc
mov
arpl
cmp
fimull
out
adc
cmpsb
or
ret
jb
push
pop
push
popf
or
pop
push
or
and
rolb
pop
inc
and
aaa
mov
xchg
fmuls
scas
sbb
and
add
and
mov
or
pop
xor
stos
adc
add
stos
jo
fistpl
aaa
mov
pop
rolb
or
sbb
lahf
imul
sbb
sbbl
adc
inc
add
movsl
ja
lock
stos
mov
shll
cs
lock
clc
pop
mov
cmp
icebp
pop
jp
add
sahf
add
dec
sub
sahf
inc
cmp
inc
xor
sbb
and
or
aas
icebp
ss
movsl
loop
mov
sbb
cld
je
jo
push
sub
mov
mov
xchg
mov
mov
mov
inc
jge
push
add
nop
or
mov
adc
adc
push
pop
and
div
in
push
or
or
inc
add
outsb
sbb
enter
loope
xchg
mov
push
cmp
lock
sbb
and
cmp
jo
test
je
pop
push
pop
fdivrs
loop
call
or
xchg
and
loopne
push
xchg
adc
xchg
es
ret
adc
inc
adc
adc
and
test
dec
hlt
pop
inc
add
jecxz
and
inc
imul
andb
notl
aad
out
addr16
jmp
dec
add
notb
and
icebp
sub
cmp
int
sub
pop
notb
push
sbb
add
call
pop
daa
sbb
aad
push
xor
aam
cli
gs
mov
xor
and
jmp
pop
icebp
stos
mov
adc
cmp
push
insl
popf
mov
and
jne
mov
jecxz
add
stos
mov
shl
pop
inc
test
dec
in
push
push
push
sub
adc
push
int
popa
push
movsl
pop
adc
rclb
cmc
shrl
or
add
ljmp
or
push
dec
mov
jl
add
addr16
and
iret
lock
pusha
push
dec
adcl
adc
das
mov
out
out
sbb
lods
add
mov
out
mov
inc
enter
mov
push
imul
ds
push
jl
sbb
out
scas
and
add
dec
or
push
mov
arpl
sahf
inc
js
loopne
inc
ficoms
pop
pop
stc
adc
loopne
idiv
ja
mov
mov
add
movsb
cmp
inc
subb
aaa
mov
sub
pop
rcrl
outsl
insl
fsubrl
push
mov
dec
or
and
mov
call
pushf
inc
lock
xchg
lcall
js
cmp
invd
push
fwait
enter
int
xor
sbb
inc
pop
ljmp
sar
and
cli
jo
and
pop
test
int3
sub
xor
bound
jae
add
mov
enter
or
daa
and
cwtl
adc
pop
cmp
sub
or
mov
sarl
sbb
or
subl
mov
insl
adc
add
dec
hlt
lock
ret
push
cmp
aam
adc
mov
adc
cmpsb
xor
das
imul
add
addl
adc
pop
push
sub
loopne
xor
in
imul
incb
popf
pop
scas
pop
test
cltd
pop
or
xor
jp
je
xchg
jo
rclb
xor
or
mov
or
sbb
mov
testb
mov
mov
and
or
or
andb
and
adc
in
push
or
ret
mov
pop
sbb
push
pushf
push
iret
fisubrl
loopne,pt
pop
jne
sub
fidivrs
or
stos
inc
pop
pop
in
add
pop
leave
dec
push
sarb
jecxz
loope
or
sbb
int
ret
xchg
hlt
dec
add
insl
inc
mov
arpl
test
push
mov
xchg
inc
xchg
or
call
xchg
adc
add
shl
call
test
inc
mov
and
cmp
sahf
xchg
rol
sbb
test
cwtl
call
and
outsl
repnz
inc
lods
mov
dec
ja
or
popa
jae
repnz
sbb
das
sub
jbe
inc
sub
pop
lds
ficompl
lcall
ss
out
xlat
dec
pusha
ffreep
push
jge
xor
push
jno
jno
inc
add
aam
add
addb
lods
adc
stos
or
popa
outsb
fsubs
aas
cmp
insl
rclb
push
popf
inc
pop
outsb
out
inc
imul
push
push
sbb
or
cli
pop
rorb
add
sbb
pop
adc
jl
and
xor
add
push
vpunpckhdq
lods
inc
hlt
fsts
loopne
mov
clc
inc
popf
testb
jp
mov
or
dec
or
popa
lds
dec
mov
add
jns
sbb
sub
pop
jp
add
sbb
mov
push
or
pop
dec
test
sbb
dec
scas
mov
ret
add
stc
pop
jo
push
into
adc
sahf
pop
shrl
and
fcoms
sbb
punpckhdq
lock
cmp
je
lret
addr16
adc
ret
mulb
ret
sub
rorl
pushf
rcpps
or
push
iret
ja
pop
push
push
add
mov
scas
mov
add
xchg
repnz
sbb
pop
add
rolb
xchg
cmp
scas
push
or
inc
daa
adc
hlt
cmc
add
addr16
leave
sbb
sub
sbb
xchg
add
test
cmp
sarb
adc
push
cwtl
push
inc
jnp
adc
sbb
icebp
mov
pop
movsb
out
or
lea
stos
leave
ret
and
add
bound
push
push
adc
push
stos
jo
jp
push
stos
sti
arpl
ja
xor
insl
roll
ret
push
sbb
sbb
dec
flds
inc
add
addb
push
mov
dec
sub
mov
xchg
mov
inc
sub
adc
mov
lcall
call
mov
add
adc
dec
inc
in
jno
sbb
push
and
lods
push
lea
and
and
jo
jns
scas
or
adc
es
push
lret
cmc
and
sub
movsl
stos
xchg
cwtl
or
int3
inc
pop
pop
jmp
cmp
mov
inc
scas
pop
add
pop
mov
xchg
enter
pop
inc
dec
pop
ss
orb
mov
xchg
mov
les
dec
jo
nop
loope
pop
orb
cmpsl
push
push
cmp
xor
xchg
les
mov
mov
jnp
rorb
sbb
cwtl
or
sub
js
mov
dec
rcl
sbb
add
adc
push
inc
lret
les
js
stos
push
lret
inc
orl
lret
cmp
mov
sbb
movsl
sbb
repnz
loopne
push
mov
dec
push
movsl
push
adcl
or
stos
jp
clc
push
test
mov
sub
push
push
mov
adc
and
lret
sub
mov
push
mov
int
mov
mov
shll
pop
sbb
pop
aad
mov
arpl
gs
aaa
pop
and
sbb
lcall
mov
sbb
push
aad
das
sub
daa
adc
mov
add
and
or
push
popf
roll
cmpsb
enter
pop
or
and
xor
add
je
add
inc
dec
push
jmp
ret
sbbl
lret
inc
roll
inc
mov
cmp
add
andb
and
jb
mov
mov
leave
add
push
cmc
ljmp
mov
mov
jb
adc
push
stos
inc
enter
xor
sbb
popa
fisubl
adc
add
push
stc
sbb
notb
scas
adc
pop
xchg
mov
test
call
dec
clc
cmp
adc
rolb
push
mov
test
and
imul
mov
sub
outsb
sub
in
out
push
inc
in
push
sti
mov
push
sbb
push
xchg
adc
mov
inc
lahf
mov
jp
sub
add
rcl
jo
fdivrs
js
lcall
or
mov
push
enter
test
dec
adc
fadd
test
dec
int
adcb
xor
test
repz
push
popf
mov
mov
pop
sub
ret
push
and
aad
mov
shl
fistl
push
add
push
sbb
inc
inc
jo
dec
fsubrl
jnp
test
add
pop
hlt
icebp
and
push
in
cmp
fstpt
cmp
and
jl
push
popa
sub
cli
xor
or
add
arpl
mov
inc
fcomip
xorb
ret
ret
popa
or
xor
pop
inc
shrl
mov
push
mov
push
add
popf
dec
in
or
lods
bound
icebp
mov
mov
mov
mov
push
ljmp
lret
adc
je
inc
push
dec
gs
idivl
adc
and
add
call
jmp
xor
icebp
push
out
xchg
mov
addb
adc
adc
jp
scas
call
lods
subl
or
jb
sbbb
aam
sbb
roll
fiaddl
mov
adc
jnp
push
fsubrl
out
mov
pop
das
jo
rclb
and
adc
shlb
jge
fstl
orb
mov
add
inc
lea
fdiv
inc
sbb
into
add
mov
ja
test
pop
popf
and
or
adc
icebp
mov
push
and
xor
add
rol
cld
adc
sbb
pop
fmulp
pushf
in
push
clc
pop
mov
fucomp
or
and
pop
mov
adc
jbe
enter
mov
aas
xor
test
jmp
adc
push
lcall
pop
inc
mov
pop
inc
aam
push
jg
sarb
add
inc
lret
sbb
loop
push
cld
sar
sbb
dec
pop
add
sbb
push
inc
xchg
sbb
jns
add
push
rcrb
or
mov
js
stos
test
js
popa
jnp
push
shlb
ljmp
loopne
cli
inc
fimuls
mov
mov
push
add
add
dec
lahf
push
sbbl
lods
mov
into
cld
and
fisubrl
jb
mov
adc
push
cmp
push
mov
sub
jge
jl
push
test
push
ret
inc
stos
jmp
sbb
mov
jmp
loopne
pop
leave
mov
arpl
movsl
mov
adc
cli
or
sbb
xchg
mov
movsl
sbb
jmp
fldl
or
addb
push
mov
xor
js
ljmp
pop
fisubrs
push
jo
mov
add
cltd
add
jg
sbb
xor
mov
inc
movsl
lock
jne
inc
push
mov
enterw
xchg
or
out
jb
cmp
lods
dec
xchg
and
mov
lretw
add
ret
shrl
cmp
mov
das
or
jmp
xchg
or
adc
add
repnz
add
cwtl
adc
enter
push
cltd
jg
andb
ret
filds
aad
arpl
scas
sbb
jge
adc
xchg
push
js
cmp
icebp
and
xchg
sbbl
lds
call
dec
cmc
test
push
inc
cmpl
jg
sbb
mov
push
mov
mov
adc
gs
add
dec
mov
push
lcall
xor
mov
subl
or
xor
lock
pop
lret
es
cmpsb
push
in
inc
push
mov
inc
lods
dec
pushf
in
adc
jo
xchg
ret
adc
add
xchg
fsts
push
loopne
or
sti
test
jp
lret
push
mov
add
sbb
push
mov
test
mov
daa
xor
add
xchg
loope
inc
and
outsl
dec
shlb
or
mov
sbb
cmpsl
add
fwait
pop
or
push
scas
pop
pop
jmp
push
roll
cltd
movsl
cmp
testb
sub
xor
lcall
shl
dec
add
sub
inc
xchg
dec
or
pop
sbb
movsb
or
add
icebp
xchg
push
jo
inc
sub
syscall
scas
loop
mov
xchg
mov
or
stos
pop
jb
or
jle
adc
and
or
aad
fisubrs
push
stos
lcall
shrl
shll
cmp
sbb
jno
push
or
push
inc
shl
sbbb
pop
or
roll
fistpl
popa
adc
adc
pop
shlb
gs
pop
xchg
or
adc
and
pushl
adc
stos
scas
pop
xor
jp
inc
cmp
movsl
inc
fwait
inc
popf
js
cmp
rcrb
adc
enter
pop
mov
sub
sbb
sub
arpl
xchg
or
dec
add
adc
outsl
mov
je
and
xchg
inc
or
mov
lds
lcall
jle
mov
cltd
lret
ret
add
jbe
jo
sub
cmp
fnstsw
cmc
and
push
push
pop
mov
mov
fnsave
and
mov
out
cli
add
imul
push
test
loop
mov
cmp
repnz
inc
lret
repnz
push
cmp
sub
push
ret
or
stos
adc
shll
cld
adc
pop
loopne
sbb
dec
or
xchg
jmp
adc
cli
or
push
inc
aam
adc
orl
leave
into
enter
and
cmp
ss
pop
nop
imul
jp
pop
add
movsb
or
lods
idiv
lret
push
push
repnz
or
jae
pop
roll
sbb
jp
arpl
movsb
add
sub
jl
pushf
and
jg
push
aad
mov
mov
std
jg
in
jmp
movl
add
pop
lods
outsl
sub
fs
lahf
aas
insl
jns
cmc
rep
xor
clc
popa
cld
stc
rep
mov
loopne
pop
mov
in
movsb
xor
mov
sti
jae
dec
scas
shl
or
cli
std
stc
repz
push
push
add
cmp
or
scas
in
outsl
sbb
aas
jg
jg
push
sub
bound
aad
xor
popa
stc
repz
xchg
es
sbb
insb
rcll
arpl
lret
rcll
aas
xchg
mov
repz
xchg
cltd
xchg
or
fbld
aad
inc
aas
jg
cld
outsl
or
mov
outsb
mov
jl
scas
aaa
pop
repz
lahf
mov
fisttps
cmp
mov
lcall
or
iret
lahf
aas
jg
sti
and
jbe
mov
or
stc
repz
lret
insl
pop
jae
add
push
mov
lahf
aas
jg
mov
and
pop
das
pop
push
bound
cmp
inc
lods
enter
aas
inc
mov
jg
cld
iret
dec
jnp
idiv
lods
pop
daa
test
pop
sbb
out
lahf
inc
daa
fbstp
lds
pop
std
clc
mov
pusha
and
sti
mov
daa
ret
repz
lahf
cmpsl
push
lea
idiv
dec
loope
jg
cld
stc
jmp
lods
or
jl
and
add
lahf
aas
orb
inc
in
test
cld
stc
repz
data16
mov
testb
or
or
jg
sahf
imul
add
stc
repz
push
nop
xor
lods
push
iret
pop
mov
jmp
aas
jg
fwait
popa
sbb
and
jg
dec
stc
repz
xchg
jo
and
mov
in
popf
addr16
jg
cld
ja
xchg
test
add
gs
aam
gs
out
lahf
lret
xor
cmpsl
push
in
push
stc
jae
xchg
fstpl
jge
test
sti
out
lahf
aas
add
clc
pop
incb
and
cld
stc
repz
scas
push
sub
mov
cmpl
jg
and
int
mov
repz
and
fcomps
hlt
fwait
dec
les
aas
jg
pop
lcall
jb
xor
mov
iret
xchg
xchg
mov
aas
jg
cld
sub
fabs
xlat
sub
jp
push
sbb
add
repz
lahf
push
mov
fsubs
jg
cld
stc
and
or
roll
xor
iret
lahf
aas
into
cwtl
cmp
fwait
in
mov
cld
stc
repz
or
mov
adc
subb
iret
lahf
aas
jg
outsl
js
adc
arpl
repz
stos
dec
iret
pop
lods
lods
dec
es
xchg
ljmp
push
push
pushf
mov
sbb
xchg
ret
cmp
mov
jg
cld
and
pop
cmp
and
jge,pt
repz
lahf
push
mov
pop
mov
loope
adc
sarl
repnz
dec
mov
cs
leave
cld
aas
mov
jg
sbb
pop
jne
daa
jo
inc
repz
lahf
dec
adc
push
int3
jmp
addr16
cld
stc
mov
fdivp
push
arpl
sar
iret
lahf
aas
pop
sub
les
dec
iret
std
arpl
ds
stc
repz
cmp
mov
jecxz
cs
mov
adc
adc
push
mov
cld
stc
pop
std
cli
xor
push
sbbl
xchg
and
xor
xchg
mov
out
repz
push
dec
jg
push
popa
add
lahf
aas
jg
enter
ss
mov
mov
stc
repz
pop
mov
cmp
push
lds
jg
cld
adc
clc
jbe
sahf
out
inc
movsb
lea
rcrl
jne
add
rorl
mov
insb
adc
lea
fcompl
xchg
gs
imul
jg
jl
mov
shll
repz
icebp
xor
dec
push
or
mov
jg
dec
pop
loop
inc
test
sub
cmp
repz
call
cmp
inc
lods
cltd
popf
fcompl
jg
cld
lret
push
addl
cli
dec
xchg
repz
lahf
out
negb
mov
or
or
dec
jg
cld
stc
mov
pop
lret
in
jp
and
cmpsb
int
jnp
sub
iret
lahf
aas
adcb
test
lds
cld
stc
repz
bound
cmp
lret
push
aaa
jne
xchg
lahf
aas
jg
jnp
dec
pop
sarb
iret
lahf
aas
icebp
mov
pop
jg
or
imull
int
cld
stc
repz
lods
xchg
icebp
es
cld
inc
dec
mov
dec
sti
sbb
dec
arpl
inc
aas
xor
xor
stc
repz
or
js
sbb
sub
fcomip
cld
jb
sub
mov
mov
cwtl
shrl
rcr
push
cmp
and
out
lahf
aas
or
dec
sub
push
cld
stc
repz
xor
int
add
pop
test
aas
jg
movntps
push
loopne
rcrb
repz
push
test
sbb
test
mov
in
out
mov
pop
sub
testl
cmp
inc
mov
dec
ficompl
or
aas
jg
sbb
add
loopw
adc
loopne
mov
add
int3
adc
and
or
stc
or
pusha
imul
mov
aaa
mov
adc
jg
cld
nop
lret
jns
bound
or
repz
lahf
cmp
push
lods
dec
or
ljmp
jae
js
jno
dec
sub
sahf
stos
xor
repz
lahf
test
negb
int3
repnz
loope
outsb
jmp
jle
stc
gs
xchg
lcall
push
cld
stc
repz
imul
bound
aas
jg
pop
add
popa
xor
enter
aas
jg
jg
mov
je
xor
or
jae
repz
xor
in
mov
les
dec
aas
jg
cld
shr
mov
mov
sbb
mov
iret
lahf
pushl
popa
into
out
adc
jg
cld
stc
push
xchg
jmp
lods
cli
pop
jne
jb
fdivrl
int
or
daa
lahf
aas
cmp
cmp
jecxz
out
dec
out
cld
stc
repz
mov
add
cld
push
cmpsb
or
lahf
aas
jg
imul
int3
cmp
xchg
mov
out
jno
mov
scas
popf
cltd
lcall
pop
jmp
adc
add
iret
out
jae
sarb
nop
sub
push
xchg
cld
lcall
shrl
and
pop
pop
loop
iret
lahf
pushl
xor
lret
push
xchg
cmpsl
cltd
repnz
mov
or
adc
out
lahf
push
cwtl
clc
jo
jmp
cmpsl
jbe
cld
stc
push
xchg
cltd
jmp
add
repz
iret
lahf
aas
mov
hlt
fcomi
insl
lcall
mov
mov
mov
icebp
sbb
mov
iret
lahf
aas
jg
jo
inc
dec
mov
and
inc
cld
stc
repz
inc
lods
arpl
adc
outsl
inc
in
ja
lahf
aas
jg
out
addr16
stc
or
mov
repz
ljmp
out
inc
or
sub
aas
jg
cld
jl
loopne
test
or
adc
sbb
out
stc
repz
addr16
sbbl
cld
pop
fbstp
stc
xor
mov
adc
ja
out
lahf
inc
or
loopne
xchg
mov
cld
stc
mulb
or
mov
pop
adc
iret
lahf
aas
xor
out
xlat
fistl
cld
stc
repz
xchg
cwtl
ret
and
scas
dec
cmp
stos
cmp
inc
loop
arpl
mov
cld
stc
repz
and
cmp
int3
pop
jae
xchg
insl
pop
test
rol
fcmovbe
mov
out
ret
enter
rolb
mov
lea
cld
mov
lahf
dec
jle
mov
pop
pop
stc
repz
lahf
fdivs
push
mov
notb
sbb
stc
dec
cmp
decb
mov
out
lahf
aas
ss
int3
pop
out
jbe
push
clc
mov
stc
repz
pop
cmpsb
cli
jle
int
xor
in
sbb
inc
ret
iret
lahf
aas
jg
inc
ljmp
sbb
int3
ret
icebp
in
inc
je
and
stc
push
and
ret
inc
dec
hlt
adc
pop
or
and
mulb
imul
cld
stc
repz
inc
xlat
add
or
push
lahf
aas
jg
fcoml
insl
add
push
jne
add
roll
mov
repz
jecxz
xchg
mov
xchg
into
in
push
lahf
inc
cld
push
jl
std
jl
jle
xchg
xchg
cmp
dec
lea
add
adcb
jno
iret
lahf
jg
jecxz
scas
mov
mov
cld
stc
repz
jnp
sub
mov
stos
std
push
iret
lahf
aas
jg
add
js
mov
inc
add
out
sbb
and
out
mov
jge
repz
mov
xor
jg
cld
stc
loope
scas
lds
push
cs
mov
iret
lahf
aas
add
pop
jp
xorb
pop
popa
cld
stc
repz
loop
hlt
mov
dec
add
push
ret
daa
jg
popa
jmp
ss
xchg
cld
stc
loope
sbb
xor
cmp
int
push
out
lahf
aas
push
test
jmp
cltd
jbe
testl
add
test
cld
jns
out
adc
insb
and
and
adc
repz
sbb
push
xchg
sbb
and
push
mov
sbb
jmp
hlt
fildll
iret
lahf
aas
outsl
inc
arpl
cld
pop
movsb
xchg
mov
cld
stc
repz
mov
push
jno
jnp
jecxz
xchg
cld
js
lahf
aas
jg
xor
cmpsl
adc
and
stc
repz
test
fisubrs
pop
mov
lahf
aas
jg
or
cmp
imul
xchg
cmp
out
pop
stos
daa
setne
jl
int
cmp
aas
jg
cld
mov
sub
cli
mov
out
lahf
movsb
mov
int3
cmp
fwait
ss
mov
in
shrb
sub
ja
test
fwait
orl
ds
clc
fistl
outsl
fidivrs
sbb
lcall
out
fwait
aaa
jge
jecxz
inc
int3
pop
mov
ds
repz
add
mov
in
and
cmpsb
push
push
incb
add
imul
jp
adc
out
fwait
aaa
pop
xor
dec
leave
movsl
icebp
xchg
pop
xchg
xor
xor
ja
pavgw
jl
jns
movsl
repz
insb
sub
push
jb
js
mov
cld
stc
in
xchg
cld
test
test
out
add
addr16
mov
lahf
aas
jmp
push
andb
mov
test
pop
iret
xchg
push
and
aad
outsl
aas
jg
cld
ret
popf
imul
sub
int3
fs
pop
sahf
clc
bound
mov
repz
pop
nop
xor
xor
xor
outsl
fidivrs
aad
stc
rol
adc
stos
sub
sti
leave
rclb
aad
mov
pop
int3
push
das
mov
jae
into
cmp
cmc
mov
xchg
mov
addr16
std
sbb
lahf
aas
jo
and
ss
loope
das
lods
cld
stc
repz
cmpsb
arpl
push
pop
mov
repz
lahf
aas
jg
inc
mov
int
sub
jae
repnz
jmp
mov
ljmp
out
lret
cs
or
lret
daa
xchg
aas
jg
cld
xchg
push
hlt
mov
sub
or
out
lahf
xor
push
jbe
stos
xchg
jg
stc
stc
pop
ljmp
inc
out
mov
icebp
repz
lahf
nop
cmp
xor
mov
jg
cld
stc
mov
adc
cmpsb
inc
adc
lods
das
stos
into
stc
xlat
dec
ds
mov
scas
add
jg
cld
cld
cmpb
mov
mov
data16
jp
loop
repz
xchg
lahf
sub
fwait
pushl
insb
ja
dec
sub
repnz
repz
mov
jmp
xor
aas
jg
xchg
push
mov
add
pop
mov
repz
aaa
push
push
mov
std
push
lret
out
je
jmp
into
rcrb
push
inc
repz
add
mov
gs
movsb
lock
cli
aas
jg
cld
call
fildl
pop
mov
repz
lahf
scas
shr
movsl
lret
scas
push
lock
sbb
cld
stc
inc
push
cld
stc
push
loop
jns
out
or
shl
xchg
jg
cmc
hlt
jo
cmp
cld
stc
popa
shll
mov
lcall
sub
pop
out
lahf
aas
outsb
xor
sbb
test
cld
stc
repz
ljmp
and
cmpsb
mov
aas
jg
outsl
push
popf
gs
sub
lds
imul
adc
or
decb
outsb
popf
mov
cmpsl
cs
and
push
fnstsw
repz
lcall
stc
jp
test
jg
cld
test
pop
lods
data16
inc
test
push
iret
lahf
add
and
dec
mov
jle
cld
stc
xchg
ficompl
jle
insl
add
jo
iret
lahf
mov
test
jo
or
gs
stc
stc
repz
or
int
sbb
ret
inc
mov
xchg
sbb
jmp
fidivrs
adc
and
mov
jg
cmp
xlat
shlb
and
iret
xchg
shlb
mov
outsl
popf
pop
out
cld
stc
repz
fwait
pop
fwait
ja
aad
scas
repnz
xchg
lahf
aas
jg
addl
dec
xor
imul
sbb
clc
jno
mov
movsl
ret
push
add
jg
cld
lock
cli
sahf
ret
lods
dec
mov
repz
lahf
dec
xorb
dec
cs
test
cld
stc
sar
cwtl
sbb
mov
mov
pop
out
lahf
aas
fidivs
push
jno
jnp
or
cld
stc
repz
add
scas
gs
je
mov
aas
jg
mov
dec
gs
and
repz
cmpsb
inc
in
or
sbb
repnz
sbb
inc
cmp
stc
jno
iret
aas
sub
out
out
out
mov
into
mov
cmp
pop
xchg
je
ljmp
aas
jg
out
xlat
mov
mov
out
ret
addr16
repz
mov
int3
inc
shrb
and
iret
lahf
jg
nop
xchg
inc
push
pusha
int
dec
repz
inc
cmpsb
or
mov
fbstp
test
jg
loope
and
data16
rolb
pusha
sarb
xchg
repz
lahf
stos
fnstcw
fimull
pop
cli
xchg
fcomip
cld
stc
imul
add
mov
lds
adc
sbb
lahf
aas
pushl
subb
fsts
leave
xor
js
repnz
nop
jle
jle
insl
leave
pop
lahf
fistpll
jg
cld
sti
notb
daa
xchg
pop
jo
jae
out
or
or
insl
sahf
pop
movsl
jl
lahf
aas
jno
fwait
cmpsl
pop
push
sbb
stc
repz
dec
loop
pop
stos
gs
adc
or
int3
sub
push
gs
mov
jbe
out
shl
cmc
cltd
cltd
out
rclb
pop
sti
lahf
cmp
jg
and
lahf
aas
jg
push
lds
jecxz
adc
call
es
repz
hlt
aaa
dec
cmp
sbb
pusha
dec
aas
jg
cld
cmp
push
push
fdiv
dec
repz
lahf
sub
scas
repz
push
adc
sbb
stc
xor
sbb
push
sub
inc
in
xorb
iret
lahf
aas
mov
add
data16
cld
stc
repz
gs
xor
lret
xorb
mov
pop
clc
notl
stc
repz
sbbb
jae
loop
mov
dec
jno
jg
ret
cmpsl
out
pop
in
push
mov
push
cld
stc
repz
add
sbb
addl
aas
jg
mov
jmp
into
add
aas
sub
mov
add
jns
mov
addr16
test
lcall
sbb
cmpsl
aas
push
cmp
out
xorb
fsubrl
lahf
aas
jg
sbb
mov
xor
sbb
inc
mov
repz
xchg
aad
loop
fmull
loopne
pop
mov
aas
stc
cld
cmp
cmp
cld
std
shrl
fdivr
stc
repz
mov
sbb
imull
xor
pop
add
lahf
aas
jg
aaa
outsb
push
xchg
jmp
aad
cmpsb
cs
sbb
stc
repz
pop
int3
and
sub
flds
cmp
lahf
aas
cld
jl
lods
xor
lcall
mov
out
sbb
rcr
dec
sub
jg
cld
cs
and
dec
jge
repz
lahf
dec
xchg
in
insl
sub
popf
push
repnz
sbb
pop
jg
cld
stc
mov
fisttpll
mov
int
mull
call
iret
lahf
aas
stos
jp
lds
or
rep
aam
mov
orb
sbb
lds
daa
jg
faddl
add
xchg
ljmp
aaa
cmp
cs
leave
mov
iret
shll
mov
xchg
leave
subb
mov
sub
mov
dec
int
out
pop
push
dec
ss
daa
pop
scas
inc
inc
jg
cld
stc
xchg
cmp
aaa
lret
das
outsb
out
push
out
daa
aas
and
pop
mov
addl
pop
inc
pop
cld
stc
repz
rclb
nop
hlt
jecxz
mov
sub
js
iret
lahf
aas
jg
pop
fbstp
adc
cld
stc
repz
pushf
imul
fildll
loop
ret
push
lahf
aas
jg
insl
add
sbb
ljmp
dec
mov
repz
push
ljmp
and
daa
shrb
cmpsb
out
jg
addr16
aas
jg
icebp
js
pop
dec
ror
jle
cld
sub
testl
dec
call
lahf
fadds
test
pop
sbb
in
repz
mov
movsb
sbb
cld
mov
fcoml
lcall
xor
lahf
aas
out
and
rcll
daa
fdivrl
sub
ret
cwtl
cld
stc
inc
notl
push
mov
xor
int
out
aam
out
pop
or
mov
int3
test
fidivrs
sahf
sub
xchg
insb
in
bound
push
mov
repnz
scas
cmpb
scas
sbb
fwait
xor
lret
repnz
fsubs
xor
jecxz
jg
cld
cmp
pop
lahf
lcall
test
mov
iret
lahf
aas
or
lcall
cld
stc
repz
fisubrs
dec
sahf
out
std
mov
and
mov
adc
enter
shll
cmc
inc
cld
stc
xlat
mov
lods
inc
sbb
rcrb
adc
sbb
mov
add
adc
add
repz
pushf
xchg
push
mov
xor
roll
sub
aam
lods
inc
mov
popa
jo
int
dec
adc
inc
inc
inc
and
jns
out
ljmp
adc
dec
sub
xchg
lock
dec
sbb
push
dec
fnstcw
cli
or
cld
stc
and
out
mov
out
mov
pop
repz
cltd
cmp
aas
jg
lcall
and
mov
ret
out
out
sbb
int3
jae
inc
arpl
pop
jl
mov
leave
pop
imul
jns
sbb
aam
inc
jns
fwait
aaa
out
mov
dec
xor
lret
cmpsb
enter
jns
out
adc
shrl
into
dec
fidivrl
mov
aaa
outsl
fcompp
mov
inc
outsl
jmp
pop
sbb
cli
jns
out
adc
repnz
mov
xor
jge
mov
cli
xlat
aaa
outsl
fidivrs
es
sub
dec
cmp
gs
out
fwait
int3
and
in
push
push
push
mov
fidivrs
pop
pop
dec
mov
sub
pop
arpl
int
aaa
cmpsb
mov
hlt
cmpsl
sub
outsb
fnstcw
cmp
mov
fisttpl
dec
pop
lds
sbb
cmp
or
xor
stc
cmpsl
dec
or
sbb
cwtl
jmp
mov
daa
inc
inc
push
aaa
out
lahf
aas
cmp
push
stos
iret
bound
stc
repz
imul
xor
orl
xlat
xchg
pop
call
mov
fcmovb
test
stc
repz
and
test
mov
and
aas
jg
cli
xlat
mov
sub
enter
ret
into
dec
stos
stc
repz
and
cld
hlt
addb
mov
pop
sti
pusha
dec
ja
repnz
sti
scas
sub
pushf
in
pushl
int
sub
mov
ftst
cltd
or
push
cli
push
inc
sub
xlat
push
xchg
jb
outsl
fidivrs
out
loope
xchg
jne
bound
ljmp
loopne
out
mov
ret
lret
jbe
jg
outsl
fidivrs
repnz
test
cmp
jle
sbb
jl
dec
push
mov
out
cld
stc
repz
dec
push
cmp
xor
aad
mov
fdivs
ret
ss
lahf
aas
jg
sbb
mov
cmp
pushf
cli
cld
stc
repz
and
mov
jg
mov
cld
xor
cli
cwtl
pop
aas
jg
cld
scas
pushf
int3
adcl
leave
pop
xor
das
dec
repz
lahf
adc
je
jmp
push
loop
cld
stc
adc
lea
dec
in
inc
mov
inc
inc
push
lock
iret
lahf
aas
jg
sub
mov
das
sahf
aad
sbb
in
out
pop
movsl
lahf
pop
xor
push
mov
stc
repz
call
nop
std
insl
mov
stos
in
xchg
scas
mov
inc
lea
mov
fimull
add
bound
sub
out
fwait
aaa
pushf
xor
cli
test
mov
or
inc
es
lret
push
loope
aad
jnp
fiadds
add
xor
adc
adc
aaa
dec
sub
fidivrs
mov
in
repnz
mov
mov
outsl
fidivrs
xor
pop
jae
pop
out
fwait
aaa
inc
out
and
lock
scas
jns
cmp
jns
mov
das
test
imul
iret
lahf
rorb
mov
push
test
cld
stc
divb
divb
xchg
jg
out
lahf
aas
fiadds
and
in
jle
stc
repz
and
cmp
xchg
jg
add
fnstcw
in
pusha
clc
je
outsb
int
ja
das
out
stos
rolb
sub
mov
jmp
sub
pop
in
movsb
and
fidivrs
cmpsl
scas
enter
out
in
repz
dec
icebp
fldenv
cmp
cmp
mov
ficompl
popa
add
out
fwait
and
mov
dec
cmp
fidivrs
jnp
insb
pop
ja
fstl
out
stos
inc
adc
sti
das
mov
mov
jmp
fwait
jg
mov
lea
sahf
lahf
aas
jg
repz
jge
push
test
or
lea
repz
xchg
inc
push
jmp
jg
adc
mov
cld
mov
mov
inc
mov
loop
out
lahf
dec
sbb
cmc
pop
insl
mov
hlt
jg
cld
stc
xorl
dec
imul
push
iret
lahf
aas
mov
and
push
mov
in
pop
cld
stc
repz
aad
mov
in
sbb
xor
movswl
xor
sub
stc
repz
xchg
cs
xchg
xchg
mov
xor
inc
push
int
pop
cmp
push
sbb
out
lahf
mov
loop
push
stos
xchg
mov
mov
cld
stc
mov
sti
dec
movsl
dec
div
pop
push
push
or
aas
jnp
pop
xchg
dec
mov
sti
push
cld
stc
repz
jmp
sub
ret
fcmovne
lahf
aas
jg
xchg
bswap
mov
movsl
test
repz
xchg
cld
jmp
stc
dec
rorl
aas
jg
leave
cmc
mov
xor
pop
fisttps
ljmp
jg
mov
mov
aam
repz
lahf
lret
xlat
jle
jmp
mov
fisttps
cld
stc
mov
mov
jo
mov
sub
out
lahf
aas
or
mov
add
lcall
out
mov
adc
insb
mov
mov
jl
pop
xchg
xrelease
insl
jg
cld
stc
daa
mov
pushf
dec
sub
inc
out
lahf
aas
roll
or
shlb
mov
adc
enter
lahf
xchg
fisttps
sti
nop
jg
cld
mov
push
xlat
dec
loopne
fstpl
dec
xlat
lods
cmc
out
lahf
aas
insb
dec
mov
sub
fwait
les
cld
stc
repz
mov
sub
in
lea
dec
sbb
mov
lahf
cmovno
push
jns
push
mov
sub
adc
fnstcw
lea
push
and
int
ja
sub
xor
sbb
repz
jo
imul
psubq
mov
xchg
mov
pop
add
add
inc
stc
repz
in
and
inc
test
sbb
repz
movsl
add
gs
rep
fwait
add
cld
mov
sub
aaa
outsl
fidivs
jb
sti
mov
jnp
pop
pop
jnp
inc
lock
int
gs
shll
xor
inc
fidivrs
lret
pop
adc
test
js
outsl
fiadds
test
add
jle
cmp
mov
xor
lds
fidivrs
adc
aaa
sub
pop
and
aaa
ja
out
outsb
push
fistl
mov
stc
ds
js
jo
fsts
push
fnstcw
mov
ret
test
dec
or
cld
stc
leave
dec
jmp
xchg
xchg
arpl
cmp
mov
pop
out
lahf
aas
xchg
cwtl
std
cltd
lret
push
insb
imul
stc
repz
fbstp
lock
inc
ljmp
std
xchg
lahf
aas
jg
inc
and
or
mov
inc
xlat
nop
jne
shr
out
mov
aas
mov
mov
xor
repnz
stc
repz
cmp
inc
add
and
mov
inc
in
int
ja
scas
out
pushf
push
adc
mov
rclb
movb
mov
aaa
outsl
faddp
mov
js
xchg
jmp
push
pop
out
in
int
cmp
mov
cld
mov
lahf
aas
mov
lret
imul
dec
sub
cld
stc
repz
movsb
std
push
pop
jecxz
sub
sub
lahf
aas
jg
sbb
cli
push
aas
in
lcall
cmp
jp
sub
or
aas
jg
adc
push
test
sub
cmpsb
add
enter
xchg
jae
lahf
inc
adc
int
aaa
xchg
inc
jae
xor
cmc
cmp
fidivrs
mov
shlb
and
test
mov
push
mov
sbb
mov
mov
repz
daa
jb
push
cmp
es
in
aaa
outsl
fdivp
clc
cmc
mov
jae
mov
and
mov
out
jmp
bound
cmpsb
aas
into
insb
mov
outsl
fidivrs
fisubrs
out
gs
repz
fwait
lods
repz
cmp
dec
push
insb
fidivrs
fs
push
cmpsl
aam
mov
fimuls
pop
adc
wbinvd
xchg
pop
movsb
repz
test
aaa
shrb
jmp
jg
cld
stc
das
xor
dec
xor
mov
push
out
lahf
aas
jo
sub
cmp
imul
cld
stc
repz
cli
xchg
imul
mov
in
test
iret
lahf
aas
jg
outsl
or
jl
mov
cmp
stc
repz
and
dec
push
into
mov
add
out
out
aas
stc
je
mov
xchg
xchg
mov
cld
stc
repz
clc
mov
nop
cmpb
or
gs
xchg
scas
cmp
outsl
fidivrs
and
call
push
mov
int
aaa
add
icebp
xor
aad
neg
mov
lods
xchg
adc
sbb
lret
dec
int
aaa
outsl
jne
mov
fldl
in
fisttps
pop
mov
cmc
flds
dec
dec
fsubl
shlb
fwait
cmp
pop
fsts
in
and
mov
and
pop
aas
jg
cld
push
inc
std
cs
shlb
iret
lahf
pop
test
sub
into
pop
pop
sahf
cld
stc
dec
stc
mov
pop
pushf
pop
inc
mov
iret
call
xor
test
mov
cld
sub
cmp
int3
fsub
imul
iret
mov
ja
jo
sbb
daa
daa
lret
pop
jg
cld
stc
xchg
xchg
test
jno
dec
aas
addl
xchg
add
out
call
stc
repz
mov
dec
xor
dec
push
das
jmp
bound
xchg
fdivp
das
pop
ja
ljmp
out
ret
imul
aaa
mov
fdivl
push
cld
stc
repz
push
inc
lock
add
cmpsl
mov
daa
aas
jg
sti
add
sbb
add
adc
out
shrb
daa
imul
mov
xchg
iret
lahf
cmp
dec
ret
mov
rcrb
pushf
call
test
repnz
je
ljmp
dec
mov
or
add
mov
jecxz
lock
aaa
outsl
ficomps
lock
out
push
cmp
in
xchg
lcall
mov
sub
scas
aas
fstl
sub
repz
lahf
out
or
mov
testb
cld
stc
pop
nop
xor
fsubs
sub
jns
pop
inc
popf
jb
out
lahf
aas
fisubl
rol
cmc
mov
fmulp
pop
cli
leave
mov
popa
rcr
out
andl
out
cwtl
sub
test
add
dec
xlat
dec
pop
das
outsl
fidivrs
inc
mov
pop
dec
push
push
jmp
aaa
mov
mov
push
inc
int
imul
repnz
je
das
xlat
pop
outsb
imul
ss
sbb
jne
push
pop
mov
stc
repz
lret
adc
push
fcmovbe
cmpsl
add
sub
jg
cld
inc
ja
mov
stos
mov
push
repz
lahf
or
mov
leave
xchg
out
jbe
jno
cld
stc
mov
dec
mov
imul
dec
add
iret
lahf
aas
dec
jno
in
mov
shl
jns
push
lahf
jg
leave
cmpsb
fsubrp
fbld
dec
adc
repz
mov
mov
inc
pop
inc
cs
xor
xchg
repz
jge
arpl
adc
add
cld
stc
mov
ficomps
push
pop
push
sbb
mov
pop
jmp
iret
lahf
aas
xor
mov
or
aas
jl
rcrl
cmp
jnp
sahf
xor
hlt
dec
inc
stc
repz
sub
gs
adc
dec
test
aad
jl
sbb
popf
jle
or
lcall
lahf
jp
in
xor
mov
leave
out
cmp
or
add
mov
push
adc
mov
repnz
leave
test
jbe
ja
ja
dec
outsl
fidivrs
adc
mov
dec
loop
idivb
push
out
cltd
or
lahf
mov
repz
ret
add
repz
adc
outsl
out
dec
ljmp
sbb
pop
cld
sti
enter
lret
mov
cltd
push
xchg
in
test
aas
jg
sbb
loopne
lods
stos
jno
xchg
inc
out
stc
repz
inc
movb
lods
test
adc
push
mov
sbb
sti
jne
subb
repz
aam
nop
mov
lahf
adc
fsqrt
adc
adc
jns
sbb
jno,pn
imulb
popf
adc
clc
jg
insl
and
cmpsl
push
push
or
out
lahf
aas
inc
andb
cltd
sub
pop
push
leave
daa
cld
stc
repz
dec
or
and
insb
jle
inc
xor
das
outsb
ss
jmp
mov
out
add
lahf
dec
stos
leave
push
mov
jecxz
adc
mov
lods
jne
aaa
outsl
jae
mov
mov
inc
lock
int
inc
icebp
and
scas
outsl
fidivrs
addr16
jae
ja
mov
sar
fsub
int
aaa
filds
and
pushf
inc
pop
push
fidivrs
or
xchg
int
les
mov
shll
aaa
outsl
xchg
adc
out
paddb
rorl
dec
cmp
outsl
fidivrs
jecxz
movsb
xlat
divb
lods
out
sbb
jp
mov
mov
repz
push
std
outsl
rclb
cmp
mov
aas
ljmp
test
pop
cmp
out
jecxz
neg
out
stc
or
sbb
jle
aas
jg
popa
es
lods
and
es
xor
repz
std
mov
out
xchg
xchg
fidivrs
mov
mov
cmp
or
pop
hlt
stc
repz
add
insb
and
add
inc
lret
xor
cld
jbe
fcom
push
mov
lret
mov
cld
stc
sub
call
addb
out
lahf
sub
mov
push
insl
lret
xlat
and
jg
cld
stc
and
or
arpl
aam
adc
inc
call
jg
mov
into
jne
fistpl
mov
out
lahf
aas
lock
add
rcrb
jecxz
cld
stc
repz
mov
push
jno
insl
test
iret
lahf
aas
jg
adc
repz
jmp
cld
stc
repz
loope
jl
push
fmull
mov
jg
ds
sti
mov
sbb
enter
in
in
outsb
mov
pop
mov
or
clc
call
ret
sbb
out
fwait
aaa
cld
mov
sub
push
and
push
and
adc
sti
xabort
cmp
out
aaa
outsl
fisubs
pop
cltd
addl
cld
stc
adc
pop
mov
push
xlat
iret
lahf
aas
jg
ss
mov
cmp
cmpsl
pop
cld
stc
repz
inc
fsubs
fildll
insb
leave
ficoml
out
aam
mov
das
shll
fnstcw
test
sahf
repz
arpl
loopne
add
cld
pop
sbb
jmp
xchg
insb
data16
rolb
call
popf
call
inc
and
outsb
cld
stc
repz
mov
and
jg
dec
outsl
lahf
aas
jg
xor
pushf
cmp
xchg
outsl
inc
dec
aad
ljmp
arpl
cmp
orl
popf
mov
cld
idiv
xchg
and
out
xchg
lods
push
sahf
mov
iret
lahf
icebp
push
xor
xlat
pop
sub
xchg
cld
stc
mov
inc
lret
add
aaa
jb
dec
mov
sti
icebp
cltd
or
outsb
call
out
vpmaxub
jle
xor
xchg
in
int
aaa
outsl
iret
popa
adc
sub
mov
outsb
jae
or
jae
lds
push
xchg
inc
push
sbbb
mov
adc
mov
scas
fcmove
jns
out
cmpsl
lods
xor
jp
in
arpl
cmp
adc
jbe
xlat
cmpsb
add
in
mov
fwait
aaa
lcall
imul
jns
jbe
popa
mov
adc
clc
or
jp
aas
sti
dec
xor
inc
outsl
xor
cmc
xchg
jo
pop
pop
cmp
dec
scas
push
xor
test
or
out
jl
sti
pop
mov
jnp
mov
in
jg
cld
stc
push
or
cmp
mov
out
jns
cmc
add
int
test
xchg
loope
cmpsb
shl
mov
mov
inc
shrl
xor
iret
sbb
outsl
fiadds
jae
inc
cmp
jns
out
repz
cmp
lods
rorl
mov
adc
aas
jg
cld
stc
out
mov
or
mov
iret
lahf
aas
movsl
stc
aaa
bound
add
lds
inc
repz
jp
mov
rclb
push
xchg
aad
outsl
fidivrs
outsl
lcall
jecxz
fucomp
out
enter
scas
jbe
jae
in
push
lds
cld
stc
repz
into
popa
cli
and
shl
push
cmp
jg
or
cmp
mov
xlat
lret
cld
stc
repz
mov
push
lods
mov
psrlq
mov
pop
and
shr
aas
test
mov
sahf
pusha
test
scas
mov
adc
cld
stc
xchg
cmc
cmp
loop
mov
mov
ja
fimuls
mov
and
call
lahf
xchg
inc
icebp
iret
roll
or
repz
ja
cltd
mov
dec
fwait
aaa
outsl
ficoms
pop
mov
inc
inc
push
xchg
outsl
pop
jo
xchg
jns
out
aaa
cmp
loopne
mov
mov
or
fdiv
hlt
sbbb
es
jbe
dec
repz
fwait
add
mov
fwait
add
dec
outsl
fidivrs
addr16
insl
mov
xchg
and
out
fwait
aaa
fidivrl
movsl
fisubl
mov
pop
fnstenv
push
call
inc
push
cld
orl
es
test
inc
jle
test
push
fs
jmp
movntq
out
lahf
mov
dec
mov
repz
push
xor
cld
stc
repz
cwtl
gs
mov
mov
push
jno
lea
aas
jg
test
sbb
push
test
lahf
jg
divl
xor
pop
pop
sbb
cmp
xor
repnz
pop
cld
jecxz
sete
add
dec
inc
pop
mov
sub
ljmp
idivl
mov
jns
mov
int
mov
sbbl
or
cli
fwait
aaa
outsl
fiadds
daa
mov
inc
ret
into
lods
fldcw
repz
das
dec
les
or
jle
mov
pop
leave
fsub
orl
pop
rclb
cmp
das
pushf
jns
out
adc
cmp
rcrb
xor
outsl
fidivrs
mov
cs
add
mov
addr16
ljmp
push
xor
pop
fidivrs
jle
int3
das
adc
sahf
les
enter
lods
enter
mov
push
ss
xchg
mov
out
mov
les
outsl
fidivrs
inc
ds
jo
pop
sbb
jbe
out
fwait
pop
subl
pop
or
sbb
jns
mov
test
add
jle
out
fwait
aaa
dec
push
push
add
push
jb
fdivrl
cmp
pop
xor
ds
movsb
sbb
repz
lcall
push
lea
and
mov
lcall
jg
notl
pop
mov
sarl
in
fdivrp
repz
cmp
std
adc
pop
rorl
scas
aas
jg
cld
insb
pushf
or
repnz
std
nop
cmp
enter
ffreep
jl
jmp
int
aaa
sarb
adc
cmp
out
je
scas
test
out
adc
iret
loop
cmpl
mov
aas
xchg
fwait
aaa
outsl
fisubrs
insl
xchg
fidivl
xor
cld
repz
leave
int
repnz
jg
rorb
cld
stc
iret
mov
pop
mov
jmp
sub
xchg
in
mov
daa
movsb
in
inc
negl
rep
inc
xor
cmp
shr
add
jg
in
mov
or
and
in
les
aas
inc
call
jns
je
inc
pop
sub
inc
clc
popa
pop
fwait
aaa
outsl
faddp
or
addr16
out
out
mov
jns
out
jae
les
cmp
pop
repz
mov
mov
mov
jns
cld
stc
jne
iret
dec
jae
stc
mov
cltd
aad
cmovbe
out
lahf
aas
adc
or
xchg
gs
mov
inc
insb
and
pop
xlat
mov
adc
or
inc
dec
mov
aas
jg
mov
iret
aam
dec
int
mov
inc
pop
inc
and
mov
cmpsb
aas
dec
imul
out
xchg
mov
sub
stos
mov
jb
test
and
mov
mov
ljmp
cli
add
ja
inc
fdivp
sub
mov
jo
repz
fwait
stos
pusha
cmp
jmp
and
adc
jb
push
pop
mov
fs
push
adc
movb
popa
stos
fildll
rorb
imul
sbb
cmp
addr16
cmpsb
mov
pushf
lcall
outsl
ret
js
mov
mov
fisubs
ja
jns
out
lods
mov
push
ret
icebp
popa
outsl
push
or
dec
pop
mov
inc
jl
dec
mov
mov
and
out
fwait
mov
lods
xchg
xchg
and
testb
mov
aas
mov
lea
int3
dec
xor
out
imul
fwait
aaa
jg
incl
insl
add
int
sbb
xchg
in
out
cmp
sbb
pop
outsb
xor
movsb
aas
xchg
iret
push
xor
sub
fidivrs
cs
fidivrs
add
dec
ss
fwait
int3
dec
push
int3
repnz
mov
outsl
fidivrs
xor
es
dec
dec
out
fwait
aaa
vmwrite
inc
jbe
mov
dec
push
loope
mov
jp
or
and
mov
ja
call
add
jecxz
and
pop
xchg
push
movsl
mov
pusha
xchg
lock
dec
test
outsl
fsubp
popa
lock
scas
rorl
sti
sbb
aaa
cli
bound
jnp
out
sbb
outsl
fidivrs
insb
mov
or
pop
repz
fwait
xchg
stc
pop
lcall
xchg
outsl
fidivrs
pop
push
insl
dec
add
mov
aaa
and
scas
push
test
repz
ljmp
outsl
fiadds
pop
jle
jns
pop
inc
xchg
cmpsl
insl
cmp
fwait
aaa
loopne
pusha
adc
andb
fidivrs
int3
sbb
cld
inc
mov
aaa
outsl
loopne
or
jmp
xchg
mov
leave
sbb
out
mov
inc
mov
fsubs
inc
inc
insl
ljmp
sbbl
xchg
fstpt
cld
stc
es
test
jbe
or
insb
out
lahf
aas
rcrl
sub
lret
add
scas
rorb
insl
out
sbb
sub
cmp
lds
mov
lods
test
pop
push
leave
mov
adc
fwait
inc
mov
fwait
aaa
outsl
adc
cmp
clc
popf
mov
inc
sbb
sub
aas
hlt
xchg
xor
lret
ret
pop
xchg
jp
out
stc
xchg
lcall
xlat
arpl
fnstcw
cmc
jne
popf
pop
mov
and
jg
add
inc
jp
jmp
aaa
outsl
fidivrs
pushl
xchg
call
dec
repz
fwait
fwait
push
test
sub
imul
scas
bound
jb
aam
add
push
cmp
jnp
sbb
movsl
fwait
aaa
outsl
fidivrs
adc
das
icebp
xchg
sbb
push
xor
cmp
out
nop
dec
pop
inc
jno
inc
loopne
push
fcomps
fidivrs
leave
mov
xchg
out
fwait
aaa
xchg
loop
xor
push
testb
sub
repnz
jne
push
xchg
addr16
out
out
adc
cltd
pop
push
xchg
mov
out
fwait
jle
repnz
loop
cld
sti
mov
cld
enter
xor
sti
aas
fmul
out
lahf
aas
sahf
adc
movb
bound
adc
stc
pause
cmp
mov
xchg
and
ficoms
aad
mov
sub
repnz
dec
xchg
add
sar
pop
stc
stc
ja
insl
cmp
in
pop
sub
mov
iret
lahf
aas
in
push
iret
xor
inc
bound
sbb
stc
repz
push
into
mov
mov
scas
mov
testl
ficoml
mov
iret
pop
aas
jg
cld
mov
imul
jbe
jmp
cs
dec
repz
lahf
lods
iret
out
sub
arpl
or
inc
or
aam
repnz
xchg
push
test
sar
iret
lahf
aas
jg
rol
adc
inc
dec
inc
out
cmc
leave
and
jg
mov
cmp
pop
mov
mov
repz
mov
lcall
notb
xchg
jmp
out
popa
mov
pop
adc
repz
mov
xchg
daa
push
in
dec
cmpsb
js
decl
lret
shrl
jecxz
jns
enter
test
cli
fsts
fidivrs
cmpsb
push
mov
mov
sbb
aaa
outsl
fidivrs
out
insl
out
dec
addr16
dec
in
loop
fwait
insb
or
fidivrs
mov
and
or
sbbb
fwait
mov
dec
fnstsw
cmpsl
and
jae
xor
mov
dec
mov
cmpsw
xlat
adc
push
inc
cltd
jns
ss
fidivs
repz
std
jg
aad
lea
pop
xchg
shll
test
iret
lahf
aas
test
mov
push
adc
popf
push
mov
repz
cli
stos
mov
add
mov
pop
dec
mov
in
pop
repz
lahf
jl
ret
add
divl
cld
stc
adc
add
inc
add
outsb
add
jecxz
out
lahf
aas
into
cmpsl
popa
ret
in
mov
xchg
xchg
xchg
mov
repnz
outsb
jae
pop
hlt
fidivrs
sarl
loopew
int
aaa
outsl
aas
or
mov
pushf
mov
out
jmp
jae
es
pop
shlb
jecxz
mov
rclb
xlat
jp
mov
fidivrs
cmp
test
test
repz
rol
scas
lods
or
add
outsl
fidivrs
jb
ljmp
icebp
iret
loop,pt
fwait
aaa
mov
out
inc
adc
mov
nop
fisttpl
xor
movsb
fwait
aaa
outsl
fidivrs
mov
test
jns
out
scas
sbb
jmp
jbe
dec
inc
and
mov
lock
lret
out
add
pushaw
inc
push
jg
aam
popf
cmp
cld
ljmp
pushf
sub
xchg
iret
lahf
aas
in
arpl
inc
mov
je
scas
push
daa
pop
dec
jnp
push
aaa
outsl
ficomps
lea
sub
jno
xchg
je
in
int
xor
mov
repnz
mov
rol
mov
inc
inc
fcomps
repz
jno
push
sbb
dec
mov
xor
mov
sub
enter
aaa
out
and
xchg
or
movsl
jg
out
lea
fwait
pop
mov
popa
daa
push
out
fwait
ja
pusha
adc
std
inc
cmpsl
and
dec
fidivrs
data16
sbb
js
xor
fwait
aaa
outsl
add
xchg
and
jns
out
enter
add
out
inc
sub
in
fwait
aaa
outsl
fidivs
cmp
or
cmpsb
loop
int
inc
push
xlat
push
jg
pop
fidivrs
out
xor
xorl
sbb
mov
outsb
sti
iret
mov
out
jnp
xor
scas
insl
dec
cmpsb
lds
push
daa
mov
mov
lods
pusha
and
stos
sbb
int
aaa
outsl
fsubr
pop
pushf
or
cmpsb
jge
sbb
jns
out
ja
flds
xchg
xchg
pop
sub
adc
outsb
fisubs
or
rol
add
stc
das
or
add
fdivrl
sub
adc
jmp
out
jne
aas
out
cmp
loope
lahf
cld
cld
stc
sub
jb
cmp
add
and
adc
push
lds
sbb
pop
push
ss
pop
xor
out
aas
push
nop
outsb
or
push
scas
sti
scas
sub
lea
adc
repz
stos
neg
mov
int3
push
js
in
adc
or
fwait
aaa
outsl
pop
cmp
les
sub
insb
lods
and
leave
rol
jo
mov
add
repnz
dec
shlb
call
cs
push
jne
push
cmp
xor
sbb
out
xorb
adc
adc
or
out
ret
ror
cmp
add
cld
stc
xlat
mov
dec
cli
jb
push
repnz
gs
jns
mov
iret
push
scas
outsl
lds
int
ja
xlat
jmp
push
test
mov
test
sub
mov
outsl
ficoms
sbb
loop
in
nop
xchg
sbb
imul
aad
jg
scas
lahf
fdivrl
out
ficoms
dec
dec
sbb
xlat
rorl
xchg
fwait
aaa
lods
push
cmp
mov
push
push
mov
or
push
aam
pop
cmp
cwtl
ljmp
fwait
aaa
jbe
cli
test
adcb
or
mov
pushf
adc
in
in
out
lret
lahf
ja
punpckhwd
js,pn
sbb
aas
repz
fwait
dec
scas
jno
pushf
and
cmp
scas
xor
jns
inc
into
sub
push
jp
inc
daa
mov
loop
fwait
aaa
shrl
push
jns
cmp
lahf
aas
ljmp
scas
jp
dec
call
out
icebp
leave
mov
inc
xchg
inc
pusha
fs
or
iret
repz
icebp
cmc
sbb
lret
andl
fildl
mov
fcmovnb
test
test
pop
les
xchg
daa
ljmp
fwait
aaa
mov
rcrl
sub
lahf
aas
call
fs
test
mov
imul
inc
ret
cld
stc
repz
or
xor
aaa
cmp
pop
ficomps
pavgw
cmp
movl
push
pop
lret
cmpsl
xchg
out
jo
shlb
cmp
cld
stc
rep
dec
outsl
imul
inc
pavgw
pop
repnz
jg
xlat
mov
and
cmpsb
xor
clc
in
mov
sti
push
push
sahf
pop
xchg
lahf
out
outsl
fidivrs
xchg
jnp
inc
int
hlt
adc
cmpsb
addb
pop
sbb
rorb
leave
jg
in
and
fidivrs
mov
xor
dec
jl
push
aaa
rolb
mov
lock
movsb
add
repz
fwait
test
or
lea
push
mov
sbb
scas
mov
mov
ljmp
inc
cmp
mov
ljmp
addr16
lods
roll
test
adc
rcll
scas
xchg
call
cltd
bound
loopne
fwait
pop
dec
cwtl
outsl
inc
push
jecxz
mov
fsubrs
orb
popf
pop
push
repz
jg
pop
fsubrl
mov
mov
lcall
outsl
sub
cmpb
addr16
int
aaa
sbb
stos
mov
inc
dec
aas
jg
enter
jbe
add
aas
test
sub
out
sahf
loop
int
aaa
outsl
pop
test
int3
xchg
repz
fs
mov
inc
fsubrs
push
mov
and
ret
dec
and
dec
movsb
leave
and
int
or
movsb
add
fwait
dec
nop
mov
xor
mov
xchg
lahf
ds
or
dec
ja
push
lret
das
sbbl
jecxz
icebp
ds
in
cmp
dec
mov
ror
jg
xlat
adcb
popf
xor
cld
dec
xchg
mov
sub
push
loop
sub
mov
pop
pop
sarl
lahf
aas
jg
mov
push
jp
rorb
mov
mov
jg
ja
test
pusha
out
xchg
lahf
jg
ljmp
mov
cld
stc
repz
push
out
inc
push
loope
or
or
aas
jg
call
or
sti
int
aaa
push
imul
pop
hlt
jl
in
cmpsb
repnz
push
lods
and
push
cwtl
xor
cmc
out
fwait
aaa
outsl
fimuls
enter
adc
jns
out
cld
jns
hlt
xchg
lds
loop
sbb
push
mov
icebp
mov
lret
jecxz
xor
fwait
in
maskmovq
notl
loopne
repz
pop
adc
arpl
idivl
aaa
outsl
fidivrs
insl
test
mov
orl
mov
enter
push
xlat
push
aas
sarl
jle
lock
mov
inc
ret
outsl
lret
into
and
inc
mov
mov
hlt
aaa
outsl
fidivrs
test
sbb
sbb
cmp
repnz
fwait
mov
mov
pop
cwtl
mov
add
jne
nop
ja
fists
jle
xlat
inc
and
out
cmp
pushf
jo
jo
mov
sar
vpunpcklqdq
xchg
push
sarb
mov
fwait
aaa
outsl
dec
and
imul
addr16
stc
jae
out
std
leave
cmp
jle
mov
cmpsb
imul
fidivrs
in
xchg
lret
inc
inc
addb
test
xchg
fwait
mov
add
jno
jae
mov
enter
pop
cmpsl
sti
pop
mov
out
lahf
into
mov
lods
inc
insl
xchg
icebp
push
fdivrs
cld
stc
jl
sbb
inc
mov
fld
daa
inc
and
add
enter
loop
sbb
nop
lahf
hlt
pop
std
mov
mov
fidivrs
push
call
repnz
pop
cmp
mov
call
fs
out
addl
ds
push
xchg
lahf
loop
aaa
out
sub
add
jbe
jns
jns
fdivrs
fnsave
pushl
dec
dec
repz
lahf
mov
dec
lock
add
es
cld
stc
inc
mov
and
xor
ds
push
inc
outsb
sete
push
hlt
push
ja
jno
dec
lret
sbb
ret
mov
stc
repz
into
pushf
adc
cld
xor
fs
push
pop
or
lret
out
lahf
mov
nop
insl
shl
rolb
cld
stc
lock
push
xchg
fisubrs
nop
dec
and
or
iret
lahf
aas
dec
sbb
xchg
pop
add
mov
push
aad
cld
stc
repz
call
mov
repz
jp
sahf
aas
jg
jg
ret
push
xchg
sbb
inc
cmp
xchg
cmp
rcrl
std
mov
popa
xchg
jp
lahf
pushw
fs
test
adc
cmp
mov
bound
adc
jns
test
push
shrb
inc
push
fimull
aas
xor
loope
aas
insb
jle
out
enter
cltd
lds
mov
rcll
sbb
stc
repz
out
aad
fadds
stc
repz
sbb
imul
mov
inc
and
and
loope
out
icebp
xchg
iret
lahf
mov
icebp
cmp
incb
mov
push
jb
out
adc
jo
pop
enter
repz
or
add
cmp
movsb
pop
outsb
addb
int
aaa
outsl
add
sub
lods
shlb
mov
xchg
outsl
cmp
leave
inc
fwait
aaa
outsl
fisubrs
in
mov
mov
xor
xchg
repz
int
popa
xor
push
ds
mov
sub
fwait
cmc
or
fdivrs
fiadds
call
xchg
ja
out
fwait
push
iret
jecxz
xor
add
push
lahf
aas
cmp
insl
in
mov
or
rclb
sbb
out
repz
sahf
add
xor
jns
cmp
icebp
nop
jl
test
pop
andl
movswl
cmp
repz
stos
add
neg
aam
mov
sub
repnz
aaa
outsl
and
mov
sub
inc
imul
xchg
push
push
test
mov
or
mov
push
mov
xchg
aaa
outsl
xorb
negl
jecxz
stc
repz
xlat
pushf
out
lock
aam
ffreep
and
push
pop
rcl
xchg
loopne
and
das
repz
lahf
sarl
push
sbb
pop
mov
or
inc
int3
push
xor
add
push
or
push
out
aad
and
xor
inc
sbb
or
adc
addb
in
test
rolb
sarb
adc
sbb
cmp
pop
add
push
and
rcrb
jecxz
rcl
inc
sub
ret
shl
inc
push
push
sbb
or
outsl
mov
adc
into
jo
and
add
inc
pop
mov
lcall
scas
mov
add
pop
das
add
cmp
xchg
test
sbb
sbb
movsl
adc
rcrb
cmp
adc
sbbb
bound
outsl
iret
push
push
mov
xorb
or
mov
or
push
inc
mov
pop
mov
lods
push
orb
test
xchg
roll
push
in
stos
xchg
cld
sub
or
sbb
sbb
call
push
xchg
adc
push
sub
inc
iret
push
rcrb
mov
push
or
in
nopl
sbb
pop
es
mov
add
and
rcll
ljmp
icebp
sbb
cmp
insl
and
shll
rcll
insl
sbb
lret
sub
cwtl
push
jne
ret
xor
lret
or
adc
test
jo
jnp
pop
clc
sbb
pusha
jae
mov
or
je
jae
sub
push
test
fisttpll
popf
sbbl
push
or
pop
mov
rcll
push
xor
jbe
pusha
cmpsl
outsb
test
add
mov
mov
clc
push
mov
icebp
push
cmp
and
mov
jle
call
loop
or
jne
inc
ss
xchg
cmp
adc
mov
repnz
adc
sub
mov
mov
inc
xor
or
or
or
outsl
adc
mov
nop
adc
pop
push
cltd
aaa
push
sub
loopne
ja
push
arpl
stos
fcmovb
or
ljmp
jge
clc
or
push
add
call
stos
push
adc
xchg
fdiv
ret
into
loopne
jb
inc
push
mov
add
gs
loope
pop
mov
test
imul
dec
jge
jne
or
mov
loopne
xor
jae
andl
repnz
sbb
repnz
pop
inc
scas
adc
push
cmp
scas
mov
cmpsl
dec
xor
or
ljmp
repz
push
in
cmp
add
or
cs
push
andl
dec
scas
jl
push
lea
and
mov
sbb
dec
fs
ret
or
sub
imul
or
add
xchg
push
enter
mov
cli
sbb
insl
mov
out
or
adcb
into
sub
dec
sub
dec
popf
mov
push
fidivrl
sbb
push
cmpsl
mov
inc
push
xchg
lcall
es
jle
call
and
and
dec
gs
pop
popf
or
pusha
cmpsb
lahf
sub
test
inc
in
imul
decb
push
frstor
out
cli
jl
mov
xchg
imul
sub
dec
add
sti
pusha
dec
jp
push
xchg
out
ret
jl
pop
push
jle
and
rol
add
dec
and
adc
adc
call
push
mov
mov
stc
addps
rolb
sub
jae
or
shlb
add
cmp
pusha
xor
push
sub
sbb
fstpl
or
mov
jp
mov
ljmp
xor
and
mov
push
add
into
cs
sbb
test
or
imul
inc
xor
sbb
mov
cmp
adc
sbb
out
sub
mov
out
xor
imul
jbe
pop
and
sub
sbb
dec
das
cmp
push
mov
push
daa
or
test
push
lods
das
idivb
mov
gs
pop
pop
jo
mov
fsubs
xchg
pop
xor
andb
add
mov
in
cmp
movsl
test
xchg
lcall
push
in
loope
mov
out
loope
and
pop
pop
push
stos
push
into
push
loopne
add
jmp
in
lock
add
fnstsw
stos
sub
shrb
push
push
leave
adc
popa
push
sub
xchg
ss
pop
fwait
popa
sbb
jmp
setnp
xor
imul
inc
movsb
mov
inc
add
bound
clc
push
cmp
push
push
in
add
inc
add
call
push
sbb
pop
push
add
add
sub
decb
inc
fsubs
jge
out
pop
sti
into
inc
mov
popf
stos
xor
mov
aad
adc
shlb
add
pop
sahf
and
ja
mov
mov
pushf
mov
pop
push
and
fists
xor
mov
pop
sbb
jecxz
cmp
or
push
mov
shlb
sarb
push
js
popf
add
add
inc
lods
sbb
aam
or
cmp
clc
or
ss
or
mov
clc
adc
adc
dec
cmpsl
test
cmp
stos
sub
shlb
mov
cmpl
icebp
out
add
inc
in
push
mov
or
cmp
sahf
mov
xor
clc
inc
mov
or
bound
bound
jns
shrl
add
push
add
lea
sbb
mov
int3
xlat
sub
ss
repnz
add
mov
or
rorl
shr
ret
lea
enter
add
sub
sbb
decb
mov
lock
lahf
popf
lods
xchg
aas
cmp
dec
loopne
mov
into
mov
sbb
daa
sub
scas
dec
xchg
pop
loopne
in
scas
sub
and
push
mov
push
mov
add
scas
sub
dec
xor
sti
loopne
cmp
pop
mov
push
push
mov
mov
loopne
cs
inc
push
mov
ljmp
les
and
pop
sbb
pop
cwtl
in
add
add
mov
or
fisttpl
push
or
dec
mov
sbb
or
xchg
mov
add
and
xchg
add
fisubs
jo
pop
cs
and
cmp
lods
sbb
inc
repnz
shrl
add
xchg
mov
mov
add
xlat
popf
out
movsb
add
push
int
adc
call
sub
xchg
and
stos
add
ret
xchg
orb
jnp
mov
dec
roll
xchg
or
jmp
int3
std
add
sub
clc
xlat
roll
insb
dec
int
lea
fst
mov
fwait
hlt
pop
cld
push
lret
ror
or
push
or
mov
ficoml
or
inc
test
jo
cmp
rolb
push
mov
std
push
movb
pop
fucomp
add
je
rolb
pusha
cmp
adc
pop
cmpsb
mov
xchg
addl
and
daa
ljmp
adcb
jae
dec
sbb
push
push
inc
xchg
mov
and
xor
mov
test
lret
inc
or
adc
clc
lret
popa
andb
inc
xor
out
pop
aad
adc
mov
adc
push
add
daa
jmp
sbb
fcmovbe
clc
push
sub
adc
loope
or
dec
shlb
inc
cmp
orb
mov
jb
mov
pop
ret
pushf
mov
into
imul
xchg
jb
mov
add
jo
mov
in
push
xor
sbb
mov
jle
cmp
jecxz
sub
mov
aad
inc
push
imul
inc
movsb
sbb
mov
fdivrs
add
outsl
divb
mov
scas
or
inc
js
cmpsb
les
push
dec
dec
or
rolb
stos
aad
sbb
pushf
int3
xchg
movsb
test
hlt
mov
xchg
or
sbb
imul
push
aam
cmpsl
stc
or
sbb
nop
adc
jecxz
jb
add
rcl
rorl
stos
push
adc
or
cmpsb
adc
push
pop
xchg
lret
lods
jo
add
or
pop
mov
cmp
out
or
pop
xor
or
lock
sbb
lea
inc
daa
std
push
loop
jle
std
mov
and
add
sbb
mov
sbb
mov
jne
shr
mov
fwait
or
adc
lret
xchg
cmpsb
mov
sub
inc
ss
lds
jo
into
push
and
das
jo
add
sub
fbstp
push
xchg
cmp
sbb
jge
lock
lcall
gs
call
jmp
movsb
into
movaps
push
testl
sbb
add
shll
test
cmp
or
pop
lods
fs
jg
ljmp
adc
call
jo
inc
rcrl
xor
push
dec
mov
xchg
sbb
fstl
cmp
mov
or
sbb
fdiv
pop
pusha
push
jo
cli
push
les
scas
push
add
pop
dec
add
test
sar
dec
and
or
add
or
ja
add
or
aas
jge
ret
push
inc
adc
add
and
popa
addr16
push
rclb
sbb
and
adc
in
xchg
or
adc
xadd
mov
iret
sti
lret
push
shrl
mov
xlat
andl
inc
or
xor
push
pop
shll
adc
loopne
sbb
nop
jno
cwtl
rorb
das
sarl
or
int3
not
push
push
xor
xchg
push
fwait
mov
push
ret
or
cmp
ror
in
add
imulb
rorl
pop
jo
inc
xchg
es
jl
xor
inc
or
pop
add
movl
sub
popa
addb
inc
push
orb
dec
mov
xchg
dec
push
jne
sub
cmp
inc
mov
xor
cmp
adc
mov
inc
sahf
inc
test
push
xchg
clc
adc
mov
add
mov
push
ud0
add
push
shr
mov
xor
push
or
jo
jne
lret
pusha
mov
push
jbe
mov
add
sar
sbb
add
add
and
dec
roll
dec
lret
inc
pop
cwtl
sbb
or
sbb
pusha
imul
sbb
pusha
rcrb
add
mov
scas
stos
cmp
lock
repz
enter
sbb
pop
es
add
testb
dec
loop
xor
test
loope
sub
rclb
xlat
push
sub
cmp
sbb
dec
sbb
cli
mov
add
fstpl
inc
adc
and
loopne
push
mov
adc
cmp
mov
and
in
add
sub
js
xchg
or
sub
dec
mov
cld
push
into
mov
pop
insl
into
mov
mov
xor
lds
scas
scas
push
shll
das
stc
push
add
or
mov
cltd
test
popf
test
inc
test
outsl
push
faddl
hlt
xor
jo
stos
inc
xor
cltd
add
das
push
jb
push
rclb
cld
adc
push
mov
scas
adc
push
jne
andb
dec
and
add
les
cmp
into
adc
loope
add
cmc
sub
movsl
sub
pop
add
in
cmp
sbb
dec
jo
push
adc
push
xor
pop
mov
add
pusha
lds
jecxz
mov
mov
and
dec
sarl
sbbl
in
push
add
add
fs
mov
add
adc
mov
cwtl
ds
pop
and
ret
sbb
dec
inc
push
rclb
lock
into
aaa
hlt
xor
int
aad
mov
add
push
int
mov
or
mov
sbb
mov
hlt
shrb
andb
push
js
int
out
sub
mov
nop
push
add
pusha
je
pop
shll
into
pushf
ret
xor
xchg
push
push
mov
dec
adc
inc
test
push
jae
push
hlt
fwait
and
in
or
nop
lret
test
andl
js
test
enter
mov
push
int
loope
call
and
pop
add
sbb
andb
lock
sbb
and
mov
ffree
fnsave
push
or
cltd
fists
dec
or
into
das
jmp
jge
fiaddl
das
add
dec
iret
push
push
rol
testl
and
orb
icebp
flds
and
mov
add
call
adc
or
lods
bound
sbb
add
xchg
mov
add
xchg
sbb
loop
add
adc
sbb
push
push
push
jl
adc
xor
adc
pusha
adcb
push
add
push
sbb
les
pop
xor
add
mov
pop
or
mov
fwait
jp
add
dec
add
adc
addl
sub
leave
pop
sub
subb
adc
rcll
jo
dec
push
neg
jge
xchg
sbbl
inc
movsb
or
in
shll
pushw
sbb
sub
andl
leave
roll
lcall
add
adc
dec
adc
jp
jo
sbb
add
push
sbb
les
jae
gs
pop
popf
and
or
outsb
dec
push
xor
inc
ja
sbb
stos
jo
loop
adc
or
xor
lcall
aas
xchg
push
mov
push
call
add
mov
or
mov
or
adc
bound
std
pop
insb
xchg
in
push
add
ret
push
fadds
jge
ds
jo
test
inc
mov
and
iret
or
mov
stos
adc
add
add
add
xchg
xor
movb
xor
imull
inc
add
mov
mov
mov
cmp
add
jmp
cmp
cld
repnz
push
sbb
pop
ljmp
inc
and
sbb
or
ss
daa
xor
mov
cltd
lret
es
fimuls
sbb
sarl
ret
xor
push
add
xor
sahf
scas
dec
xchg
ds
sbb
iret
or
sbbl
push
roll
and
in
dec
xchg
mov
inc
scas
stc
and
mov
repz
sbb
es
ljmp
cmpsl
or
ret
jmp
jns
adc
rclb
pop
negl
pop
dec
rolb
xchg
xchg
aam
mov
dec
aas
shrb
in
push
push
xchg
in
sbb
cltd
shrl
sbb
sbbb
inc
xchg
mov
add
add
sbb
xor
rcr
adc
test
out
push
ret
hlt
xor
jbe
push
inc
mov
add
xchg
jecxz
adcl
lcall
adc
pop
insl
fsubl
cs
add
shll
adc
int
push
adc
push
xchg
dec
push
add
or
or
mov
push
fxch
jmp
pop
je
cltd
ljmp
test
inc
in
jne
cmc
insl
int
push
push
mov
int
push
mov
pushf
fcmovnb
push
mov
xor
addr16
out
cmc
nop
and
insb
leave
loope
push
movsb
cmp
mov
pop
in
aaa
gs
cmp
cmp
test
and
rclb
loopne
aad
out
and
sbb
xchg
and
ret
lret
mov
lods
sub
sahf
in
cmp
or
out
sarb
out
int3
sarl
mov
fisubrs
ret
test
and
push
mov
lret
xchg
lock
std
jg
rclb
xchg
call
and
rolb
add
xor
add
push
jb
test
add
add
inc
jle
sbb
jne
adc
lds
push
and
sarl
in
inc
lock
xchg
jecxz
test
addb
cmp
fwait
lock
stos
in
or
xor
inc
pop
sahf
xlat
sbb
sbb
cmpsl
sbb
pop
jne
mov
inc
daa
imul
es
or
movsl
mov
lret
adc
jns
adc
vmread
push
push
insb
xchg
xchg
adc
lret
sbb
sbb
add
rolb
mov
inc
out
or
pop
aam
ds
push
push
xlat
sti
rcr
push
or
adc
add
daa
dec
pop
jp
or
insl
leave
or
sub
dec
pop
out
inc
push
arpl
stos
xchg
or
or
neg
push
or
jecxz
adc
xorb
orb
pop
or
lret
xchg
jo
fisttpl
roll
lock
rcrb
or
add
mov
jle
leave
dec
cmc
add
jne
push
icebp
adc
add
inc
ret
pushf
or
fwait
xchg
pop
icebp
rcll
notb
adc
inc
adc
mov
inc
sub
pop
cld
or
cli
sbb
dec
adc
insb
mov
sbb
dec
adc
xchg
fidivrs
or
in
call
push
inc
and
inc
pop
and
loop
cmc
fistps
inc
add
je
subb
out
sub
dec
sub
inc
push
mov
push
cmp
loopne
push
das
sbb
daa
add
and
pop
sbb
jb
mov
ds
push
pop
adc
add
pusha
xor
sbb
cmpsb
xor
inc
mov
mov
pop
push
mov
push
jge
jb
add
into
or
lret
bound
pop
push
lock
pop
rcrb
push
add
inc
cmpsb
inc
lods
lods
sbb
mov
cmp
lock
ret
and
mov
cmc
out
or
bound
rolb
or
mov
adc
fisubl
add
add
and
pop
mov
mov
addb
jbe
xorb
jnp
in
push
mov
and
mov
add
add
aad
xor
push
aad
push
xchg
pop
inc
mov
sub
sbb
fdiv
lret
inc
jl
xchg
lods
pop
enter
lods
fwait
cmp
xchg
push
or
add
xchg
rclb
iret
sbb
test
inc
xchg
pop
loopne
pop
loopne
in
add
in
adc
add
sbb
or
sbb
cwtl
add
adc
rcr
push
psllw
mov
and
sbb
ret
lock
add
mov
adc
add
add
xcrypt-ctr
cmpsl
pop
lock
fcoml
mov
mov
and
adc
cmp
mov
fiaddl
out
pop
mov
call
or
inc
xchg
std
cli
adc
mov
dec
data16
nop
test
mov
pushw
jo
test
and
ljmp
sbb
xchg
nop
lcall
xchg
sbb
aas
sbb
adc
pop
ror
xor
test
adc
jo
or
push
addb
jo
inc
jae
inc
notb
mov
xchg
test
test
dec
into
dec
push
mov
out
ljmp
push
cmp
xchg
sub
add
or
or
lods
adc
in
into
sbb
mov
jne
je
add
cmp
jg
add
mov
pop
fsubrp
add
adc
push
or
push
shlb
jno
or
mov
ss
cmp
sub
inc
arpl
pop
or
sahf
or
push
adc
or
mov
cmp
add
stos
add
cltd
mov
pop
adc
wbinvd
inc
or
jge
push
mov
adc
shlb
cmp
cmp
add
pushf
in
sbb
push
aam
es
ret
sub
or
mov
jo
sbb
mov
or
pop
sub
push
xor
loop
outsl
xor
mov
sbb
mov
lret
sbb
out
inc
cld
fldcw
int3
add
dec
addr16
mov
xchg
pop
in
push
lds
fists
mov
mov
jo
rolb
push
pop
je
and
sbb
pop
shll
mov
and
push
pop
and
push
pop
enter
push
xchg
pop
fadds
int3
jge
and
mov
es
adc
add
and
aam
lcall
mov
mov
rolb
push
sub
push
sbb
and
sub
adc
shlb
and
cmp
mov
mov
shlb
push
inc
xchg
lock
cwtl
add
pop
push
es
sbb
daa
inc
pusha
push
shl
test
inc
test
or
subb
or
clc
push
xchg
push
xor
push
push
ds
loop
xchg
lret
or
add
mov
faddl
loope
loopne
pop
sti
add
ret
cmp
sub
out
cs
jl
call
mov
jo
das
subb
das
adc
loopne
pop
push
mov
repnz
stos
stc
xor
bound
and
out
adc
out
sbb
inc
lods
push
jno
data16
out
aas
cmpsb
and
push
repnz
push
ret
or
out
add
xor
xor
pusha
cli
pop
sub
sbb
push
adcb
push
xlat
jb
sarb
jl
push
leave
mov
and
adc
inc
in
rorb
push
push
cmp
dec
or
subl
mov
sbb
lret
inc
stos
pop
fsts
in
add
mov
mov
or
fdivrs
test
or
pusha
and
dec
mov
add
xchg
popa
push
jecxz
add
inc
in
enter
xor
xor
subb
lock
int
sub
dec
mov
mov
sbb
adc
or
or
add
push
inc
dec
punpckhdq
notl
aad
inc
add
xchg
inc
mov
test
pop
xchg
lret
loope
add
xor
adc
sub
subb
pop
ret
mov
pop
loop
inc
xchg
mov
add
loopne
and
or
sbb
xor
add
mov
cmp
cmp
mov
mov
lahf
test
out
or
ljmp
adc
dec
dec
inc
sahf
pop
cli
or
push
pop
leave
dec
mov
or
or
inc
shll
inc
add
ror
inc
cwtl
cmp
xor
push
xor
aam
mov
inc
clc
mov
push
rorb
icebp
sbb
testl
pop
pop
sub
fstpl
adc
jge
sbb
lock
dec
sub
push
jge
aam
mov
add
dec
cli
dec
daa
fisubl
dec
cmp
pop
or
mov
inc
mov
sbb
pop
pusha
add
rorb
dec
sbb
rclb
mov
int
inc
je
adc
add
xor
mov
int3
pop
xor
mov
adc
fdivr
jno
jge
popa
and
stos
mov
push
xor
dec
push
dec
adc
jno
inc
shll
popf
sub
mov
sbb
or
jle
loopne
push
mov
push
push
mov
push
push
xor
sbb
sbb
sub
sub
je
pop
and
add
rcrb
test
test
or
add
inc
xor
rorl
add
stc
sbb
roll
cmpsl
cmp
or
mov
sbb
lret
sbb
pop
sub
adc
roll
int3
adc
add
mov
cmp
mov
and
daa
push
nop
mov
inc
and
mov
rclb
leave
jge
xchg
xor
ja
adc
add
inc
pop
mov
cmp
mov
fstl
leave
push
lods
imul
rol
loopne
dec
sbb
push
mov
pop
leave
hlt
add
dec
sub
mov
sub
sub
dec
das
adc
add
mov
jl
pusha
call
add
xchg
sbb
or
pop
insb
xchg
aaa
leave
hlt
and
loopne
inc
mov
and
adc
add
push
xor
or
sbb
pop
ljmp
inc
sbb
mov
fcomps
inc
add
and
pop
rorl
and
xchg
bswap
and
mov
lret
inc
int3
shll
push
arpl
inc
dec
push
mov
jge
sub
and
and
aad
stos
inc
call
rorb
pop
mov
mov
aad
or
sbb
fisubs
vpshaw
xor
adc
add
data16
jp
cmpb
pop
in
mov
stos
mov
add
mov
push
imulb
out
inc
add
das
or
add
pop
sub
sub
fistps
mov
push
in
sbb
fmuls
push
inc
push
iret
mov
xchg
xchg
int
adc
push
xchg
lcall
ret
adc
mov
or
inc
ljmp
jbe
movsl
je
push
sub
or
dec
inc
in
in
mov
mov
or
lock
imul
sbb
sbb
add
nop
outsl
cmp
sbb
into
negb
push
shlb
push
pushf
lret
fdivrl
into
push
cmp
leave
subl
jno
loopne
mov
xchg
pop
insl
sub
adc
add
add
add
loop
fnstenv
xor
cltd
cltd
pop
sbb
jecxz
nop
xchg
push
or
and
stos
cmpsl
pop
rolb
lock
pop
sub
es
sbb
jnp
adc
inc
lock
sbb
call
jbe
mov
push
push
inc
loopne
add
stos
aas
adc
int3
push
add
push
push
scas
pop
movsl
pop
mov
loopne
andl
pop
ljmp
lock
dec
or
mov
add
cmp
add
daa
sahf
mov
movsl
jns
mov
adc
popa
push
bound
add
adcb
adc
mov
fldl
sbb
mov
add
add
jne
or
mov
and
ret
adc
dec
cmpsb
inc
adc
mov
popf
push
push
xchg
imul
add
fistpl
fwait
ja
arpl
scas
lahf
inc
cli
adc
pop
fcoml
sbb
pop
sbb
out
rcrb
xor
jae
sub
add
inc
inc
into
add
dec
mov
and
jb
lods
mov
or
stos
add
inc
and
roll
adc
inc
dec
test
xchg
mov
ret
adc
pop
jne
push
pop
call
adc
mov
sub
in
clc
jnp
jb
imul
repnz
pusha
sub
subb
cmp
cmpsb
xor
adc
cmp
mov
movsb
or
xchg
gs
push
dec
xchg
cmp
sbb
cltd
lcall
ret
mov
int
adc
cmp
xchg
or
mov
aas
add
and
inc
iret
sbb
cltd
incb
sarb
or
or
ljmp
pusha
mov
or
test
mov
jg
sub
ret
push
je
stos
into
les
sub
and
loope
dec
add
and
add
mov
sub
aas
sub
cmp
inc
inc
mov
jmp
add
loope
or
hlt
test
dec
ret
lea
lcall
or
push
xor
xchg
test
loope
test
or
orl
cmpsl
dec
add
fistpl
cmovae
lods
ret
aas
mov
jecxz
push
cmp
mov
dec
inc
pushf
mov
out
scas
and
scas
mov
ret
mov
rclb
add
rorb
clc
push
pop
push
jo
or
and
xchg
sbb
sub
mov
sbb
test
enter
loopne
inc
rcl
rdtsc
pop
sbb
flds
pushf
aaa
mov
add
pop
call
arpl
sahf
rcrl
push
out
ret
test
popf
adc
jp
rclb
mov
or
adc
pop
stc
sti
push
jae
push
push
mov
das
mov
fisttps
add
inc
call
cmc
ror
mov
sbb
mov
xor
push
test
mov
mov
mov
pop
xor
mov
pop
pop
lods
jne
inc
dec
andb
and
pop
xchg
pop
ret
and
and
lcall
adc
call
mov
scas
gs
push
and
lock
push
mov
xlat
fstps
addb
adc
cmpb
xlat
adc
dec
aas
lods
mov
mov
mov
popa
and
xchg
and
and
add
and
push
or
rorl
inc
lcall
fcomps
cmp
andl
icebp
adc
das
inc
add
test
xchg
inc
push
loope
or
mov
mov
cmpsl
add
inc
sbb
pusha
inc
or
sub
scas
sbb
ja
xor
push
aas
cmp
adc
sbb
and
and
sbb
lods
js
mov
xor
and
sbb
inc
jno
leave
push
shrl
dec
xchg
mov
adc
sahf
mov
fs
mov
jns
or
mov
push
shlb
in
add
jns
sbb
push
pusha
cmp
rolb
mov
dec
jb
inc
inc
push
push
xlat
push
inc
lds
ljmp
push
leave
sub
xor
cmp
add
and
stos
lret
nop
add
add
clc
insb
push
jge
sbb
adc
adc
mov
or
daa
sub
push
js
mov
inc
cs
call
inc
mov
stos
setg
adc
jne
push
mov
sub
paddsb
push
subl
cmp
fldenv
xchg
jmp
push
dec
cs
imul
jle
add
adc
push
xchg
inc
xchg
test
imul
push
add
enter
fstps
mov
imul
or
mov
loopne
lahf
nop
add
mov
adc
push
cmp
sbb
jge
es
cmp
ret
push
sub
and
loope
xchg
dec
cmp
mov
pop
and
and
pop
mov
cmp
cmpsb
inc
push
cmp
cmp
add
push
push
jp
adc
sbb
sub
sub
rclb
fcomi
loopne
add
xchg
inc
push
sub
push
lret
shl
push
icebp
test
xchg
push
pop
aad
cmp
sbb
inc
pop
int
or
add
repz
cmp
dec
test
pop
xchg
xor
in
dec
add
or
and
inc
ficoml
xor
lcall
fistl
mov
cmpsb
fstps
arpl
add
fstps
cmp
xor
roll
inc
mov
loope
adc
dec
sahf
mov
pop
mov
push
pop
xchg
rorl
hlt
or
mov
push
jnp
add
jmp
dec
test
or
sub
xor
inc
sbb
or
in
adc
xchg
imul
aad
sbb
shr
not
pop
andnps
add
test
mov
test
xchg
popa
jle
in
loop
add
xor
pusha
lret
pop
insb
insb
or
lock
stos
push
add
cmp
leave
aam
mov
out
pop
sub
pop
pop
loope
ja
pop
adc
sbb
pop
subb
sbbb
lea
dec
int
push
lds
sbb
orb
andl
mov
cwtl
pop
xchg
push
imul
iret
or
jo
lods
xchg
push
sidtl
fsubs
push
fsubrs
inc
inc
movsb
xor
adc
fcmovu
inc
jge
or
push
dec
xlat
icebp
xchg
sub
imul
or
lcall
push
ret
mov
insb
into
inc
push
sysenter
push
imul
insl
and
leave
jg
jbe
inc
inc
cmp
adc
xchg
test
roll
cwtl
sqrtps
adc
ljmp
mov
bound
pop
jne
push
push
sub
lret
push
shrb
sbb
inc
sbb
jge
mov
hlt
enter
add
insb
adc
jg
adc
rorl
and
aaa
dec
push
loopne
pusha
pop
insl
push
inc
jge,pn
add
inc
movsb
lcall
push
and
ljmp
or
in
push
or
add
gs
xor
shrl
mulb
cmp
pop
mov
out
mov
pop
xor
call
sub
sbb
cmp
adc
popa
add
aam
sub
mov
xor
js
pop
or
push
jb
mov
adc
inc
ljmp
push
dec
inc
ljmp
sbb
insl
lock
int
xor
pop
ficomps
cmp
add
mull
inc
jl
rcrb
sbb
mov
jne
out
add
pushf
test
stos
test
mov
or
fwait
call
pop
mov
test
cltd
mov
roll
lds
inc
jnp
data16
push
or
nop
shl
jb
lods
push
daa
cmp
sbb
adc
adc
add
push
ljmp
and
fisubs
notb
divl
sbb
and
lods
and
inc
loop
test
add
xchg
add
cmp
mov
xor
xor
push
jo
ss
adc
test
cmc
mov
sbb
cmp
mov
mov
enter
retw
das
dec
imul
loopne
push
mov
inc
pop
and
decb
jo
mov
push
jmp
push
fisubl
mov
test
leave
dec
inc
pop
mov
mov
test
mov
sub
push
mov
addb
and
out
jg
call
cmp
jg
js
push
jg
or
cmp
gs
jg
mov
pop
push
dec
fadd
jbe
push
fidivs
mov
add
adcb
mov
adc
and
rolb
and
cmp
and
loop
mov
fsts
cld
pusha
pop
cld
pop
inc
mov
mov
test
mov
xchg
popf
test
mov
or
and
mov
mov
rcll
cmpb
clc
sub
and
aad
jo
or
xor
ret
gs
sbb
and
push
cmpsb
mov
addr16
es
push
movsl
push
mov
mov
aaa
dec
or
loopne
mov
sbbb
call
add
hlt
mov
add
xchg
adc
sub
add
rolb
push
push
cmp
sub
mov
ds
rcrl
enter
adc
mov
push
movsl
dec
ret
loop
gs
and
gs
cmc
mov
jo
inc
push
mov
mov
test
and
mov
test
add
dec
xchg
add
or
movsb
pop
scas
mov
push
adc
push
add
adc
push
mov
movntq
out
out
clc
fstpt
sarl
push
jl
mov
xlat
mov
je
loopne
or
xor
fs
lcall
sub
pop
cwtl
adc
push
je
adc
rclb
dec
orl
inc
andb
cmpsl
stos
sub
push
push
or
sub
lahf
push
test
pop
test
add
stos
and
dec
and
sbb
sarl
adc
sbb
cld
cwtl
mov
pusha
nop
xchg
das
pop
cmpsl
cmp
icebp
addb
arpl
rolb
sbb
push
pushf
adc
mov
xor
mov
mov
insl
ljmp
fiadds
inc
add
aam
add
dec
and
cmp
jnp
decb
out
sub
sbb
adc
mov
and
int3
rcll
das
or
icebp
sub
subb
mov
xor
es
mov
rcrl
and
call
dec
xchg
add
cltd
add
fadds
push
jb
sub
mov
add
je
out
push
jg
push
sub
pusha
shrb
dec
mov
push
in
push
stos
sbb
sbb
arpl
sbbl
or
lahf
mov
popa
jns
ljmp
lcall
mov
add
adc
inc
add
inc
inc
adc
pushf
xchg
arpl
mov
push
or
push
add
inc
and
lods
ret
or
xor
add
daa
and
dec
mov
push
add
adc
idiv
fwait
pop
and
ljmp
mov
pop
lret
sub
mov
loopne
rcl
iret
sbb
mov
in
xchg
add
into
scas
lcall
dec
and
dec
push
jb
sub
pop
jo
nop
add
mov
xchg
xor
nop
sub
test
inc
cmova
lret
sbb
rcrb
loopne
lcall
mov
rol
js
sub
movsl
call
test
add
push
sbb
je
adc
std
pusha
in
or
inc
inc
xchg
icebp
push
add
push
scas
adc
mov
rcrl
dec
stos
call
sbb
inc
je
cmp
xchg
mov
call
fwait
and
or
sbb
inc
int3
into
jae
lret
push
adc
adc
rcl
ljmp
shlb
stc
sbb
in
inc
pop
cld
cmp
xor
add
inc
pop
pop
repnz
les
jno
xor
in
push
xor
xchg
gs
or
adcb
mov
add
xorb
add
and
rcrl
add
cmp
jl
or
ret
sbb
movsb
adc
dec
mov
or
push
arpl
out
decl
pop
rcll
leave
xchg
jae
orb
push
mov
push
sbb
enter
aad
xor
push
fs
push
addr16
cld
xor
sbb
ror
adc
push
jbe
insl
push
mov
and
push
mov
mov
adc
rorb
pushf
ja
call
lea
loope
movsl
arpl
shl
pop
nop
or
push
in
cs
test
jne
xor
pop
pop
add
in
jbe
xor
mov
or
pop
sbb
stos
clc
mov
push
and
insb
jl,pn
mov
lea
push
sub
push
adc
inc
pushf
testb
je
mov
inc
aam
aaa
or
jne
push
push
lcall
mov
adc
and
push
cmpsl
mov
inc
in
mov
out
push
stos
or
adc
pop
pop
ret
mov
jne
cmpsl
mov
cmpl
outsb
cmp
je
add
std
dec
hlt
or
dec
mov
jge
and
nop
and
mov
orl
je
lcall
pop
jns
orb
add
and
mov
popf
inc
or
lret
adc
out
out
testb
jo
pop
cmp
jne
sbb
or
or
cmpl
mov
adc
sbb
mov
pop
cli
outsb
and
lea
aas
jb
mov
sti
jmp
pushfw
into
xor
cltd
out
xchg
out
adc
adc
idiv
jle
sbb
fistpl
pop
or
ret
subl
repnz
pop
sahf
std
xor
repnz
or
push
mov
enter
insb
jae
jo
jmp
ret
pop
loop
shll
push
or
pushl
outsl
jbe
mov
sub
je
jbe
pop
or
pop
or
pop
loop
add
sbb
sub
adc
test
insl
add
loop
dec
push
int
mov
mov
jnp
aas
jp
dec
add
test
mov
xchg
push
adc
push
movsb
insb
ja
xchg
pop
jle
loope
cmp
and
sbb
sarl
jno
pop
jle
mov
xlat
movsb
or
inc
pop
jo
aas
xchg
jno
jae
iret
test
cmp
lea
xchg
sbb
push
cmp
xchg
das
cld
sarl
mov
rcrl
mov
pop
pop
jmp
call
mov
xorl
inc
sti
enter
xor
leave
mov
and
cmp
push
dec
jg
mov
je
lea
add
cmp
jne
or
or
scas
or
xchg
jmp
call
sti
idiv
inc
sti
clc
mov
cmp
jne
mov
inc
pop
je
test
dec
divb
jl
movzbl
das
jo
mov
jmp
cmpb
pop
jnp
fisttpl
jbe
inc
or
ja
xor
add
fistps
psubsw
cmp
imul
pop
mov
cli
ret
cmp
je
cmp
je
inc
out
jbe
pop
lea
out
sbb
data16
add
xrelease
fistpl
xor
cmp
cmp
cmp
arpl
mov
pop
inc
cmpb
and
cmp
sbb
push
cs
pushl
js
pop
bound
pop
in
fildl
std
aaa
jne
pop
incl
rcrb
or
test
ja
arpl
mov
add
push
push
ja
dec
clc
mov
mov
dec
mov
mov
push
add
push
push
mov
mov
push
lahf
mov
xchg
fmuls
sbb
push
mov
and
push
push
xor
frstor
adc
pop
movsb
pushf
hlt
mov
pushf
cwtl
dec
sbb
es
dec
pop
js
jne
jecxz
or
mov
sub
jge
pop
or
orl
clc
push
add
cli
mov
and
test
mov
lock
add
mov
inc
inc
or
std
fcoms
add
add
sbb
mov
fsubr
inc
push
add
testb
sbb
je
or
or
jne
dec
mov
ljmpw
gs
dec
xchg
divl
add
std
add
arpl
enter
adc
add
out
fisttps
scas
rcl
test
pop
jne
inc
inc
jmp
xchg
mov
test
and
or
lods
inc
mov
jmp
push
xchg
or
sbb
sete
mov
shr
mov
dec
test
push
pop
inc
mov
jne
mov
cmpsl
dec
cmpl
or
insl
je
minps
sbb
test
es
pop
sbb
inc
popa
xlat
out
add
stos
xor
scas
or
pop
daa
xor
or
sti
pop
ret
dec
or
aam
mov
fildl
rcl
ffree
test
add
cld
sub
insl
repz
jnp
aam
aaa
xabort
sub
inc
cmp
pop
ljmp
pop
imul
lret
or
jbe
cmp
jae
inc
inc
or
push
push
sbb
nop
fistps
insl
jecxz
sar
mov
pop
add
hlt
movsl
push
scas
xor
xor
adc
je
sbb
push
shll
lea
or
daa
pop
mov
or
cmp
ret
jmp
jmp
jne
movsl
test
insl
jg
je
inc
cmp
add
sub
inc
push
sub
or
stos
sti
jmp
mov
cmc
in
lds
cmp
mov
pop
pop
dec
in
and
cmp
es
test
sbb
test
dec
mov
and
fmul
jae
outsl
add
andl
inc
add
or
pop
jmp
and
mov
sarl
movsl
aas
pop
sbb
in
or
cmp
imul
mov
jl
shlb
push
mov
mov
addl
jae
addb
pusha
inc
mov
lds
and
roll
jmp
mov
adc
jle
or
sbb
add
sti
test
jne
push
stos
push
and
fistpll
sarl
pop
or
sarl
rolb
pop
mov
mov
int
or
inc
cmp
jl
pusha
dec
cld
lcall
pop
and
cmpl
lea
jne
ss
das
enter
jmp
ret
dec
neg
sbb
insb
adc
cmp
mov
push
jo
and
xchg
jle
push
orb
cmp
or
add
addb
jl
cmp
push
dec
ret
pop
test
fcmovb
fsubrs
adc
mov
test
pop
push
cmc
jp
xor
in
pop
sub
sbb
sbb
mov
adc
xor
xor
inc
adc
mov
mov
mov
push
push
adc
jbe
dec
es
insb
inc
mov
or
dec
leave
xchg
sbb
adc
arpl
pop
adc
outsl
add
push
cmp
xor
popa
stos
mov
shrb
xlat
sti
lcall
scas
sub
popa
test
cmp
ret
nop
ret
int3
int3
mov
push
leave
xor
fisttpl
pop
sub
testl
inc
aad
psubsw
out
popf
jnp
adc
adc
push
push
inc
pop
movsb
pushf
imul
fcoms
adc
hlt
mov
cmp
and
mov
jl
jne
adc
mov
mov
insl
inc
call
ret
popl
xor
loope
rcl
jns
push
push
or
push
insl
divl
xchg
sbb
inc
mov
jp
dec
add
outsl
in
pop
scas
imul
ret
push
inc
xor
pop
inc
xor
cmp
cli
cltd
pop
or
testl
mov
mov
pop
cmpsb
adc
and
insl
mov
jnp
shll
mov
je
pop
mov
lea
test
pop
pop
inc
or
scas
mov
insb
mov
sbb
outsb
sbb
ja
fstpt
mov
push
or
or
sbb
fsubr
jmp
mov
jmp
pop
fstps
inc
insb
mov
pop
push
xchg
mov
cmp
push
add
push
and
or
ljmp
jmp
or
dec
pop
and
dec
dec
and
adc
pop
loope
adc
js
in
movsb
test
xor
mov
bound
inc
mov
lock
icebp
shl
cmp
jmp
cwtl
call
inc
aaa
adc
test
jne
icebp
lea
cld
std
test
cwtl
sub
xor
adc
push
sub
in
push
add
in
in
or
pop
gs
sub
or
push
clc
or
ljmp
call
push
mov
leave
leave
pusha
dec
adc
pop
imul
mov
sbb
rcrl
lret
or
mov
push
sbb
mov
in
adc
push
mov
ss
lcall
cmpsl
jg
pop
sti
rorl
test
in
call
pop
xchg
inc
push
sbb
int3
lods
pop
enter
test
jle
cmp
xor
jne
push
push
pop
ljmp
pop
sbb
out
mov
add
out
outsl
test
and
adc
lods
pop
sbb
lds
sbb
insb
mulb
push
adc
scas
push
out
mov
or
mov
mov
mov
sbb
popa
jp
jb,pn
movzwl
cli
and
push
add
pop
lds
xchg
cmp
mov
popa
cmp
add
ds
sub
add
pop
mov
jo
sbb
inc
mov
dec
xor
int
add
andl
jmp
cmp
rep
stos
mov
cmp
js
xchg
pop
cmpb
mov
mov
or
ja
inc
decl
mov
xchg
and
cmp
ljmp
aaa
lret
xlat
add
lea
add
je
mov
popl
add
xchg
neg
mov
cld
mov
inc
inc
adc
mov
jbe
inc
inc
cmpb
aam
pop
ret
sbb
jge
jb
fs
cmpsl
lods
std
js
lahf
scas
push
mov
mov
fbstp
mov
shll
pushl
cli
in
push
add
cmp
xchg
jb
push
cmp
dec
xorb
jmp
or
sti
dec
xor
jmp
push
jno
inc
xchg
cs
ljmp
jo
andl
or
jecxz
or
adc
inc
sub
insl
testl
xchg
cld
cmp
sbb
mov
sub
stos
inc
mov
inc
dec
lea
push
mov
jae
add
or
ret
mov
inc
pop
add
in
pop
xchg
add
clc
jle
rorl
sarb
mov
jb
mov
outsl
mov
ffreep
test
lea
fbld
or
enter
fmuls
and
mov
shr
test
cli
lods
sarl
add
stos
inc
inc
mov
jne
pop
pop
push
in
xor
mov
xchg
push
xchg
and
es
into
std
sbb
pop
sub
fldenv
test
pusha
cmpsb
and
jb
lret
hlt
fisttps
adc
ret
add
mov
mov
je
fildl
ja
and
mov
icebp
add
add
arpl
pusha
pop
mov
bnd
enter
mov
sbb
push
push
and
and
dec
and
mov
icebp
adc
inc
stos
pop
pop
add
mov
push
cmp
mov
fnstcw
imulb
jecxz
jnp
sbb
ret
xchg
fisttpl
pop
push
imul
hlt
add
pop
mov
ja
jmp
lea
mov
loop
roll
mov
inc
into
cmp
mov
mov
add
xor
xor
out
xchg
clc
jbe
test
call
test
je
jb
ret
sbb
add
int
xchg
xchg
mov
pop
jmp
add
jmp
std
jmp
cld
fwait
mov
jmp
or
sbb
in
mov
out
jmp
mov
fbld
or
pop
outsb
imul
test
daa
test
insb
jecxz
sbb
cmp
shlb
xchg
lods
lock
or
and
js
fcoms
xor
icebp
loopne
and
jbe
dec
jne
shl
inc
cwtl
sahf
adcl
and
pop
xchg
push
or
xor
cmpb
inc
push
je
fsubs
imul
dec
stos
out
adcb
adc
pop
subl
adc
jl
imul
adc
inc
sbb
ret
or
or
leave
and
cld
jle
shl
sar
aad
pop
dec
mov
sbb
mov
fldt
clc
jb
mov
push
fdivl
mov
loop
and
sub
movsl
jmp
test
loop
jmp
js
loopne
pop
insl
mov
test
push
lea
pop
ja
nop
adc
jne
pusha
add
mov
mov
mov
xor
push
or
xchg
cmp
int3
lea
sub
add
add
nop
and
inc
aas
mov
je
push
das
add
or
int
xlat
jne
cld
add
pop
in
mov
mov
call
call
shll
clc
cld
mov
je
adc
cmpsb
clc
or
lock
fiaddl
pop
jo
pop
pop
enter
ss
or
adc
or
or
jl
cld
jg
or
std
jecxz
ja
shl
fldenv
in
fdivrl
dec
stc
sub
fsubs
rclb
add
mov
add
outsl
add
dec
push
mov
rcrl
pop
mov
mov
add
mov
daa
and
sub
add
lcall
mov
movsb
lods
mov
xchg
sbb
lcall
adc
imul
imul
add
jp
mov
xchg
loopne
mov
xchg
and
and
icebp
xor
test
or
add
ja
ljmp
adc
sbb
daa
push
jne
shll
sbb
and
push
add
js
push
jle
sti
mov
sbb
push
cmovl
jmp
movsl
inc
adcb
sub
pop
jnp
xchg
lea
push
pop
lods
and
adc
filds
mov
pop
xchg
mov
scas
test
pushf
addr16
pop
push
or
inc
insb
lods
and
adc
push
insb
mov
not
shrb
or
inc
stos
repnz
pop
les
add
shr
jp
imul
fsubl
jge
mov
inc
cltd
and
das
sub
adc
roll
clc
jne
rcrl
aas
dec
pop
or
iret
jbe
leave
dec
adc
mov
insl
aam
cmpsl
dec
mov
jae
mov
dec
add
add
and
decb
sub
cmp
and
vsubpd
mov
or
and
jns
push
adc
outsb
lret
or
add
imul
imul
mov
sar
icebp
aas
jnp
insl
shrl
pop
das
mov
mov
adc
mov
mov
cmp
cmpsb
jbe
repz
lahf
fistpl
sti
inc
ds
jbe
cli
mov
mov
cs
push
mov
leave
and
ljmp
push
sub
mov
dec
push
mov
inc
lods
xchg
in
or
xchg
in
mov
or
test
sub
lea
or
mov
lods
mov
or
aad
push
pop
add
orb
rorl
jae
mov
inc
push
mov
imul
fs
or
sbb
sub
sahf
lds
adc
pop
add
sbb
xchg
push
inc
push
stos
hlt
add
adc
inc
cli
xor
mov
fisttps
or
loope
add
push
in
lret
inc
add
push
call
pop
lds
test
xor
push
or
ja
testl
paddd
mov
dec
xchg
jns
adc
dec
xchg
mov
cmpl
insb
sub
jo
pop
arpl
lds
or
cld
hlt
or
or
out
add
xchg
lcall
sub
lea
push
push
lcall
incl
and
adc
add
lods
mov
ljmp
pop
push
sbb
cmp
dec
sbb
pop
push
xor
push
mov
out
sub
mov
jmp
es
mov
shr
push
or
pop
cmp
mov
jae
mov
cmp
sub
decb
iret
jne
sti
adc
lcall
out
jne
mov
cmp
es
add
pop
and
push
jnp
fnstcw
adc
jmp
es
fnstcw
or
popf
stos
insl
xchg
orl
mov
pop
pop
mov
sbb
lcall
jmp
adc
mov
dec
fsubs
mov
mov
cmp
mov
jo
push
frstor
push
inc
or
mov
jne
mov
adc
ja
jbe
and
or
je
mov
adc
jbe
sbb
into
jne
pushw
fs
test
jl
aad
shl
inc
jmp
mov
push
stc
inc
or
jg
push
roll
add
cwtl
aas
jle
pop
jmp
fwait
or
test
sub
jl
pushf
test
repz
and
mov
decb
jne
in
inc
cli
xchg
sub
or
xor
sub
mov
cmp
rorl
sub
and
mov
or
jp
test
scas
jp
nop
test
dec
lods
insl
aas
test
movsl
and
je
sub
fs
decb
jge
arpl
or
mov
bound
mov
mov
cmp
jmp
inc
pop
sub
orb
je
out
or
mov
lods
push
mov
jmp
je
mov
mov
cld
mov
inc
push
pop
jns
dec
and
sub
ss
adc
cld
lahf
mov
and
minps
sbb
mov
lea
push
imul
and
mov
inc
add
add
adc
pop
jne
je
xor
pop
mov
pop
xchg
push
push
clc
adcb
pushf
sbb
or
cmp
loopne
arpl
mov
adc
inc
adc
add
push
inc
iret
pop
pop
mov
sbb
idiv
jbe
fs
jl
fsubrs
dec
and
mov
incl
mov
cli
inc
add
inc
or
lds
inc
ret
aaa
imul
sbbl
mov
add
dec
addr16
test
out
jns
mov
dec
cs
enter
shl
pop
hlt
fwait
daa
xor
xchg
add
cli
ja
lea
fst
loopne
dec
repnz
fcmovne
pusha
fiadds
movl
jmp
testl
add
aad
jge
or
add
scas
add
mov
ljmp
call
in
add
add
imul
cmp
add
add
sub
cmp
cmp
add
mov
ljmp
rolb
cmp
cmp
sub
cmp
imul
sbb
push
sbb
imul
cmp
sub
adc
movl
cmp
in
incl
repnz
add
imul
push
sbb
sub
in
mov
rclb
movb
sbb
jae
filds
pop
mov
add
movb
jbe
lret
push
ret
lock
stc
adc
ret
jg
outsl
out
sbb
adc
add
clc
sbb
mov
or
roll
sbb
and
xor
mov
mov
imul
clc
sub
mov
sub
mov
mov
out
int
sbb
fidivs
adc
lock
sub
add
or
fidivs
ret
or
cld
sbb
mov
mov
fcomi
add
cli
push
fs
movzbl
pop
mov
fnstsw
add
mov
and
mov
mov
leave
sub
mov
mov
jnp
jle
add
mov
adc
test
je
jo
sub
idivb
or
fsin
or
scas
enter
fsubrl
jnp
jge
add
xchg
pop
add
sbb
mov
mov
in
or
ret
out
adc
cmp
and
mov
insb
fldt
rclb
pop
clc
adc
cmp
insl
xchg
adc
icebp
mov
sbb
fs
insb
in
loope
fdivrl
rol
add
pop
ljmp
idivb
jnp
cmp
stos
sbb
and
jo
sbb
sub
mov
lods
divb
xor
mov
rol
out
adc
sbb
or
mov
sub
ret
adc
or
add
pop
sbb
imul
out
imul
incl
test
lret
mov
out
outsb
fcomi
out
adc
sbb
movsl
cmp
imul
or
sarb
or
pop
push
or
or
mov
clc
sarb
xchg
jg
int3
lock
push
mov
sub
loope
outsl
fistpl
push
pop
push
jnp
xchg
pop
sub
imul
fiadds
jne
lret
mov
sbb
xor
ret
adc
enter
mov
jmp
sbb
adc
sbb
add
jb
adc
insl
sub
or
jno
pop
lods
xor
or
pop
js
add
bound
imul
and
add
mov
rcrb
into
sub
in
sbb
fstp
aaa
cs
inc
rcrb
mov
jle
push
fidivl
insb
push
add
call
repnz
push
jmp
mov
or
pop
inc
popf
call
test
pop
imul
filds
imul
inc
mov
pop
test
mov
pop
in
adc
xlat
into
add
inc
add
stc
pop
sub
loop
cltd
cmp
push
cmp
push
sti
add
mov
jmp
mov
insl
fcomi
pop
push
cmp
sub
add
out
in
push
cmp
rorl
insl
mov
fimull
popf
adc
lods
mov
mov
in
pop
add
div
jo
dec
enter
and
mov
xor
call
mov
inc
lock
fdivrl
sub
mov
ret
xchg
add
mov
jle
jmp
fcompl
dec
xlat
rorl
push
push
xchg
mov
or
inc
loope
mov
add
sahf
jmp
add
cs
jo
sbb
xlat
xchg
outsb
cmpsb
iret
cmp
or
adc
pushaw
jns
sub
adc
test
mov
jmp
adc
adc
or
bound
push
sarb
inc
pop
push
inc
adc
call
mov
fwait
shl
or
idivl
pop
add
mov
adc
enter
mov
out
mov
xlat
pop
adc
pop
aas
xor
cmp
roll
xor
ret
idiv
push
sti
adc
int3
inc
lods
mov
or
jae
jae
mov
ds
or
mov
cmp
and
xchg
and
shl
std
mov
or
sbb
add
jl
xchg
cli
mov
xlat
mov
sahf
hlt
xchg
pusha
xor
xor
xchg
aas
add
in
jbe
cmp
add
or
mov
mov
push
fisubl
cwtl
sbb
push
adc
and
in
sub
mov
or
nop
push
cld
data16
xor
fcomps
sub
or
loopne
outsb
and
adc
push
and
orl
in
or
dec
fwait
sbb
ret
outsb
mov
das
sbb
mov
mov
jnp
push
or
sbb
aam
push
jb
cli
sbb
mov
push
mov
jecxz
out
sub
mov
push
pop
mov
pop
js
incb
mov
iret
icebp
aam
dec
push
lcall
mov
jge
xabort
push
or
rcll
shrl
hlt
loope
outsb
sub
xchg
lahf
jl
push
xchg
lods
lods
adc
cmp
push
cwtl
cmc
mov
es
adc
sub
dec
add
xchg
or
push
sbb
and
call
mov
sbb
xor
or
mov
insb
imul
stc
and
cmpsl
in
leave
adc
xor
inc
lret
pop
in
inc
pminub
fwait
lock
push
fadds
clc
add
sarl
addr16
mov
jne
inc
xchg
ret
bound
jbe
jb
and
sub
jmp
jne
adc
xchg
idiv
xchg
push
mov
fmuls
aaa
sub
mov
cwtl
inc
shll
dec
into
inc
mov
or
rorl
icebp
icebp
leave
cmpsb
stc
pop
into
mov
pop
sbb
test
ficoml
lret
and
out
outsb
mov
rcll
mov
rclb
jns
cmp
imul
call
cwtl
ret
lret
mov
fmuls
pop
fsubrl
push
mov
cltd
je
inc
push
push
mov
rorb
sub
rcrl
fsubs
cltd
xchg
ljmp
inc
inc
mov
mov
rorl
pop
test
ja
add
mov
or
or
hlt
test
lods
mov
push
pop
mov
dec
xchg
cmpsb
cmp
js
add
xor
shlb
cmp
outsb
mov
sub
test
or
mov
or
add
mov
jmp
pop
mov
mov
mov
jp
js
adc
fistl
sbb
icebp
rolb
add
push
into
add
xor
scas
add
rcl
xor
or
add
imul
dec
test
mov
or
push
out
fstpt
xchg
jae
and
pop
out
sti
subl
rorb
lods
shl
jmp
imul
ret
jge
iret
add
pop
lret
in
sub
test
mov
sbb
adc
mov
or
in
push
stc
adc
dec
dec
int
pop
leave
cmpb
or
mov
xchg
add
std
loopne
xlat
push
mov
or
mov
xlat
push
jge
jae
mov
pop
rorl
or
inc
jmp
lock
std
ret
or
jle
mov
sbb
adc
into
or
dec
push
out
neg
sub
rcrb
or
sub
sbb
and
dec
lods
mov
sbb
push
nop
pop
movb
add
sbb
icebp
sbb
xchg
int3
mulb
mov
lock
jno
inc
add
and
das
sbb
xor
xchg
in
xchg
repz
movsl
movzwl
dec
test
mov
andl
mov
aad
cmp
out
dec
insb
mov
in
lods
mov
lock
rcl
sbb
icebp
adc
lock
mov
cli
addr16
sub
cmp
or
sarl
scas
pop
dec
rcrb
pop
mov
mov
shrb
mov
shrl
dec
sub
scas
and
mov
roll
pop
jg
mov
rol
push
jb
pop
adc
mov
pop
lahf
mov
inc
mov
fwait
mov
jmp
push
adc
pop
dec
lds
inc
into
mov
sysenter
shlb
clc
or
aad
sub
div
mov
pop
aad
out
push
insb
push
sbb
push
sbb
sub
loope
mov
mov
mov
test
mov
pop
test
rolb
loop
adc
sbb
push
add
rcr
loopne
xor
push
into
xorl
sbb
ret
mov
pop
push
jecxz
add
rolb
call
insb
adc
pop
aad
jo
insb
inc
add
ret
xchg
gs
stos
cmp
add
and
xchg
outsl
jecxz
sbb
fadd
daa
sar
loopne
rcrl
push
mov
fs
sub
sbb
shrb
jb
sub
dec
fstps
imul
test
js
xor
movsb
sbb
outsl
jg
pop
or
mov
xor
cmp
dec
jg
int
jnp
insb
call
add
sbb
or
or
pop
add
mov
and
xchg
sbbl
jo
xchg
cwtl
mov
xor
cwtl
into
inc
movl
adc
adc
adc
popa
push
pop
mov
push
inc
push
cld
push
dec
nop
mov
outsb
or
xchg
sahf
add
mov
or
or
jl
mov
bound
mov
fwait
xor
mov
shl
pop
int3
cmp
sub
dec
in
mov
rcrb
cmp
dec
gs
cmpsb
cmp
adc
push
jne
mov
or
rol
and
cwtl
xor
insl
jb
inc
push
das
ljmp
xchg
repnz
mov
mov
add
mov
into
js
push
push
pop
fsubr
push
aas
push
push
sbb
addr16
pop
pop
ret
rcr
insl
cs
or
or
mov
stc
ret
push
clc
pop
sub
xor
int
icebp
mov
mov
add
mov
loopne
or
ret
xchg
mov
or
dec
popf
cmp
add
cltd
dec
decb
push
adc
ljmp
mov
xchg
leave
push
push
push
push
push
mov
inc
xchg
push
out
add
and
add
clc
push
xor
sbb
clc
push
stos
in
jnp
mov
jl
push
rorb
adc
scas
add
pop
mov
xor
or
add
sub
sbb
add
aaa
inc
shll
or
and
push
mov
jo
test
pop
push
js
addl
jmp
int
cmp
call
int3
rcrl
lock
sub
daa
push
sbb
ret
jo
mov
add
or
cli
xchg
mov
iret
cli
inc
ret
add
addl
pop
jge
push
adc
xor
sub
mov
addr16
rcl
add
addb
neg
in
mov
push
dec
push
inc
cmpl
pop
or
dec
sub
sub
rcrb
cmc
mov
shrb
sbb
add
stc
fcoms
and
loopne
mov
rorl
sbb
mov
jbe
mov
lcall
test
or
or
pop
cmpsb
mov
sbb
fstpt
inc
jbe
push
sarb
or
shrl
shr
sbb
push
or
sahf
ljmp
or
repnz
add
pop
mov
cwtl
ds
imul
ljmp
hlt
lret
pop
cli
imul
add
ja
cmc
push
and
ds
mov
sbb
cmp
fwait
and
aad
pop
std
leave
inc
mov
sbb
dec
pop
xor
in
add
iret
fisubrl
cwtl
mov
ljmp
outsb
cmp
stos
cs
or
ds
enter
rcll
dec
pusha
sahf
push
mov
in
sub
aam
xor
clc
push
icebp
ret
mov
mov
mov
fs
and
mov
loope
sbb
mov
xor
sbb
fadd
out
cmp
shld
les
push
or
cmp
jmp
shlb
gs
shl
imul
push
push
dec
les
and
in
add
mov
or
movsl
mov
icebp
push
out
push
xor
out
cld
pop
and
cld
add
movzbl
mov
test
push
sub
jbe
shrl
mov
loop
add
adc
pop
int
pop
jl
cmp
add
je
loopne
sbb
lcall
nop
ret
adc
cli
arpl
mov
rol
ficoml
mov
rcrl
popf
gs
jp
imul
adc
inc
scas
negb
vmovups
pop
test
enter
js
sbb
mov
mov
adc
sub
dec
daa
xor
daa
into
cmpsl
icebp
mov
fisubrl
dec
cltd
call
add
push
xor
aam
xchg
lds
jne
sbb
xorl
pop
pushf
cmp
icebp
sarb
call
out
orl
nop
mov
aaa
add
cmpsb
sbb
iret
repz
out
out
lahf
sbb
cld
rcll
test
enter
adc
lock
push
or
cmp
sbb
push
mov
sbb
es
mov
add
jl
or
inc
repnz
ds
xchg
adc
add
jp
imul
push
enter
pop
add
pop
loope
int3
push
test
lods
inc
pusha
jae
loopne
mov
pop
loopne
test
inc
xchg
push
adc
jno
pop
hlt
jp
test
push
xor
jns
adc
pusha
sub
in
add
push
test
scas
add
or
mov
xchg
mov
mov
test
cli
pop
or
cli
xchg
outsb
les
adc
xchg
nop
aam
pop
icebp
xchg
ret
ror
pop
mov
adc
mov
stos
fisttpll
sbb
pusha
pop
inc
or
xor
jl
loope
fucomip
roll
shrl
cmp
mov
mov
fstl
pop
sub
add
adc
lea
and
ljmp
push
add
into
outsl
ljmp
pop
sbb
adc
icebp
punpckhbw
enter
adcb
les
rolb
push
cli
mov
out
xchg
loop
arpl
pop
or
or
mov
sub
mov
stc
or
test
jno
lds
add
or
mov
aaa
int
mov
ljmp
xchg
imul
in
push
or
daa
adc
push
das
in
cltd
xor
ud1
test
cmp
mov
xchg
mov
js
push
sbb
pop
popa
cwtl
insb
imul
scas
adc
xchg
push
mov
push
loope
mov
sarl
dec
push
sbb
out
or
outsb
and
mov
jb
sbb
loop
sbb
xchg
adc
test
push
jo
sarl
aas
or
sbb
or
mov
in
xor
xorb
xor
test
inc
leave
loopne
and
xor
out
stos
adc
dec
sbb
aam
inc
push
ljmp
jge
inc
repnz
push
pushf
test
cmpsb
mov
int
add
sub
test
orb
lea
js
add
push
mov
sub
sti
stos
orb
insb
xor
cmp
test
adc
nop
and
add
movsb
pop
shll
add
add
bound
jmp
neg
adc
lret
push
aad
inc
adc
loopne
or
dec
add
push
jno
and
pavgb
insl
jp
fisttps
dec
push
cld
dec
sbb
adc
rorb
push
cmp
mov
xchg
jmp
hlt
mov
nop
cmpsl
rclb
push
xorl
push
inc
mov
xchg
mov
mov
jbe
push
clc
sbb
popa
test
rcl
push
xor
sbb
pop
icebp
sub
adc
fldl2t
and
and
xchg
sbb
pop
icebp
sbb
sbb
inc
jbe
ret
push
movb
jge
adc
adc
fcmovnb
push
mov
lods
sbb
push
sub
inc
leave
pop
sbb
push
push
mov
mov
mov
cmp
xor
adc
mov
adc
into
cmp
mov
lcall
es
test
sbb
cmp
subb
loopne
test
mov
fidivl
jmp
adc
or
clc
pop
dec
sbb
rclb
es
andl
push
adc
outsb
rclb
ljmp
add
inc
sub
out
add
adc
ret
into
test
out
test
xchg
bound
and
sbb
lcall
dec
inc
aas
sbb
jl
xchg
sub
in
inc
pop
scas
pop
ja
mov
es
ljmp
cld
or
clc
negl
outsl
sub
or
cmp
add
push
pop
lods
mov
lea
arpl
pop
mov
clc
or
je
add
push
sbb
pop
lods
lcall
push
aam
stc
pop
jb
mov
dec
es
and
dec
shll
push
sub
popf
mov
push
cmp
jbe
mov
popa
or
sub
in
mov
mov
push
fxch
lret
adc
clc
push
js
fs
jmp
addb
roll
pop
je
xor
mov
jo
push
dec
push
add
cli
andb
sbbl
je
adc
inc
ret
push
cmp
adc
sbb
xor
sub
jns
push
sub
lods
and
fdivrp
sti
enter
xchg
pop
jmp
cmp
dec
inc
inc
and
stos
pop
sbb
mov
mov
xchg
sub
pop
jmp
icebp
inc
addr16
jae
xchg
jmp
push
or
rcrb
leave
dec
or
ljmp
outsb
cmpb
sub
shlb
je
cmpxchg
xor
mov
pop
arpl
mov
aad
mov
add
rcrl
popf
push
mov
xor
aam
sbb
sbb
cmpsb
fs
mov
addb
adc
push
push
jmp
pop
and
adc
xlat
rcll
int3
rolb
push
cs
sub
pusha
xlat
lods
insb
notl
mov
or
and
or
cmp
std
or
push
jnp
les
ret
xor
and
movsb
or
mov
test
sub
mov
push
xor
shlb
inc
inc
cmp
xor
pop
jle
lcall
adc
je
notb
mov
shl
out
add
and
xchg
mov
divb
xchg
inc
xchg
ss
mov
shll
mov
fisubrs
push
sbb
mov
xchg
xchg
pop
mov
sbb
inc
cmp
in
aad
sbbb
pop
cli
add
and
mov
push
mov
inc
das
xchg
sbb
xchg
xor
xor
push
add
xor
dec
popf
or
cmpsl
ret
push
xor
decl
jecxz
test
into
loop
push
push
or
mov
ds
add
fistps
inc
lock
mov
push
cltd
sub
cli
push
movsl
xchg
shlb
mov
test
add
jle
lcall
lods
enter
jne
jmp
mov
adc
push
push
cld
push
addl
mov
dec
jne
sbb
sbb
push
and
cwtl
adc
dec
mov
add
arpl
add
outsb
push
dec
xchg
lret
orl
mov
inc
cmp
test
loopne
enter
inc
inc
xchg
mov
jne
mov
sub
or
xchg
aaa
xchg
push
and
mov
dec
or
and
sbb
dec
sbb
pop
rcr
rolb
xor
outsb
sub
xchg
scas
lea
lret
push
jo
pop
sbb
lock
push
ret
push
or
lahf
lods
sbb
xchg
stos
push
or
test
mov
pop
xor
push
aam
mov
jns
lods
adc
xor
xor
aaa
mov
sarb
lret
add
pop
and
cmp
mov
sub
aad
aad
or
or
push
mov
stos
sbb
out
es
and
bound
dec
push
fisubrl
add
pop
sub
icebp
cmp
movsl
add
mov
fadds
in
push
iret
push
mov
cmc
adc
loop
mov
inc
outsb
aad
or
test
xchg
push
in
xor
outsl
adc
movsl
push
dec
int3
notl
lea
xchg
sbb
push
mov
jg
or
xor
adc
sub
jecxz
cmpsb
adc
push
inc
add
sbb
pop
sbb
sub
mov
dec
inc
sar
adc
sbb
data16
es
into
jae
enter
xor
enter
mov
add
adc
mov
int
mov
jns
cld
jmp
imul
cltd
into
ss
add
mov
pop
jae
push
iret
push
or
mov
popa
sbb
jo
aad
or
mov
loopne
add
addb
dec
call
xor
push
pop
sub
mov
inc
lret
test
add
addr16
adc
add
aad
int
pop
push
dec
std
push
mov
pop
fprem1
js
and
flds
enter
sbb
sbb
jb
push
repz
shr
lds
ret
adc
mov
sbb
mov
pop
sbb
inc
and
xlat
adc
jmp
mov
push
push
push
xchg
mov
outsb
mov
mov
or
cmp
sti
mov
and
or
inc
cmp
arpl
fchs
add
je
sbb
test
push
mov
pop
dec
sbbl
inc
xorb
jo
jle
jl
jge
xor
pop
pop
adc
xor
lahf
xor
rclb
add
ljmp
lret
out
incb
es
into
jo
sbb
cmp
inc
les
adc
test
and
sbb
push
mov
mov
pop
inc
mov
je
lret
lock
sbb
jb
inc
xchg
add
cmpb
xchg
loope
adc
push
fcoms
cmp
mov
mov
out
or
sahf
push
push
xor
js
push
cmc
mov
pop
cmp
rcrb
shll
sub
int3
out
sbb
mov
jmp
enter
mov
cmp
lret
nop
jae
xor
dec
cmp
or
add
fwait
sub
sbb
sbb
push
call
sti
ljmp
pop
or
insb
rorl
mov
mov
or
or
cmpsb
jno
mov
lahf
das
mov
rol
scas
jo
xchg
dec
cwtl
push
movsb
pop
aad
or
push
popa
rorb
sub
out
push
cmpsl
fcom
ret
aaa
cltd
call
jg
test
std
dec
sbb
adc
pusha
shrl
or
mov
adc
adc
lea
rcll
push
mov
xchg
cmp
adc
dec
and
jb
jb
leave
mov
mov
shll
or
pop
push
adc
inc
outsl
push
and
leave
outsl
pushf
out
inc
or
dec
clc
lret
sbb
add
push
test
negl
das
push
fisttps
cmpsb
xchg
mov
xchg
shlb
addb
add
push
scas
sbb
out
push
popf
negl
aam
cmpb
scas
jmp
jmp
popa
push
mov
in
cmp
and
dec
hlt
xor
mov
or
and
sar
add
daa
fisubrl
cmp
movsl
push
add
xor
add
sbb
or
test
add
test
mov
enter
add
mov
mov
push
xchg
adc
punpcklbw
mov
mov
xchg
enter
dec
sbb
sbb
or
adc
rorb
imul
or
test
addb
sarl
xchg
arpl
or
jbe
push
sub
adc
add
or
jbe
iret
mov
and
cwtl
int
dec
out
xchg
pop
jne
xor
or
ss
jmp
leave
pop
fimull
rcrb
push
jl
push
pop
cmp
or
stc
sbb
jo
push
sub
inc
scas
pop
cmpb
add
mov
pop
dec
push
cld
adc
mov
rcll
bound
roll
push
pushf
fstps
jecxz
adc
int
mov
jo
jo
pop
and
add
xlat
loopne
shll
rcrl
js
jnp
jle
xor
xor
lahf
fs
cmp
lock
gs
pop
cmpsl
adc
jl
movl
sbb
pop
inc
inc
jecxz
add
xor
ret
xchg
or
mov
jge
orb
sub
pop
test
mov
or
adcb
and
cmp
push
mov
stos
inc
jge
jns
inc
sub
movl
call
push
ds
pop
das
inc
loopne
jp
push
sbb
in
sub
or
cmp
pushf
adc
sbb
and
out
popa
push
popf
jecxz
pop
or
adc
jae
popa
and
xchg
dec
ficompl
push
cmp
js
lods
push
adc
orb
pop
ds
add
push
dec
adc
aad
mov
mov
jle
and
sbb
fldl
xor
push
sbb
pusha
inc
das
rolb
push
jo
sbb
stos
int
lea
add
or
xor
insb
pop
dec
mov
push
lret
ds
xchg
aad
or
cld
and
adc
dec
sub
mov
jmp
push
mov
mov
mov
adc
fstpt
dec
enter
popa
adc
inc
jno
dec
jge
leave
dec
mov
icebp
pop
xorl
cs
and
mov
rolb
mov
insb
repnz
fstpt
mov
cmpsb
aam
mov
sbb
mov
xor
orl
pop
mov
fimuls
cmp
sub
nop
xchg
addb
jnp
in
cld
dec
inc
inc
stos
clc
sbb
mov
scas
cmc
mov
andl
lock
dec
filds
dec
outsl
test
jge
push
daa
scas
or
sbb
inc
sbb
leave
inc
dec
or
pop
dec
bound
mov
push
addr16
push
mov
inc
scas
test
adc
stos
in
lock
push
inc
stos
adc
movb
cld
flds
stos
and
push
cmp
jle
addb
aam
push
lea
aad
sbb
aaa
or
pusha
sbb
dec
lds
inc
test
movsl
testb
enter
mov
dec
movsb
mov
mov
or
push
aas
sbb
cmp
adc
shll
jae
push
sub
sbb
cmc
mov
inc
cs
xchg
shll
shll
add
imul
sbb
push
mov
xlat
scas
ljmp
cmp
mov
sarl
xchg
xor
adc
leave
and
sub
sbb
rcrb
jnp
mov
lods
push
mov
inc
jp
jo
push
ror
jbe
pcmpgtb
push
mov
enter
cld
loop
ja
mov
push
fildl
pop
add
sub
aad
mov
lret
inc
sub
inc
cmp
and
icebp
and
rcrl
pushf
loop
shll
xor
out
sbb
incl
xchg
or
cmp
in
icebp
xor
repnz
cmp
add
or
movsb
pop
popf
jo
mov
or
and
nop
and
mov
adc
shlb
or
out
and
jo
pop
xor
dec
push
sbb
add
in
jb
ja
xchg
pop
repz
repz
js
cmp
push
clc
dec
clc
cmp
scas
sarl
jecxz
mov
add
leave
inc
sbbb
js
mov
or
inc
and
dec
pop
mov
enter
sbb
push
xchg
or
test
push
cwtl
lock
mov
push
je
stos
sbb
repnz
and
cli
or
or
scas
imul
add
mov
popa
rolb
dec
xor
add
mov
aaa
xchg
inc
loopne
cmpsb
xchg
adc
dec
ret
mov
inc
push
push
mov
cltd
out
popa
sub
mov
mov
or
inc
or
sbb
mov
sarl
push
rolb
lret
sbb
mov
nop
xchg
xor
pop
rcrb
add
rclb
jae
and
rclb
add
adc
mov
mov
cmpsl
adc
jo
shrb
int3
push
or
test
adc
outsb
cmp
ds
push
inc
dec
push
cli
test
repnz
and
aad
or
and
mov
push
arpl
cmp
flds
jo
clc
lods
lret
nop
mov
mov
sbb
rcrb
scas
and
mov
clc
adc
pop
xchg
stos
stos
push
sbb
enter
xchg
orb
inc
sub
or
add
push
test
mov
jo
inc
cmpsb
jb
idivl
add
sbb
cmp
fld
mov
sarb
mov
mov
ret
daa
add
push
testb
or
push
mov
or
mov
clc
or
add
loope
adc
mov
loopne
inc
push
push
cmc
rorl
rcll
mov
fisubrl
popf
ljmp
sbb
jle
or
mov
repnz
cmp
mov
lret
ja
and
or
imul
shlb
add
push
push
and
sub
sbb
push
xchg
pop
xchg
je
mov
scas
aad
and
push
xlat
cmc
bt
testb
scas
and
jb
les
inc
jnp
mov
dec
shlb
lods
or
lock
sbb
xor
or
rorl
or
inc
rcr
add
mov
adc
int3
ret
sbb
negl
jl
pop
mov
leave
sti
adc
rorb
adc
dec
jo
les
outsl
lret
daa
cli
cmpsb
ret
rcll
push
push
and
scas
fwait
add
adc
mov
mov
mov
or
jbe
subl
pop
ljmp
sub
sbb
dec
cmp
outsl
adc
ftst
dec
push
and
dec
ret
mov
sub
xlat
inc
inc
sbb
es
inc
loopne
lret
inc
jno
xor
sbbb
xor
mov
jbe
and
rorb
or
sbb
add
dec
mov
cmp
repnz
push
pop
or
or
mov
add
mov
dec
sbb
dec
repnz
xchg
cld
adc
iret
push
lret
or
addr16
scas
push
sbb
pop
aas
mov
les
cs
orb
rorb
in
test
pop
cmpsb
inc
popf
bound
cmpsb
push
shll
adc
test
adc
ret
xor
xchg
pop
mov
sbbl
pop
fwait
shl
ror
andb
dec
or
add
mov
push
pop
push
rcll
testb
aaa
js
fcompl
jge
inc
fimull
push
pop
xor
ror
mov
add
jp
insb
inc
xchg
roll
loopne
fiaddl
scas
scas
inc
mov
jnp
popf
mov
sbb
sub
aad
test
push
dec
push
mov
rclb
sub
push
mov
iret
xchg
adc
cmc
or
cmp
pop
sub
mov
mov
sbb
lret
adc
ja
cmpsb
imul
mov
test
mov
and
pop
push
test
push
js
sub
sbb
into
sbb
sbb
or
adc
sbb
dec
xor
mov
inc
sub
pop
aam
push
add
add
icebp
jne
mov
jg
sarb
pop
mov
sbb
fcmovnb
push
push
adc
mov
test
xchg
mov
lods
bound
sbb
mov
les
add
cvtpi2ps
pop
call
sub
testb
push
stos
xor
stos
rdtsc
leave
add
push
add
out
mov
nop
mov
sarl
mov
xchg
mov
sub
into
or
adc
ret
pop
add
pop
sbb
ja
add
jo
mov
adc
push
lods
aaa
push
xchg
lret
sbb
and
lcall
push
int3
les
cmpsl
popf
shll
cmpsb
ss
lret
mov
mov
xchg
mov
push
push
push
push
xor
jecxz
push
in
faddl
rclb
mov
xor
jno
mov
cmp
dec
and
rcrb
push
stos
filds
sahf
push
cli
pop
push
clc
push
and
subl
or
add
lret
call
sbb
mov
loopne
and
popa
push
sbb
insl
xor
andl
push
and
mov
or
sbb
add
inc
fcom
movb
cmp
stos
xchg
add
dec
and
sub
xor
inc
sarl
sbb
add
lret
mov
and
ret
sahf
ret
ret
in
push
call
stc
jl
cmp
addb
ds
cmpsl
roll
push
into
popa
mov
cmp
dec
sbbl
data16
push
scas
or
nop
and
push
pop
sbb
aam
adc
adcl
aas
fbld
enter
mov
fstpt
loopne
movnti
icebp
loop
push
inc
icebp
popa
mov
xor
jbe
or
stos
shrb
lcall
pop
jne
push
movsb
sbb
leave
and
shll
inc
and
out
pop
sbb
and
and
push
shlb
out
push
or
pop
inc
movsb
mov
popf
jmp
in
adc
cmpsb
cmp
sub
fstpt
sti
xchg
rclb
orb
mov
mov
pushf
jo
inc
cmp
sub
xor
pop
pop
inc
sbb
fcmovne
sbb
movl
jb
cwtl
mov
sbbl
ret
loope
adc
mov
mov
imul
push
jae,pn
aad
lahf
lds
jecxz
sub
js
in
inc
add
xchg
ljmp
pop
push
in
jmp
xchg
adcb
leave
push
pop
ljmp
adc
push
jo
inc
ret
cmp
cmpsb
dec
xor
xor
cmp
repnz
or
push
push
loopne
leave
add
pop
imul
in
and
and
inc
dec
cli
js
jb
inc
popa
fsts
es
inc
mov
movsb
or
sbb
lds
lcall
mov
xchg
jp
data16
jle
push
pop
inc
mov
add
pusha
stos
jp
aad
cwtl
xor
lret
xor
sub
adc
sbb
mov
imul
pop
insl
inc
and
dec
add
mov
jg
adc
sub
scas
jp
push
lcall
pop
mov
pusha
jo
add
mov
fadd
push
mov
mov
lds
jb
pop
sub
jp
iret
divb
mov
pop
mov
popf
rclb
sub
icebp
lea
cmp
out
add
cmpsb
dec
into
sub
aam
add
or
sbb
mov
and
push
sbb
movl
sbb
daa
ds
das
fsubs
ljmp
pop
ss
sbb
punpckhbw
ja
push
sub
call
pop
icebp
icebp
sbbb
push
push
adc
lods
inc
xor
icebp
cmp
mov
add
mov
cmc
lock
lock
insb
push
loopne
popa
daa
mov
mov
dec
push
dec
jo
sbb
ret
push
scas
data16
inc
sbb
sub
dec
pop
sub
mov
jbe
push
daa
cmp
cmp
iret
xor
mov
push
xchg
cmp
js
cltd
sbb
xor
sub
jge
pop
xor
lods
cmp
push
iret
mov
add
ljmp
push
shrl
and
or
cwtl
leave
inc
andb
test
rcl
jecxz
mov
dec
in
ss
stos
ret
mov
dec
hlt
push
mov
push
and
insb
add
adc
push
sbb
add
jae
and
arpl
ret
cmpsb
xor
dec
mov
stos
and
mov
dec
imul
gs
push
lret
sub
mov
add
ficomps
sbb
lods
adc
repnz
daa
mov
push
repz
mov
push
inc
insb
enter
pop
mov
dec
test
hlt
sbb
adc
cmp
stos
loope
sbb
test
mov
sub
popf
mov
lret
dec
xlat
and
cmp
dec
addl
mov
jb
fs
movsl
rorb
ret
pushf
sub
add
add
rol
adc
xlat
into
inc
sub
add
add
push
or
cli
data16
xchg
mov
test
add
inc
cld
sahf
inc
push
js
mov
add
push
inc
add
daa
mov
lods
pop
les
clc
jne
shr
das
inc
stc
add
pop
add
movsb
call
fisttpl
mov
push
inc
int
mov
or
xor
jb
xchg
jl
test
and
adc
fmull
inc
test
das
rolb
or
ret
push
push
rcll
xor
ret
loope
mov
add
fs
aad
mov
xchg
cmpsl
mov
and
pop
xchg
call
add
psrlq
pop
fs
adc
lods
mov
and
sbb
mov
leave
sbb
sbb
mov
cltd
enter
jo
es
xor
sub
adc
lea
jecxz
dec
leave
mov
fs
push
imul
cwtl
adc
xor
inc
jo
adc
loopne
push
push
pop
dec
rolb
pop
adc
out
sbb
cmpsl
push
sbb
hlt
push
test
addl
mov
push
pop
or
cmp
pusha
rcll
repz
jne
mov
dec
sub
sbb
cmp
add
ret
jmp
sahf
xchg
fldl
or
loopne
icebp
or
pop
cmp
sbb
imul
and
push
mov
and
pusha
movsl
adc
or
ret
and
xchg
dec
sbb
or
out
push
add
cmp
popf
sbb
sub
aad
or
jl
push
adc
out
push
test
push
cmp
add
inc
push
xor
rcll
push
push
xor
test
add
test
jo
fiadds
push
mov
mov
mov
inc
sbb
push
subl
popf
nop
add
repz
divb
sub
mov
shlb
dec
lods
scas
stos
xor
push
sbb
rclb
push
pop
pcmpeqb
xor
scas
inc
xchg
and
inc
fildl
add
lods
push
lahf
ljmp
ret
sbb
mov
or
ds
ja
dec
push
sarl
nop
stos
gs
ret
mov
scas
bnd
pop
add
inc
inc
repnz
and
cmp
inc
or
mov
call
insb
testb
sub
orb
call
adc
xchg
int
stos
pushf
sub
add
lea
notl
jns
insl
pop
inc
loop
cwtl
lock
mov
pusha
inc
sub
mov
mov
xchg
ret
and
repz
sbb
sub
cmp
add
adc
arpl
mov
pop
push
mov
roll
clc
add
imul
repnz
and
add
push
test
xchg
or
cmpsb
xchg
mov
push
or
inc
and
push
jecxz
sbb
xor
pop
sub
pop
stos
inc
push
nop
lods
daa
jmp
adc
cmp
adc
loope
and
inc
testb
faddl
mov
pop
aad
xchg
or
dec
gs
add
mov
fmull
jg
stc
or
aad
shl
into
jmp
xchg
hlt
push
test
inc
lods
cmp
mov
sub
push
inc
orl
daa
dec
adc
or
shrb
int3
sti
adcb
adc
add
and
test
imul
mov
in
push
sub
outsb
call
gs
sbb
add
sbb
jmp
push
push
lock
enter
or
add
and
cmp
dec
cmp
adc
sbb
and
xchg
arpl
mov
ljmp
push
out
pop
mov
mov
sbb
arpl
bound
and
adc
popf
test
push
rcl
test
pop
pop
aam
pop
lods
jo
and
xor
push
std
cmp
add
out
jle
adc
mov
mov
adc
push
rorb
xchg
dec
inc
ja
arpl
mov
adc
movzwl
inc
inc
testb
lahf
insl
push
pop
inc
lock
push
test
cmpsl
sub
sbb
sbb
push
sbb
subb
icebp
jp
adc
or
ljmp
cltd
jp
mov
sub
push
push
and
adc
andb
or
cmp
and
xchg
pop
daa
movsl
stos
sbb
adc
xor
mov
and
call
dec
int
jb
dec
xor
ret
mov
insl
sbb
inc
test
repnz
push
jne
shr
push
fnstcw
les
lock
cmc
scas
popl
call
sub
arpl
jmp
shlb
sub
and
inc
jne
fldl
popa
stos
sub
xor
ss
dec
inc
xor
or
hlt
sbbb
inc
lcall
or
mov
xchg
ret
adc
pop
push
sub
or
ljmp
sub
inc
or
adcb
leave
cmp
in
sub
loope
sti
push
jl
ret
sub
push
bound
and
movsl
sbb
adc
pop
xchg
notb
mov
ret
jmp
sub
push
push
loopne
sbb
add
pop
mov
mov
inc
jno
push
xchg
mov
sbb
pop
lds
pop
pushl
sbb
lods
sbb
jae
inc
test
shlb
push
lods
subb
pop
popa
add
ljmp
push
dec
jne
test
ljmp
ret
mov
les
or
stos
in
add
adc
mov
lea
or
mov
enter
mov
add
mov
in
add
add
mov
stos
sbb
push
push
inc
orl
adc
jno
jae
cltd
pop
nop
push
fst
data16
add
xchg
ljmp
and
inc
pop
ljmp
stos
das
sub
mov
lea
push
add
repnz
ljmp
pushf
mov
add
add
lret
jp
movsl
mov
add
ljmp
subl
test
pop
cmp
and
shlb
and
adc
test
data16
xor
cmp
js
ret
and
cmc
jge
cltd
call
adc
lret
sbb
mov
call
inc
mov
inc
jl
add
pop
or
mov
or
add
scas
int
pop
add
int
adc
pop
xlat
pop
cmp
xchg
test
cmp
mov
shlb
stos
push
adc
add
cwtl
xchg
adc
out
pop
jo
xchg
and
mov
add
test
push
ds
jge
lods
outsl
xchg
rcll
lods
loop
xlat
sbb
inc
shll
test
pop
loopne
out
shr
int3
push
aam
cltd
pop
nop
mov
repnz
ljmp
fs
inc
push
subl
xchg
rolb
push
mov
scas
push
leave
stc
push
lfs
add
loope
sub
add
jmp
inc
dec
add
bound
cmp
add
aad
adc
sti
psubsw
loopne
cmp
sbb
pop
mov
mov
cltd
inc
add
insb
movsl
ljmp
mov
dec
int3
inc
cli
sbb
inc
or
xor
or
mov
sub
dec
les
lods
cmp
daa
sub
mov
jmp
mov
add
in
roll
insb
mov
add
mov
dec
int
loop
and
in
out
push
add
add
test
rorb
xor
push
jle
mov
dec
orb
push
shl
push
pushf
or
and
mov
mov
xchg
jne
push
or
add
aas
add
push
cmp
je
lock
adc
test
sbb
xor
sbb
pop
aad
add
or
cs
repnz
jmp
dec
pop
xor
addb
add
mov
push
int
test
add
arpl
adc
lods
add
sbbb
push
ret
loopne
xchg
in
ljmp
loopne
xorb
in
incb
sbb
scas
xor
mov
fadd
aam
ret
mov
js
mov
imul
push
and
cmp
xor
mov
ret
xor
add
mov
add
pop
xchg
mov
int
repnz
cmc
and
sbb
sbb
push
or
sbb
xchg
aaa
enter
test
adc
addl
xchg
mov
sub
inc
jne
pop
cld
xchg
pop
decl
push
sbb
cmpsb
stc
add
xlat
enter
mov
bound
mov
emms
sarb
add
cmp
push
movsb
jmp
adc
add
into
ljmp
sbb
add
mov
or
or
mov
dec
dec
add
add
mov
push
mov
or
jp
adc
sbb
sub
sbb
dec
mov
andb
and
xor
pop
or
imul
push
icebp
stos
pop
adc
cmp
and
cmpl
mov
lds
mov
mov
stos
pop
cmc
sbb
cmp
mov
pop
add
push
push
or
pop
adc
xor
test
scas
ss
mov
lock
xor
jo
shrd
iret
es
outsb
fistl
inc
mov
add
pop
int3
push
inc
roll
sti
stos
add
notl
mov
mov
sub
adc
push
xor
test
push
adc
stos
lahf
js
mov
dec
das
push
imul
adc
movb
ret
xor
push
or
stos
insb
fwait
pop
lods
ret
jbe
mov
jbe
dec
mov
insl
lds
jg
cmp
rol
insl
add
inc
adc
cs
iret
sbb
adc
push
inc
push
rcl
xor
loope
sahf
into
add
pusha
stos
cmc
sub
bnd
cltd
scas
aaa
adc
mov
xchg
add
xor
dec
add
lods
out
gs
add
jo
or
xor
cmp
je
aaa
cmp
pop
xchg
es
cmp
and
push
cwtl
stos
les
dec
inc
sub
shrb
in
push
mov
loopne
jle
cmp
add
xchg
jp
or
inc
sub
push
lea
jnp
pushf
stos
jo
mov
mov
ljmp
sbb
add
and
cmp
scas
mov
test
arpl
mov
movsb
and
movsb
mov
mov
dec
push
or
test
inc
fdivrp
daa
push
sub
fnstsw
cmp
stos
gs
jne
mov
fwait
mov
imul
loope
adc
push
cmc
mov
scas
call
or
js
sbb
test
push
imul
inc
mov
mov
inc
xor
test
adc
push
andl
test
sti
je
roll
lds
push
mov
sub
push
inc
pop
pop
push
mov
mov
subl
lcall
and
mov
scas
jb
pop
inc
xchg
inc
sbb
rclb
imul
sbb
or
or
add
aam
inc
out
enter
push
push
daa
cmp
mov
mov
sub
push
add
arpl
hlt
or
sbb
sbbb
dec
xlat
inc
pushf
jno
jmp
bound
push
pop
xor
das
pop
push
pop
cmp
out
imul
rorl
sbb
dec
jb
push
push
js
inc
lods
inc
pop
add
push
dec
inc
push
iret
mov
cmpsb
ret
xchg
cmp
jp
xchg
jl
inc
add
ret
and
loopne
stos
cs
mov
jo
stc
sbb
inc
sub
and
mov
fs
xor
mov
out
outsb
pop
in
sbb
adc
sub
jbe
push
pop
cmpsb
xchg
aas
lock
dec
pop
pushf
xor
push
add
jo
mov
shrb
add
repz
xchg
or
pop
mulb
jmp
push
add
in
push
mov
mov
jl
pop
xchg
mov
push
mov
sbb
or
enter
shlb
imull
cmp
mov
push
or
pop
ja
jo
push
or
adc
sub
add
pop
or
sbb
adc
loope
or
push
xor
scas
mov
mov
iret
xchg
or
jmp
test
addr16
cwtl
rcrb
jl
pop
jle
sbb
jge
mov
adc
lods
mov
xor
jl
pop
test
dec
icebp
stos
jle
push
adc
push
cli
loopne
cs
daa
cmp
add
mov
pop
push
and
add
into
jmp
and
mov
mov
stc
cli
sbb
jmp
cmp
pop
ror
int
add
test
aam
sub
xchg
mov
push
mov
shlb
inc
cs
adc
inc
xor
shlb
xor
mov
jbe
sbb
jno
sbb
stos
loope
adcb
leave
fstps
rol
dec
mov
pop
adc
mov
fstps
cmp
lock
sbb
add
ret
dec
les
mov
sbb
or
dec
or
sbb
mov
sub
mov
push
dec
sti
adc
and
xor
lret
lret
outsl
rcrl
xchg
sahf
xor
pop
mov
sub
xchg
mov
shll
and
cmpsl
sbb
pusha
xchg
jo
or
or
lret
test
in
dec
or
inc
mov
jle
stos
pusha
mov
add
lcall
push
or
loope
cmp
add
adc
sbb
xchg
popa
ficoms
mov
xchg
pop
repz
test
mov
fistps
dec
rolb
mov
clc
inc
sbb
icebp
push
pop
in
jecxz
in
int3
add
nop
mov
xor
xchg
sub
add
sbb
shrb
and
mov
inc
testb
pop
or
xchg
gs
mov
inc
adc
adc
mov
sti
addb
push
push
rclb
jae
pop
sbb
insb
add
and
ja
cmpsl
aas
sub
stos
es
sbb
in
test
push
xor
jge
xorl
sbb
sbb
or
xchg
mov
lret
add
cli
dec
jbe,pt
sbb
dec
adc
jle
dec
add
fidivrl
push
imul
dec
mov
adcb
aas
dec
adc
mov
cmp
cmp
or
lock
rcrl
push
clc
add
es
inc
jnp
mov
adc
jmp
push
cmpl
sbb
add
mulb
hlt
flds
adc
incl
dec
adc
or
popa
mov
xor
aad
push
andb
mov
add
pop
rorl
orb
cmp
add
into
aam
add
loopne
cwtl
es
sbb
mov
pop
stos
scas
or
lret
inc
in
dec
sbb
or
fxsave
adc
ss
inc
mov
shlb
daa
adc
lret
mov
and
push
sub
add
jle
stos
push
lds
pop
mov
shll
xchg
jo
or
ret
mov
xor
cli
sub
xchg
jecxz
push
jne
mov
sub
push
add
mov
rolb
add
add
xchg
addl
dec
lock
xor
shlb
int3
dec
shl
push
pop
sub
jmp
das
adcb
jg
scas
jp
sarl
roll
cmpsb
sub
jne
push
adc
inc
push
ja
push
inc
cmp
rorl
mov
push
cmp
cmpsb
or
lock
and
insb
scas
shrb
fs
add
fistl
sub
rcrb
cli
lock
sbb
ljmp
inc
iret
rcrl
sarl
add
adc
xor
cmc
sub
sub
sub
push
shll
roll
pop
fbstp
cld
pop
orb
sar
or
in
stos
and
pf2iw
lock
aad
nop
or
inc
sahf
xchg
dec
add
ljmp
push
stc
rcrl
inc
ljmp
push
fidivl
cmp
test
jo
das
icebp
mov
rol
sbb
leave
std
and
pop
inc
pop
sub
xchg
xchg
and
sub
out
sbb
xor
adc
mov
jae
and
mov
scas
addr16
mov
inc
or
ret
sub
xchg
mov
pop
inc
or
mov
or
into
sti
rcll
outsw
mov
push
cwtl
push
sub
roll
xor
stos
mov
pushf
pop
out
push
lret
sbb
in
movsb
jb
jle
aam
xor
cmpsl
sbb
xor
mov
push
cmp
mov
or
cmpsb
stos
sub
adc
call
inc
add
cmp
les
cld
divb
pop
js
adc
clc
repnz
jle
add
shll
js
mov
dec
cmp
push
mov
ja
adc
mov
in
dec
adc
addb
mov
push
xchg
sbb
xchg
shlb
pop
leave
lret
cmp
testl
fs
stc
sbb
inc
push
cmp
mov
push
in
jo
mov
mov
sub
mov
test
dec
adc
pop
pushl
sub
in
dec
add
xchg
nop
xor
mov
rclb
int
cmp
pop
push
addb
xchg
xchg
pop
mov
dec
cmp
push
shlb
jmp
gs
sbb
add
cmp
jl
clc
stos
inc
in
inc
mov
daa
dec
or
push
lods
sbb
xor
jecxz
add
inc
ret
inc
add
inc
jle
sub
in
sub
rcrb
cmpsb
popa
sahf
jns
ret
cmpsb
push
minps
or
lock
scas
orl
add
dec
out
or
sbb
or
push
and
sbb
jmp
roll
scas
test
push
int
insl
jb
test
xchg
push
mov
leave
in
cmpsl
aam
dec
adc
adc
xchg
cmp
add
popa
sarl
sarl
icebp
sbb
jl
add
lcall
push
pop
movsb
or
push
xchg
cmp
jb
inc
push
push
mov
mov
dec
mov
add
rorb
ret
pusha
or
loopne
mov
insb
mov
pop
or
jnp
loopne
push
test
shrb
mov
pop
cmp
jmp
lods
test
iret
mov
jmp
hlt
ss
and
xor
add
sbb
lcall
jge
imul
jge
mov
movsb
mov
les
ds
push
movsb
dec
cmp
add
and
push
rcr
xchg
addl
mov
sbb
test
int3
fisubrl
and
test
xor
sub
mov
dec
mov
daa
std
mov
addr16
data16
rorb
mov
insb
mov
adc
inc
adc
js
idivl
inc
add
pop
mov
cmpsb
test
sbb
call
popa
ret
mov
push
jne
add
push
lret
rclb
ret
push
loopne
and
mov
mov
loop
incb
dec
and
jb
mov
sti
or
stc
je
lock
jle
jno
js
cltd
test
pushf
mov
mov
inc
aad
or
sahf
mov
ss
loopne
sbb
ljmp
inc
ret
js
stos
adc
sub
or
xor
mov
and
loopne
sbb
jne
test
or
xchg
jnp
bound
adc
add
xchg
outsl
sub
inc
decb
push
xchg
adc
clc
push
ret
mov
inc
btc
push
stos
xchg
jno
pop
popa
push
lcall
sbb
cmp
mov
enter
lea
roll
cmp
cli
mov
push
mov
sbb
jne
les
pop
inc
in
dec
mov
add
pop
addb
sbb
pushf
call
push
xor
xor
xor
dec
or
inc
xchg
ret
jno
mov
int
adc
cli
or
test
push
jg
ret
test
loopne
inc
cmpsb
cmpsb
pop
dec
inc
add
mov
mov
push
inc
cmp
mov
xor
push
sbb
aam
xor
mov
or
and
inc
icebp
mov
fwait
orl
les
jno
ret
rclb
test
sbb
adc
addb
or
mov
pop
xchg
inc
mov
sbb
sbbb
cwtl
pop
adc
and
icebp
test
inc
pop
xor
sti
pushf
adc
adc
arpl
push
sub
or
push
mov
push
xor
movsb
gs
sub
fcomps
mov
dec
add
sbb
nop
aas
adc
js,pt
mov
push
adc
or
lock
insl
movsb
or
clc
addb
xor
leave
mov
sbb
mov
out
xor
pop
int3
jo
push
pop
pop
icebp
lds
pop
lds
add
ds
jl
roll
into
mov
popa
mov
xor
ret
nop
sbb
jo
ret
add
mov
xor
sub
out
sbb
js
jmp
push
and
or
or
not
mov
mov
testb
add
jbe
pop
shrb
je
mov
pop
xchg
aas
xchg
xor
adc
insl
subb
fisttps
push
int
pop
fisubl
push
push
shlb
mov
mov
jb
lods
mov
test
cmpsl
xchg
xchg
xor
mov
lock
mov
test
lret
sbb
cmc
adc
enter
and
repnz
xchg
mov
pushf
cmp
arpl
sbb
xor
add
or
pop
sub
push
out
adc
ficompl
xchg
push
mov
ret
or
out
ljmp
arpl
or
jbe
shrb
add
movsl
mov
push
in
fwait
push
sbb
jne
mov
inc
jne
fsin
xor
adc
loopne
fsubs
shrl
add
mov
mov
push
or
lods
adc
adc
jb
and
addb
lea
mov
test
add
scas
sbb
pop
mov
xor
ss
add
xor
rcll
in
shlb
cs
xchg
in
inc
sub
mov
fucomip
or
and
mov
rclb
adc
rcr
test
stos
call
jbe
pop
aaa
fists
adc
cli
or
xor
rcl
enter
mov
test
rcll
sbb
mov
je
sub
xlat
cmp
add
cmpsl
jmp
nop
add
dec
push
push
idivb
mov
push
hlt
inc
lock
pop
leave
sbb
hlt
lret
adc
jge
jbe
jb
mov
mov
push
add
je
jae
adc
pop
aaa
fimull
pop
test
pop
mov
test
in
push
loope
pop
inc
dec
arpl
jecxz
or
cmp
mov
dec
mov
push
mov
fldl2t
or
in
dec
push
pop
xchg
ret
les
pop
pop
jb
mov
adc
sbb
dec
call
mov
movsl
leave
push
scas
add
inc
pop
popf
add
ds
cmpsl
or
mov
int
data16
xchg
pop
movsl
loopne
inc
cmpsb
cmpl
inc
mov
enter
adc
push
mov
mov
inc
jnp
mov
shll
cmp
lret
clc
push
xor
mov
mov
or
orl
xor
leave
sar
mov
aam
inc
adc
sub
or
sbb
sbb
sbb
das
dec
aam
lods
pop
test
popa
add
sarb
adc
fcompl
jnp
rorb
orb
roll
inc
andl
inc
shrb
test
enter
lcall
je
nop
add
sub
inc
scas
movb
test
loopne
add
in
push
inc
adc
cmp
sbb
movsl
ret
inc
inc
or
or
and
adc
mov
adc
movsb
es
add
pop
shlb
add
rolb
roll
jecxz
adc
loopne
mov
sbb
jl
pop
lds
mov
iret
push
lret
imulb
push
inc
leave
decb
cmp
inc
mov
test
pop
or
push
add
push
mov
jb
fs
inc
shrb
mov
sbb
mov
js
mov
stos
addl
pop
icebp
cmp
js
push
imul
adc
push
mov
sti
call
cmp
xor
push
jbe
jne
shlb
mov
mov
arpl
inc
cmpsl
subb
sbb
fimull
mov
mov
jnp
adcb
in
test
mov
jecxz
call
scas
xchg
pop
rolb
pop
push
mov
sbb
or
rcrb
fcoml
pushf
out
or
and
outsl
lds
int
dec
idivl
movsb
lock
vpdpbusds
cltd
mov
jns
adc
inc
mov
lea
ljmp
add
ret
cwtl
jb
push
fidivl
ss
adc
add
add
or
pop
mov
mov
xor
mov
xchg
add
icebp
dec
mov
or
std
push
test
cs
pop
dec
mov
pusha
sub
push
dec
mov
addl
insb
scas
adc
clc
leave
push
ret
dec
push
stos
and
les
push
sub
mov
push
push
cli
ja
xchg
lret
add
out
or
jo
adc
pop
inc
lods
popf
push
test
sub
push
dec
mov
stos
mov
adc
mov
push
orl
in
push
rorl
push
arpl
nop
ret
inc
sbb
jl
and
icebp
outsb
test
sbb
daa
aaa
popa
aam
dec
inc
enter
mov
sub
adc
pop
adc
js
test
and
pop
xchg
leave
pop
adc
loope
push
mov
into
cmp
mulb
aam
mov
pop
push
xchg
sbb
and
and
and
ds
les
call
into
and
movsl
clc
or
cmp
test
sub
rclb
filds
addr16
mov
xchg
pop
xchg
adcb
out
mov
xor
mov
loop
push
pop
jle
adc
pop
je
sbb
mov
lds
add
rorb
add
std
movb
js
lea
mov
test
or
psubq
call
iret
ror
xor
push
push
dec
cmpl
sub
mov
rolb
inc
sub
sbb
cmp
rclb
inc
and
aas
ja
stos
push
cmc
sub
sub
adc
sub
pop
xor
cmc
add
lods
ror
add
js
dec
inc
or
shll
jne
repz
add
test
bound
mov
dec
loopne
add
stos
cli
or
or
loope
popa
repnz
push
mov
jbe
out
adc
cmc
sti
mov
xlat
aad
pmulhuw
mov
xor
push
push
imul
dec
adc
mov
rorl
es
cli
lock
adc
push
test
add
fdivrs
sbb
sbb
mov
stos
test
pop
sbb
repnz
push
push
cmpsb
sub
cli
in
sub
adc
mov
popl
stc
or
inc
and
sub
dec
pop
cmp
add
cltd
cmp
cli
into
sbb
rclb
jecxz
adc
ds
push
in
shlb
lret
cmp
loopne
add
cmp
jge
pop
inc
orl
adc
stos
sbb
sti
xchg
rolb
mov
shrl
rorl
lock
mov
mov
xor
push
cmp
xor
mov
stos
adc
or
pop
aam
mov
mov
cmp
andb
or
or
inc
xchg
or
and
cmc
mov
xor
es
push
rclb
ret
shlb
out
jg
leave
gs
adc
and
ret
xchg
stos
lods
xchg
mov
fwait
pop
popf
addb
pusha
insb
cmc
in
out
xchg
decb
sbb
lock
sbb
push
movsb
mov
iret
adc
bound
cmp
aam
adc
mov
rcrb
cmpsl
xchg
popa
sbb
pop
mov
int3
add
sahf
icebp
push
and
mov
adc
ret
in
movsb
rcll
lods
es
xchg
fldt
adc
cmc
add
int3
popw
stos
mov
shlb
repz
subl
push
jbe
insb
xchg
push
test
adc
add
and
cmp
cmp
hlt
mov
sub
mov
pop
out
xchg
adc
lea
nop
sti
int
addb
inc
ret
and
lcall
test
pop
pop
jg
into
popf
push
andb
adc
sub
mov
rolb
pop
and
test
push
pop
xchg
test
into
lock
pop
inc
sbb
mov
mov
dec
add
push
mov
push
cmc
add
enter
mov
adc
or
cmp
and
enter
test
sub
cmpsl
stos
inc
adc
cmp
lcall
jmp
pop
and
push
and
pusha
mov
orb
push
push
or
adc
adc
inc
cmp
adc
inc
test
push
add
mov
fisubl
xchg
ds
adc
inc
cli
push
mov
subl
outsb
inc
fisttps
pop
orb
pop
push
enter
sub
shll
add
in
xchg
loopne
dec
push
mov
adc
enter
stos
repnz
add
mov
add
dec
sub
sub
push
hlt
lret
sub
mov
aad
out
sbbl
add
inc
pop
mov
adc
aad
sti
repnz
add
pop
out
lock
mov
sbb
mov
dec
movups
rolb
enter
mov
push
pop
xchg
mov
inc
push
addb
adc
stos
mov
mov
inc
sbb
lret
je
pop
jo
cmp
sti
inc
aad
cs
mov
je
arpl
mov
ret
mov
dec
incb
sub
adc
mov
andb
add
sbb
popa
mov
sbb
xchg
or
cmpsl
rclb
xor
test
out
mov
mov
cli
mov
mov
sbb
fs
nop
mov
adc
stos
push
mov
clc
cltd
or
inc
adc
nop
imul
in
pop
inc
aad
inc
outsl
jbe
inc
xor
dec
add
scas
mov
pop
int
adc
or
aad
xchg
push
in
add
icebp
notl
cld
xchg
adc
cmp
add
xchg
leave
inc
push
out
or
std
pop
adcl
cmpsl
imulb
add
mov
pop
sub
xorb
mov
add
mov
je
add
dec
mov
loope
fisttpl
push
inc
or
sbb
rorb
cmpsl
jnp
push
fidivs
int3
jno
testl
add
push
pop
les
nop
and
xor
loopne
sub
lahf
sbb
shlb
jge
subl
negl
and
push
sbb
lret
xchg
test
leave
push
jmp
jmp
mov
jnp
inc
pushf
sbb
cmp
inc
adc
push
or
sbb
test
sbb
leave
mov
clc
push
cmp
xchg
pop
ret
aaa
scas
push
rolb
add
or
adc
pop
jl
mov
inc
out
movb
sbb
dec
and
insl
mov
les
xor
sbb
pushf
pop
inc
mov
or
pop
mov
dec
mov
pop
insb
or
bound
jecxz
push
xor
push
movl
add
add
ret
test
cs
mov
push
loope
mov
js
stos
mov
testb
xor
adc
imul
fsubrl
arpl
pop
cmp
sbb
cltd
jmp
ljmp
and
fdivl
adc
add
cmp
adc
mov
sahf
jecxz
mov
push
and
inc
sub
adc
mov
in
mov
les
ret
lods
push
outsl
sub
rorb
stos
dec
bound
push
dec
pop
xor
adc
push
push
repnz
pop
add
rcr
cmp
pop
inc
js
aad
push
add
xchg
movsl
push
lea
push
mov
repnz
adc
orb
mov
and
push
or
inc
pop
mov
pop
mov
add
orb
dec
pushf
push
mov
rcrb
or
dec
lock
add
loopne
pusha
lds
scas
movb
add
xchg
cmc
cmc
js
pop
adc
movsb
lea
sub
subb
mov
test
in
leave
hlt
repnz
mov
aaa
je
mov
xchg
push
call
add
sbb
inc
stos
adc
jl
test
inc
daa
scas
inc
xchg
and
popa
mov
adc
adc
add
add
imul
xor
push
cmp
bound
pop
mov
and
sbb
adc
test
cmc
add
icebp
fwait
ss
mov
sbb
mov
aam
or
or
xor
stos
add
mov
cmovnp
add
sub
sbb
es
or
shrl
push
mov
lock
push
nop
mov
mov
lret
add
fistpl
rolb
and
loope
int
mov
and
mov
inc
inc
ljmp
sahf
test
loop
xchg
adc
or
rcll
inc
mov
pop
in
or
sahf
mov
dec
inc
xchg
mov
inc
jle
adc
adc
sub
sbb
jo
ret
in
sbb
jo
std
fldcw
mov
bound
ret
and
mov
lds
pop
lds
add
fs
mov
xchg
rclb
mov
jecxz
andl
stos
jnp
add
push
sub
adc
dec
movsb
or
cwtl
push
sbb
push
cwtl
pop
mov
adc
push
mov
adc
aam
add
sarb
jne
pop
push
fistl
mov
add
ljmp
icebp
push
test
push
or
mov
push
inc
mov
push
push
inc
jno
pushw
lcall
stos
dec
jo
or
outsb
xchg
push
leave
cmp
lods
pop
mov
xor
fwait
adc
fnsave
je
pop
bound
arpl
pop
cs
fadds
pop
inc
jecxz
cmp
inc
adc
mov
in
mov
aam
push
jb
mov
mov
cs
fimuls
adc
xchg
lret
jl
mov
push
sub
adc
push
push
sub
or
add
out
pushf
adc
adc
cmp
mov
pusha
add
adc
mov
push
icebp
dec
movsb
adc
push
aam
repnz
test
sub
or
shlb
mov
xor
mov
push
jne
inc
addr16
push
fimuls
xor
loopne
inc
sub
add
jns
adc
xor
sbb
mov
lcall
add
or
mov
gs
mov
push
fiaddl
mov
in
xchg
mov
cmp
xor
cld
cmp
sbb
cltd
std
stc
add
icebp
addb
insl
mov
in
shlb
push
inc
cmp
xchg
mov
insb
sbbb
or
inc
sbb
leave
movsb
scas
pusha
pop
mov
or
or
xchg
jp
add
sbb
imull
push
inc
mov
cli
and
sbb
adc
hlt
testb
sbb
add
inc
mov
push
add
inc
xchg
sbb
loop
add
lea
out
xor
ljmp
inc
enter
cmpsl
lcall
xor
addb
sbb
push
scas
sbb
mov
aam
cmpsb
mov
push
imul
scas
sbb
xchg
or
mov
jg
push
inc
daa
jb
push
cmp
push
cmc
icebp
jge
sbb
xchg
adc
leave
hlt
test
aas
inc
cmpsl
dec
inc
roll
or
icebp
sbb
sbb
mov
into
or
xor
aad
xchg
sbb
repnz
mov
xchg
js
sbb
add
add
loopne
sub
pop
adc
aam
dec
in
sub
hlt
sbb
addl
push
inc
adc
or
push
or
push
loop
pop
push
icebp
ss
xor
negb
jecxz
inc
adc
clc
adc
sbb
ror
adc
lock
cs
xchg
inc
sbb
or
scas
or
movsb
sub
cwtl
cmp
pop
and
es
sbb
push
ljmp
mov
aam
push
pop
scas
mov
jle
xchg
call
jns
scas
sbb
xchg
or
mov
lret
sbb
or
pop
pushf
sub
ds
fcoml
in
inc
or
mov
mov
repnz
int3
pop
lds
pusha
pusha
or
push
ljmp
mov
sub
inc
sbb
enter
mov
ss
jne
inc
lods
ja
inc
ds
add
add
sahf
sbb
or
lret
add
or
hlt
dec
and
fcom
push
xor
fcmovnu
movsb
addl
add
jl
push
fcomps
aad
in
repnz
cmp
mov
fadd
icebp
repz
add
insl
pop
dec
mov
adc
mov
adc
jl
pop
shrl
sub
add
dec
aas
in
or
sub
mov
push
inc
push
mov
out
mov
stos
xchg
mov
adc
stc
adc
push
mov
add
adc
mov
mov
mov
and
adc
repnz
sub
adc
stos
lea
testb
sbb
add
mov
xchg
cmc
add
repnz
jbe
nop
lea
push
movsb
mov
push
test
arpl
js
push
add
and
sbb
push
or
xchg
out
test
inc
pop
rolb
xor
das
repnz
mov
in
add
jo
data16
cmc
add
rcrl
sahf
inc
jne
inc
or
in
push
inc
test
mov
outsl
dec
jge
int
int3
adc
ret
ja
push
push
mov
add
sarl
pop
pop
in
mov
xchg
mov
ret
adc
push
sbb
sar
push
add
sbb
inc
test
testl
cli
mov
xor
xlat
inc
nop
lcall
test
adc
sbb
movsl
xor
xor
pusha
mov
ror
sbb
into
jp
adc
inc
add
pop
scas
enter
push
add
movsb
rclb
push
rclb
add
clc
inc
xchg
and
push
mov
into
ljmp
dec
rolb
notb
sub
add
aad
mov
cld
pop
adc
xchg
inc
inc
addb
mov
add
and
mov
and
cmpsb
test
and
mov
push
push
and
pop
rcrl
stc
aad
push
push
or
test
bound
xor
and
rorl
dec
push
add
fs
enter
push
sbb
outsl
cli
sbb
adc
mov
arpl
cmp
fimull
out
adc
cmpsb
or
ret
jb
push
pop
push
popf
or
pop
push
or
and
rolb
pop
inc
and
aaa
mov
xchg
fmuls
scas
sbb
and
add
and
mov
or
pop
xor
stos
adc
add
stos
jo
fistpl
aaa
mov
pop
rolb
or
sbb
lahf
imul
sbb
sbbl
adc
inc
add
movsl
ja
lock
stos
mov
shll
cs
lock
clc
pop
mov
cmp
icebp
pop
jp
add
sahf
add
dec
sub
sahf
inc
cmp
inc
xor
sbb
and
or
aas
icebp
ss
movsl
loop
mov
sbb
cld
je
jo
push
sub
mov
mov
xchg
mov
mov
mov
inc
jge
push
add
nop
or
mov
adc
adc
push
pop
and
div
in
push
or
or
inc
add
outsb
sbb
enter
loope
xchg
mov
push
cmp
lock
sbb
and
cmp
jo
test
je
pop
push
pop
fdivrs
loop
call
or
xchg
and
loopne
push
xchg
adc
xchg
es
ret
adc
inc
adc
adc
and
test
dec
hlt
pop
inc
add
jecxz
and
inc
imul
andb
notl
aad
out
addr16
jmp
dec
add
notb
and
icebp
sub
cmp
int
sub
pop
notb
push
sbb
add
call
pop
daa
sbb
aad
push
xor
aam
cli
gs
mov
xor
and
jmp
pop
icebp
stos
mov
adc
cmp
push
insl
popf
mov
and
jne
mov
jecxz
add
stos
mov
shl
pop
inc
test
dec
in
push
push
push
sub
adc
push
int
popa
push
movsl
pop
adc
rclb
cmc
shrl
or
add
ljmp
or
push
dec
mov
jl
add
addr16
and
iret
lock
pusha
push
dec
adcl
adc
das
mov
out
out
sbb
lods
add
mov
out
mov
inc
enter
mov
push
imul
ds
push
jl
sbb
out
scas
and
add
dec
or
push
mov
arpl
sahf
inc
js
loopne
inc
ficoms
pop
pop
stc
adc
loopne
idiv
ja
mov
mov
add
movsb
cmp
inc
subb
aaa
mov
sub
pop
rcrl
outsl
insl
fsubrl
push
mov
dec
or
and
mov
call
pushf
inc
lock
xchg
lcall
js
cmp
invd
push
fwait
enter
int
xor
sbb
inc
pop
ljmp
sar
and
cli
jo
and
pop
test
int3
sub
xor
bound
jae
add
mov
enter
or
daa
and
cwtl
adc
pop
cmp
sub
or
mov
sarl
sbb
or
subl
mov
insl
adc
add
dec
hlt
lock
ret
push
cmp
aam
adc
mov
adc
cmpsb
xor
das
imul
add
addl
adc
pop
push
sub
loopne
xor
in
imul
incb
popf
pop
scas
pop
test
cltd
pop
or
xor
jp
je
xchg
jo
rclb
xor
or
mov
or
sbb
mov
testb
mov
mov
and
or
or
andb
and
adc
in
push
or
ret
mov
pop
sbb
push
pushf
push
iret
fisubrl
loopne,pt
pop
jne
sub
fidivrs
or
stos
inc
pop
pop
in
add
pop
leave
dec
push
sarb
jecxz
loope
or
sbb
int
ret
xchg
hlt
dec
add
insl
inc
mov
arpl
test
push
mov
xchg
inc
xchg
or
call
xchg
adc
add
shl
call
test
inc
mov
and
cmp
sahf
xchg
rol
sbb
test
cwtl
call
and
outsl
repnz
inc
lods
mov
dec
ja
or
popa
jae
repnz
sbb
das
sub
jbe
inc
sub
pop
lds
ficompl
lcall
ss
out
xlat
dec
pusha
ffreep
push
jge
xor
push
jno
jno
inc
add
aam
add
addb
lods
adc
stos
or
popa
outsb
fsubs
aas
cmp
insl
rclb
push
popf
inc
pop
outsb
out
inc
imul
push
push
sbb
or
cli
pop
rorb
add
sbb
pop
adc
jl
and
xor
add
push
vpunpckhdq
lods
inc
hlt
fsts
loopne
mov
clc
inc
popf
testb
jp
mov
or
dec
or
popa
lds
dec
mov
add
jns
sbb
sub
pop
jp
add
sbb
mov
push
or
pop
dec
test
sbb
dec
scas
mov
ret
add
stc
pop
jo
push
into
adc
sahf
pop
shrl
and
fcoms
sbb
punpckhdq
lock
cmp
je
lret
addr16
adc
ret
mulb
ret
sub
rorl
pushf
rcpps
or
push
iret
ja
pop
push
push
add
mov
scas
mov
add
xchg
repnz
sbb
pop
add
rolb
xchg
cmp
scas
push
or
inc
daa
adc
hlt
cmc
add
addr16
leave
sbb
sub
sbb
xchg
add
test
cmp
sarb
adc
push
cwtl
push
inc
jnp
adc
sbb
icebp
mov
pop
movsb
out
or
lea
stos
leave
ret
and
add
bound
push
push
adc
push
stos
jo
jp
push
stos
sti
arpl
ja
xor
insl
roll
ret
push
sbb
sbb
dec
flds
inc
add
addb
push
mov
dec
sub
mov
xchg
mov
inc
sub
adc
mov
lcall
call
mov
add
adc
dec
inc
in
jno
sbb
push
and
lods
push
lea
and
and
jo
jns
scas
or
adc
es
push
lret
cmc
and
sub
movsl
stos
xchg
cwtl
or
int3
inc
pop
pop
jmp
cmp
mov
inc
scas
pop
add
pop
mov
xchg
enter
pop
inc
dec
pop
ss
orb
mov
xchg
mov
les
dec
jo
nop
loope
pop
orb
cmpsl
push
push
cmp
xor
xchg
les
mov
mov
jnp
rorb
sbb
cwtl
or
sub
js
mov
dec
rcl
sbb
add
adc
push
inc
lret
les
js
stos
push
lret
inc
orl
lret
cmp
mov
sbb
movsl
sbb
repnz
loopne
push
mov
dec
push
movsl
push
adcl
or
stos
jp
clc
push
test
mov
sub
push
push
mov
adc
and
lret
sub
mov
push
mov
int
mov
mov
shll
pop
sbb
pop
aad
mov
arpl
gs
aaa
pop
and
sbb
lcall
mov
sbb
push
aad
das
sub
daa
adc
mov
add
and
or
push
popf
roll
cmpsb
enter
pop
or
and
xor
add
je
add
inc
dec
push
jmp
ret
sbbl
lret
inc
roll
inc
mov
cmp
add
andb
and
jb
mov
mov
leave
add
push
cmc
ljmp
mov
mov
jb
adc
push
stos
inc
enter
xor
sbb
popa
fisubl
adc
add
push
stc
sbb
notb
scas
adc
pop
xchg
mov
test
call
dec
clc
cmp
adc
rolb
push
mov
test
and
imul
mov
sub
outsb
sub
in
out
push
inc
in
push
sti
mov
push
sbb
push
xchg
adc
mov
inc
lahf
mov
jp
sub
add
rcl
jo
fdivrs
js
lcall
or
mov
push
enter
test
dec
adc
fadd
test
dec
int
adcb
xor
test
repz
push
popf
mov
mov
pop
sub
ret
push
and
aad
mov
shl
fistl
push
add
push
sbb
inc
inc
jo
dec
fsubrl
jnp
test
add
pop
hlt
icebp
and
push
in
cmp
fstpt
cmp
and
jl
push
popa
sub
cli
xor
or
add
arpl
mov
inc
fcomip
xorb
ret
ret
popa
or
xor
pop
inc
shrl
mov
push
mov
push
add
popf
dec
in
or
lods
bound
icebp
mov
mov
mov
mov
push
ljmp
lret
adc
je
inc
push
dec
gs
idivl
adc
and
add
call
jmp
xor
icebp
push
out
xchg
mov
addb
adc
adc
jp
scas
call
lods
subl
or
jb
sbbb
aam
sbb
roll
fiaddl
mov
adc
jnp
push
fsubrl
out
mov
pop
das
jo
rclb
and
adc
shlb
jge
fstl
orb
mov
add
inc
lea
fdiv
inc
sbb
into
add
mov
ja
test
pop
popf
and
or
adc
icebp
mov
push
and
xor
add
rol
cld
adc
sbb
pop
fmulp
pushf
in
push
clc
pop
mov
fucomp
or
and
pop
mov
adc
jbe
enter
mov
aas
xor
test
jmp
adc
push
lcall
pop
inc
mov
pop
inc
aam
push
jg
sarb
add
inc
lret
sbb
loop
push
cld
sar
sbb
dec
pop
add
sbb
push
inc
xchg
sbb
jns
add
push
rcrb
or
mov
js
stos
test
js
popa
jnp
push
shlb
ljmp
loopne
cli
inc
fimuls
mov
mov
push
add
add
dec
lahf
push
sbbl
lods
mov
into
cld
and
fisubrl
jb
mov
adc
push
cmp
push
mov
sub
jge
jl
push
test
push
ret
inc
stos
jmp
sbb
mov
jmp
loopne
pop
leave
mov
arpl
movsl
mov
adc
cli
or
sbb
xchg
mov
movsl
sbb
jmp
fldl
or
addb
push
mov
xor
js
ljmp
pop
fisubrs
push
jo
mov
add
cltd
add
jg
sbb
xor
mov
inc
movsl
lock
jne
inc
push
mov
enterw
xchg
or
out
jb
cmp
lods
dec
xchg
and
mov
lretw
add
ret
shrl
cmp
mov
das
or
jmp
xchg
or
adc
add
repnz
add
cwtl
adc
enter
push
cltd
jg
andb
ret
filds
aad
arpl
scas
sbb
jge
adc
xchg
push
js
cmp
icebp
and
xchg
sbbl
lds
call
dec
cmc
test
push
inc
cmpl
jg
sbb
mov
push
mov
mov
adc
gs
add
dec
mov
push
lcall
xor
mov
subl
or
xor
lock
pop
lret
es
cmpsb
push
in
inc
push
mov
inc
lods
dec
pushf
in
adc
jo
xchg
ret
adc
add
xchg
fsts
push
loopne
or
sti
test
jp
lret
push
mov
add
sbb
push
mov
test
mov
daa
xor
add
xchg
loope
inc
and
outsl
dec
shlb
or
mov
sbb
cmpsl
add
fwait
pop
or
push
scas
pop
pop
jmp
push
roll
cltd
movsl
cmp
testb
sub
xor
lcall
shl
dec
add
sub
inc
xchg
dec
or
pop
sbb
movsb
or
add
icebp
xchg
push
jo
inc
sub
syscall
scas
loop
mov
xchg
mov
or
stos
pop
jb
or
jle
adc
and
or
aad
fisubrs
push
stos
lcall
shrl
shll
cmp
sbb
jno
push
or
push
inc
shl
sbbb
pop
or
roll
fistpl
popa
adc
adc
pop
shlb
gs
pop
xchg
or
adc
and
pushl
adc
stos
scas
pop
xor
jp
inc
cmp
movsl
inc
fwait
inc
popf
js
cmp
rcrb
adc
enter
pop
mov
sub
sbb
sub
arpl
xchg
or
dec
add
adc
outsl
mov
je
and
xchg
inc
or
mov
lds
lcall
jle
mov
cltd
lret
ret
add
jbe
jo
sub
cmp
fnstsw
cmc
and
push
push
pop
mov
mov
fnsave
and
mov
out
cli
add
imul
push
test
loop
mov
cmp
repnz
inc
lret
repnz
push
cmp
sub
push
ret
or
stos
adc
shll
cld
adc
pop
loopne
sbb
dec
or
xchg
jmp
adc
cli
or
push
inc
aam
adc
orl
leave
into
enter
and
cmp
ss
pop
nop
imul
jp
pop
add
movsb
or
lods
idiv
lret
push
push
repnz
or
jae
pop
roll
sbb
jp
arpl
movsb
add
sub
jl
pushf
and
jg
push
aad
mov
mov
std
jg
in
jmp
movl
add
pop
lods
outsl
sub
fs
lahf
aas
insl
jns
cmc
rep
xor
clc
popa
cld
stc
rep
mov
loopne
pop
mov
in
movsb
xor
mov
sti
jae
dec
scas
shl
or
cli
std
stc
repz
push
push
add
cmp
or
scas
in
outsl
sbb
aas
jg
jg
push
sub
bound
aad
xor
popa
stc
repz
xchg
es
sbb
insb
rcll
arpl
lret
rcll
aas
xchg
mov
repz
xchg
cltd
xchg
or
fbld
aad
inc
aas
jg
cld
outsl
or
mov
outsb
mov
jl
scas
aaa
pop
repz
lahf
mov
fisttps
cmp
mov
lcall
or
iret
lahf
aas
jg
sti
and
jbe
mov
or
stc
repz
lret
insl
pop
jae
add
push
mov
lahf
aas
jg
mov
and
pop
das
pop
push
bound
cmp
inc
lods
enter
aas
inc
mov
jg
cld
iret
dec
jnp
idiv
lods
pop
daa
test
pop
sbb
out
lahf
inc
daa
fbstp
lds
pop
std
clc
mov
pusha
and
sti
mov
daa
ret
repz
lahf
cmpsl
push
lea
idiv
dec
loope
jg
cld
stc
jmp
lods
or
jl
and
add
lahf
aas
orb
inc
in
test
cld
stc
repz
data16
mov
testb
or
or
jg
sahf
imul
add
stc
repz
push
nop
xor
lods
push
iret
pop
mov
jmp
aas
jg
fwait
popa
sbb
and
jg
dec
stc
repz
xchg
jo
and
mov
in
popf
addr16
jg
cld
ja
xchg
test
add
gs
aam
gs
out
lahf
lret
xor
cmpsl
push
in
push
stc
jae
xchg
fstpl
jge
test
sti
out
lahf
aas
add
clc
pop
incb
and
cld
stc
repz
scas
push
sub
mov
cmpl
jg
and
int
mov
repz
and
fcomps
hlt
fwait
dec
les
aas
jg
pop
lcall
jb
xor
mov
iret
xchg
xchg
mov
aas
jg
cld
sub
fabs
xlat
sub
jp
push
sbb
add
repz
lahf
push
mov
fsubs
jg
cld
stc
and
or
roll
xor
iret
lahf
aas
into
cwtl
cmp
fwait
in
mov
cld
stc
repz
or
mov
adc
subb
iret
lahf
aas
jg
outsl
js
adc
arpl
repz
stos
dec
iret
pop
lods
lods
dec
es
xchg
ljmp
push
push
pushf
mov
sbb
xchg
ret
cmp
mov
jg
cld
and
pop
cmp
and
jge,pt
repz
lahf
push
mov
pop
mov
loope
adc
sarl
repnz
dec
mov
cs
leave
cld
aas
mov
jg
sbb
pop
jne
daa
jo
inc
repz
lahf
dec
adc
push
int3
jmp
addr16
cld
stc
mov
fdivp
push
arpl
sar
iret
lahf
aas
pop
sub
les
dec
iret
std
arpl
ds
stc
repz
cmp
mov
jecxz
cs
mov
adc
adc
push
mov
cld
stc
pop
std
cli
xor
push
sbbl
xchg
and
xor
xchg
mov
out
repz
push
dec
jg
push
popa
add
lahf
aas
jg
enter
ss
mov
mov
stc
repz
pop
mov
cmp
push
lds
jg
cld
adc
clc
jbe
sahf
out
inc
movsb
lea
rcrl
jne
add
rorl
mov
insb
adc
lea
fcompl
xchg
gs
imul
jg
jl
mov
shll
repz
icebp
xor
dec
push
or
mov
jg
dec
pop
loop
inc
test
sub
cmp
repz
call
cmp
inc
lods
cltd
popf
fcompl
jg
cld
lret
push
addl
cli
dec
xchg
repz
lahf
out
negb
mov
or
or
dec
jg
cld
stc
mov
pop
lret
in
jp
and
cmpsb
int
jnp
sub
iret
lahf
aas
adcb
test
lds
cld
stc
repz
bound
cmp
lret
push
aaa
jne
xchg
lahf
aas
jg
jnp
dec
pop
sarb
iret
lahf
aas
icebp
mov
pop
jg
or
imull
int
cld
stc
repz
lods
xchg
icebp
es
cld
inc
dec
mov
dec
sti
sbb
dec
arpl
inc
aas
xor
xor
stc
repz
or
js
sbb
sub
fcomip
cld
jb
sub
mov
mov
cwtl
shrl
rcr
push
cmp
and
out
lahf
aas
or
dec
sub
push
cld
stc
repz
xor
int
add
pop
test
aas
jg
movntps
push
loopne
rcrb
repz
push
test
sbb
test
mov
in
out
mov
pop
sub
testl
cmp
inc
mov
dec
ficompl
or
aas
jg
sbb
add
loopw
adc
loopne
mov
add
int3
adc
and
or
stc
or
pusha
imul
mov
aaa
mov
adc
jg
cld
nop
lret
jns
bound
or
repz
lahf
cmp
push
lods
dec
or
ljmp
jae
js
jno
dec
sub
sahf
stos
xor
repz
lahf
test
negb
int3
repnz
loope
outsb
jmp
jle
stc
gs
xchg
lcall
push
cld
stc
repz
imul
bound
aas
jg
pop
add
popa
xor
enter
aas
jg
jg
mov
je
xor
or
jae
repz
xor
in
mov
les
dec
aas
jg
cld
shr
mov
mov
sbb
mov
iret
lahf
pushl
popa
into
out
adc
jg
cld
stc
push
xchg
jmp
lods
cli
pop
jne
jb
fdivrl
int
or
daa
lahf
aas
cmp
cmp
jecxz
out
dec
out
cld
stc
repz
mov
add
cld
push
cmpsb
or
lahf
aas
jg
imul
int3
cmp
xchg
mov
out
jno
mov
scas
popf
cltd
lcall
pop
jmp
adc
add
iret
out
jae
sarb
nop
sub
push
xchg
cld
lcall
shrl
and
pop
pop
loop
iret
lahf
pushl
xor
lret
push
xchg
cmpsl
cltd
repnz
mov
or
adc
out
lahf
push
cwtl
clc
jo
jmp
cmpsl
jbe
cld
stc
push
xchg
cltd
jmp
add
repz
iret
lahf
aas
mov
hlt
fcomi
insl
lcall
mov
mov
mov
icebp
sbb
mov
iret
lahf
aas
jg
jo
inc
dec
mov
and
inc
cld
stc
repz
inc
lods
arpl
adc
outsl
inc
in
ja
lahf
aas
jg
out
addr16
stc
or
mov
repz
ljmp
out
inc
or
sub
aas
jg
cld
jl
loopne
test
or
adc
sbb
out
stc
repz
addr16
sbbl
cld
pop
fbstp
stc
xor
mov
adc
ja
out
lahf
inc
or
loopne
xchg
mov
cld
stc
mulb
or
mov
pop
adc
iret
lahf
aas
xor
out
xlat
fistl
cld
stc
repz
xchg
cwtl
ret
and
scas
dec
cmp
stos
cmp
inc
loop
arpl
mov
cld
stc
repz
and
cmp
int3
pop
jae
xchg
insl
pop
test
rol
fcmovbe
mov
out
ret
enter
rolb
mov
lea
cld
mov
lahf
dec
jle
mov
pop
pop
stc
repz
lahf
fdivs
push
mov
notb
sbb
stc
dec
cmp
decb
mov
out
lahf
aas
ss
int3
pop
out
jbe
push
clc
mov
stc
repz
pop
cmpsb
cli
jle
int
xor
in
sbb
inc
ret
iret
lahf
aas
jg
inc
ljmp
sbb
int3
ret
icebp
in
inc
je
and
stc
push
and
ret
inc
dec
hlt
adc
pop
or
and
mulb
imul
cld
stc
repz
inc
xlat
add
or
push
lahf
aas
jg
fcoml
insl
add
push
jne
add
roll
mov
repz
jecxz
xchg
mov
xchg
into
in
push
lahf
inc
cld
push
jl
std
jl
jle
xchg
xchg
cmp
dec
lea
add
adcb
jno
iret
lahf
jg
jecxz
scas
mov
mov
cld
stc
repz
jnp
sub
mov
stos
std
push
iret
lahf
aas
jg
add
js
mov
inc
add
out
sbb
and
out
mov
jge
repz
mov
xor
jg
cld
stc
loope
scas
lds
push
cs
mov
iret
lahf
aas
add
pop
jp
xorb
pop
popa
cld
stc
repz
loop
hlt
mov
dec
add
push
ret
daa
jg
popa
jmp
ss
xchg
cld
stc
loope
sbb
xor
cmp
int
push
out
lahf
aas
push
test
jmp
cltd
jbe
testl
add
test
cld
jns
out
adc
insb
and
and
adc
repz
sbb
push
xchg
sbb
and
push
mov
sbb
jmp
hlt
fildll
iret
lahf
aas
outsl
inc
arpl
cld
pop
movsb
xchg
mov
cld
stc
repz
mov
push
jno
jnp
jecxz
xchg
cld
js
lahf
aas
jg
xor
cmpsl
adc
and
stc
repz
test
fisubrs
pop
mov
lahf
aas
jg
or
cmp
imul
xchg
cmp
out
pop
stos
daa
setne
jl
int
cmp
aas
jg
cld
mov
sub
cli
mov
out
lahf
movsb
mov
int3
cmp
fwait
ss
mov
in
shrb
sub
ja
test
fwait
orl
ds
clc
fistl
outsl
fidivrs
sbb
lcall
out
fwait
aaa
jge
jecxz
inc
int3
pop
mov
ds
repz
add
mov
in
and
cmpsb
push
push
incb
add
imul
jp
adc
out
fwait
aaa
pop
xor
dec
leave
movsl
icebp
xchg
pop
xchg
xor
xor
ja
pavgw
jl
jns
movsl
repz
insb
sub
push
jb
js
mov
cld
stc
in
xchg
cld
test
test
out
add
addr16
mov
lahf
aas
jmp
push
andb
mov
test
pop
iret
xchg
push
and
aad
outsl
aas
jg
cld
ret
popf
imul
sub
int3
fs
pop
sahf
clc
bound
mov
repz
pop
nop
xor
xor
xor
outsl
fidivrs
aad
stc
rol
adc
stos
sub
sti
leave
rclb
aad
mov
pop
int3
push
das
mov
jae
into
cmp
cmc
mov
xchg
mov
addr16
std
sbb
lahf
aas
jo
and
ss
loope
das
lods
cld
stc
repz
cmpsb
arpl
push
pop
mov
repz
lahf
aas
jg
inc
mov
int
sub
jae
repnz
jmp
mov
ljmp
out
lret
cs
or
lret
daa
xchg
aas
jg
cld
xchg
push
hlt
mov
sub
or
out
lahf
xor
push
jbe
stos
xchg
jg
stc
stc
pop
ljmp
inc
out
mov
icebp
repz
lahf
nop
cmp
xor
mov
jg
cld
stc
mov
adc
cmpsb
inc
adc
lods
das
stos
into
stc
xlat
dec
ds
mov
scas
add
jg
cld
cld
cmpb
mov
mov
data16
jp
loop
repz
xchg
lahf
sub
fwait
pushl
insb
ja
dec
sub
repnz
repz
mov
jmp
xor
aas
jg
xchg
push
mov
add
pop
mov
repz
aaa
push
push
mov
std
push
lret
out
je
jmp
into
rcrb
push
inc
repz
add
mov
gs
movsb
lock
cli
aas
jg
cld
call
fildl
pop
mov
repz
lahf
scas
shr
movsl
lret
scas
push
lock
sbb
cld
stc
inc
push
cld
stc
push
loop
jns
out
or
shl
xchg
jg
cmc
hlt
jo
cmp
cld
stc
popa
shll
mov
lcall
sub
pop
out
lahf
aas
outsb
xor
sbb
test
cld
stc
repz
ljmp
and
cmpsb
mov
aas
jg
outsl
push
popf
gs
sub
lds
imul
adc
or
decb
outsb
popf
mov
cmpsl
cs
and
push
fnstsw
repz
lcall
stc
jp
test
jg
cld
test
pop
lods
data16
inc
test
push
iret
lahf
add
and
dec
mov
jle
cld
stc
xchg
ficompl
jle
insl
add
jo
iret
lahf
mov
test
jo
or
gs
stc
stc
repz
or
int
sbb
ret
inc
mov
xchg
sbb
jmp
fidivrs
adc
and
mov
jg
cmp
xlat
shlb
and
iret
xchg
shlb
mov
outsl
popf
pop
out
cld
stc
repz
fwait
pop
fwait
ja
aad
scas
repnz
xchg
lahf
aas
jg
addl
dec
xor
imul
sbb
clc
jno
mov
movsl
ret
push
add
jg
cld
lock
cli
sahf
ret
lods
dec
mov
repz
lahf
dec
xorb
dec
cs
test
cld
stc
sar
cwtl
sbb
mov
mov
pop
out
lahf
aas
fidivs
push
jno
jnp
or
cld
stc
repz
add
scas
gs
je
mov
aas
jg
mov
dec
gs
and
repz
cmpsb
inc
in
or
sbb
repnz
sbb
inc
cmp
stc
jno
iret
aas
sub
out
out
out
mov
into
mov
cmp
pop
xchg
je
ljmp
aas
jg
out
xlat
mov
mov
out
ret
addr16
repz
mov
int3
inc
shrb
and
iret
lahf
jg
nop
xchg
inc
push
pusha
int
dec
repz
inc
cmpsb
or
mov
fbstp
test
jg
loope
and
data16
rolb
pusha
sarb
xchg
repz
lahf
stos
fnstcw
fimull
pop
cli
xchg
fcomip
cld
stc
imul
add
mov
lds
adc
sbb
lahf
aas
pushl
subb
fsts
leave
xor
js
repnz
nop
jle
jle
insl
leave
pop
lahf
fistpll
jg
cld
sti
notb
daa
xchg
pop
jo
jae
out
or
or
insl
sahf
pop
movsl
jl
lahf
aas
jno
fwait
cmpsl
pop
push
sbb
stc
repz
dec
loop
pop
stos
gs
adc
or
int3
sub
push
gs
mov
jbe
out
shl
cmc
cltd
cltd
out
rclb
pop
sti
lahf
cmp
jg
and
lahf
aas
jg
push
lds
jecxz
adc
call
es
repz
hlt
aaa
dec
cmp
sbb
pusha
dec
aas
jg
cld
cmp
push
push
fdiv
dec
repz
lahf
sub
scas
repz
push
adc
sbb
stc
xor
sbb
push
sub
inc
in
xorb
iret
lahf
aas
mov
add
data16
cld
stc
repz
gs
xor
lret
xorb
mov
pop
clc
notl
stc
repz
sbbb
jae
loop
mov
dec
jno
jg
ret
cmpsl
out
pop
in
push
mov
push
cld
stc
repz
add
sbb
addl
aas
jg
mov
jmp
into
add
aas
sub
mov
add
jns
mov
addr16
test
lcall
sbb
cmpsl
aas
push
cmp
out
xorb
fsubrl
lahf
aas
jg
sbb
mov
xor
sbb
inc
mov
repz
xchg
aad
loop
fmull
loopne
pop
mov
aas
stc
cld
cmp
cmp
cld
std
shrl
fdivr
stc
repz
mov
sbb
imull
xor
pop
add
lahf
aas
jg
aaa
outsb
push
xchg
jmp
aad
cmpsb
cs
sbb
stc
repz
pop
int3
and
sub
flds
cmp
lahf
aas
cld
jl
lods
xor
lcall
mov
out
sbb
rcr
dec
sub
jg
cld
cs
and
dec
jge
repz
lahf
dec
xchg
in
insl
sub
popf
push
repnz
sbb
pop
jg
cld
stc
mov
fisttpll
mov
int
mull
call
iret
lahf
aas
stos
jp
lds
or
rep
aam
mov
orb
sbb
lds
daa
jg
faddl
add
xchg
ljmp
aaa
cmp
cs
leave
mov
iret
shll
mov
xchg
leave
subb
mov
sub
mov
dec
int
out
pop
push
dec
ss
daa
pop
scas
inc
inc
jg
cld
stc
xchg
cmp
aaa
lret
das
outsb
out
push
out
daa
aas
and
pop
mov
addl
pop
inc
pop
cld
stc
repz
rclb
nop
hlt
jecxz
mov
sub
js
iret
lahf
aas
jg
pop
fbstp
adc
cld
stc
repz
pushf
imul
fildll
loop
ret
push
lahf
aas
jg
insl
add
sbb
ljmp
dec
mov
repz
push
ljmp
and
daa
shrb
cmpsb
out
jg
addr16
aas
jg
icebp
js
pop
dec
ror
jle
cld
sub
testl
dec
call
lahf
fadds
test
pop
sbb
in
repz
mov
movsb
sbb
cld
mov
fcoml
lcall
xor
lahf
aas
out
and
rcll
daa
fdivrl
sub
ret
cwtl
cld
stc
inc
notl
push
mov
xor
int
out
aam
out
pop
or
mov
int3
test
fidivrs
sahf
sub
xchg
insb
in
bound
push
mov
repnz
scas
cmpb
scas
sbb
fwait
xor
lret
repnz
fsubs
xor
jecxz
jg
cld
cmp
pop
lahf
lcall
test
mov
iret
lahf
aas
or
lcall
cld
stc
repz
fisubrs
dec
sahf
out
std
mov
and
mov
adc
enter
shll
cmc
inc
cld
stc
xlat
mov
lods
inc
sbb
rcrb
adc
sbb
mov
add
adc
add
repz
pushf
xchg
push
mov
xor
roll
sub
aam
lods
inc
mov
popa
jo
int
dec
adc
inc
inc
inc
and
jns
out
ljmp
adc
dec
sub
xchg
lock
dec
sbb
push
dec
fnstcw
cli
or
cld
stc
and
out
mov
out
mov
pop
repz
cltd
cmp
aas
jg
lcall
and
mov
ret
out
out
sbb
int3
jae
inc
arpl
pop
jl
mov
leave
pop
imul
jns
sbb
aam
inc
jns
fwait
aaa
out
mov
dec
xor
lret
cmpsb
enter
jns
out
adc
shrl
into
dec
fidivrl
mov
aaa
outsl
fcompp
mov
inc
outsl
jmp
pop
sbb
cli
jns
out
adc
repnz
mov
xor
jge
mov
cli
xlat
aaa
outsl
fidivrs
es
sub
dec
cmp
gs
out
fwait
int3
and
in
push
push
push
mov
fidivrs
pop
pop
dec
mov
sub
pop
arpl
int
aaa
cmpsb
mov
hlt
cmpsl
sub
outsb
fnstcw
cmp
mov
fisttpl
dec
pop
lds
sbb
cmp
or
xor
stc
cmpsl
dec
or
sbb
cwtl
jmp
mov
daa
inc
inc
push
aaa
out
lahf
aas
cmp
push
stos
iret
bound
stc
repz
imul
xor
orl
xlat
xchg
pop
call
mov
fcmovb
test
stc
repz
and
test
mov
and
aas
jg
cli
xlat
mov
sub
enter
ret
into
dec
stos
stc
repz
and
cld
hlt
addb
mov
pop
sti
pusha
dec
ja
repnz
sti
scas
sub
pushf
in
pushl
int
sub
mov
ftst
cltd
or
push
cli
push
inc
sub
xlat
push
xchg
jb
outsl
fidivrs
out
loope
xchg
jne
bound
ljmp
loopne
out
mov
ret
lret
jbe
jg
outsl
fidivrs
repnz
test
cmp
jle
sbb
jl
dec
push
mov
out
cld
stc
repz
dec
push
cmp
xor
aad
mov
fdivs
ret
ss
lahf
aas
jg
sbb
mov
cmp
pushf
cli
cld
stc
repz
and
mov
jg
mov
cld
xor
cli
cwtl
pop
aas
jg
cld
scas
pushf
int3
adcl
leave
pop
xor
das
dec
repz
lahf
adc
je
jmp
push
loop
cld
stc
adc
lea
dec
in
inc
mov
inc
inc
push
lock
iret
lahf
aas
jg
sub
mov
das
sahf
aad
sbb
in
out
pop
movsl
lahf
pop
xor
push
mov
stc
repz
call
nop
std
insl
mov
stos
in
xchg
scas
mov
inc
lea
mov
fimull
add
bound
sub
out
fwait
aaa
pushf
xor
cli
test
mov
or
inc
es
lret
push
loope
aad
jnp
fiadds
add
xor
adc
adc
aaa
dec
sub
fidivrs
mov
in
repnz
mov
mov
outsl
fidivrs
xor
pop
jae
pop
out
fwait
aaa
inc
out
and
lock
scas
jns
cmp
jns
mov
das
test
imul
iret
lahf
rorb
mov
push
test
cld
stc
divb
divb
xchg
jg
out
lahf
aas
fiadds
and
in
jle
stc
repz
and
cmp
xchg
jg
add
fnstcw
in
pusha
clc
je
outsb
int
ja
das
out
stos
rolb
sub
mov
jmp
sub
pop
in
movsb
and
fidivrs
cmpsl
scas
enter
out
in
repz
dec
icebp
fldenv
cmp
cmp
mov
ficompl
popa
add
out
fwait
and
mov
dec
cmp
fidivrs
jnp
insb
pop
ja
fstl
out
stos
inc
adc
sti
das
mov
mov
jmp
fwait
jg
mov
lea
sahf
lahf
aas
jg
repz
jge
push
test
or
lea
repz
xchg
inc
push
jmp
jg
adc
mov
cld
mov
mov
inc
mov
loop
out
lahf
dec
sbb
cmc
pop
insl
mov
hlt
jg
cld
stc
xorl
dec
imul
push
iret
lahf
aas
mov
and
push
mov
in
pop
cld
stc
repz
aad
mov
in
sbb
xor
movswl
xor
sub
stc
repz
xchg
cs
xchg
xchg
mov
xor
inc
push
int
pop
cmp
push
sbb
out
lahf
mov
loop
push
stos
xchg
mov
mov
cld
stc
mov
sti
dec
movsl
dec
div
pop
push
push
or
aas
jnp
pop
xchg
dec
mov
sti
push
cld
stc
repz
jmp
sub
ret
fcmovne
lahf
aas
jg
xchg
bswap
mov
movsl
test
repz
xchg
cld
jmp
stc
dec
rorl
aas
jg
leave
cmc
mov
xor
pop
fisttps
ljmp
jg
mov
mov
aam
repz
lahf
lret
xlat
jle
jmp
mov
fisttps
cld
stc
mov
mov
jo
mov
sub
out
lahf
aas
or
mov
add
lcall
out
mov
adc
insb
mov
mov
jl
pop
xchg
xrelease
insl
jg
cld
stc
daa
mov
pushf
dec
sub
inc
out
lahf
aas
roll
or
shlb
mov
adc
enter
lahf
xchg
fisttps
sti
nop
jg
cld
mov
push
xlat
dec
loopne
fstpl
dec
xlat
lods
cmc
out
lahf
aas
insb
dec
mov
sub
fwait
les
cld
stc
repz
mov
sub
in
lea
dec
sbb
mov
lahf
cmovno
push
jns
push
mov
sub
adc
fnstcw
lea
push
and
int
ja
sub
xor
sbb
repz
jo
imul
psubq
mov
xchg
mov
pop
add
add
inc
stc
repz
in
and
inc
test
sbb
repz
movsl
add
gs
rep
fwait
add
cld
mov
sub
aaa
outsl
fidivs
jb
sti
mov
jnp
pop
pop
jnp
inc
lock
int
gs
shll
xor
inc
fidivrs
lret
pop
adc
test
js
outsl
fiadds
test
add
jle
cmp
mov
xor
lds
fidivrs
adc
aaa
sub
pop
and
aaa
ja
out
outsb
push
fistl
mov
stc
ds
js
jo
fsts
push
fnstcw
mov
ret
test
dec
or
cld
stc
leave
dec
jmp
xchg
xchg
arpl
cmp
mov
pop
out
lahf
aas
xchg
cwtl
std
cltd
lret
push
insb
imul
stc
repz
fbstp
lock
inc
ljmp
std
xchg
lahf
aas
jg
inc
and
or
mov
inc
xlat
nop
jne
shr
out
mov
aas
mov
mov
xor
repnz
stc
repz
cmp
inc
add
and
mov
inc
in
int
ja
scas
out
pushf
push
adc
mov
rclb
movb
mov
aaa
outsl
faddp
mov
js
xchg
jmp
push
pop
out
in
int
cmp
mov
cld
mov
lahf
aas
mov
lret
imul
dec
sub
cld
stc
repz
movsb
std
push
pop
jecxz
sub
sub
lahf
aas
jg
sbb
cli
push
aas
in
lcall
cmp
jp
sub
or
aas
jg
adc
push
test
sub
cmpsb
add
enter
xchg
jae
lahf
inc
adc
int
aaa
xchg
inc
jae
xor
cmc
cmp
fidivrs
mov
shlb
and
test
mov
push
mov
sbb
mov
mov
repz
daa
jb
push
cmp
es
in
aaa
outsl
fdivp
clc
cmc
mov
jae
mov
and
mov
out
jmp
bound
cmpsb
aas
into
insb
mov
outsl
fidivrs
fisubrs
out
gs
repz
fwait
lods
repz
cmp
dec
push
insb
fidivrs
fs
push
cmpsl
aam
mov
fimuls
pop
adc
wbinvd
xchg
pop
movsb
repz
test
aaa
shrb
jmp
jg
cld
stc
das
xor
dec
xor
mov
push
out
lahf
aas
jo
sub
cmp
imul
cld
stc
repz
cli
xchg
imul
mov
in
test
iret
lahf
aas
jg
outsl
or
jl
mov
cmp
stc
repz
and
dec
push
into
mov
add
out
out
aas
stc
je
mov
xchg
xchg
mov
cld
stc
repz
clc
mov
nop
cmpb
or
gs
xchg
scas
cmp
outsl
fidivrs
and
call
push
mov
int
aaa
add
icebp
xor
aad
neg
mov
lods
xchg
adc
sbb
lret
dec
int
aaa
outsl
jne
mov
fldl
in
fisttps
pop
mov
cmc
flds
dec
dec
fsubl
shlb
fwait
cmp
pop
fsts
in
and
mov
and
pop
aas
jg
cld
push
inc
std
cs
shlb
iret
lahf
pop
test
sub
into
pop
pop
sahf
cld
stc
dec
stc
mov
pop
pushf
pop
inc
mov
iret
call
xor
test
mov
cld
sub
cmp
int3
fsub
imul
iret
mov
ja
jo
sbb
daa
daa
lret
pop
jg
cld
stc
xchg
xchg
test
jno
dec
aas
addl
xchg
add
out
call
stc
repz
mov
dec
xor
dec
push
das
jmp
bound
xchg
fdivp
das
pop
ja
ljmp
out
ret
imul
aaa
mov
fdivl
push
cld
stc
repz
push
inc
lock
add
cmpsl
mov
daa
aas
jg
sti
add
sbb
add
adc
out
shrb
daa
imul
mov
xchg
iret
lahf
cmp
dec
ret
mov
rcrb
pushf
call
test
repnz
je
ljmp
dec
mov
or
add
mov
jecxz
lock
aaa
outsl
ficomps
lock
out
push
cmp
in
xchg
lcall
mov
sub
scas
aas
fstl
sub
repz
lahf
out
or
mov
testb
cld
stc
pop
nop
xor
fsubs
sub
jns
pop
inc
popf
jb
out
lahf
aas
fisubl
rol
cmc
mov
fmulp
pop
cli
leave
mov
popa
rcr
out
andl
out
cwtl
sub
test
add
dec
xlat
dec
pop
das
outsl
fidivrs
inc
mov
pop
dec
push
push
jmp
aaa
mov
mov
push
inc
int
imul
repnz
je
das
xlat
pop
outsb
imul
ss
sbb
jne
push
pop
mov
stc
repz
lret
adc
push
fcmovbe
cmpsl
add
sub
jg
cld
inc
ja
mov
stos
mov
push
repz
lahf
or
mov
leave
xchg
out
jbe
jno
cld
stc
mov
dec
mov
imul
dec
add
iret
lahf
aas
dec
jno
in
mov
shl
jns
push
lahf
jg
leave
cmpsb
fsubrp
fbld
dec
adc
repz
mov
mov
inc
pop
inc
cs
xor
xchg
repz
jge
arpl
adc
add
cld
stc
mov
ficomps
push
pop
push
sbb
mov
pop
jmp
iret
lahf
aas
xor
mov
or
aas
jl
rcrl
cmp
jnp
sahf
xor
hlt
dec
inc
stc
repz
sub
gs
adc
dec
test
aad
jl
sbb
popf
jle
or
lcall
lahf
jp
in
xor
mov
leave
out
cmp
or
add
mov
push
adc
mov
repnz
leave
test
jbe
ja
ja
dec
outsl
fidivrs
adc
mov
dec
loop
idivb
push
out
cltd
or
lahf
mov
repz
ret
add
repz
adc
outsl
out
dec
ljmp
sbb
pop
cld
sti
enter
lret
mov
cltd
push
xchg
in
test
aas
jg
sbb
loopne
lods
stos
jno
xchg
inc
out
stc
repz
inc
movb
lods
test
adc
push
mov
sbb
sti
jne
subb
repz
aam
nop
mov
lahf
adc
fsqrt
adc
adc
jns
sbb
jno,pn
imulb
popf
adc
clc
jg
insl
and
cmpsl
push
push
or
out
lahf
aas
inc
andb
cltd
sub
pop
push
leave
daa
cld
stc
repz
dec
or
and
insb
jle
inc
xor
das
outsb
ss
jmp
mov
out
add
lahf
dec
stos
leave
push
mov
jecxz
adc
mov
lods
jne
aaa
outsl
jae
mov
mov
inc
lock
int
inc
icebp
and
scas
outsl
fidivrs
addr16
jae
ja
mov
sar
fsub
int
aaa
filds
and
pushf
inc
pop
push
fidivrs
or
xchg
int
les
mov
shll
aaa
outsl
xchg
adc
out
paddb
rorl
dec
cmp
outsl
fidivrs
jecxz
movsb
xlat
divb
lods
out
sbb
jp
mov
mov
repz
push
std
outsl
rclb
cmp
mov
aas
ljmp
test
pop
cmp
out
jecxz
neg
out
stc
or
sbb
jle
aas
jg
popa
es
lods
and
es
xor
repz
std
mov
out
xchg
xchg
fidivrs
mov
mov
cmp
or
pop
hlt
stc
repz
add
insb
and
add
inc
lret
xor
cld
jbe
fcom
push
mov
lret
mov
cld
stc
sub
call
addb
out
lahf
sub
mov
push
insl
lret
xlat
and
jg
cld
stc
and
or
arpl
aam
adc
inc
call
jg
mov
into
jne
fistpl
mov
out
lahf
aas
lock
add
rcrb
jecxz
cld
stc
repz
mov
push
jno
insl
test
iret
lahf
aas
jg
adc
repz
jmp
cld
stc
repz
loope
jl
push
fmull
mov
jg
ds
sti
mov
sbb
enter
in
in
outsb
mov
pop
mov
or
clc
call
ret
sbb
out
fwait
aaa
cld
mov
sub
push
and
push
and
adc
sti
xabort
cmp
out
aaa
outsl
fisubs
pop
cltd
addl
cld
stc
adc
pop
mov
push
xlat
iret
lahf
aas
jg
ss
mov
cmp
cmpsl
pop
cld
stc
repz
inc
fsubs
fildll
insb
leave
ficoml
out
aam
mov
das
shll
fnstcw
test
sahf
repz
arpl
loopne
add
cld
pop
sbb
jmp
xchg
insb
data16
rolb
call
popf
call
inc
and
outsb
cld
stc
repz
mov
and
jg
dec
outsl
lahf
aas
jg
xor
pushf
cmp
xchg
outsl
inc
dec
aad
ljmp
arpl
cmp
orl
popf
mov
cld
idiv
xchg
and
out
xchg
lods
push
sahf
mov
iret
lahf
icebp
push
xor
xlat
pop
sub
xchg
cld
stc
mov
inc
lret
add
aaa
jb
dec
mov
sti
icebp
cltd
or
outsb
call
out
vpmaxub
jle
xor
xchg
in
int
aaa
outsl
iret
popa
adc
sub
mov
outsb
jae
or
jae
lds
push
xchg
inc
push
sbbb
mov
adc
mov
scas
fcmove
jns
out
cmpsl
lods
xor
jp
in
arpl
cmp
adc
jbe
xlat
cmpsb
add
in
mov
fwait
aaa
lcall
imul
jns
jbe
popa
mov
adc
clc
or
jp
aas
sti
dec
xor
inc
outsl
xor
cmc
xchg
jo
pop
pop
cmp
dec
scas
push
xor
test
or
out
jl
sti
pop
mov
jnp
mov
in
jg
cld
stc
push
or
cmp
mov
out
jns
cmc
add
int
test
xchg
loope
cmpsb
shl
mov
mov
inc
shrl
xor
iret
sbb
outsl
fiadds
jae
inc
cmp
jns
out
repz
cmp
lods
rorl
mov
adc
aas
jg
cld
stc
out
mov
or
mov
iret
lahf
aas
movsl
stc
aaa
bound
add
lds
inc
repz
jp
mov
rclb
push
xchg
aad
outsl
fidivrs
outsl
lcall
jecxz
fucomp
out
enter
scas
jbe
jae
in
push
lds
cld
stc
repz
into
popa
cli
and
shl
push
cmp
jg
or
cmp
mov
xlat
lret
cld
stc
repz
mov
push
lods
mov
psrlq
mov
pop
and
shr
aas
test
mov
sahf
pusha
test
scas
mov
adc
cld
stc
xchg
cmc
cmp
loop
mov
mov
ja
fimuls
mov
and
call
lahf
xchg
inc
icebp
iret
roll
or
repz
ja
cltd
mov
dec
fwait
aaa
outsl
ficoms
pop
mov
inc
inc
push
xchg
outsl
pop
jo
xchg
jns
out
aaa
cmp
loopne
mov
mov
or
fdiv
hlt
sbbb
es
jbe
dec
repz
fwait
add
mov
fwait
add
dec
outsl
fidivrs
addr16
insl
mov
xchg
and
out
fwait
aaa
fidivrl
movsl
fisubl
mov
pop
fnstenv
push
call
inc
push
cld
orl
es
test
inc
jle
test
push
fs
jmp
movntq
out
lahf
mov
dec
mov
repz
push
xor
cld
stc
repz
cwtl
gs
mov
mov
push
jno
lea
aas
jg
test
sbb
push
test
lahf
jg
divl
xor
pop
pop
sbb
cmp
xor
repnz
pop
cld
jecxz
sete
add
dec
inc
pop
mov
sub
ljmp
idivl
mov
jns
mov
int
mov
sbbl
or
cli
fwait
aaa
outsl
fiadds
daa
mov
inc
ret
into
lods
fldcw
repz
das
dec
les
or
jle
mov
pop
leave
fsub
orl
pop
rclb
cmp
das
pushf
jns
out
adc
cmp
rcrb
xor
outsl
fidivrs
mov
cs
add
mov
addr16
ljmp
push
xor
pop
fidivrs
jle
int3
das
adc
sahf
les
enter
lods
enter
mov
push
ss
xchg
mov
out
mov
les
outsl
fidivrs
inc
ds
jo
pop
sbb
jbe
out
fwait
pop
subl
pop
or
sbb
jns
mov
test
add
jle
out
fwait
aaa
dec
push
push
add
push
jb
fdivrl
cmp
pop
xor
ds
movsb
sbb
repz
lcall
push
lea
and
mov
lcall
jg
notl
pop
mov
sarl
in
fdivrp
repz
cmp
std
adc
pop
rorl
scas
aas
jg
cld
insb
pushf
or
repnz
std
nop
cmp
enter
ffreep
jl
jmp
int
aaa
sarb
adc
cmp
out
je
scas
test
out
adc
iret
loop
cmpl
mov
aas
xchg
fwait
aaa
outsl
fisubrs
insl
xchg
fidivl
xor
cld
repz
leave
int
repnz
jg
rorb
cld
stc
iret
mov
pop
mov
jmp
sub
xchg
in
mov
daa
movsb
in
inc
negl
rep
inc
xor
cmp
shr
add
jg
in
mov
or
and
in
les
aas
inc
call
jns
je
inc
pop
sub
inc
clc
popa
pop
fwait
aaa
outsl
faddp
or
addr16
out
out
mov
jns
out
jae
les
cmp
pop
repz
mov
mov
mov
jns
cld
stc
jne
iret
dec
jae
stc
mov
cltd
aad
cmovbe
out
lahf
aas
adc
or
xchg
gs
mov
inc
insb
and
pop
xlat
mov
adc
or
inc
dec
mov
aas
jg
mov
iret
aam
dec
int
mov
inc
pop
inc
and
mov
cmpsb
aas
dec
imul
out
xchg
mov
sub
stos
mov
jb
test
and
mov
mov
ljmp
cli
add
ja
inc
fdivp
sub
mov
jo
repz
fwait
stos
pusha
cmp
jmp
and
adc
jb
push
pop
mov
fs
push
adc
movb
popa
stos
fildll
rorb
imul
sbb
cmp
addr16
cmpsb
mov
pushf
lcall
outsl
ret
js
mov
mov
fisubs
ja
jns
out
lods
mov
push
ret
icebp
popa
outsl
push
or
dec
pop
mov
inc
jl
dec
mov
mov
and
out
fwait
mov
lods
xchg
xchg
and
testb
mov
aas
mov
lea
int3
dec
xor
out
imul
fwait
aaa
jg
incl
insl
add
int
sbb
xchg
in
out
cmp
sbb
pop
outsb
xor
movsb
aas
xchg
iret
push
xor
sub
fidivrs
cs
fidivrs
add
dec
ss
fwait
int3
dec
push
int3
repnz
mov
outsl
fidivrs
xor
es
dec
dec
out
fwait
aaa
vmwrite
inc
jbe
mov
dec
push
loope
mov
jp
or
and
mov
ja
call
add
jecxz
and
pop
xchg
push
movsl
mov
pusha
xchg
lock
dec
test
outsl
fsubp
popa
lock
scas
rorl
sti
sbb
aaa
cli
bound
jnp
out
sbb
outsl
fidivrs
insb
mov
or
pop
repz
fwait
xchg
stc
pop
lcall
xchg
outsl
fidivrs
pop
push
insl
dec
add
mov
aaa
and
scas
push
test
repz
ljmp
outsl
fiadds
pop
jle
jns
pop
inc
xchg
cmpsl
insl
cmp
fwait
aaa
loopne
pusha
adc
andb
fidivrs
int3
sbb
cld
inc
mov
aaa
outsl
loopne
or
jmp
xchg
mov
leave
sbb
out
mov
inc
mov
fsubs
inc
inc
insl
ljmp
sbbl
xchg
fstpt
cld
stc
es
test
jbe
or
insb
out
lahf
aas
rcrl
sub
lret
add
scas
rorb
insl
out
sbb
sub
cmp
lds
mov
lods
test
pop
push
leave
mov
adc
fwait
inc
mov
fwait
aaa
outsl
adc
cmp
clc
popf
mov
inc
sbb
sub
aas
hlt
xchg
xor
lret
ret
pop
xchg
jp
out
stc
xchg
lcall
xlat
arpl
fnstcw
cmc
jne
popf
pop
mov
and
jg
add
inc
jp
jmp
aaa
outsl
fidivrs
pushl
xchg
call
dec
repz
fwait
fwait
push
test
sub
imul
scas
bound
jb
aam
add
push
cmp
jnp
sbb
movsl
fwait
aaa
outsl
fidivrs
adc
das
icebp
xchg
sbb
push
xor
cmp
out
nop
dec
pop
inc
jno
inc
loopne
push
fcomps
fidivrs
leave
mov
xchg
out
fwait
aaa
xchg
loop
xor
push
testb
sub
repnz
jne
push
xchg
addr16
out
out
adc
cltd
pop
push
xchg
mov
out
fwait
jle
repnz
loop
cld
sti
mov
cld
enter
xor
sti
aas
fmul
out
lahf
aas
sahf
adc
movb
bound
adc
stc
pause
cmp
mov
xchg
and
ficoms
aad
mov
sub
repnz
dec
xchg
add
sar
pop
stc
stc
ja
insl
cmp
in
pop
sub
mov
iret
lahf
aas
in
push
iret
xor
inc
bound
sbb
stc
repz
push
into
mov
mov
scas
mov
testl
ficoml
mov
iret
pop
aas
jg
cld
mov
imul
jbe
jmp
cs
dec
repz
lahf
lods
iret
out
sub
arpl
or
inc
or
aam
repnz
xchg
push
test
sar
iret
lahf
aas
jg
rol
adc
inc
dec
inc
out
cmc
leave
and
jg
mov
cmp
pop
mov
mov
repz
mov
lcall
notb
xchg
jmp
out
popa
mov
pop
adc
repz
mov
xchg
daa
push
in
dec
cmpsb
js
decl
lret
shrl
jecxz
jns
enter
test
cli
fsts
fidivrs
cmpsb
push
mov
mov
sbb
aaa
outsl
fidivrs
out
insl
out
dec
addr16
dec
in
loop
fwait
insb
or
fidivrs
mov
and
or
sbbb
fwait
mov
dec
fnstsw
cmpsl
and
jae
xor
mov
dec
mov
cmpsw
xlat
adc
push
inc
cltd
jns
ss
fidivs
repz
std
jg
aad
lea
pop
xchg
shll
test
iret
lahf
aas
test
mov
push
adc
popf
push
mov
repz
cli
stos
mov
add
mov
pop
dec
mov
in
pop
repz
lahf
jl
ret
add
divl
cld
stc
adc
add
inc
add
outsb
add
jecxz
out
lahf
aas
into
cmpsl
popa
ret
in
mov
xchg
xchg
xchg
mov
repnz
outsb
jae
pop
hlt
fidivrs
sarl
loopew
int
aaa
outsl
aas
or
mov
pushf
mov
out
jmp
jae
es
pop
shlb
jecxz
mov
rclb
xlat
jp
mov
fidivrs
cmp
test
test
repz
rol
scas
lods
or
add
outsl
fidivrs
jb
ljmp
icebp
iret
loop,pt
fwait
aaa
mov
out
inc
adc
mov
nop
fisttpl
xor
movsb
fwait
aaa
outsl
fidivrs
mov
test
jns
out
scas
sbb
jmp
jbe
dec
inc
and
mov
lock
lret
out
add
pushaw
inc
push
jg
aam
popf
cmp
cld
ljmp
pushf
sub
xchg
iret
lahf
aas
in
arpl
inc
mov
je
scas
push
daa
pop
dec
jnp
push
aaa
outsl
ficomps
lea
sub
jno
xchg
je
in
int
xor
mov
repnz
mov
rol
mov
inc
inc
fcomps
repz
jno
push
sbb
dec
mov
xor
mov
sub
enter
aaa
out
and
xchg
or
movsl
jg
out
lea
fwait
pop
mov
popa
daa
push
out
fwait
ja
pusha
adc
std
inc
cmpsl
and
dec
fidivrs
data16
sbb
js
xor
fwait
aaa
outsl
add
xchg
and
jns
out
enter
add
out
inc
sub
in
fwait
aaa
outsl
fidivs
cmp
or
cmpsb
loop
int
inc
push
xlat
push
jg
pop
fidivrs
out
xor
xorl
sbb
mov
outsb
sti
iret
mov
out
jnp
xor
scas
insl
dec
cmpsb
lds
push
daa
mov
mov
lods
pusha
and
stos
sbb
int
aaa
outsl
fsubr
pop
pushf
or
cmpsb
jge
sbb
jns
out
ja
flds
xchg
xchg
pop
sub
adc
outsb
fisubs
or
rol
add
stc
das
or
add
fdivrl
sub
adc
jmp
out
jne
aas
out
cmp
loope
lahf
cld
cld
stc
sub
jb
cmp
add
and
adc
push
lds
sbb
pop
push
ss
pop
xor
out
aas
push
nop
outsb
or
push
scas
sti
scas
sub
lea
adc
repz
stos
neg
mov
int3
push
js
in
adc
or
fwait
aaa
outsl
pop
cmp
les
sub
insb
lods
and
leave
rol
jo
mov
add
repnz
dec
shlb
call
cs
push
jne
push
cmp
xor
sbb
out
xorb
adc
adc
or
out
ret
ror
cmp
add
cld
stc
xlat
mov
dec
cli
jb
push
repnz
gs
jns
mov
iret
push
scas
outsl
lds
int
ja
xlat
jmp
push
test
mov
test
sub
mov
outsl
ficoms
sbb
loop
in
nop
xchg
sbb
imul
aad
jg
scas
lahf
fdivrl
out
ficoms
dec
dec
sbb
xlat
rorl
xchg
fwait
aaa
lods
push
cmp
mov
push
push
mov
or
push
aam
pop
cmp
cwtl
ljmp
fwait
aaa
jbe
cli
test
adcb
or
mov
pushf
adc
in
in
out
lret
lahf
ja
punpckhwd
js,pn
sbb
aas
repz
fwait
dec
scas
jno
pushf
and
cmp
scas
xor
jns
inc
into
sub
push
jp
inc
daa
mov
loop
fwait
aaa
shrl
push
jns
cmp
lahf
aas
ljmp
scas
jp
dec
call
out
icebp
leave
mov
inc
xchg
inc
pusha
fs
or
iret
repz
icebp
cmc
sbb
lret
andl
fildl
mov
fcmovnb
test
test
pop
les
xchg
daa
ljmp
fwait
aaa
mov
rcrl
sub
lahf
aas
call
fs
test
mov
imul
inc
ret
cld
stc
repz
or
xor
aaa
cmp
pop
ficomps
pavgw
cmp
movl
push
pop
lret
cmpsl
xchg
out
jo
shlb
cmp
cld
stc
rep
dec
outsl
imul
inc
pavgw
pop
repnz
jg
xlat
mov
and
cmpsb
xor
clc
in
mov
sti
push
push
sahf
pop
xchg
lahf
out
outsl
fidivrs
xchg
jnp
inc
int
hlt
adc
cmpsb
addb
pop
sbb
rorb
leave
jg
in
and
fidivrs
mov
xor
dec
jl
push
aaa
rolb
mov
lock
movsb
add
repz
fwait
test
or
lea
push
mov
sbb
scas
mov
mov
ljmp
inc
cmp
mov
ljmp
addr16
lods
roll
test
adc
rcll
scas
xchg
call
cltd
bound
loopne
fwait
pop
dec
cwtl
outsl
inc
push
jecxz
mov
fsubrs
orb
popf
pop
push
repz
jg
pop
fsubrl
mov
mov
lcall
outsl
sub
cmpb
addr16
int
aaa
sbb
stos
mov
inc
dec
aas
jg
enter
jbe
add
aas
test
sub
out
sahf
loop
int
aaa
outsl
pop
test
int3
xchg
repz
fs
mov
inc
fsubrs
push
mov
and
ret
dec
and
dec
movsb
leave
and
int
or
movsb
add
fwait
dec
nop
mov
xor
mov
xchg
lahf
ds
or
dec
ja
push
lret
das
sbbl
jecxz
icebp
ds
in
cmp
dec
mov
ror
jg
xlat
adcb
popf
xor
cld
dec
xchg
mov
sub
push
loop
sub
mov
pop
pop
sarl
lahf
aas
jg
mov
push
jp
rorb
mov
mov
jg
ja
test
pusha
out
xchg
lahf
jg
ljmp
mov
cld
stc
repz
push
out
inc
push
loope
or
or
aas
jg
call
or
sti
int
aaa
push
imul
pop
hlt
jl
in
cmpsb
repnz
push
lods
and
push
cwtl
xor
cmc
out
fwait
aaa
outsl
fimuls
enter
adc
jns
out
cld
jns
hlt
xchg
lds
loop
sbb
push
mov
icebp
mov
lret
jecxz
xor
fwait
in
maskmovq
notl
loopne
repz
pop
adc
arpl
idivl
aaa
outsl
fidivrs
insl
test
mov
orl
mov
enter
push
xlat
push
aas
sarl
jle
lock
mov
inc
ret
outsl
lret
into
and
inc
mov
mov
hlt
aaa
outsl
fidivrs
test
sbb
sbb
cmp
repnz
fwait
mov
mov
pop
cwtl
mov
add
jne
nop
ja
fists
jle
xlat
inc
and
out
cmp
pushf
jo
jo
mov
sar
vpunpcklqdq
xchg
push
sarb
mov
fwait
aaa
outsl
dec
and
imul
addr16
stc
jae
out
std
leave
cmp
jle
mov
cmpsb
imul
fidivrs
in
xchg
lret
inc
inc
addb
test
xchg
fwait
mov
add
jno
jae
mov
enter
pop
cmpsl
sti
pop
mov
out
lahf
into
mov
lods
inc
insl
xchg
icebp
push
fdivrs
cld
stc
jl
sbb
inc
mov
fld
daa
inc
and
add
enter
loop
sbb
nop
lahf
hlt
pop
std
mov
mov
fidivrs
push
call
repnz
pop
cmp
mov
call
fs
out
addl
ds
push
xchg
lahf
loop
aaa
out
sub
add
jbe
jns
jns
fdivrs
fnsave
pushl
dec
dec
repz
lahf
mov
dec
lock
add
es
cld
stc
inc
mov
and
xor
ds
push
inc
outsb
sete
push
hlt
push
ja
jno
dec
lret
sbb
ret
mov
stc
repz
into
pushf
adc
cld
xor
fs
push
pop
or
lret
out
lahf
mov
nop
insl
shl
rolb
cld
stc
lock
push
xchg
fisubrs
nop
dec
and
or
iret
lahf
aas
dec
sbb
xchg
pop
add
mov
push
aad
cld
stc
repz
call
mov
repz
jp
sahf
aas
jg
jg
ret
push
xchg
sbb
inc
cmp
xchg
cmp
rcrl
std
mov
popa
xchg
jp
lahf
pushw
fs
test
adc
cmp
mov
bound
adc
jns
test
push
shrb
inc
push
fimull
aas
xor
loope
aas
insb
jle
out
enter
cltd
lds
mov
rcll
sbb
stc
repz
out
aad
fadds
stc
repz
sbb
imul
mov
inc
and
and
loope
out
icebp
xchg
iret
lahf
mov
icebp
cmp
incb
mov
push
jb
out
adc
jo
pop
enter
repz
or
add
cmp
movsb
pop
outsb
addb
int
aaa
outsl
add
sub
lods
shlb
mov
xchg
outsl
cmp
leave
inc
fwait
aaa
outsl
fisubrs
in
mov
mov
xor
xchg
repz
int
popa
xor
push
ds
mov
sub
fwait
cmc
or
fdivrs
fiadds
call
xchg
ja
out
fwait
push
iret
jecxz
xor
add
push
lahf
aas
cmp
insl
in
mov
or
rclb
sbb
out
repz
sahf
add
xor
jns
cmp
icebp
nop
jl
test
pop
andl
movswl
cmp
repz
stos
add
neg
aam
mov
sub
repnz
aaa
outsl
and
mov
sub
inc
imul
xchg
push
push
test
mov
or
mov
push
mov
xchg
aaa
outsl
xorb
negl
jecxz
stc
repz
xlat
pushf
out
lock
aam
ffreep
and
push
pop
rcl
xchg
loopne
and
das
repz
lahf
sarl
push
sbb
pop
mov
or
inc
int3
push
xor
add
push
or
push
out
aad
and
xor
inc
sbb
or
adc
addb
in
test
rolb
sarb
adc
sbb
cmp
pop
add
push
and
rcrb
jecxz
rcl
inc
sub
ret
shl
inc
push
push
sbb
or
outsl
mov
adc
into
jo
and
add
inc
pop
mov
lcall
scas
mov
add
pop
das
add
cmp
xchg
test
sbb
sbb
movsl
adc
rcrb
cmp
adc
sbbb
bound
outsl
iret
push
push
mov
xorb
or
mov
or
push
inc
mov
pop
mov
lods
push
orb
test
xchg
roll
push
in
stos
xchg
cld
sub
or
sbb
sbb
call
push
xchg
adc
push
sub
inc
iret
push
rcrb
mov
push
or
in
nopl
sbb
pop
es
mov
add
and
rcll
ljmp
icebp
sbb
cmp
insl
and
shll
rcll
insl
sbb
lret
sub
cwtl
push
jne
ret
xor
lret
or
adc
test
jo
jnp
pop
clc
sbb
pusha
jae
mov
or
je
jae
sub
push
test
fisttpll
popf
sbbl
push
or
pop
mov
rcll
push
xor
jbe
pusha
cmpsl
outsb
test
add
mov
mov
clc
push
mov
icebp
push
cmp
and
mov
jle
call
loop
or
jne
inc
ss
xchg
cmp
adc
mov
repnz
adc
sub
mov
mov
inc
xor
or
or
or
outsl
adc
mov
nop
adc
pop
push
cltd
aaa
push
sub
loopne
ja
push
arpl
stos
fcmovb
or
ljmp
jge
clc
or
push
add
call
stos
push
adc
xchg
fdiv
ret
into
loopne
jb
inc
push
mov
add
gs
loope
pop
mov
test
imul
dec
jge
jne
or
mov
loopne
xor
jae
andl
repnz
sbb
repnz
pop
inc
scas
adc
push
cmp
scas
mov
cmpsl
dec
xor
or
ljmp
repz
push
in
cmp
add
or
cs
push
andl
dec
scas
jl
push
lea
and
mov
sbb
dec
fs
ret
or
sub
imul
or
add
xchg
push
enter
mov
cli
sbb
insl
mov
out
or
adcb
into
sub
dec
sub
dec
popf
mov
push
fidivrl
sbb
push
cmpsl
mov
inc
push
xchg
lcall
es
jle
call
and
and
dec
gs
pop
popf
or
pusha
cmpsb
lahf
sub
test
inc
in
imul
decb
push
frstor
out
cli
jl
mov
xchg
imul
sub
dec
add
sti
pusha
dec
jp
push
xchg
out
ret
jl
pop
push
jle
and
rol
add
dec
and
adc
adc
call
push
mov
mov
stc
addps
rolb
sub
jae
or
shlb
add
cmp
pusha
xor
push
sub
sbb
fstpl
or
mov
jp
mov
ljmp
xor
and
mov
push
add
into
cs
sbb
test
or
imul
inc
xor
sbb
mov
cmp
adc
sbb
out
sub
mov
out
xor
imul
jbe
pop
and
sub
sbb
dec
das
cmp
push
mov
push
daa
or
test
push
lods
das
idivb
mov
gs
pop
pop
jo
mov
fsubs
xchg
pop
xor
andb
add
mov
in
cmp
movsl
test
xchg
lcall
push
in
loope
mov
out
loope
and
pop
pop
push
stos
push
into
push
loopne
add
jmp
in
lock
add
fnstsw
stos
sub
shrb
push
push
leave
adc
popa
push
sub
xchg
ss
pop
fwait
popa
sbb
jmp
setnp
xor
imul
inc
movsb
mov
inc
add
bound
clc
push
cmp
push
push
in
add
inc
add
call
push
sbb
pop
push
add
add
sub
decb
inc
fsubs
jge
out
pop
sti
into
inc
mov
popf
stos
xor
mov
aad
adc
shlb
add
pop
sahf
and
ja
mov
mov
pushf
mov
pop
push
and
fists
xor
mov
pop
sbb
jecxz
cmp
or
push
mov
shlb
sarb
push
js
popf
add
add
inc
lods
sbb
aam
or
cmp
clc
or
ss
or
mov
clc
adc
adc
dec
cmpsl
test
cmp
stos
sub
shlb
mov
cmpl
icebp
out
add
inc
in
push
mov
or
cmp
sahf
mov
xor
clc
inc
mov
or
bound
bound
jns
shrl
add
push
add
lea
sbb
mov
int3
xlat
sub
ss
repnz
add
mov
or
rorl
shr
ret
lea
enter
add
sub
sbb
decb
mov
lock
lahf
popf
lods
xchg
aas
cmp
dec
loopne
mov
into
mov
sbb
daa
sub
scas
dec
xchg
pop
loopne
in
scas
sub
and
push
mov
push
mov
add
scas
sub
dec
xor
sti
loopne
cmp
pop
mov
push
push
mov
mov
loopne
cs
inc
push
mov
ljmp
les
and
pop
sbb
pop
cwtl
in
add
add
mov
or
fisttpl
push
or
dec
mov
sbb
or
xchg
mov
add
and
xchg
add
fisubs
jo
pop
cs
and
cmp
lods
sbb
inc
repnz
shrl
add
xchg
mov
mov
add
xlat
popf
out
movsb
add
push
int
adc
call
sub
xchg
and
stos
add
ret
xchg
orb
jnp
mov
dec
roll
xchg
or
jmp
int3
std
add
sub
clc
xlat
roll
insb
dec
int
lea
fst
mov
fwait
hlt
pop
cld
push
lret
ror
or
push
or
mov
ficoml
or
inc
test
jo
cmp
rolb
push
mov
std
push
movb
pop
fucomp
add
je
rolb
pusha
cmp
adc
pop
cmpsb
mov
xchg
addl
and
daa
ljmp
adcb
jae
dec
sbb
push
push
inc
xchg
mov
and
xor
mov
test
lret
inc
or
adc
clc
lret
popa
andb
inc
xor
out
pop
aad
adc
mov
adc
push
add
daa
jmp
sbb
fcmovbe
clc
push
sub
adc
loope
or
dec
shlb
inc
cmp
orb
mov
jb
mov
pop
ret
pushf
mov
into
imul
xchg
jb
mov
add
jo
mov
in
push
xor
sbb
mov
jle
cmp
jecxz
sub
mov
aad
inc
push
imul
inc
movsb
sbb
mov
fdivrs
add
outsl
divb
mov
scas
or
inc
js
cmpsb
les
push
dec
dec
or
rolb
stos
aad
sbb
pushf
int3
xchg
movsb
test
hlt
mov
xchg
or
sbb
imul
push
aam
cmpsl
stc
or
sbb
nop
adc
jecxz
jb
add
rcl
rorl
stos
push
adc
or
cmpsb
adc
push
pop
xchg
lret
lods
jo
add
or
pop
mov
cmp
out
or
pop
xor
or
lock
sbb
lea
inc
daa
std
push
loop
jle
std
mov
and
add
sbb
mov
sbb
mov
jne
shr
mov
fwait
or
adc
lret
xchg
cmpsb
mov
sub
inc
ss
lds
jo
into
push
and
das
jo
add
sub
fbstp
push
xchg
cmp
sbb
jge
lock
lcall
gs
call
jmp
movsb
into
movaps
push
testl
sbb
add
shll
test
cmp
or
pop
lods
fs
jg
ljmp
adc
call
jo
inc
rcrl
xor
push
dec
mov
xchg
sbb
fstl
cmp
mov
or
sbb
fdiv
pop
pusha
push
jo
cli
push
les
scas
push
add
pop
dec
add
test
sar
dec
and
or
add
or
ja
add
or
aas
jge
ret
push
inc
adc
add
and
popa
addr16
push
rclb
sbb
and
adc
in
xchg
or
adc
xadd
mov
iret
sti
lret
push
shrl
mov
xlat
andl
inc
or
xor
push
pop
shll
adc
loopne
sbb
nop
jno
cwtl
rorb
das
sarl
or
int3
not
push
push
xor
xchg
push
fwait
mov
push
ret
or
cmp
ror
in
add
imulb
rorl
pop
jo
inc
xchg
es
jl
xor
inc
or
pop
add
movl
sub
popa
addb
inc
push
orb
dec
mov
xchg
dec
push
jne
sub
cmp
inc
mov
xor
cmp
adc
mov
inc
sahf
inc
test
push
xchg
clc
adc
mov
add
mov
push
ud0
add
push
shr
mov
xor
push
or
jo
jne
lret
pusha
mov
push
jbe
mov
add
sar
sbb
add
add
and
dec
roll
dec
lret
inc
pop
cwtl
sbb
or
sbb
pusha
imul
sbb
pusha
rcrb
add
mov
scas
stos
cmp
lock
repz
enter
sbb
pop
es
add
testb
dec
loop
xor
test
loope
sub
rclb
xlat
push
sub
cmp
sbb
dec
sbb
cli
mov
add
fstpl
inc
adc
and
loopne
push
mov
adc
cmp
mov
and
in
add
sub
js
xchg
or
sub
dec
mov
cld
push
into
mov
pop
insl
into
mov
mov
xor
lds
scas
scas
push
shll
das
stc
push
add
or
mov
cltd
test
popf
test
inc
test
outsl
push
faddl
hlt
xor
jo
stos
inc
xor
cltd
add
das
push
jb
push
rclb
cld
adc
push
mov
scas
adc
push
jne
andb
dec
and
add
les
cmp
into
adc
loope
add
cmc
sub
movsl
sub
pop
add
in
cmp
sbb
dec
jo
push
adc
push
xor
pop
mov
add
pusha
lds
jecxz
mov
mov
and
dec
sarl
sbbl
in
push
add
add
fs
mov
add
adc
mov
cwtl
ds
pop
and
ret
sbb
dec
inc
push
rclb
lock
into
aaa
hlt
xor
int
aad
mov
add
push
int
mov
or
mov
sbb
mov
hlt
shrb
andb
push
js
int
out
sub
mov
nop
push
add
pusha
je
pop
shll
into
pushf
ret
xor
xchg
push
push
mov
dec
adc
inc
test
push
jae
push
hlt
fwait
and
in
or
nop
lret
test
andl
js
test
enter
mov
push
int
loope
call
and
pop
add
sbb
andb
lock
sbb
and
mov
ffree
fnsave
push
or
cltd
fists
dec
or
into
das
jmp
jge
fiaddl
das
add
dec
iret
push
push
rol
testl
and
orb
icebp
flds
and
mov
add
call
adc
or
lods
bound
sbb
add
xchg
mov
add
xchg
sbb
loop
add
adc
sbb
push
push
push
jl
adc
xor
adc
pusha
adcb
push
add
push
sbb
les
pop
xor
add
mov
pop
or
mov
fwait
jp
add
dec
add
adc
addl
sub
leave
pop
sub
subb
adc
rcll
jo
dec
push
neg
jge
xchg
sbbl
inc
movsb
or
in
shll
pushw
sbb
sub
andl
leave
roll
lcall
add
adc
dec
adc
jp
jo
sbb
add
push
sbb
les
jae
gs
pop
popf
and
or
outsb
dec
push
xor
inc
ja
sbb
stos
jo
loop
adc
or
xor
lcall
aas
xchg
push
mov
push
call
add
mov
or
mov
or
adc
bound
std
pop
insb
xchg
in
push
add
ret
push
fadds
jge
ds
jo
test
inc
mov
and
iret
or
mov
stos
adc
add
add
add
xchg
xor
movb
xor
imull
inc
add
mov
mov
mov
cmp
add
jmp
cmp
cld
repnz
push
sbb
pop
ljmp
inc
and
sbb
or
ss
daa
xor
mov
cltd
lret
es
fimuls
sbb
sarl
ret
xor
push
add
xor
sahf
scas
dec
xchg
ds
sbb
iret
or
sbbl
push
roll
and
in
dec
xchg
mov
inc
scas
stc
and
mov
repz
sbb
es
ljmp
cmpsl
or
ret
jmp
jns
adc
rclb
pop
negl
pop
dec
rolb
xchg
xchg
aam
mov
dec
aas
shrb
in
push
push
xchg
in
sbb
cltd
shrl
sbb
sbbb
inc
xchg
mov
add
add
sbb
xor
rcr
adc
test
out
push
ret
hlt
xor
jbe
push
inc
mov
add
xchg
jecxz
adcl
lcall
adc
pop
insl
fsubl
cs
add
shll
adc
int
push
adc
push
xchg
dec
push
add
or
or
mov
push
fxch
jmp
pop
je
cltd
ljmp
test
inc
in
jne
cmc
insl
int
push
push
mov
int
push
mov
pushf
fcmovnb
push
mov
xor
addr16
out
cmc
nop
and
insb
leave
loope
push
movsb
cmp
mov
pop
in
aaa
gs
cmp
cmp
test
and
rclb
loopne
aad
out
and
sbb
xchg
and
ret
lret
mov
lods
sub
sahf
in
cmp
or
out
sarb
out
int3
sarl
mov
fisubrs
ret
test
and
push
mov
lret
xchg
lock
std
jg
rclb
xchg
call
and
rolb
add
xor
add
push
jb
test
add
add
inc
jle
sbb
jne
adc
lds
push
and
sarl
in
inc
lock
xchg
jecxz
test
addb
cmp
fwait
lock
stos
in
or
xor
inc
pop
sahf
xlat
sbb
sbb
cmpsl
sbb
pop
jne
mov
inc
daa
imul
es
or
movsl
mov
lret
adc
jns
adc
vmread
push
push
insb
xchg
xchg
adc
lret
sbb
sbb
add
rolb
mov
inc
out
or
pop
aam
ds
push
push
xlat
sti
rcr
push
or
adc
add
daa
dec
pop
jp
or
insl
leave
or
sub
dec
pop
out
inc
push
arpl
stos
xchg
or
or
neg
push
or
jecxz
adc
xorb
orb
pop
or
lret
xchg
jo
fisttpl
roll
lock
rcrb
or
add
mov
jle
leave
dec
cmc
add
jne
push
icebp
adc
add
inc
ret
pushf
or
fwait
xchg
pop
icebp
rcll
notb
adc
inc
adc
mov
inc
sub
pop
cld
or
cli
sbb
dec
adc
insb
mov
sbb
dec
adc
xchg
fidivrs
or
in
call
push
inc
and
inc
pop
and
loop
cmc
fistps
inc
add
je
subb
out
sub
dec
sub
inc
push
mov
push
cmp
loopne
push
das
sbb
daa
add
and
pop
sbb
jb
mov
ds
push
pop
adc
add
pusha
xor
sbb
cmpsb
xor
inc
mov
mov
pop
push
mov
push
jge
jb
add
into
or
lret
bound
pop
push
lock
pop
rcrb
push
add
inc
cmpsb
inc
lods
lods
sbb
mov
cmp
lock
ret
and
mov
cmc
out
or
bound
rolb
or
mov
adc
fisubl
add
add
and
pop
mov
mov
addb
jbe
xorb
jnp
in
push
mov
and
mov
add
add
aad
xor
push
aad
push
xchg
pop
inc
mov
sub
sbb
fdiv
lret
inc
jl
xchg
lods
pop
enter
lods
fwait
cmp
xchg
push
or
add
xchg
rclb
iret
sbb
test
inc
xchg
pop
loopne
pop
loopne
in
add
in
adc
add
sbb
or
sbb
cwtl
add
adc
rcr
push
psllw
mov
and
sbb
ret
lock
add
mov
adc
add
add
xcrypt-ctr
cmpsl
pop
lock
fcoml
mov
mov
and
adc
cmp
mov
fiaddl
out
pop
mov
call
or
inc
xchg
std
cli
adc
mov
dec
data16
nop
test
mov
pushw
jo
test
and
ljmp
sbb
xchg
nop
lcall
xchg
sbb
aas
sbb
adc
pop
ror
xor
test
adc
jo
or
push
addb
jo
inc
jae
inc
notb
mov
xchg
test
test
dec
into
dec
push
mov
out
ljmp
push
cmp
xchg
sub
add
or
or
lods
adc
in
into
sbb
mov
jne
je
add
cmp
jg
add
mov
pop
fsubrp
add
adc
push
or
push
shlb
jno
or
mov
ss
cmp
sub
inc
arpl
pop
or
sahf
or
push
adc
or
mov
cmp
add
stos
add
cltd
mov
pop
adc
wbinvd
inc
or
jge
push
mov
adc
shlb
cmp
cmp
add
pushf
in
sbb
push
aam
es
ret
sub
or
mov
jo
sbb
mov
or
pop
sub
push
xor
loop
outsl
xor
mov
sbb
mov
lret
sbb
out
inc
cld
fldcw
int3
add
dec
addr16
mov
xchg
pop
in
push
lds
fists
mov
mov
jo
rolb
push
pop
je
and
sbb
pop
shll
mov
and
push
pop
and
push
pop
enter
push
xchg
pop
fadds
int3
jge
and
mov
es
adc
add
and
aam
lcall
mov
mov
rolb
push
sub
push
sbb
and
sub
adc
shlb
and
cmp
mov
mov
shlb
push
inc
xchg
lock
cwtl
add
pop
push
es
sbb
daa
inc
pusha
push
shl
test
inc
test
or
subb
or
clc
push
xchg
push
xor
push
push
ds
loop
xchg
lret
or
add
mov
faddl
loope
loopne
pop
sti
add
ret
cmp
sub
out
cs
jl
call
mov
jo
das
subb
das
adc
loopne
pop
push
mov
repnz
stos
stc
xor
bound
and
out
adc
out
sbb
inc
lods
push
jno
data16
out
aas
cmpsb
and
push
repnz
push
ret
or
out
add
xor
xor
pusha
cli
pop
sub
sbb
push
adcb
push
xlat
jb
sarb
jl
push
leave
mov
and
adc
inc
in
rorb
push
push
cmp
dec
or
subl
mov
sbb
lret
inc
stos
pop
fsts
in
add
mov
mov
or
fdivrs
test
or
pusha
and
dec
mov
add
xchg
popa
push
jecxz
add
inc
in
enter
xor
xor
subb
lock
int
sub
dec
mov
mov
sbb
adc
or
or
add
push
inc
dec
punpckhdq
notl
aad
inc
add
xchg
inc
mov
test
pop
xchg
lret
loope
add
xor
adc
sub
subb
pop
ret
mov
pop
loop
inc
xchg
mov
add
loopne
and
or
sbb
xor
add
mov
cmp
cmp
mov
mov
lahf
test
out
or
ljmp
adc
dec
dec
inc
sahf
pop
cli
or
push
pop
leave
dec
mov
or
or
inc
shll
inc
add
ror
inc
cwtl
cmp
xor
push
xor
aam
mov
inc
clc
mov
push
rorb
icebp
sbb
testl
pop
pop
sub
fstpl
adc
jge
sbb
lock
dec
sub
push
jge
aam
mov
add
dec
cli
dec
daa
fisubl
dec
cmp
pop
or
mov
inc
mov
sbb
pop
pusha
add
rorb
dec
sbb
rclb
mov
int
inc
je
adc
add
xor
mov
int3
pop
xor
mov
adc
fdivr
jno
jge
popa
and
stos
mov
push
xor
dec
push
dec
adc
jno
inc
shll
popf
sub
mov
sbb
or
jle
loopne
push
mov
push
push
mov
push
push
xor
sbb
sbb
sub
sub
je
pop
and
add
rcrb
test
test
or
add
inc
xor
rorl
add
stc
sbb
roll
cmpsl
cmp
or
mov
sbb
lret
sbb
pop
sub
adc
roll
int3
adc
add
mov
cmp
mov
and
daa
push
nop
mov
inc
and
mov
rclb
leave
jge
xchg
xor
ja
adc
add
inc
pop
mov
cmp
mov
fstl
leave
push
lods
imul
rol
loopne
dec
sbb
push
mov
pop
leave
hlt
add
dec
sub
mov
sub
sub
dec
das
adc
add
mov
jl
pusha
call
add
xchg
sbb
or
pop
insb
xchg
aaa
leave
hlt
and
loopne
inc
mov
and
adc
add
push
xor
or
sbb
pop
ljmp
inc
sbb
mov
fcomps
inc
add
and
pop
rorl
and
xchg
bswap
and
mov
lret
inc
int3
shll
push
arpl
inc
dec
push
mov
jge
sub
and
and
aad
stos
inc
call
rorb
pop
mov
mov
aad
or
sbb
fisubs
vpshaw
xor
adc
add
data16
jp
cmpb
pop
in
mov
stos
mov
add
mov
push
imulb
out
inc
add
das
or
add
pop
sub
sub
fistps
mov
push
in
sbb
fmuls
push
inc
push
iret
mov
xchg
xchg
int
adc
push
xchg
lcall
ret
adc
mov
or
inc
ljmp
jbe
movsl
je
push
sub
or
dec
inc
in
in
mov
mov
or
lock
imul
sbb
sbb
add
nop
outsl
cmp
sbb
into
negb
push
shlb
push
pushf
lret
fdivrl
into
push
cmp
leave
subl
jno
loopne
mov
xchg
pop
insl
sub
adc
add
add
add
loop
fnstenv
xor
cltd
cltd
pop
sbb
jecxz
nop
xchg
push
or
and
stos
cmpsl
pop
rolb
lock
pop
sub
es
sbb
jnp
adc
inc
lock
sbb
call
jbe
mov
push
push
inc
loopne
add
stos
aas
adc
int3
push
add
push
push
scas
pop
movsl
pop
mov
loopne
andl
pop
ljmp
lock
dec
or
mov
add
cmp
add
daa
sahf
mov
movsl
jns
mov
adc
popa
push
bound
add
adcb
adc
mov
fldl
sbb
mov
add
add
jne
or
mov
and
ret
adc
dec
cmpsb
inc
adc
mov
popf
push
push
xchg
imul
add
fistpl
fwait
ja
arpl
scas
lahf
inc
cli
adc
pop
fcoml
sbb
pop
sbb
out
rcrb
xor
jae
sub
add
inc
inc
into
add
dec
mov
and
jb
lods
mov
or
stos
add
inc
and
roll
adc
inc
dec
test
xchg
mov
ret
adc
pop
jne
push
pop
call
adc
mov
sub
in
clc
jnp
jb
imul
repnz
pusha
sub
subb
cmp
cmpsb
xor
adc
cmp
mov
movsb
or
xchg
gs
push
dec
xchg
cmp
sbb
cltd
lcall
ret
mov
int
adc
cmp
xchg
or
mov
aas
add
and
inc
iret
sbb
cltd
incb
sarb
or
or
ljmp
pusha
mov
or
test
mov
jg
sub
ret
push
je
stos
into
les
sub
and
loope
dec
add
and
add
mov
sub
aas
sub
cmp
inc
inc
mov
jmp
add
loope
or
hlt
test
dec
ret
lea
lcall
or
push
xor
xchg
test
loope
test
or
orl
cmpsl
dec
add
fistpl
cmovae
lods
ret
aas
mov
jecxz
push
cmp
mov
dec
inc
pushf
mov
out
scas
and
scas
mov
ret
mov
rclb
add
rorb
clc
push
pop
push
jo
or
and
xchg
sbb
sub
mov
sbb
test
enter
loopne
inc
rcl
rdtsc
pop
sbb
flds
pushf
aaa
mov
add
pop
call
arpl
sahf
rcrl
push
out
ret
test
popf
adc
jp
rclb
mov
or
adc
pop
stc
sti
push
jae
push
push
mov
das
mov
fisttps
add
inc
call
cmc
ror
mov
sbb
mov
xor
push
test
mov
mov
mov
pop
xor
mov
pop
pop
lods
jne
inc
dec
andb
and
pop
xchg
pop
ret
and
and
lcall
adc
call
mov
scas
gs
push
and
lock
push
mov
xlat
fstps
addb
adc
cmpb
xlat
adc
dec
aas
lods
mov
mov
mov
popa
and
xchg
and
and
add
and
push
or
rorl
inc
lcall
fcomps
cmp
andl
icebp
adc
das
inc
add
test
xchg
inc
push
loope
or
mov
mov
cmpsl
add
inc
sbb
pusha
inc
or
sub
scas
sbb
ja
xor
push
aas
cmp
adc
sbb
and
and
sbb
lods
js
mov
xor
and
sbb
inc
jno
leave
push
shrl
dec
xchg
mov
adc
sahf
mov
fs
mov
jns
or
mov
push
shlb
in
add
jns
sbb
push
pusha
cmp
rolb
mov
dec
jb
inc
inc
push
push
xlat
push
inc
lds
ljmp
push
leave
sub
xor
cmp
add
and
stos
lret
nop
add
add
clc
insb
push
jge
sbb
adc
adc
mov
or
daa
sub
push
js
mov
inc
cs
call
inc
mov
stos
setg
adc
jne
push
mov
sub
paddsb
push
subl
cmp
fldenv
xchg
jmp
push
dec
cs
imul
jle
add
adc
push
xchg
inc
xchg
test
imul
push
add
enter
fstps
mov
imul
or
mov
loopne
lahf
nop
add
mov
adc
push
cmp
sbb
jge
es
cmp
ret
push
sub
and
loope
xchg
dec
cmp
mov
pop
and
and
pop
mov
cmp
cmpsb
inc
push
cmp
cmp
add
push
push
jp
adc
sbb
sub
sub
rclb
fcomi
loopne
add
xchg
inc
push
sub
push
lret
shl
push
icebp
test
xchg
push
pop
aad
cmp
sbb
inc
pop
int
or
add
repz
cmp
dec
test
pop
xchg
xor
in
dec
add
or
and
inc
ficoml
xor
lcall
fistl
mov
cmpsb
fstps
arpl
add
fstps
cmp
xor
roll
inc
mov
loope
adc
dec
sahf
mov
pop
mov
push
pop
xchg
rorl
hlt
or
mov
push
jnp
add
jmp
dec
test
or
sub
xor
inc
sbb
or
in
adc
xchg
imul
aad
sbb
shr
not
pop
andnps
add
test
mov
test
xchg
popa
jle
in
loop
add
xor
pusha
lret
pop
insb
insb
or
lock
stos
push
add
cmp
leave
aam
mov
out
pop
sub
pop
pop
loope
ja
pop
adc
sbb
pop
subb
sbbb
lea
dec
int
push
lds
sbb
orb
andl
mov
cwtl
pop
xchg
push
imul
iret
or
jo
lods
xchg
push
sidtl
fsubs
push
fsubrs
inc
inc
movsb
xor
adc
fcmovu
inc
jge
or
push
dec
xlat
icebp
xchg
sub
imul
or
lcall
push
ret
mov
insb
into
inc
push
sysenter
push
imul
insl
and
leave
jg
jbe
inc
inc
cmp
adc
xchg
test
roll
cwtl
sqrtps
adc
ljmp
mov
bound
pop
jne
push
push
sub
lret
push
shrb
sbb
inc
sbb
jge
mov
hlt
enter
add
insb
adc
jg
adc
rorl
and
aaa
dec
push
loopne
pusha
pop
insl
push
inc
jge,pn
add
inc
movsb
lcall
push
and
ljmp
or
in
push
or
add
gs
xor
shrl
mulb
cmp
pop
mov
out
mov
pop
xor
call
sub
sbb
cmp
adc
popa
add
aam
sub
mov
xor
js
pop
or
push
jb
mov
adc
inc
ljmp
push
dec
inc
ljmp
sbb
insl
lock
int
xor
pop
ficomps
cmp
add
mull
inc
jl
rcrb
sbb
mov
jne
out
add
pushf
test
stos
test
mov
or
fwait
call
pop
mov
test
cltd
mov
roll
lds
inc
jnp
data16
push
or
nop
shl
jb
lods
push
daa
cmp
sbb
adc
adc
add
push
ljmp
and
fisubs
notb
divl
sbb
and
lods
and
inc
loop
test
add
xchg
add
cmp
mov
xor
xor
push
jo
ss
adc
test
cmc
mov
sbb
cmp
mov
mov
enter
retw
das
dec
imul
loopne
push
mov
inc
pop
and
decb
jo
mov
push
jmp
push
fisubl
mov
test
leave
dec
inc
pop
mov
mov
test
mov
sub
push
mov
addb
and
out
jg
call
cmp
jg
js
push
jg
or
cmp
gs
jg
mov
pop
push
dec
fadd
jbe
push
fidivs
mov
add
adcb
mov
adc
and
rolb
and
cmp
and
loop
mov
fsts
cld
pusha
pop
cld
pop
inc
mov
mov
test
mov
xchg
popf
test
mov
or
and
mov
mov
rcll
cmpb
clc
sub
and
aad
jo
or
xor
ret
gs
sbb
and
push
cmpsb
mov
addr16
es
push
movsl
push
mov
mov
aaa
dec
or
loopne
mov
sbbb
call
add
hlt
mov
add
xchg
adc
sub
add
rolb
push
push
cmp
sub
mov
ds
rcrl
enter
adc
mov
push
movsl
dec
ret
loop
gs
and
gs
cmc
mov
jo
inc
push
mov
mov
test
and
mov
test
add
dec
xchg
add
or
movsb
pop
scas
mov
push
adc
push
add
adc
push
mov
movntq
out
out
clc
fstpt
sarl
push
jl
mov
xlat
mov
je
loopne
or
xor
fs
lcall
sub
pop
cwtl
adc
push
je
adc
rclb
dec
orl
inc
andb
cmpsl
stos
sub
push
push
or
sub
lahf
push
test
pop
test
add
stos
and
dec
and
sbb
sarl
adc
sbb
cld
cwtl
mov
pusha
nop
xchg
das
pop
cmpsl
cmp
icebp
addb
arpl
rolb
sbb
push
pushf
adc
mov
xor
mov
mov
insl
ljmp
fiadds
inc
add
aam
add
dec
and
cmp
jnp
decb
out
sub
sbb
adc
mov
and
int3
rcll
das
or
icebp
sub
subb
mov
xor
es
mov
rcrl
and
call
dec
xchg
add
cltd
add
fadds
push
jb
sub
mov
add
je
out
push
jg
push
sub
pusha
shrb
dec
mov
push
in
push
stos
sbb
sbb
arpl
sbbl
or
lahf
mov
popa
jns
ljmp
lcall
mov
add
adc
inc
add
inc
inc
adc
pushf
xchg
arpl
mov
push
or
push
add
inc
and
lods
ret
or
xor
add
daa
and
dec
mov
push
add
adc
idiv
fwait
pop
and
ljmp
mov
pop
lret
sub
mov
loopne
rcl
iret
sbb
mov
in
xchg
add
into
scas
lcall
dec
and
dec
push
jb
sub
pop
jo
nop
add
mov
xchg
xor
nop
sub
test
inc
cmova
lret
sbb
rcrb
loopne
lcall
mov
rol
js
sub
movsl
call
test
add
push
sbb
je
adc
std
pusha
in
or
inc
inc
xchg
icebp
push
add
push
scas
adc
mov
rcrl
dec
stos
call
sbb
inc
je
cmp
xchg
mov
call
fwait
and
or
sbb
inc
int3
into
jae
lret
push
adc
adc
rcl
ljmp
shlb
stc
sbb
in
inc
pop
cld
cmp
xor
add
inc
pop
pop
repnz
les
jno
xor
in
push
xor
xchg
gs
or
adcb
mov
add
xorb
add
and
rcrl
add
cmp
jl
or
ret
sbb
movsb
adc
dec
mov
or
push
arpl
out
decl
pop
rcll
leave
xchg
jae
orb
push
mov
push
sbb
enter
aad
xor
push
fs
push
addr16
cld
xor
sbb
ror
adc
push
jbe
insl
push
mov
and
push
mov
mov
adc
rorb
pushf
ja
call
lea
loope
movsl
arpl
shl
pop
nop
or
push
in
cs
test
jne
xor
pop
pop
add
in
jbe
xor
mov
or
pop
sbb
stos
clc
mov
push
and
insb
jl,pn
mov
lea
push
sub
push
adc
inc
pushf
testb
je
mov
inc
aam
aaa
or
jne
push
push
lcall
mov
adc
and
push
cmpsl
mov
inc
in
mov
out
push
stos
or
adc
pop
pop
ret
mov
jne
cmpsl
mov
cmpl
outsb
cmp
je
add
std
dec
hlt
or
dec
mov
jge
and
nop
and
mov
orl
je
lcall
pop
jns
orb
add
and
mov
popf
inc
or
lret
adc
out
out
testb
jo
pop
cmp
jne
sbb
or
or
cmpl
mov
adc
sbb
mov
pop
cli
outsb
and
lea
aas
jb
mov
sti
jmp
pushfw
into
xor
cltd
out
xchg
out
adc
adc
idiv
jle
sbb
fistpl
pop
or
ret
subl
repnz
pop
sahf
std
xor
repnz
or
push
mov
enter
insb
jae
jo
jmp
ret
pop
loop
shll
push
or
pushl
outsl
jbe
mov
sub
je
jbe
pop
or
pop
or
pop
loop
add
sbb
sub
adc
test
insl
add
loop
dec
push
int
mov
mov
jnp
aas
jp
dec
add
test
mov
xchg
push
adc
push
movsb
insb
ja
xchg
pop
jle
loope
cmp
and
sbb
sarl
jno
pop
jle
mov
xlat
movsb
or
inc
pop
jo
aas
xchg
jno
jae
iret
test
cmp
lea
xchg
sbb
push
cmp
xchg
das
cld
sarl
mov
rcrl
mov
pop
pop
jmp
call
mov
xorl
inc
sti
enter
xor
leave
mov
and
cmp
push
dec
jg
mov
je
lea
add
cmp
jne
or
or
scas
or
xchg
jmp
call
sti
idiv
inc
sti
clc
mov
cmp
jne
mov
inc
pop
je
test
dec
divb
jl
movzbl
das
jo
mov
jmp
cmpb
pop
jnp
fisttpl
jbe
inc
or
ja
xor
add
fistps
psubsw
cmp
imul
pop
mov
cli
ret
cmp
je
cmp
je
inc
out
jbe
pop
lea
out
sbb
data16
add
xrelease
fistpl
xor
cmp
cmp
cmp
arpl
mov
pop
inc
cmpb
and
cmp
sbb
push
cs
pushl
js
pop
bound
pop
in
fildl
std
aaa
jne
pop
incl
rcrb
or
test
ja
arpl
mov
add
push
push
ja
dec
clc
mov
mov
dec
mov
mov
push
add
push
push
mov
mov
push
lahf
mov
xchg
fmuls
sbb
push
mov
and
push
push
xor
frstor
adc
pop
movsb
pushf
hlt
mov
pushf
cwtl
dec
sbb
es
dec
pop
js
jne
jecxz
or
mov
sub
jge
pop
or
orl
clc
push
add
cli
mov
and
test
mov
lock
add
mov
inc
inc
or
std
fcoms
add
add
sbb
mov
fsubr
inc
push
add
testb
sbb
je
or
or
jne
dec
mov
ljmpw
gs
dec
xchg
divl
add
std
add
arpl
enter
adc
add
out
fisttps
scas
rcl
test
pop
jne
inc
inc
jmp
xchg
mov
test
and
or
lods
inc
mov
jmp
push
xchg
or
sbb
sete
mov
shr
mov
dec
test
push
pop
inc
mov
jne
mov
cmpsl
dec
cmpl
or
insl
je
minps
sbb
test
es
pop
sbb
inc
popa
xlat
out
add
stos
xor
scas
or
pop
daa
xor
or
sti
pop
ret
dec
or
aam
mov
fildl
rcl
ffree
test
add
cld
sub
insl
repz
jnp
aam
aaa
xabort
sub
inc
cmp
pop
ljmp
pop
imul
lret
or
jbe
cmp
jae
inc
inc
or
push
push
sbb
nop
fistps
insl
jecxz
sar
mov
pop
add
hlt
movsl
push
scas
xor
xor
adc
je
sbb
push
shll
lea
or
daa
pop
mov
or
cmp
ret
jmp
jmp
jne
movsl
test
insl
jg
je
inc
cmp
add
sub
inc
push
sub
or
stos
sti
jmp
mov
cmc
in
lds
cmp
mov
pop
pop
dec
in
and
cmp
es
test
sbb
test
dec
mov
and
fmul
jae
outsl
add
andl
inc
add
or
pop
jmp
and
mov
sarl
movsl
aas
pop
sbb
in
or
cmp
imul
mov
jl
shlb
push
mov
mov
addl
jae
addb
pusha
inc
mov
lds
and
roll
jmp
mov
adc
jle
or
sbb
add
sti
test
jne
push
stos
push
and
fistpll
sarl
pop
or
sarl
rolb
pop
mov
mov
int
or
inc
cmp
jl
pusha
dec
cld
lcall
pop
and
cmpl
lea
jne
ss
das
enter
jmp
ret
dec
neg
sbb
insb
adc
cmp
mov
push
jo
and
xchg
jle
push
orb
cmp
or
add
addb
jl
cmp
push
dec
ret
pop
test
fcmovb
fsubrs
adc
mov
test
pop
push
cmc
jp
xor
in
pop
sub
sbb
sbb
mov
adc
xor
xor
inc
adc
mov
mov
mov
push
push
adc
jbe
dec
es
insb
inc
mov
or
dec
leave
xchg
sbb
adc
arpl
pop
adc
outsl
add
push
cmp
xor
popa
stos
mov
shrb
xlat
sti
lcall
scas
sub
popa
test
cmp
ret
nop
ret
int3
int3
mov
push
leave
xor
fisttpl
pop
sub
testl
inc
aad
psubsw
out
popf
jnp
adc
adc
push
push
inc
pop
movsb
pushf
imul
fcoms
adc
hlt
mov
cmp
and
mov
jl
jne
adc
mov
mov
insl
inc
call
ret
popl
xor
loope
rcl
jns
push
push
or
push
insl
divl
xchg
sbb
inc
mov
jp
dec
add
outsl
in
pop
scas
imul
ret
push
inc
xor
pop
inc
xor
cmp
cli
cltd
pop
or
testl
mov
mov
pop
cmpsb
adc
and
insl
mov
jnp
shll
mov
je
pop
mov
lea
test
pop
pop
inc
or
scas
mov
insb
mov
sbb
outsb
sbb
ja
fstpt
mov
push
or
or
sbb
fsubr
jmp
mov
jmp
pop
fstps
inc
insb
mov
pop
push
xchg
mov
cmp
push
add
push
and
or
ljmp
jmp
or
dec
pop
and
dec
dec
and
adc
pop
loope
adc
js
in
movsb
test
xor
mov
bound
inc
mov
lock
icebp
shl
cmp
jmp
cwtl
call
inc
aaa
adc
test
jne
icebp
lea
cld
std
test
cwtl
sub
xor
adc
push
sub
in
push
add
in
in
or
pop
gs
sub
or
push
clc
or
ljmp
call
push
mov
leave
leave
pusha
dec
adc
pop
imul
mov
sbb
rcrl
lret
or
mov
push
sbb
mov
in
adc
push
mov
ss
lcall
cmpsl
jg
pop
sti
rorl
test
in
call
pop
xchg
inc
push
sbb
int3
lods
pop
enter
test
jle
cmp
xor
jne
push
push
pop
ljmp
pop
sbb
out
mov
add
out
outsl
test
and
adc
lods
pop
sbb
lds
sbb
insb
mulb
push
adc
scas
push
out
mov
or
mov
mov
mov
sbb
popa
jp
jb,pn
movzwl
cli
and
push
add
pop
lds
xchg
cmp
mov
popa
cmp
add
ds
sub
add
pop
mov
jo
sbb
inc
mov
dec
xor
int
add
andl
jmp
cmp
rep
stos
mov
cmp
js
xchg
pop
cmpb
mov
mov
or
ja
inc
decl
mov
xchg
and
cmp
ljmp
aaa
lret
xlat
add
lea
add
je
mov
popl
add
xchg
neg
mov
cld
mov
inc
inc
adc
mov
jbe
inc
inc
cmpb
aam
pop
ret
sbb
jge
jb
fs
cmpsl
lods
std
js
lahf
scas
push
mov
mov
fbstp
mov
shll
pushl
cli
in
push
add
cmp
xchg
jb
push
cmp
dec
xorb
jmp
or
sti
dec
xor
jmp
push
jno
inc
xchg
cs
ljmp
jo
andl
or
jecxz
or
adc
inc
sub
insl
testl
xchg
cld
cmp
sbb
mov
sub
stos
inc
mov
inc
dec
lea
push
mov
jae
add
or
ret
mov
inc
pop
add
in
pop
xchg
add
clc
jle
rorl
sarb
mov
jb
mov
outsl
mov
ffreep
test
lea
fbld
or
enter
fmuls
and
mov
shr
test
cli
lods
sarl
add
stos
inc
inc
mov
jne
pop
pop
push
in
xor
mov
xchg
push
xchg
and
es
into
std
sbb
pop
sub
fldenv
test
pusha
cmpsb
and
jb
lret
hlt
fisttps
adc
ret
add
mov
mov
je
fildl
ja
and
mov
icebp
add
add
arpl
pusha
pop
mov
bnd
enter
mov
sbb
push
push
and
and
dec
and
mov
icebp
adc
inc
stos
pop
pop
add
mov
push
cmp
mov
fnstcw
imulb
jecxz
jnp
sbb
ret
xchg
fisttpl
pop
push
imul
hlt
add
pop
mov
ja
jmp
lea
mov
loop
roll
mov
inc
into
cmp
mov
mov
add
xor
xor
out
xchg
clc
jbe
test
call
test
je
jb
ret
sbb
add
int
xchg
xchg
mov
pop
jmp
add
jmp
std
jmp
cld
fwait
mov
jmp
or
sbb
in
mov
out
jmp
mov
fbld
or
pop
outsb
imul
test
daa
test
insb
jecxz
sbb
cmp
shlb
xchg
lods
lock
or
and
js
fcoms
xor
icebp
loopne
and
jbe
dec
jne
shl
inc
cwtl
sahf
adcl
and
pop
xchg
push
or
xor
cmpb
inc
push
je
fsubs
imul
dec
stos
out
adcb
adc
pop
subl
adc
jl
imul
adc
inc
sbb
ret
or
or
leave
and
cld
jle
shl
sar
aad
pop
dec
mov
sbb
mov
fldt
clc
jb
mov
push
fdivl
mov
loop
and
sub
movsl
jmp
test
loop
jmp
js
loopne
pop
insl
mov
test
push
lea
pop
ja
nop
adc
jne
pusha
add
mov
mov
mov
xor
push
or
xchg
cmp
int3
lea
sub
add
add
nop
and
inc
aas
mov
je
push
das
add
or
int
xlat
jne
cld
add
pop
in
mov
mov
call
call
shll
clc
cld
mov
je
adc
cmpsb
clc
or
lock
fiaddl
pop
jo
pop
pop
enter
ss
or
adc
or
or
jl
cld
jg
or
std
jecxz
ja
shl
fldenv
in
fdivrl
dec
stc
sub
fsubs
rclb
add
mov
add
outsl
add
dec
push
mov
rcrl
pop
mov
mov
add
mov
daa
and
sub
add
lcall
mov
movsb
lods
mov
xchg
sbb
lcall
adc
imul
imul
add
jp
mov
xchg
loopne
mov
xchg
and
and
icebp
xor
test
or
add
ja
ljmp
adc
sbb
daa
push
jne
shll
sbb
and
push
add
js
push
jle
sti
mov
sbb
push
cmovl
jmp
movsl
inc
adcb
sub
pop
jnp
xchg
lea
push
pop
lods
and
adc
filds
mov
pop
xchg
mov
scas
test
pushf
addr16
pop
push
or
inc
insb
lods
and
adc
push
insb
mov
not
shrb
or
inc
stos
repnz
pop
les
add
shr
jp
imul
fsubl
jge
mov
inc
cltd
and
das
sub
adc
roll
clc
jne
rcrl
aas
dec
pop
or
iret
jbe
leave
dec
adc
mov
insl
aam
cmpsl
dec
mov
jae
mov
dec
add
add
and
decb
sub
cmp
and
vsubpd
mov
or
and
jns
push
adc
outsb
lret
or
add
imul
imul
mov
sar
icebp
aas
jnp
insl
shrl
pop
das
mov
mov
adc
mov
mov
cmp
cmpsb
jbe
repz
lahf
fistpl
sti
inc
ds
jbe
cli
mov
mov
cs
push
mov
leave
and
ljmp
push
sub
mov
dec
push
mov
inc
lods
xchg
in
or
xchg
in
mov
or
test
sub
lea
or
mov
lods
mov
or
aad
push
pop
add
orb
rorl
jae
mov
inc
push
mov
imul
fs
or
sbb
sub
sahf
lds
adc
pop
add
sbb
xchg
push
inc
push
stos
hlt
add
adc
inc
cli
xor
mov
fisttps
or
loope
add
push
in
lret
inc
add
push
call
pop
lds
test
xor
push
or
ja
testl
paddd
mov
dec
xchg
jns
adc
dec
xchg
mov
cmpl
insb
sub
jo
pop
arpl
lds
or
cld
hlt
or
or
out
add
xchg
lcall
sub
lea
push
push
lcall
incl
and
adc
add
lods
mov
ljmp
pop
push
sbb
cmp
dec
sbb
pop
push
xor
push
mov
out
sub
mov
jmp
es
mov
shr
push
or
pop
cmp
mov
jae
mov
cmp
sub
decb
iret
jne
sti
adc
lcall
out
jne
mov
cmp
es
add
pop
and
push
jnp
fnstcw
adc
jmp
es
fnstcw
or
popf
stos
insl
xchg
orl
mov
pop
pop
mov
sbb
lcall
jmp
adc
mov
dec
fsubs
mov
mov
cmp
mov
jo
push
frstor
push
inc
or
mov
jne
mov
adc
ja
jbe
and
or
je
mov
adc
jbe
sbb
into
jne
pushw
fs
test
jl
aad
shl
inc
jmp
mov
push
stc
inc
or
jg
push
roll
add
cwtl
aas
jle
pop
jmp
fwait
or
test
sub
jl
pushf
test
repz
and
mov
decb
jne
in
inc
cli
xchg
sub
or
xor
sub
mov
cmp
rorl
sub
and
mov
or
jp
test
scas
jp
nop
test
dec
lods
insl
aas
test
movsl
and
je
sub
fs
decb
jge
arpl
or
mov
bound
mov
mov
cmp
jmp
inc
pop
sub
orb
je
out
or
mov
lods
push
mov
jmp
je
mov
mov
cld
mov
inc
push
pop
jns
dec
and
sub
ss
adc
cld
lahf
mov
and
minps
sbb
mov
lea
push
imul
and
mov
inc
add
add
adc
pop
jne
je
xor
pop
mov
pop
xchg
push
push
clc
adcb
pushf
sbb
or
cmp
loopne
arpl
mov
adc
inc
adc
add
push
inc
iret
pop
pop
mov
sbb
idiv
jbe
fs
jl
fsubrs
dec
and
mov
incl
mov
cli
inc
add
inc
or
lds
inc
ret
aaa
imul
sbbl
mov
add
dec
addr16
test
out
jns
mov
dec
cs
enter
shl
pop
hlt
fwait
daa
xor
xchg
add
cli
ja
lea
fst
loopne
dec
repnz
fcmovne
pusha
fiadds
movl
jmp
testl
add
aad
jge
or
add
scas
add
mov
loope
mov
inc
fs
inc
inc
mov
push
mov
sub
mov
add
add
or
push
mov
stos
and
loop
test
jne
xor
test
iret
sti
sahf
dec
movsb
push
sub
popa
inc
je
out
addr16
add
adc
or
outsl
dec
mov
sarb
mov
push
adc
push
in
adc
add
shr
addb
push
mov
push
mov
jne
imull
cmc
mov
push
and
jno
jne
jmp
push
loopne
sub
dec
je
adc
ljmpw
pop
jne
sub
add
aam
movsl
ljmp
out
dec
sub
adc
xchg
adc
out
insb
sbb
js
cmp
arpl
jb
sub
fisubrs
or
sub
cmp
sbb
push
bound
rclb
push
ret
jbe
fisttpl
add
pop
pop
jne
mov
test
pop
xchg
dec
ljmp
das
jo
inc
push
ljmp
push
xor
sbb
push
sbb
or
push
and
mov
and
inc
cmpsl
jo
adc
aaa
inc
or
adc
cmp
jae
pop
pop
sbb
sbb
int3
jo
sbb
push
sbb
sbb
pop
pop
rcrl
sub
and
insl
and
mov
lods
jae
andb
or
dec
inc
mov
aaa
and
jo
and
test
adc
inc
pop
and
fisubrs
ja
mov
mov
push
jmp
sbb
sub
mov
adc
pop
fdivl
push
dec
fsubl
push
xchg
cmp
in
sbb
mov
je
testb
je
ds
js
sub
jg
fiaddl
and
jg
lea
addr16
addl
mov
fmull
pop
sub
je
push
fs
cmpsl
lods
in
je
mov
add
popa
xchg
in
jmp
mov
push
mov
fiaddl
mov
and
rclb
add
sub
in
es
dec
xchg
repz
in
ss
sub
add
pusha
push
mov
lods
and
jle
jl
lea
push
push
pop
push
push
mov
xor
movsl
mov
mov
dec
push
mov
movsb
add
inc
sub
xor
pop
xor
xchg
iret
enter
adc
pop
lea
xor
adc
loopne
je
gs
cmp
jl
rclb
or
pop
push
int3
sub
out
cmp
or
ss
loopne
pop
sbb
pop
cmp
xchg
mov
xchg
cmc
int3
mov
jb
mov
lahf
add
mov
js
and
loopne
popf
loopne
je
sbb
mov
pop
stc
adc
sub
or
addr16
mov
shl
roll
lret
ja
in
test
stos
cmp
and
fisubs
xchg
mov
mov
mov
adc
or
mov
jo
mov
push
inc
push
orb
cs
out
add
aam
adc
mov
mov
or
lock
add
cmpsb
sbb
mov
mov
and
lcall
add
lock
mov
push
or
inc
add
cmpsb
imul
adc
cmpsb
jmp
test
int3
push
dec
add
lahf
push
cmp
push
iret
jb
sub
mov
pop
jae
cmpsb
les
push
fmull
loope
out
cmp
cmp
push
xchg
add
sbb
push
sbb
sbb
cld
clc
in
sbb
sbb
call
sbb
add
fadds
add
xor
push
incl
filds
sub
jne
je
insl
and
jb
jb
xchg
or
call
adc
add
dec
inc
jg
sti
add
inc
dec
dec
inc
adc
push
xor
cmp
pop
fisubrs
sub
insb
je
and
imul
insb
imul
aaa
daa
aaa
outsb
outsl
mov
jne
jae
popa
arpl
data16
mov
jnp
outsl
ja
cmp
outsl
outsb
aaa
nop
cmp
pop
ss
lods
std
divb
xor
jbe
jb
jne
xor
sti
insl
movsl
arpl
and
insb
sub
insl
mov
gs
das
pop
fmul
pop
jnp
fsub
pop
xor
imull
jae
outsl
jo
pop
xor
pcmpgtb
mov
sbb
and
and
gs
mov
push
xchg
aaa
insl
jne
lods
je
mov
and
insb
outsl
arpl
mov
mov
xor
mov
add
and
add
addr16
insl
and
pop
or
cmp
push
sub
test
sub
popa
jb
jne
iret
inc
clc
sub
xor
shrw
add
out
mov
pop
jg
sub
aas
mov
stos
inc
sub
and
dec
imul
jb
daa
or
fdecstp
push
and
push
aam
ret
xlat
xchg
cmp
loopne
sub
mov
outsb
sbb
je
popa
xor
in
sub
loope
gs
scas
jne
adc
push
xchg
push
cli
mov
gs
popa
addr16
outsl
js
fnsave
movsb
pop
and
sub
pop
imull
or
stos
add
fcmovu
add
mov
push
repnz
xor
and
mov
data16
insb
pop
add
add
fadds
sbb
xor
add
and
xor
je
add
pop
js
or
pop
xchg
lret
and
sbb
add
add
in
dec
or
or
xchg
daa
dec
sahf
mov
sbb
repnz
lock
daa
dec
sahf
pop
js
jns
jp
repnz
sub
and
adc
cmpsb
loopne
nop
and
add
inc
or
add
in
mov
pusha
cmpb
cmpsb
fistpll
jle
mov
cld
inc
jle
cld
test
push
popa
ffreep
mov
cmp
mov
mov
inc
sub
ljmp
pop
iret
mov
in
call
fucom
jle
push
add
pop
pop
fisubrl
xor
in
push
rcr
fsubp
stc
cmp
jle
add
sbb
xchg
or
push
add
add
add
fs
addl
aas
addb
dec
ljmp
push
mov
inc
add
push
insb
push
sub
mov
dec
js
insb
call
sti
dec
outsl
fs
gs
popa
outsb
sbb
insl
add
popa
sub
out
jle
dec
outsb
outsw
adc
insl
insl
pop
dec
imul
push
gs
aaa
or
insl
push
or
add
lods
xor
push
gs
xchg
std
xchg
cmp
jb
outsb
and
outsb
push
fisubl
jo
inc
inc
imul
add
gs
popa
insl
imul
inc
mov
cltd
jb
addr16
jl
or
imul
dec
sub
jbe
cmp
pop
pop
sub
test
or
clc
jne
adc
pop
fwait
adc
gs
ret
jo
pop
insb
jae
add
insb
jne
or
push
or
orb
mov
in
xchg
int
inc
xor
mov
insb
or
push
mov
jb
mov
sbb
push
je
dec
ja
sub
mov
adc
sub
pop
or
jae
data16
arpl
arpl
insl
push
jbe
rcll
fdivrs
lea
inc
or
dec
inc
dec
or
rcll
pusha
test
out
fs
dec
faddl
mov
in
xchg
cltd
mov
or
mov
push
dec
arpl
push
or
xorps
fwait
lds
cmp
or
inc
push
push
addl
xchg
add
mov
push
push
push
insb
push
xor
push
sub
and
lret
aam
inc
add
fcomps
sub
jbe
adc
push
je
outsl
add
fldt
popl
insb
iret
imul
insl
jb
imul
push
sbb
push
xor
es
fcomps
out
js
movsl
sub
dec
adc
jmp
lock
add
lock
fcomi
mov
mov
jp
clc
add
add
sub
pop
add
mov
fistps
cmp
jns
jnp
imul
lock
idiv
testb
addb
add
mov
add
mov
push
sbb
jbe
jle
add
add
les
dec
sbb
in
in
add
push
add
stc
add
mov
cmp
mov
xchg
add
add
jae
test
outsb
cmp
test
movsl
divl
inc
test
or
xchg
sub
add
aas
pop
jmp
add
inc
or
mov
jae
cs
andl
mov
mov
out
xor
cmp
push
sub
outsl
jb
jne
mov
cmp
jl
mov
add
daa
add
dec
lock
add
mov
sahf
inc
jo
test
add
std
and
add
jg
fcmovnbe
and
sbb
nop
inc
lock
add
lock
sti
ret
lds
mov
faddl
inc
js
dec
xchg
add
add
in
pop
mov
xchg
add
pop
fs
jbe
push
testl
mov
flds
stos
enter
aam
ja
jle
add
push
jg
fwait
orl
in
fistpl
pop
push
xlat
pop
lock
add
popf
or
flds
add
sahf
mov
push
mov
in
vcvtdq2ps
out
pop
add
pop
fldt
fistl
pop
add
test
sub
adc
mov
jns
mov
and
ja
cmpsl
jmp
pop
lock
sbb
sbb
xor
outsl
lcall
xor
or
cmp
adc
pop
or
or
incl
push
push
test
cmovl
xor
inc
or
adc
or
dec
inc
jecxz
xor
aas
push
insl
in
call
ds
pop
adc
and
push
xor
adc
add
mov
or
adc
sbb
adc
sbb
sbb
pop
add
adc
or
outsb
adc
cmovb
or
adc
adc
fdivrp
fldt
xor
xor
mov
and
mov
pop
adc
push
or
je
or
inc
cwtl
add
push
outsl
test
mov
mov
adc
or
push
movups
lock
scas
fnsave
ret
sbb
scas
add
sub
sbb
add
dec
push
add
in
daa
in
or
pop
push
sbb
push
or
jecxz
mov
icebp
or
add
push
sbb
adc
or
sti
lods
xor
push
jno
inc
cmpsb
lock
add
mov
push
test
sbb
adc
or
daa
cmp
sbb
sbb
outsl
cld
mov
or
push
sbb
xor
jg
adc
mov
adc
rcrl
push
add
add
fistps
movsb
or
fmuls
add
adc
and
popa
cmc
dec
movsl
inc
in
add
outsl
dec
jnp
mov
les
movsl
fnsave
adc
jno
adc
mov
or
stos
inc
cltd
xchg
cmp
pop
neg
out
movsb
push
inc
subl
pop
mov
std
rolb
mov
in
enter
rolb
fsubrs
cmpsl
add
push
cs
sub
cmc
xlat
mov
inc
or
jb,pn
push
jmp
call
mov
out
pop
inc
add
es
sub
addr16
mov
sahf
lcall
jae
arpl
rorb
cmp
adc
cli
dec
lcall
or
sbb
movsl
add
fcmovnbe
mov
add
add
add
incl
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
