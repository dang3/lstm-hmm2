repz
jmp
dec
lods
fistpll
push
jmp
enter
decb
jmp
aaa
jnp
repz
or
in
jnp
lds
arpl
popw
lahf
fdivs
add
subb
push
cmp
xchg
shlb
clc
arpl
and
or
adc
lods
jl
in
lret
mov
fnstsw
cmp
and
imul
and
insb
mov
sub
imul
sbb
and
mov
ds
mov
push
insb
sbb
cmp
ret
out
test
in
lds
adc
cmc
ret
mov
arpl
lds
adc
or
jno
testl
mov
pop
dec
nop
jg
sub
and
lods
pop
cmp
sarb
xchg
je
jge
sub
jb
call
cmpl
dec
iret
movsl
jno
dec
loopne
cmp
test
cltd
inc
fwait
in
movsb
pop
adc
frstor
call
mov
adc
mov
or
push
cltd
in
fwait
or
mov
push
mov
ljmp
add
pushf
lea
ja
push
push
pushf
jmp
roll
push
adc
mov
mov
pusha
mov
mov
cltd
push
xchg
aas
mov
pop
pop
jne
sbb
call
incl
icebp
int3
jo
fwait
jno
je
hlt
imul
cmp
fimuls
mov
inc
sub
jb
xchg
mov
negb
xlat
jmp
aam
sub
push
mov
leave
adc
mov
add
mov
add
orl
and
mov
popa
sub
inc
scas
loope
add
lds
cmpb
mov
push
xchg
sub
leave
cmp
and
cmpsb
rorb
cmp
enter
xchg
sub
sub
mov
pop
cmp
sbb
je
xor
sarl
mov
stc
mov
add
mov
inc
dec
daa
add
adc
xlat
imul
out
and
int
sub
lahf
ret
pop
stc
xor
jae
sbb
test
cmp
lea
adc
int3
mov
rcrl
xchg
pop
cmpsb
dec
cltd
popf
pop
orl
lods
add
arpl
adc
pop
jmp
or
dec
mov
test
jecxz
xchg
push
pop
push
js
ficoml
js
jnp
sbbb
dec
clc
lret
inc
xchg
pusha
dec
rclb
or
add
mov
or
ss
sub
aas
xchg
inc
rolb
or
ret
pop
add
in
daa
mov
cmp
mov
repz
mov
outsb
sbbb
mov
jns
movsl
movsl
jnp
inc
int3
jno
cmpsl
adc
filds
mov
push
add
or
mov
and
mov
lret
push
push
aas
ficomps
jbe
add
xadd
pop
sub
mov
test
gs
add
pop
cmp
pop
popf
clc
push
data16
inc
test
ljmp
repz
mov
push
hlt
inc
stos
fcmovbe
inc
je
and
push
sub
xchg
cmpsb
xchg
pusha
cmpsl
lahf
jo
shr
mov
popa
mov
insb
and
mov
pushl
movl
pushl
ret
movl
movb
pusha
mov
mov
lea
jmp
xchg
bswap
mov
not
not
mov
not
bswap
bswap
movzbl
mov
setge
mov
jmp
pushf
lea
jb
call
shr
test
test
cmp
cmp
call
stos
pushf
lea
jmp
mov
adc
pop
sti
fbstp
cmpsl
fwait
ja
les
out
ficomps
ljmp
jns
pop
mov
rcll
mov
cwtl
ss
xchg
cmp
adc
mov
mul
or
inc
mov
and
aaa
and
aam
xchg
jp
nop
incb
and
pusha
aas
add
jnp
jmp
test
arpl
xchg
jp
cmp
add
in
std
add
fsubs
repz
shld
pushf
movw
lea
setne
movzbw
stc
aas
sub
dec
bsf
bt
push
cwtl
push
cwtl
and
adc
btr
push
bsf
pushf
mov
sub
mov
clc
test
pushf
pushf
push
lea
je
not
bsf
rcl
test
mov
pusha
adc
add
pusha
mov
jmp
lcall
jle
xchg
push
dec
aam
xchg
push
pop
xchg
mov
aaa
push
mov
inc
inc
jg
adc
subl
mov
les
shll
lcall
loopne
hlt
jns
mov
leave
xchg
jns
xchg
in
cs
add
pusha
mov
std
jmp
jns
fwait
leave
pop
imul
mov
fs
scas
repz
and
jg
and
pop
lea
dec
js
mov
or
rcrb
ss
pop
jecxz
ret
add
lock
loop
xchg
push
mov
and
mov
enter
xchg
adc
rorl
sti
push
mov
ljmp
pop
in
pop
dec
rol
pop
popa
push
push
cmp
mov
xor
add
rcrb
fs
xchg
fwait
cmp
and
xor
std
imul
ljmp
pop
ljmp
repz
sub
and
sbb
js
sub
adc
add
mov
xchg
dec
sbb
repnz
inc
ret
or
xchg
cmp
jne
push
and
rcrb
fstl
or
test
and
xchg
adc
dec
mov
push
push
inc
outsb
jp
jge
das
inc
pop
dec
mov
cltd
fildll
xchg
aaa
popf
ja
pop
sar
inc
jge
lods
repz
xchg
fbstp
jge
mov
inc
fildll
pop
mov
dec
dec
and
popf
add
pusha
fcoml
add
dec
mov
add
xor
push
pusha
push
pushf
pushl
popl
movb
pushl
ret
call
and
in
mov
clc
inc
aam
gs
push
fildl
mov
mov
test
pextrw
push
inc
imull
pop
xchg
sbb
dec
stos
out
inc
f2xm1
mov
xorb
push
or
push
andb
mov
loope
lock
or
xor
je
jns
sti
add
cmp
push
sub
sbb
pop
fmull
xchg
insl
fstps
mov
sbb
gs
and
mov
enter
or
mov
inc
or
xlat
dec
xor
jb
pop
mov
movsb
in
push
movsl
or
inc
xlat
inc
aas
inc
fsubl
adc
imul
mov
nop
andl
dec
aam
xchg
push
push
sub
or
lods
idivl
sbb
in
ret
adc
xchg
jecxz
adc
or
clc
pop
dec
xor
mov
cmc
ljmp
jmp
stos
xor
jp
inc
xchg
push
pop
or
push
sub
movsb
mov
sub
nop
and
jnp
push
dec
adc
pop
mov
int3
pop
inc
jbe
mov
mov
mov
aaa
bnd
int
sbb
sbb
das
fwait
ret
scas
pop
in
cwtl
in
xor
dec
popa
push
sub
pop
call
cli
xor
or
loopne
add
gs
lcall
je
dec
inc
xorb
or
in
test
les
jge
add
adc
arpl
insl
data16
mov
testb
cmp
in
stos
std
push
inc
pop
les
fsub
xchg
xor
jnp
push
scas
or
aas
aaa
cmpsl
std
out
test
add
inc
sbb
out
mov
insl
addr16
push
sub
dec
fwait
ss
in
hlt
scas
out
push
jnp
xlat
inc
sub
fprem1
mov
pop
cwtl
sbb
jecxz
movsb
arpl
adc
add
push
hlt
jno
inc
add
fcomps
cmp
in
rclb
mov
addr16
jo
or
lea
mov
fcompl
outsl
lock
adc
test
mov
fs
mov
pop
mov
jno
jecxz
movsl
dec
or
orb
add
jnp
arpl
stos
mov
push
jp
sub
cmp
sub
outsl
sahf
jbe
ror
pop
cmc
movsl
daa
into
rcll
test
push
clc
xchg
pushf
add
inc
scas
orb
or
push
jmp
mov
push
mov
pusha
pushf
movsbw
jmp
adc
fcompl
cmc
push
or
pop
loope
ret
dec
shrl
stos
jg
jge
fiadds
popf
js
push
jecxz
add
test
mov
enter
pop
idiv
xchg
push
ljmp
xor
jmp
add
bswap
pop
pushf
pusha
pushl
ret
mov
pusha
mov
push
mov
pushf
jmp
add
and
jmp
fnstcw
fs
lds
rclb
xor
movsb
mov
or
cmp
add
in
pushf
stc
sbb
cwtl
jle
ret
fxch
int
and
rolb
shrb
test
icebp
sub
fisubs
clc
mov
mov
sbb
adc
add
mov
mov
xor
mov
orb
movsl
jnp
push
scas
mov
add
gs
fildl
icebp
ds
ljmp
lea
mov
push
movw
pushf
movb
pushl
ret
inc
xchg
adc
call
loopne
ror
inc
lea
push
jp
aas
cmp
scas
out
rcrl
in
jmp
scas
neg
add
sbb
stos
es
mov
les
scas
and
sub
adc
sar
mov
inc
push
jno
or
pop
in
lret
cmp
mov
push
enter
xor
sbb
in
mov
mov
in
pop
call
mov
jnp
movsl
jnp
jb
push
pop
out
mov
loop
popl
add
pop
out
dec
fidivs
jge
lods
icebp
sbb
xchg
xchg
inc
test
mov
inc
iret
sub
xor
fcoms
in
cmpsb
adcb
ficomps
pop
pusha
cli
aas
test
ret
scas
bound
jnp
lret
jge
sahf
int3
das
ficoml
stc
inc
mov
push
insb
cmp
jmp
pushf
rorl
sahf
icebp
mov
xor
push
std
cltd
arpl
into
imul
insl
cwtl
xor
sbb
pushf
add
inc
scas
popa
dec
lea
jge
sti
int3
and
cmp
pop
sbb
lods
sbb
and
sbb
dec
and
and
cmp
sti
mov
jge
fsubl
int3
jge
in
sti
in
jp
xor
mov
push
movl
push
pushf
movl
pushf
movl
pushf
mov
lea
jmp
movl
movl
jmp
int3
popf
push
jmp
pusha
mov
pushf
push
pushf
lea
jmp
movl
stc
cmp
cmp
mov
lea
ja
bswap
call
xchg
pop
dec
mov
rcll
xchg
dec
push
cmp
jg
test
mov
jo
jle
sbb
nop
outsl
pop
dec
mov
jg
dec
cmp
fildll
jns
pushf
into
push
imul
out
xrelease
lahf
and
pop
je
add
and
dec
addr16
int
pop
xlat
xor
dec
insb
pop
xor
aas
adc
pop
fsubs
aad
hlt
dec
gs
test
sub
negb
ret
cmp
sbb
out
ret
sbb
cmp
push
test
ljmp
sbb
mov
and
sub
mov
xor
pop
imulb
insb
xor
xor
xchg
sub
mov
in
jb
dec
adc
repz
or
mov
aaa
sbb
shrl
push
rorb
mov
or
mov
jae
add
and
testl
aad
in
inc
mov
out
frstor
rorb
push
outsl
jne
jb
leave
mov
loop
mov
cmp
push
dec
int
mov
sarb
mov
mov
mov
aaa
mov
adc
push
pusha
lea
sbb
add
icebp
stc
adc
xor
sub
xor
test
dec
pop
or
dec
adc
bnd
rolb
push
pop
push
insb
mov
movsl
jl
push
sbb
insb
adc
repz
rcrl
int
enter
cmc
stc
not
rol
bt
pushf
rol
call
jmp
psubusw
push
dec
sub
xlat
sub
cs
dec
push
ljmp
popf
pop
inc
or
push
sahf
movsl
fwait
insb
mov
fisubs
out
ficomps
jmp
nop
and
pusha
int
dec
sarb
and
popa
push
mov
icebp
jno
call
xor
clc
fsubrs
add
rolb
add
mov
lea
je
pushf
bt
mov
pushl
add
pushl
pusha
movb
cmp
pushf
lea
jb
test
stc
pushf
clc
cmp
pushf
pushf
call
imul
gs
xor
cs
insb
add
lea
movb
not
lahf
mov
movsbw
call
pop
jmp
pusha
mov
je
mov
and
xchg
or
sti
push
lcall
rcrb
test
dec
cmpsl
stos
testb
xor
outsb
nop
std
je
xchg
mov
xchg
fadds
inc
test
or
pop
sbb
loop
addl
push
daa
inc
and
pop
clc
das
xchg
jecxz,pt
mov
lahf
mov
push
mov
and
popa
lahf
ror
into
xor
pop
stc
outsb
jl
lea
call
pusha
pusha
lea
jne
setae
mov
pushf
push
mov
pusha
lea
jmp
jmp
lea
ja
jns
pop
bswap
lea
bswap
pop
lea
pop
jb
pusha
movzbw
mov
mov
pusha
lea
js
pusha
mov
movsbw
call
jmp
lea
jne
test
bsr
sbb
or
mov
pusha
add
pushl
pusha
bt
push
movzwl
sub
ror
bsr
mov
stc
push
movb
pushf
add
cmc
mov
pushf
stc
push
test
jmp
jg
pop
xor
fimuls
mov
push
xor
gs
mov
rcrl
pop
ret
pop
jl
sar
cli
sti
push
jo
push
pop
xor
aas
push
rclb
lds
lret
repz
push
mov
add
movsl
push
std
mov
cmp
inc
add
jg
xor
xor
lret
ljmp
enter
inc
push
jmp
in
cmp
int
jbe
add
ljmp
fistl
or
imul
cmpsl
or
stos
xor
xchg
add
call
and
pushf
call
mov
pushl
mov
setne
bswap
xchg
pushf
mov
call
movb
lea
je
push
sub
cmc
cmp
mov
pushl
mov
lea
jmp
pushf
push
mov
movl
jmp
test
add
call
inc
pusha
movb
pushf
lea
jmp
mov
jge
push
test
inc
out
push
pop
mov
jecxz
jno
rcl
dec
inc
pop
and
int
xlat
lret
inc
adc
fsts
cmp
jo
sub
push
pop
pop
cmp
pop
and
aaa
dec
adc
mov
stc
jg
mov
mov
scas
mov
ret
sbb
or
popa
push
mov
or
or
jmp
mov
push
arpl
pop
in
movsl
jnp
sub
mov
pop
nop
mov
daa
ficoml
movsl
add
movsl
sbb
xchg
xor
sub
mov
movzbw
movzbw
pushf
mov
pusha
mov
pushf
pushl
pushf
mov
push
mov
movb
push
pusha
pushl
ret
pushl
call
jmp
ret
sbb
jb
add
xor
push
std
rcrb
cmc
fcomps
mov
sbb
ds
shlb
movsl
push
call
dec
aad
nop
xchg
test
fidivl
mov
stos
roll
sti
cltd
lea
sub
inc
xlat
xchg
imul
add
lock
adc
gs
xor
fs
insb
add
in
mov
bswap
pop
push
movl
pushl
ret
shl
stc
mov
clc
stc
cmc
cmpb
pusha
lea
jne
shl
sbb
xor
shl
setp
mov
push
add
cmc
neg
stc
setns
mov
cmp
test
jmp
cmp
pusha
pusha
push
lea
jbe
bts
sub
bt
bswap
mov
shl
mov
add
mov
adc
push
add
bswap
pushf
bsr
lea
shr
sbb
mov
inc
add
call
movw
call
movw
jmp
xchg
jns
cmp
pop
jo
and
inc
pop
jecxz
cmp
push
or
aas
imul
ja
out
mov
mov
mov
xchg
jno
leave
lds
mov
mov
mov
mov
imul
stos
push
cmp
js
test
mov
aaa
mov
push
lea
je
not
push
movsbl
lea
lea
movsbw
call
jne
pop
sub
enter
outsb
xchg
in
jb
pusha
lahf
bound
rcll
sub
test
inc
mov
sarl
sub
scas
xchg
lcall
sbb
pop
ror
jnp
cmc
jae
cmovs
adc
pusha
popa
cli
and
out
arpl
pop
cwtl
dec
pop
roll
pushf
xor
aam
pop
add
sub
test
add
adc
lea
je
clc
stc
pusha
call
lods
and
mov
push
sbb
aam
push
cltd
rcrb
or
repnz
sub
cmpsl
shrb
inc
push
ljmp
stos
xor
add
lahf
add
ret
sub
mov
add
jp
sbb
imul
sub
mov
inc
push
mov
and
mov
arpl
cli
inc
or
or
push
loope
pop
fistl
pop
cltd
data16
js
adc
push
mov
cltd
add
mov
or
bound
xchg
fwait
daa
cmp
imul
xlat
jp
add
fimull
cmp
pop
ds
call
mov
jmp
cmp
cmpb
call
push
sub
rcl
lea
pusha
stc
bt
jmp
pushl
lea
jne
not
pushf
lea
jle
setbe
movb
mov
call
pushf
pushf
mov
jmp
jmp
dec
sub
push
in
pusha
fs
xor
or
or
enter
stos
in
arpl
mov
sbb
sti
pop
inc
repnz
sbb
or
add
xchg
mov
mov
out
rolb
jecxz
movsb
sar
enter
jns
enter
xchg
fsub
or
iret
sarl
in
mov
adc
out
and
adc
push
std
pop
or
sbb
xchg
test
mov
test
imul
sahf
cmpsl
cmpsb
adc
lods
and
cmp
ljmp
mov
add
mov
pushl
push
call
movsbl
mov
seta
bswap
pop
mov
not
pop
mov
lea
mov
pop
call
in
jmp
jns
aaa
fcomp
pusha
scas
rorb
bound
xor
enter
ljmp
jns
push
out
fiaddl
scas
negb
adc
cwtl
out
outsl
test
sub
inc
les
cs
inc
into
rep
adc
add
outsl
jg
movl
pusha
push
pushf
pushl
lea
jmp
push
lea
jae
push
adc
add
mov
btr
xor
stc
mov
bsr
lea
mov
jmp
sbb
mov
xchg
les
idivb
sub
xchg
dec
push
hlt
mov
adcl
xor
std
adc
pop
xchg
mov
mov
jecxz
push
push
push
insb
insb
lds
cmp
outsb
add
sub
lock
daa
mov
pushf
movb
pushl
ret
movzbl
pop
jmp
jmp
mov
movw
pusha
lea
jne
not
mov
push
pusha
pushf
lea
jmp
jnp
pushf
pusha
stos
movb
push
pushf
lea
jmp
xchg
lds
jne
fsubs
sub
pop
enter
and
fadd
mov
in
mov
cwtl
jle
sbbl
push
xchg
pop
push
addr16
xchg
push
mov
test
and
pop
push
popf
adc
lods
outsb
sarl
cld
add
mov
insl
gs
mov
pushf
rcrb
mov
pop
inc
sub
pop
call
add
mov
push
imul
xor
xchg
push
icebp
dec
push
sub
dec
xchg
xchg
rclb
sub
iret
pop
dec
cmp
sbb
movsl
stos
aaa
dec
mov
dec
mov
push
jmp
cmp
dec
push
clc
cmp
pop
nop
mov
test
inc
fmull
fcmovu
pop
out
in
jbe
jnp
mov
sbbb
insb
subl
adc
xor
xchg
ret
popf
pop
sub
dec
nop
jle
add
mov
int3
and
mov
jl
push
icebp
data16
ss
sub
jbe
lods
mov
mov
cmp
pushf
adc
test
lea
testl
jns
or
add
mov
in
xor
aas
repnz
sbb
and
sahf
and
jo
add
add
mov
dec
push
dec
outsl
arpl
inc
jb
gs
rolb
add
por
rorb
stos
inc
pop
lds
xchg
cmp
inc
loop
mov
inc
and
cmp
fdivrs
mov
lods
fists
push
sub
xor
jge
arpl
int
lea
sbb
mov
and
pushl
and
jmp
inc
sbb
dec
xor
mov
movsb
adc
popf
sbb
mov
cmp
adc
dec
lahf
adc
xchg
push
push
or
das
cmpsb
mov
fdivs
sub
sbb
sbb
or
dec
shl
dec
push
push
btc
arpl
inc
cwtl
jb
lods
sub
adc
sahf
int
bound
cwtl
push
jecxz
in
rcrb
mov
stc
loope
sub
mov
push
mov
fwait
pop
cmpsl
lahf
addb
inc
enter
fwait
xchg
cmpsb
add
cmp
sarb
push
mov
fs
inc
adc
cmpsl
sbb
sbb
mov
cmpsb
xchg
cmp
jbe
xchg
ror
jl
mov
cmp
test
test
imul
jae
imul
lcall
pop
call
rcl
sti
push
mov
packsswb
or
outsl
cmc
mov
cs
sub
mov
out
cmp
or
stos
imull
xchg
pop
add
mov
scas
or
mov
mov
cld
mov
sub
or
dec
and
pop
test
jg
andb
out
or
xor
pop
push
insl
jecxz
inc
mov
pop
add
add
call
lea
call
pusha
mov
call
test
or
pusha
pushf
lea
jne
xor
xor
mov
cmp
bt
jmp
pusha
movl
pushf
mov
push
lea
jmp
pusha
jmp
mov
pusha
lea
je
pusha
cmc
sub
call
or
cmpsl
mov
mov
and
cmp
pop
mov
rcl
pushf
inc
adc
pop
xchg
jmp
rcll
jbe
push
pop
sub
jp
roll
js
sbb
sbb
nop
dec
xor
lods
push
cwtl
sbb
les
or
loopne
sub
ficoml
xchg
cmp
call
movsb
pop
les
call
mov
repnz
jo
adc
mov
sbb
js
es
sub
mov
push
xorb
inc
lcall
or
or
jo
and
or
int3
sbb
jns
fsubrl
addr16
cmp
xchg
mov
in
pop
cmp
jae
mov
adc
add
test
xor
repz
pop
ficompl
mov
push
js
jbe
insb
push
loopne
or
sub
sbb
pop
outsl
jbe
sub
push
sub
imul
subb
cli
inc
sub
and
das
aad
sbb
or
dec
cmp
mov
xor
aaa
repz
pop
or
hlt
aam
xchg
dec
sbb
jbe
lret
or
lret
test
cld
mov
ficompl
xchg
int3
and
or
push
sbb
arpl
mov
mov
sti
and
mov
dec
cmc
out
rol
je
sub
cmpl
pop
aaa
inc
xchg
xchg
aaa
sti
hlt
cli
imul
cmp
cld
xor
repz
stos
sub
and
in
mov
subl
sti
xor
mov
jmp
sub
notb
sti
fmul
outsl
mov
pop
insb
lret
sbb
ret
pop
stos
sub
xor
adc
cmp
fs
xor
cs
call
mov
sti
js
in
adc
out
mov
and
fsub
or
shrl
je
xchg
sbb
shll
sbb
scas
pop
dec
sbb
sub
or
stos
les
loop
and
or
cmp
mov
sbb
sahf
adc
inc
push
xchg
call
int3
xor
push
fwait
or
or
pop
je
fwait
adc
ret
mov
mov
aam
insb
clc
pushf
cld
cmp
jo
sbb
sub
mov
mov
dec
sbb
xor
or
pop
hlt
mov
mov
xchg
sub
and
in
sbb
mov
sbb
lret
sbb
xchg
stos
xor
xor
stos
sub
js
lret
scas
xchg
ret
test
mov
inc
sub
leave
fmull
ja
add
shrl
fs
cmp
and
icebp
fs
jnp
push
add
xor
popa
lods
hlt
stos
jae
jnp
xor
or
push
aas
mov
jecxz
mov
jns
repz
hlt
dec
xor
fsubrl
sbb
or
mov
icebp
jecxz
mov
or
faddl
int3
cmp
pop
lds
adc
insb
sub
fcmovnu
pushf
out
cmp
sbb
fxtract
push
cmp
jns
cli
mov
or
cmp
mov
and
lock
pop
mov
clc
add
fld
ret
cmp
or
xor
pop
mov
sub
and
fs
xor
mov
sub
inc
mov
aad
std
repz
and
adc
mov
bt
movsl
leave
fsubr
push
les
mov
inc
mov
arpl
sbb
adc
sub
pop
int3
mov
insb
stos
cmp
mov
movsb
das
cmp
sub
add
ljmp
cmc
jl
xor
add
insb
lcall
and
arpl
ficompl
sbb
mov
hlt
sti
dec
sub
sub
or
and
mov
xor
adc
jo
fmull
adc
and
fwait
or
pop
mov
mov
sub
aam
or
add
fadd
mov
cli
ss
popf
or
mov
xor
mov
sub
xchg
fdivr
movsb
mov
nop
mov
xor
outsl
sbb
or
cmc
aad
shll
and
mov
jae
sub
sbb
stc
xchg
push
aaa
add
inc
ljmp
mov
sub
int3
xchg
push
in
mov
sbb
xchg
mov
mov
mov
fsubl
sbb
or
fs
hlt
mov
sbb
insb
xchg
js
jp
cltd
cmp
repz
mov
mov
ljmp
add
cld
sub
cmp
repz
fimull
mov
insb
stos
jnp
lret
fcompl
or
sbb
mov
sahf
mov
and
fsubl
stos
stos
jbe
mov
xchg
inc
fwait
pop
cltd
sub
popa
or
call
loop
mov
push
flds
cmpl
mov
sbb
xchg
pop
in
mov
adc
lds
sbb
je
sub
stos
xor
int3
dec
arpl
xchg
ljmp
lock
sub
push
data16
adc
mov
int3
push
lods
adc
pushf
or
sbb
mov
dec
fcomps
test
mov
and
inc
ljmp
je
imul
hlt
cmp
fwait
sbb
mov
mov
scas
cmp
out
out
pop
sbb
in
outsb
push
shl
movsl
push
push
adc
loop
repz
inc
dec
xor
mov
xor
mov
cld
jae
repnz
add
sbb
add
clc
fdivl
push
or
fs
adc
xchg
sub
lods
dec
sbb
pop
sbb
add
or
cmc
pop
je
lods
fs
fwait
xchg
or
int3
lahf
cmp
pop
cmp
pop
cmp
inc
sbb
imul
sub
sbb
sti
jae
lret
or
movsb
sbb
pop
xor
and
pop
daa
inc
imull
adc
fs
lret
pop
and
flds
and
shrl
sbb
pop
outsl
xor
inc
jno
shrl
fdivl
not
sub
ja
repz
test
and
imulb
mov
jnp
xor
insb
mov
fmull
scas
or
and
mov
jae
or
imulb
dec
pop
hlt
int3
adcl
sbb
mov
inc
cltd
and
fcomi
fs
mov
fwait
js
lret
mov
popf
negb
mov
lahf
js
xor
sub
jns
mov
cld
add
mov
sbb
das
aam
push
xor
cmp
lods
int3
int3
cwtl
cli
sbb
sbb
in
inc
or
or
out
xchg
test
add
push
jno
jecxz
in
shlb
cmpl
sbb
fidivrl
sub
mov
fs
push
add
test
aaa
add
xor
or
scas
imul
movsl
sub
jae
movsb
xor
rorl
xchg
inc
add
sub
xchg
aaa
mov
jo
cli
je
sub
mov
xchg
xchg
inc
xchg
add
xlat
sub
cmp
ret
lods
cmp
into
mov
adc
adc
mov
sub
xor
push
pop
inc
sti
sub
lea
sub
and
lahf
sbb
pop
daa
push
and
and
jb
mov
mov
or
data16
mov
sbb
pusha
lcall
andb
dec
fcmove
loopne
push
hlt
js
int3
mov
out
rorl
or
push
cld
movsb
mov
or
sti
mov
ficoms
pop
mov
shll
sub
movsl
inc
and
or
cmp
cmp
inc
outsb
pop
sub
mov
lock
add
dec
or
fs
pop
jbe
xor
lret
jbe
and
stos
push
cmp
mov
lea
sti
ljmp
jae
repz
lret
add
fisubl
cmp
das
fists
mov
fwait
lret
inc
fsubl
out
lcall
lcall
cmp
fisubrl
dec
and
sub
fsubs
ljmp
out
lcall
adc
aad
jnp
mov
fwait
push
sbb
or
or
clc
sub
in
add
push
mov
les
sti
imul
sbb
dec
popf
hlt
fdivr
push
lods
sub
repz
push
cmp
mov
sub
sub
test
cmp
cmp
pop
fwait
pop
sub
sti
cmpsl
sub
adc
pop
movsl
pop
push
jb
aam
push
sti
mov
sub
jae
push
jge
mov
repz
and
aam
pop
and
fwait
test
mov
add
sub
push
clc
inc
lds
cmp
arpl
jecxz
nop
aaa
jl
inc
arpl
icebp
aam
adc
cmp
or
or
aam
jmp
sbb
xchg
dec
sub
out
pushf
adc
or
lret
dec
jae
scas
pushf
les
or
test
out
mov
mov
xchg
in
mov
sbb
mov
sub
insb
les
cmp
or
mov
andl
repz
leave
adc
mov
or
ret
xchg
xchg
insl
pop
mov
ljmp
mov
or
fs
pop
lret
sbb
je
fwait
jae
adc
inc
jno
sub
pop
dec
fdivrs
sub
add
xchg
ljmp
sti
cmp
int3
adc
cmp
pushf
mov
jp
clc
sbb
add
adc
adc
cmp
sbb
dec
das
mov
sbb
stos
inc
mov
aas
cld
mov
sub
mov
sbb
mov
imul
int3
push
fsubrl
push
adc
icebp
or
lods
xchg
arpl
add
sbb
sub
cltd
or
and
mov
fs
cs
mov
enter
add
cmp
in
and
lods
xchg
lock
cmp
cmp
xchg
cmp
add
pop
int3
mov
inc
shll
adc
push
mov
xchg
loopne
std
sub
or
or
jnp
int3
bound
call
mov
fidivrl
repz
sbb
stos
sub
fdivrl
add
mov
cbtw
repz
sub
loop
pop
jo
or
inc
dec
stc
sub
lods
hlt
je
in
stos
cmp
or
lret
sub
pop
or
es
clc
sub
or
test
pusha
add
cmp
test
sub
xchg
fisttpl
mov
fsub
or
or
adc
js
xor
adc
lret
in
ficoml
sub
popa
and
mov
sub
sub
add
dec
sub
xchg
mov
or
inc
aam
imul
es
push
fcomps
adc
cmpsb
or
test
andl
jmp
jae
sub
mov
add
lcall
mov
add
lcall
pushf
or
lods
call
test
into
popf
divl
cld
add
sub
sub
aam
add
push
and
adc
movsb
sbb
and
scas
leave
xor
stc
lea
repnz
enter
pop
cli
xor
lret
push
fcompl
cmp
aad
mov
sbb
ja
xor
xor
pushf
sbb
cmp
js
pop
pushf
fwait
or
push
cmp
or
pop
mov
sub
mov
cmp
pop
xor
pop
jl
in
stc
push
cmp
dec
xchg
jmp
mov
mov
and
jmp
cmp
sub
into
push
add
addr16
fsubl
das
mov
xor
sub
mov
and
loopne
and
add
cs
pop
loope
or
mov
cmp
clc
lods
bound
jo
adc
cmp
or
add
inc
movsb
pushf
cmpl
cmp
test
sub
sub
cmp
daa
sub
ja
or
jge
push
stos
movsb
xor
push
jbe
rcrl
das
inc
negb
jb
adc
sti
add
and
lds
sbb
lea
jg
aaa
loopne
sbb
fcompl
pusha
push
mov
push
out
sub
sub
clc
movsb
pop
repz
sbb
shlb
or
mov
push
sbb
mov
mov
jnp
mov
testb
lcall
or
pop
cld
call
xor
push
and
lret
fidivl
stos
mov
jo
sub
pop
je
sub
sbb
stos
in
rol
inc
mov
mov
push
stos
sbb
stos
jmp
and
mov
sub
xor
sbb
repz
mov
imul
imulb
in
lods
int3
sbb
sub
or
jmp
mov
xchg
clc
jnp
arpl
xor
add
sbb
sub
hlt
sub
add
mov
mov
and
jmp
xchg
jnp
fcmove
dec
sub
hlt
sub
or
sbb
sbb
ret
sysexit
sti
cmp
cmp
gs
inc
mov
in
cld
cmp
mov
pushf
fdivl
negb
aam
push
lcall
push
ljmp
aam
sti
icebp
cmpsl
add
gs
xor
and
mov
daa
pop
hlt
lret
ja
stos
inc
sub
aam
daa
fstpl
sbb
ja
std
or
fsubr
or
lods
xor
cmp
fidivl
or
sti
stos
clc
mov
dec
fsubrl
jl
lods
test
dec
ja
xchg
stos
insb
mov
or
push
repz
icebp
mov
sarb
fcompl
in
sub
push
int3
sbb
imul
in
sbb
daa
push
insb
mov
in
push
decb
ficoml
outsl
xchg
mov
stc
xor
sahf
pop
sub
xchg
stos
stc
cmp
cmp
push
or
mov
sub
and
xchg
cmp
cmpsb
jl
adc
movsb
mov
test
xchg
sbb
ret
adc
ret
cmpsb
fs
sahf
les
adc
repz
sub
push
push
mov
movsb
mov
into
cmp
mov
hlt
and
sub
add
shl
dec
and
pop
sbb
sub
lret
sbb
sbbl
add
sub
sbb
and
inc
cmp
sub
clc
mov
xchg
xor
mov
xchg
sbb
lods
cmp
sbb
movsb
cmp
mov
or
sbb
and
imul
mov
lret
sub
je
sbb
jmp
push
repz
pop
sub
sbb
cli
fs
les
mov
mov
ljmp
rol
and
inc
pop
xor
imul
das
fwait
add
jae
sti
adc
ja
sarb
cltd
lcall
sub
sub
dec
cld
mov
lret
in
pop
xor
mov
jns
shll
cmpl
lds
arpl
sbb
popf
and
xchg
mov
xor
stos
int3
roll
sbb
push
int3
stos
mov
xor
test
xor
popf
int3
sti
mov
and
and
or
mov
xor
int3
pushf
mov
xor
lods
int3
adc
and
pop
and
icebp
fs
cmp
les
push
and
xor
lret
repnz
call
sub
jl
subl
ret
add
sbb
pop
xor
out
mov
lret
add
pop
test
sub
cli
jg
ret
mov
aam
lcall
mov
or
mov
les
insb
jge
in
cltd
lret
mov
arpl
shlb
xlat
mov
insb
sub
adc
cli
repz
hlt
mov
mov
xor
fwait
pop
jmp
imul
lret
adc
data16
mov
je
sub
lods
stos
sbb
jae
or
xor
in
loopne
xchg
int3
or
pushf
mov
addl
fs
xchg
jae
out
dec
dec
ljmp
fs
adc
inc
add
repnz
pop
jae
jnp
dec
push
sub
stos
sahf
xor
rcl
mov
sub
inc
xor
or
sub
ljmp
sub
aam
push
mov
lret
repnz
jecxz
lret
sbb
and
fwait
sbb
movsb
push
arpl
mov
xor
mov
sub
mov
mov
cltd
pop
jnp
or
lcall
xor
pop
shll
or
push
sub
cmp
dec
xchg
mov
or
adc
mov
leave
jl
push
daa
xchg
ljmp
negl
and
stc
add
sbb
lds
jl
rcll
xchg
pop
xor
ret
sbb
repnz
les
lods
outsb
sbb
aam
dec
mov
lods
xchg
add
dec
mov
insb
adc
imul
jg
lahf
sub
js
fs
mov
push
inc
fcoms
lret
arpl
dec
fwait
or
sbb
je
js
or
xchg
push
test
sub
xchg
dec
push
mov
in
mov
fsubrl
push
lods
pushf
adc
fdivrl
push
jl
outsl
stos
data16
pop
inc
outsb
jl
pop
stos
mov
mov
xlat
fs
xor
in
mov
aam
sub
adc
dec
fs
add
jo
push
jmp
or
push
rep
jae
mov
les
loop
test
jnp
pop
sbb
stos
ret
cmp
shll
inc
pop
adc
sub
xchg
cmp
fidivrl
cwtl
sbb
pop
das
lret
mov
xor
xor
mov
or
in
stos
movsl
sub
xchg
scas
sub
push
cmp
xchg
add
orl
or
insb
sub
sub
xor
cmp
mov
pushf
ret
jge
sub
fisubrl
clc
shll
sub
cs
pop
cs
jl
clc
push
and
xor
and
jmp
and
out
int3
and
shlb
and
mov
and
jnp
cs
jb
and
push
and
xor
dec
pushf
mov
sbb
cmp
cld
cld
cmp
mov
ja
sbb
xchg
sbb
and
push
loop
clc
fnclex
or
or
jl
push
adc
sub
pop
jbe
ret
enter
sbb
pop
sbb
aam
sti
pop
insb
fistl
into
adc
mov
adc
push
int3
aad
pop
lods
sbb
cmpl
in
ret
stc
je
cmp
or
jmp
sub
inc
lods
adc
mov
sub
add
and
dec
mov
mov
stos
sub
sub
adc
push
or
arpl
scas
cli
xor
add
ficomps
je
mov
inc
sbb
sub
adc
sti
fldt
mov
lods
imul
pop
sub
fdivl
fs
inc
lods
and
add
jecxz
ret
stos
sub
pop
mov
sbb
ficomps
je
push
sbb
sbb
add
jecxz
lret
mov
mov
imul
clc
sub
in
sbb
inc
sub
stos
dec
movsb
jae
sti
insb
cmp
mov
je
dec
lea
xorl
jecxz
ret
lods
stos
sbb
mov
cld
lods
in
int3
clc
mov
pushf
test
sbb
lods
add
jecxz
ret
mov
mov
sbb
js
scas
cmp
sbb
mov
add
cld
clc
stos
mov
or
fidivrl
cld
sbb
push
jae
mov
cmp
fcmovu
mov
jne
cld
jnp
fimull
faddl
and
add
or
jo
sbb
cld
sti
sbb
dec
adc
aam
int
mov
aad
add
sbb
arpl
add
mov
mov
mov
dec
mov
jle
lret
and
sbb
in
fwait
pop
push
out
sub
and
pop
push
adc
jnp
jno
or
lret
ljmp
cltd
cld
mov
aaa
add
pop
push
lret
insl
dec
and
sub
loope
in
dec
ret
insb
pop
sbb
in
fs
xor
and
and
adc
xor
jae
imul
scas
sbb
add
das
in
mov
idivb
cmp
mov
inc
add
ret
imul
jne
adc
and
shl
sub
sub
roll
adc
inc
or
shrl
hlt
pusha
nop
fstps
je
lods
movsb
int3
stos
cld
orb
sbb
sbb
lret
je
and
push
out
pushf
shlb
out
mov
arpl
sub
mov
xor
jae
mov
cmp
sub
lods
and
jnp
lods
sub
test
imul
xor
mov
xchg
aaa
fs
sbb
cmp
stos
add
jnp
push
jecxz
hlt
test
sbbb
jae
std
ret
hlt
je
lcall
sbb
fmuls
cld
or
cwtl
movsl
or
clc
sub
jns
arpl
add
add
cmp
shll
cmp
or
mov
adc
inc
cmpsb
xor
sub
dec
lret
movsb
std
adc
mov
adc
int3
xor
cmc
cmp
or
les
shrl
test
add
scas
add
les
xor
cld
sbb
mov
das
jno
shl
mov
inc
insl
xchg
in
fdiv
dec
fs
add
mov
sbb
sub
mov
sub
ficompl
add
test
xchg
pop
cmp
sbb
mov
cmpsb
jo
or
inc
movsb
repnz
sub
sub
mov
sbb
push
int
mov
cld
repz
sbb
ja
mov
mov
xchg
in
pushf
lods
lret
mulb
or
test
fs
mov
xor
out
repz
cs
sahf
mov
insl
jno
into
sti
imul
ljmp
sub
dec
jmp
and
imul
in
mov
add
cmc
cli
int
sub
das
lcall
lods
mov
mov
imul
inc
pushf
xor
push
jl
les
mov
adc
jb
pop
ret
mov
mov
fdivrp
add
adc
mov
xchg
mov
repnz
mov
cmp
cmp
fucomi
and
mov
mov
les
adc
cmc
adc
sti
sub
sub
cmpsb
in
or
outsb
cmp
mov
clc
paddb
pop
push
cmp
pushf
sbb
add
push
mov
fiadds
jno
loopne
movsl
stos
xchg
rcrl
sub
jbe
mov
jb
inc
jbe
jae
cli
push
sub
inc
mov
decl
mov
adc
mov
or
sub
lret
xor
pushf
mov
ret
int3
imul
sub
sbb
sub
xchg
inc
mov
add
shl
fwait
jecxz
jb
sub
lock
jb
or
fisttpl
sbb
xor
sub
or
sub
int3
repnz
cltd
mov
pushf
cli
push
insb
std
jo
repnz
fs
sub
jo
repnz
sbb
pop
dec
or
adc
rcrl
or
imul
insb
imul
jmp
add
mov
sbb
lock
mov
inc
sub
fcompl
mov
mov
jmp
ret
lods
fwait
sbb
dec
shlb
aam
sub
or
jecxz
mov
xor
in
int3
hlt
xchg
lods
jl
fs
sub
adc
sub
sbb
add
fcomps
xchg
sub
lods
or
repz
mov
xchg
pop
es
lods
lods
sbb
mov
push
mov
stos
sub
xor
in
movsb
insb
sub
hlt
jecxz
lret
sbb
in
movsb
lret
mov
sub
sub
imul
sub
mov
sub
adc
sti
hlt
shrl
mov
sub
in
sbb
hlt
lods
lods
test
pop
clc
inc
mov
add
fistpl
mov
sbb
sub
in
sub
cmp
adc
repz
mov
loopne
or
adc
les
movsb
sbb
sub
add
jmp
sub
lods
push
and
sub
sub
sbb
mov
jmp
rcrl
mov
sbb
adc
int3
rcrb
xchg
and
sub
mov
pop
xor
pushf
out
sub
mov
sbb
int3
sub
dec
sub
dec
xor
sbb
adc
mov
stos
lret
jbe
jbe
cld
rcr
or
pushf
imul
in
insl
and
ret
test
and
inc
pop
and
sub
and
sbb
loope
xlat
dec
adc
sub
enter
and
sub
rcrb
andl
in
push
and
out
and
pop
cmp
cli
lret
scas
mov
sub
jnp
xor
nop
aaa
fildl
scas
or
les
daa
xchg
stos
mov
les
xchg
aaa
stc
fstpt
and
mov
int
inc
int
and
mov
arpl
imul
dec
out
aam
popf
cli
sti
sbb
jo
or
jecxz
mov
pop
test
add
outsl
insb
int
or
adc
aam
xchg
hlt
outsb
mov
xchg
adc
adc
es
dec
fwait
xchg
mov
adc
pop
insl
in
or
sbb
test
fmulp
in
push
inc
stos
mov
std
int3
stos
test
add
imul
lock
arpl
pop
mov
inc
rcr
inc
sbb
mov
pop
sbb
sub
pop
aam
pop
sbb
sub
push
mov
push
or
pushf
outsl
mov
and
sub
in
xchg
rol
xchg
ret
pushf
nopl
mov
sub
out
or
inc
add
xor
scas
movsb
cli
sub
test
pushf
inc
and
ret
cmpsl
call
in
xchg
les
in
mov
mov
stos
je
xchg
aam
sub
les
imul
sbb
das
xorb
clc
mov
jl
int3
test
imul
add
and
cmp
test
cld
adcl
adc
les
fadds
pop
mov
or
test
cmpsl
in
int3
je
fidivs
mov
fstpt
add
ds
popl
mov
push
outsl
adc
pushf
xchg
xlat
xor
mov
fistl
ret
in
nop
inc
mov
rolb
mov
sub
jae
in
jnp
sub
cmp
inc
je
sub
cld
cli
in
imul
add
mov
ja
add
shll
sti
sbb
push
shrb
cmp
mov
mov
filds
les
cmpl
adc
add
les
lcall
dec
push
addb
negl
jmp
out
stos
jge
lret
or
repnz
jo
andb
jno
mov
jb
fbld
adc
xor
and
bnd
cli
orps
add
pop
testb
pop
mov
out
int3
inc
call
repz
hlt
cmc
lods
negl
stc
clc
jmp
in
and
lods
pop
sub
pop
lock
push
push
lret
xor
int3
and
lods
and
loop
sbb
mov
adc
adc
or
mov
ljmp
lods
mov
ficoml
cmp
pop
bound
inc
or
loopne
push
jno
jnp
dec
jns
sub
pop
sbb
dec
mov
pop
in
sub
sbb
aaa
cmp
popf
sbb
xchg
cmp
mov
xchg
stc
or
adc
cmp
mov
imul
or
inc
mov
jmp
dec
outsl
aad
sbb
popf
mov
pop
roll
stos
mov
cmpb
cmp
sahf
push
inc
mov
pop
add
daa
hlt
mov
fistpl
out
xor
mov
mov
or
jno
mov
lret
cs
rclb
adc
mov
cwtl
sub
mov
cmpsb
stos
mov
ret
and
push
push
pop
xchg
push
js,pn
or
andb
clc
adc
or
in
cmp
mov
mov
clc
mov
or
lahf
mov
adc
cmp
movzwl
adc
fs
lods
push
cmp
mov
sbb
jl
mov
or
mov
pop
cmpsb
pop
jl
cli
imul
les
insb
movsb
sub
mov
cmp
mov
loopne
je
push
cmp
sub
call
push
shlb
das
xchg
xchg
fdivrs
aaa
jo
popa
enter
in
jmp
and
repz
imul
jno
or
sub
lret
incl
or
jae
mov
pop
sbb
jbe
adc
mov
ljmp
pop
push
push
pusha
push
imul
into
int3
sub
clc
mov
cmp
mov
mov
add
inc
xchg
out
jp
mov
movsb
fdivr
jge
jp
mov
outsb
popa
xchg
lods
pop
pop
repz
rclb
or
xchg
jnp
les
or
out
stos
inc
nop
cs
stos
push
pop
cltd
pop
sbb
inc
mov
xor
cmp
xor
add
push
xorb
mov
aad
js
pop
idivl
adc
inc
sbb
push
mov
and
subl
cmp
xor
dec
stos
dec
jbe
cli
cmp
and
add
shrl
xor
or
pop
mov
lods
fsubl
not
hlt
fdivs
lret
jbe
stc
lods
je
xchg
int3
jne
dec
arpl
repz
sbb
push
les
sahf
and
ret
mov
in
xor
or
jecxz
mov
aaa
inc
je
ret
mov
imul
lods
sbb
sub
add
sub
cmp
rcr
and
les
arpl
add
pushf
adc
pop
lods
and
push
test
mov
in
sub
popa
mov
in
daa
mov
hlt
mov
fisubl
jle
mov
mov
inc
mov
or
jecxz
lods
mov
inc
sub
mov
jns
mov
mov
imul
and
les
mov
fimull
adc
cmp
jp
fdivr
mov
add
repz
pop
ja
mov
fdivrl
outsb
jg
js
mov
daa
mov
outsb
out
insb
test
xor
insb
or
lods
adc
jmp
cmp
popa
imul
lcall
lahf
pop
sub
mov
adc
das
or
lods
call
sub
push
sub
in
cmp
in
sbb
fisttpl
dec
js
sub
mov
sub
es
mov
xchg
lcall
das
hlt
mov
lods
imul
shlb
mov
mov
sub
cmp
sbb
xor
imul
lahf
cvtps2pi
mov
daa
pop
adc
add
cli
cmc
sub
hlt
movsl
lods
jge
push
sbb
mov
mov
pushf
sbb
iret
cmp
or
fistpl
fwait
xlat
fwait
int
imul
adc
add
mov
stc
lods
jo
fdivrl
mov
nop
lods
arpl
adc
jl
cmpsl
imul
sbb
adc
int3
icebp
dec
jb
pop
xchg
jl
shl
filds
mov
sub
adc
mov
lret
add
adc
push
stos
movsb
cwtl
mov
adc
arpl
mov
sti
mov
sbb
stc
add
loop
adc
mov
sub
sub
cs
pusha
inc
mov
add
cmp
xor
sub
imul
sbb
sbb
out
sbb
pop
cmp
fimull
pushf
mov
hlt
mov
pop
xor
enter
inc
aam
push
in
test
or
fs
dec
fadd
mov
sbb
cmp
xchg
cmp
mov
sub
sub
stos
cli
mov
stos
test
cs
pop
push
ret
fcomps
sub
mov
pop
int3
sub
and
add
mov
or
int3
mov
shll
pop
sbb
inc
ret
sbb
sbb
stos
movsb
jae
les
sub
mov
int3
pop
mov
sbb
int3
sahf
lahf
repz
in
imul
fcmovnbe
push
test
xchg
push
cwtl
inc
repz
push
and
mov
cmp
inc
mov
mov
push
jbe
hlt
lcall
cli
das
ja
push
add
iret
add
sub
cmp
mov
sbb
push
sbb
hlt
lds
jns
push
lods
xchg
mov
sub
pop
add
push
mov
cmpxchg
pop
lock
scas
cmp
inc
push
xorb
movsb
hlt
pushf
hlt
mov
push
add
jb
pop
stos
add
dec
enter
sarl
pop
movsb
fs
pop
int3
in
sti
mov
cmpsl
ret
jl
sbb
je
adc
ja
adc
stos
fnstenv
insb
and
sbb
cltd
pop
pusha
pop
repz
insb
xor
negl
xor
insb
stos
xlat
add
jecxz
sub
add
repnz
push
mov
cmp
imul
jbe
ljmp
stos
in
mov
sbb
cmp
aam
xor
out
int3
rol
add
imul
sub
cmpsl
sub
test
adc
cld
fmul
jg
xchg
push
imul
sub
adc
mov
mov
mov
jo
lret
cld
xor
cltd
rclb
les
adc
movsb
lret
dec
insb
sbb
mov
jb
sbb
out
aam
je
inc
adc
push
lret
pop
imul
xchg
push
lret
and
sub
in
pop
xor
xchg
sub
mov
sbb
dec
ljmp
push
out
mov
inc
add
dec
inc
je
daa
pop
mov
cli
daa
add
adc
inc
add
cld
inc
lahf
iret
mov
fs
sub
pop
xor
adc
pop
sbb
addl
mov
int3
mov
sub
je
xor
push
repz
inc
sub
pop
daa
sbb
aam
sub
sub
fidivl
sub
insb
inc
dec
lcall
mov
or
sub
int
or
push
int3
add
int3
xchg
mov
hlt
mov
jae
or
cli
xor
sti
mov
mov
push
repz
xor
ds
add
mov
pinsrw
mov
adc
mov
pushf
daa
jne
mov
sbb
inc
hlt
shrd
mov
inc
sub
enter
jno
js
cmp
fs
sub
dec
cld
cwtl
dec
jl
adc
sbb
ja
std
mov
jl
sbb
mov
pop
hlt
cmp
test
sbb
stos
movsb
hlt
hlt
jl
mov
sub
push
out
int3
cwtl
jl
xlat
add
sub
push
jnp
cli
cmp
mov
jl
inc
cmp
dec
je
push
les
xchg
pop
and
lret
sub
push
xor
js
and
sahf
and
adc
adc
ja
pop
adc
fucomip
mov
xchg
xchg
scas
lcall
in
mov
dec
icebp
xlat
xchg
cmp
jae
add
add
pop
jo
sti
stos
aaa
sub
mov
add
and
cld
sbb
xchg
sub
mov
cld
jecxz
out
fwait
sbb
aas
jbe
lods
clc
sub
test
jne
fcmove
test
mov
or
inc
scas
imul
imul
fimuls
xchg
sub
xor
pushf
mov
add
or
arpl
push
insb
sahf
in
roll
cli
jl
inc
pop
pop
cmp
cltd
adc
or
jecxz
cmp
fs
loop
inc
mov
adc
je
sub
adc
pop
lret
stc
adc
dec
pop
jbe
add
and
inc
ljmp
ljmp
or
mov
mov
mov
lahf
xor
test
imul
xorl
and
adc
xchg
and
dec
sti
cmp
dec
idivb
jp
cld
sbb
cld
or
scas
jl
lret
in
fimull
and
and
and
dec
stc
int3
and
aaa
cld
sub
inc
xchg
les
loop
rolb
es
mov
sbb
lahf
pop
daa
mov
cs
sub
xchg
mov
pop
xor
notb
les
std
sbb
cmp
imul
xchg
popf
lahf
mov
dec
mov
orl
lret
dec
xlat
and
or
sub
dec
jl
sbb
movsl
arpl
int3
sub
in
sbbb
int3
sub
mov
push
and
int3
sub
push
sub
es
ret
shl
sub
les
es
pop
int
xor
cli
sbb
je
lods
insb
adc
or
jae
les
test
or
sub
mov
mov
and
das
out
pushf
mov
in
test
mov
int3
or
mov
iret
adc
dec
lcall
sbb
push
jnp
xor
inc
movsl
jl
adc
or
jae
ret
lock
je
addl
sbb
pop
jmp
or
or
push
sbb
sbb
sub
outsb
hlt
inc
jle
mov
movsl
sub
sub
cmp
add
jae
ficoms
fmull
cmp
mov
subl
adc
push
mov
add
dec
inc
sbb
inc
cmp
add
out
push
and
jl
sbb
scas
add
int3
pop
or
adc
xor
jl
and
push
scas
aam
hlt
xchg
xor
xorb
nop
repz
in
mov
pusha
les
xchg
insb
xor
pop
adc
xor
mov
push
mov
cld
pop
test
sbb
adc
fstpt
sbb
scas
adc
and
xor
iret
dec
loop
mov
adc
arpl
add
and
jp
aaa
mov
cli
and
adc
xchg
xor
and
inc
jb
or
jno
clc
bnd
jo
testb
scas
mov
add
loope
xor
adc
repnz
sub
adc
rorl
inc
bswap
leave
jl
and
mov
aas
imul
mov
subb
pop
hlt
mov
xor
sub
lahf
rorl
inc
lods
fwait
es
or
adc
ret
jno
xor
int
jmp
es
push
dec
mov
outsl
repz
inc
pop
and
sbb
sahf
ljmp
jae
shll
mov
jnp
dec
sub
jg
sub
sub
mov
and
subb
lret
scas
sbb
cmp
adc
cmpb
imul
mov
or
jecxz
outsl
inc
push
push
cmp
dec
jae
xchg
movsl
inc
repnz
push
mov
cmp
adc
fwait
sbb
xor
outsl
insl
sti
int3
and
arpl
or
sbb
mov
or
ja
add
lcall
push
insb
adc
xchg
push
and
ret
outsl
pushf
mov
in
andl
fimull
mov
imul
jecxz
in
pop
std
jno
repnz
sbb
pop
stos
or
adc
jmp
or
rcl
jl
lret
sbb
and
or
jmp
cld
or
ret
cmp
adc
sbb
add
or
and
scas
fs
sub
pop
in
sub
lret
inc
mov
clc
hlt
dec
add
stos
pushf
jae
cmpsb
adc
mov
les
push
sub
inc
jle
fs
out
pushf
imul
repnz
int3
mov
mov
add
xor
adc
sbb
add
mov
adc
xchg
mov
xor
fsubr
pop
add
repz
add
adc
sbb
outsl
test
stos
adc
lods
pop
add
xor
pop
insl
inc
sub
dec
je
and
sub
stos
cmovl
add
sbb
mov
in
dec
dec
add
sbb
jmp
and
sbb
or
cli
cmc
sub
push
clc
das
sti
xor
mov
mov
in
hlt
lds
cmp
arpl
dec
add
cmpsl
push
fs
add
mov
call
sub
sbb
stos
pop
adc
stos
stos
jae
fsubrp
les
and
and
aam
imul
mov
test
pop
aam
jne
gs
arpl
movsb
push
in
lds
xchg
movsb
xorb
hlt
adc
lret
movsb
xor
push
push
sub
movsb
jg
add
pop
cli
mov
add
inc
arpl
test
sbbl
adc
sub
sub
adc
lods
je
mov
mov
add
cwtl
cmpl
add
push
mov
in
lock
scas
cmp
xchg
push
nop
pop
std
xchg
sub
adc
call
xlat
test
dec
js
jg
adc
mov
in
xchg
xchg
push
shrb
xchg
stc
xor
call
je
xor
lret
dec
jmp
dec
push
adc
scas
cmpsb
cmpsl
xor
out
test
outsl
in
mov
stos
sti
lcall
movsb
sub
inc
imulb
add
lret
xor
ljmp
je
xor
xchg
dec
cld
repnz
stc
outsl
push
not
movsl
sub
sub
mov
out
jae
imul
cmp
cmpl
and
adc
ficomps
inc
mov
je
stos
orl
sbb
out
lret
adc
test
int3
pop
fs
fs
mov
roll
jno
pop
inc
fistpll
hlt
sbb
and
in
jg
imul
outsb
xor
js
jg
sti
je
mov
cld
aas
in
repz
pop
enter
clc
sub
loop
mov
or
adc
hlt
movsl
int
in
icebp
pop
dec
out
je
mov
jo
cli
adc
pop
ret
adc
mov
fmull
lret
mov
or
sbb
pop
push
mov
ljmp
mov
or
jae
mov
ds
or
or
cli
and
push
dec
test
and
or
loop
mov
sti
je
fbstp
mov
add
mov
add
sti
imul
shll
dec
jl
rcl
or
sbb
or
mov
jl
fstpt
sbb
scas
cli
sbb
sahf
scas
lods
fwait
jb
fcompl
stos
mov
or
cmp
or
sub
repz
xchg
xchg
mov
movsl
jae
fdivp
jecxz
jecxz
clc
ja
out
je
repz
outsl
xor
out
push
sbb
or
in
lret
movsb
movsb
mov
mov
out
sbb
fs
decl
mov
push
sub
out
dec
sbb
test
loope
jne
pop
lcall
jmp
jae
pop
mov
jecxz
pop
inc
sbb
jecxz
add
mov
mov
jecxz
push
xlat
pop
lret
ucomiss
loope
syscall
jl
xchg
movsl
push
iret
mov
xor
pop
lods
je
imul
arpl
cli
lods
mov
test
add
ljmp
jecxz
mov
fisttps
hlt
imul
push
fbstp
or
mov
push
push
je
dec
stos
or
je
lcall
xchg
fldl
adc
scas
and
cmp
xchg
mov
fistl
mov
add
mov
xlat
and
das
and
fldt
push
das
pop
cmp
push
hlt
mov
les
mov
push
test
fincstp
sti
test
add
negb
pop
test
xor
es
flds
dec
jecxz
cs
xlat
mov
pop
ljmp
sub
xlat
mov
lods
cld
je
xor
cli
lock
cltd
xlat
push
pop
sbb
stos
or
and
mov
sti
jecxz
xor
notb
je
cld
pop
jns
aad
in
pop
out
dec
mov
or
add
and
cld
lcall
inc
mov
push
rcll
cld
pop
mov
in
pop
repnz
adc
test
les
popa
mov
testb
mov
adc
pop
jg
shll
inc
push
pop
stos
movsb
in
sub
mov
fsubl
adc
iret
ja
stos
adc
sbb
sub
iret
arpl
cli
push
insb
sbb
sub
iret
mov
mov
mov
sub
sbb
ficomps
movsl
mov
push
sub
lret
cmp
sbb
hlt
mov
mov
data16
ds
in
sub
sbb
adc
or
or
pop
loope
xchg
cmp
xchg
add
arpl
insb
je
jl
test
dec
sbb
in
sbb
pusha
dec
push
jnp
sub
icebp
push
mov
dec
in
cmp
fdiv
push
fmull
cmpsl
cmp
cmpb
in
and
cwtl
fwait
push
gs
mov
sub
out
dec
xchg
jmp
pop
ljmp
stos
mov
stos
imul
sbb
adc
in
pusha
sbb
sbb
pop
mov
adc
repz
hlt
push
jle
mov
pop
in
push
sub
mov
je
in
jmp
xor
jmp
xor
ja
jmp
insb
inc
xchg
sti
jl
add
stos
or
or
scas
push
inc
lock
jmp
xchg
mov
sub
jae
adc
xor
add
ljmp
repz
sbb
jmp
jecxz
repz
xor
ljmp
cmp
pushf
xor
scas
xlat
adc
ja
outsl
bswap
loop
mov
jp
ds
out
adc
pop
pop
stc
in
daa
cli
sti
mov
sub
loop
jno
js
sahf
adc
mov
ret
in
jecxz
xchg
cmpsl
rcll
ret
ja
jnp
out
adc
mov
adc
adc
mov
stos
ret
xchg
cmpsl
and
les
mov
repnz
add
mov
mov
int
aas
cmp
push
cmp
and
dec
mov
nop
sub
add
lock
movsb
pop
pop
pusha
das
inc
sub
push
sub
clc
movsb
cmpsb
xor
rcll
test
pop
imul
xor
push
ss
repz
lods
fmull
pushf
mov
sub
sbb
push
sub
xor
dec
and
stos
jp
sbb
pushl
int3
mov
adc
sti
fsubrl
xor
stos
jp
cmp
and
pop
mov
or
mov
adc
xor
mov
mov
jl
xor
add
in
mov
scas
sbb
add
sbb
mov
or
jnp
xor
mov
jl
fwait
rcr
stc
xchg
cs
mov
ret
adc
mov
cmp
push
jp
cmpsb
pop
mov
out
jbe
lods
mov
jo
add
dec
adc
mov
push
adc
fmull
mov
sub
jp
lods
and
les
dec
daa
cmp
xchg
pop
mov
jp
mov
or
ja
leave
sbb
into
mov
cld
and
and
insb
das
xor
mov
and
pop
aaa
sub
mov
cmp
mov
fsubrl
jp
and
sbb
xchg
sub
cwtl
cvtdq2ps
adc
mov
xor
cmpb
push
sub
add
mov
jp
sbb
adc
jl
sti
lret
sbb
mov
mov
cmpsl
jp
les
in
fildl
mov
xchg
cld
inc
outsl
rcr
scas
lret
imulb
aaa
cmp
fcmovb
hlt
or
xor
fcmovnb
cwtl
sbb
hlt
or
add
and
sub
mov
or
mov
xor
add
cmpl
ret
inc
mov
cmpl
leave
mov
jnp
fidivrs
sub
cmp
insb
mov
xor
mov
cmp
push
jo
bound
adc
sub
mov
mov
xchg
mov
inc
cli
mov
xor
push
pusha
fdivl
pushf
jecxz
mov
inc
mov
xchg
lds
cld
mov
sahf
pusha
inc
lods
call
pusha
fistpl
ja
cmpsl
insb
push
push
rcr
lock
xor
cmpsb
int3
push
imul
fwait
mov
stos
add
rol
pushf
das
mov
jp
or
push
push
push
out
jne
imul
js
or
mov
jb
pop
sahf
in
ret
xchg
bound
inc
push
sub
and
in
inc
in
add
int3
and
xor
add
in
sbb
inc
sub
xchg
ret
cmp
and
push
fidivl
push
mov
cmp
int3
add
in
mov
cmp
call
xchg
sahf
loope
or
sbb
and
xchg
sub
xchg
push
mov
leave
cmp
inc
sti
insb
sbb
cmp
je
adc
push
sub
cld
mov
jb
push
mov
jae
add
mov
rcll
test
rolb
loopne
movsb
out
lcall
daa
fcmovnu
jbe
xor
sub
jo
cli
dec
sub
xor
movsl
cmpsl
sub
inc
sbb
out
adc
xchg
cs
enter
or
push
jle
xchg
mov
cmp
jb
ds
xchg
jb
out
jne
jl
jb
push
stc
fiaddl
or
and
test
or
js
jp
cwtl
and
clc
jp
je
inc
enter
lock
rorl
jo
jb
pop
xchg
xor
arpl
mov
dec
sub
jno
aaa
push
mov
xchg
jnp
dec
sti
gs
fadds
jbe
push
xor
test
sbb
loop
fprem
aam
cli
mov
sub
inc
add
flds
mov
scas
inc
ljmp
daa
outsb
lds
inc
movsl
jle
lods
out
jle
stos
jnp
icebp
cmp
mov
pop
dec
xchg
movzwl
xchg
mov
sub
or
fdivrs
cwtl
dec
jbe
or
sbb
sub
pop
pusha
sub
mov
outsb
cli
clc
mov
loop
jnp
push
cmp
ret
xchg
lods
sbb
out
adcl
fisttpll
je
sub
in
cmpsb
sub
aad
int3
enter
xor
loopne
pushf
int3
pop
jo
js
jb
push
or
jbe
bound
daa
mov
jne
fwait
adc
push
mov
sbb
es
or
fldcw
lods
call
icebp
jbe
xorl
fimull
cmp
dec
add
in
jb
or
jle
dec
push
cmp
adc
cmp
mov
mov
cmp
stc
inc
xor
jecxz
cmp
push
ret
and
cmp
jl
adc
jno
sub
mov
add
xor
cld
test
jl
je
and
xor
mov
cld
and
adc
sub
ror
add
dec
fistpll
insb
mov
je
into
insb
adc
push
sub
mov
dec
mov
das
mov
add
into
insb
xor
dec
and
push
push
push
lods
lcall
mov
les
fmull
adc
mov
hlt
pop
jl
mov
sbb
fsubl
int3
jno
ja
mov
jbe
lock
xchg
inc
push
mov
adc
cmp
xchg
loopne
xchg
imul
aas
nop
das
insb
sub
pop
js
ss
inc
dec
mov
out
insb
and
rcrb
sbb
ss
jnp
outsl
sbb
pop
stos
mov
dec
xor
xlat
cmp
mov
cmp
push
sbb
arpl
add
icebp
cmpsl
push
adc
in
outsb
or
cld
sub
outsl
and
and
fstpt
jmp
subl
sbb
mov
sub
mov
lret
mov
inc
cmp
xchg
mov
cmp
sbb
xor
out
or
and
pop
mov
int3
mov
fstps
mov
rorl
adc
int
mov
lret
lock
mov
enter
add
add
adc
fwait
jbe
dec
adc
repz
incl
pop
cmp
xchg
push
les
outsb
mov
push
lret
stos
add
das
pop
mov
movsb
sbb
adc
cld
mov
xchg
push
and
and
les
sub
jg
clc
sbb
adc
sbb
rorl
arpl
int
js
lcall
scas
stos
push
jle
out
cmp
loopne
xor
lcall
mov
cmp
out
ljmp
lcall
adc
sti
pushf
inc
mov
mov
je
or
push
les
ljmp
stos
push
mov
ljmp
fs
add
iret
xchg
aas
pop
stc
inc
fidivrl
xchg
imul
adc
add
aam
fmuls
add
test
or
repnz
or
dec
pop
divl
sbb
and
xor
sub
outsb
sub
out
dec
movsb
pushf
push
jecxz
cmp
ljmp
dec
and
popa
pop
dec
or
jb
mov
pop
mov
cmp
jmp
les
sbb
jecxz
xor
mov
cld
stos
add
stos
xor
fcoml
data16
dec
negl
push
push
mov
sbb
jge
aaa
das
imul
aam
xor
js
cmpb
daa
loopne
scas
adc
pop
mov
inc
aaa
push
sbb
dec
dec
repz
sub
sbb
jae
mov
cmp
jb
cli
fsubp
or
cmp
sbb
push
cltd
lea
pop
mov
inc
test
pop
mov
add
daa
mov
jnp
lret
pop
lret
sbb
add
pop
xor
lods
mov
lahf
or
in
mov
inc
and
daa
ror
or
adc
xchg
pop
sbb
push
push
movsb
mov
sbb
mov
sti
cmpsb
sti
fwait
imul
mov
sbb
fucomip
sbb
test
cmp
ret
adcl
add
sbb
mov
mov
sub
pop
or
aam
addr16
call
mov
inc
pushf
sbb
or
fwait
pop
push
jl
mov
pop
clc
or
insb
pop
push
jbe
les
xchg
je
insb
mov
sbb
mov
pusha
add
inc
sub
and
push
xor
and
aam
je
or
mov
cmp
push
sub
lods
mov
jae
insb
pop
sbb
scas
jnp
aad
cmc
add
dec
add
loop
sbb
xchg
cld
les
mov
aam
inc
add
jae
cmpsb
mov
aad
cmp
sbb
mov
sub
pop
in
push
sbb
hlt
xchg
and
mov
notl
cmp
inc
lods
push
arpl
insb
sti
cs
push
sbb
pop
push
push
cmpsb
dec
xchg
dec
cmpsl
test
imul
inc
test
movsb
sbb
mov
xchg
sbb
test
lods
lcall
sbb
and
adc
cltd
mov
mul
jae
mov
jno
mov
cwtl
mov
gs
cli
subb
push
pop
mov
stos
mov
int3
xor
stc
and
mov
or
xorl
sub
cli
adc
rcr
cwtl
jns
sub
jnp
imul
dec
sub
push
jecxz
push
pop
dec
and
sbb
push
mov
inc
and
jnp
clc
lods
mov
xchg
fimull
pop
mov
dec
pop
push
cld
shld
add
mov
js
mov
mov
dec
hlt
adc
and
push
add
dec
sub
add
and
push
roll
mov
shrl
lods
sbb
sub
sbb
insl
xor
jae
xchg
or
fdivl
shlb
scas
sub
aam
int3
sbb
icebp
fdivr
mov
jp
test
xchg
mov
stos
shll
repnz
adc
hlt
sarl
sbb
jl
add
xchg
sub
push
dec
jne
push
jb
fwait
cmp
jl
and
test
adcl
ljmp
add
cmp
fwait
mov
jno
jg
and
lea
pop
sub
pop
or
lods
sahf
adc
jp
icebp
cld
mov
mov
int3
je
sbb
movsb
stos
pop
pop
push
pop
mov
fstpt
lods
testb
negl
pop
mov
push
add
inc
xor
aam
add
xor
jecxz
aaa
or
sbb
sbb
data16
sub
fcoms
fistps
and
mov
push
outsb
cmpsl
inc
sarb
and
push
sub
jle
cli
bound
cmp
adc
mov
or
sbb
dec
inc
hlt
mov
loope
sbb
and
cltd
inc
cmp
pop
push
cmp
fidivrs
shlb
test
in
es
lahf
pushf
adc
xchg
fdivl
cmp
loop
push
pop
jle
push
icebp
xor
or
les
adc
lret
jb
adc
call
xor
ret
inc
add
sbb
sbb
fsubrs
jo
enter
inc
inc
inc
pop
fs
sub
inc
ljmp
nop
pop
pop
jle
sub
mov
or
cmpsb
fmull
xor
cli
inc
out
or
jnp
and
in
and
sub
or
insb
xchg
insb
and
push
movsb
sub
aam
mov
rcrb
cmp
mov
jbe
mov
pop
pusha
dec
repz
pop
cli
jecxz
in
mov
or
stc
push
mov
imul
add
sub
int
stc
mov
sbb
sbb
lcall
lods
cld
fdivrl
js
loopne
popa
mov
enter
jl
and
clc
pushf
repz
cmp
push
xchg
jle
inc
mov
jle
sub
mov
fwait
and
mov
or
pusha
pop
js
sub
adc
aam
dec
fsubs
sti
sbb
sbb
cwtl
mov
push
je
sub
mov
mov
or
int3
out
jmp
pop
cld
dec
xor
int3
hlt
ds
sub
inc
lock
pop
xchg
in
movsb
loopne
test
sub
imul
sarb
mov
das
inc
or
jo
mov
sub
or
nop
shrb
pop
sub
or
sbbb
cmpsl
stos
xchg
push
dec
jg
sbb
outsb
ds
or
repz
jmp
cmp
add
jp
add
dec
sahf
jl
add
in
push
cmp
hlt
cmp
mov
pop
jle
cmp
pop
dec
cmpsl
sub
adc
push
cmp
js
cmp
mov
mov
cld
lods
jae
add
enter
insb
sub
sbb
jno
movsb
mov
js
in
in
lock
mov
cmp
xchg
add
pop
les
adc
dec
push
mov
call
dec
adc
cld
lods
in
sub
mov
mov
sub
mov
adc
mov
xchg
movsb
adc
lods
sarb
sub
mov
mov
jbe
sar
mov
pop
xor
lock
les
out
mov
repz
xor
out
out
sub
mov
insb
aam
call
xchg
lods
cmp
pop
jmp
call
inc
mov
or
mov
adc
and
mov
js
insl
sub
xor
enter
dec
movsb
adc
mov
inc
adc
cmp
mov
insb
sub
sbb
cwtl
cli
inc
cld
push
push
movsb
orb
cwtl
jl
or
pop
pop
das
pop
mov
in
pop
jl
sub
sub
inc
cld
xorl
sub
push
adc
sbb
mov
adc
mov
adc
mov
int3
subps
enter
hlt
js
xlat
scas
pop
jg
mov
loopne
ljmp
mov
mov
adc
mov
sahf
jecxz
popa
add
xor
sarl
jl
mov
pop
lret
leave
pushf
push
xor
adc
inc
jecxz
add
jne
adc
repz
fcmovnbe
mov
xor
jns
xor
testl
mov
ljmp
xor
jb
jae
imul
idiv
sbb
jecxz
sub
pop
push
jp
push
mov
adc
fisttps
dec
rcl
dec
xchg
push
jl
xchg
mov
int3
and
adc
cmc
mov
std
and
mov
sub
insb
imul
test
xchg
mov
ljmp
arpl
jae
popa
fwait
sbb
sbb
xor
and
xchg
scas
and
cmp
cld
jne
jae
cs
jns
jne
mov
jp
or
icebp
out
stc
mull
or
and
mov
add
mov
sub
je
sbb
jae
insb
fsubrl
sub
cmp
sti
cwtl
cmpsl
pushf
aas
in
pop
in
mov
nop
mov
rorb
rol
cmp
pop
icebp
add
aaa
mov
pop
dec
xchg
cmp
push
inc
ret
pop
mov
mulb
lods
popf
lds
test
cmp
test
loopw
daa
cltd
sbb
jae
out
test
cmp
stc
adc
cmp
jnp
test
imul
jae
inc
icebp
pop
or
mov
add
jno
sub
test
and
inc
sbb
push
and
pop
sbb
int
and
add
int3
push
dec
mov
jno
jecxz
cwtl
mov
jmp
xor
scas
repz
shll
adc
sahf
fcomps
cli
mov
xchg
sbb
mov
and
aam
mov
insb
je
sub
jge
pushf
stos
xchg
ret
sbb
mov
and
mov
cmp
inc
mov
lcall
fcomps
push
jl
jbe
inc
dec
js
rorb
mov
xor
push
or
dec
div
arpl
scas
pop
lret
aas
cmp
push
imul
ret
cmp
mov
in
push
pop
sub
cmp
repnz
shl
mov
iret
je
pop
stos
add
loop
or
adc
sbb
mov
push
sub
add
sub
mov
jp
cli
mov
bound
jae
xchg
cmp
fwait
dec
je
pop
aam
stc
inc
jg
cmp
rcrb
enter
std
test
xchg
test
xchg
test
inc
imul
mov
mov
xchg
mov
or
and
scas
xor
mov
sbb
test
lods
arpl
mov
and
mov
std
mov
jnp
insb
cmc
sub
mov
jne
call
and
mov
push
cwtl
cmp
ret
xchg
in
cmp
mov
ja
sbb
lock
pop
incl
test
pop
mov
cmp
std
sbb
movl
xchg
fsubs
jl
in
xor
sbb
jge
mov
sbb
out
push
scas
cmc
push
cmp
data16
dec
test
cmp
xor
or
xchg
fucomip
aam
test
inc
dec
cmp
sub
mov
sbb
fisubrs
hlt
lods
mov
pusha
xchg
push
push
mov
push
in
pop
xchg
outsl
cmp
shrl
cmp
imull
jmp
xor
mov
jmp
cmp
or
les
adc
mov
fs
idivl
outsl
xchg
aaa
and
jl
lret
or
mov
mov
outsl
and
dec
es
mov
cmp
xchg
jmp
push
lahf
jle
jo
sbb
sub
push
cmp
test
fs
stos
mov
test
sub
mov
addr16
imul
and
cmp
ret
dec
fldl
xchg
adc
sbb
outsl
xor
adc
jno
xlat
sbb
dec
xlat
jb
loop
stc
sbb
aam
test
js
cld
movsb
or
xchg
sbb
sbb
mov
push
andl
pushf
addr16
mov
loopne
shlb
xor
lods
or
dec
xchg
mov
in
shr
mov
xchg
jns
jmp
cld
test
je
push
insb
cmp
lods
adc
fidivs
fsubs
shll
mov
stos
inc
hlt
in
inc
sbb
ret
adc
xor
xor
les
lahf
imul
pop
fs
mov
nop
js
mov
in
mov
mov
mov
adc
dec
jae
cmp
adc
xchg
aaa
sbb
push
nop
or
std
sbb
push
sub
cld
jl
xchg
dec
and
in
mov
adc
ret
clc
out
adc
add
lret
iret
in
xor
cmp
popf
inc
and
in
sbb
adc
and
insb
test
stos
adc
int3
inc
data16
nop
jb
test
inc
jmp
jl
hlt
lods
movsb
test
push
subl
cmp
adc
xor
lret
xor
dec
push
jo
or
or
out
push
or
jo
sti
jno
xor
fs
andb
push
pop
in
lcall
js
repnz
mov
repnz
lret
ja
and
cli
inc
lcall
sub
out
push
and
sub
jo
inc
sub
or
out
ds
add
xor
lcall
cmp
sub
cwtl
cmp
fs
jae
cltd
add
push
sbb
lods
lret
cmp
imul
test
cmp
das
push
jp
mov
cmp
xchg
inc
inc
shlb
jl
inc
adc
xchg
push
les
fwait
insb
fisubrs
cmp
mov
ret
in
mov
es
pop
std
add
fistpl
adc
fistl
xchg
mov
xchg
push
lret
dec
sbb
jmp
xchg
data16
push
subl
pushf
mov
pop
inc
divl
or
int3
xor
das
cmp
mov
adc
and
jo
stc
cld
je
pop
bound
sbb
adc
dec
jae
jmp
js
xchg
adc
sti
inc
ds
movsb
push
dec
outsl
or
mov
adc
inc
sbb
scas
mov
imul
cwtl
sub
cwtl
add
lcall
cmp
and
sar
dec
xchg
pop
cli
xchg
sahf
mov
lcall
pop
pushf
sbb
push
ficompl
es
sbb
or
mov
ss
xor
ret
xor
inc
in
in
adc
jns
push
jmp
stos
xor
hlt
mov
or
int
sub
inc
loop
cmp
mov
stos
test
cmp
scas
leave
inc
or
scas
and
in
repz
mov
in
fnstcw
ja
mov
pusha
daa
xchg
addr16
and
fcompl
fcoml
out
or
les
in
mov
pop
clc
sbb
int3
and
cmpsl
or
lahf
and
add
cmp
into
in
lret
cwtl
rcrb
pop
repnz
adc
das
inc
dec
jmp
sti
clc
sbb
sbb
jle
out
negb
js
movsl
test
jb
lcall
adc
cmp
insb
cmp
xchg
cld
lret
cld
cmp
inc
pusha
push
sub
sbb
ret
fisubrs
mov
enter
mov
sbb
clc
in
clc
js
and
mov
std
stos
daa
pop
sbb
int3
les
dec
repnz
jnp
add
lock
adc
and
xchg
jbe
aas
sbb
pop
push
loop
xor
pop
add
add
les
adcl
mov
dec
mov
jb
or
add
test
cmpsb
rorb
or
mov
dec
cwtl
mov
nop
int3
je
mov
or
je
inc
dec
push
mov
int
xchg
je
lret
je
adc
adc
addr16
push
shll
outsl
adc
adc
jbe
cmpb
add
push
adc
sub
stc
dec
add
mov
mov
add
jbe
mov
out
mov
jg
in
call
out
sub
je
pushf
xchg
shll
int3
out
in
sub
jbe
push
fwait
cwtl
repz
aam
mov
inc
out
lahf
out
pop
sbb
js
adc
sbb
jmp
sbb
add
sub
les
test
fwait
dec
jae
mov
call
jl
enter
sub
andb
out
loop
sub
mov
cwtl
sbb
push
xchg
push
sub
mov
sahf
ss
push
int3
nop
cmp
mov
syscall
ljmp
sti
jno
addl
or
and
ljmp
sbb
mov
repnz
lods
lods
or
fwait
loope
int3
fdiv
rclb
pop
stc
sub
and
loopne
cwtl
sub
pop
jb
aam
sbb
cmpsl
sbb
xlat
ficoml
fidivl
add
lret
and
daa
and
push
xchg
int3
xchg
and
ficoml
dec
sbb
aam
xor
popa
add
fwait
pop
jmp
xor
iret
sbb
add
in
aam
dec
jmp
in
int3
shl
ja
pop
mov
fsubs
lcall
dec
fsubr
clc
shll
movsb
clc
fistps
hlt
in
sub
sbb
lock
jg
nop
insb
mov
into
in
sub
sbb
fadd
sbb
insb
add
sbb
lods
add
add
cld
jb
faddp
stos
mov
or
or
inc
int3
sbb
mov
inc
repz
in
fsubrl
rcll
cmpb
int3
out
mov
push
xchg
insb
or
xchg
jno
fsubrs
xchg
lret
fs
fcmovbe
xchg
jmp
mov
or
dec
cs
mov
popf
and
push
and
testl
popf
sbb
sbb
xorl
cmp
out
sub
fldt
insb
cmp
jae
movsb
pop
mov
xor
mov
dec
lods
sub
adc
shl
push
sbb
sbb
repnz
push
inc
adc
sub
or
bound
fs
sub
and
dec
mov
fwait
je
pop
inc
js
add
fsubrl
xchg
xor
stc
xlat
mov
mov
test
pop
nop
push
cmp
hlt
cmp
fstps
out
loop
add
enter
and
xor
int
cmp
ficomps
lea
aas
xor
cwtl
cmp
xorb
push
mov
ror
and
mov
sbb
movsb
cld
cmp
jmp
decb
cmp
lcall
xchg
jbe
je
pop
rorb
push
xchg
xchg
hlt
xor
aam
pop
adc
mov
mov
xor
out
lcall
push
inc
mov
cwtl
test
cmp
fs
dec
lahf
or
mov
mov
jecxz
sub
jl
js
movsb
imul
sti
in
mov
add
mov
out
push
sti
in
mov
add
sti
and
pushf
cmp
sub
push
lcall
mov
out
mov
cli
adc
loop
inc
sub
sbb
jl
xchg
daa
and
xchg
mov
cmpsb
stos
jecxz
rclb
add
push
adc
xlat
mov
rep
add
cmp
cwtl
fldt
cmpsb
js
fisttpl
loope
in
in
and
dec
xchg
adc
rcr
pop
sbb
push
adc
dec
and
hlt
cmp
es
lds
repz
sub
hlt
pop
pop
and
aad
mov
in
mov
lahf
scas
pop
popa
hlt
or
mov
xchg
mov
icebp
hlt
cmp
sub
mov
in
mov
sahf
xor
mov
in
add
mov
jns
fwait
lods
and
rolb
push
pop
or
and
push
in
pushf
inc
dec
stc
int
arpl
in
nop
je
call
push
je
shl
xor
hlt
cli
or
adc
insb
ljmp
sti
push
cmp
cwtl
sbb
xor
testl
and
ljmp
cmp
bound
pop
add
stos
fdiv
fstpt
adc
fsubrl
sbb
sbb
sbb
or
ljmp
xor
sub
mov
out
and
cmp
rolb
sti
mov
dec
jne
xor
adc
fucomp
xor
enter
div
and
or
lret
mov
fmull
jecxz
imul
and
mov
xor
clc
and
pop
mov
push
call
lret
cltd
mov
mov
mov
xor
int3
cmp
adc
cwtl
inc
mov
mov
repnz
sahf
sbb
pop
insb
push
outsb
js
and
pushf
in
or
cmp
call
loop
sub
push
arpl
sub
jp
loope
mov
jecxz
cmp
mov
mov
push
pop
fwait
sbb
mov
mov
outsl
into
and
sbb
and
push
and
incl
sbb
adc
mov
push
push
cmp
xor
xchg
cmp
sti
cwtl
adc
sbb
xor
mov
cmp
sub
mov
cmpsl
xorb
bound
jl
lods
cmp
dec
pop
loopne
jbe
adc
bound
sub
in
aad
imul
sbb
je
mov
mov
int3
pusha
add
lret
in
sub
sub
mov
push
cmp
imul
jle
mov
test
pop
repz
aam
push
lcall
fdivrs
cwtl
cwtl
ss
mov
cwtl
jle
cmc
jae
sub
xchg
in
pop
lcall
and
loope
frstor
cld
sbbl
push
jmp
sub
jle
xor
daa
and
mov
ljmp
cld
stos
cmp
in
and
pop
cmp
jl
jo
add
adc
jl
push
adc
jl
int3
cmpsl
xchg
sbb
and
dec
push
ret
jae
cmpl
pusha
and
xchg
pushf
push
pop
inc
test
scas
cmp
xor
xor
hlt
jmp
out
pop
ret
adc
out
jl
or
fwait
push
je
mov
outsl
inc
scas
mov
mov
in
mov
mov
mov
lods
xchg
cmpsl
in
jnp
sbbl
xor
push
mov
and
and
stos
mov
mov
jle
movsb
push
movsb
or
jnp
xorl
mov
xor
in
mov
cltd
add
xor
out
movsl
mov
dec
mov
push
add
adc
insb
pop
hlt
in
in
adc
xchg
icebp
sbb
jb
jecxz
mov
inc
inc
inc
aam
or
adc
pop
cwtl
movsb
pop
cli
cwtl
jb
loopne
into
xchg
pop
mov
dec
repz
mov
add
push
sti
daa
mov
xchg
pusha
pop
test
clc
movsb
mov
push
or
inc
mov
inc
shlb
inc
nop
cmp
and
push
pop
ljmp
and
push
arpl
mov
cmp
sbb
lock
test
or
ret
call
push
lret
mov
cltd
hlt
ja
xchg
sbb
add
lods
xor
test
rol
ljmp
repnz
adcl
inc
mov
sub
outsl
mov
cmp
add
hlt
jo
loopne
pop
mov
inc
call
ficoms
sbbb
fadd
inc
es
xor
jle
dec
add
cld
cld
and
out
sub
mov
lret
ljmp
es
cwtl
sbb
or
lcall
add
bswap
mov
sti
sahf
cld
adc
in
addl
ret
cmp
out
insb
adc
sub
xchg
std
add
sbbb
mov
adc
fstpt
sbb
cmpb
xor
sub
inc
xor
in
daa
pop
pushf
lods
and
push
in
sub
cwtl
inc
cmp
push
mov
cmp
push
dec
aam
mov
push
pop
xchg
sbb
cmp
bound
icebp
dec
mov
cwtl
lcall
je
dec
sti
cmp
cmp
cwtl
mov
imul
fcoml
or
xchg
inc
int3
cld
and
push
in
inc
mov
sti
stos
sub
iret
mov
fmuls
mov
xor
in
out
and
nop
and
mov
mov
add
cld
lods
xor
adc
lret
popa
lods
hlt
insl
sbb
mov
les
lcall
fmull
outsb
adc
mov
xchg
xor
mov
inc
in
and
jns
and
sub
fistpll
lock
int3
pushf
push
xor
mov
push
stos
fmuls
adc
jb
mov
out
cli
dec
aam
test
fdiv
adc
aam
xor
fcoms
aam
jecxz
fcoms
adc
les
or
js
add
cwtl
inc
nop
jb
mov
in
ja
or
or
sahf
pushf
loope
jne
fwait
into
cld
lods
adc
jae
xchg
je
sahf
test
or
mov
adc
mov
and
inc
aam
lahf
sbb
inc
fwait
or
sbb
jl
pop
mov
nop
pusha
mov
insb
in
aaa
jmp
les
pushf
icebp
inc
mov
mov
dec
mov
pop
scas
adc
in
adc
mov
lcall
mov
sbb
xor
outsb
in
jmp
adc
and
ja
or
xorb
jns
sub
ret
pusha
jae
cmpsl
lods
mov
ljmp
ret
push
cwtl
push
add
mov
mov
repnz
jl
orb
outsb
mov
adc
xor
add
and
jae
inc
repz
sbb
orb
jmp
sbb
pop
and
loope
pop
test
adc
loopne
push
es
rorl
test
int3
xchg
fsubr
jl
dec
cmc
pop
stos
mov
adc
pop
push
test
add
out
repnz
jecxz
sbb
xor
dec
es
outsl
dec
out
push
adc
in
mov
hlt
sbb
in
xchg
pushf
sbb
push
call
imul
in
bound
add
pushf
and
fisttpl
push
subb
or
je
adc
btr
in
pop
mov
pop
jb
shlb
jbe
nop
lods
shll
jg
in
movsb
pop
cs
sub
xchg
fs
mov
inc
jmp
out
and
cwtl
push
sbb
or
jp
jmp
fcoml
fdivs
mov
add
mov
jle
imul
mov
sbb
sub
jl
lahf
add
sub
inc
jnp
ds
adc
jle
insb
or
les
in
adc
push
out
shrl
push
adc
std
xchg
je
xor
cmp
sbb
outsb
sbb
sub
or
jle
xchg
mov
sbb
sub
iret
push
cwtl
call
adc
mov
sbb
pop
adc
aam
cld
cmp
pop
add
outsl
popa
mov
xor
mov
insb
sbb
jb
in
cwtl
mov
jmp
mov
ljmp
test
fdivl
lods
adc
insb
hlt
imul
ss
inc
lods
jl
xor
jmp
lods
cwtl
idivl
repz
xchg
xor
push
cmpsb
js
xchg
test
outsb
mulb
pop
int3
dec
pop
adc
mov
insb
xor
in
push
mov
adc
hlt
adc
mov
mov
dec
sti
insb
xchg
sbb
sub
fwait
mov
and
fcmovbe
xchg
mov
mov
add
xor
jle
out
xchg
sbb
mov
push
xor
push
xchg
xchg
push
or
leave
pop
xchg
xchg
cli
jmp
nop
sub
out
xor
dec
sub
push
mov
aam
in
test
dec
dec
jae
adc
jmp
adc
fs
adc
mov
jne
xlat
push
inc
adc
adc
cmp
mov
or
pushf
std
jp
clc
repz
sahf
stc
mov
mov
pusha
push
outsb
jecxz
or
lods
sbb
ss
addr16
xchg
jl
mov
xchg
jno
mov
jb
daa
andl
sub
dec
insb
jns
mov
mov
aam
mov
sub
shll
ja
mov
push
in
daa
mov
lret
sub
cmp
imul
inc
mov
and
mov
cli
mov
ss
adc
loopne
fs
xchg
fistps
outsb
pop
add
sbb
pop
sub
hlt
stc
sbb
or
outsb
adc
mov
cltd
sbb
jb
dec
inc
ret
lcall
movsb
xchg
push
mov
fcompl
insb
loop
dec
add
sti
xor
xor
push
jl
aam
loop
mov
sbb
nop
xchg
jmp
enter
or
mov
in
or
lcall
mov
mov
les
loope
hlt
cmc
xchg
sbb
fwait
mov
movsb
mov
test
jmp
xor
out
scas
sahf
jmp
shl
push
je
cmp
sub
jns
cmpb
out
xor
adc
movsl
cwtl
test
mov
mov
jg
push
sbb
pop
mov
fs
or
fcompl
enter
dec
out
cmp
repz
cmp
inc
test
adc
fisubl
or
mov
adc
shll
sub
pop
or
test
out
jle
adc
mov
movsb
push
lock
xor
aam
call
xor
aam
ds
mov
clc
loop
xor
loopne
sbb
ljmp
movsl
lahf
out
test
mov
push
sub
cltd
movsb
mov
out
sbb
mov
fcomps
shrl
imul
sbb
sbb
jl
outsb
inc
std
bound
inc
sub
hlt
stos
adc
enter
xlat
int3
insb
icebp
test
sbb
mov
pop
in
in
sub
repnz
jle
dec
insl
cmpsl
test
fildll
or
inc
bound
sti
cwtl
decl
add
push
jl
in
push
adc
lods
call
hlt
in
mov
dec
icebp
xor
pusha
pusha
lea
jecxz
pop
adc
or
mov
cmp
mov
mov
adc
stos
repz
sete
out
repnz
push
stc
adc
xor
adc
xor
sub
push
xchg
xchg
xchg
test
imul
sbb
nop
xchg
gs
ror
cmp
scas
cld
insb
in
cmpsl
add
push
sbb
int3
mov
fidivl
inc
jge
sahf
inc
stc
dec
sub
xchg
sbb
stos
or
sbb
push
or
push
das
out
lcall
cmp
xor
mov
jmp
repnz
pop
pop
cmp
jnp
xchg
xor
sub
pop
pop
ss
insb
add
xor
outsb
daa
jl
rolb
jp
or
push
and
lret
jecxz
sahf
pushf
sbb
push
je
or
xor
jp
outsl
jmp
mov
sbb
mov
dec
mov
xor
sub
adc
std
lods
pushf
int3
jo
and
stc
insl
aaa
mov
inc
or
fisubrl
stc
or
inc
addl
je
pop
aam
jnp
add
sbb
add
pop
cli
repz
into
cmp
sti
test
mov
hlt
jl
mov
add
repnz
xorl
or
or
loop
out
fs
ljmp
cmp
push
cld
jp
int3
xor
daa
sub
fwait
jl
int3
dec
cmp
adc
jl
sbb
imul
daa
mov
mov
fmull
mov
cs
int3
jl
ret
xchg
clc
pop
sti
pop
sub
mov
push
or
sub
aaa
sbb
or
sub
jnp
fists
adc
mov
ja
hlt
les
mov
icebp
mov
adc
push
push
ficoml
sbb
and
movsb
inc
cmp
adc
into
sbb
stos
mov
sti
dec
lods
mov
movsb
and
stos
pushf
cmpsl
mov
mov
pop
int3
mov
cld
sub
inc
and
add
pop
js
fadd
sbb
xchg
clc
ss
sub
aaa
sub
inc
mov
cmp
lret
jne
inc
mov
jecxz
and
mov
cmp
xchg
fsts
sub
adc
sbb
rcll
or
xchg
fdivr
jl
aaa
and
mov
das
cld
out
and
leave
cld
xchg
jbe
pop
sub
hlt
imul
mov
push
mov
sub
push
in
cld
int3
movsb
cwtl
sbb
test
mov
outsb
xchg
xor
pop
addb
or
stos
ds
int3
test
loop
adc
mov
lret
push
adc
pop
daa
pop
add
mov
sti
sub
mov
xor
scas
adc
in
pop
adc
or
and
pop
aaa
fnsetpm(287
pop
in
sarl
out
imul
arpl
and
mov
or
insb
dec
jns
adc
out
cmp
mov
fistpl
cmp
or
push
mov
test
aaa
aam
enter
bound
fdivrl
lret
cld
jbe
jmp
sbb
cli
jmp
mov
sti
out
shl
xchg
cs
push
sub
sub
jnp
enter
mov
pop
adc
hlt
push
cld
sub
inc
cmp
loop
pusha
and
cmp
sub
mov
or
call
hlt
add
mov
mov
pop
sub
or
jecxz
sub
mov
or
fcoml
js
cmp
mov
fwait
jo
in
push
adc
lock
pop
xchg
mov
enter
push
xor
testb
sti
sbb
inc
test
fimull
mov
push
pop
sbb
dec
mov
cmp
sbb
sbb
mov
push
in
cmpsb
or
pushf
adc
xlat
or
insl
ret
add
and
fidivs
fwait
sub
add
outsb
aaa
jnp
dec
fisttps
jl
jecxz
pop
inc
in
daa
mov
pop
or
or
loope
xchg
add
scas
inc
and
xor
loopne
and
ret
iret
xor
lahf
sbb
cld
cld
inc
jnp
and
jne
loopne
push
pusha
add
in
sub
hlt
cmp
pushf
mov
ret
cmp
cmp
sbb
pop
bound
mov
inc
pushf
into
ret
in
and
fstl
test
jle
dec
sub
scas
inc
sbb
pop
arpl
daa
jl
sarl
pop
popa
or
add
enter
fwait
mov
push
clc
mov
lret
and
cmp
mov
pop
test
adc
push
pusha
jns
dec
sub
xchg
or
mov
jae
xchg
outsb
cmp
in
cld
dec
cmp
inc
sub
pushf
repnz
ret
ss
popa
pop
ss
mov
lret
and
jge
cmp
mov
pushf
xchg
xor
sub
sti
and
sti
adc
pop
inc
mov
pushf
fisttps
mov
mov
stc
dec
cmp
test
xor
das
pop
jb
mov
sbb
das
inc
cmp
sub
mov
mov
pop
sahf
and
mov
enter
cmpl
xchg
jl
push
and
pop
stc
popa
scas
mov
pop
push
jo
sti
and
cmpl
mov
outsl
cmp
cmp
pop
push
cmp
jo
fsubl
and
mov
rcrb
outsl
or
push
jnp
aaa
push
or
jo
lock
mov
add
imul
fistl
mov
xor
into
pop
cmp
mov
repz
int3
shrb
xchg
lretw
das
std
push
cmp
or
test
and
lock
cmp
arpl
into
lods
shl
iret
aaa
cmp
ds
mov
cmp
ficompl
pop
jae
sub
out
idiv
pop
int3
adc
cmp
dec
aas
sbb
pop
dec
pop
xchg
jne
bound
and
cli
dec
mov
xchg
lea
sub
cmp
jecxz
xor
scas
insl
faddl
jbe
mov
das
or
mov
pushf
gs
push
hlt
ljmp
adc
inc
xor
dec
dec
jnp
cld
dec
nop
mov
dec
push
cmp
lret
lret
les
cmp
push
and
adc
jecxz
push
push
mov
cmp
or
shl
xor
xor
rorl
cmp
jl
jmp
xchg
hlt
mov
rolb
mov
and
cmpsb
dec
scas
cmp
stos
push
jns
les
jmp
inc
les
cs
popf
sbb
jle
or
scas
lahf
sub
xor
int3
rorl
cmp
inc
xor
hlt
xor
mov
lock
lcall
xor
mov
mov
add
sbb
sub
jl
enter
movsl
int3
shl
fsubrs
cmp
xchg
rorl
shlb
mov
pop
mov
sbb
xor
ret
dec
mov
test
push
xlat
xor
in
lret
pop
or
pop
cmpsl
xchg
inc
sar
xor
pop
jg
shrb
shll
js
jae
ss
mov
sub
xor
leave
mov
inc
clc
adc
pop
add
cmp
loop
lret
xor
cmpsl
or
movsl
aad
dec
adc
sarb
pop
fabs
rcrb
daa
xor
pusha
pop
rcrl
jge
shl
scas
ljmp
cld
sub
loop
cmp
add
out
es
inc
sbb
sbb
cmp
adc
int
ret
loop
cmp
add
xor
arpl
add
sbb
clc
repnz
mov
sti
push
addr16
pop
xor
pop
push
lods
mov
cli
aaa
mov
bound
mov
insb
pop
fsqrt
out
int3
mov
add
mov
push
sub
adc
imul
jne
xlat
and
lds
mov
imul
pop
daa
cmp
ds
enter
mov
les
iret
pop
xchg
dec
sbb
mov
sub
sub
scas
cmp
loope
inc
xchg
sbb
fildll
aaa
pop
imul
sub
aam
cmp
cli
sub
das
or
xor
fwait
inc
ficomps
lods
fwait
lds
mov
cmp
or
and
call
pop
push
inc
cmp
rcrl
out
loope
stos
pop
xor
stos
js
stos
inc
xor
test
xchg
mov
bound
inc
repnz
push
pusha
out
ret
cli
mov
cld
cmp
ds
pushl
out
push
cmpsl
test
lret
ljmp
sub
or
pop
cmp
into
mov
cltd
add
shl
cmp
sbb
lock
cld
mov
faddl
push
xor
push
into
mov
cmpsl
pop
shll
pop
bound
adc
sbb
mov
pop
pop
clc
sub
pop
data16
pop
xchg
mov
mov
fwait
jmp
xor
cmpsb
pop
hlt
mov
sbb
cltd
fwait
outsl
enter
and
jle
aas
out
ret
inc
xor
mov
je
aam
lds
sub
mov
push
sub
aas
stc
sarb
inc
push
imul
mov
cld
xchg
divb
das
sbb
out
out
and
mov
or
cmp
mov
sub
ljmp
cmp
scas
xor
add
rcr
lods
fstpt
mov
test
pop
xor
pop
out
sub
fcmovu
lret
stos
pop
lahf
mov
scas
sbb
lock
jne
fildl
mov
add
mov
repnz
test
daa
sbb
mov
negb
je
repz
or
and
and
jg
xor
push
aas
dec
hlt
imul
cli
lods
clc
pop
mov
pop
lcall
mov
cmp
or
testb
clc
jge
aam
test
or
stc
hlt
lret
mov
repnz
hlt
hlt
or
pop
inc
push
mov
push
sub
push
or
jp
das
adc
xor
les
les
leave
mov
inc
cmp
add
les
and
mov
mov
lods
sub
xor
shll
repz
cmp
cld
mov
loopne
imulb
stos
shll
insb
sub
xlat
mov
dec
mov
scas
shl
add
aas
adc
sub
sbb
dec
sbb
fidivs
ret
mov
xor
adc
xor
sub
jns
notb
inc
idivb
xor
sub
aad
int
pop
fwait
cmp
ljmp
adc
add
sub
adc
fcomp
adc
lahf
sbb
mov
push
sbb
sub
hlt
sub
in
xor
adc
sbb
and
adc
jmp
negb
and
dec
js
mov
cmp
lds
push
mov
sub
cld
int3
sbb
sbb
aam
and
xchg
dec
sub
sub
lret
insb
aam
clc
aam
sub
or
insb
test
int3
sub
push
mov
fdivrs
adc
loop
aaa
sub
out
daa
pop
repnz
cwtl
test
loopne
das
ja
push
repz
xchg
in
loopne
xor
sub
cmp
adc
xor
sub
cmp
iret
pop
cmp
lods
jmp
sub
ret
cli
mov
test
adc
dec
or
das
fdiv
sub
xor
xor
jae
icebp
and
sub
imull
cmc
fadd
xchg
jmp
je
add
or
sarl
shr
js
cmc
out
pop
daa
cmp
imul
sub
out
xor
xor
in
mov
xor
cmpsl
ret
mov
cmp
sbb
in
call
rcl
dec
xchg
das
in
fnstcw
js
and
mov
push
rorb
push
xchg
mov
mov
xor
cwtl
push
iret
mov
loop
sbb
sub
jl
popf
loopne
pop
mov
xchg
js
sub
mov
fwait
das
mov
loope
clc
fwait
test
shrb
lret
enter
dec
sub
dec
aaa
das
xchg
daa
mov
dec
out
in
cmp
insb
mov
push
in
into
in
sbb
xchg
clc
or
add
jno
mov
cmp
fstl
movsb
mov
jle
mov
sbb
fldenv
sub
jecxz
movsl
je
sub
push
int
aaa
xor
gs
fldcw
pop
fadds
inc
xorb
cwtl
jne
sbb
lahf
sbb
iret
ss
mov
in
mov
pop
dec
xchg
mov
fcmovnb
fdivrl
jnp
xchg
rcrb
into
das
xchg
dec
and
shll
lods
adc
sub
hlt
xor
test
outsb
hlt
in
pusha
jnp
xor
xor
jne
je
inc
sub
adc
jae
xchg
imul
mov
mov
add
cli
fmuls
mov
nop
js
lret
push
mov
and
mov
test
mov
dec
cmp
mov
adcb
decl
test
stos
jae
iret
cmp
hlt
mov
mov
or
aaa
xor
test
and
xchg
and
test
xor
and
sbb
adc
and
pop
prefetch
or
or
aaa
push
xor
and
cmp
xchg
sub
sub
dec
fiadds
cmp
xor
in
out
fidivs
cmpsl
cmp
scas
inc
xchg
cmp
xor
jbe
rcrl
cld
xor
mov
push
sbb
cli
fidivrl
jp
clc
pop
cmp
stc
sub
mov
hlt
or
cmp
mov
cmp
call
into
int3
lret
mov
mov
scas
lods
stos
test
mov
cmp
jb
outsb
insb
loopne
push
dec
dec
dec
dec
cmp
cs
sub
adc
or
cmp
icebp
out
in
jmp
jmp
ror
int
lret
leave
mov
mov
scas
cmp
xchg
xchg
xchg
xchg
cmp
xchg
jne
jae
outsl
insl
imul
cmp
dec
dec
dec
dec
cwtl
inc
mov
and
pushf
mov
mov
dec
cli
aam
mov
lea
sbb
pop
pop
clc
xor
lea
sub
cwtl
pop
adc
cltd
cmp
hlt
aam
repnz
pop
test
cmp
xchg
loop
sbb
ss
sahf
scas
cmp
jge
loopne
cmp
sbb
xor
icebp
in
in
push
add
lahf
cmp
jnp
pusha
clc
xor
mov
lret
and
add
dec
cmp
mov
cmp
inc
and
or
push
pop
inc
out
fadd
xchg
push
or
scas
pop
hlt
dec
xchg
and
sar
cmp
and
fcompl
imul
scas
add
dec
xor
pop
jae
cmp
sub
sbb
imul
lds
sti
repnz
cmp
xchg
mull
fistps
sub
lds
or
daa
cli
pop
pop
jnp
inc
rolb
ret
pushf
mov
lahf
xor
xchg
jbe
cmp
inc
test
xor
push
cmp
push
popa
and
scas
jmp
andl
outsb
mov
insb
jno
xchg
repz
ds
cmp
inc
scas
cwtl
roll
add
enter
subb
lods
aaa
adc
xlat
fwait
mov
and
movsl
sub
fwait
das
inc
xchg
aas
sub
pop
lock
push
loop
out
mov
dec
jb
lret
inc
mov
or
or
jb
adc
fsubr
add
jmp
es
pop
sahf
ja
fwait
dec
fs
imul
les
cmp
cmpb
in
aam
sahf
lcall
jg
mov
cmp
loope
adc
arpl
push
cmpsb
xchg
shl
dec
dec
mov
dec
mov
addr16
in
loope
test
mov
nop
and
dec
roll
mov
addl
cmp
mul
mov
aaa
aas
xchg
dec
jle
cmp
call
pop
repnz
popa
push
inc
outsb
dec
cltd
addr16
ret
cmp
icebp
loope
aaa
xlat
je
or
fldt
adc
testb
ds
popaw
dec
cmp
adc
mov
and
push
cmp
push
mov
ret
sbb
out
or
int3
jle
and
cmp
and
dec
lods
mov
cmp
jne
adc
and
push
jnp
addr16
push
pop
cmc
dec
inc
add
cmp
in
pop
adc
mov
hlt
insl
cmpsl
shrb
popf
mov
jnp
cwtl
test
ds
pop
push
bound
js
adc
movsl
insl
enter
cs
mov
sub
or
insb
aad
stc
pop
cmp
les
mov
cmp
mov
in
sbb
or
iret
cmp
loope
mov
cmp
outsb
and
cmp
xlat
xor
inc
jl
jnp
push
sub
sub
jnp
loopne
push
pop
jo
jmp
push
or
fistps
cld
fadds
mov
or
cmp
inc
in
xchg
in
cld
movsb
dec
pop
je
inc
xchg
dec
cmp
sub
xor
inc
or
sarl
cmpsb
cmp
les
loop
fbld
out
mov
std
cmp
jno
pop
cmp
jle
dec
pop
cmp
mov
lgs
lret
add
and
roll
pop
imul
mov
repnz
push
xchg
repz
xor
cmp
test
mov
cmpb
pop
cmp
mov
dec
jmp
divl
lods
cmp
nop
cltd
jle
movsb
mov
mov
hlt
inc
cli
xchg
cmp
mov
dec
stos
into
xor
cmp
rcrb
pop
cmp
or
cmp
loop
push
popa
pop
ret
mov
mov
xor
ljmp
movsb
pop
xor
lods
xchg
dec
dec
pop
mov
jns
cmp
out
pop
popf
cmp
jb
movb
daa
insb
fs
sub
cmp
loopne
dec
out
stc
iret
pop
xchg
cmp
xchg
and
shlb
or
sub
gs
cmp
les
das
cmp
dec
push
fildl
jb
sbb
imull
pushf
mov
lret
or
fmull
xor
pop
mov
pop
xchg
jnp
data16
inc
ja
fisttpll
popa
ffreep
shr
cs
lret
in
or
cmp
hlt
daa
mov
insl
daa
cmp
and
push
aaa
ja
int
jnp
jle
pop
cmp
mov
out
cmp
dec
inc
int3
repz
nop
int
mov
dec
dec
cmp
or
in
inc
adc
pop
sub
fildl
cmp
jns
mov
inc
push
daa
dec
frstor
dec
push
insl
pop
sbb
or
loopne
repz
popa
or
sarl
mov
adc
push
push
test
cmp
cmc
rol
cmp
push
mov
sub
add
cmpsb
cmp
movsb
dec
mov
je
ds
pop
jbe
std
ljmp
cmp
and
xor
into
ja
frstor
dec
cmp
loope
aam
mov
xor
jle
mov
pop
imul
xchg
cmp
mov
dec
leave
xchg
inc
shlb
das
test
dec
setbe
mov
xor
push
adc
sbb
or
fidivl
dec
jns
inc
and
je
cmp
and
xor
aam
inc
lcall
negl
mov
adc
pop
sub
lret
push
xchg
insl
sbb
dec
inc
xor
jns
mov
cmpl
repz
cmp
insb
std
jp
cmp
dec
mov
scas
cmp
rorw
cmp
mov
stos
lret
add
xchg
cmp
mov
mov
ds
and
rorb
loop
fisubs
xchg
push
jns
add
test
or
fcompl
dec
fs
movl
mov
loop
shlb
cmp
cwtl
mov
loopne
sti
jae
in
repz
xchg
cmp
xor
cld
xchg
pop
daa
xor
and
aam
aaa
pop
mov
jg
jns
orb
push
imul
xchg
pop
in
cmp
xor
cmp
lock
and
cmp
push
popa
repz
pop
test
cmp
lret
jge
jbe
dec
call
jae
mov
sub
bound
mov
in
negl
xor
cld
sub
sbb
ljmp
pop
fisubs
inc
xchg
pop
dec
add
pop
sub
fimuls
js
add
repz
gs
add
mov
mov
pushf
fsubrl
jnp
jne
sbb
sub
xor
arpl
pushf
cmp
fwait
repnz
aaa
mov
call
outsb
lret
lock
mov
mov
cmp
jns
xor
mov
cmp
add
dec
sub
and
inc
mov
xchg
shl
repnz
pop
sbb
xor
faddl
cli
and
sub
sbb
xchg
push
sub
mov
stos
cwtl
dec
das
pop
inc
xor
nop
sbb
negb
les
test
cli
fdivl
clc
sub
sub
add
in
lods
sub
repz
xchg
mov
xor
adc
push
out
xor
mov
daa
pop
inc
xor
call
xor
mov
cli
ret
bound
sbb
xor
and
int
scas
inc
sub
enter
mov
cli
lret
bound
js
xor
fwait
push
mov
stos
into
lcall
sub
test
jecxz
fcom
adc
sub
in
sub
mov
stos
sbb
cld
aad
xchg
scas
sbb
xor
ds
add
xor
xchg
xor
pop
lret
adc
cld
cmpsl
leave
xchg
mov
test
decb
mov
nopl
movsb
mov
sar
aam
lods
mov
mov
xor
emms
movhps
mov
or
lods
cs
cltd
xor
or
daa
stos
or
and
pop
pop
pop
sub
test
cmpb
mov
add
sub
mov
add
sbb
mov
insb
test
stc
sub
add
fprem1
lds
adc
jmp
mov
sub
insb
cmp
xor
mov
sti
add
xchg
adc
and
aas
scas
and
xchg
jmp
cli
push
mov
adc
mov
pop
cltd
out
test
dec
jp
cli
sub
push
aaa
jmp
xor
mov
jge
sub
insb
test
mov
rcll
sub
or
and
imul
icebp
stos
fisubrs
xor
mov
pop
mov
add
mov
jmp
dec
jge
sbb
dec
mov
jl
add
sub
jl
pop
loop
ja
rolb
ficompl
mov
or
inc
inc
negb
fcomps
adc
in
in
sub
and
ljmp
cmp
dec
enter
out
and
mov
pop
mov
push
xor
call
test
sub
mov
and
and
sub
in
and
iret
jp
enter
test
cmp
lcall
daa
mov
or
sub
sub
inc
mov
push
xchg
push
push
push
fstpt
mov
lahf
pop
test
lret
inc
neg
xor
xor
mull
movsb
insb
cmp
icebp
sub
dec
and
mov
stos
sub
sub
aaa
hlt
cld
mov
dec
inc
add
cmp
xor
sbb
xchg
cmc
sub
je
mov
mulb
cmp
mov
mov
ljmp
daa
jg
xchg
mov
dec
imul
mov
sub
test
cmp
das
dec
adc
into
xor
and
out
jle,pn
data16
loop
pop
fnstsw
dec
cmp
mov
mov
push
mov
mov
dec
cmp
in
rclb
movsl
and
adcb
dec
aaa
xchg
jge
mov
dec
cmp
mov
mov
fwait
je
cmp
ret
mov
or
dec
fnstsw
mov
mov
lds
cli
add
cmp
push
stc
cmp
popf
movb
hlt
cmp
mov
ffreep
aaa
jb
pop
sbb
xor
sarb
dec
ret
add
xor
jo
pop
mov
xor
pop
jecxz
push
adc
mov
inc
out
ds
sti
dec
cs
mov
lods
push
sub
jmp
add
sarb
ficomps
sub
xor
fs
mov
xchg
stos
adc
adc
inc
or
push
xor
cmp
adc
cmp
push
mov
hlt
push
cmp
iret
sarl
cmc
mov
daa
mov
adc
mov
arpl
test
popa
cmp
mov
lock
inc
mov
data16
cmp
es
loop
push
sar
bnd
xchg
enter
cmp
int
cmc
iret
mov
adc
cmp
mov
xor
xchg
pop
or
leave
aad
ret
lretw
sbb
xchg
imul
xchg
cmp
cmp
in
and
pop
test
mov
mov
das
cld
ret
fistl
mov
sub
push
popa
dec
and
mov
fadds
in
lods
mov
inc
hlt
pop
xor
cmp
loopne
mov
hlt
insb
adc
aaa
movsl
mov
frstpm(287
lds
test
cmp
lcall
orb
mov
cld
mov
inc
imulb
imul
test
in
push
sbb
shlb
or
aam
push
pop
pop
sub
cmp
js
dec
push
jp
fwait
or
call
test
sub
push
inc
js
sbb
sub
inc
sub
cmpsl
shl
mov
mov
pop
call
test
pop
sbb
sub
out
sub
outsb
push
int3
mov
and
sbb
and
leave
inc
mov
ret
pop
push
ret
imul
icebp
das
fcoms
sbb
or
ret
jle
aam
in
ljmp
xchg
imul
sbb
or
adc
xchg
jecxz
and
ret
loop
lcall
pop
sbb
fidivl
pop
cli
and
loopne
mov
popf
push
loop
mov
lods
imul
push
and
dec
std
sti
sub
ja
fdivl
sbb
adc
and
fnstcw
jl
and
cmpl
jle
xor
int3
sub
sbb
sub
cmc
lea
pop
xchg
pop
lahf
sub
fisubs
stos
aaa
add
sbb
ja
dec
movsl
jecxz
cltd
fdivrp
sub
andb
fdiv
hlt
das
ljmp
je
fsubr
clc
sub
nop
fisttpl
cmp
mov
ss
lock
clc
sub
aad
cmpsl
fprem1
sbb
lock
pop
sub
lods
je
repnz
iret
pushf
stos
fdiv
cmp
and
sub
dec
or
sbb
xchg
inc
xchg
xchg
pop
fcoml
cld
lret
dec
lds
or
cli
ror
mov
hlt
sub
orb
inc
scas
sbb
push
popf
jge
sbb
imul
sub
jo
cmpsb
loopne
sarb
push
sub
iret
lahf
in
lea
movsl
and
and
cltd
repnz
imul
aaa
inc
adc
test
ds
testb
jne
jl
mov
cmp
xchg
adc
mov
insl
inc
cli
fmul
scas
cmp
pop
mov
jl
je
lock
xchg
lea
pop
in
cmp
leave
fcmovnu
sbb
dec
lods
mov
mov
xor
xor
popf
sbb
lret
js
mov
adc
mov
lret
sbb
dec
sbb
stc
xor
cmp
adc
inc
mov
xor
or
or
daa
fldl
sub
repz
pop
jmp
divb
or
xor
aas
nop
leave
add
and
cmp
loopne
popa
or
jo
inc
mov
mov
sahf
sti
add
js
sti
push
add
sbb
xchg
ret
insl
in
mov
outsb
sbb
and
std
js
je
daa
std
xor
addb
push
pop
sub
addr16
lret
insb
jecxz
lret
cmpsb
xchg
lods
sbb
stos
xchg
int
xor
es
and
test
push
push
fdivrp
aad
push
out
mov
xchg
les
ljmp
mov
or
repz
cs
cltd
outsl
mov
or
mov
push
sub
testb
adc
sbb
jge
sub
pop
rorl
cltd
ret
inc
xor
jns
int
lahf
mov
lods
cmpsl
js
and
stos
pop
inc
lcall
rcr
xor
fldz
lcall
xchg
xchg
mov
stc
pop
imull
mov
negb
pop
xchg
aad
sbb
cmpsb
aad
sbb
inc
cmp
lcall
mov
pushf
sub
fcmovnu
lret
mov
cmp
xchg
insb
adc
push
fucomp
arpl
xlat
out
sbb
or
adc
lock
mov
mov
sub
pop
in
jns
repnz
js
data16
scas
hlt
cs
cmc
aad
lea
mov
add
add
hlt
fisttpll
sarb
insb
add
pop
xor
arpl
clc
sbb
jl
in
push
lahf
pop
enter
into
repz
lods
jle
jg
xchg
sub
sbb
push
rorl
sbb
xor
test
inc
sub
mov
das
jg
test
nop
mov
jns
sub
pop
xchg
ret
cmp
fimull
das
cltd
pop
sbb
std
jb
pop
ljmp
scas
les
mov
repnz
dec
lods
cwtl
dec
adc
in
xor
mov
xor
lods
xchg
imul
pop
rolb
pop
mov
mov
jnp
popf
xor
lret
jg
scas
das
pop
sbbb
hlt
pop
loopne
fisubs
fs
loop
xchg
dec
mov
push
pop
and
push
pop
jne
xor
ljmp
imul
lcall
pop
clc
out
mov
sub
add
inc
ret
repnz
sub
std
sahf
repnz
sub
and
mov
sub
aam
mov
sub
mov
sub
nop
and
pop
enter
enter
push
sbb
jae
pop
sub
mov
nop
and
mov
pop
stos
fmull
or
mov
mov
in
dec
daa
stos
sbb
sub
dec
cld
adc
mov
sbb
sub
xor
fstpt
inc
cmp
sbb
xchg
adc
in
pop
sti
mov
sar
sub
xor
ja
out
lock
adc
in
cmp
adc
jecxz
sub
xor
push
mov
pop
lock
fistpl
pop
cmp
sub
test
lret
add
mov
sub
inc
add
rol
add
push
mov
in
mov
adc
cmp
sti
fisubrl
fcomps
hlt
aam
rcrb
sar
into
jo
iret
fidivl
mov
cmp
xor
fcmove
cli
sbb
ret
rorl
filds
cltd
insl
dec
lods
pop
sbb
sbb
adc
mov
loopne
mov
lea
jae
ljmp
scas
adc
mov
out
cli
sbb
push
cmp
mov
pop
adc
mov
mov
ror
fisubrl
lcall
ror
sub
mov
xor
mov
cltd
into
jl
movsb
rcll
pop
sub
jmp
inc
rep
mov
sub
jmp
jo
sbb
shrb
sub
and
pop
pop
stos
or
xor
pop
pop
in
test
ds
fcompl
daa
ja
adc
fcompl
popa
sbb
inc
dec
jne
test
in
and
sbb
dec
stos
scas
mov
xor
or
cld
dec
clc
ds
fucom
inc
sbbb
ljmp
xchg
arpl
cwtl
xor
jle
push
sbb
ficomps
xchg
test
mov
xchg
lret
and
mov
sub
sbb
ja
paddb
mov
add
sub
adc
sbb
mov
xchg
adc
push
xor
mov
mov
jmp
sbb
ret
pop
ja
mov
cmpsb
jecxz
arpl
pop
pop
add
push
inc
or
xabort
pop
lea
aam
ss
movsl
mov
mov
ss
dec
xor
jbe
mov
dec
popf
cmp
push
ja
fxam
cmp
ds
test
lea
mov
mov
rcll
into
fcmovu
or
je
hlt
and
leave
call
sub
insb
cmp
inc
add
fisttpll
xor
inc
push
cmpl
mov
sbb
lds
or
and
add
inc
test
js
xchg
loop
stos
enter
repz
lods
inc
jo
bound
mov
outsb
lret
das
int
jb
fsub
rolb
ret
arpl
pop
mov
loop
icebp
adcl
dec
fs
mov
fucom
in
fwait
mov
je
jo
aaa
and
push
fwait
xchg
outsl
cmp
nop
in
gs
pop
pop
adc
jle
movsl
cmp
fs
xor
cmp
xor
fmuls
pop
iret
out
jae
std
cmp
mov
ds
and
dec
mov
push
jns
dec
mov
cld
lea
sub
dec
push
adc
clc
fdivp
aaa
lods
mov
add
mov
mov
cmp
jns
mov
xlat
leave
sub
xor
cmpsb
std
aad
xor
jle
pop
cmp
out
das
mov
jl
and
sti
cmp
std
sub
push
adc
adc
nop
add
es
dec
xchg
daa
push
stos
fbld
int
mov
or
sbb
xchg
sti
and
std
mov
ds
pop
ss
mov
das
inc
scas
xor
imul
sti
jno
ds
or
jg
out
test
dec
jp
aaa
jae
aaa
or
mov
dec
mov
push
mov
out
mov
dec
test
in
cmpl
mov
mov
adc
hlt
sbb
les
mov
aas
ljmp
jne
push
mov
mov
or
sub
xchg
jg
jge
imul
out
mov
cmp
loopne
push
xor
aam
sub
or
mov
mov
enter
dec
push
pop
mov
cmp
mov
outsl
sbb
out
mov
stos
cmpsb
xor
bound
mov
adc
mov
outsl
push
popf
sub
push
das
or
les
fcmovu
push
scas
xor
xchg
dec
lahf
das
xchg
data16
aad
or
push
aam
sub
inc
cmp
xchg
insb
jno
mov
jmp
fidivs
pop
sbb
inc
cmp
rcr
cmp
and
mov
pop
sahf
sub
lock
sub
arpl
push
cmp
cmpsb
jo
fmul
pop
mov
cli
mov
jns
and
ljmp
out
push
or
lds
mov
push
jns
fstpl
popa
cmp
pop
sbb
cmp
xor
or
cmp
js
xchg
mov
mov
mov
sbb
cmp
ds
xor
ret
cmpxchg
push
or
cld
and
jb
mov
xchg
mov
or
idivb
mov
into
sub
dec
dec
cmp
ss
ret
mov
addr16
xchg
sub
cmp
sbb
outsb
cmp
push
pusha
jbe
adc
stos
sarl
fistps
sub
nop
cmp
mov
add
int3
mov
dec
sub
pop
xlat
xchg
fwait
pop
sbb
testb
in
xor
and
xor
clc
add
cmpsb
jmp
jmp
imul
and
sbb
cmpsb
jmp
lret
sub
and
and
fcmove
dec
mov
repnz
mov
daa
int
lcall
test
test
lret
repnz
inc
cmp
les
loope
rcrb
lock
mov
inc
xor
push
jmp
mov
stos
in
mov
hlt
pop
fdivrs
mov
xorb
and
orl
ret
das
ficoms
sbb
push
and
jecxz
dec
cmpl
lds
lea
lods
pop
das
cmp
shlb
inc
cli
fdivrs
push
sahf
and
inc
xchg
fwait
lret
xchg
mov
jmp
cwtl
xor
xor
and
sub
or
inc
mov
sbb
subb
xor
imul
out
out
out
dec
fidivs
cmp
daa
loop
adc
mov
jl
push
add
push
xor
fcomp
add
arpl
sub
pop
movsl
andl
mov
jg
ficomps
xchg
les
dec
shlb
leave
je
cmp
xor
mov
xor
cmp
imul
and
add
gs
sub
shll
cmp
inc
daa
pop
stos
imul
es
aaa
mov
cmpb
in
add
xor
cmp
fadds
pop
test
test
ficoms
add
xchg
pcmpgtb
push
rolb
gs
ffreep
mov
rcrb
inc
push
mov
add
cmp
jnp
mov
cmp
inc
std
jbe
push
cmp
cltd
and
pop
sbb
push
dec
push
scas
xor
sbb
repz
or
or
cs
stc
popl
inc
ds
sub
add
out
les
ret
inc
scas
ret
fcompl
mov
mov
int3
jge
mov
sub
xor
outsb
call
mov
pop
imul
mov
ljmp
xor
pop
ljmp
sub
mov
sub
stos
sahf
or
sbb
xor
cmp
inc
bound
aas
and
aas
push
shlb
sub
sbb
sub
pop
cmp
inc
sbb
sbb
gs
daa
push
lods
mov
xchg
mov
adc
dec
gs
and
cmp
cli
cmpsb
adc
sbb
scas
imul
je
outsl
cmp
cmp
cmp
popa
rolb
dec
inc
and
scas
pop
jno
test
es
add
mov
mov
lret
xor
cmpl
ds
sub
inc
xor
bound
mov
dec
xchg
add
imul
cmc
test
fiadds
repz
das
jle
inc
add
mov
mov
jne
stos
adc
andl
mov
adc
in
outsl
sbb
adc
cmpsl
cmp
cmp
lret
test
rcrl
cmp
subl
xchg
test
int
loope
ja
sarb
sub
lods
lods
cmp
nop
pop
mov
cmp
stos
aas
je
fyl2xp1
and
int
pop
inc
das
enter
and
cli
xchg
cmp
out
sbb
push
test
mov
sub
push
dec
xor
into
cmp
repz
and
sbb
and
cmp
inc
pop
andb
cmc
pop
addr16
cmp
push
cltd
orb
dec
es
lods
js
cmp
sbb
mov
cmp
dec
mov
aad
fisttpll
sti
jle
pop
cmp
inc
mov
mov
mov
ret
mov
add
mov
xor
xchg
adc
cmp
sbb
xchg
xlat
mov
mov
cltd
mov
icebp
ja
and
popa
push
jne
sbb
add
or
icebp
insb
lea
xchg
cmp
pop
dec
mov
mov
aad
cld
and
cmp
bound
or
test
fcoml
push
andl
add
divl
stos
into
or
dec
stc
adc
ja
std
jp
cmp
sbb
int3
inc
cmp
xchg
mov
bound
mov
dec
dec
cmp
mov
jo
jns
aaa
out
mov
or
outsl
adc
pop
jle
push
sbb
cmp
push
xor
sbb
dec
mov
aad
shrl
pop
inc
fsubrp
and
adc
gs
les
cmp
stos
mov
cmc
test
push
hlt
data16
cmpl
clc
test
sbb
hlt
xchg
lret
lret
mov
push
or
in
ret
mov
jg
inc
mov
test
mov
aaa
jp
xchg
lret
lret
push
scas
fwait
cmp
mov
add
xor
outsb
jmp
adc
xlat
jge
push
imul
xchg
lods
or
pop
aad
cmp
cwtl
fiaddl
nop
and
call
mov
or
iret
repz
pop
jne
lods
xor
inc
pop
pop
scas
int3
fcomip
inc
mov
push
jge
dec
outsb
mov
dec
ret
lods
or
pop
insl
jbe
adc
xor
sti
pop
jp
add
in
hlt
jne
mov
test
jle
pop
in
cli
subb
shlb
cmp
or
inc
lret
dec
inc
bound
insl
fwait
sarb
dec
lods
cmp
xchg
adc
cmp
add
les
sub
add
jbe
fisttpl
dec
cmp
inc
lds
fdivrl
clc
xlat
push
cmp
jno
dec
ss
push
cmp
and
aaa
cli
cmp
jnp
or
dec
cmp
push
shll
sbb
lret
loop
je
imul
frstor
or
jae
in
in
js
push
gs
jb
pop
lret
das
outsl
jle
add
dec
shrb
cmp
pop
mov
xor
lret
xchg
cmp
jo
xchg
roll
out
xchg
cmp
mov
aam
loope
sub
fsubrl
inc
subb
mov
stc
dec
dec
inc
mov
idivb
gs
xor
or
dec
sbb
imul
ret
scas
jae
cmp
fisttps
mov
push
jge
aaa
lret
pop
fwait
sub
push
jns
mov
xchg
push
das
hlt
pop
push
inc
sti
std
call
daa
push
scas
sbb
sbb
dec
inc
scas
mov
arpl
push
addr16
cmp
adcl
shl
cmp
aas
cmpsb
daa
loop
mov
adc
inc
add
pop
nop
mov
and
cmp
sub
pop
cmp
repz
cmp
mov
mov
dec
sub
in
popf
cmp
cmpsl
aas
outsl
jne
nop
lds
and
bound
repz
cmp
scas
mov
fstpl
popa
pop
jns
push
pop
add
adc
mov
enter
cld
pop
and
outsb
cmp
mov
push
fldcw
xchg
fistpll
jbe
cmp
or
mov
std
cmp
push
cmp
xchg
inc
scas
adc
data16
or
test
cmp
roll
push
lahf
lds
movsb
mov
notb
and
and
dec
int
lret
cmp
push
cmc
pop
xchg
movaps
jge
dec
adc
addr16
mov
cmp
or
mov
adc
sub
xchg
jne
and
mov
dec
daa
cmp
jle
aam
cmp
mov
push
sahf
add
mov
mov
dec
je
out
movsb
cs
push
cmp
sub
sbb
icebp
iret
test
ss
or
xor
jb
sbb
cmp
mov
push
js
pop
aad
mov
adc
aaa
cli
mov
lcall
fistl
stc
scas
out
aaa
mov
cld
adc
test
fmul
fistpl
inc
adc
add
cmp
scas
jne
addr16
cli
jecxz
mov
mov
adc
mov
jne
addr16
int3
shlb
and
enter
sahf
add
fisubl
sub
data16
sub
ja
xorl
xchg
cld
das
mov
fstpl
cmp
sarb
xchg
mov
pop
fildll
out
mov
cmp
sub
jae
lods
data16
jae
jb
or
sub
loop
fcmovnu
adc
aas
call
add
xchg
cli
repz
push
in
cmp
mov
dec
cmp
inc
xlat
data16
push
addb
cmp
rclb
jne
adc
jge
fldl
loop
xchg
inc
mov
dec
adc
inc
in
pop
outsb
inc
in
dec
cld
gs
js
test
cmp
sub
pop
cmp
push
out
cmp
jp
push
ja
out
pop
into
xor
outsl
ret
std
mov
leave
popf
xchg
cmpsl
stos
sbb
and
cmp
test
push
cmc
cmp
out
xchg
loopne
sbb
cmp
fwait
cmp
mov
aad
cmp
and
push
pop
cmp
xchg
mov
lds
lock
cmpb
cmp
fldl
pop
int3
repnz
add
dec
cmp
aas
sbb
mov
out
fldcw
cmp
adc
sti
lret
add
xor
aad
stos
sbb
mov
daa
pop
das
dec
push
cmp
mov
sub
xchg
imul
inc
pop
push
xchg
into
push
stos
or
cmp
xchg
rorl
and
sub
popa
loopne
and
arpl
cmp
and
mov
cmp
cmc
dec
mov
cmp
stos
jecxz
mov
push
dec
add
dec
xchg
pop
xchg
stc
adc
cmpsb
cld
lods
outsl
cmp
mov
mov
add
xor
mov
lds
fldl
dec
mov
addl
leave
out
movsl
dec
insb
cmp
sub
jb
int
leave
dec
stos
lea
shl
mov
jns
inc
out
cmp
loopne
jne
cmp
je
shl
cmp
shr
push
xor
or
mov
xchg
je
cmp
add
scas
adc
cmp
jnp
cmpsb
or
cmp
mov
cmp
cwtl
jg
push
cmp
jecxz
je
cmp
cltd
and
outsl
push
inc
cmp
mov
adc
cmp
mov
xor
cmp
mov
stc
sub
or
or
pusha
pop
neg
cld
xchg
mov
ja
fmuls
sbb
xchg
mov
cmp
sarl
cmp
add
rcrl
cmp
lds
dec
cld
add
mov
jnp
jg
cmpsl
jge
dec
inc
xchg
jmp
mov
cmp
push
jge
cs
dec
lds
sbb
std
sub
cmp
mov
test
cmp
xor
xlat
jge
mov
out
cmp
aad
pop
aaa
in
cld
mov
icebp
mov
mov
std
add
adc
fcoms
sarl
pop
aam
into
mov
inc
mov
adc
cmp
cmp
and
iret
adc
cli
test
das
cmp
cmp
cmp
loopne
xchg
pop
fists
push
cmp
dec
js
dec
cmp
stos
fldenv
lret
fwait
leave
xor
and
test
pop
out
ja
jge
jl
ss
cmp
mov
adc
cmp
xchg
cs
pop
mov
loope
aad
shrl
cmp
shrl
mov
and
stos
iret
into
cmp
les
cvtpi2ps
cmp
ja
sub
in
icebp
cmp
js
xor
mov
jle
pop
mov
dec
sbb
aas
cmp
mov
call
sub
scas
cmp
pop
insl
test
fs
pop
jecxz
rolb
pop
shl
lahf
fbstp
leave
push
mov
fcompl
inc
xor
pop
cmp
and
icebp
cmp
inc
push
cs
ret
mov
xor
in
sub
cmp
push
cmp
call
popf
add
js
xor
and
and
pop
aaa
mov
scas
idiv
pop
lea
xor
inc
das
dec
ss
pop
cmp
mov
sarb
js
and
mov
and
in
cld
outsl
lods
popf
call
rcrb
or
dec
int
scas
sbb
or
sub
cmpsb
out
xor
mov
pop
sbb
xchg
rol
cmp
cmc
fimuls
jp
fldcw
fcomi
sub
pushf
rcrl
and
cmp
pop
push
jl
pop
cmp
loop
int
cmp
adc
mov
cmp
sub
xlat
addr16
and
pop
dec
pop
push
cmp
mov
lock
sub
mov
cmp
daa
xchg
movsb
lea
data16
and
adc
repnz
cmp
push
outsl
pop
and
sub
bound
xchg
sub
std
lret
cmp
shrl
mov
jnp
cmp
movsl
mov
sahf
sti
hlt
iret
push
xchg
cmpsb
xor
push
jge
cmp
xchg
cmp
insl
idivb
jno
cmpsl
mov
inc
in
jnp
mov
pop
add
xor
push
cmpb
fwait
loopne
mov
bound
jnp,pt
stos
data16
xor
scas
cmp
into
cmpsb
and
mov
mov
pop
test
sarl
divb
daa
sbb
aad
test
push
lods
xchg
test
jp
jecxz
hlt
adc
shl
inc
movsl
and
es
cmp
sub
push
cmp
xor
pop
nop
sbb
lods
jl
shlb
dec
and
loope
jl
push
push
jge
into
fsubs
fwait
sbb
mov
push
inc
cmp
sub
and
add
sbb
call
dec
test
arpl
cmp
fmuls
cmpsb
aas
lahf
jl
push
push
jns
mov
adc
fs
repnz
sub
in
lods
cmp
cmp
mov
insl
popa
sub
addr16
add
push
cmp
lods
xchg
clc
aad
das
xor
pop
idivl
adc
xchg
xchg
xchg
xor
test
pop
pop
mov
shrl
lea
in
dec
xchg
pop
sbb
dec
int
inc
loop
mov
sti
lahf
and
daa
pop
repz
stos
dec
iret
add
push
mov
sbb
das
add
jle
mov
jnp
gs
aas
mulb
cwtl
daa
xor
data16
cmp
jle
push
xor
outsl
and
inc
push
mov
shrb
dec
cli
sub
cmp
int
pop
push
cmp
pop
pushf
inc
cmp
xchg
jns
xlat
subl
cmp
sub
fidivs
xor
mov
mov
scas
testb
enter
cmpl
sti
cmp
mov
pop
add
mov
shrl
fidivrs
js
pop
or
xor
aaa
in
movntps
call
inc
cmp
sbbb
jp
add
inc
add
dec
cmp
and
mov
pop
out
subb
dec
jns
arpl
movsl
cmp
or
loopne
shl
xchg
inc
xlat
daa
fcoms
and
and
cmp
xchg
lods
jmp
aas
enter
sbb
jnp
add
cmp
rcl
cmpsb
inc
loopne
adc
cld
mov
in
ds
cmp
sti
xor
xchg
sar
push
outsl
inc
cmp
dec
data16
cmp
mov
and
sarb
bound
cmp
cld
and
push
aaa
test
sub
push
sub
inc
add
push
cmpsb
xor
lds
mov
xor
mov
add
cmpsb
push
pop
cmpsb
mov
jae
mov
ljmp
jle
je
pop
sbb
pop
cs
cmp
mov
cmp
pop
subl
jecxz
rcl
aaa
xor
jno
add
arpl
xlat
sub
pop
repnz
cmp
jae
sub
dec
cmp
push
mov
cmp
ret
cltd
aam
cmp
imul
mov
mulb
jecxz
xchg
adc
mov
cld
dec
std
popa
jmp
mov
cmp
push
cmp
xchg
mov
push
test
mov
cli
add
and
sub
orl
jns
outsb
mov
fsubrl
xchg
cmp
shr
cmc
inc
in
jmp
popf
jnp
inc
bound
xor
dec
movsl
add
psrlq
sbb
stos
stos
or
clc
jae
jnp
jno
cmp
in
inc
leave
popa
mov
gs
out
cmp
scas
add
cmp
or
inc
cmp
orl
adc
dec
int
jbe
xor
aaa
push
ret
mov
push
push
add
loopne
ret
push
daa
sbb
jnp
mov
mov
pop
xlat
mov
movsl
idivb
inc
pushf
mov
jnp
in
xor
ss
mov
aad
outsb
pop
cmp
xchg
test
pop
cmpsb
in
mov
mov
lods
cmp
testl
jecxz
aaa
leave
sub
int3
sbb
iret
inc
in
push
lods
xor
inc
sub
xor
andl
test
pop
mov
cmp
icebp
lret
push
sbb
jo
mov
cmp
dec
fnsave
cmp
rcrl
pop
xor
cmpl
aaa
add
cltd
pop
popa
mov
pop
inc
cmp
movb
cmp
adcl
xor
cmp
jge
imul
arpl
dec
mov
pop
mov
scas
enter
pop
mov
xchg
xchg
icebp
mov
mov
xor
pop
adc
jle
in
and
out
mov
js
sub
xchg
fmull
out
mov
adc
subl
ljmp
lock
mov
sub
pop
pop
adc
push
scas
and
ret
dec
stos
lods
imulb
xor
stos
fdivs
repnz
jno
sub
daa
cmp
xchg
test
push
inc
divl
add
push
icebp
lea
cmpsl
cld
mov
inc
ret
mov
idiv
inc
mov
out
xor
cmp
cltd
push
xor
fmull
fwait
xchg
sbb
jns
adc
cld
std
hlt
xchg
fadds
mov
subl
inc
stc
pop
sahf
sbb
cmp
aam
xor
mov
pop
icebp
mov
cltd
xchg
jmp
ss
fisubl
or
xorb
mov
sbb
add
test
out
cmp
cmp
ret
fcmovnbe
stos
xchg
adc
cmp
jg
in
xchg
and
cmpsl
inc
mov
ljmp
mov
iret
and
jb
imul
mov
dec
jbe
fildll
mov
cmp
sub
sti
xchg
repnz
mov
ds
pushf
addr16
mov
sub
sbb
call
not
xor
ja
les
and
push
nop
pop
mov
jo
jbe
xor
aaa
sbb
inc
fidivrl
rorb
pop
aad
popf
jae
out
leave
std
lcall
pop
das
dec
loop
mov
arpl
gs
icebp
popf
mov
and
and
xor
xor
lods
scas
aam
sbb
fwait
roll
and
int3
movsb
pop
inc
stos
mov
rolb
push
inc
stc
movsl
repnz
stc
xor
insl
popa
and
aaa
repnz
and
adc
dec
pop
sbb
std
xchg
sub
cmp
out
sahf
in
je
adc
mov
xor
mov
enter
jge
sbb
adc
das
lock
sub
adc
inc
dec
aas
add
cld
mov
test
arpl
pop
sbb
sub
out
lock
push
inc
cld
fsubl
filds
out
xor
inc
int
mov
repz
int3
fmull
xchg
mov
in
push
out
sbb
lcall
and
jns
adc
scas
test
mov
inc
cs
loop
pop
jno
sbb
div
repnz
mov
aaa
mov
xor
mov
pop
jmp
cwtl
hlt
or
sti
sbb
daa
push
jmp
xor
pop
cmp
pop
sub
cmpl
fs
jp
or
cmp
mov
lcall
or
sub
cmc
sbb
xor
lret
xlat
or
sti
xchg
sbb
pmaddwd
xor
mov
fwait
cmpsl
xor
sbb
std
adc
rdmsr
push
pop
pop
adc
adc
lcall
sub
or
and
adc
xor
xor
in
arpl
sub
mov
mov
mov
xor
enter
div
adc
subb
inc
stos
sub
and
popf
lret
mov
cld
push
rorl
lea
cmp
sub
mov
loope
sub
push
in
or
testb
sahf
inc
pop
movsl
pushf
sbbb
inc
jae
or
neg
inc
mov
loopne
sub
mov
adc
das
sub
sub
xor
sbb
push
das
add
popf
mov
stos
sub
pop
inc
xor
pusha
xor
sbb
ja
out
xor
scas
xor
sbb
std
mov
leave
dec
cmpsb
ds
scas
iret
push
mov
pop
dec
call
mov
sbb
pop
and
aas
aam
sub
sbb
in
mov
ljmp
and
in
mov
sub
xor
aaa
fsubrs
add
dec
mov
inc
clc
enter
pop
sbb
jb
mov
xor
out
mov
and
adc
cmp
loop
mov
ljmp
xor
ret
xor
mov
ret
div
inc
fsubs
mov
push
mov
xor
jae
testb
ja
jecxz
jno
outsl
inc
lcall
jle
xlat
dec
test
cli
pop
pop
pop
call
adc
mov
ja
xchg
dec
aaa
jb
ljmp
es
sub
cli
daa
hlt
in
rolb
xchg
jle
inc
pop
call
call
mov
in
mov
mov
pop
mov
mov
in
dec
fwait
sbb
ja
adc
xlat
cmp
add
ret
adc
mov
or
inc
ficoml
sbb
clc
or
cld
xor
xorb
dec
lret
inc
lods
mov
mov
fidivrl
cwtl
add
or
jbe
mov
cltd
out
mov
rcrl
ret
repz
jmp
fucomi
shll
popf
sbbl
cld
adcl
stos
mov
std
test
lea
lcall
mov
in
mov
cmp
mov
xchg
pop
cmp
sub
out
sarb
shr
imul
xchg
xchg
rcr
mov
mov
dec
call
stos
insl
cmc
das
cmpsl
mov
repz
adc
sahf
or
popa
push
xchg
dec
mov
xchg
jmp
add
cmp
xchg
jle
xchg
sbb
cmc
hlt
cmp
iret
add
and
xlat
mov
add
je
sbb
ljmp
cmp
add
and
sar
add
lahf
jg
test
cmpsl
cmpsb
lods
shrl
lds
in
mov
cld
xlat
fldcw
adc
pop
js
add
int
xor
cmp
sbb
or
shll
mov
fcom
test
in
sub
bound
mov
add
dec
repnz
in
sbb
mov
pop
in
test
fbstp
neg
cmpsl
adc
and
sbb
xchg
loop
lret
adc
sub
repnz
cmp
dec
jnp
jnp
xchg
ljmp
pop
sbb
sbb
in
add
cmp
les
mov
scas
pop
sbb
repz
loopne
aas
shl
inc
ficomps
push
mov
cltd
std
inc
mov
sub
dec
xchg
push
cmpl
mov
xchg
int
loope
mov
mov
pop
jo
icebp
add
pop
adc
iret
pop
mov
sub
pusha
cmp
xchg
cmp
ficoms
cmp
fs
aad
cmp
ffree
cltd
xor
mov
scas
jae
pop
mov
rcll
mov
pop
idivl
push
ret
les
lock
sarb
frstor
addr16
cmp
push
jmp
mov
mov
arpl
pop
adc
in
lods
cmp
es
popl
sti
les
leave
push
dec
cmp
adc
and
and
loope
mov
popa
cmp
shl
push
inc
cmp
cli
jno
daa
cmp
or
add
das
or
mov
ja
les
pop
nop
pop
dec
mov
cmp
dec
scas
fucom
add
outsl
mov
std
jp
sub
test
scas
aaa
or
xor
movsb
aas
fstpl
inc
out
push
mov
dec
and
xor
cmp
iret
es
cmp
adc
mov
sbb
cmp
mov
in
and
push
loop
sub
bound
lret
and
sub
pop
in
add
push
sbb
jbe
inc
cmp
negl
dec
cmp
stos
inc
or
xor
nop
mov
cmp
arpl
negl
imul
aam
dec
nop
int3
cmp
sbb
repz
sbb
fwait
pop
call
mov
repnz
and
test
cld
and
xchg
and
xchg
mov
push
add
mov
mov
mov
jp
movsb
sub
xchg
mov
mov
cwtl
std
addr16
push
xchg
mov
cmp
inc
sub
sub
mov
imul
mov
sub
xchg
push
ret
mov
adc
push
in
xchg
int3
mov
mov
js
xor
mov
and
cmpsl
mov
in
mov
lods
sbb
jg
cmpsb
jne
loop
scas
int3
dec
sub
iret
mov
adc
cmpsl
jnp
mov
push
out
daa
sub
cmp
lret
adc
mov
and
mov
mov
pop
out
hlt
out
and
lcall
cli
or
and
inc
loope
cltd
lods
lahf
dec
pushf
xlat
cli
lock
je
mov
clc
cmp
add
mov
jbe
lahf
je
les
sub
push
stos
lock
dec
sub
mov
ffreep
sahf
pop
int3
pop
pop
les
lret
divb
imul
test
and
adc
stos
clc
sbb
dec
and
push
pop
jb
je
mov
clc
push
scas
dec
sbb
pop
cltd
cmc
sub
lret
jmp
mov
inc
xor
aas
fst
std
sbb
mov
pop
cmp
push
xchg
dec
lods
repz
negl
mov
repnz
js
ja
xor
movsl
test
pop
xor
ret
sub
mov
mov
cmp
inc
cmpsl
inc
cli
test
aaa
pop
pop
enter
add
mov
or
data16
inc
pop
inc
push
cmp
pop
inc
test
push
and
fcoms
in
adc
in
push
out
gs
aam
xor
stos
jmp
out
adc
imul
iret
push
jo
int3
and
cwtl
cmp
outsb
sub
adc
lret
jecxz
mov
dec
fsubrs
mov
in
adc
gs
cmp
cmp
xchg
dec
mov
and
jge
hlt
or
mov
push
lret
fsubl
cmpsl
push
xor
mov
dec
sbb
cmp
xchg
shlb
bound
push
ja
xchg
cmpsb
insb
xchg
sbb
pop
movsl
fidivl
cs
add
push
mov
addr16
iret
pop
sarb
jge
pop
cmp
popf
pop
cmp
out
fistpl
out
add
out
mov
cwtl
test
aam
mov
inc
cltd
dec
pop
mov
out
leave
fwait
shlb
and
inc
jnp
loop
mov
lret
cmp
movsl
sub
lods
arpl
jle
push
jmp
mov
fbld
add
rolb
test
and
arpl
aas
dec
inc
and
nop
cmp
adc
sbb
lea
cmp
fistpl
clc
cmp
fucom
inc
or
jae
fdivs
pop
sub
pop
lea
sub
rcl
in
popf
out
fisttpl
aaa
lret
stos
jbe
stos
push
pop
lahf
xor
sbb
aam
push
rol
add
push
cmp
loope
cmp
shr
movsl
cmp
adc
adcl
pop
fwait
or
jae
cmp
repz
mov
mov
cmp
jbe
dec
mov
data16
xchg
flds
jb
dec
inc
in
sbb
jne
int
xor
jp
cwtl
ss
cmp
pop
fsubs
cmp
out
mov
inc
rolb
imul
mov
dec
loope
loop
xor
pop
pop
ret
leave
add
mov
add
int3
jp
mov
cmp
pop
je
sarb
push
cmp
jae
inc
in
pop
stos
inc
and
scas
hlt
ds
dec
pop
jb
push
and
mov
jl
jg,pn
hlt
cmp
push
cwtl
push
movsb
add
pop
loopne
cmpsb
test
xor
popa
pop
inc
int
jo
fidivrl
fincstp
cli
sbb
mov
cmp
jecxz
cld
xchg
inc
dec
sub
jl
pusha
and
xor
dec
out
imul
jle
push
movsl
lock
pop
les
xchg
stos
sub
stc
cmp
jbe
fsubr
xchg
ret
cmp
pop
mov
add
xchg
js
stos
jnp
loopne
cmp
sarl
jne
mov
mov
das
xchg
loope
pushf
sbb
aaa
test
shl
jmp
xor
cmp
test
int3
popf
cmp
jb
dec
mov
jns
push
loope
cmpsb
or
mov
pop
fdivrs
ss
sbb
das
incb
mov
imul
insl
or
pop
ja
xchg
or
lahf
cmp
stos
fucom
in
es
sub
test
js
jp
pop
cmp
lahf
and
cmp
jo
aaa
addr16
inc
nop
in
aas
enter
out
sbb
repz
cmp
int3
mov
insl
inc
cmp
mov
push
cmp
inc
data16
dec
ret
cmp
stc
adc
loope
sti
and
in
inc
jl
nop
fistpll
pop
insb
dec
ret
in
fnsave
es
xor
movsb
dec
mov
fidivl
xor
xor
xor
sub
cmp
negb
xorl
sub
or
fwait
loope
jo
movl
push
loop
dec
cmp
xchg
clc
push
dec
inc
adc
das
dec
pushf
lods
hlt
sti
jne
pop
testb
mov
ja
cmp
jmp
fcoml
pusha
push
mov
popf
cmp
cwtl
movsl
add
jl
rcrb
nop
cmp
outsl
cmp
hlt
ljmp
cmp
shll
push
or
jmp
jae
ret
cmp
int
xchg
dec
pop
pop
mov
cmp
pop
test
mov
pop
lods
push
loopne
cmp
mov
rcrl
and
mov
add
fwait
xchg
jb
fcmovne
cmp
lds
mov
xchg
cmp
xchg
mov
sti
push
loopne
rcrb
test
iret
pop
cmp
xchg
les
dec
cmp
or
and
repnz
imul
cmp
mov
xor
cmp
mov
xchg
jns
ja
cmp
or
jne
ret
fs
fistpll
jp
je
inc
push
test
call
jl
dec
sbb
pop
xor
fnstsw
xor
into
mov
dec
addr16
cmp
stc
out
je,pt
sbbl
mov
cmp
nop
lret
add
cmp
test
adc
outsb
jecxz
and
and
pop
push
mov
fstps
leave
icebp
cmpb
scas
int3
inc
fistpll
sub
cmp
jecxz
rcll
push
push
cmp
sub
cltd
cmp
mov
scas
push
mov
pop
inc
pushf
inc
jecxz
fidivrs
pop
xchg
popa
lods
xor
rcrl
sub
jnp
test
mov
shlb
sub
iret
lcall
ljmp
inc
cmpl
les
fld
ret
aad
fildl
popa
dec
cmp
jbe
cmp
les
jle
loop
repnz
insb
lea
mov
mov
stos
mov
lods
jecxz
mov
repnz
dec
pop
mov
mov
sbb
ja
mov
ret
inc
std
cmp
add
mov
stos
sub
les
movsl
dec
xchg
cmp
pop
mov
cmp
cmp
icebp
push
pop
cmp
or
jnp
sbb
cmp
test
push
mov
cmp
adc
xchg
test
xchg
loopne
outsl
push
jnp
in
mov
xor
cmp
testl
or
das
sub
test
sub
je
hlt
sub
inc
fwait
inc
aaa
bound
mov
std
repz
xchg
or
mov
cli
mov
mov
mov
cmp
js
dec
cmp
xor
xchg
push
mov
mov
pop
pop
inc
lods
cmp
adc
out
jle
lock
dec
pop
arpl
push
jg
push
stos
jno
add
cmp
cld
sbb
xchg
cmp
out
jb
pop
sti
push
aas
repnz
cmp
lret
dec
into
mov
dec
loopne
jecxz
xchg
push
cmp
jno
mov
cmp
jg
xorb
cld
push
cmp
rol
gs
hlt
test
xchg
in
insl
dec
cmp
lea
aam
or
ja
test
ss
adc
cmp
xchg
mov
pop
mov
cmp
fsubrs
mov
cmp
sbb
mov
out
fldenv
mov
jne
lret
loop,pt
xlat
cmp
and
cmc
jp
sbb
inc
push
cmp
ss
add
lret
cmp
pop
pop
es
pop
ljmp
or
cmp
cmp
xchg
out
jb
inc
or
xchg
and
std
xor
test
cmp
jecxz
push
or
pop
jle
pop
pop
adc
xchg
stc
int
aam
rcrb
aaa
cmp
movsl
push
cmp
lcall
jns
mov
sub
stc
enter
roll
adc
fcomps
pushf
sub
sub
mov
mov
jge
inc
adc
adc
imul
shrb
sub
sub
jne
cltd
out
cmp
stos
ret
iret
push
es
fdivrs
inc
cli
mov
mov
in
sbb
xor
pop
inc
enter
mov
mov
mov
cmp
mov
mov
dec
sub
pop
mov
cmp
das
aad
jbe
mov
ds
scas
mov
ds
rcr
sbb
in
int
cmp
push
push
adc
cmp
test
popa
adc
add
and
xor
inc
mov
and
stos
aaa
lcall
rcr
xchg
out
stos
fadds
mov
in
out
and
and
jmp
hlt
fstp
imul
adc
daa
fldl
sub
test
push
stos
cmc
lcall
idiv
sub
mov
std
rcll
cmpsb
aad
adc
lock
stos
mov
ljmp
dec
xor
test
pop
shl
shr
mov
mov
mov
xor
pop
sub
lea
sbb
fistpl
ret
aas
repnz
int3
and
pop
pop
jnp
xchg
outsl
popf
xorb
adc
cwtl
in
sub
mov
mov
or
adc
mov
mov
pop
lock
mull
mul
ja
mull
ljmp
in
cmp
mov
and
repz
mov
jmp
and
out
notl
fs
sbb
ljmp
je
stos
sub
lea
lods
out
cmp
dec
repnz
mov
sbb
out
and
sarl
dec
and
pop
fsubrs
push
f2xm1
daa
dec
daa
lock
cmp
sub
insl
xor
xchg
fs
movsl
loop
cmp
aas
sbb
lahf
enter
sbb
xlat
ljmp
fcoml
pop
xlat
imul
clc
jb
ljmp
or
and
imul
daa
repz
or
daa
test
inc
mov
dec
jle
or
and
les
loope
add
push
aam
inc
ss
dec
xor
in
daa
xor
mov
inc
and
idivb
sub
push
std
xor
cmp
movsb
lds
aam
enter
pop
adc
js
sub
fnstcw
xchg
and
lea
dec
push
dec
adc
cltd
mov
push
or
ret
cmp
xchg
fst
adc
int
xchg
loopne
or
cmp
sbb
scas
bound
cmp
mov
cmp
cmp
add
cmp
cs
jl
dec
dec
cmp
es
rol
insl
xor
iret
xor
rcll
pop
add
push
jbe
adc
inc
cmp
sbb
mov
mov
sub
mov
inc
pop
cmp
mull
and
or
jl
pop
cli
std
sarb
test
push
pop
ljmp
adc
pop
pusha
push
shrl
sahf
jne
and
jnp
lods
pop
xor
les
data16
shrb
xchg
fcoml
cmp
cli
int3
sub
out
push
loope
outsl
or
call
jo
mov
pop
dec
je
pop
fsubrp
ss
and
adc
push
mov
push
ss
add
cmp
rcr
aam
cmp
mov
mov
ds
mov
lock
xchg
ss
cmpsb
imul
lea
or
push
hlt
adc
cmp
jp
sbb
outsl
insb
or
out
xchg
daa
cmp
loopne
push
fidivrs
xchg
aas
sub
and
rsm
add
lret
and
inc
shll
and
inc
mov
repz
add
cmp
cli
dec
xchg
inc
cmp
bsr
loopne
add
data16
sbb
inc
dec
out
cmp
pop
jp
stos
cmp
mov
mov
fimuls
icebp
sub
inc
leave
mov
push
rolb
sti
jg
les
divl
enter
mov
cmp
fcmovnbe
mov
xor
mov
neg
outsl
add
push
ds
ja
pop
jnp
cs
pop
mov
mov
inc
mov
addr16
test
ret
sub
or
fs
dec
scas
incb
aaa
scas
sbb
mov
cmc
cmp
fldl
shll
test
bound
cmp
pop
inc
stc
in
mov
lods
or
arpl
push
cmp
mov
loop
insb
pushf
xchg
push
in
das
xchg
mov
xchg
arpl
push
ljmp
ss
jecxz
cmp
sti
loope
sbb
jp
cmp
add
btr
and
repz
mov
shl
lods
fnstcw
push
sub
cmp
xor
imul
pop
in
jl
jne
sarl
mov
push
into
mov
or
add
mov
cltd
mov
pop
mov
cmp
mov
xor
iret
mov
cmp
dec
push
std
pop
cmp
inc
rorb
add
sbb
xor
sahf
mov
enter
lods
jmp
add
and
pop
sbb
xchg
cmp
ret
dec
dec
push
cmp
pop
in
pushf
or
cmp
andb
cltd
popa
loop
xchg
xchg
mov
xchg
adc
leave
cmp
inc
insl
push
stc
test
outsl
xlat
add
pop
cmp
mov
cmp
inc
js
sub
add
aam
pop
movsl
dec
aaa
sub
in
mov
push
popf
xor
aad
outsl
rcrl
xor
jge
push
cmp
dec
mov
jae
ds
rorl
inc
sub
movsl
mov
mov
jl
mull
subps
sarl
push
into
sub
data16
cmp
fs
inc
enter
and
push
into
mov
in
push
dec
das
lcall
sbb
nop
add
jg
adc
fwait
or
ja
popa
adc
cmp
fisttps
test
fstpt
jne
sub
ret
xor
mov
arpl
or
enter
test
pop
mov
ret
cmp
cld
test
cmp
mov
hlt
push
addr16
xchg
test
mov
sbb
cmpsb
negl
outsl
pop
lret
cmp
loopne
ljmp
mov
outsl
aaa
mov
jp
ret
pop
jg
pop
cmp
pop
int
cmp
cmpl
cmp
push
sbb
nop
cmp
mov
xor
cld
inc
add
stc
in
sbb
sar
xor
mov
inc
mov
fidivs
sbb
imul
aam
push
out
test
jno
aaa
loop
cmpsb
push
push
movsl
sti
dec
add
cmp
stos
adc
out
pop
mov
pop
xor
xchg
repz
cmp
loope
cs
das
popa
or
iret
or
push
scas
jl
or
ljmp
je
fsubrs
cmp
fnstenv
inc
jbe
lea
mov
cmp
push
push
inc
or
mov
dec
adc
inc
xor
rolb
jbe
pop
test
pop
mov
fidivrl
stos
js
into
inc
add
mov
sub
or
fsubrs
sbb
xlat
imul
mov
jmp
movsb
mov
sub
je
and
aad
mov
push
and
adc
idivl
fstps
movsl
xlat
xchg
scas
in
cmpsl
lods
pop
cmp
fwait
inc
or
mov
sub
daa
pop
mov
mov
sub
cmp
inc
or
mov
outsl
shll
dec
enter
xor
cmp
or
sbb
xchg
add
mov
sub
mov
mov
mov
mov
sbb
mov
xor
mov
jo
mov
xor
hlt
pop
pop
push
pop
sahf
cld
dec
or
dec
sub
clc
sub
int
popf
jae
xchg
cs
mov
fcomps
push
les
and
negl
faddl
inc
sti
idivb
sub
test
mov
fcom
adc
loop
dec
rorl
mov
xchg
fcom
fdecstp
in
inc
xor
fnstsw
push
sbb
inc
div
lret
sub
ljmp
xor
mulb
sub
xor
and
inc
pop
fcmovnb
hlt
lods
mov
xchg
cmp
pop
and
fbstp
fmulp
dec
mov
mov
hlt
mov
sbb
ficomps
ja
adc
push
push
inc
mov
and
lret
inc
ret
xchg
das
cmpsl
lret
ficoms
mov
icebp
fiadds
sub
lret
pop
fsubrs
jl
aaa
xor
ficomps
into
shrb
mov
into
jl
cmpb
mov
fs
lret
mov
or
add
mov
sub
cmp
sub
fidivs
aam
cmp
add
aam
orb
pop
pop
cmpsb
fnstsw
popa
cmp
sub
cmc
ja
rolb
stos
and
sub
loop
adc
or
mov
int
cs
cmp
jnp
dec
cmp
xor
mov
call
rolb
jmp
xlat
adc
pop
inc
cmp
lretw
lret
inc
stos
push
sbb
adc
pop
sbb
add
mov
roll
fdivs
fadds
aad
call
int3
inc
mov
push
pop
in
xchg
adc
inc
pop
cs
ljmp
fnstsw
idiv
pop
fwait
xor
xor
and
popa
mov
repnz
sbb
or
sbb
cmpsl
xor
xchg
test
pop
or
adc
push
xchg
fisttps
je
cli
arpl
jl
cltd
int
xchg
out
mov
jg
mov
mov
and
loop
loopne
cmp
or
test
pop
pop
in
enter
arpl
stos
sbb
or
mov
push
cmpsb
pop
jo,pt
testb
pop
fwait
lret
repnz
mov
sbb
prefetch
cmc
in
lahf
sub
cmpsl
sbb
out
outsl
sbb
je
push
mov
jg
sub
jae
imul
pop
in
andb
or
sbb
int
mov
in
inc
and
xchg
ficoms
cs
movlps
lcall
inc
out
mov
bound
pop
pushl
js
adc
or
cs
sbb
add
pop
mov
push
mov
and
nop
and
or
test
iret
stos
les
clc
dec
adc
push
int3
xor
mov
sbb
mull
push
icebp
jecxz
int
add
sbb
mov
bound
jle
iret
cmp
add
mov
clc
or
test
fadds
inc
dec
aas
sbb
inc
sub
jmp
push
stos
rep
pop
pop
push
sbb
adc
inc
xor
mov
lods
dec
shll
call
dec
sbb
dec
pop
out
pop
int
xchg
pop
mov
dec
pop
adc
pop
inc
xor
mov
adc
bound
add
nop
push
div
or
ja
mov
sbb
insl
dec
add
sub
divps
das
xor
push
ret
fcoms
jecxz
xor
lods
ljmp
or
jae
ret
xor
xor
xchg
gs
mov
adc
and
je
out
rcrb
inc
cmp
mov
xchg
rcrb
mov
fcoml
mov
in
fcompl
push
cld
jp
pop
inc
std
cltd
mov
ljmp
add
ja
jns
sbb
and
das
bound
test
pop
popf
rolb
pop
sub
sbb
pop
div
pop
sub
add
xor
popf
cmp
cmp
xchg
and
add
pop
movsl
out
xchg
in
aas
adc
ja
xor
sbb
sub
sub
jle
jne
cmp
inc
sub
hlt
test
mov
repnz
mov
mov
aas
inc
jb
jne
es
inc
pop
xchg
adc
data16
gs
fbstp
dec
pusha
dec
ret
add
push
mov
lret
nop
out
lret
das
lahf
pop
imul
ja
cmp
repz
insb
mov
pop
and
sbb
sub
adc
rclb
in
cmp
fisubrl
mov
sub
dec
sbb
ljmp
cmp
and
in
sbb
mov
pop
into
jmp
push
int3
pop
inc
xor
add
adc
bound
sub
pop
sahf
bound
and
popf
pushf
stos
cwtl
dec
sbb
in
and
mov
lods
call
mov
adc
pop
inc
sti
call
mov
stos
and
fdivs
jge
sub
int3
imulb
pop
xor
and
mov
aas
sbb
mov
cli
stos
sub
std
jns
jl
je
ljmp
sbb
cmpsb
push
mov
enter
loop
std
scas
fnstenv
xor
scas
cltd
push
mov
int
scas
xchg
sub
xor
ret
dec
jmp
and
mov
in
sub
xor
mov
xchg
xlat
cli
sub
lcall
ja
xchg
incb
mov
xchg
and
les
xchg
xor
mov
sbb
xor
adc
sub
xor
in
int
and
stos
movsb
inc
inc
pop
pop
mov
sub
jle
out
sbb
jno
fldcw
and
push
leave
nop
cli
mov
sub
test
iret
and
pop
push
mov
sbb
jl
lds
mov
jnp
jns
inc
leave
inc
out
inc
pop
xorl
aad
jbe
pop
xor
nop
insb
sbb
test
arpl
mov
mov
pusha
dec
mov
mov
addr16
ljmp
adc
jmp
add
add
sbb
insl
insb
push
xchg
lret
xor
adc
mov
mov
sbb
mov
sub
push
xchg
ret
and
adc
mov
divl
sbb
insb
and
das
mov
pusha
push
adc
outsb
mov
or
jo
pop
push
sarl
pop
jb
mov
add
mov
cli
je
add
jle
int3
lock
mov
add
daa
cli
add
int3
cs
scas
mov
add
fdivrs
cli
xlat
cli
pop
mov
mov
sbb
fsts
clc
cli
fs
mov
fdivrp
neg
nop
insb
sbb
push
push
mov
stos
test
daa
stos
repnz
mov
cmp
std
loope
fadd
negl
sarl
fimuls
mov
fisttps
pop
adc
pop
adc
sti
in
test
das
jge
sub
dec
pop
sub
test
sbb
inc
sub
adc
sub
rolb
bound
loopne
movsl
push
mov
js
das
or
mov
mov
sub
sbbl
nop
out
test
cmpsl
iret
xchg
push
in
push
scas
ljmp
loopne
lret
daa
cmp
ljmp
push
repnz
int3
inc
ja
dec
xchg
inc
push
jmp
imul
hlt
cli
test
stc
call
out
mov
pushf
cmp
mull
cld
call
aas
sbb
or
inc
fisubrs
sbb
cmp
fcmovnbe
bnd
inc
jp
sbb
in
push
xchg
add
fsts
push
ret
sbb
addr16
sbb
imull
repz
in
leave
loop
pop
adc
push
mov
or
mov
dec
bound
or
xor
test
adc
pop
mov
jge
lods
scas
and
inc
out
int3
adc
jecxz
dec
ds
movsl
adc
mov
pop
cmpsl
les
call
mov
cmpsl
icebp
and
xor
xadd
jnp
sbb
movsl
adc
fst
jnp
testb
out
or
add
inc
mov
neg
sbb
xor
push
pop
sbb
ja
inc
cld
ret
add
addr16
cmc
push
cmpl
nop
shrl
jmp
daa
cli
mov
and
push
adc
jecxz
stos
lret
les
jecxz
mov
ja
add
xor
sub
into
add
and
mov
test
sub
xor
mov
stos
sub
inc
in
sbb
sti
out
out
mov
sub
xor
test
sub
icebp
jle
scas
sbb
hlt
faddp
pop
lret
stc
daa
cmp
adc
jg
mov
fcomps
pop
fcmovnb
pop
lret
mov
faddl
popa
mov
fdivs
adc
xchg
inc
cld
mov
adc
je
xchg
insb
imul
adc
test
cltd
sbb
adc
mov
lret
dec
sti
xor
daa
cmp
bound
jo
adc
sub
cmp
mov
sub
subl
stos
pusha
jo
mov
pop
mov
mov
or
das
cmp
repz
mov
or
adc
loopne
or
mov
rorb
sub
je
cmp
or
mov
sub
inc
adc
scas
aaa
jl
pushf
mov
xor
sbbb
aam
stos
lcall
and
add
or
xchg
and
ficoms
sub
and
or
adc
test
aaa
xchg
xchg
out
out
adc
aad
and
repnz
dec
test
fnstsw
add
pop
test
jae
and
and
in
test
in
aaa
inc
mov
sub
mov
movsb
in
divl
jb
or
jp
fimuls
stos
leave
iret
sti
stos
xor
jmp
pop
mov
lds
or
mov
or
push
push
inc
mov
jmp
inc
pop
adc
mov
jg
pop
or
adc
add
aaa
decl
mov
out
lods
xchg
mulb
and
aaa
dec
jecxz
xchg
and
xchg
setb
xchg
mul
ss
cmp
sub
push
xchg
popf
xchg
push
adc
scas
stos
jle
mov
notb
sbbb
rclb
inc
in
out
call
mul
mov
faddl
repnz
daa
push
push
nop
lods
aaa
decl
sbb
loopne
xchg
or
ret
repnz
dec
mov
sbb
ljmp
mov
lsl
or
sbb
icebp
aaa
jle
ljmp
testb
mov
mov
and
loope
sub
sbb
mov
das
sbb
cli
jp
push
cmp
jb
push
mov
fs
cmp
enter
sub
xchg
mov
cmpsb
cmpsb
lcall
xor
sbb
loopne
or
push
call
gs
cmp
sbb
and
outsb
sbb
je
loop
cs
stos
sbb
pop
inc
push
jo
sbb
ja
add
enter
and
dec
mov
mov
cli
xor
fwait
enter
aaa
sub
inc
jno
loop
mov
cs
mov
jbe
mov
add
mov
jns
fdivl
cmp
and
mov
mov
test
dec
in
pop
cmp
mov
xchg
sub
xor
pop
xor
jns
enter
test
dec
ljmp
xchg
out
lock
gs
cmp
cmp
adc
data16
push
sbb
sbb
xor
xor
fwait
cmp
inc
sbb
jno
push
cwtl
sub
les
pop
insb
xor
dec
cmpsb
push
mov
movsb
xor
cwtl
les
lcall
jle
clc
insb
xor
les
scas
pop
cld
int3
xchg
in
pop
movsb
mov
mov
lret
scas
jg
and
dec
sbb
cmpsl
into
push
int3
scas
or
popf
xchg
add
sbb
cltd
jno
test
shrl
lods
int3
sub
clc
cmp
rorl
repz
inc
mov
cmpsb
xorb
shrb
lahf
sbb
stc
ret
mov
mov
mov
gs
lret
dec
mov
xlat
stos
dec
pusha
stos
dec
lahf
sbb
pop
cmpsb
es
jbe
mov
lock
cmpsb
mov
mov
repz
lea
mov
xchg
mov
cmp
out
into
mov
or
jns
out
divl
icebp
mov
jns
mov
mov
icebp
into
lock
daa
cmp
add
outsb
push
fucomip
out
stos
sub
aas
dec
mov
cmp
jl
addr16
sub
jmp
add
adc
das
fs
sahf
js
push
jbe
loopnew
in
inc
out
js
sub
xor
lods
js
ds
out
pushf
cwtl
clc
les
stos
or
pop
push
std
inc
pusha
mov
das
xor
jge
pop
pop
or
cmp
int3
dec
sbb
and
jb
push
pusha
mov
loope
rolb
divb
add
xchg
hlt
mulb
jp
sbb
pop
sub
xor
negb
lret
js
in
xor
sahf
pusha
cs
adc
hlt
push
cmp
lods
ret
in
xchg
sbb
pusha
jo
daa
cs
add
out
sub
aas
sub
mov
xor
sti
fisttpll
mov
sbb
fs
cmp
cmp
in
sub
cvtpi2ps
push
pop
xchg
or
daa
cmc
jecxz
sbb
sarb
add
push
adc
clc
and
or
jnp
push
sbbb
ficoms
movb
ret
out
mov
cmp
xor
jns
js
sub
jge
in
or
movsl
push
sub
dec
outsl
pop
test
cmpsb
mov
cmp
aad
pop
cmp
pop
mov
sbb
and
loop
nop
cmp
stos
push
mov
cmp
inc
icebp
shr
cmp
xchg
xchg
std
xor
repz
in
mov
jecxz
jne
imul
bound
cmp
inc
mov
cmp
cmp
cmp
mov
sarl
mov
mov
add
dec
lock
mov
cmp
outsl
xchg
ret
movsl
push
inc
inc
cmp
mov
popf
and
adc
fs
push
std
fwait
and
jge
sub
clc
pop
outsl
icebp
jns
cmp
cmc
push
xor
mov
dec
fldcw
test
cmp
jecxz
xchg
test
jle
sbb
cmp
cs
adc
in
lret
xchg
les
mov
ret
pop
cmp
adc
leave
pop
call
jbe
cmpsl
adc
clc
in
rcrb
cld
cmpsb
frstor
cmp
xchg
jl
jmp
or
aaa
adc
dec
ds
cmp
mov
into
inc
add
movsl
mov
jns
shll
cmp
adc
in
inc
decb
in
xor
ja
pushf
mov
mov
and
adc
xor
push
cmp
jno
xchg
das
rcrb
adc
cld
pop
and
sbb
loop
add
pushf
fcom
cmp
shll
cld
xchg
and
cmpsb
inc
mov
and
insl
movsb
cmp
std
stc
ss
sub
jo
add
cli
inc
aaa
mov
xchg
xchg
adc
das
int
test
cmp
pop
rolb
jo
fcoml
mov
loope
std
sub
mov
cmp
push
xchg
push
cmp
adc
jo
sub
xlat
push
cmp
mov
in
mov
jnp
xchg
inc
and
push
sub
insl
dec
int
xchg
push
adc
sbb
mov
adc
pop
cli
add
dec
dec
pop
push
or
sbb
enter
scas
add
std
das
bound
jno
dec
pop
jbe
jg
cmp
call
xchg
xor
mov
cmp
das
adc
inc
or
jnp
cmp
push
ss
sbb
inc
pop
mov
cmpsl
sub
cmp
xor
test
ja
or
cmp
and
stc
or
push
aaa
push
daa
inc
mov
dec
das
jle
incb
andl
ljmp
arpl
pop
jns
adc
xlat
fnstsw
repz
fistpll
lcall
sti
cmp
cmp
out
hlt
leave
pop
dec
aas
cmp
inc
pop
pop
gs
sub
rcrb
aad
cmp
cmp
sarl
sarb
mov
popf
cmp
sbb
iret
jb
arpl
xchg
mov
stos
dec
loop
or
mov
cmp
leave
outsl
rorb
inc
add
es
loop
stos
arpl
pop
cmp
mov
ds
rcll
jae
mov
test
dec
cmp
xlat
fsubrs
stc
cmp
sub
jne
pop
xchg
fistl
pop
and
push
and
mov
lret
mov
cmp
les
cmp
out
cmp
jo
movsb
push
popf
and
xchg
pop
aaa
inc
mov
mov
mov
and
dec
sub
cmp
test
mov
cmp
es
lock
mov
popa
dec
cmp
dec
xchg
rcrb
lods
jg
sbb
sub
xor
or
push
gs
ljmp
inc
jge
sbb
push
cmp
push
loopne
sar
inc
jle
cmp
lcall
mov
cmp
add
push
hlt
sub
mov
dec
sub
mull
push
inc
iret
cmp
loopne
outsb
out
ficomps
ds
jmp
cmp
and
scas
dec
enter
push
test
xchg
dec
and
xor
pop
std
push
cmpl
sarl
adc
cwtl
cmp
out
inc
mov
mov
ss
jns
shlb
icebp
sahf
ja
les
sti
sub
mov
push
addl
push
cmp
xor
hlt
cmp
ret
fistpl
scas
cmp
daa
jg
sarb
movups
ss
pushf
pop
iret
std
ja
loopne
arpl
cmp
in
mov
cld
inc
cwtl
cmp
movsl
in
mov
gs
sarb
pop
iret
inc
cmp
push
scas
xchg
fstpl
push
mov
mov
int
stos
or
adcl
scas
test
gs
pop
push
cmc
lahf
jns
bts
insl
pop
outsb
jnp
ds
or
je
imul
pop
out
lret
test
aas
push
jmp
imul
ret
cmp
popf
outsl
mov
iret
ret
cmp
pop
and
cmp
pop
fnsave
or
xlat
add
loop
xchg
push
pop
aaa
jmp
stos
cmp
xor
cmp
into
lock
mov
popa
mov
incb
out
in
sub
loopne
es
stc
sbb
and
jmp
arpl
in
xchg
adc
add
nop
xchg
mov
dec
pop
aaa
and
mov
dec
dec
leave
lea
adc
in
mov
cmp
pop
xchg
mov
int3
js
jne
xlat
scas
pop
ss
test
or
mov
mov
test
out
clc
mov
adcl
inc
xor
xor
mov
cmp
in
sub
mov
lret
xor
test
rorb
mov
push
xor
jnp
mov
mov
push
jmp
fsubl
pop
call
mov
adc
cli
int3
jg
mov
adc
fdivs
nop
lahf
mov
ja
add
lcall
pop
xchg
inc
or
add
or
fstl
mov
test
ds
mov
popa
cmp
js
and
dec
inc
push
cli
xchg
jle
icebp
mov
jb
lea
enter
jmp
arpl
sub
xchg
mov
sbbb
pop
push
out
lret
ja
mov
lock
add
inc
das
pop
daa
jl
jbe
pop
jae
repnz
mov
cmp
clc
lahf
pop
call
aaa
out
mov
sti
pop
sar
add
addr16
mov
sbb
loopne
cmp
push
popf
xchg
add
lods
mov
xchg
lahf
pop
int
mov
xor
jbe
dec
sbb
out
sti
adc
adc
xchg
cmpsl
mov
les
and
add
jne
mov
cli
mov
sbb
xor
sahf
sub
push
lcall
cmp
sbb
cmp
das
daa
inc
popa
pop
mov
fadd
lds
imul
nop
mov
push
pop
pop
mov
inc
pcmpgtw
movsl
cmp
dec
fisttpll
inc
pop
cmp
xchg
std
jle
aaa
xor
stc
mov
ds
jmp
test
loop
cmc
lock
popf
pop
sub
dec
mov
test
pop
mov
cmp
dec
pop
aaa
jne
cmc
inc
ja
pop
jg
pop
cmp
shl
sbb
push
out
insb
and
inc
add
out
xor
or
bound
into
mov
out
addps
icebp
dec
push
ja
push
jnp
cltd
or
cmp
dec
scas
sbbb
and
addr16
push
arpl
cmp
mov
iret
mov
sub
shlb
aaa
hlt
adc
repz
mov
pop
outsb
cmp
sbb
mov
mov
out
inc
cmp
jle
lds
mov
inc
sahf
fdivr
out
int3
dec
dec
ja
ret
add
imul
dec
lcall
int
scas
xor
cmp
mov
jmp
mov
xorb
flds
mov
cmp
push
pop
inc
das
sahf
mov
and
pop
cs
jle
sbb
pop
xor
dec
mov
inc
cmp
ftst
mov
loopne
arpl
mov
insl
mov
enter
jns
imul
lods
ret
cmp
add
cmp
xorl
aas
xchg
shl
cmp
sub
cmp
test
in
push
cmp
lahf
or
iret
lret
pop
and
adc
mov
mov
push
lods
cmp
jns
cmp
fstpl
push
ja,pt
sahf
lods
add
mov
and
cs
mov
addr16
cmp
mov
pop
stos
push
pop
adc
cmp
outsb
sub
das
or
lods
jnp
mov
cmpb
pop
cmp
enter
inc
cli
pop
test
inc
sarb
mov
cmp
enter
mov
sub
repnz
int
test
daa
add
idivl
jg
std
sub
arpl
loope
mov
dec
cmp
shlb
mov
pop
int3
addr16
insb
jb
cmp
xchg
rorl
stc
sbbl
pushw
mov
add
and
adc
lds
enter
cmp
or
pop
inc
mov
dec
add
mov
outsb
mov
cmp
cmp
mov
xchg
mov
fcomip
pop
fs
and
data16
xchg
sbb
dec
dec
mov
mov
das
sbb
dec
jb
mov
mov
in
out
cmp
dec
aas
mov
cld
xchg
cld
bnd
in
aam
cmpl
and
aaa
aas
mov
push
int
imul
lods
cmp
test
pop
push
jl
in
cmp
ss
add
clc
rcll
ficoms
loopne
jg
or
roll
mov
mov
mov
fsubl
sub
and
les
cmp
push
dec
lds
out
and
xor
push
inc
mov
mul
jnp
jb
mov
jne
xor
add
loopne
dec
jns
pusha
aam
ss
rcrb
stc
pop
mov
jnp
xchg
aam
add
addr16
sbb
iret
mov
dec
loope
mov
cmp
push
inc
fstpt
outsb
mov
int
aam
cmp
lret
mov
push
xor
or
cmp
jl
and
cmp
shlb
aaa
pop
mov
mov
cmc
iret
scas
ret
std
push
pushf
sub
movsl
and
mov
pop
sti
mov
dec
mov
loopne
rcrl
jle
push
ljmp
hlt
into
rclb
stc
js
mov
fcompl
jbe
jns
scas
inc
pcmpeqw
icebp
cmp
push
dec
push
stos
xor
add
cmp
sbb
popa
mov
adc
data16
jnp
in
scas
mov
mov
pop
mov
mov
frstor
push
scas
dec
or
cmpsl
mov
cmp
js
cltd
mov
cmp
push
loope
xchg
das
dec
add
inc
cld
ja
inc
lock
xchg
test
aaa
aas
xchg
in
movsl
inc
cmp
test
lods
cmp
or
ret
add
push
idivl
inc
push
xchg
insb
pop
jecxz
sub
out
xor
cmpsb
lock
mov
xchg
and
push
pop
xchg
xor
insl
inc
ud2
decl
sbb
in
cld
fprem1
mov
mov
fwait
and
push
repnz
imul
imul
out
pop
xor
repz
sbb
push
jae
ret
jb
adc
shll
cmp
gs
test
jae
pusha
pop
sub
inc
fwait
mov
imull
pop
mov
aaa
push
divb
mov
xor
shll
rcrl
in
xchg
loopne
cmp
in
xchg
mov
mov
int3
in
and
int
adc
cmp
mov
clc
aam
mov
cli
scas
sbb
cld
cmp
loopne
lcall
mov
jg
inc
fcmovbe
outsl
mov
xor
mov
cli
dec
sbb
mov
add
fwait
cltd
cmp
inc
mov
inc
iret
xchg
xchg
movsl
shll
jl
dec
leave
dec
mov
lods
in
gs
xchg
out
dec
in
pop
xchg
inc
fwait
xor
mov
int
and
jl
xor
arpl
fistl
mov
sbbl
jmp
mov
ret
mov
fs
xlat
pop
imul
adc
sbb
stos
mov
pop
and
bnd
adc
fisubrs
loop
jl
rorl
aam
sub
mov
aam
cmp
movsb
jmp
cs
inc
mov
pop
in
pusha
jnp
push
inc
sub
xor
cmp
or
adc
gs
sbb
pop
sbb
outsb
cld
scas
adc
mov
cmp
pop
fwait
sbb
sbb
sbb
sub
mov
sub
nop
jge
xchg
sub
aaa
adc
sub
sti
mov
push
fdivl
mov
xor
in
sbb
inc
loop
and
sub
push
xor
pop
inc
mov
outsb
pop
dec
cmp
cmp
xchg
cmpsb
mov
jmp
push
mov
ficompl
lock
sbb
xor
call
outsb
nop
lods
mov
inc
in
les
pop
and
cmp
jp
mov
cmp
cmp
lea
cmp
clc
sbb
mov
sbb
mov
fistpll
mov
jo
pop
mull
cmp
mov
xchg
inc
pop
push
dec
fimuls
test
adc
cmp
negb
sub
cs
test
leave
and
xorb
and
mov
les
jnp
sub
ds
jbe
enter
dec
adc
push
lods
add
mov
and
addb
dec
jnp
xchg
lcall
dec
mov
add
sbb
add
cmp
jnp
mov
insl
sub
data16
mov
movsb
dec
pop
cmp
dec
iret
arpl
jp
or
push
jg
cltd
pop
and
mov
jne
add
int
ret
movsb
xor
jecxz
mov
jmp
aaa
pop
sti
jp
pop
and
pop
js
clc
jbe
cmp
ret
pop
aaa
jns
adc
fstpt
pop
cmp
enter
aaa
ret
stos
jnp
push
push
outsl
sbb
and
push
scas
cmp
cltd
fsubl
cmp
jg
pop
and
cmp
and
ja
cmp
pop
test
jg
ljmp
ds
adc
scas
movsb
lret
cmp
std
fsubrp
scas
in
out
ljmp
sbb
out
mov
dec
outsw
add
sbb
ja
sub
sbb
add
cmp
dec
les
ret
xor
jmp
rorl
pop
hlt
and
sbb
adc
mov
bound
pop
pop
in
fwait
jne
push
icebp
ljmp
push
pop
addr16
fwait
inc
shrb
push
sbb
hlt
clc
adc
add
inc
sub
mov
pop
xorl
mov
cld
mov
xor
mov
push
adc
js
lods
rolb
pushf
sub
and
mov
adc
push
adc
add
aaa
inc
daa
sbb
mov
pminsw
dec
cmp
adc
sbb
sub
dec
xchg
mov
or
sub
fidivl
enter
testb
rolb
or
cmp
mov
imul
cmp
push
dec
repz
cmp
sub
dec
adc
fxch
inc
cmp
pop
fdiv
push
dec
sbb
push
sbbb
adc
sarb
or
in
out
xchg
iret
fwait
cmp
clc
mov
repz
mov
in
add
in
cmp
push
js
pop
add
jne
daa
mov
clc
cmp
iret
std
out
arpl
cmp
and
cmp
push
xchg
loop
sbb
dec
cmp
xor
das
dec
mov
test
dec
pop
cmp
sub
cmp
xchg
leave
mov
lret
cmp
inc
mov
jl
aas
cmp
cmp
push
xor
push
popf
sarb
xor
aas
faddl
pop
lds
cmp
jo
mov
loopne
stos
cmp
xchg
mov
and
popa
mov
mov
cmp
jo
push
movb
push
mov
inc
scas
pop
mov
inc
lahf
sbb
adc
popf
adc
imul
aam
fcoml
std
outsb
cmp
cmpsb
les
arpl
data16
push
stc
dec
std
xchg
enter
in
pop
and
inc
sti
das
and
inc
movsl
out
cmpsb
mov
cmp
push
adc
int
ficompl
es
cmpsb
insl
scas
lea
repnz
pop
sti
and
pusha
xor
push
pop
cmp
std
lcall
clc
mov
or
cmp
movl
push
sar
cmp
sub
cmp
adc
xchg
daa
or
and
popa
mov
sbb
leave
xchg
lds
dec
iret
in
jnp
fdivs
add
mov
ljmp
mov
or
sub
and
mov
or
cld
cmc
cmp
inc
int
fildl
cld
lcall
cmc
adc
out
jmp
dec
jbe
hlt
sub
jne
sbb
sub
pop
pop
cmc
std
jl
call
xorb
test
shl
bound
cli
xlat
sbb
and
dec
je
notb
pop
pop
xchg
inc
jl
loop
mov
jnp
adc
ljmp
and
rcrb
add
cmp
mov
and
jp
dec
outsb
shlb
in
xor
call
shr
imul
pop
imul
jnp
cli
and
fiaddl
xchg
add
mull
fdivrl
jge
xor
sbb
or
mov
cmp
jle
in
adc
repnz
imul
mov
sbb
icebp
jnp
mov
incb
addr16
sbb
and
mov
fcmovnb
stos
cld
scas
pop
shll
cmc
adc
sbb
mov
es
inc
out
sub
and
cs
push
adc
xor
les
mov
pop
loop
dec
mov
mov
or
scas
and
mov
pop
in
or
rolb
jl
sub
sbb
add
pop
imul
sbb
or
and
jg
mov
hlt
mov
mov
data16
stos
in
xor
xchg
push
test
jecxz
mov
jge
push
sbb
loopne
push
dec
jb
and
clc
out
sahf
imul
jae
dec
push
negb
xor
ljmp
rclb
fsts
in
pop
lea
inc
scas
jmp
fnstsw
jmp
aas
or
out
cmp
dec
popf
mov
inc
and
repz
pop
out
mov
push
sti
sub
aam
jmp
push
xor
and
xor
sbbb
adc
sti
sahf
fwait
enter
mov
hlt
adc
aam
inc
ljmp
testb
outsb
stc
lods
mov
lods
clc
sub
imul
mov
jecxz
mov
cmpsl
push
sbb
out
mov
jmp
cmp
jecxz
sbb
loopne
lock
or
mov
js
xchg
repnz
outsl
mov
idiv
pop
fwait
arpl
add
mov
sub
es
sbb
int
push
test
and
mov
mov
fsubrl
sti
test
mov
jge
xchg
inc
xor
adc
adc
xchg
xor
add
adcl
mov
add
stos
sbb
jnp
daa
pop
jbe
cltd
stos
shlb
mov
dec
mov
jno
and
sub
push
and
cmpsl
xchg
in
xchg
mov
enter
popa
enter
fsubrl
aaa
mov
out
sbb
sub
cltd
and
cmpsl
inc
aad
leave
mov
cmp
pop
sahf
add
into
lds
sbb
in
push
cld
es
xor
jbe
jno
es
cmp
insl
mov
cmp
add
in
fsubl
mov
mov
popa
sub
imull
out
pop
inc
iret
pushl
pop
pop
sub
mov
xchg
inc
movsb
fistps
outsl
sbb
lret
or
inc
sbb
jns
int
lahf
xlat
sbb
gs
mov
leave
lods
cmpsl
lret
sub
mov
inc
test
in
sub
or
rcr
cmp
pop
in
mov
pop
mov
mov
pop
push
repz
mov
lahf
inc
sub
sbb
fsubrs
cmp
fwait
stc
scas
mov
mov
int3
shll
and
mov
leave
mov
mov
insb
dec
and
div
dec
and
inc
xor
lcall
shll
mov
mov
push
mov
sbb
sbb
sbb
xchg
mov
and
icebp
dec
ficomps
and
push
adc
das
lret
daa
jbe
aad
mov
sub
or
faddl
aaa
cs
lods
stos
pop
test
jl
les
push
sbb
int
add
inc
or
mov
dec
push
sbb
sbb
sub
clc
sub
mov
jno
fcmovu
pop
mov
sub
pop
mov
inc
mov
cli
sub
pop
xchg
cmp
das
loop
stos
and
push
sub
pop
xchg
fcomp
rcrl
pop
es
arpl
out
sbb
je
pop
xor
cmc
adc
ljmp
push
mov
add
sbb
scas
add
xor
add
mov
mov
pushf
sbb
xor
pushf
add
pop
xor
cltd
push
in
dec
xor
cltd
pop
in
clc
or
aad
cmpsl
inc
mov
fsubrs
push
dec
sub
adc
adc
mov
call
imul
cltd
inc
call
push
dec
lea
fisttps
adc
or
xchg
mov
adc
cli
or
dec
sbb
addb
hlt
sub
or
in
dec
sbb
sbb
stos
jp
or
mov
bound
jecxz
xor
mov
mov
shrb
ljmp
mov
stos
adc
mov
jge
stos
notb
lods
mov
xorl
and
xor
stos
add
out
adc
sub
incb
inc
cmp
xor
jno
faddl
and
stos
mov
inc
dec
mov
test
adc
divb
xchg
xor
mov
push
hlt
sbb
div
dec
mov
dec
cltd
sbb
xchg
xlat
cmpsl
lods
lds
jne
test
inc
xor
das
mov
mov
cmp
cwtl
sub
cltd
pop
mov
push
fs
cmpsl
pusha
xchg
pop
pusha
fst
mov
adc
pop
dec
mov
jb,pt
sbb
shll
sbb
push
mov
push
inc
cmp
mov
cmp
cmp
cmpsl
testb
xchg
mov
aas
test
jae
mov
dec
sub
sub
lea
stos
roll
dec
push
and
lcall
xor
jae
fsub
cmp
fmulp
stos
push
push
aaa
add
add
out
in
cmpl
fsubrl
mov
dec
cmp
and
movsl
mov
sub
jo
cmp
mov
mov
mov
std
jb
mov
fnstenv
pop
sub
sub
cmp
mov
xchg
jmp
movsl
test
sti
xor
pop
xor
lahf
jno
iret
jecxz
fildl
inc
dec
hlt
push
or
pop
je
sub
int3
aas
stos
shrb
repnz
cld
cmpsl
fwait
jg
je
jo
xor
das
pop
std
ja
int3
inc
xchg
mov
cwtl
pusha
xor
jecxz
pop
sbb
pop
nopl
ss
test
pop
out
lods
icebp
es
shrb
inc
cmp
faddl
sbb
xor
mov
jge
in
clc
repnz
clc
clc
in
mov
test
push
adc
sbbb
lahf
idivb
movsl
jo
lcall
mov
push
call
cmc
mov
sbb
xor
mov
sarl
xor
pop
lods
fistpll
mov
mov
test
enter
mov
pop
push
int
xchg
scas
iret
sbb
es
outsl
inc
adc
mov
nop
xor
pop
inc
je,pn
in
sbb
mov
sbb
inc
pop
sbb
scas
inc
fbld
int3
cmp
aaa
loopne
stc
mov
inc
stos
push
dec
mov
sbb
sbb
add
call
fwait
xchg
test
loopne
and
ljmp
sbb
sbb
jno
in
push
inc
or
lahf
mov
in
ja
clc
adc
xchg
add
arpl
sarb
fs
mov
adc
jecxz
or
aam
pusha
jns
loopne
divps
mov
fsubrs
dec
iret
xchg
and
in
stos
jae
bound
mov
xor
pop
fwait
xor
daa
fsubr
hlt
fisubrs
jnp
das
sbb
xchg
es
ret
push
aaa
test
cmpsl
popf
sti
adc
and
ds
daa
jle
adc
cli
out
je
mov
daa
dec
std
sti
push
mov
sub
imul
add
mov
int
call
cmpsb
mov
fcompl
mov
adc
xchg
jno
xchg
stos
mov
and
jnp
adc
ljmp
adc
mov
and
xor
pop
add
scas
cli
int3
sbb
adcb
push
xchg
sub
adc
lret
and
mov
sub
jg
gs
pop
sub
and
sub
bnd
xor
fimuls
shrb
and
adc
sarb
loopne
call
mov
out
xor
and
push
imul
mov
dec
es
imul
jb
mulb
xor
cmp
and
push
stos
dec
lods
and
cmc
loope
adc
fldenv
cwtl
cmp
addr16
sbb
sbb
cmpxchg
mov
jns
inc
stos
sub
test
pop
fistpll
loope
das
bound
repnz
add
add
mov
lods
sbb
jno
xor
stc
aas
mul
clc
unpckhps
lock
sbb
xor
data16
iret
add
jne
scas
add
xor
xchg
jb
bound
xchg
push
aad
mov
js
imul
sub
sub
mov
pop
push
jb
sub
adc
mov
cmp
xor
mov
jp
mov
in
fsubl
das
cmp
sub
test
adc
outsl
sbb
jg
sarl
imul
sbb
lea
adcb
out
insl
pop
test
int
mov
je
cmp
sbb
lcall
cmp
pop
in
mov
cltd
inc
lods
gs
ljmp
cmp
js
shll
mov
cmp
cmp
movsl
dec
xchg
fwait
lods
pop
cmp
add
xor
jae
int
div
pop
fwait
arpl
imul
cltd
lcall
cli
lret
daa
sbb
ja
rolb
repnz
sub
pop
enter
cmp
das
mov
jns
sub
in
xor
xchg
pop
jns
scas
mov
ja
and
testb
xchg
dec
push
xchg
mov
lea
test
jp
xchg
loopne
test
cmp
das
add
xchg
repnz
ds
inc
sbb
mov
ja
xchg
xor
mov
testl
xor
mov
inc
mul
clc
sbb
cld
ret
pop
inc
cmp
daa
bnd
jl
je
sub
jg
xlat
lods
sub
cltd
sub
scas
stos
cmc
sar
cmpsl
lret
sbb
fs
lret
xor
adcl
sub
loopne
sbb
subl
leave
inc
out
mov
xchg
jae
mov
loopne
test
popl
scas
int
mov
fdivrl
pop
rolb
sbbl
add
das
inc
lcall
sub
and
fs
add
mov
xchg
jae
mov
xor
clc
repnz
rolb
repnz
cmp
sbb
xor
sbb
xor
test
adc
roll
cmp
cmpsb
jo
lret
push
pop
mov
pop
fldz
cmp
pop
xor
lods
aaa
sub
push
inc
inc
cmp
add
out
add
pop
sbb
out
js
mov
xor
addr16
out
repnz
outsl
outsl
cli
jl
sub
mov
xor
das
dec
das
mov
fsubs
ljmp
clc
adcb
cli
jmp
cmpb
cltd
stc
popl
sbb
lods
push
inc
xor
add
jmp
and
mov
aas
inc
xlat
xchg
mov
jnp
imul
divl
ret
inc
mov
xchg
cltd
cmp
push
ljmp
fstpl
pop
mov
pop
pop
lods
mov
cmp
mov
test
fidivs
push
sub
push
std
mov
aad
and
shll
test
jge
out
pop
inc
pop
sbb
xor
daa
pushf
xor
nop
pop
in
imul
test
inc
lcall
xor
cmp
pop
sub
lret
pop
xor
xchg
movsb
mov
daa
jae
push
adc
ljmp
mov
push
in
pop
nop
mov
xor
push
and
das
stos
lahf
adc
xor
lods
in
enter
push
xchg
imul
mov
popf
dec
push
stos
mov
sbb
cli
rcrb
testl
xchg
jo
xchg
pop
mov
xorb
cltd
test
xor
into
sub
sbb
sub
cltd
pop
xor
fwait
lods
jno
rcrl
add
jnp
inc
hlt
sarl
out
das
sbb
push
sbb
int
cmp
mov
and
repnz
int
mov
mov
cli
cmpsb
inc
push
add
insl
dec
faddl
push
movsl
ja
fldl
and
or
jle
scas
adc
jnp
test
xchg
xor
test
cli
outsb
pushf
mov
cmp
mov
cli
fwait
mov
call
mov
in
popf
mov
sbb
fildl
jno
pop
cmp
lahf
push
jb
sbb
int
push
mov
push
dec
loopne
cmp
pop
jmp
idiv
aaa
jns
mov
arpl
loop
inc
stos
lds
in
addr16
mov
je
in
out
mov
lds
divb
ljmp
xor
leave
orl
xchg
push
test
mov
test
pushf
sub
scas
js
xchg
push
inc
sub
xor
add
mov
cmp
cmp
mov
sub
dec
jmp
mov
ljmp
mov
mov
fdivrl
mov
sbb
fdivl
xchg
scas
loopne
into
xchg
fsubs
sbb
fdivrl
sbb
cld
pop
shll
adc
les
adc
repz
nop
test
cmpsb
stos
mov
bound
add
mov
push
les
imul
add
cmp
mov
aad
or
sub
xlat
xchg
fcomp
in
rolb
lahf
jae
fldenv
jno
or
cmp
lcall
cli
fldl
jns
fucomip
push
xchg
adc
push
int
mov
fadds
pop
iret
and
xchg
dec
and
and
xor
leave
fs
daa
xor
xchg
inc
fs
clc
rcll
inc
cmp
sti
fwait
loop
test
call
lods
out
push
fnsave
sub
mov
sbb
insl
dec
in
in
jae
cmpsl
sarl
mov
std
lret
sbb
cmpsb
gs
adc
rolb
pop
pop
pushl
stos
sub
test
insb
fnstsw
out
lods
neg
pop
fwait
sub
cmp
sbb
inc
xor
xchg
mov
fdiv
adc
sbb
loopne
ficomps
and
stc
sub
sahf
inc
add
loopne
fwait
fwait
outsb
adcb
jle
out
ja
fiaddl
inc
std
mov
stos
mov
pop
pop
movl
int3
jmp
sub
es
repz
stos
movl
mov
xor
mov
adc
scas
cmpb
mov
stos
rcll
jns
inc
mov
xchg
fimuls
mov
out
imul
test
mov
pop
daa
stos
mov
iret
popf
jg
scas
rcll
xchg
stc
adc
xor
or
cs
and
es
sub
sub
sub
adc
repz
pop
idivb
mov
sub
aad
stos
in
test
cli
adc
daa
bound
fsubl
int3
popa
sbb
push
cmp
dec
push
inc
cmp
sub
cmp
outsl
mov
sar
cmpsl
mov
or
sbb
xchg
cmpsl
enter
aaa
xchg
scas
and
aas
sbb
int
fadds
ds
inc
mov
insl
inc
dec
sub
in
inc
arpl
rcr
loopne
mov
icebp
test
mov
cmp
cld
pop
inc
sti
repnz
idiv
and
stos
sub
adc
sub
test
je
fsubrs
sti
testb
das
div
rolb
mov
pop
fdivs
adc
cli
idivb
push
xor
xor
jge
add
aaa
mov
jge
fdiv
repnz
push
dec
dec
stos
sbb
push
and
and
sbb
sbb
and
sub
sti
jl
and
add
jbe
pop
bound
add
mov
sub
push
pextrw
xchg
xor
das
bound
inc
or
aam
mov
jge
out
ja
pop
inc
fucomip
mov
and
add
and
mov
push
cmp
fcomps
mov
sbb
sub
sbb
cwtl
bound
fwait
jg
inc
mov
loop
dec
imul
sub
dec
bound
inc
sbb
jp
pop
or
std
jns
sti
hlt
xor
in
xor
add
imul
clc
sbb
and
inc
cmpsb
mov
sahf
jecxz
cwtl
and
adc
loop
jns
mov
in
jg
je
insb
sbb
ds
sbb
movsl
jmp
cwtl
mov
sahf
sbb
push
add
push
cld
sarb
fcom
sbb
lcall
cltd
push
add
inc
mov
or
pop
sub
sahf
pop
fdivrs
sahf
cmp
sub
mov
sbb
fimuls
sbb
mov
sbb
lahf
out
sarb
cld
sbbl
cmp
gs
out
hlt
or
add
ljmp
cld
movsb
negl
mov
in
sbb
in
cmpsb
fsubrp
int3
xor
lret
dec
add
fwait
rcll
lods
add
ljmp
stos
push
cld
enter
stos
mov
clc
mov
ds
push
inc
sub
push
mov
xchg
sbb
ljmp
pop
call
in
neg
stos
dec
cwtl
sti
mov
cmpsl
mov
xchg
jg
sahf
xlat
test
xor
add
cwtl
je
cmp
xor
div
stos
mov
cmp
ljmp
addr16
or
pop
int3
lods
xor
mov
xchg
js
stos
and
fs
call
sub
outsl
adc
sub
and
sbb
loope
stos
add
and
add
pop
add
inc
sub
push
mov
bound
inc
sub
mov
push
cli
cmp
and
or
idivb
sub
or
or
repnz
sub
push
mov
bound
scas
push
add
js
and
mov
xchg
pop
int
or
mov
aam
dec
mov
fdivrs
js
or
fistps
icebp
push
inc
or
jg
lods
hlt
cmp
pop
mov
xor
cmp
repz
sub
mov
add
adc
xor
js
mov
xor
jmp
mov
xchg
jmp
loopne
mov
sti
repz
adc
leave
mov
mov
add
sbb
divl
mov
add
std
xor
adc
daa
popa
movsl
insl
jb
adc
xor
add
scas
lods
add
popf
shll
in
lods
fdiv
push
and
je
pop
in
repnz
mov
jge
lahf
mov
inc
and
in
jmp
push
adc
or
mov
sbb
inc
ss
push
mov
js
sbb
and
and
mov
jg
cmp
lret
pop
sbb
cmp
pop
sbb
sbb
xchg
leave
mov
fwait
lds
mov
sbb
inc
mov
sbb
xor
sbb
sbb
sbb
sub
cltd
in
push
cmp
stc
inc
lea
jne
and
mov
or
fwait
push
mov
lea
repz
mov
mov
push
jg
xchg
push
bound
push
out
sbb
testl
sub
int
mov
sub
adc
xor
xor
adc
fwait
xor
push
negb
cmp
add
shrb
rcrb
mov
inc
sub
mov
mov
mov
int
insl
test
lds
test
ret
aam
ret
mov
sbb
cs
inc
sub
sarb
jge
push
sub
and
sub
loope
inc
add
sbb
sub
jb
into
inc
push
push
lret
inc
xchg
adc
cmc
mov
dec
mov
cmp
rcll
push
movsl
mov
in
cmp
jnp
out
shrl
mov
scas
testl
lret
add
or
mov
mov
jge
dec
out
outsb
xchg
cmp
sbb
xor
push
pop
sub
roll
pop
push
push
popa
mov
sub
out
xor
xor
pop
add
jae
bound
xor
cltd
xchg
adc
mov
cmp
jle
fistpl
inc
sub
es
lahf
jae
dec
xchg
pop
add
scas
movsl
in
stc
test
adc
mov
push
loop
push
xor
call
xchg
xor
pop
popa
mov
es
jge
fs
jge
cmp
xchg
pop
fwait
sbb
and
sub
mov
popa
in
cmp
cmp
mov
arpl
xor
ja
in
enter
cmp
inc
mov
jge
push
in
push
inc
mov
mov
inc
cmp
aaa
movsb
repnz
push
ficomps
xchg
mov
rcrb
adc
mov
cld
popf
mov
repz
add
sbb
repz
xchg
clc
fimuls
cld
jo
stc
xchg
pop
jns
aad
out
add
negl
std
jle
das
loop
das
fstps
pop
bound
in
cmpl
pop
pop
int3
aam
push
inc
test
mov
push
push
test
jae
insb
and
popf
test
std
or
movsl
int3
jb
cmpsb
loope
xor
cli
push
out
cmp
pop
aaa
mov
in
and
sbb
adc
or
lahf
std
sti
sbbb
inc
jg
adc
test
ljmp
sub
repnz
cmc
inc
aaa
jnp
ljmp
sbb
ja
clc
add
adc
pop
repnz
andl
xchg
push
sbb
mov
stos
xchg
mov
xor
pop
cmpsl
xchg
aas
cmp
aam
fisttps
jl
out
btc
dec
mov
loop
inc
xor
and
adcl
icebp
or
js
cmp
jae
mov
and
repnz
lahf
inc
mov
jge
sbb
dec
je
cmpsb
dec
add
sub
mov
stos
testb
jns
pop
cs
cmpsl
int
mulb
test
rcll
sub
sub
cmc
push
xor
insb
in
sub
push
inc
ja
outsb
pop
sbb
sub
in
es
push
lods
sbb
jnp
lret
lcall
rcrl
adc
inc
pusha
pop
jecxz
les
dec
or
fsubrs
ret
sub
mov
bound
dec
pop
adc
sub
sbb
adc
or
add
add
mov
fdivs
add
imul
sbb
sub
fstpl
hlt
rolb
int3
sbb
pop
les
cmpsl
push
lods
sbb
stos
pop
push
inc
sbb
dec
ss
sub
mov
sbb
std
movb
das
and
xchg
and
jge
out
push
outsb
xlat
xchg
test
inc
mov
and
xor
pop
push
daa
ds
test
je
les
sbb
mov
cmpsl
frndint
je
ret
sub
mov
int
push
ret
insb
testl
mov
mov
lods
sbb
ja
lahf
jae
mov
rcl
enter
in
xor
scas
out
fmull
gs
pop
ret
cmp
clc
mov
daa
sahf
notb
movsb
adc
pop
lds
pop
das
fsubrs
sub
outsb
adc
pop
cli
xchg
std
stos
mov
cmp
jno
or
inc
les
dec
js
lea
xor
test
daa
mul
rcrb
sbb
out
aaa
loop
icebp
fstps
add
in
fsubrl
or
mov
jb
jne
nop
inc
bound
faddp
ss
cmc
jecxz
xchg
add
cmp
xor
mov
inc
or
loopne
cltd
pusha
cwtl
inc
fs
fcomip
movsl
test
fninit
pop
jecxz
imul
fstpt
das
stos
adc
sub
cltd
mov
adc
stos
icebp
andl
stos
movsb
call
adc
repz
fwait
dec
test
jl
sub
and
iret
mov
bound
pop
les
mov
xchg
mov
add
fdivr
and
push
and
mov
aaa
into
insb
jecxz
add
cli
je
mov
and
pushf
sub
jmp
in
pop
inc
cmp
das
push
sbb
inc
xor
insb
in
xor
mov
loop
add
cwtl
sub
cld
mov
les
mov
and
sub
filds
scas
mov
pop
xor
imul
addl
nop
dec
fisubl
aaa
fisttpl
mov
push
into
mov
stos
and
fldcw
das
mov
and
xchg
ja
and
sub
pop
gs
sbb
cmp
pop
hlt
xchg
mov
ret
inc
jmp
into
and
mov
push
and
iret
mov
fwait
shrb
fs
gs
aas
fwait
mov
fiaddl
cmp
call
mov
clc
dec
les
inc
add
xor
mov
mov
and
cmp
sbb
ljmp
hlt
cmp
xor
jno
cmp
aas
punpckhbw
push
insl
pop
pop
cmp
xor
mov
aaa
aas
cld
insb
sbb
ds
and
jmp
add
pop
aaa
ss
cmp
out
jb
cmp
dec
mov
xchg
loope
les
cmp
js
ficoms
stc
sub
aam
in
adc
hlt
sbb
cmp
stos
cmp
out
jno
adc
pop
sbb
outsl
sbb
std
ret
cmp
bound
push
xlat
int
cmpsb
cmp
cmp
mov
outsl
cmp
inc
mov
add
jle
mov
mov
xor
mov
rorl
mov
mov
aam
shlb
cmp
sbb
inc
dec
and
test
aas
xchg
cmp
dec
popf
mov
pop
addr16
shrb
aad
dec
loop
add
lods
into
test
jae
nop
cmp
sub
push
sbb
ror
lods
test
sarb
inc
pop
pop
sub
cmp
sahf
int
addl
inc
rclb
jnp
xchg
mov
xchg
mov
bound
or
leave
sub
lahf
adc
cmp
sbb
lret
cmp
jne
sub
xorl
mov
sahf
push
push
icebp
push
in
iret
mov
ret
popf
pop
dec
mov
js
in
cmp
sbb
mov
scas
jnp
or
xchg
fstpt
sarl
icebp
fwait
push
popf
cmp
fistl
dec
in
sub
push
cli
jl
xchg
sar
fwait
out
les
stos
fwait
lcall
push
mov
mov
loope
push
das
and
in
sub
fcoml
xchg
push
and
xor
dec
repnz
sub
leave
push
shlb
mov
das
inc
xor
cmpsb
js
out
int
cmp
int
mov
sbb
movl
xchg
call
jl
inc
lret
push
sbb
int3
xor
out
rcl
inc
add
push
loope
rclb
sub
xor
test
lea
addr16
mov
mov
cwtl
into
loopne
pop
adc
test
loopne
dec
sbb
dec
mov
bound
or
jbe
adc
out
dec
sbb
incb
xor
in
and
mov
fisubrs
push
inc
daa
mov
xchg
pop
and
decl
enter
mov
les
nop
and
cmpsb
in
outsl
or
jno
fwait
add
sbb
xlat
data16
sbb
insl
dec
mov
add
and
aaa
les
dec
scas
pop
dec
je
in
adc
mov
imulb
pop
dec
sub
stos
and
insb
dec
fimull
imulb
popf
pop
and
stos
mov
or
cli
das
cmp
mov
pop
jg,pn
std
test
inc
jl
shlb
aam
popl
je
dec
or
xchg
fisubrs
mov
ficomps
les
repz
xor
aam
aam
pop
repnz
iret
push
jae
bound
cmp
add
pop
insl
dec
scas
xchg
sub
mov
dec
aas
sbb
mov
xlat
aaa
sbb
fisubrl
clc
aam
rcl
sub
sbb
jge
add
fdivrs
cmp
xor
into
jp
lret
loopne
push
aas
cmpsb
inc
int3
and
mov
mov
insb
mov
stc
pop
sbb
insl
dec
mov
mov
in
pop
das
push
mov
cli
fstl
sbb
imulb
aaa
fsub
adc
sub
call
mov
push
aaa
push
in
scas
sub
jns
lahf
xor
imulb
popf
pop
xor
xor
sub
jns
mov
xchg
adc
sbb
test
and
ret
fincstp
sub
sbb
clc
mov
fstpt
rol
inc
fidivs
ficompl
movsl
int
lret
add
mov
cmpsb
xchg
add
iret
jecxz
mov
push
adc
mov
rorl
cli
divl
and
sbb
sub
daa
pop
daa
sbb
xchg
or
mov
es
movsl
sbb
aas
pop
stc
sub
repnz
in
xlat
not
inc
aaa
pop
fnstenv
sub
cli
push
stos
inc
sbb
adc
sub
test
into
repz
les
or
inc
sub
sbb
cs
sub
test
mov
ret
stc
repnz
mov
sbb
push
and
push
test
loop
sub
pop
and
lcall
mov
imulb
mov
sub
xor
std
xor
sub
xor
mov
pop
and
mov
mov
jg
push
and
jns
mov
idivb
rolb
fbstp
cmp
cltd
rcrb
sbb
sub
div
mov
mov
mov
or
sbb
xlat
xchg
sbb
push
lds
sbb
lret
jg
cld
pop
sti
popf
mov
sbb
ja
xchg
orb
xchg
sub
jecxz
mov
ja
pop
mov
xchg
and
sbb
inc
inc
xor
mov
adc
sub
inc
mov
lahf
xchg
sbb
sbb
lcall
dec
je
in
das
cs
repnz
in
pushf
fstpl
lods
loope
xor
sahf
ljmp
out
ljmp
xor
ljmp
mov
mov
xchg
jmp
in
pop
rorl
pop
push
sub
pop
pop
movsb
adc
jge
add
lret
inc
adc
leave
mov
ljmp
orl
ficoms
mov
add
sbb
loopne
divb
xor
loop
pop
xor
pop
inc
out
rorl
lret
nop
dec
and
sub
xor
scas
std
jns
in
cli
sbb
insl
insb
push
inc
hlt
jmp
ds
add
xor
lea
sbb
idivl
jmp
sbb
lock
scas
cmp
jno
sbb
repnz
cmp
jmp
int3
mov
jecxz
scas
cmp
push
aam
idivb
mov
dec
in
xor
clc
loope
lret
scas
add
push
adc
nop
cli
ds
push
loopne
dec
cld
mov
pop
push
int3
mov
adc
add
mov
adc
sub
mov
mov
mov
adc
cmp
sub
and
sub
mov
dec
in
sub
xor
mov
xchg
int3
xor
test
stc
xchg
push
dec
or
sub
sbb
sub
mov
cmpb
xchg
mov
shl
add
cli
and
sub
xor
pop
pop
fsubr
test
push
push
xchg
out
or
pop
cltd
int
cmp
in
and
sbb
xchg
jae
bound
push
jg
or
jb
ret
inc
imul
icebp
jns
out
cmp
xor
push
cmpsb
loop
cld
mov
jge
lcall
rolb
xchg
jns
adc
imul
lods
dec
or
sbb
or
sbb
pop
inc
inc
call
xor
out
lods
add
jb
push
xchg
ja
flds
daa
stos
clc
lods
inc
mov
mov
or
xor
inc
xor
arpl
popf
sbb
xor
fwait
lret
mov
sub
jl
test
sub
sub
sub
xchg
mov
jge
aam
lods
xchg
sub
cmp
aaa
and
ja
clc
sbb
mov
adc
xor
in
sbb
sbb
fdivrp
bndstx
sub
pop
mov
int
cmp
cmp
xor
nop
and
pop
int
testb
jge
fstl
call
add
arpl
cltd
xchg
leave
mov
add
add
outsl
hlt
jb
js
decb
pop
sub
and
inc
cmp
div
mov
es
xchg
lea
data16
sub
dec
and
cs
fdivs
and
push
test
stc
movsb
pop
je
fisubrl
adc
jmp
imul
sahf
push
mov
rcrl
shrb
mov
sti
adc
out
sbbb
push
fcmovb
push
fisttpll
ss
push
add
pop
mov
out
xlat
push
fcmovb
xor
cmp
push
fcmovbe
jns
cmp
push
push
mov
nop
aaa
sbb
pop
lock
call
lods
gs
pop
out
imul
mov
sbb
dec
mov
sub
cli
nop
pop
pop
out
xor
syscall
aas
jp
sbb
xor
mov
in
jnp
jne
cmp
sbb
pop
lock
in
push
fdivs
mov
call
or
mov
jmp
popa
mov
jae
mov
cmc
shrl
ret
cmp
xchg
jb
lahf
mov
pop
aas
push
fwait
mov
imul
es
or
cmpsl
call
lods
call
outsl
test
popf
cmp
xor
inc
sub
and
jp
cmc
stos
dec
inc
imul
inc
sub
dec
fidivs
adc
inc
xchg
lock
orl
cmp
jb
pop
fiaddl
fisubrs
cltd
cmp
clc
sbb
insl
jle
fnstenv
jnp
cmp
push
push
pop
jb
iret
cmc
dec
hlt
les
mov
sub
pushf
jns
xor
mov
push
adc
shll
das
lds
adc
xchg
mov
jbe
js
pop
leave
and
hlt
cmp
pusha
andl
pop
sub
fsubr
and
push
xor
sub
sub
js
cld
pushf
insb
les
sub
xchg
push
mov
pusha
call
es
cld
adc
mov
sbb
mov
mov
sbb
dec
xor
push
inc
add
ds
add
lea
or
jl
sub
sub
jmp
xchg
xchg
jp
mov
mov
and
jns
cmp
fadds
enter
insl
xchg
cmpsl
sbb
pop
mov
pop
inc
pop
xor
xchg
cmp
pop
adc
and
mov
mov
cmc
xor
mov
mov
les
gs
sub
mov
jmp
xchg
add
std
mov
push
sbb
mov
xor
dec
push
push
and
cli
sbb
mov
clc
pop
sub
fdivs
adc
div
adc
aam
cmp
sbb
push
cmp
ss
cmp
cmc
push
rorb
cmp
push
aad
mov
xchg
push
jne
mov
adc
lret
pop
cmp
push
icebp
shll
nop
jo
xor
cmp
outsl
dec
into
scas
cmp
push
in
int
and
mov
add
xchg
shlb
mov
pushf
cmp
pop
adc
fdivrs
sbb
xchg
scas
cmp
hlt
js
xor
sbb
aam
repnz
cmp
lock
mov
xor
cmc
ucomiss
xchg
rclb
loop
pop
cmp
out
ss
sarb
enter
leave
scas
xlat
cmp
lods
pop
ss
dec
testl
lea
push
ret
cmp
shll
int
aaa
aas
leave
mov
ja
inc
sarl
popf
pop
outsb
inc
cmp
icebp
arpl
into
rorb
ret
xor
or
xchg
cmp
mov
cmp
adc
jmp
in
enter
out
sub
psubd
fbld
pop
fcmovu
push
hlt
mov
sbbl
adc
ret
sbb
rorb
jnp
adc
inc
stc
int
jns
inc
into
cmp
fs
mov
and
dec
lret
cmp
fldenv
popf
push
lahf
cmp
cmp
adc
pop
cmp
mov
mov
inc
aas
add
and
mov
cmpsb
es
push
xor
fidivs
scas
fistl
into
sbb
inc
das
dec
adc
push
or
jecxz
pop
out
lahf
das
outsl
loope
popf
push
ret
out
push
dec
push
arpl
dec
push
cs
bound
mov
cmp
jno
xor
scas
jp
jl
cmp
lock
mov
mov
add
mov
mov
pusha
xchg
cmp
inc
push
adc
cmp
pushw
stos
jb
or
iret
lds
test
jae
lods
fidivrl
xor
sub
shl
pop
fnstcw
inc
cmp
int
pop
inc
fnstsw
nop
pop
scas
xchg
out
js
push
int3
aad
iret
push
cmp
test
call
nop
dec
push
ret
cmp
inc
call
in
jl
push
add
xor
mov
sub
enter
xchg
pop
cmp
ds
mov
jno
inc
push
cmp
push
push
aaa
dec
pop
inc
mov
sub
ds
inc
or
xchg
push
add
shll
sub
xchg
sbb
scas
int
inc
mov
in
inc
adc
cmp
idiv
jne
nop
pop
push
lds
mov
cmp
inc
lcall
pop
pop
xlat
xor
mov
aaa
or
xchg
ret
sub
add
lods
repz
xchg
test
das
fwait
inc
and
call
sub
loop
mov
sbb
and
jbe
aas
xlat
add
out
cmp
mov
sbb
rcr
cld
xor
pop
cmc
xor
jecxz
add
fsubp
leave
cmp
ror
xor
or
hlt
mov
pop
push
push
aaa
aaa
adc
aad
lods
fwait
addl
push
mov
cmp
push
xchg
add
inc
pusha
pop
imul
inc
dec
shlb
dec
cmp
aam
and
or
cmp
jecxz
mov
cmp
out
push
cmp
lods
aad
cmp
adc
cmpb
mov
aaa
push
hlt
lret
sbb
cmp
or
ficoml
cmp
jbe
test
add
pop
inc
jge
push
pop
push
mov
and
popa
xorb
mov
sti
cmp
adcl
jmp
inc
leave
xchg
enter
mov
cmpsl
shll
mov
dec
add
loope
lahf
dec
pop
nop
lea
mov
adc
xlat
insb
jge
cmpsb
popa
cmp
or
and
ret
out
pop
cmp
shrb
xchg
movsb
cmp
sbb
pop
cmp
adc
adcb
lods
aas
and
xor
push
shrl
inc
shlb
lds
ficompl
arpl
lock
jmp
rcrl
jecxz
mov
push
cmp
or
aaa
mov
pusha
movsl
xor
jbe
cmpl
loopne
inc
dec
push
aaa
sbbb
nop
dec
add
inc
cmp
mov
lcall
add
xlat
and
pop
and
cmp
ret
aas
add
lods
jo
test
fnsave
ret
les
icebp
cmp
push
add
mov
cld
das
cmp
mov
push
mov
jle
mov
cmp
inc
cmc
push
sub
lea
pop
inc
pop
xchg
cmp
repz
or
into
and
mov
les
lcall
jle
cmp
cld
mov
dec
lret
mov
adcl
push
hlt
lret
lods
sbb
cwtl
cmpsl
out
nop
cmp
add
pop
les
fwait
les
repz
pop
mov
mov
pop
push
cmp
adc
xchg
pusha
lret
cmp
das
lds
les
int
mov
cmp
rclb
cltd
mov
cmp
cmp
insl
inc
adc
aaa
dec
mov
loop
mov
add
imul
cmp
iret
cmpsl
mov
sar
sbbl
inc
jbe
mov
cmp
mov
movsl
jb
dec
mov
mov
cmp
lahf
fisttpll
ja
push
data16
adc
inc
cmpl
addr16
shll
cmp
lea
notl
decb
sarb
adc
xor
sub
mov
pop
push
jl
mov
cmp
xchg
pusha
jp
aaa
rcr
push
sbb
pop
cltd
and
sub
mov
outsl
xchg
mov
cmp
xchg
cmp
cmp
add
mov
push
or
xchg
cmpsl
cmp
adc
cmp
dec
or
jp
xor
enter
or
insl
fs
cmp
test
push
ret
stc
imul
xchg
pop
ret
cmp
and
sub
mov
pop
mull
jo
std
mov
ljmp
ds
jno
or
pop
inc
movsb
mov
mov
push
loopne
pop
jg
cmp
inc
sub
xchg
cmp
lods
xchg
sbb
add
add
cmp
sarl
out
or
pop
cmc
push
adc
int
jb
mov
fdiv
cmp
aad
xlat
dec
sub
mov
inc
loop
adc
xchg
mov
mov
repnz
enter
cmp
mov
or
repz
cmp
mov
cmp
inc
add
fidivrs
cmp
push
ficoml
cmp
scas
loopne
addr16
jbe
inc
divb
and
push
adc
sub
bound
add
cmp
inc
int
cs
sbb
jbe
aaa
gs
xchg
lea
mov
jge
xor
ss
or
push
call
xchg
dec
in
filds
data16
arpl
inc
ret
out
mov
pop
insb
stos
push
dec
jmp
or
shll
jp
inc
inc
sahf
cltd
xchg
mov
pop
cmp
xor
das
mov
xlat
cmp
add
cld
out
inc
cmp
push
adc
andl
cld
push
inc
shll
pushf
push
ret
mov
mov
cmp
jb
movsb
inc
cmp
in
arpl
aaa
ret
inc
push
cltd
push
push
add
mov
sub
mov
fwait
stc
or
push
lcall
nop
jae
inc
pand
sbb
dec
jb
jg
sub
cmp
mov
dec
mov
outsb
inc
clc
aaa
mov
add
loop
cmp
cmp
dec
inc
fnstcw
xor
cmpl
or
das
aas
push
dec
mulb
add
push
mov
jle
adc
rolb
dec
leave
xchg
mov
cmp
push
xchg
cmp
aas
pusha
sbb
lods
jle
aad
push
or
fwait
jmp
pop
cli
mov
cmp
test
cwtl
fstpt
inc
insl
push
test
sbb
push
sarb
lret
and
mov
pop
icebp
int
jno
xchg
in
jmp
inc
and
cs
inc
cmp
push
xchg
cmp
pop
inc
popf
sti
daa
jecxz
arpl
outsl
nop
scas
int
ds
pop
in
sub
xor
cmovl
sti
mov
xor
cmp
js
jo
lret
cmp
lea
push
pusha
mov
fbld
pop
bound
iret
inc
jnp
xchg
adc
pushf
push
cmp
movsl
call
sub
aad
push
jge
jbe
int
mov
test
sub
in
std
or
add
jle
lcall
je
jp
add
cmp
push
dec
and
movsb
mov
insb
cmc
popa
adc
lods
out
lea
loope
push
cmp
andb
cmp
imul
push
and
xchg
decb
xor
jo
jecxz
cmp
inc
lret
inc
add
push
jb
xor
mov
cmp
mov
sub
cmp
fs
mov
jno
jecxz
pop
pop
in
push
mov
mov
cmp
push
fsubrl
mov
pop
in
jnp
push
fistps
popf
xchg
scas
xlat
jnp
ja
push
cmp
in
insl
jnp
loope
cmp
repnz
cmp
cmp
add
ds
inc
out
pop
es
shrb
nop
and
push
aam
dec
outsb
xchg
roll
idivl
arpl
lcall
lret
lds
xchg
cmp
into
mov
pop
jb
filds
add
xchg
fnstenv
cmp
inc
loope
sahf
enter
and
mov
ljmp
adc
popf
cs
mov
mov
cmpl
xor
mov
mov
sub
jns
in
test
mov
jb
cld
add
bound
movsl
sub
fimuls
mov
popl
ror
leave
inc
push
dec
cmp
aad
push
test
dec
dec
lret
iret
cmp
idivb
inc
rclb
scas
adc
jnp
movsl
or
mov
mov
out
je
jne
ret
lods
mov
cmp
xchg
addr16
repnz
or
push
add
jbe
mov
push
push
ds
imul
jo
ret
ret
sbb
cmpl
inc
rcl
cmp
xchg
pop
mov
js
das
fisttpll
push
fadds
cltd
pop
das
adc
mov
push
xchg
mov
push
adc
lock
dec
das
or
inc
lods
mov
enter
inc
inc
dec
loope
mov
fsubs
out
daa
mov
sub
xchg
pop
jne
sub
rolb
sbb
and
dec
adc
cmp
add
adc
and
pop
mov
or
pop
xchg
cmp
shll
aad
imul
icebp
test
add
mov
mov
mov
arpl
pop
or
cmp
mov
inc
jne
popf
das
inc
scas
rcrl
adc
xorl
adc
mov
push
add
ret
popf
dec
cmp
mov
sbb
cli
rcll
mov
and
jnp
into
pop
xor
mov
in
das
outsl
sbb
cmpb
cmp
popa
pop
push
push
mov
pop
mov
push
push
sbb
mov
lret
push
ret
out
inc
cmc
imul
je
jb
and
xchg
mov
ds
push
add
push
mov
imul
pop
mov
fdivs
xchg
and
les
hlt
xor
ss
imul
mov
daa
mov
test
xchg
cmp
fcom
out
sbb
cmp
leave
lret
jns
bound
int
inc
push
outsb
pop
dec
and
mov
mov
xchg
or
xlat
test
cmpsb
fdivrs
jp
mov
mov
inc
jge
cmp
ret
mov
xor
jmp
mov
arpl
aas
das
xchg
dec
jl
mov
lods
inc
lahf
cmp
adc
aaa
xchg
mov
insb
or
jl
mov
inc
dec
fcompl
add
in
outsb
sub
pop
inc
nop
insb
sub
and
sti
scas
cmp
andb
cmp
out
push
cmp
out
xor
sub
leave
sarl
mov
cmp
jecxz
add
je
inc
add
xchg
inc
popf
das
loope
adc
out
cld
or
inc
push
push
mov
sarb
inc
adc
dec
nop
stos
mov
jle
cmp
in
int
cmp
popa
loope
jg
inc
arpl
pop
fimuls
mov
lea
imul
shll
arpl
xlat
inc
inc
xchg
pop
cmp
ficoms
aaa
hlt
cmpsl
ret
push
jnp
pop
or
lea
xchg
imul
cmp
mov
inc
mov
popw
cmp
mov
push
sarl
mov
xchg
std
push
sahf
lret
nop
mov
das
int
inc
gs
stc
xor
ja
cmp
lret
fldt
dec
and
les
sbb
or
icebp
push
mov
lock
out
and
js
push
push
cmp
fstl
pop
addl
xchg
fidivrl
cmp
inc
cmpl
sarb
getsec
ret
fst
cmp
scas
cmp
aad
rclb
add
rol
push
insl
pop
hlt
or
mov
outsb
xchg
mov
iret
cmp
inc
mov
pop
cmp
add
lret
pop
and
test
or
das
sbb
cmp
mov
jno
ja
test
push
cmp
in
xor
cs
scas
add
pop
addr16
je
repnz
jb
adc
scas
xchg
cmp
cmpl
cmp
loop
lret
push
mov
inc
sub
stos
pop
add
das
adc
mov
mov
cwtl
pop
out
xor
addl
cmp
mov
inc
inc
add
repnz
inc
add
loop
fs
push
jb
jg
rol
ret
das
out
out
pusha
add
loop
nop
jnp
sti
and
inc
cmp
xchg
icebp
and
test
cmp
popa
mov
dec
pop
jp
out
cmp
rclb
dec
mov
cmp
idivb
lret
adc
inc
and
test
xor
pop
loope
in
fisttpl
add
xor
popf
push
cmp
scas
ds
aaa
scas
gs
insl
jnp
aad
cmp
inc
inc
xchg
push
out
aad
inc
out
in
push
cli
mov
and
xchg
fsubrs
pusha
add
test
cmp
fcoml
sub
cmp
mov
daa
pop
jmp
and
mov
mov
fisubrl
sbb
sbbl
rolb
inc
in
add
sbb
push
gs
sahf
fdiv
fistpll
mov
leave
adc
jnp
xlat
ret
push
ds
cmp
scas
xchg
pop
cmp
ss
or
dec
mov
pop
js
pop
xorb
mov
cmp
imul
sub
out
aas
stos
cmp
inc
xlat
aas
pop
lret
movsl
cmp
sub
mov
insb
out
testl
mov
push
addr16
mov
cmc
lea
mov
inc
clc
mov
test
data16
ss
loope
insl
mov
test
mov
movb
ffreep
and
add
cmpl
aaa
test
mov
mov
inc
lock
lahf
stc
add
pop
cmp
das
loop
cmpsb
shll
lret
add
adc
aaa
push
adc
mov
mov
fisttps
sahf
inc
dec
mov
aaa
fdivrl
cltd
inc
sub
jl
leave
jl
add
pop
imul
rclb
inc
adc
lods
cmp
cmc
pop
cmp
jne
pop
in
lods
cmp
pushf
scas
xchg
cmp
xchg
cltd
inc
nop
lods
mov
test
push
aas
sbb
inc
mov
inc
push
cmp
nop
fcmovnb
adc
sbbl
xchg
mov
scas
inc
mov
or
popa
rcr
jl
hlt
jg
fistpl
testl
mov
inc
sbb
inc
fnstenv
movsl
cmp
jne
insl
ds
cmp
inc
int3
jp
cmp
adc
sbb
lahf
lcall
jle
imul
mov
cmp
lds
cmp
es
and
in
push
cmp
push
mov
enter
idivl
cmp
in
inc
or
cmp
mov
jl
dec
cmp
lock
pop
jb
inc
cmp
xchg
cmp
xlat
popf
ds
inc
repnz
cmp
lock
inc
jns
cmp
stos
in
mov
cmp
push
into
ds
cmp
jns
loopne
inc
xor
mov
mov
fs
push
xchg
cmp
data16
sarl
pop
test
outsb
icebp
cli
test
pop
shlb
jecxz
inc
xorb
pop
push
es
arpl
stos
push
push
pop
adc
test
cs
into
roll
jg
jmp
add
sbb
and
xchg
scas
aas
jne
xchg
in
mov
mov
adc
sarb
sbb
gs
mov
cmp
and
cmp
cmpsb
imul
add
pop
addr16
lods
popf
jp
imul
cmp
dec
sub
addr16
iret
int
paddb
lret
push
and
inc
std
add
inc
dec
cmp
jg
push
mov
xchg
xor
mov
inc
stos
lock
xchg
cmp
xchg
push
std
or
pop
jecxz
cmc
imul
inc
sub
rcr
xchg
inc
fsub
lret
test
pop
xor
mov
cmp
mov
add
mov
mov
test
xor
push
cmp
lea
fsubrs
test
cmpsb
dec
sbb
mov
mov
inc
roll
aas
dec
pop
push
mov
das
pop
imul
out
mov
dec
cmp
inc
loop
imul
xor
adc
mov
or
mov
cld
cmp
xchg
test
dec
dec
and
lea
mov
fimuls
push
fcoml
inc
jne
add
cs
cmpsb
mov
inc
aam
sahf
jmp
into
push
mov
or
push
pop
pop
xlat
xorl
adc
push
mov
adc
mov
jo
inc
aas
or
pop
jl
hlt
cmpsb
add
xchg
fdivrl
repnz
jns
and
repz
cs
icebp
mov
add
push
add
jle
jge
lea
jg
in
dec
inc
cmpsl
sbb
mov
inc
pop
inc
cltd
inc
loopne
dec
cmp
jmp
lds
jge
cmp
mov
push
mov
pop
mov
ret
imul
push
rorb
in
cmp
cmc
adc
das
dec
inc
out
sbb
cmp
adc
shrb
mov
and
cld
mov
cmp
pop
dec
js
lret
xchg
popf
cmp
jge
aaa
pop
ds
sbb
lea
cmp
jns
jp
cmp
inc
adc
out
inc
cmp
jl
xchg
das
je
and
mov
cmp
lds
gs
scas
dec
cmp
sti
fcmovne
push
dec
popa
cmp
in
mov
pop
push
mov
mov
pop
lret
outsl
adc
jae
std
test
aas
jns
xchg
sbb
lea
add
lods
popa
fisubl
xchg
cld
pop
outsl
xchg
xchg
dec
cmp
jne
sbbb
push
cmp
pop
outsb
out
inc
pop
dec
in
js
insl
xchg
nop
das
cmpb
pusha
push
inc
les
aaa
rol
jmp
pop
addr16
das
dec
sarl
test
mov
inc
cmp
notb
out
jge
test
aas
mov
repnz
gs
jmp
jge
fiadds
das
inc
lods
stc
lds
fwait
push
lea
cmp
jg
push
xchg
mov
scas
push
ss
test
ret
sbb
outsb
jmp
popa
mov
hlt
lahf
sub
lock
push
test
cmp
scas
or
cmpsb
xor
jmp
aaa
int
js
lea
aad
inc
aad
in
sub
iret
popf
imul
gs
lahf
jnp
cmp
adc
mov
sarl
dec
in
cmp
jnp
decb
sbb
cmp
inc
mov
mov
mov
dec
lret
addr16
fiadds
aam
pop
cs
loopne
cmp
int3
xor
jns
mov
loop
arpl
lock
cmp
mov
jb
add
push
jb
js
cmp
shrb
mov
aad
xchg
add
sbb
and
jo
shlb
out
shlb
sbb
fdiv
xor
je
lret
dec
or
jb
ret
aaa
insb
imul
push
stos
push
je
es
mov
cmp
hlt
add
mov
sbb
mov
fwait
cmp
dec
sbbb
js
call
xchg
inc
ljmp
adc
cltd
mov
sbb
push
fs
cmp
sarb
test
mov
cld
inc
cwtl
ljmp
jb
stc
pusha
outsb
mov
push
sbb
bound
cwtl
xchg
insb
or
or
push
jbe
lds
in
insb
adc
add
inc
mov
stos
mov
test
push
pop
stc
add
ret
enter
jb
mov
sub
and
sahf
adc
push
mov
scas
pop
enter
mov
dec
ds
out
loop
sub
bound
cld
cmp
pop
pop
xchg
mov
insl
out
inc
sbb
sti
mov
mov
inc
imull
adc
pop
aaa
dec
push
stos
push
lods
leave
mov
push
or
sub
sub
stc
pop
outsb
clc
call
jo
out
in
das
je
neg
inc
sbb
fcomps
fisubs
mov
roll
les
scas
or
cs
mov
sub
sub
or
aam
inc
sub
stos
push
adc
push
or
insb
ficoms
pushf
cwtl
in
int3
mov
ljmp
adc
and
fisubl
and
lea
dec
mov
sbb
add
jnp
jnp
jnp
jnp
jnp
jnp
jnp
mov
jmp
repnz
clc
jo
mov
mov
sahf
lret
sahf
mov
or
pop
enter
pusha
push
loopne
dec
iret
arpl
bound
dec
pop
imul
fcompl
jne
jge
cmp
data16
cld
aam
mov
lds
sbb
pop
pop
mov
insb
cmc
lods
dec
pop
aad
sti
mov
outsl
lret
out
mov
enter
pop
scas
fs
sbb
idivl
sti
or
insb
fisubrs
rcr
fmuls
lret
ret
cmpsl
das
imul
int3
in
jo
sbb
pop
mov
ss
out
dec
cmc
cmp
cwtl
mov
push
sahf
insb
add
dec
cmp
pop
mov
xlat
lret
pop
outsl
loop
mov
push
dec
pusha
xchg
inc
dec
mov
imul
fmul
push
popl
pop
bound
mov
push
push
inc
out
dec
xor
cld
daa
sbb
dec
push
cmc
inc
jns
int3
push
fcomp
and
aam
loop
ret
pop
cmpsl
adcb
inc
pusha
sub
shlb
mov
push
fidivs
repnz
lods
or
dec
sbb
mov
pop
dec
rcl
fmul
stos
rclb
adc
fiadds
in
pop
mov
mov
jecxz
shrb
or
jnp
rcr
and
mov
fcomp
and
cli
lea
pop
je
cld
rcl
lods
insb
sub
push
inc
and
in
shl
adc
inc
adc
jmp
lea
popa
shl
push
pop
or
sahf
addr16
add
rclb
negl
xchg
push
adc
push
shll
mov
add
mov
mov
inc
out
shlb
pop
rol
push
movsl
pop
sbbb
lret
xor
gs
mov
mov
sar
fs
mov
enter
ds
and
insb
ret
pop
je
jae
ret
ret
jmp
insb
ret
into
je
push
test
push
lret
lds
rclb
mov
scas
cmp
adc
lahf
mov
dec
imulb
push
mov
dec
pop
jbe
cmc
in
stos
cmpsl
rorb
pop
lods
jae
cmp
mov
je
popa
xchg
lds
and
mov
pop
repz
push
pop
cmpsl
lds
in
jo
cli
sbb
push
sub
fisubrs
xchg
rcrl
fstpt
aam
xlat
push
or
sarb
mov
sub
cltd
push
xchg
scas
dec
sbb
pop
fnstenv
cmp
cld
arpl
aaa
in
cmp
or
xorb
in
ss
das
sub
sub
sub
push
jne,pt
add
into
aaa
das
cmp
ds
int
jge
xor
out
sbb
xor
push
inc
jle
popa
lret
dec
out
cli
das
jg
cmp
fdiv
cmp
adc
cmp
or
mov
fstps
aam
sub
out
jns
sarb
mov
push
mov
mov
scas
jbe
aas
mov
cmp
ss
push
xor
jb
aad
xchg
jne
int3
cmp
push
call
aas
mov
pushl
push
popa
movsl
inc
fsubs
movsb
imul
jne
movsb
jns
sbb
mov
xor
bound
sbb
ret
daa
clc
pop
cmp
pop
cmp
sbb
cwtl
stc
cmp
sub
hlt
cmp
mov
pop
movups
aam
push
pop
not
lock
mov
out
sub
push
ss
mov
cld
fistl
into
xor
fnstcw
or
repz
mov
push
gs
scas
mov
lea
shll
cmp
mov
or
jmp
stos
mov
lret
mov
sub
jmp
imul
cmp
cmpsl
xchg
push
adc
call
ret
sbb
cmp
mov
stc
in
and
push
mov
dec
sti
jmp
cmp
into
inc
inc
stos
add
negl
int
and
cmp
call
icebp
cmp
aas
sbbb
jno
inc
mov
or
pop
fdivr
pop
adc
adc
insl
cmp
xor
cmp
pushf
mov
js
addr16
pop
shll
mov
pop
add
xchg
dec
aam
cmp
hlt
jle
mov
dec
or
dec
push
cmp
push
lret
ret
adc
sub
sub
inc
sti
sarb
arpl
nop
push
jb
dec
cmp
mov
adc
mov
and
ja
cwtl
cmp
jg
scas
jne
jmp
pop
cmp
imul
or
inc
and
in
ret
cmp
xchg
in
pop
clc
lret
cmp
pop
cmp
cmc
sub
repz
loope
cmp
cmc
ljmp
loop
xchg
jmp
popa
sti
and
subb
sbb
xor
xchg
add
addl
push
fwait
sub
pop
sub
lcall
push
pop
cmp
out
bound
adc
dec
xchg
push
aaa
or
sub
out
pop
jnp
cld
cmpb
mov
jp
dec
insl
cmc
and
mov
pop
scas
xchg
mov
sbb
in
xchg
and
cmp
pop
insl
mulb
test
push
mov
or
push
jbe
cmp
sub
imul
fisubrl
ss
fcoml
scas
pop
pop
cmp
rclb
or
ret
sahf
sbb
cmp
jge
jmp
arpl
test
inc
not
sub
stc
cmp
jle
cmc
clc
cmp
xlat
adc
adc
test
xchg
xchg
mov
pop
mov
mov
loop
into
lods
xchg
lock
insl
inc
std
push
inc
scas
jno
or
cmpsb
dec
cmp
lcall
enter
jmp
xor
mov
dec
aaa
cmpsb
js
mov
jecxz
das
test
push
jno
out
out
aas
fidivl
cmp
out
pop
or
inc
call
lods
cmp
xchg
sbb
sub
dec
xchg
lret
aas
lahf
repz
and
outsl
bound
jo
cli
sarb
popf
mov
outsb
pop
push
dec
cltd
cmp
xor
xor
cmp
jae
in
mov
sahf
fstps
mov
jne
icebp
stos
mov
mov
xchg
add
notb
lods
or
cmp
push
pop
lea
pop
xchg
cmpsl
es
das
adc
adc
icebp
cmp
add
outsl
outsb
imul
push
xchg
das
cmp
rcrb
adc
ret
inc
cmpsb
movsl
jb
faddl
jns
popf
cmc
add
stos
cmp
in
mov
xor
lret
pop
xor
cmp
test
cmp
pop
jo
lret
movsb
push
fstpt
sbb
sub
mov
xchg
cmp
iret
sbb
jb
shl
pop
call
cwtl
push
xorl
or
sahf
xchg
add
mov
imul
lods
ret
mov
jbe
cmp
outsl
fcoms
sbb
mov
mov
cmp
inc
inc
mov
movsl
push
cmp
lods
call
fmuls
dec
add
mov
cmp
out
les
cmp
push
hlt
cmpl
dec
xchg
repz
cwtl
cld
in
mov
js
mov
jp
push
imul
lea
mov
xchg
loop
nop
dec
lds
leave
or
jmp
mov
das
adc
cmp
insl
or
test
jo
mov
or
sbb
cmp
and
cmp
push
jg
cmpsb
outsl
movsbl
jecxz
mov
cmp
lcall
inc
mov
pop
pop
xor
loope
inc
xchg
cmp
lret
jnp
int3
cmp
daa
ja
nop
cmp
jle
xlat
pop
cmp
inc
ja
xchg
cmp
lea
stc
jo
dec
xor
cmp
arpl
push
dec
lret
mov
jge
xor
shr
cmp
sub
xchg
popa
lahf
in
sbb
cmp
das
iret
jb
cmp
test
aaa
cmpsl
test
es
pop
ret
mov
mov
rorl
scas
adc
jecxz
dec
decb
addr16
mov
pop
adc
mov
ror
cmp
and
ja
cli
inc
mov
inc
mov
std
fidivrl
fidivrs
idiv
cmp
jle
imul
pop
sti
stos
jp
add
in
mov
clc
cmc
mov
push
divl
call
cmp
leave
test
mov
xor
fnstenv
sbb
das
movsl
inc
cmp
and
mov
out
mov
pushf
jne
ds
loopne
and
sub
inc
inc
cmp
sub
xlat
push
cmp
fnstenv
jae
repnz
xor
hlt
jne
cmp
jecxz
mov
aaa
and
xchg
lcall
cmp
das
dec
push
xchg
xchg
rorb
add
jne
sbb
aaa
push
loope
adc
ret
mov
idivl
xor
test
lock
xchg
popa
fstpl
xor
inc
push
add
push
fsubrl
adc
cmp
mov
mov
mov
into
xlat
sar
ss
ds
xchg
mull
insb
jb
push
xor
cmp
mov
push
les
enter
out
xchg
stos
andl
cs
pop
pop
rcrl
scas
push
pop
mov
cld
xchg
popa
cmp
pop
pop
outsb
and
fsubrs
jmp
push
js
adcl
xor
aas
lods
dec
enter
cmp
and
cmp
jge
mov
cmp
or
inc
cmp
xchg
xchg
push
test
dec
in
mov
cli
ret
pusha
xchg
inc
arpl
arpl
lods
and
icebp
jmp
cmp
sbbl
mov
test
xchg
icebp
or
mov
cli
lcall
movsl
jmp
and
aaa
jb
adc
dec
cmp
jecxz
dec
fiaddl
push
sbb
cmpsb
mov
cmp
adc
sub
cmp
scas
mov
out
enter
jae
fld
jbe
dec
cmc
jge
ja
cmp
iret
adc
push
pop
out
lods
ljmp
dec
mov
addr16
test
pop
leave
and
bound
pop
jb
mov
out
add
push
jmp
lret
outsl
push
cmp
inc
xchg
add
push
das
scas
mov
xor
xchg
das
adc
and
sub
and
cmp
int
mov
call
stos
jnp
lahf
xchg
sbb
xchg
pusha
das
loop
lret
out
bound
fs
cmp
adc
mov
pusha
sub
dec
lret
imul
jmp
add
outsl
inc
lods
cwtl
add
push
arpl
shlb
rcrl
mov
xorl
pop
adc
and
ret
mul
sub
or
xlat
addr16
aad
push
rol
outsl
stc
loope
inc
cmp
cwtl
bound
push
mov
cmp
stc
cmp
adc
cmp
mov
cmpsl
add
push
jg
mov
pop
adc
adc
fwait
in
mov
and
mov
das
enter
dec
mov
jae
push
fs
cmp
bound
jecxz
add
cli
sbb
outsb
fidivl
cmpsl
sbb
add
push
mov
inc
js
and
lods
fucomi
mov
aaa
dec
jg
int
sbb
nop
inc
cmp
mov
xor
fldl
dec
xor
sbb
movsl
and
cmp
pop
xor
and
cmp
and
mov
pushf
lods
adc
das
testb
popa
arpl
cltd
cmp
repnz
xchg
cmp
jmp
or
cmp
jnp
adcb
pop
pop
mov
mov
test
mov
add
cmp
movsl
jl
fidivrs
lcall
pop
popa
ret
mov
push
sarl
jmp
pop
arpl
jp
jne
sbb
and
shll
inc
push
push
lret
cmp
push
mov
fdivrs
mov
repz
lcall
sub
jbe
push
cmp
aaa
and
cmp
rcl
xchg
imul
out
mov
loop
jmp
lcallw
int3
ficompl
es
and
jecxz
mov
cmp
insb
xor
repnz
jmp
push
cmp
gs
dec
jle
jg
rcrb
dec
lret
sbb
dec
mov
sub
lods
adc
xchg
cmp
pop
mov
scas
aas
test
popa
add
pop
loop
cltd
mov
mov
in
jg
xchg
pusha
inc
nop
jge
out
jl
orb
cwtl
outsl
je
rclb
das
scas
pop
mov
addr16
insl
dec
xchg
fs
fists
test
hlt
xor
jmp
cmp
les
pop
cmpsb
push
cmp
arpl
pop
or
outsl
pop
push
cmpsl
cmp
pop
pop
imul
cmp
dec
jge
outsl
loopne
or
cmp
and
cmp
cmp
mov
push
test
adc
lret
mov
adc
jle
cmp
mov
adc
fisubs
push
outsl
add
es
add
pop
and
nop
mov
and
inc
jle
iret
dec
pop
fwait
mov
pop
pop
dec
cmp
jae
mov
pop
movsl
adc
mov
dec
shll
sahf
mov
dec
jno
loopne
xchg
and
cmp
push
and
cmp
pop
sub
xchg
inc
fbstp
jnp
shrl
mov
into
jle
jge
cs
cmp
sahf
lds
push
jae
xchg
cwtl
loopne
in
mov
icebp
cmp
outsb
mov
mov
movsb
mov
push
jl
loopne
sub
movl
adc
lret
add
mov
dec
push
sti
int3
outsb
sbb
cmp
xchg
dec
xchg
lea
push
int
test
inc
cmp
push
outsl
into
add
daa
loope
loop
cmp
idivl
sbb
in
cmp
sahf
xchg
mov
xchg
inc
fdivrs
xor
pushf
add
and
and
lret
invd
cmp
pop
shlb
xchg
mov
pop
mov
pushf
ds
cmp
bound
xchg
cmp
xchg
in
scas
cmp
int3
dec
sbb
mov
inc
dec
and
add
incb
mov
cmp
lds
testb
call
mov
outsl
push
push
cmp
ss
jmp
sbb
neg
hlt
aaa
xlat
push
insb
jnp
add
enter
in
cmp
pop
push
xor
pop
loop
mov
cmp
rolb
sub
lods
add
cmp
jo
jbe
aas
pop
mov
out
cmp
lahf
xchg
jmp
cmc
sbb
idivl
loop
flds
push
mov
and
push
mov
daa
aas
pop
cmp
dec
and
xor
xchg
outsl
cmp
mov
and
cmp
dec
out
cmp
add
jl
iret
jo
jmp
push
adc
das
jae
add
fistpll
pop
xchg
in
cmp
or
test
out
insb
in
add
jb
and
pop
out
jne
sahf
std
cld
les
inc
cltd
add
add
mov
pop
pusha
cmp
sbbl
hlt
sub
xor
loope
cmp
sbb
cmp
out
push
jnp
mov
rolb
xchg
add
inc
mov
xchg
sbb
and
pop
arpl
dec
orl
movl
test
mov
cld
cmp
xor
cmpl
cmp
mov
sub
outsl
jecxz
sarb
lea
push
cmp
and
arpl
pushf
lcall
xchg
push
dec
cmp
ja
cmp
sub
test
pop
cmc
pushf
fcmovnb
cli
mov
dec
push
dec
sarl
sahf
adc
push
rclb
sub
pop
inc
and
xchg
and
xor
add
mov
mov
insl
cmp
pop
or
mov
pop
in
cmp
cmpsb
popf
sub
mov
xor
cmp
enter
cmp
push
push
xor
cmp
cli
test
push
das
jmp
shr
jl
dec
pop
inc
cmp
jg
jne
adc
jp
aad
lea
or
push
cmp
mov
fcmovbe
cmp
hlt
jg
inc
cmp
xchg
xor
push
and
cmp
pop
loope
xor
pop
sub
jl
mov
dec
ljmp
sub
adc
pop
mov
xor
lret
call
inc
das
adc
ret
and
xchg
push
inc
cmp
stos
xorb
and
mov
dec
aaa
push
xor
mov
stos
cmp
jns
cmp
and
and
mov
inc
xlat
add
sbb
cmp
dec
pop
das
test
fwait
inc
mov
add
scas
enter
fldenv
outsb
arpl
jbe
mov
cs
repz
jnp
or
fcomp
int3
lea
sub
dec
pop
imul
inc
cmpb
fbld
fistl
cmp
add
stos
mov
pop
pusha
pop
pop
cmp
jno
shll
mov
cmp
jns
sbb
cmp
enter
inc
flds
pop
mov
rclb
ljmp
mov
test
add
pusha
arpl
andl
mov
jo
mov
push
add
cmp
xor
cmp
pushf
popa
jg
mov
or
jp
sub
cmp
fcoml
xchg
fs
jmp
data16
call
fisubrl
orl
lret
lea
jo
ds
sbb
add
cmp
aad
add
push
sahf
lds
push
in
in
and
jbe
cvtdq2ps
cld
cmp
sarl
cmp
std
jns
subb
into
xchg
inc
push
pushf
loop
mov
adc
cmp
jnp
repnz
cmp
mov
andb
out
fisttpl
add
aaa
movsl
inc
std
jmp
dec
push
add
xor
out
mov
mov
fucom
lret
and
push
push
fs
lods
lock
test
data16
cmp
jle
inc
adc
pusha
fisttpll
mov
cmp
xchg
mov
jge
out
sbb
xchg
dec
sarl
je
add
divb
cmp
aam
and
inc
je
push
popa
cmp
cmp
xchg
cld
rcl
mov
jbe
and
xchg
mov
push
push
out
jecxz
push
fldenv
repz
xchg
test
mov
out
stc
das
rcl
jmp
popa
cmp
test
dec
sbb
cmp
sarb
hlt
cmp
xor
aaa
push
cmp
daa
cli
je
pop
cmp
scas
jns
mov
sbb
hlt
sti
cmp
xchg
out
lcall
sbb
test
and
push
adc
or
out
int
dec
enter
jmp
loop
mov
pop
call
pop
rcll
xchg
sbb
mov
pushf
test
cmp
inc
cmp
lds
aaa
cmp
les
jae
and
int3
fisubl
xlat
loope
xor
sbb
aam
fldt
mov
cmpsl
cmp
pop
popf
mov
jae
mov
sub
sub
cmp
int
mov
adc
cmp
or
pop
cld
sub
enter
sub
dec
jnp
cmp
and
fistl
lret
mov
cmp
jmp
stc
cs
insb
movsb
mov
push
in
out
std
jnp
adc
cmp
jle
test
sahf
aaa
popa
imul
sbb
inc
mov
adc
into
jge
pop
ret
cmp
or
sub
dec
addr16
and
lret
add
inc
into
pop
and
add
stos
mov
ds
adc
int
mov
cmp
push
cmp
xchg
das
daa
scas
ret
mov
cmp
jp
lea
push
outsb
jbe
test
arpl
bound
pop
pop
xchg
stos
sbb
xor
hlt
mov
pop
shll
repz
inc
pusha
imul
cmp
and
cli
das
std
mov
mov
jecxz
cmp
jb
ds
in
lret
dec
push
fbld
fisubs
bound
push
cmp
scas
les
sahf
cmp
inc
xchg
stos
dec
inc
xchg
cmp
push
clc
leave
cmp
adc
dec
aas
cmp
pusha
mov
add
inc
inc
mov
cltd
sbb
add
inc
into
aaa
leave
shlb
dec
insb
les
cmp
movsl
cwtl
cmpsl
int3
orl
pop
or
je
push
test
mov
loop
cs
cmp
rcrl
mov
das
jae
pop
cmp
cli
xor
imul
pop
out
dec
mov
sub
loop
out
sbb
das
or
sarl
hlt
stc
dec
cmp
outsb
and
cmp
xlat
inc
fsubl
in
sub
or
lret
add
adc
mov
jns
mov
or
jecxz
cmp
push
dec
jo
sub
pop
push
add
mov
cmp
sub
mov
pop
stos
in
sti
imul
ret
testb
jnp
cmp
pop
daa
add
stos
int3
mov
push
fwait
mov
es
fsubrp
cmp
outsl
ljmp
jmp
cmp
adc
data16
out
inc
mov
cmp
add
out
mov
push
jge
scas
cmp
and
ds
cmp
mov
push
pushf
jg
cli
out
dec
cld
inc
pop
cmp
jns
mov
cmp
stos
push
cmp
mov
cld
into
lock
pop
cmp
aad
movsl
mov
daa
xor
cld
add
mov
aaa
and
loopne
lret
lea
xchg
xor
xor
sub
in
lret
in
jo
dec
hlt
jmp
pop
cmp
xchg
loop
aas
fidivrs
dec
push
daa
popf
leave
gs
loop
notl
cmp
jg
test
js
pop
xchg
push
popf
inc
mov
and
mov
add
push
mov
jl
lret
loope
iret
inc
mov
mov
insl
cmp
rorb
mov
ja
mov
das
xchg
imul
dec
int
cmp
int3
add
or
mov
push
cmpsl
cmp
loope
mov
pop
das
xchg
adc
sti
sub
xchg
lcall
popf
fwait
inc
or
rclb
jne
jg
nop
pop
adc
cmp
adc
dec
outsb
inc
cli
inc
cltd
xchg
jne
ds
cmp
int
cmp
push
push
adc
je
push
cmp
loopne
xchg
cmp
je
mov
pop
lahf
cmp
test
push
mov
mov
rolb
inc
mov
cmp
and
dec
inc
test
lea
inc
pop
andl
cmpsl
cmp
mov
ret
addr16
stc
std
stos
cmp
sbb
push
repz
pop
adc
cmp
testb
and
push
movsb
jnp
push
hlt
mov
cmpsl
or
sbb
cmp
jbe
xchg
in
arpl
adc
ror
fs
pop
in
cmp
xchg
lods
xchg
mov
jns
push
aad
jb
mov
cmp
movsw
adc
cmp
mov
imull
cld
mov
jmp
cmc
sub
outsl
xchg
pop
pop
lods
andl
adc
jp
xlat
or
mov
addl
mov
stos
js
fildl
aaa
xor
lcall
push
repnz
aam
clc
nop
pop
ljmp
aad
push
sbb
in
pusha
les
insb
pushf
fidivl
sub
outsl
sarb
leave
mov
fstps
jbe
pop
scas
cmpsl
dec
popf
sti
adc
pop
inc
pop
pusha
adc
pushf
mov
lods
das
imul
push
push
ds
xor
out
sbb
and
push
int
mov
push
push
pushf
pop
cmp
cwtl
cmp
push
fcmovnb
jle
xor
fmuls
cmp
cmpsl
inc
mov
jg
mov
aam
cmp
fistpl
pushf
cmp
xchg
add
push
add
aad
sbbb
sbb
push
push
call
cs
xor
mov
hlt
pushf
aas
mov
dec
inc
push
lods
aaa
inc
push
loop
imul
xchg
jl
sub
mov
jecxz
aad
jl
scas
cmp
out
movsl
inc
out
dec
mov
mov
add
lods
in
mov
clc
iret
xor
ret
ret
jae
cld
shr
sbb
nop
or
ja
xchg
lds
leave
ret
cmp
jl
mov
in
aaa
mov
or
sub
cmp
out
fdivrl
sti
cmp
xlat
imul
add
inc
in
lods
push
and
push
pop
mov
scas
mov
adc
add
inc
je
jnp
mov
cmp
inc
test
mov
icebp
mov
cmp
dec
in
adc
repnz
pop
cmp
sub
test
insb
cmp
sbb
leave
inc
std
push
dec
aam
lods
cmp
in
lahf
push
cli
cmp
jb
rorl
rclb
les
jnp
aaa
xchg
pop
bound
stos
std
jmp
push
mov
lret
cmpsl
arpl
add
insl
sbb
js
cmpsb
cmp
push
outsb
popa
sti
mov
add
inc
cmp
leave
cmp
mov
hlt
xchg
aas
je
mov
push
xchg
mov
xor
les
jb
out
add
mov
stos
lods
cld
adc
cmp
bound
popf
sarl
xorl
mov
cmp
cwtl
push
xchg
or
or
push
js
mov
pop
jnp
das
jae
inc
inc
scas
cmc
rcll
inc
adcb
enter
cmp
pop
adc
dec
sub
xchg
cmpsb
cmp
mov
out
mov
xchg
dec
out
mov
repnz
rorl
jbe
mov
mov
xchg
adc
cld
daa
adc
cmpsl
aas
mov
pop
inc
push
ror
dec
arpl
je
sbb
cli
cmp
xchg
fcom
ror
clc
push
cmp
mov
push
push
lret
cwtl
mov
cmp
xchg
adc
dec
or
gs
pop
xchg
roll
movsl
push
icebp
and
enter
sbb
fsts
out
adc
push
add
fs
add
mov
cmp
jne
stos
scas
cmp
ficompl
xchg
cltd
loope
imul
dec
and
add
jo
mov
push
cltd
dec
sarl
out
cmp
mov
inc
mov
js
inc
jg
push
rorb
pop
lret
in
inc
das
pop
jnp
xor
cmp
imul
mov
inc
mov
lods
pop
pop
sub
add
cmp
cld
sti
popf
jnp
das
insb
dec
adc
cmp
xchg
in
cmp
aad
insb
dec
cmp
les
cmp
pop
cwtl
adc
enter
jb
and
aaa
fmulp
cmp
xchg
push
xchg
les
mov
and
or
sub
adc
rolb
push
into
pop
pop
dec
orl
leave
dec
dec
sarb
push
rorl
add
out
fsin
add
ss
cmp
add
lea
lock
fistpl
push
cmp
inc
daa
cmp
xchg
ja
dec
aaa
call
mov
pop
aam
sbb
sbb
cwtl
loop
cld
enter
cmp
mov
popf
in
pop
dec
inc
aaa
insb
in
outsl
mov
or
fbstp
ret
xchg
mov
test
test
mov
icebp
mov
ja
cmp
or
inc
ss
adc
jle
out
ud2
pop
in
stos
sbb
sbb
int3
push
cmp
add
fwait
es
ret
push
das
sbb
fsubrl
inc
and
xlat
bound
pop
jl
pusha
xor
mov
cmp
repz
orl
jnp
and
cmc
dec
lods
cmp
int
xchg
xchg
jo
pop
xchg
adc
sbb
xor
push
xorb
aaa
incb
rorb
xchg
mov
stos
mov
dec
adc
fisubs
cmp
lret
and
cmp
push
cli
stos
push
cmp
das
dec
dec
pop
inc
mov
xchg
jbe
in
jmp
inc
das
ja
out
scas
jnp
add
adcb
mov
loop
or
cmp
pop
addr16
mov
scas
inc
leave
mov
fmul
sahf
and
sbb
addr16
sbb
cltd
jmp
dec
push
dec
inc
test
inc
add
imul
xchg
insl
dec
nop
xchg
sti
xor
int
filds
adc
das
or
cmp
movsb
popa
and
xlat
add
das
xor
cmpsl
dec
bound
sarl
xchg
shl
adc
or
push
cmp
and
mov
hlt
fnstcw
xchg
inc
stos
add
push
jmp
or
dec
cmp
push
or
push
adc
lcall
jecxz
xor
push
dec
jnp
push
pop
les
clc
jecxz
addr16
cmp
daa
repz
std
cmp
or
das
loopne
mov
repz
inc
mov
cmp
dec
sbb
jmp
mov
mov
jge
pop
add
mov
pushf
test
xchg
xor
ds
inc
push
dec
pop
cmp
and
pushf
dec
cmp
sbb
push
daa
adc
push
imul
iret
mov
dec
xchg
inc
mov
adc
cmp
loopne
cli
idivb
mov
test
cwtl
mov
inc
fmulp
xchg
ja
pushf
cld
sbb
mov
std
test
out
loopne
rcr
addl
aaa
stc
inc
lock
cmp
adcb
cmp
mov
test
cmp
xlat
fisubl
out
or
xor
cmp
xorb
cmp
jns
and
lods
cmp
and
mov
loope
ret
adc
cmp
or
push
sahf
dec
dec
loop
in
add
test
mov
or
jecxz
xor
imul
je
pop
daa
jnp
insb
sbb
stos
jge
les
cmp
std
or
fisubs
sbb
enter
cmp
lahf
in
inc
sub
sub
cmp
inc
not
jbe
xchg
pop
aaa
mov
jp
pop
lret
or
sub
xor
add
xor
sbb
in
fistpll
lret
daa
ja
cmp
xor
jno
jp
xor
jge
mov
in
pop
insl
imul
xor
xor
cmp
cmpl
or
cmp
mov
stos
aaa
cmpsb
dec
loop
sbb
cmp
ljmp
mov
jae
add
out
mov
jl
pop
jnp
push
and
stc
push
and
cmp
ja
andl
aas
jbe
xor
mov
sbb
scas
adc
mov
les
roll
push
cmp
fs
icebp
xor
pop
pop
push
xchg
adc
or
in
cmp
sub
push
xor
mov
mov
mov
cmp
lahf
jno
loope
lea
dec
mov
call
mov
add
outsb
cwtl
mov
dec
fdivl
cmp
int
xchg
push
push
adcb
mov
mov
jnp
cmp
xchg
push
icebp
pop
cmp
iret
pop
ret
xchg
or
lods
in
adc
js
adc
frstor
pop
or
push
ret
fdivp
lods
cmp
sbb
test
lret
pop
ds
xchg
cmp
es
or
enter
cmp
test
add
dec
push
movsb
xchg
pop
mov
add
popa
push
adc
arpl
aad
sub
repnz
dec
jecxz
cmp
mov
sbb
cmpsl
mov
outsl
in
cmp
dec
dec
lds
cmp
cli
dec
add
lret
das
cmp
or
mov
push
ret
mov
pusha
or
and
mov
cmpsl
call
push
dec
mov
jnp
jecxz
sub
cmp
pop
aas
push
jg
jae
sbbb
sbb
push
hlt
and
sti
lods
movsl
jecxz
cmp
jle
cld
xor
shlb
fidivrs
iret
dec
ss
cmp
hlt
mov
out
xlat
out
imulb
gs
ret
cld
fs
pop
xorl
dec
or
jbe
sub
les
aad
mov
cmp
jnp
shrl
adcl
je
stos
paddb
fistps
inc
cmp
lcall
ss
and
out
sub
jg
pop
lods
adc
aaa
addr16
ret
cmp
das
pushf
cmpsl
mov
shlb
push
ds
push
mov
out
cmp
inc
mov
inc
pop
cmc
fsin
jmp
add
add
push
push
add
jno
mov
movsl
test
adc
sbb
add
add
jo
adc
sub
loopne
stc
pop
pop
dec
repz
xchg
fnstcw
rcrb
loope
mov
out
jo
arpl
push
jl
jmp
rclb
in
jecxz
lea
cmp
inc
aam
add
cmp
rcll
adcl
sbb
cmp
cmp
mov
ret
pop
jp
test
repz
mov
cmp
inc
adc
or
gs
cmp
inc
mov
xchg
cmpsl
mov
idivb
mov
mov
inc
cli
sub
sti
xchg
gs
jnp
fwait
dec
add
sahf
cwtl
sbb
cmp
push
inc
in
pop
and
rcrl
mov
and
xchg
lods
xchg
push
frstor
pmaxsw
aas
pop
pop
popa
and
adc
mov
pop
es
cmp
das
lret
mov
xchg
sub
popa
in
js
sub
push
push
dec
shrl
imul
popf
cltd
jno
aas
cmp
test
ja
das
xchg
mov
scas
adc
test
pusha
jns
arpl
xchg
pop
pop
cmp
dec
inc
add
xlat
enter
push
jge
inc
decb
push
dec
cmp
movsl
popf
stos
xchg
push
xchg
mov
sub
mov
sbb
mov
mov
xor
cmpsb
adc
aaa
mov
add
xor
xchg
cmp
pop
or
cmp
mov
mov
popf
in
shl
sarb
or
loopne
movsl
dec
xor
rcrb
inc
jp
jle
mov
int
xchg
sti
bound
test
pop
jb
imul
test
pop
cmp
fs
fdivrs
mov
cmp
cld
aam
xchg
cli
cs
add
push
popf
pop
and
push
scas
rcrb
sbb
insb
and
mov
enter
xlat
push
mov
cmp
adc
aam
sub
and
cmpb
rcll
je
push
subl
test
shll
test
mov
nop
das
frstor
orl
loopne
pop
dec
cmp
sbb
sarb
sarb
hlt
push
sahf
fistl
adc
fsubl
lahf
mov
xchg
imul
int3
cmp
cld
add
outsl
jle
leave
fstps
aam
jb
ret
cmpsb
cmpsl
push
push
les
pop
roll
sub
gs
imul
jg
mov
loope
fldl
push
imul
addl
jo
cmp
cltd
and
mov
inc
bound
jae
xchg
cmp
xchg
aad
outsb
aaa
dec
pop
aam
and
sub
cmp
into
js
mov
bound
in
enter
cmp
scas
xor
cmp
lods
bnd
das
push
stos
sbb
sbb
xor
add
xor
loopne
cmp
fwait
bound
xchg
fs
push
inc
daa
add
jnp
cmp
les
cmp
addr16
and
cmp
movsl
cltd
mov
out
mul
xor
cmp
leave
cs
pusha
cmp
add
xchg
negl
cli
lods
and
repz
xchg
add
out
cmc
mov
pop
sarl
dec
lock
cmp
jle
es
lahf
push
nop
adc
xor
and
xorl
popa
mov
add
aaa
jg
bound
add
cmp
pcmpgtd
inc
xor
add
std
dec
and
mov
call
cmp
jbe
mov
aad
outsl
aas
das
cmp
sub
cmp
mov
mov
mov
roll
xchg
scas
cmp
lea
inc
inc
cmp
gs
and
and
add
popl
aaa
push
out
inc
push
fstps
push
mov
mov
es
loop
dec
das
les
out
cmp
add
mov
cmp
aad
sub
rol
xor
enter
inc
cmp
sub
jne
mov
adc
enter
xor
lcall
cmp
pop
push
mov
cmp
sub
add
mov
scas
or
xor
add
adc
cmp
jne
sub
mov
arpl
ret
inc
xor
lods
loopne
cmpsb
orl
add
mov
aam
inc
repnz
push
add
cwtl
push
inc
punpcklbw
addl
insb
jp
xchg
sbb
xor
adc
jmp
xlat
mov
sbb
push
pop
jo
iret
pop
stos
cmp
mov
sarl
out
mov
leave
pop
xor
push
ret
enter
adc
fdivrl
dec
and
ja
pop
dec
das
push
push
rorb
dec
ljmp
pop
and
mov
test
std
leave
cmp
loope
and
cmp
loopne
pop
mov
cmp
dec
push
mov
insb
push
xor
aad
ss
in
cmpsb
cmp
aam
pop
cwtl
cmp
std
lcall
rcr
jno
xchg
cmp
pusha
mov
jne
cli
cmp
sbb
ss
mov
inc
adc
cmp
popa
and
movsl
repnz
das
nop
fwait
je
pop
or
fists
mov
cmp
add
loop
push
cmp
jnp
out
and
mov
pop
jp
inc
leave
cmp
dec
movsl
insb
jb
mov
loopne
enter
cmpb
cmp
popf
jl
lods
sahf
dec
mov
cmp
or
jae
test
cmp
xchg
subl
add
leave
sbb
std
outsb
pop
lea
add
jno
mov
jo
ja
cmp
pop
ret
nop
mov
stos
inc
mov
pop
adc
inc
fldt
cmp
xchg
cmp
imul
pop
test
aas
jno
into
jmp
enter
adc
adc
and
shl
ret
xor
stos
push
cmp
cmpsl
test
mov
fsubrl
sti
pop
lock
and
cmp
test
in
add
lcall
inc
inc
les
pop
rorb
out
popf
xor
sbb
add
stc
jge
arpl
shrb
aaa
pop
nop
test
ljmp
fdiv
jae
push
test
scas
mov
adc
andl
inc
cmp
push
shll
push
or
xor
gs
dec
mov
cmp
in
push
scas
fsubl
aaa
test
xor
or
cmp
imul
inc
movsl
fidivrs
mov
xchg
xlat
bound
cmp
or
into
pusha
cmp
fwait
xchg
loop
dec
add
or
enter
popa
arpl
fwait
test
pop
repnz
jnp
rorb
clc
mov
push
insb
mov
cmp
aas
cmp
jo
loopne
arpl
inc
mov
xchg
pop
cmp
stc
les
cmc
push
dec
xchg
in
out
negl
adcl
das
pop
and
push
sar
aaa
cmp
lea
jmp
sub
ficomps
inc
xor
cmpsb
cmp
mov
stc
xchg
stos
popl
cmpsb
incb
mov
ss
jle
sub
ficompl
repz
lods
out
inc
in
mov
and
js
or
stc
enter
repnz
ss
sub
mov
outsl
sahf
cmp
imul
in
or
dec
inc
bound
push
popa
xor
lret
cmp
fadds
mulb
xchg
test
stos
in
xchg
insl
dec
ss
fildl
push
xor
jecxz
sub
int3
loop
and
jnp
ds
sub
or
cmp
insl
mov
nop
cmp
out
jecxz
sbb
testb
jbe
mov
cmp
xchg
push
sub
fsubl
fstpl
arpl
jl
insl
popa
adc
roll
pop
mov
pop
dec
cmp
fwait
xchg
xor
in
ret
lret
or
push
cmp
inc
into
iret
cmp
popl
int
or
lret
mov
loopne
mov
pop
jecxz
cmp
mov
jae
xor
pop
mov
jae
push
jo
xchg
or
rcrl
adc
cmp
mov
dec
mov
push
jg
push
fsubr
inc
cmp
cmp
dec
jo
cs
cmp
pop
or
mov
sti
loop
lret
sub
shlb
add
sub
imul
insl
cmp
hlt
sub
cmp
adc
mov
dec
inc
cmp
jg
sub
cmp
sub
icebp
pop
pop
insl
cmp
leave
adc
arpl
scas
inc
push
xchg
cmp
call
adc
cmp
add
es
cmp
dec
sub
pushf
clc
adc
ds
mov
outsb
int
cmp
jp
hlt
repnz
stos
xor
cmp
pop
outsl
gs
mov
ret
ret
and
insl
cmp
test
xchg
xchg
es
jno
add
jo
inc
addr16
and
xchg
movsl
out
shrl
cmp
ficoms
mov
cmp
cmpsl
rcr
lret
pop
dec
push
cmp
cmp
inc
or
and
imul
jge
push
cmp
arpl
mov
je
jb
sub
aaa
and
rcl
ljmp
lret
dec
sub
jge
mov
popa
pop
pop
outsb
xor
int3
or
sahf
test
das
fnsave
sbb
ds
fnstcw
rorb
sub
pop
xchg
cld
ljmp
push
into
inc
mov
cmp
arpl
leave
pusha
sub
fcoml
mov
push
mov
popa
xchg
inc
mov
insl
out
cmp
repz
adc
popa
add
mov
das
aad
outsl
or
inc
and
movsb
adc
xchg
and
fninit
lcall
pusha
bound
das
leave
outsb
jl
sbbl
testl
cmp
inc
push
sub
cmp
sub
mov
xchg
inc
cltd
pop
lcall
fsts
or
sarl
outsb
sbb
add
stos
fmul
hlt
ds
cmp
jno
push
pusha
cmp
add
cltd
fabs
add
lret
cmp
repz
jbe
lret
push
cmp
sub
fildl
cmp
inc
enter
pop
mov
xchg
cmp
fildll
add
sub
cmp
mov
std
mov
add
and
ret
and
mov
in
cmp
loope
fsub
in
xlat
scas
stos
cmp
xchg
inc
add
pushf
jg
in
xchg
in
cmp
std
pop
mov
dec
bound
or
push
pop
cmp
jle
add
cmp
inc
fildl
cmp
jg
icebp
add
imul
sti
sbb
scas
jnp
xor
and
dec
das
xor
loope
add
or
je
in
mov
pop
cmovo
sbb
cmp
cmpsb
mov
out
aaa
mov
outsb
jmp
shrb
cmp
repz
mov
sti
js
inc
mov
push
inc
mov
xchg
test
repnz
xorl
loopne
add
mov
xchg
leave
iret
pop
or
sbb
push
addr16
lret
popa
loope
sbb
lods
dec
jmp
pop
pop
outsb
pop
sbb
js
stos
stos
mov
loope
loopne
gs
std
sbb
inc
cmp
and
pop
and
es
cmp
pop
mov
mov
push
push
push
aaa
mov
add
les
test
inc
int3
into
daa
or
test
rcll
or
imul
cld
das
iret
mov
inc
sarb
test
cmp
dec
sbbb
std
ret
push
test
mov
enter
pop
inc
addr16
mov
outsl
xor
mov
cs
sub
loopne
cmp
mov
inc
jo
popf
pop
test
jnp
dec
push
ret
aaa
jecxz
test
push
jmp
fwait
or
jbe
push
and
loope
cld
mov
xor
aaa
lea
mov
dec
cmp
mov
cmpsl
sub
and
repnz
ljmp
cmp
inc
push
mov
icebp
push
lret
add
cmpsl
jmp
add
pop
fnstsw
dec
addl
lods
jl
ljmp
adc
jne
test
xor
inc
mov
stos
xchg
ret
cmp
mov
dec
hlt
enter
inc
fnstenv
popa
fs
pop
in
fcoml
push
mov
cmpl
and
sbb
push
push
mov
dec
or
cmp
add
cmpsb
and
mov
cmp
mov
add
cmc
lods
mov
adc
push
xchg
arpl
dec
mov
test
imul
daa
aas
bound
jp
mov
mov
xor
pop
jae
in
push
ret
mov
arpl
inc
inc
cs
adc
sbb
xor
ret
inc
mov
ja
fwait
add
xchg
call
xchg
mov
push
inc
ds
dec
cmp
imul
mov
lods
inc
dec
inc
test
je
stc
ret
in
int
dec
or
insl
push
jb
push
sub
out
aam
mov
inc
xor
ds
leave
rcrl
xor
movsl
cmp
fwait
xchg
and
faddl
mov
pop
les
pop
cmpsl
pop
loop
xchg
mov
push
sub
jnp
icebp
aam
cmp
punpckldq
cmp
fwait
inc
in
in
jle
stos
lcall
pop
pushf
inc
cwtl
cmpl
cmp
fwait
movsl
sahf
aad
lock
fists
push
jae
enter
adc
mov
push
movsl
fwait
lahf
xchg
cmp
cmp
stos
loop
adc
add
ss
cmp
int
inc
fldt
cmp
dec
push
xor
aaa
inc
test
cmp
popf
lret
push
lods
nop
add
pop
pusha
mov
sti
into
hlt
jb
inc
fcomi
lods
pop
int3
fs
leave
rorb
cmp
mov
filds
cmp
mov
fldt
aaa
not
leave
das
mov
fwait
and
aaa
lock
hlt
ss
movsl
pop
mov
aas
cmp
add
push
cmp
lret
bound
addr16
push
sarl
xchg
xor
xor
hlt
cld
sub
pop
sbb
out
sub
adc
pusha
and
pop
ret
cmpl
pop
decb
cmp
lret
and
cmc
leave
sbb
dec
popf
cmp
pop
xchg
fcmovbe
add
sub
dec
outsb
push
push
lahf
cmp
push
leave
dec
inc
mov
sub
push
pop
cmp
xchg
jae
insl
cmp
cmp
les
push
orl
mov
cmp
cmpb
jb
xchg
ret
aaa
xchg
or
mov
fnsave
inc
push
mov
lds
or
add
xchg
cltd
push
jle
push
pushf
pop
mov
lret
ljmp
cmp
repnz
iret
addr16
xor
stos
push
cmp
lahf
out
xchg
cmp
into
add
dec
cmp
inc
xchg
test
cmp
fucomip
sub
cmp
test
iret
cmp
movsl
add
das
stos
and
fdiv
cmp
push
adc
cmp
push
push
and
cmp
xchg
iret
pop
pop
jp
xchg
pop
call
out
cmp
push
inc
ds
cmp
repnz
movsb
inc
cmp
call
ficompl
cmp
outsb
lret
cmp
inc
mov
xchg
fwait
pxor
call
cmpl
mov
xchg
dec
addr16
jl
or
sub
cmp
pop
mov
or
mov
call
std
jne
das
mov
mov
in
jmp
sahf
loope
jae
sar
stos
cmp
rcl
pop
xor
nop
bound
mov
stos
test
dec
inc
test
push
lret
repz
cmp
pop
push
cmp
or
pop
sbb
jae
sub
and
push
std
cmp
cmp
cmp
das
icebp
jg
arpl
into
mov
mov
loopne
pop
inc
and
cmp
leave
popa
add
cmp
pop
mov
push
shll
jmp
cmp
stos
mov
mov
pop
add
leave
cmpsl
arpl
adc
add
mov
and
je
push
inc
faddl
cmp
lret
cltd
mov
cmp
sbb
pop
scas
lock
mov
aaa
movsl
xlat
sub
sub
stc
sbb
outsb
and
cmp
cmp
add
movsl
mov
push
pop
xor
fldt
mov
lea
pop
cmpsb
ds
es
dec
cmp
ror
loope
fistl
scas
scas
jo
cmp
movsb
lahf
pop
ljmp
cmp
ficoml
cmc
xor
stos
jno
xlat
cmp
shr
je
out
fs
loop
and
aaa
inc
push
lahf
dec
pop
jg
fistpll
xchg
nop
cmp
add
and
and
sub
push
bound
mov
dec
jmp
mov
sub
mov
and
xchg
cmp
mov
outsb
sub
fsts
aam
mov
xchg
xchg
or
icebp
sti
lods
mov
sbb
shr
cmp
cwtl
mov
aam
iret
add
lret
push
pop
jnp
test
add
aas
mov
or
cmp
xchg
xchg
daa
pushf
cmp
ficompl
aaa
jno
scas
ds
cmp
jge
rolb
cmp
sahf
subb
and
test
mov
mov
cmp
or
cmp
jo
out
sub
or
jno
adc
aaa
pop
jb
mov
insb
cmp
xor
and
repz
pop
in
mov
dec
in
xchg
lcall
scas
pushf
adc
sti
jne
cmp
mov
jl
inc
xor
pop
pop
cmp
scas
or
pop
cmp
mov
adc
out
out
mov
dec
insb
pop
dec
or
shl
neg
test
cmp
cmpsl
mov
dec
pop
pop
inc
xorb
pop
iret
int
cmp
daa
jne
out
test
xchg
enter
cmp
dec
int
jg
or
jne
xor
push
add
mov
jp
dec
mov
add
mov
sarl
rcrl
test
jns
jp
xor
cmp
mov
dec
ss
dec
cmp
rol
test
inc
out
pop
mov
cmpsl
xchg
das
adc
loopne,pt
fcoml
ret
cmp
xor
lcall
xor
aas
std
cmp
fistps
cld
mov
cmp
dec
aam
add
xor
push
mov
or
pop
pop
icebp
mov
xchg
jae
fldt
cmp
rol
push
mov
aaa
dec
cmpl
add
push
mov
std
xchg
lods
rcrl
jp
scas
cmp
sbb
call
jne
xchg
js
cmp
enter
xor
arpl
jne
daa
stos
xchg
mov
js,pn
sbb
dec
push
dec
adc
cmp
leave
mov
add
lock
adc
lret
cmp
pop
jge
cmp
int
cmc
pop
das
fstl
mov
and
cmp
int3
push
lock
xor
test
mov
ljmp
mov
pushf
cmp
or
lods
imul
loopne
dec
jnp
insb
and
fisttpl
int
push
faddl
sarb
mov
arpl
stos
jnp
or
cmp
shll
sar
int
cmp
out
add
xor
pop
or
add
and
dec
aas
test
test
std
lods
repz
dec
mov
int3
dec
cmp
mov
inc
loop
add
pop
cmp
mov
jns
bsf
int
pusha
outsl
push
cmp
test
std
mov
mov
or
in
and
jp
in
mov
ret
cwtl
je
test
xor
push
jnp
pop
ret
add
dec
xchg
xchg
cmp
fidivs
nop
xchg
pop
jmp
fwait
outsb
testl
and
adc
idivb
jae
cmc
icebp
push
pop
sbb
iret
lods
cmp
cmpsb
nop
cmp
and
adc
in
push
cmpsl
push
call
add
insb
push
or
push
push
cmp
addr16
push
aas
cmp
push
imul
xor
mov
pop
add
aas
outsl
mov
ljmp
rcll
std
adc
xchg
jno
das
jmp
xchg
jle
ja
jl
xchg
push
mov
mov
pop
inc
sub
add
xor
out
dec
jmp
aam
daa
int3
enter
mov
insl
cmp
stos
bound
and
sti
sbb
jl
jg
push
xchg
dec
xchg
jns
sbb
out
cld
jl
lcall
jmp
mov
xchg
cmp
in
mov
sbb
sbb
mov
imul
adc
jp
jge
mov
add
mov
and
pop
out
cmc
or
rcll
jle
cmp
jl
sub
lock
loope
imul
push
adc
cmp
push
das
jge
mov
insl
sbb
push
add
sarl
or
aam
in
int3
cmp
icebp
xchg
xchg
dec
aaa
lods
out
lock
cmp
lcall
adc
xor
arpl
decb
repnz
or
in
xchg
cmp
and
aas
imul
pop
mov
scas
add
mov
dec
sub
pusha
pop
sub
loopne
das
cs
add
lcall
push
xor
add
leave
mov
pop
xor
cld
adc
push
imulb
mov
jno
ss
es
and
xlat
call
or
sbbb
fiaddl
or
out
stos
jne
sbb
aad
aaa
out
and
es
inc
sub
icebp
movsl
xor
push
subb
mov
cmp
dec
scas
jns
scas
gs
ljmpw
mov
add
add
stc
cmp
pop
das
fildl
lock
or
mov
insb
push
ds
mov
pop
xchg
cmp
mov
ds
push
movsl
icebp
out
mov
and
rcrb
add
jecxz
sbb
in
sub
cmc
dec
xchg
ja
cmp
lock
test
test
ret
jae
les
popf
mov
fldl
cmp
inc
mov
push
out
push
pop
je
pop
cmp
movsb
into
loopne
inc
clc
cmp
sbb
adc
or
cmp
pusha
rclb
ret
inc
in
pop
fwait
sub
pop
test
les
cmp
jle
addr16
cmp
xor
in
ss
mov
fistpl
cmp
mov
xchg
or
cmp
jl
mov
addr16
jl
lcall
cs
mov
inc
jg
insl
loop
fcoml
mov
jb
adc
sub
add
and
mov
jbe
mov
shlb
pusha
xchg
cmpsb
movb
lret
test
aas
mov
lahf
jmp
cmp
aad
cmp
cmp
pop
in
fs
cwtl
cmp
cmp
stos
daa
dec
jne
adc
arpl
inc
mov
repz
jl
test
and
xor
fmull
nop
lods
cmp
and
mov
lcall
je
cmp
mov
cmp
and
fistpll
aad
xchg
or
and
jns
out
out
jmp
out
dec
hlt
ret
xchg
adc
or
inc
jbe
test
in
jg
stos
fwait
mov
sub
add
arpl
xor
dec
ss
inc
aas
stos
pop
cmp
xchg
jmp
and
cmp
jo
repz
lods
inc
cmpl
in
iret
cmp
xchg
aaa
shl
dec
mov
dec
cmp
ss
mov
add
mov
xchg
addr16
in
jl
mov
cmp
subb
cltd
mov
xchg
push
cwtl
sbb
dec
pop
das
orb
and
mov
cmpsb
cmp
jnp
push
insb
int3
out
cmp
pop
sub
inc
cs
cmp
imul
add
jns
mov
cmp
cmc
mov
testb
inc
das
push
dec
decb
cmp
or
xchg
mov
or
iret
aaa
stos
mov
sub
cmp
push
ds
inc
dec
inc
cmp
mov
xor
cmp
jae
dec
cmp
fcmovne
inc
inc
xor
lret
push
fs
adc
mov
dec
fbld
xor
in
adc
jge
shll
cmp
idiv
es
cmp
push
jl
addr16
jg
pusha
mov
roll
lods
int
sarl
sbb
cmp
imul
mov
popa
fwait
in
or
inc
cmp
mov
gs
hlt
imul
icebp
cmpsl
jmp
cmp
xchg
aas
lods
fnstcw
sub
cwtl
enter
mov
sahf
sub
jmp
add
add
add
mov
leave
dec
jg
out
std
xchg
mov
scas
jl
xchg
outsl
pop
aam
cmp
or
fldl
icebp
in
xchg
cmp
or
push
or
dec
loope
inc
mov
dec
cmp
mov
xlat
xchg
aaa
pushf
xchg
lods
fildll
pop
mov
fwait
inc
dec
cmp
popa
scas
pop
cmpsl
cmp
jb
lahf
out
add
adc
mov
push
cmp
mov
dec
js
enter
push
mov
xlat
das
pop
out
sbb
lds
test
jno
sub
outsb
pop
adc
bound
mov
cmp
xchg
adc
int3
test
lds
rcrl
push
ficoml
stos
ja
das
or
jbe
dec
jae
fs
pusha
lds
sbb
cmp
or
sub
xchg
in
xor
outsb
test
iret
shlb
cmp
std
dec
xor
in
fnsave
outsb
data16
mov
das
in
ficoms
call
sbb
dec
push
cmp
and
sub
sarl
test
cmp
adc
out
movsb
add
cmp
mov
lret
push
shlb
add
idivb
loop
lret
int3
dec
sarb
ja
inc
cs
je
movsl
xchg
aaa
pop
out
test
mov
outsl
pop
push
lds
sbb
add
jmp
movsl
repnz
and
pop
ret
imul
test
cltd
mov
shrl
mov
mov
pop
cmp
inc
adc
stos
cmp
shrb
bound
add
dec
pop
cld
lds
mov
int3
jae
cmp
loopne
add
lock
data16
mov
pop
std
xor
mov
mov
mov
sbb
addb
movsl
lret
out
jns
cmp
sti
aam
cmp
sarb
inc
mov
push
lahf
out
sub
sbb
cmp
and
mov
jle
cmp
mov
mov
cmp
es
cmp
pop
loop
sub
stc
movsl
pusha
and
pop
jnp
add
data16
xchg
lcall
xor
in
mov
xchg
ja
cmp
sbb
and
or
in
inc
in
insl
imul
int
cltd
movsl
fwait
jecxz
lcall
xor
mov
call
push
pop
push
jno
jle
dec
cmp
xchg
rcl
imul
or
pop
xchg
and
nop
push
cmp
lods
mov
or
mov
cmp
cmp
pop
fs
mov
xor
jb
loopne
cld
test
cmp
push
imulb
test
imul
lcall
jge
or
outsl
arpl
leave
cmpsl
add
inc
adc
push
xchg
test
les
or
cltd
iret
pop
pop
ret
das
out
ret
push
fwait
mov
incb
push
mov
mov
push
inc
mov
xor
in
cmp
mov
mov
jmp
inc
adc
jns
and
repz
in
jnp
cmpsb
dec
cmp
mov
jecxz
test
add
cmpl
in
out
cmp
xchg
fwait
push
scas
cmp
push
or
push
aaa
and
cmpsl
mov
jmp
pop
popa
cmp
pop
sarb
dec
lret
mov
addl
and
test
adc
cmc
add
enter
xchg
xor
cmp
test
scas
pop
out
sbb
pop
and
pop
xchg
rolb
sub
pusha
jl
fsts
pop
and
cmc
mov
add
ljmp
mov
adc
in
mov
out
sub
cmp
or
sub
loopne
cmpsb
test
lods
addb
and
xor
cmp
inc
mov
mov
cld
cmp
cmpsb
es
mov
mov
fnsave
push
add
sub
mov
jns
sub
addl
mov
pop
scas
mov
push
fisubrs
shl
push
mov
cmp
mov
pop
scas
ficomps
mov
pop
jle
add
sbb
cmp
in
or
cmp
shlb
adc
in
cmp
mov
xchg
mov
mov
xor
push
add
les
mov
ja
cmp
fisubl
inc
test
pop
inc
inc
push
cmp
gs
rep
cmp
push
xor
mov
cmp
fs
pushf
pop
sbb
xchg
fadd
repnz
xchg
sbb
cmp
shll
jbe
aam
test
addb
jmp
pushf
int
flds
add
and
xlat
rolb
js
cmp
rol
mov
into
dec
adc
loop
notb
orb
xor
dec
lret
push
cmp
ret
push
cmp
sub
ret
jecxz
jns
and
cmc
jo
jl
mov
outsb
pop
dec
mov
adc
lods
inc
pop
scas
mov
cmp
rcrl
stos
fidivrs
scas
push
sbb
cwtl
cmp
popf
mov
xchg
cmpsl
cmp
outsb
mov
sti
sub
cmpl
cmp
mov
inc
cmp
xchg
mov
add
dec
cmc
or
pop
rorl
mov
mov
mov
push
int3
les
aaa
xchg
mov
fsubs
je
stos
call
mov
insl
jmp
inc
cmp
ljmp
push
mov
fnstcw
mov
xchg
bound
inc
sbb
movsb
adc
push
and
add
cmp
das
mov
adc
out
insl
mov
fmulp
test
ss
and
enter
or
je
ficoml
cmp
mov
sbb
cmp
or
test
mov
jns
adc
xor
shr
cmp
mov
nop
icebp
mov
cmp
inc
jns
arpl
pop
divb
hlt
sbb
cmp
cmp
int
add
mov
push
cmp
aam
cld
push
xchg
pop
sti
sarl
sub
cmp
pop
lret
cmp
lahf
mov
cmp
movl
out
test
mov
mov
stos
cmp
movsl
xor
aam
push
mov
or
cmp
iret
xor
pop
ret
sahf
leave
jecxz
add
cmp
sub
mov
cmp
stos
jbe
pop
add
divps
mov
in
add
push
xchg
cmp
dec
pop
lods
ds
rcrb
fwait
rcl
fstl
push
fadd
mov
pushf
and
lahf
xor
jnp
stos
das
insl
push
arpl
cmc
inc
cmp
stc
out
pop
adc
test
cmp
cmp
push
aad
dec
xchg
xchg
cmp
shll
loop
mov
lock
movsl
lods
jbe
pop
cmp
out
cmp
mov
mov
cmp
jle
xchg
sarl
das
std
cwtl
dec
dec
mov
xchg
fdiv
in
mov
pop
cmp
ds
sar
arpl
pop
fnstsw
pop
mov
mov
test
jmp
dec
fadds
xchg
ja
sti
or
fisubs
aaa
sbbb
push
mov
adc
push
inc
xor
in
call
push
jecxz
or
jne
cmp
rcr
inc
add
jns
and
cmp
push
pop
mov
cmp
jbe
rcrl
fidivrs
inc
call
add
cmc
dec
lea
mov
sbb
scas
cld
pop
cmpsl
cmp
insl
cltd
or
movsl
xchg
sub
dec
cmp
out
in
in
pop
jmp
cmp
pop
in
enter
ds
das
xor
push
roll
shl
xor
mov
sti
jnp
jl
fstl
cltd
adc
call
inc
xchg
lret
cmp
inc
xchg
cmpsl
adc
fs
cmp
dec
into
cmp
mov
mov
insl
cmp
stos
mov
sbb
mov
les
dec
cmp
insb
jo
push
pop
shlb
and
cmp
sub
adc
repz
lea
push
adc
test
stos
int
and
sbb
inc
cs
pop
cmp
bound
cmp
out
lcall
or
insl
pop
sarl
inc
out
cmp
sub
ret
add
push
popa
shlb
sub
mov
xor
adc
stc
jb
mov
sarl
das
mov
into
jne
cmp
mov
or
pop
rol
fimull
pop
xor
sbb
ja
add
push
cmpl
add
leave
cmp
push
xchg
cmp
jmp
mov
popa
mov
fdivrs
add
mov
pop
jmp
mov
mov
mov
lret
cmp
jae
clc
bound
cmp
cmp
xchg
jnp
cmp
mov
pop
loopne
jno
pop
mov
rcrb
ss
cs
shr
add
jae
testl
subb
push
dec
clc
jg
adc
ror
enter
xchg
sbb
sub
call
outsl
out
shlb
push
stos
cmp
mov
fsubrl
aam
push
imul
cwtl
mov
mov
aaa
jbe
in
cmp
clc
push
dec
push
iret
fwait
test
xor
inc
dec
sarl
cmp
push
cltd
lds
and
in
jne
es
popa
push
das
and
jp
les
ret
inc
mov
mov
mov
cmpsb
das
es
aas
cmpl
mov
cmp
or
add
scas
push
xor
cmc
inc
push
cmp
push
ja
push
rolb
inc
and
lea
scas
mov
cmp
inc
pop
inc
sti
inc
or
mov
cmp
cwtl
push
das
xchg
pop
imul
je
cmp
add
lods
xchg
push
xor
dec
cmp
xchg
mov
mov
pop
in
cmp
cltd
mov
jo
stos
shlb
pop
sub
mov
sub
add
mov
and
idiv
fwait
push
cmp
pop
repz
pop
xor
test
adc
imul
sbb
sub
add
test
mov
cwtl
or
jle
mov
mov
ret
idivl
mov
xor
or
push
cmp
sbb
and
cmp
adc
push
andl
push
jbe
sti
test
add
cmp
inc
push
lret
push
jbe
pusha
cmp
sub
xchg
icebp
xor
mov
add
mov
add
iret
dec
pop
xlat
aad
jge
bound
rcll
jnp
lods
fwait
pusha
mov
fs
sbb
test
and
in
xchg
js
stos
test
cmp
ret
lcall
add
xchg
inc
retw
lds
push
push
and
add
cmp
pop
dec
pop
sarl
movsl
cmp
dec
fisttps
cmp
jae
and
add
aaa
into
sbb
ja
and
inc
push
das
cs
push
mov
and
addb
lcall
cmp
nop
pop
sub
inc
lahf
cwtl
test
call
push
xor
cmp
add
jne
cmp
aam
mov
pusha
fsubrs
ds
inc
cli
jge
out
cld
mov
fnstenv
dec
popa
int
enter
les
mov
cmp
bound
pop
in
mov
cmp
pop
sub
leave
das
or
mov
aaa
sbb
pop
cli
daa
push
pusha
insl
cmp
mov
lret
and
int
outsb
cmpsb
mov
push
cmp
std
fcompl
pop
cmp
jle
cmp
les
enter
ja
pop
xchg
cltd
aam
add
inc
mov
mov
xor
sub
inc
cld
mov
sbb
mov
and
cmp
cmp
sahf
pop
loope
aaa
dec
xor
pop
mov
xchg
cmp
jge
leave
jl
jb
sbb
dec
shr
cmp
xchg
dec
push
mov
das
pusha
fcomip
addr16
fwait
aas
jle
ror
xlat
xor
cli
push
mov
je
cmp
mov
xchg
lods
cmp
xlat
xchg
lds
push
mov
jle
xchg
or
cmp
inc
sbb
das
add
popf
inc
fsubl
hlt
or
xchg
push
addr16
mov
movsl
repz
pop
pop
lret
sub
lcall
scas
mov
cmp
mov
out
cmp
sbb
xlat
cmp
sub
push
mov
or
mov
sbb
mov
xchg
push
push
js
cmp
mov
ja
cmp
iret
cmpsl
into
int3
and
or
xchg
and
jle
sti
pop
sahf
sbbl
and
inc
cmp
cmp
pop
pop
int
pop
jg
mov
inc
sbb
or
fiaddl
cmp
mov
dec
pop
fs
jns
cmp
jb
int
int3
xchg
xchg
cmp
mov
sub
adc
mov
cmpsb
lcall
repz
fcomps
adc
push
xor
push
test
jl
cmpsb
or
xchg
xlat
jmp
sti
adc
pop
sub
out
push
mov
push
add
jle
add
and
and
mov
add
popf
mov
xor
in
mov
mov
xchg
mov
pop
cltd
jns
push
fdivrs
mov
sub
mov
xchg
pop
xchg
inc
pop
jne
addr16
popa
mov
sahf
xorl
and
cmp
scas
arpl
fwait
mov
lret
xlat
cmpsb
adc
mov
adc
fstpl
imul
cmp
jle
inc
addl
pop
cmp
decb
cmp
mov
xor
rcll
cmp
push
dec
or
popf
lea
sub
push
cmp
fisttps
mov
push
fldl
inc
int
push
or
mov
jbe
fwait
push
loope
das
mov
sbb
fld1
aaa
cmp
out
sarb
ret
int
sbb
aad
fstpt
inc
int3
lcall
sahf
add
cmp
scas
dec
stc
xchg
add
inc
pop
addl
pop
mov
cmp
xchg
push
jp
movsl
ss
ja
les
data16
call
clc
aam
dec
jne
ds
mov
mov
add
lahf
cmpl
imul
cmp
rclb
subl
mov
sub
arpl
ljmp
out
insl
test
jmp
mov
inc
iret
lds
push
pusha
enter
and
pop
pop
stos
add
js
push
stc
mov
cmp
or
out
cmc
dec
inc
cmp
fsubrs
out
cmp
add
fcomip
aaa
ret
loope
pop
add
stos
cltd
rorl
out
rsm
sti
adc
pop
add
shrb
jnp
and
loope
or
out
lahf
push
pop
and
xchg
mov
test
mov
stos
mov
pop
imul
jno
out
jle
mov
pop
adc
je
jmp
sub
adc
in
movsl
push
cmp
int
cmp
cmp
cmc
dec
lds
cmp
sbb
or
mov
inc
shrl
inc
mov
add
adc
add
mov
push
stos
jle
sub
jg
dec
cmp
jne
mov
lock
out
dec
cmp
fnstcw
and
test
adc
loop
and
cmp
jne
iret
inc
cmp
and
inc
dec
cmp
dec
imul
mov
in
inc
mov
jae
xchg
cmp
cmpsb
test
xor
jno
out
mov
das
and
push
mov
pushf
into
jb
enter
adc
push
cmp
cmpsb
repnz
fisubs
imul
int
or
dec
add
pop
add
lds
stc
pop
movsb
xchg
add
out
bound
outsb
dec
push
cmp
push
pop
xor
sahf
sti
adc
sub
aaa
or
inc
mov
push
imul
jg
bound
hlt
rcl
cmp
iret
movsl
lcall
xor
cmpsb
mov
lret
fiadds
movsb
jnp
mov
aas
sahf
cvtpi2ps
sbb
loop
pop
scas
pusha
add
xchg
sarb
lods
xchg
dec
cmp
mov
add
mov
cmp
cmp
clc
mov
cmp
stos
sbb
xor
insb
js
out
lods
les
or
rclb
stos
sti
fidivl
adc
jge
nop
or
cmp
int
orl
adc
push
add
mov
mov
mov
fldl
aad
cmp
cltd
scas
mov
xchg
push
sbb
jle
add
xlat
icebp
cmp
mov
inc
cmp
push
pop
sbb
repz
pop
mov
in
lock
testl
insb
jnp
sbbl
outsl
outsb
test
fcomp
hlt
sbb
mov
or
dec
out
movsbl
addr16
add
cmp
addb
cmp
fwait
cmp
sti
and
xchg
imul
cmp
and
push
pop
daa
push
leave
or
mov
mov
pushf
test
push
add
mov
aaa
mov
fcomps
rclb
lock
imul
sbb
mov
add
xchg
test
adc
bound
xchg
les
jno
cmpsl
dec
dec
lea
cmp
ljmp
dec
aaa
push
clc
add
cmp
cmc
in
xorl
pop
add
out
mov
jge
sar
sub
fisubrl
sub
ja
out
mov
jae
sbb
and
pusha
xchg
addl
jmp
outsl
repz
enter
roll
ret
ss
jnp
or
cmp
sbb
repz
sub
pop
sub
das
adc
fs
call
pop
in
into
adc
clc
movsb
dec
and
mov
xchg
popa
in
pop
jmp
cmp
jnp
mov
incb
cmp
xchg
pop
cmp
add
iret
add
mov
je
cmp
xchg
pop
fsts
icebp
aad
cmpl
cmp
sbb
mov
xchg
fsubl
push
je
dec
cmp
inc
dec
push
dec
mov
leave
xchg
mov
test
into
mov
xchg
popf
fdivp
sahf
cmp
or
xchg
jecxz
mov
fwait
push
cmp
cmc
sbb
cmp
dec
subl
ret
dec
cmp
repnz
push
mov
cmp
inc
pop
inc
jecxz
xchg
push
sarl
or
out
jecxz
test
or
sbb
leave
jb
dec
jbe
jp
inc
dec
arpl
sub
lods
mov
xor
push
cmp
sbb
inc
mov
pop
lea
aaa
loope
and
cmp
push
push
arpl
lret
pop
lcall
in
cmp
jo
jecxz
jae
loop
xchg
adc
cli
cmp
sti
inc
cmp
data16
mov
cmp
lods
pop
loopne
dec
mov
xchg
and
rorb
cmp
rolb
popf
filds
and
mov
mov
dec
addr16
jo
add
sub
in
mov
js
loopne
push
mov
cmp
push
pusha
std
cmp
hlt
in
call
or
push
das
popf
imul
mov
into
cmpsb
inc
push
push
jo
in
push
idivb
mov
enter
lea
push
ret
dec
pop
mov
jecxz
jns
cmp
pop
and
cmp
cmp
xchg
or
mov
add
lea
lea
in
cmp
icebp
dec
mov
sarl
cld
dec
push
jmp
xlat
cmp
addr16
into
iret
fildl
shl
cmp
cli
mov
test
xor
test
ds
pop
fsubp
popa
test
jno
mov
add
cmpb
jle
or
jnp
in
cmp
push
ds
sub
inc
xchg
inc
cmp
xor
inc
sbb
lret
inc
cmp
mov
cmp
jno
sub
cmp
mov
ret
mov
cmp
xchg
lods
cmpsb
fdivs
pop
sbb
sti
bound
and
mov
pop
iret
inc
cmp
rcl
imul
jo
sbb
jg
push
mov
daa
cmp
or
pop
and
fucomp
push
mov
ret
pusha
and
gs
cmp
cmp
push
jne
mov
push
shrl
mov
cmc
xchg
inc
sti
aas
popf
movsl
pop
stc
pop
mov
and
xor
or
adc
cmp
add
mov
xchg
xchg
shr
cwtl
adc
inc
inc
jne
jo
jns
shrl
cmp
popa
xor
imul
xchg
ja
cmp
pop
dec
or
cmp
in
xchg
inc
les
cmp
enter
fstps
add
aaa
pop
pop
jmp
mov
add
fdiv
pop
in
inc
mov
mov
inc
cmp
das
add
adc
cwtl
pushf
mov
push
cmp
xchg
inc
sahf
fstpt
add
dec
sub
and
jns
push
cmp
push
ljmp
lret
vcvtdq2ps
push
test
pop
aas
das
fistpl
xchg
andl
cli
fwait
inc
adc
xor
mov
stos
sub
cmp
pop
jae
jno
lods
sub
les
into
pop
popa
std
es
mov
push
addl
mov
sub
repnz
imul
inc
in
cmp
shll
das
sbb
mov
into
fstpt
loopne
or
sbbb
and
xchg
dec
pop
adc
scas
roll
cwtl
scas
dec
out
pop
pop
adc
mov
test
out
lods
jp
or
pop
sbb
push
das
fdivrl
jl
out
cmp
xchg
mov
aam
sti
repz
mov
fucomi
dec
pop
in
inc
gs
rol
jg
cmp
cmp
push
cmp
jge
jecxz
cmp
mov
xchg
lods
pop
mov
fisubl
mov
jns
cmp
push
cmp
in
sub
sahf
arpl
arpl
mov
notb
das
into
sub
mov
and
mov
movsl
test
xchg
cmp
repz
dec
pop
gs
popa
pop
add
stos
sub
pop
mov
xor
mov
mov
push
and
pop
pop
add
cmp
cli
jns
and
cwtl
ja
aas
and
mov
lcall
adc
test
ret
push
aaa
push
pop
ds
je
hlt
cmp
les
loopne
stos
in
cmp
or
cmp
mov
sbb
cli
push
sub
cmp
addr16
mov
in
imul
cmp
adc
sbb
cmp
push
mov
call
xchg
inc
jbe
sbb
jl
filds
add
sub
in
das
and
shll
lcall
ret
jnp
sbb
cmp
lret
adc
iret
and
xchg
and
lods
jbe
sub
repz
pop
cmp
addb
dec
cs
inc
fstl
cmpl
dec
sub
mov
cmp
arpl
lds
aaa
mov
stos
cs
push
bound
movsb
dec
inc
pushf
aas
in
mov
mov
addr16
jns
test
ljmp
jle
je
aas
push
imul
and
roll
icebp
mov
and
or
cmp
push
pusha
jg
das
dec
daa
ret
mov
mov
ss
cmp
xchg
or
and
je
cmp
pop
stc
out
cmp
lock
inc
out
rcll
pop
cmpb
xchg
jbe
mov
dec
repz
lahf
sub
push
inc
sti
jno
push
push
pop
cmp
stos
jbe
dec
dec
push
aas
shrb
jge
loope
xlat
cmp
dec
cmpb
push
inc
push
lock
scas
cmp
test
das
mov
cmp
jo
sahf
int3
stos
adc
mov
xchg
mov
or
faddl
push
xchg
idivb
jg
cmp
sub
daa
mov
mov
aaa
and
cld
xor
push
enter
jbe
leave
aaa
cmpsb
dec
divl
cmp
xchg
addr16
jo
dec
imul
xchg
incb
push
push
data16
pop
lret
mov
ret
das
jecxz
loope
pop
mov
mov
lock
cmp
mov
cmp
enter
cmp
xchg
and
inc
cmp
xchg
jl
hlt
pop
cmp
sub
fstps
xchg
outsb
sti
insl
fadd
filds
dec
dec
in
movsb
adc
mov
sub
sti
jnp
dec
mov
fimull
cmp
std
je
daa
cmp
shll
scas
pushf
pop
cmpsl
dec
inc
iret
cmp
loop
int3
xchg
add
lods
call
cmp
jecxz
mov
jno
lods
push
imul
aad
jl
xchg
adc
push
cmpsb
fbld
popa
xor
dec
mov
push
pop
daa
cmp
sbb
ljmp
movsb
popa
mov
pop
popf
jle
sub
pop
or
cld
jb
and
insb
sub
scas
mov
outsb
pop
push
jo
xchg
mov
nop
aaa
jp
mov
inc
xchg
in
sub
or
lock
jl
clc
aaa
or
call
jmp
adc
mov
daa
mov
arpl
and
cld
jecxz
shl
and
mov
addr16
sti
add
imul
add
daa
outsb
fwait
jl
inc
pop
pop
std
cmp
icebp
nop
out
and
cs
cs
cmpsb
sahf
cmp
xchg
shlb
mov
rclb
sbb
sahf
jb
rclb
movsb
inc
clc
cmp
xchg
cmp
and
fisubrs
lock
sbb
and
enter
push
xor
addr16
lret
shll
cmpb
push
cmp
cmp
cmp
fisubs
ror
std
scas
add
or
pop
mov
or
aas
cwtl
int3
xlat
adc
cmp
movsl
loope
push
out
scas
jns
test
imul
sbb
repz
popa
inc
data16
push
mov
add
int
cmp
add
sub
jecxz
adc
mov
and
xor
std
mov
pop
test
aaa
cmp
enter
and
mov
loope
lods
cwtl
aaa
pusha
shrl
mull
and
ds
in
inc
mov
mov
repz
hlt
xor
popf
mov
popl
sbb
cmp
adc
shlb
mov
inc
dec
jp
jg
cmp
add
xor
movsb
mov
or
pop
sbb
popf
sbbb
dec
push
repz
pop
cmp
push
inc
shrl
xor
out
jl
cmpsb
rolb
andl
daa
add
icebp
cs
out
sbb
cmp
nop
adc
cmpb
cmp
add
lret
repnz
jb
aaa
mov
mov
push
jae
cmp
push
and
movl
jne
inc
push
dec
push
adc
fldl2t
aad
aaa
ret
pop
loope
sbb
sub
dec
push
fisubrl
adcl
shll
cmp
jae
mov
int
in
ja
int3
inc
stos
fbld
adc
mov
push
ds
andl
cmpsl
xchg
jb
hlt
add
mov
in
push
inc
mov
push
dec
cmp
cwtl
arpl
cs
cmp
cmp
outsb
jb
adcl
sub
test
inc
xchg
mov
mov
fistpll
mov
jl
jle
pop
sbb
mov
inc
gs
jbe
int
test
sbb
adc
cmp
imul
fisttpll
mov
and
aaa
lods
out
lea
test
xchg
cmp
dec
call
mov
loop
int
sahf
movsl
orb
inc
popf
rolb
lods
popa
fistpl
xchg
sbb
popw
movsl
int
int3
add
xchg
mov
adc
cmp
sub
iret
lods
lds
sub
cvttps2pi
stos
frstor
jg
pop
pop
stos
add
das
es
pop
xor
in
cmp
ret
sub
add
inc
mov
sbb
mov
int
mov
add
dec
imul
pop
js
cmp
jl
add
hlt
ret
pop
cld
inc
inc
cmp
lret
scas
or
mov
test
add
rcr
stos
icebp
dec
in
cmp
cli
cmp
idivb
dec
cmp
or
cmp
fsubl
dec
cmp
lret
arpl
in
xlat
fs
cmpl
sbb
stos
cmp
dec
aas
pop
inc
cmp
sub
sbb
mov
outsl
call
scas
mov
cmpsl
stos
sbb
daa
in
cli
test
adc
sbb
sarl
fdivrs
shlb
cmp
dec
divb
loopne
or
outsl
and
sub
pusha
call
and
test
xchg
dec
decl
out
sbb
jb
outsb
cmp
or
cmc
and
push
cmp
cmpsl
sub
cmp
adc
jl
cmp
push
and
inc
or
das
cmp
mov
sub
xorl
push
push
sbb
add
cmp
mov
lods
cmp
fstpl
aam
fisubs
sbb
mov
aaa
sahf
repz
dec
shll
cwtl
cmp
fnsave
pop
js
ret
sti
in
dec
adc
cmp
es
fistps
cmp
pop
jle
cmc
pop
pop
cmp
cli
jnp
and
xor
add
inc
and
cmc
popa
dec
cld
push
inc
call
inc
push
in
sub
in
mov
gs
stos
jb
in
mov
aaa
in
js
xlat
sti
repnz
sarb
daa
aam
add
xor
add
andl
and
add
roll
lds
and
stos
es
mov
jg
jp
cmp
adc
add
out
jmp
adc
out
xchg
mov
mov
cmp
fxch
jnp
and
aas
outsb
sti
inc
dec
inc
mov
stos
cmp
packuswb
mov
jecxz
xchg
cmp
xchg
inc
sub
cmp
and
sub
out
pop
in
cmp
push
scas
repnz
or
fadd
inc
in
insl
xchg
scas
jnp
lea
jnp
push
pop
int3
inc
push
cmp
fstpl
ja
cmp
and
lcall
test
sub
ret
push
adc
test
fcomps
sub
cs
pushf
jecxz
rcrl
dec
cmp
lods
lret
pop
iret
das
mov
insl
shll
mov
cmp
push
jl
jge
outsb
loop
add
mov
add
inc
jl
stos
mov
leave
gs
inc
sub
sub
mov
ret
cmp
sub
cmp
dec
inc
outsl
into
lds
pop
hlt
sub
xchg
aas
xchg
pop
dec
pusha
mov
mov
icebp
je
stos
das
insl
clc
sti
lcall
dec
fidivrs
int
mov
adc
es
rolb
lret
iret
lret
add
daa
push
cmp
xchg
dec
pop
cmp
xchg
and
or
pop
sub
fnstsw
and
lcall
aaa
mov
lret
cmp
xor
xchg
mov
push
push
orl
mov
sbb
dec
lds
pop
sarl
pusha
mov
and
les
je
addr16
and
call
cld
std
sub
fcomip
in
pop
enter
inc
pop
jbe
cmp
pop
sbb
subl
or
movsl
mov
push
fmuls
sub
icebp
xor
dec
jmp
frstor
hlt
cmp
int
inc
sub
cmp
ret
jle
push
cs
inc
aas
cmp
out
and
cmp
xchg
dec
aaa
mov
push
mov
mov
pop
loop
inc
ds
aad
popa
jmp
cmp
ja
lahf
das
ss
ret
fistl
scas
xchg
das
sbb
sti
shr
fiaddl
std
ja
mov
inc
cmp
jno
cmp
arpl
dec
aaa
push
push
mov
xor
mov
fisttpl
bound
adc
iret
test
imul
out
cmp
add
movsl
in
xchg
mov
lods
cmp
pushf
or
ds
sbb
cmp
inc
xor
sub
imul
or
jbe
enter
rcrl
cwtl
cmp
shl
sbbb
xorb
inc
sub
mov
cmp
add
cltd
aas
fldenv
das
sub
popf
arpl
cmp
mov
or
insl
dec
inc
sarl
pop
push
and
xor
cmp
xchg
cmp
addr16
in
in
jl
adc
inc
sub
dec
adc
cmp
out
inc
pushf
aad
add
das
shlb
repnz
push
mov
fstl
enter
cmp
mov
cmp
repnz
jae
int
xor
stos
outsb
cwtl
and
xchg
cmp
popf
jae
jno
dec
fabs
sub
jo
divb
push
jbe
sbb
sbb
dec
add
out
inc
sahf
cmp
cmp
insb
cmp
jbe
mov
mov
mov
ret
fstps
jno
aam
push
push
inc
aaa
mov
and
jl
push
jge
pop
lahf
lods
outsl
mov
mov
sbb
xchg
aas
cmp
cli
fcompl
fcmovnbe
adc
mov
iret
call
out
movsb
push
das
loope
xchg
add
cwtl
sarl
jle
push
push
scas
cmp
aad
sbb
stc
adc
inc
scas
sbb
add
add
lret
xorb
cmp
popf
out
popa
cmp
test
es
push
jae
popa
fucomi
cmp
pop
dec
test
inc
or
rcll
ljmp
movaps
movsl
add
xor
scas
stc
pushf
inc
xor
cmpl
bndldx
cmp
xor
dec
aam
mov
push
outsb
pop
fwait
push
jne
jnp
ss
ret
pop
push
imul
push
ds
jle
pop
in
mov
lock
out
cmp
push
iret
cmp
out
gs
mov
xchg
jbe
leave
addl
sar
jo
pushf
jmp
arpl
cmp
clc
rorl
lret
sbb
cmpsl
std
push
xchg
outsb
adc
push
out
mov
cmp
pop
mov
push
cmp
jge
dec
cmp
xor
cmpsl
and
push
sub
inc
inc
cmp
orl
dec
mov
ret
in
fsubrs
xor
pop
movsl
xor
arpl
adc
sbb
stos
imul
and
enter
push
jno
cmp
pop
sbb
inc
cmp
js
pop
inc
adc
lcall
cmp
jmp
mov
pusha
sub
add
dec
or
or
stos
cmp
jp
mov
cmp
and
jnp
adc
and
cmp
sub
cltd
cmp
aas
inc
pop
iret
add
orl
mov
das
scas
jno
or
data16
pop
dec
std
cmpsl
shrb
int3
cmp
inc
les
jb
hlt
adc
enter
or
addr16
jo
adc
cmp
push
aas
jno
pop
sbb
pusha
lods
sti
inc
pop
test
fdivs
sub
adc
lahf
cmp
or
ja
xor
dec
sti
inc
mov
jbe
cmp
cltd
popa
cmp
xchg
movsb
pop
sarb
lods
popa
or
mov
and
sbb
clc
inc
lods
pop
movsb
cmp
dec
xlat
sbb
xchg
push
mov
sub
enter
sbb
out
xor
or
mov
cmp
jmp
jge
xchg
push
mov
pop
mov
imul
fucomip
cmp
rclb
mov
adc
lahf
cmp
adc
pop
pop
push
hlt
int3
or
les
pop
cmp
jno
push
pop
fstps
pusha
xchg
pshufw
cmp
out
pop
int
adc
cmp
xchg
add
xchg
xor
xchg
push
and
sbb
mov
xchg
mov
sub
jg
adc
out
outsb
imul
cmp
test
mov
ret
hlt
cmp
xchg
in
cmp
aad
inc
es
andb
cmp
pop
cmpsl
inc
movsb
cmp
dec
ja
imul
cmp
push
mov
jnp
cmp
xchg
inc
jae
cmp
xchg
adc
ret
cmp
sbb
fwait
mov
aaa
cmp
inc
or
cmp
pop
test
mov
idivl
sub
cmp
push
sbb
in
mov
les
add
lret
mov
jge
inc
cs
add
popf
sahf
xchg
cmp
push
jnp
rcrl
lock
sahf
mov
or
fldcw
test
add
popa
jns
mov
or
mov
cmp
lret
xchg
xchg
out
idiv
outsl
out
leave
push
jl
mov
push
gs
jl
mov
inc
hlt
add
into
das
push
jg
mov
xchg
out
jns
scas
push
add
or
std
xchg
push
sub
xchg
cmp
jns
dec
cmpsl
cmp
dec
adc
sysret
adc
pushf
jbe
repz
pop
or
in
dec
pop
shrl
lret
into
cmp
jne
mov
daa
xor
mov
loope
enter
out
cmp
dec
push
bound
cmp
adc
xor
int3
xchg
pop
cmp
fnstcw
je
loopne
shrb
sti
jg
pop
sbb
mov
push
adc
out
or
cmp
push
les
cmp
dec
push
into
ret
jp
add
fisttps
test
cmp
and
ljmp
aad
xor
data16
fsub
mov
test
xchg
push
cmp
inc
popa
fistps
rcr
xor
loopne
mov
add
pop
push
pop
cmpsb
pop
cmp
mov
movsl
mov
sti
pushf
cmp
idiv
sbb
cmp
sbb
jg
mov
cmpsb
and
test
daa
mov
dec
imul
pop
mov
sub
cmp
push
shll
xchg
and
jecxz
jnp
cmp
inc
stos
push
cmp
pushf
popa
sub
rolb
jp
push
cmp
stc
dec
push
mov
adcb
cli
sub
ficomps
cmp
jmp
xchg
cli
mov
fistps
repz
outsb
pop
add
les
pop
ss
leave
pop
push
xor
fcoml
and
leave
mov
push
cmp
fidivrl
jb
mov
ret
ja
popa
mov
outsl
popf
movsb
addl
mov
mov
lods
cmpsb
sub
pop
cmpsl
cmp
jl
fcomps
cmc
dec
add
cmp
push
push
inc
mov
xor
or
push
jno
pusha
cmp
or
mov
add
inc
inc
sub
add
int
sub
ljmp
arpl
iret
dec
fcoml
outsl
sbb
fisubrl
jno
das
out
stos
xchg
dec
mov
mov
call
enter
and
xor
movl
and
in
add
push
dec
mov
imul
jne
ja
push
add
movsb
mov
call
mov
cld
fcoms
test
cmp
xor
inc
nop
cmp
or
cmp
xor
adc
in
sahf
xchg
out
shrl
outsb
cmp
and
push
xchg
cmp
jg
sub
cmp
addb
inc
sarb
jle
mov
dec
or
nop
cmp
inc
xchg
in
lds
imul
adc
jnp
cmp
cltd
fistpl
addr16
rorl
cmp
inc
mov
pop
out
pop
or
mov
imul
cmp
test
stos
mov
add
inc
cmp
inc
xchg
pop
jle
sub
cmp
in
push
lods
mov
cmp
mov
pop
cmp
add
icebp
cmp
cwtl
jne
pop
cmp
pop
xchg
inc
jp
popa
dec
add
enter
cwtl
cld
test
and
dec
bound
sbb
push
cltd
cmpsb
sbb
into
outsl
lret
dec
in
pop
test
adc
sarb
fwait
jne
cmp
xor
inc
cmp
into
cmp
push
cmp
pop
pop
jo
cmp
aad
adc
call
push
sti
jecxz
inc
or
stos
cmp
dec
or
pop
lods
cmp
lret
jne
mov
add
cmpsb
mov
daa
xor
cmc
push
repz
sub
sbb
adc
scas
clc
mov
fs
inc
cmp
aas
icebp
push
inc
mov
loope
dec
and
lret
push
mov
js
sbb
decb
add
enter
cmp
insb
ljmp
or
addr16
idivl
mov
test
mov
sbb
cmp
mov
int
pop
aam
cmpsl
popa
dec
dec
inc
pop
xchg
inc
pop
adc
xchg
stos
or
cmp
das
pusha
lods
out
loop
mov
push
mov
mov
cmp
jg
rclb
cmp
sub
insb
das
cmp
dec
inc
ds
cld
cmp
lock
and
xchg
inc
sarl
imul
cmp
lahf
add
sub
xchg
mov
in
imul
xor
clc
xchg
aad
xlat
and
mov
cmp
mov
sub
out
out
mov
sub
bound
push
popa
jns
das
pop
or
fwait
mov
lret
loop
adc
enter
push
mov
cmp
dec
cmp
pop
enter
inc
and
inc
test
sti
in
scas
pop
jmp
cmp
jge
inc
mov
int
push
mov
and
mov
dec
ja
std
jmp
sbb
cmp
and
jnp
inc
or
sarl
push
lods
sarl
xchg
cmp
stos
pusha
lret
cwtl
xor
enter
cmp
dec
mov
xchg
dec
aaa
add
sub
pop
jb
sbb
xchg
cmp
aam
cmp
mov
fadd
int
pop
mov
lret
std
lods
xlat
mov
cmp
cmp
cmpsl
cmp
lea
or
movsl
jae
addr16
and
jl
cmp
out
add
or
mov
add
cmp
lods
and
xchg
adc
repz
sub
jmp
pop
push
sub
lret
fistpl
mov
shrb
lock
loopne
out
cmp
xchg
fnsave
push
popf
cmp
jb
outsl
mov
jno
lret
ficoml
mov
loop
lcall
idivl
cmp
mov
cmp
add
push
fbstp
sub
and
gs
inc
es
inc
cmp
fidivl
or
outsl
sub
dec
gs
push
jl
pop
or
loopne
lea
fcoml
into
xor
ja
jbe
mov
stc
adc
push
xor
push
cmp
sbb
js
mov
or
fsubs
add
int
lods
out
stos
jnp
das
mov
mov
cmp
test
add
cld
stos
mov
cli
xchg
sub
addr16
push
xor
jae
lahf
enter
rcrl
outsb
das
pushf
fidivrs
cltd
bound
push
mov
and
imul
nop
fwait
adc
enter
fldl
xchg
clc
pop
arpl
sbb
and
push
dec
std
cmp
lret
cmp
outsl
ljmp
aaa
hlt
aad
jmp
pop
jnp
pushf
loopw
test
leave
mov
push
das
push
add
push
push
mov
cmp
rol
stos
sahf
das
sbb
pop
mov
cmp
sbb
add
cmp
jecxz
popa
sub
pop
mov
mov
ds
aam
cwtl
stc
mov
and
and
jnp
jge
out
cmp
sub
pusha
rclb
cmp
shlb
in
dec
fidivrl
cmpsb
sbb
jle
fdivrl
lret
inc
bound
jecxz
in
mov
inc
movhps
fucomp
cmp
in
mov
repz
icebp
and
cld
test
fstpt
push
mov
fadd
mov
add
stos
xchg
orb
adc
movsl
stc
jg
inc
pop
bound
adc
notl
jp
inc
mov
cmp
mov
gs
dec
decb
cmp
fisubrs
xchg
dec
cmp
inc
sbb
lret
sbb
xor
mov
lcall
mov
sarl
cmp
addr16
repnz
fwait
js
mov
xchg
call
cmp
cmp
and
pop
ljmp
mov
int
outsb
dec
mov
popa
ret
and
aas
pop
insl
mov
addr16
fs
rcrb
dec
popf
pop
cmp
lea
push
xchg
jne
jl
mov
popf
xor
cmp
xor
les
jae
into
and
int3
mov
mov
inc
xchg
fwait
sub
ja
das
addr16
sbb
out
xchg
cmp
in
pop
bound
mov
dec
icebp
lret
dec
mov
cltd
int3
dec
jb
adc
mov
mov
int
jbe
mov
mov
xchg
aaa
xlat
mov
dec
testb
dec
in
int3
mov
adc
in
dec
movsb
scas
cmp
or
cmp
daa
cmp
cmp
leave
int
repnz
cmp
xchg
mov
movsl
repnz
jecxz
aaa
imul
sub
cwtl
out
xor
sbb
test
sub
mulb
push
loop
cmp
bound
push
stos
loopne
das
jmp
pop
lahf
fwait
cmpl
xor
fildl
insb
jl
stc
and
mov
movsl
cmp
or
insl
idivl
sub
pushf
cmp
je
sbb
or
std
fldt
repz
and
das
arpl
mov
add
addl
rcrl
in
mov
and
loope
scas
mov
cmp
notl
mov
in
mov
mov
cmp
lock
stc
mov
cmp
dec
sarb
imul
mov
cmp
xor
arpl
cmp
movsb
pusha
pop
scas
cmp
adc
cmp
movsb
xchg
pop
inc
mov
sub
jb
cmp
and
cmp
fldl
cltd
xchg
sbb
add
call
fcmovbe
mov
cmp
mov
lock
pop
adc
enter
cmp
xchg
ds
int
dec
cmp
xchg
add
fbstp
outsl
lods
nop
into
and
push
mov
mov
sub
clc
stos
push
xchg
cmp
lods
aaa
push
jmp
mov
lds
ffreep
mov
das
dec
sub
lods
insl
cmc
pop
jnp
and
cmp
and
dec
hlt
cmp
jnp
scas
pushf
cmp
leave
loope
movsb
add
stos
sbb
cmp
fstpt
dec
sbb
lods
aaa
loope
xor
and
cmp
mov
out
cmp
push
cmp
fists
xlat
dec
mov
leave
call
mov
adc
in
mov
cmp
loope
fists
cmpsl
aas
in
cmp
xchg
lcall
rolb
into
aad
idiv
sub
fiadds
mov
pop
push
cli
outsb
xchg
int
punpckhbw
add
xor
int
je
sbb
inc
mov
mov
mov
cmp
xchg
xchg
lods
cmp
pop
lret
cmp
inc
adc
or
jmp
test
or
daa
add
mov
movsb
lods
mov
jno
or
out
dec
add
shr
cmp
lret
jnp
jmp
adc
pop
push
call
jo
or
jmp
fcom
sbbl
cmp
inc
stos
push
lods
test
lcall
outsb
push
xchg
jno
call
dec
add
xchg
xchg
cmp
stos
inc
ret
enter
ret
add
and
sbb
lret
dec
mov
sbb
in
loope
mov
xorb
int3
and
xor
lret
adcl
mov
inc
stos
movsb
repz
sub
ficomps
inc
call
push
mov
fisubl
or
inc
cld
mov
imul
push
pop
dec
adc
arpl
iret
scas
add
jle
push
sbb
push
inc
divb
popa
inc
in
scas
xchg
lcall
xor
xchg
js
clc
fbld
sbb
movsb
push
mov
xor
mov
push
iret
cmpsb
bound
pop
push
adc
and
lea
mov
jmp
fadd
mov
xchg
jge
cmp
cld
mov
mov
pushf
cmp
dec
push
cmp
popf
mov
or
out
out
jnp
test
cmp
aaa
pop
add
sbb
xor
in
pop
dec
pop
cmp
jae
push
xchg
cmp
push
lcall
push
out
cmp
adc
rcrb
push
iret
rolb
or
mov
mov
xchg
push
mov
jno
inc
mov
xchg
ret
rcl
rorl
inc
stos
mov
cmpsb
stos
push
sti
xchg
cmpsl
sarb
mul
lret
js
mov
inc
inc
aaa
out
jne
cmp
aad
imul
sub
xor
sub
cmp
inc
pop
fs
xor
and
pop
sbb
and
idivl
repz
mov
jo
xchg
shl
lcall
fwait
cltd
loope
adc
cmovge
out
lea
pop
pop
imul
mov
cmp
gs
test
lods
xchg
cmp
scas
dec
nop
les
jns
jnp
dec
decb
jbe
cmp
in
cmp
cmp
push
jnp
pop
pop
xchg
pop
sbb
adc
inc
fwait
pop
clc
ljmp
cmpsl
cmp
and
mov
into
jl
cmp
mov
and
push
cmp
nop
adc
xchg
pop
addr16
cld
xor
rcrb
xchg
fwait
mov
inc
inc
mov
ror
sub
ds
cmp
sbb
sub
or
sub
loope
aad
cmp
inc
xchg
sbbb
cmp
loope
lods
idivl
les
xchg
pop
push
jecxz
popf
jmp
jne
aaa
pop
and
sub
or
cmp
mov
push
jp
iret
mov
mov
icebp
mov
sub
inc
sbb
jnp
cmp
cmp
mov
jbe
mov
cli
pop
cltd
mov
push
test
mov
sub
dec
test
dec
je
stos
xor
dec
mov
leave
cld
std
jo
lret
jle
arpl
stos
mov
lea
sub
jns
adc
gs
std
iret
mov
fsubrs
imul
dec
push
loopne
jmp
stos
adc
lret
dec
mov
sahf
les
mov
popf
dec
xor
scas
cmp
aaa
mov
pop
shll
ret
fldt
cmp
das
ror
inc
mov
mov
lret
mov
sub
xchg
cmp
pop
sbb
push
das
imul
xchg
fstpt
aas
lods
inc
inc
mov
xor
test
or
sub
loope
mov
and
mov
lock
or
call
mov
jne
and
aam
js
rol
jl
insb
cmp
out
sub
pushf
movsl
push
push
lock
mov
cmpsl
sbb
cmp
data16
int3
and
adc
cmp
xchg
dec
xor
adc
or
or
fdivrl
das
shl
aaa
test
xchg
aas
sti
cmc
ror
xor
inc
add
popa
inc
inc
xorb
rolb
int
cmp
cltd
aas
cmc
mov
sbb
sahf
lahf
std
xlat
lret
clc
aaa
ss
push
insb
xchg
jmp
stos
and
and
std
mov
imul
fildl
incb
ljmp
pop
jbe
fistpl
sbb
cltd
scas
inc
lret
sub
sbb
jge
cmp
mov
ja
sub
xlat
push
cmpl
scas
scas
cmp
in
push
jl
dec
lret
je
push
xchg
push
jno
push
inc
das
pop
data16
mov
push
rclb
mov
xchg
in
xor
cmc
pushf
sarl
inc
pop
mov
cmp
lahf
jmp
xchg
mov
xor
sti
hlt
das
mov
aad
lcall
dec
filds
mov
arpl
jae
fs
fidivrs
cmp
jo
jl
cmp
jmp
rcr
push
sbb
xor
and
push
mov
cmp
and
inc
aas
pop
aad
cmp
xlat
or
out
idiv
add
lods
in
cmp
test
ja
pop
int
mov
xor
mov
xor
icebp
cmp
add
mov
add
lret
push
jp
lea
and
cmp
push
leave
mov
or
loope
mov
mov
add
pop
ret
imul
pop
sarb
inc
bound
fsubrl
fiaddl
cmp
mov
lret
cmp
mov
idivb
addr16
xor
fidivrl
scas
push
in
jmp
outsl
ret
ds
mov
jne
adc
mov
cmp
adcb
mov
push
out
lock
add
or
cmp
xor
fcoml
cmp
fimuls
fldt
sbb
aaa
lods
outsl
sti
and
push
adc
and
mov
mov
sbb
push
pop
add
rolb
gs
inc
loop
cmp
inc
jge
addl
jmp
nop
sbb
add
xor
stos
or
mov
int3
lahf
push
cmp
add
mov
in
movsb
pop
test
enter
sbb
inc
stos
popa
mov
cmpl
pop
xchg
push
dec
mov
mov
sub
jp
addr16
das
sbb
cmpsb
call
cmp
add
cmp
lret
imul
int
fnstsw
fidivrs
fcmovbe
mov
cmp
or
adc
add
mov
cmpsl
dec
mov
int3
sub
addr16
sbb
xchg
loopne
add
fdivl
xchg
cmp
mov
mov
xchg
cmp
xchg
inc
movsb
cmp
mov
bound
dec
jne
cmp
xchg
insl
dec
and
imul
jl
sarl
cmp
sub
jecxz
cmp
jmp
xchg
sarl
or
add
cmp
in
fldt
cmp
add
cmp
mov
das
pop
inc
cmp
test
fcoml
cmp
mov
add
cmp
imul
jp
cmp
cwtl
jo
ds
jno
fwait
pop
test
pop
cmp
push
xchg
xor
add
mov
cmp
push
mov
stos
pop
imul
arpl
test
mov
leave
in
push
mov
bound
insb
cmp
idivb
inc
cmp
sbb
outsl
lods
cmp
sub
shr
sub
out
pop
cmp
outsl
mov
cmpb
xchg
gs
into
xor
pop
out
adc
and
mov
shlb
mov
adcl
js
es
pop
cmp
call
fmuls
fs
push
xchg
sbb
clc
outsl
sbbl
es
jl
inc
rclb
push
in
popf
stos
out
hlt
pop
imul
test
push
shll
clc
mov
sbbl
sarb
and
in
mov
popa
popf
dec
dec
test
inc
jge
iret
outsl
orl
popf
pop
fwait
je
jecxz
inc
fildll
push
cmp
aad
int3
cmp
hlt
testb
es
add
push
rclb
int3
jns
lds
insl
in
je
in
ret
push
sub
sarl
lods
xchg
xchg
xchg
fldl
mov
pop
cmp
push
mov
ds
aam
cmp
aas
sti
in
lods
pusha
inc
sahf
mov
arpl
fwait
outsb
jecxz
cmp
xlat
in
pop
pop
cmp
test
rclb
imul
cmp
lcall
adc
lds
xchg
iret
push
movsl
mov
add
call
scas
lret
int
xchg
jo
cmpsl
xor
outsb
jl
xor
in
fcmovbe
jne
push
mov
push
aad
mov
cwtl
and
jne
je
jno
gs
int
orb
test
popa
sti
push
mov
xchg
das
or
sbb
cmp
mov
cmc
cmp
and
rcrb
mov
cmp
dec
jb
stos
mov
pop
lock
push
imul
mov
mov
dec
mov
sbb
pop
lock
fwait
jge
dec
xchg
das
xchg
ror
leave
pop
sub
lret
jo
dec
adc
add
scas
jl
out
sti
dec
sbb
stos
cmp
xor
xchg
je
loop
test
pusha
add
ljmp
pop
psubsb
jecxz
push
jb
imul
cmp
lods
jmp
sti
mov
stc
lret
pop
jne
insl
xchg
or
add
lcall
cltd
push
mov
cmp
xchg
mov
push
fisttpll
popf
cmp
lods
shrb
cs
push
repnz
lret
cmp
jb
lret
sub
sti
push
pop
jns
fcmovnb
mov
push
ja
lods
lcall
mov
mov
push
mov
ja
mov
aam
inc
jo
shrb
imul
loopne
mov
ror
rcl
out
sbb
mov
loop
movl
push
es
aas
xchg
outsl
pop
cmp
loope
fmul
movsb
in
cmp
stc
pop
sarl
pop
and
pop
cmp
mov
mov
inc
mov
pop
movsl
pop
mov
aam
sbb
rcll
addr16
or
xchg
add
cmp
nop
dec
cmp
test
arpl
andb
int3
dec
and
das
pop
nop
rcrb
pop
jbe
pop
sarb
push
popf
pop
inc
cmp
lahf
cltd
das
cwtl
pop
xorb
dec
push
dec
cmp
int
daa
out
cmp
lahf
frstor
pop
popa
addr16
or
hlt
pushf
jne
int3
leave
pop
addl
es
bound
data16
loope
out
push
sub
aaa
test
push
mov
mov
cmp
loope
fimull
xor
repz
pop
out
sarb
sarl
mov
dec
adc
loopne
push
cmp
pop
subb
mov
popa
lret
scas
xchg
in
mov
jns
pop
clc
data16
dec
out
and
pop
lret
cmpsl
pop
mov
movsl
add
cmp
or
adc
and
insl
in
dec
repz
das
es
orb
data16
xchg
mov
dec
or
sub
and
je
pop
adc
cmp
cltd
and
bound
fmul
addb
leave
int
mov
aaa
xor
xchg
push
pushf
ret
pop
cltd
das
lret
pop
sahf
inc
movsl
and
pop
pop
mov
jl
xchg
cmp
jecxz
sti
test
inc
aas
bound
std
in
push
jne
addr16
jmp
and
lods
sub
sub
push
ljmp
pop
inc
fadd
ret
mov
jl
icebp
xorl
mov
iret
adc
ds
arpl
mov
jbe
in
pop
adc
xor
push
xchg
jnp
xchg
cmp
xchg
and
loop
jo
ret
xorl
or
pop
aad
cld
jnp
mov
pop
daa
xchg
mov
inc
outsl
aad
inc
cmp
cmpsb
pop
jl
das
rolb
frstor
fwait
sbb
popa
stos
cmp
push
loope
out
sub
push
jnp
test
ret
xchg
mov
mov
aaa
push
unpckhps
cmp
sbb
inc
mov
daa
or
xlat
cmc
mov
scas
scas
popf
push
jnp
lahf
pop
aaa
mov
mov
and
bound
movsb
jle
add
gs
push
addl
mov
test
cmp
cmpl
pop
xchg
fdivl
adc
js
aad
xchg
push
mov
pop
dec
add
cmpb
mov
rcrl
jno
sbb
sahf
sbb
lret
cmp
adc
cs
cmp
xchg
sti
aad
stos
cmp
cmp
dec
es
push
cmp
fnstsw
fidivrl
fldlg2
stos
mov
fcompl
cmp
jns
add
dec
fs
cmp
xlat
or
jmp
mov
test
pop
cmp
mov
outsl
push
pop
mov
fwait
inc
mov
divb
rol
jmp
pop
das
xchg
shrl
mov
addr16
xchg
cmp
lret
sarb
push
cmp
hlt
or
push
loop,pt
xchg
imul
pop
mov
cs
loopne
mov
aaa
push
jae
jp
jmp
fwait
dec
cmp
mov
testl
push
cmpsb
dec
fldcw
xchg
xor
cwtl
sbb
cltd
pop
lea
cmp
nop
mov
mov
les
mov
xor
scas
pop
mov
int3
aaa
mov
add
popa
sbb
jecxz
cmp
pop
sbb
lcall
sbb
sahf
or
sbb
sub
incb
lret
out
das
in
xor
cwtl
mov
sub
cmp
addl
xor
das
movsb
sbb
push
lret
cmp
cmp
jg
pop
sbb
not
cmp
push
xchg
aas
pop
cmp
lret
cmp
or
ficoml
pop
mov
push
pop
and
stos
push
scas
cmp
aad
repnz
cmp
lods
mov
leave
fcompl
mov
loopne
cs
or
cmp
mov
fwait
jg
das
cwtl
insb
out
imul
das
push
inc
cmpsb
in
dec
push
sti
pop
mov
xor
arpl
sarl
mov
inc
inc
inc
push
aaa
rcl
out
add
dec
in
cmp
mov
mov
cmp
push
sub
fdivrs
cmpsb
in
sub
dec
and
popa
mov
mov
pushf
xchg
jnp
lret
cmp
cmp
inc
adc
stos
jnp
mov
movsb
mov
cmp
mov
cltd
inc
cmp
shlb
sahf
in
cmp
add
mov
insb
arpl
cs
dec
mov
cmp
xchg
outsb
outsl
in
cmp
mov
jne
adc
jno
scas
adc
add
xchg
cmp
in
loope
cmp
stos
cli
push
add
sub
je
cmp
xchg
dec
test
sbb
sti
jp
fcmovne
fnstcw
mov
adc
imul
cmp
push
out
sbb
xor
xchg
or
jmp
mov
movsl
cwtl
pushf
xor
daa
add
cmp
out
xchg
cmp
jmp
jmp
cmc
pop
add
or
mov
xor
xchg
sub
pop
xchg
pop
mov
sbb
out
cmp
shrl
push
jl
fisubs
adcl
adc
lret
jg
js
ja
cmp
sub
cmp
test
inc
cmp
or
dec
xchg
cs
leave
fstl
cmp
sub
int3
or
imul
pop
vmwrite
ss
cmp
sti
sbb
imul
sahf
xchg
mov
jae
lods
mov
rcrl
or
adc
mov
xor
push
inc
stos
inc
pop
popf
lret
mov
test
cmp
add
fwait
mov
push
cmp
jbe
out
cmp
cmp
sub
mov
repnz
inc
scas
push
push
sarb
lret
mov
popa
dec
aaa
shlb
aas
add
pop
push
sti
mov
jl
xchg
dec
mov
outsl
call
pop
inc
lock
or
cmp
movntq
fnstsw
mov
cmp
shll
push
cmp
or
mov
mov
add
mov
add
test
add
fdivrl
repz
jae
xor
stc
cld
std
cmp
lds
test
pop
rorb
inc
jge
cmp
jno
add
jnp
fistpll
cmp
xchg
popa
cmp
call
aaa
inc
mov
pop
out
cmp
aad
lods
int
adc
jle
sub
xchg
aaa
jb
inc
mov
cmc
sbb
cmp
jo
out
ds
addr16
sub
cmp
dec
push
mov
mov
cmp
mov
push
mov
add
sahf
hlt
movsb
stos
push
sub
scas
roll
movsl
inc
mov
pop
cmp
mov
aad
lret
stos
inc
into
push
pop
fwait
push
dec
pop
jns
push
xchg
cmp
rol
xor
inc
xor
test
push
cmp
and
ficoml
aaa
outsb
loope
into
scas
jg
mov
cmp
dec
xor
cltd
insl
pop
lea
lock
loop
test
sbb
nop
iret
pop
pop
adc
aad
jnp
xchg
js
mov
lea
jae
jno
xchg
inc
andl
ror
cmp
adc
test
aas
jmp
sbb
int3
in
and
cmp
addr16
inc
cmp
dec
sub
push
rclb
test
stos
xchg
stos
ret
in
outsb
jl
and
sbb
mov
hlt
aaa
and
pop
jb
jg
mov
lods
lods
sti
aaa
jno
fnstsw
and
lds
pop
jbe
xchg
sahf
jl
push
add
inc
pop
aaa
scas
rcr
xchg
lds
cmp
jns
into
mov
in
test
cmc
aaa
ss
stc
cmp
enter
sbb
out
int3
mov
or
movsl
cmp
mov
arpl
add
mov
and
add
dec
mov
dec
lods
jbe
xchg
imul
and
sub
pop
pop
aaa
or
test
scas
call
inc
out
adc
cmp
or
pop
cmp
hlt
mov
sti
loope
cmp
lret
roll
push
cmp
push
inc
inc
push
mov
mov
in
or
lahf
aaa
addr16
fchs
outsl
arpl
mov
cmp
or
mov
inc
repnz
cmp
inc
loopne
bound
lock
jb
mov
cmp
push
or
mov
mov
add
cmp
repz
movsb
cmp
cmpsl
fmull
subl
out
jnp
xor
data16
std
mov
cs
push
iret
cmp
jbe
cld
or
mov
jo
loope
inc
xor
push
xchg
aaa
dec
dec
jnp
lods
je
or
insb
cmp
xchg
add
insl
test
push
aad
adc
lds
mov
push
lret
jns
fwait
sarl
roll
and
in
negb
mov
test
stos
les
scas
in
and
sbb
sbb
ds
dec
push
fucomip
sbb
pop
cmpb
loopne
and
mov
push
pop
iret
cmp
nop
enter
push
imul
sbb
adc
repz
popa
sbb
inc
pop
jmp
int
pop
cmp
out
lods
jne
ss
add
sahf
cmpsb
and
test
aaa
sbb
add
dec
std
dec
rcrb
lods
hlt
ljmp
push
inc
dec
adc
mov
cmp
imul
cmp
xchg
lds
std
ret
cmp
movsl
outsb
ljmp
jae
xchg
cmp
jge
lds
cmp
int
mov
lret
jmp
test
das
xchg
mov
negl
cmp
cltd
lods
pop
aaa
cmp
imul
fnstenv
lcall
sub
inc
pusha
stc
cmp
inc
jp
inc
cmp
xchg
mov
jecxz
add
cs
fildll
jle
pop
out
mov
fs
lds
mov
push
call
aaa
cmp
out
repz
cmp
dec
or
aas
mov
in
push
xchg
orl
xor
int3
push
fisubrs
adc
lret
outsl
ret
jnp
or
cmp
dec
push
sub
cmp
imul
mov
mov
push
lea
repnz
xchg
jp
fmuls
lods
das
imul
outsb
popa
add
fs
push
xchg
aas
ljmp
sbb
out
push
fidivrs
lahf
outsb
fistpl
dec
pop
sub
lock
mov
cs
mov
pop
pop
add
and
pop
hlt
cld
xchg
repnz
mov
cmp
les
movsb
and
push
jb
cmp
jnp
inc
fs
xchg
push
mov
movsl
je
addr16
mov
aaa
inc
or
jecxz
lods
fcoml
test
fnstsw
pop
xchg
sub
xchg
loop
cmp
jg
iret
out
push
mov
popa
sbb
mov
pop
pop
mov
nop
jle
pop
jnp
les
mov
sbb
xor
and
clc
xchg
aam
int3
mov
mov
pop
pusha
iret
xchg
inc
sahf
fs
adcl
pop
das
dec
jbe
push
fnstsw
loope
mov
mov
jmp
lret
sbb
mov
aaa
stos
jnp
fisttpl
mov
cmp
dec
or
fsubrl
mov
jge
sub
cmp
sub
call
pop
inc
mov
xchg
add
popf
sbb
xchg
push
cld
movb
pop
and
or
xchg
aaa
stos
in
xchg
xchg
fisttps
push
ret
mov
cmp
cmp
pop
jmp
test
sarb
lds
cmp
xor
pop
mov
ds
jge
inc
stos
cmp
outsb
test
cmp
and
aas
mov
inc
xor
adc
sbbl
sbb
rclb
xor
jp
aam
sahf
lcall
jb
sub
push
leave
pusha
aaa
cmpsl
xor
es
lret
sub
idivl
xchg
inc
add
icebp
scas
sbb
cltd
fildll
loopne
jbe
cmp
orb
dec
ret
push
fxch
add
inc
jnp
sahf
std
cmp
test
daa
shl
cld
xor
mov
subb
dec
das
and
sbb
rcrl
cmp
repz
add
pop
leave
push
xchg
aam
xchg
jl
stos
and
in
cmp
hlt
notl
add
push
outsl
pusha
js
cmpsb
cmp
aam
push
dec
dec
mov
mov
in
das
pop
xor
push
fcmovnbe
mov
and
inc
mov
decl
or
jb
push
cmp
daa
iret
pop
pusha
push
dec
jae
sarb
rolb
xor
adc
aaa
repz
or
adc
cmp
jne
cltd
pop
jbe
ja
cmpl
add
mov
cmp
mov
aaa
pop
lods
xchg
xor
pop
cmp
popf
lret
mov
cmp
and
and
mov
ss
outsb
loop
fistl
daa
cmp
lcall
pop
sub
arpl
mov
mov
jne
and
je
out
adc
jbe
and
fdivl
sbb
rcrb
ffree
inc
mov
adc
jno
ret
pop
cmp
in
scas
cmp
sarl
fldcw
negb
leave
fs
pop
inc
fcompl
xor
scas
xchg
and
inc
sub
js
ror
cmc
lods
stc
addr16
add
cld
jne
jb
sub
push
push
pop
jne
fimull
jl
add
push
mov
stos
popa
or
std
cltd
rcrl
xor
loopne
add
jg
pop
daa
lret
cld
cmpb
rcll
dec
inc
int3
pand
cmp
xlat
mov
cmp
cmc
pop
jp
and
add
pop
xchg
ffreep
push
inc
cmp
pop
lahf
sbb
lret
insl
sub
push
or
cmp
mov
lods
push
cmp
xorb
cmp
out
cmp
clc
mov
idiv
test
cmp
or
outsb
or
sub
or
stc
sarb
fsts
pop
jmp
mov
xor
inc
jle
sti
xchg
popf
push
cmp
cmpsl
dec
aaa
rcll
push
jl
sarb
out
dec
aaa
inc
out
pop
push
lds
cmp
inc
xchg
jmp
pop
xor
cwtl
inc
pop
push
mov
jne
jo
sbb
mov
xor
mov
add
je
fmull
into
aad
mov
push
inc
dec
dec
aaa
add
ds
xchg
stos
int
leave
pop
xchg
and
fs
fdiv
sbbl
xchg
xor
push
scas
cmp
jp
mov
adc
xchg
mov
mov
ds
xor
cmp
lds
mov
fnsave
out
bound
cmp
mov
pop
inc
jp
fcoms
mov
lret
jmp
fldl
pop
stos
mov
cmp
loop
pop
and
adc
in
hlt
cmp
jge
bound
push
ss
fnstcw
aaa
add
dec
and
fucomi
outsl
mov
lods
xchg
in
push
daa
mov
cmp
das
mov
adc
pusha
pop
push
dec
push
lods
ss
cmp
jl
cmp
and
add
cwtl
inc
cmpsb
cmp
mov
imul
fisubs
or
loopew
or
in
xchg
cmp
pop
inc
pop
add
cmp
add
int
sahf
ds
or
dec
sub
enter
cmp
inc
adc
adc
pop
sub
inc
das
push
dec
and
pop
sbb
cmp
jo
rol
or
stc
leave
xor
pop
icebp
xlat
aad
cmp
out
sub
adc
outsl
sti
jno
jb
rcrl
nop
fildl
cmp
xchg
pusha
test
pop
mov
in
inc
mov
sbb
sub
outsb
repz
mov
cmp
popa
and
sbb
lock
popf
push
cmp
shl
cmpl
adc
xchg
ret
out
add
lods
xchg
cmp
pop
cmpsb
cmp
and
int3
xor
push
jle
jnp
shll
mov
in
cmp
std
roll
bound
add
mov
aam
cmp
jge
mov
hlt
cmp
out
sub
aaa
mov
mov
les
test
mov
fs
xchg
ret
sysret
repnz
pop
nop
push
test
hlt
push
sbb
xchg
aad
pop
sbbb
out
into
jnp
sbb
out
pop
fcompl
and
in
outsl
add
std
push
lahf
dec
lea
cmp
push
jmp
out
cmp
sbb
adc
loop
and
cmp
cli
mov
popf
lret
and
cwtl
js
ljmp
and
scas
popf
push
outsl
sub
adc
aaa
adc
mov
stos
sti
ret
pop
pop
cmp
sahf
and
cmp
push
cmp
mov
js
inc
lea
dec
dec
loop
cmp
mov
jp
aad
mov
sbb
cmp
lock
inc
into
cmp
repz
xchg
rcr
xchg
push
inc
cmp
int
pop
fisttps
pop
je
jnp
dec
sbb
outsb
cmp
push
mov
mov
push
jnp
add
lret
xlat
cmp
bswap
sarl
stc
gs
push
xchg
js
in
nop
out
rorl
idivl
pop
cmp
ds
out
cmp
aas
arpl
popf
lret
mov
pop
lds
arpl
and
in
dec
lock
mov
cmp
push
push
push
adc
inc
jmp
lods
out
dec
lahf
enter
mov
push
cmp
push
dec
mov
adc
and
neg
or
xchg
add
cmp
rol
dec
pop
fldl
mov
push
cmp
shrb
orl
cs
inc
jmp
outsb
cmp
pop
lock
mov
mov
xor
lret
rcrb
dec
jne
dec
inc
stos
cmp
leave
testb
dec
test
das
or
in
fdivrl
loopne
mov
stos
adc
xchg
sub
aaa
mov
and
pushf
ficomps
aam
cmp
or
jae
push
dec
push
iret
inc
lcall
xlat
mov
stc
movsb
enter
jg
pop
cmc
scas
out
inc
cltd
push
adc
addr16
mov
dec
mov
fcmovb
bound
das
jbe
and
jns
lods
ja
or
std
lds
adc
in
mull
sahf
and
pushf
adc
cmp
inc
mov
pop
lret
std
dec
xor
mov
cmp
or
xor
insb
adc
mov
and
cli
sub
das
and
sti
and
mov
cmp
test
push
cmp
xchg
enter
and
imul
sub
sub
movsl
fldcw
mov
jl
or
nop
cmc
inc
cmp
ret
push
cmp
xor
ja
xchg
loope
les
js
jne
test
aad
mov
repz
sbb
cmp
jle
jecxz
and
jmp
sar
or
int3
sub
cwtl
mov
pusha
bound
or
cmp
movsl
scas
and
les
mov
sbb
in
stc
add
cmp
mov
xchg
loope
inc
cmp
cmpb
push
or
cmp
icebp
inc
dec
sbb
jl
sbb
test
cmp
lods
push
shll
sbb
cmp
inc
bound
fwait
cmpsb
cmp
dec
sbb
xlat
test
mov
imul
xchg
and
outsl
int3
cmp
in
sarl
jbe
cmp
lods
cmc
icebp
xchg
inc
mov
addr16
adc
xor
push
shlb
cmpsb
test
mov
dec
cmpb
and
fstl
hlt
pop
ja
mov
daa
sub
mov
mov
or
and
pop
push
mov
addr16
cmp
arpl
mov
adc
inc
pop
in
orl
lock
mov
outsb
jp
inc
pop
sbb
int3
scas
xlat
cmp
adc
outsl
mov
movsl
repz
push
les
pop
adc
jae
pop
cmp
movsl
mov
inc
sub
bound
dec
and
push
lods
arpl
jecxz
sbb
and
adc
pop
push
cmp
jne
push
cmp
imul
fs
rcrl
fnop
cmp
add
mov
mov
imul
mov
rcr
or
xchg
je
ficomps
push
out
jnp
mov
lcall
dec
sbb
push
push
aad
adc
cmp
movsl
loop
cmp
movsb
cmp
adc
data16
aaa
testl
dec
cmp
ljmp
push
test
or
shlb
aaa
aas
inc
enter
pop
push
xchg
les
xor
insb
idivl
add
xor
orl
pop
sbb
ss
and
push
cmp
sub
mov
sub
les
pop
subb
std
cmp
fcmovne
lods
inc
xchg
mov
xlat
aaa
push
jp
push
mov
cmp
push
sbbl
je
xchg
or
cmp
xchg
ds
out
mov
outsb
mov
aaa
mov
addr16
jo
jbe
sub
jnp
stos
rep
cmp
les
jecxz,pn
inc
test
int
add
test
mov
scas
mov
xor
arpl
mov
push
filds
cmp
add
or
or
dec
out
aaa
mov
outsb
xchg
jecxz
fstpt
adc
cmp
sub
cmp
mov
cmp
imul
pop
sub
pop
fistpl
scas
cmp
enter
jnp
popf
outsl
aaa
pop
dec
adc
cmp
nop
iret
cmc
testb
ds
xchg
push
shlb
rclb
jl,pt
inc
adc
add
dec
movsb
je
das
loopne
or
sti
inc
ja
cmp
adc
mov
jge
mov
cmp
rcll
inc
cmp
jp
push
outsb
fs
cmp
push
cmp
xchg
xchg
outsl
pop
and
or
call
rolb
fistpl
les
outsl
adc
arpl
mov
inc
lret
push
scas
cmp
imul
enter
scas
mov
and
xchg
int
cmp
dec
pusha
sbb
popa
ret
push
mov
jecxz
cmp
push
bound
fists
sub
aam
sbb
jmp
insb
out
test
jl
lea
lcall
xor
das
dec
dec
mov
jge
lret
push
push
xchg
daa
pop
mov
test
inc
cmp
add
sbb
xchg
lcall
mov
popf
jns
lods
mov
mov
outsl
out
sbb
fidivrl
cmp
inc
enter
push
sbb
pop
pop
cmp
outsl
sub
cmp
cld
pop
add
xchg
imul
test
and
push
test
push
jg
out
mov
dec
add
mov
sub
cmp
rcl
mov
jne
jecxz
push
adc
mov
cmc
cmp
fsubrl
cmp
push
lahf
bound
cmp
push
xor
cmp
pop
sarl
frstor
adc
adc
mov
jae
or
das
sub
pusha
inc
aad
jle
mov
mov
and
cmp
and
push
inc
cmp
hlt
xchg
mov
pop
push
adcl
ds
das
movsb
inc
sub
std
pop
push
add
ret
inc
mov
push
int
imul
into
adc
push
cmc
cmp
cmp
arpl
les
cmp
mov
mov
cmp
lret
push
push
cmp
xorb
and
fdivr
inc
in
and
mov
jae
jmp
dec
jnp
and
cmp
dec
push
aaa
jae
lods
sti
mov
pop
push
pusha
cmp
or
rcrl
and
mov
into
or
cmpsb
cmp
or
dec
mov
push
int3
dec
ret
cmp
out
sub
outsl
dec
adc
cmp
and
cs
mov
in
into
cmp
data16
adcb
mov
daa
xchg
insl
std
push
cmp
sarb
dec
mov
add
and
mov
pop
push
push
pop
mov
ss
push
dec
mov
je
iret
add
icebp
sbb
cmc
and
lods
stc
cmp
outsl
loope
aad
dec
dec
cs
int3
inc
push
hlt
pop
xchg
xor
inc
pop
mov
jl
sti
jge
xchg
lret
popf
cmp
les
pop
out
pop
aam
ss
jp
cmp
outsl
pop
sbb
lods
mov
pop
cmp
sub
fadd
cmp
xchg
cmp
xchg
or
jne
enter
movsl
lods
cs
les
test
mov
outsb
enter
ret
cmp
out
adc
imul
nop
jnp
arpl
mov
test
mov
icebp
and
cmp
nop
pop
cmp
cmp
lret
inc
leave
lea
mov
clc
cmp
mov
push
cmp
inc
sbb
mov
mov
xor
cwtl
fdivrs
cmp
mov
das
fldl
jb
in
pop
mulps
or
jp
push
mov
scas
cmp
mov
add
inc
int3
cmp
inc
test
lds
xor
cmp
fmulp
mov
nop
das
cmp
cmp
sahf
sarb
or
xchg
cmp
stos
loope
test
and
xor
adc
cmp
lret
xchg
mov
and
add
xchg
pop
out
lret
xchg
or
sub
mov
adc
push
adc
and
dec
push
cmp
orl
out
inc
ret
pop
add
inc
dec
sti
and
cmpb
cmp
test
adc
xchg
jnp
pop
jl
xchg
ds
aaa
lods
push
lea
int
push
cmp
fildl
mov
ss
shl
ja
dec
js
jl
mov
cmp
or
into
and
loope
hlt
fldt
insl
push
mov
out
pop
mov
dec
cmp
add
cmp
mov
pop
mov
cmpb
clc
add
lcall
pusha
dec
out
in
mov
ret
das
push
adc
cmpsl
repnz
jbe
fsubrl
popf
push
mov
jne
call
xor
fmuls
aaa
inc
aam
aad
leave
cmp
pop
test
mov
cmp
mov
repnz
mov
jne
mov
ds
mov
push
pop
inc
mov
adc
jnp
lret
xchg
push
dec
in
jmp
pop
cmp
rcrl
cmp
dec
jnp
out
lods
fimuls
cmp
insl
dec
and
jns
pop
cwtl
stos
int
jae
fwait
cmp
js
addr16
and
sarl
sub
push
dec
test
cmp
imul
loopne
cmp
imul
test
out
es
aaa
sub
xchg
int3
push
jmp
cmp
stos
xor
std
fs
push
mov
mov
mov
cmp
in
add
sub
jae
cmp
iret
mov
into
cmp
add
cmp
rclb
sti
fstpl
dec
adcb
test
cld
cmpsl
xchg
jl
pushf
cmp
jnp
nop
cwtl
cmp
fldenv
adc
jae
push
test
mov
pop
push
and
inc
dec
jbe
push
cmp
xchg
clc
jmp
cltd
jnp
subl
xor
inc
dec
jbe
in
sbb
jnp
lods
mov
xorl
loope
pop
or
fwait
or
movsl
push
jle
int3
xchg
cltd
cmp
push
ds
jno
in
jns
xor
popa
fcmove
xor
cld
jnp
cmp
push
movl
xor
arpl
pop
add
mov
data16
icebp
cld
xlat
jb
int
jno
xchg
imul
sbb
lds
mov
adc
fxch
lods
and
pop
inc
ds
out
mov
mov
es
test
cmpsb
das
rol
dec
pop
and
inc
cmp
sub
inc
mov
shll
lret
cmp
clc
xor
cmp
or
pop
hlt
pop
addr16
outsb
out
shrl
dec
adc
inc
pop
das
ret
loope
dec
or
int
fimuls
xlat
pop
lds
bound
xchg
cs
mov
sahf
or
adc
stc
icebp
xor
je
jge
int3
or
pop
in
loop
xchg
xchg
lods
aaa
arpl
mov
shl
gs
cmp
xor
imul
pop
mov
cmp
lods
sbb
ret
fdivl
lret
mov
cmp
adc
rcrl
es
pusha
dec
lahf
cmp
push
and
loope
fbld
cmp
iret
push
ljmp
dec
loopne
sub
cmp
fnstcw
or
popf
sub
out
mov
adc
xchg
in
mov
inc
fwait
shll
das
pop
lods
jbe
cmp
lret
mov
cmp
dec
sub
cmp
dec
das
and
push
cmp
ret
je
loopne
xchg
insl
sahf
inc
lret
cmp
xlat
inc
lods
push
cmp
lahf
es
inc
je
pop
cmp
mov
sbb
dec
add
mov
ds
lret
push
jns
dec
neg
cmc
mov
and
fistpll
mov
ret
dec
pop
cwtl
xor
lret
dec
add
add
sbb
sti
jmp
cmp
adc
sbb
mov
jae
je
cmp
dec
lret
sbbl
ret
cmp
data16
cmp
adc
pop
out
dec
inc
sub
cmp
test
sbb
inc
in
inc
mov
push
push
dec
cmp
jecxz
fisubs
cmc
pop
mov
xchg
test
mov
adc
sub
jb
in
idivl
jecxz
fnstcw
shll
cmp
rorb
fstpl
sub
push
mov
stos
lds
add
adc
jge
dec
call
xorb
adc
jo
xor
out
enter
cwtl
dec
jno
pop
es
and
push
adc
mov
stos
outsb
aaa
roll
xchg
les
stc
add
push
loope
inc
into
das
imul
xor
outsb
cmp
ret
std
pop
movsb
fcompl
je
dec
roll
sbb
cmp
fcmovb
andl
out
bound
adc
stos
sub
out
stc
jge
lds
out
into
pusha
push
pop
nop
idivl
subb
dec
cmp
insl
sti
or
into
je
mov
cmp
add
mov
arpl
dec
test
in
cmp
loope
test
adc
pop
icebp
push
mov
das
cmp
lods
sbbl
aaa
enter
jno
fnstsw
push
jae
pop
lret
cli
imul
in
sbb
mov
fdivl
lods
cmp
and
nop
loop
or
sbbl
int3
pop
mov
imul
sbb
and
jl
add
push
cmp
pop
pushf
into
adc
pusha
in
inc
cmp
in
stc
out
insl
sub
mov
int
hlt
xor
cmp
aam
add
lds
aaa
xlat
leave
sub
jb
out
jno
lea
jae
cmp
mov
cmp
push
mov
jge
cmpsb
inc
inc
and
call
add
test
xchg
dec
mov
aad
pop
and
mov
push
inc
outsl
addl
adc
std
cmp
cmp
pop
add
inc
push
subl
cmp
lahf
cmp
push
repnz
xchg
lods
cmp
out
mov
inc
aas
pop
cmp
lahf
mov
icebp
mov
inc
cltd
flds
aaa
ret
sahf
stc
test
test
cmp
dec
stos
push
loope
pop
jl
mov
stc
sbb
cld
jg
popa
add
dec
adc
shll
mov
arpl
repnz
sub
cmp
cmp
cmp
push
lret
xor
cmp
sarb
push
mov
test
shl
cmp
addb
and
jmp
fcoms
and
mov
aaa
movsb
divb
imul
cwtl
xchg
xchg
ret
in
or
leave
inc
mov
sbb
das
test
adc
stos
das
insl
aad
lret
adc
mov
lods
andl
xchg
cmp
sub
sarb
dec
negl
dec
or
das
pop
iret
ljmp
mov
sbb
pop
test
imul
cmpsb
cmp
ret
fsub
add
jg
int
pop
arpl
cmp
xlat
lds
loopne
fcoml
aas
out
or
jecxz
aam
popa
pop
fwait
cmp
cmp
dec
jp
jbe
test
jmp
iret
fsts
cmp
repz
nop
out
cmp
add
xor
push
mov
mov
aaa
push
in
xchg
sbb
lods
movsb
lods
adc
cmp
or
dec
mov
mov
and
or
fdivr
in
xor
push
inc
inc
fsubrs
pushf
inc
pop
push
cmp
cld
xchg
sub
jnp
popa
pop
adc
push
popf
mov
cmp
inc
push
icebp
push
push
mov
call
or
push
test
repz
mov
icebp
sbb
loop
dec
aaa
dec
or
shlb
repz
mov
sti
and
xchg
int3
addr16
cmp
cmp
and
adc
cld
cmp
add
push
icebp
xchg
inc
cmp
pop
adc
test
ss
inc
xor
mov
call
test
xor
cmpsl
mov
sub
cli
cmp
xor
addr16
lret
aaa
push
inc
mov
fwait
vshufps
in
cmp
add
xor
sarl
jnp
outsb
hlt
push
in
ficoml
cmp
les
dec
test
cmp
mov
testb
mov
jbe
test
cmp
in
rcrb
jns
call
inc
cmp
or
sbb
icebp
push
rcrb
test
movsl
adc
clc
mov
shl
das
mov
jp
mov
cmp
mov
or
fdivrs
push
xor
cmp
xchg
cwtl
cmp
pop
mov
insb
subl
mov
xlat
cmp
mov
cmp
xchg
int3
jp
jle
lcall
or
xor
ficomps
sbbb
scas
out
loope
mov
mov
mov
mov
popf
push
das
add
aaa
fwait
adc
mov
gs
fnstenv
mov
push
cmp
mov
pushf
lock
sbb
mov
in
pop
mov
sbb
jae
dec
cmpb
imul
sub
xchg
mov
les
dec
push
cmp
xchg
pusha
test
jmp
insb
arpl
pop
and
adc
mov
and
addr16
jnp
les
push
addb
lds
and
adc
test
leave
xor
repnz
mov
mov
sub
mov
ja
inc
jnp
jne
mov
xor
mov
adc
into
sbb
imul
scas
dec
mov
or
ja
jl
jo
cmp
or
add
inc
cmp
jae
dec
repz
dec
adc
jmp
mov
mov
or
bound
das
xchg
inc
loop
pop
cld
mov
nop
xor
push
movnti
cmp
roll
xchg
pusha
cmp
fidivrl
push
enter
lods
fprem1
add
std
inc
sbb
or
insl
stos
loop
dec
pusha
cmp
jb
mov
iret
clc
mov
adc
xchg
das
push
xchg
jb
lret
and
pop
inc
lock
inc
scas
jmp
adc
loop
cli
sub
jae
test
sub
std
es
cmp
sbb
and
push
mov
cmp
mov
mov
xchg
orl
xchg
cmp
ret
sbb
sub
inc
ds
insl
cmp
lret
subl
cmp
lret
aas
cmp
mov
mov
iret
jl
lahf
int3
pop
nop
push
loope
fnstsw
mov
out
cmpsl
mov
ja
mov
scas
or
and
pop
pop
pop
cmp
mov
fildll
mov
fcmovne
adc
sub
cmp
dec
inc
jg
and
jno
mov
es
jle
mov
ret
sbbb
shll
daa
test
jne
dec
add
push
es
and
lods
cmp
call
test
jge
in
push
pop
enter
cmp
jg
dec
mov
ret
cmp
inc
ds
mov
pop
aaa
dec
ja
push
add
sbb
xchg
jle
imul
mov
ljmp
jp
and
push
das
inc
mov
xchg
ret
popf
imul
cmp
add
push
cmp
inc
data16
arpl
xchg
cmp
push
cli
adc
cmp
mul
push
cmp
pop
outsl
sub
pop
out
inc
push
sarl
fisttpl
lret
cmp
sbb
int3
push
sub
fwait
out
popa
cmp
das
addl
inc
cmovl
mov
mov
add
mov
scas
push
pop
xchg
adc
jecxz
cmc
ret
pusha
cmp
sbb
dec
cmpps
popa
sub
fdivrl
loopne
fnstenv
and
aam
pop
push
adc
cmp
mov
mov
xchg
sub
rorb
and
iret
subb
mov
arpl
adc
frstor
dec
cmp
popf
cltd
fnstsw
cmp
or
test
arpl
outsb
out
adc
cmp
rcll
dec
pop
push
fstpl
and
push
cmp
hlt
jb
pop
cmc
cmp
shlb
cmpsl
cmp
xchg
fisttps
pop
push
cmp
push
xchg
push
sub
mov
insb
cmp
and
pop
mov
jmp
lret
mov
cmc
cmp
loope
aam
imulb
scas
dec
mov
ss
cmp
add
scas
push
inc
cmp
std
mov
or
add
aaa
divl
orb
cmp
jne
cmpsl
js
data16
push
xchg
scas
mov
mov
shlb
mov
icebp
cmp
lea
push
popf
cmp
and
cmp
cmp
xchg
cld
test
shr
cmp
jg
dec
aad
enter
loopne
mov
pop
or
test
out
cvtps2pd
sub
adc
cmp
sub
in
je
mov
inc
cmp
repnz
pushf
ljmp
jae
mov
and
fbld
jnp
and
inc
loopne
pop
cmp
adc
mov
jns
cmpsl
cltd
mov
cmp
or
rcll
push
adc
cmp
xlat
in
lods
cmp
imul
dec
cmp
mov
fnsaves
xor
enter
int
fs
pop
mov
cmp
xchg
stc
cltd
aaa
xchg
notb
pop
je
jnp
pushf
mov
cli
aas
outsl
fbstp
xor
cmp
xor
cmp
sarb
mov
pop
cltd
and
or
cmp
pop
pop
push
push
adc
in
nop
inc
fmull
cmp
xor
sbb
cmp
shlb
sbb
mov
mov
gs
jbe
dec
pusha
imul
lods
jae
in
inc
inc
aaa
or
iret
jne
hlt
sbb
mov
add
out
fisttpll
push
or
xchg
push
push
push
cmp
dec
filds
arpl
pop
mov
lea
iret
bound
and
lds
xorl
ljmp
idiv
cmp
xor
ret
repnz
cmp
addl
ljmp
xchg
mov
and
das
adc
cld
jno
out
fistpll
lds
mov
cmp
dec
pushf
xor
cmp
adc
cmp
mov
cmp
ret
and
loop
mov
sarl
pop
out
dec
cli
sarl
call
jnp
push
xlat
xchg
sub
stos
imul
sub
into
cmp
lds
jo
add
pushf
sbb
in
add
xchg
leave
jmp
inc
push
cmp
xor
jne
loopne
sarl
std
cli
sahf
cmp
inc
rolb
insl
in
jg
mov
es
leave
bound
flds
out
and
pushf
cld
jnp
in
or
cmp
push
or
fldcw
xchg
jne
xchg
jb
out
xor
cwtl
ja
subb
lock
cmc
cmp
jecxz
and
and
es
mov
cmp
cmp
std
cmp
imul
pop
dec
inc
ds
int
loopne
aad
popa
mov
or
jne
xor
jmp
movsb
insb
cld
cmp
pop
in
sbb
lcall
mov
sub
cmp
call
gs
inc
lds
add
cmpsb
adc
movsb
or
cmp
jmp
dec
call
rorb
cld
mov
xor
fsubl
cmp
aad
ret
loopne
mov
lods
jne
cmp
jnp
and
ss
sbb
in
int
xor
mov
or
mov
dec
add
testb
insl
cs
mov
xor
cmpsb
rol
cmpsl
lods
dec
nop
cmp
pop
addb
inc
cmp
fistpll
cmp
stc
add
push
add
fistpll
aam
pop
xchg
mov
cmp
cmpl
jl
xchg
cmp
lock
sbb
dec
xchg
jmp
add
mov
and
mov
jnp
xor
xchg
cmp
outsl
push
loop
cmp
xchg
and
or
mov
cmc
sub
les
mov
lods
cmp
cmp
in
fwait
imul
scas
cmp
push
sub
cmpb
shrl
sub
xchg
movsl
or
stos
out
push
rcl
jl
lods
cmp
pop
out
mov
xor
mov
and
addr16
lcall
sub
mov
cmp
xchg
mov
cmp
icebp
push
push
add
das
inc
insb
dec
call
ja
outsl
jne
mov
push
add
aas
jge
ja
ds
movl
xor
sar
aas
in
and
cs
inc
mov
mov
ljmp
xchg
int3
or
arpl
push
ret
into
daa
pop
in
pop
stos
xor
cmp
repnz
cmpsb
push
cmp
bound
insb
cmp
jl
push
icebp
sarl
add
ret
dec
mov
mov
lret
jbe
sti
int3
loop
jne
aaa
popl
add
dec
pop
les
outsb
inc
popa
inc
aaa
push
and
inc
lret
inc
cmp
leave
mov
push
hlt
mov
jno
daa
xchg
cmp
xchg
lock
cmp
or
push
cmp
dec
imul
mov
sub
loope
push
jne
es
jbe
cmp
enter
cmp
cmp
xchg
xor
inc
cltd
lret
dec
std
test
inc
rcll
cmp
push
movsl
push
repz
sbb
cmpb
das
in
xor
loop
mov
inc
stos
leave
pop
dec
adc
lahf
iret
mov
jl
jge
into
and
pop
jle
movsl
mov
push
or
pushaw
add
bound
movsl
xchg
mov
je
xchg
mov
cli
cmp
cs
lret
and
mov
cld
sub
fidivl
xchg
jp
inc
ljmp
scas
or
inc
popa
into
rcrb
fstpt
xchg
loop
repnz
add
ljmp
xor
jecxz
mov
mov
movsl
cmp
mov
inc
lahf
cmp
nop
out
jae
aas
push
sti
or
xchg
cmp
jecxz
jno
mov
lret
gs
nop
xchg
dec
cmp
jne
ss
mov
out
xor
imul
add
aaa
pusha
les
bound
lods
popl
fidivl
cmp
sbb
xor
sub
mov
or
stos
ljmp
arpl
dec
sets
adc
sbb
jp
test
sbb
cmp
adc
stos
movb
dec
push
inc
out
dec
outsb
dec
mov
push
and
mov
dec
jno
inc
arpl
inc
inc
enter
fwait
sub
call
popf
popa
xor
ret
sub
cmp
lret
outsb
das
pop
and
push
cmp
out
gs
cmp
js
or
mov
xor
cmp
out
sarl
lahf
lret
xchg
daa
inc
fwait
dec
pop
inc
cmp
push
cmp
fs
mov
in
or
out
inc
and
in
cmp
mov
insb
fnstcw
in
out
test
adc
mov
jg
lahf
repz
popa
and
int
aas
fistpl
fcoml
cmp
xor
pop
popa
cmp
lods
js
cmpl
xchg
pop
fstpl
add
fsubrs
inc
add
ret
cmp
cwtl
sahf
lods
or
ret
mov
cmp
jg
lret
insl
outsb
xchg
into
xor
cmp
and
lock
sbb
inc
data16
inc
lret
mov
lods
ret
jmp
and
fadds
jl
sbb
adc
out
adc
jns
mov
hlt
mov
lret
test
adc
adc
dec
jge
les
dec
pop
out
pop
add
cmp
iret
lds
str
pop
cmp
pusha
movsb
mov
dec
xchg
shll
dec
cmp
ret
and
jbe
pop
and
les
jle
ds
push
dec
dec
push
imul
inc
shrb
shlb
ja
cmp
add
push
notb
mov
cmp
mov
or
shlb
push
dec
jnp
mov
lds
sbb
xor
xchg
mov
adc
fiaddl
ja
cmp
andb
cmp
xchg
es
pushf
repnz
ret
cmp
ds
test
adc
sub
xchg
adcb
roll
adc
sub
fisttpl
mov
pop
xchg
push
lret
cmp
mov
mov
xchg
push
xrelease
fnstcw
mov
movsb
inc
sbb
cmpl
imul
int3
je
cmp
pusha
xchg
xor
call
push
dec
inc
cmp
dec
mov
es
bound
push
loop
in
mov
mov
push
ljmp
movsb
cmp
push
mov
test
push
inc
mov
mov
stos
adc
test
mov
das
pop
cmp
mov
das
lods
into
add
iret
popa
cmp
int3
and
cmp
pop
jmp
gs
les
xor
or
pop
outsb
mov
push
jae
mov
inc
dec
xor
movsl
jne
in
imul
jl
xchg
jo
and
out
cmp
mov
push
cmc
lret
or
imul
adc
mov
mov
inc
dec
dec
pop
loopne
jl
jae
lahf
xchg
cmp
lcall
mov
fdivrs
mov
call
cmp
mov
cmpsl
xorl
cmp
lret
cmp
rcrb
cmpsb
push
pushf
push
push
aam
adc
int
test
mov
add
push
push
mov
inc
push
outsb
aaa
or
adc
pop
dec
in
shr
sub
inc
cmp
in
les
insb
ss
cmp
aaa
rolb
ja
xchg
pop
mov
push
xor
adc
mov
ss
jbe
sbb
inc
movsl
sti
add
ficompl
cmp
fistpl
pop
fcomps
inc
inc
fists
dec
pusha
or
sub
or
cmp
fsub
xor
add
in
pop
roll
add
mov
jecxz
arpl
rol
outsb
inc
add
and
adc
es
jnp
adc
dec
pushf
sub
popa
movsb
jns
mov
dec
out
iret
dec
aad
fs
jno
adc
ja
jae
sub
adc
jmp
sub
xor
scas
cmp
jg
inc
and
mov
pop
jmp
inc
jno
cmp
sub
push
nop
and
dec
out
jmp
jae
ffreep
fisttps
mov
sub
mov
std
xor
aaa
and
jg
loopne
cmc
sbb
mov
movsb
outsb
shlb
shrl
out
into
imul
sti
fisttpll
mov
dec
dec
das
mov
sarb
mov
out
xor
int
int3
das
mulb
sbb
xorl
and
insl
jl
repnz
jg
mov
out
add
jle
rep
cmp
cmp
test
jl
jg
or
mov
xchg
outsb
adc
popf
sti
movb
ja
cmp
or
xchg
lods
lahf
loop
dec
jge
mov
mov
stc
or
das
add
sbb
push
xor
jns
sub
cmp
mov
lock
ret
xchg
pushf
test
es
push
pop
sub
mov
inc
cmpsb
lret
cwtl
jmp
cmp
pop
pop
lret
popa
add
push
frstor
pop
xor
cmp
stos
push
and
cmp
sub
mov
inc
lock
jns
loope
cmp
stos
cmpsb
mov
popf
mov
sbb
stos
pop
mov
or
xchg
pop
in
cmpsb
xlat
jnp
lods
inc
xor
pusha
xchg
imul
repz
sub
cmpl
fadd
fldt
dec
cmp
sbb
xor
sub
test
aaa
xor
dec
cmp
sti
xchg
cmp
adc
lods
jbe
pop
cmp
loope
inc
decb
imul
pop
test
push
dec
push
cmp
mov
ret
adc
fwait
pusha
fnsave
xchg
int
iret
jno
mov
and
popa
ss
jne
lods
scas
out
idivb
xchg
jnp
adc
popa
mov
mov
mov
pusha
cmp
mov
dec
aam
cmp
aaa
mov
mov
enter
loope
mov
in
enter
hlt
ds
inc
xor
loope
popa
xchg
mov
pop
scas
es
cmp
les
pop
test
cmp
cld
push
lret
cmp
fistl
sbb
push
xchg
cld
rcrl
pop
out
cmp
mov
outsl
cmp
pop
add
pusha
cmp
sub
cmp
rclb
aaa
and
sbb
adc
mov
cmp
xchg
pop
pop
push
mov
and
xlat
push
jl
mov
jmp
cmp
jle
or
cmp
push
push
jmp
cmp
mov
inc
test
jb
adc
mov
dec
push
push
mov
mov
neg
popa
les
in
shlb
adc
aaa
fists
test
ret
and
add
sbb
mov
xchg
mov
cmp
pop
push
mov
lds
test
cwtl
mov
xor
cmp
push
pop
xchg
push
jl
cmpsl
push
test
inc
pop
int3
popa
add
sub
fnstenv
pusha
fwait
jns
call
jmp
or
das
div
pop
scas
mov
fsubrs
cmp
lahf
bound
roll
repnz
dec
dec
and
ret
loope
cmp
mov
add
mov
and
pop
fisubrs
or
add
aaa
xor
sti
out
int
push
int3
jg
jne
jnp
out
test
cmp
xor
fxch
cmp
scas
push
mov
popf
fcmovne
xor
js
cmp
adc
xor
out
cmp
cmp
pop
cmp
jl
iret
push
lret
mov
movsl
cmpsb
add
sbb
xchg
xlat
and
fidivl
or
shll
fdivl
rcrl
cmp
outsl
jge
pop
pop
jecxz,pt
lahf
or
shl
add
aaa
sub
mov
loopne
cmp
cmp
leave
test
sub
lret
cmp
call
imull
out
jecxz
cmp
jle
mov
mov
cltd
out
xor
cmp
enter
cmpsb
cwtl
mov
cli
mov
push
mov
push
in
xchg
push
push
xsavec
jle
cmp
mov
jecxz
cmp
adc
in
cmp
addr16
mov
pop
andl
js
lret
mov
ret
add
mov
mov
sub
cwtl
pushf
jecxz
inc
les
mov
xor
xchg
add
daa
push
cmp
mov
jne
sub
dec
cmp
mov
inc
leave
cmp
dec
mov
pop
inc
hlt
xchg
test
aas
mov
lcall
cmp
and
add
scas
pop
sar
fwait
jmp
sbb
or
pushf
push
aaa
addr16
adc
je
aad
iret
cmp
cmpsb
mov
lods
cmp
popf
frstor
cmpl
fisubrl
cmp
dec
inc
lahf
cmp
cmpsl
mov
jnp
adcl
mov
fistl
or
jmp
in
lods
jae
dec
je
fucomip
cmp
sub
cwtl
sub
cmp
xor
cs
sbb
sbb
orb
or
jl
jo
ja
cmp
mov
inc
popf
js
lds
push
add
xchg
jno
orl
aas
and
cmp
push
sti
cmp
add
sub
cmp
shll
fadds
jbe
push
fnstsw
push
push
aam
cmp
add
push
mov
push
cmp
or
cmp
mov
xchg
sub
mov
cmp
std
mov
mov
adc
loopne
and
shrl
mov
aam
movsb
enter
pop
sahf
push
in
andl
jl
rcrb
push
mov
jno
rep
lea
push
neg
cmp
pop
ja
xchg
mov
xor
and
add
cmp
cmp
mov
lods
in
dec
jno
fs
cltd
dec
cmp
xchg
test
cmp
out
add
dec
outsl
add
dec
mov
add
dec
cmp
scas
lcall
out
test
es
cld
js
push
cmp
mov
cltd
int3
and
dec
xlat
sti
push
add
inc
push
cmp
out
lret
mov
fidivrs
nop
je
mov
jmp
adc
or
popa
repnz
faddl
pop
call
mov
lds
and
xor
pop
mov
mov
in
scas
push
cmp
inc
jmp
arpl
pop
cmp
outsb
ret
das
xchg
lret
cli
out
cmp
dec
inc
cmp
xor
adc
rcll
jno
cld
repz
xchg
cmp
jns
push
pop
lret
repnz
inc
dec
adc
cmp
cmp
fiaddl
out
jg
xor
add
pop
push
mov
mov
adc
data16
ret
daa
roll
lods
sub
sbb
sub
cmp
xlat
mov
das
mov
sarb
das
idivl
mov
shll
shl
jge
lret
cmp
sar
icebp
je
fwait
xchg
mov
shll
imul
mov
aaa
push
fisttpl
arpl
cmp
jecxz
inc
lods
cmp
sbb
inc
inc
pop
test
mov
nop
enter
jo
mov
icebp
adc
adc
sti
cmp
add
stc
xor
popa
cmc
lahf
fldcw
int
mov
cmp
add
dec
sbb
cmp
mov
push
jo
js
sahf
lcall
add
mov
mov
das
sahf
cmp
test
inc
aad
cmp
stos
pushf
push
mov
cmp
call
cltd
cmp
insb
sub
bound
cmp
push
andb
fwait
sbb
sub
push
jl
pop
insb
or
adc
icebp
aaa
scas
push
and
sbb
outsb
jne
mov
lea
push
mov
jnp
enter
shll
popl
cmpl
in
add
push
inc
mov
aaa
ss
fld
push
xchg
cli
out
cmp
xor
push
cmp
jp
inc
loopne
fwait
inc
jo
mov
test
stos
and
pop
xchg
mov
icebp
push
lcall
pop
push
cmp
dec
ss
cmp
jge
sbb
mov
aaa
cmc
add
pop
mov
rolb
sbb
add
out
adc
pop
fsts
mov
xor
int
add
mov
jge
idivl
aad
iret
cmpb
movsl
fwait
pusha
cmpsl
mov
mov
call
fsubs
mov
adc
inc
cmp
pusha
dec
data16
ret
cmp
inc
mov
cmp
out
sahf
sbb
outsb
xor
insl
inc
xor
cmp
inc
leave
pop
rcrb
pop
into
push
jnp
int
inc
movsl
inc
in
cmp
fbstp
inc
imul
out
cmp
cmpps
ret
push
xor
gs
ss
cmp
aaa
push
addb
xchg
cmpsl
jb
cmp
xor
ljmp
repz
out
roll
cwtl
push
inc
cmp
mov
dec
adc
or
in
adc
adc
out
or
imul
jge
ret
lahf
ss
mov
push
mov
jle
imul
push
inc
inc
mov
pop
aaa
and
fildl
int3
push
and
jg
pop
xchg
adc
mov
cmp
ror
inc
lea
push
not
dec
mov
and
and
inc
cld
jno
out
in
mov
pop
sbb
cmpsl
cmp
fcomps
repnz
mov
addb
sub
push
pop
jmp
push
inc
das
inc
push
fs
push
aam
sbb
cwtl
in
mov
pop
popa
jl
stos
or
iret
cmp
js
aam
and
in
addr16
sub
sahf
mov
das
mov
mov
cmp
imul
mov
js
pop
sti
xor
in
xor
sub
sbb
jl
xchg
idivb
out
cmp
dec
cmp
adc
pop
aas
rcr
cmp
mov
clc
data16
popf
ljmp
dec
cmp
or
mov
cmp
stc
andb
addb
into
cmp
les
es
add
jno
mov
loope,pt
lret
inc
cmp
ficompl
cmp
pop
mov
and
in
mov
adc
mov
imul
sub
add
movsb
fcomps
lods
movsl
cmp
lea
jg
cmp
fiaddl
cmp
cwtl
sarb
cmp
xor
mov
push
clc
call
dec
jp
cmp
ret
inc
leave
into
cmp
push
lret
pop
and
xor
jp
je
fisttpl
sub
cs
cmp
inc
lret
mov
sarb
jae
fs
cld
lret
das
jns
adc
jg
mov
inc
loop
xor
bound
test
jl
call
das
stos
mov
mov
dec
int3
xchg
cmp
ja
inc
pop
ret
cmp
adc
mov
fistps
push
dec
bound
into
lods
pop
outsl
inc
test
mov
js
test
inc
cmp
jno
sub
jge
and
dec
pusha
roll
sbb
or
es
add
adc
sub
loopne
pop
cmp
out
inc
das
insb
dec
xorb
pop
cmpsb
sbb
pop
mov
test
or
xchg
je
inc
cmp
lahf
pop
xor
cmp
mov
popa
push
iret
cmp
jns
mov
daa
push
stos
sbbl
dec
adc
rolb
icebp
jg
inc
inc
add
shll
cmpsl
aas
cmp
pop
sub
adc
jbe
jns
pop
mov
mov
pop
pop
sub
inc
xor
out
mov
dec
cmp
push
arpl
add
icebp
orl
mov
fcom
cmp
and
pop
insl
cmp
outsb
fisttpl
in
aas
push
fdivl
pop
popa
mov
test
bound
or
cmp
mov
xchg
xchg
and
test
cmp
jo
sub
mov
je
add
leave
call
xchg
cmp
jno
sti
jmp
jbe
adc
out
pop
sbb
shrb
cmp
and
outsb
xchg
adc
jge
cld
fs
cmc
inc
aaa
lds
pop
pop
push
inc
movsb
inc
sarb
mov
inc
or
pop
cmp
jl
jle
jno
and
int
cmp
dec
add
pop
mov
sarb
push
jle
test
sbb
and
ror
ficompl
cmp
xor
xor
pusha
sbb
add
test
shrb
sbb
cmpsb
iret
or
cmp
sbb
out
cmp
mov
cmp
xchg
sub
mov
and
aad
mov
cmp
lret
out
les
mov
movsb
sub
and
es
inc
dec
sbb
mov
enter
sub
lea
cmp
fnop
cmp
ds
sub
insb
push
push
pushf
cmp
in
adc
lret
xlat
cmp
xor
mov
pop
pop
ret
jmp
adc
xor
fcmovnbe
lret
pusha
cmp
mov
fcoms
cmp
push
loopne
xchg
dec
iret
cmp
fldenv
mov
in
mov
cmp
and
and
adc
cmp
cli
push
ss
rcr
xor
or
sbb
cmp
pop
xchg
sarb
inc
arpl
dec
or
cwtl
jno
xchg
dec
jecxz
cmp
ja
in
inc
push
cmp
test
xor
popf
sti
sub
pop
imul
sub
adc
mov
nop
jl
xor
jne
sub
mov
hlt
sub
jmp
pop
push
xor
rolb
call
xchg
mov
jmp
cmp
inc
adcb
push
inc
dec
push
pop
sbb
cmp
mov
and
mov
push
pop
ds
mov
movsb
rcll
and
loop
xor
aas
sarl
xchg
jnp
dec
mov
sub
cmp
lods
jl
cmp
mov
inc
outsb
andb
jae
sub
jge
dec
je
add
movntps
sbb
push
cmp
mov
out
cmp
sub
movsl
movsb
push
cmp
mov
sbbl
cmp
mov
xor
sbb
mov
push
ret
cmp
xchg
loope
test
push
iret
dec
outsb
cmp
push
cmp
jno
bound
movsl
lret
jo
aas
mov
pop
xor
test
or
out
icebp
ds
sub
push
add
insl
push
lret
cmpb
lds
loop
pop
out
fdivrs
aam
jb
cmp
pushf
ret
xlat
fnstcw
pop
fbstp
mov
jle
sarl
and
pop
xchg
xchg
sbb
cmp
and
mov
pop
stc
test
jmp
sbb
adc
and
mov
lret
enter
pop
cmp
dec
std
pop
mov
lds
jle
jl
and
in
inc
or
sti
add
mov
pop
ror
jmp
xchg
sbb
pop
cmp
movl
popa
jge
jo
aad
test
lret
cmp
sub
aaa
test
push
sbb
mov
fmuls
cmp
hlt
pop
cs
cmp
mov
fwait
in
popa
add
mov
cmp
repz
xchg
cmp
ljmp
lcall
loopne
xchg
scas
fnsave
out
jbe
and
xchg
lods
pop
jno
daa
in
push
xor
mov
push
mov
lds
pop
lahf
push
cld
call
pushf
das
inc
mov
jmp
xor
mov
add
jnp
or
mov
insb
jbe
ja
mov
mov
adc
fldt
cmp
popa
inc
jne
push
add
pminub
pop
rcrl
inc
sbb
add
mov
pushf
stos
adc
mov
mov
aaa
shlb
dec
testl
ss
dec
adc
pop
int
scas
cmp
or
in
push
cmp
xchg
rclb
mov
jmp
jnp
push
mov
movsl
in
outsb
into
cmp
cmpsl
mov
mov
idiv
jmp
push
fmul
pop
out
adc
mov
pop
inc
std
jae,pt
and
fistpll
movsb
adc
decb
xchg
jae
test
cltd
cmpsb
mov
xlat
aas
call
xchg
push
or
aaa
xchg
inc
mov
rcrl
sub
das
fildl
cmp
xorl
inc
cmp
jecxz
mov
xchg
inc
sbbb
je
mov
mov
sti
cmp
push
and
lret
inc
loope
jg
cmp
rolb
pop
cmp
jecxz
mov
sub
js
mov
xor
cld
outsb
cmp
leave
inc
pop
push
cmp
xor
adcl
fistl
mov
jle
cmpsb
hlt
lret
and
scas
mov
jno
cmp
out
push
pop
or
mov
jmp
lret
jl
popa
mov
pop
cmp
ja
out
and
jmp
xor
adc
clc
cmp
fsubrs
dec
mov
jno
cltd
sahf
movsl
pop
lcall
mov
inc
adc
idivl
xor
xchg
nop
outsl
xlat
fistpl
jle
orb
dec
fisubrl
push
cmp
les
mov
cmp
jae
repnz
xorl
enter
pusha
cmp
les
pushf
jnp
add
jmp
fdivl
inc
cmp
xor
aam
popa
gs
popf
jg
ljmp
inc
cmp
add
mov
in
sbb
out
cld
faddl
loopne
sbb
push
ret
mov
test
mov
mov
xlat
jo,pt
mov
call
imul
mov
sti
cmp
pop
rcrb
movsb
out
jecxz
popa
arpl
call
arpl
or
shr
cmp
aaa
out
sub
or
inc
pop
fstp
loop
stos
outsl
in
pop
sub
jne
iret
jno
cmp
dec
mov
fnsave
das
stos
fwait
adc
out
mov
inc
packssdw
mov
andb
iret
push
lods
jmp
sub
out
fsubrp
cmp
xor
js
sub
in
clc
sub
aas
mov
add
ret
call
repz
xchg
rclb
jbe
mov
pop
div
les
addr16
aaa
adc
mov
adc
jne
cmp
daa
mov
pusha
sarb
push
pop
or
insb
fdivr
mov
cmp
ss
sbbb
add
and
dec
pushf
ja
mov
dec
iret
loop
push
pop
jno
sub
cmp
mov
insb
sub
test
iret
push
lds
sahf
pop
fs
xchg
cmpb
pop
imul
jle
jne
repnz
movsl
cmp
ljmp
sti
movsl
xchg
loop
push
cmp
and
add
lods
add
or
bound
mov
mov
adc
inc
in
data16
pop
mov
dec
xor
adc
fwait
jbe
xchg
xchg
fdivrs
cmp
stc
mov
adc
aam
loopne
add
dec
scas
mov
movsb
xor
cmp
sub
icebp
mov
aas
push
cmpsb
xchg
jl
hlt
adc
rcll
in
add
xor
cmp
and
fs
xchg
fidivrs
xorb
ret
cmp
mov
lcall
mov
jns
pop
cmp
adc
cmp
aas
push
add
dec
outsl
pop
daa
mov
cmp
jns
xchg
loopne
jmp
inc
test
mov
mov
rcr
mov
loopne
cmp
shlb
dec
fs
das
dec
int3
push
xchg
bound
aaa
fsubl
imul
inc
cmpb
fcoms
test
xlat
aad
xor
mov
pop
lds
mov
call
pop
add
mov
mov
test
ret
jnp
int3
dec
jnp
in
mov
in
pop
orb
and
pushf
sarl
cmp
sub
ret
pop
das
jb,pt
rcr
sub
mov
nop
jmp
fstpt
lods
mov
xchg
pop
fwait
cmp
mov
add
mov
dec
js
xchg
pop
loope
sbb
cmp
mov
popa
loop
inc
into
and
sub
mov
dec
or
sbb
pusha
add
dec
xor
emms
inc
imul
add
loopne
loop
sub
in
mov
jbe
loopne
mov
cmp
adc
jge
dec
add
mov
fwait
test
dec
insb
aaa
clc
rcll
addb
pop
inc
outsl
movsb
push
repnz
mov
jo
add
cmp
pop
mov
imul
pop
rolb
sbb
pop
popl
cmp
mov
stos
jl
test
and
pop
jecxz
iret
adc
jne
shll
sbb
stc
aaa
test
and
icebp
cmp
mov
xchg
mov
lods
repnz
or
push
imul
lea
and
mov
cld
inc
inc
mov
push
cld
outsl
cmpb
cmp
test
fdivrs
stos
mov
fld1
cmp
lods
cmp
mov
push
sbb
pusha
arpl
cmp
lods
push
adc
push
mov
mov
jb
mov
imul
inc
add
out
pop
mov
outsl
cmp
jno
arpl
and
cmp
test
idivl
fnstsw
push
arpl
cmp
push
pandn
jle
mov
aaa
stos
andl
aam
sbb
push
clc
daa
shrl
test
xchg
lea
cmp
and
mov
cmp
leave
fistl
das
loop
push
or
mov
cmp
ljmp
mov
aas
sbb
or
loope
into
in
out
mov
cmp
xor
mov
test
pop
pop
xchg
mov
sti
incb
xchg
sahf
push
adc
pop
jle
pop
inc
cld
xchg
ror
dec
bound
aaa
test
xchg
test
jnp
not
hlt
popf
test
ret
mov
jbe
in
arpl
mov
es
xor
fwait
hlt
and
insb
inc
adc
lret
loop
out
lods
cmp
loope
movsl
movsb
pusha
ja
lcall
jg
ds
out
mov
cmp
mov
add
scas
push
iret
cmp
adc
xorb
pop
imul
mov
data16
mov
and
pop
cmc
das
push
pushf
aaa
xchg
cli
inc
push
dec
sbb
xchg
hlt
sub
inc
cld
cmp
pop
cmp
outsb
test
stos
lea
int
fxch
gs
push
pop
outsb
xchg
jl
adcb
and
out
test
inc
mov
adc
arpl
mov
sub
inc
mov
jns
iret
cmp
sub
lret
cmp
sbbb
mov
gs
mov
jbe
mov
es
loopne
les
out
pop
adc
sarb
mov
inc
add
cmp
xchg
arpl
in
das
hlt
fidivl
sbb
mov
pop
cmp
iret
push
loop
cmp
cwtl
mov
sahf
int3
hlt
and
popa
and
std
fisubl
fs
sbb
les
sbb
lods
das
dec
adc
movsl
ljmp
cmp
inc
pop
pop
sti
fwait
and
cmp
sub
pop
jne
call
mov
adc
push
popf
shll
and
ss
or
insl
adc
clc
dec
push
cmp
mov
mov
cmp
cmp
cmp
or
pusha
cmp
mov
or
xchg
movsl
mov
inc
cmpsb
xor
and
lock
lret
mov
add
pop
xchg
xchg
jns
cmp
lock
xor
imul
cmc
inc
mov
in
mov
ret
add
and
mov
cmp
loopne
leave
mov
neg
out
push
xor
or
mov
adc
daa
les
aaa
imul
cmp
xor
fidivrs
call
ljmp
fwait
js
test
mov
adc
out
fucomp
pusha
sti
push
mov
push
push
sbb
xchg
nop
cmp
repnz
dec
push
jl
mov
loope
fisubl
loopne
mov
cmp
inc
dec
mov
cmp
mov
scas
jae
lods
cmp
data16
subl
mov
sub
jbe
mov
and
addr16
movsl
xchg
sub
into
inc
jb
cmp
int
cmpsb
hlt
cmp
push
xchg
rolb
and
mov
arpl
cmp
bound
xor
pop
ffreep
inc
lods
lods
pslld
lahf
jge
adc
data16
and
push
stos
and
mov
jl
cmp
movsl
sub
xor
cmp
mov
popa
inc
aam
leave
cmp
mov
jg
sbb
in
fistpl
popa
ds
pop
pop
cmc
xor
xchg
addl
xchg
push
jg
sbb
scas
fldl
jle
cmp
mov
mov
pop
cmp
outsl
es
lret
cmp
pop
xchg
out
or
stos
movsl
dec
pop
push
and
fwait
rorl
mov
in
adc
aaa
outsl
xchg
or
sbb
xor
sbb
movsb
imulb
pop
cmp
sbb
mov
and
dec
push
mov
sub
cmp
sbb
add
sahf
pop
fistps
subb
adc
xor
fistpl
cmp
gs
cs
fnsave
pusha
cmp
dec
out
test
dec
fcmovne
test
scas
pop
rcrb
cmp
or
mov
adc
xchg
cwtl
cmp
pushf
xchg
mov
add
mov
xor
inc
insl
mov
aaa
mov
filds
outsl
xchg
cmp
pop
mov
scas
add
or
daa
in
hlt
add
addr16
or
xchg
lcall
push
sub
pop
arpl
sub
jle
dec
xor
scas
mov
cmp
sub
cmp
mov
xchg
dec
jo
cmpsl
xchg
mov
fcompp
add
jl
cli
movsl
jns
andb
addr16
push
sbb
popf
dec
shlb
jae
repz
arpl
das
sub
xor
in
popa
enter
jmp
insb
cmp
xchg
push
cmp
jg
mov
gs
mov
mov
xchg
pushf
out
sbb
cmp
xchg
pop
stos
cmp
inc
add
xchg
js
mov
add
inc
adc
repnz
mov
jo
or
or
jl
lret
es
test
insl
fiadds
imul
rcrb
inc
imul
cmp
outsl
lret
das
sub
pop
inc
test
pop
das
lret
repnz
add
jp
cmp
lods
out
les
dec
push
pusha
and
jo
xchg
add
sbb
cmp
imul
cmp
mov
jle
dec
push
iret
mov
jae,pt
in
mov
das
lock
pop
ret
cmp
jle
add
cmp
icebp
fiaddl
ds
xchg
je
iret
jg
pop
mov
aad
jl
xor
int3
in
lahf
mov
and
fdivrl
sar
inc
lock
cmp
sub
cmp
loope
mov
ja
cmp
add
sub
cmp
inc
ja
test
cwtl
xchg
jp
das
or
inc
imul
out
jne
mov
jl
aad
mov
lods
cmp
push
adc
cmp
inc
mov
in
mov
or
pop
sarl
cmp
add
mov
cmp
push
repz
inc
and
add
sub
mov
and
xchg
shlb
xchg
test
cmp
sub
xchg
iret
mov
inc
push
pop
mov
xlat
ret
jmp
icebp
mov
sbb
and
fwait
add
add
int
sbb
dec
fnstenv
push
add
fadd
lret
sahf
mov
shlb
in
fs
aas
mov
pusha
mov
jecxz
mov
rcl
xchg
xchg
sub
arpl
dec
cld
test
in
mov
lret
nop
cmp
js
sbb
or
jmp
iret
and
cmp
test
stos
cmp
or
dec
lcall
add
adc
out
arpl
or
dec
inc
cmc
insb
sti
mov
iret
inc
pop
jae
cmp
dec
je
test
mov
lahf
mov
dec
cmp
hlt
sub
outsl
mov
dec
jno
pop
es
jl
insl
push
add
push
in
stos
push
dec
cmp
enter
jae
das
jno
lds
jl
rcl
cmp
jnp
fists
xchg
dec
pushf
mov
cmp
icebp
stc
pop
leave
cmp
lret
aas
outsl
xchg
mov
cmp
lods
flds
and
sbb
aad
mov
pop
gs
push
mov
fistl
cmp
push
mov
sahf
pop
xorl
or
loop
leave
sbb
adc
mov
and
sub
mov
and
inc
out
lock
jae
mov
and
shlb
mov
cmp
add
xor
xchg
cltd
sub
rcr
cmp
mov
rcll
pop
or
dec
and
popa
adc
sub
jb
dec
leave
lcall
cmp
mov
cmp
mov
mov
lea
fidivl
insb
sub
je
fsubrl
mov
jb
mov
out
cmp
pop
mov
cmp
dec
mov
in
sbb
bound
push
or
sbb
gs
call
fs
movsb
sub
pop
adc
add
push
adc
jno
in
ret
inc
pop
aas
cmpl
adc
mov
jmp
or
insl
pop
loopne
sbbl
pusha
jbe
pop
fs
xchg
frstor
clc
mov
scas
cmp
xchg
cwtl
cmp
pop
lret
cmp
add
jecxz
sti
push
ljmp
imul
mov
pop
les
cld
cmc
das
add
pop
cmp
cmp
jecxz
popf
push
ret
cmp
sbb
cli
pushf
les
cmp
jns
cmp
cmp
sbb
pop
xchg
cmp
rol
cmpl
mov
cmpsb
cmp
adc
stos
xor
sbb
popf
es
cmp
gs
mov
push
cmp
scas
xor
jge
cs
xchg
gs
push
pop
aaa
jbe
mov
arpl
mov
mov
ret
addr16
jle
lret
dec
dec
sarl
add
test
mov
notb
pop
cmp
adc
imull
popa
cmp
leave
pop
jb
and
dec
lret
cmp
std
cmpsb
cmp
adc
sbb
cmp
sub
xchg
imul
dec
movsb
inc
mov
inc
cmp
rcrb
cmp
mov
mov
test
xchg
iret
popw
lds
push
sbb
xchg
daa
stos
repnz
shlb
push
or
cmp
iret
cmp
out
imul
cltd
or
outsb
mov
stos
cmp
lcall
ljmp
es
cmp
rolb
fistpll
xor
mov
int
adcb
hlt
pop
ret
mov
push
push
jmp
jns
push
inc
cmp
stos
ja
in
cmp
sarb
cmp
data16
outsb
cmpsl
lahf
imul
cmp
or
pusha
aad
xlat
push
cmp
lcall
sbb
inc
cmc
ret
push
cmp
mov
int
inc
mov
xor
enter
int3
fistpll
adc
jle
sub
adc
push
cmp
hlt
and
rol
cmp
leave
rcrl
cmp
test
or
pusha
mov
cmp
out
xchg
pop
dec
cmp
pop
int
imul
sbbl
stos
rorl
push
xor
jb
or
add
pop
std
mov
pop
sub
aas
jne
ret
mov
sti
mov
hlt
xor
cmp
daa
mov
push
jecxz
xor
cmc
or
and
lods
inc
cmp
fs
out
pop
roll
jmp
cmp
popa
add
lods
cmpsl
fnstenv
cmp
xchg
lret
xor
sub
cmp
popf
xchg
sahf
mov
fistpll
fs
xchg
sbb
mov
pop
out
inc
mov
gs
and
mov
and
test
dec
iret
mull
lds
orl
mov
push
xchg
adc
ss
cmp
ret
cmp
pusha
mov
or
mov
sbb
sti
xor
cmp
outsl
add
sub
push
inc
jns
push
ds
je
jo
pop
fnsave
mov
mov
push
enter
cmp
adc
add
cs
fsubr
xchg
sarl
ret
dec
cmp
cmpb
sti
mov
mov
int
scas
push
xchg
or
sti
push
sbb
cmp
imul
outsb
inc
cmp
adcl
movsb
ds
into
mov
cmp
sbb
cmpsb
pop
jg
fwait
ja
in
inc
cmp
lcall
inc
lock
mov
mov
push
mov
aaa
outsl
outsb
mov
in
sub
jnp
cmp
ret
jae
sarb
mov
loop
add
cmc
xchg
ja
jnp
fsub
cmp
mov
arpl
inc
stc
roll
push
roll
mov
das
nop
jbe
sbb
dec
cwtl
mov
lret
aaa
in
jmp
leave
test
push
dec
cmp
cmc
mov
cmp
mov
nop
jae
cmp
add
and
cmp
xchg
jno
into
pop
dec
cmp
mov
aaa
add
enter
mov
lods
imull
xchg
add
cmpl
aas
icebp
cmp
add
jge
cmp
rcll
stc
mov
push
add
cmp
loopne
imul
pop
cmp
adc
out
mov
dec
sub
mov
xchg
push
imul
cmp
pop
mov
mov
jmp
xchg
mov
daa
aas
lea
cmp
and
mov
push
sbb
lahf
push
cmp
and
lds
cmp
les
das
inc
inc
aaa
cmp
shlb
cmp
xchg
jns
jle
mov
pop
inc
push
aam
cltd
xchg
mov
leave
cmp
sub
mov
int3
enter
or
adc
dec
or
and
mov
cmp
inc
movl
out
iret
sarb
add
mov
es
fadds
out
add
shl
mov
mov
mov
das
mov
popa
andl
jae
cmp
cld
jecxz
movsb
pop
fnstsw
sbb
push
imul
ret
pop
xchg
pop
xor
scas
mov
sbb
and
xchg
cmp
xchg
in
cmpsl
inc
xlat
cmp
aas
push
ds
outsb
jnp
leave
cmp
nop
pop
cmp
pop
out
pushf
xchg
jl
mov
inc
loope
jb
cltd
lahf
jl
jp
cmp
xchg
jo
pop
add
pop
dec
mov
xchg
and
cmp
add
jl
xor
test
lcall
jns
ror
ret
mov
aad
push
rorb
bound
and
pop
ljmp
mov
sub
or
std
lock
test
jp
mov
push
cmp
popa
mov
in
repnz
push
loopne
ja
add
fistpll
add
mov
cmp
hlt
movsb
push
xor
jg
popa
and
data16
mov
lret
and
xor
stos
adc
test
cmpb
rol
in
cmp
rclb
pop
inc
mov
negb
sbb
iret
outsl
cld
cmc
scas
xchg
pushf
mov
jecxz
pop
mov
aam
jl
pop
roll
or
dec
mov
dec
mov
push
pop
imul
stos
aam
pop
sbb
sbb
or
mov
fsubr
cmp
xor
xor
ds
sbb
and
sub
fdivrs
cmp
adc
enter
inc
pusha
inc
into
inc
arpl
movsb
jo
dec
cmp
mov
push
xchg
cmp
inc
rcl
cmp
dec
lret
jns
enter
aam
hlt
sub
mov
add
jge
popa
in
push
push
and
lods
dec
cmpl
and
stos
adc
jg
test
lret
fsubrs
pusha
iret
cmp
push
jg
test
sbb
rcrb
xchg
sbb
or
adc
int
mov
sahf
bound
cmp
sub
adc
aas
or
cmp
sbb
mov
fsts
xchg
cmp
mov
xor
or
movsb
punpckhbw
std
pop
in
cmp
cmpl
cmovs
or
jne
arpl
sbb
sbb
and
popf
and
and
imul
stos
mov
rol
fucomi
xchg
ror
jbe
cmp
inc
sub
ret
enter
outsl
dec
mov
ja
lahf
gs
int
cmpsl
cmp
dec
lea
adc
sub
push
adc
jo
push
pop
cmp
xchg
jae
out
notb
int
push
lret
es
aaa
xchg
mov
imul
cmp
jg
test
insl
cmp
push
fs
or
imul
jp
add
push
leave
or
pop
inc
ljmp
pushf
mov
pop
sahf
scas
mov
sbb
lds
mov
loope
xchg
add
ss
and
shlb
mov
in
imul
jo
clc
in
cmp
popf
rol
cmp
or
out
lret
in
cmc
frstor
lock
dec
adc
and
cwtl
iret
notb
pop
into
imul
mov
mov
xchg
popf
loope
mov
xchg
aam
je
cmp
mov
adc
int3
mov
adc
in
cld
adc
push
pop
mov
and
jp
ror
mov
push
pop
insl
pop
cmp
add
loopne
rolb
cmp
inc
outsb
add
orl
out
lock
push
imul
xor
notl
pop
pop
sarl
inc
test
in
xchg
inc
mov
or
cmp
push
cmpsb
shl
aaa
std
mov
mov
xor
cwtl
xchg
xchg
or
jl
cmp
icebp
pop
daa
nop
pop
jne
sahf
stc
xchg
or
xor
push
jb
iret
sbb
shll
adc
and
insl
sti
xchg
push
push
xchg
inc
push
xor
pop
dec
rcrb
pop
add
xlat
fcmovne
popa
jge
push
and
out
icebp
mov
dec
cmp
mov
cmp
sbb
pop
test
mov
pop
and
in
insl
pop
dec
push
cmp
test
aaa
lret
cmp
mov
inc
cmp
cmpsb
into
jg
aaa
mov
shr
xchg
xchg
cmp
sbb
sbb
ljmp
push
cmp
jae
and
push
scas
mov
lret
daa
fsubp
or
cmp
push
and
dec
push
jns
test
or
roll
xor
pop
push
cmp
stos
xor
sbb
fwait
cwtl
pusha
or
imull
pop
cmp
jne
popa
cmp
sub
fmul
cmp
xchg
in
mov
xor
imulb
inc
aaa
sub
jb
imul
mov
inc
dec
dec
xchg
push
das
lahf
sarl
fcomi
out
cmp
std
inc
repnz
cmp
jle
inc
lret
cmpb
or
push
sbb
cmp
movsb
test
mov
lods
lods
jae
rclb
cmp
addl
out
lret
lock
xchg
negb
hlt
scas
mov
dec
loopne
dec
nop
cmp
sbb
cmc
xor
adc
lock
ja
sahf
push
pop
xor
cmp
push
mov
mov
mov
stos
adc
mov
mov
mov
add
push
mov
jge
pop
cmp
dec
iret
mov
push
push
sbb
push
fdivrl
mov
movsb
addr16
cmp
dec
push
loop
mov
mov
ffreep
ljmp
clc
or
push
aaa
pop
pop
inc
cmc
aad
out
mov
gs
mov
ja
cmp
das
rcrl
jle
fucomi
jns
sub
dec
push
icebp
or
lods
add
notl
dec
dec
push
dec
in
cmp
hlt
push
and
sahf
nop
mov
jns
pop
popa
pop
popf
inc
jnp
mov
pop
jno
aam
cli
fstpl
cs
int
mov
aas
xor
sarl
aam
xchg
and
lea
adc
sbb
push
mov
out
popa
arpl
cmpsl
std
ficoms
cmp
es
mov
out
roll
lods
jmp
fistl
cmp
out
lcall
iret
fiadds
or
cmp
movsl
jns
push
jae
xchg
adc
adc
dec
inc
inc
inc
mov
data16
cmp
loop
outsb
jb
subl
int
leave
dec
pop
outsl
movsb
popa
cmp
add
popf
aaa
lret
xor
scas
pusha
popa
ja
add
out
cmc
adc
cmp
mov
stos
cmpsb
pop
fnstsw
and
dec
test
int
inc
cmp
lds
inc
imul
in
jp
jo
js
aas
sarb
daa
add
pop
rcrb
data16
popf
or
xchg
sbb
mov
mov
aaa
inc
mov
bnd
insb
das
mov
lret
push
mov
jo
lahf
mov
and
xchg
inc
push
decb
fs
icebp
in
cmp
leave
in
and
out
mov
dec
in
insb
cltd
cmp
jno
cmp
and
and
cmp
iret
sbb
sarb
sbb
ret
add
cmp
push
xlat
mov
sub
xor
je
stos
mov
rolb
dec
test
jns
xchg
js
sub
sbb
push
mov
cltd
repnz
fwait
sub
movsb
in
mov
xor
add
pop
push
jge
lret
das
push
push
stos
sbb
push
add
xchg
jbe
adc
stc
push
sub
inc
hlt
and
mov
pop
aad
jp
mov
sahf
addr16
jle
ret
iret
aaa
jae
lods
push
shrb
cmpl
push
mov
in
insl
sbb
pop
push
cmp
mov
andb
test
enter
shrb
xchg
mov
sbb
sub
dec
repz
sub
cmp
sbb
stc
dec
sarl
aaa
addr16
fdivrl
cmp
lds
aas
jno
lea
or
push
cmp
mov
lods
popa
adc
mov
sar
fildll
call
fdivrs
pop
aam
enter
repnz
out
dec
mov
cmp
dec
mov
je
lret
dec
push
lock
cmp
mov
mov
cmp
jb
insb
int3
cmp
xchg
rorl
mov
jns
jg
addl
mov
stos
ss
pop
sbb
stos
or
cmp
xchg
or
mov
fwait
and
cltd
outsb
fadds
imul
inc
call
movsb
leave
int3
cmp
xchg
rorb
jno
mov
repnz
jmp
inc
int3
jns
inc
jnp
cmp
roll
cmp
out
pop
imul
in
mov
stc
cmp
sti
sbb
mov
das
pop
mov
mov
push
daa
pop
mov
cmp
or
test
and
mov
test
mov
or
adc
jb
cmp
in
sti
dec
jno
cmp
gs
into
cmp
mov
inc
dec
push
dec
cmp
and
lahf
xchg
fnstenv
jae
mov
mov
stos
xchg
cmp
popf
fistl
lahf
int
jle
dec
sub
mov
pop
adc
sbb
cmp
mov
xchg
mov
add
pop
xchg
sarl
mov
mov
pusha
js
push
repnz
push
in
stc
mov
sub
xchg
cmp
add
push
pop
cmp
push
xchg
sub
cmp
xchg
rclb
xchg
cmp
push
pop
outsb
jno
cmp
mov
lret
cmp
pop
cmpsb
xor
cmp
mov
dec
dec
loopnew
test
stos
inc
fs
cmp
jmp
push
mov
aaa
fiaddl
es
dec
lcall
and
out
cmp
insl
adc
nop
cmp
mov
fsts
pop
cmp
push
faddl
mov
aas
mov
lock
cmp
arpl
leave
aaa
aad
orl
add
xlat
dec
cli
lods
jl
idivb
mov
hlt
sbb
mov
xchg
nop
cs
push
xchg
cmp
cmp
jae
push
movsl
les
aaa
lahf
cltd
shl
or
mov
cs
pop
int3
push
push
cmp
jle
das
lds
inc
pop
pop
in
push
inc
lahf
cmp
add
gs
lock
scas
mov
mov
and
xchg
aam
out
dec
into
mov
fisubrs
jnp
insb
xlat
xor
mov
jle
cmp
mov
inc
popf
xor
push
ljmp
imul
stos
cmp
jmp
jle
data16
inc
cmp
lea
cmp
adc
lret
dec
pop
mov
mov
aad
ret
stc
out
test
mov
cmp
pushf
stc
push
test
cmp
test
dec
jmp
cmp
sahf
jae
xchg
cmp
das
add
xorl
std
pop
push
popf
xchg
cmp
outsb
cwtl
xlat
das
call
stc
xchg
adc
sbb
repnz
mov
cmp
lret
cmp
adc
push
sub
sbb
cmpsl
xor
gs
inc
cmp
push
int
aad
mov
adc
lret
xor
mov
ss
aaa
jle
add
cmp
dec
movsb
dec
sub
outsl
ja
insb
xor
push
leave
xchg
or
dec
cmp
mov
xchg
dec
cmp
sub
pop
cmp
fdivl
aaa
rolb
rcrl
imul
push
int
cmc
mov
xor
cld
test
scas
lock
mov
hlt
cmp
adc
lret
lds
cmp
fwait
cmc
aad
cmp
or
push
or
mov
and
cmp
cmpb
jecxz
or
movsl
jnp
dec
cmpl
aaa
lret
rcrl
sub
in
dec
shlb
cmp
leave
in
faddl
push
push
mov
mov
sbb
pop
loop
insb
xor
sbb
rorl
cmp
stos
push
add
jmp
xor
mov
out
pop
les
pop
das
in
movsl
scas
adc
test
das
in
hlt
inc
mov
ficoms
adc
inc
lods
pop
xchg
xor
into
mov
dec
or
adc
xchg
cmp
ret
pop
inc
sbb
ror
es
cmp
lds
ss
sbb
fnstsw
dec
adc
int
fsts
fs
mov
shrb
and
and
hlt
cmp
out
jnp
cmp
xor
enter
daa
loope
fildll
loopne
aad
rcrb
xchg
cmp
mov
add
fs
cmp
inc
insl
lahf
lods
ljmp
push
lret
pop
jne
mov
sarb
daa
sub
dec
nop
push
mov
cs
cmp
push
lahf
fs
fwait
in
aad
cmp
pop
xchg
push
cltd
arpl
in
and
nop
cmp
mov
rcl
jg
inc
rorb
test
mov
cwtl
sub
aaa
in
adc
mov
xor
pop
mov
mov
das
adc
cld
sbb
mov
repnz
mov
jnp
fdivrl
mov
mov
dec
insl
test
cwtl
sarl
in
jo
cmp
jne
xor
jns
xchg
mov
inc
sti
xor
sub
les
push
insl
in
adc
rclb
test
pop
jp
jb
cwtl
push
dec
cmp
adc
pop
fstl
orl
mov
hlt
inc
lods
xchg
loope
mov
stos
fimull
test
lret
cmp
iret
aad
and
ret
add
jns
cs
cmc
enter
orl
cmp
sub
lsl
mov
cmp
mov
push
in
aaa
pop
xchg
push
and
lods
ds
out
ss
cmp
mov
pushf
jns
out
cmc
es
cmp
addb
mov
xor
lock
leave
cmp
int
and
mov
cmp
xchg
aas
aaa
in
or
xor
fsubrs
sbb
or
dec
ret
bound
fistl
test
and
mov
and
jb
cmp
or
cmp
mov
inc
push
jge
enter
fisttpl
out
ds
add
mov
fdivs
cmp
cmp
mov
cmp
testl
out
add
inc
popf
push
cmp
pop
ds
in
cmp
leave
testl
xor
cmpb
xchg
enter
xchg
cmp
loop
jl
das
psubusb
sbb
aas
popa
lret
cmp
xchg
lcall
cli
add
cmp
clc
test
dec
das
sbb
inc
insl
pop
pop
fistpll
roll
dec
mov
cmp
repz
icebp
ljmp
xchg
dec
flds
mov
repz
jo
stos
cmp
lret
add
out
xor
test
push
nop
cmp
scas
inc
imul
cmp
and
lahf
xor
shl
mov
jns
data16
cmp
cltd
cmp
scas
iret
icebp
nop
jle
mov
or
pushf
xorl
dec
cmp
push
cmp
cmpsl
sub
inc
loopne
xchg
popf
pop
in
push
mov
dec
pop
loop
aas
loop
out
test
inc
pop
ja
stos
adcb
dec
leave
jl
pop
ficoms
inc
jmp
cmp
xlat
daa
or
ja
add
xchg
fstps
mov
ret
nop
test
daa
iret
js
cmp
xchg
push
mov
mov
repnz
jmp
shl
cmp
aaa
es
mov
sub
xchg
je
xor
fcoms
cmp
sub
inc
lock
sbb
dec
inc
jns
adc
ret
movsb
cmp
xchg
jle
pusha
push
leave
cmp
testb
sbb
xchg
add
das
call
cld
jne
jb
add
and
lock
sti
cmp
cmp
pop
mov
cmp
lcall
out
xor
repz
cwtl
mov
sbb
cmp
stos
sub
arpl
pushf
push
add
dec
fdecstp
pop
pop
inc
movsl
or
push
or
test
and
repnz
je
nop
xchg
or
jl
stos
test
pop
dec
ret
inc
cmp
xchg
mov
movswl
out
mov
xchg
aaa
pop
push
sbb
and
cli
or
stc
mov
jo
pop
push
aas
pop
mov
movsl
outsl
js
fcoms
xchg
fdivrl
add
jns
inc
shll
test
sub
sbb
dec
add
push
pop
dec
mov
cmpsb
dec
mov
out
mov
sbb
loope
jmp
lret
push
cmp
aaa
cmp
dec
dec
sub
cmp
dec
adc
fisubs
push
pop
cmp
or
out
jae
xlat
pop
scas
frstor
push
adc
xor
cmp
out
shrl
lods
outsl
in
xchg
mov
test
or
sahf
sub
pop
jae
jg
cmp
js
jno
xchg
xchg
repz
movsl
inc
mov
leave
add
pop
cmp
pop
subb
adcl
ljmp
sub
icebp
bound
imul
mov
or
fnstenv
pop
js
mov
fwait
mov
sbb
pop
xor
imul
mov
cmp
sub
pop
iret
cmp
sub
stos
jnp
cwtl
jle
mov
push
sub
out
sbb
cmpsl
jl
xlat
xchg
sub
and
push
stos
mov
or
test
sbb
jno
addb
cmp
xchg
push
mov
cmp
inc
imul
jnp
and
fdivrs
icebp
mov
lcall
dec
repz
lock
out
cmp
jne
dec
jl
mov
mov
fistps
outsl
push
pusha
sti
push
jnp
fnstsw
dec
pop
or
outsb
mov
mov
jns
or
fwait
pop
lods
cmp
push
jo
mov
mov
mov
dec
in
out
cmp
sub
mov
out
inc
ret
cmp
fs
jle
clc
dec
into
leave
cmp
scas
cmpb
ret
mov
cmp
push
mov
aas
enter
push
in
bound
and
adc
cmp
pusha
jns
push
stc
das
mov
mov
push
mov
cmp
and
pop
test
mov
dec
push
mov
rcl
sub
mov
cmp
mov
push
dec
pop
adc
xor
arpl
sti
cmpl
dec
repz
es
jne
lea
jb
dec
dec
inc
adc
fwait
mov
sarb
push
cmpsb
and
lcall
rorl
pop
adc
cmp
nop
ret
cmp
movsb
and
or
cmp
imul
adc
scas
mov
xlat
pop
cwtl
les
mov
sahf
adc
fildll
and
mov
in
int
scas
ret
xlat
fildl
cmp
fcmovb
inc
sub
jl
sbbb
popa
cmc
cmp
jae
es
cmp
jecxz
cltd
jne
push
mov
and
or
sub
filds
ja
jb
push
push
frstpm(287
cmp
mov
mov
adc
nop
lea
shll
xchg
sbb
xchg
mov
adc
lea
popa
ds
mov
shrl
pop
xchg
lds
dec
ret
jae
and
ljmp
mov
out
ffree
mov
aaa
pop
inc
adc
roll
xchg
movsb
mov
mov
cmp
pop
mov
movsl
jg
pusha
into
imulb
cmp
mov
faddl
in
movsl
out
adc
out
mov
ret
outsl
fists
in
pop
inc
enter
ljmp
ret
add
push
xchg
cld
jecxz
es
jae
sti
fldenv
movl
jnp
or
xchg
cmp
pusha
push
ja
fcmove
call
lret
rorl
sbb
inc
gs
jae
pop
pop
jns
jmp
pop
mov
lods
mov
cmp
cwtl
push
lret
cmp
sahf
xor
cmp
mov
add
cmp
imul
push
cwtl
and
inc
or
push
xchg
lcall
push
sahf
cld
cld
into
pushf
pusha
lods
xchg
shrl
gs
xor
xchg
cltd
arpl
xchg
xlat
iret
add
lret
fmull
dec
jno
cmc
add
xchg
xor
daa
dec
aam
adc
rol
popa
add
ja
pop
dec
fldenv
xchg
or
loop
mov
dec
int3
call
push
aaa
xchg
fstpt
cmp
aas
loopne
icebp
xadd
add
scas
fcmovnu
or
lock
jg
sti
js
test
mov
adc
fs
cmp
stos
jns
nop
dec
cmp
xchg
test
add
and
mov
scas
out
and
cmp
ror
mov
xor
aaa
cwtl
or
xchg
lret
or
mov
orb
test
das
rcrl
add
bound
sbb
jmp
sahf
addl
cld
fisubl
lea
mov
in
in
insl
lcall
cmc
imul
cmp
mov
dec
std
iret
inc
mov
ljmpw
sub
push
movsl
testl
lret
out
imul
int
leave
dec
cmp
cltd
mov
sub
bound
jl
icebp
cmp
cwtl
bound
orl
in
xor
scas
cmp
or
pop
std
jl
lahf
jbe
iret
mov
dec
cmp
dec
and
mov
inc
mov
repnz
jmp
or
jle
cmp
jnp
jns
cmp
fs
xor
dec
mov
push
ret
movsb
push
scas
mov
repnz
cld
jle
sbb
bound
add
xor
and
das
xor
pop
test
mov
popa
cmp
shl
test
adc
call
or
cmp
mov
fidivrs
ret
cmp
aas
push
inc
mov
jo
data16
cmp
push
xchg
enter
pop
leave
cmp
ds
mov
dec
add
movsl
cmp
pop
mov
outsl
imul
push
cmp
push
ds
sarb
xor
lcall
pop
or
and
stos
clc
cmp
sbb
int
into
lret
es
cmp
mov
lcall
repnz
out
jl
ret
sbb
xchg
lea
cwtl
and
cmp
pop
repnz
shrb
cmp
test
loop
inc
aad
add
xchg
mov
arpl
push
jle
fcmovu
adc
outsb
push
xchg
popa
imul
inc
cmc
add
add
test
fistpl
inc
add
xchg
enter
or
test
push
push
int
xor
push
lods
out
push
arpl
cmp
jg
push
das
das
mov
jl
cmpsl
daa
hlt
fnstcw
fwait
cmp
adc
push
pop
pop
sub
jne
push
imul
inc
inc
push
out
das
and
popa
push
sbb
cmp
stos
and
xchg
lea
cmp
jl
inc
jnp
inc
mov
cs
push
movb
repz
out
out
jno
pop
sbb
mov
lods
add
enter
jns
stos
mov
adc
mov
lods
lcall
cmp
mov
jnp
fistpll
ret
repnz
pop
fmull
je
xor
inc
outsb
pop
test
jno
pop
rcrb
pop
xchg
xchg
jno
gs
lods
mov
jns
jnp
and
les
mov
push
cmp
test
pop
fstpt
sub
cli
ret
and
push
fldcw
pop
pop
iret
push
pusha
das
fucomp
andb
mov
ss
int3
jmp
jmp
jno
adc
es
fstl
in
inc
adc
mov
imull
test
ror
fs
cmp
or
cmp
outsl
jg
pop
ret
setae
dec
add
or
sbb
stos
outsl
lea
scas
sbb
inc
fmuls
cmpsb
mov
mov
loopne
jno
and
cmpsl
pop
dec
ds
mov
add
jecxz
daa
jmp
add
mov
cmp
inc
aaa
rolb
and
ljmp
test
daa
sbb
cmp
dec
pop
inc
push
cmp
push
xchg
and
push
stos
xchg
push
push
mov
lret
fmulp
rorb
fdivrs
cmc
mov
xchg
enter
sbb
aad
repnz
xchg
cmp
or
sarl
subl
mov
xchg
sarl
leave
ret
and
stos
push
ret
mov
arpl
je
fwait
neg
mov
mov
call
push
adc
subb
push
cmp
cli
mov
or
aaa
icebp
mov
fildl
jge
cmp
push
add
xchg
cmp
mov
shl
enter
shl
adc
dec
inc
jp
mov
pop
in
loopne
in
push
cld
cmp
ret
fcoml
cmp
xlat
in
dec
sbb
cmp
jg
push
cmp
and
call
in
aaa
imul
or
shrb
popa
xchg
cmpl
dec
cmp
mov
xchg
das
loope
out
cmpsl
outsb
xlat
cmp
push
xchg
xchg
mov
mov
cmp
sti
xor
xor
push
pop
sbb
cmp
sbb
push
adc
xchg
add
sarb
mov
dec
out
pop
shll
popa
pop
sbb
cmp
movsl
jb
sti
pop
xchg
aaa
xchg
out
and
pushf
movsl
cmp
in
icebp
dec
mov
dec
inc
cmp
roll
fs
enter
adc
jecxz
out
adc
dec
add
mov
ja
cmp
outsb
sub
cmp
pop
jg
loope
xchg
insl
push
pusha
leave
or
jl
inc
cmp
mov
cltd
daa
cmp
adc
pop
outsb
cmp
fsub
lea
mov
loope
cmc
sub
pop
sub
cmp
jmp
sbb
jns
andb
mov
test
inc
or
cmp
jnp
add
and
pop
pusha
xchg
cld
xchg
mov
fdivrp
cmp
pop
mov
lret
stos
xchg
inc
add
push
nop
loop
out
lret
cmp
cmpsl
pusha
push
cmp
or
push
push
lods
or
pop
mov
lods
icebp
sti
sbb
and
add
ds
test
gs
pop
rorl
xor
dec
clc
dec
cmp
insl
mov
lcall
cmp
push
bound
fidivrs
cmc
aaa
daa
sub
adc
cmp
test
lods
in
and
mov
mov
cmp
jge
andb
or
sub
cld
nop
adc
pop
ja
ret
dec
pop
imul
test
adc
hlt
shlb
push
sbb
ja
cmp
cltd
mov
cmp
in
test
adc
push
outsl
mov
int
mov
mov
orl
add
loop
nop
and
cmp
jmp
adc
sbb
mov
daa
mov
aaa
int
fstl
imul
cmp
xchg
mov
mov
xchg
imul
in
mov
decb
arpl
pop
sub
push
jae
popa
dec
hlt
mov
outsb
jmp
dec
pusha
jecxz
cmp
adc
push
jl
shrl
mov
sahf
mov
cmp
pusha
mov
pop
xchg
adc
loopne
mov
in
jne
mov
xchg
adc
or
push
lret
dec
push
in
sbb
insl
pop
pop
jns
cld
or
clc
mov
cmp
out
push
cmp
icebp
xchg
sub
cmp
inc
lahf
aad
cmp
push
sbb
mov
das
andb
sbb
cmp
lret
xchg
add
push
jno
pop
int3
or
cmp
mov
xlat
push
imul
mov
pop
movsb
cmp
lea
mov
mov
cmp
add
mov
xlat
fisubl
jmp
dec
sub
dec
hlt
dec
lods
cmp
and
orb
mov
xchg
popa
push
hlt
das
pusha
ftst
pop
cmpsb
pop
aaa
or
cmp
mov
mov
sub
out
in
lcall
inc
ss
push
loope
add
fisttpl
movsb
out
fmull
or
icebp
xchg
mov
sub
mov
pop
inc
jbe
test
enter
js
jnp
add
push
mov
or
mov
pop
push
daa
and
sbb
mov
ret
jo
addr16
pusha
or
dec
loopne
lret
mov
and
in
xor
in
jne
push
test
xchg
or
imul
in
rcr
or
inc
arpl
ret
sbb
lret
rcl
xchg
cmp
push
dec
test
dec
call
mov
ljmp
addl
addl
push
adc
in
ds
mov
cmp
repz
mov
pop
xor
mov
cwtl
or
cmp
sbb
jns
cmp
mov
aam
cmp
sbb
mov
std
xchg
stc
adc
add
sbb
gs
dec
push
inc
lods
sarb
mov
inc
mov
andl
neg
sbb
xor
sub
pop
stos
lock
int
and
pop
pusha
cmp
imul
sbb
cmp
or
shll
add
orl
fisubrl
test
cmp
shrl
ss
adc
xchg
jge
cmp
jno
pop
dec
push
cmp
test
fs
cmp
cmpsb
jns
scas
cmp
pop
xor
xchg
xchg
fimull
xor
out
mov
imul
sub
daa
test
mov
xchg
mov
xchg
pop
sbb
and
cmp
mov
incb
mov
dec
aas
les
lcall
hlt
add
cmp
in
or
popa
cmp
pop
adc
xor
add
mov
xchg
pop
dec
sub
mov
mov
xchg
cltd
cmp
jg
je
rcr
jae
cmpsb
cmp
sub
sbb
cmp
lea
cmp
in
mov
cmc
cmp
mov
lahf
fadd
xchg
fstl
dec
pop
cmp
and
add
add
inc
cmp
cmp
loop
repnz
cmp
push
pop
cmp
pop
jmp
push
xor
cmpsl
mov
mov
aaa
push
add
aad
mov
mov
xor
inc
ds
into
outsl
lret
and
push
jnp
call
and
dec
popa
cmc
in
cmp
in
int
cmp
inc
rcr
addl
jl
jg
push
repz
add
adc
cmp
push
push
fistpl
xchg
sahf
je
dec
cmpsl
xor
dec
les
aaa
cs
cmc
popa
xchg
cmp
dec
xchg
jne
or
incb
adc
ret
add
scas
movsl
fcomps
jmp
adc
cmp
das
add
pop
xor
adc
cli
xchg
and
and
orl
jne
cmp
jle
and
cmp
jae
fs
cmp
jge
sbb
add
xchg
lock
cmp
aad
cmp
mov
loop
pop
fnstsw
jns
jae
push
imul
cmp
mov
mov
bound
sbb
dec
aaa
mov
sahf
xor
icebp
sub
idivl
insb
popf
jle
das
sarb
fs
cs
sbb
outsl
pop
ror
cld
cmp
mov
push
add
sarl
jge
popa
test
jl
dec
pusha
cmp
sbbb
mov
int
push
xchg
inc
add
rcll
mov
lret
addr16
inc
and
add
and
lds
leave
and
shlb
notb
mov
call
sahf
add
movsb
push
ja
add
mov
scas
mov
test
cmp
loope
inc
into
ret
inc
sub
ds
scas
sbb
mov
dec
mov
hlt
cmp
out
imul
aas
stos
into
out
mov
cmp
sub
into
push
out
imul
pop
mov
dec
shrb
pop
leave
sbb
jecxz
lock
adc
das
cmpsl
mov
and
mov
mov
jmp
aam
cmp
inc
jle
adcl
jno
scas
cmpsb
jmp
add
mov
sbb
dec
cmc
cmp
push
lds
jb
xchg
hlt
fwait
popf
dec
iret
shlb
mov
pop
aad
lock
cmp
addr16
arpl
aas
pusha
sub
jbe
cmp
xchg
lret
fdivp
cmp
inc
fmuls
xor
cmp
imul
cmp
mov
dec
mov
jle
mov
pop
lahf
inc
movsl
pop
les
pop
addb
sbb
mov
inc
and
jns
dec
cmp
lods
out
adc
push
outsb
into
bound
xchg
sarb
dec
mov
add
call
jmp
dec
cmp
jp
ss
add
ret
gs
fs
adc
lret
or
inc
std
outsl
pop
das
hlt
add
insl
xlat
jmp
pop
aad
and
ret
je
icebp
mov
lcall
sbb
loop
fcomp
cmp
and
data16
add
outsl
mov
loope
sti
or
shrl
and
in
and
cmp
cmp
inc
push
lret
inc
test
or
inc
mov
mov
mov
ja
ds
add
cmc
cmp
mov
cwtl
lds
add
out
sbb
xor
xor
pop
mov
cmp
sub
jmp
stos
inc
inc
cmp
fdivrl
push
lods
pop
push
lret
cmp
push
or
inc
insb
stc
lret
jge
xchg
mov
cmp
enter
aaa
adc
mov
lods
mov
cmp
cmovl
sub
jecxz
arpl
cmp
dec
out
popf
jg
push
aaa
rclb
mov
jae
gs
mov
add
mov
mov
sbb
mov
and
mov
nop
push
pop
push
cmp
push
and
repnz
cmp
sbb
xchg
inc
cmp
add
and
mov
mov
fnstsw
orl
cmp
pop
inc
xchg
lcall
xor
fstpl
xchg
jge
popa
dec
cmpsl
das
xchg
les
in
mov
mov
mov
stos
fdivl
iret
aas
inc
cmp
testb
cmp
sarb
adc
pop
mov
sbb
sti
cmp
popa
clc
scas
insl
jbe
dec
aad
or
adc
insl
faddl
mov
mov
mov
test
or
xchg
push
add
leave
push
inc
cmp
pop
xor
dec
arpl
das
daa
loop
mov
ret
call
mov
movb
xor
sub
sub
das
movsl
pushf
jns
cmc
sti
roll
push
cmp
mov
xchg
add
adc
test
cmp
arpl
movsl
jecxz
mov
stos
jnp
or
push
inc
cmp
push
jae
fcomip
loope
or
out
cmp
xchg
push
xchg
cmp
in
lock
das
cli
adc
jno
xor
cwtl
out
pop
call
xor
pop
cmp
scas
sbbb
mov
inc
jecxz
call
add
clc
test
cmp
mov
sahf
dec
das
enter
ds
ret
cmp
xchg
dec
jb
pop
adc
inc
jl
sub
cmp
pop
enter
jae
lods
xchg
insb
int
xchg
pop
add
and
mov
cmc
jbe
pop
cmpsb
jae
dec
xchg
les
cmp
ljmp
mov
cmp
mov
dec
js
ja
imul
inc
aad
cmp
lods
stos
stc
and
jle
jnp
movsb
cmp
pop
cs
dec
xchg
add
pop
jnp
movsl
mov
les
or
xchg
mov
cmp
cmpsb
mov
lods
sti
ljmp
inc
pop
sti
mov
mov
rclb
lock
cmpl
jae
repz
mov
inc
adc
cmp
mov
testl
pop
pusha
xchg
movsl
js
jecxz
xchg
cmp
imul
cmp
dec
sti
or
lcall
xlat
dec
ljmp
rol
pop
dec
js
lret
cmp
and
lods
jno
and
or
cmp
in
pop
scas
sub
jnp
imul
pop
fimull
nop
cmp
popa
adc
scas
pop
push
in
test
jl
xor
ret
cmp
mov
stos
or
jb
inc
fwait
cltd
aaa
je
push
outsb
lods
dec
sub
pop
mov
scas
push
inc
xor
jne
cmp
movsl
jbe
jns
pop
inc
loope
mov
cmp
push
inc
inc
adc
cmp
pusha
cmp
cmp
jne
mov
lods
and
ret
cmp
mov
pop
pushf
cmp
out
sar
cmp
push
arpl
mov
sub
xchg
sbb
mov
es
xchg
dec
push
pop
cmp
mov
sbb
cmp
cwtl
mov
dec
cs
pop
dec
in
mov
sbb
in
jns
xchg
cmp
pusha
int3
call
xor
sub
xor
cmp
cwtl
cmp
scas
cmp
stos
cmp
mov
dec
jecxz
mov
iret
mov
push
js
mov
cltd
sarb
mov
push
xor
mov
loop
rcrl
xchg
daa
xchg
lret
xlat
aaa
push
out
fisubrl
add
adc
xchg
cmp
ss
cmpsb
cmp
cmp
cmpsl
sbbl
mov
loopne
movsl
sbb
adc
cmp
or
fsubs
data16
decb
xchg
ljmp
test
sub
cmp
lods
stos
mov
addb
ja
mov
inc
adc
push
jbe
sbb
in
test
movsl
adc
push
pushf
mov
xor
jae
or
jo
das
push
push
rcll
cmp
insl
inc
mov
mov
cmpsl
shrb
mov
mov
pop
adc
stos
lret
xchg
push
mov
xchg
es
loope
inc
cmp
sbb
xchg
cmpb
cmp
cmp
dec
shll
lds
in
add
xchg
cmp
xlat
inc
jae
cmp
add
pop
stos
mov
pop
fs
test
xlat
inc
sti
pop
mov
lahf
loop
mov
sbb
lods
pop
out
cmp
dec
jp
popf
lret
cmp
sbb
mov
add
jmp
sub
mov
sbb
jmp
into
push
inc
mov
cmp
sub
push
sbb
int
xor
idivb
jl
mov
out
repz
pop
ret
sbb
aas
jns
movsb
adc
lret
pop
push
fdivrs
int
pop
adc
pop
cli
dec
push
mov
fstpt
jg
mov
pop
ljmp
sahf
jno
mov
incb
inc
xor
enter
cs
cwtl
movsl
in
pushf
jne
loop
push
mov
cwtd
cmp
outsb
mov
mov
sbb
mov
jae
cmp
dec
adc
jmp
cmp
jnp
scas
push
addr16
nop
cmp
lock
xchg
cmp
inc
arpl
dec
push
fnstcw
rorb
mov
enter
cmp
jge
lret
cmp
pusha
inc
mov
sbb
test
movsb
je
pop
cmp
rcll
inc
cmp
mov
je
das
pop
shrb
xor
dec
cmp
div
pop
mov
lcall
xor
or
jne
dec
mov
stos
push
mov
pop
scas
and
aaa
out
out
test
ss
stc
mov
mov
sub
fildl
jbe
pusha
mov
jge
test
sbb
sarb
icebp
lea
xchg
jl
outsl
and
test
popa
xchg
and
pop
push
int
fs
sub
cmpsl
fldt
add
add
sbb
cwtl
mov
fisttpl
ljmp
cwtl
insb
enter
lahf
cmp
push
int
cmp
adc
push
lret
out
xor
out
mov
cmpsb
je
fwait
cmp
jno
adc
push
dec
int3
lds
ljmp
mov
cmp
daa
adc
dec
lret
aaa
out
fcoml
push
ljmp
lahf
dec
xchg
xor
adc
in
das
movsl
and
fs
cmp
xchg
cmp
sbb
cli
leave
cmp
push
outsl
mov
fistl
cmp
nop
sahf
hlt
in
pop
xchg
sti
shrl
into
add
mov
stc
xlat
clc
stos
dec
push
xchg
out
popf
cmp
add
gs
imul
mov
sarl
addl
mov
clc
xchg
pop
and
loop
sub
lcall
xchg
ret
scas
cmp
in
cmpl
and
mov
cmp
xchg
sarb
mov
lcall
xchg
aas
mov
in
fwait
and
cmpsb
fildl
roll
lds
insl
shlb
pop
cmc
cld
scas
mov
xor
cmp
adc
inc
push
enter
sbb
cmp
adc
mov
cmp
cmp
cmc
outsl
mov
mov
ret
push
mov
cmp
test
icebp
pop
outsb
in
dec
cmp
dec
cmp
bound
push
cmp
or
ljmp
xor
mov
adc
mov
mov
dec
cmovl
dec
cmp
push
test
rorb
int3
jae
das
mov
mov
jl
or
sub
add
mov
mov
aam
mov
clc
adc
dec
dec
pop
lret
cmp
movsb
sbb
cmp
pushf
xlat
enter
xor
adc
mov
ret
mov
adc
jle
cmp
frstor
aad
xchg
push
xor
out
clc
push
and
or
mov
roll
adc
repnz
mov
and
ds
orl
xor
cmp
out
sub
cmp
adc
adc
ret
push
in
pop
push
das
dec
in
into
mov
rorb
cmp
cld
pushf
sbb
push
cmp
sub
shlb
push
rcll
lcall
jno
push
popf
ljmp
push
cmp
js
cmp
xchg
nop
xchg
lea
sti
out
cmc
jecxz
stos
jb
push
adc
add
lahf
mov
pop
fcmovnbe
pop
subb
mov
cmp
mov
repnz
mov
sub
xchg
xchg
sarb
inc
mov
dec
test
mov
cld
add
repz
jne
mov
cwtl
mov
push
fistpl
push
push
aas
xchg
cmp
in
push
data16
insl
bound
push
jl
mov
pusha
push
xor
out
xchg
mov
jle
xor
popa
cmp
sbbb
xor
mov
pusha
sahf
ret
push
cmp
xor
mov
cmp
loope
cmpsl
mov
jno
lcall
and
inc
jns
insl
cmp
xor
cltd
add
mov
loopne
mov
pop
adc
in
mov
xchg
iret
cs
dec
sbb
stos
pop
movsb
cmp
sbb
mov
add
inc
push
mov
sarl
movsb
sti
xchg
enter
xor
lods
hlt
mov
fdivrl
or
adc
les
or
out
leave
fwait
decb
daa
movsl
outsl
bts
jae
iret
ja
mov
jne
cmp
es
dec
into
cmp
popf
jg
mov
aaa
dec
bound
jno
cmp
lea
pop
xchg
and
mov
pop
push
push
mov
jnp
add
call
cmp
lea
pop
cmp
ret
jle
pusha
dec
outsb
push
loopne
push
lds
cmp
mov
jne
sub
cmp
adc
add
idivb
mov
xchg
mov
inc
jp
imul
dec
cld
movsb
jge
pushf
jmp
push
mov
cmp
xor
sub
fstpt
nop
cmp
sbb
insb
mov
fstpl
into
add
dec
jg
outsl
rcrl
nop
lods
or
jmp
xor
sub
fstpt
lcall
mov
or
daa
add
xchg
mov
and
sbb
bound
and
cmp
imul
jg
sbb
inc
mov
dec
test
and
mov
pop
jl
xchg
mov
movsl
scas
or
sti
cmp
mov
jecxz
cmp
mov
pop
in
sub
xor
stc
movsl
call
and
loopne
cmp
insb
xchg
stc
pop
das
notb
ret
mov
add
hlt
clc
pop
fmulp
das
push
jbe
aaa
insl
dec
repnz
es
mov
mov
sbb
push
pop
cmp
fcoms
enter
cld
addr16
or
mov
rorl
bound
cmp
push
lret
cmp
pop
stos
ja
pop
adc
xor
sbb
lahf
sbb
or
mov
cmp
mov
dec
fildl
jl
pop
dec
mov
jno
mov
nop
js
sbb
mov
in
aaa
jbe
imul
or
iret
movsl
ret
repz
inc
jb
xor
cmp
sbb
icebp
in
aaa
and
les
in
xchg
les
mov
test
dec
push
cmp
push
arpl
icebp
cmp
push
or
dec
add
lret
fsubrs
sub
imul
add
mov
dec
add
jg
psrad
inc
inc
lcall
rolb
cmp
scas
test
push
cmp
push
out
cmp
mov
fisttps
sbb
sbb
push
stos
aaa
inc
or
cltd
or
cmp
sub
jmp
stos
cmp
pop
in
add
pop
and
push
or
sarl
or
in
push
lcall
cmpsl
or
cmp
mov
enter
mov
ret
jo
jne
mov
dec
mov
add
mov
and
mov
ss
sbb
enter
push
xor
or
xchg
ljmp
cs
in
mov
jp
cmp
xchg
data16
shll
lret
mov
dec
popa
cmp
imul
cmp
jnp
mov
cmp
add
xchg
jb
cld
aas
cmp
scas
add
fdivrs
cmp
fldenv
cmp
ror
or
dec
loopne
jp
jns
popa
cmp
pushf
sbb
nop
cmp
aas
adc
dec
out
xchg
cs
sbb
test
js
inc
aaa
cmp
jae
jg
sti
and
je
mov
sbb
cmp
pop
aas
add
inc
inc
jbe
mov
out
and
xchg
push
add
xchg
add
cmpsb
aaa
cmp
mov
sbb
sub
sbb
xchg
cld
lods
inc
mov
pop
or
and
outsl
out
pop
jl
inc
in
cmp
outsb
inc
cmp
popa
rcll
outsl
ljmp
inc
pop
adc
cmp
movntq
dec
xor
push
daa
data16
mov
adc
pop
ret
cmp
sahf
push
cltd
xchg
cmp
mov
shl
sbb
jbe
cmp
mov
and
cmc
cmp
sub
inc
cmp
je
push
inc
cmp
in
mov
sub
add
gs
out
push
int
dec
mov
adc
cmp
mov
cmp
mov
pop
push
push
popa
fidivrs
inc
sub
inc
sarb
mov
aad
xlat
xchg
inc
dec
out
int
adc
pop
pop
sahf
jnp
adc
leave
test
lods
ja
std
and
xchg
sbb
cmp
scas
in
inc
cmp
sbb
int
jl
mov
imulb
scas
cmp
pop
fidivrl
cmp
mov
lock
mov
inc
mov
fs
into
sub
shll
adc
sub
cmp
inc
cltd
dec
cmp
in
fcmovb
das
ret
cmp
std
mov
inc
mov
enter
movsb
int3
mov
out
gs
insb
inc
pop
inc
push
fwait
cmp
cmpsl
mov
push
sbb
push
dec
or
cmp
out
lret
xor
addr16
shlb
repz
inc
ret
rclb
into
lds
cmp
sahf
sarb
sub
test
ret
cmp
add
sbb
int
arpl
cmp
rorb
mov
aam
cmp
ljmp
xchg
mov
cmp
stos
mov
out
or
out
ret
xchg
cmp
subl
mov
push
mov
sbbl
jecxz
cmp
repnz
ja,pt
inc
bound
loopne
std
sarb
dec
adc
push
cmp
mov
shrb
cmp
repz
sbb
je
stos
aaa
xchg
dec
pop
bound
inc
aaa
mov
in
pop
mov
fsubrl
sbb
imul
mov
jge
inc
jne
inc
mov
dec
and
loopne
clc
out
ss
iret
shl
cmp
ret
xchg
xchg
cmp
inc
dec
push
pop
rclb
jl
adc
icebp
xor
pop
or
inc
lds
or
jns
adc
cmp
nop
sti
pushf
dec
fcomi
cmp
jmp
cmpsb
lds
add
movsb
popl
imul
mov
and
jb
cmp
adcl
cmp
cmp
mov
xor
cmp
out
or
das
mov
loope
lret
loop
fistpl
adc
dec
cmpsl
push
or
mov
test
enter
and
pop
push
dec
and
popf
mov
sbb
adc
pusha
fbstp
cmp
inc
aam
jnp
std
inc
cs
fidivrs
xor
fistpll
mov
popf
imul
xchg
mov
mov
idivl
shll
les
cs
lret
les
insl
adc
inc
ds
or
push
mov
lods
cmp
mov
push
push
cmpsl
or
iret
pop
xchg
jno
les
pop
cld
scas
mov
sbb
inc
xchg
cmp
scas
adc
add
mov
push
add
cs
rcll
repnz
js
jge
mov
jg
inc
bound
add
cmp
adc
movl
out
popa
cld
xor
sub
sbb
addr16
xor
push
cmp
adc
aaa
sbb
pop
push
lea
or
fistpll
jae
jmp
cmp
add
xchg
sbb
or
add
rcr
aam
xor
repz
sti
cmp
inc
cmp
les
aam
frstor
idivl
push
in
addl
jo
loop
loop
test
out
mov
hlt
inc
data16
lcall
cs
sbb
and
test
hlt
ret
xchg
add
xlat
xchg
aaa
iret
cmpl
cmp
push
bound
cmp
cmp
push
sub
add
dec
insl
enter
mov
aad
xor
pop
xchg
lds
xchg
loopne
shrb
jnp
dec
cmp
jne
adc
push
ds
mov
test
je
testb
xchg
adc
pushf
imul
xor
cmp
enter
cmp
adc
dec
inc
cmp
inc
out
or
xchg
nop
or
scas
movsl
push
inc
jae
or
add
test
shrl
cmp
jno
aad
cmp
xchg
jae
fdivrl
leave
call
mov
and
mov
les
sti
sub
and
dec
inc
adc
add
subb
roll
cmpsl
stc
das
adc
xchg
pop
mov
or
cmp
fs
cmp
js
cmpsl
shll
imul
mov
inc
cmp
mov
fisttps
mov
push
xchg
xchg
enter
sahf
clc
cltd
add
pusha
xchg
inc
cmp
push
push
popa
jbe
pop
pop
fisubl
js
push
int3
loopne
dec
cmp
aad
sub
aaa
lcall
inc
cltd
fnstsw
jp
xor
fdivrs
scas
cmp
movsl
mov
push
fistpl
cmp
test
es
cmp
data16
push
sub
dec
cmp
xor
push
test
loope
dec
addr16
cmp
cltd
aad
insb
cmp
popa
daa
repnz
xor
dec
fmuls
cmp
xchg
ljmp
sbb
mov
mov
or
mov
cmp
xor
pop
jle
mov
pop
cmp
sbb
xor
aaa
or
push
int3
and
in
jmp
jl
es
out
cmp
test
lds
adc
mov
pop
into
add
outsb
bound
cmp
adc
pop
lock
xchg
outsl
in
cmp
add
adc
gs
inc
add
mov
adc
cmp
push
cli
pop
movsl
jae
cmp
in
add
test
cmp
std
inc
mov
inc
cmp
jmp
scas
es
jle
mov
cli
cmp
lret
dec
cmp
lods
ljmp
push
mov
xchg
jae
cmp
int
pusha
xchg
mov
pop
js
xchg
call
addr16
inc
mov
jecxz
cmp
int
dec
in
sti
cmp
push
imul
aad
cwtl
scas
leave
clc
adc
mov
inc
cmp
pusha
sub
aaa
mov
mov
cmp
icebp
mov
fwait
dec
sub
adc
lret
bound
push
inc
es
arpl
lods
xchg
aaa
stos
hlt
lcall
movsb
cmp
popa
cmpsl
cmpl
cmp
int3
xchg
dec
sbb
pop
ljmp
cmp
leave
push
push
aad
adc
dec
mov
sub
and
ja
fcoml
clc
push
repnz
int
and
sbb
cmp
hlt
pushf
mov
mov
inc
cmp
adc
mov
xchg
mov
cmp
cmp
or
xchg
pop
inc
cmp
push
popa
iret
stos
cmp
xchg
icebp
or
das
adc
nop
cmp
push
mov
pop
dec
dec
pop
loopne
fucomp
cmp
stos
push
add
pushf
cmp
jns
add
cmp
call
pop
addr16
aaa
xchg
shll
jle
and
push
mov
push
add
mov
push
inc
jne
mov
cmp
int
cltd
fnstcw
stos
cmc
hlt
into
cmp
cmpsl
mov
xor
out
xor
cmp
cmp
inc
jg
sarb
and
lret
sub
cltd
cld
inc
test
dec
xor
jnp
mov
jae
and
aaa
jnp
imul
or
jnp
jnp
int3
push
and
fs
sub
sbb
cld
mov
scas
daa
xor
sbb
xor
fdivrl
cld
and
lcall
mov
mov
mov
aaa
sub
cmp
bound
xor
xchg
sub
cmp
insb
sub
push
sbb
or
mov
push
call
pop
test
scas
mov
xor
fwait
stc
enter
cmp
ret
inc
mov
cmp
dec
jnp
mov
lods
mov
pop
mov
rcrb
cmp
imul
rol
int3
movsb
fisttpl
xor
dec
aaa
mov
clc
das
xchg
xor
and
aas
sub
mov
jno
fadd
inc
cmp
call
movsb
jp
jb
fdiv
lods
sub
jecxz
adc
lret
dec
js
mov
and
xor
lods
add
repnz
loopne
sbb
mov
lahf
mov
aaa
pop
jp
pop
push
push
cmp
cmp
outsb
outsb
sbb
sbb
fdivs
hlt
push
cmpb
jb
inc
adc
fs
ret
lds
jbe
loopne
sbb
pop
sub
cli
mov
sbb
sbb
sbb
sbb
shlb
leave
in
pushf
sbb
xor
lret
sub
enter
inc
or
push
and
cmp
push
mov
and
outsb
loopne
sbb
fstl
lods
dec
push
mov
xor
hlt
xor
jecxz
adc
in
outsb
xchg
xor
aam
and
pop
sarb
xor
mov
sbb
push
lahf
sbb
inc
add
lcall
mov
pop
mov
jb
fmulp
aam
ljmp
cmpsb
sub
dec
enter
or
and
fldl
mov
ljmp
les
mov
lret
shrb
dec
jno
cmp
and
and
cmp
out
cmp
je
cmpsb
mov
scas
scas
inc
fdivl
cmp
shrl
fsubl
insb
cmp
sbb
sub
mov
or
bound
xor
in
jl
in
xor
decb
sbb
inc
xor
mov
hlt
hlt
loop
sub
mov
mov
xor
pusha
ret
cmp
mov
mov
lock
xor
loopne
pop
jnp
mov
dec
push
loopne
jns
cli
push
sub
xchg
test
sub
dec
test
mov
mov
in
pop
mov
pop
sub
sbbl
inc
les
sbb
jnp
xlat
jle
mov
add
sub
jp
pop
movsb
js
ret
xlat
imul
lret
outsl
inc
adc
aaa
notb
sbb
sbb
mov
in
cld
mov
cmpsl
js
cmp
mov
cmpsl
adc
adc
inc
aas
daa
push
cmp
dec
aam
sbb
mov
loope
icebp
xor
das
jne
cmp
cmc
cli
mov
ds
fwait
cmp
push
int3
sbb
push
aam
push
mov
dec
sbb
push
dec
mov
mov
mov
stc
fwait
sbb
int3
mov
dec
test
scas
imul
aaa
xor
mov
cmp
outsb
sub
stos
inc
mov
xor
fstl
pop
sbb
ds
dec
stos
mov
sub
pushf
aaa
into
or
in
sub
cmpsl
js
aaa
mov
sbb
sub
cmp
mov
xchg
stc
int3
sbb
shll
adc
sbb
outsb
call
mulb
daa
and
push
cs
mov
popa
js
lds
cmp
shll
test
ljmp
mov
movsb
sbb
iret
arpl
bound
test
nop
dec
stos
cmpsb
and
je
and
ss
loopne
mov
jge
in
pusha
sub
daa
push
inc
cltd
fisubrs
mov
xor
mov
cli
cld
ja
xor
sub
not
mov
into
in
mov
divb
xchg
repz
mov
stos
int
popf
js
aaa
adc
xor
or
cmpsl
enter
shlb
or
cli
and
and
and
ss
int3
aam
sub
dec
cs
fsubl
sub
sbb
and
dec
xchg
sbb
inc
scas
xor
sub
cmp
out
clc
cltd
sbb
and
add
and
pop
and
adc
lods
jg
adc
sub
sub
adc
shlb
sbb
fnstcw
das
adc
sbb
divl
mov
ljmp
xchg
xor
mov
sbb
cld
and
xor
lahf
pop
sub
xchg
cmp
stos
jns
pop
jo
sahf
ljmp
sbb
pop
cmp
cwtl
dec
jbe
xor
mov
sti
jae
and
ds
loop
adc
xor
xor
adc
ftst
xor
xor
sub
in
das
xor
xor
adc
jge
sbb
call
and
shrl
shrb
lods
fwait
in
add
loopne
pusha
in
add
xlat
imul
push
sbb
jmp
les
pop
sub
das
xor
ret
aas
sub
hlt
xchg
or
idivb
lock
popl
fidivrl
out
mov
sub
push
cwtl
sub
fwait
jg
lret
mov
stc
mov
inc
and
mov
or
mov
xor
jp
imull
ljmp
push
fwait
sbb
sub
jo
cld
mov
mov
aam
in
pushl
jge
shlb
xor
or
cmpsl
ret
loop
stos
sbb
adc
hlt
sbb
jmp
and
cld
jg
sbb
testb
notl
std
int3
push
pop
call
adc
adc
xorl
xorb
mov
data16
movsb
sbb
and
cld
mov
je
sub
cmp
cmp
jbe
mov
xchg
mov
mov
lock
inc
cli
jb
hlt
sub
subl
lods
cli
dec
je
lods
imul
sbb
int3
sar
int3
sbb
inc
sub
shll
xor
mov
xor
mov
and
fistpl
mov
sub
hlt
pop
cmp
lock
push
test
shll
inc
and
sti
mov
in
int3
mov
push
int3
arpl
in
pop
sti
sbb
and
add
cltd
lret
sahf
shrl
push
and
cmp
sti
out
cmpsb
repz
cmp
pop
and
sbb
xor
sarl
xor
test
imulb
lods
sar
sbb
cmpsb
cmp
sbb
adc
mov
add
ja
inc
lods
and
sti
ja
int3
sub
and
add
cli
int3
mov
push
mov
loop
jns
daa
xor
roll
pop
ja
cld
ret
mov
cmp
xor
xlat
xor
leave
or
mov
mov
jnp
mov
repz
imulb
pop
dec
mov
sub
adc
xor
pop
sub
outsl
pop
js
mov
call
xor
push
xchg
lods
daa
fwait
rclb
mov
sbb
mov
test
jecxz
and
mov
and
sub
lods
push
adc
fs
aaa
mov
sbb
cld
or
jno
jle
je
adc
movsb
fisttps
push
mov
or
mov
adc
cmp
pop
fwait
mov
mov
sbbl
icebp
sbb
jmp
into
mov
push
pop
pop
lods
push
xor
std
sbb
mov
enter
lcall
ret
lods
inc
inc
into
mov
in
mov
sbb
out
mov
neg
cmc
call
jle
les
push
xor
js
or
cmp
scas
add
xor
or
aas
clc
mov
test
xor
adc
hlt
adc
scas
mov
push
imul
inc
test
in
xchg
pcmpeqd
add
movsb
inc
out
mov
mov
mov
sti
pop
jns
ficompl
ljmp
movsb
pop
div
je
sub
and
sarb
and
in
or
push
test
lock
xor
inc
inc
and
ret
sbbb
and
cld
push
out
pushl
mov
repz
push
sbb
sub
loop
daa
dec
dec
clc
lret
arpl
push
xor
cld
arpl
mov
repnz
ds
mov
push
int3
xor
adc
repz
pop
sub
xor
repnz
xchg
jns
sbb
aam
int3
les
push
sbb
out
or
loop
fcoms
in
fidivs
pop
repz
or
iret
inc
jge
imul
add
sbb
divb
test
jb
and
xor
dec
xor
sub
hlt
mov
repz
mov
lcall
sub
fwait
add
movsl
out
scas
jp
add
sbb
lret
pop
pop
xor
and
sub
bound
xor
push
sbb
mov
fistpl
test
pusha
ret
xlat
rclb
pop
xchg
sbb
cmpsb
fimuls
fs
sub
repz
adc
daa
sbb
mov
mov
sahf
fs
jbe
les
and
int3
adc
mov
mov
mov
and
sti
mov
xor
xor
daa
aam
xor
scas
psubb
rcrb
push
lret
daa
mov
mov
push
or
sub
pop
add
mov
negb
ficompl
dec
faddp
scas
pop
dec
sti
adc
ror
sbb
icebp
jl
rorl
inc
adc
sbb
mov
pcmpeqb
adc
add
add
add
loope
mov
adc
or
cli
add
cld
dec
pop
sahf
jl
sbb
aas
mov
dec
cmpsl
btc
scas
fs
insb
pop
push
subb
add
push
or
or
xchg
adc
push
mov
dec
call
int
xor
loop
loopne
lods
jl
xor
mov
lret
cltd
add
add
insb
out
in
adc
add
sub
imul
out
pop
insl
cmpsl
jnp
cmp
fsubrs
cmp
adcl
dec
inc
xchg
push
cld
fsub
mov
xchg
adc
push
jne
pop
stos
pop
cmc
xor
loope
sub
mov
sub
int3
adc
test
mov
and
adc
ret
mov
sti
cwtd
fs
stos
fwait
mov
adc
lock
inc
mov
mov
adc
repz
fwait
cmp
pop
sarb
js
pop
cmp
insl
mov
ja
adc
xor
xchg
fldt
adc
sub
sti
mov
pop
mov
fwait
xor
out
add
jecxz
test
mov
rcl
and
in
ds
or
sbb
pop
sbb
fwait
stos
cld
sbb
sbb
ret
sbb
lret
sbb
outsb
cmp
adc
sub
cmpsb
dec
inc
sbb
pop
and
pop
fstl
es
mov
inc
sub
xchg
fucomip
repnz
daa
jbe
push
pop
pop
jne
jno
pusha
inc
mov
or
movsl
adc
test
es
push
xchg
push
ficoms
je
lahf
pop
fadd
mov
inc
inc
pop
add
fdivs
xchg
rcrb
sbb
mov
jne
mov
pop
mov
mov
jp
xor
add
cld
fbstp
cmp
add
fsubrp
jp
adc
mov
sbb
out
jnp
sbb
and
mov
arpl
sub
push
push
sbb
dec
pop
cmp
xor
in
iret
frstor
add
lods
sub
mov
pushf
rcl
cmp
or
and
inc
aas
pop
andb
mov
jbe
sbb
fdivrl
mov
mov
bound
push
sbb
and
int
cmp
lret
ret
sub
ret
nop
xchg
aaa
ja
cmp
int
fdivl
pop
mov
xchg
hlt
sbb
fdiv
cli
je
adc
repnz
cmpsl
aaa
fldt
xor
jmp
pop
je
jnp
sub
lahf
cld
add
jl
cwtl
inc
mov
xchg
addr16
dec
mov
lods
xor
out
jb
push
adc
je
loope
loopne
addb
arpl
mov
pop
ljmp
add
out
ret
shrl
incb
fldt
subb
hlt
bsr
xlat
mov
dec
sub
out
aam
ret
xchg
pusha
out
pop
lret
lods
inc
enter
and
lock
in
jl
pushf
clc
and
ret
xchg
pop
mov
cmp
daa
pop
adc
sbb
mov
dec
cmp
in
in
adc
aad
insl
inc
das
in
xorb
xlat
add
cmc
mov
negl
push
test
sub
sub
pop
call
adc
repnz
mov
popa
or
imul
stos
pop
and
pop
pop
gs
fwait
inc
popa
cmp
out
mov
lahf
stc
clc
hlt
lahf
pusha
xor
sbb
mov
stos
int3
repnz
mov
cs
pushf
xor
xor
daa
pop
adc
pop
xor
mov
or
call
scas
call
hlt
sbb
ljmp
int
ret
imul
test
dec
mov
stos
jnp
shlb
xor
scas
or
stos
enter
repnz
int3
mov
push
mov
movsb
mov
hlt
pop
loop
inc
or
xor
mov
je
lcall
xor
xlat
loope
outsl
dec
pop
or
fs
clc
inc
insb
lock
out
daa
inc
mov
sbb
sbb
xor
adc
out
dec
rorb
xor
and
test
pop
lock
int3
mov
push
xor
mov
aam
sub
sub
dec
mov
pop
push
add
push
fsubrs
loop
mov
xchg
jae
repz
push
mov
pop
loop
sbb
test
adc
in
xor
pop
pusha
das
inc
enter
and
in
mov
sbb
pop
shlb
stc
outsb
mov
mov
in
loopne
jl
sbb
rol
push
cmp
push
repnz
jae
mov
cli
imul
mov
sbb
insl
test
flds
xor
adc
jl
mov
mov
push
mov
pop
out
out
xor
jge
xchg
loop
fs
js
add
dec
inc
add
fs
fidivrl
or
loopne
or
adc
mov
pop
mov
mov
push
movsl
test
aam
adc
or
popf
cli
or
and
fmuls
add
mov
jae
scas
or
push
ret
pop
into
sub
test
push
push
cmp
popf
cmpsl
or
jmp
lret
mov
ds
pop
or
aad
or
sarb
outsl
xor
mov
xchg
adc
sahf
in
mov
mov
in
mov
leave
mov
cmpsb
pop
add
fs
pusha
and
pop
add
add
aam
xor
mov
cmp
fwait
cmp
in
xchg
xor
cld
pop
enter
das
xor
jp
add
lods
dec
repnz
fisubrl
adc
adc
jae
push
mov
add
scas
jnp
in
xor
ss
insb
cmp
xor
mov
and
xchg
fs
sub
scas
jnp
sti
test
or
out
mov
jmp
aas
jbe
fiadds
xor
mov
ja
or
stos
fcomp
mov
jl
shrl
lock
push
xchg
cmp
inc
mov
pop
inc
push
mov
stos
sub
and
and
cmp
inc
outsl
imul
lock
rolb
cld
sbb
jl
loopne
iret
insb
in
or
call
gs
jl
inc
cmp
sbb
int3
sbb
clc
xor
aad
xlat
cmp
in
add
loop
sbb
popa
js
sub
aas
loope
repnz
cli
xor
sti
lret
movsb
push
int3
test
out
mov
sub
jmp
push
rcl
lods
sbb
lahf
adc
add
fstpl
xchg
hlt
inc
mov
sub
mov
int3
lods
fucomi
push
jnp
cmp
movsl
jae
cld
fsts
aaa
mov
mov
mov
pop
xor
dec
or
and
test
ret
cmpsb
dec
je
jl
sahf
dec
push
adc
aad
inc
sub
icebp
mov
cltd
mov
stc
jo
add
adc
mov
push
stos
ror
subb
xchg
fstpt
add
in
mov
fisubs
clc
cld
xor
xchg
hlt
scas
xlat
ret
push
sub
push
add
and
icebp
pop
xor
pop
in
movsb
data16
mov
les
fucomi
add
and
inc
incb
sbb
data16
shlb
jecxz
outsl
sbb
jge
sub
je
fadds
aam
push
in
mov
push
or
push
sub
das
xchg
push
sbb
lods
cmp
sub
sbb
mov
out
mov
add
clc
or
lods
insb
mov
hlt
lret
inc
jo
push
mov
aad
ljmp
cli
jbe
dec
push
pop
mov
je
jecxz
mov
or
inc
fdivl
adc
sub
test
sub
loopne
ljmp
daa
push
xorl
push
pop
stos
aad
sbb
adc
or
pushf
fs
mov
mov
es
loop
out
aam
cli
sub
repz
push
push
daa
inc
clc
orb
or
cltd
rcrb
inc
mov
ljmp
scas
mov
jp
js
inc
push
jne
adc
hlt
cmp
mov
insb
faddp
movsl
insb
pop
and
pop
push
imul
inc
popa
js
dec
outsl
xlat
push
pushf
xor
imul
xor
je
adc
out
imul
mov
and
add
dec
js
add
xor
aas
loopne
test
pop
lret
add
xor
sub
push
sub
sub
mov
sbb
pop
ret
and
cmp
je
xchg
lcall
inc
mov
jle
and
loopne
cmp
mov
cmpsb
cs
bound
push
rolb
push
enter
adc
fs
sbb
aad
rcrl
adc
je
outsl
mov
fldl
xchg
ret
jl
adc
insl
xor
test
lret
sub
clc
dec
mov
add
clc
ljmp
scas
aaa
sub
lcall
cli
lcall
mov
icebp
cwtl
xchg
mov
idiv
and
sbb
mov
pop
add
mul
stos
in
mov
xor
nop
cmp
cmp
pop
cld
and
mov
stc
jecxz
lock
sub
mov
fs
pop
push
test
xor
push
mov
or
pop
push
int
lods
cmp
or
mov
and
scas
dec
pop
jge
jge
in
ficompl
dec
sbb
or
push
sub
and
flds
lret
loop
add
sbb
dec
mov
sbb
sbb
sub
dec
cli
int
adc
push
int3
out
lods
push
repnz
xor
add
add
out
dec
aas
jbe
dec
int3
int3
pfsub
and
pushf
or
lcall
cld
iret
int3
cwtl
test
in
test
xor
pop
movb
mov
adc
sub
sbb
ret
clc
mov
mov
add
outsb
pop
xchg
out
mov
test
test
sbb
push
adc
stos
fs
les
dec
fucomp
repnz
add
xor
push
hlt
xchg
mov
sbb
mov
les
fs
xor
test
scas
shl
xchg
cli
xor
notl
adc
xchg
test
sbb
das
inc
push
sub
subb
test
jae
adc
loope
push
pop
push
ret
cmp
cmp
in
repnz
push
test
insb
mov
cmc
in
testl
and
xchg
leave
jp
add
ficomps
sbb
or
xor
stc
and
push
xor
movsl
add
fcoml
ret
cld
imul
xor
sar
arpl
push
sbb
lret
xor
dec
xchg
fdivr
ret
and
xor
mov
fs
xchg
pop
clc
dec
movb
and
les
cs
xor
test
nopl
stos
je
scas
stos
mov
inc
sub
ficoms
cs
and
repz
or
repz
dec
add
clc
pop
testl
inc
shrl
xor
jb
sub
xchg
sub
mov
pop
daa
jnp
icebp
scas
inc
orl
stos
xchg
mov
nop
and
jmp
and
fs
fdivrs
adc
mov
loope
jae
fsubrs
fs
jnp
pop
stos
jg
sbb
xchg
jecxz
fildl
mov
mov
jl
dec
pop
pop
addb
imul
adc
icebp
scas
movsb
test
orb
xchg
or
sbb
lea
push
stc
test
adc
or
mov
dec
cmpb
push
and
mov
cmp
inc
daa
fistpll
imul
clc
and
xchg
cmp
jae
fucom
mov
jo
add
cmpsl
fiadds
push
test
in
add
push
adc
lcall
test
fs
sub
call
les
adc
subb
xor
add
cmc
push
dec
iret
or
xlat
add
and
sub
dec
push
sbb
cs
mov
loopne
fs
xor
adc
pop
or
xchg
or
outsb
lret
mov
imul
dec
shlb
mov
daa
cmp
in
int3
arpl
and
repnz
inc
gs
mov
add
fnclex
inc
aas
aam
cmpsb
mov
hlt
lcall
mov
pop
arpl
sbb
stos
test
jns
stos
cs
jae
ljmp
out
mov
sbb
rcrl
jnp
mov
pushf
xchg
xchg
xchg
out
call
in
dec
xchg
insl
lret
aaa
adc
mov
in
loope
in
hlt
in
mov
xchg
cs
pop
fadds
or
je
sbbb
push
jno
nop
mov
lods
out
mov
mov
xor
fsubrl
sub
jbe
xor
mov
lock
sbb
sub
cmp
push
xchg
or
int
adc
or
cmp
add
outsl
add
data16
lods
push
push
push
jle
clc
test
repnz
inc
test
mov
dec
loopne
and
jmp
cld
sahf
pop
push
push
adc
and
nop
adc
sbb
mov
and
mov
adc
addr16
sbb
lcall
sbb
sub
xchg
jb
jecxz
adcl
push
inc
movsl
sbb
push
mov
repnz
fs
loope
adc
loopne
inc
pop
cmp
out
mov
sarl
addl
daa
and
sbb
shlb
lds
enter
fdivl
fsubl
add
fdiv
imul
fchs
xor
test
dec
or
dec
stos
sbb
xor
adc
mov
pop
push
and
or
je
push
test
mov
xchg
aaa
mov
xchg
adc
push
adc
imul
xchg
iret
movsb
cmpsb
pop
sahf
dec
mov
adc
pop
fs
loop
aam
repz
push
out
lds
jae
out
and
pop
cli
pop
sbb
pop
jb
daa
sbb
push
mov
je
cmpl
push
inc
cld
insb
insl
rolb
sbb
stos
xchg
icebp
int3
inc
sahf
jne
fs
xchg
test
out
mov
je
xor
jb
je
push
push
inc
lret
mov
xchg
stos
mov
mov
push
call
int
in
mov
mov
mov
test
ret
repnz
dec
jae
jmp
ja
repnz
aam
pop
mov
out
add
fdivs
je
int3
movsb
jmp
int
cmp
xor
je
mov
sbb
pop
and
sbb
movsl
mov
xchg
sbb
lret
lahf
stos
mov
fs
jle
cmpsl
jbe
test
jae
push
mov
insb
sbb
insb
dec
or
xor
stos
sti
or
es
orb
shll
shrl
mov
gs
xor
xlat
stos
out
arpl
push
sbb
xor
inc
push
sub
sti
jns
mov
or
ljmp
pop
scas
cli
jecxz
scas
mov
xor
data16
shr
test
repnz
pop
push
or
inc
mov
das
dec
pusha
mov
sbb
ja
lods
adc
lret
dec
movsb
adc
add
data16
bound
and
mov
mov
in
cld
adc
test
pop
sub
mov
clc
push
mov
pop
movsb
sub
fmuls
rorl
xchg
cld
sub
out
mov
and
shrb
orb
add
mov
nop
test
stos
sbb
mov
mov
push
cmp
sub
fwait
pop
or
add
test
adc
loope
sbb
mov
xchg
jnp
sub
jmp
sbb
push
leave
inc
cmpsb
loope
test
lahf
sbb
add
testb
scas
cmp
sub
out
sbb
call
sub
adc
sarb
ror
mov
ss
clc
mov
loope
ja
je
orb
je
jmp
sub
repnz
sub
int3
int3
dec
push
es
sub
xor
fstpl
xor
sti
enter
jge
sub
testl
sub
mov
js
lods
mov
or
jo
add
cmc
scas
adc
and
int3
pop
and
and
loopne
add
repnz
loop
pop
xchg
aas
divl
xchg
or
add
stc
shlb
andl
adc
inc
adc
cld
cltd
xor
and
fsubrs
jmp
out
test
adc
xchg
pushf
pop
sub
push
jnp
aaa
pop
xchg
in
repz
stos
enter
repnz
jl
fxch
cmpsl
lahf
int3
sub
or
inc
jl
daa
xor
push
or
js
clc
push
xor
in
loopne
fidivrs
adc
adc
or
sub
adc
repz
stos
dec
lock
movsb
mov
fsubrp
pop
sub
cmpsb
das
rclb
les
sbb
fldl2t
insl
pop
adc
mov
jl
mov
insb
clc
mov
negl
jae
clc
pop
xor
insb
repz
xlat
out
sbb
sbb
cli
je
inc
ret
jb
inc
dec
sub
sbb
mov
ficomps
repz
cli
xor
lea
pop
dec
sub
rol
sbb
in
in
in
sti
sahf
je
rolb
mov
test
daa
rcrl
jl
scas
dec
leave
stos
jecxz
push
pop
push
mov
movsb
adc
call
mov
sahf
iret
jo
std
fdivrp
mov
mov
nop
xor
xabort
cwtl
lret
in
xor
xlat
scas
add
mov
xchg
cld
nop
mov
ja
aam
xchg
sti
and
push
cmp
jns
lods
adc
mov
xchg
inc
add
mov
mov
xor
xor
cmp
xor
addb
stos
mov
mov
push
cld
dec
jae
push
jmp
pop
cli
push
xor
call
ds
pop
mov
pushf
xor
sub
mov
scas
sbb
leave
adc
add
inc
adc
mov
js
sub
cld
test
jae
push
mov
mov
stc
jo
ret
mov
ficompl
mov
pusha
and
xor
inc
outsl
in
mov
cmp
or
adc
cmp
hlt
rorb
xchg
mov
arpl
mov
aas
sub
mov
and
push
aad
or
sub
or
mov
jns
repnz
cmp
sti
cmp
iret
jnp
xchg
sub
dec
add
sahf
push
in
int3
sub
inc
adc
movsb
stc
lock
and
insb
lock
in
pushf
orl
subl
xor
lret
mov
loope
je
imul
inc
out
ret
out
cmpsb
test
xchg
mov
ds
enter
inc
pop
sti
adc
ret
gs
repz
es
dec
pop
lcall
enter
pushf
mov
add
pop
cmp
frstor
arpl
sbbl
mov
fildl
push
pop
adcb
sub
xchg
dec
int
je
xor
cmp
sti
mov
lahf
mov
je
jl
jmp
push
pop
out
push
pop
mov
and
cmp
arpl
jbe
popa
xchg
sbb
ljmp
jmp
push
scas
imulb
inc
clc
sub
std
or
cmp
repnz
push
imul
fcmovne
adc
clc
je
jl
shll
lods
add
sbb
aas
mov
ret
stc
in
les
aam
xor
div
push
sets
leave
sbb
or
shlb
neg
aam
mov
loop
ds
sub
xchg
jge
call
add
clc
push
pop
and
out
push
aas
inc
cmp
lcall
pop
cwtl
out
movsb
xor
scas
sub
inc
sub
jmp
add
adc
fsub
adc
sub
pop
inc
test
push
hlt
jp
hlt
cmc
mov
or
xchg
fiadds
xorb
cmp
sub
xor
mov
rcrb
dec
xchg
lods
sti
pop
ret
stos
orb
call
stos
lret
sub
fcomps
fdivs
fstpt
sbb
and
iret
xchg
out
push
lods
add
inc
push
mov
add
cmp
push
add
cmp
mov
psubsb
or
xchg
and
or
dec
or
dec
adc
push
pop
mov
sbb
cmpsb
sub
mov
loope
add
adc
sub
bound
cmpsb
test
shl
xchg
pusha
notl
xchg
xchg
js
xor
dec
xchg
in
iret
push
lcall
sarb
scas
mov
fcompl
jmp
aaa
or
xor
stos
xor
in
xor
cli
das
sbb
cli
loope
sub
push
sub
jae
fstl
mov
jmp
shll
sbb
fiaddl
push
mov
icebp
cwtl
and
imul
mov
lods
xor
push
sbb
stos
ja
mov
js
in
sahf
in
or
repnz
insb
loope
movsb
pop
je
shlb
jp
sbbl
lret
shll
xchg
or
lret
fsub
fidivrl
insb
movsb
test
jnp
or
int3
sub
pop
push
movsb
popf
shll
xor
lret
mov
xor
dec
int3
ret
arpl
sbb
fsubr
aas
je
aas
loope
fdivl
sub
out
sub
data16
lds
out
arpl
xor
sub
or
jo
cmpb
call
faddl
lret
rcrl
lods
pop
je
loopne
aaa
pop
test
mov
bound
mov
divl
stc
sbb
daa
mov
cmp
mov
repnz
ret
ljmp
mov
sub
iret
movsb
push
mov
mov
xor
mov
fisubs
jne
out
jae
fwait
daa
push
out
push
inc
add
pop
mov
sbb
xchg
popa
jp
sub
popa
ficoml
xor
ljmp
pop
lods
rcll
stos
mov
test
mov
xor
aas
mov
sub
pop
inc
jnp
mov
push
sbb
js
inc
clc
xchg
mov
lock
iret
int3
cwtl
sbbb
pushf
add
inc
mov
add
sbb
fimuls
popf
mov
lret
mov
pushf
cld
adc
sbb
test
loopne
jnp
les
clc
adc
fsqrt
adc
in
jl
mov
lock
mov
aam
push
adc
fscale
jae
adc
mov
shr
dec
and
int3
mov
fidivrs
adc
clc
fiadds
pop
mov
stc
das
and
xlat
mov
test
inc
cwtl
mov
lods
mov
adc
push
dec
pop
sub
xorl
dec
int
test
xor
push
push
add
sbb
mov
sub
je
xchg
cmpsb
jmp
out
mov
in
add
sbb
add
jmp
add
fs
shlb
in
mov
mov
xchg
inc
mov
pop
sbb
iret
ss
testl
out
mov
or
pushf
jnp
push
pop
dec
lcall
xchg
mov
mov
fs
xor
nop
aaa
dec
iret
adc
pop
cmp
add
pusha
push
scas
sbb
sub
pop
xor
xor
cmp
out
mov
mov
int
cmp
les
lods
pop
jge
rcr
lock
sbb
fnsave
insl
mov
add
imulb
je
iret
test
mov
mov
popa
xchg
movsl
js
dec
add
orl
mov
cmp
sub
fs
add
jo
mov
inc
icebp
add
mov
jle
adc
mov
add
pop
loopne
shrb
or
push
pusha
sub
inc
sbb
and
fcomp
mov
pop
add
hlt
jbe
ss
into
mov
mov
int3
push
call
imul
pusha
cmp
adc
lods
add
dec
inc
hlt
nop
sub
add
or
sahf
and
sub
es
rcrb
fdiv
adcb
mov
ja
movsl
pop
mov
cwtl
icebp
mov
into
or
rol
mov
and
loopne
add
loop
jnp
scas
push
pop
push
and
sarl
sub
sub
pop
add
push
add
sbb
adc
loopne
in
testl
jb
int
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
xor
dec
aaa
mov
cmc
xchg
nop
mov
fcmovnbe
and
enter
cmpsb
push
and
and
cld
lret
daa
mov
in
scas
push
xchg
add
outsb
mov
jecxz
jmp
or
bswap
clc
daa
mov
inc
mov
sbb
xlat
mov
mov
shlb
mov
jae
pop
dec
xor
mov
ds
inc
xor
mov
and
cld
jl
adc
add
fwait
les
clc
mov
rcr
push
xchg
mov
mov
repz
pop
or
call
das
add
inc
scas
xor
ficoms
or
xor
cs
cmp
imul
loopne
xchg
sbb
mov
add
add
loop
add
sar
loopne
push
int
pop
xchg
in
push
pop
sbb
repnz
cmp
mov
xor
cmp
jecxz
xor
int3
adc
out
adc
test
push
repz
sub
mov
mov
push
or
xor
mov
push
loop
popa
hlt
sub
adc
pop
in
push
dec
mov
cmp
sub
sub
sub
rcrl
cmpsb
mov
movl
test
test
movsl
add
clc
inc
push
fwait
xchg
mov
mov
dec
js
movsl
and
mov
jo
data16
lods
add
pop
jnp
shlb
cmp
mull
push
xor
aaa
lods
sub
pop
jb
stos
clc
jg
mov
dec
pop
xchg
aam
mov
sti
pop
and
addr16
dec
adc
in
subl
jae
adc
ror
movsl
push
mov
or
pop
aas
idivl
dec
inc
dec
mov
pop
or
or
icebp
and
das
push
dec
or
mov
ret
xor
xor
roll
sub
daa
pop
mov
nop
outsl
insb
cmpsb
rclb
adc
adc
push
xor
fldl
dec
xor
test
stos
loope
pushf
xor
or
add
mov
int3
int
push
inc
mov
xchg
mov
dec
cmp
pop
pop
mov
in
subb
test
scas
lods
sub
in
sbb
dec
insl
icebp
rclb
int3
test
je
hlt
fucom
fdivrl
xor
sub
fists
das
push
es
fstpt
subb
push
push
rcll
jbe
mov
fldt
loop
out
mov
push
xor
mov
sbb
or
mov
push
push
mov
mov
loopne
std
cld
cli
in
sub
mov
xor
mov
cli
xchg
mov
xor
les
mov
sbb
insl
lret
sbb
and
les
fsubrs
mov
mov
cmp
fs
cld
jbe
andl
mov
js
inc
push
imul
mov
push
dec
je
inc
clc
movb
xchg
imul
ret
xchg
shlb
lcall
xchg
mov
and
sub
xor
adc
getsec
idivl
dec
push
fbld
and
sbb
and
cld
mov
adcl
sbb
push
sub
daa
mov
imul
cwtl
inc
lods
test
outsb
dec
fisubrs
xchg
mov
adc
daa
cld
and
sahf
cmp
rcrb
mov
sub
xlat
fdivrs
loope
shll
cltd
aaa
out
push
testl
push
xor
rcr
scas
cmpsb
xchg
push
stos
xchg
mov
add
negb
aam
push
push
and
icebp
arpl
sub
cmpsb
mov
mov
push
sahf
das
hlt
pop
pop
xchg
xchg
mov
xchg
pushf
or
add
mov
hlt
std
arpl
mov
sub
shl
cmpsb
xor
in
cmc
mov
jae
fcompl
je
fldl
or
mov
push
mov
mov
xor
or
jo
add
fimuls
clc
xor
icebp
inc
inc
pop
or
mov
neg
xchg
mov
mov
sbb
imul
mov
movsb
imul
and
mov
xor
inc
push
adc
adc
xor
in
lret
sbb
inc
clc
sub
fs
ror
test
mov
jne
leave
cli
jl
es
and
das
sahf
jge
lcall
jnp
xor
inc
mov
jo
nop
xchg
adc
pop
fadds
xchg
push
daa
push
ljmp
add
int3
int3
mov
inc
data16
xchg
inc
sbb
in
fs
pop
insl
out
sbb
xor
sti
lods
xchg
orb
loope
cli
psrld
outsb
iret
aam
sbb
add
jmp
scas
sbb
imul
loop
push
mov
pop
ds
mov
xorb
sbb
xor
cmpsb
das
mov
arpl
sub
and
mov
stos
push
xchg
in
shlb
pop
pop
inc
daa
lds
aam
sbb
stc
clc
and
insb
cld
xchg
cmpsb
inc
insl
push
jo
fs
fiaddl
call
pop
jnp
pop
sbb
cmp
mov
push
aad
xchg
int
push
orb
pop
add
sub
xchg
jle
shll
enter
scas
jae
out
pop
adc
lret
lock
movb
adc
mov
fs
sbb
sub
les
inc
lret
imul
mov
mov
push
dec
mov
std
bound
lods
jge
mov
pushf
imul
or
sub
test
in
pop
cmp
movsl
cli
xor
cmp
push
gs
cmp
cmp
jl
cmp
or
mov
in
adc
imul
push
jno
repnz
iret
xchg
mov
pop
js
stos
xchg
movsl
das
shlb
inc
mov
mov
sbb
jge
lcall
jno
jae
mov
lret
int3
pop
adc
mov
mov
xor
pop
nop
adc
fsub
inc
out
fildl
scas
fsubp
cltd
gs
sbb
fsubl
cmp
xchg
push
arpl
xor
and
gs
imul
fcmovu
std
mov
repnz
int
xor
mov
push
ja
pop
pop
sbb
clc
aam
fmul
pop
cmpsb
mov
inc
push
out
in
jns
dec
add
stos
xor
pop
mov
dec
popa
jge
insl
movsb
push
mov
leave
xchg
aaa
mov
xchg
mov
data16
loop
pop
or
xchg
pop
ret
ret
cs
add
mov
out
xchg
lea
inc
cmpb
test
mov
andb
cmp
in
add
cld
sub
cmp
into
add
inc
cli
das
cmp
cmp
inc
out
adc
mov
jae
add
mov
mov
add
rolb
mov
or
and
clc
push
in
mov
dec
ljmp
orb
dec
and
pop
or
clc
mov
test
cld
or
imul
inc
ret
mov
inc
call
out
adc
cld
and
pop
fcom
in
push
sbb
xor
and
dec
jl
sub
pop
out
and
out
sub
call
test
repz
push
out
xor
fcoml
jbe
mov
sub
aam
scas
insl
divl
clc
aam
insl
mov
dec
sbb
and
cmp
cltd
ljmp
or
enter
out
sub
scas
je
jo
insb
test
sbb
xor
mov
je
inc
ret
mov
out
jl
loopne
imul
add
mov
stos
rclb
mov
inc
fsubl
stos
sub
and
add
fmuls
mov
add
cli
sahf
jb
cmp
daa
mov
call
mov
dec
adc
mov
es
jno
xor
insb
xor
ret
mov
testl
hlt
pop
dec
jmp
hlt
xchg
sub
mov
ret
push
xor
andl
jo
hlt
cld
mov
sbb
or
insb
sbb
xchg
call
outsl
leave
test
pop
movsl
daa
cmpsb
jp
mov
ficomps
lcall
enter
push
ss
or
mov
cld
mov
mov
addb
ja
fidivrl
sub
and
cltd
mov
xor
jge
cmpsb
in
add
cmpsb
fs
hlt
ja
inc
jmp
pop
cld
push
add
mov
and
cmpsl
xor
lock
nop
jbe
add
ret
add
clc
add
cmp
mov
inc
shll
add
aam
cmp
notb
inc
push
in
push
push
lret
cmc
lret
xlat
subl
fiadds
out
ljmp
ret
sub
jae
ret
sub
nop
add
stos
fldpi
push
mov
hlt
add
dec
pop
notb
lods
shlb
pushf
repz
outsb
and
adc
cmp
lret
cmp
sbb
dec
mov
push
or
stos
push
jg
movsb
testb
and
pushf
call
sub
in
add
or
insb
daa
add
mov
in
adc
fisubs
xchg
into
clc
sbb
cmp
inc
cs
xlat
push
lahf
dec
adc
jmp
adc
mov
leave
cmpsl
lods
inc
push
jg
mov
or
xorl
pop
je
cmp
pushf
push
push
add
cld
dec
mov
pusha
testl
test
sbb
mov
movsb
mov
push
sbb
xlat
pop
cmp
dec
ficomps
orb
mov
push
mov
mov
sbb
cltd
aas
pop
mov
cmp
mov
mov
mov
pop
fdivs
and
sbb
test
sub
xchg
mov
frstor
push
sahf
and
mov
sti
repnz
call
push
xor
cmpsb
adc
ret
dec
dec
fiadds
mov
jo
sub
cltd
ret
push
out
mov
lods
shl
iret
lcall
adc
call
pop
jg
stos
les
loope
mov
das
in
mov
xor
cmp
jnp
shll
stos
xchg
mov
ret
inc
mov
ljmp
mov
mov
pop
mov
dec
ret
and
mov
repnz
mov
je
sub
lods
mov
in
xchg
mov
adc
hlt
cmp
mov
mov
fdivs
add
test
push
hlt
test
cmp
mov
inc
mov
or
loopne
pop
mov
pop
rcrl
stos
or
mov
sbbb
sub
orb
mov
xchg
outsl
xchg
xchg
fimull
es
adc
xchg
insb
cwtl
inc
imul
adc
stos
pop
cs
xor
fstpt
cli
pop
mov
scas
xor
cld
mov
mov
cmpsl
ss
jns
or
mov
and
pushf
lret
ljmp
rolb
push
mov
jae
sub
and
lods
mov
int3
add
or
cld
rcrb
es
cmp
xor
sbb
and
shlb
add
xchg
xchg
and
movsb
cli
aam
sub
xchg
clc
pushf
adc
lret
xor
xor
inc
dec
xor
cmp
lahf
inc
sar
mov
mov
xor
rolb
sub
adc
mov
jecxz
sahf
mov
add
cs
fbstp
pop
js
shrb
inc
sub
and
adc
ficompl
outsb
pop
jbe
lock
divb
mov
divb
mov
aad
adc
push
roll
mov
out
testb
xchg
fs
es
mov
fs
sub
mov
inc
loop
mov
mov
out
jmp
ss
filds
add
mov
icebp
out
fistpll
pushf
adc
push
mov
or
cmpsb
jo
les
mov
mov
js
mov
in
pop
lock
es
inc
hlt
fs
gs
mov
sub
stos
jmp
decb
push
mov
lods
push
push
add
or
int3
cmp
sub
jmp
xchg
int
lahf
sti
daa
cld
nop
jmp
cli
daa
cli
pop
dec
sub
int
sbb
cmp
in
inc
push
mov
push
icebp
lods
adc
push
add
and
pop
addr16
xor
cs
mov
or
dec
jg
jb
mov
xchg
push
dec
lea
adc
fdivl
or
pop
dec
adc
dec
test
cld
je
sub
lods
cld
sbb
insl
sbb
es
popf
pop
filds
lods
cli
sub
and
icebp
push
mov
out
xchg
idiv
sub
mov
or
pop
cld
clc
fmulp
add
inc
nop
subb
sub
loope
and
pop
sbb
sub
xchg
mov
mov
mov
mov
sbb
imul
imul
push
push
das
lret
orl
xor
mov
sub
pop
adc
adc
and
mov
mov
ljmp
adc
ficomps
or
cmpsb
cld
sbb
aam
imul
push
data16
adc
gs
sti
adc
rolb
push
push
js
scas
xchg
add
movd
pop
je
je
pushf
xchg
xchg
xchg
pop
push
jecxz
hlt
addb
mov
or
sub
out
fwait
int3
testb
movsb
outsl
inc
pop
sub
add
mov
aaa
cmp
mov
cld
xor
sub
sub
sbb
xchg
insl
dec
add
lods
pop
xchg
inc
mov
pop
sub
les
loop
xorl
ljmp
fwait
pop
mov
xacquire
xchg
and
xor
out
fadd
cld
xchg
or
add
xor
cmp
cmp
cli
cs
sub
or
sbb
xor
xor
aam
dec
int
fs
leave
xor
xor
mov
rcrb
or
test
shlb
fbld
xchg
int3
sbb
inc
mov
test
mov
insl
bound
mov
mov
js
aas
mov
dec
sbb
mov
mov
mov
and
mov
jbe
dec
rorb
add
pop
jge
add
pop
popf
push
adc
pushf
daa
lods
loope
or
and
shlb
hlt
inc
fnstsw
aas
sbb
filds
clc
das
sub
inc
jecxz
or
shll
loop
mov
mov
cmc
mov
mov
cmpsl
out
imul
cmp
gs
adc
scas
arpl
mov
pop
pop
and
add
add
sbb
pushf
sub
sbb
xlat
pop
sbb
push
dec
cmp
pop
push
xor
sub
and
sub
sbb
xlat
push
sbb
cmp
sarb
iret
jg
sbb
dec
clc
dec
xor
movsb
and
inc
clc
hlt
xor
mov
inc
add
rcrl
pushf
cmp
xchg
clc
sub
mov
popa
pop
xchg
lock
sbb
mov
fldcw
add
lret
repz
xor
adc
aam
jle
push
mov
insl
inc
sahf
cmp
mov
mov
cli
adc
inc
cmp
neg
inc
test
movsb
inc
fiadds
pop
cld
and
add
jecxz
sbb
scas
cwtl
repnz
jnp
push
xor
xor
bound
in
sbb
cmp
aaa
arpl
out
shr
addl
jno
je
rol
xchg
in
inc
xor
imul
sub
inc
xchg
test
adcw
cs
adc
xchg
cmp
sbb
and
sub
nop
sub
std
sbb
cld
fwait
hlt
mov
ss
sarb
sub
or
and
lods
cs
add
pop
sbb
sbb
sbb
adc
adc
sbb
xor
xchg
subl
fldl
sti
into
or
lahf
and
daa
or
aaa
sbb
call
ja
dec
aam
mov
sbb
jg
cmp
out
pop
adc
fs
and
clc
mov
stos
cmp
jns
js
mov
cmp
mov
test
mov
xchg
fs
out
pushf
inc
inc
gs
mov
xchg
hlt
sub
mov
push
mov
mov
inc
aas
inc
jno
xchg
pop
jne
add
push
mov
xchg
fcmovu
fcomps
mov
stos
xor
sub
or
pop
xor
pop
stos
xchg
sub
sbb
and
je
sbb
cmp
xor
jp
idivb
insb
xor
xor
aam
aaa
mov
and
incl
mov
cli
sub
inc
sub
sub
add
adc
mov
push
les
test
shrl
xor
js
sub
je
call
jmp
xor
mov
xchg
call
jmp
xor
sbb
stos
or
int3
and
into
stos
mov
cmp
hlt
dec
pusha
sub
std
dec
shl
jge
icebp
orb
leave
cmp
push
adc
lret
sub
icebp
lods
inc
outsb
cli
lret
testb
cmp
pop
add
jae
shrb
mov
jmp
stos
hlt
lcall
inc
jno
pop
adcl
call
adc
stos
adc
addl
insb
dec
mov
xor
mov
sbb
push
movsb
jb
pop
sub
xlat
dec
mov
sub
ds
test
cwtl
orl
icebp
xchg
pop
repz
rol
dec
repz
mov
sbb
in
nop
loope
test
in
mov
adc
adc
in
mov
adcl
ret
dec
fwait
adc
popf
mov
adc
mov
int
aas
sbb
les
in
xor
adc
stos
outsb
clc
dec
pop
mov
mov
push
incb
int3
cs
fwait
mov
ret
data16
ds
mov
rcrl
pushf
subb
std
in
dec
insb
jae
or
dec
mov
xlat
or
jae
pushf
movsl
xor
sbb
fdivs
sub
xchg
pop
imul
int3
xchg
and
pop
int3
fisubs
test
leave
faddl
push
imul
mov
lret
in
xor
push
leave
sbb
jbe
xchg
mov
and
cmc
adc
xchg
jb
je
inc
cmpsl
data16
shll
adc
and
repnz
pop
stc
mov
mov
inc
adc
and
xlat
les
mov
adc
in
add
inc
push
cltd
out
mov
mul
sbb
jno
lods
sbb
das
int3
je
dec
sub
hlt
gs
outsl
and
bound
jae
cs
pushf
mov
sar
inc
cmp
mov
push
mov
je
xor
loopne
sbb
data16
jnp
fs
xor
xor
cld
inc
dec
xor
mov
and
mov
test
xor
or
sub
or
add
in
lods
push
adc
icebp
test
stc
xchg
pusha
jne
push
jmp
aam
or
dec
jecxz
rcr
pop
sbb
mov
test
inc
idivl
cld
in
or
hlt
call
adc
jno
jo
call
test
loope
sbb
imul
repnz
pop
fsubrl
sarb
ret
mov
pop
fs
cli
les
out
in
hlt
xor
cmpl
add
cltd
adcl
dec
add
js
test
sbb
cs
lods
cmc
mov
test
std
add
push
test
dec
jle
mov
or
iret
bound
inc
inc
mov
mov
sarb
lea
add
loope
inc
je
mov
add
xchg
pop
fldt
push
in
sub
pop
cmpsb
imul
test
repz
loop
cli
fiaddl
jbe
add
xor
in
mov
sbb
pop
int3
adc
movsl
jmp
inc
mov
cli
into
inc
xorl
ffree
addr16
addl
lcall
cwtl
xchg
lods
mov
sarl
dec
cwtl
or
fistl
pop
loopne
stos
pop
icebp
xchg
imul
or
sub
test
std
pop
hlt
lods
dec
je
push
test
push
mov
sar
mov
mov
inc
mov
inc
jo
mov
cmp
mov
sbb
scas
lret
insb
mov
sub
ja
stos
scas
mov
inc
test
xor
mov
es
inc
xlat
mov
stos
lock
call
cmp
icebp
inc
add
mov
mov
push
imul
or
scas
sub
mov
push
pop
popa
or
mov
inc
or
lock
dec
jns
sub
cmp
push
xchg
pop
pushf
shrb
loope
mov
loope
es
pusha
outsb
sbb
addl
sbb
or
js
mov
nop
scas
jb
lcall
lock
xor
sbb
pushl
stc
fcmovnb
mov
test
dec
jge
inc
sbb
add
imul
mov
sub
cltd
ja
lea
fcompl
and
sbb
xchg
icebp
inc
mov
jmp
mov
shll
jl
xchg
shrl
inc
dec
jle
jbe
xchg
aas
or
lret
out
aam
mov
mov
push
aaa
fidivrs
jno
sub
sub
xlat
push
cmp
jae
sub
cmp
jae
lret
dec
jb
pop
shl
daa
sub
call
xor
in
push
add
pop
push
loop
loope
push
ficomps
mov
mov
xchg
fdivrp
jmp
add
in
pop
dec
cmp
cltd
cmp
push
adc
cmpsl
aam
pop
xchg
repnz
cwtl
and
xchg
mov
data16
arpl
dec
fs
push
icebp
addr16
repz
out
jae
fsubr
aam
in
lds
mov
sub
jle
dec
stos
in
cltd
loopne
push
fiaddl
fiadds
or
and
lea
push
add
shrl
cmp
push
aam
pop
mov
stos
fmul
push
mov
sub
or
or
sub
test
or
xor
or
stos
test
and
dec
adc
fdivrl
xchg
adc
clc
jmp
or
mov
xchg
sti
clc
push
mov
jl
mov
and
jnp
sub
jecxz
mov
mov
fldt
or
lret
push
cmp
push
pop
pusha
xchg
gs
push
outsb
mov
sbb
and
dec
dec
jbe
adc
lret
jnp
cmpsl
cmp
add
and
or
stos
pop
arpl
mov
and
in
mov
mov
mov
sub
pushf
jp
push
insb
mov
and
pop
ja
js
push
mov
jb
mov
mov
jnp
push
cld
inc
imul
mov
cld
push
mov
fs
xchg
push
pop
and
ret
je
rorb
pushf
push
cltd
mov
add
in
dec
testl
push
sub
jo
int
sbb
mov
adc
mov
mov
call
mov
mov
sbb
add
add
mov
pop
subb
sub
mov
pusha
fs
les
inc
out
addr16
push
xor
push
pop
and
lahf
xchg
fldenv
movb
stos
xor
ljmp
sarb
dec
sub
xor
shrb
int3
pushf
testb
pop
popf
mov
les
adc
jmp
addr16
adc
mov
in
arpl
out
add
jbe
xchg
in
bound
and
lret
or
push
xchg
cld
adc
jl
mov
shr
cmp
mov
cmpsl
addl
cli
cld
icebp
inc
lret
repz
jp
pusha
add
mov
xor
mov
outsb
mov
dec
filds
nop
mov
jecxz
shll
cmp
adc
or
xchg
pop
filds
pushl
mov
int3
mov
xchg
sarb
sbb
loope
aas
jbe
mov
loope
je
cwtl
lds
pop
xor
lock
push
mov
dec
repnz
cmp
fiadds
sahf
push
and
addb
int3
jns
inc
aad
adc
fsubrs
rcrb
inc
fldl
push
stos
icebp
mov
sbb
dec
mov
and
adc
adc
movsl
mov
dec
test
jl
mul
mov
inc
or
lods
xchg
ret
pop
mov
shlb
pushf
add
add
pop
cmc
mov
lret
mov
stc
pushf
push
shl
dec
dec
sub
lcall
ljmp
in
sbb
orl
adc
repz
or
push
adc
adc
stc
scas
adc
ja
fisubrs
jno
mov
adc
lcall
mov
xchg
xchg
adc
sub
sbb
roll
fsubrl
cld
rorb
or
sub
je
pusha
sahf
pop
mov
cmp
bnd
add
in
sub
shr
mov
xor
int3
enter
cltd
lea
cli
adc
mov
add
sbb
sbb
mov
mov
rorl
add
adc
pop
les
cmp
pushf
xlat
int3
pop
adc
jl
inc
in
sahf
add
je
xchg
ret
xchg
xchg
sti
lods
inc
sbb
lahf
inc
je
cwtl
popa
pushl
push
lcall
and
push
cmpsl
xor
hlt
sbb
and
cli
sub
daa
dec
mov
dec
pop
out
ljmp
add
xor
sbb
repnz
jo
in
addb
pop
dec
add
adc
loop
pop
jb
adc
lea
in
dec
xor
cmp
push
hlt
rdmsr
sbb
or
les
test
push
pop
stos
jp
pop
stc
arpl
or
or
cmp
roll
pop
mov
mov
mov
inc
ds
or
xlat
sbb
out
scas
or
aam
arpl
movsb
xchg
fs
inc
gs
adc
out
pop
add
xor
mov
fildll
adc
adc
mov
jne
ja
xchg
mov
mov
nop
loope
xchg
int
fisubs
add
dec
sbb
cmpsb
sbb
mov
fnstsw
aas
mov
adc
sbb
div
push
fisubl
xor
loop
push
adc
mov
pop
jb
lods
xor
xchg
in
dec
shll
cmp
lods
icebp
loopne
je
movsb
insl
add
mov
rcrl
mov
je
add
testl
sbb
xchg
push
sub
imul
lcall
je
loop
imul
sti
cld
ljmp
mov
mov
push
lods
push
in
pop
int3
mov
je
sub
inc
push
pushf
ficomps
fstl
imul
and
cmp
adc
cmp
cmp
jl
jae
mov
mov
fdivrs
mov
jae
sub
cld
das
mov
sub
mov
mov
sub
mov
cmp
xchg
sbb
xchg
dec
or
js
es
ror
mov
ret
cltd
cltd
xchg
testb
jno
clc
xchg
sub
inc
add
sbb
in
add
jmp
lret
adc
adc
xor
push
movsb
not
lock
sbb
sahf
dec
jl
xchg
lret
sbb
mov
and
repz
add
or
mov
xor
repz
adc
xor
cmp
pop
repnz
push
fs
cmp
mov
cmpsb
mov
aaa
sub
in
adc
jp
fldcw
ret
and
jnp
sbb
or
shlb
fstl
pushf
fcompl
outsl
ljmp
loopne
outsl
xor
shlb
arpl
xchg
fidivs
xor
pushf
aam
add
cmovs
mov
mov
lea
cld
imul
int
test
or
aad
repnz
sbb
cmp
pop
fs
hlt
sub
addl
test
xchg
sub
mov
pop
rolb
rcrl
xlat
and
je
loop
bound
les
mov
mov
jb
xchg
fisubl
inc
inc
fwait
push
stos
pop
lret
xchg
movsb
icebp
daa
mov
rorl
outsl
gs
mov
ljmp
push
or
jae
int
mov
sbb
pop
repnz
inc
daa
int3
sub
xor
shrl
cwtl
outsl
adc
and
cmp
sbb
xor
jecxz
sub
lret
mov
sub
pop
roll
es
mov
test
and
sbb
mov
lahf
mov
adc
jo
xchg
icebp
xchg
mov
or
pushf
jl
cwtl
sub
lcall
movsb
sahf
pop
jae
stos
mov
mov
jmp
xchg
xor
jge
in
or
add
mov
jae
or
xchg
scas
les
or
push
dec
push
scas
mov
jmp
repz
lods
xchg
pop
xchg
and
rorl
mov
pusha
jecxz
js
rorl
outsl
cld
add
mov
sti
call
jno
out
loopne
and
xchg
and
jmp
cli
clc
pop
jmp
stos
cwtl
pushf
cmc
mov
pop
pop
insb
xor
mov
lock
fisubs
sti
mov
ffree
stos
hlt
aaa
pop
mov
xchg
cli
xchg
dec
movsb
outsb
test
mov
mov
into
mov
jns
mov
ficoms
jnp
int3
jle
jge
adc
push
fldl
mov
mov
add
jae
xlat
mov
jmp
jg
fdivr
subb
je
aad
fimuls
pop
mov
add
stos
push
mov
hlt
push
mov
in
xor
pop
pop
pop
xchg
hlt
adc
jle
sub
jae
jl
pop
cmp
daa
data16
xor
jg
push
out
lcall
js
adc
add
push
sbb
sahf
sbb
in
lcall
ljmp
leave
sbb
mov
test
jbe
mov
mov
xchg
pop
shl
mov
je
push
mov
mov
sbb
les
jg
xchg
pop
mov
xchg
sbb
pop
loope
adc
in
push
pop
pop
xchg
and
sub
pop
aad
mov
and
fcomps
cltd
xchg
sbb
mov
xor
dec
gs
icebp
aas
sbb
sbb
fldcw
mov
jge
repnz
lret
cmpsb
dec
add
clc
xlat
add
add
fs
adc
mov
xchg
sub
daa
int
out
add
dec
lea
fnstenv
loope
std
out
jle
adc
cmp
mov
sbbb
cmp
repnz
hlt
daa
and
pop
sbb
lods
jns
hlt
add
cs
movsl
mov
ljmp
hlt
cmp
xchg
inc
push
push
mov
ffree
inc
clc
push
xchg
mov
aas
es
pushfw
dec
lods
mov
or
sti
adc
fidivrs
xor
add
sub
push
push
sbb
ljmp
mov
pushf
xlat
sbb
dec
pop
pop
cmp
mov
icebp
xor
jle
cmp
mov
cmp
arpl
dec
mov
xchg
rcll
inc
hlt
test
notl
xor
out
stos
add
mov
adc
pusha
dec
mov
cmp
scas
subb
cwtl
scas
lock
nop
rorl
or
cltd
xlat
and
cs
out
or
jmp
sahf
rcrb
sub
sub
test
cmp
cmp
test
fdivs
dec
inc
lock
adc
jne
insl
aas
fs
add
adc
movsl
in
pop
mov
sbb
jle
rcll
cs
sbb
jmp
divps
pop
fsubl
and
ficoms
inc
mov
jl
mov
mov
ljmp
repnz
int
iret
mov
add
int
ja
or
push
add
std
mov
les
aaa
mov
push
das
test
jge
cmp
xchg
loope
sub
xor
add
int3
jnp
loop
jne
add
aaa
mov
rcr
sbb
out
jmp
sbb
mov
sbb
nop
js
xor
dec
cmp
cmp
and
stos
imul
lods
inc
mov
addr16
rolb
adc
fs
int
rcl
pusha
add
daa
sub
mov
sub
pop
mov
pop
outsb
inc
insl
call
add
pop
pushf
lods
mov
add
fidivs
xor
pop
xchg
add
sub
popa
jns
push
mov
jne
add
mov
subb
arpl
scas
imull
pop
cld
jle
jns
add
sub
cmpsb
xchg
popa
fs
xchg
stos
mov
adc
sub
dec
ret
xchg
out
fsubr
jl
leave
dec
xor
das
out
mov
dec
aam
and
in
xchg
push
inc
xchg
mov
pop
inc
adc
movsl
imul
push
jecxz
mov
stos
scas
cmp
mov
cmp
or
mov
jo
pushl
push
clc
fidivl
or
ficoml
int3
jmp
popf
inc
fimuls
or
sbb
scas
sbb
sub
dec
xor
fsubrs
sbb
xor
jmp
pop
daa
pop
scas
stc
pop
pop
movsl
out
sub
lcall
pop
es
jp
push
in
and
inc
push
adc
xor
sub
jl
ret
loope
pop
mov
repz
in
mov
mov
cs
test
ficompl
fcmovnbe
add
dec
in
xor
aaa
idivl
psubusb
mov
inc
mov
mov
test
and
loopne
cld
lods
xchg
lock
pusha
mov
iret
xchg
cmp
sub
xor
push
cwtl
cmp
inc
testl
int3
sub
mov
dec
out
rolb
mov
mov
dec
mov
add
int3
in
int3
nop
mov
sbb
push
add
aam
xor
bswap
add
inc
sahf
bound
fsubr
jle
scas
mull
or
push
xchg
scas
xlat
fiadds
leave
mov
sti
lret
in
pushf
cmpsb
jb
sbb
lods
adc
dec
adc
inc
test
or
push
add
pop
filds
data16
insl
pop
dec
data16
sbb
adc
inc
int3
dec
data16
jle
adc
adc
mov
pushf
pop
sbb
scas
arpl
lret
pop
test
inc
sub
adc
dec
insl
int3
add
and
dec
je
pop
jb
call
adc
leave
lock
mov
pop
sub
mov
xor
in
call
push
add
sub
lret
hlt
fsubrl
adc
test
dec
in
add
sbb
mov
nop
inc
fs
roll
and
outsb
mov
fs
and
mov
cmp
rclb
das
mov
fldt
data16
sbb
jp
mov
sbbb
cmp
xchg
fcom
loopne
mov
clc
mov
inc
js
mov
and
sbb
xchg
insb
lods
lret
repnz
insl
mov
sar
out
or
jns
push
frndint
jmp
sub
and
jnp
jl
sub
and
repnz
sbb
mov
sbb
call
cmp
cld
imul
xorl
mov
hlt
sahf
addr16
mov
nop
hlt
roll
outsb
and
sub
pushf
sarb
jo
dec
std
cli
sbb
pop
sub
pop
xor
sbb
divb
dec
jle
pop
sub
mov
out
out
movsb
sbb
push
add
or
out
inc
jnp
outsb
inc
adc
das
inc
xor
call
adc
ljmp
mov
js
push
or
sbb
xchg
lock
pusha
cmpsl
aaa
push
mov
ud2
xor
outsl
repz
data16
add
loopne
hlt
push
stos
or
sub
or
dec
test
loop
clc
pushf
lods
mov
dec
or
xchg
orl
mov
cmp
fists
push
mov
adc
pushf
loope,pt
xor
shrb
mov
clc
daa
mov
outsl
repz
dec
lock
jns
pusha
jmp
add
push
mov
mov
mov
and
mov
mov
and
aas
xor
sub
add
lcall
mov
aaa
jge
mov
push
jl
and
aas
add
pushf
dec
add
dec
mov
arpl
sbb
mov
imul
sub
negb
xchg
imul
xor
pop
push
pop
in
sahf
sub
clc
mov
mov
lahf
sub
lcall
into
xor
inc
das
add
xchg
into
hlt
or
out
dec
inc
js
jnp
push
mov
movsl
mov
mov
fwait
sub
xchg
mov
push
sub
lds
hlt
dec
lahf
btr
jb
hlt
or
int3
inc
outsb
out
popf
imul
ret
mov
sbb
iret
cmp
add
pop
popa
and
sbb
sbb
sub
xor
sub
and
push
mov
and
insb
roll
mov
mov
out
fistl
mov
mov
and
scas
imul
movsb
mov
imul
pop
push
mov
test
cmpsb
fbstp
nop
rcrl
inc
clc
xchg
out
aad
pusha
push
cs
sbb
adc
mull
mov
loop
inc
sbb
adc
xor
repnz
clc
adc
hlt
xor
lock
inc
arpl
cmpsb
aam
fsubr
fmull
xor
popa
in
test
sub
mov
test
in
rdtsc
pop
call
into
out
in
mov
sbb
adc
sbb
adc
push
push
insb
loopne
mov
fisubrs
sbb
neg
sbb
cmp
aam
fcmovu
cmc
mov
shr
inc
jmp
push
jns
dec
or
cltd
imul
or
movb
cwtl
cmp
aam
inc
mov
add
test
pop
repz
clc
jmp
rsqrtps
sub
cmp
lods
mov
aas
out
jae
insb
sub
adc
addb
movsb
dec
std
jno
les
repnz
negb
push
mov
fcoms
repz
mov
sbb
and
adc
mov
sbb
mov
mov
faddp
test
or
js
add
jmp
pcmpgtd
pop
sub
mov
pushf
out
fcmovbe
and
add
sbb
stos
fs
xor
push
jbe
inc
adcl
or
sub
aaa
pop
adc
bnd
nop
repz
fsubl
jp
scas
add
and
test
push
int3
fidivrs
pop
call
cmp
add
xor
in
cwtl
mov
out
sub
mov
loopne
cli
fidivs
into
test
push
cmpsb
mov
in
and
xchg
insl
xchg
inc
add
sbb
dec
or
inc
cmp
sbb
fxch
sub
fwait
outsb
sub
sbb
mov
int
les
jae
loop
push
insb
dec
cltd
adcl
sbb
insl
push
into
cmp
int3
cwtl
lock
xchg
aam
loopne
mov
cmp
mov
movsl
sbb
loope
sbb
inc
sahf
cmp
arpl
cmp
push
jb
fnsave
fs
or
out
pusha
pop
sbb
adc
fisttps
cli
pushf
pop
lods
sub
das
xor
cld
xchg
ss
sub
sub
repnz
mov
faddl
scas
cmp
data16
in
adc
je
lcall
add
push
mov
sar
cmp
or
ror
shlb
ljmp
and
testl
jne
xchg
cmp
mov
pushf
inc
clc
or
and
rclb
xchg
sbb
sub
in
add
mov
mov
leave
or
mov
pop
jge
mov
mov
jl
icebp
loopne
sbb
xor
mov
repnz
xchg
ja
daa
fadds
mov
test
xor
cld
dec
mov
das
adc
nop
cmp
stc
loope
xor
pop
not
call
inc
arpl
mov
inc
div
mov
les
test
jecxz
add
testb
arpl
loopne
into
sbb
sbb
inc
push
mov
je
cmp
imul
jne
popa
xor
in
cmp
sub
stos
sub
xor
int3
push
je
call
arpl
lret
sbb
stos
mov
pushf
xchg
mov
sub
movb
hlt
daa
push
lds
movsb
or
repnz
mov
mulb
ficompl
cltd
out
daa
dec
mov
fdivs
dec
in
and
mov
test
sbb
mov
repnz
dec
adc
dec
dec
js
cmp
test
add
sub
fs
outsl
mov
mov
add
sbb
ljmp
or
roll
adc
push
insl
adc
and
sbb
pop
cli
pop
jae
lock
push
aas
test
movsb
es
xor
add
imul
jb
rclb
cli
test
adc
movsb
cmp
xorb
push
sbb
test
into
mov
movsb
add
mov
xchg
mov
pop
and
push
ret
icebp
out
ljmp
cmp
clc
or
cli
or
cli
sti
xchg
xor
add
in
data16
mov
cmp
addl
xor
add
mov
rclb
cwtl
pop
leave
cmpsb
ret
aam
sub
lock
fisubs
sbb
insl
pop
xlat
cmpsb
sbb
fsubrp
xorl
mov
push
arpl
mov
sbb
rorl
adc
add
mov
ss
pusha
outsb
add
sbb
addb
je
out
jecxz
xchg
rcr
or
cmp
cmpsl
xchg
repnz
icebp
js
sub
xorl
testl
xor
andl
xchg
subb
pop
shl
aas
in
sub
jae
adc
and
fs
daa
inc
fs
dec
and
add
test
int3
xor
pop
cmp
and
lods
out
adc
repnz
stos
aam
and
xchg
or
pop
cmp
push
aam
add
fsubrl
pusha
mov
mov
jge
xchg
push
and
icebp
fs
pop
inc
pop
add
outsb
jecxz
adc
lods
pop
adc
jl
mov
hlt
add
jo
lds
imul
loop
nop
sub
and
xor
push
pop
or
pushf
inc
in
pop
xor
loop
out
ds
cmpsb
adc
push
ss
stos
jl
add
cmp
or
and
sub
mov
or
aaa
fldcw
xor
stos
dec
cmp
dec
movsb
dec
jle
test
dec
and
aas
jbe
dec
repnz
loop
movsb
fsubp
sub
cmp
gs
pop
loopne
out
adc
or
jns
loop
sarb
repnz
jns
sti
inc
cmp
loope
pusha
sbb
jbe
pop
mov
xor
shrl
xchg
mov
lahf
mov
add
sbb
enter
xorb
push
testl
pop
or
and
pop
or
shll
inc
and
inc
cwtl
imul
or
xor
inc
flds
in
cmp
sbbl
fadd
lcall
jno
les
stc
and
and
push
or
mov
xchg
test
jle
movsl
lahf
testb
and
loop
cltd
push
dec
add
add
ljmp
push
push
xor
clc
adc
test
cmp
clc
daa
rcrl
cmp
xorb
xor
je
push
push
sbb
je
push
and
cmp
xorl
je
rorb
shl
pop
xor
jecxz
sub
push
enter
xchg
cmp
xor
jl
cwtl
out
pop
cli
pop
into
jo
push
and
nop
std
nop
push
jb
movl
iret
cwtl
mov
rcll
stos
or
test
mov
push
mov
test
stos
jp
add
jecxz
mov
adc
test
or
fimull
aas
mov
jnp
mov
add
out
dec
cmpsl
sti
push
lods
mov
hlt
pop
add
add
jo
mov
sbb
daa
in
add
xor
or
dec
subps
hlt
sbb
xor
lcall
mov
pop
mov
sbb
inc
stos
fistps
cmp
lcall
call
add
call
adc
icebp
jnp
jp
aam
int3
cld
out
cmp
push
dec
adc
decl
rcrb
sbb
test
pop
mov
ret
or
dec
inc
mov
ljmp
cld
fs
push
sbb
gs
loop
push
adc
cmp
test
inc
popf
add
addb
jns
movsb
lock
sbb
scas
cmc
push
in
and
sbb
xchg
adc
fnstsw
movsb
loopne
cwtl
sbb
je
pop
sahf
xchg
add
and
daa
xor
sahf
cmp
or
and
adc
add
outsl
mov
push
cmp
cmp
inc
mov
mov
in
or
sub
xchg
or
xchg
and
outsb
push
push
ret
je
sbbb
je
je
fsts
cwtl
pop
out
xchg
adc
mov
sub
fsubr
and
adc
test
adc
repnz
in
repnz
sbb
mov
cmp
ds
rolb
int3
lea
cmp
xor
cmp
in
int
adc
in
push
cmp
and
xor
cmp
in
jns
mov
push
cmp
jmp
int3
loopne
fwait
loope
cmpsl
jmp
push
scas
xchg
xchg
mov
pop
out
jae
hlt
enter
shrl
jg
out
pop
push
mov
push
cmpsl
inc
push
inc
push
jno
aam
mov
cmp
xchg
lods
mov
push
lods
cld
add
inc
sbb
in
mov
add
sub
adc
push
xor
sti
cmp
xchg
pop
mov
mov
lret
pop
push
lahf
add
push
inc
aam
imul
es
lahf
fwait
rcll
je
sub
std
pop
fnstsw
scas
psubd
sbb
jmp
xor
dec
sub
je
call
jmp
xor
xchg
sub
je
call
cmp
and
fcomp
adc
mov
cli
jle
adc
fsubs
adc
mov
cli
lds
mov
fsubrs
sbb
stos
shlb
cli
into
sbb
jmp
xor
test
sub
je
call
jmp
xor
lret
sub
je
call
xchg
lds
addr16
jl
andb
arpl
idivl
dec
inc
adc
xor
aaa
dec
dec
fdivrs
rcr
sub
cmp
mov
sub
loopne
dec
pop
sub
push
mov
leave
das
aam
pop
sbb
cli
push
sbb
arpl
xor
aam
sub
jp
sbb
sbb
push
cwtl
das
dec
imul
dec
cs
jle
or
sub
cmpsb
je
insb
cmp
mov
and
mov
imull
inc
fadds
mov
sub
mov
pop
or
xor
push
loope
std
or
dec
imul
sbb
cltd
xor
push
orb
or
das
inc
mov
div
mov
fisubrs
add
jae
inc
push
and
add
push
add
cwtl
fdivr
push
pop
shl
pop
xchg
mov
or
cltd
pop
lock
int
stos
pushf
lcall
pushf
inc
push
sub
ljmp
fldt
mov
lcall
dec
pushf
in
cli
xchg
cmp
stos
in
mov
and
add
jmp
ret
mov
push
jg
mov
jle
jo
add
mov
negl
xchg
jl
les
adc
data16
cli
je
mov
push
xor
dec
cmp
xor
cmp
push
fmulp
int
inc
mov
repz
lock
insb
pop
lea
pop
test
or
inc
je
add
pop
mov
femms
outsl
mov
sbb
mov
dec
sub
aas
in
add
fiadds
inc
sub
in
xor
repz
inc
cmpsl
mov
mov
inc
std
inc
or
pop
sbb
rcl
fwait
repnz
gs
les
mov
repnz
cmp
sub
je
in
xor
or
rol
sub
loop
call
sbb
arpl
scas
xlat
fs
mov
or
xchg
in
pop
xor
sub
dec
lret
repz
daa
add
daa
aas
mov
mulb
mov
add
sbb
mov
lcall
pop
pop
out
push
mov
or
mov
sbb
and
sbb
xor
add
pop
test
mov
fcomi
sahf
xchg
outsl
jl
imul
lods
xchg
outsb
jmp
lret
es
push
sbb
mov
pop
sub
xor
stos
ja
cltd
out
stos
mov
mov
inc
shrl
mov
adc
lods
les
xor
lods
ja
shll
decb
aam
call
inc
pop
pop
xchg
adc
sbb
insl
stos
jno
inc
pop
add
xchg
jb
sbb
push
shrl
mov
mul
sbb
out
sar
xor
int
adc
cli
inc
inc
mov
mov
insb
push
adc
call
fsubr
and
rcrl
sbb
jno
ds
hlt
mov
mov
daa
inc
inc
ret
sbb
xchg
repz
in
dec
xor
test
daa
mov
jecxz
negb
pop
or
shrb
shrb
pop
mov
fdiv
and
jg
insl
xchg
sbb
lea
mov
or
icebp
fiadds
ljmp
xor
add
aaa
in
ja,pn
or
add
jge
mov
mov
inc
inc
int
out
mov
or
add
lods
mov
mov
ljmp
sub
lods
out
sbb
imul
cmp
popaw
lret
je
push
inc
adc
daa
in
or
add
jns
test
dec
and
and
xor
scas
sub
ja
add
mov
cli
std
push
cmp
push
fbstp
pop
fistpll
sub
nop
scas
ret
adc
sub
pop
xor
dec
mov
mov
sub
fs
dec
or
adc
hlt
inc
xchg
ja
aam
orl
es
xlat
int3
inc
cltd
xorl
sbb
inc
cmpb
mov
sbb
cwtl
fcomip
mov
les
sbb
repnz
sahf
sahf
stc
lcall
inc
addr16
push
adc
or
fdivr
fcompl
and
and
and
aas
loop
inc
and
add
popa
xchg
jmp
mov
subl
xchg
fs
je
movsb
pop
out
testb
jns
or
sbb
loop
pop
and
fildl
push
pushf
gs
and
and
and
adc
idivl
mov
lret
push
mov
dec
je
in
hlt
lea
xor
stos
push
jle
xchg
lea
add
cmc
xchg
popa
rcrl
lods
xchg
scas
lds
or
add
or
insl
lret
divb
cmp
dec
aas
das
inc
lock
jne
repnz
jmp
cmp
cld
sub
sbb
pop
imul
pop
les
sbb
mov
sub
xor
sub
adc
lods
jns
mov
insb
cmp
and
add
popa
daa
je
in
and
push
sbb
dec
jae
push
lret
shlb
arpl
jg
or
rolb
lcall
mov
mov
je
jecxz
or
imul
mov
cld
xor
push
or
jle
xor
out
or
cmp
lcall
push
cmp
add
in
jnp
mov
lock
add
add
fdivrp
xor
test
dec
mov
jg
xorl
arpl
jmp
cld
mov
sahf
sbb
daa
mov
xor
sub
pop
and
pop
ja
nopl
in
mov
push
push
adc
inc
inc
mov
sub
in
ljmp
aam
push
mov
test
ror
sub
push
push
fs
inc
fcompl
sbb
fsubl
pop
jmp
or
or
sub
dec
sub
sbb
hlt
sub
sahf
sub
push
cmp
loope
je
adc
push
pop
xor
stos
adc
imulb
imul
aas
fcomp
or
sub
pop
adcb
in
xor
fs
dec
inc
sti
inc
cmp
or
insl
sub
orb
shlb
push
mov
xor
sarb
adc
and
dec
xchg
or
add
or
jp
adc
inc
xchg
add
jae
clc
xchg
lcall
mov
or
popf
lock
mov
fdivr
xor
dec
or
adc
bound
jo
jl
xchg
pushf
insb
ror
adc
scas
int3
lret
xchg
push
testb
icebp
data16
cmp
imul
mov
lods
mov
out
adc
jb
inc
out
lods
lret
das
int
cmp
andb
mov
outsl
push
push
ljmp
push
fnstcw
clc
repz
adc
fwait
adc
mov
nop
pop
aam
enter
push
jnp
push
sbb
dec
rorb
mov
testl
adc
pop
test
or
cwtl
pushf
xlat
test
dec
aam
out
push
mov
loopne
aad
push
in
enter
add
neg
cwtl
cltd
xchg
rcr
loop
enter
cltd
lret
fcomp
mov
loop
test
sbb
inc
and
aam
aam
cwtl
jle
dec
mov
push
push
mov
push
mov
cmpsb
arpl
popa
repnz
popa
mov
mov
enter
push
cltd
cli
jb
hlt
mov
je
mov
pop
mov
cltd
repz
sub
xlat
int3
shlb
push
subl
and
mov
or
push
mov
pop
xchg
inc
cld
cmp
sbb
daa
loop
push
cmp
pop
movsb
dec
cmpsb
mov
icebp
push
adc
sbb
adc
sbb
jb
sbb
int3
jle
jbe
les
in
push
negl
add
sub
aas
sub
push
sbb
inc
adc
push
add
in
sub
sub
test
mov
enter
fbstp
or
fiadds
repnz
stos
cmp
mov
shr
mov
dec
aas
inc
mov
aas
pop
test
les
dec
je
xchg
in
test
pop
mov
hlt
add
jg
imul
xorb
mov
faddp
xor
aam
or
mov
add
clc
test
sub
add
cs
je
sbb
sub
cmp
lcall
inc
loopne
sub
or
arpl
pushf
dec
jl
push
cmp
mov
cmpb
add
cld
add
push
enter
test
inc
jae
stc
adc
mov
cmp
xor
add
jge
mov
cmc
pop
jb
xchg
pop
scas
sbb
dec
sub
addr16
movsb
pushf
popa
adc
mov
andl
dec
mov
mov
pop
dec
fldlg2
je
dec
sub
or
aas
aad
pop
imul
push
movsb
test
mov
repz
repnz
add
mov
je
dec
dec
cld
test
stos
sbb
ljmp
add
jmp
movsl
pop
andb
cmc
inc
cmc
pop
cmp
sub
mov
pushf
and
out
cmp
mov
adc
mov
cmp
or
sbb
xchg
add
fmull
test
push
mov
xor
fdivl
fs
daa
jp
mov
push
mov
fildll
fcomp
ljmp
sbb
ret
insl
insb
mov
mov
lea
fdivrs
jmp
push
sbb
sub
jb
sub
adc
adc
cmp
loop
bound
cli
jo
lret
add
gs
adc
je
fsubs
mov
ljmp
mov
dec
cmp
cli
xor
loop
test
pop
std
hlt
lods
pop
push
jg
xchg
mov
xchg
or
ret
add
je
fadds
data16
mov
jne
scas
pop
xor
loop
mov
in
and
cmp
stos
mov
push
adc
cli
lret
xchg
rorb
pop
orb
jns
stc
sub
ja
cmp
xor
into
adc
push
sbb
or
inc
adc
add
pop
push
mov
ss
hlt
add
pushf
lea
sbb
out
jg
or
push
mov
mov
mov
xchg
rcrl
fidivs
jmp
jbe
mov
jle
cmpb
clc
test
packssdw
mov
push
inc
inc
cmp
sti
mov
in
inc
mov
sbb
fwait
xchg
mov
cli
adc
ja
fsubrp
push
push
sbb
cld
xchg
and
insb
cmp
and
cld
xchg
flds
test
or
and
fwait
adc
xchg
movsl
lea
es
je
fstps
and
test
xchg
jl
jmp
arpl
test
jge
pusha
xor
mulb
fnstenv
stc
jle
addl
fs
sbb
mov
sub
adc
sbb
loope
mov
in
sbb
js
fisubrl
adc
outsl
out
pop
adc
sub
int3
aaa
xchg
sbb
dec
scas
dec
push
in
in
je
dec
jecxz
fisttps
sbb
aaa
out
push
movsb
outsl
or
lods
cmpsb
movsl
lods
sub
pop
sbb
subl
shrl
sbb
mov
adc
mov
imull
xchg
xor
rorl
sbb
sbb
xchg
push
sbb
sbb
pop
mov
xor
ficomps
out
or
mov
mov
es
call
outsl
pop
mov
sarl
mov
sbb
sbb
push
dec
insl
movsb
jmp
push
es
xchg
mov
jno
pop
sbb
fstl
cld
xor
lret
ds
mov
jmp
fwait
lods
aas
or
adc
in
nop
xchg
ds
fiaddl
sbb
jnp
inc
mov
jecxz
mov
add
ds
stc
xor
cwtl
call
scas
repnz
mov
xchg
or
mov
lods
dec
pop
call
stos
cmp
das
popf
sbb
xorb
out
call
mov
fwait
sbb
mov
addl
addr16
pop
dec
jg
mov
sbb
loopne
or
xor
into
push
notb
push
sbb
jno
ja
mov
cmc
iret
cmp
push
pop
adc
insl
push
push
pop
mov
iret
imul
cmp
out
fs
xchg
cmc
iret
sbb
sbb
add
je
jle
repz
xor
lret
repz
push
xor
imul
aaa
lret
enter
ficomps
inc
fs
jp
add
loopne
mov
inc
ret
pop
push
popa
add
mov
in
jl
cmpl
jo
sub
in
xor
sbb
cld
pop
mov
nop
lods
shl
xchg
or
test
jne
fwait
jle
imul
out
dec
fisubl
adc
xor
jnp
jns
push
rolb
ljmp
hlt
aam
or
andl
add
cmp
loop
leave
lea
sub
xor
cmp
mov
dec
sbb
ja
nopl
lds
daa
pop
lds
push
mov
sub
test
lods
pop
jmp
push
sub
and
outsb
jns
fxtract
cmp
out
mov
add
add
and
sub
push
pop
mov
enter
jns
xchg
ret
vmread
sahf
mov
cld
aaa
mov
lods
dec
cli
roll
push
mov
or
loope
flds
sub
xor
push
sub
incl
xchg
hlt
sub
or
cmp
inc
or
les
loope
insl
stos
mov
popf
add
mov
aas
push
jmp
sub
fucomp
xlat
dec
xchg
fildll
xchg
mov
sbb
lcall
insb
ja
call
rclb
or
xor
add
aaa
or
outsl
jecxz
mov
popa
outsl
into
je
xor
rolb
add
adc
cld
xor
and
mov
sbb
add
push
outsl
stos
pop
xor
or
les
add
mov
pusha
insb
mov
pop
movsb
lret
pop
stos
xor
fcoms
mov
xchg
sub
hlt
adc
sbb
fcoml
imul
sbb
ficomps
mov
pop
movsb
repnz
mov
imul
add
cli
les
xlat
mov
mov
addr16
xlat
xchg
aaa
call
cmp
insl
hlt
hlt
repnz
mov
or
inc
dec
pop
nop
fs
mov
loop
outsl
push
jb
sbb
pushf
fdiv
add
enter
push
orb
pop
aas
jle
and
sbb
xor
mov
aam
div
popa
mov
addr16
imul
xchg
hlt
fbld
movsl
iret
insb
lahf
ret
adc
mov
push
lret
out
cmp
mov
lahf
lret
dec
mov
add
popa
mov
jno
add
hlt
xor
lret
roll
mov
test
mov
mov
repnz
mov
or
adc
push
cmp
adc
xor
leave
fs
add
leave
mov
xor
cmp
movsl
xor
in
and
mov
cld
xor
adc
push
mov
aad
sub
pushf
jmp
inc
imul
pushw
loop
pusha
shll
cld
pop
or
mov
inc
aaa
addb
iret
fsubrl
lods
movsl
je
imul
sbb
adc
sub
nop
mov
int
das
icebp
xorb
dec
sub
loopne
xchg
push
cmp
mov
add
xor
in
push
movsb
mov
cmp
dec
adc
dec
stos
test
sbb
dec
sub
and
or
push
js
pop
adc
cmp
js
nop
xchg
dec
lods
dec
ficoms
mov
jecxz
es
mov
or
mov
sbb
pop
arpl
pop
sbb
sbb
loope
jg
add
aaa
sub
fsubl
sub
pushf
lods
dec
jg
push
out
pop
mov
sbb
add
add
fst
mov
sbb
in
and
cmpsb
ficomps
call
fbstp
cmp
cld
das
mov
test
cmpsl
cmp
in
stos
xchg
scas
cmp
test
or
add
add
data16
incb
adc
push
out
cmp
icebp
and
pop
or
aaa
enter
hlt
xchg
mov
mov
or
xor
cs
add
sbb
mov
cld
pop
jmp
jae
push
inc
mov
aaa
lds
xor
cmp
aaa
loopne
shll
fs
mov
mov
xchg
inc
push
add
jo
inc
cmp
int
sbb
fdivrs
ds
pushf
xchg
xchg
mov
das
fsubp
mov
aaa
fisttps
call
inc
sbb
mov
andl
adc
cmpl
mov
pop
call
push
scas
sbb
cli
cmp
shrb
icebp
test
loop
orb
test
xor
sbbb
cmpsl
shlb
cli
test
or
test
and
iret
ret
adc
rcr
inc
or
mulb
xlat
ficoms
mov
inc
fldt
aaa
jle
mov
pop
aas
and
push
or
lret
vcvtpd2ps
sbb
and
mov
and
in
inc
xchg
dec
sub
adc
pop
divl
add
rolb
call
mov
dec
pop
sub
jb
data16
cli
movsb
sbb
push
insb
clc
xchg
mov
sbb
cmp
adc
mov
and
test
sbb
adc
mov
dec
xor
mov
push
jo
adc
lock
inc
orb
and
hlt
call
inc
push
mov
sarl
mov
test
lret
lods
xor
rcr
cmp
sbb
xor
rep
push
pop
xor
xor
cmpsb
add
lods
ficompl
iret
sti
adc
test
dec
jo
enter
inc
jle
aad
das
or
cmp
testb
sub
das
fwait
fs
or
and
clc
sub
fs
loopne
aas
mov
cli
movsb
pop
loop
rcll
jle
insl
movsb
lcall
aad
je
mov
jl
sbb
pushl
xchg
dec
in
and
cmp
sbb
push
inc
inc
dec
inc
jo
cmp
mov
ss
out
sub
xorl
xor
call
and
xor
fsts
ret
clc
lret
mov
fldt
jecxz
jmp
rep
sti
adc
and
sub
xchg
sti
mov
fwait
adc
gs
addr16
jae
std
orb
pop
cli
in
in
add
in
xchg
or
sbb
insb
andb
mov
sbb
xchg
je
js
adc
cmp
xor
inc
sbb
adc
cmp
push
jg
loopne
mov
int
insb
xlat
ret
xchg
iret
pop
xchg
or
leavew
repz
xchg
xchg
push
idiv
stos
push
sbb
inc
subb
mov
lahf
in
pop
aam
push
or
mov
data16
jne
int3
out
push
jg
movsb
mov
mov
add
push
lea
clc
aam
and
fmull
sbb
cmp
inc
gs
mov
out
fs
sub
paddq
leave
cmp
aaa
out
fcoml
xchg
and
jne
in
cmp
cmpsb
inc
xor
inc
mov
push
and
call
std
jp
fcomps
inc
outsb
mov
add
rol
mov
shll
repz
mov
adc
daa
aad
push
xchg
or
mov
aam
pop
push
xchg
in
lret
sub
inc
cmp
ret
jle
or
adc
xor
ret
imul
mov
pop
lods
push
sub
mov
test
movsl
in
cs
add
pushf
sub
xor
loop
dec
std
stos
js
loope
jle
xchg
add
or
negb
mov
jecxz
ret
rcl
mov
lahf
xchg
mov
xor
adc
pop
repz
sahf
test
incl
xchg
xchg
lods
andb
fistpl
pop
cmp
div
ret
mov
dec
cmp
out
add
mov
cmp
push
push
lock
sarb
pop
cmc
and
xchg
xchg
sub
test
mov
cmpsl
pop
add
and
cmp
out
aaa
push
ds
sbb
leave
pusha
jae
sub
enter
fldcw
jne
insb
cmp
cmp
je
add
lock
xor
sbb
fidivrl
je
dec
and
add
mov
or
pop
inc
popa
push
out
ficompl
and
and
loop
add
clc
aaa
sbb
mov
pop
sbb
call
fdivrl
add
je
sbb
jns
dec
cmp
mov
xor
mov
push
push
fnsave
pop
push
sti
or
inc
mov
mov
sbb
fwait
ja
roll
push
sbb
rorb
sub
cmpsb
push
test
es
cmp
in
mov
lcall
notl
push
pop
xchg
mov
dec
inc
fwait
sub
mov
jns
daa
popa
dec
dec
insb
in
inc
dec
lcall
mov
cwtl
sbb
aad
sbb
movsb
out
dec
push
jb
or
adc
push
jbe
or
unpckhps
mov
fs
jg
mov
adc
sub
pusha
sbb
hlt
je
je
xchg
ret
mov
movsl
sub
dec
aad
bound
mov
mov
xor
sarb
pop
ret
pop
xor
adc
xor
stos
cmp
cld
mov
in
arpl
mov
andl
lds
xchg
dec
jno
call
data16
rcl
xchg
sbb
shll
push
out
adc
out
ss
pop
mov
mov
xchg
pushw
gs
push
popf
cwtl
shr
and
mov
sbb
or
insb
hlt
test
aas
jle
sbb
shrb
lods
inc
sbb
gs
push
sub
xchg
xchg
jg
outsb
mov
xor
test
mov
cli
mov
negb
xrelease
out
data16
xchg
aam
sbb
and
ljmp
pop
inc
pop
popf
push
pop
lcall
int
inc
dec
mov
xchg
aaa
ljmp
inc
jecxz
dec
mov
mov
dec
xor
lods
xor
fisubs
sbb
arpl
mov
mov
add
mov
std
aam
ds
lods
mov
xchg
adc
and
jno
repnz
xor
push
push
or
mov
repnz
inc
pop
xor
xchg
ljmp
push
xchg
or
test
outsb
push
jmp
call
and
cmpsl
inc
inc
inc
dec
repnz
jmp
or
or
je
mov
add
mov
ljmp
testb
in
movsl
enter
lods
mov
mov
mov
and
inc
pop
jg
pop
or
adc
jae
mov
clc
dec
mov
cmp
xor
adc
icebp
jle
xchg
mov
movsb
push
faddl
cmpsb
mov
adc
dec
mov
rolb
ret
fidivrl
mov
movsl
cmpsb
dec
aam
push
mov
fsubrl
sub
mov
sbb
gs
aas
add
enter
inc
aam
ret
lock
mov
mov
cmc
add
mov
push
sbb
mov
jg
xchg
inc
and
add
out
jl
mov
mov
fsubs
sub
cltd
ficoms
or
adc
js
xor
sub
sbb
cmc
bound
sbb
jmp
inc
mov
fisttpll
clc
shlb
cmp
fstl
add
or
insb
xchg
scas
in
jp
inc
cmp
add
ljmp
pushf
hlt
test
sbb
adcb
mov
pop
jns
xchg
and
movsl
or
pop
push
shll
js
mov
shr
sub
iret
pop
data16
xchg
ficompl
leave
cmpsb
pop
or
pop
sar
xchg
out
add
fldl
xchg
cmp
push
je
stos
jl
aaa
sub
test
fdivl
xchg
repz
add
push
pop
inc
jecxz
shlb
fnstsw
dec
sbb
jl
lods
les
lock
sub
push
and
add
sub
xchg
xchg
stos
icebp
insb
mov
pushf
mov
mov
pop
mov
sub
jnp
inc
shll
push
cmpsb
cmpsl
jl
mov
fistpll
out
cli
sub
insb
xor
loop
mov
xor
cld
add
xor
mov
mul
je
idivb
cmp
and
push
aaa
pop
jecxz
mov
push
lods
mul
je
test
push
xor
and
icebp
sarb
das
imul
je
cld
adc
imulb
xor
mov
push
sub
sarb
daa
mulb
xor
mov
and
mov
jo
stos
xor
mov
pop
divb
cmp
pop
or
or
push
clc
idivb
sbb
sub
mov
sub
aam
sub
xchg
mov
sub
mov
pop
movsl
inc
adc
pusha
sbb
cmp
pop
sbb
or
int
mov
sub
addr16
mov
pop
sub
sbb
sbb
sbb
xchg
pop
or
adc
xchg
lret
adc
push
sbb
push
dec
sbb
adc
jae
stos
cmpsl
aad
dec
dec
sub
test
mov
xor
mov
add
imul
dec
add
sbb
or
push
xlat
js
push
add
mov
inc
mov
in
cmpsb
cmp
xchg
mov
lcall
imul
mov
pop
mov
clc
jecxz
mov
mov
cmp
cmpsb
jmp
stos
aas
les
and
shrd
icebp
mov
and
call
add
sbb
ss
sbb
icebp
ret
subb
mov
push
sbb
fisttpll
mov
sub
add
stos
aaa
push
lret
scas
pop
and
enter
sbb
gs
cmp
adc
out
fbld
out
aam
push
fs
pop
fs
mov
ror
in
xchg
repnz
xchg
in
pop
add
sbb
or
stc
jle
mov
jp
pop
cli
mov
and
add
dec
fbld
sub
ret
test
sbb
mov
mov
out
sbb
in
ficomps
rorb
and
mov
push
adc
lcall
jo
mov
test
aaa
sub
jno
mov
fiaddl
fldcw
sbb
mov
test
in
fs
das
lcall
int
cmp
pop
test
or
nop
jmp
add
inc
push
dec
outsl
pop
mov
jnp
aas
pop
mov
shlb
push
mov
or
test
cmpsl
cmpsl
mov
je
push
inc
mov
nop
jge
sub
mov
stos
cmp
and
cs
cltd
js
jl
jne
repnz
movsb
mov
push
fs
push
insl
bound
lahf
sub
sti
cwtl
mov
cli
lods
mov
icebp
cmp
jb
mov
fstps
inc
nop
je
adc
movsb
repnz
sbb
repnz
xchg
mov
pop
xchg
sbb
mov
add
mov
loop
out
les
cld
push
aaa
mov
aam
sub
les
or
jle
fwait
stos
xchg
or
clc
add
fsubp
aaa
xchg
aad
sub
or
mov
out
mov
and
or
pop
or
inc
xor
aam
sub
push
repz
les
adcb
aaa
frstor
cld
jnp
add
mov
sub
js
sbbb
aas
subl
fsubrp
notb
clc
push
cwtl
mov
sahf
adc
loopne
and
fistpl
dec
pop
lds
pop
jmp
and
loope
and
mov
cmpb
fwait
and
movsb
jle
mov
mov
mov
fistpll
mov
icebp
pop
xchg
imul
cmp
test
sub
lods
stos
jnp
xor
mov
sbb
inc
mov
mov
loop
xchg
out
pop
and
and
mov
stos
cli
ret
out
lret
sbb
fucom
push
mov
pop
cmp
lock
adc
das
cs
daa
ja
sbb
cmp
add
add
push
cmp
lcall
pop
aas
int3
push
out
pushf
ficoml
test
xchg
aas
add
cmpsl
push
add
mov
cmp
pop
cli
jp
enter
js
mov
xor
js
cs
mov
cmp
and
jmp
fucomip
loope
daa
cmp
sub
cmp
repnz
fdivrs
test
int3
mov
repnz
dec
xchg
fwait
pop
xchg
test
out
add
test
fidivl
ja
sbb
mov
mov
push
mov
sub
pop
lcall
lahf
xchg
in
mov
push
push
out
popf
je
aam
jmp
or
sbb
sub
sbb
cmp
push
add
adc
or
cli
pop
sbb
je
lret
out
mov
fisubrl
test
adc
dec
sub
clc
bnd
fcoms
mov
sbb
mov
cmpsb
sbb
pushf
add
loop
xor
divl
add
mov
add
dec
sbb
push
mov
mov
sub
cli
inc
sbb
imull
or
pop
sub
movsb
ss
inc
mov
sbb
sbb
je
ds
jge
in
cmp
mov
cmp
push
sub
test
sub
cmpsl
js
lods
push
cmp
sub
xchg
cli
ljmp
xor
xchg
xor
dec
cmp
sbb
cmpsl
push
push
push
mov
daa
xor
xchg
enter
test
adc
lea
lret
loop
push
sbbb
mov
fsub
push
insl
loop
test
fadd
das
xchg
inc
mov
push
aas
je
pop
jno
or
sub
mov
add
lcall
push
or
je
test
adc
mov
rolb
cld
pop
fwait
stc
in
cmp
xlat
and
daa
mov
mov
fsubl
cld
add
fbstp
dec
add
or
pushf
daa
sub
pop
pushf
iret
sbbb
stc
jae
push
cmp
sbb
pop
mov
push
aas
test
pop
das
mov
sub
lods
fmul
mov
faddl
cmp
sbb
stos
jae
sub
adcb
loope
int3
jb
sub
inc
adc
arpl
out
sub
dec
pop
test
out
push
int3
adc
jae,pt
xor
and
add
out
out
orb
xor
out
mov
mov
mov
pop
cmpsb
push
and
jne
subl
and
ljmp
mov
out
inc
orb
ljmp
push
inc
arpl
mov
sub
inc
sbb
divb
scas
adcl
cmp
sub
lods
sbb
cld
pop
mov
int3
mov
mov
dec
xorl
shrb
sub
fsubl
mov
lea
and
dec
sub
pop
mov
stos
sbb
push
loope
daa
pop
sub
daa
dec
and
lock
jno
fcoms
and
sbb
movb
mov
ljmp
out
js
stos
outsb
out
push
xlat
int3
mov
push
scas
cmp
in
hlt
mov
in
jp
xor
push
mov
cmc
pop
movsb
ror
js
sahf
push
stos
pop
stos
sub
dec
inc
mov
lds
sbbl
hlt
mov
mov
jmp
mov
jae
in
int3
aam
push
out
xchg
dec
add
dec
shlb
jns
and
daa
test
dec
movsl
and
xor
mov
stos
faddl
push
cli
dec
test
fsubs
jl
std
dec
sbb
repnz
mov
xor
or
push
xor
les
or
lock
xchg
idivb
sbb
sahf
sahf
out
cmp
and
add
hlt
adc
add
in
out
and
nop
mov
cmpsb
popa
inc
subl
pop
ss
mov
xor
lock
out
mov
daa
mov
call
out
test
push
xor
or
dec
jecxz
xor
scas
cmp
xor
dec
or
and
jb
mov
mov
scas
dec
loopne
jmp
sub
out
lret
int3
jae
dec
or
sub
dec
les
les
out
pop
fnsave
pusha
mov
andb
inc
mov
dec
imul
sub
cmp
loop
pop
daa
pop
sub
cli
icebp
out
std
inc
push
xchg
or
js
mov
pop
fidivl
push
fstpt
rclb
mov
add
add
xchg
xchg
mov
dec
int
or
xor
and
jl
mov
mov
hlt
mov
inc
mov
mov
enter
dec
dec
pushf
push
jbe
outsl
arpl
je
test
sbb
jl
inc
loope
xor
sbb
fisubrl
test
and
push
popf
jmp
int
mov
fildl
jnp
cmp
cmp
imul
cmc
lods
sub
sbb
jmp
and
fwait
sbb
cltd
lret
sub
dec
in
push
je
cltd
add
mov
xlat
ds
sahf
adc
cmp
and
aaa
rorl
faddl
pop
dec
out
adc
cmp
imulb
lds
pop
cmp
das
int3
jae
and
mov
add
mov
sub
out
push
sub
jmp
notb
lcall
xor
jnp
test
notb
xor
mov
inc
push
xchg
sbb
xor
xor
or
in
sbb
gs
cmp
mov
mov
scas
push
mov
pushf
sub
push
jge
insb
dec
jno
push
lods
jns
xor
inc
in
push
fisttpl
pusha
xor
gs
push
cs
jmp
and
lock
addr16
push
adc
mov
sub
frstor
adc
loop
add
mov
cmc
push
lock
pop
pop
movsb
in
cmp
out
stc
fcmove
sahf
out
adc
lahf
and
insb
aas
sbb
loop
cltd
scas
loop
ljmp
jo
sub
mov
aaa
ror
mov
or
push
push
mov
xchg
aam
mov
jl
adc
pushf
je
xchg
rcl
je
pop
imul
int3
gs
sbb
das
mov
xor
out
add
and
and
cmpb
jo
fiadds
ficoms
pop
xchg
xor
js
cmpb
out
lods
mov
cmp
and
js
sub
das
imul
fadds
scas
scas
cli
sbb
add
push
mov
add
loop
pop
mov
cli
and
add
icebp
cmp
inc
add
fcompl
jae
sub
jae
pop
mov
clc
sub
fidivl
sub
aaa
xor
pop
inc
pop
mov
jae
add
mov
or
in
mov
adc
jmp
fidivs
popa
mov
cld
push
aam
add
jne
data16
mov
pop
in
out
push
pop
fadds
add
cwtl
pmaddwd
cmp
push
inc
lods
insb
aam
pcmpgtb
add
enter
movsb
sahf
ljmp
and
sbb
adc
faddl
push
std
adc
roll
lret
inc
pop
pop
mov
cmp
sbb
in
sbb
lock
xchg
dec
push
fwait
mov
and
push
call
pop
xor
push
test
sbb
fdiv
and
int3
sbb
adc
and
xchg
sub
mov
push
movsb
mov
push
inc
cmp
mov
adc
inc
mov
adc
xor
fs
jl
sbb
inc
jl
es
and
jb
rcrl
popl
lcall
in
aaa
xor
mov
cli
xorb
pop
pop
xchg
std
adc
stos
sbb
push
imul
push
mov
rolb
inc
sbb
fsubr
push
sbb
stos
repnz
clc
arpl
test
or
adc
adc
and
or
cmp
push
xchg
loopne
mov
mov
xchg
popf
icebp
lcall
lds
add
sub
scas
mov
add
inc
das
mov
adc
inc
arpl
aas
stc
fimull
data16
out
push
add
stos
lods
xor
xor
inc
mov
scas
stos
fwait
stos
ja
pop
fsub
add
mov
lcall
fwait
xor
enter
adc
push
lods
je
subb
or
loopne
xorl
cmp
in
adc
jle
or
mov
fisttps
sbb
sub
repnz
add
add
mov
out
jp
dec
lcall
inc
pop
push
insl
pop
movsl
sti
adc
in
test
jo
mov
jnp
or
int3
shl
lret
mov
rclb
int3
jns
fwait
pop
adc
pop
xchg
mov
sub
out
or
jns
xor
xor
dec
push
das
cmp
inc
repnz
inc
in
hlt
sbb
ds
hlt
xor
aas
inc
jecxz
shrl
mov
lock
cwtl
pushf
test
rolb
ss
inc
pop
std
test
aam
lock
and
sub
int3
loopne
aas
cmp
scas
jb
xchg
mov
mov
movsl
adc
insl
bound
lods
aad
enter
in
int
jge
push
data16
push
aaa
fstl
xor
loop
lret
push
fiaddl
fwait
insl
pop
movsb
sbb
and
pop
bound
push
and
repnz
inc
jb
test
shlb
dec
hlt
movsb
das
xchg
pop
add
add
cmp
xor
movsb
and
pop
aas
sbb
adc
dec
sub
xchg
inc
xchg
icebp
or
out
and
ret
mov
adc
lods
cmp
push
ror
shll
fldt
sub
add
sbb
js
xchg
sar
and
lret
mov
jnp
aad
jae
mov
sub
adc
clc
inc
sbb
aas
test
jmp
shlb
xchg
inc
inc
test
repz
push
xchg
movsb
js
hlt
ficoml
lock
or
loope,pn
adc
nop
loop
xchg
mov
cmp
jecxz
jl
clc
lods
pop
cmp
xchg
fimuls
pushf
loop
cmp
push
push
hlt
xchg
xlat
cmpl
sbb
fwait
je
sub
lods
sti
sbb
inc
dec
lods
mov
aas
lahf
movsb
mov
aam
test
mov
dec
sub
xor
cmp
jle
mov
push
xor
rcr
cmc
sbb
pop
xor
sub
les
int3
stos
push
xchg
pop
clc
adc
mov
add
sbb
or
mov
mov
les
outsl
fcoms
mov
nop
push
add
out
cld
cmp
pusha
xor
push
divl
cmp
hlt
mov
repnz
jns
iret
xchg
cld
test
repz
pop
es
xor
or
adc
mov
pushf
enter
pop
out
orl
je
imul
and
jbe
xor
test
mov
or
ret
clc
insb
mov
mov
fists
jmp
add
push
shll
pusha
mov
cmp
insl
leave
or
sbb
mov
es
pop
sub
movsl
loop
cmp
ret
pop
sbb
pop
mov
push
fstl
mov
ja
mov
stc
inc
add
sub
fcoml
xchg
gs
or
iret
imul
sahf
xchg
sbb
clc
cmp
adc
movsb
dec
xor
mov
sbb
mov
push
cmpsb
std
sbb
jge
dec
rolb
scas
sbb
jns
fwait
cmp
add
test
inc
sub
cmpsl
push
inc
jl
add
jle
pop
push
cld
movsl
xchg
add
cli
lods
jmp
cltd
in
xchg
jle
mov
xor
xlat
lods
xchg
jae
jo
add
cmp
repnz
jmp
cltd
stos
test
movsb
cli
insb
sbb
push
xor
mov
test
mov
js
jl
pop
dec
aam
push
adc
cs
les
dec
pop
or
adc
xor
nopl
push
adc
lret
adc
repnz
movsb
and
sub
cwtl
test
sub
bound
fldcw
sub
daa
jmp
std
fsubrp
push
icebp
lcall
cmp
pusha
adc
fmull
cld
dec
mov
daa
lret
loope
sub
sbb
dec
jmp
or
add
and
popa
js
pop
inc
aas
mov
mov
mov
arpl
xor
mov
js
cwtl
stos
mov
cmp
sti
repz
mov
add
rcll
cmp
dec
test
adc
fsubr
sbb
iret
addr16
push
insb
push
imul
sbb
inc
pop
mov
test
xchg
pop
je
aas
test
lods
adc
sbb
aas
jae
mov
data16
mov
push
aaa
loop
rorl
ficoms
cmc
popa
mov
sbb
sbb
cmp
lods
mov
imul
xor
stos
dec
int3
mov
sub
lret
xchg
adc
jae
cmp
xor
sbb
xchg
hlt
enter
int3
jmp
dec
or
cld
or
mov
ret
add
out
inc
les
add
mov
sub
xchg
icebp
mov
sub
shll
pop
and
addr16
imul
add
mov
idivb
pop
xlat
add
dec
mov
push
inc
rcr
fdivr
in
cmp
enter
andb
lock
subl
sbb
stos
sub
stos
mov
or
jl
dec
sub
sbb
xchg
lods
repz
fisubs
repnz
lods
sub
inc
adc
xor
pop
and
fildl
push
push
shl
in
shlb
shrl
sbb
icebp
outsl
gs
cmc
mov
dec
or
mov
inc
mov
ds
sub
aam
hlt
hlt
adc
lock
mov
mov
sbb
je
sub
movsb
int3
add
cmpsl
jle
shll
test
jecxz
icebp
enter
out
movsb
push
adc
aas
outsb
loop
repz
adc
lret
mov
shlb
mov
xor
out
nopl
mov
push
cmp
ret
xchg
cwtl
les
xor
fsubs
pop
push
pop
sahf
push
jne
test
movsl
pop
adc
mov
sub
pop
sbb
loope
aas
leave
push
adc
cltd
inc
pop
loopne
jmp
push
xchg
outsl
jmp
jmp
cmp
movsl
inc
or
dec
aas
leave
fistl
aaa
jecxz
inc
pop
pop
out
fcomip
cmpl
mov
mov
sub
sub
mov
iret
adc
cltd
and
jg
stos
aas
or
fidivrl
adc
xor
movsb
add
test
xchg
xor
pop
clc
inc
pushf
outsb
pop
sbb
push
cmp
inc
xchg
enter
lock
aaa
aam
mov
xor
pop
insb
mov
pop
cmpsb
adc
xor
pushf
add
aas
mov
mov
lods
and
push
or
mov
add
jp
adc
inc
lcall
cmp
and
cmp
cmp
shlb
and
xor
mov
ljmp
inc
ffree
repnz
pop
and
pop
insb
add
cmpsb
loop
insl
and
pusha
cmp
popf
imul
sub
jp
aad
inc
sbb
fs
jnp
call
xlat
stos
adc
push
mov
push
sti
or
sbb
pop
stos
xchg
adc
in
aaa
pop
movsl
push
insb
mov
sub
jl
cwtl
shr
arpl
adc
imull
jp
arpl
rol
fs
cmp
sub
repnz
arpl
add
jnp
cmpsl
pop
mov
inc
loopne
mov
out
mov
rorl
inc
mov
adc
loop
test
xchg
inc
hlt
push
dec
sub
daa
push
mov
lret
mov
out
sbb
js
mov
scas
inc
js
fs
dec
mov
mov
pushf
add
in
pusha
cwtl
cmpsl
jae
pop
aas
jbe
scas
mov
out
add
popa
aad
sbb
inc
clc
fcoml
xlat
mov
and
push
and
in
js
xor
push
je
sub
add
xchg
leave
pop
xor
aaa
es
imul
aaa
setns
sbb
push
jbe
scas
hlt
divb
fisubs
push
lds
sbb
rcl
inc
cli
fdivl
pop
je
int3
out
enter
sbb
lcall
loop
ficomps
js
adc
hlt
mov
xchg
gs
aaa
std
ficoml
gs
aam
gs
jg
xor
fildll
les
pop
and
bound
pop
sbb
adcl
subl
outsb
in
call
sti
mov
xor
pop
sti
cmp
insb
xor
sub
sbb
push
sbb
lahf
cmpsb
les
adc
stc
in
fwait
popf
inc
pop
add
mov
movsb
push
adcb
lret
sar
push
xchg
rclw
or
sarb
mov
fcomp
aam
repz
or
add
dec
in
sub
xor
shrl
xor
or
pop
adc
adc
lret
pop
testl
mov
xchg
sbb
pop
add
aam
idivb
loope
sbb
inc
roll
xchg
js
push
imul
mov
out
cli
shl
fsubrl
cmpb
cmp
adc
push
mov
sbb
pop
mov
sbb
and
jl
test
jne
mov
sbbl
sahf
divb
and
jo
out
out
cmp
push
dec
sbb
push
imulb
lret
scas
cmp
inc
sub
cmp
je
leave
cmp
cmp
pushf
cmp
in
inc
xor
aaa
divl
shrd
pop
aaa
add
mov
pop
pop
sub
dec
aaa
sbb
pop
sub
xor
or
sbb
rorl
sub
inc
sub
xor
fs
leave
pop
jg
add
cwtl
clc
in
fs
pop
add
jnp
mov
rcrl
xchg
aas
and
mov
adc
sbb
pop
cwtl
pushf
mov
sahf
push
or
daa
pop
mov
cwtl
mov
dec
add
call
jnp
dec
jo
inc
mov
add
push
pop
jecxz
or
rorl
cld
repnz
jmp
ds
push
mov
cmpl
out
add
mov
cmpsb
repnz
pop
push
push
les
and
es
and
fdiv
sbb
xchg
mov
adc
jo
add
mul
and
daa
imulb
mov
adc
aam
mov
stos
cwtl
dec
sahf
mov
testb
lcall
outsl
push
sbb
xchg
inc
and
mov
in
cmp
push
and
aas
insb
movsl
cmpsb
adc
sub
jp
xlat
xor
cld
in
mov
out
idivb
mov
aas
pop
dec
lcall
xchg
cmp
testb
mov
ret
loop
arpl
js
adc
cmpsl
lods
dec
cld
jl
xor
sub
xor
daa
lea
push
cmp
pusha
ret
dec
outsl
cli
imul
hlt
mov
je
add
xchg
push
mov
stc
mov
test
sub
push
push
cs
out
ja
dec
mov
aas
ja
xor
or
unpckhps
mov
adc
push
dec
stos
aas
mov
repnz
stos
repz
jl
xor
sub
ret
lock
and
lods
pop
ret
xlat
adc
xor
fcmovbe
xor
fdiv
pop
sub
lods
mov
pop
xor
test
mov
dec
and
cwtl
jns
fwait
out
pop
movsb
lds
dec
aas
and
mov
cmp
or
xchg
add
imul
sti
adc
in
xor
xlat
mov
jnp
pop
and
dec
arpl
vsubpd
sub
push
popa
pavgb
adc
adc
mov
loop
xor
lods
pop
adc
mov
stc
mov
stc
cmc
adc
data16
clc
mov
iret
rcrb
mov
adc
scas
aam
inc
sbb
xlat
jns
mov
cli
mov
mov
fwait
push
je
cmp
mov
push
dec
sbb
fnsave
loope
das
sub
pop
gs
jp
mov
sub
cmp
fisubl
enter
data16
sub
jmp
insl
xchg
lret
mov
in
sbb
out
loope
sbb
and
sub
sbb
and
les
mov
dec
std
fdiv
les
dec
dec
ficoml
fs
push
mov
add
xlat
cld
xchg
outsb
pusha
fisubl
in
jmp
jb,pt
add
aam
loop
pop
inc
jno
adc
test
sub
or
out
daa
loope
sbb
push
iret
lods
adc
clc
cmp
dec
inc
xchg
hlt
inc
hlt
andb
lods
push
cmp
iret
cwtl
adc
and
std
ljmp
jge
and
out
imulb
push
lea
data16
mov
scas
or
dec
sbb
pop
lock
adc
dec
mov
sbb
pop
jb
lcall
lods
or
mov
testb
cmp
cmp
hlt
mov
mov
int3
sub
mov
or
enter
hlt
or
cmp
xchg
mov
mov
xor
xor
bound
iret
jnp
mov
sbb
cmp
stos
cld
cld
mov
imulb
and
filds
mov
mov
hlt
negb
lods
sbb
popf
aas
xchg
adc
and
mov
cld
nop
jl
mov
out
push
std
inc
scas
cmc
push
pop
cmp
jnp
fs
sbb
hlt
sbb
inc
or
sbb
dec
pop
stos
cmp
stos
mov
sbb
or
iret
mov
jecxz
insb
pop
out
cld
rorl
xchg
pop
js
jge
arpl
movsb
mov
mov
push
or
mov
jecxz
push
jmp
xor
sub
clc
dec
xchg
sbb
cli
out
and
sub
ja
sub
or
fs
mov
push
inc
je
mov
inc
shlb
mov
stos
lods
lret
sbb
clc
or
sub
sub
hlt
lods
lods
int3
sbb
clc
or
es
in
cmp
push
mov
arpl
inc
orl
addr16
inc
movsl
insb
lds
xor
out
ss
pop
xor
mov
sahf
sbb
sbb
aaa
add
lret
scas
icebp
aas
pushf
movsb
loop
mov
push
cmp
xor
shlb
jle
sbb
imul
add
add
xor
and
dec
daa
jb
sub
pop
inc
pop
cmp
or
lret
aam
fistps
xor
ret
dec
sub
outsl
fcomi
mov
test
cmpsb
push
dec
andb
out
adc
test
ret
mov
arpl
adc
ret
push
adc
dec
jns
arpl
shr
out
scas
gs
test
jp
enter
or
imul
add
mov
pushf
inc
lods
test
or
fs
loop
mov
add
scas
add
adc
sub
mov
lock
pop
cmp
lcall
imul
leave
cmp
xor
push
sub
sub
mov
jns
lea
sbb
nop
push
mov
mov
sbbb
cmp
mov
sub
xchg
cmc
int3
xchg
mov
add
mov
leave
jo
cmp
movsb
add
mov
push
sbb
or
mov
push
cmp
sbb
stos
add
and
mov
xchg
mov
push
inc
sub
pop
test
cld
cli
sub
sbb
sbb
xor
lock
mov
cmp
xor
mov
je
jno
mov
mov
pop
test
popf
pusha
push
fs
mov
sbb
repnz
xlat
repnz
push
xor
mov
das
mov
add
mov
jp
xchg
pusha
faddp
xchg
ficoms
aad
insb
rol
xchg
sbb
or
pop
add
addr16
das
xor
sub
sbb
mov
sub
adc
pop
stos
adc
cltd
movq
xchg
lock
out
je
shll
jecxz
lea
push
aam
lds
in
fs
adc
fwait
cmpb
in
mov
mov
aas
loop
int3
mov
add
dec
dec
sbb
int
repz
insl
loopne
push
mov
jp
fnstsw
ljmp
adc
test
les
into
int3
fnstsw
mov
mov
enter
or
cmp
out
mov
cmp
movsb
xor
addl
ds
and
mov
fstps
in
loop
sub
inc
pop
push
push
loop
or
inc
jp
push
or
dec
push
fdivr
xchg
jmp
je
jbe
add
mov
clc
in
jp
je
dec
call
outsl
cmp
mov
clc
insb
cmp
addr16
sbb
leave
xor
cmp
dec
ds
repnz
inc
scas
iret
cld
adc
xor
sti
out
fisttpl
cmp
call
push
into
mov
xchg
ja
rcll
dec
and
imul
adc
xchg
sti
add
fdivl
bound
loop
ficoml
push
pop
imul
syscall
scas
cmp
xor
loop
add
xchg
stc
pop
mov
fwait
std
adc
in
pop
in
lods
xchg
add
rolb
jo
outsb
je
es
gs
out
pushf
dec
outsb
inc
imul
xchg
fdivs
adc
dec
cmp
int
pop
pusha
addl
stos
mov
ljmp
mov
and
mov
mov
sub
lds
iret
jmp
cmp
or
push
fadds
inc
mov
clc
sub
jmp
mov
mov
fsubl
dec
fisttpl
shrb
cmc
lea
ret
daa
cmp
sbb
daa
sbb
clc
nop
sub
cmp
cmp
jl
fsubrl
lret
jnp
das
jbe
fcompl
push
fidivrl
inc
aas
loopne
lods
mov
out
sbb
jecxz
xchg
pop
mov
repnz
jge
or
aaa
jmp
mov
add
pop
cmp
jg
xchg
loope
lret
sbb
mov
mov
dec
sub
sub
push
jb
sbb
movsl
or
iret
sub
push
xor
xor
out
sub
jnp
adc
cli
mov
scas
xor
inc
ljmp
scas
hlt
mov
scas
scas
mov
outsl
cld
dec
icebp
out
mov
out
xor
js
push
test
sbb
adc
mov
pop
imul
add
shr
sbb
pop
rolb
repnz
mov
into
into
movsb
arpl
xchg
mov
push
aaa
fucomip
add
test
fiadds
mov
jb
inc
or
addr16
mov
xor
movq
aas
aam
test
call
mov
in
nop
xor
sbb
inc
xchg
dec
lds
mov
bound
enter
in
or
xor
push
sbb
jae
mov
aaa
or
mov
push
aas
mov
ja
aaa
shlb
adc
enter
inc
in
cmp
aas
test
sub
mov
mov
xor
and
pop
xchg
in
push
mov
outsl
xchg
mov
pop
stos
lods
stos
adc
movsb
in
aas
push
cmp
lcall
lods
xor
xchg
xlat
sahf
mov
dec
jb
jbe
xor
sub
cmc
mov
mov
ret
das
add
ret
scas
pop
push
ljmp
mov
pusha
xor
mov
xor
ljmp
inc
test
lods
lock
pop
and
add
push
mov
push
fimuls
mov
movsb
incl
xchg
fwait
sbb
xchg
scas
lods
in
pop
dec
gs
les
lcall
rcll
rolb
jecxz
jae
imul
sbb
sbb
pop
das
ret
mov
inc
pop
mov
add
stos
ror
scas
jb
adc
cs
es
clc
pop
clc
iret
jmp
fwait
fs
cltd
imull
dec
daa
outsb
dec
add
or
movsb
shrl
inc
push
xchg
xchg
outsb
mov
enter
or
pop
sub
xchg
mov
mov
mov
imul
stos
inc
add
push
fsubrp
xchg
dec
mov
clc
sub
mov
mov
rcrl
stos
pop
lret
dec
push
sarl
sub
dec
mov
sbb
sbb
movsl
bound
pop
or
xor
lret
inc
popf
mov
movsb
inc
adc
push
shll
clc
xor
sub
ret
mov
inc
jge
mov
cs
shld
clc
hlt
pop
add
rcl
inc
fimull
cmp
cwtl
sub
nop
clc
lods
aas
cmp
pop
nop
js
jecxz
pop
jp
sarb
lds
jo
xor
hlt
cltd
mov
adc
mov
cld
popf
dec
test
sbb
popf
push
lret
fistpll
cwtl
inc
in
mov
adc
sub
aaa
lods
test
xchg
insb
insl
and
rolb
leave
push
sbb
shrb
dec
push
sub
or
adc
cli
lret
repz
inc
jb
cmp
int3
mov
movsb
sbb
push
mov
lock
mov
idivl
movsb
and
xchg
shll
adc
inc
fdivrl
and
cmpsb
push
int3
outsl
iret
dec
mov
add
imul
pop
aas
dec
inc
int3
gs
fwait
lods
xor
repnz
aas
int3
nop
loope
sub
je
mov
xor
lcall
and
loope
pusha
lahf
and
push
je
or
fs
mov
cli
and
sti
adc
sbb
mov
mov
mov
jnp
scas
jno
mov
int
or
aam
mov
clc
pusha
imul
adc
icebp
les
push
test
cwtl
adc
mov
jo
add
test
dec
inc
add
inc
in
sub
sub
mov
dec
hlt
enter
pop
loop
push
push
hlt
in
sub
adc
mov
pushf
sub
movsb
je
xchg
in
jmp
in
shll
cmpsb
pop
loopne
add
je
sub
push
push
int3
push
xor
sbb
or
lret
mov
aaa
stc
clc
xor
dec
add
or
pop
adc
pop
xor
xadd
xchg
add
in
cmp
dec
cmp
sbb
mov
or
mov
sbb
push
shrl
pop
pop
add
loope
out
push
cld
push
ljmp
xor
adc
lods
sbb
jbe
and
cld
dec
fs
sub
das
std
ljmp
fdivs
pop
jl
inc
push
xchg
fadd
sbb
mov
shl
popa
or
xor
inc
pop
jns
push
in
push
sub
insb
rclb
dec
test
fbld
lea
xchg
not
xchg
or
out
jp
mov
clc
mov
hlt
inc
sub
cwtl
push
xchg
es
mov
scas
lods
dec
sbb
xchg
xor
in
sbb
adcl
arpl
clc
mov
xor
lods
aas
je
in
add
jmp
cwtl
lret
add
xchg
xor
mov
and
sbb
shlb
inc
lods
sub
out
enter
adc
push
insb
les
cmp
mov
sub
movsb
jne
lods
pop
xor
mov
mov
fcmovbe
movsb
add
mov
inc
or
xchg
push
or
imul
mov
or
repnz
dec
or
sarb
cmp
pop
add
out
cmp
ror
sbb
in
test
fldcw
adc
movaps
mov
adc
repnz
pushf
push
xor
pavgb
push
mov
loope
or
add
hlt
clc
mov
adc
test
pop
cli
idivb
aas
iret
stc
icebp
inc
sbb
mov
jae
jmp
stos
fs
add
sub
loop
xlat
push
sub
add
dec
cmp
sbb
adc
and
inc
test
leave
mov
jp
aas
sub
inc
cmpsb
nop
and
cmp
push
add
dec
stos
sbb
test
mov
pop
mov
push
mov
pop
movsb
adc
adc
cmp
sub
subl
pop
inc
popf
cs
lods
adc
dec
cs
push
dec
mov
xor
dec
leave
sub
pop
cli
inc
cmc
out
cmp
xor
call
sbb
mov
push
inc
jecxz
pop
push
addr16
shll
cmp
daa
dec
out
jl
and
pop
and
xor
idiv
scas
or
dec
sbb
sahf
sbb
repz
cmpsl
mov
push
fsts
adc
mov
mov
pop
adc
sbb
hlt
mov
pushf
subb
insl
cmp
jge
push
dec
cmpsb
inc
or
xor
movsb
dec
int
cmp
inc
cmp
fs
dec
insb
in
neg
stc
dec
cltd
int3
or
hlt
lret
fcompl
shrl
je
push
sbb
sbb
mov
inc
mov
jb
nop
cmp
mov
pop
sbb
stos
jl
pushf
stos
mov
sahf
sarl
cld
sub
xor
pop
inc
mov
fwait
mov
adc
mov
mov
fwait
mov
iret
adc
insb
mov
icebp
bound
or
mov
std
jbe
mov
mov
xor
xchg
mov
xor
inc
and
stos
fwait
lret
out
test
xchg
rcrb
lods
rcrl
inc
addr16
jnp
or
loop
out
jge
mov
jle
pop
jns
sbb
fisubl
inc
adc
fsubp
adc
pushw
dec
push
insl
push
je
adc
lods
sbb
and
xor
cltd
je
pop
push
lods
divb
dec
or
jnp
xchg
cmp
divb
mov
cmp
out
daa
faddl
cs
sbb
daa
insb
push
xchg
xchg
cltd
je
xor
cmp
repnz
std
mov
mov
and
fstl
out
or
sub
test
xchg
sub
sub
out
dec
das
popf
lret
cmp
shlb
mov
jmp
fstpt
pusha
ret
out
cmp
or
mov
fwait
test
ss
cld
mov
mov
fdiv
inc
pop
add
jge
inc
jl
sub
es
or
sub
test
aas
loop
ljmp
add
sbb
int
xor
sub
mov
in
daa
xor
sub
das
sub
mov
popa
and
xor
pop
sub
mov
mov
sahf
or
mov
add
sub
cltd
xchg
xor
xor
rolb
test
inc
aas
bound
data16
pop
mov
xor
xor
dec
or
lret
jae
push
mov
shrl
sub
xor
xor
adc
pop
stos
and
les
push
pusha
push
pop
sbb
xor
inc
je
shrb
mov
sti
lahf
pop
dec
sbb
jnp
inc
adc
int
add
pop
sbb
repnz
fucom
add
mov
add
les
jns
mov
test
divl
and
add
mov
pop
sti
mov
sbb
mov
dec
sub
jl
fistpl
pushf
stos
mov
mov
testb
add
xor
dec
fwait
int3
or
pop
sub
push
test
bound
xor
jnp
shll
int
xor
and
int3
mov
outsb
xchg
loop
jo
and
pop
push
inc
imul
andl
repnz
fmuls
pop
fs
nop
shlb
adc
fstpl
mov
leave
cmpsw
mov
je
sub
sbb
xchg
loope
mov
sub
xchg
stos
scas
adc
cmp
jl
xor
test
xor
pop
test
sbb
add
inc
mull
outsb
inc
sub
push
jae
aad
jne
clc
sub
mov
sbb
cmp
pop
hlt
jl
pushf
sbb
ficoms
pop
or
mov
cmpsb
sub
imul
pop
mov
lds
lods
sbb
scas
xor
mov
rol
movsl
mov
test
inc
out
mov
mov
add
jmp
stos
xorb
pop
xor
das
jle
add
inc
out
xor
sub
in
mulb
pop
addr16
jg
mov
repnz
xchg
call
sbb
and
daa
push
pop
mov
fs
sbb
daa
sbb
hlt
pop
and
push
int
add
push
jecxz
add
test
loopne
cld
pop
jle
aas
pop
push
mov
pop
fwait
stos
pop
sub
rcl
xor
shlb
sub
ljmp
pop
adc
hlt
notb
insl
or
push
adc
ja
and
icebp
lsl
and
adc
or
mov
push
je
cmp
cmp
mov
cmpsb
or
jecxz
addr16
subl
mov
ja
pop
inc
push
mov
loop
xor
sbb
cld
cmp
test
and
fsubrs
mov
sbb
or
push
mov
fimuls
test
sbb
clc
mov
lods
jl
pushf
dec
sub
mov
ljmp
clc
jns
ret
mov
push
hlt
mov
sub
push
pop
test
bound
or
test
bound
push
jg
cld
je
daa
test
cmpb
mov
jae
add
popa
lret
mov
pop
divb
icebp
enter
sbb
lock
lret
lock
mov
sub
addl
sub
movsb
clc
fwait
loopne
int3
adc
imul
out
xor
dec
jg
or
test
and
pop
into
add
xor
jno
rcl
pop
lock
cwtl
jo
jl
adc
xchg
mov
inc
xor
in
out
jle
jnp
jecxz
sbb
mov
aas
dec
daa
add
frstor
push
insb
clc
pop
mov
ficomps
mov
lods
or
out
cmp
imulb
xchg
jle
sub
les
xor
dec
hlt
repz
and
mov
shrb
add
jnp
icebp
push
sbb
inc
xor
push
mov
inc
and
enter
mov
dec
stos
lcall
repz
or
adc
popa
mov
lods
lret
cmp
jp
pushl
sbb
add
pop
hlt
popa
clc
adc
cli
je
dec
sar
or
sbb
in
sbbl
mov
add
and
mov
sbb
cmp
pop
jl
pushf
sbb
mov
fcmovnbe
dec
sub
and
out
aas
ds
jle
gs
sub
adc
iret
jle
mov
sub
xchg
mov
xor
sub
pop
pop
lahf
xor
xchg
push
loop
in
addl
mov
pop
clc
in
iret
fwait
mov
mov
addl
pop
lcall
adc
push
xor
mov
mov
sub
pop
mov
push
push
dec
mov
add
mov
clc
mov
fdiv
into
sbb
stos
cld
jg
test
in
dec
int3
and
fcomps
adc
dec
in
imul
idivb
dec
inc
jb
shl
hlt
repnz
pop
cli
shl
pop
sbb
and
xchg
loope
ljmp
xor
cwtl
adc
int3
popf
out
xchg
hlt
xchg
adc
lcall
pushfw
mov
mov
repnz
rorb
sbb
stos
jne
fiaddl
sbb
je
pusha
pop
adc
in
and
adc
adc
jmp
rcll
jb
xor
cmp
sub
jmp
movb
sti
jnp
ret
clc
push
sbb
fs
clc
sub
adcl
int3
std
xchg
outsl
bound
flds
test
icebp
js
dec
fs
sbb
dec
inc
dec
mov
fsub
stos
pushf
cmp
js
call
mov
stos
aaa
push
mov
movsb
loope
push
push
fdivl
xor
dec
je
gs
cmp
add
xor
imul
or
mov
dec
les
add
lea
add
or
mov
iret
out
shll
fs
xchg
xor
jno
movsl
rclb
mov
sbb
sbb
ds
lods
inc
mov
insb
mov
aas
aaa
mov
cmp
xor
nop
inc
cltd
xor
xor
xlat
cwtl
pushf
xor
pop
cmp
cwtl
aaa
mov
push
mov
data16
cmpsb
sbb
push
in
sbb
sti
cmpl
add
or
mov
int3
hlt
sbb
adcl
and
pop
out
adc
sub
and
mov
mov
add
decb
push
inc
scas
in
mov
in
out
lret
xor
repnz
repz
cmp
xor
cmp
jecxz
idivb
dec
aaa
sub
sbbl
out
xor
sbb
push
cltd
push
and
or
xor
shl
cltd
mov
or
xchg
aam
mov
out
mov
inc
in
rcrb
repnz
idiv
sarb
xor
push
sub
push
dec
pop
push
fcoms
pop
imul
xor
int3
xor
sbb
mulb
push
jns
inc
sub
jae
push
mov
test
dec
out
dec
adc
roll
pushf
negb
and
dec
mov
add
sbbb
test
sub
mov
mov
fisubrs
push
add
mov
test
inc
inc
mov
lret
cs
push
in
int3
sbb
outsl
aam
adc
mov
or
ficoms
xor
sub
out
test
mov
out
imul
push
aad
xor
sub
fdivs
nop
lods
pop
inc
mov
jne
aam
imul
test
fnstenv
jnp
inc
ljmp
lea
and
cmp
sub
std
mov
or
clc
test
xchg
sbb
sub
clc
sub
pusha
stos
cmp
inc
mov
xor
mov
mov
sbb
movsb
sub
fldcw
inc
xchg
hlt
hlt
xor
and
xor
jbe
cmp
sbb
sub
xchg
mov
inc
and
js
js
mov
jb
cmp
int
mov
mov
pop
dec
stc
fdiv
sarb
rcrb
cli
xchg
sbb
scas
aam
sub
call
sbb
js
bound
mov
movsl
dec
mov
call
sbb
xor
xor
jl
cld
dec
call
jno
and
mov
cmp
sub
adc
insl
xor
inc
jnp
out
cmp
xchg
fimuls
sbb
xchg
sbb
hlt
adc
sub
xchg
or
adc
dec
jns
sahf
xor
inc
cld
mov
dec
cmp
inc
lea
adc
dec
mov
lods
sub
mov
dec
imul
add
mov
fcoms
xor
pop
pusha
iret
je
cwtl
xchg
cmp
jmp
sbb
push
test
cmp
fldenv
mov
mov
pop
stos
xchg
xchg
add
cmc
or
and
data16
lods
adc
mov
shll
fucom
mov
jnp
pop
popa
and
in
xor
sbb
mov
loope
cmpsb
dec
test
dec
icebp
xchg
cs
cmpsb
andb
mov
sub
jmp
stos
sub
cmpl
in
fiaddl
inc
mov
xor
xchg
mull
clc
cmpsl
xchg
xor
add
jo
out
movsb
into
rol
xor
jp
aaa
cmpsb
adc
rcll
push
hlt
loop
push
mov
mov
lret
mov
aam
out
mov
lds
jns
xor
xchg
mov
sub
nop
cmpsb
pop
mov
mov
xchg
and
insb
or
mov
in
add
in
mov
rcll
adc
cld
mov
or
push
test
stc
mov
or
stos
rep
in
mov
mov
jbe
pop
or
mov
add
dec
pop
cwtl
mov
and
popa
or
mov
rcrl
cld
addb
icebp
ds
in
hlt
das
enter
ret
repnz
ss
adc
stos
js
ljmp
jns
jle
mov
inc
push
div
mov
inc
mov
js
xchg
add
aad
lea
int3
stc
xor
fsubr
test
pop
int3
and
fwait
jb
movsb
sub
or
dec
cmp
rcr
orb
int3
ljmp
add
fs
repz
xorb
or
or
fcoms
mov
sbb
daa
cmp
insl
add
iret
fdivr
mov
xor
pushf
fisubrs
jmp
cmp
or
sub
mov
push
cmc
and
in
sub
or
sbb
fsts
test
mov
int3
push
sub
push
cmp
xor
inc
sub
push
loope
lods
aam
or
aaa
mov
testb
mov
mov
cmp
in
out
out
mov
in
dec
push
sbb
sarl
leave
rorl
mov
mov
movsb
mov
ret
and
repz
sbb
jp
pop
add
cwtl
add
test
mov
roll
repnz
dec
icebp
nop
shll
stos
or
leave
xchg
push
addr16
xchg
dec
lods
cmp
jp
mov
cld
iret
sub
stos
repnz
iret
inc
jl
dec
mov
mov
xchg
mov
loopne
je
nop
push
sbb
sbb
push
imull
sti
test
mov
shll
dec
push
add
push
js
jmp
insb
cmp
enter
add
cwtl
out
lcall
sbb
cmp
sub
push
fwait
aas
andb
movsb
sbb
cmp
ljmp
pop
mov
pop
repnz
repnz
repnz
frstor
xor
xlat
sbb
ljmp
mov
stos
hlt
add
sbb
idivl
fcmovnb
testl
rcrl
add
aaa
and
sbbb
sbb
in
add
call
pop
xorl
push
lahf
cld
pop
lock
xlat
lock
out
inc
lock
sbb
fwait
clc
in
sarl
mov
push
popa
aam
or
mov
daa
push
cmp
sub
sbb
mov
mov
sbb
xchg
out
in
jl
int
ja
je
or
pop
pushf
cmp
xor
lods
and
daa
inc
jg
jge
in
mov
cmpb
test
xchg
adc
insb
jecxz
fsubr
mov
xor
inc
xchg
xlat
sbb
mov
test
popa
pusha
stos
nop
inc
idivb
scas
lea
js
sbb
fsubs
sbb
jl
mov
imull
adc
or
mov
push
repnz
fildl
sub
lcall
inc
outsl
inc
test
js
xchg
push
pop
cld
fnstsw
insb
push
inc
je
orl
jns
testl
sbbb
dec
inc
mov
lahf
pusha
sbb
sbb
out
push
int3
mov
pop
push
insb
out
and
je
loopne
cmc
das
cmp
sub
push
test
and
sub
lret
mov
cmp
lock
or
call
pop
pop
test
add
cmp
cmp
iret
mov
and
xchg
add
mov
into
arpl
or
cmp
pushf
dec
cmp
gs
cmp
mov
mov
ss
arpl
cmp
aaa
or
xchg
aaa
or
and
jae
pop
xor
data16
jmp
cmp
fdivs
cmpsl
je
pop
pop
frstor
jnp
imul
je
and
pop
test
inc
testb
test
add
pop
mov
add
sub
jae
mov
sub
test
mov
pop
sbb
sub
sbb
test
dec
sub
inc
popa
scas
js
xlat
fdivrl
pop
xor
mov
insb
adcb
or
mov
cli
out
xor
mov
fidivs
cmp
jo
xor
xor
in
sbb
jmp
daa
arpl
or
sub
shlb
ret
inc
sub
or
das
pop
and
fcomps
sbb
jae
adc
or
push
push
cli
xor
mov
pop
add
mov
fdiv
jecxz
push
popf
sbb
jle
inc
add
inc
andl
pop
sub
mov
lods
sbb
sbb
test
pop
in
dec
pop
sub
adc
adc
add
nop
lds
ja
jmp
mov
push
or
push
and
pushf
scas
addl
mov
push
pop
je
pop
lods
repnz
mov
xor
cmovg
mov
sbb
dec
fsubl
mov
xchg
insb
mov
sbb
outsl
push
fdivrs
mov
push
mov
adc
adc
and
inc
jmp
shll
jne
xchg
fisubrs
cld
pop
pop
sub
inc
cmovs
dec
adc
rcr
repz
aam
mov
mov
or
cmp
push
nop
sbb
jmp
mov
mov
mov
add
xor
int
and
cmc
adc
fistpll
sbb
out
out
jp
lea
testb
imul
hlt
test
ds
les
xorl
mov
push
adc
loope
inc
int3
lods
mov
hlt
cwtl
lcall
push
xlat
ljmp
mov
adc
gs
cld
hlt
dec
cmp
xlat
dec
rorb
lret
and
xchg
sbb
xor
insl
pop
push
jnp
xor
inc
aas
pushf
jmp
imul
lea
sarb
je
faddl
add
or
pop
sbb
pop
jg
mov
into
push
imul
mov
addb
bound
not
xor
call
out
inc
add
sub
jo
or
sub
xchg
xchg
lret
xchg
push
in
insl
mov
jmp
scas
das
cli
and
adc
scas
adc
sbb
xchg
xchg
xor
je
sbb
test
int3
pop
pushf
sub
in
mov
inc
imul
mov
das
in
movsb
sub
lcall
testl
repz
lcall
sub
xchg
sbb
rorl
mov
cli
adc
xchg
push
adc
je
dec
sub
sub
out
pop
dec
icebp
in
les
adc
lods
mov
push
and
pushf
cmp
mul
jge
movsb
sub
lds
pop
push
jb
je
xchg
sbb
jbe
outsl
ret
mov
ja
lret
lds
ljmp
inc
jb,pt
into
adc
mov
pop
sbb
repnz
lds
mov
jmp
arpl
in
mov
mov
pop
xor
fdivrp
pop
dec
pop
daa
adc
ds
push
adc
push
in
sbb
xor
das
out
pop
jecxz
shll
cmp
cmpsl
mov
adc
sbb
clc
push
xor
inc
add
mov
cmp
pop
movsl
or
push
pusha
pmuludq
sbb
shrl
cmp
lock
int3
and
test
sbb
adc
in
pop
insl
fstp
mov
clc
pusha
inc
aaa
push
cld
push
daa
push
clc
movsb
ficoml
arpl
xchg
mov
jge
aaa
pop
neg
sub
aaa
pop
jmp
iret
iret
mov
daa
stos
inc
sahf
jb
adc
inc
fsubl
lret
insb
jg
pop
aam
or
sbb
dec
testb
movsb
rorb
mov
push
inc
outsb
jns
xor
add
add
jle
push
mov
out
shl
jle
movsb
cltd
call
ja
xchg
nop
frstor
aaa
inc
adc
test
in
sbb
sbb
int3
and
sbb
fsubs
adc
pop
cmp
xchg
cs
sbb
cmc
pop
mov
nop
mov
mov
je
movsl
dec
pop
pop
pop
cli
hlt
lcall
lcall
test
sbb
cli
jl
cli
and
addr16
out
xlat
lds
jmp
jnp
jns
xchg
out
adc
fidivrs
jns
int3
test
cmpsb
ret
int
scas
adc
loop
in
inc
outsb
xchg
xchg
pop
xor
inc
pop
mov
xlat
inc
movsb
xor
imul
fs
mov
int3
shll
pop
add
jae
call
in
out
push
aad
cli
scas
xchg
xor
cli
fsts
sub
das
inc
mov
rorl
mov
inc
sbb
leave
in
pop
loope
sbb
aad
sbb
shlb
cld
mov
jnp
or
es
imul
xchg
dec
xchg
push
sub
lcall
inc
xor
icebp
ficompl
das
int
and
jo
es
outsb
inc
rcll
pushf
shll
mov
sbb
insb
in
pop
adcl
pop
sbb
jp
cmp
mov
mov
mov
inc
ss
adc
cltd
or
stc
stos
daa
dec
inc
pop
push
rcll
sub
decl
and
dec
fsubs
cmp
push
xchg
mov
adc
mov
adc
inc
adcb
ljmp
aam
repz
sbb
lock
notb
and
out
loop
adc
xchg
jnp
ror
ds
lret
subl
sbb
or
stc
pop
adc
and
cmp
or
push
aaa
out
fisubrl
mov
leave
loope
sbb
mov
xor
cs
sbb
and
leave
dec
test
bound
mov
lcall
orl
call
add
push
mov
stos
mov
sub
xchg
xor
add
sub
aam
mov
mov
shrl
pop
inc
add
cmp
or
xor
in
mov
jbe
testb
stc
imul
adc
or
ljmp
or
adc
dec
aam
jns
das
shl
jmp
mov
leave
mov
rcrb
xchg
hlt
jmp
int3
lods
mov
out
das
out
xchg
and
push
adc
adc
jae
je
xor
outsb
lods
cmp
gs
hlt
add
jge
je
dec
fdivs
test
xchg
or
insb
cmp
xchg
jns
pushf
ds
addr16
xchg
fidivrs
mov
push
push
pop
pop
or
sti
xor
movsb
shl
enter
jne
fwait
int3
push
shll
sti
cmp
repz
mov
loope
lahf
jg
push
cmp
or
aam
loopne
cmpsl
jae
pushf
aas
jbe
mov
sub
mov
mov
hlt
es
inc
movsl
push
inc
jno
ficomps
in
ret
xchg
fstl
sub
pop
and
popa
stos
jl
call
adc
add
xchg
add
ret
mov
cwtl
in
insb
sub
add
lods
repz
popa
cmpsl
cltd
push
sbb
loop
inc
or
mov
pop
movsb
mull
push
enter
mov
enter
sub
jns
enter
xor
xor
loop
movb
adc
rcrb
xor
sub
arpl
push
and
movsb
or
mov
pop
xor
cli
test
aaa
aam
test
adc
push
xchg
lret
lahf
aas
dec
int3
ds
inc
enter
sbb
dec
sub
jae
test
inc
cmp
dec
xor
inc
and
jae
rcrb
sbb
fsubs
aam
sub
xor
xchg
and
test
negl
ljmp
mov
sub
test
jmp
push
inc
mov
jae
test
xor
adc
mull
mov
inc
mov
sbb
call
je
inc
inc
lds
sbb
test
add
sub
cmc
scas
aaa
imul
idivb
jae
push
mov
faddl
push
test
add
xor
sub
sub
push
addl
fcoms
cld
xor
repz
xor
jge
test
mov
ja
das
xorl
and
loop
and
push
adc
orb
mov
mov
sti
adc
ffreep
int3
in
mov
adc
dec
insb
lahf
daa
imul
mov
xor
imul
jns
mov
lds
sbb
xor
imul
or
push
xor
add
pop
lock
stos
fcompl
lret
cmp
cmp
sub
je
pop
cli
push
sbb
push
insb
or
mov
sbb
mov
idivb
cmp
mov
jmp
fdiv
xchg
sbb
push
cld
push
adc
imul
sbb
fidivrs
add
inc
iret
outsl
shrb
fiaddl
cmp
push
cs
xor
xchg
in
push
cmc
pop
xor
mov
xchg
xor
add
jo
add
cmp
cmp
pushf
aas
rcl
mov
add
in
jecxz
or
hlt
pop
add
outsb
pop
pop
call
sub
pop
xor
push
add
cmp
loopne
xchg
dec
lret
in
in
add
or
mov
mov
scas
ljmp
cltd
fwait
inc
test
xchg
fildl
jno
pop
cmp
leave
pop
sub
dec
xor
cld
cli
push
mov
or
jae
pop
int3
cwtl
xor
mov
inc
mov
inc
cltd
xor
xor
popf
pusha
cmp
push
movsl
andb
add
add
xor
mov
xchg
adc
in
rcl
pusha
insb
inc
lret
xor
out
pop
push
jg
ret
stos
enter
les
push
pop
cmpsl
stos
lods
jp
cmc
pop
cli
fwait
shlb
sub
sbb
cmp
mulb
negl
pop
mov
xor
mulb
in
call
call
sbb
fwait
loopne
mov
fidivrl
fldl
xor
test
inc
movsl
dec
or
mov
divl
outsb
push
mov
pop
or
add
push
je
inc
addl
pop
mov
jbe
aam
xchg
es
push
cwtl
dec
adc
das
shlb
jecxz
xor
mov
cwtl
add
divl
dec
jmp
std
das
lods
cmp
xchg
mov
xor
xchg
stc
add
push
sub
cmp
adc
pop
call
test
and
test
int3
xchg
or
mov
pop
psraw
testl
addr16
cmp
dec
sahf
aaa
inc
and
test
nop
ja
cmp
rclb
fucompp
mov
xor
sahf
dec
sti
mov
push
lcall
sahf
pushf
testl
push
repz
add
outsl
fsubs
add
sbb
jge
dec
out
add
test
dec
push
mov
subb
insb
stos
jns
xchg
jg
scas
lods
out
in
mov
pop
cmp
cmp
add
sub
add
mov
or
cmpb
push
add
mov
sbbb
lock
std
aas
stos
lcall
sbb
movsb
out
test
xchg
cld
out
push
pop
pop
sub
pop
xlat
and
clc
arpl
je
out
push
push
cwtl
push
sbb
mov
jnp
notb
xchg
adc
add
mov
jmp
push
pop
lods
lods
lock
insl
dec
mov
outsb
test
xor
push
and
std
std
outsb
lret
push
jmp
jge
cs
lea
push
nopl
inc
arpl
xlat
mov
ja
xor
imul
cli
pop
or
call
mov
push
scas
pop
jae
bound
or
call
out
mov
sub
outsb
fmull
pop
cltd
sbb
and
xor
das
icebp
pop
cltd
sub
pop
mov
daa
mov
sahf
pop
cli
pushf
jae
lock
push
pop
repz
adc
or
add
xor
dec
adc
adc
insb
and
daa
cwtl
ds
mov
sub
xor
aaa
repnz
mov
icebp
adc
sub
je
sbb
popf
stos
dec
mov
adc
lods
push
xchg
lock
xchg
cs
mov
stos
mov
cli
lahf
lods
lock
adc
sub
push
out
std
mov
cld
repnz
pusha
call
add
sbb
jnp
dec
call
movsb
cltd
pop
adc
cmp
pop
je
fs
xchg
fcmove
fmull
fwait
jle
dec
fwait
loopne
xor
lret
mov
xchg
add
push
jbe
jae
fs
fiaddl
xchg
icebp
mov
pop
orl
mov
add
sub
jns
cmp
mov
jae
loop
cmp
sbb
xchg
and
in
fcompl
pop
jp
cmpsl
mov
cmpsb
mov
pop
xchg
insb
jge
rcl
rep
ffreep
adc
mov
popa
jne
fs
jae
outsb
ficoms
inc
sbb
sub
mul
adc
add
dec
loope
stc
dec
test
pop
pop
adc
sbb
icebp
mov
xchg
adc
push
mov
adc
int3
mov
push
inc
inc
jne
cmp
cmc
hlt
cs
or
xchg
xchg
sub
fnstenv
lods
adc
cld
es
xchg
mov
pop
hlt
dec
and
in
test
adc
les
enter
lods
repz
xor
mov
fcom
gs
cli
pop
out
test
xorl
push
xor
and
aad
cld
adc
cmp
xchg
cmp
lock
insl
in
es
adc
call
aas
jo
std
xor
or
cmp
jae
dec
aad
sahf
fistpl
out
pop
mov
test
jmp
xchg
scas
mov
mov
adc
out
pop
xor
fisubl
xor
push
push
mov
repnz
loopne
int3
cmpsl
aam
fbld
inc
push
push
jne
jae
xor
sub
push
cli
ret
xor
mov
push
mov
push
sub
xor
xorl
ds
shll
sbb
icebp
dec
mov
or
fidivs
cmp
loop
add
pop
nop
dec
xchg
cmpb
test
sbb
or
lret
mov
lret
mov
pop
push
inc
pop
clc
loope
mov
jnp
cmpsb
sub
orb
cmp
icebp
push
andl
dec
sahf
aam
in
ds
adc
pop
scas
add
nop
cmp
cli
cmp
cmp
xchg
push
adc
dec
das
adc
pop
mov
mov
push
push
daa
out
lret
aam
push
cli
xor
into
lods
ljmp
sbb
cmp
sbb
shll
sub
and
sub
push
sahf
cmp
movsb
jns
mov
mov
inc
xor
sbb
xor
cmp
inc
adc
jne
divl
cmp
sbb
mov
mov
aad
loope
sbb
xor
cmp
fwait
xor
cmp
aas
mov
imul
and
jp
cmp
in
int
mov
xor
pop
dec
ja
cmp
xchg
int
mov
cmpb
xor
add
idivb
or
sub
inc
lods
add
dec
mov
and
inc
add
sbb
pushl
sti
in
xor
sbb
cli
and
popa
xor
sbb
ja
pop
addr16
mov
push
out
pop
xlat
and
push
pop
in
push
out
jb
sarl
inc
jns
hlt
xor
xlat
pusha
cwtl
cmpsl
jae
pop
or
sti
out
push
jns
loopne
or
mov
adc
sub
rcrb
fcoml
fmuls
test
push
push
xchg
jmp
inc
pop
addl
cli
pop
jp
xchg
je
lret
fdiv
xor
adc
mov
add
xor
sti
sub
in
and
nop
imul
pop
pop
or
and
test
adcl
jae
lcall
xorl
and
and
inc
cs
cmp
push
cltd
pop
lahf
in
jp
xor
pop
jecxz
and
xchg
push
mov
ljmp
pusha
rcrl
mov
dec
cmp
and
lret
das
add
dec
shr
dec
sub
scas
xor
out
dec
shr
js
out
daa
rorb
call
pop
call
push
jnp
mov
bound
inc
addr16
pushf
sub
sub
mov
xor
inc
cld
in
popf
cmpsb
xor
mov
ret
mov
arpl
mov
insb
push
dec
adc
movsl
sub
adc
daa
xor
jb
fcomip
dec
movsl
mov
cltd
ret
pop
je
clc
pop
mov
cmp
jl
addb
xchg
fadd
int3
dec
or
push
fcmovb
push
fsubr
pop
push
shlb
mov
pop
pushf
testl
faddp
dec
xchg
adc
pushf
push
add
cltd
add
jo
add
cmp
ficompl
cmp
cmp
lods
and
dec
mov
inc
or
cmp
push
dec
jnp
pop
pusha
sub
repz
je
outsl
sub
shll
dec
pop
subl
push
rolb
cmp
in
dec
mov
push
push
mov
shll
cli
hlt
sbb
dec
in
scas
mov
pop
sub
xchg
xor
sbb
imul
mov
std
sbb
cmc
mov
fwait
repnz
or
jmp
sahf
inc
out
addb
push
xchg
jp
gs
sbb
ficompl
sub
sub
push
or
in
pop
push
pushl
cmc
xchg
div
cwtl
inc
cmpsb
aad
jae
sbb
mov
xor
aaa
out
xchg
mov
xor
icebp
mov
mov
cwtl
ret
jae
pop
pop
mov
and
push
pop
ja
xchg
push
stos
nop
jo
movsl
mov
add
pop
add
clc
and
jo
vphaddwd
stc
out
fsubrl
inc
notl
or
mov
mov
stc
sbb
xchg
test
js
pusha
xlat
lock
les
mov
in
stc
es
clc
inc
sub
mov
fadds
xor
add
adc
hlt
mov
add
or
add
sbb
sub
sub
scas
jecxz
mov
or
or
popa
xchg
jns
xchg
jle
idiv
push
stos
push
shl
mov
add
std
sub
cltd
mov
jge
mov
push
das
add
rorl
dec
orl
das
loop
in
inc
jge
xchg
dec
sti
mov
shll
inc
sbb
jnp
enter
je
xchg
fcoms
sub
xchg
mov
mov
insb
js
cmp
adc
lahf
mov
fcomp
add
sbb
add
add
dec
mov
loope
sub
aas
adc
pop
adc
cld
movsb
mov
sub
sbb
xchg
aaa
xchg
push
xchg
xchg
xchg
xchg
int3
out
rcrl
or
cmp
mov
or
xor
dec
mov
lods
sbb
std
push
cmp
mov
ja
xor
loopne
shrb
lods
xor
mov
or
cmp
dec
movsb
sbb
xor
cmp
aas
or
mov
test
push
testl
sbb
sub
add
nop
and
mov
pop
xchg
and
sbbb
pop
les
int
out
push
rcrl
push
pop
inc
inc
push
movsb
hlt
je
cld
movsb
mov
testb
inc
sbb
leave
in
lock
or
stos
ret
mov
scas
rol
xor
stos
pushf
pop
mov
xor
popf
and
push
mulb
inc
mov
sahf
xor
jbe
push
decl
sbb
xchg
and
bound
test
or
sub
add
adc
jns
std
fs
or
or
fldcw
sbb
sub
aas
lods
mov
dec
cltd
fiadds
sbb
in
mov
in
sub
lret
mov
ficoml
sbb
subb
xor
lock
outsl
mov
loopne
dec
fnsave
int3
sub
and
jp
mov
mov
sub
cld
sbb
add
sbb
pop
push
fsubr
fwait
cltd
adc
cmp
lods
fsubp
pushf
daa
add
jmp
pop
push
in
scas
das
sub
js
aaa
into
adc
and
push
arpl
or
lcall
jle
jmp
fldcw
pop
xor
das
cmp
pop
cmc
push
outsl
ficompl
xchg
inc
stc
push
aam
leave
test
sbb
andl
add
je
hlt
loopne
test
stos
lret
inc
negb
sahf
pop
dec
pop
mov
add
sbb
sub
fiaddl
sub
lret
aam
scas
lret
add
push
xchg
int3
adc
sub
or
aaa
cli
xor
push
pop
rcrl
mov
inc
shl
out
dec
int3
jp
daa
and
ljmp
imul
fs
add
or
adc
add
outsb
add
sbb
mov
cli
sbb
lret
add
leave
aam
add
dec
xchg
pop
xchg
mov
pop
add
mov
xchg
cmp
inc
xor
lahf
imull
add
and
mov
mov
mov
push
push
mov
mov
cmp
lret
push
sbb
ret
mov
push
xor
mov
add
mov
pop
adc
pop
sub
mov
sbb
pop
cmpsb
cmp
loope
pop
fdivrs
add
cli
in
adc
in
lods
in
repnz
push
ljmp
cmp
mov
in
pushf
pop
les
jg
and
inc
cld
pusha
push
popa
jno
daa
push
mov
notl
cmovle
loop
dec
sbb
shr
dec
lret
cld
imul
je
pop
dec
jge
xor
out
lock
dec
sbb
call
fadds
pop
lods
out
inc
ret
mov
add
repz
icebp
lret
mov
mov
jae
out
int
adc
xor
ficomps
into
mov
repz
and
lret
sub
xor
cs
xor
mov
enter
out
sbb
xor
lahf
aas
sarb
outsb
mov
out
fisubrl
adc
out
xchg
adc
cmpsl
cmp
inc
mov
sbb
test
adc
movsb
mov
test
mov
mov
xor
xchg
stc
repz
repz
insb
pop
cmc
test
mov
movsb
push
mov
les
pusha
adc
jge
test
xor
sub
je
inc
test
das
decl
ret
mov
repz
call
pop
ror
pop
xlat
sahf
add
scas
les
mov
pop
push
adc
or
adc
insl
mov
cmp
das
daa
lahf
xchg
in
ret
push
and
cmpsl
xchg
int3
and
sbb
cmc
sub
or
sub
lock
rorl
push
bound
data16
lahf
rcrl
jae
pop
sbb
mov
lret
push
cmp
add
cli
xor
lcall
mov
in
or
sbb
stos
add
add
cli
sub
mov
xorl
test
repz
sub
test
pop
dec
in
mov
dec
xchg
add
scas
cld
inc
std
pop
es
shl
sub
adcl
test
sahf
cld
ret
jbe
movsb
and
jge
sub
movsb
jbe
xor
lods
stc
cltd
dec
sbb
jae
dec
mov
xchg
imull
jmp
pushl
lcall
mov
test
add
test
mov
fdivr
icebp
cmp
jae
mov
or
dec
test
stos
jg
sbb
xchg
dec
cwtl
iret
sti
cs
out
inc
int3
shrl
shll
pop
int3
and
push
jp
xchg
test
mov
lret
hlt
sub
cmp
in
sbb
push
in
jecxz
adc
repz
int3
mov
push
cmp
add
pushf
repnz
cld
xor
mov
inc
inc
mov
repz
or
xchg
insb
rcr
add
lahf
sub
cli
shll
cmp
and
mov
stc
mov
es
pop
lods
shlb
pusha
sub
jne
mov
test
repnz
and
aas
fwait
repnz
mov
mov
mov
out
leave
mov
jo
lahf
adc
and
gs
into
sub
lret
lahf
rclb
or
mov
dec
stc
jmp
xor
xlat
dec
cltd
call
popa
hlt
sbb
call
pop
xor
jge
cld
xor
enter
xchg
mov
adc
stos
adc
je
mov
adc
or
or
pop
sub
push
adc
sarb
lods
pusha
divl
or
out
adc
das
mov
sub
mov
xor
mov
mov
jbe
inc
mov
dec
into
xlat
imul
mov
sbb
mov
xor
addr16
push
lahf
inc
cmpsb
sahf
mov
lcall
pop
pop
adc
lcall
sub
aad
stos
rcll
cmp
pop
lods
or
push
sbbb
inc
xchg
js
mov
mov
lretw
mov
inc
test
stos
adc
popa
loope
and
mov
pop
lret
out
sub
subl
mov
push
ds
inc
dec
bnd
push
pop
push
pop
sub
inc
dec
xchg
mov
push
push
test
lret
loopne
push
xor
das
sbb
push
repz
push
mov
cmpsl
mov
sub
push
fidivs
pop
or
aad
xchg
xor
test
out
aam
add
daa
mov
das
cmp
les
sbb
shll
test
mov
nop
cmp
jge
sbb
repnz
sbb
cs
ret
lods
in
dec
enter
enter
cltd
lock
mov
inc
jmp
jg
pop
ficomps
icebp
fstl
sbb
fidivrs
xor
pop
mov
add
pop
or
dec
push
or
sar
hlt
daa
xor
sub
push
add
test
xchg
jo
mov
sub
pop
stc
fwait
dec
sbb
cmp
inc
cmp
insl
xchg
mov
sbb
cs
cli
pop
mov
cmpsl
orb
pop
repnz
mov
das
ja
jmp
sub
negl
cmpsl
sub
mov
inc
or
fidivrs
dec
lahf
test
out
add
add
imul
jo
ret
push
pop
insl
bound
fsub
dec
nop
adc
dec
pop
jg,pt
das
push
adc
xor
rcrl
add
mov
adc
fsubs
jns
xchg
sub
push
adc
push
negb
clc
mov
sbb
mov
aaa
je
dec
inc
enter
sbb
aam
push
pop
int
aam
push
stos
mov
cld
cli
add
shl
jae
inc
fsts
inc
sub
xchg
movsb
dec
shlb
push
dec
pmuludq
xchg
loop
jae
mov
cmp
cmp
and
stc
cmp
int3
adc
cli
sbb
testb
shl
ss
mov
adc
xor
or
push
int3
or
je
mov
ffreep
in
insb
test
cs
out
adc
jo
mov
popf
fcoml
fnsetpm(287
int3
pop
loop
ja
dec
scas
add
repnz
enter
in
mov
push
jne
js
jmp
stc
push
sbb
inc
ds
fwait
lcall
cwtl
cmp
xor
fsub
ja
shl
xor
push
sbb
mov
jl
lret
or
inc
test
sbb
jns
movb
and
mov
jb
adc
shlb
push
xchg
enter
pop
lcall
mov
cmp
insb
dec
outsb
sbb
mov
mov
test
cld
xlat
xor
inc
push
xor
inc
rol
scas
xor
call
pop
sbb
or
push
aaa
add
push
movsb
or
fucomi
pushl
pop
lods
mov
push
inc
xchg
sbb
jp
clc
shrb
pusha
sbb
cs
out
sbb
pop
add
std
cmp
sub
push
scas
out
adc
shrb
sahf
jle
sbb
push
and
rcr
cmp
adc
jnp
sub
js,pt
cmp
jl
push
pop
mov
sub
stos
cld
inc
repnz
outsb
in
xor
inc
mov
inc
out
movsb
xchg
scas
add
imul
pop
addr16
mov
cmp
inc
ljmp
cmp
aas
sarb
mov
or
pusha
xor
xlat
loopne
inc
xor
pushf
sub
sub
adc
mov
in
add
sbb
sub
sbb
adc
cmp
cmc
pop
ret
pop
testb
xor
pop
xor
in
aam
fwait
push
and
enter
cs
cmp
lods
sub
fldl
repz
pop
es
xlat
sti
sarb
inc
cmp
nop
xchg
cmp
cmp
jmp
imul
push
mov
ds
jnp
scas
pop
dec
negb
int
mull
mov
and
xlat
add
fsubrl
bound
push
cmc
sarb
sbb
insb
and
repz
jge
mov
mov
xchg
enter
mov
in
icebp
and
sub
sbb
dec
cmpsl
enter
les
sbb
mov
cmp
dec
or
adc
sub
sbb
sub
sbb
hlt
push
mov
pop
xlat
and
sub
enter
adc
xor
into
xor
sub
pop
cli
push
les
xchg
pop
adc
xor
cmp
mov
out
cli
or
out
push
test
scas
cltd
jp
add
sbb
or
push
cmc
enter
aaa
iret
cmp
xlat
jecxz
mov
adc
jo
xchg
inc
imul
add
xlat
push
scas
fwait
sub
push
cs
xlat
std
sbb
das
jmp
cwtl
xor
cltd
xor
adc
fst
mov
xor
movsl
sub
mov
ljmp
sarb
adc
rclb
movsl
pop
stos
sub
jl
mov
int3
testb
xor
les
test
out
enter
int
push
enter
mov
pop
cmp
adc
ljmp
xor
fistpl
rorb
roll
shrl
mov
in
cmp
loopne
mov
out
pop
hlt
xor
cmp
pop
cltd
inc
cmc
fisubl
in
clc
xorb
enter
cmpsl
ss
cli
jmp
stc
andl
xor
sub
ror
sub
mov
sub
fsincos
js
jo
adc
pop
clc
fistl
cli
fnstenv
sbb
mov
add
iret
iret
icebp
cli
and
or
ja
and
enter
sub
jns,pn
sub
sub
add
mov
lahf
cli
or
jb
xchg
jp
add
xlat
xlat
sbb
cmp
sarb
mov
sub
adc
push
adc
mov
adc
add
int3
and
cli
sub
dec
fs
int3
fmul
in
shlb
sti
je
in
bound
mov
or
dec
sbb
mov
sar
adc
push
mov
aam
and
in
stos
mov
fsubrs
lea
test
popa
cmp
ret
push
movsl
adc
sub
lock
scas
scas
mov
pop
add
in
jmp
cmp
jns
xor
negb
into
xor
out
jge
add
push
cmpsl
icebp
je
subl
xchg
in
xor
sbb
sub
sub
and
or
cmpl
aam
pop
lock
notb
sub
shrb
push
sbb
adc
scas
fisttpll
pop
in
incl
push
aam
xor
push
inc
adc
iret
pop
mov
fsubl
testl
and
cmp
adc
fisubrs
cmc
inc
add
push
dec
std
cli
sbb
lea
lock
stos
fs
add
mov
call
xor
adc
cwtl
and
sbb
movups
mov
mov
outsb
adc
adc
jns
mov
mov
cmp
daa
cld
sub
ret
cmp
or
add
pusha
fwait
stos
add
rclb
stos
repnz
cmp
mov
cmp
cmc
pop
jo
lods
add
xor
xor
push
data16
mov
xor
roll
aam
dec
loopne
jle
pop
mov
jg
pop
mov
loope
sbb
lods
mov
sub
xchg
push
jb
sub
push
push
clc
sbb
ja
lret
fidivl
adc
aad
loop
xchg
pop
outsb
iret
push
in
xchg
int3
pusha
jle
pop
inc
fstl
aam
les
lods
das
or
fsubrl
cmc
jecxz
in
mov
mov
ja
mov
aas
xor
pop
add
aaa
mov
xor
into
xor
jbe
dec
stos
and
jecxz
test
jle
mov
cmp
lods
fdivrl
xchg
aas
repnz
inc
jmp
mov
adc
lock
adc
jb
fchs
clc
add
jmp
and
inc
jnp
inc
dec
ljmp
jnp
int3
push
clc
sbb
sbb
sbb
adc
xor
insb
inc
sub
sub
adc
add
inc
popa
out
call
inc
fisubs
arpl
imul
sub
xor
add
insb
inc
pop
je
push
cmp
add
push
push
aas
add
mov
push
cli
add
sbb
dec
shll
inc
loop
scas
add
pop
frstor
or
pop
mov
add
les
cmp
push
call
xor
movsb
sub
repnz
xor
push
in
pushf
mov
lods
arpl
sub
push
je
data16
mov
nop
jbe
das
cmp
fwait
xor
sub
sbb
lods
and
xchg
fchs
cli
fimull
and
pop
shll
aas
lock
scas
lods
fstpt
pop
nop
pop
add
jge
ja
xor
mov
pop
lods
lods
sub
mov
icebp
cltd
in
daa
fwait
jns
leave
inc
mov
sub
add
or
sub
and
xchg
clc
shrb
idiv
jmp
mov
fs
inc
fistpl
mov
xchg
rolb
push
mov
loopne
fs
sti
adc
jecxz
out
and
or
sub
push
sub
pop
loopne
fwait
adc
push
das
push
pop
scas
dec
sbb
pop
fbld
fs
xorl
push
xor
xchg
cmc
jmp
fadds
sbb
push
cli
jne
jmp
cmp
pop
sub
jnp
xor
outsl
xlat
outsb
mov
out
mov
mov
adc
push
jecxz
adc
sub
mov
sbb
aam
aaa
add
ljmp
ret
fldcw
out
sahf
adc
sbb
fcompl
cmp
inc
sub
int3
sbb
push
mov
or
dec
mov
aas
sub
mov
insb
sub
sub
or
and
push
aas
and
dec
add
ret
jnp
testl
jmp
cld
mov
jmp
xchg
jne
stos
cld
sbb
mov
movsb
sub
push
lock
mov
cmp
push
ror
and
clc
xor
int3
addr16
popa
enter
loop
xchg
pop
jmp
insl
xor
pop
mov
enter
rcr
hlt
int3
add
fldenv
loopne
xor
test
adc
add
mov
test
mov
cld
ss
mov
push
pushf
inc
sub
lea
mov
lret
push
push
sti
or
inc
push
out
mov
xchg
gs
hlt
inc
xor
test
out
pop
and
ljmp
fs
clc
xor
fdiv
push
fbld
sub
sub
fs
xchg
mov
mov
pop
sub
ss
push
aad
sub
fs
lret
fstpl
mov
out
dec
sub
mov
mov
in
jp
or
adc
mov
ss
leave
dec
outsl
cld
cltd
lea
cmp
push
mov
imul
or
into
gs
cli
repz
sub
jns
ds
je,pt
add
scas
clc
cmp
ds
mov
aaa
jno
or
inc
and
aaa
lret
mov
xor
inc
lods
arpl
inc
add
cmpl
lret
or
mov
mov
xor
sub
push
sarb
js
aas
setne
mov
test
push
test
lahf
sbb
push
nop
pop
or
adc
add
adc
add
fadds
enter
addb
mov
ss
xor
mov
movb
ljmp
loop
ret
mov
mov
xor
in
out
dec
fldt
imul
lcall
xor
sbb
adcb
inc
sub
or
jle
adcl
or
xchg
adc
mov
pop
xor
repz
jo
imulb
in
lock
adc
jo
adc
dec
andb
sbbl
mov
test
xor
fiaddl
js
inc
loop
cmp
hlt
stos
dec
add
add
lods
and
ljmp
push
mov
mov
cli
paddusw
push
jmp
sub
xchg
roll
mov
mov
imul
and
mov
sahf
cmp
or
cwtl
adc
xchg
stc
cmp
sbb
js
sbb
and
daa
dec
mov
sub
shrl
test
sbbb
or
js
sbb
and
inc
xor
dec
dec
xor
das
push
cwtl
jg
nop
insb
add
cltd
sub
xchg
cmc
mov
cld
and
dec
aas
mov
rcrb
add
pop
in
sbbl
icebp
cld
lea
inc
hlt
clc
test
xor
push
nop
adc
in
shll
dec
and
cli
mov
fildl
sahf
inc
and
mov
insb
sub
ret
pushf
xchg
mov
loope
ret
push
sbb
xor
std
movsb
je
mov
and
xchg
cli
add
inc
leave
inc
cld
pop
iret
fdivrs
mov
and
mov
or
dec
cltd
mov
or
outsb
mov
inc
in
mov
inc
sub
bnd
sbb
cld
mov
sub
sbb
pop
cltd
add
jbe
push
int
push
mov
fdiv
dec
lods
xor
sbb
mov
out
mov
xor
out
out
mov
fsubr
rcrb
push
les
in
hlt
das
int3
jae
pop
add
push
mov
shll
sbb
ljmp
mov
or
int3
xor
sbb
inc
jmp
je
cmp
add
ljmp
add
cwtl
push
mov
mov
fisttpll
arpl
int
sbb
or
add
iret
mov
sbb
stos
sbb
stos
pop
loop
inc
ficoms
aam
cmp
neg
sbb
cli
xor
sbb
jp
inc
and
jo
rcrb
rorb
lcall
inc
dec
dec
adc
cmpb
es
int3
sbbb
pop
jae
stos
jle
aas
xchg
sub
popf
repz
mov
xchg
mov
jns
pop
mov
cmp
insb
or
fistpl
ror
ficoms
dec
pop
cli
xor
movsb
cmp
movsb
orb
repz
popa
sub
nop
movsb
inc
cmp
inc
mov
jb
sbb
mov
xchg
enter
add
adc
sub
push
pop
ss
cwtl
shr
sub
fsubr
and
mov
lcall
inc
in
loopne
add
adc
aas
fcmovbe
sbb
mov
je
setbe
lock
neg
nop
int
stos
xor
xchg
test
js
sarb
xor
adc
inc
mov
mov
dec
mov
mov
mov
stos
mov
out
lock
mov
pop
aam
adc
ss
aad
add
sbb
xor
inc
add
mov
daa
in
ds
call
and
mov
jle
cmp
cmp
mov
mov
repnz
or
int
cmpb
lods
test
push
sub
mov
and
jae
sbb
mov
push
int3
arpl
mov
dec
mov
lock
sub
add
add
sub
mov
sbb
sbb
shrl
xchg
cwtl
mov
sbb
sub
xor
mov
dec
dec
cwtl
in
fstps
mov
mov
sub
and
in
xchg
sub
sbb
push
jo
sbb
xchg
xor
adc
mov
lret
ljmp
and
xor
in
sarl
jmp
adc
xor
jbe
in
lcall
movsb
clc
or
jbe
xchg
jmp
dec
je
test
pop
jmp
sub
cmpsl
cmp
dec
sub
or
es
les
add
loop
dec
int
cli
hlt
xor
xchg
cmp
xchg
adc
xorb
movsb
adc
mov
push
inc
push
sbb
cld
inc
xor
sub
mov
adc
xor
ljmp
jge
pop
or
sbb
sbb
pushf
jge
pop
dec
ficoml
jnp
arpl
push
xor
aas
ljmp
lea
sbb
xchg
lcall
fdivl
lea
fsubl
xchg
mov
filds
sarl
fmull
xchg
fdivs
add
rcl
popa
push
clc
xor
cwtl
es
lods
or
push
adc
mov
lods
xor
push
jmp
mov
popa
jo
cld
adc
pop
out
out
jp
inc
lods
jecxz
mov
and
rcl
aam
cmc
adc
cmpb
pop
sub
pop
mov
pusha
adc
dec
inc
ljmp
das
inc
and
int3
fldl
cmp
pop
cli
pop
sbb
aaa
jbe
in
repz
mov
xchg
hlt
mov
sbb
inc
push
in
repnz
inc
or
push
shl
mov
xorb
sar
push
inc
insb
loopne
nop
cltd
in
outsb
je
cmp
fbstp
es
push
out
mov
cmp
mov
call
cmpsl
aaa
or
dec
pop
shrb
inc
pop
mov
out
push
mov
lcall
std
pop
in
xchg
clc
hlt
daa
xchg
ljmp
lock
sti
push
rolb
mov
mov
adc
fs
push
sub
push
mov
mov
and
mov
jae
add
mov
pop
mov
popa
xchg
sub
xor
mov
mov
adc
js
sbb
emms
adc
or
cmp
dec
xor
repnz
ja
adc
xor
pushf
cmp
and
inc
cmp
insl
xor
ret
js
movsb
or
mov
test
hlt
stc
cld
cs
or
movsb
jmp
dec
test
xor
pushf
push
ja
or
daa
sub
adc
xor
adc
cli
fwait
mov
je
repz
scas
sbb
out
lcall
std
xchg
dec
push
in
imulb
icebp
sahf
enter
jno
xor
insl
sbb
mov
dec
mov
adc
aam
mov
repnz
int
sbb
fiadds
and
pop
daa
or
hlt
insl
in
inc
inc
mov
sbb
mov
iret
shrl
sbb
dec
sub
fmuls
pusha
call
shrb
mov
cmpb
sbb
fcmove
xor
xor
cli
mov
xor
dec
aaa
in
inc
push
add
shlb
mov
sub
jne
pop
sub
sbb
adc
mov
xchg
inc
mov
mov
xchg
sub
cld
cmp
fsubs
inc
inc
fdivl
push
add
inc
sub
imul
pop
add
mov
mov
jns
or
pop
inc
sbb
es
add
aaa
jmp
mov
cmp
out
sub
xchg
divb
sbb
or
adc
jl
and
std
pop
rcll
or
mov
cld
je
out
jl
jae
test
mov
in
xchg
fsubs
inc
test
bound
push
mov
loop
repz
loopne
ret
and
and
je
adc
cmp
xor
cmp
mov
inc
imul
ljmp
int3
orl
fdivrp
or
cmp
sub
sbb
push
clc
pop
mov
insb
sub
hlt
test
xchg
sub
or
mov
test
and
out
push
push
mov
pop
cmp
scas
aas
xor
mov
inc
pop
sbb
fisubrs
adcl
xchg
test
mov
cmp
sbb
mov
fs
sbb
movsb
mov
mov
cmp
sbb
inc
or
sbb
faddl
adc
mov
mov
cmp
and
and
push
clc
inc
mov
fs
sbb
movsb
mov
mov
cmp
sbb
and
sbb
lret
mov
in
pusha
sub
jecxz
mov
add
mov
and
out
inc
pop
sbb
fs
mov
cmp
in
sar
add
sbb
sti
mov
sub
jg
stos
in
stos
mov
dec
sub
jecxz
bound
add
clc
mov
inc
dec
sub
sbb
pushf
mov
dec
sub
in
xchg
sbb
dec
xor
inc
inc
aam
jle
sub
jg
stos
in
jbe
ret
dec
sub
jecxz
push
sbb
clc
mov
inc
dec
sub
sbb
mov
sbb
cli
cmpsb
sbb
cwtl
xor
inc
dec
aam
jle
sub
jg
stos
in
nop
mov
dec
sub
jecxz
sbb
clc
mov
inc
dec
sub
sbb
dec
mov
dec
sub
in
movsb
sbb
pop
xor
inc
dec
aam
jle
sub
jg
stos
in
mov
sbb
cli
lods
sbb
clc
mov
inc
dec
sub
sbb
fidivs
cli
fcomps
add
jo
testb
sbb
jp
sbb
stos
in
insb
mov
dec
sub
jecxz
mov
mov
inc
dec
sub
sbb
shlb
fimuls
sub
pusha
push
lcall
lds
cli
lcall
fidivl
lcall
mov
jns
mov
mov
fstpl
cli
insl
cli
mov
cli
test
cli
int
jmp
cli
push
cli
sub
cs
dec
cli
dec
cli
push
outsb
cli
mov
mov
stos
cli
scas
cli
lret
cli
ljmp
cli
sub
das
inc
movsl
jnp
es
daa
fisubs
cli
daa
daa
sbb
pop
sub
sub
sub
pop
sub
jge
cltd
sub
pushf
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jnp
inc
aas
arpl
cmpl
pop
jecxz
add
jle
adc
popf
in
add
inc
arpl
xor
aad
mov
xchg
mov
xor
imul
lea
test
decl
jnp
mov
pop
mov
push
decl
dec
decl
das
push
ljmp
data16
jle
rcr
pop
les
out
repz
mov
mov
sysexit
out
ss
mov
sbb
sub
add
mov
mov
and
sbb
outsb
push
lret
mov
leave
loopne
mov
add
pop
popf
mov
sti
push
inc
sbb
cmpb
sti
jnp
and
push
int3
adc
xchg
mov
ret
cmp
lcall
xchg
in
sbb
dec
sbb
fstpl
inc
and
xchg
pop
adc
sbb
aaa
loop
inc
data16
or
imul
xchg
or
xor
lcall
xlat
inc
mov
cmp
shr
mov
fldcw
adc
fsubl
imul
call
fwait
jo
loope
icebp
in
call
outsb
les
inc
push
xchg
lods
lret
sbb
dec
movsl
inc
inc
jecxz
in
jnp
sbb
arpl
cmp
inc
std
scas
xor
test
dec
mov
xor
sti
cld
xchg
jl
lret
jl
add
mov
jns
mov
popa
insb
cmpsl
push
sub
out
test
cmp
and
mov
add
in
sbb
clc
jecxz
add
or
sub
imul
ficomps
inc
es
clc
dec
bts
inc
es
js
mov
inc
es
clc
dec
bts
inc
es
inc
mov
ficomps
inc
es
clc
dec
bts
inc
es
clc
dec
sbb
sbb
jle
dec
bts
inc
es
clc
dec
bts
cmp
bts
inc
es
clc
dec
bts
clc
dec
imul
ficomps
inc
es
clc
dec
bts
inc
es
dec
mov
ficomps
inc
es
clc
dec
bts
inc
shrb
movsb
sbb
and
aaa
xor
mov
sbb
loop
xchg
ja
xchg
pop
mov
mov
rcrl
sbb
adc
push
jbe
xor
sbb
push
sbb
adc
push
mov
dec
sub
aam
movsb
sbb
jg
inc
adc
xchg
adc
push
sub
pop
sbb
xchg
fcmovbe
mov
ja
shrl
adc
mov
xor
clc
mov
je
sub
ja
aam
xchg
div
ret
mov
cmp
mov
sub
sbb
mov
dec
sub
sar
jb
repz
mov
xor
sub
sbb
hlt
xchg
sub
sub
aam
fs
jg
mov
add
push
outsl
pop
divb
mov
ret
mov
into
adc
js
repz
mov
xor
sub
sbb
hlt
xchg
sub
sub
aam
test
hlt
jg
mov
add
push
inc
pop
insl
add
aam
mov
in
dec
sub
shll
mov
adc
mov
xor
sbb
push
mov
mov
cmp
aam
mov
hlt
pop
sbb
adc
push
sbb
out
mov
es
cli
in
pusha
sbb
js
repz
mov
adc
xchg
scas
xor
sub
sbb
hlt
xchg
sub
sub
aam
push
sbb
jg
mov
add
push
dec
nop
push
outsb
jae
mov
mov
mov
cmp
sub
adc
mov
lods
push
sbb
sbb
xchg
mov
mov
ret
push
mov
dec
sub
adc
adc
mov
mov
mov
mov
cmp
sub
adc
lods
clc
xor
mov
push
scas
pop
pop
dec
test
add
adc
mov
adc
mov
sbb
xor
mov
mov
stc
sbb
xor
aas
test
lods
mov
lods
jmp
lods
push
lods
sub
lods
push
outsb
lods
mov
lods
lret
lods
ljmp
lods
sub
adc
mov
xor
jnp
sbb
pop
in
lock
pop
lock
lock
jge
cltd
lock
lock
lock
stc
lock
lock
push
lock
ds
lock
lock
jle
lcall
je
xchg
jb
adc
push
or
xchg
jno
mov
pop
dec
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jl
mov
insb
sbb
je
dec
dec
xorb
and
xor
into
jo
jae
cwtl
jbe
aam
fdivl
fs
in
test
push
pop
push
lock
out
outsl
sbb
xor
xchg
mov
push
imul
and
hlt
fwait
clc
sub
out
and
pop
dec
xor
int3
dec
jg
or
out
xlat
adc
inc
ljmp
fmul
xor
xor
stc
jno
sti
and
data16
int
mov
repz
in
fsubp
jb
fmull
dec
aaa
sub
bound
in
in
out
lock
adc
jmp
stc
sti
lahf
fldcw
fwait
in
push
nop
jle
jnp
pushf
xor
mov
fnsave
mov
hlt
pushl
pop
enter
lahf
add
push
mov
or
mov
testb
sub
add
sbb
adc
dec
loopne
adc
xor
lods
test
imul
fwait
jnp
shlb
xor
mov
mov
add
pop
push
rorl
es
cli
sbb
dec
out
lods
outsb
sub
test
xor
addr16
mov
xor
sub
sub
and
pop
sbb
dec
cmpb
sub
jl
jae
jp
int3
push
jnp
lock
jb
or
dec
fadd
inc
mov
inc
enter
loop
push
adc
add
gs
adc
xchg
into
cmp
inc
es
clc
dec
bts
inc
es
clc
mov
xchg
ficomps
inc
es
clc
dec
bts
inc
es
clc
dec
bts
inc
push
es
clc
dec
bts
inc
es
clc
dec
bts
cmp
bts
inc
es
clc
dec
bts
inc
sub
lods
ret
mov
ficomps
inc
es
clc
dec
bts
inc
es
clc
mov
xchg
ficomps
inc
es
clc
dec
bts
inc
es
clc
dec
bts
dec
push
es
clc
dec
bts
inc
sub
ljmp
in
pop
or
xchg
in
testb
sbb
mov
clc
sbb
int3
jge
shlb
push
sub
xchg
pusha
mov
sbb
gs
adc
add
popf
inc
pop
iret
fbld
insl
aam
add
inc
inc
or
and
and
pop
mov
test
addr16
enter
mov
xchg
stc
mov
sub
in
jmp
sub
xchg
inc
or
je
add
xchg
sub
cmp
mov
cld
je
push
add
mov
mov
mov
pop
jle
inc
jbe
test
call
and
mov
mull
int3
icebp
es
or
or
stc
mov
pop
outsb
ds
and
ljmp
jb
fcoml
enter
cld
or
cmp
hlt
jns
adc
pop
movsb
jmp
jo
inc
mov
mov
ret
xor
and
mov
icebp
jg
xchg
subb
cli
push
inc
int
cmc
enter
xchg
pop
lret
push
insb
xor
data16
out
jp
incl
pop
dec
mov
cmpsl
inc
and
je
int3
rorl
popa
orb
sbb
sbb
fidivrs
xorl
xor
in
xor
push
mov
mov
cmp
sub
test
lcall
xchg
pop
add
stc
ficomps
mov
popa
pusha
pop
mov
addl
sbb
loop
inc
push
fimuls
mov
mov
insb
xchg
xor
mov
xorb
hlt
int3
daa
sub
stos
adc
repnz
mov
cmc
das
sub
in
sbb
gs
xchg
cmpsl
adc
inc
jo
leave
adc
test
shlb
pushf
xor
jmp
push
and
mov
hlt
fdivs
mov
jmp
add
sahf
and
bound
ja
sub
lods
in
mov
outsb
jl
insb
int
pop
out
cli
ficompl
ljmp
lods
das
in
in
inc
push
and
sahf
repz
add
and
xor
add
lock
mov
push
adc
push
lods
test
outsb
push
jo
mov
scas
sub
jae
test
xchg
or
addl
or
mov
mov
cmpsb
pop
das
or
ljmp
ljmp
sub
sub
loop
pop
mov
out
xor
inc
out
or
loopne
jnp
or
js
stos
ljmp
mov
popa
rcl
sub
jp
xchg
adc
jp
push
push
sbb
movsl
jle
and
pop
push
je
in
mov
pop
andl
notb
mov
and
shrl
addr16
push
mov
push
sbb
int3
test
lcall
pop
sbb
sbb
sbb
sbb
adc
add
arpl
imul
data16
jae
fidivs
cmpsb
inc
mov
movsb
mov
sbb
push
inc
adc
cmp
fadds
test
push
cmp
mov
test
pop
enter
hlt
scas
mov
cmpsl
daa
sub
daa
ficoml
pop
add
push
movsl
in
fdivrl
adc
mov
daa
out
hlt
leave
mov
xor
push
stos
shlb
repz
xchg
push
jb
pop
inc
dec
imul
and
sub
mov
test
inc
fcom
jnp
jg
je
cwtl
negb
jae
and
cltd
dec
or
push
daa
pop
in
rorb
stos
adc
cli
inc
sbb
sbb
sub
int3
dec
cmpsb
in
les
adc
xor
mov
push
xor
cmp
lods
out
pushf
mov
adc
ja
sbb
push
cmp
sub
cmp
xor
mov
push
mov
cmp
xor
push
cmp
cli
adc
test
xor
shll
fwait
sbb
jne
mov
lock
sbb
add
sub
add
pop
push
and
mov
jecxz
mov
lock
dec
imulb
lcall
cmp
pop
popf
daa
sub
jg
aas
mull
lcall
jbe
xor
fdivs
pushf
pushf
mov
and
stc
aaa
test
pop
ss
sub
pushf
inc
insb
add
pushf
dec
and
mov
or
sub
dec
pop
cli
cmp
xor
push
loop
mov
sub
insb
scas
add
sub
dec
sbb
xlat
es
bound
scas
stos
jecxz
aaa
pop
mov
cmp
xchg
sbb
jno
cli
sub
dec
or
push
cmp
mov
push
popf
rcrb
cmpsl
lock
and
pop
push
xor
xor
xor
adc
push
sbb
lret
mov
divb
adc
sbb
xor
sbb
and
pushf
aam
mov
xor
add
mov
jbe
or
add
xchg
push
xor
add
jecxz
add
das
sub
ja
shrb
sub
and
or
lea
mov
mov
js
das
aam
push
sbb
das
out
xor
int
xor
das
test
mov
jbe
push
test
in
pushf
sbb
aam
jecxz
outsb
stc
loopne
ror
jne
repnz
xor
inc
jb
lock
xor
pop
sub
sub
push
sbb
lret
int
sbb
adc
xorl
out
mov
and
std
sub
popf
loop
jecxz
movsb
sub
sub
out
add
dec
sub
adc
movsb
push
sti
sbb
mov
cli
xlat
sub
pop
mov
stc
sub
sub
pop
loopne
cmp
jecxz
mov
jne
ret
inc
divl
xor
pushf
cwtl
and
sub
jg
cmp
cmc
sbb
into
sbb
jmp
xor
aas
push
jge
or
jge
ret
cli
jp
clc
das
jge
test
fisubs
loope
mov
int3
mov
std
cmp
icebp
adc
bndstx
xlat
add
stos
daa
aaa
lret
mov
call
and
sbb
cmp
shl
mov
inc
in
xor
dec
mov
js
sbb
xor
and
mov
adc
sub
mov
fsub
sbb
xor
lock
mov
loope
mov
jle
jbe
stos
push
in
pop
sub
scas
add
cli
outsl
repnz
jecxz
mov
xchg
cld
cmc
fs
push
cmp
and
imul
call
jl
cmpsb
mov
lahf
xor
xchg
incl
xchg
outsl
dec
xor
sahf
imul
popa
and
aaa
clc
xor
sub
adc
sub
pop
cmpsb
mov
sti
pushf
jle
imul
lods
dec
mov
pop
sbb
not
sub
mov
ljmp
push
fstpl
mov
mov
or
xor
inc
ficompl
mov
add
xor
jno
lret
repz
lea
inc
adc
int3
dec
in
fmulp
xor
jmp
fiadds
mov
js
sub
push
gs
xchg
shrl
ds
xlat
mov
aas
jne
js
pop
jo
pop
fldcw
lds
pop
nop
mov
fucomip
xchg
call
ss
pop
arpl
and
in
mov
sbb
out
int3
push
ficomps
fsubl
scas
push
mov
nop
xor
bnd
sub
rcll
inc
pop
xchg
idivl
in
fs
scas
hlt
divb
inc
sbb
xor
arpl
push
xor
mov
sbb
aaa
mov
sub
jb
aaa
clc
xor
cvtps2pd
cmpsw
insl
pushf
jo
arpl
add
and
aaa
add
mov
fidivrs
movsb
add
xchg
sub
cld
imul
inc
addr16
pop
orl
outsl
inc
ja
cmp
icebp
clc
je
sbb
mov
push
xchg
repz
fsave
nop
xchg
outsl
mov
add
test
push
and
movsl
stos
out
out
push
pop
pop
xor
mov
pushf
pop
mov
leave
into
ret
mov
cmc
test
adcl
push
adc
ds
test
sbb
daa
inc
inc
add
add
push
mov
lcall
scas
xor
mov
push
adc
mov
fmuls
and
scas
sbb
daa
pop
sbb
shrb
das
mov
xchg
jmp
pop
add
mov
adc
loopne
push
fdivrs
mov
scas
popa
sub
arpl
dec
outsb
and
shll
inc
mov
pushf
je
out
push
stos
mov
adc
mov
daa
add
test
sarb
pop
push
stos
in
adc
jae
lock
add
jl
int3
test
imul
jno
outsl
xchg
push
jmp
lea
icebp
outsl
adc
std
pop
ret
sub
add
and
loopne
data16
xor
aam
iret
imul
mov
pop
sbb
or
call
call
and
and
cmp
and
rolb
xchg
dec
in
fs
push
adc
inc
fs
adc
hlt
ljmp
pushf
je
inc
jb
pop
push
lock
sbb
add
pop
ja
pop
mov
repnz
xor
je
inc
out
or
je
inc
xchg
repnz
adc
xor
js
hlt
add
sbb
xchg
fwait
fwait
daa
stos
sub
and
sub
daa
out
add
push
or
in
ss
mov
sub
es
aad
push
sub
or
insl
mov
lret
sbb
add
cli
xor
and
in
cmp
pop
dec
lea
adc
stos
xor
cmc
lock
insl
sub
cmp
subl
repz
lds
in
sub
sbb
je
into
cmp
sub
shlb
mov
aaa
jmp
lret
aaa
push
and
sub
mov
repnz
or
dec
jmp
sar
int3
sub
or
xorl
xchg
jmp
xor
pop
add
mov
ret
andl
xchg
xchg
sbb
inc
mov
clc
mov
outsb
into
cwtl
mov
mov
mov
hlt
call
movsb
add
mov
add
sbb
fists
jae
push
adc
clc
jne
push
call
in
mov
add
daa
inc
dec
sub
lods
dec
jl
pop
sbb
shlb
xor
xchg
xor
inc
int3
pop
pop
out
pop
fucomp
and
sub
mov
test
scas
ja
sti
test
sub
sti
jle
popl
sub
pop
pushf
pop
dec
call
fsubp
and
out
xchg
das
sarb
mov
repz
sbb
xor
sub
daa
pop
in
inc
insl
repz
sub
xor
jle
inc
or
shlb
insb
lock
out
lock
sub
push
lret
mov
test
daa
lock
jmp
cmpsb
sub
pop
mov
repnz
outsb
mov
addl
lods
mov
out
adc
cli
icebp
and
movsb
icebp
push
pop
xor
imul
hlt
add
cmpsl
test
call
cs
adc
mov
and
adc
inc
fs
and
add
movsl
pop
call
mov
jne
inc
xor
faddp
daa
dec
out
loope
repnz
add
adc
jns
add
sbb
and
arpl
xor
mov
pop
lods
mov
sti
sub
daa
faddp
xor
mov
leave
sbb
iret
dec
xchg
ds
popa
mov
cli
mov
out
xchg
or
dec
mov
sub
and
pop
daa
fdivl
movsb
add
mov
imul
pushf
je
test
jl
ljmp
jge
jle
test
mov
fwait
leave
mov
mov
add
test
insb
ficomps
xor
ficoml
add
sahf
and
push
std
mov
xchg
call
jb
sub
jmp
dec
mov
mov
scas
out
fwait
lods
fcmovnbe
hlt
xor
insl
add
inc
jl
stc
xor
aam
lock
pushf
sarb
add
fnstsw
js
ljmp
fbld
add
cmpsb
hlt
xchg
fisubrl
int
sbb
cwtl
lret
mov
lcall
mov
xchg
cmp
push
xchg
adc
inc
mov
repz
adc
stos
je
testb
sahf
imul
inc
rclb
xchg
pushf
int
lods
push
je
jle
jl
adcl
jg
sbb
dec
and
daa
lahf
xchg
outsl
fs
push
pop
or
icebp
inc
dec
cs
inc
mov
cmpsb
or
jmp
mov
mov
roll
or
sbb
add
sbb
xor
push
inc
cmc
mov
push
cmp
mov
adc
mov
adc
and
push
enter
push
fwait
mov
add
mov
sbb
mov
scas
clc
stos
jl
push
inc
cs
scas
pushf
sbb
clc
fmull
popa
xchg
pop
sub
add
scas
sub
clc
pushf
cmp
sub
and
mov
push
sbb
sub
insb
or
or
lock
inc
sub
xchg
pusha
jno
jbe
inc
aas
adc
in
adc
push
and
inc
pusha
jbe
out
call
adc
lret
xchg
int3
cld
cmp
jle
xchg
into
ret
xor
sbb
cld
aaa
dec
sub
sub
nop
xor
lods
or
sarl
stos
fisttpl
lcall
hlt
push
insb
out
adc
ficoms
pop
xchg
or
in
shrb
inc
jg
adc
add
mov
movsb
xchg
mov
cmpsb
mull
add
sbb
fs
data16
inc
insl
nop
push
fdivs
clc
xchg
out
mov
jb
adc
dec
daa
mov
hlt
or
mov
push
data16
sub
mov
xor
mull
sub
js
adc
push
dec
dec
jne
and
push
add
fnop
mov
lret
sub
iret
adc
adc
enter
sub
cmp
xor
mov
xor
stos
xor
xor
xor
adc
pop
ret
dec
jne
xor
pop
jg
mov
sti
adc
mov
or
daa
ret
push
inc
mov
cmpl
fisubrl
adcb
xor
test
outsl
cmp
inc
pop
leave
xchg
les
mov
and
sbb
movsl
jmp
sub
and
into
mov
sub
mov
xchg
aas
sbb
sub
push
mov
and
mov
sub
aaa
int3
xchg
sub
testl
cs
jb
mov
adc
lods
mov
sub
and
cmp
mov
sub
je
ret
daa
lret
xor
jge
push
xchg
cmpsl
and
push
in
mov
add
and
or
pop
push
subb
mov
ljmp
lret
cmp
lea
jno
mov
fcomp
and
cmp
xchg
sub
push
stos
mov
mov
inc
nop
cwtl
xchg
xor
dec
cmp
or
insl
pop
fwait
bound
push
test
xor
mov
out
fimuls
fcom
imul
and
sbb
push
test
and
and
jb
into
or
mov
push
xchg
jb
hlt
adc
shll
jbe
popf
or
mov
ljmp
in
imul
sbb
popf
mov
xchg
xchg
pop
fldcw
dec
jo
cmp
int
mov
cmp
xor
ljmp
iret
add
repz
dec
mov
fcompl
sbb
roll
push
dec
xor
xor
sub
jmp
sbb
mov
fsubs
int3
add
push
ret
jp
cmp
mov
clc
push
and
mov
fst
and
sub
leave
loop
ds
mov
adc
icebp
out
fstl
and
sub
pushf
out
mov
fisttps
fwait
cld
jbe
arpl
pop
pusha
out
das
cmp
push
sbb
insb
fcoml
sarl
mov
xchg
inc
lcall
and
mov
add
ret
mov
adc
mov
stos
xchg
insb
cmp
or
call
sub
push
sub
sbb
adc
lret
dec
or
push
xlat
jge
dec
scas
dec
jmp
cmpsb
jae
xor
aas
lcall
push
mov
inc
mov
ret
or
cs
daa
sbb
mov
enter
inc
inc
stos
mov
mov
push
int3
outsb
fdiv
scas
sub
dec
or
cmpl
stc
fldenv
or
in
jae
adc
stc
js
pop
add
les
xchg
add
sbb
scas
add
mov
int
cli
leave
jae
pop
dec
cmp
pop
int
test
sub
sbb
aaa
std
outsb
js
jp
jle
fadd
loopne
ljmp
jecxz
loopne
scas
pushf
add
ljmp
movsl
jbe,pt
pop
push
inc
out
inc
cwtl
sub
and
mov
mov
fcompl
sbb
out
stos
jb
sbb
push
call
push
jo
sub
lods
aaa
jo
dec
sub
mov
popf
in
push
ss
sbb
adc
aam
mov
push
mov
push
cld
shrb
lods
pop
aas
sbb
imulb
data16
jmp
sbb
sbb
jmp
xorb
dec
das
fisubl
sub
mov
push
sbb
adc
dec
cmp
xlat
adc
cmpl
out
mov
jno
inc
movsl
xchg
popa
mov
or
sub
push
cmp
in
stc
sub
mov
sbb
and
sub
in
cld
rolb
jmp
sbb
and
mov
adc
cs
push
sub
mov
jge
sub
mov
adc
push
mov
loop
das
scas
test
push
je
cmc
orl
daa
add
pop
mov
mov
push
cltd
testb
and
or
sbb
and
and
mov
push
scas
ret
enter
and
vpmaxsb
mov
sbb
xchg
inc
push
rcrl
je
hlt
and
sub
sub
add
inc
sub
inc
cmpsb
fistps
cmp
out
bsf
push
and
out
dec
int3
lcall
sub
add
xor
mov
fdivl
and
xor
push
adc
fwait
aaa
add
and
shlb
xchg
testl
cmpsb
push
xor
or
cmc
xlat
jmp
repz
xor
jge
pop
sbb
add
add
enter
in
push
inc
xlat
ret
mov
das
mov
adc
push
je
adc
stos
insl
mov
fisttpl
pop
es
cld
push
jae
mov
add
mov
mov
sbb
cs
and
pop
pop
sti
mov
sbb
test
out
cmpb
mov
movsb
sbb
imul
pop
repz
or
sub
mov
popf
mov
loop
aam
dec
insl
sub
cmp
jp
pusha
pusha
xchg
inc
ljmp
bound
add
mov
xor
lock
pop
push
out
fadd
divb
rclb
mov
enter
sbb
pop
and
aas
enter
fmuls
xor
mov
daa
sub
adcb
arpl
cld
sub
pop
add
sti
repz
out
imul
cs
sahf
stc
dec
xor
ret
mov
lret
pushl
ja
aaa
hlt
dec
js
adc
inc
cmp
hlt
sub
inc
out
cmp
add
ret
arpl
and
arpl
mov
xor
loope
cld
es
jnp
push
cld
test
ss
sbb
pop
addb
push
cli
xor
adc
enter
mov
dec
shrb
cmp
repz
push
dec
mov
sbb
imul
movsb
inc
jns
sbb
dec
push
or
sti
sbb
sbb
les
stos
lods
lcall
lret
xchg
adc
rep
fdivs
adc
sti
push
test
adc
insb
sub
int3
jae
pop
sub
xlat
je
pop
stos
jl
out
mov
out
testl
sbb
add
jmp
sub
cld
int3
sarl
dec
inc
je
mov
ljmp
pushf
test
mov
int
fimuls
sub
mov
addr16
outsb
lret
ret
xor
adcb
cs
pop
add
lcall
les
or
pop
fwait
inc
data16
push
xchg
xchg
adc
subl
int3
sbb
cmp
adc
jo
or
inc
adc
xorl
inc
xchg
xor
push
pop
in
mov
call
clc
loope
mov
jle
popa
std
cmpsl
shlb
nop
cmp
xlat
test
sub
cmp
jnp
sub
daa
stos
enter
mov
dec
mov
test
cmp
in
xor
test
xchg
test
sti
xlat
daa
mov
mov
fidivs
jl
fucomip
stos
daa
data16
sub
or
xor
add
das
mov
sbb
add
adcb
jle
in
xchg
test
pop
sbb
fistl
data16
dec
xor
lret
inc
sub
inc
or
add
xor
loope
cmp
jl
in
xchg
hlt
xor
negl
add
or
dec
sbb
sbb
adc
sub
scas
xchg
mov
jecxz
lods
das
fcmovu
addl
cwtl
out
iret
adc
cwtl
pushf
adc
arpl
or
call
stc
mov
pop
sbb
xchg
mov
mov
aaa
xchg
sub
pop
sub
std
stc
xor
or
int3
sub
xlat
stos
mov
inc
pop
mov
mov
shrl
cmp
xor
int
sahf
xchg
inc
adc
daa
shrl
and
lock
mov
adc
stos
out
adc
cltd
stos
add
xchg
or
fidivrs
xor
mov
stos
cli
sbb
push
xor
fisubs
ljmp
fdivl
cld
stos
lods
sbb
mov
call
je
mov
pop
cmpsl
popf
cli
adc
adc
jl
iret
lods
xchg
mov
test
call
sub
pop
test
inc
daa
add
pop
lods
mov
pop
xor
pop
cmpsb
mov
pop
cltd
loopne
or
cmpsb
sbb
mov
scas
sbb
adc
mov
xorb
xor
sarl
lods
sbb
pop
dec
xchg
jmp
out
rcrl
sub
push
imul
repnz
stos
sbb
lock
sub
je
loope
xchg
lods
or
sbb
xchg
sub
cld
and
mov
call
xor
les
mov
movsl
orl
xor
sbb
push
sbb
mov
test
mov
cmp
and
and
aas
or
ret
popf
stos
ficomps
push
faddp
xor
dec
and
testb
stos
dec
pop
sbb
les
pop
divb
mov
jp
sbb
les
jns
negb
mov
push
pop
sbb
loopne
jns
divb
mov
pop
pop
sbb
fisubs
jns
mulb
stos
pop
pop
sbb
pusha
sbb
pusha
sbb
pusha
sbb
pusha
sbb
pop
sbb
incb
repnz
popf
aad
jae
sub
in
push
sbb
outsb
cmp
pop
sbb
clc
add
idiv
sbb
clc
dec
push
mov
inc
and
test
fcoms
outsb
add
test
pop
jns
mov
out
lret
inc
test
sbbb
test
dec
add
sub
fcoms
inc
insl
or
xlat
test
lret
jecxz
inc
test
lret
jecxz
aas
fisubs
aas
lret
test
mov
jecxz
xor
fdivrp
dec
xorb
pop
daa
stos
pusha
cmpb
pusha
ret
push
xor
fdivrp
xchg
dec
dec
daa
stos
pop
cmpb
cld
ret
jp
jae
fdivrp
pop
inc
add
cli
push
jbe
stos
jp
mov
sbb
ret
pusha
xor
fdivrp
dec
dec
loop
stos
dec
cmpb
loop
jo
jae
fdivrp
pop
dec
bound
stos
loop
mov
sbb
ret
jb
jae
fdivrp
jbe
pop
daa
stos
je
xor
inc
andl
scas
insb
in
sbb
jg
and
sub
add
mov
dec
fs
cli
pop
cmpb
push
fdivrp
pop
dec
fisubl
stos
ret
notb
nop
ret
lock
fdivrp
pop
dec
push
daa
stos
push
cmpb
pop
ret
fdivs
jae
fdivrp
testb
stos
testb
movsb
pop
mov
pushf
dec
cli
lret
sbb
int3
and
insb
cmpsb
pop
fwait
dec
fwait
xor
negb
hlt
push
cld
dec
cmp
xor
subb
xor
in
dec
mov
pusha
cmp
gs
sbb
mov
repnz
movsb
imul
sbb
in
mov
xchg
sbb
sbb
jb
sbb
xchg
orb
loope
icebp
fidivrs
pop
loop
pop
cmp
inc
sub
shlb
sahf
loopne
xchg
outsl
movsb
adc
mov
sbb
xor
xor
jmp
data16
movsl
fisttpll
add
jae
in
xchg
pop
out
adc
mov
sub
sbb
push
add
mov
stos
je
stos
in
sbb
cmp
in
cmp
pusha
jmp
jecxz
cmp
xor
cmpsb
inc
jnp
daa
xchg
out
dec
pop
sub
push
mov
fs
addr16
lock
aas
mov
movsb
adc
inc
notb
xchg
and
ja
mov
add
pop
les
int3
or
pop
fdivs
sub
imul
ret
and
add
cld
xor
out
ret
aaa
xor
insb
aaa
xchg
loop
mov
ljmp
repnz
mov
enter
push
daa
das
insb
xchg
jns
sub
jge
sub
cmp
and
sbb
pop
pop
or
mov
das
subb
xchg
js
in
loopne
rcll
mov
jg
daa
jmp
cmp
xor
lds
xor
dec
inc
imul
das
inc
fmul
leave
xor
imul
cmc
and
and
mov
fcomps
addr16
pop
hlt
push
das
mov
daa
fadds
cli
daa
inc
mov
scas
sar
sbb
or
pop
jae
fxch
jge
aas
idiv
sbb
shr
in
mov
subb
dec
sbb
jno
icebp
add
adc
xchg
adcb
push
add
add
jg
cmp
shlb
out
jno
les
hlt
bnd
ficomps
clc
arpl
loopne
sbb
outsb
je
xor
sub
pop
mov
shlb
sub
mov
cld
jg
imull
out
jno
ret
outsb
testb
sub
push
es
mov
cwtl
outsb
pop
mov
sub
je
fisubrs
out
mov
pop
gs
mov
mov
arpl
cmp
outsl
jno
sbb
push
addr16
xchg
mov
inc
or
sub
mov
cld
je
std
mov
das
sbb
clc
popa
mov
repnz
das
sub
scas
scas
in
lods
stos
xchg
and
mov
inc
mov
clc
mov
lret
test
cld
inc
cmp
repnz
clc
sub
out
notb
repz
fmuls
mov
int3
daa
xor
and
and
xor
mov
cld
add
jne
push
mov
rorb
shrb
int3
adcl
popf
pop
jb
jae
int3
lds
sar
out
aad
icebp
push
cwtl
mov
inc
pushf
movsl
test
mov
jo
mov
arpl
imull
adc
and
inc
lret
mov
rolb
pop
pusha
add
lds
xchg
test
push
iret
mov
xchg
fs
cmp
inc
add
sbbl
sahf
ja
add
stc
cwtl
fistpl
mov
dec
fmull
xor
es
sbb
aas
xchg
bound
test
test
mov
pop
fadd
mov
xchg
fwait
cmp
shll
xor
add
and
cs
pop
add
fsubr
jmp
sub
jp
adc
fwait
jnp
and
bound
mov
and
shlb
mov
in
cmpsb
sbb
xlat
pop
xor
pusha
add
hlt
lret
sub
cmp
aam
or
adc
lods
in
daa
adc
pop
das
mov
mov
das
sub
loop,pt
add
sbb
mov
je
lods
pop
adc
test
test
pushf
sub
arpl
jcxz
xchg
int
clc
fs
sbb
jge
les
sbb
xchg
scas
pop
lds
add
js
sbb
scas
cmp
add
pop
dec
push
punpckhwd
stc
xchg
je
sub
adc
pusha
aaa
cmpsb
xchg
mov
sbb
subl
fld
cli
stos
push
lock
pop
jnp
sbb
push
mov
sti
xchg
fisttps
mov
sub
aas
enter
dec
ret
mov
push
insb
jae
adc
dec
jo
pop
jne
cmpsb
xchg
test
push
xlat
fiadds
xchg
mov
cmc
push
loop
ficompl
jnp
mov
sbb
in
call
and
pop
and
rol
bound
ja
daa
addr16
mov
and
fimull
mov
inc
scas
mov
aad
or
xor
ret
ret
add
sbb
mov
push
jns
xorb
mov
insl
inc
andb
dec
dec
leave
mov
inc
fistpll
aad
or
sarl
dec
cmp
and
sbb
call
scas
andb
sbb
pop
sbb
fs
xor
ds
or
test
push
clc
sbb
xchg
faddp
mov
xor
mov
sbb
pusha
or
jno
lods
mov
imul
cli
sbb
sbb
idivl
pcmpeqb
sbb
nop
cmp
mov
and
fs
sbb
mov
pop
jge
push
jb
cltd
repnz
insb
pop
clc
dec
lods
adc
adc
div
add
dec
mov
add
stos
jle
sub
call
pop
pop
addb
adc
inc
pop
dec
shlb
sbb
ja
xchg
into
adc
pop
jg
rcll
out
mov
adc
ret
mov
dec
lods
je
out
adc
jg
mov
sub
add
mov
mov
and
sbb
das
lcall
cmp
pop
loope
sbb
pusha
nopl
dec
xor
fdivrp
pop
dec
ficoml
outsl
xor
sbb
cli
insb
adc
test
or
adc
mov
ljmp
xor
push
mov
sub
div
ret
mov
int
pop
push
ljmp
je
out
ds
or
mov
fmuls
sub
movsb
jge
insl
rolb
movsb
ds
pop
push
jns
movsb
negl
lds
jge
repz
movsb
dec
dec
lds
inc
xor
fmuls
kaddb
je
sub
mov
mov
sub
std
hlt
imul
ds
aad
dec
xchg
in
int3
ficoml
stc
out
jae
xchg
sub
push
pusha
test
adc
int
int
sub
jo
or
xchg
iret
jge
insb
fwait
ds
sub
mov
pop
jae
cltd
xchg
lods
je
pop
push
loope
stos
cli
mov
push
jo
fdivrs
ljmp
xor
clc
movsb
push
mov
je
int3
fcomps
sub
jno
loopne
or
cmp
cmp
or
dec
sbb
jns
jne
jns
cmpsl
daa
sbb
xchg
inc
es
xchg
pushl
jne
sbb
sub
add
adc
icebp
sub
and
jbe
in
std
push
inc
das
add
jnp
aas
out
xchg
leave
dec
fwait
sar
aam
cmp
dec
faddp
cmp
or
es
add
cmp
add
lea
jb
shrl
ja
testb
mov
add
hlt
stos
push
mov
fadds
cmp
add
repnz
xor
cmc
sahf
negb
mov
rcl
or
or
xchg
test
dec
jle
xor
fdivrp
pop
dec
pop
daa
xchg
xchg
pop
push
rclb
fisubrs
cmp
insb
xchg
adc
mov
jae
fdivrp
push
fs
lret
jp
dec
test
in
mov
cmp
aam
jg
xchg
hlt
notb
inc
in
adc
sti
add
dec
out
add
stos
in
add
add
cli
xchg
mov
test
inc
or
mov
cli
notl
stos
rcll
mov
cmc
mov
repz
sbb
xor
sbb
sub
test
mov
daa
sub
lret
mov
loope
mov
pushf
imull
stos
outsb
lea
jge
xor
sub
aaa
lahf
cmp
movsl
movsb
fbstp
nop
les
pop
test
xor
cmp
push
les
mov
dec
push
insb
cmpsb
bound
repz
inc
addr16
scas
add
or
adc
negb
jge
cwtl
ret
cmp
aam
rcll
insb
jae
and
jmp
and
aam
sahf
es
mov
fdivrp
jb
fs
stos
jb
leave
mov
push
nopl
mov
gs
jb
mov
movsb
sub
fistl
ret
mov
cmp
pushf
cmp
adc
stos
ljmp
mov
out
adc
sar
mov
sbb
mov
mov
imul
and
cmp
outsl
push
mov
xchg
jnp
packssdw
inc
ss
jle
jne
xor
pop
nop
mov
aam
ja
and
cmp
mov
lahf
adc
loopne
lcall
idivl
sub
rorl
fisttpl
rorb
dec
sbb
daa
outsl
test
pop
rol
pop
jecxz
push
fcompl
mov
outsb
scas
cmpsl
add
fldcw
arpl
pop
pop
add
inc
xor
movsb
cmp
out
sahf
lds
sbb
mov
sbb
decl
inc
push
pop
xchg
sbb
cmp
pop
hlt
jl
pushf
sbb
es
pop
rorb
in
cmp
cmp
cmp
call
sbb
test
mov
push
mov
scas
inc
mov
jle
je
fsubs
xlat
add
pop
fsubs
clc
rorl
add
in
or
cmp
cmp
mov
cmp
inc
and
xor
push
lds
inc
pop
xor
je
ret
xlat
xor
fcmovb
and
xlat
rcrl
cmpb
shlb
mov
adc
adc
jnp
add
not
icebp
divb
sbb
je
in
bound
sahf
adc
mov
fwait
sti
stos
inc
adc
sti
adc
push
mov
fcoml
je
int3
lods
loop
in
or
sub
xchg
test
sbb
cmpsl
rcl
sub
mul
movsl
insb
sub
lock
scas
mov
sbb
in
or
lret
adc
mov
lock
mov
add
sbb
sub
add
aaa
sub
and
lds
leave
sbb
sub
ds
and
jg
cli
in
sbb
push
testb
push
pop
xchg
mov
mov
or
push
pop
ret
mov
hlt
xchg
stos
popf
add
jne
sub
dec
and
cwtl
xor
fidivl
pop
aaa
je
fs
data16
pop
mov
icebp
repnz
jb
sbb
cmpsl
icebp
enter
arpl
dec
push
call
xchg
adc
inc
push
push
adc
repz
gs
add
pushf
fcoms
mov
pop
jl
lret
dec
inc
xor
mov
xchg
lret
jae
mov
sbb
mov
add
mov
filds
out
stos
les
dec
nop
xor
call
cld
lds
mov
rcrl
iret
push
call
pop
or
cmp
jg
cmp
mov
movl
jle
repnz
popa
sub
dec
cmp
lods
mov
rolb
nop
movsb
cld
pusha
cltd
dec
cli
or
outsb
sub
mov
je
test
in
repz
ss
daa
popf
and
fwait
add
mov
ficompl
in
bound
xchg
adc
das
daa
sbb
add
adc
push
repz
mov
push
jnp
cli
push
aam
mov
pop
ret
sub
mov
adc
sub
das
adc
scas
sbb
sub
idiv
sbb
mov
xor
pop
adc
inc
cli
push
add
je
fs
movsl
orb
or
rcll
fcoms
sbb
pop
dec
xchg
sbb
clc
cmp
int3
pop
xchg
jg
dec
mov
mov
sbb
into
and
repz
xor
out
mov
cltd
into
pop
fcoms
cwtl
sub
cmp
es
dec
fldenv
dec
xor
jg
mov
sub
arpl
out
push
cli
cmp
in
imul
adc
sub
sbb
sub
je
clc
mov
dec
or
cmc
dec
cli
push
or
popa
repz
imul
rolb
dec
clc
sub
sbb
mov
cli
jns
out
lcall
sub
sbbb
aam
jp
leave
xorb
repnz
bound
clc
jne
daa
mov
sub
pop
outsl
and
insl
adc
sub
mov
sbb
int
imul
aam
ss
dec
push
add
add
clc
mov
inc
xchg
push
lcall
rcrb
xchg
stos
int3
pop
cli
sti
adc
scas
cs
mov
mov
pop
fcomp
andb
pop
push
sub
mov
push
fsubrs
jo
cmp
adc
negb
mov
sbb
int
testl
cmc
xor
adc
std
sbb
sar
enter
xor
add
pop
pushf
faddp
dec
mov
jmp
pop
cmp
hlt
jl
pop
dec
mov
and
adc
pop
pop
mov
ret
lock
cmp
pop
xchg
mov
in
dec
mov
lods
pop
scas
mov
mov
xchg
bound
sbb
mov
dec
adc
mov
mov
fwait
mov
sub
xor
icebp
and
sbb
and
push
push
jns
cmp
cmp
sbb
sbb
int
call
ret
lds
stos
or
mov
xchg
addl
pop
dec
jmp
dec
push
sub
mov
cli
lret
and
dec
sbb
push
sub
add
pop
sub
sub
sbbl
out
nop
push
fs
and
xor
in
inc
xor
ret
cmp
in
sbb
xchg
scas
ss
sub
mov
pop
std
je
fs
enter
cmp
fs
fdiv
mov
adc
idiv
sbb
std
ret
mov
mov
enter
xor
mov
push
pop
cmp
in
aas
xchg
scas
sub
dec
add
shrb
pop
cmp
cmp
dec
loop
mov
loopne
mov
sbb
sbb
push
clc
push
in
push
test
mov
in
sbb
xor
test
outsb
push
mov
and
mov
xor
negl
rolb
mov
adc
lcall
cmp
aam
iret
jge
stc
dec
pop
sbb
daa
and
jns
push
aaa
add
cld
mov
mov
push
movsb
mov
sarl
xor
xor
sbb
in
jno
test
les
clc
jl
xor
fcomps
and
sbb
outsl
in
mov
es
jecxz
ja
jle
pop
mov
lret
push
sub
sub
enter
pop
test
sbb
sbb
dec
jae
loopne
mov
stos
fs
les
mov
sbb
sbb
sbb
sbb
sbb
pop
mul
sbb
push
jbe
sbb
sbb
pop
neg
sbb
jno
xor
or
pop
and
sbb
sbb
fisubl
mov
stos
fidivs
inc
es
sub
dec
pop
add
stos
sbb
sbb
sbb
sbb
sbb
cs
stos
sbb
sbb
sbb
sbb
jo
sbb
jae
mov
inc
dec
or
add
adc
mov
or
xor
cli
sbb
push
sahf
in
sbbl
jmp
or
add
xchg
add
test
loop
or
fs
dec
add
sbb
ret
mov
in
inc
mov
xchg
rolb
imul
xorl
sbb
pop
popf
ret
sbb
jmp
dec
or
add
sbb
pop
sbb
movsb
sbb
xor
stos
xchg
ljmp
xchg
jae
push
adc
pop
adc
pop
push
adc
pop
xchg
and
pop
adc
testl
mov
push
xchg
mov
mov
pop
push
rcrb
adc
imul
jge
pop
clc
push
inc
dec
jns
das
cmp
dec
adc
fs
pop
ljmp
call
and
jle
pushf
cmp
test
mul
inc
outsl
or
pop
dec
pop
add
adc
imul
inc
aas
or
fs
or
cwtl
fcoms
xchg
loope
cld
and
jae
insb
cltd
mov
imul
jl
dec
rclb
add
aas
test
inc
shlb
xor
call
push
mov
sbb
shll
cld
dec
jle
cwtl
cwtl
enter
fisubs
xor
jge
cmp
pop
negl
data16
inc
push
daa
ljmp
add
jge
lret
mov
push
inc
arpl
pop
mov
xor
lods
jne
and
mov
pop
or
call
and
in
mov
mov
pop
pop
int3
and
sbb
adc
sbb
fsubrl
daa
dec
dec
orps
dec
es
sbb
fsubrs
mov
test
cmp
sub
int3
sbb
sbb
arpl
push
shl
test
lods
sbb
adc
shlb
push
movsb
and
or
mov
dec
je
cmp
and
fs
or
inc
add
lock
lret
mov
stos
xor
ret
in
int3
jecxz
aaa
subb
hlt
or
lret
sbb
fisttpll
stc
sbb
add
insb
xor
repz
gs
data16
int
mov
mov
fsubrs
pop
xchg
cmc
sbbl
add
insb
sub
add
sahf
hlt
or
jl
fcompl
out
xlat
cmp
cmp
mov
and
pop
pop
xor
add
das
imul
sub
mov
xchg
xor
mov
gs
adc
add
das
mov
mov
sbb
xor
ror
fsubs
hlt
pop
stos
je
outsl
add
in
cmp
sub
in
jae
fsubrl
mov
sbb
cmp
rorb
loopne
dec
cmpsb
loop
pop
inc
fxam
fs
cmp
out
lret
shlb
and
push
aaa
out
aaa
xor
je
sub
jo
mov
mov
mov
popa
sub
cmp
or
mov
mov
pushf
jae
sub
cmp
fdivr
shlb
sub
mov
mov
mov
pushf
cli
lcall
ficompl
pop
sub
fwait
mov
out
je
and
mov
out
loopne
pop
mov
cmp
xor
sbb
mov
sbb
pop
incb
xor
cmp
sbb
into
jl
data16
pop
and
push
xor
ret
lahf
xor
lock
xor
sti
sbb
dec
enter
adc
inc
mov
sbb
jp
mov
dec
int
xchg
dec
aam
clc
dec
mov
dec
mov
push
sub
xchg
dec
sub
int3
jae
pop
les
dec
int
sub
sbb
xor
in
sti
sbbl
dec
movsb
or
out
fidivrl
clc
xor
lods
rclb
lahf
xor
or
mov
std
or
sbb
mov
sub
leave
or
sub
push
sbb
jecxz
mov
js
std
pop
pushf
sbb
cld
mov
adc
dec
and
les
jb
sbb
mov
int3
adc
faddl
sbb
push
repz
mov
pop
movsb
lods
push
push
hlt
sahf
scas
insb
sbb
cmpl
lahf
mov
xor
cmc
mov
add
repnz
arpl
sub
xchg
pop
jnp
add
dec
es
adc
addl
and
mov
inc
movsl
mov
ljmp
xor
cmp
and
or
cld
jle
sub
pop
mov
sbb
sarb
jl
mov
pop
cmp
cmp
dec
cltd
cltd
aam
test
add
fiadds
movsb
xchg
mov
rcrl
in
pop
jecxz
out
mov
add
jnp
cli
shr
add
and
in
push
mov
fildl
repz
jmp
sub
mov
movb
push
out
dec
xchg
stc
psrlq
enter
sub
xor
test
adc
popa
sbb
push
imul
or
cmp
cmc
test
das
jbe
movl
dec
xchg
mov
lret
jae
mov
aas
jbe
test
adc
cmc
mov
lock
adc
sub
push
xor
arpl
cmpsb
nop
jecxz
push
mov
pop
not
ljmp
lods
xchg
jb
sbb
xor
mov
push
push
insl
mov
add
dec
adc
ds
mov
adc
mov
cmpsl
push
shrb
idiv
mov
pop
clc
sahf
pop
xor
je
cmp
das
add
loopne
inc
jle
lock
movsb
movsl
les
push
lock
push
mov
subl
fdivrl
sub
cmp
push
xor
sbb
mov
add
sub
fwait
inc
mov
imul
or
daa
and
cmp
dec
out
divl
sbb
in
push
cwtl
test
sbb
pop
mov
xor
push
xor
dec
pushf
mov
push
jae
testb
xchg
movsb
in
dec
xor
mov
outsb
pop
dec
xor
addl
mov
shlb
stc
imul
jns
push
out
mov
pop
push
lahf
cmp
cmp
stos
lea
sbb
sub
outsb
cmpsl
xlat
sbb
loop
sub
aam
ja
cmpsb
mov
sbb
dec
jno
and
daa
loop
and
dec
cli
add
pop
call
sub
mov
aaa
lret
lock
push
decl
pop
loopne
rorb
in
add
inc
mov
jns
push
outsb
sbb
test
iret
pop
push
imull
jle
out
lcall
fmul
sub
mov
sub
movsb
es
cmp
mov
fidivrl
xor
in
cwtl
ds
negb
inc
pop
stos
ljmp
add
sbb
or
dec
mov
sar
movsb
push
mov
adc
stos
push
cld
fs
std
int3
lcall
cwtl
sbb
nop
sarl
mov
fwait
push
sbb
and
cwtl
fucomip
fisubrl
mov
push
add
sub
out
xor
bound
xchg
add
mov
jo
pusha
mov
sbb
dec
lret
mov
test
dec
pop
or
cltd
popa
js
stos
adc
xchg
imul
or
mov
outsb
sbb
imul
stc
dec
andb
jno
push
cmp
in
sbb
sub
add
scas
arpl
loop
push
test
sub
pusha
out
fisttpl
push
arpl
mov
leave
in
fdivrl
pushf
and
cli
xor
mov
scas
test
cli
and
stos
push
cmp
add
jns
mov
xchg
push
fisttps
adc
push
popa
or
jg
jb
stos
xor
les
sub
add
jecxz
sub
pop
in
sbb
sub
hlt
int3
gs
and
mov
add
jl
mov
cmpsl
sbb
mov
sub
lds
fiaddl
push
adc
sbb
mov
mov
mov
jmp
or
sub
sub
dec
pop
sbb
insb
xchg
jns
mov
xchg
lods
adc
in
and
mov
or
sbb
fs
and
lds
lret
mov
jmp
or
sub
sub
dec
pop
sbb
insb
sbb
int3
ret
mov
and
pop
dec
inc
or
sbb
mov
adc
ficompl
add
jmp
or
mov
sub
dec
dec
sub
insb
stos
mov
imulb
in
testb
pop
mov
sti
pop
push
push
dec
add
push
dec
mov
dec
sub
jmp
pop
sub
pop
sbb
sub
dec
jg
inc
insb
push
insb
adc
xchg
lods
pushf
test
mov
dec
lock
or
jae
push
dec
mov
insb
sbb
sub
stos
aas
mov
sub
jmp
jnp
sbb
dec
push
mov
inc
and
fcoms
lods
je
int3
dec
sub
in
out
mov
adc
sbb
fdivrl
or
lret
out
adc
dec
sti
stos
pop
sbb
push
mov
or
mov
adc
fnstcw
pop
or
add
jbe
sbb
jp
fnstcw
dec
shrb
mov
cmp
sub
sub
insb
sub
sub
lods
in
stos
int3
pop
sbb
in
inc
mov
pop
add
or
sbb
ljmp
push
sub
jmp
push
clc
or
mov
sub
je
dec
sub
insb
stos
mov
repnz
inc
mov
scas
in
testb
dec
and
sbb
fdivrs
in
in
lret
and
jmp
jl
les
call
sbb
jmp
sub
push
test
adc
sbb
xchg
in
insl
testl
int
in
in
testl
testl
testl
sbb
dec
adc
lret
movsl
jecxz
sub
sub
sub
sub
sub
sub
sub
sub
sub
pop
sub
jge
cltd
sub
sub
sub
sub
sub
sub
sub
sub
xor
or
test
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
outsb
mov
mov
mov
mov
lcall
das
fimull
dec
fisubrl
insl
dec
lea
sbb
push
push
mov
or
mov
inc
insb
inc
mov
push
or
inc
imul
stos
arpl
pop
jmp
or
sub
dec
inc
insb
inc
mov
dec
fcomip
js
sbb
ret
data16
mov
test
cmp
mov
imul
out
ds
mov
dec
push
pop
adc
mov
jg
mov
pop
rcll
push
enter
and
fwait
mov
icebp
lea
mov
sub
jnp
xor
mov
xor
insb
test
or
push
cltd
sbb
xor
push
fwait
jle
and
and
sub
pop
aam
lock
cs
lcall
and
and
negb
xor
sahf
test
test
jo
icebp
and
call
out
jecxz
push
cmp
pop
jns
xor
mov
mov
pop
stc
movsl
stos
sbb
cmp
mov
fsubrl
rcrb
sarb
lods
cmp
xchg
scas
shlb
push
inc
mov
pushf
sahf
xor
outsb
mull
jp
xor
pop
mov
rcll
push
leave
mov
and
mov
inc
push
leave
pop
sbb
jmp
mov
stc
and
jl
inc
sbb
sub
test
lea
mov
sbb
mov
sbb
sub
mov
mov
push
fs
inc
pop
push
or
jb
or
arpl
jae
jnp
test
sbb
jno
idivl
out
lahf
pop
insl
cmpsl
movsb
jae
imul
xchg
mov
xor
sub
icebp
mov
test
sbb
shlb
xor
jl
data16
stos
or
push
push
rcrl
or
out
sahf
or
cmc
movsb
insb
lahf
cld
sub
or
or
mov
mov
or
ror
clc
inc
jmp
les
sub
adc
sbb
sbb
fs
ret
jno
xor
loop
sbb
cmp
sbb
lods
add
cmp
insb
or
cld
jmp
nop
iret
jns,pt
adc
rorb
push
ret
out
mov
lea
idiv
cltd
push
jmp
lock
sbb
sbb
pop
nop
rcrl
loope
pop
xlat
sbb
mov
imul
or
sbb
sub
movsb
cmp
mov
mov
xor
cmpsb
insb
sbb
movsl
inc
mov
xchg
loop
js
mov
sub
mov
ret
hlt
les
mov
adc
shll
push
adc
in
or
or
cld
shr
and
pop
push
jl
sti
add
movsb
dec
xchg
sbb
cli
sbb
adc
xchg
mov
add
stc
mov
mov
leave
jbe
jecxz
sbb
mov
int3
sbb
in
fdivs
xchg
dec
sti
test
mov
sub
or
inc
add
orb
mov
mov
int3
pushf
shlb
out
and
pop
cltd
aaa
mov
xlat
dec
hlt
imul
pusha
and
or
sbb
dec
jle
adc
out
fadds
inc
sti
mov
frstor
scas
dec
inc
cmp
sub
mov
ficomps
inc
es
clc
dec
bts
inc
es
inc
mov
ficomps
inc
es
clc
dec
bts
inc
es
clc
dec
sbb
sbb
jle
dec
bts
inc
es
clc
dec
bts
cmp
bts
inc
es
clc
dec
bts
clc
dec
imul
ficomps
inc
es
clc
dec
bts
inc
es
js
mov
inc
es
clc
dec
bts
inc
es
dec
mov
ficomps
inc
es
clc
dec
bts
inc
es
clc
dec
sbb
sbb
jle
sub
or
ret
pop
sbb
adc
fcomps
or
and
mov
jns
adc
sarb
cmp
mov
add
aas
mov
repnz
pop
add
mov
imul
cmp
xor
add
push
dec
daa
and
inc
fcoml
out
fsubr
mov
leave
js
rorb
mov
or
cmp
sub
sbb
pop
and
sbb
stos
pop
push
popa
loopne
ja
add
adc
hlt
push
mov
cwtl
out
cs
mov
and
rcll
stos
sub
and
and
aas
dec
out
pushf
sub
add
xorb
xor
adc
xchg
sub
loopne
ja
add
push
pop
mov
add
jge
insb
xchg
pop
or
sub
or
sbb
xchg
dec
adc
mov
push
in
or
in
xor
push
mov
fisubrs
push
adc
out
jg
cld
mov
cli
mov
fdivp
testb
mov
out
cld
sbb
and
out
fildl
mov
ljmp
xor
sbb
sbb
push
sbb
fisttpl
sbb
out
popf
sub
fildl
push
mov
stos
mov
in
std
aam
push
js
lock
shrl
xor
in
fdivrl
and
sub
and
jae
loopne
cmpb
in
pop
les
dec
xor
loop
adc
sub
fdivp
daa
add
cs
cli
fidivs
pop
and
fisubrl
sub
sub
jle
sub
cli
sub
sbb
pop
stos
sub
jae
push
sub
dec
sub
dec
insb
push
or
cmp
and
mov
negb
xor
cs
shrb
push
xor
ficoms
add
and
mov
add
fdivrp
xor
cmp
cmp
popa
sub
jle
cmp
cli
cmp
sbb
pop
stos
cmp
imul
imul
in
adc
loop
popa
sbb
gs
adc
adc
movsl
jmp
sub
jb
stc
fsubl
pop
mov
lea
aas
mov
push
jae
loop
hlt
dec
daa
pop
fwait
insb
add
mov
dec
lods
or
sub
dec
scas
cmpsl
mov
lcall
fs
mov
cmp
les
mov
testb
xor
ret
in
rol
lock
sub
clc
cmp
out
jle,pn
aas
imulb
mov
push
shlb
xor
imul
test
fmulp
lea
aaa
dec
ficoms
sahf
in
mov
cmp
outsb
cs
daa
cmp
or
adc
shrb
jo
lods
xchg
shll
sti
adc
les
inc
lods
into
adc
jb
out
cli
jl
inc
or
mov
outsb
cwtl
sbb
push
cmp
inc
enter
xchg
out
in
pop
jg
sbb
mov
mov
hlt
push
je
xchg
xchg
in
sarl
xlat
xchg
hlt
lret
push
push
test
xor
adc
fsubr
cmc
cs
or
jge
sbb
int3
into
insb
xchg
stos
and
xor
js
daa
insb
dec
dec
xor
cmp
and
add
cmp
sub
cmc
sbb
fidivs
int3
jmp
xor
adc
add
fadd
aam
xchg
dec
in
mov
xor
popa
sbb
cld
inc
hlt
sub
bound
adcb
xor
je
fidivrl
mov
stos
mov
incb
clc
sub
xor
repnz
es
mov
jmp
clc
sub
mov
leave
cmp
or
cmp
js
outsb
jne
outsl
push
cmpsb
popa
sti
out
mov
int
sbb
mov
sub
dec
pop
add
jno
je
lods
xor
bound
data16
cmpsl
jo
jo
lock
jnp
or
jae
push
xchg
daa
jae
push
jmp
sbb
imul
and
mov
lcall
xor
sub
lcall
mov
xchg
pop
test
cli
lods
inc
loopne
xor
mov
fisubrl
add
mov
mov
test
xor
call
mov
movb
fcomps
push
dec
jne
das
loopne
and
pop
push
test
cli
or
movups
mov
sbb
das
mov
inc
aad
daa
push
inc
xchg
mov
in
cmp
call
and
pop
xchg
sbb
icebp
lret
scas
xchg
daa
mov
or
push
add
adc
xor
js
dec
xor
add
test
fnsetpm(287
or
or
std
movsb
add
jbe
add
and
inc
mov
mov
fidivs
aam
bound
or
pop
mov
hlt
mov
call
push
and
jp
jmp
loopne
dec
sub
into
jb
dec
outsb
sub
cmp
mov
sahf
mov
cli
fsubl
movsl
rcr
push
or
or
imul
mov
fs
mov
push
adc
xchg
shr
es
ficompl
and
in
fidivl
inc
cmpsl
daa
leave
sti
loopne
shl
sbb
add
popl
inc
mov
dec
leave
add
xor
push
adc
push
sub
fsubs
or
adc
adc
pop
cmp
inc
cwtl
or
inc
cld
pusha
xchg
stos
add
sbb
ss
insl
cmp
adc
pushf
mov
mov
fsubrs
push
and
cmpsb
loop
mov
mov
sbb
inc
repz
rclb
pop
inc
xor
shr
jnp
andb
inc
outsb
and
arpl
mov
imul
xor
mov
pop
xchg
mov
xchg
test
jmp
jmp
test
mov
and
icebp
pop
pop
divb
ljmp
loopne
pop
fwait
jle
xchg
jecxz
in
push
push
daa
outsb
movsb
sbb
fdivrs
hlt
repnz
std
mov
sbb
stos
mov
sbb
pop
and
and
fisttpl
cld
adc
mov
sarl
or
out
out
xor
notl
lahf
sub
add
cmp
sbb
adc
imul
adc
jl
icebp
enter
or
cmp
les
iret
fwait
inc
cmp
dec
rcll
jp
sub
cli
adc
fisttps
cmp
push
dec
push
adc
mov
pop
popa
sbb
fnstcw
aas
orb
mov
into
mov
ss
mov
xor
ds
mov
mov
jne
sub
jl
push
adcb
and
inc
arpl
sub
cld
sbb
jns
stos
enter
test
cmp
add
adc
mov
sub
insb
lods
or
sub
sahf
mov
pop
jbe
enter
loop
ret
pushf
and
and
arpl
xchg
cmp
shrb
pushf
mov
lret
pop
jno
mov
and
mov
add
xor
repz
pushf
sahf
pop
int3
sub
cmpsb
leave
testb
daa
inc
push
xorl
and
sub
xchg
fisubrs
push
cmpsl
repnz
mov
stos
adc
mov
jb
pop
scas
test
inc
dec
cli
pop
lock
and
add
pop
enter
add
hlt
out
lea
ret
mov
add
push
stc
sub
in
inc
sbb
xchg
xchg
pop
imul
in
xchg
jl
movsl
adc
sub
enter
and
inc
lods
fsubl
pop
dec
insl
leave
sub
popa
data16
inc
idivl
ret
sub
cmp
fadd
jb
adc
inc
inc
sub
daa
sbb
sbb
pop
jp,pn
cmp
cmpsb
jbe
xor
adc
cmp
aam
inc
enter
mov
xchg
fdivrs
inc
xchg
insb
jl
lods
adc
out
add
ljmp
dec
adc
sarl
ficoms
push
enter
xchg
sub
push
pop
inc
mov
pop
inc
inc
cmpsl
mov
repnz
dec
outsl
xor
cld
rorl
dec
inc
inc
pop
les
mov
sbb
mov
dec
cmpsb
inc
clc
out
or
pop
fdivrs
mov
outsl
xchg
hlt
mov
out
notl
dec
repnz
jl
dec
in
or
push
mov
call
jmp
loop
aas
mov
aam
cmp
jo
aaa
inc
rol
iret
and
sub
mov
pop
test
sub
add
sbb
xchg
dec
mov
data16
out
dec
sub
lock
fadd
fucom
lods
sbb
jo
in
or
or
ds
hlt
es
sbb
movsl
mov
mov
mov
das
into
js
aaa
add
stc
int3
pop
aam
repnz
inc
jmp
or
adc
daa
jo
add
adc
push
mov
data16
stc
or
jae
aas
hlt
sbb
xchg
mov
pushf
loopne
int
dec
fwait
xchg
std
aas
sbb
jge
lret
mov
xchg
mov
mov
lock
xor
pushf
mov
in
cmp
mov
fcoml
sub
and
mov
fsubs
sbb
icebp
lds
push
fdivs
dec
in
daa
inc
jg
lcall
aas
sbb
enter
addb
pop
fiaddl
add
push
mov
mov
or
mov
lret
xchg
push
shrb
xchg
pop
repz
into
cli
fdivs
jo
or
scas
cmp
rcrb
out
test
add
test
cltd
xchg
cli
xchg
adc
mov
xchg
pop
les
sub
xchg
lcall
pop
push
dec
sbb
ret
push
pop
shlb
pusha
xor
je
and
cs
mov
clc
pop
inc
daa
sub
pop
setnp
js
mov
fnstenv
mov
pop
jmp
jge
shrb
cmp
mov
xchg
clc
jle
add
pushf
fwait
pop
xor
js
fwait
sbb
not
sbb
fcomps
test
sti
pop
mov
dec
scas
sbb
inc
mov
insb
push
mov
mov
movsb
insb
daa
inc
cld
and
mov
jbe
mov
push
packssdw
scas
cmp
das
shrb
cwtl
shlb
xor
sub
inc
and
rcrb
adc
push
cmpsb
ret
xchg
sbb
dec
xchg
sbb
pop
mov
fidivrs
fwait
shrb
or
mov
mov
push
cmp
test
sarb
sbb
ja
ret
push
sbb
adc
pop
insb
les
jnp
cmp
xor
cwtl
add
push
lret
xchg
in
mov
sbbb
subb
sub
sub
pop
je
and
test
jecxz,pt
loopne
and
sub
imul
dec
jnp
ror
lret
hlt
mov
js
add
pop
jmp
pop
xchg
ja
push
xchg
mov
sub
mov
sub
cmpsb
mov
dec
inc
cmp
or
in
test
outsl
daa
outsb
cs
sar
fstpl
and
out
mov
out
out
lods
gs
dec
push
arpl
xchg
sub
xor
mov
out
in
cltd
or
adc
push
sub
inc
lret
push
lretw
les
jae
cmc
lcall
sub
push
mov
push
mov
xor
mov
and
into
sub
pop
lret
mov
imul
push
fsubrs
xor
jge
cli
cld
cltd
shrb
jo
test
add
xorl
testb
jmp
sbb
outsl
jbe
ljmp
xor
mov
adc
sbb
lock
mov
icebp
mov
dec
pop
sbb
dec
cltd
sbb
ss
sbb
mov
push
xchg
mov
mov
loop
push
ds
test
sub
iret
inc
mov
xchg
js
cld
ror
lret
adc
stos
add
push
pop
push
clc
mov
shll
aam
lret
daa
mov
daa
inc
imul
pop
das
sbb
cli
scas
jmp
jbe
cli
add
sysret
js
dec
mov
movsl
or
xchg
add
stc
out
mov
test
lds
xchg
sbb
rcrl
leave
inc
pop
sahf
jo
push
mov
loopne
dec
mov
out
mov
cmc
int
push
loop
push
fadd
jp
pop
ds
add
sub
inc
sbb
out
add
and
sbb
xchg
mov
inc
mov
adc
je
mov
shl
xor
adc
push
hlt
in
mov
call
stos
aaa
xchg
mov
mov
xor
js
jae
in
jecxz
cs
push
adc
add
inc
mov
ret
outsl
mov
pop
mov
xchg
sti
js
adc
sbb
fadd
pop
in
add
test
repnz
adc
rcrl
mov
jl
add
test
sbb
mov
call
push
std
fsub
add
out
mov
insb
lea
movsl
dec
xchg
daa
mov
jae
sarl
pop
mov
pushf
ja
and
sub
cld
mov
rorb
mov
pop
xchg
jp
in
enter
xchg
in
call
push
aam
dec
mov
mov
aas
and
sbb
push
cmpl
xor
sub
into
rclb
cmpsl
iret
lret
andb
xor
cmp
shr
mov
stos
add
xor
mov
sbb
add
xchg
icebp
mov
fsubrs
in
jp
icebp
stos
out
mov
xor
pop
fstpl
iret
mov
and
cmpsl
in
cmc
bound
mov
bound
test
xchg
mov
lods
and
out
insb
xchg
out
xchg
adc
sahf
addr16
sbb
data16
dec
and
cmp
sub
ljmp
adc
and
sub
rorb
sub
rorb
sub
rcrb
div
clc
ljmp
sbb
jmp
xor
mov
add
add
ficoms
xchg
adc
cmp
lock
lock
sub
sbb
test
fwait
js
xchg
mov
inc
cmp
cmp
push
js
mov
mov
jmp
xor
dec
stos
cmp
or
aaa
lock
xor
pushf
xor
inc
dec
test
int
xchg
sub
add
je
or
pop
push
aam
add
dec
mov
mov
xor
dec
clc
xchg
fists
mov
cld
test
or
inc
cli
jnp
hlt
fidivl
pop
mov
pop
pop
add
xor
sub
sub
xor
out
pop
mov
sbb
add
lcall
nop
sub
shlb
clc
hlt
int3
pop
negb
insb
mov
dec
in
subb
add
inc
repnz
adc
sar
xor
arpl
mov
js
xchg
adc
in
xor
mov
stos
leave
xor
and
stos
and
xor
mov
stos
es
sti
sbb
dec
xor
scas
add
sub
sub
mov
inc
xchg
roll
pop
lcall
jb
sarl
add
mov
sub
pop
xor
mov
sbb
ljmp
and
je
inc
xor
test
sbb
inc
mov
push
jecxz
cmpsb
xor
and
cli
sbb
movsb
ret
repnz
call
adc
mov
or
jnp
inc
lods
pushf
add
call
notl
mov
pop
das
cmp
mov
into
lret
mov
or
stos
and
mov
adc
jle
dec
shrl
ja
sbb
and
fstl
jp
out
xchg
xor
aad
pop
add
sbb
cmpsb
pop
out
sbb
pop
sub
jb
pop
cmove
aad
pop
negl
pcmpeqb
sbb
inc
fimull
aad
loopne
mov
cmp
adc
cmc
push
repnz
sbb
dec
sbb
dec
sbb
pushl
insl
sbb
and
and
push
cwtl
mov
push
sub
adc
daa
daa
lcall
icebp
test
sbb
xor
rcrb
les
cmpsl
es
aaa
shlb
adc
sub
out
and
cmpb
mov
mov
or
dec
addb
ret
dec
mov
xadd
mov
add
dec
xchg
mov
adc
push
stos
mov
lods
pop
mov
sbb
mov
lods
bnd
mov
test
pop
push
sub
sub
mov
sub
mov
ds
xor
jne
aas
les
aaa
sub
ret
push
sbb
mulb
mov
lods
and
les
pop
push
sbb
negb
inc
jae
sbb
cmp
sarb
adc
sub
sete
aaa
cli
push
or
cmp
push
pop
adc
sub
sbb
push
add
or
push
fcoms
xor
ret
mov
sbb
lds
mov
push
cmp
mov
mov
lret
pop
xor
popf
xchg
lret
pop
sbb
popf
pop
lret
pop
mov
mov
lahf
mov
mov
hlt
mov
hlt
mov
cli
mov
sub
sbb
lods
mov
lods
mov
lods
mov
push
or
xor
inc
cli
push
pop
pushf
sbb
notl
adc
fs
iret
jecxz
imul
sub
jle
divb
jns
sub
mov
xorb
sub
fcomps
and
loopne
popf
push
jge
movsl
shrb
push
repz
mov
dec
sysexit
add
inc
or
mov
clc
mov
inc
pop
fs
xchg
cmp
jle
stc
imul
mov
xor
hlt
test
repz
jle
dec
jb
mov
stc
sub
lret
imul
pop
je
in
out
test
cmp
nop
int
mov
and
out
test
cmp
mov
hlt
sbb
jo
out
and
pop
lahf
rcrl
jae
test
and
in
dec
mov
sti
call
arpl
and
mov
or
mov
mov
shrb
cmp
inc
sbb
jmp
sbb
imulb
pushf
flds
daa
or
mov
stos
and
sbb
inc
sbb
jmp
pop
or
inc
arpl
and
mov
or
cli
sub
cmp
cmp
add
xor
in
loopne
and
out
lock
xchg
cmp
and
in
fwait
test
mov
cmp
lods
iret
imul
sbb
nop
mov
sbb
dec
mov
sti
xchg
adc
pop
and
test
push
insl
shrb
jns
inc
sbb
jmp
sbb
divb
pushf
cs
xchg
push
dec
mov
sti
popa
adc
and
mov
mov
or
dec
cmc
pop
inc
pop
xlat
das
sarb
mov
pop
outsb
je
push
and
dec
dec
mov
cli
xor
jmp
dec
dec
mov
daa
sbb
mov
push
sti
jmp
sbb
cli
sbb
jmp
sbb
jno
hlt
paddsb
mov
imul
popa
xchg
cmp
popf
jg
je
push
dec
shrb
mov
jmp
enter
popa
mov
cmp
stc
addr16
je
push
xchg
shrb
sub
inc
sbb
jmp
sbb
mulb
test
mov
sti
dec
inc
divl
mov
test
xor
lods
xor
xor
stos
sub
in
push
pop
push
adc
sbb
mov
je
cmc
inc
inc
lret
push
inc
hlt
adc
nop
mov
mov
xchg
in
xlat
aaa
sarb
sbb
sub
inc
push
pop
inc
stos
cmp
xor
sub
jmp
inc
negb
pushf
jnp
ds
mov
or
adc
stos
and
mov
cmp
mov
arpl
and
je
push
call
sub
push
sub
clc
fiaddl
sub
mov
incb
xor
subl
mov
push
fwait
mov
ret
adc
pop
add
xor
inc
mov
adc
ljmp
mov
adc
mov
xor
push
inc
adc
inc
add
mov
aam
imul
and
push
add
jmp
sbbb
in
sbb
cmpsl
sbb
mov
and
test
mov
mov
sub
push
lret
mov
cli
enter
fdivs
ficompl
and
push
icebp
xor
push
mov
pop
fcmove
mov
ret
insl
fcoms
les
sub
loop
sub
fwait
adc
in
lea
loopne
xchg
test
dec
cmp
pop
fldt
enter
dec
mov
sbb
shrl
popf
cltd
sub
pop
nop
xor
fdivrl
hlt
and
rcl
lahf
inc
xchg
in
dec
test
in
mov
dec
sub
cli
lea
jl
fdivs
out
xchg
sbb
cmp
cmpsb
push
inc
push
adc
adc
xor
jp
sti
mov
mov
fs
jae
cwtl
pop
sbb
mov
add
fs
ja
push
testl
out
fs
push
loope
sbb
mov
lock
lahf
jl
test
pop
mov
mov
xchg
dec
xchg
sub
mov
stos
xchg
xchg
pop
jmp
stc
bound
rorb
lods
mov
imul
fwait
mov
sub
ds
fucomip
dec
dec
pop
push
aaa
frstor
dec
enter
ja
adc
push
mov
and
mov
inc
hlt
sbb
dec
mov
pop
mov
icebp
pop
mov
mov
lock
push
adc
adc
xchg
fildll
mov
mov
imul
fwait
xor
aam
les
mov
dec
or
push
inc
sbb
cmc
push
insb
add
shlb
add
insb
push
sub
aas
push
lcall
pop
inc
mov
fwait
inc
mov
ds
stc
into
das
mov
ljmp
sbbb
add
jae
cmpsb
jmp
repz
push
pop
ljmp
push
adc
out
dec
mov
sub
fwait
hlt
sub
dec
test
dec
sbb
lret
test
xchg
xchg
push
mov
test
xchg
imul
adc
jne
rcl
xchg
scas
in
push
jno
xchg
movsb
call
into
cli
mov
mov
inc
in
fildl
lods
les
test
popa
add
pop
dec
xchg
sub
mov
js
dec
sbb
std
std
cld
gs
mov
add
jmp
aas
lock
mov
xor
testl
jmp
cwtl
sbb
mov
mov
xor
inc
fisttpll
imul
or
or
pop
push
sti
and
test
mov
jp
or
dec
sti
and
stc
ret
or
cmp
pop
dec
sbb
imul
cld
es
ja
shrb
std
sbb
add
jmp
loope
imul
sti
lcall
and
cmp
aam
loop
sub
aaa
out
stos
push
scas
and
pop
mov
std
mov
lock
xchg
mov
dec
xorb
lods
into
js
xchg
adc
mov
int3
lea
mov
xchg
cwtl
cld
push
jmp
mov
testb
jmp
imul
adc
fcoml
cmp
cs
push
or
pushf
inc
aas
cmc
cmpb
repz
cwtl
test
or
in
mov
adcb
mov
ret
shll
pop
out
shrl
sbb
mov
mov
lods
arpl
push
cmp
sub
mov
popa
mov
mov
js
xchg
aas
cs
inc
pop
lahf
xor
jp
mov
rorb
hlt
enter
xor
push
lods
add
in
stos
jecxz
and
add
lahf
scas
test
stos
std
dec
scas
jmp
add
adc
lahf
cmpsb
jnp
and
mov
fwait
adc
icebp
pushf
cli
mov
loope
add
push
xor
xor
jae
stos
mov
mov
adc
inc
jno
sti
ret
stos
stos
lret
jp
movsl
jmp
insb
das
aaa
xchg
fcoms
adc
xor
add
fs
mov
test
add
movsb
pop
int3
das
int3
jae
pop
dec
inc
push
push
xor
xor
pop
dec
ss
sub
not
jl
mov
add
push
xor
and
jmp
hlt
jl
in
fsubrl
or
and
bound
or
je
xor
hlt
popa
jecxz
add
and
iret
inc
inc
mov
add
repnz
pop
xchg
push
int3
dec
ror
ret
cmp
shlb
scas
lcall
int3
pop
or
cmpsb
jle
in
or
rol
fisubrl
xor
cmp
rcrl
push
ret
repz
ret
repz
ret
repz
ret
repz
ret
inc
jb
dec
adc
mov
push
dec
jmp
cmp
or
imul
sub
je
out
xor
dec
sbb
sar
xlat
out
lods
cli
mov
sub
mov
jnp
sti
sub
stos
sub
insb
mov
jl
fcompl
in
in
pushf
lahf
je
push
lods
pop
sbb
les
sbb
pop
mov
ja
hlt
pop
stos
fs
mov
pusha
hlt
sub
mov
push
lods
mov
gs
fisubs
loopne
mov
in
cwtl
subl
cmp
push
test
je
js
adc
xor
mov
mov
xor
pop
push
aam
mov
push
insb
mov
cmp
fwait
push
adc
mov
movsb
and
xor
clc
sub
fcoml
mov
push
xchg
sarb
iret
insb
mov
ljmp
pop
sbb
push
jle
adc
jns
mov
pop
and
sub
cld
bound
loop
adc
lret
cld
rorb
lods
mov
mov
pop
mov
xor
aam
lret
push
or
mov
mov
in
hlt
xchg
and
mov
shl
fmul
in
sbb
and
adc
fwait
dec
dec
pop
inc
scas
mov
add
loope
dec
popf
cmp
aam
mov
push
dec
xchg
cli
daa
loop
rcll
inc
leave
xchg
lds
ds
jno
and
lds
aaa
js
adc
xchg
cmp
iret
enter
js
fcomps
sbb
sub
add
ljmp
xor
jge
movsb
inc
fs
sbb
lds
push
dec
js
stos
cli
jge
jo
mov
mov
leave
repz
push
xchg
cmp
xor
cli
setae
xor
aad
andl
in
ljmp
adc
mov
outsl
inc
push
in
insb
cmp
enter
dec
sbb
xchg
mov
call
nop
out
jecxz
xchg
pusha
and
aad
getsec
pop
sub
push
inc
mov
adc
ret
inc
sbb
outsb
clc
rorl
and
je
std
jp
sahf
ret
out
inc
add
or
jl
out
xor
pop
dec
pop
pop
aam
cmp
xor
inc
dec
subl
or
and
sarb
shlb
nop
mov
jecxz
subl
or
adc
pop
sbb
pop
mov
or
jge
loopne
adc
sub
adc
jb
les
mov
pop
pop
sbb
sub
mov
enter
ds
pop
lods
adc
mov
xchg
xchg
xchg
xchg
push
outsl
jb
stos
or
nop
scas
inc
sbb
je
pusha
sub
insb
popa
addl
scas
and
sub
add
scas
stos
pop
sbb
sbb
push
mov
mov
add
inc
stos
add
xor
repnz
pop
push
ficomps
int3
push
dec
cmp
jecxz
push
mov
sbb
jge
push
repz
and
mov
xor
jbe
sbb
adc
mov
cmp
bound
adc
out
and
clc
das
sub
mov
inc
outsl
jl
andl
fmuls
sub
push
rcrl
inc
les
push
jnp
jg
aas
push
jo
in
fsubrs
int3
int3
xor
and
jmp
adc
pop
cld
ret
push
and
pop
push
jmp
sub
pop
fsubrp
pop
sar
or
push
popf
adc
fstl
pop
pop
jmp
mov
ret
loope
in
and
and
mov
and
pop
loopnew
rcrl
cmpsb
dec
cmp
mov
addr16
xlat
adc
and
xor
and
and
xchg
inc
push
xor
and
lods
push
and
fstpl
mov
pushl
inc
out
sub
cli
cli
inc
mov
jecxz
or
ja
mov
pop
sub
ja
pop
movsb
orb
subb
idiv
lock
jecxz
pop
outsl
push
pop
out
hlt
pop
loope
mov
mov
lcall
sub
xchg
sbb
sub
adc
mov
adc
cmp
clc
loope
xor
ds
lods
mov
xor
mov
add
and
lret
in
cmp
enter
das
xor
dec
bound
outsl
fs
rcrl
push
pop
test
sub
out
ljmp
jbe
mov
dec
xchg
inc
out
aas
decb
mov
sub
xchg
stos
cmp
lcall
outsl
push
shrl
lea
add
test
insl
ljmp
hlt
rdmsr
ficoms
mov
je
loopne
fs
lret
int3
daa
cli
test
fcmovnbe
adc
hlt
inc
pop
xchg
mov
mov
outsl
push
fistps
xchg
sti
adc
ficomps
add
push
ret
imul
fildl
icebp
ret
cmpsl
xor
pop
pop
test
xor
inc
iret
xor
add
adc
adc
cli
xchg
daa
clc
cs
inc
adc
js
je
cmp
ja
push
pusha
xchg
rep
dec
ss
add
mov
sub
and
popf
ja
fiaddl
out
hlt
adc
adc
dec
in
jns
adc
jecxz
mov
imul
adc
sbb
repnz
in
lcall
std
lret
ja
add
sub
iret
pop
nop
push
stc
clc
or
dec
pop
and
adc
repnz
int
cmpsb
lret
mov
sbb
shlb
dec
sub
inc
or
cltd
sub
dec
or
mov
imul
dec
cld
adc
or
imul
fistps
jns
mov
mov
ds
sahf
outsl
ds
imul
sub
mov
xor
es
test
pop
aam
aam
or
jmp
xlat
test
fs
sub
cmp
test
and
mov
xchg
jge
inc
sbb
lcall
enter
movsl
add
fbld
xchg
movsb
inc
or
dec
sbb
xorl
mov
or
int
sbb
sbb
or
les
sbb
in
xchg
adc
push
cli
mov
pushf
adc
cmp
shll
rclw
add
jl
lahf
jp
cli
and
or
rorb
pop
push
mov
sahf
sbb
aas
fucom
enter
or
sbb
push
aas
pop
imul
sub
cmp
hlt
shll
test
iret
mov
bound
and
pushf
mov
cmpsl
aam
push
stc
push
xor
fmuls
je
jl
add
or
xor
xchg
int3
decb
mov
mov
daa
int3
dec
inc
int
mov
test
in
jae
mov
mov
add
test
mov
shlb
add
push
push
pusha
push
jo
xchg
sbb
xor
mov
lcall
daa
pop
loop
push
ljmp
pop
loopne
dec
mov
xchg
popa
xchg
out
jge
sbb
ja
pop
sbb
sti
sbb
pop
cld
rcr
sbb
cmp
mov
push
pop
lods
idivb
pushf
dec
lcall
add
cld
cmp
cld
mov
ss
cmc
sbb
hlt
jnp
hlt
mov
inc
mov
mov
sbb
cmpxchg
stos
push
dec
rcll
mov
xor
jnp
xor
inc
aas
mov
push
sub
nop
shrb
and
outsl
shr
or
cmp
xchg
sub
cmp
xor
add
xor
insl
fs
push
jb
out
out
inc
daa
cld
gs
incb
dec
lret
inc
and
sbb
mov
insb
cs
and
pop
adc
jno
mov
jb
in
adc
fcompl
lahf
int3
adc
inc
pushl
pushf
loopne
sti
inc
sbb
and
dec
ljmp
je
in
pop
in
dec
mov
sub
xor
mov
mov
fiadds
push
ljmp
fistps
inc
or
shlb
mov
sbb
enter
sbb
inc
xchg
sbb
fdivrp
ret
jecxz
add
add
xchg
out
fldt
adc
mov
insb
fcomi
xor
pop
xor
push
or
pop
and
out
push
push
mov
frstor
stos
pushf
std
int
dec
subb
push
jmp
or
xor
movsb
divb
stc
addr16
mov
leave
pandn
jae
jbe
mov
xchg
sbb
lcall
arpl
lock
inc
popa
test
mov
js
inc
sbb
sub
fwait
dec
mov
test
in
iret
fsubl
mov
mov
sub
add
or
out
sub
adc
enter
and
fsubrl
sti
jge
sub
mov
add
and
or
cmp
mov
daa
xchg
jge
cltd
mov
test
out
cmpsl
inc
adc
in
fistpll
xchg
fwait
inc
clc
and
xchg
jp
dec
das
xchg
stos
add
add
push
push
mov
das
mov
dec
cli
sarl
ljmp
cwtl
ljmp
repnz
inc
cmc
fisubrs
dec
pop
or
inc
loop
sub
add
stos
movsb
shlb
fdiv
add
pop
push
sub
faddl
scas
les
pop
pop
verw
call
xchg
sahf
ret
inc
repnz
mov
sub
mov
lahf
adc
pusha
pushf
mov
adc
sub
daa
nop
sub
fdivs
sub
std
sub
pxor
fwait
daa
pop
or
movsb
mov
sbb
mov
loope
lock
cld
scas
sbb
sbb
stos
sbb
stos
rcll
rcrl
sbb
sarb
inc
push
aaa
and
xor
or
sbb
adc
jg
mov
dec
mov
rcrl
pop
hlt
rcrb
sbb
cmp
add
cli
cwtl
adc
ucomiss
std
and
sub
stos
es
mov
or
inc
and
fdivs
daa
aam
cli
or
xchg
sub
cli
xlat
adc
ret
es
push
mov
xor
out
mov
fs
outsb
scas
clc
inc
push
clc
or
popf
mov
mov
js
sbb
cmp
xor
cmp
inc
enter
and
mov
cmp
pop
into
sub
sub
cmp
add
xchg
bound
shlb
and
jb
lcall
mov
cld
cmp
test
xchg
sbb
xchg
xlat
repnz
push
mov
addb
push
lret
test
mov
hlt
add
sub
mov
ljmp
or
xchg
jne
rcrl
in
and
sarb
loop
loop
loopne
negb
xor
movsl
rorb
sub
pop
sbb
divb
push
js
jbe
inc
outsb
mov
in
fdivrp
jmp
or
js
sub
pushf
les
and
adc
int3
adc
add
pop
in
sbb
test
cmp
in
je
cmc
clc
mov
sbb
pop
in
fbld
mov
adc
sbb
clc
std
adc
jle
or
adc
into
lods
loop
xor
mov
lods
push
ljmp
add
mov
imull
shl
movsb
test
sbb
fdivr
stos
cld
pop
sbb
lret
movsb
enter
loope
ret
bswap
cli
inc
shl
push
and
imul
or
fcmovnbe
inc
scas
adc
xor
test
pop
adc
faddl
mov
aam
imull
fmulp
aaa
add
inc
jle
pop
jo
in
push
aaa
cmp
fdiv
and
xlat
sbb
cwtl
cmp
jno
int3
cld
das
repnz
repz
repnz
leave
mov
xor
aam
call
repz
add
push
sub
sbb
ret
andb
and
sbb
mov
xor
in
test
aas
je
inc
rcrb
cmp
xchg
aaa
insb
in
scas
repnz
les
fs
dec
shr
jmp
test
xor
mov
cmpsb
lods
mov
out
inc
pop
push
or
cmc
adc
lret
xchg
cmp
cwtl
cmp
imul
das
int3
mov
lcall
cs
mov
in
call
push
push
jns
pop
sub
push
mov
xor
sbb
sahf
inc
fildl
cwtl
mov
cld
and
repnz
jge
dec
movsb
cmp
lret
enter
fisubrl
sub
pop
lock
mov
sub
jge
lahf
jb
rorb
aas
in
insb
adcb
mov
fcmovu
mov
sbb
cmp
mov
mov
mov
insl
pop
cltd
or
lcall
add
mov
or
mov
sbb
cld
mov
inc
pop
mov
add
sub
jg
mov
in
push
aam
cmp
inc
loop
add
xor
add
arpl
ljmp
sub
rorl
ds
imul
jno
jmp
addr16
xor
jecxz
mov
inc
cli
xor
mov
jecxz
jns,pn
clc
cmp
cwtl
cmpb
xor
lods
mov
inc
std
push
arpl
imul
aas
cwtl
push
xor
push
dec
iret
frstor
clc
adc
cld
inc
and
mov
int3
stc
in
insb
sub
out
xor
mov
mov
xlat
ret
in
nop
js
xor
das
mov
pop
fldcw
add
fisttpll
sarb
dec
jmp
test
negb
cmp
pop
jmp
out
sub
ret
jecxz
lcall
sbb
ljmp
xorb
lods
inc
in
call
cli
xor
adc
mov
call
mov
add
jbe
clc
sub
sbbb
fstpt
sub
pop
dec
inc
pop
movsl
pushf
lea
mov
cld
int
xchg
sub
add
mov
pop
clc
or
dec
add
dec
cmpb
cmpsb
push
or
sub
push
fs
sbb
stos
sub
adc
lcall
mov
sub
clc
and
sbb
fdivs
lock
sbb
sub
cmpsl
clc
jle
jl
sub
lfs
sub
sbb
out
je
sub
sbb
jo
insb
hlt
push
data16
clc
mov
jno
sbb
test
loope
std
cmp
or
add
insl
lea
ja
jmp
lock
fmuls
xchg
mov
test
mov
and
aas
fwait
cmp
call
pop
cmp
imul
mov
or
clc
mov
xchg
xchg
mov
xchg
sbbl
movsb
or
or
clc
inc
lods
pop
and
int
test
jg
and
clc
pop
dec
in
xor
cltd
in
repnz
fsubs
dec
mov
xor
loope
lods
pusha
sbb
aas
data16
add
pop
cs
cmp
sbb
xor
movsb
out
mov
xor
xchg
jno
inc
popf
jge,pt
cmp
xchg
pushf
mov
inc
mov
sub
sbb
call
out
cmc
mov
cmc
jmp
and
push
add
call
inc
mov
mov
lds
arpl
subl
xchg
popf
inc
xor
xchg
into
sub
cs
and
mov
cwtl
jle
cmpps
push
lds
push
push
int3
rcrl
push
or
cmp
insb
stc
mov
fs
jae
test
sbb
pop
xor
cmp
xor
sub
add
xor
xchg
push
inc
dec
sub
movsl
jle
dec
xchg
divl
cvtps2pi
jae
dec
fs
pop
jno
pop
aam
xor
lea
call
pushf
pushf
call
call
pop
jae
clc
add
fidivs
in
nop
cmp
rcrl
cmp
mov
add
or
pop
cld
mov
lea
mov
jp
test
inc
stos
je
cmc
fs
out
aas
fimull
adc
cld
add
sub
push
aas
adc
sbb
add
test
stos
daa
sbb
jmp
mov
vmovdqa
inc
xchg
dec
iret
dec
dec
int
mov
mov
and
pop
aam
ret
out
lcall
imul
outsl
lock
arpl
arpl
jmp
push
iret
dec
dec
jno
test
cmp
xchg
sub
push
psubsb
cmp
push
dec
ret
test
push
cmp
or
jg
push
fidivl
iret
dec
push
jmp
push
outsb
lods
inc
mov
xor
add
mov
pusha
pusha
movb
movl
pushf
jmp
push
lock
std
std
mov
xchg
imul
jnp
mov
dec
sub
pushf
mov
pop
push
ss
scas
jg
fnstsw
jmp
dec
lahf
and
aam
pop
int3
add
jmp
cwtl
mov
test
add
fwait
xchg
xchg
incl
or
xchg
inc
jbe
xchg
in
xchg
push
cmpsb
scas
xchg
inc
pop
bound
or
fmuls
je
add
mov
cld
jmp
mov
call
jmp
cmp
bt
cmp
test
or
pushf
call
or
in
test
pop
inc
sbb
xchg
js
stos
push
xor
movsb
lahf
insb
pop
adc
cmp
js
pop
mov
inc
and
mov
sub
sub
push
sub
or
pop
pop
xchg
push
add
jne
adc
adc
outsb
push
dec
inc
and
inc
movsb
je
fidivl
dec
insl
or
fwait
xchg
sti
in
call
inc
add
sub
adc
sub
ret
mov
mov
pusha
inc
and
jp
mov
out
add
scas
ror
push
cmp
mov
pop
inc
sti
lahf
lret
sarb
je
add
popf
mov
movups
xor
xchg
imul
mov
insl
pop
shrb
inc
push
mov
out
daa
mov
leave
ja
xchg
ror
loop
leave
ss
int3
out
or
add
cmp
pop
add
and
cmp
mov
xchg
mov
cmp
pop
icebp
fisttpll
arpl
aaa
or
jmp
inc
repnz
bound
es
jmp
imul
bound
es
rorb
push
sbb
ror
testl
mov
rcrb
lea
mov
mov
lahf
sbb
stos
lds
mov
xchg
cmp
jle
popf
xlat
pop
adc
dec
js
repz
and
add
lds
shl
xchg
mov
xchg
cmp
mov
bt
pusha
add
mov
pusha
movb
cmc
mov
cmp
jmp
add
push
mov
push
pushl
lea
jmp
stc
test
pushf
mov
lea
je
clc
xor
add
btr
stc
sbb
mov
clc
clc
push
add
jmp
jmp
pusha
lea
call
push
push
adc
push
lea
jae
jmp
loope
cmpl
sub
xchg
enter
xor
in
adc
mov
std
scas
jae
pop
movsb
inc
mov
call
mov
addb
ret
ret
lods
cmpsl
sub
mov
jp
mov
dec
or
leave
mov
fmuls
test
cmc
sub
mov
sub
pop
fsubrs
xor
push
pop
fxch
test
imul
test
xlat
sub
or
scas
mov
in
push
adcb
dec
mov
sub
add
addr16
mov
xchg
ss
sbb
cmp
andl
or
mov
orl
add
loope
popa
scas
push
test
inc
fstl
cmp
into
ret
adc
or
nop
int3
loop
jno
push
inc
rcrl
cmp
shlb
add
rcrl
xor
in
cltd
cmp
lret
xor
fcomps
not
xlat
xor
test
push
pushf
cs
lret
fistpll
out
ds
int3
fldcw
xchg
rcr
pop
lods
or
mov
cmp
mov
mov
and
mov
sbb
int
sub
xor
popf
xchg
ficoml
xlat
push
mov
cmc
xor
rcrb
pop
add
loop
loope
das
enter
test
and
mov
or
rolb
push
inc
mov
je
sbb
ret
inc
xchg
fdivs
mov
inc
mov
cmpsl
insb
push
xchg
push
loope
and
dec
mov
stos
lock
adc
push
or
xchg
sub
insl
js
insb
mov
cmp
mov
aas
stc
data16
cmp
sub
rcl
lea
inc
push
add
test
ficoml
and
popa
cmc
jmp
es
xorl
std
inc
loop
addl
test
push
sbb
push
ret
mov
dec
push
iret
sub
sahf
in
inc
gs
and
sub
mov
aam
jbe
push
faddl
pop
fiaddl
mov
bound
pop
inc
pop
cmpl
fsubl
loopne,pt
mov
fwait
and
mov
adc
pusha
in
mov
lcall
dec
insl
mov
sub
sbb
inc
pop
mov
xchg
lods
rorb
into
icebp
cld
inc
dec
add
lock
xchg
add
add
bsr
bt
and
rol
push
cmc
xor
pusha
lea
cwtl
pushf
sub
btr
push
shrd
add
pusha
rcl
mov
shld
shl
mov
cmc
cmc
pushf
xor
bswap
call
outsl
lods
jge
jge
int3
jge
sti
dec
jge
lods
and
and
cmp
add
ljmp
xor
pushf
pushl
ret
jne
jbe
shrd
or
shl
mov
call
mov
setne
lods
cmc
bt
not
call
pop
mov
bswap
push
pushf
jmp
call
bt
imul
stc
add
push
pusha
pushf
pushf
lea
jmp
jmp
stos
cmp
cmp
dec
cmp
int3
mov
mov
lahf
bound
and
mov
out
xor
inc
or
jmp
stc
inc
sbb
shrl
sub
dec
dec
xchg
and
push
adc
xor
push
cwtl
add
fildl
fs
jae
push
lea
jmp
test
cmp
lea
pusha
lea
ja
stc
call
mov
dec
dec
mov
mov
pop
cwtl
in
je
out
aas
repnz
nop
pop
cs
mov
out
cmp
jge
sbb
mov
adc
mov
aaa
mov
add
mov
scas
lret
adc
pop
jae
add
add
shlb
ret
push
or
testb
lea
addr16
inc
js
shl
push
push
insl
lahf
adc
mov
das
ret
fadd
cs
sahf
dec
loop
add
stc
in
cmp
or
jo
lret
mov
sub
dec
clc
inc
cmp
dec
fs
cld
sbb
cmc
test
pop
insb
adc
xor
pusha
fidivs
adc
push
xchg
cmc
dec
shll
jp
pop
xchg
sub
jg
mov
nop
std
ror
out
pop
fcompl
shrb
add
bt
call
call
cmp
cmp
pushf
pusha
lea
jb
stc
pushf
lea
js
cmp
pusha
lea
jae
dec
mov
sar
sar
shr
shr
mov
cmc
jmp
lea
je
call
not
mov
jmp
test
ret
hlt
mov
data16
aad
cmc
clc
mov
les
cmp
lret
dec
mov
push
add
or
fucom
pop
xchg
fistl
js
int
mov
aas
jg
add
push
icebp
ds
mov
inc
test
in
mov
es
jg
xor
fcoms
stc
and
and
cmp
dec
mov
pop
fucom
pop
or
xchg
js
hlt
imul
popf
mov
das
and
dec
shlb
sbb
jne
shrd
dec
outsl
push
scas
xchg
pop
test
mov
stos
mov
and
ja
idivl
test
dec
adc
jnp
test
pop
loop
pop
ficomps
add
movw
lea
je
bt
sub
test
cmc
cmc
cmp
cmp
call
cmc
cmp
add
pushf
clc
pushf
rol
mov
call
test
jge
cmp
xor
or
mov
cmp
lret
jne
addr16
xor
pop
mov
add
lcall
push
arpl
rcll
push
fistl
ficomps
xchg
jne
ja
ss
pop
mov
gs
int3
mov
push
push
push
pop
mov
shll
fsts
pop
cmp
adc
cmp
dec
in
sbb
sbb
sub
jnp
pop
aad
xchg
out
adc
dec
cmp
mov
sar
lret
iret
and
loopne
xor
sahf
xchg
stos
jae
fucomip
cmp
jns
mov
adc
imul
add
ds
jmp
pushf
call
stc
rol
jmp
call
sbb
xchg
mov
or
jmp
fisubl
mov
and
sbb
or
push
bound
jecxz
pop
mov
aas
cmpsl
shr
and
das
add
aas
lret
add
ss
push
push
add
mov
sbb
sbb
jle
sub
repz
into
push
xlat
cmp
mov
jp
adc
lahf
sub
and
push
sub
push
stc
inc
dec
xchg
sub
data16
xor
lock
add
orb
mov
bound
push
repnz
fcmovne
jmp
push
loop
out
jns
sub
mov
out
dec
rorb
or
mov
push
xchg
add
add
pop
cmp
mov
add
cmp
test
shlb
arpl
push
dec
push
out
push
dec
jecxz
push
xchg
stos
pop
and
dec
hlt
fildl
xchg
dec
outsl
dec
test
jmp
js
sub
sub
xor
arpl
das
push
add
das
loope
cmp
popf
mov
lods
leave
push
dec
dec
lcall
jmp
inc
cmp
and
push
dec
pop
test
hlt
xchg
add
inc
xchg
sub
mov
or
out
test
aam
adc
xchg
or
loopne
lret
pushl
adc
pushl
jmp
lea
jne
bsr
xor
neg
mov
pushf
call
jl
insb
mov
es
push
hlt
sub
mov
add
aam
and
and
movsb
cmp
jl
lods
mov
and
adc
inc
jp
in
scas
mov
jo
cmc
xchg
jl
int3
int3
xchg
ret
inc
cmp
xor
sub
les
mov
out
and
sub
push
scas
sub
or
in
lea
dec
ja
lds
sub
or
jne
dec
lods
mov
cmp
ss
mov
mov
cltd
fisubrl
jge
fisttpll
shrb
aam
movsb
popf
mov
outsl
scas
push
add
popf
pop
loope
es
cmp
mov
add
mov
xor
jb
jb
sub
cmp
jne
arpl
cmp
xor
imul
aaa
add
mov
sub
insb
out
push
fmull
fnsave
aam
mov
add
cmp
pushf
imul
xchg
int3
test
sbbb
cmp
or
xor
xor
mov
xor
sarb
pop
imul
loopne
mov
jmp
cmc
aas
add
imul
in
pop
cmp
aaa
dec
lods
inc
cmp
insb
add
jl
mov
call
sub
orb
jp
movsb
imul
or
test
jo
cld
outsl
aam
fs
sbb
add
lods
cwtl
mov
mov
adc
sub
and
cmp
das
jb
fisubrs
push
fwait
ss
cmp
hlt
xor
sbb
cmp
mov
dec
fsubrp
mov
xor
scas
cmp
lcall
out
add
mov
jns
into
push
aad
mov
mov
jl
mov
or
dec
add
add
pop
sbbb
ret
mov
dec
mov
out
lret
xor
insb
loop
pop
subb
fwait
inc
xchg
push
and
sub
add
xlat
cmp
stc
imul
push
add
mov
shlb
jo
push
stc
rcll
cli
xor
cmp
mov
shll
dec
or
pop
push
rclb
test
sbb
and
xor
outsl
pop
call
hlt
negl
mov
push
xor
nop
orb
cmc
mov
jo
shlb
sub
cmp
push
sbb
or
nop
popf
mov
repnz
cmp
dec
repz
dec
mov
cltd
mov
pushf
int3
jbe
mov
cs
pusha
imul
inc
adc
sub
sbb
and
and
push
testl
mov
push
out
adc
or
ljmp
and
je
and
cld
shlb
jae
fistpll
ret
pop
dec
jg
cs
or
mov
popa
adc
movsb
jne
mov
xchg
xchg
imul
out
addb
push
je
aam
stos
push
enter
sbb
inc
dec
sbb
fs
jnp
imul
cmp
jo
dec
add
mov
sbb
cld
orl
lcall
enter
ret
and
sub
xchg
or
jmp
hlt
cltd
inc
sub
idivb
in
imul
dec
xchg
push
cli
fwait
mov
mov
sub
mov
jp
scas
testl
sub
loop
push
xor
mov
cmc
sub
lret
dec
fadd
lods
mov
and
sahf
inc
pop
or
or
mov
push
mov
arpl
dec
add
in
jo
cmp
xchg
hlt
push
sub
shlb
mov
jl
fldt
ret
dec
add
push
je
pushf
sub
insb
sub
mov
and
cmp
xlat
sub
test
mov
cmp
pop
aaa
popl
jns
int3
cmp
sub
jnp
sub
mov
adc
outsb
loopne
out
lods
or
shrl
and
repz
movsb
leave
xor
shrl
cmp
cmp
sub
leave
shr
pop
ss
inc
mov
sbb
fcomi
jl
fsub
or
mov
mov
repz
cld
mov
push
mov
sbb
sarb
jae
mov
sbb
sub
cld
jne
fmuls
stc
inc
and
mov
sbb
mov
sub
mov
insb
cmp
fstp
xor
in
sbb
adc
sbb
mov
stos
jae
sbb
fisttpl
outsl
xchg
cld
fs
leave
call
sub
jno
mov
pop
adc
cli
mov
xor
testb
cli
pop
push
sub
sub
cmp
cwtl
and
push
mov
or
in
cmp
inc
cli
or
mov
mov
stos
fcoml
mov
subl
or
cli
sbb
mov
idivb
xchg
repnz
hlt
xor
cli
xlat
sahf
lock
insb
sub
lods
mov
pop
mov
jo
in
push
jnp
mov
in
push
fdivs
cli
cld
lods
and
jl
imul
insb
sbb
sbb
sbb
xor
hlt
sbb
lock
lret
jo
cld
push
cld
cld
arpl
xchg
cld
jo
dec
xor
and
sbb
and
jb
sbb
icebp
sbb
stos
jmp
in
sbb
mov
fdivl
and
pop
cmc
loopne
add
cmp
dec
mov
cmpsb
push
inc
push
mov
inc
sahf
imul
push
fwait
imul
jns
imul
mov
stos
xchg
cmovae
cli
add
dec
das
movsl
push
mov
inc
push
adc
mov
and
or
inc
adc
dec
pop
mov
fcoml
mov
and
shrl
cmp
insb
mull
ret
inc
or
sub
add
push
gs
das
jnp
les
loope
ja,pn
pop
sbb
je
rorb
imul
pop
dec
dec
leave
daa
fcoms
jmp
push
and
das
xchg
and
insb
scas
cmp
enter
lahf
pop
jecxz
das
dec
mov
inc
xchg
aas
cmp
pop
ret
and
nop
cmp
dec
fisttps
cmovle
jecxz
rorl
or
and
or
or
std
jp
or
insb
and
xchg
add
mov
insb
cmp
xor
or
ss
cmp
mov
add
mov
dec
and
aam
jns
call
out
das
cmp
ja
dec
fwait
add
insb
jno
xchg
pop
xchg
pop
cli
dec
out
xor
aaa
cmpsb
cmpsb
mov
push
sub
test
mov
add
push
or
fstps
aaa
in
imul
sub
fwait
jnp
adc
fstpl
cmp
mov
sbb
int3
inc
dec
jmp
imul
sub
insb
fwait
jl
mov
fsubr
mov
jne
outsb
push
pop
lock
enter
mov
jge
loope
mov
cs
adc
aad
aaa
lods
pop
cmp
xor
mov
jno
iret
out
push
xor
dec
sub
das
adc
add
jl
mov
in
dec
pop
xchg
adc
inc
popf
outsb
and
xchg
imul
adc
rep
sub
movsb
add
outsl
cmp
int3
xchg
adc
mov
cmp
mov
daa
imul
lods
aas
shrb
outsl
add
dec
jp
rorl
sarb
jl
lock
mov
imul
fdivr
cmpb
test
sbb
lcall
mov
pop
xlat
rcll
fidivl
jl
jl
mov
mov
lods
lds
data16
imul
xchg
or
pop
lahf
nop
mov
pushf
imul
mov
outsb
jo
hlt
pop
add
insb
mov
lods
ljmp
jnp
xor
mov
aam
jne
aam
nop
fdivrs
je
sbb
push
mov
inc
sbb
sub
mov
nop
sub
out
sti
cli
jo
movsb
scas
xchg
fnsave
xchg
imulb
dec
movsb
lret
lock
pop
cmpsl
jecxz
add
fldl
and
pop
cmp
lock
imul
stos
mov
add
fucom
into
adcl
lahf
pop
lcall
inc
xchg
adc
xchg
testl
retw
repz
ret
aad
dec
mov
cmp
lds
hlt
xchg
xchg
pop
jg
jb
pop
fwait
cmp
adc
sub
xor
scas
leave
adc
movsb
ss
xchg
mov
pop
ret
sarl
imul
data16
jne
loopne
xor
sbb
lods
sub
es
lcall
cs
mov
xor
sub
push
xchg
paddsw
mov
add
mov
stos
xchg
aam
inc
or
hlt
push
push
sub
fsubr
test
xchg
adc
popa
ljmp
add
inc
pop
iret
fcompl
sub
mov
imul
mov
ret
inc
and
scas
mov
icebp
sti
pop
hlt
je
loopne
mov
sbb
inc
and
rol
xor
sub
adc
addr16
mov
je
sub
add
sahf
xor
mov
or
cmp
int
push
arpl
cmc
push
leave
sub
mov
adc
xor
pop
pop
int3
mov
sub
mov
mov
les
orl
addr16
mov
xor
inc
sub
mov
out
sub
mov
call
and
popf
or
bound
cmp
add
cwtl
movsb
stos
adc
mov
imul
fdivrs
aas
xor
mov
mov
or
ss
hlt
pop
adc
push
cmp
jl
lock
xor
pop
btr
aam
mov
sbb
es
pop
cmp
pop
xor
test
insb
sbb
aam
loopne
sub
sub
xchg
sbb
xor
lock
setl
cld
dec
fisttpl
dec
cmpsb
stos
aad
add
mov
xor
es
fldcw
out
gs
xor
dec
push
stos
mov
cmp
jle
iret
mov
or
xchg
imul
repnz
repnz
ljmp
adc
insb
dec
shrl
sbb
aaa
imul
imul
popa
sub
pop
dec
mov
cmp
mov
lods
insb
inc
repnz
mov
data16
sbb
inc
lock
xchg
fnsave
sarl
and
decb
pop
mov
aam
fs
xor
scas
cmp
ret
mov
dec
fstps
xor
cmp
dec
movsb
leave
or
cmp
add
stos
in
lcall
ss
jl
movsb
push
push
fcompl
jo
iret
test
dec
sub
cs
xor
pushf
mov
popa
imul
leave
dec
sti
jmp
xchg
mov
repz
out
or
or
ficoml
adc
xchg
cltd
sub
outsl
clc
cmpsl
jg
jl
lahf
testl
xchg
adc
xchg
xchg
xchg
and
mov
lcall
pop
adc
inc
jl
push
test
mov
dec
jg
lret
imul
arpl
in
jge
imul
mov
jecxz
and
lret
dec
adc
lret
mov
lods
push
test
add
sub
inc
or
cmp
test
sub
and
adc
pop
jne
mov
sarl
sub
lcall
pop
loopne
xchg
pop
aas
dec
scas
inc
xor
imul
mov
je
push
xchg
cmp
mov
mov
fidivl
out
push
fwait
insl
aam
cmc
les
cmp
lods
imul
icebp
loopne
int3
xor
or
sub
mov
sub
imul
outsb
in
cmp
adc
adcl
and
jge
sub
imul
sub
jno
hlt
fs
dec
rcl
mov
mov
pushf
outsl
push
jmp
cmpsb
and
stos
mov
pushf
inc
imul
xlat
mov
ficompl
ljmp
outsl
jl
ljmp
push
pop
push
imul
xor
mov
test
mov
cmp
in
cmp
add
mov
xor
insb
xchg
mov
mov
xchg
or
cmp
and
push
sbb
sti
sub
xor
mov
dec
push
or
cmp
jge
test
cwtl
jno
aad
cwtl
lea
mov
and
lahf
jl
call
dec
or
push
xor
mov
xchg
arpl
sarb
inc
fwait
imul
mov
add
mov
dec
aas
cwtl
cltd
mov
push
pop
push
push
int3
lea
dec
cltd
jns
push
and
test
sub
xor
jl
cli
scas
jmp
lahf
or
cmp
dec
subb
pop
hlt
pop
movsb
mov
mov
fiaddl
or
in
jg
cmpb
mov
xchg
in
xchg
lock
movsb
mov
add
test
xchg
outsl
outsb
repnz
imul
movsl
sbb
sbb
cli
dec
int3
outsl
xor
sbb
in
rcrb
lock
add
sub
imul
insb
jecxz
dec
push
mov
std
cli
in
insl
push
fmuls
mov
or
ja
mov
nop
out
and
out
lcall
xchg
imul
and
mov
repz
sbb
or
mov
outsb
movsb
jecxz
add
pop
push
lds
cli
loopne
mov
cli
les
js
pushf
adc
mov
fsubrs
pop
lahf
xchg
mov
jle
dec
sub
or
ljmp
pop
fmull
inc
inc
lret
rol
mov
mov
in
loop
icebp
pop
sub
imul
add
mov
adc
dec
push
mov
mov
and
iret
int
xchg
dec
inc
out
cmp
int
inc
imul
add
enter
clc
add
jmp
cld
sarl
test
or
mov
jbe
sbb
jg
xchg
sbb
push
xchg
cli
push
sub
and
push
xchg
sub
jmp
bnd
or
lret
adc
mov
mov
adc
lock
sub
out
int
out
push
rorb
mov
mov
pushf
iret
idivl
mov
dec
xor
int3
dec
push
pop
jl
into
sbb
clc
jmp
mov
ficomps
imul
aas
sbb
adc
sbb
outsb
call
ljmp
mov
cmp
sarl
or
or
ja
aam
stos
test
lock
mov
lods
cmp
out
sub
das
fidivs
xchg
pushf
push
test
xor
adc
insb
clc
es
sbb
mov
out
add
mov
stos
xor
lods
cmp
xlat
adc
jb
or
imul
lock
mov
jb
pop
xor
inc
sub
imul
loope
adc
jnp
lret
imul
xchg
jo
aas
fiaddl
stos
ds
dec
jmpw
xchg
sbb
pop
mov
xchg
mov
add
shrl
icebp
jno
jp
js
pop
or
cmp
and
fsubrs
loop
cmpsl
mov
jne
mov
push
inc
cltd
dec
subb
outsl
mov
xchg
lea
shlb
push
cmpsb
cwtl
ja
sbb
insb
into
adc
cs
daa
and
test
mov
fisubrs
xor
mov
push
cmc
dec
mov
mov
loope
cwtl
ja
xor
cmp
jmp
fimull
cmp
lods
mov
mov
mov
xchg
imul
repnz
xor
inc
mov
mov
sbb
into
sub
push
lods
leave
adc
fisttpl
test
stos
in
mov
daa
sub
mov
ljmp
loope
mov
out
imul
dec
cmp
sti
ljmp
iret
jp
pop
sub
pushf
or
lea
cmc
cmp
and
cmp
cmp
movsl
mov
jecxz
and
or
dec
push
sub
nop
loop
mov
xor
call
mov
ja
xor
mov
xor
cmpsb
push
popa
xor
in
push
pushf
push
leave
imul
into
cmp
mov
xor
lds
pop
pushf
cltd
leave
pop
inc
xchg
mov
sub
imul
iret
fmul
fimuls
mov
ret
outsb
and
jl
loopne
movl
inc
cs
inc
xor
repz
cwtl
jge
cmc
xchg
cmp
pop
pop
enter
lcall
int3
pop
repz
cmp
repz
subb
mov
movsl
or
xor
ljmp
clc
scas
movsb
add
loopne
iret
data16
push
mov
sub
add
repnz
mov
push
nop
pop
jge
pop
xchg
sub
sbb
pushfw
aad
cmp
mov
and
jle
ljmp
cmpsb
repnz
xor
mov
mov
cmpsl
xor
dec
adc
pop
test
stos
lods
mov
sub
fmuls
and
jle
lods
xchg
clc
add
popa
dec
and
sbb
cmpsb
test
sub
pop
sbb
mov
adc
test
loope
arpl
popa
lret
call
test
xchg
cld
dec
dec
fwait
imul
fiaddl
push
lock
mov
jae
imul
cwtl
pop
imul
push
mov
push
dec
xchg
xchg
push
lcall
mov
sbb
mov
int3
popa
sahf
imul
sbb
push
push
mov
lds
mov
sub
cmp
push
adc
pop
lea
inc
lea
mov
xchg
in
inc
dec
adc
dec
add
mov
adc
aam
and
sbb
imul
repz
cld
mov
push
cwtl
add
mov
or
lahf
adc
imul
cmovnp
in
dec
loopne
daa
int
lods
cs
cmp
xchg
cmp
iret
add
shrb
jl
cmpsb
mov
jnp
inc
dec
dec
jle
outsl
sbb
insb
jno
out
mov
testl
stc
or
dec
mov
sub
jo
xchg
out
pushf
pusha
add
imul
je
adc
cmp
test
jnp
rcrb
idivl
outsl
int
test
aad
pop
in
cmc
cmp
fwait
jle
xor
jns
sub
fwait
in
cmp
popf
mov
rol
test
mov
or
or
pause
and
stos
mov
add
popl
cld
jns
cmp
popa
inc
dec
jns
hlt
jo
pop
and
push
mov
scas
mov
push
xor
cmc
inc
inc
aad
in
hlt
ret
mov
mov
jne
lea
or
dec
jmp
mov
xor
add
mov
xchg
push
dec
pop
and
outsb
sahf
adc
sbb
fldt
je
loope
xor
sub
inc
cmp
pop
cli
in
inc
xchg
repnz
jo
cltd
jg
lods
aam
xor
mov
or
adc
test
jle
cld
xorl
popa
add
repz
cwtl
hlt
mov
sub
testb
movsl
mov
imulb
dec
xor
or
stos
mov
mov
mov
test
repz
pmaxub
movsb
mov
mov
lcall
push
cli
sbb
or
jl
in
and
jecxz
in
inc
lcall
inc
std
ljmp
insb
sahf
push
iret
imul
jl
movsb
cmp
imul
xchg
ficoms
nop
cld
mov
pop
sub
sbb
pop
hlt
icebp
jl
mov
iret
or
push
repz
dec
sub
inc
inc
cvtdq2ps
sbb
and
mov
fidivl
sub
stos
icebp
inc
sbb
addr16
xor
cmp
jbe
xor
sbb
push
inc
dec
ss
std
fimull
sbb
mov
push
ljmp
push
fcompl
inc
add
mov
mov
mov
mov
cmp
je
inc
lcall
aam
dec
dec
ja
stos
fdivl
ds
add
aaa
jnp
sbb
push
fsubr
sub
data16
mov
in
lods
lods
adc
test
test
xchg
jae
cld
add
cmp
sub
movsl
cld
sbb
sbb
xchg
outsl
mov
push
cmp
xchg
insb
in
sbb
or
jnp
lcall
lahf
xor
dec
xchg
and
jb
pushf
sub
sbb
ja
out
cmp
cli
leave
sbb
test
jae
pushf
sbb
pusha
cld
mov
ds
fcoml
mov
push
stc
mov
xchg
xchg
sbb
xchg
fmull
loope
rolb
outsl
in
cld
xor
lock
movsl
cmp
leave
lahf
pop
sbbb
lcall
cmp
dec
mov
cmp
imul
adc
jge
test
or
aas
shr
cmp
dec
aad
cltd
mov
and
sub
shrl
cwtl
pop
repz
pop
mov
fmull
sub
dec
sub
xor
mov
mov
cli
aam
bound
loop
out
cmp
inc
inc
xor
mov
xchg
xor
cld
stos
xchg
loop
add
xchg
cmp
dec
mov
mov
pushf
sbb
imul
mov
mov
adc
loop
or
inc
mov
push
out
pop
nop
lds
popl
movsl
popf
sub
movsb
inc
stos
cld
mov
insb
push
sbb
test
fcmovnb
loope
insb
and
push
imul
lea
loop
add
clc
mov
xchg
sbb
cltd
add
sbb
out
xor
testb
test
fdivl
jl
lahf
dec
fwait
sub
ss
mov
push
mov
dec
dec
xchg
mov
cmc
xor
mov
ljmp
dec
stc
xchg
pushf
daa
push
int3
mov
inc
mov
sub
pop
clc
enter
push
in
popa
sbb
xor
adc
jle
push
in
test
loope
fistl
adc
imul
mov
push
into
addl
ljmp
xor
xchg
movsl
cmp
or
lcall
adc
xchg
repnz
outsl
aad
lock
insb
sub
dec
in
cwtl
mov
ljmp
inc
sbb
fwait
movb
in
mov
mov
scas
xor
mov
lock
xor
mov
sbb
mov
mov
pop
mov
test
sbb
imul
cmp
pop
add
cmpsl
mov
and
cld
mov
xchg
lret
hlt
lret
mov
push
xchg
negl
mov
test
sub
ficoms
idiv
test
ljmp
xchg
loopne
cmp
orb
movsb
cmp
les
xor
out
js
test
push
pop
mov
rcll
insb
and
sub
pop
push
xchg
xlat
mov
push
jae
sbb
mov
fs
icebp
in
stos
in
sbb
xor
and
cwtl
cmp
or
negl
push
add
mull
aas
sar
inc
xor
pop
sub
aad
add
inc
orl
sbb
js
lock
inc
and
jle
insl
jae
add
and
in
movsl
xor
imul
xchg
lret
adc
xor
aad
xlat
outsb
adc
out
pop
mov
call
movsl
cmpsb
dec
addr16
lock
iret
inc
icebp
mov
adc
xor
mov
popf
mov
cmp
jns
repz
fdivl
sub
sub
sbb
xchg
adc
cmp
cltd
inc
xor
imul
int3
mov
dec
mov
out
push
or
cli
test
mov
sub
mov
imul
xchg
push
imul
mov
sub
xchg
movsl
fs
scas
adc
xor
out
mov
xor
sbb
lahf
dec
insb
lock
in
jl
mov
inc
mov
cmp
lahf
cwtl
imul
aam
pop
mov
xor
xchg
imul
sub
mov
daa
orb
pop
pushf
lcall
daa
dec
cltd
aas
test
insl
cmp
imul
addr16
js
fwait
push
sub
mov
mov
or
xchg
cmp
inc
xor
loopne
xchg
dec
cs
xchg
stos
pop
frstor
xchg
in
mov
cltd
push
xor
out
pop
jge
jns
mov
pop
push
jmp
jle
xor
cmp
pop
mov
scas
stos
mov
pop
mov
inc
lret
movsb
aas
int3
xchg
rcrl
loop
mov
xor
imul
sub
jae
pop
rcrl
cld
adc
sahf
cmp
fdivrl
fdivr
jne
add
pop
pop
pushf
aad
sbb
jl
les
cmp
std
xor
sub
iret
cmc
dec
xchg
pop
mov
sahf
adc
pop
pop
imul
lcall
cmc
jns
sbb
mov
pop
sahf
push
cs
jno
sub
pop
lret
jmp
cmp
sbb
shrl
and
loop
cmp
mov
add
mov
imul
dec
sbb
xchg
jae
xchg
jge
sbb
pop
cmpsb
out
sbb
xor
int3
mov
fcompp
mov
lds
les
stos
movsb
mov
add
into
cmp
xchg
test
and
jp
mov
movsl
lock
icebp
add
ljmp
in
test
mov
mov
sub
movsl
faddl
loopne
mov
hlt
sahf
push
call
xor
mov
cmpsl
push
xor
dec
adc
call
jmp
scas
push
pop
mov
sub
repz
cwtl
sbb
loop
pop
cmp
xchg
or
fmull
jl
push
movsl
pop
or
popf
imul
outsl
repnz
ficomps
cmp
and
mov
adc
icebp
shr
or
add
loopne
cld
insb
repnz
and
mov
xor
inc
inc
sub
pop
jle
mov
xor
xchg
cmc
aad
adc
sub
out
in
sub
push
push
aad
mov
sub
imull
sti
pop
scas
repz
sub
jnp
cmp
xlat
loop
lods
out
ss
aas
fwait
sub
sub
xor
dec
int
dec
push
repnz
xor
xchg
sub
mov
lret
push
lret
push
stos
add
dec
jl
push
cmc
xor
pop
andl
xor
sbb
call
or
and
imul
push
add
mov
xor
xchg
jno
cmp
lods
nop
mov
mov
sub
jb
fimull
out
cmp
clc
inc
push
jl
imul
cmc
div
and
xor
repnz
xor
sub
mov
loop
cld
jp
sub
movsl
mov
arpl
out
pop
pushf
outsb
insl
and
xchg
sbb
dec
notb
cmp
mov
fistl
xrelease
dec
mov
cmp
inc
pop
into
aas
push
jmp
cmp
xor
sub
fidivrs
fwait
test
loopne
into
mov
cmp
imul
repnz
add
sarb
ret
dec
cltd
shll
pop
cmpsb
lret
outsl
sbb
je
hlt
sbb
jp
test
xlat
add
xor
adc
mov
adc
xchg
lea
test
rcrl
mov
std
cmp
mov
and
aam
xor
xor
xor
test
ljmp
mov
imul
imul
xchg
sbb
in
dec
fimull
stos
push
add
mov
push
sub
icebp
dec
add
imul
ss
and
outsb
out
mov
insb
jno
xchg
and
in
es
dec
lcall
or
test
incb
mov
jl
inc
loop
cmp
jbe
je
pop
xchg
jnp
inc
divl
aam
pop
int3
movsb
xchg
push
xor
stos
cwtl
fists
in
insb
daa
pop
ljmp
in
xlat
fidivrs
jnp
in
adc
mull
sti
push
adc
out
outsb
add
or
sub
ret
push
repz
cmp
mov
in
cmp
insb
sub
cmp
jl
cmpsb
aam
or
push
out
ljmp
fs
adc
aad
faddl
xchg
cli
jecxz
outsl
insb
cmc
fldcw
shlb
scas
fistpl
imul
pop
daa
aaa
and
inc
fwait
sti
adc
shl
xchg
adc
dec
mov
dec
cmp
fsubrs
ja
pop
repnz
pop
sbbb
jnp
pushf
imul
fwait
jl
push
jecxz
sbb
pushf
push
pop
imul
jmp
xor
cmpsb
dec
sbb
sub
xchg
add
and
jg
loope
stos
movsb
push
or
cmp
or
jo
adc
jnp
dec
dec
cmp
insb
cli
sbb
imul
cmp
pop
pop
fmuls
inc
insl
lock
cmp
insb
mov
inc
add
push
xchg
lea
cltd
fs
push
push
cltd
sbb
add
adc
and
mov
and
jge
xchg
popf
addl
aad
scas
adc
jp
int3
imul
mov
dec
jmp
insb
mov
xchg
mov
sahf
aad
sahf
jp
imul
js
mov
xor
aad
xor
pop
jmp
pop
imul
orb
into
inc
lods
mov
xchg
mov
repnz
loop
das
xchg
icebp
and
dec
sbb
mov
cmp
add
sbb
sub
imul
mov
imul
loop
dec
lret
xor
arpl
xor
cwtl
xor
repnz
or
dec
mov
cwtl
mov
cmpsb
pop
cmpsb
adc
stos
out
mov
mov
fs
sbb
inc
int
pop
lret
mov
sub
in
sub
stos
push
or
cmp
dec
dec
cmp
fdivr
jb
sti
jae
pop
stc
pop
jle
mov
stos
andb
adc
cmp
xor
repz
nop
rep
daa
cmp
xlat
movsb
int3
addr16
mov
add
mov
sub
mull
mov
test
jg
out
mov
push
je
imul
sub
dec
out
imul
cwtl
sub
sbb
jmp
mov
mov
and
add
insb
gs
movsl
cmp
sub
inc
and
jae
sahf
imul
adc
sbb
inc
push
cmpsb
sbb
addr16
pop
hlt
ret
xchg
lods
std
and
jmp
jl
pushf
dec
sub
roll
pop
negl
fst
mov
cwtl
dec
stos
shr
push
push
inc
and
mov
xor
imul
test
xor
pusha
cli
xchg
adc
cmp
mov
out
out
mulb
sbb
sub
repnz
fiadds
arpl
insb
cmp
out
lods
imul
mov
dec
mov
movsb
push
pop
cs
fdivrp
loopne
xchg
jnp
shll
imul
add
test
xchg
mov
sbb
sahf
mov
int
inc
inc
mov
shlb
jg
mov
push
sbbb
adc
sbb
ficomps
test
mov
aam
xor
out
insb
test
nop
and
shll
pushf
xor
xchg
push
cmp
adc
add
push
daa
dec
imul
cltd
lods
pop
sub
lcall
imul
mov
rcl
jle
cmpsb
inc
fidivl
mov
outsb
mov
lret
jmp
test
ret
inc
dec
cmpsb
pop
stos
xchg
jmp
rcr
faddl
cmp
scas
jnp
imul
aad
pop
sub
pop
out
xchg
jne
lahf
fimuls
push
and
lret
jb
cwtl
jg
xor
push
cmp
add
dec
sub
cltd
or
add
xor
add
shlb
dec
lods
aaa
jl
stc
add
loope
xchg
imul
mov
or
inc
fidivrs
movsb
sbb
xchg
insb
sbb
sub
add
adc
stos
notb
pop
fdivrs
mov
js
leave
dec
std
stos
sarl
pushf
imul
mov
std
call
aas
cmpsl
sub
das
add
sub
dec
xchg
int3
jl
shl
push
int3
inc
sahf
xchg
add
lock
out
jnp
pop
out
add
lahf
lods
and
test
scas
push
ja
mov
icebp
mov
rcr
inc
pop
mov
xor
stc
cmp
cld
lock
push
xlat
sbb
push
shl
push
loopne
mov
cmp
cmp
insb
fs
pop
mov
mov
inc
jg
mov
decl
test
aas
push
cli
xchg
mov
mov
sub
data16
divl
adc
cmpsb
push
fnstenv
and
sbb
test
adc
sbb
jo
scas
or
out
cwtl
dec
lds
adc
sub
ljmp
cmp
dec
xchg
sbb
sub
in
mov
test
fdivr
adc
loope
mov
aas
jmp
mov
adc
sub
cltd
jecxz
ja
aam
and
cmp
ret
cmp
lods
fs
mov
pop
cmpsb
push
and
imul
dec
inc
and
aas
cmp
jo
inc
xor
pop
pop
pop
in
push
xchg
nop
cmp
addr16
pop
pusha
xchg
cmp
hlt
fisttpl
ss
clc
loop
imul
fistl
sbb
sahf
sbb
or
adc
cmpsb
mov
je
mov
fimull
jae
jle
jne
xchg
stos
movsl
pop
es
js
sub
insl
cmpsb
mov
xor
adc
cld
push
add
ljmp
mov
sbb
ret
adc
test
insb
adc
add
pop
popa
jmp
hlt
test
cmp
aad
jmp
jp
repz
lahf
add
mov
movsb
nop
adc
inc
daa
fmull
inc
mov
stos
nop
jmp
mov
ja
sub
int
mov
mov
add
into
daa
imul
test
negl
cmp
mov
cmp
lret
or
andb
mov
sub
fsts
nop
loop
jnp
imul
mov
ja
scas
pop
xor
mov
cld
lahf
cmp
insb
lds
popf
adc
bt
xor
pop
adc
shlb
sets
mov
jecxz,pt
in
sti
sub
pushf
jl
std
ficomps
dec
xor
cli
adc
shlb
sbb
lods
push
aad
pop
inc
push
iret
stos
popf
or
sbbl
ret
mov
adc
incb
cmp
and
lods
stos
fcmovbe
adc
pop
lods
mov
sub
ret
or
leave
lahf
sbb
rcrb
xchg
inc
cltd
pop
jl
dec
enter
xor
mov
stos
mov
jae
sbb
punpckhwd
repz
inc
imul
xor
repz
xor
mov
insb
divb
pop
imul
inc
adc
sbb
lods
push
repz
je
cld
gs
and
lods
jmp
loop
popa
stos
sub
pop
out
add
xchg
cmpsb
je
lret
enter
fcmovnb
pop
mov
popl
adc
sub
rol
stos
cltd
ljmp
cmp
push
inc
add
jns
cmc
adc
stos
loope
xor
sub
out
lcall
mov
sub
cmpb
aad
adc
imul
xchg
jmp
push
shrl
and
fiaddl
bound
int3
sbb
insb
add
mov
sub
call
jnp
sbb
imul
ret
push
sub
sbb
mov
repz
mov
adc
aaa
ficoms
sbb
inc
cmp
fimull
jl
fnstsw
adc
pop
outsl
mov
in
push
and
and
fsub
jge
ss
rep
add
int3
adc
aas
pop
stos
xchg
pop
xlat
cs
das
pushf
xchg
out
dec
in
insb
mov
cli
xor
push
int3
mov
inc
mov
pop
push
fisubrs
xchg
add
mov
std
imul
fmul
ljmp
shrb
test
ss
jecxz
xchg
jmp
xchg
in
push
das
scas
sub
imul
lret
int3
xchg
add
pop
loop
das
mov
push
lods
test
mov
scas
cs
movsl
pop
push
xor
mov
and
test
ret
push
lods
or
push
dec
sub
and
cwtl
icebp
sbb
push
or
cmp
sbb
orb
xor
inc
jbe
add
fsubp
mov
cmpsl
xchg
xchg
push
and
lods
aam
inc
loope
jns
mov
test
int3
out
push
mov
cmp
mov
mov
sbb
imul
mov
pop
mov
and
aam
ja
sub
and
inc
gs
js
pop
sbb
inc
pop
jbe
imul
xor
adc
dec
xchg
mov
pushf
mov
pop
imul
inc
insb
fcomps
sub
int3
mov
imul
xor
ficompl
add
cmp
in
cmp
xchg
or
lret
sbb
popa
adc
mov
mov
sub
lea
jnp
popf
cmp
arpl
and
cmpsl
xchg
jae
fidivrs
test
sbb
adc
fwait
ret
xor
mov
leave
scas
add
push
sti
xchg
fwait
imul
sahf
lcall
lods
icebp
stos
out
pop
pop
xor
dec
push
push
outsl
cmp
inc
pop
es
mov
push
ret
sbb
add
jl
mov
idivb
lods
mov
arpl
les
cmp
and
or
cmp
sbb
cltd
insb
push
into
imul
shr
mov
xchg
ret
out
lock
ja
stos
pop
cmp
xlat
pushf
sub
fmul
push
js
movsl
sahf
mov
mov
test
xchg
cwtl
jmp
mov
xor
arpl
lcall
mov
fwait
dec
int3
cmp
popf
mov
stos
xchg
xchg
repnz
push
and
sub
xchg
repnz
stos
dec
push
jne
addr16
sbbb
sbb
or
jnp
jnp
xchg
push
mov
jmp
inc
xchg
mov
sbb
or
out
pushf
loopne
leave
loop
jno
xor
out
movsb
push
andb
cwtl
aas
das
dec
jmp
mov
xor
xchg
mov
out
cmp
mov
movsb
adc
ja
xchg
adc
mov
idivl
jle
in
into
jp
xor
dec
sbb
inc
jle
mov
sub
mov
xchg
repnz
fcmove
movsb
mov
lods
xor
inc
stos
fiaddl
push
fdivl
mov
pop
xlat
push
pop
lcall
leave
sqrtps
mov
int3
cmp
mov
scas
sub
jno
dec
sti
dec
inc
nop
jl
pop
mov
add
push
fdivrl
leave
mov
cld
sar
popa
repz
jnp
add
mov
sbb
jo
cmp
cmp
mov
loop
js
cld
repnz
xlat
fiadds
sub
call
mov
lcall
adc
pop
repz
insb
daa
cmc
test
les
daa
sarl
xor
dec
inc
leave
push
aaa
les
mov
adc
sub
push
and
pop
cmp
xor
mov
mov
fmuls
xor
adc
mov
scas
or
btr
jmp
adc
sbb
aam
jle
clc
repz
pop
dec
je
add
lea
jns
stc
arpl
sub
loope
sub
xor
sbb
mov
push
ja
js
and
adc
jb
loope
daa
imul
adc
out
sbb
cwtl
imul
clc
inc
movsl
jne
int3
lods
lods
aad
sbbb
test
sbb
jp
dec
push
jl
jl
push
pushf
xlat
dec
inc
pop
cmp
loope
rclb
sub
dec
clc
mov
nop
call
xchg
and
hlt
pushf
icebp
addr16
mov
cmpsl
iret
loopne
mov
daa
push
std
mov
nop
cwtl
inc
sub
fldl
inc
push
adc
inc
lret
inc
xor
adc
mov
cs
cli
inc
imul
mov
xor
inc
mov
jge
lds
stc
or
jl
insb
loope
ds
test
mov
shr
mov
add
rcrb
pushf
lahf
mov
sbb
sub
mov
mov
sbb
push
dec
in
and
sbb
pop
cmp
out
inc
fsubrs
insl
stos
insb
repz
xor
imul
jecxz
add
cmp
mov
iret
jp
imulb
mov
jae
push
sub
sub
movsl
or
imul
xchg
loopne
inc
push
sub
cmpsl
xchg
dec
jp
cwtl
je
dec
inc
mov
cmp
in
das
push
mov
mov
xor
push
push
mov
hlt
fucom
mov
aaa
sub
aad
add
outsb
mov
mov
mov
mov
push
test
xor
int3
in
lcall
negb
repnz
add
fcomp
or
fs
or
orb
das
aam
out
data16
mov
dec
frndint
in
movsb
stos
or
sub
sbb
nop
fistpll
cmp
xchg
sahf
cmp
mov
sbb
or
mov
push
mov
sbb
movsb
leave
sub
mov
mov
lcall
sub
addr16
xlat
outsb
mov
iret
in
mov
lods
or
xorl
sub
sbb
sub
loope
mov
enter
shll
xchg
xchg
cltd
movsb
add
repz
insb
jl
ret
mov
pop
fldenv
inc
add
int3
bound
imul
cli
adc
fwait
stos
mov
data16
repnz
pop
lock
nop
sub
icebp
cmp
xlat
movsb
xor
ljmp
stc
pop
cwtl
jnp
insb
sub
mov
mov
popa
mov
mov
adc
sub
aaa
add
sbb
push
and
imul
scas
mov
fmuls
add
fidivrs
mov
sub
push
xchg
cld
xchg
out
push
push
dec
inc
imul
fidivrl
cmp
dec
mov
shrb
xlat
movsb
mov
or
loop
insb
xchg
daa
xchg
xchg
das
icebp
imul
insb
pop
pop
cltd
cmpl
xchg
sub
pop
jno
mov
sub
adc
mov
dec
loope
xchg
jae
adcl
dec
mov
mov
lahf
les
ret
std
insb
and
or
ficompl
mov
js
xorl
cmp
xchg
jecxz
adc
adc
loope
jge
adc
mov
xor
rcrl
scas
or
jecxz
jl
daa
mov
xchg
cltd
int
ffreep
push
or
jns
pop
cli
sahf
test
rcrl
fistpl
push
dec
mov
inc
into
mov
mov
and
je
or
fsubl
icebp
mov
mov
sbb
jg
insb
sub
pop
adc
aas
sub
imul
in
arpl
movsl
insl
xor
mov
sub
xchg
cli
mov
int
pop
push
repz
out
es
jo
iret
push
push
das
imul
imul
je
rcrb
lret
sbb
pop
cld
pushf
movsl
out
fwait
rcl
pusha
push
adc
pop
fcoml
sub
into
shl
in
adc
mov
xchg
loop
jae
insb
pop
mov
jmp
outsl
jnp
fs
add
sbb
dec
aas
mov
mov
adc
jl
mov
sub
insb
mov
ljmp
sbbl
jg
mov
adc
or
inc
add
test
out
out
rorb
jae
sbb
arpl
fcompl
les
xlat
inc
test
sub
xchg
sub
mov
mov
daa
sub
xor
pop
imul
vpsrad
jae
imul
movsl
and
aas
clzero
loope
cmp
or
test
or
scas
pop
loop
dec
shlb
dec
jne
cltd
pop
sub
dec
insb
inc
lret
cmp
and
femms
repnz
xchg
xor
out
jbe
in
mov
movsl
cmp
or
xor
sarl
fwait
mov
pop
in
inc
jnp
cmp
aas
mov
ds
mov
imul
popl
dec
test
mov
pop
pop
push
sbb
mov
sub
push
adc
leave
push
icebp
sbb
insb
dec
es
and
add
xchg
iret
mov
pop
adc
pop
jp
jmp
dec
fwait
dec
subb
sub
push
pop
xchg
jecxz
add
insl
mov
mov
inc
sti
sub
sub
dec
jmp
push
mov
movsb
pop
sbb
lcall
pop
pop
nop
xchg
pop
int
call
dec
sbb
mov
insb
mov
scas
add
in
lock
sub
dec
lahf
or
and
repz
adc
int
lcall
push
fnstenv
xchg
test
pop
hlt
mov
adc
daa
sub
insl
and
dec
in
std
xor
push
dec
mov
xchg
pop
cld
add
shll
mov
sbb
dec
push
hlt
cmp
push
addr16
push
xchg
push
add
jae
sti
int
cmp
imul
adc
dec
inc
sbb
imul
fwait
stos
xchg
insb
or
cli
into
pop
es
aad
dec
jl
pop
push
stos
xchg
mov
mov
clc
cmpsl
or
jnp
in
daa
fs
inc
dec
sub
imul
jnp
xlat
push
sub
mov
inc
mov
pushf
jae
decl
xor
call
jb
mov
dec
xchg
es
mov
lock
sti
push
jns
mov
xchg
enter
jg
cmp
outsl
jae
mov
out
cli
in
xlat
adc
in
sub
loop
mov
push
xlat
push
insl
cmp
ljmp
mov
in
outsl
or
sub
stos
enter
pop
mov
jge
or
or
jbe
rorl
sahf
cli
pop
and
jl
push
sub
mov
ja
dec
lods
jne
xchg
repnz
in
insb
sub
cmp
rorl
mov
aaa
dec
lcall
out
fimull
sub
add
and
push
loopne
add
mov
xchg
mov
lret
int3
adcb
jmp
push
mov
in
imul
data16
pushf
adc
fsubp
cwtl
mov
xor
pushf
jmp
adc
mov
xchg
int
sub
add
pop
ret
lods
ret
jl
imul
cmp
loop
dec
pop
gs
fsubrl
leave
fwait
jnp
or
lea
inc
xchg
mov
js
xor
pop
out
jle
movsb
and
repnz
push
mov
push
cwtl
cmpsb
out
jae
adc
cmp
imul
test
jl
jb
add
loopne
scas
pop
jg
and
mov
mov
inc
ret
sub
sub
insb
repnz
adc
sub
iret
fstpl
mov
lods
or
mov
shlb
cwtl
notl
stos
test
cmp
and
fiaddl
mov
int3
sahf
sub
mov
fbstp
push
mov
sub
pop
jmp
ja
and
jp
nop
mov
sbb
cmp
and
sub
dec
mov
pop
sbb
sub
imul
xchg
add
cwtl
pop
cmp
dec
aam
push
imul
sbb
push
dec
mov
mov
mov
mov
jg
mov
in
outsl
jp
and
or
push
cmp
shlb
or
in
adc
jmp
addr16
addr16
jb
and
adc
push
stos
fistps
dec
sbb
push
jle
cld
nop
insb
call
dec
fsubrl
mov
or
mov
mov
sbb
int3
imul
into
mov
sbb
imul
mov
or
icebp
icebp
in
jae
mov
das
add
je
cmp
data16
divl
lcallw
mov
mov
fadds
sbb
cmp
test
iret
fsubr
xlat
jle
repz
or
std
ljmp
or
xchg
push
mov
in
mov
xchg
jle
xor
gs
ss
mov
cmp
inc
jo
jbe
ret
imul
cmpsb
pusha
jecxz
sub
loopne
jg
ss
cmp
push
or
jae
lods
mov
pop
lret
jmp
fdivl
stc
scas
aaa
xor
dec
cmp
outsl
push
in
mov
jae
addr16
mov
das
aam
mov
out
test
es
or
cmp
sti
adc
fimull
jno
test
inc
cwtl
fldt
inc
xor
or
imul
sub
orb
hlt
push
mov
adc
xlat
jecxz
add
call
loopne
lds
mov
or
mov
call
arpl
sub
jl
stos
dec
push
pop
loopne
mov
int
leave
or
push
decl
fmull
adc
lock
xor
mov
dec
adc
dec
pop
sbb
ret
jl
fdivs
scas
cmp
or
out
adc
inc
sub
push
sbb
xchg
aas
test
js
jge
xor
xchg
icebp
daa
das
cs
ret
cli
pop
jno
mov
pop
fbstp
jge
mov
ficoms
sahf
mov
test
sub
cmpsl
test
jmp
or
xor
sbb
push
mov
xor
or
aam
mov
pop
aad
mov
lret
pop
mov
outsl
stos
sahf
cli
push
ss
xchg
icebp
test
mov
xchg
fwait
add
aam
aad
mov
pop
xor
imul
aaa
lret
ljmp
imul
jae
dec
add
mov
enter
cmp
fidivrs
ret
pop
adc
jle
push
cld
sahf
lods
rcr
push
mov
mov
xor
scas
fistl
or
mov
addr16
inc
mov
cwtl
nop
cmpsb
js
out
jge
cltd
stos
ljmp
xchg
add
imul
loopne
xchg
out
fstps
push
cmp
cmc
xor
sbb
jnp
imul
pushf
pop
imul
dec
sbb
imul
pop
jns
stos
fwait
fwait
push
sbb
mov
in
add
fsub
out
int3
pop
sub
fmull
mov
xor
fidivs
cmp
mov
dec
and
in
out
repnz
hlt
dec
pop
nop
mov
push
sub
and
mov
xchg
addl
xchg
xchg
repnz
cmpsl
test
xor
dec
xchg
and
pushf
daa
or
adc
and
cld
call
cmpsl
in
pcmpeqw
dec
aaa
fnop
cld
stc
daa
add
mov
xchg
in
xor
mov
mov
stos
xchg
lret
ficomps
push
fst
scas
push
inc
ss
sbb
mov
sub
or
mov
loope
movb
xor
ja
sbb
nop
fcompl
xor
pop
cmpsl
sub
imul
loop
cmp
cmp
mov
lahf
dec
imul
push
lea
repnz
mulb
or
sahf
xchg
push
rol
pop
xchg
das
mov
xor
jge
jl
ficompl
fsubs
es
imul
inc
cmp
push
lahf
sbb
cs
lea
dec
inc
and
mov
mov
add
popa
xchg
nop
inc
jb
adc
mov
sbb
dec
loope
dec
xor
je
xor
or
sbb
cmc
push
inc
adc
call
test
dec
adc
mov
sub
xor
cmp
sbb
pop
subb
ja
jmp
mov
mov
sbbl
mov
add
popa
loope
xor
filds
mov
ss
sub
cmp
mov
jg
sub
popa
sub
imul
subl
int3
lea
inc
cmp
pop
sbb
movsb
insb
add
jge
shl
faddl
imul
mov
adc
jge
jno
mov
cmp
in
cmc
int
nop
mov
push
sahf
xchg
inc
test
inc
adc
mov
cmpsl
inc
shr
mov
cmp
sub
mov
jne
cltd
mov
push
lcall
lea
cmp
stc
addb
mov
insb
adc
xor
ficoms
bound
or
hlt
sub
fwait
dec
sbb
sub
pop
inc
push
mov
out
add
cs
cmpsl
fimull
scas
mov
mov
jae
popf
packssdw
dec
push
fldt
test
insb
push
call
fildl
mov
cmp
adc
push
cwtl
jnp
les
loope
mov
bound
stc
and
icebp
lods
push
scas
and
dec
cmp
jae
and
push
repnz
jmp
push
dec
jae
leave
add
or
cld
decl
xchg
fsub
repz
mov
popa
outsl
xchg
xchg
icebp
lret
mov
cwtl
shll
xor
or
mov
in
lea
icebp
add
add
pusha
mov
pop
insb
lds
jb
push
and
sub
cmp
xchg
dec
insb
xor
mov
leave
ret
jle
cmp
push
hlt
mov
cmpsb
inc
jg
test
adcb
pop
adc
mov
insb
mov
or
pop
sub
pop
add
push
inc
fdivrs
call
cmpsb
jp
adc
adc
xor
cmp
mov
sbb
cmp
test
leave
cmp
push
lock
int
pusha
add
jmp
andl
cld
xor
aas
mov
or
pop
loope
ss
add
lea
xor
jo
pop
sti
inc
insb
mov
mov
aam
push
or
jle
and
ljmp
in
and
les
pop
mov
add
inc
push
cli
stc
sbb
pushf
arpl
xor
addl
lods
xchg
cmp
gs
push
mov
mov
mov
imul
mov
pop
pop
and
imul
cmpl
jecxz
insb
mov
jp
pop
in
outsb
in
mov
lcall
mov
adc
stos
push
imul
mov
sbb
ds
fstpt
into
sub
mov
mov
push
lret
hlt
aas
and
call
lods
cld
shrb
scas
mov
adc
add
hlt
cwtl
cmp
ljmp
cmp
mov
test
js
inc
mov
and
xor
pop
ret
cwtl
in
sub
std
stos
or
les
push
adc
add
int
fimuls
xchg
mov
inc
hlt
lcall
push
imul
jge
cmp
pop
imulb
mov
ret
loopne
add
fs
sub
daa
inc
cltd
cmpsl
in
or
push
imul
fsubrp
pop
in
inc
add
lods
popf
xchg
imul
mov
and
pop
mov
pop
dec
xchg
icebp
mov
add
push
imul
xchg
add
sbbl
loop
or
aam
aam
not
rcr
shl
lock
pusha
imul
imul
in
mull
mov
xor
fmuls
sbb
push
stos
in
shlb
adc
mov
push
sbb
jmp
jmp
xor
ret
and
insb
mov
xchg
stc
int3
hlt
push
imul
and
jbe
roll
xor
jmp
ja
bound
sub
xchg
ret
xchg
ds
mov
popa
cmp
imul
mov
je
mov
mov
xchg
mov
insb
out
orl
pop
ljmp
cmp
clc
dec
lock
mov
gs
int3
sub
mov
cli
push
mov
dec
std
mov
scas
jb
imul
sub
xor
jl
shrb
repz
fsubrs
push
mov
repnz
and
int3
movsl
jns
out
pop
ficoml
or
test
xlat
lds
pushf
lcall
and
jl
addr16
pop
js
adc
stc
sbb
je
in
ret
adc
scas
jl
stos
outsl
test
or
cld
or
lock
dec
sub
sbb
mov
loope
shlb
xchg
imul
mov
int
mov
dec
mov
popf
nop
cwtl
ja
jle
jns
iret
inc
mov
imul
cmp
enter
mov
imul
out
orl
jmp
lea
sbb
mov
js
push
out
sahf
fwait
mov
mov
hlt
rorl
mov
inc
sbb
sahf
popa
mov
jl
cld
aas
test
lds
fildll
aam
sub
call
fisttpl
in
xchg
mov
int
xor
imul
jp
rorl
insb
sub
pop
dec
push
push
arpl
loope
sub
push
into
lcall
jnp
shrb
push
push
sub
lcall
imul
cmpsb
sub
mov
push
sbb
cmpsb
and
sub
and
fwait
stos
dec
imul
cmp
arpl
add
sti
jnp
nop
std
sub
push
std
mov
or
shrd
cmp
repz
push
push
cmp
lcall
mov
enter
mov
call
cmp
js
cmp
jb
dec
iret
jle
sarl
cmp
les
mov
pop
aaa
add
stos
fisubrs
xchg
dec
sub
stos
aas
mov
stos
mov
adc
iret
fwait
xor
js
lcall
add
mov
loope
test
mov
cmpsl
cmp
xor
push
test
lcall
jle
cmp
push
sub
mov
repz
push
sub
in
add
outsl
mov
push
ja
dec
adc
test
aad
pushf
adc
lods
mov
imul
mov
xchg
shrl
xor
mov
add
addr16
fldcw
mov
sub
inc
cli
lds
out
and
sbb
dec
jmp
mov
imull
into
test
mov
arpl
insb
fisubs
or
fidivrs
push
int
divb
sub
or
stos
mov
lds
push
imul
ja
xchg
mov
lods
pop
or
mov
mov
imul
mov
out
outsl
xor
out
xor
ret
scas
jmp
call
faddl
xchg
mov
inc
mov
add
add
inc
ret
inc
cmpsb
push
shr
test
inc
insb
cmp
inc
loop
adc
test
negl
sub
xor
mov
push
jl
ds
rorl
push
xchg
pop
cmp
push
sbb
movsb
adc
negl
push
aam
rcl
in
imul
loopne
inc
idiv
sbb
jp
in
pushf
pop
xor
dec
call
sbb
add
jns
push
insb
icebp
pushf
leave
loop
dec
or
imul
add
repnz
cmpsl
nop
jle
pop
cmp
lahf
mov
fcompl
insb
adc
pop
adc
iret
jne
pop
cmp
sahf
xchg
clc
mov
xchg
sub
xor
insb
inc
sbb
mov
in
xor
xchg
js
add
loop
jl
xchg
xor
and
add
imul
pop
idiv
repnz
sarb
sti
sahf
push
fnsave
mulb
mov
mov
mov
push
nop
movl
cmp
mov
data16
cmp
mov
cmp
xor
dec
jnp
jne
pop
imul
dec
or
dec
shr
and
sbb
lock
in
cmc
xchg
cld
adc
jb
adc
imul
lcall
insb
sbb
push
cmp
ja
imul
mov
jae
mov
xor
dec
leave
decb
cltd
adcl
xor
in
cmp
fimull
push
xchg
pop
cmp
and
icebp
mov
mov
dec
mov
sbb
sbb
mov
mov
mov
sub
outsl
sti
or
pop
sbb
mov
cltd
test
jl
rolb
add
sahf
cwtl
ja
movsl
mov
sbb
inc
sbb
xor
pop
lds
loope
cmp
imul
rcr
cmp
loopne
out
cmp
daa
jne
aas
repnz
and
stc
push
adc
pop
mov
mov
mov
or
and
je
fmulp
sub
iret
sub
loop
push
clc
jmp
cmp
pusha
sub
test
mov
sub
stos
or
xchg
or
inc
mov
or
mov
imul
imul
add
or
fdivr
mov
jp
pop
out
daa
stos
add
cmpsb
arpl
cmp
cmpb
xchg
es
xor
aas
sbb
stc
sub
ret
push
xor
mov
inc
push
faddl
fisubrs
mov
out
ret
xor
in
cmpsb
cmp
cltd
test
sub
mov
loop
insb
or
daa
xor
sti
test
fldt
pop
dec
xor
xor
repz
and
ja
add
cmp
push
lods
loopne
jne
int3
add
cwtl
jae
cld
test
add
cmp
xchg
sub
or
and
xchg
imul
xchg
ds
fwait
pop
mov
fistpll
push
cwtl
test
pop
sbb
pop
adc
imul
daa
outsl
cmp
mov
dec
lods
daa
and
imul
sbb
mov
xor
jo
repz
jl
lahf
jp
or
leave
dec
push
adc
sub
xchg
mov
pushf
and
jmp
mov
int
adc
fiadds
das
fwait
cltd
sub
inc
xchg
lret
cli
lcall
xchg
cmc
push
and
fstps
mov
mov
fisubrs
jmp
fs
sbb
mov
mov
jmp
repz
fldcw
fld
mov
orb
lcall
dec
mov
mov
fwait
mov
ja
mov
cmp
aas
movsl
clc
out
and
xor
and
push
add
loop
pop
movsb
rcll
xchg
jmp
xchg
xor
imul
test
or
hlt
sub
sarb
cmp
aam
jg
ret
xor
xchg
shlb
packssdw
and
or
mov
shl
loop
fwait
fwait
sarb
jl
test
cmp
xchg
cmp
or
xor
sbb
push
clc
jle
daa
cmp
repz
xor
imul
pusha
xchg
sbb
and
mov
daa
fwait
dec
ss
cmp
lods
mov
push
cmpsl
push
stc
xlat
imul
popf
int3
out
mov
imul
sbb
mov
mov
es
std
lret
ficomps
pusha
xchg
clc
cltd
into
test
call
push
add
insb
cmp
mov
nop
dec
mov
outsl
mov
jae
loope
dec
add
push
inc
or
clc
jae
sbbb
push
add
push
and
iret
pop
popf
xchg
xchg
inc
repnz
mov
mov
fwait
imul
xchg
cld
fidivrl
xchg
mov
das
lea
xor
fucomp
adc
mov
mov
nop
pop
dec
xor
shl
test
stos
sahf
insb
pop
and
fwait
push
mov
dec
repnz
stos
pop
cs
ficomps
imul
gs
mov
mov
out
inc
popf
jecxz
cmp
dec
or
add
adc
cpuid
mov
or
mov
fwait
pushf
or
push
mov
xor
addr16
scas
jl
cmpb
shrl
and
insb
fsubrp
pop
jae
mov
jmp
mov
or
or
mov
pop
and
int3
push
cmp
imul
cmp
out
push
lret
ret
hlt
sub
out
mov
pushf
imul
push
cmpb
add
dec
or
dec
cmc
inc
in
xor
add
sbb
icebp
je
mov
stc
jp
fsubs
aas
adc
or
testb
push
lret
pushf
loopne
xchg
stos
cmp
xlat
dec
or
lret
pop
pop
iret
test
mov
inc
lds
in
rorl
xchg
stc
cmc
xchg
insb
cmp
movsl
ret
data16
call
cltd
clc
sbb
jle
sti
or
push
loopne
fbld
push
inc
mov
cs
pop
cwtl
mov
push
xorb
sub
or
sub
cli
mov
cmpsb
xor
imul
fsts
cmp
xchg
gs
pop
jnp
loope
push
inc
incb
xor
dec
cmp
xchg
lea
scas
out
push
enter
inc
int
mov
lds
addr16
int
int3
jge
mov
push
adc
adc
nop
rorb
mov
xor
inc
jnp,pn
decb
lods
dec
pop
das
or
mov
xchg
dec
imul
sub
adc
adc
add
cmp
fs
loop
adc
inc
stos
movaps
mov
insb
daa
pop
and
mov
dec
mov
sbb
sub
js
sbb
fcmovbe
lcall
mov
and
sahf
arpl
iret
mov
cld
jne
faddp
popf
push
mov
xor
mov
pop
or
cmp
pop
and
sbb
dec
rorl
xor
mov
mov
sarl
ljmp
sbb
mov
dec
cwtl
sbb
sbb
xor
lret
sub
push
cmp
add
hlt
inc
xchg
addr16
insl
add
shr
jno
iret
inc
sub
or
cs
lods
popl
sbb
repz
cmpsl
repnz
xchg
xchg
aad
pushf
add
adc
leave
inc
or
imul
or
out
sahf
sub
cld
add
or
int3
jmp
jae
sbb
jbe
cli
pop
stos
aam
out
fwait
mov
das
xchg
repz
mov
lods
push
imul
ljmp
fucomp
lcall
cmp
jmp
stos
sahf
mov
xor
mov
fdivrl
fidivrl
xchg
repnz
mov
std
mov
fwait
push
mov
shlb
rcr
aam
push
setne
lds
sbb
mov
adc
imull
sub
out
aas
mov
movsl
out
pop
clc
or
inc
sbb
iret
out
add
pop
imul
call
imul
mov
dec
pop
movsl
inc
pushf
dec
xorb
xchg
cmp
inc
jmp
cmpsb
xchg
stos
xchg
sub
in
mov
push
jmp
cmp
lock
fnop
movsb
adc
jnp
imul
cld
test
cmpsl
jne
or
or
std
aad
jns
lahf
data16
mov
adc
cli
ret
adc
mov
and
sub
cmpsl
and
dec
push
mov
rcl
xchg
adc
xlat
push
add
xor
jg
xchg
dec
jae
mov
outsl
in
shl
add
and
mov
jmp
mov
ret
fidivs
int3
cmpsl
sbb
ljmp
lahf
shll
mov
cmp
insb
or
hlt
int3
jbe
pop
mov
dec
ja
sarl
jmp
lret
dec
and
dec
out
call
orl
cmp
fldenv
mov
or
ss
das
pusha
mov
out
rorl
mov
pop
push
fdivl
cmp
mov
scas
mov
jge
loopne
and
lods
push
xchg
dec
nop
cmpsb
dec
add
daa
imul
push
sbb
cmpsl
sub
in
or
das
aas
lods
mov
test
pushf
imul
out
lcall
fisttpl
add
cwtl
push
cmp
call
mov
dec
bound
mov
inc
mov
lret
pop
push
out
adc
std
fidivrs
call
fistpl
dec
leave
xchg
test
lods
adc
lret
dec
outsl
xchg
sbb
lretw
into
xor
test
sub
xor
xchg
xchg
dec
push
sub
dec
fwait
sub
or
subb
scas
mov
daa
inc
mov
push
shll
mov
dec
scas
stos
andb
pop
fildl
dec
sub
movsb
arpl
fdivrs
cmp
xor
cmp
dec
cli
pop
jp
cmp
pop
pop
fdivr
xchg
xor
push
jnp
imul
rclb
repz
lret
adc
jnp
adc
sub
pop
dec
fsubrl
loop
dec
xchg
pushf
jp
adc
cmp
andb
xchg
xchg
adc
or
mov
popa
into
nop
pushf
fnstcw
fisttpl
in
add
imul
jo
adc
sbb
jns
xlat
mov
int3
insb
test
push
sarl
inc
cmp
imul
rorb
and
jecxz
push
cs
imul
fcompl
lds
dec
cmp
scas
sub
jl
or
mov
out
cli
cmp
lret
lcall
jg
xchg
std
dec
cmp
lock
jge
and
data16
roll
fbld
ja
xchg
mov
stos
cltd
mov
sub
sbb
cmp
inc
mov
mov
mov
ficoms
or
lea
inc
cmp
aas
popf
ds
loope
test
mov
fisttpll
mov
sbb
push
cmp
xchg
imul
mov
dec
testl
add
nop
pop
xchg
cmp
mov
mov
or
inc
sub
push
sub
loopne
cmp
push
jle
cmp
fmull
adc
enter
or
pop
shrb
sti
dec
xor
mov
xchg
pop
ds
dec
aas
stos
xor
pop
xor
sarl
push
frstor
call
xor
test
testl
inc
and
rcll
int3
sti
mov
jp
jb
imul
push
out
xor
and
push
push
fidivrl
imul
sbb
stc
aaa
imull
mov
sbb
stos
adc
test
repz
imul
sub
dec
dec
mov
cld
jmp
jge
out
push
imul
mov
popl
repz
int3
push
xchg
cs
dec
scas
and
stc
add
or
xor
hlt
test
or
mov
pop
dec
pushf
mov
mov
xor
test
gs
daa
xchg
pop
jecxz
ret
loop
mov
jnp
cmp
jle
push
shll
mov
xchg
sbb
jg
retw
jecxz
push
imul
xor
imul
cld
lods
fmull
shl
cld
sub
nop
ss
sub
mov
inc
gs
mov
jp
sub
sub
mov
add
imul
js
iret
push
jbe
or
mov
sbb
mov
xor
dec
pop
aas
jecxz
sub
push
aaa
iret
sub
xor
sub
and
cwtl
sahf
sub
popa
data16
pushf
scas
inc
ljmp
ficoml
fsubr
xor
mov
js
or
mov
mov
xor
je
cli
jmp
add
lods
adc
sbb
cmpsb
sbb
jecxz
xor
shr
xor
aas
in
cld
negl
je
inc
lods
stos
sub
push
aaa
movsb
mov
ljmp
fimull
xor
push
or
gs
lcall
add
and
les
jl
add
push
push
sbb
sbb
cmp
xor
xor
inc
jmp
or
mov
jecxz
ljmp
ret
repz
mov
adc
inc
add
or
mov
jmp
mov
sub
mov
pop
lock
cwtl
and
repz
adc
decb
xor
sub
pusha
adc
cld
or
cmp
or
mov
jl
sbb
sbb
sub
sbb
jmp
sbb
sti
sbb
lock
jl
mov
jmp
nop
or
push
fdivrl
ss
mov
mov
jecxz
fwait
dec
rcll
dec
sbb
nop
insb
mov
adc
lods
pop
nop
sti
mov
dec
mov
and
cmp
adc
fs
jnp
sub
je
hlt
cli
jecxz
sbb
fdivr
fs
xor
in
rcr
cmp
fcomi
lahf
sub
xlat
push
sub
lcall
pushf
xor
sti
je
adc
pop
arpl
test
outsl
cmp
out
cltd
xchg
ds
xchg
add
aaa
lds
insb
or
lods
sbb
outsl
xchg
shl
dec
lret
insb
loop
shr
jle
xor
dec
pop
stos
mov
imul
es
aam
jecxz
iret
dec
int
or
mov
fnstsw
xchg
cmp
mov
fwait
imul
push
cwtl
insb
add
loop
int3
push
out
cmp
in
je
pop
rcrl
aad
add
lret
je
sbb
pushf
addb
imul
lcall
lods
xor
sub
outsl
les
roll
or
push
mov
jmp
sahf
xchg
out
les
push
adc
xor
and
ret
xor
push
arpl
adc
lods
xor
orb
sbb
pop
shlb
jg
ljmp
add
cld
dec
sub
loope
mov
fimull
xchg
push
fldenv
xor
xorl
sbb
popa
fstp
mov
fsubr
adc
ljmp
and
imul
test
xchg
sub
or
xchg
repz
dec
lret
vxorps
sar
push
fists
call
jmp
ror
std
fisttpl
xchg
cmp
push
push
jle
jne
pusha
fwait
push
dec
push
ljmp
adc
and
stos
jae
sub
cmp
xor
mov
pusha
mov
xchg
jmp
jge
imul
hlt
lods
cmp
in
rclb
mov
mov
cmp
dec
or
jl
dec
aaa
pop
push
std
dec
dec
sbb
scas
cmpl
imul
testl
sub
inc
rcl
ss
push
pop
push
int3
jae
sbbb
rcrl
pushf
xlat
into
mov
int
in
sub
jne
out
mov
mov
gs
pop
popl
cmpsl
mov
push
cmp
ret
mov
cmovnp
mov
push
sahf
mov
lea
dec
add
fisttpll
xorb
icebp
sbb
fsts
pop
xchg
mov
clc
lahf
into
inc
loop
ljmp
ja
mov
and
ljmp
inc
sbb
clc
xor
cmpsb
mov
push
xor
add
cli
jns
insl
repz
imul
pop
xchg
add
xor
fmulp
sbb
les
les
lods
jno
adc
into
push
fisubl
dec
add
das
or
pop
jnp
and
es
adc
cmp
dec
mov
inc
jg
pop
insb
inc
sbb
xlat
stc
adc
add
xor
adc
hlt
push
lret
jl
and
icebp
movsl
dec
dec
js
mov
insl
out
js
mov
xor
shrb
scas
test
aas
hlt
ds
outsl
sub
cli
loop
inc
xchg
fsubrs
outsl
das
arpl
xor
mov
mov
fidivrl
add
cmp
stc
mov
sarb
ja
adc
cmpsb
arpl
adc
add
std
lahf
js
mov
loopne
mull
das
sub
mov
inc
stos
jo
addl
sub
nopl
out
xor
jnp
sub
hlt
cmpb
and
imul
mov
sub
or
cmp
in
pushf
inc
xchg
insb
sub
xor
sbb
push
adc
cli
lcall
js
push
xchg
sbbl
in
dec
jl
sub
xchg
inc
sbb
js
iret
pusha
push
adc
mov
dec
fwait
sub
std
sub
dec
loope
mov
push
jl
add
jge
cmp
xlat
cmp
or
jbe
cld
add
xor
sub
mov
movsl
push
ret
aas
xor
sub
and
enter
inc
push
cmp
testb
cmc
arpl
aas
idiv
push
mov
adc
or
xor
dec
int
jge
fistl
sbb
mov
xlat
call
jmp
xchg
jo
jecxz
mov
imul
cmp
mov
push
adc
push
add
mov
arpl
jecxz
xor
mov
lret
jmp
cli
dec
cmp
sub
fnstsw
aam
std
das
in
std
clc
cmpsl
aaa
inc
dec
push
daa
notl
mov
fidivs
call
gs
lea
sbb
adc
xchg
in
pusha
fdivl
or
and
jge
sbb
insb
movsb
int3
cmp
mov
pop
dec
imul
dec
sub
inc
sbbl
xor
or
imul
nop
subb
push
mov
test
mov
pop
sub
xor
xchg
pop
jb
fbstp
inc
pop
xorl
test
imul
shr
ds
jbe
loop
sbb
jmp
mov
data16
mov
fisubrs
mov
sti
lahf
pop
call
mov
or
aad
out
xchg
xor
test
mov
cld
xchg
mov
dec
cmp
inc
pop
sub
mov
outsb
pop
inc
pop
repz
jnp
roll
mov
add
pushf
insb
cmp
xorl
jns
xchg
xor
lods
icebp
adc
ret
cmp
dec
add
push
push
sub
inc
push
cmpsb
xchg
stos
or
dec
dec
mov
cmp
ds
cmp
int
enter
daa
inc
dec
std
cmpsb
ss
cmp
lahf
xor
scas
fcomi
movsl
inc
xchg
nop
stos
int3
and
xchg
cmp
jo
loopne
mov
les
mov
sub
pop
add
cwtl
xchg
adc
imul
mov
and
xlat
out
les
inc
add
add
xchg
mov
loope
sub
push
xor
aas
push
popa
stos
sbb
mov
jl
xchg
pop
sbb
lock
jl
sbb
cmp
dec
lahf
push
in
jns
mov
negl
pop
xor
out
addb
adc
mov
stos
push
movsb
sub
daa
ret
mov
test
repnz
xchg
sbb
add
fdivrs
dec
pop
xor
pop
subb
push
out
movsl
add
pushf
cmpb
sub
mov
cmp
insb
movsl
push
xor
cmc
imul
shlb
pop
dec
fsubrl
xor
xchg
jmp
xor
cmp
cwtl
sbb
adc
in
cld
lock
int3
pop
ljmp
xchg
insb
das
add
repnz
outsl
push
push
adc
sub
inc
cmp
xchg
mov
in
test
out
hlt
fsubrp
adcb
inc
std
xchg
imul
dec
mov
and
pushf
mov
insb
push
add
in
shl
push
test
lods
js
push
out
lahf
hlt
pop
push
imul
cmc
testb
sahf
stos
lret
shrb
and
cwtl
sub
mov
jo
call
enter
and
fwait
mov
sub
ss
inc
push
repz
jp
cmc
cmpsb
sti
sti
roll
add
es
dec
pop
add
pushf
sub
mov
fidivl
lds
repz
xchg
adc
es
jbe
je
imul
add
mov
pop
add
jno
lds
dec
mov
jbe
sub
add
sub
jge
fdivrl
push
mov
push
xlat
fstpt
std
lahf
lock
aam
sub
or
mov
pop
sub
das
insb
add
fisubs
cmp
push
scas
xchg
repnz
es
xor
ret
mov
push
inc
sbb
jp
test
xchg
mov
lahf
sbb
je
repnz
add
outsl
jle
xor
mov
cld
les
adc
ret
push
cmp
jae
out
cmp
or
cld
les
xchg
or
lcall
xor
cmp
dec
scas
pop
aad
jns
pop
sub
xlat
dec
dec
add
cmp
cmp
adc
mov
cmp
int3
mov
push
je
frstor
subb
sub
and
cli
loop
stos
hlt
xor
outsl
pop
stos
xchg
out
mov
aas
mov
pop
or
inc
mov
add
fiadds
arpl
mov
outsl
les
stc
push
imul
xor
mov
or
dec
test
pop
int3
insb
mov
dec
jle
in
aam
pop
inc
fiadds
cwtl
sub
push
pcmpeqb
ret
cld
movsl
orl
clc
sub
push
xor
and
mov
movsb
add
fsubp
les
add
push
fldcw
repz
or
gs
fdivl
movsl
cmc
mov
cmp
cmpsb
jno
lods
lds
add
fcoms
sahf
adc
in
dec
sbb
adc
cmp
out
rcrl
add
xchg
adc
and
jno
out
insl
das
xchg
xor
inc
xor
add
jmp
xor
pushf
and
add
imul
sub
imul
mov
fcoms
addr16
pop
mov
mov
in
inc
mov
ret
pop
push
sub
and
sub
inc
jne
inc
pop
int3
movsl
rcll
dec
sbb
jae
add
dec
mov
cmp
inc
push
cmp
mov
aaa
pushf
push
scas
jmp
xlat
call
sub
cmc
dec
sahf
sub
jnp
dec
fcom
sub
dec
mov
adc
aam
repnz
dec
mov
or
nop
pop
and
mov
pop
xor
dec
and
lret
push
movsb
cmp
ja
add
adc
inc
test
jle
insl
jg
in
push
cmp
xchg
adc
nop
dec
cmpsl
sub
mov
loop
xchg
sbb
adc
imul
push
int3
xchg
test
jae
mov
cmp
ficompl
std
fiaddl
imul
in
push
jl
mov
shll
imul
pop
sahf
rclb
fwait
fs
mov
mov
jle
hlt
ret
inc
mov
mov
pop
xor
mov
dec
insb
sub
jl
mov
mov
sbb
xorl
mov
lods
jb
dec
adc
cmpsl
call
insl
jnp
repz
adc
xor
mov
jle
and
subl
fxch
mov
xor
dec
dec
es
mov
sub
imul
pop
cmp
cmp
addl
inc
sarb
addr16
mov
push
xor
imul
or
sahf
xchg
imul
pop
pop
jge
dec
push
je
mov
icebp
iret
pop
ljmp
mov
adc
scas
dec
aad
mov
and
sbb
dec
push
stos
inc
int3
je
ljmp
insb
sub
add
pop
sub
repnz
cltd
add
repnz
nop
dec
and
jmp
sahf
stos
aaa
sub
movsb
sbb
pushf
mov
or
cmp
mov
push
imulb
mov
jl
mov
push
aam
cmp
sbbl
insl
out
jne
aaa
mov
mov
push
add
cmp
dec
inc
imul
push
adc
push
mov
dec
push
das
cmp
sbb
xor
lcall
cwtl
mov
inc
push
out
adc
dec
jae
xchg
pushf
cwtl
add
cwtl
and
pop
les
add
in
mov
cmpsb
aad
lock
cs
fcompl
and
stos
addr16
sbb
fcmove
xor
push
mov
jo
mov
mov
jg
pop
mov
dec
cltd
xor
xor
insb
xor
or
fbstp
pop
test
pushf
lods
stos
fisttpll
pop
push
loop
xchg
js
inc
int3
repz
sub
cmpsb
decl
or
cmpsb
mov
inc
int
in
call
rcll
dec
fimuls
adc
jmp
ret
mov
ss
out
cld
dec
popf
test
inc
cli
test
xchg
jns
inc
or
cltd
jl
imul
pop
rcrl
push
inc
sti
iret
mov
aam
cmp
outsl
push
jns
dec
or
es
ja
adc
mov
pop
imul
cmpsl
fucomi
sub
cmp
dec
cld
arpl
daa
das
sahf
shl
andb
jl
lea
imul
xor
mov
andb
cmp
push
shl
mov
or
int3
adc
mov
or
loop
cs
xchg
cmc
jge
mov
into
test
cmpsb
add
adc
mov
lods
fisubrs
pop
int3
mov
ja
loop
mov
jns
mov
out
adc
mov
cmp
cmp
inc
mov
adc
int
je
cmp
mul
aam
push
scas
stos
fbld
push
cltd
pop
mov
sbb
ds
aam
imul
js
cmp
decl
jns
lock
popf
pop
imul
mov
ror
scas
lods
inc
dec
aam
es
cmpsl
fdivrl
cmp
mov
xchg
in
cld
jmp
push
fisubrs
pop
push
popf
cmp
int
mov
inc
movsl
ds
xor
scas
adc
outsb
xor
jbe
fistpll
lock
test
sub
inc
int3
jb
addb
xchg
inc
mov
cld
jb
or
test
jae
or
arpl
repnz
fldt
inc
rcrl
test
xchg
mov
dec
loop
hlt
incl
mov
jo
xchg
loope
push
mov
enter
loop
jp
mov
mov
jle
loope
mov
rcr
sbb
xor
mov
cwtl
fisubrs
lock
shlb
inc
stos
push
insb
ja
and
ds
mov
mov
dec
imul
push
mov
mov
jge
push
add
stc
mov
inc
xor
arpl
or
mov
pop
pop
lds
mov
pop
ljmp
stos
jle
sub
mov
sbb
in
mov
push
add
pop
pop
repz
out
and
aam
push
xlat
sbb
mov
or
cmpsb
imul
movsb
pop
cmp
test
lds
insb
imul
lods
mov
and
jmp
imul
pop
jle
push
xacquire
adc
aam
push
sub
mov
inc
test
in
xor
adc
dec
fisubrs
pop
dec
pop
rcl
xor
popa
adc
ds
les
not
mov
imul
mov
loop
cmp
adc
or
les
adc
push
dec
ficompl
push
xchg
rcrl
pop
rclb
mov
loop
fnstsw
mov
inc
fsubrs
add
lock
push
inc
sub
leave
sbb
test
xor
or
cmp
outsl
jle
pop
movsb
lds
pop
pop
lock
and
inc
sarl
daa
lahf
cmpb
test
mov
xchg
sub
in
mov
mov
outsl
lcall
xchg
ret
pop
sub
aam
lcall
fwait
imul
mov
sub
imul
test
scas
dec
lods
add
repnz
push
cltd
imul
stc
rorb
lods
and
loopne
dec
inc
inc
ss
mov
inc
inc
adc
sti
inc
lahf
imul
repz
fimull
jl
inc
lods
emms
faddl
lock
jl
mov
jnp
pop
mov
mov
mov
cs
mov
jp
push
lret
mov
repnz
ds
mov
data16
cli
or
jnp
imul
dec
iret
outsb
ret
js
jmp
xchg
clc
stos
std
dec
xchg
jmp
add
mov
sub
push
daa
dec
insb
pop
sarb
out
sub
imul
mov
cmp
and
mov
dec
jle
jl
mov
iret
xchg
xor
xchg
cmp
mov
xor
icebp
stc
ds
cmp
jo
cmpsl
je
and
mov
xchg
addb
scas
es
adc
das
jle
dec
call
jnp
jne
and
sub
lahf
test
jb
sub
jo
cld
mov
hlt
xchg
and
cmp
cs
fdivl
sub
cmp
jmp
pop
xchg
cmp
add
fcmovbe
mov
sub
imull
shll
cs
int3
es
mov
dec
addr16
mov
xchg
xor
imul
mov
test
fwait
shlb
int3
jge
xchg
cmp
and
add
jge
daa
mov
imul
push
cmpb
fisttpll
or
jl
add
mov
dec
jno
mov
insb
in
stos
jns
sti
inc
jnp
sub
sahf
jl
jp
mov
je
dec
jecxz
pushf
xor
insl
imul
dec
pop
cmpsl
dec
jb
addr16
loopne
out
subb
mov
sahf
mov
sub
test
xor
and
in
aam
xchg
mov
sbb
sub
out
lods
xor
lret
outsl
push
out
cltd
adc
sbb
pop
dec
sub
test
adc
cmp
push
cmp
insb
pusha
or
loopne
pop
pop
test
bnd
xor
shl
pop
sti
fildl
mov
xchg
mov
dec
outsb
test
cltd
adc
repz
fimuls
jno
je
sar
test
repnz
repnz
clc
stos
clc
pop
mov
rcrw
int3
pop
mov
movsb
xchg
xor
test
int3
shrb
push
lea
and
int
int3
push
aaa
xor
ret
fwait
inc
jo
mov
rcrb
gs
xchg
xor
in
cmp
stos
and
adc
std
je
fimuls
inc
addr16
pushl
cmp
dec
push
xor
cmp
and
dec
pop
outsl
mov
and
fcomps
jmp
mov
xchg
push
pop
pushf
and
mov
jo
xchg
mov
adcb
pop
cmp
imul
mov
movsb
repnz
cld
movsl
dec
jecxz
dec
xor
lret
sbb
inc
xchg
jle
inc
cmp
iret
push
imul
sub
sub
adc
dec
jg
fsubrs
mov
xor
cld
fwait
nop
lods
mov
clc
scas
pop
jge
das
lea
or
test
xchg
jecxz
stos
push
jl
pushf
jmp
nop
push
fs
push
mov
out
pushf
add
or
inc
mov
add
push
jb
add
sbb
sub
rorl
jns
testb
frstor
dec
pusha
jmp
xor
sub
iret
pop
pop
inc
loop
out
ljmp
imul
cli
push
sarl
jns
imul
cld
repz
iret
mov
loope
imul
nop
lds
es
and
daa
jecxz
push
mov
xchg
out
mov
clc
outsl
movsb
hlt
lcall
imul
add
mov
mov
sbb
sub
lcall
cwtl
fdivr
lods
ja
inc
pop
hlt
push
mov
js
dec
push
mov
ret
nop
xor
gs
pop
lret
scas
add
mov
sbb
lea
sahf
fcmovb
mov
faddl
or
lcall
ds
jg
out
cmc
sub
imul
sub
std
mov
adc
ficoml
ret
aas
cmp
mov
movsb
cmp
jle
mov
insb
sub
jmp
add
es
test
pop
mov
pop
sbb
int3
dec
cltd
in
mov
cmp
dec
cmp
fiadds
cmp
dec
icebp
cmp
pop
add
sub
fisubl
adc
inc
adc
dec
nop
sbb
in
ljmp
xchg
fstpl
aaa
sub
lea
setbe
pusha
movsl
test
add
cmp
sub
jg
inc
xchg
jae
leave
gs
movsb
jge
data16
push
stc
cs
stos
pusha
and
loopne
repz
out
pop
mov
in
imul
pop
jo
imul
sbb
and
jl
or
xchg
jnp
mov
and
rcl
jg
imul
lods
xchg
xchg
fsubrl
mov
neg
cmp
fcmovnu
insb
sub
push
xchg
sub
imul
lock
sub
lock
sbb
mov
sti
push
or
in
fld
add
jl
xchg
xchg
imul
inc
sti
test
xor
mov
lret
push
push
adc
inc
imul
jl
sbb
clc
pop
stos
cmpl
popa
inc
ja
mov
or
pop
xor
imul
xchg
cltd
mov
insb
cmp
jo
xor
mov
pop
cltd
sub
lcall
adc
mul
fldt
gs
push
cli
xor
sbb
jp
inc
and
mov
and
mov
fdivrs
mov
and
jns
das
sub
imul
test
repnz
daa
scas
cmp
xchg
lods
mov
pushf
dec
xchg
xchg
scas
or
ret
lods
aam
int3
cld
or
cmpl
nop
jecxz
pop
and
aam
fisubrl
fwait
test
adc
in
mov
sub
mov
sub
ljmp
in
sbb
sub
int3
add
cmpsl
out
add
fs
adc
insb
mov
mov
adc
movsb
dec
push
cli
cmp
xchg
lods
aam
xchg
imul
lcall
repz
cmp
loop
and
cwtl
inc
sbb
adc
jmp
insb
andl
xchg
das
movsb
out
fistpl
in
insb
mul
cld
add
dec
dec
iret
mov
cmp
mov
cmp
loope
sbb
fs
fdivrl
mov
stos
in
testl
mov
repz
sub
cmpl
pop
xchg
xor
sar
adc
in
jecxz
mov
jae
and
sbb
ja
shr
fs
mov
pop
jo
imul
sbb
shll
cmp
sub
aam
jnp
mov
aam
cwtl
jnp
sub
mov
mov
or
cld
in
xor
xor
fwait
dec
hlt
adc
mov
insb
or
dec
or
push
cmp
cld
jecxz
fwait
cld
mov
sbb
fwait
cs
out
xor
cli
xchg
sub
insb
stc
cld
sub
fsubrs
lods
rclb
cmp
sbb
xor
mov
fxch
dec
add
cs
call
in
stos
xor
iret
sarl
jo
pop
cmp
mov
jge
pop
insb
cmp
cltd
cmp
pop
imul
lods
fdivrs
push
dec
mov
movsb
cmp
lret
lcall
out
fcoms
jl
fdivl
pop
mov
cld
push
out
lahf
and
cmp
insb
rcr
add
imul
nop
jecxz
xor
imul
pop
imul
cmc
cmovns
mov
jno
shlb
dec
shrl
rdtsc
int3
test
sub
mov
add
in
push
inc
pop
or
mov
ds
incb
into
imul
dec
repnz
sbb
sarl
loop
mov
mov
or
and
rclb
adc
mov
cld
xchg
xchg
jecxz
mov
xor
lret
xor
rcll
jl
cmp
cmp
insb
mov
dec
xor
test
jne
dec
jnp
xor
loop
sub
jo
sti
sbb
add
lea
jl,pn
cmp
ret
shlb
insb
or
je
adc
imul
and
cld
dec
movl
mov
cmp
jmp
lret
dec
cmp
adc
cmp
xlat
dec
mov
es
inc
pop
stos
fstpl
inc
cmp
cwtl
xchg
jae
packssdw
leave
dec
sub
sub
stos
mov
xor
and
int3
push
jle
mov
xchg
dec
and
cmp
out
sbb
enter
xor
dec
mov
sub
jl
daa
jo
mov
xchg
add
sbb
or
jmp
inc
daa
add
dec
sahf
jl
flds
stos
daa
je
jmp
pop
cmp
cmpb
sbb
jle
cli
jnp
sbbb
push
and
adc
cld
imul
insb
xlat
cld
mov
movb
or
nop
sbb
lcall
xchg
pop
xor
aas
test
pop
mov
and
pop
mov
push
pusha
sti
daa
insb
subl
inc
pop
jo
dec
mov
pop
imul
in
sub
xchg
lds
or
popf
aas
or
sbb
jg
sub
sub
pop
cmpsl
repz
arpl
dec
and
add
enter
cltd
loope
mov
jne
jmp
or
push
and
add
sbb
fwait
jmp
xor
test
and
mov
jmp
mov
mov
imul
mov
cmpsb
xchg
lcall
or
jnp
mov
xchg
imul
andl
daa
mov
shll
sub
leave
or
fistpl
sbb
xchg
push
fwait
mov
xchg
arpl
and
fwait
add
stos
mov
sub
add
aad
inc
call
outsl
mov
mov
jg
inc
scas
push
imul
icebp
fcompl
and
push
and
test
nop
sbb
nop
fidivl
dec
push
xlat
stos
add
stc
push
gs
adc
inc
fisubl
subl
sub
and
add
movsb
sub
les
jnp
es
outsl
lcall
popf
dec
call
dec
hlt
cmc
arpl
or
sbb
scas
test
icebp
fs
ficompl
sarl
lret
orl
mov
xor
mov
jne
jbe
sbb
hlt
stos
out
in
cmp
dec
xor
push
cs
cmp
test
popa
ds
mov
mov
imul
in
jne
or
out
lahf
jmp
movsl
mov
and
add
cmp
pop
aas
nop
rcl
dec
cmpsb
fldcw
pushl
dec
aas
sbb
cld
cmp
test
adc
adc
bswap
sbb
mov
cmc
imulb
pslld
cmpsb
sub
sbb
sbb
sbb
out
dec
repz
popf
sbb
mov
mov
jg
in
and
jmp
xor
je
test
push
xchg
fcmovu
jno
add
mov
ljmp
xor
fsqrt
inc
push
js
orb
or
or
mov
orl
xor
jmp
das
mov
aam
xor
mov
les
xchg
mov
orl
jg
xchg
inc
loopne
aam
sbb
movsb
jno
stos
out
mov
repz
push
mov
mov
sub
icebp
adc
mov
and
push
inc
in
adc
out
loop
push
mov
pushl
fimuls
push
fwait
insl
test
xchg
test
je
cmpsl
mov
cmp
pop
call
mov
jle
cmp
sti
sbb
adc
repnz
push
ss
and
dec
mov
ja
test
xchg
dec
fs
sar
ljmp
imul
jp
es
dec
emms
cli
int
sub
xchg
inc
pushf
sar
test
xor
icebp
imul
cwtl
lcall
mov
sub
dec
test
out
fildll
push
dec
div
in
push
jns
repnz
cmp
fs
and
sbb
rcrb
cmpsb
fiaddl
aaa
movsl
pop
xor
sub
push
mov
pop
push
sbb
pop
mov
insb
mov
sahf
pop
lods
scas
lods
cmp
dec
xchg
pop
sbb
dec
fldcw
xor
dec
cmp
popf
mov
mov
hlt
jno
cli
lea
pop
dec
cli
test
mov
gs
inc
adc
addr16
test
pop
lods
cmpsl
xchg
mov
sbb
icebp
call
imul
xchg
faddl
xchg
stos
fdivr
mov
cmp
test
popf
into
in
movsl
movsb
cmp
aam
int3
mov
stos
stc
js
xor
popa
xlat
pop
sahf
inc
shlb
pop
cwtl
cmp
dec
jle
and
jmp
cmpsb
and
jmp
divl
jmp
add
jmp
andb
adc
arpl
add
lods
out
jl
dec
popl
xchg
inc
frstor
ficomps
lret
and
pop
sbb
push
je
xor
dec
cwtl
ja
clc
add
js
cmp
or
push
mov
aam
sub
cmp
adc
push
cmp
fstpt
cmp
sar
xor
xchg
sub
pop
adc
dec
xlat
push
mov
push
inc
inc
push
xchg
imul
adc
sbb
insb
jo
rclb
push
push
bnd
imull
into
in
negl
in
and
jp
sub
sbb
lock
inc
add
sti
dec
dec
mov
popa
xor
sub
js
fadds
add
sub
jge
aaa
insb
lahf
aaa
in
imul
xchg
lods
shll
and
dec
sbb
cmp
gs
imul
sbb
sti
fldenv
xchg
dec
mov
test
call
imul
mov
cmpb
js
repz
aam
jl
lock
xor
test
out
fbstp
inc
mov
inc
jne
xchg
and
lcall
adcl
mov
mov
int
xor
add
cmp
sub
insb
cld
cmp
cmpsb
ljmp
push
cmp
lods
hlt
inc
imul
fldl
jno
popf
mov
inc
add
xchg
dec
sbb
and
loop
sarl
in
imul
movsl
inc
scas
xchg
xor
xchg
or
cmp
data16
jbe
in
inc
dec
rorl
push
jnp
imul
aas
mov
cmp
add
pop
cmp
aam
mov
jno
sbb
cmpsb
enter
mov
adc
jp
mov
fidivrs
jnp
ss
lret
cmc
fcmovnb
fdivs
sbb
pop
inc
dec
imul
icebp
mov
jno
pop
enter
enter
mov
cmc
push
xchg
sub
in
push
lahf
popa
ficompl
sbbl
dec
loopne
fbstp
cmc
dec
dec
xchg
lea
fwait
imul
sub
pop
mov
insl
adcb
mov
repnz
sbb
in
or
neg
push
rolb
call
or
cld
adc
xchg
scas
mov
add
mov
cmp
xor
jne
movsb
cmp
insb
nop
pop
ljmp
pop
and
mov
add
subl
pop
imul
push
lds
stos
push
mov
ljmp
sbb
int3
imul
cwtl
pop
xor
lds
lods
std
mov
lahf
mov
jp
das
imul
pop
cmp
insb
lods
fsubl
out
xchg
mov
fimuls
pop
hlt
sbb
ficompl
jmp
outsl
in
dec
pop
repnz
lcall
xor
aas
mov
inc
add
iret
dec
dec
lahf
lods
stos
dec
daa
imul
imul
add
shrb
dec
call
ss
imul
xor
and
jo
jnp
mov
mov
clc
xchg
mov
test
jg
mov
and
mov
cmpl
insb
mov
ja
mov
js
sub
test
jae
sub
sahf
sub
imull
push
xor
jnp
loope
sbb
jg
cmp
addr16
es
xchg
push
dec
call
dec
in
xchg
aaa
adc
mov
cmp
pop
cmp
movsb
sar
mov
adcl
inc
dec
and
std
ds
xchg
pop
cmp
dec
mov
int3
ss
mov
mov
push
cmpb
push
subb
daa
or
mov
mov
in
mov
cmp
xchg
imul
lock
pop
gs
xchg
sbb
movsb
das
subb
lret
out
inc
daa
and
push
xor
cs
dec
xor
in
pop
out
cmp
ds
ret
clc
out
mov
mov
repz
mov
mov
sub
cli
fcoml
lret
das
add
push
out
xlat
mov
jl
outsl
popa
xchg
cmp
xchg
insb
mov
std
out
ss
jb
inc
lcall
out
add
mov
mov
insb
out
je
jns
inc
cmp
scas
fisubrs
dec
xor
sub
jl
jp
sbb
hlt
movsl
dec
div
dec
popf
out
inc
dec
cmp
xchg
daa
inc
xchg
fs
adc
mov
mov
xchg
inc
lret
fisttpll
imul
adc
and
jle
faddl
fimuls
inc
imul
es
push
loope
jl
dec
insb
inc
jge
pop
loop
xor
push
inc
loopne
mov
clc
int
mov
daa
imul
imul
mov
xor
cwtl
sti
jmp
fnstcw
ret
cmp
pop
lcall
imul
pop
insb
iret
xchg
stos
lret
xchg
mov
fs
mov
scas
jecxz
fisubs
mov
stos
pushf
int3
xchg
insb
movlps
jmp
pushf
or
adc
aas
cs
mov
cltd
sbb
dec
pop
sub
or
dec
mov
outsl
and
mov
cld
and
outsl
imul
mov
dec
int
in
cmp
pop
adc
insb
call
dec
repnz
lcall
sbbb
mov
push
jmp
clc
jg
xor
sub
iret
xchg
dec
enter
jl
xor
dec
repnz
mov
adc
ss
push
xlat
sub
aas
push
mov
xor
hlt
adc
jne
lods
dec
dec
rcll
repnz
cmc
hlt
int
mulps
dec
mov
xchg
iret
add
inc
jmp
aas
jne
sub
hlt
and
loop
lods
xchg
lods
sub
fstps
jl
or
subl
push
and
lods
insb
adc
sub
sbb
dec
lea
test
jae
test
repnz
cmp
pop
or
mov
xchg
adc
cmp
std
mov
divl
jecxz
dec
imul
inc
inc
out
dec
push
dec
pop
cmp
mov
inc
mov
cld
ljmp
sbb
imull
cmp
inc
loopne
cmp
nop
cmp
cmpsb
sbb
je
aas
ret
adc
push
and
cld
sbb
lods
outsb
sub
xorl
sbb
sub
xor
mov
bound
ficomps
lock
lcall
jl
cwtl
pushf
lcall
mov
aaa
imul
jns
add
sub
pop
notb
jle
push
xchg
or
popf
push
jmp
in
pop
adc
push
xchg
iret
cmp
xor
mov
pop
xchg
push
sbb
inc
pop
rol
lahf
push
sbb
in
add
dec
mov
pop
adc
inc
add
and
das
xchg
dec
cmp
pop
js
in
or
mov
jecxz
adc
mov
jmp
test
lahf
xchg
out
cltd
inc
cmp
cli
push
cmp
jmp
iret
or
outsl
pop
rcrl
fmull
gs
push
xchg
xor
imul
call
hlt
xor
cli
daa
sub
adc
pop
and
insb
cmp
xchg
push
or
pop
lock
imul
out
dec
flds
jae
inc
mov
jg
clc
icebp
sub
inc
dec
sub
cmp
push
stos
jge
lds
insb
xor
cmp
imul
dec
dec
push
push
mov
clc
lds
out
mov
fxtract
fwait
nop
sbb
repnz
stc
jp
insb
outsl
pop
popf
pop
xor
hlt
or
push
mov
pop
push
pop
xor
movswl
dec
xor
mov
and
pop
fimull
rorb
and
sbb
jl
mov
into
add
cmpsb
push
dec
push
arpl
test
sbb
sub
dec
cmpl
dec
jle
cmc
inc
push
das
imul
rorl
out
pop
ja,pt
mov
pushl
lcall
imul
orl
dec
xor
ljmp
das
insb
mov
cmp
fsubrl
in
dec
jno
mov
repnz
push
jg
xor
mov
mov
gs
add
adc
addr16
and
adc
jae
dec
xchg
jnp
in
ret
dec
mov
jle
fwait
xor
out
and
fisubs
mov
push
adc
inc
outsb
inc
ljmp
inc
sub
hlt
push
xor
icebp
out
sub
and
xchg
mov
in
fwait
inc
cmp
daa
cmp
or
cmp
data16
mov
ja
xor
mov
int3
mov
das
sub
jmp
ss
push
sbb
inc
dec
and
cwtl
add
rolb
iret
or
roll
jo
mov
lods
mov
xchg
pop
xlat
in
test
mov
popa
mov
mov
push
cmp
mul
out
outsb
sbbb
mov
and
jl
cmp
xorb
xchg
outsl
push
xchg
cmpl
xlat
sub
cld
xchg
insb
lahf
inc
xchg
ds
lock
inc
jl
cld
mov
int
movsb
xchg
xor
aas
fnstsw
imul
push
loope
or
xchg
aam
xchg
ret
sub
sub
test
mov
mov
mov
add
test
jp
jecxz
loopne
push
movsb
mov
adc
daa
pop
and
mov
sbb
aas
data16
adc
mov
in
cmp
in
imul
and
int
lds
arpl
shl
xchg
dec
and
outsl
stos
sbb
in
outsl
loop
push
js
push
scas
pop
adc
xchg
nop
add
or
stos
push
ja
je
adc
es
push
inc
xchg
repz
aaa
mov
test
je
loope
xor
gs
mov
jo
dec
test
fcmovne
out
push
out
inc
jns
insl
mov
mov
aas
nop
stos
jmp
fucom
mov
and
cmp
cmpb
das
int
mov
outsl
aas
mov
lcall
bound
adc
lods
pop
or
mov
sarl
rorb
sub
add
sbb
insb
and
push
mov
insb
es
push
adc
daa
jp
mov
add
mov
mov
sbb
shlb
mov
fcompl
sbb
jg
jns
adc
sub
xor
pop
sbb
lods
stc
fildll
lods
sbb
and
ss
scas
fs
lcall
sub
sub
imul
pop
mov
cld
sub
pop
int3
lahf
push
pop
mov
cmp
jns
xor
xor
mov
fsubrl
mov
imul
sbb
punpckhwd
xchg
xlat
insb
sub
sub
fldenv
ds
sahf
sub
daa
dec
imul
push
repz
sub
aas
dec
clc
xchg
inc
mov
aam
in
or
lret
pop
pop
out
aas
push
bound
pop
cmp
arpl
rcrb
sbb
lcall
dec
push
jl
in
cmp
inc
out
sub
cs
pop
call
cmp
xrelease
insb
aam
pop
cmpsb
sub
out
cmp
popf
ljmp
xor
mov
cmp
je
hlt
inc
sbb
fadd
lods
sub
cmp
fbld
lret
push
ds
imul
push
outsb
adc
add
fistl
jns
mov
adc
cmp
sahf
aaa
add
mov
or
and
jnp
sbb
cmp
inc
and
fmul
imul
mov
add
jo
loopne
jbe
cmp
sub
dec
nop
int3
ljmp
dec
mov
dec
test
jne
mov
adc
rorb
sub
adc
sbbb
scas
out
mov
rorb
in
dec
dec
cltd
push
movsl
and
inc
scas
shrb
adc
stos
mov
mov
dec
xchg
pop
outsb
jecxz
cmp
mov
inc
push
or
jle
ret
mov
ror
mov
xchg
loope
sahf
pop
fisubrs
popf
xchg
mov
jecxz
mov
mov
dec
or
push
adc
jae
aas
jb
in
sbb
pop
and
std
or
sub
mov
clc
dec
push
ficomps
ucomiss
movsb
pusha
std
mov
xchg
test
cmp
popa
clc
lea
out
adcb
add
mov
jb
cli
jno
add
stc
repnz
ja
std
xor
movsl
jbe
push
sbb
test
shrl
xor
mov
and
or
mov
xchg
scas
lcall
dec
mov
sub
or
mov
sbb
or
or
xchg
lcall
add
mov
cmp
cmp
xchg
ja
imul
sbb
sbb
cmp
mov
mov
xchg
cmc
mov
ret
insb
sti
fmull
add
loop
sbb
insb
stos
fs
pop
rclb
mov
leave
mov
int3
xor
cld
sub
fdivl
lcall
mov
mov
fs
xor
xor
cld
push
jle
sbb
adc
sub
jg
lcall
xor
stos
aaa
lods
push
outsl
sbb
xor
inc
or
adc
push
dec
sub
subl
jecxz
repz
lds
inc
aad
nop
jmp
insb
pop
les
lcall
icebp
cmp
mov
xor
sbb
ljmp
mov
or
jae
push
mov
aam
jb
sbb
icebp
imul
sbb
xchg
in
in
je
cld
mov
je
sbb
adc
mov
rep
jnp
jmp
add
lock
push
mov
je
stos
cmp
fcompl
jmp
insb
cwtl
sbb
sub
mov
insb
or
test
stos
adc
repnz
stos
pop
outsl
jmp
mov
repz
sub
fdivl
arpl
lret
push
stos
mov
movsb
test
sbb
aad
mov
xchg
xor
sub
pop
testl
pop
sub
pop
adc
cmp
out
jg
cmp
mov
pop
mov
sub
push
jbe
xor
jb
pop
mov
sti
aad
adc
xlat
seta
xchg
loop
xor
lcall
scas
enter
or
cmp
jne
pushf
popa
sar
pop
pop
scas
mov
inc
pop
js
push
inc
scas
cs
subb
and
lret
mov
fsubl
jle
ss
leave
pop
add
arpl
mov
or
xchg
test
popf
cmp
push
cld
fnstenv
xor
imul
xor
cmpsl
xchg
adc
or
jmp
lcall
dec
pop
arpl
sub
fistpl
mov
lahf
or
push
arpl
daa
pop
adc
mov
sbb
mov
sub
pusha
and
add
gs
sub
cmpb
into
pop
lret
dec
out
sub
stos
push
push
xchg
cmp
hlt
popa
jmp
mov
push
sub
dec
sbb
sub
insl
sbb
insb
inc
inc
icebp
shrl
mov
or
cmpsl
xor
mov
cltd
inc
mov
cmp
pop
mov
sbb
sub
pop
push
fdivrl
lret
sub
imul
xchg
xchg
lods
in
xlat
daa
ret
push
dec
mov
xchg
mov
push
push
jo
out
scas
mov
push
add
pop
nop
popa
popa
jbe
and
push
cmp
dec
sub
leave
add
jnp
cmc
push
cmp
bound
mov
dec
jge
mov
mov
call
sbb
test
int3
pop
popf
sbb
mov
rol
sbb
mov
pop
sbb
inc
lds
popf
hlt
cmp
inc
pop
fidivrs
mov
xor
jo
lret
rcrb
sarl
xchg
push
dec
add
cltd
in
jg
stc
lret
and
sub
cmpsl
fisttps
xchg
sahf
fwait
hlt
adc
xor
hlt
mov
mov
cmp
jl
push
lods
imul
dec
mov
mov
clc
xchg
inc
pop
nop
sbb
lds
scas
xor
ret
push
and
sub
pop
jle
mov
cmp
aas
add
out
jle
leave
adc
into
sub
cwtl
out
sub
into
or
and
negl
ja
inc
adc
movb
out
aad
cmp
lret
jle
sub
sbb
subl
jle
fcompl
imul
adc
in
mov
aam
sbb
inc
mov
xor
xor
xchg
mov
aaa
jno
jnp
aas
mov
add
das
sub
movsb
sar
repnz
popf
cwtl
mov
mov
pop
sub
pop
in
inc
cmp
mov
hlt
pushf
cltd
or
push
or
fisttpl
imul
jmp
test
enter
shrl
mov
push
in
xor
jb,pt
pop
mov
ret
pop
mov
out
mov
je
add
and
xor
jecxz
xor
or
pop
popa
xchg
fucomi
js
fsubrs
mov
aaa
cmp
imul
dec
int3
adc
cmp
imul
and
adc
call
mov
add
fdivs
jmp
mov
mov
je
mov
stos
cmp
out
lcall
ffree
push
dec
cmovp
xor
cwtl
es
cmp
aad
imul
testb
mov
popf
es
scas
cld
xor
std
out
insb
dec
cmp
inc
roll
int3
dec
and
mov
fwait
xchg
mov
outsb
or
cmc
into
cltd
push
mov
daa
lahf
imul
das
out
cmp
dec
daa
fwait
pushf
mov
xor
cmpsb
pusha
xor
fdivrs
xchg
inc
cmp
mov
push
sbb
mov
fidivrs
jg
xchg
ficoms
push
dec
dec
fwait
push
sub
mov
mov
popf
test
das
mov
mov
inc
pop
push
fdivp
sti
repnz
stos
jnp
imul
es
inc
hlt
cmp
loopne
xor
dec
sbb
sahf
xor
daa
xor
mov
movsl
pop
mov
imul
mov
xchg
stos
idivl
jp
cmp
push
mov
inc
aaa
cmc
cmp
adc
enter
out
pop
cmp
xchg
clc
xchg
pop
xor
mov
test
into
imul
lods
test
in
and
ja
daa
xor
jmp
out
add
dec
pop
push
call
mov
jg
sub
xchg
aam
ret
aad
jp
imul
xchg
dec
and
adc
jmp
jo
sbb
or
test
ljmp
pop
dec
mov
add
mov
or
cmpsb
ffreep
jl
insb
iret
cmp
sbb
xor
push
notl
imul
out
or
add
lahf
out
mov
hlt
cmp
pop
inc
inc
pop
in
ficoms
bound
xchg
subl
data16
movsl
cld
imul
pop
add
in
inc
aam
sub
decl
fistpll
inc
pop
sub
jle
pushf
fcomip
addr16
dec
add
xor
xor
ja
test
test
pop
cmovle
pop
xchg
or
lods
sbb
dec
jnp
adc
je
std
inc
scas
cmc
or
add
mov
ficomps
jmp
xchg
int3
imul
ret
sub
mov
sbb
leave
sbbb
push
pop
mov
cmp
aad
rclb
xor
daa
mov
adc
push
xor
in
xchg
div
scas
testl
adc
push
pop
sar
mov
insb
cmp
movsl
imul
jb
cld
pushf
imul
push
jle
icebp
dec
in
cli
nop
jg
jnp
cwtl
add
test
imul
cmp
out
push
shlb
jmp
mov
divl
mov
adc
repz
out
xchg
mov
add
lock
add
insb
in
and
lret
jmp
sub
push
call
xor
out
dec
xor
sbb
sub
add
fwait
push
mov
push
push
and
outsl
ficompl
data16
aam
insl
rcrl
mov
pop
push
cmp
shrb
inc
jae
cld
inc
sub
cmpsl
push
mov
test
ja
inc
je
xor
adc
cmp
mov
fnstcw
xchg
and
shlb
xor
pop
imul
cmpb
imul
xor
sub
cwtl
mov
insb
xchg
cmp
add
inc
out
jo
rcrb
sbb
xchg
out
dec
mov
popf
mov
stos
jno
adc
lcall
nop
xor
cmpsb
ret
and
xor
sbb
scas
dec
ljmp
dec
sar
lods
add
sub
arpl
es
xlat
mov
mov
cmp
orl
pushf
mov
lods
stc
mov
decl
dec
pop
aaa
or
or
cli
stc
sbb
jg
or
movsb
mov
jns
sub
sub
movsb
and
imul
cmc
inc
repz
adc
push
icebp
cli
cld
cli
pusha
cmp
mov
or
dec
xor
mov
cmp
or
or
fs
stos
or
ret
inc
or
cld
iret
push
rorb
lods
pop
js
sub
les
fwait
pop
mov
fcoml
insb
mov
jmp
nop
in
mov
fcoml
and
fdivrp
call
xchg
xchg
cmp
or
aam
sbb
clc
sbb
mov
ficoms
xor
fwait
sub
sbb
sbb
lcall
mov
jnp
sub
and
dec
fcomp
sub
ret
mov
pop
hlt
pushf
sbb
xchg
add
xor
cmp
adc
sbb
dec
or
pushf
and
mov
or
sbb
sub
sbb
push
sub
in
jmp
rcrl
sbb
or
push
stc
sbb
call
xor
hlt
mov
sbb
ja
mov
mov
xchg
hlt
sbb
or
xchg
cld
test
pop
mov
adc
dec
or
nop
sub
mov
push
and
out
cld
cld
notl
mov
testb
sbb
xchg
sbb
stos
fwait
arpl
adc
sbb
inc
adc
adcl
cld
sub
and
mov
lret
xor
cmp
je
jnp
xorl
or
push
aad
nop
sub
jecxz
pop
jnp
mov
je
adc
movsb
sbb
shl
sbb
inc
stos
pushf
les
xor
sti
mov
test
jb
cltd
ljmp
addr16
xor
loop
lret
test
cmpsb
fsts
roll
sub
in
xchg
jo
lcall
pop
ds
sub
or
insl
push
lds
ficoml
pop
jle
xchg
aas
cwtl
mov
das
cltd
push
imul
loop
xchg
push
inc
and
rcrb
adc
cmp
mov
xchg
dec
movsb
call
cld
je
cmp
push
dec
js
push
aas
adc
cltd
add
enter
clc
div
adc
sub
inc
mov
jl
outsl
popl
ja
add
xchg
jnp
and
cli
lds
gs
in
cmc
mov
aas
dec
out
push
repz
inc
ja
mov
fmuls
test
inc
lock
jo
fdiv
mov
jbe
shrl
or
or
sub
ss
mov
and
sbb
dec
fidivs
test
cmp
mov
inc
or
mov
loope
xor
in
test
push
or
jge
inc
nop
xchg
daa
gs
cmp
jl
insb
xchg
sub
and
cmp
cmp
insb
adc
or
shrl
sahf
xchg
mov
imul
xor
pop
cld
sti
les
sahf
mov
mov
sbb
cmc
dec
mov
cld
arpl
pop
ficoml
loop
outsl
cmpsb
test
and
cwtl
inc
daa
cmp
repz
fimuls
pop
ret
add
and
cmp
aad
dec
leave
cmp
frstor
push
mov
lods
dec
insb
xchg
sbb
mov
call
xchg
cld
and
or
clc
daa
push
imul
sti
mov
sbb
or
insl
enter
das
into
mov
xchg
cmp
sbb
ds
arpl
dec
notl
cwtl
dec
mov
jg
outsl
mov
mov
int
cld
jle
lea
fcomps
popf
push
jnp
repz
xchg
jns
mov
xorl
sbb
ljmp
dec
mov
push
xchg
mov
mov
mov
stos
mov
dec
sti
inc
cltd
mov
lock
mov
nop
mov
dec
scas
test
lret
loopne
lea
jnp
sbb
inc
notb
iret
cmpsl
pop
lods
xor
fstl
mov
dec
add
and
insb
jae
sbb
mov
add
xlat
push
fidivrs
repnz
jb
clc
cmp
pop
test
pop
notl
adc
in
int
jae
mov
pusha
idivl
shl
cltd
nop
xchg
mov
mov
sbb
cmp
pop
lea
push
mov
gs
jle
inc
movsb
xchg
adc
enter
dec
outsl
or
mov
stos
dec
push
jnp
push
sub
push
daa
jg
out
sub
jo
pop
in
aas
and
mov
dec
lret
jge
cmp
mov
aas
pushf
jmp
imul
jge
int
insb
flds
int
popf
xlat
leave
inc
xchg
cmp
lock
add
ss
xor
sbb
js
aad
cmpsb
gs
and
setae
mov
test
mov
sub
shll
imul
push
lret
sbb
daa
adc
insb
mov
sbb
push
mov
mov
ficoms
adc
xchg
mov
cmpsl
sub
in
push
mov
shlb
gs
fcoms
push
sbb
cli
xchg
outsl
and
mov
mov
jl
or
repnz
jnp
fcompl
aam
imul
xor
cmpsb
arpl
xor
in
mov
sub
mov
pop
push
xor
mov
loopne
dec
adc
je,pn
imul
cld
nop
je
dec
inc
lds
mov
pop
fwait
pop
jno
mov
sub
xor
add
dec
loopne
jg
xor
push
xor
push
dec
xorl
mov
iret
xchg
ljmp
hlt
inc
imul
loope
push
sub
imul
mov
js
sbb
jle
loop
cs
imul
imul
sbb
pop
ret
adc
cmpsl
mov
sub
fsub
call
imul
lret
loopne
push
cmp
int
leave
mov
dec
pop
xchg
fisttpl
lahf
cmp
outsl
jmp
pop
js
adc
push
test
lret
imul
sub
pop
jnp
push
sbb
pushf
repz
mov
test
pop
imul
movsl
mov
sub
dec
jb
hlt
sbb
fnstsw
dec
adc
lods
xchg
sbb
cs
jne
outsl
xchg
sti
xchg
mov
mov
in
rcrb
imul
inc
hlt
mov
and
dec
mov
sub
jmp
mov
xchg
insb
sbb
popf
mov
out
pushf
xor
mov
add
push
pop
lret
in
lods
enter
jg
inc
aas
sbb
jne
xchg
test
inc
mov
aad
lret
in
dec
jns
mov
stos
cli
fwait
cs
jecxz
das
pop
xor
mov
test
push
jecxz
lea
lods
mov
xchg
dec
fcmovu
mov
jmp
movsl
imul
scas
inc
daa
test
dec
and
sub
into
adc
imul
sbb
fisubl
outsl
or
stos
or
push
or
jecxz
jecxz
jg
pop
sub
aad
cmp
xor
push
shll
jle
dec
cmp
cmp
mov
push
xchg
jbe
ljmp
mov
sub
js
loope
mov
mov
shl
mov
pop
inc
ret
push
or
push
sub
cmpsb
ss
sbb
jl
gs
cmp
sub
sbb
testl
shlb
cmp
push
dec
sbb
imul
gs
std
jo
adc
jns
loopne
imul
adc
lcall
add
pop
inc
fwait
rcl
sub
in
int3
gs
jg
adcl
sbb
mov
or
mov
mov
fstps
mov
call
repnz
add
ljmp
cwtl
lret
and
sbb
adc
and
imul
inc
cwtl
dec
push
sbb
dec
mov
imul
andl
fcompl
sbb
add
mov
mov
insb
and
mov
xor
xchg
add
test
mov
pop
or
pop
orl
int3
xchg
and
push
mov
orl
or
jge
mov
cltd
lds
sub
adc
es
dec
fwait
std
aas
mov
or
dec
xor
cmp
stos
xlat
or
mov
addr16
pop
lcall
sbb
dec
shrl
xor
insb
mov
mov
mov
loop
movsb
or
cwtl
xchg
lods
xchg
in
dec
xor
push
sub
mov
scas
arpl
pmaddwd
sbb
insb
jl
jbe
pop
fwait
sbbb
ucomiss
ret
ljmp
test
jle
and
xor
lods
repnz
inc
in
fsubrs
mov
lea
js
adc
gs
cmp
xchg
xchg
mov
data16
dec
mov
call
cmp
fadds
inc
daa
pushf
cmp
add
inc
jl
pop
pop
inc
pop
xlat
iret
cmpsl
cwtl
add
mov
fldenv
and
sub
sbb
mov
sarl
mov
outsb
fimuls
cs
outsl
sub
inc
push
call
inc
pop
in
cmp
stc
xor
cmp
xchg
lret
inc
or
icebp
sub
sete
push
or
les
sbb
js
fdivl
and
mov
sbb
insl
pop
in
js
ljmp
int3
mov
add
mov
aam
jle
aam
mov
call
cld
xchg
adc
insb
sub
jmp
mov
sub
pop
sub
lcall
cltd
or
sub
mov
xor
mov
sub
mov
xor
hlt
idivb
cld
aam
repz
imul
inc
jnp
mov
pop
lock
cmp
sub
sub
adc
cld
xor
cld
icebp
out
cmp
dec
rep
hlt
in
cmp
sub
xor
rorb
jl
stos
idivl
sbb
sbb
sbb
in
sbb
sbb
cmpsl
insb
or
xor
or
sbbb
lret
cli
xor
mov
cwtl
sub
pop
stos
mov
imul
cld
sub
cld
cld
sub
cli
xchg
aam
hlt
lods
or
and
mov
sbb
or
or
fptan
repz
adc
xor
mov
xchg
insb
cld
int3
mov
sbb
sub
sub
mul
ror
je
xor
or
or
mov
pop
je
sbb
mov
cld
sbb
or
je
insb
cmpb
mov
hlt
cld
xor
hlt
insb
sbb
xchg
sbb
sub
or
stos
test
in
cld
or
testl
adc
mov
insb
and
hlt
fdiv
insb
cmpsl
aam
mov
sub
xor
lods
cld
add
mov
inc
lods
adc
insb
jns
and
in
dec
sahf
je
pop
sbb
fmull
in
loop
push
mov
xor
push
flds
repnz
cld
nop
insb
out
mov
icebp
cmp
movsl
mov
dec
sub
aas
imul
out
pop
cmpsb
jnp
dec
sub
dec
mov
cmpsb
ljmp
jecxz
mov
aas
push
mov
cmp
dec
cmp
insb
adc
cmc
adc
add
imul
movsl
jge
loopne
ja
arpl
pusha
push
iret
sbb
stos
mov
aaa
leave
js
pop
ljmp
mov
insb
cmp
cmp
push
jl
dec
mov
sub
jns
mov
pushf
sub
cmp
cmc
or
adc
inc
cmovnp
sub
sub
or
mov
mov
into
ret
inc
dec
stos
or
les
mov
aam
pop
cld
in
faddl
xchg
xchg
push
cmp
addr16
rorb
or
sbb
push
loop
insl
insb
pop
imul
popa
mov
outsl
pushf
addr16
test
idivl
lret
mov
mov
push
loop
xchg
jo
iret
mov
or
inc
cwtl
repnz
repz
cmp
mov
mov
adc
inc
jmp
sbb
mov
adc
loop
loop
xor
jns
cmp
sub
out
add
and
lock
fisubrs
xchg
daa
lea
dec
fstpl
je
leave
imul
push
dec
loopne
lods
adc
pop
jg
jo
jne
jnp
imul
cmp
pop
xor
mov
ljmp
pop
dec
sbb
cmp
push
rcll
sub
aaa
subb
xor
pop
movsb
or
fdivr
mov
sub
insb
sub
sbb
and
dec
jg
push
xor
sub
push
inc
fdivp
push
xchg
jl
ja
scas
mov
cld
pop
cmp
loop
sti
out
mov
repnz
roll
push
insb
decb
or
js
cmpsb
push
fsubr
mov
mov
adc
imul
mov
pushf
push
lds
xor
pop
xchg
hlt
addr16
insl
int3
mov
push
jg
insb
adc
sbb
xor
cmp
loopne
lods
dec
fdivs
aaa
jmp
mov
sub
mov
cwtl
add
cmp
enter
test
addr16
repnz
fildll
pushf
mov
mov
mov
lret
pop
popf
les
xchg
pop
sub
cmp
mov
mov
or
cmpl
nop
lods
lds
imul
mov
fstp
mov
mov
xchg
test
in
rcrl
jl
test
lock
jl
cmpsl
inc
push
inc
ret
daa
mov
ja
pushf
pop
divl
jne
sub
jl
push
inc
in
bnd
jae
push
sbb
inc
jecxz
movsl
sub
adc
add
sarb
outsl
into
sub
scas
lds
cmc
xor
cmpsb
dec
fwait
dec
xchg
cmp
test
mov
mov
std
cmpsb
jo
lock
call
push
out
ja
push
cmp
into
aad
repnz
pop
out
push
xchg
and
faddl
push
or
mov
and
sbb
subb
ljmp
into
lahf
pushf
adc
lods
outsb
mov
shlb
int3
inc
ret
fistl
adc
cmp
mov
rcr
out
repz
pop
or
dec
sbb
pop
push
lcall
mov
es
fsubp
leave
lcall
std
pop
scas
cmp
fmul
xlat
fimuls
mov
rolb
or
sub
adc
inc
jle
insb
ret
gs
inc
jns
mov
fsubrs
bound
clc
test
imul
mov
push
ret
test
js
mov
out
cmp
imulb
icebp
btc
jp
xchg
push
xchg
cwtl
in
dec
sub
pop
push
imul
test
sbbl
jle
mov
or
std
outsl
mov
mov
cmp
adc
stos
scas
popf
mov
dec
jno
sub
lret
sbb
pop
cmc
ja
push
ljmp
fs
cmp
dec
lock
cld
daa
fadd
das
lods
mov
ret
hlt
out
xor
and
sub
inc
lock
ss
jno
mov
lods
cmp
test
aas
cmp
sbb
loope
push
cmpl
mov
or
jecxz
loop
and
stos
adc
cmp
fmull
in
int3
shrl
in
jno
daa
dec
cltd
daa
in
mov
mov
das
sbb
scas
and
hlt
rcrb
test
xor
stos
or
lea
popa
and
mov
cmp
mov
lcall
mov
in
andb
scas
movsb
cwtl
xchg
mov
daa
imul
cwtl
jp
cmp
mov
hlt
enter
mov
js
or
inc
fstpl
pop
clc
push
sub
lcall
imul
lods
fnstcw
inc
inc
or
jne
test
enter
push
push
je
fwait
inc
sub
push
arpl
pop
ja
sbb
sub
dec
movsl
shll
pop
add
sub
mov
fwait
dec
rcll
xor
xor
pop
mov
bound
cmp
pop
sbb
cmpsb
and
pop
mov
mov
int3
out
ds
mov
fiadds
mov
mov
add
and
outsl
pop
faddl
fs
cmp
sbb
mov
push
add
stos
ficomps
fwait
insb
jnp
js
push
mov
xchg
repnz
mov
aad
iret
int
lcall
mov
stos
dec
fnsave
insb
sub
add
and
leave
xchg
cwtl
sub
pop
dec
dec
enter
xor
cmp
mov
sahf
mulb
movsl
dec
push
lcall
sahf
sub
mov
xor
xor
test
push
fcoms
imul
inc
jo
loopne
js
mov
je
mov
imul
cmc
stos
sub
cmp
mov
mov
adc
push
imul
inc
inc
sub
out
daa
xchg
insb
mov
mov
adc
pop
andb
mov
nop
fdiv
into
mov
cmp
xchg
xchg
test
nop
rorl
imul
jge
stc
adc
dec
mov
cs
xchg
and
sub
mov
xor
mov
nop
sbb
jp
enter
into
lahf
add
arpl
dec
or
sahf
inc
mov
mov
ret
aam
mov
cld
mov
in
and
or
inc
ja
in
iret
or
sub
dec
xor
xchg
lahf
dec
jp
sbb
in
outsl
cmp
pop
adc
icebp
jg
ret
out
cwtl
gs
repz
icebp
scas
push
cwtl
insb
fs
arpl
xlat
sub
rcl
jb
push
adc
mov
pop
insb
and
bnd
pop
movsb
loop
dec
aas
stos
push
scas
in
daa
dec
stos
mov
ljmp
xor
imul
pop
hlt
out
in
aaa
sbb
mov
addr16
ficoml
xor
inc
in
xchg
sbb
push
add
sub
push
repnz
xchg
or
xchg
or
sub
rclb
in
aaa
pop
push
mov
xor
mov
adc
mov
insb
mov
imul
xor
inc
repnz
nop
cld
das
aam
int3
stos
sub
movsl
sub
mov
pop
lock
cs
sub
imul
orb
cld
lods
cmp
push
sub
mov
inc
dec
mov
ficompl
aas
cmp
inc
fsubr
aad
cs
push
mov
scas
sub
imul
adc
repz
adc
rorl
push
adc
inc
jecxz
sbb
and
xor
sub
xor
daa
mov
dec
inc
sahf
fisubl
orb
dec
pushf
mov
scas
dec
movsb
daa
pop
xchg
dec
imul
outsl
aaa
dec
fdivrs
outsl
sti
cwtl
pop
ret
aad
and
adc
out
std
sbb
cmp
loopne
jl
cmp
jg
push
movsb
pop
mov
mov
dec
and
incl
lret
lods
xlat
xor
dec
stos
lds
imul
cwtl
nop
cld
cmp
scas
arpl
bnd
lret
push
mov
mov
imul
mov
and
mov
loop
das
orl
ficoml
push
and
jbe
inc
jmp
lret
clc
push
jecxz
movsl
cld
xor
faddp
jo
cmp
rcrb
xchg
scas
ret
das
dec
mov
sub
mov
imul
adc
in
dec
sbb
es
cmp
test
jae
push
lret
repnz
push
lods
sub
cmp
xchg
mov
std
inc
or
lock
outsb
data16
daa
inc
mov
test
lret
mov
push
decb
cld
dec
cmp
and
loope
mov
inc
jne
jmp
xlat
scas
xchg
cmp
jae
mov
movsb
in
es
jg
out
and
cmc
pop
lret
jle
mov
add
or
lahf
mov
pop
daa
es
cmp
mov
in
pop
xor
lods
and
fisubl
and
push
inc
sbb
sbb
inc
ljmp
add
sub
cmp
fs
arpl
sti
int
xor
lods
fdivrl
dec
add
sub
dec
sbb
filds
dec
iret
sbb
cmpsl
dec
xchg
mov
cmp
dec
xor
scas
push
andl
cld
ret
jno
ds
push
cmp
int
ljmp
mov
xchg
push
xor
aas
xor
or
mov
imul
xchg
mov
pop
xchg
push
leave
dec
jp
imul
lret
int3
in
mov
repnz
push
pop
mov
rcr
push
movsb
imul
mov
lret
daa
lret
xor
mov
mov
loop
dec
testl
mov
mov
fsubr
mov
or
adc
fwait
stos
mov
cmpsl
std
dec
or
push
shl
lods
push
shl
dec
loope
mov
je
xor
daa
lcall
adc
insb
xchg
movsl
and
shll
cmpsb
lret
mov
lock
adc
lahf
pop
xor
pop
jnp
mov
or
push
add
sbb
in
aaa
adcb
jno
nop
cmpsl
rcll
xchg
mov
scas
push
lea
sbb
sub
je
xor
mov
cmp
pcmpeqd
jl
andb
push
int
dec
add
mov
repnz
dec
add
neg
cli
dec
and
push
fstl
andl
dec
push
std
cmp
pop
mov
adc
sti
into
jne
lods
xchg
cmp
mov
mov
ljmp
sub
dec
or
and
daa
or
xchg
bound
push
sbb
inc
pop
adc
cltd
imul
fsubrl
dec
in
imul
sbb
movsb
dec
arpl
and
jae
xor
in
mov
inc
cmpsb
jbe
js
push
mov
push
xor
jp
mov
ret
mov
xchg
mov
jp
pop
aas
mov
leave
adc
leave
scas
call
and
push
pop
ret
push
inc
mov
sahf
and
es
adc
movsb
enter
lahf
jg
lods
orl
aam
imul
mov
sub
xchg
pop
pop
inc
push
mov
adc
call
in
int3
pop
insb
mov
xor
pop
jb
push
imul
nop
lcall
loopne
loope
aas
mov
sub
outsl
dec
sbb
dec
cmp
loop
cwtl
ja
fistpll
pushf
lods
or
add
push
cmpsb
pop
cwtl
push
in
int3
insb
daa
repnz
dec
xor
dec
ret
mov
sbb
xor
js,pn
ja
mov
mov
cmpsb
sbb
and
dec
cmp
call
add
add
test
mov
dec
xchg
cld
sub
xor
add
cmp
inc
dec
jnp
imul
into
icebp
jmp
mov
mov
xchg
xor
push
repz
imul
call
fiadds
cli
push
out
xchg
test
dec
mov
jo
scas
ret
dec
aam
je
xchg
mov
jmp
out
xor
stos
sbb
cs
lret
xor
pop
in
aam
rcll
sub
pop
push
cmpsb
daa
cmp
inc
mov
testl
pushf
imul
hlt
cmp
enter
sbb
cld
in
xchg
stc
pop
insb
mov
adc
std
icebp
je
lods
ja
fs
mov
xor
sbb
fcmove
dec
cmp
lret
ja
ffreep
stos
pop
leave
jno
cmp
push
sti
loopne
jp
jmp
out
lcall
test
jne
pushf
dec
incb
test
test
js
inc
lods
mov
mov
xor
frstor
pop
fimull
sbb
mov
repnz
inc
fists
rcrl
sbbb
xchg
ds
jbe
cmpsb
inc
jbe
imul
mov
loop
cli
ud1
mov
jecxz
and
pop
cmp
loop
cltd
lahf
enter
jle
jno
xchg
xor
jmp
xchg
cmp
in
popf
jl
push
cmc
jns
mov
ljmp
add
mov
imul
fisttpl
lods
lcall
repnz
jmp
sub
dec
movsl
in
sbb
push
pop
pop
xor
aas
mov
xor
in
sbb
fdivl
movsl
in
lods
fsubr
pop
cs
data16
push
in
xchg
sahf
push
daa
xor
cmp
or
cmpsb
int
sub
stos
cmp
imul
mov
add
pop
je
jle
push
loop
loop
fiaddl
outsb
es
cs
movsl
fmuls
or
std
pop
inc
push
pop
xchg
pushf
fnsave
sub
sub
bnd
outsb
test
or
ss
in
cltd
dec
cmpl
lods
push
sub
pop
inc
cmpsl
test
inc
xor
inc
mov
cwtl
jle
lcall
push
in
jmp
push
lods
mov
daa
fnstcw
inc
and
sub
shrl
push
addr16
js
mov
js
nop
test
sub
jo
cmp
push
push
gs
lds
loopne
jmp
sub
add
jmp
or
in
imul
test
in
movsl
xor
sub
insb
inc
insl
inc
mov
cmp
outsl
adc
or
icebp
or
cld
mov
inc
mov
jns
jbe
adc
in
pop
sbb
add
push
leave
pop
pop
lds
sub
add
pop
add
pop
mov
addr16
jo
inc
mov
push
cli
mov
push
pop
in
and
mov
rolb
cmpxchg
pushf
cld
pop
fld
mov
mov
test
imul
test
out
inc
push
and
mov
sti
ret
mov
shl
hlt
inc
push
sbb
dec
and
cltd
stos
jmp
repz
lods
inc
mov
xchg
aad
or
rcll
xchg
pop
adc
rcr
ljmp
cmp
inc
test
push
xchg
cmp
imul
inc
and
xchg
add
orl
cmp
addb
xchg
jge
fnstcw
mov
or
xchg
pop
sub
cmp
loop
aas
jmp
cmp
or
adc
mov
or
xor
test
ds
daa
inc
xchg
or
loop,pn
dec
mov
rolb
or
jg
cmp
sbb
sbb
stos
pop
jg
pop
cmpsl
sub
dec
es
push
push
sbbb
sbb
subb
cmp
loop
push
jns
lcall
mov
dec
pushf
xchg
add
adc
insb
add
mov
rorb
dec
cwtl
inc
cmp
cmp
repz
arpl
loopne
test
mov
pop
mov
outsb
mov
add
push
jnp
sub
mov
lods
jl
inc
dec
lock
popa
mov
aas
lods
ds
sub
xchg
mov
cmp
pushf
insb
rclb
pop
dec
add
mov
mov
and
imul
imul
cmp
loopne
xchg
ficomps
or
jae
jno
sub
imul
cmp
sbb
andb
jmp
push
and
and
sub
rcrb
and
inc
jb
mov
jecxz
pop
push
mov
int
or
cmovge
repz
lret
inc
jbe
cmp
call
jecxz
cs
jo
in
popa
push
jle
add
push
lcall
out
cmp
ljmp
cmc
int
nop
lds
sbb
mov
xor
pop
and
ljmp
js
leave
dec
dec
cmpsb
out
pop
dec
sti
int3
iret
sahf
cli
pop
sub
xor
test
cmp
rep
adc
cmpsb
push
in
xchg
loopne
add
pop
pop
cmp
insb
mov
push
add
add
cmp
orl
or
stos
cmp
push
mov
sbbb
rcrl
xchg
push
mov
in
imul
push
stos
sbb
push
cmp
test
xchg
shll
dec
clc
and
gs
lods
out
daa
jl
lahf
shrb
mov
add
and
cmp
push
push
xchg
sub
jbe
jg
stc
cltd
xchg
repz
cmp
mov
add
enter
xchg
jno
lock
out
movsb
adc
in
outsl
cltd
cltd
loop
scas
and
and
and
addb
mov
jb
cmpsb
scas
fsubrl
aad
je
inc
add
pop
jle
imul
xchg
gs
mov
sub
cmp
sbb
nop
ret
int
sbb
mov
insb
mov
sub
cwtl
add
cmp
cmp
fucomi
mov
jg
popa
mov
lcall
mov
insl
out
add
data16
jl
sub
sbb
lods
mov
mov
je
xchg
lock
mov
mov
or
movsb
cmc
sbb
imul
mov
sub
add
cltd
sub
adc
or
inc
jnp
stos
sub
insb
loope
xor
jl
push
mov
jbe
mov
sub
in
and
push
loopne
dec
inc
icebp
sub
movsb
imul
scas
daa
mov
mov
pop
cmp
scas
subl
cltd
adc
bound
pop
setl
orl
mov
xor
xchg
icebp
clc
inc
mov
stos
jecxz
xchg
cld
or
cmp
daa
push
je
xchg
jg
pop
shlb
sarb
mov
xor
jle
loope
popa
cwtl
cmp
imul
lds
notl
mov
add
out
mov
int
imul
push
sahf
stos
mov
in
sub
xchg
pop
dec
cwtl
inc
daa
mov
test
xchg
pop
adc
jle
add
fmuls
jne
xchg
add
inc
jge
hlt
cmpsl
lahf
movhlps
insb
lds
out
nop
pop
cmp
stos
or
add
test
sbb
ficoms
mov
jmp
inc
enter
inc
cmp
dec
inc
pop
cmpsb
xor
push
jl
mov
push
imul
dec
scas
mov
shll
cmp
pop
inc
movd
push
fsubrp
int
sub
fadd
cmp
outsb
xchg
or
mov
sbb
iret
aas
mov
inc
mov
xor
jae
scas
xor
jmp
in
inc
pop
jbe
push
jl
push
sarl
jecxz
xchg
and
mov
xlat
fsubrp
ljmp
orb
mul
mov
adc
adc
mov
pusha
clc
push
je
arpl
into
push
jmp
insb
inc
test
out
test
push
mov
test
shrl
gs
nop
loopnew
push
mov
or
mov
fisubrs
punpckhbw
les
add
dec
push
sub
loope
push
mov
fsubrl
xchg
ret
movsl
mov
cmpsb
aad
xchg
cmp
repz
insb
dec
pop
xor
rcrl
xchg
xor
sahf
shl
xchg
enter
scas
mov
lods
repz
xchg
cmp
adc
dec
dec
out
lahf
mov
push
cwtl
test
sbb
ss
leave
dec
repnz
cmp
jmp
cmp
cwtl
aad
mov
jl
inc
cli
add
data16
mov
mov
jae
xor
xchg
sbb
dec
repz
adc
dec
ds
inc
cmp
dec
cld
fbstp
dec
cmp
pop
mov
pop
jb
ss
cmp
xor
push
or
sbb
fistps
orb
lret
pop
repnz
mov
jmp
lds
pop
push
mov
mov
pop
sahf
das
cmpsb
xor
sub
jb
sti
or
cld
inc
jl
mov
in
add
mov
ss
lea
pop
imul
xchg
push
push
pop
js
aad
sub
aam
shr
adc
stos
add
cs
loope
adc
dec
push
push
inc
push
xor
sub
rolb
cwtl
jge
sub
add
or
cltd
sbb
cltd
lret
inc
hlt
adc
sbb
xchg
loop
xchg
mov
or
dec
inc
stos
xchg
test
int
add
mov
mov
push
int3
cld
mov
pop
ja
jg
in
push
pop
add
jl
mov
sti
jns
and
rcrl
test
sub
cld
mov
mov
push
pop
movsb
aad
pop
lcall
gs
xor
inc
sbb
test
add
or
repnz
daa
rolb
lea
imul
mov
sub
call
mov
jne
xchg
inc
and
or
cli
mov
pop
pop
cld
xchg
imul
push
or
into
and
sti
pushf
nop
ss
mov
icebp
in
sti
repz
sbb
xchg
lcall
mov
jl
xor
leave
inc
pusha
jecxz
jge
or
test
lret
sub
add
pop
loopne
inc
dec
push
mov
rcrl
or
gs
repnz
cmp
movsl
dec
movsb
loop
jecxz,pn
push
mov
loopne
into
dec
std
xor
sub
mov
sub
shl
xchg
in
mov
int3
inc
xor
dec
jecxz
add
xor
or
push
in
lahf
rorb
add
sub
add
mov
test
fwait
int3
fistpl
xchg
icebp
ret
dec
xchg
inc
dec
mov
pop
out
push
mov
imul
sub
mov
xor
xor
adc
and
mov
pop
cmc
push
popa
dec
loopne
cmpsl
add
repnz
xor
pop
scas
fidivs
push
sbb
imul
add
ror
in
add
mov
cmp
lods
sbb
cwtl
push
stc
cmp
into
jge
mov
nop
push
mov
inc
testl
lahf
int
in
mov
in
mov
aas
in
mov
jne
int
or
pushf
and
dec
or
dec
xchg
mov
or
mov
aas
loopne
je
xor
repnz
into
lcall
daa
aam
ljmp
cmp
xchg
pusha
ffreep
cltd
sbb
aad
ret
jg
out
pop
iret
or
out
jmp
lock
jge
add
xor
in
pop
xchg
pusha
loop
lea
repnz
cmp
ja
mov
sbb
and
and
cld
dec
pop
mov
imul
imul
lea
xor
icebp
sti
int
xor
test
cmp
lods
xchg
outsl
xor
xchg
mov
sub
dec
imul
inc
cmc
movsb
inc
repnz
inc
repz
nop
sbb
sbb
or
xchg
dec
stos
shl
int
mov
push
in
std
stos
sar
pop
mov
cmpsb
jl
sbb
mov
insb
dec
xor
leave
mov
test
inc
test
in
cltd
aaa
aam
pop
cwtl
fwait
fwait
sbbb
mov
cli
fwait
je
xlat
dec
hlt
sub
mov
testb
cld
jmp
add
aas
daa
pop
sbb
pushf
ss
pop
lahf
lahf
mov
push
mov
outsb
xchg
and
clc
outsb
and
mov
adc
int
jno
les
jg
insb
jns
fucomi
push
mov
dec
and
push
mov
mov
xor
ret
aad
mov
sub
push
mov
or
sub
test
fistps
xor
inc
mov
mov
imul
hlt
sbb
sub
dec
push
jg
stos
sbb
sub
xchg
sbb
stc
and
rcr
addl
xchg
dec
jns
dec
lds
jle
xor
dec
xchg
icebp
xorb
cmp
loope
iret
insb
stos
nop
or
add
push
fimuls
fcoms
inc
jo
int
xchg
mov
adc
cmp
lcall
jmp
push
dec
cld
fwait
sub
cli
xor
test
sub
into
imul
lods
insb
daa
test
lcall
or
out
mov
cmp
dec
sub
fwait
das
mov
push
fdivrl
jnp
xor
movsl
imul
lea
mov
nop
or
test
jge
sbbb
or
mov
shrb
and
loop
aam
mov
push
sysenter
sbb
mov
fcmovb
jne
adc
xchg
cmpsl
mov
inc
xor
or
jle
jae
cmpsb
xchg
test
nop
js
sbb
and
jl
lcall
in
ss
pop
scas
cmp
daa
sahf
test
into
or
cld
popf
sbb
dec
scas
cmp
jnp
dec
lcall
jl
imul
cmp
push
je
fisttps
cmp
rclb
and
lahf
ret
out
mov
adc
or
or
cli
dec
xchg
or
xor
jge
mov
push
addr16
add
mov
in
jo
es
test
cmp
stos
cmp
fdivs
pop
test
insl
pop
das
movsl
sub
in
push
jl
push
sub
xchg
mov
popf
pusha
sbb
sbb
mov
push
push
dec
add
pop
cmp
das
mov
push
mov
test
sub
in
test
fmuls
sub
sub
sbbb
xor
out
outsl
cs
sbb
inc
out
cwtl
test
fstps
dec
cmp
jp
fimuls
ljmp
push
imul
sbb
or
cmp
ret
adc
cld
sahf
loopne
add
add
jge
push
sbb
jbe
call
lahf
pushf
adc
rcrb
repz
sbb
out
xchg
mov
das
jmp
jb
cltd
outsl
mov
pop
out
mov
sbb
mov
lds
out
xor
push
mov
lods
pop
mov
enter
cwtl
xchg
cli
leave
scas
repnz
daa
test
xchg
pop
sbb
mov
fidivs
push
cmp
data16
in
xor
and
es
dec
std
cmp
insb
jae
popa
jns
sbb
out
loop
xchg
mov
jbe
jmp
lcall
inc
cmp
jge
cmp
imul
jp
push
ja
jo
sbb
pop
lds
or
test
int3
jp
xchg
xor
inc
icebp
mov
jecxz
or
dec
out
jmp
dec
les
jp
push
sti
sbb
lods
lods
lcall
int3
shrl
shl
ret
mov
fptan
ficoml
sbb
xchg
sti
jmp
jg
aas
ds
sbb
out
gs
fcmove
pop
push
xor
cmp
out
popa
and
add
inc
dec
or
aaa
jg
lea
jmp
xor
lods
sbb
cmp
loope
cmp
pop
in
hlt
mov
ret
jno
mov
mov
inc
daa
push
pushf
cmpsl
movsb
stos
inc
fdivp
and
mov
sub
push
int3
or
fsubs
in
inc
ss
dec
xor
mov
test
add
dec
and
xlat
daa
scas
dec
xchg
out
adc
cmpsb
adcl
aas
std
in
and
sbb
mov
xchg
arpl
aas
mov
out
dec
imul
sbb
xor
mov
stos
adcl
mov
sbbb
aad
jnp
imul
xchg
test
imul
sub
jl
psraw
frstor
xor
cmc
pop
rcrl
das
adc
in
mov
sbb
repnz
orb
sbb
push
sbb
mov
pop
xor
and
cmp
rcr
dec
mov
sub
testl
cld
mov
inc
clc
pushf
addr16
das
xchg
adc
imul
or
add
cltd
jecxz
lods
jle
imul
and
testl
xchg
addb
push
xchg
cli
inc
ljmp
dec
mov
aas
xor
cld
and
or
cs
add
hlt
mov
mov
enter
sbb
add
jp
loop
dec
jo
hlt
in
xchg
imul
cld
xor
xchg
add
xorl
fsts
outsw
jnp
mov
js
or
aas
test
mov
cltd
xchg
xor
pusha
inc
lods
mov
idiv
imul
xchg
pcmpeqb
lods
imul
cli
and
jae
cmp
xchg
sahf
dec
mov
pop
xchg
cmp
in
mov
or
test
fists
int3
or
xchg
jg
mov
aam
outsb
pop
mov
nop
cmc
pop
je
pop
cmp
call
dec
xchg
les
lea
sti
punpckhwd
test
sub
jl
insb
or
and
push
fidivrs
sbb
mov
add
daa
xor
pushf
adc
mov
mull
cmovg
lods
rcr
fdivrl
shlb
stc
inc
dec
mov
test
mov
or
ljmp
jns
add
imul
rcrl
pop
push
mov
jl
jg
sbb
mov
daa
xchg
cmpsl
pop
dec
dec
int3
sbb
cmpb
push
push
int
push
mov
jno
out
jne
rorb
add
fcompl
popa
je
movsl
test
jo
jns
xchg
xchg
call
icebp
xchg
ja
jp
mov
cmp
stos
out
outsb
push
inc
fisubl
mov
push
cmp
sbb
hlt
jno
cli
inc
into
dec
push
or
hlt
cs
mov
mov
dec
scas
xchg
inc
add
mov
xor
out
and
mov
imul
sbb
emms
cs
mov
cmp
stos
int3
jae
inc
test
adc
mov
ljmp
mov
sbb
inc
pop
mov
mov
sub
imul
stos
cmp
ljmp
aad
sbb
and
adc
cli
mov
push
ret
movsl
lahf
push
xlat
push
push
cmp
jnp
mov
sub
fdivs
test
jnp
cltd
mov
xchg
push
sbb
jg
and
insb
loope
push
cltd
adc
mov
outsl
sub
andb
ss
add
leave
push
in
inc
into
jp
lea
iret
adc
sub
mov
adc
sti
js
mov
adc
push
ja
in
jl
mov
jbe
cli
adc
int3
pop
jmp
jnp
and
cmp
add
sub
cwtl
outsb
sub
roll
std
jo
das
outsb
lret
add
repz
les
rcrl
dec
cmp
inc
lret
popa
les
pop
push
loop
adc
iret
cli
cmp
sti
in
and
mov
sbb
ds
mov
pop
mov
daa
sbb
inc
mov
ja
or
icebp
xor
call
shrb
mov
pop
sub
pop
jp
leave
les
enter
xor
cwtl
lret
daa
stc
add
xor
push
xchg
lret
insb
push
or
loop
mov
sub
add
scas
aam
test
rcl
sbb
push
dec
mov
inc
or
insb
adc
pop
hlt
scas
iret
stos
cmpsb
sub
mov
cmpsb
mov
sub
imul
insb
and
fcompl
out
adc
cmp
pop
xchg
in
loopne
fdivs
or
mov
pop
xchg
pusha
mov
jo
mov
repz
aam
or
ret
imul
jne
sub
inc
aas
test
push
pushf
or
adc
adc
addl
repnz
and
or
mov
or
cwtl
bound
sbb
aad
fld
jmp
sbb
jb
rol
sbb
push
cs
outsl
imull
dec
adc
mov
call
imul
lock
sub
mov
stos
pop
repnz
pop
or
adc
push
xchg
cmpsl
xchg
fwait
mov
int3
aas
lret
and
daa
cmp
mov
mov
pop
jp
mov
mov
ljmp
xchg
mov
popf
aam
pop
loope
adc
arpl
movsb
fbld
add
insb
mov
icebp
fwait
xchg
testl
in
test
ds
lds
imul
inc
jle
dec
icebp
aas
dec
mov
add
stos
mov
arpl
adc
out
jle
xchg
cmp
dec
les
cmp
push
insb
loop
add
cmpsl
push
and
xchg
sbb
mov
cmp
sub
mov
in
or
je
cmpsb
nop
jle
addl
idivl
xchg
faddp
or
insb
imul
sub
adc
sub
lock
xor
jne
idivl
clc
rcrl
push
imul
lret
ja
mov
in
mov
movsl
sbb
bound
rol
xor
fisttpl
fprem
sub
xchg
fidivl
sub
loopne,pt
xor
das
cmp
idivb
or
daa
xchg
xor
pushf
xlat
xchg
xor
cmp
lods
dec
lahf
ret
sbb
pop
jb
push
mov
mov
sbb
xchg
mov
inc
mov
or
adc
pop
je
or
add
imul
fisubrs
jmp
scas
mov
sti
int
push
gs
mov
imul
daa
cld
jl
icebp
imul
pop
in
cmpsb
jno
pop
adc
adc
clc
shl
std
dec
movsb
add
sub
sbb
daa
shlb
push
hlt
sub
cmpsb
fisubrs
pushf
dec
in
push
dec
lea
mov
daa
pusha
out
push
test
lods
lods
faddl
insb
loopne
loop
js
or
push
sbb
inc
jecxz
ror
fnstsw
cmp
imul
and
push
mov
cs
and
xor
rolb
jne
sbb
pop
mov
cmp
xchg
imul
movsb
aam
or
jg
loope
mov
lret
xchg
mov
fsubrp
aaa
nop
fidivl
push
daa
std
xchg
imul
repz
dec
js
xor
addr16
mov
aaa
pop
gs
cs
imul
test
jns
loopne
sbb
mov
cmpb
mov
mov
jns
stc
pop
jbe
sbb
arpl
cld
xor
push
xor
push
fcmovnu
mov
cld
inc
and
sub
js
or
inc
sub
sbb
mov
aam
lock
pushf
xor
rcrb
cld
lods
mov
sbb
jp
fdivrl
add
sub
pop
sub
icebp
push
sbb
call
dec
imul
out
arpl
aam
cli
mov
push
cwtl
out
mov
mov
ret
cmp
pop
shlb
cwtl
xchg
aam
sbb
insb
stos
imul
jnp
mov
shrl
mov
xchg
xchg
sub
mov
daa
or
cmp
movsb
and
cmp
cmpsl
fdivl
insb
jl
test
icebp
pop
cld
jnp
je
call
or
insb
hlt
dec
adc
sub
jg
or
mov
jmp
xor
inc
cmp
sti
sarl
cmp
pop
sarb
sub
and
xor
sub
xor
pushf
sub
sbb
fmuls
mov
aam
sbb
fwait
pushf
sbb
mov
mov
xor
or
cld
mov
sbb
repz
fs
cld
and
cmp
fs
cmp
sbb
insb
mov
sub
imul
mov
imul
and
cmp
repz
dec
imul
insb
lods
xor
pop
nop
imul
clc
jae
pop
fcomp
jmp
sbb
adc
jo
pushf
xor
sub
in
mov
imul
xor
sub
mov
or
dec
dec
inc
adc
and
fsts
jecxz
add
in
out
dec
and
xchg
leave
xor
inc
cli
icebp
inc
xlat
jle
mov
jo
imul
repnz
repz
xor
mov
mov
stc
pusha
scas
pusha
mov
jl
loop
xchg
mov
ss
ja
imul
xor
add
xor
mov
jne
cs
dec
imul
into
fwait
dec
cmp
mov
movsl
shlb
cmpl
imul
add
daa
and
imul
sbb
lret
pop
jne
nop
mov
xor
sub
jge
sub
sub
in
jg
out
popf
cld
stc
jb
fwait
js
dec
mov
adc
cmp
int3
pop
subl
cwtl
or
push
mov
xorl
push
dec
or
outsb
sbb
sub
mov
fwait
cmp
jmp
out
pop
sub
jmp
mov
dec
push
subb
cmp
mov
xchg
adc
sbb
pop
test
insb
xor
aas
jne
repz
jo
lret
loope
aas
mov
insb
pop
xor
mov
sbb
mov
cmp
data16
cmpsl
sub
mov
and
mov
mov
mov
daa
in
ja
or
cmp
push
pop
imul
mov
inc
mov
dec
mov
adc
test
sar
xorb
cmpsb
mov
movsb
test
js
cs
loope
fadd
xchg
xor
jae
adc
imul
fisubl
sub
xchg
arpl
jae
xor
fimull
shlb
ror
shrl
push
ds
nop
xorl
push
push
xchg
push
jmp
pop
lods
test
mov
adc
push
cmp
dec
jp
sbb
push
ljmp
mov
dec
push
int3
lahf
or
adc
cmp
ljmp
hlt
scas
jg
jmp
lahf
lea
sub
arpl
xor
sbb
addr16
xchg
add
cmp
jmp
cmpsb
and
sbb
sbb
sub
inc
aaa
ss
sbb
sbb
imul
jp
std
jb
sahf
ja
repz
hlt
mov
cmp
sti
loope
stc
cmp
push
push
cli
dec
mov
adc
cs
mov
rcrl
into
push
ds
mov
rcl
cld
sbb
leave
scas
aas
adc
mov
shr
xchg
cld
mov
lret
mov
loope
hlt
jecxz
cmp
sbb
test
mov
adc
push
les
ret
fisttpll
hlt
fsubs
fmull
nop
stos
dec
dec
movsb
sub
push
sbb
sti
jnp
call
mov
mov
test
fisttpl
add
movsl
xor
mov
mov
xor
out
and
cmp
cmp
push
shrl
dec
je
ret
imul
jo
ljmp
imul
dec
iret
mov
mov
push
sub
popf
nop
js
les
push
or
pushf
cld
pushf
subl
sub
push
jmp
sub
adcb
xor
imul
pop
dec
mov
sbb
cmp
mov
mov
ss
mov
mov
mov
icebp
lods
push
jns
loopne
xor
sti
sub
adc
sahf
pop
inc
inc
xlat
scas
inc
in
pop
mov
test
out
cmp
or
lcall
insb
or
mov
cmp
shr
inc
cmp
cltd
out
das
xchg
mov
and
mov
sub
fwait
jne
xchg
stos
es
mov
mov
inc
lods
mov
adc
xchg
sub
test
fstpt
mov
ljmp
imul
stos
int
and
hlt
addr16
push
jnp
insb
pop
stos
loop
fistl
mov
popf
lahf
push
shl
repnz
dec
xor
inc
aam
xchg
sbb
mov
mov
aas
jge
jne
xchg
std
push
adcl
ss
sarb
sbbb
jl
adc
and
ja
js
cwtl
sahf
xor
xchg
packssdw
xor
inc
mov
repnz
lcall
pusha
hlt
and
sbb
mov
cwtl
adc
arpl
imul
daa
imul
lea
in
or
lds
xlat
dec
test
js
xchg
cltd
cld
shll
pop
pop
mov
cs
dec
enter
xchg
jp
cmp
and
cli
and
insb
cmpb
xchg
sub
jns
aam
cli
cltd
dec
and
shrl
jp
js
pop
gs
in
sbb
loopne
aas
mov
imul
and
repnz
loop
push
jle
cmpb
movsb
adc
push
loop
sbb
cld
js
sub
cmp
scas
aas
jge
push
mov
sahf
push
sub
mov
insb
pop
sbb
inc
sub
cmp
rolb
mov
std
outsb
imul
std
outsl
xor
test
jmp
mov
inc
and
cmp
pop
testl
ficoml
rolb
sahf
jae
mul
pop
cmp
pop
xchg
sbbl
or
jo
enter
jl
in
into
adc
imul
dec
dec
je
cld
mov
xchg
out
cmc
pop
fwait
aam
scas
sbb
sub
sbb
add
sub
hlt
mov
icebp
shll
xchg
xor
sub
pop
or
lret
sub
lcall
sub
ljmp
push
pop
rcr
push
xchg
cmp
cltd
scas
sbb
movb
or
mov
insb
add
and
outsl
sub
jnp
push
sub
mov
and
add
cmpsb
arpl
add
pop
mov
mov
mov
cmp
add
mov
leave
xor
cld
rorl
xchg
or
in
sti
repz
xchg
insb
or
mov
mov
mov
lret
adc
xchg
pop
mov
lcall
adc
int3
cwtl
cmp
jmp
fwait
or
lret
xor
mov
fmuls
fisubl
xor
cltd
mov
jae
js
sbb
xor
imull
cmp
das
out
sub
sub
jecxz
cltd
fldenv
sbb
and
out
hlt
cld
idivl
fwait
sub
les
sub
cmp
test
in
stos
mov
and
stos
sbb
fsubrs
in
fs
hlt
in
cmp
ret
fs
sub
stos
ljmp
xor
cld
mov
dec
je
sbb
sbb
mov
and
fwait
nop
dec
mov
adc
ret
mov
mov
hlt
fdivl
mov
cmp
lods
jae
ret
hlt
andl
adc
cmpsl
fs
sub
mov
imul
xchg
aaa
dec
dec
mov
xor
imul
lret
cmp
pop
add
es
push
push
and
cmp
jecxz
and
xor
inc
inc
fwait
cmp
dec
xchg
sub
daa
inc
or
dec
ficomps
stos
insb
mov
imul
mov
ds
or
shrl
add
or
clc
aaa
out
xor
xchg
inc
add
xor
adc
les
xchg
adc
les
popf
cld
out
mov
push
or
cs
daa
xchg
mov
repnz
add
out
push
imulb
insb
cltd
pop
sub
inc
adc
fldcw
iret
imul
shl
jmp
push
loop
aas
insb
dec
jne
roll
insb
xor
mov
sub
loopne
xchg
aaa
or
fbld
pop
add
imul
mov
dec
cltd
inc
or
push
xor
mov
mov
xor
push
add
das
xchg
pop
pop
mov
sbb
loope
mov
mov
mov
jg
xor
movsb
insb
pop
lds
pop
cs
inc
and
ja
push
pop
jnp
mov
jl
sti
push
push
das
sbb
fsub
enter
sub
sub
push
mov
xchg
xor
rorl
mov
cld
imul
lds
es
fcoml
out
sub
jae
push
inc
ss
mul
ja
mov
and
dec
cltd
pusha
jno
fwait
loope
cmp
push
jae
mov
aas
and
insb
xor
mov
mov
jo
inc
into
and
int3
xchg
das
fisttpl
fwait
sub
push
jl
mov
lods
inc
fiadds
fs
jbe
je
aaa
lahf
and
aad
mov
lcall
shll
loop
call
test
and
imul
outsb
xorb
push
pop
and
mov
fxch
xor
das
loope
push
gs
fs
xor
mov
fimuls
inc
cmp
dec
xor
pop
xor
pop
call
jmp
push
sbb
add
fwait
ja
cld
cmc
imul
mov
cmpsl
out
add
repz
inc
or
push
inc
daa
and
imul
jns
jg
mov
test
push
sbb
xchg
daa
pop
cltd
mov
in
cmp
sbb
mov
imul
jo
sbb
sub
repnz
iret
or
mov
jg
mov
xchg
out
divb
into
xchg
jnp
imul
jb
sbb
fildll
subb
xor
repz
or
or
mov
xchg
stos
sub
mov
subb
movsl
or
sub
mov
fidivrl
jae
mov
mov
mov
mov
lods
in
xchg
imul
or
mov
shl
jo
ficoms
imul
data16
cmp
cmp
mov
push
and
mov
push
subb
imul
mov
fisttps
addl
dec
inc
filds
sar
pushf
mov
int
sbb
cmp
mov
adc
cmp
xchg
add
cmp
or
out
mov
mov
cmp
and
enter
mov
movsb
call
xchg
jg
das
xchg
cmp
lock
mov
jbe
mov
imul
xor
jo
xchg
pop
inc
call
hlt
sbb
repnz
sbb
push
push
pop
sbb
mov
cmp
jle
mov
out
data16
dec
jns
xchg
mov
and
xor
xchg
dec
mov
pop
mov
stos
push
or
xchg
outsb
sub
enter
or
mov
mov
scas
and
ret
nop
mov
insb
push
hlt
jecxz
rclb
imul
sub
sbb
mov
inc
cmp
fdivl
add
xor
fmull
inc
xor
stc
pop
cmp
lret
push
sbb
rol
fcoml
cwtl
sbb
insb
sub
jbe
cmc
push
fwait
jl
fcoml
mov
inc
xlat
xor
xor
fxch
add
fwait
aad
xchg
gs
add
pop
nop
cs
inc
scas
sbb
push
jno
sub
jmp
js
aaa
push
or
in
add
movsb
nop
ds
sub
je
xchg
mov
popa
clc
xchg
xor
scas
push
aas
xchg
sbb
shrl
sub
lds
cmp
xchg
outsl
mov
adc
jl
jbe
cmpsb
mov
dec
imul
mov
mov
xor
repz
push
xchg
sub
in
in
insb
inc
push
arpl
aaa
xchg
mov
or
pop
cmp
cmpsb
repnz
or
push
lcall
sub
fadds
jnp
push
sbb
cmpsb
xchg
arpl
sub
sbb
int3
xlat
cmp
insb
mov
cmp
fadd
pop
mov
imul
push
fiaddl
stos
lcall
repnz
jl
jl
mov
dec
dec
out
pop
je
sbb
stos
mov
mov
enter
mov
cmp
movsb
xchg
lods
sbb
mov
int
jmp
xchg
aas
inc
hlt
loope
mov
ret
jecxz
xor
jecxz
cmp
pop
fidivs
movsl
iret
aaa
add
clc
jne
xor
sub
in
data16
daa
dec
daa
mov
inc
lock
ret
cmp
daa
or
inc
sbb
pushf
pop
sbb
xlat
repz
fiadds
lds
push
inc
cld
push
imul
movsl
mov
xor
dec
mov
xor
mov
nop
lods
jnp
xchg
mov
sub
push
rorl
imul
repz
test
aad
mov
aas
andb
int3
push
pop
sub
cmc
xchg
mov
xchg
pop
cmp
mov
in
mov
lcall
adc
cmp
jge
enter
adc
sbb
add
test
pop
insb
aam
int3
stos
arpl
and
mov
fsubrl
stos
mov
mov
xchg
xchg
popf
pop
mov
pop
fwait
lods
jge
jle
test
arpl
pop
cmp
inc
decb
xchg
inc
dec
in
imul
cmp
and
push
imul
sbb
inc
pop
stos
outsl
out
xlat
shlb
shrb
mov
sbb
addb
imul
dec
xchg
arpl
mov
pop
dec
inc
std
or
lock
sbb
aam
mov
into
cs
out
cmp
sbb
pop
cmp
jle
nop
daa
shlb
ss
mov
cmp
popf
mov
in
lcall
or
test
ret
lods
dec
cmpsb
fmull
xor
je
mov
scas
popf
dec
dec
test
repz
pop
mov
insl
iret
das
lret
aas
call
dec
mov
inc
fnstenv
fsubrl
call
mov
daa
repz
sub
imul
shrl
mov
adc
xor
cmp
test
mov
aad
sub
dec
call
cld
enter
lds
lcall
out
ja
xchg
add
xchg
cli
jae
sbb
jmp
push
or
pop
nop
adc
jl
push
mov
jmp
dec
imul
imul
push
jns
dec
js
add
cmpsl
sbb
mov
xchg
or
inc
clc
xchg
lcall
inc
cmp
ds
pop
lahf
mov
mov
clc
or
mov
in
cld
cmpsb
and
cltd
or
cld
add
cld
mov
lcall
adc
cli
push
push
mov
mov
sub
adc
mov
mov
mov
sub
dec
xchg
rcr
xor
sbb
xor
aas
xor
sub
je
loopne
js
mov
jno
ret
scas
pop
packssdw
cli
lods
sub
cld
in
fmull
add
add
dec
or
mov
cmp
xor
das
imul
sbb
enter
xchg
ljmp
jb
mov
cmp
cwtl
mov
fwait
cmpb
dec
jne
xor
sarb
les
out
xchg
outsl
pushf
dec
xchg
xchg
inc
xor
push
shrl
inc
xchg
jecxz,pn
or
repnz
xchg
lcall
sbb
mov
icebp
aas
lret
cmpsl
inc
dec
out
int3
sub
imul
hlt
sahf
cmp
decl
mov
movl
mov
cmc
jl
test
and
daa
mov
cmp
mov
mov
adc
push
lock
fldl
pop
push
roll
decl
xlat
xor
iret
pop
test
push
push
or
sbb
jae
xor
das
loopne
push
sub
aas
jl
jmp
jg
cwtl
push
pop
add
ds
pop
stc
repz
dec
dec
lret
outsl
and
jl
and
insb
dec
or
popf
das
and
out
jl
xchg
adc
mov
mov
mov
fwait
lret
sbb
mov
pop
stos
insb
rolb
add
xor
lahf
inc
int3
loop
xchg
mov
mov
push
dec
test
hlt
out
bswap
and
inc
mov
cmp
insb
out
dec
in
sub
cmpsl
loopne
arpl
xlat
movsb
push
xorl
imul
mov
int
and
inc
sbb
push
mov
out
das
fdivrp
sub
dec
ja
inc
xor
adc
or
pop
xor
cmp
fchs
pop
cli
xor
jne
adc
sahf
cltd
xor
add
jae
inc
push
dec
mov
mov
fdiv
mov
or
sbb
sbb
in
mov
mov
pop
shrl
cmp
xchg
or
push
dec
push
loop
and
rcll
push
jnp
and
xlat
cmp
dec
push
sti
mov
iret
loopne
adc
push
cltd
push
sbb
hlt
mov
movsl
mov
xor
aam
xor
ficoml
es
aam
in
sti
lahf
mov
ds
lcall
pop
loopne
push
jecxz
sbb
aad
aaa
push
xorb
sub
stos
ss
and
je
cmp
xchg
push
out
repnz
inc
cltd
or
test
xor
jle
sub
xor
sbb
sub
imul
test
and
jl
xor
imul
insb
xor
mov
int
dec
arpl
jno
cmpsl
inc
mov
sahf
cltd
inc
adcb
mov
daa
mov
xchg
add
aaa
ljmp
adc
aas
test
jg
pop
aam
subb
stos
ficoms
adc
pop
mov
fcomip
xchg
mov
sub
fs
in
mov
jge
or
insb
xor
mov
pop
gs
adc
lea
ljmp
lret
push
xor
xchg
or
xchg
ja
lods
bound
xor
iret
mov
loop
dec
cmc
fidivrl
xchg
sbb
jmp
xchg
push
push
xchg
push
insb
mov
cmp
aad
xchg
sbb
mov
sub
imul
cs
mov
jp
ja
jae
cmpsb
add
in
outsb
mov
jecxz
xchg
mov
mov
js
lret
cld
sub
mov
icebp
cmc
mov
inc
ret
loope
lods
dec
sti
and
pop
cs
ret
jle
jae
pop
pushf
popf
cmp
push
mov
jl
pushf
in
test
insb
cmp
cmpsb
mov
inc
fcoml
imul
mov
in
pusha
mov
xor
hlt
dec
pop
int3
cld
dec
pop
lods
arpl
xor
xchg
jae
mov
addr16
inc
or
fmull
xchg
mov
xchg
pop
pop
sbb
pcmpeqw
scas
jo
daa
sub
repz
mov
mov
sbb
adc
imul
and
jbe
jge
roll
loope
test
push
scas
cmp
mov
pop
sub
xchg
pop
mov
ja
fisubrs
punpckhwd
xor
inc
and
loop
ret
jae
bnd
xchg
jmp
push
sbb
xor
inc
je
repz
xor
mov
jo
hlt
xor
sub
mov
jmp
pop
loope
inc
dec
push
mov
xor
push
das
mov
jae
mov
int3
std
pop
xlat
repz
movsb
jl
mov
mov
push
or
inc
push
jns
sub
sbb
mov
imul
sub
pop
int3
mov
mov
jp
and
push
xchg
pop
pop
mov
xor
add
outsl
das
in
adcl
lret
push
mov
out
sbb
shll
xchg
jo
mov
push
xchg
addr16
in
xchg
xchg
or
imul
out
test
mov
mov
aas
std
xchg
add
xchg
jge
adc
call
jle
mov
pop
push
mov
stos
orb
push
scas
cmpsb
loope
cmp
cmp
push
and
jl
xor
pop
insl
add
jge
sti
lock
std
inc
arpl
xchg
lret
imul
adc
aaa
cld
mov
call
mov
out
int3
pop
inc
or
popf
add
xchg
add
insb
sbb
push
dec
hlt
cmp
imul
es
test
push
gs
lcall
xor
cmp
lret
cmc
lea
shrb
cmp
imul
orl
icebp
sar
adc
mov
imul
mov
shlb
pusha
jnp
mov
jge
cmp
push
imul
sub
dec
scas
pop
sbb
gs
leave
pop
cmpsb
shl
imul
lahf
loopne
adc
aas
fwait
stos
jecxz
sub
mov
shrl
jl
dec
mov
cmp
test
mov
das
cmp
cltd
bound
cmovo
mov
pop
pop
clc
lock
leave
daa
cs
jp
xlat
cmp
jae
enter
out
mov
lret
xor
out
fwait
cmp
or
imul
les
cli
outsb
xchg
or
leave
mov
push
cmp
jecxz
and
jmp
mov
clc
icebp
sbb
cmp
push
sub
imul
hlt
ss
xorl
pop
inc
test
imul
enter
cltd
xchg
sbb
mov
dec
loop
jno
rcr
imul
aas
stos
cltd
or
hlt
divb
inc
pop
push
mov
stos
pop
jae
adc
cmpsb
int3
dec
jg
mov
iret
pop
in
inc
loop
inc
je
cwtl
pop
out
sub
inc
cmpsb
mov
jmp
jno
push
popa
pusha
inc
test
cmpsl
inc
pop
pop
in
push
ret
sbb
sub
dec
sub
jl
jmp
push
xor
repz
dec
adc
rolb
ficoml
jg
xchg
insb
push
pop
loopne
push
xchg
or
mov
dec
lods
mov
in
mov
jle
mov
adc
in
addb
push
xchg
fidivs
mov
cmpsb
and
sub
push
adc
out
pop
sbb
and
or
ficoml
sub
push
leave
xor
es
add
adc
stos
or
in
xor
in
ja
and
sub
repz
adc
xor
xor
lock
sbb
sbb
fdivrl
addl
inc
xor
lret
imul
jnp
scas
pop
jns
aaa
fsubrl
lods
lods
mov
add
and
cmc
jmp
and
dec
arpl
shlb
mov
hlt
adc
sbb
xor
int3
cmp
jns
push
cmp
jmp
ja
mov
mov
jae
in
pop
pop
sarl
pop
cltd
cmp
or
and
xor
fwait
xor
add
jmp
insb
mov
or
fwait
adc
xor
test
cmc
mov
inc
notl
sub
arpl
stos
sbb
xor
fwait
pushf
cld
or
mov
inc
fsubp
xchg
pop
mov
xchg
lock
insb
ljmp
call
shr
fs
rep
cltd
jl
sbb
mov
in
adc
sub
pop
imul
sbb
mov
cmp
push
xor
in
je
addl
jae
pop
mov
test
adc
int3
lods
and
cmp
bnd
jnp
jae
xchg
stos
adc
nop
and
mov
push
mulb
aam
in
add
and
je
adc
mov
or
sbb
aad
nop
mov
mov
arpl
fdivl
mov
stc
sub
fdivrl
insb
mov
sbb
pop
or
cs
xchg
jl
fdivs
mov
lahf
int
dec
cmp
das
insb
movsl
jge
mov
mov
outsl
lcall
andb
pusha
xchg
psrlq
ud1
out
mov
xlat
mov
arpl
mov
mov
sub
icebp
test
jle
jno
icebp
adc
mov
inc
ret
add
ljmp
imul
outsb
decb
cmpsb
mov
pushf
into
iret
shrb
sub
add
lds
imul
loop
dec
sbb
jmp
ret
into
mov
cs
arpl
push
cmp
leave
divb
mov
shll
hlt
mov
aam
xorb
cmp
insb
bnd
push
add
jmp
aas
dec
pop
js
shll
or
adc
push
mov
and
popf
cmp
xor
jecxz
sub
pushf
and
enter
pop
pop
out
mov
das
push
lods
sub
popa
dec
cs
ljmp
dec
add
xor
fnsave
shlb
and
cmc
fisubs
cmpsl
in
mov
aaa
insl
insb
xchg
data16
imul
xchg
sub
mov
jno
jo
sbb
popa
mov
sbb
push
jl
adc
into
negl
out
lea
sbbl
mov
add
jo
fmull
xor
jae
in
fldcw
mov
scas
not
adc
inc
data16
xchg
lret
pop
cmp
dec
xor
imul
in
xlat
cld
mov
mov
sbb
aam
les
es
fwait
les
push
orl
sub
mov
test
sub
stos
pushf
and
dec
mov
cmp
adc
out
jo
imul
lret
pop
push
xchg
test
mov
es
movsl
cmp
pop
divl
cld
int
pop
cmc
pop
lea
xor
insl
shrl
imul
shll
mov
cmp
xchg
mov
mov
inc
rorl
push
cmp
imul
sub
or
adc
andb
or
fmuls
sbb
xor
imul
pushl
jp
imul
pushf
in
xor
stos
insl
movsl
cmp
imul
or
mov
pop
xchg
add
out
mov
aam
cld
push
enter
sub
ds
cmpsb
pushf
sbb
fmull
subb
cvtdq2ps
and
rolb
in
cmp
pop
rorl
imul
mov
fwait
addr16
hlt
sub
aam
xchg
outsl
add
and
lds
sti
scas
adc
outsl
mov
and
xor
shl
add
sbb
sbb
jae
or
bound
jo
lret
push
jg
or
cld
xor
cmpsb
xor
cmpb
sti
mov
adc
sahf
jmp
sub
insb
xor
cmp
es
adc
sahf
int
outsl
mov
test
icebp
push
push
or
mov
mov
or
sarl
lcall
pop
xor
add
cmp
imul
sub
inc
scas
outsb
sub
pushf
scas
mov
mov
test
int3
push
shl
sbb
mov
push
pop
sbb
add
movsl
jmp
mov
dec
pop
mov
push
lods
sbb
or
sub
dec
sbbb
movl
jbe
icebp
fs
out
sub
lahf
xor
lret
lock
gs
mov
add
outsb
imul
cmp
xor
fdivrs
mov
xor
xor
and
cld
adc
rcll
mov
push
test
andb
cmp
pop
cs
in
frstor
test
sbb
int3
imul
insb
mov
jecxz
orb
dec
xchg
xchg
push
xchg
sbb
cmp
or
push
cltd
jns
js
sub
mov
in
test
repz
std
mov
cmp
js
xor
cmp
fwait
push
xor
imul
and
pop
and
test
sub
and
push
out
test
inc
imul
int
mov
xlat
aas
cmpsl
imul
jae
sbb
pop
mov
cmp
xchg
cmp
lret
cmpsb
fwait
xor
cmp
hlt
daa
dec
mov
xor
filds
je
or
push
imul
pop
ja
outsl
pushf
je
daa
rclb
aaa
dec
mov
icebp
add
mov
mov
push
push
or
mov
pop
add
cltd
das
dec
xchg
dec
adc
jle
dec
daa
jl
cmpsb
jno
or
push
movsl
stos
int
mov
mov
rorl
cld
dec
lds
ficomps
je
xor
loop
xchg
mov
int3
daa
pop
push
xor
xor
in
flds
fmuls
mov
std
test
mov
jge
mov
push
mov
stos
das
insb
or
divb
test
mov
sbb
jl
mov
xchg
loop
push
and
loopne
pop
add
push
or
stos
or
adc
sbb
lret
sbb
je
mov
cli
out
fs
outsl
out
xor
mov
aas
daa
mov
dec
cmp
mov
shl
jle
cmp
mov
xor
scas
adcl
sub
inc
adc
ret
mov
shl
pop
fsubr
shll
and
cltd
int3
in
out
xchg
mov
mov
mov
push
inc
dec
push
imul
inc
mov
in
and
fdivs
int
insb
dec
fwait
jmp
hlt
dec
mov
push
mov
je
bts
aas
dec
inc
aas
xchg
jl
out
cld
dec
aas
mov
lods
xchg
outsb
nop
out
insb
jns
mov
pusha
xor
mov
js
dec
inc
imul
rolb
gs
push
xchg
imul
and
lock
in
sbb
call
imul
dec
sbb
popl
cmpsb
int
test
fisubrl
inc
aam
mov
stos
fs
xchg
loopne
dec
sbb
and
arpl
xchg
xor
add
in
mov
mov
xchg
push
jge
shrb
mov
ficoms
aam
xchg
popf
push
adc
jp
sub
push
xchg
jmp
sbb
fldenv
xor
mov
dec
dec
loop
int
or
pop
into
cmp
fwait
push
xor
mov
dec
push
add
leave
jl
mov
imul
repz
hlt
mov
loope
aaa
insb
pop
pop
push
and
icebp
dec
mov
add
scas
imul
je
into
fstl
mov
sbb
dec
scas
sub
pop
sub
adc
in
scas
adcb
lret
add
fadds
mov
ja
jle
jp
popa
push
mov
sbb
cli
lahf
mov
inc
sbb
cmpb
insb
adc
ror
shr
sbb
xor
hlt
cmpsb
inc
test
xor
jle
cmc
inc
mov
sbb
mov
push
and
dec
adc
cmp
sbb
lahf
pop
mov
test
dec
push
mov
imul
pop
push
push
dec
in
push
lea
data16
jns
cmp
cmc
imul
idivl
mov
mov
xchg
or
insb
rep
out
jl
daa
cmp
loopne
pop
cld
bound
leave
jl
mov
xor
out
and
or
xchg
jae
cmp
in
imul
jne
add
mov
jnp
iret
cmp
inc
mov
out
sub
popl
out
in
nop
mov
jl
int
inc
imul
dec
add
xorb
mov
cs
imul
movsl
loop
xchg
xadd
cli
mov
pop
inc
sub
mov
sbb
outsl
mov
out
jo
popa
enter
fs
pop
xchg
pop
daa
jae
sub
adc
mov
shrl
arpl
jno
xchg
test
jge
repz
xchg
inc
sub
movsl
pop
push
sub
push
jge
push
aas
mov
xor
cmp
mov
test
cmp
cwtl
mov
outsb
movsl
sub
mov
das
mov
mov
mov
dec
ror
push
mov
xchg
pop
shrb
fisttpl
fwait
aaa
mov
pop
fildll
repnz
insb
pushl
sub
pop
in
cmpsl
icebp
xor
in
add
sbbl
xor
jns
add
dec
pop
test
push
xchg
adc
out
push
and
mov
pop
mov
mov
repz
mov
jns
pop
adcb
jl
cltd
cmp
mov
mov
mov
es
mov
lret
cmp
imul
xchg
push
fsub
mov
shld
xlat
jle
dec
sti
sub
fnsave
dec
or
cld
mov
sub
loop
jnp
cmpsb
push
lret
stos
out
fcompl
pop
out
inc
cwtl
adc
fists
push
mov
sbb
pop
xchg
pop
push
nop
mov
fcoml
jl
pushf
sub
add
idivb
adc
test
mov
mov
out
mov
xchg
inc
push
in
aaa
mov
mov
je
dec
imul
mov
sbb
lock
movhps
in
pop
cmp
xchg
cwtl
adc
cmc
pop
inc
mov
jo
es
lret
lahf
pop
nop
lahf
mov
jge
xchg
rcll
mov
std
add
outsb
inc
push
cwtl
sahf
jmp
cmp
dec
jl
mov
inc
pusha
or
mov
pop
lods
adc
lods
or
mov
int3
insb
push
sbb
sarl
imul
fmuls
imul
dec
dec
repnz
mov
lock
ljmp
sbb
mov
xchg
inc
jnp
ss
mov
push
std
and
out
mov
ud1
pop
loopne
int3
ficoms
cmp
mov
push
out
jb
jge
inc
xlat
mov
movsl
jbe
pop
pop
divl
and
xchg
xchg
push
sub
enter
stos
rep
dec
lock
sbb
pop
movsb
and
push
in
mov
mov
xor
std
inc
cwtl
std
daa
imul
ja
mov
adc
cmp
bound
dec
jg
imul
shrl
imul
repz
fdivl
outsb
xchg
cli
mov
rcrb
mov
imul
sbb
aad
sbb
mov
dec
imul
mov
call
shl
scas
daa
imul
insb
addr16
xor
adc
mov
push
jno
rcrl
pop
sti
xchg
insb
mov
ss
adc
rorl
adc
push
into
inc
xor
mov
xchg
lret
imul
xor
mov
mov
xor
cmp
in
lods
rcl
test
fildll
out
push
pop
xchg
and
xchg
mov
cmp
cmc
jae
jnp
addr16
sbb
push
in
push
cli
xlat
inc
sub
mov
pop
pop
out
sub
cwtl
pop
in
xchg
lods
fiadds
mov
mov
mov
lds
add
add
mov
jmp
cmp
loop
xor
sub
inc
loop
insb
dec
dec
add
sbb
or
push
out
inc
xchg
shl
stos
pop
xlat
dec
cmp
fs
jl
jg
inc
inc
mov
aas
push
xchg
rcrb
addr16
dec
vpsubsw
cmc
pop
mov
xchg
insb
ss
pop
inc
jo
adc
xor
pop
loop
fadds
pop
and
mov
repnz
cs
dec
jae
int3
mov
icebp
lret
inc
imul
inc
mov
cltd
or
cmp
xchg
jl
sbb
push
xchg
clc
sbb
mov
mov
idivl
imul
mov
cmpl
mov
lahf
test
mov
fmull
pminsw
mov
lea
dec
and
popf
es
cmp
sahf
xchg
mov
xor
aaa
fstpt
out
sbb
push
or
sti
xchg
imul
test
imull
fwait
aas
paddb
addr16
push
or
or
mov
sbb
clc
mov
or
cmp
push
pop
mov
sbb
in
cmp
aas
int3
mov
and
or
cmp
mov
into
das
shl
push
rcrb
bndstx
dec
loope
add
loope
ds
cmpsb
fsts
jge
rorl
ljmp
push
pusha
mov
xchg
jg
jp
adc
loopne
sbb
scas
fwait
push
imul
xchg
jnp
dec
jle
xor
mov
inc
fsubl
xchg
push
mov
xchg
mov
fwait
jecxz
sub
push
mov
pop
fsub
mov
inc
cmp
sbb
sti
imul
loop
dec
out
mov
sbb
fldl
daa
ss
jo
or
out
mov
lret
daa
push
test
push
lret
clc
sahf
jns
and
out
imul
jle
jg
sub
pop
jg
push
dec
xchg
daa
xchg
cld
call
sub
gs
arpl
test
insb
stc
addr16
mov
les
push
enter
jl
inc
daa
pop
loope
mov
enter
or
cmp
or
mov
mov
dec
pop
lods
jp
dec
pop
imul
inc
sbb
inc
ds
push
enter
mov
leave
mov
dec
cmp
lahf
jle
scas
inc
sub
ja
insb
gs
jl
outsl
push
xchg
repz
fcoml
cmp
insb
xchg
cmpsb
or
dec
imul
xchg
xchg
add
or
add
sbb
add
and
jg
add
add
jl
ljmp
sbb
mov
xor
xchg
out
dec
jnp
push
or
outsl
enter
daa
dec
add
test
lcall
xchg
daa
mov
dec
lock
cmpsl
imul
imul
rep
mov
in
pushl
in
sbb
pop
rorb
repnz
data16
sub
push
lods
inc
dec
mov
jmp
xlat
mov
push
jle
fs
imul
cmpb
xchg
adc
jl
lock
jl
push
lds
addr16
in
mov
cmp
shll
xor
inc
adc
rcll
insl
sahf
sub
loopne
aas
dec
movsl
cmp
stos
ss
imul
insb
cmp
inc
sbb
stos
bound
rcr
mov
imul
test
es
lea
sub
adc
pop
sub
insl
mov
mov
mov
mov
sbb
ds
roll
insl
aas
pusha
cld
enter
rcrl
fnstcw
idivb
mov
fs
mov
daa
cmp
adc
mov
insb
test
jmp
mov
movsl
sub
push
mov
adc
in
in
pusha
in
jns
mov
lahf
lock
pop
mov
out
fcomps
scas
insb
lret
lods
into
xchg
mov
sub
mov
pop
lods
mov
shrl
insb
repnz
lahf
cmp
cmc
fwait
loopne
sti
pop
fcomip
xchg
xor
sbb
insb
cmp
or
push
pop
cli
fnstenv
or
inc
gs
inc
add
enter
push
xlat
aad
or
mov
je
loop
fidivs
daa
stos
add
sub
cld
enter
xchg
ja
mov
cmpsl
aaa
out
lret
push
fucomip
pushw
loope
sbb
jecxz
int3
xchg
sbb
sbb
cmc
or
adc
inc
mov
adc
lock
scas
sahf
or
push
mov
inc
jge
bound
add
fistpll
mov
cmp
scas
push
mov
inc
sti
enter
repnz
mov
jno
xchg
pop
cmp
call
movsb
push
repnz
nop
fstpl
xor
call
push
call
lret
int3
or
lret
mov
popf
and
loop
sbb
imul
ja
xchg
xchg
imul
aam
sbb
jmp
add
or
scas
es
adc
ja
rclb
and
xor
push
pop
mov
je
mov
imul
daa
or
jns
sub
cld
popf
pop
aas
ret
mov
xlat
sub
je
xchg
sahf
divl
xor
pop
jb
xor
imul
scas
cmp
or
mov
rorl
pop
shrl
fadds
sbb
shl
rclb
cmp
inc
xchg
xchg
pushf
inc
aas
push
mov
daa
mov
imul
fisttps
nop
jecxz
mov
loope,pn
xor
inc
shl
pop
repz
cmp
fsubs
cmp
lcall
imul
adc
lods
loope
test
fcoml
or
cld
popf
ds
sbb
inc
push
jne,pn
xor
lret
lahf
cmp
ret
adc
mov
add
jns
cmp
sub
call
iret
fmulp
xor
movsl
in
or
test
inc
push
mov
sbb
ret
lahf
lret
int3
xorl
xchg
daa
cmp
test
push
jne
dec
in
leave
hlt
icebp
cmp
dec
xchg
lds
bnd
addr16
push
popf
aad
lods
out
mov
push
int3
push
dec
cmp
xor
into
je
pop
mov
mov
imul
loope
and
adc
fs
xor
leave
and
sbb
inc
inc
or
adcb
shrb
push
pop
add
mov
mov
cmpsb
repz
sbb
cmp
mov
bnd
movsl
jl
sbb
xor
cmp
jp
gs
pusha
leave
pop
fcoml
andb
scas
cmp
dec
jns
imul
imul
arpl
jp
imul
in
add
flds
shll
xor
mov
push
push
mov
push
push
mov
jl
xor
xlat
ss
lock
dec
adc
mov
xchg
loope
cmp
pusha
sub
arpl
xor
inc
bound
dec
mov
mov
test
jl
in
push
mov
cmp
sub
pop
sbb
xor
lret
fisttpll
jb
pop
in
andl
cld
fsubrs
ljmp
jae
daa
dec
ljmp
addr16
cmp
push
cmp
push
inc
mov
sbb
inc
cmp
fwait
out
in
xchg
jnp
bound
out
ficoml
mov
fdivrp
sbb
jp
aaa
inc
pop
xchg
out
xor
mov
inc
mov
mov
push
dec
loop
stos
mov
std
lods
mov
add
cmp
push
imul
xorl
mov
dec
imul
push
push
sbb
dec
adc
test
pop
mov
add
ja
fstl
xchg
pop
mov
aam
mov
les
mov
mov
insb
xor
pushf
pop
adc
lock
hlt
insl
push
call
dec
jmp
out
or
imul
mov
ds
pop
mov
or
inc
lds
sti
add
xchg
xchg
cli
sbb
mov
pop
and
xor
test
mov
or
repz
mov
jns
fwait
xchg
jmp
xchg
jmp
fcomps
mov
cld
lahf
rclb
cmpsb
mov
ljmp
lods
mov
sub
xchg
push
loopne
fdivrs
adc
lret
mov
xchg
dec
int
push
fisubrs
fcompl
sub
or
inc
xchg
rcll
push
inc
ret
add
mov
lods
data16
daa
imul
jno
out
fwait
adc
out
inc
dec
stc
cmp
xchg
dec
lock
in
cmc
mov
push
cltd
imul
scas
xchg
mov
subb
sub
xor
pop
mov
into
xchg
xchg
mov
cmp
std
in
stos
cmp
outsb
xchg
sub
inc
pusha
dec
push
push
pop
pop
sub
add
repnz
adc
sbb
sbb
jns
loope
mov
rcll
ja
pop
test
push
cwtl
mov
test
lret
mov
jbe
adc
imull
mov
loopne
cmc
dec
icebp
fldcw
cmp
shrb
xchg
cmp
mov
or
dec
add
ret
fwait
aas
adc
out
bound
mov
ud1
iret
sbb
pop
or
lods
jmp
add
sub
cli
test
mov
loope
pop
jns
aas
push
cmpsb
sub
sbb
mov
mov
push
jo
sub
imul
jecxz
and
incb
sub
cmpsl
or
jmp
movsb
std
mov
and
leave
sbb
xor
xor
jmp
cltd
outsl
adc
sbbb
sub
les
cmp
pop
call
mov
pop
xor
cltd
dec
mov
xlat
ficoml
loop
imul
add
in
pop
adc
jmp
sbb
cmp
inc
inc
add
sbb
mov
dec
add
jno,pn
mov
push
movsb
pusha
leave
sahf
push
or
add
pop
data16
cmp
mov
test
fs
sahf
mov
pop
mov
mov
mov
jns
cmp
mov
aad
pop
mov
mov
add
mov
dec
lret
sbb
daa
jb
lods
test
xor
sahf
aad
push
int
jae
cmp
sbb
xchg
test
rorl
mov
add
sbb
jl
repz
loop
jae
scas
cmpsb
pop
xchg
arpl
insl
loop
mov
ret
or
xor
fimuls
dec
pushf
movsb
xor
out
xchg
cmpsl
add
repz
lcall
mov
aam
fmuls
outsl
cmp
imul
xor
sahf
pop
push
jg
dec
fsub
mov
mov
sti
xchg
inc
mov
icebp
jl
mov
inc
mov
cmp
mov
out
testb
sbbb
gs
dec
adcb
xchg
hlt
xor
adc
push
xchg
dec
movsl
aas
inc
out
xor
in
in
loopne
movsl
mov
cmp
insb
push
add
pop
add
ds
stos
imul
adc
inc
cwtl
xchg
xchg
stos
cmpsb
ds
lea
push
sahf
pop
out
sti
lods
jecxz
add
or
fbstp
xor
xchg
inc
mov
push
mov
cltd
jge
push
xchg
and
sbb
popa
jae
push
adc
push
and
lds
data16
push
adc
stos
in
mov
sbb
cmpsb
insl
mov
outsl
pop
mov
imul
scas
les
stos
les
or
xchg
xchg
push
mov
ret
daa
imul
or
fdivrl
int3
sub
add
js
test
insb
dec
jp
adc
mov
aaa
dec
mov
sbb
fadds
jae
xor
sub
adc
adc
cmc
scas
xchg
std
imul
hlt
loop
outsl
fisttpll
cmp
orb
out
lock
push
lds
xchg
inc
loopne
int3
repz
sub
test
and
int3
stos
or
std
xorb
outsl
orb
mov
sbb
xchg
lock
jmp
sbb
jno
mov
xchg
add
dec
mov
ljmp
add
insb
out
rclb
stc
stos
popa
and
lcall
and
bnd
repz
add
daa
dec
lret
mul
aad
repz
cmp
fmulp
sbb
pop
mov
fdivrs
push
push
out
xlat
getsec
mov
sub
fcompl
dec
aas
cmp
sub
cmpsl
cmpsl
xor
pop
ljmp
movsb
fstps
cmpsb
and
adcb
int3
dec
mov
icebp
or
or
scas
push
push
aad
sbb
mov
rcrl
mov
mov
xor
sub
cld
cs
jge
mov
push
sub
test
jb
pop
pop
gs
inc
int
out
adc
pop
mov
aaa
in
cmpl
jns
int3
mov
adc
repnz
adc
xor
sbb
sub
xor
fcomip
scas
cmp
inc
shl
int3
mov
adc
sbb
fisubs
lock
pushf
and
and
outsl
fmull
xchg
sub
or
mov
movsb
or
insb
cld
lea
cli
sbbb
imul
dec
lret
xor
in
sub
mov
push
cmp
cli
imul
shl
stos
out
scas
xchg
fs
mov
mov
out
and
jmp
cwtl
jl
outsl
out
mov
inc
daa
aaa
xor
je
aas
mov
xlat
and
addr16
test
sti
jge
sub
out
paddw
lcall
rcrl
jecxz
daa
cwtl
or
roll
mov
loopne
xchg
and
jno
in
sbb
lcall
sub
jne
sbb
inc
or
push
adc
cmpsb
fidivrl
test
xchg
enter
mov
pop
lret
and
xchg
repz
insb
sbb
fiadds
adc
mov
mov
push
sub
hlt
xchg
cli
jg
fwait
pop
lds
mov
mov
cwtl
pushf
fisubs
push
imul
outsl
push
xchg
cmp
cmovg
add
lcall
lahf
push
mov
test
or
insl
inc
clc
andl
push
cli
xchg
dec
mov
inc
in
xorb
dec
lods
mov
out
jbe
mov
push
and
sti
fnstsw
lds
xor
lahf
lock
fs
subl
xchg
add
xchg
pushf
mov
pop
push
mov
call
push
sub
in
jmp
xchg
or
sbb
xor
sbb
fisttpl
sub
pop
xchg
lahf
ljmp
repz
push
and
cli
pop
push
imul
inc
fxch
adc
imul
jecxz
movsb
xorb
mov
push
mov
inc
rclb
xchg
push
in
in
mov
stos
mov
jle
xor
ja
inc
data16
loopne
scas
cld
mov
sub
dec
mov
push
xchg
jg
fcmove
es
andb
aam
cmp
loopne
xchg
stos
aam
in
pop
mov
addr16
cmpsl
mov
stc
sbb
std
lods
lret
dec
dec
ss
lock
dec
fisubrl
and
int3
push
lcall
mov
xor
xchg
xchg
xor
int3
pop
sbb
dec
fs
adc
andb
hlt
xchg
fisttpll
lock
loopne
cmp
xor
fidivrl
into
mov
in
mov
hlt
cld
mov
stos
out
xchg
adc
xor
dec
and
add
aaa
sub
push
xchg
or
cmp
dec
cld
pushf
sbb
fidivl
rolb
push
call
sbb
cli
test
mov
sub
sbb
rcrl
je
clc
sub
cld
out
pop
cltd
dec
mov
insb
insb
lods
mov
sub
lcall
mov
sub
test
pop
and
dec
xchg
mov
popa
js
or
sbb
xchg
stos
jecxz
cmp
lods
xor
or
pushf
xor
cmp
sbb
in
lods
and
sub
movsb
in
xchg
cltd
lahf
sub
push
imul
mov
pop
sub
and
shl
ret
stc
mov
rorl
imul
sub
sar
fstpt
sub
sti
negb
shrl
cld
push
cld
mov
cmp
pushf
adc
mov
cli
in
sub
stc
or
jl
rol
or
cld
sbb
mov
or
mov
stc
cld
jl
imul
dec
pop
mov
idivl
mov
test
sub
aam
jmp
cld
aam
or
mov
cld
adc
ficoml
mov
and
shll
in
je
sbb
aad
mov
cmp
mov
cmp
sti
in
mov
push
xchg
xlat
and
jmp
lods
or
test
mov
mov
repnz
xor
lock
sub
mov
cld
ljmp
sub
dec
xor
push
paddusb
dec
add
sbb
pop
mov
or
add
sub
imul
fstl
mov
mov
xorb
xchg
jl
cltd
push
cld
leave
orb
xlat
stc
jge
pushf
jl
scas
test
mov
push
adc
push
jl
dec
jne
cmp
loopne
adcl
sbb
push
mov
mov
jle
mov
jmp
imul
addr16
sarl
lret
mov
cmp
imul
mov
aas
pop
clc
out
dec
stc
adc
imul
adc
or
sbb
sbbl
xor
fstl
sub
fwait
insb
mov
in
enter
inc
and
imul
dec
cmp
test
fcompl
cwtl
cmc
sbbl
cltd
rorl
imul
push
cmp
cli
sbb
sbb
xchg
xor
mov
xor
jmp
inc
xor
mov
shlb
pop
scas
js
fnstsw
inc
sub
clc
dec
out
cmp
xchg
mov
outsl
aaa
repnz
jns
into
arpl
in
mov
xor
pop
cmp
xchg
imul
cwtl
pushf
push
fimuls
repz
in
cmp
imul
popa
fstpt
jl
add
xchg
outsl
push
imul
and
mov
std
imul
mov
cmp
jnp
xchg
cmp
mov
inc
insb
dec
and
or
popf
xchg
dec
sub
jg
repnz
ficoms
mov
mov
in
add
imul
xchg
into
inc
push
xorb
and
sarb
repnz
inc
xchg
push
add
xchg
dec
imul
xchg
test
pop
jmp
aam
mov
cld
sbb
sbb
jl
fiadds
rcll
or
add
jle
push
aad
xchg
sub
pop
mov
pushf
cmp
add
ja
inc
jo
inc
enter
jae
imul
insb
arpl
jno
call
cld
jmp
jp
ds
xchg
jmp
fwait
inc
cwtl
int3
pop
push
jae
ret
adc
sub
out
xchg
mov
mov
xor
stos
fldl
sub
pop
jmp
cmp
mov
call
or
push
dec
rcrl
repz
jle
repnz
jl
insb
cmpsl
sti
out
pop
mov
stc
sub
jne
ret
leave
inc
das
add
push
aad
jo
sarl
les
or
or
mov
and
pop
sub
cmc
jne
push
mov
or
fdivl
mov
rclb
xor
mov
mov
sbb
mov
adc
and
or
mov
pop
push
test
xor
push
jp
xchg
dec
mov
in
arpl
push
jp
pop
in
inc
sub
addl
cmp
mov
xchg
inc
xchg
inc
int3
outsb
repz
loope
jnp
mov
dec
sti
pusha
jecxz
cmpsl
int
movsb
push
stos
orl
lods
clc
imul
es
cmp
int
adc
loopne
hlt
imul
sbb
fsubrl
lea
fwait
mov
xchg
sub
xor
add
mov
pop
imul
add
cs
cmp
insb
fstl
fsubl
mov
cwtl
dec
gs
pop
mov
insb
or
push
lret
jne
in
mov
cmp
negl
imul
xor
xor
rclb
aam
mov
gs
test
or
adc
cmp
mov
jae
xchg
flds
dec
mov
sub
mov
imul
cld
outsb
pop
stc
and
loopne
adc
mov
sub
jecxz
or
fidivrs
sbb
push
sbb
daa
jle
jge
fwait
adc
int3
dec
lds
or
cltd
push
fwait
jae
pushf
xchg
xor
sub
mov
rcrl
lcall
mov
jae
add
stos
pushf
push
xchg
andl
es
add
add
pop
mov
fsubrl
xchg
pop
and
xchg
arpl
cmpsb
inc
xchg
mov
cwtl
je
mov
xor
jmp
int3
addr16
push
out
sub
push
mov
stos
dec
ja
das
imul
dec
loope
mov
jle
sahf
in
jae
test
cmc
hlt
test
sub
jl
lahf
push
jns
sbb
shll
sbb
ljmp
dec
dec
cmp
push
popf
mov
jecxz
shlb
lret
pop
in
mov
out
lods
sub
mov
shlb
insb
sbb
jae
mov
cli
pop
xor
shl
imul
insb
mov
ja
btc
sub
imul
rol
sub
inc
in
jg
and
aam
sub
repnz
jl
fnstsw
imul
imul
jg
and
cs
cli
push
orb
xchg
pop
add
and
orl
repnz
mov
xor
aas
push
jp
inc
loop
add
pop
stos
pop
push
mov
repnz
mov
aas
lods
js
lods
jl
fwait
rorl
jmp
test
test
sub
mov
adc
icebp
aaa
pop
jge
ficoms
movsl
push
stos
sub
sub
add
or
popf
lds
jmp
push
cmp
movsb
inc
push
shrl
es
insl
jmp
stos
adc
xchg
push
stos
ljmp
shl
add
or
ret
cmp
mov
fiadds
xor
adcl
pop
inc
inc
es
pop
outsb
mov
imul
dec
mov
lahf
shlb
pop
inc
lock
repnz
sbb
push
push
mov
fdiv
sbb
test
imul
cmc
push
cmp
adc
ror
cmp
leave
inc
fstps
sub
lea
cmp
jb
mov
xchg
or
pop
imul
xchg
xchg
sub
out
inc
rcll
jne
mov
and
mov
push
push
adc
test
jns
jecxz
lret
out
xor
xchg
cmp
lahf
inc
xorb
cmp
aam
mov
pop
out
jae,pt
subl
dec
jp
js
add
mov
pop
xor
inc
cmp
or
aam
mov
mov
repnz
sub
hlt
in
jns
xchg
inc
xchg
aaa
imul
jg
mov
sbb
xchg
andl
inc
push
mov
pop
sbb
jge
mov
jg
inc
sti
fists
cmpsb
pop
imul
loop
pop
push
test
sub
movsb
sbb
xchg
test
pushf
jge
pop
jae
fcom
outsb
lret
xor
icebp
sub
mov
mov
and
sbb
fcoml
mov
movsb
adc
pop
stos
daa
iret
imul
mov
adc
and
sbb
mov
inc
push
test
sbb
sbb
mov
ja
or
jle
push
dec
adc
int
das
loope
movsl
rorb
stc
and
shr
push
adc
repz
addr16
adc
mov
mov
loop
cli
imul
jno
xor
pop
arpl
enter
sti
fs
test
jo
cmp
mov
xchg
movl
testb
faddl
fwait
arpl
outsb
or
rdtsc
leave
int3
sbb
dec
mov
imul
stos
inc
lret
imul
pop
mov
sub
stos
xor
inc
out
adc
movl
mov
sarb
imull
shll
dec
xor
imul
cwtl
clc
jno
inc
mov
inc
sbb
mov
outsb
and
call
xor
jge
aam
aas
mov
fsubl
lahf
jp
push
push
test
gs
pop
adc
hlt
cltd
sub
sarl
movb
fidivrs
gs
jl
inc
imul
test
popl
cltd
scas
xchg
ss
push
mov
pop
sbb
xor
sarl
dec
stos
out
jl
pushf
xchg
mov
cmp
leave
add
or
mov
out
mov
repnz
mov
push
add
in
imul
and
shlb
mov
sub
mov
negl
stos
push
ret
insb
mov
daa
xchg
pop
jmp
add
fisttpl
sbb
incb
andb
into
adc
adc
pop
xor
inc
inc
cmp
testl
fildll
aam
xchg
lahf
add
test
pusha
xor
mov
aam
inc
push
and
insb
add
jo
test
push
pop
mov
cltd
fwait
in
inc
scas
cmp
mov
pop
sub
inc
dec
adc
out
dec
aad
xor
or
lea
mov
dec
fwait
or
outsl
out
out
in
ljmp
xchg
cli
aam
in
mov
mov
sub
jmp
into
notb
inc
sbb
hlt
clc
sbb
mov
push
mov
dec
or
insb
dec
add
push
adc
inc
mov
punpckhwd
xor
add
sbb
aas
push
inc
movsb
push
push
xor
das
mov
sbb
push
out
loop
lods
inc
jne
daa
mov
cmp
lea
or
int
shrl
xchg
mov
jle
fiaddl
cmp
les
and
mov
cmp
push
aas
xchg
jl
mov
test
loop
cmp
jecxz
add
mov
out
mov
int
jmp
fildll
test
inc
push
ja
clc
clc
push
mov
or
jnp
jne
pop
dec
ficomps
cmpsl
inc
lods
add
fimuls
cmp
xchg
xchg
imul
and
imul
stc
cwtl
imul
insb
mov
aaa
mov
enter
inc
or
out
adc
pop
cmpsb
push
pusha
add
es
adc
inc
jne
clc
mov
dec
and
cmp
mov
xor
test
leave
pusha
sub
imulb
or
adc
fnsave
cmpsl
inc
jle
jmp
in
sbb
pop
inc
loop
leave
mov
pusha
enter
mov
jp
sub
xorl
lea
cmpsb
fwait
je
jae
std
sbb
leave
cmp
cltd
jle
push
push
and
pop
xchg
mov
push
ret
aam
mov
jnp
xchg
sub
cwtl
push
test
xor
imul
out
add
sbb
inc
mov
aaa
in
imul
add
xchg
xlat
or
hlt
in
andb
jne
outsl
sub
or
mov
bound
jne
xchg
jge
fisubrs
sbb
sti
out
fldlg2
cmp
dec
adcl
aaa
cmpsl
xor
jnp
xor
es
inc
xor
fistpll
pop
push
sub
call
hlt
push
fists
insb
sub
xor
lock
test
mov
test
shlb
xor
subb
mov
or
je
jns
aaa
cmp
jno
jg
pop
xchg
pushf
aam
out
adc
fiadds
imul
pop
jnp
lea
jmp
repz
movsb
imul
dec
xor
insb
or
inc
cmp
test
mov
mov
cmp
in
rcl
sahf
call
sti
fdivrl
lea
sub
push
lods
dec
test
lret
lock
sub
dec
lahf
fdivl
scas
sahf
imul
outsl
inc
xchg
imul
inc
lahf
add
cmpsb
inc
xchg
xchg
inc
adc
punpckhwd
inc
pop
mov
add
iret
push
xchg
fldz
in
das
xorl
lock
or
jge
lret
mov
sub
fnstcw
iret
pusha
inc
ret
test
inc
mov
imul
cmp
jmp
pop
push
mov
test
pop
push
cmp
imul
xor
arpl
dec
dec
outsl
push
jno
hlt
or
jp
imul
push
push
lcall
insb
xor
jecxz
testl
into
aad
lea
repnz
dec
xor
inc
jle
mov
add
xlat
inc
sbb
or
adc
sahf
pop
mov
cmpsl
int
inc
inc
lret
mov
add
lock
xchg
stos
dec
pop
addb
imul
mov
jmp
push
xor
pop
add
subl
out
repnz
cmpsl
and
jmp
imul
mov
icebp
sti
push
cli
scas
or
mov
mov
mov
ja
jl
test
ljmp
jnp
pop
add
xchg
xchg
cmp
dec
mov
stos
aaa
mov
das
mov
xor
pop
dec
dec
dec
and
inc
inc
cld
and
jp
add
sub
push
push
xor
cwtl
sbb
adc
push
add
fcomps
xchg
lods
lds
aaa
xor
xchg
xor
sub
int
mov
xor
jl
mov
pop
div
cmpsb
xor
pop
mov
imul
mov
xor
dec
les
and
cmp
ja
inc
add
jno
xor
inc
push
test
xchg
es
cmp
repnz
fwait
sbb
fdivrs
sbb
sub
iret
pop
cs
in
ss
xchg
or
sbb
adc
and
iret
les
dec
loopne
inc
push
jmp
mov
subb
insb
mov
mov
imul
and
mov
loope
leave
and
jnp
sub
mov
ljmp
sub
fimull
mov
mov
mov
movsl
cmp
pop
cmpsl
aam
lods
push
dec
sbb
clc
sub
cmpl
jle
pop
jne
ljmp
add
dec
in
sub
leave
or
pop
adc
shr
gs
pop
jl
lock
imul
shlb
mov
imul
add
insb
mov
orb
push
vmwrite
mov
imul
jns
lods
out
in
mov
ret
dec
lret
orb
mov
mov
ds
cmp
mov
cmp
mov
mov
mov
xchg
insb
xor
imul
sub
inc
mov
sub
repz
add
or
shlb
nopl
jmp
xor
mov
ret
aas
push
sbb
dec
fdivl
loopne
push
xchg
je
sub
jmp
jb
imul
add
leave
sub
pop
add
test
sbb
add
pop
into
xchg
cltd
lds
stos
dec
hlt
jae
sbb
jnp
mov
inc
sub
ljmp
dec
inc
add
mov
adc
sbb
dec
mov
jmp
addr16
push
scas
xor
jl
sbb
sub
xorb
pushf
adc
mov
mov
mov
leave
fstp
lcall
sub
sbb
push
mov
mov
imul
push
lods
test
or
outsl
pusha
cli
rcrl
aas
mov
repz
pop
jmp
sbb
repz
leave
dec
and
testl
idivl
icebp
pushf
es
ds
scas
lock
loop
nop
pop
push
mov
adc
inc
out
mov
xchg
mov
fcompl
gs
adc
sub
xchg
pop
sub
insb
cmp
and
cmp
sbb
pop
mov
es
frstor
subb
inc
mov
loope
leave
xlat
add
cltd
pop
aas
mov
sbbb
mov
cmp
add
les
mov
imul
pop
and
sahf
bound
out
clc
lret
stos
test
and
mov
mov
push
fldz
int3
loop,pt
stos
fstl
fnstsw
and
insb
adc
imul
jg
pop
sbb
sbb
cvttps2pi
aaa
push
dec
dec
xchg
push
insl
lahf
push
cmpsl
fcmovnb
sbb
xchg
cmp
imul
adcl
ja
aas
mov
scas
mov
mov
cmp
or
sub
imul
inc
aas
mov
stos
adc
js
sub
imul
mov
add
call
adc
aaa
mov
mov
xchg
ds
xor
sub
and
xchg
sarb
inc
rcll
call
movsb
js
mov
ficoml
xor
cld
mov
imull
sub
sub
mov
sbb
mov
add
insb
adc
sub
bts
jo
pushf
arpl
imul
test
nop
repnz
sarl
addb
xor
xchg
or
arpl
popf
scas
jge
adc
mov
inc
mov
inc
fmull
test
sbb
adc
daa
aam
xchg
add
inc
cli
loop
cmp
sub
addl
xor
or
imul
xchg
shll
pushf
push
xchg
daa
aam
cmpsb
aad
mov
push
cmp
loop
dec
xchg
adc
mov
pop
xlat
cltd
pop
or
adc
cmc
cmp
ljmp
cmp
xchg
mov
mul
ja
xor
icebp
sbb
mov
xchg
ds
cld
pop
insb
pop
je
mov
dec
es
inc
or
adc
sbb
and
rorl
ljmp
cmp
inc
xchg
lods
mov
outsb
sti
push
addr16
xor
dec
inc
pop
mov
rcll
mov
cmp
outsb
mov
aam
xor
push
push
and
cli
cli
aas
scas
rcl
sub
xchg
dec
mov
imul
outsl
pop
or
cmp
negl
hlt
mov
mov
jle
inc
mov
movsl
je
jmp
and
sub
ds
jg
sbb
sub
outsw
popf
sahf
pushf
lret
lahf
cmp
sbb
movsb
cwtl
orl
sub
lods
xlat
xor
and
insb
fildl
dec
xchg
sub
daa
in
inc
rcrl
cld
clc
imul
ljmp
outsl
int3
ja
in
nop
sbb
push
sub
mov
call
out
sub
and
gs
sub
sti
popf
and
xchg
pop
push
mov
adc
dec
mov
in
pop
xor
push
cmp
sbb
add
je
repnz
jmp
jnp
rcl
scas
adc
sub
out
imul
imul
sbb
sahf
outsl
mov
sahf
cmp
cli
jle
repnz
jl
inc
mov
dec
sahf
xchg
dec
test
cmp
and
sbb
push
test
inc
imul
stc
sti
mov
outsl
repnz
scas
scas
cmp
test
or
cwtl
repnz
gs
stc
jg
out
and
sub
daa
mul
imul
les
xor
aas
dec
mov
and
js
pop
lret
mov
stos
ljmp
xor
xchg
mov
stos
lea
mov
int
inc
push
data16
fxch
loopne
fcomp
cmpb
push
dec
repnz
test
mov
mov
add
rorl
aas
fldcw
xor
cmp
jg
cmp
insb
int3
xchg
lret
ds
sbb
adc
sub
sub
cld
mov
cmp
inc
stc
sub
sub
mov
sbb
sbb
sub
or
ret
in
sub
pop
xchg
push
gs
shll
inc
cmpsb
fwait
fwait
dec
or
rcrl
in
dec
lea
sbb
jne
test
add
jno
mov
sti
xchg
xor
sbb
xchg
movsl
add
dec
dec
xchg
mov
dec
das
lods
xchg
mov
mov
mov
imul
sbb
dec
xchg
enter
dec
inc
lret
and
sub
fwait
or
sub
addr16
mov
ror
cli
mov
cmpb
push
loop
popa
dec
mov
sahf
std
mov
cld
xor
mov
test
test
sbb
out
arpl
mov
mov
xor
mov
mov
sbb
lds
pushf
sub
pusha
repnz
aas
push
mov
sbb
test
mov
push
ds
in
movsb
clc
push
sti
mov
fwait
insb
addb
mov
and
cmp
sbb
imull
mov
xchg
cmp
dec
les
xchg
jae
cmp
or
cmovns
inc
sbb
pop
adc
xchg
xlat
imul
sbb
lods
in
jp
cmpb
shrl
stos
pop
pop
or
xor
rcl
sbb
test
arpl
sub
imul
or
cld
pop
sbb
nop
cwtl
imul
push
pop
fmull
mov
je
arpl
dec
sub
ljmp
or
mov
mov
xor
imul
and
gs
ja
push
arpl
add
jmp
mov
xchg
cli
ds
xor
imul
sub
mov
lcall
popa
sub
fwait
or
xor
mov
test
sub
dec
cmpsl
jmp
imul
mov
fldt
sub
out
sbb
in
fisubl
imul
imul
xor
jnp
ljmp
loope
insb
sar
push
les
out
into
dec
enter
sub
cmp
pop
sub
mov
pop
inc
in
add
sarl
ret
adcb
xchg
cmp
xchg
jb
fdivl
int
sbb
ret
mov
inc
jge
or
loope
jg
mov
adc
inc
adc
cmpl
and
cmc
lea
fisttpll
xchg
movsb
lret
sti
mov
cld
dec
push
push
test
out
inc
or
mov
shr
daa
or
sar
mov
push
sarb
mov
xchg
insb
daa
fwait
pop
lods
negl
in
mov
or
out
fildl
loope
mov
mov
daa
ja
xchg
xlat
lds
xor
cli
xor
pop
imul
sbbl
or
inc
xchg
mov
sbb
lret
sbb
adc
ret
mov
std
sbb
inc
mov
mov
repnz
cmp
lods
in
in
pop
push
scas
cli
or
rdpmc
out
inc
imul
shrb
insb
es
mov
enter
mov
adc
incl
icebp
add
and
pop
cmpsb
sbb
dec
xor
cmp
enter
and
xchg
push
repz
stos
ret
push
movsl
out
mov
aad
mov
dec
jo
daa
out
dec
movhpd
push
mov
incl
sbb
mov
data16
repz
lcall
mov
add
mov
push
aam
cwtl
lret
stos
aas
xor
mov
fsubs
enter
fbstp
xchg
incl
sbbb
push
aaa
xor
push
out
cwtl
aad
in
push
xor
imul
imul
inc
sbb
mov
mov
flds
jae
sub
fbstp
adc
mov
mov
sbb
lods
sbb
in
dec
xor
pop
repz
or
sti
mov
cmpsb
daa
sub
mov
inc
jle
inc
insb
pop
adc
mov
pusha
jmp
out
mov
xor
jp
jb
xchg
movsl
sub
out
fcmovu
ja
out
mov
aas
or
jp
pop
je
jle
stos
lcall
push
dec
dec
mov
cld
mov
stc
icebp
movsb
xor
jae
push
out
ds
xchg
rcll
daa
dec
xor
sub
je
adc
test
leave
xor
xchg
imul
cmpsl
mov
mov
pusha
adc
adc
icebp
pop
lcall
fbstp
lock
sti
scas
mov
pop
cmp
fmull
mov
enter
cs
mov
jl
call
jne
mov
das
cld
test
test
sub
sbb
imul
inc
add
cld
or
jmp
xchg
cmp
jecxz
pop
jge
xlat
jmp
cwtl
pop
pop
pop
lds
push
push
imul
je
mov
mov
or
rcrb
push
cmp
imul
out
cli
int
cmpb
dec
dec
paddsb
add
insb
pop
sbb
dec
push
dec
sbb
shr
lea
push
popa
mov
inc
push
stc
mov
mov
ja
orb
mov
xor
pop
imul
sub
imul
fwait
dec
push
mov
imul
xchg
loop
sbb
popa
sbb
adc
pop
pop
adc
mov
mov
bound
pop
and
cmp
xchg
enter
popf
xchg
dec
cmp
xor
frstor
insb
sub
notl
repnz
lock
adc
jmp
popa
or
movsl
scas
cmp
insb
outsb
sub
sub
and
sahf
rcr
xor
pushf
popa
cmp
push
mov
add
sbb
sub
lods
push
adc
mov
lock
mov
mov
inc
test
jmp
add
mov
mov
dec
fidivrs
jmp
inc
dec
sub
xchg
repnz
push
add
imul
sbb
fldl
cmp
lcall
cltd
gs
enter
jge
fstps
mov
orb
loope
test
push
dec
scas
in
jb
jbe
or
loopne
add
cmpsb
add
mov
nop
stos
fcoms
jnp
push
lods
pop
dec
dec
addr16
loope
adc
loopne
mov
iret
push
lret
sbb
aad
sahf
dec
ficomps
repz
ret
or
aas
mov
aad
jg
addb
sbb
push
mov
sahf
insb
add
stos
cmpsb
idiv
or
test
scas
xchg
repnz
jle
sub
jl
ss
in
adc
insb
cmp
rcrb
push
icebp
sub
cmp
mov
arpl
stos
sahf
rorl
stc
jae
pop
jns
insl
sbb
fcmovne
cmp
sub
cwtl
pop
and
push
js
adc
fnstenv
movsb
xchg
xor
fisubrs
sqrtps
imul
add
nop
xchg
push
mov
xor
mov
inc
fcomps
cld
insb
xlat
std
sahf
cmp
in
cmp
leave
call
rol
mov
xchg
roll
fcmovnb
xchg
fcmovnb
imul
rcll
addb
adc
daa
sub
cmp
mov
dec
jg
jl
loop
daa
fwait
mov
loopne
je
ds
stos
dec
add
pop
xchg
in
inc
add
in
call
pop
pop
outsl
fisubrl
cld
imul
js
mov
das
xchg
sahf
imul
mov
sahf
mov
cmpl
cmp
mov
stos
into
dec
sbb
int3
mov
out
stos
lret
push
repz
cmp
addb
loope
stos
leave
xor
gs
dec
jbe
repnz
pusha
loop
mov
sbb
xorb
lahf
mov
insb
insb
in
cmp
clc
or
push
cmpsl
cmpsl
imul
sbb
dec
and
xchg
mov
mov
test
pop
push
mov
cmp
sub
xchg
jecxz
pop
jl
add
mov
movsb
aas
daa
mov
lcall
mov
fwait
sub
adc
add
imul
push
push
hlt
dec
into
and
sbb
xchg
packssdw
leave
cltd
xchg
pop
sbb
dec
xor
push
sub
rorl
sub
inc
hlt
adc
out
cmp
dec
nop
lods
icebp
imul
add
mov
stos
popa
rolb
cli
insb
sbb
dec
inc
je
cmpsb
jnp
mov
push
cli
out
lahf
push
jle
int3
inc
js
xor
aad
sbb
adc
test
ljmp
fcomps
inc
jle
mov
xor
dec
and
lcall
in
sbb
mov
loopne
cltd
fs
scas
jle
mov
dec
lods
enter
mov
loope
xor
inc
cwtl
pop
xor
and
push
imul
mov
cmpsb
jo
paddusb
push
lret
in
add
add
xchg
push
sub
cltd
mov
loope
xor
shlb
pop
pop
subb
ljmp
cmp
rcrb
mov
or
sub
fstp
cmpsb
add
pusha
xor
or
jns
in
mov
mov
xchg
pop
jecxz,pn
mov
jle
lds
pop
cltd
das
xchg
test
aas
sarb
test
sub
imul
iret
adc
add
dec
add
dec
mov
mov
sub
cld
subb
mov
mov
lock
pusha
test
mov
sbb
xor
mov
and
pop
lea
leave
cmc
je
icebp
pop
rolb
insb
outsb
sub
out
mov
nop
loopne
jmp
sbb
pop
les
sbb
jnp
mov
addr16
pop
ror
ret
sub
lcall
sarl
mov
ret
mov
insl
shrb
or
sarl
xor
nop
ljmp
xchg
sti
mov
adc
int
test
jl
dec
jae
std
cli
js
inc
jge
jne
daa
imul
mov
je
popa
push
xor
stos
or
sub
test
in
adc
add
xor
xchg
pop
fidivl
cmp
cmpl
stos
int3
jns
jg
das
int
ficompl
adc
xchg
imul
jnp
frstor
in
pusha
inc
push
pushf
and
jno
sbb
out
fwait
imul
cmp
fdivs
mov
dec
stos
in
pop
xchg
js
aas
inc
scas
aas
int
pop
ret
rclb
inc
ficompl
xchg
xor
xchg
cmp
push
mov
mov
lret
pop
or
mov
push
cltd
out
sub
cmp
xchg
adcb
imul
imul
rcll
xor
or
std
hlt
xchg
dec
jno
out
cmpsb
xchg
loop
fidivrs
imul
pop
pop
jl
pop
imul
daa
adc
sub
shrl
shll
arpl
mov
mov
roll
lcall
xchg
mov
outsb
sbb
or
cli
fisubl
aam
and
mov
push
mov
out
test
repnz
fsubrs
cmp
fsub
fs
into
mov
and
testl
jns
fdivrp
cmp
lock
movsl
loopne
inc
daa
sub
push
add
and
fwait
mov
sbb
xchg
or
jp
sub
mov
movsl
cmp
mov
mov
mov
cltd
cmp
fdivrs
cmp
xchg
add
mov
setne
sbb
xor
sarl
test
repz
imul
cli
sub
mov
inc
sub
sahf
es
xchg
popa
dec
sub
jecxz
add
aas
ficomps
cmp
mov
into
sarb
ljmp
add
push
jae
repz
lea
ficoml
fimull
pop
and
pop
sub
movsb
dec
pop
jle
jmp
fisubl
xor
push
stos
sub
mov
adc
rol
sti
repnz
test
outsb
xlat
movsb
jle
into
stos
push
stos
daa
or
adc
mov
add
mov
dec
mov
mov
fs
fdivr
lods
lods
mov
cmp
sti
adcb
cs
pop
lcall
sbb
dec
xor
in
fildll
pop
cmp
sub
scas
mov
bound
xchg
lcall
inc
shl
cmp
jle
je
insb
xor
mov
stos
adc
insb
mov
data16
xlat
lcall
fildll
lahf
mov
or
add
add
cmp
les
rcr
cmp
lea
push
inc
loopne
jo
adc
add
cmp
pop
jno
in
sbb
insb
mov
push
dec
xchg
test
loope
jg
inc
mov
pop
cmpsb
jnp
mov
test
cmp
movsb
xor
push
pop
negb
jnp
adc
cmp
mov
testb
cld
fwait
jl
stc
or
aam
xchg
mul
xor
mov
fwait
xchg
mov
xchg
cwtl
daa
cmpsl
cmc
push
or
sbb
sbb
enter
imul
jns
js
nop
adc
push
cmpsb
fucomip
out
dec
inc
lods
loopne
mov
mov
out
sub
iret
mov
dec
out
imul
sub
jne
insl
lcall
pop
adc
in
pop
insb
out
xorl
int
mov
adc
repnz
cmp
imul
cmp
dec
xchg
cmp
mov
sbb
or
ljmp
aad
sbb
sbb
imul
mov
push
scas
ja
in
imul
clc
dec
push
lea
jecxz
pop
out
mov
jae
mov
cmpb
loop
insl
daa
cmp
pop
push
stos
mov
and
lock
lret
jle
test
mov
jae
imul
inc
add
popa
dec
jl
mov
testl
ja
hlt
adc
leave
push
sarb
call
mov
push
fstl
imul
out
xchg
xor
leave
call
repz
and
fldl
movsl
fwait
cmc
push
and
imul
adc
enter
xchg
jmp
hlt
cmp
cmpsl
dec
insb
mov
out
cmpsb
and
fimuls
in
sub
loop
les
xchg
xchg
dec
add
mov
stos
pop
call
dec
xor
inc
cmpsl
into
mov
jg
popf
imul
insl
add
sarb
insb
call
xor
push
ljmp
imul
data16
ret
xorl
adc
sub
inc
mov
lods
cmp
lahf
imul
je
and
les
inc
fbstp
je
and
push
mov
loop
imul
xor
imul
clc
sbb
orl
mov
add
fidivrl
add
or
cld
cmp
enter
cmp
inc
add
jb
or
aam
inc
hlt
inc
and
adc
orl
add
mov
push
inc
sub
sbb
mov
aas
in
pusha
stc
jbe
dec
sbb
mov
ds
fidivl
dec
movsl
hlt
andb
loope
pop
inc
sub
jb
dec
dec
mov
sbb
mov
jne
int3
in
lahf
ja
dec
lcall
test
insb
sub
addr16
rorl
imul
dec
and
dec
jl
xchg
mov
jbe
fwait
imul
adc
cmpsb
cs
cmp
enter
push
jne
push
test
pop
xor
in
rcll
roll
imul
jge
bsf
movsl
xor
decl
adc
mov
jecxz
in
jae
adc
sbb
xor
mov
idivl
imul
je
fldenv
inc
mov
mov
mov
lock
push
aam
imul
mov
pop
jb
dec
es
subb
scas
and
test
push
js
inc
ds
xchg
outsb
icebp
cmp
arpl
mov
push
in
std
lea
add
fstpl
int3
popf
repz
out
repz
cltd
int
dec
inc
and
jmp
lret
aaa
add
fnsave
lahf
dec
xchg
lret
outsl
push
xchg
jg
inc
pop
mov
pusha
ja
sbb
shl
sub
sbb
stos
mov
push
cs
dec
sbb
xor
sti
mov
push
imul
cmp
psraw
or
mov
inc
jecxz
xor
test
or
dec
addr16
fidivs
sti
mov
orl
pushf
rorl
movsb
loop
mov
jno
out
sub
and
sbb
mov
dec
xor
movsl
dec
subl
dec
subb
std
cmpsl
push
mov
sbb
int3
cld
sarl
int
scas
mov
repnz
xchg
mov
popf
cmpsb
push
cmp
lods
out
mov
mov
cmpsb
sbb
adc
hlt
leave
push
and
bound
adc
movb
sub
mov
add
icebp
and
popa
push
shufps
mov
jne
daa
imul
jno
sub
lea
aas
cmp
cmp
adc
fidivrs
in
loopne
push
ja
inc
nop
adc
std
xor
inc
test
push
xor
sub
ljmp
jmp
hlt
mov
jecxz
mov
enter
ficompl
shrl
das
xor
ljmp
mov
cs
cmp
aaa
dec
fwait
imul
push
ret
inc
mov
and
xchg
xchg
dec
repz
je
repnz
fldcw
fs
test
push
pop
sub
cmp
imul
and
fbld
cmc
imul
dec
mov
mov
sub
sbb
cmpsb
rcrl
sbb
xchg
adc
negl
pop
pop
insb
frstor
mov
aad
loop
dec
imul
or
les
movsl
jl
dec
cmp
xor
dec
fdiv
mov
mov
jmp
dec
pop
je
test
nop
fistps
aaa
imul
jl
daa
pop
xor
pop
push
stos
ja
jle
cwtl
imul
repnz
cwtl
arpl
mov
mov
push
sub
fwait
adc
dec
jno
aam
scas
scas
sar
ja
mov
dec
push
mov
ljmp
xchg
or
add
and
mov
push
lods
loope
imul
iret
dec
and
rcll
ss
insb
mov
jnp
push
dec
mov
mov
leave
sbb
mov
pop
push
das
push
lds
ja
xchg
lock
stc
adc
adc
cli
jnp
loopne
adc
das
insb
cld
mov
mov
push
fwait
push
jnp
pop
pop
add
loope,pn
loopne,pn
push
test
xchg
xchg
mov
pop
inc
jns
ret
cltd
test
in
daa
sub
adc
sbb
or
cmpsb
mov
jnp
jl
cli
test
and
cmp
mov
pusha
fimuls
dec
pop
dec
pop
mov
jge
jb
push
jl
fs
xchg
pop
sbb
mov
mov
adc
jbe
adc
popf
pop
rcr
jecxz
cvtps2pi
adc
nop
jecxz
test
mov
data16
mov
jne
cmp
or
out
andb
mov
or
aam
mov
mov
pop
push
loop
es
decl
mul
jnp
pop
add
test
es
or
int
jmp
jbe
jmp
insb
lcall
and
or
inc
cmc
daa
xchg
adc
or
shrl
push
icebp
repnz
and
inc
mov
xchg
loop
addr16
adc
call
jno
loop
loope
jns
or
roll
insb
mov
mov
test
cli
inc
fld1
xor
ja
scas
popf
inc
in
imul
mov
inc
xchg
adcb
lcall
imul
xchg
int
rcr
test
in
sub
fisttps
mov
push
repz
push
mov
repz
sbb
push
cmp
mov
jo
pop
cmp
fcompl
int3
dec
pop
pop
mov
push
cmpsb
jge
xchg
ficoml
push
inc
or
dec
xchg
mov
rorl
mov
jge
rcr
xchg
push
imul
push
sbbb
imul
or
pop
cli
into
aam
xchg
xchg
or
add
arpl
sub
int3
cmpsl
inc
add
mov
ss
ja
add
hlt
pop
dec
mov
xchg
imul
mov
mov
repnz
stos
jmp
pop
pop
xchg
loopne
mov
cmpsb
mov
movsl
jle
fmull
in
dec
lcall
sbb
xor
inc
jmp
jge
cmp
sti
sbb
in
outsl
lea
adc
cmp
mov
jae
mov
bswap
test
outsl
push
add
add
or
popf
jl
mov
imul
sti
sahf
pushf
stos
push
or
or
dec
cld
idivb
xor
imul
je
movsb
cld
aaa
movsl
fstpl
aas
add
mov
add
jl
pop
test
push
sbb
mov
push
push
cmpsl
push
jp
xor
mov
stos
xchg
lods
cmpsb
int3
dec
insl
dec
cmp
imul
dec
cmp
inc
mov
sub
mov
rclb
dec
pop
out
in
dec
xchg
push
sub
stos
je
mov
mov
js
push
cld
cmpsl
pusha
stc
mov
insb
push
jmp
pop
mov
cmp
xchg
icebp
and
jno
sarb
xchg
cmpsb
fnstenv
mov
movsl
mov
or
imul
jl
cmp
inc
data16
xorb
daa
add
jg
scas
xchg
std
mov
cmp
mov
shrb
sahf
xchg
and
adc
imul
or
aas
sub
jb
xchg
add
pop
dec
sbb
sahf
mov
jp
lret
arpl
test
dec
ret
dec
mov
cli
jns
lods
adc
rcll
ud0
aas
lahf
sbb
mov
sub
xchg
dec
adc
mov
cmp
daa
push
mov
loop
insl
cltd
call
dec
pop
or
shlb
or
stos
push
dec
push
nop
ud0
xchg
faddl
and
sti
xchg
cmp
and
add
jl
add
js
mov
stos
test
cld
mov
sbb
sub
out
loope
test
dec
iret
cmpsb
jecxz
add
cs
andb
mov
jg
jmp
sub
jns
cmp
int3
push
sub
and
jb
dec
hlt
lret
sbb
pop
sbb
cmp
imul
mov
enter
nop
mov
pop
push
cltd
andb
push
inc
gs
es
mov
pop
shll
add
ror
mov
out
inc
mov
shlb
lcall
xor
sbb
push
or
mov
xor
or
aad
fisubs
sub
and
mov
mov
icebp
mov
lahf
dec
adc
push
ret
jge
daa
xchg
movsb
mov
imul
dec
cmp
cli
jle
cmpsb
cltd
xor
xor
mov
jnp
xor
arpl
sub
jb
pop
pop
shll
lcall
insb
add
or
incl
adc
rclb
push
or
cmp
pop
xor
gs
int3
aam
cwtl
enter
or
add
xor
or
pop
es
cmp
stos
imul
mov
or
mov
int3
mov
sub
jmp
repnz
inc
sub
nop
adc
imull
xor
xor
popa
ds
sbb
push
mov
inc
shll
mov
or
cld
cmp
dec
jg
push
sti
cmpsl
xchg
addr16
mov
sub
sub
mov
enter
sub
mov
imul
push
data16
leave
mov
jg
push
sbb
add
cmpsb
pop
js
jb
mov
and
or
jg
cwtl
fs
sub
pop
and
sub
dec
mov
fmull
mov
mov
jl
addr16
and
xor
or
fstpt
and
imul
jae
daa
insb
jno
js
jl
and
lcall
fdivs
in
jge
imul
sti
pop
mov
lods
stc
fists
push
cmpsb
xor
fsub
ficoml
xor
xchg
scas
jecxz
mov
cmp
cmp
inc
add
and
icebp
in
xchg
jns
dec
test
shrb
sub
mov
xchg
cmp
add
adc
xlat
sbb
movsb
out
inc
pop
cwtl
inc
fcomi
adc
cmp
inc
jne
mov
repnz
clc
cmc
arpl
cmp
addr16
in
cmp
outsb
push
mov
xor
dec
movsl
aam
lcall
mov
or
mov
cld
or
lods
sarb
sarb
jl
sub
out
inc
mov
push
xor
or
pop
or
iret
fisubrl
insb
and
jle
jg
jb
scas
mov
loopne
dec
cmp
pop
cmp
sub
jae
cld
push
out
dec
ret
adc
fisubl
pop
test
push
data16
cli
cmp
mov
cld
mov
fadd
add
outsb
imul
cmc
adc
cltd
xor
lret
sbb
xchg
lahf
mov
arpl
add
sbb
xor
pop
dec
leave
cs
jne
ljmp
imul
js,pt
inc
imul
lcall
xor
mov
xchg
insb
adc
out
fcomp
add
add
repnz
jecxz
stos
push
mov
inc
xor
dec
in
pop
add
pop
cmp
fbstp
or
icebp
inc
pusha
stos
sbb
jge
outsl
adc
add
out
mov
shll
out
jp
mov
ja
mov
repnz
mov
roll
or
lahf
js
cwtl
mov
xchg
pop
inc
mov
scas
mov
xor
addr16
ffree
bound
dec
pop
loopne
sbb
and
push
mov
in
stc
pop
pop
std
cltd
inc
sti
cs
lock
cmp
jmp
cmp
out
movsb
cwtl
loop
leave
mov
cmp
std
scas
add
lea
loop
xor
fidivs
insb
mov
loop
xor
cmc
repnz
outsl
pop
or
imul
cmp
les
xchg
mov
fidivl
push
adc
gs
sbb
lcall
push
xor
leave
lods
in
inc
out
aaa
xor
imul
jle
sbb
mov
in
pop
pop
add
dec
repz
mov
dec
push
fs
paddsw
and
inc
xchg
sbb
cmp
push
int
in
ror
in
notl
mov
rorl
les
adc
jnp
in
push
xchg
sarb
lahf
add
pop
mov
add
mov
imul
and
cmp
shll
cld
sbb
and
pushf
imul
outsl
movsl
fsubr
pop
movsb
jl
shll
scas
sbb
int
scas
leave
or
pop
repnz
mov
mov
push
mov
movsl
lcall
mov
sub
in
aam
adc
xor
sub
iret
enter
mov
mov
inc
sahf
inc
push
test
sbbb
or
loopne
cltd
push
cmp
sbb
and
das
push
dec
lea
and
jne
mov
pop
pop
and
sbb
or
imul
mov
fisubrl
fnsetpm(287
push
imul
mov
loope
mov
xlat
loopne
sbb
imul
and
sbb
sbb
xor
in
sbb
jmp
push
mov
mov
mov
mov
sti
sub
into
out
scas
cmpsl
xor
adc
cmpsb
xor
xchg
call
fwait
in
dec
xchg
xor
mov
jp
stos
push
push
orl
sbb
and
ss
push
aaa
xchg
jne
push
outsb
sbb
xor
push
pusha
ret
add
sahf
adc
xor
rcll
sbb
cmpsb
xor
in
mov
stos
cli
cmpl
lret
ret
sti
sub
sub
lahf
fbld
and
jl
cmpsl
xchg
daa
aad
adc
stos
jns
sbb
sub
jmp
cvtps2pd
lret
ret
ja
sbbl
mov
sbb
cmp
hlt
stc
xor
xor
and
or
int3
cmc
adc
orb
std
jle
imul
sarl
jae
mov
sub
hlt
dec
jb
mov
enter
and
cmp
repz
inc
sub
mov
negl
sbb
and
stc
mov
lahf
xchg
or
xor
inc
mov
sbb
add
sbb
add
xlat
pop
xchg
inc
mov
loope
addr16
cmp
or
aaa
pop
sbb
jmp
sbb
dec
dec
push
sbb
std
repz
lret
lock
xor
in
maxps
andl
je
insb
outsb
jb
sub
pop
sbb
jp
mov
and
mov
push
pop
mov
pop
std
aas
icebp
imul
jb
push
rcrb
push
add
pushf
movsb
push
daa
jo
xor
lods
adc
les
xor
mov
clc
test
aam
xchg
fildl
or
aam
pop
xor
scas
std
sbb
sti
shrb
lret
inc
xchg
mov
cld
psubb
jne
outsb
sub
inc
clc
nop
je
add
fwait
or
mov
repnz
xorl
mov
cmp
adc
ficoms
inc
sbb
icebp
out
cmp
scas
aas
daa
pop
shrb
pop
les
push
es
in
cmp
pop
dec
cmpsb
xchg
xchg
loop
mov
mov
imul
mov
inc
sahf
repnz
and
xchg
sbb
aas
ljmp
rcr
hlt
arpl
sub
and
add
les
mov
repz
clc
fcmovne
dec
pop
aam
inc
popf
xchg
jl
dec
sbb
icebp
pushf
mov
adc
in
xor
xor
mov
push
out
test
cli
cmpsl
ss
xchg
pop
or
aad
inc
pop
dec
idivb
xchg
and
in
sub
popa
dec
xchg
in
and
int
hlt
jmp
cmp
lds
xlat
dec
mov
jp
stos
stos
push
js
insb
imul
scas
in
in
test
jle
sub
lret
in
cmp
jecxz
pop
cmp
imul
pop
cs
jne
or
xor
xchg
insb
daa
fsub
lods
mov
lods
int3
daa
ss
jp
mov
adc
out
xor
in
cmp
data16
add
dec
stc
inc
pop
test
mov
push
movl
adc
pop
push
inc
call
xor
inc
data16
add
dec
xor
xor
adc
jecxz
and
xchg
dec
sub
movsb
mov
sti
sbb
mov
cs
mov
adc
call
lods
cmp
ds
subb
sbb
mov
jne
sbb
lock
cwtl
jecxz
call
cmp
pop
sub
sbb
test
or
mov
ja
into
sarb
inc
addr16
jmp
ret
and
imul
test
clc
xor
pop
xchg
and
adc
lcall
xor
mov
imul
std
xor
mov
sub
cs
imul
xchg
mov
or
stos
jns
cmp
and
and
sbb
das
cmp
sbb
rclb
lods
adc
mov
out
push
fstpt
cwtl
fadd
mov
push
mov
inc
cmp
jp
loopne
pop
nop/reserved
movsb
mov
bound
in
test
xor
jl
sub
pushf
push
xchg
mov
imul
xor
sti
xchg
lds
push
mov
scas
popf
mov
sbb
es
pop
inc
mov
push
dec
mov
sbb
mov
std
test
cmp
ss
jbe
dec
cltd
sub
sub
push
xchg
jae
and
sbb
enter
cmp
push
int3
pushf
sbb
xchg
sub
and
inc
or
mov
out
addr16
push
ds
push
mov
sub
push
ja
push
stos
xor
mov
mov
mov
xor
into
inc
mov
sub
jmp
outsl
mov
pushf
sbb
lcall
inc
out
daa
cmp
sub
movsl
test
lods
or
xchg
lock
int3
pop
ds
jno
cli
push
sub
stos
lea
in
lds
cmp
fs
fmull
mov
aad
and
mov
xorb
mov
cmp
fimull
out
dec
pop
xchg
lcall
adc
xchg
xor
mov
decl
cmpsl
jae
sahf
scas
stc
jae
pop
jp
pushf
pushf
insb
test
daa
mov
sbb
in
mov
mov
adc
imul
mov
es
lea
popf
sbb
or
cmp
test
stc
mov
jl
mov
test
push
cmp
fadds
cmp
mov
and
nop
imul
xor
or
dec
adc
xor
imul
outsb
fildl
dec
jo
push
inc
sbb
jno
ret
jl
xchg
lcall
test
scas
scas
dec
cmp
and
mov
stos
imul
mov
mov
pop
testb
push
pop
xor
sub
lods
sub
adc
mov
stc
xchg
scas
mov
sbb
dec
lahf
pop
cmp
jp
imul
pop
sarb
pop
stos
mov
scas
mov
xor
inc
imul
lods
popf
ljmp
mov
sbb
cld
mov
add
sbb
mov
and
xchg
mov
mov
mov
imul
test
enter
lock
xor
jmp
ret
inc
repnz
cmp
mov
imul
mov
jbe
sti
rol
cmpsl
pop
nop
imul
negl
and
sub
cmpsb
or
and
stos
sbb
mov
insb
xor
int3
movsb
jmp
bnd
leave
mov
inc
ja
int
push
add
dec
mov
hlt
jbe
aad
insb
pop
adc
mov
pop
dec
lahf
pop
and
out
sbb
xor
in
sub
and
imul
xor
and
mov
cmp
imul
imul
xor
mov
jl
lret
test
pop
cmc
cld
inc
push
mov
mov
mov
out
jg
pusha
aam
adc
loop
mov
imul
mov
insl
mov
lret
mov
add
sub
mov
mov
jmp
mov
lods
fistps
push
inc
ja
sub
dec
ror
insb
gs
sbb
imul
ss
stc
shll
hlt
dec
mov
adc
dec
xchg
jae
mov
in
popf
mov
loope
xor
insb
jne
mov
pop
cld
call
adc
cltd
test
lds
xlat
pop
mov
lods
sbb
cli
sahf
and
cmpsb
xor
fprem
out
lods
ljmp
arpl
stos
or
out
test
fisubl
loopne
es
aam
add
pop
fldt
repz
daa
mov
mov
jecxz
hlt
jp
and
push
imul
daa
push
dec
setns
and
sahf
inc
jbe
jno
lods
cmc
cmpsb
out
cmpsl
inc
xor
cmp
shrl
xchg
jp
stos
cmp
mov
stos
mov
rclb
sar
mov
movsl
lds
cld
int
pushf
and
ljmp
add
pop
add
test
cli
and
daa
inc
gs
push
cmp
or
rcrb
int
mov
mov
xor
push
sbb
mov
sbb
shl
jl
sbb
stc
inc
jno
adc
pop
push
ret
pusha
das
or
pop
out
jge
inc
sbb
jbe
insb
sbb
hlt
xor
jmp
inc
cld
imul
dec
and
xrelease
pop
cmp
cmp
mov
mov
mov
int
xor
hlt
imul
imul
arpl
out
push
sbb
call
pop
cmp
out
ja
dec
push
mov
jmp
xchg
xchg
jecxz
xchg
stc
into
loopne
push
add
ficompl
add
test
lods
xchg
ret
fsubrs
mov
xchg
out
xlat
repz
aaa
push
es
jno
cmp
inc
movsb
lds
mov
xlat
inc
sub
push
inc
pop
push
sarl
and
mov
sbb
push
dec
jge
fisttpll
pop
xchg
pop
sub
imul
enter
in
push
scas
call
push
mov
sub
imul
sahf
arpl
xchg
out
sti
push
lea
adcb
xchg
mov
xchg
movsl
loop
mov
sbb
repz
out
mov
repnz
lret
es
add
pop
adc
out
shrl
fisubs
gs
setle
imul
xor
add
cld
call
pop
arpl
adc
cwtl
sysexit
subl
or
inc
data16
sub
shlb
in
aas
cld
pop
sti
stc
insb
pop
push
bound
push
lcall
push
adc
sbb
mov
adc
outsl
sub
shll
fstpt
mov
fidivrs
bound
adc
pop
inc
mov
cltd
mov
dec
je
sti
sbb
cmp
mov
and
cmp
mov
imul
cmpsb
fwait
imul
pop
lret
in
fisubs
mov
adc
dec
orb
aas
sub
ss
mov
and
fucomi
in
sti
pop
pop
inc
sub
cmpsl
pop
sahf
push
fstl
mov
sub
imul
push
and
fwait
xchg
sbb
je
clc
or
inc
jmp
pop
and
aas
sahf
mov
xor
mov
sub
mov
inc
mov
sub
test
addb
repz
xchg
push
pushw
les
lea
push
cmp
mov
imul
and
jmp
jns
lahf
into
and
xor
cmp
arpl
cld
pop
xchg
lods
stos
push
sbb
mov
xor
sub
jl
aas
xchg
pop
in
repnz
and
sbb
or
imul
cmc
lea
inc
adc
adc
inc
fisubl
jns
dec
outsb
pop
cmp
jno
or
cmp
mov
es
daa
sub
insb
cmp
aam
xor
pop
call
das
or
out
sub
sbb
mov
imul
hlt
and
inc
mov
mov
imul
out
and
pop
or
cld
cmpsl
mov
loop
mov
xor
int3
cmpsb
sbb
sub
sub
dec
cwtl
sahf
sub
mov
fbld
mov
sub
xchg
aaa
das
cmp
fdivs
sti
fwait
imul
dec
cld
jg
pop
xchg
cwtl
mov
loopne
pop
mov
pop
add
sub
ja
imul
aaa
icebp
mov
xor
cs
sbb
add
repnz
sub
xor
xor
push
sub
cmpsl
or
or
jl
test
mov
int3
sti
dec
xor
pop
lds
imul
mov
insb
js
cmp
dec
out
lret
das
imul
adc
add
lret
fcompl
sbb
lds
enter
mov
xor
sbb
mov
or
mov
and
cwtl
das
xor
sub
mov
add
mov
xor
inc
dec
mov
xor
jg
push
sbb
insb
cltd
call
out
sahf
mov
out
arpl
popa
cmp
frstor
sbb
inc
hlt
dec
jno
pop
add
adc
je
push
mul
cltd
xor
xor
daa
fistpl
push
pop
imul
mov
cmp
jne
imul
cmp
scas
add
xchg
lods
arpl
push
cmp
dec
mov
movsb
adc
mov
cmp
jl
mov
xor
xchg
shlb
stos
movsl
sub
in
dec
xchg
dec
cmp
mov
push
push
mov
ljmp
sbb
cmpsl
mov
fwait
insb
rcll
pop
mov
xchg
cmp
lahf
test
mov
lret
or
emms
imul
pop
js
xor
xor
jl
dec
dec
enter
mov
pop
cmp
imul
add
pop
sarl
dec
fimull
gs
mov
mov
enter
lahf
mov
cmp
pop
stc
hlt
sarb
xor
or
cmp
cld
sti
in
stc
or
inc
in
jmp
add
into
dec
sbb
mov
aaa
sbb
cmp
pushf
int
cmp
dec
dec
dec
lcall
vmread
adc
xor
and
imul
and
inc
cld
fisubl
push
xchg
inc
cld
or
outsb
mov
xchg
jne
sub
outsl
stc
dec
or
cltd
pop
jl
mov
dec
jl
xor
pushl
loop
jae
lock
les
xor
add
cli
movsb
fstpl
cld
fs
lcall
jnp
lods
pushl
adc
cld
stos
xor
pop
movsl
addr16
inc
xchg
clc
rolb
bound
push
xor
loopne
mov
divl
hlt
es
jns
xchg
repnz
cmc
dec
cltd
or
je
xor
dec
sarb
mov
stos
or
cmp
mov
adc
pop
rcrb
sub
clc
cmp
cltd
adc
cld
daa
push
test
popf
adcl
jl
cwtl
les
aaa
aaa
lret
xor
fndisi(8087
or
pop
cmp
cwtl
adc
cld
in
fdivrl
out
repnz
sbb
subb
sti
inc
mov
ljmp
fwait
aaa
sub
or
dec
mov
cwtl
shl
dec
cmp
push
lock
cmp
out
cmp
cmp
pop
xchg
rcrl
sub
sbb
das
testb
addr16
xor
mov
sbb
cld
mov
xor
or
inc
mul
xor
mov
adc
sub
inc
movsb
xor
mov
inc
icebp
es
dec
je
mov
fbstp
push
cmp
jge
cmp
xchg
cmc
fisubrs
pop
xchg
sub
mov
loope
pop
vpmacsdql
mov
mov
push
pushf
leave
iret
mov
int3
mov
mov
push
xchg
imul
jo
xor
hlt
or
mov
rcrb
daa
imul
sub
ljmp
repnz
sub
lret
in
out
sbb
mov
ret
xchg
sbb
mov
shll
push
sbb
sbb
xor
sbb
push
je
cmp
adc
insb
sub
or
adc
pop
fwait
repz
cmc
cltd
je
sahf
iret
and
sub
lcall
mov
mov
jo
fbld
jnp
ljmp
adcb
sub
int3
sahf
sub
sub
dec
jae
icebp
mov
push
aam
mov
mov
mov
lea
cmpl
test
les
xor
adc
repnz
repz
daa
jle
inc
addr16
nop
sbb
xchg
jae
cmp
xchg
jg
or
jae
dec
mov
popa
sub
xor
mov
jl
xchg
sub
in
out
sub
dec
loop
adc
imul
pop
add
jl
xor
enter
pop
imul
test
or
loope
cmp
push
mov
mov
mov
repnz
or
insb
xlat
or
arpl
xor
push
inc
sub
cld
and
push
sbb
roll
stos
or
mov
pop
jns
cmp
or
outsb
lgs
rcl
cmpsl
sub
mov
cmp
mov
sub
rcll
cmp
adc
cmp
cmp
mov
mov
arpl
push
cmc
je
xchg
inc
leave
push
movsl
sub
in
fwait
stos
addl
ss
sbb
shll
mov
xor
in
outsb
cli
cmp
sbb
sub
popf
mov
enter
mov
xchg
xor
stos
adc
cmp
ret
jns
and
mov
mov
adc
push
lea
movsl
in
jl
sarb
mov
xor
mov
cld
pop
mov
das
mov
clc
jb
xor
cmp
sahf
jecxz
inc
inc
jmp
mov
xchg
nop
mov
adc
push
sysenter
cmp
jp
mov
inc
adc
xor
je
mov
mov
or
cwtl
pop
add
mov
and
sbb
push
fcmovnu
cmp
arpl
out
jl
or
sub
cmp
jno
stos
mov
pop
xchg
jle
mov
adc
push
jo
xor
and
cmp
cmp
mov
ds
ret
cmp
hlt
and
and
loop
xor
fsubl
sbb
jl
sarl
mov
cmp
loope
jb
stos
subl
outsb
sbb
xor
loop
push
mov
xor
mov
addr16
in
dec
cmp
mov
pop
cli
add
sub
cmp
jecxz
push
cmc
cmp
lods
jbe
sub
sti
add
xchg
cmpsb
cmp
out
sbb
shll
push
mov
mov
lahf
movsl
sbb
sbb
pop
sbb
int
out
popf
add
addl
jno
or
lods
cmp
repz
cmp
or
push
xor
adc
orb
pop
and
ljmp
push
cmp
mov
sbb
and
cltd
movsb
jecxz
xchg
cmp
jle
lea
jno
mov
mov
add
lahf
push
test
pop
mov
pop
out
push
fmull
jecxz
cmp
mov
pusha
jns
lods
lds
cmp
fs
cmp
adc
lea
adc
cmp
outsl
les
je
xorb
loop
sti
cmp
repz
aad
sub
gs
adc
cmp
test
ljmp
adc
mov
xchg
xchg
bound
cmp
dec
inc
cmp
push
fwait
pop
mov
call
fdivrs
mov
test
xchg
test
mov
das
cmp
pushl
mov
shrb
sahf
jns
cwtl
lret
pop
mov
cmp
cmpsb
jne
inc
mov
lods
cmp
int3
sbb
lcall
push
push
pop
xchg
pop
cmp
das
mov
dec
daa
jae
sbb
pop
inc
adc
sbb
jo
fucomp
cmp
lods
jg
inc
hlt
jmp
cmp
and
rcll
test
push
cmp
push
lods
pinsrw
faddl
pop
fisubs
pop
test
mov
lock
mov
cmp
lods
push
mov
out
cmp
aaa
in
cmp
outsl
mov
scas
mov
addl
popf
sub
ja
sbb
xchg
outsb
jp
add
scas
mov
mov
mov
insb
cli
cmpb
push
mov
in
jo
pop
push
pop
imull
lahf
out
and
jbe
lods
mov
pop
push
mov
icebp
push
mov
cmp
pop
fdivrp
cmp
and
idivb
dec
xchg
loop
in
sbb
mov
lret
cmp
incl
sbb
mov
mov
mov
cmp
mov
adcb
lds
sbb
int3
es
xchg
repz
cli
fisttpll
mov
mov
xchg
xchg
cmp
js
daa
dec
jnp
jge
cmp
jno
mov
and
std
cmpb
pop
mov
pop
sub
push
mov
sahf
lret
add
lcall
jne
xchg
sub
sub
sarb
add
cmp
or
bnd
cmp
imul
sbb
mov
cmp
adc
cmp
ljmp
cmp
pop
mulb
or
mov
cmp
add
into
cmp
dec
push
and
es
dec
sbb
flds
sbb
xchg
adc
pop
movsb
push
cwtl
mov
push
cmp
icebp
add
sub
hlt
cmp
scas
shrl
sbb
out
cmp
push
inc
mov
cld
pop
arpl
cmpsl
mov
adcl
jo
jg
sub
and
push
and
adc
insb
push
jae
xor
mov
sbb
clc
xchg
xchg
cmp
cmp
out
aaa
push
cltd
dec
add
mov
pop
jge
cmp
loope
clc
les
lods
push
dec
mov
mov
cmp
add
out
mov
and
cmp
sbb
pop
sbb
bound
mov
cld
sbb
inc
outsb
loopne
mov
shll
sbb
mov
fisubl
cmp
lods
push
outsl
cmp
mov
insb
clc
cmp
in
push
cwtl
lock
dec
hlt
cmp
lock
fstpt
js
stos
repz
imul
and
or
xchg
hlt
cmpsl
dec
aam
xor
inc
cld
sbb
xchg
mov
dec
out
insb
cmp
repz
cmp
or
or
lods
dec
test
ficoms
mov
insl
sbb
inc
inc
movsb
cmc
das
jg
ds
xor
scas
das
dec
repnz
pushf
sub
cmp
cmp
movsb
pop
sarb
int3
outsl
icebp
mov
sbb
lcall
cmp
js
movsb
cmp
xchg
imul
mov
jle
cmp
test
int3
xlat
inc
jl
pop
sub
cmp
negb
cmp
cwtl
mov
loopne
xchg
mov
cmp
xchg
sbb
mov
fsubl
cmp
imulb
jbe
mov
dec
outsl
cmp
mov
jp
ds
xor
lret
ja
lock
call
mov
bound
xchg
sbb
shlb
hlt
hlt
hlt
push
cmp
fldcw
push
imul
add
jmp
in
fcoml
push
cmp
roll
ret
mov
movsl
call
mov
insb
jge
in
inc
xchg
mov
inc
sahf
out
adc
dec
inc
lods
out
xor
das
mov
cwtl
xor
mov
inc
jg
je
hlt
hlt
cmp
cmp
pop
jno
out
jp
fxtract
sbb
or
mov
sbbl
and
stos
push
test
xchg
mov
and
cwtl
daa
mov
and
mov
int
dec
mov
xor
add
insl
mov
orb
cmp
popf
adc
mov
gs
pop
sbb
cmp
cmp
pop
mov
test
arpl
mov
cltd
popa
pop
xchg
aad
cmp
xchg
arpl
fsub
cmp
mov
adc
sub
xor
loopne
dec
lods
lock
outsl
xchg
pop
stos
andb
add
push
xor
push
out
pop
xor
mov
pop
jp
cmp
lods
jno
aaa
cmp
or
push
push
or
dec
out
xor
enter
sbb
sbb
imul
jl
addb
add
sub
mov
mov
dec
jle
aad
popa
push
in
jmp
inc
sbb
cld
xchg
mov
pop
lock
xor
hlt
cmpsb
das
jnp
lret
jle
and
cmp
dec
sub
pop
das
mov
popa
add
pop
lret
cmp
mov
pop
sbb
xor
in
hlt
fwait
adc
sbb
add
hlt
cmp
pop
loopne
clc
hlt
sbb
dec
cmp
cmp
mov
adc
out
xchg
popa
push
int3
inc
sbb
loopne
mov
push
pusha
push
test
scas
mov
lahf
repz
push
ja
movsb
dec
hlt
cmp
fwait
popf
dec
cmp
gs
inc
pop
sbb
xchg
daa
or
or
mov
ret
push
pop
mov
test
sbb
or
test
mov
mov
movsb
test
dec
adc
sbb
pop
sahf
cmc
mov
bound
cmp
push
test
jbe
jg
cmp
lods
dec
outsl
into
pop
sti
idivl
subb
or
stc
sub
cld
sbb
sub
xchg
lea
cmp
dec
cmp
push
mov
test
jns
mov
ss
and
and
mov
pop
lods
lret
sbb
out
cmpsb
sub
in
call
and
dec
cmp
fmul
pop
call
or
mov
cmpsb
das
xchg
mov
addr16
push
test
dec
out
cmp
mov
mov
xchg
sub
sbb
rorl
xor
dec
test
aaa
mov
in
and
aam
rorb
cmp
dec
stos
jno
sub
mov
jl
xchg
cmpb
adc
lock
xor
test
and
sbb
cmp
cmc
cld
push
fnsave
cmp
stos
in
stos
mov
mov
jg
adc
repnz
mov
dec
into
xchg
outsl
xchg
jnp
js
movsb
dec
sbb
xorl
jo
cmp
and
cmp
bound
les
add
in
mov
fs
mov
xchg
in
xor
cmp
pop
lahf
add
aam
mov
sbb
lock
mov
mov
sar
enter
sbb
pop
inc
sahf
stc
push
mov
adc
scas
lods
cmpsb
cmp
test
mov
mov
lahf
jg
cmp
fnstcw
adc
and
ja
out
lea
sub
xor
sbb
xor
mov
cmp
nop
les
dec
mov
data16
cmp
stos
repz
mov
cmp
add
pushl
pop
cld
cmp
cmp
daa
pop
repz
adc
aaa
sbb
add
cld
je
popf
cli
imul
xchg
jle
fistpl
inc
push
lret
aaa
fcomps
xor
mov
xor
xor
call
dec
fdivrs
fidivrl
mov
movsl
das
movsb
loop
aad
pop
into
mov
add
add
and
add
idivb
and
xor
mov
push
inc
sti
mov
imul
and
and
pop
mov
mov
insb
in
mov
or
in
xchg
lret
and
aam
mov
mov
jae
outsl
mov
fstpl
push
lock
ret
pop
sbb
aam
sbb
int3
xchg
lret
and
mov
fdivs
imul
sti
sti
fcompl
int
shll
pop
sub
jbe
repz
and
and
insb
lret
and
lret
mov
cmc
mov
xchg
shlb
cld
mov
fdivl
aas
sti
xor
lret
xor
fbld
mov
ds
das
aam
shl
sbb
int3
xchg
fidivrl
notb
push
fsubs
test
push
aam
jo
dec
sarb
dec
stos
push
lret
enter
pushf
mov
or
lods
fiaddl
fdivrs
adc
pushf
add
push
loope
adc
decb
cmc
mov
out
jl
arpl
fisubrl
xor
pusha
lret
imul
pop
add
cmp
fisubl
aam
lret
std
andb
mov
ljmp
jl
inc
shlb
into
int3
enter
push
inc
sti
ds
in
ret
xor
sbb
int3
int3
add
or
fstpt
cmc
fadds
in
adc
into
adc
out
cs
lret
push
enter
les
add
jb
push
mov
sbb
nop
fsubrl
fidivl
fcomps
sti
aas
cmp
pop
jl
and
enter
lret
popa
insb
aaa
sub
ret
mov
sbb
fisubrl
dec
fmul
aam
enter
shrb
and
hlt
sbb
mov
into
sub
les
fldt
push
cmpsl
add
test
push
sarb
into
pop
pushf
add
fadd
hlt
ret
mov
xchg
lods
arpl
je
in
pop
fsubrs
and
imul
cmp
rclb
ret
fwait
movsl
mov
cmp
repz
aad
arpl
jae
lret
and
into
stc
sahf
pop
jne
lret
mov
clc
in
repnz
pop
sbb
mov
aam
shlb
test
xchg
arpl
es
and
lret
leave
les
lods
adc
mov
movsb
ja
add
lret
mov
mov
or
pop
cmp
aaa
les
mov
mov
xchg
or
les
ret
mov
cmp
inc
lret
movb
mov
mov
pop
fidivrl
cld
sbb
repnz
push
xchg
or
enter
popa
mov
sbb
mov
cld
fs
cmp
fisubl
out
fmul
shlb
and
repz
lret
mov
movsb
jl
xchg
sub
fdivrl
mov
ret
test
push
aam
repz
mov
rorb
jp
lods
sbb
int3
in
jae
imul
lret
lret
enter
pop
or
jae
imul
lret
and
and
fs
or
mov
fdivr
out
sbb
pop
aam
or
lret
enter
shl
into
outsl
sbb
int3
push
sbb
lea
pop
inc
push
xadd
mov
add
push
shrd
cmc
adc
push
seta
ror
cmc
bswap
push
rcr
shld
btr
mov
rol
sbb
shl
pusha
mov
shl
setns
mov
stc
xor
lea
jmp
lea
jb
bt
cmpb
pusha
pushf
jmp
je
mov
xchg
test
in
aam
jecxz
shrl
add
mov
jecxz
lret
ficomps
or
add
xchg
dec
adc
jmp
clc
into
jae
and
sub
dec
insl
mov
pop
lcall
fcompl
fmuls
rcl
jle
cmp
aaa
dec
imul
xor
xchg
sub
es
pop
dec
dec
imul
imul
lods
movsl
subb
pop
jb
movups
loop
inc
rcll
mov
inc
cmp
test
jmp
call
or
repnz
jb
loop
and
popa
dec
and
std
push
mov
andl
cli
push
cmp
push
lods
fs
out
in
jmp
mov
test
jge
push
je
inc
cli
xchg
sbb
mov
jbe
xor
in
movsl
subb
or
movups
dec
push
rolb
inc
cmp
lret
mov
in
fsubrp
and
outsb
jecxz
jmp
fmul
hlt
stc
and
test
push
sub
pop
xlat
adc
jl
iret
hlt
xchg
ret
mov
cli
inc
loop
add
dec
xchg
push
push
push
repnz
cmpsl
test
jecxz
mov
push
out
xor
repz
xor
mov
add
fisttps
in
ds
push
inc
enter
pop
xchg
das
popf
xlat
adcb
dec
dec
jp
dec
xor
xchg
sti
out
jbe
fs
add
cmpsl
sbb
pushf
mov
mov
lea
jb
bt
clc
cmp
cmp
pusha
pushf
lea
ja
clc
add
call
lea
jae
xchg
mov
jmp
mov
lea
je
mov
movzbw
mov
pusha
cwtl
movb
lahf
mov
cwtl
lea
jg
movsbw
push
lea
lea
jbe
push
pushf
movl
call
popf
cpuid
nop
push
mov
movl
pushf
jmp
movl
pusha
push
pusha
lea
jmp
push
push
jmp
xor
push
cmc
stc
ror
clc
cmc
add
jl
add
bt
cmc
rol
pushf
jmp
push
xchg
pop
jmp
push
or
imulb
sbb
leave
movsl
scas
inc
mov
test
jns
adc
jmp
bound
call
push
sahf
push
or
adc
push
cmpps
shll
std
stos
pushf
into
scas
dec
inc
or
fcomp
jle
jl
cmp
pop
je
inc
jno
mov
std
jo
sarb
and
xor
pop
inc
test
ret
pushf
jmp
jmp
push
jmp
xchg
jo
mov
mov
mov
pop
mov
xor
and
int
adc
mov
dec
sub
mov
enter
push
and
cmp
mov
stos
addr16
lea
insb
rcl
xchg
ljmp
fincstp
loope
jecxz
ret
mov
add
and
pop
movzbw
movl
not
lea
pushl
movl
pushf
jmp
cmp
lea
pushf
jmp
imul
rcr
cmp
mov
pop
mov
idivl
into
lret
clc
and
clc
inc
sub
loopne
pop
or
loopne
and
pop
iret
and
push
idivl
add
ret
jle
adc
cltd
loop
adc
inc
mov
cwtl
and
call
xor
jbe
xor
stc
dec
and
iret
mov
fs
in
stc
mov
insl
aam
and
bound
stos
sbbl
test
push
rcr
and
ss
cmp
jns
mov
repnz
sbb
rcll
rol
scas
aas
in
dec
xchg
pop
and
test
in
mov
or
adc
mov
xchg
push
cli
xor
pop
inc
loop
jns
fcompl
xchg
dec
inc
fcompl
jle
cmp
es
xor
inc
push
jecxz
push
and
iret
icebp
xchg
jmp
lds
loop
xchg
int
fwait
test
das
inc
cmp
mov
mov
inc
daa
mul
and
and
iret
and
xchg
ret
fwait
jbe
sub
js
pop
xchg
add
leave
rcll
ja
sbb
mov
cmp
mov
push
in
pop
insb
sub
rolb
imulb
dec
cli
jecxz
push
call
ret
lods
loop
pop
pop
iret
rol
inc
mov
out
lds
negl
pop
test
adc
or
or
dec
cmpsb
rcll
jns
lods
inc
in
mov
je
pop
dec
or
insb
je
fldcw
and
shrb
mov
adc
ret
cmp
dec
xorb
push
jbe
dec
sub
mov
cmpsb
inc
pop
sub
or
sbb
jg
fists
dec
pusha
scas
mov
jo
testl
and
rcll
jnp
xor
mov
mov
pop
dec
out
ljmp
sub
lea
je
bt
cmp
push
lea
je
push
pusha
lea
jmp
stc
pusha
mov
pushl
popl
stc
cmp
cmp
call
pushf
call
cmp
mov
sbb
js
dec
xor
mov
pop
cmp
pop
jge
inc
fs
xchg
popa
xchg
push
clc
inc
call
negl
jecxz
pop
faddl
dec
jle
push
cld
enter
hlt
ss
jne
cmp
jl
pop
jp
inc
in
cwtl
push
mov
push
or
aad
dec
push
fcompl
jl
aam
dec
xchg
xchg
outsb
push
inc
xchg
fistpl
push
out
cld
aad
rclb
test
incb
cwtl
xchg
lods
movsl
cltd
push
xor
enter
fiadds
aam
dec
push
fs
mov
inc
leave
jl
aam
xor
int
in
pop
sub
sub
in
andb
add
mov
lds
stos
add
lcall
cmpsb
or
inc
cmp
movsb
jecxz
dec
in
fadds
iret
add
jmp
cmp
leave
jle
nop
push
sbb
cmp
loop,pn
imul
int
cmpsl
adc
mov
lcall
push
aad
loopne
add
stc
ret
mov
insl
jb
cltd
mov
ret
mov
shl
lods
jno
pop
adc
push
imul
pop
jns
outsl
pop
jb
add
int
mov
aad
jno
inc
pop
mov
dec
pop
xchg
sbb
cmp
bound
nop
lods
mov
outsb
popf
or
aad
sti
jo
shl
sub
shlb
mov
ja
pop
aas
inc
dec
jae
stc
mov
jg
add
stos
pusha
insb
jb
pusha
mov
mov
sub
jns
out
cli
bound
sub
and
int3
inc
or
pop
dec
xor
jecxz
fisttpll
add
movups
inc
jle
insl
jecxz
popa
xor
pop
sub
ja
push
xor
pop
mov
or
dec
sbb
mov
jmp
gs
jecxz
push
push
pop
add
mov
mov
out
mov
jg
mov
movb
call
adcl
xor
inc
stc
movsb
fcomi
pop
fs
jbe
inc
xchg
out
popf
mov
je
aam
js
inc
fs
jae
scas
inc
data16
andl
jne
jns
ror
mov
mov
fcomps
iret
push
jge,pt
sub
popf
cs
pushf
lock
lahf
fld1
pop
rcl
or
aas
mov
fstpt
pushl
adcb
dec
fcoms
cmp
ljmp
mov
dec
cs
xchg
outsl
sub
cmp
jg
scas
icebp
insb
and
adc
cwtl
push
push
loope
sarb
mov
stc
mov
inc
inc
mov
sbb
jecxz
xor
push
add
imul
cli
jbe
push
je
add
jns
cmp
bndstx
ja
xacquire
or
push
sahf
dec
sub
fwait
in
lcall
sbb
adc
daa
sbb
pusha
add
sbb
cmp
and
fsubrl
add
not
lea
movzbw
lea
call
mov
sbb
push
imul
mov
test
loopne,pt
and
gs
dec
xorl
jl
jno
mov
add
sub
pop
inc
lea
rorl
sbb
cmp
jo
push
push
into
or
xor
or
xor
aam
pop
or
mov
and
push
mov
aad
pop
pushf
xchg
pop
xor
clc
aad
mov
aaa
add
mov
mov
mov
sub
dec
mov
push
seto
cmpsb
xor
subl
jnp
mov
filds
mov
sti
imul
into
mov
js
or
pop
das
lods
shlb
aas
mov
mov
xor
dec
jns
xchg
repz
xor
xor
ror
or
fldenv
mov
mov
and
ds
jmp
mov
adc
pop
dec
and
lea
jne
shrd
sbb
inc
mov
pushf
sub
shl
rcr
shl
lea
cmp
push
pushl
sub
cmp
lea
js
pushl
pushf
cmp
pusha
lea
ja
inc
sub
adc
add
sub
ror
or
xor
add
movsbl
sbb
bsr
sar
mov
xor
cmp
setl
not
mov
clc
cmc
repnz
push
call
lods
lock
je
dec
ret
sbb
adc
inc
fcoms
jae
push
mov
comiss
jbe
add
inc
or
mov
xchg
jns
insl
jno
sahf
push
in
mov
rcrl
insb
or
test
adcb
rcr
adc
cwtl
les
xor
sub
pop
std
popf
mov
fldt
aam
leave
mov
outsl
sub
sbb
icebp
dec
lods
jb
in
jns
push
aad
popa
lds
dec
sbb
fiadds
stc
call
pushf
lods
pop
mov
iret
out
xor
lock
xor
pop
and
fnstenv
dec
gs
inc
aad
sahf
lret
out
mov
aaa
xorl
sbb
ret
stc
cwtl
push
orl
lahf
daa
push
cmp
rcl
ret
add
popf
out
sub
adc
push
fcomps
idivb
pop
sbb
sub
dec
out
and
pop
arpl
iret
ficoms
sbb
insl
jmp
es
pop
fstl
add
or
lcall
add
xor
and
bound
clc
mov
or
jl,pn
lret
test
pop
add
mov
and
scas
cmp
cld
js
xchg
rcrb
sub
dec
add
test
aam
call
inc
test
aam
testb
addr16
lahf
sub
fadds
movsb
mov
cmp
hlt
mov
push
andl
adc
jb
addr16
jbe
mov
pop
dec
sub
pop
movb
lea
je
not
lea
lea
lea
lea
pusha
movsbl
movzwl
not
bswap
push
mov
lea
lea
bswap
bswap
pusha
mov
push
jmp
stc
cmp
or
pusha
jmp
cmc
xchg
vfrczpd
dec
lret
mov
lock
adc
out
jo
sub
pop
sbb
in
fwait
clc
xor
loope
insl
es
mov
lcall
ret
dec
sub
cmpl
pop
mov
jmp
enter
jnp
fsts
call
xchg
mov
iret
cltd
addr16
mov
test
inc
popa
sub
or
xor
mov
scas
fstl
jb
cli
scas
notb
les
push
repz
push
xor
mov
mov
jne
add
test
aad
lock
loop
adcb
stos
je
lds
xor
fidivrl
sbb
jecxz
ss
ret
bound
adc
sub
jbe
movsl
xorb
in
jg
adc
push
cwtl
pop
enter
loop
sbbb
adc
dec
mov
mov
pusha
inc
or
ss
movsb
mov
mov
and
jge
xchg
push
or
data16
sti
push
fnstenv
dec
pop
and
add
pop
ret
ss
out
adc
adc
shll
js
shrb
into
push
or
and
sbb
and
xor
scas
and
mov
pop
fdivrl
subl
jno
jno
outsl
aam
int3
jno
mov
add
iret
add
lea
call
pusha
mov
push
pushf
pusha
lea
jmp
pop
mov
lret
sub
jg
lahf
add
lret
sbb
push
adc
mov
decl
lock
or
mov
jl
sub
imul
cwtl
mov
testl
jmp
add
cmpsl
inc
sbb
lea
pushf
movl
jmp
call
pop
xchg
jp
mov
xor
and
mov
adc
cmp
push
hlt
mov
std
or
outsb
sbb
mov
mov
lret
push
sub
pusha
ss
scas
and
xchg
sbb
sub
fistps
popa
mov
insl
fs
in
rclb
repnz
repz
arpl
test
pushf
and
or
cmp
jmp
loop
rolb
dec
insl
jns
mov
mov
int3
add
adc
loope
xor
ja
fcomip
int
and
adc
jns
imul
add
sbb
jns
aas
and
movb
pop
pusha
mov
jmp
add
js
out
sub
popa
push
jecxz
xor
xchg
xchg
stos
jle
push
sbb
in
xchg
xchg
fcompl
test
mov
sub
dec
pop
es
dec
fsts
mov
push
sbb
dec
neg
pop
or
aas
shr
stos
cli
ds
xchg
outsl
mov
in
mov
gs
mov
inc
sarl
jmp
insl
adc
orl
fcompl
cmp
xor
imul
xchg
mov
addl
mov
out
call
jnp
lahf
push
rcrb
cmp
sub
and
dec
pop
jno
ja
idivb
dec
adc
mov
jmp
pop
pop
mov
sbb
xchg
adc
or
fadd
sub
inc
gs
jb
hlt
mov
cmp
xorl
scas
data16
inc
cmp
adc
pop
push
dec
mov
sarb
mov
sub
xor
xchg
leave
cs
das
test
xor
or
mov
aaa
imul
ljmp
adc
mov
in
push
dec
call
icebp
mov
fcmovb
clc
int3
cltd
ror
in
sbbl
pop
push
and
add
in
mov
sub
test
jp
jmp
rep
mov
cmc
sub
call
dec
jg
push
into
fcmovb
sub
cmp
xor
nop
pop
arpl
and
mov
repnz
adc
repz
cwtl
sbbl
jo
xor
push
pop
and
test
mov
pop
nop
hlt
shlb
inc
inc
cmp
push
pop
mov
stos
xchg
jge
int3
loop
cltd
shr
pop
mov
sti
movsb
sub
cmp
add
sbb
mov
and
ret
das
hlt
pushf
movb
push
movl
mov
lea
jmp
pushf
pushf
lea
ja
pusha
push
setle
jmp
sti
sarb
or
cmpsb
ret
pop
xchg
mov
outsl
xchg
das
xchg
inc
mov
cs
mov
cwtl
orb
fcoml
inc
adc
add
pop
xchg
xor
cmp
xchg
mov
lea
aad
or
fwait
scas
les
fisubl
insl
lods
scas
and
xor
push
inc
mov
in
dec
ss
leave
inc
mov
jbe
and
pop
push
push
mov
movsb
rorb
cmpb
add
bound
pushf
inc
inc
jg
push
mov
pop
push
sub
jmp
aas
push
mov
add
cmp
shl
lcall
adc
inc
in
nop
jnp
lahf
adc
fs
cld
dec
mov
inc
icebp
ret
addr16
cwtl
ja
push
and
das
dec
inc
fwait
ror
dec
lret
scas
bound
sbb
ds
dec
sbb
sbb
insb
mov
jo
sub
ljmp
outsl
lahf
rcl
pop
sbb
repz
int
sub
insl
pusha
mov
ss
in
loopne
adc
sahf
xchg
ret
mov
inc
sbb
add
pop
push
lods
mov
cmp
sbb
xor
in
loope
loopne
pop
rcrl
add
pop
addr16
fldl
jno
push
jnp
imul
lods
ret
cs
sti
les
inc
movsl
ret
mov
sub
je
idivl
fsubs
in
loope
add
and
push
fbld
in
loop
cmp
push
push
xchg
imul
popl
pusha
pushf
mov
mov
pushl
ret
movl
jmp
push
mov
movl
pusha
movl
pusha
pushf
push
lea
jmp
jne
jmp
pushl
popl
pushf
pushf
push
pushl
pushl
ret
jmp
cmpsl
test
sqrtps
cmp
in
push
cltd
mov
ja
jne
hlt
sub
sbbl
mov
popw
sbb
lret
and
pusha
orb
cmp
and
arpl
jae
mov
and
fs
mov
push
ret
std
inc
out
inc
mov
pop
push
pop
cmp
xor
sbb
mov
jbe
fs
sub
mov
push
push
dec
jle
faddl
insb
mov
outsl
xchg
jnp
push
mov
and
and
and
xchg
cmp
gs
inc
xchg
lret
call
fstl
sbb
pop
stos
push
adc
push
mov
lock
jae
les
cmp
push
and
pop
stos
add
inc
popf
jg
cmp
sub
pop
pop
aam
or
pop
and
lods
in
inc
xchg
imul
cmpl
pushf
push
sbb
movsb
push
push
xchg
les
xchg
test
aam
sub
cld
and
jbe
mov
lods
loop
adc
cmp
fcompl
xor
leave
pushf
push
sbb
repz
push
fidivs
out
ds
loope
mov
iret
test
test
outsb
jno
das
stc
mov
ret
aaa
push
xchg
sub
daa
cmp
or
cmpb
in
mov
sbb
push
in
out
call
sbb
aas
adc
pop
pop
dec
cmp
xchg
mov
pushf
movl
push
mov
pushl
popl
push
pushl
ret
mov
test
push
lea
add
and
nop
jge
push
stos
adc
push
in
inc
pop
cltd
cmp
mov
pop
test
push
add
adc
rol
adc
cmpl
insl
fstl
and
mov
mov
test
iret
arpl
mov
pop
pop
aaa
inc
xchg
addl
in
pusha
call
movl
xchg
pushf
jmp
pusha
movl
pusha
pushf
movl
pushl
push
movb
lea
jmp
lea
je
cmp
call
rolb
iret
mov
push
popf
orl
xchg
out
jb
fwait
addr16
arpl
inc
add
push
mov
cmp
jo
mov
in
sbb
cmp
pop
push
leave
insb
mov
push
and
mov
mov
adc
push
or
ret
movzbw
setbe
pop
jmp
pusha
lea
mov
pushl
call
lea
jb
jmp
movzbw
lea
test
setne
cmp
mov
push
bt
mov
ror
cmc
push
rol
push
shl
pushf
pusha
neg
mov
rcl
jmp
loop
mov
jbe
dec
pop
pop
out
outsl
mov
test
jo
imul
fmuls
ljmp
imul
mov
inc
cmp
jmp
lea
call
mov
push
pushl
movl
stc
cmpb
lea
jnp
pushf
lea
jne
shrd
adc
inc
sub
pusha
aam
mov
add
rol
or
add
or
add
and
mov
push
movb
jmp
add
inc
js
je
jb
arpl
jae
lret
iret
loopne
jns
test
jp
aas
xchg
scas
inc
ficoms
sarb
fdivr
mov
xor
sbb
flds
cmp
jmp
out
push
dec
push
jecxz
sub
ja
adc
test
mov
test
pop
pop
pop
lock
icebp
int3
mov
mov
cmpsb
dec
pop
mov
sub
out
xchg
push
test
lret
pop
lock
dec
pop
or
movsb
fwait
jae
sub
repz
lods
rol
aam
les
ljmp
inc
dec
mov
aam
nop
pop
sar
inc
xor
adc
cmp
ss
insl
pop
ret
or
arpl
aam
pop
xchg
jg
pusha
push
add
sub
jns
mov
push
jbe
push
xlat
xchg
mov
outsb
adcb
and
jne
add
imul
pop
pop
push
mov
xchg
jo
cmp
dec
xor
jmp
cmp
xchg
sub
push
add
or
xor
lret
sub
jbe
xchg
stc
pop
dec
out
das
loop
pop
mov
scas
pop
aaa
sbbl
adc
xlat
ret
mov
rorb
pop
cvtps2pi
jmp
stc
cmc
cmp
pushf
jmp
add
jle
cmp
jle
mov
inc
out
nop
mov
in
sub
mov
or
leave
aad
dec
lcall
into
fidivrl
fstpt
ljmp
popf
add
add
pop
les
pop
pop
clc
add
lea
ja
pusha
imul
movb
pusha
lea
jmp
bt
cmp
call
movl
push
mov
pusha
pushf
pushl
ret
inc
lea
setns
mov
inc
inc
sar
neg
xor
rol
xchg
inc
btc
not
mov
rcl
shr
mov
stc
jmp
push
mov
and
adcl
lea
mov
popf
inc
out
xchg
test
mov
shlb
fwait
aas
hlt
push
push
mov
or
or
cwtl
push
mov
fisttpll
and
lret
pop
int
push
enter
gs
adc
pop
nop
mov
mov
scas
sbb
mov
sub
cmp
sub
cltd
nop
sbb
mov
push
xchg
lret
pushf
xchg
mov
inc
lods
jmp
imul
ret
out
fs
jne
aad
mov
gs
lcall
mulb
adc
mov
movsl
lret
add
idivb
add
ljmp
call
loopne
je
adc
add
adc
fs
je
call
popf
mov
jle
mov
mov
jle
pop
imul
shrb
adc
fwait
ss
adc
lcall
rorb
lcall
ret
inc
js
jmp
dec
push
jmp
js
iret
add
jae
inc
pushf
push
mov
shrd
mov
stc
mov
jmp
dec
cmp
shr
lds
sbb
or
inc
push
enter
fwait
dec
add
arpl
cs
fisubrl
xchg
rcrb
adc
or
xchg
jg
push
sbb
mov
dec
sbb
subb
jbe
mov
mov
mov
pop
and
addl
insl
fcmovnb
xchg
fnstsw
sub
xchg
add
mov
lock
insb
add
sbb
in
jmp
push
pusha
lea
call
call
lea
lea
test
test
sub
stc
pushf
pushl
popl
pusha
cmp
push
pusha
lea
ja
rol
add
sar
sub
rol
xor
add
bsf
lea
btc
shl
mov
add
mov
stc
pushf
repnz
call
str
pusha
movl
pushf
movb
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
hlt
test
pop
and
test
arpl
pop
xor
cmp
jns
mov
pop
push
sbb
rcll
sub
sbb
sahf
clc
gs
es
test
loop
loope
mov
sub
jmp
js
jmp
push
data16
jmp
repz
pushf
jmp
jmp
dec
bt
call
not
adc
sar
clc
neg
setae
push
ror
dec
call
test
xor
clc
cmp
stc
or
push
jmp
pushf
dec
bt
shr
push
pushf
lea
je
pusha
push
adc
pushf
pushl
pushl
pushl
lea
jmp
push
pusha
movl
pushf
jmp
pop
pusha
mov
bswap
lea
call
mov
call
movl
pushf
movl
pusha
pushf
lea
jmp
pop
cld
popa
and
xlat
test
pop
or
pop
cmp
sahf
push
ret
jae
mov
xchg
mov
call
or
lahf
pusha
cmpsl
lcall
rorl
pushf
sbb
inc
mov
in
out
xor
or
xchg
int
frstor
add
pop
mov
jb
pusha
pushf
movl
jmp
pushf
lea
je
movsbl
bswap
seto
pusha
mov
bswap
pushf
pushl
pop
lea
pushl
mov
lahf
sete
mov
not
pushl
popl
not
cwtl
mov
movzbl
movl
bswap
pop
lea
jae
movsbw
lea
jmp
xor
sbb
mov
int
into
xchg
cmp
popf
lock
xchg
leave
xchg
push
lock
push
lods
push
imul
jmp
adc
or
jl
imul
adc
mov
sub
inc
xchg
fisttps
nop
fs
loop
mov
gs
sub
sub
mov
push
scas
or
fs
jecxz
or
roll
subb
insl
aaa
add
cmp
pop
rorb
xor
cmp
stos
push
outsb
test
cmpb
movl
sub
aam
dec
add
mov
test
addr16
lret
or
lret
call
psubq
lods
xor
movl
hlt
cmp
sub
test
sti
insb
mov
mov
bound
push
push
sbb
pushf
lahf
jbe
push
and
cld
sub
ret
dec
cmp
std
imul
scas
pop
xor
jnp
scas
aad
jg
lods
inc
mov
test
mov
dec
jmp
jp
mov
sub
jb
dec
in
ror
jb
outsb
mov
loope
rcr
cltd
in
rcr
jno
icebp
adc
xor
fisubrs
leave
rcrb
dec
out
xchg
jno
cwtl
mov
inc
or
test
lea
push
xor
in
xchg
xchg
inc
xchg
rep
push
mov
add
jl
jae
xchg
jl
mov
sbb
sbb
mov
imul
jp
pop
ja
outsl
push
or
cltd
mov
mov
and
push
ja
pop
sub
mov
lret
adc
cltd
adc
lret
fmull
enter
hlt
cld
in
int
or
push
inc
dec
adc
add
mov
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
pop
sub
jecxz
xchg
mov
push
cli
xor
sbb
mov
data16
rol
adc
dec
jmp
fisttpll
sbb
push
popa
or
dec
mov
jb
icebp
popa
cmp
aas
inc
ret
adc
sbbb
stc
pushf
repz
inc
sbb
dec
lret
fcmovb
popf
inc
outsl
cmp
mov
nop
xchg
jl
mov
insb
cmp
mov
mov
int
jno
mov
pop
daa
jae
outsl
mov
iret
loope
push
dec
xor
jl
arpl
pushl
add
xor
or
pop
adc
inc
outsl
adc
mov
xor
mov
in
push
mov
hlt
and
pop
xchg
mov
sbb
pop
and
lret
add
outsl
jg
popf
rdtsc
nop
pushf
pushf
call
cmp
push
clc
cmp
call
lea
ja
call
mov
movsbw
call
call
aam
filds
popf
nop
push
subl
fwait
cmp
insl
jo
loop
ret
cltd
sub
mov
cmp
or
and
cltd
pop
adc
sbb
jle
jmp
pop
adc
jp
fs
ja
shl
add
stc
add
cmc
shl
rcr
mov
clc
bt
bt
pushf
cmp
call
bswap
mov
pusha
mov
pushf
pushl
movw
push
mov
not
movzbl
mov
movsbl
pop
pushf
pushl
ret
nop
ja
std
push
xchg
or
cmp
xchg
orb
xor
fidivrl
xor
push
mov
mov
inc
stc
xchg
xlat
lds
pop
popf
jae
lock
mov
xchg
push
pop
xlat
stc
add
les
pop
gs
cmp
xchg
not
bswap
mov
push
clc
cmpb
push
lea
jne
lahf
sub
bswap
sub
mov
pusha
add
sar
shl
sub
ror
mov
jmp
sub
test
cmp
clc
bt
pushl
popl
cmp
cmp
pushf
pusha
pushf
lea
ja
add
or
sub
not
clc
add
not
jmp
call
mov
fadd
and
sub
jb
push
push
bound
movsb
push
std
cs
and
stos
or
dec
pushf
ret
cld
jle
inc
inc
push
imul
leave
mov
sti
clc
cmp
enter
gs
xchg
mov
fimull
aas
xor
add
iret
fwait
jns
loopne
mov
fsubrs
ret
add
xlat
jg
push
in
push
popf
ror
mov
icebp
scas
mov
jo
sub
in
repnz
sbb
inc
out
js
cmp
add
jns
out
lods
sbb
ss
lds
sbb
cmp
gs
push
fwait
mov
mov
mov
pushf
cwtl
sbbl
leave
push
fstpl
jp
push
clc
adc
and
mov
mov
sti
jbe
mov
jno
inc
mov
dec
mov
js
xsha256
cmpsb
adc
mov
jl
inc
mov
mov
mov
cld
loop
xchg
popf
sar
adc
loope
xchg
stos
cli
pushf
outsl
pop
pop
jp
add
inc
push
dec
aas
lea
add
xor
xchg
lahf
cmp
push
mov
and
sbb
lds
mov
call
sbb
or
jno
and
fistl
add
lret
jns
repnz
mov
rcr
push
and
enter
dec
test
push
xchg
sub
mov
push
pop
clc
lret
ret
into
mov
sub
xor
bound
xor
dec
fscale
orb
aam
inc
jmp
jnp
jecxz
jl
mov
adc
stc
and
inc
lret
mov
clc
mov
ljmp
repnz
ficomps
out
sbb
popa
sub
test
out
lods
or
outsl
lock
test
or
out
lretw
sbb
fnstsw
mov
or
cmpsl
mov
repz
out
in
test
cwtl
imulb
pusha
mov
and
mov
cltd
lret
andb
fisubrl
mov
int3
fwait
dec
add
dec
and
adc
out
orb
movb
sub
xor
dec
pop
add
add
add
fisttpl
pop
jno
orb
mov
loopne
mov
call
jge
cwtl
cltd
pop
sub
mov
push
adc
lds
xchg
inc
and
pusha
mov
add
popa
test
pop
stos
pop
rcll
movsl
aad
std
xchg
xchg
mov
sbb
fs
inc
enter
int
sbb
movsb
insb
out
xor
je
imul
mov
jle
cmovb
adc
mov
add
popf
or
pop
jl
and
adc
movsl
out
mov
orl
mov
push
and
pop
imul
cli
call
inc
cmp
push
lods
pusha
pop
loope
icebp
iret
sbbb
fisttpll
test
je
shrb
insb
imul
cmpsl
fnstcw
lret
scas
lcall
repz
subb
pavgw
outsb
test
xorb
in
in
add
das
add
or
imul
in
mov
lea
icebp
xchg
adc
addb
inc
pushf
test
stos
push
cmpsl
push
pushf
shlb
stos
testb
int
ljmp
je
jl
lds
ja
das
ds
fdivrs
add
and
popf
mov
mov
and
shrl
push
mov
jecxz
dec
lods
dec
add
pop
mov
cmp
pushf
mov
mov
add
lcall
add
jae
movsb
mov
popa
rorb
in
xor
jl
mov
sti
out
jle
cwtl
movlps
push
sbb
xchg
mov
mov
adc
pop
mov
mov
adc
popa
dec
ja
mov
push
dec
in
xor
fdiv
sbb
sahf
hlt
inc
adc
enter
mov
xchg
and
andl
push
mov
xchg
into
lock
dec
cmp
inc
aam
dec
and
lods
ret
jae
xor
and
lcall
mov
jbe
xchg
mov
jo
fcmovnu
cmp
scas
imul
dec
dec
mov
dec
aam
cmp
lock
hlt
int
xchg
or
jo
rorb
ret
decb
call
jp
push
addl
out
xor
mov
imul
inc
jo
aam
lea
jmp
jmp
add
sub
add
add
jno
add
add
add
dec
sbb
jp
sbb
dec
lret
adc
repz
add
add
add
bsr
mov
pushf
jmp
pushf
cmp
call
not
mov
lea
movzbl
bswap
movzbw
pop
push
not
push
mov
pushf
not
mov
jmp
jmp
mov
into
sbb
xchg
icebp
mov
or
and
dec
jae
mov
xchg
sbb
mov
fsubrs
pusha
inc
adc
imulb
xchg
stos
repnz
ret
cwtl
cwtl
add
shrl
cld
outsb
xchg
xchg
int3
insb
popf
jb
jle
or
inc
sub
jl
jg
mov
mov
clc
imul
sub
sbb
jns
sub
test
call
mov
in
shll
sbb
jno
arpl
iret
add
lret
and
pushl
movl
mov
push
push
lea
jmp
xor
or
lock
fs
mov
movsl
fwait
xchg
xchg
inc
loope
fldt
push
sbbl
ret
in
icebp
je
loopne
sub
mov
fwait
sbb
cmp
pop
sub
rcrl
pop
add
fwait
adc
mov
mov
push
add
in
daa
js
pusha
or
mov
mov
mov
jns
testl
jge
jecxz
test
test
sub
pusha
push
jae
pop
daa
sbb
popf
out
inc
cltd
fwait
movl
lcall
fistps
pop
insl
test
jle
insb
inc
lods
push
lock
lea
sbb
pushf
pop
aaa
icebp
arpl
cmp
sbb
add
insl
xlat
dec
and
shr
decl
into
mov
pop
bswap
mov
pusha
pushl
ret
push
call
lea
je
bt
add
push
cmp
pushf
cmp
cmp
jmp
movl
call
pushf
push
jmp
mov
inc
xchg
mov
mov
fistl
test
in
mov
jl
xchg
cli
jge
pop
xor
or
push
add
sbb
lret
loopne
jp
inc
mov
cmp
add
lds
push
cmpsl
cltd
add
in
and
mov
pushl
scas
test
cmp
ljmp
pop
ljmp
iret
jno
loop
sbbl
xchg
les
lret
and
mov
push
iret
add
jae
test
add
cmpl
pop
fs
ja
call
add
or
mov
inc
fldcw
add
fs
rol
loopne
cmp
leave
icebp
mov
rcll
jo
ljmp
negl
jno
pop
outsb
stos
mov
lods
sub
push
xchg
jo
and
cmp
imul
sbb
and
stos
fists
popf
das
loop
sahf
sbb
sti
or
aam
xlat
and
pop
xor
fbld
xchg
cmp
bound
jo
and
lret
sti
fstl
pop
sti
mov
adc
jecxz
mov
xor
popa
jecxz
mov
fdivl
cld
int
in
pop
sbb
je
sbb
test
mov
outsl
call
lods
js
out
call
dec
pop
cwtl
nop
cli
xlat
cmp
pop
xchg
mov
in
jmp
jb
inc
clc
jno
dec
xchg
or
adc
mov
movsl
sbbb
clc
mov
in
gs
and
mov
bnd
adc
bnd
xchg
js
mov
fmuls
mov
lods
aas
xchg
clc
sbb
rol
jmp
fldcw
sar
movsl
pop
lock
mov
pop
repz
lcall
lods
imul
pusha
arpl
std
xchg
cmpsl
pusha
sub
sub
lock
enter
fildl
cwtl
mov
pop
jo
pop
mov
push
loop
scas
ret
mov
in
data16
jmp
call
xor
and
mov
js
sub
je
cmp
sbb
or
fimuls
stos
lods
add
out
insb
jae
std
inc
fdivs
leave
sbb
and
cmpl
mov
test
icebp
leave
cmp
and
cmp
push
lea
pop
clc
call
fistps
xchg
rol
ss
int
or
cld
pop
fidivl
jo
sbb
lods
cmp
pushf
clc
test
not
test
cmc
neg
clc
call
movl
pushf
lea
jmp
lea
jne
or
add
mov
test
add
test
stc
movzwl
bswap
xor
mov
bt
add
cmp
mov
clc
clc
stc
test
push
pushf
push
jmp
scas
cmp
adc
pop
mov
jle
lea
jb
push
pop
repnz
sbb
jmp
cs
stos
dec
rorb
ds
xchg
fisttpl
mov
fcoms
sbb
sahf
loopne
or
out
popf
sub
fidivl
idiv
repnz
xor
je
cmpsl
jb
xlat
push
jo
rcrl
iret
xchg
xchg
clc
daa
int
in
adc
scas
push
push
push
movsb
dec
jns
push
sbb
xlat
or
ljmp
adcb
movlps
stc
icebp
sub
sbb
add
pop
jno
mov
stc
cmp
pushf
jmp
pushf
jmp
add
add
jecxz
das
jp
cmpl
insb
jae
push
iret
adc
pop
test
fidivs
sti
or
push
mov
shrb
fyl2x
mov
cmp
incl
xor
add
jge
aam
clc
cmp
and
add
insl
fisttpll
or
leave
push
push
fcoml
aaa
bound
pop
and
mov
or
scas
xor
xchg
int
lcall
outsb
cmp
jecxz
push
hlt
lea
pop
jnp
lea
sbb
dec
daa
inc
movsb
test
cli
scas
idiv
and
dec
icebp
loop
cwtl
add
mov
or
adc
ja
xchg
test
mov
movlps
inc
pop
push
xor
sub
popf
and
repz
mov
movzbw
shld
and
shl
sub
call
sbb
inc
dec
pop
lds
sbbl
cmp
cli
imul
xchg
or
cs
jne
loope
xor
xchg
mov
out
jbe
mov
mov
pop
clc
in
xchg
xor
addl
gs
stos
mov
xor
mov
mov
sbb
adc
sub
xlat
add
inc
mov
xchg
dec
push
pop
push
or
sub
or
inc
cmp
insl
mov
jp
and
mov
jo
adc
sub
fs
rol
lods
mov
sahf
pop
adc
fisubrs
xor
cmp
lods
sub
fnsave
jae
ret
add
call
mov
movb
lea
jb
pushf
pushl
ret
movzbw
movb
call
call
pusha
cmc
pushl
or
mov
movb
lea
je
test
cmp
jmp
push
lock
std
std
test
xchg
outsb
imul
rorb
mov
pop
sahf
ss
push
in
pop
jge
imul
pop
and
aam
push
into
add
out
fldcw
adc
test
outsb
pop
xchg
loope
mov
inc
cmpsb
scas
arpl
xchg
push
mov
movsl
gs
push
enter
roll
xor
mov
bt
cmp
pushl
lea
jmp
cmc
jmp
pushf
cwtl
lea
push
jmp
add
push
add
mov
pop
add
jne
rep
lea
lea
not
mov
pusha
lea
jmp
pushl
popl
pusha
pushf
pushl
ret
lods
lock
lahf
arpl
push
xor
xor
push
leave
push
adc
push
xchg
sbb
and
mov
loopne
jb
or
test
ret
jns
insb
inc
cmpsl
push
inc
js
add
movsl
jle
xchg
mov
jecxz
add
jnp
xor
and
jecxz
les
and
push
mov
or
sub
cltd
scas
mov
into
mov
iret
sbb
sbb
jge
inc
stos
push
dec
in
cmp
xchg
lret
aad
pop
lds
and
mov
fiadds
stc
jmp
mov
out
aad
je
cmpsl
loope
pusha
mov
das
push
lcall
out
outsl
add
inc
ja
test
ret
in
adcb
pop
pop
std
mov
xor
imulb
nop
xchg
sub
and
out
loope
imul
push
push
lcall
mov
adcb
dec
sbb
iret
sub
push
arpl
vxorps
mov
pusha
mov
pusha
pushl
ret
pushf
push
pushl
pusha
movl
push
movl
pushl
mov
pushl
push
lea
jmp
xchg
pop
or
mov
jmp
push
lret
aaa
pop
es
xchg
iret
rcrb
fstps
rcrb
xor
loopne
xchg
fistpl
jle
push
push
push
mov
mov
fisubs
xor
aad
jnp
lds
and
and
lods
mov
lock
icebp
xchg
ret
or
jl
jle
popf
inc
out
pop
jbe
sarl
push
and
lea
je
movsbw
xchg
not
lea
lea
bswap
movzwl
mov
push
not
lea
pop
bswap
push
mov
pusha
lea
call
pushf
pushf
lea
jne
cwtl
mov
pushf
pushf
pusha
push
lea
jmp
bt
pushf
pushf
add
movw
mov
call
add
add
add
add
add
add
add
add
sbb
pusha
sbb
add
add
add
sbb
pop
jnp
inc
adc
jg
xchg
inc
and
and
sarb
xchg
clc
addr16
inc
add
jb
bound
push
sbb
dec
arpl
mov
dec
loope
rolb
push
push
add
sbb
dec
inc
mov
xor
dec
cwtd
and
aam
jp
jmp
and
and
xchg
jnp
inc
or
add
sub
mov
jnp
fsubl
adc
lds
arpl
sahf
mov
lret
ss
rcll
and
inc
jl
fmull
jnp
xchg
jb
fsts
std
addb
sahf
lock
outsb
icebp
stos
push
cltd
pushf
mov
ret
loope
nop
mov
mov
popa
lret
or
xchg
pop
add
cmp
mov
mov
rclb
in
lods
push
mov
adc
sti
push
xchg
adc
pop
push
test
lock
cmpsl
fwait
imul
loopne
pop
negb
ss
pop
ret
pop
out
xchg
xor
out
mov
inc
pop
jnp
inc
out
enter
sub
pop
fcoml
js
rcrb
loop
arpl
xor
adc
je
sub
and
data16
xor
in
stos
and
in
hlt
sti
fbld
int
pushf
jb
test
loop
add
pop
pushf
push
imul
jns
jmp
fsubrl
repnz
jg
mov
stc
and
inc
ffree
leave
pusha
mov
ljmp
fcmovnu
outsl
fldl
pop
jg
enter
clc
sbbl
rcl
fstps
or
data16
push
dec
int
sbb
imul
jge
add
and
sarb
and
imull
cmp
std
cltd
add
adc
jp
cmp
sbb
mov
rcrb
sbb
jp
leave
movsl
sbb
test
bound
jp
popf
rcr
clc
and
rorl
jmp
and
push
push
inc
imul
xchg
lods
or
dec
mov
jge
add
fstps
xor
mov
jge
dec
cmp
and
pop
pop
cmpsb
bnd
pop
jp
test
mov
adc
cld
push
idivl
lcall
push
icebp
stos
or
js
push
and
jb
pop
push
inc
adc
data16
sbb
pop
push
push
pop
or
cwtl
aaa
lcall
add
std
jno
sbb
pop
pop
cmp
out
repnz
push
clc
inc
insl
push
inc
cltd
cmpsb
mov
and
ret
xchg
in
pop
push
jns
mov
push
xor
pop
dec
test
mov
iret
pusha
mov
jb
loope
sub
jl
sub
ret
cmp
dec
cld
cmp
dec
leave
pushf
push
leave
cltd
cmp
mov
inc
mov
xchg
outsb
cwtl
fucom
pop
and
repz
xor
into
cwtl
fbstp
icebp
lahf
and
and
popf
sbb
into
scas
scas
and
inc
or
lods
shrb
pop
fsubr
call
or
lret
and
jg
or
dec
out
xchg
xchg
mov
sub
dec
shl
mov
push
mov
jbe
outsb
rcrb
jg
pop
push
sahf
dec
je
mov
xlat
or
sti
cltd
mov
xor
inc
cmp
xor
dec
xor
mov
jecxz
push
inc
testl
repnz
mov
cli
xchg
and
push
gs
push
out
aam
push
stc
jo
out
jb
sub
sbb
mov
fwait
out
iret
loopne
mov
xchg
das
std
leave
mov
mov
nopl
adc
cltd
jns
xchg
jbe
adc
and
inc
push
pop
stc
mov
movsb
xchg
je
pop
adc
cmc
sbb
push
in
push
inc
ja
mov
out
xchg
lret
xor
mov
out
pop
mov
imul
cmpsl
xchg
adc
xor
jae
mov
ret
ret
xchg
mov
jb
es
mov
add
inc
inc
pop
xchg
xchg
aam
sarl
sub
lahf
je
int3
fdivrl
pop
add
push
je
xchg
adc
mov
outsl
sub
mov
inc
mov
sbb
shrl
mov
inc
jbe
les
les
lret
push
pushf
inc
std
xor
les
xchg
loopne
lcall
or
cld
ror
pop
ret
xchg
hlt
pop
fmul
outsl
cmp
push
in
and
inc
std
dec
dec
insl
in
pop
sub
pop
and
ds
pushf
lret
jge
int
stos
pop
mov
pop
or
sub
in
popf
ljmp
popa
inc
in
mov
mov
jp
mov
insb
xchg
ljmp
test
mov
leave
xchg
dec
lods
mov
push
dec
mov
mov
push
mov
sub
push
push
pop
add
dec
jl
in
lds
lret
adc
mov
xchg
bound
fcomps
shrl
xchg
inc
mov
ja
lds
dec
cmp
iret
mov
test
lock
in
xor
repz
lcall
sar
adc
fstpt
imul
popa
sub
test
cmp
sub
adc
mov
push
iret
fisubrl
dec
adcl
xchg
or
or
and
push
add
aaa
andb
ficompl
pop
push
mov
mov
mov
jmp
xor
stc
hlt
adc
pop
lcall
or
jg
popa
add
xor
pop
dec
cld
andl
and
fadd
mov
xchg
pop
popa
adc
outsb
mov
sbb
sti
mov
ret
xor
and
fwait
inc
push
mov
inc
decl
and
or
pop
or
sub
and
fcoms
movb
mov
lcall
push
mov
sbb
into
jae
cmp
fnstcw
es
nop
jecxz
pusha
mov
adc
mov
pop
popa
ja
bound
sbb
out
and
push
cmp
fsubrl
repz
fs
aas
je
int
leave
lea
cmpsl
mov
movsl
mov
mov
sbb
ret
xor
sbb
inc
ds
mov
mov
xor
cwtl
pop
or
push
fsub
adc
fldl
movsb
adc
sub
push
psubb
or
and
inc
mov
mov
rolb
push
call
rcll
sbbl
testb
fmuls
inc
out
ficoml
ja
lret
ss
jae
push
call
pop
add
jo
xor
inc
jle
unpckhps
or
pop
xchg
cmpsl
inc
out
sub
jmp
jns
ss
push
imul
sub
rol
dec
sbb
mov
xchg
popa
cs
andl
loop
ss
clc
outsb
pop
aam
sti
lock
loopne
fdivrl
lahf
dec
cmp
cli
pop
lahf
sub
lret
cmc
movsb
or
dec
mov
in
popa
xor
or
xor
fcomi
cmp
mov
flds
icebp
sub
es
sub
dec
fcomps
cmp
iret
adc
rclb
lret
cmp
cmc
and
std
imul
and
cmp
lods
or
jle
pop
jnp
xor
fisubrs
stc
mov
das
fdivs
bound
xorb
push
insl
pop
xor
pop
pop
fistps
pop
mov
mov
inc
xor
add
imul
mov
movsb
out
add
jae
fwait
push
cmp
lret
popf
adc
and
neg
cltd
leave
cmc
dec
shl
jo
mov
imul
cltd
icebp
mov
jne
lcall
insl
scas
push
sbb
dec
loope
repnz
es
scas
clc
jle
repz
cmp
pop
imul
loopne
mov
arpl
or
and
dec
lock
insb
dec
jno
or
test
xchg
or
sbb
sbb
aam
cs
mov
add
pop
add
shrb
outsb
ret
les
push
leave
mov
lods
aad
xor
mov
dec
jmp
enter
sub
add
xchg
push
leave
jecxz
push
inc
movsb
mov
push
stos
aas
aas
pushl
sub
mul
loopne
lods
cmc
mov
mov
lds
sub
add
ret
xor
cld
fdivrl
jno
mov
stc
xchg
pop
int3
mov
loopne
pop
mov
xchg
adc
pusha
xchg
sub
mov
jmp
jo
jae
stos
adc
cmp
pushf
aad
aas
lock
pop
dec
xchg
cld
addr16
push
mov
xchg
pop
xor
xor
xchg
dec
jg
inc
idivl
sahf
into
sbb
adc
xor
iret
mov
sub
fs
fimuls
push
add
sbb
mov
int3
sbb
in
ficomps
or
lock
jl
cld
lods
imul
shrl
jl
das
aas
adc
push
pop
ja
pop
lahf
scas
push
in
dec
push
jecxz
jns
jno
outsb
xchg
sbb
push
je
lret
nop
jno
iret
sbb
fwait
and
mov
push
adc
movsl
and
scas
mov
sbb
jns
outsb
push
dec
outsl
jge
ret
cmp
stos
dec
loop
cmpsl
sub
xlat
andb
or
daa
cli
pop
sbb
rorb
loope
mov
dec
push
push
test
or
stos
gs
adc
mov
and
dec
mov
cltd
fisttps
jnp
cltd
fdivrs
into
popa
aam
xchg
mov
data16
push
push
aam
mov
mov
arpl
sbb
dec
sub
ja
and
xchg
jb
mov
ret
jb
and
test
movsl
inc
and
cwtl
and
xchg
adc
or
pop
or
out
pop
mov
outsb
das
andl
inc
xor
jmp
sbb
pop
stos
repz
hlt
das
push
icebp
sbb
shll
push
xchg
cmp
inc
and
in
sbb
ss
das
inc
insb
popf
out
cmp
sbb
ds
out
in
vpavgw
outsl
sub
std
stos
mov
arpl
aad
pop
jnp
subb
cs
add
mov
shll
inc
mov
mov
adc
es
xchg
testb
xor
pop
cs
sub
pop
cs
sbb
sbb
adc
aaa
inc
cltd
inc
iret
xchg
test
sub
in
sbb
and
mov
push
inc
sub
sub
jne
push
cwtl
pusha
sahf
inc
or
sti
enter
mov
cmp
add
pushf
movl
movw
jmp
movl
movb
pushf
pushf
lea
jmp
add
dec
outsl
popa
fs
imul
add
movl
and
jne
call
cwtl
int3
stos
mov
xchg
adc
nop
mov
bound
sbb
int3
sbb
xchg
xor
je
push
lock
cmp
pop
sub
stos
adc
out
inc
aaa
in
clc
cmp
cmp
or
adc
fdivrs
add
cmp
mov
cmp
sub
push
sbb
fisubl
xor
dec
and
push
sarb
add
sti
std
pop
adc
fmuls
outsb
jp
addb
sub
add
jmp
ja
or
data16
mov
jo
inc
cs
adc
jmp
in
sbb
dec
data16
xchg
mov
fmull
fcmovbe
ror
jno
out
sub
jp
or
js
ds
sbb
out
leave
sbb
jmp
pop
sbb
or
mov
cmc
in
shrl
or
lcall
push
jmp
incb
sbb
jne,pt
xchg
push
inc
cmp
and
or
stc
cmc
stos
add
cmp
pop
data16
jb
jo
push
sub
sbb
cmp
add
cmp
ss
push
xor
dec
inc
aas
stc
sbb
add
xor
loop
scas
cmp
cmpl
ss
hlt
and
mov
push
pusha
lretw
out
sbb
push
std
xchg
cmp
cld
and
cli
pop
dec
sbb
clc
std
mov
sub
adc
adc
lcall
sub
ror
cmp
icebp
or
loopne
push
adc
jmp
mul
test
push
cmp
loope
adc
jbe
mov
xchg
cwtl
mov
sbb
mov
dec
pop
cmp
das
out
adc
sti
stc
ja
idivb
pop
lcall
sbb
or
adc
adc
adc
add
sub
inc
inc
cltd
inc
dec
and
stos
or
add
inc
adc
inc
aas
hlt
jb
call
or
outsl
out
in
add
std
adc
sarl
adc
mov
adc
xchg
jne
out
mov
mov
sub
aad
aas
shl
and
fcompl
mov
xor
mov
and
out
sbb
icebp
or
dec
fiaddl
jl
push
push
hlt
jmp
adc
orb
cs
mov
inc
cmp
adc
mov
adc
cs
and
sub
scas
push
dec
lds
adc
pushf
cmp
push
pop
mov
mov
std
xchg
sbb
adc
je
jae
lock
jmp
orb
adc
icebp
loope
aad
in
mov
mov
loopne
cmc
add
aad
stc
scas
mov
stos
mov
stc
loope
mul
sub
loopne
mov
fneni(8087
add
sbb
sbb
cli
loopne
je
jle
sbb
push
adc
push
adc
js
je
adc
lods
jmp
repz
jecxz
in
push
adc
cmpb
adc
and
pushf
dec
push
mov
in
adc
cs
mov
in
adc
loope
mov
jb
xor
xor
adc
sub
xlat
jg
xlat
out
xor
mov
mov
mov
ljmp
jb
hlt
mov
pop
loop,pt
clc
mov
adc
in
pop
push
test
mov
and
adcl
cwtl
sbb
mov
ss
jo
or
mov
xchg
xchg
adc
loopne
mov
push
dec
adc
adc
sub
pop
inc
dec
test
pop
push
adc
out
sbb
sahf
out
in
cmp
mov
clc
jo
push
bound
pushf
adc
mov
bound
push
icebp
cld
stos
or
fs
add
in
bound
pop
dec
xchg
out
out
xlat
mov
in
lcall
or
adc
mov
aad
loopne
jp
mov
hlt
test
sub
xlat
js
ss
lcall
ljmp
adc
sbb
andb
or
sbb
sub
cli
pop
push
bound
ljmp
cmp
adc
adc
lret
jmp
mov
mov
andb
adc
xchg
add
cld
mov
adc
sbb
mov
xor
sbb
lret
shl
mov
adc
mov
mov
jle
or
push
and
sbb
loopne
div
adcb
testb
je
ss
hlt
push
adc
dec
xor
mov
xchg
sub
out
adc
bound
sbb
jno
mov
jmp
pop
outsb
in
sbb
adc
cld
cmpsb
fimull
push
push
xchg
imul
sub
xchg
pop
ss
inc
aad
ret
test
in
xchg
adc
std
fcmove
mov
ljmp
xor
lcall
sub
mov
sbb
and
std
sti
mov
lret
andb
mov
cmp
xchg
arpl
mov
mov
xor
ss
adc
lret
mov
lcall
mov
lods
repz
les
jno
or
test
sbb
sub
mov
add
repnz
adc
bound
mov
lcall
pop
sbb
and
sti
clc
bound
xor
push
adc
mov
xlat
testb
ss
mov
adc
sbb
mov
lods
push
adc
aad
test
ss
loopne
mov
lcall
test
mov
fdivrl
arpl
sbb
sbb
ficoml
loop
adc
ljmp
ss
mov
push
lds
fs
sbb
int3
imul
sub
jmp
adc
jo
ss
mov
je
pop
pop
lret
shlb
call
dec
lcall
sbb
or
ja
lcall
push
or
cmp
in
ja
sbb
adc
ss
xchg
pop
mov
loope
pop
in
jl,pn
add
sub
jg
ljmp
dec
add
xor
ja
add
dec
aam
adc
cltd
or
lret
rclb
fnstenv
outsl
sti
ret
lret
clc
jp
sbb
sub
sbb
dec
cmp
fs
in
loop
pop
fists
fdivl
cmp
sahf
lret
adc
push
bound
jo
pop
clc
pop
mov
push
adc
test
jmp
arpl
mov
jle
xor
mov
xor
jne
mov
xor
xchg
or
jb
clc
loopne
mov
test
add
mov
and
shll
loop
lods
in
add
sbb
mov
adc
push
das
mov
repz
push
call
adc
pop
push
in
fdivs
test
mov
or
ljmp
pop
sbb
je
ss
sub
pop
sub
or
sbb
repnz
bound
and
lcall
lahf
push
mov
les
pop
sub
and
out
pop
lcall
bound
pop
sub
in
cmp
ss
pop
push
xor
adc
fidivs
push
or
shl
inc
mov
loope
or
cmpsb
adc
ss
pop
inc
sbb
aad
xchg
loopne
fs
test
sti
cmpsb
pop
cwtl
sbb
dec
in
bound
imul
outsl
pop
stos
or
ss
test
dec
push
fnsave
mov
and
sub
mov
dec
pop
adc
js
outsb
loopne
jns
jne
pushf
js
mov
lods
mov
lret
and
orb
adc
add
out
cmpsl
sub
test
in
bound
sbb
adc
lock
mov
or
inc
ljmp
xchg
add
mov
xorl
mov
ds
xchg
push
mov
dec
aas
notl
pop
cld
sbb
repz
cmpsb
stos
jp
cwtl
scas
dec
icebp
jmp
xor
sub
mov
icebp
jae
test
ljmp
ss
mov
mov
clc
xor
mov
mov
bound
add
adc
ss
adc
sub
add
stos
pop
fnstenv
lret
mov
dec
dec
aaa
mov
and
imul
stos
mov
stos
cmp
cmp
ss
cs
cmp
xor
cmp
inc
inc
dec
jne
push
dec
push
aaa
shlb
xor
sub
cmp
xor
inc
inc
add
push
insb
or
dec
fiaddl
ss
mov
fsubs
aam
xorl
push
cmp
xor
js
faddl
fdivrs
mov
xorl
inc
and
xchg
mov
dec
push
mov
cmp
add
mov
add
add
sub
cmp
mov
aaa
cmp
pop
lret
repz
pop
imul
and
mov
cli
lret
fdivrl
movsb
sub
pop
pop
pop
outsb
or
jns
cltd
pusha
lods
xchg
push
dec
js
gs
push
lea
xor
mov
xchg
cmp
pop
je
loopne
ja
xchg
hlt
mov
out
lods
pop
ja
xchg
rorl
lods
sub
rorb
fstl
insl
hlt
rclb
xchg
jnp
mov
jne
mov
xor
lods
jecxz
pushf
mov
xor
lods
jae
mov
cmp
daa
cmp
sbb
aam
out
daa
inc
jp
cld
in
pushf
sub
or
sub
shrb
ljmp
das
and
mov
ret
enter
cld
sbb
rcrl
mov
sbb
sbb
pushf
sarb
add
jmp
mov
das
loopne
jb
int3
sub
mov
mov
xor
data16
inc
repz
nop
adc
loopne
out
cmp
mov
adc
mov
jbe
sub
cmp
pushf
jecxz
lret
out
pop
xchg
repz
mov
add
xorl
stc
lods
movsl
sbb
xor
sub
nop
mov
ret
jno
xor
insb
dec
loopne
imul
cltd
sti
mov
aaa
mov
inc
and
xor
loopne
insb
xor
sub
pop
out
cltd
aas
pushf
mov
dec
loopne
and
cmp
adc
sub
pop
and
xor
dec
xor
in
insb
sub
arpl
decb
dec
sub
insb
xchg
aaa
and
stc
add
adc
push
or
cmp
incl
out
xor
or
adc
lret
fs
and
cwtl
imul
mov
dec
adcl
cmpsl
sbb
sub
scas
pop
pop
mov
sar
jle
sub
xor
mov
decb
or
cmp
jp
ret
cmp
push
test
int3
cld
arpl
and
and
aam
xor
adc
cmp
inc
negb
sub
sbbl
int3
sub
sti
dec
add
cmpsl
push
push
xor
add
lahf
mov
add
bound
ss
loope
mov
test
pop
aam
es
add
test
mov
add
mov
mov
cmc
sti
and
or
sbb
xor
jl
lods
repnz
push
ljmp
leave
mov
xor
int
pop
jbe
xor
por
pushf
out
into
mov
orb
jl
adc
stos
jae
push
sbb
xchg
and
arpl
sub
xchg
es
aad
mov
mov
xchg
or
outsb
inc
adc
ror
mov
les
xor
das
rorl
mov
inc
in
sti
cmpsb
nop
lcall
imul
addr16
pushf
push
pushf
lods
rclb
imul
fcmovnu
adc
mov
hlt
adc
mov
dec
fistps
and
subl
data16
and
dec
sbb
leave
mov
es
xor
add
shll
jle
dec
or
mov
or
int
and
mov
stos
and
push
lcall
fstps
es
aaa
daa
push
push
pop
mov
or
add
fnstcw
adc
repz
cwtl
insb
in
xlat
push
and
push
push
ja
out
stc
cmp
leave
repz
fnsave
and
cld
lret
pushf
in
adc
add
fwait
jp
jl
lds
xor
adc
jb
xor
xor
mov
jl
xchg
mov
fsubrl
adc
cwtl
rep
xor
pushf
aas
in
in
insb
aam
jbe
pop
mov
hlt
cmp
adc
jb
fisubrl
xchg
xor
mov
jb
pushf
into
jp
mov
fwait
mov
addr16
mov
sbb
mov
push
mov
push
popf
test
repz
xor
cltd
imul
adc
mov
and
popa
jl
stos
push
mov
sbb
lods
add
cwtl
and
sbb
shlb
mov
xor
pop
mov
jl
and
decb
hlt
pop
mov
jb
sub
ljmp
in
imul
cmp
add
mov
pop
xchg
fwait
push
adc
cwtl
fs
call
cs
loop
in
sahf
sbb
inc
sbb
pop
push
loopne
insb
or
xlat
sbb
nop
or
test
mov
js
xor
mov
lea
jmp
mov
sub
mov
pushl
cmp
push
outsl
rcrb
cmp
movsb
inc
xchg
hlt
xchg
ficompl
daa
xor
pop
nop
sbb
jns
pop
inc
cwtl
and
dec
emms
sbb
hlt
test
fs
sbb
push
mov
and
mov
arpl
cli
pop
dec
aad
repnz
add
and
xor
rorb
or
add
push
and
cmpsb
jl
sbb
addr16
xchg
and
pushf
or
adc
sub
sbb
test
xchg
fists
mov
xor
lcall
ret
mov
in
cltd
mov
je
cmpsl
movsb
and
stos
aad
mov
pop
shrb
arpl
into
aam
hlt
sbb
and
test
data16
insb
or
imul
outsb
pop
dec
shll
and
mov
je
das
scas
xor
mov
and
cli
mov
fcmove
sub
adc
adc
mov
mov
adc
lods
fldcw
pop
sbb
mov
sbb
cmpsl
int3
loopne
inc
jo
leave
cmpsb
jl
js
call
adc
sbb
ret
pop
fistl
pop
dec
or
jle
xchg
mov
imul
mov
and
sub
mov
mov
pop
mov
imul
ljmp
mov
fwait
sbb
cmp
loope
icebp
or
sub
pop
sub
or
or
dec
cmp
jecxz
sbb
fdivr
subb
ljmp
nop
dec
pop
test
mov
push
xor
insb
add
pop
xchg
daa
clc
loop
adc
mov
int
inc
out
lcall
sbb
aam
cmc
movsl
fisubl
jp
stos
scas
or
xchg
cli
iret
pop
pop
daa
pop
das
cli
imul
adc
lcall
and
cmp
mov
adc
mov
lcall
cmp
cli
mov
add
lret
sub
lds
xchg
jp
jmp
pop
sub
neg
pushf
or
cmc
fwait
bound
enter
fisttpl
lods
cmp
push
xchg
pop
test
addr16
sbb
stos
xor
cld
and
and
inc
mov
popf
jl
mov
sbb
fdivrl
sbb
lods
pop
mov
mov
xor
insl
rorb
into
inc
lock
lret
xchg
sbb
xlat
inc
sub
ret
int
iret
lea
std
pop
lcall
insb
fsubrl
jbe
xor
into
sub
out
xchg
adc
mov
inc
stos
sub
mov
pushf
xor
into
inc
xor
cmp
and
test
cmc
loopne
dec
inc
stos
aas
sbb
push
mov
je
mov
jnp
sarb
addr16
and
mov
cmp
imul
inc
aaa
rclb
mov
imul
scas
push
inc
mov
xchg
push
call
int3
ja
adc
sub
mov
int3
sbb
jl
xor
mov
mov
and
mov
js
or
dec
aam
sbb
sbb
adc
sbb
cmp
ret
sbb
loopne
test
pop
lods
aam
stc
pushf
inc
bound
xchg
cmp
fsts
add
xchg
xor
mov
add
xchg
test
add
sub
mov
xor
push
ljmp
or
decl
xor
fwait
mov
mov
fidivl
inc
js
loopne
jl
mov
imul
push
push
cmp
sub
insb
adc
pop
mov
repnz
mov
sub
cli
or
sub
add
mov
and
arpl
sub
pop
sub
cmp
mov
fcoms
mov
xchg
mov
mov
roll
mov
inc
push
mov
pop
mov
push
das
sub
aam
rorb
cwtl
and
pop
push
cmp
imul
sub
push
add
adc
aad
sbb
bound
andl
repz
subb
mov
cmp
sub
scas
gs
or
je
lods
xor
lea
pushl
sub
sub
dec
pop
mov
lock
push
pop
gs
rcll
fdivr
mov
mov
test
xor
jae
sub
popf
and
mov
aas
mov
mov
mov
or
mov
je
cmp
negl
test
xorb
es
adc
inc
adc
mov
add
add
lret
inc
pop
sub
gs
xchg
sbb
call
push
popl
movsl
loop
dec
sub
mov
mov
fmuls
mov
cld
imul
xchg
hlt
push
cwtl
jo
imul
pop
and
lods
out
sub
sub
xchg
jmp
xchg
ret
xor
add
or
jno
add
mov
push
push
pop
mov
push
dec
dec
xor
jle
cmp
das
jl
lods
gs
cmpsb
insb
pop
hlt
pop
mov
cmp
in
jns
das
adc
fsubrs
xchg
es
mov
adcb
mov
mov
dec
push
mov
cmp
enter
into
mov
fmuls
pushf
sbb
jg
inc
in
xchg
pop
mov
xor
pop
jl
sbb
test
cmpsb
push
mov
lds
sub
dec
mov
cmp
cmpb
scas
negb
scas
imul
mov
stos
pop
ljmp
out
test
mov
in
xchg
push
jl
mov
inc
dec
mov
and
sbb
stc
enter
adc
fwait
mov
pop
jns
pop
mov
adc
inc
dec
gs
jnp
mov
ds
pushf
ljmp
mov
leave
cwtl
mov
lret
cmp
xor
or
xorb
jae
mov
inc
pop
adc
hlt
pushf
nop
insb
frndint
addr16
pop
les
xchg
sbb
adc
and
mov
movl
mov
add
adcb
imul
pop
gs
xor
push
jg
arpl
imul
ret
mov
jae
ds
mov
loope
adc
mov
push
jnp
cmp
cltd
jle
test
mov
add
push
mov
push
mov
bound
movsl
xchg
sbb
sub
xchg
mov
add
and
sub
mov
add
lock
lea
inc
xor
mov
and
fdivs
mov
and
xchg
lods
bnd
jb
xchg
outsb
jl
pop
lods
jae
inc
inc
mov
sbb
test
clc
and
jp
xchg
xor
xor
mov
js
mov
cmp
enter
inc
inc
adc
xchg
nop
pop
or
loop
adc
sbb
andb
sbb
cmp
mov
inc
shl
gs
adc
push
hlt
push
loop
fnstenv
sub
cmp
call
rol
popf
adc
mov
sub
push
jle
daa
jmp
js
imul
add
jmp
popa
xor
lret
or
or
cmp
shlb
pop
ds
jae
daa
imull
gs
mov
push
imulb
push
fidivs
push
mov
jmp
mov
mov
imul
mov
mov
mov
cmp
xor
or
imul
adc
int3
divb
sbb
fnstcw
dec
cmpsb
push
loop
lret
xor
xchg
lret
leave
jb
mov
xchg
jb
cmp
pop
push
or
pushf
aas
repz
stc
jecxz
xor
sub
insb
jae
dec
je
adc
mov
cmp
push
xor
aam
call
adc
mov
mov
test
dec
data16
fstps
push
cli
sbb
push
sbb
cmp
enter
add
stos
sub
sahf
or
cld
fwait
test
sbb
cmp
cmp
or
cmpsl
mov
or
mov
or
enter
in
jnp
cmc
cld
jp
subl
add
sub
shlb
jo
adc
mov
and
fiaddl
sub
int3
repnz
loop
jbe
add
xor
mov
hlt
sub
or
dec
sub
test
mov
mov
add
stc
add
or
mov
inc
shr
mov
daa
subl
aaa
int3
sbb
insb
repz
mov
or
xor
mov
aam
fcoms
fdivr
ss
adc
mov
push
test
fsub
pop
test
les
cmpb
adc
adc
ljmp
push
mov
inc
loope
inc
mov
inc
xor
pop
pop
in
adc
jnp
and
sti
xor
xchg
xor
rcrl
fsubr
adc
cli
and
add
icebp
mov
sti
xchg
xor
pop
cmpsb
add
push
imul
cli
es
inc
sbb
jae
lods
adc
pmuludq
cwtl
lods
jae
rcr
mov
push
out
and
test
inc
push
das
call
cmpsl
mov
stos
mov
out
imul
into
jp
les
imul
aaa
cmp
cli
ds
xlat
xchg
insb
cmp
test
stos
sahf
cmp
dec
loop
and
sbb
push
int3
mov
sub
xor
stos
das
pop
mov
sub
fcomp
xchg
xor
pop
pop
lcall
sbb
fs
imul
cld
lcall
mov
mov
ret
sbb
in
adc
stc
cld
push
xchg
das
lret
call
scas
inc
dec
es
or
jbe
in
rclb
adc
das
cld
add
jnp
push
mov
xchg
leave
pop
mov
stc
sub
outsl
mov
cmp
inc
or
xorb
adc
out
xor
sarl
ss
incl
xor
add
hlt
jae
push
popa
xor
cmp
fidivrl
js
dec
imul
cld
popa
cld
push
ficomps
cmp
sub
insb
ret
sbb
mov
jmp
in
hlt
mov
mov
aas
mov
dec
dec
or
lahf
out
ror
mov
cmp
sbb
sub
ss
cld
nop
dec
sahf
gs
sub
dec
push
fs
xchg
and
shrb
pushf
hlt
ljmp
xor
mov
and
out
mov
mov
mov
dec
adc
aam
icebp
cmpsl
adc
push
pop
ss
stc
fmull
add
and
push
stos
xor
pop
cmp
push
inc
sub
les
lret
imul
imul
outsl
xor
sahf
inc
push
xor
cmp
jge
gs
lods
cltd
dec
jge
inc
aad
repnz
cmp
or
enter
xor
out
and
lcall
movsl
cld
loopne
js
mov
push
testl
sbb
push
nop
lods
fs
sbb
sub
jmp
aaa
xor
into
lret
sbb
pushf
ja
cmp
xchg
mov
sub
sbb
je
mov
outsb
cmc
imul
fdiv
sbb
cmp
or
es
aas
or
or
mov
sbb
xor
xchg
cld
js
gs
cmp
out
xor
idiv
paddq
xor
jae
dec
xchg
cmp
jge
push
mov
sub
or
test
loopne
mov
pushf
into
adc
cmpsl
rolb
lock
sbb
mov
adc
sub
xchg
and
cmpsl
pushl
ss
cmp
aaa
nop
insb
lret
adc
xor
movsb
push
mov
lods
sbb
aaa
neg
sub
push
pop
out
loopne
xor
jl
mov
push
cmpsl
xchg
xor
xor
adc
sub
push
sbb
xor
adc
int3
add
or
pop
inc
dec
fadds
mov
xor
imul
push
lea
cltd
cltd
rolb
mull
xor
aam
and
mov
add
test
sti
dec
xor
add
lods
mov
adc
mov
inc
cmp
mov
popf
cmp
mov
jp
xchg
mov
push
lods
lods
jmp
and
pop
sbb
sbb
in
repnz
jl
call
pop
out
in
pop
mov
mov
mov
push
push
je
loopne
fdivl
dec
cmp
cmp
imul
mov
mov
aaa
scas
push
lcall
sbb
imul
cltd
xchg
decb
imul
sub
into
gs
xchg
xchg
xor
push
xor
movb
lock
fs
fdivr
sub
xchg
sbb
shlb
push
pop
sub
js
shr
dec
pop
insb
jnp
daa
mov
adc
fs
sub
fwait
into
adc
mov
sub
mov
sub
imul
adc
xchg
mov
jnp
pop
int3
je
xchg
xchg
mov
mov
jle
ficoml
mov
dec
cld
outsb
fs
push
sub
inc
mov
int3
xor
sbb
and
mov
and
int
or
jb
sub
mov
mov
xchg
outsb
push
cmp
les
int
inc
scas
inc
movsl
cmp
jl
jge
movsb
xor
sahf
add
xchg
fucomi
pop
test
sub
xorb
mov
xchg
mov
inc
mov
sbb
mov
cli
nop
cmp
imul
lret
clc
repnz
jbe
repnz
mov
mov
cld
insb
sub
stos
xor
xchg
fwait
in
sub
sti
fsubs
push
lods
lret
push
sbb
lret
stos
imul
mov
popa
test
sub
dec
stos
and
jae
sub
sub
lret
and
or
mov
nop
jmp
addr16
mov
cs
inc
cmpsl
pop
pop
insb
inc
fsub
sub
mov
leave
or
cltd
mov
and
or
pop
xor
and
push
inc
popf
sbb
and
test
call
ss
mov
cmp
nop
or
mov
mov
xor
mov
mov
xor
loope
mov
fcoms
sub
sub
insb
enter
xlat
xor
cmp
mov
jmp
lods
sub
lret
aaa
data16
movsb
sub
ljmp
mov
imul
ljmp
dec
loopne
pushf
in
push
xchg
add
fcmovu
cltd
xchg
notb
push
pop
idivl
cmp
add
dec
inc
icebp
cltd
fwait
and
pop
cmp
vdivpd
imul
lcall
and
sub
mov
in
sbb
ss
pushf
shll
inc
aam
dec
sahf
mov
leave
xchg
xor
imul
dec
lds
dec
mov
or
push
mov
fdivs
mov
ss
vmulss
push
cld
xchg
imul
push
sub
add
pop
jl
adc
sbb
xor
gs
or
aas
addb
cmp
cld
mov
gs
and
ss
inc
icebp
push
mov
lcall
hlt
sbb
jo
mov
add
lock
sahf
mov
lret
and
scas
jp
push
jbe
or
or
outsb
and
insb
leave
push
sbb
cmp
and
mov
cmp
pop
loopne
add
lcall
xor
mov
adc
mov
sbb
leave
out
loop
cmp
adc
movsl
cmp
es
shrl
add
scas
sbbb
xchg
xor
dec
mov
xor
sbb
cmp
pop
iret
cld
lods
and
loop
test
aaa
sub
mov
mov
pop
test
sub
shrl
stos
and
mov
and
jge
mov
sub
cmp
gs
aaa
fwait
fs
popf
imul
xchg
push
dec
inc
ficoml
imul
cmpsl
je
call
adc
dec
cmp
mov
scas
and
repz
idiv
rcrl
addl
xor
imul
ljmp
rclb
push
sbb
cmpsl
xlat
pushf
cmp
sahf
sbb
mov
cmp
fistpl
xor
cs
ss
dec
push
outsl
sub
orb
and
cmp
outsb
out
out
push
shll
dec
out
sub
jp
cmpsl
sar
sbb
add
cli
dec
xor
out
movsb
mov
cli
pop
xor
mov
jbe
xor
and
sbb
sbb
std
sbb
sub
xor
mov
out
xor
xor
cwtl
and
pop
and
ljmp
mov
mov
lahf
xor
jno
in
xor
hlt
xor
pop
add
push
aaa
sub
adc
pop
adc
rcrl
std
aam
cmp
and
enter
xor
mov
adc
dec
pop
jmp
push
rcrl
sti
test
sub
xchg
rcrb
sub
mov
mov
fdivl
sub
xor
cmp
mov
cmp
or
call
imul
ds
aas
out
adc
and
sub
pop
or
repnz
sub
sub
cmpsl
and
imul
mov
xchg
mov
cli
idivl
lcall
and
insb
addr16
imul
jns
repnz
cmp
adc
mov
imul
cld
mov
xchg
cmp
add
inc
cmp
sub
mov
popf
pop
fnstcw
das
cmp
cwtl
cli
fmuls
icebp
sub
mov
cli
adcl
sub
sbb
push
cli
rcrl
clc
loope
adc
and
js
loopne
or
mov
jno
imul
insb
ret
and
push
out
dec
sbb
sub
in
sub
repz
xor
mov
dec
xor
jns
repz
cli
imul
imul
xor
cmpsl
jae
cmc
sbb
mov
mov
cld
sbb
pop
cmp
cld
lods
sbb
jne
stos
aas
adc
xor
lret
pop
add
cwtl
nop
xlat
idivb
sti
pushf
stos
lods
test
mov
fsubrs
decb
cli
stos
fdivrl
out
jmp
jns
adc
es
loopne
dec
dec
sub
leave
sbb
sbb
sbb
sbb
cld
fnstenv
stc
ja
push
xor
adc
stos
lret
mov
ds
stos
arpl
arpl
mov
sbb
stc
jbe
push
fcoml
jnp
inc
pushf
cwtl
insb
imul
lds
int
lcall
cmpsl
lods
and
sub
ljmp
adc
mov
xor
aas
lods
std
stos
push
mov
mov
sub
or
mov
pop
pop
out
xor
jno
stc
dec
cmpsb
pop
mov
mov
imul
jne
mov
ret
or
aam
daa
and
pusha
addr16
cmp
dec
jmp
sub
and
xor
es
loop
mov
xchg
ret
nop
and
inc
or
into
jl
and
mov
icebp
adc
in
or
imul
mov
es
dec
mov
xchg
xchg
pop
pop
rorb
xchg
adc
push
sbb
subl
out
jle
mov
jmp
inc
xor
pop
ret
inc
adc
scas
adcb
lock
data16
ret
xchg
jmp
ljmp
or
xlat
fdivrl
or
and
adc
lods
sbb
imul
and
ficoml
lods
daa
imul
sbb
rorl
insl
js
push
cld
mov
cwtl
or
and
fwait
cmp
repz
arpl
cli
stos
sbb
cli
sbb
mov
aaa
aas
clc
movsl
sbb
mov
movsb
hlt
gs
push
lock
inc
jge
and
scas
in
add
add
scas
out
sub
push
test
sub
cli
xor
lock
fwait
sbb
cmp
imul
mov
or
mov
or
xor
xor
sub
or
test
aaa
adc
ljmp
lock
scas
push
sbb
ss
xchg
addr16
xor
es
dec
push
sbb
into
arpl
inc
and
ss
test
xchg
dec
pop
es
lods
daa
mov
sub
shrl
adc
aad
inc
leave
xchg
repz
sub
xor
and
dec
mov
cwtl
pushf
dec
imul
cmp
or
mov
das
sub
mov
push
out
mov
mov
rcr
jmp
lds
mov
push
fdivrl
fidivl
shr
mov
push
xchg
gs
outsl
fstps
cmp
stos
cmp
inc
mov
mov
xor
pop
test
mov
hlt
jmp
sub
jmp
movsb
in
loop
or
out
daa
fnstsw
jmp
movsl
xor
fwait
pop
es
iret
add
adc
clc
fwait
push
das
xor
sbb
push
jae
inc
les
sbb
push
xchg
sub
push
ret
mov
push
fcomps
mov
in
imul
mov
mov
jo
and
dec
rcll
into
pop
int
fwait
out
sub
pushf
push
cmp
mov
mov
jo
push
in
lret
sbb
sub
mov
xchg
push
shll
loop
mov
cmp
mov
leave
ljmp
int3
cmp
mov
xchg
cmp
imul
ss
notl
xor
adc
xor
fsubs
subl
fwait
imul
sbb
jge
mov
mov
sub
or
clc
repnz
or
mov
dec
into
add
adc
add
xchg
cmpsb
or
push
or
mov
jg
mov
fwait
jg
rolb
inc
and
xor
scas
mov
jmp
xor
les
dec
mov
bnd
lock
and
es
and
cmp
lret
mov
sbb
es
test
cld
ret
mov
jno
dec
push
adc
cmp
test
adc
sbb
sbb
imul
decb
jnp
pop
and
cwtl
xor
pushf
fs
sbb
hlt
cmp
hlt
enter
cld
int3
cwtl
adc
sbb
pop
mov
pop
xchg
pushl
inc
add
int3
jb
in
pop
punpckldq
push
shlb
dec
popl
lcall
sub
rcrl
es
scas
rorl
insl
jl
aam
pop
outsb
jle
adc
pop
mov
xlat
mov
pushf
imul
xlat
shll
sub
nop
xor
push
jnp
es
stc
mov
imul
push
xor
adc
dec
cmp
xor
mov
xor
mov
mov
scas
push
stos
shll
mov
mov
sub
shl
cmpsb
push
inc
cmp
sub
cvtps2pi
scas
sub
push
into
sbb
xor
jg
inc
aaa
pop
and
jge
je
fldt
sub
inc
cmpsb
inc
cmpsb
adc
ljmp
sub
and
or
or
cwtl
mov
sbbl
sbb
out
ja
dec
pop
ja
shrb
pusha
xchg
movsl
lock
sub
cmp
mov
pop
lods
scas
adc
outsl
jge
in
cmp
fucomi
push
jno
mov
mov
xor
fnstsw
out
or
xor
push
add
es
fwait
fs
mov
sub
ret
ds
mov
inc
jns
stos
lcall
into
imul
mov
loop
add
cltd
lock
hlt
push
nop
push
or
scas
push
push
mov
icebp
js
and
jge
imul
out
lret
scas
sahf
jo
loopne
jne
imul
or
shrb
inc
push
jg
mov
mov
leave
pushf
fbstp
lods
jle
jl
lods
aaa
and
add
adc
test
pop
inc
and
sbb
xor
hlt
subb
xlat
faddl
ret
roll
arpl
cli
and
faddl
mov
arpl
sbb
dec
ss
mov
sbb
sub
lret
mov
imul
scas
xor
xlat
ror
movsb
pop
pushf
mov
ret
mov
xor
cmp
pop
call
hlt
sub
shlb
imul
cmpsb
mov
adc
rcll
mov
in
xor
popa
sub
subl
cmp
repnz
add
mov
sbb
adc
outsl
jb
mov
or
sbb
stos
push
sti
mov
cli
js
fidivrl
into
clc
call
pop
xor
pop
add
cli
adc
popa
iret
outsl
cmp
subb
cltd
andb
and
mov
fwait
sub
add
jecxz
inc
mov
clc
fidivrs
dec
int
add
aad
and
push
inc
aas
mull
add
int
cmp
sti
adc
push
and
dec
aam
adc
xor
es
xor
and
cmpsb
xchg
and
shlb
je
jb
and
jne
inc
pop
mov
dec
dec
test
mov
or
aas
pop
pop
and
push
ljmp
testl
testb
in
jecxz
popa
imulb
gs
xor
cmp
out
mov
pop
out
and
adc
or
sbb
cmpsl
test
sub
call
xchg
adc
push
and
pop
mov
push
das
call
popf
cld
sub
movsb
mov
sub
or
shlb
sbb
xor
imul
scas
cld
jl
mov
mov
pop
push
xor
push
push
fldl
fsubr
and
and
inc
lea
mov
push
xchg
inc
dec
fsubs
mov
jnp
push
cs
addr16
add
cmp
rorb
xor
sub
xor
pop
push
bnd
mov
inc
scas
jmp
lds
loop
xor
lea
mov
daa
push
sub
stos
sbb
dec
loop,pt
xchg
and
das
pop
pop
xchg
cmp
xchg
fisubl
push
aam
inc
jl
es
pop
mov
cmp
or
pop
loope
sub
lods
cmpsl
shlb
xor
dec
jmp
outsl
and
mov
xchg
sbb
dec
enter
push
divb
fisubrl
xor
sahf
shrl
mov
stos
roll
add
psrad
xchg
adc
pop
mov
mov
scas
insb
jmp
push
push
in
xor
cwtl
xchg
es
insb
mov
and
jae
fstpt
and
cmp
movzwl
and
or
mov
and
stc
and
icebp
jnp
cmp
xor
mov
ret
push
mov
xor
adc
cltd
adc
push
mov
sub
or
aas
mov
dec
dec
push
cld
add
pushf
sbb
dec
mov
daa
inc
stos
mov
inc
adc
cmp
fcom
adc
fsts
mov
sbb
hlt
dec
fiadds
xchg
cwtl
bound
jecxz
in
add
jo
add
loope
xor
jecxz
mov
cwtl
lcall
dec
fistps
cmpsl
out
push
sub
xchg
pop
push
cmpl
xorb
pop
sub
xor
jmp
mov
cmp
sbb
outsb
mov
mov
sub
jge
and
ret
jle
push
push
sbb
cmp
pop
cmpsl
mov
xchg
in
or
xchg
mov
jmp
out
nop
mov
sub
lcall
jns
adc
and
clc
push
and
mov
test
and
push
ss
idivl
or
sub
mov
testl
jae
sub
stos
imul
sub
popa
inc
fimuls
inc
das
jne
ljmp
imul
xchg
aam
add
sbb
jecxz
adc
aaa
out
cwtl
mov
mov
fwait
cltd
sub
sub
mov
push
push
adc
inc
sub
pop
sub
and
xor
rclb
cld
push
enter
pop
sar
mov
jl
arpl
scas
xchg
lods
insl
cwtl
sahf
stos
jo
fwait
rorb
mov
daa
std
mov
sub
sbb
outsb
sub
xchg
test
test
fstpt
and
mov
aad
and
shrb
out
jge
mov
nop
ret
push
dec
neg
jle
stos
mov
lret
scas
jge
das
aas
and
inc
push
mov
icebp
out
or
lcall
push
add
fidivs
push
fidivrs
xchg
cltd
out
cmp
in
insb
fistps
imul
adc
push
inc
fsubl
mov
repnz
clc
jmp
ljmp
aaa
cmp
daa
mov
add
scas
mov
in
cld
imul
jge
sbb
adc
mov
and
in
mov
mov
adc
dec
xor
lods
out
xor
or
in
dec
dec
sbb
popf
sbb
rcl
hlt
xchg
ja
lret
xor
sub
cmp
push
jno
icebp
mov
add
aam
pop
out
jp
test
leave
adc
jns
mov
lcall
lea
shlb
xchg
or
mov
push
faddl
dec
lock
xor
loopne
js
mov
xor
push
cmp
fnstsw
dec
mov
add
popa
add
sbb
je
push
dec
inc
pop
jb
adc
mov
daa
push
mov
fxch
fsubl
imul
inc
in
loope
mov
fiaddl
cmp
mov
repnz
imull
adc
xchg
and
inc
cmp
push
and
shr
stos
or
fisubl
xchg
sahf
aaa
loop
ljmp
pcmpeqw
xchg
jnp
imul
push
loope
push
sub
adc
aaa
mov
dec
pushf
in
aaa
lods
mov
push
cmp
imul
mov
loope
mov
ja
sub
add
sti
jecxz
cmp
and
adc
lret
lock
inc
lock
pop
lahf
sub
outsl
mov
stos
ret
mov
or
mov
xor
int3
mov
test
sbb
pop
repz
lret
sub
popa
and
shrl
cmc
push
jae
je
clc
fmuls
divb
sbb
push
dec
loope
sbb
push
xchg
xchg
jle
imul
fsubrs
cld
mov
fs
or
imul
sbb
sbb
sbb
repnz
sti
imul
sbb
pop
sbb
cli
fidivl
adc
pop
cltd
adc
mov
js
xchg
sbb
fldt
push
scas
testb
maskmovq
mull
or
shlb
push
mov
sbb
jl
mov
hlt
imul
nop
add
or
sub
or
outsb
enter
jmp
dec
add
mov
and
mov
mov
sti
mov
mov
rcl
in
imul
or
sub
sbb
xor
in
jg
inc
test
pop
aas
pop
jne
sbb
xorl
add
les
cmpsl
clc
sub
and
mov
jo
dec
or
stos
je
fsubrl
inc
sbb
or
inc
jecxz
pusha
push
fildll
cmpsw
push
movsb
lods
sbb
enter
imul
rcrl
and
in
sti
fidivrl
pop
ljmp
fisubrl
jecxz
sub
mov
addr16
or
adc
push
fsubl
repnz
jle
sbb
push
loopne
imul
loop
aam
push
xor
mov
mov
and
sbb
aaa
fidivl
stos
dec
mov
sbb
mov
jp
inc
gs
or
xchg
out
xchg
sbb
sbbl
sbb
adc
daa
push
repnz
mov
rclb
pop
add
ret
popf
shlb
mov
xor
lds
inc
lods
mov
psrlw
adc
dec
pop
pop
add
mov
sub
push
jns
adc
shl
outsb
adc
jl
mov
out
push
and
test
or
add
mov
sahf
sbb
jnp
xchg
stc
push
shlb
mov
xor
sbb
int
daa
add
push
mov
sti
mov
lea
ret
cmp
mov
cmp
push
jnp
je
dec
cwtl
sub
test
mov
mov
inc
push
sti
cmp
push
mov
jmp
mov
push
pop
add
xor
std
mov
shrl
cld
dec
hlt
pop
cltd
cs
cltd
jbe
imul
inc
push
sub
xor
imul
mov
pusha
mov
arpl
gs
add
mov
dec
aaa
daa
pop
mov
jns
outsl
mov
pop
and
es
lock
inc
or
add
lds
aas
inc
rcrb
lea
rclb
cmovno
in
adc
inc
das
mov
add
push
les
fwait
test
inc
mov
xor
push
xor
jb
pop
cmp
aaa
sti
xor
xor
mov
lret
rcrl
ss
xchg
andb
ret
repnz
lds
mov
inc
repz
gs
mov
xchg
jle
dec
jo
xor
mov
addb
sub
pop
in
shl
mov
fsubrp
sbb
int3
lods
xor
sub
xchg
sub
mov
imul
lcall
mov
sbb
daa
mov
xor
adc
mov
out
mov
fwait
int3
push
mov
adc
test
inc
std
pusha
iret
outsl
lods
or
fmulp
test
test
or
jmp
outsl
lods
sub
lret
in
mov
rcr
push
mov
popa
fildl
xor
je
jnp
mov
adc
hlt
mov
lcall
int
aaa
cmp
subl
test
clc
shll
in
sub
fsts
or
cld
mov
dec
mov
sub
cli
repnz
mov
pushf
add
mov
ds
mov
pop
adc
cmp
popa
xor
or
cmp
jo
lds
jno
cwtl
xor
inc
inc
mov
push
pop
adc
push
call
dec
mov
hlt
ljmp
imul
test
dec
sbb
push
stos
adc
call
and
or
and
adc
fdivl
add
mov
and
das
repnz
or
lods
xlat
lods
mov
test
cmp
hlt
xor
or
es
sub
sub
outsl
cmp
mov
repz
mov
and
sbb
xchg
push
sbb
outsl
cmp
inc
fldcw
sti
jp
pop
mov
adc
xchg
fs
cmp
or
mov
sti
mov
xchg
sbb
in
mov
es
mov
and
lds
sub
mov
lret
mov
sbb
mov
aaa
jo
ficoms
sbb
jnp
mov
sub
fldl
pop
mov
xor
dec
loop
inc
stos
xchg
xor
inc
in
add
imul
xchg
insb
mov
xor
jp
pop
clc
dec
sbb
xchg
mov
loopne
dec
popf
mov
hlt
in
das
jle
mov
js
fcmovbe
or
notb
sbb
inc
dec
and
sbb
test
and
inc
insb
in
call
xor
pop
cmp
xlat
sub
test
xchg
inc
or
xlat
stos
sbb
or
dec
mulb
mov
ret
ficoml
ss
mov
cmpsl
lock
leave
add
and
xchg
mov
in
mov
cmp
sbb
pusha
scas
mov
ret
push
sahf
cmpsb
repz
mov
repz
pop
sbb
stos
adc
or
subb
flds
inc
and
fsubrp
dec
xor
scas
sub
pop
lahf
out
pop
nop
clc
repz
push
in
xchg
shrb
jmp
mov
adc
movsb
jo
hlt
outsl
clc
and
xchg
fwait
mov
clc
sti
dec
push
cmc
fstpl
sti
rol
cmc
ljmp
sub
hlt
popl
lods
xor
lret
xor
or
movsb
or
mov
xor
nop
outsb
fisubrs
xor
imul
sbb
icebp
mov
hlt
cli
imul
sbb
xor
mov
push
adc
stos
stos
and
cmp
mov
popf
call
xor
mov
add
sbb
pop
xor
das
jno
sbb
aas
and
mov
aad
sbb
lret
test
push
stos
repz
repz
repz
adc
repz
adcb
outsl
imul
test
mov
inc
and
mov
pmulhuw
sub
push
mov
sbb
xchg
push
mov
rcrl
mov
xchg
in
test
pop
out
jl
and
jg
mov
nop
arpl
push
or
cs
insb
sub
dec
insb
lock
mov
pushf
and
popf
insb
xchg
xchg
popf
in
andps
sbb
sahf
repnz
sbb
sbb
sbb
and
push
daa
cmc
fildll
pop
gs
movsb
xor
cmp
daa
js
pop
subb
adc
push
and
cltd
fsubl
sub
insb
ss
dec
call
mov
insb
ja
xlat
aad
xchg
daa
addr16
or
lea
cld
mov
movsb
shrb
cli
jbe
dec
inc
push
jp
insb
mov
repz
xchg
xchg
jle
roll
adc
jle
xor
insb
or
popf
mov
mov
imul
add
call
sub
hlt
or
xchg
and
sub
push
add
rcrl
jle
dec
ljmp
test
dec
call
daa
pop
sub
cmpsb
fstpt
pop
jl
or
dec
pop
mov
imul
pop
test
and
rcr
pop
lods
mov
fcoms
jb
lret
shlb
mov
jnp
and
mov
adc
insb
dec
lcall
jle
imul
xor
mov
inc
mov
jne
dec
stos
sub
cli
dec
inc
inc
xor
push
je
mov
movsl
call
cmp
mov
push
pop
cld
sub
sbb
push
ficompl
adc
mov
call
adc
sbb
lcall
aaa
xor
clc
popf
lds
lods
hlt
cmc
je
push
imul
mov
es
adc
mov
in
les
cmp
mov
popa
xor
mov
push
xchg
inc
sbb
pop
out
add
movsl
mov
clc
js
aas
mov
out
scas
xchg
imul
push
mov
fimuls
int
sbb
ja
aaa
push
pop
das
or
inc
pushf
xor
pop
ficompl
out
adc
xchg
sbb
test
or
movsb
sbb
lock
cmpsb
mov
lcall
pop
inc
push
dec
xchg
and
adc
push
sub
addr16
sbb
fiaddl
rcr
aad
pop
adc
mov
les
cmp
sub
mov
add
mov
mov
pop
lods
shr
xchg
int3
adc
mov
mov
xor
push
fmuls
pop
sub
jmp
cmp
sub
fdivr
adc
or
xchg
sub
cs
enter
sarb
gs
mov
fwait
dec
daa
lret
xchg
stc
mov
fisttpl
jnp
cmp
mov
mov
push
dec
repz
lock
mov
lock
pop
and
mov
mov
lcall
imul
sub
test
pop
mov
xchg
repz
dec
scas
xor
iret
ret
mov
imul
xchg
jge
sbbl
bound
into
ret
out
imul
fdivs
ficompl
test
xchg
bnd
xor
and
mov
push
xor
mov
mov
imulb
add
mov
sbb
adc
cmp
xchg
lds
das
subl
or
push
push
addr16
jmp
pushf
xchg
push
jl
push
imul
aas
fs
test
cmp
loope,pn
mov
cmp
and
shrb
inc
movsl
sahf
pop
mov
ljmp
mov
adc
jo
sbb
test
mov
adc
sti
or
mov
mov
xchg
jns
cli
sbb
cmc
sti
mov
pcmpgtw
and
ss
push
or
repz
mov
add
push
repnz
shlb
jo
and
enter
dec
imulb
push
clc
subl
popl
insb
pushf
mov
push
sub
xchg
insl
dec
jae
jo
add
int3
dec
push
cmc
xchg
sub
loop
add
adc
clc
hlt
or
xor
xor
fwait
mov
test
sub
pop
mov
adc
ficompl
mov
int3
add
mov
xor
scas
imul
call
sub
mov
jmp
popf
adc
not
mov
or
stos
into
lods
nop
lret
test
xor
push
pop
cmpsb
das
js
lods
cmp
pop
pop
negl
cmpsl
ss
loope
ds
repz
lcall
out
cmc
xchg
outsb
xlat
push
and
mov
adc
xchg
pop
cmp
in
ret
push
inc
stos
mov
scas
or
xor
or
push
inc
adc
unpcklps
arpl
adc
inc
mov
mov
jae
nop
cmp
mov
jecxz
pop
lcall
imul
mov
add
nop
test
test
cmp
xchg
lret
jne
mov
and
aaa
xchg
movsl
pop
pop
pop
mov
stos
push
sub
mov
inc
xor
fdivr
inc
out
mov
mov
mov
imul
jns
mov
shl
test
cmp
sti
or
inc
push
sti
xor
lea
test
inc
sbb
shlb
fsubrs
incb
sub
sbb
xchg
inc
ja
out
dec
rolb
mov
mov
lods
mov
imul
sbb
sbb
mov
rol
sub
xor
cmp
xor
clc
das
mov
scas
xor
sub
adc
and
cld
mov
sub
push
lock
lret
inc
xchg
mov
mov
and
mov
inc
repnz
fists
pushf
pop
xor
cmp
outsl
mov
js
mov
sub
scas
gs
nop
sub
es
subb
hlt
movsb
sub
ja
dec
sti
lds
daa
xor
adc
pop
lret
ret
dec
fwait
sbb
cwtl
das
xor
pop
daa
sub
adc
fwait
add
xchg
xor
mov
pop
and
push
daa
imul
dec
ss
inc
xor
leave
jns
pop
xchg
loop
sub
ret
push
imul
jnp
aaa
xchg
xor
sbb
in
imul
cli
fidivl
push
and
fdivrs
jle
fwait
ret
adc
aaa
cmp
jle
inc
jnp
ret
testb
dec
call
cmp
mov
testb
jae
int
ja
push
inc
inc
pop
adc
jle
push
cli
mov
jns
cmpsl
or
scas
add
ja
mov
outsb
repz
cmp
dec
mov
les
pushf
and
pop
add
xor
sahf
int3
xlat
cmc
adc
or
jp
and
repnz
xchg
xorl
ret
aam
gs
adc
nop
mov
xchg
adc
ss
sti
lods
and
xchg
pop
jmp
cltd
jb
sub
sub
jle
pop
sub
call
in
cld
outsl
lret
movsl
std
mov
cld
sbbl
mov
xchg
inc
jae
cwtl
stos
push
cmp
add
mov
lret
ds
mov
sbb
add
jl
lods
fisubl
mov
push
fs
sbb
pop
lahf
lds
negl
imul
push
in
and
jbe
psubsb
xchg
adc
jge
sbb
insl
sub
lock
xchg
sub
and
es
mov
push
mov
xchg
fsubr
mov
xor
fcmovnu
or
sub
aas
xchg
fstcw
xchg
cli
stos
sbb
mov
pop
mov
jno
adc
inc
jl
jnp
xlat
mov
in
xchg
cmp
and
aam
adc
cmp
stos
push
sbb
xor
das
xor
test
xor
out
and
mov
scas
push
lods
jl
xor
imul
inc
sub
nop
mov
xchg
sub
fcompl
inc
xor
or
sub
clc
lcall
gs
mov
mov
add
into
sub
lods
add
xor
imul
mov
scas
je
aaa
jg
mov
pop
cmp
sub
aad
test
leave
cld
xor
notb
int3
push
loopne
push
and
ret
jle
pop
jb
adc
sbb
mov
xchg
mov
sbb
mov
add
je
xor
js
lods
cmp
jo
adc
lret
inc
adc
and
cmp
mulb
dec
das
sub
or
push
lock
xor
in
ss
jmp
sub
jmp
jecxz
or
out
jmp
jg
adc
xchg
daa
mov
aas
repz
push
or
leave
sbb
popa
lret
je
dec
sbb
movsb
es
mov
mov
sbb
arpl
addr16
jns
pop
aad
inc
and
cld
scas
lods
bound
adc
mov
iret
out
les
repnz
jmp
bound
fisubs
shlb
add
cmp
aas
test
inc
or
xor
sahf
and
aad
js
sbb
jae
and
int3
ja
mov
inc
inc
xchg
je
push
imul
pop
mov
gs
jne
lods
sbb
xlat
mov
loopne
imul
shl
test
inc
sbb
mov
das
enter
std
test
xor
cmp
sub
inc
add
mov
lods
jecxz
sarl
jmp
clc
arpl
push
mov
scas
adc
fwait
outsb
or
fcoms
jmp
hlt
xor
sbb
pop
sub
sahf
jle
dec
or
inc
imul
or
rcr
push
mov
xchg
mov
cli
nop
in
aad
pop
cmp
fsub
mov
cmp
xor
divb
loope
jg
repnz
sub
add
scas
dec
push
ljmp
cmp
das
js
push
add
aas
cmp
maxps
jo
ljmp
sti
or
fimull
cmp
xchg
sbb
flds
xchg
dec
leave
lret
std
adc
mov
or
repz
xor
sbb
adc
dec
out
out
push
and
xor
les
mov
fs
and
mov
cli
dec
mov
aas
mov
or
mull
xchg
cmpsb
sbb
push
lods
addr16
pop
test
mov
and
stc
ljmp
es
aaa
stos
loope
loope
inc
imul
scas
push
mov
inc
int3
imul
stc
aam
jae
pushf
cltd
pop
cmp
cmp
loop
mov
hlt
adc
sbb
xor
repnz
addb
or
fldenv
sub
faddl
imul
add
xchg
shll
xchg
push
xor
mov
std
sbb
sbb
push
sahf
int
push
xor
ret
daa
and
cmp
aaa
stos
lret
lock
mov
pop
and
int
sti
hlt
sub
cmp
fdivl
mov
cmp
ja
sub
addb
dec
ss
nop
xchg
fadd
andl
inc
arpl
push
inc
fcoms
mov
in
mov
test
aad
xchg
mov
insb
inc
xlat
lock
xor
cmp
imul
scas
mov
es
push
into
sub
mov
inc
or
sbb
aad
or
int3
std
mov
ds
add
add
jp
sub
add
repnz
out
push
imul
mov
adc
xorl
push
imul
in
mov
data16
push
aaa
loope
test
mov
clc
sub
out
push
in
hlt
sub
push
das
mov
sub
into
imul
inc
sbb
imul
xor
or
pop
or
xchg
lret
xor
lret
loop
pop
mov
mov
adc
pop
mov
lret
push
lock
jg
das
bound
mov
mov
lret
test
and
nop
loopne
inc
xlat
mov
xlat
fwait
xorb
shrb
outsb
pop
jp
mov
stos
bound
jae
movsb
nop
arpl
sub
xor
mov
or
test
mov
add
push
pop
add
icebp
dec
lods
push
daa
push
mov
int3
mov
cmp
push
xor
mov
mov
movsb
pop
push
pop
pop
sbb
sbb
pop
aaa
pop
adc
adc
xor
or
or
mov
cmp
add
sub
insb
mov
aaa
in
sub
pop
stc
sub
lods
sub
inc
xor
sub
pushf
mov
adc
andb
lods
out
cmp
push
pop
jae
stos
pop
sbb
jg
inc
cmp
push
push
sub
daa
mov
imul
cmp
pop
add
gs
insl
mov
inc
loop
pop
rcr
iret
mov
popa
mov
mov
xchg
xor
adc
jle
enter
sbb
int3
jmp
add
cmp
imul
sbb
sub
mov
sahf
nop
ret
aad
outsb
sbb
lret
jle
clc
lock
lcall
push
mov
add
test
rolb
enter
test
stos
sbb
stos
push
fadds
and
xor
test
xchg
fcoml
sub
jnp
push
stos
test
scas
xor
mov
sbb
or
adc
adc
jl
sbb
ljmp
gs
xor
cmp
push
push
cmc
inc
insb
mov
or
mov
in
mov
mov
xor
jb
loopne
mul
pop
sti
mov
ret
cmp
adc
call
pop
mov
and
test
call
jae
inc
les
mov
loop
aam
lret
insl
inc
adc
push
pop
faddl
les
ud1
int3
fbstp
ret
test
fidivl
shlb
repz
mov
and
jl
sub
push
pop
loope
enter
pop
sub
cmp
stos
sub
les
mov
dec
pushf
push
inc
cmpsb
arpl
stc
sbb
inc
imul
sahf
inc
fisubs
insb
mov
test
repnz
or
loop
pushf
repz
sub
mov
insb
and
cmp
cwtl
jle
add
jge
jl
mov
xchg
mov
repz
in
insb
lods
mov
inc
addr16
lock
stos
mov
imul
adc
cmc
mov
cwtl
sub
divl
xchg
pop
mov
jae
pushf
sbb
mov
xchg
xor
stos
jecxz
test
inc
sbb
call
ds
jbe
and
xchg
xor
sub
and
jle
daa
inc
mov
cmpsb
cmovnp
int3
stos
xchg
sub
jle
gs
clc
popa
push
mov
cmpsl
cmp
xor
dec
xor
hlt
lcall
dec
adc
inc
cmpsb
lds
shll
sub
sti
cmpsb
sub
stos
xchg
lcall
xchg
arpl
aas
test
and
xchg
subb
inc
sbb
adc
daa
add
inc
lcall
add
or
sub
mov
mov
sbb
add
out
cmpb
and
and
mov
lret
jne
jecxz
sbb
sbb
cmpsb
lea
mov
and
dec
and
mov
xor
imul
pop
sub
push
xor
insl
and
in
leave
adc
jne
sub
and
adc
sahf
push
sbb
xor
stos
mov
sbb
sahf
sbbl
imul
out
outsl
push
mov
sbb
pushf
cmp
sub
xor
mov
and
mov
jg
aaa
loopne
add
testb
and
aaa
mov
mov
and
push
andb
mov
mov
jmp
inc
outsb
subl
inc
imul
fisubrl
jg
xchg
imul
fsubs
ljmp
hlt
stos
lods
repnz
shlb
mov
pop
cmp
movsb
xor
add
mov
addr16
adc
sbb
jge
sub
adc
repz
mov
fnstenv
test
adc
xor
xor
das
aaa
fwait
sbb
cld
ss
or
dec
and
cltd
jge
mov
pop
ss
inc
clc
xor
pop
addr16
xchg
rorb
popf
pop
mov
xchg
ffree
repz
std
mov
int3
mov
fldl
movsb
mov
stc
inc
adc
add
int3
ds
sub
es
insb
inc
sarb
es
jb
push
and
test
rorb
dec
mov
rolb
mov
aas
cmp
stc
cmp
sub
pop
cmpsb
nop
dec
cmp
fsubrl
mov
subl
dec
xlat
aaa
sub
cmp
ljmp
mov
lret
das
xor
mov
mov
les
notb
mov
mov
test
mov
mov
gs
lret
adc
adc
pop
adc
mov
in
jmp
sub
and
int
stos
in
imul
lret
jae
test
mov
addps
insl
cmp
inc
push
fcomps
or
into
out
lods
jns
fwait
adc
fsubs
hlt
cmp
or
movsb
icebp
mov
mov
ds
and
jne
cmpsb
mov
notl
push
xchg
pop
imul
shrl
inc
pop
in
popf
aaa
adc
push
pop
sub
xchg
test
lock
out
xchg
scas
mov
imul
test
jnp
fstps
call
insb
in
into
push
mov
ret
ss
sub
add
adc
addr16
jb
and
stos
cltd
in
lret
imul
inc
mov
lods
filds
xor
jle
aaa
movsl
push
lret
dec
jl
sbb
mov
ja
adc
jae
js
scas
imul
aaa
add
push
dec
leave
inc
data16
mov
leave
aas
repz
sub
dec
es
xor
in
fcoms
push
pusha
aad
inc
sub
shl
jae
js
fnstenv
stos
mov
sub
add
jnp
dec
int3
sub
jecxz
ret
jle
mov
sub
inc
push
mov
jge
inc
popf
rcrl
sbb
cld
mov
mov
jnp
loop
mov
or
add
xchg
push
sbb
int3
push
mov
jnp
test
inc
cld
or
fprem
xchg
push
dec
in
fdiv
ss
xchg
sub
outsb
ret
push
lea
pusha
addr16
mov
or
or
addr16
sbb
sub
sbb
lahf
xor
mov
sub
and
gs
imul
or
cmp
or
fisttpl
xor
xlat
test
mov
outsl
call
insb
int
pop
jbe
mov
add
lahf
lcall
imul
mov
sbb
xchg
imul
cltd
arpl
mov
int
sbb
mov
imul
imul
lret
push
cmc
mov
sub
out
pop
lret
ret
cmp
test
ret
fadd
insb
in
fnclex
testb
or
sub
sbb
push
shlb
xchg
xchg
ja
pop
cli
or
adc
push
shl
mov
add
cmc
sub
inc
fdivr
mov
pop
lahf
call
movsb
and
or
and
sbb
mov
cmp
sbb
push
dec
xor
push
movsb
xchg
mov
leave
in
fwait
mov
sbb
mov
dec
lret
mov
ss
call
inc
test
movsb
fistl
sbb
sbb
mov
nop
lcall
cmp
in
mov
adc
pushf
mov
roll
cli
mov
jle
push
mov
sub
es
add
out
mov
in
sbb
ss
lcall
cs
xor
mov
sbb
sub
decb
jmp
push
xchg
mov
faddl
sarl
test
push
pop
das
pushf
mov
loop
mov
mov
inc
mov
in
dec
aas
rclb
mov
jmp
jp
sub
mov
clc
ss
add
lcall
pop
sub
jmp
and
sub
mov
es
ja
imul
aad
pop
aad
sbb
test
cli
test
pop
xor
test
loop
shlb
packssdw
mov
ja
adc
cmpsb
fldt
fiadds
fisttpl
clc
sbb
int3
dec
cmpsb
jmp
loopne
adc
xor
mov
mov
sub
jae
cmc
mov
cmp
mov
adc
es
in
inc
stc
std
xchg
js
push
push
rcrb
orb
rorl
icebp
clc
stos
sub
dec
xchg
dec
sbb
mov
ret
jge
dec
xor
and
out
stos
dec
inc
pop
xor
pushf
daa
aaa
out
xchg
xor
mov
lret
aad
es
sbb
push
xor
cs
inc
pop
and
adc
xchg
sahf
ja
push
adc
imul
xchg
jbe
push
repnz
sub
adc
adc
sbb
inc
mov
adc
test
cmp
subb
int
repnz
daa
int
sbb
xor
in
pop
jmp
cmc
add
stos
cmp
test
icebp
adc
pop
cld
test
les
push
push
sub
ss
sbb
sbb
shrl
lret
sub
repz
das
mov
cmp
inc
aaa
fwait
ss
jns
mov
add
imul
inc
lahf
push
fsubs
jae
lret
hlt
xor
int
sbb
and
mov
jg
aas
adc
jno
hlt
out
sub
lods
adc
arpl
mov
or
cli
sbb
cmp
aaa
ds
pop
sbb
jle
or
sbb
lds
xor
repz
cmp
mov
sub
cltd
leave
pushl
xchg
push
pop
mov
mov
imul
sub
sbb
inc
outsb
gs
daa
mov
add
fdivs
adc
xchg
test
stc
sahf
jp
imul
lahf
dec
aad
mov
repnz
mov
xchg
mov
sbb
std
pop
jae
xor
adc
loop
push
push
push
cmp
leave
mov
aam
push
stos
outsb
adc
jle
sub
or
push
adcb
inc
mov
mov
lret
jmp
jnp
and
mov
sub
xor
pop
add
sub
xchg
popa
or
sbb
mov
daa
xor
sbb
rorb
mov
sub
outsl
je
lods
stos
jmp
sub
scas
or
hlt
cltd
imul
mov
test
push
jl
mov
outsl
outsl
test
dec
sub
mov
mov
lock
sub
imul
or
pop
cmpsl
push
xchg
pushf
mov
pop
cmp
dec
pop
cmp
mov
cmp
aas
dec
push
imul
cmp
push
in
xor
repnz
incb
push
adc
mov
cmc
dec
daa
sub
jo
dec
lods
mov
icebp
ss
push
push
icebp
push
adc
jae
cmp
cmp
imul
xor
pop
and
push
and
sbb
sub
mov
mov
ret
and
and
iret
scas
cmp
mov
insb
mov
ljmp
sbb
pop
ret
jne
fcomps
stos
sub
sbb
clc
sti
mov
scas
ss
jae
cmc
push
out
sbb
cmp
pop
xchg
hlt
push
cmp
dec
xchg
hlt
inc
andb
xor
pop
test
shrb
sub
mov
sbb
mov
sbb
sbb
cltd
pause
sbb
and
inc
push
lret
sbb
jns
inc
mov
inc
sbb
dec
mov
push
in
adc
and
out
xor
mov
sbb
adc
lret
stos
sub
xorl
mov
and
pop
xor
fdiv
add
pop
pop
xchg
sbb
jp
push
in
iret
cmpsb
in
rorl
pop
ret
pop
stos
aad
push
adc
insb
test
mov
sub
je
dec
xchg
fs
or
clc
mov
xchg
hlt
and
xchg
hlt
xor
aad
fbld
je
sub
lods
ret
jmp
iret
in
and
sbb
cmpsl
ret
xchg
mov
or
cmp
pop
push
dec
push
mov
dec
or
pop
cmp
rcrl
pop
sub
sti
imul
push
loope
mov
or
xchg
adc
and
ds
ja
sbb
add
sbb
inc
xor
adc
testl
aas
cltd
sub
pop
xor
sbb
arpl
loopne
pop
jbe
ja
xor
dec
repnz
pop
xchg
and
cli
int3
push
das
push
xor
push
sahf
jmp
inc
insb
das
iret
cmp
jno
jle
aad
rsqrtps
dec
push
xor
popf
cmpsl
cmpsb
sub
imul
mov
pop
push
mov
shrb
jo
and
pop
call
call
sub
dec
xchg
pop
imulb
loopne
es
sub
stos
in
mov
add
and
inc
sarb
dec
push
pop
jb
inc
faddl
cmpsb
xor
pop
mov
dec
cmpsb
dec
push
lods
fsubrl
cmp
mov
adc
sbb
das
jmp
stc
xor
xor
imul
insl
sbbl
gs
dec
mov
mov
mov
lods
jp
push
ja
push
add
dec
xor
sub
pop
sahf
sti
mov
lcall
fwait
push
pop
push
inc
sbb
push
cmc
test
sbb
inc
sub
xorl
adc
out
inc
dec
clc
xor
xchg
mov
xor
fst
outsb
cwtl
or
mov
scas
iret
stos
pop
out
testb
stos
rcrb
rcrl
push
mov
push
outsl
push
cmpsb
push
push
daa
adc
xchg
xor
repnz
push
or
push
dec
push
mov
aaa
xor
sub
mov
sbbb
and
jo
stos
sub
sub
dec
push
jp
cmp
dec
xlat
lret
repz
mov
fcoms
mov
cmp
xor
and
mov
psubusw
js
push
pop
and
loope
cmpsb
jmp
pop
push
adc
inc
jbe
adc
jb
cmp
mov
bound
add
xor
enter
subb
push
clc
push
fstl
lret
cli
jecxz
xorb
or
imul
and
jg
enter
daa
arpl
std
push
cli
mov
scas
jb
movsb
xor
hlt
sub
xor
std
mov
lods
push
inc
sub
out
jecxz
roll
sub
into
mov
lcall
call
movsl
sbb
fcom
mov
cmp
call
xchg
xchg
jmp
mov
sub
nop
pop
xor
ja
xor
sbb
push
roll
popf
rcrl
rolb
cmpsl
and
adc
movb
xor
inc
pop
flds
and
pop
jmp
add
das
xlat
jnp
adcb
in
sub
jne,pn
sub
mov
mov
cmp
and
scas
scas
dec
imul
mov
fcompl
andb
imul
fisubrs
sbb
daa
imul
iret
dec
test
cli
repz
xchg
cmp
sbb
push
xor
jno
sti
add
iret
sbb
idivb
loop
mov
cwtl
aaa
pop
push
mov
test
enter
test
adc
dec
push
imul
inc
psubq
sbbb
push
loopne
imulb
sbb
xchg
lods
fwait
xchg
push
popa
dec
int
xor
insb
cwtl
iret
cmpsl
mov
ja
pusha
icebp
hlt
adc
loope
faddl
xor
and
hlt
xchg
lock
adc
push
movsb
jbe
ret
mov
call
mov
inc
gs
ss
cmp
inc
xor
fsubs
adc
push
xlat
in
imul
aas
inc
jl
pop
stc
cmp
adc
cmpl
pop
lods
imul
je
jecxz
stos
loop
addr16
push
out
sbb
cmp
testl
lods
push
lahf
addr16
inc
ds
in
mov
out
jl
push
adc
loope
loopne
mov
sbb
mov
nop
stos
xchg
push
and
ret
xchg
lea
into
mov
add
ss
or
pop
dec
dec
adc
and
gs
xchg
scas
cmpsl
and
push
fcoml
xchg
pop
xchg
insl
mul
add
adc
pop
lock
adc
push
mov
xchg
fiadds
mov
inc
or
repnz
in
or
sahf
call
cmpsl
pop
imul
xor
daa
jecxz
inc
push
push
ds
insb
mov
sbb
cld
inc
cld
xchg
imul
cwtl
add
lcall
es
jl
iret
hlt
lods
cmp
int3
cmpb
mov
cmp
loope
stos
jb
test
scas
mov
pop
imul
push
cmpsb
stos
jmp
fwait
adc
int
dec
and
push
cmp
gs
adc
call
movsl
daa
stos
xor
and
xor
xchg
lea
ljmp
xchg
adc
mov
mov
mov
out
pushf
and
xor
ss
gs
xchg
dec
fstl
outsb
arpl
out
dec
inc
jo
inc
mov
push
xor
and
mov
insl
call
and
and
cmp
add
xchg
jl
nop
jo
and
xor
push
mov
ss
mov
mov
cmpsb
dec
outsl
sub
adc
or
cmpsl
xchg
gs
movsb
cmp
lret
mov
sub
mov
xlat
or
dec
test
fisttps
loop
lret
cmpsb
cmp
xor
mov
xor
xchg
cmp
aaa
popf
xchg
mov
xchg
jbe
and
push
inc
cltd
add
adcb
jne
sbb
push
in
push
sbb
push
aas
repnz
mov
mov
push
cmpsl
sbb
shlb
add
xchg
cmpsl
fistpl
lret
mov
cmp
cli
push
pushf
adc
fisubl
and
jo
into
and
mov
fldt
and
hlt
aas
gs
dec
cltd
ljmp
jb
adc
mov
dec
cmpb
jp
hlt
push
jl
hlt
adc
mov
pop
sbb
repnz
inc
test
mov
fisubl
or
push
jmp
or
sbb
stos
stos
cli
outsb
addr16
xor
lret
sub
stc
mov
stos
mov
popa
aam
dec
mov
inc
push
sub
cli
stc
and
pusha
xchg
test
mov
lods
and
lcall
faddl
inc
ja
sbb
sub
mov
mov
les
cmp
cltd
jmp
or
aas
sbb
add
xchg
xlat
add
xchg
adc
stos
insl
mov
stos
insl
inc
movsb
adc
out
mov
lods
push
adc
mov
ljmp
xor
in
cld
shlb
adc
push
xchg
dec
mov
or
int
sub
jmp
stos
mov
sahf
pushl
movsb
cmpsl
into
loop
pop
jmp
jnp
lods
jle
ret
lcall
inc
cld
dec
sub
insb
mov
mov
rorb
push
push
sub
xchg
push
or
sub
sub
adc
sbb
cmc
lahf
pop
mov
xor
daa
je
xor
xor
add
sbb
ror
mov
mov
test
sub
ds
les
xor
hlt
xchg
cmp
mov
push
mov
xor
es
inc
pop
xor
insl
xor
mov
mov
in
cmc
clc
xchg
add
pop
push
mov
fsubr
inc
lock
mov
cmp
and
mov
shrl
int
mov
sbb
and
sub
mov
pushf
xor
cmp
xor
stos
push
movsl
lea
aam
sahf
stos
and
cld
sbb
adcl
add
jle
add
lock
stos
fmull
adc
das
sub
cmp
dec
xor
sub
xchg
cli
sub
jne
add
andb
jns
add
paddb
cmp
outsl
pop
sbb
push
icebp
hlt
stc
push
pop
and
out
insl
mov
loop
mov
dec
push
lods
cmpsb
cmp
mov
mov
mov
cmc
int3
movzbl
dec
xor
sub
dec
or
test
jns
sbb
lock
ss
add
jae
sahf
test
add
sub
dec
add
sbb
lahf
cmp
pop
dec
mov
push
icebp
sti
adcb
pushl
faddl
stos
add
xchg
cmpsb
loopne
mov
lgdtl
sub
add
add
aam
ret
inc
hlt
xchg
cld
add
ret
roll
ret
repz
pusha
fsubrs
xchg
jnp
mov
jp
call
xchg
push
pop
pop
and
pop
mov
mov
lods
pusha
test
stos
cli
out
aas
xor
divb
xchg
xchg
mov
dec
mov
cmp
xor
or
add
lahf
mov
clc
push
xor
lcall
push
mull
push
pop
sti
sub
or
add
in
add
and
cmpsb
aam
and
cwtl
or
add
mov
add
clc
lret
mov
or
add
dec
in
mov
mov
cmp
push
jns
daa
mov
push
and
xor
outsl
jns
pop
sbb
mov
xchg
stos
fwait
xor
mov
daa
pop
lahf
call
sub
fisttpll
cmpsl
aas
jecxz
in
aas
outsl
dec
sahf
mov
or
div
mov
dec
sbbb
adc
mov
jge
xor
add
es
ja
gs
in
pop
sub
add
mov
adc
loopne
xchg
mov
sub
scas
imul
inc
mov
cmpsb
sbb
mov
push
add
icebp
addl
mov
and
pusha
imul
popf
push
test
ja
nop
lret
adcb
fcmovb
dec
sbb
ficomps
shlb
xor
inc
dec
movsb
jecxz
jb
negb
sub
push
test
hlt
scas
xchg
sahf
push
sub
mov
pop
pusha
pop
or
inc
sbb
jmp
movsb
test
push
cmp
inc
imul
adc
int3
push
sti
imul
testb
pop
push
faddl
dec
cli
adc
gs
shr
and
aam
cwtl
loopne
fldcw
cmpsb
mov
add
scas
dec
cltd
test
and
jne
sbb
sub
xor
adc
sbb
daa
xor
inc
lcall
inc
out
shlb
mov
call
and
ja
js
sbb
ret
or
mov
addr16
sub
cmp
pop
movsb
add
mov
mov
dec
dec
push
add
movb
insb
out
jg
insl
sbb
notl
mov
mov
cmpsb
mov
cld
mov
add
mov
jae
and
pop
test
mov
push
sarb
ljmp
imul
das
pop
xchg
push
push
cmc
or
jae
shrb
shll
dec
mov
cmp
sbb
shrl
movntq
scas
push
sbb
movsl
mov
xchg
xor
movsl
xor
inc
xchg
inc
addr16
mov
adc
and
scas
jbe
dec
push
rcr
int
fsubl
xor
add
jecxz
in
stos
xor
mov
and
gs
stos
xor
xor
xchg
imul
negl
mov
add
clc
and
push
push
bnd
push
cld
add
imul
jns
and
iret
js
adc
push
jge
cmp
jns
inc
out
leave
lret
mov
push
cwtl
lods
push
loop
inc
dec
cltd
lods
das
orb
sahf
cmpb
inc
cmp
stos
adc
or
inc
adc
mov
push
aaa
int3
mov
dec
test
lret
clc
fdivrl
hlt
push
add
cmp
call
int3
and
xchg
fwait
sub
mov
lcall
cmpsl
cld
or
sub
imul
jmp
js
and
or
inc
xor
pop
and
fbld
aam
mov
jmp
pop
in
xor
fcompl
push
sub
cwtl
test
negl
stos
cld
add
xchg
lret
cmpl
and
es
sub
andb
push
pop
shll
dec
mov
or
mov
mov
fisubrl
sbbb
stos
xor
pop
and
jae
das
pop
jl
scas
imul
imul
in
adc
fsub
rorl
cmp
pcmpgtw
call
gs
js
popf
mov
scas
mov
das
mov
inc
or
ja
cs
adc
mov
test
fldl
lods
xor
lds
stos
xor
fsubr
lret
in
xor
scas
push
out
imul
cmp
outsb
mov
jle
out
cli
test
jo
mov
xchg
mov
mov
lods
sub
inc
mov
outsb
out
and
cmp
adc
pop
dec
cltd
adc
mov
sbb
mov
ds
test
sbb
hlt
adcb
lods
mov
adc
or
das
xchg
rcrb
imul
mov
lods
pushl
test
pop
pushf
lods
mov
jnp
and
xchg
out
pop
inc
das
pop
jl
mov
adc
inc
test
hlt
pushf
je
arpl
mov
adc
xor
mov
sub
jae
jle
daa
es
mov
dec
sub
mov
dec
shll
adc
pushf
aam
and
mov
xchg
mov
pop
pushf
mov
jns
adc
mov
aaa
ljmp
xchg
cmp
mov
dec
fcomp
xchg
xchg
repnz
inc
int
mov
mov
sub
gs
xchg
xlat
cli
repnz
lods
jmp
and
adc
pushf
lods
push
lcall
xchg
outsl
cli
cli
shr
cli
adc
or
pop
pushf
nop
lods
repz
stos
xchg
test
mov
mov
ret
fdivrl
sbb
sbb
and
ss
sar
add
mov
cli
xchg
scas
scas
or
fwait
aaa
sbb
and
mov
sub
mov
cmp
cli
pop
int
mov
and
push
cmp
cli
ljmp
into
pop
repnz
repnz
insb
insb
clc
xchg
mov
jmp
push
ljmp
cld
imul
adc
ret
pop
pop
cmp
out
mov
pop
hlt
aaa
sub
pop
aam
add
imul
jg
mov
and
xchg
sbb
mov
xor
in
ss
data16
or
mov
es
out
sbb
sub
daa
mov
lahf
sti
lods
scas
cmp
mov
sbb
or
in
pop
lds
lods
adc
mov
hlt
sbb
out
fstpt
clc
cmp
and
pushf
adc
adc
mov
cmp
ljmp
in
xchg
pusha
std
jbe
mov
les
sbb
mov
je
clc
lea
xor
sub
idivb
das
xlat
lock
cwtl
aas
jnp
roll
mov
adc
jnp,pn
mov
cltd
inc
mov
jmp
mov
mov
mov
cmp
movsl
out
mov
fsubrs
lods
mov
clc
jp
jmp
sbb
insb
xchg
and
dec
jl
gs
and
pop
pop
mov
push
les
xchg
popa
pop
leave
mov
jg
push
out
pop
mov
mov
out
inc
in
xor
ret
fwait
push
and
mov
movsl
gs
aaa
xchg
jo
repnz
mov
mov
sub
gs
push
shl
mov
stos
mov
cli
idivb
int3
cli
push
negl
hlt
loopne
loop
daa
or
notl
adc
dec
sub
ret
fcoml
mov
mov
sbb
mov
cmp
or
mov
mov
cmc
dec
mov
movsb
out
test
sub
shrl
xor
lahf
sbb
testl
outsb
push
dec
pop
pop
dec
xchg
loop
jb
sub
dec
sahf
dec
jmp
fdivl
out
push
add
sub
jg,pt
mov
dec
mov
sar
outsb
pop
xchg
insl
dec
rcll
mov
or
scas
cli
in
xchg
cmp
imul
les
and
cmpb
cmp
repnz
and
push
adc
ret
fs
push
and
rol
loope
loope
imul
mov
outsb
sub
sub
inc
ja
push
or
and
adc
test
inc
adc
mov
dec
clc
aas
mov
or
nop
dec
rorl
nop
lcall
cltd
sahf
ret
pop
jnp
aas
jnp
pop
cs
stos
pop
imul
dec
loop
xlat
sti
adc
cli
sahf
xor
stc
jae
popa
inc
pop
cld
xor
dec
stos
loopne
add
add
sbb
mov
mov
ss
pushf
data16
pop
dec
dec
xlat
lea
sub
fs
clc
scas
cli
jne
push
sub
pop
pop
lcall
mov
add
icebp
das
jle
jae
gs
sub
pop
out
sbb
dec
mov
mov
lret
inc
mov
sub
sub
out
mov
cmp
imul
cli
jb
fnstcw
imul
sub
repnz
mov
inc
test
sub
inc
lret
mov
push
sbb
xchg
mov
dec
dec
jle
mov
sbb
mov
lret
mulb
nop
mov
call
sbb
pop
sub
push
test
push
jae
sbb
xchg
mov
inc
negb
sbb
sub
ds
ljmp
scas
cmove
mov
cmp
jg
sub
cmpsb
cmc
inc
stos
push
mov
mov
test
sub
notl
sbb
scas
push
jo
push
pop
ret
push
mov
add
je
jno
pop
jnp
add
xchg
imul
lret
data16
addr16
out
call
sbb
aaa
out
es
lods
mov
xchg
xchg
ljmp
sti
xor
outsb
std
inc
jecxz
mov
lret
push
pushf
sub
icebp
xor
nop
mov
lods
xchg
ret
mov
hlt
lea
sbb
loopne
stc
push
stc
imul
dec
jns,pt
sbb
xchg
mov
mov
shl
repnz
popf
leave
jecxz
cmp
mov
cmp
jnp
fs
jb
or
out
cmp
gs
les
ljmp
fsub
gs
out
sub
cmp
out
test
stos
and
push
mov
flds
and
cwtl
ret
xor
imul
ja
nop
jnp
sbb
xchg
xor
sub
js
in
mov
jp
mov
aaa
sbb
repz
lods
and
inc
mov
sbb
pop
push
push
movsb
daa
dec
xor
cwtl
sub
mov
and
pop
dec
cmp
jg
sbb
sbb
jge
sub
mov
adc
jb
adc
jg
hlt
je
inc
movb
fsubrl
scas
pop
decl
rcrb
daa
sub
sbb
aaa
imul
fisubs
aam
sbb
je
and
out
fadds
adc
inc
inc
out
fwait
scas
mov
ljmp
xchg
mov
dec
pop
mov
push
lds
mov
push
fbld
scas
xor
sbb
sbb
mov
insb
xchg
push
sbb
inc
cmp
cmpsl
or
pop
ror
fdivs
sbb
mov
in
aaa
scas
in
leave
test
es
mov
fimull
sbb
mov
cmp
pushf
xchg
in
scas
add
jl
dec
jg
xchg
xchg
testb
jo
insb
sbb
sbb
stos
in
gs
push
inc
push
sahf
sbb
add
pushf
xor
stc
cltd
push
mov
icebp
push
in
push
faddl
stos
pop
adc
int
sbb
insb
cld
push
imul
std
xchg
pop
ret
dec
adc
xchg
add
popl
xor
cwtl
pop
sub
cmp
pop
cmp
out
and
pop
dec
pop
int
vmovdqu
cmpl
cs
out
addr16
xor
jmp
js
adc
fsub
mov
fidivrl
or
ljmp
sbb
xchg
out
add
lock
adc
and
rcrl
push
push
pop
pop
out
dec
in
inc
mov
ret
sub
xor
mov
pop
xchg
cmpsb
lock
xor
ss
sbb
mov
js
dec
aas
pop
and
adc
push
in
xchg
jecxz
xlat
int
and
sub
sub
lock
dec
xchg
adc
mov
fwait
gs
push
iret
xchg
pop
test
sti
nop
insb
mov
mov
pop
sti
hlt
xchg
dec
call
add
pop
push
xchg
ja
jg
and
nop
inc
xor
xor
dec
and
xchg
or
push
xor
sub
mov
imul
cld
jecxz
cld
mov
fucomp
orl
out
fdivrs
sbb
mov
add
into
inc
add
fs
ss
dec
gs
dec
test
xchg
imul
cld
sti
pop
xor
adc
imul
pop
les
add
daa
sub
cli
and
fistpll
xor
adc
std
in
xor
dec
stos
dec
push
sahf
sub
inc
js
mov
mov
adc
lret
das
aam
xor
jae
mul
dec
aad
xchg
gs
cmovne
dec
sub
xor
sahf
adcb
fisubrl
add
lods
arpl
push
sbb
loopne
andl
sbb
aas
adc
pop
aaa
cmpsl
jbe
clc
inc
or
in
fisttpl
sbb
shlb
test
clc
push
xor
lods
pop
in
adc
insb
jecxz
lcall
push
sbb
sub
sbb
fwait
bnd
cli
add
std
jo
test
rcrl
mov
adc
inc
xor
adc
mov
sahf
pop
arpl
sbb
lock
pop
push
push
push
lea
das
mov
jl
bound
push
ja
or
gs
pop
out
faddl
ret
mov
mov
cmp
sahf
push
push
iret
pop
shl
mull
pop
in
mov
dec
sub
push
gs
and
adc
push
add
dec
mov
sbb
inc
sti
divb
loop
loope
xor
sub
or
je
cmpsb
push
sub
mov
gs
jbe
sbb
add
inc
xor
mov
sub
test
adc
in
jb
or
inc
pop
out
ja
sub
icebp
and
cltd
ss
fidivrs
and
cmpsl
mov
out
fcmovnbe
push
out
sbb
jp
in
jne
mov
cmp
into
dec
mov
push
out
gs
dec
jge
lods
aad
pop
loopne
pop
adc
sti
mov
pushf
cwtl
sbbl
mov
pop
mov
ret
sbbb
rcll
in
mov
out
mov
add
mov
ds
push
rcrb
pop
or
mov
jb
sbb
push
ret
add
es
shl
dec
cld
pop
add
mov
lcall
subb
arpl
push
adc
lret
push
xchg
nop
jecxz
xor
imul
loopne
and
int
lahf
test
ja
sbb
aaa
adc
mov
push
imul
insl
cltd
movsb
popf
fsts
lods
and
fs
fwait
sub
lea
jecxz
xor
lcall
mov
xlat
xchg
pop
cltd
in
xlat
jns
mov
pop
pop
popf
out
adc
inc
test
fbld
adc
sahf
imul
dec
pop
add
dec
xchg
jnp
cs
sbb
jne
ljmp
imul
pop
jns
push
stos
push
movsl
pushf
cbtw
sub
ja
or
pushf
xchg
sub
add
aas
sbb
mov
cmp
or
andb
jb
push
push
sub
clc
and
inc
test
lds
iret
repnz
outsl
test
or
sahf
lods
lret
and
shlb
xor
push
imul
mov
cmp
fimull
lret
mulb
mov
out
xor
inc
pop
sub
test
ja
test
stos
mov
cli
xor
push
xor
insb
insl
add
sub
lea
call
popf
iret
insb
aaa
inc
sub
xor
pop
cmp
les
loop
insl
pusha
adcb
dec
xor
xchg
xor
or
add
jecxz
jp
jns
ss
jl
pop
imul
ss
xor
push
daa
ret
leave
icebp
xchg
fdivr
push
gs
or
push
data16
xchg
inc
jns
inc
xor
icebp
or
adc
jae
into
mov
mov
repnz
or
leave
pop
cwtl
jb
cmp
outsb
mov
aaa
insb
ret
push
mov
xor
jecxz
and
ss
add
call
imul
mov
mov
nop
sbb
pushf
iret
add
xor
mov
pop
arpl
sbb
outsb
push
sub
stc
sub
xor
push
or
imul
or
movsb
cli
sub
imul
jge
dec
test
mull
sti
sub
imul
mov
fistps
gs
mov
out
xor
sahf
mov
andb
hlt
jnp
fwait
dec
sub
mov
add
xor
push
and
mov
lcall
and
icebp
sub
call
fstpl
lea
xor
cwtl
test
xor
lea
add
sub
movsl
pop
call
add
aas
imul
sub
inc
add
das
dec
mov
sub
pop
fs
mov
mov
fldcw
sub
cmpb
jbe
loopne
movsb
ja
xor
mov
rclb
jge
inc
xor
lods
call
adc
sbb
sub
jne
pushf
inc
sahf
jecxz
sahf
mov
cli
fdivrs
aaa
in
movb
and
mov
jae
outsb
es
mov
das
dec
dec
xor
inc
outsl
ss
pop
cmp
xchg
xor
lret
test
idiv
inc
jle
xchg
dec
jge
sub
or
mov
inc
pop
movsb
mov
push
pusha
filds
mov
mov
stos
mov
fisubl
push
nop
mov
or
scas
aaa
add
dec
or
sub
subb
dec
ret
lret
lea
ss
out
scas
mov
adc
sub
imull
pop
mov
fistpll
stos
xor
mov
push
mov
or
or
ret
xchg
stos
pop
sysexit
call
negl
or
inc
fidivrl
mov
imull
negl
sub
stos
stos
cmp
test
push
lods
mov
gs
dec
imul
pop
inc
pop
and
cmp
sub
test
fmull
xor
sub
pop
lret
pop
xor
lcall
dec
mov
xor
adc
mov
cmp
lods
inc
bound
pop
call
sub
aaa
push
and
test
loopne
or
xchg
fs
push
out
dec
mov
adc
sub
idivl
push
sub
jbe
mov
mov
arpl
sbb
add
jp
xor
neg
shrb
adc
test
mov
movsb
adc
lock
adc
and
jo
inc
psubd
call
xchg
dec
push
lea
adc
pop
mov
mov
rcl
outsl
daa
ss
and
lods
cmp
xor
sub
scas
clc
xor
ss
cmp
data16
xchg
cmc
in
sbb
inc
dec
daa
inc
xlat
pop
repnz
push
hlt
sub
aam
pushf
mov
ret
loop
xor
stos
aas
mov
or
jb
sbb
push
or
pop
sub
mov
lock
adc
arpl
add
jl
pop
js
xor
imul
mov
mov
lock
mov
pop
gs
fwait
pop
or
mov
les
jmp
in
push
or
pcmpgtw
dec
imul
push
mov
fidivs
test
repz
lock
sub
cmp
inc
dec
pop
hlt
jp
call
out
mov
ja
jg
adcl
fs
sti
daa
xchg
xor
mov
int
inc
sarl
nop
jo
xorb
packssdw
pop
test
mov
imul
addr16
jl
fsubrl
mov
xor
push
out
sbb
cltd
dec
xor
stos
les
pop
mov
cmp
xor
jnp
ret
stos
xchg
sub
jecxz
sub
pop
ja
aas
cmpsl
lret
push
pop
gs
out
adc
hlt
movsb
add
jp
xchg
or
in
cli
mov
mov
lret
sub
jecxz
hlt
mov
xor
inc
and
rcrl
add
xlat
lds
and
fs
not
addr16
popa
adc
testb
push
imul
push
aad
int3
jle
xor
andb
scas
imul
push
movsl
lcall
in
imul
adc
sahf
add
repz
inc
repnz
mov
xorl
outsl
cmp
out
dec
mov
in
jecxz
cld
es
das
or
scas
int3
cli
loop
and
xor
out
ror
pop
push
adc
shrl
int
jle
sbbb
xchg
xchg
repz
and
inc
sbb
into
imul
pop
pop
iret
aas
add
push
pop
sahf
or
or
inc
pop
sbb
inc
inc
xor
xor
movaps
cmp
enter
push
mov
mov
xor
inc
mov
xor
sbb
mov
mov
enter
fdivs
sbb
clc
inc
imul
adc
pusha
add
arpl
adc
or
and
leave
pusha
in
adc
sub
mov
lock
sbb
imul
subl
fimuls
ret
sbb
pop
lret
sub
push
int3
dec
cmpsl
dec
stos
adc
pop
dec
xchg
push
xchg
jns
sub
cmp
adc
xor
out
in
pop
and
push
stos
inc
stos
int3
jl
mov
ss
lods
push
and
sti
pop
fcoml
mov
dec
repz
arpl
fcomps
cld
cmpsl
mov
mov
pop
loope
xor
inc
ficomps
out
xor
adc
push
pop
or
and
loop
mov
mov
into
cmp
lret
mov
addr16
and
mov
push
movsb
add
rcrl
inc
jae
out
sub
hlt
loop
mov
lock
and
shrb
mov
jmp
popf
push
pushf
jne
push
repz
mov
sub
shlb
mov
mov
ss
push
ljmp
mov
into
add
xor
pop
adc
dec
cmp
sub
push
sbb
push
add
and
cmp
stos
loop
mov
xchg
mov
cwtl
adc
lcall
sub
xor
stos
ljmp
push
inc
pop
inc
mov
xchg
pop
jge
imul
cmpsl
sahf
flds
adc
mov
imul
dec
je
adc
cmpsb
or
cli
or
shlb
test
insb
outsl
or
imul
mov
jp
leave
xor
xchg
cmp
pushf
sub
xchg
lret
or
dec
imul
out
dec
int3
jno
adc
add
subl
jecxz
sub
adc
roll
jge
push
nop
push
pop
sub
sub
ljmp
stos
sub
arpl
pop
or
in
dec
jmp
dec
jg
pop
dec
idivb
imul
inc
test
addb
aam
adc
or
lods
xor
cli
or
and
mov
sti
pop
scas
and
std
xchg
dec
jae
ja
jbe
adc
es
pusha
xor
inc
clc
fwait
cld
inc
xchg
sbbb
imul
insl
enter
xor
xor
or
and
aam
ret
push
cli
and
lds
jbe
xor
imul
hlt
das
into
jmp
ret
out
jmp
and
in
mov
repnz
or
sbb
mov
xchg
mov
mov
pop
pop
mov
mov
fidivrl
lods
jp
loop
mov
xchg
or
outsl
mov
push
mov
mov
out
xor
pmulhw
mov
hlt
scas
add
xchg
sbb
je
mov
test
sub
and
adc
mov
pop
icebp
les
ljmp
cmpsl
xor
jp
hlt
and
clc
add
jp
cmp
xor
out
clc
jns
sbb
xlat
push
sbb
sub
adc
mov
ss
das
jl
gs
and
dec
in
xchg
fdivr
movsl
add
sbb
lds
clc
in
idivl
pop
mov
or
sub
movsb
pop
sub
stc
lea
sub
mov
and
dec
jl
and
dec
insb
mov
les
add
popf
push
sub
inc
mov
lret
push
lcall
daa
pop
je
clc
xor
mov
pop
stos
adc
jne
or
mov
cli
sti
sbb
int
jmp
jecxz
dec
sbb
addb
xor
andb
sub
ljmp
fwait
test
loop
mov
pop
mov
inc
insb
and
or
sbb
sub
sbb
mov
sub
add
cmp
imul
push
pop
lea
pop
push
xchg
negb
outsb
dec
dec
lcall
int3
or
sahf
fnstsw
cmp
sub
xor
movsl
lret
jmp
xchg
movsl
ds
add
js
nop
inc
pushf
out
cmp
cmpsl
stc
mov
cmp
int
adc
hlt
gs
jle
mov
add
sub
pop
cld
scas
mov
es
enter
pop
sbb
into
or
sbb
inc
push
xlat
push
add
scas
add
in
pop
notl
add
stos
daa
cltd
inc
mov
pop
sub
xor
add
or
pop
jge
push
sbb
pop
mov
pop
adc
aam
je
adc
test
or
xchg
int3
xor
loopne
imul
in
xchg
add
enter
jno
lock
jp
repnz
imul
sbb
sbb
aaa
mov
in
in
add
shrb
rcrl
mov
cmp
sub
push
or
hlt
push
insl
fcmovbe
cmp
cmp
repz
dec
pop
lahf
in
loop
jl
mov
mov
cmp
jle
cmp
pop
sub
hlt
mov
sub
mov
ficomps
xor
pop
mov
stos
pop
and
stos
and
pop
and
inc
and
pop
cli
repz
adc
sub
sarl
roll
movsb
adc
outsl
cmp
test
sbb
nop
roll
cmpl
stos
push
xchg
in
sub
add
mov
mov
sbb
hlt
lret
ret
mov
cmp
and
ds
sub
xchg
sub
inc
mov
ss
subl
sub
sub
inc
mov
ds
pop
es
or
dec
sub
mov
xor
cmp
loop
mov
iret
xor
inc
out
aaa
out
adc
cmpsb
push
movaps
sub
hlt
lods
push
lret
push
call
dec
movsb
jl
in
gs
das
hlt
les
call
fdivr
pop
sbb
cmpb
and
scas
jbe
repz
mov
xchg
dec
mov
or
lods
or
xor
pop
scas
fwait
jns
push
fisubrl
jge
cmpl
or
dec
je
aam
cmp
fadd
push
xchg
or
sub
pop
out
out
cmpsl
push
pop
cli
decb
mov
dec
add
and
ret
loopne
mov
fnstsw
fwait
sbb
mov
jmp
mov
mov
cmp
scas
pop
cmp
or
out
cmpsb
push
lock
idivl
add
sbb
inc
jmp
in
repnz
adc
scas
ret
pop
push
adc
sub
dec
nop
mov
mov
inc
gs
or
inc
push
mov
repz
adc
repnz
test
gs
fucomi
inc
add
sub
iret
push
adc
cmp
pop
aaa
jo
pop
mov
mov
cld
mov
faddl
sub
mov
clc
jle
pop
mov
mull
push
es
inc
pop
push
outsb
ljmp
arpl
xlat
cmpsb
push
mov
les
cs
or
cmpsl
out
ss
es
push
test
cltd
sbbl
lahf
es
and
pop
out
loope
fsubrp
jno
shl
and
dec
sti
inc
sbb
aaa
xchg
out
cltd
lods
or
rcrl
push
lds
mov
repz
popf
push
rorb
mov
fcomps
les
jg
aaa
clc
and
dec
and
xor
js
or
into
fwait
sbb
xchg
out
test
or
sub
sub
mov
fcompl
sub
out
mov
mov
and
int3
mov
in
push
insl
imul
mov
sub
dec
push
orb
inc
daa
mov
add
test
xor
in
lcall
ficomps
test
arpl
pop
mov
xor
cmp
mov
mov
data16
orl
mov
mov
aad
jae
xlat
scas
dec
push
dec
jnp
pop
sub
pop
imulb
imul
dec
jo
loopne
nop
testl
lods
pop
xor
xor
loope
jne
in
cmp
in
mov
xor
outsl
push
dec
xchg
and
dec
adc
dec
adc
push
sahf
mov
popf
jo
movsl
sbb
mov
push
int
jns
jo
mov
xor
cmp
sbb
das
cmp
jno
or
adc
jmp
lods
adc
mov
ljmp
xchg
sub
lret
and
xor
stos
jge
add
dec
mov
mov
dec
mov
sbb
pop
push
sbb
stos
sbb
rclb
fimuls
test
jle
repnz
dec
or
sbb
add
or
inc
sbb
xor
mov
jno
lock
adc
mov
xor
and
rcrl
jg
jae
bnd
cwtl
js
mov
out
gs
int3
mov
mov
lcall
adc
jno
adc
sub
std
pop
out
dec
adc
movsb
cmc
shll
mov
lcall
pop
scas
cmpsb
push
sub
sub
push
sbb
dec
jns
je
pop
push
or
push
mov
les
jne
jae
adc
inc
or
adc
cltd
les
xor
into
xchg
mov
negl
outsl
popa
sbb
test
dec
cmp
xlat
cld
jmp
and
inc
inc
xor
or
or
in
or
xchg
sub
movsl
cld
stc
xor
ja
sbb
mov
sub
mov
fwait
mov
mov
cmpsl
cld
popa
push
ja
sub
in
sbb
mov
sti
jne
pushf
dec
or
jne
ror
or
inc
cld
sbb
sti
jne
mov
xchg
pop
test
sub
push
sub
hlt
push
xchg
shll
fcmovnu
and
sub
fdivrp
repz
hlt
xor
xorb
sahf
cmp
jnp
clc
sub
dec
cmc
push
inc
pop
nop
pop
xchg
inc
pop
cmpsb
lret
jecxz
adc
dec
add
outsb
push
xchg
fstps
and
ja
push
pushf
loop
test
cmpsb
hlt
aad
inc
sub
and
addb
xchg
pop
cwtl
pushf
ljmp
push
push
pop
xchg
cld
mov
sub
fisubrs
sub
stos
lds
je
idivb
mov
mov
adc
movsl
pop
sub
enter
xor
mov
scas
fdivs
js
repz
cmp
mov
jge
push
jnp
push
int3
jnp
push
js
xchg
mov
xchg
imul
pushf
ja
rcll
push
inc
mov
sub
xlat
cmpsl
mov
repnz
xchg
shll
sbb
mov
cmpsl
imul
icebp
fnstenv
pop
sub
ret
cmp
imul
inc
or
pop
cmp
mov
xor
xor
insb
sbb
daa
stos
dec
test
pop
xor
out
out
mov
shl
dec
aam
loop
xor
sub
lcall
mov
fadds
arpl
mov
sti
sbb
lods
and
jle
fdivrl
xor
cmp
out
xor
pop
cmp
pop
imul
mov
and
sub
dec
mov
or
ret
mov
sub
stos
xor
out
hlt
xor
cld
or
sub
mov
lret
testb
scas
repnz
sti
add
fcoms
or
imul
mov
cmp
dec
xchg
mov
inc
add
inc
push
adc
gs
in
das
sub
mov
xchg
mov
xchg
add
jmp
mov
test
jg
ja
not
xor
and
mov
out
jle
sarl
pushf
pop
idivb
mov
sub
xor
test
cmp
inc
xor
cmp
jae
xchg
jae
rcll
inc
scas
xor
rcl
in
enter
adc
push
aam
pop
bound
cmpsb
adc
push
lahf
cld
or
xor
dec
fildl
pusha
adc
iret
xor
pop
jb
jne
dec
adc
imul
outsb
push
ficompl
inc
inc
cmp
aas
cld
adc
mov
pop
sbb
cli
inc
push
xchg
cwtl
lcall
fldln2
or
pop
pop
xchg
addr16
je
iret
mov
push
sub
stos
enter
pop
cli
dec
ror
add
pop
and
sbb
mov
sbb
sbb
popa
or
aad
iret
test
mov
lock
das
push
out
add
notb
pop
push
xor
outsl
mov
scas
mov
cmp
push
jae
or
cmp
mov
mov
and
mov
hlt
sbb
cmp
push
test
xor
cmpsb
lods
mov
sub
rorb
call
fisubs
inc
mov
fwait
ret
or
fstps
inc
je
xor
loopne
mov
mov
inc
orl
xorb
fldcw
fdivrs
cmp
subl
ss
fdivl
imul
std
div
cld
mov
inc
xchg
aas
cltd
sbb
fisubrs
cmp
add
addl
dec
mov
imul
cltd
jae
inc
in
cmp
push
mov
xor
mov
nop
or
sahf
mul
movsb
ds
fisubs
push
lcall
sub
out
jnp
pop
lcall
cmp
inc
push
lock
les
icebp
stos
ljmp
repnz
gs
adc
shll
sbb
inc
fwait
cmpsl
cmp
mov
mov
rcll
or
aaa
mov
mov
mov
das
notl
xchg
dec
je
fsubrl
popa
adc
mov
nop
adc
mov
ret
sub
lret
mov
mov
cld
nop
or
cmp
stc
jl
jle
cmpsl
sbbb
mov
pop
pop
je
xchg
je
or
mov
add
shr
xor
sbb
push
mov
int
sbb
sub
mov
cmp
dec
ss
cmc
fnstsw
scas
pop
xor
nop
jmp
pushf
repnz
push
mov
out
outsl
and
mov
loop
cwtl
in
mov
shlb
mov
movsb
jb
sbb
mov
call
sub
sbb
test
add
cmp
sbb
inc
mov
dec
lret
std
dec
jns
and
cmp
and
pop
and
and
lret
sub
pop
stos
xchg
je
mov
dec
clc
mov
in
pop
mov
test
sub
mov
dec
xor
adc
mov
cmp
cmp
imul
dec
test
not
mov
mov
cmp
pushf
int
aad
sub
and
test
mov
repz
cmp
ret
fdivp
sub
xor
mov
or
mov
push
push
or
loopne
jne
test
pop
sub
pop
mov
rcll
mov
cmpsb
cmpsb
sbb
imul
push
jg
pop
lret
cmpsl
cmp
dec
jb
and
pop
es
lods
mov
out
cmp
or
cmp
mov
dec
loope
ljmp
orl
mov
lcall
push
mov
dec
sub
pop
mov
gs
leave
imul
xchg
pop
pop
or
inc
mov
add
lcall
ficomps
xchg
pop
imul
or
mov
mov
clc
pop
cmpsb
incb
jb
xchg
jecxz
sbb
mov
sahf
jmp
adc
enter
aaa
imul
int3
pushf
nop
cld
enter
mov
inc
fmuls
lret
lods
imul
fwait
sub
and
nop
cmp
lods
sub
sahf
jmp
sbb
fs
xchg
adc
test
loop
mov
dec
aaa
movsl
add
imul
shll
adc
push
push
xor
scas
aaa
sub
push
cmp
xlat
inc
or
add
sub
lahf
addr16
lea
adc
or
fiaddl
adc
out
inc
subb
aam
stos
test
test
out
xor
int3
fsubl
mov
aaa
scas
sub
mov
scas
sub
dec
mov
sbb
xor
mov
in
loop
cmp
or
mov
jns
es
cli
stc
enter
adc
les
ret
aas
cmp
pop
add
mov
call
lock
sbb
xchg
test
xchg
gs
fldenv
das
inc
xchg
stos
push
stc
fsubrl
shlb
sti
and
inc
fisubrs
jecxz
int3
xchg
int3
xor
pop
inc
jns
mov
jns
pop
movsl
sub
enter
inc
lods
xchg
mov
out
adc
push
sbb
fwait
pop
mov
sub
add
fiaddl
aaa
lods
test
push
push
stc
mov
cmpsb
or
sbb
jnp
cltd
adc
pusha
out
pop
imul
cld
inc
or
sub
dec
hlt
into
andb
mov
iret
jae
pop
xchg
xor
dec
adc
int3
mov
jmp
sbb
lahf
into
dec
push
jmp
jae
scas
imul
mov
add
das
int3
arpl
repnz
push
imul
filds
sbb
pop
xor
adc
mov
inc
aaa
xor
ljmp
cmpb
mov
inc
cmpsl
mov
dec
hlt
clc
cmp
jmp
sub
cmp
loop
dec
lock
jno
push
stos
hlt
jnp
movsb
dec
repz
add
movsb
sti
jle
jmp
aas
test
inc
fistps
scas
mov
rolb
hlt
cmp
xor
stos
push
mov
sub
out
cli
mov
mov
test
or
jne,pt
or
pop
ds
lahf
mov
pushf
xchg
daa
mov
mov
rcrl
fiaddl
adc
xor
gs
and
push
sbb
ficoml
cli
adc
mov
xor
xor
add
xor
sub
rol
test
dec
push
cmpsb
mov
mov
nop
pop
mov
push
cmp
pop
imul
jo
mov
cmp
aaa
mov
cli
inc
bound
nop
leave
movsb
add
jecxz
je
cld
mov
aam
sub
mull
inc
lcall
xor
cmp
mov
gs
cmp
lods
mov
inc
adc
das
xchg
mov
adc
aas
lcall
decl
in
clc
subb
xor
dec
fsts
and
out
xchg
cli
sub
aam
subb
das
xor
mov
imul
xor
rclb
and
pop
pop
sbb
mov
lods
sub
adc
hlt
pop
xchg
mov
stc
es
hlt
dec
inc
sbb
leave
imul
xchg
lcall
cmp
mov
xor
mov
pop
lret
mov
icebp
lock
cmp
pop
or
dec
dec
cmp
cs
roll
lds
lods
push
xchg
repnz
cmp
mov
loop
jae
test
movsl
push
divb
aam
mov
jbe
mov
insl
and
mov
jae
or
pop
mov
enter
mov
dec
out
push
das
push
and
divl
aaa
pop
and
xor
mov
clc
mov
gs
mov
out
fbld
lods
imul
mov
inc
scas
pop
sub
jbe
sub
push
sub
push
xchg
pop
jne
jae
mov
flds
mov
pusha
mov
aaa
lahf
adc
pop
sbb
stos
adc
es
imul
pop
mov
ljmp
pop
cmpsl
and
lds
mov
mov
int3
sub
imul
jnp
jg
adc
lods
negl
das
and
fdiv
dec
clc
cltd
test
adc
jns
int3
sahf
int
add
into
sbb
mov
loop
cmpsb
in
mov
das
scas
jg
cmp
jle
mov
setnp
lods
cli
xor
xor
repnz
or
imul
fs
mov
jle
sub
mov
push
sbb
xchg
repnz
insl
xchg
jp
jp
add
sub
jae
lock
fcoml
or
dec
sbb
ret
pusha
cmpsb
dec
in
push
mov
mov
cmp
add
pop
aaa
xchg
daa
xor
and
mov
je
out
out
subl
dec
aam
inc
imul
adcl
mov
dec
bound
cli
xor
test
sub
adc
dec
add
ds
cli
out
fwait
mov
inc
adc
fwait
push
stc
pop
pushf
insl
test
fcmovnu
dec
mov
gs
std
add
push
inc
test
in
insw
mov
inc
dec
mov
orl
aad
mov
faddl
mov
mov
out
or
arpl
nop
loop
ss
add
dec
sub
aaa
push
out
testl
and
push
in
cmp
xorl
int3
lahf
lods
stc
hlt
add
daa
jmp
aam
sub
and
cs
cli
loope
fs
adc
dec
and
repnz
fiadds
scas
xor
imul
push
cmpsb
adcl
xor
mov
enter
fimuls
jo
mov
cmp
sub
movsl
cmp
mov
aaa
push
or
mov
or
mov
loop
inc
das
int3
lret
aas
and
ficoml
lcall
sbb
and
cli
jae
sbb
mov
mov
stos
nop
mov
out
stos
or
pop
xchg
addr16
sahf
mov
add
bnd
out
push
inc
fwait
jge
pop
mov
jnp
scas
loopne
in
xorb
mov
scas
adc
and
jae
mov
xchg
movsb
mov
cmp
or
cmpsl
stos
adc
outsl
mov
ja
inc
jmp
ja
lahf
push
sbb
dec
jl
orl
daa
xchg
sub
xchg
pushf
in
sbb
or
daa
popf
stc
leave
jo
jl
xchg
les
adc
xor
mov
adc
xchg
jl
shlb
es
icebp
es
imul
jg
ljmp
fwait
sub
pop
aaa
sarb
movsb
adc
outsl
ds
jg
adc
jle
in
xor
and
pusha
sbb
jb
ljmp
xor
out
sub
pop
mov
xchg
lcall
stc
add
lret
add
data16
adc
or
call
pop
clc
orb
pop
stos
add
and
add
mov
pusha
sub
cmpb
dec
cmp
dec
mov
fcompl
sbb
mov
mov
imul
imul
test
das
pop
inc
pop
clc
push
fidivrl
pop
repnz
xor
mov
bound
adc
mov
xchg
nop
adc
test
pop
imul
sub
xor
arpl
in
stc
mov
lods
sub
inc
mov
cmp
mov
arpl
and
fcoms
cmp
add
jo
and
test
imul
cmp
jge
push
out
mov
jnp
and
mov
imul
add
push
adc
cli
ss
sub
fcoml
imul
test
mov
aaa
adcl
xchg
repnz
mov
xor
mov
push
inc
mov
dec
imul
mov
call
xor
xor
imul
mov
cltd
mov
repz
mov
aad
mov
mov
and
push
sub
mov
xchg
imul
jns
out
lock
cmp
scas
aas
notl
push
dec
arpl
es
sub
cltd
adc
loope
stos
and
jnp
jmp
inc
and
mov
mov
in
daa
xor
stc
jae
dec
xor
out
cli
aas
mov
test
leave
ret
shll
lret
jb
out
dec
and
xchg
mov
add
out
scas
in
shrb
xchg
push
sub
cmp
insl
repz
cld
scas
ljmp
mov
lahf
cltd
mov
out
daa
rcrb
aas
loope
dec
out
sub
aaa
mov
adc
outsl
popa
mov
hlt
fwait
inc
sub
push
adc
je
xor
xchg
inc
insl
mov
push
jmp
jecxz
mov
pop
fistps
cmp
cld
jnp
add
cwtl
in
les
aaa
cmp
mov
mov
stc
pop
jp
cwtl
aad
mov
jecxz
ljmp
sub
es
lods
dec
jg
sub
mov
sarb
mov
inc
pop
iret
lods
or
or
cld
mov
adc
add
mov
and
and
adc
test
add
jmp
sbb
add
imul
cmp
rcrb
aaa
mov
outsl
pop
hlt
ja
adc
and
sub
pop
repnz
adc
scas
inc
cmp
sahf
pop
cli
fwait
inc
lret
aaa
sbb
ljmp
dec
mov
pop
test
daa
out
sbb
xor
mov
cmpsb
rcll
mov
hlt
cld
push
xor
or
mov
inc
add
scas
jl
xor
jl
inc
dec
xor
xor
mov
mov
mov
mov
jl
sub
add
scas
push
test
pop
dec
dec
sub
or
mov
adc
sbb
stos
xor
sbb
add
cmp
xor
cli
outsl
cmp
cwtl
mov
push
sub
jecxz
cmp
cld
push
and
ja
mov
jnp
push
aaa
int3
mov
loopne
mov
sbb
mov
mov
lret
xor
sub
test
cmp
push
mov
push
int
add
imul
add
aaa
sbb
lahf
lods
fbstp
and
pop
mov
xor
jg
xchg
or
push
jmp
aaa
mov
in
enter
jns
leave
pop
mov
inc
and
das
mov
sbb
fsub
jb
or
add
test
daa
imul
aam
cwtl
add
jl
xchg
test
add
sbb
imul
lret
mov
push
sub
xor
lret
divb
adc
lods
jae
lcall
jl
mov
repz
dec
xor
mov
and
rcll
add
inc
jae
vpsubb
ss
aam
es
push
imul
test
add
jecxz
push
das
les
shrl
ficomps
cld
hlt
sbb
sub
mov
mov
test
in
mov
xor
dec
in
les
in
aad
gs
loopne
rorl
or
je
jle
mov
xlat
jp
push
aam
cmp
sbb
pop
lock
mov
add
lret
std
mov
inc
aaa
aas
inc
hlt
sahf
add
dec
xor
mov
mov
sub
and
mov
popa
mov
or
sbb
mov
fwait
cmp
adc
js
jne
mov
lcall
jmp
mov
pop
pop
adc
cltd
mov
mov
adc
jmp
repnz
imull
xor
xchg
lret
sub
or
cmp
aaa
xlat
pushf
adc
sbb
pop
add
out
add
and
loopne
leave
mov
sti
mov
jg
cmp
inc
and
cmp
pop
jp
xchg
rolb
jo
add
mov
in
out
ret
arpl
jecxz
mov
test
xor
clc
add
xorb
stos
sub
pop
and
push
icebp
mov
mov
cmpsb
sub
lods
sub
and
xor
lahf
loop
hlt
and
cli
cmpsl
cmp
shl
imul
and
loop
jo
nop
shlb
cli
rcrl
popf
or
mov
sub
add
dec
and
stos
aaa
mov
and
mov
test
sub
adc
push
daa
out
xchg
sub
les
sub
push
xor
in
dec
mov
or
scas
pop
pushf
or
mov
ret
loop
xor
lock
xor
aaa
mov
fnsave
test
mov
mov
add
arpl
and
mov
xor
stos
adc
cld
pop
sahf
cmp
aam
pop
pop
jbe
pop
cli
shl
out
jl
inc
push
aaa
fstpt
inc
das
lahf
dec
cmp
sti
sahf
xchg
push
loopne
adc
lds
sbb
cmp
cmp
xor
inc
subl
mov
fwait
xchg
cltd
jb
mov
aaa
dec
les
pop
ret
imul
push
sbb
clc
xchg
ds
xor
mov
inc
mov
push
and
cmp
mov
adc
aad
sti
mov
mov
pop
daa
dec
lds
sti
mov
push
dec
cld
into
fistl
push
xor
subb
es
sbb
movsl
or
popa
jae
cmp
push
aam
aad
aas
imul
das
pusha
sub
inc
aad
jg
das
cmpsb
dec
fstpt
push
and
sub
lret
pop
adc
sub
push
cwtl
out
scas
loop
add
test
lods
cpuid
test
cmp
gs
jo
es
xchg
sbb
push
mov
mov
and
lahf
gs
mov
pusha
dec
push
mov
mov
xor
add
sbb
jecxz
sub
les
xor
xchg
cmpsl
loopne
hlt
gs
push
adc
xor
movsl
dec
mov
pop
sbb
cmp
dec
adc
daa
mov
addr16
xor
movsl
cmp
mov
dec
mov
sbb
mov
cmpsb
ficompl
mov
std
lods
lea
gs
mov
icebp
sub
aas
nop
fwait
add
push
sub
jbe
fnstsw
sub
stos
cmp
stos
mov
fwait
mov
lods
xchg
sbb
lea
mov
mov
xchg
test
mov
push
xor
gs
sub
sub
sub
sub
mov
xor
fs
nop
aaa
cmp
sbb
add
mov
xor
xchg
aaa
lret
adc
sbb
pop
fmuls
add
repnz
ljmp
mov
jle
in
int3
lock
sub
jecxz
push
jb
ret
cld
fnstcw
and
ljmp
adc
rcrl
imul
xor
adc
mov
imul
mov
popa
ret
and
dec
sbb
mov
jnp
ljmp
shll
outsl
cmp
ja
aas
int
jno
setnp
lret
pop
jp
hlt
imul
adc
mov
in
outsb
sub
popa
jle
lods
dec
cwtl
ret
leave
lcall
pop
cmp
daa
xchg
in
scas
xor
ret
aas
pushf
or
sbb
pop
cld
push
cmc
dec
jne
or
pop
adc
insb
cmp
lret
mov
jae
lret
xchg
test
dec
fidivrl
arpl
jecxz
in
mov
sub
aas
sbb
sbb
imul
cmp
adc
je
sub
jae
jnp
addr16
imul
lods
cli
mov
pop
xor
push
sar
pop
jmp
imul
cmp
int
icebp
ret
shll
xlat
push
and
movsb
and
xor
mov
ljmp
pushf
nop
mov
or
jns
inc
sub
mov
add
cli
mov
xor
adc
or
ss
inc
ret
mov
inc
in
cld
clc
mov
lods
adc
jl
inc
dec
add
xor
loop
jle
das
add
jb
clc
fwait
aaa
mov
bound
repnz
pop
inc
cld
xchg
bound
cmpsl
mov
test
hlt
inc
xor
mov
dec
repnz
sbb
jecxz
xlat
fsubrs
xchg
cltd
bound
daa
pop
mov
imul
jmp
hlt
rcrb
dec
sub
divl
inc
sbbl
sub
gs
xchg
add
sbb
jnp
imul
xor
test
les
mov
out
fildl
pop
mov
xchg
dec
test
and
mov
sarb
je
dec
ja
clc
movsb
or
xlat
mov
lret
cmpb
pop
cmpsb
test
xchg
sub
push
cmp
inc
lret
repz
jnp
adc
outsl
push
cld
inc
xor
pop
sbb
lret
mov
imul
or
pop
push
hlt
or
and
mov
cli
xchg
fwait
or
xchg
insb
sub
and
div
test
sbb
mov
push
test
and
adc
or
hlt
sub
pop
ret
xor
cmp
mov
movsb
add
mov
ret
mov
lret
cmp
xchg
ds
sub
dec
jae
dec
xor
push
xchg
mov
pop
rorl
mov
mov
push
dec
push
shlb
cli
pop
mov
clc
inc
add
pop
daa
dec
testl
mov
pop
int3
fincstp
repz
push
fstps
cli
push
repz
push
addr16
je
fdivs
mov
imul
add
pushf
rcrl
mov
or
sbb
shll
mov
scas
mov
cmc
inc
sub
cmp
popa
fsubrl
xchg
loopne
adc
sub
jle
mov
cmp
xchg
call
fwait
or
xorb
aam
addr16
pushf
aaa
loop
daa
sub
sarl
xchg
ret
sub
enter
mov
cmp
dec
jg
outsl
ljmp
xor
dec
rclb
cwtl
pop
aam
mov
cmp
mov
mov
adc
mov
mov
inc
out
sbb
jmp
fwait
pushf
pop
cmp
mov
fsubrs
loopne
xchg
pop
mov
stos
push
cltd
daa
dec
and
cmp
and
out
mov
add
mov
dec
mov
adc
fcmovb
xchg
fwait
push
xor
aaa
mov
mov
mov
decb
loopne
dec
fcompl
mov
pop
fimuls
gs
cmpsb
push
stos
mov
aaa
lret
rolb
and
cmp
sub
pushf
mov
push
xchg
sti
xor
lock
movsb
cmp
test
pushf
add
mov
mov
xor
or
xor
xor
mov
mov
cmc
fstps
mov
and
jae
sbb
call
jae
adc
movsl
and
stos
xor
cmp
sub
cld
dec
dec
lahf
add
adc
movsl
lret
ja
mulb
into
push
outsl
dec
push
push
mov
daa
imul
xchg
enter
jbe
xor
xor
jbe
push
and
xor
scas
in
cmp
adc
stos
mov
mov
addr16
xchg
xchg
jle
lds
jl
and
and
mov
sub
mov
fmul
mov
push
repz
aam
cmp
inc
popf
repz
sub
mov
and
jle
cltd
addb
adc
sub
sbb
and
mov
cs
mov
mov
mov
aad
sbb
out
clc
sbb
mov
cmpsl
loopne
dec
sbb
cmp
fisubrs
cmp
stos
cmc
jp
sarb
mov
scas
mov
fucomip
testl
repnz
in
jb
cmp
stc
movsl
sbb
push
and
sub
mov
xor
jle
testb
sub
mov
popf
cwtl
add
and
xchg
arpl
and
inc
mov
scas
dec
ss
inc
sbb
ds
in
ret
testb
and
mov
arpl
mov
mov
daa
mov
adcl
mov
rol
arpl
fistps
mov
mov
sub
xor
add
sub
sub
ret
mov
ret
insl
mov
ret
mov
and
call
add
sbb
dec
xor
mov
imul
loop
xchg
cltd
or
mov
adc
loopne
sahf
inc
and
cmp
les
das
push
jl
fistl
imul
loop
add
mov
lds
dec
mov
fwait
adc
xor
pop
inc
push
adc
or
adc
xchg
and
xor
inc
mov
hlt
cld
and
popf
adc
add
cli
or
in
imul
cmpsl
dec
and
pusha
jmp
test
mov
mov
pop
cmp
in
cmp
add
sti
int
lods
dec
imul
sub
sbb
xor
sub
xor
fsubrp
cmpsl
pop
insb
mov
pop
daa
cltd
xchg
lods
mov
push
cwtl
out
inc
test
jmp
enter
xchg
repz
push
push
dec
adc
or
pushf
data16
push
inc
sub
cmpsb
inc
cmp
int3
lret
push
or
daa
jp
jle
test
enter
lahf
mov
add
mov
loope
sbb
adc
add
sub
movsb
cmp
mov
in
les
dec
inc
mov
push
mov
mov
jg
ljmp
subb
mov
push
in
divl
and
dec
and
ss
xchg
stc
es
dec
call
nop
negl
push
jnp
in
jae
sti
sub
gs
or
cmpl
lcall
fcmovnbe
sti
cwtl
pop
ljmp
xor
lret
push
xchg
call
and
ret
xor
decl
call
stc
push
fs
mov
lea
repz
sub
fwait
jo
mov
or
cmp
sub
mov
mov
js
sbb
fdivl
sbb
dec
cmc
cld
ljmp
repz
fcmovnu
mov
push
mov
mov
lret
inc
fistpl
imul
out
mov
aas
or
or
out
mov
mov
sub
lahf
hlt
ja
inc
sub
rcrb
clc
fdivl
dec
hlt
sub
adc
idiv
iret
mov
pop
hlt
inc
mov
mov
clc
lods
mov
dec
sub
out
mov
xchg
sbb
pop
cmc
sbb
int3
lods
mov
pusha
clc
dec
mov
sbb
negl
lret
hlt
mov
xchg
sbb
push
mov
and
mov
nop
lods
jo
dec
clc
xor
adc
sub
sbb
lret
cld
mov
lock
push
sbb
mov
mov
mov
call
sub
mov
arpl
push
out
rcll
mov
mov
sbb
ljmp
sub
push
mov
loop
in
cld
sub
cmc
cld
jnp
stos
mov
sahf
mov
in
mov
cmp
int3
ds
inc
dec
dec
setp
aaa
sti
push
cmp
sbb
mov
mov
sbb
daa
mov
ss
and
lcall
cmpsl
bswap
add
insb
iret
aaa
sbb
dec
pop
pop
aaa
inc
mov
les
inc
pop
fwait
xor
pop
cmp
jb
cltd
push
push
mov
cli
cmpsb
hlt
cmp
movsb
add
int3
fdiv
loopne
into
adc
in
mov
push
inc
ret
sub
jp
push
cwtl
and
mov
mov
pop
das
mov
push
pushf
add
push
lahf
cld
bound
sub
jns
sbb
xor
cmp
stc
adc
sbb
sbb
push
jae
les
cs
push
push
add
cmp
aaa
xor
sub
cmp
pop
sbb
adc
or
cmp
cld
cli
clc
cmp
out
in
ljmp
fcmovu
cmp
into
int3
lret
mov
sarb
scas
cmp
test
movsb
cmp
lcall
mov
mov
js
mov
push
cmp
pusha
pop
pop
pop
pop
push
repnz
push
inc
jnp
dec
inc
adc
xor
xchg
cmp
negb
cmp
adc
xor
sbb
xchg
pushf
jae
sbb
hlt
in
out
arpl
mov
sub
xor
fdivs
bound
jge
das
pop
int3
rorl
imul
shrl
push
jb
cmp
aaa
bound
sub
sub
or
lods
pop
int3
inc
sbb
aaa
pop
sahf
mov
cmp
sbb
ret
fs
jbe
repz
or
bound
mov
lahf
ficoml
enter
pop
inc
cli
dec
aad
sbb
nop
inc
outsb
jo
int
lea
push
mov
mov
enter
test
int3
pop
hlt
lods
or
in
fadds
rclb
orb
mov
bound
xchg
hlt
out
fcomip
sti
int3
mov
or
mov
mov
jo
cmpsl
bound
lods
push
pop
imul
js
mov
or
pop
popf
adc
push
cld
jg
sbb
pop
dec
jmp
sub
push
pop
jb
jnp
push
outsb
jg
mov
jecxz
loopne
stos
outsl
mov
sti
in
inc
arpl
data16
and
pop
hlt
pop
jo
ret
out
push
out
adc
loop
out
push
cmp
jge
pop
ljmp
fwait
jmp
jp
push
lahf
repz
mov
rolb
xor
or
test
cwtl
fmuls
jo
lahf
jb
cmp
insb
cld
rcrb
dec
neg
mov
xchg
fsubrl
jb
shl
xchg
pop
mov
test
stos
add
adc
adc
sti
xor
je
mov
int3
hlt
pop
inc
sbb
fwait
cmp
enter
nop
into
jae
dec
mov
fwait
int3
in
int3
stc
mov
stos
sarb
push
push
cmp
cmpsl
aam
fsubr
aam
jl
jle
mov
xlat
das
xor
jl
lret
mov
push
cli
mov
inc
imul
sbb
push
and
testb
jecxz
sub
rorb
arpl
jp
xor
data16
or
lret
test
push
push
lock
xchg
lods
mov
push
rolb
insl
mov
lock
push
out
inc
adc
sbb
enter
mov
rorl
adc
iret
rcll
test
int3
and
jmp
ljmp
jo
mov
sbb
pop
loop
mov
shlb
adc
mov
or
nop
addr16
mov
jne
sbb
xor
sub
les
pusha
add
mov
outsb
testw
and
lods
mov
and
test
cwtl
cmp
idiv
mov
stc
sbbb
xlat
xor
cmc
clc
mov
in
cmp
inc
add
stos
cmp
les
cld
out
xchg
adc
cmp
bound
aas
adc
mov
sbb
aas
xchg
cmp
stc
and
cmp
pop
cmp
sbb
xor
sub
sub
es
and
sbb
sbb
push
adc
adc
or
or
push
add
add
sti
cmp
icebp
out
in
jmp
jmp
fstpt
ror
int
cmp
sarl
mov
mov
lods
stos
cmp
mov
cltd
xchg
xchg
xchg
xchg
lea
addl
ja
jae
outsl
insl
imul
pop
pop
pop
cmp
push
dec
dec
dec
cmp
inc
inc
inc
aas
incl
push
or
lea
ljmp
in
ds
cmp
lods
ja
pop
bound
mov
cld
mov
dec
aaa
mov
or
push
pushf
jl
mov
pop
bnd
jnp
out
push
and
pop
daa
xchg
pop
pop
rclb
ss
pop
sbb
mov
sbb
pop
pop
push
mov
insb
add
mov
daa
mov
sbb
xor
mov
lods
push
incb
insb
mov
sub
insb
lock
out
adc
inc
and
push
sbb
mov
xchg
xchg
push
sub
int3
cmp
sub
jnp
dec
ficomps
mov
push
dec
ds
iret
mov
push
pop
xor
stos
iret
mov
inc
movsb
sbb
dec
fstp
xor
ss
adc
mov
add
xchg
cmp
mov
scas
push
adc
dec
cmp
mov
mov
adc
xchg
sub
add
fdivs
stos
xchg
xchg
pop
hlt
pop
lret
jl
xor
cmpsb
stos
aam
mov
inc
data16
or
adc
add
test
push
push
and
xchg
loopne
dec
add
repnz
fdivr
mov
in
int3
or
je
and
je
hlt
cmc
xor
fstp
stc
sbb
xchg
pop
rcrb
cmp
push
dec
jne
sti
sbb
jle
fs
push
je
lock
push
mov
jo
fnstcw
mov
push
mov
cli
sub
push
fmul
cmp
pushf
clc
cmc
add
sub
dec
sub
add
cmpsb
push
or
das
lcall
mov
js
or
push
jg
and
mov
mov
sbb
push
inc
dec
outsl
out
cmpsb
sub
or
movsl
call
mov
add
cld
add
out
mov
aad
dec
jae
push
aaa
imul
fwait
imul
and
cld
bound
push
push
push
sub
call
push
pop
mov
sub
sbb
xchg
lret
and
xchg
fwait
sbb
sbb
testb
repnz
outsb
out
int3
add
cld
cltd
fwait
xchg
add
sbb
mov
mov
jl
call
cld
adc
divl
insb
xor
sub
ret
adc
and
inc
and
ret
mov
fwait
bound
xor
dec
jl
and
inc
int3
cmc
test
xchg
aam
into
gs
int3
aas
adc
dec
scas
cmp
xor
dec
cld
sbb
sub
pop
or
sbb
insb
jns
xlat
sub
cld
dec
out
sarl
rcrl
mov
mov
nop
push
mov
jl
mov
stos
jmp
aaa
mov
xor
inc
jno
lret
into
cmpsb
arpl
dec
mov
sub
sbb
cli
fisubrs
xchg
mov
add
jp
mov
pop
push
cmc
mov
out
jmp
push
addl
pusha
imul
cmp
xor
mov
insb
jp
xchg
pop
mov
dec
cmpb
mov
daa
cmp
xor
inc
test
cmp
into
adc
adc
mov
iret
loopne
jo
pop
xchg
pop
push
data16
push
stos
loope
xor
pop
int3
sar
loopne
aas
mov
sbb
sahf
fsubs
inc
push
lods
mov
stos
pop
push
mov
loop
cmp
cmp
data16
push
lods
mov
mov
cmp
fwait
sbb
pop
aad
pop
cmp
jb
push
repnz
ret
sub
idivb
call
push
inc
adc
loop
xchg
dec
ja
sub
push
jbe
jb
lock
shll
mov
incb
cltd
cmp
mov
lahf
arpl
fimuls
mov
in
jns
fs
mov
mov
pop
cmp
dec
sbb
dec
cwtl
inc
std
mov
jl
imul
lods
mov
pop
scas
xchg
adc
cld
clc
lea
jg
scas
xchg
dec
pop
add
mov
int3
mov
jns
cmp
push
ja
jp
stc
cmp
lcall
adc
call
push
ljmp
mov
dec
sbb
sbb
shrd
fadds
lea
add
mov
stos
data16
into
adc
rcrl
arpl
push
or
ret
add
dec
mov
es
push
lret
and
scas
cld
mov
mov
dec
pushf
clc
push
pop
lcall
lret
fsubs
push
mov
lods
std
les
add
dec
insl
mov
in
lods
cwtl
or
lcall
sub
xor
lea
enter
test
fwait
dec
fwait
adc
je
xchg
outsl
mov
adc
sbb
lahf
sar
hlt
pop
ljmp
ret
jmp
jo
pushf
pop
mov
mov
cmp
mov
xor
test
je
out
incb
in
into
fnstcw
push
jae
push
repz
pop
inc
cli
fwait
lock
movsl
and
lods
pop
leave
cmp
mov
xor
loop
nop
mov
lods
into
ds
insb
loopne
pop
jo
cli
call
enter
xchg
sbb
mov
mov
sahf
jo
outsb
xor
shl
add
mov
adc
sti
mov
in
cltd
fdivr
jne
sbb
inc
pop
xchg
lock
nop
mov
cmp
movsb
inc
hlt
std
mov
cmp
clc
or
pop
stc
xor
and
dec
sbb
stos
int3
dec
mov
and
xor
clc
sub
mov
cmpsl
or
in
data16
loopne
out
int3
jns
loopne
sub
cmp
inc
mov
lods
mov
sub
add
xor
pop
mov
xor
sub
sub
clc
and
sub
add
mov
or
sbb
lret
sbb
ljmp
xchg
sub
mov
inc
movsb
or
pop
hlt
add
xor
fdivrl
sarl
movsb
sub
ss
xchg
add
repz
stos
in
jno
pop
sti
lahf
or
lea
and
inc
jecxz
sub
fisubs
or
hlt
cmp
cmp
scas
mov
incl
scas
incl
int3
jae
nop
lods
pop
sub
mov
or
fcoml
cld
idivb
dec
aaa
cld
xor
or
xlat
sbb
cmp
push
mov
xchg
inc
leave
clc
xor
mov
int3
cmp
add
cli
or
sub
sbb
mov
jp,pn
cmc
xchg
shlb
mov
fdivl
iret
cli
popf
divl
or
xchg
fwait
sbb
stc
sub
lcall
mov
fcomps
sbb
fiaddl
cmp
cmp
mov
mov
vpsubsw
dec
pushf
xor
and
jo
cli
fisubrl
mov
repz
dec
lea
or
xchg
je
aam
sub
mov
pop
mov
lods
sbb
adc
out
mov
mov
or
lods
je
or
in
pop
push
mov
sbb
hlt
jecxz
sbb
clc
or
dec
hlt
add
mov
dec
sub
inc
sbb
sahf
out
imul
cmp
mov
cld
sbb
dec
hlt
sub
fdivs
mov
sbb
shrl
fistpl
jecxz
jmp
repz
clc
add
adc
sub
dec
or
pop
sbb
lods
xchg
sbb
sub
sbb
hlt
and
xor
js
sbb
xchg
adc
xor
adc
aaa
divb
pop
pop
int
sbb
lret
inc
adc
mov
jle
push
adc
sub
movl
mov
sub
movsb
mov
sub
aam
hlt
mov
mov
push
sub
lods
fs
or
push
sub
cmp
repz
sbb
clc
daa
mov
dec
aaa
cmp
cmp
cld
sbb
rorl
and
inc
mov
and
pop
mov
push
sbb
adc
cmp
and
xor
stc
popa
mov
mov
cmp
loope
add
fwait
cmp
or
sahf
or
gs
mov
xor
and
fldl
cmp
mov
cmp
push
popf
cmp
add
ljmp
mov
cmp
push
jmp
cmp
out
lret
pop
pop
jnp
mov
dec
add
lcall
mov
cmp
out
fucomip
jne
mov
inc
das
gs
xchg
push
dec
pushf
jns
dec
adc
lods
sbb
out
cmp
sti
or
mov
push
add
push
test
cmp
ror
xlat
shlb
and
ret
mov
ljmp
pop
cmp
icebp
and
jp
cltd
inc
mov
cmp
dec
push
out
mov
cmpl
cmp
jl
repnz
repz
aam
mov
mov
cmc
pop
pop
xor
mov
sahf
aaa
and
pusha
sbb
push
jnp
xchg
in
jb
ja
bswap
cltd
pop
dec
fwait
das
pop
divb
pop
cld
jecxz
in
pop
dec
mov
fnsave
ror
xor
ret
dec
jno
pop
adc
insl
cs
sbb
pop
dec
mov
movsb
xchg
aaa
mov
adc
outsl
test
push
mov
adc
jg
adc
das
mov
add
popf
ds
imulb
pop
fidivrl
dec
add
fsts
jle
lea
and
aaa
mov
mov
lods
add
out
addr16
pop
inc
jecxz
stc
jae
je
mov
cmpl
aaa
dec
lcall
cmp
or
enter
jbe
mov
mov
sub
lret
jnp
cmp
mov
jne
out
aaa
mov
cmp
into
test
enter
add
pop
stos
sbb
mov
out
cs
icebp
cmp
insb
xlat
sbb
in
cwtl
std
mov
int
jbe
stos
cmp
sahf
xchg
fistps
mov
inc
cmp
add
mov
pushf
ss
or
js
cmp
fnsave
adc
inc
sbb
stos
xor
pop
jns
sbb
int3
test
jnp
or
ret
lock
sub
sbb
shr
clc
lods
mov
or
lcall
clc
push
push
pop
dec
enter
in
fcoms
pusha
jno
stos
iret
enter
loopne
cld
daa
aam
push
dec
int
nop
xor
lret
fcompl
cld
loope
mov
mov
mov
fwait
push
xor
jbe
push
dec
out
sbb
cmc
pushf
loop
push
mov
add
mov
dec
xchg
mov
inc
push
pop
fs
cmpsl
and
push
sti
mov
data16
cmp
pop
jbe
cli
and
fstps
ret
neg
roll
int3
stc
add
cli
jmp
pushf
mov
mov
sub
sbb
and
das
faddl
out
shlb
jg
jne
arpl
fcomi
mov
fsubs
arpl
pop
pop
push
dec
dec
cmp
inc
or
movl
mov
aam
mov
pop
aaa
adc
push
push
cmp
shlb
jae
imul
pop
notl
dec
das
lret
enter
les
ret
insl
mov
stos
mov
sbb
loope
lret
push
jge
fmul
push
xchg
cmc
and
push
mov
fwait
xor
call
arpl
dec
push
inc
dec
mov
imul
or
inc
hlt
inc
in
inc
in
faddl
inc
int3
inc
les
inc
mov
lods
inc
movsb
inc
pushf
inc
xchg
inc
mov
lret
imul
cmp
inc
adc
add
stc
inc
mov
jne
pop
inc
dec
inc
cmp
les
enter
ret
inc
shr
scas
cmc
dec
fistl
imul
mov
fdivl
imul
lret
aaa
jno
jp
insb
push
lahf
and
mov
lds
imul
rolb
enter
les
rol
lea
pop
mov
imul
inc
and
int3
sub
add
repnz
in
aam
les
mov
pusha
popf
dec
popf
cmp
cmc
popf
jmp
fistps
cltd
popf
jnp
push
mov
lret
test
dec
aad
mov
subb
push
pop
mov
mov
sub
loopne
pushl
scas
sahf
ja
popf
es
sti
popf
out
fwait
mov
les
push
pop
cmc
mov
fwait
lods
rclb
imul
add
mov
cmc
jns
imul
mov
mov
setne
jno
stos
dec
mov
xchg
push
jae
lahf
xchg
push
arpl
xor
push
and
and
leave
out
mov
cmp
out
fistpll
les
rolb
int3
mov
or
fiaddl
rorb
lods
imul
sbb
dec
pop
fcomps
push
jbe
bound
filds
fiaddl
add
add
add
rclb
mov
leave
mov
cwtl
mov
lret
pop
ja
dec
ljmp
mov
xchg
or
and
lret
out
inc
xor
sbb
pop
repz
mov
or
loope
rorl
dec
popf
dec
insl
dec
push
dec
dec
dec
xor
pop
adc
or
mov
sahf
inc
xchg
inc
js
fs
inc
inc
es
or
inc
filds
inc
outsl
add
cwtl
add
cmp
add
iret
incb
shlb
lds
cmp
mov
fimull
mov
inc
inc
cmp
inc
testl
inc
roll
cmpsl
inc
xchg
inc
mov
inc
outsl
inc
pop
inc
inc
inc
out
fidivrs
mov
adc
or
aam
test
xchg
popf
mov
push
popf
dec
popf
cs
adc
stos
popf
lahf
popf
addr16
push
fdiv
push
pop
mov
xchg
int
mov
sbb
cmpsb
je
push
sbb
inc
testl
ds
jae
imul
dec
pop
mov
sti
inc
in
mov
cltd
inc
mov
inc
aas
add
push
add
xor
sub
jmp
add
mov
add
or
addr16
push
std
ljmp
sbb
into
jge
jo
xlat
insb
dec
dec
stos
je
enter
lock
mov
dec
lods
lret
and
xchg
push
jnp
adc
imul
dec
dec
mov
inc
insb
inc
push
inc
inc
inc
xor
inc
adc
inc
rorl
xchg
out
mov
pop
aas
dec
push
ss
in
inc
fldl
inc
jnp
push
ja
outsl
push
inc
cmc
inc
and
shr
fisubs
cwtl
popf
mov
pop
sahf
xor
and
or
insl
mov
js
cld
pop
mov
or
fimull
cmp
minps
dec
mov
inc
out
cmpsl
add
xor
fsubrp
movsb
scas
mov
cs
in
out
jle
jb
push
test
insb
les
push
ds
add
int
in
orb
test
jmp
pop
stc
test
test
jae
push
stos
fsubrp
divl
outsb
in
push
mov
xchg
mov
push
xchg
push
outsl
pop
sub
mov
arpl
adc
xor
xchg
lds
add
add
add
std
cltd
std
addr16
pop
out
scas
add
cs
mov
iret
gs
icebp
out
pop
cmpsb
das
sbb
lret
jp
add
lods
cmpsl
iret
cs
stos
out
xchg
mov
pop
ret
push
imul
dec
dec
inc
jnp
pop
xor
dec
pop
xchg
dec
idivl
xor
sub
sub
inc
jg
jae
imul
pop
cmp
sub
and
sbb
flds
inc
ds
sub
mov
or
hlt
push
in
dec
in
repz
sub
and
loop
lret
scas
shrl
or
shrl
add
push
pop
cli
cmp
sub
push
and
cmp
je
pop
movsl
push
fwait
add
out
add
fstpt
sub
push
mov
xlat
mov
cmpl
cmp
daa
mov
repz
mov
jmp
inc
jbe
push
mov
inc
sbb
clc
insb
add
gs
sbb
cmpsb
out
sbb
jbe
pusha
test
in
ret
imul
push
scas
push
outsb
movsb
shll
sub
repnz
int3
leave
pop
lods
sahf
fwait
ss
pushf
dec
inc
jns
imul
push
addl
add
sub
cmp
mov
jns
insb
jnp
ret
fsubl
cltd
imul
pop
and
fs
ret
dec
mov
ja
or
aam
push
add
ss
cmc
sbb
mov
inc
fwait
outsb
shlb
mov
mov
mov
lcall
pop
enter
sub
mov
test
sub
mov
add
sub
pop
lret
or
fstps
and
in
xor
es
or
add
cmc
loopne
sbb
insl
std
push
jecxz
add
cmp
mov
xchg
add
push
idiv
mul
test
pop
aad
test
daa
push
mov
add
mov
dec
ficompl
push
inc
add
sub
aaa
lret
cmp
hlt
clc
mov
lret
shlb
xor
lret
sbb
and
bnd
mov
pushf
popf
mov
js
in
pop
mov
push
out
test
das
xor
and
or
les
arpl
and
insb
fadds
hlt
jmp
stos
mov
sbb
lods
pop
mov
jg
cmp
arpl
sbb
je
jnp
sub
movl
pop
add
add
std
mov
std
or
add
sti
std
repz
jmp
jecxz
mov
test
pop
sub
inc
add
cmc
sbbl
popf
fistpl
loop
aam
int3
cmc
aad
mov
xchg
lods
ja
imul
mov
add
add
std
cmp
std
dec
std
ds
adc
fucomi
pop
lock
mov
xlat
pop
lret
sahf
stos
push
mov
popf
inc
andl
pop
mov
test
in
mov
push
mov
push
xchg
pop
sbb
or
arpl
lret
daa
push
lret
mov
jecxz
jae,pn
lret
repnz
xor
inc
stc
jl
jb
add
pop
dec
push
inc
dec
xor
dec
inc
and
stos
push
mov
loopne
xlat
std
sar
std
mov
out
pop
js
stc
pop
push
fmull
data16
into
dec
int3
cmp
in
fadd
or
mov
enter
mov
pop
push
loopne
sbb
push
in
fldcw
stos
pop
aam
sbb
or
mov
into
mov
int3
icebp
out
xchg
dec
mov
sbb
xor
clc
int
lds
lods
push
movsl
push
popf
push
xchg
push
lea
sbb
sbb
mov
repnz
adc
mov
add
in
or
and
test
pop
sub
test
mov
jae
imul
call
sahf
loopne
sahf
xchg
push
mov
int3
and
and
pop
sub
adc
fcomi
xor
sub
push
fdiv
movsb
imul
pop
dec
inc
dec
or
cltd
dec
je
lret
push
xchg
dec
mov
adc
add
mov
mov
or
rcll
adc
pop
cmp
dec
inc
and
xchg
lods
mov
int3
fwait
sub
mov
mov
mov
mov
jecxz
fldt
xlat
lret
insl
ret
insl
mov
mov
inc
jae
arpl
inc
inc
inc
xor
mov
outsb
hlt
xor
shll
xchg
sbb
push
pop
inc
popf
xor
daa
shll
adc
adc
or
add
sti
push
rep
jmp
iret
das
in
shrl
jno
xchg
mov
stos
push
mov
stos
mov
in
bnd
xor
insl
pop
insl
push
jae
out
sub
sub
enter
mov
hlt
mov
fdiv
aam
les
jg
insl
xchg
insl
mov
insl
jl
das
test
insl
pop
jae
sti
fistpll
cmp
lret
pop
mov
outsl
pop
sbb
cld
and
push
je
xor
inc
stos
mov
jle
dec
mov
lds
fdivs
je
cld
js
inc
jle
mov
ret
push
aaa
mov
xor
mov
mov
jno
loopne
dec
rol
into
aam
mov
clc
add
xor
shrl
arpl
fmul
dec
or
dec
xchg
aad
fprem1
jecxz
xlat
push
scas
cmp
lds
cmp
stos
insl
leave
inc
jae
mov
dec
popf
gs
testl
hlt
int
jae
mov
lds
jnp
loope
sbb
aad
mov
popf
mov
mov
or
xlat
add
cld
mov
enter
mov
pop
fs
push
rorl
test
movsb
sbb
jo
xchg
arpl
mov
pusha
lret
mov
lcall
loopne
aas
in
sbbb
jp
push
jo
push
fidivs
sahf
fldcw
fdivs
test
inc
jg
es
es
es
ss
mov
dec
sub
push
aaa
push
and
testl
push
ret
mov
out
and
stc
outsb
out
lods
outsl
sbb
or
lret
daa
xlat
dec
mov
xor
pop
movsb
cld
dec
cmp
imul
mov
mov
loop
es
pop
and
std
jne
dec
adc
mov
adc
icebp
sbb
cwtl
pop
dec
in
add
repnz
fstpl
mov
loopne
scas
adc
mul
scas
scas
in
cmc
in
push
push
mov
pop
sbb
mov
or
sahf
cld
lods
outsb
jno
push
int3
mov
cwtl
inc
data16
jl
mov
pop
fsubp
xchg
jo
clc
mov
push
sahf
scas
mov
ret
stos
call
xor
push
call
mov
sub
mov
xchg
cld
inc
cli
xorb
dec
pushf
cmp
push
test
call
sbb
push
fdivrl
dec
cld
pop
fs
in
divb
lea
cmp
mov
inc
lods
pop
adc
out
loopne
notl
fiadds
xor
xor
and
neg
aam
outsl
fdivl
sbb
add
inc
cmpsb
xor
sbb
ja
xor
mov
xchg
rcr
jge
sbb
fdivr
sub
aam
xchg
sub
inc
xchg
cmpsb
clc
mov
mov
pusha
out
xchg
push
test
xchg
ss
fwait
sarb
mov
pop
push
lret
shlb
outsl
sub
and
push
jecxz
and
test
ficompl
addr16
cwtl
inc
daa
pop
cmc
cltd
rcr
mov
xchg
cmp
fs
mov
sbb
xchg
je
cs
psrad
xchg
mov
shlb
inc
mov
fstl
insb
clc
cwtl
or
out
in
or
int3
fsubs
or
out
fsubs
xchg
push
jbe
addr16
hlt
jns
stc
rcrb
hlt
movsl
cmp
dec
sbb
xchg
pop
sub
in
sub
stc
inc
in
mov
push
out
xor
aam
daa
xor
aad
outsb
adc
rcll
or
mov
ror
out
inc
shlb
dec
and
push
lret
filds
loopne
aaa
mov
lods
add
stos
aam
push
add
mov
xor
pushf
mov
fstps
xlat
sbb
mov
fildl
nop
notl
lods
int
out
shlb
loopne
cld
sbb
lret
xchg
mov
lods
push
cmp
dec
lods
push
ss
bnd
or
fcompl
push
out
imul
mov
scas
lcall
movsb
loope
jo
stos
push
mov
sti
lcall
stos
jo
mov
pop
daa
call
mov
ds
outsb
pusha
cmp
imul
sbb
repz
mov
add
push
xchg
mov
cli
pusha
sbb
xchg
xor
or
sbb
xchg
aam
and
cmpsb
fs
addr16
pop
fdivl
fists
dec
sbb
icebp
xchg
cld
add
js
xchg
cli
icebp
sub
jb
mov
clc
insb
pop
jbe
push
pusha
or
lds
pop
mov
outsl
outsb
mov
xchg
scas
cmpsb
lahf
lcall
inc
push
pop
lock
daa
mov
or
lods
push
outsb
insb
pop
jns
add
mov
data16
lods
mov
icebp
pop
push
in
add
sub
movsl
movsb
pusha
mov
jb
xchg
or
cwtl
pop
movsb
push
jmp
mov
mov
sub
push
lcall
dec
adc
ret
push
stc
mov
pop
lret
enter
adc
pop
imulb
fildl
mov
imul
mov
out
insl
push
imul
jns
cld
cmc
sbb
push
cld
mov
jo
movsb
push
in
cld
fsubp
inc
test
or
cld
lock
sub
test
mov
sbb
popa
int3
adc
sbb
lret
repz
sti
push
add
aam
xor
mov
push
leave
pop
adc
bound
addb
stos
fiadds
sbbb
and
enter
add
add
or
sbb
imul
enter
adc
and
add
enter
jecxz
mov
out
inc
dec
in
pop
stos
mov
cmpsl
pop
jmp
ret
dec
movsb
mov
push
ss
outsb
rcr
sub
enter
rol
das
fcoms
fnstsw
pop
cmp
jg
push
lods
xor
out
pop
icebp
mov
push
or
in
imul
push
ljmp
or
xchg
int3
enter
or
outsl
adc
loopne
js
int3
jge
or
mov
or
xchg
ja
xlat
enter
push
sbb
mov
add
lods
gs
xor
push
pop
inc
mov
dec
sti
dec
fcmovu
aam
shlb
dec
cmpsb
add
fdivrs
cltd
enter
test
cmp
cwtl
repz
mov
xchg
lea
shrl
imul
lods
insb
ret
and
in
sub
ret
jb
les
es
aas
sbb
mov
aas
cltd
cld
mov
lds
push
lock
cmpsb
xchg
cld
inc
pop
mov
sbb
lret
cmp
cld
int3
aam
jo
sbb
das
mov
and
and
pop
movsb
fcmovbe
cmp
notb
mov
loopne
adc
ss
hlt
jmp
xor
lods
hlt
and
in
notb
sub
cli
enter
inc
sub
mov
add
cwtl
fsubr
lods
das
pop
add
jge
ror
fsubrs
xor
jno
mov
decl
or
adc
pop
pop
rcrb
jg
pop
cld
loop
fcoml
int3
lcall
aas
push
dec
into
enter
add
mov
pop
fsubrl
sbb
pop
push
enter
ficoml
mov
sub
es
lods
add
lcall
ss
fwait
jno
sbb
mov
loopne
out
push
sub
lcall
shl
sbb
je
stos
into
push
or
mov
push
in
jg
sbb
sbbl
cmp
mov
inc
add
mov
and
push
in
stos
jp
js
jp
xchg
sub
add
add
scas
ret
decl
and
je
ljmp
fmul
aam
rcll
out
jp
pop
pop
cmc
xsha1
cmpsb
cmovnp
mov
dec
fidivrl
cmp
loop
pop
mov
daa
iret
adc
adc
jnp
outsb
push
clc
test
andb
dec
call
mov
inc
lret
out
fisubs
in
dec
cld
movb
mov
aam
out
or
lock
data16
xor
mov
nop
xlat
pop
cld
jbe
push
and
ljmp
and
outsl
shlb
or
cmp
filds
and
cwtl
call
mov
out
dec
add
cmpsb
lods
or
push
lret
add
xchg
sbb
mov
adc
xchg
xchg
imul
dec
cmpsl
sub
xor
ds
sbb
push
shr
inc
xchg
test
ficompl
xchg
sbb
fcompl
adc
mov
adc
adc
push
xor
arpl
sbb
sahf
cld
js
in
cmp
jle
fdivl
fistl
dec
push
jne
inc
loopne
iret
push
xchg
inc
ss
shr
aam
xor
jb
dec
pop
ja
insb
cwtl
and
sahf
cs
loopne
ja
lods
arpl
sub
mov
outsb
fs
out
xor
jbe
mov
cmpsl
je
adc
data16
and
adc
and
mov
sub
fdivrp
jb
mov
jo
cli
arpl
pop
pusha
out
sub
mov
pop
sahf
pop
test
jmp
test
or
cmc
inc
fdivrl
push
bound
faddl
in
add
xor
mov
fcmovne
aam
cli
test
inc
push
aas
mov
and
xor
xor
xchg
xchg
mov
cltd
xor
je
loopne
jo
int3
call
aad
fcmovu
push
cli
mov
sbb
test
jnp
pop
push
add
mov
cmp
clc
mov
adc
sbb
push
pop
adc
hlt
mov
popf
adc
xchg
out
clc
jns
sub
pop
loop
fidivs
xchg
pop
scas
cmpsb
pop
pushf
aad
sbb
mov
loop
rolb
or
mov
push
neg
dec
lods
sbbb
adc
cmpsb
sahf
enter
repnz
cld
sbb
jecxz
bswap
xor
insl
adc
loopne
imul
ret
js
pop
jbe
test
jecxz
mov
mov
cmp
pop
jp
mov
or
jae
cmp
xor
mov
jb,pn
fmuls
or
into
push
std
fsubrs
stos
aaa
loope
push
cmpb
pop
ss
lea
rcl
pop
stc
sub
pop
mov
dec
lcall
sbb
stos
cmp
mov
testl
mov
and
add
mov
ret
xlat
mov
xchg
pop
test
cltd
lds
loopne
adc
mov
pusha
xchg
clc
cld
out
mov
out
pop
adc
xchg
scas
inc
mov
xchg
mov
add
sbb
bound
push
push
dec
xlat
mov
jmp
lock
repz
jb
push
cld
sub
xchg
adc
pop
dec
adc
add
loop
cmpsl
sbb
pop
outsl
scas
fcomps
sub
pop
xchg
mov
or
sbb
cld
arpl
dec
fsubrs
test
je
fdivrl
dec
jmp
push
or
xchg
stos
int3
mov
or
mov
rclb
testb
sbb
sbb
sub
inc
and
pop
lret
add
fucomp
inc
adc
fdivrs
dec
into
xor
fiadds
cmp
adc
stc
outsb
jg
inc
test
bound
add
mov
rol
adc
dec
xchg
ret
gs
aam
xchg
jg
xlat
add
movsb
and
insl
icebp
jmp
movsb
mov
cwtl
lret
push
mov
js
rorb
inc
ja
adc
bound
rcr
std
das
imul
fsubs
add
adc
shlb
cltd
xchg
rcr
jb
jmp
adc
faddp
daa
pop
fsubs
xchg
jno
mov
fiadds
into
dec
aam
stos
rolb
fs
ror
xchg
into
adc
jne
sub
nop
push
jo
lcall
add
pushf
jmp
je
aaa
lret
xchg
or
pop
lcall
loopne
data16
es
fs
add
hlt
sub
lret
or
xlat
stos
icebp
push
hlt
xchg
xor
add
pop
push
test
dec
add
enter
aas
adc
jge
and
test
aad
jmp
loope
rorl
xlat
dec
mov
xchg
in
out
push
xchg
xchg
js
inc
cmpsb
dec
push
cltd
in
mov
sub
push
inc
xor
dec
push
push
push
jne
inc
lea
fldl
mov
mov
sbb
shll
pop
lock
stos
loop
sbb
jmp
daa
fmul
shlb
rol
test
movsl
lds
pextrw
cmp
adc
mov
sbb
mov
jo
lods
fwait
negb
sbb
fisubl
add
mov
inc
xchg
repz
ret
xchg
add
adcb
xchg
out
cld
xchg
bound
gs
lods
das
roll
xor
jno
call
push
mov
push
inc
mov
push
icebp
lcall
push
imul
shl
out
icebp
aad
or
mov
mov
and
pushf
xor
lret
stc
push
lods
std
repz
jno
test
inc
ret
fsubl
hlt
adc
adc
push
xor
push
jge
push
dec
adc
pop
cld
enter
xacquire
adc
insb
or
imul
sbb
lret
nop
repnz
pop
add
ret
xchg
dec
adc
add
icebp
jno
mov
je
imul
rcrl
push
ljmp
ficoml
fsubrl
aas
push
xchg
or
rcll
sbb
sub
shlb
test
push
pop
lcall
int3
sarb
pop
mov
cmp
mov
into
add
ret
les
jle
cmp
mov
mov
sahf
add
sbb
lods
int
mov
cmp
cli
into
adcb
inc
test
push
inc
push
outsl
push
dec
rcr
jne,pn
out
mov
sub
into
mov
repnz
repnz
dec
push
sahf
clc
in
inc
leave
loope
outsb
mov
iret
stos
cltd
sub
adc
pop
shll
shlb
xchg
push
rorb
stos
outsl
and
out
cmp
in
fcoml
dec
push
cmpsb
add
xchg
xchg
movsl
pushf
push
jg
fstpl
jg
xchg
loopne
sbb
les
push
ja
shld
push
inc
push
scas
fmuls
test
lret
test
dec
lret
lret
mov
popa
pushf
xchg
icebp
lcall
negl
mov
mov
add
dec
dec
pop
shr
sbb
xchg
push
testb
fiaddl
xchg
cwtl
sub
pop
popf
aam
scas
stos
mov
inc
rcr
orb
insl
out
enter
xacquire
xchg
test
shlb
mull
xlat
jl
jmp
xchg
loop
dec
lea
inc
add
pop
rcrl
adc
lods
sbb
xchg
push
jl
lret
xlat
repz
repz
test
push
dec
mov
nop
add
push
out
xchg
jge
icebp
pop
mov
ret
lods
jae
lahf
push
sub
sbb
add
mov
or
dec
repnz
adc
dec
mov
lock
cltd
into
inc
xchg
or
mov
xor
pop
push
mov
or
inc
xchg
mov
icebp
inc
gs
repnz
push
sbb
jle
das
cmp
insl
aad
jbe
xlat
mov
push
outsb
lds
inc
nop
test
in
lods
add
lahf
repnz
test
xchg
push
rcl
jecxz
push
mov
mov
cmpsb
idivl
jae
js
int3
pop
push
notl
xchg
insl
jle
add
add
aam
mov
subb
xchg
les
mov
addr16
int3
mov
ja
lea
leave
call
in
add
xchg
or
ljmp
loope
cmpsb
mov
xchg
jecxz
mov
sub
lock
adc
xchg
jecxz
pop
int3
repz
xchg
fnstcw
lret
push
inc
aam
pop
popf
icebp
cmpsl
mov
add
mov
add
jl
cmp
push
je
push
data16
jbe
fidivs
enter
xchg
xchg
mov
inc
mov
out
sub
test
or
andb
mov
cmpsl
jg
pop
dec
test
js
adc
cmp
mov
push
nop
mov
fsubl
cmp
mov
popf
outsl
adc
jo
daa
mov
mov
stos
mov
xchg
test
adc
cmp
pop
push
aam
rcrb
je
cwtl
mov
lret
or
push
add
lcall
nop
lret
mov
lods
inc
xchg
mov
sub
ds
fimuls
movsb
pushf
push
out
dec
cs
cli
cwtl
int3
mov
ficomps
dec
mov
add
scas
cmp
test
cs
bound
push
pusha
cmpsb
jge
and
int3
lods
int3
pop
inc
pop
fdivrs
fisubl
jns
push
imul
add
les
pop
push
push
pop
aaa
pop
pop
shrb
dec
mov
cmpsb
xor
jl
add
pop
rcrb
fdivrl
dec
mov
mov
lret
cmp
shll
mov
jb
jo
rorb
pushf
mov
xchg
mov
push
fisubrl
or
push
add
out
mov
dec
xchg
insb
sahf
pushf
data16
into
outsl
hlt
mov
das
pop
jo
pushf
mov
push
das
pop
cmp
sahf
rclb
add
xchg
add
mov
pop
fisubs
stc
push
cld
sbb
fidivrl
mov
cmp
movsb
lcall
aas
mov
sti
push
je
cmp
push
push
mov
insb
pop
mov
fadd
mov
xchg
cmpsb
test
outsl
jb
lods
fcomps
nop
jl
mov
pusha
mov
ss
imul
mov
push
jle
push
mov
stc
gs
cmpsb
pushf
dec
xor
rclb
bound
xchg
arpl
inc
dec
push
mov
jo
pusha
out
fimull
fmull
nop
insb
pop
sbb
out
cmp
jb
je
dec
and
mov
jl
cmpsb
push
and
fidivl
add
push
jl
pop
int3
mov
das
sti
jbe
dec
lods
pushf
cmp
xchg
hlt
int3
push
dec
pop
rcrb
stos
lods
jbe
incl
mov
jp
xchg
jo
inc
idivl
mov
pop
rclb
pop
pushf
clc
insb
mov
xor
testb
dec
mov
js
arpl
and
nop
sti
dec
push
faddl
fdivrl
cwtl
xor
das
or
xchg
push
mov
xchg
cmp
mov
ja
cmp
fadd
into
add
dec
mov
fidivs
lods
into
push
pop
test
fcompl
outsb
pushf
jp
mov
pop
cmpsb
rcll
cwtl
pop
btc
lock
mov
incl
push
xchg
dec
sbb
mov
dec
fimull
pop
mov
stos
push
mov
lods
adc
xor
xchg
movsb
test
lock
mov
xchg
and
pop
aaa
lfs
lods
push
mov
cld
int3
mov
dec
into
xor
xor
std
xlat
add
mov
mov
jo
mov
mov
mov
lret
lcall
subb
int3
mov
push
aam
jmp
mov
cmp
fs
mov
call
pop
out
call
dec
rolb
ficoml
das
mov
sbb
xchg
mov
mov
je
pop
cwtl
or
sub
sub
dec
pushf
sbb
dec
dec
das
xchg
mov
mov
shll
jge
aad
aas
imul
mov
xchg
and
mov
addr16
test
das
insb
outsb
adc
dec
push
pop
mov
comiss
mov
data16
fsubrl
test
mov
push
dec
mov
push
pop
mov
aam
lods
out
mov
int3
push
mov
mov
rcrb
pop
pop
dec
mov
dec
rolb
je
or
cmpsb
dec
mov
outsl
mov
mov
dec
mov
xorl
js
fsubl
int3
push
cwtl
mov
jb
and
xchg
jnp
fsubl
xchg
mov
js
jge
in
mov
mov
push
adc
dec
mov
xchg
mov
imull
push
fs
sub
test
inc
int3
dec
je
push
lret
leave
movsb
pusha
aas
rorl
xor
lea
adc
or
mov
inc
inc
imul
push
xor
cmp
pushf
mov
sti
stos
mov
push
out
dec
and
dec
dec
sub
and
cmp
mov
in
xor
dec
repnz
and
cwtl
sahf
pop
aad
adc
mov
jnp
mov
cmpsb
mov
mov
fmuls
das
cmpsb
xchg
lods
insl
pop
pop
or
ficoms
ror
xchg
add
add
nop
jb
je
adc
xor
pop
fisubrl
jmp
scas
pop
enter
inc
push
and
jp
dec
movsb
lret
aam
mov
push
sub
xor
push
enter
dec
fidivrl
int
mov
pop
fmul
js
dec
test
lock
mov
jbe
mov
lcallw
sub
mov
cwtl
mov
ja
mov
mov
jbe
scas
ret
sar
idivb
outsb
push
jb
shl
ss
add
pop
pop
push
push
ss
rcrb
xchg
pusha
xor
cwtl
sahf
mov
pop
dec
push
insb
mov
test
in
sti
mov
dec
ds
cmp
int3
fcmovu
dec
jbe
pop
in
pusha
sub
dec
push
lahf
int
pop
mov
mov
mov
add
aaa
jbe
mov
add
xchg
cmp
mov
sbb
xor
dec
leave
mov
jae
mov
fs
insb
int3
lcall
test
test
sub
shrb
pushf
push
mov
cmp
scas
jp
data16
sbb
push
xchg
pop
insb
dec
jo
psrld
xor
pop
cmp
lods
aas
sub
das
and
or
das
jb
scas
out
std
dec
movsb
int3
fcom
pop
pusha
ret
test
mov
js
cmc
push
pushf
mov
mov
fcoml
dec
cmpsb
mov
adc
pusha
dec
dec
xor
lods
clc
test
movsl
sub
aam
in
lret
movsb
sarb
mov
mov
test
int3
add
push
cs
std
mov
int3
dec
lcall
das
fsubrs
out
or
mov
fcmovbe
inc
mov
mov
outsl
pop
lret
push
sti
call
js
mov
in
jl
ror
test
add
into
cwtl
mov
pusha
push
pop
setl
lea
bound
cmp
mov
dec
sahf
inc
mov
fisubrs
mov
pop
add
mov
cmp
xchg
pop
ret
das
cld
dec
and
jbe
push
mov
push
dec
out
mov
dec
cmp
pop
mov
cld
test
fsubl
cwtl
cmp
mov
xchg
cmp
adc
dec
xchg
push
push
cmpsb
scas
js
sub
int
lcall
fdivl
mov
dec
aam
xchg
or
xor
and
sbb
mov
pop
inc
sub
nop
sbb
push
movsb
stos
push
xor
mov
in
cmp
lcall
scas
adc
insb
stos
jmp
push
inc
dec
pop
push
jnp
pushf
jb
test
fidivrl
js
push
push
outsb
mov
mov
push
lret
sub
push
lahf
in
cmp
cmpsb
mov
cmp
stos
aam
aam
jb
adc
push
inc
bound
stc
jo
inc
gs
pusha
shll
jg
pop
pop
cli
lcall
pop
adc
pop
mov
aam
mov
hlt
mov
aam
sti
mov
fisubrl
nop
pushf
outsb
sti
push
or
jbe
icebp
cmp
lret
jb
mov
cmp
jo
cmp
insb
rcr
jae
stos
mov
xchg
arpl
pop
mov
lretw
pop
mov
fsubl
dec
scas
ficomps
mov
mov
mov
rorb
cmp
fcom
int3
cmp
shll
fldt
into
loopne
sahf
pop
ficompl
inc
sbb
push
cmp
fidivrs
lret
cltd
insl
cld
loop
xchg
ret
pop
sbb
cwtl
xchg
sahf
pushf
outsb
sarb
fimuls
fsubr
xchg
sub
mov
mov
loope
fimull
lock
pushf
mov
lret
mov
pop
jecxz
jmp
push
rorb
pop
rcll
mov
popf
inc
and
movsl
dec
in
sbb
pushf
push
cmp
xchg
mov
pop
push
pushf
add
nop
lods
test
mov
dec
sbb
movsb
pop
int3
loopne
mov
int3
mov
and
test
cmp
movsl
fs
jl
js
int3
rolb
mov
pop
cltd
adc
pop
mov
xchg
mov
and
mov
out
dec
shrb
pop
mov
out
push
lcall
jo
popa
jl
fsubl
scas
xchg
cmp
sahf
push
push
adc
test
fisubrl
js
ljmp
mov
cwtl
jae
jnp
mov
add
cmp
sarb
pop
loopne
adcb
das
dec
push
jo
sub
mov
movsb
pusha
xchg
push
sub
lds
push
mov
mov
xchg
mov
pop
pusha
ficomps
sahf
mov
sub
dec
push
test
cwtl
push
mov
mov
lret
stos
fistpl
addr16
and
cmp
mov
mov
dec
lods
or
cwtl
add
mov
or
mov
stos
leave
out
cmp
scas
fcompl
dec
fwait
push
inc
int3
insl
mov
xor
mov
pop
mov
mov
jbe
xor
add
lods
loopne
sbb
or
lock
mov
xor
add
pop
outsb
sahf
mov
aam
mov
dec
rcr
push
rcrb
lods
mov
mov
mov
sbb
jmp
sahf
lds
lahf
mov
jbe
xorl
fdivrl
dec
inc
sahf
pop
js
nop
addl
cwtl
mov
jo
jp
mov
lret
mov
jbe
dec
lret
sahf
xor
sahf
mov
cmp
bound
push
pop
xchg
lahf
mov
cwtl
pop
andl
xchg
pop
lcall
fisubs
push
popa
mov
ficompl
xchg
jae
ror
bound
jae
aam
fcmovu
int3
dec
jo
push
mov
repnz
mov
outsb
mov
mov
mov
test
cmp
shrb
pushf
xchg
int3
push
pop
push
outsb
fsubs
rcr
mov
xchg
in
fsubl
sti
add
je
push
outsb
dec
in
cmpsb
push
sub
push
mov
mov
add
leave
shlb
mov
mov
nop
lret
punpckhbw
mov
pop
imul
mov
mov
cmp
lcall
je
gs
shrb
fsubr
jbe
jmp
fidivrs
cmpsb
mov
scas
fidivrl
sbb
lea
cli
lods
fdivs
out
push
mov
pushf
pusha
cmp
data16
and
xor
mov
xchg
ja
and
inc
dec
cwtl
fs
lret
imul
into
xchg
mov
cmp
sahf
mov
cld
fsubl
jb
rcr
cwtl
cli
sti
ficoms
mov
fsub
dec
mov
in
test
je
scas
fdivl
mov
in
xor
inc
insl
in
pop
ret
aam
pusha
mov
test
mov
dec
push
lods
aaa
lcall
mov
or
adc
sub
fsubl
xchg
scas
out
sahf
cmp
pushf
js
sbb
je
mov
mov
mov
in
in
outsb
stos
push
lcall
push
push
and
mov
movsb
mov
fs
mov
cmpsl
push
mov
dec
insl
mov
mov
adc
xor
scas
and
int3
clc
mov
cmpsb
in
push
into
pop
sahf
or
mov
mov
fsubr
mov
mov
mov
js
pop
mov
push
pusha
hlt
lods
push
outsl
daa
out
cmc
jg
stos
mov
mov
call
lret
lcall
cmp
xchg
dec
aam
cmp
mov
je
push
jb
dec
pop
fiadds
cmpsb
into
mov
fwait
cmp
ficoml
jp
popa
cli
ljmp
outsb
xchg
mov
inc
xor
pop
fidivrs
rcll
mov
inc
mov
add
hlt
push
pop
push
mov
or
jp
add
out
fnstenv
fs
xchg
data16
into
mov
outsb
push
dec
cmp
aam
js
shlb
cld
std
nop
int3
pop
pusha
push
movsb
push
sarb
mov
adc
insb
data16
pop
movsb
stos
clc
adc
inc
mov
cmpsb
mov
mov
subl
adc
or
arpl
push
add
test
xor
xor
lods
cmpsb
cmpsb
das
mov
fidivrs
ja
jp
pop
pop
out
lods
jmp
lret
cmpsb
fimull
roll
lods
mov
dec
aam
push
popf
negl
int3
test
jo
mov
je
lcall
jl
fiadds
out
and
mov
pop
mov
mov
jbe
mov
dec
lods
cmp
jp
rorl
adcb
mov
or
push
insl
mov
lret
sti
cmpxchg
insb
push
mov
imul
pminsw
ss
jb
cmovle
mov
mov
into
bound
frstor
test
pop
or
and
jae
sahf
hlt
dec
bound
cmp
add
xchg
js
pop
iret
pop
jae
fistl
mov
add
rcrb
rolb
aad
mov
sub
pop
mov
push
stos
stc
addr16
push
sbb
movsb
pop
mov
ficoms
jg
push
fs
into
ss
insb
roll
xor
push
addr16
push
lcall
daa
je
jbe
movsl
lods
push
dec
pop
pushf
pushf
mov
bound
movsb
into
je
xlat
out
aas
lods
push
int3
push
dec
loopne
push
mov
mov
outsb
fmull
dec
loopne
mov
cmp
mov
push
aam
mov
pop
push
mov
mov
mov
bound
fadds
mov
movsb
cs
adc
xchg
add
enter
cmpl
mov
mov
pop
mov
mov
sub
aam
push
lahf
je
cmp
pop
jle
push
fdivrs
sbb
sub
scas
cmp
ror
addb
icebp
clc
xchg
mov
or
mov
lret
dec
pop
mov
fistps
into
jae
fs
inc
insb
daa
sahf
mov
stos
fldt
rcrb
jbe
jno
hlt
into
mov
lods
xchg
mov
aaa
dec
bound
popf
hlt
mov
mov
les
dec
mov
jp
mov
inc
int3
add
sbb
pop
in
dec
insb
or
rorb
mov
mov
or
sti
push
js
lods
mov
ret
pop
shrb
sti
fs
ror
add
pop
mov
test
pop
stos
cmpsb
jp
pop
dec
push
jo
ficoms
imul
inc
fidivl
or
orb
das
aad
lret
aas
shlb
pusha
sub
pusha
mov
mov
cmpsb
xor
add
cmp
ficoms
pop
mov
xchg
mov
cmp
fsubrl
jle
jbe
scas
fsubrl
aaa
push
mov
xchg
push
sar
xchg
pop
mov
daa
pushf
pusha
dec
dec
and
pop
push
dec
fdivrl
add
jno
cmpsl
xchg
dec
test
and
cwtl
and
push
mov
rorb
lret
cwtl
int3
scas
add
push
jo
cwtl
inc
jbe
insl
inc
jbe
fldl
imul
data16
sub
je
mov
mov
lret
push
mov
outsb
in
xchg
inc
add
xchg
dec
or
pushf
mov
ja
mov
push
insl
mov
xor
mov
mov
adc
mov
ret
dec
mov
mov
cmp
shlb
sbb
hlt
int3
adc
leave
hlt
cwtl
fsubrl
mov
mov
mov
cli
or
xchg
in
lds
pop
fmulp
xchg
mov
insb
aaa
push
push
pusha
dec
fmull
lcall
cmp
insb
sbb
push
mov
add
rcrl
or
inc
jo
rcrb
fs
stos
push
fidivs
push
push
lods
jb
jp
pop
scas
shrb
jl
mov
ficoml
xor
push
movsb
lret
scas
dec
js
mov
jp
cmp
das
lods
ficompl
add
lods
dec
mov
push
data16
lret
pop
pop
fnstenv
cmp
nop
cmp
push
bound
jb
lret
sahf
fs
cs
sbb
sti
sahf
daa
mov
mov
dec
fisubrl
repz
imul
addr16
dec
cwtl
in
mov
mov
fistl
lods
pushf
push
pushf
in
cwtl
fcmovnb
add
mov
lods
mov
jno
mov
pop
pop
sbb
hlt
pusha
nop
cmp
and
xlat
dec
js
das
mov
mov
cmpsb
lcall
data16
mov
cltd
js
pushf
jl
lret
cmp
pop
mov
loopne
mov
mov
push
insb
rorl
call
dec
incl
fiaddl
insb
fs
pop
test
sub
or
nop
pop
xor
shll
fs
mov
mov
cmp
jo
lods
test
adcl
in
cmp
push
sbb
aam
jmp
lods
popa
cltd
enter
mov
mov
lea
mov
pop
mov
into
add
pushf
rcl
insb
scas
mov
sti
arpl
xchg
dec
push
les
shl
je
insl
sti
loope
dec
jne
in
mov
subb
orb
xchg
or
xchg
js
jns
int3
cli
sar
jne
jmp
cli
ja
jmp
xor
sbb
call
dec
leave
sub
sub
dec
mov
in
lcall
push
pop
mov
xchg
arpl
lret
in
loope
test
cmpsb
jb
inc
cwtl
test
lods
jbe
cmp
ja
pop
enter
cmp
mov
push
mov
jo
mov
lods
mov
movsb
lods
push
sub
mov
pop
sub
xor
jbe
sbb
movsb
sbbb
sub
pop
into
test
add
rcrb
mov
lret
xchg
add
fimuls
scas
push
or
test
sahf
mov
daa
mov
sti
dec
movsb
bound
or
push
pushf
fiadds
jo
jecxz
jae
and
mov
jno
insb
xor
xor
xchg
mov
pop
pusha
jo
fsubrs
nop
pop
sbb
fimuls
xchg
mov
push
mov
add
push
in
xchg
roll
test
cmpsb
hlt
cli
cld
addr16
aas
outsb
inc
mov
and
jl
mov
pop
xchg
andb
les
mov
inc
push
test
mov
data16
push
jbe
xchg
add
mov
mov
mov
lods
jnp
dec
movsl
or
ljmp
pop
xchg
mov
inc
inc
push
push
nop
les
mov
stos
pop
movsb
xor
mov
data16
addps
ret
dec
aam
fcoms
xor
and
cmp
js
std
or
dec
into
jp
test
cmpsb
test
jae
mov
mov
xchg
in
cmp
cs
pusha
in
nop
push
mov
or
outsb
sub
mov
dec
out
mov
dec
and
jg
cwtl
dec
push
jg
jno
ret
in
lods
dec
ret
inc
addr16
sub
mov
bound
adc
sub
push
sub
das
in
sbb
jb
push
adc
out
pop
dec
sub
adc
add
test
scas
mov
fiadds
imul
push
sahf
lea
push
push
xor
mov
cmpsb
adc
mov
ja
push
jbe
in
or
into
test
ds
sub
nop
push
pusha
mov
push
in
sbb
push
push
mov
lret
jb
mov
test
push
fisubrl
bound
push
sbb
cmpsb
lea
and
mov
aam
in
jecxz
notl
pusha
inc
fdivs
pop
movsb
test
mov
mov
cmpsb
pop
adc
dec
pop
mov
jp
das
mov
into
cmp
mov
jo
mov
adc
sbb
add
sbb
je
push
pop
dec
mov
notl
mov
mov
add
aam
mov
cmp
mov
sub
jns
jg
les
bound
mov
nop
xchg
test
jns
pop
push
push
cmpsb
pushaw
insb
data16
or
outsl
lret
je
out
jle
jno
mov
mov
loop
data16
outsl
pop
scas
pop
clc
cld
mov
sub
mov
gs
dec
lods
jg
fistpll
push
jp
jo
sub
add
test
lods
fisttpl
mov
cmp
jb
dec
sahf
lock
mov
ret
sbb
pop
ror
push
out
fidivrs
rcrb
loop
push
cmp
xchg
jl
dec
fimull
or
pop
mov
out
cli
cmp
cmp
mov
aaa
or
jo
cmp
push
mov
aaa
inc
sahf
ficoml
sti
rcrb
mov
dec
mov
mov
cs
aam
and
test
mov
stos
pushf
dec
inc
push
pop
mov
mov
dec
insb
rclb
mov
sbb
and
out
mov
jmp
jb
adc
mov
lcall
mov
movsl
cmp
dec
int
data16
mov
fimuls
push
jno
fdivl
jne
movsl
mov
mov
xor
push
cmpsb
pop
outsb
mov
push
nop
ja
iret
js
mov
push
push
mov
adc
dec
mov
jp
pop
add
mov
pusha
fmuls
mov
fs
cmp
push
dec
xchg
mov
into
mov
ja
stos
call
cmpsb
sti
inc
pop
lock
into
xchg
sbb
nop
pop
sbb
scas
mov
das
cmp
cwtl
js
mov
cmp
dec
ret
cmp
xchg
xor
xor
mov
sbb
dec
mov
je
movsb
adc
iret
les
sub
movsb
ficompl
cwtl
xchg
mov
and
cwtl
sub
pop
mov
xchg
movsb
into
fsubrl
dec
cmp
mov
cmp
out
pop
mov
jp
daa
dec
pop
rorb
js
lcall
dec
sahf
movsb
mov
mov
push
mov
mov
test
xor
mov
dec
bound
push
or
rcr
fwait
adc
outsb
push
cs
xor
mov
xchg
dec
je
cmp
into
xor
lcall
xchg
cltd
lock
pop
dec
adc
je
mov
jp
int3
enter
pop
and
lods
and
cmp
aam
lcall
push
jp
mov
jne
lock
cmp
jp
xor
cmp
aam
popf
xchg
pusha
fwait
or
mov
mov
test
or
xchg
cmp
mov
imul
mov
fimull
xor
lret
loop
mov
rcrb
fsubrs
pop
and
mov
push
jbe
inc
mov
lcall
sub
sub
bnd
and
shrb
mov
mov
fmuls
stc
lods
jbe
dec
mov
inc
pusha
in
mov
add
sbb
pop
push
push
sar
gs
mov
pop
mov
xchg
add
pushf
movsb
xor
insb
jbe
mov
add
shlb
in
divl
mov
insb
pop
mov
mov
cmp
mov
adc
aaa
out
movsb
pop
dec
inc
adc
mov
sub
pusha
cmc
out
rclb
pop
mov
mov
int3
xchg
fbld
divl
push
jl
pop
shll
cs
cmpsb
lcall
lds
mov
repz
jns
insb
mov
xchg
pop
aam
sub
fstpt
cmp
out
pop
or
data16
stos
push
fcompl
fcmovnu
or
dec
dec
in
jp
shll
mov
sbb
mov
lock
xchg
mov
sti
mov
xchg
cwtl
cmp
jae
aam
pusha
sti
aaa
int3
out
js
and
mov
lods
fimull
push
mov
aam
pop
pusha
mov
push
fidivl
xchg
rolb
shlb
mov
add
fs
xchg
mov
push
add
mov
cmp
mov
mov
lods
int3
xor
sub
das
mov
inc
pop
or
add
mov
js
cmpsb
leave
fmull
stos
lret
bound
in
nop
xor
mov
xchg
mov
sbb
fidivl
mov
shrl
icebp
jno
cmp
dec
cmp
mov
outsl
scas
out
push
cwtl
stc
fidivl
push
xchg
fs
cmp
rorb
cld
mov
mov
ret
pop
rclb
push
lcall
bound
xchg
mov
popl
xlat
push
repnz
mov
ficompl
bound
mov
lret
xor
movsb
fs
in
mov
in
cmp
push
dec
mov
data16
fwait
popf
pusha
nop
cmpsb
mov
lahf
mov
dec
movsb
jp
js
pusha
mov
push
cmpsb
pop
negl
dec
fimull
popf
adc
int
fimuls
lds
leave
jl
mov
dec
fucomp
dec
push
add
fisubrs
enter
cmpsb
shlb
sub
pop
add
mov
mov
sub
es
je
xor
test
into
scas
out
pop
mov
cwtl
mov
pushf
pushf
xor
jno
test
fisttpl
sub
movsb
data16
rclb
mov
mov
add
insb
sbb
mov
outsb
push
mov
adc
dec
mov
dec
pop
cmp
mov
ficoml
mov
mov
daa
jl
and
sbb
lcall
jl
lret
loope
fs
xchg
movsb
bound
ret
inc
out
mov
ret
adc
cli
lcall
mov
inc
cmp
push
lret
movsb
mov
cmpsb
fistl
pop
pushf
jnp
out
jp
xor
cmp
fisubl
xor
mov
cmp
dec
out
or
push
pop
sbb
pushf
jb
jo
pop
fs
adc
stc
mov
mov
outsb
orb
dec
ss
into
push
sub
rcrb
jae
pop
int3
stos
or
imul
pop
pop
movsb
lods
sub
rolb
dec
ss
mov
lods
or
mov
movsb
pop
insb
mov
add
std
stos
les
fdivs
dec
xchg
xlat
jnp
push
mov
jb
mov
sub
cwtl
dec
lret
jo
xchg
popl
adc
int
stos
out
mov
lret
mov
sti
pop
movsb
pusha
cmc
andl
dec
mov
movsb
adc
add
pop
xchg
add
dec
push
lods
sarb
daa
push
jb
scas
jns
mov
and
jp
cwtl
jl
into
rcrb
popf
loopne
cmp
mov
xchg
inc
frstor
cmpsb
movsb
cmp
mov
rolb
in
fiadds
adc
outsb
cwtl
jle
pop
dec
mov
mov
jae
sbb
lret
dec
loopne
mov
jp
int3
pop
pusha
mov
lods
jmp
lods
inc
pop
lcall
mov
push
in
sbb
out
je
fcom
sarb
add
mov
js
jp
int3
cli
scas
mov
pop
into
insl
cmp
sahf
cmpsb
mov
dec
lock
test
push
mov
push
push
pop
cli
jecxz
jbe
or
imul
sbb
pop
mov
push
push
out
mov
cmpsb
pop
jb
jbe
mov
call
cmp
dec
pusha
data16
stc
xor
mov
dec
mov
fucomi
fsubl
sub
nop
sub
add
cmp
push
jb
adc
nop
mov
sbb
bound
mov
sbb
xchg
push
cmpsb
inc
inc
add
mov
dec
pop
imul
mov
push
into
mov
nop
sti
aam
mov
shlb
lods
push
mov
cmp
ss
lds
mov
push
outsb
add
sbb
push
aas
fcomps
push
mov
cmp
out
adc
loopne
mov
je
aas
xchg
or
add
pop
aam
movsl
test
xor
xchg
dec
jb
mov
mov
jle
fs
scas
lods
lret
leave
push
sbb
pop
mov
push
test
and
pop
js
mov
addr16
fs
mov
push
and
mov
mov
addr16
xor
cmpsb
pusha
push
jp
nop
cli
lods
mov
mov
xchg
push
cmpsb
xor
int3
fsubl
bound
data16
sarl
mov
mov
mov
push
sub
stc
icebp
pop
add
add
mov
insb
stos
mov
sti
inc
js
dec
aas
pushf
in
push
sub
sub
sub
sub
mov
lods
in
xchg
push
fsubr
xor
cmp
mov
mov
insb
lret
test
cmp
bound
test
js
xchg
pop
outsb
push
xor
mov
flds
pop
js
fidivs
ljmp
negl
dec
xchg
dec
jbe
clc
movsb
mov
cmpsb
adc
sub
jnp
mov
ds
inc
lret
loop,pn
xchg
cmp
test
jp
scas
add
mov
mov
dec
fsubl
mov
xchg
push
jnp
push
sub
repnz
decl
xchg
fidivs
sub
mov
shrb
rolb
fiaddl
push
add
mov
das
dec
aam
adc
adc
cmp
mov
or
faddl
imul
xor
inc
adc
mov
fsubrl
add
add
adc
jp
hlt
cli
rol
push
dec
jo
adc
sbb
in
sarb
ja
lods
js
shlb
jbe
push
dec
jb
add
mov
aam
mov
pusha
inc
dec
lret
xchg
dec
stos
fisttpl
movsb
sub
repz
insb
push
sti
pop
jo
mov
jnp
movsb
lods
int3
dec
les
push
in
cmp
shlb
cld
pop
dec
mov
movsb
mov
mov
mov
insb
lock
pop
dec
repz
aam
mov
fildl
sbb
pop
add
lret
mov
bound
std
add
scas
data16
movsb
adc
aam
jg
jbe
lcall
sahf
jmp
icebp
cvtps2pd
mov
je
fmull
xor
jb
sbb
mov
inc
mov
add
pop
pop
pop
sbb
add
sahf
outsb
jmp
in
ds
xor
and
aas
dec
into
mov
push
push
fisttpll
mov
lods
jp
jecxz
stc
add
aam
dec
movsb
mov
push
add
cmp
lret
js
jle
cmp
fcoml
lods
mov
lods
cmp
mov
xchg
cmp
test
les
lcall
popf
cmp
push
rclb
lcall
mov
sbbb
mov
xor
mov
stos
xorl
aas
jns
cmpsb
push
mov
sahf
push
xrelease
lret
mov
pop
xor
aaa
aaa
int3
pop
pop
nop
pop
out
outsb
mov
mov
pusha
aam
mov
mov
outsl
pop
lret
cs
into
cmp
outsb
mov
dec
daa
push
pusha
js
jne
fcoms
lcall
xor
push
inc
jae
data16
aaa
mov
xchg
sub
or
mov
lods
mov
push
mov
jo
lret
xchg
mov
mov
divl
dec
aas
inc
xchg
mov
pop
nop
xchg
sbb
int3
dec
pop
mov
insl
dec
dec
xor
mov
pop
sbb
pop
dec
fisttpl
cmpsb
xchg
mov
mov
sbb
dec
fisubrl
mov
mov
mov
stos
sub
xor
mov
loopne
shlb
mov
stos
mov
xchg
mov
pusha
mov
pop
mov
mov
lcall
rorb
fistps
mov
sbb
jb
push
mov
outsl
aaa
bound
jge
imul
cmp
dec
push
lods
stos
js
dec
int3
aaa
mov
pop
je
lea
sub
dec
sarb
dec
movsl
add
mov
je
inc
int3
sti
inc
jo
cmp
daa
movsb
sbb
pop
test
cmp
fdivs
lcall
cmpsb
mov
mov
shlb
fisubrl
mov
cli
cmpl
sub
lret
pop
sahf
insb
fcomip
ret
and
mov
pop
mov
xor
dec
sti
loopne
jne
mov
in
and
fsubrs
test
sub
sub
dec
int
push
cli
repz
bound
outsb
push
ret
push
fdivrs
subl
cwtl
mov
fs
jbe
jp
or
sahf
and
mov
scas
add
out
adc
lea
cmp
rcrb
outsl
jp
mov
dec
inc
lret
fs
pop
test
sbb
and
or
pop
pusha
mov
fisttpll
stos
daa
outsb
sahf
jb
aaa
mov
push
inc
mov
mov
pushf
add
shlb
dec
mov
pop
sbb
dec
mov
movsb
fmull
fisubrl
and
movsb
ret
into
add
jg
loopne
pop
xchg
add
test
mov
cld
pop
pop
dec
pusha
jb
mov
adc
dec
insb
mov
push
jecxz
aas
cmp
xor
sbb
das
out
cwtl
push
mov
pop
test
mov
pushf
mov
mov
js
loopne
push
aas
pushf
push
daa
cmpsb
nop
ficomps
arpl
lret
pop
sti
data16
pop
popa
fisubrs
lods
lret
xlat
mov
ficoms
cmpb
fidivs
push
data16
inc
jl
test
movsl
inc
fimuls
sub
lret
mov
mov
add
mov
mov
jb
addr16
mov
int3
fisttpl
jne
or
inc
inc
out
fcmovu
mov
je
mov
int3
dec
mov
push
lret
or
aaa
push
bound
push
xchg
addr16
pop
mov
shlb
lods
scas
or
cmpsl
pop
fwait
jae
fistpl
jb
xchg
lcall
lock
pop
fsubp
jge
pusha
cmp
int3
push
lods
dec
jb
cwtl
fcoml
xchg
out
pushf
mov
mov
dec
jo
divl
add
pop
shlb
mov
data16
mov
hlt
lret
add
das
int3
bound
xchg
mov
lods
les
cmpsb
or
mov
push
push
mov
lret
xor
push
pop
or
fcom
imul
stos
movsb
xchg
in
push
cmp
and
xchg
rcll
cmp
lods
js
xchg
mov
scas
dec
fcoms
jmp
pop
daa
insb
xchg
fcomps
je
xor
mov
mov
push
dec
add
jmp
push
je
fsubl
pusha
dec
mov
int3
mov
sub
arpl
add
dec
pusha
pop
mov
add
aam
js
pop
xchg
test
iret
dec
xor
pop
cld
mov
into
dec
pop
stc
cmp
xchg
xchg
cmpb
mov
mov
data16
jbe
stos
lods
jb
cmp
mov
cmpsb
adc
push
xor
cmp
lret
pop
push
sti
je
js
xchg
bound
fdivrl
jp
xchg
call
dec
and
pusha
mov
into
fimull
and
adc
adc
push
movsb
pop
pop
add
fs
cli
movsb
mov
push
mov
roll
lods
mov
xchg
push
jo
lcall
je
or
push
scas
lret
data16
lret
or
add
fidivl
imul
push
cwtl
sub
and
cli
rcrb
sahf
pop
in
sarb
arpl
dec
push
add
fldt
xchg
push
int3
jp
int3
mov
loope
lods
je
mov
lahf
pushw
into
mov
out
push
lret
dec
aam
mov
adc
push
fdivl
adc
hlt
fimuls
or
xchg
mov
fstpt
mov
pop
pushf
or
pop
lea
pop
mov
cmpsb
scas
mov
cltd
ficompl
push
mov
pusha
inc
pop
cmp
rclb
pop
mov
lods
inc
das
mov
insb
aam
jne
data16
ljmp
xor
lods
jno
mov
fistl
xor
xchg
mov
cs
sarb
adc
je
movsb
stc
push
mov
fistl
jp
sub
sub
xchg
pusha
mov
je
add
js
add
lret
lods
nop
mov
dec
cmpsb
lods
mov
loopne
inc
hlt
xchg
loop
ret
ficompl
jp
pop
mov
pop
sbb
stc
fmull
mov
cld
test
lods
rcrl
je
push
test
adc
xchg
jb
pop
out
xchg
test
shr
mov
cli
sbb
test
and
std
lods
mov
fcomps
pop
sub
scas
pop
sahf
push
jecxz
lods
repz
mov
shlb
mov
js
pop
sub
sub
lods
enter
mov
cmp
push
cmp
mov
arpl
push
stos
pushf
jo
cli
movsb
jl
mov
sti
xor
shlb
mov
jnp
cmp
js
dec
aam
inc
pop
mov
test
pop
shll
fsubs
mov
movsb
nop
addr16
cmp
shlb
insb
jo
jb
stc
cmp
je
lret
lods
xor
insb
repz
mov
test
lods
cmp
mov
fisubl
push
adc
sahf
nop
cmovs
sbb
push
fiadds
or
loopne
loop
sub
and
fbstp
aam
cmp
pop
cli
push
jl
into
inc
pop
sahf
mov
pop
jle
fs
and
xchg
and
stos
stos
jae
je
xchg
das
mov
xchg
repnz
cmpsb
add
sub
sub
xchg
popa
add
test
mov
mov
es
sahf
fidivl
adc
dec
bound
cmp
mov
pushf
jp
pop
mov
push
xchg
cli
addr16
mov
jno
nop
fstps
int3
xor
test
pop
mov
pop
andl
dec
rclb
inc
jne
mov
in
pop
mov
je
cmp
mov
cli
jmp
aad
xchg
data16
ficompl
jns
pop
lret
mov
add
cmpsb
add
bound
cmp
mov
out
mov
or
sbb
aaa
jns
mov
ficoml
fs
fwait
jp
or
lods
jb
hlt
movsb
cs
shlb
fidivrs
dec
xchg
jp
push
pop
fidivs
out
pop
mov
fidivs
mov
lods
push
push
in
mov
fdivrs
pop
int3
cmp
pop
bound
imul
jecxz
les
stos
cmp
mov
jp
push
nop
jp
mov
ret
inc
lock
pop
fisubrl
ja
cmpsb
push
pop
notb
push
push
and
lret
sbb
or
push
pusha
pop
dec
popf
pop
dec
ds
insb
push
daa
cmp
mov
mov
mov
jle
mov
dec
daa
lods
fidivrl
mov
shrb
sbb
lods
popa
mov
lods
nop
inc
movsb
cmp
lret
and
insb
js
loop
out
pusha
bound
pop
test
xor
add
stos
pushf
fwait
dec
cld
out
into
pop
dec
or
out
xor
mov
mov
inc
lret
js
bound
test
push
aas
lret
outsb
xchg
imul
dec
lret
mov
sarb
scas
shrb
push
pop
sahf
pop
sub
insb
mov
add
in
pop
scas
arpl
sahf
insb
out
dec
mov
adc
cmp
jb
push
mov
outsb
pop
sahf
jp
and
inc
cmp
cwtl
mov
out
fbstp
cmp
dec
or
sbb
or
pop
push
outsb
ficomps
xchg
mov
mov
lods
out
ds
jo
mov
cmp
fnstsw
xor
cwtl
dec
sub
popf
rcrb
add
mov
sub
cs
xchg
mov
mov
inc
dec
push
mov
mov
js
mov
outsb
mov
arpl
aam
cmpsb
mov
cmc
pushf
sahf
movsl
dec
sub
outsb
fcompl
pop
fstp
je
mov
xor
loopne
nop
and
movsb
in
cld
std
push
lods
sub
mov
std
cmp
mov
mov
dec
xor
mov
add
sub
outsl
jle
in
dec
dec
stos
push
movsb
xor
mov
xchg
xor
pop
dec
fimull
fcoms
push
cmp
jbe
dec
mov
cli
dec
fdivl
rcrb
mov
sahf
xchg
mov
ja
fcomi
lods
pusha
sub
rcr
cmp
mov
lret
ret
rorb
in
sahf
adc
scas
shlb
daa
jb
cmp
dec
xchg
fcompl
mov
add
pop
pop
mov
int
fcomps
cmpsb
movsb
sub
sub
cmp
mov
hlt
sahf
mov
xor
cmp
lcall
out
or
divl
pushl
mov
mov
mov
xchg
push
cld
pushf
into
pushf
dec
addr16
or
cmp
pushf
pop
arpl
xchg
scas
fadds
pusha
push
shl
push
je
mov
pop
mov
pop
ret
inc
mov
cli
popa
mov
push
push
fcoml
jno
les
cld
outsl
cmpl
jb
int3
pop
fsubrl
ret
or
adc
dec
push
push
mov
pop
rcrb
lret
movsb
pushf
inc
mov
lret
arpl
fidivs
mov
sub
stos
int3
and
jbe
cli
in
jp
jl
scas
lods
dec
adc
xlat
push
cld
jp
nop
mov
push
jbe
bound
mov
into
sbb
inc
dec
shll
dec
cmp
mov
lret
dec
aam
xor
js
cmp
mov
hlt
sbb
js
sti
add
in
fs
adc
jo
into
lret
inc
lret
mov
lods
push
daa
rorb
xor
cs
test
pop
js
test
aas
mov
aas
fsubs
stos
push
outsb
cmp
push
mov
lahf
xchg
or
fmuls
mov
test
adc
mov
push
shll
mov
sub
mov
test
data16
movsb
pop
and
fs
movsb
push
cmp
insb
mov
cmp
outsb
rclb
loop
stos
pushf
mov
fistpl
mov
xchg
fstpt
nop
pmaxub
scas
jns,pn
sahf
cs
mov
push
push
push
nop
sbb
fcmovu
leave
and
aam
mov
mov
cwtl
cmp
mov
insb
mov
mov
pop
scas
jbe
add
fisubrl
jl
mov
dec
cld
lds
inc
ret
xchg
mov
inc
push
add
add
jns
rcrb
inc
nop
mov
dec
mov
jb
movsl
stc
inc
push
xchg
fmull
mov
lods
jmp
dec
fsubrs
mov
lock
mov
inc
mov
pushf
stos
xor
dec
mov
pop
push
and
leave
add
fcoml
nop
mov
push
aas
lds
in
push
das
and
bound
fisubrl
xor
xor
insb
je
push
xor
aam
cmp
sahf
push
pop
fsubs
adc
dec
mov
cld
xchg
mov
or
or
je
stos
loop,pn
cmp
movsb
fmul
stos
mul
jl
lcall
faddl
lret
fsubl
mov
fdivl
or
inc
fimull
push
dec
test
mov
xchg
mov
les
pushf
inc
repnz
cmp
lret
hlt
jp
xchg
cmp
mov
dec
pushf
jnp
insb
mov
sahf
xor
dec
cs
or
rcl
cwtl
lret
into
int
cmc
insb
lods
stos
dec
mov
sahf
mov
lret
mov
mov
lods
enter
fldcw
addr16
movsb
cmp
mov
xchg
pop
stos
mov
scas
inc
xor
lcall
test
insb
dec
faddl
rclb
xchg
imul
js
xlat
pop
jbe
and
daa
sub
mov
pusha
flds
cmp
xchg
iret
fidivs
in
push
xchg
outsl
imul
push
repz
mov
movsb
int3
mov
dec
loope
jl
dec
lods
int3
mov
lret
mov
push
hlt
push
mov
lret
or
jb
xchg
daa
out
push
out
xor
aam
xchg
scas
cs
rclb
dec
loope
je
fdivrs
lods
fs
lret
data16
cmp
mov
insb
pushf
int3
push
je
int3
jae
dec
jl
mov
fwait
pusha
mov
outsb
cmpsb
mov
add
adc
xchg
loopne
and
xchg
mov
cwtl
in
rcrb
sti
jmp
aam
pop
sbb
mov
aaa
leave
ficomps
arpl
jp
push
outsb
fdivr
loop
pop
nop
fs
push
add
fisubs
pusha
aas
imul
jp
dec
nop
xchg
fisubrs
or
in
leave
mov
mov
mov
push
leave
into
out
push
lods
jnp
mov
pop
lret
lods
bound
sbb
mov
push
mov
sahf
js
psrld
xor
jp
imul
jo
lcall
fisttpll
cmpsb
out
mov
mov
mov
push
dec
test
push
test
push
push
lret
dec
push
mov
adc
cmpsb
ja
jge
add
mov
stos
cmp
scas
nop
inc
add
test
pusha
fisubs
push
push
dec
pushf
not
mov
les
test
cld
aam
in
lcall
adc
jle
inc
push
sub
pop
stos
xchg
xor
pop
dec
jo
push
mov
out
cwtl
mov
jp
dec
lcall
lods
mov
push
loopne
mov
daa
mov
xor
push
pop
push
scas
js
bound
jl
pop
or
or
stc
xor
fadd
rorb
sahf
test
rclb
pop
cld
xchg
into
jb
dec
inc
int3
inc
pushf
cmc
iret
hlt
add
adc
inc
out
jb
dec
out
in
mov
push
mov
fcoms
stos
stc
jae
cmp
jnp
pop
pushf
lret
xor
adc
mov
fcomi
repnz
cmp
fcompl
fdivrl
push
jge
lcall
fsubr
neg
pop
mov
into
xor
dec
mov
jge
je
aam
movsb
mov
hlt
mov
shlb
sub
outsb
pop
lcall
dec
mov
add
mov
xchg
mov
dec
addr16
sti
add
jbe
out
pop
test
push
jl
call
rcr
adc
out
mov
popl
arpl
mov
mov
dec
int3
dec
mov
xlat
jl
mov
mov
pop
sub
pop
jnp
fs
in
ficompl
call
cmp
xor
cwtl
stos
xor
mov
pop
mov
cmc
push
sbb
lock
orb
nop
sahf
fcoml
dec
mov
out
stos
aaa
mov
push
pop
hlt
push
fcomp
das
cwtl
dec
test
scas
mov
lods
insb
lods
pop
jo
imul
lea
sub
mov
inc
outsb
in
xchg
xor
sbb
lcall
push
xchg
push
adc
cmp
jne
push
pop
aaa
fsubrl
dec
rcrb
js
outsb
sub
pop
mov
loope
outsl
push
add
cmp
push
pop
out
mov
push
inc
lods
sub
fiaddl
in
pop
add
aam
sbb
push
inc
mov
xchg
xchg
insb
cs
fisubs
add
lods
cmpsb
add
js
mov
fs
fsubl
mov
xor
push
je
fisubl
dec
mov
jl
pop
lret
mov
mov
mov
leave
cmp
dec
jnp
movsb
cmp
mov
pushf
inc
pop
movsb
data16
ficoml
and
xchg
es
add
arpl
adc
inc
sub
push
adc
test
int3
mov
add
scas
fcoml
ficompl
mov
jo
mov
jne
iret
test
jl
lret
fisubrl
mov
push
les
out
pop
popa
mov
adc
cwtl
mov
pop
adc
cmp
pusha
xchg
or
js
mov
outsb
xchg
mov
mov
inc
xchg
dec
sub
pop
test
inc
adc
dec
dec
mov
lcall
mov
pusha
dec
dec
icebp
test
mov
add
mov
mov
xchg
call
push
cmp
mov
sbb
mov
mov
lods
lcall
imul
sub
add
gs
inc
test
cmpsb
dec
fs
cmp
pushf
cmp
ja
mov
int3
aam
dec
mov
das
jmp
out
das
adc
cmpsb
shl
mov
xor
int
xchg
mov
sbb
jp
dec
shlb
fcmovb
cmp
push
push
lret
clc
test
inc
test
inc
cmp
fidivrs
into
push
mov
jl
pop
jp
js
fsub
mov
fs
das
inc
dec
int3
and
push
mov
xor
push
xor
cmp
xchg
lret
jno
jne
xchg
inc
xor
out
mov
int3
xor
pusha
sbb
outsb
int3
inc
xor
cmpsl
fdivrl
pushf
ret
pop
mov
sahf
cmp
dec
push
mov
int3
xchg
cmpsb
ja
pusha
int3
jbe
stos
js
mov
or
insb
les
pop
and
xor
fs
lods
sahf
jne
cmpsb
ret
mov
jp
mov
mov
loopne
push
adc
xchg
js
push
ret
sbb
lcall
int
je
shlb
jo
sub
fidivs
jl
mov
fdivrs
and
pop
mov
jo
push
cmp
insb
out
xor
bound
pushf
stos
cmp
dec
pop
sahf
mov
rcrl
movsb
lcall
add
ficomps
jb
cmp
fs
inc
test
and
mov
xor
cmp
fimull
lods
faddp
mov
pop
xchg
sahf
xchg
sub
jo
push
push
cwtl
or
xchg
cld
sub
les
mov
outsb
aam
dec
push
les
jnp
stos
add
mov
in
pop
insb
add
stos
shl
data16
mov
mov
mov
ljmp
das
adc
push
shl
or
adc
cmp
mov
daa
mov
xchg
mov
sub
and
cmp
pop
lds
das
adc
jne
or
xchg
jo
mov
push
outsb
xor
jb
or
add
inc
enter
mov
dec
cmp
push
sarb
dec
sahf
push
jg
sahf
lods
aam
xor
dec
mov
dec
pop
mov
int3
mov
sub
js
xor
popfw
push
pop
mov
lcall
or
out
push
xor
mov
fs
jbe
pop
mov
inc
mov
int3
jo
fcomp
lods
std
rorb
push
mov
leave
pusha
fidivrs
push
imul
mov
je
mov
dec
push
shl
fidivl
push
cld
dec
stos
or
xlat
jnp
and
fs
push
cmp
jl
lcall
add
aaa
data16
push
test
mov
xchg
sub
push
ja
pop
in
mov
push
mov
pop
insb
bound
shll
pop
hlt
mov
fsubrs
outsb
js
pop
push
cmpsb
push
mov
pop
xchg
dec
jnp
scas
fldt
jbe
push
out
dec
fmull
lods
push
adc
adc
mov
xchg
sahf
fisubrl
aaa
out
andps
std
pusha
pushf
xchg
js
cmp
shld
sahf
mov
jnp
mov
cmpsb
mov
into
jnp
mov
cs
imul
lcall
pusha
nop
lret
loop
adc
insb
mov
lret
push
mov
pop
lods
test
xor
mov
das
xor
jo
iret
xor
push
bound
mov
ljmp
int3
pop
int3
dec
mov
push
mov
mov
popf
loope
dec
cmp
lods
int3
push
repnz
mov
dec
mov
sbb
mov
fidivl
jnp
push
pop
sbb
cmc
mov
and
push
mov
lcall
pop
jbe
dec
les
mov
fiaddl
mov
lret
push
mov
mov
hlt
mov
pop
scas
dec
jo
js
int
add
out
dec
ljmp
sti
je
dec
aam
dec
imul
mov
push
lcall
cmpsb
dec
xor
fnstenv
into
lods
rcrl
pushf
dec
sahf
nop
sub
xchg
push
adc
jo
jp
mov
xchg
stos
mov
jmp
pushf
arpl
add
fidivrs
mov
loopne
fdivl
sbb
adc
pushf
mov
push
les
fs
jo
jbe
pop
dec
lcall
fmul
mov
nop
jge
push
mov
fucomip
sub
es
test
rolb
xchg
fdivrl
and
imul
pusha
jp
dec
mov
mov
sbb
loope
pop
push
dec
mov
insb
xor
adc
popa
cmp
dec
test
add
and
in
data16
lods
lods
and
sub
in
hlt
push
daa
push
mov
jb
add
test
sahf
xor
and
pop
scas
dec
jb
cmpsb
fstpt
fs
pop
js
into
iret
imul
nop
je
xor
bound
pop
pusha
mov
lods
lds
xor
push
das
or
lret
loopne
xchg
jecxz
cmp
push
mov
sahf
cld
inc
pushf
xchg
mov
loop
mov
jbe
pop
lret
jbe
push
repz
push
mov
aad
push
push
mov
cmp
push
pop
into
js
mov
xchg
adc
fsub
mov
mov
bound
pop
fisttpll
mov
movsb
test
adc
mov
not
pushf
loopne
jo
js
jmp
pop
movsb
movsb
lods
xchg
mov
les
sub
pop
pop
push
mov
push
mov
mov
pop
sub
xor
mov
cs
sbbl
int3
or
in
test
fdivrs
inc
test
sub
pop
notl
mov
pop
cmp
shrb
fdivrl
mov
lcall
push
pop
mov
repnz
cld
movsb
js
jb
dec
outsl
cmpsb
adc
sbb
dec
pushf
xchg
jp
push
pop
mov
jo
in
insb
mov
loope
out
je
mov
mov
cld
and
cwtl
xor
incb
xchg
push
idivl
push
mov
mov
int3
mov
pop
lret
pop
scas
mov
adc
and
jnp
out
fs
rcr
aam
adc
shll
pop
cwtl
jg
add
mov
pop
push
out
pop
movsb
xchg
lds
ficomps
sbb
loopne
mov
arpl
fidivrs
shl
mov
dec
xchg
sub
int3
cs
push
adc
stos
clc
push
mov
je
xor
push
xchg
jmp
pop
fs
dec
test
je
fisubrs
mov
pop
nop
jb
mov
ds
das
outsl
lods
mov
clc
cld
cmp
adc
mov
push
mov
int3
jno
je
jnp
sahf
add
xor
mov
push
out
cs
loop
insb
push
cmp
pop
mov
or
push
fxtract
movsb
mov
jae
push
cmpsb
rcrb
lea
fcom
es
pushf
sbb
mov
retw
ja
mov
movsb
mov
lock
lret
je
stos
dec
mov
push
mov
fsubrl
fcomps
lret
mov
in
loop
gs
add
fs
mov
sbbb
icebp
jbe
sti
hlt
je
push
cmp
xchg
mov
pop
dec
shll
xor
test
bound
idiv
pcmpgtd
insb
fidivrs
or
lods
rcrb
pop
sub
sbb
and
dec
cmpsb
in
lcall
mov
cli
enter
inc
jp
jae
data16
pusha
les
mov
jnp
jbe
pushf
cmpsb
fisttpl
js
ret
pop
sbb
int3
jp
lock
cs
pop
mov
daa
jp
push
mov
inc
mov
lds
int3
into
add
hlt
dec
aaa
pop
cwtl
movsb
xchg
jbe
jecxz
cmp
mov
pop
xchg
xor
mov
jnp
pusha
jo
push
mov
mov
fcompl
popl
inc
stos
inc
das
fcoml
dec
cmpsb
cmp
scas
jp
xchg
add
nop
xor
cmpsb
mov
mov
lcall
mov
test
pop
cli
push
mov
cli
xor
cmp
pushf
scas
outsb
decl
cmp
pop
mov
add
mov
rcl
pop
hlt
add
fcomps
das
xchg
fisubl
sbb
jns
mov
fcmovne
fistl
lods
insb
mov
jnp
cmpsb
test
mov
fidivrl
mov
lcall
mov
stos
pushf
cmp
cwtl
fwait
cwtl
dec
js
dec
int
sub
pop
call
rclb
pusha
dec
add
aad
fmul
jb
dec
push
out
fimuls
mov
lcall
mov
inc
lret
jae
aam
xor
fsubs
dec
jns
mov
xor
aam
dec
lcall
xor
mov
mov
lret
dec
pop
and
shll
inc
in
insb
in
xchg
hlt
cmpsb
dec
lds
out
fcomi
inc
mov
sahf
push
jno
mov
cmp
insb
lcall
dec
or
test
mov
int3
aam
jp
mov
insb
outsb
xchg
dec
add
jp
sub
adc
mov
add
insb
mov
int3
das
nop
outsb
mov
mov
lcall
stos
xlat
dec
or
fisttpl
je
mov
pop
cmpsb
dec
xchg
adc
aaa
jo
shlb
lahf
enter
push
cmpsb
js
mov
ljmp
lods
xchg
xchg
mov
data16
ds
mov
rcrb
out
xchg
out
jle
mulb
outsb
lock
push
fninit
inc
fsubr
lcall
cmp
aad
ds
push
pop
cs
lods
push
loopne
decb
pop
adc
mov
mov
sbb
jmp
mov
loope
daa
nop
aam
push
add
fsubl
mov
cmpsb
pop
xchg
scas
sahf
pop
push
add
push
pushf
mov
lods
mov
cmp
jo
mov
cwtl
fstpt
pop
dec
mov
pop
lds
pusha
movsb
pushf
arpl
mov
arpl
into
outsb
mov
or
lret
test
push
xor
push
fidivl
fidivs
jne
out
add
xlat
push
mov
pop
sarb
jb
aam
mov
dec
pop
xchg
scas
dec
pop
into
push
das
mov
push
outsl
mov
test
lret
mov
das
and
mov
fwait
push
shl
dec
test
mov
mov
pushf
out
icebp
fisubl
scas
mov
mov
mov
std
arpl
add
pop
mov
pop
dec
mov
mov
cmp
dec
pop
int
test
inc
cmp
pop
sahf
movsb
mov
pusha
mov
fists
fnstcw
push
xchg
dec
xor
adc
mov
pop
shrb
add
cmp
lret
mov
inc
push
mov
lods
pop
data16
sub
negl
push
mov
js
cmc
xor
ja
mov
sub
sbb
scas
pop
outsb
push
push
dec
fadds
sbb
ficomps
and
pop
and
xor
push
in
push
push
scas
lock
pop
xor
mov
jmp
mov
mov
nop
rcrb
pop
mov
fidivrs
push
fimull
in
pop
push
sbb
lret
sbb
pusha
int3
scas
cmp
jb
data16
shll
daa
shrb
pop
lods
push
sub
and
fstl
nop
shlb
pop
mov
fimuls
mov
push
lds
mov
mov
in
pop
cmp
inc
test
mov
inc
les
outsb
push
mov
js
push
cmpsb
inc
int3
xor
lcall
or
je
dec
mov
lret
jp
mov
inc
sbb
cli
inc
jmp
push
and
pusha
scas
addb
hlt
mov
sete
jbe
cmpsl
outsb
jne
jns
push
jl
push
push
lcall
fimuls
mul
jl
xchg
sub
fs
push
pop
mov
jp
cld
stc
push
hlt
jo
xor
xchg
into
xchg
add
out
pop
outsb
lods
sbb
rorb
mov
mov
jp
xchg
cli
jp,pn
dec
sub
and
dec
stc
jl
in
pop
mov
mov
lret
fs
sahf
pop
pop
mov
and
out
push
lods
ja
mov
mov
dec
lock
mov
mov
pop
js
jge
and
fidivl
xchg
dec
push
popa
mov
ds
push
push
or
mov
mov
push
sbb
inc
mov
and
outsb
scas
mov
dec
inc
gs
mov
cmp
fs
push
daa
in
adc
add
jp
icebp
js
rclb
je
mov
mov
mov
lods
push
cmp
je
mov
dec
push
pop
dec
dec
nop
jl
cmpsb
lods
les
mov
mov
pop
lret
mov
inc
lock
cmp
cmpsb
jo
dec
popa
jge
pop
push
mov
sbb
adc
mov
xchg
ficomps
pop
shrb
mov
push
add
jmp
into
jne
lret
mov
push
cmp
pop
xchg
into
stc
sub
jae
test
push
cmp
mov
cs
push
lret
leave
stc
and
pop
pusha
pop
sbbb
cmpsb
mov
add
dec
xor
cmp
stos
into
inc
mov
insb
mov
popf
int3
loopne
pop
mov
dec
insb
pop
xchg
lcall
mov
gs
mov
mov
fisubl
xor
test
pop
les
add
xchg
fisubs
cmpsl
icebp
mov
fisubs
dec
test
lock
in
loop
aam
das
mov
dec
sbb
mov
pop
mov
js
jb
sbb
mov
sti
dec
rcrb
addr16
dec
dec
dec
sarl
aam
je
gs
ret
cmpsb
mov
xor
stos
jo
dec
in
jb
ror
lock
adc
mov
mov
cmp
insb
pop
outsb
jbe
nop
fs
mov
in
rcrb
jp
cli
dec
xchg
mov
imul
mov
mov
inc
decb
lret
or
xchg
js
test
add
cwtl
sbb
pop
rcrb
stc
jmp
jle
push
aam
inc
ds
inc
add
dec
stos
je
pusha
mov
pop
mov
adc
jb
cmp
lcall
lret
not
jp
enter
inc
xchg
pop
or
pop
add
mov
fdivrs
lret
push
lods
xchg
out
mov
movsb
dec
pop
sub
mov
dec
mov
stos
pop
das
and
pop
int3
pushf
nop
sbb
test
push
pushf
lds
dec
pop
rol
rorb
jb
lods
sbb
dec
sti
movzbl
out
mov
lea
filds
repnz
mov
pop
mov
cli
mov
xor
xor
pushf
xor
jecxz
movsb
aad
outsb
cmp
mov
pop
dec
movsb
stos
sbb
lods
xor
cmp
data16
inc
sahf
push
je
dec
rclb
mov
push
mov
shrb
test
push
pusha
inc
dec
sahf
ficoml
adc
pop
dec
sub
mov
dec
xchg
xor
sbb
mov
jmp
jb
dec
jbe
mov
cmp
dec
pop
dec
jl
jecxz
jo
jbe
cli
xchg
pop
aam
iret
shlb
lock
mov
cmp
nop
mov
hlt
dec
push
pop
fidivrl
scas
pop
pusha
mov
pop
mov
mov
sbb
adc
pusha
mov
int
and
aam
insb
rcrb
clc
pop
das
je
movsb
jb
ret
add
movsb
mov
mov
scas
mov
xor
mov
xchg
sub
push
dec
cmpsb
fs
pop
jbe,pn
lods
pop
mov
xor
xchg
jmp
daa
rcr
pop
sub
push
pop
jle
cmc
push
test
jb
movsl
mov
mov
pop
pop
je
jb
rol
jnp
push
lret
icebp
push
pop
pop
mov
lret
pop
into
add
je
nop
cmp
push
pop
loopne
data16
push
sbb
xor
pop
ss
fisubl
nop
xor
mov
movsb
jle
pusha
aas
in
stc
addr16
jp
aas
dec
pop
cld
cld
movsb
xchg
dec
sbb
fstl
sub
nop
mov
fmull
mov
cmpsl
push
arpl
fistps
mov
sti
fmuls
xchg
hlt
push
sti
pop
sbb
cmp
dec
mov
pushf
lock
mov
in
sti
or
outsl
pusha
jbe
xchg
mov
lcall
mov
and
cmp
int3
push
jp
pop
xchg
pushf
pop
nop
mov
fwait
rorl
imul
insb
mov
stos
lcall
inc
xchg
sub
push
into
and
xor
jo
push
sarl
xchg
je
stc
add
mov
lcall
test
pop
dec
push
push
jbe
push
cmp
cld
mov
mov
xor
dec
repz
in
mov
fcompl
xor
mov
lcall
into
mov
mov
mov
lret
sbb
shll
push
insb
jo
bound
sub
loope
enter
aas
test
rcr
xchg
push
fs
push
lcallw
pop
mov
mov
cwtl
sbb
mov
lcall
xchg
ror
mov
cmp
fisubrl
xchg
xor
mov
mov
xchg
test
sahf
js
mov
cld
inc
rorb
cmp
jb
pusha
imul
mov
xor
jge
or
test
or
mov
xchg
movsb
push
stos
icebp
imul
dec
repz
jp
and
int3
jo
aam
inc
sub
ss
stos
mov
pop
cltd
nop
jae
sahf
jne
jo
pop
sar
scas
fisttpll
cmp
mov
jb
je
push
push
flds
out
mov
fidivs
add
ljmp
rcrb
iret
mov
test
mov
je
xor
or
les
mov
sahf
push
bound
dec
sbb
data16
jb
ficoms
push
dec
adc
sarb
inc
mov
loopne
clc
add
xchg
aam
mov
fsubl
ficomps
aam
lahf
push
mov
mov
dec
add
gs
das
adc
loope
jo
sbb
jb
lahf
shrb
pusha
in
mov
add
lods
sbb
faddl
cwtl
sub
scas
into
xor
sub
xor
test
add
pop
jbe
sahf
lods
and
inc
nop
js
pop
sahf
lret
xchg
sbb
cmp
pop
pop
mov
xchg
add
cwtl
int3
lret
aam
add
cmp
xchg
pop
movsb
scas
mov
add
fcmovnbe
dec
xchg
gs
test
jmp
cmpsl
or
sbb
inc
fsubp
dec
into
fwait
shll
jne
xchg
add
pop
pop
pushf
mov
add
pop
mov
hlt
mov
cmp
sahf
jbe
into
mov
mov
pop
dec
movsb
lret
push
push
aam
js
jb
cwtl
data16
mov
imul
insb
dec
das
aad
jnp
bound
adc
int3
daa
pop
jo
icebp
xor
test
lods
jbe
jp
add
outsb
into
jp
scas
nop
popf
bound
or
mov
cwtl
pop
dec
mov
cmc
jl
rcrb
push
pushf
jg
ficomps
cmp
jp
push
dec
dec
into
push
dec
cmc
dec
js
rcrb
mov
cld
cmp
mov
dec
jns
dec
daa
loopne
mov
dec
ret
int3
test
mov
xor
pop
data16
mov
test
dec
pushf
iret
or
inc
insb
lods
cwtl
mov
bound
inc
lret
cmp
addr16
daa
mov
mov
je
sti
jbe
push
or
mov
int3
fdivrs
dec
jns
js
mov
xsaveopt
shlb
aam
jmp
in
push
adc
lods
je
dec
jne
fidivrl
jae
push
bound
dec
scas
cmp
fcoml
lock
mov
lcall
es
cmp
mov
loop
jmp
mov
pop
jbe
outsb
inc
mov
add
mov
mov
mov
mov
xchg
stos
pop
lcall
inc
lcall
dec
scas
xor
or
lret
insb
sbb
addr16
push
dec
adc
aas
cld
in
xchg
mul
xor
lods
imul
test
jmp
lcall
js
sbb
retw
mov
repnz
mov
mov
scas
dec
mov
mov
fsubs
xor
movl
movsb
fisubrl
sub
sub
jp
cld
int3
lret
dec
lcall
cld
pop
pop
rorb
push
mov
cmpsl
das
xchg
movsl
pop
sub
cmp
pusha
sahf
xor
dec
fbld
shll
inc
mov
mov
push
shl
enter
enter
mov
lds
fisttpl
ficompl
dec
xor
push
add
mov
xchg
sahf
fiaddl
daa
stos
push
and
xchg
xor
xor
cmp
fisubs
jnp
js
pushf
jno
mov
pop
loopne
sahf
sbb
cwtl
mov
incl
push
sti
mov
xor
je
call
fwait
shrb
imul
js
mov
dec
das
pop
mov
pop
test
fidivs
outsb
jns
lcall
jb
lods
js
pushf
je
fcoms
fdivrl
out
pop
mov
mov
cmp
pop
jbe
jge
mov
cs
mov
pop
add
cmp
ficoms
pop
rep
aam
mov
mov
pop
jp
shlb
xchg
rcr
sarl
sbb
adc
cwtl
adc
mov
lret
jns
jnp
sahf
fldt
outsb
xchg
dec
push
pushf
inc
sar
mov
mov
lods
push
pop
mov
dec
pusha
cld
pop
pop
test
sahf
lods
mov
outsl
push
lock
hlt
icebp
rol
inc
lea
mov
add
xchg
sti
xchg
jnp
bound
movsb
jb
inc
or
push
cwtl
fldt
cmp
dec
jbe
pusha
jb
in
mov
mov
pop
in
xchg
inc
xor
pop
xor
inc
test
jge
add
bound
sub
sub
pop
enter
pushf
xor
jb
out
inc
fbstp
int3
mov
xchg
nop
mov
adc
repz
pop
dec
push
insb
or
mov
push
cwtl
sbb
jp
repnz
test
and
pop
dec
dec
jecxz
fcoms
pushf
mov
rcl
dec
int3
lahf
cs
inc
mov
lods
out
pop
movsb
inc
test
mov
scas
stos
movsb
pop
inc
in
adc
enter
push
pop
rclb
sarl
push
xchg
mov
fdivrl
push
mov
push
xchg
lods
add
push
js
xchg
mov
add
sbb
inc
cmp
test
test
mov
lcall
pusha
mov
faddp
out
add
sub
xchg
stos
lods
jl
test
pop
outsb
mov
dec
dec
sbbb
into
push
in
cwtl
add
jl
ja
nop
adc
lret
cmp
dec
adc
push
push
jnp
sahf
lcall
sbb
jne,pn
pop
filds
lret
or
fidivrs
mov
out
pusha
pop
add
dec
sub
pop
mov
pusha
pop
xor
fimuls
mov
mov
pop
fs
das
dec
pop
test
rolb
mov
call
push
push
sub
mov
push
test
sub
push
sub
xor
dec
sbb
xor
les
int3
pop
pushf
lods
ret
mov
insb
push
movsb
aad
sti
popa
stos
ficoml
fs
sahf
push
lret
jp
pop
xchg
cli
cltd
inc
xor
cmp
mov
lcall
jge
jnp
lods
lock
insb
dec
mov
mov
int3
mov
mov
xor
in
rorl
sbb
mov
jb
mov
lret
fdivrp
pop
jo
jmp
jbe
mov
sbb
insl
cld
mov
dec
mov
dec
pop
out
push
clc
mov
into
rorb
mov
cltd
lock
jg
adc
in
or
push
enter
pop
ret
movsb
pushf
dec
repnz
cwtl
fidivl
lods
enter
add
xchg
pop
fidivl
int3
add
out
lods
push
int3
xor
dec
xchg
push
sub
cmp
mov
pop
push
pop
pushf
or
movsb
fsubrs
dec
movsb
pop
push
lcall
jb
lret
les
std
fcompl
aas
jbe
fimull
stc
and
push
adc
xchg
cmp
mov
cmp
fsubrs
mov
adc
xor
mov
mov
sbb
fidivs
cmp
mov
xchg
pop
lcall
push
add
xchg
jp
int3
pop
cwtl
enter
lods
and
xor
sbb
inc
sbb
negl
ret
cmpsb
push
pop
dec
outsl
fsubrl
pop
andb
dec
nop
or
test
jbe
jge
lret
jp
fmull
xchg
outsb
test
scas
call
js
jo
pop
data16
loope
iret
dec
outsb
pop
push
dec
arpl
sbb
push
pop
or
ds
or
loop
xchg
pop
das
sub
shl
jbe
inc
rolb
fisubrl
js
cmc
fmuls
in
pop
dec
fmull
stc
push
mov
mov
scas
inc
test
and
dec
jb
pop
rclb
adc
cwtl
jmp
lods
stc
loopne
and
fs
mov
sub
pushf
jecxz
sbb
decb
pop
cmpsb
pop
test
icebp
fbld
out
sbb
stos
push
lret
std
sbb
outsl
rcrb
sarl
xchg
mov
and
push
adc
xor
jnp
sti
adc
test
pop
pop
mov
ficoms
jbe
out
repz
add
jl
mov
into
rclb
jecxz
mov
sbb
int3
dec
aam
or
test
es
and
testl
cmp
mov
or
movsb
out
decb
cs
jns
dec
cmp
mov
pusha
ljmp
pop
nop
xchg
ja
int3
pushf
mov
dec
inc
pushl
mov
pop
jp
pop
inc
frstpm(287
cwtl
das
dec
into
dec
push
add
sbb
movsb
dec
xchg
and
pop
cmpsb
je
mov
and
lahf
xor
cmpsl
mov
dec
scas
dec
insb
lcall
aam
sbb
fsubrl
mov
pop
sarl
ss
cmpsb
push
cmp
dec
sti
cwtl
mov
inc
sbb
add
insb
cmpsl
pop
je
jl
fs
pop
lods
pushl
clc
int3
mov
push
pop
loop
xchg
cmp
jo
repz
push
mov
pop
daa
cmp
sub
aaa
scas
fisubrs
pop
into
push
mov
jo
mov
mov
or
mov
ret
jg
test
sbb
pop
jnp
mov
sbb
gs
hlt
push
je
ror
clc
xchg
mov
and
mov
inc
sbb
dec
push
lret
mov
adc
lret
fcomps
cmp
or
js
push
jns
cmpsb
cmp
cmp
stos
fsubl
pop
je
mov
push
ret
mov
stos
adc
sub
inc
das
sub
adc
mov
add
ss
lcall
fmuls
dec
fidivl
stos
stos
stc
mov
mov
mov
mov
jl
dec
sahf
cmpsb
xor
mov
mov
pop
test
dec
cmpsb
fidivl
inc
cmp
rcrb
shrb
into
movsb
sub
fnstcw
shlb
push
sarb
faddl
inc
movsb
faddl
xchg
pusha
lods
sti
movsl
mov
xchg
bound
stc
in
nop
ds
stc
testl
frstor
pop
xchg
ja
jp
push
inc
insl
push
mov
xchg
fmuls
lcall
xor
mov
cwtl
mov
lret
in
cmpsb
movups
scas
jl
data16
or
cwtl
mov
xor
xor
sub
jb
aas
lods
adcl
cwtl
push
add
mov
pop
int3
jecxz
jmp
xlat
rcll
test
mov
cmp
push
shlb
push
dec
mov
gs
sahf
into
sub
loop
mov
xchg
pop
insb
pushf
test
mov
pop
pop
lret
xchg
inc
sub
mov
mov
shll
inc
repz
push
xor
cmp
fcoms
aaa
out
scas
mov
fs
xchg
push
sub
dec
pop
adc
shlb
scas
and
pushf
push
lds
insb
sub
lret
mov
mov
cld
push
mov
xchg
push
sub
aam
and
push
sbb
pop
mov
fimuls
outsb
xlat
in
jo
cmp
data16
popa
lea
leave
mov
push
je
lcall
mov
rorb
das
mov
fiadds
xchg
insb
fisubl
pop
mov
pop
cmp
xchg
movsb
pop
pusha
fs
and
mov
lods
mov
push
and
lds
out
lods
insl
out
mov
addr16
mov
sbb
pop
mov
lock
cmp
js
lret
into
jp
lret
cmpsb
pusha
push
mov
and
in
int
mov
scas
int3
cmpsb
mov
inc
fsubl
xor
jbe
lods
mov
inc
sahf
pop
js
fidivrl
into
movsb
sbb
loopne
shrb
cmpsl
decb
and
mov
out
or
inc
adc
xchg
sub
in
add
ret
rcrb
pop
rcl
push
pop
imul
fistl
dec
mov
int
into
dec
inc
push
addb
jle
mov
imul
lock
dec
pop
dec
cmp
sahf
mov
push
push
aam
lods
dec
out
push
xchg
nop
add
rcr
cli
push
out
je
cmp
push
cmp
jo
aam
mov
data16
decb
scas
fsubl
mov
cmp
jl
fsubs
lret
mov
cmpsb
stos
push
xor
je
mov
insb
jb
nop
jne
mov
jo
fidivrl
mov
xchg
dec
dec
push
push
xchg
or
in
dec
int3
mov
push
pusha
lea
out
mov
and
or
push
scas
cmpsb
inc
cmp
pop
xchg
lods
aam
daa
outsb
dec
pop
cmp
mov
xchg
adc
cmp
push
sahf
lods
sarl
fucomi
std
jbe
cmp
mov
xchg
fs
xchg
scas
mov
aam
call
push
inc
jmp
stos
jbe
adc
jb
xchg
into
les
mov
lcall
pop
xchg
pop
xchg
xchg
test
data16
fs
jp
fdivrl
xchg
lret
inc
mov
fisubrs
pushf
scas
adc
mov
das
mov
dec
xor
mov
pop
daa
aam
xor
jp
dec
mov
sbb
mov
test
int3
pushf
or
stc
notl
jp
cmpsb
js
ss
mov
xchg
mov
addl
fdivl
dec
mov
hlt
pop
das
pop
nop
pop
aas
shlb
xchg
jl
test
sbb
jmp
jp
movsl
mov
push
pop
sti
add
je
xor
dec
dec
xor
test
sahf
xchg
nop
mov
sbb
pusha
aam
ljmp
cmp
lret
sbb
in
xchg
out
pop
add
xchg
stos
mov
or
jns
inc
cmp
rcrb
push
xor
pop
cmp
bound
testb
xchg
add
test
jo
imul
nop
mov
mov
push
lods
xchg
lock
sub
jno
mov
or
out
inc
jp
dec
pop
int3
sti
jmp
inc
push
pop
bound
sti
fmulp
stos
mov
fsubrl
mov
mov
sub
fidivrl
int3
je
mov
ja
ret
js
push
std
cmp
pusha
insb
pop
mov
sarl
or
bound
fcmovu
sahf
sub
dec
or
hlt
lcall
xor
imul
mov
pushf
lret
test
xchg
dec
sbb
int3
test
arpl
int3
outsb
repz
fiaddl
pop
and
mov
pop
mov
dec
bound
lret
sbb
mov
test
je
dec
push
jp
dec
mov
mov
lret
mov
xchg
daa
int3
mov
add
xchg
cs
lods
ret
pop
mov
mov
cwtl
xchg
lret
mov
cmp
cmc
xchg
xchg
gs
pop
cmp
shlb
mov
mov
mov
pop
push
int3
xorl
xchg
outsb
aam
addr16
das
sti
dec
rcrl
cmp
dec
push
mov
lcall
int3
aam
pop
pop
push
mov
in
jmp
aas
mov
jb
test
add
les
dec
cmp
movsb
mov
fisttpl
insb
gs
push
jnp
push
mov
mov
mov
out
inc
jl
push
jp
shlb
inc
daa
test
dec
cld
add
je
outsl
push
imul
sbb
pop
pop
add
cmp
scas
decb
js
inc
jmp
mov
rcrb
mov
mov
pushf
scas
mov
js
and
je
cmp
pusha
imul
add
jb
push
dec
jecxz
das
in
lcall
hlt
sub
pop
movl
mov
imul
push
cwtl
jge
xchg
js
mov
cmpsb
xor
je
icebp
mov
fisttpl
cmp
mov
ficomps
das
imul
mov
mov
popf
cld
stc
sarl
push
fiaddl
inc
nop
fsubl
std
dec
in
lret
mov
sbb
mov
cmpsb
jg
sub
and
add
and
das
mov
jg
push
out
jnp
pop
pop
jl
lahf
scas
jbe
push
sahf
jo
add
pop
xor
out
movsl
xchg
das
jbe
fisubrs
cmp
pusha
dec
inc
cs
fcompl
mov
sbb
add
sbb
stos
fcompl
push
push
add
insb
jecxz
add
into
fs
mov
gs
mov
cwtl
mov
pushf
pop
jmp
je
scas
cmp
push
das
insb
dec
inc
cmp
js
js
cmp
mov
cs
mov
and
add
dec
int3
adc
pop
lret
cltd
mov
xor
sub
xor
das
dec
pushf
insb
push
test
xchg
jnp
pusha
inc
pop
xchg
mov
sti
lret
mov
lret
xchg
lods
add
jb
imul
dec
mov
call
jp
push
add
cmp
nop
js
add
dec
pop
cwtl
arpl
out
pop
shlb
leave
jecxz
mov
fstpl
fs
pop
push
dec
js
pop
test
aam
or
jae
or
push
dec
ja
mov
mov
mov
sti
shll
pop
lret
mov
dec
jo
push
xchg
sub
out
inc
cmpsb
stos
mov
mov
xchg
push
lret
cmpsb
sahf
insb
sti
dec
pushf
les
xchg
ret
dec
mov
push
xchg
hlt
dec
push
cmp
rcrb
test
add
jg
int3
push
mov
gs
js
js
cmp
pusha
scas
xchg
fimull
movsb
lods
push
mov
data16
xor
cmp
testl
push
mov
cli
mov
lea
fisubl
push
dec
jb
out
mov
cmpsb
push
stc
pop
push
out
pop
inc
aad
sahf
in
aaa
nop
mov
mov
jne
insl
push
stos
jp
lret
pop
cmpsb
inc
cld
push
lret
and
xor
int
in
stos
pop
imul
push
xchg
sahf
mov
inc
in
push
lret
jb
add
fdivl
lods
loop
pop
cmp
dec
mov
xor
pop
mov
dec
jmp
pop
xchg
jb
fdiv
pop
pop
cmp
rorl
mov
aam
js
mov
inc
iret
or
sti
xor
push
dec
sti
xor
shr
mov
dec
mov
pop
scas
cmp
xchg
pop
cbtw
loopne
lret
js
inc
xor
pop
cmp
mov
cmp
outsb
int3
push
stos
mov
push
stc
cmpsl
cmp
xchg
jp
xchg
pop
and
xor
push
lods
and
push
out
js
movsb
jp
jnp
dec
mov
pop
mov
bound
ficoml
loope
push
pop
sub
das
xchg
pop
sub
out
mov
data16
scas
push
mov
sbb
hlt
movsb
mov
outsb
rclb
fwait
pop
push
pop
nop
rclb
xor
fcoml
mov
dec
dec
dec
sub
push
jns
pusha
pop
daa
adc
pop
and
outsb
pushf
sub
int3
and
xchg
sbb
lea
aaa
stos
mov
lcall
push
int3
in
sbb
pop
in
insl
dec
jne
or
imulb
jb
push
cmp
lcall
outsb
xchg
ficomps
ret
aas
in
ret
cmp
int3
pushf
xchg
inc
test
add
push
popl
push
fisubl
iret
cmp
dec
jae
sbb
push
mov
push
rorb
sub
data16
aam
mov
dec
pop
and
mov
dec
mov
mov
mov
mov
jp
sub
movsb
sub
out
jo
sub
mov
pop
lcall
adc
insb
mov
push
add
fsubs
mov
push
mov
repnz
aas
push
aam
cwtl
dec
je
add
fistpl
ficoms
pop
loopne
sbb
lods
xor
mov
adc
lcall
adc
fadds
jg
xor
data16
cmp
mov
push
outsl
push
pop
push
scas
mov
xor
xor
mov
push
cmp
mov
sbb
sahf
fcmovbe
and
dec
dec
std
fwait
mov
sbb
mov
cmp
rorb
cmpsb
add
lret
popf
arpl
pop
hlt
into
pop
pop
pop
mov
mov
mov
mov
pusha
mov
out
pop
cmc
notl
pop
or
push
and
fimull
sarb
dec
fmull
test
adc
stos
xor
mov
mov
cli
test
cld
dec
aam
bound
lods
repnz
ljmp
dec
pushf
fimull
pushf
mov
jo
xchg
push
sub
or
inc
mov
aas
shrb
push
shrd
jo
mov
ja
into
mov
arpl
fidivs
and
fsts
cmp
lret
pop
sbb
inc
fxsave
fmull
mov
inc
imul
stos
insb
int3
hlt
push
mov
cwtl
mov
mov
mov
pop
aaa
push
stos
cwtl
ficoml
cmp
lret
jns
lea
pop
jl
mov
fisubrs
pop
mov
pushf
push
mov
jbe
dec
lea
mov
adc
pop
bound
push
fimuls
mov
mov
push
push
imul
mov
arpl
dec
mov
jo
jmp
mov
dec
inc
ror
jl
out
fs
xchg
dec
or
and
dec
mov
pop
outsb
pop
fists
jl
jo
je
int3
push
repnz
test
ds
cld
mov
jp
and
jmp
nop
xchg
xorl
rcr
mov
lcall
loope
mov
sahf
pushf
push
or
push
cmp
ss
lods
xchg
in
hlt
into
gs
dec
fmull
push
mov
mov
and
pusha
jo
int3
shlb
mov
ffreep
popfw
repz
js
pushf
sbb
lods
into
stos
jle
outsb
jns
mov
push
cmpsb
xchg
dec
dec
sahf
cmp
mov
mov
ret
mov
outsl
push
xchg
push
fadds
ret
add
test
mov
jb
call
test
les
fdivrl
dec
mov
insb
test
ret
dec
or
xchg
in
jne
stos
jo
dec
cmp
fidivl
xchg
scas
mov
aam
mov
jo
fs
test
cs
je
mov
sub
rcrb
mov
push
fwait
jmp
dec
dec
inc
stos
in
into
lds
faddl
stos
das
pop
out
inc
in
insb
mov
cmp
mov
push
xor
mov
push
sahf
jp
fdiv
xchg
pusha
test
loope
adc
rorl
daa
mov
movsb
push
cld
fbld
push
je
xchg
cmp
sarb
jo
push
lods
mov
xchg
dec
outsb
adc
ficomps
xchg
push
adc
int3
bound
lods
push
movb
loope
scas
cwtl
dec
js
dec
fcom
push
pusha
xor
lods
lcall
push
fsubl
pop
insb
fcoms
out
es
js
mov
mov
push
xor
push
push
inc
fimull
fwait
jl
pop
jb
pop
je
adc
fistpl
mov
push
mov
adc
pop
add
daa
inc
mov
mov
dec
jp
pusha
stc
movsl
and
aam
push
lods
and
push
dec
dec
sbb
call
add
dec
push
or
loopne
jb
cld
and
mov
fcomps
in
pop
repz
mov
fldcw
out
jp
fdiv
jo
jg
lcall
sarl
aam
je
adc
push
mov
mov
push
cmp
push
jns
scas
dec
push
sub
in
mov
xor
movsb
test
in
mov
xor
inc
sbb
addr16
push
arpl
cmp
pop
push
scas
dec
push
pop
push
xchg
xor
lds
aam
push
insb
out
dec
pop
xchg
mov
loopne
and
push
sub
lret
hlt
sub
push
pop
enter
xor
cmp
mov
int3
dec
js
test
insb
loop
xor
pop
dec
mov
addb
add
popf
je
or
out
pop
xor
nop
push
push
andl
test
fdiv
data16
push
mov
ficoml
mov
mov
out
mov
mov
jno
mov
xchg
jmp
adc
out
icebp
sahf
sub
mov
push
push
dec
lods
mov
movsb
jo
mov
xor
xor
cwtl
push
mov
push
into
data16
mov
fidivrs
pop
jo
push
jbe
cltd
dec
sarl
mov
mov
inc
bound
mov
push
cmp
dec
push
fcmovbe
cli
or
pop
or
pop
scas
es
cmp
rcrb
mov
stos
mov
int3
xchg
shrb
leave
or
fistps
bound
pop
lods
xchg
fsubs
scas
cmpsl
push
test
add
pushf
mov
es
lret
jbe
pop
dec
pop
lcall
xchg
into
int3
mov
insb
out
mov
push
je
adc
adc
and
push
fimull
jbe
nop
movsb
xor
js
loopne
mov
out
pop
ds
dec
scas
xchg
sahf
fildll
enter
cld
shll
rorb
add
mov
out
mov
dec
aam
in
fnsave
adc
test
scas
imul
inc
mov
mov
mov
push
mov
cwtl
cmp
rclb
int3
push
fwait
adc
mov
pusha
mov
mov
lods
pop
aam
fdivrl
je
push
jl
cmpsb
mov
ljmp
mov
mov
outsb
scas
cld
jne
sahf
push
stc
mov
cli
sub
stos
sub
hlt
cmpsb
mov
out
cmp
dec
mov
mov
pop
scas
je
pop
out
mov
insb
mov
rcrb
mov
js
sbb
xchg
dec
or
inc
popf
ret
cmp
xchg
shlb
pusha
mov
xchg
fadds
pushl
mov
cmp
push
pushf
ljmp
fisubl
pushf
out
insb
sub
inc
nop
mov
pop
jp
pop
pushf
cwtl
mov
xchg
sahf
ja
sub
je
fisubl
fcmovb
xor
cmp
dec
fcoml
add
pop
into
pop
mov
mov
test
enter
pop
add
dec
into
daa
cmp
mov
dec
stos
pop
pop
pop
pop
rclb
movsl
daa
jl
xchg
dec
sahf
lods
aam
pushf
gs
pop
data16
xchg
cmpsb
cmp
push
mov
es
sbb
ficoms
cs
mov
iret
cmp
xchg
pushf
in
pusha
push
lea
mov
inc
div
push
sub
mov
test
xchg
push
push
cltd
push
bound
sub
cwtl
mov
pop
inc
insb
cld
and
js
fs
rclb
push
jge
fisubrs
mov
stc
sbb
getsec
jnp
xchg
sub
push
sub
adc
insl
in
and
scas
cmp
push
lea
pop
mov
mov
nop
xor
outsb
dec
cmp
cmp
fmul
fdivl
or
push
aam
mov
push
pop
fs
cld
cmp
lahf
push
jl
mov
dec
sub
ficompl
test
mov
das
push
aam
es
sbb
sahf
sbb
cmp
js
cmp
je
mov
popf
jb
fistpll
mov
aam
popf
test
daa
mov
cmp
scas
push
pop
mov
bnd
js
cwtl
je
mov
push
jl
dec
add
scas
data16
insb
xchg
xor
mov
jb
add
sub
mov
cmp
jbe
cli
stc
mov
ss
xchg
cmpl
dec
jb
cmp
and
stos
pushf
xchg
dec
jp
lcall
dec
mov
jae
fnstsw
fs
loop
js
pushf
xchg
cmp
mov
pop
or
pop
push
in
pop
push
jnp
xchg
dec
fisubl
mov
pop
mov
pop
lcall
hlt
jns
pushf
mov
mov
xor
test
insb
adc
cmp
push
stos
js
das
pop
push
dec
ficomps
mov
fsubrs
pusha
jmp
scas
sahf
sbb
xor
cmp
push
mov
push
push
push
and
jno
aam
mov
das
adc
mov
sahf
fcmovnbe
pop
pushf
dec
mov
test
fldenv
xchg
xchg
shrl
into
outsb
nop
sahf
cmp
xchg
push
sahf
dec
loop
rcrb
int
mov
push
fcomi
pop
pushf
cmp
dec
bound
inc
sarl
movsb
das
xchg
push
jbe
mov
stos
imul
push
fidivl
les
mov
and
push
xchg
scas
lods
clc
xchg
mov
lret
pop
fidivl
push
sub
in
or
imulb
iret
int3
das
mov
push
sahf
mov
mov
jbe
int3
aam
stos
xor
fsubrl
insb
dec
mov
push
push
push
js
scas
dec
jp
lock
into
addr16
cs
mov
cmp
mov
sahf
cld
int3
dec
mov
daa
jp
sbb
jae
pop
dec
sbb
imul
lret
out
fidivrl
ja
shrl
pusha
push
inc
js
pop
sbb
sti
in
sahf
mov
fs
or
xor
push
into
xchg
mov
lods
cld
ret
adc
mov
and
sahf
push
mov
mov
mov
cmp
xchg
cwtl
insb
fdivl
js
pushf
std
jnp
dec
scas
jb
add
cmp
mov
fistpl
pushf
mov
iret
mov
jp
jg
and
in
fidivs
push
dec
dec
or
jno
jo
dec
xchg
xor
cmp
movsb
lods
js
int3
out
out
mov
sbb
dec
rcrb
push
push
add
push
push
dec
inc
cwtl
cmpsb
sbb
outsb
aam
sbb
dec
bound
adc
mov
sahf
mov
xchg
repnz
mov
insb
or
pusha
sahf
sub
mov
jae
pop
in
dec
jnp
insb
mov
dec
test
fmull
popa
in
out
xchg
fmul
mov
sbb
mov
ficompl
mov
mov
mov
cltd
xor
jo
aam
orl
add
mov
in
cmp
out
mov
add
les
stos
jo
xor
test
inc
pop
fdivl
test
cltd
cwtl
mov
repz
push
add
push
js
in
cmp
out
fisubs
popf
fimull
shrb
sub
aam
sbb
fidivs
pop
outsb
pop
mov
xor
lret
pop
dec
fs
test
rcrb
movsb
sub
lcall
imul
push
push
mov
mov
mov
adc
and
pushf
test
cmpsb
mov
ss
mov
repnz
sbb
pop
mov
push
lret
cmpsl
fs
or
add
jecxz
into
mov
push
xor
out
mov
sbb
push
es
cmpsb
and
xor
push
mov
jnp
xchg
bound
mov
pop
enter
cwtl
xchg
imul
aam
insb
push
lret
dec
outsb
jo
pop
mov
ja
js
ss
lods
mov
aam
mov
cmp
pop
test
call
shlb
sbb
and
jb
pcmpeqb
xchg
mov
insb
imul
fisubs
ljmp
int3
fs
stos
pop
mov
ret
cmp
push
arpl
bound
test
sbb
je
or
mov
leave
xchg
rorb
pop
xrelease
pop
pop
pop
mov
sbb
cwtl
push
mov
xchg
lcall
pop
cld
out
shr
fimuls
sub
dec
je
dec
rolb
rorb
mov
jb
das
lcall
mov
ss
fcmovu
inc
out
cmp
mov
push
mov
xchg
fildl
push
push
sbb
insl
movsb
xor
sbb
mov
ffreep
ret
mov
rclb
push
dec
sbb
cmp
lret
cwtl
jl
imul
mov
fcomi
gs
push
dec
mov
cwtl
pushf
into
addl
outsl
push
lock
mov
xor
xchg
push
bound
cmpsb
mov
mov
cmp
mov
out
jl
pop
ret
movsb
cmp
shlb
jbe
repnz
ja
mov
jae
cmpsl
inc
and
hlt
jl
mov
lret
sub
sub
iret
jmp
cmp
push
push
cmpsb
add
mov
push
in
loopne
push
mov
sti
lds
shll
sbb
cli
mov
xchg
fisubrl
lock
pop
or
cwtl
aam
xchg
test
sti
loopne
test
orb
jnp
cwtl
cmpsb
push
lds
adc
js
aaa
jo
pop
lret
cwtl
mov
stos
pop
out
arpl
ret
jecxz
sbb
pop
inc
mov
push
mov
push
pusha
int3
jnp
fdivp
mov
sti
pop
rcrb
int
data16
push
test
push
cmpb
mov
jne,pt
fldcw
stos
nop
mov
lret
inc
mov
inc
pop
cwtl
push
mov
mov
ss
rclb
pop
jecxz
test
pop
aam
inc
sbb
push
ficomps
bound
push
mov
xlat
sub
sahf
fdivr
popa
mov
cmp
jo
enter
cmpsb
cwtl
fsts
fs
xor
dec
test
pop
mov
mov
mov
shrl
or
pop
inc
jo
fsubl
dec
xchg
fsubrs
in
fwait
pop
dec
mov
jo
daa
insb
ficompl
cwtl
jns
push
xchg
scas
cld
test
mov
mov
sub
cmp
sbb
add
and
mov
sub
mov
outsl
push
scas
lods
push
pop
in
mov
fsubrl
mov
es
jl
mov
test
ret
fisubrs
into
cli
fildll
pop
cmp
daa
fdivrl
int3
lret
cli
lcall
mov
lea
dec
add
stos
inc
adc
xor
mov
push
int3
cmp
lcall
lcall
cli
jae
sahf
dec
in
aam
in
xor
cwtl
outsb
js
pop
cmp
rolb
xor
jp
scas
push
int3
mov
mov
cmp
lret
push
or
or
in
push
xor
mov
push
pop
add
and
add
daa
mov
lcall
fdivs
pop
outsl
jl
mov
fldt
lods
lret
jecxz
shlb
pushf
mov
cmp
pop
loope
mov
es
jns
cmpsb
mov
xchg
push
pushf
jnp
rcrb
cmp
sbb
pop
stos
xchg
jle
mov
pop
test
pop
dec
push
fists
xchg
aam
icebp
add
lock
hlt
pop
dec
xorb
bound
push
push
fs
push
nop
cld
sbb
pop
cld
loopne
mov
pop
pop
mov
mov
lcall
push
scas
ja
cmc
adc
mov
jbe
pop
mov
pusha
rolb
lcall
imul
fiadds
into
dec
cmpsb
mov
inc
xchg
xor
sub
cmpsb
fsubs
adc
dec
add
sub
dec
xor
lcall
movsl
add
fimull
or
mov
mov
mov
mov
pop
mov
xchg
das
mov
jp
sbb
sbb
cwtl
mov
shl
movsb
rcrb
stos
je
repz
lock
inc
jno
mov
cmp
pop
add
mov
push
sbb
pop
xchg
jp
cmc
mov
mov
lods
pop
test
fcomi
in
xchg
repz
lret
mov
mov
push
pop
pop
movsb
cmpsb
inc
cmp
fmul
lods
insb
push
pop
push
inc
inc
movsb
test
jnp
dec
mov
add
lret
js
mov
push
pop
fsubs
jbe
js
mov
pop
jae
inc
rclb
ret
repnz
fwait
add
pop
shrb
inc
sub
jecxz
dec
scas
inc
mov
sbb
xor
or
rorb
das
jl
mov
xor
and
decb
jp
mov
push
fdivr
xchg
jecxz
pop
add
fsubrl
imul
push
shrb
jecxz
push
pop
mov
jo
mov
sub
sbb
bound
push
stos
push
pusha
into
push
mov
jb
arpl
in
test
sbbb
dec
fcoml
pusha
pop
int
out
stos
sbb
dec
push
add
jl
loopne
fdivl
pop
pop
sub
call
mov
push
sarb
jns
mov
pop
sub
and
dec
mov
cmp
sti
cmpsl
test
dec
dec
mov
cld
and
pusha
xchg
mov
push
push
sahf
fwait
mov
sub
faddl
pop
lock
cmc
dec
sahf
stc
out
or
icebp
arpl
stc
jge
jg
or
stos
xchg
sbb
mov
lret
int3
sub
pusha
mov
stc
pop
scas
push
mov
adc
mov
pushf
push
pop
add
jnp
mov
pop
mov
mov
movsb
dec
test
cwtl
dec
jbe
xchg
in
jge
pop
and
xor
mov
das
lods
stos
hlt
xchg
mov
jns
jl
js
lret
gs
cs
inc
jge
insb
mov
fs
adc
into
stos
jbe
daa
js
mov
dec
inc
adc
and
into
lret
sub
xchg
sub
jg
xchg
jnp
jbe
pop
xchg
lret
or
stos
movsb
xchg
cmp
lret
xchg
pop
push
addr16
adc
dec
mov
adc
mov
mov
imul
mov
shlb
fdivrs
gs
or
cmp
fidivl
pop
sbb
dec
lods
lret
push
fcmovnu
push
fdivrs
jb
push
movsb
or
ror
dec
ficompl
bound
xor
inc
xchg
aaa
xchg
dec
push
lret
mov
insb
jb
push
cmpsb
sbb
les
aaa
push
mov
das
adc
pop
out
aam
call
mov
daa
pop
xchg
cmp
push
lcall
cmp
int3
shrb
mov
mov
push
cmc
je
dec
push
pop
ficomps
mov
stc
mov
mov
xor
je
pop
push
inc
mov
pusha
inc
insb
lret
into
lret
cmp
mov
pop
aas
movsb
mov
int3
mov
into
mull
aad
cmp
adc
sub
mov
push
inc
lock
fsub
scas
out
mov
mov
and
dec
jo
mov
mov
ds
and
movsl
push
push
pop
and
dec
pop
adc
int3
sahf
out
xor
fnsave
push
daa
or
in
lods
stos
fcoml
sti
int
mov
pushf
jbe
pop
mov
data16
inc
lods
fs
lods
inc
das
dec
push
fsub
dec
xlat
in
adc
cld
cmpsb
ficomps
test
int3
cmp
xchg
into
lcall
mov
test
pop
mov
mov
inc
stos
pusha
out
lret
jb
mov
ret
cmp
pop
inc
dec
aas
dec
add
pushf
outsb
push
xchg
pop
fsub
stos
mov
pop
scas
xchg
lcall
hlt
dec
lods
repnz
nop
sub
cmpsl
arpl
xchg
push
test
cmp
int3
cmpsb
xor
mov
jnp
jo
cmp
aam
into
dec
pop
imul
mov
test
pop
fcmovu
rcr
je
jo
sub
mov
pushw
xchg
xchg
mov
mov
add
hlt
movsb
stos
mov
jb
add
call
push
sub
mov
pop
sahf
hlt
fs
int3
xor
int3
pusha
dec
ret
out
add
xor
mov
lods
adc
fmull
scas
mov
in
insb
fs
gs
add
jbe
dec
mov
cmp
mov
pop
rcrl
fsubrs
nop
fdivrl
mov
lods
or
xchg
push
add
mov
out
insb
dec
test
pop
loopne
pop
push
cmp
pop
mov
in
nop
adc
mov
and
shlb
add
xchg
cli
daa
arpl
dec
dec
pcmpeqb
pop
dec
push
das
cmp
shlb
mov
nop
lods
mov
mov
pop
insl
adc
cvtps2pd
in
lea
stos
cwtl
cmp
jo
mov
popl
cltd
fdivr
xor
cmc
mul
scas
cmpsb
jnp
test
lock
push
lock
push
pop
jmp
pushf
pushl
mov
mov
push
adcb
js
pop
pop
fisubs
cwtl
into
pop
mov
dec
scas
orb
pop
push
stos
xchg
cmp
nop
fisubl
mov
jp
add
mov
shlb
pop
xor
xchg
push
lods
mov
aam
addr16
xor
inc
movsb
sub
mov
gs
sub
pop
das
push
push
ds
pop
inc
das
cmp
mov
xor
lods
jns
mov
cmp
inc
cld
rclb
dec
sbb
insb
lcall
cld
dec
pop
push
lods
mov
nop
bound
daa
sub
cmp
je
mov
out
jae
cmp
dec
cmp
bound
adc
mov
jo
mov
push
pop
cli
aam
icebp
stos
dec
insb
shlb
pop
jb
add
xor
ss
sbb
jne
stos
fcom
lods
sub
jg
icebp
push
pop
je
mov
movsb
push
pop
enter
pop
popf
mov
mov
in
jns
mov
mov
xchg
push
cmp
sahf
jp
lcall
mov
cmp
aad
lret
dec
push
int3
mov
dec
lea
bound
sub
outsb
repnz
xchg
movsl
mov
je
into
jo
pop
insl
mov
les
jge
iret
pop
sbb
lcall
mov
mov
adc
jp
aas
mov
push
insl
notl
mov
jge
jo
add
mov
scas
push
ficompl
bound
fmuls
push
popf
stos
mov
adc
aas
jae
fcomps
fcmovne
inc
rcrb
jo
pop
xchg
mov
jmp
mov
stos
test
mov
push
pop
test
xchg
fwait
add
sub
les
icebp
daa
add
daa
stc
sub
jbe
push
cmp
mov
outsb
sbb
or
punpckldq
scas
mov
push
push
dec
inc
jns
ficoms
stc
in
lret
xchg
push
fwait
fimull
cmpsb
jp
jo
mov
cmp
ss
stos
rcrb
xor
in
data16
mov
jo,pt
fs
fsubl
pop
jbe
scas
loop
mov
push
cmpsb
shlb
dec
lcall
data16
mov
ja
and
pop
imul
or
lea
js
cmpsb
gs
xchg
push
xchg
xchg
pusha
push
jle
mov
jb
nop
mov
sub
add
and
adc
mov
cltd
shrb
shrb
xchg
mul
dec
cmp
mov
out
pop
adc
xlat
les
pop
outsl
adc
ficoms
dec
into
loop
inc
mulb
mov
scas
rorb
shlb
lret
ljmp
inc
adc
sbb
inc
mov
jns
loop
xchg
cld
in
movsb
sbb
loop
mov
adc
pop
jbe
xchg
mov
and
cmp
jo
mov
cs
clc
mov
mov
cld
lods
dec
mov
adcb
pop
or
scas
imul
cmp
pop
sbb
outsb
push
and
push
je
mov
lret
xchg
dec
lds
test
cmp
pop
lods
inc
test
dec
lock
dec
and
push
mov
fcmovne
or
test
mov
mov
jo
add
daa
inc
mov
dec
jb
scas
mov
fcompl
jb
repz
xchg
je
fcmovne
sahf
test
cwtl
jbe
leave
jb
cld
mov
outsb
push
cwtl
jo
inc
cmp
or
jns
lret
jbe
outsb
rclb
and
adc
jnp
pop
and
shlb
fcmovnb
push
dec
pop
test
fsubl
pop
movsb
dec
mov
movsb
or
fcom
lret
ljmp
loopne
inc
and
movsb
clc
pusha
push
sahf
js
xor
dec
clc
adc
dec
rcrb
movsb
lock
jo
repnz
sub
add
dec
dec
jo
lods
movsb
test
xor
pusha
fisubrs
rcrb
movsb
pop
jns
xor
cmpb
rorl
lret
mov
pop
pop
push
mov
or
mov
mov
mov
xchg
mov
rorb
je
xor
stc
inc
xor
loopne
in
cmpsb
jmp
aad
push
insb
and
dec
loop
cwtl
jp
fcompl
js
push
fsubs
das
orl
js
push
adc
fdivrp
sbb
mov
and
mov
mov
sbb
sbb
mov
mov
fadds
hlt
push
xlat
mov
sahf
fmulp
scas
mov
adc
movsb
mov
push
mov
lcall
and
pop
push
add
inc
loopne
xchg
sub
addb
dec
jecxz
jp
cmp
push
in
ret
xchg
cmp
or
push
pop
adc
call
stos
sbb
ja
pop
lods
pushf
dec
mov
repz
mov
cwtl
stos
in
aam
adc
fcompl
cmp
sub
push
lods
adc
mov
xchg
push
into
dec
dec
sarb
js
sti
aam
rolb
push
cmp
inc
jmp
outsb
ficoml
int3
shlb
test
ficompl
dec
js
jl
mov
mov
pop
mov
push
fimuls
jb
mov
mov
insb
pop
sahf
test
pop
push
pusha
cmc
pop
mov
push
data16
cwtl
mov
pusha
cmp
aas
sub
pop
cmpsb
add
pop
xor
push
lods
repnz
test
lret
mov
xchg
incl
push
fldenv
mov
mov
mov
popa
add
faddl
scas
pusha
lock
jbe
pop
lods
pusha
add
xchg
nop
pop
or
pop
adc
fisubrs
fidivrs
lahf
pusha
int3
sarb
scas
js
xor
push
cmp
pusha
ficoml
xor
add
scas
pop
stos
sahf
bound
js
push
test
mov
ss
push
or
mov
insb
leave
ds
pop
mov
mov
jge
sbb
outsl
dec
rcrl
dec
lret
stos
dec
in
mov
push
mov
mov
push
pop
sbb
imul
mov
adc
push
mov
outsb
jbe
fdivrs
mov
js
bound
loop
hlt
rorb
mov
pusha
pop
pushf
xorl
je
loope
scas
std
aas
adc
xor
push
insb
sti
jns
add
sbb
cmpsb
dec
sahf
jns
mov
xchg
das
movsb
xchg
push
sub
in
mov
and
jb
xor
lahf
push
mov
push
and
mov
cwtl
hlt
hlt
cld
add
cmp
pop
fs
cmp
sub
divps
nop
rcrb
pushf
xor
imul
pop
daa
rolb
mov
movsb
pop
ja
xchg
jl
fs
stos
push
xchg
bound
lods
or
jl
in
fs
outsb
sbb
cwtl
rorb
dec
dec
push
pop
fimull
sar
cld
add
add
pcmpeqd
call
arpl
mov
pop
js
cmp
cmpsb
mov
jl
dec
lret
in
nop
in
lock
bound
xchg
sbb
cmp
inc
add
xchg
scas
pushf
add
clc
scas
dec
push
rorb
sub
pop
out
stc
sub
jne
mov
into
lods
pop
rcrb
outsl
pop
dec
cld
pop
mov
push
into
mov
mov
mov
fidivrl
add
out
dec
das
jae
xor
loopne
mov
sub
dec
mov
popa
add
sub
add
test
and
push
mov
je
pop
mov
cld
xor
ficompl
dec
aam
mov
dec
arpl
jl
cwtl
mov
pusha
scas
mov
fcompl
mov
stos
lcall
mov
lahf
movsl
mov
mov
into
mov
arpl
pop
out
lods
pushf
jl
dec
cmp
fcoms
fdivl
cmpsb
addr16
mov
lret
adc
jl
fstpt
test
push
jns
lret
shl
fcmovbe
add
fisttpl
mov
cld
ret
mov
fmull
into
mov
dec
xor
and
aas
dec
xorl
push
sub
nop
hlt
dec
rcr
in
pop
jbe
jge
mov
into
sahf
mov
mov
cmpsl
dec
xor
mov
pushf
inc
stc
mov
inc
cs
imul
fwait
push
lods
aas
aaa
dec
into
lret
shll
or
pop
cwtl
push
ret
mov
push
or
ljmp
push
idivb
jb
cld
cmp
fcomps
add
jbe
push
nop
push
xchg
mov
mov
enter
fadds
inc
lods
cwtl
mov
and
cmpsb
pop
mov
nop
mov
jmp
mov
mov
sti
rcl
mov
push
pop
sub
push
mov
adc
dec
add
inc
adc
int3
bound
scas
sbb
dec
lcall
dec
mov
mov
mov
js
into
inc
cmpsb
lret
cli
loopne
je
hlt
inc
or
jnp
pop
leave
pushf
pop
dec
fstpt
inc
mov
xor
mov
loop
lret
push
mov
test
mov
xchg
mov
lods
enter
cmpsb
je
lahf
mov
out
dec
mov
jo
xchg
mov
int3
nop
in
push
hlt
add
movsb
sub
push
cmp
inc
pop
jns
mov
fisubl
cmp
jbe
shlb
jo
cmp
mov
mov
mov
test
dec
push
xchg
dec
ss
pop
push
jmp
push
push
dec
outsl
push
mov
pop
mov
mov
mov
mov
jbe
aam
pusha
push
xor
sub
xchg
xor
fidivrl
test
fs
sahf
xchg
mov
cmp
int3
push
test
pop
add
dec
ss
fnsave
push
jbe
push
sub
dec
sarl
xor
ret
jecxz
repz
dec
shlb
fldt
iret
popf
test
arpl
cmpsb
movsb
jo
inc
fildl
sbb
test
fdivr
push
push
or
mov
lcall
repz
sti
and
push
test
dec
pop
pushf
test
bound
mov
fstps
lret
jp
jg
call
sahf
imul
mov
cmpl
fcmovnbe
and
xchg
data16
push
fs
cmp
mov
dec
mov
push
cmp
mov
jle
pop
pusha
fidivrs
inc
cmpsl
lret
outsb
add
lahf
xchg
addl
in
push
inc
dec
hlt
mov
out
jbe
adc
repnz
mov
mov
sub
and
in
in
sti
daa
push
aam
inc
aas
lea
jo
sar
push
pop
xchg
aam
inc
push
fisubrs
dec
pop
in
sti
add
dec
fimuls
cmpsb
push
outsb
pop
loop
push
pop
jmp
aaa
mov
test
cmpsb
sub
lret
cmc
pop
mov
adc
pop
cmp
insl
fcompl
push
jecxz
mov
lods
lret
jge
push
fdivrl
data16
out
mov
ds
push
sbb
cmp
push
or
imul
test
cmc
pusha
add
aam
add
mov
mov
pop
mov
jg
mov
mov
sbb
int3
sub
mov
nop
cmc
cmp
xchg
stos
out
mov
mov
arpl
mov
mov
lock
jb
and
xor
push
incb
xchg
fs
push
pop
sub
sahf
lret
add
fmull
sbb
sbb
test
pop
sub
jge
push
inc
cs
test
cmpl
cmpsb
nop
pop
push
and
shrb
cmp
stos
jle
adc
xchg
mov
jp
and
mov
xor
mov
lods
mov
mov
push
sti
fnstcw
dec
dec
stc
iret
mov
push
stos
data16
or
hlt
mov
add
dec
fildl
jl
hlt
mov
cmp
js
push
dec
push
pop
sahf
fwait
ss
or
dec
mov
dec
repz
lret
mov
dec
xor
scas
test
insl
mov
adc
inc
xchg
imul
stc
je
inc
push
popl
xor
mov
fstpl
adc
jecxz
arpl
aam
dec
mov
push
mov
and
dec
jl
push
xchg
shrb
cmp
pop
jecxz
bound
mov
mov
add
int3
push
xor
cmp
outsb
mov
jns
dec
mov
mov
pop
cld
das
movsb
loopne
dec
enter
pusha
sub
insb
push
leave
repnz
add
data16
bound
add
mov
stc
sub
cmpsb
add
mov
xor
es
jbe
sahf
cwtl
lods
enter
in
pop
push
pusha
inc
faddl
push
rolb
enter
outsl
sti
mov
push
stc
and
mov
jl
je
sbb
cmp
mov
mov
mov
xor
into
data16
outsl
pminub
lods
out
pushf
mov
push
cmp
cmp
lcall
push
lret
pop
dec
outsl
dec
lock
ret
sbb
inc
jo
pop
in
xchg
aas
mov
je
sbb
repz
ss
lret
insb
push
inc
movsb
jmp
ss
nop
jb
push
cwtl
je
pop
enter
xchg
ret
cmp
mov
repz
add
stos
xchg
daa
lds
jp
xchg
scas
lods
cmpsb
idivl
adc
dec
or
sbb
or
cmp
push
fmul
xchg
mov
sahf
outsl
mov
cwtl
dec
gs
mov
out
fdivrl
fisttpl
cmpsl
jg
cmp
xor
stos
pop
cs
sahf
shr
or
mov
rcrb
xchg
xor
outsl
inc
das
xchg
mov
mov
mov
dec
loopne
out
cmc
sub
cwtl
cmp
mov
jp
add
adc
mov
adc
int3
sub
je
jge
in
xor
xor
fsubl
mov
lahf
lods
push
sbb
lods
cmp
xchg
fsubrl
add
lahf
adc
and
lods
mov
rcrb
push
mov
sbb
ret
xchg
ja
pop
aam
adc
loope
stos
pop
add
inc
jb
mov
mov
mov
mov
mov
sbb
jo
sbb
jb
out
imul
inc
cmp
outsb
mov
mov
mov
nop
pop
or
ja
cs
stos
cmpsb
cmp
das
test
push
jecxz
or
pusha
xchg
outsb
xchg
sub
js
xor
mov
or
or
cwtl
mov
ror
xor
jo
push
test
sbb
add
xchg
lret
lret
les
imull
nop
lock
xor
bound
pop
nop
das
xchg
push
jo
fcmovne
stc
and
mov
aam
movsb
pop
dec
rorb
cmp
push
sbb
outsl
adc
jno
data16
jo
iret
cld
clc
push
dec
shlb
mov
fbstp
cmpsb
cwtl
fisubl
fiadds
or
insb
nop
xor
mov
jb
lods
cwtl
int
test
pop
in
pop
xchg
pop
out
cmp
push
lret
lods
push
xchg
enter
add
jbe
sbb
sub
adc
movsl
cmpb
inc
in
pop
hlt
fcoms
lret
pop
jo
mov
push
jmp
cmp
lods
jp
movsb
imul
mov
dec
xchg
mov
xchg
xchg
js
mov
mov
mov
cmp
mov
inc
fdiv
nop
pop
shl
mov
mov
fsubl
push
adcb
jmp
or
mov
inc
xor
je
gs
sti
bound
test
push
lock
push
dec
fisubrl
mov
mov
pop
push
repnz
pusha
pushf
dec
cmp
inc
jne
cmp
shlb
mov
repz
rclb
enter
lods
in
test
pop
pop
cmpsb
pop
pop
add
ja
sbbb
pop
ds
sub
test
cmp
sahf
aam
dec
pop
adc
fisubs
std
pop
push
movsb
push
insb
stc
insl
mov
fcoml
push
stos
hlt
data16
mov
xlat
or
out
test
xor
xor
sub
mov
xchg
daa
lret
mov
in
fists
inc
rorl
xchg
lea
xchg
data16
nop
outsb
xchg
pop
rcll
fistpl
aas
sub
pop
movsb
mov
gs
repnz
mov
out
push
sub
xchg
mov
bound
add
xchg
hlt
inc
mov
cmp
pushf
push
xchg
ror
and
jbe
ljmp
dec
mov
push
pop
lahf
fmul
cmpsb
and
sahf
dec
dec
push
cmc
xor
xor
hlt
leave
cld
fcmovnb
mov
shll
xchg
stos
mov
cmp
xor
sub
pop
cmpb
push
stc
cmp
mov
pop
jbe
add
in
cwtl
sub
mov
and
mov
stc
xchg
mov
jbe
ljmp
imul
popf
iret
out
setb
and
rcrb
je
cmpsb
dec
push
clc
add
lock
pop
add
mov
jne
daa
pushf
insb
xor
lcall
xchg
xchg
addr16
hlt
shrb
sbb
hlt
pop
jmp
sub
aaa
fisubrl
mov
sub
ds
scas
fs
sub
cs
je
xchg
pop
pop
mov
fisubs
fsubrl
push
mov
xchg
icebp
or
cmp
pop
incb
dec
je
arpl
jge
jo
adc
fsubs
into
subl
hlt
pop
scas
cmp
push
rcr
enter
pop
mov
arpl
lcall
fbstp
pushf
faddl
pop
pusha
push
js
mov
addr16
and
push
mov
out
inc
cmpsb
mov
sub
cmpsl
test
in
dec
xchg
dec
add
test
pop
mov
daa
xor
adc
dec
fucom
mov
cmovs
inc
mov
lret
insb
daa
data16
and
bound
enter
xchg
adc
sahf
aam
cwtl
mov
cmpsb
add
jle
test
pop
stc
popf
scas
popa
bound
das
mov
sahf
jb
pusha
cli
loope
and
jp
insl
stos
mov
movsl
mov
mov
pop
bound
cwtl
jmp
inc
imul
out
xor
inc
sarb
dec
pushf
pushf
in
jbe
sbb
loopne
mov
jne
lcall
rcrb
mov
sahf
nop
push
add
outsl
clc
stos
cwtl
dec
pushf
or
cmp
fwait
movsl
add
xor
pop
pusha
scas
inc
scas
subb
mov
pushf
fsubrs
dec
pop
fs
scas
outsb
cld
mov
push
and
sub
je
mov
xor
dec
ficoms
push
out
adc
repnz
pop
ja
xchg
add
dec
inc
insl
add
nop
dec
or
into
fs
mov
jp
mov
lret
or
mov
pusha
pushf
pop
fcmovne
mov
ljmp
xlat
dec
mov
add
sub
or
xor
push
mov
lret
sub
rorb
cmp
push
jp
jl
bound
dec
xor
sahf
mov
push
lret
ret
pop
stos
mov
in
add
mov
inc
push
arpl
pop
dec
fisubrs
fistpll
sbb
fucom
cmp
mov
nop
jb
push
jg
inc
cld
sti
push
cwtl
push
adcl
xchg
data16
insl
xchg
ljmp
in
rcr
fildll
inc
cmp
mov
dec
dec
dec
mov
cld
push
fnstcw
out
mov
int3
aad
pop
test
cli
hlt
dec
mov
mov
mov
mov
stc
add
mov
adc
pop
data16
dec
xor
sub
mov
cli
mov
mov
fbstp
test
push
jo
sbb
push
pop
xchg
sub
push
mov
in
dec
into
cmp
mov
pusha
icebp
cmpb
pop
js
cmp
loopne
std
out
pushf
sbb
ja
out
pop
insb
shrb
aas
enter
pop
shrb
fbstp
or
jmp
pushf
mov
insb
inc
ret
pop
mov
mov
add
push
in
cltd
mov
pop
mov
xchg
test
and
jo
mov
stos
push
xor
xor
into
scas
shl
or
jbe
push
pop
xchg
sub
test
cli
mov
sub
cmpsb
jo
push
pop
lods
sbb
bound
cmp
movsb
cwtl
lea
pop
jb
test
pusha
mov
fs
gs
and
add
or
loopne
pop
ljmp
test
xchg
dec
push
repz
mov
jbe
cld
cmp
jp
mov
cwtl
lods
shr
dec
sub
cmp
sti
jb
cltd
mov
lcall
mov
push
sbb
test
leave
cwtl
push
out
bound
fimull
repz
clc
int
dec
rcr
mov
pusha
xchg
add
mov
mov
dec
hlt
aam
test
push
popa
clc
cli
iret
shll
dec
mov
bound
sub
adc
js
jmp
xchg
add
add
loopne
pushf
jmp
test
outsl
repz
shl
jl
addr16
adc
push
push
lcall
js
and
pop
rcrl
mov
and
imul
inc
sub
adc
add
inc
nop
cmp
sti
inc
mov
dec
and
bound
add
outsl
out
push
xchg
add
jmp
icebp
outsl
test
push
xor
xchg
push
push
pop
arpl
lcall
out
mov
insb
mov
xor
sti
add
sahf
pop
popf
fstps
mov
mov
popa
fisubl
dec
stos
fisubrl
js
hlt
jle
arpl
jp
test
das
fisubrs
loopne
ljmp
pop
pusha
xchg
mov
bound
nop
int3
lcall
out
je
push
cmp
xchg
mov
inc
mov
mov
jbe
push
fnstsw
mov
sti
fisubrs
dec
pushf
pop
pop
lods
mov
bound
data16
xchg
mov
cmp
into
push
xor
add
dec
pop
jo
mov
loopne
repz
push
sub
mov
pop
rolb
jbe
pushf
jmp
out
push
fmuls
pop
push
and
pushf
cmp
push
fs
mov
push
je
lcall
int3
mov
test
arpl
adc
sbb
push
adcl
into
mov
movsb
pusha
jl
aam
add
mov
fidivl
lods
ja
outsl
fs
pop
sbb
daa
xchg
dec
pushf
sbb
loop
fs
xor
cmpsb
pop
nop
pop
int3
pop
inc
jns
mov
repz
icebp
push
add
cmp
mov
leave
inc
ficoml
ret
mov
pop
mov
inc
aam
xchg
xor
insb
mov
mov
sbb
xchg
push
cmp
push
aam
fs
add
cmp
push
into
imul
sahf
push
inc
das
int3
dec
outsb
push
dec
push
add
rcl
pusha
mov
jb
insb
pop
add
sub
lret
pop
inc
jl
pushf
stos
inc
xchg
xchg
fsubs
or
mov
pop
pop
ret
add
mov
push
dec
push
aaa
out
dec
dec
insb
adcl
pop
xchg
lock
add
xor
cmp
fs
loope
aas
mov
jp
lods
dec
rolb
pop
pop
cmp
sub
cmp
shrb
movsb
movsb
dec
outsl
hlt
jb
loop
arpl
int3
rcrb
inc
rcrb
adc
js
lock
push
mov
push
lds
jp
in
dec
mov
icebp
cmp
mov
pop
sti
add
mov
inc
push
aaa
fisubrl
lcall
dec
mov
mov
mov
xchg
jl
pop
movsb
pop
push
push
dec
mov
cmp
push
js
adc
pop
push
add
insb
jb
mov
call
dec
dec
mov
pusha
dec
lods
lods
je
mov
hlt
xchg
inc
sbb
out
mov
stos
and
nop
aaa
jbe
pop
mov
pop
push
shrb
jl
lods
pusha
hlt
cwtl
outsb
ret
nop
jne
dec
mov
shll
jnp
push
jmp
hlt
mov
das
shlb
mov
mov
cmpsl
xor
out
int3
inc
inc
pop
push
cmp
into
push
test
decb
xchg
nop
repz
jb
inc
sbb
or
cmp
stos
mov
mov
rclb
ss
mov
mov
clc
hlt
pop
pusha
pop
push
das
push
push
jp
fidivrl
sbb
dec
pop
repnz
sbb
pop
mov
mov
mov
mov
xor
and
inc
test
stos
lods
push
add
push
cmpsb
push
fwait
je
test
fisubrl
pop
imul
iret
dec
stos
cmp
pop
outsb
loope
mov
dec
cld
aad
pop
fwait
lret
cmp
pop
mov
dec
ja
mov
fdivl
push
enter
sbb
pop
das
daa
inc
jp
out
xchg
inc
mov
dec
loop
roll
mov
pusha
mov
fcompl
cmp
pop
pop
inc
fsubs
push
push
mov
inc
jbe
aaa
dec
mov
js
inc
fistpll
jg
nop
pusha
cmp
mov
pop
cmp
insb
dec
aam
int3
cwtl
and
pop
test
fldcw
data16
xorps
loopne
lret
rcr
int
mov
push
mov
cmc
sarb
mov
stos
inc
inc
or
mov
pushf
dec
pop
out
xchg
sbb
add
ficoms
pop
cmp
nop
jb
inc
cmp
out
mov
addr16
addr16
lcall
dec
repz
mov
cmp
pop
gs
lahf
hlt
jb
into
xor
je
pop
mov
nop
out
jnp
push
stos
fimuls
je
xchg
enter
mov
mov
mov
test
fsubs
xor
dec
mov
negl
pop
mov
int
outsl
ror
sbb
push
push
mov
sbb
dec
mov
xchg
nop
pushf
mov
pop
jp
pop
inc
lretw
cmc
dec
push
mov
push
stc
mov
and
sahf
dec
xchg
dec
cmp
jp
mov
lods
lods
add
ficomps
fsubp
mov
jmp
dec
xchg
sub
xor
cmp
mov
mov
mov
ljmp
sbb
pop
jo
add
iret
cmp
daa
mov
into
scas
sbbb
aam
xor
outsb
pop
lods
mov
cmp
jp
call
nop
outsb
movsb
xor
rclb
pop
dec
mov
mov
push
inc
xchg
inc
pop
xchg
dec
jge
sbb
mov
fisubl
dec
mull
pusha
xchg
mov
subb
rorb
sbbl
adc
mov
fcompl
jecxz
dec
outsb
cmp
fs
cmp
mov
sub
sub
mov
pop
mov
das
rcr
pushf
cwtl
movsb
es
pop
imul
cmp
pop
xchg
xchg
mov
mov
mov
jne
inc
xor
xor
xor
pop
ficoms
sbb
pop
and
stos
neg
test
loopne
test
fidivl
lock
mov
push
mov
sub
lods
out
ficoml
movsb
xor
fnsave
std
pop
dec
push
or
mov
or
jnp
js
stc
adc
in
adc
xor
rcl
add
mov
mov
jp
and
mov
sbb
fcmovnu
test
and
int3
fsubr
bound
mov
rcrb
loop
jbe
mov
cwtl
add
pop
adc
fimuls
mov
cmp
lret
mov
push
mov
pushf
jecxz
nop
fstpt
cmc
ffree
shlb
dec
js
mov
cli
into
jp
pop
scas
jp
mov
pop
fcompl
sub
xor
lods
movsl
std
lret
add
data16
in
out
pop
movsb
sub
push
imul
dec
mov
fmull
insb
push
enter
mov
aas
push
mov
cmp
test
push
dec
push
movsb
cmpsb
jo
ret
or
pop
push
cmp
dec
mov
push
lods
pushf
lods
lcall
lret
sub
push
dec
cld
sbb
nop
ficompl
and
lods
ret
in
pop
in
lret
pop
notl
pop
js
or
mov
sub
divl
mov
es
sub
dec
pop
push
pop
push
push
adc
inc
xchg
mov
fcom
and
dec
mov
scas
je
sub
lds
movsl
repnz
cmpsb
pop
jp
jl
bound
and
jb
mov
mov
fidivs
mov
lods
jl
mov
sti
inc
bound
inc
pushf
sub
aam
es
push
fsubs
sbbl
ficoms
lret
clc
shld
daa
inc
mov
test
and
mov
push
enter
pop
lods
cwtl
cmp
test
clc
nop
and
rorl
int3
cmpsb
sahf
inc
pop
ret
xor
mov
cmp
add
mov
jne
dec
cwtl
scas
cld
xor
dec
pop
and
inc
push
dec
jbe
add
lret
add
movsb
jb
scas
fmull
popa
jecxz
push
in
imul
mov
cs
in
nop
dec
pop
sub
lret
loope
dec
pushf
mov
js
mov
jecxz
cld
xchg
dec
or
mov
inc
scas
dec
scas
out
fisubrl
jl
adc
mov
cmp
lods
jge
push
push
lret
icebp
push
mov
cld
push
scas
fistpl
int
pop
lods
sbb
cmpsb
mov
cmp
jg
sub
xor
pushf
cmp
or
inc
lret
andl
movsb
pushf
sbb
sbb
stc
mov
or
aam
jb
mov
ret
xlat
inc
sbb
mov
movb
xchg
push
adc
mov
adc
push
and
mov
int3
dec
lea
jo
xor
mov
enter
mov
pop
mov
js
cmc
mov
mov
pop
pop
stos
pop
rol
mov
daa
movsb
cwtl
je
adc
pushf
mov
push
xchg
push
cmp
mov
stos
sub
jp,pn
dec
xor
test
push
test
addl
and
mov
repnz
rolb
mov
fidivrs
jnp,pt
dec
hlt
mov
out
repnz
mov
dec
mov
lcall
mov
pushf
lret
out
icebp
or
scas
push
mov
pushf
inc
sbb
bound
xor
cwtl
add
sbb
mov
dec
mov
fnsetpm(287
jnp
test
lcall
lods
inc
stc
jecxz
jp
scas
mov
jnp
xchg
mov
cmp
jg
movb
test
jno
xchg
data16
lret
or
push
mov
dec
shl
jmp
int3
sbb
or
jae
push
mov
pop
test
aaa
pop
mov
data16
mov
cmp
nop
ja
jb,pn
and
arpl
inc
push
cwtl
jo
cs
bound
mov
fsub
pusha
test
loopne
and
jp
cld
pop
test
bound
insl
mov
push
xor
mov
or
fistl
jmp
stos
jb
and
xor
bound
jp
shlb
pushf
cli
mov
xchg
xchg
lds
stos
push
push
cli
es
push
popf
jge
add
aam
jo
cmpsb
jns
mov
jb
mov
sub
dec
nop
fsts
mov
jns
fdivrl
out
mov
stos
mov
xchg
pop
fldl
mov
sti
subl
lods
fcmovbe
fnstsw
sahf
or
xor
lods
cmp
popa
mov
fwait
int3
stos
cmpb
cs
lret
jge
add
jns
test
jge
push
pushf
jne
dec
pop
nop
lcall
sahf
mov
movsl
pop
pushf
lods
int3
lret
movsb
dec
insb
xor
into
je,pn
sub
dec
push
add
push
mov
outsb
shll
pop
xchg
movsb
mov
shlb
fdivr
cmp
mov
jp
cmpsl
mov
shl
aad
mov
in
mov
inc
in
pop
in
pop
je
xchg
mov
mov
cmp
mov
lcall
add
lret
scas
jne
pop
jmp
aam
sub
sub
cmp
xchg
push
inc
xor
out
scas
adc
add
adc
push
test
sbb
push
push
xor
stos
adc
add
mov
pop
sub
icebp
pop
mov
xchg
mov
aaa
jb
bound
les
test
pop
mov
xchg
dec
stc
add
fs
jg
mov
jmp
in
cmp
lret
fdivr
jae
push
shl
mov
enter
sbb
lahf
dec
insl
movsb
push
out
mov
or
stos
mov
mov
mov
ljmp
cmc
loopne
mov
fcompl
mov
jbe
mov
jnp
jb
dec
push
jge
fdivrs
pusha
dec
dec
test
mov
or
loopne
bound
cwtl
std
mov
out
xchg
notl
lods
out
test
and
lock
xlat
jnp
shl
push
scas
adc
shll
mov
iret
or
stos
ret
out
lods
iret
push
adc
pop
out
jo
shrl
insb
int3
stc
sarb
mov
cmp
dec
mov
mov
pop
xchg
fisubl
lods
adc
pop
bound
push
xor
shlb
mov
dec
rcl
push
call
lret
jbe
lea
ret
xchg
fs
add
outsb
mov
ja
dec
cmpl
nop
cmpsb
pushf
jecxz
subl
xor
fmull
mov
aam
int3
sub
mov
shlb
push
mov
lods
mov
cmp
lcall
cs
stos
pop
jle
fisttpl
ja
cmp
jbe
ret
cmp
daa
push
nop
mov
aad
lcall
pop
lods
movsb
or
mov
jo
sarb
ja
mov
outsl
add
xchg
fcmovnb
add
mov
mov
dec
xchg
mov
movsl
outsb
int
mov
mov
sub
dec
xor
fdivr
pusha
scas
xchg
mov
pop
lret
data16
cmp
mov
int3
push
rorl
mov
js
mov
and
push
repz
cmp
cwtl
fcomps
cmp
mov
sbb
or
pop
xchg
imul
stos
mov
fsubs
push
pop
jb
rcl
push
into
xor
dec
dec
mov
sbb
pushf
insb
sbb
mov
scas
mov
sbb
orb
xor
je
pushf
add
push
fldl
pop
mov
jle
adc
xor
push
fiaddl
test
pushf
lods
and
ljmp
dec
lods
out
push
inc
push
adc
add
inc
xor
ficompl
daa
and
les
aas
dec
subl
push
outsb
push
inc
daa
loopne
nop
pop
cld
sbb
xchg
pop
dec
sub
pop
mov
pop
add
cmpsb
mov
mov
iret
adc
je
xchg
lods
xor
dec
int
fldt
je
dec
jl
mov
fdivrl
jg
xchg
mov
loopne
loop
and
pop
cmp
insb
and
pop
pushf
in
or
fs
lret
push
mov
scas
test
mov
lods
int3
fidivs
dec
jo
sub
mov
dec
inc
sbb
js
cmpsb
insl
sbb
lret
testb
stc
or
or
inc
sahf
hlt
mov
pop
aaa
jo
pop
mov
inc
fldcw
popa
mov
dec
out
js
add
test
mov
cmp
mov
into
nop
andb
sbb
pop
mov
sahf
add
pop
movsb
daa
mov
mov
pop
mov
push
jbe
jmp
push
mov
adc
scas
mov
fdivrl
mov
xchg
cmp
jo
aam
aam
clc
mov
pushf
loopne
mov
cwtl
xor
sbb
mov
stos
test
into
mov
sbb
ficomps
dec
or
pushf
inc
push
mov
xchg
lds
fsubs
xor
test
mov
fcmovnbe
mov
bnd
sub
and
fs
pop
movsb
jb
pop
out
and
dec
push
pop
je
lcall
cli
jg
pop
bound
subl
nop
jb
pop
mov
rcll
pop
dec
stc
or
je
loopne
push
lock
pushf
adc
mov
mov
sti
add
push
into
mov
dec
pusha
mov
imul
pusha
rolb
fsubrs
iret
jbe
sub
xchg
fistl
je
hlt
push
lret
sbb
jbe
js
shr
mov
lcall
sbb
cmp
aam
data16
nop
and
mov
dec
pop
lret
pop
insl
test
push
pushf
jb
scas
add
fdivrs
lods
lcall
mov
fsubrl
fdiv
es
lods
fsub
push
push
fidivrl
mov
add
mov
push
insb
js
cmpsb
push
sahf
test
cwtl
cmp
pusha
fstpt
push
mov
pop
jp
fcoms
cmp
mov
test
add
xchg
mov
stos
jns
lcall
lods
mov
jns
aam
dec
test
mov
ljmp
lret
mov
pop
out
cmpsb
sbb
or
pushw
cmpb
fsubrs
jbe
ds
fcmovnu
ss
jae
fldt
mov
jge
pop
push
add
jp
jb
outsb
add
test
aam
fsubr
mov
mov
fsubrl
mov
lods
mov
mov
dec
cmpsl
adc
inc
hlt
int3
mov
js
into
push
xchg
test
dec
test
mov
add
js
je
mov
and
data16
pop
les
es
mov
pop
mov
lret
mov
in
movsb
mov
mov
ljmp
jg
push
daa
mov
loop
pop
mov
push
inc
repz
idivl
sub
sub
daa
shrl
rcr
cwtl
jnp
dec
test
dec
movd
push
pop
enter
push
mov
sbb
pop
cwtl
push
pop
jbe
jmp
data16
outsb
dec
imul
jns
scas
xorb
nop
data16
inc
fnsave
lcall
adc
xchg
and
lahf
xchg
push
int3
sbb
cmp
ds
mov
js
jp
pop
mov
cwtl
push
jp
scas
mov
into
and
add
shrl
mov
xchg
cmc
pop
mov
jno
data16
fsubr
lcall
dec
cmp
xchg
or
jle
stc
cld
jl
push
fildl
test
push
test
or
push
repnz
scas
mov
mov
cmpsb
mov
sti
xor
outsl
in
cmp
mul
mov
fdivl
mov
dec
mov
pop
lret
add
xchg
fcompl
shl
movsb
xchg
pusha
sub
dec
fwait
stos
scas
lods
mov
sbb
or
add
pusha
das
lret
pop
mov
insb
pop
or
outsl
push
pop
jb
das
mov
cmpsb
jae
out
fdivrl
cltd
pop
push
in
test
scas
mov
dec
insb
pop
mov
cwtl
mov
jb
dec
add
ljmp
dec
daa
jb
mov
cmpsb
shl
mov
sahf
outsl
sbb
pop
je
lret
pop
lcall
scas
mov
push
mov
add
xor
rep
xchg
xchg
sub
mov
roll
mov
test
push
hlt
jb
aam
and
jnp
fdivs
fildll
sub
insb
add
insl
out
int3
cmp
into
pop
add
push
push
jnp
jg
loop
cld
jle
iret
dec
repnz
adc
insb
xchg
inc
into
push
jp
stc
enter
add
into
push
jae
loop
nop
lret
sub
push
shll
insb
mov
adcl
lahf
stos
dec
inc
add
pop
adc
push
rolb
pop
cwtl
cld
stos
jb
mov
cmc
stos
stc
pop
mov
test
sbb
push
fidivrl
filds
sub
xor
nop
aaa
mov
push
and
sahf
mov
dec
xchg
rcr
xchg
lock
or
jbe
scas
adc
aam
adc
or
ja
push
ficompl
mov
xor
xchg
gs
stc
ljmp
lret
inc
push
sub
jb
addb
mov
stos
stos
rcrl
scas
pop
mov
jle
adcl
xchg
mov
lret
xchg
add
lcall
fnstsw
xchg
dec
out
test
lcall
jnp
push
mov
cs
mov
mov
dec
adc
loop
mov
cli
cmpsb
jl
jb
xchg
mov
ficompl
push
das
scas
movsb
je
push
adc
add
movsb
out
xchg
mov
cmp
lret
les
jp
jbe
shlb
orps
out
mov
xchg
jnp
pop
push
inc
lods
aaa
nop
dec
outsb
push
mov
cmp
dec
pop
enter
lea
lret
mov
popf
push
lods
xchg
pop
dec
sbb
jbe
inc
jp
cld
lods
scas
fsubrl
fists
aam
pop
dec
fdivs
mov
repz
mov
sahf
scas
shrb
mov
push
push
or
xchg
jo
lret
mov
push
sahf
cld
sbb
sarl
adc
je
or
mov
hlt
push
mov
repnz
lods
imull
out
lock
adc
mov
jge
bound
mov
or
cwtl
punpckhdq
push
mov
gs
fs
je
xchg
mov
nop
rolb
push
es
xchg
inc
add
int3
and
sti
fistps
xchg
dec
xchg
inc
push
adc
mov
fwait
into
mov
mov
je
testl
sahf
mov
in
push
fs
test
pop
sbb
and
jl
cmpsb
push
mov
add
sahf
test
push
int3
insb
push
mov
hlt
outsb
mov
jnp
stos
jg
cmp
imul
js
cmc
or
inc
mov
roll
mov
adcl
in
movsl
std
push
test
fcoms
fdivrl
lret
pop
dec
stc
jo
dec
fdivs
dec
outsl
and
push
int3
add
mov
mov
cs
test
fcompl
loope
mov
ss
mov
cmp
push
cwtl
cmpsb
inc
pop
cmc
add
test
and
ja
xchg
xchg
cmpsl
jb
mov
dec
sti
dec
xchg
jl
xor
jecxz
push
mov
dec
mov
cwtl
jns
insb
fdivl
push
xor
jecxz
outsb
call
pop
mov
sbb
inc
fcomps
push
push
into
scas
inc
mov
push
push
mov
outsb
mov
fwait
jb
sbb
pop
mov
xchg
jo
mov
into
push
cmp
push
mov
iret
xchg
cmpl
mov
xchg
movsb
push
push
jp
call
push
mov
stos
mov
ja
pushf
mov
jae
popa
arpl
lods
push
int3
movsb
cmp
mov
movsl
jl
fcmovbe
push
push
pop
test
sarb
cwtl
dec
pushw
push
shrb
push
out
scas
punpckhdq
mov
adc
stos
js
lods
insl
in
mov
and
cli
fcomps
or
and
add
add
sub
push
lahf
cld
andl
nop
mov
hlt
dec
scas
shl
inc
xor
dec
pushf
jns
into
pop
scas
dec
add
fdivl
pop
mov
mov
mov
lock
test
insb
xchg
ret
inc
test
sub
dec
insl
test
jnp
pop
rcrl
fcomps
pop
xchg
out
shlb
mov
jo
imul
mov
test
xchg
inc
pusha
insb
pop
add
movsb
scas
jp
bound
int3
stos
jb
jbe
dec
pop
push
pusha
pop
add
and
or
cli
hlt
jl
jb
dec
mov
sub
cmpsl
shlb
cmp
push
lret
xchg
xchg
mov
fsubl
fcomps
sahf
pop
ficomps
vmread
jbe
adc
stos
pusha
test
jp
rclb
add
sub
out
sbb
and
cmp
lcall
xor
xchg
cmp
inc
rclb
mov
ficoms
push
fs
xor
inc
cs
jl
int3
mov
mov
test
xchg
xchg
dec
pop
xor
xor
mov
push
pop
push
mov
dec
rcrb
adcl
mov
data16
add
xchg
push
dec
dec
fldl
cmp
pop
je
fdivrl
lret
or
jp
sub
push
mov
pushf
mov
pop
xchg
mov
outsb
cmp
mov
pop
pop
repz
nop
add
fisubl
js
mov
sahf
sti
fwait
mov
sub
add
mov
mov
imul
pop
mov
mov
mov
push
data16
cmp
cld
lret
jbe
stos
hlt
outsb
pop
xor
push
fiadds
xor
pop
jbe
dec
add
pusha
andl
ret
pop
xor
mov
outsl
fs
add
xor
adc
fistl
or
imul
cmpsb
dec
or
jp
push
mov
out
lods
mov
test
scas
lret
fsubrs
sahf
movsl
fidivrs
push
push
sub
lock
xchg
data16
pop
dec
push
int3
lret
enter
test
lret
mov
test
push
xchg
ret
aam
push
mov
js
and
mov
mov
dec
mov
mov
jmp
icebp
insb
and
lods
fcoml
int
pop
push
dec
jo
or
pop
pop
cmp
mov
insb
xchg
enter
inc
adc
sti
mov
aaa
lcall
fistpl
sti
adc
sarw
cmp
pop
mov
fmul
jbe
xchg
inc
xchg
nop
pop
push
pop
mov
sbb
shrb
int
fwait
jbe
hlt
pop
push
fistps
scas
ret
ret
sbb
cli
in
jp
or
or
push
fwait
mov
mov
push
mov
cmp
mov
call
fidivrl
loopne
gs
mov
pop
adc
rcrb
push
xchg
push
into
fstpt
jae
mov
pop
pop
lods
mov
sti
push
cld
jbe
sbb
lock
int3
lret
jb
mov
jo
cmp
or
xchg
inc
adc
movsl
ja
cmpl
sub
jbe
int
add
push
ficompl
aam
bound
out
fdiv
mov
mov
sti
ljmp
xor
lods
je
push
nop
lods
test
xor
int3
lret
pop
pop
psubsb
mov
sbb
out
popf
loop
and
ret
cwtl
jo
mov
jns
mov
js
ja
mov
fs
inc
or
pop
les
push
je
jo
pushf
sub
insb
xor
test
popa
scas
and
fidivl
in
fwait
lods
dec
xor
push
lods
mov
test
push
into
stc
cmpsl
jl
shl
pop
jb
add
fiadds
jp
js
jl
mov
mov
adc
push
aaa
cltd
mov
dec
xor
inc
mov
inc
mov
fwait
pop
rorl
das
pop
lods
insb
into
mov
sbb
cmpsb
int3
dec
nop
outsb
jp
mov
sahf
into
mov
sub
loop
fwait
outsb
xor
adcb
xchg
sbb
jne
xor
movsb
mov
js
jbe
mov
je
sbb
dec
faddl
sbb
lock
xchg
das
cmpsb
xchg
out
rolb
lret
pop
roll
hlt
xchg
lret
push
cmp
and
bound
shll
enter
mov
mov
add
lea
test
jbe
pop
daa
mov
cmp
mov
popf
pop
jecxz
lods
xor
lret
pop
xor
stc
fdivr
adc
pop
cwtl
arpl
push
cmp
jbe
jl
nop
mov
out
fdivl
cld
push
hlt
xchg
mov
sbb
mov
gs
mov
push
stc
dec
dec
cmp
fs
mov
shlb
sbb
and
add
ja
mov
bound
jl
mov
xchg
cmp
into
pop
aaa
shll
add
nop
test
pop
sbb
add
sti
imul
std
stos
or
pop
pop
dec
mov
xchg
push
std
repz
jo
mov
fucomip
or
mov
pushf
jp
mov
lahf
add
shlb
dec
mov
in
int3
movsl
incb
shrb
pop
xlat
dec
movsb
andb
add
lock
scas
add
xchg
pop
jmp
or
lock
sahf
mov
mov
out
add
adcl
pushf
sahf
mov
lods
cmp
into
fcomps
xor
mov
int
push
sbb
xor
int3
stos
mov
fdivrs
pop
mov
pop
fmulp
mov
mov
push
inc
sub
cwtl
xchg
nop
popf
cmp
pop
xor
and
dec
into
adc
ja
mov
mov
mov
adc
sub
push
fs
mov
add
xchg
outsb
leave
int
inc
rcl
xor
mov
xor
mov
mov
pusha
jo
pop
inc
and
test
stos
cld
cmp
mov
push
popa
dec
mov
cmp
lods
int
add
adc
or
cmp
mull
movsb
js
push
scas
rorb
mov
push
sti
lock
je
inc
ret
pushf
sbbb
ret
rorb
scas
pop
jmp
scas
xorb
jbe
pop
int3
xor
add
sbb
push
mov
xorl
sar
push
dec
mov
pushf
mov
lods
loop
mov
rorb
mov
cmp
mov
mov
or
mov
xchg
jnp
push
xchg
div
lea
pop
sub
push
mov
pusha
jb
push
jbe
pop
mov
lods
fdivrl
push
sbb
out
shlb
jbe
xor
sahf
mov
mov
push
pushf
dec
mov
rcrl
scas
sbb
inc
xchg
lock
ficompl
into
cmp
push
mov
aas
jmp
stc
in
int3
mov
pop
lcall
bound
testl
fidivrl
stos
in
nop
xor
mov
scas
fsubrl
push
pop
mov
lods
sbb
adc
push
sahf
dec
mov
cwtl
imul
je
mov
sbb
inc
cld
mov
dec
mov
scas
add
mov
pop
pop
out
pushf
pusha
cmpb
pop
add
jp
sub
pop
mov
into
xchg
mov
pop
pop
push
xchg
lods
ljmp
lods
pusha
mov
js
repnz
push
into
in
sbb
push
je
mov
shlb
fcmovnbe
rorb
dec
and
dec
fdivrs
or
test
jge
data16
nop
jge
iret
pop
out
insb
imull
jp
movsb
mov
enter
push
pop
mov
aas
xchg
out
push
lods
mov
iret
pusha
mov
or
fldl
push
mov
nop
pop
jl
stos
add
out
xchg
push
add
ja
daa
and
mov
mov
fsubs
pusha
sbb
rclb
clc
adc
dec
pop
sti
mov
aad
add
mov
mov
test
jl
push
stos
pop
outsb
cmp
jo
mov
aad
mov
lcall
push
pop
push
pop
mov
and
and
mov
rorb
js
pop
mov
dec
inc
fcmovne
mov
pop
xchg
lss
dec
es
mov
xchg
test
loop
lods
rorl
fsubrl
je
mov
sbb
mov
lret
jo
mov
mov
jp
mov
mov
and
jecxz
outsb
push
stos
adc
pop
add
test
pop
into
sbb
and
cwtl
aaa
aas
dec
xchg
mov
pop
pop
fsubrl
dec
pusha
jbe
mov
dec
jbe
pop
andl
ds
movsb
arpl
popa
repz
adc
fs
lods
mov
cmp
jbe
push
push
sbb
fdivs
lcall
out
mov
sub
cmp
mov
fnstenv
jp
pop
aam
cmpsb
dec
cmc
push
outsb
mov
out
or
sarb
mov
cmpsb
xchg
je
xlat
into
pop
jo
mov
mov
inc
mov
cmp
movsb
rorb
mov
movsb
mov
adc
outsb
insb
cmp
mov
das
push
xor
lea
cmp
je
mov
mov
push
xor
push
test
jb
xor
imulb
es
xchg
adc
adc
cmpsb
aam
in
mov
pusha
shlb
jbe
jp
xor
fistpl
int
int3
push
stos
add
stc
int
scas
mov
popa
cmp
xchg
test
pop
push
outsb
enter
rcl
dec
ds
cmp
xchg
fimull
jae
cs
dec
xchg
pop
test
bound
and
mov
mov
in
mov
sbb
mov
push
dec
test
je
shlb
bound
push
dec
pushf
ss
je
mov
push
addr16
movsb
das
mov
mov
test
andb
push
xchg
dec
ja
ds
mov
mov
adc
sti
mov
mov
xor
test
int3
stc
cltd
xor
ss
lea
mov
aaa
cmp
pop
fidivrl
jg
hlt
std
in
std
sbb
outsb
mov
daa
insl
nop
fwait
xor
inc
aam
cld
pop
sahf
push
stos
xchg
ret
mov
mov
push
xor
xchg
fidivrl
inc
js
xchg
mov
pop
xchg
in
and
imul
mov
movl
dec
ficomps
cld
mov
dec
cmp
jo
mov
mov
aam
fs
mov
add
jmp
js
push
sub
add
pop
xchg
xor
lret
aam
mov
mov
je
mov
mov
icebp
aas
xlat
lock
mov
jle
fistl
jo
test
cmp
scas
ret
test
sub
scas
repz
call
fildll
dec
faddl
scas
cmpsb
insb
pop
cwtl
lcall
sbb
push
sbb
sbb
dec
or
fsubrs
outsb
inc
subb
jno
or
and
rclb
and
mov
je
das
or
xchg
mov
adc
and
push
dec
push
jecxz
dec
gs
mov
push
inc
xchg
nop
stos
scas
or
bound
cmpsb
push
daa
adc
testb
push
mov
xchg
add
les
and
lock
add
pop
mov
arpl
cmp
into
bound
dec
insb
out
push
cmp
push
pop
cs
sahf
add
fsubrs
shrl
mov
pop
pusha
xchg
sbb
push
shrb
jl
mov
pusha
rorw
lret
in
fs
test
xchg
enter
or
xor
xor
xorb
mov
into
jbe
fildll
sub
addr16
stos
mov
pop
ds
mov
sti
movsb
mov
enter
pop
inc
mov
pop
les
outsb
faddl
or
imul
mov
push
bound
fmuls
cmpsb
cmp
mov
mov
xor
mov
nop
or
rcrl
rcrb
sahf
mov
push
das
jmp
sub
inc
xchg
cmpsl
out
mov
add
stc
lret
sbb
add
lret
pushf
jbe
jmp
movsb
xchg
in
mov
sbb
lock
outsb
mov
push
lret
mov
fcompl
mov
es
mov
pop
dec
push
add
call
cmp
xor
scas
cli
mov
int
xor
dec
mov
xor
xor
xor
xor
sub
push
sbb
sbb
inc
cmp
mov
dec
fcomi
cmp
insb
jb
mov
jl
mov
movsl
dec
jecxz
cmp
ret
in
bound
test
mov
dec
gs
xor
cmovle
adc
mov
pushf
xor
pop
lds
clc
fimull
dec
and
insb
imul
pop
sahf
and
add
jg
cs
mov
jae
or
arpl
out
inc
ja
aam
cmp
je
pop
fs
push
pop
pop
pop
out
push
movsb
mov
out
cld
out
dec
jno
adc
stos
and
and
jg
lret
add
mov
mov
xchg
hlt
and
gs
nop
test
mov
cs
sarl
scas
into
mov
sbb
and
push
dec
sti
mov
push
push
iret
pop
push
sti
mov
movsb
sbb
inc
sar
fists
jne
jge
ret
enter
aam
hlt
xchg
xorl
mov
scas
enter
es
lcall
xor
pop
js
pop
push
and
cmpsb
cmpsl
lcall
dec
xor
je
jnp
lret
sbb
imul
push
js
mov
xchg
aaa
in
jb
mov
inc
aas
adc
decb
loopne
shrb
push
cmp
push
add
sahf
test
jg
jne
sbb
mov
scas
mov
mov
mov
mov
jb
in
xor
mov
inc
js
pop
fcompl
dec
fmul
js
addr16
mov
add
fdivl
mov
push
pop
adc
jo
sbb
stos
mov
lcall
jb
cmp
sub
in
cltd
js
push
cwtl
mov
data16
fsubrp
add
je
leave
sbb
push
cmpsl
mov
pushf
hlt
xor
push
cmp
jo
add
pop
lods
and
push
in
sbb
pop
xchg
mov
mov
mov
mov
xchg
roll
cld
xchg
out
lea
pusha
fists
sub
cmpsb
add
pop
mov
outsb
insl
int
xchg
insb
fistpl
mov
adc
or
imul
mov
inc
push
adc
nop
pop
outsb
test
aam
add
fmuls
lret
xchg
push
addl
cmpsb
stos
fdivrl
mov
aam
mov
push
cli
test
dec
lcall
or
sbb
cmp
fdivrs
je
jno
adc
inc
push
aas
jp
or
dec
dec
xchg
add
cmp
pusha
mov
dec
jp
pop
jg
xor
mov
mov
jo
cmpb
and
fcoml
and
push
jo
cmpsb
outsb
iret
mov
and
out
xchg
enter
add
xor
mov
imul
dec
mov
jno
ss
int
mov
pop
push
dec
mov
jb
subl
daa
outsb
dec
push
mov
das
push
data16
aam
imul
mov
stos
pop
loopne
shr
dec
sbb
or
mov
int3
fisubl
test
insb
lcall
shrb
rcrb
mov
push
in
or
add
pop
aam
sti
aaa
mov
stos
push
fdivs
mov
test
dec
cwtl
fsubrp
jmp
pop
and
push
out
add
loop
fisttpl
sbb
cmp
pop
push
pop
loopne
add
lock
int3
push
mov
rcl
outsb
mov
das
push
in
fwait
or
loopne
push
fdivrl
movsb
ss
mov
push
dec
mov
pop
test
dec
jae
push
push
pushf
mov
stc
stc
data16
sahf
mov
lcall
cmpsb
out
out
out
mov
jb
cmp
mov
lods
dec
adc
inc
jb
mov
xor
lods
cmp
pushf
shrb
mov
out
testl
cmp
scas
cwtl
mov
je
dec
push
pop
lret
jb
outsl
mov
push
fmuls
push
and
pop
dec
setbe
ljmp
jbe
out
mov
cmpsb
fldt
in
push
fcompl
xchg
pusha
dec
adc
pushw
or
data16
dec
gs
inc
or
outsb
dec
idivb
repnz
in
repnz
adc
mov
push
jge
sbb
repz
add
xchg
aam
push
xchg
loopne
mov
mov
stos
mov
lret
xchg
incb
and
xchg
xchg
das
fidivs
cld
inc
nop
fists
repnz
insb
test
pop
jge
or
loopne
jg
fldcw
push
in
mov
repnz
pop
xchg
mov
sti
test
ficoml
jno
xorl
aas
out
cwtl
je
dec
jo
pushf
pusha
push
push
pop
push
cltd
aas
data16
aas
jp,pt
dec
mov
mov
add
clc
push
push
je
cmovne
arpl
clc
inc
repz
mov
fsubrl
jp
mov
jb
mov
mov
xor
lret
fdivl
pop
mov
inc
cmp
lcall
and
shrb
jae
das
mov
xor
sahf
push
aas
mov
xlat
push
pop
fmul
cmp
dec
dec
jne
and
mov
jbe
je
ficompl
lret
and
cli
out
dec
mov
pop
loopne
fs
dec
cmc
lock
sarb
in
rclb
rcll
inc
pop
addr16
mov
insl
add
insl
daa
xchg
nop
ja
ret
hlt
adc
bnd
dec
popf
das
xor
mov
push
fcomp
mov
or
movsb
add
pop
jmp
mov
les
fs
jns
jb
add
xchg
cmp
insb
push
dec
das
mov
lds
cmp
stc
push
pop
ljmp
adcl
pop
dec
pop
or
mov
int3
mov
mov
mov
cwtl
inc
into
cli
xchg
jno
inc
add
cmp
fiadds
int
xchg
mov
sbb
inc
jl
pop
push
sar
and
fdivrl
fcomi
mov
aam
daa
dec
nop
cmp
mov
and
cmp
bound
mov
push
lea
mov
mov
jnp
ficoml
mov
pop
lcall
cmp
je
es
mov
sub
pop
pop
and
stos
roll
pop
mov
and
jb
into
jp
push
mov
movsl
je
cs
mov
pusha
nop
gs
jle
imul
xor
push
mov
cmp
dec
pusha
movsb
inc
fs
push
push
pop
push
aam
jecxz
mov
pop
push
jecxz
and
or
lods
fsubrs
pop
push
mov
jns
js
fs
pop
stos
dec
sbb
push
xchg
dec
shl
cmpb
pusha
push
mov
pop
test
or
xor
jmp
lds
daa
cmp
mov
pop
jne
es
incl
jns
fisubrl
pop
test
jecxz
inc
sub
imul
in
and
mov
mov
pushf
mov
push
enter
sbb
lcall
push
inc
pushf
mov
rcll
adc
fidivrl
rorb
mov
cmpsl
pop
subl
push
sarb
lret
rclb
fs
inc
add
fcmovbe
add
lock
pushf
push
fs
movsb
lcall
mov
lret
les
pusha
data16
inc
test
push
roll
dec
mov
pushf
jl
jp
cmpsb
je
pop
popa
movsb
jp
inc
pushaw
jnp
xchg
pop
aam
sahf
ret
push
scas
test
dec
add
nop
mov
jge
repz
push
pop
movsb
lods
pop
and
push
xchg
lret
fdivrs
movsb
sbb
stos
shlb
hlt
pop
ret
sti
push
movsb
push
xchg
or
les
mov
sbb
in
je
in
in
movsb
lcall
xor
jns
dec
mov
lods
jno
pop
mov
cmp
test
jb
cmp
lods
scas
add
push
mov
rolb
xchg
imul
mov
dec
push
adc
fsub
sahf
jecxz
lods
cmp
lcall
leave
xor
dec
pop
pop
fdivs
mov
ja,pn
mov
xchg
fsub
pop
mov
ja
fisubl
pop
mov
aaa
pushf
out
push
int3
sbb
sarb
cmpsb
int3
test
and
fidivl
push
adc
bound
movsb
fcomps
pop
cmp
xlat
aas
lahf
xchg
inc
and
jge
or
lods
dec
out
mov
pop
push
mov
das
pusha
xchg
mov
push
xor
pop
mov
jae
dec
pushf
pop
sub
fs
adc
mov
pop
fdivl
or
inc
daa
push
mov
pop
outsb
lea
mov
arpl
pop
mov
and
jg
push
sahf
sbb
sbb
adc
js
sub
sub
outsb
and
fmuls
add
movsb
rcrb
cmp
hlt
jb
int3
pop
push
cmp
js
mov
adc
lea
ja
dec
xchg
movsl
fs
and
lods
data16
xchg
jg
sbb
xor
mov
sub
shlb
int3
fldt
inc
insb
movsb
aam
add
ret
add
dec
push
je
mov
inc
bound
cwtl
lds
pop
push
adc
pushf
in
or
dec
xchg
test
mov
jbe
and
jp
sbb
sahf
daa
jmp
pop
mov
movsl
ljmp
push
pushf
jo
mov
mov
xchg
adc
dec
mov
sahf
push
decb
mov
fidivrs
int
test
mov
pop
je
mov
jle
sbb
inc
or
hlt
cwtl
daa
pop
xchg
sub
xchg
das
mov
push
cli
test
dec
insb
in
test
add
cmp
mov
enter
mov
push
jp
sub
pop
adc
mov
push
xchg
pop
js
mov
pop
into
mov
fistps
pop
pushf
sbb
daa
mov
push
mov
inc
in
in
fnstcw
lods
out
mov
imul
push
mov
cs
js
test
movsb
mov
jp
mov
push
xor
push
aas
adc
jecxz
mov
adc
mov
rolb
ficompl
jbe
mov
xor
movsb
pop
mov
fldenv
inc
into
mov
fldt
sbb
repz
mov
jb
lcall
mov
lret
xchg
push
bound
dec
lret
into
jp
lahf
mov
push
push
pop
push
out
lods
es
pop
je
push
xchg
nop
js
ss
xchg
cmp
push
dec
or
xchg
test
xchg
pop
jmp
test
std
fwait
pop
ja
int
mov
pop
cmp
aam
popf
ficoms
adc
cwtl
sbb
mov
sub
shll
je
xor
mov
sub
inc
dec
push
cmpsb
mov
sub
add
xor
cld
add
es
adc
xchg
jl
pop
jns
mov
mov
add
push
jno
and
fnsetpm(287
push
enter
rclb
dec
pop
insb
inc
dec
cmp
cmpsl
and
shll
popf
xchg
cmpsb
fsubl
or
lods
xor
push
push
xchg
mov
aam
test
imul
jo
xchg
add
or
shlb
movsb
fsubs
push
or
aam
fdivs
dec
sub
mov
mov
mov
lahf
bound
mov
dec
xor
in
bound
xor
push
ret
mov
mov
fmulp
push
mov
mov
sbb
mov
jg
mov
pop
js
int3
pop
nop
shll
je
xchg
insb
lret
sub
stos
inc
ss
cwtl
out
in
mov
out
jp
fucompp
cmp
xchg
pop
push
insb
imul
push
sbb
or
mov
mov
cmp
push
pushf
mov
mov
rorb
scas
jae
test
adc
xchg
dec
movsb
js
data16
push
sub
add
push
sbb
sub
stos
int3
mov
inc
enter
pop
xchg
sahf
push
xor
dec
fcomi
in
push
test
mov
mov
movsb
out
or
cmp
js
movsl
in
sbb
xchg
lret
daa
push
dec
pop
inc
fmuls
orb
add
sub
jl
pop
jp
cmpsl
jb
insb
add
push
sbb
mov
cmp
push
gs
dec
mov
pop
add
mov
inc
mov
or
add
mov
inc
outsb
cmp
dec
mov
sbb
mov
dec
and
pusha
push
pop
pop
adc
lods
ja
mov
and
call
mov
mov
push
fucomi
scas
mov
je
pop
pop
bound
inc
adc
add
fisubrs
je
xchg
add
push
shll
jae
mov
jne
int3
mov
jg
sar
xchg
xchg
dec
fstpt
hlt
xchg
push
jae
nop
or
sub
stos
stos
push
push
pop
pop
fimull
mov
add
into
daa
jp
jle
sbb
test
in
lods
lds
fs
xor
xor
aas
push
jp
xchg
jp
jg
pop
outsl
cs
pop
cmovs
dec
insb
imul
push
je
dec
int3
mov
nop
test
test
jge
mov
lds
push
add
int3
add
adc
scas
push
mov
mov
adc
mov
das
les
ds
sbb
je
inc
jo
push
mov
stos
jns
stos
dec
shlb
lret
pushf
sub
sub
repnz
push
sub
or
aaa
jb
jp
or
mov
push
jnp
fs
mov
mov
push
or
ds
xchg
jbe
lret
stos
lock
dec
or
cmp
movsl
sub
mov
jl
into
movsb
or
arpl
aaa
mov
lret
sub
sub
aaa
adc
pushf
aas
jp
into
xchg
test
and
push
pop
leave
sub
mov
or
fbstp
xchg
loop
xor
fcoml
rclb
insl
loopne
push
adc
pop
inc
out
mov
outsl
push
jns
dec
mov
pop
lds
mov
sub
push
or
cs
outsb
fists
or
push
fwait
push
mov
nop
adc
int3
sahf
movsb
leave
jge
mov
mov
rorw
lcall
jp
xlat
sbb
mov
push
dec
lods
outsb
adc
aam
subb
lods
das
insb
fs
fsubrl
dec
mov
test
pop
push
mov
push
pusha
mov
xchg
mov
andb
mov
pushf
mov
ja
ret
push
mov
ret
push
jecxz
test
nop
fcom
rclb
fs
adc
pop
inc
push
jo
mov
daa
insb
cmp
xlat
lret
lcall
pop
pop
pop
das
dec
out
aam
sbb
push
add
sbb
mov
mov
jp
test
stos
jmp
jg
es
sub
mov
ret
or
inc
rorb
adc
fs
cmp
adc
cmp
outsb
dec
sti
scas
stos
js
into
pop
mov
fcoms
mov
mov
jg
fistpll
aam
jbe
lret
out
mov
and
sub
xchg
sbb
jg
cmp
aam
pop
ret
data16
repz
cmp
in
pop
dec
shll
pop
fs
dec
add
cltd
add
aas
imul
pop
out
lods
jmp
cmp
ficompl
ds
cmpsb
cld
cwtl
mov
scas
scas
lcall
js
push
jmp
lods
test
mov
rcl
bound
je
dec
cmp
mov
pop
lods
sub
jo
test
fistpl
mov
outsb
dec
xchg
xor
fimuls
pop
lcall
dec
xchg
testl
cmc
test
pop
xor
fistpl
mov
pop
xchg
cmp
xchg
out
out
ficomps
aam
icebp
in
pop
push
add
jp
jbe
into
sub
inc
cmp
lcall
lret
in
movsb
jns
bound
mov
add
mov
rcrl
and
sub
lcall
xor
clc
lahf
cmpsb
push
decl
mov
fmulp
mov
scas
shll
xchg
nop
fidivrs
lret
in
push
ror
sbbb
jno
dec
dec
mov
or
adc
test
lret
adcb
push
sub
sub
push
push
fucomip
ret
pop
sahf
cbtw
sub
aam
lret
je
hlt
pushf
mov
inc
je
cmpsb
cwtl
out
cli
push
sbb
mov
mov
sahf
jo
scas
fcompl
cmp
lock
cmp
push
sub
stc
dec
cld
lea
fisubl
mov
shrb
popl
and
addr16
mov
je
mov
cmp
cwtl
pusha
outsb
dec
mov
sbb
fucomi
push
mov
jl
pop
nop
test
js
fidivrs
push
pop
outsb
rcrl
xor
fs
sub
fimull
pusha
push
addr16
push
mov
pop
dec
mov
pop
mov
popf
jne
out
int
push
mov
and
je
scas
inc
pop
js
cmpsb
fdivrl
push
mov
in
xor
cwtl
scas
mov
orb
push
mov
cmpsb
inc
add
int3
lcall
aam
sub
sbb
inc
mov
or
pop
scas
imul
lret
sbb
mov
xchg
rcrb
cmc
mov
aas
cwtl
inc
data16
inc
insb
jp
dec
adc
mov
add
jbe
xor
jp
pop
push
aam
pushaw
orps
shlb
mov
mov
lea
add
ret
mov
roll
push
test
pop
into
aas
pop
xchg
pop
fs
push
adc
xchg
push
int3
xor
mov
repnz
fsubrl
out
pop
mov
mov
data16
inc
addr16
es
mov
mov
jbe
jb
push
je
cmp
aam
fs
movsb
stc
out
mov
sbb
icebp
jl
mov
jns
stos
pop
mov
jp
xchg
dec
bound
push
fs
movsb
pushf
sub
inc
jp
push
fcmovne
addr16
cmpsb
pop
pop
popa
jp
cmp
pop
mov
icebp
or
lret
out
cmpsb
clc
mov
aaa
jbe
int3
pop
fs
inc
sbb
or
lock
bnd
mov
dec
mov
pushf
pop
mov
aaa
les
nop
rclb
cltd
jbe
test
jne
lret
mov
sbb
cmc
xchg
mov
ret
sub
push
xchg
fwait
adc
and
mov
das
sbb
push
je
inc
fdivp
mov
xor
pushf
cmp
dec
push
inc
mov
call
add
bnd
jo
xorb
adc
insb
movsl
int3
std
mov
push
aaa
mov
add
inc
sahf
jns
mov
jbe
jmp
pushf
test
outsb
fwait
loope
pop
pop
or
adc
lret
mov
cmp
mov
pop
nop
lods
and
cwtl
fstp
jne
push
pop
sbb
in
adc
or
jl
int3
lret
mov
lock
mov
xor
or
lods
call
xchg
xor
cwtl
imul
mov
aaa
jb
nop
into
lcall
and
xor
js
push
dec
rorb
ror
mov
and
and
dec
out
pusha
out
mov
inc
jo
xor
movsl
add
xchg
jge
mov
fdivl
lret
jge
rep
or
and
jg
pop
mov
mov
stos
sarl
mov
cld
jbe
addr16
mov
push
in
pop
xchg
jp
push
dec
xchg
mov
sarl
inc
fcomip
cltd
cmp
push
xchg
outsb
jp
inc
stos
int3
pushf
pushf
out
or
gs
mov
xchg
cmp
dec
pusha
bound
cmpsb
mov
outsb
mov
mov
mov
pop
xchg
xchg
movsb
fsubrl
jo
mov
pushf
sbb
mov
mov
dec
or
jp
push
add
lods
cmp
std
lods
xchg
inc
insl
xor
ja
jno
arpl
into
push
mov
or
lods
andl
test
shlb
mov
jbe
adc
mov
xchg
mov
ficoms
test
into
insb
or
andb
push
mov
mov
int3
xchg
mov
jne
sub
test
imul
lods
pop
dec
xor
outsl
es
mov
insb
xchg
out
push
mov
fidivl
mov
mov
dec
data16
adc
lcall
dec
mov
lcall
jl
pop
fisubl
in
xchg
jecxz
cmp
enter
rorb
mov
mov
mov
sbb
mov
mov
push
cmp
mov
inc
inc
fcomi
cmpsb
adc
stos
push
mov
pushf
fsubl
mov
jb
xchg
in
test
out
cmp
movsb
scas
in
sub
cmpsb
mov
scas
add
int3
cmp
movsb
pop
mov
push
imul
pushf
push
lcall
bound
shl
cmpsb
fwait
inc
inc
movsb
jb
repz
sub
xor
xchg
xor
mov
xchg
inc
pop
lahf
inc
fcompl
js
rcr
cwtl
cmp
outsb
cs
push
push
sub
add
mov
xchg
jb
into
and
jbe
cmpsb
mov
pop
fs
xor
js
mov
lods
xchg
insb
dec
hlt
lret
cmp
pop
mov
scas
int3
mov
push
inc
jbe
fcmove
fdivrp
sub
push
add
mov
push
enter
fstpt
aaa
into
cmpsb
xchg
outsb
push
out
dec
nop
mov
lss
scas
cmp
push
mov
and
push
cmp
stos
push
lret
into
nop
xchg
push
das
and
and
cmpsb
push
jnp
pop
jmp
fiadds
rorb
or
movsb
mov
shrl
mov
mov
shrb
xor
mov
inc
push
jl
pop
test
jmp
add
jge
std
movsl
cwtl
push
xchg
cmp
mov
dec
aam
test
and
sub
push
push
xor
push
das
pop
mov
pop
jg
jae
bound
jp
out
sbb
mov
mov
dec
cs
js
jp
mov
movsb
daa
out
mov
je
jp
push
flds
cmpsl
mov
push
loop
mov
scas
test
mov
inc
movsb
push
mov
insb
out
in
jb
hlt
insl
adc
and
enter
mov
sti
leave
bound
push
jo
add
repnz
pop
push
xor
mov
stc
sbb
jo
mov
xchg
sbb
ror
stos
jns
ficompl
sbb
ficomps
mov
fidivrs
fsub
jbe
inc
test
sbb
cbtw
mov
fldenv
push
shrl
mov
cmpsl
pusha
sub
lahf
enter
ja
out
rcl
mov
jmp
cmp
cld
cmpb
insl
mov
cmp
pop
out
lods
mov
mov
ficomps
mov
imul
xor
jns
mov
cmp
lods
push
mov
mov
cmpsb
test
fs
jle
mov
xor
lret
mov
and
fsubr
js
fdivs
or
pop
fcompl
ficoms
pushf
mov
adc
scas
xor
out
inc
aam
fwait
mov
test
jns
fisubrl
pop
mov
mov
xorl
into
pop
push
ficompl
xchg
je
lret
cmp
jmp
jo
push
add
sti
xchg
faddl
jbe
mov
ss
sahf
mov
pushf
pop
jb
mov
xchg
jne
dec
popf
mov
push
pop
hlt
test
mov
sbb
scas
jb
or
push
ja
or
popa
lahf
mov
int3
lods
daa
sub
dec
xor
xor
ds
push
jp
mov
add
xchg
out
js
pop
mov
fidivrl
cld
nop
dec
jne
icebp
cld
int3
pusha
pushf
cmpsb
adc
mov
ret
nop
xor
imul
push
addl
out
mov
jb
or
cmpsb
outsb
pop
pusha
cmp
mov
cwtl
pop
fsubs
fs
jne
push
fsubrl
mov
sahf
jbe
ds
stc
xchg
push
cwtl
add
mov
scas
and
sub
pop
cmp
std
push
loop
mov
pop
test
shl
lcall
fcomp
mov
ficoms
mov
dec
mov
std
shrb
mov
sbb
call
push
xor
push
mov
shr
test
push
xor
insb
mov
out
mov
and
stos
ret
inc
or
pop
xchg
sarb
out
repnz
lret
jb
pop
xor
adc
daa
sbb
add
jl
sahf
cwtl
xlat
dec
sti
mov
pop
int
inc
aam
xor
xor
insb
push
test
in
pop
sarl
mov
xchg
test
mov
sbb
jg
add
ss
outsb
mov
mov
pop
test
push
jo
and
bound
clc
lods
fmuls
mov
or
lods
push
xchg
sub
or
movsb
mov
xor
rolb
nop
mov
push
fidivs
mov
scas
cmp
mov
cmp
lcall
dec
mov
dec
xor
hlt
nop
shll
mov
js
daa
test
fdivrl
fsubs
in
pop
push
lcall
lods
mov
cmpsb
xor
mov
sub
fcomps
imul
add
fs
andl
shrb
xchg
inc
adc
fstpl
or
add
int3
xor
mov
pushf
push
dec
xchg
cli
pop
sti
fistps
loop
insb
dec
jg
sbb
lea
jbe
pop
dec
jp
lcall
push
cwtl
lcall
arpl
cwtl
in
sub
data16
shlb
jl
into
mov
xchg
addr16
pop
pusha
cld
cmc
les
inc
hlt
push
dec
cmp
mov
mov
push
loop
cld
add
lret
mov
push
out
fs
xchg
push
pushf
and
dec
push
pop
stos
dec
mov
xchg
mov
aaa
call
and
and
cmp
cwtl
outsb
mov
jmp
inc
aam
jl
jp
cltd
fiaddl
dec
jp
fcmovb
mov
cmp
je
xchg
cmp
rcrb
mov
shlb
xor
fcmovu
sub
cmpsb
js
jp
mov
sub
jbe
int3
cmp
jmp
int3
pop
ss
dec
mov
pop
xchg
add
test
pushf
bound
cli
aam
insl
outsb
lret
fs
sarl
fcoms
xchg
test
sub
jl
mov
mov
bound
xor
xchg
imul
nop
sahf
xor
lods
push
mov
lcall
dec
mov
cs
fisubl
xor
pop
into
jo
inc
out
pop
ja
jl
dec
lret
jae
pop
int3
push
sbbl
pop
sbb
lock
adc
xlat
leave
notl
outsb
push
fcomps
sbb
cmp
enter
jp
sti
pusha
movsb
lcall
jl
xchg
lret
cmpsb
rcl
mov
mov
out
jo
pop
adc
cmp
pop
and
xlat
or
fisttpl
movsb
stos
nop
pminub
daa
or
adc
movsb
inc
mov
out
shlb
cmpsl
sbb
inc
movsb
test
test
lret
jns
pop
jo
movsb
aam
mov
mov
push
js
pop
mov
fisubl
insb
mov
pop
pusha
sbb
or
cmp
data16
scas
fcmovnu
outsb
aam
stos
ja,pt
mov
mov
jae
add
cmp
data16
or
lret
dec
loop
insb
mov
pushf
int3
sbb
fisttpl
fldt
cmp
pop
push
dec
dec
mov
pop
cmp
jbe
pop
ss
pop
xchg
dec
test
das
ret
jge
xor
sbb
repnz
cwtl
je
or
stos
cmp
xchg
dec
push
cwtl
movsb
jp
mov
or
mov
rcrb
adc
loop
js
xor
mov
lret
push
push
pop
aad
movsl
dec
sahf
cmp
lods
mov
jb
xchg
mov
mov
frstor
xchg
jns
lods
mov
sub
aad
push
mov
xor
pop
xor
mov
fdivrs
sbb
mov
dec
dec
lcall
jns
dec
in
data16
push
mov
aam
lods
out
lock
daa
jecxz
lock
aaa
mov
push
fwait
push
cmp
int3
mov
lods
shlb
aas
mov
jbe
mov
dec
test
out
pop
cmpsb
sti
xor
pushf
stos
fxch
orb
pop
movsb
mov
dec
rolb
aas
mov
fmull
fucomi
enter
test
je
mov
mov
jne,pn
stos
xor
mov
lea
xchg
dec
dec
mov
jbe
ja
jnp
pop
dec
and
iret
lahf
inc
imul
aaa
je
mov
jmp
fsubrl
js
dec
sbb
dec
mov
xchg
mov
add
dec
mov
xchg
push
dec
push
xchg
inc
sbb
mov
and
outsb
adc
mov
inc
mov
and
xchg
mov
jb
adc
popf
mov
add
adc
call
dec
add
fmulp
push
aaa
ja
dec
inc
rorl
lods
jo
adc
into
daa
jp
dec
and
int3
insb
lods
push
pop
lret
push
pop
scas
sbb
mov
lcall
push
test
ljmp
mov
xchg
sbb
push
ret
jle
push
sahf
push
jl
push
push
shrl
arpl
mov
cmp
mov
stos
dec
mov
jmp
xchg
cmpsb
sbb
sbb
dec
pop
and
dec
mov
cltd
imul
cmp
movsb
insl
popa
lods
sbb
inc
loop
icebp
out
cmp
pop
mov
data16
jg
add
mov
mov
inc
js
je
in
push
mov
adc
xchg
pop
cmp
addr16
fists
pop
jne
icebp
jo
test
stos
insb
out
and
push
mov
jae
dec
addr16
imul
add
aam
mov
mov
pop
mov
int3
mov
dec
push
pop
mov
es
sti
sub
adc
lret
inc
adc
xor
xchg
xor
jp
mov
jo
sub
inc
dec
jo
and
jge
or
int
js
enter
rcrl
jmp
shlb
sbb
dec
fdivrs
xor
ss
mov
cs
fcompl
shrl
lods
push
pop
mov
push
fsubl
lcall
aam
mov
and
pop
rorl
dec
pop
cwtl
xchg
sahf
fdivr
dec
dec
cs
cmp
lcall
rcrl
shll
adc
push
or
mov
cwtl
cld
test
std
and
push
inc
cld
bound
stos
mov
mov
es
int3
incb
or
aas
cmpsb
push
das
fwait
xchg
cmpsb
xor
mov
mov
aas
ss
pop
pushfw
movsl
push
mov
mov
cwtl
mov
inc
pushf
adc
mov
cmp
das
jb
fcompl
xchg
data16
pop
imul
push
xor
imul
push
ficoms
jp
xor
into
fsubrs
sbb
aaa
add
xchg
push
xchg
add
fnsave
and
push
outsb
shl
mov
xchg
mov
adc
lods
cmp
lret
and
pop
pop
pushf
shl
aam
xor
movsb
mov
pop
das
insb
mov
bound
mov
sahf
enter
push
adc
pop
pop
pop
int3
mov
js
cmp
je
pop
shl
scas
sahf
data16
lret
stc
push
outsb
pop
dec
stos
push
sahf
dec
mov
cmp
fimull
jo
mov
lock
call
dec
mov
pop
sahf
jne
ja
mov
jge
xlat
mov
pop
dec
das
js
dec
stos
bound
sbb
sbb
or
movsb
cmp
jo
mov
js
jp
pusha
cld
data16
mov
aas
pop
pop
xor
je
add
data16
outsl
int3
lret
sbb
in
sbb
addb
xlat
push
dec
xchg
lret
mov
mov
repnz
cwtl
clc
pop
mov
loop
jb
imul
dec
movsb
int3
call
jg
jb
lcall
out
jl
mov
add
jno
cmp
mov
jge
cli
add
jns
nop
pop
mov
mov
fcompl
hlt
push
int3
mov
insb
mov
or
imul
test
or
lods
mov
pop
pop
nop
pop
jo
push
add
sbb
movsb
das
js
das
cmp
mov
jbe
jns
call
call
cmp
lret
setl
fdivl
mov
jns
int3
mov
insb
pop
xchg
mov
inc
dec
in
icebp
mov
push
jb
xchg
lcall
in
pop
push
idivl
mov
mov
sbb
data16
mov
stos
lods
dec
cmp
mov
mov
in
mov
pop
push
adc
lods
rcr
mov
mov
bound
mov
lods
mov
popa
je
fisubrs
pop
faddl
pop
push
fcomps
xor
dec
or
mov
jb
movsl
xchg
mov
mov
sbb
pop
aam
lods
in
lahf
out
lret
push
mov
movsb
xchg
adc
adc
and
pop
mov
mov
pop
pop
mov
out
pushf
pusha
xchg
cmp
pop
dec
je
mov
insb
outsb
scas
pop
xor
js
fs
std
mov
mov
insb
mov
pmulhuw
daa
fidivrs
in
mov
nop
dec
push
jbe
cmpsb
dec
mov
pop
fst
xchg
cmp
dec
sarb
jo
test
fistpl
imul
sub
mov
bound
pusha
rorb
jnp
mov
dec
fdivrl
sbb
mov
xchg
pop
rorb
mov
fs
mov
jp
and
or
lea
and
xchg
lret
mov
xor
aaa
xchg
stos
mov
ficoml
adc
adc
ret
cwtl
js
mov
dec
mov
jnp
jp
shll
int
mov
jns
push
cmp
pop
cld
sub
dec
fs
pop
jbe
add
mov
add
pop
sub
loopne
mov
push
insb
pop
sbb
lcall
das
pop
outsb
sarb
dec
cmp
mov
lea
jne
mov
pop
dec
dec
mov
lret
inc
repnz
popf
jp
push
add
pop
push
test
sbb
movsb
push
inc
fwait
add
imul
jo
nop
mov
pop
testl
mov
cmp
fcoml
or
push
xchg
or
fmuls
pusha
loop
sub
leave
nop
sahf
nop
sbb
add
mov
mov
and
jp
test
pop
cmpl
sub
out
adc
sub
mov
out
jg
inc
mov
inc
pop
lret
push
pop
pop
faddl
dec
dec
inc
data16
inc
mov
jb
mov
in
fcoms
out
mov
nop
mov
pop
push
adc
and
jp
int3
test
in
jge
js
bnd
insb
lods
jl
mov
or
imul
jne
movsb
shlb
xchg
inc
cmp
pop
insb
inc
mov
jbe
movsb
jnp
rolb
fistpl
mov
in
fidivrl
mov
js
pusha
xchg
inc
push
mov
or
mov
scas
cmp
into
push
lods
lock
test
or
push
cwtl
mov
mov
push
pop
mov
ficompl
dec
pusha
mov
test
and
mov
lret
test
jecxz
sbb
movsb
dec
cmp
ficoms
fwait
sbb
orl
mov
sbb
gs
mov
outsb
push
es
pop
fwait
or
outsl
mov
push
cmp
fdivl
ret
or
insb
inc
mov
xchg
jnp
outsb
mov
jmp
dec
push
xchg
cmp
jbe
mov
loop
lods
lds
pushf
into
pop
fsubrl
dec
mov
daa
mov
xchg
sub
ja
or
imul
push
sbb
push
rcr
and
dec
add
cwtl
push
xchg
fdivl
mov
enter
mov
mov
stos
jns
test
es
mov
jl
mov
out
mov
add
rep
jle
lods
and
push
sub
jnp
movsl
add
cmp
into
jle
mov
mov
fdivrp
xor
mov
cmpsl
mov
pop
and
ret
je
stos
pop
mov
lods
lcall
xchg
cmpsb
jbe
jmp
fimuls
das
lret
mov
mov
mov
mov
out
mov
mov
cmp
fdivrl
cmp
lock
dec
sahf
jbe
je
pushf
mov
xchg
dec
cs
lret
mov
pusha
sarb
lea
enter
cmp
push
pop
ja
jmp
ds
xor
int3
push
loopne
mov
mov
fs
in
test
push
ss
outsb
aam
cmpsl
pop
jne
dec
nop
push
pop
mov
sbb
fmul
sahf
jmp
inc
rorl
aas
lods
mov
rcll
mov
rolb
dec
pop
cmp
stos
pop
add
jno
pop
sti
mov
pop
cli
pop
mov
cltd
fdivrl
dec
in
into
dec
lahf
lods
jp
mov
add
and
xchg
xor
pushf
ret
shrl
nop
mov
xchg
rorb
fidivs
push
cwtl
lret
push
hlt
pusha
push
adc
les
jbe
lock
out
repnz
fdivl
scas
mov
fistpll
pushf
das
dec
cwtl
mov
sbb
push
pop
ljmp
lea
int3
addr16
fdivrl
mov
xor
pushf
and
mov
into
bound
pop
xchg
pop
pop
xor
test
popf
xchg
push
aam
lods
aam
je
and
xchg
and
pop
insl
ficoml
fists
xor
fcompl
andb
mov
fidivs
cmc
add
jg
mov
xchg
popa
sti
jp
cmpsb
data16
sbb
adc
lcall
adc
cwtl
xchg
push
or
int3
push
outsl
mov
jbe
lret
shrl
sub
pop
addr16
jmp
pushf
jp
or
rcr
mov
sti
fsts
dec
int3
ja
jbe
imul
imull
pop
cmpsb
pop
pop
dec
push
in
push
jnp
cmpsl
mov
cs
dec
xchg
and
pusha
cli
out
cwtl
mov
nop
pop
mov
xchg
lret
int3
push
lret
fisubl
sbb
lods
pop
pop
lret
das
pop
mov
cmpsb
jmp
sti
daa
mov
fsubl
ret
sahf
mov
mov
mov
rorl
push
mov
xchg
std
pop
inc
dec
pop
push
sbb
adc
rcr
fdivrs
scas
mov
pop
cld
mull
push
jo
jbe
push
cmp
push
lcall
add
fwait
in
adc
ds
xchg
fmul
add
jle
leave
and
fcompl
mov
mov
jle
stc
fs
cmp
xchg
pop
outsb
stc
pop
mov
in
es
pop
xor
iret
sbb
adc
mov
pop
mov
xor
testl
test
fwait
push
adc
xchg
shll
cmp
dec
mov
xor
lret
int
push
out
ja
fisubl
jo
cmpsb
in
movsb
push
repnz
loopne
sub
sub
fmul
or
ds
add
push
jp
mov
int3
add
daa
pop
pushf
mov
movsl
inc
dec
in
mov
lods
mov
aaa
cmpsb
pop
loop
jno
je
sbb
lea
xor
mov
bound
fmuls
push
mov
lods
mov
out
jbe
mov
bound
into
jno
xchg
adc
daa
out
je
stos
in
jmp
pusha
stos
iret
inc
jo
xor
into
out
push
iret
fcoml
mov
js
xor
sub
dec
insl
iret
sti
jne
dec
out
xchg
lcall
stos
lret
aam
idiv
mov
push
fwait
sub
ljmp
int3
ret
push
cmpsb
xor
jl
mov
cmpsl
fs
jecxz
dec
adc
test
fcomp
dec
adc
sub
sub
lahf
lods
nop
and
xlat
mov
xchg
add
sub
rcr
dec
imul
mov
xchg
xchg
fadd
xchg
testl
ljmp
daa
mov
cltd
mov
mov
shr
add
jmp
out
inc
rolb
jmp
out
inc
push
out
push
xchg
add
out
out
imul
out
xchg
mov
lods
pop
jo
push
dec
mov
ljmp
fidivrl
mov
mov
add
xor
xchg
adc
add
mov
out
adc
push
loopne
pop
mov
mov
mov
scas
test
lds
je
xlat
lret
inc
dec
sbb
in
test
mov
movsl
sub
sbb
push
ret
jno
pop
mov
mov
push
data16
or
cmpsb
movsb
scas
lcall
sbb
movsb
xchg
nop
inc
jp
dec
aas
inc
movsl
das
out
insb
aad
sbb
shlb
cwtl
into
fdivl
pushf
test
cmp
mov
push
fxch
or
js
mov
rcr
lcall
rclb
pop
std
daa
cmp
push
repnz
popf
dec
movsb
sti
dec
out
js
sbb
faddl
pushf
repz
ficompl
xchg
data16
bound
push
jle
nop
and
push
pop
dec
je
lcall
das
pusha
cwtl
xchg
nop
dec
push
insb
xor
jl
ficompl
rorb
faddl
mov
push
lcall
cmpsb
outsb
add
pop
mov
xchg
loopne
mov
sub
push
shlb
les
sti
icebp
mov
int3
pop
sahf
mov
dec
js
adc
sbb
bound
je
cwtl
or
sbb
movsb
pmuludq
aaa
mov
add
adc
pop
lds
mov
and
je
xorl
xor
scas
push
pop
pop
xchg
sub
into
xor
gs
fwait
jmp
data16
cmpsb
mov
mov
and
test
insb
xorb
cmp
xchg
cwtl
pop
test
cmp
aam
pop
pushf
mov
jp
fwait
mov
lret
mov
add
pop
mov
sbb
dec
lods
dec
pop
pop
lock
js
hlt
pop
in
pop
or
test
mov
stos
mov
and
cwtl
mov
lcall
shlb
mov
insb
scas
pop
nop
cmpsb
push
jmp
shlb
shl
test
sahf
cld
jb
push
xchg
int3
in
pushf
fstl
mov
pop
gs
cmp
jp
xchg
scas
jle
mov
cld
insb
hlt
test
jl
dec
xchg
inc
pop
sbb
sahf
js
cmp
bound
lcall
int3
cmp
pop
jp
cmp
aas
dec
movsb
lods
pop
bnd
cmp
sarb
mov
ficoml
je
push
xchg
imul
out
cmp
adc
cwtl
push
lock
mov
repnz
aas
pop
dec
into
rsm
shrb
mov
nop
jp
dec
lds
pushf
inc
mov
cmpsb
pusha
fcmovnbe
xchg
daa
int3
aam
hlt
and
pusha
faddl
xchg
fimull
mov
mov
int3
inc
jp
mov
push
inc
sub
cmp
enter
je
or
jno
push
xchg
cmp
data16
pop
lcall
mov
mov
addr16
lods
or
aaa
mov
insb
push
and
mov
jo
fcompl
inc
pop
frstor
lcall
jp
fldcw
dec
add
mov
push
jnp
test
outsl
pop
dec
movsb
mov
daa
lret
inc
pop
into
ja
fisubrs
bound
sub
xchg
push
add
sbbb
dec
dec
push
cmp
jb
adc
push
fs
cmp
mov
jbe
arpl
dec
test
mov
jo
mov
sbb
or
mov
xchg
sbb
stos
mov
mov
dec
pop
cli
sahf
cld
pop
pop
sub
push
insb
in
adc
repz
dec
int3
push
pop
pop
leave
sahf
pop
add
mov
repnz
inc
xchg
in
movsb
push
popf
rcrl
pop
sbb
das
push
lods
mov
jp
dec
scas
lea
push
xchg
dec
bound
inc
dec
sub
push
pop
nop
push
mov
fdivs
pushf
push
mov
pushf
inc
dec
sti
int
jb
inc
sbb
pop
scas
data16
mov
pop
xchg
stos
outsb
push
pop
js
sub
jnp
adc
fcomp
jp
stos
mov
add
out
cmp
ror
jp
cmpsb
jp
leave
push
adc
pushf
sbbb
and
lea
mov
enter
rclb
pop
jno
jbe
test
or
sbb
lret
push
cmp
jns
pop
int
jge
mov
jbe
inc
push
mov
cmp
lcall
lock
xchg
xabort
hlt
jb
inc
lret
mov
jmp
aam
adc
mov
xchg
mov
mov
lahf
dec
adc
fcomps
jo
das
or
rcr
cs
fisttpll
mov
fcmovbe
add
mov
daa
hlt
mov
mov
dec
sbbl
cmp
in
mov
mov
jb
dec
adc
pop
aaa
push
cmp
fs
adc
bound
push
xchg
aas
shrb
imul
mov
mov
add
mov
xchg
cs
data16
lret
sub
lds
cmpsb
int3
dec
cld
mov
xchg
icebp
in
cwtl
fisttps
fcmovnbe
dec
dec
push
mov
and
pop
mov
lods
cmpsb
in
sbb
xchg
popf
data16
in
adc
mov
fidivrs
scas
ds
dec
xor
inc
aaa
subb
sahf
aas
dec
push
in
push
adc
sbb
and
xchg
arpl
dec
push
shrl
mov
popf
shlb
insb
mov
sti
pushf
dec
pop
push
fs
jle
out
pop
bound
xchg
cmp
push
dec
stos
push
mov
mov
repz
pop
adc
int3
test
lods
rcr
stos
sbb
nop
pushf
mov
or
data16
mov
or
or
loop
insb
mov
pop
mov
sub
data16
push
hlt
mov
cmp
jae
sarb
stos
dec
ja
lea
stos
sbbl
mov
pop
cmp
sahf
je
dec
sub
lcall
test
js
ficoml
mov
push
dec
aam
fcoml
push
mov
sbb
and
shlb
je
jb
lret
mov
sbb
add
in
sub
cmp
ficompl
mov
data16
je
mov
pusha
jp
imul
sbbb
nop
push
xor
fidivrs
fstl
ret
cmp
mov
lods
shl
pop
dec
movsl
xor
fimuls
dec
mov
int3
jg
adc
adc
pusha
jnp
cwtl
xor
push
mov
sub
push
inc
adc
into
xlat
push
pop
test
aam
mov
mov
data16
jns
pusha
mov
pop
xor
sbb
sti
aas
aam
mov
or
out
mov
ja
mov
cwtl
adc
je,pt
cmp
lods
pop
mov
lcall
add
xchg
inc
test
mov
cmp
rcr
mov
sarl
test
fisubrl
movsb
outsb
push
mov
pushf
int3
mov
mov
pusha
push
add
ret
dec
cmpsb
jge
jp
jp
mov
mov
pop
cld
adc
dec
ljmp
mov
or
push
pop
fdivrl
dec
cmp
js
cwtl
mov
sub
movsb
fstl
cmp
outsb
daa
cld
fs
outsb
pop
push
data16
jns
cs
xchg
setbe
adc
add
jb
pusha
fmull
xchg
cmp
rolb
cwtl
lock
rolb
sbb
ja
imul
test
pop
sbb
mov
or
mov
leave
push
pop
insb
lcall
nop
sbb
mov
mov
jo
fidivl
mov
pushf
jno
mov
mov
mov
adc
js
call
push
xlat
dec
xor
sarl
fs
popf
enter
mov
xchg
xchg
je
movsb
lret
xchg
adc
fisubl
jo
sub
fs
mov
aam
pop
iret
test
dec
pop
mov
scas
mov
cmp
push
add
lods
shlb
inc
xchg
stc
mov
add
push
fcompl
sahf
aam
mov
pop
xchg
push
push
xor
mov
inc
aas
cmp
sahf
mov
xchg
enter
out
out
ficomps
int3
mov
mov
jns
xchg
mov
data16
cmpsb
push
push
mov
jg
cli
lods
mov
subl
push
and
mov
pusha
js
scas
cltd
lret
in
jb
jne
dec
mov
fmuls
mov
test
and
cmp
lcall
fwait
sbb
fidivrl
push
inc
insl
or
mov
jb
mov
aas
mov
mov
out
sub
mov
adc
lret
cwtl
outsb
sbb
arpl
pop
mov
ja
sbb
daa
outsb
lcall
jmp
push
lods
push
pop
pop
mov
cmp
shlb
mov
pop
js
mov
fistl
fisubl
adc
pop
adc
daa
fcompl
int
pusha
sub
xor
inc
xor
mov
lods
fcoml
pop
jl
orb
stos
dec
sub
lcall
dec
mov
or
cwtl
aam
nop
mov
mov
hlt
shrb
aam
shlb
cmp
cmp
pop
data16
mov
mov
mov
call
testl
mov
pushf
hlt
lcall
pop
sub
jnp
jp
mov
js
out
push
mov
mov
push
ja
fcompl
xor
sarb
stos
mov
cld
mov
ja
and
xlat
pop
ret
data16
aam
push
push
mov
test
push
mov
add
lea
sbb
fld
scas
int3
mov
xlat
mov
jb
hlt
mov
stos
mov
stos
sarl
xchg
aam
jg
fs
jmp
jmp
mov
pushf
loope
in
sbb
stos
repz
shl
jmp
orb
pop
mov
mov
dec
mov
mov
pop
pusha
mov
call
daa
xor
pop
subb
xchg
nop
pop
mov
jecxz
mov
add
scas
cli
push
sbb
push
mov
mov
push
test
sti
pop
loop
fs
shlb
std
test
movsb
push
adc
sahf
das
dec
mov
and
popf
mov
push
icebp
inc
and
dec
adc
leave
and
pop
pushf
jbe
inc
dec
int
nop
mov
stos
test
scas
push
stc
and
xchg
pusha
fisttpl
mov
jns
dec
xlat
dec
repz
mull
scas
mov
aam
xor
push
mov
mov
lret
pusha
cmp
fs
das
xchg
jecxz
out
mov
cmpsb
pop
hlt
mov
mov
insb
fcomps
shlb
jp
test
popf
inc
lods
add
js
pop
pop
mov
mov
ficompl
push
push
cmp
push
jl
push
xchg
movsb
jb
xor
mov
fnsave
pop
mov
js
dec
sub
xchg
inc
mov
dec
mov
mov
lods
jecxz
int3
pop
mov
ja
js
stos
clc
stos
cli
pop
jae
pushf
loopne
lahf
and
mov
xchg
dec
fistpl
inc
push
cmpsb
sar
out
stos
fistpl
aaa
xchg
aam
pop
dec
pop
and
mov
test
and
mov
sub
fcomi
sub
pusha
cli
and
push
cmp
int
push
add
xchg
adc
cmp
mov
sub
stos
mov
lds
fstl
pop
mov
sub
js
mov
or
fistl
adc
add
lret
jbe
sbb
mov
fs
pop
in
push
xchg
sbb
push
cmpsb
sub
dec
ret
lods
js
xchg
jo
cmp
pushf
fdivs
jg
mov
ret
push
adc
imul
aaa
ja
mov
dec
mov
mov
cmp
outsb
nop
push
add
js
movl
mov
cmpsb
stc
xor
into
push
mov
iret
in
dec
add
sbb
dec
mov
pop
jae
sub
and
mov
lock
pop
out
orps
cmp
jne
jb
movsl
mov
jbe
add
fstl
jle
sar
push
leavew
cmpsl
icebp
dec
push
popf
daa
push
mov
jno
cld
lea
push
aam
inc
inc
xchg
push
pop
dec
fsubrl
insb
push
dec
mov
arpl
sahf
aas
jb
aaa
lea
dec
cmp
cwtl
push
dec
cmp
xchg
adc
fcmovnb
adc
or
dec
bound
stos
pop
mov
scas
fcompl
cmpsb
mov
mov
add
je
ret
fsubs
lds
push
fs
lods
mov
jnp
dec
cmpsb
adc
clc
ret
pop
push
data16
jp
jecxz
pusha
dec
cmp
xchg
fwait
js
inc
adc
xchg
pop
add
cmp
bound
outsb
lcall
jp
bound
insb
test
movsb
mov
mov
hlt
xchg
cmp
data16
fs
rclb
jbe
push
dec
loopne
dec
mov
out
je
dec
xorl
int3
cmpsl
out
sbb
cmpl
dec
fdivl
xchg
filds
in
mov
daa
lcall
push
pop
add
xchg
cli
cmp
and
daa
dec
fdivl
mov
outsb
sub
fmulp
stc
ret
push
fsubs
fimull
in
in
and
jo
push
jae
add
outsb
pusha
dec
or
push
cmp
xchg
mov
jl
pusha
pop
enter
dec
pop
push
pop
add
outsb
rorb
add
in
mov
fdivrs
pop
movsb
stc
sahf
rclb
das
cmpsl
dec
out
mov
scas
fucomi
sub
mov
lods
push
mov
mov
adc
pop
adc
ds
jae
add
push
into
lods
daa
ror
cmp
cmpsb
sub
in
dec
imul
pop
mov
mov
fisubs
in
fcompl
rep
shrb
adc
jo
cmp
bound
out
xchg
rorl
mov
mov
sub
ljmp
in
test
cs
mov
cmp
insb
mov
mov
mov
or
add
bound
mov
push
mov
lcall
push
mov
scas
js
dec
mov
cwtl
mov
mov
mov
fs
hlt
shrb
sahf
fildl
dec
fcomps
pop
inc
cmc
loop
mov
jbe
data16
mov
add
js
pop
pusha
adcb
shl
cs
ficoms
test
sahf
pusha
pop
pop
pop
or
shll
jbe
mov
fidivl
and
sub
aam
or
jg
mov
sbb
lret
mov
mov
pop
shrb
fsub
push
cld
das
sahf
lret
fldenv
shrb
ret
popf
sbb
repz
or
mov
inc
cwtl
sbb
push
je
test
cmc
sbb
sub
ret
add
mov
push
paddusb
ds
daa
jbe
pop
fcmovb
xchg
stos
mov
aam
mov
fdivrp
lods
cmp
dec
mov
aam
mov
gs
jno,pt
cmp
dec
into
jbe
cli
loope
lods
push
mov
aam
mov
test
push
add
or
jp
pop
or
dec
mov
add
pop
xchg
and
push
cltd
fs
pop
mov
pusha
cmpsb
ficoml
dec
pop
imull
mov
lods
insb
hlt
call
mov
cmp
sti
jge
lret
outsb
loopne
mov
sub
andl
add
jl
insb
mov
xlat
lods
pop
sbb
aas
addb
inc
push
mov
and
sbb
sub
aaa
outsb
jb
pushf
bound
inc
in
into
pop
adc
push
js
in
dec
add
pushf
aam
in
and
mov
push
xchg
sub
nop
cmp
outsb
xchg
test
lret
pop
xchg
push
jp
int3
cs
xor
lret
addr16
xchg
mov
stos
mov
mov
pop
in
add
imul
in
push
insb
add
lcall
add
xchg
test
lret
rorb
mov
movsb
push
scas
sahf
jo
pop
sub
mov
xchg
pop
and
sbb
cmpl
lds
push
and
mov
ficompl
push
inc
out
xor
jo
push
arpl
jl
movsb
in
dec
or
jne
pushf
hlt
out
nop
and
movsb
pop
test
lret
insb
pushf
movl
or
cli
xchg
jp
mov
dec
movsb
push
add
add
push
lcall
shll
movsb
cs
orb
les
push
mov
subb
add
add
add
add
xchg
cli
andb
subb
xchg
lods
adcb
dec
out
orb
adc
add
out
subb
cwtl
xor
aam
cmpsl
cwtl
imul
mov
mov
push
adc
add
fistps
orb
jno
inc
addb
add
call
pop
call
add
mov
rolb
call
inc
ret
adc
pop
mov
int3
addr16
lea
dec
xor
lcall
das
mov
ljmp
out
mov
andl
xchg
sbb
pusha
cmpl
jl
lret
jge
pop
fidivl
jae
jnp
cmp
cwtl
dec
mov
add
nop
stos
mov
js
cmp
lret
loopne
mov
std
jno
insl
pop
jg
stos
cmpsb
dec
pop
inc
xchg
cwtl
leave
push
addb
scas
cmpsb
mov
jbe
nop
fidivl
pop
sahf
mov
dec
out
rcrb
cwtl
adc
cmp
push
lret
mov
and
fisubrs
sarb
inc
lods
loop
mov
fwait
rclb
push
fdivs
sahf
mov
std
mov
lret
stos
xchg
lods
outsb
mov
add
lret
dec
cmp
lcall
pop
test
in
call
push
pop
dec
in
pop
cmp
fmull
mov
fs
pop
fcmove
jno
mov
jmp
das
sarb
push
cld
fdivrl
xor
inc
repnz
test
pop
js
fmul
push
mov
fidivrs
cmpsb
je
dec
cld
fisubs
dec
pop
xor
test
packssdw
xor
insl
xchg
xchg
int3
lods
sub
push
dec
je
icebp
push
xor
orl
scas
std
lods
scas
scas
data16
repz
cmp
test
mov
fiaddl
ret
je
xchg
mov
push
cmp
mov
scas
stc
icebp
fiaddl
pushf
das
lcall
mov
test
mov
outsb
arpl
push
ss
data16
mov
mov
rcr
dec
jbe
nop
mov
out
xchg
inc
js
ja
mov
daa
scas
mov
sub
dec
in
cld
outsb
mov
xchg
sahf
dec
add
shrb
cmp
jp
insb
jbe
aad
jb
and
bound
mov
push
stos
push
push
add
mov
dec
fdiv
pop
and
sti
and
cmpsb
mov
pop
clc
pop
int3
jp
xchg
imul
mov
into
cmpsb
pop
pop
mov
mov
lods
lret
scas
loop
push
popf
daa
fcom
cmp
sar
adc
fcmove
dec
push
xchg
xchg
mov
mov
test
jecxz
cmp
push
push
mov
mov
test
add
rclb
dec
aam
lods
xchg
pop
mov
cmp
mov
cmpsb
insb
inc
insl
or
outsb
xor
mov
sub
movsb
bound
in
fimull
cmpsb
out
fs
lahf
mov
mov
mov
xchg
std
mov
jnp
push
insl
js
push
dec
and
jnp
xchg
enter
push
fs
adc
jbe
lods
fstp
fsubs
inc
or
cwtl
movsb
enter
mov
or
mov
jl
into
and
push
stos
movsb
ljmp
and
int3
dec
shlb
bound
jo
test
pop
das
shll
xchg
inc
sti
inc
mov
repnz
nop
pushf
and
cwtl
add
mov
aam
xor
cmp
js
cltd
mov
sbb
pop
nop
sbb
jp
xor
sti
pop
push
daa
pushf
data16
lea
into
mov
push
jl
mov
bound
push
mov
mov
adc
aad
jo
push
or
dec
stos
mov
or
lret
aad
add
or
pop
push
pop
pop
int3
mov
jns
mov
je
lcall
pop
fisttpl
loop
mov
mov
je
ds
out
dec
dec
lods
je
in
or
push
mov
pushf
fisubrs
cmp
fsubrl
sbb
lods
jo
lock
ss
mov
int3
fdivrs
dec
outsb
dec
js
aam
test
mov
mov
adc
test
cmc
mov
sbb
pop
push
or
mov
pop
xchg
lods
js
jp
shl
xchg
data16
fdivrl
jp
aam
push
adc
mov
mov
and
loopne
lods
mov
in
pop
and
outsb
je
dec
stos
add
xor
mov
sbb
movsb
adc
lret
daa
rcll
dec
pushf
cmp
mov
jnp
out
fwait
lahf
hlt
scas
push
aas
jle
cli
jl
jbe
inc
mov
fcoml
nop
push
sub
cmp
int3
js
jge
jno
jb
or
mov
ss
test
dec
je
mov
dec
in
pop
hlt
cmpsb
mov
enter
loop
xchg
imul
or
dec
jmp
jl
pop
mov
lret
in
sahf
pop
dec
fcoml
mov
jl
dec
repz
xor
mov
xchg
dec
cmp
fdivs
sbb
shlb
mov
ficoms
nop
mov
mov
lods
out
daa
aam
xor
arpl
ret
push
lcall
xchg
mov
fdivrs
add
fs
mov
test
nop
push
lret
lea
fidivrs
xchg
js
jbe
push
cmpsb
int3
outsl
bound
imul
aaa
adc
int
inc
stos
int3
mov
sbb
lret
into
or
fimull
cli
mov
outsb
dec
inc
mov
xor
out
out
jbe
mov
andl
into
int
xor
mov
lods
int
mov
push
pop
mov
les
jg
pop
pop
dec
dec
cli
xor
xchg
ds
test
cld
sub
inc
aam
cmpsb
call
jle
mov
mov
cwtl
insb
jl
mov
sbb
lods
fcomp
lcall
insb
push
lods
and
mov
enter
test
stos
fisubl
loopne
push
pushf
fisttpl
pop
rclb
data16
xchg
adc
in
dec
adc
mov
xchg
mov
push
pop
hlt
mov
xor
cmp
cwtl
ror
mov
lret
mov
cmp
dec
push
sahf
jo
sub
gs
jle,pn
out
add
aad
add
mov
and
lcall
pop
jbe
jg
imul
dec
cmp
jb
lret
xchg
lock
push
ret
daa
dec
fisubs
dec
sahf
xor
int3
lcall
push
mov
xor
mov
sub
mov
js
push
je
insb
push
sbb
push
dec
pop
mov
push
mov
pop
pop
cmp
mov
mov
cmpsl
push
into
sbb
push
insl
bound
mov
mov
sub
sub
inc
adc
stos
mov
dec
lods
rol
mov
jecxz
cmp
dec
xor
fistpl
pusha
in
daa
xchg
pop
fdivs
xor
jp
jbe
adc
push
push
je
fcompl
in
pop
push
push
shll
mov
out
loopne
jnp
xchg
shlb
pop
push
sub
pop
enter
fstpt
add
mov
outsl
or
aam
cmp
stos
lock
jno
push
ficompl
push
into
mov
sti
arpl
fisubl
pop
sbb
inc
fsubr
mov
daa
mov
mov
test
mov
lret
ret
mov
lods
lds
int3
jbe
mov
jns
lods
jl
insb
inc
jo
pop
punpckldq
jbe
mov
mov
mov
mov
dec
mov
aam
mov
movsb
je
loopne
sbb
decb
add
xor
lret
pop
fimuls
stc
stos
xchg
nop
insb
xchg
push
xchg
lea
mov
mov
cmp
xchg
mov
push
test
in
pop
mov
pop
xchg
pop
andl
dec
int
mov
test
shrb
stos
fistpll
mov
adc
and
cwtl
sub
movsb
mov
push
mov
int3
bound
pop
mov
into
push
pop
cmpsl
mov
push
pop
dec
pusha
movsb
fsubr
cmp
mov
bound
inc
js
ret
in
xchg
inc
fcompl
cmpsb
add
into
test
imul
pusha
push
cmp
cld
sahf
mov
pushf
mov
push
jae
xchg
ret
out
int3
pop
and
mov
daa
and
cmc
cmp
pop
push
dec
or
negl
imul
into
js
jo
dec
mov
xlat
data16
mov
outsb
jo
das
insb
jp
pusha
mov
popf
test
inc
mov
int3
jg
daa
movsb
shrb
dec
sub
xchg
sub
roll
das
js
xchg
cld
push
jo
pop
test
xlat
inc
inc
push
mov
cmpsb
inc
mov
enter
inc
and
cmp
mov
pop
cmp
nop
cwtl
aaa
push
data16
mov
fnstsw
pop
mov
pop
mov
stos
xlat
pusha
xchg
mov
xchg
hlt
mov
mov
pop
hlt
je
aad
test
cmpsb
jecxz
lods
jbe
push
push
je
xor
jp
jp
jns
into
fidivl
push
cwtl
scas
cmp
shlb
mov
ficomps
push
mov
dec
loopne
mov
dec
loopne
cmp
decl
add
aas
adc
movsb
dec
fs
mov
xor
jnp
push
jb
je
sbb
dec
push
cmpsb
fdivrl
push
adc
adc
std
mov
dec
or
lret
inc
and
xor
xor
ja
inc
movsb
pop
insb
daa
aam
cmpsb
cwtl
sub
daa
cmp
outsb
test
mov
xchg
fsubs
je
lret
dec
adc
das
aaa
rcrb
sub
inc
fldt
loop
iret
js
fidivrl
sbbb
mov
pushf
fidivrs
push
iret
add
aad
pop
push
mov
and
shll
xor
xlat
cwtl
mov
push
push
pop
jnp
lret
aam
sahf
pop
sahf
dec
mov
ficompl
xchg
outsl
daa
adc
aaa
add
pusha
jne
cmpsl
lret
mov
pop
fcompl
and
mov
push
je
cmp
dec
sbb
mov
mov
mov
and
xlat
pop
lcall
push
pop
inc
adc
mov
dec
jo
andl
adc
scas
ja
push
pop
sub
cmp
mov
insb
fimull
fidivs
in
pop
adc
js
scas
sub
pop
xchg
or
lcall
mov
jp
xchg
or
push
stos
test
cs
mov
jg
shr
xchg
sbb
xor
loopne
mov
ret
dec
mov
xor
bound
jl
int3
mov
dec
test
cmp
push
cmc
and
dec
das
shrb
xor
lcall
mov
cs
and
mov
or
push
xor
cwtl
fucomi
sbb
mov
lcall
push
pushf
cmp
lcall
repz
daa
pop
dec
cmp
pushf
push
pop
mov
mov
push
sti
out
sahf
mov
outsb
int3
dec
pop
adc
fimull
lods
jbe
mov
movsb
mov
inc
push
in
stos
or
dec
mov
movsb
aam
mov
dec
outsb
inc
mov
sarb
lret
pop
push
test
shrb
push
cmpb
xchg
xor
pop
aas
fisttpl
fs
mov
stos
fimuls
cmp
push
lcall
mov
loopne
inc
stos
stos
pushf
cmc
ficompl
push
dec
inc
and
pop
pusha
sub
cmp
push
mov
shlb
inc
fadd
mov
inc
inc
js
jbe
dec
dec
test
aam
pop
xor
mov
cmp
push
mov
mov
jge
das
lret
jge
jmp
mov
xchg
lret
inc
shlb
sbb
or
mov
pop
mov
std
jbe
pop
mov
inc
in
cltd
ds
insb
pushf
lods
mov
adc
or
stos
jbe
mov
lock
in
pop
sub
fidivrl
cmp
jnp
dec
mov
mov
pop
add
adc
das
in
outsb
mov
add
test
cmc
push
sub
and
push
lret
mov
int3
out
dec
xor
cmp
jne
cmpsl
mov
push
les
pushl
xor
mov
fbstp
pop
push
xlat
adc
jl
insb
shlb
mov
das
mov
push
dec
add
jo
data16
jg
mov
cwtl
test
sbb
adc
test
fmuls
mov
arpl
cmpsb
dec
lods
rorl
aaa
and
fadd
int3
jbe
or
xchg
rcrb
and
xchg
cwtl
cmp
movsb
pushf
fdivrs
mov
add
mov
mov
jno
imull
es
push
shld
mov
mov
mov
js
cmpsb
lods
mov
or
orl
inc
mov
inc
cs
lods
dec
dec
stos
xchg
movsb
sbb
aad
mov
mov
dec
pop
lcall
stos
insb
dec
push
test
jns
cli
lods
in
inc
push
fsubs
inc
pop
sub
jp
mov
out
jno
mov
xlat
push
jp
call
mov
stos
jp
ret
mov
xchg
lock
das
sbb
je
mov
mov
add
cmpl
push
mov
subb
lods
dec
push
dec
and
mov
push
lret
pop
out
xchg
js
and
movsb
jp
faddp
daa
sahf
mov
push
sub
lea
mov
dec
adc
sub
lcall
movsb
dec
test
jbe
pop
and
lret
out
shl
fiadds
cwtl
push
add
jns
pushw
jl
pop
push
je
push
jg
out
or
sahf
mov
sbb
lock
adc
add
test
jp
nop
cmp
outsb
bound
and
scas
fdivrs
int3
mov
cmpsb
ficompl
lret
dec
jb
jl
rcr
or
in
sahf
xchg
add
jp
pop
inc
sti
cmc
lods
sub
pop
sti
inc
jae
pusha
adcl
das
ror
jae
in
in
and
dec
cmpsb
into
insb
jbe
scas
xchg
mov
mov
jb
push
cmc
mov
aam
sub
mov
ds
bound
mov
repz
scas
jns
nop
ds
stc
or
jae
mov
je
push
test
data16
fisubrl
dec
scas
mov
outsb
jb
jp
jmp
adc
pusha
data16
fstpt
adc
pop
mov
sahf
ds
pushf
mov
mov
jg
lock
mov
pop
push
xor
add
mov
sub
int3
xor
mov
rorb
outsb
jl
out
pop
fildl
xchg
js
shlb
shrl
cmp
je
jo
mov
js
divl
xor
or
mov
jns
sbb
nop
gs
dec
jp
inc
fwait
mov
mov
out
je
pop
adc
mov
add
sti
jo
int3
cmp
mov
push
mov
push
mov
mov
arpl
test
mov
lods
push
ds
pushf
sbb
xchg
pop
mov
lea
push
jno
mov
fidivl
sub
push
inc
mov
bound
test
and
lcall
pop
mov
cmp
xchg
mov
xor
aas
adc
data16
fisttpl
jp
aaa
mov
adc
sbb
je
aam
dec
or
pop
xchg
fsubl
sbb
movzwl
xchg
push
xor
bound
std
arpl
add
push
pop
pop
push
jne
int3
pop
dec
push
push
push
cld
enter
dec
in
loopne
outsl
mov
pop
scas
mov
bound
xchg
stos
inc
dec
stc
inc
xchg
int3
fmull
test
sub
outsb
dec
scas
sub
cmp
sti
aaa
mov
dec
xor
imul
shrb
loopne
mov
adc
sbb
push
xchg
sbbb
adc
sub
jo
aaa
dec
fcom
sub
push
push
lods
sahf
pop
loop
mov
jae
int3
cmp
mov
out
inc
sarb
es
jns
dec
fsub
pushf
shll
adc
mov
js
mov
xchg
mov
les
mov
faddl
pop
add
mov
cmc
int3
das
xchg
cmpsb
ficomps
lcall
lea
movmskps
loopne
mov
sub
das
adcb
jmp
xchg
cmp
dec
test
fistl
fcomps
pop
cmpsb
pop
cmp
rcr
or
dec
cmpsb
adc
in
cld
xor
jno
sahf
js
jecxz
jecxz
push
insl
dec
adc
test
fisttps
mov
cmp
fimull
out
sbb
push
ret
sbb
in
jne
push
mov
and
xor
xor
xor
mov
mov
xor
xor
inc
cmpsb
add
mov
jo
xor
mov
shlb
push
bound
add
jbe
mov
test
enter
sarb
nop
mov
mov
inc
ficompl
aaa
mov
dec
sbbb
pushf
push
mov
mov
mov
mov
xor
mov
mov
or
sahf
dec
repz
test
mov
lods
pusha
add
rclb
pop
mov
sti
and
insb
fdivr
cmp
ljmp
and
cwtl
pop
pop
push
nop
stos
fdivr
mov
xchg
sti
shrb
push
mov
pop
dec
fdivrs
and
mov
lret
cmpsb
push
imul
add
cmp
push
push
int3
jbe
adc
mov
dec
jb
jge
mov
push
mov
jmp
dec
push
insb
adc
iret
xchg
push
leave
mov
fdivrl
cmpsb
pushf
std
movsb
jbe
jb
cmp
into
fdivs
cwtl
sub
mov
pop
aam
loopne
rcrb
pop
mov
lock
pop
cmp
jo
mov
mov
fidivl
jp
fidivs
orb
jno
ds
pop
pop
mov
push
inc
fildll
push
pushf
cmovp
mov
xchg
and
mov
mov
fidivrs
cmp
bound
js
pop
mov
jo
jb
lods
push
jl
stos
fs
jae
dec
mov
pop
stc
movsb
lret
nop
add
dec
arpl
in
icebp
fstpt
cmpsb
lods
mov
mov
lds
aam
lcall
mov
stc
nop
pop
mov
data16
and
lods
mov
or
insb
pop
divl
push
cmpsb
mov
lea
bound
lret
dec
int
pop
mov
in
lods
frstor
lods
xchg
dec
pop
test
pop
sarb
les
dec
mov
cmpsb
movsb
cmp
xchg
int
push
sub
mov
cli
cmp
imul
xchg
mov
nop
dec
into
fs
pushf
or
inc
xchg
push
lcall
jbe
add
bound
sbb
cmp
pop
jb
mov
and
outsl
outsb
fiaddl
xor
outsl
daa
in
pop
cli
jmp
out
loopne
sarl
xor
cmp
out
mov
dec
pusha
dec
xchg
push
pop
jecxz
push
mov
jmp
xlat
fcoms
mov
mov
lret
adc
cmpl
jns
push
int
pushf
dec
ret
jmp
mov
cmp
dec
pop
enter
movsb
int3
adc
lret
stc
dec
pusha
stc
dec
fdivrl
jae
or
fisttpl
movsb
mov
pusha
scas
push
pop
cmp
and
scas
lret
int3
or
aas
jae
lods
fs
cmpsb
inc
mov
insb
lcall
add
clc
mov
push
cmp
push
jp
jo
and
loop
jbe
mov
and
fsubrs
push
xchg
out
dec
outsl
mov
mov
mov
rcr
fists
xchg
push
sahf
cmpsl
xor
adc
adc
pop
sub
insl
add
xor
fidivrs
cmp
pop
out
jp
cli
xor
push
mov
xorb
xor
mov
cmp
xchg
xchg
data16
mov
push
aam
xchg
sbb
outsb
sub
test
repnz
loop
jb
pop
in
rolb
jbe
insl
ret
stos
outsb
mov
or
dec
mov
push
sbb
ss
adc
outsb
push
dec
aas
mov
movsb
pop
aam
pusha
dec
test
and
jbe
test
xchg
psrld
cwtl
fidivrs
sbb
pop
stc
jl
mov
outsb
mov
cmp
jbe
xchg
mov
mov
stc
lret
sub
mov
dec
cld
push
push
test
jbe
inc
sub
js
adc
cld
mov
lcall
jb
xor
imul
mov
fs
inc
xor
push
pop
cmp
mov
and
add
or
hlt
fsubrl
add
cmp
mov
ret
push
mov
dec
ds
cmp
mov
jo
pop
push
mov
je
xor
xchg
and
rolb
dec
dec
sub
in
pop
mov
dec
pop
das
push
mov
into
jmp
pop
jg
mov
xchg
sahf
adc
dec
or
sbb
or
and
pop
scas
push
and
sub
sahf
fimull
sarb
ret
out
xchg
pop
mov
aas
lods
stc
mov
push
mov
cli
inc
cmp
imul
insb
lret
xchg
pusha
js
pop
push
movsb
jne
mov
aam
jo
sahf
pop
cmp
ja
subl
ficoml
sahf
je
dec
mov
jecxz
lods
ja
sahf
fdivrp
add
mov
push
fsubr
insb
dec
sub
fs
mov
jp
jl
lods
in
mov
popa
aas
js
sahf
lret
dec
shlb
fcmove
dec
in
adc
pop
and
rorb
in
aam
cmp
fidivl
jo
dec
push
push
mov
dec
xchg
stos
lds
xor
lods
pop
mov
mov
push
inc
mov
outsl
pop
cmp
lret
fnstenv
fimull
adc
fdivrl
nop
fdivrs
imul
fdivrl
outsb
mov
xchg
adc
xchg
lods
faddl
dec
scas
shll
stos
imul
rcrl
adc
lods
insb
fcmovnb
hlt
lcall
mov
mov
in
mov
sbb
nop
lods
mov
sarb
mov
scas
sbb
dec
ficomps
fwait
add
adc
jbe
pop
repnz
into
inc
nop
dec
jo
js
outsb
add
cmp
fisubrs
sbb
jge
lds
lcall
inc
sub
push
sub
imul
imul
fsubrl
push
int3
dec
jmp
cld
xor
cmp
xchg
fs
add
mov
pop
mov
push
xchg
cmp
shrb
cmpsb
imul
int3
lret
mov
lcall
js
pushf
xor
mov
lock
lock
hlt
mov
jg
enter
lods
out
dec
inc
je
mov
sub
mov
dec
jo
pushf
pop
pop
scas
int3
sub
mov
js
dec
in
insb
fsubl
pushf
mov
sub
fidivs
int3
xchg
lcall
or
lret
push
mov
mov
imul
jns
mov
and
sub
lret
je
rolb
cmp
mov
fmull
xchg
loopne
movsb
push
ret
add
out
les
int3
lods
pop
test
xor
rclb
sti
push
aam
lods
hlt
mov
hlt
adc
je
cmp
scas
push
out
ret
das
lea
pop
outsb
push
cli
cmp
mov
cmpsb
xchg
sahf
dec
dec
lods
lods
ret
cwtl
out
aam
pop
mov
stc
or
mov
enter
mov
nop
and
sbbb
mov
fmul
pop
test
mov
in
pop
push
bound
lret
lcall
cmp
push
aaa
je
dec
outsb
out
adc
push
mov
and
or
jbe
or
add
mov
loop
xchg
fwait
lods
aas
mov
sbb
shlb
fistpl
push
lret
push
jae
or
test
jp
je
sub
mov
sbb
fcmove
shlb
sarb
movsb
or
pop
xchg
pop
mov
sahf
out
sbb
out
in
fsubrs
addr16
fists
add
nop
pop
pop
pop
and
data16
nop
imul
int
push
shr
mov
int
pusha
cmc
shll
inc
mov
inc
jnp
pusha
push
sahf
nop
adc
mov
arpl
push
mov
daa
bound
cmp
dec
fmul
jl
mov
add
pop
cwtl
inc
gs
test
cmp
fidivrl
cli
aad
cli
mov
sarb
test
push
cmpsb
sar
sahf
int3
out
sub
or
repnz
xchg
pusha
adc
jmp
shlb
mov
pusha
scas
and
bound
jg
repnz
push
push
sbb
xor
inc
pop
mov
push
movswl
fimull
inc
xcrypt-cfb
cmpsl
arpl
mov
es
sub
nop
test
subl
addr16
jp
fdiv
push
xchg
push
lcall
xor
jmp
dec
fistpl
cwtl
pop
mov
jno
jae
movsb
push
push
inc
js
mov
dec
lcall
cwtl
pop
fstpl
les
imul
xlat
fdivrs
lret
pop
insb
push
out
and
jg
jno
cs
xchg
jecxz
add
test
ss
pop
push
jp
cwtl
mov
push
sahf
push
data16
sti
adc
jnp
movsb
dec
fcomp
pop
outsb
xchg
aam
data16
pop
mov
inc
hlt
push
xor
es
inc
xchg
sahf
sub
lret
insb
cmp
xlat
and
add
xor
addr16
sub
std
pushf
cmp
dec
mov
sbb
dec
fmuls
mov
je
ss
cli
inc
jl
push
ret
inc
dec
mov
inc
lods
dec
mov
dec
push
jae
stos
pop
lods
sbb
add
pop
sahf
mov
jnp
pusha
je
jl
fs
nop
dec
dec
addb
push
sbbl
jmp
jns
inc
out
int3
jo
test
movsb
dec
movsb
scas
movsb
inc
pushf
dec
jb
incb
dec
cwtl
fidivs
dec
fisubs
jae
pop
neg
add
mov
xchg
je
push
xchg
scas
and
cld
lahf
push
lret
inc
fidivs
imul
pushf
js
sbb
scas
push
cwtl
dec
jmp
cs
js
xor
sahf
flds
dec
data16
mov
ficoml
and
cs
mov
push
pop
mov
pop
hlt
aam
js
dec
out
mov
shl
or
das
sarb
pushf
jo
dec
push
fldcw
popl
dec
mov
pushf
fmuls
movsl
fisttpl
dec
and
test
insl
scas
mov
std
pcmpeqb
add
cmp
movsb
jg
pop
jg
add
mov
xor
je
inc
sub
xor
das
movsl
jle
inc
push
inc
mov
pop
dec
pusha
daa
push
int3
pop
loopne
cmpsb
shll
imul
dec
pusha
lret
pop
push
push
test
push
mov
mov
mov
fildll
ret
js
xlat
xor
xlat
int
es
popf
xorl
jo
fidivs
pop
pusha
cmp
movsb
pop
xor
jmp
js
lret
dec
mov
dec
inc
push
push
data16
out
pusha
mov
lods
dec
push
xor
arpl
mov
das
js
push
sbb
bound
fsubrp
inc
ss
dec
popf
fidivrs
mov
scas
adc
mov
jnp
aam
jl
scas
sbb
jae
outsl
fmulp
mov
cmp
ds
fildll
lret
rcrb
xchg
mov
lods
and
sbb
jl
add
sbb
push
hlt
nop
lcall
pop
fidivs
cmp
cmpsb
push
xchg
mov
push
and
push
or
jl
pusha
push
inc
nop
sbb
pop
shlb
fimuls
pop
fs
cli
cld
paddq
mov
jp
out
pop
pusha
jnp
dec
or
insb
pop
pop
iret
rcrb
into
ret
dec
adc
jnp
dec
push
adc
dec
dec
nop
mov
mov
je
dec
test
pushf
mov
mov
fiadds
pop
shlb
mov
sbb
mov
add
call
les
dec
mov
mov
xchg
fdivrl
mov
jl,pt
fmuls
mov
js
fidivrs
mov
cmc
test
fists
push
mov
in
jb
pop
pop
adc
mov
add
test
mov
adc
jae
leave
aaa
sub
mov
jo
push
push
lods
inc
fisubrs
lods
sub
jns
cwtl
xor
fsubl
add
dec
fs
cld
sub
lret
test
lret
jg
das
mov
cwtl
int3
decb
mov
es
mov
mov
fwait
idivb
dec
lods
mov
jbe
int3
movsb
mov
dec
mov
andb
mov
mov
movsb
insl
push
pushf
jne
scas
stos
add
cs
jb
xchg
fs
jne
lea
sahf
sarb
mov
sbb
mov
divb
cmc
push
icebp
mov
jbe
fcmove
mov
xchg
jnp
mov
mov
xor
popf
inc
mov
mov
mov
pop
sahf
daa
int3
dec
lods
js
xchg
fmul
mov
or
int3
rcrb
sbb
pop
dec
xchg
mov
lcall
out
mov
mov
sub
repnz
scas
jle
mov
inc
jp
and
lret
enter
cld
sub
cmp
xchg
push
jbe
push
pop
inc
gs
dec
leave
inc
push
inc
dec
les
shll
int3
aaa
pop
nop
mov
mov
mov
add
imul
cmp
pop
jge
pop
cwtl
xchg
push
cmpsb
mov
je
lods
pop
push
pusha
shlb
pop
pop
ret
pop
dec
push
imul
js
lret
daa
xor
cmp
push
push
pop
les
push
sbb
push
cli
adc
pushf
mov
xor
inc
xor
or
andl
in
sub
push
sbb
jbe
jge
insb
in
mov
pushf
pushf
mov
lea
push
lcall
ficoml
push
pushw
jle
push
xchg
sub
push
pop
fbld
js
jbe
mov
test
ds
add
sbb
hlt
pop
push
mov
movsb
lahf
mov
push
add
cmp
stos
shrb
into
sbb
lods
dec
adc
xchg
scas
bound
daa
test
fsubrs
das
aam
jp
idivl
dec
mov
mov
lret
cmc
pop
fiaddl
test
outsb
mov
push
pop
mov
sbb
mov
nop
es
inc
and
add
fisubl
jnp
dec
std
dec
ja
inc
mov
dec
cmpsl
mov
out
push
sti
in
in
cmp
push
lcall
mov
xor
shll
sbb
movsb
and
cmp
mov
push
stc
in
test
popf
mov
fcmovnbe
aaa
fmul
push
push
ficoms
mov
movsb
test
mov
out
daa
out
shrb
or
and
and
push
jg
sub
insb
das
loopne
push
lret
cmp
fmull
fmuls
shlb
jp
dec
fucompp
fcoml
sarb
inc
xchg
sub
enter
bound
push
movsb
int3
push
pushf
adcl
stos
adc
xchg
cmp
aam
jp
add
lret
sub
dec
sbb
outsb
xorl
cmp
dec
fwait
jb
pop
scas
std
xor
shlb
cmp
mov
pushf
insb
pop
out
nop
ror
test
fldt
out
jge
js
nop
xchg
out
mov
test
mov
fdiv
in
rclb
stos
pop
cmp
fimull
arpl
dec
arpl
push
imul
int3
stos
js
push
mov
pop
sahf
mov
fwait
je
repnz
xor
mov
insb
lea
stc
mov
js
sub
pusha
std
ljmp
mov
lods
ss
mov
jo
pop
movsl
test
js
adc
daa
fs
rcr
xor
test
mov
jb
cld
decb
xchg
xchg
jne
cltd
push
fadds
sahf
fidivl
xchg
bound
mov
stc
jecxz
xchg
dec
fimuls
xor
into
lods
aad
and
enter
mov
pusha
jp
and
cmp
xchg
into
jnp
mov
test
cmp
cwtl
scas
sarb
mov
pop
mov
sti
jno,pn
test
xchg
or
pop
int3
pusha
lcall
lods
add
xchg
push
push
stos
fistl
fwait
insb
outsb
cwtl
int
inc
cs
dec
inc
cld
add
lods
mov
cmp
dec
cmpsb
mov
pop
xchg
jmp
and
loopne
and
jge
jb
imul
mov
js
lret
mov
dec
insl
sub
add
lods
pop
pop
cmp
xchg
push
daa
mov
pusha
int3
mov
lods
jp
fs
pop
xor
mov
dec
xchg
push
cmp
in
movsl
cmp
js
mov
jg
pushf
push
test
xchg
scas
movsb
fdivl
adc
xchg
aam
mov
push
mov
push
loop
dec
mov
pop
mull
jns
outsb
adcl
push
movsb
aaa
ss
mov
pop
pushf
fs
push
in
pop
jo
sbb
push
and
add
dec
fcomps
sti
lds
ficoms
push
in
cwtl
adc
mov
mov
pop
cmp
and
fbstp
jle
mov
pushf
inc
cmc
sahf
jle
insb
sub
cmp
push
pop
jae
mov
scas
xchg
push
or
add
pop
fsubrl
adc
cmp
scas
insb
jb
push
pushaw
mov
daa
add
ret
mov
push
cmp
into
pop
hlt
insb
fdivl
mov
loopne
jns
pushf
and
fcmovnu
sbb
inc
mov
stc
xchg
mov
mov
lret
hlt
cmpsb
pop
scas
pop
push
pushf
mov
add
mov
js
push
cwtl
dec
push
movsb
movsb
pusha
scas
pushf
push
push
or
sbb
add
js
sahf
mov
inc
movsl
lret
fsub
outsb
add
stos
and
cmp
bound
pop
js
insb
xchg
push
mov
push
pop
mov
pushf
jp
int3
xchg
mov
movsb
pushf
stos
lahf
mov
fsubrs
xchg
mov
mov
das
movsb
push
fcmovu
push
nop
pop
xchg
lret
mov
or
lcall
mov
cmp
jl
mov
inc
pop
cld
notl
out
stc
or
mov
mov
cltd
fisubrl
jns
adc
mov
sub
pop
nop
pusha
cld
pop
mov
push
pop
fwait
sbb
pop
nop
in
mov
add
data16
cmpsb
cs
movsl
xor
mov
cmp
fmull
push
sahf
jge
mov
pop
mov
movsb
pop
push
addr16
insb
dec
sbb
aaa
dec
xchg
je
xor
pop
js
mov
cmp
pushf
jmp
jp
dec
je
push
in
sbb
mov
xchg
sbb
cmp
mov
add
daa
sub
ja
cmp
mov
dec
dec
in
hlt
lock
jo
pop
shll
mov
nop
xchg
dec
pop
dec
push
sub
cltd
jmp
stos
aam
sub
jbe
pushf
pop
mov
into
xor
bts
cmp
pushf
test
nop
jg
lods
lcall
dec
stos
lret
imul
push
jo
mov
cwtl
pop
dec
cmpsb
scas
lret
cwtl
fwait
xor
push
add
mov
adc
daa
push
out
sarb
lods
mov
pushf
setl
mov
push
pop
aam
pop
out
mov
mov
push
dec
xchg
and
jle
ret
ljmp
je
push
jp
push
les
nop
das
xor
movsb
jp
fdivr
out
je
fstpt
pushw
ja
jb
repnz
fwait
ret
jne
cmpl
mov
xor
test
icebp
fisubl
aam
lcall
adc
lret
pop
movsb
lret
mov
mov
push
aam
lods
rcrl
push
mov
mov
insb
sahf
cmpsl
or
mov
aas
dec
ds
lods
insl
fsubl
test
sub
mov
outsb
mov
mov
add
push
jl
pushf
pop
outsb
jmp
cmp
dec
fiadds
sbb
dec
push
inc
scas
sbb
mov
sbb
je
ret
ret
mov
pop
pop
outsb
dec
cmpsb
in
dec
shlb
mov
int3
out
adc
sbb
cmpsb
xchg
xor
mov
mov
xor
mov
and
test
pusha
xchg
pop
sub
mov
xchg
and
push
ja
js
push
fs
fdivrl
mov
mov
add
inc
inc
pop
xchg
rclb
clc
pop
cmp
jb
mov
dec
xor
mov
adcb
cmp
fidivl
cwtl
xor
jo
xor
cmp
cld
aas
pop
lcall
jb
das
xor
mov
ret
fcompl
or
jbe
add
mov
jae
pop
jb
mov
lret
movsb
adc
add
aaa
dec
cmpsb
push
fs
xor
insb
jo
pop
add
dec
fcmovnu
cmp
mov
cwtl
cmp
mov
inc
scas
fucomi
sbb
cmp
pop
xchg
mov
int3
int
adc
mull
mov
jne
mov
dec
mov
mov
test
push
mov
mov
lret
dec
shlb
ficoms
dec
xor
popa
test
ds
mov
mov
cmpsb
pop
cmp
cmpl
in
cli
add
push
mov
in
rcrb
sbb
cmp
dec
fs
cmc
mov
cmp
fsubl
cmp
nop
je
sbb
bound
sbb
pop
push
cmp
nop
mov
cwtl
push
mov
lods
push
adc
pop
mov
loopne
arpl
movsb
fisubrl
pusha
mov
cs
lret
push
dec
test
pop
push
rcrl
repnz
cld
and
pop
push
cmp
jo
pusha
fmul
lds
mov
push
pop
jg
out
mov
lret
repnz
inc
filds
mov
imul
cmp
pop
push
fimull
inc
xchg
cmp
lret
rclb
fwait
je
sahf
in
pushf
in
popf
in
mov
in
and
add
mov
mov
out
mov
mov
push
mov
ret
daa
push
addr16
lret
mov
and
aam
fistl
lock
mov
adc
xchg
frstor
mov
jg
mov
push
mov
mov
push
inc
inc
pop
inc
stos
mov
mov
sub
insl
xor
inc
cmp
mov
push
dec
inc
gs
adc
pusha
je
fdivrs
xchg
dec
sbb
cmp
fimuls
jns
mov
ja
fwait
dec
fisubl
sahf
test
aad
lcall
mov
jl
push
push
es
push
sub
fcmovnu
lcall
clc
sub
dec
insb
pop
in
aam
out
xchg
jp
mov
je
lahf
mov
jle
jns
mov
dec
pusha
mov
pop
jno
jnp
dec
jne
pop
lods
xor
mov
rorb
add
jb
pusha
jbe
sub
pop
inc
push
add
dec
pop
es
push
pop
and
sahf
mov
popf
xchg
jp
lahf
sbb
mov
adc
mov
mov
ss
fwait
pop
jp
sub
xor
popa
inc
fildl
push
fsubrl
test
sbb
inc
push
rolb
adcl
shlb
mov
lds
out
cmp
fmull
mov
ss
ja
mov
mov
cmpsb
adc
add
pop
add
push
imul
jl
lret
dec
mov
pop
sub
dec
repnz
rcrb
dec
xchg
pop
inc
pop
ja
lock
cmp
dec
rorb
xchg
ljmp
mov
rcr
xchg
sahf
pop
jbe
cltd
in
dec
mov
mov
dec
mov
jge
pop
outsl
adc
lcall
mov
push
mov
mov
rcrb
jp
cmp
xchg
movsb
push
pop
int3
mov
mov
sahf
pusha
fstpt
data16
fidivrs
jnp
mov
adc
into
dec
jns
cli
data16
inc
push
push
mov
cmpsb
cmp
jnp
scas
push
mov
jecxz
test
add
out
push
test
outsl
fsubrl
and
mov
mov
fmuls
mov
push
std
xchg
cmp
out
lret
imul
or
mov
cmpsb
test
jnp
mov
les
lods
sbb
iret
test
push
ds
aam
outsb
dec
dec
into
int3
scas
pop
out
jo
repnz
xchg
or
insb
dec
out
fadds
pop
dec
jnp
lret
cwtl
or
pop
mov
xchg
into
fcoml
mov
out
pop
das
xchg
mov
pop
jns
xchg
pop
dec
jmp
mov
aam
insb
jne
scas
mov
mov
fdiv
movsb
push
pop
ss
into
imul
jp
fcmovu
cld
push
lods
or
out
punpckhbw
je
test
inc
push
aam
into
xchg
cmp
mov
pop
dec
insl
hlt
add
fcmovb
adc
daa
clc
jb
sbb
mov
out
dec
dec
mov
pop
pop
add
mov
fdivr
hlt
pop
xor
jp
mov
sub
dec
aam
dec
lret
pop
cmc
xor
mov
fwait
lcall
scas
lods
adc
jb
lods
cmpsl
aas
push
mov
int3
in
pusha
jb
mov
ret
dec
enter
fldenv
push
cmp
cmp
pop
mov
stos
movsb
sbb
setl
and
je
fadd
dec
sti
lea
scas
xor
mov
dec
enter
fildll
call
int
and
into
nop
jmp
jae
aam
js
add
mov
cmp
dec
dec
rclb
mov
xor
dec
outsb
xchg
lock
mov
mov
lds
mov
icebp
mov
dec
pop
outsb
movsb
nop
add
bnd
mov
cld
mov
mov
jns
rclb
xchg
stos
mov
loope
add
push
jo
dec
mov
ss
pop
xchg
lret
imul
xchg
cmc
cltd
aad
ror
test
dec
popa
gs
mov
adc
les
outsb
pop
les
in
jo
sti
movsl
ficoml
int
fisttpl
jae
mov
jp
fsubs
xor
push
xor
jbe
ret
dec
shrl
xchg
add
jp
cs
rorb
xlat
fdivrl
dec
mov
in
xchg
cmpsb
sbb
or
aam
mov
cmp
stos
mov
jg
pushf
pop
pusha
das
push
jb
cmp
pop
dec
js
push
mov
pop
or
lock
inc
lock
in
arpl
xchg
xchg
mov
lret
push
loop
pop
xchg
sbb
addr16
cmp
ja
mov
inc
push
pop
pop
fisubrs
pusha
insb
jae
xchg
int3
scas
loopne
adc
lcall
pusha
dec
inc
sub
push
and
mov
jg
cmc
pop
incl
aas
push
dec
in
or
aam
sarb
xchg
insb
pop
fsubrl
mov
lahf
push
pop
pop
js
fimuls
jp
fimuls
jb
cwtl
mov
outsb
dec
pushf
mov
daa
xchg
mov
rcrb
cli
scas
sarb
mov
push
push
or
cmp
stos
push
fdivl
push
push
mov
xlat
arpl
add
punpckhbw
add
cmp
pop
ds
push
popf
dec
mov
lea
in
pop
aam
fistpl
out
test
pop
dec
enter
jae
scas
lret
bound
stos
push
sub
pop
pop
insb
and
mov
fstpl
xchg
fwait
mov
rclb
jbe
outsb
lods
int
fistl
mov
shlb
nop
dec
stc
push
add
imul
or
mov
mov
sub
jp
sub
cmpsb
fsubs
xchg
and
pusha
cmp
pop
outsb
scas
sahf
pop
js
cwtl
xchg
shrl
lret
ror
xor
daa
test
enter
dec
int3
mov
jnp
lret
jo
ficoml
and
sbb
negb
addb
fisubl
lret
rcl
mov
jbe
lret
xchg
lods
fimuls
xor
pop
fstpt
fmuls
adc
popa
movsb
pop
jg
mov
pop
push
dec
inc
pop
sbb
fidivl
shlb
inc
mov
cs
mov
sub
stos
jne
push
nop
xchg
rolb
inc
mov
mov
int3
xor
lret
cwtl
mov
test
mov
stos
fcompl
pop
pushf
push
nop
pop
pop
faddl
loop
inc
enter
mov
mov
insb
inc
scas
call
pop
popf
aam
cmpsb
xor
sbb
ss
test
js
push
add
and
mov
aam
fbld
sti
cmp
mov
and
add
fisubrs
inc
leave
enter
push
push
mov
fisttpl
xchg
xlat
sbb
ret
sarl
mov
in
lods
outsb
aam
mov
xchg
outsb
insb
inc
test
mov
out
movsb
lret
or
xchg
dec
loop
xchg
dec
inc
lds
fstl
stos
dec
out
adc
dec
add
inc
dec
hlt
pop
out
je
aaa
ds
call
inc
cmp
test
stos
mov
mov
cmp
out
das
or
mov
aam
aaa
fsubrs
sub
adc
insb
aam
mov
inc
imul
pop
imul
lcall
scas
xchg
mov
jae
loope
sub
push
or
scas
ja
pop
fisttps
movsb
dec
lcall
push
mov
xor
aam
mov
jb
js
int
shlb
int3
pop
mov
pop
nop
fisubrl
dec
cli
add
jae
dec
mov
cwtl
cmpsb
sbb
mov
jne
dec
nop
dec
mov
fsubs
pop
je
mov
test
hlt
fsubl
dec
daa
outsb
cwtl
jp
sub
mov
mov
lret
pop
lods
xchg
pop
orb
popa
inc
andb
test
jnp
push
push
repnz
sti
sahf
sarb
nop
inc
test
push
loopne
fs
jo
outsl
in
xor
pop
test
xorb
xlat
adc
pop
push
scas
mov
pusha
shlb
sub
adc
mov
mov
cwtl
inc
cmp
sbb
cmpsb
lcall
dec
xor
xor
repz
das
movsb
mov
push
mov
fwait
and
cli
fimuls
cmp
dec
inc
fs
mov
lock
or
test
dec
dec
das
adc
cmp
sarb
scas
into
in
xor
stos
nop
push
pop
lds
jnp
adc
sbb
inc
js
mov
repz
pop
xor
sti
push
mov
mov
mov
jl
fsubrl
push
dec
adc
movsb
cwtl
mov
test
fdivr
jnp
mov
je
pop
cmp
test
mov
aam
mov
lcall
nop
pop
cmpsb
inc
and
icebp
pop
into
mov
cmp
mov
jb
mov
jp
movsl
std
jle
stos
js
xor
cs
ljmp
push
xor
push
dec
cwtl
adc
and
sbb
add
mov
shll
outsb
pop
jmp
dec
mov
pop
into
mov
test
pop
mov
pop
nop
js
dec
pop
inc
loopne
mov
fsts
data16
lods
cmc
fldcw
sarb
dec
rol
xor
lods
cmp
xchg
je
push
std
ja
jl
rcrb
into
sbb
rolb
pop
pop
push
cmp
dec
subb
fcoml
mov
mov
mov
push
movl
dec
inc
loope
push
sahf
stos
fidivrl
mov
push
and
or
pop
mov
push
fsubr
rol
mov
sti
and
sbb
and
dec
pop
fcmovu
lods
outsl
sahf
jb
aam
lock
test
sub
cmp
lods
mov
or
mov
insb
add
jp
mov
sbb
dec
ja
push
fcmovbe
in
bound
push
and
sbb
and
push
adc
mov
insb
inc
mov
cmp
xchg
fs
test
pushf
icebp
in
mov
inc
mov
mov
pop
push
mov
lret
xchg
cmp
sahf
jne
sub
je
push
pusha
mov
pop
sub
jb
rolb
lret
outsb
xchg
movsb
out
movsb
mov
mov
ja
js
xchg
cmp
fisubrs
mov
lods
sub
mov
es
xor
mov
xor
pop
cmc
test
mov
int3
mov
xor
pop
test
data16
js
mov
mov
adc
or
shlb
arpl
call
pop
jno
pop
aas
mov
dec
mov
bound
fs
pushf
mov
inc
dec
fsub
pop
cmpsb
mov
adcb
push
sbb
cmp
mov
arpl
mov
nop
mov
pop
mov
and
cmp
sub
int3
cmp
test
push
daa
sbb
js
mov
sbb
bound
shl
mov
cmp
mov
dec
push
pop
rolb
fs
out
jl
aam
rorb
mov
js
pushf
add
cli
cltd
cmp
jnp
pusha
push
repnz
js
fnstsw
fdivl
fs
pop
mov
aam
je
cmp
int3
pusha
fisubl
mov
js
adc
xchg
mov
jno
int3
ficoms
data16
cmp
mov
mov
cld
shll
pop
cmp
pusha
rcrb
pop
push
xor
push
mov
inc
dec
lcall
dec
jno
mov
lret
pushf
fmul
lods
xor
fistpl
aam
lret
dec
popa
pop
cmp
push
in
bound
xchg
pop
cwtl
aam
xor
xor
cmp
insb
pop
nop
xor
mov
xor
and
inc
mov
lcall
mov
ret
outsb
push
data16
and
pusha
mov
xchg
sbb
mov
lret
pop
mov
fdivrs
jg
sub
xchg
xchg
fidivl
mov
sbb
cmp
movsb
push
addl
ret
pop
pop
mov
mov
add
icebp
arpl
stc
sbb
fdivl
loopne
imul
push
sbb
sbb
fisttpl
mov
cmp
test
popa
or
jmp
and
stos
lea
inc
inc
add
push
jbe
jg
dec
jnp
fcoms
add
into
out
xor
jecxz
lods
pop
cmc
inc
fsubrl
jecxz
fcomps
dec
jo
lock
rolb
aas
jb
aas
jns
fmull
lret
mov
push
pop
jnp
jp
fmull
movsb
out
push
pop
push
lret
xchg
inc
jp
push
mov
mov
call
mov
int3
pushf
mov
aam
nop
movsb
jo
mov
fldenv
adc
inc
cmp
push
dec
mov
nop
ljmp
xchg
dec
mov
mov
mov
dec
push
dec
mov
cmp
js
movsb
aaa
cltd
mov
int
stos
mov
pop
pop
outsl
jno
jo
push
lods
mov
xor
hlt
pop
dec
lahf
add
jnp
mov
push
cmp
pop
push
mov
xchg
dec
sbb
arpl
stos
pop
in
lcall
bound
insb
cwtl
shrl
in
lods
inc
shrb
add
xchg
and
jp
fcoms
into
es
push
pusha
decb
dec
mov
aam
ljmp
test
xchg
scas
test
xor
fs
dec
mov
dec
ds
fmul
mov
mov
xor
rcrb
xor
mov
or
lods
mov
dec
pushf
dec
sbb
fidivs
fdivl
push
movsb
inc
xchg
inc
jo
test
pop
icebp
sbb
lcall
and
push
fiaddl
pop
dec
fldcw
lods
jbe
rcr
les
adc
dec
push
sub
nop
clc
sub
cmp
pop
mov
pusha
lods
xchg
lret
hlt
js
js
mov
fcoml
mov
pusha
sahf
fisubl
fistpl
loopne
mov
adc
jbe
dec
std
js
xor
lock
outsb
add
into
dec
xchg
lcall
cmpsb
sbb
stc
cld
hlt
lock
stos
inc
arpl
or
addr16
sbb
jl
xchg
jnp
fidivl
into
outsb
out
scas
in
test
pop
stos
push
jmp
and
lret
sahf
jb
mov
cmp
jo
rcr
gs
lret
les
iret
rolb
insb
mov
fs
mov
fcom
dec
cmpl
popf
fs
fsubs
jp
adc
xchg
pop
cmc
jo
fs
mov
imul
or
in
xor
cmp
push
fcom
hlt
cwtl
repnz
mov
push
push
add
dec
ds
mov
ror
push
mov
sub
scas
mov
add
inc
movsb
jp
aaa
pusha
dec
pushf
stos
mov
addr16
lahf
add
in
xor
pop
js
outsb
xchg
xchg
add
arpl
in
or
mov
pushf
xchg
mov
lock
imul
add
mov
push
fdivr
mov
mov
push
adc
int3
mov
dec
mov
movsl
xchg
push
lret
jmp
add
cmp
das
sbb
push
sti
rcrb
decb
fldt
pop
push
cmp
mov
jg
aaa
sub
int3
scas
aam
dec
inc
mov
mov
subl
dec
addl
orl
pusha
pop
scas
xor
mov
push
mov
lods
fidivs
dec
cmp
jo,pn
push
call
lods
fmul
repz
cmp
out
mov
dec
fcomps
cmpsb
pop
adc
hlt
scas
cmp
xchg
data16
cwtl
nop
mov
fsubr
mov
repz
add
push
aas
xor
mov
popf
aam
addr16
xor
insl
std
sub
daa
mov
daa
adc
ja
mov
pushf
ja
sub
xchg
xor
dec
fadd
push
hlt
mov
or
jl
fisubs
mov
mov
imul
ja
sub
std
mov
outsb
jp
add
cmp
insb
pop
mov
xor
out
into
jecxz
stos
or
shrb
add
pop
shlb
jmp
jne
or
outsb
jo
jbe
add
mov
fmul
pop
mov
sub
bound
mov
cmpsb
pushf
pop
in
jl
rcrb
stos
insb
fs
push
jbe
dec
xchg
adc
popa
je
sbb
push
cmp
jo
fiaddl
ret
out
dec
jl
xchg
int3
mov
mov
out
and
pop
fistps
add
iret
push
dec
push
stos
bound
movsl
push
xor
aam
out
lds
mov
test
nop
lods
insb
and
jo
push
pusha
mov
jp
lcall
cmp
pop
lcall
or
std
ficomps
decb
loope
xor
test
push
aaa
jbe
shlb
lods
push
pushf
stos
je
jecxz
mov
pop
xor
sbb
sbb
inc
roll
push
push
lods
pop
push
or
imul
sbb
pop
repnz
fldenv
mov
leave
ficoml
cltd
mov
fucomi
push
lret
xorl
xchg
sub
mov
sahf
data16
scas
lods
lcall
mov
jne
and
xchg
jge
push
sbb
rorb
stos
rclb
sub
das
test
fidivs
loopne
xchg
or
fcmove
hlt
dec
lcall
mov
add
push
sti
and
pop
hlt
push
enter
cmp
mov
into
mov
je
push
daa
cwtl
push
andl
cld
mov
in
pushf
outsb
in
pop
mov
rol
js
cmp
test
sahf
jne
xor
xchg
push
push
and
dec
pop
faddp
dec
stos
stos
inc
rcrb
scas
sub
jns
jbe
push
rep
dec
xor
aam
les
xor
adc
dec
je
push
add
fstpl
pop
fs
mov
mov
fisubl
pop
jbe
scas
pop
dec
lcall
aam
push
push
bnd
rcl
or
push
sbb
test
pop
xchg
outsb
mov
sub
mov
in
cld
cmp
dec
sub
mov
inc
add
hlt
mov
pop
xor
push
fsubl
pusha
addl
insb
pop
sub
pop
xor
and
adc
xchg
in
push
inc
mov
andb
sahf
pusha
adc
imull
xchg
lods
daa
mov
mov
mov
lea
aam
into
pusha
sbb
push
xchg
add
adc
mov
adc
lea
into
mov
aas
dec
dec
sahf
rclb
jnp
lcall
sahf
mov
mov
jbe
push
pop
pusha
repnz
xchg
or
cmp
dec
dec
rcrb
clc
mov
cmp
adc
sbb
xchg
icebp
mov
lods
push
mov
dec
shl
mov
pop
cmpsb
push
mov
fsub
into
lods
lock
lea
dec
cli
ret
push
dec
pop
or
loopne
ficompl
mov
xchg
test
cmp
jo
rorb
loope
add
addr16
loopne
lret
pop
hlt
push
add
pop
dec
push
js
fsubl
lret
sbb
stc
je
gs
xor
test
out
pusha
icebp
and
mov
je
xchg
add
sub
mov
mov
out
out
xorl
mov
lret
push
dec
jbe
adc
push
ret
test
popa
cmp
cwtl
mov
mov
mov
fnsave
push
movsb
or
push
jb
jp
add
xor
inc
fistl
push
mov
ficompl
out
pusha
jge
pop
push
sub
inc
test
js
ret
add
jmp
mov
pop
fdivrs
js
sbb
jl
shrb
mov
into
js
and
mov
pop
int3
out
test
fistpl
mov
inc
aaa
sbb
mov
mov
cwtl
inc
xchg
mov
xchg
push
ja
sub
not
jp
mov
mov
outsb
mov
stos
movsb
sbb
into
ljmp
mov
ret
adc
dec
pop
push
iret
inc
in
dec
test
aam
data16
leave
mov
lret
push
in
fcmove
hlt
scas
cmp
mov
ja
sbb
dec
pushf
ds
outsb
mov
jbe
sbb
add
xor
dec
mov
pop
jnp
push
sarb
mov
stos
ficoms
or
dec
xchg
test
mov
mov
fs
setb
lds
test
inc
dec
pop
mov
xchg
sub
xor
stc
test
aas
insl
push
pushf
push
pop
ja
inc
ja
mov
int3
lret
cmpsb
repnz
scas
nop
pop
or
mov
lea
jb
fwait
mov
cwtl
aam
je
mov
pop
aaa
js
cmpsb
lock
data16
in
add
mov
sbb
adc
dec
sarl
out
fwait
xchg
in
xchg
or
sub
dec
fdivrp
push
sub
pop
out
mov
jnp
pop
cwtl
fxch
loop
cs
out
jbe
ss
icebp
jecxz
mov
mov
push
insb
icebp
mov
mov
jns
jp
sbbl
dec
shl
fdivs
and
sub
mov
pop
test
shrb
jb
inc
lods
mov
fldcw
sti
xlat
pop
add
cwtl
dec
push
in
scas
lock
push
jbe
pop
mov
mov
xchg
in
and
stos
pop
push
xorl
push
adc
sbb
pushf
xlat
cltd
pusha
aaa
fisubl
fdivs
jb
test
xchg
xchg
sbb
in
je
xor
mov
adc
dec
aam
lock
or
lcall
xchg
stc
add
inc
arpl
sub
mov
xchg
outsb
pop
xor
fistps
xlat
pop
test
adc
movsl
pusha
pusha
push
pusha
mov
lcall
inc
call
outsb
push
xchg
mov
mov
jp
push
or
push
push
insb
dec
inc
push
mov
push
and
sbb
jge
addr16
fistl
movsb
into
data16
lods
icebp
jno
inc
xor
dec
loop
cmp
mov
dec
pop
mov
loop
dec
mov
push
jbe
rolb
pop
cwtl
je
mov
push
fwait
jb
xor
xor
push
pop
sub
js
push
lcall
inc
xor
mov
adc
jbe
lret
jb
pop
push
rol
push
pop
jmp
cmpsb
dec
jg
xchg
fcoml
mov
clc
jle
and
mov
out
mov
ret
scas
cmp
pusha
dec
movsb
inc
aas
mov
push
or
das
mov
in
xchg
pop
jnp
bound
xchg
fisttpl
lods
push
shlb
gs
xor
ror
outsb
and
push
pushf
bound
nop
inc
int3
mov
movsb
imul
faddl
movsb
jbe
pushf
jp
xchg
insb
mov
jecxz
scas
cmp
fsubs
pop
mov
daa
mov
leave
mov
add
insb
mov
jne
pop
lret
lock
sbb
rcrb
add
pop
fcoml
jecxz
movsb
dec
mov
and
lcall
inc
fdivl
jo
orb
fsubrp
push
in
dec
aaa
sbb
pop
push
scas
hlt
rclb
sub
adc
mov
pop
les
push
out
jns
cwtl
and
mov
ret
daa
push
mov
outsl
push
and
scas
pusha
dec
daa
out
cmp
jp
mov
push
roll
inc
je
push
xor
mov
scas
jp
pop
jb
loope
mov
cld
mov
test
rcrb
leave
cmp
and
sahf
push
push
jl
aam
push
push
arpl
es
es
pop
xor
fsubrs
jns
push
xchg
cmpsl
mov
mov
jnp
fcmovbe
pop
int
dec
out
imul
pushf
mov
pushf
sahf
bound
push
or
shlb
mov
dec
xchg
cld
gs
lods
lcall
mov
pushf
pusha
stos
cmp
dec
xchg
pop
icebp
pop
sahf
xchg
mov
cwtl
mov
rorb
mov
ret
loopne
or
shr
or
stc
gs
std
sbb
dec
in
or
stos
mov
mov
fidivl
nop
push
movsb
int3
xor
enter
mov
push
fdivrs
dec
sbb
mov
scas
jp
mov
lcall
pusha
jmp
je
rol
cs
cs
mov
push
dec
xchg
jbe
sub
mov
lcall
cwtl
dec
fiaddl
push
and
lahf
mov
ss
mov
cmpsb
jo
or
jb
add
cmp
mov
stos
mov
xchg
sbb
xor
mov
mov
and
push
inc
outsl
mov
fwait
insb
shlb
lret
mov
outsb
fidivl
pop
inc
xor
mov
lds
jp
push
stos
jb
mov
js
popf
in
sbb
fwait
lea
add
sbb
adc
jecxz
in
scas
popa
push
bound
adc
jp
dec
dec
movntps
sub
out
cmpb
cld
and
int3
pushw
loope
dec
lea
or
mov
pop
sub
aad
mov
sbb
bound
dec
push
into
or
aam
push
push
fcoml
push
push
out
xor
push
lret
jp
nop
jae
insb
mull
mov
jp
dec
es
insb
jo
sbbl
push
mov
mov
aaa
sub
dec
jl
xchg
je
daa
fcompl
adc
in
cmc
mov
es
cld
pop
lret
mov
add
push
cmpsl
sbb
shll
pop
les
in
add
aas
cmp
xchg
nop
push
ss
out
jnp
xchg
mov
aaa
sbb
mov
mov
insb
cmpsb
push
data16
jbe
arpl
add
lcall
data16
lret
jmp
pop
pushf
fistpll
mov
bound
sub
rol
lods
add
es
jg
sub
test
cmp
mov
mov
mov
mov
dec
mov
das
rcrl
push
push
clc
outsb
movsb
and
pushf
insb
push
pop
adc
lret
into
add
add
negl
mov
push
stos
jo
push
xchg
int
cwtl
das
sahf
insb
cmp
dec
xor
mov
in
pop
rcll
sahf
xor
mov
and
push
dec
fists
fadds
sti
movsb
into
loop
cwtl
xchg
or
jmp
mov
adc
sbb
mov
js
cmp
mov
notl
dec
daa
cmpsb
mov
leave
cmp
sahf
push
shl
icebp
faddl
inc
push
xlat
pushf
fidivrl
push
insb
pop
push
push
jl
je
int3
std
mov
mov
into
jb
pushf
mov
cmp
push
pop
xchg
jo
stos
scas
jmp
es
pop
ja
cmp
aam
mov
lret
cld
sbb
mov
fcmove
sbb
mov
mov
jl
push
sbb
mov
adc
xor
divl
repz
sar
xor
rorl
out
pusha
pushf
inc
hlt
movsb
mov
xor
cmpsb
cmp
cwtl
push
gs
ja
push
dec
je
xlat
pop
sahf
rclb
insb
jp
cmpsb
cmp
mov
insl
pop
lahf
mov
mov
fldt
xor
insb
dec
dec
daa
xchg
dec
jbe
lods
sti
nop
dec
sbb
adc
daa
lods
test
lret
sub
aaa
mov
inc
xor
mov
mov
adc
fiadds
or
rorl
or
aaa
cmc
rcll
cwtl
fs
mov
cmp
cli
push
cld
xor
shlb
push
je
sub
arpl
hlt
xchg
mov
xchg
dec
mov
lock
mov
aam
sahf
add
xlat
je
mov
inc
dec
out
xchg
nop
push
pushf
push
data16
jp
test
scas
mov
adc
mov
out
sahf
lods
pop
dec
dec
push
sub
mov
cmpsb
ret
dec
pop
xchg
xchg
mov
dec
pusha
into
sbb
add
push
aas
out
in
js
lods
mov
lret
cmp
mov
xchg
lret
cmpsl
add
int3
mov
pushf
xchg
mov
es
cmp
into
jo
jecxz
movsl
mov
imul
jbe
jb
dec
xchg
mov
mov
xchg
je
cmp
jns
scas
ja
mov
imul
mov
dec
fs
pop
cmpsb
test
loopne
pop
test
int3
jge
push
ljmp
test
pop
das
stos
mov
cmp
pop
ds
cwtl
jp
adc
fisubl
lahf
fsubrs
pushf
test
mov
cmp
fsubrl
lock
sarb
je
sarb
jmp
inc
mov
lcall
sarl
dec
dec
mov
pusha
dec
in
mov
pop
jp
dec
jbe
scas
mov
inc
add
outsl
rolb
cmp
cwtl
dec
push
mov
sbb
mov
mov
xchg
mov
outsl
mov
push
lret
add
sub
jmp
fmuls
mov
jo
das
dec
mov
mov
rorb
shlb
push
fdivl
mov
data16
push
test
mov
fmuls
les
inc
pop
aas
lea
lock
test
jl
stos
cmp
test
mov
js
mov
inc
cmp
pop
lret
mov
push
imul
ror
clc
aas
pop
or
movsl
or
jp
xchg
sbb
pop
movsb
movsb
jmp
xor
adc
mov
js
mov
scas
insb
push
movsb
jp
cmp
pusha
lcall
popf
divl
jl
dec
mov
mov
push
sub
jb
es
nop
add
add
xor
push
fnsave
out
es
add
xor
jb
xchg
push
call
in
or
js
jp
je
ds
std
add
adc
xchg
and
pushf
div
mov
pop
sub
cwtl
pop
pop
daa
xor
dec
pop
mov
stos
popl
jp
push
loopne
pusha
dec
add
data16
mov
fwait
and
ljmp
repz
sub
int
mov
rorl
mov
aad
add
lcall
arpl
jo
lret
push
das
mov
push
jp
dec
repnz
mov
lods
mov
pshufw
mov
scas
loopne
mov
repnz
cmp
or
adc
daa
sbb
cld
ss
push
dec
mov
ja
dec
sti
mov
dec
inc
inc
test
jl
mov
mov
mov
fistps
nop
mov
ja
cmpsb
xchg
inc
cmp
mov
jbe
inc
rcrl
dec
push
jns
lea
cmc
orb
inc
mov
pop
push
adc
cmc
test
in
pop
push
lret
lods
mov
movsb
hlt
mov
mov
dec
cmp
mov
bound
pop
ja
ror
jecxz
dec
loop
ja
mov
cmp
outsb
cwtl
xchg
ficoms
pop
int3
faddl
shlb
xchg
arpl
sub
les
cli
mov
pop
mov
insb
gs
fsubrl
fisubs
push
dec
mov
add
shrb
pop
sbbl
orl
push
dec
js
pop
loopne
pop
leave
out
ja
xor
mov
lret
mov
stos
add
inc
pop
int3
mov
shr
jb
scas
gs
cmp
addl
nop
aam
cmp
push
push
shll
mov
push
adc
outsb
sbb
mov
jbe
push
test
out
test
ss
lret
in
xor
cwtl
push
pop
jo
mov
fldcw
push
jecxz
lods
or
push
aam
shll
pusha
fcoml
scas
insl
movsb
and
pop
push
xlat
jb
pusha
mov
outsl
dec
enter
push
dec
inc
pop
movsb
mov
and
js
xor
xor
mov
mov
cmpsb
ret
fisubrs
shlb
mov
xor
fdivl
cmp
aam
pop
das
dec
in
push
jnp
add
inc
fnsave
and
pop
cmp
sahf
sarb
pop
out
pop
mov
dec
dec
and
cmpsb
mov
dec
daa
dec
out
lret
jp
mov
sbb
push
lock
xor
lret
mov
and
imul
mov
or
repz
loopne
or
push
pusha
cmp
lods
hlt
stos
loopne
push
and
sahf
inc
fdivr
fsubl
call
dec
nop
and
mov
sbb
rclb
idivl
mov
xlat
pop
mov
jg
data16
push
fimull
mov
data16
mov
mov
fs
adc
mov
mov
inc
fcoms
pop
xchg
int3
and
in
mov
cmp
stos
data16
dec
test
mov
test
gs
aad
inc
mov
mov
add
push
es
xchg
cmp
mov
icebp
fsubr
into
enter
js
jo
out
imul
jp
cld
xchg
cwtl
lods
pushf
pushf
jo
push
add
pop
fs
add
cmp
test
out
nop
bound
fcoms
mov
ficoms
mov
js
mov
push
out
ss
push
sbb
lret
fisubs
movsb
aam
cmp
mov
fidivs
pop
imul
fs
test
dec
pushf
adc
mov
test
insb
test
pop
out
xchg
or
jne
fdivrp
jg
popa
pop
mov
fs
cmp
rorb
push
cmpb
cmp
rclb
lcall
xor
fwait
sbb
adc
pop
pusha
pop
scas
pop
sbb
cmpsb
loop
jno
xchg
add
mov
std
pushf
aaa
add
fcompl
dec
dec
cwtl
jle
fwait
mov
add
adc
cmpb
push
inc
dec
adc
pop
lret
fiaddl
push
fimuls
jb
add
mov
fs
fstps
push
out
add
dec
test
dec
or
inc
stos
dec
inc
cltd
add
fldt
in
jne
cmp
push
pusha
jmp
cli
push
mov
dec
lret
leave
mov
jle
mov
mov
mov
pop
mov
mov
insl
aam
insb
xchg
dec
lahf
mov
into
aas
push
dec
cmpsb
ds
dec
sahf
fmuls
jnp
jo
inc
int3
push
mov
aaa
mov
pop
xor
pop
push
faddl
jnp
mov
jnp
mov
outsb
xchg
push
xchg
out
movsb
icebp
pop
ja
mov
push
inc
inc
pop
fs
rclb
scas
jecxz
mov
pop
das
mov
sti
bound
push
mov
fs
adc
pop
push
sub
repnz
in
push
cld
lea
outsb
je
mov
arpl
cmpsb
jbe
sbbb
dec
mov
add
mov
aaa
jae
rorb
push
into
cwtl
or
out
jb
pushf
add
pop
cmp
stos
fistpl
add
repnz
mov
test
js
aas
dec
sub
xor
xchg
mov
add
mov
nop
mov
lea
test
ret
lcall
mov
pop
jbe
std
aam
mov
bound
js
push
mov
pusha
in
push
xchg
pop
jp
cmp
xchg
mov
nop
mov
mov
rcl
lret
mov
push
pusha
push
je
jbe
inc
mov
pop
js
xchg
lret
cli
jo
out
hlt
mov
daa
fs
subb
jbe
jge
cmc
stc
pop
lods
fmull
sahf
addr16
test
lret
xchg
repnz
jnp
mov
push
scas
outsb
xchg
imul
push
mov
lret
rorl
jle
jns
loopne
repnz
push
loopne
ljmp
mov
lret
shlb
cmpsb
aam
jbe
pop
call
and
fsubl
gs
lcall
lods
jp
pop
sub
stos
mov
cmpsb
dec
shlb
push
or
mov
es
push
rorb
stos
sbb
aas
jl
mov
push
pop
nop
stos
dec
lret
dec
ljmp
pushf
fistpl
and
push
jbe
mov
sub
mov
out
sub
addr16
aam
push
push
cld
les
jp
push
stc
sahf
jl
xor
push
pop
pop
jo
xchg
mov
cs
xchg
lret
mov
jns
add
into
leave
dec
mov
jl
fsubs
daa
int3
pop
push
push
sub
fsubrs
lcall
jbe
mov
mov
lods
aam
add
lods
jp
lock
lock
out
int3
in
pop
add
jb
add
sub
aam
out
into
inc
mov
cwtl
add
dec
dec
xchg
cs
xchg
cmp
mov
xor
insb
mov
jo
xchg
mov
stos
mov
jo
sbb
shrb
push
in
pop
mov
push
jo
cmp
mov
xchg
pop
jp
cmpsb
inc
cmp
mov
jb
scas
fidivs
push
icebp
mov
inc
bound
jae
lods
fmull
and
loopne
pop
out
or
inc
into
aam
lcall
sub
lcall
dec
test
xor
mov
int
fstl
je
add
add
daa
mov
mov
mov
pop
push
into
cmpsb
lret
adc
push
fistpl
or
repnz
nop
jle
cmpsb
cmp
mov
ds
mov
xchg
mov
jg
push
insb
test
cmpsl
inc
and
push
mov
push
push
xchg
dec
xor
pop
scas
out
ss
lods
imul
andl
mov
lcall
jg
repnz
xchg
daa
scas
jbe
lods
sub
and
inc
cmp
fldenv
insl
lds
push
mov
out
mov
adc
cmp
sub
aas
js
dec
cltd
lcall
mov
jo
mov
lods
js
pop
dec
jne
jecxz
sbb
cwtl
outsb
test
dec
aas
lock
jbe
add
cmp
lret
test
movsb
in
mov
int
lock
ss
and
mov
mov
cmp
sahf
test
inc
cmp
jle
movsb
pop
pop
push
mov
xchg
mov
pop
aas
sub
test
enter
inc
lretw
pop
lods
add
push
scas
dec
xorb
mov
das
add
aam
fidivrl
lea
mov
mov
movsb
cmp
xchg
fs
mov
repnz
add
mov
mov
ljmp
testb
fcmove
je
pop
pop
fcompl
scas
dec
movsb
sahf
pop
sti
xlat
rclb
pusha
and
jb
xorb
std
mov
insl
and
cmpb
repnz
inc
add
lods
daa
mov
or
mov
mov
stos
fildl
call
mov
sahf
push
andl
fisubrl
jo
mov
xchg
int3
pop
addr16
lcall
push
lret
add
mov
mov
add
push
movsb
pop
test
insb
jbe
sub
jp
dec
mov
dec
jle
pop
neg
add
lods
cmp
test
xchg
sub
mov
inc
mov
mov
mov
shll
sub
xchg
jge
jge
fiaddl
inc
sti
mov
adc
aaa
sub
lods
or
dec
scas
or
cmp
inc
mov
pop
test
mov
mov
clc
aam
fcmovnb
int3
mov
xchg
push
lret
push
fdivrs
mov
xor
pop
into
mov
xor
jmp
insb
in
cmpsb
dec
shrb
pop
mov
rclb
jle
stc
mov
mov
jp
mov
fiaddl
jbe
rclb
dec
sahf
jbe
scas
int
jne
add
bound
dec
dec
je
fmull
mov
fwait
data16
mov
das
mov
mov
sahf
add
and
cwtl
or
mov
adc
add
das
dec
jp
out
test
data16
push
movsl
cmp
mov
lcall
mov
bound
dec
negb
sbb
int3
pop
mov
insb
inc
es
scas
dec
imul
mov
lods
jo
dec
lods
lcall
cmpsb
pop
push
hlt
mov
and
mov
insb
push
sbbl
xor
cs
mov
pop
ja
aaa
cmp
push
jge
pop
mov
movsl
add
mov
lods
add
dec
inc
mov
fildll
pushf
fs
cmpsb
sub
adc
inc
scas
loop
pop
cmp
push
fcomp
shr
cmp
xor
sbb
mov
push
inc
aam
in
fs
out
xchg
repz
mov
xor
lret
movsb
pop
pop
lock
repnz
nop
adc
xchg
scas
xchg
imul
mov
test
xchg
bound
test
mov
stos
jle
cmp
addr16
xchg
scas
pop
lret
mov
cwtl
mov
fildl
mov
pop
push
pop
testl
shrb
or
mov
or
in
mov
pop
jl
xchg
cmpsl
js
dec
jp
into
push
xchg
addr16
aam
pop
mov
fsubrl
cmpsb
xchg
cmp
js
fiaddl
or
inc
push
add
fnstsw
lds
outsb
pop
pop
pushf
xchg
gs
ret
int3
xchg
shlb
sbb
xchg
mov
cwtl
inc
mov
test
pmaxub
test
into
shlb
pusha
addr16
add
pop
int3
bound
sub
cmp
push
pop
mov
mov
pop
dec
mov
mov
mov
mov
lret
into
je
daa
mov
mov
inc
pop
cmp
jb
mov
cmc
cmpsb
sub
lcall
fcoms
push
pop
mov
pop
cmp
mov
das
mov
xchg
cmp
faddl
daa
jg
add
inc
stos
mov
lret
mov
insb
push
lcall
xchg
sub
aas
jg
push
jnp
pop
mov
out
push
mov
push
push
je
mov
jmp
stos
mov
or
js
mov
xor
mov
jns
outsl
add
lcall
and
js
xor
nop
pusha
cli
dec
mov
dec
mov
mov
dec
pop
mov
nop
cmp
dec
gs
mov
inc
mov
push
xor
mov
push
mov
xor
lock
push
mov
ret
test
movsb
inc
in
aam
xchg
movsb
fisubrl
int3
mov
jbe
aad
jnp
mov
negl
mov
popa
shlb
sub
lret
scas
out
add
iret
mov
sub
lret
cmp
mov
movsb
pushf
mov
push
add
std
pusha
mov
jo
pop
and
mov
cs
pushf
mov
pop
imull
lea
pop
mov
xchg
pop
mov
bound
sub
pop
sub
arpl
je
mov
xchg
sub
sub
xor
scas
mov
test
mov
fsubs
rol
pop
fildl
pop
jno
push
mov
inc
sti
call
hlt
mov
mov
and
pop
mov
and
xor
push
mov
insb
sbb
movsb
xor
mov
scas
leave
lahf
push
imul
test
push
jo
mov
std
stos
mov
cmovp
xlat
test
pop
mov
cmp
mov
outsb
int
shll
mov
inc
pop
pop
lock
mov
shrb
or
adc
fwait
jne
lcall
out
into
mov
ja
sub
lcall
push
push
push
addr16
insb
fcom
loopne
mov
pusha
pop
lcall
xor
nop
frstor
addr16
push
cmc
cmpsb
sti
mov
flds
lods
shrb
lods
aad
stos
add
push
int3
scas
aad
ds
dec
jbe
mov
pop
and
faddl
dec
pop
aad
sar
cmp
movsb
rclb
pushf
jge
data16
into
arpl
sbb
sbb
fstpt
xchg
sbb
rcrb
or
aam
add
frstor
xchg
fcoml
inc
jl
cwtl
mov
dec
sbb
scas
test
mov
in
fcomps
xor
es
lods
dec
fcompl
add
movsb
pop
add
jne
lds
push
pusha
fsubs
add
loopne
mov
hlt
orl
test
jl
sahf
push
les
loope
pop
mov
les
mov
lret
dec
movsb
and
jne
in
jb
insb
aam
sahf
cld
imul
sbb
loope,pn
adc
jno
add
fimuls
adc
sbb
pop
pop
psllq
fs
inc
js
pop
or
cmpsb
ja
dec
sahf
jg
jo
cld
mov
jl
mov
or
loopne
lcall
mov
int3
push
loop
pop
ds
sub
xchg
adc
inc
and
dec
push
sahf
fcom
or
loopne
out
adc
ds
sub
mov
repz
xor
lds
stos
aam
ss
outsb
push
add
pop
test
out
fwait
dec
aaa
jb
mov
rdmsr
jmp
hlt
movsb
and
dec
pop
and
add
je
into
mov
add
pop
pmuludq
cmp
out
xor
into
es
lea
and
sub
mov
mov
cmpsb
rclb
push
mov
outsb
or
xchg
jp
xchg
dec
add
push
dec
sub
pop
pop
sarb
outsl
jl
push
mov
jo
out
jge
cmpsb
push
pop
test
mov
and
stos
pop
je
mov
cmp
movsb
shrb
cltd
mov
mov
and
mov
ret
mov
or
fcmovnb
adc
mov
xchg
repz
stc
jecxz
dec
lods
mull
js
mov
mov
popf
pop
mov
pushf
mov
data16
adc
popl
dec
mov
adc
dec
sahf
pop
pusha
or
add
cmp
mov
jb
sub
cwtl
cli
mov
je
push
popa
mov
pusha
mov
jg
int
pop
imul
jae
das
push
pusha
lods
mov
pop
fs
jnp
xchg
mov
dec
jecxz
mov
insb
mov
out
push
arpl
mov
sbb
scas
dec
cltd
jb
cmp
cmp
push
xchg
mov
mov
adc
sti
jg
and
cld
inc
lcall
add
add
fidivrs
pop
mov
fldt
mov
pop
hlt
dec
into
add
fdivrs
mov
jge
adc
pop
mov
lea
popa
push
sahf
xlat
sbb
fdivrs
nop
stc
add
lods
ljmp
inc
arpl
decb
sete
or
pusha
movsb
cmp
push
mov
mov
or
ror
fs
outsb
enter
movsb
scas
cmpsb
jp
jae
adc
xchg
lods
mov
or
scas
int3
ja
lret
pop
scas
sub
js
jne
rorl
mov
addr16
int3
mov
sahf
js
pop
cmpsb
mov
aas
movsb
lcall
dec
pop
sahf
mov
mov
inc
xchg
push
je
popw
pop
dec
dec
add
stos
lods
mov
pop
sbb
mov
xor
adc
mov
xor
sahf
jb
sbb
push
pusha
push
pop
mov
cmp
dec
push
push
push
cmp
cmpsb
test
push
xchg
push
mov
daa
sbbl
jp
mov
cmp
pop
rclb
lods
dec
jb
sbb
push
scas
fs
mov
fsubrs
mov
dec
xor
dec
cmp
pusha
jo
cltd
cmp
jp
adc
fs
push
pop
das
into
dec
shlb
das
fcoml
js
fmuls
psrld
aaa
inc
pusha
test
push
cmp
push
lret
xchg
and
jle
stos
or
cmp
pop
pop
inc
mov
pop
test
int3
dec
cmp
outsb
into
jno
ljmp
js
je
mov
jp
ja
xor
fs
in
push
fimull
mov
jge
push
sbb
rclb
cmp
pushf
scas
ret
ret
lret
mov
fcomp
dec
hlt
mov
in
lock
or
scas
jns
iret
mov
cwtl
pop
leave
add
inc
cmp
push
pop
jp
lahf
mov
mov
movsb
or
loopne
pop
fidivrs
fmuls
ret
lods
jp
cwtl
mov
loop
add
xchg
inc
dec
int
push
jb
fwait
dec
mov
ret
lods
movsb
jbe
repz
mov
lods
push
ficomps
mov
sub
outsl
loop
in
dec
xor
and
cmpsb
sbb
xchg
pop
pop
fcoms
cs
mov
mov
cs
sub
test
pushf
mov
inc
cmp
xchg
cwtl
lods
pop
adc
fidivs
outsl
shrb
lcall
push
mov
movsl
scas
jb
pop
testb
mov
lret
imul
lcall
lods
out
scas
mov
aas
cmpsb
dec
xchg
lret
inc
rcrl
mov
lret
aaa
adc
dec
inc
push
push
dec
mov
ret
fsubr
scas
cmp
movsb
mov
nop
popf
clc
test
xchg
call
movd
daa
daa
mov
xor
lret
sub
fs
dec
sub
dec
push
dec
sarb
in
outsl
loopne
mov
aam
add
cmp
int3
and
mov
push
imulb
sub
jnp
pop
inc
ja
scas
xchg
mov
test
pusha
cwtl
int3
adc
add
fdivrs
mov
shrb
mov
shrb
pop
je
mov
insl
xchg
dec
bound
jo
jbe
in
lahf
push
xor
xchg
je
int
mov
add
pop
adc
hlt
pop
sbb
push
mov
les
and
mov
mov
add
xor
add
adc
push
xorb
dec
mov
arpl
xchg
xor
push
das
into
lcall
jne
outsb
mov
cmp
mov
push
int3
scas
lods
mov
mov
inc
addr16
sbb
mov
loopne
mov
jg
cmp
jl
nop
movsb
mov
pushf
xchg
mov
add
xchg
ss
in
inc
xor
jae
iret
mov
call
inc
xchg
xchg
add
jbe
inc
add
jmp
dec
in
push
or
dec
mov
mov
cmp
add
ret
adc
xchg
push
fimuls
stos
dec
cmp
push
insb
enter
add
fwait
adc
insb
sub
pop
push
daa
mov
jo
xchg
lret
std
addr16
cmp
sub
out
add
aaa
xchg
movsb
pop
xchg
shll
mov
shrb
push
jle
ss
jp
insb
call
push
cmp
mov
nop
pushf
imul
ret
cmp
mov
cli
test
dec
popf
add
dec
dec
pusha
outsb
xor
div
and
nop
in
mov
pop
int3
pop
lods
pop
lret
bound
xchg
jbe
mov
mov
mov
repnz
mov
out
leave
mov
cmp
dec
je
add
pop
lret
rcr
or
mov
orl
fistpl
sti
int3
mov
inc
fisubrs
cmpsb
mov
js
mov
int3
mov
push
rcrb
in
cmp
jbe
arpl
mov
dec
fs
dec
js
sbb
bound
jge
stos
jge
fcom
in
cmpsl
dec
hlt
pop
or
pushf
push
jo
and
scas
rclb
pop
cwtl
sub
dec
pushf
mov
adc
add
js
lock
int3
lret
xor
data16
jge
in
jo
lods
jp
pop
inc
in
mov
ja
jbe
push
fdivrl
sbb
mov
mov
lret
xchg
outsl
xchg
fistl
dec
int3
stos
out
mov
rcrb
into
test
dec
push
xchg
push
add
xchg
xchg
ja
mov
push
out
or
pop
mov
mov
or
sbb
cwtl
jg
sti
loope
cli
test
fwait
adc
xchg
pop
sub
sub
sub
xchg
cmp
jo
jo
out
sti
jg
movb
jo
and
cmpsb
cmp
fwait
lcall
pusha
fdivrl
mov
lods
push
movsb
das
push
aaa
sahf
dec
out
std
sub
and
pop
fs
aaa
lret
outsb
jae
push
jns
jecxz
and
cwtl
ret
dec
and
jb
cltd
in
stos
mov
push
mov
pop
or
sub
mov
push
rcl
lods
push
push
nop
fdivl
insb
sti
push
pop
test
lret
mov
jmp
stos
xor
cs
or
pushf
pop
adcb
jb
lock
popa
das
dec
push
pop
dec
and
mov
pop
and
dec
mov
pop
mov
adc
xchg
jnp
cmp
scas
jo
push
test
mov
fldt
pushf
jp
dec
jbe
jge
nop
pop
inc
mov
mov
cmp
mov
sti
lret
mov
mov
jno
lea
jge
lods
inc
repnz
outsb
push
mov
pop
scas
test
push
xchg
jb
cmpsb
in
pusha
fcomps
imul
stos
in
adc
mov
imul
pushf
jmp
pop
mov
mov
or
fadds
mov
pop
xchg
mov
daa
daa
and
rcll
push
lcall
mov
mov
daa
push
mov
inc
sbb
sahf
stos
mov
int3
sub
xchg
dec
sbb
jnp
dec
jg
jo
adc
nop
mov
mov
movsb
dec
sub
xchg
loopne
shlb
fsubrs
push
xchg
add
jmp
cmp
jle
jg
mov
mov
test
inc
nop
add
pop
cwtl
cmp
fmull
fistps
sub
mov
cmp
dec
jl
bound
dec
mov
lods
jnp
xchg
mov
push
jbe
aas
sahf
mov
pop
pusha
mov
and
jo
mov
mov
pop
out
or
int3
pop
push
pop
push
mov
lret
xchg
xor
rcrl
fcmove
popa
cltd
rcr
cmp
xchg
mov
lret
lret
sar
stos
pop
jb
pop
or
mov
push
xchg
test
out
mov
mov
ss
je
or
xor
pusha
cs
cltd
cwtl
fcmovbe
dec
lods
int3
pop
sbb
pop
fs
pusha
mov
je
mov
test
pop
lret
jl
mov
movsb
stc
cmp
push
dec
pop
xchg
push
cmp
cmpsb
bound
xchg
aaa
test
push
xchg
stos
outsl
push
popa
daa
aam
push
ficomps
lods
fmull
or
add
jp
cld
mov
stos
cwtl
in
add
fcmove
lods
fsub
stos
adc
into
cmp
mov
popa
mov
xor
mov
lret
adc
enter
test
lock
stc
cmpsb
push
pop
adc
call
fisubl
fdivl
push
mov
into
xchg
aam
dec
mov
test
sti
pop
pop
ret
push
rol
xor
adc
int
outsl
add
adc
xchg
pop
sbb
jb
test
pushf
push
sub
fimull
ljmp
cmpsb
jo
push
xchg
jmp
dec
pop
pop
mov
leave
push
shll
fimull
gs
mov
int
in
xor
pop
sti
dec
icebp
std
cmp
xchg
push
mov
cmpsb
fdivr
rorl
cmp
pop
out
sbb
mov
fwait
add
push
or
dec
fs
test
pop
fcomps
jbe
in
scas
int
xchg
jo
mov
pop
mov
je
or
test
dec
and
pop
daa
dec
fisubl
pop
mov
mov
inc
dec
push
cmp
mov
cs
fidivrs
test
mov
imul
aam
js
cmp
mov
mov
mov
dec
dec
pop
mov
fmul
or
orl
push
sahf
jmp
out
out
xor
lds
rcrl
shrb
xchg
push
dec
adc
lcall
aaa
sahf
ficoml
jo
sbb
movsb
jbe
dec
push
ja
out
xchg
push
icebp
push
sbb
mov
lds
mov
cmpsl
fmuls
pop
push
add
fnstcw
sbb
dec
push
inc
es
aaa
rclb
mov
inc
dec
add
fs
mov
rcr
js
jo
cwtl
adc
mov
sbb
lcall
pop
xor
lcall
xor
movsb
fcmovb
in
jbe
mov
fdivs
pushf
mov
jns
js
dec
roll
ficoms
fcomps
daa
mov
push
xor
push
pusha
insb
rcrb
cmp
je
outsb
dec
lret
sbb
jb
push
loopne
fsubs
sub
test
cmp
mov
out
movsb
mov
enter
xchg
mov
jo
and
stos
movsb
dec
pushw
xchg
mov
mov
dec
movsb
xchg
cli
inc
mov
jae
add
into
orb
mov
sbb
lret
mov
or
pushf
scas
test
or
dec
xchg
mov
in
push
data16
sub
loop
repz
fisubrs
add
outsb
add
loop
movsl
mov
addr16
movsb
fimull
scas
aam
pop
jg
pushf
dec
push
mov
jbe
mov
jo
imul
mov
lret
jae
scas
sbb
xor
je
cmc
xorb
push
mov
cmpsb
dec
in
mov
push
or
inc
mov
push
lods
inc
shll
cmpsb
lret
arpl
shll
push
pop
insb
or
dec
fs
push
gs
fmuls
scas
insb
aaa
lret
nop
dec
js
mov
jnp
hlt
fcomp
pop
je
push
jbe
mov
pop
add
and
aas
int3
fistl
mov
push
adc
push
sti
sti
xchg
ficoms
jp
pusha
cmp
bound
stos
test
fdivl
daa
sahf
mov
pop
dec
sub
xchg
je
popf
cmp
sahf
mov
mov
or
jp
cwtl
push
xchg
jbe
dec
cmpsb
movsb
mov
pop
jb
cmp
insb
bound
mov
dec
push
and
mov
dec
cmp
pop
data16
lret
push
in
sbb
into
push
jle
rcr
jbe
shll
pushf
out
lret
fsubl
xorl
cmp
push
push
enter
daa
test
cmp
sti
ljmp
cmp
scas
push
pop
call
bound
and
aam
lret
mov
inc
fwait
mov
dec
cmp
movsb
jo
pop
sbb
mov
ss
icebp
cmp
fs
cmc
inc
fwait
mov
fimuls
or
std
push
push
xchg
sbb
mov
in
adc
je
add
jo
push
je
cli
into
mov
lret
iret
add
pop
jge
pop
mov
push
mov
aam
push
pusha
test
lret
mov
add
nop
dec
mov
jo
adc
fimull
add
jl
test
or
test
push
or
jb
xor
adc
pop
xor
pop
nop
fisubl
lcall
adc
stos
sub
fldcw
mul
xchg
dec
mov
mov
dec
mov
fs
push
inc
repnz
daa
pop
push
fisttps
adc
inc
lock
aas
outsl
jo
cltd
mov
punpcklbw
adc
imul
inc
into
ficompl
add
mov
jae
popa
xchg
mov
popf
pop
sbb
pop
or
movsb
fsubr
loop
nop
fs
insb
je
cmp
js
sahf
inc
mov
data16
insl
xchg
movb
push
push
sbb
hlt
lret
and
fs
and
repnz
movl
insb
lods
push
data16
push
mov
dec
fidivl
aam
mov
sti
jae
dec
lcall
push
shrb
mov
jp
jmp
jle
xorb
jb
inc
cli
cli
add
outsb
ret
enter
mov
loope
lods
jge
cmpsb
shlb
js
int3
jo
or
sbb
pushf
mov
js
call
data16
lods
xchg
cmp
sbb
sub
cmpsb
pop
faddl
sbb
add
mov
dec
dec
sub
shl
arpl
movsb
ficompl
push
xchg
in
lcall
mov
outsl
shlb
pusha
je
js
in
insb
mov
fucomp
aam
outsb
aam
cmp
lcall
lcall
iret
into
pop
mov
icebp
push
jg
lock
dec
push
rcr
mov
dec
mov
sbb
jecxz
into
adc
pop
push
loopne
outsb
mov
mov
js
push
fwait
push
xchg
sub
push
add
jle
push
fs
loop
push
je
inc
cld
fsubrs
inc
jo
loope
sub
xor
pop
ret
dec
mov
rcll
roll
insb
add
dec
out
clc
mov
int3
adc
sub
cwtl
fcompl
cld
shl
mov
mov
lcall
shlb
pop
dec
sti
xor
push
xchg
outsb
mov
shrl
ljmp
lds
outsl
add
mov
push
mov
push
sub
sbb
mov
je
dec
out
shrb
fsubrs
mov
sbb
icebp
loopne
inc
out
je
inc
mov
jno
push
aam
clc
push
dec
cmpsl
imul
inc
cmp
push
stos
jmp
push
subb
inc
push
lods
ja
call
adc
and
sti
add
icebp
roll
enter
and
fldenv
in
push
dec
sbb
sar
cwtl
int3
stos
dec
push
push
cltd
or
jge
ljmp
add
roll
sub
mov
inc
dec
mov
imul
pop
fisubrl
xchg
hlt
or
dec
icebp
sarb
orb
test
js
push
data16
stos
push
lds
sub
adcb
leave
mov
dec
xchg
adc
fistpll
inc
test
int3
cmp
mov
push
mov
je
jo
push
ds
jne
mov
dec
push
jb
scas
ret
fs
adc
mov
or
ficoml
rcrb
dec
clc
and
pop
push
pop
loopne,pt
imul
push
test
dec
int
cmpl
mov
adc
push
shr
add
test
dec
lock
lahf
sti
pop
mov
fsubr
mov
xchg
mov
hlt
mov
and
add
fnstcw
stos
dec
mov
lods
mov
dec
sub
cwtl
cmpsb
nop
arpl
mov
mov
imul
out
lret
cld
lea
ds
fcmove
out
leave
mov
mov
mov
clc
push
xor
sbb
jp
rol
cmp
mov
dec
pusha
mov
mov
ret
cmovne
scas
xor
outsb
arpl
push
push
jl
xchg
lret
clc
int3
je
sbbl
sti
in
lret
int
js
outsb
dec
pop
sti
mov
stos
pop
and
mov
pop
push
in
dec
js
jns
repz
fdiv
jg
mov
inc
subb
jo
dec
cmp
inc
pusha
mov
shl
inc
das
add
mov
lods
jbe
mov
sahf
test
aaa
or
push
mov
imul
jbe
lret
fidivs
xchg
xlat
pop
pusha
add
mov
je
pop
fcoms
mov
sub
cmp
pop
pushf
pop
sti
push
insb
shr
mov
in
add
lret
mov
push
and
mov
nop
lret
negl
add
dec
mov
cmpsb
out
push
scas
lcall
push
pop
cmpb
jbe
cmpsb
testb
push
or
xchg
sbb
in
jbe
mov
int3
aas
xchg
jnp
mov
cmp
cwtl
aaa
jo
inc
xchg
pop
push
scas
push
nop
out
xchg
int3
jl
sbb
stc
ret
into
hlt
int3
cmpsb
pop
aam
pop
sbb
js
hlt
jb
dec
rol
fcmove
scas
cmpb
fidivrl
dec
lods
jmp
jb
mov
and
imul
jge
and
stc
jge
imul
mov
pop
mov
movsb
sbb
mov
mov
mov
or
ja
lea
xchg
ja
mov
dec
xor
sbb
insl
sub
lcall
pop
mov
mov
fwait
sub
mov
cmp
xchg
int3
xchg
pop
sar
daa
pusha
pop
mov
mov
mov
add
cmp
mov
xchg
mov
jl
push
jo
pop
dec
aaa
dec
pushf
cmpsb
pusha
rorb
daa
mov
fs
cmp
cli
mov
ret
dec
lret
add
mov
rolb
xor
je
mov
xor
mov
mov
mov
insb
push
dec
lret
cmp
rorb
scas
and
sub
sbb
dec
loopne
rorb
pushf
mov
je
in
xor
cs
jle
mov
repz
dec
jbe
xchg
push
fmul
xchg
dec
dec
mov
sbb
push
outsb
mov
daa
into
mov
int
xchg
pop
lods
mov
js
cs
mov
rol
mov
dec
jb
and
pop
mov
mov
popf
add
sarl
data16
xchg
mov
js
nop
push
pop
pop
sbb
push
mov
sahf
adc
jbe
pop
xor
add
push
in
dec
adc
nop
into
push
push
lcall
lret
sbb
or
in
jmp
int3
and
lods
inc
cmp
push
scas
insb
int3
sahf
cmpsb
mov
pop
gs
mov
stos
movsb
outsb
cld
outsb
lcall
cmp
jbe
xchg
mov
fisubrs
pushf
pusha
std
pop
xchg
cmp
fisubrl
jmp
mov
pushf
out
out
push
push
push
int
imul
mov
in
fimuls
mov
dec
stos
xchg
dec
sbbb
lcall
mov
xor
mov
dec
cmp
lea
imul
lods
rclb
stos
push
rcr
in
dec
mov
lcall
ds
test
lods
lret
jo
cmc
pop
cmpsb
mov
in
pop
mov
push
sbb
xchg
movsb
inc
mov
mov
cs
cmp
mov
imul
sbb
lock
in
aaa
pushf
fcomps
sbb
pusha
or
ret
mov
in
les
lcall
jg
cmp
mov
push
xlat
std
sub
inc
cmpsb
lods
sub
jp
daa
mov
mov
pop
popf
add
push
addl
mov
fcmovbe
xchg
jae
mov
cmpsb
scas
add
jp
test
addr16
lock
gs
xor
stos
or
adc
test
xor
cwtl
inc
add
mov
and
xchg
sub
aam
cmp
push
rorb
jl
std
and
clc
fs
mov
pop
arpl
jb
cmp
mov
inc
fisubs
mov
cs
leave
xor
sub
insb
inc
fidivrs
push
dec
int3
xchg
mov
ss
and
insb
scas
sti
sbb
lret
arpl
pop
push
test
add
add
mov
pop
ret
push
outsb
mov
dec
cmpsb
lcall
push
adc
sub
mov
inc
push
rcl
xlat
fisubs
and
outsl
jmp
je
mov
insb
push
scas
cs
jl
lcall
xor
leave
cld
xlat
ficomps
lods
rolb
pop
and
outsb
mov
push
xor
mov
retw
jge
mov
pop
xchg
inc
push
addr16
dec
cli
fisubs
lock
lock
adc
push
fisubrs
repz
gs
mov
daa
push
mov
cmp
sahf
pop
xchg
jae
test
xchg
xchg
fwait
jns
dec
unpckhps
dec
lret
pushf
das
scas
mov
inc
jmp
jbe
dec
mov
je
push
and
hlt
out
dec
cmp
xor
pop
cld
cmp
insb
dec
movsb
pop
jo
pop
push
je
sub
mov
jl
xchg
aas
push
dec
je
insb
imul
mov
sbb
gs
cmp
or
lods
std
in
push
mov
fdivrl
lcall
dec
jb
pop
movsb
fdivs
xchg
cmp
mov
popa
xchg
cmpsb
lods
fcoml
inc
js
lcall
mov
cmp
loopne
insb
push
push
add
push
push
daa
punpcklbw
mov
pop
dec
ret
dec
push
aam
js
pop
bound
and
jl
inc
push
pop
stos
mov
dec
shlb
xchg
fs
je
mov
dec
mov
test
adc
lods
add
icebp
popf
out
sub
movsl
je
mov
int
add
sub
test
mov
fdivs
and
mov
adcl
ds
cmpsb
out
bound
pop
sbb
pushf
nop
pushf
push
sbb
lcall
jne
js
fisubrl
mov
mov
cmp
dec
mov
test
outsb
data16
and
mov
pop
mov
out
ret
xor
je
aaa
movsb
pop
enter
cltd
and
data16
call
push
fucomip
push
push
inc
je
mov
pop
mov
pusha
mov
cwtl
mov
add
jbe
add
push
mov
pop
push
xor
mov
jnp
shlb
pusha
outsb
nop
movsb
rorb
or
jmp
pop
pop
stos
push
pop
push
xor
outsb
ret
push
fsubs
pop
insb
jp
mov
cwtl
je
mov
cmp
pusha
sahf
pop
imul
mov
adc
mov
jb
in
dec
sub
inc
fidivrl
xchg
mov
push
jp
ljmp
outsb
movsb
in
xchg
inc
sbb
cmp
rcrb
pop
ret
jp
movsb
sahf
imul
lods
mov
pushf
pop
aam
les
int3
cwtl
mov
enter
jecxz
cmp
shlb
mov
mov
lods
stos
xor
xchg
movsb
cli
push
lahf
pop
pushf
sbb
fimull
inc
js
sub
mov
daa
pop
test
add
mov
fs
push
les
data16
mov
stos
push
push
xchg
mov
shl
mov
pusha
test
dec
cwtl
incb
lods
mov
out
cmp
push
outsb
dec
push
cmpsb
addr16
mov
hlt
and
daa
repnz
test
stc
add
fcoms
lods
push
or
ja
stos
scas
pop
pusha
push
bound
dec
lock
mov
fbstp
mov
enter
aam
mov
and
xchg
sub
push
es
ret
xchg
fs
stos
addr16
out
mov
mov
js
sub
add
sub
dec
lods
shr
jnp
fwait
mov
into
xchg
pushf
xor
pusha
je
pushf
push
fisttpll
fdivs
sahf
mov
hlt
push
fiaddl
adc
out
arpl
sbb
movsb
push
pushf
inc
lods
lret
jg
pop
in
mov
inc
sub
insb
sub
xor
mov
xchg
repz
mov
lods
pusha
mov
jnp
stos
push
lds
lods
lcall
sub
and
adc
cmpsb
movsb
cmp
into
push
inc
mov
outsb
incl
mov
mov
mov
lds
dec
cmp
pop
sbbl
dec
mov
or
js
mov
xchg
sbbb
cmp
test
mov
mov
popa
iret
cmp
fidivs
js
lods
pop
nop
pop
jge
mov
lods
cmp
int3
cmp
in
cli
cmp
jle
lret
imul
test
inc
bound
je
test
arpl
cld
sub
mov
dec
xor
insb
call
and
mov
das
mov
dec
std
test
sbb
xchg
mov
adc
add
test
inc
mov
inc
into
fiaddl
nop
add
arpl
ret
sbb
pop
xchg
mov
into
xchg
push
cmp
xchg
cmp
jb
push
fisubrl
jns
fisubrl
mov
scas
stos
mov
fwait
cmp
dec
shl
mov
add
nop
fdivrs
bound
push
push
mov
mov
inc
cwtl
fidivrl
gs
repz
lods
sbb
bound
pushf
lahf
push
add
or
mov
movsb
push
cmp
test
scas
pushf
cwtl
push
xchg
lret
movl
fmull
pop
lcall
lret
add
fs
cpuid
adc
jp
xchg
pusha
scas
ficoml
dec
push
xor
mov
imul
js
nop
cwtl
cmp
mov
add
mov
lods
out
jl
pop
test
js
mov
or
push
shlb
mov
insb
mov
mov
push
rcr
pop
add
xor
xchg
data16
lret
fs
pop
pop
add
mov
jl
xor
add
and
sub
pop
push
jo
push
scas
cld
into
sarb
cmp
fisubrl
jbe
push
push
mov
das
adcl
jne
jne
mov
scas
js
mov
sarb
mov
cli
movsl
jp
add
js
nop
pop
bound
ja
stos
inc
sub
xchg
cs
lret
mov
fs
pop
dec
lds
sub
lods
mov
push
sub
test
push
pop
cmp
and
repnz
dec
push
movsl
mov
movsb
push
nop
pop
mov
sbb
jae
stc
lea
cld
mov
inc
test
push
js
fidivrs
dec
fcomps
inc
aam
mov
push
sub
mov
pop
outsl
ret
push
pop
stos
pop
pop
test
xor
jp
enter
mov
cmp
dec
xchg
push
cmp
nop
pop
xchg
aam
push
cmpsl
les
push
je
hlt
add
lods
testl
xor
imul
xchg
fdivrs
push
pop
rorb
lods
mov
lcall
mov
mov
cmp
jmp
hlt
push
rcrb
sbb
and
add
outsb
push
mov
pop
out
jp
cmpsb
fdiv
mov
add
jp
stos
jp
fcoml
push
xchg
mov
cmp
cltd
cmp
mov
mov
dec
jne
mov
cmp
sti
in
into
push
lods
out
mov
push
arpl
int3
add
mov
insl
das
mov
mov
mov
cmp
outsb
shlb
repz
mov
fcoms
dec
sbb
lods
clc
adc
mov
cmp
std
pop
dec
pop
fisubrl
dec
nop
fstl
int
lret
je
int3
jne
iret
add
dec
pushf
sub
fiaddl
mov
push
jbe
lea
dec
bound
fidivs
movsb
stos
push
pushf
xchg
mov
and
hlt
mov
mov
or
jns
mov
jp
orb
cmpsb
lods
jp
pop
subb
mov
scas
mov
test
movsb
push
jle
adc
pushf
imul
mov
lcall
ret
clc
std
dec
aam
movsb
daa
enter
mov
pop
insb
out
sbb
jnp
mov
int3
push
mov
xchg
dec
movsb
add
hlt
mov
jbe
lret
cld
fcmovnu
inc
jl
dec
lods
mov
je
repz
hlt
pop
pop
mov
out
lcall
sub
push
dec
xor
shlb
dec
cmp
mov
push
jp
mov
xor
pop
mov
rcl
bound
xchg
sub
aaa
jmp
pop
hlt
add
sbb
pop
push
pop
cwtl
ss
into
in
fstp
rolb
nop
sahf
aam
push
data16
pop
jb
add
add
dec
fistpl
mov
mov
sub
aaa
outsl
stos
sar
jae
stc
lea
cmp
out
jo
int3
hlt
dec
fidivrs
add
in
cli
loop
push
mov
les
pop
aam
mov
les
fmull
lcall
push
sub
nop
pop
in
mov
jne
int3
add
jae
hlt
and
pop
jbe
mov
add
mov
xchg
pop
sbb
and
pop
dec
pop
mov
das
or
adc
mov
push
cmpsb
std
pop
mov
lcall
fdivrl
or
movsb
mov
cmp
push
sbb
pop
dec
mov
stc
test
cli
clc
lret
and
lret
in
cmp
push
xchg
sahf
push
adc
pop
fmul
mov
shrl
pop
fildll
mov
cwtl
pop
repnz
mov
test
outsb
daa
mov
mov
sbb
mov
xchg
xchg
in
sarb
std
sahf
push
xor
das
cwtl
inc
mov
pop
nop
push
nop
mov
mov
out
subb
adc
add
xchg
les
push
dec
push
lods
repnz
add
lret
jbe
lods
sbb
cmp
mov
rcr
aam
dec
mov
jb
mov
call
pop
pusha
xchg
xor
dec
fsts
mov
cld
and
je
lcall
shrb
jo
movsb
or
out
sahf
push
aas
dec
repz
cmp
pop
push
jp
cmp
and
xor
in
push
inc
adc
jg
cld
insl
sarl
dec
jp
cmp
je
sub
insb
pop
shll
mov
and
popf
mov
jp
iret
mov
pushf
mov
fs
add
lcall
ljmpw
js
or
hlt
into
scas
cmp
push
pop
push
dec
mov
pusha
dec
sub
popf
sub
dec
mov
xchg
xchg
mov
jnp
pop
out
lret
sbb
sti
adc
gs
cmp
or
cmc
into
lods
ds
insb
jbe
dec
into
inc
je,pn
mov
dec
sub
out
daa
push
add
adc
pop
mov
movsb
pop
inc
sub
in
jns
jo
mov
jp
cld
xor
push
sahf
insl
jl
shll
int3
inc
mov
std
pushf
and
jmp
hlt
pusha
mov
das
popa
rcrb
mov
mov
and
fdivs
insl
dec
sub
pushf
jae
imul
bound
mov
jnp
mov
xchg
mov
adc
mov
mov
into
shrb
jb
cmp
dec
leave
mov
imul
loopne
mov
daa
fs
test
xchg
push
loope
inc
jl
jb
ds
pop
sahf
movsb
out
dec
cmc
ss
scas
mov
loopne
add
cwtl
pop
jbe
add
xor
pop
push
dec
ud1
sub
mov
mov
mov
pop
lcall
lret
pop
clc
cmp
test
jbe
fiadds
rorl
mov
fiaddl
jecxz
icebp
hlt
mov
lcall
test
test
rcll
cwtl
mov
jmp
in
push
dec
pop
xor
lock
lods
in
lret
sub
fdivrs
mov
pop
mov
cmp
dec
cmp
daa
lcall
xor
jbe
mov
dec
int3
sar
das
mov
repz
fdivrl
js
lods
pusha
lock
test
xchg
pop
adc
mov
lods
out
inc
cwtl
pop
scas
stos
dec
add
mov
push
fcoml
pop
jb
sub
cs
fstpl
sbb
bound
ljmp
movsl
fs
fdivl
sub
push
inc
jae
push
push
fcoml
rcrb
mov
pop
add
sub
into
in
sbb
lret
cld
xor
inc
test
and
xchg
mov
add
lods
xchg
insb
mov
xchg
push
mov
fmuls
je
cmpsl
mov
cmp
mov
jb
dec
or
ss
popa
jnp
outsb
sti
jmp
nop
loopne
sahf
cli
das
scas
push
fcomps
ja
push
sub
mov
outsb
add
out
pop
add
data16
cltd
ja
mov
andl
jmp
rep
sub
sahf
and
push
ds
dec
jecxz
sub
dec
aas
sahf
loopne
daa
lcall
iret
push
les
push
dec
dec
jo
into
lods
push
dec
cwtl
pop
pushf
shlb
sbb
inc
mov
lret
loop
fsubrs
mov
mov
pusha
inc
je
aam
fisubrs
push
xchg
or
pushf
cli
loope
fnstenv
popa
fcom
scas
mov
popf
out
push
mov
pushf
xor
push
xchg
cmp
mov
fcomps
mov
jo
scas
xor
mov
dec
xchg
leave
lods
xor
test
movsb
cmpsb
cmp
bound
insb
shl
fsubrl
inc
arpl
xchg
lret
lret
push
dec
arpl
or
testl
scas
movsb
mov
fisubrl
push
fsubl
insb
inc
push
bound
inc
in
fiaddl
shl
ja
jp
lcall
lock
sar
add
sbbb
mov
mov
out
push
inc
lods
jo
dec
aam
bound
arpl
dec
lret
fdivs
in
xchg
jge
pop
push
mov
rorl
push
pusha
jmp
xor
xor
mov
or
repnz
pushf
inc
mov
scas
dec
out
movsl
mov
dec
out
mov
xchg
setle
enter
shrb
outsb
out
mov
ret
cmp
pop
stc
xchg
dec
jb
sti
xlat
mov
jbe
int
pop
rclb
push
xchg
mov
stos
pop
pop
xor
in
insb
dec
inc
push
add
mov
pop
je
fadd
dec
xor
lcall
mov
pusha
pop
rorl
rolb
enter
lcall
fs
cmp
push
dec
inc
dec
pop
test
fsubp
out
cmp
add
push
cld
aad
sarl
xchg
scas
cmpsl
jbe
dec
mov
pop
push
mov
mov
lcall
hlt
pushf
sbb
pop
mov
sahf
cmpsb
das
jb
int3
out
mov
scas
hlt
nop
xchg
mov
shl
and
outsb
mov
pusha
repnz
shl
xor
mov
cmpsb
lods
mov
js
adc
les
xchg
mov
cli
adc
aam
js
sub
push
jae
or
sbb
es
push
lcall
data16
fcoml
mov
push
sub
mov
sbb
cwtl
loopne
lcall
lea
dec
in
ret
pop
lods
fadd
mov
push
xchg
nop
jnp
je
inc
mov
mov
mov
cmpsb
cmp
xchg
testl
adc
xor
lds
xorb
jp
sub
or
mov
imul
mov
lret
loopne
inc
lea
movsb
xchg
ret
mov
in
mov
or
je
pop
movsl
push
movsb
pop
iret
adc
pop
push
aaa
push
fisubl
rcrl
mov
fisubrs
ja
pop
fcoml
test
in
dec
fsubrs
pop
xchg
sahf
mov
movsb
mov
loop
fisubl
dec
repnz
push
sbb
pop
lods
mov
arpl
ljmp
dec
shrb
bound
add
inc
mov
sub
sahf
mov
ds
dec
fs
test
aaa
mov
pop
jne
push
imul
xchg
int
outsl
xor
movsl
sub
lock
rclb
jecxz
xchg
inc
into
mov
add
push
sahf
arpl
cmp
mov
mov
xchg
cmpsl
movsb
dec
mov
nop
sahf
rorb
push
je
jnp
test
popw
out
push
adc
scas
push
pop
insb
lret
lods
das
lock
into
mov
add
cmp
mov
adc
xor
pop
and
lret
xchg
push
test
ss
push
mov
cmc
loopne
mov
arpl
ficompl
mov
fmuls
xor
mov
imul
stos
cmpsl
pop
pop
add
add
mov
mov
out
cmp
mov
jbe
or
lods
push
into
xor
and
xchg
popl
jno
cmp
mov
ss
pushf
enter
insl
mov
mov
lock
xor
jb
push
cwtl
sub
nop
jno
mov
push
cmc
sbb
cmpsl
pop
mov
test
jo
lock
push
lods
sbb
or
cmp
pop
push
nop
out
cld
xchg
movsb
popa
cli
and
and
adc
lds
loopne
push
mov
or
add
xchg
outsb
ja
xor
xchg
dec
daa
scas
push
cmp
sti
ficompl
aaa
insb
fsubrl
imul
ficompl
mov
lcall
dec
addr16
lods
sti
nop
and
jp
aam
sti
mov
das
scas
out
push
dec
rorb
inc
jp
cli
or
shl
les
pop
mov
lret
jmp
sbb
daa
xchg
daa
ja
jmp
lds
mov
shlb
in
repnz
fistpl
insl
sahf
cmpsb
mov
pop
rcrl
cmp
add
int3
sbb
sbb
or
xchg
icebp
jp
fsub
lock
pop
jbe
push
add
orb
jp
mov
gs
dec
ficomps
roll
cmp
mov
dec
stos
les
fsubl
add
pop
mov
test
adc
pop
outsb
adc
sbb
lret
or
xchg
push
and
mov
insb
sar
inc
out
pop
add
pop
mov
int3
mov
pop
dec
loop
test
ficoms
enter
fstpt
fdivr
bound
mov
xor
insb
push
mov
sahf
mov
pusha
sub
mov
xor
lcall
cmpsl
lret
cmp
pusha
pop
ficoms
jb
or
xor
test
mov
nop
sti
daa
aam
cmp
dec
jbe
int3
or
fldt
arpl
mov
sbb
outsb
mov
lods
int
in
dec
mov
dec
xchg
pushl
mov
xor
mulb
dec
fisubrl
xchg
lcall
push
lock
dec
out
in
pop
test
mov
loope
mov
jp
pushf
fs
lret
dec
mov
insb
dec
mov
mov
add
imul
lods
mov
sbb
mov
mov
xor
push
inc
scas
into
add
push
dec
dec
push
push
push
inc
jo
test
lods
scas
mov
xorl
pop
fsubrs
test
lock
outsb
inc
or
pop
stos
test
int3
mov
cli
push
cmpsb
rcrb
imul
loope
adc
sbb
lods
mov
mov
pushf
dec
mov
add
mov
pop
mov
jge
outsb
dec
test
cwtl
shlb
sub
fnstsw
cmp
mov
cwtl
rcll
out
mov
ja
mov
movsb
pop
mov
jo
stos
pop
sub
dec
sub
xor
push
dec
movsb
into
sbb
dec
pusha
sahf
sub
ret
add
add
mov
mov
sub
mov
dec
cli
repz
fimuls
arpl
rorl
loopne
add
jp
jp
sbbl
dec
rsm
mov
into
icebp
or
data16
adc
fbstp
push
xor
pusha
pop
and
call
sarb
or
test
mov
inc
lcall
xchg
mov
rclb
mov
pop
push
xchg
outsb
lret
js
mov
adc
pop
pop
outsl
and
push
movsb
xor
cs
push
jmp
pop
fstps
inc
mov
test
cwtl
lahf
lods
jp
fsubl
pop
push
xchg
jle
jle
lret
shlb
pop
fadd
jnp
jbe
cmpsb
mov
or
mov
lret
cmpsb
pusha
cwtl
xor
cmc
mov
lods
movsb
imul
sahf
inc
cmpb
jo
push
mov
cwtl
movsb
mov
clc
jb
inc
mov
out
push
sub
pop
mov
xchg
mov
pop
shlb
into
mov
mov
outsb
mov
push
loopne
lret
and
loope
lret
fsubl
lods
jp
cli
addr16
int3
dec
lret
jle
cmp
dec
xor
pop
inc
fcmovb
cmpsl
jns
mov
popa
dec
xor
mov
dec
inc
mov
loopne
insb
fsubp
lock
mov
jp
add
aam
cwtl
push
bound
mov
fcmovnb
notl
aam
mov
js
xor
mov
jo
lds
int3
mov
addr16
repz
mov
nop
mov
scas
repnz
sub
fdivr
fsubr
sti
pop
pusha
bound
pop
jb
je
insb
pusha
jnp
push
mov
aam
fdivrl
data16
or
fcoml
daa
jo
hlt
mov
mov
je
sbb
ret
cwtl
or
pop
xor
xor
mov
pop
imul
add
outsb
xchg
pop
int3
hlt
push
add
cmp
mov
sbb
je
loopne
bound
xchg
cmp
mov
daa
sahf
je
fwait
aam
mov
add
shlb
nop
jbe
xchg
lods
lret
adc
mov
mov
movsl
xlat
nop
mov
dec
sub
popf
fdivrl
fiadds
loopne
cmp
push
pusha
mov
cwtl
out
imul
mov
xor
mov
sbb
cmc
jne
int3
in
movsl
test
jo
xlat
and
xchg
mov
mov
pop
lods
xchg
sbbb
cmp
mov
adc
add
push
push
mov
push
cld
lock
in
adc
mov
push
in
mov
movsb
push
in
in
adc
mov
cld
rcrb
mov
mov
lcall
pop
arpl
js
andl
adc
mov
outsb
mov
adc
push
test
mov
push
mov
popf
mov
xchg
pushf
into
insb
dec
hlt
or
jne
frstor
mov
xchg
mov
rorb
pop
pop
mov
scas
inc
mov
cmpsb
lods
pushf
repz
cmpsl
xchg
mov
call
into
mov
sbb
rcrb
cli
push
mov
mov
in
pushf
and
je
push
push
xor
mov
cmp
outsb
fidivl
shlb
js
shrl
rclb
pushf
mov
pop
xchg
lods
pop
scas
mov
pop
sahf
movsb
inc
loopne
push
jns
shl
pop
inc
data16
lcall
in
mov
fsubr
out
aam
adc
mov
out
nop
addl
dec
pusha
imul
sbb
lret
pop
data16
add
xchg
stc
or
pop
test
ficomps
in
mov
mov
js
ficomps
outsb
mov
inc
mov
fcoml
and
sub
jne
push
cmp
fwait
sbb
dec
int3
loopne
dec
pop
aam
and
call
mov
pop
stc
nop
jo
lock
jg
lcall
push
into
xor
sbb
cmp
push
push
jg
bound
inc
enter
xchg
mov
jecxz
stos
rol
mov
imull
mov
push
and
pushf
push
js
je
dec
and
xchg
inc
in
loop
jo
jno
sub
in
dec
jbe
cmp
push
je
pop
fcompl
mov
sti
fwait
mov
adc
add
mov
dec
fs
fs
lret
push
jp
pop
mov
adc
and
loope
sub
or
nop
decl
pushf
ret
scas
outsb
mov
xor
lret
xor
lret
jb
pop
ficompl
rorb
loopne
xchg
int3
mov
push
ljmp
insb
rclb
xchg
cmp
jbe
xor
cwtl
test
jl
cmp
mov
mov
hlt
dec
mov
nop
test
mov
sub
iret
add
mov
and
mov
scas
fcoml
je
lret
arpl
movsb
dec
loop
rcrb
lods
pop
sahf
xor
cmp
cmpsb
mov
xor
cwtl
cmp
rcrb
aam
xchg
in
mov
sahf
mov
movsl
lods
xor
pop
or
popa
dec
nop
cld
mov
jo
push
imul
pushf
stos
in
fistl
in
cmp
int3
jne
repz
pop
mov
pop
lods
push
int3
dec
pop
xor
cmp
xchg
dec
push
lods
rorb
or
pop
cmpsb
push
jbe
rorb
cmp
pushf
push
mov
sub
mov
add
in
adc
das
decb
stos
xchg
mov
js
mov
pop
cmpsb
lods
push
dec
push
lods
scas
sbb
cmpsb
push
jb
cmp
jp
les
jg
aam
jae
outsl
outsb
xchg
dec
push
dec
lcall
sbb
xor
sbbl
in
xor
push
or
in
mov
mov
pop
pop
xchg
mov
pop
mov
jge
cmp
test
and
shlb
fimuls
js
lret
sbb
jg
mov
xor
in
daa
pop
lods
cmp
mov
xor
sahf
mov
fsubl
mov
sub
scas
and
sub
cltd
mov
clc
mov
aaa
push
xchg
aam
cmp
inc
dec
lods
xchg
cmp
pusha
mov
cwtl
jae
dec
mov
push
addr16
sub
sarb
daa
fcmove
or
cwtl
mov
sahf
sub
push
fistps
push
dec
ficompl
repnz
jg
mov
fdivrs
nop
sub
cmp
mov
bound
xor
pop
fdivs
pusha
cmp
mov
push
sub
lods
js
xchg
xor
xchg
dec
mov
mov
fmulp
pop
dec
push
push
js
mov
arpl
xor
mov
pushf
jne
stos
mov
movsb
dec
jg
punpckhdq
cli
jnp
pop
push
mov
xchg
out
js
js
xor
sar
daa
fs
sub
mov
int3
mull
jl
pushf
jb
lret
stos
lods
dec
add
pop
pop
insb
pop
add
repz
hlt
fnstcw
pop
out
js
loopne
fmull
dec
add
inc
rcrl
pushw
cmpsb
int3
je
fsubrs
adc
sbb
mov
call
outsb
sbb
ss
xchg
imul
xor
fsubrl
pop
fsubs
push
fmuls
rcrb
mov
mov
add
sub
nop
jae
mov
push
mov
jp
js
pop
sahf
sbbb
mov
fwait
hlt
adc
add
lcall
inc
mov
imul
cld
lds
je
fmulp
lods
fisubl
out
les
push
mov
lods
mov
pop
pop
mov
jp
push
push
sarb
jb
fcomps
cmpsb
les
int3
dec
lcall
mov
dec
jl
mov
scas
or
rorl
add
cmp
jl
lods
in
cwtl
push
xor
fsts
push
test
fcomi
lods
pop
neg
sahf
insl
icebp
mov
adc
sbb
push
cmp
dec
int3
sub
jb
jmp
cs
mov
roll
movsb
lret
pusha
pop
push
mov
mov
cmpsb
int3
cmp
sahf
push
das
mov
mov
mov
jp
cwtl
adc
stos
das
orps
fwait
out
pop
repnz
bound
out
hlt
pop
sete
xlat
sti
and
add
pop
dec
dec
test
cmp
stos
fmull
fmuls
push
mov
push
pop
cmp
xor
mov
mov
lret
cmp
jp
int3
pop
daa
bnd
push
and
lret
pop
pusha
sahf
cld
sub
sbb
and
push
les
sahf
rclb
push
mov
stos
pop
push
mov
xchg
dec
mov
jb
scas
mov
cmp
mov
and
outsl
mov
mov
cmp
push
lock
jbe
ret
mov
dec
fnstenv
cli
xchg
pushf
pop
push
js
fisubl
mov
dec
stos
inc
nop
pop
fs
out
ss
jb
dec
mov
into
inc
repnz
pusha
mov
dec
pushf
dec
jl
mov
add
outsb
mov
icebp
push
adc
in
dec
mov
push
out
jp
xchg
jmp
cs
test
dec
fs
pop
cli
clc
inc
stos
lcall
xor
lret
push
dec
lds
pop
mov
pop
jl
pop
push
jo
pop
jp
out
adc
push
and
dec
into
out
jnp
push
mov
lock
mov
popf
pop
dec
mov
adcl
arpl
or
lods
out
mov
xor
out
jno
xchg
repz
add
stos
les
outsb
xchg
mov
fsubs
adc
sarb
sub
sahf
xor
mov
or
fldt
mov
push
sarb
subl
faddl
lods
dec
fcomip
fidivs
xchg
sbb
add
push
xchg
bound
or
inc
int3
daa
cmpsb
mov
jbe
pop
xor
fsubs
cmp
stos
push
fsub
pop
movsl
add
pop
pop
aaa
test
jp
jo
add
dec
pop
dec
fcompl
jbe
scas
xor
pop
dec
mov
jmp
xor
lods
fidivrl
jo
pop
shr
fisubl
cmp
mov
mov
bound
lds
xor
ss
rclb
imul
nop
cmc
pop
stos
aam
cmpsb
xchg
pop
sub
pop
push
in
adc
jecxz
mov
cmpb
aam
cwtl
sahf
pop
stos
lret
pushf
shll
push
shr
insb
xorl
cmp
aam
cmpsb
or
xchg
xchg
sbb
imul
dec
aam
ret
adc
dec
dec
test
movsb
rolb
ja
mov
movsl
jmp
jge
ds
nop
xchg
insb
add
insb
pushf
aaa
sub
mov
inc
pop
sbb
bound
movsb
jg
lods
divps
adc
dec
sub
insb
cmp
push
pop
out
pushf
mov
push
jg
jmp
mov
cmpsb
mov
push
lret
push
out
fdivrs
scas
imul
pop
pop
shrb
xor
clc
fidivrl
loop
cwtl
jnp
pop
nop
dec
rcr
pop
test
dec
lahf
add
ret
movsb
pop
dec
push
xchg
addr16
fstpt
loopne
adc
pop
movsb
js
punpckldq
insb
out
mov
ss
pop
fwait
push
dec
pop
adc
push
push
push
fdivr
pushf
fidivl
stos
outsb
xchg
enter
fisttpl
push
dec
sbb
mov
out
pushf
insb
cmp
dec
stos
mov
or
lods
mov
and
pop
int3
into
xor
test
or
out
jbe
xchg
xchg
mov
aam
push
loopne
shlb
jb
and
sahf
bound
push
push
push
adc
dec
es
mov
cmp
movsb
test
jecxz
hlt
jl
pop
outsb
cmpsb
fmul
mov
add
mov
movsb
pusha
fs
lcall
in
mov
ficoms
insb
jno
cmp
add
fistpl
jnp
and
aam
mov
int3
mov
testl
pop
rorb
and
stos
jecxz
add
imull
inc
pop
xchg
inc
sub
jbe
rorl
js
insb
add
sub
rcll
jp
pop
xor
mov
pushf
xchg
pop
loopne
push
pushf
add
pop
jb
sti
pop
test
ficoml
sub
fs
ficomps
mov
shlb
stc
mov
cwtl
mov
pop
test
aam
add
lock
leave
aaa
xchg
jbe
push
mov
mov
mov
push
cmp
jb
inc
rol
adc
and
xchg
scas
pop
sbb
hlt
mov
rorb
adc
pop
aas
mov
pop
lods
dec
hlt
loop
in
pop
mov
mov
sbb
rcrb
fisubl
pop
cmpsb
jbe
and
rolb
cmp
inc
stos
sub
fs
or
stos
test
xor
cmpsb
xor
push
dec
jle
scas
fs
sub
dec
jb
cld
or
mov
xchg
fcom
popf
movsb
mov
mov
fs
push
fcmove
lret
data16
scas
nop
push
dec
rclb
and
popa
jp
test
mov
daa
mov
bound
outsb
gs
dec
neg
pop
mov
jp
pop
pop
lods
jb
dec
mov
lock
aam
add
pushf
push
pop
test
mov
je
dec
push
cld
xor
dec
inc
mov
into
cmc
mov
scas
gs
jle
mov
rorb
fdivrl
xchg
nop
cmc
shr
pop
mov
daa
and
cmp
into
mov
inc
scas
jle
push
inc
add
mov
add
pusha
dec
push
xchg
mov
cmp
push
mov
pusha
and
std
mov
jns
jb
test
push
jbe
ds
dec
mulb
cld
mov
adc
ljmp
mov
in
out
pop
jp
les
dec
lcall
daa
mov
sub
push
pop
dec
xchg
xchg
sbb
loop
pop
push
lret
ss
into
push
pop
lods
dec
mov
fistl
sbb
dec
addr16
nop
pushf
mov
sub
sahf
stos
xor
cli
cltd
inc
adc
push
xor
pop
je
pop
xchg
push
xorb
fs
rcll
xor
scas
int3
pop
nop
mov
push
jb
lret
pop
cld
sahf
lods
insb
pop
cmpsb
jp
mov
sarb
lods
lcall
jp
fcom
lods
into
mov
repnz
lret
ja
popf
jmp
cld
mov
imul
dec
outsb
fs
push
sub
je
cmp
sbb
nop
ret
and
es
dec
pushf
mov
cmp
xchg
dec
ja
mov
insb
lods
fwait
shlb
in
rcrb
mov
mov
xor
lds
sahf
rcrb
daa
lret
js
dec
xchg
imul
jmp
fmuls
loope
lcall
clc
dec
and
inc
cmp
fmuls
sbb
pop
lods
scas
rorl
je
data16
inc
pop
xor
push
pusha
dec
lods
movsl
dec
es
or
rorl
test
push
ss
cmpsl
dec
lds
outsl
jnp
dec
jb
hlt
sbb
decl
mov
push
cwtl
xorl
fs
xchg
push
or
out
movsb
pop
jge
push
push
pop
nop
mov
call
mov
mov
bound
mov
pushf
dec
mov
sub
dec
cmp
int3
xchg
xchg
mov
js
jne
aam
pushf
mov
pusha
int3
pop
fsubrl
jns
cld
pop
cwtl
dec
mov
xor
mov
fisubrs
dec
cmp
outsb
mov
inc
pop
test
inc
pop
mov
push
xchg
imul
push
hlt
sub
pop
faddl
inc
mov
lret
aam
pop
push
outsb
push
js
inc
cmp
mov
cmpsl
inc
sbbb
hlt
mov
js
push
je
lods
cmpsb
dec
shlb
dec
imull
sbb
mov
ficoms
add
jbe
xchg
lcall
addr16
pop
je
mov
pop
lods
mov
xor
icebp
or
fistl
xor
push
xchg
rorl
and
push
xchg
data16
sub
loopne
push
daa
pop
sahf
mov
push
xchg
xor
jns
cmp
out
rcr
into
mov
add
jp
pop
dec
jae
fildl
and
push
pop
sub
jo
scas
ljmp
pop
loopne
dec
int3
stos
jnp
fcomps
test
lret
fwait
sub
test
jp
mov
push
xor
xchg
cwtl
pop
or
add
and
fs
pop
nop
mov
aam
adc
das
or
dec
pushf
mov
xor
mov
cmp
push
rcr
pop
fidivl
xchg
stos
mov
mov
outsl
xchg
inc
mov
adc
cmp
push
push
or
dec
mov
jbe
pop
lds
mov
adc
xsha256
cmpsb
xchg
ss
mov
push
push
push
cld
sub
loop
mov
lods
cwtl
dec
iret
rcrl
mov
pop
and
and
push
push
mov
add
sbb
pop
mov
test
mov
xchg
out
xor
stos
mov
push
aam
outsb
dec
pop
mov
daa
mov
xor
xor
mov
adc
pop
cwtl
mov
push
jle
out
cmp
pop
xchg
mov
push
jb
fdivs
cltd
xchg
lods
mov
dec
mov
pop
movsb
push
fsubrl
dec
lods
jp
loopne
push
pop
push
sbb
xor
pop
mov
sub
jbe
xchg
xor
mov
push
pop
out
and
jmp
insb
mov
cmp
mov
pop
lret
rorl
or
fdivl
push
mov
scas
stos
push
pop
insl
jg
jbe
pop
mov
enter
test
adc
hlt
mov
hlt
inc
or
pushf
clc
fistl
aaa
into
stos
mov
sahf
jle
pop
xchg
sarb
hlt
pop
lods
out
and
loopne
bound
push
rcrb
sarb
xchg
test
pushf
dec
push
aam
fmull
in
scas
mov
mov
cmp
pusha
push
scas
mov
push
pushf
test
test
dec
mov
data16
orl
jecxz
lret
pop
fcmovbe
fs
mov
sar
stos
mov
mov
neg
push
jp
testl
dec
mov
sarb
mov
mov
daa
xchg
mov
cs
push
mov
mov
in
and
jo
mov
xchg
aaa
test
jbe
xchg
dec
and
pop
fs
test
cmp
dec
pop
jl
insb
lock
push
and
outsb
bound
pop
cld
push
test
ja
mov
pop
mov
repnz
or
mov
rcl
mov
stos
lock
subl
mov
ficompl
mov
jbe
mov
and
rol
mov
out
sbb
sahf
pop
cmp
shlb
fsubl
shrb
mov
push
pop
into
dec
pushf
inc
xlat
add
pop
dec
ja
cmp
shrb
out
sub
mov
aaa
insb
push
sarb
bound
dec
and
pushf
mov
fwait
jbe
xchg
imul
movsb
mov
rcrb
push
fsubs
shrb
lcall
movsb
inc
pushf
rcrb
rclb
mov
jp
add
push
in
pusha
insb
cmp
lret
lods
pop
jnp
push
dec
sbb
lods
cwtl
pop
lock
sub
cmp
push
outsl
mov
cmpsl
push
jne
imul
aam
pop
dec
enter
cmc
jecxz
jnp
cwtl
mov
push
dec
xor
xor
out
cmp
dec
stos
fcmove
fisubrl
xor
lods
btc
lret
arpl
or
add
je
fcomps
into
push
insl
insb
out
ja
push
js
xor
jp
test
shll
fsubs
in
xchg
mov
stc
push
roll
push
mov
loop
nop
jbe
paddusb
adc
daa
shlb
mov
fstpt
in
xchg
ja
xchg
hlt
or
fmull
inc
adc
in
cmpsl
pop
dec
mov
cmp
mov
data16
outsb
test
xor
movsb
into
mov
aam
addr16
movsb
mov
lods
or
pop
pop
cmp
nop
mov
dec
arpl
aaa
lret
mov
je
hlt
push
sbb
into
mov
sar
pop
in
dec
sbb
push
cltd
or
fdivrl
jmp
pop
out
aas
sub
xor
sbb
mov
test
sbb
adc
aad
dec
fiaddl
clc
pushf
push
inc
pop
fwait
jno
mov
xchg
fs
test
bound
out
loopne
insb
jp
xchg
in
dec
sti
inc
push
ret
fimull
or
fcomp
lret
or
adc
jbe
ss
into
int
sbb
mov
mov
testl
out
divl
das
int
push
cld
std
inc
movsb
xor
bound
xor
test
dec
lret
lahf
loop
scas
mov
inc
ja
insb
jnp
push
outsb
int
mov
xchg
cli
lods
mov
inc
idivl
mov
cmpsb
lcall
lret
lea
popa
mov
rclb
sbb
push
mov
out
push
pop
dec
sti
xchg
jp
add
cmp
movsb
aam
out
sahf
sbb
cmc
cmp
pop
push
jg
jb
inc
cmc
adc
mov
arpl
mov
jb
push
ficompl
mov
sub
pop
rorl
xchg
lea
lcall
xchg
jbe
lcall
push
xor
outsb
xor
ja
cli
adc
xor
mov
into
jo,pn
dec
mov
mov
lods
scas
pop
and
xchg
push
pop
dec
rclb
cmpsb
mov
test
mov
int3
cs
fs
dec
es
mov
repnz
pop
insl
aas
adc
stos
push
push
inc
push
xchg
lcall
lret
add
jbe
rcrl
daa
data16
mov
sub
push
vmread
pop
add
test
dec
ja
mov
mov
cmpsb
sub
out
add
pushf
jp
repnz
scas
lea
mov
aaa
xchg
nop
fsubrl
sahf
subb
dec
mov
test
push
test
test
mov
inc
cmp
pushf
outsb
push
mov
xchg
mov
inc
xchg
das
mov
test
mov
data16
pop
pop
stos
rorl
cmp
cmp
mov
xor
sti
lods
scas
stos
inc
push
jle
adc
lret
sub
xchg
pop
jbe
mov
jbe
inc
cmp
cwtl
scas
fcompl
xor
push
mov
rcr
int
fs
push
movsb
xchg
mov
and
inc
nop
loopne
mov
mov
ret
push
ja
push
test
loope
mov
in
ret
into
dec
xchg
pusha
push
mov
lods
enter
popf
adc
iret
jbe
stos
cs
fcmovu
mov
loope
movsb
fdivl
or
dec
mov
out
mov
jmp
mov
pop
je
sbb
in
scas
adc
jnp
pop
mov
dec
push
aas
or
xlat
popa
stc
mov
cmp
movsb
mov
cs
mov
outsb
ss
jbe
lcall
pop
cmpl
pop
faddl
jp
push
dec
lcall
mov
add
xchg
aam
dec
mov
test
fcmovnbe
pop
pop
mov
in
xchg
orw
mov
jp
push
dec
test
outsl
mov
xlat
mov
test
int3
push
pop
xchg
xchg
mov
rcrl
out
pop
push
adc
xor
jbe
and
add
insb
ret
mov
ret
movsb
xor
xor
mov
icebp
dec
inc
sbb
cmp
dec
lcall
add
mov
insb
scas
xchg
pushf
imul
cmpsb
dec
fimuls
xchg
or
sarb
les
faddl
andl
mov
dec
andl
inc
mov
pop
pop
jl
data16
in
mov
cmp
imul
out
mov
out
into
mov
sbb
ds
cmpsb
mov
ja
push
and
xchg
mov
sti
insb
shrb
inc
js
cmp
mov
push
xorl
mov
push
push
xchg
js
jp
mov
fwait
dec
ret
mov
sub
push
das
or
sbb
jl
push
fisubrs
dec
js
mov
outsl
jl
into
dec
repnz
jp
xchg
sbb
push
fsubrl
dec
dec
fcmovnu
andl
jl
xor
out
testb
pop
outsb
mov
cmp
mov
push
fs
xchg
push
imul
int
mov
cwtl
push
pop
movsb
push
fistps
dec
inc
aad
or
fcomps
popl
ficoms
push
outsb
lret
inc
inc
push
push
scas
pusha
mov
push
iret
cld
xor
xchg
xchg
shlb
xor
pop
adc
push
in
sbb
filds
xchg
ficomps
aam
fsubrs
jb
lods
mov
sbb
fs
push
xchg
arpl
shlb
lcall
test
negl
je
pushf
or
adc
pop
jbe
pop
mov
movsl
ficomps
pop
cli
data16
pop
cwtl
shlb
std
jbe
jbe
mov
xchg
fldt
dec
mov
push
repz
mov
enter
mov
xchg
ror
dec
push
and
pushf
in
addr16
dec
dec
sahf
mov
push
ficoml
add
add
cmc
pop
enter
ljmp
mov
dec
lods
mov
push
je
mov
mov
outsb
movsb
add
adc
xor
sbb
and
push
shrb
out
mov
out
pop
int3
ret
stos
add
push
push
icebp
mov
mov
jnp
lock
out
xchg
repz
mov
jecxz
in
into
xchg
mov
outsb
mov
pop
bound
cmp
pop
es
inc
xor
lods
cmp
xchg
mov
jl
sahf
mov
inc
mov
loopne
mov
pop
push
jne
mov
mov
mov
fidivrs
movsl
mov
mov
inc
bound
dec
mov
pop
scas
adc
mov
mov
scas
mov
push
int3
dec
pop
mov
cmp
nop
push
push
das
enter
xor
jp
mov
out
cmp
dec
xor
sahf
inc
in
fmull
lods
std
movsb
cmp
pop
jp
fisubrl
mov
cmp
mov
pop
test
dec
mov
xchg
and
rorb
and
xor
jbe
mov
ds
mov
adc
aam
xchg
push
xor
movsb
lock
dec
dec
repz
leave
in
cmp
mov
dec
cld
or
lcall
dec
jp
lret
std
stos
mov
es
xchg
or
xor
xchg
cmpsb
ficompl
push
lret
push
nop
fisubl
daa
pop
aaa
shrb
jns
push
push
xor
sub
jae
outsb
inc
push
and
lods
mov
dec
dec
aas
fs
dec
dec
imul
sarb
scas
lcall
jb
ss
mov
sarb
pop
or
pop
xchg
mov
out
mov
daa
aam
pop
cmp
mov
mov
mov
arpl
int3
pop
push
push
xchg
fistl
cmp
cli
inc
das
and
mov
mov
sarb
jl
stos
pop
xor
mov
push
xchg
dec
pop
mov
pop
mov
sahf
jecxz
scas
sahf
js
mov
pop
mov
pop
out
in
mov
movsb
mov
fadds
in
adc
rclb
mov
ficoml
jb
mov
xchg
pop
and
cmp
orl
xchg
lods
rclb
ds
cmovp
lcall
inc
outsl
pusha
imull
in
push
pop
add
sahf
pop
adc
fadds
add
push
add
pop
pop
lret
inc
mov
pop
imul
mov
push
push
lret
das
lock
shrl
mov
loope
rcrb
int3
imul
mov
jle
adc
mov
push
dec
rclb
outsb
scas
bound
mov
fwait
or
or
dec
aam
pushf
or
stc
daa
fs
jg
push
stos
pop
nop
jb
sarb
je
fucomi
or
movsb
js
adc
int3
aam
fisubrl
mov
xchg
inc
pop
push
sbb
lock
das
push
pusha
outsb
data16
data16
cmp
and
movsb
mov
lods
sub
mov
mov
or
mov
add
push
repnz
sarb
sahf
cwtl
movsb
push
dec
jge
sbb
pop
icebp
in
js
movsl
pop
cwtl
adc
sub
mov
push
push
push
test
mov
mov
add
daa
test
pop
movsl
pop
and
jb
jo
scas
scas
add
cli
inc
lods
sbb
int
loopne
pushf
lret
xchg
pop
rcr
pusha
push
dec
daa
pop
pop
xor
sub
fsubs
sti
mov
jb
mov
jbe
push
jg
or
adc
stos
out
dec
les
jg
test
dec
es
int
int
jo
outsl
push
int3
mov
fdivl
dec
or
aas
sahf
dec
shlb
dec
adc
fnstcw
fmull
add
int3
enter
dec
jne
out
jle
shll
mov
inc
cwtl
aas
mov
into
jp
push
fdivs
dec
test
mov
dec
push
shlb
aad
add
mov
xor
mov
mov
cwtl
insb
push
movsb
dec
push
push
popa
fidivl
sub
jp
push
adc
push
mov
pop
fisubrs
and
cwtl
mov
or
nop
push
js
cmp
push
ja
test
mov
cwtl
inc
adc
push
cmpxchg
pop
jp
cmp
mov
lock
push
mov
and
ss
mov
in
test
adc
dec
pop
dec
push
sbb
cmp
sub
aam
dec
imul
xchg
dec
test
insb
add
dec
dec
push
pusha
pop
and
xorb
dec
ffree
lods
lcall
sub
stos
test
xor
pop
xor
jl
jle
popf
andl
cmpb
fsub
sbb
scas
lret
jae
arpl
test
push
adc
fs
pushf
dec
mov
sub
stos
mov
mov
mov
cmp
fdivs
mov
push
test
pop
xchg
mov
mov
push
adc
pusha
lds
xchg
test
xchg
lret
push
jnp
jb
add
outsl
push
test
pop
rcr
cmpsb
inc
add
mov
lret
outsb
xchg
pusha
nop
mov
pop
xor
lods
lock
imul
pusha
jns
shlb
pop
mov
dec
and
sbb
fistpl
jno
and
stos
sbb
mov
cmp
int3
data16
mov
dec
pop
test
mov
gs
push
pop
cs
pusha
mov
dec
fimuls
dec
fisttps
adc
jmp
adc
data16
mov
xor
or
push
imul
mov
xor
lcall
movsb
mov
cmovp
imul
xchg
sahf
outsb
push
push
test
in
fs
pop
cmpsl
mov
pop
push
inc
mov
lods
call
leave
xor
dec
scas
add
push
mov
mov
fxch
fcoml
xlat
les
aas
adc
int3
fisubrl
arpl
xor
cmp
rclb
fcmovnbe
mov
add
int3
outsb
cmp
popa
add
sub
pusha
add
cld
push
sti
pusha
bound
movsb
push
pop
hlt
sahf
mov
fwait
inc
mov
inc
jo
fildl
mov
imul
mov
add
repnz
lcall
dec
pushf
jmp
push
mov
push
jo
push
test
jno
pusha
lret
cmp
jl
outsb
out
mov
mov
jp
jg
dec
data16
push
cld
fs
outsb
fimull
outsb
outsl
out
movsb
lods
mov
cwtl
push
mov
lods
fimull
repnz
sub
xor
dec
mov
lods
mov
xor
mov
cmp
dec
out
fmull
int3
mov
cli
cmp
js
sbb
stc
bound
cwtl
loopne
mov
hlt
cmp
mov
not
fildll
dec
movsb
ljmp
hlt
jb
dec
shlb
mov
je
popa
fdivs
push
out
jle
sahf
xchg
shll
mov
mov
icebp
cmp
into
mov
jle
cmp
ja
push
jnp
cmpsb
sub
into
xorb
aam
fcmovnbe
pushf
xchg
sbb
mov
out
pop
cltd
cmc
xor
lods
jl
mov
push
imul
dec
cli
imul
cld
inc
rorb
dec
pop
push
xchg
inc
dec
orps
push
jmp
xchg
das
mov
data16
int3
cs
cwtl
xor
dec
aam
push
sbb
daa
inc
jb
xchg
adc
xchg
push
push
ss
stos
dec
pushf
rolb
sbb
mov
mov
push
pushf
jns
es
pusha
push
daa
jns
xor
push
data16
stos
out
push
pop
dec
sbb
mov
dec
fsub
xor
pop
adc
fistps
addr16
pushf
push
fsubs
pop
pusha
xchg
cld
inc
dec
dec
in
and
nop
mov
mov
mov
decb
lock
in
es
add
aam
fistpll
mov
dec
fimull
add
push
and
push
fadds
pop
mov
call
pop
push
sbb
lods
jbe
fsubrl
cmp
nop
dec
inc
lods
scas
push
dec
inc
cli
faddl
mov
pxor
sahf
pop
test
xchg
hlt
pop
or
xchg
cmp
bound
js
push
aaa
pop
lret
xchg
dec
scas
dec
rcr
scas
shll
inc
push
add
pop
dec
push
xchg
or
mov
pusha
pop
mov
scas
dec
rorb
js
xor
fisubs
push
sub
jle
xchg
pop
data16
jbe
negl
add
and
pushf
int3
std
stos
jbe
scas
add
cmpsb
popf
fcomps
stos
lcall
repnz
xchg
push
fimull
fisubrs
shrb
or
jnp
xchg
out
leave
inc
mov
push
pushf
call
or
rclb
push
mov
fstpt
xchg
xor
fistpll
and
push
sahf
in
movsb
push
rorb
push
jmp
mov
aas
int3
leave
push
stos
shl
nop
je
mulb
sahf
push
xor
xor
and
popf
sub
dec
rorl
nop
add
movsb
aam
jb
cld
dec
out
fs
mov
outsb
mov
cmpl
cmpsb
push
jle
in
test
hlt
mov
or
jecxz
fdivr
in
jns
test
or
fcomps
lret
adc
mov
das
pop
pop
mov
sbbb
inc
out
lret
js
je
pop
sub
pushf
xlat
cmp
mov
jno
push
out
pop
fs
cld
mov
dec
xchg
loop
mov
addb
lahf
adc
pop
jnp
mov
int3
gs
movsb
mov
push
and
cmp
mov
rorl
stc
ret
ljmp
push
mov
cld
mov
push
xor
fcompl
ficompl
faddl
push
mov
dec
or
pusha
lcall
in
outsb
imull
je
hlt
mov
pushf
ficomps
or
xchg
cmp
dec
fcmovnb
movsb
mov
out
dec
inc
push
daa
fs
ja
pop
inc
fidivs
dec
je
add
subl
jl
jo
pop
js
lret
mov
test
jl
dec
int3
rclb
in
cltd
sbb
push
mov
push
xchg
jne
leave
mov
fsubl
dec
jmp
mov
mov
mov
shlb
insl
mov
gs
lods
je
adc
push
mov
pop
fdivrl
push
cmp
mov
addr16
inc
mov
push
push
fidivrl
pushf
addr16
pop
pusha
rcrb
pop
dec
andl
fbstp
dec
fsubrs
push
push
shrl
xor
imul
pop
mov
in
lock
test
mov
cmp
pusha
jnp
cwtl
xchg
jp
xor
dec
xchg
cli
out
jp
data16
js
add
in
jns
cmpsb
nop
pop
repnz
shl
stos
pushf
insb
cmp
shrb
jnp
jb
dec
dec
fisttpl
fwait
cmc
sbb
xor
add
sbb
dec
ss
jb
add
mov
push
cmp
mov
mov
movsb
bound
js
dec
lret
aas
repnz
push
xchg
xchg
cmp
dec
pop
xchg
ss
pop
xchg
mov
fwait
nop
test
daa
dec
push
inc
test
lret
mov
dec
sahf
adc
aam
fcompl
test
lods
ud2
cmp
jo
ljmp
int3
test
jne
mov
dec
mov
lcall
jnp
mov
mov
mov
daa
lcall
into
lods
test
jno
fs
pop
sbb
cmp
mov
mov
inc
sub
out
dec
jb
loopne
xchg
lcall
insb
fsubl
adc
outsb
data16
inc
fisubl
fldenv
out
adc
mov
cmp
jo
cld
push
into
lret
or
sbb
jle
xchg
mov
data16
xor
dec
mov
inc
cmp
data16
pushf
push
pop
lods
xchg
js
es
cmpsb
inc
aam
mov
insl
push
inc
jnp
sahf
jp
xor
je
ja
mov
cmpsl
int3
mov
jae
jo
js
jbe
ds
ds
push
rorb
stos
daa
mov
mov
int3
std
jge
inc
bswap
insb
lret
ret
push
test
mov
cltd
jl
sbb
push
dec
fcmovb
pushf
mov
in
ss
cwtl
lods
or
pop
xchg
test
mov
jb
pushf
xchg
push
out
push
movsb
mov
gs
lds
add
jo
mov
aam
mov
mov
sbb
gs
cmpsl
jne
lods
mov
fisubl
sbb
inc
jo
dec
push
lock
or
pop
jno
jnp
push
mov
xchg
pop
in
sbb
mov
lods
mov
cwtl
mov
adc
fmull
xor
adc
aaa
adc
mov
in
xchg
leavew
arpl
int3
scas
cwtl
imul
int3
ds
inc
mov
xchg
bound
pop
pop
pop
mov
mov
scas
mov
fildl
fildl
in
cmpsb
adc
jl
out
push
push
ror
sbb
fldenv
mov
xchg
andl
sub
sub
sub
push
nop
negl
mov
inc
jge
pushf
insb
xchg
add
mov
lock
sbb
push
sti
cmpsb
mov
idivb
push
dec
movsb
aas
dec
and
mov
testl
inc
inc
adc
push
vmread
cmpsb
sbb
and
test
mov
cs
es
mov
xchg
lcall
in
cmp
cmp
sub
fnstcw
mov
movsl
jp
loopne
mov
sahf
mov
sbb
aam
xlat
cli
add
cmpsb
pop
jnp
mov
lret
lods
xchg
push
dec
mov
test
push
cmp
js
das
dec
push
mov
lcall
aam
jbe
cmp
mov
dec
hlt
dec
dec
call
test
pop
mov
sbb
and
fldt
cld
addr16
rol
jp
adc
movsb
mov
lods
and
push
pop
je
jo
jp
jmp
mov
sbb
add
xchg
sarl
cld
mov
jecxz
outsb
cmpsl
stmxcsr
int3
pusha
lods
dec
lcall
adc
fldcw
rorb
into
ficoml
mov
pop
in
or
es
int
pop
fs
das
cmpsl
xchg
pop
rcr
data16
lock
sar
pushf
outsl
stos
pop
mov
and
imul
xchg
jmp
dec
sbb
ds
ja
test
scas
mov
lods
xorb
sbb
dec
fdivrl
loope
aam
mov
mov
mov
imul
push
pop
loopne
push
inc
sbb
inc
cmp
movsb
mov
jns
pusha
jo
sub
or
sbb
lods
cmp
mov
xor
sbb
mov
dec
jbe
out
sbb
xchg
sub
test
outsb
lods
imul
je
push
dec
daa
fimull
cwtl
sub
sub
lods
hlt
mov
jmp
aam
push
push
sub
mov
lock
outsl
inc
dec
pop
dec
jo
cmpsb
sarb
int
push
pop
dec
mov
lret
pop
lods
lret
push
dec
sbb
stos
push
push
cmp
insb
fmuls
xor
stos
sbb
push
lods
loop
scas
push
mov
bound
mov
fmul
lock
fsubrl
jnp
xchg
insb
dec
mov
lods
pop
jp
cli
jnp
jmp
dec
push
test
pop
xor
mov
lods
mov
xchg
cs
jmp
jp
mov
daa
push
mov
mov
pop
add
push
pop
les
pop
mov
pop
xor
bound
push
outsb
jbe
rcrw
mov
pusha
mov
addr16
lcall
jecxz
les
mov
popf
mov
ss
jns
sarb
mov
mov
lcall
xchg
js
js
jbe
fcmovnbe
mov
adc
inc
sbb
mov
stc
fdivrl
fs
push
lcall
movsb
nop
xchg
push
inc
out
int3
dec
dec
and
je
out
mov
pop
xor
movsb
mov
pushf
mov
fwait
into
push
add
das
mov
out
sub
dec
aaa
lret
ja
inc
ljmp
cmpsb
shrb
cmp
mov
inc
cmp
push
nop
insb
and
mov
je
sahf
fdivs
bound
pop
cmp
mov
push
movsb
lret
aam
mov
and
outsb
aaa
mov
mov
xchg
leave
mov
jp
mov
sbb
mov
xor
outsb
pop
je
sahf
xor
mov
ret
fsubs
scas
int
lcall
das
xchg
nop
pusha
cs
cmp
jb
jo
fcoms
test
pushf
popa
jp
ficoml
scas
jbe
fwait
cwtl
pop
rolb
pop
lods
push
cmpsb
mov
test
dec
mov
data16
mov
sahf
push
pop
sarl
push
xchg
and
scas
in
mov
sub
int3
jbe
lret
mov
add
lcall
sbb
test
jle
std
mov
jg
hlt
dec
mov
pop
cmp
insb
jbe
jne
push
lds
xchg
lock
outsl
daa
mov
lret
xchg
jnp
jl
shrb
lods
mov
mov
pop
add
or
or
push
pop
jne
scas
nop
sahf
movsb
pop
lret
cmp
jbe
int3
jmp
mov
outsb
dec
jne
mov
sahf
push
mov
ss
test
scas
xchg
mov
fcomps
pop
xchg
cmpsb
jnp
xchg
sbb
mov
scas
jno
dec
jo
dec
mov
pop
jp
mov
jb
rcrb
mov
sbb
push
mov
out
repnz
int
mov
jp
in
test
or
mov
dec
sbb
or
push
movsb
dec
mov
fs
pushf
popl
insb
xchg
cmp
cmpsb
dec
pop
lcall
les
lods
jb
inc
xchg
add
and
lret
cli
stos
mov
xchg
mov
pop
mov
dec
nop
dec
mull
in
mov
int3
fidivs
pushf
xchg
lods
xor
inc
dec
into
sahf
add
add
insl
cmpsb
xor
fidivrl
dec
js
xor
xchg
add
inc
cld
fistpl
pop
rcl
jb
jo,pn
cmp
mov
pop
cmpsl
mov
cmp
stos
addps
inc
cmp
ret
push
mov
xchg
outsb
inc
scas
aam
xchg
sti
repz
in
nop
and
movsb
mov
outsl
dec
mov
adc
shlb
pop
xlat
scas
pop
cwtl
sbb
jp
hlt
dec
mov
xor
jb
js
mov
out
add
xor
outsb
pusha
xchg
cmp
data16
aas
mov
fiaddl
push
inc
rorl
lcall
xchg
mov
scas
push
bound
data16
outsb
pop
mov
pusha
dec
pushf
fistpl
fadd
mov
outsl
mov
movb
leave
xchg
inc
push
adc
cmpsb
sahf
push
mov
push
adc
ss
xchg
mov
dec
add
movsb
out
sarb
out
sbb
or
cmp
dec
jp
pop
mov
inc
loopne
ret
adc
pop
stos
mov
pop
fs
hlt
fisubs
and
pusha
dec
in
data16
das
rcrb
mov
inc
mov
stos
rclb
pop
out
push
sahf
push
bound
lods
mov
add
pop
sahf
cmp
fs
ret
shrl
push
pop
cld
in
adc
ret
fidivrs
sbb
je
scas
fcompl
cmc
js
dec
popa
cmp
fsubl
mov
pop
test
jo
movsb
pusha
mov
sbb
push
mov
js
cmpsl
sbb
or
sbb
lret
into
push
push
dec
lret
or
sti
dec
mov
pusha
subps
adc
cwtl
push
fadds
dec
cmpsb
mov
sarb
mov
and
insl
xchg
mov
inc
jmp
cmp
push
lret
pop
sbb
or
jbe,pt
xchg
data16
inc
dec
int3
popf
sub
in
aam
shlb
mov
dec
jbe
std
xor
test
sbb
adc
fs
or
nop
mov
nop
xchg
pop
xchg
sub
dec
mov
fdivl
js
and
mov
out
mov
mov
xchg
push
jbe
nop
pop
push
fwait
shl
dec
sbbb
mov
xchg
mov
incl
rorb
dec
push
pop
ficoml
dec
push
addr16
repnz
out
push
cli
sti
mov
push
mov
xchg
ja
pop
mov
mov
les
jnp
mov
or
sets
jp
add
cmpsb
pusha
scas
xor
js
mov
jge
push
pop
mov
mov
pop
je
mov
mov
sti
loop
loopne
dec
sbb
add
sub
fidivrs
andl
enter
inc
mov
sub
ds
lcall
jle
pop
push
repnz
mov
dec
js
mov
mov
mov
dec
out
mov
sbb
clc
sahf
fisubrs
push
push
push
cmp
push
lods
push
dec
jnp
push
inc
mov
pop
mov
cmpsb
push
sbbb
mov
xor
fistps
xchg
dec
push
add
mov
outsl
or
mov
add
fsubrl
jb
int3
jo
mov
imul
mov
mov
cltd
push
lret
cs
cld
in
mov
mov
cmpsb
cwtl
jbe
cmp
mov
js
sbb
add
dec
mov
das
scas
dec
fidivrl
lock
lock
sub
data16
sbb
dec
push
mov
hlt
lcall
xchg
pop
mov
data16
push
pop
sbb
fs
mov
inc
pop
mov
in
mov
xor
dec
cmp
fs
pop
xor
mov
mov
sahf
pop
pop
pop
loopne
std
aaa
cwtl
dec
lods
rcl
fwait
dec
jp
rorl
mov
mov
insb
mov
xchg
pusha
dec
aam
push
mov
mov
mov
lods
dec
stc
mov
lock
adc
mov
cmp
pushf
push
or
add
xchg
jb
jecxz
test
jb
mov
clc
dec
ret
cmp
int3
pop
data16
scas
xchg
mov
jbe
aam
bound
dec
dec
or
stc
sub
lods
lods
mov
cmp
shl
sbb
lret
dec
fcmove
mov
mov
pop
mov
mov
call
xchg
mov
xor
push
xor
lods
cmp
into
rorl
push
dec
mov
push
lcall
mov
mov
pushf
cmp
mov
mov
xchg
push
push
js
scas
mov
mov
pop
outsb
add
jbe
or
adc
fs
sarl
nop
or
cmp
jl
mov
cmpsl
jl
fcmovnb
mov
adc
faddl
lret
cmp
movsb
mov
sahf
push
cwtl
mov
cmp
jp
dec
push
rorb
lcall
in
jmp
mov
aaa
sbb
insb
outsl
mov
lock
pushf
mov
or
repz
mov
cwtl
decl
fdivrl
pop
jp
outsb
cmpsb
bound
xchg
repz
pusha
mov
data16
es
ficomps
aaa
dec
movsb
lcall
lea
fidivrs
pusha
push
mov
cmp
jbe
loopne
stos
out
outsb
dec
stos
sbb
dec
jb
scas
cwtl
cmpsb
fmull
ja
cmp
outsl
mov
das
xchg
jbe
lods
je
adc
push
adc
cmp
pushf
push
nop
aam
inc
mov
add
pop
push
sbb
push
lret
xorl
push
dec
iret
jge
pop
adc
aaa
fstpt
dec
dec
adc
mov
mov
les
or
lods
xor
jbe
pop
pop
cs
mov
xor
pusha
cmp
xchg
push
push
mov
fimull
add
mov
repnz
out
sbb
data16
fists
and
sahf
movsb
add
pop
fdivrs
pop
cmp
pop
jns
fs
cmp
pop
cli
repz
xchg
sbb
lods
bound
lcall
fdivrl
inc
pop
rorb
xor
push
fistpl
mov
sub
outsb
fs
sub
out
movsb
jp
mov
or
fisubrl
mov
cmp
je
pop
pusha
sarl
mov
popa
jb
mov
loop
sub
xor
test
add
pusha
sub
fcoml
and
xor
xchg
dec
push
imul
push
enter
push
pop
mov
mov
les
pusha
jb
je
lds
rclb
divl
jno
mov
push
je
xchg
cmp
jb
mov
push
mov
mov
cmp
js
mov
cmp
pop
dec
enter
in
cwtl
sub
mov
push
jo
pop
int3
push
fdivrs
int3
repnz
fidivrl
mov
hlt
mov
leave
xor
adc
add
fs
pop
cwtl
mov
outsb
jp
cli
iret
cmp
pop
loopne
mov
test
pop
xchg
fstpt
fs
fiaddl
fidivs
xchg
daa
xor
lods
xor
mov
fimuls
mov
mov
sbbb
in
and
imul
mov
pop
js
mov
dec
add
es
and
sbb
adc
lcall
fmul
mov
or
mov
pop
lret
jbe
ret
addr16
je
sub
cmp
cli
sbb
dec
fiaddl
mov
add
cmpsl
aam
xor
fdivl
cs
mov
jne
mov
flds
lret
mov
iret
insl
inc
pop
or
jp
mov
mov
sbb
lret
pusha
dec
lock
pusha
mov
xchg
push
data16
cmp
push
mov
movsb
pop
sti
fmull
js
push
adc
xchg
mov
or
pop
mov
add
mov
test
mov
pop
aam
lret
ja
fistpll
js
jb
rorb
pop
mov
mov
aas
sti
in
loop
fidivrs
sbb
cmp
insb
push
rcrb
pop
cwtl
sahf
xchg
mov
fdiv
lock
push
cmp
inc
pop
add
push
imul
push
scas
adc
daa
imul
iret
jb
and
jle
or
xchg
mov
mov
lods
jns
push
pop
jp
inc
sub
test
pop
stos
mov
nop
hlt
adc
adc
lods
aam
cmpsb
daa
pushf
fsubrl
outsb
xor
in
mov
or
push
das
es
mov
ss
push
cmp
xchg
ficompl
push
call
mov
mov
pop
mov
jo
fs
adc
pop
aam
inc
adc
mov
jnp
dec
mov
jnp
fwait
sbb
sub
or
or
inc
jl
stos
lock
jp
lock
je
pop
scas
shlb
xchg
rcr
js
sbb
cli
and
insl
xlat
xchg
mov
jl
sahf
movsb
mov
data16
mov
mov
pop
fs
pop
cmp
into
push
test
add
stos
mov
sbb
mov
ret
fmuls
add
movsb
push
fcmovbe
lea
sbb
or
lods
lods
sbb
scas
cmp
fdivl
and
sbb
jmp
movsb
xchg
dec
pop
and
sbb
cli
mov
jl
aam
mov
test
cs
fimull
aas
nop
and
push
inc
jns
cld
les
xchg
sbb
pop
push
scas
sub
fdivl
cmp
push
pusha
pushf
pushf
ret
sbb
loope
push
je
cmc
ja
push
test
push
std
cmp
int3
jp
mov
mov
dec
sti
push
and
xor
inc
add
push
sbb
adc
cmpsb
sbb
or
outsb
stos
int3
cmp
aam
mov
lods
pop
dec
movsb
into
cwtl
fistl
jbe
mov
xchg
mov
cmp
dec
and
mov
sub
push
add
mov
mov
dec
push
lcall
dec
mov
mov
ljmp
fistpll
mov
lock
hlt
adc
push
adc
sub
lods
lcall
xchg
pushf
jecxz
sahf
or
jp
rcrb
xchg
mov
lods
lods
aaa
shlb
fmul
aaa
lret
test
pusha
dec
in
mov
rolb
in
bound
aam
cmpsb
xchg
pop
lods
cmpsb
cmp
je
sbb
sbb
xchg
xchg
cmp
dec
test
pop
mov
jo
jne
or
mov
imul
mov
cmp
shlb
mov
enter
scas
movsb
push
pusha
cmp
cli
sarb
stc
push
mov
add
fildl
mov
jl
pushf
scas
xor
fidivrs
cld
jge
mov
pop
sbb
jp
bound
jbe
jnp
cwtl
pop
shlb
jno
mov
push
outsl
fidivs
movsb
rclb
jb
repnz
inc
dec
testl
xchg
push
sbb
outsb
sbb
fs
lcall
xchg
sahf
cwtl
dec
jle
jge
mov
lret
popa
mov
jbe
pop
xchg
addr16
mov
mov
xchg
cmp
jp
pop
lcall
daa
jo
xor
fiaddl
pop
cmp
out
lods
fdivrl
jo
fsubl
lret
push
adc
adc
xchg
jg
shl
in
cmp
fwait
popa
in
faddl
je
xchg
cmp
mov
pop
xor
pop
jbe
cmpsl
mov
jp
inc
sbb
mov
sub
pop
adc
xchg
cmpl
jb
insb
sahf
nop
fstpt
out
fdiv
mov
push
sub
sub
xor
shrb
pop
mov
subb
fsubr
xor
cmp
mov
mov
mov
pop
mov
mov
dec
mov
ss
cs
fdivs
arpl
imull
ss
outsb
mov
cmc
stos
push
push
fistpl
mov
aam
lods
mov
sbb
jae
push
adc
jmp
bound
jnp
and
lods
sbb
dec
jge
mov
xchg
mov
test
sub
outsb
mov
insb
push
add
add
jo
out
cmpsl
jnp
xchg
jp
push
mov
push
cmp
cwtl
lods
fcoml
scas
adc
sub
sub
cmp
mov
lcall
pusha
cwtl
lods
xor
push
xchg
sti
mov
clc
mov
fistpl
daa
data16
dec
bound
popa
push
test
movsb
lods
pusha
add
mov
mov
je
lea
cmp
cmp
fisubs
add
stos
movsb
mov
adc
fcmove
jecxz
sub
push
push
dec
xchg
dec
stc
xchg
mov
je
gs
mov
mov
cmp
push
push
hlt
outsb
mov
rcl
es
nop
je
lret
add
mov
cmpsb
push
cld
and
lods
pop
sbb
fistpl
adc
pushf
jb
bound
add
das
ficoml
xchg
pop
mov
aam
fdivl
js
insb
push
xchg
into
xorl
mov
aaa
into
cwtl
fsubs
data16
imul
lcall
sbb
bound
xor
pop
push
cmc
mov
call
dec
pop
cmp
mov
dec
add
scas
ret
jne
mov
mov
pop
or
dec
enter
xlat
jo
mov
mov
cmpsb
test
negb
int3
inc
jl
jo
mov
mov
shll
xor
inc
xor
stos
mov
push
mov
pop
imul
movsb
adc
mov
aas
nop
icebp
pop
insb
cmp
lcall
out
xor
out
mov
mov
fsubs
jne
dec
out
hlt
push
pop
cmp
mov
cmp
mov
mov
je
test
adc
pop
sbb
jnp
out
in
outsb
ficoml
mov
mov
push
je
mov
int3
sub
add
test
mov
movsb
fisubrl
scas
mov
mov
xchg
fisubl
add
out
int3
rcl
into
jo
mov
sbb
test
adc
scas
pop
dec
int3
push
aaa
sbbb
in
test
pop
cmpsb
movsb
clc
dec
dec
push
jle
pop
test
fcmovne
sbb
lret
das
pop
cmpsb
fdivs
test
fs
lods
xor
jb
mov
inc
xor
jecxz
inc
pop
lods
mov
adc
dec
cmpsb
inc
ret
imul
outsb
jbe
push
aas
inc
mov
push
das
data16
int3
mov
mov
aad
xchg
pop
push
mov
adc
les
mov
ja
movsb
push
xchg
fmull
xor
mov
jecxz
pop
jge
sti
fwait
push
mov
daa
mov
cmp
pop
cld
inc
xchg
add
inc
lock
je
sbb
lods
pop
ja
jp
pop
enter
jo
pop
imul
push
jne
xchg
fidivl
jp
jp
push
fstp
cmp
add
sub
inc
cs
lods
shl
dec
mov
out
sub
mov
pushf
idivl
repz
and
fstpt
xor
cmp
jp
lret
xor
push
fbld
aas
pushf
out
mov
jno
mov
xor
ss
fs
cwtl
fwait
push
in
push
sub
cmpsb
mov
xchg
mov
mov
outsb
push
in
rcrb
inc
cmp
pop
movsb
insb
fs
lret
push
scas
andb
push
jle
cmc
dec
outsb
mov
das
push
cwtl
incl
xchg
or
jo
or
sahf
dec
out
data16
pop
sub
jl
aam
movsb
fiaddl
dec
outsb
jg
hlt
out
ret
and
enter
add
int
push
sbb
jg
xor
cmp
aam
mov
shr
shll
faddl
ficomps
jae
lahf
dec
out
lcall
sbb
xor
push
jbe
inc
fs
push
pop
push
mov
mov
icebp
addr16
add
dec
pop
out
jl
mov
push
dec
cmpsb
inc
jb
fistl
sbb
cmpsb
pop
xor
lahf
dec
cmpsl
into
dec
xlat
inc
fiadds
add
mov
jl
mov
pop
fnstsw
adc
je
mov
inc
pop
fcompl
dec
fdivrs
mov
mov
mov
cmp
mov
mov
dec
dec
cmp
lret
add
or
mov
js
xchg
scas
imul
xor
ficompl
fsubrl
push
push
fimull
aas
xor
cmp
data16
ficompl
mov
jp
test
ds
into
jb
mov
adc
mov
mov
fmulp
jnp
test
or
inc
cli
add
inc
das
scas
sahf
mov
test
jnp
fmul
or
and
in
loope
xchg
sahf
inc
daa
ss
inc
pop
lahf
test
mov
jb
stos
mov
cmp
negl
sahf
jmp
iret
fisttpl
lret
dec
adc
jo
or
sub
pop
fimull
nop
push
mov
in
mov
aam
je
mov
xor
adc
aaa
stc
xchg
dec
mov
aam
gs
jnp
mov
xchg
nop
sub
das
ja
push
dec
loope
mov
xchg
into
mov
jl
test
movsb
mov
data16
fdivrl
mov
outsl
xchg
mov
je
cmp
mov
shll
test
repz
ficomps
shrb
push
add
mov
in
js
xchg
mov
hlt
mov
js
xor
pusha
ds
mov
rorb
and
jbe
negl
ja
insl
push
sub
inc
cmp
outsb
mov
pop
add
inc
nop
movsb
pop
mov
pop
sbb
pop
cmpsl
imul
fsubp
pushf
cmp
fs
ja
cmp
lcall
xchg
fidivs
pop
xchg
xchg
out
je
mov
loopne
mov
les
pop
bound
mov
mov
xor
movsb
popl
je
lods
sub
mov
jl
push
mov
mov
sub
cli
mov
jp
push
mov
push
mov
test
jge
push
lods
dec
or
jl
in
dec
inc
mov
cmp
jle
xchg
rorb
ss
xchg
lcall
stos
sbb
push
bound
test
jne
mov
in
inc
mov
dec
add
adc
pop
hlt
mov
add
mov
clc
xor
push
pop
sub
ljmp
iret
sahf
mov
dec
pusha
pop
mov
outsb
dec
scas
lods
add
test
aam
cmp
jle
and
mov
mov
shrb
pop
test
xchg
fimuls
out
mov
push
add
push
lods
js
inc
push
mov
push
jp
dec
jp
push
fildll
test
pop
insl
jp
jb
push
push
into
int3
lret
dec
mov
xor
les
cs
mov
bound
cmp
lret
popa
fdivrl
or
or
dec
pop
sbb
or
imul
inc
mov
or
je
mov
aas
fsubs
leave
jbe
fwait
mov
sub
mov
cmp
outsb
test
mov
movsb
jb
mov
xchg
and
add
outsb
mov
lret
stc
popa
lods
sub
fidivrl
add
stos
push
pop
lds
pop
push
push
sub
fisttpll
dec
lods
faddl
lods
sbb
mov
mov
mov
fidivrs
rcl
fcoms
rcrl
jp
aaa
push
jbe
pop
jecxz
lret
cmp
movsb
mov
mov
in
push
popa
fwait
mov
lods
mov
hlt
mov
sub
dec
fs
fidivs
adc
int3
inc
cmpsb
dec
dec
sbb
lret
int
pushf
ficomps
ret
mov
out
nop
sbb
movsb
hlt
push
xor
pushf
js
inc
rcrb
mov
std
inc
addb
ficoms
pop
mov
dec
xchg
sti
jo
push
add
mov
add
test
insl
adc
jge
out
inc
xor
dec
call
push
inc
jbe
cltd
pop
dec
and
mov
fbstp
data16
dec
mov
xchg
pop
js
dec
and
lret
dec
ss
jb
sub
push
mov
movsb
sub
fcmovbe
bound
sahf
das
add
scas
movsb
push
adc
pop
xchg
js
shlb
sbb
nop
pop
daa
bound
xlat
xor
pop
out
adc
fildl
cmpsb
gs
mov
push
jmp
aam
je
inc
push
outsb
bound
lods
xchg
int3
push
jmp
or
lcall
cwtl
mov
pop
xor
jecxz
nop
incl
sub
sub
outsb
xor
push
pop
inc
fisttpl
mov
adc
insb
push
mov
cmpsb
jbe
cmp
dec
loope
xchg
cltd
lock
sub
sub
or
out
xorl
daa
outsb
mov
push
scas
lods
jg
push
dec
dec
pusha
pop
cmpsb
test
repnz
fdivrl
mov
mov
sahf
jae
sarl
xchg
pusha
mov
jecxz
push
lods
dec
jmp
push
test
dec
int3
lcall
sub
nop
mov
sub
dec
adc
pop
xor
mov
dec
jmp
inc
inc
pop
lret
push
outsl
jbe
ja
mov
xor
jp
test
lods
or
mov
fistpll
add
pop
pop
sbb
lds
fcmove
jp
jb
pushf
pop
pop
mov
push
fmull
pop
imul
enter
mov
mov
shrb
fsubrs
mov
daa
adc
sub
mov
xor
fwait
cmp
xchg
bound
dec
pop
aam
ficompl
pop
sub
pop
test
mov
pop
sbb
cld
das
lcall
ficoml
dec
popa
mov
fcoms
loopne
pop
hlt
mov
and
sbb
mov
fisubrl
out
mov
pop
call
outsl
jl
js
mov
stos
push
jb
pop
pop
pop
jp
cwtl
dec
cmp
dec
jne
sbb
xchg
jp
jge
xchg
dec
pop
pushf
mov
inc
push
stc
shrl
mov
cmp
bound
xor
mov
in
ret
imul
pop
fisubrl
xchg
mov
mov
andl
jp
mov
daa
sbb
das
out
cwtl
stos
daa
xchg
sub
sub
mov
add
popf
enter
sarb
pushf
test
ja,pn
xor
scas
mov
sbb
add
mov
jge
sbb
nop
test
imul
mov
dec
mov
mov
lods
stos
dec
movsb
push
add
decb
push
xchg
insb
pop
outsb
lods
mov
pushf
popf
jbe
ficoml
movsb
fdivl
popf
mov
sub
arpl
xlat
or
aam
lods
push
jp
cwtl
push
lret
xchg
fcmovnb
dec
dec
into
dec
shl
xor
xchg
push
lret
mov
xor
pop
pusha
jge
cmpsb
mov
jne
mov
jb,pn
push
repnz
loope
jo
pop
adc
sti
add
push
xchg
cwtl
pop
sub
aam
mov
es
and
inc
push
mov
and
mov
popfw
jb
jecxz
mov
dec
mov
push
pop
lret
jp
nop
fs
ljmp
dec
lcall
frstor
sub
test
xor
cmp
xchg
outsb
faddl
fisubl
test
fsts
jns
scas
mov
aas
jp
mov
and
mov
mov
pusha
popf
dec
test
inc
pop
inc
adc
fwait
das
dec
dec
scas
pusha
jb
sub
stos
inc
lret
dec
jo
add
cltd
push
jp
pop
loopne
mov
dec
mov
jno
pop
test
jp
push
out
mov
mov
movsb
out
add
mov
inc
add
lds
fs
push
mov
js
and
jnp
pop
dec
arpl
push
xor
mov
cmpsb
sub
sbb
push
inc
pop
xchg
inc
out
inc
sti
mov
je
mov
mov
mov
std
and
push
jb
mov
push
not
js
sub
jo
stos
iret
mov
mov
mov
test
js
bound
mov
insl
pop
mov
inc
lcall
test
xchg
pop
push
mov
dec
mov
cltd
das
test
mov
xor
mov
jb
paddsb
loopne
outsb
bound
test
add
negl
lods
imul
dec
inc
aaa
imul
pusha
mov
push
cmp
sahf
je
push
inc
fdivrl
mov
push
cmp
fcoms
mov
mov
lret
enter
adc
clc
les
ficoml
negl
in
add
cmpsb
sti
cmp
mov
les
mov
xor
inc
fs
mov
cmpsb
pop
dec
bound
or
sar
mov
xor
lret
movsb
and
outsb
push
adc
mov
popl
pushf
push
cmp
pop
sti
sahf
jp
cmp
pop
fsub
pop
mov
out
daa
aam
cmp
mov
mov
fs
lea
mov
sub
pop
mov
mov
pop
in
shrb
decb
addb
std
popa
lret
or
and
mov
jp
mov
mov
stos
insb
mov
inc
test
push
mov
push
jne
sbbl
clc
in
fisubrl
mov
cmp
push
or
scas
mov
pop
out
js
in
sahf
mov
testl
xor
push
mov
mov
aam
aad
js
dec
cs
hlt
rolb
inc
add
jecxz
cmpsl
push
mov
int3
outsl
stc
decb
arpl
jae
fildl
push
sahf
jns
push
std
lcall
rolb
movsl
test
pop
scas
lret
scas
pop
jo
in
mov
xchg
xchg
dec
sub
dec
lret
nop
fiadds
xchg
jns
mov
sub
jno
pop
and
lock
insb
in
lock
mov
pop
dec
inc
cld
adc
mov
add
test
outsb
pusha
jnp
push
dec
test
pop
cwtl
mov
mov
mov
adc
bound
cld
push
cmp
outsb
push
mov
in
sub
int3
lods
or
mov
mov
stos
insb
lds
mov
mov
jge
push
pusha
sbb
adc
test
das
lods
cbtw
in
pop
in
jo
jecxz
je
mov
mov
push
mov
push
adc
dec
pop
loopne
mov
sbb
pop
mov
jge
sub
lcall
mov
jmp
pop
mov
adc
mov
bound
and
mov
mov
push
inc
jnp
mov
test
stc
cld
jl
mov
pop
js
cs
push
out
rcrb
fs
sahf
aas
cmc
hlt
ja
rclb
fsubs
test
enter
xor
dec
mov
mov
mov
jle
bnd
cwtl
fdivrp
jecxz
pop
jb
pop
xchg
mov
sbb
cmpsb
mov
fdivrs
cmpl
xchg
xchg
mov
pop
jns
adc
pop
xchg
xor
lock
sub
into
je
repz
adc
sbb
adc
xor
and
adc
push
xchg
push
and
pop
adc
pop
sbb
jo
mov
shll
lret
lods
outsb
jnp
bound
jmp
das
jp
js
jb
pop
lods
or
ret
mov
movsb
into
pushf
cmp
addr16
pusha
ss
mov
clc
mov
cs
ds
rclb
cmp
push
lods
jbe
int3
or
sbb
xor
dec
stos
cmp
add
mov
jecxz
pop
push
aaa
lods
cmpsb
cwtl
mov
mov
fcompl
xchg
dec
ret
dec
daa
je
dec
dec
daa
outsb
sub
xchg
add
mov
inc
es
lcall
ror
xchg
add
fimull
xor
in
jae
cmp
pusha
jge
dec
movsb
ret
lahf
loop
test
dec
sub
cs
scas
das
mov
lcall
icebp
repnz
fcmovne
or
or
pop
ficompl
push
pop
lret
ret
sahf
mov
push
pop
inc
cmpsb
sbb
mov
sbb
loopne
push
sarb
ss
xchg
inc
mov
jecxz
adc
mov
gs
cld
dec
dec
lret
mov
xor
mov
ficomps
int3
lret
pop
mov
mov
inc
xchg
mov
mov
sahf
sahf
xchg
add
fidivrs
jb
das
lods
nop
jl
push
pop
cmp
dec
fimull
add
jp
lds
es
lea
jmp
jg
cmp
inc
jp
fdivl
jmp
xchg
add
fimuls
repz
pop
fucomi
sub
and
lret
push
testl
stos
cwtl
mov
sahf
mov
pop
jne
cmp
cli
fcoms
pop
or
ror
mov
test
mov
fdivrs
lods
js
push
sub
stos
or
xlat
subl
rclb
lcall
mov
dec
mov
mov
pop
lret
dec
add
mov
xchg
dec
fisubrs
jp
fsts
xor
mov
hlt
mov
daa
push
addb
adc
sbb
lods
push
or
in
push
outsb
jno
imul
or
ds
lret
fsubs
inc
fst
aam
ret
inc
push
addl
sub
jle
in
add
fs
and
shl
clc
repnz
repz
fisubrs
dec
inc
xchg
add
mov
dec
jo
movsl
sbb
mov
adc
mov
mov
adc
int
dec
stos
addr16
sub
hlt
movsl
daa
je
cmp
jb
bound
stos
into
scas
cmpsb
fistpl
push
jp
movsb
pushf
lods
sub
push
mov
mov
int3
jnp
mov
mov
mov
mov
mov
fidivl
cmp
nop
fisubs
sahf
bound
movsb
xchg
rcrl
mov
push
mov
outsb
inc
lea
add
movsb
add
dec
cmpsb
stos
mov
loopne
pop
das
mov
faddl
pop
dec
outsb
push
xor
stos
cmp
push
pop
scas
lret
bound
mov
mov
fs
sahf
jp
lcall
mov
add
lcall
mov
movsb
pushf
int3
sahf
rcll
cmp
nop
mov
insb
dec
dec
fildl
lods
pop
stos
aas
mov
mov
push
pop
andl
push
mov
out
xor
xchg
sti
or
test
sbb
pop
rclb
mov
and
les
mov
fildl
or
cmp
pop
push
xor
sbb
pushf
outsb
dec
lcall
fimull
cld
and
stc
cs
pusha
sub
push
or
mov
fsubl
mov
mov
push
movsb
movsl
out
and
int
and
mov
jo
mov
fmuls
fbld
ret
pop
jp
mov
add
aad
insl
pop
outsb
fidivrl
andl
mov
add
pop
rolb
mov
bound
lahf
mov
imul
pusha
xchg
movsb
fildll
fistpl
js
mov
xor
sbb
jns
fsubl
xchg
addr16
pop
je
pop
dec
popf
lods
lods
mov
mov
nop
mov
pop
mov
fisubl
mov
adc
dec
dec
xchg
or
mov
mov
cmp
out
inc
frstor
mov
mov
test
pushf
fxrstor
jae
fcoms
push
mov
cmpsl
test
sahf
stos
das
int3
jp
mov
test
mov
cmpsl
out
aaa
mov
dec
dec
sarl
lods
jl
mov
sbb
sbb
movsb
mov
js
fs
bound
adc
push
mov
adc
int3
xchg
fdiv
rcr
pop
dec
call
pop
pop
lods
movsb
hlt
lret
or
imul
cli
or
pop
cltd
add
mov
cmp
xchg
cs
out
or
out
push
xor
je
fs
fcoml
insl
fcmovb
cli
aas
enter
xchg
inc
stos
clc
ds
pop
movsl
pusha
xlat
aam
jecxz
insb
pop
dec
mov
scas
mov
and
mov
pmulhuw
sbb
je
mov
pop
mov
insb
cmc
fisubrl
mov
insl
pop
pusha
xchg
mov
dec
decl
and
mov
test
bound
daa
push
lods
xchg
data16
mov
cli
push
xchg
inc
into
xor
mov
or
nop
mov
cmp
jb
lea
lods
loope
mov
jbe
cmp
fs
mov
adc
mov
mov
xchg
xchg
mov
inc
in
xor
fcmovu
icebp
inc
pop
pop
mov
pop
xchg
mov
dec
scas
test
lods
mov
rorb
xchg
insl
inc
push
xchg
pop
int3
mov
sub
pusha
shl
pushf
jecxz
mov
fmuls
mov
std
das
fcomps
nop
dec
test
mov
shlb
test
mov
sahf
pop
arpl
lods
mov
int3
push
pop
jbe
out
lret
mov
dec
lea
ja
jl
jo
subb
adc
add
mov
mov
mov
mov
xchg
pop
cmovge
daa
xor
scas
or
pushf
xchg
fdivrp
jne
jp
cld
iret
movsb
jmp
dec
rorb
mov
dec
test
add
mov
xor
pop
bound
mov
fimull
mov
jg
mov
mov
pop
int3
mov
imul
les
push
xchg
mov
das
mov
fsubs
jns
mov
mov
pop
mov
aaa
sbb
xchg
in
pushf
add
pushf
std
jnp
pusha
push
addr16
mov
push
cwtl
jp
sub
xor
mov
pushf
mov
push
js
push
fwait
into
cmpsb
test
pop
insb
adc
mov
fs
and
mov
fdivrl
xchg
dec
scas
arpl
lods
xchg
mov
je
mov
pop
arpl
cmpsb
xor
int3
mov
adc
dec
mov
lods
pop
xor
jp
add
jbe
sbb
sub
or
scas
xchg
pushf
mov
adc
pushf
and
dec
xor
mov
into
test
aas
sbb
lods
lcall
xchg
mov
dec
aam
sbb
pop
dec
jbe
jle
cwtl
mov
lcall
loop
mov
insb
ljmp
mov
mov
cwtl
or
test
movsb
mov
and
fs
nop
scas
pushl
mov
xchg
add
fmull
xor
jbe
pusha
mov
fidivl
or
je
lret
mov
push
aam
cli
inc
lcall
faddp
xchg
fsub
outsb
mov
bound
daa
sub
push
sub
dec
sub
out
addr16
ljmp
pop
mov
push
push
out
cmp
test
shrb
pop
push
mov
or
leave
in
cmp
outsb
scas
lret
mov
add
pop
xor
xchg
jp
push
into
pop
pop
add
imul
dec
cwtl
lcall
jl
bound
mov
fmul
mov
pop
stos
nop
cwtl
pop
adc
pop
lods
fs
rcl
lods
bound
fwait
pop
dec
jp
add
rclb
push
dec
out
mov
stos
movsb
insb
push
pop
fisubl
cwtl
aam
out
jns
ds
fistpll
fstpt
jo
ss
mov
mov
dec
outsl
aas
inc
cmp
push
dec
push
adc
sbb
cmp
mov
jne
jb
ja
cmpsb
dec
sahf
dec
lods
xchg
inc
push
imul
adc
push
scas
sub
bound
sti
push
je
add
mov
iret
pop
dec
mov
or
sub
xor
push
js
mov
pushf
push
insb
xorl
fnsave
jp
pusha
fdivr
push
adc
fildll
cmp
movsb
pop
cli
outsb
bound
mov
inc
dec
dec
pop
push
rcrb
push
add
mov
dec
sti
pop
xchg
mov
scas
sbb
aam
dec
fisttpl
mov
add
dec
cmp
jo
pop
mov
test
dec
lret
xor
das
mov
mov
fdivrl
lods
cltd
lret
cmp
jbe
mov
xorl
jge
je
lcall
lcall
xor
sbb
data16
daa
aad
pushf
arpl
mov
mov
nop
push
int3
scas
insb
movsb
lret
mov
ror
xchg
fcmovnu
fcomi
std
jne
addr16
ficompl
mov
mov
sbb
mov
mov
aaa
jbe,pn
movsb
dec
xor
add
lret
pop
jno
xchg
push
mov
in
out
jno
mov
sti
out
xor
jp
pusha
pop
pop
popf
dec
test
xor
das
push
aad
xchg
sbb
lret
mov
out
aam
jns
sbbl
or
mov
cmp
jbe
mov
out
xchg
or
mov
mov
js
pop
dec
xchg
pushf
test
pop
lods
mov
xchg
push
mov
mov
std
mov
jb
sahf
mov
test
mov
scas
push
mov
inc
sub
in
push
fildl
cld
adc
mov
fwait
ja
sahf
dec
cmp
insb
outsb
cs
dec
data16
cwtl
fs
insb
test
mov
xchg
xchg
fisubrs
fdivrl
pop
mov
mov
add
inc
push
mov
sub
mov
int3
nop
lret
lcall
jne
dec
iret
jp
shlb
push
pop
inc
mov
xor
adc
cmpsb
dec
pop
sbb
dec
stc
dec
data16
inc
into
movsb
dec
mov
test
int3
push
lcall
and
add
aaa
pop
push
movsb
mov
or
bound
or
out
cs
nop
push
pop
mov
lods
in
pop
mov
data16
xor
cmp
jp
xchg
mov
shrb
ret
enter
test
aas
popa
and
sub
mov
lret
lock
mov
pop
nop
jecxz
xor
mov
mov
xchg
push
js
pop
sub
pop
mov
sti
pop
add
dec
pop
sar
mov
mov
into
in
lret
scas
divl
mov
xchg
mov
add
inc
cmp
scas
sub
mov
dec
cmp
dec
jl
jl
push
jbe
fidivrs
sahf
mov
movsb
fisubrl
mov
dec
loopne
jp
add
js
dec
cwtl
mov
pop
push
add
enter
pop
movsb
jb
push
push
sbb
fidivrs
mov
outsb
jl
cmpsb
pop
lret
fs
int3
or
hlt
lcall
daa
push
jl
jo
ds
fwait
enter
lret
adc
fidivl
push
xchg
lea
cmp
mov
push
add
insb
adc
jl
sbb
pop
outsb
movsb
loope
mov
cmpsb
push
pop
in
adc
movsb
sahf
mov
aam
bound
and
xor
fsubs
sbb
je
cmpl
mov
int
movsb
stc
fstp
movsl
xchg
jmp
js
imul
outsb
mov
mov
inc
lods
add
das
lahf
xchg
sahf
or
ret
data16
mov
mov
fildl
fisubrl
push
cmp
dec
scas
inc
hlt
mov
or
lret
sbb
je
hlt
insb
xor
adc
fisubrs
je
push
fisubl
lea
mov
xchg
pop
scas
push
sbb
pop
lcallw
or
lcall
stos
dec
pop
jb
mov
pushaw
mov
pushf
xchg
fimull
mov
das
dec
dec
je
repz
mov
mov
mov
cmp
push
in
pop
stos
add
mov
sbb
aas
test
jo
lock
ret
insl
fwait
aas
lcall
mov
and
out
pop
mov
mov
loopne
mov
xchg
jp
out
ja
cpuid
push
aas
inc
mov
sub
mov
jno
in
filds
int3
lods
sahf
js
cmp
mov
stos
mov
movsb
xchg
and
mov
jnp
push
dec
fidivrs
lods
stos
push
xchg
mov
bound
pop
push
outsb
mov
xorl
nop
std
mov
sarb
jno
mov
add
xchg
stos
ret
lods
push
outsb
movsl
jmp
in
jmp
lret
or
mov
nop
imul
add
push
int3
or
mov
fisubrl
test
pop
cmp
mov
dec
test
dec
jnp
stos
jbe
insb
bound
lods
xchg
lret
imul
adc
ljmp
je
out
nop
mov
ja
cmp
pop
insb
cld
mov
stc
aaa
ja
mov
into
shr
stos
jo
cmp
movsb
fdivrl
pusha
hlt
jb
iret
pop
mov
nop
mov
add
add
adc
sbb
pop
mov
int3
adc
mov
mov
pushf
mov
icebp
jp
pop
dec
adc
int3
push
mov
mov
add
dec
fmuls
add
jno
iret
stos
nop
push
pop
rorb
pusha
pusha
dec
dec
iret
sub
mov
jo
mov
fcomi
sbb
std
mov
xchg
gs
push
pop
pop
movsb
out
sbb
push
xchg
or
inc
jae
stos
in
dec
mov
xor
into
out
mov
xor
and
cltd
cmp
jns
outsl
mov
int
mov
sub
dec
fnsetpm(287
fs
or
add
mov
pop
dec
jp
lods
xor
mov
hlt
test
cmp
pop
sbb
sbb
pop
int3
fcoml
ret
jl
hlt
mov
jbe
scas
sbb
xchg
or
jle
jnp
stos
das
pop
mov
pop
jbe
xchg
push
test
push
orl
fisttpl
mov
mov
ljmp
pop
mov
mov
mov
out
pop
movsb
mov
test
xor
jo
mov
outsl
cmpsb
insb
mov
in
movsb
mov
pop
dec
push
jmp
or
jp
fistpll
push
arpl
cmc
xor
aam
fmuls
xor
lahf
sbb
js
js
jl
mov
dec
push
sahf
dec
fs
pop
xor
mov
jbe,pn
fidivrl
jno
dec
mov
movsb
fisubl
pop
enter
scas
aam
fwait
sahf
mov
call
mov
popf
and
xor
insb
mov
insb
mov
mov
pop
insb
pop
mov
into
mov
pushf
jg
cmpsl
ds
outsl
aam
dec
ret
push
repnz
pusha
sti
sbb
iret
repnz
scas
pop
mov
cld
push
sahf
loop
ficoms
sbb
popl
jo
out
xchg
dec
in
jns
pop
aad
cmp
jge
lock
xchg
mov
jns
cmp
dec
mov
hlt
xchg
sub
sbb
rorl
xor
pop
inc
daa
mov
mov
into
add
mov
ret
sbb
fildl
test
pop
lods
mov
movsb
dec
repnz
out
inc
mov
fs
mov
push
mov
pop
cmpsb
mov
jo
xor
aam
mov
fidivrl
cld
or
jb
lods
rorb
push
mov
incb
pusha
mov
fisttpl
bound
mov
mov
mov
pop
dec
and
outsb
cwtl
daa
imul
mov
lret
lock
aam
mov
push
xchg
ja
ja
mov
dec
mov
je
faddl
bound
dec
cld
test
jp
push
sbb
and
ficoml
xchg
xrstor
mov
or
scas
push
adc
dec
pop
test
pop
push
xchg
add
pop
cmp
dec
mov
mov
mov
mov
fidivrl
push
dec
aaa
mov
push
xchg
pushf
jg
test
add
dec
inc
lds
scas
add
nop
sub
xchg
jnp
inc
pusha
enter
loopne
push
dec
pushf
xchg
xor
mov
sub
mov
xor
mov
setne
icebp
inc
stc
lahf
jmp
outsb
push
lret
xor
ret
sbb
mov
das
or
add
xor
nop
fwait
sub
test
cmp
fimuls
fdivrs
cmp
mov
bound
into
lret
pop
xchg
repz
cmp
jns
add
mov
ret
imul
in
mov
loop
stos
dec
cli
pop
faddl
or
pop
jp
outsb
lret
fadds
fdivs
jo
in
mov
jno
jle
imul
pop
push
xor
cmpsb
je
or
fildl
lds
push
dec
sub
jp
out
pop
sti
stc
and
jo
decb
stc
pop
ja
stos
pop
add
push
test
xor
jbe
add
repz
les
int3
je
lret
lds
and
fcoms
mov
gs
es
bound
jmp
hlt
mov
lea
mov
ja
lea
dec
lcall
not
mov
push
and
push
push
shll
cmp
fists
pop
add
mov
sbb
or
fisttpl
xorl
xchg
imul
pop
push
push
xchg
push
xchg
dec
cmp
dec
jo
ja
dec
js
mov
mov
pop
mov
sub
pusha
inc
das
push
jmpw
pop
scas
jo
sbb
and
shlb
push
ret
push
enter
and
mov
fwait
sub
stos
int3
dec
into
or
js
mov
mov
adc
into
mov
dec
sti
sbb
dec
mov
daa
iret
push
fisubrs
pushf
dec
dec
mov
pushfw
lret
or
add
push
mov
lret
mov
and
lock
repz
adc
lods
aas
cmp
insb
scas
shlb
dec
mov
push
mov
loop
sbb
stos
pop
hlt
mov
int
outsl
push
mov
cmc
int3
mov
movsb
push
mov
fsubl
fiadds
xchg
into
dec
insb
pushf
and
fsubs
dec
ror
scas
insl
cmc
pop
mov
test
dec
xor
fistps
mov
xchg
pusha
fdivrp
stos
lods
dec
mov
sub
test
nop
pop
bound
fcmovbe
nop
imul
push
jbe
lea
mov
pop
mov
rorb
push
fsubrl
insb
sub
inc
pop
jle
mov
cwtl
mov
mov
pop
shrb
xchg
outsb
fcom
fiadds
fwait
dec
stos
push
mov
dec
test
push
out
push
loopne
call
movsb
xchg
lods
fcmovnb
jbe
mov
dec
jno
pop
sub
cmpsb
into
push
mov
mov
push
mov
faddp
push
inc
or
shrb
lcall
sahf
test
sub
push
dec
xchg
daa
add
and
xor
mov
adc
sahf
mov
aam
jp
sar
ja
notl
fistpl
push
nop
ds
data16
sub
push
dec
pop
sub
jg
in
in
faddl
stc
pop
call
cmp
push
and
fisubs
popf
xchg
out
pop
cmpsb
outsl
fs
xchg
push
push
stc
lods
das
mov
push
rclb
fs
shrl
lret
js
jns
xchg
jb
stos
insb
push
mov
mov
mov
xor
xor
iret
push
push
test
mov
add
sub
cld
jge
sti
inc
test
sbb
int3
insb
dec
cmp
mov
cmp
lods
mov
scas
int3
xchg
fwait
xchg
fstpt
jae
or
pushf
leave
negl
test
mov
lret
dec
or
pop
mov
pop
dec
dec
popf
fdivs
add
sahf
xor
cmp
js
mov
pop
mov
mov
loopne
xor
push
hlt
mov
cmpsl
mov
lock
push
push
rclb
mov
push
xchg
dec
push
fiadds
xor
mov
push
xor
inc
cwtl
repnz
fldl
jbe
popa
add
xchg
mov
lock
imul
fimuls
cmp
pop
mov
out
add
xchg
push
dec
mov
scas
pop
lret
cwtl
sti
ds
sarl
jp
cmp
ficoms
in
mov
rorb
sbb
mov
lock
mov
and
pop
fidivl
fcmovb
fs
in
cmpsb
in
sub
pop
mov
mov
stos
pop
mov
les
out
push
mov
inc
leave
add
mov
or
mov
and
dec
mov
bound
fdivr
cwtl
xor
adc
sub
sub
mov
xchg
pushf
jb
mov
inc
adc
mov
cwtl
mov
cld
jne
mov
test
jbe
xchg
lret
and
mov
das
pop
stos
mov
orl
xor
push
inc
insl
lret
mov
mov
push
jb
aam
xchg
push
jp
sahf
sbb
pop
mov
push
mov
fsub
sarb
in
daa
lcall
lret
call
insb
ja
gs
arpl
clc
or
xor
fsubp
bound
dec
fimull
push
out
daa
sahf
lods
push
cmp
pop
mov
call
jb
lock
sets
jge
push
mov
addr16
push
dec
sbb
test
pop
dec
inc
lods
sahf
pushf
pusha
test
mov
fsubr
inc
std
cmp
cmpsb
pop
push
cmp
js
int3
pop
pop
pop
je
pop
pop
ljmp
sub
out
outsb
xchg
insl
stc
mov
das
pop
pop
pop
aam
data16
sbb
ds
repz
sub
jb
dec
imul
jmp
cmp
push
lcall
idiv
jnp
jb
out
fs
jbe
pushf
nop
mov
sahf
movsb
popf
xchg
jbe
fistps
dec
mov
mov
xor
sub
into
pop
xor
jp
cli
mov
jge
lods
fs
mov
rol
and
mov
push
insb
and
pop
mov
icebp
xor
pop
mov
dec
fcmovnb
pop
mov
inc
jl
push
pop
aam
sub
ficompl
daa
pusha
mov
cmpb
int
movsb
sub
cmc
repnz
xchg
sbb
xor
push
pop
fdivrl
push
jp
sub
mov
pop
push
dec
cmc
test
insb
xorl
xor
cmp
out
jnp
int3
aam
je
cmp
mov
mov
loope
adcl
xchg
adc
mov
fnstcw
outsb
cwtl
repnz
xchg
std
inc
cmp
mov
cs
jmp
xorw
mov
push
or
cmc
imul
loopne
push
popf
loop
mov
or
test
add
mov
es
dec
dec
sub
pop
push
ret
lods
stos
outsb
pop
jo
xor
jno
daa
push
je
fsubp
mov
cld
adc
lret
mov
test
clc
movsb
sub
fs
int3
shll
mov
incl
inc
jp
push
cltd
cmp
outsb
lret
js
mov
xor
jp,pt
ja
mov
sbb
fstpl
test
bound
lock
hlt
dec
hlt
sbb
pop
out
xor
shrb
leave
pop
xchg
xchg
sbb
dec
aam
mov
movsb
imul
jb
hlt
xor
cmp
data16
jp
pop
sbb
push
arpl
ljmp
cmp
into
mov
je
push
or
mov
mov
testb
fs
out
and
cmp
mov
hlt
dec
out
cld
mov
pushf
bound
out
dec
add
adc
cmp
dec
push
push
cmp
ror
mov
jle
out
dec
ret
jge
mov
cmpsb
ja
jg
add
xor
cs
stos
cmp
push
push
std
sub
outsb
inc
inc
xchg
cmp
stos
lret
test
test
popf
bound
jp
cli
inc
lahf
js
mov
imul
pop
sbb
insb
cmp
mov
pushf
xchg
pop
push
jp
ss
outsb
data16
and
sub
insl
fdivrl
pop
dec
lcall
dec
ficoml
pop
dec
jbe
js
xchg
dec
outsb
sub
jbe
cmpsb
inc
jb
mov
push
cwtl
pushf
popa
lods
pushf
pop
mov
shlb
fnstenv
cmp
js
push
and
add
adc
je
in
addr16
insb
or
jle
jnp
sar
mov
xchg
sub
js
sbb
jnp
dec
sub
loopne
or
add
mov
mov
shlb
idivl
jbe
stos
push
xchg
xor
gs
mov
pop
in
cmp
sub
mov
repz
out
xchg
mov
push
push
pop
daa
pop
pop
cmpsl
adc
sbb
mov
imul
cmp
pop
mov
pop
aas
outsb
bound
xchg
out
add
jmp
rcrl
mov
nop
pusha
or
inc
jb
adc
sub
ficomps
lock
mov
mov
adc
inc
adc
push
cmpsb
or
mov
mov
mov
jmp
mov
mov
outsb
test
dec
xchg
arpl
jb
jp
dec
mov
and
inc
das
adc
ss
dec
pop
mov
ja
or
jo
push
push
imul
insb
pop
movsb
dec
stos
mov
mov
data16
push
pop
mov
lret
jo
std
fwait
in
mov
lret
mov
fwait
mov
pusha
ja
cmpsb
mov
pop
mov
xor
push
push
lret
lock
xor
test
inc
cld
mov
stos
fwait
cmpb
inc
mov
into
cmp
js
xchg
pop
mov
cltd
divl
pop
movsb
orl
scas
mov
xchg
xchg
shrl
bound
test
adc
push
lcall
lcall
xlat
pop
sahf
mov
in
jp
jl
push
inc
mov
inc
push
mov
bound
and
andb
insl
or
mov
push
mov
out
sbb
cmp
outsb
dec
in
mov
add
js
jl
pop
pop
mov
in
mov
inc
push
dec
inc
jno
push
pushf
inc
xchg
mov
push
nop
ds
push
mov
dec
lods
mov
mov
mov
xor
mov
cmp
nop
jae
stc
jmp
adcl
dec
inc
xor
bound
mov
sarb
jo
dec
jp
hlt
mov
sarb
int3
inc
dec
rorb
aas
je
xor
sarb
mov
fldcw
pop
pop
mov
jo
pushf
sub
or
jp
mov
lret
jp
inc
jns
jp
out
imul
push
pop
jbe
in
mov
jcxz
daa
lcall
cmp
mov
pop
movsb
shlb
outsl
lcall
ss
mov
sti
push
test
cmp
je
fs
mov
and
mov
subb
and
jge
push
xchg
iret
add
push
fs
jae
sahf
insb
dec
mov
out
mov
lret
lods
sbb
pop
lcall
stos
xlat
jecxz
push
lret
xchg
sahf
mov
rorl
sbb
inc
fistpl
fmuls
test
push
sbb
push
pop
adc
push
jne
adc
rcr
sbb
mov
mov
mov
sti
inc
pusha
push
sbb
xor
mov
ljmp
lods
pushf
mov
nop
and
dec
icebp
fadds
mov
pop
xchg
js
pop
adc
lcall
int
test
sub
dec
add
push
lods
push
int3
adc
add
jecxz
xor
push
mov
dec
cmp
lret
inc
cld
pop
int
movsb
nop
mov
xor
mov
mov
cmp
inc
js
mov
mov
mov
ret
popf
push
jg
nop
dec
or
pop
or
sbb
in
dec
movsb
pop
stc
sahf
ficoml
dec
pop
cwtl
mov
aaa
mov
mov
push
ljmp
test
ljmp
mov
cmp
mov
cmp
scas
mov
inc
pop
lret
jl
xchg
jo
std
dec
stos
test
jmp
aam
pop
dec
jnp
mov
pushf
pop
mov
push
cwtl
dec
insl
pop
or
or
or
in
push
loop
cmp
stc
fiadds
in
xor
out
mov
jg
enter
mov
movsb
sub
bound
xor
push
xor
mov
or
stos
mov
fimull
mov
xchg
in
and
fildll
ss
movsb
xchg
jle
lds
lods
sbb
movsb
sahf
cmc
dec
stos
outsb
xor
lcall
aas
mov
fsub
cld
inc
ficompl
ja
shlb
jl
add
iret
mov
pop
sahf
mov
shl
push
push
insl
js
dec
adc
scas
ret
outsb
push
xor
fcomp
shlb
into
mov
adc
push
into
dec
lcall
enter
mov
pop
push
loopne
inc
cld
xchg
and
movsb
mov
add
cmp
dec
add
dec
lods
int3
scas
mov
push
fisubl
pop
mov
inc
pop
fstpt
lcall
fistpll
out
cmpsl
iret
ja
scas
shlb
movsb
jo
lret
mov
das
push
mov
or
lods
dec
stos
mov
sahf
lret
pop
cmpsb
push
es
sub
repnz
aad
add
loopne
dec
mov
or
inc
dec
daa
dec
xor
and
scas
mov
test
cwtl
aam
mov
int3
lahf
js
mov
xchg
fcompl
push
push
sbb
movsb
cli
lret
repz
movsb
clc
sbb
xchg
je
add
out
pushf
push
sahf
mov
sub
int
mov
aam
sbb
sub
cmpsb
fsubrl
mov
mov
mov
jbe
imul
push
pop
in
pop
or
cmp
cmp
sub
and
ret
jmp
movsb
dec
dec
xchg
fs
mov
mov
push
lods
push
cmpsb
daa
push
fwait
cmp
mov
pop
inc
pop
pop
out
cmp
insb
mov
insl
fcmovbe
push
clc
sahf
mov
sub
sar
xchg
mov
mov
cmp
mov
mov
dec
mov
pop
scas
pushf
orl
adc
sub
aam
cmpsl
ss
shlb
jnp
mov
push
cmp
xchg
out
pop
push
inc
pushf
pop
pop
in
mov
ret
mov
pop
sub
sbb
rclb
int3
jmp
imul
shlb
int3
or
dec
fcmove
cld
fstl
mov
je
daa
sub
add
pop
pushf
outsb
mov
pop
mov
dec
mov
mov
sub
add
aam
daa
mov
and
mov
pusha
mov
mov
loopne
mov
xchg
data16
pop
pop
xlat
cmp
ror
inc
ficoml
mov
orb
mov
push
repz
mov
dec
nop
jns
pop
xchg
bound
inc
push
in
mov
sub
pop
mov
dec
mov
add
jp
adc
icebp
push
cs
test
dec
aas
lock
or
dec
jl
jp
cmp
mov
cmp
ja
outsb
pushf
jo
out
dec
int3
js
cmp
lcall
add
push
pusha
lret
dec
mov
sti
pop
lea
mov
cs
xchg
pushf
xor
push
jg,pn
cmp
pop
mov
fisubs
push
outsb
mov
mov
mov
xchg
mov
jbe
push
add
mov
mov
subl
push
xor
pop
lods
mov
shlb
jg
mov
aam
mov
xor
in
mov
dec
xchg
jl
lret
orl
in
jb
lret
mov
dec
gs
and
xchg
sbb
fldt
push
pop
lret
pushfw
xor
pop
pop
jae
push
lcall
cmp
push
bound
cmpb
lods
cwtl
or
adc
pop
ficompl
sbb
pusha
pop
in
mov
pop
jnp
push
pop
cwtl
out
add
rcll
cmpsb
cmp
pop
mov
jno
adc
cld
arpl
dec
mov
fsubs
jo
mov
cmp
iret
and
mov
stos
inc
mov
addr16
bound
mov
mov
test
pop
push
mov
jo
pop
xchg
xchg
adc
sub
scas
aam
sbb
dec
nop
cwtl
mov
xor
xchg
pop
jb
sub
xchg
push
or
mov
mov
cld
xchg
push
xchg
push
arpl
fsubl
rcrl
test
mov
jbe
xchg
xor
xor
hlt
mov
and
inc
jnp
mov
data16
pusha
je
push
pop
jp
sahf
fldl
rorb
and
pop
inc
fimuls
pushf
movsb
std
out
jg
pop
push
cmp
rclb
out
les
fisubs
lds
stc
xchg
jl
pop
nop
hlt
jo
gs
add
test
sub
and
repz
jb
fdivrl
enter
dec
test
out
mov
dec
js
jp
js
jbe
push
faddl
dec
aaa
pop
mov
mov
fs
push
fistpl
pop
mov
mov
sbb
push
push
js
lcall
cli
cmp
cld
in
fldt
pushf
dec
push
mov
mov
je
lods
cmpsb
mov
js
inc
pop
jbe
sti
cmpsb
mov
mov
sbb
pop
xchg
mov
add
cmpsl
mov
jecxz
aas
xor
jb
lret
loop
jecxz
pushf
mov
sub
push
mov
add
fmul
dec
ja
js
mov
scas
test
adc
das
push
dec
cwtl
nop
inc
cmp
pop
lcall
test
outsb
dec
and
xchg
push
push
lcall
mov
in
in
out
jp
test
xchg
pop
xor
imul
dec
mov
test
hlt
mov
add
fbld
imul
pushf
add
jl
mov
out
rclb
lcall
xchg
rcrb
xchg
sub
nop
out
sub
mov
and
cwtl
js
cmpsb
stos
hlt
pop
jp
sub
sub
sub
pop
js
jge
xchg
ret
mov
add
or
lods
sarb
fcoml
mov
push
imul
lock
call
dec
xor
mov
test
das
add
push
lret
int
xor
mov
test
repnz
push
add
xchg
mov
insb
lods
ficomps
imul
mov
mov
lret
adc
nop
iret
pushf
jmp
cli
orb
cmp
mov
mov
jl
lret
or
add
lret
in
daa
adc
push
mov
push
das
ds
insb
mov
jb
mov
test
adc
push
outsb
mov
dec
dec
sub
adc
jmp
int3
dec
int3
popf
cmp
mov
sar
jo
aam
jp
add
xorb
pushf
in
fsubrs
mov
pop
mov
push
pop
lret
movsb
xchg
mov
mov
adc
and
or
mov
xlat
jecxz
pushf
into
mov
pop
popf
into
add
aas
xchg
pop
incl
jnp
lret
cmp
cwtl
adc
pusha
pop
cmpsb
aam
in
dec
insb
int3
js
ret
insb
rolb
cmc
inc
mov
sbb
fs
pop
js
dec
xchg
sub
xchg
cmpsb
jnp
push
add
lods
jno
aas
aaa
xchg
sahf
nop
fcoms
ret
and
mov
dec
cmp
push
movsb
fsubs
xchg
pusha
xchg
rcrb
adc
aaa
or
js
push
pop
rorb
nop
add
adc
lods
pop
imul
movntps
pop
push
mov
jbe
pushf
aam
mov
sti
jnp
pop
mov
into
and
movsb
int
in
xor
xor
and
das
pushf
dec
inc
xor
movsb
dec
and
enter
outsb
xchg
fiaddl
shlb
push
fdivs
aam
pusha
ret
cmp
dec
jne
sarl
pusha
lods
fidivrl
cmp
dec
outsl
jnp
push
mov
stc
inc
jno
aas
mov
pusha
push
inc
xor
sarb
ret
insb
bound
add
into
in
scas
fsubrl
shrb
pop
mov
lea
push
mov
adc
push
fcmovnu
out
fcoml
push
cmp
pop
jb
fidivrs
adc
push
push
outsb
sbb
in
mov
mov
out
mov
push
ficomps
xchg
mov
dec
jp
rcl
mov
ror
sub
ret
fimuls
sub
pusha
int
mov
cmc
mov
je
and
inc
mov
fidivrl
add
push
cmpsb
mov
dec
lret
push
mov
mov
jno
sbb
or
sub
dec
push
daa
jo
cmp
je
outsb
lods
scas
xchg
insb
icebp
inc
pop
push
add
lods
sub
js
xor
jp
xchg
jl
cmpsb
mov
rcrb
jmp
pop
je
adc
push
mov
mov
mov
sub
xchg
pop
outsb
dec
int
dec
xor
and
inc
and
push
jne
ficompl
xor
pusha
mov
pop
fidivs
jbe,pn
cmp
mov
add
nop
adc
andl
mov
fbstp
ja
xchg
or
cwtl
shrb
icebp
dec
lods
mov
dec
cld
shrb
pop
int3
fs
mov
fs
sahf
insb
jbe
ret
dec
ror
mov
in
pop
pop
in
sbb
sub
mov
xlat
pop
adc
pop
jne
lock
ja
mov
rorb
outsb
jp
mov
pop
sarb
into
or
in
mov
ljmp
and
mov
add
push
ficompl
xor
lcall
pop
sarl
ljmp
pusha
nop
mov
pop
cmp
mov
inc
jbe
jns
jbe
outsl
lcall
mov
jno
sub
jp
fwait
es
xor
push
hlt
int3
shrb
sbb
dec
dec
push
mov
push
fmul
pop
outsl
bound
inc
add
stos
fsubrl
sub
mov
mov
adc
jp
cli
out
mov
mov
inc
adc
inc
xor
push
mov
dec
jno
mov
scas
mov
out
cmpl
mov
dec
js
jl
sarb
mov
pop
jge
movsl
pusha
dec
ja
mov
je
aaa
test
pop
mov
cmp
xchg
cmpsb
dec
xor
xor
cmp
dec
pusha
mov
mov
sub
insb
pop
shlb
scas
out
fwait
push
dec
cmp
lods
movsb
push
rclb
shrb
outsl
scas
cmp
test
pop
sahf
daa
aam
mov
daa
push
pop
bound
push
pusha
fistpl
in
pop
scas
or
push
pushf
rolb
push
push
out
andb
test
mov
push
sub
xor
mov
cmp
xchg
je
cwtl
push
dec
aas
insl
fidivl
pop
adc
fildll
mov
js
pusha
cs
in
je
jo
add
push
xchg
cmp
int3
imul
mov
movsb
pop
dec
jno
fidivl
mov
mov
xchg
mov
pusha
int3
dec
adc
and
fcmovnu
push
lods
bound
mov
into
mov
dec
mov
repnz
pop
mov
mov
mov
js
push
mov
push
pop
dec
mov
mov
cmp
test
inc
rcrb
hlt
push
fcmovnb
push
into
dec
sub
push
xchg
aaa
call
mov
insl
xlat
mov
push
cs
fcmovu
stos
push
xlat
jp
sbb
lret
mov
sbb
jnp
je
negl
inc
rorl
dec
mov
popa
jp
mov
dec
hlt
push
mov
sub
cmc
in
add
xor
into
pop
xchg
repz
lahf
hlt
sbb
jmp
decb
mov
insb
hlt
mov
jg
fcoms
test
push
ror
push
sbb
imul
in
out
jp
into
mov
pop
mov
js
mov
pushf
dec
repz
mov
test
xor
ss
jp
pushf
negl
xchg
insb
movsb
enter
lock
out
cmp
dec
int3
push
jl
pusha
fimuls
pop
xchg
lcall
dec
dec
xor
jno
xchg
push
inc
mov
jo
imul
add
or
cmp
jno
movsb
scas
pop
aam
loop
inc
mov
in
mov
in
lret
loopne
mov
dec
test
fcmovnu
int3
cmp
dec
shrb
jg
xor
cmpsb
adc
or
jb
lcall
xchg
lods
cmp
sti
repnz
jb
mov
mov
aam
outsb
outsl
xor
mov
lods
bound
fadds
fidivs
pusha
movsb
adc
mov
bound
and
into
lahf
dec
movsb
push
addr16
or
shlb
push
test
movsb
inc
push
push
jns
cltd
pusha
mov
pop
dec
mov
es
xlat
pop
mov
jecxz
dec
mov
aam
pop
jo
xor
stc
icebp
arpl
movsb
jbe
repnz
push
cld
inc
pop
repnz
rcr
cld
jns
jae
lret
sbb
bound
into
mov
decb
sahf
sub
mov
cli
aas
cld
out
pusha
lock
jb
lock
and
xchg
out
sub
add
jbe
fcmovnb
push
mov
pushf
jnp
fcoms
mov
rorb
add
mov
xchg
fcompl
mov
xchg
dec
inc
ret
inc
push
mov
sti
or
mov
ljmp
xchg
inc
daa
outsb
sahf
push
xor
xchg
cmp
or
test
fmulp
mov
add
dec
mov
xor
test
lret
push
mov
movsb
mov
shl
mov
jbe
mov
sbb
enter
mov
pushf
adc
in
and
add
into
push
and
mov
jb
lods
jmp
xor
jo
in
sub
push
je
movsb
pusha
das
jb
pop
dec
imul
stos
mov
add
mov
rclb
adc
in
or
pop
fmuls
mov
pop
scas
outsb
aam
sbb
push
push
mov
pop
outsl
int3
in
mov
fidivrl
mov
addr16
inc
fidivl
stc
adc
insl
mov
jb
mov
mov
push
aas
dec
sbb
cmp
lcall
and
aam
mov
sbbl
ds
cs
lcall
stos
in
je
dec
fmul
cmp
nop
dec
scas
dec
fwait
rclb
fsubrs
insb
push
js
sub
mov
mov
subl
xchg
cmpsb
xor
xchg
mov
xor
push
adc
sub
pop
push
rolb
dec
lcall
add
inc
mov
stos
bound
and
pop
out
mov
or
jg
aas
xor
jmp
cmp
pushf
js
je
rorb
out
fidivl
mov
lret
data16
mov
lret
xchg
in
insb
push
lods
cmp
inc
sti
js
pop
lea
mov
stos
mov
lock
leave
sbb
dec
test
adc
pop
dec
add
fadd
movsb
mov
lret
mov
push
jl
sahf
sub
scas
bound
jnp
mov
movsb
sub
rclb
sub
fistpl
nop
test
xor
jb
daa
fs
cli
inc
push
cld
mov
push
mov
ja
jnp
jnp
dec
mov
jp
mov
imul
fistl
push
mov
shrb
mov
cmp
jb
and
shl
arpl
lcall
sbb
pushl
stos
jbe
cmc
jp
add
xor
into
cmp
mov
fldt
cmp
xchg
aam
mov
stos
adc
xchg
adc
jns
push
dec
push
fwait
nop
in
xchg
filds
lret
ficoml
xor
sarb
mov
into
pop
jbe
mov
mov
jmp
pop
dec
mov
jnp
push
jp
outsb
data16
cmp
dec
push
fadd
mov
pop
int
call
jbe
mov
in
dec
test
insb
fcomps
int
mov
inc
push
pop
nop
lret
lret
les
mov
ds
fwait
jp
or
cmp
les
lcall
sub
stos
icebp
dec
mov
ret
pmaxub
fisttpl
int
inc
and
stc
mov
jmp
dec
push
push
jnp
mov
xchg
sub
in
fadds
stos
loopne
mov
outsb
xor
rcrb
mov
test
mov
in
jg
mov
insb
pop
leave
mov
fidivl
stos
adc
lcall
sbb
cwtl
jp
stos
xchg
pop
mov
mov
loop
add
lods
rolb
data16
je
mov
push
and
movsb
xchg
adc
add
push
pop
fcomps
aas
jmp
xchg
cmp
cwtl
cmp
push
lock
subl
push
mov
and
js
dec
dec
mov
dec
aas
lret
dec
inc
jp
js
sbb
sbb
insb
mov
nop
ss
jb
jecxz
fnsave
mov
mov
fldenv
outsb
mov
ss
insb
or
sarb
mov
dec
xor
and
mov
pusha
hlt
pop
jb
and
loop
ljmp
jp
pushf
push
cmpsb
or
jb
nop
mov
incb
fdivrl
std
sub
cmp
scas
inc
mov
push
sahf
push
jecxz
aaa
push
mov
int3
xchg
push
mov
fcompl
mov
fidivl
lret
test
pop
mov
xor
sbb
cmp
into
mov
push
mov
jno
xchg
jns
mov
dec
mov
int3
pushf
mov
xor
jl
fcoms
adc
shlb
jbe
int3
pop
pushf
mov
fadd
jnp
mov
lds
movsb
scas
xchg
mov
pop
fmull
stc
jp
xsavec
stos
jge
add
pop
je
arpl
adc
fidivrl
insb
push
lcall
into
aas
mov
dec
mov
and
data16
pop
jb
aas
cmp
mov
sbb
movsb
push
cmp
lcall
sbb
pop
mov
adc
mov
mov
sbb
stc
sub
aam
mov
shll
add
dec
daa
cli
dec
sub
pop
cmp
lods
mov
lret
int
nop
insb
scas
mov
fisubl
xchg
adc
xor
lods
lret
sub
push
stos
jnp
dec
push
push
nop
pop
pop
inc
pop
movsb
pop
rcl
dec
adc
lods
mov
std
jl
push
test
sub
lods
pop
inc
aam
xor
scas
mov
lods
fidivrs
into
outsb
stos
pop
mov
clc
push
out
dec
scas
mov
pusha
pop
negl
inc
gs
pop
aaa
mov
lret
lods
out
ret
lds
push
jnp
pop
mov
push
dec
aam
pop
jp
push
lods
test
das
fsubrl
dec
mov
lret
jb
mov
nop
jo
xchg
fcoms
mov
jp
rorb
in
shll
mov
bound
push
lret
pop
pop
sbb
push
jle
in
sub
mov
xchg
sbb
adc
lret
ss
sbb
sub
push
push
mov
jmp
mov
aas
push
iret
push
lock
cmp
pusha
bound
adc
fdiv
dec
into
mov
mov
out
xor
add
rol
stos
outsb
push
adc
shlb
mov
movsl
ds
add
pop
inc
jns
loop
push
push
fsubrs
mov
js
cli
jecxz
push
push
xor
nop
xchg
jb
leave
es
adc
shlb
adc
mov
dec
stos
lret
push
sub
jp
sub
fidivs
pop
mov
mov
pop
fidivrl
out
rorb
sbb
pop
dec
jg
shrl
mov
test
xlat
lcall
mov
lret
dec
mov
mov
add
mov
cmpsb
ss
xchg
insb
sbb
mov
int
mov
mov
mov
test
dec
into
out
mov
mov
data16
sbb
pushf
mov
scas
jle
xlat
cmp
dec
push
out
mov
xor
movsb
mov
jns
pop
pop
mov
out
mov
mov
jp
mov
push
shrb
mov
xchg
mov
mov
inc
pop
xchg
out
js
nop
les
mov
push
aam
mov
mov
int
pxor
mov
stos
push
jns
mov
rcl
into
insb
mov
hlt
popf
xor
movsb
outsb
xor
cmp
jbe
faddl
jae
adc
xchg
mov
pop
cs
add
jns
fidivl
cld
int3
mov
jp
stos
loopne
jo
sub
or
je
mov
add
lock
ja
mov
dec
mov
cmp
into
mov
lret
and
mov
mov
add
test
sbbl
out
ds
push
enter
pop
jbe
popl
push
mov
fs
stc
jb
and
fisubl
mov
lods
dec
jp
dec
xor
aad
dec
jno
mov
mov
es
aaa
add
adcl
mov
or
fisttpl
or
mov
pop
jl
movsb
xor
dec
or
cli
mov
icebp
fdiv
sbb
sub
jl
pop
lods
rorl
cmpl
lods
mov
pop
incb
mov
hlt
lds
xchg
add
out
jnp
lcall
fimull
int3
mov
daa
adc
jne
push
cmpsb
adc
pop
loopne
pop
xchg
xor
ret
mov
fistpl
lret
daa
dec
cli
inc
cld
push
push
push
and
aad
sti
and
pop
mov
jecxz
mov
add
xor
movsb
je
adc
mov
mov
xchg
add
punpcklbw
and
jl
pop
push
imul
xchg
sub
fdivrs
out
outsb
mov
stos
sub
repnz
mov
mov
pushf
inc
bound
dec
fsubp
mov
data16
mov
outsb
cmp
mov
and
push
dec
enter
pusha
inc
or
lock
roll
cmp
adc
adc
lcall
into
shlb
cmp
push
dec
and
int3
movsb
xchg
in
nop
scas
pop
int3
lock
pusha
cmc
or
dec
pushf
or
daa
fdivl
xor
jp
fadds
das
add
sbb
jnp
sub
mov
out
mov
in
iret
test
mov
je
mov
inc
out
sahf
aas
sub
lcall
cmp
int3
push
pop
push
xchg
test
or
push
rcr
cli
mov
pop
jae
repnz
mov
add
aam
mov
add
jbe
es
pop
mov
enter
mov
das
into
dec
sub
sub
scas
sub
add
jp
outsl
inc
mov
pop
js
xchg
mov
into
das
fstps
jne
mov
push
daa
fmul
xchg
cmp
test
jge
sahf
mov
dec
adc
dec
xchg
adc
sbb
xchg
pushf
icebp
mov
hlt
dec
fcmove
lock
in
jg
lods
jo
cmpsb
pushf
push
pop
mov
lret
das
dec
pop
xchg
inc
add
xor
inc
fcomps
or
sub
dec
cwtl
xchg
and
jp
pop
sahf
mov
fs
int3
in
mov
js
mov
bound
movsl
movsb
cmp
pop
xchg
int3
fisttpl
lods
lcall
mov
pop
adc
iret
data16
pop
sahf
mov
pop
lret
loopne
aam
inc
or
push
jge
push
push
mov
jns
sub
mov
inc
data16
ja
mov
dec
es
fidivrs
pop
cmpsl
out
cwtl
nop
lcall
rcll
mov
je
bound
mov
test
ficoml
mov
xor
push
int3
shl
xchg
lock
jmp
gs
add
aad
popa
and
lock
pushf
scas
std
test
outsb
cmp
mov
stos
push
shlb
int3
cmpsb
mov
jbe
das
add
mov
pop
enter
inc
in
repnz
pushl
bound
or
jnp
xchg
lods
pushf
outsb
sub
mov
insb
jl
dec
stos
std
push
xchg
sub
and
out
popf
sbb
test
pop
jo
pop
cmp
lods
pop
fisubs
rcrb
lret
les
mov
jb
pop
ror
pop
xchg
mov
test
mov
mov
scas
addr16
mov
adc
pop
aam
gs
pushf
insl
mov
mov
xor
pop
cmpsb
mov
jbe
mov
push
mov
mov
push
xor
lods
xchg
pop
in
inc
lcall
dec
sahf
imul
decl
js
stos
jp
out
jb
inc
sar
mov
push
jp
mov
mov
lret
test
fists
out
add
pop
cmp
into
pushf
mov
sbb
mov
and
xlat
push
xchg
loopne
daa
cwtl
into
mov
out
mov
sahf
aam
mov
xchg
pop
dec
shrb
mov
lods
je
mov
mov
insb
push
xor
dec
jae,pn
push
xor
cmp
jbe
mov
cmp
pop
ds
movd
pop
das
mov
data16
push
jp
arpl
mov
xchg
test
dec
mov
mov
xchg
mov
int3
xchg
adc
cmpsb
out
jp
cmpb
insb
nop
push
test
pop
or
sbb
add
pop
stos
shlb
out
mov
xchg
in
divl
pop
push
ficomps
pushf
pop
stos
mov
flds
cmp
push
mov
fistpl
sbb
lcall
sahf
test
push
dec
in
lock
bound
scas
pop
inc
mov
lcall
xor
jmp
cmp
mov
jb
stos
pop
xchg
andb
push
ret
dec
xchg
xor
in
push
nop
mov
inc
lods
imul
outsb
je
xor
or
iret
xor
dec
fneni(8087
cmp
jl,pt
out
in
and
lahf
pop
cmpsl
lret
mov
addr16
mov
add
cmpxchg
bound
cmpsb
mov
dec
lods
pop
hlt
mov
nop
test
stos
daa
jp
mov
xor
stos
pushf
add
mov
pop
fimuls
mov
dec
lods
dec
mov
sub
nop
ficomps
cwtl
cmp
sahf
push
jns
movsb
jl
mov
pop
aaa
push
add
push
and
lcall
sahf
push
mov
out
jle
lret
fisubrl
mov
lret
js
aad
mulb
imul
mov
push
adc
or
pop
jp
pop
pop
or
xchg
ror
cmpsl
mov
pop
xor
mov
mov
xor
outsb
lret
outsb
cmpsb
xchg
sarb
xchg
test
pop
fdivs
xchg
movsb
pop
aaa
sahf
pop
push
mov
dec
xchg
xor
add
and
js
js
ss
xchg
imul
jp
pusha
les
mov
fcom
rcrb
arpl
test
pop
pop
add
test
mov
mov
pushf
cmp
cmpsb
xchg
mov
push
fimull
jb
or
cmp
aam
jno
mov
cmp
jo
sarb
stos
mov
sub
das
mulb
fs
jo
xchg
repnz
jne
jge
shl
xor
leave
and
jnp
xor
mov
adc
pop
subb
mov
push
fwait
jb
cwtl
int3
mov
repz
add
inc
cmp
sahf
inc
pushf
out
mov
xchg
nop
mov
mov
cmp
xchg
dec
mov
in
push
cld
daa
pusha
test
adc
repnz
inc
shl
mov
fidivs
inc
lods
xor
jecxz
sbb
cmp
push
fsubrs
jae
movsb
pop
sti
inc
dec
int3
mov
shr
in
xchg
pop
mov
pop
dec
int3
sbb
fcmovne
sub
pop
mov
jb
repz
jb
pop
aam
out
into
js
pusha
out
or
das
cmp
xlat
mov
enter
sbb
dec
pop
jp
rcrl
sub
jbe
ss
jo
cmp
js
shl
data16
jg
xor
lcall
push
fsubl
pop
movsb
repnz
aam
xor
insl
outsb
cld
mov
jb
fsubrl
sbb
push
mov
xor
test
lock
mov
add
jo
int3
fadd
dec
cltd
std
enter
repnz
mov
pop
jbe
sbb
adc
mov
xchg
stos
data16
sub
lret
aaa
mov
adc
xor
lods
mov
and
insb
jno
dec
fsts
cli
and
jp
scas
jge
xor
pop
aas
xor
mov
or
dec
xor
stos
and
fsubs
scas
sbb
imul
mov
lret
cwtl
mov
ja,pt
dec
ja
mov
dec
adc
loopne
jecxz
out
mov
sbb
mov
fistpl
stos
fcompl
js
fimull
lret
xor
mov
xor
mov
jecxz
pusha
lret
test
sub
or
stos
jb
mov
mov
cmp
push
push
pop
mov
dec
movsb
add
data16
scas
xchg
jbe
ret
fcompl
fs
mov
inc
mov
fsubrl
push
ds
pusha
bswap
push
sti
mov
fsubrs
aam
pop
ss
je
sbb
cmp
cmpb
shll
or
pop
sar
xchg
ss
fs
jb
je
adc
lret
lret
pop
cld
push
fsubs
inc
pop
mov
pop
bound
dec
jg
mov
jbe
cs
lcall
sub
mov
mov
fs
movsb
jb
and
das
sarl
xor
and
and
push
mov
pop
inc
into
scas
mov
mov
push
sahf
jmp
fs
outsb
dec
jo
pushf
fcomi
mov
je
dec
into
cwtl
insl
dec
xor
and
jbe
ret
fwait
insb
xchg
or
or
lret
push
out
push
pop
fiadds
mov
push
cmp
inc
aam
int3
or
incl
out
dec
bound
mov
push
jp
push
cld
int
lcall
mov
movsb
mov
pop
sbbb
cwtl
mov
shrb
add
jl
insb
out
mov
das
pop
pop
nop
and
fisubs
or
mov
sbb
enter
jecxz
fidivs
mov
cld
push
pop
lock
ljmp
shlb
cmp
dec
lock
ret
xchg
repnz
xor
cmp
insb
xchg
mov
lock
xor
sub
aaa
cwtl
xlat
shlb
lcall
xchg
lret
inc
inc
fimuls
mov
cmp
push
into
jo
mov
dec
pop
fiadds
pop
cs
dec
mov
mov
push
mov
lahf
mull
das
rorb
jne
dec
out
jbe
push
imul
add
sbb
scas
jle
jecxz
pushf
cltd
pop
sti
dec
mov
mov
imul
mov
xchg
push
jo
cwtl
adc
mov
dec
mov
in
movsb
popa
movsb
pop
sbb
lret
gs
aas
xchg
pushf
mov
cmp
stos
js
test
insb
ficomps
adc
sbb
xchg
add
cmc
jbe
sbb
cmc
subb
pop
mov
out
repz
xchg
imul
inc
movsb
lcall
fmuls
mov
inc
mov
mov
fiadds
das
in
push
mov
push
cmp
cli
lret
lahf
sub
jns
mov
ret
nop
xchg
jne
mov
xchg
pusha
mov
mov
pop
cwtl
int3
dec
jb
push
dec
pushf
xchg
adc
or
ret
xchg
inc
jns
xor
push
push
xor
add
push
sahf
pop
rcr
stos
stos
xchg
dec
outsb
shlb
fs
xchg
mov
mov
cwtl
add
arpl
js
dec
cmp
lcall
scas
lock
xchg
gs
inc
ss
mov
loopne
pushfw
outsb
std
dec
mov
sahf
je
pop
adc
adc
sahf
pop
fsubs
data16
push
test
mov
pusha
mov
mov
daa
xchg
das
jb
jae
xor
add
sbb
add
aam
push
add
mov
cwtl
mov
int3
stos
pushf
shlb
inc
out
repz
mov
cmc
nop
stc
xchg
dec
pop
jb
mov
pop
test
dec
dec
adc
push
mov
push
icebp
cmp
dec
mov
pop
movsb
rolb
shll
push
jbe
pop
cmp
push
pushw
lcall
cwtl
xchg
lcall
jnp
and
lods
ficoml
xchg
xor
mov
fdivrl
mov
js
rclb
fsubl
fs
fsubrl
pop
inc
push
outsb
jp
je
dec
movsb
push
jg
enter
cmp
cwtl
push
lret
into
pushf
mov
sahf
jle
sub
lods
pop
and
je
mov
jb
sbb
test
push
pop
jbe
out
lcall
daa
iret
jb
cltd
mov
mov
jl
jbe
and
rorb
movsl
sub
jo
mov
xchg
sahf
aam
mov
mov
xchg
jne
insl
sti
fmuls
stc
mov
mov
dec
test
xchg
je
and
jb
insb
cmp
dec
or
in
push
js
cmp
int3
xchg
fcom
and
jb
imul
sbb
fisubl
test
fisttpl
push
in
mov
bound
adcl
fildl
mov
xorl
cmp
mov
stos
adc
push
into
fstps
lods
push
push
mov
push
shll
mov
dec
adcl
push
xchg
jb
mov
cli
sub
push
cmp
pop
js
cwtl
pop
jns
jbe
aaa
jp
out
sbb
mov
ret
fimuls
lcall
lods
stc
xor
push
cwtl
hlt
and
mov
cmp
into
in
shl
daa
movsb
out
cmp
push
in
mov
xor
pop
loope
mov
mov
js
mov
push
mov
sbb
pop
sahf
test
sarb
push
into
out
jb
loopne
cwtl
cmp
js
xchg
mov
fdivl
push
cmp
out
into
dec
xchg
cmp
xchg
ja
mov
push
mov
into
xor
mov
stos
cmpsl
lea
repz
dec
pop
int3
or
mov
pushf
ret
fcoml
js
imul
push
movsb
test
mov
jb
sbb
dec
jp
inc
ja
jnp
jb
add
mov
lods
cwtl
jp
pop
pop
fisttpll
fldcw
mov
aam
add
push
mov
mov
je
int
ljmp
sbb
arpl
add
push
cmp
into
sahf
mov
push
js
pop
bound
pop
xchg
mov
cmp
xchg
push
push
push
mov
inc
cs
ds
jbe
and
dec
mov
or
mov
jecxz
imull
popa
fs
nop
sbb
ss
fbstp
aad
sub
mov
xchg
fwait
mov
ljmp
xchg
faddp
les
push
push
sbb
mov
lret
sbb
push
inc
cmp
js
dec
push
xchg
out
adc
out
and
in
in
lods
fcmovnb
inc
mov
sbb
or
mov
out
or
mov
adc
pop
mov
ds
rcrl
or
test
cwtl
push
arpl
mov
fidivs
in
push
cld
push
aas
bound
pop
loop
fmull
into
loope
sub
fnstsw
fimuls
pop
out
add
clc
xor
sub
dec
push
lret
push
icebp
insb
subl
push
mov
rol
push
lds
ljmp
lds
fisubl
xchg
mov
pop
adc
sub
lcall
xchg
fs
loop
sub
mov
pushf
pop
mov
pop
das
dec
je
fdivrp
jmp
sbb
dec
push
sbb
lahf
nop
nop
xchg
addr16
loope
and
sarb
mov
lret
push
push
addr16
outsb
push
les
xor
pusha
cmp
lret
inc
js
fdivl
mov
dec
jp
enter
jp
incl
mov
add
mov
push
mov
lods
aam
daa
fists
dec
push
adc
mov
fcomps
sub
testb
imul
mov
in
in
jl
dec
push
dec
and
fdivl
xchg
jb
jp
add
out
shrl
pop
arpl
lret
loop
inc
stos
add
rcrb
das
das
fcomps
xor
cmc
jl
pop
mov
fcomps
rclb
out
xchg
add
mov
pushf
addr16
dec
jo
mov
pop
movsb
nop
push
out
adc
out
jns,pt
jmp
inc
jno
jle
cltd
pop
out
jbe
pusha
dec
jb
add
loop
sti
hlt
xchg
nop
lret
loop
cmc
mov
lcall
repz
movsb
jmp
lods
add
mov
mov
cmp
stc
popf
xchg
push
sbb
lret
or
push
mov
imul
loop
in
or
cwtl
cwtl
stc
lods
adc
xchg
imul
push
inc
adc
adc
add
jg
test
test
dec
mov
mov
push
loopne
mov
dec
lods
movsb
scas
rol
imul
push
xchg
or
dec
pop
push
shrl
aam
movsl
adc
adc
jmp
fsubrp
testl
out
mov
ljmp
dec
pop
dec
and
push
and
repz
pop
pop
add
into
and
test
cld
fisttps
xor
add
pop
inc
test
jecxz
add
ljmp
xchg
out
outsl
add
ret
sahf
pop
dec
sti
xchg
rcll
xchg
test
mov
out
cmpsb
xchg
mov
cmp
pusha
or
clc
push
lea
lea
repz
inc
leave
fs
or
dec
dec
fs
adc
jno
xchg
or
push
cmp
vprotq
lods
push
mov
mov
xchg
stos
add
jecxz
notl
and
inc
push
mov
add
or
lcall
lea
or
or
mov
movsb
add
lds
mov
xchg
add
adcb
in
and
mov
repz
push
aam
test
shl
cmpsb
pop
xor
arpl
movsb
pop
ret
mov
pop
mov
adc
jo
xchg
lret
xchg
jmp
push
loopne
mov
movsb
lcall
mov
rclb
dec
das
in
stos
cld
mov
cmp
rorb
ret
aas
dec
pop
push
cltd
push
inc
dec
pusha
push
cmp
stos
dec
jo
int
lahf
push
nop
mov
push
xor
dec
enter
fsubrs
mov
into
shl
dec
push
pop
cwtl
fistl
int3
mov
loopne
push
idivl
or
mov
leave
push
mov
movsb
push
cmp
fidivs
dec
or
leave
pop
inc
lods
cwtl
into
fsubrl
push
jle
cmp
jbe
inc
cld
lahf
insb
seto
lret
insl
cmpsb
repz
aas
jg
test
cld
fldenv
je
push
push
pushl
cmp
lcall
nop
push
or
pop
dec
mov
mov
jo
mov
ficoml
pop
int3
enter
fadd
test
shlb
xchg
pop
rcrb
xorl
xchg
push
mov
mov
fs
xor
xchg
adc
jp
sbb
dec
add
pushf
movsb
mov
sub
or
add
sbb
hlt
rcr
in
fcoml
add
jb
clc
xorb
mov
fcomps
cwtl
cli
pop
push
mov
xchg
push
rcrb
test
push
aam
out
add
push
fdivrs
je
add
hlt
push
movsb
adc
push
cmpsl
push
bound
cmpsb
cli
xlat
cli
and
out
out
cmpsb
jge
cs
sbb
cmp
loope
shr
aam
pushf
xchg
xchg
shll
shl
lds
insb
in
or
xor
fisubs
insl
insb
or
stos
xchg
test
mov
stos
jb
and
out
mov
or
add
cmp
fistps
xchg
fmuls
iret
pushf
fisttpll
dec
inc
out
sarl
pusha
mov
pushf
loope
mov
js
divl
js
dec
out
test
add
add
daa
jno
cmp
loope
cmc
iret
mov
xchg
iret
mov
add
stos
jo
cmpsb
je
or
in
cld
lods
cmpsb
push
jb
xchg
icebp
mov
xchg
sub
add
test
pushf
out
mov
pushf
loop
lds
sahf
pop
pop
nop
js
lods
cmpsb
hlt
push
leave
mov
mov
pop
lods
pop
dec
mov
sub
adc
out
in
xchg
out
xor
pop
dec
add
or
push
add
mov
jo
add
xchg
or
pop
movsb
cmpsb
in
lret
sub
mov
arpl
lods
inc
pop
sbb
dec
and
js
outsb
lcall
dec
jo
nop
jp
push
pop
fisubrl
mov
lret
pop
mov
dec
cmpsb
dec
mov
dec
test
inc
sub
ljmp
push
dec
popf
jl,pt
xchg
lret
ret
stos
xor
pushf
lcall
pop
push
sub
xchg
xorb
xor
js
pop
inc
pusha
mov
movsb
faddl
pop
mov
pop
push
icebp
mov
pop
push
pop
out
pop
aaa
fs
cwtl
push
mov
mov
mov
add
mov
xchg
mov
js
add
aam
das
fwait
pop
xchg
add
mov
mov
icebp
xor
aad
pop
out
xchg
movsb
mov
xor
jb
mov
test
jo
divl
rcrb
lods
lods
mov
sbb
nop
in
jmp
mov
mov
fmul
data16
stos
push
add
mov
scas
jb
mov
stc
push
mov
cld
cmpsb
pcmpgtb
stc
shlb
data16
mov
std
lahf
test
leave
push
fildl
int3
mov
aam
mov
mov
mov
mov
movsb
test
sub
xchg
cs
lcall
dec
pusha
xchg
jb
test
stc
hlt
cld
xor
fs
rclb
pushf
hlt
stos
movsb
dec
inc
pop
mov
cmpsb
ret
out
loop
fwait
lock
xchg
sbb
hlt
dec
aam
rcrb
sbb
and
outsb
mov
movsb
cwtl
dec
pop
mov
cltd
fcoml
nop
jae
insb
mov
pop
jp
push
sarl
ficomps
dec
test
fadds
pushf
lahf
push
and
lods
pop
test
js
insl
std
xor
mov
pusha
outsb
mov
push
pop
dec
shlb
imul
nop
sbb
test
mov
mov
ret
mov
jae
dec
rorb
pop
mov
movsb
bound
cmp
jb
mov
fdivl
mov
aas
push
jp
sbb
jbe
mov
mov
push
dec
scas
stos
movzbl
xor
lods
rcr
pop
dec
push
js
lods
stos
test
in
xchg
adc
lret
aam
pop
add
push
lods
push
test
bound
sub
into
add
scas
mov
mov
mov
dec
xchg
into
xchg
lods
and
xchg
push
jg
in
inc
jmp
push
mov
outsb
int3
add
lret
push
fsubrl
jp
test
mov
movsb
xor
xor
pop
cld
aaa
int3
add
ds
sti
cmp
xchg
aas
mov
into
cmpsb
inc
adc
fs
pop
mov
stos
mov
pop
dec
je
ljmp
fcoml
imul
bound
into
and
mov
xchg
and
lods
cld
aam
xchg
bound
in
mov
js
jbe
cmp
dec
inc
cltd
xchg
faddl
out
loope
sahf
mov
cmp
jmp
push
xchg
mov
into
mov
jg
dec
cmpsb
mov
insb
push
sahf
lcall
dec
int
or
scas
insb
mov
je
test
movsb
jle
mov
inc
dec
jp
pop
adc
push
in
jle
mov
adc
sub
pop
mov
mov
mov
mov
das
mov
fdivs
mov
xor
loop
jl
and
into
fwait
xor
mov
adc
mov
cs
ss
ja
mov
mov
lcall
repnz
cmc
add
inc
adc
dec
lcall
fwait
push
movsb
push
ficompl
jp
mov
push
loopne
lret
pop
pop
jmp
mov
jbe
call
mov
rcrb
or
mov
jecxz
fmulp
cmc
and
shrl
inc
out
aam
daa
push
push
pop
mov
jno
sbb
leave
sbb
insb
mov
push
pop
mov
dec
pop
sub
int3
dec
pop
sti
and
cmp
shl
stos
imul
scas
push
xchg
inc
aas
mov
lods
pusha
rclb
mov
into
cmp
mov
mov
bound
and
popf
push
rorl
push
mov
push
sti
test
mov
and
add
mov
pop
and
add
loope
sbb
cmpsb
test
push
lret
mov
aam
ljmp
mov
inc
sbb
rclb
lret
inc
adc
mov
jo
pop
cwtl
sahf
insl
pop
fiaddl
std
jne
mov
ja
mov
jne
fistpl
xchg
pop
addr16
mov
mov
mov
dec
aam
ficoml
pushf
dec
fstl
push
mov
xchg
lods
movsl
and
fdivr
movsb
mov
jb
cmp
mov
push
jl
xchg
lock
scas
dec
pop
aam
lret
pushf
ss
fcoml
inc
mov
sub
or
or
aas
dec
jl
out
xchg
outsb
jb
add
mov
add
and
cmp
out
mov
xor
sti
sahf
mov
lea
pop
push
movsb
jb
aad
lods
mov
lcall
jbe
ret
mov
dec
sarl
pop
mov
push
je
mov
xchg
daa
adc
dec
icebp
clc
mov
dec
in
push
fwait
ljmp
mov
pop
pop
das
inc
dec
ficoml
jp
xor
sahf
dec
jns
fmul
insb
lds
mov
cmp
xor
pop
js
js
es
out
mov
decl
cwtl
push
pop
daa
mov
data16
mov
fnstcw
pop
pop
adc
adc
daa
rcrl
mov
sti
xchg
mov
dec
mov
or
fs
pop
rcr
push
and
test
pop
mov
movsb
outsb
cmc
das
stos
insb
pop
push
pop
pop
mov
lcall
rolb
pushf
cwtl
jo
int3
cmpsb
faddl
lea
aam
inc
jb
dec
fs
mov
into
jl
cmp
setp
pop
inc
mov
fs
ret
add
shrl
scas
xchg
and
aam
lods
push
mov
mov
mov
and
movsb
mov
push
lcall
mov
xchg
mov
sub
xchg
or
lock
pop
push
loopne
add
mov
mov
mov
rcl
bound
xchg
out
mov
arpl
push
push
dec
sub
adc
dec
sbb
mov
pop
sbb
cmc
cmp
aam
ficompl
and
rorb
xor
xor
gs
add
sub
fmull
nop
and
pop
mov
push
fldcw
js
mov
cld
mov
stos
push
pop
mov
mov
push
cmpb
movsb
add
mov
cs
fstl
pop
jo
mov
push
inc
les
movsb
xor
lea
inc
push
sub
xor
insb
int3
pop
rorb
xor
mov
mov
push
scas
jg
xor
js
rcrb
xor
insl
jp
fmull
xor
dec
aam
mov
dec
je
pop
mov
push
nop
mov
fcomi
add
sti
xchg
cmpsb
scas
or
jne
inc
aam
lret
movsb
dec
in
fiadds
cmpsb
jg
mov
jp
jb
inc
inc
je
mov
pushl
jo
dec
sarb
pusha
fs
xchg
lcall
imul
push
bound
add
stos
rol
movsb
dec
or
movsb
pusha
adc
mov
jnp
scas
test
stc
or
sub
mov
adc
enter
push
ljmp
pushf
nop
mov
pop
xor
xor
or
fildl
out
in
xchg
and
je
pop
in
addr16
sub
jae
fsubrl
pop
outsl
rolb
enter
js
outsb
sbbl
jle
push
pop
enter
stc
sub
cmpsl
ss
push
test
adc
push
xchg
xchg
pop
jbe
js
lret
mov
mov
or
cmp
mov
xchg
mov
cmp
mov
cmp
jp
mov
rcrb
inc
popa
imul
or
or
out
shrb
and
int
fsubr
or
mov
movsb
mov
pop
jb
jp
sbb
iret
in
push
sbb
add
mov
scas
mov
pop
movsb
sub
aam
rcrb
dec
cmp
mov
sarb
subl
xchg
sub
lods
mov
inc
dec
repz
and
loope
sti
jp
sub
pop
mov
dec
mov
xor
inc
in
pop
aaa
pop
into
shrb
push
dec
je
shlb
add
mov
fidivs
sbb
push
sbb
sub
outsl
inc
cs
pushf
lcall
xchg
into
shlb
aaa
mov
lcall
imul
out
or
cmp
mov
jo
push
pop
jmp
lods
jne
dec
push
mov
shrl
adc
push
xor
popa
je
cmp
xchg
aad
sub
mov
push
push
rcr
loopne
mov
into
dec
out
xchg
iret
faddl
out
sahf
xchg
daa
xchg
test
dec
lcall
imul
push
push
add
fiaddl
push
mov
xlat
and
mov
sub
mov
dec
xchg
inc
mov
xor
pusha
in
pop
fcmovbe
jl
mov
pushf
mov
dec
jne
je
dec
mov
fmull
mov
stos
shlb
ljmp
xlat
test
xor
xchg
pop
insb
scas
lods
dec
jb
dec
ss
cltd
mov
push
xorl
repz
ficoms
out
pop
bound
mov
lcall
pusha
rcrl
imul
or
shrb
ficoms
addr16
push
lock
dec
mov
dec
js
lods
mov
or
push
bound
fisubl
std
data16
mov
sbb
scas
mov
int3
mov
xor
jo
mov
add
sti
add
push
movsb
insl
pop
loopne
enter
lret
lods
sbb
and
xchg
in
and
inc
inc
out
mov
lods
test
mov
adc
mov
out
jp
jo
rorl
out
popl
mov
movsb
daa
add
xchg
dec
mov
jl
pop
fwait
dec
add
push
xor
pop
add
je
jp
cmpsb
cld
mov
hlt
mov
imul
xor
fistl
ficoml
xchg
sti
cmp
int3
fs
xor
pushf
shl
imul
jp
scas
test
jnp
mov
into
fdivs
fmull
loop
push
dec
repz
bswap
in
inc
mov
adc
outsl
push
jbe
or
sbb
cmp
mov
pop
push
mov
int3
mov
mov
mov
sbb
pop
pushf
movsb
cwtl
mov
dec
stos
push
adc
mov
pop
pusha
inc
xchg
arpl
mov
stos
popa
cmp
lods
mov
dec
or
lcall
fldcw
in
cmp
loopne
cmp
cli
movsl
jns
xchg
movsb
push
stc
jnp
aas
mov
aas
cmp
mov
dec
xor
add
cld
sbb
push
dec
shrl
mov
inc
adc
lods
enter
imul
pop
push
pushf
mov
scas
push
push
enter
lahf
rclb
mov
xor
lock
mov
inc
pusha
mov
add
repz
in
mov
cmp
pop
xchg
fcmove
jb
push
xor
cmp
jo
cmp
jp
push
bound
mov
mov
xchg
inc
lock
cld
mov
mov
scas
or
push
pop
fdivp
cmpsl
adc
cmpsl
pop
loopne
push
adc
mov
in
enter
in
pop
cmpsb
nop
dec
pop
mov
mov
push
mov
and
pop
dec
imul
cmp
test
jle
dec
mov
cltd
dec
loopne
adcl
and
lret
push
fcoml
or
mov
push
pop
ja
dec
mov
pop
cmp
push
mov
fimuls
fcmove
mov
les
adc
stc
cmpl
fistpl
mov
ds
loop
lcall
mov
xor
pop
jp
mov
mov
add
stc
and
aam
movsb
mov
mov
xchg
or
add
mov
cs
push
pop
cmp
aam
mov
pop
sub
dec
mov
lods
mov
dec
xor
mov
mov
and
mov
xchg
js
pop
aas
pushf
adc
ss
int3
dec
mov
icebp
mov
mov
or
mov
movsb
addr16
mov
xchg
cmp
bound
shlb
xor
adc
push
aas
mov
fxtract
mov
loope
sarb
out
insb
dec
bound
lret
push
xchg
or
movsb
fsubs
or
aas
fistpl
bound
arpl
es
inc
mov
mov
ficoml
test
mov
fsubrl
add
aam
movsb
cmp
sahf
outsb
imul
sub
dec
lret
xor
ss
xchg
in
push
aad
outsb
lret
and
dec
fs
mov
jb
or
ja
mov
cwtl
pop
pop
sti
jg
sbb
adc
lcall
sbb
aam
inc
movsb
lret
lcall
das
cwtl
xchg
push
mov
xchg
xchg
aas
xchg
cmp
insb
dec
pop
push
sbb
add
jo
mov
in
fimull
xor
ret
stos
xor
dec
xor
xchg
pushf
mov
pop
pushf
ss
dec
push
mov
xchg
cwtl
mov
cmp
pushf
nop
dec
loopne
fs
push
jmp
roll
push
in
bswap
cmp
ja
jmp
fnstcw
xchg
lcall
xchg
pop
mov
loopne
and
data16
cltd
inc
mov
mov
dec
jne
jge
cs
lods
push
je
call
lret
jnp
rcr
out
jb
fisttpl
dec
fsubrs
lret
test
push
and
les
push
push
aam
test
pop
int3
cld
and
cmp
mov
cmpsb
mov
mov
push
lds
in
mov
movsb
mov
dec
stc
fsubrl
sti
fcompl
add
mov
push
aaa
or
xor
lds
fdivs
jbe
sub
dec
jbe
add
push
fs
cmp
mov
lcall
pop
pmaxub
aaa
push
shlb
lods
mov
repnz
stos
subl
xchg
xchg
subb
ror
aas
pop
pushf
dec
je
mov
dec
push
push
pop
mov
inc
hlt
daa
inc
push
lods
das
lret
int3
push
scas
ds
cmp
into
mov
mov
fs
mov
add
add
mov
pop
push
pop
bound
int
and
pop
mov
pop
lret
or
push
outsb
ficompl
in
mov
mov
xor
mov
cs
stos
sarl
mov
sbb
jbe
lret
pop
push
je
outsb
sti
je,pn
add
mov
cwtl
js
ror
xor
stos
xor
pushl
pushf
xor
mov
js
jecxz
ja
je
shl
push
jp
insl
dec
cmp
xchg
scas
xlat
cmp
fdivrs
lahf
add
mov
adc
cmp
lretw
xchg
je
mov
scas
fs
fldenv
test
je
jb
or
dec
pusha
inc
fwait
into
push
jno
mov
inc
enter
pop
mov
pop
movsb
cmpsb
push
jg
dec
jae
int3
daa
shrb
dec
movsb
cmp
push
test
mov
lret
mov
sbb
js
insb
pop
adc
ficomps
pop
xchg
nop
push
movsb
push
push
mov
pusha
mov
mov
fdivs
js
xorl
jns
je
outsb
sub
scas
mov
xchg
jno
outsb
mov
jp
dec
dec
pop
jb
outsb
fmull
inc
dec
inc
push
push
cli
xor
fildl
outsb
addr16
pop
dec
stc
loopne
inc
mov
pushf
pop
push
js
inc
aaa
push
dec
cwtl
jp
sbb
xchg
mov
xor
out
mov
cmp
jp
mov
push
jae
add
pop
push
roll
fisubrs
pop
inc
mov
ss
lret
dec
fcoms
out
push
dec
stos
popf
shll
mov
ficompl
xor
dec
gs
ja
data16
xchg
sbb
sbb
push
or
in
sahf
sub
push
rcl
pop
fistps
sub
in
mov
decl
fs
ljmp
mov
mov
fldt
pop
dec
pusha
push
push
cmp
pop
cmp
push
jbe
pop
pop
test
adc
xor
adc
fdivs
cmpsb
pop
sahf
adc
xlat
mov
cld
outsl
outsb
stc
lret
jb
sbb
int3
fidivrl
xchg
test
fcomps
dec
movsb
inc
pusha
setp
xor
mov
or
fbstp
sbb
pop
nop
les
daa
pusha
je
mov
shll
xor
cwtl
xchg
sbb
pusha
rclb
mov
xor
cwtl
jnp
movsb
loop
sarb
sub
je
mov
jl
out
dec
fcmovu
popa
movsb
cmp
bound
shll
push
or
lock
aaa
lock
dec
outsb
popl
popf
pop
add
jecxz
cmp
and
into
pushf
outsb
mov
fisubrs
jp
or
mov
iret
mov
mov
or
xor
pushf
cmp
pop
bound
mov
mov
or
sbb
adc
mov
repz
lret
cmp
jb
mov
sti
push
mov
lods
jne
es
mov
lock
lret
les
jmp
xor
push
push
fbstp
mov
add
enter
sub
rclb
notl
int3
pushf
out
dec
js
push
cwtl
outsb
test
pop
or
push
push
cmp
in
pop
mov
hlt
fs
in
out
popa
fsub
cmpsb
or
hlt
fmuls
mov
mov
mov
push
movsb
mov
test
outsb
fcompl
mov
loopne
cmp
mov
mov
push
cwtl
fwait
lcall
inc
stos
cltd
loop
pop
hlt
pop
mov
mov
lret
cltd
es
mov
dec
jo
mov
popfw
mov
nop
sahf
jbe
ret
aam
cmp
mov
inc
xor
xor
jbe
aam
cld
mull
add
push
jo
lock
sub
popa
pop
xlat
fldenv
mov
ds
into
sahf
mov
add
pop
xchg
shl
loop
js
mov
xchg
pushf
movsl
rorl
xchg
mov
pusha
fidivs
loop
push
xlat
jo
add
insb
mov
fisttpl
rclb
jae
outsb
mov
mov
pop
mov
push
aas
cmpsl
dec
ja
xchg
pop
aam
arpl
xchg
aaa
xchg
pop
rcrl
inc
iret
mov
mov
stos
sbb
shl
sbb
xchg
mov
sbb
call
fisubs
sub
stc
in
sbb
enter
outsl
xchg
clc
push
roll
iret
xlat
dec
call
cmc
icebp
inc
lods
mov
mov
leave
stos
test
pop
jo
dec
jge
mov
adc
xchg
hlt
sub
and
lods
xchg
outsb
sti
mov
aam
mov
mov
mov
mov
push
lock
lds
jbe
ficomps
les
mov
mov
popa
lock
in
hlt
js
xchg
fiaddl
pop
fsubl
mov
mov
movsl
pop
mov
out
mov
push
mov
sahf
int3
xor
je
xchg
jo
shll
xor
fs
inc
arpl
fimuls
pop
xchg
shl
jl
jp
sbb
mov
inc
dec
test
js
fcomp
jmp
cs
mov
shlb
rcrb
repz
jo
je
push
rorb
mov
mov
sbb
fildll
mov
fldcw
mov
cmp
push
movsb
jno
dec
cmp
dec
dec
mov
lret
cld
mov
push
sbb
dec
and
repnz
fs
shrb
lods
adc
push
mov
js
pop
sub
jg
fptan
sbbl
lret
mov
mov
fimuls
outsl
aam
fwait
imul
mov
mov
pop
mov
xor
xor
pop
cwtl
js
mov
das
fs
js
into
dec
andb
jmp
in
loopw
adc
pop
rcrb
jp
and
fimull
pop
lret
cwtl
fsubrs
or
sub
dec
jb
sbb
insb
scas
xchg
push
call
add
imul
cwtl
pop
ficompl
mov
fdivl
xchg
leave
jne
nop
lods
aam
data16
push
andb
cmpsb
mov
push
sarb
fnstcw
movsb
add
sub
cmp
mov
cld
xchg
fs
arpl
nop
jmp
daa
into
and
insl
movsb
or
lods
mov
mov
push
or
lret
inc
stos
push
dec
push
js
inc
jbe
jne
lods
add
pop
sbb
cld
mov
fisubl
xchg
and
loopne
or
ficoms
sub
fsubrs
insb
daa
pop
xchg
sub
ljmp
pop
insb
xchg
add
pop
enter
xchg
insb
add
frstor
cmp
bound
sub
pop
sti
inc
jle
imul
shrb
mov
std
cmp
xchg
out
mov
jne
xorl
arpl
lret
jo
jbe
and
popf
pop
mov
dec
push
ret
xlat
push
mov
sub
lods
xor
dec
lret
fadd
shr
dec
ficomps
aaa
mov
xchg
into
mov
aam
adc
shr
or
add
mov
lcall
shl
sub
pop
cltd
jecxz
mov
pop
push
bound
add
cmpsl
cmpsl
push
nop
std
dec
and
pop
aaa
lods
mov
pop
jbe
and
pop
push
add
das
das
dec
dec
in
aam
mov
cmpsb
fwait
pop
dec
shrb
into
mov
int3
jg
pop
mov
sbb
xchg
adc
cmp
ja
cmpsb
push
cmp
mov
mov
add
ljmp
dec
addb
mov
cmp
mov
mov
push
xchg
montmul
cmpsb
inc
mov
mov
mov
pop
mov
jnp
out
data16
cmpsb
mov
push
jbe
scas
pop
ror
pop
notl
je
fisubs
push
sbb
adc
out
or
jo
xchg
out
mov
sbb
aam
sarb
lods
cltd
push
into
mov
xor
in
add
inc
cmp
outsb
scas
pusha
and
fsub
mov
test
pushf
xorl
mov
pop
jecxz
hlt
fstps
jge
imul
loope
xchg
insl
ror
outsl
add
pop
andl
xchg
call
xor
subl
ljmp
pusha
fmuls
sbb
pop
rorb
popl
mov
fnstsw
push
bound
fdivl
std
iret
add
push
cld
dec
push
mov
ljmp
mov
out
sbb
push
dec
pop
xchg
test
out
xchg
shll
jp
lods
dec
into
insb
repz
mov
into
dec
fcompl
pop
nop
mov
stos
arpl
js
fnstenv
push
stos
mov
jne
jp
push
stos
int3
cmpsb
cwtl
mov
pop
repnz
stos
mov
insl
mov
cltd
nop
push
fisttpl
cmpsb
mov
and
outsb
mov
test
test
lock
mov
js
aam
daa
adc
std
mov
mov
push
aam
jmp
nop
lret
imul
ss
enter
test
ljmp
or
jne
inc
pop
jb
test
dec
aam
vpmacsdd
add
jb
scas
and
inc
sub
loop
in
inc
jb
insl
pop
inc
dec
sahf
mov
into
aam
cmc
add
cld
adc
mov
movsl
cmp
dec
into
push
stos
repz
pop
and
addr16
addl
xorb
mov
mov
push
test
push
pop
sar
aam
enter
imul
add
sbb
imul
enter
inc
scas
add
jmp
scas
lods
das
lcall
adc
jo
push
das
dec
popa
js
movsb
push
adc
push
jbe
lret
xchg
push
push
push
and
pushf
push
je
add
jecxz
das
lods
mov
lret
mov
and
dec
jbe
dec
aam
or
sub
xchg
mov
mov
enter
sahf
fists
out
repz
add
pop
xor
aam
dec
sbb
leave
repz
xchg
lods
aam
pop
loopne
ja
jb
movsl
in
loopne
aam
lods
aas
pop
cmpsb
jbe
sahf
adc
adc
outsb
outsb
xchg
stos
xchg
push
rolb
iret
mov
icebp
mov
pop
mov
xor
mov
mov
sbbb
cltd
jg
stos
ret
fdivs
push
cmpsb
inc
xchg
arpl
inc
sbb
jbe,pt
jne
into
mov
mov
inc
push
nop
and
fsubrs
sbbb
data16
xchg
lahf
pop
test
mov
xor
xor
mov
dec
mov
jbe
ds
pushf
fsub
push
shll
mov
pushl
dec
mov
push
dec
lods
pop
out
sbb
jnp
in
je
cmp
js
rcr
mov
dec
lods
xchg
mov
stos
imul
pop
pop
sarb
cmc
mov
dec
js
mov
mov
push
insb
test
hlt
dec
jp
in
daa
sub
pusha
mov
and
das
int
jo
insb
jp
repnz
movsl
push
cmpsb
push
mov
data16
loopne
mov
mov
inc
add
push
shlb
or
mov
sti
mov
aaa
dec
jp
dec
xchg
cwtl
mov
lock
cmpsb
fcmovb
cmp
mov
shlb
fadds
test
add
cmp
pop
ja
lock
imul
pushf
cwtl
dec
in
test
mov
jmp
jbe
cmp
dec
pop
jo
rcrb
mov
mov
mov
adc
rorb
mov
xor
fcomps
call
cmp
insb
fcmove
jecxz
pushf
xchg
movsb
mov
push
add
push
sub
sahf
pop
push
nop
lcall
out
icebp
enter
mov
jo
scas
lret
in
rcrb
mov
lods
pusha
pop
dec
cmc
pop
scas
std
cmpl
aam
push
jecxz
push
or
pushf
mov
fs
mov
je
jnp
pop
push
repnz
pushf
mov
mov
mov
xchg
push
add
push
es
push
mov
sahf
dec
rol
lods
and
dec
adc
les
pop
bound
loopne
outsl
mov
adc
cld
gs
mov
mov
mov
and
rorb
pop
lcall
mov
nop
dec
pusha
and
jnp
push
fisubl
lods
mov
rclb
out
shll
xor
mov
gs
and
stos
xchg
pop
lods
pop
xchg
dec
movsb
je
mov
fcomi
std
pop
adc
jno
insl
dec
jge
push
xchg
loope
pusha
jnp
mov
mov
jne
jnp
mov
xor
dec
ficompl
sbb
push
mov
inc
xchg
mov
movsb
push
lock
mov
adc
pop
mov
outsw
mov
pop
test
push
push
sub
inc
pop
stos
test
js
shlb
push
mov
jno
cmp
in
scas
fcomps
sbb
js
int3
mov
xor
lcall
mov
insl
dec
sub
insl
fimuls
bound
lods
ret
scas
ret
les
jp
cmovs
fistpl
fs
jl
aaa
xchg
push
test
push
bound
mov
lcall
cmp
fmul
pop
das
jo
test
dec
popa
or
mov
es
jge
inc
xchg
stos
mov
xchg
mov
xor
cmp
fisubl
cmp
xlat
cmp
mov
cmpl
xchg
jp
popa
dec
inc
push
les
mov
jge
mov
fidivs
xchg
bound
into
mov
dec
add
lret
dec
cmp
fcoms
jbe
mov
stos
xor
lret
pop
mov
pop
push
fdivl
mov
jo
mov
add
add
cmp
out
sbb
rorb
lcall
dec
push
push
sub
stos
mov
ret
push
sub
test
pusha
sahf
and
pop
cwtl
pop
xor
inc
in
pop
aam
ficompl
and
push
pop
data16
shlb
leave
enter
lcall
xchg
cmp
cmpsb
push
pop
or
cmp
aam
int3
mov
pop
imul
push
sub
fdivrl
cwtl
push
fwait
js
or
in
outsb
ss
cs
mov
out
int3
add
dec
mov
sahf
mov
call
and
push
cmp
js
xchg
mov
push
and
repnz
lret
add
fs
cmp
push
push
lcall
cwtl
fcomps
scas
std
cwtl
push
pop
cmp
mov
nop
pop
dec
jmp
int3
cmp
mov
pop
iret
scas
ficomps
cwtl
sbb
mov
pop
jmp
hlt
dec
mov
xchg
push
cmp
inc
pop
push
sahf
outsb
dec
mov
insl
cmp
test
pop
nop
jbe
inc
xchg
shr
ja
rcll
or
sub
daa
inc
test
add
mov
cmp
data16
lea
mov
dec
das
fmuls
jl
jno
mov
mov
xor
mov
dec
and
push
stos
and
test
jp
inc
cwtl
xchg
lret
cmpsb
fisubrs
jp
movsb
jg
imul
in
andl
lret
movsb
fidivl
mov
mov
pop
std
mov
mov
pushf
movsl
lret
popl
mov
push
and
cmp
cmp
outsb
daa
leave
sub
or
addr16
cmp
nop
mov
daa
lret
pop
mov
cwtl
push
pop
enter
rcrl
cld
adc
adc
int3
out
test
in
mov
fwait
mov
popa
pop
sahf
hlt
bound
cmp
mov
test
push
pop
pop
xor
jo
lods
nop
pop
movsb
bound
test
aam
int3
xor
mov
cs
sarb
aam
hlt
dec
xchg
aaa
add
outsl
mov
mov
mov
dec
test
test
mov
inc
cmp
js
mov
pop
push
ds
jmp
dec
insb
orl
push
xchg
cmpsb
out
sbb
fisttpl
in
lcall
je
test
mov
pusha
cwtl
pop
lods
pop
pushf
popa
inc
jp
inc
pop
test
pop
shrb
scas
pusha
lret
mov
cmp
sbb
in
pop
pop
sub
data16
xor
jb
mov
out
lret
cmp
je
mov
scas
daa
mov
push
adc
cmp
dec
lods
mov
dec
outsb
sbb
and
mov
nop
inc
sbb
ror
movsb
loop
cmpsb
nop
je
pop
je
inc
adc
add
imul
lds
daa
or
sub
jbe
jb
add
cmp
mov
add
jb
or
into
ja
sub
fisubrs
rorb
lock
push
dec
bnd
xor
div
mov
mov
jns
fiadds
scas
mov
xchg
mov
sub
aam
sub
fiaddl
js
aam
pop
cli
lds
xchg
sbb
lret
cmpsl
inc
jbe
int
scas
fstpt
xchg
inc
das
cmp
and
aaa
rcr
dec
movsb
push
int3
lret
loopne
idivl
dec
int3
push
es
shlb
jg
jns
mov
jnp
lods
dec
push
push
dec
adc
into
cwtl
cmpb
xchg
mov
push
jb
ja
mov
pop
nop
mov
in
xchg
adc
mov
jnp
das
js
fmull
pop
neg
jbe
mov
xor
pop
mov
mov
data16
loop
sub
sub
js
jae
loop
scas
dec
push
add
outsb
mov
stc
mov
mov
ds
add
xchg
popa
nop
das
sub
pushf
cmp
sahf
stos
jp
jp
in
dec
mov
js
add
lods
dec
cmp
push
fdivs
sub
push
testl
lods
pop
xor
push
sbb
in
mov
in
dec
lods
pushf
loopne
fsubl
dec
cmpsb
pop
adc
mov
cmp
pusha
lods
lret
cmp
fisttpl
dec
mov
popa
sub
pop
dec
icebp
xchg
pop
or
inc
mov
dec
sbb
dec
inc
cwtl
pushf
je
repnz
xchg
pop
mov
push
or
bswap
js
sbb
sub
pop
xor
push
mov
testl
dec
jecxz
add
mov
xchg
popf
inc
mov
jno
jo
adc
dec
sbb
loop
push
push
mov
mov
lfs
aaa
lret
and
andb
xor
mov
sbb
stc
inc
idivb
cmp
mov
mov
push
lea
or
cwtl
or
sub
cmp
mov
int3
shll
cmpl
mov
add
ds
pop
jo
and
pop
insb
cld
call
nop
cmpsb
je
mov
rcrb
sbb
ljmp
add
jp
mov
mov
xacquire
jnp
dec
pop
or
mov
mov
fs
mov
jae
mov
mov
fimuls
xchg
pop
mov
movsl
pop
cli
pop
inc
push
mov
insb
mov
push
dec
push
fdivl
xchg
jp
xchg
repnz
iret
mov
and
pusha
popa
pop
scas
call
xor
jecxz
xor
aam
xor
and
pop
pop
addr16
pop
xchg
mov
mov
fdivrl
mov
addr16
and
cwtl
ret
cmpsl
insb
outsb
fistps
lods
mov
into
and
mov
mov
bound
mov
mov
jmp
xchg
sbb
aaa
lds
cmp
test
dec
out
push
xor
xor
jp
mov
mov
dec
inc
test
ficoml
test
jmp
add
nop
mov
test
mov
fistpl
dec
sbb
pop
dec
lea
xor
xchg
sbb
mov
jb
lcall
lret
test
mov
cmp
out
cld
lods
outsb
movsb
stos
pop
lock
fisubl
mov
push
mov
fnstcw
pop
mov
sti
jo
test
repnz
xor
hlt
ljmp
in
hlt
dec
mov
ss
outsb
pusha
sub
mov
fldt
dec
xor
mov
clc
rorl
les
jae
adc
loop
pusha
mov
xor
pushf
fldcw
test
in
jmp
orl
add
pushf
sub
inc
cmp
sahf
mov
mov
push
xlat
push
xchg
nop
leave
add
nop
out
mov
add
ja
jbe
jo
mov
pop
int3
adc
cwtl
rcr
pushf
pop
pop
push
movsb
das
push
pop
outsb
out
sti
es
nop
es
mov
or
cmpb
sbb
xor
xchg
push
in
jmp
pop
pop
mov
dec
sbb
les
add
xor
test
insb
or
push
xor
rcl
clc
cmpsl
xor
xchg
loopne
jg
mov
mov
dec
fs
cs
fdivs
mov
or
dec
mov
arpl
mov
push
xchg
jb
decb
mov
stos
test
lcall
push
mov
fdivp
out
ret
sahf
sbb
lock
push
shrb
loop
daa
push
fimuls
jb
dec
into
mov
jbe
rcr
xor
or
push
push
fisubs
pop
inc
add
push
mov
mov
test
xchg
sbb
add
jne
sub
xor
hlt
ficoms
xlat
mov
mov
jns
lret
fildll
xchg
repz
mov
popf
fwait
mov
rcr
mov
pusha
lods
jl
pop
push
jl
push
hlt
pop
lret
add
sub
aam
jae
sbb
cwtl
and
jl
mov
test
int3
mov
push
push
ja
mov
sahf
lret
imul
push
jp
push
jbe
cmpsb
cmc
int3
loop
add
add
pop
jb
mov
sbb
jp
sbb
out
push
dec
mov
insb
xor
shrb
or
jp
push
syscall
jecxz
loopne
or
mov
push
mov
stos
nop
lods
rcl
jb
cmc
mov
jmp
push
mov
mov
mov
adc
sub
pusha
lret
repnz
enter
or
pop
js
icebp
andb
push
mov
xchg
in
sub
out
xor
in
mov
sub
leave
rclb
cmp
fcmovbe
jb
lcall
pop
ret
sti
dec
mov
dec
xchg
imul
mov
jp
insb
jl
mov
lods
pushf
pop
loop
mov
sub
adc
pushf
jl
mov
add
sahf
hlt
mov
arpl
pcmpeqd
lock
sbb
or
mov
xchg
xchg
and
scas
ja
lret
roll
mov
sub
jb
ljmp
mov
inc
jnp
pusha
js
stos
dec
xor
push
leave
pop
push
xchg
addr16
sub
lret
sahf
jb
dec
into
mov
fisttpl
pusha
push
dec
sub
lock
mov
add
test
shlb
xor
fidivrs
mov
insb
lret
fldt
repnz
adc
lret
push
and
mov
lods
jmp
aam
xor
mov
mov
into
fcompl
ds
pop
scas
mov
xor
add
pop
test
lods
or
jmp
movmskps
data16
das
dec
push
dec
and
push
inc
in
mov
dec
scas
mov
ds
mov
xchg
mov
scas
pushf
dec
adc
lock
push
add
sbb
into
pushf
xchg
push
fs
add
pop
out
test
push
or
lock
lret
lret
mov
adc
daa
test
jp
ret
pop
repnz
mov
sub
sub
jecxz
cmp
mov
jno
push
mov
mov
fwait
or
insb
into
mov
fmul
into
popa
pop
xor
or
dec
xchg
adc
div
ret
mov
cmp
nop
int3
movsb
scas
and
mov
push
outsb
jp
jmp
ret
js
xchg
sbb
mov
lret
xchg
lods
loop
dec
mov
repnz
mov
shr
lcall
leave
jo
rcrb
dec
aam
cmpsb
popa
cmpsl
mov
jp
cld
dec
jb
dec
push
push
cmp
fmul
jns
cmpsb
jnp
mov
jle
ret
adc
dec
mov
mov
add
mov
stos
repz
lahf
cwtl
lret
xchg
xchg
push
sbb
movsl
popa
mov
or
daa
mov
mov
xor
sahf
out
cld
jl
ja
mov
lret
je
sahf
dec
fstl
icebp
mov
insb
cmp
dec
dec
jae
stc
arpl
add
add
push
fcoml
js
mov
xchg
mov
mov
fcom
dec
xor
mov
xor
sbbl
bound
stc
push
pusha
jp
ficompl
out
repnz
mov
ja
mov
dec
loope
das
mov
dec
in
mov
fistps
add
leave
jl
push
scas
je
dec
push
fwait
test
sbb
sahf
pusha
jmp
dec
movsb
les
js
stos
int3
fcom
jmp
push
pop
pop
adc
cmp
fdivrs
lds
sbb
xchg
inc
ret
sbb
jmp
or
push
lret
fcompl
pop
mov
mov
xchg
pop
push
mov
fistpl
pop
mov
nop
lods
es
or
outsb
jl
mov
jne
leave
mov
test
cwtl
pop
jnp
push
imul
lods
dec
inc
pop
mov
or
push
jmp
scas
cs
jb
aam
dec
sti
lds
imul
xor
push
cwtl
pop
mov
dec
push
xor
lods
aam
mov
je
dec
out
hlt
xchg
mov
into
and
or
sub
mov
inc
jnp
pushf
push
pop
dec
test
jb
mov
int3
js
mov
xchg
sbb
mov
mov
dec
inc
ficoml
mov
inc
pop
mov
pop
inc
pop
mov
jbe
shlb
mov
adc
jns
ficoml
std
adc
jo
push
cwtl
fidivl
in
mov
mov
cmp
hlt
cmp
sti
inc
pusha
dec
add
mov
setbe
pop
pop
in
push
pop
mov
fimull
push
push
add
mov
pop
mov
jge
xchg
repz
adc
pop
movsl
int3
pushf
inc
cmp
or
mov
or
sbb
int3
add
mov
aad
mov
js
jp
stos
push
into
movsb
add
cmp
lods
bound
popf
mov
pusha
insb
movsb
cmp
xchg
pop
fimuls
mov
stos
sbb
pop
xchg
fs
pop
push
or
insl
fwait
mov
pushf
arpl
hlt
cmpsb
into
es
aas
aaa
pop
js
mov
mov
add
mov
cmp
insb
cld
pop
mov
push
iret
pusha
test
jp
push
and
xor
hlt
lods
insb
nop
mov
pop
repz
das
movsl
mov
bound
sahf
scas
shrb
cs
mov
lret
mov
mov
cmovs
add
mov
js
mov
pusha
xchg
jle,pn
es
lcall
push
into
idivl
cmp
pusha
jb
cli
lcall
mov
rolb
mov
jp
scas
pop
js
xor
pushf
add
dec
xchg
mov
bound
xor
pushf
mov
pusha
dec
gs
ficoms
mov
jp
push
sbb
sub
fimuls
push
jmp
lret
adc
jbe
pop
push
mov
dec
sbb
sbb
xchg
add
inc
cmc
ss
mov
mov
mov
jl,pn
jp
aam
fdiv
pop
push
adc
int3
outsb
xchg
in
add
mov
nop
xor
adc
jge
test
into
in
out
mov
out
add
sbb
int3
mov
fdivrs
das
jmp
into
insb
xor
inc
mov
xchg
sub
nop
mov
adcb
shlb
pop
adcl
pop
cld
mov
into
nop
fs
push
out
mov
cli
lock
ficoms
punpckhbw
lcall
fadds
mov
gs
add
sbb
mov
fcoml
lods
dec
pop
dec
inc
mov
xchg
dec
pop
insb
pop
inc
cmp
sub
jp
sub
mov
inc
fimull
cli
in
jge
shl
push
push
mov
jp
sahf
xchg
mov
jo
addr16
sar
cmpl
iret
push
in
int3
xor
jb
push
add
fiaddl
add
mov
xorl
aam
fsubs
pushf
mov
pop
jp
jp
xchg
js
cmp
inc
fcomps
cmp
into
push
mov
dec
mov
xchg
pop
js
nop
mov
popf
pushf
push
test
and
mov
fdiv
data16
lea
fadds
adc
add
or
cmpsl
push
sbb
imul
push
daa
inc
jle
push
xchg
mov
pusha
pushf
out
xor
push
mov
pop
push
sbb
sarl
cli
mov
cli
je
xchg
fimull
subb
je
pop
test
lock
cmp
xchg
mov
nop
pop
das
lods
mov
pushf
or
and
push
mov
aaa
andl
int3
inc
loop
inc
jo
dec
sub
nop
aam
and
push
add
int
mov
mov
lods
mov
test
out
cmp
js
pusha
mov
cs
fildl
pop
adc
int3
in
fwait
daa
js
daa
lock
push
adc
dec
lret
push
add
push
shrb
mov
push
movsb
outsb
fisttpll
scas
movsb
mov
pop
pushf
dec
test
add
mov
cmp
push
mov
dec
rolb
inc
fdivs
mov
sub
jno
bound
pop
cwtl
pop
xchg
jb
hlt
add
out
xor
pushf
fs
xchg
pop
mov
mov
push
and
rcl
xor
xor
jg
movsb
mov
mov
lods
xchg
je
cmc
sbb
lret
lahf
pop
dec
dec
jmp
jp
pop
jge
sbb
movsb
push
cs
cmp
xchg
imul
push
jae
mov
cmp
test
sub
mov
sahf
pop
fdivs
mov
lcall
inc
dec
fsubrs
aam
cwtl
fdivl
and
pop
push
jp
pop
dec
push
add
lods
and
sbb
aam
pop
popl
pop
hlt
in
pop
push
rolb
mov
sahf
test
inc
xorl
push
push
pop
xor
mov
dec
pop
sbb
fmull
dec
cmp
stos
mov
bound
dec
dec
rcrb
add
dec
mov
fistpl
mov
movsb
xchg
mov
imul
cmp
lcall
fs
cmp
dec
jp
cld
orb
pop
mov
rcrb
sbb
dec
pop
cld
fcompl
xor
or
add
fisttpll
outsl
xor
ja
dec
test
dec
cmpsl
sub
jp
dec
call
cmpsb
pop
pop
daa
lcall
cmpl
sbb
aaa
cmpsb
nop
push
aam
fcomps
pusha
cmc
scas
into
cmpsb
loopne
mov
repz
jo
add
mov
lock
pop
dec
xor
fadd
stos
lods
data16
insb
lahf
sbb
lds
cmp
mov
dec
icebp
mov
mov
xor
add
jo
sbb
sub
push
hlt
bound
and
fstp
sbb
test
pop
pop
pop
enter
lcall
inc
sub
pop
dec
adcb
pmaxub
shrb
daa
int3
dec
call
enter
rcr
xor
push
and
pop
jo
sahf
lods
loop
xor
dec
mov
cmp
pop
cmp
stc
fcoml
xchg
jp
pop
sub
nop
cs
mov
dec
pop
push
mov
int3
sarb
mov
fisubrs
test
jns
fidivrl
aam
push
mov
fnstenv
adc
xchg
fsubs
rorl
sbb
mov
push
dec
outsb
cld
inc
ficompl
sbb
dec
sti
cmp
jbe
xchg
mov
push
int3
pushaw
inc
pop
mov
int3
xor
push
pop
jo
ret
jge
xchg
or
mov
dec
enter
sub
pusha
aam
in
mov
mov
lcall
dec
pop
xor
aam
jbe
pop
push
outsl
dec
hlt
mov
cmp
mov
sarb
bound
xor
dec
scas
test
pusha
mov
push
jl
int3
je
pop
fisttpl
test
dec
lock
iret
lret
faddl
lods
lret
ss
mov
lock
lock
adcl
in
dec
xchg
mov
mov
gs
dec
loop
pop
mov
dec
mov
pop
jb
in
int3
cmp
dec
je
push
out
test
movsb
push
pop
pop
xchg
into
dec
sub
lods
pop
cli
je
pop
lret
out
or
cmp
jle
fnstenv
sub
andl
fs
jo
daa
insb
mov
xor
add
fsubrl
xchg
cmp
pop
cmpsb
dec
into
lods
js
loopne
jo
push
mov
lret
rorb
push
xor
push
adc
jo
push
lcall
dec
dec
adc
mov
lods
sarl
out
sub
data16
jo
mov
xchg
inc
push
push
faddl
sub
cs
sahf
pushf
outsb
jmp
pop
sub
cmpsb
dec
adc
push
in
je
xor
jle
add
fs
in
add
mov
popl
jo
inc
cmpsb
dec
mov
mov
mov
nop
mov
addr16
cmc
out
mov
push
cwtl
push
out
jge,pn
push
xor
xchg
push
mov
sbb
out
cwtl
jae
xor
pop
mov
xor
stc
mov
test
jbe
mov
sub
jne
movsl
fcmovb
pusha
add
xchg
add
push
push
xlat
aad
jp
mov
lcall
inc
mov
sub
mov
xchg
and
pop
dec
or
outsb
scas
push
out
push
mov
add
imul
jo
leave
mov
adc
mov
lock
cwtl
in
and
into
push
xor
cwtl
hlt
mov
pop
cmp
push
cmpsb
jne
push
sbbl
rclb
add
in
fmuls
jo
rcrl
jp
into
dec
out
fcmovnb
movsl
add
push
daa
out
sub
lock
jp
mov
xor
out
js
aaa
data16
add
ds
xchg
aam
mov
jge
mov
lods
jb
pop
outsb
push
into
test
jmp
xchg
pop
mov
daa
ljmp
lods
mov
jno
fadd
cmpsb
in
sbb
rorb
sub
aam
xor
fiadds
fidivl
mov
movsb
push
add
pushf
mov
hlt
rclb
rclb
inc
insb
jbe
mov
cmp
mov
mov
mov
es
sub
mov
bound
adc
and
cmpsl
mov
adc
mov
adc
dec
stos
fcoms
push
aas
jbe
pusha
and
mov
int3
scas
jp
fidivrl
add
push
je
jbe
and
jb
xor
cmp
pop
jno
das
dec
test
mov
movsb
mov
out
mov
add
pushf
dec
inc
add
into
xchg
mull
data16
sub
mov
dec
stos
outsb
pop
add
cld
je
fcomip
int3
lcall
pop
mov
ficompl
mov
insb
dec
mov
bound
sahf
lcall
inc
and
jo
stos
or
movsb
out
mov
outsb
push
dec
inc
jo
push
push
les
inc
pop
lock
add
lret
std
mov
sub
push
jb
imul
movsb
xchg
dec
js
cmpl
xchg
add
mov
xchg
mov
loopne
pop
fistpll
adc
mov
int3
mov
into
repz
push
pop
cmp
mov
pop
lock
outsl
inc
cltd
int3
std
mov
hlt
cld
fcomps
and
cmp
jecxz
je
push
lret
sti
jb
push
mov
and
bound
xor
cs
pop
add
push
mov
dec
inc
in
rorb
push
ret
sahf
push
mov
lcall
jnp
dec
stos
adc
mov
fwait
aaa
cmpsb
shlb
lcall
dec
mov
lock
xchg
mov
or
imul
xor
into
imul
lea
dec
scas
mov
mov
into
lret
xor
cmpsb
cld
mov
in
cmp
shlb
sahf
fmuls
mov
mov
pop
add
adc
ja
sbb
sti
adc
daa
push
dec
add
xchg
insb
mov
sahf
jns
dec
nop
addr16
pop
ljmp
mov
fsubrs
mov
push
push
mov
pop
inc
mov
sub
mov
cmp
sar
add
cs
cmpsl
mov
jp
dec
mov
dec
rcrb
gs
outsb
xchg
or
lret
loopne
pop
xchg
data16
or
arpl
cwtl
rcr
out
pop
loopne
fcom
xor
pushw
fsub
outsb
test
cmp
mov
enter
in
dec
std
mov
jl
dec
jp
sub
cmp
cmp
fcompl
fcmovnb
ret
push
ficoms
sub
cld
dec
lret
mov
pop
ret
sbb
pop
pop
sbb
divb
xor
dec
shrl
int
pop
fiaddl
je
dec
or
insb
pop
sbb
insl
daa
aam
sub
jae
fninit
stc
ljmp
push
mov
jbe
cltd
push
dec
int3
lods
hlt
jb
mov
ret
movsb
pop
push
aam
dec
sub
pushf
lock
xchg
sub
enter
mov
pushf
push
mov
js
push
adc
pop
pop
fcom
hlt
int3
insb
les
mov
pushf
inc
mov
push
int3
jl
movsb
cmc
ret
aad
shll
push
push
and
pushf
insl
scas
rorl
mov
je
js
and
fucompp
push
sbb
dec
aaa
mov
pusha
jb
mov
mov
popa
cmpb
pop
mov
sbb
pop
dec
cmp
outsb
into
lods
sarb
add
inc
repnz
mov
xor
lret
rol
out
xor
lock
repz
xlat
mov
sbb
paddq
adc
aas
mov
ja
mov
mov
pop
aaa
add
mov
mov
mov
cli
aaa
faddl
mov
push
into
push
and
push
std
pop
mov
bound
mov
push
int3
enter
rorl
aas
cwtl
call
test
cmp
sub
xchg
jmp
dec
mov
mov
xchg
mov
xchg
mov
pusha
aaa
dec
ficoml
sbb
test
jae
das
scas
bound
pop
dec
dec
dec
sti
cltd
nop
pop
faddl
or
mov
dec
push
movsb
pusha
adcl
scas
stc
mov
lds
fcmovnbe
xchg
push
int3
push
pushf
cmp
fsubs
xor
sbb
add
fisttpll
mov
push
push
sub
cs
bound
stos
fdivrp
jge
js
pop
into
ret
mov
sti
insl
jb
pushf
or
add
pop
mov
test
pop
fdivr
outsb
dec
out
sti
mov
fsubr
xchg
mov
lods
bound
stos
pop
xor
mov
jb
mov
xchg
jo
popf
fs
jns
lods
imul
cmp
cmp
pushf
js
sub
jmp
jb
xlat
fimuls
xchg
add
movl
outsb
shll
cmp
scas
int3
adc
push
xchg
aaa
fwait
dec
int3
hlt
or
out
lret
sbb
xchg
sbb
cmp
pushf
pusha
mov
xchg
dec
ret
insb
jo
out
pop
dec
jp
dec
pusha
test
mov
jb
add
adc
repnz
fcoms
outsl
mov
leave
cmp
imul
aam
add
pusha
sub
mov
mov
mov
push
out
xchg
pop
aam
mov
out
cmp
xchg
pusha
mov
sbb
pop
fcoml
sarl
mov
jmp
subb
push
add
pop
mov
mov
push
push
sub
cmp
rcrl
add
nop
icebp
hlt
inc
in
pop
movsb
jo
inc
pop
push
addr16
out
push
shlb
jp
push
mov
xchg
cmc
loopne
push
bswap
stc
into
in
inc
pushf
add
xchg
out
jb
ror
mov
mov
add
fimuls
cltd
xchg
push
sbb
int
fcoml
mov
lret
add
xchg
subl
cmpsb
xor
dec
jbe
pop
mov
lods
add
pop
arpl
decb
or
in
addr16
cwtl
repz
xchg
fsubrl
fmuls
dec
jns
lods
pop
push
stos
test
mov
xchg
mov
mov
pushf
mov
mov
jns
mov
inc
ss
ja
push
lods
lahf
fwait
pop
movsb
je
and
fmuls
pop
out
add
fisubrl
sub
lods
xchg
pop
mov
jb
adc
daa
leave
lods
jmp
push
test
mov
mov
jp
aas
and
sbb
or
dec
jp
sarb
add
xchg
lods
cmpsb
cmp
outsb
cwtl
sbb
push
sbb
divb
pop
sahf
aam
dec
mov
sarb
fs
mov
inc
jne
jle
sti
xlat
jbe
xor
lret
lock
cmp
insb
ror
jb
leave
ret
dec
mov
lods
cmp
sbb
or
jbe
rsqrtps
mov
dec
aam
push
insb
ficoml
movsl
movsb
fdivrs
cmp
lcall
into
cmp
pop
loopne
pusha
add
pop
xor
mov
push
add
nop
jb
sahf
out
push
movsb
and
scas
mov
push
inc
add
ror
rorb
xor
or
out
mov
dec
fidivrs
adc
cmp
movsb
and
scas
test
bound
dec
cld
fdivs
mov
mov
dec
adcb
into
punpcklwd
shrb
pop
mov
jp
mov
push
xchg
xchg
addr16
pop
nop
dec
jbe
outsl
pop
sti
mov
push
daa
int
jbe
fldcw
dec
xor
mov
ret
mov
xchg
pusha
movsb
cld
dec
jo
xchg
pop
stos
lock
push
push
nop
cmp
mov
mov
in
cmpsb
dec
mov
mov
mov
imul
cwtl
sarl
ss
mov
mov
gs
loopne
ficoms
xor
mov
cwtl
pushf
lods
js
jl
test
test
jo
loop
mov
mov
push
cli
pop
call
pmaxub
fsubs
xchg
push
pushf
sbb
jp
pop
mov
mov
shll
lods
sbb
outsb
push
push
pusha
xchg
add
testb
shlb
mov
jnp
push
mov
mov
aaa
pop
or
dec
mov
je
or
mov
push
das
out
scas
mov
xchg
adc
xchg
mov
mov
ret
jl
pop
nop
je
movsb
dec
adc
push
push
lret
insl
xchg
cmp
daa
or
dec
out
xor
lcall
inc
mov
mov
and
mov
dec
cmp
aam
xchg
mov
loope
sub
jp
call
pushf
sti
mov
mov
movsb
jp
sbb
pop
hlt
rclb
dec
into
clc
subl
jmp
les
int
pop
into
dec
daa
ficoms
mov
data16
shrb
lret
and
mov
mov
push
fdivrl
xchg
fisubrl
mov
mov
cmpsb
mov
inc
mov
outsb
fs
movsb
pop
mov
pop
das
mov
mov
les
xchg
cmp
lcall
pop
cmp
shrb
add
sub
mov
jp
aam
push
in
mov
mov
sbb
add
cmp
mov
shlb
aas
xchg
push
stos
pop
stos
mov
pop
sub
mov
shlb
pop
pop
movsb
outsb
inc
fisubs
jne
scas
mov
dec
sub
xor
or
fs
add
xor
cmp
dec
jl
dec
cmpsb
mov
xchg
jecxz
xor
cs
ljmp
pop
test
mov
outsb
jp
dec
imul
xchg
bound
adcl
fistpl
jne
mov
popa
aam
out
notl
lods
xor
dec
into
scas
push
pop
jbe
xchg
pushf
mov
test
mov
dec
jp
cli
enter
sub
call
sar
das
pop
data16
mov
cmp
mov
dec
and
fldcw
xchg
mov
add
cmpsb
mov
jae
sub
mov
mov
insb
inc
adc
pop
add
loopne
jbe
add
subb
cmpsb
cmp
push
push
push
test
and
pop
cmp
nop
lods
test
inc
mov
mov
mov
add
ficomps
test
arpl
lret
pushf
dec
das
test
test
jp
lods
jbe
fdivl
lret
add
push
mov
sbb
inc
jle
xchg
movsb
push
pushf
stos
js
cbtw
mov
dec
add
mov
insb
lock
pop
mov
mov
and
fcmove
push
mov
mov
add
dec
jmp
jle
daa
out
pusha
lea
sub
pop
cltd
mov
push
mov
push
mov
jbe
mov
js
dec
in
or
cld
push
fsubs
pop
xor
cmp
xchg
movsb
cli
stos
fcompl
pop
pop
insl
xor
mov
lods
inc
mov
jne
arpl
xchg
push
lret
aam
jb
xor
sarl
jle
test
push
ja
cmp
pop
aam
loopne
cmp
dec
xor
mov
pushf
dec
ret
les
adc
sub
rcrb
sbb
add
outsb
in
lret
mov
jecxz
lret
push
lods
inc
movsb
fildl
mov
jl
jbe
movsb
push
pop
mov
push
mov
mov
fsubrl
outsb
cltd
jo
aam
daa
fidivrl
movb
sub
push
mov
pop
rclb
add
rcrb
mov
daa
shll
push
xor
jb
push
adc
dec
movsb
dec
call
mov
push
fldt
insl
lock
push
or
js
jb
hlt
mov
mov
jo
xchg
fsts
je
mov
add
push
pop
xor
inc
adc
cmp
cmpsb
mov
test
sub
into
js
push
jge
xor
xorb
fcmovne
mov
or
pop
dec
pop
mov
xchg
aas
mov
jg
mov
or
xchg
push
jl
inc
scas
sub
test
pusha
add
movsb
mov
dec
adc
push
sub
data16
ljmp
out
in
aam
sahf
inc
call
fsubrl
xchg
insb
xor
jo
pop
out
int
enter
pushf
cmpsb
je
mov
dec
pop
inc
sahf
fildl
cmp
cmp
jp
pop
jl
push
adc
sub
insb
mov
sbb
sbb
cmp
ja
jnp
sar
mov
dec
cmp
mov
out
lret
leave
pop
push
test
out
pop
sub
push
fmull
into
outsl
mov
xchg
push
jne
dec
scas
in
jo
fisubrs
adc
pop
cmpsb
sbb
int
test
xchg
xchg
fisubl
mov
je
mov
fidivrs
sub
stos
pop
aam
mov
dec
int3
rcrb
test
fildl
mov
pushf
nop
popa
mov
cmpsb
jns
xchg
jp
mov
jl
mov
shr
shrb
cli
pop
cld
leave
push
inc
xchg
jp
mov
push
mov
push
push
fcompl
je
xor
daa
icebp
mov
add
push
das
fwait
test
daa
cwtl
xchg
dec
ja
push
in
push
push
in
fld
stos
push
dec
push
hlt
mov
and
push
outsb
pop
pop
jns
jecxz
ljmp
arpl
pushf
mov
pop
into
mov
mov
fidivrs
in
dec
jp
pop
push
fisttpl
cmp
jp
sahf
fidivl
arpl
sbb
lret
jmp
lret
dec
mov
pop
scas
int3
fnstsw
mov
jbe
or
in
jb
hlt
jne
lock
mov
pop
int3
mov
inc
push
outsb
pop
scas
inc
mov
mov
sti
sub
lcall
push
pop
pop
dec
mov
mov
fdivl
xchg
cwtl
pop
mov
outsb
out
hlt
lods
repz
cmp
jl
fidivs
outsb
out
mov
inc
andps
and
fdivrl
movsb
jo
lods
cmp
out
lea
js
mull
xor
movsb
add
push
pop
idivl
jle
cmp
mov
xor
shlb
jns
ficoml
sbb
lret
sahf
test
mov
cmp
negl
adc
lret
sub
in
add
jnp
mov
push
jle
fsub
dec
xchg
jnp
pop
pop
sbb
mov
jp
and
xchg
pushf
iret
jge
movsb
xor
jo
shl
xor
pop
out
je
sbb
add
jle
jo
stos
pop
mov
mov
sbb
jno
sbb
adc
js
dec
dec
mov
cmp
xchg
mov
hlt
lahf
adc
cmp
push
push
fcompl
xchg
jp
lods
add
mov
hlt
test
std
cmp
pop
jb
mov
jbe
or
inc
pushf
xchg
int3
aam
dec
cmp
jp
jl
outsb
movsb
pop
mov
pop
push
pushf
out
lods
rclb
mov
mov
dec
push
bound
test
mov
pop
mov
push
inc
pop
cmpsb
dec
xor
cmp
mov
out
mov
push
mov
pop
je
and
push
mov
insb
mov
xor
mov
inc
sahf
lcall
inc
cmp
pop
jge
push
div
jl
stos
xchg
push
fwait
sub
xor
repnz
in
push
push
outsb
jecxz
xchg
adc
cwtl
scas
or
pop
test
in
movsb
je
dec
movsb
mov
and
or
inc
insb
in
int3
dec
sub
mov
cmp
mov
fs
mov
xor
stos
mov
sbb
subb
jb
pusha
jbe
insb
out
sub
imul
fimuls
lock
pop
dec
into
jg
out
lcall
dec
subl
mov
daa
pop
push
cmp
jp
mov
and
fistpl
dec
xchg
inc
adc
sub
jg
aam
add
xchg
xchg
mov
lret
or
jnp
push
test
adc
and
jp
insl
push
sarb
in
loopne
and
subb
xor
mov
stos
into
cmpsb
add
push
lods
pop
pushf
insb
dec
pop
aaa
sbb
mov
lcall
xchg
scas
lret
mov
cld
call
lods
mov
lret
xor
pop
cmp
mov
pop
mov
js
mov
add
cmp
push
xchg
jl
fmul
movsb
xchg
push
or
or
jo
mov
sarl
jno
je
lret
shrb
jbe
mov
stos
test
add
setle
shlb
push
jnp
jbe
int3
mov
fdivs
pushf
ss
adc
movsb
push
fs
sub
sub
outsl
mov
je
rcrl
mov
cmp
pop
into
lret
mov
push
push
js
test
mov
fadds
pop
xchg
inc
inc
xchg
add
inc
dec
scas
movsl
mov
dec
lret
mov
jb
xor
into
sub
lcall
lock
rcrb
xchg
xchg
dec
imul
pop
scas
inc
or
lods
jl
js
stos
cs
jns
mov
fcoml
mov
xor
add
lcall
outsl
xchg
lods
in
cmpsb
lock
sub
push
push
movsb
jb
inc
cld
adc
mul
inc
ja
pushl
cli
das
jnp
xchg
xchg
aaa
mov
ret
push
faddp
xlat
xor
outsl
lcall
mov
imul
fwait
push
sahf
mov
pop
cmp
lret
dec
push
fists
mov
mov
jg
mov
lods
xchg
fmull
adc
je
out
mov
inc
mov
xchg
addr16
cmp
push
loopne
mov
jo
jle
je
mov
dec
frstor
xchg
inc
sub
mov
jg
ret
dec
mov
popa
fwait
jo
sbb
or
push
fistl
loopne
rclb
push
nop
pushf
aam
lcall
jno
fsubrl
in
lret
add
jns
push
lods
les
adc
lret
rorl
or
xlat
mov
jp
test
lea
daa
mov
insl
fildl
popf
dec
mov
jbe
jo
xchg
dec
mov
movsb
or
add
sbb
in
leave
jle
mov
push
bound
ret
and
mov
idiv
cli
out
mov
add
pshufw
into
xchg
nop
test
inc
je
adcb
lods
jb
call
into
dec
shl
dec
aaa
in
int
inc
sub
xchg
dec
lods
sbb
inc
dec
jb
les
lret
pusha
outsb
pushf
fldt
into
fwait
test
adc
lods
movsb
bound
inc
jp
sahf
seto
lods
mov
or
shlb
cld
ret
pop
mov
je
or
jo
call
out
stc
adc
arpl
mov
icebp
mov
pop
pop
mov
frstor
pop
mov
inc
bound
test
xchg
lret
and
sbb
jmp
push
adc
insb
mov
jmp
out
into
sub
das
sbb
mov
adc
sub
pop
inc
pop
in
xor
push
push
out
xchg
push
xor
setne
rclb
pop
cwtl
add
js
dec
rorb
mov
loope
mov
jbe
in
rorl
loopne
inc
movsb
add
pop
incb
aaa
mov
mov
jg
aas
push
and
inc
xchg
pop
sbb
lret
test
mov
aam
inc
sub
push
shrb
dec
inc
and
jns
jb
ljmp
insb
mov
mov
sahf
stc
mov
dec
mov
add
mov
jne
out
xchg
imul
push
popa
movsb
fmuls
mov
mov
cli
in
pusha
scas
loop
test
pusha
pop
jb
xchg
mov
inc
test
das
pushf
mov
cmp
push
insb
mov
lret
jge
stos
mov
loope
jl
lcall
sahf
inc
lods
push
test
ficoml
fdivl
fs
xor
fistps
rcr
mov
cmp
pop
insb
and
push
daa
cmp
inc
mov
mov
push
push
inc
xor
pop
cmp
pop
jb
push
cmp
cli
mov
jl
adc
xchg
jo
lret
outsb
push
lea
mov
sahf
mov
fmull
lds
stos
sub
lcall
movsb
push
push
push
mov
pop
orl
cmp
sub
mov
mov
jb
sub
pusha
aam
lods
and
mov
fimull
add
cmpsb
push
sbb
adc
mov
mov
xor
cli
or
out
pusha
mov
cmp
jo
push
dec
rclb
pushf
push
aam
xchg
dec
mov
mov
add
lea
mov
mov
mov
mov
popf
nop
dec
xor
xchg
pop
mov
dec
pusha
scas
mov
sbb
mov
outsb
dec
fsubrs
js
pop
insb
mov
pusha
aaa
pop
sbb
dec
dec
or
lods
mov
jl
test
mov
pop
dec
push
add
add
out
fmull
pop
xor
lods
mov
stc
adcl
sub
pop
shlb
pop
pop
test
insb
ficoms
stos
jp
sahf
push
sub
inc
xorb
out
sbb
int3
jo
push
adcb
jmp
lock
enter
loopne
mov
shrb
add
push
sahf
inc
repnz
xlat
hlt
repnz
mov
not
insb
fdivl
xchg
dec
inc
movsb
lcall
mov
mov
xchg
xchg
fildl
loopne
push
sub
dec
add
dec
fbld
loopne
mov
mov
jp
fcoml
jbe
inc
mov
xchg
fimull
xchg
mov
adc
dec
pusha
dec
dec
push
mov
mov
xorl
jbe
mov
je
lahf
mov
mov
dec
xor
adc
cmp
inc
sbb
sbb
ret
fsubr
pop
cmpsl
mov
mov
xchg
loop
and
pop
hlt
ja
shlb
repnz
jp
dec
lock
imul
dec
fwait
sub
cli
test
mov
cmp
bound
mov
pushf
dec
cwtl
into
fistpl
pop
repz
mov
mov
stos
ss
fidivl
stos
movsl
mov
insb
sbb
cmp
into
mov
fisubrs
lods
popa
pop
rcl
das
jb
cwtl
and
repz
pushf
into
les
lcall
mov
leave
lcall
repnz
xchg
mov
and
fdiv
lea
lock
and
in
mov
cwtl
movsl
loopne
mov
sub
mov
xor
push
mov
gs
xor
fcom
jno
dec
pusha
test
sahf
jmp
test
push
std
jno
mov
pushf
out
xchg
inc
fmull
jb
js
push
xchg
sub
push
pushf
jle
xor
lock
aad
and
orl
cmp
lods
pop
hlt
xchg
loop
int3
insb
test
cli
in
cmpsb
add
cmp
into
movsl
testl
movsb
rorb
int3
sarb
in
nop
test
addr16
dec
pop
mov
or
out
into
vpmacsdd
jb
scas
jge
mov
or
addr16
out
xor
push
cmp
jbe
push
push
or
enter
push
mov
test
pop
add
pusha
pushf
int3
mull
mov
mov
push
je
adc
dec
fcomi
fcompl
pop
sbbl
push
js
pushf
out
lret
or
sarb
stc
out
movsb
cld
cmpsl
lcall
aaa
dec
pop
shlb
lods
mov
pusha
mov
push
mov
sbb
movsb
push
mov
fdivs
mov
ds
pop
mov
pop
das
pop
push
mov
mov
add
lret
test
sahf
rclb
cmpsb
js
xchg
aam
cwtl
dec
pop
mov
fs
sbb
sub
jbe
push
repnz
aam
iret
push
arpl
pop
or
or
sbb
xor
mov
cli
rol
stos
sbb
or
pop
lahf
mov
dec
xchg
pusha
ret
int3
mov
lods
fcom
cwtl
call
pop
call
push
mov
ss
scas
pop
mov
fidivs
xor
das
add
test
cmp
dec
jp
push
pop
mov
repz
hlt
xor
push
cwtl
push
bound
jp
cmp
cwtl
mov
push
scas
jb
mov
sbb
into
jp
lods
aas
pop
je
data16
int3
daa
pop
xor
adc
daa
dec
lods
repnz
mov
push
repnz
mov
mov
jnp
dec
pop
lods
lret
das
repnz
test
mov
sahf
xchg
mov
dec
push
lret
adc
add
jle
int3
fs
into
jl
bound
dec
xchg
push
cmp
js
jmp
ja
fmuls
mov
sti
adc
jle
pop
fs
jl
cmpsb
jp
lods
dec
movsl
jecxz
mov
dec
in
mov
sub
adcl
outsb
xor
jo
addl
out
rolb
insb
add
mov
and
cmp
cmp
jb
js
push
mov
dec
scas
rcrl
fisubs
insb
push
lcall
and
daa
add
mov
jnp
out
lret
fdivrl
fnstcw
push
sub
mov
fs
xor
out
mov
insb
lret
lods
jle
fadd
xchg
push
fistl
mov
sbb
stos
mov
mov
std
jp
int3
rcr
push
dec
jb
mov
cmp
mov
into
sbb
data16
and
imul
int3
xlat
jbe
pop
mov
pusha
cmp
stos
je
jp
jno
mov
pop
xchg
fnstcw
popl
fidivrl
add
out
jne
add
xchg
jmp
adc
lods
xor
dec
outsb
sahf
sub
sub
pop
lock
ret
bound
push
in
pop
lods
sahf
lret
js
mov
jl
push
in
lcall
pushaw
add
insb
xor
xor
mov
jmp
mov
add
fmull
outsb
mov
mov
fmull
pop
pop
mov
jne
shrb
mov
mov
cmp
into
mov
push
hlt
mov
or
movsb
addr16
sbb
testl
arpl
jmp
shlb
insb
pop
jle
cmp
push
push
test
in
fidivrl
xor
aas
dec
les
fdivr
cli
loope
neg
xor
pop
pop
je
aam
push
push
mov
movsb
cmp
xchg
dec
or
or
push
mov
fdivrs
fcmovnbe
or
xor
movsb
out
imul
cmpsb
inc
fcmovnu
jnp
jb
lret
or
les
aad
shl
xor
or
pop
test
push
xor
push
xchg
fiaddl
jb
jg
adc
insb
into
aam
fidivs
out
jecxz
add
daa
dec
pusha
cmp
mov
sub
mov
dec
jb
lock
mov
pusha
sti
sbb
jae
xor
sub
je
loop
outsb
test
andb
js
pop
mov
mov
xor
jp
js
ficompl
dec
pop
adc
mov
sub
rorb
xchg
pop
mov
lcall
lcall
mov
lret
or
push
cs
inc
js
out
sbbb
dec
push
add
dec
sub
test
shl
mov
mov
xor
and
je
fdivl
add
fstps
push
bound
shrl
fmuls
sarb
jbe
movsb
mov
aam
jns
lods
jae
mov
cmc
mov
je
mov
xor
inc
lock
and
sub
mov
scas
pusha
mov
in
loopne
lcall
in
decb
mov
data16
inc
mov
pushf
cmc
scas
and
cmp
lret
mov
fdivrl
add
hlt
sahf
fisubrl
js
xchg
stos
cmpxchg
xor
mov
pop
mov
add
inc
mov
imull
lods
dec
mov
xlat
fidivrl
cmp
jno
pop
das
out
xchg
mov
js
dec
push
sub
fisubs
aaa
mov
dec
icebp
in
xor
fmul
popf
dec
jo
movsl
fidivs
out
out
mov
mov
stc
mov
shl
clc
cmp
sbb
in
mov
xor
mov
test
ja
bound
inc
jl
push
cmc
jg
sbb
mov
push
mov
movsl
or
dec
mov
outsl
loop
push
and
mov
jb
and
call
lcall
sub
jo
scas
pop
sbb
adc
in
mov
or
das
loope
pusha
xor
ss
inc
shl
lds
xchg
js
mov
pusha
lcall
mov
dec
push
mov
insl
ficompl
pop
sti
dec
rclb
fs
adc
and
push
mov
mov
fldt
push
dec
pusha
dec
ja
xchg
push
dec
js
rorl
cmp
shlb
sahf
sarb
push
mov
and
cmp
bound
xlat
adc
push
sbb
dec
pushf
ds
out
fdivl
rcrb
sub
lret
xlat
or
inc
lret
jno
pop
jmp
repz
sarb
lds
mov
jno
out
fnstsw
pop
cmc
jno
rcl
lcall
xor
movsb
xchg
lcall
lcall
push
cmp
jp
mov
shlb
test
mov
lock
dec
push
sub
xor
mov
stos
int
inc
mov
ja
cmp
loop
imul
mov
fsts
sahf
inc
faddl
lret
mov
stos
sarl
xchg
mov
je
adc
cmpsb
and
pop
adcb
bound
pushf
in
mov
aaa
dec
pop
lods
pop
in
in
push
mov
inc
lock
push
xor
out
add
xor
adc
push
outsb
and
lods
test
jne
and
pop
pop
into
out
mov
add
insb
cmp
jnp
lods
pop
int3
push
push
imul
pmuludq
inc
push
push
dec
stos
rcl
xchg
mov
pop
nop
in
dec
xchg
hlt
cmpsb
dec
cmp
js
or
lea
push
dec
and
pop
shlb
sub
mov
cld
push
lods
jb
hlt
mov
and
lods
push
add
push
mov
sub
jmp
js
fcmovb
movsl
xor
pushf
pusha
mov
mov
mov
out
dec
cmpsw
dec
pop
jecxz
bound
push
insb
pusha
cwtl
or
repnz
mov
jo
pop
ficoms
loope
mov
into
aam
mov
outsb
hlt
mov
das
mov
dec
sub
mov
int
and
sarb
jo
fcoms
lods
loopne
fsubl
dec
ds
sub
dec
xchg
sub
push
das
cmpsb
pop
outsb
fstpl
cmp
mov
mov
pop
push
push
pop
adc
fcomps
scas
nop
jl
cmp
push
adc
ret
bound
mov
or
xor
dec
pop
mov
cld
pop
mov
jnp
mov
pushf
lods
mov
jl
insb
jp
mov
cs
mov
jecxz
jno
movsb
push
mov
add
adc
dec
sub
mov
push
xlat
pop
fsubrl
js
fisttps
call
subb
jp
lret
jo
fiaddl
sbb
cwtl
movsb
fdivl
lods
inc
cmp
int
push
in
out
jae
hlt
jp
jp
push
add
pop
lods
xchg
js
out
mov
xchg
imul
mov
mov
dec
jp
into
pop
xor
pop
fcoml
scas
loop
push
xchg
dec
out
mov
mov
adc
pusha
sahf
xchg
mov
dec
cmp
orb
dec
mov
push
mov
push
jl
mov
insl
ret
dec
in
pop
mov
pop
xor
mov
push
and
push
push
mov
shl
std
inc
pop
cmp
fcoms
pop
sarl
js
jle
test
adc
shlb
xchg
mov
pop
cmp
mov
lock
fisubrs
jb
cmp
and
sub
cwtl
jo
mov
loope
push
adc
jae
add
sbb
shlb
or
test
cmp
pop
jbe
pushf
call
out
jl
jo
or
inc
fmul
fsubl
dec
push
xchg
pop
and
lret
push
cwtl
testl
stc
and
out
scas
arpl
mov
jle
mov
mov
sub
sub
in
push
xor
mov
js
stos
xchg
fldenv
insb
sahf
movsb
mov
mull
dec
pop
movsb
idiv
dec
mov
pop
xchg
cmpsb
fidivs
and
mov
push
bnd
push
mov
cmpsl
fdivrs
push
ret
repnz
dec
adc
mov
sti
jno
mov
stos
xchg
inc
insl
xchg
mov
popa
sti
push
faddl
mov
notb
mov
sub
push
sbb
mov
aam
jmp
cmpsb
cmp
lcall
addr16
popf
divl
in
pop
pop
inc
data16
mov
cwtl
or
jno
movsl
xor
mov
mov
push
pushf
movsl
dec
insb
dec
mov
lods
mov
rcll
test
dec
rcl
je
dec
sbb
adc
leave
dec
fmuls
lahf
int3
jmp
repz
mov
outsb
mov
sti
popf
jbe
insb
outsb
cmpsb
lret
shrd
mov
pop
mov
mov
sub
pushf
push
adc
pop
mov
fnstsw
lret
mov
out
add
mov
jmp
xchg
sbb
adc
push
cmp
int3
js
jb
or
mul
mov
jl
shlb
mov
pushl
divl
into
sahf
jnp
pushf
dec
insl
fs
jp
pop
fisubrs
mov
jp
mov
fisubl
pop
jmp
pop
dec
scas
sti
dec
test
data16
js
adc
mov
mov
push
inc
xor
lahf
jns
out
in
inc
cmp
jbe
popl
js
mov
pushf
sahf
out
push
imul
js
rclb
es
aaa
scas
sahf
jmp
ror
mov
aam
mov
dec
mov
pop
cmp
jbe
je
jp
out
sar
cmp
xchg
cli
push
fucomi
scas
xchg
add
xor
outsl
adc
lret
das
inc
mov
dec
mov
pop
xor
lods
pop
je
jbe
stos
xchg
icebp
ljmp
cli
cwtl
pop
xchg
jmp
mov
je
push
bound
mov
pop
mov
mov
ficoml
inc
lret
loopne
jo
cmp
pop
fdivrs
pushf
mov
mov
pop
mov
adc
jecxz
rorb
mov
sti
mov
dec
sbb
or
xor
mov
lods
mov
daa
mov
xchg
cmp
into
inc
inc
out
mov
js
inc
or
sub
cli
jne
inc
push
push
xchg
in
fmul
pop
nop
imul
cmp
lods
data16
pop
adc
cmpsb
aad
lcall
jmp
addr16
sahf
out
inc
mov
mov
pop
mov
cwtl
jp
je
cmovp
xchg
mov
bound
dec
push
push
push
aad
je
fs
ljmp
or
stc
mov
in
hlt
in
sbb
mov
jmp
in
add
int
test
cltd
xlat
pop
scas
popa
mov
push
dec
pop
xor
mov
mov
bound
pop
push
sub
push
repnz
lods
dec
fcmovnu
adc
fimuls
shrb
mov
out
clc
int3
pop
mov
lcall
insb
pop
jbe
insb
jb
nop
jp
dec
mov
mov
jle
mov
inc
test
ret
cwtl
push
icebp
cwtl
into
psrlw
cmp
out
ja
daa
inc
and
push
fcmove
ljmp
pop
cmpsb
inc
jo
cmp
cwtl
mov
lret
lods
mov
adc
int
lods
push
sbb
push
mov
js
xor
xchg
add
mov
xor
cltd
cmovl
add
test
push
insb
lock
ljmp
cmc
addb
inc
add
mov
mov
push
scas
sbb
ss
push
adc
cmpsb
dec
pop
dec
push
cbtw
fstps
push
xchg
scas
dec
sub
mov
mov
dec
adc
lret
loopne
inc
lret
mov
mov
inc
inc
js
test
sub
push
cwtl
mov
push
movsb
dec
jecxz
sbb
mov
cwtl
sbb
mov
pop
pop
dec
add
mov
jecxz
in
mov
push
test
pop
or
ss
push
push
cmpsl
pop
test
mov
insb
push
scas
mov
dec
sbb
mov
aad
fcoml
hlt
loopne
enter
fdivrl
fmuls
mov
xor
stos
push
sbb
push
mov
test
les
test
or
lods
lea
dec
movsl
adc
jo
stos
movsb
mov
je
cmpsb
inc
mov
lods
push
fisttpll
mov
jl
out
push
or
xchg
fcmovu
pushf
cmpsl
popf
jle
call
je
xchg
mov
es
push
bound
out
daa
lahf
fiaddl
mov
test
je
cmpsb
and
add
rclb
add
mov
mov
pop
dec
pusha
and
fadds
jp
mov
lock
inc
pusha
cmp
and
fidivrl
jnp
mov
xor
jns
js
in
or
dec
pusha
push
dec
dec
add
cmpsb
lcall
cwtl
add
fstpt
ror
test
xor
dec
fbstp
xor
pop
lret
scas
aam
mov
pop
mov
arpl
int3
pop
cmpsb
jbe
daa
lock
mov
ficompl
popf
xor
pop
dec
jbe
pop
add
mov
inc
inc
xor
push
into
mov
mov
shlb
ret
push
outsb
leave
lret
xchg
std
mov
cli
and
adc
and
jno
hlt
nop
push
sbb
xor
mov
js
sub
dec
push
divl
mov
dec
lods
cmpsb
and
cwtl
mov
js
movsb
arpl
icebp
and
bound
test
test
push
jmp
mov
add
jmp
mov
lods
add
sbb
iret
add
dec
adc
std
add
lods
pop
decb
push
js
pop
imul
rolb
out
test
std
icebp
and
jb
lret
stos
jl
mov
je
xchg
dec
inc
xor
mov
mov
shlb
int3
fisubs
push
mov
je
popa
jae
out
pop
inc
mov
cwtl
rolb
dec
jbe
dec
fnstsw
out
and
mov
lret
std
xchg
data16
shlb
mov
sti
pop
jo
mov
aaa
insb
pop
mov
movsb
and
addr16
movsl
shrl
dec
test
enter
orl
add
aas
mov
loopne,pn
xchg
xor
dec
fmuls
clc
jp
cmp
adc
sbbb
pop
fimull
test
add
inc
imul
and
icebp
test
nop
mov
lret
xchg
das
mov
push
push
dec
fimull
movsl
push
fsubrl
push
pushf
mov
rclb
mov
mov
dec
dec
mov
mov
push
xor
fcmovu
lahf
add
sti
dec
arpl
cmpsb
daa
lret
sahf
sub
inc
outsb
das
xchg
lods
int3
push
dec
mov
bswap
repz
mov
cld
andb
pushf
xchg
bnd
inc
das
or
lods
add
mov
into
xchg
lods
inc
fdivrl
lret
outsb
jbe
fsubl
lea
ss
sahf
pop
sub
pop
pusha
pop
adc
pop
out
pop
mov
insb
inc
fmull
cmpsb
jb
ljmp
bound
mov
mov
mov
add
or
mov
loopne
pop
sahf
jecxz
repnz
pop
divb
stc
lcall
sahf
xchg
and
jp
adc
cmpsb
dec
xchg
scas
bound
xor
lret
nop
mov
insb
out
ds
and
mov
cwtl
mov
jl
mov
outsl
pop
lcall
inc
dec
sahf
mov
repz
adc
dec
mov
cmpsb
mov
dec
lret
jnp
adc
mov
dec
push
push
pop
jp
ret
insb
lcall
mov
mov
notb
dec
dec
mov
and
stc
adc
into
test
movsb
xor
int3
into
cs
push
pop
inc
ja
inc
jmp
push
mov
xchg
pop
fdivrl
mov
fcmove
or
pusha
test
lret
pop
mov
xchg
hlt
pop
push
lret
mov
stos
fnsave
sahf
dec
mov
cmpsb
int3
and
js
icebp
xchg
jo
lods
sbb
pop
pop
popa
adc
bound
movsb
fsubrs
into
jl
je
mov
imul
mov
mov
into
and
pop
xchg
sbb
stos
mov
out
push
ret
in
js
push
xchg
mov
push
jbe
rcrw
xchg
mov
mov
push
sahf
cld
cmc
mov
xchg
xchg
daa
fs
dec
cmp
nop
dec
mov
test
inc
mov
sub
cmp
outsb
sahf
cwtl
call
ficoml
stos
dec
mov
dec
rcrb
cmp
mov
pusha
out
mov
dec
xchg
jp
into
cwtl
pop
cmp
mov
jecxz
jbe
rcl
lock
mov
test
push
jg
pop
mov
and
xchg
mov
jb
leave
push
push
mov
pop
xchg
shlb
xor
clc
mov
fdivrl
jno
mov
jmp
movsb
and
rclb
mov
icebp
ss
xchg
jp
pop
mov
mov
mov
lods
mov
mov
dec
sbb
dec
in
je
push
pushf
cmp
gs
xor
nop
dec
lods
sub
jo
mov
add
adc
mov
pop
fisubs
pop
stos
je
dec
lock
mov
and
das
xor
pusha
mov
inc
nop
shrb
jecxz
js
dec
and
jmp
inc
jecxz
xor
cwtl
adc
ret
cmpl
dec
mov
fsubrl
mov
pop
mov
jp
test
lcall
cld
popf
jb
bound
mov
pop
pop
in
push
push
dec
jle
scas
data16
je
xlat
dec
aas
xchg
dec
add
pushf
mov
pushf
movsl
testl
lcall
shll
nop
sbbl
lods
fadds
or
fiaddl
out
arpl
fcomps
cmc
cltd
jnp
test
push
push
cmpsb
push
fiaddl
fdivl
sbb
fstpt
lods
dec
xchg
pop
fcompl
mov
pusha
xchg
ret
cld
in
into
inc
mov
push
pop
xor
jge
mov
aas
mov
movsb
pop
jp
jp
xchg
mov
insl
xchg
mov
mov
fwait
push
mov
jo
shrb
push
push
sahf
and
jl
inc
data16
cmc
mov
pop
cwtl
pusha
push
mov
pushf
xor
sbb
jo
fdivrp
das
pop
mov
mov
jbe
callw
aam
fs
inc
mov
mov
mov
jp
stos
push
rorl
dec
fcompl
jb
xchg
scas
jns
stos
les
xchg
sti
jecxz
jo
loope
push
rcrl
fadds
dec
sahf
data16
repz
ret
pushl
sbb
stc
sub
and
pop
lret
cld
xchg
mov
fsubl
cmc
sarb
data16
das
or
or
push
cmpsb
pusha
push
and
lret
movsb
je
jg
pushf
fdivl
lcall
adc
cmpsb
cmp
mov
push
fcmovnbe
push
fs
lea
test
enter
mov
pop
stos
notl
pop
push
xor
scas
fistpll
mov
mov
sti
inc
stos
dec
cmp
mov
in
roll
out
fnsetpm(287
repz
int3
imul
mov
xor
dec
add
data16
jbe
xchg
sub
adc
mov
data16
mov
mov
push
fidivl
pushf
mov
cwtl
cmpsb
js
pop
lock
pop
push
mov
sarb
jecxz
mov
sbb
lods
test
mov
stc
into
mov
sti
mov
pushf
mov
adc
pushl
jg
push
jo
dec
outsb
movsb
dec
mov
imul
jbe
pusha
dec
mov
and
add
inc
fidivs
dec
cmp
mov
dec
int3
cmpsb
scas
out
movsb
push
fcoms
sbb
cmp
jne
das
insb
mov
push
push
inc
pop
scas
int
loope
pop
adc
mov
pop
scas
pop
mov
mov
iret
into
mov
outsb
sti
add
or
loopne
fcoms
cltd
in
in
xor
xor
insb
dec
pop
lods
pop
dec
cmp
or
sahf
mov
sbb
xchg
cmp
cmpsb
jl
push
scas
push
outsb
push
cmp
je
pop
xchg
pop
sbb
push
nop
lcall
loop
movsl
push
cmp
and
jno
sahf
ss
insl
push
lcall
sarl
mov
cmpsb
dec
jle
repz
shrb
je
daa
adc
pushf
and
pop
fs
into
xchg
gs
inc
xor
lods
inc
rcrl
sub
pusha
xor
nop
jmp
mov
sbb
movsb
mov
int3
ret
lcall
xor
icebp
dec
adc
pop
dec
hlt
mov
fcoml
lret
xor
test
sub
push
hlt
pop
push
dec
cmp
scas
nop
mov
sub
inc
inc
dec
aam
hlt
cmc
pavgw
stc
xlat
cmc
sub
stos
icebp
movsb
fdiv
push
adc
data16
and
pop
sbb
xor
mov
mov
icebp
out
cmpsb
les
clc
sub
adc
xor
rcrb
fildl
mov
js
add
in
sub
and
or
test
repz
mov
movsb
test
pshufw
outsl
rol
xor
fcompl
loopne
mov
mov
std
test
push
mov
outsb
mov
lret
pop
mov
pop
bnd
cs
mov
push
cmp
xchg
hlt
leave
js
and
cmp
sbb
inc
test
ja
and
into
sar
fcompl
cmp
mov
hlt
test
jbe
and
mov
pop
in
icebp
out
movsb
add
or
xchg
jbe
js
and
fdivrl
xchg
cmpsb
mov
inc
gs
out
push
movsb
repz
push
insb
daa
mov
xor
out
cmp
dec
pop
push
cmpsb
mov
fmuls
stos
xchg
mov
mov
pushf
bound
mov
adc
and
cmp
lcall
fistps
dec
fistpl
mov
int3
rsqrtps
sti
mov
dec
mov
cmp
xchg
push
imul
cmpsb
and
into
mov
out
out
fucompp
insl
jecxz
xchg
or
xchg
jge
cmp
mov
mov
inc
addr16
push
or
push
xchg
mov
scas
push
jbe
jmp
mov
aam
add
adc
sbb
cmp
cwtl
mov
cmp
mov
mov
imul
cmpsb
sarb
movsb
lret
dec
loopne
les
adc
outsl
mov
aam
adc
cmpsb
mov
add
imul
stos
dec
dec
cwtl
cli
pusha
mov
rcrb
push
sbb
jp
rcrl
jbe
xchg
xor
and
lods
js
mov
js
add
xlat
cwtl
insb
jp
sti
es
mov
add
into
in
test
call
xchg
jg
in
and
mov
aam
fsubrs
jp
js
loop
stos
out
mov
xchg
pushf
mov
or
insb
mov
je
xchg
jo
mov
fsubl
mov
adc
mov
data16
sub
adc
lcall
pushf
adc
aaa
inc
xchg
sahf
fisttps
movl
or
in
lret
enter
js
fcompl
roll
aas
pop
sbb
out
mov
push
test
cmp
fcom
pushf
add
fcom
fidivs
mov
push
lods
bound
lret
in
clc
jmp
data16
cmp
mov
fnsave
enter
add
mov
inc
mov
pop
push
movsb
stos
test
jo
imul
js
pop
out
in
nop
jne
fs
adc
in
mov
add
xchg
loop
dec
mov
and
mov
insb
xchg
sahf
popa
push
lret
push
push
test
aaa
clc
insb
pop
movsl
dec
cmp
int3
cwtl
jo
jecxz
xchg
jp
out
loopne
hlt
push
xor
pop
ficomps
stos
jnp
cs
fsts
push
inc
push
dec
mov
jbe
inc
ja
mov
jle
mov
cwtl
outsb
push
call
call
pushf
mov
or
dec
jge
sbbb
add
test
test
int3
jo
jno
mov
icebp
cs
mov
jle
xor
cmp
push
adc
lcall
dec
pop
push
push
mov
int3
dec
rclb
xchg
out
push
enter
mov
cwtl
add
js
ds
lahf
mov
pop
xchg
lret
sti
arpl
jl
cwtl
mov
rolb
dec
lods
inc
iret
add
inc
or
pop
mov
fwait
jl
dec
push
lods
pop
test
or
insl
cli
xchg
xor
stos
inc
push
push
push
push
pop
xchg
fidivl
repnz
out
lcall
xchg
insb
lock
fistl
into
dec
dec
dec
mov
inc
add
std
mov
call
lods
outsb
or
insb
ret
dec
pop
add
hlt
data16
lods
adc
sbb
add
sbb
aam
sub
popa
fcompl
push
in
pop
dec
cmc
pop
push
cmp
jbe
fdivs
xchg
add
dec
jb
ja
cmp
ss
pop
enter
sub
addr16
cmp
loope
jecxz
mov
add
mov
cs
test
fisttps
lods
push
lock
js
pop
mov
jb
lea
pop
pushf
mull
jo
jo
mov
add
sbb
jo
shlb
xchg
mov
dec
mov
mov
inc
je
sub
adc
pop
dec
testb
mov
push
movsb
lret
jbe
stos
pusha
inc
and
and
pop
add
rol
aad
movsb
add
shl
arpl
push
dec
pusha
dec
ficompl
ss
mov
fcomp
push
mov
test
jnp
xchg
push
sbb
out
addr16
cli
xchg
js
adc
jne
dec
pop
mov
xchg
dec
mov
mov
mov
rcrl
sbb
test
enter
dec
fsubs
cwtl
jmp
mov
std
jp
shr
out
mov
bound
insb
adc
fbstp
pop
aas
lahf
aas
test
cmp
aam
mov
in
push
inc
stc
jns
outsl
aas
rep
pusha
in
shlb
je
rolb
sub
lods
mov
add
ret
test
je
add
xchg
add
mov
pop
std
cmp
jbe
pop
dec
pop
xchg
add
pusha
outsl
dec
addr16
outsl
dec
in
outsb
mov
aam
pop
in
sbb
xchg
push
cmp
decl
sahf
mov
adc
lahf
je
xchg
fiaddl
enter
sub
cmpsb
sbb
inc
push
test
lret
mov
addr16
rorb
jb
sarl
or
push
and
cmp
cwtl
push
mov
jp
inc
xor
jnp
cmpsb
inc
ss
loopne
fimull
int3
ror
addr16
pop
pusha
add
les
das
cwtl
dec
fsubl
aaa
aaa
mov
std
mov
daa
mov
mov
jns
arpl
mov
jo
cli
mov
fsubr
sbb
and
add
test
cmp
jb
into
in
mov
mov
pop
dec
cmp
call
push
fcoms
cmp
mov
ja
insb
pop
xchg
adc
adc
mov
cvtps2pd
imul
push
cwtl
cmp
mov
mov
mov
add
mov
inc
push
pop
int3
cmp
dec
je
xorl
mov
lods
inc
aas
iret
jmp
lret
pusha
pop
icebp
jl
insb
xchg
lret
mov
mov
test
push
pusha
insl
aam
lods
pop
shlb
lret
mov
inc
insl
cmp
scas
jbe
bound
mov
int3
cmp
xchg
mov
dec
movsb
adc
add
insb
push
xchg
ljmp
js
mov
fdivrl
lret
push
pop
insl
push
xchg
add
cwtl
mov
mov
pop
stos
or
xchg
mov
push
mov
movsb
push
fdivr
cs
pushf
stos
shl
jbe
pop
fcmovu
push
data16
add
fdivrs
stos
mov
movsl
bnd
mov
push
cli
mov
lcall
movsb
mov
pop
imull
cs
outsb
add
je
xchg
aam
rcrb
dec
push
xor
data16
lcall
jp
pusha
mov
cmp
mov
mov
aam
mov
repz
test
adc
mov
aas
pop
cmpsb
mov
mov
and
mov
mov
and
arpl
pop
js
add
outsb
lret
mov
sti
fldcw
mov
push
cmpsb
in
testl
push
hlt
nop
movsb
mov
jns
push
inc
aaa
mov
mov
add
or
pop
dec
jp
into
xchg
lcall
cmp
pop
xchg
fs
stos
sahf
into
sarl
fcom
add
push
cmpsb
xor
jg
mov
jo
jnp
dec
ret
out
out
ret
sub
fisubrs
mov
lods
adc
cmp
mov
fstpl
mov
jno
push
test
jp
cmp
scas
into
jae
fcomp
push
lock
lods
xor
rclb
jne
cmp
movsl
pushf
jg,pn
cmpsb
and
push
sti
sub
push
mov
and
popl
cmpsl
loopne
pusha
mov
fisubrl
xchg
or
in
mov
sub
sub
or
add
pop
cmp
mov
and
dec
xchg
cwtl
imul
mov
mov
mov
dec
popl
cmpsb
pop
dec
lods
lahf
jbe
sbb
push
faddl
stc
sub
jo
and
mov
data16
pop
inc
pop
xor
aam
mov
pusha
mov
mov
ja
mov
int3
fisubl
scas
pop
pushf
hlt
fsubrs
lcall
ret
dec
mov
mov
stos
pusha
rcrb
aas
push
cmpsb
mov
mov
nop
pop
xchg
mov
mov
lea
ss
adc
xor
lcall
dec
push
fwait
int
inc
inc
dec
sbb
inc
pop
pushf
jge
int3
movsb
nop
dec
ficoml
shlb
inc
fcompl
inc
mov
data16
loop
push
lcall
pop
stc
mov
fisubl
xchg
mov
movsl
mov
stos
dec
cwtl
jnp
mov
xlat
dec
popf
mov
sbb
sarb
adc
push
pop
mov
pop
sahf
mov
pop
push
dec
sub
and
dec
cmp
popa
dec
pop
jp
pop
pop
mov
bound
add
rcrb
shl
adc
frstpm(287
sub
push
xchg
and
dec
sbb
scas
push
into
fdivr
in
xchg
test
sbb
pop
adc
andb
mov
xor
jp
mov
pop
jno
aam
mov
pop
js
leave
je
fs
add
stos
xor
sahf
pop
mov
or
int3
in
pusha
mov
cmpsl
lods
das
daa
scas
pop
jbe
mov
sahf
movsb
pushf
mov
push
js
clc
outsb
jo
scas
add
pop
push
mov
movsl
cmp
fcomps
in
push
pushf
cmc
mov
setle
jne
mov
mov
cmp
jp
push
mov
xchg
lret
jb
lods
cmp
xchg
fmull
sbb
outsl
xchg
add
cmp
pop
inc
sbb
fstpt
lods
dec
xchg
jns
movsb
jl
insb
cmpsl
mov
pusha
popa
mov
mov
cli
push
push
pusha
cld
popa
cwtl
lock
sahf
push
mov
inc
jns
mov
pusha
jns
lods
movsb
push
pop
xor
inc
fdivrs
pushf
inc
lret
sbb
int3
mov
inc
daa
into
movsb
das
shlb
or
pusha
les
mov
nop
test
cltd
outsb
cli
xchg
fimull
scas
xchg
lret
dec
dec
fadd
push
ficomps
mov
xor
das
push
mov
test
inc
loopne,pn
jge
pop
lcall
cmp
jl
test
adc
scas
or
adc
fcmovnb
cmp
sub
in
dec
cmpsl
movsb
mov
xor
pop
cmp
mov
pop
dec
sahf
pop
daa
xchg
into
pop
mov
shlb
xchg
out
in
loopne
add
inc
cmp
jb
mov
push
dec
jbe
hlt
fcompl
mov
movsb
mov
shlb
popf
push
jo
in
fs
dec
imul
adc
fldcw
mov
mov
insb
addr16
add
je
mov
fisubs
pop
xchg
cwtl
xor
mov
mov
pop
insb
out
jl
or
je
pusha
cmp
mov
lods
pop
lds
mov
cmc
mov
dec
mov
adc
fisubrs
push
daa
sahf
jbe
fsubs
imul
dec
aam
mov
mov
add
and
and
movsb
mov
cmpb
push
mov
loop
fidivrl
mov
bound
jb
dec
les
sbb
push
pop
mov
outsb
je
mov
scas
mov
mov
mov
mov
xor
ret
aas
std
ja
cmp
and
inc
ja
mov
mov
stc
and
jp
mov
push
stc
jl
ror
cmp
lods
dec
cmp
xor
xchg
mov
pop
aad
cltd
mov
fcoml
rcrb
jbe
mov
aaa
or
mov
arpl
or
cmp
insb
fs
mov
fdivp
enter
mov
addl
cld
loop
sbb
nop
out
sahf
push
mov
pop
cmpsb
jo
scas
mov
xchg
js
jp
push
sub
cwtl
jns
mov
xchg
sub
nop
mov
jecxz
pop
sub
movzbl
and
stos
cltd
into
pop
pop
fldt
je
mov
int3
inc
enter
pop
fsts
mov
lret
cmp
mov
cli
jns
loop
mov
fimuls
fcomps
mov
xchg
loopne
inc
pop
mov
call
iret
arpl
cmpsb
lahf
add
mov
cmp
das
push
and
cmp
mov
jo
mov
in
jo
arpl
push
dec
cwtl
jp
mov
fidivrs
mov
push
sarb
xchg
mov
inc
inc
cld
in
mov
sbb
fnsave
jb
mov
out
jbe
mov
int3
jg
sarb
nop
mov
lret
mov
into
and
push
sbb
and
daa
cmpsb
fidivrs
stos
test
push
mov
mov
mov
adc
repnz
dec
dec
out
dec
mov
dec
dec
inc
xchg
jnp
les
cld
xor
imul
aas
mov
jecxz
pop
mov
in
xor
mov
movsb
mov
add
sahf
mov
cbtw
mov
mov
lds
inc
pop
pop
je
lea
mov
aam
inc
push
test
push
test
daa
lods
shlb
ljmp
movsb
mov
mov
and
inc
push
or
fadds
add
test
pop
scas
pop
jbe
idivl
daa
cmp
rclb
pop
push
lahf
mov
lret
in
lock
push
push
mov
mov
mov
jns
mov
pop
mov
fistpl
push
sub
repz
mov
outsb
pop
mov
xor
cwtl
lods
je
stos
push
aam
les
mov
mov
fcomp
xchg
mov
sub
pop
outsb
dec
pop
jae
push
xor
mov
mov
nop
nop
jmp
xor
dec
mov
mov
pushf
cmp
imul
mov
cltd
jbe
cli
fdivrl
sar
cwtl
sbb
push
pop
mov
sub
sub
inc
or
or
lret
mov
or
fmuls
cmp
movsb
mov
pushf
cwtl
adc
add
aam
fdivrs
cmp
push
shlb
mov
scas
inc
mov
jle
mov
push
mov
fmul
cmp
jbe
pop
pop
lret
add
jp
pop
addr16
scas
add
xchg
inc
dec
ds
nop
dec
stos
pop
mov
adc
adc
or
mov
sbb
fstpt
xor
scas
pusha
aam
and
adcb
mov
jp
jbe
lods
insb
jle
jnp
pop
or
xor
jb
or
es
fs
dec
aam
add
and
fcmovbe
int3
pop
push
lret
push
pop
jp
sahf
outsl
pop
dec
test
xchg
mov
dec
dec
std
fs
pop
mov
inc
jbe
btc
mov
fcmovnb
push
cmp
fmuls
pop
mov
dec
in
dec
add
fnsave
push
inc
jo
hlt
mov
lods
add
dec
sbb
sbb
loopne
pop
inc
add
ret
loopne
lods
add
into
dec
cmpsb
outsb
mov
push
or
in
jo
nop
shrb
rolb
pop
push
push
mov
sbb
cmp
mov
stos
flds
in
ficoms
ret
dec
js
and
xor
xchg
js
adc
rolb
lock
cmp
daa
nop
dec
xchg
sub
mov
mov
addr16
lret
movsl
das
mov
lods
lcall
push
out
fimuls
rorb
pop
pop
fs
xchg
lret
adc
shll
sbb
aam
push
sti
mov
cs
mov
xor
xor
out
jnp
insb
fmul
lds
pop
push
lret
sbb
push
pusha
pop
mov
movsl
sub
cmp
fisubl
sub
push
pop
lds
outsb
sub
inc
das
jb
xchg
cs
mov
dec
sbb
pushf
mov
mov
addl
cmp
fs
fistpl
jp
add
outsb
push
subl
lcall
dec
into
mov
mov
shlb
sbb
out
push
push
scas
cmc
scas
outsb
lret
adc
js
push
imul
sti
cld
push
mov
inc
in
mov
cmp
lret
sarb
dec
push
dec
sub
adc
push
sub
mov
daa
pusha
jp
fidivs
sbb
lret
test
mov
xchg
in
lcall
or
fidivrl
and
jle
pop
loope
push
inc
jl
dec
nop
out
add
repnz
sub
inc
mov
in
into
pusha
pop
aas
test
fiaddl
movsb
push
pop
mov
mov
add
subb
and
rorb
fdivrp
int3
xchg
outsb
jbe
or
out
jnp
jp
enter
adc
test
pop
mov
push
sub
xor
fcmove
pop
pop
add
mov
push
das
in
sub
jb
arpl
push
test
pushf
mov
pop
cld
into
mov
sbb
xchg
push
lods
ret
mov
add
pop
outsb
inc
push
adc
push
ffree
nop
inc
mov
xor
das
je
xlat
mov
mov
pop
pop
add
mov
pop
repnz
fistps
mov
pop
mov
add
and
cmpsb
aad
xchg
jle
and
cwtl
jl
fs
sbb
aas
rclb
xchg
lods
js
fmull
popf
adc
cmpsl
fcmove
adc
jl
scas
dec
mov
mov
cwtl
push
data16
ficoml
adc
subb
xor
test
mov
cmp
mov
mov
pop
jnp
aam
dec
mov
cmp
mov
mov
fs
hlt
push
lods
or
mov
mov
test
mov
jbe
cld
cmc
test
xor
mov
mov
push
dec
or
shrb
xor
push
aam
je
shlb
sub
insb
loopne
pop
aam
fs
cmpsb
sub
nop
hlt
mov
into
mov
inc
jl
ficoms
jb
mov
jp
lcall
dec
dec
sbb
and
orl
arpl
das
outsb
jo
push
lret
xor
cwtl
or
add
inc
xchg
xor
fidivrl
fwait
pop
les
out
dec
mov
push
push
pop
jg
mov
call
in
mov
mov
and
clc
pop
push
adc
daa
movsb
rorb
pop
jp
adc
mov
lods
or
in
stc
dec
inc
mov
in
cld
mov
mov
pop
sahf
sub
mov
push
mov
pop
mov
bound
fs
push
jb
push
sti
cld
leave
insl
inc
lcall
and
jns
insb
out
xor
fmull
mov
mov
es
aam
mov
in
lods
mov
pushfw
inc
add
inc
movsb
push
movsb
or
int3
in
or
test
jmp
adc
bound
test
sub
aas
fwait
mov
jo
inc
sub
test
pop
mov
mov
fcoml
mov
das
pop
mov
xchg
sub
pop
pop
jno
repnz
mov
in
je
or
loop
push
pushf
shlb
pop
or
pusha
pop
arpl
jp
in
mov
jo
adcb
int3
cmp
lods
jbe
lret
fisubrs
push
bound
inc
sti
aam
push
jo
sbb
out
cld
data16
out
cmpsl
cmp
xchg
xchg
xor
mov
scas
fdivrl
mov
int3
fstpt
dec
cs
scas
push
out
push
cmp
jo
cltd
rol
out
mov
add
shl
mov
subl
je
dec
in
pop
out
jl
mov
test
jge
in
mov
lret
or
pop
lods
cmpsb
sub
mov
sbbb
push
sub
lret
xchg
pop
xor
jb
push
nop
insb
inc
lret
and
outsl
jp
push
test
in
mov
pop
stos
pop
addr16
dec
push
mov
int3
scas
jb
mov
push
xor
mov
ret
aam
mov
jne
push
pop
data16
pushf
push
pop
sbb
divb
sbb
outsb
jns
fs
mov
mov
dec
jge
loopne
incl
enter
cmpsb
lock
cld
rorl
sarb
push
out
pop
shll
pop
xor
or
jl
pop
mov
jb
push
je
dec
mov
les
lock
scas
sub
ret
lods
sub
mov
xor
dec
or
mov
add
int3
jbe
sahf
nop
js
or
push
mov
pop
xor
jbe
out
rclb
add
cmp
nop
fdivrp
mov
dec
pop
jp
push
sahf
push
dec
js
fisttpl
xor
add
sahf
push
adc
jp
jl
pusha
rorb
lret
inc
lret
mov
jb
sbb
jl
shlb
mov
jge
ficomps
jns
in
pop
inc
rcl
dec
jp
push
push
insb
iret
pop
shrb
sbb
fs
out
int3
dec
xchg
lods
cmp
mov
jge
aam
rclb
jecxz
repnz
js
mov
xchg
cmc
or
add
xorb
stos
lea
sbb
lds
insb
stos
dec
fs
js
jae
lods
push
divb
dec
inc
inc
mov
sbb
sbb
xor
mov
mov
mov
and
ret
sbb
xchg
movsb
dec
pusha
cld
mov
loop
push
ja
dec
mov
in
mov
push
push
sbb
push
pusha
cmp
inc
and
mov
arpl
push
mov
and
pop
stc
loopne
sbb
fisubrs
pop
cmp
cwtl
mov
jns
lret
fidivrl
xor
lods
mov
jo
dec
push
pop
test
add
hlt
push
fsubl
scas
ds
xor
cld
cmp
ret
pop
je
mov
sub
mov
das
push
test
sub
outsb
or
xor
fidivrs
movsb
push
mov
pop
jb
jns
pop
xchg
pop
dec
popa
cmp
cwtl
fdivrl
mov
sbb
loopne
mov
je
and
pop
scas
pop
pop
int
cmp
into
mov
xor
pop
cbtw
scas
aad
mov
pushf
call
cmp
jne
xlat
pop
mov
pop
data16
shl
inc
mov
dec
inc
lods
jb
mov
and
mov
cmp
mov
aam
fcomps
jmp
sbb
mov
out
ficompl
adc
xchg
out
fxch
pop
aam
mov
outsl
cmpsb
movsb
pop
xchg
in
pusha
rcll
push
push
out
movsb
and
cltd
fimull
cld
xor
cwtl
fidivrl
in
push
jo
gs
nop
rcrb
push
mov
dec
mov
pop
stos
insb
pop
lret
ljmp
popf
fs
sub
sahf
dec
cmp
movsb
and
xchg
mov
inc
xor
xchg
push
mov
push
dec
mov
lds
shrb
int3
sahf
mov
mov
inc
cmp
dec
cwtl
lock
dec
adc
test
scas
adc
cld
adc
xchg
mov
cmp
mov
pushf
arpl
in
push
popa
adc
test
push
std
fimuls
inc
cld
push
ror
mov
mov
lahf
jo
into
add
je
sub
cmp
lods
rcrb
dec
fmull
test
aam
insb
pop
pop
lea
js
mov
scas
fwait
adc
stos
fadds
jnp
ficompl
mov
lods
cwtl
imul
lret
adc
mov
je
mov
jle
push
and
mov
mov
pop
cmp
cmp
rclb
rcl
or
sbb
popa
loopne
cld
pop
mov
sbb
movsb
xchg
rclb
fistps
mov
mov
pushf
mov
sbb
outsb
out
je
jmp
pop
sub
push
dec
adc
jbe
xchg
dec
mov
lret
jne
inc
fadds
cld
popf
je
mov
xchg
out
pop
mov
mov
fldt
pushf
das
jbe
mov
cli
mov
mov
jl
sbb
push
mov
lods
testw
int3
outsl
test
pop
arpl
and
mov
inc
push
cmp
push
arpl
out
mov
sub
mov
mov
pop
daa
inc
shlb
stos
cwtl
xchg
push
in
jp
cmp
scas
bound
sbb
shl
and
das
push
jb
lods
pop
movsl
and
jge
or
and
add
sbb
movsb
aam
mov
pop
cmpsb
add
or
sahf
pop
addps
adc
enter
dec
xor
jb
cmp
push
mov
cltd
jo
mov
scas
shlb
or
sub
out
jge
mov
iret
push
in
pop
xchg
mov
mov
ljmp
jnp
adc
sub
out
add
lods
aam
sti
repnz
jne
movsl
jl
lret
lcall
stos
push
mov
mov
pop
sbb
jmp
pusha
pop
pop
and
jbe
dec
int3
jnp
xchg
add
lret
dec
pusha
fstpt
mov
lods
mov
pop
fcomps
je
popa
pop
rcr
mov
mov
xchg
lods
xor
testb
or
rcrl
bnd
cld
mov
movsb
outsb
jmp
pop
xchg
movsb
add
aam
pop
mov
sub
dec
xchg
mov
scas
jbe
jae
sbb
xchg
into
jo
xchg
arpl
dec
mov
jnp,pt
pushf
sbb
cwtl
and
add
jb
mov
fs
into
dec
sub
in
inc
das
es
mov
or
insb
les
leave
push
push
fisubrs
adc
xor
add
into
bound
inc
push
dec
push
or
subb
xor
lcall
mov
pop
mov
pop
jo
xchg
pushf
cmp
fcomps
push
mov
xlat
sub
lods
mov
out
mov
xlat
icebp
adc
pop
scas
and
sbb
cs
jg
jb
cmp
lock
mov
pop
push
fistl
pop
lods
cmp
jne
std
jns
mov
inc
fldt
js
dec
outsb
push
and
mov
les
lods
ljmp
add
movsb
or
mov
xchg
jp
jb
lock
js
jo
push
insb
jbe
addr16
int
cwtl
mov
xor
gs
mov
xchg
pop
inc
stos
sbb
xchg
scas
adc
mov
sub
adcl
rclb
push
mov
mov
pop
jnp
push
dec
or
inc
mov
sti
inc
bound
mov
rclb
pop
das
sbb
jb
pop
jbe
mov
pop
pop
cwtl
cmp
jge
pushf
lods
dec
pop
jo
mov
push
fldcw
mov
js
push
jbe
push
mov
mov
pusha
push
scas
mov
fs
cmp
xchg
dec
fdivrl
pop
hlt
push
mov
mov
jo
sbb
data16
fmull
stc
cmp
xchg
mov
mov
jecxz
faddl
pop
stos
cwtl
shrl
jb
sbb
mov
push
pop
pushf
pop
mov
imul
xchg
sbb
push
pop
sahf
cld
fwait
js
fs
xor
push
sbb
pushfw
stos
inc
dec
sbb
lock
cmpsb
sarb
mov
cmp
je
push
cmp
bound
xchg
test
cld
push
mov
rcrb
scas
ficoms
shlb
movsb
incb
rep
fs
shlb
bound
dec
inc
int3
fidivrl
mov
mov
dec
std
push
or
mov
add
mov
and
xchg
cmpsb
out
cmp
push
jp
ror
mov
xor
movsb
ficoml
in
mov
push
pop
into
mov
int3
das
inc
fnclex
pop
lcall
addb
sub
or
int3
jns
cmp
je
push
push
jl
movsb
dec
jbe
xchg
lock
enter
inc
lock
imul
nop
jo
jle
out
mov
aam
imul
in
in
out
dec
lret
pop
push
or
sbb
inc
mov
fdivl
dec
mov
mov
mov
push
dec
cmp
jns
imul
ror
jnp
push
hlt
push
scas
push
mov
pop
dec
ret
xor
mov
xor
pop
int3
mov
test
jb
pop
sub
enter
bound
aam
pop
stos
nop
mov
inc
mov
repz
inc
xor
mov
push
xor
dec
mov
cwtl
push
aam
out
jecxz
movsb
adc
mov
pop
mov
call
int3
dec
pop
lret
xchg
fmulp
pop
lcall
pushf
ja
jl
aam
xchg
xchg
adc
hlt
iret
pop
sub
lods
das
adc
dec
adc
pop
push
into
outsb
mov
fmull
jp
shlb
lret
mov
mov
lods
lock
sub
xchg
or
push
mov
cmp
ss
dec
rolb
xor
nop
pop
or
imul
xor
xor
je
cmpsb
cmp
test
mov
sbb
imul
inc
fmull
daa
xchg
push
sahf
out
cmc
add
cld
ss
imul
fcmovnu
fsubs
in
lcall
mov
jae
into
divb
aam
pop
movsb
add
dec
mov
int
mull
int3
mov
cs
cmp
data16
pushf
mov
imul
push
adc
push
out
mov
test
pop
push
mov
cld
fcmove
lods
mov
pop
xchg
mov
add
xor
sub
mov
mov
and
movsl
mov
pop
mov
jecxz
push
pop
mov
xchg
out
rclb
outsb
pushf
gs
inc
lods
dec
sahf
inc
sbb
pop
pop
roll
pushf
int3
mov
movsb
mov
in
das
lret
jg
aam
sub
dec
cmp
cld
lds
mov
jp
dec
pop
jge
aam
out
divl
sbb
lret
js
nop
movsb
dec
aas
rorb
das
jo
push
xchg
pop
mov
into
push
fsubrl
ret
nop
sub
sbb
aaa
jle
pop
lods
jle
pop
xor
inc
fimull
mov
ret
loopne
sahf
add
fistpl
jb
les
stos
cmpsb
cmp
mov
xchg
popf
pusha
rorb
inc
out
add
push
dec
cld
cld
fcomp
xchg
loop
scas
scas
hlt
sub
dec
and
insb
sub
outsb
lods
mov
mov
jecxz
in
adc
daa
inc
pusha
and
lods
int3
mov
dec
mov
cmp
jbe
push
adc
stc
int3
dec
stos
aas
js
xor
xor
xor
pop
xor
pop
mov
je
jo
mov
into
xchg
jnp
bound
repnz
xchg
inc
push
jbe
movsb
arpl
jl
xchg
bound
in
dec
out
btsl
cwtl
fmulp
dec
call
jg
iret
push
push
mov
adc
enter
mov
dec
pop
mov
push
fsubp
into
sar
pushf
xchg
orl
movsb
stos
mov
dec
fmuls
int
hlt
push
sub
hlt
out
cmp
mov
jo
scas
pop
lock
pop
mov
test
mov
fstpt
repz
into
mov
ret
xor
pop
jb
fs
mov
ucomiss
shl
mov
decb
jnp
std
aam
movd
mov
ja
js
mov
and
lock
cmp
mov
jae
dec
cltd
mov
inc
js
pop
cmc
mov
mov
push
arpl
fnclex
mov
mov
mov
sahf
xchg
jb
seto
in
jge
fmuls
jo
dec
push
stos
out
mov
fdivrs
jl
lods
dec
daa
aam
mov
jle
mov
xlat
cmp
fidivrl
mov
jle
out
fbld
lcall
pop
mov
push
gs
mov
and
xor
data16
mov
jo
lahf
sti
push
mov
mov
pop
xor
dec
and
pushf
shrl
xchg
lret
add
in
out
xor
outsb
pop
ja
loopne
js
aam
jge
dec
sti
rorb
sti
arpl
dec
aam
jp
jb
mov
ret
movsl
mov
sbb
inc
pop
fnstcw
jo
sahf
mov
inc
movsb
test
jmp
push
jbe
mov
pusha
xchg
pushf
leave
sti
dec
pop
outsb
add
sahf
fs
ficomps
bnd
mov
out
aaa
das
pop
jb
in
ja,pn
lcall
mov
into
mov
arpl
cmp
pop
mov
fidivl
xor
inc
xor
dec
cwtl
inc
sub
jb
stos
jo
adc
pop
mov
inc
data16
mov
mov
lret
out
nop
fimull
dec
push
nop
jnp
fcoml
pushf
in
fstpt
push
scas
in
jne
fs
pushf
add
cmp
insb
stos
into
jg
in
xor
test
mov
jge
fstps
shrl
aaa
dec
jb
ljmp
mov
cmpsb
mov
push
push
outsb
dec
stos
mov
dec
in
sub
imul
dec
sbb
daa
shl
mov
xor
daa
push
lea
pop
ficompl
loopne
add
mov
and
stos
lcall
lret
and
out
mov
mov
les
pop
stos
loop
jo
daa
pop
mov
mov
adc
popf
mov
adc
fbstp
loopne
bound
repnz
fcompl
and
mov
out
fwait
pop
mov
lret
dec
and
lcall
inc
sarb
xchg
sahf
cld
jmp
lcall
dec
sub
je
fdivs
out
jge
imul
pop
std
mov
mov
xchg
mov
test
imul
cmpsl
lcall
mov
jp
out
repnz
push
inc
dec
mov
fmuls
or
cmp
ficompl
push
inc
movsb
int3
cli
sbb
xchg
scas
cmp
xor
sub
daa
sub
cs
xchg
mov
daa
dec
pusha
mov
shrb
imull
push
jnp
pop
lret
pop
mov
outsb
cmp
cmpsb
dec
pushf
cwtl
push
mov
iret
inc
cmpsb
mov
into
int
cmpsl
psrld
pop
sahf
xor
inc
cmpsb
push
cld
dec
push
into
sahf
lret
mov
xor
pop
jp
cmp
aam
xchg
cs
cmp
cmpsb
nop
outsb
sbb
jmp
mov
fdivl
mov
pop
sahf
xchg
xchg
cmp
mov
add
jne
push
dec
add
mov
pop
call
dec
mov
pop
mov
repz
jb
cmc
jne
pop
mov
mov
sahf
xchg
jbe
ss
into
inc
jo
mov
dec
dec
ja
mov
dec
mov
mov
adc
mov
shrl
push
cltd
xchg
jo
fisubrl
rclb
or
pushf
das
pop
outsb
pop
mov
add
push
jnp
xchg
repnz
test
cld
xchg
pop
pop
nop
jno
setg
dec
push
cld
push
mov
cmpl
jl
pop
mov
jo
and
pop
movsb
mov
lret
push
xchg
enter
xchg
stc
inc
into
add
out
push
fdivs
xchg
jo
mov
mov
pop
insb
test
arpl
cmp
dec
stos
fdivs
cmp
fcompl
jle
cmp
lcall
lret
mov
push
xchg
js
mov
xor
jo
push
fbstp
ret
push
pop
test
dec
inc
xor
mov
bnd
test
repnz
sbb
lods
mov
ficomps
js
pop
mov
xchg
add
rolb
add
sbbl
nop
addr16
mov
cli
mov
mov
mov
jg,pn
or
outsl
cmp
xchg
imul
push
mov
mov
ds
xlat
pop
clc
cwtl
mov
loopne
dec
in
lock
inc
arpl
pop
and
xchg
mov
push
nop
cmp
mov
imul
pop
decb
stos
cmp
out
call
inc
pusha
loopne
fldt
mov
jbe
xchg
mov
dec
pop
inc
push
push
mov
fs
dec
sub
jb
std
into
in
push
push
add
jne
sbb
mov
xor
test
mov
sahf
hlt
cmpsb
mov
xor
pop
sbb
fistl
adc
mov
sub
sti
pop
mov
inc
dec
push
push
enter
ds
push
int3
pop
push
xor
xor
cmp
mov
mov
push
dec
jbe
lret
jo
mov
pushw
clc
xor
sub
pop
jns
or
js
cmp
fmulp
adc
aam
nop
add
jno
daa
fimull
jl
test
jbe
out
jb
mov
pop
mov
mov
sarl
insb
mov
icebp
fdivl
push
fcmovbe
pusha
push
rcll
mov
aam
fstpt
test
je
mov
mov
int3
push
out
into
and
movsb
adc
insb
jp
mov
push
movsl
arpl
lock
cmp
mov
jb
dec
xlat
xchg
push
gs
jp
xor
add
das
pop
push
out
mov
mov
push
pop
sub
test
jo
enter
into
mov
test
xor
mov
scas
or
sbb
inc
out
fcmovbe
push
push
push
daa
pop
lcall
mov
push
mov
or
lods
jl
push
dec
imul
adc
inc
and
jnp
aam
pop
test
mov
mov
pop
test
mov
pop
add
and
dec
inc
shrb
fnstcw
imul
daa
cmc
js
test
mov
xor
xchg
push
dec
mov
inc
xor
cwtl
pop
cmpsb
sbb
xor
mov
daa
inc
mov
or
or
lret
mov
mov
call
pop
out
and
fidivs
or
aas
xchg
xorl
add
fstl
mov
mov
pop
jbe
dec
jp
mov
stos
loop
out
leave
in
cmpl
push
imul
pop
jp
xor
loopne
les
lret
pop
add
lret
sub
test
mov
lret
repnz
push
jl
and
jbe
ret
and
stos
push
adc
daa
push
scas
jle
mov
jle
mov
hlt
dec
push
or
dec
sahf
enter
cmp
test
mov
mov
mov
dec
ret
adc
daa
or
xor
mov
or
jl
scas
mov
mov
sbb
mov
ljmp
je
cmpsb
push
pop
jns
enter
data16
pop
jle
hlt
jbe
js
pop
mov
lea
add
movsb
stc
mov
lods
jb
mov
cmc
subl
lods
xorl
dec
push
cmpl
mov
nop
cmpsb
mov
xor
mov
push
imul
xchg
pop
and
add
push
cli
int3
mov
cmp
pop
lcall
ds
cmpsb
pop
mov
dec
push
into
dec
movsb
inc
arpl
sahf
pop
sbb
adc
lcall
pop
test
push
inc
in
scas
in
in
mov
push
xchg
mov
sub
fiaddl
push
pop
jnp
faddl
in
sub
dec
aam
loopne
xchg
fsubrl
push
sarb
mov
mov
shl
lds
js
aam
fsubl
jp
mov
scas
test
add
nop
mov
mov
push
outsb
fisubrl
data16
xchg
mov
sti
dec
enter
stos
dec
outsb
jp
enter
jne
fdivp
mov
jl
mov
and
mov
mov
cmpl
dec
push
push
push
mov
cmp
pop
into
cmpsb
stos
pushf
jo
not
push
orb
lret
or
enter
aas
inc
lcall
pushf
mov
int3
pushf
nop
push
add
lret
mov
pop
mov
scas
dec
scas
insl
push
popf
bound
lret
mov
lods
int3
jno
cmp
in
add
xchg
aad
hlt
cmp
mov
int3
push
jb
jle
ds
shrb
movsb
mov
inc
daa
mov
mov
xchg
push
sahf
cs
dec
jbe
mov
mov
jno
fcoml
aam
into
push
dec
lret
cld
ja
aas
mov
add
insb
pop
mov
rclb
adc
xchg
and
ljmp
sub
xor
adc
push
pop
mov
jno
pop
mov
push
jle
inc
push
in
add
xchg
sub
cmp
push
sahf
dec
jne
inc
daa
mov
scas
pop
push
test
aas
sbb
cmp
js
test
mov
lret
fsin
push
dec
fcoms
dec
das
mov
fs
test
sbb
pop
and
movsb
out
dec
std
pop
sarl
xchg
mov
mov
jp,pn
mov
ja
pushf
jo
jl
mov
or
or
xor
jmp
shrb
inc
fidivrs
mov
adc
cmpsb
dec
addr16
mov
std
pushf
cltd
sti
data16
dec
jne
push
cld
jne
fisttpl
pop
insb
cmp
mov
push
sub
pushaw
mov
into
push
mov
xor
mov
mov
idivl
mov
out
js
mov
dec
mov
mov
shll
cmp
call
push
adc
data16
add
fisttps
xchg
lcall
loopne
and
xchg
je
ss
push
mov
mov
fdivl
sbb
mov
je
outsb
lret
mov
push
out
mov
shl
push
push
fisubs
js
mov
add
pop
cmp
mov
inc
fdivrs
dec
nop
pusha
js
mov
fdivs
pushf
pop
and
pop
repz
aas
adc
pushf
adc
out
lcall
lret
pop
mov
mov
mov
pop
in
inc
cld
pop
nop
call
fidivrs
lods
lret
movsb
pushf
mov
mov
pop
cwtl
dec
jnp
stos
jp
mov
xchg
fiadds
das
aam
mov
lods
mov
fiaddl
fsubrl
fstl
jle
push
lret
lods
mov
loope
movsb
fdivrl
mov
into
adc
je
fidivs
xlat
mov
std
dec
insl
int
xchg
push
sarb
sub
loope
push
adc
pop
push
xor
push
movsb
add
js
mov
shrb
sub
dec
mov
rorb
das
mov
jns
data16
jecxz
xchg
divl
jp
scas
ljmp
js
cwtl
mov
fidivs
popa
push
xorb
lods
mov
lcall
mov
pop
test
dec
mov
mov
fdivl
sti
fs
cmp
cmp
mov
push
mov
ljmp
popf
pop
pop
stos
stos
fs
das
repnz
outsb
push
in
xor
dec
mov
pusha
lods
bound
sub
cmp
lcall
mov
push
sahf
icebp
pop
dec
mov
test
sub
add
cld
xchg
mov
inc
pop
push
imull
xchg
aas
fcomps
test
sbbl
jmp
bound
pushf
sbb
fcmovne
or
lods
movsb
jge
int3
insb
pop
out
inc
sahf
pop
inc
rcr
testl
rorb
cmp
dec
push
sarl
jp
int3
push
lahf
or
out
fsubl
inc
cmp
stos
add
cmp
jp
cmpsb
jle
test
mov
sbb
sbb
test
add
imulb
xchg
push
mov
hlt
pop
int3
ficomps
jo
sbb
add
das
mov
insb
leave
sub
xor
sbbb
insl
out
lahf
pop
sbb
fstps
insb
cli
push
enter
movsb
sub
dec
ficomps
out
inc
sub
jo
sub
push
and
add
sarb
sbb
sub
add
mov
rolb
jnp
mov
lret
pop
sub
pop
cli
mov
sahf
adc
sbbb
sarl
insb
push
pop
pusha
jl
into
xlat
outsb
sbb
ret
inc
cmp
cmpsb
subb
pop
ret
mov
xchg
inc
mov
push
pushf
lods
push
xor
xor
aas
stc
mov
daa
stos
dec
sub
xor
lods
mov
outsb
imul
stos
subb
insb
adc
sbb
xor
movsb
je
fcompl
pop
repz
push
out
cmp
bound
outsl
pop
cltd
mov
lcall
pop
push
iret
stos
mov
fidivl
dec
jb
mov
mov
gs
pop
dec
insb
cmp
out
cmp
dec
pop
dec
pop
int3
add
ficoms
sbb
sti
or
mov
dec
nop
fmull
xor
jo
data16
push
mov
in
pop
sbb
push
or
or
sti
sub
mov
mov
int3
mov
jp
jl
fimull
cwtl
push
fldt
rcrb
lods
mov
dec
mov
push
in
add
mov
daa
mov
push
das
xchg
nop
push
inc
pop
vmread
imul
xor
jb
jnp
nop
lcall
pop
jp
jb
pop
push
enter
movmskps
shl
cwtl
fwait
pop
jo
and
pop
dec
xchg
sahf
jl
pop
mov
aam
mov
hlt
sbb
lcall
inc
punpckhdq
or
pop
cmp
pushf
jb
enter
inc
cmpsb
imul
push
pop
pop
xchg
inc
aam
inc
mov
mov
mov
out
lret
icebp
jle
test
add
sub
pop
jns
and
lods
fidivrl
push
lret
je
pop
add
cmp
cmp
xchg
cmpsb
mov
nop
mov
and
pop
pushf
test
xchg
nop
lahf
mov
repz
cmp
fs
xor
push
dec
sub
push
shll
cmpsb
jb
movsb
test
dec
neg
xchg
jl
mov
push
cwtl
cmc
dec
dec
call
shrl
sbb
shll
mov
shlb
lods
int3
dec
push
push
add
movsb
pop
push
dec
mov
mov
aas
cmp
dec
push
jo
repz
subl
sub
xor
aam
test
fucomi
shlb
xor
push
mov
adc
adc
add
cli
adc
lods
cld
mov
out
fwait
cmp
push
mov
andb
lcall
jbe
push
jns
dec
dec
scas
jns
jl
mov
stc
stc
aas
lcall
mov
frstor
push
lret
mov
js
js
mov
mov
sbb
outsb
add
pop
push
mov
dec
aas
push
xor
pop
xor
shrb
das
ficomps
mov
sub
sub
cli
loop
pushf
jne
pop
adc
push
jb
xchg
lods
into
jmp
cwtl
aam
push
adc
loope
xchg
pop
mov
xor
shlb
mov
sbb
cmp
mov
or
pushf
pop
jp
cld
imul
leave
lods
dec
mov
pop
xchg
pusha
movsb
scas
jnp
das
mov
push
daa
and
movsb
dec
stos
jo
aam
pop
es
lock
cmpsb
sti
push
fcmovbe
cmp
fstp
sub
stos
das
std
mov
stc
clc
mov
inc
fcmove
mov
ss
mov
mov
push
test
data16
jnp
loop
nop
int3
jecxz
xchg
repnz
pop
cld
xchg
cmp
mov
lods
pop
ja
mov
lock
and
jp
dec
adc
pop
cwtl
scas
test
dec
insb
lods
lods
add
lret
fmul
pop
hlt
jbe
mov
and
mov
sub
scas
pop
jmp
cmpsb
daa
mov
inc
xor
xchg
aam
in
fs
in
in
fstpt
fdivrs
dec
mov
outsl
in
mov
imul
push
mov
inc
jne
xchg
pop
repz
cmc
add
scas
inc
lods
fmuls
nop
push
cmp
push
pop
ds
pop
mov
add
jno
decl
sub
arpl
mov
shrb
adc
push
daa
test
int
inc
es
pop
outsb
pop
enter
xchg
pop
jecxz
mov
mov
les
mov
xor
push
movsb
pop
cmpsb
inc
lcall
xchg
sub
rdtsc
stos
mov
mov
push
popw
lret
jle
sbb
jbe
subb
hlt
repnz
mov
push
xor
aam
cmp
mov
mov
pusha
dec
mov
rcrb
inc
loop
push
pop
shll
in
in
add
aad
stos
push
cli
sahf
fimuls
jb
data16
lods
cmp
insb
pop
pushf
mov
pop
mov
je
cmp
sbb
mov
dec
pop
inc
inc
ss
lods
jo
lods
jb
lods
fwait
dec
pop
push
push
fstpt
fsubrl
jbe
dec
push
sbb
or
inc
dec
loop
push
popf
jnp
insb
jl
out
mov
push
fdivl
xchg
faddl
mov
iret
cmp
outsl
jb
mov
lret
mov
std
mov
fs
jo
add
stos
stos
je
loopne
mov
adc
pop
inc
xor
mov
jo
xchg
pusha
sarb
cmp
aam
aas
sbbb
or
loopne
gs
outsl
add
pop
mov
outsb
pop
dec
push
ret
xor
out
and
dec
nop
mov
lret
std
push
loope
pushf
in
fsubl
jl
pusha
dec
rorb
push
dec
dec
pusha
daa
and
sub
mov
mov
sub
cmp
sahf
aam
jl
mov
dec
ret
lock
dec
mov
test
rcr
mov
add
insb
fistl
pop
xchg
daa
dec
push
int3
dec
lea
stos
jbe
imul
mov
mov
pop
push
pop
std
cmpsb
rorb
xchg
repnz
pop
fs
push
mov
jae
jbe
mov
inc
inc
and
aam
push
xchg
sbb
jmp
or
imul
push
jmp
dec
shlb
rorl
jb
aas
xor
stos
jp
jecxz
xchg
arpl
push
sbb
imul
fdivs
in
mov
mov
mov
icebp
lcall
mov
js
mov
leave
cmp
mov
lods
sbb
in
dec
test
push
add
pop
xor
ret
adc
repz
scas
std
cmc
lods
pop
cwtl
pop
push
pusha
jp
out
mov
cmpl
test
daa
mov
mov
jp
push
mov
jo
fwait
jae
xor
mov
sahf
scas
push
test
dec
and
add
ret
and
push
jge
loop
adc
lods
mov
dec
es
clc
pop
mov
adc
shrb
inc
aam
dec
mov
sub
inc
sub
cwtl
pop
ret
aaa
fs
xchg
mov
push
fdivl
out
sarb
fcmovnu
xchg
xor
xor
inc
inc
jle
bound
jbe
xor
pop
mov
fsts
js
movb
je
in
jno
jecxz
daa
or
les
js
jb
jl
mov
lcall
fdivr
lret
xchg
dec
sti
popa
int3
sbb
popl
ret
pushfw
cmpsl
jmp
scas
jno
fidivl
rorl
mov
or
dec
scas
or
push
jp
cld
pop
pushf
sbb
jbe
into
inc
lret
shlb
insl
dec
cwtl
cmp
push
xchg
jo
jns
insb
pop
inc
fisubl
fwait
push
adc
jle
jmp
jbe
inc
stos
mov
cmp
xchg
jnp
push
mov
js
pushf
je
push
sarb
adc
aam
repz
xchg
push
jb
movsl
popa
adc
mov
mov
inc
inc
sub
fsubrs
stc
aad
xchg
aad
std
data16
jbe
cmpsb
pop
cmp
pop
push
movsb
lods
xchg
imul
and
push
aas
daa
dec
push
in
test
js
aam
jp
xchg
fcmovbe
cld
stos
movsb
xchg
push
pop
jne
jp
call
pushf
xchg
and
movsb
daa
push
loope
je
add
fstps
inc
dec
jp
roll
lea
mov
mov
outsb
mov
lods
test
dec
fisubrs
mov
mov
and
pusha
jp
pop
mov
cmp
les
jbe
pop
push
cmp
test
andb
sbb
mov
pop
jecxz
jno
xlat
rcr
xchg
bound
mov
jbe
mov
mov
pop
mov
mov
jg
lahf
mov
dec
icebp
imull
jno
push
movsb
mov
inc
enter
mov
fcmovnbe
repnz
or
lods
jp
sti
xchg
xchg
dec
insb
daa
fsubl
mov
je
insb
pop
jb
add
mov
cmp
dec
daa
test
xlat
out
imul
movsb
outsl
out
cmp
push
daa
mov
pop
stos
das
dec
lcall
outsb
sub
cmp
mov
leave
jp
mov
pop
pushf
add
push
hlt
fs
mov
xchg
sbb
pop
xchg
xchg
lret
ret
push
aam
mov
pushf
aam
pop
xor
jnp
add
mov
cmpsl
mov
insl
outsb
mov
lea
mov
xchg
push
pop
mov
push
mov
ljmp
sbb
out
jl
nop
cmpsb
jne
xor
cmp
jp
js
xchg
mov
into
sar
notb
sbb
lcall
cwtl
cmp
jo
lods
mov
and
aam
je
mov
rol
sub
cmp
lds
pop
jbe
hlt
cmp
mov
into
dec
mov
rcrl
xor
movsb
cmpsl
dec
cmpsb
push
and
scas
stos
data16
bound
es
mov
repz
test
push
pop
clc
jo
mov
stos
mov
xor
mov
int3
xor
mov
insb
insl
jle
jne
shrb
pop
or
negl
dec
daa
in
mov
xor
les
pusha
in
add
daa
add
mov
orb
jbe
push
into
mov
outsb
mov
cmp
push
jecxz
pushf
imul
fsubr
int3
test
adc
and
aam
xor
das
xchg
fcoms
mov
stos
jb
add
pop
jae
mov
imul
mov
sbb
fs
xor
dec
add
pusha
fdivrl
mov
mov
and
pop
in
and
jp
fldt
sarl
push
int
stc
mov
mov
pop
sbb
imul
mov
imul
hlt
push
jp
jp,pn
jb
sbb
pop
sar
fimuls
mov
bound
fcomp
outsb
dec
dec
movsb
jbe
daa
out
dec
aaa
mov
jnp
fsubp
push
pop
add
scas
mov
and
shlb
push
lods
fisubrs
jo
or
cld
js
movsb
je
push
dec
in
inc
repnz
pop
cwtl
jo
loopne
mov
jp
cli
decl
add
xchg
cmpsb
cmp
fisubl
xor
cwtl
scas
mov
jle
jnp
ror
dec
push
mov
xor
cmp
jo
jp
mov
inc
jnp,pt
pop
stc
lahf
ficoml
sti
sbb
adc
fiaddl
test
xchg
mov
in
jo
xchg
add
ljmp
pop
jb
rcl
dec
mov
sarl
pop
mov
je
cmpsl
xchg
jp
xor
scas
lcall
mov
fwait
mov
cmpsb
lcall
fistpl
lods
dec
mov
pop
mov
in
cwtl
push
adc
js
fdivrs
xchg
jnp
mov
fsts
mov
mov
add
add
hlt
jnp
pop
dec
int3
lock
mov
cs
mov
int
fsub
jp
dec
push
push
add
in
leave
pushf
bound
dec
xor
mov
loopne
fimuls
pushf
mov
and
pop
sub
je
cmpsb
push
mov
ja
inc
movl
pop
mov
mov
fwait
into
push
cmp
sbb
mov
hlt
shlb
xchg
lock
aas
dec
aaa
lcall
mov
scas
jmp
fsubl
popa
mov
fs
jnp
dec
pop
ret
mov
adc
cmp
lret
aam
insb
rclb
dec
mov
sbb
pop
mov
js
stos
push
fsubp
inc
jbe
cmc
or
adc
and
lcall
lock
hlt
mov
fsubrl
mov
pushf
je
inc
lret
outsb
pop
push
fcoms
mov
out
adc
add
stos
cs
mov
mov
sub
mov
push
mov
jns
cmp
and
insb
ret
xor
xor
cmp
dec
jbe
stc
push
test
xchg
push
data16
cmpsb
and
add
jno
inc
movsb
fdiv
inc
xor
mov
cs
adc
rclb
mov
jp
aam
into
cmc
fildl
test
movsb
pop
cmp
lods
into
dec
or
hlt
push
push
mov
add
jns
ds
pop
ficoms
push
mov
mov
jb
xor
insb
adc
add
pop
inc
das
int3
inc
lret
dec
ret
mov
bound
pop
nop
cmp
sub
xlat
movsb
repz
ds
xchg
repz
out
mul
ret
das
int3
fmul
mov
jbe
test
xchg
xor
jo
sub
adcl
lcall
add
adc
ficompl
push
or
adc
les
data16
addr16
in
daa
mov
and
sub
sbb
mov
popa
in
xchg
adc
lods
out
adc
jp
jl
mov
aam
insb
fiaddl
mov
pop
lret
sar
xor
loopne
mov
fmuls
in
xchg
xchg
lods
icebp
ds
test
inc
loopne
jbe
mov
jb
sbb
mov
lret
outsb
rcrb
inc
jae
jbe
jb
mov
mov
jp
out
out
push
pop
sub
mov
nop
mov
or
jbe
decl
sbb
cmpsb
ds
ds
adc
lcall
nop
in
sub
pop
dec
nop
mov
xchg
out
push
sub
sub
insb
pop
dec
fdivrl
dec
sbb
fidivl
outsl
int3
pop
push
js
dec
ret
sub
sub
dec
mov
lret
cs
jl
pusha
test
lret
mov
je
sahf
jb
cwtl
lahf
push
ret
inc
scas
pop
add
push
lock
sub
stc
jle
xor
inc
xor
daa
mov
das
or
push
jmp
enter
xchg
bound
sub
lods
dec
outsb
pop
mov
loope
idivl
inc
jl
data16
lret
mov
mov
mov
xor
sub
pop
push
jae
data16
pop
mov
mov
cmp
mov
aam
sbb
movsb
mov
pop
push
movsb
cmp
push
scas
sti
addr16
xchg
sub
mov
dec
xchg
sbb
push
xchg
shll
mov
insb
jo
dec
in
mov
pop
pop
push
mov
test
mov
adc
pusha
data16
mov
pop
sub
add
dec
push
inc
and
pusha
test
mov
aam
xchg
lock
mov
xchg
mov
inc
addr16
lock
repnz
push
xor
sti
outsb
test
loopne
ficompl
inc
push
xorl
jb
mov
test
lods
pop
inc
test
or
xchg
bound
sub
mov
js
scas
pop
rolb
mov
out
lret
mov
aam
outsb
xor
cmp
out
cli
loopne
push
je
clc
inc
xchg
movsb
push
bound
xor
mov
lods
pusha
dec
mov
mov
outsb
ficompl
sbb
push
daa
cmp
sub
lds
xchg
mov
xorl
cmp
fcomp
xor
or
mov
sub
ss
sahf
imul
mov
pop
lcall
pop
faddl
fcompl
fmuls
in
pop
outsb
dec
xlat
ret
jb
das
insb
xchg
push
fdivl
sbb
mov
mov
push
fmull
cmpsb
lods
lcall
lret
dec
sbb
sbb
fldt
call
lahf
jne
movsb
jp
jl
scas
add
aas
das
jnp
fidivl
push
mov
into
mov
insb
jb
lods
xchg
pop
xor
dec
mov
shll
mov
mov
notl
in
outsb
lea
data16
push
lods
cmpsb
jge
add
mov
pop
jb
sub
lret
lret
pop
jle
xchg
pop
sbb
mov
sbb
ficompl
mov
inc
mov
outsb
xchg
ds
mov
cld
addr16
lret
stc
mov
sbb
int
scas
mov
xor
adc
out
aam
in
hlt
loopne
js
in
bound
dec
xor
fbstp
push
aad
test
cwtl
fs
nop
pop
dec
xchg
and
push
push
cmp
shrb
xchg
imul
cltd
jmp
pop
lcall
out
or
xor
mov
jmp
cmp
movsb
jp
mov
push
js
aam
fidivrl
int3
das
cli
jp
pushf
xchg
pop
fisubs
ljmp
and
mov
mov
xchg
cwtl
jbe
aaa
push
mov
mov
sbb
je
jp
in
inc
mov
out
aam
cwtl
mov
mov
add
jnp
mov
mov
inc
sub
div
cmp
stos
fidivrl
jp
gs
cmpl
cmpsl
nop
in
and
pop
ja
xor
push
hlt
push
scas
cwtl
js
push
jge
in
pop
cmp
stos
into
push
call
mov
dec
je
jnp
mov
sahf
add
jbe
lret
xor
movsb
push
cmc
cmp
scas
outsb
jp
inc
mov
mov
dec
lds
stos
mov
inc
xchg
xor
adc
adc
pop
dec
cmp
data16
add
jg
dec
fisubl
sbb
mov
mov
fdivl
pop
sarb
bound
imul
and
mov
adc
stos
hlt
push
pop
dec
lock
daa
mov
out
jo
data16
push
jecxz,pt
lcall
fs
cmp
in
mov
rorb
adc
pusha
mov
fdivrs
enter
mov
std
jmp
push
mov
sbb
js
js
jge
cmp
cs
mov
cli
or
into
fdivrl
or
cmp
push
sahf
mov
pop
inc
jne
nop
jne
lods
pop
icebp
movsb
mov
insb
movsb
pop
dec
xchg
mov
xor
daa
lcall
xor
rcr
dec
movsl
sbb
lods
movsl
mov
repz
fnstsw
sbb
outsl
mov
cmp
faddl
out
fs
dec
into
das
push
outsb
data16
ja
cwtl
mov
fcoml
fwait
mov
add
cmp
push
sub
inc
mov
je
cmp
out
cli
cmpsb
popf
pop
lods
push
dec
push
dec
notl
push
ficoml
sbb
or
stc
cmpb
data16
je
in
and
sbb
fisttps
jnp
js
mov
pop
stos
xchg
insl
fwait
outsb
jo
pop
je
sahf
pop
aas
sarb
scas
data16
sbb
fdivl
mov
pop
sub
es
inc
call
push
pop
jp
push
mov
data16
pop
ds
insl
dec
mov
add
dec
shrb
ret
dec
pminub
mov
jne
jnp
pushf
mov
out
mov
mov
xchg
pop
lods
nop
aas
cmp
xor
fisubs
push
mov
pop
mov
fdivs
cmp
out
cmp
xor
cwtl
mov
dec
add
fcoms
bound
lcall
add
ds
stc
jge
mov
mov
js
jle
into
dec
fsubrs
and
mov
cwtl
daa
cwtl
xchg
mov
aam
adc
cmp
pushf
mov
pop
jbe
ret
out
std
loopne
dec
pop
das
bound
pop
shlb
mov
test
mov
mov
inc
retw
dec
pop
pushf
dec
pusha
sub
mov
mov
mov
cmpsb
ss
int3
sub
xchg
daa
jge
jecxz
fsubs
cmpsl
mov
outsb
jbe
jg
mov
hlt
je
mov
insb
stc
call
imul
nop
or
add
inc
fmul
add
push
lret
pop
xor
pushf
pop
jns
cld
sbb
outsb
test
jnp
pop
addr16
dec
test
icebp
push
dec
rorb
sbb
xor
jmp
push
mov
test
cwtl
lods
lock
lret
cmp
bound
les
fsubl
pusha
fdivl
sub
and
out
fldt
loopne
mov
pushf
lcall
stc
sub
fdiv
dec
shr
push
xor
cmpsb
ret
je
push
mov
into
lret
push
dec
rorb
jno
inc
jmp
pop
test
fimuls
dec
cmovle
pop
fcoms
fimull
pop
fcomps
andb
cmp
mov
mov
mov
iret
sbbb
mov
and
aam
jbe
mov
sub
mov
mov
dec
fildll
mov
push
ret
ret
mov
push
lcall
mov
icebp
js
jb
mov
sti
lcall
adc
sub
xchg
cwtl
stos
add
fidivl
xor
add
fnstsw
loope
xor
fcoml
mov
jo
lods
dec
ror
lret
data16
fsub
rcrb
xor
push
mov
cmp
nop
push
test
fisttpll
and
scas
rorl
lret
pusha
cmp
into
pop
stos
dec
movsb
cmpsb
out
xchg
dec
mov
jbe
fdivrs
fimull
into
movsb
push
test
mov
dec
rolb
nop
mov
fdivl
data16
movsb
bound
int3
test
loope
mov
test
into
ja
mov
in
cmp
jge
fisttps
pop
pop
mov
adc
push
or
out
lret
jecxz
sub
push
inc
pop
les
outsl
cwtl
lret
pop
ss
int
sub
jo
or
jbe
jp
inc
xorb
push
pop
pop
adc
xchg
mov
push
sub
mov
arpl
jbe
inc
int3
repz
dec
mov
jl
pop
out
bound
mov
mov
pop
dec
mov
setb
aad
into
daa
pop
jbe
mov
addr16
pop
pop
add
pop
aam
fcoms
xor
into
fldenv
or
push
icebp
mov
lret
push
and
shrl
cwtl
pusha
and
push
jp
dec
out
inc
jo
popf
js
pop
insb
mov
rcrb
add
mov
cwtl
addr16
cmp
fsubs
mov
data16
mov
push
bound
push
push
subps
movsb
jle
mov
sbb
push
mov
jno
cmp
push
xchg
divl
sahf
cwtl
jbe
dec
and
lret
mov
jo
js
fcom
pop
adc
sub
xor
int3
push
hlt
jae
push
mov
mov
mov
dec
push
mov
out
sub
sbbb
lock
dec
push
rorb
ficoml
loope
aad
lcall
dec
lock
shl
add
not
in
fisubrl
and
sub
cmpsb
sbb
xchg
pop
jmp
push
ds
push
mov
enter
fs
in
mov
rclb
mov
xor
insb
mov
mov
dec
push
xchg
arpl
dec
js
jne
test
inc
xchg
dec
push
scas
xor
jge
push
push
data16
stc
popa
cli
add
jne
xchg
mov
jo
pop
dec
scas
sbb
jns
sbbb
imul
jbe
push
insb
into
dec
fcoms
mov
pop
aaa
jae
mov
popa
ss
xchg
mov
cmc
icebp
int
dec
repz
adc
popa
jge
jae
fdiv
stos
xor
pop
inc
jne
test
push
and
cwtl
inc
ret
int3
fmull
sub
sub
xor
mov
push
mov
lock
fmuls
cwtl
gs
pushf
fs
shll
jge,pn
jecxz
add
adc
mov
mov
xor
sbb
mov
and
lret
add
mov
sub
lods
pop
dec
call
jb
pop
cmpsb
fsubrl
scas
jecxz
dec
push
cmp
push
pop
int3
pusha
out
lcall
mov
lret
push
outsl
or
mov
jg
cmc
sub
jnp
push
sbb
or
sbb
or
cmpsb
fimull
in
shlb
mov
nop
fsubrs
cmp
push
mov
stc
sbb
push
call
xchg
sahf
scas
dec
mov
sub
pop
cld
ja
pop
scas
lret
jmp
mov
xchg
lcall
in
jbe
daa
jp
mov
push
test
mov
push
aas
xor
push
pop
xchg
je
fdivl
int
jns
xor
push
dec
pop
mov
scas
xchg
dec
shl
fistpl
mov
jl
adc
into
divps
add
mov
push
or
arpl
lret
pop
das
adc
ficompl
out
mov
xor
push
rorl
rorb
mov
fdivrl
jp
xor
jbe
scas
mov
mov
add
jnp
nop
ret
out
fadds
dec
lret
jb
sarb
cmpsb
mov
pushf
fidivl
gs
cmp
xchg
or
scas
push
or
lret
sbb
adc
push
mov
es
je
je
hlt
lcall
push
jp
pop
rorb
outsl
mov
test
loope
pushf
add
jo
mov
out
pushf
xor
mov
jns
mov
lock
mov
or
mov
fxch
fwait
nop
mov
mov
stc
sub
pop
fcompl
push
mov
fildl
ficomps
push
pop
test
pop
js
rclb
push
test
pushf
mov
mov
pusha
and
push
mov
dec
dec
test
mov
add
cmpsb
adc
push
xor
sahf
push
les
xchg
enter
pushf
dec
int3
dec
data16
nop
sarb
in
xchg
int3
cmp
stos
dec
fisttps
dec
xchg
or
or
sub
mov
lret
in
adc
jp
fcoml
mov
movsb
mov
je
mov
daa
in
sub
push
rcr
and
leave
push
push
fisubrl
bound
mov
pop
fldt
fsubrl
dec
sbb
or
loopne
stos
pop
setle
pop
cld
mov
or
mov
out
add
lret
inc
lret
movsb
test
sub
mov
inc
sti
dec
xchg
je
jp
jl
insb
mov
mov
add
lcall
xor
cltd
nop
imul
scas
sub
cmp
lods
outsb
pop
pushf
mov
fmull
movsb
mov
dec
cmpb
pop
mov
mov
xchg
xchg
mov
aam
outsb
add
jp
nop
lret
in
sbb
mov
pushf
cmp
out
lret
lcall
fdivl
push
mov
mov
pop
daa
xchg
lods
cmp
pushf
scas
pop
ficoms
fs
cmp
mov
mov
dec
add
sub
subl
push
pop
jbe
fisubs
push
jbe
and
sub
push
mov
bound
repnz
push
je
dec
jae
pushf
in
shrb
sbb
add
jb
pop
inc
aam
pop
jbe
fsubrs
sub
xor
das
test
push
popf
cld
push
lcall
fs
incb
and
adc
or
dec
xchg
pop
test
cmpl
fbstp
inc
cmp
push
out
out
mov
dec
jp
mov
sahf
inc
into
inc
pop
sub
daa
std
inc
fstpt
mov
mov
pushf
mov
fcmovne
out
outsb
pop
dec
push
pop
pop
push
aas
mov
aas
jnp
int3
mov
test
int3
mov
test
aam
lret
inc
aam
push
jb
and
mov
mov
shll
lcall
jmp
fldt
xchg
or
jmp
push
movsb
xchg
rclb
push
js
fsubs
and
nop
fcompl
add
aaa
cmpsb
push
mov
xor
rcrb
pop
mov
add
push
mov
lock
mov
xor
mov
push
imul
ficompl
cmp
rclb
mov
cmp
cmpsb
push
and
jl
pop
sti
imul
xchg
pop
and
fidivrl
repz
fcoms
push
pop
add
mov
sbb
js
movsb
mov
jnp
xchg
mov
mov
outsb
jbe
test
xchg
inc
mov
enter
lret
mov
mov
mov
lock
shlb
shrb
cmp
mov
insb
pushf
lret
or
inc
out
push
fcmovnbe
hlt
pop
lcall
imul
stc
and
or
or
jp
jg
mov
outsb
bound
fsubs
cltd
xchg
mov
mov
or
cmp
dec
dec
jns
pop
movsl
fs
cmp
fsubl
scas
test
rcrb
mov
flds
cwtl
fwait
jp
sti
popa
jb
mov
mov
leave
aas
les
mov
aam
mov
cwtl
dec
into
inc
push
inc
mov
shlb
pop
push
mov
jp
imul
fcompl
ficoml
daa
dec
stos
adcl
mov
push
cmp
cmpsb
dec
pop
mov
mov
ret
out
ficomps
push
stos
pop
or
scas
and
fnstsw
xchg
in
testl
mov
cld
dec
into
sbb
fisubrs
cwtl
stos
decb
sbb
fdivs
mov
lcall
mov
mov
rclb
data16
lods
mov
mov
out
dec
std
cmp
mov
jo
mov
push
lret
scas
outsl
mov
shll
lods
data16
clc
stos
out
sbbb
xor
sub
fmul
mov
inc
jp
js
or
arpl
xchg
dec
fs
sbb
sub
pusha
push
mov
cmp
mov
mov
sub
pop
jo
mov
leave
cmp
dec
cmpsb
xor
pop
cmp
mov
cmpsb
dec
xor
dec
mov
push
cmpl
push
movsb
lods
sti
mov
fsubrl
pushf
inc
lods
out
movsb
pop
sub
or
out
add
movsb
push
xor
sti
add
sahf
mov
fmul
dec
cld
adc
decb
pop
xor
into
dec
jne
jge
sbb
jne
dec
push
mov
inc
cmpsb
and
sbb
je
jmp
dec
mov
enter
push
lcall
dec
mov
add
je
pop
jp
out
and
mov
dec
js
data16
cmp
dec
sarb
cmpsb
xchg
push
das
mov
pushf
mov
mov
adc
lods
sbb
dec
pop
pop
sti
nop
pop
out
mov
repz
sahf
repnz
inc
jl
insb
lock
pop
xchg
adc
adc
cmpsb
int3
mov
dec
dec
push
dec
jp
mov
mov
mov
cs
pop
xchg
in
jo
xchg
add
sbb
mov
fwait
xor
xor
mov
pop
addl
mov
das
lahf
data16
push
cld
fs
push
jecxz
xor
dec
daa
pop
fisubrl
scas
clc
adc
insl
pop
cmp
fbld
xor
stc
fcoml
hlt
mov
stos
mov
mov
or
out
js
cli
je
mov
dec
mov
stos
push
cmpsb
stos
dec
lcall
into
mov
outsb
aas
scas
in
dec
lcall
cmp
mov
movsb
mov
xor
lods
stos
dec
xchg
seto
push
lods
dec
shlb
sti
dec
dec
mov
fadd
stc
add
scas
cmp
push
ficompl
sbb
push
int3
xlat
fiaddl
push
pop
fcoml
ficomps
loopne
test
hlt
addl
lods
pop
scas
jle
lods
leave
mov
cmp
inc
jl
pushf
lret
inc
add
fs
or
iret
lret
incb
push
push
fidivl
xchg
cmp
mov
mov
jp
imul
cmpsl
dec
leave
fisubrs
xchg
mov
mov
js
js
xor
lcall
jg
in
adc
cmp
aam
stos
jo
js
sub
cmpsl
add
cwtl
push
inc
sub
and
mov
nop
lods
stos
add
pop
std
fdivs
loop
jnp
jb
lds
je
mov
mov
sbb
lret
lea
aas
das
xor
lds
addr16
outsl
aas
sarb
pusha
fmuls
mov
or
pop
daa
dec
mov
jbe
inc
mov
sub
dec
fadds
inc
shrb
mov
js
daa
sbb
mov
fsubrl
imull
fs
je
int3
in
mov
cmp
pop
jbe
mov
jp
jl
mov
iret
dec
push
into
out
mov
mov
repz
and
dec
jbe
push
and
and
pop
sbb
pushf
nop
shll
mov
cmp
outsb
mov
mov
mov
push
xchg
js
out
hlt
es
mov
movb
fisttpl
mov
faddl
mov
mov
adc
aam
mov
pop
and
bnd
mov
push
dec
mov
add
mov
out
lods
movsb
jnp
jbe
cmpsb
cmpsb
ret
leave
mov
lods
push
imul
lcall
push
stos
xchg
pop
push
jbe
gs
rcrl
pop
mov
ret
pop
mov
or
adc
cmp
bound
push
dec
stos
dec
or
add
jbe
push
ficoms
loop
jb
jp
mov
mov
ja
mov
popa
std
jns
mov
jle
jne
or
xlat
jmp
xchg
cmpsb
push
jl
pop
movsb
int3
push
fwait
cmp
mov
test
mov
cs
inc
fisttpl
repnz
mov
mov
xchg
outsb
mov
scas
xchg
sub
push
andl
or
push
pop
mov
subl
or
jp
mov
add
inc
pop
loopne
repnz
rcrb
daa
cwtl
mov
cmp
mov
xchg
nop
inc
or
mov
xchg
shlb
lahf
into
std
cs
imul
xor
inc
mov
int3
out
jbe
mov
popf
repnz
lret
pushf
lock
fiaddl
fsubrs
dec
push
jl
fsubl
daa
jb
pop
scas
jl
push
push
xchg
stc
fisttps
bound
mov
mov
jo
jecxz
jbe
sahf
xchg
xchg
xchg
fwait
cwtl
je
dec
data16
sbb
adc
popf
aaa
sahf
movsb
fsubrs
data16
shrb
mov
and
divps
cmp
jbe
sub
cmp
rclb
pop
scas
mov
adc
imul
jp
xchg
out
insb
pop
bound
movsb
xchg
rorb
jb
jno
fdivrl
test
fwait
mov
jbe
add
imul
pop
add
hlt
mov
lret
divps
insb
push
ret
cmp
jo
in
add
pop
movsb
out
xor
sbb
fdivs
and
mov
js
push
push
mov
push
add
push
sbb
in
mov
mov
jo
or
xor
cmp
mov
mov
push
mov
push
fidivrl
xchg
pushf
mov
aam
lods
add
data16
mov
cmp
push
dec
enter
push
jo
jge
sbb
cli
jb
mov
pop
lods
jl
lods
adc
push
imul
sub
jns
jo
pop
pushf
xchg
xor
pop
add
shlb
pop
in
cld
ret
inc
mov
lods
rcrl
fimull
js
dec
js
add
push
xor
push
xor
into
nop
cs
jo
jns
jnp
dec
out
cmpsb
fdivr
fidivs
and
xor
mov
xor
fmuls
ror
movzbl
sahf
ret
aaa
push
scas
int3
mov
ds
rcrb
loopne
stos
and
xchg
jp
pushf
jp
nop
hlt
bound
inc
pop
mov
les
pop
test
cli
xor
sti
iret
pusha
lret
bound
jns
mov
loopne
stos
movsl
rorb
xchg
mov
or
mov
push
pusha
jmp
fmuls
inc
imul
cli
xchg
inc
mov
xor
cwtl
aaa
dec
cmpsb
sahf
pop
fcoml
cmp
pop
jl
xchg
push
sbb
sub
or
nop
push
push
fiadds
inc
add
icebp
cmp
mov
ret
pop
inc
das
dec
lret
mov
lods
fcomp
add
je
pop
scas
aaa
popf
pop
insb
mov
mov
xor
mov
sbb
nop
mov
shll
pop
test
aam
or
loope
xchg
mov
mov
leave
xchg
dec
cld
pop
pushf
dec
jbe
jo
mov
lret
xchg
push
fidivs
mov
push
fs
int3
js
xor
mov
mov
mov
dec
jmp
std
js
das
mov
mov
lahf
jp
push
push
js
movsb
mov
cmp
mov
outsb
out
mov
pop
dec
mov
fcoms
jb
sub
test
pop
inc
pushf
and
arpl
shlb
outsl
xchg
sub
lcall
push
outsb
xor
fidivrs
les
cmp
mov
iret
push
test
jo
scas
lcall
cmpsb
je
je
ds
inc
mov
cs
mov
dec
jecxz
test
pop
scas
add
inc
mov
outsb
dec
inc
lcall
fmul
sub
pop
mov
stos
xorl
add
pop
fs
popa
mov
jl
sahf
popf
mov
ds
lret
cmpsb
subl
jns
loop
lods
xchg
pushf
fdivl
push
lds
in
push
push
sbb
pushf
cwtl
hlt
outsb
mov
daa
mov
sub
sub
dec
stos
xor
call
dec
enter
mov
add
adc
fstpl
xchg
mov
lret
dec
cmp
pop
mov
dec
insb
jge
jae
stc
jp
mov
dec
mov
sub
je
cs
mov
mov
jp
in
push
jl
insb
je
lods
in
push
jb
cmp
dec
aam
mov
add
push
into
jl
push
int
in
lcall
fmuls
cld
movsb
rclb
pop
movsl
or
arpl
jb
cli
adc
push
mov
shl
and
cli
jg
pop
addr16
movsb
cld
mov
xor
sbb
stos
fidivs
xchg
mov
cmp
jp
mov
pop
arpl
enter
test
lods
daa
fidivl
aam
cmpsl
mov
mov
mov
mov
rclb
js
sbb
jnp
mov
outsb
in
push
js
sbb
xor
xor
cmpsb
fwait
fwait
negl
mov
pushf
out
pop
mov
daa
cmp
pushf
icebp
dec
pusha
test
mov
lcall
lods
fs
loop
jbe
push
fsubrs
pop
icebp
outsb
scas
mov
dec
aas
add
mov
mov
ds
mov
pop
mov
pop
add
and
data16
mov
cmp
mov
sahf
sahf
lods
xchg
push
pop
xchg
lea
lret
aam
out
les
mov
cmp
mov
dec
dec
sbb
jae
adc
mov
fisubl
mov
lcall
lret
test
dec
pop
push
jo
fimuls
arpl
rolb
mov
mov
int3
mov
xorl
mov
pushf
andl
adc
mov
es
lret
pop
xor
ret
sbb
push
bound
pop
mov
adc
sub
dec
test
and
pop
pop
daa
push
fdivl
mov
push
pop
pop
mov
add
push
movsl
dec
mov
inc
pushf
gs
sub
jbe
movsb
shr
pop
mov
scas
movsb
and
mov
pusha
ficoms
or
into
pushf
fs
mov
xor
sub
shl
cmp
sarb
and
int
pop
cmp
push
jp
scas
mov
ret
sbb
mov
add
hlt
sahf
lret
lahf
sbb
xor
mov
pusha
fldl
les
cmp
xchg
mov
cs
mov
sbb
fsubl
mov
aam
or
pop
test
dec
out
shrb
sub
xor
pop
dec
xchg
pop
mov
mov
inc
in
add
inc
jge
jp
mov
push
push
mov
lret
test
mov
mov
out
jnp
ror
mov
inc
or
adc
aam
xchg
fnstsw
sbb
fmull
dec
fdivrl
dec
pop
cmpsl
lcall
scas
loopne
shll
je
mov
dec
fcomps
or
imul
imul
pop
punpckhdq
nop
es
jno
lret
lods
rcrb
out
pop
mov
ja
sbb
mov
cmp
outsb
aam
das
jl
add
js
pusha
daa
mov
xor
lretw
ss
add
sbb
fcmovnbe
addr16
xor
lods
mov
jno
mov
lahf
fstpt
adc
xchg
and
xor
arpl
mov
xor
or
lret
xor
pop
mov
mov
adc
pop
stc
stc
ficoml
stc
cmpsl
into
fmul
out
cld
pop
push
ret
pop
js
pop
xchg
fs
mov
pop
jnp
lcall
mov
mov
lods
sbb
dec
mov
ret
lahf
or
cmp
rol
lcall
aas
xchg
movsb
adc
adc
insb
jo
push
inc
or
sub
pushf
adc
cmp
pop
leave
enter
int3
sahf
cmp
push
dec
mov
fisubrs
in
in
mov
dec
mov
stos
sahf
lds
pop
push
pop
sbb
cmp
jmp
cmpsb
cld
outsl
ds
pop
pushl
js
cmp
xchg
push
ja
jecxz
mov
lock
scas
pop
in
add
jnp
movsb
outsb
lcall
cmpsb
pop
mov
mov
xor
push
xchg
lret
xchg
dec
pop
mov
mov
mov
int3
pop
jo
mov
push
shl
fbld
popa
fmul
cli
xor
outsb
push
aam
mov
into
je
daa
fidivrl
mov
xor
xchg
movsl
pushf
push
sbb
cmp
push
negl
icebp
mov
test
repnz
push
je
icebp
add
fistpl
or
sub
mov
nop
mov
rcrb
out
cmp
xchg
xchg
lret
cli
sbb
aaa
lahf
jns
push
pop
test
pop
stos
popa
jp
insb
scas
daa
push
lcall
lahf
mov
fcom
lock
fisubl
cmp
imul
inc
mov
mov
push
nop
jl
insb
push
sbb
sbb
push
stos
jl
bound
mov
jb
ds
aas
aaa
sbb
dec
cmpsb
int3
sbb
dec
sub
das
xor
ss
scas
lods
mov
fidivrs
mov
dec
inc
daa
or
das
outsb
js
push
mov
mov
and
inc
jp
push
jl
dec
bound
loop
push
pushf
data16
arpl
movsb
or
data16
mov
mov
lods
push
mov
rcr
lret
jp
jbe
pop
fidivs
test
xor
data16
jp
xchg
dec
xchg
sbb
test
pop
lods
xchg
in
or
lock
xor
push
ss
lcall
out
dec
dec
and
fdivp
outsb
mov
bound
fnsetpm(287
aam
es
mov
repnz
fs
jl
int3
lret
mov
lods
adc
push
cmp
out
lds
push
xchg
mov
cmp
mov
mov
aam
pop
fstpt
int3
cmpsb
adc
push
test
lret
in
mov
xchg
insb
adc
pop
or
aam
cld
add
pop
insb
aas
add
sub
xchg
cmp
out
dec
rorl
aas
mov
enter
dec
dec
push
mov
inc
add
data16
cmpsl
cmpsb
sbb
fistl
lahf
sub
sahf
mov
sbb
pushf
mov
mov
fisubrl
ja,pn
imul
fs
js
je
stos
mov
inc
stc
cld
mov
aad
push
fsubr
sub
aam
dec
mov
adc
mov
lret
adc
movsb
and
les
mov
mov
mov
inc
scas
fldcw
pop
mov
adc
nop
cmpsb
mov
mov
mov
xchg
mov
shrb
dec
adc
adc
sub
mov
fcompl
jp
lret
ret
cmpsb
jns
loopne
mov
scas
mov
sahf
push
mov
mov
xchg
mov
fs
jl
xchg
test
xor
je
adc
cmpsb
jmp
pushf
xor
push
cld
ret
cmp
mov
push
lret
jbe
js
in
add
sub
cmp
pop
ficompl
lds
insb
pop
mov
je
fs
mov
mov
nop
cltd
fcomps
mov
cmpsb
pop
dec
test
dec
dec
nop
pop
out
mov
rclb
pop
xchg
xchg
int3
das
lods
mov
sahf
sahf
jp
lret
fimull
and
cmpl
jbe
mov
inc
int
nop
dec
mov
mov
pusha
push
sub
int3
pop
das
pushf
out
test
cmp
scas
mov
mov
fisubrs
jecxz
fsubr
and
mov
fcompl
ficomps
mov
stc
mov
outsl
mov
stos
mov
bswap
pop
ss
mov
mov
repnz
xchg
jns
lcall
movsb
fiaddl
pop
fdivrl
cmp
ja
xor
jl
mov
jmp
out
pusha
test
jbe
stc
adc
sub
int3
dec
pop
ficomps
test
mov
jo
mov
cmp
lods
fdivs
inc
mov
jp
sbb
popa
out
andl
xchg
insb
xchg
nop
lods
mov
mov
gs
dec
ss
push
cli
adc
mov
mov
lret
jo
out
sti
pop
bound
xor
outsb
add
cmp
inc
stc
jno
cmp
push
in
bound
pop
fiadds
shlb
pusha
insb
decb
bound
ret
aas
mov
add
mov
mov
pop
jl
mov
fcoms
lcall
sar
dec
xor
jecxz
pop
add
aam
je
mov
mov
addr16
cli
hlt
cmp
fimull
jne
pushf
stc
jne
cli
popf
jae
lret
cltd
add
xor
xchg
js
inc
adc
js
shrl
cmpb
inc
call
cmpsl
xchg
jecxz
in
cmp
lret
mov
jbe
mov
xchg
pop
mov
sub
stos
xchg
or
push
pop
pop
and
aad
add
push
out
push
inc
fcomps
sahf
jne
mov
scas
xor
xchg
mov
cmp
sahf
xchg
aam
pop
loop
pushf
xchg
cmp
mov
cld
lahf
jbe
fidivs
sbb
lods
pop
outsb
pop
pop
xchg
insb
fidivrs
fisubrl
and
popf
jb
pushl
sub
lcall
cmp
fisubrs
hlt
mov
lret
leave
fidivs
jl
pop
scas
test
mov
addr16
fistl
cwtl
mov
fdiv
push
mov
mov
je
jbe
arpl
cmp
pop
xchg
data16
loope
xchg
je
add
lcall
out
dec
cmp
jno
mov
jl
mov
lret
loopne
inc
sbb
das
test
mov
out
jnp
dec
push
ror
js
je
push
ss
movsb
push
mov
add
push
mov
aam
cltd
xchg
add
xchg
in
hlt
pusha
xchg
add
cmp
jb
sar
dec
in
xchg
inc
daa
mov
inc
sarb
fmul
aam
mov
push
jp
fiaddl
push
daa
pushf
jp
mov
pop
mov
je
dec
cli
aad
xchg
push
sti
mov
pop
lret
pushf
loopne
pop
pop
sbb
jle
pop
leave
cmp
into
jp
sarb
mov
pop
mov
jmp
push
out
jmp
mov
mov
movsb
fadds
mov
xchg
popa
fidivrl
mov
pop
inc
pop
cmp
add
in
jnp
mov
and
xchg
lods
cs
mov
je
iret
adc
frstor
jle
aaa
ja
mov
xor
xchg
jl
mov
mov
cmp
scas
jp
dec
stos
push
pop
lahf
push
dec
pop
mov
jl
fsubl
sahf
cmpsl
jmp
std
xchg
gs
xor
jno
dec
loop
je
adc
shl
jae
roll
sbb
lret
mov
hlt
bound
sub
pop
cmp
mov
sahf
mov
mov
aas
xchg
iret
in
sub
cmp
test
cmpsl
fisttps
in
jbe
movsb
adc
xchg
pop
cmp
into
mov
push
xchg
lret
lret
and
cmp
push
jo
mov
dec
or
sub
in
divl
xchg
bound
addr16
jp
push
int3
pop
cmpsb
pushf
fsubl
jnp
cmpsl
fmuls
sbb
mov
or
and
mov
mov
pop
mov
and
into
adc
lret
inc
lret
fldt
pop
pop
fcmovbe
fdivrl
jp
in
loopne
dec
adc
or
lods
mov
fiadds
bound
sbb
inc
rcr
push
ds
pop
dec
mov
jo
jp
fcomps
lods
jg
xchg
lret
cmp
push
mov
cmp
pop
stos
mov
mov
das
lds
inc
test
push
xor
jb
mov
mov
cwtl
cmp
lcall
arpl
lret
cmp
mov
push
mov
dec
mov
lods
jl
fstpt
mov
fadd
mov
aam
pusha
sbb
movsb
mov
pop
pop
push
scas
scas
js
loopne
lret
stos
pop
ret
push
pusha
mov
insl
push
pushf
mov
cmp
aam
jp
sbb
sub
dec
pop
mov
and
xchg
int
call
mov
mov
aad
dec
lcall
mov
cmp
int3
into
push
imull
jbe
pop
pop
ror
sbb
mov
jp
fldenv
sub
out
xor
jbe
inc
sbb
pop
mov
lds
pop
xchg
jnp
outsb
into
int
inc
fimuls
sbb
push
mov
xchg
sbb
push
sbb
push
xor
push
notb
test
es
mov
int
das
pop
xchg
jb
sarb
fisttpll
bound
pop
les
mov
fsubs
inc
sbb
pop
cmp
push
pop
ds
sbb
out
sarb
scas
mov
cwtl
arpl
mov
push
btc
sbb
js
push
mov
loopne
lcall
mul
dec
push
mov
dec
fcomp
add
shrb
xchg
pushf
mov
loopne
jo
in
sarb
push
mov
mov
jp
fldenv
mov
jp
cli
lock
mov
jbe
push
push
sub
fldlg2
pushf
fsubs
mov
mov
mov
xor
fs
pop
pop
or
push
nop
cmp
pushf
mov
xchg
add
mov
sub
sub
sub
insb
outsb
nop
pop
jmp
mov
mov
or
loope
xor
out
and
jb
sahf
mov
out
mov
sti
insl
dec
fisttpl
movsl
push
lret
jae
jp
scas
mov
mov
cmp
mov
inc
outsb
fdiv
pop
dec
fcmove
mov
in
mov
ret
push
mov
mov
mov
pop
stc
jp
pop
jp
imul
lret
xchg
or
or
jae
fistpl
push
stos
jp
inc
xor
lcall
lret
in
xor
pop
dec
mov
jg
mov
push
pop
loopne
aam
cmpsb
ret
imul
movsb
in
addr16
or
pusha
cwtl
cmp
pushf
jbe
dec
jp
mov
nop
sub
push
pop
mov
or
outsl
lcall
lods
cld
push
pusha
test
aad
fmull
fs
sbbl
pushf
popa
pop
adc
shlb
jb
adcl
fnsave
mov
or
xor
pop
fnstsw
scas
js
faddl
push
mov
xchg
jge
sub
jp
out
inc
sub
mov
add
dec
push
inc
push
lods
das
pop
xchg
movsb
je
frstor
pushf
mov
loope
push
insb
and
mov
inc
push
pop
pop
cmpsb
pusha
das
shll
scas
jnp
dec
mov
negl
push
lock
jae
push
mov
andl
sub
dec
pop
jnp
cmpsb
dec
mov
mov
ss
fldt
cmp
dec
push
mov
jb
cmp
rcr
push
cli
mov
mov
add
mov
pop
add
sbb
adc
ficoml
mov
pop
into
push
cli
xchg
fiadds
leave
xor
lods
mov
pop
inc
mov
outsb
dec
mov
mov
pop
sub
mov
mov
scas
mov
fcomps
jp
dec
addr16
test
sub
pop
inc
xor
imul
jo
pop
mov
arpl
ficomps
cmp
push
cmp
scas
mov
pop
push
mov
push
int3
out
mov
or
push
rclb
decl
mov
aas
repnz
push
aam
mov
lods
lods
int3
xchg
dec
push
xchg
arpl
out
es
sbbl
jnp
rorb
je
aam
les
jb
add
inc
sub
mov
and
push
mov
xchg
icebp
scas
xor
cs
pushf
push
aad
enter
or
outsb
push
mov
push
fsubs
andl
pusha
sarl
or
testl
jl
fcmove
outsl
jbe
jg
movsl
add
xor
mov
ja
mov
cwtl
fstpt
pop
pop
cs
cwtl
push
into
ror
imul
cmpsb
data16
jle
sti
push
add
mov
movsb
xchg
hlt
sahf
push
int3
dec
dec
inc
data16
ja
fcomi
cli
inc
mov
movsb
push
add
fwait
pop
mov
dec
or
pop
fistps
js
fildll
cmpsl
dec
fs
mov
inc
mov
and
push
lret
repz
mov
dec
nop
sbb
call
insb
mov
pop
lods
cmp
mov
xchg
pop
outsb
fsubl
pop
pop
pop
and
fs
xchg
arpl
mov
shl
icebp
mov
jbe
push
mov
mov
lods
pop
les
add
aam
add
dec
inc
ljmp
jnp
mov
jo
add
rcr
je
pusha
fidivs
aam
ss
adc
enter
lret
jl
mov
mov
shlb
add
xlat
push
loopne
jbe
adc
add
ficompl
xchg
dec
mov
xor
lret
sub
push
cmp
pop
sti
adc
jbe
fcoms
dec
and
xchg
mov
mov
inc
mov
pop
mov
mov
push
lods
add
jmp
mov
shrl
fmuls
cmp
mov
xchg
jl
pusha
mov
xor
mov
push
jo
lock
loop
jnp
pop
mov
in
out
push
sub
and
xchg
fwait
pop
mov
insb
jo
scas
in
fwait
xchg
xor
imul
mov
cltd
loopne
xchg
cwtl
add
into
movsb
push
mov
movsb
decb
mov
mov
repz
add
outsb
leave
aam
sbb
sbb
pop
xor
xchg
pop
mov
lock
daa
sahf
jp
lret
daa
fdivs
mov
cs
mov
mov
shlb
dec
ficomps
mov
lcall
xchg
test
inc
aaa
outsb
push
nop
dec
sahf
mov
rorb
cwtl
cmp
pop
mov
lret
in
mov
test
scas
decb
data16
imul
and
pusha
sbb
pop
xchg
xchg
adc
xchg
pushf
push
fisubrl
popf
jns
lret
call
fimuls
mov
cmp
dec
outsb
push
and
push
dec
movsb
cmpsl
js
push
in
js
into
mov
out
mov
stos
loop
cmp
mov
mov
aaa
movsb
mov
insb
ret
sub
daa
xor
ret
pop
shlb
fildl
std
dec
inc
lcall
ror
fcoms
in
push
jo
adc
inc
adc
dec
jp
pop
mov
rcr
jo
jl
mov
stos
test
or
pop
jb
jno
into
gs
sub
xchg
outsl
scas
popa
cmpsl
cmp
nop
into
mov
dec
cmp
out
fmuls
lods
jae
pop
pop
test
daa
pusha
movsb
insb
das
test
test
fdiv
jbe
lret
jnp
ficoml
les
mov
push
lret
fisubrl
pushf
mov
sahf
dec
inc
or
sbb
dec
pop
repnz
loopne
lahf
xor
nop
fnstcw
lds
lods
dec
in
aad
sahf
push
cmp
hlt
mov
jo
into
push
cs
jb
cs
jae
xor
cmp
cmpsb
out
test
addl
dec
pop
mov
and
dec
cmp
test
and
sub
xor
arpl
and
aas
call
test
mov
in
mov
mov
test
xchg
push
jne
mov
pushf
push
xor
dec
pusha
fiadds
int3
pop
frstor
data16
sub
int3
jb
jl
xor
mov
lods
test
stc
scas
push
je
lret
cs
jne
loope
bound
int
out
dec
scas
jp
faddl
xchg
ds
and
pop
adc
mov
test
jns
mov
sahf
push
je
mov
xchg
mov
sti
sbb
dec
xchg
mov
xchg
mov
xor
sbb
pop
mov
call
rcll
bound
pop
fisubrl
mov
pminub
and
sbb
int3
fs
bound
and
jp
pop
fcompp
xor
jl
adc
jo
int
cmp
mov
cs
dec
inc
les
pop
xchg
mov
mov
mov
xchg
sahf
pop
pop
push
aad
je
push
xchg
push
mov
in
pop
stos
pshufw
jb
into
mov
sti
add
push
fstpt
or
push
fiadds
cmpsl
pop
bound
dec
mov
pop
xchg
or
pusha
out
xchg
add
mov
js
jle
jns
sub
pop
aam
sub
movsb
lret
adc
data16
movsb
push
jb
cmp
add
mov
cmp
sahf
rcl
pop
mov
aaa
arpl
pop
mov
mov
xor
jo
mov
stc
sbbb
outsb
imul
aam
mov
cmp
mov
lea
or
dec
mov
insb
test
lods
xchg
in
push
dec
shlb
test
scas
cmc
xor
mov
xor
or
fistl
fdivs
test
mov
jnp
pusha
pop
fidivrs
push
pop
push
lret
imul
icebp
lock
adc
lahf
xchg
fcoml
data16
jne
not
pushf
sahf
test
dec
out
cwtl
sbb
cmp
pusha
fdivrl
stos
js
js
mov
nop
ret
lock
cwtl
out
sbb
lock
ss
fisubs
mov
cwtl
js
mov
out
rol
cmp
shlb
xchg
mov
xchg
loopne
push
daa
or
iret
das
push
jb
jp
cmp
divl
jo
mov
cmp
pop
jle
add
add
mov
je
mov
imul
adc
add
mov
sarb
fdivl
stos
pop
cwtl
aaa
adc
xchg
mov
mov
pop
fmuls
or
or
repnz
push
add
jp
jl
fs
pop
sti
scas
lcall
jns
cld
pop
mov
dec
fmull
test
adc
int3
fisubrs
jl
dec
adc
sbb
nop
cwtl
adc
push
add
fwait
test
push
jp
popf
mov
and
mov
fwait
jnp
aam
out
mov
dec
jle
rcll
movsb
add
lock
fidivs
xor
xchg
pop
mov
sub
sahf
push
xor
and
sub
movsb
cmp
stos
popa
dec
lret
loop
mov
test
pop
cmp
jbe
lods
mov
js
js
sahf
push
rcl
xchg
loop
bound
sarb
dec
mov
insb
pop
cwtl
and
nop
testl
cmpsb
outsl
nop
dec
cli
loop
mov
cwtl
mov
mov
add
fimull
xor
jbe
aad
xchg
mov
adc
pop
ret
lret
mov
rorb
dec
inc
lods
inc
add
test
enter
xchg
test
mov
mov
jne
in
pop
aam
sahf
jl
lret
stos
imul
cmpsb
ret
push
jb
movsb
pop
add
into
xchg
shlb
pop
mov
jo
xor
xchg
cwtl
cs
xchg
sarl
mov
cmpsb
push
fs
mov
mov
xchg
dec
mov
out
mov
or
sahf
out
in
jo
cwtl
rclb
adc
bound
movsb
pushf
mov
pop
movsl
adc
cmp
mov
js
movsb
push
mov
push
xor
pop
punpckhbw
mov
sbb
sub
fmull
jmp
fdivrs
ja
jb
xor
sbb
adc
xor
sahf
jmp
pop
xlat
and
push
mov
mov
data16
mov
jbe
pop
mov
jl
aam
pushf
pop
int3
pop
push
jp
sbb
sbb
faddl
sahf
xchg
inc
into
cmpsb
mov
cmp
insb
pop
movsb
dec
in
mov
jle
testb
sub
je
mov
aaa
push
xchg
out
mov
mov
dec
push
in
add
adc
and
mov
repz
cmpsb
xchg
jns
mov
add
pop
mov
incl
rclb
mov
push
dec
iret
sbb
js
cli
cltd
inc
ljmp
cmpsb
sbb
int3
jbe
stos
movsl
pop
mov
into
out
fsub
lcall
xchg
mov
inc
mov
mov
popf
lret
lods
in
xchg
mov
into
outsb
fs
sahf
int3
pop
bound
mov
stos
in
pop
cli
xor
mov
pop
pop
push
and
xchg
push
enter
jecxz
or
fistpll
push
cmp
dec
shll
sti
jbe
cmpsb
ret
adc
fsubrs
dec
sbb
stos
into
cmp
nop
mov
lcall
pop
scas
pushf
xor
pop
pop
daa
or
insl
push
xchg
and
lcall
pop
addr16
das
xchg
rcrb
lret
in
gs
mov
jb
mov
pop
jbe
or
or
rcrb
pushl
push
jp
cmp
lret
mov
xor
stos
mov
out
xor
aam
mov
xchg
mov
popf
sarl
mov
pop
mov
ret
mov
leave
inc
sti
ret
test
mov
xchg
pop
loop
shr
add
jbe
sub
dec
mov
loopne
rsqrtps
data16
daa
scas
adc
jne
call
pop
fidivrs
insb
xchg
or
jo
fidivl
test
sub
leave
je
fldcw
mov
bound
stos
nop
push
nop
jo
pop
aas
cmp
jo
adc
mov
test
hlt
aam
les
pushf
daa
lea
mov
push
bound
fwait
cld
mov
addr16
mov
xchg
mov
mov
inc
jae
jp
dec
pop
outsl
lods
xor
cmp
data16
xchg
enter
cld
pop
fisubrl
adc
and
mov
ja
seto
xor
data16
ficompl
mov
je
divl
mov
xchg
jbe
or
sti
inc
mov
mov
inc
push
fiadds
nop
test
pushf
negb
dec
aaa
shlb
mov
fdivr
fistps
mov
stos
jp
jp
mov
in
js
and
xchg
mov
mov
jg
cmp
pop
push
loopne
pop
aam
dec
int3
aaa
shlb
sbb
sahf
sub
push
fsubrl
pop
movsl
test
xchg
mov
out
sbb
je
push
dec
adc
dec
pushf
push
loop
mov
and
cmpsb
jecxz
push
xor
pusha
daa
int
sub
dec
pop
lret
sub
ret
scas
push
ja
cld
fidivs
pop
jnp
push
mov
xchg
and
mov
cmp
mov
adc
and
bound
push
test
mov
cwtl
movsb
push
pusha
push
ror
push
fistl
lcall
fwait
mov
mov
fisubrl
pop
sub
mov
push
lock
jmp
jbe
bound
jnp
outsb
push
repz
push
sahf
jl
pushf
push
test
mov
fdivrs
pop
fdivrl
adc
seto
scas
js
mov
in
xor
fimuls
lods
or
out
pop
jo
or
push
mov
insb
jb
mov
dec
sub
mov
xor
mov
mov
nop
inc
je
jge
push
sahf
cmp
pop
insb
jbe
ja
ds
mov
jnp
mov
xor
in
mov
sbb
inc
stc
fiadds
mov
inc
dec
pop
lret
imul
jb
and
jne
test
mov
dec
mov
sub
in
enter
jp
in
adc
jb
mov
jp
cld
mov
insl
fsubl
mov
enter
bound
and
cmovs
push
jb
sahf
cmp
data16
cwtl
add
nop
into
das
dec
aam
dec
push
xchg
pop
cmp
push
pushf
sbb
shrb
aad
mov
pushf
in
das
jo
pop
cwtl
test
push
xor
lcall
dec
rclb
mov
fimuls
xor
push
je
sarb
add
xor
dec
js
cmp
nop
xchg
push
dec
je
mov
fucomip
rorb
fdiv
and
push
mov
movsb
xchg
ja
adc
lock
loopne
repnz
sub
mov
sbb
push
push
and
enter
test
dec
jno
ficoms
js
pop
fsub
pop
mov
in
xchg
xor
dec
fisubrl
pop
nop
popf
aam
add
sahf
sbb
dec
inc
dec
add
mov
xor
jnp
shl
mov
pop
cwtl
jmp
push
gs
lods
stos
pop
push
out
pushf
js
xor
push
insl
inc
fidivs
nop
inc
sbb
dec
add
js
inc
cmp
mov
mov
repnz
pushf
in
insb
int
and
int
ret
adc
hlt
out
cmp
lods
xchg
rcrb
movsb
sbb
vrsqrtps
ds
adc
ret
cmp
insb
jl
mov
movsl
movsb
cmp
mov
je
add
inc
dec
or
xorb
inc
jl
pusha
dec
cmp
ja
js
push
mov
rcr
mov
pop
lea
aam
or
sahf
je
add
mov
das
jns
push
fsubrs
sbb
cmp
pop
mov
lods
nop
sub
mov
mov
movsb
bound
std
es
jge
jmp
push
sbb
mov
ss
adc
cmpsb
popw
jb
or
aaa
cmp
movsb
rclb
jge
mov
mov
xchg
inc
out
pop
xchg
or
nop
and
push
outsl
mov
stos
aam
mov
inc
lcall
fiaddl
insb
int
lods
pop
xchg
shll
sahf
jp
gs
add
das
movsl
shrb
hlt
fdiv
cld
ret
hlt
fcoml
dec
adc
jnp
aas
bswap
pop
pop
jg
inc
jb
cmp
jb
test
pop
movsb
sbb
aam
mov
mov
pop
mov
push
js
fistl
fisubs
and
mov
arpl
je
lret
push
sub
ficompl
nop
pop
int3
dec
pop
cmc
pop
in
jp
push
mov
fcompl
dec
jle
lret
add
mov
dec
fsubr
aam
out
test
test
shr
js
push
rcrl
mov
out
sbb
movsb
insb
lcall
dec
lods
movsb
test
dec
xchg
pop
mov
inc
mov
mov
cwtl
mov
lods
mov
dec
mov
mov
mov
mov
mov
jp
daa
or
push
shl
xchg
jle
outsb
daa
mov
dec
ret
rclb
sub
sub
sbb
nop
xchg
cs
cmpsb
mov
sti
sub
pop
sbb
push
sbb
and
shrl
jo
cmp
push
lcall
jb
inc
adc
sub
inc
add
push
jne
mov
xlat
lods
adc
loop
ja
pop
scas
ja
cmp
test
je
dec
mov
ficomps
bound
inc
add
dec
in
aas
cmovle
sub
cmpl
dec
sahf
jo
mov
leave
mov
add
hlt
movsb
sub
mov
aam
fdivrs
cmp
jp
sti
outsl
stos
pop
adc
mov
mov
mov
repnz
sub
sahf
xchg
int3
adcl
mov
sti
rcrb
jbe
lret
jo
shlb
aad
bound
stc
and
int3
xor
je
xor
gs
repnz
cmp
push
shlb
ljmp
mov
inc
dec
mov
add
fs
mov
dec
jp
push
je
sahf
into
bound
lea
iret
pop
insb
pop
or
cmp
scas
jo
jmp
cmp
rcl
push
sbb
xchg
outsb
ds
iret
pop
pop
jnp
into
test
repz
pusha
push
mov
cmp
mov
inc
lret
and
test
add
inc
and
mov
inc
xor
call
push
lret
repnz
leave
mov
lock
add
push
pop
inc
frstor
sar
push
xchg
mov
daa
test
dec
sub
dec
cmpsb
xorl
pushl
pushf
jle
and
fcoms
out
movsb
mov
and
outsl
cmp
jge
cmpsl
dec
mov
sub
xchg
fidivl
push
mov
jmp
sahf
dec
mov
int3
mov
or
ficoml
outsl
push
or
out
out
fmul
dec
js
outsb
jne
mov
fisubl
scas
sbb
jns
lret
stc
gs
and
mov
jmp
push
xlat
add
push
and
test
sbb
mov
nop
mov
adc
stos
dec
cld
mov
fistl
add
mov
xor
sub
xor
dec
aas
xchg
xor
ss
lret
into
mov
mov
repz
adc
in
mov
shlb
sub
stos
popf
shll
xchg
es
insb
sub
out
mov
jbe
xor
scas
test
lret
scas
xchg
mov
add
xchg
push
and
cmp
dec
cmp
xchg
movsb
fmull
sbb
mov
out
push
xchg
dec
out
jp
dec
jle
lret
jmp
push
js
bound
into
shlb
call
lahf
out
rolb
cmpl
jbe
mov
and
nop
lret
and
repnz
sbb
jo
lods
cmpsb
loopne
adc
movsb
ljmp
push
fwait
mov
stos
lock
mov
fistpl
jmp
fists
fdivrp
scas
jno
in
test
jnp
mov
pop
fldt
mov
int3
cmp
dec
out
adc
sti
sbb
mov
andb
pop
add
jno
mov
push
pusha
movsb
xor
fldt
add
mov
dec
shrl
mov
cmp
test
out
add
sub
ds
pop
aas
jo
jbe
xchg
push
pushf
or
and
mov
xchg
inc
addr16
nop
testb
sarl
aam
ja
test
pop
fadd
xor
nop
sbb
lock
roll
movsl
lcall
lret
fwait
shrl
stc
test
sbb
fdivl
sbb
pop
pop
je
lcall
ret
test
dec
inc
cmpsb
sti
jmp
sti
xchg
fildl
adc
pusha
jbe
mov
mov
test
push
rclb
sahf
pop
lret
add
dec
shl
mov
sahf
pushf
gs
incl
mov
pop
dec
aam
mov
mov
lret
js
add
nop
jb
repz
rcrl
mov
insb
dec
jl
cwtl
js
pusha
bound
and
insb
outsb
test
je
mov
sub
or
inc
inc
fcmove
mov
mov
sahf
dec
mov
ret
adc
mov
dec
inc
sbb
into
push
jmp
pusha
cbtw
lret
fmul
fadd
mov
jne
mov
fs
dec
xor
cs
in
cmp
inc
mov
pushf
int
mov
das
fdivs
mov
es
je
jp
pop
cmp
pop
lret
and
mov
xor
fdivrs
ret
mov
jbe
lods
add
bound
mov
mov
pop
push
fidivl
pusha
xor
pushfw
mov
sub
sti
std
js
mov
dec
movsb
insl
mov
sub
mov
mov
rclb
mov
int3
sbb
pop
mov
cwtl
lods
lcall
pop
dec
into
pop
mov
pop
dec
or
mov
pusha
movsb
test
rcrb
lret
inc
mov
mov
rcr
pop
and
dec
and
mov
jbe
xor
mov
vmread
add
jae
out
dec
jo
fdivrs
push
jp
push
add
pushf
sub
cs
mov
inc
mov
js
jo
jp
ficoms
pop
mov
mov
pusha
push
jp
fsubs
push
lret
and
je
sub
movsb
pop
data16
pusha
sbb
lods
and
pop
gs
and
mov
mov
leave
ret
pop
mov
sbb
mov
mov
cmp
fs
inc
mov
lods
dec
lock
adc
mov
mov
fdivr
sbb
cmpsb
xlat
lcall
dec
mov
mov
and
push
sbb
mov
jo
add
out
mov
lahf
sti
xchg
fisubl
mov
pop
push
dec
push
jl
sahf
pushf
movsb
pop
xchg
or
stos
aaa
scas
xchg
lret
sahf
repnz
mov
mov
int3
aam
mov
movsb
pop
ficompl
fisubrl
sub
xor
movsl
das
xchg
pop
mov
cmp
push
lcall
mov
lret
stos
jp
test
movsb
shlw
push
fsubs
cwtl
fistpl
or
xchg
add
cmp
xchg
push
jo
mov
negb
js
outsl
aam
mov
test
push
xchg
pop
mov
rcr
movsl
cld
fs
pop
mov
rol
je
pop
fimull
sahf
sub
cltd
dec
in
repnz
inc
ficoml
ja
mov
lods
leave
mov
xorl
and
outsb
jp
jo
mov
fldt
fmull
push
enter
dec
dec
push
mov
jb
or
or
dec
xchg
mov
xchg
pushf
fidivrl
mov
xor
mov
sbb
das
lods
mov
loope
movsl
xchg
inc
jns
rorb
popf
lcall
pop
outsb
sub
xchg
pop
jp
fidivs
imul
scas
out
cwtl
fadds
outsb
out
icebp
add
icebp
mov
xchg
adc
jp
aam
push
bnd
inc
and
pusha
outsb
shl
mov
mov
mov
addr16
mov
cmp
js
repz
mov
add
mov
inc
dec
mov
fbld
dec
pop
and
inc
cmp
cmp
faddl
ret
test
push
scas
sarb
clc
mov
mov
xchg
lods
pop
dec
je
mov
cmpb
dec
mov
cmp
fcomp
mov
mov
pop
cmp
mov
push
fwait
jecxz
lods
xor
pop
outsb
fbstp
scas
cwtl
lods
scas
sub
lock
add
fisubs
pop
ljmp
daa
stc
push
mov
into
rcrb
outsb
dec
mov
push
aam
icebp
or
jge
push
cmp
mov
mov
pop
pusha
push
test
fisubrl
xchg
outsb
push
scas
adc
pop
pop
inc
mov
push
push
into
xor
sahf
fwait
pop
outsb
mov
test
pop
pop
shl
mov
ss
fstpt
push
mov
push
pop
inc
outsl
es
inc
cltd
pushf
arpl
fstpt
pop
fmull
jno
jnp
pusha
test
je
int3
mov
arpl
sub
je
sub
scas
adc
adc
push
sbb
pop
jne
pushl
out
push
xor
pusha
push
imul
sub
hlt
dec
mov
jo
mov
xchg
jl
jb
clc
mov
add
cmp
dec
xchg
mov
jo
ljmp
dec
jnp
insb
mov
sahf
mov
es
jbe
push
pusha
cwtl
mov
push
pop
imul
and
push
pop
nop
ficomps
fcomps
pushf
mov
pop
dec
pusha
pop
xchg
cmpsb
push
mov
mov
mov
std
mov
shl
into
xor
or
cmp
xor
data16
adc
and
jbe
cmp
mov
popf
pop
data16
fmul
push
sbb
std
mov
dec
repnz
mov
add
jo
mov
sub
xchg
fs
push
cmp
stos
test
aaa
mov
push
lcall
js
sub
lods
ror
lods
pop
ficoms
sbb
aaa
sahf
cmpsb
pop
xchg
mov
es
gs
add
jbe
mov
pop
cmp
push
mov
dec
test
xchg
mov
jb
cld
mov
pop
enter
cmp
xchg
adc
jo
mov
daa
insl
lods
fwait
xchg
out
test
mov
into
sbb
mov
fs
rol
enter
inc
mov
hlt
jb
hlt
mov
test
repz
pop
fiaddl
rcll
pushf
cmp
mov
jecxz
imul
mov
cmc
mov
mov
dec
dec
push
in
lcall
push
sub
pop
jb
mov
mov
pop
shrb
mov
cltd
mov
pop
push
inc
xchg
ja
shrb
test
shlb
sbbl
outsb
xchg
insb
mov
popf
push
mov
add
mov
xchg
mov
and
mov
ret
shlb
sub
stos
out
lcall
sub
dec
push
xlat
pop
outsb
mov
pcmpgtd
adc
add
cmp
push
int
inc
push
inc
jg
pop
pop
mov
dec
pop
cmp
pushf
stos
pop
leave
pop
add
mov
jp
xor
or
stos
push
mov
sbb
pushf
and
push
push
mov
cli
xor
mov
aam
and
cmpsb
outsb
std
push
imul
out
lcall
sub
daa
or
jnp
push
rcl
pushf
fdivr
mov
xchg
push
lret
jmp
stos
push
mov
ficompl
cmp
js
ja
mov
pop
cmpsb
mov
sarb
nop
pusha
pushf
int3
stc
mov
xor
cwtl
lods
ds
mov
fs
lret
and
lcall
add
and
gs
or
mov
int
in
cmp
dec
xchg
sarb
movsb
xor
pushf
mov
sub
xchg
rcrb
fcompl
mov
jae
adc
test
fisubl
cmp
mov
jp
stos
movzbl
sub
mov
mov
das
xor
mov
mov
lea
lods
pop
mov
jp
in
cmp
pop
dec
adc
fdivs
into
inc
dec
rorl
xlat
in
out
pop
lods
shlb
or
ds
sahf
adc
bound
xchg
das
je
mov
shlb
stc
lahf
sar
subl
pop
sbb
lods
mov
js
out
cwtl
mov
cmp
mov
fistl
pushl
js
mov
mov
mov
sahf
fmulp
jecxz
ss
fmul
mov
mov
ds
pop
mov
into
dec
in
idivl
lret
data16
pop
cmpsb
inc
push
mov
mov
cmpsl
xchg
adc
sbb
sbb
mov
pop
dec
mov
stos
ret
pusha
mov
inc
dec
lret
jmp
adc
das
push
pop
scas
insb
popf
mov
cwtl
stc
dec
out
jne
das
jbe
mov
xchg
adc
mov
jbe
hlt
outsl
pushf
fs
jb
test
dec
inc
inc
dec
and
cwtl
call
xor
pop
inc
xor
jae
mov
fs
pop
test
nop
sub
jl
jp
pop
xchg
dec
pusha
stc
inc
jne
je
fisubl
xchg
addr16
xor
fistpll
lock
je
pop
movsb
dec
sahf
movsb
bound
ficompl
shrb
or
inc
jbe
pop
pop
mov
add
push
js
inc
fwait
hlt
xor
dec
bound
mov
flds
dec
mov
ljmp
cmpsb
testb
in
jle
mov
imul
lcall
push
fs
movsl
or
pop
pop
cmp
push
jo
xchg
popf
gs
mov
add
xor
dec
cmpsb
mov
mov
mov
inc
jb
mov
ljmp
ficoml
bound
xchg
dec
sub
pusha
adc
and
pushf
mov
loop
push
jnp
fs
push
pop
adc
lret
jp
or
xor
mov
cmpsb
xlat
mov
xchg
fmulp
nop
xchg
push
data16
jp
inc
adc
aam
pop
push
cmp
mov
jbe
mov
mov
add
mov
jp
pop
into
mov
lods
in
xchg
sahf
popa
and
mov
mov
insb
lret
cmp
addr16
push
aaa
push
jp
mov
adc
xorb
push
sbb
push
lcall
jo
add
repnz
mov
pop
fsubr
bound
addr16
rclb
mov
pop
pop
ficompl
sbb
pusha
shll
outsb
mov
loope
cwtl
aaa
bound
inc
mov
pop
sub
mov
cmp
std
xlat
test
js
fcoml
pop
mov
sti
aam
les
out
data16
repnz
pop
mov
sbb
pop
dec
jae
or
sarl
mov
lods
fstps
xor
sub
in
dec
cwtl
inc
mov
cmp
sub
push
rcll
bound
pusha
adc
daa
mov
push
stos
shll
mov
mov
fcoms
or
mov
arpl
sub
movsb
xchg
pop
fdivl
mov
movsb
mov
mov
nop
jbe
cmpsl
bound
jne
push
in
add
lds
adc
mov
push
sub
insl
mov
int3
insb
sub
dec
xor
cmp
cli
push
cld
pusha
mov
lcall
push
mov
addr16
mov
enter
xchg
cwtl
pop
xor
xchg
mov
movsb
pop
pop
pusha
aam
mov
xor
arpl
or
mov
xchg
mov
dec
into
xchg
jp
nop
mov
lret
xchg
jl
lcall
shlb
mov
sbb
movsb
xor
dec
cmp
lods
pusha
push
loopne
int3
int
ret
lcall
mov
cld
int3
mov
aaa
lret
icebp
cmpsb
jne
cmp
mov
faddl
jb
jp
cwtl
jp
and
stos
mov
dec
pop
mov
lcall
or
mov
dec
push
push
lcall
daa
xchg
lcall
inc
pop
mov
jl
stos
fldt
push
pop
enter
pop
int3
aam
cmp
cmpsb
nop
dec
pop
scas
mov
outsl
mov
in
add
int
rcr
int3
mov
jns
xor
mov
insb
xchg
jb,pt
xor
or
pop
mov
cmp
xchg
cmpsb
aas
inc
add
push
fcmovbe
dec
mov
hlt
xor
pop
add
enter
shlb
xlat
movsb
pop
gs
pop
xchg
mov
jne
das
sub
mov
add
hlt
rolb
fsub
ret
in
lock
cmpsb
stc
filds
fsubr
inc
int3
movsl
and
bound
idivl
into
cltd
outsb
pop
mov
mov
inc
push
fnclex
or
lret
daa
nop
jp
cmp
scas
fmuls
mov
sub
mov
xchg
cmp
pop
test
push
nop
mov
mov
mov
ss
mov
insb
aas
sbb
in
sub
hlt
int3
sahf
pop
mov
push
jl
xchg
jmp
cmpsb
mov
mov
movsl
push
test
dec
dec
pop
xor
xlat
mov
jb
and
stos
insb
pop
test
dec
xor
or
ja
dec
rcrb
shll
xchg
jl
xor
bound
insb
add
jle
xchg
movsb
aam
pushf
xor
fdivr
je
mov
mov
rclb
iret
fcmove
lahf
outsl
pushf
dec
add
jae
test
push
jp
aam
lret
fmuls
jmp
fwait
xor
cmp
mov
lret
aam
mov
insb
out
iret
lods
sti
loop
int3
push
jp
in
hlt
xchg
ret
adc
mov
int3
push
xchg
mov
inc
dec
divb
lock
out
insb
lret
adc
and
xchg
fwait
push
cmc
push
aam
cs
ljmp
loopne
push
jmp
in
in
aam
pop
push
fisubs
mov
cli
cli
cmp
fildl
push
ret
stos
jl
test
lcall
int
or
shll
jg
insl
int3
hlt
xchg
jo
and
je
dec
int3
mov
pusha
inc
sub
add
xorb
mov
dec
loopne
mov
stos
mov
shlb
jne
add
ret
adc
pusha
inc
sbb
sub
lret
cmp
lods
dec
sahf
stos
jmp
mov
ficoms
mov
pop
mov
sbb
push
fs
cli
pop
int3
lds
daa
gs
sub
sub
xlat
add
inc
pushf
imul
jmp
loop
pop
and
add
mov
jno
pusha
fdivl
das
fs
js
cmpsb
insl
stos
and
push
jbe
lret
insb
push
mov
xchg
pusha
jbe
cwtl
insb
inc
xchg
pop
push
into
es
pop
dec
out
mov
mov
sti
pop
pop
fimull
add
push
loopne
ficoms
xor
adc
xor
lods
pop
mov
nop
mov
xchg
jl
mov
test
mov
cmp
xlat
push
push
jbe
sbb
jbe
jbe
dec
fmull
xchg
mov
jp
jp
out
xchg
cmp
jl
dec
cwtl
jae
sbb
push
jmp
mov
mov
dec
out
fidivl
pop
or
push
enter
inc
out
ja
lcall
xor
scas
pop
aam
mov
idivb
xchg
lock
push
pop
xor
mov
cmp
aam
into
ds
push
outsb
push
ljmp
sbb
push
mov
jp
fwait
pushf
mov
iret
setbe
mov
push
push
push
cs
mov
jp
mov
mov
outsb
aas
pusha
les
adc
test
mov
cmp
cwtl
jbe
fimuls
and
scas
fcmovnbe
xchg
push
enter
cwtl
pusha
mov
mov
push
bound
mov
mov
pop
rcrl
mov
hlt
movsb
xor
mov
nop
dec
js
rcll
push
int3
mov
mov
pushf
jp
insl
js
sarb
popf
nop
pop
sub
push
fnstenv
pop
pop
push
sbb
mov
mov
outsb
add
push
and
data16
into
subl
mov
nop
in
aam
mov
pop
jmp
ficoms
mov
mov
mov
sub
mov
in
cmp
lcall
dec
xchg
sarb
jb
jbe
xchg
cmpsb
mov
js
hlt
aam
dec
aas
mov
xchg
fistl
sbb
sahf
dec
jnp
fcomps
mov
mov
pop
insb
and
add
fdivrl
fmuls
shlb
arpl
lahf
inc
jbe
mov
std
inc
outsl
repnz
fucomi
enter
mov
push
xchg
test
lret
fcomps
fsubrl
xchg
pusha
cmp
int3
nop
pusha
inc
mov
pop
push
jns
rclb
add
sti
pop
mov
jmp
paddusb
lock
cmp
inc
nop
pop
movzbl
rcr
jae
fisubs
mov
mov
mov
push
aam
mov
dec
inc
scas
sub
lret
mov
cmp
inc
daa
and
int3
mov
sbb
jp
mov
dec
pop
mov
dec
enter
rolb
lods
fmull
icebp
jbe
sahf
repnz
pop
dec
lods
movsb
jmp
cwtl
js
das
dec
into
test
mov
adc
dec
sahf
cwtl
fldcw
mov
pusha
cmpsb
xchg
dec
fwait
sub
ret
cmp
push
int3
lret
or
hlt
lcall
dec
push
daa
loopne
sbb
pushf
fldl
mov
gs
lods
scas
xchg
into
mov
sub
mov
sahf
fdivrs
mov
lret
scas
jne
fldl
add
xchg
fisubrs
mov
mov
add
repnz
xchg
bound
mov
mov
push
std
sarb
arpl
mov
int
arpl
or
outsb
pop
push
cmp
cmpsb
cwtl
jo
mov
fcomp
push
sub
pushf
js
jl
pushf
xchg
lods
mov
dec
lea
lret
shl
inc
sbb
jne
push
pop
ret
ret
jb
xor
push
xchg
mov
test
dec
insb
jp
iret
cmp
jo
mov
popa
cwtl
or
repnz
int3
mov
mov
movsb
lods
and
mov
lret
in
xor
pop
push
cmp
mov
xchg
pushw
daa
xorl
mov
movsb
sahf
cli
lahf
popa
fidivrl
cld
scas
push
test
daa
shlb
xor
movsb
dec
jnp
pushw
or
cmc
push
lret
js
pop
movsb
insb
mov
enter
add
pushf
sarb
cwtl
fs
fisubl
mov
mov
fcoms
push
push
mov
push
mov
bound
sahf
lret
mov
mov
mov
cld
dec
mov
insb
imul
add
sub
pusha
push
aam
stc
add
and
adc
dec
shlb
add
insb
pop
sub
push
in
js
add
xchg
bsf
xor
mov
pop
sahf
enter
cwtl
lcall
int3
and
mov
fists
adc
pop
fidivrl
pop
push
movsb
push
adc
add
movsb
push
mov
inc
lods
lahf
dec
and
fwait
cwtl
jle
dec
sub
pushf
fisttps
je
nop
pop
jae
pop
mov
xor
sub
sahf
subb
daa
adc
je
js
pop
inc
insb
sub
inc
xor
sbb
setl
ss
nop
xlat
fimuls
or
aaa
leave
je
pop
lahf
cwtl
loopne
mov
lock
daa
pushf
mov
xchg
pop
lret
dec
fistpl
pop
into
or
lcall
pop
hlt
cmp
cmp
cwtl
fdivs
push
cmp
mov
bound
adc
sbb
test
dec
mov
mov
cmpsb
movsb
and
rcrb
mov
push
add
movsb
jl
push
push
js
cmp
testb
mov
add
ljmp
xchg
je
cld
popa
mov
scas
and
push
pop
adc
sub
xor
fdivrl
push
push
push
dec
shll
and
aam
nop
cld
aam
lods
movd
dec
int
cltd
daa
jecxz
xchg
sub
lods
cmpsb
pop
mov
nop
push
fs
jg
cmpxchg
jo
add
push
rorb
lahf
inc
inc
stos
dec
dec
in
mov
in
cld
filds
fwait
mov
mov
sbb
cmp
je
mov
cmp
insb
xchg
mov
push
mov
mov
imul
lods
mov
xchg
dec
jo
mov
lret
aaa
stc
stos
mov
jle
mov
mov
pop
popf
mov
fstpt
xchg
fs
lret
pusha
shrb
push
inc
das
in
dec
lea
jb
rorb
xchg
lret
mov
pop
xchg
or
cmp
jp
fs
bound
pop
pusha
pop
xchg
cmc
and
pop
mov
lcall
pop
mov
repz
mov
pushf
pop
push
hlt
outsb
cmpsb
push
sahf
ret
out
push
xor
add
mov
dec
pop
dec
fcoml
sub
cmp
sahf
insb
jbe
je
jo
rorb
jb
inc
loop
out
outsb
mov
jns
faddl
fisttpll
das
or
xlat
sahf
movsl
xlat
scas
dec
sub
cld
xchg
xchg
xchg
pop
cmp
cwtl
xchg
push
push
mov
dec
dec
and
dec
mov
je
int
aam
mov
ja
lahf
add
jno
cld
sub
xchg
notl
dec
xor
cmp
mov
fdivrl
ficoml
je
test
cmpsb
mov
insb
push
add
bound
adc
sub
mov
je
cwtl
push
insb
mov
dec
inc
sub
mov
and
mov
das
push
fmulp
adc
outsb
xchg
mov
xchg
mov
loop
adc
xor
lds
dec
into
pop
fistpll
hlt
mov
repz
inc
push
sbb
aaa
data16
bound
int
fidivl
cs
addb
mov
dec
aad
jns
dec
push
push
outsb
sti
mov
sbb
inc
mov
cwtl
in
fs
mov
lcall
jecxz
push
xor
pop
sub
sub
adc
lods
mov
fs
aaa
outsl
push
fidivrl
push
jb
dec
je
jae
inc
jp
push
or
js
js
dec
xchg
in
lret
movsb
mov
dec
jnp
jp
imul
lods
outsl
bswap
xor
inc
out
sub
mov
push
push
fimull
mov
mov
mov
das
sahf
dec
jnp
into
lahf
cmpsl
mov
int3
push
je
push
sbbl
bound
insl
dec
pop
adc
mov
xchg
cmp
fdivrs
repz
test
pop
jo
jo
inc
mov
fcomps
mov
cmp
fsubrl
test
xchg
mov
push
adc
adc
daa
sbb
rclb
fimuls
insb
sbb
jbe
xor
pop
js
movsb
mov
fucomi
xor
cmp
mov
fs
jns
mov
xchg
pushf
sub
mov
pop
push
into
xchg
inc
lret
or
lret
out
pop
fdivl
lods
pop
mov
jne
jp
mov
mov
sub
add
dec
in
xorb
lods
mov
mov
ret
cmp
dec
lcall
mov
sbb
dec
movsb
mov
out
outsl
jp
sbb
cmc
ret
push
dec
jb
sbb
and
hlt
or
ret
dec
std
js
pushf
cmpsl
test
popf
out
mov
int3
cmp
pop
cmp
cwtl
jnp
nop
mov
fildl
stos
pop
jb
dec
inc
pop
cmp
mov
mov
push
bound
test
dec
into
gs
stos
mov
jo
arpl
adc
ficoms
loopne
xor
fisubrs
sti
mov
fimuls
lcall
xor
rclb
lock
mov
jo
ljmp
push
push
mov
push
outsl
add
dec
push
mov
xorl
test
lods
push
mov
fdivl
sahf
mov
sub
pop
fldcw
fldt
push
out
aas
daa
mov
lds
movsl
cmp
ficomps
pop
pop
ss
push
dec
fmul
push
rolb
push
xchg
daa
xchg
mov
bound
pusha
add
mov
movsb
jmp
ret
add
mov
push
mov
pop
int
imul
pop
sub
scas
dec
out
mov
or
sbb
mov
sub
fstpl
push
push
scas
dec
test
mov
mov
push
mov
stc
nop
mov
dec
pop
xchg
cmp
mov
mov
pop
sets
sbb
inc
je
mov
jl
aam
fs
pop
pop
mov
xchg
mov
lret
data16
shrb
shl
gs
xchg
out
cmp
mov
lea
xchg
cmp
pop
mov
nop
sub
rol
cmp
sahf
pusha
sarl
mov
clc
add
jmp
sub
loope
lret
rolb
pushf
lcall
cmp
dec
and
iret
inc
inc
inc
lods
mov
in
dec
xchg
fsubl
test
outsb
push
adc
xchg
cmp
mov
fwait
mov
shl
lods
cmp
mov
movsl
pusha
xchg
ss
ficompl
sub
mov
fdivr
stc
dec
lds
test
cmpsb
sahf
nop
lods
aam
fsubrs
jp
mov
xchg
cmp
pushf
xchg
pop
clc
pop
aas
jb
cli
fcoml
cmp
mov
sbb
mov
mov
pop
pushf
sbb
fstl
stos
stc
int
outsl
js
sub
lea
js
stos
mov
mov
jo
int3
fcoml
cmp
insb
aam
rcrl
les
repz
jb
lods
lods
mov
pop
jp
xorl
pop
jbe
dec
iret
daa
pop
push
das
cmpsb
repz
hlt
push
andps
pop
mov
fs
push
repz
lcall
adc
imul
rcrb
xchg
testb
cltd
lods
push
dec
cmp
shlb
test
rclb
fistpll
sahf
mov
frstor
mov
push
jge
pop
das
pop
fwait
pushf
daa
into
mov
pop
das
aas
je
pop
xchg
mov
lods
pop
test
shrb
push
cli
repz
fisubl
cmp
int3
insb
addr16
es
aaa
popf
bound
sbb
lret
mov
outsb
adc
nop
mov
jp
mov
mov
xlat
ret
repnz
dec
sub
push
mov
hlt
jbe
stos
das
mov
stos
xchg
or
lods
pushf
cmpsb
sbb
ret
mov
xchg
fidivrl
mov
mov
mov
data16
sahf
mov
jp
lods
out
push
push
dec
int
push
insb
xor
cwtl
mov
push
mov
jl
out
int
inc
xor
stos
lods
mov
lock
fcoml
imul
insb
imul
xor
cmp
or
mov
cld
test
cltd
shll
jl
push
push
lret
sbb
pop
fisttpll
je
stos
in
push
mov
mov
jo
fwait
sbb
iret
add
mov
in
xor
cmpsb
fcomps
cmp
jb
addr16
loop
inc
and
pusha
push
pop
cmp
scas
jb
test
cltd
and
mov
aas
pop
xor
sbb
pop
cmpl
test
bound
adc
jnp
push
lods
ret
adc
mov
fsubl
call
dec
mov
lret
shlb
fcomps
aam
pop
mov
jmp
ljmp
into
out
mov
movsb
mov
mov
lods
mov
insb
hlt
lock
movsb
addps
sbb
dec
mov
mov
inc
mov
out
jb
mov
out
faddl
xchg
xor
xor
xbegin
pop
fbld
mov
xchg
adc
into
fstl
sbb
push
scas
add
mov
fsubrl
push
xor
mov
add
lods
cmp
dec
mov
test
movsb
bnd
pusha
sbb
add
dec
inc
inc
cli
outsb
cmp
lock
mov
jb
test
out
fistps
daa
fsubs
dec
inc
fcom
jbe
mov
repnz
xor
inc
sbb
adc
push
mov
scas
lods
lcall
loop
into
jl
rorb
or
add
loopne
lock
daa
lods
mov
cwtl
ss
fdivrp
sbb
cmp
pop
out
mov
mov
das
inc
xchg
adc
push
pop
fisubs
mov
lret
fisubrs
lods
lock
add
jne
aad
lods
jp
into
mov
lahf
fsubrl
push
cmp
pushf
fwait
jg
dec
add
mov
xor
fs
mov
mov
jbe
test
sbb
sub
mov
mov
gs
pushf
inc
popl
pop
xchg
sub
mov
dec
dec
stos
jb
hlt
negb
pop
mov
pop
das
test
pop
repnz
repnz
pop
adc
sti
and
fimull
loopne
mov
je
push
insb
test
xor
lret
fcmovu
stos
fcoms
dec
jl
push
scas
mov
daa
xor
mov
arpl
xchg
or
jne
mov
fwait
and
je
das
inc
shlb
sub
xor
xchg
pop
push
push
or
sti
ds
rcl
pop
sbb
xchg
bound
pop
loop
and
pop
lods
pop
out
cld
xor
jbe
cmpsl
mov
push
fdivrl
pop
or
lret
mov
mov
sbb
pop
jb
mov
cmp
int3
nop
jb
fdiv
xchg
dec
mov
pop
push
push
aas
jg
lcall
fcoml
push
jl
data16
mov
daa
mov
sbb
je
sub
xchg
cmp
pusha
rcll
adc
fisubs
pop
or
or
add
inc
pop
sbb
and
test
lret
inc
outsl
mov
je
dec
push
and
push
mov
xchg
mov
mov
pop
fisttpl
scas
mulb
lahf
xor
mov
push
hlt
xchg
xchg
loopne
mov
sbb
adc
fdivrl
mov
fidivrl
pop
mov
xchg
pusha
push
rolb
push
xor
xchg
fidivrs
xchg
stos
mov
lret
inc
jo
lods
mov
sarb
inc
in
cmp
jbe
movsb
sub
bswap
lods
lods
fdivrl
jb
jmp
push
pop
fs
push
mov
add
xchg
pop
dec
fcomps
lret
dec
imull
xor
cmp
bound
insl
out
int3
jbe
scas
lock
xor
mov
movswl
push
lcall
jb
mov
add
dec
mov
insb
cmp
outsb
xchg
nop
lcall
push
pusha
push
mov
rclb
jmp
jle
stc
xchg
aaa
popa
out
rcrb
sub
jnp
cmp
mov
cmp
dec
data16
xchg
mov
icebp
mov
rorl
push
xchg
push
sbb
mov
mov
mov
cs
jno
scas
cmp
in
sarl
aam
shlb
cmp
inc
fmull
sahf
dec
jae
hlt
mov
ds
dec
sbb
sbb
push
push
lret
dec
sbb
movsb
adc
and
or
inc
mov
inc
nop
lret
or
push
rcl
lods
pushf
mov
test
mov
fistpl
sbb
lret
fwait
loop
aas
mov
movsb
dec
pop
pushf
pop
cmp
cmp
mov
push
mov
stos
push
pushf
mov
pop
jo
or
lret
jns
je
lcall
movsb
mov
mov
lods
nop
inc
push
jl
push
adc
daa
jo
dec
test
xor
pushf
mov
sub
sti
mov
cmp
xchg
aam
jp
jno
out
adc
push
fistl
and
data16
dec
inc
mov
les
pusha
imul
in
and
call
sub
and
shlb
aad
adc
pop
adc
fcmovne
push
xchg
inc
cli
xor
cmp
dec
arpl
pop
or
mov
mov
je
add
movsb
call
jb
rcr
mov
cmpl
jns
lds
push
dec
pop
stos
fsubl
fsubrs
lret
mov
mov
das
fisubrl
pop
ja
push
mov
dec
pop
in
rcrl
mov
add
outsb
out
inc
lcall
cmp
fdivrs
fcmovbe
jnp
push
pmaxub
daa
movsl
aam
mov
fsubrs
lods
inc
push
xlat
push
push
pop
mov
daa
or
aaa
aam
pop
fldl
lret
add
mov
xor
fisubrl
mov
mov
dec
mov
adc
fstp
stos
jbe
notl
leave
mov
test
js
jge
clc
data16
repz
add
lcall
js
nop
popf
mov
mov
je
dec
xchg
and
push
mov
arpl
mov
mov
into
cwtl
sbb
fdivrl
fs
push
outsl
mov
push
sbb
sub
lret
push
dec
mov
lret
mov
jae
mov
dec
jp
dec
jl
push
test
loope
mov
sbb
movsl
dec
fisubrl
hlt
fsubp
das
cwtl
je
mov
lret
cmp
mov
ja
stos
mov
pop
loopne
xchg
xchg
aaa
xchg
push
test
mov
mov
push
cmp
lcall
out
sub
pop
mov
nop
pop
sbb
xor
scas
sub
cmp
xchg
test
push
rcrb
lret
mov
push
fnsave
xor
xor
mov
in
xchg
in
and
rorb
fsubs
and
inc
mov
sub
aaa
adc
jp
nop
les
mov
lods
jb
shlb
jbe
xchg
pusha
sbb
daa
mov
xchg
push
jl
xchg
dec
dec
sti
cmpl
movsb
mov
mov
push
lahf
sub
movsb
mov
movsb
ficoml
stos
jg
or
mov
addr16
xchg
push
movsb
xchg
ja
mov
xor
mov
or
hlt
jp
out
aaa
jo
cwtl
shlb
mov
mov
dec
dec
addr16
pop
mov
sub
stos
mov
mov
fldl
push
sbbl
stos
test
das
jb
mov
sub
sbb
lcall
lods
inc
mov
mov
ja
fisubrl
cld
jno
mov
out
cld
ss
imul
movsb
or
and
push
dec
fidivl
and
rcrl
dec
lcall
pushf
scas
pop
xchg
into
fs
lret
fwait
adc
insb
aaa
bound
lods
out
insl
pop
sub
xor
mov
or
xor
pushf
insb
test
mov
xchg
sub
aas
pop
psrld
shl
data16
pop
mov
xor
or
push
mov
sbb
lahf
mov
je
pusha
gs
push
push
mov
cmp
fcoms
cwtl
rol
mov
data16
pop
fdivs
lcall
outsb
sahf
hlt
push
sub
and
pusha
movsb
fsubl
sub
add
mov
lcall
pushf
aas
aas
loopne
dec
cld
scas
dec
fmull
movsl
mov
pusha
clc
mov
fdivl
cmpsb
jmp
popa
dec
xor
pop
push
testl
loop
push
lcall
into
iret
xor
insb
fs
lods
push
out
rolb
fistpl
je
pop
enter
jo
jl
ficomps
shll
mov
nop
cmpsb
mov
das
fisubrl
adc
push
arpl
adc
or
xchg
mov
cld
fisttps
ror
sahf
push
dec
jp
xor
popf
add
rol
sub
xchg
in
lret
mov
pusha
dec
inc
sub
bound
lods
or
fwait
cmp
dec
dec
pop
arpl
into
pusha
lret
insb
aas
mov
stos
rcrb
xchg
jbe
fxch
js
fimull
pop
dec
adc
mov
jo
fisubrs
pop
mov
cmp
xchg
pop
lods
lret
loop
pop
outsb
push
outsb
mov
and
dec
out
inc
dec
sahf
dec
addr16
mov
stos
mov
sub
sub
push
dec
mov
add
fistpl
dec
mov
dec
movsb
out
iret
jp
jl
pop
fimuls
dec
jns
push
pop
cld
ljmp
push
pop
push
stc
cmpsl
js
pop
dec
jle
mov
adc
push
movsb
nop
xor
mov
out
push
xor
sub
jbe
test
data16
insb
xchg
cmp
jb
mov
or
sub
xchg
fcmovbe
out
dec
shlb
dec
fdiv
jecxz
inc
repz
sub
into
mov
cs
fidivrl
dec
jp
cld
add
adc
mov
aam
aad
stos
inc
into
inc
sbb
sbb
push
mov
test
stos
and
fisubrs
mov
push
adc
rcrb
out
cmc
xor
jbe
in
hlt
js
sbb
dec
fmuls
test
cmp
pop
fisttpl
xchg
test
cmp
jp
mov
shrb
js
cmpsb
sbb
les
push
dec
mov
or
mov
mov
inc
fcompl
bound
les
jecxz
push
cmp
mov
neg
imul
inc
stos
push
movsb
fmuls
in
lods
xor
lret
add
outsb
inc
add
mov
jge
cmp
push
repz
add
fidivs
sbb
pop
nop
enter
rorb
lods
dec
adc
out
cli
push
push
std
inc
adc
xor
pop
jmp
push
mov
xchg
fadd
xchg
lods
jge
mov
cli
ja
aaa
dec
jbe
nop
outsb
xchg
push
dec
lahf
add
cmp
mov
push
inc
mov
lcall
fcomps
mov
test
sub
outsl
mov
aad
mov
lock
icebp
jl
dec
cmpsb
hlt
pop
push
adc
movsb
daa
out
push
cmp
into
int3
mov
xchg
sahf
mov
jo
sahf
sti
jno
or
inc
mov
add
dec
pop
jbe
jmp
mov
mov
jns
insb
nop
pop
mov
push
js
sahf
ja
sbb
out
add
push
movsb
fdiv
ret
xor
mov
shrb
fstl
scas
push
jbe
mov
inc
int3
fstpt
test
dec
cmpsb
adc
out
iret
aam
in
das
cwtl
int3
stos
push
nop
push
cmp
mov
xchg
mov
outsb
dec
in
scas
xchg
addr16
sub
cmp
mov
fisttpl
xor
push
insb
xorl
push
in
int3
cmp
push
sahf
mov
xchg
sarl
jp
outsb
push
mov
pop
testl
jp
stos
outsb
pop
cmp
fcoms
jg
pop
movsb
test
js
mov
xor
and
mov
repz
pushf
mov
bound
je
mov
and
and
jp
out
ror
cmpsl
push
js
addr16
lods
nop
push
jmp
imul
sub
test
sub
cmp
fisubs
fisubrl
and
int3
sub
push
pusha
aaa
movsl
into
jp
pop
inc
out
and
outsl
aam
push
addr16
pextrw
push
dec
mov
pop
jo
daa
inc
neg
mov
cmpsb
sarb
hlt
cmp
mov
add
pusha
dec
add
jge
ss
lcall
push
fcomps
dec
push
jb
dec
jmp
push
mov
fildll
ficoml
push
icebp
pcmpeqb
mov
adc
popa
cwtl
ds
mov
xor
mov
daa
jbe
mov
jge
repnz
cmp
push
pop
call
sub
pop
lods
cmpsl
movsb
push
inc
fidivl
xor
jl
jl
into
mov
jo
scas
fidivs
mov
lret
add
push
and
scas
js
shlb
jecxz
setle
out
xchg
xor
je
icebp
cmp
jp
pop
adc
stos
and
adc
mov
mov
xchg
sub
cmp
mov
jp
test
imul
cmpl
je
fimuls
mov
sbb
ss
mov
mov
ret
xchg
push
sti
sbb
dec
sbb
jae
add
dec
nop
ss
mov
scas
out
mov
aaa
push
fidivs
rcr
dec
and
push
in
cmp
pop
dec
push
push
mov
aam
dec
popf
mov
push
negl
pop
cwtl
cmp
nop
push
adc
jae
xor
pushf
sarl
out
pop
xchg
pop
mov
mov
loop
lea
test
lcall
pop
dec
mov
scas
sarb
dec
push
mov
push
nop
add
dec
mov
mov
sub
cs
mov
pop
insb
adc
outsl
inc
mov
cwtl
dec
pop
gs
out
xlat
cmp
insb
pushf
movsb
pop
nop
pop
xlat
or
nop
stos
push
data16
and
mov
push
popf
cmp
jo
jp
faddl
int3
mov
cmp
jb
pop
xor
and
aam
add
imul
fs
xchg
xchg
jp
xchg
jbe
fisubl
je
and
pop
es
jp
scas
js
and
in
and
je
xchg
sub
imul
xlat
cmp
xchg
jp
repz
push
std
pop
xchg
push
fdivrl
fmull
scas
jo
jg
xchg
ret
pop
mov
mov
lea
mov
mov
mov
jecxz
mov
mov
ja
into
jl
push
stos
movsb
insb
jmp
aaa
pusha
mov
mov
pop
cmp
mov
bound
sbb
pop
test
sub
and
dec
lods
lods
or
dec
mov
addr16
pop
mov
jo
push
mov
sub
mov
fs
mov
dec
aad
shlb
mov
xchg
jmp
rcrb
jb
pandn
jmp
mov
or
insb
fcoms
inc
dec
cmp
mov
pushw
mull
subl
push
dec
xchg
push
pop
dec
xor
dec
into
mov
xchg
inc
inc
pop
fs
adc
sub
jbe
push
pop
daa
sub
out
cli
jo
in
xor
cmpsb
mov
out
mov
mov
test
cwtl
das
mov
push
pushaw
mov
mov
jp
pop
insb
pop
mov
xchg
mov
jge
jbe
imul
sbb
sbb
nop
cwtl
and
fcmovnb
popa
cli
addb
xor
xchg
cmp
mov
pop
out
mov
lret
mov
stos
jmp
xlat
hlt
xchg
mov
sub
outsl
dec
push
and
rcl
jle
fisubl
mov
mov
jbe
into
mov
scas
add
test
push
data16
mov
dec
scas
sbb
popa
and
movsb
xor
cmp
mov
or
sarl
mov
out
jo
cmpsb
int3
pop
mov
pop
rcl
mov
dec
sti
jp
lahf
pop
pop
sbb
mov
xor
mov
or
inc
lea
mov
mov
dec
cwtl
jp
cmp
pop
mov
mov
je
mov
out
pop
pusha
and
daa
into
ljmp
lcall
jae
lods
and
xor
lret
cmp
loop
sarb
dec
mov
shlb
push
into
popf
push
adc
cmp
lret
movsb
stos
pop
pop
mov
or
repz
pop
mov
dec
mov
pop
push
mov
aam
gs
and
jb
pop
fmul
fsubl
lods
popa
movsb
or
shrb
push
addr16
imul
push
aam
fcoms
mov
pop
aam
adc
je
cmp
mov
stos
push
insb
lods
mov
ficompl
and
je
mov
dec
sti
imul
add
ds
mov
icebp
cmpsl
inc
adc
mov
push
es
dec
aas
mov
sahf
or
add
push
push
mov
insb
pop
mov
pop
dec
pop
jle
pushf
test
out
fdivs
mov
lret
push
mov
mov
pusha
mov
fimuls
pop
into
dec
sahf
lods
test
fimuls
cmp
lret
shlb
int3
mov
push
xchg
mov
or
push
pop
movsl
add
sub
pop
out
nop
das
sbb
push
jo
icebp
xor
or
push
std
push
mov
rcrb
mov
lods
push
addr16
mov
call
xlat
mov
xchg
pop
sub
enter
js
add
cltd
test
lds
lock
xchg
scas
lret
mov
into
ja
popa
fmuls
push
fs
push
mov
pop
outsl
xchg
dec
in
xchg
push
cmp
push
mov
cmpsb
pop
ds
push
sub
pushf
pop
dec
jno
lcall
out
jg
pop
inc
loop
jge
pop
dec
lods
fdivr
jp
jb
mov
mov
lcall
je
pop
fwait
dec
sarb
int3
pushf
popf
sbb
jb
cwtl
cmp
mov
into
aam
pop
daa
int
ss
js
sub
out
outsl
fdivs
add
sub
adc
lret
cmp
lds
ficoml
mov
mov
jnp
mov
rcrb
movsb
adc
test
fnstsw
cwtl
jbe
mov
fdivs
fiaddl
xchg
lods
inc
jp
dec
pusha
bound
rcrb
lock
xchg
fisubrl
pop
scas
cwtl
jle
fstpl
dec
adc
ja
mov
mov
loopne
mov
das
mov
lret
pop
inc
pop
xchg
mov
jns
movsb
dec
mov
sti
jp
loopne
fs
cs
push
lcall
test
dec
outsb
cs
mov
nop
shlb
mov
jl
mov
jo
xchg
push
cmpl
mov
dec
mov
pop
dec
sbb
adc
mov
scas
sbb
test
inc
fiadds
fisttpl
bnd
cmc
push
data16
sub
push
cmp
into
mov
adc
mov
aas
dec
aaa
data16
mov
jg
dec
cmpsb
xchg
fwait
mov
pop
aam
stos
pop
mov
cpuid
sbb
cmpsb
scas
pusha
data16
stc
mov
dec
fs
stos
shrb
jmp
in
in
movsb
cmp
add
jb
mov
rcr
out
or
insb
pop
js
add
mov
test
cmpl
nop
jp
popa
and
fcomps
call
push
stc
sbb
dec
push
int3
push
inc
push
adc
aam
addr16
je
push
out
and
shlb
mov
stos
mov
pop
insb
ss
cli
push
fmul
jo
xchg
adc
sbb
push
jp
cmp
movsb
fstl
data16
shlb
insb
fcoml
pusha
mov
push
mov
sbb
int3
add
aaa
int3
mov
pop
mov
aam
lods
push
or
add
push
xchg
and
outsb
pushl
push
xchg
xchg
cmp
fcom
nop
jnp
mov
or
mov
test
out
jp
and
jle
jp
js
ss
cld
push
insb
cmp
pop
pushf
pop
fdivr
mov
nop
movsb
into
push
mov
adc
push
ret
int
xor
add
cmp
mov
sar
dec
add
int3
daa
into
mov
xchg
push
add
fdivl
stos
mov
aas
pushf
sarl
movsb
into
mov
mov
pop
push
bound
push
cli
stos
cli
pop
mov
cli
vandps
pusha
cmp
jbe
mov
outsb
mov
rcrl
aad
pop
sub
je
fcoml
sbb
cmp
repnz
push
jns
push
pop
jno
jne
stos
movsl
push
jae
xchg
mov
fldt
xchg
jp
out
cmpsb
dec
enter
in
mov
fmuls
push
mov
das
jns
scas
dec
fwait
out
push
pop
inc
enter
aam
je
push
xor
mov
jo
fistl
test
add
mov
int3
bound
cmpl
mov
test
test
ja
cmp
xchg
data16
in
xchg
mov
or
dec
dec
mov
es
movsb
fcmovne
cmp
out
mov
jns
test
cld
xchg
rorb
hlt
lods
ficoml
movsb
fsubl
xchg
lret
dec
dec
mov
out
cmp
dec
pushf
jbe
fistl
fisubs
or
jecxz
xchg
bnd
adc
cwtl
hlt
mov
repz
fs
out
fistpl
or
jle
lret
xor
js
imul
pop
xchg
xchg
sbb
bound
jbe
cmpl
mov
cwtl
popl
repnz
or
push
ror
mov
icebp
pushl
jle
lods
push
adc
push
lods
push
cli
les
daa
mov
pop
loope
orb
jno
pushf
fnclex
mov
pop
bound
jnp
insb
hlt
pop
mov
mov
push
xchg
mov
test
or
push
inc
rol
mov
sti
jl
push
pushf
outsb
push
push
push
loopne
mov
lock
lock
lock
pop
pop
iret
inc
pop
push
adc
sub
jbe
data16
sub
mov
mov
fidivrl
mov
stos
sbb
pop
shlb
sub
lock
mov
xor
dec
inc
dec
pushf
xor
jg
xchg
fcompl
insl
outsb
xor
fistpl
xor
dec
int3
mov
sbb
pop
lret
and
xor
jbe
jge
xchg
test
add
js
out
and
nop
push
data16
ficoml
add
sbb
mov
cmp
scas
push
lods
lea
mov
stos
fs
pop
mov
repnz
mov
fildll
mov
pop
mov
pop
ficomps
push
sbb
je
dec
jbe
jno
insl
insb
pop
and
lret
add
push
aaa
dec
mov
add
bound
xlat
test
mov
sbb
rcr
xchg
and
dec
aam
cmp
mov
mov
lock
xor
ss
xchg
xor
mov
push
js
mov
mov
push
shlb
jg
push
mov
shll
xor
pusha
jns
push
sub
mov
inc
mov
pop
lock
outsb
test
repnz
fistpl
dec
fdivrs
int3
mov
mov
adc
push
fdivrs
lcall
outsb
mov
pop
insb
jmp
xchg
cmpsb
fs
mov
js
jb
fidivl
ja
js
and
das
lcall
push
inc
stos
in
movsb
mov
mov
mov
mov
pop
das
subb
push
xor
sbb
inc
and
add
jnp
mov
or
cmpsb
test
adc
inc
int3
or
jno
outsb
fsubl
mov
push
cld
mov
add
xchg
rolb
sahf
jecxz
fists
mov
clc
dec
lret
aam
rcrb
xor
mov
add
or
aaa
cmp
int3
call
scas
dec
pop
loopne
fmul
repz
ret
hlt
das
in
jne
add
gs
mov
or
mov
mov
xor
movsl
xor
pusha
lret
xor
fcomps
addr16
cmpsb
and
adc
cmp
rclb
mov
lea
dec
pop
jecxz
fldenv
pop
xor
scas
xchg
lds
pushf
mov
pop
dec
out
pushf
sbb
ret
pop
mov
test
rcll
mov
aaa
cmp
pusha
fsubs
add
ficoml
sbbl
mov
rolb
adc
int3
mov
dec
mov
insl
xor
loope
fidivs
sbb
add
outsb
insb
fs
out
mov
mov
lods
jae
data16
xor
cmp
je
imul
sbb
push
jne
jae
mov
lock
jbe
mov
mov
fdivr
cmpl
push
add
xchg
mov
js
mov
jns
mov
mov
ficoml
stc
sbb
arpl
adc
bound
shl
sahf
fdivrl
mov
fcom
aam
cmp
fidivrs
inc
lret
jno
lcall
shll
xchg
rclb
scas
cmpl
je
pop
ret
fistps
hlt
movsb
hlt
mov
mov
fcmovb
sub
scas
jbe
mov
mov
arpl
add
in
aas
pop
imul
mov
and
mov
out
jl
sahf
jl
or
dec
insb
or
add
push
fcoms
sbb
or
push
test
sbb
mov
mov
stos
mov
push
push
mov
mov
inc
sbb
pop
pop
insb
dec
xchg
xor
test
sahf
fbstp
in
mov
popa
enter
mov
bnd
repz
sbb
dec
mov
fcompl
lret
ficompl
nop
xchg
and
aas
stos
push
fmuls
dec
fdivr
dec
lods
lcall
dec
fs
lods
cs
mov
xchg
loopne
dec
mov
jl
into
fidivs
xchg
mov
test
mov
inc
outsb
movsb
mull
and
pusha
mov
cld
mov
add
lret
jecxz
das
sarb
fs
cmp
movsl
lds
dec
mov
xchg
pop
dec
mov
pop
lods
push
stos
loopne
cmpsb
pop
sub
and
mov
adc
push
pusha
cwtl
hlt
push
loopne
mov
cld
add
roll
mov
enter
sbb
pop
pushf
add
push
mov
out
push
sarb
mov
mov
sub
pop
outsb
aas
jp
sub
lcall
fldcw
test
shl
or
int
mov
sub
je
mov
sbbb
inc
xchg
or
aam
loop
aaa
enter
rorb
add
adc
pushf
jecxz
or
rclb
adc
xor
test
inc
lods
lcall
fisubs
pop
movsb
loop
lods
popl
ss
jo
mov
fildll
mov
sbb
enter
mov
lcall
je
push
mov
xchg
movsb
dec
movsl
outsb
popa
cmp
mov
mov
or
pop
mov
shrb
push
mov
xchg
shll
jmp
push
js
jnp
inc
into
imul
mov
lret
pop
mov
xchg
aaa
mov
frstor
jnp
pop
lods
or
lret
pushf
pop
pop
sti
mov
insl
dec
rcl
in
and
adc
mov
insb
add
push
push
xchg
cmp
mov
mov
pushf
fisttpl
dec
fdivrp
xchg
icebp
add
xor
pushw
imul
rcll
jns
cli
sbb
mov
mov
sub
pop
pop
jl
mov
inc
mov
push
push
mov
into
dec
rcr
pop
pushf
aam
xchg
inc
fsubrs
mov
scas
pop
out
in
mov
in
adc
mov
std
mov
cmpsb
frstor
fisubrs
inc
and
sbb
rcl
cmpsb
int3
fisubrl
mov
inc
ret
pop
xchg
lods
cmp
or
mov
pop
mov
jl
dec
mov
adc
rcl
xchg
mov
out
data16
fmul
insb
adc
mov
mov
aaa
cmp
aam
jmp
je
mov
xchg
add
dec
sbb
jbe
jns
mov
test
ja
dec
push
jb
fcoml
dec
cmpsb
sar
push
jmp
fs
out
mov
jbe
test
sahf
ficompl
lods
lret
dec
xor
mov
xor
push
aam
movsl
ljmp
outsb
ds
nop
aam
into
cmpsb
js
cwtl
xchg
jp
std
jp
nop
sbb
xchg
stos
les
out
lods
xchg
into
lcall
fmuls
mov
sub
cmp
pop
mov
push
pop
add
mov
pop
fdivrs
adc
pop
add
stos
jo
and
adc
pop
lret
mov
hlt
pop
add
push
and
test
pop
pop
cmpsb
push
call
push
xchg
inc
jns
push
push
push
mov
mov
ficompl
imul
mov
int3
cwtl
dec
lds
fdivs
das
fs
lods
push
test
mov
ja
push
aas
fcompl
mov
dec
movsb
mov
dec
jle
daa
nop
call
xor
call
into
xor
pop
sub
arpl
fadds
mov
mov
das
cmp
rclb
js
pop
dec
sbb
fstpt
pop
pop
xchg
push
lods
movsb
fstl
fs
je
ss
leave
mov
pop
mov
push
shll
xchg
lods
js
cmp
dec
shrb
outsb
lods
out
lret
pop
dec
cld
sub
and
jl
pop
cld
fsubl
adc
adc
daa
sbb
sub
fdivs
int3
repnz
mov
mov
ret
iret
dec
push
push
inc
out
test
jl
add
mov
mov
xchg
stos
sub
mov
cwtl
shrb
mov
frstor
mov
cmp
pop
sahf
dec
pushf
mov
std
push
insb
pushl
push
scas
outsl
push
icebp
jb
stos
iret
lcall
mov
cs
jae
mov
dec
push
insb
mov
push
pop
mov
xlat
pop
jo
rcl
mov
cwtl
daa
test
lret
scas
mov
mov
jb
add
xor
push
mov
aam
xor
gs
adc
mov
int3
insb
aam
aam
mov
dec
movsl
cwtl
pusha
out
or
cmc
add
js
mov
add
dec
and
or
gs
mov
cmp
lock
sbb
movsb
lcall
or
sti
mov
lods
sbb
xor
lcall
dec
sub
mov
sahf
inc
mov
push
out
inc
add
push
mul
jle
pop
xchg
cmpsl
int3
xchg
cltd
pop
jo
jecxz
and
shlb
jg
push
mov
sub
push
sbb
push
je
repz
mov
fs
jnp
and
pop
or
pop
mov
mov
ret
aaa
insb
int3
xchg
pop
mov
mov
cwtl
data16
popa
push
dec
dec
ficompl
ljmp
addl
xchg
int3
mov
dec
loopne
dec
lods
push
mov
shrb
cmpsb
pop
inc
and
push
jp
sub
popf
test
sub
push
mov
mov
xor
outsb
jb
rolb
popa
imul
cltd
add
jmp
mull
cld
fldlg2
into
mov
lods
xchg
cmp
mov
mov
cli
scas
insb
lcall
out
scas
push
pop
pushf
xchg
repz
push
lret
sub
jo
stc
jb
pop
dec
daa
insb
mov
jle
mov
fs
mov
ficoms
pop
xchg
pusha
lahf
pop
inc
add
nop
bound
lret
and
adc
adc
aam
dec
je
test
data16
xchg
mov
adc
push
push
das
pusha
rclb
mov
mov
push
cld
loop
inc
pop
aaa
fcompl
pop
mov
jmp
js
adc
mov
cmp
aam
je
js
dec
cwtl
into
stos
scas
add
push
bound
jp
jl
inc
fcoml
out
cmpsb
jo
ja
push
imul
mov
pusha
mov
jb
dec
mov
test
stos
xchg
add
mov
sti
dec
into
data16
adc
cwtl
fdivl
mov
mov
adcb
mov
mov
mov
add
mov
mov
push
mov
fcoml
cwtl
mov
js
dec
pop
lods
pop
jbe
pop
mov
jp
mov
jo
cwtl
movsb
jb
je
mov
dec
push
rcr
fisubs
into
je
pop
enter
jle
pop
pop
pop
sahf
cmp
pop
fidivl
xchg
xchg
pop
movsb
dec
and
jns
bound
xchg
mov
cmpsb
into
push
adc
pop
jp
ficoml
jb
ret
xor
pop
mov
fbld
push
xchg
rcrl
cmp
bound
retw
and
mov
sbb
daa
mov
insb
rcrb
adc
mov
fs
test
mov
add
cwtl
mov
mov
xchg
pop
jl
outsb
js
xchg
adc
cwtl
adc
or
or
sbb
jb
cmp
push
mov
cmp
scas
pop
dec
dec
insl
mov
inc
push
ret
and
jno
aam
adc
hlt
mov
into
pop
adc
dec
xchg
jb
lret
insb
cmp
dec
mov
pushw
ret
js
popf
js
lods
dec
jb
cmp
test
int3
mov
pop
pusha
push
pop
cmp
cmpb
dec
push
jb
dec
insb
push
shlb
add
mov
out
dec
cwtl
push
mov
mov
sub
rclb
lret
in
insl
pop
jle
jns
pop
lcall
mov
mov
mov
js
stc
cmpsb
fwait
scas
dec
jo
mov
in
push
clc
fldl
push
mov
popa
mov
dec
jl
dec
dec
fs
jb
cmp
jb
imul
or
push
je
cmp
cli
and
rcll
inc
shrb
in
or
mov
push
pushf
je
out
sbb
push
pop
cltd
push
mov
inc
pop
pop
push
js
fisubrs
cltd
xchg
or
xor
pusha
outsb
jg
lods
jo
int3
fs
fwait
js
lcall
push
mov
cmp
clc
cwtl
into
mov
dec
fdivs
outsb
dec
push
push
into
icebp
sti
ljmp
sbb
cmp
js
lret
dec
into
mov
mov
stos
fmull
cwtl
pop
out
push
jb
mov
xlat
sub
dec
add
fsubrs
dec
mov
aam
fidivs
xchg
jmp
xor
stc
stos
push
je
mov
movsb
jmp
dec
scas
inc
fcomps
jbe
fdivr
cmpb
pushf
ret
ja
mov
dec
jae
mov
test
mov
pop
jo
mov
mov
pop
nop
push
inc
dec
sbb
into
js
mov
movsb
fcompl
sahf
lret
pusha
test
adc
mov
jl
mov
mov
or
jbe
mov
add
in
inc
jp
cmp
enter
fs
arpl
dec
push
cmp
xor
mov
adc
lret
scas
sbb
adc
bound
jns
push
cld
sbb
data16
mov
push
cmpsb
lcall
xchg
mov
das
mov
add
bound
mov
pop
shrb
mov
sti
outsl
bswap
push
fcoml
dec
mov
push
popf
xchg
lea
inc
dec
push
mov
mov
sbb
cmp
cmpsb
sahf
mov
cmp
aam
push
mov
in
popf
mov
inc
xchg
jl
test
test
roll
cwtl
mov
mov
mov
shlb
out
jmp
icebp
mov
jp
jnp
outsb
fs
dec
add
pop
jecxz
sbb
or
fmul
xchg
mov
loopne
test
dec
jge
ret
dec
lods
cwtl
ja
ficomps
pop
push
and
fcmove
mov
pop
pop
dec
xchg
cmp
test
mov
addr16
mov
xlat
cmpsb
call
movsb
or
lcall
das
scas
insb
pop
out
jp
test
int3
adc
xchg
test
jo
add
cwtl
adc
jbe
add
in
mov
mov
cld
sarl
mov
jl
mov
push
adc
adc
cmp
push
mov
cmp
mov
xchg
mov
inc
lcall
cs
push
push
add
aaa
jo
mov
push
shlb
insb
push
ja
and
insb
jl
cmpsb
fistpl
lods
fs
push
fistpl
ficomps
je
pop
lret
fcom
sub
nop
es
sbb
mov
adc
mov
add
inc
mov
jnp
lods
mov
mov
add
dec
lods
sti
stos
sbb
push
out
out
test
jb
pop
vpperm
or
aam
addr16
xchg
mov
out
inc
je
jo
pop
nop
test
sub
add
sbb
mov
jne
mov
hlt
mov
mov
scas
daa
jecxz
push
das
mov
push
mov
lretw
sahf
push
mov
xor
xor
das
fcmovnbe
push
jb
lea
sahf
inc
jnp
lcall
and
mov
xor
ss
ja
js
js
mov
mov
pop
pop
pop
push
jne
jns
mov
push
xor
mov
jbe
push
cmp
mov
mov
mov
xchg
mov
inc
cmp
mov
dec
sub
pop
push
aad
push
xchg
mov
int3
add
xchg
addr16
push
cmpsb
popa
fnsave
in
fwait
pusha
cld
dec
mov
aas
mov
push
sbb
enter
arpl
mov
mov
cmc
sbb
scas
jl
dec
lahf
lods
pop
int3
es
cld
mov
rorb
dec
adc
dec
lret
or
mov
mov
mov
xchg
lods
repnz
jbe
movsb
test
push
xchg
sub
jmp
adc
out
cli
cmp
fs
mov
cmp
mov
shrb
in
add
ficoml
out
imul
inc
mov
data16
cmp
mov
sarb
out
dec
or
in
fs
sahf
out
xchg
xchg
fimull
pop
mov
test
pop
push
mov
in
nop
mov
dec
lcall
cwtl
arpl
mov
mov
push
nop
cmp
jnp
sahf
jp
lret
loope
jp
push
fdivrl
adc
mov
out
pop
mov
fisubrl
push
dec
sti
iret
into
mov
shrb
mov
cld
sub
add
pusha
bound
in
jle
push
xor
scas
inc
lea
mov
mov
stos
repnz
daa
fidivl
sarl
mov
mov
xchg
mov
add
ja
dec
mov
pushf
sbb
fbstp
rcr
daa
dec
mov
add
add
jb
addr16
daa
pop
mov
ret
mov
push
ret
inc
xchg
inc
jge
mov
lret
cmp
pop
xchg
out
data16
xchg
mov
xchg
pop
pop
add
arpl
cld
mov
inc
ss
int3
hlt
loope
mov
aaa
add
pop
mov
push
xor
jo
fidivl
pop
cli
push
fildl
xchg
mov
dec
pop
setle
inc
filds
dec
adc
mov
or
mov
out
lods
pop
push
jae
mov
or
sub
js
andb
insb
ficomps
mov
xchg
pushf
addr16
xor
xchg
int3
fdivs
sbb
ljmp
movsb
mov
xor
nop
jb
mov
movsb
lret
mov
mov
lea
pop
fs
pop
adc
or
aam
or
push
pop
xor
xorb
jo
jae
mov
jb
fwait
sar
mov
mov
js
mov
adc
nop
lods
stos
insb
scas
roll
stos
cmp
push
stos
lret
adc
enter
cmp
add
push
mov
cmpsl
outsb
pop
mov
mov
sbb
xlat
hlt
push
out
push
push
lods
sahf
push
cmpsl
and
cli
nop
insb
stos
xchg
pop
mov
jmp
test
adc
lods
nop
mov
scas
add
sbb
push
arpl
sbb
mov
stos
sbb
fwait
jno
push
mov
stos
bound
xchg
jecxz
test
and
js
out
les
add
mov
xor
lret
add
or
jp
mov
push
lcall
adc
fnstenv
push
in
push
mov
dec
xchg
pop
js
ficoml
mov
aaa
inc
push
xchg
shlb
jns
arpl
aam
xchg
push
pop
andl
daa
repnz
pop
xchg
mov
jnp
test
movsb
or
mov
jge
lock
scas
cwtl
std
ja
mov
cltd
aam
rcrb
pop
dec
sahf
aam
hlt
jb
leave
cmpsl
xchg
fbstp
pop
add
inc
mov
mov
lcall
stc
outsb
in
arpl
shl
mov
shrl
movsb
nop
jbe
in
sub
lods
push
push
out
fwait
outsb
test
cwtl
in
cmp
mov
out
inc
repnz
nop
stos
sub
mov
pop
push
aas
sbb
bound
insb
fimull
jp
fcoml
jno
cmp
mov
jp
mov
lret
mulb
fisubrs
jb
push
cmp
mov
pop
into
js
jp
pushf
popf
pop
push
cld
js
push
stos
outsb
bound
mov
xchg
add
rorb
mov
test
cmp
shlb
ficoml
pop
ljmp
fsts
dec
xchg
and
jp
addr16
jg
test
aam
ss
movsb
fsubs
xchg
dec
mov
push
imul
jbe
xor
mov
mov
bound
sbbl
shrb
pop
push
cmp
mov
push
test
arpl
mov
mov
jb
fs
mov
aas
outsl
pop
sub
movsb
push
xchg
outsb
in
push
pop
jecxz
mov
data16
aam
mov
cmp
repnz
pusha
mov
cmp
je
das
adc
in
xchg
scas
pushf
push
fdivrs
add
cmp
rcl
jne
into
xchg
insb
mov
sub
stos
loopne
pop
mov
cwtl
shlb
pop
mov
add
sbb
push
js
pop
scas
scas
pop
jl
into
mov
pushf
mov
mov
scas
dec
in
je
mov
cmpsb
push
pop
test
stc
or
sbb
cwtl
fwait
xor
out
dec
jns
pop
mov
xchg
jnp
dec
pop
pushf
jbe
sti
xchg
stos
fisttpl
outsb
cmp
push
scas
mov
bound
push
and
aam
aam
test
movsl
js
add
bound
xchg
mov
daa
insl
nop
cmp
insb
jne
and
shrb
or
data16
pushl
nop
addr16
cmp
cmpsb
js
lcall
notl
sub
xchg
sub
jbe
fistl
sub
jl
aam
outsl
lods
enter
or
mov
inc
lods
add
out
jmp
das
mov
pushf
stos
push
sbb
into
mov
mov
mov
imul
movsb
push
and
mov
fdivs
push
add
sub
dec
pop
fidivrl
lds
or
push
and
icebp
mov
lea
dec
mov
sbb
lahf
cmp
ret
cmp
cmp
pop
sub
cmp
inc
mov
pop
jbe
mov
fsubl
les
fists
push
ss
xchg
xlat
into
jge
pop
stos
aam
arpl
jp
xor
dec
xor
mov
pop
mov
or
stos
inc
dec
ficompl
mov
out
outsb
out
pop
mov
pop
adc
insb
mov
xor
adc
lds
and
push
dec
test
pop
movsb
pusha
out
lcall
sbb
push
jbe
fcoms
faddl
jp
xor
push
cmp
push
imul
mov
mov
xchg
push
icebp
cwtl
stos
cmp
push
cmpsb
scas
arpl
and
pop
out
aaa
lods
xchg
dec
fisubl
cmpsl
lret
xchg
xor
mov
dec
je
xor
aam
sahf
cmp
xchg
add
jbe
stc
push
lret
bound
inc
pop
mov
jp
dec
fs
mov
loopne
pushf
sub
shlb
mov
dec
adc
pop
pop
add
pushf
push
jbe
mov
movsb
sahf
bound
popa
pushf
jge
cmpsl
cmp
mov
pop
jle
push
pop
sahf
mov
ss
push
movsb
pop
push
sbb
lods
int3
xor
je
push
mov
notl
mov
mov
mov
popf
jb
cld
aaa
int3
fs
sahf
mov
or
hlt
stos
dec
aam
add
add
jp
mov
push
mov
add
push
push
loop
sbb
push
hlt
test
out
clc
mov
das
insb
push
pop
mov
pop
sbb
dec
std
xor
sub
stos
hlt
sub
push
cwtl
lcall
or
pop
je
nop
sub
ret
shrb
mov
aam
ss
insb
or
movsb
sahf
mov
mov
pushf
andb
xchg
mov
xchg
das
lahf
mov
push
daa
sbb
lds
and
and
add
adc
call
clc
lock
cmpsb
dec
lret
fbstp
sub
out
popf
mov
jp
out
xchg
std
fwait
jp
movsb
out
mov
scas
dec
cmp
cwtl
xchg
pop
movsb
lods
dec
jb
xchg
pop
dec
js
xlat
sahf
mov
xchg
inc
fidivrs
ss
bound
jno
mov
mov
jo
out
mov
lret
fmuls
mov
push
mov
push
mov
xor
and
mov
mov
ret
loop
inc
or
xchg
pop
sbb
or
movsb
into
dec
int
sub
nop
pusha
mov
jmp
mov
or
sbb
cmovns
sbb
or
fcmovnb
inc
xchg
test
pop
sub
mov
sub
cmp
push
inc
sub
push
out
pushf
push
out
sahf
mov
lea
mov
cld
lock
insl
sub
js
sub
lock
pop
mov
xor
add
mov
stos
pop
dec
mov
pop
cltd
lret
sbb
stos
fisubl
add
mov
cld
cmp
cmpsb
fcomp
sub
push
or
adc
out
outsb
mov
xor
outsl
movsl
fwait
mov
nop
inc
cmpsb
dec
mov
dec
dec
xor
pusha
pop
mov
in
in
push
in
mov
inc
dec
int
in
mov
int3
adc
data16
loop
xchg
fsubs
dec
mov
pusha
push
pushf
ss
mov
int3
cmp
xor
pushf
int
outsb
ss
hlt
jb
sub
jmp
dec
dec
push
movsb
rcrb
test
push
push
lock
sbbl
mov
fsubrl
pop
xlat
pushl
xlat
mov
or
mov
std
ss
push
mov
cmp
je
lea
cmp
outsb
pop
pop
inc
jo
fs
mov
add
xor
inc
mov
xor
mov
xchg
lret
pop
lcall
push
pop
icebp
insb
inc
scas
and
pop
mov
push
mov
xor
xor
xor
inc
add
data16
xchg
scas
f2xm1
cmp
sbb
jle
stc
mov
out
shll
cmp
xchg
pop
sbb
fwait
mov
dec
push
rclb
sti
mov
sbb
shll
cmpl
ficoml
adc
js
mov
int3
xchg
jbe
push
sti
jmp
push
pusha
cmp
outsb
data16
mov
jnp
jo
imul
lods
pusha
cmp
mov
xchg
push
pop
push
fidivrl
mov
or
xchg
push
mov
pushf
or
or
outsb
push
mov
cltd
movsb
std
mov
pop
mov
add
lods
mov
aas
fmuls
decb
cwtl
movsb
adc
scas
arpl
push
aas
inc
leave
mov
outsb
cmpsb
mov
iret
inc
std
pop
dec
jp
imull
or
int3
out
mov
and
xor
sar
dec
fisubrs
lret
inc
rcl
mov
inc
sub
inc
cwtl
adc
rcl
outsl
ror
dec
test
xchg
mov
jo
mov
mov
push
js
inc
jl
mov
inc
mov
xor
jl
sbb
test
cld
fists
dec
jo
add
stos
push
pushf
pop
mov
dec
sub
jo
push
testw
nop
nop
rorb
pusha
fimull
xchg
cmp
push
lods
jno
cs
push
sub
xor
pop
pushf
cld
fildll
daa
mov
dec
mov
pop
int
inc
mov
es
push
lods
mov
je
aaa
mov
popa
cmp
outsb
jns
pushf
jl
mov
lret
fidivl
sub
fwait
dec
ret
daa
lcall
mov
outsb
add
and
outsl
dec
push
fwait
push
shrw
pop
dec
lock
sbb
stc
das
push
fcompl
mov
mov
enter
push
and
repnz
lcall
mov
ljmp
push
jp
jp
jl
into
adc
test
push
data16
shll
lods
sbb
pop
fildl
fidivl
stos
pushf
mov
inc
push
push
pop
sahf
jecxz
push
xchg
stos
cmp
mov
lret
mov
inc
jmp
or
xchg
inc
nop
outsb
lock
cmp
cmpsb
test
dec
adc
loop
lret
adc
movsb
mov
pushf
jnp
or
in
je
mov
mov
push
sbbb
mov
ret
sub
add
cwtl
fcoms
loope
bound
adc
and
das
mov
je
cmp
cmpsl
into
adc
xchg
jae
cwtl
arpl
xlat
mov
jns
push
jns
outsl
jl
cwtl
mov
adc
ret
cmovl
jecxz
dec
adc
dec
mov
pop
mov
mov
fdivr
or
jge
inc
cmp
jp
js
dec
jbe
mov
xor
je
in
scas
push
jne
lcall
pop
dec
cwtl
bound
lcall
je
ficoml
xchg
cmp
lret
mov
test
push
fisubrl
movsb
add
jmp
jo
jmp
test
xchg
xor
push
mov
xor
mov
push
dec
push
gs
or
shlb
or
daa
mov
push
xorl
outsb
cmpsb
lcall
ljmp
ljmp
sti
std
stos
push
sbbl
pop
pop
in
cwtl
outsb
movsl
movsb
pop
inc
xor
push
jb
adc
arpl
mov
dec
fldt
fisubrl
jae
xchg
lcall
inc
movsl
sbb
xchg
rol
out
mov
lock
fdivs
jle
xor
sbb
fadd
mov
bound
dec
sahf
push
jge
shrl
cmpsb
xchg
mov
or
or
jl
xchg
xchg
mov
cmpsb
stos
lret
push
movsb
aam
cmp
pop
mov
popa
daa
movsb
mov
ja
mov
bound
push
xor
stos
xchg
cmpsb
mov
inc
je
scas
inc
ficompl
jbe
imulb
lods
dec
cmp
nop
into
xor
fs
ss
data16
shlb
fnstsw
cmp
pop
xchg
fcoms
push
jae
fistpl
xchg
pop
jge
repz
jp
xchg
mov
xor
xchg
dec
cwtl
in
pusha
bound
dec
movsb
fmuls
xchg
xchg
test
inc
or
push
or
push
dec
mov
out
cld
pop
mov
mov
xor
movsb
stc
or
pop
or
loopne
mov
push
pop
pop
jp
fsubrl
sahf
mov
mov
aaa
psubd
cmpsb
aaa
jl
scas
push
mov
pop
mov
movsb
mov
or
dec
pop
sbb
test
outsb
mov
xor
push
ficoml
sub
cmp
push
test
add
xor
jp
daa
dec
dec
cmp
push
mov
jns
inc
mov
test
sub
mov
shlb
dec
cwtl
push
mov
mov
aam
pusha
movsl
cmp
jns
pop
pop
mov
jbe
lods
outsl
in
scas
cmp
or
ja
test
insb
dec
mov
cmp
cwtl
xchg
mov
jo
dec
inc
sbb
mov
lahf
mov
sub
adc
enter
add
inc
dec
lahf
dec
mov
pop
fsubs
mov
push
test
mov
sahf
sbb
ds
data16
xchg
pusha
lret
mov
jp
push
jnp
xchg
mov
xor
dec
es
dec
mov
out
xor
add
mov
mov
dec
xor
fcmovb
pop
int
mov
cmpsl
mov
rclb
inc
scas
ret
aas
or
movsb
stos
das
movsb
push
lods
sahf
stc
adcl
jp
shlb
test
xchg
jmp
addr16
pusha
mov
mov
add
jo
and
pop
mov
mov
pop
inc
fidivrs
pop
push
mov
enter
mov
mov
push
adc
test
es
test
out
add
and
in
mov
mov
push
jbe
jo
jb
mov
setle
inc
mov
cmp
mov
xchg
imul
bound
in
into
mov
outsb
aam
sti
mov
lret
add
jbe
or
push
icebp
sub
nop
out
dec
mov
lret
add
in
fiaddl
jns
aad
push
scas
push
add
jle
ja
pop
aaa
mov
fs
data16
xchg
mov
lret
dec
mov
test
xor
gs
stc
pop
jl
mov
sub
test
rcll
pop
rolb
shll
in
pop
xchg
push
data16
mov
mov
mov
xchg
push
aas
push
andl
insl
mov
mov
push
push
xlat
pushf
int
pop
cmp
xor
les
int3
sub
xor
add
xlat
nop
mov
scas
int3
pop
lret
mov
sar
inc
push
fdiv
push
sbb
mov
icebp
add
fidivs
xor
mov
push
rcr
mov
movsl
jbe
fcmovnu
insb
scas
mov
mov
lods
js
mov
or
mov
insl
pop
stos
mov
mov
je
out
mov
or
mov
dec
jge
cbtw
aas
pop
sbb
mov
lods
fwait
lret
rcrb
aam
mov
pop
push
mov
sub
ss
push
pusha
lods
sub
xchg
dec
icebp
mov
lds
push
cmp
cmpsb
sahf
push
scas
fidivl
mov
filds
and
add
rcr
mov
movsb
push
cltd
jo
jo
fidivrs
ret
test
mov
test
sub
ret
fwait
xchg
sarb
das
xchg
pop
jl
mov
mov
pop
and
jb
mov
sbb
scas
sub
xor
push
testl
dec
inc
jne
xchg
jnp
pushf
nop
hlt
insb
scas
int3
lds
out
push
cwtl
std
inc
add
jecxz
push
lods
mov
inc
jge
das
mov
lods
out
movsb
pop
out
in
or
push
mov
rcrb
je
je
pop
out
ljmp
push
and
lock
loope
xchg
push
jne
adc
clc
xchg
mov
dec
inc
mov
cs
pop
fidivrs
fdivrl
dec
dec
fldenv
into
sarl
xlat
pop
jmp
or
pop
lods
dec
sahf
add
xchg
sbb
subb
out
jnp
dec
nop
xor
scas
dec
push
adc
lret
sbb
add
fdivl
pushw
sub
fwait
subb
bound
pusha
sub
adc
jp
fmuls
mov
sti
mov
mov
sbb
dec
sahf
mov
cmp
loop
adc
inc
add
pusha
jle
int3
xchg
add
xchg
lea
jb
jnp
dec
sarb
out
push
dec
fdivl
cwtl
add
xchg
pop
leave
aas
int3
je
decl
sub
push
orb
mov
dec
pop
mov
stos
movsb
stos
loop
nop
dec
xchg
lods
sti
adc
xor
fcompl
andl
add
pushf
cmpsb
cmp
mov
sbb
lock
xchg
ja
sahf
pop
pushf
clc
sahf
mov
aas
mov
js
stos
dec
mov
mov
pop
cmp
shlb
lods
mov
jp
bound
dec
dec
dec
cmp
mov
lret
lock
data16
cs
mov
daa
sbb
jp
fwait
int3
sbb
fldt
push
cmpsb
out
mov
lods
insb
scas
jle
sarb
inc
inc
adc
push
movsb
xchg
movsb
mov
popa
cli
add
mov
xlat
and
push
dec
sub
sub
dec
and
push
and
push
pushf
jp
pop
shll
fmuls
fildl
je
ret
int3
pop
nop
ficoms
sti
mov
decb
pop
mov
mov
jae
pushf
jnp
mov
rclb
jb
xchg
sub
in
add
pop
int3
push
jbe
call
sbb
aaa
js
jp
lods
lcall
shlb
aam
imul
loopne
dec
jnp
lds
or
mov
data16
movsb
push
test
cmpsb
mov
jbe
sbbb
jae
dec
mov
lods
jle
and
sarl
out
lcall
mov
xchg
aaa
repz
jg
pop
aas
jns
mov
xchg
pop
jp
mov
enter
jecxz
dec
daa
dec
pushf
das
sahf
mov
shrb
ficomps
ds
fcmove
daa
lods
and
xchg
cwtl
inc
jns
jne
lahf
jns
fsubl
xchg
ja
pop
cmpsb
test
mov
mov
sbb
xor
xor
mov
bound
test
dec
mov
lcall
in
insb
pop
lock
pop
nop
xor
xchg
scas
rol
pusha
movsl
hlt
out
hlt
xor
bound
out
dec
jbe
stos
pusha
mov
lea
lret
mov
xlat
sbb
mov
sarb
cmp
jge,pn
inc
insl
mov
cmpsb
addr16
arpl
xor
pop
pop
inc
push
in
ret
movsb
xor
fsubrl
rorl
mov
xchg
stc
pop
arpl
mov
mov
jp
test
scas
lret
cld
sti
push
sbb
decl
js
test
push
mov
rcr
cmpb
mov
test
cli
gs
jge
outsl
pop
sub
insb
xchg
adc
dec
mov
fs
xchg
push
adc
xor
sub
rcl
das
movsb
mov
jg
lea
daa
and
ficoml
mov
sbb
pushf
fs
test
xlat
call
pop
into
scas
cmp
dec
pop
xchg
cmp
pushw
jle
mov
mov
aam
bound
addr16
add
outsb
cmp
xchg
or
fisttpll
inc
pop
adc
dec
pop
stos
mov
arpl
jbe
jmp
adc
dec
pop
and
dec
dec
jbe
fcoms
arpl
ret
stos
outsb
fmuls
push
xor
jbe
mov
aaa
mov
into
pop
dec
push
cs
aad
fldl
dec
int
dec
pop
cli
and
dec
mov
mov
add
sub
mov
hlt
dec
push
fisubl
aam
int3
pop
mov
lods
mov
mov
push
dec
xchg
lret
outsb
or
inc
mov
sbb
mov
push
push
lahf
data16
out
addr16
in
rolb
icebp
sbb
pushl
mov
mov
add
pop
rclb
int
pop
jl
push
push
in
dec
mov
bnd
and
lret
inc
mov
jne
rcr
out
jnp
aam
mov
iret
movsb
mov
pusha
mov
stos
sub
and
pushf
pushf
sbb
dec
pop
es
jb
pushl
lds
mov
dec
or
bound
stos
mov
jae
imul
lcall
push
mov
pop
js
fidivl
addr16
outsb
sub
mov
adc
mov
fidivs
inc
jno
jge
imul
scas
push
mov
push
mov
fs
mov
aam
test
daa
mov
add
dec
dec
negl
xchg
jl
mov
jle
xor
je
aaa
dec
into
mov
sbb
movsl
jmp
add
jge
cs
pusha
pop
data16
gs
out
lods
sbb
mov
push
test
xchg
cmp
xchg
mov
fs
or
dec
adc
xchg
nop
push
in
aaa
mov
pop
cwtl
fistps
pop
xchg
mov
jns
outsb
cld
and
lock
data16
pop
mov
sbb
or
push
sub
xor
sahf
mov
jb
fcmovne
mov
cmp
mov
nop
mov
adc
shrl
or
or
hlt
mov
push
jns
call
pop
xchg
pop
cltd
fiaddl
cld
and
lods
mov
mov
lahf
inc
pop
insb
outsb
mov
push
fdivrl
pusha
bound
push
js
xchg
aam
pop
pop
mov
jo
cwtl
jbe
xor
push
jns
pusha
cmp
jb
pop
fidivrs
pop
pop
mov
dec
jp
inc
in
in
mov
daa
adc
xorl
xlat
fwait
test
and
push
mov
rclb
pop
sar
fisubl
lods
dec
out
fwait
xchg
flds
sub
fdivs
inc
pushf
mov
push
stos
dec
inc
das
pop
fsubr
int3
clc
nop
ficoms
rclb
add
mov
data16
mov
fidivrs
test
dec
hlt
pop
mov
push
jb
pop
outsb
mov
addr16
pushf
mov
aam
bound
ret
rcr
xor
ja
sub
jp
inc
test
dec
loop
pop
add
cli
dec
pop
daa
movsb
mov
stos
cmp
cmpsb
push
subl
jne
mov
cs
ljmp
push
cld
in
lea
out
and
jecxz
nop
dec
pushl
cli
xchg
mov
gs
movsb
pop
jnp
pop
mov
cmpsb
aam
mov
jo
lcall
sbb
push
mov
pop
bound
push
push
rorb
mov
popf
out
stc
jnp
fs
adc
jge
das
cmp
shll
aam
fbstp
test
pushf
xor
xor
pop
dec
scas
loopne
gs
lret
shlb
adcb
dec
into
sbb
movsb
fdiv
lods
or
rcl
pop
mov
mov
mov
test
lods
adc
das
notb
xchg
xor
mov
mov
pop
pusha
sub
fsub
pop
push
dec
inc
mov
into
fs
dec
pop
inc
stos
bnd
jp
push
cld
stos
into
jle
sub
mov
sub
jb
ja
mov
fdivs
mov
mul
fsubrl
es
jp
sbb
das
adcb
into
jbe
mov
cmp
pop
cmp
lods
fdivrs
mov
push
mov
push
cwtl
add
movsl
push
imul
pop
pusha
js
jmp
mov
sub
jmp
push
add
sarb
add
jle
shrb
push
cmpsb
hlt
mov
outsb
fisubrs
mov
bound
cmpsb
hlt
add
xchg
sub
add
xchg
cs
test
lcall
pop
fcoml
out
mov
popf
dec
cwtl
dec
in
dec
fidivl
mov
repz
sbb
dec
loop
xchg
mov
lcall
mov
dec
cmpsb
das
jbe
push
mov
pushf
out
pushf
fcmovu
xchg
subb
mov
ss
fcomps
pop
pop
inc
fbstp
adc
cwtl
scas
pushf
and
push
mov
in
insb
push
ss
subps
daa
repz
lea
xor
and
out
fwait
xchg
jle
fildl
movsb
mov
jp
mov
mov
aam
dec
push
push
inc
pusha
mov
xchg
fsubrl
pop
inc
mov
xchg
into
jp
or
jbe,pn
test
push
cwtl
dec
cmpsb
fcmovne
lcall
mov
fs
lret
out
insb
movsb
sahf
inc
jb
lcall
xchg
arpl
imul
cmp
cmpsb
mov
mov
jbe
ret
dec
mov
inc
mov
adc
xchg
lea
cld
in
mov
adc
mov
mov
push
mov
dec
daa
pop
lcall
fadd
loop
mov
mov
xlat
nop
mov
cmpsl
imul
sarb
jl
insb
inc
inc
push
jl
fs
out
sub
mov
sub
mov
pushf
xchg
mov
out
mov
cli
push
cmpsb
imul
aam
lods
mov
mov
cmp
mov
rorw
jbe
inc
stos
cwtl
mov
dec
lea
daa
out
insb
and
faddl
in
rclb
add
jecxz
ljmp
test
daa
mov
imul
xchg
lret
xchg
mov
lods
dec
js
mov
xlat
xchg
jle
pop
xchg
xchg
sbb
dec
mov
pushf
pushf
shll
adc
nop
dec
lods
push
pop
ds
xor
xchg
jne
inc
xor
repz
add
mov
xchg
dec
sub
bound
mov
and
cwtl
cmpsb
shrb
inc
mov
pushf
icebp
out
nop
xchg
add
sbb
cmpsb
int
push
push
dec
aam
kmovw
push
pop
nop
fmuls
movsl
cmpsb
dec
hlt
mov
dec
sarb
xchg
outsb
jp
sub
pushf
jae
jo
or
lahf
pusha
push
movsl
stos
das
or
mov
mov
mov
test
xchg
push
push
jbe
lret
repnz
pop
aad
js
sti
into
dec
fs
stos
dec
xchg
lcall
xchg
push
bound
push
mov
movsl
sub
cmpl
mov
pop
add
and
sbb
xchg
pusha
stos
es
mov
les
mov
cmp
shrb
rorb
add
repnz
xor
dec
mov
add
add
add
cmp
jb
xor
cmp
mov
jp
ficoms
sbb
xchg
cmp
jb
and
sbb
in
aad
push
repz
fcmovu
or
fstpl
mov
mov
dec
es
mov
pop
pop
push
xorb
xor
pop
fdivrl
mov
pushf
fs
out
fldt
popf
jb
push
stos
aas
mov
pushw
jp
pop
call
cmp
data16
mov
dec
push
mov
jp
mov
sbb
jge
mov
dec
jp
sahf
fisubl
xchg
fnstcw
data16
mov
mov
pushl
xor
jp
cmpsl
aas
xchg
ficoms
xchg
dec
xchg
daa
xor
aam
jb
mov
add
xchg
mov
or
jp
fcomi
out
mov
xchg
das
cmp
jo
loopne
pop
aaa
stos
cmp
mov
fs
inc
pop
hlt
popf
ret
add
sahf
jp
fsubs
push
jmp
jge
insb
jge
dec
inc
lock
dec
nop
outsb
pop
xchg
dec
js
sahf
scas
js
mov
mov
dec
jl
pop
bound
sub
dec
pop
jp
mov
les
sub
daa
movsb
mov
test
add
jnp
je
arpl
mov
jge
clc
fcomps
fsubrl
pop
push
jae
dec
pusha
jno
in
and
dec
in
in
movsl
or
mov
lret
mov
mov
jle
movsl
xor
ss
jecxz
sbb
jns
je
je
jp
cmpsb
inc
dec
fisubrl
fcompl
movsb
mov
lcall
insb
sbb
inc
dec
jo,pt
mov
lock
cmp
pushf
ja
int3
mov
or
rorb
jo
sarb
jb
mov
push
pop
push
jmp
cmp
lcall
fs
push
jb
cwtl
lahf
mov
fisubrs
xchg
ficoms
inc
cmpsb
mov
xchg
test
or
add
leave
sbb
das
std
repz
movsl
mov
dec
fimull
pop
cmp
cmp
mov
mov
cli
cli
xor
adc
fwait
dec
mov
lret
push
xchg
imul
jno
mov
stc
pop
mov
xor
fisttpll
bound
data16
sti
push
push
jp
add
pop
mov
pop
push
jb
push
test
leave
test
int3
cwtl
stos
mov
mov
nop
mov
mov
cwtl
cld
notb
and
fcomps
mov
dec
fiaddl
mov
lret
pop
cmp
sbb
sbb
pop
push
pushf
cmc
fstpt
js
aad
fs
fcmove
cld
rclb
movsb
xchg
test
lods
xchg
mov
push
sub
pop
mov
stos
in
jl
lret
int3
adc
xchg
xchg
push
xor
jmp
xor
pushf
xchg
dec
mov
rcrb
int3
je
mov
cmpsb
scas
mov
stc
push
pop
stos
popf
popa
cmp
lods
mov
lret
aaa
or
lcall
pusha
je
insl
xchg
test
xor
push
enter
or
in
aam
lock
loop
mov
inc
out
aaa
insl
pop
cmp
imul
mov
push
fdivl
mov
pop
mov
mov
das
cs
insb
out
or
jmp
mov
mov
mov
mov
mov
sub
sub
adc
aas
mov
ret
arpl
out
cmovle
sbb
cmp
lret
push
push
mov
cmp
mov
inc
fs
mov
out
mov
jo
fidivs
insb
rcrb
insl
xchg
fsubrs
mov
and
and
mov
sti
imul
pop
add
xor
mov
jo
sahf
dec
mov
mov
mov
push
lret
test
ss
fcoml
insb
jmp
scas
cmp
mov
dec
inc
xchg
push
mov
pop
movsl
jbe
insb
fldl
cmp
dec
imul
mov
jb
sub
jmp
ja
mov
cmp
fimuls
out
jg
lods
mov
andps
dec
dec
outsb
lret
push
cmp
jbe
xchg
xchg
push
add
sahf
cmp
stos
lret
mov
std
insb
mov
mov
push
lods
push
scas
sub
js
sahf
fwait
dec
sub
fisubs
ss
lcall
push
mov
xchg
xchg
enter
cld
sbb
mov
pop
or
sbb
hlt
xchg
je
xor
mov
cs
dec
lret
mov
sahf
pop
dec
jl
mov
daa
xchg
aaa
and
xchg
les
testb
fs
cli
lods
pushf
mov
nop
dec
mov
lods
inc
mov
cli
xor
cmc
inc
daa
js
dec
pop
cmp
lods
fmull
loope
in
mov
and
mov
pop
xchg
cld
push
pop
out
fidivrl
cli
dec
movsb
pop
cmp
fcomp
fmull
inc
mov
cld
insb
movsb
popf
add
loopne
inc
sbb
pop
sbb
mov
mov
or
push
inc
xchg
mov
xchg
out
mov
inc
sbb
fdivrl
arpl
inc
nop
xlat
movsb
jno
mov
subl
sahf
cmpb
les
nop
scas
xchg
adc
stc
and
cmpsb
hlt
lret
repz
pop
xchg
xchg
xchg
into
and
jmp
xchg
dec
mov
les
sub
mov
nop
fdivrs
in
mov
mov
dec
mov
pusha
pop
mov
adc
lret
push
fisubs
movsb
insb
push
aam
pop
mov
push
add
in
loop
mov
scas
sarb
jp
outsl
lods
lret
cmp
pop
cmpsb
push
aam
cli
sbb
cwtl
xor
push
mov
mov
nop
dec
xchg
mov
jae
lods
aam
out
fists
insb
add
inc
push
pop
add
push
pop
mov
sub
daa
cmc
scas
push
xchg
mov
push
mov
lods
lret
or
xor
mov
out
jp
insl
mov
fmul
jo
push
cmp
jbe
bound
nop
je
pop
push
mov
fs
in
push
mov
aas
imul
mov
cwtl
cmp
in
xchg
and
fmulp
dec
mov
jb
or
popf
ficoms
and
sub
mov
lcall
mov
cmpsl
inc
push
int
daa
out
dec
xor
xor
lret
lcall
pop
cwtl
sbb
imul
rclb
xor
mov
ljmp
in
xor
lea
nop
mov
scas
lods
xchg
add
sahf
pop
add
push
into
push
outsb
divl
mov
jnp
stos
dec
loop
xchg
aas
xchg
pop
sahf
aaa
pop
mov
add
cs
xchg
pop
lcall
push
jl
jbe
fwait
jne
mov
jae
pop
das
cmp
lods
bnd
insb
nop
sahf
cwtl
dec
push
jno
push
aaa
mov
je
subl
push
aam
jae
push
pusha
push
mov
mov
lods
pop
out
int
repz
cmp
push
dec
mov
cs
mov
fs
pusha
cmpsb
cmp
mov
aad
pop
add
fsubrs
add
bound
aam
cmpsb
pop
pop
int3
sub
mov
jns
aam
xor
jg
fmuls
or
pop
push
scas
shlb
jp
push
dec
mov
push
lods
push
xor
dec
fs
mov
xor
in
sub
mov
dec
lcall
insb
pop
int3
xchg
shlb
rorb
jbe
test
cs
jb
js
mov
cmp
push
insb
aad
inc
inc
aas
hlt
mov
push
inc
int3
loope
mov
dec
pusha
nop
push
pushf
stc
fwait
mov
sub
fsubl
push
push
mov
cwtl
hlt
dec
nop
sbb
sahf
push
sti
aas
mov
aam
inc
movsl
xor
jae
pusha
faddl
loopne
mov
xor
rclb
in
jbe
sti
mov
mov
int3
icebp
pop
push
andb
shl
rorb
clc
xchg
jbe
jl
bound
ret
stos
cld
lods
hlt
dec
std
cmp
jb
ss
into
jne
xor
push
testb
insb
stos
jnp
dec
mov
jge
xchg
outsb
xor
arpl
xchg
aaa
mov
cmp
pusha
ret
xchg
cld
sahf
xor
addr16
mov
fdivl
or
loop
fs
cmp
fmuls
sub
mov
xor
or
inc
shll
xchg
nop
mov
mov
xor
dec
je
dec
xchg
jmp
sub
sbb
cmpl
popf
push
fdivr
dec
out
add
mov
fisttps
fstl
out
loop
jno
fwait
shrb
pushf
outsl
inc
lock
mov
jp
pop
fdivrl
xchg
sub
mov
push
nop
pop
ljmp
es
pop
push
xlat
push
mov
push
push
mov
ret
push
ficomps
pop
mov
or
mov
sti
dec
push
mov
xchg
int3
lds
in
cmp
push
shlb
mov
xor
or
fsubrs
and
mov
repnz
shrb
push
lret
adc
jo
shlb
fimuls
lret
test
push
xchg
xor
xor
or
pushl
pusha
cmpsl
and
inc
in
les
bound
aas
dec
rorb
dec
out
mov
push
push
mov
or
sbb
mov
ja
dec
or
adc
mov
ss
fsubl
scas
fildl
lcall
nop
lret
jmp
mov
push
jp
push
pop
inc
jle
add
dec
inc
xchg
imul
aam
pushf
push
jl
mov
outsb
lcall
mov
push
push
fldt
pop
rcl
and
cmp
into
addr16
loopne
mov
pop
cmp
data16
aam
loopne
lods
out
mov
call
nop
lcall
adcl
or
bound
mov
push
sarl
int3
adc
sahf
jp
leave
mov
mov
sub
mov
jp
je
xchg
imull
or
lods
push
or
rolb
pop
into
fistl
and
pop
jb
iret
jl
ficoms
sarl
xchg
add
sub
lock
mov
mov
fcmovbe
dec
fsubl
jg
dec
adc
sbb
fisttpl
shll
movsb
jge
shlb
lret
cwtl
lret
push
pop
cmp
push
fcomps
mov
js
cmp
fmull
mov
fsts
mov
add
cs
pop
inc
and
iret
jns
mov
stos
fcoml
mov
push
lret
js
ja
dec
mov
mov
mov
push
lahf
mov
dec
jnp
test
rcrb
push
pop
pop
mov
mov
enter
push
arpl
inc
fidivrl
mov
dec
in
je
add
mov
fsubl
dec
out
xlat
test
cmp
stos
push
jnp
jo
add
lcall
xchg
mov
cwtl
enter
sbb
sub
push
shlb
mov
imul
fmuls
pop
je
ret
mov
mov
or
fadds
fdivs
pop
pushf
lods
fs
add
je
repnz
lods
dec
xlat
dec
inc
js
pop
pop
jp
je
dec
dec
jbe
add
cmpsl
jns
pop
inc
jl
pushf
dec
jl
hlt
push
pop
jbe
pusha
test
or
sbb
loopne
sahf
xlat
pop
lret
xor
xchg
aam
xchg
mov
in
mov
dec
addr16
pop
mov
lock
sub
fdiv
push
xchg
pushf
mov
mov
pushf
movsb
sarb
dec
cmpsb
int3
add
xchg
dec
repz
bound
mov
dec
ss
xor
dec
js
loopne
dec
aam
jb
cmp
jbe
xor
mov
xor
pop
jnp
adc
cmpsb
jns
dec
add
es
sub
pop
lcall
sahf
jnp
cmpsb
fistl
push
bound
xchg
fisubrs
mov
dec
cmp
mov
aam
cmp
js
fwait
push
inc
insb
pop
nop
pop
sub
mov
xor
mov
das
mov
mov
dec
fdivrl
mov
loopne
mov
mov
addr16
cmp
fidivl
pop
bound
je
jae
cs
lea
shl
sbb
jb
mov
cmc
rcr
stos
pop
lods
adc
jmp
pop
cwtl
pop
daa
and
xor
and
jbe
cltd
mov
nop
popa
inc
jmp
mov
int3
jnp
aam
mov
in
push
out
cmc
xor
jb,pn
test
fisttpll
pop
movsb
inc
jbe
lods
dec
mov
add
lret
pop
xchg
sarl
scas
int3
lret
jle
mov
bound
addr16
fsubs
xor
add
nop
sbb
sti
in
imul
hlt
sbb
xor
adc
mov
pop
sub
pop
jnp
pop
xchg
pop
sbb
jge
popf
into
push
pop
data16
dec
mov
and
dec
cmpsb
pushf
mov
sub
mov
push
cwtl
mov
mov
lods
mov
mov
fidivl
mov
decb
xor
test
ss
add
je
into
xor
mov
fisubrs
rorb
or
jae
stc
xchg
pop
std
aas
push
mov
push
jl
jbe
je
sbb
xchg
jo
movsb
xor
push
mov
sub
insl
out
fcoms
jg
xchg
jecxz
pop
ds
push
scas
lret
pop
loopne
fsubs
xor
or
xlat
mov
jbe
xor
mov
xor
xchg
into
das
popf
pushf
insl
je
and
imul
mov
push
addl
mov
mov
push
push
push
mov
push
jg
fisttpl
xor
lcall
jg
ret
negl
lea
fmull
notl
mov
mov
lods
xor
mov
mov
fadd
mov
push
add
and
dec
jp
inc
ss
push
fcoms
mov
std
sub
fisttps
jl
pop
or
outsl
mov
mov
xor
push
jnp
dec
testl
add
stos
cmpsb
mov
dec
daa
fcmovbe
scas
movsb
xor
jp
and
mov
jb
mov
ret
movsb
fildl
inc
sbb
cmova
pushf
sub
rorb
out
shlb
mov
ljmp
xor
pop
mov
cwtl
shll
dec
sbb
xchg
outsb
loop
out
je
lret
daa
mov
add
cmp
mov
mov
sahf
xchg
rorl
iret
repnz
cmp
push
lock
insb
add
test
hlt
sub
mov
xchg
aas
stc
cmp
inc
fnstenv
push
cwtl
test
je
clc
punpckldq
mov
mov
mov
insb
mov
mov
int
push
stos
xchg
repz
js
cs
leave
aaa
lock
int3
fs
cmp
loopne
jmp
xchg
sub
cmp
dec
scas
mov
into
les
push
xchg
outsb
push
mov
pushf
cmpsb
lret
sbb
pusha
pop
hlt
dec
outsb
sub
pop
dec
inc
mov
xchg
add
aam
mov
stc
xchg
into
jp
fmull
push
gs
pushaw
inc
xor
aam
sbb
pop
dec
fisubl
int3
js
div
mov
ja
outsb
jo
pop
scas
int3
add
pop
scas
jo
pusha
push
sahf
nop
xor
mov
aad
mov
cmp
dec
xchg
movsb
test
mov
pop
adc
sahf
bound
imul
xchg
cmp
and
jp
adc
lods
pop
movsl
mov
mov
sub
lods
adc
cmp
jle
into
jp
bound
jmp
sti
int3
lods
or
lods
mov
pcmpeqb
cmc
sub
outsb
mov
outsl
pushf
cmpsb
outsb
jns
aaa
push
sahf
std
ret
xor
hlt
pop
mov
sbb
fidivrs
cmpsl
call
dec
popa
jl
int3
sbb
add
push
pop
sbb
test
xchg
or
divl
mov
test
fidivrl
js
jns
pop
cld
hlt
push
push
adc
js
jp
stos
jbe
push
and
mov
xchg
dec
lods
mov
jp
fiaddl
ljmp
das
xchg
stos
ficomps
scas
rcr
in
bound
pop
push
xchg
cmp
jo
jbe
aas
fldenv
inc
fidivl
cwtl
mov
inc
push
mov
fmuls
lcall
or
scas
mov
movsb
test
fwait
dec
rclb
or
jne
mov
and
add
pusha
daa
or
dec
test
sub
sub
dec
pop
add
push
mov
mov
cmpsb
mov
mov
pop
dec
cltd
sarb
mov
pusha
lcall
gs
push
sub
fs
sti
sbb
ficoms
mov
jl
pop
push
cmp
dec
sahf
lcall
xchg
cwtl
push
mov
jno
pop
pop
jb
mov
sbb
push
xchg
mov
dec
gs
mov
js
xor
cmp
mov
push
fdivl
jno
lods
aaa
fmuls
jb
jbe
xchg
push
out
add
mov
dec
mov
mov
sub
cmpsb
rorb
movsb
mov
shrb
adc
dec
push
mov
scas
mov
sbb
add
data16
fmull
das
jp
inc
inc
mov
aaa
push
jo
cmpsb
mov
xchg
pop
push
or
cmp
mov
push
inc
cmp
mov
repz
or
mov
enter
in
and
pop
xchg
sub
push
lcall
xorl
adc
divps
and
je
mov
xchg
ss
sahf
imul
jo
stos
and
mov
nop
lcall
inc
shl
xchg
inc
pop
js
fisubrs
imul
rcr
hlt
push
leave
test
mov
mov
xor
pop
mov
add
lret
push
fdivr
shlb
mov
daa
ds
adc
les
daa
in
xsaveopt
enter
jb
lcall
and
cld
movsb
js
lret
adc
xchg
roll
xor
mov
cs
out
dec
stc
mov
push
pop
push
pop
mov
insb
outsb
xor
pop
repnz
movsb
nop
and
jb
movsl
fildll
add
fdivrs
mov
popa
pop
mov
lods
xchg
movsl
sub
cwtl
sti
mov
je
in
arpl
pop
sar
mov
call
inc
push
out
fistl
lahf
mov
jecxz
xchg
pop
add
pop
cmp
pop
sub
pop
nop
lods
jp
push
fisubl
mov
inc
imul
adc
out
mov
outsb
mov
xchg
cmp
push
dec
lcall
sub
mov
cwtl
mov
cmpsb
into
sbb
sub
jbe
jns
mov
stos
and
shlb
push
xor
inc
repz
pop
pusha
outsb
pop
xor
mov
mov
sub
nop
pushf
mov
ljmp
dec
imull
pop
lret
int
mov
shll
add
ret
sahf
repz
xchg
jb
ficoms
and
dec
das
lcall
iret
push
cs
fmull
mov
fdivs
dec
jns
shl
jb
mov
dec
idiv
into
out
pop
push
mov
jb
ja
aaa
jle
lcall
jbe
mov
std
lcall
insb
xchg
pushf
lods
cltd
test
jns
pusha
lret
push
add
mov
xlat
inc
iret
dec
jg
xchg
out
mov
cmp
stos
jp
cwtl
mov
jg
in
daa
nop
dec
pop
data16
jmp
mov
xchg
xchg
mov
lret
jmp
daa
mov
jno
sahf
ss
adc
mov
frstor
xchg
dec
movsl
js
jae
mov
mov
pop
outsb
cmpsb
cmp
cmp
aam
pop
ficompl
push
sbb
xchg
jo
mov
dec
fiaddl
out
nop
mov
fsubrl
xchg
and
cli
push
jb
sub
mov
fstpt
imul
in
scas
fstpt
into
nop
je
fidivrl
shlb
faddl
imul
fstpl
ret
jno
in
cmpsb
mov
data16
mov
cmp
bound
je
fmul
shlb
leave
mov
stos
scas
setbe
mov
sbb
ss
push
lock
mov
mov
fwait
jb
pop
dec
push
lods
sahf
in
sub
ficoml
sub
pop
mov
es
daa
lcall
orb
into
mov
aas
sbb
sbb
je
add
into
inc
hlt
mov
cld
push
and
push
jmp
cmp
mov
xchg
shrb
orl
test
xchg
or
dec
pop
dec
cmp
fdivrl
pop
ret
adc
mov
pop
pusha
pushf
es
movsb
or
into
push
push
aam
and
lods
movsl
pop
rcrb
repnz
xor
mov
xor
outsb
pusha
or
pop
stos
push
jp
add
xchg
dec
and
push
mov
jo
mov
pop
mov
lret
xchg
xchg
and
mov
pop
dec
cwtl
add
ss
push
sbb
dec
test
adc
lret
dec
push
cwtl
fsubrl
into
xchg
mov
mov
cmpl
dec
cmp
fmull
mov
push
nop
movsl
and
das
test
dec
mov
test
inc
mov
push
mov
into
jp
cmp
dec
pop
fdivl
xchg
ja
pop
into
cmp
insb
push
mov
jle
arpl
mov
dec
lods
add
xchg
mov
jbe
sub
hlt
js
rolb
hlt
xchg
xor
pusha
jg
mov
rol
fadds
jge
lods
nop
movsb
mov
jnp
stos
mov
testl
jp
out
xchg
dec
lock
push
js
daa
fistps
test
cs
fs
outsb
push
dec
pop
mov
pop
shrb
je
fdecstp
arpl
mov
mov
push
push
scas
and
mov
xor
mov
ss
inc
dec
stos
mov
jle
inc
ficompl
jl
bound
pop
fldt
fstpt
or
sbb
hlt
xchg
sarb
daa
pop
fsubl
ljmp
jae
mov
in
sbb
sbb
popa
ret
movsb
add
pop
ret
movsb
push
sub
cmp
push
mov
movsb
cmp
mov
bound
inc
xor
lods
ss
lret
mov
pushf
mov
lcall
xor
jo
jp
daa
push
repnz
dec
mov
mov
pop
pop
cld
sub
mov
lock
and
int3
cmp
movsb
cwtl
jo
and
xor
adc
scas
sarl
sub
mov
fs
lds
pop
jp
cld
adc
or
push
sahf
sbb
dec
mov
mov
sub
cs
jbe
out
hlt
sbb
xor
mov
pop
mov
jmp
xchg
push
and
mov
mov
mov
mov
mov
hlt
xchg
push
movsb
xchg
into
pusha
push
sbb
mov
sbb
cmp
mov
in
push
sub
cwtl
pop
jp
mov
push
test
pop
push
jb
cmpl
lret
mov
dec
push
xchg
fs
loop
jne
iret
add
cwtl
in
jo
cmp
mov
cli
push
push
xor
mov
pusha
xor
cmp
js
int3
mov
stos
shll
xchg
int
mov
sahf
dec
mov
cwtl
fldl
or
jns
pop
mov
push
sarb
push
inc
movsb
loopne
push
xchg
in
fsubrs
mov
stos
and
jmp
sub
pop
fsubrp
in
push
xor
xor
pushf
add
movsl
mov
mov
movsb
lret
inc
dec
scas
adc
mov
sarb
mov
jp
push
xchg
mov
mov
aam
fistl
sahf
or
mov
mov
in
lret
js
aaa
jae
jo
push
mov
movsb
push
dec
fstpt
lcall
shr
add
jns
add
shlb
pushf
les
pop
xor
fucomi
xchg
les
lret
push
cmpsb
jb
add
sti
jmp
mov
lret
xchg
lods
mov
lods
mov
jp
lret
xor
pop
pop
insl
jp
lahf
movsl
mov
aas
jb
dec
mov
mov
adcl
pop
nop
cmp
push
mov
adc
in
add
mov
mov
mov
orb
int3
xchg
sub
outsb
js
mov
push
stos
imul
push
inc
test
rcrb
push
fwait
cmp
sbb
push
andb
jb
jp
mov
mov
leave
jg
mulb
push
jl
lcall
cwtl
sahf
pop
fs
pop
outsb
pushf
xor
ja
sbb
dec
adcl
xchg
rorl
mov
mov
and
mov
cwtl
push
data16
movsl
pop
nop
jp
xor
push
fiadds
xchg
mov
adc
add
push
xchg
arpl
js
pop
mov
pop
dec
pop
test
in
jbe
aam
xchg
cmpsl
aam
inc
mov
xchg
xchg
sub
test
xchg
adc
mov
out
loopne
pop
cmp
pop
fcom
mov
dec
lods
dec
sahf
inc
js
dec
dec
pop
iret
loopne
int
sbbl
movsb
rclb
les
or
fistl
stos
push
in
je
adc
cwtl
mov
aas
and
mov
fcomps
loope
fs
cmp
scas
mov
adc
in
nop
cmp
xor
sar
dec
lea
and
push
xchg
and
lods
push
out
dec
ss
dec
add
addr16
mov
repnz
scas
inc
fisttpl
and
dec
mov
movsl
mov
dec
mov
mov
cwtl
js
pop
aaa
adc
pop
push
test
sub
dec
data16
int
jl
daa
scas
test
mov
cmpsb
xchg
sbb
movsb
nop
push
ds
hlt
mov
pop
jp
mov
lahf
add
mov
jbe
scas
push
jno
cli
lret
mov
sahf
pop
push
xchg
mov
outsb
jp
dec
mov
pop
insb
nop
mov
jnp
sbb
add
dec
mov
lcall
sbb
mov
lahf
cmp
dec
mov
sbb
adc
lcall
jb
inc
cmpsb
add
movsl
out
xchg
int3
data16
xchg
rcrb
push
shrb
les
repnz
dec
pop
inc
xchg
add
repz
jle
pop
push
popf
pop
inc
xchg
enter
sahf
nop
jbe
sbb
dec
sub
lret
fcompl
jns
push
jl
xchg
js
sub
jle
cmp
into
pop
loopne
mov
inc
test
push
bound
out
xlat
and
jle
fwait
push
dec
bound
inc
mov
dec
push
mov
andb
push
adcb
ret
inc
cmp
ljmp
push
jno
bound
mov
fiadds
xlat
pop
or
inc
stos
dec
enter
aam
loopne
scas
inc
jmp
ret
add
inc
sbb
insb
add
mov
inc
xchg
xchg
add
out
inc
imul
inc
xchg
cwtl
add
jmp
push
pop
xchg
cs
push
outsb
push
and
test
add
loopne
mov
ds
pop
into
rorl
nop
movsb
cmpsb
cwtl
dec
stos
mov
cmpsb
test
sbb
mov
aad
in
mov
aad
push
std
sbb
shll
jecxz
adc
hlt
loopne
mov
xor
sti
cmp
push
lret
aad
mov
into
add
fisubl
mov
fs
sub
dec
mov
inc
cmp
fwait
push
lds
fidivrl
mov
ds
imul
cmpsb
xchg
sti
sbb
inc
sahf
push
mov
pop
push
scas
xchg
movsl
fdivrs
jo
pop
rorw
nop
fiaddl
mov
sub
bound
std
push
mov
add
or
nop
outsb
mov
fdivrs
and
fmul
pop
sub
rclb
pop
fsubrs
sti
jmp
pop
fisubl
dec
lret
mov
hlt
push
movsl
mov
aaa
pusha
fcomps
je
jae
in
jbe
out
mov
lret
cwtl
mov
push
add
mov
mov
sti
in
int3
sbb
fists
and
mov
xor
js
adc
cmp
outsb
lods
ds
jns
jb
lret
sub
fs
mov
dec
inc
mov
pop
lods
jp
push
adc
jae
dec
sub
pop
jecxz
pop
mov
cmp
enter
dec
cmc
aam
mov
cmp
push
lretw
mov
dec
push
mov
frstor
inc
pop
cli
pusha
mov
in
jb
jmp
js
mov
inc
inc
dec
lcall
outsb
scas
jo
js
out
lcall
lds
pusha
loope
sbb
inc
adc
add
in
repz
notb
aaa
int3
mov
lods
pop
mull
lock
mov
jo
fmull
xor
jbe
add
adc
lods
cmc
movsl
sub
jae
mov
cld
aas
pop
loopne
jb
lret
cwtl
stos
xchg
sbb
cmpsb
mov
or
aas
mov
shlb
dec
adc
data16
insb
into
mov
dec
stc
das
call
movsl
in
hlt
add
fwait
lds
jp
lods
fbld
enter
shl
push
les
mov
sahf
in
dec
xchg
lret
jp
xor
bound
dec
push
dec
daa
mov
int3
xchg
mov
sahf
movsb
lcall
dec
out
jo
mov
xor
insb
jp
xor
mov
mov
jbe
lods
mov
fmull
sub
pop
mov
sbb
sbb
mov
mov
and
xor
xor
cmp
pop
jp
xor
xchg
sarl
sbb
jo
sub
add
push
mov
lods
test
imul
cmp
push
mov
int3
test
movsl
ss
dec
test
jns
lahf
jge
or
jl
adc
into
mov
faddl
out
inc
xor
push
jle
inc
mov
jge
mov
xchg
xor
sbb
sti
xor
dec
aam
inc
and
mov
pushf
cmpsb
jecxz
lods
lds
mov
loop
jp
xchg
aam
fstpt
pushf
pop
movsb
enter
mov
icebp
jns,pt
xchg
iret
sbb
sub
out
out
stos
sbb
cmp
xchg
mov
jecxz
mov
fimull
lret
lods
in
xchg
sbb
fcomps
adcb
push
lds
lahf
lret
aad
adc
nop
cmp
push
pop
js
je
xchg
dec
and
sub
adc
lret
call
cmp
js
shrb
out
add
sahf
bound
mov
dec
fisubrl
fidivrl
outsb
stos
lock
mov
shlb
out
inc
cmp
pop
lods
jo
daa
mov
stos
insb
adc
sti
mov
mov
cmp
into
js
fwait
sahf
pop
out
rcl
sub
fidivs
mov
insb
jp
js
jmp
movsl
loopne
fidivl
add
pop
sub
mov
addr16
cmp
xchg
insb
mov
sti
and
pop
jbe
jo
pusha
cmp
fcoms
loop
mov
sub
xor
mov
mov
dec
stos
pop
and
aam
test
inc
outsb
ficomps
cld
dec
data16
jp
pop
inc
mov
dec
hlt
mov
in
and
xor
mov
pop
fidivl
int3
aas
test
lret
jb
jp
mov
jl
push
js
pop
push
mov
dec
into
fdivl
jbe
pop
jb
das
pop
stc
mov
addr16
enter
dec
mov
fists
jnp
into
push
shrb
adc
mov
stos
lea
xchg
js
mov
mov
mov
ja
dec
cli
mov
mov
sbb
fmuls
jne
int3
sbb
dec
push
sub
sub
scas
jo
nop
repz
cmp
cwtl
mov
sbb
mov
int
cmp
rorb
adc
dec
shlb
pop
mov
arpl
push
fmuls
test
or
jle
stc
dec
cmp
subl
mov
pop
fidivrl
xchg
lds
mov
jl
fsubrl
mov
pushf
dec
int3
add
push
mov
push
xchg
lret
ficompl
or
sub
mov
lods
imul
out
adc
aaa
sahf
pop
mov
cmpsb
xor
xchg
sti
cmp
je
pop
test
xchg
pushf
mov
repz
repz
xchg
aas
test
int
xor
push
into
cld
sbb
pop
insb
add
xor
outsl
jp
cmp
inc
xchg
nop
fistl
fs
cs
pop
push
loopne
sub
push
xchg
lret
xchg
hlt
mov
notb
jns
lcall
sub
pop
dec
lock
fs
xchg
push
cmpsb
sub
xchg
fmuls
lods
inc
fcoml
jg
jo
loopne
pop
or
test
mov
je
dec
pop
add
sub
pusha
fmul
nop
movsb
pop
cmpsb
decl
lahf
lret
cwtl
out
adc
mov
dec
push
hlt
lods
out
mov
xchg
sub
push
mov
je
mov
xor
outsb
xor
addb
test
fdivl
outsb
xor
push
mov
jp
data16
jbe
insb
frstor
dec
xchg
mov
xchg
les
xchg
daa
pop
push
test
and
rcrb
inc
scas
inc
pop
shlb
jp
mov
sarl
pop
pusha
push
mov
rcrl
jp
push
cmpsb
daa
in
mov
jp
nop
xchg
jb
jp
cld
sbb
cmpsb
add
push
jp
lds
xchg
push
rolb
cmpsb
mov
test
test
pop
mov
xor
push
pop
pusha
or
jmp
faddl
setbe
pop
je
jbe
out
inc
pop
push
dec
jb
xlat
pop
cmp
pop
push
pop
push
push
mov
int3
cs
mov
mov
data16
mov
jns
lret
dec
lods
into
jns
push
jl
jp
cltd
dec
jl
data16
imul
mov
inc
pop
cmpsb
cmp
je
mov
pop
lcall
xchg
mov
add
push
fsubl
fisubl
dec
mov
cmp
lods
test
xchg
xchg
jp
sub
xorl
aam
mov
outsl
and
push
add
pop
loopne
add
mov
movsb
and
idivl
lret
cmpsl
cwtl
rclb
sub
bound
push
scas
fcoml
jo
mov
shl
push
add
inc
and
cwtl
mov
mov
mov
fcoml
pushf
jno
xchg
lcall
mov
movsb
aam
test
inc
push
add
mov
and
mov
test
test
mov
loopne
ficoms
rclb
dec
and
push
mov
das
ficompl
nop
fcoms
jecxz
in
fs
dec
jbe
pop
mov
insb
pushf
movsb
in
push
popa
mov
dec
jbe
add
mov
loop
lahf
and
sahf
dec
pop
or
push
push
lcall
adc
xchg
push
pop
aam
pop
and
into
mov
shll
or
dec
push
xchg
mov
mov
or
sbb
or
dec
jp
je
aam
mov
cmp
inc
and
mov
ljmp
pop
test
or
ret
pop
push
pushf
mov
dec
pop
xchg
dec
or
xchg
addr16
insb
arpl
adc
cs
mov
lods
mov
das
push
stos
mov
sub
push
subl
mov
lods
mov
push
mov
xchg
int3
test
dec
mov
pushf
mov
subl
jo
pusha
sub
push
rcrb
test
cmpsb
mov
data16
push
jmp
dec
add
in
adc
clc
fistpl
cmpsb
scas
jae
sbb
arpl
fcmovb
cli
in
fsubr
int3
imul
dec
mov
fsubs
pop
dec
ror
inc
stos
mov
mov
push
inc
repnz
stos
and
pop
stc
in
das
ret
push
mov
pop
push
mov
jl
dec
mov
loope
sarl
inc
aaa
push
xchg
pop
insb
aam
add
mov
dec
lods
je
lcall
dec
mov
xchg
mov
add
rorb
outsl
pop
pop
mov
mov
cmpsb
mov
xor
testl
mov
out
ret
pushf
and
dec
jp
dec
mov
lret
scas
bound
mov
test
lods
hlt
dec
pop
cld
ficompl
xor
movsl
pop
mov
jo
mov
pop
mov
or
mov
mov
int
into
addr16
jbe
int3
aam
or
shlb
in
stos
push
into
xchg
jne
and
mov
mov
mov
cmpl
ret
add
jg
pcmpgtd
add
je
mov
xor
bound
je
daa
insl
insb
cs
nop
sub
std
cmpsb
pop
inc
daa
or
cmpsb
mov
mov
cld
sub
ss
test
mov
popf
pop
addr16
popa
dec
call
pushf
inc
loope
dec
sbb
lcall
lods
movsb
in
sub
push
call
mov
jne
adc
sub
dec
mov
test
movsb
push
das
movsb
fimull
test
fsubrl
cmpsb
pop
push
icebp
int3
mov
and
push
push
jb
mov
push
daa
add
fdivrs
dec
mov
out
jp
pop
dec
push
mov
mov
aaa
mov
push
dec
ficompl
xorb
adc
pusha
bound
repz
nop
lret
insb
rcrl
mov
jbe
pushf
xchg
lock
sbbb
out
daa
push
shlb
enter
cmpsb
dec
xor
pop
das
mov
add
push
dec
aam
sbb
lret
imul
mov
and
pop
ja
lcall
in
in
cmp
xchg
imul
lds
cltd
lock
dec
lds
out
frstor
cmpsl
mov
and
aam
dec
sbb
repz
insl
sar
ds
pop
jg
lcall
inc
fldt
jns
lods
jb
mov
lods
inc
pop
push
push
pop
xchg
jnp
cmpsl
add
sub
xor
dec
xchg
repz
lret
aad
lcall
ret
sahf
andb
subl
test
sarl
in
inc
mov
mov
scas
mov
dec
xchg
dec
pusha
popa
mov
cs
mov
out
mov
inc
stc
sub
movsb
push
jl
mov
mov
in
pop
push
fimull
pop
push
les
sbb
stos
sub
dec
sub
and
stos
data16
jge
push
pusha
scas
lret
fwait
movsb
mov
mov
mov
rclb
sti
jp
pop
mov
xor
dec
mov
dec
lcall
xor
inc
sub
pushf
push
push
xor
nop
cmp
mov
lret
adc
xor
les
lods
xor
inc
mov
stos
mov
les
lods
movsb
pop
sbb
pop
call
jp
outsb
mov
xchg
mov
xchg
xor
push
mov
addr16
mov
dec
int3
push
sarl
nop
mov
cmp
mov
pop
fidivl
inc
mov
push
xchg
sub
mov
pop
mov
pop
or
jbe
mov
mov
ss
adc
les
mov
sbb
daa
nop
ficomps
mov
add
push
push
out
loopew
in
or
add
push
push
sti
adc
jae
mov
jbe
stc
inc
std
adc
aad
mov
idivl
push
int3
lods
movsb
dec
mov
fisubrl
nop
movsb
jp
fsubrs
dec
sbb
arpl
lret
push
in
int3
icebp
ficoml
nop
daa
bound
pop
mov
sub
jnp
cld
ret
sub
cwtl
mov
out
nop
dec
jne
outsl
add
stos
inc
lret
dec
inc
add
add
repz
add
roll
test
dec
inc
cmp
jb
xchg
pop
bnd
fcmovbe
sub
pop
inc
lods
jno
ucomiss
bound
xor
mov
mov
stc
insb
xchg
jge
and
loopne
insl
sbb
pop
add
insl
loop
lods
test
les
xchg
cmp
pop
jl
push
pushf
mov
mov
shlb
pop
dec
or
jmp
fmull
pop
mov
push
push
jle
cs
fs
mov
stos
pushf
aaa
pop
out
mov
mov
outsl
scas
or
cmp
xchg
mov
dec
scas
in
aad
xchg
lds
cmp
scas
push
mov
ficompl
push
cltd
rolw
lock
scas
dec
jb
mov
xchg
jbe
lea
in
shlb
mov
int3
test
jp
daa
push
xchg
daa
or
jb
inc
ret
roll
push
pop
mov
out
pop
mov
cmpsl
popf
cli
mov
xchg
mov
jno
addr16
inc
sub
in
cld
mov
shl
test
add
inc
push
pop
cmp
sbb
mov
dec
int
lock
mov
cmp
repnz
mov
ja
pop
leave
shld
sahf
jl
pop
mov
dec
dec
cld
push
mov
pop
pop
aam
mov
and
pusha
jp
jbe
data16
fadd
xchg
imul
mov
sti
dec
cs
outsb
sti
js
mov
std
xor
imul
aas
into
mov
inc
data16
repnz
jno
pop
xchg
lcall
mov
push
pop
pop
push
add
dec
sbb
inc
pop
xchg
fsubrs
mov
pop
pop
lcall
ja
mov
test
ret
stc
das
mov
add
out
movsb
aam
imul
daa
xchg
inc
pop
sbb
mov
mov
mov
mov
adc
inc
jmp
das
lods
dec
pusha
into
out
insb
lret
mov
sub
push
enter
cs
dec
enter
push
push
cmp
mov
push
faddl
lcall
fistpl
rcrb
jle
push
lret
ja
fcomps
xor
lret
xchg
push
pusha
fs
mov
ficompl
pop
pop
jae
rorl
sbb
fdivrs
mov
orl
lahf
outsb
push
mov
add
movsb
out
dec
cmp
sub
divl
mov
inc
sub
pop
lods
xchg
inc
cmp
pusha
mov
xchg
ljmp
dec
scas
dec
sbb
xchg
pop
or
sbb
orb
sub
sub
jecxz
add
push
xor
fdivs
push
push
jno
mov
mov
ret
addr16
xor
mov
dec
mov
aaa
aam
fisubl
mov
lods
pop
jmp
fmuls
out
jae
sub
cmpsl
mov
sub
dec
xor
adc
mov
rol
ss
insb
sbb
ja
sub
nop
mov
jg
mov
stos
cwtl
pop
call
lods
mov
fs
lds
mov
mov
dec
popa
aas
mov
jp
push
cmp
dec
scas
push
mov
sti
int
lcall
pop
dec
sti
fdivrs
pop
push
js
ja
dec
ja
dec
test
xchg
daa
fidivs
lret
mov
cli
jae
cmc
mov
outsb
lock
dec
inc
mov
sbb
imull
push
into
ret
mov
aas
mov
cmp
jo
je
pop
mov
and
jns
push
push
pushf
add
push
std
adc
aas
mov
mov
xchg
outsb
pop
fwait
loopne
mov
mov
mov
pop
lret
repnz
adc
jbe
pop
or
fs
jmp
pop
or
lods
loopne
repz
pop
pushf
addr16
xchg
mov
jp
jp
enter
cmpsb
insb
dec
push
add
ficomps
push
mov
stc
add
in
scas
test
adc
fsub
int3
out
cmp
mov
lret
or
push
mov
push
pop
int
pop
daa
dec
xchg
dec
sbb
data16
adc
mov
push
lret
push
mov
fstpt
sbb
test
add
pop
push
nop
sub
mov
or
in
push
sub
adc
mov
cli
push
pop
lret
cmpsb
cmp
xor
mov
sub
jbe
pop
mov
dec
sbb
insb
pop
out
int3
inc
pop
imul
mov
push
js
or
imul
pop
xchg
insb
test
add
stos
dec
mov
add
je
into
sti
inc
mov
mov
sbb
and
in
mov
movsl
aaa
insb
xchg
push
data16
and
xchg
add
xchg
pop
scas
mov
movsb
xchg
add
lods
mov
mov
pop
xorl
dec
mov
pop
inc
jmp
push
inc
push
adc
lock
mov
jns
lcall
popa
xchg
pop
and
push
fsubrl
outsb
pop
lret
mov
mov
insb
inc
movsb
or
int3
lods
sub
mov
pop
mov
dec
rcl
mov
fs
push
out
aaa
stos
cmp
pushf
nop
lahf
jnp
push
arpl
adc
cwtl
xor
fs
mov
mov
rcrb
in
xor
dec
rorb
outsb
xor
cs
movsl
cmp
ror
jp
jp
jl
js
push
cmpsl
fcomp
push
insl
push
lcall
mov
inc
xchg
lods
dec
shl
stos
aaa
xchg
fsubl
das
jp
mov
shlb
dec
xor
js
jmp
pushf
mov
iret
jecxz
cmp
imul
insb
pop
push
dec
dec
cmpsb
pop
mov
cs
outsb
data16
sub
subl
dec
push
cmp
cwtl
jge
xchg
in
add
and
cmpsb
pop
jb
inc
scas
mov
mov
shll
dec
xchg
add
mov
sahf
ficompl
aad
mov
mov
lret
lahf
mov
pop
push
aam
std
adc
mov
lret
mov
pop
fnstsw
daa
jo
push
inc
hlt
pushf
lock
sbb
xchg
inc
nop
pop
xor
fsubl
jne
rorl
cld
push
jp
nop
cmpsl
push
cwtl
sub
jne
jge
push
jo
cmp
dec
dec
mov
add
inc
jle
or
lret
push
insl
dec
and
mov
xchg
js
xchg
fs
mov
and
test
xor
repnz
and
mov
xor
mov
ds
inc
das
mov
out
cwtl
scas
push
mov
pop
xchg
xchg
cmp
pop
ficoms
pop
mov
mov
in
xor
sahf
mov
negl
fisttps
call
nop
stos
jp
mov
inc
mov
sub
jecxz
ja
ret
mov
fildll
je
dec
jb
aaa
jge
fcmovu
test
ljmp
xor
movsb
pop
cmpsb
setae
inc
pop
hlt
insb
add
inc
xchg
sub
popa
ret
mov
jbe
pop
test
mov
pushf
out
mov
adc
inc
popa
insl
arpl
testl
push
mov
add
mov
pusha
jp
mov
mov
pushf
dec
pop
sbb
lret
js
mov
cs
sbb
pop
mov
outsb
sti
inc
fmul
push
enter
push
mov
jcxz
dec
jmp
dec
jnp
mov
popa
pop
ss
pop
add
pop
ljmp
jl
xchg
dec
into
fcmove
mov
cmpsb
sub
pop
stos
xorb
in
xor
int3
into
jecxz
mov
mov
sbb
call
xlat
clc
xchg
jns
jbe
mov
lods
xor
pop
push
pusha
roll
icebp
arpl
imul
cwtl
rclb
loop
iret
jae
cltd
pop
lret
push
int3
stos
push
rcrl
cltd
movsb
mov
outsl
cmpsl
mov
cmpsl
add
add
inc
mov
mov
mov
int3
mov
in
push
neg
hlt
pop
sbb
adc
sub
cmpsb
cld
pop
sub
jge
lods
add
push
hlt
xchg
pop
pop
das
pop
pop
mov
push
xchg
ror
in
fsubrl
sbb
inc
test
push
dec
shll
jb
ljmp
test
push
pop
lods
bound
pop
dec
jb
in
sub
and
mov
xor
sbb
jne
je
push
mov
int3
loope
cmp
xchg
scas
out
mov
mov
mov
and
jmp
jo
xchg
jle
cli
fdivr
fwait
dec
fcmovnbe
dec
push
xorb
fcomps
aam
xor
dec
lds
push
int3
js
xor
pushf
lods
or
jp
mov
fs
dec
stos
sbbb
push
mov
shrl
sub
rclb
jmp
enter
add
mov
add
call
fdivl
xchg
movsb
leave
enter
mov
jecxz
mov
pushf
mov
stos
and
scas
mov
je
les
pushf
dec
dec
rolb
fidivrs
adc
and
das
sti
into
lret
imul
jbe
popa
jp
lock
add
xchg
lcall
pop
dec
cwtl
test
nop
jl
sub
pushf
mov
movsb
sahf
mov
enter
sbb
xlat
cmp
mov
lods
push
cwtl
daa
int3
dec
sahf
xchg
daa
fsubl
stos
mov
cmc
hlt
test
std
jge
mov
out
leave
push
aam
lods
fsubl
mov
adc
aas
adc
and
lahf
push
outsb
mov
cmp
dec
rorw
test
push
stos
fcompl
das
fmuls
sub
sub
mov
sub
inc
das
mov
pop
sarl
loop
and
fldt
pushf
push
repz
int3
aas
in
push
mov
imul
adcb
movsb
mov
movsb
cwtl
mov
insb
test
loopne
jbe
inc
stc
lock
mov
mov
pusha
xor
int3
mov
push
push
ficompl
dec
pop
test
mov
sbb
sbb
into
xchg
dec
imul
jb
inc
add
hlt
stc
sub
fdivs
mov
xor
iret
cmp
aam
shll
outsl
cltd
scas
push
or
xor
sahf
cwtl
cmc
and
add
in
repz
sub
cmp
mov
les
and
pop
xchg
pushf
aas
loop
adc
cmp
mov
out
inc
icebp
mov
mov
shrl
test
daa
jne
push
lcall
and
pop
pop
int3
lock
inc
aam
rcrl
mov
mov
in
push
addl
movsb
fildll
es
shl
movsb
pop
lods
inc
dec
fcomp
add
inc
inc
cs
xor
mov
jmp
imul
cmp
dec
pop
mov
imull
push
mov
inc
mov
repz
out
xchg
bound
sbb
adc
int
lods
aam
inc
fs
push
sahf
xchg
mov
scas
sub
mov
push
or
lock
xchg
sbb
xchg
mov
cli
gs
cmpsb
pop
lret
push
ds
pop
scas
sbb
jbe
aam
int3
mov
clc
add
mov
push
push
jle
cmp
xchg
sub
jb
cmp
pop
icebp
pop
push
mov
mov
xor
stos
mov
imul
jp
in
dec
mov
pushf
lret
cld
adc
mov
ss
outsb
jb
nop
incb
fcmovu
jo
fcomps
fwait
push
mov
lret
add
aaa
test
ret
out
ret
and
pop
scas
icebp
icebp
push
lret
out
inc
sbb
pusha
popf
mov
lea
mov
adc
pop
in
add
stos
fadds
in
fs
push
pop
mov
dec
push
in
shl
insb
mov
xchg
mov
imul
sti
add
add
int3
iret
push
js
pop
jae
jb
sti
cmp
test
fisubrl
in
icebp
mov
es
add
pop
adc
cmp
pop
mov
or
fisubrl
dec
pop
inc
jnp
fs
or
bound
js
aas
loopne
sbb
lods
rclb
push
dec
mov
aad
outsl
push
sub
movsb
mov
sbb
mov
pop
cmp
bound
out
ja
dec
hlt
rclb
dec
lcall
adc
push
pop
daa
scas
pop
push
fstpl
daa
dec
pushf
push
leave
hlt
js
xchg
fs
mov
mov
fdivrs
lret
cmp
pop
fs
xchg
xor
dec
jnp
into
popa
bound
adc
push
and
js
mov
mov
jbe
sub
ds
add
and
mov
fidivs
dec
cltd
scas
repz
cmp
fmull
nop
and
jo
xor
mov
mov
outsb
mov
sub
fisttps
test
cmpsb
add
cmp
mov
or
dec
jl
fs
sbb
pop
test
add
mov
mov
cmpsb
mov
add
movsb
int
mov
lcall
lods
mov
std
mov
inc
fidivrs
cmp
sahf
in
sbb
sbb
fdivrs
cmp
outsb
in
fimull
push
adc
sbb
push
incb
pop
test
jns
dec
scas
inc
stos
jg
enter
lock
repz
push
xchg
andl
mov
xorb
or
mov
in
push
int
ds
orl
sbbb
mov
scas
pop
push
stos
mov
xchg
in
pop
and
outsb
xchg
das
lods
dec
sub
es
shlb
fmull
push
nop
ret
push
mov
ja
xchg
fidivrl
cld
movsl
cwtl
daa
mov
pop
bound
mov
mov
push
fmuls
jbe
scas
push
cmp
mov
mov
nop
js
sahf
nop
pop
lds
mov
insl
fcoml
sbb
faddl
jge
lcall
pop
mov
fiaddl
pusha
jp
cltd
js
cs
gs
xor
lret
cmc
fstpt
fs
mov
push
dec
int3
jb
bound
xchg
test
pop
jl
mov
inc
adc
int3
cmp
nop
movsb
rol
pop
fs
mov
or
lcall
in
mov
xchg
inc
nop
mov
mov
push
sahf
and
popl
push
jmp
mov
sub
fsubl
xchg
in
jo
push
push
bound
lods
mov
xchg
jp
mov
push
mov
insb
jge
dec
dec
out
bound
loop
jbe
push
jle
rorb
jae
arpl
xor
and
pop
insb
lret
cmp
outsl
pushf
hlt
dec
pop
sbb
and
ja
jo
gs
mov
gs
push
pushf
mov
pop
push
mov
in
push
jo
or
lcall
daa
out
and
nop
xor
mov
pop
dec
mov
mov
adc
fadd
mov
cwtl
call
jle
pop
mov
lods
mov
shl
push
int3
xor
je
mov
and
adc
push
in
lcall
jo
repnz
pop
test
lret
fsubs
cs
into
fidivs
pop
inc
cmp
negl
jle
xchg
pop
push
cwtl
and
stos
imul
pop
repz
fcoms
cmp
sub
mov
les
test
adc
sub
cmpsb
xor
push
push
rcrl
mov
inc
cmpsl
out
mov
fmul
js
stos
out
push
lcall
push
in
mov
clc
int3
mov
jo
mov
in
push
fmull
fmulp
mov
cwtl
shrb
push
sahf
push
fcom
pop
dec
xor
lods
push
je
pop
sbb
mov
test
jg
ret
cmp
lods
pushf
dec
inc
sti
inc
ficompl
rorl
shrb
or
lock
jo
or
dec
fsub
cmp
mov
push
imul
add
pop
push
inc
scas
and
cwtl
push
fdivr
js
cmp
fimuls
lea
add
pusha
bound
jnp
mov
cltd
mov
sbb
sub
xchg
inc
ja
mov
xlat
push
arpl
insl
fiaddl
adc
cld
test
mov
dec
or
mov
push
outsb
mov
add
out
fstl
fiaddl
cmpsb
mov
xchg
jo
xchg
push
pop
hlt
sahf
pop
int3
cmp
mov
lret
fcmovbe
sbb
lods
dec
xor
cld
xor
lret
mov
fidivrs
fdivrl
into
push
jo
mov
jbe
hlt
jecxz
push
pop
jb
mov
inc
cmp
push
aam
push
jnp
dec
sbb
push
divl
lods
dec
cli
inc
mov
mov
xor
stos
ret
push
pop
dec
mov
mov
pusha
aas
addb
jne
std
and
imul
andl
pop
or
aaa
leave
mov
in
popa
in
xchg
pop
pop
push
faddl
cmp
nop
mov
test
push
mov
icebp
or
out
push
xchg
jg
sbb
push
aas
mov
scas
pushf
in
jl
push
aas
dec
jo
fidivrl
inc
stc
pop
cmp
js
pop
into
dec
mov
pop
hlt
mov
ss
push
movsb
cmp
scas
mov
xchg
stos
out
sub
cmp
test
std
dec
mov
mov
scas
fs
mov
lcall
jae
push
pushf
fisubl
aas
in
jbe
adc
data16
je
xchg
add
mov
cmc
scas
sbb
cwtl
loope
add
dec
pop
push
inc
pop
dec
inc
not
push
loopnew
push
xchg
imul
lcall
outsb
pop
mov
jb
addr16
jae
rorb
int3
fstpt
fs
mov
stos
das
cmp
mov
mov
push
dec
pop
pushf
mov
sti
inc
lret
pop
pop
mov
flds
push
add
dec
aam
jb
insb
mov
fisubl
imul
movsb
mov
lods
pop
js
lret
faddl
popf
aaa
or
jbe
cmp
jp
push
dec
pop
mov
sbb
int3
rclb
imul
mov
cs
adc
mov
mov
xor
shlb
inc
cmp
push
push
fidivrl
mov
jle
mov
push
jbe
xchg
int
cmpsb
out
push
sub
xchg
js
mov
data16
fcompl
leave
and
add
fsubs
cwtl
lock
aas
mov
mov
int3
add
cmp
test
pop
lret
sub
outsl
dec
mov
scas
ficompl
test
pop
mov
mov
jne
and
fimuls
sbb
fstpt
add
xor
pop
add
adc
hlt
xor
outsb
je
mov
jno
xor
adc
in
les
jb
push
pusha
nop
mov
mov
mov
daa
jb
mov
mov
fs
cmp
jp
xchg
mov
js
mov
aas
cmp
dec
push
lret
rcll
test
test
or
mov
push
mov
lcall
mov
jl
dec
ficompl
push
lods
ret
pusha
out
mov
inc
test
out
mov
push
jo
pop
cmp
dec
push
adc
loop
fstpt
lods
mov
push
and
add
insb
outsb
scas
mov
adc
out
sbbl
int3
mov
inc
pop
mov
xor
dec
xor
aas
cmp
mov
mov
je
sahf
ss
pop
xlat
push
inc
jns
push
cld
stos
into
mov
mov
lods
add
cwtl
shlb
add
mov
pushf
sub
mov
inc
xor
and
dec
mov
jbe
pop
mov
mov
fs
div
and
sarb
xor
xchg
lods
je
je
mov
adc
push
mov
jae
or
pop
mov
lds
fistpl
cmp
das
jne
shrb
jne
lret
xchg
inc
dec
or
jge
sbb
mov
test
jb
xchg
dec
je
rolb
aas
into
bound
dec
int3
jp
jb
pop
and
pop
mov
jmp
movsb
mov
adc
movsb
je
push
aad
cltd
inc
test
and
dec
add
and
adc
mov
cmp
jns
cmpl
push
push
bound
insl
xor
fdivrl
mov
movsb
pop
in
xchg
jb
push
push
xchg
pop
inc
mov
lret
bound
mov
outsb
cs
push
xor
movsb
sbb
add
lahf
jp
test
dec
push
xor
dec
bound
pop
jbe
mov
cmp
dec
adc
bound
stc
mov
test
dec
fidivs
xor
pusha
mov
xchg
sub
xor
shlb
dec
xchg
lods
popf
cmc
movsb
cwtl
push
xchg
gs
sbb
push
aam
cmc
lret
cmpsb
daa
mov
nop
cmp
add
fmul
push
jge
mov
inc
stos
or
jp
js
pop
dec
or
inc
data16
mov
dec
mov
fnsave
xchg
adc
xchg
fmul
daa
pusha
mov
sbb
xor
jecxz
call
pop
jo
fs
jno
cmp
int3
dec
gs
adc
jnp
stos
dec
inc
nop
push
dec
push
pop
shl
mov
or
lods
sub
fimull
jo
mov
std
and
cs
insb
ljmp
mov
jo
lods
out
jle
fisubrs
or
outsb
int
fwait
push
ficoms
jnp
lret
mov
dec
sbb
adc
adc
pop
clc
jmp
cmp
mov
lods
jae
movsb
cmp
pop
add
into
cmc
add
ljmpw
push
dec
push
inc
sub
out
cmp
pushf
nop
lods
ficoml
mov
call
add
outsb
popa
enter
scas
mov
loopne
ja
data16
inc
xor
mov
mov
mov
cwtl
sbb
mov
pop
lret
sarb
int3
outsb
mov
ficomps
cwtl
hlt
jne
xor
pop
sub
es
mov
push
dec
stos
add
pop
mov
mov
pop
add
rcr
push
imul
and
push
arpl
in
outsb
rcrl
aaa
and
dec
daa
adc
mov
mov
gs
mov
aam
scas
movsb
xor
xor
das
stos
pushf
lret
push
push
inc
jnp
jp
insl
out
out
xor
jmp
cmp
js
test
cmpsb
lcall
popf
push
adc
scas
xchg
mov
cmc
mov
lcall
pop
lret
add
pop
jo
jl
push
mov
dec
fcomi
test
pop
xor
mov
cmp
mov
js
mov
push
lret
pushf
fisttpl
mov
or
lea
fnstenv
push
mov
xor
movsb
inc
mov
adc
std
push
mov
nop
adc
sub
fcompl
dec
push
std
add
or
inc
jbe
inc
pop
or
bound
add
push
mov
jge
mov
mov
mov
cwtl
js
lcall
pusha
jae
or
shlb
push
mov
stc
pop
into
xchg
frstpm(287
and
push
fcoml
pop
dec
push
lcall
mov
mov
lret
repnz
push
cs
pop
inc
mov
mov
gs
push
push
mov
inc
mov
cmp
mov
xchg
dec
sti
lock
js
inc
sbb
pop
nop
sbb
push
pop
xchg
mov
pop
lods
xlat
movsl
out
xor
iret
hlt
cmpsb
cmp
mov
popf
add
push
mov
lock
into
push
pop
lds
pushf
cmpsl
sub
mov
push
andl
sub
mov
out
js
js
jl
into
aam
jbe
pusha
xchg
movsb
ror
push
js
push
int3
inc
dec
sbb
cmp
mov
mov
test
mov
nop
in
cwtl
sbbl
pop
in
pop
aas
insl
jp
mov
xor
mov
sti
push
nop
aad
and
sub
pop
cs
jmp
jl
cmp
dec
push
mov
movsl
out
cmpsl
pop
push
lahf
xor
push
je
adc
hlt
jl
mov
scas
ret
test
mov
lret
jbe
mov
movsb
ds
push
jbe
lods
lret
ret
jb
inc
jl
push
cmp
add
pop
hlt
dec
mov
cmc
adc
xchg
mov
mov
pop
mov
pop
into
js
aam
push
sbb
mov
je
lods
mov
imulb
pop
aam
push
sahf
xor
xor
imul
je
dec
fs
adcb
fimuls
jp
sbb
rolb
mov
mov
push
iret
test
shrb
cld
dec
pushf
fimull
jle
ja
jns
push
cli
mov
ljmp
pop
cwtl
dec
into
fcoml
mov
push
pop
push
in
add
in
jg
rol
add
in
pop
mov
dec
add
and
xchg
jb
daa
fwait
mov
xchg
dec
fs
push
insb
test
push
fcompl
out
inc
pop
xchg
stos
xor
mov
js
push
jp
aas
jecxz
lock
mov
sub
mov
popa
dec
pop
fs
js
test
pop
dec
jp
popw
rolb
mov
fidivl
pop
nop
std
jmp
js
push
and
sub
bound
jnp
in
addr16
sub
mov
pop
xchg
iret
sbb
xor
dec
cmpsb
ficoml
das
rcr
test
mov
adc
jecxz
lods
aaa
dec
scas
dec
mov
insl
stc
mov
cwtl
pop
das
jp
int3
out
xchg
movsb
fildll
insb
aad
pop
push
rcl
or
jmp
test
in
sahf
cli
jb
sub
inc
xchg
lahf
jmp
inc
les
lcall
mov
int
lcall
cmpsb
les
push
fs
fistpl
insb
pop
pop
imul
fstl
push
jmp
mov
sbb
jno
js
pop
jnp,pn
insb
xor
lds
dec
lahf
push
movsb
jge
dec
dec
cmpsb
gs
pop
mov
pop
lods
xchg
mov
lcall
jbe
push
xor
add
cltd
mov
int3
pusha
push
mov
bound
idivl
cmp
test
mov
cmp
lods
dec
in
sahf
into
dec
dec
dec
lods
nop
in
in
enter
outsl
dec
pusha
fildl
je
push
cmp
insb
sahf
andb
sub
cltd
adc
fstp
call
pushf
in
jne
mov
xchg
scas
push
jnp
je
sbb
pushf
mov
pop
rcrb
gs
push
daa
mov
nop
cmpsb
push
cs
dec
jns
fsubr
xchg
cmpb
push
cmpsl
stos
dec
dec
insb
rclb
push
fdivs
or
xchg
bound
fmull
movsl
or
and
es
pop
pop
jae
push
mov
sarl
scas
or
cmpsb
pop
popa
into
adc
pusha
mov
in
push
mov
bound
mov
lcall
movsb
pop
jp
pop
fs
adc
aam
dec
ret
imul
movsb
std
jge
jb
cmp
push
je
cmpsb
inc
dec
cwtl
daa
mov
cs
ret
inc
pop
mov
outsb
mov
mov
push
mov
pop
sub
out
ljmp
jo
js
dec
je
je
cmp
jl
int3
jl
mov
push
xchg
ret
shrl
push
movsb
pop
mov
movsb
js
pushf
testb
sub
adc
pushf
shlb
mov
adc
int3
pop
dec
pop
add
jo
mov
xlat
aam
inc
pop
lods
mov
or
sahf
jl
lods
enter
jae
cwtl
cmc
push
pop
js
mov
cmp
mov
std
lods
mov
push
mov
mov
push
xor
mov
inc
push
sahf
sub
leave
in
push
loopne
js
bnd
loop
push
mov
lods
add
fs
push
js
mov
cmp
movsb
xchg
cmc
mov
mov
push
jg
lret
pop
mov
push
lret
lcall
mov
je
out
mov
mov
in
cmpxchg
jmp
cli
fwait
scas
sahf
leave
inc
leave
sub
push
mov
out
in
in
xchg
xchg
repz
push
and
int
out
fisubl
aad
mov
pop
jnp
mov
jae
mov
aam
outsb
dec
sub
movsb
ficoms
sti
jns
xchg
push
pop
divl
mov
xchg
dec
hlt
mov
cmp
mov
mov
mov
mov
sub
mov
mov
fcmovbe
pop
scas
das
mov
loope
xchg
xchg
push
mov
lcall
pop
dec
or
faddl
inc
mov
js
fwait
mov
mov
fnstenv
insb
add
inc
sub
push
clc
pop
jp
test
jl
sahf
fcompl
mov
lahf
fisubrl
add
bound
mov
int
jne
test
push
scas
shrb
stos
cmp
mov
fs
shlb
test
inc
sub
jb
addr16
data16
adc
mov
xor
cwtl
xor
hlt
in
mov
mov
mov
pop
movsb
stc
sbb
mov
addr16
in
mov
pop
jl
jae
mov
int3
pop
shlb
popf
fs
push
mov
mov
stos
fmul
popa
lods
cmp
jae
xchg
pop
pop
enter
jg
dec
loopne
mov
jne
adc
jb
dec
push
sub
inc
inc
ret
fwait
data16
pop
sbb
movsb
mov
lods
in
adc
pop
fmull
lds
jge
lds
jge
xor
xchg
aam
dec
sbb
fistl
lcall
into
inc
mov
xlat
in
into
sahf
push
sbb
daa
lock
fcom
inc
sbb
push
ds
test
in
stos
mov
dec
fcmovnb
pcmpgtd
sub
mov
push
cli
adc
sti
into
nop
hlt
fs
aaa
js
mov
push
pop
cmp
sub
ljmp
mov
mov
cld
ja
add
push
test
fmuls
dec
sub
pushf
adc
movl
in
aad
mov
jp
mov
lret
insb
je
test
pop
js
jb
push
lret
outsl
aam
push
js
fwait
mov
jp
dec
add
mov
add
mov
lods
mov
xor
lcall
xchg
dec
mov
cmp
mov
fldt
add
lret
daa
pop
dec
sub
cmp
mov
jp
ficoml
lods
sbbb
shrb
or
ret
negb
rolb
or
jno
movsl
iret
adc
mov
jp
ret
sub
push
mov
stc
push
call
jno
hlt
insb
add
test
mov
fldt
lret
jp
mov
xchg
lcall
js
sub
icebp
cmp
xchg
fdivrl
je
arpl
cwtl
nop
sbb
inc
add
lret
rcl
push
mov
sarb
pop
dec
jne
ret
movsb
cmp
push
js
xor
pop
dec
jg
add
call
je
addr16
mov
add
pushf
adc
jmp
je
sarl
push
imul
jl
jp
scas
out
psubusb
repnz
xorb
lret
std
xchg
jo
loopne
out
dec
stc
cmpsb
movsb
pop
cmpsb
jmp
loope
jle
fmuls
mov
shrl
scas
lcall
jp
je
outsb
mov
mov
push
out
aad
clc
incb
xchg
push
pop
sub
pop
and
pop
ds
push
pop
nop
dec
fisubrl
ljmp
mov
stos
movsb
cmpsb
mov
add
out
arpl
and
insb
cmpsb
je
or
sub
and
sub
test
push
adc
jecxz
mov
fmul
clc
pop
mov
mov
push
push
or
xlat
sbb
test
data16
cmp
insb
push
or
mov
cmp
ficompl
mov
aam
in
push
dec
mov
repnz
ret
mov
mov
sahf
loop
cmpsl
enter
mov
mov
mov
scas
dec
push
mov
sarl
ds
mov
gs
fistpl
pop
push
mov
mov
dec
ficompl
pop
jp
jmp
pusha
cmp
jo
fcmovbe
jbe
cmpsl
jmp
xchg
fbld
jb
into
test
inc
jp
clc
add
pop
dec
lahf
mov
and
xchg
lds
pop
jb
icebp
je
sbb
mov
pop
push
fdivrp
xchg
push
test
les
mov
pop
pusha
pushf
test
and
and
cwtl
sub
aaa
mov
mov
inc
inc
rolb
in
js
mov
cmp
jb
lcall
add
jp
or
inc
fisubl
or
adc
pop
fdivl
or
pop
lods
cmp
dec
pushf
inc
stc
aaa
pop
out
scas
daa
jecxz
outsb
fs
mov
xchg
sbb
std
pop
pop
daa
lods
pop
sahf
mov
jg
pop
int
sub
mov
fsubrs
std
dec
push
jae
call
dec
sbb
lcall
push
sahf
xchg
and
mov
fidivl
ret
push
jle
jmp
xchg
add
jp
mov
fcompl
xchg
mov
cld
icebp
into
dec
lods
pop
lcall
cmp
mov
lea
push
fcompl
movsb
into
je
fsts
inc
dec
pop
add
jbe
nop
cld
or
mov
cld
or
jbe
pop
mov
xchg
mov
rcr
loope
repz
loope
push
mov
dec
fmull
push
push
or
lock
add
daa
rclb
push
jo
push
push
dec
ds
mov
mov
lcall
inc
xchg
pushf
pop
cltd
lret
xor
cwtl
mov
aas
mov
out
xor
lds
mov
dec
es
out
fcmovbe
push
xor
pop
stos
arpl
dec
mov
daa
xchg
lret
dec
ja
mov
orl
xchg
xor
mov
das
and
ficoml
mov
mov
sub
sahf
into
pop
fdivrs
fdivrl
add
or
repnz
mov
sbb
out
fdivl
hlt
xor
repnz
mov
jp
dec
icebp
mov
add
aam
ja
and
pop
bound
fnstcw
jb
pop
push
lss
add
icebp
movsb
jns
data16
mov
or
fisubrs
nop
mov
and
mov
stos
cmp
push
jne
xorl
mov
dec
mov
jge
sbbb
and
mov
jmp
pop
data16
pop
mov
daa
add
adc
jp
test
lret
mov
and
and
push
out
or
in
jo
lods
out
ret
push
pushf
adc
cmp
cs
int3
dec
mov
cmp
pushf
push
mov
stos
fidivs
pop
push
pop
push
enter
out
lret
mov
ret
adc
add
xchg
and
pop
mov
mov
loope
xchg
mov
jbe
xlat
pusha
mov
xor
cmp
dec
aas
dec
mov
lods
bound
pmaxub
cwtl
push
inc
mov
test
stc
xor
das
ljmp
sbb
sti
cs
add
pop
pop
xor
push
dec
mov
mov
jge
adc
lods
sbb
iret
movsb
test
lret
outsb
sbb
lods
cmp
insb
push
fcomps
mov
adc
add
sbb
jbe
xchg
shlb
fsubp
pop
dec
push
inc
jmp
incl
pop
fs
pop
nop
cli
or
mov
pop
test
ficoms
outsb
mov
daa
fs
xorb
add
shll
xchg
js
mov
fstpl
xchg
push
cli
inc
arpl
dec
ds
addr16
test
out
pop
iret
mov
mov
cmp
inc
mov
mov
mov
repz
movsb
sahf
cmpsl
pop
lods
cmp
xchg
pop
pop
mov
lret
outsl
xabort
dec
mov
push
pusha
daa
rclb
mov
mov
and
pop
mov
fsubrl
dec
lods
mov
xor
mov
cmpsb
addb
sbb
aas
scas
xor
and
pop
dec
out
dec
jae
in
stos
fs
pop
mov
sahf
fdivrs
xchg
adc
or
nop
mov
je
inc
mov
sar
mov
inc
lds
push
sbb
jo
loopne
pop
repz
xor
cmp
mov
movsb
cmp
dec
bound
fmull
movsb
mov
sub
lods
pushf
cmp
dec
int3
rcl
mov
outsb
movsb
stc
or
pushf
dec
std
mov
push
lock
fisubrs
int
aaa
nop
xchg
cwtl
adc
sarb
pop
fmull
mov
insl
xor
pop
cmc
cmp
pop
dec
xchg
mov
cmp
mov
pop
push
dec
cmp
cli
test
out
add
cmpsl
mov
bound
pop
in
cmpsl
jp
mov
mov
xlat
mov
stos
inc
stc
adc
sbb
lahf
ror
xor
popf
dec
jb
mov
je
sbbl
xor
dec
mov
out
mov
mov
inc
lock
cmp
lret
dec
cmc
jge
mov
out
push
scas
loop
add
test
shlb
pop
jp
mov
pop
test
xchg
insb
jo
sbb
xchg
mov
mov
jp
mov
and
nop
movsb
xchg
arpl
into
mov
mov
jne
jmp
mov
fimuls
mov
mov
dec
push
mov
je
mov
push
add
push
add
scas
fsubs
push
cmp
int3
out
scas
mov
pop
mov
sar
out
dec
lods
mov
andb
aas
cmp
push
mov
mov
scas
aam
mov
stos
rolb
and
mov
push
dec
jp
mov
hlt
outsb
mov
pop
js
js
bound
xchg
jl
lods
sarb
sub
nop
pusha
test
or
nop
xchg
cmp
cmpsb
push
movsb
mov
sub
and
sub
ficoms
xchg
push
out
je
add
mov
push
xchg
fsubs
push
xor
out
push
mov
je
jl
dec
pop
xchg
push
mov
adc
test
fmull
into
das
push
adc
xor
jmp
add
ja
outsb
xor
add
jno
add
mov
xor
pushl
or
inc
or
data16
pusha
sub
mov
mov
aam
add
adcb
dec
dec
mov
int
mov
roll
enter
dec
fdivrl
dec
repnz
out
fisubrl
mov
pop
pop
xor
outsb
mov
or
or
jb
fists
cs
xchg
lods
aas
cmp
mov
jl
into
cmp
xchg
dec
es
jo
dec
push
out
bound
jb
mov
shll
adc
push
nop
jl
test
fxch
enter
fs
jns
ja
gs
call
les
sbb
jmp
fildll
pushf
pop
cmpsb
dec
jne
mov
jnp
sahf
stos
shll
add
sbb
sbb
into
and
pop
push
fs
stos
lock
adc
pop
in
dec
leave
sbb
fcmovne
movsb
push
push
mov
clc
pop
pop
lret
fisubs
sub
outsb
push
cmp
mov
mov
movsb
pop
or
repz
in
out
loop
mov
lock
fisubrl
and
scas
mov
add
xor
std
mov
cmpsl
js
imull
or
dec
jbe
shll
pop
lahf
divps
mov
push
inc
push
or
mov
mov
stc
imul
leave
nop
shll
xchg
bound
push
mov
dec
out
js
sub
push
lods
push
icebp
push
cmp
fdivr
scas
inc
mov
in
inc
fisubl
bound
loopne
add
sub
push
push
and
lret
fcomps
mov
test
mov
inc
popf
out
movsb
pusha
pop
jae
cmpsb
mov
pop
adc
xor
jge
jp
cmp
js
je
or
fmuls
add
lret
adc
mov
repz
stos
lods
shrb
movsb
mov
and
fs
push
sbb
mov
shlb
pop
movsb
pop
mov
nop
insb
js
into
jb
cmp
pop
pop
mov
lcall
ror
mov
mov
pop
mov
and
popf
mov
stc
pop
jp
ja
mov
inc
mov
sbb
fs
arpl
jb
push
push
xchg
test
pop
ficoml
fdivs
aas
lock
dec
sahf
xor
paddw
xor
aam
stc
cwtl
stos
mov
add
out
push
scas
mov
xchg
push
stc
jmp
lock
mov
fidivl
mov
imul
cwtl
and
xor
add
lods
mov
mov
jg
std
stos
inc
stos
xchg
inc
inc
mov
pop
in
cmp
push
mov
fiaddl
push
pop
dec
fwait
mov
mov
push
test
inc
decl
pop
imulb
pop
fsubl
scas
je
cmp
out
nop
cmpsb
pop
test
and
pop
pop
inc
arpl
jge
add
cwtl
test
jmp
gs
pop
pop
adc
jle
int3
mov
sub
jbe
xor
or
shll
rcll
push
test
xlat
data16
mov
fmuls
je
adc
gs
add
fsubrl
int3
sub
cmp
jbe
xchg
pop
mov
subl
or
jp
xchg
sarl
rorb
xlat
jne
add
pop
nop
dec
mov
cmp
fs
mov
ja
out
lea
andb
mov
hlt
mov
xchg
aaa
jmp
jp
jmp
ficompl
loopne
adc
pop
data16
xchg
mov
pop
jbe
sub
push
inc
daa
adc
mov
lret
lods
xor
mov
insb
mov
lahf
cmp
stos
mov
mov
aam
ficoml
pop
int3
shll
cmp
test
jp
stos
fsub
test
loope
pushf
mov
lret
insb
cmp
mov
js
push
jne
ljmp
bound
mov
mov
daa
jno
popf
mov
int3
pusha
xor
movl
mov
push
cmp
jmp
icebp
add
jmp
mov
push
push
xchg
jbe
movntps
or
aaa
aas
add
push
mov
cmp
jb
mov
mov
jns
mov
fsubs
loop
cmovl
popa
pop
pop
jl
add
test
push
and
mov
mov
lcall
mov
stos
into
scas
imul
mov
lods
mov
add
in
sbb
push
xchg
lods
mov
loopne
sbb
clc
loop
sarl
icebp
mov
cwtl
jle
sbb
insb
jbe
in
lahf
mov
cli
stos
mov
jbe
mov
sub
sub
mov
fmuls
add
jp
lods
cmpsl
xchg
fbstp
pop
lcall
in
daa
out
xchg
outsl
pop
jp
jge
pop
add
push
or
fcomi
arpl
sub
dec
ds
add
enter
aam
push
mov
fsubrs
mov
add
js
mov
or
push
les
test
cli
js
mov
pushf
push
adc
or
in
dec
sub
pop
aam
addb
jae
cmp
cli
test
jbe
mov
xchg
jb
cmp
pop
insb
pusha
int3
dec
cli
outsl
pop
ss
in
cwtl
push
or
rorl
mov
add
jle
dec
aam
mov
insb
inc
movsb
xor
mov
mov
adc
insl
and
mov
das
inc
push
les
mov
enter
cmp
pop
pop
movsb
fildl
jb
je
fidivrs
dec
pushf
and
data16
mov
mov
stos
push
xchg
adc
push
mov
push
js
push
mov
movb
stos
inc
movsb
mov
in
idivb
pop
mov
lcall
pop
dec
js
lret
push
hlt
ret
sub
outsb
jne
pop
jo
scas
jne
adc
cli
sub
pusha
xchg
jl
fsubrl
dec
fisubl
and
adc
push
lcall
je
cmp
xor
cmpsb
movsb
les
mov
pop
push
mov
in
adc
pop
imul
push
inc
std
in
andpd
fs
pop
outsb
stos
je
jne
add
into
push
mov
dec
jp
fisubrl
xor
andb
and
push
repnz
jb
or
imul
movsb
pop
cmp
cwtl
int
int3
js
mov
in
dec
mov
pop
xchg
push
xor
mov
push
test
scas
sub
push
jns
xchg
ja
std
dec
stos
lea
xor
test
cmp
xchg
fs
mov
scas
mov
xor
mov
sub
fdiv
xor
ljmp
pop
lahf
add
scas
sub
psrlq
daa
push
je
cmp
fidivrl
out
push
mov
xchg
mov
roll
fstpt
push
scas
mov
lods
in
je
sbb
insb
dec
lret
xchg
fisubrs
mov
inc
jno
sti
outsl
push
push
xchg
imul
fstl
pop
pop
dec
xor
out
xchg
mov
mov
mov
dec
or
sti
inc
faddl
fisttpl
push
mov
imul
push
pop
dec
ficoms
insb
int
push
cmpsb
cwtl
imul
push
outsb
xchg
jp
movsl
mov
lods
loope
fildll
jle
icebp
cmp
mov
pop
push
lret
pop
lahf
push
xchg
xchg
inc
mov
cwtl
stos
aaa
xchg
mov
int3
mov
pop
pop
push
mov
dec
rcrb
xchg
lea
js
sub
xchg
sti
iret
and
loopne
dec
je
jo
orl
js
inc
push
pop
loopne
sahf
sub
int3
lods
aam
mov
fs
add
jo
in
sbb
mov
mov
sbb
lods
je
mov
movsb
sbb
pusha
stos
mov
pushf
inc
inc
inc
rcrl
sbb
mov
push
xchg
cs
out
std
mov
jne
adc
adc
push
das
jns
stos
sahf
pusha
fmul
dec
lret
mov
cwtl
mov
push
ficomps
cmp
jbe
popa
pop
test
pop
sub
ds
and
nop
lret
mov
dec
mov
add
pusha
insb
xor
push
test
adc
mov
and
lret
repnz
out
pop
bswap
sub
outsb
clc
xor
pop
js
jbe
dec
sahf
pusha
jns
mov
and
xchg
xchg
bound
out
jae
sub
lret
fidivl
arpl
daa
test
std
xlat
sti
adcb
js
inc
data16
add
push
je
mov
mov
mov
cmp
xchg
mov
push
seto
cmp
lret
je
mov
ds
mov
aas
mov
aaa
mov
into
cwtl
loope
sbb
mov
jb
fsubrl
movsb
sub
out
test
je
add
sub
jp
dec
lea
jbe
mov
outsb
loop
xchg
lahf
mov
fidivrl
je
lds
nop
sti
mov
out
cmpsb
push
mov
dec
mov
cmp
push
pop
mov
fcomp
jo
mov
jp
xchg
insb
int
push
cwtl
mov
xor
stos
adc
scas
inc
and
add
arpl
jp
data16
into
inc
mov
cmp
arpl
test
das
int3
pop
push
jg
rcr
jmp
aas
xor
jae
fmull
in
addr16
cmp
mov
inc
push
lcall
xor
xchg
xchg
sbb
mov
dec
xchg
js
xor
adc
fisubl
push
pushf
mov
jbe
arpl
cwtl
mov
mov
inc
mov
xor
pushf
pop
xchg
faddl
mov
stos
addr16
scas
out
jnp
lret
ficomps
mov
je
lcall
mov
fstpt
shll
stos
dec
movsb
pop
js
mov
mov
pop
faddl
jecxz
ret
dec
daa
pcmpeqd
shrl
add
scas
cmp
test
addb
fstpt
jb
nop
dec
adc
xor
cmp
cli
fs
insl
mov
stos
movsb
outsb
push
push
mov
cmpsb
test
mov
sbb
xchg
dec
or
mov
loop
mov
sarb
sub
faddl
test
adc
lock
repz
test
dec
fsubrs
imul
xchg
mov
into
or
cmp
lcall
mov
sbb
hlt
xor
cmpxchg
pop
or
mov
out
lea
sub
push
arpl
push
and
or
js
fisubrs
js
push
sbb
enter
sbb
loope
aam
fcmovbe
sti
pop
pusha
into
push
xchg
lret
fidivrl
fwait
out
cmp
mov
cmp
je
sarl
dec
xor
shlb
loop
jl
lods
movsb
mov
pop
cmp
cwtl
fimuls
push
fs
repz
mov
xor
pop
mov
pop
lods
rcll
shll
sub
int3
mov
lcall
sub
pop
adc
loop
call
xor
add
mov
mov
lea
jge
push
shl
test
rolb
cmp
jmp
mov
and
push
mov
cmp
jle
imul
pop
cld
scas
xchg
sub
bound
adc
out
sub
fwait
clc
fistpl
dec
ficoml
lahf
out
lods
or
bound
enter
lods
jo
dec
cli
xchg
lods
xchg
mov
mov
pop
adc
pop
sub
cwtl
xchg
dec
icebp
mov
outsl
cmp
subb
xor
sub
adc
mov
mov
hlt
stos
pushf
sbb
stos
add
push
xor
bound
push
test
cwtl
leave
cmovb
inc
stos
dec
inc
fwait
add
pop
scas
dec
outsl
add
inc
pop
mov
inc
sbb
in
pop
xchg
xor
add
pop
repz
push
dec
push
lods
add
fistps
dec
or
insb
push
and
xchg
add
insb
repz
add
inc
sbb
dec
test
add
inc
cwtl
rorb
daa
dec
or
inc
stos
dec
inc
fwait
add
pop
scas
dec
outsl
add
inc
pop
mov
pop
sbb
leave
in
pop
xchg
xor
add
pop
repz
push
adc
dec
lods
add
fistps
dec
or
insb
push
and
cltd
add
inc
pusha
add
andb
cmp
outsb
out
aam
xorb
xchg
jecxz
xchg
call
mov
xchg
jp
movsb
orl
test
mov
int3
fdivrs
scas
sahf
jo
scas
outsb
adc
mov
mov
dec
mov
mov
push
je
jb
insb
cmpsb
scas
lods
pop
cwtl
sarl
movsb
stos
out
pop
lcall
cmp
sahf
xchg
and
mov
inc
push
out
insb
mov
xchg
js
in
and
jne
ret
and
cwtl
inc
mov
push
pop
adc
mov
int3
dec
ds
ret
adc
mov
xchg
fdivrl
adc
adc
lret
sahf
lods
mov
scas
push
pop
jle
push
out
push
lock
out
stos
add
ljmp
pop
stos
shl
cmp
pusha
mov
inc
sub
fwait
jno
jo
insb
pop
sbb
into
xchg
addr16
push
jecxz
cmp
jo
pop
loop
mov
leave
mov
cmp
mov
push
pop
int3
sub
mov
fisttpll
jg
xor
adc
pop
lcall
dec
scas
fcompl
xchg
jge
mov
push
mov
jae
xchg
mov
cmc
add
mov
sub
addr16
cli
jae
adc
sti
imul
sub
mov
xchg
push
sahf
rcll
repz
mov
jbe
je
pop
fisubrl
mov
mov
stc
mov
shr
sti
xor
cld
out
push
test
mov
jnp
data16
int3
push
rcl
flds
stos
push
sub
iret
hlt
pop
cmp
js
nop
jo
sti
aam
jae
lock
in
out
ljmp
pop
in
stos
imul
es
mov
icebp
outsl
lods
add
pop
lods
cmp
out
push
push
repz
jge
inc
lods
fsubr
dec
hlt
dec
lcall
push
stc
hlt
push
mov
cmp
and
adc
push
sub
jae
add
push
mov
jnp
and
jae
ret
adcb
push
fimuls
scas
pop
or
outsl
aam
movsl
sbbb
pushf
add
pop
insb
cmp
out
hlt
popf
push
not
aam
call
repz
push
xchg
xchg
jae
add
sbb
jecxz
flds
dec
mov
roll
outsl
pop
clc
shll
fsubp
ficoml
dec
adc
andb
loopne
ds
mov
sarl
mov
cs
fistpll
push
bnd
mov
lock
push
cmp
push
test
fcompl
dec
popa
aam
pushf
fldt
shrb
rclb
bound
dec
mov
fs
dec
pop
mov
int3
inc
sbb
jbe
fwait
pop
push
outsb
jns
pusha
lods
outsb
push
push
or
mov
roll
pusha
int3
ret
adc
fmull
mov
mov
fmuls
icebp
mov
inc
mov
ret
push
rorl
pop
push
pop
shlb
pop
pop
mov
push
jmp
sub
stc
push
mov
ss
int3
shl
mov
sub
xor
pop
ret
aam
pop
add
pushf
jb
push
add
add
rcrb
jo
push
dec
shl
mov
or
clc
shrb
or
addr16
jmp
jo
mov
insb
push
mov
mov
aas
mov
pop
mov
loopne
pop
push
popf
xchg
mov
aam
mov
sub
rclb
jb
ds
out
jo
lret
push
sbb
les
int
movsb
sub
pop
and
sahf
pop
pusha
pop
lods
outsb
pop
xor
mov
insb
das
jb
jbe
pop
sbbb
mov
jp
push
sub
jnp
sub
fcoms
sbb
jecxz
xor
cli
rorb
nop
cwtl
lret
enter
adc
jae
fdivrp
aam
shrb
nop
mov
sbb
fimuls
daa
cmp
daa
fwait
stos
lret
fdivs
push
adc
icebp
pushf
jb
out
lock
cwtl
fcoml
fadd
cmpsl
nop
ret
shlb
jae
fdivrp
into
dec
int3
daa
test
fcoml
fcomp
cli
inc
adc
cli
rorb
daa
stos
into
cmpb
jno
out
cli
fimull
daa
stos
cmpb
rclb
femms
lret
ljmp
cmpb
mov
int3
fsubp
ljmp
fadds
nop
ret
shlb
pop
pushf
shll
sub
mov
mov
out
mov
sbb
shl
xchg
cs
xor
push
rcrb
into
movsl
int3
sub
jb
mov
xlat
les
jb
mov
xlat
mov
pop
aam
test
fcmovbe
mov
divl
mov
mov
xchg
cmp
mov
lret
mov
push
in
fsub
pushf
imul
mov
push
out
js
cwtl
or
jo
int3
outsb
insb
mov
inc
rcr
push
xor
aad
in
stos
outsb
fs
aad
repz
push
divl
divl
js
idivl
test
pushf
out
cmp
notl
test
fcmove
movsb
cli
rorb
test
lcall
mov
and
js
or
adc
xchg
fldcw
cwtl
mov
cmpsb
adc
lock
xchg
or
jb
stos
push
push
cwtl
jb
test
test
sbbl
test
test
mov
jb
test
test
rcrl
xlat
test
scas
mov
push
jbe
mov
neg
push
in
stos
not
jg
fiaddl
xor
es
test
mov
scas
jno
scas
aas
adc
hlt
mov
push
xor
clc
cmpsl
push
fidivl
dec
lods
push
leave
jo
pop
cli
ficoml
lods
js
shrl
mov
adc
int3
cmpb
int3
popa
pop
add
int3
loopne
movsb
int3
fadd
xchg
jb
inc
rcr
lock
aam
cmpsb
int3
enter
add
adc
fcmovb
xchg
inc
dec
fisubrs
test
xor
in
lods
pop
dec
mov
sbb
mov
fcmovb
fidivl
jae
fdivrp
fimull
pop
pop
cli
fiaddl
call
loop
insb
fcomp
loope
call
and
int
in
adc
gs
jb
push
xor
ja
sarl
gs
and
test
clc
pop
ja
nop
ret
shlb
pop
sbb
shlb
jae
ja
ja
mov
jae
loope
jmp
pop
aam
sbb
andl
negl
in
dec
orb
roll
xchg
xor
mov
movsb
fdivrs
or
into
pop
sti
dec
lods
jle
rol
shrb
je
lahf
pusha
test
xlat
in
mov
jb
and
cmpsb
cmpsl
add
or
stos
sub
fcompl
pop
sub
or
or
dec
add
icebp
jb
pop
faddl
loopne
sub
add
fcoms
and
fisttpll
xlat
mov
negl
xorb
adc
cwtl
mov
test
push
push
adc
adc
jmp
adc
outsb
stc
aam
xor
movsb
cmp
cmpsb
shlb
fimull
pusha
xchg
jmp
jg
int3
and
ja
inc
in
sub
rclb
out
fsubrl
push
xor
nop
stc
aaa
es
dec
dec
in
testb
and
inc
sub
or
lret
loopne
cwtl
mov
test
in
inc
cld
adc
mov
add
int3
sub
sbb
int3
into
cli
rcrb
fcoms
aam
repnz
mov
fldenv
push
mov
repnz
mov
fcmovb
mov
rorb
mov
push
shl
cld
pushf
and
aad
icebp
out
out
xchg
cmp
sahf
test
mov
push
cmc
fildl
sbb
sarb
sbb
mov
shll
mov
insb
add
jae
lret
mov
dec
adc
ror
fstpt
lds
adc
push
xor
ljmp
aam
and
adc
ss
dec
fistpl
out
fmulp
adc
mov
pop
pop
cmp
mov
sub
out
pop
push
xor
push
mov
ror
imul
mov
sbb
pop
icebp
out
repnz
cmp
hlt
mov
out
pusha
les
jns
arpl
js
or
jmp
test
xchg
lods
and
aaa
sub
mov
fcomps
sbb
inc
adc
aam
xchg
mov
pusha
pop
xor
out
rcrl
jp
nop
repnz
sahf
in
outsb
enter
push
adc
fcmovnbe
mov
xchg
fcmovbe
add
fcoml
repz
adc
sub
sahf
sbb
xchg
jmp
sub
xchg
fs
enter
cmp
nop
leave
jb
mov
movsb
sub
repz
xchg
cs
mov
data16
or
mov
jmp
add
rcrb
mov
adc
call
das
sbb
cwtl
lahf
mov
in
loope
jmp
nop
adc
mov
sbb
xor
fcomi
arpl
lods
fcomps
and
fnsave
or
adc
shlb
xchg
int3
clc
je
jmp
cmp
out
inc
aam
sahf
xchg
jnp
aam
pusha
or
pusha
cwtl
out
xor
cmpsl
or
stos
int3
push
shlb
outsb
adc
loopne
lcall
sub
ret
stos
iret
fistl
sbb
lcall
inc
dec
negl
aam
or
pushf
or
lock
push
adc
in
mov
faddl
mov
test
nop
pusha
mov
in
insb
mov
xor
pop
adc
loope
sub
pop
jbe
xchg
call
lahf
pusha
xchg
aam
repz
push
stos
lcall
stos
orl
push
lods
scas
xor
mov
pop
lods
cmpsl
sar
je
add
repnz
jbe
mov
cs
mov
lds
sbb
fs
sbbl
outsl
aam
in
cmpsl
aam
dec
in
int3
sbb
jae
fwait
or
testl
fdivs
push
idivl
cmp
adc
insb
leave
js
into
out
sub
adc
sti
leave
mov
out
pop
lods
bound
jno
add
test
hlt
ficompl
into
mov
dec
cld
jg
jb
xor
cld
lods
aam
xlat
lret
les
out
test
rcll
and
test
fwait
in
int3
inc
xor
mov
xchg
or
int3
push
int3
repz
stc
enter
arpl
pop
cmp
hlt
and
lods
mov
test
addl
cmp
pop
outsb
lret
out
les
gs
lret
sahf
in
sbb
or
mov
es
mov
push
int3
or
cmp
and
jl
mov
inc
pop
test
stc
out
sti
call
sbb
mov
jo
adc
outsl
lock
xchg
pop
sbb
xor
push
add
jmp
jmp
in
sub
in
insb
mov
ljmp
test
mov
cmpsl
repnz
push
test
fsubrs
test
mov
cmpsl
iret
scas
int
push
xor
cmp
aas
adc
mov
aam
add
push
enter
dec
aas
mov
sbb
ljmp
jnp
into
ret
insb
rcrb
adc
loop
and
enter
das
nop
stos
fs
in
test
sbb
xchg
leave
xchg
and
cmp
fisubs
push
outsl
adc
push
jg
or
and
enter
or
repnz
lds
sbb
pop
popa
clc
fwait
xchg
dec
add
jle
jae
lock
int3
je
mov
dec
sub
sbb
stos
mov
push
pop
mov
mov
pop
cmpsb
ljmp
cmp
jo
insb
loop
cmp
jecxz
out
mov
int3
enter
cmp
push
iret
push
and
mov
adc
mov
xchg
cmpsl
dec
mov
adc
push
dec
push
pushf
fists
enter
sub
jno
mov
shl
pop
xchg
clc
js
les
not
push
int3
mov
pop
jmp
cwtl
jle
dec
ret
les
jae
sbb
sub
outsl
mov
cmp
arpl
mov
call
xchg
arpl
clc
or
push
mov
ss
and
insl
outsl
cltd
cmpsl
movsb
add
ja
fcoml
test
andb
outsb
jae
sbb
outsl
or
stc
enter
sbb
cwtl
pop
outsl
inc
xor
sub
add
sbb
push
pop
outsl
repz
je
fsubs
imul
bndldx
xchg
adc
pusha
out
sbb
bound
jp
loope
std
imul
lcall
mov
int3
es
add
and
arpl
enter
dec
bound
xor
add
movsl
out
pusha
loop
pop
jno
shrb
imul
adc
maxps
mov
bound
pop
pop
pop
xor
daa
int3
andb
aam
data16
js
loop
pop
sbb
inc
cmpsb
fmuls
fwait
cli
int3
imul
aad
loope
shlb
les
pop
add
fwait
sarb
subb
jg
orb
or
xchg
sbb
mov
cwtl
in
shr
aam
fmul
iret
lret
stos
aam
dec
adc
loop
frstor
lret
insb
enter
test
mov
mov
adc
xor
faddl
test
ret
movsb
or
mov
dec
stos
add
js
adc
mov
aam
xor
test
xchg
ljmp
aam
pop
pop
mov
pop
test
test
mov
out
jecxz
aas
pop
int3
sbb
mov
add
pusha
xor
rclb
ja
popa
sub
fsubrl
dec
adc
mov
mov
ds
mov
lret
adc
jne
sbb
xor
fidivs
int3
mov
ret
mov
xor
call
xor
ds
jne
shrl
adc
mov
dec
loop
xlat
sub
hlt
out
aad
sbb
fistl
and
mov
cmpsb
stos
mov
adc
shll
in
add
out
mov
pop
ret
movl
push
pop
push
jne
sbb
xchg
dec
pop
rol
xlat
mov
sbb
aad
sbb
stos
xchg
hlt
adc
daa
testl
pop
loopne
pop
lret
test
out
enter
daa
cmpsl
sahf
pop
outsb
lods
adc
bound
or
xchg
sbb
mov
jnp
sbb
fimull
xor
iret
or
push
jg
mov
push
je
lcall
jb
and
xlat
aam
fs
sbb
insb
xchg
cmpsl
orb
pop
arpl
adc
divl
loop
and
into
adc
jno
je
xchg
outsl
jecxz
into
jl
rcrb
lret
enter
or
jecxz
int3
cmpsb
ljmp
ja
sahf
push
pcmpgtb
pop
movsb
and
aam
jno
ret
fsubrl
aam
imul
sahf
int3
sbb
pop
and
int3
sbb
cmpsl
adc
xchg
into
int3
mov
sub
adcl
pusha
cltd
shll
mull
fadd
jl
jne
sub
lods
add
adc
sti
and
faddl
push
xchg
mov
fwait
dec
sbb
stc
inc
or
adc
xchg
sub
or
imul
mov
daa
cltd
sbb
adc
sbbl
mov
addr16
inc
and
jle
adc
dec
push
aam
or
inc
fistps
adc
fnsave
iret
cmp
jecxz
xlat
rcr
les
pop
mov
mov
sub
dec
and
xchg
push
mov
push
dec
jle
inc
rcl
and
lock
fdivrs
pop
sarb
shlb
mov
mov
enter
or
shr
rolb
movsb
xchg
adc
mov
es
xchg
ret
pop
les
pop
bound
dec
fdivs
and
sarb
cltd
sbb
jle
jb
cwtl
inc
cs
in
sbb
push
add
fdivrp
and
test
add
inc
mov
push
xlat
sbb
lcall
or
adcb
rolb
jl
jns
fidivrs
mov
js
les
pop
je
fnstenv
cmp
fwait
enter
inc
xchg
popf
mov
lret
mov
mov
push
dec
dec
xorb
add
enter
cltd
int3
sti
adc
out
xchg
cwtl
test
sti
push
sbb
les
rcr
fsub
mov
aam
stos
mov
push
hlt
sub
ficoms
fists
adc
adc
shll
sub
cmp
data16
mov
xlat
aam
mov
pop
out
jg
test
shlb
inc
lret
int
lods
jae
sahf
and
push
test
inc
xor
cmp
jle
mov
jno
dec
mov
jae
les
jle
scas
loopne
loopne
fsubs
cmpb
fisubrl
lock
xchg
mov
mov
xchg
sub
inc
sub
adc
orb
call
jle
inc
xchg
int3
iret
test
fnstcw
mov
hlt
ljmp
icebp
insl
jnp
fsubrs
sbb
jnp
insl
jle
jae
stos
into
jae
aam
mov
aas
jo
cltd
enter
dec
dec
iret
mov
adc
out
mov
mov
push
arpl
lods
fs
jno
repz
pusha
xchg
mov
jle
les
add
mov
in
lret
lods
aam
jecxz
xor
push
dec
sub
cltd
or
jl
lret
frstor
in
loop
adc
outsb
mov
cmp
add
sub
and
xor
push
mov
test
rclb
aas
sbb
insl
inc
pushf
push
movsl
xor
jno
shll
cmc
call
sbb
mov
in
dec
lret
sub
sbbb
fsubs
push
push
jo
sub
push
fucom
and
insl
sti
neg
mov
adc
arpl
lret
rclb
xchg
nop
xchg
scas
outsb
sti
xchg
into
xchg
fs
mov
outsl
push
test
loop
ljmp
dec
imul
inc
cmpsb
xor
xlat
push
ja
cmp
aam
fistpl
mov
pusha
inc
imul
inc
pusha
call
xor
inc
push
xlat
ss
sarl
aam
imul
mov
dec
add
mov
push
int3
insb
mov
subb
out
into
jb
mov
icebp
insb
push
jae
aam
mov
fs
pop
add
jg
inc
nop
sti
push
test
in
adc
aam
pushf
inc
mov
dec
shr
aam
ret
pop
lds
and
pop
lcall
jae
loop
add
lock
loope
sbb
pop
clc
js
xchg
add
sbb
stos
sub
int3
int3
adc
pop
pop
xorl
pop
ljmp
repnz
cld
pop
enter
push
sub
dec
inc
add
cmpsb
shr
push
fcomps
hlt
ljmp
out
sahf
xchg
lahf
in
cmp
add
int3
test
jle
sub
in
mov
pop
in
mov
pop
mov
cmp
pusha
mov
lods
insb
jo
push
mov
sbb
imul
arpl
imul
mov
pop
adc
mov
pop
inc
es
adc
lods
jp
inc
lock
mov
pcmpgtd
lret
test
bound
outsb
insl
andb
enter
mov
loope
mov
mov
or
and
mov
mov
cmc
mov
sbb
inc
out
inc
add
xor
mov
lret
addr16
mov
xchg
xor
push
sarl
adc
insb
jne
inc
dec
push
cltd
or
adc
cwtl
inc
js
daa
jae
fdivr
jae
aaa
sbb
jl
lock
fxch
mov
cltd
mov
es
ficoml
add
repz
push
sub
add
and
pushf
movw
pusha
mov
not
lods
pusha
pushf
jmp
xchg
loopne
flds
aad
cmp
call
mov
std
movsl
inc
stos
mov
ds
imul
imul
fdivl
mov
es
sub
cmp
hlt
rcrb
dec
push
mov
pop
aam
inc
mov
leave
or
mov
dec
mov
into
or
imul
jo
in
pushf
ljmp
cmp
lds
outsl
mov
sub
outsb
xchg
insb
push
jg
int
pop
movsl
mov
inc
lods
add
insb
dec
cli
insb
out
mov
push
icebp
das
xor
push
sub
loopne
push
cmpsb
pmuludq
lret
nop
je
out
sub
xchg
inc
sbb
out
and
fs
jge
iret
or
xor
push
mov
mov
xchg
cmp
mov
fdiv
fst
rolb
jmp
popa
lods
je
xor
mov
xchg
jns
test
das
cmp
lds
mov
mov
mov
mov
and
rorb
sbbb
stos
scas
pusha
inc
cli
les
mov
cmp
lds
jne
ja
push
lret
and
stos
push
mov
loop
bound
xor
enter
lret
je
and
pop
js
sarl
test
loop
push
clc
fwait
sarb
call
insl
xchg
jne
fistpl
dec
cwtl
sub
out
and
push
adc
cmp
lods
subl
xor
xor
adc
jmp
add
inc
push
scas
add
pop
sbb
scas
les
cld
dec
mov
pusha
push
and
arpl
dec
lea
cli
sbb
icebp
lods
push
fcoml
pop
int3
mov
sbb
mov
inc
imul
jmp
aas
test
adc
inc
adc
enter
mov
mov
faddp
mov
pop
ss
insb
test
fcoms
pop
test
xor
ror
ja
xchg
stc
sub
cli
je
rolb
fs
pusha
pop
call
push
stc
add
movw
jmp
pushf
push
jae
sub
fcmovu
inc
dec
xlat
cmp
js
ljmp
jb
push
cmp
or
jno
mov
addr16
and
addr16
lcall
call
lock
test
and
and
into
mov
add
fstpl
rorb
push
mov
mov
lds
out
push
lds
add
repnz
stc
mov
mov
adc
arpl
pushf
sar
or
fs
pop
add
add
and
jle
add
pusha
cmc
repnz
pusha
call
lea
je
pusha
pushf
sub
pushf
movw
stc
cmp
pushf
pushl
mov
pushf
lea
jmp
lea
call
call
pusha
movl
lea
ja
pushf
movw
mov
movb
lea
jb
cmp
cmc
cmpb
jmp
shll
lahf
mov
push
cmpsl
push
in
sarl
mov
push
fstps
push
sbb
mov
ret
push
lahf
out
mov
and
mov
push
in
das
jmp
sbb
js
sbb
imul
scas
adc
stc
aaa
gs
jg
mov
or
and
sub
cld
inc
and
ljmp
test
pusha
cmc
cmpb
lea
je
jne
mov
ror
or
sub
das
rcl
test
mov
rcr
neg
shl
cmp
add
bt
mov
call
std
jp
fdivs
es
dec
js
loopne
mov
inc
fldl
scas
sub
mov
inc
nop
lahf
jmp
test
adc
popa
test
aas
push
je
mov
fadd
push
mov
cmp
cld
jno
mov
and
std
push
mov
jne
fs
mov
push
or
setg
mov
movsbw
movzbw
lea
pushl
push
mov
pushf
movl
call
cmp
cmp
call
push
movw
mov
call
lea
jne
setne
btc
xor
jmp
stc
cmc
test
pushf
pushf
lea
je
stc
stc
pushf
pusha
sub
cmp
push
cmp
clc
cmp
pushf
pushf
movl
lea
jmp
bt
adc
shr
add
and
mov
call
mov
call
cwtl
mov
pushf
movsbl
movzbl
lea
pushf
movb
pusha
jmp
repnz
test
push
data16
sbb
je
les
loopne
ljmp
and
sbb
sbb
push
cmpsb
push
sub
add
lcall
scas
popf
dec
jo
add
mov
iret
jecxz
xchg
outsl
lock
mov
fs
loopne
pushf
lea
jne
xor
shld
rol
test
mov
bsr
jmp
or
xor
aas
or
cmp
jne
xchg
mov
pop
js
dec
xlat
das
fs
iret
jecxz
xchg
xchg
jno
adc
sub
mov
or
cmp
jne
pusha
cwtl
call
xlat
add
scas
loop
jnp
arpl
cmp
clc
arpl
in
call
repz
stos
inc
lahf
or
xchg
inc
sbb
inc
dec
mov
cltd
lea
sarl
das
xchg
faddl
aas
or
jmp
addb
xor
pop
push
adc
cmpl
fdivs
ja
mov
pushf
movb
movl
push
movl
push
lea
jmp
mov
pushl
pushf
mov
pushl
ret
pop
pop
es
ret
or
add
xchg
or
int3
mov
lock
adc
inc
cld
mov
mov
mov
jne
jmp
jmp
iret
movb
add
pop
inc
inc
sbb
ret
xor
add
repnz
loopne
cs
mov
inc
adc
adc
loope
fsubrl
inc
pop
or
repz
lods
inc
xor
jo
ret
adc
enter
imul
lds
add
aad
lea
call
pushf
lea
jae
pushf
jmp
pop
das
jb
popf
lret
outsl
mov
in
ret
scas
push
dec
push
aaa
cli
xor
lcall
sahf
push
fisttps
jb
push
iret
sarb
push
xlat
sbb
adc
inc
xlat
stc
mov
data16
iret
cltd
cmp
and
ret
cmp
lcall
stc
push
adc
scas
or
cmp
addb
and
subb
adc
enter
pop
xor
mov
xor
negb
clc
dec
add
icebp
sbb
mov
adc
fsub
xor
aas
inc
insl
rorb
cltd
rorl
and
push
insb
movsb
dec
xchg
loop
adc
enter
pop
adc
xchg
in
stc
rol
cmpsl
cmpsb
push
es
loop
testb
sbb
cmp
addr16
xchg
xchg
mov
shlb
and
movsb
or
scas
mov
xor
sub
jl
aad
lock
test
les
in
pop
sbbl
mov
pop
fiaddl
mov
fidivrl
call
jo
bound
in
sbb
in
jp
mov
mov
lret
gs
push
outsl
fdivl
xchg
pop
push
call
std
sub
shll
bound
jae
push
xchg
push
scas
test
pop
sbb
add
pop
sbb
or
sbb
fs
jmp
movl
movl
push
pushf
lea
jmp
test
or
pushf
call
clc
rcr
mov
call
mov
ljmp
add
fs
stos
in
pop
loope
das
cs
adc
test
ror
dec
push
and
popa
adc
cwtl
adc
shlb
xor
cmp
pop
leave
cmp
cmp
xchg
mov
jno
mov
jb
xchg
or
or
sahf
xor
jae
hlt
jmp
loopne
add
dec
in
jae
cmpsl
dec
arpl
xchg
cmp
int
fisubs
mov
fs
and
push
push
sub
clc
test
cmp
pusha
lea
jp
pushf
movb
lea
jae
pushf
pusha
lea
jmp
jmp
pushf
lea
jne
not
shld
sar
shrd
mov
clc
call
lea
jne
call
movw
pushl
ret
shr
pusha
mov
call
jmp
push
sub
bt
repnz
push
pushl
lea
jne
xor
shl
add
movzbw
mov
mov
adc
ror
bsf
sub
cmp
mov
stc
sub
stc
pushf
cmc
pushl
popl
pusha
mov
cmp
movb
pusha
pushf
push
lea
ja
shl
pushf
sub
setae
movsbw
lea
add
adc
neg
mov
test
cmp
pushf
mov
test
repnz
pusha
lea
jne
movzbw
lea
lea
bswap
movb
pusha
lahf
jmp
push
dec
pushl
pushf
mov
jmp
mov
or
lea
rorl
in
xor
and
ja
or
push
jno
jno
xlat
js
sbb
mov
mov
and
or
repnz
jb
gs
dec
jo
jns
rcll
xor
rorl
or
in
jae
popa
or
cmc
fsubrs
divl
push
mov
xor
aas
loopne
and
shl
loop
out
ljmp
stos
filds
or
mov
pop
or
call
sti
in
fsubrl
xchg
out
pop
push
fnsave
jnp
push
test
je
cli
scas
mov
fimuls
jmp
pusha
hlt
lahf
ss
xchg
and
xchg
pop
sub
lret
loope
or
in
pop
jmp
mov
pop
mov
pop
or
in
loopne
shll
jns
and
mov
iret
icebp
cld
jo
and
xor
pop
lret
and
xor
adc
mov
sahf
xchg
out
push
mov
fs
cmp
ljmp
lds
mov
and
and
jecxz
jecxz
jns
in
push
cs
lea
cmpb
sbb
push
push
push
dec
add
pop
adc
jb
pop
shr
mov
cmpsl
mov
pop
imul
js
jle
xlat
or
fisubs
mov
push
jle
xchg
jo
enter
nop
adc
or
div
xor
sbb
sub
dec
jae
mov
int3
lock
sahf
call
out
out
cmc
or
rol
test
movhps
adc
sbb
insb
arpl
fs
arpl
not
lea
bswap
mov
lea
jl
ja
pushf
lea
jbe
jb
stc
push
cmpb
jmp
fsubrs
in
cmp
cmp
xchg
enter
sbb
fwait
xchg
cmp
mov
mov
loope
mulb
lcall
lock
aam
xchg
cmp
adc
add
inc
add
push
lea
ja
push
imul
push
pusha
pushf
lea
jmp
call
enter
or
movsb
inc
dec
pop
test
stc
and
adc
xchg
dec
in
loopne
adc
pop
pop
dec
aad
jle
mov
inc
xchg
mov
xor
jnp
sub
jne
mov
into
jp
lods
mov
adc
xchg
rorb
mov
clc
xchg
adc
or
or
cmp
jb
inc
cli
daa
jne
xchg
popf
imul
jmp
dec
cmp
cmc
mov
sbb
sti
mov
nop
mov
or
sbb
mov
pop
jne
add
and
pop
mov
pop
jo
ja
arpl
sbbb
popf
add
loop
add
bound
or
add
pusha
or
pusha
call
and
clc
std
push
outsb
xchg
popf
jbe
int3
mov
xchg
or
xchg
cld
jns
jo
mov
data16
push
jbe
xlat
inc
dec
mov
ficoml
enter
call
adcb
push
dec
scas
adc
mov
xor
mov
int3
or
push
xor
sti
xchg
jl
dec
lea
sbb
imul
int
and
jg
lock
les
ror
cld
mov
sahf
add
cmp
fs
jns
push
movl
pushf
push
mov
mov
mov
pushf
mov
movb
pushl
ret
jmp
push
mov
movsbw
xchg
mov
bswap
lea
mov
pusha
mov
jmp
mov
movb
pushl
popl
pusha
mov
pushl
ret
mov
pushf
movw
lea
jmp
rcl
fldenv
push
lds
push
dec
xor
push
int3
xor
imul
gs
repz
or
ret
cwtl
test
cld
xor
cmp
mov
pop
mov
pop
pop
sub
ficompl
int
js
fdivl
cs
add
arpl
push
xchg
adc
daa
jle
cmp
stc
cli
fs
loopne
andb
pop
inc
cmpsl
push
rcr
into
fwait
ret
jge
insb
jno
xchg
lods
jecxz
mov
fs
ret
popw
bt
mov
mov
push
test
stc
not
test
test
stc
cmc
neg
cmc
stc
pusha
cmc
ror
mov
jmp
mov
neg
mov
pushf
repnz
pusha
call
pushf
stc
xor
jmp
pushf
mov
lea
call
pushf
jmp
pushf
pushf
mov
movzbw
pop
pusha
mov
pushl
ret
inc
ret
mov
adc
sbb
repz
add
or
cld
je
rcrl
cli
jnp,pt
dec
cmc
cmp
pop
or
mov
xor
jp
xorb
je
call
cltd
jp
aaa
push
xchg
jo
daa
or
push
test
xor
outsb
cmp
dec
sub
or
sub
es
ror
add
sbb
cmp
lahf
push
mov
stos
and
sub
roll
icebp
rcl
mov
insb
fdivs
pop
lds
jae
and
jecxz
fstl
aad
sub
outsl
sub
faddp
test
mov
std
inc
inc
pop
xchg
scas
fdivl
inc
xchg
pushf
add
or
movsl
xor
xor
adc
rcr
adc
xor
sbb
aam
cmpb
push
das
adc
adc
mov
pop
mov
xchg
popl
pop
adc
shl
imul
add
inc
xchg
es
pop
mov
jecxz
push
cld
inc
or
xor
cmp
aaa
mov
jno
cmc
scas
mov
test
scas
fldcw
movsl
push
push
pop
or
subb
pusha
jno
outsl
gs
rcrb
jo
out
movsl
mov
inc
rcll
lock
adc
std
mov
jns
fadd
and
push
cli
outsb
jmp
rcrl
fwait
popl
mov
divl
jg
cmp
inc
xor
xor
lret
in
lods
push
cmc
dec
jl
mov
mov
xor
cmpsl
and
mov
mov
and
cltd
bound
mov
push
sahf
sahf
xchg
add
adc
jbe
xchg
es
pop
jo
sub
mov
inc
ljmp
jns
decb
dec
or
xor
imul
enter
xor
sub
ds
scas
das
cmp
and
sbb
enter
incb
out
sub
pop
xchg
adc
js
sub
mov
ss
shl
js
test
loopne
or
adc
ret
out
sbb
sbb
sbb
movsl
lcall
dec
mov
inc
imul
fwait
mov
popa
leave
test
adc
dec
inc
ja
xor
lds
sti
inc
xor
xor
scas
or
jl
fstpl
rolb
jne
pop
icebp
cmp
cs
roll
ljmp
test
dec
hlt
sbbl
int3
out
in
or
repz
sbb
les
xchg
fndisi(8087
adc
jbe
xchg
ljmp
push
sbb
repz
sub
inc
in
out
cwtl
fistpll
aaa
or
xchg
ja
fcoml
and
push
dec
psrld
cmp
pop
enter
std
ja
sbb
mov
pushf
jl
rcrl
ret
enter
push
inc
pop
enter
jecxz
scas
mov
pusha
sub
dec
inc
add
pusha
test
jge
lcall
jbe
cmovne
and
jne
pop
iret
test
dec
scas
xchg
add
loop
icebp
sub
mov
std
push
mov
dec
lret
sub
xor
lock
mov
insl
jbe
push
inc
add
out
xlat
les
jmp
lret
dec
pop
jno
cmpsb
or
scas
cmp
mov
adc
sub
int
stos
aaa
jmp
cmp
xor
fildll
dec
loop
jle
inc
out
das
adc
test
int3
scas
lahf
sti
fnsave
mov
int
les
lods
fldt
or
in
sbb
cmp
pop
rorl
daa
jg
jae
jno
jno
aad
imul
daa
or
xor
mov
adc
push
mov
decb
sbb
push
test
push
sbbl
jp
xchg
ljmp
test
test
xor
pop
xor
or
adc
insl
insb
sti
mov
jb
xor
jno
in
js
and
aaa
xchg
inc
in
xor
jle
dec
outsb
push
or
and
jl
xchg
xor
mov
popf
inc
loop
sub
or
mov
mov
ret
jecxz
popf
stos
mov
dec
gs
mov
sahf
adc
xchg
clc
repz
mov
das
inc
fdivrl
test
dec
scas
shll
mov
or
xchg
add
inc
mov
ficomps
ficompl
call
jae
jmp
clc
and
lret
aad
pop
shlb
and
lcall
xor
movsl
pop
aas
and
outsl
je
packssdw
cmpsb
xor
pop
add
mov
lret
sti
addr16
sti
rcrb
dec
pop
push
cld
out
pop
repz
inc
iret
push
rorl
or
xchg
add
mov
pusha
xchg
jle
lods
mov
clc
jno
xchg
xchg
mov
call
xor
sbb
xor
xor
pop
and
fdivs
clc
test
jne
add
mov
inc
and
mov
pushf
movw
pushl
ret
cli
mov
mov
mov
mov
jno
adc
cmp
sub
inc
jge
js
cmpsb
arpl
arpl
movsb
and
mov
cvtpi2ps
sbb
mov
shrl
pop
int
imul
das
lea
jg
imul
fdivrl
sbb
xchg
repz
arpl
sub
cmp
roll
idivl
test
xchg
lock
data16
mov
push
xchg
or
lahf
das
cmc
mov
cmc
cwtl
cmpsb
sti
mov
repnz
inc
setb
cmp
lods
sub
loop
mov
lcall
or
call
ret
pop
push
popa
addl
xchg
cmp
mov
mov
inc
xor
ss
cmpsl
cwtl
lods
test
and
sub
stc
loop
sbb
mov
xor
fidivl
rolb
inc
dec
sbb
mov
mov
xlat
cmp
dec
sbb
scas
shlb
adc
add
cwtl
in
std
ret
sbb
lcall
sub
xor
inc
mov
mov
push
or
imul
es
dec
data16
daa
decl
adc
sbbl
test
push
cmc
sbb
lahf
ret
out
inc
xchg
sbb
test
adc
push
fnstsw
jbe
add
push
mov
jmp
xchg
les
mov
fdivrl
out
mov
loopne
add
outsl
rorb
add
pusha
rcl
rol
test
mov
test
pushf
jmp
jmp
add
pusha
call
out
xchg
pop
inc
or
push
jecxz
xchg
out
sbb
mov
and
aam
js
or
movsl
test
pop
movhps
push
loop
pop
mov
sti
out
push
insb
add
add
jns
and
cmpl
enter
movsb
cmp
cltd
mov
push
lock
jp
cmpb
xor
dec
and
add
lcall
cld
cmp
out
fldl
or
jg
dec
mov
push
sbb
das
mov
test
mov
and
jg
sbb
and
jmp
pusha
negl
jl
mov
pop
sbb
dec
xor
nop
mov
sub
orb
pop
sbb
jbe
aas
push
pushf
imul
in
sbb
push
add
stos
fisttpll
jb
adc
lahf
mov
leave
add
mov
or
dec
cmp
cmp
in
jp
or
and
pop
and
cmp
dec
and
and
sbb
dec
and
and
cmp
sti
mov
jge
fsubl
int3
jge
in
sti
in
jp
xor
lea
jne
pushf
bt
xor
rcr
call
add
add
push
add
push
add
sbb
insl
pushw
add
xor
add
push
add
xor
add
jg
and
repz
jae
out
sarb
sub
es
iret
adc
lods
and
fldl
inc
dec
out
cmpsl
xor
xor
mov
pop
daa
and
mov
std
mov
jb
out
loopne
or
xor
sahf
sahf
jbe
xchg
popa
test
and
push
dec
inc
inc
xor
push
loope
stc
adc
stc
xor
ss
mov
jecxz
lock
out
repnz
sub
xchg
sbb
or
cltd
into
dec
es
sub
sub
lock
ja
push
out
add
mov
and
out
sub
mov
mov
mov
loopne
sahf
jl
sbb
cli
dec
pushf
jge
repz
in
lock
inc
jmp
sahf
mov
stos
or
test
dec
mov
aas
out
insl
mov
mov
add
pop
dec
repz
push
mov
sti
ds
pop
dec
popa
inc
and
adc
xor
popa
push
enter
inc
into
stc
add
pop
cli
daa
sub
pop
ret
inc
push
gs
mov
mov
jmp
imul
mov
xchg
xor
cmp
cmp
out
xor
mov
xorps
mov
add
sbb
adc
frstor
jmp
cmp
xchg
pop
mov
bound
push
cmp
or
mov
adc
sub
stc
das
mov
pushf
popa
sbb
pop
data16
cmpsb
popa
and
fldcw
sub
rolb
lea
and
pushf
pushl
popl
pusha
push
pushl
ret
pop
ljmp
ss
dec
push
cmp
shlb
shrb
adc
cmpsl
mov
jl
cltd
int
lahf
lcall
inc
fnsave
add
ds
repz
lcall
lahf
cmp
outsb
adc
jb
mov
stos
dec
jg
std
stc
and
push
mov
loop
scas
fisubrl
pop
push
fildl
enter
flds
cld
sbb
loopne
lods
ja
cli
inc
mov
jmp
pop
xor
cltd
cmp
xor
xor
scas
sbbl
inc
pop
outsb
cmp
sbb
push
daa
pop
pop
lds
data16
pop
mov
fildl
dec
push
lea
mov
push
or
imul
test
aaa
test
and
inc
imul
mov
push
add
pop
pusha
sbb
mov
sbb
pushf
pushf
jmp
cmpsb
sti
jg
mov
jmp
add
movsb
imul
rcrb
les
xlat
dec
or
jl
cmp
ljmp
mov
mov
adc
xchg
lods
rol
popf
pop
test
jg
insl
mov
rcrl
adc
adc
adc
add
loopne
ret
into
popa
aas
loopne
adc
mov
fnstenv
xor
jae
mov
and
dec
lcall
sub
sbb
and
je
aam
pop
cs
push
mov
jae
lahf
out
adc
xchg
cmp
sti
neg
xor
push
iret
add
mov
fs
call
jmp
stos
sub
lret
bound
cltd
daa
sub
pop
outsb
loope
push
and
push
ret
xor
je
push
ret
insb
push
adcb
out
out
lea
fwait
push
xor
and
dec
std
scas
xchg
loope
push
fcomip
dec
aaa
push
dec
popa
idivb
popf
inc
imul
fstl
inc
enter
scas
nop
into
repz
jecxz
push
sbb
addr16
dec
cmp
xor
sti
pop
xlat
xchg
nop
or
pop
mov
mov
out
fdivr
lret
bt
bt
pushw
popfw
mov
inc
push
adc
lea
push
pushl
ret
mov
jmp
pushf
call
call
pusha
add
jle
cmpsl
jbe
out
xchg
or
push
sbb
testl
pop
subl
int3
cmp
pop
aam
clc
shl
xor
dec
arpl
sahf
push
jl
das
test
fs
mov
push
call
push
movl
push
mov
pushl
popl
mov
pushf
movw
pushl
ret
imul
lea
stc
bt
pusha
pushl
add
movl
lea
jmp
lea
ja
pushf
mov
jmp
pushf
lea
jnp
mov
pushf
pusha
pushf
mov
movb
pushf
pushl
pushl
ret
jbe
out
sub
or
bound
jl
ds
inc
int3
repz
movsl
jle
mov
mov
movsb
lret
inc
sbb
dec
lcall
add
inc
mov
and
arpl
out
mov
mov
popf
jae
xlat
add
mov
decl
test
inc
call
bswap
lea
mov
movzbw
movsbl
not
call
not
pushf
dec
not
not
call
push
dec
call
push
call
in
pusha
push
movw
movb
movl
call
pushl
movl
mov
push
pushf
lea
jmp
ljmp
mov
xchg
xlat
test
aad
negl
xor
outsl
in
gs
jg
pop
fildll
mov
int3
mov
or
and
jae
in
popf
insb
push
push
mov
mov
test
insb
fdivrl
fistpll
ja
xor
cmpsb
nop
outsl
mov
lock
add
cmp
pop
aas
xchg
outsb
cmc
or
add
pop
sbb
fistl
sub
push
ss
add
xchg
xor
hlt
loopne
jecxz
xor
add
inc
sub
ret
cmp
and
adcl
add
mov
xchg
lret
hlt
or
aam
or
xor
movsl
mov
in
adc
int3
xchg
in
inc
int
mov
pop
fs
mov
sbb
lea
add
cwtl
xchg
inc
xchg
jmp
data16
out
test
pop
ss
mov
and
xchg
pop
mov
cmp
adcb
int3
mov
movsb
dec
pop
mov
sub
xchg
shrl
mov
std
cmp
push
adc
cltd
xlat
mov
cltd
testb
imul
pop
sbbl
add
jp
sahf
pusha
xchg
sbb
sub
xchg
jns
sbb
sbb
cmp
xor
hlt
shlb
ret
jl
mov
test
pusha
pop
jae
ror
add
sub
add
adc
jg
lret
add
in
fldcw
mov
sub
xor
lea
dec
jmp
inc
cmpsl
fldt
scas
xor
xchg
flds
fs
add
mov
lods
subl
jge
in
leave
addb
mov
sub
add
es
pop
jno
and
jae
add
repz
pushf
add
clc
pop
cld
sti
mov
test
inc
mov
lds
adc
data16
mov
pop
cwtl
loopne
stos
aas
mov
push
lahf
lcall
adcb
mov
mov
adc
ret
data16
in
push
or
inc
adc
fsubl
and
mov
lahf
std
jo
adc
mov
sti
sbb
push
cmp
dec
aas
mov
jle
add
call
mov
icebp
jnp
fs
pop
xchg
lret
and
ja
out
cs
pusha
pop
xchg
mov
jge
push
cmp
stc
pop
rolb
sbb
lods
cmpsl
or
jmp
push
clc
dec
cld
fbld
inc
mov
sbb
cmp
sbb
add
pop
ret
rolb
loopne
orl
filds
jbe
pop
int
mov
push
divl
sbb
in
rclb
pop
ljmp
dec
cmpsl
pop
bound
mov
or
jecxz
mov
add
popa
fadds
add
je
outsl
fs
gs
imul
add
fildl
mov
cmp
cmc
and
stc
test
add
jge
pushf
bt
pusha
add
call
push
lea
je
cmc
sub
test
clc
call
xchg
mov
cmp
add
push
adcb
cltd
add
sub
insl
and
das
scas
hlt
aas
cli
out
push
imul
lret
movsb
pushf
pop
pop
ljmp
cld
jbe
es
inc
xchg
xchg
inc
adc
and
imul
imul
movsb
pop
push
idivb
push
mov
jmp
fcmovnbe
pop
pop
enter
mov
sbb
pop
push
mov
push
xor
inc
scas
push
pop
add
cltd
xchg
inc
das
les
loopne
subl
sub
mov
fwait
adc
cmpsl
push
lods
cs
mov
mov
pop
jb
or
fs
ja
dec
jge
sbb
pop
out
icebp
jg,pn
out
mov
push
sbb
mov
jl
in
push
js
sbb
xchg
stc
xchg
mov
je
inc
sub
fs
xor
cmc
not
clc
call
pop
jnp
push
jp
or
pop
clc
or
or
call
and
push
lods
jmp
dec
cli
rcr
dec
and
xor
cwtl
xor
sahf
add
je
aas
sub
xor
and
xor
sbb
leave
cmpsl
cli
xlat
mov
mov
ja
sub
arpl
adc
inc
mov
xchg
enter
out
in
std
aam
or
popf
mov
inc
dec
leave
xchg
push
add
sbbb
mov
fistl
pop
gs
mov
push
fcoms
stc
mov
lods
dec
je
inc
mov
xchg
cmp
xchg
jecxz
or
shrb
lahf
popf
bt
repnz
pushf
jmp
jne
pusha
lea
call
pushf
lea
jmp
repnz
pusha
lea
jne
pusha
movb
mov
call
lea
je
stc
pushf
add
pushf
movb
lea
jmp
xchg
inc
pop
mov
and
outsb
icebp
dec
adc
mov
shll
mov
xor
int
and
hlt
pop
dec
lret
jae
sub
mov
add
fldenv
cltd
test
jl
aas
rcr
xchg
jl
into
xchg
sti
add
mov
or
test
clc
cmp
bt
clc
add
cmp
jmp
and
dec
adc
jb
and
jl
cmpl
lret
adc
cmp
cmc
mov
xchg
sbbb
sahf
xchg
sub
hlt
add
or
push
inc
sub
out
in
push
imul
aam
aas
mov
sahf
xchg
jge
pop
arpl
fbld
rcrl
sub
pushf
cmp
or
mov
movb
lea
je
pusha
or
pusha
push
lea
je
cmp
xor
shl
mov
xor
stc
bsf
daa
sub
mov
bsr
mov
mov
sbb
add
mov
shl
shr
adc
mov
pusha
or
mov
pusha
mov
lea
je
btc
add
push
pop
sub
inc
btc
xchg
stc
shr
push
or
bts
sub
mov
shr
neg
add
and
sub
sar
add
sub
or
mov
stc
push
pusha
call
divl
iret
push
lds
cmp
loope
imul
into
and
movsl
cs
sub
cwtl
mov
xlat
test
mov
rcrb
jge
xchg
aad
scas
rclb
cltd
push
cmp
mov
sti
in
xchg
xchg
popf
xchg
repz
sbb
dec
sub
or
adc
hlt
fnstcw
inc
cmp
push
dec
add
cmpsb
mov
andb
idivb
movhps
push
int3
mov
dec
gs
sti
add
inc
pushf
jmp
push
bt
test
push
lea
jne
pusha
pusha
pushf
mov
pushl
call
inc
mov
cmc
mov
clc
test
add
pusha
stc
jmp
dec
or
push
int3
fs
adc
cli
aaa
mov
stos
inc
stos
loope
ljmp
aad
imul
mov
rcll
mov
xor
add
jle,pt
aas
sbb
pop
test
add
ja
test
lods
sbb
xchg
repnz
inc
sub
out
bound
std
push
dec
xor
push
push
mov
insl
popl
xor
adc
jecxz
and
inc
add
sbb
decl
xchg
cli
decl
mov
neg
sub
sub
pushf
btr
lea
add
shl
shld
stc
mov
not
call
dec
pushf
pushf
not
bt
stc
stc
rol
pusha
pushf
jmp
mov
lock
mov
add
loop
shrl
dec
mov
jb
sub
push
mov
sbb
inc
jb
repnz
pop
xor
ss
xor
push
fimull
add
repnz
add
push
sub
scas
jae
push
cwtl
dec
xchg
clc
std
stc
lods
fxch
mov
inc
sbb
and
adc
in
mov
lcall
or
imul
fistl
add
movsb
lcall
sbb
push
push
add
fbstp
add
mov
movl
jmp
sbb
rcrl
repz
cmp
shll
jg
in
mov
cmp
leave
scas
movsl
xor
in
mov
sbb
xor
ret
dec
mov
fs
xor
stc
call
out
call
mov
pusha
seta
lods
shr
call
push
pusha
and
pusha
add
movw
lea
jmp
pop
push
mov
pushl
ret
lea
call
call
pushf
lea
jbe
add
mov
shld
sbb
add
adc
mov
shl
rcr
dec
pusha
add
neg
setge
cmp
movl
bsf
add
bswap
mov
sub
jmp
push
call
repz
out
push
movsl
pushf
adc
out
mov
push
or
inc
jno
sarb
daa
push
or
lods
mov
arpl
leave
fmull
aaa
mov
jnp
out
bndldx
mov
mov
xchg
jmp
xchg
ds
sbb
mov
sbb
dec
adc
push
xchg
loopne
xchg
jb
sbb
inc
icebp
inc
out
push
jl
leave
into
fs
pop
push
das
out
fisubrs
and
in
jns
adc
stos
adc
push
mov
sti
push
fisttpl
pop
pop
push
sbb
push
push
mov
or
fs
xor
xor
mov
call
pushf
movl
push
pusha
mov
push
lea
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
es
call
add
incb
loopne
orb
mov
les
test
and
popa
shrb
dec
cmp
aam
mov
mov
dec
shlb
bsr
adc
rcll
mul
repz
xchg
mull
push
int3
pop
push
and
out
outsb
ljmp
rorl
fldl
cld
xchg
add
rolb
decl
arpl
jbe
or
mov
adc
inc
xor
dec
mov
stc
insl
mov
mov
xor
xchg
inc
adc
popf
cmp
mov
and
sbb
in
push
ds
mov
dec
jmp
or
stos
push
sub
and
lcall
adc
imul
pop
pop
gs
xchg
mov
xchg
lea
fiaddl
fs
subb
xor
pop
inc
insb
roll
lret
out
xchg
stos
hlt
jmp
xchg
mov
jnp
mov
add
arpl
or
lret
scas
loop
mov
jecxz
das
xor
lock
pop
cmpsb
shlb
mov
mov
and
xor
fimull
scas
arpl
lods
pop
stos
push
push
movsb
mov
xchg
aam
loop
arpl
fists
sub
mov
cmp
cmc
rcr
and
adc
push
push
pop
mov
fldcw
adc
add
xchg
psubsb
idivl
sahf
repnz
jne
shrd
or
mov
pusha
or
pusha
jmp
movl
pusha
movb
lea
jmp
sub
add
add
jno
add
add
add
dec
sbb
jp
sbb
dec
lret
adc
repz
add
add
add
lret
das
add
test
inc
stos
cmc
mov
ja
and
out
scas
icebp
cmp
or
dec
clc
xor
push
mov
mov
aad
mov
dec
xchg
out
fistl
popf
mov
fs
pushl
mov
loopne
add
mov
jecxz
jno
mov
fs
and
and
xchg
pop
clc
jg
mov
mov
rorb
in
and
jo
push
mov
movsl
es
mov
call
pop
int
insb
test
jp
jg
fimuls
insb
cs
scas
out
movsl
fists
add
pop
mov
arpl
xor
xchg
mov
or
jge
out
sbb
fiadds
push
mov
insb
orb
add
and
cmc
lea
jle
pushf
pusha
pushf
movl
movb
pusha
lea
jmp
call
pushf
mov
movl
push
call
je
cmp
leave
cwtl
jnp
and
pop
loope
add
jecxz
pop
ds
jecxz
mov
in
or
xor
and
sub
jae
and
push
push
inc
inc
pop
fidivrl
insb
shll
push
repnz
gs
das
add
fwait
jbe
xchg
jns
xor
adcl
mov
leave
add
daa
stc
jle
inc
mov
adc
adc
gs
xor
jl
cmp
push
andl
sbb
dec
xchg
sub
rorl
sbb
andb
aaa
xor
mov
add
shll
adc
mov
inc
xchg
cmp
or
dec
inc
pop
ss
mov
mov
xchg
jmp
pop
xor
sbb
loopne
cmp
int3
lcall
adc
adc
inc
cmp
clc
scas
rorb
xor
xchg
ffreep
add
xor
pop
cs
jg
inc
mov
cld
xor
icebp
jle
jge
mov
cmp
inc
loope
stos
mov
les
roll
rolb
mov
xchg
sbb
jns
out
xchg
add
mov
fldcw
subl
cltd
scas
stos
jnp
xor
pop
xorb
xor
pop
xchg
jge
lahf
mov
gs
xchg
mov
inc
sub
in
in
lods
call
pop
sub
fildll
xor
pop
lods
rcrl
push
xchg
aas
jecxz
push
add
in
gs
inc
sbb
mov
arpl
icebp
pmulhw
cmpb
pop
lahf
fwait
add
mov
and
sbb
shll
pop
xchg
repz
xchg
sbb
push
imul
popa
push
push
popf
adcl
adc
mov
subb
or
sbb
jns
sub
mov
call
neg
cmc
bt
ror
jmp
xor
mov
test
mov
movsl
dec
xchg
stos
in
xor
out
arpl
daa
fildll
lea
loopne
mov
or
out
and
mov
cs
fsubr
add
adc
shrb
push
add
sub
or
jecxz
inc
add
inc
or
jl
je
pop
sub
push
push
pop
adc
xchg
je
dec
inc
mov
inc
out
jecxz
dec
push
aad
push
sbb
inc
lods
jnp
mov
mov
arpl
xor
cs
add
or
outsl
and
test
sub
icebp
sub
push
lahf
movsl
or
adc
mov
adc
std
xchg
xchg
lret
inc
pop
int
adc
adc
pop
add
movsl
fdivrs
sbb
movsl
test
es
sub
pop
pop
jge
mov
insl
clc
add
cmp
jmp
lea
jne
pusha
call
stc
test
jmp
mov
movsb
in
cwtl
lds
dec
movsl
ljmp
lds
scas
push
popf
add
hlt
pop
sub
adc
sub
stos
popf
lcall
inc
lea
and
inc
inc
mov
jecxz
xchg
mov
in
adc
cwtl
adc
mov
sub
sbb
adc
jecxz
inc
outsl
scas
iret
xchg
loopne
sub
mov
jne
outsl
mov
incb
subb
mov
pop
jne
test
and
mov
rcrl
mov
sbb
sbb
inc
add
das
cmpsb
sbb
adc
pop
bound
add
lods
pop
mov
mov
mov
or
test
das
push
sbbb
clc
bswap
int
mov
dec
cmp
rcll
stos
test
mov
jecxz
icebp
pop
dec
insl
loope
js
pop
imul
mov
xchg
lret
iret
jae
cmpl
xchg
sbb
pop
add
mov
mov
sbb
iret
bswap
lea
movsbl
lea
pusha
not
pop
not
mov
mov
push
jmp
pusha
call
mov
pushf
push
jmp
stc
cmp
movb
lea
jae
btr
adc
bts
mov
sbb
mov
shl
btr
push
shrd
mov
cmp
pushf
sub
clc
movl
pushf
cmp
repnz
push
lea
jne
bt
lea
mov
cmp
mov
pushf
sar
sub
jmp
jns
rolb
mov
xchg
push
lcall
fs
mov
mov
sbb
sbb
mov
cwtl
icebp
stc
mov
je
cmp
movsl
pushf
push
lahf
lods
cltd
clc
sbb
mov
xor
mov
in
lea
cmpsb
mov
mov
jle
decl
inc
and
jg
sbb
and
lea
jmp
pushl
pushl
pushf
mov
movsbl
jmp
pushf
jmp
jmp
call
push
call
mov
mov
pushl
call
mov
pushf
pushl
ret
movb
clc
bt
mov
bt
cmp
bsf
mov
cmp
cmp
jmp
test
push
push
call
jmp
cmc
push
pusha
or
push
movw
pushl
lea
je
call
movl
pushf
pushl
movw
pushl
lea
jmp
mov
mov
mov
pushf
pusha
inc
setns
pushf
mov
lea
pushf
call
push
add
lret
addl
jnp
mov
push
rcrb
mov
add
sbb
mov
out
jmp
and
xor
sbb
push
scas
add
xchg
push
stc
outsb
cli
adc
mov
jmp
inc
fwait
inc
mov
sbb
rcl
mov
test
jmp
rolb
pusha
test
dec
mov
add
mov
push
mov
cwtl
jge
mov
pop
adc
push
jno
xchg
jp
fcomps
sbb
jbe
lret
mov
pop
aaa
and
cmpl
mov
pop
in
sub
jne
loope
pop
sbb
sbb
mov
sarb
pop
and
loope
adc
in
push
shrb
call
es
fmuls
sub
in
xchg
fiaddl
enter
mov
js
lcall
cmpl
adc
mov
push
mov
cmc
dec
jecxz
dec
cwtl
or
cmp
shlb
orb
lods
mov
push
inc
stos
fbld
scas
sbb
xchg
pop
mov
mov
fs
and
sti
std
addr16
loope
dec
mov
movsb
test
cmp
xor
cmp
inc
lret
testb
daa
leave
hlt
cltd
jmp
into
jb
mov
in
in
push
push
dec
mov
daa
xchg
push
inc
cwtl
rcrb
daa
aam
scas
add
pusha
dec
cld
test
xchg
stc
push
cmpsl
adc
push
inc
lock
jg
shrb
pop
movsb
pop
stc
xor
pop
adc
sbb
fnstsw
push
lds
push
dec
inc
and
jmp
xor
das
jecxz
xor
lahf
xor
inc
or
pop
mov
lahf
jp
dec
movsl
test
sbb
lods
sub
movhps
sub
xchg
mov
fs
out
jmp
mov
clc
test
test
cmpb
jmp
push
lea
jae
shl
stc
lea
mov
xadd
movsbw
mov
inc
rol
mov
jmp
jmp
movsbw
call
pop
cmp
icebp
jnp
imul
std
add
fstpl
pop
mov
cmp
ret
xor
adc
sarl
cmp
mov
inc
enter
push
jge
mov
ret
xor
dec
push
pop
or
fidivs
mov
pop
or
xor
dec
std
stc
inc
mov
dec
in
in
push
repz
aam
ja
repz
mov
adc
mov
loopne
add
mov
sar
mov
call
add
dec
gs
popa
addr16
outsl
js
add
adc
mov
jge
repnz
adc
mov
loope
sbb
mov
inc
data16
xor
pop
mov
dec
and
fistps
push
mov
call
xchg
inc
cmpsb
fdivrl
adc
arpl
clc
inc
mov
cmpsb
mov
stos
mov
not
mov
push
test
cmc
and
jmp
call
pushf
lea
jne
aad
pusha
sub
shr
mov
inc
pushf
add
cmc
ror
mov
bt
test
call
popa
es
scas
and
mov
lret
pop
mov
inc
cmp
enter
adc
inc
imul
mov
dec
fbld
leave
inc
push
es
xor
out
add
scas
sub
scas
push
outsb
leave
mov
dec
test
mov
and
clc
test
flds
mov
mov
cmp
jmp
outsl
test
aaa
loope
leave
aam
sub
filds
into
and
fwait
call
ficomps
movsb
inc
push
adc
push
jmp
or
int3
mov
mov
test
imul
push
imul
dec
add
fs
mov
mov
outsl
mov
sahf
stos
or
fwait
lods
mov
sbbl
testb
add
nop
out
mov
mov
sbb
jbe
mov
dec
add
mov
sahf
test
prefetch
test
fldl
jnp
fs
pop
iret
xor
cmp
pop
xchg
lock
test
inc
or
push
xchg
arpl
stc
push
dec
inc
or
push
mov
out
mov
fnstsw
insl
cmp
sbb
cmp
into
push
pusha
xchg
fdiv
mov
jns
and
xor
lods
dec
mov
pop
pushf
call
lea
jne
call
mov
fisubrl
mov
test
or
fwait
mov
fidivrs
fisubl
jmp
cmp
inc
fidivs
xchg
mov
stos
nop
scas
mov
sub
cmp
mov
ret
out
xor
aaa
insl
mov
arpl
insb
scas
push
xchg
push
add
mov
repz
jbe
addr16
fs
and
adc
push
and
and
xorb
loope
xchg
loop
adc
push
seto
fisubrl
sbb
pop
adc
push
mov
clc
fimull
and
mov
push
pop
pushf
outsb
test
jl
out
xor
icebp
rcll
mov
aaa
pop
sub
jl
out
push
pop
xor
insb
push
lret
and
lods
fwait
test
lods
or
movsb
sub
dec
out
xchg
jns
add
fstl
fcomp
cli
cmp
mov
and
lods
inc
mov
pop
js
add
pushf
adc
mov
and
ret
and
movsb
push
add
and
fdivl
sti
scas
daa
mov
adcl
xor
push
lea
mov
das
hlt
push
inc
and
dec
ljmpw
inc
xchg
mov
mov
pop
add
lahf
and
cmp
or
addl
lods
fndisi(8087
xor
add
xchg
push
inc
pushl
push
jg
and
mov
mov
fdivl
ljmp
aam
pop
mov
add
jo
das
push
popf
sarb
jno
jge
fwait
lret
pushf
sub
mov
adc
repz
mov
mov
pushf
mov
inc
add
xorl
pushf
movzwl
bsf
mov
pusha
pushf
cmc
movb
add
test
cmc
bt
push
mov
push
test
jmp
xchg
subb
sbb
mov
add
cmp
cmp
lea
divl
jg
xor
lcall
and
pop
daa
es
pop
jle
roll
mov
hlt
or
cmp
cltd
xchg
imul
or
pop
mov
lea
jae
pusha
pusha
cmc
jmp
lahf
bswap
movsbw
lea
push
call
pusha
lea
call
test
bt
clc
test
sub
jmp
dec
lock
inc
lods
lock
sub
fisubrs
cmp
stos
clc
sti
mov
mov
push
sub
les
sbb
iret
pop
mov
mov
cld
xchg
cld
rorl
cmp
lret
loope
popf
push
push
popf
or
mov
xchg
add
sbb
outsl
popf
mov
insb
dec
iret
ror
pop
and
xchg
pop
add
cld
js
negl
adc
cwtl
mov
pop
lret
lret
mov
test
mov
lods
idivb
pop
adcl
in
or
fcoms
and
int3
xchg
loop
or
imul
rcr
sbb
push
xlat
outsb
xor
jl
sub
pop
inc
sub
repnz
add
sub
lret
inc
movhps
and
repz
cmp
popf
loopne
inc
add
repz
divps
cmp
jmp
jno
test
lock
mov
aad
mov
mov
mov
dec
xor
sub
insl
xchg
jno
jge
out
lcall
and
sbb
add
pushf
add
sbb
out
xor
fldl
aas
add
rorl
sub
pushf
push
jmp
xchg
pusha
pushl
movb
movl
push
pushf
jmp
call
pusha
jmp
jmp
inc
rcrl
cli
xchg
xor
out
gs
sbb
cli
sahf
inc
mov
dec
push
popf
mov
mov
add
orb
xadd
ja
sbb
pop
add
pop
cmpsl
mov
push
sbb
pop
popf
add
and
out
adc
shll
xchg
in
inc
mov
push
dec
mov
cmp
gs
xorl
outsb
scas
lock
xor
daa
cmp
bound
sub
xor
dec
xor
jo
outsb
mov
data16
lds
mov
mov
push
pop
punpckhbw
pop
add
repz
das
mov
and
and
cltd
or
xchg
add
xor
inc
in
pop
xchg
jns
xchg
addr16
mov
adc
lods
cmp
push
dec
fsts
dec
xchg
in
shll
out
icebp
inc
in
mov
adc
cmp
repz
fldcw
ljmp
imul
fadd
repz
ljmp
ja
ss
dec
jge
or
lret
test
scas
xor
xor
adc
vmaskmovdqu
jmp
add
pop
mov
mov
lods
stos
lock
mov
xchg
push
jnp
cwtl
sbb
pop
sub
gs
nop
and
push
es
aam
dec
mov
push
and
inc
cli
cmp
pop
and
int3
and
xor
repz
sub
sbb
mov
fs
push
jecxz
leave
add
dec
cld
push
stc
clc
stc
cmp
jmp
jmp
pushl
dec
lea
jl
pusha
lea
jne
bsf
test
bt
mov
push
sub
ja
cmc
cmp
call
xchg
cwtl
lahf
call
sbb
mov
and
out
and
jp
cmp
mov
push
movsb
push
inc
out
popa
faddl
inc
lods
sbb
insb
xor
fucomip
mov
sahf
add
and
scas
sub
jmp
cld
int3
fcomps
jb
imul
fldenv
cmp
adcl
rclb
imul
sbb
repnz
ja
fbstp
pusha
setp
stos
rcrb
mov
push
cmp
fimuls
es
inc
bound
inc
iret
pop
push
out
cmp
pushf
cltd
aam
mov
insl
and
fcomip
add
in
lods
inc
cmc
mov
test
add
cmc
jmp
jmp
iret
cmp
mov
fiaddl
pop
dec
aam
xor
in
mov
pop
xor
dec
mov
lcall
es
pop
lods
cwtl
or
sub
sub
js
pop
fsts
test
add
daa
lcall
jle
cmc
incl
stos
aaa
sub
dec
clc
push
pushf
movw
lea
jmp
add
inc
insb
insb
inc
jne
arpl
outsb
inc
popa
insb
insb
add
in
dec
xchg
or
and
jmp
cmpsl
sub
jne
jg
addr16
stos
sbb
inc
inc
or
lods
insb
clc
push
add
xchg
jns
dec
pop
out
pop
jno
ret
mov
mov
or
cmp
imull
filds
mov
testl
cs
and
mov
mov
stos
inc
outsl
pop
and
sub
popf
xor
sbb
in
fimuls
add
push
cmp
int3
leave
sti
mov
jmp
sbb
aad
add
cwtl
pop
mov
adc
sar
xchg
jnp
sbb
cmc
dec
mov
xchg
xor
cmp
dec
lcall
cmp
psraw
mov
jp
dec
stos
aas
cmp
pusha
sub
mov
sub
int
sub
mov
mov
arpl
sbb
out
xchg
xchg
push
fidivl
sub
cmc
popl
fs
gs
cld
lahf
addb
imul
sbb
insl
push
lods
jecxz
enter
jo
shl
aas
inc
aaa
and
into
cli
lock
enter
lods
or
popa
dec
push
ret
adc
push
pop
add
xlat
add
rorl
addb
addr16
rcll
ret
loope
add
push
add
and
push
pushf
movl
push
movl
pushf
mov
lea
jmp
mov
cmp
sbb
into
rcrl
add
sbb
jp
adc
sbb
dec
add
mov
dec
aas
shlb
enter
sbb
pop
xchg
adc
enter
sbb
rsm
add
mov
mov
pop
push
mov
mov
jo
push
decl
dec
mov
mov
inc
das
fsubr
add
sbb
ffreep
cmp
add
or
xchg
sbb
cmp
pop
lock
adc
xchg
add
mov
push
enter
lock
test
out
jne
inc
add
or
xchg
sbb
sahf
add
add
xchg
repnz
lock
js
push
adcl
mov
sbb
icebp
cmpb
push
enter
push
outsb
jle
adc
add
or
xchg
sbb
movb
mov
push
icebp
sbb
enter
sbb
fmuls
cwtl
mov
mov
bound
add
or
mov
es
jno
mov
pop
lock
sbb
sbb
mov
add
mov
mov
xchg
xchg
fdivs
xchg
sbb
push
add
sbb
xchg
add
or
mov
mov
cwtl
pop
enter
sbb
outsb
push
cli
push
je
sbb
scas
nop
flds
mov
ret
add
or
xchg
sbb
enter
add
or
mov
adc
mov
enter
sbb
cmp
dec
add
or
sbb
bound
lock
sbb
imul
sbb
mov
pop
enter
sbb
mov
add
rol
inc
stos
dec
xchg
bound
pop
ja
pop
repz
rorb
arpl
test
inc
xor
xor
jmp
and
fxch
enter
in
jb
mov
into
adc
mov
cli
xchg
mov
repnz
and
lods
pop
mov
mov
pop
mov
es
mov
fs
and
or
das
jp
push
mov
mov
mov
or
sub
push
mov
cwtl
mov
ret
fldcw
dec
mov
sbb
cmp
movsl
jo
test
pusha
leave
mov
sub
jbe
mulps
or
xchg
andb
inc
mull
das
fcmovb
mov
repz
sub
cmp
in
imull
xchg
jns
imul
in
je
aaa
test
push
das
pop
jb
dec
sub
scas
loope
pushf
mov
or
xor
ljmp
imul
and
call
bound
dec
push
push
loopne
pop
call
stc
fsts
pusha
mov
push
adcl
mov
push
pop
xor
pop
bound
inc
dec
pop
lcall
clc
cmp
pop
cmp
aad
sbb
mov
rcrb
mov
mov
cmp
mov
jl
inc
out
lcall
test
ss
mov
mov
js
mov
lods
or
daa
mov
ret
mov
lea
call
clc
clc
push
cmp
pushf
pusha
lea
jae
cmp
pusha
cmp
mov
pusha
lea
jae
cmc
pusha
cmp
jmp
clc
stc
rol
cmp
xor
call
pusha
movb
movl
jmp
shll
sub
repz
mov
jo
inc
push
scas
add
pop
dec
xor
cmp
je
mov
lock
sub
icebp
stos
push
xlat
sti
adcb
mov
cmp
lds
pop
and
xchg
aam
pop
pushf
add
scas
popa
loop
dec
lods
es
orl
adc
lahf
nop
movsl
sti
jne
and
mov
push
jecxz
and
xchg
xchg
push
out
lcall
and
fldt
push
out
cli
jns
movsl
dec
jmp
xchg
out
cmc
pop
pop
jns
add
inc
dec
std
pop
xchg
xchg
jmp
sbb
sbb
xchg
push
lods
lahf
cs
cltd
rcl
inc
inc
stos
jbe
ja
ret
jbe
adc
jno
inc
lea
shrl
fs
xor
lea
ja
movsbw
seta
setbe
pop
lea
pusha
mov
jmp
push
sub
lea
pusha
pushf
movw
inc
lea
jmp
jno
stos
mov
dec
fcompl
mov
adc
pusha
push
clc
es
xor
sub
cmp
and
cmp
and
int
lcall
and
push
adc
mov
pop
jg
out
push
jnp
pop
cmpsl
fistl
arpl
fs
jecxz
imul
sbb
fs
jmp
sti
incl
add
lahf
xor
push
sub
xor
imul
stos
jg
adc
lock
inc
daa
fmuls
icebp
pop
and
or
in
sarl
scas
and
in
sti
dec
push
xchg
popa
ds
sub
mov
jge
sahf
add
add
stos
push
dec
ret
mov
add
sbb
enter
cltd
or
lcall
cwtl
rclb
dec
clc
stos
and
jecxz
xchg
arpl
nop
and
sbb
dec
and
push
jp
xor
imull
incl
jbe
lcall
and
out
jo
fs
inc
and
dec
cmc
shl
push
mov
jmp
pop
pop
negl
ss
and
test
stos
int3
sbb
cmpsb
lods
es
add
ja
cmp
lods
fwait
aas
xchg
cmp
push
xor
in
repz
jno
sahf
rcl
mov
jg
xor
rorb
pop
sub
popf
push
int3
xchg
inc
dec
adc
add
in
loop
repnz
lock
and
fs
stc
cmp
jmp
call
enter
call
pop
mov
add
cmc
or
xlat
push
mov
mov
xor
or
sbb
jo
lcall
daa
sbb
jb
ds
jno
lret
nop
sarb
nop
iret
adc
xor
add
mov
and
test
cmp
cmc
fs
test
call
ror
pushl
pushf
pushf
pushf
dec
clc
cmc
cmc
pushf
not
cmc
pushl
rol
pushl
mov
jmp
mov
pushf
dec
lea
jmp
sub
cmp
call
push
cmp
test
push
call
ror
push
stc
bt
sub
stc
call
cmc
sub
cmp
cmp
call
push
push
movl
pusha
pushf
pushl
pushl
lea
jmp
movzbw
pop
pushf
pusha
pusha
mov
pushl
ret
lea
jne
sub
rcl
sar
sub
rcl
mov
shl
shl
add
mov
mov
test
test
call
rclb
xchg
adc
je
xchg
dec
test
sti
gs
aaa
add
mov
xor
test
lea
out
adc
jns
lds
mov
jge
jo
test
idiv
xchg
sti
test
push
cmp
pop
add
mov
mov
movb
mov
xlat
stos
add
or
jae
movsl
inc
arpl
sub
lods
test
dec
ficoml
or
add
push
inc
add
xor
sub
jmp
pop
jge
push
lret
lahf
inc
and
les
repnz
jg
xchg
call
jbe
jmp
sbb
je
xlat
pop
jmp
fildl
mov
push
and
push
mov
mov
push
movsbw
not
mov
movsbl
not
movzbw
repz
popl
push
jmp
mov
pushf
popl
call
call
sbb
mov
test
not
pushf
stc
cmp
test
not
add
jb
stc
cmp
and
pushf
jmp
mov
jmp
pushl
popl
pushf
pushf
pushf
lea
jmp
jmp
push
jmp
cwtl
mov
pusha
mov
mov
mov
call
pushf
popl
jmp
mov
not
mov
movzbl
pusha
mov
mov
pushf
pushl
ret
pusha
push
pushl
popl
pushf
pushl
lea
jmp
call
bswap
lahf
stc
bts
mov
stc
test
cmc
call
test
call
cmp
sub
movw
movb
push
mov
mov
lea
jmp
jmp
pusha
push
pushf
mov
pushl
push
lea
jmp
not
clc
pushf
test
stc
not
lea
jg
test
sub
stc
bt
cmp
bt
and
call
mov
push
lea
jmp
jmp
movzbw
call
movzbl
xchg
bswap
movsbw
pop
mov
push
bswap
movzbl
pushl
popl
movsbl
movl
movsbw
dec
pushf
jmp
mov
jmp
mov
pusha
pushf
lea
jmp
bt
shl
mov
stc
cmp
sar
mov
jmp
jmp
pushf
mov
push
jmp
push
push
mov
std
call
mov
pushf
lea
jmp
mov
cmc
push
mov
add
pushf
shrd
push
pushl
jmp
mov
pushf
pushf
pushl
lea
jmp
pusha
jmp
add
pushf
pushf
call
xor
mov
cmc
adc
stc
mov
cmp
sub
call
pusha
mov
movw
pushf
mov
lea
jmp
cmc
sub
movb
cmc
ror
bt
cmp
neg
jmp
pushf
pusha
push
pushl
popl
pushf
movb
lea
jmp
cmc
cmp
cmp
call
call
clc
rol
clc
push
stc
pushf
add
bt
xor
clc
mov
cmc
mov
cmp
add
je
clc
clc
sub
push
mov
mov
push
pushf
lea
jmp
clc
or
mov
cmc
or
cmp
sub
pusha
and
bts
sub
xor
pushf
neg
push
call
mov
pusha
push
lea
jmp
test
bt
cbtw
cmp
cwtl
cmp
sub
call
bsf
stc
mov
rol
sub
mov
pusha
add
lea
jns
pusha
pushl
mov
push
pushf
push
lea
jmp
call
btc
bsr
bsr
neg
mov
bt
test
shr
xor
movsbw
movsbw
add
movsbw
pusha
rol
rcr
jmp
call
push
mov
call
pushf
pushf
popl
jmp
dec
jmp
jmp
sub
call
mov
push
dec
cmp
neg
clc
xor
stc
test
clc
jmp
mov
neg
pusha
pushl
dec
jmp
mov
pusha
lea
jmp
xor
stc
cmp
sub
cmc
call
lea
push
call
add
pushl
call
mov
call
shl
call
mov
push
pushf
dec
lea
dec
xchg
inc
push
movsbl
pushl
call
jmp
jmp
mov
pushf
dec
movzbl
btc
cmc
mov
ror
not
push
call
call
pusha
clc
sub
lea
jb
pusha
pusha
mov
pushf
pushl
pushf
push
lea
jmp
shl
sar
or
or
mov
lea
jmp
jmp
divl
jmp
push
sub
mov
movb
mov
test
shr
pushl
mov
call
sub
cmc
xchg
cmc
pushl
cmc
mov
mov
clc
call
mov
pushf
call
dec
test
cmp
cmp
cmp
neg
cmp
clc
clc
xor
push
clc
call
shl
inc
and
movzbl
cmp
call
lea
mov
call
mov
movsbw
pushf
xchg
inc
not
dec
call
mov
jmp
push
jmp
pusha
push
pushf
mov
pushf
movb
pushf
lea
jmp
push
mov
mov
pusha
lea
jmp
pushl
popl
mov
mov
lea
jmp
call
sar
cmc
neg
notl
call
pop
pusha
mov
pushf
pushf
lea
jmp
mov
jmp
mov
pushf
pushl
mov
push
mov
pushf
pushf
jmp
add
pushf
mov
call
push
setns
mov
push
pusha
lea
jmp
xchg
movzbw
mov
movzbl
repz
popl
push
movw
mov
jp
movsbl
push
not
mov
pusha
bswap
mov
jmp
clc
bt
jmp
cmc
mov
clc
inc
not
mov
stc
sub
call
mov
xchg
pop
mov
call
mov
mov
dec
lea
ror
pop
movsbw
pushl
jmp
pusha
movb
pushf
popl
push
pushl
popl
push
pushf
pushf
push
lea
jmp
pushf
pusha
shr
movb
jmp
pusha
mov
movb
pushl
pushf
lea
jmp
push
cld
jmp
not
jmp
js
pusha
push
mov
pusha
lea
jmp
cwtl
aad
bsr
mov
pusha
call
bswap
mov
push
movl
dec
bt
stc
xor
test
sub
bt
pushf
bt
sub
movw
pushl
mov
pusha
lea
jmp
shld
rcr
shl
cmp
mov
clc
add
pusha
lea
jmp
jmp
push
call
ja
dec
pusha
shrd
mov
stc
bt
cmc
test
add
pusha
lea
jmp
pushf
pusha
jmp
jmp
mov
movsbw
xchg
jmp
mov
pushf
mov
movw
movw
pushf
popl
jmp
pushf
jmp
push
neg
bt
mov
cmc
rcl
mov
clc
sub
jmp
mov
inc
pushl
popl
mov
movl
movsbl
xchg
inc
mov
movsbw
lea
movsbw
dec
push
movsbw
pushl
bswap
ror
movzbw
pushf
not
not
jmp
add
push
pushf
pusha
movb
lea
jmp
pushf
mov
mov
push
call
call
pushl
popl
mov
pusha
lea
jmp
btc
mov
shr
sub
rol
bsr
mov
dec
push
sub
ja
mov
mov
call
test
shl
rcl
xorb
jmp
sub
call
pushf
pushf
call
cld
mov
rep
pushl
bswap
bt
xchg
mov
sar
shr
btr
mov
jmp
pushf
popl
jmp
rcr
inc
and
xor
mov
pushf
call
xchg
pushf
call
pushf
mov
pushl
movw
mov
call
jmp
mov
sub
call
inc
pushl
popl
pushf
movl
call
jmp
shl
mov
test
pushl
pushf
jmp
cwtl
pushf
add
pusha
push
call
push
mov
push
lea
jne
push
mov
mov
pushf
and
test
test
sub
jns
cmp
push
call
mov
movb
pushl
pushl
mov
lea
jmp
lea
mov
push
dec
cmc
pop
ror
bswap
not
jmp
pushf
popl
pusha
pushl
popl
pushf
movw
lea
jmp
cmc
mov
jmp
lea
jae
push
pusha
call
test
shrd
rdtsc
clc
pushf
pushl
clc
sub
jmp
call
push
mov
call
xchg
mov
shr
cmp
call
mov
pushl
jmp
pushf
mov
pusha
call
movzbw
not
call
jmp
cwtl
pusha
mov
setbe
mov
mov
call
pushf
pushf
popl
jmp
pushf
clc
lea
ja
shr
pushf
jmp
call
call
mov
push
jmp
dec
sbb
or
mov
cmp
test
cmc
xor
push
neg
pusha
pusha
movb
dec
pushf
cmc
call
mov
push
mov
pushf
mov
pushf
jmp
shl
pushf
jmp
pushl
dec
jmp
mov
movl
pusha
push
lea
jmp
rcr
not
mov
adc
clc
mov
cmc
jmp
movzbw
call
lea
lea
js
pushf
pusha
mov
pusha
mov
push
lea
jmp
add
not
shl
and
mov
ror
mov
jmp
sete
xchg
mov
call
jmp
sub
clc
cmp
sub
cmp
jmp
jmp
bswap
bswap
lea
mov
push
dec
btc
btr
ror
lea
bswap
jmp
movl
xchg
mov
pushf
dec
push
pop
ror
not
movzbl
lea
not
not
lea
push
pushf
pushf
pushf
lea
jmp
cmc
movzww
jmp
sbb
mov
clc
shl
bt
mov
call
pushf
push
call
lea
push
push
movl
lea
jmp
btr
lea
bt
push
add
and
bts
bswap
sub
jmp
pushl
popl
push
mov
lea
jmp
bswap
pushf
dec
bt
call
jmp
not
pushf
pushf
lea
pushf
mov
push
push
lea
jmp
add
mov
lea
jmp
sbb
not
movzbl
cmc
pushf
call
call
pusha
mov
pushf
popl
pushf
pushl
popl
movl
pushl
lea
jmp
btc
mov
rcl
sbb
test
pushf
mov
sub
jg
stc
sub
test
cmc
push
pushf
shr
pushf
mov
pusha
pushf
popl
movb
call
call
push
mov
lea
pushl
pushf
mov
call
mov
setns
inc
mov
movzbw
inc
xchg
bswap
pushl
dec
lea
pushl
popl
lea
movsbw
bswap
xchg
movl
not
dec
mov
lea
inc
push
dec
bts
ror
clc
add
bswap
shl
not
movsbw
bsr
test
rcr
lea
lea
call
pusha
pushf
lea
ja
test
aad
neg
mov
call
cld
call
pushf
call
sbb
call
call
pushf
mov
not
lea
not
repz
popl
movsbl
pusha
mov
jmp
dec
not
mov
push
pop
xchg
pop
pushl
popl
xchg
movsbl
movl
call
mov
pushl
movb
pusha
pushf
mov
pushf
call
pusha
mov
mov
movsbw
not
movzbw
xchg
pusha
push
mov
inc
xchg
pushl
popl
not
lea
movl
bswap
mov
movsbw
bswap
dec
pushf
stc
ror
mov
not
bswap
movsbw
lea
pushf
pushl
lea
jmp
pushf
pushf
lea
jne
sub
mov
pusha
push
and
bt
lea
jnp
clc
stc
cmp
jmp
call
pop
push
pushf
popl
movzbw
lea
call
pushf
cmc
add
call
dec
sar
movsbw
mov
adc
sbb
add
push
setge
pushl
setb
mov
pusha
pushf
mov
push
pushf
pushf
lea
jmp
pushf
pushf
mov
movw
push
mov
call
pusha
pushl
lea
ja
mov
push
lea
jmp
sar
sar
and
mov
cmc
stc
jmp
lea
jne
xor
movsbw
xorb
mov
movzbl
pop
pushf
pushf
pushf
pusha
lea
jmp
rcl
rcr
sar
movzbl
pusha
test
jmp
not
push
mov
bswap
mov
not
xchg
jmp
lea
movb
lea
jmp
mov
jle
push
mov
pushf
popl
pushf
call
jmp
mov
pushf
pushf
movw
mov
not
push
mov
bswap
pushf
pushf
bswap
repz
popl
jmp
mov
inc
mov
pushf
inc
xchg
call
jmp
pusha
pusha
jmp
jmp
dec
pusha
test
mov
stc
call
pusha
or
pushl
lea
je
call
pushl
popl
pushf
movb
pushf
push
lea
jmp
push
movb
mov
pushf
mov
call
push
mov
jmp
pusha
pusha
dec
pushf
cmp
stc
test
sub
movw
cwtl
cmp
add
pushf
jmp
or
pushl
bt
pushf
push
xor
call
not
movsbw
push
lea
bswap
lea
pushf
movb
push
push
lea
jmp
jmp
pushf
popl
pushf
pushf
pushl
popl
movw
pushf
movb
push
lea
jmp
call
jmp
push
call
xor
lea
jb
test
test
neg
pushf
push
jmp
pusha
mov
jmp
sub
push
cmc
cmp
cmpl
pusha
jmp
lea
jno
pusha
bswap
pusha
pushf
dec
cmc
clc
cmp
xor
pushf
sub
test
sub
mov
mov
pushl
movl
pushf
movb
lea
jmp
add
jl
add
jmp
movzbw
std
rcr
mov
shr
bsr
shl
pop
bts
test
daa
inc
pop
movsbw
dec
bts
pop
btc
lahf
movsbw
ror
pop
ror
aas
sbb
pop
rcl
stc
clc
cmc
popf
setb
jmp
mov
pusha
push
lea
jmp
add
add
pusha
shrd
inc
cmc
mov
clc
stc
mov
add
pushf
pushf
popl
push
pushl
pushl
popl
pushf
push
movw
lea
jmp
mov
movzbl
movsbl
pushl
popl
pop
movl
inc
xchg
jmp
lea
jne
pushf
pushf
push
mov
movb
pushf
lea
jmp
push
movw
pushf
popl
jmp
pushl
popl
push
pusha
lea
jmp
movsbw
pushf
mov
test
pushf
add
pusha
call
pop
movw
dec
bswap
call
mov
mov
pusha
pushf
mov
push
pushf
movb
pushl
xchg
call
movzbw
lea
pushf
mov
mov
pushf
lea
jmp
bsf
mov
stc
cmp
add
pusha
mov
lea
jmp
pushf
popl
call
mov
not
pushf
pushl
popl
pushf
call
pushf
movl
pusha
movl
pushl
mov
push
movb
push
pushl
ret
cwtl
sar
mov
and
or
shr
mov
pusha
add
call
push
mov
push
mov
pushf
pushf
bswap
bswap
repz
popl
not
inc
mov
dec
not
mov
bswap
bswap
jmp
jmp
push
mov
pushf
pushf
jmp
bt
ror
pop
pushl
movzbl
movzbw
not
movsbl
movzbw
call
push
pushf
pushl
popl
mov
lea
jmp
cmc
mov
clc
sub
pusha
pusha
add
movb
movb
pushf
popl
pushf
call
clc
push
stc
sub
cmp
push
movb
shl
pushf
mov
call
mov
bswap
mov
jmp
xchg
movzbl
call
call
jmp
pushf
popl
mov
pusha
pushl
popl
pushf
push
push
movb
lea
jmp
pusha
add
jmp
movsbw
ror
movsbw
not
bswap
lea
pusha
push
lea
jmp
pushf
popl
lea
je
push
pusha
pushf
pushl
popl
movw
push
mov
movl
lea
jmp
and
sub
lea
btc
adc
sub
lea
pop
movsbw
mov
mov
bswap
pushf
not
pusha
xchg
movsbl
movzbw
not
pusha
mov
not
movw
lea
pushf
pushf
mov
xchg
movsbw
pushl
mov
movzbw
mov
std
call
push
pusha
mov
jmp
add
jmp
jmp
pop
mov
movsbl
mov
call
lea
js
jne
shrd
clc
mov
rol
xorb
bswap
push
not
movzbw
mov
pusha
pushf
push
movb
lea
jmp
stc
add
jmp
jmp
pusha
cmc
xchg
call
jmp
pushf
sub
call
call
pushf
mov
call
pusha
pusha
mov
pushf
pushf
pushl
movb
lea
jmp
mov
mov
mov
jmp
call
inc
clc
stc
stc
sub
stc
mov
pushl
clc
pushf
cmc
sub
push
bt
clc
cmp
mov
pushf
bt
add
pusha
pushf
lea
jmp
mov
repz
popl
push
bswap
call
movzbw
movzbw
lea
push
pushf
push
push
lea
jmp
dec
movl
mov
lea
jmp
call
sub
mov
call
push
movb
pushf
mov
pushf
movb
mov
mov
lea
jmp
pushf
lea
jne
bt
mov
clc
pushf
stc
and
clc
cmp
movw
cmp
jmp
mov
call
dec
ror
ror
movsbl
not
pushl
jmp
sub
bsr
movzbl
pushl
add
xor
not
neg
bswap
dec
bsr
btr
lea
dec
shl
not
neg
btc
xor
shl
movzbl
call
call
cmc
cmp
call
jmp
stc
push
jmp
aaa
mov
bt
mov
pusha
pusha
clc
jmp
test
dec
sub
mov
pusha
sub
pushf
add
call
sub
bsr
xor
cmc
mov
ror
btc
cmp
and
mov
bswap
bsf
adc
add
cmc
adc
sbb
movsbw
mov
bsf
rcl
adc
rcr
xor
movzbw
inc
seta
dec
mov
ror
rol
movsbw
add
pusha
not
dec
dec
shl
xor
movsbw
pushf
movzbl
neg
xor
mov
clc
cmp
pusha
xor
push
add
push
mov
mov
mov
pushf
mov
push
movb
pushl
ret
not
call
pusha
pushl
popl
pushf
push
lea
jmp
not
pushl
popl
movsbl
movsbw
bswap
movl
not
mov
movzbw
lea
pusha
dec
push
ror
mov
bswap
push
not
movsbw
lea
mov
mov
lea
jmp
movb
pushl
popl
movb
lea
jmp
cmp
cmp
mov
stc
push
mov
mov
sub
pusha
pushl
lea
jmp
cmp
test
cmp
sub
push
movl
push
ror
mov
movb
push
neg
pushf
lea
js
dec
jmp
jmp
pushf
push
repz
popl
inc
push
mov
bswap
mov
xchg
xchg
jmp
mov
lea
jnp
push
movw
pushf
popl
push
push
mov
pushf
pushl
popl
pushf
lea
jmp
lea
push
movb
lea
jmp
push
mov
bswap
pushl
popl
bswap
xchg
movl
mov
bswap
bswap
mov
pushf
inc
mov
call
pushl
test
cmp
sub
call
mov
movb
pushl
mov
call
movl
call
xchg
pushl
movsbw
pushf
not
mov
not
not
pushf
repz
popl
mov
pop
jmp
bt
sub
jmp
seta
not
add
call
pushf
popl
cld
mov
movsbw
push
cld
pusha
mov
pushf
movzbl
cld
lea
std
call
push
xchg
call
movl
call
neg
call
push
lea
jae
pushf
push
movb
pushl
popl
pusha
lea
jmp
pushl
popl
mov
lea
jmp
mov
inc
inc
mov
pushf
not
pop
inc
mov
pushf
bswap
not
pushl
popl
movzbw
movl
jmp
sub
stc
sub
jmp
call
mov
mov
call
jmp
clc
pushf
add
pushf
movb
pushf
push
lea
jmp
test
call
mov
mov
call
pushl
popl
pushf
mov
mov
mov
lea
jmp
pushf
popl
pusha
call
pusha
pushf
inc
pushl
popl
movzbw
pop
call
pushl
popl
pushl
lea
jmp
bt
pusha
add
pushf
pusha
mov
push
mov
pushf
pushf
lea
jmp
jmp
shrd
mov
shl
sub
xor
mov
pusha
add
call
pushf
sub
test
push
call
pushf
push
call
lea
push
pushl
pushl
lea
jmp
pushl
push
pusha
add
push
lea
jmp
call
mov
push
pushf
popl
call
pusha
pushf
movb
rep
shrd
rcr
mov
inc
mov
cmp
pushl
popf
movb
pushf
lea
jmp
pop
repz
popl
call
jmp
pushf
jmp
shl
dec
btr
mov
test
ja
pushf
clc
add
mov
pushf
pushl
lea
jmp
mov
mov
mov
pushf
mov
push
pushf
lea
jmp
jmp
bswap
bswap
inc
btr
ror
sub
dec
bswap
dec
sbb
mov
bt
cmc
add
push
mov
movb
lea
jmp
pushl
pushf
popl
jmp
call
pusha
mov
mov
mov
pushf
push
mov
pusha
push
push
call
mov
pushf
mov
call
call
movb
mov
pusha
pushf
lea
jmp
cbtw
mov
call
movb
mov
push
push
lea
jmp
mov
pushl
mov
pushf
push
xchg
lea
call
shl
push
shl
movzbw
add
bts
movsbw
bts
neg
pushf
movzbw
bts
rol
mov
bts
and
btr
cmc
movzbw
clc
mov
test
pushf
movb
stc
sub
jmp
mov
lea
jl
mov
jmp
pushf
call
rol
sbb
pushf
mov
jmp
pusha
mov
pushf
pushf
pushf
lea
jmp
mov
movw
mov
pushf
lea
jmp
dec
cmc
ror
bswap
lea
call
stc
sub
stc
stc
clc
and
pushf
movl
mov
jmp
call
mov
pusha
pushl
lea
jne
rcl
rol
clc
xorb
movzbw
jmp
pushl
popf
pushf
movw
mov
movl
lea
jmp
jmp
lea
not
movsbw
push
not
call
push
mov
push
pushf
jmp
call
push
push
pushl
lea
jne
bsr
lea
bswap
xorb
push
pop
pop
push
pusha
pushf
lea
jmp
movl
not
mov
inc
lea
call
and
or
shr
mov
call
pushf
mov
pushl
call
call
push
push
lea
jne
add
shr
push
pushf
xorb
not
lea
mov
pusha
movl
pushl
lea
jmp
pushf
pushf
mov
call
movsbw
shl
add
sub
inc
shrd
neg
btc
stc
mov
bts
rol
rcl
sub
and
rol
push
xor
mov
mov
clc
pushf
add
pushf
pushf
pushf
call
pushf
mov
push
pusha
lea
jmp
mov
movw
push
lea
jmp
pusha
bt
push
cmp
mov
lea
ja
shrd
dec
shld
mov
bt
shrd
lea
add
ror
sub
lahf
add
lea
bsf
mov
and
adc
pushf
btc
btc
sub
jmp
clc
pushl
clc
cmp
cmp
add
std
push
pushl
popf
pushf
pusha
lea
jmp
mov
call
add
pushf
mov
lea
jmp
jmp
inc
push
decl
call
push
jmp
cpuid
push
pushf
sub
stc
mov
cmpl
pusha
call
test
pusha
pusha
stc
and
mov
pushf
call
not
mov
call
lea
movl
not
xchg
pop
mov
pushf
pusha
dec
bts
call
dec
bswap
pushl
ror
mov
not
not
lea
pushl
lea
jmp
push
rol
mov
ror
push
add
pushf
call
jmp
pusha
push
mov
pushl
jmp
mov
pushl
lea
call
add
bt
mov
and
shl
add
bts
cmp
mov
xor
shl
mov
test
test
pusha
shl
pushl
cmp
shr
call
shld
lea
bsf
add
mov
stc
add
pushf
lea
jmp
mov
inc
dec
movsbw
cmc
bswap
movzbw
ror
not
mov
pusha
not
not
call
mov
mov
push
pushf
lea
jmp
jmp
aas
aaa
mov
add
mov
pusha
call
call
sub
dec
mov
cmp
bt
pushf
add
test
pushf
push
pusha
shld
movb
push
call
pushf
mov
pushf
mov
movsbl
bswap
mov
mov
movl
push
repz
popl
lea
pushf
dec
mov
mov
movsbw
pushf
mov
pushf
call
not
movzbl
lea
lea
lea
mov
pushf
pushl
lea
jmp
mov
movw
push
pushf
mov
movzbw
pushf
movsbw
repz
popl
lea
jle
pusha
bswap
mov
movsbw
call
pushf
jmp
lea
repz
popl
movzbl
bswap
movzbw
jmp
mov
jmp
shld
pushf
pushf
mov
push
push
jmp
pushf
add
push
pusha
mov
lea
jmp
pusha
pushf
mov
jmp
bswap
movsbw
mov
jmp
mov
pushf
lea
jmp
pushf
mov
jmp
shrd
bsf
mov
push
cmp
cmp
sub
call
call
mov
jmp
mov
pushf
pushf
pusha
lea
cpuid
test
cmp
bt
call
jmp
mov
jmp
clc
neg
stc
test
xor
pushf
call
jmp
bt
dec
test
movzbw
mov
call
add
movb
push
mov
lea
jmp
pushf
mov
push
call
not
dec
cmp
shl
xor
shl
mov
test
clc
pushf
call
jmp
add
pushf
pushl
lea
jmp
cmp
dec
fldenv
or
fldenv
mov
pop
fldenv
mov
daa
fsubrl
daa
jnp
fldenv
cmp
pop
fldenv
xchg
daa
aaa
pop
fldenv
mov
fldenv
mov
fldenv
mov
fldenv
mov
fldenv
mov
pop
fldenv
rcrb
daa
sahf
pop
fldenv
int
fldenv
popl
daa
icebp
js
daa
jne
fldenv
movsl
push
fldenv
popl
daa
aas
pop
fldenv
pushf
pop
fldenv
rolb
daa
rcrb
daa
movsl
push
fldenv
or
fldenv
mov
pop
fldenv
stos
push
fldenv
mov
inc
fldenv
cmp
daa
loop
fldenv
rcrb
daa
cmp
daa
jg
fldenv
popf
inc
fldenv
scas
pop
fldenv
inc
outsb
fldenv
inc
outsb
fldenv
inc
outsb
fldenv
inc
outsb
fldenv
rolb
daa
aas
pop
fldenv
stc
pusha
fldenv
mov
outsl
fldenv
insl
jnp
daa
addr16
fldenv
movsl
push
fldenv
cmp
fldenv
sbb
daa
push
pop
fldenv
xor
daa
mov
push
fldenv
mov
inc
fldenv
int
fldenv
pusha
inc
fldenv
ss
fldenv
cmp
push
fldenv
push
pop
fldenv
loop
fldenv
int
fldenv
insl
jnp
daa
sahf
pop
fldenv
aas
pop
fldenv
mov
fldenv
mov
fldenv
mov
fldenv
mov
fldenv
mov
fldenv
pushf
pop
fldenv
push
pop
fldenv
xchg
daa
idivl
daa
rcrb
daa
adc
fldenv
push
inc
fldenv
aas
pop
fldenv
cmp
pop
fldenv
int
fldenv
sbb
daa
pop
push
fldenv
rcrb
daa
pop
pusha
fldenv
addr16
fldenv
stc
pusha
fldenv
or
daa
cmp
fldenv
jnp
fldenv
mov
pop
fldenv
xchg
daa
icebp
js
daa
mov
inc
fldenv
fsubrl
daa
rcrb
daa
inc
outsb
fldenv
inc
outsb
fldenv
inc
outsb
fldenv
inc
outsb
fldenv
rcrb
daa
jnp
fldenv
insl
jnp
daa
ret
daa
xchg
push
fldenv
outsb
outsl
fldenv
cmp
jp
daa
mov
jnp
daa
ret
fldenv
cmp
fldenv
pop
push
fldenv
popf
inc
fldenv
and
pop
fldenv
xchg
daa
ss
fldenv
pop
push
fldenv
sahf
pop
fldenv
aaa
pop
fldenv
inc
fldenv
add
inc
fldenv
push
inc
fldenv
jne
fldenv
aas
pop
fldenv
ss
fldenv
mov
fldenv
mov
fldenv
mov
fldenv
mov
fldenv
cmp
daa
cmp
inc
fldenv
ret
daa
adc
fldenv
rcrb
daa
sub
fldenv
xor
daa
adc
fldenv
sahf
pop
fldenv
sbb
daa
aas
pop
fldenv
mov
pop
fldenv
xchg
daa
xchg
push
fldenv
mov
inc
fldenv
and
outsl
fldenv
xchg
push
fldenv
jnp
fldenv
jg
fldenv
adc
fldenv
movsl
push
fldenv
popf
push
fldenv
ret
fldenv
popl
daa
inc
outsb
fldenv
inc
outsb
fldenv
inc
outsb
fldenv
inc
outsb
fldenv
mov
fldenv
scas
pop
fldenv
icebp
js
daa
pop
push
fldenv
xchg
push
fldenv
ret
daa
rcrb
daa
pusha
inc
fldenv
push
inc
fldenv
stos
push
fldenv
sub
fldenv
popf
inc
fldenv
int
fldenv
rolb
daa
stos
push
fldenv
jnp
fldenv
jnp
fldenv
aas
pop
fldenv
push
pop
fldenv
popf
inc
fldenv
mov
jp
daa
icebp
js
daa
loop
fldenv
jnp
fldenv
insl
jnp
daa
test
fldenv
mov
fldenv
mov
fldenv
mov
fldenv
mov
fldenv
jne
fldenv
rcrb
daa
mov
inc
fldenv
jnp
fldenv
xor
daa
stc
pusha
fldenv
aas
pop
fldenv
idivl
daa
test
fldenv
cmp
pop
fldenv
fsubrl
daa
sub
fldenv
sub
fldenv
popl
daa
cmp
fldenv
movsl
push
fldenv
mov
fldenv
ret
daa
add
pop
fldenv
add
dec
fldenv
fsubrl
daa
or
daa
scas
pop
fldenv
movsl
push
fldenv
inc
outsb
fldenv
inc
outsb
fldenv
inc
outsb
fldenv
inc
outsb
fldenv
sahf
pop
fldenv
cmp
fldenv
push
inc
fldenv
popf
inc
fldenv
or
fldenv
cmp
daa
ret
fldenv
add
fldenv
pop
pusha
fldenv
pop
push
fldenv
mov
jnp
daa
mov
daa
cmp
inc
fldenv
insl
fldenv
jmp
bts
rcr
bswap
ror
mov
test
call
movzbw
mov
cmp
mov
jb
cmp
cmp
test
add
call
call
shl
rcr
not
mov
call
xchg
pusha
lea
xchg
not
pushf
pusha
pushl
mov
lea
xchg
jmp
xor
cmp
cmc
add
pusha
dec
pushl
jmp
xchg
bswap
std
call
not
call
push
pusha
add
test
lea
cmc
lea
jo
test
cmp
jmp
rep
movzbw
or
pop
mov
sar
shrd
mov
test
pushl
popf
mov
movb
lea
jmp
call
mov
movsbw
push
pusha
pushf
xchg
push
movsbw
mov
bswap
xchg
pushf
pushl
popl
pushl
jmp
mov
mov
call
stc
shr
jmp
pushf
mov
mov
pusha
pusha
mov
jmp
jmp
pushl
pusha
mov
push
pushf
lea
jmp
mov
jmp
repz
popl
push
mov
pushf
pushf
inc
mov
inc
mov
jmp
mov
pusha
lea
jmp
pushf
rol
clc
mov
stc
pushf
sub
jmp
call
jmp
call
mov
mov
mov
pushf
pushf
lea
jmp
bsf
cmc
mov
pushf
sub
cmc
call
mov
mov
pushl
inc
push
xchg
mov
call
mov
pushl
movb
xchg
pushl
mov
pushf
pushf
bswap
mov
repz
popl
movsbw
inc
mov
lea
movzbl
pushf
mov
xchg
movsbl
mov
movzbw
pushl
popl
movsbw
call
inc
shrd
mov
das
mov
stc
clc
add
jmp
pushl
popl
movb
mov
lea
jmp
jmp
xor
sub
add
btr
sub
jb
lea
neg
call
jmp
aad
add
mov
pushf
clc
pushl
clc
bswap
jmp
mov
pusha
call
pushf
cmp
pusha
pushf
lea
jne
call
mov
call
pusha
jmp
mov
lea
pop
lea
je
dec
lea
bswap
ror
ror
pusha
movzbw
movzbl
not
pusha
lea
movw
lea
jmp
and
mov
jmp
pushf
mov
mov
push
mov
jmp
lahf
bswap
not
pusha
mov
lea
jne
mov
jmp
mov
mov
call
sub
pushf
movb
mov
movl
lea
jmp
push
cwtl
setnp
bswap
mov
pushf
mov
mov
call
pusha
not
movl
xchg
movsbl
pop
mov
movzbw
movsbl
dec
not
pushl
ror
lea
ror
pushf
not
movw
bswap
lea
pusha
push
lea
jmp
push
lea
jne
push
sub
pushl
xchg
call
call
